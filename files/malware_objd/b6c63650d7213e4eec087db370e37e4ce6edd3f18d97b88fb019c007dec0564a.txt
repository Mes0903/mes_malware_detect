
b6c63650d7213e4eec087db370e37e4ce6edd3f18d97b88fb019c007dec0564a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401070
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	jg     0x401070
  40103e:	jmp    0x40105e
  401043:	push   0x1
  401045:	push   0x4b7c
  40104a:	push   DWORD PTR [ebp-0x28]
  40104d:	push   DWORD PTR [ebp-0x1c]
  401050:	push   0x4108
  401055:	push   DWORD PTR [ebp-0xc]
  401058:	call   DWORD PTR ds:0x42a3c2
  40105e:	mov    ecx,DWORD PTR ds:0x42a266
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x42a266,ecx
  40106b:	jmp    0x401024
  401070:	push   edi
  401071:	mov    esi,0x75108aa
  401076:	sbb    DWORD PTR ds:0x42a266,0x4c4b
  401080:	xor    eax,esi
  401082:	and    DWORD PTR ds:0x42a26e,0x59cd
  40108c:	mov    edi,0x3272f1
  401091:	mov    ecx,DWORD PTR ds:0x42a26a
  401097:	sbb    ecx,DWORD PTR ds:0x42a2aa
  40109d:	mov    DWORD PTR ds:0x42a26a,ecx
  4010a3:	add    eax,edi
  4010a5:	and    DWORD PTR ds:0x42a296,0x0
  4010af:	jmp    0x4010c3
  4010b4:	xor    ecx,ecx
  4010b6:	xor    ecx,DWORD PTR ds:0x42a296
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42a296,ecx
  4010c3:	cmp    DWORD PTR ds:0x42a296,0x1e
  4010ca:	jae    0x401113
  4010d0:	cmp    DWORD PTR ds:0x42a296,0xe
  4010d7:	ja     0x401113
  4010dd:	jmp    0x4010f2
  4010e2:	push   0x42a25e
  4010e7:	push   0x42916d
  4010ec:	call   DWORD PTR ds:0x42a3ca
  4010f2:	cmp    DWORD PTR ds:0x42a296,0xd
  4010f9:	jne    0x40110e
  4010ff:	xor    ecx,ecx
  401101:	or     ecx,DWORD PTR ds:0x42a296
  401107:	inc    ecx
  401108:	mov    DWORD PTR ds:0x42a296,ecx
  40110e:	jmp    0x4010b4
  401113:	mov    DWORD PTR [ebp-0x40],eax
  401116:	mov    eax,ds:0x42a2ca
  40111b:	sbb    DWORD PTR ds:0x42a25a,eax
  401121:	mov    eax,ds:0x42929e
  401126:	sub    DWORD PTR ds:0x42a2fa,ecx
  40112c:	mov    eax,DWORD PTR [eax]
  40112e:	mov    DWORD PTR [ebp-0x3c],eax
  401131:	inc    eax
  401132:	mov    eax,ds:0x4294ae
  401137:	and    DWORD PTR ds:0x42a26a,0x0
  401141:	jmp    0x401153
  401146:	mov    ecx,DWORD PTR ds:0x42a26a
  40114c:	inc    ecx
  40114d:	mov    DWORD PTR ds:0x42a26a,ecx
  401153:	cmp    DWORD PTR ds:0x42a26a,0x1f
  40115a:	jae    0x40119f
  401160:	cmp    DWORD PTR ds:0x42a26a,0x4
  401167:	jge    0x40119f
  40116d:	jmp    0x401180
  401172:	push   DWORD PTR [ebp-0x18]
  401175:	push   0x42a2c6
  40117a:	call   DWORD PTR ds:0x42a3ce
  401180:	cmp    DWORD PTR ds:0x42a26a,0x3
  401187:	jne    0x40119a
  40118d:	mov    ecx,DWORD PTR ds:0x42a26a
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a26a,ecx
  40119a:	jmp    0x401146
  40119f:	mov    eax,DWORD PTR [eax]
  4011a1:	add    ecx,0x507d
  4011a7:	mov    DWORD PTR [ebp-0x1c],eax
  4011aa:	xor    ecx,0x7815
  4011b0:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  4011b7:	or     DWORD PTR ds:0x42a2da,0x4fa4
  4011c1:	mov    eax,DWORD PTR [ebp-0x34]
  4011c4:	xor    eax,esi
  4011c6:	sub    ecx,DWORD PTR ds:0x42a2ce
  4011cc:	add    eax,edi
  4011ce:	and    DWORD PTR ds:0x42a266,edi
  4011d4:	mov    DWORD PTR [ebp-0x40],eax
  4011d7:	mov    eax,ds:0x42941e
  4011dc:	mov    DWORD PTR [ebp-0x40],eax
  4011df:	xor    eax,0x2e62
  4011e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4011e7:	mov    DWORD PTR [ebp-0x14],eax
  4011ea:	and    DWORD PTR ds:0x42a2de,0x0
  4011f4:	xor    ecx,ecx
  4011f6:	xor    ecx,DWORD PTR ds:0x42a2de
  4011fc:	inc    ecx
  4011fd:	mov    DWORD PTR ds:0x42a2de,ecx
  401203:	cmp    DWORD PTR ds:0x42a2de,0xb
  40120a:	ja     0x401250
  401210:	jmp    0x401229
  401215:	push   DWORD PTR [ebp-0x14]
  401218:	push   0x42a25e
  40121d:	push   DWORD PTR [ebp-0x18]
  401220:	push   DWORD PTR [ebp-0x20]
  401223:	call   DWORD PTR ds:0x42a3d2
  401229:	cmp    DWORD PTR ds:0x42a2de,0xa
  401230:	jne    0x401243
  401236:	mov    ecx,DWORD PTR ds:0x42a2de
  40123c:	inc    ecx
  40123d:	mov    DWORD PTR ds:0x42a2de,ecx
  401243:	cmp    DWORD PTR ds:0x42a2de,0x12
  40124a:	jb     0x4011f4
  401250:	mov    eax,DWORD PTR [ebp-0x14]
  401253:	adc    DWORD PTR ds:0x42a2ee,edx
  401259:	push   0x4
  40125b:	pop    ecx
  40125c:	or     DWORD PTR ds:0x42a256,0x42a2ba
  401266:	sub    ecx,eax
  401268:	and    DWORD PTR ds:0x42a2ae,edx
  40126e:	add    ecx,DWORD PTR [ebp-0x1c]
  401271:	sub    DWORD PTR ds:0x42a25a,0x29a3
  40127b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401282:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  40128c:	mov    DWORD PTR [ebp-0x18],ecx
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42a2c2
  401297:	or     DWORD PTR ds:0x42a276,eax
  40129d:	jmp    0x4035f6
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	cdq    
  4012a4:	and    DWORD PTR [ebx],edx
  4012a6:	add    DWORD PTR [ebx+0x10ba9981],ecx
  4012ac:	cwde   
  4012ad:	int    0x17
  4012af:	sahf   
  4012b0:	imul   eax,DWORD PTR [ebp-0x7d],0x47838383
  4012b7:	pop    esi
  4012b8:	add    DWORD PTR [ebx+0x38262d24],0x20
  4012bf:	xor    al,0x22
  4012c1:	cs je  0x401303
  4012c4:	jo     0x40133d
  4012c6:	shl    DWORD PTR [ecx+0x6c],cl
  4012c9:	jae    0x401337
  4012cb:	dec    ebx
  4012cc:	aam    0xdd
  4012ce:	clc    
  4012cf:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	pusha  
  4012d8:	into   
  4012d9:	pop    esp
  4012da:	push   ebx
  4012db:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012e1:	dec    esp
  4012e2:	jle    0x40132a
  4012e4:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012ea:	sub    eax,0x3dd77fe
  4012ef:	push   0x7e
  4012f1:	pop    ds
  4012f2:	in     al,dx
  4012f3:	inc    eax
  4012f4:	int3   
  4012f5:	ret    
  4012f6:	in     al,dx
  4012f7:	xchg   esi,eax
  4012f8:	sub    bl,bh
  4012fa:	xchg   edx,eax
  4012fb:	xor    BYTE PTR [esi],cl
  4012fd:	pusha  
  4012fe:	mov    dl,0x93
  401300:	aad    0x6
  401302:	ins    BYTE PTR es:[edi],dx
  401303:	fcom   QWORD PTR ds:0x37030fe5
  401309:	and    DWORD PTR [ecx+0xd],edx
  40130c:	aaa    
  40130d:	jb     0x401380
  40130f:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  401316:	lock push eax
  401318:	xor    al,BYTE PTR [ebp+0x62d14b]
  40131e:	and    eax,DWORD PTR [ebx]
  401320:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  40132a:	fwait
  40132b:	dec    eax
  40132c:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401332:	jecxz  0x401360
  401334:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40133c:	xor    BYTE PTR [eax-0x6e323937],dl
  401342:	push   0x4d6b54f5
  401347:	or     eax,0x1a470a3f
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	push   edx
  40134e:	shl    DWORD PTR [esi+0x6715d949],cl
  401354:	cld    
  401355:	imul   esp,DWORD PTR [edi-0x4c],0x0
  401359:	jno    0x401319
  40135b:	add    DWORD PTR [ebx+0x23],ebx
  40135e:	fmul   DWORD PTR [ebp+0x4b]
  401361:	push   ebp
  401362:	adc    eax,DWORD PTR [ebp+0x3315ea0d]
  401368:	iret   
  401369:	push   es
  40136a:	cli    
  40136b:	out    0xbb,al
  40136d:	stc    
  40136e:	stos   DWORD PTR es:[edi],eax
  40136f:	pusha  
  401370:	pop    ss
  401371:	sub    ebx,DWORD PTR [ebp-0x26daa827]
  401377:	icebp  
  401378:	push   ebx
  401379:	test   al,0xde
  40137b:	mov    eax,0xb07e4270
  401380:	inc    ebx
  401381:	push   esi
  401382:	retf   
  401383:	addr16 xchg ebx,eax
  401385:	lds    esp,FWORD PTR ds:0x652027ac
  40138b:	retf   0x5feb
  40138e:	int3   
  40138f:	add    dl,dh
  401391:	mov    ch,0xb6
  401393:	pop    edx
  401394:	ror    DWORD PTR [edx+0x48],1
  401397:	add    DWORD PTR [ebp+esi*4+0x45],esp
  40139b:	ror    dh,0xcb
  40139e:	jl     0x4013da
  4013a0:	mov    eax,DWORD PTR [ebx+0xc]
  4013a3:	sub    eax,0x651ad625
  4013a8:	pop    edi
  4013a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013aa:	adc    DWORD PTR [edx],eax
  4013ac:	and    edi,ebx
  4013ae:	icebp  
  4013af:	sub    al,0x78
  4013b1:	jmp    0x40139f
  4013b3:	enter  0xa479,0xe6
  4013b7:	gs je  0x401410
  4013ba:	lea    ebp,[esi+eax*1+0x67911199]
  4013c1:	jmp    0x40136e
  4013c3:	jmp    0xd9ec:0x73911580
  4013ca:	pop    ebx
  4013cb:	push   ecx
  4013cc:	cdq    
  4013cd:	cli    
  4013ce:	mov    bl,0x83
  4013d0:	dec    esi
  4013d1:	fs in  eax,dx
  4013d3:	pop    edx
  4013d4:	lahf   
  4013d5:	push   ebp
  4013d6:	lds    ecx,FWORD PTR [esi+edx*8+0x30]
  4013da:	test   eax,0xf622c324
  4013df:	enter  0x4a19,0xa4
  4013e3:	hlt    
  4013e4:	or     bh,BYTE PTR [edx]
  4013e6:	jb     0x401467
  4013e8:	sbb    DWORD PTR [esi+esi*2],0xb726ecd0
  4013ef:	fwait
  4013f0:	or     eax,0x6f9730cc
  4013f5:	test   BYTE PTR [edi-0x6e],bh
  4013f8:	push   0xffffffd7
  4013fa:	fist   DWORD PTR [eax]
  4013fc:	call   0xa65138d9
  401401:	imul   ecx,ecx,0x2c7ab58e
  401407:	xlat   BYTE PTR ds:[ebx]
  401408:	fldlg2 
  40140a:	imul   edx,DWORD PTR [esp+eax*8],0x24e8ad9d
  401411:	or     DWORD PTR [edi],ecx
  401413:	ret    
  401414:	sub    bl,BYTE PTR [edi-0x1b205f0b]
  40141a:	nop
  40141b:	sbb    al,0x60
  40141d:	cmp    edi,DWORD PTR [esi+ebp*8]
  401420:	mov    WORD PTR [ecx-0x5e],?
  401423:	data16 loop 0x40148e
  401426:	sbb    eax,DWORD PTR [eax]
  401428:	cmp    dl,BYTE PTR [ecx]
  40142a:	mov    edx,0x468febf1
  40142f:	xor    DWORD PTR [ecx],0xffffff84
  401432:	iret   
  401433:	(bad)  
  401434:	and    eax,edx
  401436:	jns    0x401457
  401438:	ficom  WORD PTR [ecx+edx*8+0x2]
  40143c:	mov    bh,0xcd
  40143e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40143f:	mov    bl,0x79
  401441:	jmp    0xa1b66ca1
  401446:	pop    ebp
  401447:	fsub   DWORD PTR [edx]
  401449:	or     bl,BYTE PTR [eax]
  40144b:	(bad)  
  40144c:	jnp    0x4013da
  40144e:	dec    edi
  40144f:	jne    0x40140f
  401451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401452:	mov    bl,bh
  401454:	out    0x59,al
  401456:	retf   
  401457:	adc    eax,0x8cdd6272
  40145c:	cs sahf 
  40145e:	xor    ecx,DWORD PTR [ecx]
  401460:	mov    ds:0x4d05c624,eax
  401465:	js     0x4014ab
  401467:	push   0xc4e8b6b3
  40146c:	rcr    DWORD PTR [ebp+0x6cae91b0],0xff
  401473:	enter  0xb6ac,0x28
  401477:	stos   BYTE PTR es:[edi],al
  401478:	xor    eax,0x3af7b87d
  40147d:	jg     0x401432
  40147f:	repnz loopne 0x401403
  401482:	mov    dl,0xc5
  401484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401485:	sub    DWORD PTR [ebx-0x4c739372],ecx
  40148b:	mov    esp,0x2a897c21
  401490:	repnz inc esi
  401492:	add    edx,DWORD PTR [ebp-0x7cd2401]
  401498:	imul   eax,DWORD PTR [edi-0x6],0xa4048b73
  40149f:	mov    dl,0x49
  4014a1:	imul   esi,DWORD PTR ds:0xda8e1584,0x3c1ab52f
  4014ab:	add    esi,DWORD PTR [eax]
  4014ad:	loopne 0x401520
  4014af:	stos   DWORD PTR es:[edi],eax
  4014b0:	pop    es
  4014b1:	xor    cl,cl
  4014b3:	test   DWORD PTR [ecx],ebx
  4014b5:	sub    edi,DWORD PTR [ebp+0x62]
  4014b8:	hlt    
  4014b9:	mov    ecx,0x7ad646ef
  4014be:	ins    BYTE PTR es:[edi],dx
  4014bf:	xchg   ebp,eax
  4014c0:	dec    ecx
  4014c1:	iret   
  4014c2:	adc    esi,0xa6cf5e70
  4014c8:	out    0xc5,eax
  4014ca:	dec    edx
  4014cb:	and    dh,BYTE PTR [ebp-0x2f518fd3]
  4014d1:	push   esp
  4014d2:	lahf   
  4014d3:	outs   dx,BYTE PTR ds:[esi]
  4014d4:	push   esi
  4014d5:	add    esp,DWORD PTR [esi]
  4014d7:	rol    BYTE PTR [edx+0x42],0xca
  4014db:	jg     0x4014c5
  4014dd:	loope  0x401477
  4014df:	sub    esp,DWORD PTR ss:[ebx]
  4014e2:	std    
  4014e3:	add    esi,DWORD PTR [esi+0x4d63bf9]
  4014e9:	ficomp WORD PTR [eax+0x23adda99]
  4014ef:	out    dx,al
  4014f0:	or     eax,0xd920b609
  4014f5:	mov    ecx,0x3f152c17
  4014fa:	adc    ebp,ecx
  4014fc:	iret   
  4014fd:	adc    ah,al
  4014ff:	or     BYTE PTR [ebp-0xe],bl
  401502:	and    dl,al
  401504:	ds retf 
  401506:	mov    bl,0xba
  401508:	mov    ebx,0xbcf601e5
  40150d:	push   esp
  40150e:	iret   
  40150f:	or     al,0x84
  401511:	jmp    0x505:0x4e9b3ddf
  401518:	clc    
  401519:	std    
  40151a:	aaa    
  40151b:	pop    ss
  40151c:	fisubr WORD PTR [edx-0x381c7814]
  401522:	jge    0x4014ac
  401524:	bound  edx,QWORD PTR [ebx]
  401526:	jge    0x401518
  401528:	adc    eax,0xc91cd229
  40152d:	push   0x40
  40152f:	out    dx,eax
  401530:	pop    eax
  401531:	shr    BYTE PTR [edi+0x121f5e04],cl
  401537:	mov    cl,BYTE PTR [esi-0x47]
  40153a:	pop    edx
  40153b:	cmp    eax,0x4164188b
  401540:	fwait
  401541:	push   eax
  401542:	cmp    al,0x1d
  401544:	adc    BYTE PTR [edi-0x40474970],cl
  40154a:	mov    esp,0x5e57c377
  40154f:	xor    esp,edi
  401551:	les    esi,FWORD PTR [ebx+0x1968330f]
  401557:	dec    ebp
  401558:	jns    0x4015a2
  40155a:	inc    edi
  40155b:	cwde   
  40155c:	daa    
  40155d:	mov    edx,0x2cc1bef6
  401562:	out    dx,al
  401563:	xor    bh,cl
  401565:	pop    esi
  401566:	arpl   WORD PTR [ebx+eiz*1+0x650dc019],cx
  40156d:	je     0x4015af
  40156f:	test   DWORD PTR [esi],eax
  401571:	dec    ebp
  401572:	jnp    0x40158e
  401574:	idiv   BYTE PTR [edx-0x1f0bd351]
  40157a:	push   es
  40157b:	and    al,0x78
  40157d:	push   ss
  40157e:	pusha  
  40157f:	(bad)  
  401580:	fs iret 
  401582:	arpl   WORD PTR [ecx+ebp*2],bx
  401585:	sbb    al,0xe8
  401587:	loopne 0x4015dc
  401589:	xor    eax,eax
  40158b:	scas   al,BYTE PTR es:[edi]
  40158c:	push   0xffffffa9
  40158e:	pop    ebx
  40158f:	push   ss
  401590:	sub    DWORD PTR [edx-0x55],0x6c631bc5
  401597:	push   esi
  401598:	jo     0x401556
  40159a:	jmp    0x7984:0x2c2fcff8
  4015a1:	popa   
  4015a2:	mov    ecx,0xea8d6a93
  4015a7:	addr16 jge 0x401581
  4015aa:	or     BYTE PTR [ecx],0xe7
  4015ad:	add    BYTE PTR [edi+0x59],cl
  4015b0:	and    al,0x27
  4015b2:	test   esi,esi
  4015b4:	jmp    0x2c31b402
  4015b9:	dec    ecx
  4015ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015bb:	or     eax,0x59314d53
  4015c0:	jge    0x401603
  4015c2:	sub    al,0x52
  4015c4:	arpl   WORD PTR [ecx-0x318495d7],ax
  4015ca:	add    al,0x46
  4015cc:	cs pop esi
  4015ce:	jl     0x401601
  4015d0:	repz into 
  4015d2:	lods   eax,DWORD PTR ds:[esi]
  4015d3:	(bad)  
  4015d4:	push   edx
  4015d5:	pop    ds
  4015d6:	jmp    0x40163e
  4015d8:	popf   
  4015d9:	mov    esi,0x5b4ac9c
  4015de:	loop   0x401642
  4015e0:	cmp    DWORD PTR [edi],edi
  4015e2:	pop    edx
  4015e3:	mov    esi,0xabd84152
  4015e8:	mov    eax,0xf459407a
  4015ed:	lea    edi,[ebx-0x4cde2c]
  4015f3:	dec    esp
  4015f4:	jg     0x401632
  4015f6:	sbb    esp,DWORD PTR [ecx+edx*8-0x74]
  4015fa:	inc    eax
  4015fb:	sbb    bh,0xa6
  4015fe:	dec    ecx
  4015ff:	fldcw  WORD PTR [ebx-0x29]
  401602:	imul   ebp,edx,0x3ae79da6
  401608:	jb     0x401638
  40160a:	scas   al,BYTE PTR es:[edi]
  40160b:	fldenv [ecx+0x9]
  40160e:	or     eax,0x7a3b4d31
  401613:	xorps  xmm4,XMMWORD PTR [ebp+ecx*1-0x3c]
  401618:	outs   dx,BYTE PTR ds:[esi]
  401619:	cmp    DWORD PTR [ebx+0x60a860bf],ecx
  40161f:	push   ds
  401620:	fwait
  401621:	jmp    0xa907:0x3c9f20ad
  401628:	add    DWORD PTR es:[edx+0x296a7a90],ecx
  40162f:	mov    ds:0x61fef4a6,eax
  401634:	mov    bl,0x59
  401636:	push   esp
  401637:	cld    
  401638:	pop    ecx
  401639:	inc    esi
  40163a:	dec    esp
  40163b:	jp     0x401624
  40163d:	popa   
  40163e:	or     ebx,DWORD PTR [edi]
  401640:	rol    BYTE PTR [edi-0x62],cl
  401643:	push   esi
  401644:	stos   DWORD PTR es:[edi],eax
  401645:	cmp    DWORD PTR [edx-0x54],esp
  401648:	jb     0x4015ce
  40164a:	(bad)  
  40164b:	mov    ebx,0x6778525a
  401650:	mov    ah,0x16
  401652:	fwait
  401653:	push   ebp
  401654:	aas    
  401655:	mov    ebp,0xa7686e39
  40165a:	inc    ebx
  40165b:	call   DWORD PTR [ebp+0xe]
  40165e:	and    eax,0xd52f00f8
  401663:	push   0x32
  401665:	test   eax,0xc55047d
  40166a:	push   ebp
  40166b:	and    ch,BYTE PTR [ebx+eiz*2+0x535bfbee]
  401672:	and    edx,DWORD PTR es:[ebp-0x538c977c]
  401679:	stos   BYTE PTR es:[edi],al
  40167a:	fs gs jle 0x4016ea
  40167e:	or     al,0x63
  401680:	push   eax
  401681:	ds je  0x401673
  401684:	fstp   TBYTE PTR [eax+0x5606b6a3]
  40168a:	inc    ecx
  40168b:	dec    ecx
  40168c:	adc    al,BYTE PTR [edx+0x604c582c]
  401692:	fldenv [eax]
  401694:	or     ebp,eax
  401696:	push   es
  401697:	lds    edi,FWORD PTR [esp+ebp*4-0x73ff1fa3]
  40169e:	jb     0x401673
  4016a0:	call   FWORD PTR [edx-0x31]
  4016a3:	in     al,dx
  4016a4:	loop   0x4016ee
  4016a6:	xchg   ebp,eax
  4016a7:	scas   al,BYTE PTR es:[edi]
  4016a8:	popa   
  4016a9:	mov    eax,0x2620b916
  4016ae:	add    bl,ah
  4016b0:	outs   dx,DWORD PTR ds:[esi]
  4016b1:	sub    ecx,eax
  4016b3:	std    
  4016b4:	fstp   TBYTE PTR [edx-0x737b8c92]
  4016ba:	sbb    bl,BYTE PTR [edi-0x4d4fa53a]
  4016c0:	add    eax,0xf94f8e03
  4016c5:	not    BYTE PTR [ebp-0x48]
  4016c8:	lds    ecx,FWORD PTR [eax+0x375fab97]
  4016ce:	mov    esp,0x842b4e3b
  4016d3:	xchg   ebp,eax
  4016d4:	cdq    
  4016d5:	mov    ?,WORD PTR [edx]
  4016d7:	cs jo  0x401739
  4016da:	sub    al,0x9f
  4016dc:	imul   edx,edx,0x24
  4016df:	add    ebx,0x64
  4016e2:	or     ecx,ebp
  4016e4:	call   0x1985f9d
  4016e9:	xchg   edx,eax
  4016ea:	dec    edx
  4016eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ec:	push   ds
  4016ed:	xchg   DWORD PTR [edi+0x77],edx
  4016f0:	arpl   dx,si
  4016f2:	pop    edi
  4016f3:	sahf   
  4016f4:	and    BYTE PTR [edx-0x3],al
  4016f7:	sti    
  4016f8:	not    dl
  4016fa:	aaa    
  4016fb:	xchg   ebx,eax
  4016fc:	inc    ebx
  4016fd:	sub    DWORD PTR [edi+ecx*2-0x59115dae],eax
  401704:	adc    bl,0xae
  401707:	sub    edx,DWORD PTR [ebx+0x191a7c62]
  40170d:	outs   dx,BYTE PTR ds:[esi]
  40170e:	out    dx,al
  40170f:	outs   dx,BYTE PTR gs:[esi]
  401711:	sub    al,0x32
  401713:	icebp  
  401714:	and    eax,0xe3dcc222
  401719:	gs jne 0x401728
  40171c:	or     eax,0xf4cc1af9
  401721:	push   edx
  401722:	or     BYTE PTR [esi],dl
  401724:	sbb    eax,0x18956b7a
  401729:	cmp    al,0x17
  40172b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40172c:	pop    esp
  40172d:	ds xchg ebx,eax
  40172f:	sub    DWORD PTR [ecx],edi
  401731:	ins    BYTE PTR es:[edi],dx
  401732:	popa   
  401733:	leave  
  401734:	iret   
  401735:	jne    0x40175d
  401737:	iret   
  401738:	jo     0x401758
  40173a:	fs pop esi
  40173c:	sbb    eax,0x8699836d
  401741:	pop    ecx
  401742:	outs   dx,DWORD PTR ds:[esi]
  401743:	fiadd  DWORD PTR [edx+0x79ce9d01]
  401749:	stos   BYTE PTR es:[edi],al
  40174a:	fdiv   st,st(3)
  40174c:	ror    edi,1
  40174e:	jno    0x40177a
  401750:	icebp  
  401751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401752:	out    0x8f,eax
  401754:	arpl   WORD PTR [ecx-0x4976484],si
  40175a:	add    al,0xb5
  40175c:	stos   DWORD PTR es:[edi],eax
  40175d:	cli    
  40175e:	mov    dh,0x79
  401760:	aam    0x28
  401762:	mov    WORD PTR [ebx],cs
  401764:	adc    ch,ah
  401766:	or     esi,ecx
  401768:	sahf   
  401769:	scas   eax,DWORD PTR es:[edi]
  40176a:	addr16 dec edi
  40176c:	mov    esi,DWORD PTR [edx+0x31]
  40176f:	(bad)  
  401770:	xchg   edi,eax
  401771:	jns    0x4017e9
  401773:	in     al,0xd8
  401775:	test   DWORD PTR [edi+0x2e69263b],esp
  40177b:	imul   ebp,ebp,0xffffffad
  40177e:	xchg   DWORD PTR [ebp-0x52],ebx
  401781:	sbb    BYTE PTR [eax+0x9],ah
  401784:	push   ecx
  401785:	ret    
  401786:	jne    0x4017ed
  401788:	pop    ss
  401789:	hlt    
  40178a:	pusha  
  40178b:	sub    DWORD PTR [ebx],edx
  40178d:	(bad)  
  40178e:	mov    edi,0xb5163209
  401793:	jl     0x401737
  401795:	inc    edi
  401796:	stc    
  401797:	(bad)  
  401798:	cmp    al,0xb5
  40179a:	mov    edx,0x68d0d97f
  40179f:	and    dh,al
  4017a1:	inc    BYTE PTR [ecx]
  4017a3:	iret   
  4017a4:	inc    ebx
  4017a5:	xchg   edx,eax
  4017a6:	jecxz  0x40178b
  4017a8:	lahf   
  4017a9:	js     0x401731
  4017ab:	pop    edi
  4017ac:	add    bl,BYTE PTR [esi-0x23]
  4017af:	enter  0xe1bf,0xf2
  4017b3:	inc    ebx
  4017b4:	mov    dh,0x37
  4017b6:	add    BYTE PTR [ebx-0x17],0x7c
  4017ba:	push   eax
  4017bb:	push   edi
  4017bc:	dec    eax
  4017bd:	mov    bl,ch
  4017bf:	push   ebp
  4017c0:	fnstsw WORD PTR [edx-0x24]
  4017c3:	push   es
  4017c4:	xor    DWORD PTR [eax+0x4],0x65
  4017c8:	mov    ?,WORD PTR [ebx]
  4017ca:	pop    eax
  4017cb:	sub    al,0xee
  4017cd:	gs sub DWORD PTR ss:[ecx],ebp
  4017d1:	cmc    
  4017d2:	push   cs
  4017d3:	sbb    esi,DWORD PTR [ebp+edi*4+0x51e7ae48]
  4017da:	mov    esi,0x4469973f
  4017df:	cmp    DWORD PTR [ebx+edi*1+0x4e5e622a],esi
  4017e6:	mov    eax,0x69c5d934
  4017eb:	in     eax,0xfd
  4017ed:	xchg   edi,eax
  4017ee:	add    BYTE PTR [ebp-0xf],0xc6
  4017f2:	out    0x79,eax
  4017f4:	aaa    
  4017f5:	shl    DWORD PTR [ecx+eiz*2+0x622bf90c],1
  4017fc:	push   es
  4017fd:	or     eax,0xf974f08a
  401802:	push   es
  401803:	ret    
  401804:	arpl   WORD PTR [ecx],si
  401806:	mov    WORD PTR cs:[ebx+0x21bb56ce],ds
  40180d:	cmp    cl,BYTE PTR [edx+edi*2+0x6a]
  401811:	idiv   DWORD PTR [ebx+edx*8]
  401814:	add    eax,0x53af3a6f
  401819:	leave  
  40181a:	mov    BYTE PTR [esi],cl
  40181c:	test   BYTE PTR [edx+ecx*8+0x6ee0722b],dh
  401823:	and    al,BYTE PTR [ecx]
  401825:	add    BYTE PTR [edi-0x7afbabe9],bl
  40182b:	(bad)  
  40182d:	adc    DWORD PTR [ebx+0x3756e06a],edi
  401833:	jno    0x4017e0
  401835:	dec    ecx
  401836:	test   ebx,esp
  401838:	xchg   esi,eax
  401839:	push   0x31
  40183b:	sub    eax,0x73c7f2
  401840:	popf   
  401841:	jg     0x4017ef
  401843:	mov    ch,0x2e
  401845:	cli    
  401846:	add    DWORD PTR [ecx],ecx
  401848:	mov    al,ds:0xc832cf09
  40184d:	xchg   edi,eax
  40184e:	or     BYTE PTR [eax+0x1ba4393],ah
  401854:	inc    edx
  401855:	mov    BYTE PTR [edx-0x5e2bcac5],0x48
  40185c:	xor    DWORD PTR [esi-0x19c7e7b3],0x61a02002
  401866:	data16 sub al,0xfa
  401869:	and    eax,DWORD PTR [ecx+0x1f]
  40186c:	jge    0x401882
  40186e:	or     eax,0xdf397375
  401873:	repnz jmp 0x3ccc:0xbaa07cbc
  40187b:	lods   eax,DWORD PTR ds:[esi]
  40187c:	push   eax
  40187d:	add    eax,0x2a690730
  401882:	into   
  401883:	dec    esp
  401884:	jb     0x4018e9
  401886:	xchg   BYTE PTR [edx-0x18],cl
  401889:	cmp    al,0x6e
  40188b:	xor    BYTE PTR [ebx+eax*1],ch
  40188e:	pop    esp
  40188f:	adc    edi,ebx
  401891:	inc    edx
  401892:	jmp    0xc721:0xf12f18a0
  401899:	xchg   ebx,esi
  40189b:	es cli 
  40189d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40189e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40189f:	out    dx,eax
  4018a0:	mov    ebx,0xea0c278d
  4018a5:	jbe    0x40187b
  4018a7:	ins    BYTE PTR es:[edi],dx
  4018a8:	cld    
  4018a9:	xchg   edx,eax
  4018aa:	jp     0x4018d0
  4018ac:	(bad)  
  4018ad:	jne    0x40183f
  4018af:	fiadd  DWORD PTR [ecx-0x298fb8bd]
  4018b5:	sub    BYTE PTR [ebx+0x67],bl
  4018b8:	js     0x401911
  4018ba:	leave  
  4018bb:	imul   ebx,DWORD PTR [ebx+0x31],0x6e
  4018bf:	pop    ecx
  4018c0:	push   esp
  4018c1:	and    eax,0xd2496944
  4018c6:	hlt    
  4018c7:	and    eax,0x67d63f71
  4018cc:	mov    al,0x26
  4018ce:	push   ebx
  4018cf:	ja     0x4018d1
  4018d1:	lods   eax,DWORD PTR cs:[esi]
  4018d3:	std    
  4018d4:	inc    eax
  4018d5:	cld    
  4018d6:	adc    DWORD PTR [eax+ebx*1],0x13b3dae8
  4018dd:	xchg   esp,eax
  4018de:	aas    
  4018df:	loopne 0x40194f
  4018e1:	pop    ebp
  4018e2:	lods   eax,DWORD PTR ds:[esi]
  4018e3:	(bad)
  4018e7:	in     al,dx
  4018e8:	das    
  4018e9:	scas   eax,DWORD PTR es:[edi]
  4018ea:	push   es
  4018eb:	mov    ah,0xf6
  4018ed:	in     al,dx
  4018ee:	imul   DWORD PTR [edx+0x76b6d6fb]
  4018f4:	paddq  mm5,QWORD PTR [ebx]
  4018f7:	mov    dh,0xeb
  4018f9:	pusha  
  4018fa:	jmp    0x40197a
  4018fc:	das    
  4018fd:	popa   
  4018fe:	dec    edi
  4018ff:	push   ss
  401900:	xchg   BYTE PTR [ebx-0x558a641b],ch
  401906:	sbb    bh,cl
  401908:	inc    ecx
  401909:	dec    ebx
  40190a:	stos   DWORD PTR es:[edi],eax
  40190b:	daa    
  40190c:	test   BYTE PTR [edi],dl
  40190e:	(bad)  
  40190f:	or     al,0x4a
  401911:	mov    BYTE PTR [edi-0x56133e59],ch
  401917:	cwde   
  401918:	pop    esi
  401919:	dec    ebx
  40191a:	stos   DWORD PTR es:[edi],eax
  40191b:	in     al,dx
  40191c:	pop    eax
  40191d:	icebp  
  40191e:	dec    edx
  40191f:	test   al,0x7d
  401921:	inc    esp
  401922:	test   eax,0x3cf77dd1
  401927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401928:	add    al,0x13
  40192a:	mov    ?,WORD PTR [edi+0x486eb5c1]
  401930:	jg     0x401935
  401932:	mov    al,0x58
  401934:	mov    edi,DWORD PTR [edx+0x10f77a72]
  40193a:	pop    ecx
  40193b:	fsubr  DWORD PTR [eax]
  40193d:	jnp    0x401955
  40193f:	xor    ebx,DWORD PTR [esp+edi*1]
  401942:	add    BYTE PTR [ebx],al
  401944:	popf   
  401945:	jmp    0x4018f9
  401947:	popa   
  401948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401949:	dec    ecx
  40194a:	bound  ebp,QWORD PTR [esi+0x12637341]
  401950:	jo     0x4019c1
  401952:	pop    esi
  401953:	test   DWORD PTR [ecx+0x45247c28],esp
  401959:	daa    
  40195a:	shl    DWORD PTR [edi+0x4c],cl
  40195d:	cmp    eax,0x8fe25225
  401962:	push   edx
  401963:	dec    esp
  401964:	lds    ebx,FWORD PTR [ebp+0x3da96689]
  40196a:	rcr    BYTE PTR ds:0x7e8f6e3c,0xfa
  401971:	call   0x3e7545bc
  401976:	adc    eax,0x8d98b8e8
  40197b:	out    dx,eax
  40197c:	pop    eax
  40197d:	pusha  
  40197e:	ret    0x2639
  401981:	lds    edi,FWORD PTR [ebx-0x23]
  401984:	int    0x15
  401986:	mov    dh,0x22
  401988:	jb     0x401931
  40198a:	cs ja  0x40196e
  40198d:	inc    edx
  40198e:	mov    cs,WORD PTR [eax+0x1]
  401991:	stos   DWORD PTR es:[edi],eax
  401992:	movzx  eax,BYTE PTR [esi]
  401995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401996:	clc    
  401997:	es iret 
  401999:	imul   ebp,DWORD PTR [edi-0x43d4db92],0x6f
  4019a0:	cmp    dl,BYTE PTR [esi]
  4019a2:	push   ax
  4019a4:	mov    BYTE PTR [edx],bh
  4019a6:	fdiv   DWORD PTR [esi-0x445f26e7]
  4019ac:	dec    esp
  4019ad:	fild   WORD PTR [eax+0xc]
  4019b0:	push   edx
  4019b1:	sbb    dh,BYTE PTR [ebx-0x24]
  4019b4:	push   ebp
  4019b5:	dec    sp
  4019b7:	out    dx,al
  4019b8:	popa   
  4019b9:	xchg   edi,eax
  4019ba:	dec    esp
  4019bb:	pop    ebx
  4019bc:	pop    ecx
  4019bd:	loopne 0x40196c
  4019bf:	sub    DWORD PTR [esi],esp
  4019c1:	jmp    0x401955
  4019c3:	dec    edx
  4019c4:	leave  
  4019c5:	inc    esp
  4019c6:	je     0x401980
  4019c8:	jmp    0x68:0x1f68934e
  4019cf:	scas   al,BYTE PTR es:[edi]
  4019d0:	(bad)  
  4019d1:	dec    eax
  4019d2:	mov    ebp,0x2e95cc27
  4019d7:	dec    ecx
  4019d8:	mov    ecx,0xc624b83c
  4019dd:	add    ah,bl
  4019df:	btc    DWORD PTR [ecx+0x48],edx
  4019e3:	mov    ebp,0x5829202e
  4019e8:	and    dh,BYTE PTR [edi]
  4019ea:	fsub   DWORD PTR [esi]
  4019ec:	xor    ecx,eax
  4019ee:	mov    eax,0xbadf6ac3
  4019f3:	inc    esi
  4019f4:	pop    ebp
  4019f5:	xchg   ebp,eax
  4019f6:	mov    eax,0xd08009bf
  4019fb:	xchg   ebp,eax
  4019fc:	pop    edx
  4019fd:	clc    
  4019fe:	pop    ebx
  4019ff:	inc    esp
  401a00:	nop
  401a01:	or     BYTE PTR [eax+0x57],0x84
  401a05:	(bad)  
  401a06:	sar    DWORD PTR [edi-0x3a528584],cl
  401a0c:	jp     0x401a02
  401a0e:	xchg   esp,eax
  401a0f:	xor    ebp,DWORD PTR [esi+0x38]
  401a12:	xchg   edx,eax
  401a13:	sbb    BYTE PTR [esi+0x4d],0xf5
  401a17:	in     eax,0xfd
  401a19:	inc    ebp
  401a1a:	js     0x401a6d
  401a1c:	jecxz  0x4019d2
  401a1e:	cmp    ah,bl
  401a20:	mov    esp,0x6bb46eaf
  401a25:	jb     0x4019f3
  401a27:	mov    ds:0x79a040cb,eax
  401a2c:	in     eax,0x75
  401a2e:	outs   dx,DWORD PTR ds:[esi]
  401a2f:	mov    dh,0x99
  401a31:	stos   BYTE PTR es:[edi],al
  401a32:	push   esi
  401a33:	inc    ebp
  401a34:	test   ebp,eax
  401a36:	ret    0xb59f
  401a39:	sub    BYTE PTR [eax+0x3c],dl
  401a3c:	mov    ebp,0x11854c2a
  401a41:	sbb    DWORD PTR [eax-0x33e3aeed],esp
  401a47:	push   es
  401a48:	dec    edx
  401a49:	in     eax,0x58
  401a4b:	pop    edi
  401a4c:	hlt    
  401a4d:	rcl    dl,cl
  401a4f:	imul   edi,edi,0x1415bf06
  401a55:	fstp   DWORD PTR [ebx+0x54]
  401a58:	xchg   ebp,eax
  401a59:	inc    eax
  401a5a:	fisubr WORD PTR [eax-0xc64515b]
  401a60:	inc    edi
  401a61:	and    BYTE PTR [ebp-0x88661c8],al
  401a67:	(bad)  
  401a68:	outs   dx,BYTE PTR ds:[esi]
  401a69:	cmp    ah,BYTE PTR [ebp+eax*1-0x5deecabc]
  401a70:	out    dx,al
  401a71:	pushf  
  401a72:	retf   0xe279
  401a75:	out    dx,eax
  401a76:	int3   
  401a77:	lahf   
  401a78:	adc    eax,0x754ef04d
  401a7d:	fs into 
  401a7f:	pop    edx
  401a81:	leave  
  401a82:	and    DWORD PTR [edi],edi
  401a84:	pop    edi
  401a85:	dec    ecx
  401a86:	mov    ecx,0xd79d564
  401a8b:	push   eax
  401a8c:	jle    0x401b0a
  401a8e:	pushf  
  401a8f:	in     al,dx
  401a90:	push   esi
  401a91:	cld    
  401a92:	cmp    BYTE PTR [esi+0xbef4ba],dh
  401a98:	lds    esp,FWORD PTR [ecx+0x7d8fd30c]
  401a9e:	stos   DWORD PTR es:[edi],eax
  401a9f:	mov    al,0x3d
  401aa1:	fild   DWORD PTR [esi]
  401aa3:	(bad)  
  401aa4:	in     eax,0xdc
  401aa6:	bound  edx,QWORD PTR ds:0xadafece9
  401aac:	cs hlt 
  401aae:	xchg   ebp,eax
  401aaf:	hlt    
  401ab0:	cmp    al,0x67
  401ab2:	fcomp  QWORD PTR [esi-0x37]
  401ab5:	fwait
  401ab6:	pop    es
  401ab7:	rcl    cl,1
  401ab9:	popa   
  401aba:	test   DWORD PTR [ebx+ebp*2-0x10],edi
  401abe:	mov    eax,ds:0x66ec0f1b
  401ac3:	xchg   ebp,eax
  401ac4:	jecxz  0x401a76
  401ac6:	fwait
  401ac7:	daa    
  401ac8:	push   ds
  401ac9:	adc    esi,DWORD PTR [edi+0x16]
  401acc:	mov    al,ds:0xf9fc23c6
  401ad1:	js     0x401a9b
  401ad3:	push   esp
  401ad4:	mov    ds,WORD PTR [bx+si-0x66]
  401ad8:	out    dx,eax
  401ad9:	cs mov dh,0x3c
  401adc:	ret    0x8c6c
  401adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae0:	cld    
  401ae1:	dec    esi
  401ae2:	int    0x7b
  401ae4:	mov    eax,ds:0xb94390a0
  401ae9:	std    
  401aea:	mov    cl,0xcd
  401aec:	xchg   ebp,eax
  401aed:	inc    esi
  401aee:	mov    dl,ah
  401af0:	push   es
  401af1:	pop    ds
  401af2:	les    esi,FWORD PTR [edi]
  401af4:	fsub   DWORD PTR [eax]
  401af6:	mov    edx,DWORD PTR [ecx-0x2e18e8ba]
  401afc:	push   edi
  401afd:	not    BYTE PTR [ecx-0x42]
  401b00:	and    ebx,DWORD PTR [ebx+ecx*8]
  401b03:	mov    edi,0x4fae6fd5
  401b08:	jo     0x401ae0
  401b0a:	div    BYTE PTR [edi]
  401b0c:	fcomp  QWORD PTR [ebx+0x51bf4dc6]
  401b12:	ds mov dh,0xea
  401b15:	mov    ds,WORD PTR [ebp-0x7b]
  401b18:	out    dx,al
  401b19:	hlt    
  401b1a:	lods   eax,DWORD PTR ds:[esi]
  401b1b:	jo     0x401ab4
  401b1d:	lahf   
  401b1e:	inc    ebp
  401b1f:	sub    al,0xd8
  401b21:	mov    dl,0x65
  401b23:	fistp  DWORD PTR es:[ebp-0x10c11c00]
  401b2a:	loop   0x401ae4
  401b2c:	xor    BYTE PTR [esi+0x55],dl
  401b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b30:	add    ebp,DWORD PTR [ebx-0x6d]
  401b33:	jnp    0x401b32
  401b35:	pushf  
  401b36:	outs   dx,BYTE PTR ds:[esi]
  401b37:	and    ebx,DWORD PTR [ebp+0x3a]
  401b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b3b:	enter  0x4455,0x33
  401b3f:	dec    BYTE PTR [esi-0x6a293887]
  401b45:	out    0x83,eax
  401b47:	jl     0x401bbc
  401b49:	dec    BYTE PTR [eax-0x3dab45cc]
  401b4f:	stc    
  401b50:	sub    DWORD PTR [ebx],ecx
  401b52:	in     al,dx
  401b53:	jb     0x401b9e
  401b55:	je     0x401b3b
  401b57:	jns    0x401b63
  401b59:	ds jp  0x401bc5
  401b5c:	jo     0x401b81
  401b5e:	icebp  
  401b5f:	push   es
  401b60:	imul   edx,DWORD PTR [esp+eax*1+0x213a0721],0x6c
  401b68:	dec    edi
  401b69:	sub    BYTE PTR ds:0x37764f1e,0x94
  401b70:	int3   
  401b71:	xor    BYTE PTR [ebx],bl
  401b73:	pop    ds
  401b74:	mov    ebp,0x2adf45d1
  401b79:	pop    DWORD PTR [ebx]
  401b7b:	sub    dh,bl
  401b7d:	dec    ecx
  401b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b80:	fnstenv [ebp-0x123050f3]
  401b86:	adc    eax,0xffffffc7
  401b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b8a:	lahf   
  401b8b:	pxor   mm6,QWORD PTR [ecx+esi*1-0x2e1ac64b]
  401b93:	inc    ebx
  401b94:	aaa    
  401b95:	or     al,0xcb
  401b97:	or     eax,0x21ef5648
  401b9c:	dec    BYTE PTR [ebx+esi*4]
  401b9f:	cmp    BYTE PTR [edx],0x2
  401ba2:	shl    DWORD PTR ds:0x3d53391b,0x27
  401ba9:	outs   dx,BYTE PTR ds:[esi]
  401baa:	iret   
  401bab:	pusha  
  401bac:	push   ebx
  401bad:	xor    ah,BYTE PTR [edi]
  401baf:	xchg   edx,eax
  401bb0:	xor    dh,0xe6
  401bb3:	scas   eax,DWORD PTR es:[edi]
  401bb4:	or     al,0x5e
  401bb6:	jecxz  0x401b79
  401bb8:	cld    
  401bb9:	gs and al,0xc3
  401bbc:	or     BYTE PTR [ebp+0x6bbc995c],0x38
  401bc3:	push   ebp
  401bc4:	inc    ecx
  401bc5:	test   al,0x18
  401bc7:	mov    ecx,ecx
  401bc9:	clc    
  401bca:	fdivr  QWORD PTR [esi+0x23]
  401bcd:	xchg   DWORD PTR ds:0x85aed785,edi
  401bd3:	shl    DWORD PTR [edx],cl
  401bd5:	data16 xlat BYTE PTR ds:[ebx]
  401bd7:	rcl    cl,cl
  401bd9:	mov    dh,BYTE PTR [edi]
  401bdb:	cs je  0x401b83
  401bde:	out    0x69,al
  401be0:	fadd   DWORD PTR [ebp+0x57a35b41]
  401be6:	sbb    ecx,edx
  401be8:	scas   eax,DWORD PTR es:[edi]
  401be9:	pop    ds
  401bea:	dec    edx
  401beb:	call   0x5645:0xdad8bc1c
  401bf2:	add    al,0x89
  401bf4:	(bad)  [ecx-0x50]
  401bf7:	clc    
  401bf8:	stos   BYTE PTR es:[edi],al
  401bf9:	fwait
  401bfa:	sub    dh,dl
  401bfc:	xor    al,0xdc
  401bfe:	or     al,0xd7
  401c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c01:	mov    bh,0x29
  401c03:	lods   eax,DWORD PTR ds:[esi]
  401c04:	and    BYTE PTR [eax],ch
  401c06:	int3   
  401c07:	lds    edi,FWORD PTR [esi-0x6c]
  401c0a:	leave  
  401c0b:	and    eax,0x92dd1521
  401c10:	mov    ds:0xaeba1cb5,al
  401c15:	add    eax,0x3a98047b
  401c1a:	dec    ebp
  401c1b:	or     DWORD PTR [ebx],0xb54b0e2d
  401c21:	mov    ecx,0x2bb9980
  401c26:	sub    esp,DWORD PTR [ebp+0xadf0b4e]
  401c2c:	cmp    BYTE PTR [edx-0x4b02715],ch
  401c32:	adc    eax,0xb8279f76
  401c37:	cli    
  401c38:	jae    0x401c0f
  401c3a:	in     eax,dx
  401c3b:	(bad)  
  401c3c:	(bad)  
  401c3d:	fild   DWORD PTR [eax+0x5de85523]
  401c43:	xlat   BYTE PTR ds:[ebx]
  401c44:	pop    esp
  401c45:	inc    esi
  401c46:	ja     0xd1cdbb92
  401c4c:	data16 jecxz 0x401be4
  401c4f:	cmp    dl,ch
  401c51:	or     BYTE PTR ds:0xf35aca1,al
  401c57:	mov    dl,0x78
  401c59:	xchg   ebx,eax
  401c5a:	fs aaa 
  401c5c:	addr16 inc ecx
  401c5e:	add    ah,BYTE PTR [eax-0x13]
  401c61:	xchg   ecx,eax
  401c62:	mov    eax,ds:0xf04c984e
  401c67:	jmp    0xf072ded8
  401c6c:	inc    esp
  401c6d:	mov    dh,0xa6
  401c6f:	mov    ebx,0x8f7bbec5
  401c74:	lock stos BYTE PTR es:[edi],al
  401c76:	mov    al,ds:0x342ae72b
  401c7b:	push   ds
  401c7c:	pop    esp
  401c7d:	sbb    esp,DWORD PTR [ebx]
  401c7f:	shl    BYTE PTR [ebp-0x5f],1
  401c82:	fcomip st,st(5)
  401c84:	(bad)  
  401c85:	sub    ecx,DWORD PTR [eax]
  401c87:	aas    
  401c88:	addr16 ss (bad) 
  401c8c:	mov    bh,0x23
  401c8e:	addr16 mov ah,0xce
  401c91:	test   DWORD PTR [eax],0x44b9c970
  401c97:	xchg   edi,eax
  401c98:	test   BYTE PTR [ecx+0x27a08961],ah
  401c9e:	outs   dx,DWORD PTR ds:[esi]
  401c9f:	push   ds
  401ca0:	ds test eax,eax
  401ca3:	adc    cl,BYTE PTR [ebx]
  401ca5:	inc    ebx
  401ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca7:	fcom   QWORD PTR [edx-0x1e]
  401caa:	aad    0x1c
  401cac:	xchg   DWORD PTR [edi+0x41b21133],eax
  401cb2:	or     al,0x35
  401cb4:	xor    DWORD PTR ds:0x935f8221,edx
  401cba:	pcmpeqd mm1,QWORD PTR [ebp-0x3a]
  401cbe:	fidivr DWORD PTR [esp+edi*1-0x5c545abf]
  401cc5:	arpl   WORD PTR [edx-0x67dfa2b1],sp
  401ccb:	mov    al,ds:0x9e43db82
  401cd0:	rol    ecx,0x59
  401cd3:	dec    ebp
  401cd4:	add    BYTE PTR [edi],bl
  401cd6:	or     bl,dh
  401cd8:	js     0x401cdb
  401cda:	ss ret 
  401cdc:	loopne 0x401d3a
  401cde:	gs cld 
  401ce0:	mov    ecx,0x85328482
  401ce5:	push   0x9fb1d55a
  401cea:	lea    edx,[ecx-0x7eafe9d2]
  401cf0:	call   0xe330:0xbf8a5a1c
  401cf7:	into   
  401cf8:	mov    ds:0x9413f48,al
  401cfd:	mov    DWORD PTR [ecx+esi*2],ecx
  401d00:	mov    ebp,0xb82d9605
  401d05:	xchg   esp,eax
  401d06:	outs   dx,BYTE PTR ds:[esi]
  401d07:	aam    0xef
  401d09:	inc    ebx
  401d0a:	xchg   al,ch
  401d0c:	mov    al,ds:0xfd3c45d5
  401d11:	push   ds
  401d12:	cmp    al,0xa4
  401d14:	sbb    ebp,DWORD PTR [ecx]
  401d16:	bound  edi,QWORD PTR [edx+0x60]
  401d19:	neg    BYTE PTR [ecx-0x326c6e5f]
  401d1f:	daa    
  401d20:	retw   
  401d22:	dec    esi
  401d23:	inc    edi
  401d24:	or     eax,0x1f8ba76a
  401d29:	out    0x68,eax
  401d2b:	adc    edi,DWORD PTR [esp-0x4ddfaf9a]
  401d32:	inc    ecx
  401d33:	sbb    bl,BYTE PTR [esi+edx*2]
  401d36:	test   al,0xc
  401d38:	cmp    eax,0x96837a26
  401d3d:	call   0x206a:0x84da5478
  401d44:	outs   dx,DWORD PTR ds:[esi]
  401d45:	lea    edi,[eax-0xf7256ff]
  401d4b:	js     0x401d4f
  401d4d:	dec    ebx
  401d4e:	fistp  WORD PTR [eax-0x49d3cc52]
  401d54:	mov    eax,0x895717e9
  401d59:	retf   
  401d5a:	fdivr  QWORD PTR [ecx]
  401d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d5d:	jb     0x401d71
  401d5f:	dec    ebp
  401d60:	cmp    eax,0xf4eea09f
  401d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d66:	push   eax
  401d67:	push   es
  401d68:	cmp    cl,cl
  401d6a:	xchg   ecx,eax
  401d6b:	and    DWORD PTR [eax+0x24],edx
  401d6e:	sub    al,0x6b
  401d70:	or     al,0x63
  401d72:	sbb    al,0xe4
  401d74:	pop    ebx
  401d75:	jle    0x401d29
  401d77:	jbe    0x401d3f
  401d79:	(bad)  
  401d7a:	test   eax,0x5386c9fc
  401d7f:	xor    ah,BYTE PTR [ebx+ebx*2+0x5bead673]
  401d86:	pop    esi
  401d87:	(bad)  
  401d88:	outs   dx,DWORD PTR ds:[esi]
  401d89:	lods   al,BYTE PTR ds:[esi]
  401d8a:	inc    ebx
  401d8b:	(bad)  
  401d8c:	cmc    
  401d8d:	aam    0xa3
  401d8f:	xchg   esi,eax
  401d90:	sub    eax,0x96bf4f65
  401d95:	jbe    0x401dda
  401d97:	or     DWORD PTR ss:[esi+ebp*1],ecx
  401d9b:	inc    esi
  401d9c:	sti    
  401d9d:	retf   0xde43
  401da0:	xchg   DWORD PTR [eax+ebx*8],ebx
  401da3:	aad    0xe1
  401da5:	pop    edx
  401da6:	es (bad) 
  401da8:	enter  0x67ca,0x29
  401dac:	mov    eax,0x872eb3b9
  401db1:	es push edx
  401db3:	mov    eax,gs:0x1ad2afc5
  401db9:	ds jne 0x401e38
  401dbc:	gs stc 
  401dbe:	pop    ebp
  401dbf:	xchg   DWORD PTR [ebp-0x46],ecx
  401dc2:	push   es
  401dc3:	idiv   BYTE PTR [ecx]
  401dc5:	xchg   ecx,eax
  401dc6:	stos   DWORD PTR es:[edi],eax
  401dc7:	ror    ecx,0x1e
  401dca:	test   DWORD PTR [ecx-0x4ca9041a],eax
  401dd0:	push   esi
  401dd1:	jns    0x401d63
  401dd3:	icebp  
  401dd4:	push   edi
  401dd5:	frstor [eax+0x21ba88f6]
  401ddb:	mov    ds:0x7cd9a4,al
  401de0:	dec    eax
  401de1:	fmul   DWORD PTR [esi+0x483c4c8f]
  401de7:	push   ebp
  401de8:	(bad)  
  401de9:	dec    esp
  401dea:	sbb    esp,DWORD PTR [esi+0x58]
  401ded:	aaa    
  401dee:	sbb    esi,DWORD PTR [eax]
  401df0:	loopne 0x401e49
  401df2:	sbb    al,cl
  401df4:	(bad)  
  401df5:	cmp    BYTE PTR [esi],bh
  401df7:	pop    edx
  401df8:	fwait
  401df9:	and    DWORD PTR ds:0xe3f995cd,eax
  401dff:	not    BYTE PTR [ebx+0xe]
  401e02:	pop    edx
  401e03:	cwde   
  401e04:	jno    0x401e5d
  401e06:	adc    eax,0x81224dd4
  401e0b:	out    dx,al
  401e0c:	sbb    edi,edi
  401e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e0f:	adc    BYTE PTR [esi],ah
  401e11:	and    dl,bl
  401e13:	int3   
  401e14:	push   es
  401e15:	mov    fs,ebp
  401e17:	push   ebx
  401e18:	addr16 ds popa 
  401e1b:	pop    esi
  401e1c:	dec    ecx
  401e1d:	scas   eax,DWORD PTR es:[edi]
  401e1e:	xchg   BYTE PTR [ebp+0x1d],bl
  401e21:	call   0xb2db3318
  401e26:	sahf   
  401e27:	fs jno 0x401e98
  401e2a:	cwde   
  401e2b:	or     ah,0x4c
  401e2e:	nop
  401e2f:	std    
  401e30:	dec    ecx
  401e31:	gs push esi
  401e33:	jo     0x401e95
  401e35:	scas   eax,DWORD PTR es:[edi]
  401e36:	popf   
  401e37:	(bad)  
  401e38:	neg    ch
  401e3a:	push   0x70
  401e3c:	push   ds
  401e3d:	dec    ebp
  401e3e:	ret    
  401e3f:	cmp    al,0xfc
  401e41:	lds    edi,FWORD PTR [edx]
  401e43:	rcl    ecx,0xc9
  401e46:	fwait
  401e47:	rol    DWORD PTR [edx+0x48],0xd2
  401e4b:	mov    ?,WORD PTR [eax-0xabc37b]
  401e51:	mov    al,ds:0x4a377b6e
  401e56:	test   DWORD PTR [ebp-0x2e9d4d50],ebx
  401e5c:	jnp    0x401ea0
  401e5e:	push   esp
  401e5f:	jns    0x401e23
  401e61:	pop    es
  401e62:	imul   ebx,DWORD PTR [esi-0x486e58d3],0x45229655
  401e6c:	fs jne 0x401e75
  401e6f:	cmp    DWORD PTR [edi],edx
  401e71:	stos   BYTE PTR es:[edi],al
  401e72:	adc    BYTE PTR [edi+0x1e],cl
  401e75:	push   ds
  401e76:	mov    BYTE PTR [ecx],al
  401e78:	bswap  ebx
  401e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e7b:	in     eax,dx
  401e7c:	(bad)  
  401e7d:	jg     0x401e2f
  401e7f:	fwait
  401e80:	(bad)  
  401e81:	sbb    eax,0x8c4e8957
  401e86:	dec    ecx
  401e87:	leave  
  401e88:	push   esp
  401e89:	dec    ebx
  401e8a:	arpl   cx,dx
  401e8c:	add    al,0x1f
  401e8e:	out    0x1b,eax
  401e90:	cmp    ecx,eax
  401e92:	and    eax,0xbba2711e
  401e97:	out    dx,eax
  401e98:	or     DWORD PTR [edi-0x1589a9d3],esp
  401e9e:	and    BYTE PTR [ebx+0x6],dh
  401ea1:	and    eax,0x5ca3e4f7
  401ea6:	push   ebp
  401ea7:	xor    edi,DWORD PTR [edi-0xe]
  401eaa:	lods   al,BYTE PTR cs:[esi]
  401eac:	mov    dl,0xaf
  401eae:	int3   
  401eaf:	or     edi,ebx
  401eb1:	ret    0xe1bb
  401eb4:	fdiv   QWORD PTR [edi+0x5ba98fe0]
  401eba:	ins    BYTE PTR es:[edi],dx
  401ebb:	xlat   BYTE PTR ds:[ebx]
  401ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ebd:	pop    esp
  401ebe:	loope  0x401e75
  401ec0:	push   0x45
  401ec2:	sahf   
  401ec3:	fmul   QWORD PTR [ebx]
  401ec5:	rcr    BYTE PTR [ecx-0x54],0x1c
  401ec9:	sti    
  401eca:	fwait
  401ecb:	push   ecx
  401ecc:	imul   ecx,DWORD PTR [ecx],0xffffffe0
  401ecf:	push   cs
  401ed0:	and    eax,0x93f88b1d
  401ed5:	jmp    0x401e71
  401ed7:	(bad)  
  401ed8:	loopne 0x401f31
  401eda:	mov    cl,0xcf
  401edc:	xchg   ecx,eax
  401edd:	pop    eax
  401ede:	gs dec esp
  401ee0:	push   esi
  401ee1:	adc    ax,0xc2c8
  401ee5:	nop
  401ee6:	add    al,dl
  401ee8:	inc    esp
  401ee9:	add    ebx,DWORD PTR [edx+0x68]
  401eec:	(bad)  
  401eed:	push   esp
  401eee:	and    eax,0x6cc9323e
  401ef3:	ins    BYTE PTR es:[edi],dx
  401ef4:	push   ss
  401ef5:	imul   DWORD PTR [esi-0x59]
  401ef8:	dec    esi
  401ef9:	retf   0x5ab4
  401efc:	inc    ebx
  401efd:	add    BYTE PTR [edx],bh
  401eff:	xor    dl,dl
  401f01:	xchg   ebp,eax
  401f02:	mov    ds:0xb46f3393,eax
  401f07:	add    ebp,DWORD PTR [esi+ecx*8]
  401f0a:	cmp    al,0x6d
  401f0c:	push   ebx
  401f0d:	std    
  401f0e:	out    dx,eax
  401f0f:	or     al,0x97
  401f11:	jg     0x401f61
  401f13:	pop    ebx
  401f14:	sbb    BYTE PTR [ebx+0x24de6f04],bh
  401f1a:	cld    
  401f1b:	push   ds
  401f1c:	adc    al,0x2d
  401f1e:	push   edx
  401f1f:	and    al,0x6d
  401f21:	hlt    
  401f22:	retf   
  401f23:	scas   al,BYTE PTR es:[edi]
  401f24:	out    dx,al
  401f25:	fisubr DWORD PTR [edx-0x28299000]
  401f2b:	cmp    esi,DWORD PTR [ebx-0x574f9672]
  401f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f32:	ins    BYTE PTR es:[edi],dx
  401f33:	dec    ebx
  401f34:	jo     0x401f87
  401f36:	dec    eax
  401f37:	lock outs dx,DWORD PTR ds:[esi]
  401f39:	jle    0x401f0b
  401f3b:	adc    al,0x85
  401f3d:	cld    
  401f3e:	popa   
  401f3f:	push   esp
  401f40:	repnz xor BYTE PTR [eax+0x7e555841],dl
  401f47:	push   esi
  401f48:	mov    BYTE PTR [eax-0x75afdef1],ah
  401f4e:	mov    dl,0x6f
  401f50:	jnp    0x401ede
  401f52:	popf   
  401f53:	add    BYTE PTR [ebx-0x229f6f8c],0x1e
  401f5a:	aam    0xfd
  401f5c:	call   0x556c20c6
  401f61:	sti    
  401f62:	test   BYTE PTR [edx],dl
  401f64:	mov    edx,DWORD PTR [ebx+edi*8-0x25]
  401f68:	cmp    edi,esi
  401f6a:	mov    ah,0xbc
  401f6c:	ins    DWORD PTR es:[edi],dx
  401f6d:	mov    eax,0x6f649b6a
  401f72:	sar    BYTE PTR [eax+0x5cb7af37],1
  401f78:	clc    
  401f79:	push   ecx
  401f7a:	fcmovb st,st(6)
  401f7c:	cs cmp esp,eax
  401f7f:	and    eax,0x82d96e01
  401f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f85:	in     eax,0x89
  401f87:	sti    
  401f88:	or     DWORD PTR [esi],ebp
  401f8a:	xor    DWORD PTR [edx],ecx
  401f8c:	sahf   
  401f8d:	add    cl,BYTE PTR [ecx-0x1f]
  401f90:	xchg   edi,eax
  401f91:	sub    al,0xa8
  401f93:	add    dh,dl
  401f95:	inc    edi
  401f96:	inc    eax
  401f97:	sbb    DWORD PTR [edx-0x6403bf83],edi
  401f9d:	jg     0x401f2b
  401f9f:	jg     0x401feb
  401fa1:	xor    al,0x9a
  401fa3:	fwait
  401fa4:	pusha  
  401fa5:	mov    esi,0xd4087093
  401faa:	dec    ecx
  401fab:	sbb    al,dh
  401fad:	pop    ds
  401fae:	mov    ebp,0x97876aec
  401fb3:	sbb    al,0x2e
  401fb5:	mov    eax,ds:0x71865960
  401fba:	mov    DWORD PTR [ebx-0x2c],edi
  401fbd:	push   edx
  401fbe:	push   ds
  401fbf:	hlt    
  401fc0:	cmp    eax,0xa1085374
  401fc5:	pusha  
  401fc6:	mov    BYTE PTR [eax],dl
  401fc8:	dec    esp
  401fc9:	or     eax,0x9592131b
  401fce:	pop    ds
  401fcf:	push   ss
  401fd0:	scas   al,BYTE PTR es:[edi]
  401fd1:	mov    BYTE PTR [esi-0x6e],bh
  401fd4:	lds    edi,FWORD PTR [edx+edi*1+0x6a]
  401fd8:	push   ebp
  401fd9:	aas    
  401fda:	icebp  
  401fdb:	test   BYTE PTR [ecx+0x3c],al
  401fde:	clc    
  401fdf:	fnstenv [esi]
  401fe1:	pop    esp
  401fe2:	out    0x2d,al
  401fe4:	mov    DWORD PTR [eax],edx
  401fe6:	dec    edx
  401fe7:	cmp    dh,BYTE PTR [esi-0x59]
  401fea:	jnp    0x401fca
  401fec:	scas   eax,DWORD PTR es:[edi]
  401fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fee:	jns    0x401fe1
  401ff0:	gs aas 
  401ff2:	mov    dh,0x7e
  401ff4:	jne    0x401ff8
  401ff6:	psraw  mm3,QWORD PTR [eax+eiz*1+0x31]
  401ffb:	xor    eax,0xaf6a3e3d
  402000:	cld    
  402001:	aad    0x4
  402003:	rol    BYTE PTR [eax+esi*8],0xbe
  402007:	aas    
  402008:	pop    ecx
  402009:	mov    ebp,0x61297b39
  40200e:	adc    eax,0x4ca0b4cd
  402013:	jnp    0x402009
  402015:	adc    al,0xc3
  402017:	jle    0x402064
  402019:	jb     0x401ff8
  40201b:	sub    ebp,edx
  40201d:	cmp    DWORD PTR [eax+ebp*2+0xc668d4d],edi
  402024:	test   eax,0xb18564f1
  402029:	jmp    0x815a:0xe3757a19
  402030:	or     bl,dh
  402032:	das    
  402033:	xchg   ch,al
  402035:	sbb    eax,0xe1e95328
  40203a:	push   esi
  40203b:	mov    ah,0xca
  40203d:	in     al,0x8a
  40203f:	shl    DWORD PTR [ecx],0x1
  402042:	jge    0x40205b
  402044:	xchg   edx,eax
  402045:	not    BYTE PTR [esi-0x67]
  402048:	adc    bl,BYTE PTR ds:0xbb41e0e0
  40204e:	pop    edx
  40204f:	dec    ecx
  402050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402051:	inc    ecx
  402052:	ret    
  402053:	pusha  
  402054:	push   ds
  402055:	dec    eax
  402056:	add    bh,bl
  402058:	nop
  402059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40205a:	lea    edi,[edi+ebp*1+0x2df7080e]
  402061:	cmp    edx,DWORD PTR [edi]
  402063:	shl    edi,1
  402065:	jo     0x40200b
  402067:	xchg   esi,eax
  402068:	loope  0x402071
  40206a:	jo     0x40207e
  40206c:	inc    esi
  40206d:	jo     0x402054
  40206f:	and    esp,DWORD PTR [ebx-0x44]
  402072:	dec    esp
  402073:	mov    DWORD PTR [edx+ecx*8],ebx
  402076:	mov    eax,ds:0x5c9ba8e9
  40207b:	and    ecx,ecx
  40207d:	xchg   esp,eax
  40207e:	add    eax,DWORD PTR [ebp-0x295cd991]
  402084:	adc    DWORD PTR [ecx-0x77b181ae],ecx
  40208a:	loope  0x402019
  40208c:	shl    BYTE PTR [ebp-0x54990d81],0xb6
  402093:	ret    
  402094:	jp     0x4020d8
  402096:	scas   al,BYTE PTR es:[edi]
  402097:	mov    bh,0x0
  402099:	jae    0x402107
  40209b:	pusha  
  40209c:	mov    ds:0xf4a5766a,al
  4020a1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4020a3:	das    
  4020a4:	dec    ecx
  4020a5:	mov    bl,0xae
  4020a7:	ja     0x4020f6
  4020a9:	jg     0x402059
  4020ab:	mov    ah,0xee
  4020ad:	mov    edi,0x6ddd017
  4020b2:	es mov ch,0xff
  4020b5:	xor    eax,0x24938d91
  4020ba:	iret   
  4020bb:	or     DWORD PTR [eax-0x77],ecx
  4020be:	arpl   WORD PTR [ecx+0x53],dx
  4020c1:	aad    0xd
  4020c3:	shl    BYTE PTR ds:0x7edb6b64,0xf7
  4020ca:	mov    dl,0x38
  4020cc:	arpl   bp,bx
  4020ce:	jmp    0x4020dd
  4020d0:	and    ah,dl
  4020d2:	add    BYTE PTR [ebp+0x17],ch
  4020d5:	xor    edx,DWORD PTR [edx-0x2e]
  4020d8:	idiv   BYTE PTR [eax-0x44]
  4020db:	(bad)  
  4020dc:	sub    al,0xae
  4020de:	sbb    eax,0xfc0df3c0
  4020e3:	push   ebx
  4020e4:	add    eax,0x7c738242
  4020e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ea:	bound  edx,QWORD PTR [ebp-0x5a90bac]
  4020f0:	jae    0x402154
  4020f2:	xchg   DWORD PTR ds:0x4a2b342f,esi
  4020f8:	je     0x402163
  4020fa:	daa    
  4020fb:	jb     0x402090
  4020fd:	xor    al,0xfb
  4020ff:	mov    eax,0x5c34ad5f
  402104:	add    esi,DWORD PTR [ebx-0x31]
  402107:	inc    eax
  402108:	es data16 adc al,0xd2
  40210c:	sub    al,ah
  40210e:	sbb    BYTE PTR [eax],bl
  402110:	add    edx,ecx
  402112:	shl    DWORD PTR [ebx+0x17d98e0a],1
  402118:	imul   eax,esi,0x51360703
  40211e:	inc    esi
  40211f:	scas   eax,DWORD PTR es:[edi]
  402120:	rcl    BYTE PTR [ebp+esi*4+0x198f9ef2],1
  402127:	inc    ecx
  402128:	(bad)  
  402129:	js     0x4020e7
  40212b:	dec    eax
  40212c:	mov    eax,ds:0xa51afd99
  402131:	xlat   BYTE PTR ds:[ebx]
  402132:	xchg   BYTE PTR [ecx],dh
  402134:	int3   
  402135:	loope  0x40210e
  402137:	adc    ah,bh
  402139:	xchg   ecx,eax
  40213a:	or     eax,0x9b3d43f2
  40213f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402140:	dec    edi
  402141:	in     al,dx
  402142:	sub    dh,BYTE PTR [edi+0xb8e7922]
  402148:	jg     0x402136
  40214a:	push   es
  40214b:	fistp  DWORD PTR [ebp+0x47]
  40214e:	jl     0x40215a
  402150:	mov    WORD PTR [ebx+0x47],?
  402153:	(bad)  
  402154:	out    0xa9,eax
  402156:	aas    
  402157:	hlt    
  402158:	fisubr WORD PTR [ebx-0x672944c7]
  40215e:	sar    cl,0x3
  402161:	xchg   esi,eax
  402162:	add    al,0xeb
  402164:	cs jmp 0x402165
  402167:	les    ebp,FWORD PTR [edi]
  402169:	sbb    DWORD PTR [ecx-0x4d],edx
  40216c:	pop    ebx
  40216d:	mov    ah,BYTE PTR [ebp+0x7c]
  402170:	jle    0x402188
  402172:	test   esp,esp
  402174:	mov    edx,0xce096162
  402179:	push   ebx
  40217a:	sbb    BYTE PTR [ebx],dl
  40217c:	and    esp,eax
  40217e:	pop    eax
  40217f:	in     al,dx
  402180:	mov    ebp,0x7d9d03d3
  402185:	scas   al,BYTE PTR es:[edi]
  402186:	add    ecx,ebp
  402188:	pop    ss
  402189:	pop    esi
  40218a:	fcom   DWORD PTR [ebp-0xf21c810]
  402190:	outs   dx,BYTE PTR ds:[esi]
  402191:	jle    0x4021da
  402193:	inc    edx
  402194:	nop
  402195:	pop    ecx
  402196:	es xor al,0x8d
  402199:	mov    al,ds:0x6bbefa6e
  40219e:	jecxz  0x4021f1
  4021a0:	out    0xee,eax
  4021a2:	mov    al,ds:0xf0452d8b
  4021a7:	(bad)  
  4021a8:	jecxz  0x402169
  4021aa:	repz and DWORD PTR [eax],edx
  4021ad:	pop    esi
  4021ae:	loopne 0x40216b
  4021b0:	xor    ecx,DWORD PTR [edi]
  4021b2:	std    
  4021b3:	dec    esp
  4021b4:	sub    BYTE PTR [ebp-0xd],dh
  4021b7:	xchg   edx,eax
  4021b8:	adc    BYTE PTR [eax-0x70a747ad],bl
  4021be:	int    0x78
  4021c0:	hlt    
  4021c1:	and    eax,0x86dc3a79
  4021c6:	mov    bh,ch
  4021c8:	inc    esi
  4021c9:	mov    ?,eax
  4021cb:	jno    0x402182
  4021cd:	mov    ch,0xd5
  4021cf:	fwait
  4021d0:	and    eax,0xf94feb8f
  4021d5:	lahf   
  4021d6:	inc    edx
  4021d7:	add    al,0x2d
  4021d9:	test   eax,0x1671929e
  4021de:	out    0xaf,eax
  4021e0:	jo     0x4021d2
  4021e2:	dec    esi
  4021e3:	cmp    DWORD PTR [edi-0x62],edx
  4021e6:	or     bl,ch
  4021e8:	xchg   esi,eax
  4021e9:	mov    edi,cs
  4021eb:	pop    ebp
  4021ec:	and    dh,0xb4
  4021ef:	push   ebp
  4021f0:	sti    
  4021f1:	mov    bl,0x58
  4021f3:	mul    BYTE PTR [edi+0x5c]
  4021f6:	shl    BYTE PTR [edi-0x34],0x46
  4021fa:	or     eax,eax
  4021fc:	cli    
  4021fd:	pushf  
  4021fe:	mov    esp,0x1fd1b27b
  402203:	dec    eax
  402204:	inc    edi
  402205:	test   eax,0xe9f339bd
  40220a:	fstp   TBYTE PTR [ebx]
  40220c:	push   esi
  40220d:	test   al,0xf
  40220f:	jecxz  0x4021f9
  402211:	dec    esi
  402212:	test   BYTE PTR [edi-0x46],cl
  402215:	dec    edi
  402216:	jbe    0x4021d3
  402218:	mov    ecx,0xd43a002e
  40221d:	add    esi,ebp
  40221f:	sub    ebx,esi
  402221:	test   DWORD PTR [ecx+edi*4],esi
  402224:	js     0x4021e0
  402226:	cs out dx,eax
  402228:	xchg   ebp,eax
  402229:	mov    WORD PTR ds:0x926fc552,ss
  40222f:	push   edx
  402230:	shr    BYTE PTR [edx+edi*2],1
  402233:	push   esp
  402234:	sub    DWORD PTR [ebp-0xd145079],ecx
  40223a:	inc    ecx
  40223b:	mov    bh,0x98
  40223d:	scas   al,BYTE PTR es:[edi]
  40223e:	and    ah,bh
  402240:	dec    esp
  402241:	rcl    DWORD PTR [eax+0x42baeb3d],0x76
  402248:	je     0x40229b
  40224a:	mov    DWORD PTR [eax+0x41c9e841],ebx
  402250:	rol    BYTE PTR [ebx+0x24],1
  402253:	mov    WORD PTR [eax+0x32],es
  402256:	lods   eax,DWORD PTR ds:[esi]
  402257:	dec    ebx
  402258:	add    DWORD PTR [edi+eiz*4],ebx
  40225b:	mov    ch,0xab
  40225d:	push   es
  40225e:	mov    esp,0xf38740fe
  402263:	push   ebp
  402264:	push   ds
  402265:	faddp  st(2),st
  402267:	adc    DWORD PTR ds:0x58e409d6,ebx
  40226d:	mov    esp,eax
  40226f:	jnp    0x40222a
  402271:	aaa    
  402272:	sbb    bh,BYTE PTR [edx-0x11]
  402275:	sbb    ecx,DWORD PTR [ebx+ebx*8-0x175ee7a8]
  40227c:	pop    es
  40227d:	jbe    0x4022dc
  40227f:	pop    ecx
  402280:	mov    eax,0x46b91dcf
  402285:	es hlt 
  402287:	xor    bh,BYTE PTR [edx-0x47b2dade]
  40228d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228e:	jg     0x402219
  402290:	or     ebx,ebx
  402292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402293:	mov    al,0x7e
  402295:	not    BYTE PTR [eax+0x64494025]
  40229b:	adc    DWORD PTR [eax+0x2a774140],ebx
  4022a1:	or     BYTE PTR [ebp-0x12],dl
  4022a4:	dec    bx
  4022a6:	push   ss
  4022a7:	push   ebp
  4022a8:	lods   eax,DWORD PTR ds:[esi]
  4022a9:	adc    DWORD PTR [esi-0x3c],eax
  4022ac:	cld    
  4022ad:	shl    DWORD PTR [edi],0xdd
  4022b0:	addr16 jl 0x4022d4
  4022b3:	mov    bh,0x9c
  4022b5:	enter  0xe4d4,0xfb
  4022b9:	xchg   esi,eax
  4022ba:	push   esi
  4022bb:	jnp    0x402246
  4022bd:	push   ebx
  4022be:	cmp    BYTE PTR [ebx],al
  4022c0:	ret    
  4022c1:	adc    DWORD PTR [ecx-0xe],0x3d
  4022c5:	pop    esp
  4022c6:	xchg   ebx,eax
  4022c7:	mov    ds:0x5da8ccd2,eax
  4022cc:	cli    
  4022cd:	lods   eax,DWORD PTR ds:[esi]
  4022ce:	mov    dl,0xd4
  4022d0:	sar    DWORD PTR [esi-0x3],cl
  4022d3:	cli    
  4022d4:	fadd   DWORD PTR [eax-0x6270322b]
  4022da:	pushf  
  4022db:	sub    al,0x35
  4022dd:	pop    ebp
  4022de:	stos   BYTE PTR es:[edi],al
  4022df:	out    0xd5,al
  4022e1:	cmp    DWORD PTR [ecx],ebx
  4022e3:	or     al,bh
  4022e5:	push   esp
  4022e6:	aad    0xa6
  4022e8:	sbb    BYTE PTR [eax-0x16],bh
  4022eb:	test   DWORD PTR [esi-0x4a],ebx
  4022ee:	repz jmp 0x4874:0x213553d4
  4022f6:	mov    ecx,DWORD PTR [ebp+ecx*1-0x66]
  4022fa:	jo     0x4022f5
  4022fc:	mov    ebx,0xc524402c
  402301:	and    DWORD PTR [edx],ecx
  402303:	mov    dh,0x34
  402305:	in     al,0xda
  402307:	add    DWORD PTR [edx+0xedcc0eb],0xafbdde28
  402311:	jmp    0x402336
  402313:	dec    ecx
  402314:	retf   
  402315:	jb     0x4022be
  402317:	xchg   ebx,eax
  402318:	aaa    
  402319:	aaa    
  40231a:	int3   
  40231b:	fbstp  TBYTE PTR [eax-0xb]
  40231e:	(bad)  
  40231f:	add    ecx,DWORD PTR [ebx]
  402321:	sahf   
  402322:	les    edi,FWORD PTR [edx+0x6]
  402325:	dec    esi
  402326:	adc    BYTE PTR [edi],dh
  402328:	test   DWORD PTR [edi],edx
  40232a:	(bad)  
  40232b:	mov    eax,0xefc386ec
  402330:	cmp    DWORD PTR [eax-0xe326062],esi
  402336:	mov    ecx,0x1f6a1229
  40233b:	sub    cl,BYTE PTR [edi+ebx*8-0x6e73d62f]
  402342:	stos   DWORD PTR es:[edi],eax
  402343:	(bad)
  402347:	retf   0x15e5
  40234a:	cwde   
  40234b:	dec    ebp
  40234c:	add    eax,0xad2b73a7
  402351:	xchg   esp,eax
  402352:	sbb    edx,eax
  402354:	push   eax
  402355:	and    cl,bh
  402357:	cmp    ebp,esi
  402359:	adc    ebp,DWORD PTR [ecx+esi*1-0x2]
  40235d:	mov    es,WORD PTR [ebp+0xa]
  402360:	cmovs  edi,DWORD PTR [edx+edi*2+0x1b]
  402365:	or     eax,0x8d654160
  40236a:	jae    0x402379
  40236c:	xor    al,0xc6
  40236e:	adc    BYTE PTR [esi+0x325f6148],al
  402374:	cmp    edi,DWORD PTR [ebp-0x2b]
  402377:	dec    ebx
  402378:	fwait
  402379:	out    0x3a,eax
  40237b:	shl    DWORD PTR [edx+0x4495f596],0x1c
  402382:	(bad)  
  402383:	stc    
  402384:	popf   
  402385:	xchg   edx,eax
  402386:	add    eax,0x70d03b3a
  40238b:	sahf   
  40238c:	loop   0x402403
  40238e:	aas    
  40238f:	out    dx,eax
  402390:	fadd   st,st(7)
  402392:	loopne 0x4023be
  402394:	shl    DWORD PTR [ecx+0x32c0fe6a],1
  40239a:	inc    eax
  40239b:	mov    esi,0xb5e8c381
  4023a1:	and    esi,DWORD PTR [ebp+eiz*1-0x5a]
  4023a5:	mov    al,ds:0x3d38ece2
  4023aa:	xchg   BYTE PTR ds:0x77aa1ca5,ch
  4023b0:	popf   
  4023b1:	add    DWORD PTR [ebx+0x6a],edx
  4023b4:	cmp    eax,0x2233be1f
  4023b9:	jle    0x40237b
  4023bb:	xor    al,0x14
  4023bd:	addr16 retf 
  4023bf:	fimul  DWORD PTR [eax]
  4023c1:	mov    eax,ds:0x2dbd44e8
  4023c6:	jmp    0x4523cb29
  4023cb:	ret    
  4023cc:	imul   eax,DWORD PTR cs:[edi-0x6f],0x298df51d
  4023d4:	loope  0x402359
  4023d6:	cld    
  4023d7:	(bad)  
  4023d8:	lock jg 0x4023c0
  4023db:	sub    dl,BYTE PTR [esi]
  4023dd:	popf   
  4023de:	fld    QWORD PTR [edi-0x40]
  4023e1:	push   ss
  4023e2:	sar    DWORD PTR [ecx-0x64709aa3],0xc5
  4023e9:	ret    
  4023ea:	and    eax,0x3fc577a0
  4023ef:	nop
  4023f0:	ficom  WORD PTR [edx-0x3f2e4094]
  4023f6:	leave  
  4023f7:	dec    ebp
  4023f8:	xchg   esp,eax
  4023f9:	cmp    DWORD PTR [ebx+0x4be1904e],edi
  4023ff:	mov    al,ds:0xde5f4773
  402404:	clc    
  402405:	pop    ecx
  402406:	call   0x8635:0x7ac5b961
  40240d:	push   0xffffffa3
  40240f:	and    BYTE PTR [esi],dl
  402411:	test   DWORD PTR [edx-0x3c],ebp
  402414:	mov    ds:0xbc0d1b8e,eax
  402419:	sbb    BYTE PTR [eax],cl
  40241b:	adc    BYTE PTR [esi+0x5d],0xe4
  40241f:	bound  esp,QWORD PTR ds:0x4547a984
  402425:	fchs   
  402427:	inc    eax
  402428:	or     bh,ah
  40242a:	js     0x40245f
  40242c:	cmp    eax,0x975e21e
  402431:	arpl   WORD PTR [ecx-0x54],cx
  402434:	mov    DWORD PTR [edi+eiz*8],ebp
  402437:	scas   eax,DWORD PTR es:[edi]
  402438:	enter  0xf003,0xa1
  40243c:	jns    0x402467
  40243e:	or     BYTE PTR [edi],dl
  402440:	(bad)  
  402441:	js     0x4024a7
  402443:	into   
  402444:	add    BYTE PTR [eax+0x5658b68f],0x7a
  40244b:	pusha  
  40244c:	xchg   ebp,eax
  40244d:	ins    BYTE PTR es:[edi],dx
  40244e:	mov    bh,0xa5
  402450:	xchg   esi,eax
  402451:	call   0xcc0:0x5a114798
  402458:	popa   
  402459:	fs out 0x39,al
  40245c:	inc    esp
  40245d:	sbb    DWORD PTR [ecx-0x23],edi
  402460:	jl     0x402441
  402462:	add    al,0xd5
  402464:	sub    eax,0xe48ea062
  402469:	pop    edi
  40246a:	pushw  cs
  40246c:	lds    ebp,FWORD PTR [edx+0x795557cb]
  402472:	sbb    BYTE PTR [edi],al
  402474:	xchg   esi,eax
  402475:	addr16 mov bl,0xb0
  402478:	xchg   bl,bh
  40247a:	data16 inc BYTE PTR [ecx-0x27d0e26e]
  402481:	leave  
  402482:	int3   
  402483:	pop    edi
  402484:	mov    BYTE PTR [eax],dl
  402486:	popf   
  402487:	mov    ebp,0xcbcf8033
  40248c:	add    dh,BYTE PTR [edi+0x1]
  40248f:	and    eax,DWORD PTR [edx]
  402491:	push   esp
  402492:	pop    ds
  402493:	jbe    0x402479
  402495:	les    edi,FWORD PTR [ecx-0x14b1c641]
  40249b:	mov    dl,0xbd
  40249d:	sub    edx,ecx
  40249f:	je     0x4024bd
  4024a1:	retf   0x54e6
  4024a4:	mov    ds:0xfa4d595f,al
  4024a9:	lds    esp,FWORD PTR [ebx+ecx*4+0x76]
  4024ad:	xchg   ebx,eax
  4024ae:	push   ebp
  4024af:	pop    eax
  4024b0:	loopne 0x402465
  4024b2:	(bad)  
  4024b3:	test   DWORD PTR [ebx+0x559c4fc3],ebp
  4024b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ba:	mov    ebp,0xeecf5391
  4024bf:	outs   dx,BYTE PTR ds:[esi]
  4024c0:	jg     0x402524
  4024c2:	mov    ah,0x58
  4024c4:	sbb    edi,DWORD PTR [ebx-0x164cbf10]
  4024ca:	xchg   ebx,eax
  4024cb:	add    eax,0xe5a74dc8
  4024d0:	sahf   
  4024d1:	cwde   
  4024d2:	stc    
  4024d3:	sbb    BYTE PTR [esi],ch
  4024d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024d6:	(bad)
  4024d9:	out    0x14,eax
  4024db:	stos   BYTE PTR es:[edi],al
  4024dc:	and    cl,BYTE PTR [ecx+esi*8]
  4024df:	inc    ebp
  4024e0:	xchg   esp,eax
  4024e1:	loopne 0x40248e
  4024e3:	push   esi
  4024e4:	or     BYTE PTR [eax-0x6533260e],cl
  4024ea:	cmp    bl,BYTE PTR [edx+0x36451ad1]
  4024f0:	sbb    cl,BYTE PTR [eax+0x6a]
  4024f3:	arpl   WORD PTR [ebx],di
  4024f5:	loope  0x402556
  4024f7:	cs jbe 0x402509
  4024fa:	pop    esp
  4024fb:	sub    eax,0x175ce7f8
  402500:	cmp    al,0x24
  402502:	inc    esp
  402503:	or     eax,0x47cfb6b8
  402508:	aas    
  402509:	lock mov al,0x68
  40250c:	sub    al,0xef
  40250e:	retf   0x2107
  402511:	inc    esp
  402512:	and    edx,0xd387902c
  402518:	int    0x2b
  40251a:	jae    0x40252b
  40251c:	in     al,0xeb
  40251e:	push   esp
  40251f:	test   DWORD PTR [ecx],0x7bf5125b
  402525:	lods   eax,DWORD PTR ds:[esi]
  402526:	loope  0x4024e1
  402528:	sbb    eax,0x31a34979
  40252d:	ja     0x4025ab
  40252f:	sbb    BYTE PTR [ecx+0x455d25c],ch
  402535:	loop   0x402579
  402537:	jmp    0x402531
  402539:	mov    dl,0x9b
  40253b:	dec    esp
  40253c:	cmp    al,0xd1
  40253e:	hlt    
  40253f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402540:	fwait
  402541:	ret    
  402542:	shr    ch,cl
  402544:	pop    eax
  402545:	and    eax,0xf39d01a9
  40254a:	mov    bl,0x7c
  40254c:	sahf   
  40254d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40254e:	xor    BYTE PTR [edx+0x40],0xe2
  402552:	fsub   QWORD PTR [esi]
  402554:	pop    esp
  402555:	gs dec edx
  402557:	jbe    0x40259e
  402559:	and    cl,BYTE PTR [edi+0x532b5fa7]
  40255f:	in     al,0xbe
  402561:	inc    ebx
  402562:	pop    ebx
  402563:	push   0x60
  402565:	mov    cl,0x5e
  402567:	jo     0x40250f
  402569:	repz adc ecx,DWORD PTR [edx]
  40256c:	cmp    edx,esp
  40256e:	test   ch,dh
  402570:	dec    ch
  402572:	bound  esi,QWORD PTR [esi]
  402574:	in     eax,0x7d
  402576:	mov    esi,0xf8b443f5
  40257b:	in     al,dx
  40257c:	adc    BYTE PTR [esi+0x27bad16a],dl
  402582:	and    eax,0x8886e96
  402587:	sub    eax,0xbdef1b14
  40258c:	push   ebx
  40258d:	cwde   
  40258e:	mov    ebp,0x43d42414
  402593:	in     al,dx
  402594:	add    BYTE PTR [ebx-0x41],0x55
  402598:	adc    DWORD PTR [edi-0x2c],esi
  40259b:	(bad)
  40259e:	stc    
  40259f:	(bad)  
  4025a0:	xor    edi,DWORD PTR [esi*2+0x4a800577]
  4025a7:	cmp    edx,DWORD PTR [ecx+0x22]
  4025aa:	adc    DWORD PTR [edi-0x2dc53769],0x37683b37
  4025b4:	mov    eax,ds:0xef28f742
  4025b9:	ja     0x4025e4
  4025bb:	cmp    al,BYTE PTR [ecx-0x5c1a828c]
  4025c1:	inc    eax
  4025c2:	dec    eax
  4025c3:	stos   DWORD PTR es:[edi],eax
  4025c4:	in     al,0xb4
  4025c6:	sbb    cl,BYTE PTR [esi]
  4025c8:	dec    edx
  4025c9:	add    DWORD PTR [ebx+ebp*4+0x490cd648],edx
  4025d0:	xchg   ecx,eax
  4025d1:	shr    DWORD PTR [edi-0x53f51154],1
  4025d7:	inc    ecx
  4025d8:	mov    ds:0x5e10d458,al
  4025dd:	shl    ebx,1
  4025df:	adc    al,0x53
  4025e1:	outs   dx,BYTE PTR ds:[esi]
  4025e2:	dec    esi
  4025e3:	gs push edi
  4025e5:	sub    bh,BYTE PTR [edx]
  4025e7:	push   cs
  4025e8:	sahf   
  4025e9:	mov    ch,0x5d
  4025eb:	(bad)  
  4025ec:	ficom  DWORD PTR [ecx+ecx*4+0x47a5d7d7]
  4025f3:	or     eax,DWORD PTR [edx+0x26de4f2]
  4025f9:	mov    DWORD PTR [esi-0x1f7f5e14],edx
  4025ff:	outs   dx,DWORD PTR ds:[esi]
  402600:	ins    BYTE PTR es:[edi],dx
  402601:	rol    DWORD PTR [edx+0x23b1ff22],1
  402607:	push   0xc7f2382a
  40260c:	jbe    0x4025cb
  40260e:	retf   
  40260f:	popa   
  402610:	cmp    BYTE PTR [edx-0xc],bl
  402613:	or     al,0xd7
  402615:	scas   al,BYTE PTR es:[edi]
  402616:	add    al,0x90
  402618:	shl    DWORD PTR [esi],0xd7
  40261b:	and    edx,DWORD PTR [edi]
  40261d:	in     al,0xc5
  40261f:	jmp    0x669b:0x533a943a
  402626:	rcl    ebp,0xf8
  402629:	mov    ch,0x39
  40262b:	icebp  
  40262c:	dec    esp
  40262d:	call   0xed9f:0x73535cbb
  402634:	xchg   ebx,eax
  402635:	repz xor eax,0x340327fa
  40263b:	nop
  40263c:	mov    ds:0xb8ff0295,eax
  402641:	inc    edx
  402642:	and    eax,DWORD PTR [eax]
  402644:	hlt    
  402645:	sbb    esp,DWORD PTR [ecx-0x5baac7b3]
  40264b:	ss outs dx,BYTE PTR ds:[esi]
  40264e:	stos   BYTE PTR es:[edi],al
  40264f:	cli    
  402650:	push   ss
  402651:	std    
  402652:	stos   BYTE PTR es:[edi],al
  402653:	add    dh,BYTE PTR [ecx-0x77]
  402656:	adc    BYTE PTR [ebp+0xc305b11],bh
  40265c:	gs adc dh,0x78
  402660:	dec    ebx
  402661:	or     al,0x57
  402663:	stc    
  402664:	dec    ecx
  402665:	(bad)
  402668:	push   0xc
  40266a:	pop    esp
  40266b:	lahf   
  40266c:	or     ch,bh
  40266e:	gs jecxz 0x402621
  402671:	ret    
  402672:	fldcw  WORD PTR [eax+ecx*1]
  402675:	xchg   esi,eax
  402676:	jg     0x402607
  402678:	jnp    0x40269a
  40267a:	pusha  
  40267b:	icebp  
  40267c:	in     al,0x36
  40267e:	stos   BYTE PTR es:[edi],al
  40267f:	add    esi,DWORD PTR [ecx-0x7098b35f]
  402685:	xchg   esp,eax
  402686:	int    0x97
  402688:	scas   al,BYTE PTR es:[edi]
  402689:	inc    ecx
  40268a:	mov    ebp,0xd5be80e9
  40268f:	pop    ss
  402690:	sub    BYTE PTR ds:0xd33342d9,0xec
  402697:	aam    0x2e
  402699:	sub    DWORD PTR [esi-0x2a0d7c6d],esi
  40269f:	add    eax,0xca12b620
  4026a4:	jmp    0xb518:0xd704894e
  4026ab:	jmp    0x5c81:0x1bdec8f
  4026b2:	add    al,0x1f
  4026b4:	xor    esi,DWORD PTR [esi-0x23]
  4026b7:	mov    dl,BYTE PTR [edi-0x4f]
  4026ba:	outs   dx,BYTE PTR ds:[esi]
  4026bb:	adc    ch,ah
  4026bd:	imul   edi,DWORD PTR [edx],0xffffffa9
  4026c0:	jb     0x4026bd
  4026c2:	arpl   WORD PTR [ebp+ecx*1-0x6b4c78fd],bp
  4026c9:	daa    
  4026ca:	les    edx,FWORD PTR [edx]
  4026cc:	or     al,0x18
  4026ce:	aad    0x2b
  4026d0:	dec    ebp
  4026d1:	dec    ebp
  4026d2:	cmp    BYTE PTR [edx-0x4dba5d3],al
  4026d8:	sahf   
  4026d9:	(bad)  
  4026da:	sub    eax,0xe9095f0f
  4026df:	nop
  4026e0:	mov    eax,0x83427bbd
  4026e5:	(bad)  
  4026e6:	nop
  4026e7:	(bad)  
  4026e8:	outs   dx,DWORD PTR ds:[esi]
  4026e9:	xchg   esi,eax
  4026ea:	cwde   
  4026eb:	adc    DWORD PTR ds:0xedc2aebe,ecx
  4026f1:	stos   DWORD PTR es:[edi],eax
  4026f2:	push   0xaf7ee5cb
  4026f7:	or     DWORD PTR [ebp-0x3b780b01],0xb6c1ffee
  402701:	xor    eax,0xac16d2e8
  402706:	jg     0x4026f2
  402708:	mov    dl,0xb7
  40270a:	adc    dl,BYTE PTR [ebx-0x241227c2]
  402710:	repz dec esi
  402712:	sub    edx,DWORD PTR [eax+eiz*1-0x6f]
  402716:	inc    ecx
  402717:	and    BYTE PTR [ebx+0x53],0xd4
  40271b:	dec    esi
  40271c:	push   es
  40271d:	xor    edi,DWORD PTR [edi]
  40271f:	push   cs
  402720:	add    DWORD PTR ds:0x50ed73cd,eax
  402726:	mov    dh,BYTE PTR [esi+ecx*1+0x13c3ff50]
  40272d:	sti    
  40272e:	inc    ebp
  40272f:	std    
  402730:	rcl    BYTE PTR [edi+edi*1+0x3b],0x81
  402735:	inc    ecx
  402736:	jg     0x40274c
  402738:	les    edi,FWORD PTR [ebp+edx*2+0x14]
  40273c:	jo     0x402779
  40273e:	pop    ecx
  40273f:	sub    ch,bl
  402741:	mov    DWORD PTR [edx-0x68f87a11],esi
  402747:	pusha  
  402748:	fldcw  WORD PTR ds:0xf4af8dca
  40274e:	je     0x4027be
  402750:	mov    eax,0xfb236045
  402755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402756:	daa    
  402757:	stos   BYTE PTR es:[edi],al
  402758:	mov    al,0x94
  40275a:	test   BYTE PTR [ebx],bh
  40275c:	jne    0x40271a
  40275e:	ins    DWORD PTR es:[edi],dx
  40275f:	dec    edi
  402760:	int3   
  402761:	pop    es
  402762:	fcmovnu st,st(7)
  402764:	mov    bl,0xff
  402766:	sub    eax,0xf8416b4c
  40276b:	arpl   WORD PTR [esp+esi*8],bp
  40276e:	popa   
  40276f:	retf   
  402770:	and    al,0xb8
  402772:	jl     0x40272f
  402774:	bound  edi,QWORD PTR [edx-0x16]
  402777:	jle    0x402747
  402779:	imul   edx,DWORD PTR [edi-0x6],0xffffffd3
  40277d:	sahf   
  40277e:	jae    0x4027b8
  402780:	mov    ah,al
  402782:	daa    
  402783:	test   DWORD PTR [ebp+0x570d6f82],ebx
  402789:	lods   eax,DWORD PTR ds:[esi]
  40278a:	xor    al,0x41
  40278c:	test   eax,0x37eb4615
  402791:	cld    
  402792:	and    al,0x20
  402794:	xchg   BYTE PTR [ebx],bl
  402796:	test   eax,0xe592594
  40279b:	and    BYTE PTR [eax],ah
  40279d:	mov    eax,0x70f17743
  4027a2:	icebp  
  4027a3:	jl     0x4027d6
  4027a5:	loope  0x40273a
  4027a7:	out    0x9e,eax
  4027a9:	test   DWORD PTR [ebx-0x23cfe556],0x56009902
  4027b3:	mov    WORD PTR [ebx],gs
  4027b5:	pop    ebx
  4027b6:	ret    0xceb6
  4027b9:	shl    BYTE PTR [edx-0x676d4e5f],cl
  4027bf:	imul   ecx,DWORD PTR [ecx+0x16],0x5e
  4027c3:	pop    esi
  4027c4:	push   0x682d2a77
  4027c9:	in     eax,0x68
  4027cb:	jp     0x4027f5
  4027cd:	pop    esp
  4027ce:	loop   0x40280a
  4027d0:	and    al,0x65
  4027d2:	sub    eax,0xdd86b259
  4027d8:	lahf   
  4027d9:	imul   eax,DWORD PTR [edx+ebp*1-0x1d142c23],0x30
  4027e1:	fstp   DWORD PTR [edx+0x5442e1f4]
  4027e7:	xlat   BYTE PTR ds:[ebx]
  4027e8:	fidivr WORD PTR [ebx]
  4027ea:	and    ecx,DWORD PTR [ebx-0x3]
  4027ed:	jne    0x40280a
  4027ef:	stc    
  4027f0:	fistp  WORD PTR [ebx]
  4027f2:	sbb    ebx,DWORD PTR [eax]
  4027f4:	push   ebx
  4027f5:	mov    ch,0xa7
  4027f7:	test   BYTE PTR [ebx-0x33a25bf4],dl
  4027fd:	inc    edi
  4027fe:	mov    edi,0xdc1e0961
  402803:	mov    edx,0xad365b4
  402808:	out    dx,eax
  402809:	jns    0x402836
  40280b:	jmp    0x993ef3da
  402810:	fcmovnb st,st(1)
  402812:	in     al,0x77
  402814:	enter  0xee7d,0x32
  402818:	leave  
  402819:	in     al,0x69
  40281b:	stos   BYTE PTR es:[edi],al
  40281c:	cmp    eax,0x79958155
  402821:	out    dx,al
  402822:	dec    DWORD PTR [ecx-0x67]
  402825:	loop   0x4027f3
  402827:	je     0x4027ee
  402829:	pop    esp
  40282a:	mov    ds:0x314a39ce,eax
  40282f:	pop    ss
  402830:	sub    al,0xd8
  402832:	int3   
  402833:	adc    al,0x90
  402835:	push   ecx
  402836:	mov    eax,DWORD PTR [eax]
  402838:	clc    
  402839:	retf   
  40283a:	adc    dl,bl
  40283c:	adc    al,0xbb
  40283e:	addr16 push edx
  402840:	test   eax,0xe9f381a
  402845:	js     0x4028c4
  402847:	dec    edx
  402848:	sub    BYTE PTR [esi-0x64ee0624],bl
  40284e:	ret    
  40284f:	mov    ecx,0xb1d9f6fd
  402854:	lds    ebx,FWORD PTR [eax-0x52]
  402857:	out    0xfb,al
  402859:	sbb    esi,DWORD PTR [ebx]
  40285b:	gs in  eax,dx
  40285d:	xchg   esi,esi
  40285f:	mov    edi,0x3dba98b5
  402864:	xchg   ebx,eax
  402865:	fldenv [ecx]
  402867:	mov    ch,0xa3
  402869:	fisubr WORD PTR [edi-0x11]
  40286c:	push   ebx
  40286d:	and    al,0xd
  40286f:	push   0x14e4c29f
  402874:	(bad)  
  402875:	pop    ebx
  402876:	adc    al,0x87
  402878:	aas    
  402879:	(bad)  [esi-0x44]
  40287c:	mov    ah,0xf
  40287e:	div    BYTE PTR [edi+eax*4-0x4d]
  402882:	stos   BYTE PTR es:[edi],al
  402883:	and    BYTE PTR [eax],cl
  402885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402886:	out    dx,al
  402887:	or     BYTE PTR [edi],ch
  402889:	jp     0x40289d
  40288b:	fsub   QWORD PTR [ecx]
  40288d:	push   ebp
  40288e:	dec    eax
  40288f:	out    0xb8,eax
  402891:	out    0x8a,eax
  402893:	sti    
  402894:	fistp  DWORD PTR [esi+0x554f0a47]
  40289a:	retf   0xcf10
  40289d:	add    DWORD PTR [eax+edx*8],edi
  4028a0:	in     al,dx
  4028a1:	dec    edx
  4028a2:	mov    bh,0x68
  4028a4:	sbb    DWORD PTR [eax-0x37],eax
  4028a7:	sub    DWORD PTR [ebx-0x9c1683e],ebp
  4028ad:	in     eax,0x7c
  4028af:	mov    esi,0xb2da7b63
  4028b4:	xor    eax,0x332f762f
  4028b9:	test   DWORD PTR [esi+0x2f],0x8483083f
  4028c0:	push   eax
  4028c1:	push   esi
  4028c2:	push   edi
  4028c3:	sbb    al,BYTE PTR [edi]
  4028c5:	add    BYTE PTR [edx+ecx*8+0x55],ch
  4028c9:	mov    bh,0x51
  4028cb:	add    BYTE PTR [ecx-0x3cdf7761],cl
  4028d1:	lds    esi,FWORD PTR [ebx+eiz*8]
  4028d4:	jecxz  0x40288b
  4028d6:	div    DWORD PTR [ebp+0x302fae4a]
  4028dc:	call   0x6856f20e
  4028e1:	aaa    
  4028e2:	(bad)  
  4028e3:	mov    ebp,DWORD PTR [edi-0x58]
  4028e6:	dec    ebx
  4028e7:	jne    0x40288f
  4028e9:	pop    ax
  4028eb:	call   0x4c8ab2a
  4028f0:	mov    eax,ds:0x25008c32
  4028f5:	and    eax,0xedec21e7
  4028fa:	and    DWORD PTR [esi],esi
  4028fc:	jae    0x4028ad
  4028fe:	aad    0x34
  402900:	inc    edi
  402901:	iret   
  402902:	mov    ds:0x10b7c456,al
  402907:	(bad)  
  402909:	int    0x15
  40290b:	jle    0x4028a3
  40290d:	into   
  40290e:	adc    al,0xbd
  402910:	or     ecx,DWORD PTR [ecx-0x10a97dd5]
  402916:	mov    eax,ds:0xfb1f833
  40291b:	lea    esi,[eax+0x1ea04560]
  402921:	xchg   ebx,eax
  402922:	cmp    BYTE PTR [esi+0x1ca51f3a],0xa6
  402929:	or     BYTE PTR [esi-0x5b],0xa4
  40292d:	nop
  40292e:	fs je  0x402905
  402931:	lock jmp 0xcf4f:0xff41df56
  402939:	shr    DWORD PTR [eax],0x67
  40293c:	mov    dl,0xb8
  40293e:	mov    bl,al
  402940:	dec    ebx
  402941:	cmp    DWORD PTR [esi],0x7bac7fb
  402947:	jmp    0x4028cb
  402949:	lock mov BYTE PTR [edx+eax*8+0x7b],bh
  40294e:	ins    BYTE PTR es:[edi],dx
  40294f:	iret   
  402950:	cmp    al,0x8f
  402952:	cli    
  402953:	nop
  402954:	(bad)  
  402955:	jge    0x4029cc
  402957:	fist   WORD PTR [ebx+0x367f8b55]
  40295d:	sbb    ebp,edi
  40295f:	xchg   ebp,eax
  402960:	and    eax,0x5322f34d
  402965:	mov    ecx,0xeca89618
  40296a:	call   0xec09a5e0
  40296f:	dec    ecx
  402970:	std    
  402971:	mov    edi,0xb910d55
  402976:	pop    eax
  402977:	dec    esi
  402978:	jb     0x402953
  40297a:	sbb    dl,BYTE PTR [esi+0x29]
  40297d:	leave  
  40297e:	xchg   edx,eax
  40297f:	(bad)  
  402980:	mov    eax,ds:0x9015e2b9
  402985:	fmul   DWORD PTR [edi-0x7b]
  402989:	ja     0x4029ec
  40298b:	aaa    
  40298c:	xor    BYTE PTR [edi+0x57261cd6],dl
  402992:	sbb    ah,BYTE PTR [edi-0x1d]
  402995:	jne    0x402a10
  402997:	(bad)
  40299c:	out    0xba,eax
  40299e:	and    BYTE PTR [ecx],ch
  4029a0:	pop    ecx
  4029a1:	cmp    ch,BYTE PTR [esi+edi*1+0x65]
  4029a5:	sahf   
  4029a6:	xor    BYTE PTR [ebx],0x2a
  4029a9:	cli    
  4029aa:	cdq    
  4029ab:	sti    
  4029ac:	rol    DWORD PTR [ebx+ecx*8+0xf],cl
  4029b0:	cmp    eax,0xcdf1f805
  4029b5:	or     BYTE PTR [ebp+0x2ed95587],0xd2
  4029bc:	cdq    
  4029bd:	mov    bh,0xf6
  4029bf:	xchg   esi,eax
  4029c0:	mov    ds:0x524d942,eax
  4029c5:	xchg   ebp,eax
  4029c6:	xor    BYTE PTR [eax-0x112fd80d],dl
  4029cc:	fld    QWORD PTR ds:0x39538ec4
  4029d2:	cmp    BYTE PTR [ecx],dh
  4029d4:	sar    DWORD PTR [ebx-0x52],cl
  4029d7:	sbb    BYTE PTR [edi+0x69134b66],bl
  4029dd:	pop    ebx
  4029de:	ret    0x1c99
  4029e1:	ds fcmove st,st(2)
  4029e4:	call   0x98847984
  4029e9:	inc    ebp
  4029ea:	fsub   st,st(0)
  4029ec:	jge    0x402978
  4029ee:	data16 jns 0x402984
  4029f1:	pop    edx
  4029f2:	int3   
  4029f3:	out    dx,al
  4029f4:	scas   al,BYTE PTR es:[edi]
  4029f5:	cwde   
  4029f6:	and    BYTE PTR [esp+eiz*2-0x3e3da604],dl
  4029fd:	sbb    BYTE PTR [ecx],0x94
  402a00:	or     al,BYTE PTR [edx]
  402a02:	ror    DWORD PTR [esi+0x2995503],cl
  402a08:	loop   0x40299e
  402a0a:	push   esi
  402a0b:	fwait
  402a0c:	(bad)  
  402a0d:	jo     0x4029d8
  402a0f:	dec    esi
  402a10:	cmp    BYTE PTR [edx-0x2a7e75a0],bh
  402a16:	(bad)  
  402a18:	lods   eax,DWORD PTR ds:[esi]
  402a19:	aad    0xb5
  402a1b:	out    0xae,al
  402a1d:	pop    ebx
  402a1e:	mov    ebp,0xfce5d8e0
  402a23:	cmp    al,0x34
  402a25:	out    0x88,al
  402a27:	inc    edi
  402a28:	popf   
  402a29:	jbe    0x402a21
  402a2b:	sub    eax,ecx
  402a2d:	fs ss enter 0x6618,0xa4
  402a33:	pop    ebx
  402a34:	out    dx,eax
  402a35:	jmp    0x402a4a
  402a37:	fadd   QWORD PTR ds:0x7789a93a
  402a3d:	vunpcklpd ymm6,ymm7,YMMWORD PTR [ecx+0x5c114521]
  402a45:	outs   dx,DWORD PTR es:[esi]
  402a47:	aad    0x3b
  402a49:	xor    bl,ah
  402a4b:	and    BYTE PTR [ebx-0x7efaf54c],ch
  402a51:	push   edx
  402a52:	xor    eax,0xe19501ca
  402a57:	fsubr  DWORD PTR [eax]
  402a59:	jmp    0xd0d9:0x83f232dd
  402a60:	pop    ebp
  402a61:	sub    DWORD PTR [esi*8-0x7dc9b295],0x7835a8ec
  402a6c:	mov    dl,0x65
  402a6e:	lods   eax,DWORD PTR ds:[esi]
  402a6f:	mov    ebx,0x1eb0bfe8
  402a74:	mov    cl,0x14
  402a76:	outs   dx,BYTE PTR ds:[esi]
  402a77:	aaa    
  402a78:	hlt    
  402a79:	fbstp  TBYTE PTR [ebx]
  402a7b:	sub    eax,0x939f3fdf
  402a80:	icebp  
  402a81:	and    BYTE PTR [edi-0x2cd72df4],bl
  402a87:	pusha  
  402a88:	loope  0x402aff
  402a8a:	and    eax,0xbefb37f
  402a8f:	into   
  402a90:	adc    BYTE PTR [eax+0x6b7b17e2],dl
  402a96:	pcmpgtb mm6,QWORD PTR ds:0x1602f160
  402a9d:	sti    
  402a9e:	das    
  402a9f:	adc    ah,ah
  402aa1:	sbb    BYTE PTR [eax],ch
  402aa3:	dec    esi
  402aa4:	lahf   
  402aa5:	hlt    
  402aa6:	add    dl,BYTE PTR [ebx-0x7359b633]
  402aac:	es dec edx
  402aae:	sbb    edx,DWORD PTR [ebx]
  402ab0:	add    eax,0xe6e8a629
  402ab5:	xchg   BYTE PTR [esi+0x3f12f2ef],bh
  402abb:	sub    BYTE PTR [edx],bh
  402abd:	push   esp
  402abe:	std    
  402abf:	cmp    eax,ebx
  402ac1:	test   al,ch
  402ac3:	push   ebp
  402ac4:	jg     0x402ae5
  402ac6:	push   ecx
  402ac7:	jge    0x402a66
  402ac9:	ja     0x402ab3
  402acb:	mov    ds:0x911f7994,al
  402ad0:	fld    DWORD PTR [edi]
  402ad2:	add    DWORD PTR [ecx+0x14],eax
  402ad5:	or     eax,DWORD PTR [edi]
  402ad7:	(bad)  
  402ad8:	ror    BYTE PTR [eax-0x3a],1
  402adb:	(bad)  
  402add:	mov    eax,0xa36578b5
  402ae2:	out    dx,eax
  402ae3:	ins    DWORD PTR es:[edi],dx
  402ae4:	pushf  
  402ae5:	scas   al,BYTE PTR es:[edi]
  402ae6:	adc    BYTE PTR [edi-0x3a95c44b],bl
  402aec:	sbb    DWORD PTR [esi-0x1bfee568],ebp
  402af2:	test   DWORD PTR [edx+0x2f383d7f],edx
  402af8:	das    
  402af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afa:	(bad)  
  402afb:	arpl   WORD PTR [edx+0x3a],cx
  402afe:	push   esi
  402aff:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402b01:	shl    BYTE PTR [eax-0x2d],cl
  402b04:	jae    0x402b64
  402b06:	in     al,dx
  402b07:	mov    esp,0xffa4ee0f
  402b0c:	xlat   BYTE PTR ds:[ebx]
  402b0d:	mov    eax,DWORD PTR [esp+ebx*8]
  402b10:	mov    esi,0x4afc9add
  402b16:	sub    al,0xd3
  402b18:	fbstp  TBYTE PTR [esi+0x3541b543]
  402b1e:	jmp    0x402aa8
  402b20:	mov    al,0x67
  402b22:	ret    
  402b23:	inc    di
  402b25:	test   eax,0xf60c8b9d
  402b2a:	adc    DWORD PTR [ebp+0x3b],edx
  402b2d:	jnp    0x402b32
  402b2f:	lds    edi,FWORD PTR [ebx]
  402b31:	sbb    ecx,0xfdd12a7e
  402b37:	loope  0x402ad7
  402b39:	data16 mov ds:0x8aa422bd,al
  402b3f:	add    ebp,DWORD PTR [esi]
  402b41:	scas   al,BYTE PTR es:[edi]
  402b42:	jno    0x402bae
  402b44:	xor    eax,0x6c65b972
  402b49:	cmc    
  402b4a:	icebp  
  402b4b:	shl    BYTE PTR [esi],cl
  402b4d:	shr    BYTE PTR ds:0xe8024b33,0x89
  402b54:	sbb    eax,0x6277f6ca
  402b59:	mov    dh,0x64
  402b5b:	xchg   esp,eax
  402b5c:	mov    al,0x16
  402b5e:	or     al,0x7f
  402b60:	xchg   ecx,eax
  402b61:	push   eax
  402b62:	jbe    0x402b7c
  402b64:	call   0x885d:0x3617de97
  402b6b:	out    0x89,al
  402b6d:	sub    bl,bh
  402b6f:	(bad)  
  402b70:	push   ds
  402b71:	pop    esi
  402b72:	sub    al,BYTE PTR [ecx]
  402b74:	mov    ah,0x82
  402b76:	cmc    
  402b77:	pop    ss
  402b78:	das    
  402b79:	(bad)  
  402b7a:	mov    edx,0x4eebeb13
  402b7f:	faddp  st(3),st
  402b81:	ss adc ebp,esp
  402b84:	adc    ah,BYTE PTR [ebx-0x4d01a71c]
  402b8a:	push   es
  402b8b:	mov    ebp,0x2a64a20
  402b90:	test   al,0x1e
  402b92:	cmp    DWORD PTR [esi+0xdae81a4],0x51
  402b99:	stc    
  402b9a:	cmp    dh,BYTE PTR [edi+0x17]
  402b9d:	sbb    BYTE PTR [ecx-0x218d1f63],dh
  402ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba4:	adc    BYTE PTR [eax+0x7c],bh
  402ba7:	cmp    BYTE PTR [ecx+0x2f4bce51],dl
  402bad:	fiadd  DWORD PTR [eax+eiz*8]
  402bb0:	test   dl,0x85
  402bb3:	cmp    dh,al
  402bb5:	ds push eax
  402bb7:	jecxz  0x402bd3
  402bb9:	xchg   edi,eax
  402bba:	push   edi
  402bbb:	and    eax,0x707ed05e
  402bc0:	pop    ds
  402bc1:	sahf   
  402bc2:	retf   
  402bc3:	icebp  
  402bc4:	inc    ebp
  402bc5:	mov    eax,ds:0x3acc8996
  402bca:	sbb    dh,BYTE PTR [ebp+0x5f920ca1]
  402bd0:	loope  0x402c0d
  402bd2:	cmp    eax,0xdb36e044
  402bd7:	pop    ebx
  402bd8:	inc    ecx
  402bd9:	addr16 sub al,0x3f
  402bdc:	fimul  WORD PTR [ecx]
  402bde:	xchg   DWORD PTR [edx+esi*4-0x6e1e0339],esi
  402be5:	push   ecx
  402be6:	out    0xbf,eax
  402be8:	js     0x402c4a
  402bea:	mov    dh,0xdb
  402bec:	fst    DWORD PTR [ebx]
  402bee:	xchg   edi,eax
  402bef:	xchg   edi,eax
  402bf0:	push   ss
  402bf1:	in     eax,dx
  402bf2:	push   esi
  402bf3:	cmp    DWORD PTR [edx+0x31dc3745],ebx
  402bf9:	test   BYTE PTR [ecx],bh
  402bfb:	aaa    
  402bfc:	jg     0x402c17
  402bfe:	sbb    ebp,DWORD PTR [ebp-0x6dea245b]
  402c04:	loop   0x402bf0
  402c06:	bound  ecx,QWORD PTR [ebx-0x36]
  402c09:	sbb    BYTE PTR [edx+0x23006e86],0xed
  402c10:	int3   
  402c11:	pushf  
  402c12:	inc    ecx
  402c13:	sub    cl,BYTE PTR [ecx]
  402c15:	clc    
  402c16:	aam    0xb2
  402c18:	mov    ah,0xa8
  402c1a:	mov    esp,0x40b766a9
  402c1f:	pop    esp
  402c20:	(bad)  
  402c21:	js     0x402be3
  402c23:	int3   
  402c24:	mov    ch,0xb6
  402c26:	fwait
  402c27:	sti    
  402c28:	jp     0x402bed
  402c2a:	cmp    DWORD PTR [edi+0x35],edi
  402c2d:	daa    
  402c2e:	(bad)  
  402c2f:	ffree  st(4)
  402c31:	shl    BYTE PTR [esi],0xe1
  402c34:	ss or  eax,0xf4430253
  402c3a:	imul   edx,DWORD PTR [edx+0x5d],0xf216b606
  402c41:	cwde   
  402c42:	mov    dh,ch
  402c44:	jne    0x402c19
  402c46:	les    edi,FWORD PTR [edx+0x7e2f800a]
  402c4c:	into   
  402c4d:	push   ds
  402c4e:	repz inc edi
  402c50:	pushf  
  402c51:	jle    0x402c0f
  402c53:	in     al,0xdf
  402c55:	ror    BYTE PTR [ebx+0x65],1
  402c58:	dec    eax
  402c59:	std    
  402c5a:	xlat   BYTE PTR ds:[ebx]
  402c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c5c:	(bad)  [ebp+0x73]
  402c5f:	loop   0x402c9e
  402c61:	xlat   BYTE PTR ds:[ebx]
  402c62:	leave  
  402c63:	mov    dl,0x81
  402c65:	or     BYTE PTR [ecx-0x20210f30],al
  402c6b:	aad    0x2a
  402c6d:	pop    edx
  402c6e:	out    dx,eax
  402c6f:	xchg   edx,eax
  402c70:	imul   eax,DWORD PTR [esi],0x76a74f8b
  402c76:	xor    al,0xf9
  402c78:	dec    edx
  402c79:	jae    0x402bfe
  402c7b:	imul   ebx,DWORD PTR [edi-0x1e],0xb8a94d1a
  402c82:	push   ebp
  402c83:	mov    al,BYTE PTR [edx+0x36439178]
  402c89:	adc    al,0xe8
  402c8b:	add    DWORD PTR [eax-0x2e],0x54e38b64
  402c92:	and    DWORD PTR [ebx-0x1b4b470b],0x114b6937
  402c9c:	xchg   ecx,eax
  402c9d:	xchg   ecx,eax
  402c9e:	mov    bh,0x99
  402ca0:	and    BYTE PTR [ecx+0x79],cl
  402ca3:	sbb    BYTE PTR [edi-0x477fd9bc],0x2b
  402caa:	int    0xcc
  402cac:	cmp    eax,0x226c1562
  402cb1:	mov    cl,0x87
  402cb3:	gs out 0x15,al
  402cb6:	out    dx,eax
  402cb7:	stc    
  402cb8:	outs   dx,BYTE PTR ds:[esi]
  402cb9:	sbb    eax,0x1d61d9c4
  402cbe:	iret   
  402cbf:	les    eax,FWORD PTR [eax+0x59]
  402cc2:	icebp  
  402cc3:	sub    ebx,DWORD PTR [ecx-0x2813977d]
  402cc9:	les    ebp,FWORD PTR [edx-0x31]
  402ccc:	in     eax,dx
  402ccd:	mov    cl,0xbe
  402ccf:	imul   esp,DWORD PTR [edi],0x6
  402cd2:	push   edi
  402cd3:	outs   dx,DWORD PTR ds:[esi]
  402cd4:	sub    BYTE PTR [eax+0x3903aab7],al
  402cda:	in     al,0xb2
  402cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cdd:	mov    cs,WORD PTR [edx+0x5bc6531d]
  402ce3:	or     esp,DWORD PTR [edi]
  402ce5:	xchg   ebx,eax
  402ce6:	pop    ss
  402ce7:	jp     0x402c7b
  402ce9:	outs   dx,DWORD PTR ds:[esi]
  402cea:	ds jnp 0x402c71
  402ced:	adc    eax,0x941bf6ad
  402cf2:	cli    
  402cf3:	adc    BYTE PTR [edi+0xb],bh
  402cf6:	sbb    DWORD PTR es:[ebx-0x304a0a23],0xc413d81
  402d01:	adc    al,0xe7
  402d03:	test   eax,0xedc0d654
  402d08:	jecxz  0x402c9d
  402d0a:	push   esi
  402d0b:	(bad)  
  402d0c:	jg     0x402d14
  402d0e:	mov    ebx,DWORD PTR [ecx+edx*1+0x52]
  402d12:	imul   esi
  402d14:	sbb    cl,BYTE PTR [ecx]
  402d16:	retf   
  402d17:	test   eax,0xe712a315
  402d1c:	outs   dx,BYTE PTR ds:[esi]
  402d1d:	xchg   ebp,eax
  402d1e:	loop   0x402cf8
  402d20:	mov    dh,0x79
  402d22:	sub    cl,BYTE PTR [edi-0x701a9168]
  402d28:	test   eax,0x44771db8
  402d2d:	and    BYTE PTR [eax],dl
  402d2f:	push   es
  402d30:	pop    esi
  402d31:	lds    ecx,FWORD PTR [ebx+0x8]
  402d34:	outs   dx,BYTE PTR ds:[esi]
  402d35:	out    dx,eax
  402d36:	xchg   ebp,eax
  402d37:	(bad)  
  402d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d39:	stos   BYTE PTR es:[edi],al
  402d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d3b:	mov    dl,0x77
  402d3d:	shr    edi,1
  402d3f:	adc    al,0x2a
  402d42:	shl    DWORD PTR [edx],cl
  402d44:	mov    dl,bh
  402d46:	repz mov edx,0xcba1a516
  402d4c:	stos   DWORD PTR es:[edi],eax
  402d4d:	(bad)  
  402d4e:	pop    ebx
  402d4f:	adc    ah,BYTE PTR [edx+edi*4-0x6b934bf7]
  402d56:	test   DWORD PTR [eax-0x6c],ebp
  402d59:	push   cs
  402d5a:	ret    0x251
  402d5d:	clc    
  402d5e:	mov    ah,0x93
  402d60:	mov    es,WORD PTR [edx]
  402d62:	add    ecx,DWORD PTR [edi-0x756051e4]
  402d68:	adc    BYTE PTR [esi],cl
  402d6a:	push   0x55
  402d6c:	in     al,0xab
  402d6e:	push   es
  402d6f:	add    eax,0x3b26c564
  402d74:	mov    dl,0x39
  402d76:	or     DWORD PTR [eax],ecx
  402d78:	inc    esi
  402d79:	jb     0x402dc1
  402d7b:	xchg   ebx,eax
  402d7c:	out    dx,eax
  402d7d:	dec    edx
  402d7e:	shl    DWORD PTR [ecx+0x4710f78],1
  402d84:	popf   
  402d85:	fs jl  0x402d9e
  402d88:	popa   
  402d89:	or     bl,cl
  402d8b:	sub    DWORD PTR [ebp-0x7a],edx
  402d8e:	mov    eax,ds:0xba55b7a5
  402d93:	aam    0xb0
  402d95:	cli    
  402d96:	push   edx
  402d97:	stos   BYTE PTR es:[edi],al
  402d98:	mov    ds:0x296f8434,al
  402d9d:	fwait
  402d9e:	daa    
  402d9f:	adc    cl,BYTE PTR [ebx-0x75]
  402da2:	or     al,0x8b
  402da4:	mov    bh,BYTE PTR [esi]
  402da6:	(bad)  
  402da8:	jecxz  0x402d3a
  402daa:	pop    esi
  402dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dac:	cmc    
  402dad:	xchg   BYTE PTR [ecx+ebx*8-0x72],bl
  402db1:	and    ecx,DWORD PTR [esi+esi*2-0x1d9f5c5b]
  402db8:	add    ch,BYTE PTR [eax-0x48f47521]
  402dbe:	push   esi
  402dbf:	jae    0x402de6
  402dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc2:	inc    edx
  402dc3:	fwait
  402dc4:	sub    edi,esi
  402dc6:	add    BYTE PTR [ecx+0x1bac3a8a],ch
  402dcc:	fcomp  QWORD PTR [ecx]
  402dce:	pop    edi
  402dcf:	sbb    al,0xf5
  402dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd2:	enter  0xba45,0xfc
  402dd6:	lea    ebx,[eax+0x635c9dc6]
  402ddc:	push   cs
  402ddd:	inc    edi
  402dde:	das    
  402ddf:	mov    eax,ds:0x9da105e6
  402de4:	aam    0xc0
  402de6:	cld    
  402de7:	out    dx,eax
  402de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de9:	xor    al,0xdb
  402deb:	test   DWORD PTR [esp+ebp*1],ecx
  402dee:	inc    ecx
  402def:	xor    dh,0x2c
  402df2:	out    dx,al
  402df3:	es imul ebx,ecx,0xffffffeb
  402df7:	lahf   
  402df8:	call   0xa01d:0x235a3d71
  402dff:	push   edi
  402e00:	or     DWORD PTR [esi-0x14],ebp
  402e03:	jle    0x402dd4
  402e05:	pushf  
  402e06:	stos   DWORD PTR es:[edi],eax
  402e07:	aaa    
  402e08:	jb     0x402dd5
  402e0a:	cmp    eax,0x66523705
  402e0f:	xor    edi,ebx
  402e11:	mov    WORD PTR [ecx],ss
  402e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e14:	ret    
  402e15:	jmp    0x7836:0xdb634913
  402e1c:	and    DWORD PTR [eax],esp
  402e1e:	and    bl,BYTE PTR [edx-0x49]
  402e21:	adc    esi,esi
  402e23:	enter  0xe2ba,0x9a
  402e27:	pop    edx
  402e28:	mov    WORD PTR [ebx],ss
  402e2a:	pop    esi
  402e2b:	sbb    eax,0x30dcb592
  402e30:	hlt    
  402e31:	bound  edi,QWORD PTR [edx-0xf5c4cdc]
  402e37:	rol    BYTE PTR [eax],0xff
  402e3a:	cmp    BYTE PTR [ebx],cl
  402e3c:	mov    ch,0x38
  402e3e:	add    al,0xb2
  402e40:	imul   ecx,DWORD PTR [edi],0x9f809790
  402e46:	sub    al,ch
  402e48:	(bad)  
  402e49:	inc    esi
  402e4a:	mov    ds:0x410d5a6c,al
  402e4f:	xor    ecx,DWORD PTR [eax-0x7d]
  402e52:	pop    ss
  402e53:	dec    edi
  402e54:	mov    dl,0x9f
  402e56:	pop    eax
  402e57:	fs icebp 
  402e59:	test   DWORD PTR [edx-0x4a],edx
  402e5c:	pop    ebx
  402e5d:	cmp    esi,DWORD PTR [edi]
  402e5f:	popf   
  402e60:	out    0xec,eax
  402e62:	popf   
  402e63:	or     al,0xb4
  402e65:	inc    DWORD PTR [ebx+0x3e]
  402e68:	push   esp
  402e69:	dec    edx
  402e6a:	out    0x48,eax
  402e6c:	mov    eax,ds:0x616eb291
  402e71:	adc    bl,BYTE PTR [esi]
  402e73:	push   eax
  402e74:	ja     0x402e8a
  402e76:	int    0x61
  402e78:	lods   eax,DWORD PTR ds:[esi]
  402e79:	fwait
  402e7a:	loopne 0x402efb
  402e7c:	in     eax,dx
  402e7d:	ror    BYTE PTR [eax-0x5dde0d3e],1
  402e83:	jmp    0xa235b1eb
  402e88:	add    bh,BYTE PTR ds:0xd480d1a
  402e8e:	loop   0x402f02
  402e90:	xchg   ebx,eax
  402e91:	imul   ebx,DWORD PTR [ebx-0x6aba37e5],0x5c
  402e98:	sub    BYTE PTR [ebx-0x71],al
  402e9b:	pop    es
  402e9c:	or     DWORD PTR [esi+0x43],esp
  402e9f:	ss lock jmp 0xfee369d0
  402ea6:	push   0x6
  402ea8:	and    al,0x33
  402eaa:	inc    edi
  402eab:	loopne 0x402e84
  402ead:	jg     0x402e8f
  402eaf:	arpl   WORD PTR [ecx-0x12cd41b3],ax
  402eb5:	mov    ecx,0x8097f2ae
  402eba:	push   cs
  402ebb:	jnp    0x402e62
  402ebd:	jp     0x402e8f
  402ebf:	imul   edx,DWORD PTR [edx],0xde62b5b
  402ec5:	push   cs
  402ec6:	jmp    0x3ff8:0x866e6b20
  402ecd:	arpl   WORD PTR [ebx],cx
  402ecf:	pop    edi
  402ed0:	xchg   ecx,eax
  402ed1:	xchg   ecx,eax
  402ed2:	xor    eax,0x7e9033e9
  402ed7:	lahf   
  402ed8:	mov    eax,ds:0x80f9c237
  402edd:	add    edx,DWORD PTR [edi-0x454ba531]
  402ee3:	outs   dx,BYTE PTR ds:[esi]
  402ee4:	xchg   edx,eax
  402ee5:	ss pop ebx
  402ee7:	ror    BYTE PTR [edx+ebp*1+0x52be7837],0xae
  402eef:	sbb    DWORD PTR [eax+0x3f],eax
  402ef2:	pop    ds
  402ef3:	lods   al,BYTE PTR ds:[esi]
  402ef4:	push   es
  402ef5:	jne    0x402ee2
  402ef7:	push   ds
  402ef8:	xor    al,0x65
  402efa:	mov    edi,0xc560b638
  402eff:	je     0x402ed8
  402f01:	sbb    BYTE PTR [esi],al
  402f03:	sbb    bh,BYTE PTR [ebx]
  402f05:	fstp   DWORD PTR [ecx-0x2]
  402f08:	xchg   BYTE PTR [ebx+ecx*2],cl
  402f0b:	les    eax,FWORD PTR [ebp-0x5252fb9c]
  402f11:	sub    eax,0x945f8d93
  402f16:	dec    ecx
  402f17:	push   ds
  402f18:	or     BYTE PTR [eax],0xf4
  402f1b:	jp     0x402ec6
  402f1d:	call   0xcd68:0xf25d417d
  402f24:	adc    BYTE PTR [eax-0x50],ah
  402f27:	and    DWORD PTR [edi],ebx
  402f29:	mov    edx,DWORD PTR [ecx]
  402f2b:	nop
  402f2c:	(bad)  
  402f2d:	jp     0x402f74
  402f2f:	sar    BYTE PTR [ecx],0x79
  402f32:	bound  edx,QWORD PTR [edi+0x33]
  402f35:	sbb    ch,dh
  402f37:	mov    ds:0xe95d31b7,eax
  402f3c:	cmp    ch,bh
  402f3e:	fadd   QWORD PTR [edx]
  402f40:	mov    cs,WORD PTR [edx]
  402f42:	stc    
  402f43:	sbb    dh,ch
  402f45:	fisubr WORD PTR [ecx+0x6c7e90e7]
  402f4b:	jge    0x402eee
  402f4d:	xor    DWORD PTR [esi],edx
  402f4f:	mov    eax,DWORD PTR [ebx+0x18]
  402f52:	mov    WORD PTR [eax+0x45],ss
  402f55:	and    BYTE PTR [edi-0x8],al
  402f58:	test   esp,ebp
  402f5a:	in     al,dx
  402f5b:	mov    ds:0x6cfde0d6,al
  402f60:	scas   al,BYTE PTR es:[edi]
  402f61:	retf   0x519a
  402f64:	jmp    0xf12ba120
  402f69:	pop    edi
  402f6a:	pusha  
  402f6b:	xor    bl,BYTE PTR [edi-0x40]
  402f6e:	enter  0xc14f,0x35
  402f72:	imul   eax,DWORD PTR [edi+0x46],0xffffffb1
  402f76:	ins    BYTE PTR es:[edi],dx
  402f77:	std    
  402f78:	inc    eax
  402f79:	popa   
  402f7a:	pop    esp
  402f7b:	sbb    bh,BYTE PTR [edx-0x1563f5f2]
  402f81:	pop    eax
  402f83:	jo     0x403000
  402f85:	lods   al,BYTE PTR ds:[esi]
  402f86:	fldcw  WORD PTR [ebx]
  402f88:	cdq    
  402f89:	sub    eax,0xf3b7fe5b
  402f8e:	or     al,0xf8
  402f90:	test   bl,bl
  402f92:	mov    edi,0x1a10c81b
  402f97:	mov    esi,0xa565dcbe
  402f9c:	js     0x402f60
  402f9e:	(bad)  
  402f9f:	xchg   ecx,eax
  402fa0:	shl    BYTE PTR [ebx-0x14c6bfcc],1
  402fa6:	jo     0x402f7b
  402fa8:	rcl    BYTE PTR [esi],1
  402faa:	sub    al,BYTE PTR [ebp+ecx*1+0x3bc53738]
  402fb1:	fadd   st,st(2)
  402fb3:	mov    dl,0x3c
  402fb5:	xchg   esp,eax
  402fb6:	lahf   
  402fb7:	js     0x402ffb
  402fb9:	mov    gs,WORD PTR [ecx+0x59]
  402fbc:	push   ss
  402fbd:	push   ss
  402fbe:	push   ebx
  402fbf:	arpl   WORD PTR [edi],bx
  402fc1:	fsub   DWORD PTR [ebp+0x73]
  402fc4:	ss aaa 
  402fc6:	arpl   bx,dx
  402fc8:	xchg   ebx,eax
  402fc9:	fs mov dh,0xd0
  402fcc:	ins    BYTE PTR es:[edi],dx
  402fcd:	mov    ch,0xfa
  402fcf:	ds push eax
  402fd1:	or     eax,0xe326b124
  402fd6:	les    si,DWORD PTR [eax-0x71]
  402fda:	test   BYTE PTR [esi],0x58
  402fdd:	dec    ebp
  402fde:	mov    al,ds:0x28c3f9ce
  402fe3:	or     ebx,DWORD PTR [ebx-0x1e037b3c]
  402fe9:	(bad)  
  402fea:	outs   dx,BYTE PTR ds:[esi]
  402feb:	daa    
  402fec:	mov    ch,0x0
  402fee:	int3   
  402fef:	and    al,BYTE PTR [ebx]
  402ff1:	or     eax,DWORD PTR [eax-0x33]
  402ff4:	xor    DWORD PTR [edi+eax*2-0x7b43d970],esi
  402ffb:	xchg   ebp,eax
  402ffc:	jge    0x402f95
  402ffe:	mov    ecx,DWORD PTR [esi+0xd]
  403001:	mov    DWORD PTR [edx],edx
  403003:	je     0x403001
  403005:	fiadd  DWORD PTR [edx-0x455a972]
  40300b:	aad    0xa0
  40300d:	push   esi
  40300e:	jo     0x402fc6
  403010:	mov    eax,ds:0xace97902
  403015:	sbb    eax,0x343a4e67
  40301a:	inc    esp
  40301b:	mov    ebx,0xb211791a
  403020:	mov    DWORD PTR [edi],ebx
  403022:	retf   0xc4d9
  403025:	das    
  403026:	mov    ah,0xda
  403028:	push   ds
  403029:	push   edi
  40302a:	pop    ds
  40302b:	xlat   BYTE PTR ds:[ebx]
  40302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302d:	(bad)  
  40302e:	sti    
  40302f:	outs   dx,BYTE PTR ds:[esi]
  403030:	add    eax,DWORD PTR [ebp+0x7e909789]
  403036:	adc    bl,BYTE PTR [edx-0xc]
  403039:	pushf  
  40303a:	or     bl,BYTE PTR [ebp+0x123c803]
  403040:	cmp    esi,DWORD PTR [eax]
  403042:	retf   0xaf4d
  403045:	and    al,0x8e
  403047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403048:	mov    dh,0x62
  40304a:	jle    0x40303a
  40304c:	jns    0x40303b
  40304e:	cmp    BYTE PTR [eax-0x17],ch
  403051:	outs   dx,BYTE PTR ds:[esi]
  403052:	inc    ecx
  403053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403054:	or     ah,cl
  403056:	mov    ebx,0x6cc95e0b
  40305b:	jno    0x40305b
  40305d:	push   ds
  40305e:	bound  ebx,QWORD PTR [esp+esi*1-0x757d6144]
  403065:	push   es
  403066:	inc    eax
  403067:	in     eax,dx
  403068:	sar    dl,0xe9
  40306b:	ins    BYTE PTR es:[edi],dx
  40306c:	xchg   BYTE PTR [esi],ah
  40306e:	lock mov ds:0xe4b029db,eax
  403074:	mov    eax,esp
  403076:	test   al,0x69
  403078:	mov    ecx,0x45d9350c
  40307d:	xor    DWORD PTR [edx],edi
  40307f:	push   0x38
  403081:	xor    DWORD PTR [ebx+0x533f3649],eax
  403087:	lahf   
  403088:	mov    esi,0x714cb2e9
  40308d:	arpl   WORD PTR gs:[ecx+ecx*4],sp
  403091:	mov    esp,0x1d6364a2
  403096:	js     0x40310f
  403098:	hlt    
  403099:	fisubr DWORD PTR [esi-0x62056b30]
  40309f:	jo     0x40302f
  4030a1:	lahf   
  4030a2:	adc    DWORD PTR [edi],eax
  4030a4:	or     BYTE PTR [edx-0x68],0xca
  4030a8:	out    dx,eax
  4030a9:	iret   
  4030aa:	xchg   ebx,eax
  4030ab:	or     eax,0xb4af9e35
  4030b0:	jecxz  0x403056
  4030b2:	push   0x6
  4030b4:	lds    ebp,FWORD PTR [eax+eiz*1-0x63]
  4030b8:	pop    esp
  4030b9:	push   edi
  4030ba:	add    DWORD PTR [edi-0x13],0xfb9d553b
  4030c1:	add    esp,ebp
  4030c3:	adc    edx,esi
  4030c5:	sahf   
  4030c6:	cmc    
  4030c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030c8:	mov    dl,0xd5
  4030ca:	ret    
  4030cb:	mov    ebx,0x8bab2a20
  4030d0:	repz fnstcw WORD PTR [ecx+edx*8]
  4030d4:	jmp    0x4030ad
  4030d6:	daa    
  4030d7:	mov    ds:0x182bf6b9,eax
  4030dc:	jge    0x4030a2
  4030de:	idiv   BYTE PTR [esi+ecx*4]
  4030e1:	imul   ebp,DWORD PTR [ebp-0xb20e229],0x3c
  4030e8:	add    esi,DWORD PTR [edx+0x643ed3f9]
  4030ee:	dec    edi
  4030ef:	add    BYTE PTR [esi],ch
  4030f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030f2:	sbb    ah,BYTE PTR [ebx+0x12]
  4030f5:	mov    eax,0xc0fa9fb
  4030fa:	popf   
  4030fb:	call   0x57137027
  403100:	jmp    0x268b:0x971661c
  403107:	mov    cl,dh
  403109:	dec    edx
  40310a:	shl    DWORD PTR [ebp+0x4b],1
  40310d:	mov    ebx,es
  40310f:	ror    BYTE PTR ds:0x4a4064a1,cl
  403115:	add    BYTE PTR [ebp+0x5380ae68],cl
  40311b:	ret    
  40311c:	and    DWORD PTR [ecx],ebx
  40311e:	or     DWORD PTR [edx],edx
  403120:	loop   0x4030a6
  403122:	into   
  403123:	and    eax,0xd618620f
  403128:	inc    ebx
  403129:	add    eax,0xc10ef7ba
  40312e:	imul   edx,DWORD PTR [edi],0x4c1179a4
  403134:	xor    eax,0x1e00b8a2
  403139:	fiadd  DWORD PTR ds:0x2897e3a1
  40313f:	aaa    
  403140:	mov    edi,0x83bee7eb
  403145:	push   ds
  403146:	inc    esp
  403147:	jge    0x403134
  403149:	in     al,0x47
  40314b:	and    BYTE PTR [esi-0x7e],al
  40314e:	or     DWORD PTR [eax+0xb418c69],edi
  403154:	add    ecx,ebx
  403156:	or     bh,BYTE PTR [ecx+0x4a]
  403159:	fwait
  40315a:	or     eax,0xb4d4abdb
  40315f:	sar    BYTE PTR [esp+eax*2],0xe5
  403163:	pop    es
  403164:	cmp    al,0xda
  403166:	rcr    DWORD PTR [ebx+0x88b977e],1
  40316c:	xchg   edi,eax
  40316d:	pop    edi
  40316e:	mul    BYTE PTR [edi+0x7a3e14c4]
  403174:	mov    ch,0x24
  403176:	push   ds
  403177:	repz test DWORD PTR [esi],ebp
  40317a:	mov    eax,ds:0x3658f372
  40317f:	retf   
  403180:	ins    DWORD PTR es:[edi],dx
  403181:	aas    
  403182:	int3   
  403183:	scas   eax,DWORD PTR es:[edi]
  403184:	je     0x403134
  403186:	fcmovbe st,st(6)
  403188:	pushf  
  403189:	pop    ebx
  40318a:	push   ebp
  40318b:	and    DWORD PTR [ecx+0x6c2bec42],edi
  403191:	test   al,0xd1
  403193:	dec    ebx
  403194:	or     ebx,DWORD PTR [edi-0x57]
  403197:	push   cs
  403198:	sti    
  403199:	nop
  40319a:	arpl   WORD PTR [ebx],cx
  40319c:	sahf   
  40319d:	std    
  40319e:	xchg   ebx,eax
  40319f:	adc    esp,DWORD PTR [edx-0x30]
  4031a2:	sbb    eax,0x3c2201cf
  4031a7:	jb     0x403224
  4031a9:	mov    eax,DWORD PTR [edi]
  4031ab:	xor    eax,0x8f5827af
  4031b0:	mov    bh,0x84
  4031b2:	fcom   QWORD PTR [esi+0x1302589d]
  4031b8:	mov    dl,0xff
  4031ba:	and    dl,BYTE PTR [edi+0x6e]
  4031bd:	into   
  4031be:	jecxz  0x40318a
  4031c0:	aad    0x9d
  4031c2:	mov    WORD PTR [edx+0x1c],ds
  4031c5:	pop    ebx
  4031c6:	scas   eax,DWORD PTR es:[edi]
  4031c7:	inc    BYTE PTR [esi]
  4031c9:	popf   
  4031ca:	pop    es
  4031cb:	imul   edi,ebp,0x32
  4031ce:	sbb    al,0x12
  4031d0:	mov    ah,0x2a
  4031d2:	cmp    DWORD PTR [ecx-0x68],0x62
  4031d6:	sahf   
  4031d7:	loope  0x4031dc
  4031d9:	push   cs
  4031da:	leave  
  4031db:	js     0x40321e
  4031dd:	mov    ch,0x91
  4031df:	pop    ds
  4031e0:	je     0x403178
  4031e2:	daa    
  4031e3:	addr16 mov al,0x8a
  4031e6:	inc    edx
  4031e7:	xchg   BYTE PTR [edi],bl
  4031e9:	pop    ebx
  4031ea:	cmp    DWORD PTR [ecx+edx*2+0x55],esi
  4031ee:	mov    edi,0xc867a1a8
  4031f3:	mov    dl,0x4
  4031f5:	stos   DWORD PTR es:[edi],eax
  4031f6:	push   ss
  4031f7:	or     esp,0xccfa312
  4031fd:	inc    edx
  4031fe:	hlt    
  4031ff:	dec    esi
  403200:	test   eax,0xf08aa8b6
  403205:	mov    bl,0xa1
  403207:	ins    BYTE PTR es:[edi],dx
  403208:	jbe    0x403287
  40320a:	mov    ah,BYTE PTR [edx+0xb3e6fce]
  403210:	fild   QWORD PTR [edx+edx*2-0x19]
  403214:	inc    edi
  403215:	push   esp
  403216:	sti    
  403217:	adc    al,0xc5
  403219:	pop    ss
  40321a:	push   ds
  40321b:	out    0x54,eax
  40321d:	push   0x68
  40321f:	mov    ch,0xe3
  403221:	lds    ebp,FWORD PTR [ecx]
  403223:	adc    BYTE PTR [ecx+ebp*4-0x59adb10],0x6d
  40322b:	(bad)  
  40322c:	popa   
  40322d:	and    edx,DWORD PTR [esi+0x1d06a9eb]
  403233:	sub    eax,0xf7329629
  403238:	rcl    BYTE PTR [eax+esi*4],0xfd
  40323c:	mov    eax,0x1b0e50f8
  403241:	cmc    
  403242:	sub    BYTE PTR [edx],cl
  403244:	jnp    0x403220
  403246:	dec    edx
  403247:	xlat   BYTE PTR ds:[ebx]
  403248:	repnz xor DWORD PTR [edi],0x204580b7
  40324f:	int    0xa3
  403251:	mov    ch,0x45
  403253:	xchg   edx,esi
  403255:	ret    
  403256:	sbb    eax,DWORD PTR [esi+esi*1+0x74]
  40325a:	lods   al,BYTE PTR ds:[esi]
  40325b:	inc    esi
  40325c:	ja     0x403233
  40325e:	sbb    eax,0x2e88a607
  403263:	in     al,dx
  403264:	stc    
  403265:	pop    esp
  403266:	in     eax,0x80
  403268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403269:	cld    
  40326a:	or     ecx,esi
  40326c:	xchg   edx,eax
  40326d:	cmp    DWORD PTR [eax],ebx
  40326f:	test   esi,esi
  403271:	dec    ecx
  403272:	xor    al,0x9d
  403274:	sub    bl,BYTE PTR [edx]
  403276:	int3   
  403277:	pop    ebx
  403278:	int    0x1b
  40327a:	pop    ds
  40327b:	stos   BYTE PTR es:[edi],al
  40327c:	dec    ebp
  40327d:	mov    dl,0x1b
  40327f:	mov    ch,0x70
  403281:	adc    DWORD PTR [edx-0x3586fb2b],edi
  403287:	out    dx,eax
  403288:	iret   
  403289:	mov    ebp,0x18431fc3
  40328e:	and    BYTE PTR [esi-0x4c611933],cl
  403294:	inc    edi
  403295:	xor    bh,BYTE PTR [ecx+0x11289680]
  40329b:	pop    eax
  40329c:	jae    0x403288
  40329e:	push   esp
  40329f:	imul   esp,DWORD PTR [ecx-0x5e],0xe9c0bc3a
  4032a6:	test   al,0xac
  4032a8:	mov    al,0xc8
  4032aa:	lahf   
  4032ab:	inc    edx
  4032ac:	jb     0x403311
  4032ae:	mov    esi,0xb8d75f57
  4032b3:	(bad)  
  4032b4:	leave  
  4032b5:	sub    edi,DWORD PTR [esi+0x53]
  4032b8:	nop
  4032b9:	pop    esi
  4032ba:	dec    ebp
  4032bb:	in     eax,0x31
  4032bd:	addr16 jbe 0x40324c
  4032c0:	les    esi,FWORD PTR [edx+0x79853ec3]
  4032c6:	xchg   edx,eax
  4032c7:	bound  ecx,QWORD PTR [edx]
  4032c9:	test   BYTE PTR [edi+edi*4-0x1f],bl
  4032cd:	and    BYTE PTR [ecx-0x6e],bh
  4032d0:	jbe    0x403304
  4032d2:	and    bl,BYTE PTR [eax]
  4032d4:	ins    BYTE PTR es:[edi],dx
  4032d5:	fcomp  QWORD PTR [ecx+eiz*8]
  4032d8:	cmc    
  4032d9:	ins    DWORD PTR es:[edi],dx
  4032da:	test   al,0xa8
  4032dc:	aad    0x84
  4032de:	jl     0x403301
  4032e0:	stc    
  4032e1:	sbb    bh,bl
  4032e3:	adc    ecx,esp
  4032e5:	popf   
  4032e6:	and    DWORD PTR [edx-0x7e],ecx
  4032e9:	sbb    eax,0xd7f86ed
  4032ee:	repz dec esp
  4032f0:	lods   eax,DWORD PTR ds:[esi]
  4032f1:	adc    eax,0x8fa2048c
  4032f6:	mov    ds:0x9c236f83,eax
  4032fb:	jne    0x403293
  4032fd:	(bad)  ds:0x5c024606
  403303:	or     esi,ebp
  403305:	and    al,0x77
  403307:	xchg   edx,eax
  403308:	stc    
  403309:	xchg   esp,eax
  40330a:	sub    BYTE PTR [edx],bh
  40330c:	mov    eax,0x3219ea03
  403311:	sar    BYTE PTR [ecx+0x10],cl
  403314:	mov    edi,0x7a0c3e4
  403319:	nop
  40331a:	popa   
  40331b:	pop    ecx
  40331c:	lds    edi,FWORD PTR ds:0xb3e3b4f6
  403322:	psrlq  mm2,QWORD PTR [ebp+0x3673028]
  403329:	adc    al,BYTE PTR [ebx+0x480a8316]
  40332f:	retf   
  403330:	jg     0x40333a
  403332:	push   0xf79ec398
  403337:	push   cs
  403338:	jno    0x403380
  40333a:	sub    eax,0x50092bdc
  40333f:	scas   al,BYTE PTR es:[edi]
  403340:	xchg   edx,eax
  403341:	push   es
  403342:	cdq    
  403343:	aas    
  403344:	xchg   ebx,eax
  403345:	and    ch,BYTE PTR [eax-0x170a26d4]
  40334b:	les    esp,FWORD PTR [esi+0x607f1eb7]
  403351:	stc    
  403352:	daa    
  403353:	rcr    al,1
  403355:	mov    bh,0x20
  403357:	sbb    esi,DWORD PTR [ebp+0x124c764c]
  40335d:	adc    DWORD PTR [ecx],0xcaee7ac4
  403363:	sub    BYTE PTR [edi],cl
  403365:	jl     0x403305
  403367:	pop    edx
  403368:	sbb    eax,0x1ac25e77
  40336d:	out    0x6f,al
  40336f:	fsub   st,st(4)
  403371:	jmp    0xae38:0xf8144c2
  403378:	jo     0x4033b1
  40337a:	pop    ebp
  40337b:	jge    0x40337d
  40337d:	call   0xf81f8eb2
  403382:	pop    ebp
  403383:	or     ebp,ebp
  403385:	sub    ah,BYTE PTR [eax]
  403387:	xchg   esi,eax
  403388:	pop    ebp
  403389:	or     BYTE PTR [ebp-0x17b22006],cl
  40338f:	jb     0x403377
  403391:	ficom  DWORD PTR [edx+0x21]
  403394:	in     eax,0x14
  403396:	mov    BYTE PTR [edi],bl
  403398:	pop    edx
  403399:	popf   
  40339a:	test   BYTE PTR [ebp-0x12],al
  40339d:	lock inc ecx
  40339f:	mov    ds:0x7b25f5eb,eax
  4033a4:	mov    al,0x22
  4033a6:	das    
  4033a7:	dec    esi
  4033a8:	arpl   WORD PTR [eax+0x2e],ax
  4033ab:	mov    al,ds:0x9a54dc4a
  4033b0:	adc    DWORD PTR [eax-0xa3989a],ecx
  4033b6:	daa    
  4033b7:	bnd jp 0x403403
  4033ba:	cmp    eax,0xfd62206
  4033bf:	clc    
  4033c0:	mov    dh,0x74
  4033c2:	pop    esi
  4033c3:	pusha  
  4033c4:	jo     0x40334b
  4033c6:	push   ebx
  4033c7:	mov    eax,0x9acf776
  4033cc:	in     al,dx
  4033cd:	xchg   edx,eax
  4033ce:	(bad)  
  4033cf:	ds dec edi
  4033d1:	mov    bh,0xe3
  4033d3:	push   ebx
  4033d4:	inc    edx
  4033d5:	gs push edi
  4033d7:	rol    BYTE PTR [ebx],0x3f
  4033da:	repnz sbb ebp,ebx
  4033dd:	mov    ch,0x62
  4033df:	mov    ds:0xcf063442,al
  4033e4:	outs   dx,DWORD PTR ds:[esi]
  4033e5:	sub    DWORD PTR [edx+edi*1-0x2c],esp
  4033e9:	jo     0x403410
  4033eb:	add    dl,BYTE PTR [eax]
  4033ed:	test   DWORD PTR [ebx+0xc],ebx
  4033f0:	popf   
  4033f1:	inc    eax
  4033f2:	jno    0x4033c3
  4033f4:	dec    esi
  4033f5:	test   al,0x74
  4033f7:	ins    BYTE PTR es:[edi],dx
  4033f8:	outs   dx,DWORD PTR ds:[esi]
  4033f9:	sub    eax,0xdda2b2e6
  4033fe:	inc    edi
  4033ff:	pop    edx
  403400:	jae    0x403474
  403402:	cs jge 0x4033ba
  403405:	mul    BYTE PTR [edx+edx*8-0xee75c65]
  40340c:	lahf   
  40340d:	xchg   BYTE PTR [ebp+0x39],bl
  403410:	adc    DWORD PTR [ebp+0x40],esp
  403413:	pop    esi
  403414:	in     al,dx
  403415:	jecxz  0x40339d
  403417:	loop   0x40342d
  403419:	inc    ebp
  40341a:	xchg   ecx,eax
  40341b:	scas   eax,DWORD PTR es:[edi]
  40341c:	dec    edi
  40341d:	sahf   
  40341e:	jge    0x40345d
  403420:	in     eax,0xe1
  403422:	sbb    al,0xc7
  403424:	std    
  403425:	fcomp  QWORD PTR [ecx-0x65]
  403428:	mov    ds:0x88bff441,eax
  40342d:	sub    eax,0xbbdaf106
  403432:	inc    eax
  403433:	and    DWORD PTR [ebx],edx
  403435:	add    bh,bl
  403437:	inc    ebx
  403438:	popfw  
  40343a:	in     al,dx
  40343b:	sub    ebx,eax
  40343d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40343e:	shr    BYTE PTR [ecx+0x3e],cl
  403441:	xchg   edx,eax
  403442:	stc    
  403443:	sbb    eax,0x71f614cd
  403448:	cli    
  403449:	aaa    
  40344a:	call   0xfd1:0xc1b21ec0
  403451:	shr    DWORD PTR [ebp-0x54a51ef8],cl
  403457:	jg     0x403498
  403459:	sub    al,0xbc
  40345b:	adc    BYTE PTR [edx+0x17841382],0x83
  403462:	retf   0x76e9
  403465:	es loop 0x403482
  403468:	dec    esp
  403469:	xchg   ebx,eax
  40346a:	idiv   ah
  40346c:	and    eax,0x24f9e4af
  403471:	push   ebx
  403472:	adc    ebp,edi
  403474:	stos   DWORD PTR es:[edi],eax
  403475:	dec    esi
  403476:	outs   dx,BYTE PTR ds:[esi]
  403477:	mov    ds:0x9cf47178,al
  40347c:	jp     0x4034c8
  40347e:	adc    bh,dh
  403480:	dec    ebx
  403481:	and    DWORD PTR [ebp+0x10ab9bdb],esp
  403487:	stos   DWORD PTR es:[edi],eax
  403488:	aaa    
  403489:	setle  BYTE PTR ds:0x29cba0cf
  403490:	or     edi,DWORD PTR [esp+ebx*1]
  403493:	faddp  st(7),st
  403495:	adc    ebx,ebp
  403497:	ins    BYTE PTR es:[edi],dx
  403498:	jns    0x4034ef
  40349a:	adc    al,0xf3
  40349c:	into   
  40349d:	sar    DWORD PTR [esi],0x70
  4034a0:	leave  
  4034a1:	fiadd  DWORD PTR [ebp-0x445d1842]
  4034a7:	aas    
  4034a8:	ret    
  4034a9:	add    eax,DWORD PTR [eax]
  4034ab:	sbb    ecx,DWORD PTR [edi+0x72]
  4034ae:	arpl   ax,ax
  4034b0:	jne    0x4034b5
  4034b2:	imul   eax,DWORD PTR [ecx-0x6d1a9084],0xffffffba
  4034b9:	rcl    ch,1
  4034bb:	lods   al,BYTE PTR ds:[esi]
  4034bc:	into   
  4034bd:	xchg   BYTE PTR [edx],dl
  4034bf:	mov    dh,0x3f
  4034c1:	(bad)  
  4034c2:	mov    WORD PTR [eax-0x41],ss
  4034c5:	jno    0x403513
  4034c7:	xchg   edi,eax
  4034c8:	iret   
  4034c9:	sti    
  4034ca:	and    esi,ecx
  4034cc:	repz mov WORD PTR [di-0x3d],?
  4034d1:	in     eax,0x7c
  4034d3:	daa    
  4034d4:	mov    ecx,DWORD PTR [eax]
  4034d6:	mov    esi,0xbaa391a
  4034db:	mov    dl,0x79
  4034dd:	pop    eax
  4034de:	call   0xf89d:0xde7b4131
  4034e5:	mov    DWORD PTR [eax-0x15],eax
  4034e8:	dec    edx
  4034e9:	mov    dh,bl
  4034eb:	push   0xffffffa5
  4034ed:	test   al,0x1d
  4034ef:	dec    ebp
  4034f0:	mov    esi,0x1000e90e
  4034f5:	and    edx,esi
  4034f7:	mov    eax,0x90e048da
  4034fc:	pop    ss
  4034fd:	addr16 clc 
  4034ff:	fs push edx
  403501:	sbb    eax,DWORD PTR [esi+0x11]
  403504:	lods   al,BYTE PTR ds:[esi]
  403505:	or     eax,0x90b61ae
  40350a:	test   BYTE PTR [esi],al
  40350c:	mov    dh,0xa4
  40350e:	pop    esp
  40350f:	jmp    0x403550
  403511:	sbb    DWORD PTR [ecx+0x438b37d3],0x9857a2a9
  40351b:	mov    eax,ds:0x84b94de5
  403520:	pushf  
  403521:	mov    DWORD PTR [edi-0x1],esp
  403524:	cld    
  403525:	(bad)  
  403526:	jne    0x403593
  403528:	pop    ds
  403529:	mov    DWORD PTR [ebx+0x5a],edx
  40352c:	inc    ebx
  40352d:	xchg   edx,eax
  40352e:	add    al,0x1a
  403530:	cmp    ah,0xd7
  403533:	push   esp
  403534:	data16 icebp 
  403536:	jmp    0x8b4bd3e
  40353b:	std    
  40353c:	loopne 0x403599
  40353e:	cmp    DWORD PTR [edi-0x6c],esp
  403541:	push   ds
  403542:	inc    esp
  403543:	repz xlat BYTE PTR ds:[ebx]
  403545:	loope  0x4034e0
  403547:	cmp    ebp,DWORD PTR [eax]
  403549:	and    al,0xe6
  40354b:	push   esp
  40354c:	xchg   bl,dh
  40354e:	sbb    al,0xd4
  403550:	sub    DWORD PTR [ebx-0x76c3067b],edi
  403556:	and    eax,0xb3ab8a4e
  40355b:	mov    dl,0x72
  40355d:	jmp    0x403504
  40355f:	out    0x1a,al
  403561:	fmul   DWORD PTR [eax]
  403563:	iret   
  403564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403565:	inc    ebx
  403566:	or     eax,0xf390c7c4
  40356b:	inc    eax
  40356c:	mov    bh,0xb2
  40356e:	cmp    DWORD PTR [esi-0xe67dd57],0x8492ae24
  403578:	sbb    DWORD PTR [ecx-0x54],edx
  40357b:	xlat   BYTE PTR ds:[ebx]
  40357c:	rdtsc  
  40357e:	and    ebx,DWORD PTR [ecx+edi*4-0x7f]
  403582:	les    edi,FWORD PTR [ebx-0x66917bf3]
  403588:	sbb    ch,BYTE PTR [edi+0x4d]
  40358b:	push   ebp
  40358c:	mov    dh,0x63
  40358e:	call   0x8aa45be7
  403593:	dec    ebp
  403594:	dec    edx
  403595:	xlat   BYTE PTR ds:[ebx]
  403596:	push   edx
  403597:	fld    DWORD PTR [ebp+0x62]
  40359a:	test   BYTE PTR [eax],cl
  40359c:	cmp    al,0xe2
  40359e:	and    BYTE PTR [ebp-0x34c896e5],ah
  4035a4:	and    dh,BYTE PTR fs:[ebx]
  4035a7:	push   esp
  4035a8:	das    
  4035a9:	sub    bl,BYTE PTR [edi]
  4035ab:	or     BYTE PTR [ebp+0x422eeaa],cl
  4035b1:	ret    0xb460
  4035b4:	adc    al,0x1f
  4035b6:	adc    DWORD PTR [ebx-0x78],edi
  4035b9:	push   edx
  4035ba:	sub    BYTE PTR [ebp+0x45],ah
  4035bd:	ss jp  0x403629
  4035c0:	(bad)  
  4035c1:	iret   
  4035c2:	retf   
  4035c3:	daa    
  4035c4:	xor    bh,BYTE PTR [esi-0x71f08c83]
  4035ca:	xor    ah,al
  4035cc:	jg     0x403626
  4035ce:	scas   al,BYTE PTR es:[edi]
  4035cf:	das    
  4035d0:	mov    ds:0xb42c8e1,al
  4035d5:	cs int 0xa4
  4035d8:	and    al,0x43
  4035da:	mov    dh,BYTE PTR [edi]
  4035dc:	jae    0x4035fb
  4035de:	sbb    ecx,eax
  4035e0:	sbb    esp,edi
  4035e2:	pop    ebx
  4035e3:	jmp    0x3a244cc8
  4035e8:	mov    esi,0xd89286ec
  4035ed:	dec    ecx
  4035ee:	add    bl,BYTE PTR [eax-0x40]
  4035f1:	cld    
  4035f2:	cmp    bh,BYTE PTR [ebx]
  4035f4:	cmp    esi,0xffffffc7
  4035f7:	test   DWORD PTR [eax-0x1],esp
  4035fa:	(bad)  
  4035fb:	(bad)  
  4035fc:	mov    ecx,0xa1f89c85
  403601:	jle    0x4035a5
  403603:	inc    edx
  403604:	add    BYTE PTR [ecx],cl
  403606:	add    eax,0x42a27a
  40360b:	mov    eax,DWORD PTR [ebp-0x14]
  40360e:	mov    DWORD PTR [ebp-0x9c],eax
  403614:	adc    DWORD PTR ds:0x42a29a,ecx
  40361a:	mov    eax,DWORD PTR [ebp-0x18]
  40361d:	mov    DWORD PTR [ebp-0x98],eax
  403623:	sbb    DWORD PTR ds:0x42a28a,0x5122
  40362d:	mov    eax,DWORD PTR [ebp-0x2c]
  403630:	xor    eax,esi
  403632:	add    eax,edi
  403634:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  40363e:	mov    DWORD PTR [ebp-0x94],eax
  403644:	lea    eax,[ebp-0x48]
  403647:	mov    DWORD PTR [ebp-0x90],eax
  40364d:	mov    eax,DWORD PTR [ebp-0xa0]
  403653:	xor    eax,esi
  403655:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  40365f:	add    eax,edi
  403661:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40366b:	mov    DWORD PTR [ebp-0xa0],eax
  403671:	sub    DWORD PTR ds:0x42a272,0x1d49
  40367b:	lea    eax,[ebp-0xa0]
  403681:	push   eax
  403682:	neg    eax
  403684:	mov    eax,DWORD PTR [ebp+0xc]
  403687:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403691:	xor    eax,esi
  403693:	add    eax,edi
  403695:	push   eax
  403696:	mov    eax,ds:0x42943e
  40369b:	push   0x429394
  4036a0:	mov    DWORD PTR ds:0x42a286,0x524d
  4036aa:	push   DWORD PTR [eax]
  4036ac:	call   0x4084f6
  4036b1:	xor    edx,edx
  4036b3:	add    edx,DWORD PTR ds:0x42a29e
  4036b9:	and    DWORD PTR ds:0x42a28e,edx
  4036bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4036c2:	mov    eax,DWORD PTR [ebp-0x18]
  4036c5:	mov    DWORD PTR [ebp-0x58],eax
  4036c8:	mov    eax,ds:0x42a306
  4036cd:	mov    edx,DWORD PTR ds:0x42a34e
  4036d3:	sub    edx,eax
  4036d5:	sub    eax,DWORD PTR [eax+edx*1]
  4036d8:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4036df:	mov    eax,0xf89c85bb
  4036e4:	mov    DWORD PTR [ebp-0x1c],eax
  4036e7:	xor    DWORD PTR ds:0x42a286,0x37ec
  4036f1:	lea    ecx,[eax-0x16]
  4036f4:	and    DWORD PTR ds:0x42a2e2,0x0
  4036fe:	jmp    0x403710
  403703:	mov    edx,DWORD PTR ds:0x42a2e2
  403709:	inc    edx
  40370a:	mov    DWORD PTR ds:0x42a2e2,edx
  403710:	cmp    DWORD PTR ds:0x42a2e2,0x18
  403717:	jae    0x40376b
  40371d:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403724:	jl     0x40376b
  40372a:	jmp    0x40374c
  40372f:	push   DWORD PTR [ebp-0x20]
  403732:	push   DWORD PTR [ebp-0x18]
  403735:	push   DWORD PTR [ebp-0x20]
  403738:	push   DWORD PTR [ebp-0x18]
  40373b:	push   DWORD PTR [ebp-0x14]
  40373e:	push   DWORD PTR [ebp-0x20]
  403741:	push   0x429247
  403746:	call   DWORD PTR ds:0x42a3d6
  40374c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403753:	jne    0x403766
  403759:	mov    edx,DWORD PTR ds:0x42a2e2
  40375f:	inc    edx
  403760:	mov    DWORD PTR ds:0x42a2e2,edx
  403766:	jmp    0x403703
  40376b:	mov    DWORD PTR [ebp-0x28],ecx
  40376e:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  403775:	neg    DWORD PTR ds:0x42a25e
  40377b:	mov    DWORD PTR [ebp-0x8],eax
  40377e:	xor    edx,edx
  403780:	or     edx,DWORD PTR ds:0x42a2da
  403786:	xor    DWORD PTR ds:0x42a29a,edx
  40378c:	mov    eax,DWORD PTR [ebp-0x10]
  40378f:	neg    edx
  403791:	xor    eax,esi
  403793:	mov    edx,0xffcd8d8f
  403798:	sub    edx,eax
  40379a:	mov    eax,ds:0x42a2fe
  40379f:	mov    DWORD PTR [ebp-0xc],edx
  4037a2:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  4037a9:	mov    eax,DWORD PTR [ebp-0x8]
  4037ac:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  4037b6:	mov    DWORD PTR [ebp-0x3c],ebx
  4037b9:	mov    DWORD PTR ds:0x42a286,0xb52
  4037c3:	cmp    eax,ecx
  4037c5:	mov    DWORD PTR ds:0x42a2d2,0x1900
  4037cf:	je     0x408220
  4037d5:	xor    DWORD PTR ds:0x42a2b6,edx
  4037db:	mov    eax,DWORD PTR [ebp-0x10]
  4037de:	jmp    0x405b37
  4037e3:	or     al,BYTE PTR es:[edx-0x17]
  4037e7:	inc    edx
  4037e8:	mov    eax,ds:0x1d8d8286
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	mov    al,ds:0x8d97963
  4037f3:	inc    edi
  4037f4:	pop    esi
  4037f5:	add    DWORD PTR [ebx-0x7c7ca1b9],0xffffffd1
  4037fc:	push   es
  4037fd:	xchg   BYTE PTR [edx],bl
  4037ff:	in     al,dx
  403800:	test   edx,0x560d8a16
  403806:	adc    al,0x77
  403808:	adc    ebx,ebx
  40380a:	rcl    ah,0x96
  40380d:	adc    BYTE PTR [ebx],bh
  40380f:	mov    ebx,0x84c235bd
  403814:	mov    bl,BYTE PTR [ecx+edi*1-0xe79ce02]
  40381b:	(bad)  
  40381c:	das    
  40381d:	loope  0x4037ea
  40381f:	xchg   esp,eax
  403820:	daa    
  403821:	out    dx,eax
  403822:	mov    esp,0x16051ab1
  403827:	jmp    0x5c8fd33a
  40382c:	loope  0x40380f
  40382e:	cmp    eax,0x94e44d6a
  403833:	outs   dx,BYTE PTR ds:[esi]
  403834:	loop   0x40381b
  403836:	mov    al,ds:0x737fca61
  40383b:	pop    eax
  40383c:	xor    dl,ah
  40383e:	frstor [edi+0x5b0db696]
  403844:	sbb    cl,BYTE PTR [ebx]
  403846:	mov    bl,0x46
  403848:	int    0x51
  40384a:	add    DWORD PTR [eax-0x2b],esp
  40384d:	add    bl,BYTE PTR [edi+edx*1+0x48]
  403851:	out    0x94,eax
  403853:	add    DWORD PTR [edx+0x74],0xfffffffd
  403857:	daa    
  403858:	cmp    DWORD PTR [edx],esp
  40385a:	outs   dx,BYTE PTR ds:[esi]
  40385b:	jmp    0x4038b1
  40385d:	int3   
  40385e:	cmp    al,0xb0
  403860:	push   eax
  403861:	mov    ecx,0x6f6601ea
  403866:	sti    
  403867:	mov    esp,0xbce67ed1
  40386c:	rcl    DWORD PTR [eax],cl
  40386e:	call   0xbafd1407
  403873:	push   es
  403874:	int    0xad
  403876:	ret    
  403877:	fsub   QWORD PTR [ebp+0x22]
  40387a:	add    BYTE PTR [ecx],ch
  40387c:	add    ecx,0xffffff84
  40387f:	pop    ebx
  403880:	push   DWORD PTR [ecx+0x78ad335f]
  403886:	xor    BYTE PTR [ebp+0x14578829],al
  40388c:	dec    edx
  40388d:	or     DWORD PTR [esi+0x74982f99],ebx
  403893:	fwait
  403894:	add    BYTE PTR [edi+0xc],dl
  403897:	in     al,dx
  403898:	sub    BYTE PTR [edi-0x61],ch
  40389b:	cmp    al,0x37
  40389d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40389e:	into   
  40389f:	and    al,0xd9
  4038a1:	inc    esi
  4038a2:	dec    ebp
  4038a3:	adc    al,0xb2
  4038a5:	shr    DWORD PTR [ebp+edi*2-0x5ae9e62b],cl
  4038ac:	jo     0x40383a
  4038ae:	ds and al,0x71
  4038b1:	loop   0x403908
  4038b3:	mov    BYTE PTR [ebx+0x6d4509bc],ch
  4038b9:	mov    dh,0x68
  4038bb:	sar    DWORD PTR [ebx-0x63],cl
  4038be:	cmp    BYTE PTR [edi+0x466be0e5],0xe
  4038c5:	ins    BYTE PTR es:[edi],dx
  4038c6:	addr16 sbb al,ah
  4038c9:	fstp   TBYTE PTR [edi]
  4038cb:	mov    ch,0x68
  4038cd:	sbb    ah,ch
  4038cf:	jae    0x403860
  4038d1:	or     bh,BYTE PTR [ebx+0x50]
  4038d4:	das    
  4038d5:	cdq    
  4038d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d7:	jb     0x4038ed
  4038d9:	stos   BYTE PTR es:[edi],al
  4038da:	or     dh,cl
  4038dc:	ficom  WORD PTR [ebp-0x4b]
  4038df:	enter  0x3110,0xa4
  4038e3:	fist   WORD PTR [esi+0x23]
  4038e6:	leave  
  4038e7:	inc    esp
  4038e8:	data16 xor bh,dh
  4038eb:	sub    al,0x4b
  4038ed:	or     al,BYTE PTR [esi]
  4038ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f0:	cmp    ebx,ebp
  4038f2:	bound  edx,QWORD PTR [edx+edi*8-0x135ad078]
  4038f9:	xchg   esi,eax
  4038fa:	dec    esp
  4038fb:	push   ss
  4038fc:	push   0x3218f18
  403901:	mov    al,ds:0xdc8aaf53
  403906:	shl    BYTE PTR [ecx],1
  403908:	les    esi,FWORD PTR [esi]
  40390a:	pop    esi
  40390b:	pop    edx
  40390c:	rcr    DWORD PTR [ebp-0x69],1
  40390f:	xor    DWORD PTR [ebx-0x5d],esi
  403912:	adc    BYTE PTR [esi],ah
  403914:	repnz cmp BYTE PTR [ecx],ch
  403917:	jle    0x4038bc
  403919:	xor    cl,bl
  40391b:	pop    ebp
  40391c:	test   DWORD PTR [eax-0x8bb2484],esp
  403922:	stc    
  403923:	mov    ch,0x5e
  403925:	mov    eax,0xbe0f617e
  40392a:	xor    eax,0xad7edcaa
  40392f:	jo     0x40394b
  403931:	jge    0x4038c5
  403933:	(bad)  
  403934:	fisubr WORD PTR ds:0xe64f4e47
  40393a:	mov    al,0x43
  40393c:	bnd jnp 0x4038ce
  40393f:	inc    esi
  403940:	fmul   QWORD PTR [eax]
  403942:	lods   eax,DWORD PTR ds:[esi]
  403943:	fs mov eax,0xeba02685
  403949:	mov    bh,0xee
  40394b:	leave  
  40394c:	ficom  WORD PTR [ebx-0x218932f6]
  403952:	pop    edx
  403953:	ins    BYTE PTR es:[edi],dx
  403954:	mov    dl,BYTE PTR [ebx]
  403956:	retf   0x490d
  403959:	(bad)  
  40395a:	mov    esi,0xdce9999c
  40395f:	fld    DWORD PTR [ebx+0x7f1069b8]
  403965:	fdivr  DWORD PTR [eax]
  403967:	cmp    DWORD PTR [bp-0x61a6],edx
  40396c:	push   ds
  40396d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40396e:	mov    bl,0x90
  403970:	cli    
  403971:	pop    ss
  403972:	pop    ds
  403973:	push   0xffffffc2
  403975:	pop    esi
  403976:	loop   0x4039cc
  403978:	pop    eax
  403979:	xchg   ebx,eax
  40397a:	mov    eax,0xd9173e86
  40397f:	fiadd  DWORD PTR [esi+0x63334ad6]
  403985:	bound  eax,QWORD PTR [eax+0x5d]
  403988:	retf   
  403989:	push   ecx
  40398a:	ja     0x403921
  40398c:	test   BYTE PTR [eax-0x1cf84e7f],ch
  403992:	out    dx,eax
  403993:	add    DWORD PTR [edi+0x72889d8d],ecx
  403999:	push   ss
  40399a:	adc    DWORD PTR cs:[eax-0x565075e8],0xffffff83
  4039a2:	rcl    BYTE PTR [edx],0x94
  4039a5:	xor    esi,DWORD PTR [esi+ecx*2]
  4039a8:	jge    0x4039cc
  4039aa:	lea    edx,[edi+eax*8+0x4d]
  4039ae:	shr    dh,cl
  4039b0:	push   edx
  4039b1:	arpl   WORD PTR [esi+0x5e],di
  4039b4:	pop    esi
  4039b5:	call   0x35d40eef
  4039ba:	fbstp  TBYTE PTR [edx+eax*8+0x65cef1c1]
  4039c1:	mov    edi,0xb7d632d5
  4039c6:	or     al,0x39
  4039c8:	lahf   
  4039c9:	fwait
  4039ca:	(bad)  
  4039cb:	iret   
  4039cc:	push   ebp
  4039cd:	inc    esi
  4039ce:	xor    DWORD PTR [eax],edi
  4039d0:	jne    0x4039d2
  4039d2:	push   cs
  4039d3:	mov    eax,edx
  4039d5:	out    dx,al
  4039d6:	or     dl,BYTE PTR [ecx+0x6a689fe5]
  4039dc:	inc    ebx
  4039dd:	sbb    BYTE PTR [eax-0x77],0x91
  4039e1:	in     al,dx
  4039e2:	mov    dh,0xaa
  4039e4:	mov    dh,0xfd
  4039e6:	aad    0x42
  4039e8:	hlt    
  4039e9:	mov    ds:0x89314377,eax
  4039ee:	push   ebx
  4039ef:	in     eax,0xcd
  4039f1:	mov    ds:0xcf9fdcb8,eax
  4039f6:	fnstsw WORD PTR ss:[esi+0x23efe354]
  4039fd:	dec    esi
  4039fe:	popa   
  4039ff:	mov    eax,ds:0x4fd6467b
  403a04:	xchg   esp,eax
  403a05:	mov    WORD PTR [esi],?
  403a07:	fldpi  
  403a09:	ret    0x8e56
  403a0c:	fcom   DWORD PTR [edi-0xe]
  403a0f:	icebp  
  403a10:	jne    0x4039c5
  403a12:	shr    DWORD PTR [esi],0xac
  403a15:	add    al,BYTE PTR [ebx-0x3a6df995]
  403a1b:	(bad)  
  403a1c:	loopne 0x403a73
  403a1e:	sub    edx,DWORD PTR [edi-0x2d0749ca]
  403a24:	rcl    DWORD PTR [ecx+0x7efe9942],0xcc
  403a2b:	pop    ss
  403a2c:	xchg   ecx,eax
  403a2d:	(bad)  
  403a2e:	nop
  403a2f:	mov    bl,0xb0
  403a31:	mov    al,ds:0x48ad6587
  403a36:	pushf  
  403a37:	push   0x1ca74234
  403a3c:	and    al,0x9f
  403a3e:	xchg   ebp,eax
  403a3f:	inc    esp
  403a40:	inc    eax
  403a41:	mov    esi,0x87d0223b
  403a46:	fsubr  st(6),st
  403a48:	ss pop ds
  403a4a:	mov    eax,0xe493fb6d
  403a4f:	arpl   di,si
  403a51:	sub    DWORD PTR [edx],edx
  403a53:	mov    eax,ds:0x58344b7d
  403a59:	sbb    BYTE PTR [eax+0x3e],bl
  403a5c:	push   esi
  403a5d:	and    ecx,DWORD PTR [eax-0x22]
  403a60:	fs jb  0x403a0b
  403a63:	cmp    al,0x92
  403a65:	or     eax,0x57134d04
  403a6a:	outs   dx,BYTE PTR gs:[esi]
  403a6c:	gs inc edi
  403a6e:	in     al,0xa2
  403a70:	ins    BYTE PTR es:[edi],dx
  403a71:	sbb    eax,0x977aed60
  403a76:	pop    es
  403a77:	mov    DWORD PTR [eax-0x6ab464b8],ebx
  403a7d:	push   ss
  403a7e:	jne    0x403a2d
  403a80:	loope  0x403a45
  403a82:	adc    DWORD PTR [edx+0x616b5575],ecx
  403a88:	mov    eax,ds:0xa97c8966
  403a8d:	bound  edi,QWORD PTR [ecx]
  403a8f:	xchg   esp,eax
  403a90:	xchg   ecx,eax
  403a91:	jl     0x403a90
  403a93:	lock sbb esi,esp
  403a96:	in     al,dx
  403a97:	xor    edx,edx
  403a99:	sbb    ebx,edx
  403a9b:	test   eax,0x5c4b8d09
  403aa0:	sti    
  403aa1:	popf   
  403aa2:	adc    bl,0xe8
  403aa5:	call   0xb6ad:0x87099ac
  403aac:	add    ecx,DWORD PTR [ebp+0x33]
  403aaf:	scas   eax,DWORD PTR es:[edi]
  403ab0:	iret   
  403ab1:	xor    DWORD PTR [esi],edi
  403ab3:	mov    dh,0x4a
  403ab5:	sahf   
  403ab6:	mov    WORD PTR [edx-0x2f3b0263],cs
  403abc:	mov    ch,0xf3
  403abe:	mov    esi,0x47f7eefc
  403ac3:	pop    ebp
  403ac4:	pop    edx
  403ac5:	inc    esp
  403ac6:	pop    edx
  403ac7:	retf   0x6540
  403aca:	cwde   
  403acb:	push   edx
  403acc:	mov    dh,BYTE PTR [edi]
  403ace:	pop    ss
  403acf:	jbe    0x403ab8
  403ad1:	into   
  403ad2:	daa    
  403ad3:	push   0x1b41bbbd
  403ad8:	jns    0x403ae0
  403ada:	and    BYTE PTR [ebx+edi*8],ah
  403add:	pushf  
  403ade:	xchg   ebx,eax
  403adf:	cmp    eax,DWORD PTR [ebp-0x4f6eb3db]
  403ae5:	cmc    
  403ae6:	or     DWORD PTR [eax],eax
  403ae8:	outs   dx,BYTE PTR ds:[esi]
  403ae9:	and    BYTE PTR [ebx+ebp*4-0x4f],0x5e
  403aee:	cmp    esp,esp
  403af0:	add    eax,DWORD PTR ds:0x7fe01062
  403af6:	(bad)  [ecx+0x3b]
  403af9:	stc    
  403afa:	pop    ecx
  403afb:	ins    BYTE PTR es:[edi],dx
  403afc:	not    eax
  403afe:	sahf   
  403aff:	cs xchg esi,eax
  403b01:	jnp    0x403abc
  403b03:	sbb    dl,BYTE PTR [esi]
  403b05:	pop    esp
  403b06:	sahf   
  403b07:	aad    0x2a
  403b09:	push   0x57
  403b0b:	nop
  403b0c:	out    0xb2,al
  403b0e:	mov    ch,0xb1
  403b10:	pop    ecx
  403b11:	pop    ds
  403b12:	imul   edx,DWORD PTR [ebx+edi*8-0x2f423f1],0xffffffea
  403b1a:	xchg   ebx,eax
  403b1b:	add    al,0xf0
  403b1d:	jnp    0x403af9
  403b1f:	(bad)  
  403b20:	sub    cl,BYTE PTR [ebx+ebx*8+0x8]
  403b24:	jmp    0x6def:0x25cb5068
  403b2b:	pop    ebp
  403b2c:	test   BYTE PTR [esi+0x64bfa5e5],ch
  403b32:	outs   dx,DWORD PTR ds:[esi]
  403b33:	adc    eax,ecx
  403b35:	and    BYTE PTR cs:[edi+0x7b87a865],bl
  403b3c:	stc    
  403b3d:	inc    ebp
  403b3f:	das    
  403b40:	ins    DWORD PTR es:[edi],dx
  403b41:	rcl    BYTE PTR ds:0xb8fe556a,0x3
  403b48:	aam    0x68
  403b4a:	sbb    BYTE PTR [ebx-0x2cddb9a0],0x29
  403b51:	pop    esi
  403b52:	jb     0x403b9c
  403b54:	fiadd  DWORD PTR [edi-0x3475952]
  403b5a:	mov    ebx,ebx
  403b5c:	xchg   edi,eax
  403b5d:	int    0xd3
  403b5f:	sub    esi,0x2e
  403b62:	mov    ds:0x931f479,al
  403b67:	cs das 
  403b69:	and    BYTE PTR [edi-0x22],bh
  403b6c:	mov    dl,0x48
  403b6e:	jbe    0x403afe
  403b70:	test   BYTE PTR [edi-0x2d9a5c64],0xde
  403b77:	jo     0x403beb
  403b79:	jle    0x403bef
  403b7b:	retf   0xee25
  403b7e:	jecxz  0x403b48
  403b80:	ror    DWORD PTR [ecx+0x14],1
  403b83:	daa    
  403b84:	ficom  WORD PTR [ebx]
  403b86:	ds retf 0x1e1e
  403b8a:	inc    esp
  403b8b:	fistp  WORD PTR [ebx+0x3ee341f0]
  403b91:	sahf   
  403b92:	xlat   BYTE PTR ds:[ebx]
  403b93:	xchg   ebx,eax
  403b94:	enter  0xd30b,0x74
  403b98:	ja     0x403b5d
  403b9a:	xchg   edx,eax
  403b9b:	loopne 0x403b5f
  403b9d:	(bad)  
  403ba0:	add    eax,DWORD PTR [edx+0x69e23456]
  403ba6:	mov    ch,ch
  403ba8:	out    dx,al
  403ba9:	xchg   ebx,eax
  403baa:	lock adc DWORD PTR [edx+0x771e5880],0x4f
  403bb2:	adc    esi,DWORD PTR [esi-0x58270ced]
  403bb8:	pop    ecx
  403bb9:	arpl   si,bp
  403bbb:	stos   DWORD PTR es:[edi],eax
  403bbc:	mov    al,ds:0x133ddf15
  403bc1:	adc    DWORD PTR [esi+0x40],eax
  403bc4:	(bad)  
  403bc5:	shl    DWORD PTR [ebp+0x603d6594],1
  403bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bcc:	sub    ecx,esp
  403bce:	arpl   WORD PTR [esi+ecx*4+0x5153760d],cx
  403bd5:	sub    esp,ecx
  403bd7:	fsubp  st(6),st
  403bd9:	(bad)  
  403bda:	(bad)  
  403bdb:	pop    esp
  403bdc:	ds out dx,eax
  403bde:	pop    esi
  403bdf:	int3   
  403be0:	push   ecx
  403be1:	add    edi,DWORD PTR [edx+0x7f]
  403be4:	and    BYTE PTR [edi-0x2dc22d84],cl
  403bea:	or     eax,0xdc5c4bfb
  403bef:	and    DWORD PTR [ebp-0x59ad0aa1],esi
  403bf5:	ja     0x403bda
  403bf7:	(bad)  
  403bf8:	fsubr  DWORD PTR [ecx+ecx*2]
  403bfb:	out    0x34,al
  403bfd:	mov    edx,0x24aceb81
  403c02:	cmp    al,0xdb
  403c04:	mov    DWORD PTR [ebx-0x3f002eda],0xa0e473c3
  403c0e:	and    edi,DWORD PTR [edx-0x59]
  403c11:	lds    edx,FWORD PTR [edi]
  403c13:	in     al,dx
  403c14:	or     BYTE PTR [eax],cl
  403c16:	sbb    cl,BYTE PTR [esi+0x3e1ac096]
  403c1c:	sbb    eax,0x490ae9d
  403c21:	lock mov edx,DWORD PTR [eax+esi*8-0x78f6a99b]
  403c29:	imul   esp,DWORD PTR [ebp-0x7e36765],0xffffffa8
  403c30:	(bad)  
  403c31:	jb     0x403bd8
  403c33:	or     dl,BYTE PTR [edi-0x2a]
  403c36:	mov    WORD PTR [edi+ebp*8-0xb],?
  403c3a:	daa    
  403c3b:	cmc    
  403c3c:	cmp    ch,dh
  403c3e:	mov    al,ds:0xe6a1cbf
  403c43:	shrd   DWORD PTR [eax+edi*8+0x23],esp,0x21
  403c49:	(bad)  
  403c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c4b:	sub    eax,0x6e4a7f13
  403c50:	add    al,0xb6
  403c52:	fnsave [edi]
  403c54:	mov    esi,0xf8888a55
  403c59:	add    BYTE PTR [edi+ebp*1+0x6a3a4a2],0x7f
  403c61:	sbb    DWORD PTR [edx-0x6],edi
  403c64:	xchg   esp,eax
  403c65:	xor    eax,0xbb68b91f
  403c6a:	(bad)  
  403c6b:	adc    dl,BYTE PTR [ebx+edi*8+0x55]
  403c6f:	adc    esi,DWORD PTR [eax-0x20]
  403c72:	add    dh,bl
  403c74:	mov    esi,0x4c0c23f6
  403c79:	xchg   edi,eax
  403c7a:	adc    ebp,eax
  403c7c:	mov    ch,0xc0
  403c7e:	scas   eax,DWORD PTR es:[edi]
  403c7f:	or     ah,ah
  403c81:	jecxz  0x403cb5
  403c83:	pop    ds
  403c84:	mov    ecx,0xa2d4e528
  403c89:	mov    bl,0x1d
  403c8b:	ret    
  403c8c:	xchg   edi,eax
  403c8d:	dec    eax
  403c8e:	push   edi
  403c8f:	fwait
  403c90:	call   0xbfd39e99
  403c95:	push   ebp
  403c96:	mov    DWORD PTR [edx-0x5e],ebp
  403c99:	sub    eax,0x64973ee9
  403c9e:	outs   dx,BYTE PTR ds:[esi]
  403c9f:	sahf   
  403ca0:	fcomp  QWORD PTR [edx-0x57]
  403ca3:	stc    
  403ca4:	mov    ds:0xd66c0c60,al
  403ca9:	cld    
  403caa:	mov    ah,0xb2
  403cac:	repz xchg esi,eax
  403cae:	sub    ecx,edx
  403cb0:	cld    
  403cb1:	ins    DWORD PTR es:[edi],dx
  403cb2:	ret    0x477f
  403cb5:	mov    ch,0x41
  403cb7:	sub    ecx,edi
  403cb9:	cli    
  403cba:	loop   0x403c97
  403cbc:	test   DWORD PTR [edx],ebp
  403cbe:	push   es
  403cbf:	mov    gs,WORD PTR [ecx+ebp*2+0x68]
  403cc3:	(bad)  
  403cc4:	mov    eax,ds:0xf7287a78
  403cc9:	scas   al,BYTE PTR es:[edi]
  403cca:	adc    edi,eax
  403ccc:	dec    edi
  403ccd:	(bad)  
  403cce:	rol    dh,cl
  403cd0:	push   es
  403cd1:	mov    al,0xac
  403cd3:	fcmovne st,st(5)
  403cd5:	dec    esi
  403cd6:	bound  ebx,QWORD PTR [ecx+0x30]
  403cd9:	mov    ah,0x7d
  403cdb:	jae    0x403cff
  403cdd:	pop    ebp
  403cde:	push   edx
  403cdf:	push   eax
  403ce0:	test   eax,0x84f1e624
  403ce5:	fld    TBYTE PTR [ecx]
  403ce7:	jnp    0x403ca2
  403ce9:	mov    dh,0x45
  403ceb:	adc    al,0x1c
  403ced:	and    cl,BYTE PTR [ebp-0x36]
  403cf0:	mov    WORD PTR [esi-0x3acb33db],es
  403cf6:	mov    ds:0x4bf48ea,al
  403cfb:	mov    bl,BYTE PTR [ebp-0x5c423fa0]
  403d01:	popa   
  403d02:	fld    QWORD PTR [ebx]
  403d04:	jle    0x403d55
  403d06:	mov    cl,0xb2
  403d08:	mov    edi,0x5521602b
  403d0d:	in     eax,0x67
  403d0f:	aaa    
  403d10:	jns    0x403cf1
  403d12:	cmc    
  403d13:	push   esi
  403d14:	cwde   
  403d15:	(bad)  
  403d16:	rcl    DWORD PTR [esi+0x52efecc1],cl
  403d1c:	add    DWORD PTR ds:0xa7e88919,edi
  403d22:	add    eax,edi
  403d24:	jmp    0xbc04be3c
  403d29:	call   0x3ee2:0xa5069150
  403d30:	pop    ds
  403d31:	cmp    bh,BYTE PTR [edx-0x6c]
  403d34:	or     al,0x3d
  403d36:	mov    cl,0xab
  403d38:	jne    0x403d8e
  403d3a:	add    bl,bl
  403d3c:	stos   BYTE PTR es:[edi],al
  403d3d:	mov    esp,0x54eb833f
  403d42:	pop    esi
  403d43:	push   ds
  403d44:	out    dx,eax
  403d45:	inc    ecx
  403d46:	and    ecx,edx
  403d48:	mov    eax,ds:0xcd0d8687
  403d4d:	rep ins BYTE PTR es:[edi],dx
  403d4f:	jl     0x403d82
  403d51:	dec    ecx
  403d52:	aaa    
  403d53:	in     eax,dx
  403d54:	pop    ebx
  403d55:	stc    
  403d56:	jmp    0xc2c0e7bc
  403d5b:	ss jge 0x403d94
  403d5e:	stos   BYTE PTR es:[edi],al
  403d5f:	and    ecx,edi
  403d61:	sbb    eax,0xa6e90dd4
  403d66:	push   ds
  403d67:	iret   
  403d68:	jmp    0x16c02943
  403d6d:	je     0x403d82
  403d6f:	fisttp DWORD PTR [edx]
  403d71:	or     al,0xa9
  403d73:	les    ebx,FWORD PTR [ebx+eax*4]
  403d76:	cs mov ah,0x38
  403d79:	lods   eax,DWORD PTR ds:[esi]
  403d7a:	dec    BYTE PTR [edi+0x72361c9f]
  403d80:	cmp    BYTE PTR [ebx+ebp*4],0x37
  403d84:	mov    cl,0xb9
  403d86:	adc    eax,DWORD PTR [eax]
  403d88:	aas    
  403d89:	popa   
  403d8a:	push   ss
  403d8b:	shl    DWORD PTR [ebp-0x11],cl
  403d8e:	inc    ebx
  403d8f:	push   esp
  403d90:	mov    DWORD PTR [edi+0x26],edi
  403d93:	lock cmp BYTE PTR [ecx],bh
  403d96:	aaa    
  403d97:	inc    esi
  403d98:	pop    ecx
  403d99:	scas   eax,DWORD PTR es:[edi]
  403d9a:	and    al,0x8b
  403d9c:	xchg   ebx,eax
  403d9d:	scas   al,BYTE PTR es:[edi]
  403d9e:	(bad)  
  403da0:	adc    BYTE PTR [esi-0x31],cl
  403da3:	sbb    eax,0x8609f847
  403da8:	inc    edi
  403da9:	inc    ebx
  403daa:	inc    esi
  403dab:	and    dl,ch
  403dad:	pop    ebp
  403dae:	arpl   WORD PTR [esi],ax
  403db0:	(bad)  
  403db1:	lock mov ebp,0xab22dffb
  403db7:	jb     0x403d3c
  403db9:	cld    
  403dba:	pushf  
  403dbb:	and    edx,DWORD PTR [edi]
  403dbd:	mov    ecx,DWORD PTR [edx+edx*2-0x7b]
  403dc1:	jnp    0x403d7c
  403dc3:	mov    esi,edi
  403dc5:	(bad)  
  403dc6:	loope  0x403d5f
  403dc8:	outs   dx,DWORD PTR ds:[esi]
  403dc9:	stc    
  403dca:	sub    ebp,eax
  403dcc:	js     0x403e08
  403dce:	mov    ebp,0x480967a8
  403dd3:	popf   
  403dd4:	fisttp QWORD PTR [esi]
  403dd6:	cld    
  403dd7:	ffreep st(3)
  403dd9:	xor    eax,0x18dae403
  403dde:	and    eax,0x80d7108f
  403de3:	inc    ebx
  403de4:	inc    esi
  403de5:	mov    dl,0x26
  403de7:	cs mov ah,0xea
  403dea:	js     0x403e0d
  403dec:	das    
  403ded:	repz mov ah,0x83
  403df0:	or     al,0xdb
  403df2:	je     0x403dbe
  403df4:	loop   0x403db3
  403df6:	scas   al,BYTE PTR es:[edi]
  403df7:	aam    0x70
  403df9:	push   0xffffffac
  403dfb:	loop   0x403e65
  403dfd:	fild   WORD PTR [ecx]
  403dff:	lea    ebp,ds:0xbf62759d
  403e05:	arpl   WORD PTR [ebp-0x1e2e5070],bx
  403e0b:	and    esi,DWORD PTR [edi-0x69]
  403e0e:	xor    ch,BYTE PTR [eax-0xf]
  403e11:	or     ecx,DWORD PTR [esi+0x2d]
  403e14:	fwait
  403e15:	das    
  403e16:	jmp    0x403e8d
  403e18:	sbb    ebx,DWORD PTR [esp+edx*2]
  403e1b:	jg     0x403dde
  403e1d:	stos   DWORD PTR es:[edi],eax
  403e1e:	sub    edx,0x765a364
  403e24:	jg     0x403db0
  403e26:	das    
  403e27:	mov    dl,0x71
  403e29:	ja     0x403dee
  403e2b:	xchg   esi,eax
  403e2c:	js     0x403e00
  403e2e:	xchg   BYTE PTR [ebp-0x37e174d1],dl
  403e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e35:	inc    esp
  403e36:	xchg   BYTE PTR [eax+edx*1+0x7b],cl
  403e3a:	jbe    0x403e38
  403e3c:	add    al,dh
  403e3e:	clc    
  403e3f:	aad    0x10
  403e41:	lock sub DWORD PTR [ecx+esi*4+0x3e],edi
  403e46:	clc    
  403e47:	ret    0xa96d
  403e4a:	pop    ss
  403e4b:	xor    edi,ebx
  403e4d:	fdivp  st(4),st
  403e4f:	sahf   
  403e50:	add    al,0x14
  403e52:	ret    0x130f
  403e55:	pushf  
  403e56:	or     dl,BYTE PTR [ebp+0x4fcf8a6]
  403e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5d:	jl     0x403e3e
  403e5f:	scas   al,BYTE PTR es:[edi]
  403e60:	and    BYTE PTR [edx],0xc5
  403e63:	xchg   esi,eax
  403e64:	loope  0x403dea
  403e66:	test   DWORD PTR [ebx+0x338fef4],esp
  403e6c:	cmp    DWORD PTR [ecx-0x6e],0x16
  403e70:	pop    ss
  403e71:	dec    dh
  403e73:	mov    bh,0x67
  403e75:	mov    ds:0x2ef1c497,al
  403e7a:	mov    ah,0x59
  403e7c:	and    al,0x55
  403e7e:	sub    edx,DWORD PTR [eax+ebx*8-0x1972bb17]
  403e85:	shl    DWORD PTR [eax],0x18
  403e88:	jg     0x403eb8
  403e8a:	push   ebx
  403e8b:	in     al,0xd5
  403e8d:	cwde   
  403e8e:	in     al,0x31
  403e90:	fld    DWORD PTR [ecx-0x561bc2dd]
  403e96:	fs scas al,BYTE PTR es:[edi]
  403e98:	(bad)  
  403e99:	push   ds
  403e9a:	cmp    eax,0x905e2d77
  403e9f:	ins    DWORD PTR es:[edi],dx
  403ea0:	retf   
  403ea1:	and    BYTE PTR [edi],bh
  403ea3:	pop    es
  403ea4:	jmp    0xe8f9:0x9a67002a
  403eab:	push   0xffffff8c
  403ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eae:	fsub   DWORD PTR [edx-0x28]
  403eb1:	ins    BYTE PTR es:[edi],dx
  403eb2:	addr16 adc al,0x24
  403eb5:	pop    edi
  403eb6:	in     eax,dx
  403eb7:	mov    dl,0x42
  403eb9:	jb     0x403e56
  403ebb:	add    BYTE PTR [eax],cl
  403ebd:	daa    
  403ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ebf:	sbb    ch,BYTE PTR [ecx-0x45393e54]
  403ec5:	ss into 
  403ec7:	(bad)  
  403ec8:	push   eax
  403ec9:	sbb    al,0x81
  403ecb:	xchg   esi,eax
  403ecc:	mov    eax,0xcd17aaf8
  403ed1:	cmp    al,0x5a
  403ed3:	fdiv   QWORD PTR gs:[eax+eax*4-0x75]
  403ed8:	jl     0x403ecc
  403eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403edb:	test   BYTE PTR [ecx-0x2933caa5],cl
  403ee1:	rcl    BYTE PTR [esi-0x45146ef5],0xd9
  403ee8:	cmp    DWORD PTR [esp+edx*1],eax
  403eeb:	xchg   ebp,eax
  403eec:	adc    DWORD PTR [ecx-0x26],ebx
  403eef:	loope  0x403f67
  403ef1:	mov    dh,0x47
  403ef3:	adc    eax,0x1779fd53
  403ef8:	and    BYTE PTR [ebx-0x4e409aee],ch
  403efe:	frstor [esi+0x7a]
  403f01:	imul   esi,DWORD PTR [edx],0x18
  403f04:	pop    es
  403f05:	sahf   
  403f06:	je     0x403ed4
  403f08:	xlat   BYTE PTR ds:[ebx]
  403f09:	or     cl,BYTE PTR [edi+eax*8+0x4c]
  403f0d:	sbb    ebx,0x50
  403f10:	dec    esi
  403f11:	jg     0x403e9f
  403f13:	sub    al,bh
  403f15:	les    eax,FWORD PTR [edi]
  403f17:	outs   dx,BYTE PTR ds:[esi]
  403f18:	and    edi,DWORD PTR [esp+edx*8]
  403f1b:	retf   
  403f1c:	dec    ebx
  403f1d:	dec    ecx
  403f1e:	sub    al,0xb6
  403f20:	jmp    0x91fd:0x17c4a6bd
  403f27:	shr    BYTE PTR [esp+eiz*8-0x58],cl
  403f2b:	sub    ch,BYTE PTR [esi]
  403f2d:	int    0x4c
  403f2f:	dec    eax
  403f30:	sbb    al,0xe1
  403f32:	aas    
  403f33:	lods   eax,DWORD PTR ds:[esi]
  403f34:	ret    
  403f35:	shl    ebx,0xd
  403f38:	popf   
  403f39:	pop    ecx
  403f3a:	stc    
  403f3b:	pop    edx
  403f3c:	push   cs
  403f3d:	gs stos BYTE PTR es:[edi],al
  403f3f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f41:	ds dec esp
  403f43:	sub    bh,al
  403f45:	sub    eax,0xa2c4c613
  403f4a:	leave  
  403f4b:	pop    es
  403f4c:	lahf   
  403f4d:	adc    dl,BYTE PTR [edx+0x5815c961]
  403f53:	cmp    esi,DWORD PTR [ebx-0x5f]
  403f56:	or     al,0xf3
  403f58:	xor    edx,DWORD PTR [ebp+edi*2+0x4043a307]
  403f5f:	fisttp WORD PTR [ebp+0x11e40791]
  403f65:	fbld   TBYTE PTR [edx-0x15]
  403f68:	push   ecx
  403f69:	mov    esi,0x5b337de9
  403f6e:	xor    eax,0xfc45e2df
  403f73:	or     ah,dh
  403f75:	(bad)
  403f78:	inc    esp
  403f79:	pop    es
  403f7a:	out    dx,al
  403f7b:	cdq    
  403f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f7d:	out    0x27,al
  403f7f:	mov    edx,DWORD PTR [ebx-0x1930e405]
  403f85:	push   bp
  403f87:	jo     0x403f16
  403f89:	mov    bh,0xb4
  403f8b:	push   edi
  403f8c:	sub    eax,0x898009cf
  403f91:	bound  ebx,QWORD PTR [ebp+0x6b692646]
  403f97:	leave  
  403f98:	icebp  
  403f99:	lahf   
  403f9a:	xchg   edi,eax
  403f9b:	fdivrp st(6),st
  403f9d:	push   ds
  403f9e:	xor    ah,0x6c
  403fa1:	scas   al,BYTE PTR es:[edi]
  403fa2:	mov    cl,0x60
  403fa4:	vzeroall 
  403fa7:	hlt    
  403fa8:	int3   
  403fa9:	mov    bl,0x10
  403fab:	das    
  403fac:	cmp    BYTE PTR [esi-0x74d5f4e9],dl
  403fb2:	jae    0x403f8a
  403fb4:	mov    ds:0x86292c25,al
  403fb9:	jmp    0x403f6c
  403fbb:	(bad)  
  403fbc:	dec    esi
  403fbd:	xchg   esp,eax
  403fbe:	or     al,0x23
  403fc0:	xchg   ecx,eax
  403fc1:	aam    0x44
  403fc3:	mov    dl,0xb4
  403fc5:	mov    dl,0x1a
  403fc7:	loop   0x403fbd
  403fc9:	and    eax,0xe72e339d
  403fce:	je     0x403fbd
  403fd0:	test   BYTE PTR [esi-0x4e8e9bb4],al
  403fd6:	jge    0x403fd3
  403fd8:	das    
  403fd9:	sbb    DWORD PTR [ebx],eax
  403fdb:	lods   eax,DWORD PTR ds:[esi]
  403fdc:	(bad)  
  403fdd:	or     al,0x5a
  403fdf:	lahf   
  403fe0:	jl     0x40404d
  403fe2:	ja     0x403fea
  403fe4:	jbe    0x403fbe
  403fe6:	je     0x403fad
  403fe8:	jg     0x403f7a
  403fea:	dec    esi
  403feb:	adc    esi,DWORD PTR [ebx]
  403fed:	sub    BYTE PTR [ebp-0x2cbf8087],bl
  403ff3:	mov    edx,0x840da5b1
  403ff8:	sub    al,0x2a
  403ffa:	ret    0xeef0
  403ffd:	or     bl,BYTE PTR [esi-0x21]
  404000:	nop
  404001:	mov    ah,BYTE PTR [ebx]
  404003:	sub    edx,DWORD PTR [ebx]
  404005:	pop    ecx
  404006:	push   ecx
  404007:	loope  0x404074
  404009:	jl     0x403fba
  40400b:	mov    al,ds:0x4829f0c8
  404010:	ins    BYTE PTR es:[edi],dx
  404011:	loop   0x403fa2
  404013:	mov    edx,0xb68cd69d
  404018:	and    ch,BYTE PTR [ebp-0x72590bed]
  40401e:	es jnp 0x404087
  404021:	mov    bl,0x45
  404023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404024:	jp     0x40405a
  404026:	adc    esi,ebx
  404028:	rcr    DWORD PTR [edi+ecx*8-0x21d6255d],cl
  40402f:	pop    ds
  404030:	pop    ecx
  404031:	sub    DWORD PTR [ebp-0x576e9c5],edi
  404037:	or     eax,0xacd83b0
  40403c:	xchg   DWORD PTR [eax+0x6b0553d],ebx
  404042:	dec    ecx
  404043:	ins    BYTE PTR es:[edi],dx
  404044:	loopne 0x403ff1
  404046:	mov    ebp,0x9e2f5547
  40404b:	pushf  
  40404c:	or     al,0xe8
  40404e:	push   0xffffffa8
  404050:	jo     0x404068
  404052:	js     0x404016
  404054:	pusha  
  404055:	jnp    0x4040b9
  404057:	add    esi,0xa1719823
  40405d:	jnp    0x404060
  40405f:	rol    BYTE PTR [ebx-0x320828be],1
  404065:	cmp    bl,BYTE PTR [edx+0x27]
  404068:	call   0xff705f7e
  40406d:	in     al,dx
  40406e:	mov    ecx,0x2df25cb
  404073:	xchg   ebx,eax
  404074:	mov    dh,0x68
  404076:	leave  
  404077:	xlat   BYTE PTR fs:[ebx]
  404079:	loope  0x4040f4
  40407b:	lods   al,BYTE PTR ds:[esi]
  40407c:	mov    ecx,0x9a6b7029
  404081:	fdivr  DWORD PTR [eax-0x538d2bc9]
  404087:	ins    BYTE PTR es:[edi],dx
  404088:	xor    eax,0xd840f16d
  40408d:	clc    
  40408e:	mov    ds:0xb77d5894,al
  404093:	aas    
  404094:	add    ch,dh
  404096:	bnd jbe 0x40402e
  404099:	mov    eax,cs
  40409b:	push   ds
  40409c:	jecxz  0x4040a0
  40409e:	icebp  
  40409f:	out    0x48,al
  4040a1:	mov    ebx,0xd35bb6a
  4040a6:	fisttp WORD PTR [ebp+0x220541ee]
  4040ac:	jl     0x404062
  4040ae:	mov    edx,0xb89434f7
  4040b3:	push   0xb41b5cd0
  4040b8:	push   ebp
  4040b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ba:	ds cmp edi,ecx
  4040bd:	xlat   BYTE PTR ds:[ebx]
  4040be:	xor    ebp,ebp
  4040c0:	mov    DWORD PTR [edx+0x71ac5e55],ebp
  4040c6:	add    eax,0x77d3959c
  4040cb:	pop    edi
  4040cc:	in     al,dx
  4040cd:	jne    0x404087
  4040cf:	xchg   ebp,eax
  4040d0:	pop    es
  4040d1:	mov    edi,0x7bcac3b9
  4040d6:	mov    al,ds:0x8b083a64
  4040db:	pop    esp
  4040dc:	ffreep st(3)
  4040de:	jle    0x4040b7
  4040e0:	test   eax,0xc41f149c
  4040e5:	sub    DWORD PTR [eax-0x721dbaa5],ebx
  4040eb:	loopne 0x40406e
  4040ed:	sub    DWORD PTR ds:0xebb7c271,eax
  4040f3:	push   ebp
  4040f4:	pop    esi
  4040f5:	and    DWORD PTR [esi+0x21cc660],ebx
  4040fb:	lahf   
  4040fc:	popf   
  4040fd:	cmp    eax,0x52512f1f
  404102:	idiv   DWORD PTR [edx-0x1dc3f0d2]
  404108:	cwde   
  404109:	pop    edx
  40410a:	out    dx,eax
  40410b:	xchg   DWORD PTR [ebp+0x76],ebp
  40410e:	(bad)  
  40410f:	mov    cl,0x3d
  404111:	ret    0x2047
  404114:	push   cs
  404115:	xor    dl,BYTE PTR [edi]
  404117:	sbb    eax,0x9e452740
  40411c:	mov    dl,BYTE PTR [ebp-0x79]
  40411f:	shl    edx,cl
  404121:	mov    bl,0xf0
  404123:	push   ecx
  404124:	pop    eax
  404125:	jo     0x4040b5
  404127:	retf   
  404128:	mov    BYTE PTR [edi],dh
  40412a:	lock sub eax,0xcbb49106
  404130:	jg     0x40416d
  404132:	xor    al,BYTE PTR ds:0xd97de248
  404138:	push   edx
  404139:	popa   
  40413a:	push   edx
  40413b:	mov    BYTE PTR [eax],dh
  40413d:	jle    0x40416c
  40413f:	jae    0x40413f
  404141:	cmp    cl,BYTE PTR [ecx]
  404143:	or     DWORD PTR [esi+ebp*1],eax
  404146:	jge    0x40418a
  404148:	sub    DWORD PTR [eax],edx
  40414a:	add    eax,0x493e87b4
  40414f:	aas    
  404150:	add    BYTE PTR [eax],0x8f
  404153:	shl    BYTE PTR [esi-0x62d76a99],0xdb
  40415a:	mov    dl,0xef
  40415c:	arpl   sp,si
  40415e:	ret    
  40415f:	xchg   ecx,eax
  404160:	sbb    eax,0x3a69a3d7
  404165:	pop    es
  404166:	(bad)  
  404167:	cld    
  404168:	cmp    al,0xe0
  40416a:	mov    esp,0xb604f0f7
  40416f:	aad    0xb8
  404171:	icebp  
  404172:	jo     0x4041bf
  404174:	and    BYTE PTR [ebp+0x36],ah
  404177:	fidivr WORD PTR [ebp-0x10]
  40417a:	inc    ebx
  40417b:	(bad)  
  40417d:	mov    WORD PTR ds:[eiz*2+0x1bbb7bb8],ss
  404185:	and    edi,DWORD PTR [edx+eiz*1]
  404188:	std    
  404189:	and    al,dh
  40418b:	mov    ds:0x36cf28b3,al
  404190:	(bad)  
  404191:	ds cs adc eax,0xc38053d7
  404198:	inc    edi
  404199:	retf   0x8b80
  40419c:	jns    0x404136
  40419e:	ins    BYTE PTR es:[edi],dx
  40419f:	mov    eax,0x2fd6a1a0
  4041a4:	retf   
  4041a5:	test   BYTE PTR [ebx],ch
  4041a7:	fisubr DWORD PTR [eax+0x42]
  4041aa:	mov    al,0x91
  4041ac:	enter  0x5eaf,0x38
  4041b0:	outs   dx,DWORD PTR ds:[esi]
  4041b1:	dec    edi
  4041b2:	daa    
  4041b3:	and    al,0xd5
  4041b5:	add    esi,DWORD PTR [edi]
  4041b7:	je     0x404196
  4041b9:	fsub   st(0),st
  4041bb:	lock pop edx
  4041bd:	push   0xd4f9e80e
  4041c2:	leave  
  4041c3:	into   
  4041c4:	sar    ebx,0x17
  4041c7:	and    al,0x43
  4041c9:	mov    ecx,0xb773a887
  4041ce:	xchg   edx,eax
  4041cf:	fwait
  4041d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d1:	or     esp,DWORD PTR [ebx-0x53]
  4041d4:	pop    ebx
  4041d5:	push   esp
  4041d6:	xchg   edi,eax
  4041d7:	mov    ch,0xc
  4041d9:	jmp    0x4963f792
  4041de:	in     al,0xdd
  4041e0:	mov    ds:0xc4b1daae,eax
  4041e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e6:	fstp   DWORD PTR [eax]
  4041e8:	inc    esp
  4041e9:	mov    dl,0x48
  4041eb:	mov    bh,0x33
  4041ee:	into   
  4041ef:	repz adc eax,0xd67b70ea
  4041f5:	test   eax,0xb24a82e
  4041fa:	jg     0x404240
  4041fc:	inc    edi
  4041fd:	push   ebx
  4041fe:	enter  0x615e,0x93
  404202:	add    al,0x3f
  404204:	mov    eax,ds:0xba8b74f7
  404209:	call   0x6dd74414
  40420e:	ins    DWORD PTR es:[edi],dx
  40420f:	js     0x40423c
  404211:	mov    al,0xa2
  404213:	outs   dx,DWORD PTR ds:[esi]
  404214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404215:	out    0xff,al
  404217:	jp     0x40421e
  404219:	cs xor al,0xbc
  40421c:	out    0x8c,eax
  40421e:	aaa    
  40421f:	mov    dh,0xec
  404221:	mov    eax,fs
  404223:	add    dh,BYTE PTR [ecx+edx*1-0x78]
  404227:	adc    DWORD PTR [esp+edx*1+0x6b71fa25],0x6767e73
  404232:	push   edi
  404233:	popf   
  404234:	push   esp
  404235:	mov    esi,0x7d575c6f
  40423a:	mov    ds:0xb69f550a,al
  40423f:	repz cld 
  404241:	hlt    
  404242:	(bad)  
  404243:	in     eax,0xae
  404245:	and    BYTE PTR cs:[edx-0x4846f3ce],0xa
  40424d:	dec    esp
  40424e:	out    0x2d,al
  404250:	push   0x2c23d9b3
  404255:	sar    DWORD PTR [edi+ebp*2-0x66],1
  404259:	loopne 0x404273
  40425b:	loop   0x4042c2
  40425d:	or     DWORD PTR [esi-0x32b3ba91],ebp
  404263:	push   ecx
  404264:	and    edi,DWORD PTR [ecx+ecx*8-0x3a]
  404268:	sti    
  404269:	sub    DWORD PTR [ecx-0x4b],ebx
  40426c:	xchg   ebx,eax
  40426d:	jne    0x404271
  40426f:	imul   eax,esp,0x12
  404272:	mov    ch,0x9c
  404274:	fist   DWORD PTR [edi+0x1e]
  404277:	jmp    0x9f8adbd8
  40427c:	cmp    ebx,DWORD PTR [edx+ebx*1]
  40427f:	and    eax,0x670ba6bd
  404284:	xchg   esi,eax
  404285:	or     eax,0x6c2727a9
  40428a:	(bad)  
  40428b:	and    DWORD PTR [esi],ebx
  40428d:	xor    BYTE PTR [ecx],cl
  40428f:	or     al,0x71
  404291:	rcl    edx,0xf2
  404294:	xor    al,0xe2
  404296:	pop    esi
  404298:	and    eax,edx
  40429a:	and    eax,0xb6c058ad
  40429f:	stc    
  4042a0:	enter  0x763,0x55
  4042a4:	aas    
  4042a5:	xchg   esi,eax
  4042a6:	xor    eax,0xdf428b42
  4042ab:	pop    es
  4042ac:	(bad)  
  4042ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042ae:	pop    esi
  4042af:	call   0x5e86b728
  4042b4:	leave  
  4042b5:	xchg   ebx,eax
  4042b6:	push   edi
  4042b7:	push   ss
  4042b8:	aad    0xe5
  4042ba:	fmul   st,st(2)
  4042bc:	iret   
  4042bd:	xor    dl,0xe2
  4042c0:	or     BYTE PTR [ebp+0x73],bh
  4042c3:	cmp    bl,BYTE PTR [edi]
  4042c5:	mov    ecx,DWORD PTR [ecx-0x71]
  4042c8:	sub    ebp,ebp
  4042ca:	or     bh,BYTE PTR [eax]
  4042cc:	jne    0x404314
  4042ce:	mov    cs,eax
  4042d0:	push   0xe
  4042d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d3:	or     eax,ecx
  4042d5:	push   esp
  4042d6:	fild   DWORD PTR [edx-0xf]
  4042da:	xor    DWORD PTR [ecx+0x25],edx
  4042dd:	push   eax
  4042de:	ins    BYTE PTR es:[edi],dx
  4042df:	and    BYTE PTR [ebx+0x71],dl
  4042e2:	cld    
  4042e3:	retf   
  4042e4:	or     al,0x5d
  4042e6:	mov    BYTE PTR [esi-0xe],dh
  4042e9:	jmp    0x29cc:0x58e1572d
  4042f0:	leave  
  4042f1:	dec    ecx
  4042f2:	shr    edx,0xbe
  4042f5:	call   0xd0f5eeae
  4042fa:	jno    0x4042d5
  4042fc:	aam    0x39
  4042fe:	push   edx
  4042ff:	jns    0x404366
  404301:	outs   dx,DWORD PTR ds:[esi]
  404302:	fisttp WORD PTR [esi-0x61]
  404305:	or     BYTE PTR [eax-0x33],ch
  404308:	cmp    bh,ah
  40430a:	mov    esp,0x63696377
  40430f:	retf   0x2f57
  404312:	lods   eax,DWORD PTR ds:[esi]
  404313:	lds    esp,FWORD PTR [ebp+0x3bf997a3]
  404319:	jecxz  0x40429f
  40431b:	fcomp  DWORD PTR [esi+0x34]
  40431e:	push   0x27a3cef0
  404323:	mov    ebx,eax
  404325:	dec    esp
  404326:	inc    edi
  404327:	ins    DWORD PTR es:[edi],dx
  404328:	push   0x734ec856
  40432d:	fucomip st,st(4)
  40432f:	pop    esi
  404330:	dec    ecx
  404331:	aam    0x98
  404333:	fldenv [edx+0x4cffe02a]
  404339:	out    0x42,al
  40433b:	shl    BYTE PTR [edi],0xa1
  40433e:	xchg   edi,eax
  40433f:	aad    0x4
  404341:	pop    eax
  404342:	mov    es,edx
  404344:	loope  0x404329
  404346:	jecxz  0x4042fa
  404348:	test   eax,0x2d32a522
  40434d:	(bad)  
  40434f:	sar    BYTE PTR [eax-0x6f],cl
  404352:	aam    0x1b
  404354:	mov    dh,0x67
  404356:	ja     0x4043b9
  404358:	xor    DWORD PTR ss:[ebx],esi
  40435b:	jp     0x404370
  40435d:	or     dl,0x6f
  404360:	mov    WORD PTR [ebp+0x7fede2c],es
  404366:	test   al,0xe0
  404368:	int    0xdf
  40436a:	out    dx,al
  40436b:	mov    bh,0x59
  40436d:	mov    bl,0x86
  40436f:	clc    
  404370:	sti    
  404371:	in     al,0x2d
  404373:	int    0x49
  404375:	outs   dx,DWORD PTR ds:[esi]
  404376:	lods   al,BYTE PTR ds:[esi]
  404377:	cld    
  404378:	xor    BYTE PTR [ebx],ah
  40437a:	addr16 in eax,dx
  40437c:	js     0x4043a5
  40437e:	sti    
  40437f:	fsub   st,st(7)
  404381:	fild   QWORD PTR [esi-0x80]
  404384:	ret    
  404385:	sbb    al,BYTE PTR [ecx]
  404387:	je     0x404403
  404389:	adc    eax,0xa70cb5fb
  40438e:	aam    0xf7
  404390:	retf   0x90ca
  404393:	adc    BYTE PTR [ebx+0x50],bl
  404396:	jne    0x404372
  404398:	sahf   
  404399:	mov    ds:0x29db5844,al
  40439e:	dec    ebp
  40439f:	pop    ss
  4043a0:	adc    al,0x7d
  4043a2:	outs   dx,BYTE PTR ds:[esi]
  4043a3:	sbb    eax,0xeacc8525
  4043a8:	push   es
  4043a9:	sbb    edi,DWORD PTR [ecx]
  4043ab:	jl     0x4043a5
  4043ad:	pop    esp
  4043ae:	imul   ecx,DWORD PTR [ebx+eax*1],0xbf17b6b9
  4043b5:	das    
  4043b6:	xchg   DWORD PTR [esp+edi*1+0x57],ebx
  4043ba:	aad    0x46
  4043bc:	aad    0x4a
  4043be:	outs   dx,BYTE PTR ds:[esi]
  4043bf:	push   edi
  4043c0:	mov    dh,0x91
  4043c2:	cmp    BYTE PTR [eax+0x6742df28],0x45
  4043c9:	mov    edi,0x35a6dfc0
  4043ce:	inc    ebx
  4043cf:	enter  0xffe8,0xa4
  4043d3:	enter  0xb86b,0x7c
  4043d7:	pop    eax
  4043d8:	jmp    0xef7839b0
  4043dd:	add    bh,BYTE PTR [edi+0x5a]
  4043e0:	mov    dl,BYTE PTR [eax]
  4043e2:	leave  
  4043e3:	int3   
  4043e4:	popa   
  4043e5:	mov    es,WORD PTR [ecx]
  4043e7:	push   es
  4043e8:	xchg   esp,eax
  4043e9:	mov    cl,0x5b
  4043eb:	pop    ss
  4043ec:	ror    DWORD PTR [esi+eiz*4],cl
  4043ef:	jae    0x4043e5
  4043f1:	jp     0x404381
  4043f3:	push   0xffffffa9
  4043f5:	sub    BYTE PTR [ecx+esi*2],cl
  4043f8:	cmp    DWORD PTR [edi+0x2c70ea63],eax
  4043fe:	repz xor ah,BYTE PTR [eax-0x12]
  404402:	mov    al,ds:0xb5220381
  404407:	pop    edx
  404408:	imul   edi,DWORD PTR [edi+ecx*2+0x77],0x5b20136e
  404410:	(bad)  
  404411:	loop   0x40446f
  404413:	shl    ebx,cl
  404415:	pop    ecx
  404416:	and    al,0xec
  404418:	lods   eax,DWORD PTR ds:[esi]
  404419:	jg     0x40443d
  40441b:	inc    esp
  40441c:	and    ecx,DWORD PTR [ecx-0x213f181f]
  404422:	jb     0x40443a
  404424:	js     0x404424
  404426:	xor    ch,BYTE PTR [esi]
  404428:	hlt    
  404429:	or     al,0x80
  40442b:	test   BYTE PTR [edi-0x493f57ef],ch
  404431:	ja     0x4044ae
  404433:	add    al,0x9e
  404435:	pop    ds
  404436:	cmc    
  404437:	mov    ds:0x99f4015b,al
  40443c:	sbb    ebx,DWORD PTR [ebx+ebx*4]
  40443f:	xchg   edi,eax
  404440:	pushf  
  404441:	loop   0x4043cd
  404443:	sti    
  404444:	mov    ebp,0xb5645c8a
  404449:	mov    ah,0xc1
  40444b:	les    esi,FWORD PTR [edi]
  40444d:	add    al,0xc3
  40444f:	sbb    ah,cl
  404451:	loop   0x4043d9
  404453:	jmp    0x34efead9
  404458:	neg    DWORD PTR [edx+0x6]
  40445b:	pop    eax
  40445c:	adc    al,dl
  40445e:	mov    ebp,0x140bf2cc
  404463:	sub    al,0xd3
  404465:	retf   
  404466:	mov    dh,0x10
  404468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404469:	xor    ah,BYTE PTR [esi-0x4d]
  40446c:	fnsave [edx+eax*8+0x35]
  404470:	push   0xfffffffa
  404472:	dec    ecx
  404473:	or     eax,0xc0fc252c
  404478:	add    eax,DWORD PTR [esi]
  40447a:	or     DWORD PTR [eax-0x21],edi
  40447d:	retf   0x40ea
  404480:	cmp    esp,DWORD PTR [edx-0x7baa9a76]
  404486:	out    dx,al
  404487:	(bad)  
  404489:	dec    esi
  40448a:	loop   0x404433
  40448c:	dec    ecx
  40448d:	mov    ?,WORD PTR [ebp+0x25]
  404490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404491:	sbb    eax,0x4d9fc10b
  404496:	gs addr16 lahf 
  404499:	jmp    0x4044a6
  40449b:	pushf  
  40449c:	mov    gs,WORD PTR [ebp-0x4]
  40449f:	xchg   esp,eax
  4044a0:	dec    esp
  4044a1:	or     bh,dh
  4044a3:	loop   0x4044f5
  4044a5:	sahf   
  4044a6:	adc    BYTE PTR [edx],0x2c
  4044a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044aa:	jp     0x404482
  4044ac:	(bad)
  4044af:	inc    esi
  4044b0:	xchg   BYTE PTR [edi],cl
  4044b2:	cli    
  4044b3:	adc    al,0xb8
  4044b5:	add    DWORD PTR [esi+esi*1+0xe],esi
  4044b9:	ret    
  4044ba:	push   ebp
  4044bb:	sub    eax,0x60ce4c0a
  4044c0:	jl     0x4044af
  4044c2:	pusha  
  4044c3:	mov    ebx,0xd709af5a
  4044c8:	mov    al,ds:0x3efa514d
  4044cd:	and    eax,0xddd04488
  4044d2:	enter  0x2dee,0x16
  4044d6:	pusha  
  4044d7:	scas   al,BYTE PTR es:[edi]
  4044d8:	xor    al,0xcf
  4044da:	call   0xcd73:0x696b4485
  4044e1:	jecxz  0x4044b3
  4044e3:	jno    0x4044c1
  4044e5:	jo     0x404488
  4044e7:	cmp    eax,0xe22f10ff
  4044ec:	cmp    eax,0x3604467b
  4044f1:	in     al,0x58
  4044f3:	in     eax,0x20
  4044f5:	pop    ebx
  4044f6:	mov    ebx,0x6292727b
  4044fb:	jecxz  0x404509
  4044fd:	push   edi
  4044fe:	sub    eax,0x9d77c1d1
  404503:	cli    
  404504:	mov    DWORD PTR [edi],ebx
  404506:	scas   al,BYTE PTR es:[edi]
  404507:	jge    0x4044e9
  404509:	xchg   esi,eax
  40450a:	xchg   ebx,eax
  40450b:	outs   dx,BYTE PTR ds:[esi]
  40450c:	sub    BYTE PTR [edx+0x4],0x78
  404510:	or     al,0x4b
  404512:	pop    edx
  404513:	das    
  404514:	stos   BYTE PTR es:[edi],al
  404515:	mov    dl,BYTE PTR [ebx]
  404517:	lahf   
  404518:	test   al,0x5c
  40451a:	push   es
  40451b:	add    DWORD PTR [edi-0x1a],edx
  40451e:	push   edi
  40451f:	hlt    
  404520:	aad    0x36
  404522:	aaa    
  404523:	(bad)  
  404524:	lods   eax,DWORD PTR ds:[esi]
  404525:	push   ebp
  404526:	pop    ecx
  404527:	iret   
  404528:	adc    edx,DWORD PTR [esi]
  40452a:	sub    BYTE PTR [edx],bh
  40452c:	cdq    
  40452d:	mov    ecx,0x7ef3a7b4
  404532:	pop    esp
  404533:	into   
  404534:	mov    al,ds:0x6d236fc7
  404539:	or     DWORD PTR [edx-0x56],ebp
  40453c:	test   DWORD PTR [eax],esp
  40453e:	mov    esp,0x35bd0c4e
  404543:	retf   
  404544:	rcl    BYTE PTR [edi+0x1e],cl
  404547:	push   esi
  404548:	sbb    BYTE PTR [edi],bh
  40454a:	addr16 hlt 
  40454c:	mov    edi,0x8d8f57d1
  404551:	sar    bl,1
  404553:	cmp    BYTE PTR [eax],bl
  404555:	repz aaa 
  404557:	jge    0x404595
  404559:	or     eax,0xa5c34407
  40455e:	push   ds
  40455f:	fmul   QWORD PTR ds:0xd1ddf58c
  404565:	ja     0x404507
  404567:	mov    ebp,0xb4f05c3a
  40456c:	xchg   edx,eax
  40456d:	loope  0x404553
  40456f:	jmp    0x2cf8dec0
  404574:	mov    edx,0x256ff70a
  404579:	and    al,BYTE PTR [esp+ebx*4+0x1e020a9b]
  404580:	test   eax,0x72d04d6a
  404585:	mov    ch,0x21
  404587:	ins    BYTE PTR es:[edi],dx
  404588:	dec    ebp
  404589:	outs   dx,BYTE PTR ds:[esi]
  40458a:	jmp    0xd484a8da
  40458f:	(bad)  
  404590:	jbe    0x4045ec
  404592:	and    eax,0x502fbea5
  404597:	dec    ebp
  404598:	les    eax,FWORD PTR [esi]
  40459a:	push   edx
  40459b:	mov    ebx,fs
  40459d:	pop    edi
  40459e:	(bad)  
  40459f:	adc    cl,0x12
  4045a2:	jb     0x404540
  4045a4:	sti    
  4045a5:	push   edi
  4045a6:	jg     0x4045f3
  4045a8:	xchg   ecx,eax
  4045a9:	cmp    bl,ah
  4045ab:	in     eax,dx
  4045ac:	(bad)  
  4045ad:	fbld   TBYTE PTR [di+0x1985]
  4045b2:	cmp    sp,WORD PTR [edx-0x4a]
  4045b6:	mov    ch,0x74
  4045b8:	(bad)  
  4045ba:	push   eax
  4045bb:	mov    al,0xad
  4045bd:	dec    eax
  4045be:	popf   
  4045bf:	sbb    al,0xd4
  4045c1:	xlat   BYTE PTR ds:[ebx]
  4045c2:	sub    DWORD PTR [edi-0x6],esi
  4045c5:	push   ecx
  4045c6:	mov    al,ds:0xc5566b74
  4045cb:	cmp    esp,DWORD PTR [edx-0x729ecb85]
  4045d1:	fist   WORD PTR [ecx+ebx*8-0xcfded3d]
  4045d8:	xor    edx,DWORD PTR [eax]
  4045da:	or     bh,ch
  4045dc:	dec    ebp
  4045dd:	mov    WORD PTR [esi-0x6ed0f258],gs
  4045e3:	jae    0x4045b3
  4045e5:	xchg   DWORD PTR [eax+0x39],edx
  4045e8:	inc    edi
  4045e9:	xor    ecx,DWORD PTR [eax]
  4045eb:	push   edi
  4045ec:	adc    al,0xf2
  4045ee:	fist   WORD PTR [edi+esi*8-0x71406766]
  4045f5:	mov    eax,ds:0xe81c3437
  4045fa:	imul   DWORD PTR [eax-0x5d]
  4045fd:	jmp    0x27:0xf427f7c
  404604:	je     0x4045cc
  404606:	or     al,0xbc
  404608:	sub    esp,DWORD PTR [ebx+0x5ef378e8]
  40460e:	jmp    0xb3a53895
  404613:	clc    
  404614:	sar    WORD PTR [eax-0x6cc2fa61],1
  40461b:	cmp    ch,cl
  40461d:	out    dx,al
  40461e:	mov    edx,0xad0efdc8
  404623:	jge    0x404671
  404625:	sahf   
  404626:	sub    ebp,0x77ddeae9
  40462c:	neg    BYTE PTR [eax]
  40462e:	pop    ebx
  40462f:	shl    BYTE PTR [eax-0x38],1
  404632:	or     ah,ah
  404634:	cmp    cl,BYTE PTR [esi]
  404636:	and    edx,DWORD PTR [esi-0x20bc14bd]
  40463c:	pop    eax
  40463d:	inc    eax
  40463e:	pop    esi
  40463f:	sbb    eax,0xfc6792f2
  404644:	xor    eax,0xb11c21b6
  404649:	mov    bh,BYTE PTR [ebx+0x1e63e88a]
  40464f:	xor    dl,dl
  404651:	push   ebx
  404652:	outs   dx,BYTE PTR ds:[esi]
  404653:	sub    cl,cl
  404655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404656:	xchg   esi,eax
  404657:	addr16 cmp eax,0x19bee423
  40465d:	jl     0x4046b6
  40465f:	pop    ds
  404660:	dec    eax
  404661:	push   es
  404662:	sub    ch,BYTE PTR [esi+0x1a]
  404665:	test   edi,ebx
  404667:	cld    
  404668:	int    0x96
  40466a:	ins    DWORD PTR es:[edi],dx
  40466b:	std    
  40466c:	pop    ss
  40466d:	inc    edi
  40466e:	div    BYTE PTR [edi-0x1e]
  404671:	push   ds
  404672:	xchg   esi,eax
  404673:	int    0x9a
  404675:	pmaxub mm7,mm4
  404678:	bound  edi,QWORD PTR [eax]
  40467a:	cmc    
  40467b:	sbb    ebx,DWORD PTR [edx]
  40467d:	cld    
  40467e:	lods   eax,DWORD PTR ds:[esi]
  40467f:	mov    edi,0xc675adfe
  404684:	retf   
  404685:	mov    al,ds:0x2094d2bb
  40468a:	inc    edi
  40468b:	and    ebx,DWORD PTR [eax-0x6471392]
  404691:	jle    0x404696
  404693:	push   edx
  404694:	adc    bl,BYTE PTR [esp+ebp*8-0x28]
  404698:	xchg   ebx,eax
  404699:	pusha  
  40469a:	lock fwait
  40469c:	push   0x1
  40469e:	ds or  eax,0x19d7e108
  4046a4:	mov    ch,0xdc
  4046a6:	or     ah,bh
  4046a8:	push   ebp
  4046a9:	fcmove st,st(1)
  4046ab:	inc    ebx
  4046ac:	lods   al,BYTE PTR ds:[esi]
  4046ad:	cld    
  4046ae:	dec    esp
  4046af:	adc    esi,edx
  4046b1:	pop    eax
  4046b2:	adc    edi,DWORD PTR [ebx]
  4046b4:	gs or  al,0x46
  4046b7:	adc    al,0xa1
  4046b9:	bound  esp,QWORD PTR [esi+ebx*4]
  4046bc:	xchg   ecx,eax
  4046bd:	push   esp
  4046be:	ror    edi,0x3a
  4046c1:	in     al,0xde
  4046c3:	(bad)  
  4046c4:	int    0x77
  4046c6:	leave  
  4046c7:	xchg   edx,eax
  4046c8:	fstp   DWORD PTR [ebx+0x2bb7b35d]
  4046ce:	mov    ds:0xc2bfd78d,al
  4046d3:	hlt    
  4046d4:	lock scas al,BYTE PTR es:[edi]
  4046d6:	or     DWORD PTR [ebx+0x6e],ecx
  4046d9:	retf   0x4369
  4046dc:	xlat   BYTE PTR ds:[ebx]
  4046dd:	push   ebx
  4046de:	and    al,0xa5
  4046e0:	(bad)  
  4046e1:	shl    edi,cl
  4046e3:	mov    edx,0x8ffaa3df
  4046e8:	test   al,0x39
  4046ea:	inc    esi
  4046eb:	fdivr  st,st(5)
  4046ed:	test   DWORD PTR [edi],ebx
  4046ef:	loope  0x40473a
  4046f1:	push   0xffffad14
  4046f6:	test   eax,0x655f1ed4
  4046fb:	or     eax,0x1c7ae68d
  404700:	scas   al,BYTE PTR es:[edi]
  404701:	out    0xc9,al
  404703:	inc    ebp
  404704:	outs   dx,BYTE PTR ds:[esi]
  404705:	pop    edx
  404706:	mov    BYTE PTR [edi+0x56676b26],cl
  40470c:	sub    eax,0x648a92d3
  404711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404712:	dec    ebx
  404713:	push   DWORD PTR [edx-0x3b]
  404716:	fsubr  QWORD PTR [eax+0x1b]
  404719:	jmp    0xa4c5:0x8ab527b2
  404720:	fadd   DWORD PTR [edx]
  404722:	leave  
  404723:	mov    bl,0x24
  404725:	push   0xee35337b
  40472a:	mov    cl,0x94
  40472c:	sub    eax,DWORD PTR [edx+eax*2]
  40472f:	cmc    
  404730:	ins    BYTE PTR es:[edi],dx
  404731:	adc    BYTE PTR [ecx-0x3eed4d66],dh
  404737:	cmp    al,0x30
  404739:	sbb    al,al
  40473b:	addr16 adc bh,cl
  40473e:	jle    0x4046cc
  404740:	in     eax,0x44
  404742:	ja     0x404730
  404744:	adc    esi,DWORD PTR [eax+0x7f]
  404747:	sub    al,0x75
  404749:	add    esp,DWORD PTR [esi-0x7548127a]
  40474f:	fmulp  st(0),st
  404751:	mov    ds:0xd2540f6c,eax
  404756:	cli    
  404757:	jg     0x40472a
  404759:	pop    eax
  40475a:	adc    eax,0xd65f1091
  40475f:	xchg   esi,eax
  404760:	loop   0x404743
  404762:	ins    BYTE PTR es:[edi],dx
  404763:	ja     0x404721
  404765:	jmp    0xe52a:0x68805762
  40476c:	push   ecx
  40476d:	(bad)  [eax]
  40476f:	test   al,0x35
  404771:	or     edi,DWORD PTR [esi]
  404773:	aad    0x55
  404775:	das    
  404776:	scas   al,BYTE PTR es:[edi]
  404777:	mov    edx,0x5348e834
  40477c:	out    dx,eax
  40477d:	cmp    edx,ebp
  40477f:	nop
  404780:	ja     0x40470d
  404782:	sub    eax,0xb1761e34
  404787:	(bad)  
  404788:	xchg   esi,eax
  404789:	in     al,dx
  40478a:	imul   DWORD PTR [ebp-0x5]
  40478d:	cmp    al,0x3a
  40478f:	fadd   st,st(3)
  404791:	inc    esp
  404792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404793:	stos   BYTE PTR es:[edi],al
  404794:	sbb    ah,BYTE PTR [ebp-0xd]
  404797:	add    DWORD PTR [ecx-0x9],esi
  40479a:	outs   dx,DWORD PTR ds:[esi]
  40479b:	inc    edx
  40479c:	popf   
  40479d:	adc    esi,DWORD PTR [ebp-0x57]
  4047a0:	ss sti 
  4047a2:	push   esi
  4047a3:	fwait
  4047a4:	jns    0x4047e7
  4047a6:	iret   
  4047a7:	popf   
  4047a8:	cmp    ebx,DWORD PTR ds:0xe0f3593c
  4047ae:	fxam   
  4047b0:	call   0xfc3e46e3
  4047b5:	xchg   BYTE PTR [eax],al
  4047b7:	add    esi,DWORD PTR [ecx+0x4f]
  4047ba:	cmp    ch,dl
  4047bc:	sub    edi,DWORD PTR [edi+0x74]
  4047bf:	add    edi,DWORD PTR [edi]
  4047c1:	xchg   ebp,eax
  4047c2:	dec    ebx
  4047c3:	(bad)  
  4047c5:	stos   DWORD PTR es:[edi],eax
  4047c6:	inc    ebx
  4047c7:	inc    ebp
  4047c8:	repz xor BYTE PTR [edx],cl
  4047cb:	cmp    ebx,DWORD PTR [edx-0x400d5875]
  4047d1:	icebp  
  4047d2:	dec    edi
  4047d3:	pusha  
  4047d4:	pop    ebp
  4047d5:	push   ds
  4047d6:	xchg   ebx,eax
  4047d7:	in     al,0xcd
  4047d9:	mov    WORD PTR [ecx+0x37],?
  4047dc:	fcom   QWORD PTR [ecx+0x28fa9d7a]
  4047e2:	jno    0x4047df
  4047e4:	fisttp QWORD PTR [edx]
  4047e6:	cmc    
  4047e7:	dec    ebx
  4047e8:	ja     0x4047e6
  4047ea:	fmul   DWORD PTR [ebx]
  4047ec:	pop    ebx
  4047ed:	adc    al,0x70
  4047ef:	add    al,0x79
  4047f1:	loop   0x4047b2
  4047f3:	mov    bl,0x2f
  4047f5:	mov    eax,0x99bf2731
  4047fa:	ins    DWORD PTR es:[edi],dx
  4047fb:	in     al,dx
  4047fc:	pop    edi
  4047fd:	shl    BYTE PTR [ebx-0x65],0xac
  404801:	cmp    BYTE PTR [ecx+0x12],0x83
  404805:	mov    dh,0x81
  404807:	xor    eax,0xc9b37cc5
  40480c:	aaa    
  40480d:	sti    
  40480e:	mov    dl,0x5a
  404810:	shl    BYTE PTR [eax-0x77cfe1e8],cl
  404816:	fdiv   DWORD PTR [ebx]
  404818:	sbb    ebx,0xd7ae41d0
  40481e:	push   0x134bd743
  404823:	push   ss
  404824:	lahf   
  404825:	inc    edi
  404826:	pusha  
  404827:	retf   
  404828:	pop    ecx
  404829:	std    
  40482a:	sbb    eax,0xca5fa5c0
  40482f:	stos   DWORD PTR es:[edi],eax
  404830:	call   0x4d598f2d
  404835:	push   eax
  404836:	in     al,dx
  404837:	xor    bl,BYTE PTR [ebx+0x7a]
  40483a:	cmp    edi,DWORD PTR [ebp-0x489756ec]
  404840:	or     ch,ch
  404842:	mov    eax,0xbcb0883c
  404847:	sub    BYTE PTR [edi+0x32],0xbc
  40484b:	ficom  DWORD PTR ds:0xbaff7a41
  404851:	inc    esi
  404852:	sbb    edi,eax
  404854:	bound  esp,QWORD PTR [ebp-0xe59d551]
  40485a:	jnp    0x40483d
  40485c:	dec    eax
  40485d:	xchg   ecx,eax
  40485e:	mov    edx,0x52c52123
  404863:	mov    BYTE PTR [edx+0x331c0aca],ch
  404869:	nop
  40486a:	xor    BYTE PTR [eax+ebp*1],0x18
  40486e:	mov    BYTE PTR gs:[edx],ch
  404871:	jg     0x4048d1
  404873:	retf   0xd71b
  404876:	xor    edi,DWORD PTR [esi+0x63c1caf9]
  40487c:	sbb    bh,BYTE PTR [ecx]
  40487e:	bnd ret 0xf894
  404882:	add    BYTE PTR [ebp+0x1fc0b4c1],bl
  404888:	push   es
  404889:	out    0xde,al
  40488b:	fst    QWORD PTR [edi+0x6b65a9e2]
  404891:	into   
  404892:	push   ss
  404893:	jns    0x40485d
  404895:	dec    ebp
  404896:	std    
  404897:	xchg   ebx,eax
  404898:	mov    edx,0xd68ef722
  40489d:	sbb    eax,0x31d095d8
  4048a2:	fdivr  DWORD PTR [eax-0x136fb95f]
  4048a8:	dec    eax
  4048a9:	xchg   edi,eax
  4048aa:	(bad)  
  4048ac:	cmp    cl,BYTE PTR [ecx+0x68]
  4048af:	inc    ecx
  4048b0:	add    eax,0x9631399d
  4048b5:	and    eax,0x11b22616
  4048ba:	sbb    edx,edx
  4048bc:	xor    eax,0xeb204096
  4048c1:	sub    al,0x3d
  4048c3:	imul   esi,DWORD PTR [ebx+edi*8-0x6d27645d],0xffffffe3
  4048cb:	pop    esp
  4048cc:	sub    ch,dh
  4048ce:	scas   eax,DWORD PTR es:[edi]
  4048cf:	(bad)  
  4048d1:	stc    
  4048d2:	bound  eax,QWORD PTR [edx+ecx*8]
  4048d5:	pushf  
  4048d6:	setnp  BYTE PTR [edx-0x59]
  4048da:	mov    dl,0x20
  4048dc:	call   0x48e:0x7ff882cd
  4048e3:	out    dx,eax
  4048e4:	mov    ds:0x36c84132,eax
  4048e9:	out    0x89,eax
  4048eb:	pop    ds
  4048ec:	pop    edx
  4048ed:	data16 cmp bh,cl
  4048f0:	xor    al,0xc4
  4048f2:	(bad)  
  4048f3:	or     al,BYTE PTR [edx+0x4b]
  4048f6:	iret   
  4048f7:	ss jl  0x4048b4
  4048fa:	add    BYTE PTR [ecx],ch
  4048fc:	pop    edi
  4048fd:	jne    0x40496f
  4048ff:	xchg   ebx,eax
  404900:	sti    
  404901:	fnsave [esi-0x254203d6]
  404907:	frstor [eax+0x6d]
  40490a:	cmp    bh,ch
  40490c:	jnp    0x40488e
  40490e:	call   0x6dcfe99f
  404913:	test   al,0x7b
  404915:	push   esi
  404916:	(bad)  
  404917:	adc    ebp,DWORD PTR [ebp+0x74]
  40491a:	inc    edi
  40491b:	xlat   BYTE PTR ds:[ebx]
  40491c:	(bad)  
  40491d:	or     dh,dl
  40491f:	and    eax,0x6beee69b
  404924:	sub    eax,0x22c517db
  404929:	scas   eax,DWORD PTR es:[edi]
  40492a:	xor    BYTE PTR [ebx+0x5f4af80e],cl
  404930:	jl     0x404927
  404932:	xchg   esp,ecx
  404934:	into   
  404935:	in     al,0x5e
  404937:	inc    ebx
  404938:	push   ds
  404939:	or     edi,ebp
  40493b:	mov    eax,0xd3ead389
  404940:	add    eax,0x66e7c9cb
  404945:	dec    ebx
  404946:	jns    0x404957
  404948:	sub    al,0xee
  40494a:	mov    BYTE PTR [ebx-0x2e607532],ch
  404950:	dec    eax
  404951:	sub    ebp,esi
  404953:	std    
  404954:	cmp    DWORD PTR [ebx+0x66],0x24
  404958:	rcr    DWORD PTR [edx],1
  40495a:	lea    edx,[ecx]
  40495c:	lock mov esp,0xe6ba5416
  404962:	or     DWORD PTR [eax+0x51],ebx
  404965:	test   al,0x7b
  404967:	jl     0x404938
  404969:	loope  0x4049b2
  40496b:	adc    eax,0xb23e145e
  404970:	fild   WORD PTR ds:0xb13257b4
  404976:	pop    edx
  404977:	pop    esp
  404978:	retf   
  404979:	push   0x5dbfb437
  40497e:	je     0x404993
  404980:	call   0x79d8:0x57c607d5
  404987:	imul   DWORD PTR [ecx-0x16]
  40498a:	outs   dx,BYTE PTR ds:[esi]
  40498b:	jge    0x4049b1
  40498d:	mov    esi,0xf4cb27ea
  404992:	push   edi
  404993:	std    
  404994:	adc    ebp,DWORD PTR [esp-0x3e]
  404998:	mov    al,ds:0xd35e3554
  40499d:	mov    ch,0x7f
  40499f:	(bad)  
  4049a0:	loope  0x4049f3
  4049a2:	push   cs
  4049a3:	neg    BYTE PTR [ecx-0x55]
  4049a6:	or     al,0x14
  4049a8:	bsf    ecx,ecx
  4049ab:	in     eax,0x74
  4049ad:	out    0x9d,al
  4049af:	rcr    al,0x6f
  4049b2:	test   al,0xaf
  4049b4:	sub    eax,0x84db7c21
  4049b9:	push   es
  4049ba:	inc    ecx
  4049bb:	repnz out dx,al
  4049bd:	or     DWORD PTR [ecx],esi
  4049bf:	add    eax,0x734da2d5
  4049c4:	cmp    DWORD PTR [ebp-0x75ff0add],0xffffff98
  4049cb:	(bad)  
  4049cc:	hlt    
  4049cd:	fiadd  DWORD PTR [ebp-0x2a5b9298]
  4049d3:	iret   
  4049d4:	lods   eax,DWORD PTR ds:[esi]
  4049d5:	(bad)  
  4049d7:	inc    ebx
  4049d8:	out    dx,al
  4049d9:	fs nop
  4049db:	loope  0x40496e
  4049dd:	hlt    
  4049de:	clc    
  4049df:	(bad)  
  4049e0:	test   DWORD PTR [edx+0x657b3a39],ecx
  4049e6:	gs pushf 
  4049e8:	pop    ds
  4049e9:	add    ebp,DWORD PTR [esi]
  4049eb:	mov    ebx,0x2d47e72a
  4049f0:	sbb    al,0x17
  4049f2:	stos   BYTE PTR es:[edi],al
  4049f3:	test   al,0x62
  4049f5:	fwait
  4049f6:	jle    0x4049e3
  4049f8:	jo     0x404a63
  4049fa:	push   es
  4049fb:	mov    dh,BYTE PTR [ecx]
  4049fd:	fwait
  4049fe:	ror    ebx,1
  404a00:	in     al,0x59
  404a02:	jae    0x4049c1
  404a04:	lahf   
  404a05:	xor    ch,BYTE PTR [edi]
  404a07:	mov    cs,WORD PTR [edi-0x5b9dbf44]
  404a0d:	dec    esi
  404a0e:	or     edi,DWORD PTR [ebp+ecx*4-0x1d376390]
  404a15:	pop    esp
  404a16:	mov    cl,0x7d
  404a18:	xlat   BYTE PTR ds:[ebx]
  404a19:	sub    BYTE PTR [edx+0x2558ac8d],dl
  404a1f:	js     0x4049b4
  404a21:	mov    ebx,0xd9c73ca8
  404a26:	mov    esp,0xf9c17137
  404a2b:	lahf   
  404a2c:	arpl   WORD PTR [esi],cx
  404a2e:	cmp    edi,DWORD PTR [ebx+eiz*8+0x78]
  404a32:	inc    edx
  404a33:	sbb    al,0x7
  404a35:	loopne 0x404a2e
  404a37:	mov    DWORD PTR [edi+0x755d9718],esi
  404a3d:	or     DWORD PTR [edi],ebp
  404a3f:	test   al,0x84
  404a41:	test   edx,esi
  404a43:	es mov bl,0xf5
  404a46:	sti    
  404a47:	lahf   
  404a48:	jmp    FWORD PTR [edx+eax*8-0x1]
  404a4c:	push   esp
  404a4d:	dec    esi
  404a4e:	cmp    al,0xde
  404a50:	sub    BYTE PTR ds:0x35ea7d19,0x94
  404a57:	mov    cl,0x45
  404a59:	mov    WORD PTR [esi],fs
  404a5b:	cdq    
  404a5c:	mov    al,0xa
  404a5e:	daa    
  404a5f:	imul   ebp,DWORD PTR [ebx+eiz*4-0x12],0xffffffc7
  404a64:	lds    edx,FWORD PTR [edx-0x1ec9f74a]
  404a6a:	sub    esi,DWORD PTR [eax-0x46]
  404a6d:	mov    eax,0x4d042228
  404a72:	leave  
  404a73:	out    0x9e,eax
  404a75:	inc    ch
  404a77:	jle    0x404a6b
  404a79:	cdq    
  404a7a:	daa    
  404a7b:	addr16 xor esi,ebp
  404a7e:	rcr    BYTE PTR [esi+0x12c32b4f],cl
  404a84:	repz add al,ah
  404a87:	shl    bl,1
  404a89:	addr16 and al,0x56
  404a8c:	shl    BYTE PTR [ebx-0x26],1
  404a8f:	pop    es
  404a90:	xlat   BYTE PTR ds:[ebx]
  404a91:	nop
  404a92:	pop    ebp
  404a93:	iret   
  404a94:	pop    esi
  404a95:	lea    eax,[edi+0x43b66470]
  404a9b:	sub    bl,al
  404a9d:	add    BYTE PTR [edx-0x56],dh
  404aa0:	jae    0x404b07
  404aa2:	push   ecx
  404aa3:	scas   eax,DWORD PTR es:[edi]
  404aa4:	in     eax,dx
  404aa5:	iret   
  404aa6:	hlt    
  404aa7:	dec    edi
  404aa8:	fdivr  DWORD PTR [edx-0x44]
  404aab:	retf   0xae05
  404aae:	icebp  
  404aaf:	out    dx,eax
  404ab0:	inc    ebx
  404ab1:	push   ds
  404ab2:	pusha  
  404ab3:	pop    ecx
  404ab4:	ss mov dl,0x83
  404ab7:	dec    ebx
  404ab8:	xor    eax,0xe56ca675
  404abd:	icebp  
  404abe:	mov    al,ds:0x1ea0886c
  404ac3:	enter  0x4fee,0x6e
  404ac7:	and    ch,BYTE PTR [esi]
  404ac9:	push   ecx
  404aca:	test   eax,0x9a566a8
  404acf:	sahf   
  404ad0:	stc    
  404ad1:	mov    edi,0xaabe2213
  404ad6:	mov    al,0xd6
  404ad8:	aad    0x56
  404ada:	lds    eax,FWORD PTR [edi]
  404adc:	mov    al,0xe1
  404ade:	sub    eax,0xaf9bf1b8
  404ae3:	mov    eax,ds:0xe1a2b937
  404ae8:	mov    eax,ds:0xb9ef274c
  404aed:	cmp    al,0xd3
  404aef:	pusha  
  404af0:	frstor [ebx]
  404af2:	fadd   QWORD PTR [edi-0x2a584df9]
  404af8:	outs   dx,BYTE PTR ds:[si]
  404afa:	pusha  
  404afb:	ror    DWORD PTR [esi-0x2d13d619],1
  404b01:	sub    al,0x1b
  404b03:	xor    al,0xec
  404b05:	jg     0x404acc
  404b07:	lea    edx,[esi+0x77]
  404b0a:	jnp    0x404b24
  404b0c:	cmp    ebp,esi
  404b0e:	ficomp WORD PTR [edi+0x3332e5c4]
  404b14:	stos   BYTE PTR es:[edi],al
  404b15:	int    0xdd
  404b17:	cmp    esi,ebp
  404b19:	loop   0x404b82
  404b1b:	and    eax,0xc808e91a
  404b20:	das    
  404b21:	ds push ebp
  404b23:	enter  0x294d,0x4a
  404b27:	and    BYTE PTR [eax],0x20
  404b2a:	mov    edi,0x9a1fdd41
  404b2f:	(bad)  
  404b30:	fdiv   DWORD PTR [esi+ebx*4]
  404b33:	out    dx,eax
  404b34:	idiv   DWORD PTR [edi+0x6e]
  404b37:	dec    esp
  404b38:	sub    dl,al
  404b3a:	jcxz   0x404aef
  404b3d:	jo     0x404adf
  404b3f:	sub    DWORD PTR [esp+ebp*2],ebp
  404b42:	push   edx
  404b43:	jo     0x404ba3
  404b45:	pop    es
  404b46:	outs   dx,BYTE PTR ds:[esi]
  404b47:	std    
  404b48:	mov    DWORD PTR ds:0xe96627cb,edx
  404b4e:	outs   dx,DWORD PTR ds:[esi]
  404b4f:	push   eax
  404b50:	out    0x59,eax
  404b52:	dec    ebp
  404b53:	stc    
  404b54:	xor    cl,bh
  404b56:	pop    ecx
  404b57:	push   esp
  404b58:	popa   
  404b59:	xlat   BYTE PTR ds:[ebx]
  404b5a:	shl    BYTE PTR [esi],0xee
  404b5d:	inc    ebp
  404b5e:	scas   eax,DWORD PTR es:[edi]
  404b5f:	std    
  404b60:	icebp  
  404b61:	xchg   ebx,eax
  404b62:	mov    esi,0xc217ff8c
  404b67:	sbb    eax,DWORD PTR [ebx]
  404b69:	enter  0x5256,0x1d
  404b6d:	nop
  404b6e:	call   esp
  404b70:	int3   
  404b71:	retf   
  404b72:	inc    ebx
  404b73:	xor    al,0x16
  404b75:	mov    ds:0xb70da3e,al
  404b7a:	adc    dl,dh
  404b7c:	inc    ecx
  404b7d:	mov    eax,ds:0xc1b5d5d0
  404b82:	sbb    dl,dl
  404b84:	sbb    DWORD PTR ds:0xba933d2a,esi
  404b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8b:	xchg   BYTE PTR [edx],dh
  404b8d:	dec    edx
  404b8e:	lahf   
  404b8f:	mov    ch,0x80
  404b91:	push   DWORD PTR [edi]
  404b93:	jge    0x404b62
  404b95:	jnp    0x404be2
  404b97:	ins    DWORD PTR es:[edi],dx
  404b98:	loope  0x404bb5
  404b9a:	or     edx,ebx
  404b9c:	daa    
  404b9d:	sub    bl,BYTE PTR [edx-0x185d5171]
  404ba3:	push   esp
  404ba4:	fistp  DWORD PTR [esi+0x62f11f20]
  404baa:	dec    eax
  404bab:	sbb    BYTE PTR [esi+0x6b643c81],0x5c
  404bb2:	lods   al,BYTE PTR ds:[esi]
  404bb3:	jp     0x404bd6
  404bb5:	lea    esp,[edx+eax*8+0x4351570c]
  404bbc:	shl    DWORD PTR [eax],0x25
  404bbf:	leave  
  404bc0:	scas   al,BYTE PTR es:[edi]
  404bc1:	add    BYTE PTR [eax+0x19],0x3
  404bc5:	scas   al,BYTE PTR es:[edi]
  404bc6:	call   FWORD PTR [esi+0x1657cced]
  404bcc:	sbb    bl,bh
  404bce:	test   al,0x60
  404bd0:	pop    eax
  404bd1:	fwait
  404bd2:	xchg   DWORD PTR [eax-0x58547701],edi
  404bd8:	jb     0x404b75
  404bda:	adc    eax,DWORD PTR [esi+eiz*1+0x26]
  404bde:	jns    0x404b9a
  404be0:	cmp    BYTE PTR [ebp-0x54],0x19
  404be4:	jbe    0x404c34
  404be6:	adc    bl,BYTE PTR [ecx-0x3d371ae4]
  404bec:	jge    0x404b79
  404bee:	imul   edi,DWORD PTR [eax+edi*1-0x6f],0x39a6ce15
  404bf6:	ret    
  404bf7:	sti    
  404bf8:	es mov gs,esp
  404bfb:	test   al,al
  404bfd:	inc    edx
  404bfe:	test   BYTE PTR [edx+eax*1-0x2a9d9cd8],dl
  404c05:	mov    DWORD PTR [esi+esi*8],edi
  404c08:	rol    DWORD PTR ds:0x2f1542d5,cl
  404c0e:	call   0xe70ff740
  404c13:	mov    ebp,edx
  404c15:	(bad)  
  404c16:	hlt    
  404c17:	dec    esp
  404c18:	scas   al,BYTE PTR es:[edi]
  404c19:	pop    edx
  404c1a:	int    0x9a
  404c1c:	cmp    BYTE PTR [ecx],dl
  404c1e:	or     eax,0xffffffbb
  404c21:	fwait
  404c22:	sbb    ch,BYTE PTR [eax]
  404c24:	adc    al,0xa
  404c26:	mov    al,0x4a
  404c28:	loop   0x404bf4
  404c2a:	mov    bh,BYTE PTR ds:0x1b745ade
  404c30:	or     ecx,DWORD PTR [edx+ebp*4-0xa40309f]
  404c37:	or     DWORD PTR [edi-0x313a7cc],ecx
  404c3d:	xlat   BYTE PTR ds:[ebx]
  404c3e:	call   0x6c24:0x37f3fe86
  404c45:	inc    ebx
  404c46:	push   edi
  404c47:	stos   DWORD PTR es:[edi],eax
  404c48:	lods   eax,DWORD PTR ds:[esi]
  404c49:	sbb    edx,eax
  404c4b:	je     0x404c5d
  404c4d:	inc    esp
  404c4e:	lods   eax,DWORD PTR ds:[esi]
  404c4f:	jne    0x404c77
  404c51:	push   esi
  404c52:	jnp    0x404c27
  404c54:	dec    ebp
  404c55:	(bad)  [eax-0x529802d2]
  404c5b:	inc    ebp
  404c5c:	pusha  
  404c5d:	out    dx,al
  404c5e:	xchg   edi,eax
  404c5f:	test   eax,0x542ad496
  404c64:	dec    edx
  404c65:	adc    edx,DWORD PTR ds:0x6ab0a825
  404c6b:	xlat   BYTE PTR ds:[ebx]
  404c6c:	daa    
  404c6d:	cdq    
  404c6e:	fnstsw WORD PTR [ebp+0x46aa2da6]
  404c74:	mov    ds:0xe1c41440,eax
  404c79:	icebp  
  404c7a:	cmp    al,0xf2
  404c7c:	sub    cl,BYTE PTR [edx+0x7e]
  404c7f:	jo     0x404c21
  404c81:	add    eax,DWORD PTR ds:0xc2348b1c
  404c87:	push   0x56798559
  404c8c:	lahf   
  404c8d:	sbb    cl,ah
  404c8f:	adc    ebp,0x8a257c2e
  404c95:	popf   
  404c96:	pop    ebx
  404c97:	data16 xor al,0xe
  404c9a:	add    al,0x70
  404c9c:	sub    al,0x2f
  404c9e:	xor    esp,0xa66f0c9d
  404ca4:	leave  
  404ca5:	mov    bl,0x48
  404ca7:	sbb    ebx,DWORD PTR [esi-0x6b]
  404caa:	ret    0xead8
  404cad:	inc    ebp
  404cae:	cdq    
  404caf:	jp     0x404cf0
  404cb1:	mov    edx,0xc985b4d1
  404cb6:	sti    
  404cb7:	mov    dh,0x9
  404cb9:	sub    dl,BYTE PTR [edx-0x3043d269]
  404cbf:	cdq    
  404cc0:	xchg   ecx,eax
  404cc1:	rol    BYTE PTR ds:0x1a96fca0,1
  404cc7:	jb     0x404d0b
  404cc9:	ss inc edx
  404ccb:	dec    edx
  404ccc:	mov    esp,0x59933806
  404cd1:	popa   
  404cd2:	mov    eax,ds:0xf9c36808
  404cd7:	inc    edx
  404cd8:	xchg   ebx,eax
  404cd9:	lods   al,BYTE PTR ds:[esi]
  404cda:	inc    edi
  404cdb:	or     bl,0x6e
  404cde:	push   ebx
  404cdf:	(bad)  
  404ce0:	xor    al,0x9d
  404ce2:	or     al,0xa
  404ce4:	mov    dh,BYTE PTR [edi-0x687b50c5]
  404cea:	push   edx
  404ceb:	cmp    bh,bh
  404ced:	aas    
  404cee:	mov    ah,0x21
  404cf0:	ins    BYTE PTR es:[edi],dx
  404cf1:	nop
  404cf2:	bound  ecx,QWORD PTR [ecx+0xe]
  404cf5:	push   cs
  404cf6:	es xchg esi,eax
  404cf8:	and    eax,0x29e844bf
  404cfd:	jbe    0x404ce6
  404cff:	imul   edi,edx,0x76a7bc2f
  404d05:	pop    ebx
  404d06:	xor    DWORD PTR [edx],0x93ec4849
  404d0c:	jb     0x404c8e
  404d0e:	jmp    0x82c2:0x85c3f123
  404d15:	xor    ch,dl
  404d17:	and    BYTE PTR [esi],ch
  404d19:	stos   BYTE PTR es:[edi],al
  404d1a:	cmp    eax,0xd4e1cae9
  404d1f:	pop    esp
  404d20:	das    
  404d21:	jmp    0xa3480cf5
  404d26:	fwait
  404d27:	es and al,0x41
  404d2a:	jbe    0x404d4c
  404d2c:	lods   eax,DWORD PTR ds:[esi]
  404d2d:	mov    WORD PTR [edx],?
  404d2f:	and    al,0xd8
  404d31:	stos   BYTE PTR es:[edi],al
  404d32:	xor    BYTE PTR [eax+0x5e],bl
  404d35:	stos   BYTE PTR es:[edi],al
  404d36:	inc    esi
  404d37:	push   eax
  404d38:	nop
  404d39:	into   
  404d3a:	adc    BYTE PTR [eax-0x3f],bl
  404d3d:	jle    0x404db2
  404d3f:	xor    al,0xba
  404d41:	mov    dh,0x32
  404d43:	(bad)  
  404d44:	sub    ah,BYTE PTR [ebx-0x22d26820]
  404d4a:	inc    si
  404d4c:	push   0xe91c5e58
  404d51:	jb     0x404d86
  404d53:	popa   
  404d54:	pop    edi
  404d55:	sahf   
  404d56:	call   0x8e94:0x7dd2d3f9
  404d5d:	mov    ?,esi
  404d5f:	shr    ecx,cl
  404d61:	cs in  eax,0x63
  404d64:	or     bl,0x2d
  404d67:	std    
  404d68:	dec    esi
  404d69:	push   ebx
  404d6a:	inc    esi
  404d6b:	aaa    
  404d6c:	mov    edx,DWORD PTR [ecx+ecx*8]
  404d6f:	test   BYTE PTR [ecx+ebx*4+0x5cda070e],cl
  404d76:	jmp    0x1726:0xc0a966be
  404d7d:	lea    eax,[edx]
  404d7f:	adc    DWORD PTR [ebx-0x52],eax
  404d82:	add    esi,edi
  404d84:	sub    dl,BYTE PTR [eax+0x48]
  404d87:	sbb    al,0x8c
  404d89:	jbe    0x404da5
  404d8b:	fs xchg ecx,eax
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	sar    BYTE PTR [edx+ebx*4-0x5df7b649],1
  404d95:	dec    edx
  404d96:	div    ebx
  404d98:	add    eax,0xd51d6aa1
  404d9d:	xor    al,0x40
  404d9f:	test   BYTE PTR [ebp-0x4],bh
  404da2:	and    eax,0xfe9573ac
  404da7:	mov    bh,0x5d
  404da9:	inc    eax
  404daa:	popa   
  404dab:	sbb    al,0x78
  404dad:	or     eax,0x93ce0a99
  404db2:	(bad)  
  404db3:	stc    
  404db4:	mov    ch,0x12
  404db6:	gs add ah,ch
  404db9:	popa   
  404dba:	fnstenv [esi]
  404dbc:	inc    edx
  404dbd:	inc    ecx
  404dbe:	xchg   edi,eax
  404dbf:	add    ah,BYTE PTR [esi]
  404dc1:	pop    ecx
  404dc2:	daa    
  404dc3:	pop    edx
  404dc4:	inc    ecx
  404dc5:	sub    DWORD PTR [edx+0xc],ecx
  404dc8:	jae    0x404dfe
  404dca:	and    edx,DWORD PTR [edx-0x58698c1f]
  404dd0:	repnz mov ch,0x2b
  404dd3:	(bad)  
  404dd4:	sbb    BYTE PTR [esi+0x17],0x0
  404dd8:	xor    bl,BYTE PTR [edi-0x5808c4b0]
  404dde:	scas   eax,DWORD PTR es:[edi]
  404ddf:	mov    al,0xf3
  404de1:	clc    
  404de2:	or     BYTE PTR ds:0x4ea69bef,dh
  404de8:	stos   BYTE PTR es:[edi],al
  404de9:	sub    cl,bl
  404deb:	iret   
  404dec:	and    BYTE PTR [ecx+0x77],ah
  404def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df0:	call   0xfb3c:0xa29fa4ff
  404df7:	sbb    al,0xa4
  404df9:	xchg   ebx,eax
  404dfa:	sbb    BYTE PTR [eax+0x10],0x4c
  404dfe:	push   cs
  404dff:	push   edx
  404e00:	push   esi
  404e01:	jl     0x404e45
  404e03:	mov    ebp,0x63b09e82
  404e08:	or     eax,DWORD PTR [ebx-0x54569394]
  404e0e:	int3   
  404e0f:	bound  ebx,QWORD PTR [edx]
  404e11:	inc    esi
  404e12:	bound  edx,QWORD PTR [edi]
  404e14:	adc    DWORD PTR [esi-0x2588a7e],ebx
  404e1a:	inc    esp
  404e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e1c:	popf   
  404e1d:	popf   
  404e1e:	out    dx,al
  404e1f:	arpl   WORD PTR [esi+esi*2-0x2b7c80aa],cx
  404e26:	inc    esp
  404e27:	test   DWORD PTR [ebx+0x57],edi
  404e2a:	lods   al,BYTE PTR ds:[esi]
  404e2b:	mov    esp,0xea7c27d3
  404e30:	imul   DWORD PTR [esi+0x4f5dd604]
  404e36:	mov    WORD PTR [ecx-0x7d],gs
  404e39:	push   ds
  404e3a:	pop    ss
  404e3b:	lea    esp,[eax-0x5b]
  404e3e:	rol    DWORD PTR [ebx+eiz*1],1
  404e41:	mov    bh,0x65
  404e43:	mov    ecx,0xdb00e1d8
  404e48:	cmp    eax,0xca254f55
  404e4d:	or     ecx,0xa07b2102
  404e53:	loopne 0x404ebd
  404e55:	adc    ch,0xe
  404e58:	ret    
  404e59:	or     ebx,DWORD PTR [eax]
  404e5b:	ja     0x404e6e
  404e5d:	dec    esp
  404e5e:	push   ecx
  404e5f:	xchg   DWORD PTR [edi-0x2e59b38e],eax
  404e65:	or     DWORD PTR [eax+0x1b],0x65
  404e69:	ss data16 sahf 
  404e6c:	jne    0x404e9f
  404e6e:	adc    bh,BYTE PTR [edi+0x57404ba7]
  404e74:	mov    al,ds:0xd4b03523
  404e79:	pop    ebp
  404e7a:	pop    ds
  404e7b:	lock lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e7e:	jns    0x404eb9
  404e80:	and    eax,0x126e0a9f
  404e85:	pop    edx
  404e86:	pop    ds
  404e87:	mov    DWORD PTR [eax-0x7e],eax
  404e8a:	(bad)  
  404e8b:	mov    ah,0x2f
  404e8d:	pop    eax
  404e8e:	in     eax,dx
  404e8f:	js     0x404e5a
  404e91:	mov    edi,edx
  404e93:	or     edi,DWORD PTR [edx]
  404e95:	into   
  404e96:	pop    esi
  404e97:	jae    0x404e2c
  404e99:	mov    dl,0x24
  404e9b:	sti    
  404e9c:	xchg   edi,eax
  404e9d:	aam    0x19
  404e9f:	push   esi
  404ea0:	(bad)
  404ea3:	ss inc edi
  404ea5:	leave  
  404ea6:	in     al,dx
  404ea7:	(bad)  
  404ea8:	ret    
  404ea9:	enter  0xcbd7,0xde
  404ead:	mov    gs,edi
  404eaf:	or     dh,BYTE PTR [ebx+0x10665dd0]
  404eb5:	push   ecx
  404eb6:	popa   
  404eb7:	das    
  404eb8:	xor    esi,edx
  404eba:	iret   
  404ebb:	in     al,dx
  404ebc:	dec    edi
  404ebd:	mov    edi,0x271c5c63
  404ec2:	popf   
  404ec3:	lods   eax,DWORD PTR ds:[esi]
  404ec4:	cmp    ebx,DWORD PTR [edx]
  404ec6:	sar    BYTE PTR [ecx-0x7134c8e5],cl
  404ecc:	and    eax,0x3c657e48
  404ed1:	or     DWORD PTR [ebp+eiz*8+0x75],edx
  404ed5:	xchg   esi,eax
  404ed6:	jae    0x404e6f
  404ed8:	das    
  404ed9:	aas    
  404eda:	arpl   bp,dx
  404edc:	mov    bh,0x60
  404ede:	push   0x43
  404ee0:	adc    ebx,ecx
  404ee2:	stos   BYTE PTR es:[edi],al
  404ee3:	inc    ebx
  404ee4:	adc    eax,0xdf04c90a
  404ee9:	jnp    0x404f09
  404eeb:	addr16 push edx
  404eed:	xchg   BYTE PTR [esi+0x274e969],bl
  404ef3:	push   esi
  404ef4:	inc    edx
  404ef5:	in     eax,dx
  404ef6:	push   ecx
  404ef7:	adc    esi,DWORD PTR [edx]
  404ef9:	lock mov ds:0x8679405e,al
  404eff:	xor    bl,dh
  404f01:	sbb    ebp,esp
  404f03:	jb     0x404e9c
  404f05:	inc    ecx
  404f06:	daa    
  404f07:	xchg   ecx,eax
  404f08:	lods   al,BYTE PTR ds:[esi]
  404f09:	fnstcw WORD PTR [edi+0x30]
  404f0c:	add    DWORD PTR [esp+ebx*8+0x44],0xef275cc9
  404f14:	enter  0x8a25,0x37
  404f18:	or     ebp,0x315420c8
  404f1e:	push   ebp
  404f1f:	neg    DWORD PTR [esi+0x6a89be30]
  404f25:	(bad)
  404f28:	hlt    
  404f29:	inc    ebp
  404f2a:	fidiv  DWORD PTR cs:[eax]
  404f2d:	push   edi
  404f2e:	fwait
  404f2f:	data16 into 
  404f31:	in     al,0xfa
  404f33:	jmp    0x404f5a
  404f35:	pop    ebx
  404f36:	pop    esp
  404f37:	in     eax,0x82
  404f39:	sar    dl,0x2d
  404f3c:	jmp    0x404f0d
  404f3e:	call   DWORD PTR [edx+0x39615b4]
  404f44:	stc    
  404f45:	cld    
  404f46:	inc    ebx
  404f47:	scas   al,BYTE PTR es:[edi]
  404f48:	xor    dh,BYTE PTR [ecx]
  404f4a:	mov    ch,0x56
  404f4c:	jnp    0x404f70
  404f4e:	jno    0x404f53
  404f50:	out    0x69,al
  404f52:	in     al,0x94
  404f54:	mov    ds:0x72855b41,eax
  404f59:	cmc    
  404f5a:	xchg   esi,eax
  404f5b:	push   eax
  404f5c:	sub    BYTE PTR [eax],bh
  404f5e:	mov    dl,0xf
  404f60:	repnz pushf 
  404f62:	push   eax
  404f63:	ja     0x404ef3
  404f65:	xchg   esi,eax
  404f66:	pop    esi
  404f67:	int    0x5e
  404f69:	sub    eax,0x27055eef
  404f6e:	ja     0x404f58
  404f70:	neg    DWORD PTR ds:0x6f2e8e29
  404f76:	jle    0x404f95
  404f78:	mov    al,0xa4
  404f7a:	dec    ebp
  404f7b:	popfw  
  404f7d:	pop    esi
  404f7e:	jecxz  0x404ff6
  404f80:	sti    
  404f81:	pop    ebp
  404f82:	inc    ebp
  404f83:	fisttp WORD PTR [esi]
  404f85:	mov    dl,0xdb
  404f87:	sub    esi,0xfffffffc
  404f8a:	xchg   ecx,eax
  404f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f8c:	jl     0x404fc4
  404f8e:	scas   al,BYTE PTR es:[edi]
  404f8f:	mov    al,ds:0x552844e7
  404f94:	add    cl,BYTE PTR [ebx+ecx*2]
  404f97:	call   0xa01:0x17434e6f
  404f9e:	daa    
  404f9f:	or     DWORD PTR [edi-0x5b],ecx
  404fa2:	cmp    DWORD PTR [ebp+0x5eeebcfa],esp
  404fa8:	sbb    DWORD PTR [edx-0x46],0x3299b2a5
  404faf:	fidiv  WORD PTR [edx+0x1779d444]
  404fb5:	mov    ds:0x278586e9,al
  404fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fbb:	or     BYTE PTR [ecx-0x18f46de5],bl
  404fc1:	cmp    esi,edx
  404fc3:	gs adc eax,0x1bd74941
  404fc9:	sbb    al,0x44
  404fcb:	jbe    0x40502d
  404fcd:	js     0x404faf
  404fcf:	es pop ds
  404fd1:	and    BYTE PTR [ebp+ebp*2-0x23c7afb9],cl
  404fd8:	jnp    0x404fff
  404fda:	test   al,0xdc
  404fdc:	adc    bl,ch
  404fde:	data16 mov al,ds:0x1b3a296
  404fe4:	jl     0x404fb0
  404fe6:	dec    esp
  404fe7:	lahf   
  404fe8:	fsub   st(7),st
  404fea:	mov    edi,0x6ba000ee
  404fef:	xor    DWORD PTR [esi+ebp*2-0x1f495bf3],0x31
  404ff7:	int    0x15
  404ff9:	fimul  WORD PTR [edi]
  404ffb:	js     0x405005
  404ffd:	lods   eax,DWORD PTR ds:[esi]
  404ffe:	out    0xbd,al
  405000:	or     BYTE PTR [edi-0x19],al
  405003:	bound  esp,QWORD PTR [ecx]
  405005:	mov    ch,0x62
  405007:	jnp    0x404fef
  405009:	sbb    BYTE PTR [edx],cl
  40500b:	pop    ebp
  40500c:	xchg   DWORD PTR [esp+edi*4-0x59],eax
  405010:	mov    edx,DWORD PTR [edx]
  405012:	dec    ebp
  405013:	test   al,0x20
  405015:	gs push ss
  405017:	out    dx,al
  405018:	mov    ds:0x39f536e9,al
  40501d:	or     dl,BYTE PTR [eax-0x6148ea02]
  405023:	retf   0xc771
  405026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405027:	dec    ebx
  405028:	inc    ebx
  405029:	push   edx
  40502a:	mov    ds,WORD PTR [edx]
  40502c:	test   DWORD PTR [ecx+0x3aaa18df],0xb108f68d
  405036:	mov    ah,0x2b
  405038:	cdq    
  405039:	adc    cl,BYTE PTR [edi]
  40503b:	cmp    al,0xe7
  40503d:	add    cl,bh
  40503f:	and    edi,edi
  405041:	mov    edx,0xec4a68a
  405046:	push   ebx
  405047:	sbb    DWORD PTR [esi],esp
  405049:	sahf   
  40504a:	aas    
  40504b:	loopne 0x404fe0
  40504d:	loope  0x404fdb
  40504f:	mov    al,ds:0x420978da
  405054:	(bad)  
  405055:	xlat   BYTE PTR ds:[ebx]
  405056:	lods   al,BYTE PTR ds:[esi]
  405057:	sub    esi,DWORD PTR [edi]
  405059:	daa    
  40505a:	call   0x1a7b8a3d
  40505f:	and    ah,ah
  405061:	out    0xeb,eax
  405063:	xchg   BYTE PTR [edi+0x1e],al
  405066:	imul   eax,edx,0xffffffb4
  405069:	xlat   BYTE PTR ds:[ebx]
  40506a:	mov    edx,0xf0e7ef30
  40506f:	cli    
  405070:	test   eax,0x247628a8
  405075:	into   
  405076:	push   eax
  405077:	(bad)  [ecx]
  405079:	adc    eax,0x39c83c53
  40507e:	ins    DWORD PTR es:[edi],dx
  40507f:	sbb    DWORD PTR [ebp+0x43],0xf
  405083:	lods   eax,DWORD PTR ds:[esi]
  405084:	xchg   esp,eax
  405085:	shl    DWORD PTR [ebp-0x54],1
  405088:	ja     0x405038
  40508a:	xor    bl,BYTE PTR [esi]
  40508c:	loopne 0x40504c
  40508e:	repz fmul st(3),st
  405091:	xor    eax,0x8f0ee05
  405096:	and    al,0x5e
  405098:	sbb    cl,BYTE PTR [ecx]
  40509a:	jg     0x4050e4
  40509c:	inc    ebp
  40509d:	popa   
  40509e:	jl     0x405087
  4050a0:	imul   ebx,DWORD PTR [edx],0x71f0fae7
  4050a6:	out    dx,eax
  4050a7:	push   DWORD PTR [edx-0x34fa53b]
  4050ad:	push   esp
  4050ae:	xchg   ebx,eax
  4050af:	popf   
  4050b0:	cmc    
  4050b1:	and    al,0xaf
  4050b3:	inc    edi
  4050b4:	sbb    DWORD PTR [ebp+0x670d7a5e],ebx
  4050ba:	sbb    BYTE PTR [eax-0x324dfba1],al
  4050c0:	aas    
  4050c1:	xchg   cl,dh
  4050c3:	jge    0x405052
  4050c5:	push   0xff7a5dc5
  4050ca:	loopne 0x405117
  4050cc:	xchg   ebp,eax
  4050cd:	xchg   edi,eax
  4050ce:	mov    ebx,0x35a09552
  4050d3:	popf   
  4050d4:	xor    al,0x7
  4050d6:	add    al,0xe8
  4050d8:	mov    bl,0x32
  4050da:	sub    ebp,ebx
  4050dc:	imul   esi,eax,0xdcb1c67b
  4050e2:	imul   edi,DWORD PTR [edx],0xb6d36844
  4050e8:	loope  0x4050e3
  4050ea:	jns    0x4050ca
  4050ec:	mov    edx,0xf69085ce
  4050f1:	sub    eax,0xfc93ecf8
  4050f6:	mov    esp,0xd4d4988f
  4050fb:	cmp    esp,DWORD PTR [edx-0x4b]
  4050fe:	call   0xb943:0x8d1f3739
  405105:	fisttp WORD PTR [esi-0x51d33e5]
  40510b:	xchg   edi,eax
  40510c:	leave  
  40510d:	jmp    0x437da1e5
  405112:	pop    ebx
  405113:	rol    BYTE PTR ds:0xab5a4d7c,cl
  405119:	pcmpgtw mm3,QWORD PTR [eax-0x29]
  40511d:	xchg   ebx,eax
  40511e:	cmp    al,0xf0
  405120:	sbb    dl,ch
  405122:	cmp    dl,bh
  405124:	or     al,bl
  405126:	adc    BYTE PTR [esi+ecx*8],ah
  405129:	lods   al,BYTE PTR ds:[esi]
  40512a:	repnz icebp 
  40512c:	xor    eax,0x929764e
  405131:	pand   mm3,mm3
  405134:	xchg   esi,eax
  405135:	adc    bl,dl
  405137:	add    bl,BYTE PTR [ebx-0x38bfe08c]
  40513d:	mov    esp,0xa43c5b95
  405142:	add    DWORD PTR [ecx+0x22],ebp
  405145:	or     al,0xe7
  405147:	mov    bl,0x12
  405149:	adc    BYTE PTR [edi+0x45f1908b],al
  40514f:	push   ebp
  405150:	pop    eax
  405151:	inc    esi
  405152:	fstp   TBYTE PTR [edi]
  405154:	js     0x4050e9
  405156:	bound  edi,QWORD PTR [ebp+0x1a7ec6c5]
  40515c:	jbe    0x405184
  40515e:	ins    BYTE PTR es:[edi],dx
  40515f:	clc    
  405160:	int    0x7c
  405162:	xor    ch,dl
  405164:	je     0x405142
  405166:	mov    esp,0xfc19205d
  40516b:	or     DWORD PTR [eax],esi
  40516d:	sbb    DWORD PTR [edx+0x7488b2ce],ecx
  405173:	dec    esi
  405174:	push   es
  405175:	scas   eax,DWORD PTR es:[edi]
  405176:	mov    ch,0x27
  405178:	sbb    al,0x40
  40517a:	dec    edi
  40517b:	mov    esi,0x1c8a3642
  405180:	cld    
  405181:	xchg   edi,eax
  405182:	dec    edx
  405183:	jg     0x405151
  405185:	dec    esi
  405186:	shr    DWORD PTR [eax],0x7c
  405189:	and    BYTE PTR [edx-0x34],ch
  40518c:	mov    esi,0x71f61fca
  405191:	cmp    al,0x99
  405193:	call   FWORD PTR ds:0x74e0706b
  405199:	call   0x1fe0f64
  40519e:	inc    esi
  40519f:	mov    ah,0x3c
  4051a1:	sbb    dh,BYTE PTR [ebx-0x16f85528]
  4051a7:	inc    edx
  4051a8:	or     ch,dl
  4051aa:	out    0xae,al
  4051ac:	or     DWORD PTR [ecx+edi*1+0x23],ebx
  4051b0:	sub    al,0xf6
  4051b2:	sbb    ecx,ecx
  4051b4:	add    eax,0x7465c106
  4051b9:	(bad)  
  4051ba:	int    0xcb
  4051bc:	call   0x22f8ecdf
  4051c1:	test   al,0x97
  4051c3:	mov    ds,WORD PTR [esi-0x400f18ab]
  4051c9:	sub    al,0xa6
  4051cb:	pop    es
  4051cc:	lea    esp,[ebp+0x23669c8b]
  4051d2:	add    bh,dh
  4051d4:	popf   
  4051d5:	cli    
  4051d6:	jp     0x405229
  4051d8:	or     BYTE PTR [esi],bl
  4051da:	mov    eax,0x552e41b1
  4051df:	fcomp  QWORD PTR [esi+0x260341f3]
  4051e5:	dec    eax
  4051e6:	jl     0x4051cc
  4051e8:	mov    eax,ds:0xfbeb06ce
  4051ed:	cmp    eax,0x9bdfd374
  4051f2:	in     eax,0x40
  4051f4:	scas   eax,DWORD PTR es:[edi]
  4051f5:	sbb    BYTE PTR [eax-0x31],ch
  4051f8:	fcom   QWORD PTR [ebp-0x24]
  4051fb:	mov    edi,DWORD PTR [ebx-0x48d4d6bf]
  405201:	adc    eax,0x3eb971a3
  405206:	sbb    DWORD PTR [esi],eax
  405208:	jnp    0x40524d
  40520a:	imul   esi,DWORD PTR [ebp+0x672fa1aa],0x587d51b3
  405214:	lea    edx,ds:0x3a3c6d43
  40521a:	mov    ecx,0x4c5b8cd9
  40521f:	int    0x8d
  405221:	mov    BYTE PTR ds:0xa6d7bc51,dl
  405227:	xor    al,BYTE PTR [ecx-0x29a587c6]
  40522d:	push   edi
  40522e:	sbb    cl,dl
  405230:	cmp    edi,ebx
  405232:	fwait
  405233:	enter  0x60a8,0x5d
  405237:	and    ch,bh
  405239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40523a:	jmp    0x2186:0xcd48742
  405241:	(bad)  
  405242:	jmp    0x4051fe
  405244:	mov    cl,0xd6
  405246:	push   edx
  405247:	fild   DWORD PTR [esi-0x1df76bda]
  40524d:	lods   al,BYTE PTR ds:[esi]
  40524e:	fsub   QWORD PTR [edx]
  405250:	shl    BYTE PTR [edx-0x61],cl
  405253:	jmp    0x40524f
  405255:	jle    0x405223
  405257:	mov    DWORD PTR [edx],ecx
  405259:	imul   eax,eax,0x18
  40525c:	imul   ebp,DWORD PTR [ecx-0x5d],0xae513574
  405263:	push   0x4ad4317d
  405268:	ficomp WORD PTR [eax]
  40526a:	popa   
  40526b:	xchg   BYTE PTR [edi+0x3d],bh
  40526e:	mov    esi,ecx
  405270:	pop    ecx
  405271:	shl    DWORD PTR [ebx*8+0x6775e3da],cl
  405278:	pushf  
  405279:	call   0x63ff883b
  40527e:	push   DWORD PTR [ebp+esi*2+0x65]
  405282:	test   DWORD PTR [ebp-0x74],edx
  405285:	retf   
  405286:	cwde   
  405287:	ss sub eax,ecx
  40528a:	call   0x3b894066
  40528f:	jnp    0x40529e
  405291:	data16 mov bh,0x36
  405294:	ret    
  405295:	test   eax,0x2184243
  40529a:	mov    ds:0x201fc430,al
  40529f:	retf   
  4052a0:	xor    eax,0x43cb09a0
  4052a5:	scas   eax,DWORD PTR es:[edi]
  4052a6:	ror    DWORD PTR [eax+edi*1+0x5707ed06],0x29
  4052ae:	add    al,0x5a
  4052b0:	mov    BYTE PTR [ecx],al
  4052b2:	adc    al,0x40
  4052b4:	pop    edx
  4052b5:	and    BYTE PTR [eax],ch
  4052b7:	ins    DWORD PTR es:[edi],dx
  4052b8:	push   0x43ae1342
  4052bd:	stc    
  4052be:	pop    ecx
  4052bf:	xor    DWORD PTR [edi+0x42eb3323],ebp
  4052c5:	and    bl,BYTE PTR ds:[eax]
  4052c8:	mov    edi,0x2b98352a
  4052cd:	test   eax,0x9927b4b0
  4052d2:	cwde   
  4052d3:	mov    dh,0x5f
  4052d5:	ss dec ebp
  4052d7:	imul   ebp,DWORD PTR [edx],0x982bb318
  4052dd:	iret   
  4052de:	sbb    eax,0x1bd6711c
  4052e3:	es push cs
  4052e5:	mov    ch,0x72
  4052e7:	cmp    al,0x40
  4052e9:	stc    
  4052ea:	mov    bh,0xa5
  4052ec:	sbb    al,0x5
  4052ee:	fdivp  st(3),st
  4052f0:	mov    dl,0x69
  4052f2:	stos   BYTE PTR es:[edi],al
  4052f3:	sbb    DWORD PTR [edi-0x608c8cf2],ebx
  4052f9:	sti    
  4052fa:	push   cs
  4052fb:	imul   BYTE PTR [ebx-0x2497342a]
  405301:	and    al,BYTE PTR ds:0xca00bf59
  405307:	retf   0xfa90
  40530a:	imul   dl
  40530c:	sub    eax,0xcffc309c
  405311:	xor    dl,BYTE PTR [ecx+0x6f]
  405314:	stos   BYTE PTR es:[edi],al
  405315:	ror    DWORD PTR [ebp+0x17cd0d0b],0x45
  40531c:	cmp    eax,0x2dbcce5a
  405321:	push   esi
  405322:	inc    esp
  405323:	inc    edx
  405324:	cwde   
  405325:	dec    eax
  405326:	(bad)  
  405328:	in     al,0xd0
  40532a:	cmc    
  40532b:	mov    ecx,0xb902c386
  405330:	cmp    ebp,DWORD PTR [edx+0x7e959cb0]
  405336:	push   esp
  405337:	cmp    al,0x90
  405339:	dec    eax
  40533a:	dec    ebp
  40533b:	and    ah,BYTE PTR [eax]
  40533d:	cs (bad) 
  40533f:	retf   0xc8a1
  405342:	inc    DWORD PTR [esp+eax*1-0x74a92503]
  405349:	arpl   ax,ax
  40534b:	jno    0x405307
  40534d:	inc    eax
  40534e:	in     al,0xa2
  405350:	das    
  405351:	clc    
  405352:	xchg   edi,eax
  405353:	mov    DWORD PTR [edx],ecx
  405355:	xchg   BYTE PTR [eax+0x73],ah
  405358:	dec    edx
  405359:	xchg   esp,eax
  40535a:	fadd   st(0),st
  40535c:	adc    DWORD PTR [eax*8-0x7e314fd3],ebp
  405363:	push   ecx
  405364:	xor    ebx,0xffffffa8
  405367:	loop   0x4052f8
  405369:	pop    esp
  40536a:	stc    
  40536b:	mov    ebp,0x4a694fc8
  405370:	hlt    
  405371:	sbb    BYTE PTR [ecx-0x3a61df70],0x91
  405378:	sbb    ecx,DWORD PTR [ebx+0x2e]
  40537b:	test   eax,0x35291610
  405380:	mov    edx,0xff4dfcd8
  405385:	push   ds
  405386:	ss push ebx
  405388:	clc    
  405389:	clc    
  40538a:	mov    ebx,0xcac5f8de
  40538f:	scas   eax,DWORD PTR es:[edi]
  405390:	ds daa 
  405392:	pop    es
  405393:	pop    ecx
  405394:	and    al,0xc1
  405396:	adc    cl,BYTE PTR ss:[ecx-0x3e]
  40539a:	test   al,0x6b
  40539c:	xor    eax,0x69824ce9
  4053a1:	pop    ecx
  4053a2:	cli    
  4053a3:	rcl    DWORD PTR [edi+0x2c64011f],1
  4053a9:	mov    ds:0x1b1bab0e,eax
  4053ae:	push   ecx
  4053af:	into   
  4053b0:	xchg   BYTE PTR [esi+eiz*1],dl
  4053b3:	fs pop esp
  4053b5:	xlat   BYTE PTR ds:[ebx]
  4053b6:	clc    
  4053b7:	add    eax,0x724d88c9
  4053bc:	(bad)  
  4053bd:	jge    0x405437
  4053bf:	cmp    ebp,DWORD PTR [eax]
  4053c1:	jne    0x4053ba
  4053c3:	js     0x4053bb
  4053c5:	jle    0x40539d
  4053c7:	ja     0x4053d4
  4053c9:	addr16 mov ds:0xa61d,al
  4053cd:	and    edx,DWORD PTR [edx*2+0x51257c50]
  4053d4:	or     DWORD PTR [edx],ebx
  4053d6:	xor    eax,DWORD PTR [ebx]
  4053d8:	fbld   TBYTE PTR [ebx+0x41]
  4053db:	sar    DWORD PTR [ecx+0x7a1c950a],0xeb
  4053e2:	or     al,0x1
  4053e4:	out    0x72,eax
  4053e6:	popf   
  4053e7:	repz inc edx
  4053e9:	in     eax,dx
  4053ea:	fdiv   QWORD PTR [eax+0x6933efcb]
  4053f0:	rcr    DWORD PTR [eax+0x1e5b911d],1
  4053f6:	hlt    
  4053f7:	mov    bl,0xf5
  4053f9:	stos   DWORD PTR es:[edi],eax
  4053fa:	or     ebp,DWORD PTR [esi-0x55]
  4053fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053fe:	imul   esp,DWORD PTR ds:0x234fc0fd,0xffffffbb
  405405:	out    0xe4,eax
  405407:	cmp    DWORD PTR [edi+esi*4+0x1c],edi
  40540b:	inc    ebx
  40540c:	imul   ecx,DWORD PTR [ebx],0xffffffaa
  40540f:	mov    ah,0x39
  405411:	pusha  
  405412:	dec    BYTE PTR [edi-0x4032c60]
  405418:	mov    cl,0x57
  40541a:	lods   al,BYTE PTR ds:[esi]
  40541b:	fadd   st(1),st
  40541d:	adc    DWORD PTR [eax],edx
  40541f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405420:	retf   
  405421:	mov    ah,0x83
  405423:	addr16 jmp 0x405447
  405426:	inc    eax
  405427:	retf   0x57b
  40542a:	jnp    0x40543f
  40542c:	in     al,dx
  40542d:	mov    dh,0xf0
  40542f:	hlt    
  405430:	adc    BYTE PTR [esi],al
  405432:	jmp    0xd44b:0xb6d3662b
  405439:	lock add al,0x93
  40543c:	mov    eax,ds:0x5a1e829c
  405441:	loop   0x405487
  405443:	call   0xf2ce:0xfa3bac9e
  40544a:	push   0xfffffffa
  40544c:	int3   
  40544d:	lods   eax,DWORD PTR ds:[esi]
  40544e:	xor    al,0x3b
  405450:	mov    ah,0x6
  405452:	cwde   
  405453:	iret   
  405454:	lock xor DWORD PTR [ebx],edi
  405457:	in     eax,dx
  405458:	and    al,0x3c
  40545a:	mov    DWORD PTR [edx+0x39],0xf1439cc8
  405461:	mov    ds:0xdbbb7cee,eax
  405466:	stos   BYTE PTR es:[edi],al
  405467:	je     0x4053f3
  405469:	push   ebx
  40546a:	adc    BYTE PTR [ebp+0x34],dl
  40546d:	jno    0x405476
  40546f:	imul   edi,DWORD PTR [edx-0x3d],0x1f
  405473:	sahf   
  405474:	dec    edi
  405475:	inc    esi
  405476:	fild   QWORD PTR [ecx-0x43]
  405479:	add    al,0x1c
  40547b:	jno    0x40546b
  40547d:	pop    ebx
  40547e:	or     eax,0xff9a1b5
  405483:	dec    edx
  405484:	ret    
  405485:	mov    edx,0xd349eef2
  40548a:	cdq    
  40548b:	adc    BYTE PTR [ebx-0x2126aef3],al
  405491:	pop    edi
  405492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405493:	xchg   BYTE PTR fs:[esi+0x3a2f458b],cl
  40549a:	xchg   esi,eax
  40549b:	adc    BYTE PTR [esi],dh
  40549d:	xchg   ecx,eax
  40549e:	in     eax,0x1
  4054a0:	or     DWORD PTR [esp+ebp*2-0xc4bee39],ebx
  4054a7:	in     eax,0x66
  4054a9:	scas   al,BYTE PTR es:[edi]
  4054aa:	rcl    BYTE PTR [ecx-0x1a890627],1
  4054b0:	and    esi,ecx
  4054b2:	mov    esi,0x68ccaeaf
  4054b7:	and    al,0x47
  4054b9:	test   cl,ah
  4054bb:	retf   0x19a8
  4054be:	mov    ds,WORD PTR [ebp-0x47a641a1]
  4054c4:	cmp    esp,0xf8879a8a
  4054ca:	jno    0x40552e
  4054cc:	cmp    esi,eax
  4054ce:	test   al,0xc9
  4054d0:	dec    edi
  4054d1:	retf   0xb4a3
  4054d4:	test   eax,0x78565e94
  4054d9:	and    edx,ebp
  4054db:	(bad)  
  4054dc:	lahf   
  4054dd:	lods   al,BYTE PTR ds:[esi]
  4054de:	mov    BYTE PTR [ecx],ah
  4054e0:	sbb    BYTE PTR [edi+0x7afb21ef],0x22
  4054e7:	xchg   esi,eax
  4054e8:	(bad)  [esi+0x36]
  4054eb:	dec    esp
  4054ec:	fistp  DWORD PTR [ebp+0x42]
  4054ef:	sahf   
  4054f0:	ds out dx,al
  4054f2:	shr    bh,0xdc
  4054f5:	sub    eax,0x96b1c1f
  4054fa:	jle    0x405525
  4054fc:	mov    dl,0xb3
  4054fe:	mov    ecx,0xc13315f6
  405503:	jge    0x4054f8
  405505:	aaa    
  405506:	retf   
  405507:	retf   0xaf89
  40550a:	pop    edi
  40550b:	mov    ah,0x2d
  40550d:	and    al,0x81
  40550f:	lods   al,BYTE PTR ds:[esi]
  405510:	inc    edi
  405511:	cmp    eax,0x6773a9ac
  405516:	push   0xc
  405518:	(bad)  
  40551a:	mov    edi,0xbbf5d9d
  40551f:	push   edx
  405520:	jns    0x40556c
  405522:	stos   DWORD PTR es:[edi],eax
  405523:	gs pop edi
  405525:	dec    ebp
  405526:	pusha  
  405527:	adc    DWORD PTR [ecx-0x3480c691],esi
  40552d:	sar    BYTE PTR [ebx+0x7cf33294],1
  405533:	jnp    0x4054e0
  405535:	test   BYTE PTR [ebx],0x1e
  405538:	(bad)  
  405539:	mov    eax,ds:0x2b044e18
  40553e:	jg     0x4054d1
  405540:	out    0x37,eax
  405542:	out    dx,eax
  405543:	sub    DWORD PTR [ebx],esi
  405545:	mov    WORD PTR [ebx+0x67c58a3a],fs
  40554b:	and    BYTE PTR [eax+ebx*2],ah
  40554e:	jbe    0x405559
  405550:	add    eax,0xb28df09e
  405555:	das    
  405556:	lods   eax,DWORD PTR ds:[esi]
  405557:	pusha  
  405558:	sub    ah,BYTE PTR [ebx+0x684d86f4]
  40555e:	mov    DWORD PTR [ecx+0x16],ecx
  405561:	test   al,0x8b
  405563:	shl    DWORD PTR [eax+0x1e],0x6f
  405567:	xchg   ebx,eax
  405568:	dec    esp
  405569:	adc    BYTE PTR [esi+0x4c],cl
  40556c:	sub    al,BYTE PTR [esi]
  40556e:	mov    al,0x1a
  405570:	aam    0x84
  405572:	std    
  405573:	retf   
  405574:	daa    
  405575:	inc    eax
  405576:	cs stc 
  405578:	adc    bh,BYTE PTR gs:[eax-0x5a75626e]
  40557f:	add    ch,BYTE PTR [edx]
  405581:	lock icebp 
  405583:	mov    dh,0xe5
  405585:	je     0x4055c7
  405587:	fcomi  st,st(1)
  405589:	imul   esp,DWORD PTR [edi-0x84163bd],0xffffffcd
  405590:	loopne 0x4055de
  405592:	dec    ebp
  405593:	shr    bh,cl
  405595:	mov    al,0x71
  405597:	cmp    DWORD PTR [esi+0x24],ebp
  40559a:	cld    
  40559b:	pop    esp
  40559c:	pop    ds
  40559d:	sbb    eax,0xde232c8b
  4055a2:	popf   
  4055a3:	es push edi
  4055a5:	inc    ebp
  4055a6:	mov    dl,0x31
  4055a8:	test   DWORD PTR [eax-0x2b868c30],0x393462cd
  4055b2:	arpl   WORD PTR [eax+0x2e],si
  4055b5:	int    0x99
  4055b7:	retf   
  4055b8:	loopne 0x405561
  4055ba:	fs and eax,edi
  4055bd:	(bad)  
  4055be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055bf:	mov    edi,ss
  4055c1:	pusha  
  4055c2:	sbb    al,0xe5
  4055c4:	xchg   esi,eax
  4055c5:	aam    0x7f
  4055c7:	cmp    eax,esi
  4055c9:	mov    ecx,0x18d907bf
  4055ce:	call   0xca70:0xf929b7cd
  4055d5:	inc    ebx
  4055d6:	add    ecx,DWORD PTR [ebp+0x2083d5f0]
  4055dc:	lahf   
  4055dd:	xor    BYTE PTR [eax-0x68],dh
  4055e0:	jmp    0x51a2:0xf53d4832
  4055e7:	cdq    
  4055e8:	push   cs
  4055e9:	aas    
  4055ea:	sub    ebx,ebx
  4055ec:	and    DWORD PTR [edi+ebx*1+0x1c6d3377],edx
  4055f3:	mov    eax,ds:0xe2cb4f79
  4055f8:	mov    edi,0x79435566
  4055fd:	das    
  4055fe:	pop    esi
  4055ff:	mov    dl,ah
  405601:	icebp  
  405602:	cmp    edx,DWORD PTR [edi]
  405604:	mov    bl,0xc
  405606:	out    dx,al
  405607:	push   es
  405608:	out    dx,eax
  405609:	icebp  
  40560a:	jae    0x4055c7
  40560c:	stc    
  40560d:	add    DWORD PTR [edx+esi*1+0x2d3f400],0x17
  405615:	in     eax,dx
  405616:	sub    DWORD PTR [ecx+edx*2-0x26],ebp
  40561a:	push   esp
  40561b:	adc    DWORD PTR [edi],ebx
  40561d:	clc    
  40561e:	sub    DWORD PTR [edx+0x74],ecx
  405621:	push   cs
  405622:	cli    
  405623:	sbb    ch,BYTE PTR [edx]
  405625:	push   es
  405626:	mov    ds,WORD PTR ds:0xef5c9cc5
  40562c:	aad    0x95
  40562e:	jne    0x405641
  405630:	ret    
  405631:	pop    esp
  405632:	je     0x405609
  405634:	cmp    al,0x40
  405636:	inc    ebx
  405637:	nop
  405638:	mov    ecx,0x3d6555b
  40563d:	push   edi
  40563e:	loopne 0x4055d6
  405640:	push   0xffffffc5
  405642:	fcom   DWORD PTR [ebx]
  405644:	jle    0x405688
  405646:	or     ebp,DWORD PTR ds:0x182afad2
  40564c:	push   ds
  40564d:	mov    DWORD PTR [esi+0x1da73f21],ebx
  405653:	xor    DWORD PTR [edx],ebx
  405655:	add    eax,0xc79ab307
  40565a:	jae    0x40563d
  40565c:	call   0x78db:0x3a041d8f
  405663:	sub    eax,0x9da294fe
  405668:	mov    ds:0x9257a1e9,al
  40566d:	test   DWORD PTR [ecx-0x6d],ecx
  405670:	gs dec edx
  405672:	inc    edi
  405673:	inc    eax
  405674:	add    al,0xca
  405676:	sbb    dl,BYTE PTR [edx-0x4aa63e9c]
  40567c:	cmc    
  40567d:	rcl    ebx,cl
  40567f:	mov    ebx,ecx
  405681:	(bad)  
  405682:	in     eax,dx
  405683:	stos   BYTE PTR es:[edi],al
  405684:	xchg   ebx,eax
  405685:	js     0x405611
  405687:	cld    
  405688:	xchg   esp,eax
  405689:	sbb    edx,DWORD PTR [ebp+edx*1+0x50]
  40568d:	imul   edx,ebp,0xb60ff8d1
  405693:	ins    BYTE PTR es:[edi],dx
  405694:	outs   dx,BYTE PTR ds:[esi]
  405695:	mov    ah,0xdd
  405697:	xchg   ebp,eax
  405698:	stc    
  405699:	and    ebx,ecx
  40569b:	cmp    ebx,DWORD PTR [ecx]
  40569d:	fdivp  st(7),st
  40569f:	dec    esi
  4056a0:	xchg   DWORD PTR gs:[edi],eax
  4056a3:	mov    ds:0x9c8d4e9,al
  4056a8:	rol    DWORD PTR [ebx+0x21],cl
  4056ab:	xor    ecx,DWORD PTR [edi]
  4056ad:	add    DWORD PTR ds:0xd8dffbdf,0xd52070c4
  4056b7:	sbb    eax,0x1bee6601
  4056bc:	dec    ebp
  4056bd:	xchg   ebp,eax
  4056be:	cdq    
  4056bf:	imul   edi,DWORD PTR [edx],0xffffffc8
  4056c2:	lahf   
  4056c3:	cmc    
  4056c4:	sub    ah,BYTE PTR [eax-0x24073875]
  4056ca:	xor    eax,0xc373bb90
  4056cf:	data16 jle 0x4056c6
  4056d2:	xor    bh,BYTE PTR [ecx]
  4056d4:	xor    eax,DWORD PTR [edx+esi*8+0x585dbd72]
  4056db:	push   ss
  4056dc:	inc    ebp
  4056dd:	xchg   ebp,eax
  4056de:	repnz daa 
  4056e0:	adc    DWORD PTR [edx],esp
  4056e2:	stos   DWORD PTR es:[edi],eax
  4056e3:	cli    
  4056e4:	mov    dh,0x17
  4056e6:	bound  ebp,QWORD PTR [ebp-0x20]
  4056e9:	mov    esi,0xb29f21bc
  4056ee:	test   eax,esp
  4056f0:	ja     0x4056ad
  4056f2:	mov    edx,DWORD PTR [ecx]
  4056f4:	adc    al,BYTE PTR [edi+0x72]
  4056f7:	(bad)  
  4056f8:	jmp    0xf2ee:0x499f30c5
  4056ff:	add    DWORD PTR [ebp+0x35062192],0x51a8cd86
  405709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570a:	inc    ecx
  40570b:	int3   
  40570c:	popf   
  40570d:	ret    0xf4fe
  405710:	pop    eax
  405711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405712:	cs push ds
  405714:	pop    DWORD PTR [edx+0x29]
  405717:	cwde   
  405718:	bound  edx,QWORD PTR [eax-0x21]
  40571b:	add    al,BYTE PTR [eax+0x50d554b6]
  405721:	cwde   
  405722:	aam    0xff
  405724:	push   es
  405725:	jp     0x4056ad
  405727:	fld    TBYTE PTR [eax+eax*2+0x64e61fdf]
  40572e:	pop    es
  40572f:	icebp  
  405730:	or     BYTE PTR [ebp+0x7d7d8a4b],ah
  405736:	or     BYTE PTR fs:[edi+0x4],cl
  40573a:	mov    esp,DWORD PTR [edx-0x6a]
  40573d:	fsubr  QWORD PTR [ebp-0x52afacad]
  405743:	and    eax,0xebbead71
  405748:	pop    ecx
  405749:	and    ebp,esp
  40574b:	nop
  40574c:	push   cs
  40574d:	pop    esi
  40574e:	ins    DWORD PTR es:[edi],dx
  40574f:	jns    0x40570d
  405751:	idiv   BYTE PTR [edi+edi*8]
  405754:	(bad)  
  405755:	fdiv   QWORD PTR [edx+0x7498114f]
  40575b:	data16 inc dl
  40575e:	sahf   
  40575f:	call   0xbc2dd8f1
  405764:	cmc    
  405765:	ret    
  405766:	out    dx,al
  405767:	iret   
  405768:	inc    edi
  405769:	mov    eax,DWORD PTR [eax]
  40576b:	ins    BYTE PTR es:[edi],dx
  40576c:	xchg   BYTE PTR [ecx+0x67],bh
  40576f:	push   eax
  405770:	and    ah,BYTE PTR [ebx]
  405772:	loop   0x40577f
  405774:	lea    edx,[edi-0x3b]
  405777:	sbb    edi,DWORD PTR [ebx-0x758a7bca]
  40577d:	aaa    
  40577e:	das    
  40577f:	mov    dh,0x5e
  405781:	xor    al,dl
  405783:	or     BYTE PTR [esi],cl
  405785:	xor    DWORD PTR [edx-0x4e],esp
  405788:	xchg   edi,eax
  405789:	or     al,0xf8
  40578b:	dec    ebp
  40578c:	dec    edi
  40578d:	rcl    BYTE PTR [edx],cl
  40578f:	loop   0x405714
  405791:	or     cl,al
  405793:	enter  0xb310,0xa5
  405797:	pop    es
  405798:	xlat   BYTE PTR ds:[ebx]
  405799:	ins    DWORD PTR es:[edi],dx
  40579a:	test   DWORD PTR [ebp+0x4b226aba],edi
  4057a0:	sbb    ch,bh
  4057a2:	pop    es
  4057a3:	aas    
  4057a4:	pop    ebx
  4057a5:	sub    al,0x9b
  4057a7:	imul   esp,edx,0x59cfa802
  4057ad:	je     0x405799
  4057af:	fcomp  DWORD PTR [ebx]
  4057b1:	lods   eax,DWORD PTR ds:[esi]
  4057b2:	or     BYTE PTR [edi+0x4f315ca5],bl
  4057b8:	je     0x4057a3
  4057ba:	arpl   WORD PTR [ecx+0x37d82207],cx
  4057c0:	sbb    ebx,edi
  4057c2:	cwde   
  4057c3:	fcmove st,st(1)
  4057c5:	mov    ch,0xe
  4057c7:	addr16 cld 
  4057c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ca:	cld    
  4057cb:	sub    bl,BYTE PTR [edi+0x0]
  4057ce:	push   edx
  4057cf:	add    BYTE PTR [edi+0x54a928fa],dl
  4057d5:	inc    eax
  4057d6:	hlt    
  4057d7:	sub    dl,BYTE PTR [ecx-0x3a]
  4057da:	cld    
  4057db:	(bad)  
  4057dc:	mov    edx,0x7486b4d
  4057e1:	dec    ebx
  4057e2:	jmp    0xe85d:0xe76cf0c1
  4057e9:	xchg   esi,eax
  4057ea:	xor    al,dh
  4057ec:	rcr    DWORD PTR [ebp+0x7a],0x3b
  4057f0:	sub    al,0x86
  4057f2:	arpl   WORD PTR [eax+0x7445473a],ax
  4057f8:	rcl    BYTE PTR [ecx+esi*1-0x4cd018e3],cl
  4057ff:	push   ebx
  405800:	or     DWORD PTR [edi],ebx
  405802:	mov    esp,0xe55dae6d
  405807:	jecxz  0x4057a2
  405809:	add    BYTE PTR [ebp+0x6],ch
  40580c:	xchg   edi,eax
  40580d:	jp     0x405825
  40580f:	push   es
  405810:	pop    esi
  405811:	sahf   
  405812:	enter  0x4a0b,0x65
  405816:	and    DWORD PTR ds:0x184f6823,edi
  40581c:	fimul  WORD PTR [edi+ecx*2-0x1c]
  405820:	and    bh,BYTE PTR [esi-0x7ea70835]
  405826:	mov    ah,0x69
  405828:	add    BYTE PTR [eax-0x4d],cl
  40582b:	leave  
  40582c:	push   eax
  40582d:	xchg   ebx,eax
  40582e:	and    BYTE PTR [edi],ch
  405830:	jge    0x4057b7
  405832:	pop    edi
  405833:	xchg   ebp,eax
  405834:	adc    BYTE PTR [edx*8-0x4c464d14],bh
  40583b:	or     DWORD PTR [edi],0xaac289f9
  405841:	jo     0x40582b
  405843:	xchg   ebp,eax
  405844:	add    eax,0x92e226f7
  405849:	xchg   edi,eax
  40584a:	gs int 0x5a
  40584d:	lods   eax,DWORD PTR ds:[esi]
  40584e:	retf   0x856a
  405851:	xchg   edx,eax
  405852:	in     al,0xf7
  405854:	push   ecx
  405855:	cmp    DWORD PTR [ebx-0x1e],esi
  405858:	jae    0x40587b
  40585a:	out    dx,eax
  40585b:	outs   dx,BYTE PTR ds:[esi]
  40585c:	retf   0x9369
  40585f:	add    al,0x9a
  405861:	add    al,0x86
  405863:	ss out 0xd8,al
  405866:	test   DWORD PTR [ecx-0x20995a0f],0x8bd5f07a
  405870:	push   ebp
  405871:	mov    WORD PTR [edx-0xe],ss
  405874:	xor    bh,0x60
  405877:	fs inc esp
  405879:	xchg   ecx,eax
  40587a:	lea    esi,[ecx-0x200d2232]
  405880:	xor    al,0xb0
  405882:	jle    0x40580f
  405884:	outs   dx,BYTE PTR ds:[esi]
  405885:	sub    eax,DWORD PTR [esi+0x2d]
  405888:	idiv   DWORD PTR [eax-0x6a]
  40588b:	scas   al,BYTE PTR es:[di]
  40588d:	adc    ebp,edx
  40588f:	cmp    esi,ebp
  405891:	mov    ebx,0xb94a4d98
  405896:	addr16 test eax,0xa956af0b
  40589c:	xor    DWORD PTR [ebx-0x3],eax
  40589f:	xchg   bh,al
  4058a1:	fimul  DWORD PTR [eax-0x21b2c5f8]
  4058a7:	ret    
  4058a8:	into   
  4058a9:	fucomp st(2)
  4058ab:	sbb    edi,ecx
  4058ad:	sub    al,0x88
  4058af:	pop    ecx
  4058b0:	nop
  4058b1:	lods   al,BYTE PTR ds:[esi]
  4058b2:	jl     0x405860
  4058b4:	jl     0x405931
  4058b6:	test   BYTE PTR [edx+eax*4+0x5c],dh
  4058ba:	xchg   ecx,eax
  4058bb:	test   BYTE PTR [esi+0x6a],ah
  4058be:	pop    eax
  4058bf:	xadd   BYTE PTR [esi+eiz*1+0x5a],cl
  4058c4:	push   ds
  4058c5:	inc    ebp
  4058c6:	mov    ecx,0xe16b8853
  4058cb:	enter  0x88f8,0x53
  4058cf:	bnd call 0xaef553e7
  4058d5:	and    DWORD PTR [esi-0x27],eax
  4058d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d9:	xor    DWORD PTR [ebp+0x3151e723],esi
  4058df:	push   es
  4058e0:	xor    al,0xbd
  4058e2:	lock or BYTE PTR [edi-0x52],al
  4058e6:	aas    
  4058e7:	push   ebx
  4058e8:	enter  0xf91d,0xad
  4058ec:	(bad)  [eax+0x219993f2]
  4058f2:	xchg   esp,eax
  4058f3:	add    edx,esp
  4058f5:	int3   
  4058f6:	sbb    bh,BYTE PTR [edi]
  4058f8:	jb     0x40594d
  4058fa:	add    DWORD PTR [eax-0x1392a925],edx
  405900:	daa    
  405901:	jnp    0x405971
  405903:	ficom  WORD PTR [ebx+0x4964167f]
  405909:	adc    dl,ch
  40590b:	jmp    0xd464:0xe77a34a6
  405912:	aas    
  405913:	imul   edx,DWORD PTR [eax+0x5b],0x38
  405917:	mov    ds:0x5533a93d,al
  40591c:	xor    eax,0x85fef8f9
  405921:	scas   eax,DWORD PTR es:[edi]
  405922:	cdq    
  405923:	scas   al,BYTE PTR es:[edi]
  405924:	lods   al,BYTE PTR gs:[esi]
  405926:	enter  0x68f8,0xbb
  40592a:	mov    cl,0x71
  40592c:	iret   
  40592d:	jnp    0x4058ea
  40592f:	inc    edx
  405930:	xchg   edx,eax
  405931:	pop    es
  405932:	outs   dx,DWORD PTR ds:[esi]
  405933:	repz mov al,0xf5
  405936:	mov    esi,0x8b7ed14c
  40593b:	mov    ds:0x53cb66e2,al
  405940:	popa   
  405941:	xchg   edx,eax
  405942:	dec    ecx
  405943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405944:	push   eax
  405945:	push   ebx
  405946:	pusha  
  405947:	test   eax,0xf9300d30
  40594c:	popf   
  40594d:	ds iret 
  40594f:	and    al,0x69
  405951:	das    
  405952:	jbe    0x4059ab
  405954:	test   bh,dl
  405956:	jae    0x405997
  405958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405959:	jbe    0x40596e
  40595b:	icebp  
  40595c:	call   0x3336d863
  405961:	add    eax,0x873e4606
  405966:	stos   DWORD PTR es:[edi],eax
  405967:	pop    eax
  405968:	sub    al,0x28
  40596a:	and    DWORD PTR ss:[ebx],0x31c3fc43
  405971:	in     al,dx
  405972:	int    0x64
  405974:	out    0x49,al
  405976:	sub    BYTE PTR [esi+0x29f34191],cl
  40597c:	inc    eax
  40597d:	mov    edx,0x9df8ec9d
  405982:	pop    ss
  405983:	clc    
  405984:	cs dec esi
  405986:	jbe    0x4059f2
  405988:	std    
  405989:	das    
  40598a:	into   
  40598b:	cld    
  40598c:	lahf   
  40598d:	pop    ds
  40598e:	add    BYTE PTR [esi-0x29d3e41f],ch
  405994:	in     eax,0x69
  405996:	mov    ecx,0x4eaea41b
  40599b:	adc    ah,BYTE PTR [eax+edi*1-0x1d]
  40599f:	cmc    
  4059a0:	mov    ebx,0x9a0b18e
  4059a5:	sub    DWORD PTR [eax+0x78b999ac],eax
  4059ab:	xor    al,0x23
  4059ad:	adc    DWORD PTR [ebx+esi*4],0xcdccac45
  4059b4:	out    dx,eax
  4059b5:	xchg   ebp,eax
  4059b6:	aam    0x54
  4059b8:	sub    eax,0xe1ea1cb4
  4059bd:	xchg   edi,eax
  4059be:	iret   
  4059bf:	rol    DWORD PTR [eax-0x5b],cl
  4059c2:	outs   dx,BYTE PTR ds:[esi]
  4059c3:	stc    
  4059c4:	sar    DWORD PTR [edi-0x4972c931],1
  4059ca:	push   es
  4059cb:	jae    0x405985
  4059cd:	lahf   
  4059ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059cf:	jne    0x4059c9
  4059d1:	adc    BYTE PTR [ecx+esi*8-0x7608548f],dl
  4059d8:	outs   dx,DWORD PTR ds:[esi]
  4059d9:	std    
  4059da:	out    dx,eax
  4059db:	enter  0x3f1a,0xe
  4059df:	repz cmp sp,bp
  4059e3:	and    dl,BYTE PTR [esi-0x2d9b82ff]
  4059e9:	jno    0x4059d4
  4059eb:	push   esi
  4059ec:	cwde   
  4059ed:	fild   DWORD PTR [ebp+0x18]
  4059f0:	daa    
  4059f1:	jno    0x4059b1
  4059f3:	inc    ebp
  4059f4:	push   0xb7aed76b
  4059f9:	or     ah,ch
  4059fb:	cs push ebx
  4059fd:	lahf   
  4059fe:	xchg   dl,dh
  405a00:	fisubr DWORD PTR [eax]
  405a02:	lods   eax,DWORD PTR ds:[esi]
  405a03:	repnz push ds
  405a05:	xchg   esi,eax
  405a06:	dec    eax
  405a07:	dec    eax
  405a08:	lods   al,BYTE PTR ds:[esi]
  405a09:	dec    edx
  405a0a:	mov    al,0xc6
  405a0c:	popa   
  405a0d:	and    DWORD PTR [ecx-0x3f5ac5b4],ebp
  405a13:	dec    edi
  405a14:	add    DWORD PTR [esi-0x4e07543b],0x30
  405a1b:	and    eax,DWORD PTR [ebx]
  405a1d:	lods   al,BYTE PTR ds:[esi]
  405a1e:	stos   BYTE PTR es:[edi],al
  405a1f:	test   BYTE PTR [edx+0x3b],dh
  405a22:	rcl    BYTE PTR [edi],1
  405a24:	cmp    eax,0x38bb2ba3
  405a29:	mov    DWORD PTR [esi-0x445c32d2],ebx
  405a2f:	daa    
  405a30:	cmp    dh,BYTE PTR [ecx]
  405a32:	dec    edi
  405a33:	retf   
  405a34:	mov    ecx,0xb43602ab
  405a39:	hlt    
  405a3a:	and    DWORD PTR ds:0x9da8ea17,ecx
  405a40:	mov    ah,0x9b
  405a42:	repz inc edx
  405a44:	mov    es,WORD PTR [ebp-0xd]
  405a47:	push   ss
  405a48:	ret    0xa3db
  405a4b:	(bad)  
  405a4c:	mov    ds,WORD PTR [eax-0x3d062f1c]
  405a52:	push   esp
  405a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a54:	add    BYTE PTR [esi+0x33],0x96
  405a58:	sbb    eax,0x1d98630a
  405a5d:	sar    bh,cl
  405a5f:	paddw  mm2,QWORD PTR [eax+eax*2-0x62af6718]
  405a67:	leave  
  405a68:	xchg   esi,eax
  405a69:	(bad)  
  405a6a:	test   al,0xcf
  405a6c:	mov    DWORD PTR [ecx-0x3481d852],esi
  405a72:	lods   eax,DWORD PTR ds:[esi]
  405a73:	mov    bl,0xc9
  405a75:	sbb    BYTE PTR [ecx],ch
  405a77:	fidivr WORD PTR [esi-0xab7ee6e]
  405a7d:	jns    0x405a4d
  405a7f:	xchg   esp,eax
  405a80:	push   es
  405a81:	fwait
  405a82:	repz repnz inc eax
  405a85:	es stos BYTE PTR es:[edi],al
  405a87:	push   edi
  405a88:	fiadd  WORD PTR [ecx+0x2143b50]
  405a8e:	mov    ?,WORD PTR [ebp-0x20]
  405a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a92:	jmp    0x4484c042
  405a97:	test   al,0x23
  405a99:	xchg   ebx,eax
  405a9a:	pop    esp
  405a9b:	sar    BYTE PTR [ecx+0x9],0xd2
  405a9f:	or     bl,cl
  405aa1:	cwde   
  405aa2:	jl     0x405a83
  405aa4:	mov    ebp,0x140d40c0
  405aa9:	mov    WORD PTR [ebx],cs
  405aab:	punpckhdq mm4,mm7
  405aae:	mov    ?,WORD PTR [ecx]
  405ab0:	imul   edi,DWORD PTR [edx+0x60],0xd287d609
  405ab7:	xchg   esp,eax
  405ab8:	or     al,0x4
  405aba:	out    0x36,al
  405abc:	xor    dh,dl
  405abe:	leave  
  405abf:	shr    BYTE PTR [ecx+0x3ee27890],cl
  405ac5:	adc    al,0x4f
  405ac7:	and    DWORD PTR [eax+edi*8+0x1330941c],ebx
  405ace:	xchg   BYTE PTR [ecx+0x3a],dl
  405ad1:	mov    dl,0xef
  405ad3:	cwde   
  405ad4:	add    DWORD PTR [edx+0x22d69179],ebp
  405ada:	or     ch,ch
  405adc:	jb     0x405abe
  405ade:	popa   
  405adf:	out    dx,al
  405ae0:	push   edx
  405ae1:	dec    esp
  405ae2:	lods   al,BYTE PTR ds:[esi]
  405ae3:	scas   al,BYTE PTR es:[edi]
  405ae4:	dec    ebp
  405ae5:	jne    0x405ab7
  405ae7:	jmp    0x818a:0x8624b88
  405aee:	add    cl,dh
  405af0:	mov    al,0xf7
  405af2:	xadd   bl,bl
  405af5:	mov    ecx,0xf83e7c47
  405afa:	inc    ecx
  405afb:	pop    eax
  405afc:	mov    dh,0x97
  405afe:	push   cs
  405aff:	or     DWORD PTR [edx+0x6e],0x80297a89
  405b06:	outs   dx,DWORD PTR ds:[esi]
  405b07:	xchg   esi,eax
  405b08:	and    BYTE PTR [edi-0x37],bl
  405b0b:	stos   DWORD PTR es:[edi],eax
  405b0c:	sub    BYTE PTR ds:[ecx+esi*1],al
  405b10:	sub    eax,0xda2c2d4d
  405b15:	je     0x405b6b
  405b17:	xor    eax,0xdf385ad2
  405b1c:	jp     0x405b08
  405b1e:	(bad)  
  405b1f:	pop    edx
  405b20:	shl    BYTE PTR [ecx-0xa],cl
  405b23:	jmp    0xedcb445a
  405b28:	sub    dh,ah
  405b2a:	fbstp  TBYTE PTR [esi]
  405b2c:	fwait
  405b2d:	pop    ds
  405b2e:	aad    0x46
  405b30:	sub    eax,0x3aae4f63
  405b35:	stos   BYTE PTR es:[edi],al
  405b36:	cmp    eax,0x81f04d8b
  405b3b:	sub    eax,0x42a266
  405b40:	loop   0x405ae4
  405b42:	inc    edx
  405b43:	add    BYTE PTR [ebx],dh
  405b45:	mov    BYTE PTR [ecx+0x42a2ea05],0x0
  405b4c:	cmp    BYTE PTR [ecx],al
  405b4e:	add    BYTE PTR [eax],al
  405b50:	xor    ecx,esi
  405b52:	lea    ecx,[eax+ecx*1+0x64e5e2]
  405b59:	and    DWORD PTR ds:0x42a26a,0x0
  405b63:	xor    eax,eax
  405b65:	or     eax,DWORD PTR ds:0x42a26a
  405b6b:	inc    eax
  405b6c:	mov    ds:0x42a26a,eax
  405b71:	cmp    DWORD PTR ds:0x42a26a,0x7
  405b78:	jge    0x405bae
  405b7e:	jmp    0x405b89
  405b83:	call   DWORD PTR ds:0x42a3da
  405b89:	cmp    DWORD PTR ds:0x42a26a,0x6
  405b90:	jne    0x405ba1
  405b96:	mov    eax,ds:0x42a26a
  405b9b:	inc    eax
  405b9c:	mov    ds:0x42a26a,eax
  405ba1:	cmp    DWORD PTR ds:0x42a26a,0x11
  405ba8:	jb     0x405b63
  405bae:	mov    eax,DWORD PTR [ebp-0xc]
  405bb1:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  405bbb:	xor    edx,edx
  405bbd:	or     DWORD PTR ds:0x42a29e,0x16dc
  405bc7:	div    ecx
  405bc9:	or     eax,ecx
  405bcb:	mov    eax,DWORD PTR [ebp-0x8]
  405bce:	xor    ecx,ecx
  405bd0:	xor    ecx,DWORD PTR ds:0x42a292
  405bd6:	sbb    DWORD PTR ds:0x42a2fa,ecx
  405bdc:	mov    ecx,DWORD PTR [ebp-0x10]
  405bdf:	xor    eax,esi
  405be1:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  405beb:	xor    ecx,esi
  405bed:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  405bf7:	sub    eax,ecx
  405bf9:	cmp    edx,eax
  405bfb:	jmp    0x407f54
  405c00:	mov    esp,0x8265841a
  405c05:	loope  0x405ba5
  405c07:	add    BYTE PTR [eax+0x74],0x97
  405c0b:	es jb  0x405c35
  405c0e:	jbe    0x405bbf
  405c10:	or     edi,DWORD PTR [ecx]
  405c12:	add    DWORD PTR [ebx-0x7c7ca1b9],0x12
  405c19:	mov    ch,0x79
  405c1b:	arpl   WORD PTR [ecx+eiz*1],di
  405c1e:	pop    eax
  405c1f:	push   es
  405c20:	leave  
  405c21:	das    
  405c22:	out    0xa8,al
  405c24:	add    al,0xf9
  405c26:	(bad)  
  405c27:	out    dx,al
  405c28:	mov    DWORD PTR [esi+eax*8-0x78c4b754],ebx
  405c2f:	dec    eax
  405c30:	dec    esp
  405c31:	mov    ss,WORD PTR [ecx+0x4b9e0437]
  405c37:	repz push es
  405c39:	push   ebx
  405c3a:	js     0x405c56
  405c3c:	ins    DWORD PTR es:[edi],dx
  405c3d:	lods   eax,DWORD PTR ds:[esi]
  405c3e:	es push cs
  405c40:	mov    esp,0x51676730
  405c45:	pop    ebx
  405c46:	xchg   ecx,eax
  405c47:	mov    ch,0x68
  405c49:	pop    esi
  405c4a:	stos   BYTE PTR es:[edi],al
  405c4b:	mov    DWORD PTR ds:0x53f9afd9,esi
  405c51:	cdq    
  405c52:	leave  
  405c53:	cld    
  405c54:	imul   eax,DWORD PTR [esi],0xa
  405c57:	repz aam 0x9e
  405c5a:	nop
  405c5b:	test   BYTE PTR [eax],bl
  405c5d:	mov    esp,eax
  405c5f:	pop    esp
  405c60:	pop    ebp
  405c61:	lahf   
  405c62:	add    cl,BYTE PTR [ebx+0x7e]
  405c65:	sar    BYTE PTR [eax+0xa0e9386],1
  405c6b:	mov    dh,BYTE PTR [bp+0x35]
  405c6f:	mov    al,ds:0x5c22abcc
  405c74:	fld    TBYTE PTR [edx+0x5715f48e]
  405c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c7b:	popf   
  405c7c:	push   0x49
  405c7e:	adc    al,0xc6
  405c80:	adc    DWORD PTR [edi+eax*8-0x62504727],ebx
  405c87:	cld    
  405c88:	mov    eax,ds:0x91b786e
  405c8d:	imul   ebp,DWORD PTR [ecx-0x1d4dbd54],0x3200e459
  405c97:	std    
  405c98:	jb     0x405cc7
  405c9a:	lods   al,BYTE PTR ds:[esi]
  405c9b:	push   ds
  405c9c:	mul    ch
  405c9e:	push   ds
  405c9f:	int3   
  405ca0:	and    BYTE PTR [edi+0x36580b6c],0x8f
  405ca7:	mov    al,0xe3
  405ca9:	cwde   
  405caa:	in     al,0x34
  405cac:	ret    
  405cad:	mov    WORD PTR [edx-0x144593e0],ds
  405cb3:	in     eax,0x8f
  405cb5:	popa   
  405cb6:	ins    DWORD PTR es:[edi],dx
  405cb7:	pop    ebp
  405cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb9:	lods   al,BYTE PTR ds:[esi]
  405cba:	xchg   esp,eax
  405cbb:	stos   BYTE PTR es:[edi],al
  405cbc:	test   DWORD PTR [ecx+0x23cac0b1],esi
  405cc2:	dec    esi
  405cc3:	adc    al,al
  405cc5:	or     eax,0x6565b2a9
  405cca:	dec    eax
  405ccb:	lock adc eax,0x68e60451
  405cd1:	push   cs
  405cd2:	sbb    ch,BYTE PTR [ebp+0x3b]
  405cd5:	pushf  
  405cd6:	dec    ebp
  405cd7:	popa   
  405cd8:	sub    BYTE PTR [ecx],dl
  405cda:	dec    edi
  405cdb:	sub    ah,BYTE PTR [esi-0x150846df]
  405ce1:	xlat   BYTE PTR ds:[ebx]
  405ce2:	mov    ah,0xf4
  405ce4:	or     DWORD PTR [ecx],edi
  405ce6:	and    BYTE PTR [esi],ah
  405ce8:	pop    esi
  405ce9:	xchg   esi,eax
  405cea:	aam    0xe6
  405cec:	and    eax,0xf9839712
  405cf1:	jle    0x405d70
  405cf3:	add    al,0x9a
  405cf5:	lods   eax,DWORD PTR ds:[esi]
  405cf6:	or     BYTE PTR [ecx],dh
  405cf8:	pushf  
  405cf9:	or     al,BYTE PTR [ebx+0xa]
  405cfc:	mov    ds:0x547b5181,al
  405d01:	loopne 0x405d31
  405d03:	push   esp
  405d04:	ds cli 
  405d06:	mov    BYTE PTR [eax+0x39a0f200],cl
  405d0c:	pop    ebx
  405d0d:	or     esp,edx
  405d0f:	and    DWORD PTR [edx-0xcaaf88e],esp
  405d15:	pushf  
  405d16:	pop    eax
  405d17:	shr    DWORD PTR [eax-0x670661fd],cl
  405d1d:	loope  0x405cd5
  405d1f:	xchg   esi,eax
  405d20:	xchg   DWORD PTR [edx],eax
  405d22:	mul    cl
  405d24:	mov    al,0xab
  405d26:	xchg   ebx,eax
  405d27:	jg     0x405d8c
  405d29:	push   DWORD PTR [eax-0x21]
  405d2c:	jae    0x405d99
  405d2e:	ja     0x405d40
  405d30:	(bad)  
  405d31:	mov    ds,WORD PTR [edi+0x14]
  405d34:	jecxz  0x405d1f
  405d36:	sub    DWORD PTR [eax+0x15253a47],0xffffffba
  405d3d:	jmp    0x405dbe
  405d3f:	add    cl,cl
  405d41:	out    0xb8,al
  405d43:	jge    0x405db5
  405d45:	loop   0x405d55
  405d47:	scas   al,BYTE PTR es:[edi]
  405d48:	inc    esp
  405d49:	pop    es
  405d4a:	pop    esi
  405d4b:	mov    ss,eax
  405d4d:	frndint 
  405d4f:	mov    ds:0x6de5261d,eax
  405d54:	cdq    
  405d55:	push   eax
  405d56:	adc    DWORD PTR [edi+0x5188b0e],edx
  405d5c:	lahf   
  405d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d5e:	dec    edx
  405d5f:	dec    esp
  405d60:	xchg   BYTE PTR [eax-0x21],dl
  405d63:	cmp    BYTE PTR [eax],al
  405d65:	outs   dx,DWORD PTR ds:[esi]
  405d66:	rcl    BYTE PTR [eax],0x4
  405d69:	test   BYTE PTR [ecx-0x4d],bh
  405d6c:	loop   0x405d97
  405d6e:	pop    ss
  405d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d70:	and    esp,DWORD PTR [eax]
  405d72:	and    al,0xd2
  405d74:	scas   al,BYTE PTR es:[edi]
  405d75:	add    DWORD PTR [esi+0x43],esi
  405d78:	test   DWORD PTR [edx],ebx
  405d7a:	jecxz  0x405de0
  405d7c:	mov    al,0xbb
  405d7e:	in     eax,dx
  405d7f:	push   ebp
  405d80:	cmp    eax,0x74a84250
  405d85:	popf   
  405d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d87:	or     ah,BYTE PTR [ebx+edi*4+0x77]
  405d8b:	pop    esi
  405d8c:	push   edi
  405d8d:	adc    al,0x62
  405d8f:	xchg   esi,eax
  405d90:	popa   
  405d91:	pop    esi
  405d92:	xchg   edx,eax
  405d93:	test   al,0xf3
  405d95:	or     al,0xab
  405d97:	gs in  al,dx
  405d99:	xchg   BYTE PTR [edx-0xc],ch
  405d9c:	ss mov bh,al
  405d9f:	push   ebp
  405da0:	push   esi
  405da1:	dec    edi
  405da2:	leave  
  405da3:	lea    ebx,[edx+0x5287acc8]
  405da9:	mov    edi,DWORD PTR [ecx-0x78]
  405dac:	js     0x405dee
  405dae:	fs cli 
  405db0:	pop    eax
  405db1:	scas   eax,DWORD PTR es:[edi]
  405db2:	call   0x492a09b
  405db7:	add    BYTE PTR [eax+0x4a],cl
  405dba:	mov    eax,es:0xb43d6b44
  405dc0:	dec    edi
  405dc1:	jge    0x405d8b
  405dc3:	and    edi,DWORD PTR [edx]
  405dc5:	(bad)  
  405dc6:	dec    edx
  405dc7:	scas   al,BYTE PTR es:[edi]
  405dc8:	repnz outs dx,DWORD PTR ds:[esi]
  405dca:	ret    
  405dcb:	pop    ss
  405dcc:	in     al,0x6c
  405dce:	jge    0x405de5
  405dd0:	(bad)  
  405dd2:	mov    edi,0x4d674cc7
  405dd7:	dec    ecx
  405dd8:	push   ss
  405dd9:	adc    ebx,0x61339cb
  405ddf:	jne    0x405dd6
  405de1:	shl    DWORD PTR [edx-0x2dc30a6a],1
  405de7:	iret   
  405de8:	daa    
  405de9:	sbb    BYTE PTR [ecx],bh
  405deb:	push   ecx
  405dec:	inc    bl
  405dee:	adc    al,0xe9
  405df0:	adc    BYTE PTR [edx+0x5a49642c],bl
  405df6:	rcr    BYTE PTR [edx],0x35
  405df9:	xor    bl,BYTE PTR [ebp-0x27]
  405dfc:	or     al,0xeb
  405dfe:	fidiv  DWORD PTR [eax-0x35]
  405e01:	mov    esp,0x88f137d3
  405e06:	and    ah,BYTE PTR [ebx]
  405e08:	sbb    al,BYTE PTR [eax]
  405e0a:	sti    
  405e0b:	popa   
  405e0c:	pop    edi
  405e0d:	(bad)  
  405e0e:	cwde   
  405e0f:	mov    ds:0x192fb0da,al
  405e14:	lea    ebx,[ecx+eiz*2-0x617fb916]
  405e1b:	inc    esi
  405e1c:	sub    dl,BYTE PTR [ebp*8-0x7290d30d]
  405e23:	lds    ebp,FWORD PTR [esi-0x7e]
  405e26:	stos   DWORD PTR es:[edi],eax
  405e27:	dec    edi
  405e28:	or     ebp,ebp
  405e2a:	lds    ebp,FWORD PTR [ebp-0x546dfda0]
  405e30:	cmp    bl,BYTE PTR [edi+0x30]
  405e33:	ja     0x405e59
  405e35:	test   eax,0xfee805e2
  405e3a:	je     0x405e00
  405e3c:	sbb    ebx,edi
  405e3e:	les    esi,FWORD PTR [ecx-0x32]
  405e41:	mov    esp,0x4adcd32
  405e46:	fnstenv ds:0x8ba83c32
  405e4c:	mov    cl,0x29
  405e4e:	test   BYTE PTR [eax],cl
  405e50:	cmp    BYTE PTR [esi+ebp*8+0x2f09e84d],0x5c
  405e58:	pusha  
  405e59:	in     eax,dx
  405e5a:	mov    ds:0xa02a7061,eax
  405e5f:	lahf   
  405e60:	mov    ds:0xa9a3e8da,eax
  405e65:	inc    eax
  405e66:	jno    0x405ed0
  405e68:	jle    0x405ea6
  405e6a:	adc    dh,BYTE PTR [ecx]
  405e6c:	fmulp  st(2),st
  405e6e:	(bad)  
  405e6f:	cld    
  405e70:	pushf  
  405e71:	loope  0x405e71
  405e73:	push   esi
  405e74:	xor    edi,DWORD PTR [edi-0x64]
  405e77:	das    
  405e78:	mov    ds:0xa31752c8,al
  405e7d:	enter  0xee09,0xd
  405e81:	popf   
  405e82:	mov    ebx,0x37761596
  405e88:	sub    ecx,edx
  405e8a:	mov    ah,BYTE PTR [ecx+0x33b30776]
  405e90:	cmp    DWORD PTR [edi],0x1921538b
  405e96:	inc    ecx
  405e97:	rcr    DWORD PTR [edi-0x6cc80083],cl
  405e9d:	push   es
  405e9e:	and    BYTE PTR [ebp+0x69],cl
  405ea1:	rol    BYTE PTR [esi],cl
  405ea3:	mov    esi,0xf4cfe27f
  405ea8:	adc    eax,0x274969a
  405ead:	xchg   DWORD PTR [ebx+0x1a],eax
  405eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb1:	mov    dl,0x28
  405eb3:	aaa    
  405eb4:	fdivr  DWORD PTR [eax-0x28]
  405eb7:	(bad)  
  405eb8:	cdq    
  405eb9:	dec    esi
  405eba:	or     al,0x33
  405ebc:	cmc    
  405ebd:	xor    eax,0xcb0c8134
  405ec2:	add    DWORD PTR [ebp+0x28e540e6],0x50dff112
  405ecc:	icebp  
  405ecd:	pop    edx
  405ece:	je     0x405e71
  405ed0:	pop    eax
  405ed1:	pusha  
  405ed2:	pop    edx
  405ed3:	push   es
  405ed4:	repz dec esi
  405ed6:	jmp    0x68a5cc02
  405edb:	les    esi,FWORD PTR ds:0xf1fe3c0f
  405ee1:	mov    ds:0x8a9b19e0,al
  405ee6:	(bad)  
  405ee7:	sbb    dl,dl
  405ee9:	sbb    ecx,eax
  405eeb:	sahf   
  405eec:	leave  
  405eed:	jno    0x405e8d
  405eef:	stc    
  405ef0:	fs inc ebp
  405ef2:	mov    ?,esi
  405ef4:	das    
  405ef5:	scas   eax,DWORD PTR es:[edi]
  405ef6:	rcl    BYTE PTR [edx+edx*2+0x2a],0x94
  405efb:	adc    al,0xec
  405efd:	dec    ebx
  405efe:	and    al,0x5a
  405f00:	out    0x41,al
  405f02:	sub    al,0xdc
  405f04:	dec    esi
  405f05:	js     0x405f38
  405f07:	shl    DWORD PTR [ebp+0x2b8cd609],cl
  405f0d:	fdivr  st,st(5)
  405f0f:	jl     0x405ee8
  405f11:	xlat   BYTE PTR ds:[ebx]
  405f12:	or     eax,0x5ce0877f
  405f17:	dec    ebp
  405f18:	popa   
  405f19:	dec    eax
  405f1a:	mov    ds,ebx
  405f1c:	pop    ecx
  405f1d:	fild   QWORD PTR [esi+0x6fb07058]
  405f23:	pop    ebx
  405f24:	mov    al,0x17
  405f26:	sbb    eax,0x1d8f4c52
  405f2b:	dec    ebx
  405f2c:	mov    dh,0x59
  405f2e:	outs   dx,DWORD PTR ds:[esi]
  405f2f:	mov    dh,0xca
  405f31:	xchg   cl,ch
  405f33:	xor    ecx,ebp
  405f35:	sbb    esi,ebp
  405f37:	jae    0x405ef0
  405f39:	add    DWORD PTR [esi+edi*4-0x61],ecx
  405f3d:	or     BYTE PTR [edi+0x1d4df21c],bl
  405f43:	mov    ds:0x91474f0,al
  405f48:	xchg   esi,eax
  405f49:	mov    edx,0x4acac432
  405f4e:	mov    al,ds:0x3e7cc42e
  405f53:	div    DWORD PTR [eax-0x5a]
  405f56:	mov    al,0x9d
  405f58:	shl    BYTE PTR [esi],0x10
  405f5b:	adc    al,0x92
  405f5d:	cmp    ebp,DWORD PTR [eax+0x19]
  405f60:	xchg   esp,eax
  405f61:	rcr    DWORD PTR [edi],cl
  405f63:	(bad)  
  405f64:	pop    ds
  405f65:	add    edx,esi
  405f67:	adc    esi,DWORD PTR [ecx-0x4fa3032]
  405f6d:	and    al,0xfc
  405f6f:	mov    BYTE PTR [ebx+ecx*2],bl
  405f72:	mov    cl,0xd5
  405f74:	or     DWORD PTR [eax+ebx*1-0x60],esi
  405f78:	cdq    
  405f79:	inc    ebp
  405f7a:	mov    bl,0x1d
  405f7c:	in     al,0x1d
  405f7e:	retf   
  405f7f:	aaa    
  405f80:	sub    al,0x2
  405f82:	aad    0x7f
  405f84:	cdq    
  405f85:	adc    ebx,ebp
  405f87:	mov    al,0x71
  405f89:	(bad)  
  405f8a:	cmc    
  405f8b:	pop    esp
  405f8c:	mov    eax,ds:0x68c454f1
  405f91:	popf   
  405f92:	push   es
  405f93:	push   ss
  405f94:	lock sub DWORD PTR [edi-0x11],esi
  405f98:	fcom   st(6)
  405f9a:	mov    eax,?
  405f9c:	inc    dh
  405f9e:	clc    
  405f9f:	popf   
  405fa0:	and    DWORD PTR [esi],ebx
  405fa2:	or     DWORD PTR [ecx-0x62da3bed],esp
  405fa8:	cmp    eax,0xb4fe2f5b
  405fad:	ss iret 
  405faf:	push   ecx
  405fb0:	nop
  405fb1:	test   ebx,0x47ab4ab6
  405fb7:	mov    edi,0xf38ba74b
  405fbc:	mov    edi,edi
  405fbe:	outs   dx,BYTE PTR ds:[esi]
  405fbf:	mov    al,ds:0xbc249800
  405fc4:	test   DWORD PTR [eax-0x3ad8fdb],esi
  405fca:	sbb    al,0xbb
  405fcc:	sub    BYTE PTR [eax-0x34007aa9],cl
  405fd2:	cmp    al,0x3c
  405fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd5:	mov    eax,0x32c6146c
  405fda:	jle    0x405fb7
  405fdc:	cmp    dl,BYTE PTR [esi]
  405fde:	jp     0x405fd9
  405fe0:	cmp    dl,BYTE PTR [esi+ecx*2-0x375f3c03]
  405fe7:	aam    0x1a
  405fe9:	cdq    
  405fea:	pushf  
  405feb:	cmp    cl,BYTE PTR [eax-0x70]
  405fee:	xchg   esi,eax
  405fef:	shl    DWORD PTR [esp+ecx*1-0x3c522015],0x8
  405ff7:	push   edx
  405ff8:	xlat   BYTE PTR ds:[ebx]
  405ff9:	sbb    ecx,DWORD PTR [ebx-0x7e186416]
  405fff:	nop
  406000:	and    dl,BYTE PTR [ebx+ecx*4+0x4beaa916]
  406007:	or     eax,0x10d0fe2e
  40600c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600d:	stos   BYTE PTR es:[edi],al
  40600e:	fidivr DWORD PTR [ecx]
  406010:	ret    
  406011:	mov    ebx,0x24a1f75c
  406016:	jae    0x405fd7
  406018:	jl     0x406017
  40601a:	fs (bad) 
  40601d:	mov    dh,0x37
  40601f:	xchg   ah,dh
  406021:	cs je  0x405fe3
  406024:	mov    BYTE PTR [ecx*2-0x76aafec4],ah
  40602b:	cmp    al,0x6b
  40602d:	xchg   edi,eax
  40602e:	xchg   edx,eax
  40602f:	jb     0x405fbf
  406031:	jecxz  0x405fc0
  406033:	popa   
  406034:	enter  0xf80c,0x5d
  406038:	pop    esp
  406039:	retf   0x3972
  40603c:	dec    edx
  40603d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603e:	jp     0x406079
  406040:	fwait
  406041:	retf   0x8369
  406044:	adc    al,0x79
  406046:	mov    eax,ds:0xc18cc385
  40604b:	test   eax,0x60a43a5d
  406050:	sbb    dl,dl
  406052:	fldcw  WORD PTR [ecx+eiz*8-0x19aac16d]
  406059:	dec    esi
  40605a:	push   0xffffff97
  40605c:	cmp    DWORD PTR [edi-0x74],edi
  40605f:	or     al,BYTE PTR ds:0x2f14e740
  406065:	es clc 
  406067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406068:	and    al,0xc9
  40606a:	stos   BYTE PTR es:[edi],al
  40606b:	fidiv  DWORD PTR [edx-0x1b0b59b4]
  406071:	add    DWORD PTR [ebx],esp
  406073:	pop    ebx
  406074:	pop    es
  406075:	push   ebx
  406076:	jmp    0x40601e
  406078:	mov    bh,0x37
  40607a:	fst    DWORD PTR [edx+0x6c0542d1]
  406080:	mov    dl,0x6
  406082:	xlat   BYTE PTR ds:[ebx]
  406083:	in     eax,0x1
  406085:	std    
  406086:	pop    edi
  406087:	mov    al,0xb
  406089:	ret    
  40608a:	sar    DWORD PTR [edi],1
  40608c:	add    eax,DWORD PTR [edx+0x56e9f179]
  406092:	jno    0x406106
  406094:	stc    
  406095:	xor    cl,dh
  406097:	out    dx,eax
  406098:	mov    fs,WORD PTR [ebp+0x4b4a50c0]
  40609e:	stos   DWORD PTR es:[edi],eax
  40609f:	(bad)  
  4060a0:	inc    BYTE PTR [edi]
  4060a2:	or     ah,dl
  4060a4:	pop    es
  4060a5:	jge    0x40603b
  4060a7:	adc    ecx,DWORD PTR [ebx+ebp*1+0x6d]
  4060ab:	stc    
  4060ac:	adc    dh,dl
  4060ae:	mov    BYTE PTR [esi+0x2b46df64],dh
  4060b4:	rcl    ecx,1
  4060b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b7:	adc    DWORD PTR [esi],0xfffffff3
  4060ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060bb:	and    DWORD PTR ds:0xf1449066,edi
  4060c1:	mov    edx,0xc18967bc
  4060c6:	stc    
  4060c7:	add    al,0xa2
  4060ca:	sub    eax,0x5649f1c
  4060cf:	adc    cl,al
  4060d1:	xor    al,0xe5
  4060d3:	icebp  
  4060d4:	fs (bad) 
  4060d6:	js     0x4060e7
  4060d8:	clc    
  4060d9:	mov    ds:0x5d390d0e,al
  4060de:	mov    bh,0x92
  4060e0:	or     eax,0x139c312d
  4060e5:	jge    0x406088
  4060e7:	out    0xb3,al
  4060e9:	ins    DWORD PTR es:[edi],dx
  4060ea:	movq   QWORD PTR [ebx],mm1
  4060ed:	and    ax,0xfb24
  4060f1:	rcr    ch,1
  4060f3:	mov    WORD PTR [ecx+ebx*4],?
  4060f6:	ins    DWORD PTR es:[di],dx
  4060f8:	mov    ah,BYTE PTR ds:0xda602a7c
  4060fe:	xor    bl,al
  406100:	pushf  
  406101:	rcl    BYTE PTR [ecx-0x52e220ce],cl
  406107:	xor    BYTE PTR [ebx],0x4b
  40610a:	out    0xc6,eax
  40610c:	xchg   esi,eax
  40610d:	and    al,dl
  40610f:	dec    ecx
  406110:	pop    ss
  406111:	loope  0x406182
  406113:	sbb    al,0x5f
  406115:	das    
  406116:	xchg   esp,eax
  406117:	or     eax,0xb78cb451
  40611c:	jge    0x406148
  40611e:	mov    DWORD PTR [edx-0x7a560289],ecx
  406124:	xchg   ecx,eax
  406125:	retf   0x404
  406128:	dec    edi
  406129:	sub    ebp,ebx
  40612b:	mov    al,0x56
  40612d:	(bad)  
  40612f:	ds mov edx,0x64069afb
  406135:	loope  0x406121
  406137:	xor    ecx,edx
  406139:	inc    eax
  40613a:	lods   al,BYTE PTR ds:[esi]
  40613b:	inc    esp
  40613c:	retf   
  40613d:	fdivr  QWORD PTR [ebx+0x4e]
  406140:	mov    WORD PTR [ebp-0x38],cs
  406143:	cmp    ah,dl
  406145:	imul   edx,DWORD PTR [edi-0x22765da9],0x3e1ea2a7
  40614f:	sub    bl,cl
  406151:	js     0x406171
  406153:	add    dl,BYTE PTR [esi-0x13]
  406156:	fimul  DWORD PTR [edi+0xa803314]
  40615c:	mov    al,ds:0xc28e5e0
  406161:	addr16 mov ebp,0xdb9e8abc
  406167:	jbe    0x4061a9
  406169:	mul    DWORD PTR [eax]
  40616b:	xchg   DWORD PTR [ebp+0x3c6be079],esp
  406171:	int3   
  406172:	push   es
  406173:	std    
  406174:	out    0xab,al
  406176:	inc    edi
  406177:	pop    ebx
  406178:	test   esp,esi
  40617a:	sbb    BYTE PTR [ecx],cl
  40617c:	pop    esi
  40617d:	or     DWORD PTR [ecx],ebp
  40617f:	mov    ebp,DWORD PTR [eax-0x3d9e46c4]
  406185:	push   ss
  406186:	dec    edx
  406187:	pop    esp
  406188:	lds    ebx,FWORD PTR [esi-0x4b]
  40618b:	sub    eax,eax
  40618d:	(bad)  
  40618e:	mov    ds:0xbc6ecc98,eax
  406193:	popf   
  406194:	mov    ecx,0xbcf781c
  406199:	lds    eax,FWORD PTR [ebx+0xc810404]
  40619f:	ins    BYTE PTR es:[edi],dx
  4061a0:	add    DWORD PTR [ebp-0x30],ecx
  4061a3:	popf   
  4061a4:	adc    ecx,eax
  4061a6:	jl     0x406190
  4061a8:	addr16 out dx,eax
  4061aa:	sbb    DWORD PTR [ebp-0x571957b1],0x4e486942
  4061b4:	addr16 xor al,0xbe
  4061b7:	int3   
  4061b8:	mov    dl,0xfc
  4061ba:	jp     0x4061e9
  4061bc:	adc    al,0x38
  4061be:	sub    bh,ch
  4061c0:	sub    al,cl
  4061c2:	xor    dl,BYTE PTR [ebx+0x5a]
  4061c5:	pop    esp
  4061c6:	fcomp  DWORD PTR [esp+eax*1+0x3]
  4061ca:	mov    eax,ds:0x7f9afd69
  4061cf:	(bad)  
  4061d0:	stc    
  4061d1:	jmp    0x406246
  4061d3:	nop
  4061d4:	fsub   QWORD PTR [ecx]
  4061d6:	sub    eax,0x8e45544b
  4061db:	pop    eax
  4061dc:	and    edi,DWORD PTR [ecx-0x3b247cbb]
  4061e2:	cmp    ecx,DWORD PTR [esi+0x5d]
  4061e5:	dec    edi
  4061e6:	dec    esi
  4061e7:	stos   BYTE PTR es:[edi],al
  4061e8:	push   0xffffffcc
  4061ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061eb:	sbb    ch,BYTE PTR [eax+0x3c]
  4061ee:	sbb    DWORD PTR [ebp+0x66],esi
  4061f1:	xchg   ecx,eax
  4061f2:	cs mov ah,0x50
  4061f5:	jecxz  0x4061a0
  4061f7:	dec    edx
  4061f8:	pop    DWORD PTR [eax+0x12bfbf1e]
  4061fe:	sub    ch,BYTE PTR [esi+ecx*8]
  406201:	push   ebx
  406202:	mov    esi,DWORD PTR [eax+0x5305bfd1]
  406208:	and    BYTE PTR [ebx+0x45],dl
  40620b:	jmp    0x6a08f57d
  406210:	ds mov edx,0x6dcbf9c6
  406216:	adc    DWORD PTR [eax],edi
  406218:	fcmovnb st,st(7)
  40621a:	xor    BYTE PTR [edi-0x7a],0xf1
  40621e:	sub    esi,DWORD PTR [esi-0x2a]
  406221:	cmp    eax,0x3913c3dd
  406226:	cs jg  0x406253
  406229:	xor    ebp,DWORD PTR [edi-0x23388eb9]
  40622f:	and    al,bl
  406231:	loope  0x4062a8
  406233:	or     BYTE PTR [eax-0x22ec6112],ch
  406239:	add    bh,BYTE PTR [ecx+0x4e]
  40623c:	mov    edi,ecx
  40623e:	xchg   edi,eax
  40623f:	adc    BYTE PTR [esi+0x6a],bh
  406242:	jg     0x406259
  406244:	xchg   BYTE PTR [edx+0x54ff21f5],ch
  40624a:	jle    0x406204
  40624c:	test   eax,0xc68d429b
  406251:	or     eax,0xfe2b2943
  406256:	jo     0x406263
  406258:	mul    eax
  40625a:	xor    eax,0x2e9fc36
  40625f:	test   BYTE PTR [edx],cl
  406261:	popf   
  406262:	imul   ebx,ecx,0xf23f7457
  406268:	loop   0x40624d
  40626a:	inc    ecx
  40626b:	jae    0x406260
  40626d:	or     edi,DWORD PTR [eax-0x49aecf43]
  406273:	mov    BYTE PTR [edi],dl
  406275:	lahf   
  406276:	xchg   ebp,eax
  406277:	in     al,dx
  406278:	repz xlat BYTE PTR ds:[ebx]
  40627a:	push   ds
  40627b:	fsubr  DWORD PTR [ebx+ecx*4]
  40627e:	stos   BYTE PTR es:[edi],al
  40627f:	mov    al,ds:0x1c75cf53
  406284:	in     al,0xb3
  406286:	mov    ds:0xd00866a6,al
  40628b:	ret    
  40628c:	test   ah,ch
  40628e:	jg     0x4062c8
  406290:	sbb    esp,DWORD PTR ds:0xf4ebad2b
  406296:	inc    edi
  406297:	push   edi
  406298:	push   ecx
  406299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40629a:	sub    al,0x22
  40629c:	sbb    dh,BYTE PTR [edx-0x73484078]
  4062a2:	add    eax,esi
  4062a4:	sti    
  4062a5:	das    
  4062a6:	mov    edx,0x578e253c
  4062ab:	add    DWORD PTR [esp+eiz*8],ebp
  4062ae:	xor    DWORD PTR [eax-0x4e],edx
  4062b1:	sbb    eax,0x14283f8
  4062b6:	inc    edi
  4062b7:	or     BYTE PTR [edx-0x6aaf5f13],bl
  4062bd:	imul   ebx,DWORD PTR [eax+0x37],0xe55cb812
  4062c4:	lds    esi,FWORD PTR [esi]
  4062c6:	fidivr WORD PTR [ebp+0x37a2126c]
  4062cc:	outs   dx,DWORD PTR ds:[esi]
  4062cd:	pop    es
  4062ce:	pusha  
  4062cf:	je     0x4062d4
  4062d1:	fld    DWORD PTR [edi+0x2b]
  4062d4:	inc    eax
  4062d5:	aam    0x1
  4062d7:	loope  0x4062b0
  4062d9:	and    edx,DWORD PTR [edx+0x6b]
  4062dc:	jb     0x406290
  4062de:	jne    0x40634b
  4062e0:	xor    bh,0x6a
  4062e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062e4:	cmp    BYTE PTR [eax+0x5b],dh
  4062e7:	stos   BYTE PTR es:[edi],al
  4062e8:	shl    DWORD PTR [edx],cl
  4062ea:	mov    ebp,0xf6f76642
  4062ef:	cmp    esp,edx
  4062f1:	push   edi
  4062f2:	inc    ecx
  4062f3:	loopne 0x406338
  4062f5:	fwait
  4062f6:	je     0x40629a
  4062f8:	mov    bh,0xfa
  4062fa:	into   
  4062fb:	lea    eax,[edx-0x2e]
  4062fe:	pop    ss
  4062ff:	out    dx,al
  406300:	ror    BYTE PTR [ebx+ebp*8+0x78ba0699],1
  406307:	cmp    DWORD PTR [esi+0x2e],edx
  40630a:	lock push ecx
  40630c:	lods   eax,DWORD PTR ds:[esi]
  40630d:	xor    BYTE PTR [edi],ch
  40630f:	xor    esi,DWORD PTR [ebx-0x77]
  406312:	rol    DWORD PTR [ecx],cl
  406314:	stos   BYTE PTR es:[edi],al
  406315:	mov    al,ds:0xa3cdfef1
  40631a:	mov    edx,0xa61e9512
  40631f:	jo     0x4062e9
  406321:	inc    ebp
  406322:	xchg   esp,eax
  406323:	repz loopne 0x406322
  406326:	xchg   esp,eax
  406327:	out    0xf6,eax
  406329:	pop    esp
  40632a:	cmp    BYTE PTR [ebx+edi*8],al
  40632d:	sahf   
  40632e:	mov    ah,0x22
  406330:	out    0x94,eax
  406332:	mov    esi,DWORD PTR [esi+0x2c0f7383]
  406338:	mov    ds:0x4aea3ab3,eax
  40633d:	cmp    eax,esp
  40633f:	fld    TBYTE PTR [edi]
  406341:	cwde   
  406342:	xor    eax,0x1ca87f82
  406347:	fisub  DWORD PTR [edx+edi*8-0x18a8a95a]
  40634e:	(bad)  
  40634f:	fistp  WORD PTR [ebp-0x3f3cc782]
  406355:	sti    
  406356:	pop    fs
  406358:	mov    edx,0x4ee2a039
  40635d:	call   0xa0e6:0x4bc78e04
  406364:	mov    esi,0x567d0cf6
  406369:	sub    ebx,DWORD PTR [ecx+0x2f]
  40636c:	jmp    0x638f:0x38d33e4e
  406373:	xchg   BYTE PTR [edi],bh
  406375:	and    al,0x81
  406377:	jo     0x406322
  406379:	(bad)  
  40637a:	push   ss
  40637b:	ins    DWORD PTR es:[edi],dx
  40637c:	in     al,dx
  40637d:	push   esp
  40637e:	dec    edi
  40637f:	dec    eax
  406380:	out    dx,al
  406381:	aaa    
  406382:	xchg   ecx,eax
  406383:	push   ds
  406384:	in     eax,0xf
  406386:	jnp    0x40639e
  406388:	sbb    BYTE PTR [ebp-0x3b506af8],ch
  40638e:	jp     0x4063ff
  406390:	xor    ebp,DWORD PTR [eax]
  406392:	mov    ebx,esi
  406394:	shr    BYTE PTR [esi],cl
  406396:	mov    eax,ds:0x2b839152
  40639b:	sbb    DWORD PTR [esi],0x8e2cd92c
  4063a1:	push   DWORD PTR ds:0x72a1000a
  4063a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a8:	add    DWORD PTR [ecx-0x33fc1924],esp
  4063ae:	push   ecx
  4063af:	dec    edx
  4063b0:	dec    ebp
  4063b1:	mov    ds:0xfb91d358,al
  4063b6:	dec    esp
  4063b7:	jne    0x406344
  4063b9:	or     ch,BYTE PTR [ebx-0x80]
  4063bc:	or     al,0x84
  4063be:	jge    0x40634a
  4063c0:	jmp    0xd49216a1
  4063c5:	ficom  DWORD PTR [edx-0x8]
  4063c8:	imul   ebx,DWORD PTR [eax-0x60fb6fc7]
  4063cf:	int    0x79
  4063d1:	or     dh,BYTE PTR [ecx-0x26]
  4063d4:	popa   
  4063d5:	mov    eax,0x80edd1f6
  4063da:	aaa    
  4063db:	test   eax,0xdc567d18
  4063e0:	xchg   edi,eax
  4063e1:	inc    esp
  4063e2:	bound  edx,QWORD PTR [ebp+0x5d]
  4063e5:	dec    edx
  4063e6:	in     eax,0xee
  4063e8:	inc    ecx
  4063e9:	sbb    DWORD PTR [edx+0x75],esi
  4063ec:	jg     0x406453
  4063ee:	addr16 call edx
  4063f1:	scas   al,BYTE PTR es:[edi]
  4063f2:	(bad)  
  4063f4:	aaa    
  4063f5:	sub    ebx,0xbe4fb70e
  4063fb:	not    DWORD PTR [eax]
  4063fd:	add    BYTE PTR [ebx+eax*8-0x30386893],bl
  406404:	mov    bl,BYTE PTR [eax]
  406406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406407:	sti    
  406408:	test   BYTE PTR [esi],0xbd
  40640b:	aam    0x41
  40640d:	fwait
  40640e:	imul   ebp,DWORD PTR [ecx-0x15],0x32
  406412:	xor    bl,al
  406414:	std    
  406415:	adc    al,0xb
  406417:	in     eax,dx
  406418:	test   al,0xf0
  40641a:	leave  
  40641b:	adc    dl,dl
  40641d:	and    bl,al
  40641f:	sub    ebp,edi
  406421:	xchg   edx,eax
  406422:	xchg   bl,al
  406424:	add    al,0xc8
  406426:	mov    bl,0x5b
  406428:	inc    ebx
  406429:	int    0xc9
  40642b:	cmp    ebx,edi
  40642d:	scas   eax,DWORD PTR es:[edi]
  40642e:	mov    dh,0x31
  406430:	adc    ecx,DWORD PTR [ecx]
  406432:	sub    eax,0x3ec5d8ba
  406437:	jno    0x40640a
  406439:	adc    BYTE PTR [edi+edi*8],bh
  40643c:	ret    
  40643d:	fidiv  DWORD PTR [ebx-0x72]
  406440:	mov    ebp,0x38ee8f78
  406445:	sahf   
  406446:	scas   eax,DWORD PTR es:[edi]
  406447:	scas   eax,DWORD PTR es:[edi]
  406448:	lea    bp,[edi-0x77]
  40644c:	fsubr  st,st(2)
  40644e:	out    dx,eax
  40644f:	dec    eax
  406450:	call   0x815d62ff
  406455:	xor    esi,edx
  406457:	adc    al,BYTE PTR [eax+0x3f]
  40645a:	push   0x956e1930
  40645f:	cmp    DWORD PTR ds:0x19fcfeba,ebp
  406465:	hlt    
  406466:	(bad)
  40646a:	xor    esi,ebp
  40646c:	sub    bh,0xa3
  40646f:	pusha  
  406470:	cwde   
  406471:	test   BYTE PTR [edx-0x19],0x85
  406475:	mov    edi,0x549247f5
  40647a:	xlat   BYTE PTR ds:[ebx]
  40647b:	fistp  DWORD PTR [esi+0x23]
  40647e:	jo     0x406420
  406480:	or     al,0xb0
  406482:	out    dx,al
  406483:	sbb    al,0x80
  406485:	push   esp
  406486:	stos   DWORD PTR es:[edi],eax
  406487:	push   esi
  406488:	outs   dx,DWORD PTR ds:[esi]
  406489:	jns    0x4064d9
  40648b:	icebp  
  40648c:	push   ecx
  40648d:	lea    edi,[ecx+0x431168b4]
  406493:	or     DWORD PTR [ebp+0x224fd3ab],ebx
  406499:	lahf   
  40649a:	addr16 add eax,0xd5eeba6f
  4064a0:	(bad)  
  4064a1:	and    eax,0x9ef506d9
  4064a6:	inc    ecx
  4064a7:	adc    ebx,DWORD PTR [eax+0x1fce40da]
  4064ad:	out    dx,eax
  4064ae:	test   BYTE PTR [edi+0x41],cl
  4064b1:	mov    BYTE PTR ds:0xf0cd9e85,bl
  4064b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b8:	pop    eax
  4064b9:	add    eax,0x54a602c
  4064be:	jp     0x40649b
  4064c0:	push   ds
  4064c1:	stos   DWORD PTR es:[edi],eax
  4064c2:	sub    BYTE PTR [ebp-0x76],0x64
  4064c6:	adc    ebp,DWORD PTR [edx-0x2b3776fb]
  4064cc:	push   esi
  4064cd:	jmp    0x71c3cd8d
  4064d2:	mov    bl,0x72
  4064d4:	dec    edi
  4064d5:	and    ah,BYTE PTR [edi]
  4064d7:	mov    esi,0x802f6eb8
  4064dc:	jae    0x4064dc
  4064de:	fisubr DWORD PTR [eax-0x59ed4f79]
  4064e4:	mov    WORD PTR [edi],?
  4064e6:	pop    esp
  4064e7:	add    ebp,edx
  4064e9:	jle    0x40649e
  4064eb:	(bad)  
  4064ec:	sub    dl,BYTE PTR [esi-0x4c]
  4064ef:	je     0x406545
  4064f1:	pop    ebp
  4064f2:	push   ss
  4064f3:	or     bl,ch
  4064f5:	inc    esi
  4064f6:	dec    ebp
  4064f7:	or     ecx,DWORD PTR [edx]
  4064f9:	mov    al,ds:0x1143ef61
  4064fe:	mov    dl,0x96
  406500:	xchg   edi,eax
  406501:	cmp    al,0xa1
  406503:	icebp  
  406504:	ja     0x40655b
  406506:	or     al,0x29
  406508:	ss xchg ecx,eax
  40650a:	paddb  mm0,QWORD PTR [ebp-0x28]
  40650e:	ret    
  40650f:	pavgb  mm7,QWORD PTR [ebx+ebx*8+0x58]
  406514:	nop
  406515:	jnp    0x4064a2
  406517:	(bad)  
  406518:	cmp    esi,esi
  40651a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651b:	mov    cl,BYTE PTR [eax-0x303fa5f8]
  406521:	rol    DWORD PTR [edx-0x1e],0x44
  406525:	sub    DWORD PTR [ebx],edx
  406527:	sbb    eax,0x93b1f3fa
  40652c:	push   ds
  40652d:	bound  ebp,QWORD PTR [ecx]
  40652f:	inc    ebp
  406530:	test   BYTE PTR [edi+eax*4+0x7030007e],dh
  406537:	mov    cl,0x80
  406539:	lods   eax,DWORD PTR ss:[esi]
  40653b:	mov    DWORD PTR [esi+0x5f],esp
  40653e:	dec    edi
  40653f:	rol    BYTE PTR [ecx],1
  406541:	dec    esp
  406542:	arpl   bp,dx
  406544:	sub    edx,eax
  406546:	push   ss
  406547:	push   ebx
  406548:	cmp    edx,DWORD PTR [ecx-0x19]
  40654b:	loopne 0x4064dc
  40654d:	inc    edi
  40654e:	pushf  
  40654f:	pushf  
  406550:	iret   
  406551:	nop
  406552:	in     al,0xd4
  406554:	mov    ebx,0xa56c3df6
  406559:	retf   
  40655a:	cdq    
  40655b:	mov    dh,0x5
  40655d:	(bad)  
  40655e:	lods   eax,DWORD PTR ds:[esi]
  40655f:	mov    DWORD PTR [ebx+0x6a124b35],ebx
  406565:	xchg   esp,eax
  406566:	idiv   DWORD PTR [ebp+0x5d56d62a]
  40656c:	mov    esi,0x324f9696
  406571:	loope  0x4065c1
  406573:	cmp    eax,0x2343b2ec
  406578:	adc    eax,DWORD PTR [edi-0x788b290d]
  40657e:	(bad)  
  40657f:	xor    bh,bh
  406581:	test   DWORD PTR [eax+0x52],0x494a278c
  406588:	or     BYTE PTR [edi],0xe5
  40658b:	and    DWORD PTR [edi],esp
  40658d:	add    eax,0x53e071c3
  406592:	int3   
  406593:	push   edx
  406594:	(bad)  
  406595:	scas   eax,DWORD PTR es:[edi]
  406596:	add    eax,DWORD PTR [edi-0x76b6ed8f]
  40659c:	std    
  40659d:	stos   DWORD PTR es:[edi],eax
  40659e:	xchg   ebp,eax
  40659f:	rol    ah,1
  4065a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a2:	and    dh,BYTE PTR ds:0x357b00ba
  4065a8:	loopne 0x40661d
  4065aa:	inc    eax
  4065ab:	push   0xffffffef
  4065ad:	mov    ebx,0x85fab5ee
  4065b2:	cmp    BYTE PTR [edi],al
  4065b4:	xor    eax,0x8fd250b
  4065b9:	out    0x8c,eax
  4065bb:	in     al,dx
  4065bc:	lods   eax,DWORD PTR ds:[esi]
  4065bd:	xor    DWORD PTR [esi-0x52],0x1d00c578
  4065c4:	iret   
  4065c5:	adc    al,0x81
  4065c7:	stc    
  4065c8:	data16 js 0x40660e
  4065cb:	les    eax,FWORD PTR [edi-0xc752d8c]
  4065d1:	call   FWORD PTR [edi+0x7e]
  4065d4:	xchg   ecx,eax
  4065d5:	aas    
  4065d6:	push   0x35
  4065d8:	daa    
  4065d9:	sbb    eax,0xb72011b9
  4065de:	push   esp
  4065df:	enter  0xa12c,0x7e
  4065e3:	outs   dx,BYTE PTR ds:[esi]
  4065e4:	scas   eax,DWORD PTR es:[edi]
  4065e5:	sbb    esp,eax
  4065e7:	sahf   
  4065e8:	xor    BYTE PTR [edi],dl
  4065ea:	adc    al,0x86
  4065ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ed:	pop    esp
  4065ee:	(bad)  
  4065ef:	mov    al,0xc9
  4065f1:	in     al,0x3
  4065f3:	mov    ds,edx
  4065f5:	pushf  
  4065f6:	inc    edx
  4065f7:	dec    esp
  4065f8:	xor    eax,0xb7a8e6c2
  4065fd:	fs or  edx,esp
  406600:	rcr    BYTE PTR [eax+0x69f70c77],0xb0
  406607:	(bad)  
  406609:	mov    dl,0xcf
  40660b:	mov    eax,ds:0xfa068762
  406610:	aaa    
  406611:	ja     0x406611
  406613:	push   cs
  406614:	push   edx
  406615:	and    DWORD PTR [esi-0x6a],ecx
  406618:	cmp    al,0xc7
  40661a:	aad    0xef
  40661c:	pop    esi
  40661d:	(bad)  
  40661e:	mov    ecx,0xc312dd02
  406623:	lods   al,BYTE PTR ds:[esi]
  406624:	inc    ecx
  406625:	scas   al,BYTE PTR es:[edi]
  406626:	mov    DWORD PTR [edi+0x56],esi
  406629:	pop    ebx
  40662a:	cmc    
  40662b:	repnz loope 0x406696
  40662e:	ret    
  40662f:	dec    ebx
  406630:	iret   
  406631:	sbb    esi,esp
  406633:	rol    DWORD PTR [eax-0x37a4b744],cl
  406639:	in     al,0xeb
  40663b:	xchg   DWORD PTR [ebx-0x5e2d7989],eax
  406641:	rcr    esi,cl
  406643:	mov    cs,WORD PTR [ebx+ecx*8+0x51]
  406647:	jno    0x4065d5
  406649:	add    BYTE PTR [ebx+0x78],bl
  40664c:	jmp    0xf019b08
  406651:	jl     0x4065da
  406653:	mov    esp,0xffc011af
  406658:	in     al,dx
  406659:	xchg   ecx,eax
  40665a:	sub    ebx,edi
  40665c:	mov    bh,0x57
  40665e:	mov    esp,0x7e5e6e7
  406663:	cmp    DWORD PTR [esi+0x55438a3e],edx
  406669:	mov    dh,0xd0
  40666b:	call   0x7e84c1d2
  406670:	xchg   esp,eax
  406671:	xchg   ecx,ebp
  406673:	push   edx
  406674:	mov    dl,BYTE PTR [esi-0x1]
  406677:	fild   WORD PTR [ebp+0x7f]
  40667a:	cmc    
  40667b:	lahf   
  40667c:	call   0xec3b:0x13d8fb19
  406683:	adc    eax,0x291a1716
  406688:	mov    dh,0xba
  40668a:	int    0xb5
  40668c:	push   ss
  40668d:	leave  
  40668e:	sahf   
  40668f:	shl    BYTE PTR [edx],0xc9
  406692:	mov    edx,0x7cd12fb0
  406697:	cmp    al,0x10
  406699:	add    DWORD PTR [ebp+ebp*4-0x64197314],esi
  4066a0:	je     0x4066f9
  4066a2:	sbb    al,0x1e
  4066a4:	or     edi,DWORD PTR [esi+0x9eaec8]
  4066aa:	cmp    BYTE PTR [ebx-0x76eafa90],dl
  4066b0:	xlat   BYTE PTR ds:[ebx]
  4066b1:	mov    dh,0x3e
  4066b3:	ror    DWORD PTR [esi+0x6d],cl
  4066b6:	mov    ?,WORD PTR [ebx+0x66fd0dc2]
  4066bc:	cmp    edi,ecx
  4066be:	nop
  4066bf:	(bad)  
  4066c0:	(bad)  
  4066c1:	out    dx,al
  4066c2:	(bad)  
  4066c3:	ror    ebx,cl
  4066c5:	mov    edx,0x1b67fa00
  4066ca:	cmp    eax,0xad8091ed
  4066cf:	add    al,0x7a
  4066d1:	fnstcw WORD PTR [ebx]
  4066d3:	jp     0x406674
  4066d5:	xor    BYTE PTR [ebp+0x60],0x8c
  4066d9:	iret   
  4066da:	out    dx,eax
  4066db:	sbb    BYTE PTR [esi+0x51d82691],ch
  4066e1:	test   eax,0xd300c54c
  4066e6:	add    eax,0x987966e0
  4066eb:	mov    esp,0xff92031a
  4066f0:	popf   
  4066f1:	fldcw  WORD PTR [ebx-0x1c]
  4066f4:	mov    edx,0x4257abde
  4066f9:	push   ecx
  4066fa:	or     eax,DWORD PTR [ecx]
  4066fc:	mov    al,ds:0x5fb23c0d
  406701:	rol    cl,1
  406703:	sub    BYTE PTR [ecx+ebx*1+0x1b],0xf3
  406708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406709:	xchg   DWORD PTR [ebx],esi
  40670b:	mov    esi,edi
  40670d:	and    DWORD PTR [esi-0x1c],edi
  406710:	pop    ecx
  406711:	shl    DWORD PTR [ecx],0x42
  406714:	sub    dh,BYTE PTR [edx+esi*1-0x21204fb6]
  40671b:	ds cmp ebp,edi
  40671e:	jp     0x2a8bcfbe
  406724:	pop    esi
  406725:	add    al,0x48
  406727:	or     BYTE PTR [ebp+0x4c],al
  40672a:	mov    esi,0x9faabf71
  40672f:	or     BYTE PTR [esi],bh
  406731:	add    al,0x3b
  406733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406734:	xchg   esi,eax
  406735:	(bad)  
  406737:	mov    dl,0xc7
  406739:	and    BYTE PTR [ecx],ch
  40673b:	add    DWORD PTR [ecx],0x39
  40673e:	imul   edi,DWORD PTR [ebp+0x7ab6e6cc],0xffffffed
  406745:	sbb    dl,BYTE PTR [edi-0x7b]
  406748:	stc    
  406749:	pop    eax
  40674a:	xchg   ebp,eax
  40674b:	xlat   BYTE PTR ds:[ebx]
  40674c:	test   DWORD PTR [ebp+0x69a3b0b3],0xc96054cc
  406756:	scas   al,BYTE PTR es:[edi]
  406757:	inc    esp
  406758:	and    ecx,DWORD PTR ds:0x2919befe
  40675e:	mov    al,ds:0xda5dfd80
  406763:	out    dx,eax
  406764:	add    eax,0x95fee1c1
  406769:	push   ebx
  40676a:	jp     0xf1d1936e
  406770:	mov    esi,0xc0ef3e05
  406775:	pop    es
  406776:	test   BYTE PTR [eax-0x46c9e0c7],bl
  40677c:	mov    ds:0x2f1f5262,al
  406781:	cmp    al,0xf8
  406783:	inc    ebp
  406784:	mov    BYTE PTR [ebx+0x46bf2f00],cl
  40678a:	repz clc 
  40678c:	repnz adc esp,ecx
  40678f:	mov    eax,0x3abc3fd6
  406794:	vpunpckhdq ymm2,ymm6,YMMWORD PTR ds:0xdf279e0
  40679c:	mov    eax,0x5c53a98c
  4067a1:	in     al,dx
  4067a2:	out    dx,eax
  4067a3:	dec    ecx
  4067a4:	xchg   ebp,eax
  4067a5:	fnstenv [esi-0x140c0256]
  4067ab:	xor    al,dh
  4067ad:	(bad)  
  4067ae:	cmp    bl,dl
  4067b0:	add    dl,BYTE PTR [eax-0xe43f5c9]
  4067b6:	mov    edx,0xc4c9e4f1
  4067bb:	add    dl,BYTE PTR [ebx+eiz*4]
  4067be:	in     al,dx
  4067bf:	or     dl,BYTE PTR [ecx-0x4efef063]
  4067c5:	in     al,0x4c
  4067c7:	mov    dl,0xb3
  4067c9:	inc    eax
  4067ca:	nop
  4067cb:	outs   dx,BYTE PTR ds:[esi]
  4067cc:	mov    eax,0x4c54a14
  4067d1:	clc    
  4067d2:	xchg   BYTE PTR [ebp-0x599cd473],al
  4067d8:	stos   BYTE PTR es:[edi],al
  4067d9:	xchg   BYTE PTR [edx],al
  4067db:	xor    esi,ebx
  4067dd:	add    edi,DWORD PTR [ebx-0x250629de]
  4067e3:	mov    al,ds:0x1f1ce6a8
  4067e8:	(bad)  
  4067e9:	jmp    FWORD PTR [edx]
  4067eb:	inc    ecx
  4067ec:	jmp    0x406804
  4067ee:	ins    BYTE PTR es:[edi],dx
  4067ef:	mov    esp,0x61904071
  4067f4:	out    dx,eax
  4067f5:	xor    ch,BYTE PTR [ebx-0x4f]
  4067f8:	pop    ebp
  4067f9:	push   0x5e262adf
  4067fe:	mov    edx,DWORD PTR ds:0xa6a75e96
  406804:	lds    edi,FWORD PTR [esp+edi*1]
  406807:	xchg   DWORD PTR [edi-0x2059e982],ecx
  40680d:	(bad)  
  40680e:	bound  ecx,QWORD PTR [ebp+0x7e]
  406811:	scas   eax,DWORD PTR es:[edi]
  406812:	pushw  cs
  406814:	sub    esp,DWORD PTR [ebx-0x9]
  406817:	mov    edi,0x514df6ed
  40681c:	mov    cl,0x5f
  40681e:	imul   edi,eax,0x7bdc0d41
  406824:	or     BYTE PTR [edi+0x74],0xd4
  406828:	loop   0x4067c5
  40682a:	xor    DWORD PTR [edx+0x49],0xed310e78
  406831:	pop    es
  406832:	pop    DWORD PTR [eax-0x22]
  406835:	loop   0x406847
  406837:	test   ebp,esi
  406839:	and    eax,0x21cdebf5
  40683e:	sbb    ah,BYTE PTR [ecx-0x4b]
  406841:	call   0x3484:0x16ac3a49
  406848:	mov    ebp,0x30fde3d
  40684d:	sbb    BYTE PTR [ecx-0x5ae14c38],0xc7
  406854:	xchg   edx,eax
  406855:	push   cs
  406856:	dec    esi
  406857:	hlt    
  406858:	mov    bl,al
  40685a:	popf   
  40685b:	fdiv   QWORD PTR [eax+eax*1-0x58]
  40685f:	test   BYTE PTR [edi-0x27],bl
  406862:	adc    eax,DWORD PTR [ebx]
  406864:	mov    esi,DWORD PTR [edx]
  406866:	sti    
  406867:	and    eax,0xbe7dec1c
  40686c:	jns    0x406879
  40686e:	jmp    0xb09a:0x9ce61573
  406875:	pop    ebp
  406876:	fimul  DWORD PTR [esi+0x45]
  406879:	mov    fs,WORD PTR [esi+0x10821a77]
  40687f:	push   ss
  406880:	rcl    DWORD PTR [ecx+0x13e5e023],cl
  406886:	lea    esi,[esi]
  406888:	push   esp
  406889:	add    al,0x7
  40688b:	jl     0x406906
  40688d:	push   es
  40688e:	mov    eax,0x3fc44f7b
  406893:	or     edx,DWORD PTR [edi+0x5c25e399]
  406899:	adc    dh,ch
  40689b:	popf   
  40689c:	jns    0x406907
  40689e:	cli    
  40689f:	mov    edi,0xe81c3a11
  4068a4:	sub    ebp,esi
  4068a6:	jno    0x4068bd
  4068a8:	mov    WORD PTR [edx-0x7c51080d],es
  4068ae:	and    ebp,ecx
  4068b0:	mov    al,0x4f
  4068b2:	jmp    0x4068fa
  4068b4:	cmp    eax,0x4768bf35
  4068b9:	push   edx
  4068ba:	loop   0x4068fb
  4068bc:	lods   al,BYTE PTR ds:[esi]
  4068bd:	shl    DWORD PTR [edi+0x56],cl
  4068c0:	retf   0x2a6
  4068c3:	pop    edi
  4068c4:	and    eax,0xd6dcbc1
  4068c9:	add    eax,0x6cb4f074
  4068ce:	scas   eax,DWORD PTR es:[edi]
  4068cf:	or     al,0xe4
  4068d1:	dec    esi
  4068d2:	adc    dh,BYTE PTR [eax+0x421901ac]
  4068d8:	and    edi,DWORD PTR ds:0x22dde7ce
  4068de:	jg     0x4068c4
  4068e0:	sub    dl,BYTE PTR [edi]
  4068e2:	lock fild QWORD PTR ds:0x4cc02e88
  4068e9:	lahf   
  4068ea:	ins    BYTE PTR es:[edi],dx
  4068eb:	xlat   BYTE PTR ds:[ebx]
  4068ec:	ret    
  4068ed:	or     bh,BYTE PTR [eax-0x146878e8]
  4068f3:	inc    eax
  4068f4:	or     al,0x9b
  4068f6:	imul   edx,esp,0x91be6d04
  4068fc:	ror    DWORD PTR [esi],1
  4068fe:	mov    ch,BYTE PTR [edi]
  406900:	add    ebp,esi
  406902:	add    bh,BYTE PTR [edi+0x9]
  406905:	xchg   DWORD PTR [esi],edx
  406907:	adc    al,0xd1
  406909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690a:	sub    dl,BYTE PTR [edi-0x3f]
  40690d:	xchg   DWORD PTR [ebx-0x6f90506d],ecx
  406913:	outs   dx,BYTE PTR ds:[esi]
  406914:	ja     0x40696f
  406916:	enter  0xef05,0xd5
  40691a:	(bad)
  40691f:	mov    esi,ds
  406921:	outs   dx,BYTE PTR ds:[esi]
  406922:	add    dh,BYTE PTR [ebx]
  406924:	mov    ebx,0xb7cda7da
  406929:	pusha  
  40692a:	mov    WORD PTR [ecx],?
  40692c:	arpl   WORD PTR [ebx+0x5b],sp
  40692f:	push   0xffffff8c
  406931:	dec    esp
  406932:	add    DWORD PTR [esi+0x0],edi
  406935:	fild   WORD PTR [ebp+0x4bfde532]
  40693b:	sub    eax,0xc2958583
  406940:	mov    ah,0x5f
  406942:	out    0xb5,al
  406944:	mov    esi,0x592d82c1
  406949:	inc    ebp
  40694a:	std    
  40694b:	fild   WORD PTR [eax+0x50]
  40694e:	dec    ebx
  40694f:	rcl    BYTE PTR [edi+ebp*8],1
  406952:	leave  
  406953:	cs gs (bad) 
  406957:	nop
  406958:	pop    ss
  406959:	adc    eax,0x329fb48c
  40695e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40695f:	ss enter 0xc0b6,0x67
  406964:	idiv   DWORD PTR [edx-0x26]
  406967:	out    0x4,eax
  406969:	pop    edi
  40696a:	int3   
  40696b:	xlat   BYTE PTR ds:[ebx]
  40696c:	xchg   edi,eax
  40696d:	pop    edi
  40696e:	dec    ecx
  40696f:	lock fiadd WORD PTR es:[edx+0xb]
  406974:	shl    DWORD PTR [ecx+0x6fa209a3],cl
  40697a:	jae    0x406904
  40697c:	jae    0x406961
  40697e:	dec    ebx
  40697f:	fs jbe 0x40694e
  406982:	call   0xd312:0x51e1207
  406989:	pop    ss
  40698a:	lahf   
  40698b:	mov    eax,0xb3db7f64
  406990:	pusha  
  406991:	out    dx,al
  406992:	cld    
  406993:	mov    esp,DWORD PTR [edi-0x49d896f]
  406999:	mov    ebp,0x58af4ba0
  40699e:	lds    ebp,FWORD PTR [edi+eiz*2-0x5a]
  4069a2:	in     eax,dx
  4069a3:	loop   0x4069c4
  4069a5:	repnz inc ecx
  4069a7:	push   esp
  4069a8:	out    dx,al
  4069a9:	out    0xa0,eax
  4069ab:	adc    DWORD PTR [edx-0x5d7f1556],ecx
  4069b1:	add    DWORD PTR [eax+0x71],edx
  4069b4:	mov    dh,dh
  4069b6:	lfs    ecx,FWORD PTR [esi]
  4069b9:	scas   eax,DWORD PTR es:[edi]
  4069ba:	shl    cl,1
  4069bc:	jmp    0x2d3e1866
  4069c1:	pop    ss
  4069c2:	xchg   edi,eax
  4069c3:	cmp    ebx,edx
  4069c5:	mov    al,ds:0x6b3abd54
  4069ca:	cmp    al,0xa0
  4069cc:	inc    eax
  4069cd:	pop    esp
  4069ce:	mov    esp,0x3df82fcb
  4069d3:	dec    ebp
  4069d4:	(bad)  
  4069d6:	add    BYTE PTR [edi+0x2c7dc201],dh
  4069dc:	ret    
  4069dd:	ins    BYTE PTR es:[edi],dx
  4069de:	xor    BYTE PTR [ecx-0x60],ah
  4069e1:	sub    al,0xbd
  4069e3:	fbld   TBYTE PTR [ebp+0x6c296901]
  4069e9:	lahf   
  4069ea:	mov    al,0x56
  4069ec:	fs jecxz 0x40696f
  4069ef:	aam    0xff
  4069f1:	mov    edx,0x65415c73
  4069f6:	mov    bl,0x20
  4069f8:	repz into 
  4069fa:	das    
  4069fb:	mov    esp,0xcb5aba41
  406a00:	and    edi,esi
  406a02:	mov    ds:0x1813f90b,al
  406a07:	add    edx,DWORD PTR [ecx]
  406a09:	inc    ebp
  406a0a:	shl    ecx,cl
  406a0c:	cmp    eax,0x2c21404b
  406a11:	pop    ds
  406a12:	mov    ds,WORD PTR [edx]
  406a14:	nop
  406a15:	push   ss
  406a16:	lods   al,BYTE PTR ds:[esi]
  406a17:	enter  0x2a50,0x96
  406a1b:	cmc    
  406a1c:	mov    WORD PTR [edi+0x50e96d44],fs
  406a22:	pop    eax
  406a23:	lods   al,BYTE PTR ds:[esi]
  406a24:	jae    0x406a87
  406a26:	pop    edx
  406a27:	push   ecx
  406a28:	push   es
  406a29:	push   esi
  406a2a:	in     eax,dx
  406a2b:	(bad)  
  406a2c:	xor    eax,0x82dcf0ea
  406a31:	mov    ebx,0xfe6e93ae
  406a36:	fisubr DWORD PTR [ecx-0x6ab2a397]
  406a3c:	push   ds
  406a3d:	push   edi
  406a3e:	jle    0x4069fe
  406a40:	add    ebx,ebx
  406a42:	nop
  406a43:	cli    
  406a44:	jp     0x406a7e
  406a46:	mov    bh,0x12
  406a48:	int3   
  406a49:	sub    esp,DWORD PTR [edi-0x5529e704]
  406a4f:	mov    gs,WORD PTR [eax+0x6f]
  406a52:	jle    0x406a04
  406a54:	icebp  
  406a55:	(bad)  
  406a56:	pop    ds
  406a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a58:	xchg   DWORD PTR [ecx-0x1],ebp
  406a5b:	jg     0x406a3b
  406a5d:	adc    al,0xb7
  406a5f:	das    
  406a60:	into   
  406a61:	cli    
  406a62:	inc    esi
  406a63:	ins    DWORD PTR es:[edi],dx
  406a64:	jecxz  0x406a5e
  406a66:	inc    ecx
  406a67:	dec    ebp
  406a68:	cmp    eax,0x37c05138
  406a6d:	cmc    
  406a6e:	xchg   esi,eax
  406a6f:	and    BYTE PTR [eax],al
  406a71:	pushf  
  406a72:	sub    eax,0x649e1bcd
  406a77:	fiadd  DWORD PTR ds:0x76af
  406a7c:	cwde   
  406a7d:	ficom  WORD PTR ds:0xd847ed3f
  406a83:	cld    
  406a84:	sahf   
  406a85:	adc    DWORD PTR [ebp+0x1b],ecx
  406a88:	jne    0x406ad7
  406a8a:	jns    0x406a8e
  406a8c:	imul   esi,DWORD PTR [ebx+0x6352b85],0xffffff8c
  406a93:	jmp    0x406a82
  406a95:	div    BYTE PTR [edi+ecx*8]
  406a98:	adc    ebx,DWORD PTR [edx+0x6e]
  406a9b:	adc    ecx,DWORD PTR [ebp-0x37]
  406a9e:	cmp    eax,0xfa1197d6
  406aa3:	cld    
  406aa4:	bound  esp,QWORD PTR [edx-0x1130d692]
  406aaa:	add    eax,0x7e88538b
  406aaf:	and    BYTE PTR [edi+0x757c8d49],dh
  406ab5:	push   ds
  406ab6:	test   al,0xf7
  406ab8:	push   0xffffffc5
  406aba:	dec    eax
  406abb:	mov    DWORD PTR [esi+0x6cd9613c],ebp
  406ac1:	test   al,0x1b
  406ac3:	je     0x406ae7
  406ac5:	scas   eax,DWORD PTR es:[edi]
  406ac6:	adc    cl,BYTE PTR ds:0x12ee071d
  406acc:	outs   dx,DWORD PTR ds:[esi]
  406acd:	rol    DWORD PTR [ebx-0x2530a578],0xdb
  406ad4:	sar    BYTE PTR [ecx],0x12
  406ad7:	push   eax
  406ad8:	mov    DWORD PTR [ecx-0x28],esi
  406adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406adc:	retf   0x1780
  406adf:	scas   ax,WORD PTR es:[edi]
  406ae1:	adc    DWORD PTR [edi+0xf],ebp
  406ae4:	sbb    cl,BYTE PTR [ebx-0x3d]
  406ae7:	sbb    al,0xd5
  406ae9:	std    
  406aea:	mov    edi,DWORD PTR [edx+esi*2+0xd656788]
  406af1:	dec    ebx
  406af2:	data16 mov gs,WORD PTR [edx-0x41]
  406af6:	lods   eax,DWORD PTR ds:[esi]
  406af7:	fcomp  DWORD PTR [eax-0x34318614]
  406afd:	in     eax,dx
  406afe:	cmp    ebp,edx
  406b00:	in     al,0x28
  406b02:	leave  
  406b03:	leave  
  406b04:	sub    eax,0xc7ac1a0b
  406b09:	mov    es,WORD PTR [esi+0x6c]
  406b0c:	and    edi,DWORD PTR [esi+0x60dab542]
  406b12:	jb     0x406b80
  406b14:	pop    ecx
  406b15:	cmc    
  406b16:	cs jno 0x406ab8
  406b19:	sbb    al,0x8b
  406b1c:	outs   dx,DWORD PTR ds:[esi]
  406b1d:	sti    
  406b1e:	sbb    BYTE PTR [edx-0x5fcceac5],0xcd
  406b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b26:	shl    BYTE PTR [ebx-0x4e256e98],1
  406b2c:	daa    
  406b2d:	bound  edx,QWORD PTR [ebx+0x54a4ddd]
  406b33:	add    DWORD PTR [ebx],ebx
  406b35:	and    al,0x3d
  406b37:	mov    ds:0xe7937247,al
  406b3c:	fcom   QWORD PTR ds:0x80c60e40
  406b42:	push   edx
  406b43:	and    eax,0x16cb536e
  406b48:	xchg   esp,eax
  406b49:	add    eax,0xf9bfc4e
  406b4e:	fidivr DWORD PTR [esi-0x30227ae5]
  406b54:	sbb    BYTE PTR [esi+0x27fce82e],ch
  406b5a:	push   eax
  406b5b:	gs imul esp,ebx,0x3d
  406b5f:	je     0x406ae8
  406b61:	add    eax,0x7863ae89
  406b66:	aad    0x10
  406b68:	daa    
  406b69:	or     edx,DWORD PTR [edi-0x6b5185ac]
  406b6f:	cmp    cl,BYTE PTR [edx+0xcd88839]
  406b75:	out    0x71,eax
  406b77:	and    DWORD PTR [esi],ebp
  406b79:	fs xchg ebp,eax
  406b7b:	mov    cs,esp
  406b7d:	sub    ebp,DWORD PTR [eax-0x3a14366]
  406b83:	mov    ebp,fs
  406b85:	sub    ebp,DWORD PTR [eax]
  406b87:	out    dx,eax
  406b88:	rol    BYTE PTR [ecx],0x49
  406b8b:	(bad)  
  406b8e:	retf   0x8201
  406b91:	jns    0x406b43
  406b93:	jbe    0x406bbe
  406b95:	and    BYTE PTR [edx+0x32],bl
  406b98:	mov    esi,0xb526140b
  406b9d:	and    ah,BYTE PTR [ecx+0x5ddd992b]
  406ba3:	cmovae edi,DWORD PTR [esi*1+0x2baa9576]
  406bab:	pop    esp
  406bac:	xor    DWORD PTR [ebp-0xb],esi
  406baf:	xlat   BYTE PTR ds:[ebx]
  406bb0:	(bad)  
  406bb2:	pop    edi
  406bb3:	jle    0x406c21
  406bb5:	aaa    
  406bb6:	out    0xaf,al
  406bb8:	jnp    0x406b55
  406bba:	or     bl,dl
  406bbc:	xor    eax,0x1dece66b
  406bc1:	repnz pop edx
  406bc3:	adc    esp,DWORD PTR [ecx-0xbc373be]
  406bc9:	or     BYTE PTR [ecx-0x77],al
  406bcc:	mov    al,0xda
  406bce:	les    eax,FWORD PTR ds:0xea7ddcac
  406bd4:	out    0xee,eax
  406bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd7:	pop    es
  406bd8:	outs   dx,DWORD PTR ds:[esi]
  406bd9:	dec    ebx
  406bda:	cmp    BYTE PTR [esi+0x53],al
  406bdd:	shr    BYTE PTR [ecx-0x7b],cl
  406be0:	xor    al,0x95
  406be2:	inc    ebx
  406be3:	mov    ebp,0xc27ef25f
  406be8:	jp     0x406c1e
  406bea:	xchg   ecx,eax
  406beb:	bound  esi,QWORD PTR [edx]
  406bed:	outs   dx,BYTE PTR ds:[esi]
  406bee:	mov    cl,0xde
  406bf0:	jl     0x406c2b
  406bf2:	dec    ebx
  406bf3:	cdq    
  406bf4:	test   al,0x11
  406bf6:	hlt    
  406bf7:	rcl    ecx,0xc
  406bfa:	xlat   BYTE PTR ds:[ebx]
  406bfb:	mov    gs,ecx
  406bfd:	add    eax,0x58870106
  406c02:	xchg   ebp,eax
  406c03:	outs   dx,BYTE PTR ds:[esi]
  406c04:	arpl   WORD PTR [edi],bp
  406c06:	sti    
  406c07:	jae    0x406bc5
  406c09:	fisttp QWORD PTR [edi+0xb]
  406c0c:	imul   eax,DWORD PTR [esi-0x2d],0xcb208e6d
  406c13:	outs   dx,DWORD PTR ds:[esi]
  406c14:	retf   
  406c15:	xor    cl,BYTE PTR [eax]
  406c17:	mov    cl,0x28
  406c19:	sbb    cl,dh
  406c1b:	aad    0xf8
  406c1d:	inc    eax
  406c1e:	into   
  406c1f:	mov    dl,0x12
  406c21:	jns    0x406c4c
  406c23:	imul   edi,ecx,0xffffffb7
  406c26:	jl     0x406c78
  406c28:	and    ecx,esp
  406c2a:	and    ebx,DWORD PTR [edi]
  406c2c:	test   eax,0xd1894926
  406c31:	test   BYTE PTR [esi-0x4f],dl
  406c34:	push   eax
  406c35:	mov    ch,0xc4
  406c37:	jecxz  0x406c9f
  406c39:	mov    dl,0xea
  406c3b:	sbb    ah,BYTE PTR [ecx-0x70d7febb]
  406c41:	lahf   
  406c42:	xchg   esi,eax
  406c43:	lock adc cl,BYTE PTR [edx]
  406c46:	outs   dx,DWORD PTR ds:[esi]
  406c47:	in     al,0x6a
  406c49:	xchg   ecx,eax
  406c4a:	jle    0x406cc9
  406c4c:	mov    eax,DWORD PTR [ebp+0x57]
  406c4f:	lods   al,BYTE PTR ds:[esi]
  406c50:	std    
  406c51:	jle    0x406c6f
  406c53:	xchg   ebx,eax
  406c54:	arpl   di,bx
  406c56:	ja     0x406c07
  406c58:	jecxz  0x406c60
  406c5a:	clc    
  406c5b:	mov    al,0xa5
  406c5d:	xor    al,0x20
  406c5f:	mov    ecx,DWORD PTR [eax]
  406c61:	les    ecx,FWORD PTR [ebp-0x6d]
  406c64:	pop    ecx
  406c65:	sbb    esi,DWORD PTR [ebx-0x5f02943d]
  406c6b:	jmp    edi
  406c6d:	jne    0x406cb1
  406c6f:	mov    al,ds:0xfcef952b
  406c74:	outs   dx,BYTE PTR ds:[esi]
  406c75:	test   eax,0x19d62c9f
  406c7a:	lods   al,BYTE PTR ds:[esi]
  406c7b:	idiv   BYTE PTR ds:0x42499a05
  406c81:	add    ah,dh
  406c83:	data16 sbb BYTE PTR [edi+0x2d],bl
  406c87:	nop
  406c88:	int    0xd9
  406c8a:	dec    ebx
  406c8b:	ins    DWORD PTR es:[edi],dx
  406c8c:	jne    0x406cdd
  406c8e:	add    BYTE PTR [eax+0x7af65c5d],dl
  406c94:	mul    esi
  406c96:	es push 0x353b6776
  406c9c:	cmp    eax,0xc300d03c
  406ca1:	inc    ebp
  406ca2:	mov    ecx,0x654d2dbc
  406ca7:	rcr    BYTE PTR [ecx+0x11072b61],cl
  406cad:	pusha  
  406cae:	sahf   
  406caf:	pushf  
  406cb0:	xchg   ebx,eax
  406cb1:	cdq    
  406cb2:	retf   0x64fa
  406cb5:	out    dx,al
  406cb6:	pop    eax
  406cb7:	add    eax,0xc2b51ce
  406cbc:	jne    0x406cb4
  406cbe:	push   0x7b2e0108
  406cc3:	inc    edx
  406cc4:	call   0x13bc7e52
  406cc9:	xchg   esi,eax
  406cca:	ret    0x3d00
  406ccd:	mov    esi,0x55572211
  406cd2:	push   cs
  406cd3:	cwde   
  406cd4:	lods   eax,DWORD PTR ds:[esi]
  406cd5:	and    esi,esp
  406cd7:	lods   eax,DWORD PTR ds:[esi]
  406cd8:	int3   
  406cd9:	jno    0x406cb5
  406cdb:	cmp    BYTE PTR [edi],bh
  406cdd:	cs inc edx
  406cdf:	arpl   WORD PTR [edi-0x6d],bx
  406ce2:	shl    edi,cl
  406ce4:	add    ebx,DWORD PTR [esi+0x16]
  406ce7:	push   esp
  406ce8:	sub    bh,BYTE PTR [edx]
  406cea:	mov    esi,0x1651c97f
  406cef:	adc    ch,BYTE PTR [edx+0x78ea45e4]
  406cf5:	adc    bl,cl
  406cf7:	loopne 0x406c8a
  406cf9:	adc    al,0x8
  406cfb:	mov    ebx,0x9354e9ef
  406d00:	cld    
  406d01:	mov    al,ch
  406d03:	adc    eax,0xcd93380f
  406d08:	in     al,dx
  406d09:	and    ebp,esp
  406d0b:	cmp    eax,0x7b32c3b1
  406d10:	dec    ebx
  406d11:	jb     0x406d83
  406d13:	test   BYTE PTR [esi+0x44],al
  406d16:	push   esi
  406d18:	stos   DWORD PTR es:[edi],eax
  406d19:	and    eax,0x92a36d95
  406d1e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406d20:	out    dx,al
  406d21:	stos   BYTE PTR es:[edi],al
  406d22:	hlt    
  406d23:	jbe    0x406d67
  406d25:	xchg   esi,eax
  406d26:	and    al,0x1a
  406d28:	cli    
  406d29:	stc    
  406d2a:	mov    esi,0x9a17205a
  406d2f:	jp     0x406d10
  406d31:	adc    al,0xbe
  406d33:	mov    ch,0xf3
  406d35:	sub    DWORD PTR [esi-0x427bf34d],ebp
  406d3b:	inc    edx
  406d3c:	lods   eax,DWORD PTR ds:[esi]
  406d3d:	xor    al,0x9b
  406d3f:	ffreep st(1)
  406d41:	or     ax,0xedba
  406d45:	ins    BYTE PTR es:[edi],dx
  406d46:	sahf   
  406d47:	mov    ebp,ecx
  406d49:	mov    ebx,0xeb174ad9
  406d4e:	or     eax,0x2bbf2d35
  406d53:	cdq    
  406d54:	cmp    DWORD PTR [esi+0x4a],0x84e273cc
  406d5b:	mov    eax,0x48ea9bbd
  406d60:	lds    edi,FWORD PTR [edi+esi*8+0x12]
  406d64:	add    bh,BYTE PTR [esi-0x70f5b0b6]
  406d6a:	mov    BYTE PTR [eax+eax*1],0x6e
  406d6e:	in     eax,0x76
  406d70:	jae    0x406d5b
  406d72:	bound  ebp,QWORD PTR [ebx-0x431ff688]
  406d78:	icebp  
  406d79:	sub    ch,BYTE PTR [esi-0x535a8bbc]
  406d7f:	cmp    al,0xe5
  406d81:	mov    al,ds:0x636b9a03
  406d86:	cmp    BYTE PTR [edi+0x7f27cef6],al
  406d8c:	pop    ecx
  406d8d:	aad    0x13
  406d8f:	dec    eax
  406d90:	call   0xdc85:0xd44b6f42
  406d97:	mov    ebx,0x7a49ba79
  406d9c:	sbb    DWORD PTR [ebx],edx
  406d9e:	into   
  406d9f:	sbb    eax,0xbebf5dec
  406da4:	cld    
  406da5:	fcomi  st,st(4)
  406da7:	sbb    eax,ebx
  406da9:	stos   BYTE PTR es:[edi],al
  406daa:	in     eax,dx
  406dab:	ja     0x406d82
  406dad:	inc    edx
  406dae:	fbstp  TBYTE PTR [ecx+0x54b87ab0]
  406db4:	sbb    edi,DWORD PTR [ebp+ebx*8+0x387ab70d]
  406dbb:	retf   
  406dbc:	sahf   
  406dbd:	dec    ebx
  406dbe:	mov    edx,0xe357caad
  406dc3:	mov    ah,0xf0
  406dc5:	xchg   edx,eax
  406dc6:	enter  0x743b,0xdc
  406dca:	or     cl,ch
  406dcc:	arpl   WORD PTR [eax+0x50b4de20],si
  406dd2:	cmp    bh,cl
  406dd4:	(bad)  
  406dd5:	cmp    bh,BYTE PTR [esi+0x1b]
  406dd8:	adc    BYTE PTR [esi+0x7f1db1c4],dh
  406dde:	out    dx,al
  406ddf:	add    DWORD PTR [ebx],esp
  406de1:	outs   dx,BYTE PTR ds:[esi]
  406de2:	pop    ebp
  406de3:	adc    bl,BYTE PTR [ebx]
  406de5:	cmp    eax,0xc4624d3f
  406dea:	fisub  WORD PTR [ecx+0xa]
  406ded:	das    
  406dee:	popa   
  406def:	jns    0x406dd2
  406df1:	mov    bl,0x65
  406df3:	inc    eax
  406df4:	xor    eax,0x6f90d6b8
  406df9:	mov    ebp,0x29d35018
  406dfe:	and    DWORD PTR [eax],ebp
  406e00:	pop    esp
  406e01:	xchg   ebx,eax
  406e02:	(bad)  
  406e03:	cli    
  406e04:	and    BYTE PTR [ebp-0x25],dl
  406e07:	push   ds
  406e08:	bound  eax,QWORD PTR [esp+ebx*4-0x73659767]
  406e0f:	push   ecx
  406e10:	scas   eax,DWORD PTR es:[edi]
  406e11:	rcr    dl,0x9
  406e14:	mov    eax,ds:0xf2d4f391
  406e19:	dec    esp
  406e1a:	mov    al,0xec
  406e1c:	push   es
  406e1d:	mov    al,0x41
  406e1f:	mov    edx,0x780b9df6
  406e24:	push   0x4c
  406e26:	xor    ecx,ebx
  406e28:	ja     0x406e25
  406e2a:	jmp    0xd0d7b3d
  406e2f:	fistp  DWORD PTR [ebp-0x1775fc47]
  406e35:	repz mov esp,0xd5bcc12b
  406e3b:	xchg   ebx,eax
  406e3c:	in     al,dx
  406e3d:	sub    eax,0xfebd1f0
  406e42:	stc    
  406e43:	cdq    
  406e44:	outs   dx,DWORD PTR ds:[esi]
  406e45:	xchg   ebx,eax
  406e46:	jle    0x406e02
  406e48:	lods   eax,DWORD PTR ds:[esi]
  406e49:	mov    eax,0xa50d626c
  406e4e:	fsubr  DWORD PTR [edi]
  406e50:	mov    ebx,DWORD PTR [ebp-0x67]
  406e53:	pop    edi
  406e54:	sbb    eax,0xc600ee47
  406e59:	pop    ebx
  406e5a:	dec    ebx
  406e5b:	inc    edi
  406e5c:	sti    
  406e5d:	adc    BYTE PTR [eax+0x7b],dh
  406e60:	add    DWORD PTR [ebx+ebx*8],edi
  406e63:	cld    
  406e64:	mov    ecx,0xab12ce2f
  406e69:	retf   0xaaa3
  406e6c:	mov    al,0xc3
  406e6e:	dec    esp
  406e6f:	sbb    eax,0xff2a17ee
  406e74:	ret    
  406e75:	adc    al,BYTE PTR [edi-0x2d]
  406e78:	inc    ebx
  406e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e7a:	(bad)  
  406e7b:	shl    WORD PTR [ebp+0x7c],cl
  406e7f:	clc    
  406e80:	xor    esi,DWORD PTR [edi+0x6a]
  406e83:	test   DWORD PTR [ebp-0x275002a1],0x85ae4407
  406e8d:	fwait
  406e8e:	test   al,0xa0
  406e90:	scas   eax,DWORD PTR es:[edi]
  406e91:	inc    edx
  406e92:	sub    al,0xe2
  406e94:	fisub  WORD PTR [eax-0x4eee50]
  406e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9b:	pushf  
  406e9c:	xor    BYTE PTR [esi-0x2b],al
  406e9f:	push   edi
  406ea0:	cwde   
  406ea1:	xchg   ebp,eax
  406ea2:	in     eax,dx
  406ea3:	sub    BYTE PTR [ebp+0x17778995],dl
  406ea9:	cmp    BYTE PTR [ebx],bl
  406eab:	pushf  
  406eac:	adc    al,0x4f
  406eae:	ret    
  406eaf:	push   esi
  406eb0:	ins    BYTE PTR es:[edi],dx
  406eb1:	pop    eax
  406eb2:	out    0xe0,al
  406eb4:	dec    esi
  406eb5:	jge    0x406e64
  406eb7:	mov    BYTE PTR [ecx-0x6632f5a3],ah
  406ebd:	aaa    
  406ebe:	lea    edi,[ebx+0x29279cb2]
  406ec4:	mov    ?,WORD PTR [eax]
  406ec6:	and    edi,esi
  406ec8:	sar    DWORD PTR [ebp+0x2c1c242],1
  406ece:	out    0xa2,eax
  406ed0:	xchg   esp,eax
  406ed1:	fucomp st(6)
  406ed3:	out    dx,eax
  406ed4:	inc    esp
  406ed5:	ret    
  406ed6:	mov    ah,0x48
  406ed8:	rep lods al,BYTE PTR ds:[esi]
  406eda:	and    DWORD PTR [eax],esi
  406edc:	scas   al,BYTE PTR es:[edi]
  406edd:	xor    al,0xce
  406edf:	xchg   ebx,eax
  406ee0:	aaa    
  406ee1:	ficom  WORD PTR [edx+0x2b9a4438]
  406ee7:	jo     0x406ea0
  406ee9:	inc    ecx
  406eea:	fisttp WORD PTR [ebx+0x658843b8]
  406ef0:	jmp    0x406e76
  406ef2:	mov    dl,0xd8
  406ef4:	popf   
  406ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef6:	into   
  406ef7:	ins    DWORD PTR es:[edi],dx
  406ef8:	push   esp
  406ef9:	loop   0x406efe
  406efb:	rcl    bh,1
  406efd:	popf   
  406efe:	aaa    
  406eff:	jae    0x406f36
  406f01:	test   BYTE PTR [ecx+0x38],cl
  406f04:	sbb    DWORD PTR [edi+eax*4+0x29],edi
  406f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f09:	es mov al,dh
  406f0c:	pop    ds
  406f0d:	pop    eax
  406f0e:	mov    ds:0x9aee700d,eax
  406f13:	sbb    bh,al
  406f15:	xchg   esp,eax
  406f16:	pop    esi
  406f17:	adc    DWORD PTR [edx],edi
  406f19:	fld    st(7)
  406f1b:	loope  0x406f01
  406f1d:	test   DWORD PTR [ebx-0x66bf048b],esi
  406f23:	push   ecx
  406f24:	dec    esi
  406f25:	jae    0x406f84
  406f27:	rcl    DWORD PTR [eax],cl
  406f29:	or     DWORD PTR [ecx+0x6374c3e3],edi
  406f2f:	ja     0x406ec0
  406f31:	xchg   ebx,eax
  406f32:	fst    QWORD PTR [edx+esi*1-0x3327ef09]
  406f39:	idiv   BYTE PTR [ebx+0x58]
  406f3c:	in     eax,0xf6
  406f3e:	gs sti 
  406f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f41:	push   0xaf6c42d
  406f46:	lds    eax,FWORD PTR [ebp+0x7a]
  406f49:	add    dh,ah
  406f4b:	jae    0x406f8f
  406f4d:	(bad)  
  406f4e:	jp     0x406f52
  406f50:	loopne 0x406f82
  406f52:	in     eax,dx
  406f53:	inc    esi
  406f54:	and    edx,DWORD PTR [edx+0x41c54449]
  406f5a:	pop    ecx
  406f5b:	cmp    al,0xa2
  406f5d:	mov    ah,0x3d
  406f5f:	mul    eax
  406f61:	mov    ecx,0xb83c23d0
  406f66:	sub    al,0x3f
  406f68:	sub    BYTE PTR ds:0xb469f056,0xa
  406f6f:	cmc    
  406f70:	and    ecx,eax
  406f72:	mov    ebx,0xd495afd1
  406f77:	pushf  
  406f78:	or     eax,0x3aa315d3
  406f7d:	out    0x39,al
  406f7f:	fst    DWORD PTR [eax+0x43]
  406f82:	sbb    eax,0x2ba7e3cf
  406f87:	jmp    0xa610b776
  406f8c:	or     ebp,DWORD PTR [ecx+0x21]
  406f8f:	push   eax
  406f90:	xchg   ecx,eax
  406f91:	mov    ch,0x7
  406f93:	icebp  
  406f94:	inc    ebp
  406f95:	or     eax,0xd35b795b
  406f9a:	cmp    eax,0x86d26cbf
  406f9f:	adc    esp,DWORD PTR [esi]
  406fa1:	ds rcr cl,0x16
  406fa5:	mov    eax,ds:0xb24176d3
  406faa:	push   edi
  406fab:	push   ds
  406fac:	xchg   ebp,eax
  406fad:	mov    fs,esp
  406faf:	arpl   ax,bp
  406fb1:	mov    esi,0xc02c6522
  406fb6:	loopne 0x406fc0
  406fb8:	fwait
  406fb9:	ja     0x407036
  406fbb:	or     ecx,0x68ddfc59
  406fc1:	loope  0x40703f
  406fc3:	loopne 0x406f99
  406fc5:	jns    0x406f81
  406fc7:	rcr    BYTE PTR [ebx-0x549f7002],0xd8
  406fce:	jns    0x406f8e
  406fd0:	push   ds
  406fd1:	add    DWORD PTR [edi+0x7f5c809d],esi
  406fd7:	inc    edi
  406fd8:	jl     0x406fec
  406fda:	sahf   
  406fdb:	loop   0x406fd0
  406fdd:	sbb    bl,BYTE PTR [ebp+esi*4-0x4a]
  406fe1:	sbb    al,0x9b
  406fe3:	imul   esi,DWORD PTR [ebp-0x297324d5],0x19
  406fea:	jl     0x406ffd
  406fec:	jecxz  0x407026
  406fee:	or     eax,0xae1b1206
  406ff3:	pop    ds
  406ff4:	push   edx
  406ff5:	sub    dh,BYTE PTR [edx-0x7d]
  406ff8:	nop
  406ff9:	push   es
  406ffa:	imul   esi,DWORD PTR [ecx-0x3896883b],0x35c8a18
  407004:	dec    eax
  407005:	daa    
  407006:	inc    ebx
  407007:	cli    
  407008:	xlat   BYTE PTR ds:[ebx]
  407009:	push   ecx
  40700a:	aas    
  40700b:	inc    eax
  40700c:	imul   esi,DWORD PTR [ebx],0xffffffb1
  40700f:	inc    esp
  407010:	mov    bl,0xf6
  407012:	dec    edi
  407013:	xor    dl,BYTE PTR [eax-0x42]
  407016:	cdq    
  407017:	sahf   
  407018:	test   al,0x6d
  40701a:	loopne 0x407071
  40701c:	cli    
  40701d:	cwde   
  40701e:	fs mov bl,0xb3
  407021:	jno    0x407047
  407023:	aad    0x10
  407025:	test   eax,0x3d7a3cd2
  40702a:	adc    al,0xb9
  40702c:	mov    ah,0x3c
  40702e:	push   ecx
  40702f:	mov    ecx,esi
  407031:	ret    
  407032:	lock xchg DWORD PTR [edi-0x2],ecx
  407036:	repnz mov dl,0x52
  407039:	and    esp,esp
  40703b:	sbb    esi,DWORD PTR ds:0xbf6ca047
  407041:	leave  
  407042:	dec    edx
  407043:	and    edi,ecx
  407045:	adc    DWORD PTR [esi+0x604647e],esi
  40704b:	scas   al,BYTE PTR es:[edi]
  40704c:	inc    edi
  40704d:	leave  
  40704e:	or     DWORD PTR [eax+ecx*1+0x17],ebp
  407052:	fld    QWORD PTR ds:0xb81333d0
  407058:	sub    BYTE PTR [eax+0x3c],0x87
  40705c:	sbb    al,dh
  40705e:	inc    ebp
  40705f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407060:	arpl   WORD PTR [esi-0x5f],sp
  407063:	mov    al,0x9d
  407065:	test   BYTE PTR [edx-0x22],dh
  407068:	out    0xe5,al
  40706a:	in     eax,dx
  40706b:	mov    ebx,DWORD PTR ds:0xb9be8285
  407071:	jmp    0x4070a3
  407073:	adc    ecx,ebx
  407075:	push   0x1af19b6f
  40707a:	pushf  
  40707b:	mov    dl,0x58
  40707d:	sub    al,0x73
  40707f:	sub    al,0x85
  407081:	add    eax,0xc8745a3b
  407086:	push   0x23
  407088:	mov    ecx,0x68cdf539
  40708d:	dec    ecx
  40708e:	retf   
  40708f:	xor    eax,0x305a1df
  407094:	fimul  DWORD PTR [ebx+0x6e]
  407097:	or     dh,BYTE PTR es:[ebx]
  40709a:	pop    edx
  40709b:	ss sahf 
  40709d:	fst    DWORD PTR [edx+edi*8-0x19]
  4070a1:	push   ecx
  4070a2:	jo     0x40708d
  4070a4:	stos   DWORD PTR es:[edi],eax
  4070a5:	mov    BYTE PTR [ecx],al
  4070a7:	sub    ebx,edx
  4070a9:	mov    ebp,0x57fb446e
  4070ae:	push   ebx
  4070af:	push   esp
  4070b0:	cmp    al,0x3d
  4070b2:	and    dh,BYTE PTR [ebx+ecx*1]
  4070b5:	div    DWORD PTR [edx+0x4f]
  4070b8:	(bad)  
  4070b9:	mov    ecx,0x3488059b
  4070be:	cmp    ah,bh
  4070c0:	cwde   
  4070c1:	out    dx,al
  4070c2:	jecxz  0x40709e
  4070c4:	add    al,0xe0
  4070c6:	ins    BYTE PTR es:[edi],dx
  4070c7:	or     DWORD PTR [edi],ebx
  4070c9:	xor    DWORD PTR [ecx],0xffffffa1
  4070cc:	gs clc 
  4070ce:	adc    ebp,eax
  4070d0:	or     ah,BYTE PTR [esi+0x7a]
  4070d3:	lods   al,BYTE PTR ds:[esi]
  4070d4:	inc    edi
  4070d5:	(bad)  
  4070d6:	mov    ds:0x850bcd0f,al
  4070db:	add    eax,0xebe38ef
  4070e0:	adc    eax,0xdb485f01
  4070e5:	in     eax,0x19
  4070e7:	(bad)  
  4070e8:	aad    0x10
  4070ea:	push   ss
  4070eb:	scas   al,BYTE PTR es:[edi]
  4070ec:	call   0x82304802
  4070f1:	sbb    BYTE PTR [ebx+ebp*2-0x9],0x4e
  4070f6:	or     dl,BYTE PTR [edx-0x46629904]
  4070fc:	or     esi,DWORD PTR [ebx+0x1aa0ea68]
  407102:	pop    ecx
  407103:	jl     0x407153
  407105:	jge    0x407122
  407107:	bound  esp,QWORD PTR [ebx+0x2]
  40710a:	mov    ebp,0x96437c8e
  40710f:	sbb    al,0x2c
  407111:	jns    0x40711b
  407113:	nop
  407114:	popa   
  407115:	test   DWORD PTR [ebx],edx
  407117:	cmp    al,0x19
  407119:	and    dl,dl
  40711b:	pop    ebp
  40711c:	outs   dx,BYTE PTR ds:[esi]
  40711d:	xchg   ebp,eax
  40711e:	jmp    0x3edd:0x132a4249
  407125:	pop    ecx
  407127:	(bad)  
  407128:	mov    cs,edi
  40712a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40712b:	or     al,0x46
  40712d:	xor    al,bh
  40712f:	sub    eax,0x5627fc43
  407134:	and    eax,0x9c6671ad
  407139:	xlat   BYTE PTR ds:[ebx]
  40713a:	sub    BYTE PTR [esi-0x3b0c1fee],dh
  407140:	mov    dh,0xbf
  407142:	and    eax,0x6bc27a79
  407147:	jno    0x407164
  407149:	mov    eax,0x9ede4d67
  40714e:	mov    ah,0x9c
  407150:	iret   
  407151:	mov    ebp,0x58176d10
  407156:	jmp    0x92c17fa2
  40715b:	mov    cl,0x95
  40715d:	jecxz  0x407192
  40715f:	jns    0x40715f
  407161:	in     al,0x95
  407163:	mov    eax,ds:0xf1c3c638
  407168:	jl     0x4070f6
  40716a:	inc    eax
  40716b:	aam    0x4a
  40716d:	loopne 0x407183
  40716f:	mov    ds:0x41d72c85,al
  407174:	push   0x48
  407176:	sub    eax,0xfd1e1ab6
  40717b:	mov    ds:0x13104430,al
  407180:	lock aad 0x1c
  407183:	xchg   edi,eax
  407184:	mov    ch,0x5e
  407186:	in     eax,0x9d
  407188:	aam    0xe8
  40718a:	aad    0x49
  40718c:	retf   
  40718d:	pop    edx
  40718e:	cs mov esp,0xa7cb7304
  407194:	xchg   ebp,eax
  407195:	test   eax,0x95504e47
  40719a:	add    esi,DWORD PTR [eax-0x2873f9ae]
  4071a0:	dec    edx
  4071a1:	aad    0x57
  4071a3:	cmc    
  4071a4:	xchg   ebx,eax
  4071a5:	stos   DWORD PTR es:[edi],eax
  4071a6:	cmp    DWORD PTR [edx],edx
  4071a8:	mov    eax,DWORD PTR [esi-0x5d]
  4071ab:	or     eax,0xbb46cf91
  4071b0:	or     BYTE PTR [edi],cl
  4071b2:	das    
  4071b3:	int    0xbf
  4071b5:	push   ecx
  4071b6:	lahf   
  4071b7:	and    al,0xbf
  4071b9:	add    ecx,DWORD PTR [edx]
  4071bb:	aam    0x3b
  4071bd:	jo     0x40723a
  4071bf:	and    eax,0x208d182b
  4071c4:	mov    al,ds:0x12c28e9b
  4071c9:	or     eax,0xb9e139e3
  4071ce:	shl    BYTE PTR [esi+0x44a544cf],0xd5
  4071d5:	or     ah,al
  4071d7:	cs ja  0x4071aa
  4071da:	leave  
  4071db:	ret    0xc4c3
  4071de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071df:	or     BYTE PTR [edx],bl
  4071e1:	lods   eax,DWORD PTR ds:[esi]
  4071e2:	stos   DWORD PTR es:[edi],eax
  4071e3:	ret    0xe685
  4071e6:	xchg   DWORD PTR [edx+esi*2],edi
  4071e9:	aam    0x27
  4071eb:	das    
  4071ec:	imul   eax,DWORD PTR [ecx],0x5a91eabc
  4071f2:	inc    ecx
  4071f3:	mov    cl,0xd9
  4071f5:	mov    eax,cs:0xc4f00c79
  4071fb:	sbb    BYTE PTR [esi-0x47],dl
  4071fe:	repnz icebp 
  407200:	adc    eax,0x1b6868ff
  407205:	mov    DWORD PTR [ebp+eax*2-0x23],esp
  407209:	loopne 0x407215
  40720b:	retf   0x2af
  40720e:	jle    0x407197
  407210:	popa   
  407211:	pop    ebx
  407212:	adc    eax,0xb730e2f7
  407217:	xchg   DWORD PTR [edx+esi*8-0x34],esp
  40721b:	retf   0x536a
  40721e:	mov    bh,0x98
  407220:	add    cl,bh
  407222:	xor    al,0x5
  407224:	fcom   QWORD PTR [ecx-0x40e4170e]
  40722a:	sub    BYTE PTR [ebx],ch
  40722c:	jns    0x407207
  40722e:	jle    0x40722b
  407230:	dec    ecx
  407231:	mov    ecx,0xde6090d4
  407236:	adc    eax,0xee5e89ca
  40723b:	cdq    
  40723c:	adc    bh,al
  40723e:	dec    ebp
  40723f:	adc    eax,0x152758f1
  407244:	mov    edx,0x6cfe1b02
  407249:	ins    DWORD PTR es:[edi],dx
  40724a:	fcom   QWORD PTR [edx+0x111f2291]
  407250:	jle    0x40727e
  407252:	mov    esi,0x6a7aaab0
  407257:	enter  0x69aa,0x52
  40725b:	inc    eax
  40725c:	cwde   
  40725d:	inc    ecx
  40725e:	outs   dx,BYTE PTR ds:[esi]
  40725f:	mov    ch,0x44
  407261:	outs   dx,BYTE PTR ds:[esi]
  407262:	push   esi
  407263:	cs push cs
  407265:	add    eax,0x395a7781
  40726a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726b:	mov    esp,0x994ca81b
  407270:	mov    al,ds:0x97477cb9
  407275:	xchg   eax,ebp
  407277:	or     BYTE PTR [ebx+ebp*1+0x72],bh
  40727b:	mov    ds:0xe7e61931,eax
  407280:	xchg   esi,eax
  407281:	xchg   edx,eax
  407282:	push   eax
  407283:	xor    dl,cl
  407285:	sbb    ch,BYTE PTR [ecx+0x38]
  407288:	sub    ebx,ebx
  40728a:	mov    edx,0x566bbc36
  40728f:	mov    esp,0xaa9e81fa
  407294:	(bad)  [esi+ecx*8-0x53df300c]
  40729b:	jl     0x40727b
  40729d:	ins    BYTE PTR es:[edi],dx
  40729e:	inc    ecx
  40729f:	idiv   BYTE PTR [edi+0x3e911c69]
  4072a5:	mov    ds:0x5ba567f7,eax
  4072aa:	cmp    DWORD PTR [ecx+0x52d5e4f2],eax
  4072b0:	inc    ebp
  4072b1:	clc    
  4072b2:	std    
  4072b3:	not    BYTE PTR [ebx]
  4072b5:	jnp    0x40730c
  4072b7:	fistp  QWORD PTR [edi]
  4072b9:	jl     0x40725a
  4072bb:	(bad)  
  4072bc:	sbb    al,0x0
  4072be:	in     eax,dx
  4072bf:	adc    eax,0xed46d20d
  4072c4:	sub    eax,0x8af2acd0
  4072c9:	mov    eax,0xcc82d2ad
  4072ce:	test   eax,0x13f0e4e5
  4072d3:	push   edi
  4072d4:	mov    al,ds:0x1af47513
  4072d9:	mov    ah,0xa1
  4072db:	xor    ebp,edi
  4072dd:	leave  
  4072de:	out    dx,al
  4072df:	(bad)  
  4072e0:	ror    BYTE PTR [edx],0x42
  4072e3:	das    
  4072e4:	mov    edx,0x376f57c2
  4072e9:	pop    ebx
  4072ea:	pop    es
  4072eb:	sub    eax,0x662d314c
  4072f0:	(bad)  
  4072f1:	scas   eax,DWORD PTR es:[edi]
  4072f2:	in     al,dx
  4072f3:	fld    TBYTE PTR [esi-0x1998b25f]
  4072f9:	adc    DWORD PTR [eax],ebx
  4072fb:	fs std 
  4072fd:	fdiv   DWORD PTR [edi+0x3b]
  407300:	and    al,0x10
  407302:	sub    dl,0x68
  407305:	mov    ecx,ecx
  407307:	das    
  407308:	jae    0x40736d
  40730a:	jbe    0x407315
  40730c:	jb     0x407356
  40730e:	add    DWORD PTR [ebp-0x80],edi
  407311:	xor    DWORD PTR [esi+0x9],edx
  407314:	shl    dh,1
  407316:	adc    al,0xf9
  407318:	add    ch,BYTE PTR [esi]
  40731a:	sub    bh,0xb8
  40731d:	or     eax,0xdfff3f95
  407322:	jae    0x4072b3
  407324:	or     eax,0xa7a264e2
  407329:	out    dx,eax
  40732a:	mov    esp,0x5e40c9cb
  40732f:	cmp    al,0xbf
  407331:	xor    al,BYTE PTR [eax+0x35]
  407334:	scas   al,BYTE PTR es:[edi]
  407335:	and    eax,0x22c6966a
  40733a:	stos   DWORD PTR es:[edi],eax
  40733b:	enter  0x7a6f,0x64
  40733f:	push   eax
  407340:	mov    bl,0xf3
  407342:	mov    ebx,0x6b75ce32
  407347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407348:	int    0xb8
  40734a:	inc    esp
  40734b:	cmc    
  40734c:	dec    esi
  40734d:	xchg   ebx,eax
  40734e:	repnz pop ds
  407350:	repz jbe 0x40736b
  407353:	pop    ss
  407354:	adc    ah,BYTE PTR [ebx]
  407356:	xor    bh,cl
  407358:	sti    
  407359:	pextrw eax,mm0,0xe0
  40735d:	mov    eax,0x643e33a2
  407362:	mov    al,0x81
  407364:	inc    edi
  407365:	inc    ebx
  407366:	lea    ebx,[edx-0x6]
  407369:	or     ebx,DWORD PTR [esi]
  40736b:	aad    0x7e
  40736d:	aaa    
  40736e:	into   
  40736f:	shl    DWORD PTR [ebx+ecx*4-0x14ce6a49],0x5f
  407377:	hlt    
  407378:	cmp    BYTE PTR [ebx+0x1cae8745],0x22
  40737f:	imul   eax,DWORD PTR [esi-0x75],0xffffffd8
  407383:	pop    esp
  407384:	cmp    esi,eax
  407386:	dec    edi
  407387:	cmp    edx,esp
  407389:	sbb    eax,0x73ba88b4
  40738e:	cmp    al,0x39
  407390:	mov    edi,0xb2f8c635
  407395:	push   ebp
  407396:	jmp    0xd1af9f53
  40739b:	xor    eax,0x5479c4f1
  4073a0:	in     eax,dx
  4073a1:	ficomp WORD PTR [ebx-0x2c]
  4073a4:	xchg   esp,eax
  4073a5:	sbb    cl,ah
  4073a7:	dec    ecx
  4073a8:	js     0x407391
  4073aa:	mov    ebx,0x91b09af9
  4073af:	cmp    esp,ebx
  4073b1:	jp     0x4073ba
  4073b3:	imul   esi,DWORD PTR ds:0xaf388d40,0xffffffc0
  4073ba:	or     dl,ch
  4073bc:	inc    edx
  4073bd:	pop    ebx
  4073be:	stos   BYTE PTR es:[edi],al
  4073bf:	pop    eax
  4073c0:	inc    edx
  4073c1:	sub    DWORD PTR [eax+edi*4+0x39],edi
  4073c5:	adc    cl,BYTE PTR [ebp+0x7d80a67b]
  4073cb:	(bad)  
  4073cc:	aam    0x16
  4073ce:	or     ebp,DWORD PTR [ebx+0x61119782]
  4073d4:	xchg   ebx,eax
  4073d5:	ds pop ds
  4073d7:	pop    ss
  4073d8:	pop    edi
  4073d9:	mov    esp,0x57290cdf
  4073de:	and    dl,BYTE PTR [edi+0x9af9bd3]
  4073e4:	or     dl,bh
  4073e6:	fisubr DWORD PTR [eax]
  4073e8:	mov    ds,WORD PTR [edx+0x38]
  4073eb:	pop    ebx
  4073ec:	fmul   QWORD PTR [ecx]
  4073ee:	repnz pop edi
  4073f0:	lods   eax,DWORD PTR ds:[esi]
  4073f1:	dec    eax
  4073f2:	jno    0x407413
  4073f4:	pop    ecx
  4073f5:	and    DWORD PTR [edi+0x7b],edx
  4073f8:	call   0x20bbb555
  4073fd:	scas   eax,DWORD PTR es:[edi]
  4073fe:	mov    ch,0x79
  407400:	les    esi,FWORD PTR [ecx]
  407402:	in     eax,dx
  407403:	call   0xcd853416
  407408:	sbb    al,0xe0
  40740a:	adc    BYTE PTR [esi+ebp*1],0x53
  40740e:	and    dh,bh
  407410:	idiv   esp
  407412:	retf   0xe60b
  407415:	call   0x58b08fc
  40741a:	dec    ecx
  40741b:	xchg   ebx,edx
  40741d:	jl     0x407459
  40741f:	sub    al,0xe0
  407421:	(bad)  [ebp-0x1d47f90d]
  407427:	push   cs
  407428:	add    esi,DWORD PTR [edx-0x5f9a3a35]
  40742e:	out    0xc4,al
  407430:	cs (bad) 
  407432:	stc    
  407433:	ins    DWORD PTR es:[edi],dx
  407434:	adc    eax,DWORD PTR [eax]
  407436:	outs   dx,BYTE PTR ds:[esi]
  407437:	and    eax,0x4b0de649
  40743c:	cmc    
  40743d:	(bad)  
  40743e:	out    dx,eax
  40743f:	lahf   
  407440:	call   0x8856744e
  407445:	lds    eax,FWORD PTR [ecx-0x46bd0155]
  40744b:	add    al,0xd4
  40744d:	xlat   BYTE PTR ds:[ebx]
  40744e:	arpl   WORD PTR [ebp+0x6f92ddcf],bx
  407454:	stos   BYTE PTR es:[edi],al
  407455:	push   edx
  407456:	gs pop esp
  407458:	or     bl,BYTE PTR [esp+esi*1+0x4f]
  40745c:	mov    BYTE PTR [eax],bl
  40745e:	ret    0x4a49
  407461:	fdivr  DWORD PTR [edi+0x1b]
  407464:	jmp    0x2999:0x3f7de60d
  40746b:	lahf   
  40746c:	sbb    edx,ebp
  40746e:	cmp    ah,ch
  407470:	push   edx
  407471:	mov    ebx,ss
  407473:	shr    bl,0xbf
  407476:	pop    ebp
  407477:	pusha  
  407478:	xchg   esp,eax
  407479:	xor    DWORD PTR [ebx-0xb],0x49
  40747d:	cld    
  40747e:	adc    ah,dl
  407480:	inc    eax
  407481:	fnstsw WORD PTR [edx+0x76]
  407484:	inc    eax
  407485:	ret    0xbce8
  407488:	mov    ecx,edx
  40748a:	inc    edx
  40748b:	stos   DWORD PTR es:[edi],eax
  40748c:	jle    0x4074e3
  40748e:	cmp    al,0xe3
  407490:	xchg   edi,eax
  407491:	pandn  mm6,QWORD PTR [eax]
  407494:	mov    BYTE PTR ds:0x268d382c,ch
  40749a:	mov    ah,BYTE PTR [ecx]
  40749c:	xor    al,0x5e
  40749e:	popf   
  40749f:	jmp    0xda6a:0xf8451cd1
  4074a6:	mov    ds:0xfc088d26,eax
  4074ab:	sbb    BYTE PTR ss:[edi-0x28],cl
  4074af:	push   eax
  4074b0:	fwait
  4074b1:	xlat   BYTE PTR cs:[ebx]
  4074b3:	int3   
  4074b4:	jb     0x40747a
  4074b6:	int3   
  4074b7:	(bad)  
  4074b9:	mov    cl,0x16
  4074bb:	xor    DWORD PTR [ebp+edx*1-0x6359be0],edi
  4074c2:	outs   dx,DWORD PTR ds:[esi]
  4074c3:	xchg   edx,eax
  4074c4:	pop    ds
  4074c5:	ins    DWORD PTR es:[edi],dx
  4074c6:	jp     0x407547
  4074c8:	iret   
  4074c9:	dec    ebx
  4074ca:	adc    eax,0x82a1e6a3
  4074cf:	sti    
  4074d0:	ret    
  4074d1:	ror    BYTE PTR [ecx-0xf],cl
  4074d4:	mov    WORD PTR [ebx-0x1a979459],?
  4074da:	cmp    al,0x9c
  4074dc:	fistp  WORD PTR [edx+0x21]
  4074df:	es inc bx
  4074e2:	push   ebx
  4074e3:	push   ebx
  4074e4:	hlt    
  4074e5:	rcl    edi,cl
  4074e7:	mov    esi,DWORD PTR [ecx]
  4074e9:	bswap  esp
  4074eb:	jmp    0x9c70:0x8465f7fd
  4074f2:	out    dx,al
  4074f3:	jnp    0x4074ff
  4074f5:	mov    ebx,0x41969df8
  4074fa:	imul   esi,DWORD PTR [eax+0x343f98a4],0xffffffdd
  407501:	inc    ebx
  407502:	mov    BYTE PTR [edx+0x7d],bl
  407505:	sbb    cl,BYTE PTR [ebx+0x8]
  407508:	bound  edx,QWORD PTR [edi+eax*8-0x4]
  40750c:	mov    al,0xc2
  40750e:	adc    bl,cl
  407510:	loop   0x4074f4
  407512:	or     edx,DWORD PTR [eax-0x2ce7b149]
  407518:	xor    ecx,ebx
  40751a:	inc    eax
  40751b:	add    ch,ch
  40751d:	pushf  
  40751e:	mov    esp,0x66a6cfec
  407523:	xchg   edx,eax
  407524:	dec    eax
  407525:	cmp    al,0x30
  407527:	sahf   
  407528:	bnd gs jb 0x407586
  40752c:	ja     0x407554
  40752e:	push   es
  40752f:	sbb    BYTE PTR [ebp+0x72],bh
  407532:	in     al,dx
  407533:	addr16 fs inc edi
  407536:	jmp    0x4074cd
  407538:	fwait
  407539:	jne    0x407536
  40753b:	mov    eax,ds:0x9254d900
  407540:	(bad)  
  407541:	in     eax,0xaf
  407543:	xchg   edx,eax
  407544:	xor    cl,BYTE PTR [eax]
  407546:	aam    0x1b
  407548:	pop    ebx
  407549:	push   0xfa343ef8
  40754e:	test   eax,0x2f0612e0
  407553:	xchg   edx,eax
  407554:	cld    
  407555:	(bad)  
  407556:	(bad)  
  407557:	test   eax,0x7487e02a
  40755c:	popa   
  40755d:	inc    eax
  40755e:	mov    al,0x28
  407560:	lods   al,BYTE PTR ds:[esi]
  407561:	push   0xf38af3db
  407566:	add    BYTE PTR [edi+0x4c],ch
  407569:	jo     0x4075ae
  40756b:	dec    ecx
  40756c:	mov    edi,0x4ac7836f
  407571:	into   
  407572:	shld   DWORD PTR [ebp-0x1],ebp,0x48
  407577:	jnp    0x40752d
  407579:	(bad)  
  40757a:	sti    
  40757b:	dec    esp
  40757c:	xchg   ebp,eax
  40757d:	out    0x2,eax
  40757f:	addr16 das 
  407581:	dec    esp
  407582:	push   edi
  407583:	dec    esi
  407584:	mov    ds:0xa9488311,al
  407589:	or     bh,cl
  40758b:	dec    edx
  40758c:	mov    bh,0xc4
  40758e:	jecxz  0x4075f1
  407590:	dec    edi
  407591:	sbb    eax,0x550c114e
  407596:	call   0xacc2:0xb3d3b48c
  40759d:	out    dx,eax
  40759e:	jmp    0x2cc31d70
  4075a3:	sar    BYTE PTR [ebp+0x756e3c97],0xc3
  4075aa:	jmp    0x407530
  4075ac:	inc    ecx
  4075ad:	test   BYTE PTR [ebp+0x33554329],0x4e
  4075b4:	dec    ecx
  4075b5:	and    eax,0x8b293611
  4075ba:	in     al,0xb2
  4075bc:	mov    al,ds:0x393f75ea
  4075c1:	push   ss
  4075c2:	adc    eax,0xc9ac3a0b
  4075c7:	jmp    0x4075f8
  4075c9:	jmp    0x3b6a9bce
  4075ce:	sub    DWORD PTR [eax+0x2d],0xffffffa0
  4075d2:	push   cs
  4075d3:	lods   al,BYTE PTR cs:[esi]
  4075d5:	mov    eax,0x4c029faa
  4075da:	pop    ebx
  4075db:	and    dl,bh
  4075dd:	call   0xec47:0x6e09888d
  4075e4:	cmc    
  4075e5:	mov    BYTE PTR [ecx],ah
  4075e7:	cmp    BYTE PTR [edx+0x4d],0x8d
  4075eb:	xlat   BYTE PTR ds:[ebx]
  4075ec:	inc    esp
  4075ed:	or     al,0xb1
  4075ef:	fld    DWORD PTR [esi+0x79]
  4075f2:	mov    ds:0xf1125f19,al
  4075f7:	out    0x6e,al
  4075f9:	adc    al,0x36
  4075fb:	rcr    BYTE PTR [ecx-0x18],0x13
  4075ff:	mov    dh,0x41
  407601:	jbe    0x4075f4
  407603:	sahf   
  407604:	clc    
  407605:	and    DWORD PTR [esi-0x3fb4fef],edi
  40760b:	inc    edi
  40760c:	jmp    0x2e3efd6d
  407611:	push   ss
  407612:	retf   
  407613:	(bad)  
  407614:	outs   dx,BYTE PTR ds:[esi]
  407615:	mov    edi,0xfd831ac
  40761a:	jp     0x407638
  40761c:	sbb    cl,BYTE PTR [eax+0x53d188c]
  407622:	mov    ebx,0xbcbb75ab
  407627:	ins    BYTE PTR es:[edi],dx
  407628:	sub    BYTE PTR [ebp+ebx*1+0xe],dl
  40762c:	xchg   DWORD PTR [ebp+0x3f],ebp
  40762f:	mov    BYTE PTR [ebp+0x6c7267d2],0xbc
  407636:	aas    
  407637:	imul   esp,DWORD PTR [eax+ebp*4+0x10],0xb
  40763c:	pusha  
  40763d:	adc    eax,0xc802d3ea
  407642:	(bad)  
  407643:	lea    eax,[ebp+0x6003bdea]
  407649:	xchg   edx,eax
  40764a:	lahf   
  40764b:	ret    0xa76
  40764e:	xor    dl,ah
  407650:	xor    al,0x4
  407652:	data16 icebp 
  407654:	dec    esp
  407655:	add    bl,BYTE PTR [edi]
  407657:	stos   DWORD PTR es:[edi],eax
  407658:	dec    esi
  407659:	imul   eax,DWORD PTR [ecx],0x39
  40765c:	inc    edx
  40765d:	imul   ecx,DWORD PTR [ecx-0xe],0x6c113b67
  407664:	daa    
  407665:	ret    
  407666:	lods   al,BYTE PTR ds:[esi]
  407667:	(bad)  
  407669:	mov    edx,esi
  40766b:	iret   
  40766c:	or     DWORD PTR [ebx-0x7061f74d],eax
  407672:	or     al,0x7a
  407674:	cmp    edi,DWORD PTR [edx]
  407676:	push   es
  407677:	dec    ecx
  407678:	ss pop ecx
  40767a:	cwde   
  40767b:	das    
  40767c:	mov    ebp,0x94248f05
  407681:	adc    al,0x5e
  407683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407684:	jmp    0x2aac:0x49d1bae1
  40768b:	retf   
  40768c:	fistp  DWORD PTR [esi]
  40768e:	inc    edx
  40768f:	loopne 0x40761b
  407691:	or     al,0x4e
  407693:	xor    edx,DWORD PTR [edx+0xd]
  407696:	adc    al,0xed
  407698:	xchg   dl,cl
  40769a:	push   cs
  40769b:	enter  0x600b,0x69
  40769f:	sbb    BYTE PTR [ebx+edi*2],ah
  4076a2:	in     al,0x7a
  4076a4:	popa   
  4076a5:	dec    esi
  4076a6:	mov    ebp,0x6e668def
  4076ab:	adc    eax,0x1b
  4076ae:	xlat   BYTE PTR ds:[ebx]
  4076af:	mov    al,0xf8
  4076b1:	pop    esp
  4076b2:	mov    bh,0x79
  4076b4:	xchg   esi,eax
  4076b5:	cdq    
  4076b6:	push   ss
  4076b7:	sbb    eax,0xd541b09f
  4076bc:	mov    bl,0x78
  4076be:	adc    al,0x6c
  4076c0:	test   al,0xd1
  4076c2:	push   esp
  4076c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c4:	and    ch,bl
  4076c6:	out    0xa7,al
  4076c8:	jb     0x40768c
  4076ca:	or     esi,DWORD PTR [edx-0x60cfaefb]
  4076d0:	or     dl,BYTE PTR [eax+0x71ad5e96]
  4076d6:	std    
  4076d7:	push   edx
  4076d8:	push   cs
  4076d9:	sahf   
  4076da:	xchg   ch,ch
  4076dc:	repz xor ecx,DWORD PTR [edx+0x33dfd234]
  4076e3:	push   eax
  4076e4:	mov    DWORD PTR [esi+0x4300bfad],0x81842b83
  4076ee:	mov    eax,0xa88407bc
  4076f3:	enter  0xdf7,0xc8
  4076f7:	xor    esp,DWORD PTR [ebx]
  4076f9:	les    ebx,FWORD PTR [edi]
  4076fb:	sbb    eax,0x5b557ec9
  407700:	pop    edx
  407701:	(bad)  
  407702:	add    BYTE PTR [ebp-0x25ccc4bb],ah
  407708:	mov    al,0x61
  40770a:	repz mov dh,0xfb
  40770d:	jp     0x40773f
  40770f:	adc    BYTE PTR [edx],cl
  407711:	fsubrp st(7),st
  407713:	lds    edx,FWORD PTR [ebx]
  407715:	pop    ebp
  407716:	psrld  mm7,mm1
  407719:	push   ss
  40771a:	pop    ss
  40771b:	and    DWORD PTR [esp+esi*4],ebx
  40771e:	mov    eax,ds:0x7911fcfe
  407723:	pop    eax
  407724:	ins    BYTE PTR es:[edi],dx
  407725:	into   
  407726:	jecxz  0x407713
  407728:	(bad)  
  407729:	or     DWORD PTR [edx],ebx
  40772b:	add    al,0x71
  40772d:	or     BYTE PTR [ebx],bh
  40772f:	sar    BYTE PTR [edi+0x6f],0x9e
  407733:	pop    ebx
  407734:	in     al,dx
  407735:	add    DWORD PTR [ecx-0x29],eax
  407738:	mov    cs,WORD PTR [ebp-0x591e19d7]
  40773e:	push   ebp
  40773f:	jb     0x40775b
  407741:	nop
  407742:	sahf   
  407743:	pop    eax
  407744:	sub    al,0xc3
  407746:	ss jg  0x40775a
  407749:	push   eax
  40774a:	jl     0x40779f
  40774c:	xchg   DWORD PTR [edx-0x4a],edx
  40774f:	or     ecx,esi
  407751:	push   eax
  407752:	xchg   BYTE PTR [ecx-0x68f6037d],al
  407758:	dec    edi
  407759:	mov    ebx,0xc2db74ea
  40775e:	into   
  40775f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407760:	add    BYTE PTR [ebx],cl
  407762:	push   edx
  407763:	dec    ebp
  407764:	or     edi,DWORD PTR [edi]
  407766:	out    0x3d,eax
  407768:	enter  0x8a25,0xf3
  40776c:	adc    cl,al
  40776e:	out    0xbb,al
  407770:	fs pop esp
  407772:	jecxz  0x407785
  407774:	mov    cl,0x8
  407776:	retf   
  407777:	repnz aas 
  407779:	pop    edx
  40777a:	leave  
  40777b:	gs pop eax
  40777d:	ss push es
  40777f:	mov    ds:0x6edb3f4e,eax
  407784:	jecxz  0x4077fe
  407786:	fidivr WORD PTR [edi]
  407788:	stos   BYTE PTR es:[edi],al
  407789:	adc    DWORD PTR [ebx+ebx*1],edx
  40778c:	push   0x727dcf6c
  407791:	or     eax,0xe091072f
  407796:	aad    0xa7
  407798:	xchg   edi,eax
  407799:	lods   al,BYTE PTR ds:[esi]
  40779a:	(bad)  
  40779b:	iret   
  40779c:	daa    
  40779d:	(bad)  
  40779e:	cld    
  40779f:	(bad)  
  4077a0:	pop    esp
  4077a1:	mov    edx,0xd1182561
  4077a6:	fstp   TBYTE PTR [edi]
  4077a8:	in     al,dx
  4077a9:	add    eax,0x1e85b26
  4077ae:	fmul   QWORD PTR [ecx]
  4077b0:	sahf   
  4077b1:	jl     0x4077c4
  4077b3:	adc    DWORD PTR [edi+0x43],esi
  4077b6:	push   es
  4077b7:	and    BYTE PTR [ebp+eiz*4-0x6ebfabaa],bh
  4077be:	mov    eax,0x92dc153d
  4077c3:	fdivp  st(1),st
  4077c5:	dec    edx
  4077c6:	mov    dl,BYTE PTR [edi+edx*2-0x6a]
  4077ca:	mov    ch,0xb6
  4077cc:	jge    0x407824
  4077ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077cf:	imul   ebp,esi,0x96f7e3c2
  4077d5:	jae    0x4077dc
  4077d7:	mov    dh,0x62
  4077d9:	pop    eax
  4077da:	div    dh
  4077dc:	sbb    cl,ah
  4077de:	sub    al,0xd0
  4077e0:	mov    ds:0x8974dd4d,eax
  4077e5:	xor    eax,0x230a32ee
  4077ea:	fucomi st,st(0)
  4077ec:	mov    ecx,0x259ea1c6
  4077f1:	lea    ebx,[ebp-0x4b]
  4077f4:	lea    ecx,[ebx-0x1d6ee7db]
  4077fa:	jp     0x40780b
  4077fc:	jge    0x4077f2
  4077fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ff:	pop    ebx
  407800:	xchg   edi,eax
  407801:	cwde   
  407802:	nop
  407803:	cdq    
  407804:	mov    ds:0x48b6ac4a,al
  407809:	call   0x970:0x23ec179e
  407810:	cmp    eax,0xab322400
  407815:	mov    esi,0x9156baa7
  40781a:	dec    esp
  40781b:	pop    eax
  40781c:	and    esp,DWORD PTR [esp+esi*1-0x66a22cf2]
  407823:	and    ah,ch
  407825:	sbb    ebx,DWORD PTR [esp+ebp*8]
  407828:	pushf  
  407829:	das    
  40782a:	fld    QWORD PTR [ecx]
  40782c:	push   edx
  40782d:	or     esi,edx
  40782f:	jnp    0x4077d8
  407831:	xlat   BYTE PTR ds:[ebx]
  407832:	jge    0x4077d3
  407834:	dec    ebp
  407835:	and    dh,dl
  407837:	cmc    
  407838:	or     dl,cl
  40783a:	pop    ebx
  40783b:	inc    edi
  40783c:	fucomi st,st(7)
  40783e:	sahf   
  40783f:	push   es
  407840:	inc    DWORD PTR [ebp-0x2408aab2]
  407846:	aas    
  407847:	(bad)  
  407848:	jmp    0xfe1449fc
  40784d:	imul   esi,DWORD PTR [eax-0x4544437f],0xffffffa8
  407854:	pop    ss
  407855:	cmp    DWORD PTR gs:[edi],edi
  407858:	pop    ebx
  407859:	jmp    0x4078c2
  40785b:	pop    ds
  40785c:	jl     0x4078d7
  40785e:	lds    edi,FWORD PTR [eax]
  407860:	dec    ebx
  407861:	clc    
  407862:	lock pop ds
  407864:	and    DWORD PTR [ebp+0xa],eax
  407867:	sbb    ebx,edi
  407869:	jns    0x407853
  40786b:	retf   
  40786c:	inc    ebp
  40786d:	dec    edx
  40786e:	sub    DWORD PTR [edi],ebp
  407870:	sub    esi,DWORD PTR es:[edi+0x563598c2]
  407877:	xor    eax,0x58a4567f
  40787c:	adc    eax,0x12f640ac
  407881:	iret   
  407882:	dec    esp
  407883:	out    0x56,al
  407885:	mov    ds:0x4135d46a,al
  40788a:	outs   dx,BYTE PTR ds:[esi]
  40788b:	pushf  
  40788c:	sahf   
  40788d:	clc    
  40788e:	fpatan 
  407890:	or     eax,0x80943a2d
  407895:	rol    DWORD PTR [esi+ebp*1],cl
  407898:	clc    
  407899:	pushf  
  40789a:	push   esp
  40789b:	and    ecx,esp
  40789d:	arpl   WORD PTR [ecx-0x1f],bp
  4078a0:	rcl    DWORD PTR [eax],cl
  4078a2:	sub    al,bh
  4078a4:	clc    
  4078a5:	xor    ah,dh
  4078a7:	test   BYTE PTR [ebp-0x15],al
  4078aa:	dec    esp
  4078ab:	dec    ecx
  4078ac:	xchg   edx,eax
  4078ad:	cld    
  4078ae:	adc    dl,dl
  4078b0:	pop    ecx
  4078b1:	dec    ebx
  4078b2:	mov    ecx,0xeb7a1668
  4078b7:	sub    esi,DWORD PTR [ecx+0x38]
  4078ba:	add    BYTE PTR [esi],0x1
  4078bd:	push   ss
  4078be:	push   esp
  4078bf:	popf   
  4078c0:	or     dh,al
  4078c2:	push   esi
  4078c3:	popa   
  4078c4:	scas   eax,DWORD PTR es:[edi]
  4078c5:	mov    edx,0x84a5b5ea
  4078ca:	in     eax,dx
  4078cb:	mov    ecx,0xb608143e
  4078d0:	call   0x9ec1:0x60338bf
  4078d7:	rcr    DWORD PTR [edi+0x1b793da7],0xf8
  4078de:	cdq    
  4078df:	retf   
  4078e0:	inc    ebx
  4078e1:	xchg   esi,eax
  4078e2:	(bad)  
  4078e3:	fbld   TBYTE PTR [ecx]
  4078e5:	les    esi,FWORD PTR [esi+0x63]
  4078e8:	popa   
  4078e9:	cmp    ah,BYTE PTR [eax-0x30]
  4078ec:	sub    ah,ch
  4078ee:	add    al,0x1a
  4078f0:	sub    BYTE PTR [esi+esi*2],ah
  4078f3:	inc    edx
  4078f4:	les    ebp,FWORD PTR [ebp+0x31]
  4078f7:	imul   edi,DWORD PTR [ebp+0x1e40723c],0x97c7cede
  407901:	dec    ebx
  407902:	inc    edx
  407903:	mov    eax,ds:0x60ccffb0
  407908:	bound  edi,QWORD PTR [ebp+edi*8-0x1cceaa43]
  40790f:	or     cl,BYTE PTR [ecx]
  407911:	fild   DWORD PTR [ecx]
  407913:	lds    esi,FWORD PTR [edi]
  407915:	je     0x4078ef
  407917:	data16 stos BYTE PTR es:[edi],al
  407919:	popa   
  40791a:	bound  ecx,QWORD PTR [esi]
  40791c:	mov    bl,0x7b
  40791e:	jle    0x4078a2
  407920:	retf   0xe0bb
  407923:	jae    0x40796d
  407925:	jmp    0xe1cf:0xc3650bde
  40792c:	mov    ebp,DWORD PTR [ebx-0x3c632615]
  407932:	loope  0x4079b0
  407934:	cmp    esi,DWORD PTR [edi-0x1f301fa4]
  40793a:	ret    0xe14a
  40793d:	stos   DWORD PTR es:[edi],eax
  40793e:	push   ss
  40793f:	mov    cl,0xfe
  407941:	mov    ebx,0xc6f1d156
  407946:	push   0xffffffb4
  407948:	lahf   
  407949:	mov    ds:0xa2b83422,al
  40794e:	mov    esi,DWORD PTR [ebp+edx*1+0x26]
  407952:	je     0x407967
  407954:	jmp    0x93bab3ba
  407959:	test   al,0x42
  40795b:	bound  esp,QWORD PTR [edi]
  40795d:	pop    ebp
  40795e:	add    eax,0x118a5add
  407963:	push   ebp
  407964:	or     al,0xa
  407966:	or     ebp,DWORD PTR [ecx-0x2f]
  407969:	and    BYTE PTR [edx+0x581088d9],cl
  40796f:	int3   
  407970:	clc    
  407971:	push   es
  407972:	sub    bh,BYTE PTR [eax]
  407974:	xor    DWORD PTR [ebx],ebp
  407976:	aad    0xd4
  407978:	ret    
  407979:	(bad)  
  40797b:	js     0x407936
  40797d:	fcom   st(3)
  40797f:	inc    ecx
  407980:	scas   eax,DWORD PTR es:[edi]
  407981:	push   ss
  407982:	rol    BYTE PTR [ebp-0x57],1
  407985:	add    al,0x55
  407987:	xchg   ecx,eax
  407988:	les    edx,FWORD PTR [eax+0x6a]
  40798b:	in     eax,dx
  40798c:	cmp    dl,ch
  40798e:	lds    eax,FWORD PTR [eax]
  407990:	aam    0x30
  407992:	loop   0x4079ab
  407994:	imul   esp,DWORD PTR [ecx],0xe9a7162a
  40799a:	aad    0xb8
  40799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40799d:	stos   DWORD PTR es:[edi],eax
  40799e:	push   ds
  40799f:	xchg   esp,eax
  4079a0:	cmp    eax,0x2415f34
  4079a5:	out    dx,eax
  4079a6:	push   es
  4079a7:	mov    bh,BYTE PTR [ebp+0xb52d12]
  4079ad:	and    cl,BYTE PTR [edx-0x67]
  4079b0:	mov    eax,0xc6baa799
  4079b5:	(bad)  
  4079b6:	jb     0x4079f8
  4079b8:	cmp    BYTE PTR [ecx-0x7b],dl
  4079bb:	inc    edi
  4079bc:	xchg   DWORD PTR [esi-0x6b12922c],edx
  4079c2:	scas   eax,DWORD PTR es:[edi]
  4079c3:	jne    0x407a00
  4079c5:	and    DWORD PTR [ecx],esi
  4079c7:	and    eax,DWORD PTR [ecx]
  4079c9:	mov    ebp,0x109725f
  4079ce:	mov    eax,0x635f8ba6
  4079d3:	push   ebp
  4079d4:	loopne 0x4079f5
  4079d6:	jl     0x407a1b
  4079d8:	ret    
  4079d9:	and    esp,ebx
  4079db:	or     BYTE PTR [ecx+0x2c8dfc88],dl
  4079e1:	inc    edx
  4079e2:	fwait
  4079e3:	or     edx,DWORD PTR [eax]
  4079e5:	xchg   edx,eax
  4079e6:	lahf   
  4079e7:	aam    0x76
  4079e9:	inc    edx
  4079ea:	push   cs
  4079eb:	xlat   BYTE PTR ds:[ebx]
  4079ec:	mov    esi,0x99384db2
  4079f1:	and    al,0xe
  4079f3:	fwait
  4079f4:	in     al,0x9
  4079f6:	ss dec esi
  4079f8:	fwait
  4079f9:	call   0x6086:0x9025714
  407a00:	pop    es
  407a01:	inc    edx
  407a02:	stos   BYTE PTR es:[edi],al
  407a03:	loop   0x40798c
  407a05:	add    eax,0x652eb6af
  407a0a:	mov    BYTE PTR [edx-0x78],bh
  407a0d:	push   ss
  407a0e:	mov    edi,0x1da11818
  407a13:	dec    ebp
  407a14:	lock pop ds
  407a16:	inc    esp
  407a17:	jmp    0x407a93
  407a19:	dec    edx
  407a1a:	(bad)  
  407a1b:	sbb    bl,bl
  407a1d:	jmp    0x4079c8
  407a1f:	mov    dl,dh
  407a21:	sahf   
  407a22:	mov    bl,0xce
  407a24:	jnp    0x4079c4
  407a26:	aam    0xc0
  407a28:	out    dx,eax
  407a29:	mov    esp,0xcdc3d9b6
  407a2e:	icebp  
  407a2f:	pop    ss
  407a30:	xor    al,0x99
  407a32:	aas    
  407a33:	popa   
  407a34:	sbb    BYTE PTR [eax-0x3a],bl
  407a37:	jae    0x4079cc
  407a39:	and    ch,BYTE PTR [edx+0x6b]
  407a3c:	pop    ds
  407a3d:	pusha  
  407a3e:	dec    edi
  407a3f:	and    eax,edx
  407a41:	repz push ss
  407a43:	sub    BYTE PTR [eax+eiz*8+0x1f],ah
  407a47:	jecxz  0x407a70
  407a49:	dec    ebx
  407a4a:	or     ch,ch
  407a4c:	cmc    
  407a4d:	cdq    
  407a4e:	xchg   si,ax
  407a50:	rol    DWORD PTR [esi],0xc1
  407a53:	xlat   BYTE PTR ds:[ebx]
  407a54:	pusha  
  407a55:	adc    DWORD PTR [eax+ebx*8],eax
  407a58:	(bad)  
  407a59:	push   edi
  407a5a:	cs scas al,BYTE PTR es:[edi]
  407a5c:	mov    bh,ah
  407a5e:	inc    ebp
  407a5f:	imul   eax,DWORD PTR [edx+0x25be5749],0x72
  407a66:	cdq    
  407a67:	call   0x10f86b7f
  407a6c:	fcom   st(7)
  407a6e:	mov    eax,0x24e2e00a
  407a73:	rcr    DWORD PTR [edi-0x6f],cl
  407a76:	sbb    DWORD PTR [eax-0xb3cbc64],0xffffffb4
  407a7d:	pop    ds
  407a7e:	test   DWORD PTR [edx+0x5b],esi
  407a81:	cmp    BYTE PTR [esi-0x1bb5d576],al
  407a87:	adc    DWORD PTR [ebp-0x6a543856],esi
  407a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a8e:	or     ah,ch
  407a90:	scas   al,BYTE PTR es:[edi]
  407a91:	js     0x407a4a
  407a93:	ret    
  407a94:	pusha  
  407a95:	lock popf 
  407a97:	fcom   QWORD PTR [ebx-0x13c74904]
  407a9d:	xor    DWORD PTR [edx-0x37],edx
  407aa0:	xor    DWORD PTR [ecx+0x5d],edx
  407aa3:	int3   
  407aa4:	dec    edx
  407aa5:	xchg   ecx,eax
  407aa6:	push   ss
  407aa7:	pop    ebx
  407aa8:	sbb    al,0x6f
  407aaa:	mov    BYTE PTR [eax],bl
  407aac:	dec    eax
  407aad:	sti    
  407aae:	mov    edx,DWORD PTR [eax+0x6d087c1b]
  407ab4:	aas    
  407ab5:	push   cs
  407ab6:	cmp    DWORD PTR [edi],edi
  407ab8:	xchg   cx,ax
  407aba:	jle    0x407aef
  407abc:	call   FWORD PTR [ebx+0x3901b07d]
  407ac2:	xor    BYTE PTR [edx+0x348add0f],dl
  407ac8:	mov    al,ds:0xe30f4e84
  407acd:	sub    BYTE PTR [eax+0x4871993f],dl
  407ad3:	jle    0x407b41
  407ad5:	push   ebp
  407ad6:	fbld   TBYTE PTR [edx+0x565a39ed]
  407adc:	pop    edi
  407add:	cli    
  407ade:	aaa    
  407adf:	cmp    ch,bh
  407ae1:	inc    eax
  407ae2:	mov    bp,0x49
  407ae6:	mov    ecx,0xdfb2fa66
  407aeb:	or     edx,DWORD PTR ss:[esi]
  407aee:	or     dl,ah
  407af0:	out    0x23,al
  407af2:	jae    0x407a8c
  407af4:	sub    eax,0xcce0c5c8
  407af9:	cmp    ecx,DWORD PTR [eax]
  407afb:	cmp    BYTE PTR [edi+edi*8],bl
  407afe:	inc    esp
  407aff:	sub    ecx,DWORD PTR [ebp-0x64]
  407b02:	and    eax,0xcb82e293
  407b07:	mov    ds:0x63a3a825,eax
  407b0c:	jle    0x407b7f
  407b0e:	sub    ebp,ebx
  407b10:	inc    edi
  407b11:	mov    bh,0xe1
  407b13:	sahf   
  407b14:	push   ss
  407b15:	scas   al,BYTE PTR es:[edi]
  407b16:	mov    al,ds:0x2ab01390
  407b1b:	(bad)  
  407b1c:	fstp   TBYTE PTR [esi+0x52704176]
  407b22:	imul   ebx,DWORD PTR [ebx+0x29],0xffffffa6
  407b26:	js     0x407b6c
  407b28:	mov    eax,0x8f911433
  407b2d:	mov    ebx,ds
  407b2f:	repz push eax
  407b31:	or     BYTE PTR [ecx],0x98
  407b34:	add    DWORD PTR [esi+0x2ed37a50],edx
  407b3a:	xchg   BYTE PTR [ecx],al
  407b3c:	adc    DWORD PTR [ebp-0xf2274a4],ecx
  407b42:	fadd   DWORD PTR [eax+0x616271f3]
  407b48:	es stc 
  407b4a:	inc    ebx
  407b4b:	(bad)  [eax-0x6e1327f7]
  407b51:	aaa    
  407b52:	call   0xa215:0x265ea5dc
  407b59:	les    edi,FWORD PTR [esi]
  407b5b:	retf   0xd61
  407b5e:	mov    ecx,0xebf848cd
  407b63:	repnz xor DWORD PTR [esi],ebx
  407b66:	jo     0x407b90
  407b68:	cmp    ah,al
  407b6a:	cmp    BYTE PTR ds:0xfe41c42f,0x99
  407b71:	jmp    0x407b9f
  407b73:	dec    ecx
  407b74:	pop    es
  407b75:	adc    BYTE PTR [eax+eax*1],dl
  407b78:	sbb    ah,ah
  407b7a:	mov    ecx,esi
  407b7c:	adc    al,BYTE PTR [ecx+ebp*8+0x4bf2c41e]
  407b83:	cwde   
  407b84:	inc    edx
  407b85:	(bad)  
  407b86:	in     al,0xc4
  407b88:	les    esi,FWORD PTR [ecx+0x4a3e9e84]
  407b8e:	push   edx
  407b8f:	ins    BYTE PTR es:[edi],dx
  407b90:	fild   WORD PTR [eax+0x2e3f3846]
  407b96:	pop    eax
  407b97:	add    eax,0xaf40c6e3
  407b9c:	add    ebp,DWORD PTR [esi+edi*8+0x497e9d1b]
  407ba3:	jg     0x5bb2d1cd
  407ba9:	sbb    ch,dh
  407bab:	fiadd  DWORD PTR [ecx+0x4361953f]
  407bb1:	icebp  
  407bb2:	iret   
  407bb3:	adc    ah,BYTE PTR [ecx]
  407bb5:	mov    ch,0xd4
  407bb7:	clc    
  407bb8:	sti    
  407bb9:	jge    0x407b52
  407bbb:	xchg   esi,eax
  407bbc:	shr    DWORD PTR [ebp+0x55],1
  407bbf:	fnstsw WORD PTR [eax+eiz*1]
  407bc2:	pop    esi
  407bc3:	(bad)  
  407bc4:	push   eax
  407bc5:	or     ah,BYTE PTR [eax+0x3ad9e07f]
  407bcb:	adc    eax,0x39e32010
  407bd0:	(bad)  
  407bd1:	aam    0xcf
  407bd3:	adc    cl,0x86
  407bd6:	jns    0x407c34
  407bd8:	xlat   BYTE PTR ds:[ebx]
  407bd9:	dec    esp
  407bda:	jb     0x407c2d
  407bdc:	or     ch,BYTE PTR [eax]
  407bde:	setb   BYTE PTR [edx-0x69]
  407be2:	dec    ebp
  407be3:	inc    edx
  407be4:	inc    edx
  407be5:	call   0xc058b5e8
  407bea:	stc    
  407beb:	or     ch,ah
  407bed:	xchg   edi,eax
  407bee:	push   0x59
  407bf0:	fsubr  st(5),st
  407bf2:	dec    esp
  407bf3:	call   0xa310d4e2
  407bf8:	jb     0x407c1b
  407bfa:	loope  0x407c4b
  407bfc:	rcl    DWORD PTR [eax+0x10],0x41
  407c00:	repz jo 0x407c25
  407c03:	pushf  
  407c04:	pop    gs
  407c06:	test   DWORD PTR [edx],0x36324d25
  407c0c:	(bad)  [edx]
  407c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c0f:	outs   dx,BYTE PTR ds:[esi]
  407c11:	sbb    edx,ebx
  407c13:	lock xchg esi,eax
  407c15:	ds push edx
  407c17:	sbb    DWORD PTR [ebx],ecx
  407c19:	push   0xfffffff6
  407c1b:	jo     0x407c91
  407c1d:	or     edi,esi
  407c1f:	stos   BYTE PTR es:[edi],al
  407c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c21:	pop    ss
  407c22:	push   eax
  407c23:	cmp    eax,0x667fac4b
  407c28:	adc    al,0xd
  407c2a:	sbb    esp,eax
  407c2c:	(bad)  [ebx-0x57]
  407c2f:	jno    0x407c68
  407c31:	daa    
  407c32:	mov    ebp,0xdd33984
  407c37:	and    eax,0x7c97afb
  407c3c:	push   edx
  407c3d:	jg     0x407bd2
  407c3f:	ffree  st(0)
  407c41:	sbb    al,0xbe
  407c43:	inc    esp
  407c44:	add    dh,BYTE PTR es:[ecx+0x4410a579]
  407c4b:	adc    DWORD PTR [ebx+0x48],ebx
  407c4e:	rcr    DWORD PTR [edx-0x5c],1
  407c51:	test   DWORD PTR [ecx],ebx
  407c53:	add    DWORD PTR [eax+0x2789e33e],ebp
  407c59:	call   0xb37733ed
  407c5e:	fimul  WORD PTR [edi-0x31f2c65c]
  407c64:	call   0x592d30bb
  407c69:	and    eax,0xfe6efb60
  407c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c6f:	loopne 0x407ca0
  407c71:	add    BYTE PTR [ebx+0x7c0e2155],al
  407c77:	mov    al,ds:0xf5f30b9
  407c7c:	fsubrp st(7),st
  407c7e:	mov    ebp,0x1e7675d5
  407c83:	or     ebx,DWORD PTR [eax]
  407c85:	mov    ds:0x3e04cca7,al
  407c8a:	fstp   DWORD PTR [ecx+0x39bc3fd4]
  407c90:	xchg   ebx,eax
  407c91:	pop    esp
  407c92:	sub    al,0x85
  407c94:	sbb    edi,DWORD PTR [ebp-0x5c753959]
  407c9a:	jno    0x407cfe
  407c9c:	clc    
  407c9d:	jecxz  0x407d03
  407c9f:	gs jg  0x407ce4
  407ca2:	ins    BYTE PTR es:[edi],dx
  407ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca4:	sti    
  407ca5:	ins    DWORD PTR es:[edi],dx
  407ca6:	jne    0x407c7d
  407ca8:	fucomip st,st(1)
  407caa:	mov    cl,0x9d
  407cac:	sub    BYTE PTR [ebx-0x2f],dh
  407caf:	jnp    0x407c5d
  407cb1:	loope  0x407d2f
  407cb3:	jne    0x407d09
  407cb5:	xlat   BYTE PTR ds:[ebx]
  407cb6:	fsub   st,st(4)
  407cb8:	adc    eax,0xae865280
  407cbd:	repnz cmp dh,BYTE PTR [eax-0x3a]
  407cc1:	jecxz  0x407cdb
  407cc3:	rol    ebp,0x70
  407cc6:	add    al,0xc8
  407cc8:	mov    bl,0xbd
  407cca:	sub    BYTE PTR [ebp+ebx*2+0xa],0xdd
  407ccf:	push   ebx
  407cd0:	jmp    0x61a4:0xc346bc7a
  407cd7:	sbb    esp,DWORD PTR [edi+edi*1]
  407cda:	push   ds
  407cdb:	ds pop edx
  407cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cde:	sti    
  407cdf:	iret   
  407ce0:	pop    eax
  407ce1:	mov    dh,0xba
  407ce3:	mov    eax,0x82bb5d08
  407ce8:	pop    es
  407ce9:	and    DWORD PTR [ecx-0x2ed04cf3],0xffffffcc
  407cf0:	int3   
  407cf1:	inc    ecx
  407cf2:	in     al,0x8b
  407cf4:	mov    ch,BYTE PTR [ebp+0x6bb67f62]
  407cfa:	jecxz  0x407c8c
  407cfc:	iret   
  407cfd:	mov    cl,BYTE PTR [esi+0x8cf29dc]
  407d03:	jbe    0x407cd6
  407d05:	addr16 repz sub eax,0xbc415db2
  407d0c:	xchg   esi,eax
  407d0d:	jno    0x407c90
  407d0f:	ss xchg ebx,eax
  407d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d12:	bound  esi,QWORD PTR [eax-0xbbe5efe]
  407d18:	xchg   ebp,eax
  407d19:	in     eax,0x4f
  407d1b:	mov    ecx,0xc5dcec47
  407d20:	call   0x2cd3:0x26e26966
  407d27:	cmp    bh,BYTE PTR [eax]
  407d29:	movaps xmm3,XMMWORD PTR [ecx-0x6135e252]
  407d30:	dec    edi
  407d31:	mov    esi,0x3b14dee6
  407d36:	sbb    eax,0x181d7202
  407d3b:	retf   0x74dd
  407d3e:	and    DWORD PTR [eax],esp
  407d40:	imul   ebx,DWORD PTR [edx-0x41],0x39
  407d44:	jnp    0x407d37
  407d46:	and    BYTE PTR [eax+0x69],al
  407d49:	mov    cs,ebp
  407d4b:	mov    bl,0x2b
  407d4d:	inc    edi
  407d4e:	add    dl,BYTE PTR [ebp+0x6d744e2a]
  407d54:	adc    ah,BYTE PTR [ebp+0x41fad2a0]
  407d5a:	xchg   esi,ecx
  407d5c:	stc    
  407d5d:	or     ebx,DWORD PTR [ebp+0xec19ecc]
  407d63:	(bad)  
  407d64:	adc    DWORD PTR [edi-0x5e],esi
  407d67:	daa    
  407d68:	adc    DWORD PTR [ebp-0x3b],esp
  407d6b:	inc    edi
  407d6c:	int3   
  407d6d:	std    
  407d6e:	fs retf 0xeb86
  407d72:	adc    eax,0x9652030f
  407d77:	sub    al,0xbd
  407d79:	into   
  407d7a:	js     0x407da8
  407d7c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407d7e:	adc    ebp,eax
  407d80:	xlat   BYTE PTR ds:[ebx]
  407d81:	pop    edi
  407d82:	xor    ebx,esp
  407d84:	rcr    DWORD PTR [esi-0x24229b68],1
  407d8a:	loopne 0x407d67
  407d8c:	cmp    eax,0xf8f9122b
  407d91:	jp     0x407d13
  407d93:	imul   esi,esi,0xffffffd5
  407d96:	scas   al,BYTE PTR es:[edi]
  407d97:	sbb    DWORD PTR [eax],esp
  407d99:	out    dx,al
  407d9a:	mov    bl,0x28
  407d9c:	dec    esi
  407d9d:	int3   
  407d9e:	mov    WORD PTR [bx+di],es
  407da1:	int3   
  407da2:	sub    al,0x65
  407da4:	pop    edi
  407da5:	stos   BYTE PTR es:[edi],al
  407da6:	mov    esi,fs
  407da8:	or     dh,BYTE PTR [edi]
  407daa:	dec    eax
  407dab:	inc    eax
  407dac:	mov    WORD PTR [esi],fs
  407dae:	out    0x1b,eax
  407db0:	test   DWORD PTR [eax+0x5e],esi
  407db3:	xor    dh,BYTE PTR [edi]
  407db5:	sti    
  407db6:	jno    0x407e26
  407db8:	call   0xbf90:0x70e8e882
  407dbf:	sbb    al,0x16
  407dc1:	jae    0x407e30
  407dc3:	sub    DWORD PTR [edx],edx
  407dc5:	dec    ecx
  407dc6:	loop   0x407e33
  407dc8:	sub    al,BYTE PTR [bp+di-0x522a]
  407dcd:	cmp    ch,bh
  407dcf:	push   es
  407dd0:	mov    WORD PTR [ebx+edx*8+0x5feb8dcb],cs
  407dd7:	jmp    0xd7c5:0x190887a
  407dde:	jbe    0x407e55
  407de0:	xchg   esi,eax
  407de1:	xor    BYTE PTR [ecx+0x13901358],0x9a
  407de8:	mov    ds,WORD PTR [eax-0x39668902]
  407dee:	(bad)  
  407def:	bound  ebp,QWORD PTR [eax+0x12]
  407df2:	lods   eax,DWORD PTR ds:[esi]
  407df3:	rcr    BYTE PTR [ecx],cl
  407df5:	mov    ebp,0xd1957797
  407dfa:	test   al,0xc0
  407dfc:	sub    al,0x5f
  407dfe:	popf   
  407dff:	mov    WORD PTR [edi+edx*8],fs
  407e02:	icebp  
  407e03:	mov    WORD PTR [ebx],ss
  407e05:	mov    ?,WORD PTR [eax]
  407e07:	lahf   
  407e08:	cli    
  407e09:	ds sti 
  407e0b:	arpl   WORD PTR [ebp-0x4d],di
  407e0e:	popa   
  407e0f:	idiv   eax
  407e11:	test   bl,0xf4
  407e14:	cmp    eax,0xda7febdc
  407e19:	or     ebp,DWORD PTR [ecx-0x1d]
  407e1c:	fbstp  TBYTE PTR [ecx+0x7f]
  407e1f:	xlat   BYTE PTR ds:[ebx]
  407e20:	cmp    BYTE PTR [ebx],0xde
  407e23:	sub    eax,0x35f7a256
  407e28:	aas    
  407e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e2a:	xlat   BYTE PTR ds:[ebx]
  407e2b:	sbb    al,BYTE PTR [esi]
  407e2d:	adc    dh,BYTE PTR [ecx+0x51]
  407e30:	xchg   edi,eax
  407e31:	mov    BYTE PTR [ebx],bh
  407e33:	mov    esp,ecx
  407e35:	mov    esp,0xea0dcf48
  407e3a:	out    dx,al
  407e3b:	popa   
  407e3c:	push   eax
  407e3d:	out    dx,eax
  407e3e:	mov    cl,0x2d
  407e40:	and    eax,0x57770965
  407e45:	and    eax,0x26759c10
  407e4a:	gs jae 0x407e24
  407e4d:	inc    esp
  407e4e:	or     DWORD PTR ds:0xc75971b5,ebx
  407e54:	jne    0x407dfb
  407e56:	loope  0x407e92
  407e58:	fincstp 
  407e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e5b:	(bad)  
  407e5d:	jge    0x407ec6
  407e5f:	das    
  407e60:	pop    esp
  407e61:	clc    
  407e62:	inc    esp
  407e63:	push   edx
  407e64:	jo     0x407e0e
  407e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e67:	mov    dh,0xda
  407e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6a:	shl    DWORD PTR [edx],cl
  407e6c:	and    eax,0x8edc0b7c
  407e71:	not    DWORD PTR [esi]
  407e73:	dec    ecx
  407e74:	xchg   esp,eax
  407e75:	sub    edx,edi
  407e77:	mov    ecx,0xacbad34e
  407e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e7d:	cli    
  407e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e7f:	pusha  
  407e80:	mov    gs:0xb63b54a8,eax
  407e86:	and    ebp,edi
  407e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e89:	or     esp,DWORD PTR [ecx+0x26f29289]
  407e8f:	(bad)  
  407e90:	loope  0x407e50
  407e92:	iret   
  407e93:	sbb    esp,DWORD PTR [edx-0x2633642c]
  407e99:	xor    al,al
  407e9b:	enter  0xfbf2,0xaa
  407e9f:	mov    WORD PTR [edx],gs
  407ea1:	pop    ebx
  407ea2:	jle    0x407e67
  407ea4:	shr    BYTE PTR [ebp-0x6bfcec16],cl
  407eaa:	inc    edx
  407eab:	call   0xcdd5:0x3afc7f1c
  407eb2:	xlat   BYTE PTR ds:[ebx]
  407eb3:	xchg   ebx,eax
  407eb4:	aam    0x8b
  407eb6:	imul   BYTE PTR [eax+esi*2-0x52]
  407eba:	not    ebx
  407ebc:	stos   DWORD PTR es:[edi],eax
  407ebd:	add    edi,DWORD PTR [ecx-0x17ae77b]
  407ec3:	add    al,0xbb
  407ec5:	fwait
  407ec6:	dec    edi
  407ec7:	inc    esp
  407ec8:	call   0x2a1e:0xc2c0df9e
  407ecf:	scas   al,BYTE PTR es:[edi]
  407ed0:	repz dec ecx
  407ed2:	pop    ecx
  407ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ed4:	in     eax,dx
  407ed5:	(bad)
  407ed9:	or     DWORD PTR [ebx-0x133d17a7],edx
  407edf:	jle    0x407e76
  407ee1:	push   edi
  407ee2:	jne    0x407e92
  407ee4:	adc    al,0x6a
  407ee6:	sub    eax,0xfba7fc67
  407eeb:	push   edi
  407eec:	ins    DWORD PTR es:[edi],dx
  407eed:	enter  0x684,0x9
  407ef1:	cmp    ah,BYTE PTR [edi+0x5]
  407ef4:	fs xchg esp,eax
  407ef6:	jmp    0x63072f66
  407efb:	out    dx,al
  407efc:	and    BYTE PTR ds:0xace0100b,ch
  407f02:	out    dx,eax
  407f03:	and    eax,0x8c8072cc
  407f08:	das    
  407f09:	std    
  407f0a:	outs   dx,DWORD PTR ds:[esi]
  407f0b:	adc    BYTE PTR [edi+0x51],bl
  407f0e:	into   
  407f0f:	lods   al,BYTE PTR ds:[esi]
  407f10:	push   0x6e
  407f12:	push   esp
  407f13:	xchg   ebx,eax
  407f14:	data16 in al,dx
  407f16:	jl     0x407ef6
  407f18:	sbb    DWORD PTR [esi+0x1b],ebp
  407f1b:	jns    0x407f69
  407f1d:	cs (bad) 
  407f1f:	icebp  
  407f20:	pusha  
  407f21:	inc    edi
  407f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f23:	lahf   
  407f24:	test   ebp,esi
  407f26:	mov    edx,0x5513d030
  407f2b:	fmul   QWORD PTR [ebx]
  407f2d:	inc    eax
  407f2e:	mov    bh,0xdd
  407f30:	pop    ebx
  407f31:	push   ebp
  407f32:	fnstsw WORD PTR [ecx]
  407f34:	push   0xffffffbc
  407f36:	(bad)  
  407f37:	xchg   ebp,eax
  407f38:	dec    esi
  407f39:	loop   0x407f9b
  407f3b:	cmp    BYTE PTR [ecx],bl
  407f3d:	(bad)  
  407f3e:	(bad)  ds:[eax+ecx*4+0x1e]
  407f43:	in     al,dx
  407f44:	add    BYTE PTR [ebp-0x78],cl
  407f47:	shr    eax,cl
  407f49:	cwde   
  407f4a:	push   esp
  407f4b:	jne    0x407edd
  407f4d:	cmp    bh,ch
  407f4f:	adc    BYTE PTR [esi+0xfe75bc9],bl
  407f55:	test   DWORD PTR [esi-0x74ffffff],ebx
  407f5b:	inc    ebp
  407f5c:	hlt    
  407f5d:	neg    ecx
  407f5f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  407f66:	adc    ecx,eax
  407f68:	mov    eax,DWORD PTR [ebp-0x28]
  407f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  407f6e:	not    DWORD PTR ds:0x42a2da
  407f74:	xor    eax,esi
  407f76:	or     DWORD PTR ds:0x42a2fa,0xa4f
  407f80:	xor    ecx,esi
  407f82:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  407f8c:	add    eax,edi
  407f8e:	add    ecx,edi
  407f90:	mov    BYTE PTR [ebp-0x21],dl
  407f93:	cmp    eax,ecx
  407f95:	jae    0x408098
  407f9b:	add    edx,DWORD PTR ds:0x42a2a2
  407fa1:	lea    ecx,[eax-0x3272f1]
  407fa7:	mov    DWORD PTR [ebp-0x14],ecx
  407faa:	sub    DWORD PTR ds:0x42a27a,0x2374
  407fb4:	mov    edx,DWORD PTR [ebp-0x14]
  407fb7:	add    DWORD PTR ds:0x42a2a2,0x6412
  407fc1:	xor    edx,esi
  407fc3:	add    edx,0x7f55d8fb
  407fc9:	lea    ecx,[ebp+eax*4-0xb4]
  407fd0:	mov    DWORD PTR ds:0x42a25a,0x798e
  407fda:	mov    DWORD PTR [ecx],edx
  407fdc:	mov    edx,0x1097
  407fe1:	mov    edx,DWORD PTR [ecx]
  407fe3:	cmp    edx,0x244ecb98
  407fe9:	jbe    0x408004
  407fef:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  407ff9:	add    DWORD PTR [ecx],0x405fcd9
  407fff:	jmp    0x40800a
  408004:	add    DWORD PTR [ecx],0xfdaf4327
  40800a:	or     DWORD PTR ds:0x42a2f6,edi
  408010:	mov    ecx,DWORD PTR [ebp-0x18]
  408013:	xor    ecx,esi
  408015:	and    DWORD PTR ds:0x42a25e,0x42a27a
  40801f:	inc    eax
  408020:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  40802a:	inc    DWORD PTR [ebp-0x14]
  40802d:	add    ecx,edi
  40802f:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  408039:	cmp    eax,ecx
  40803b:	mov    DWORD PTR ds:0x42a2fe,0x33af
  408045:	jb     0x407faa
  40804b:	and    DWORD PTR ds:0x42a25e,0x0
  408055:	mov    eax,ds:0x42a25e
  40805a:	inc    eax
  40805b:	mov    ds:0x42a25e,eax
  408060:	cmp    DWORD PTR ds:0x42a25e,0x1c
  408067:	jb     0x408095
  40806d:	jmp    0x408088
  408072:	push   0x6d6b
  408077:	push   0x44a2
  40807c:	push   DWORD PTR [ebp-0x14]
  40807f:	push   DWORD PTR [ebp-0x18]
  408082:	call   DWORD PTR ds:0x42a3de
  408088:	cmp    DWORD PTR ds:0x42a25e,0x18
  40808f:	jb     0x408055
  408095:	mov    dl,BYTE PTR [ebp-0x21]
  408098:	mov    eax,DWORD PTR [ebp-0x34]
  40809b:	xor    al,0xaa
  40809d:	mov    cl,0xf
  40809f:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  4080a9:	sub    cl,al
  4080ab:	add    dl,cl
  4080ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  4080b0:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  4080ba:	xor    cl,0xaa
  4080bd:	xor    DWORD PTR ds:0x42a296,0x4bb3
  4080c7:	sub    cl,0xf
  4080ca:	add    DWORD PTR ds:0x42a2d6,0x42a2da
  4080d4:	ror    dl,cl
  4080d6:	sub    ecx,0x38f7
  4080dc:	xor    eax,eax
  4080de:	xor    DWORD PTR ds:0x42a2d2,0x8c7
  4080e8:	mov    eax,DWORD PTR [ebp-0xc]
  4080eb:	dec    DWORD PTR ds:0x42a266
  4080f1:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  4080f8:	and    DWORD PTR ds:0x42a296,0x0
  408102:	mov    eax,ds:0x42a296
  408107:	inc    eax
  408108:	mov    ds:0x42a296,eax
  40810d:	cmp    DWORD PTR ds:0x42a296,0x27
  408114:	ja     0x408132
  40811a:	jmp    0x408125
  40811f:	call   DWORD PTR ds:0x42a3e2
  408125:	cmp    DWORD PTR ds:0x42a296,0x1b
  40812c:	jb     0x408102
  408132:	mov    eax,DWORD PTR [ebp-0xc]
  408135:	xor    ecx,DWORD PTR ds:0x42a2c6
  40813b:	mov    ecx,DWORD PTR [ebp-0x28]
  40813e:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  408148:	sub    eax,edi
  40814a:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  408154:	xor    eax,esi
  408156:	mov    DWORD PTR ds:0x42a296,0x3de6
  408160:	cmp    eax,ecx
  408162:	mov    DWORD PTR ds:0x42a292,0x568e
  40816c:	jne    0x408200
  408172:	add    ecx,eax
  408174:	mov    eax,DWORD PTR [ebp-0x8]
  408177:	and    DWORD PTR ds:0x42a2ee,0x0
  408181:	mov    ecx,DWORD PTR ds:0x42a2ee
  408187:	inc    ecx
  408188:	mov    DWORD PTR ds:0x42a2ee,ecx
  40818e:	cmp    DWORD PTR ds:0x42a2ee,0x6
  408195:	jbe    0x4081df
  40819b:	jmp    0x4081b8
  4081a0:	push   0x42a296
  4081a5:	push   DWORD PTR [ebp-0x20]
  4081a8:	push   0x42903c
  4081ad:	push   0x4290aa
  4081b2:	call   DWORD PTR ds:0x42a3ea
  4081b8:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4081bf:	jne    0x4081d2
  4081c5:	mov    ecx,DWORD PTR ds:0x42a2ee
  4081cb:	inc    ecx
  4081cc:	mov    DWORD PTR ds:0x42a2ee,ecx
  4081d2:	cmp    DWORD PTR ds:0x42a2ee,0x15
  4081d9:	jb     0x408181
  4081df:	mov    ecx,DWORD PTR [ebp-0x10]
  4081e2:	xor    eax,esi
  4081e4:	xor    ecx,esi
  4081e6:	sub    eax,ecx
  4081e8:	sub    eax,edi
  4081ea:	xor    eax,esi
  4081ec:	mov    DWORD PTR [ebp-0x8],eax
  4081ef:	mov    eax,DWORD PTR [ebp-0x10]
  4081f2:	xor    eax,esi
  4081f4:	mov    ecx,0xffcd8d8f
  4081f9:	sub    ecx,eax
  4081fb:	jmp    0x40820f
  408200:	mov    eax,DWORD PTR [ebp-0x10]
  408203:	xor    eax,esi
  408205:	mov    ecx,0xffcd8d0f
  40820a:	sub    ecx,eax
  40820c:	add    ecx,DWORD PTR [ebp-0xc]
  40820f:	mov    DWORD PTR [ebp-0xc],ecx
  408212:	mov    eax,DWORD PTR [ebp-0x8]
  408215:	cmp    eax,0xf89c85a5
  40821a:	jne    0x4037d5
  408220:	mov    DWORD PTR [ebp-0x34],0x9
  408227:	mov    ecx,DWORD PTR [ebp+0x8]
  40822a:	xor    ecx,esi
  40822c:	add    ecx,edi
  40822e:	jmp    0x40848e
  408233:	lea    eax,[ecx+ebx*1]
  408236:	mov    DWORD PTR [ebp-0x2c],eax
  408239:	mov    eax,DWORD PTR [ebp-0x58]
  40823c:	sub    eax,ecx
  40823e:	mov    DWORD PTR [ebp-0x1c],eax
  408241:	mov    eax,DWORD PTR [ebp-0x1c]
  408244:	mov    DWORD PTR [ebp-0x14],eax
  408247:	mov    eax,DWORD PTR [ebp-0x2c]
  40824a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  408251:	mov    DWORD PTR [ebp-0x54],eax
  408254:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40825b:	mov    eax,DWORD PTR [ebp-0x38]
  40825e:	xor    eax,esi
  408260:	add    eax,edi
  408262:	mov    DWORD PTR [ebp-0x10],eax
  408265:	mov    eax,DWORD PTR [ebp-0x38]
  408268:	xor    eax,esi
  40826a:	add    eax,edi
  40826c:	mov    DWORD PTR [ebp-0x8],eax
  40826f:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  408276:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40827d:	mov    eax,DWORD PTR [ebp-0x38]
  408280:	mov    edx,DWORD PTR [ebp-0x14]
  408283:	xor    eax,esi
  408285:	add    eax,edi
  408287:	cmp    edx,eax
  408289:	je     0x408482
  40828f:	mov    eax,DWORD PTR [ebp-0x20]
  408292:	xor    eax,esi
  408294:	mov    edx,0xffcd8d0f
  408299:	sub    edx,eax
  40829b:	add    edx,DWORD PTR [ebp-0x14]
  40829e:	mov    eax,DWORD PTR [ebp-0x20]
  4082a1:	mov    ebx,DWORD PTR [ebp-0x10]
  4082a4:	xor    eax,esi
  4082a6:	add    eax,edi
  4082a8:	imul   eax,ebx
  4082ab:	cmp    eax,edx
  4082ad:	ja     0x40847f
  4082b3:	mov    edx,DWORD PTR [ebp-0x10]
  4082b6:	mov    eax,DWORD PTR [ebp-0x14]
  4082b9:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082bc:	sub    eax,edx
  4082be:	xor    ebx,esi
  4082c0:	xor    edx,edx
  4082c2:	add    ebx,edi
  4082c4:	div    ebx
  4082c6:	mov    DWORD PTR [ebp-0x8],eax
  4082c9:	mov    eax,DWORD PTR [ebp-0x44]
  4082cc:	mov    edx,DWORD PTR [ebp-0x8]
  4082cf:	xor    eax,esi
  4082d1:	add    eax,edi
  4082d3:	cmp    edx,eax
  4082d5:	jbe    0x4082e5
  4082db:	mov    eax,DWORD PTR [ebp-0x44]
  4082de:	xor    eax,esi
  4082e0:	add    eax,edi
  4082e2:	mov    DWORD PTR [ebp-0x8],eax
  4082e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4082e8:	mov    edx,DWORD PTR [ebp-0x8]
  4082eb:	xor    eax,esi
  4082ed:	add    eax,edi
  4082ef:	imul   eax,edx
  4082f2:	mov    DWORD PTR [ebp-0x8],eax
  4082f5:	mov    eax,DWORD PTR [ebp-0x38]
  4082f8:	mov    edx,DWORD PTR [ebp-0x8]
  4082fb:	xor    eax,esi
  4082fd:	add    eax,edi
  4082ff:	cmp    edx,eax
  408301:	je     0x408468
  408307:	mov    eax,DWORD PTR [ebp-0x8]
  40830a:	mov    DWORD PTR [ebp-0x18],eax
  40830d:	mov    eax,DWORD PTR [ebp-0x10]
  408310:	add    eax,DWORD PTR [ebp-0x54]
  408313:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40831a:	mov    DWORD PTR [ebp-0x8],eax
  40831d:	mov    eax,0xf89c85ba
  408322:	mov    DWORD PTR [ebp-0x28],eax
  408325:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40832c:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  408333:	mov    DWORD PTR [ebp-0x30],eax
  408336:	mov    eax,DWORD PTR [ebp-0x1c]
  408339:	xor    eax,esi
  40833b:	add    eax,edi
  40833d:	jmp    0x408424
  408342:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  408349:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  408350:	mov    eax,DWORD PTR [ebp-0x30]
  408353:	mov    edx,DWORD PTR [ebp-0xc]
  408356:	xor    eax,esi
  408358:	add    eax,edi
  40835a:	imul   eax,edx
  40835d:	mov    edx,DWORD PTR [ebp-0x8]
  408360:	mov    al,BYTE PTR [eax+edx*1]
  408363:	mov    BYTE PTR [ebp-0x1],al
  408366:	mov    eax,DWORD PTR [ebp-0x30]
  408369:	mov    edx,DWORD PTR [ebp-0xc]
  40836c:	xor    eax,esi
  40836e:	add    eax,edi
  408370:	imul   eax,edx
  408373:	mov    edx,DWORD PTR [ebp-0x5c]
  408376:	xor    edx,esi
  408378:	add    eax,edx
  40837a:	mov    edx,DWORD PTR [ebp-0x8]
  40837d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  408385:	mov    edx,DWORD PTR [ebp-0x4c]
  408388:	xor    edx,esi
  40838a:	lea    eax,[edx+eax*1+0x3272f1]
  408391:	movzx  edx,BYTE PTR [ebp-0x1]
  408395:	xor    edx,eax
  408397:	mov    BYTE PTR [ebp-0x1],dl
  40839a:	mov    al,BYTE PTR [ebp-0x1]
  40839d:	mov    edx,DWORD PTR [ebp-0x30]
  4083a0:	mov    ebx,DWORD PTR [ebp-0xc]
  4083a3:	xor    edx,esi
  4083a5:	add    edx,edi
  4083a7:	imul   edx,ebx
  4083aa:	mov    ebx,DWORD PTR [ebp-0x8]
  4083ad:	mov    BYTE PTR [edx+ebx*1],al
  4083b0:	mov    eax,DWORD PTR [ebp-0x30]
  4083b3:	mov    edx,DWORD PTR [ebp-0xc]
  4083b6:	xor    eax,esi
  4083b8:	add    eax,edi
  4083ba:	imul   eax,edx
  4083bd:	mov    edx,DWORD PTR [ebp-0x8]
  4083c0:	mov    al,BYTE PTR [eax+edx*1]
  4083c3:	mov    BYTE PTR [ebp-0x1],al
  4083c6:	mov    eax,DWORD PTR [ebp-0x30]
  4083c9:	mov    edx,DWORD PTR [ebp-0xc]
  4083cc:	xor    eax,esi
  4083ce:	add    eax,edi
  4083d0:	imul   eax,edx
  4083d3:	mov    edx,DWORD PTR [ebp-0x28]
  4083d6:	xor    edx,esi
  4083d8:	add    eax,edx
  4083da:	mov    edx,DWORD PTR [ebp-0x8]
  4083dd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  4083e5:	mov    edx,DWORD PTR [ebp-0x50]
  4083e8:	xor    edx,esi
  4083ea:	lea    eax,[edx+eax*1+0x3272f1]
  4083f1:	movzx  edx,BYTE PTR [ebp-0x1]
  4083f5:	xor    edx,eax
  4083f7:	mov    BYTE PTR [ebp-0x1],dl
  4083fa:	mov    al,BYTE PTR [ebp-0x1]
  4083fd:	mov    edx,DWORD PTR [ebp-0x30]
  408400:	mov    ebx,DWORD PTR [ebp-0xc]
  408403:	xor    edx,esi
  408405:	add    edx,edi
  408407:	imul   edx,ebx
  40840a:	mov    ebx,DWORD PTR [ebp-0x8]
  40840d:	mov    BYTE PTR [edx+ebx*1],al
  408410:	mov    eax,DWORD PTR [ebp-0x40]
  408413:	mov    edx,DWORD PTR [ebp-0x28]
  408416:	xor    eax,esi
  408418:	xor    edx,esi
  40841a:	add    eax,edi
  40841c:	add    edx,edi
  40841e:	imul   eax,edx
  408421:	add    eax,DWORD PTR [ebp-0xc]
  408424:	mov    DWORD PTR [ebp-0xc],eax
  408427:	mov    eax,DWORD PTR [ebp-0xc]
  40842a:	mov    edx,DWORD PTR [ebp-0x18]
  40842d:	cmp    edx,eax
  40842f:	jb     0x408342
  408435:	mov    eax,DWORD PTR [ebp-0x28]
  408438:	mov    edx,DWORD PTR [ebp-0x18]
  40843b:	xor    eax,esi
  40843d:	add    eax,edi
  40843f:	imul   eax,edx
  408442:	mov    edx,DWORD PTR [ebp-0x1c]
  408445:	xor    edx,esi
  408447:	add    edx,edi
  408449:	or     eax,edx
  40844b:	mov    edx,DWORD PTR [ebp-0x20]
  40844e:	xor    edx,esi
  408450:	add    eax,edx
  408452:	mov    edx,DWORD PTR [ebp-0x20]
  408455:	xor    edx,esi
  408457:	add    eax,edx
  408459:	mov    edx,DWORD PTR [ebp-0x10]
  40845c:	lea    eax,[eax+edx*1+0x64e5e2]
  408463:	jmp    0x408477
  408468:	mov    eax,DWORD PTR [ebp-0x20]
  40846b:	mov    edx,DWORD PTR [ebp-0x10]
  40846e:	xor    eax,esi
  408470:	lea    eax,[eax+edx*1+0x3272f1]
  408477:	mov    DWORD PTR [ebp-0x10],eax
  40847a:	jmp    0x40828f
  40847f:	mov    ebx,DWORD PTR [ebp-0x3c]
  408482:	mov    eax,DWORD PTR [ebp+0xc]
  408485:	xor    eax,esi
  408487:	lea    ecx,[ecx+eax*1+0x3272f1]
  40848e:	lea    eax,[ecx-0x3272f1]
  408494:	xor    eax,esi
  408496:	cmp    eax,0xf89c95a5
  40849b:	jne    0x408233
  4084a1:	dec    DWORD PTR [ebp-0x34]
  4084a4:	jne    0x408227
  4084aa:	mov    eax,DWORD PTR [ebp+0x8]
  4084ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4084b0:	mov    edx,DWORD PTR [ebp+0x8]
  4084b3:	xor    ecx,esi
  4084b5:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  4084bc:	xor    eax,esi
  4084be:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  4084c5:	xor    edx,esi
  4084c7:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  4084ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4084d1:	xor    ecx,esi
  4084d3:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	add    eax,edi
  4084e1:	pop    edi
  4084e2:	pop    esi
  4084e3:	pop    ebx
  4084e4:	leave  
  4084e5:	ret    0x8
  4084e8:	xor    eax,eax
  4084ea:	and    DWORD PTR ds:0x42a2f6,0x42a2fa
  4084f4:	inc    eax
  4084f5:	ret    
  4084f6:	push   ebp
  4084f7:	mov    ebp,esp
  4084f9:	sub    esp,0x38
  4084fc:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  408503:	push   ebx
  408504:	mov    DWORD PTR ds:0x42a29a,0x1c
  40850e:	cmp    DWORD PTR ds:0x42a29a,0x0
  408515:	je     0x408551
  40851b:	cmp    DWORD PTR ds:0x42a29a,0x21
  408522:	jg     0x408551
  408528:	jmp    0x40853e
  40852d:	push   DWORD PTR [ebp-0x28]
  408530:	push   0x42a2b2
  408535:	push   DWORD PTR [ebp-0x18]
  408538:	call   DWORD PTR ds:0x42a3ee
  40853e:	xor    eax,eax
  408540:	xor    eax,DWORD PTR ds:0x42a29a
  408546:	dec    eax
  408547:	mov    ds:0x42a29a,eax
  40854c:	jmp    0x40850e
  408551:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  408558:	and    DWORD PTR ds:0x42a292,ebx
  40855e:	mov    eax,DWORD PTR [ebp-0x4]
  408561:	push   esi
  408562:	mov    esi,0x75108aa
  408567:	sub    DWORD PTR ds:0x42a28a,0x606e
  408571:	xor    eax,esi
  408573:	push   edi
  408574:	mov    edi,0x3272f1
  408579:	add    eax,edi
  40857b:	add    DWORD PTR ds:0x42a28e,0x42a2ae
  408585:	mov    DWORD PTR [ebp-0x1c],eax
  408588:	mov    eax,DWORD PTR [ebp+0x14]
  40858b:	xor    DWORD PTR ds:0x42a2de,0x42a302
  408595:	test   eax,eax
  408597:	je     0x4085af
  40859d:	mov    eax,DWORD PTR [ebp+0x14]
  4085a0:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR [ebp-0x1c],eax
  4085af:	mov    ebx,DWORD PTR ds:0x42a256
  4085b5:	and    DWORD PTR ds:0x42a2e6,ebx
  4085bb:	mov    eax,DWORD PTR [ebp-0x4]
  4085be:	xor    eax,esi
  4085c0:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  4085ca:	add    eax,edi
  4085cc:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  4085d6:	mov    DWORD PTR [ebp-0x8],eax
  4085d9:	mov    eax,DWORD PTR [ebp-0xc]
  4085dc:	dec    DWORD PTR ds:0x42a2be
  4085e2:	xor    eax,esi
  4085e4:	add    eax,edi
  4085e6:	and    DWORD PTR ds:0x42a2be,0x0
  4085f0:	jmp    0x408602
  4085f5:	mov    ebx,DWORD PTR ds:0x42a2be
  4085fb:	inc    ebx
  4085fc:	mov    DWORD PTR ds:0x42a2be,ebx
  408602:	cmp    DWORD PTR ds:0x42a2be,0x13
  408609:	jae    0x408650
  40860f:	cmp    DWORD PTR ds:0x42a2be,0x4
  408616:	jb     0x408650
  40861c:	jmp    0x408631
  408621:	push   0x68db
  408626:	push   0x42a266
  40862b:	call   DWORD PTR ds:0x42a3f2
  408631:	cmp    DWORD PTR ds:0x42a2be,0x3
  408638:	jne    0x40864b
  40863e:	mov    ebx,DWORD PTR ds:0x42a2be
  408644:	inc    ebx
  408645:	mov    DWORD PTR ds:0x42a2be,ebx
  40864b:	jmp    0x4085f5
  408650:	mov    DWORD PTR [ebp-0x24],eax
  408653:	mov    ebx,DWORD PTR ds:0x42a316
  408659:	mov    ebx,DWORD PTR [ebx]
  40865b:	xor    DWORD PTR ds:0x42a2ae,ebx
  408661:	mov    eax,DWORD PTR [ebp-0x4]
  408664:	mov    DWORD PTR ds:0x42a2fa,0x14
  40866e:	cmp    DWORD PTR ds:0x42a2fa,0x0
  408675:	je     0x4086aa
  40867b:	cmp    DWORD PTR ds:0x42a2fa,0x16
  408682:	jbe    0x4086aa
  408688:	jmp    0x408698
  40868d:	push   0x42a256
  408692:	call   DWORD PTR ds:0x42a3f6
  408698:	mov    ebx,DWORD PTR ds:0x42a2fa
  40869e:	dec    ebx
  40869f:	mov    DWORD PTR ds:0x42a2fa,ebx
  4086a5:	jmp    0x40866e
  4086aa:	xor    eax,esi
  4086ac:	movzx  ebx,BYTE PTR ds:0x42a2aa
  4086b3:	adc    ebx,DWORD PTR ds:0x42a2de
  4086b9:	mov    DWORD PTR ds:0x42a2aa,ebx
  4086bf:	add    eax,edi
  4086c1:	mov    DWORD PTR ds:0x42a29e,0x16
  4086cb:	cmp    DWORD PTR ds:0x42a29e,0x0
  4086d2:	je     0x408713
  4086d8:	cmp    DWORD PTR ds:0x42a29e,0x1e
  4086df:	jle    0x408713
  4086e5:	jmp    0x4086ff
  4086ea:	push   0x8495
  4086ef:	push   0x42a2a2
  4086f4:	push   0x13ea
  4086f9:	call   DWORD PTR ds:0x42a3fa
  4086ff:	xor    ebx,ebx
  408701:	add    ebx,DWORD PTR ds:0x42a29e
  408707:	dec    ebx
  408708:	mov    DWORD PTR ds:0x42a29e,ebx
  40870e:	jmp    0x4086cb
  408713:	mov    DWORD PTR [ebp-0x30],eax
  408716:	sub    DWORD PTR ds:0x42a2b2,0x244c
  408720:	mov    ebx,DWORD PTR [ebp-0x4]
  408723:	xor    ebx,esi
  408725:	neg    DWORD PTR ds:0x42a2f6
  40872b:	add    ebx,edi
  40872d:	and    DWORD PTR ds:0x42a2ba,0x0
  408737:	xor    eax,eax
  408739:	or     eax,DWORD PTR ds:0x42a2ba
  40873f:	inc    eax
  408740:	mov    ds:0x42a2ba,eax
  408745:	cmp    DWORD PTR ds:0x42a2ba,0x6
  40874c:	jg     0x408791
  408752:	jmp    0x40876c
  408757:	push   0x385f
  40875c:	push   0x7a18
  408761:	push   0x5bac
  408766:	call   DWORD PTR ds:0x42a402
  40876c:	cmp    DWORD PTR ds:0x42a2ba,0x5
  408773:	jne    0x408784
  408779:	mov    eax,ds:0x42a2ba
  40877e:	inc    eax
  40877f:	mov    ds:0x42a2ba,eax
  408784:	cmp    DWORD PTR ds:0x42a2ba,0x13
  40878b:	jb     0x408737
  408791:	mov    eax,DWORD PTR [ebp-0x24]
  408794:	add    DWORD PTR ds:0x42a27e,0x42a26e
  40879e:	sub    eax,edi
  4087a0:	lea    ecx,[ebx-0x3272f1]
  4087a6:	xor    eax,esi
  4087a8:	sbb    DWORD PTR ds:0x42a286,0x7a3b
  4087b2:	jmp    0x40ab40
  4087b7:	inc    esp
  4087b8:	arpl   WORD PTR [esi+esi*8],di
  4087bb:	and    al,0x96
  4087bd:	xchg   ch,cl
  4087bf:	sahf   
  4087c0:	pushf  
  4087c1:	ja     0x4087a5
  4087c3:	jae    0x408785
  4087c5:	pop    es
  4087c6:	in     eax,dx
  4087c7:	iret   
  4087c8:	adc    al,0x83
  4087ca:	or     DWORD PTR [esi+ebx*2],0xffffff83
  4087ce:	sbb    DWORD PTR [esi-0x425872cd],0x1
  4087d5:	scas   eax,DWORD PTR es:[edi]
  4087d6:	jno    0x4087f2
  4087d8:	jp     0x4087fb
  4087da:	mov    ah,0x24
  4087dc:	int3   
  4087dd:	fs or  eax,0xd5646758
  4087e3:	xor    DWORD PTR [esi+ecx*8],eax
  4087e6:	xchg   al,ch
  4087e8:	sub    edx,DWORD PTR [ebx-0x56d46566]
  4087ee:	(bad)  [ebp+0x48]
  4087f1:	mov    ebx,0x7fa858ae
  4087f6:	rcr    BYTE PTR [edx],0xcb
  4087f9:	js     0x4087b5
  4087fb:	fisttp QWORD PTR [ebp-0x721fe71f]
  408801:	popf   
  408802:	xor    BYTE PTR [eax+0x4f45e3b2],bh
  408808:	aad    0x32
  40880a:	sub    eax,0xf0a44455
  40880f:	hlt    
  408810:	sbb    al,0x4d
  408812:	scas   al,BYTE PTR es:[edi]
  408813:	aad    0x18
  408815:	push   edi
  408816:	mov    bl,0x7d
  408818:	sti    
  408819:	pusha  
  40881a:	iret   
  40881b:	jp     0x4087f1
  40881d:	clc    
  40881e:	mov    ch,dl
  408820:	fld    DWORD PTR [ebx+edi*2]
  408823:	xchg   DWORD PTR [eax-0x57],esp
  408826:	lock mov ebx,0xc79776a9
  40882c:	mov    ch,0x9c
  40882e:	je     0x40885d
  408830:	xchg   esi,eax
  408831:	je     0x408847
  408833:	shl    edx,0x2
  408836:	div    BYTE PTR [edi+0x5a]
  408839:	lods   eax,DWORD PTR ds:[esi]
  40883a:	mov    gs,WORD PTR [ecx-0x20]
  40883d:	mov    ah,0x41
  40883f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408840:	or     ebx,DWORD PTR [ecx+0x547ee50c]
  408846:	dec    esi
  408847:	adc    ecx,DWORD PTR [edi+0x6a10469c]
  40884d:	mov    al,0x38
  40884f:	gs mov cl,0x79
  408852:	ins    DWORD PTR es:[edi],dx
  408853:	jo     0x40887d
  408855:	out    0x1e,al
  408857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408858:	mov    al,0x74
  40885a:	inc    esi
  40885b:	sbb    DWORD PTR [edx+ebp*2+0x67],ebx
  40885f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408860:	jno    0x408871
  408862:	int    0x5
  408864:	aam    0x99
  408866:	add    DWORD PTR [ebx],ebx
  408868:	jns    0x4088c7
  40886a:	gs xchg ecx,eax
  40886c:	imul   ecx,esi,0xfffffff5
  40886f:	add    DWORD PTR [ebp-0x462b7f5],ebx
  408875:	jg     0x408827
  408877:	inc    esi
  408878:	sub    DWORD PTR [ebx-0x7],0x5c
  40887c:	das    
  40887d:	js     0x408829
  40887f:	push   ebx
  408880:	cmp    bh,dh
  408882:	dec    ebx
  408883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408884:	inc    esi
  408885:	cmp    BYTE PTR [edi-0x3fa4cbf1],dh
  40888b:	repz jae 0x40880f
  40888e:	jecxz  0x4088c6
  408890:	arpl   WORD PTR [ebp-0x4f33b84c],bx
  408896:	fsubr  st(7),st
  408898:	inc    esi
  408899:	mov    dh,0x1
  40889b:	push   cs
  40889c:	cmp    BYTE PTR [ebx-0x31],cl
  40889f:	jg     0x408847
  4088a1:	es cmp ch,dh
  4088a4:	sti    
  4088a5:	and    ah,BYTE PTR [edx-0x4a032875]
  4088ab:	adc    al,0xb3
  4088ad:	dec    ebp
  4088ae:	jg     0x4088d2
  4088b0:	idiv   BYTE PTR [ebp-0x6e7e4f8a]
  4088b6:	and    eax,0x9173ea49
  4088bb:	ja     0x408880
  4088bd:	ret    
  4088be:	mov    ss,WORD PTR [ebx+0xa]
  4088c1:	je     0x4088e7
  4088c3:	xchg   edx,eax
  4088c4:	test   al,0xd7
  4088c6:	pop    ss
  4088c7:	shl    esi,1
  4088c9:	into   
  4088ca:	xor    BYTE PTR [edi+0xa89b853],ch
  4088d0:	mov    al,ds:0x37015cf6
  4088d5:	jnp    0x40889e
  4088d7:	or     esi,esi
  4088d9:	mov    cl,0x19
  4088db:	jo     0x40893d
  4088dd:	push   ebp
  4088de:	retf   
  4088df:	adc    al,0x41
  4088e1:	in     al,dx
  4088e2:	add    al,BYTE PTR [ecx-0x51c48a2f]
  4088e8:	mov    WORD PTR [esi],ss
  4088ea:	xchg   ecx,eax
  4088eb:	mov    ebp,0xc4f9bcc5
  4088f0:	mov    edx,DWORD PTR [ebx]
  4088f2:	mov    ch,0xb
  4088f4:	mov    ecx,0xd2e1da69
  4088f9:	outs   dx,DWORD PTR ds:[esi]
  4088fa:	mov    ds:0x526b4b9a,al
  4088ff:	xor    ebp,ebx
  408901:	push   esi
  408902:	ret    0xed4e
  408905:	push   edi
  408906:	cdq    
  408907:	stos   DWORD PTR es:[edi],eax
  408908:	stos   BYTE PTR es:[edi],al
  408909:	xor    al,0xa5
  40890b:	dec    ebx
  40890c:	jo     0x40895d
  40890e:	mov    ds:0xdd0cd4d1,eax
  408913:	fwait
  408914:	push   edx
  408915:	leave  
  408916:	mov    BYTE PTR ds:0x31ee3005,cl
  40891c:	repz daa 
  40891e:	retf   
  40891f:	mov    bh,0x43
  408921:	test   BYTE PTR [edx-0x35],0xc0
  408925:	iret   
  408926:	sar    dl,cl
  408928:	jbe    0x408995
  40892a:	imul   edi,DWORD PTR [eax+0x604c4d5b],0x15
  408931:	cli    
  408932:	jno    0x40897c
  408934:	enter  0x506,0x17
  408938:	out    dx,al
  408939:	or     eax,0x7b4deeb
  40893e:	scas   al,BYTE PTR es:[edi]
  40893f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408940:	inc    esi
  408941:	push   ebp
  408942:	shl    DWORD PTR [edi+esi*8-0x18358102],0xfe
  40894a:	aam    0x62
  40894c:	(bad)  
  40894d:	cld    
  40894e:	fadd   DWORD PTR [edi-0x6]
  408951:	mov    al,ds:0x210edee2
  408956:	inc    edi
  408957:	(bad)  
  408959:	add    al,0x34
  40895b:	mov    WORD PTR [ebx],es
  40895d:	enter  0x95c8,0x6d
  408961:	adc    BYTE PTR [ecx+0x59],ah
  408964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408965:	mov    ah,0xc3
  408967:	imul   ebp,DWORD PTR [eax-0x46ca0825],0x3f219bfe
  408971:	mov    dl,cl
  408973:	out    0xaa,al
  408975:	jmp    0x4d8f:0xd4103b91
  40897c:	add    ebx,DWORD PTR [eax-0x33]
  40897f:	adc    ebx,ebp
  408981:	jb     0x4089bf
  408983:	cmc    
  408984:	xchg   DWORD PTR [ebx-0x56],ecx
  408987:	call   DWORD PTR [edi-0x1b]
  40898a:	xchg   DWORD PTR cs:[ecx],ebx
  40898d:	js     0x4089fd
  40898f:	jge    0x408950
  408991:	cmp    BYTE PTR [ebp+0x77d9a9b4],0xad
  408998:	cmp    DWORD PTR [edi-0x1d1b2329],ecx
  40899e:	sahf   
  40899f:	data16 das 
  4089a1:	and    BYTE PTR [ebx+0x2ea766ee],bh
  4089a7:	fimul  WORD PTR ds:0x500616b2
  4089ad:	dec    edi
  4089ae:	mov    eax,0xedc29067
  4089b3:	xor    bl,BYTE PTR ds:0xc3a42824
  4089b9:	sbb    eax,0x3e6a5d9a
  4089be:	lahf   
  4089bf:	mov    ecx,0x634e29db
  4089c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c5:	and    eax,0x51f30941
  4089ca:	and    al,0xfd
  4089cc:	dec    edx
  4089cd:	or     eax,0x4c326695
  4089d2:	mov    eax,ds:0xfa936b41
  4089d7:	dec    edi
  4089d8:	nop
  4089d9:	push   edi
  4089da:	out    0x10,eax
  4089dc:	cmp    DWORD PTR ds:[edi+0x33],edx
  4089e0:	mov    esi,0x6d553664
  4089e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e6:	dec    ecx
  4089e7:	jge    0x4089e3
  4089e9:	add    DWORD PTR [esi+0x1d9580b4],esp
  4089ef:	test   al,0x69
  4089f1:	sub    dl,al
  4089f3:	sti    
  4089f4:	outs   dx,DWORD PTR ds:[esi]
  4089f5:	loopne 0x4089c0
  4089f7:	call   0xf911:0xade92386
  4089fe:	inc    ebp
  4089ff:	daa    
  408a00:	pop    edi
  408a01:	hlt    
  408a02:	leave  
  408a03:	push   eax
  408a04:	aas    
  408a05:	sbb    ecx,ebp
  408a07:	inc    esi
  408a08:	fcmovnu st,st(5)
  408a0a:	stos   BYTE PTR es:[edi],al
  408a0b:	sbb    al,0x8a
  408a0d:	and    DWORD PTR [edi+ebx*1],esi
  408a10:	mov    ds:0xfcd72dd4,al
  408a15:	mov    WORD PTR [ebp+0x1e],?
  408a18:	out    0xc3,eax
  408a1a:	rcl    DWORD PTR [esi],1
  408a1c:	(bad)
  408a20:	or     esp,0x1c
  408a23:	or     al,ah
  408a25:	lods   al,BYTE PTR ds:[esi]
  408a26:	lods   al,BYTE PTR ds:[esi]
  408a27:	or     BYTE PTR [edx-0x31f83d9d],ch
  408a2d:	and    eax,0x8d724d93
  408a32:	mov    edi,0x5fc1a985
  408a37:	mov    edx,0x2349e3fa
  408a3c:	shl    ch,cl
  408a3e:	verr   WORD PTR ds:0x9a0b8d78
  408a45:	sub    eax,DWORD PTR [esi-0x11]
  408a48:	cs dec esi
  408a4a:	arpl   WORD PTR [eax+0x79],sp
  408a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4e:	into   
  408a4f:	fidivr WORD PTR [edi+0x55]
  408a52:	jge    0x408ad1
  408a54:	push   dx
  408a56:	and    bl,BYTE PTR [eax-0x29ae0f02]
  408a5c:	pop    eax
  408a5d:	sub    BYTE PTR [esi],cl
  408a5f:	xor    dh,BYTE PTR [ecx+0x39]
  408a62:	push   esp
  408a63:	push   cs
  408a64:	mov    ah,0x90
  408a66:	lahf   
  408a67:	cmp    dh,BYTE PTR [ebx-0x6ed6c8ee]
  408a6d:	dec    ecx
  408a6e:	xchg   ecx,eax
  408a6f:	cmc    
  408a70:	jg     0x408a32
  408a72:	jb     0x408a2d
  408a74:	mov    ds:0x802ee25c,al
  408a79:	popa   
  408a7a:	dec    ebx
  408a7b:	adc    BYTE PTR [edx+0x5cd833e8],ah
  408a81:	idiv   DWORD PTR [ebp-0x6b1e3645]
  408a87:	xchg   edi,esi
  408a89:	loopne 0x408afe
  408a8b:	mov    ebp,0xae254a77
  408a90:	and    ebx,DWORD PTR [edi]
  408a92:	push   edx
  408a93:	inc    ecx
  408a94:	xlat   BYTE PTR ds:[ebx]
  408a95:	fucomp st(1)
  408a97:	dec    bh
  408a99:	aam    0x85
  408a9b:	cmp    cl,al
  408a9d:	dec    eax
  408a9e:	clc    
  408a9f:	pusha  
  408aa0:	leave  
  408aa1:	push   ss
  408aa2:	mov    ch,0xe8
  408aa4:	pop    esp
  408aa5:	jnp    0x408a5d
  408aa7:	pop    esi
  408aa8:	das    
  408aa9:	jnp    0x408af1
  408aab:	and    BYTE PTR [edx],0x46
  408aae:	cmp    edx,DWORD PTR [esi]
  408ab0:	dec    eax
  408ab1:	ret    
  408ab2:	stc    
  408ab3:	jecxz  0x408ae5
  408ab5:	sti    
  408ab6:	sub    ebp,ebp
  408ab8:	in     eax,0x78
  408aba:	inc    ecx
  408abb:	push   esi
  408abc:	mov    eax,ds:0x5de787e3
  408ac1:	stc    
  408ac2:	push   ebx
  408ac3:	adc    esi,0x4712f67a
  408ac9:	jne    0x408a85
  408acb:	or     al,0xcd
  408acd:	into   
  408ace:	dec    eax
  408acf:	pop    ss
  408ad0:	into   
  408ad1:	aad    0x30
  408ad3:	gs in  al,0x77
  408ad6:	ins    BYTE PTR es:[edi],dx
  408ad7:	lock or dh,al
  408ada:	into   
  408adb:	xchg   esp,eax
  408adc:	les    ebx,FWORD PTR [edi-0x2a]
  408adf:	sbb    al,0xa6
  408ae1:	mov    BYTE PTR [ebx],bl
  408ae3:	pop    ebp
  408ae4:	sbb    DWORD PTR [ecx],edx
  408ae6:	sbb    al,0x9d
  408ae8:	inc    esi
  408ae9:	pop    ebx
  408aea:	loope  0x408ade
  408aec:	ret    
  408aed:	adc    al,0x81
  408aef:	xor    edx,esi
  408af1:	or     DWORD PTR [ecx],0xd7ac43a8
  408af7:	jb     0x408a90
  408af9:	fistp  QWORD PTR [edx+0xc2ba354]
  408aff:	push   ss
  408b00:	and    BYTE PTR [ebp-0x37e1020d],dh
  408b06:	sub    BYTE PTR [ebx+0x4f],al
  408b09:	xor    BYTE PTR [edi],al
  408b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b0c:	unpckhps xmm4,XMMWORD PTR [edx+0x185ff42f]
  408b13:	inc    ecx
  408b14:	cmp    eax,0x5141eef3
  408b19:	cmc    
  408b1a:	add    BYTE PTR [eax+0x53d794b6],cl
  408b20:	pop    ecx
  408b21:	data16 xor al,0x11
  408b24:	jl     0x408ba2
  408b26:	mov    dl,0xe8
  408b28:	jl     0x408b02
  408b2a:	(bad)  
  408b2b:	adc    ch,dh
  408b2d:	mov    WORD PTR [edx-0x3c],ds
  408b30:	sub    DWORD PTR [ecx+edi*2],eax
  408b33:	xchg   edx,eax
  408b34:	stos   BYTE PTR es:[edi],al
  408b35:	int3   
  408b36:	add    DWORD PTR [edx+0x39],edx
  408b39:	fdivr  st,st(1)
  408b3b:	add    ecx,DWORD PTR [edi-0x68]
  408b3e:	icebp  
  408b3f:	not    DWORD PTR [esi]
  408b41:	std    
  408b42:	fadd   QWORD PTR ds:0x15bd11bf
  408b48:	nop
  408b49:	dec    esi
  408b4a:	call   0x9ca167c7
  408b4f:	std    
  408b50:	ficom  DWORD PTR [ebx-0x35cad133]
  408b56:	outs   dx,DWORD PTR ds:[esi]
  408b57:	das    
  408b58:	sbb    al,0x4
  408b5a:	mov    ebp,0xa4682b93
  408b5f:	cli    
  408b60:	cs pop es
  408b62:	mov    cl,0x78
  408b64:	cmp    bl,cl
  408b66:	mov    al,ds:0xa27f074d
  408b6b:	jl     0x408b6d
  408b6d:	mov    ecx,0x8dfc4100
  408b72:	imul   ecx,DWORD PTR [ebp-0x6883879f],0xb2e8345c
  408b7c:	add    eax,0x3e63fd31
  408b81:	punpckhdq mm2,QWORD PTR [esi-0x9]
  408b85:	mov    al,ds:0xadd38c74
  408b8a:	add    al,0x3c
  408b8c:	aam    0x99
  408b8e:	jo     0x408b40
  408b90:	mov    esi,0x75c11e36
  408b95:	adc    al,0xa9
  408b97:	and    bh,dh
  408b99:	popa   
  408b9a:	push   0x4e95c49a
  408b9f:	xor    esi,esp
  408ba1:	repnz dec esi
  408ba3:	neg    BYTE PTR ds:0x16381bb0
  408ba9:	adc    cl,0x94
  408bac:	repz add BYTE PTR [esi+0x6ecae138],ah
  408bb3:	push   es
  408bb4:	pop    eax
  408bb5:	and    eax,0xc4b54426
  408bba:	call   0x4bd2ab3a
  408bbf:	test   eax,0x8afef6c8
  408bc4:	push   eax
  408bc5:	sahf   
  408bc6:	add    ebp,DWORD PTR [edx]
  408bc8:	in     eax,dx
  408bc9:	and    dh,dl
  408bcb:	pop    ds
  408bcc:	inc    esp
  408bcd:	ja     0x408bb9
  408bcf:	adc    DWORD PTR [ecx],0x543d0e9
  408bd5:	adc    DWORD PTR ds:0xcb48b2cc,ebx
  408bdb:	pushf  
  408bdc:	ins    BYTE PTR es:[edi],dx
  408bdd:	ds pop esi
  408bdf:	mov    edx,0x3050a9ff
  408be4:	lahf   
  408be5:	pop    es
  408be6:	in     eax,0x17
  408be8:	sub    BYTE PTR [ecx],ah
  408bea:	pop    ebx
  408beb:	mov    ebp,0x2933eeaf
  408bf0:	dec    ebx
  408bf1:	cmp    eax,0x362ad089
  408bf6:	sub    al,0x6f
  408bf8:	pop    ss
  408bf9:	sar    BYTE PTR [esi],cl
  408bfb:	or     al,0xac
  408bfd:	jno    0x408c66
  408bff:	lea    esi,[eax-0x626dcb38]
  408c05:	xchg   esi,eax
  408c06:	test   dh,bh
  408c08:	(bad)  
  408c09:	fild   QWORD PTR [eax-0x61]
  408c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c0d:	adc    eax,0x4808d072
  408c12:	div    DWORD PTR [edi+edi*4]
  408c15:	and    dl,al
  408c17:	into   
  408c18:	cmp    al,0x40
  408c1a:	xor    ebp,DWORD PTR [edx+0x5d2649ad]
  408c20:	(bad)  
  408c21:	push   esp
  408c22:	mov    eax,ds:0x36428a94
  408c27:	nop
  408c28:	in     al,dx
  408c29:	push   esp
  408c2a:	jmp    0x249098b9
  408c2f:	stc    
  408c30:	(bad)  
  408c31:	into   
  408c32:	cmp    eax,0x35f2cce4
  408c38:	and    eax,0xf06e5af
  408c3d:	pop    es
  408c3e:	fsubr  QWORD PTR [eax]
  408c40:	cmp    edi,edi
  408c42:	and    dh,BYTE PTR [eax]
  408c44:	cmp    edi,DWORD PTR [edi+eiz*4+0x61ff948e]
  408c4b:	js     0x408c75
  408c4d:	xchg   ebp,eax
  408c4e:	push   esi
  408c4f:	adc    dl,BYTE PTR [edi+0x6e4138c4]
  408c55:	jp     0x408be2
  408c57:	out    dx,al
  408c58:	mov    dl,0x27
  408c5a:	std    
  408c5b:	push   ecx
  408c5c:	sbb    esp,edi
  408c5e:	je     0x408c97
  408c60:	cdq    
  408c61:	scas   eax,DWORD PTR es:[edi]
  408c62:	fnsave [ecx+0x45107242]
  408c68:	cmc    
  408c69:	push   ebx
  408c6a:	push   es
  408c6b:	clc    
  408c6c:	xchg   ebx,eax
  408c6d:	retf   0x5ca2
  408c70:	dec    esp
  408c71:	test   DWORD PTR ds:0xfe53059a,ecx
  408c77:	lods   eax,DWORD PTR ds:[esi]
  408c78:	sbb    al,0x18
  408c7a:	pop    ss
  408c7b:	pushf  
  408c7c:	(bad)  
  408c7e:	mov    al,0xe3
  408c80:	dec    ecx
  408c81:	jno    0x408c63
  408c83:	jecxz  0x408c1c
  408c85:	loopne 0x408cc1
  408c87:	mov    WORD PTR [eax],?
  408c89:	jl     0x408c73
  408c8b:	das    
  408c8c:	cdq    
  408c8d:	in     eax,0x1a
  408c8f:	xchg   ecx,eax
  408c90:	les    edi,FWORD PTR [ecx-0x15b17bdb]
  408c96:	mov    BYTE PTR [edi+0x59e3ce1a],ah
  408c9c:	shl    BYTE PTR [ecx+edi*2-0x234e65c8],0x78
  408ca4:	call   0x594:0x58b7e236
  408cab:	les    ebx,FWORD PTR [eax+0x37d15bf0]
  408cb1:	xor    eax,0x84df20c1
  408cb6:	fdiv   QWORD PTR [edi+ebx*8-0x80]
  408cba:	test   eax,0x2e701572
  408cbf:	jo     0x408c48
  408cc1:	jbe    0x408c79
  408cc3:	repnz xchg esp,eax
  408cc5:	add    esi,edx
  408cc7:	and    BYTE PTR [ebx],dh
  408cc9:	mov    eax,ds:0x3994dc52
  408cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ccf:	(bad)  
  408cd0:	test   DWORD PTR [eax],0xc0a1805d
  408cd6:	push   ecx
  408cd7:	lods   eax,DWORD PTR ds:[esi]
  408cd8:	adc    esi,DWORD PTR [edx+edi*2+0x59]
  408cdc:	cmp    al,0xd8
  408cde:	rcl    dh,1
  408ce0:	jno    0x408c8d
  408ce2:	ror    BYTE PTR [edx-0x46],0x2
  408ce6:	lds    ecx,FWORD PTR [ecx]
  408ce8:	xchg   BYTE PTR [edx],ch
  408cea:	push   cs
  408ceb:	ret    0xc5
  408cee:	retf   
  408cef:	dec    ecx
  408cf0:	in     eax,dx
  408cf1:	cmp    eax,0x6bfebe4a
  408cf6:	and    al,0xd2
  408cf8:	xchg   esp,eax
  408cf9:	jnp    0x408c82
  408cfb:	pusha  
  408cfc:	outs   dx,DWORD PTR ds:[esi]
  408cfd:	mov    dh,0xc3
  408cff:	ds push esp
  408d01:	add    eax,0x5aee53cc
  408d06:	sbb    dh,BYTE PTR cs:[ebp+0xe]
  408d0a:	ins    DWORD PTR es:[edi],dx
  408d0b:	inc    ebp
  408d0c:	cmp    al,0xc2
  408d0e:	add    bh,ch
  408d10:	mov    cs,eax
  408d12:	pop    esi
  408d13:	cwde   
  408d14:	in     al,dx
  408d15:	(bad)  
  408d16:	add    eax,0x14350f7b
  408d1b:	sbb    BYTE PTR [edx+0x1b],al
  408d1e:	jae    0x408d3d
  408d20:	das    
  408d21:	(bad)  
  408d22:	mov    dl,0x81
  408d24:	out    0x4c,eax
  408d26:	and    ebp,DWORD PTR [ebx-0xf]
  408d29:	push   edx
  408d2a:	pop    edi
  408d2b:	inc    ecx
  408d2c:	je     0x408da3
  408d2e:	fisubr WORD PTR [edi-0x6d]
  408d31:	sbb    ah,BYTE PTR ds:0x9c0c9ce2
  408d37:	cmp    BYTE PTR [ebp-0x344c4eb0],0xee
  408d3e:	mov    ah,BYTE PTR [edx]
  408d40:	or     al,al
  408d42:	jle    0x408da2
  408d44:	mov    edi,0xc203d523
  408d49:	das    
  408d4a:	jae    0x408d14
  408d4c:	cmc    
  408d4d:	pop    ecx
  408d4e:	adc    al,0x6d
  408d50:	sub    BYTE PTR [eax+0x73],dh
  408d53:	sub    edx,DWORD PTR ds:[ebp+0x2fdd768e]
  408d5a:	ror    BYTE PTR [edi+esi*4],1
  408d5d:	sub    al,0x92
  408d5f:	pushf  
  408d60:	pop    ebp
  408d61:	xor    edi,DWORD PTR [esp+eax*4]
  408d64:	les    edi,FWORD PTR [edi-0x62]
  408d67:	sub    al,0xf1
  408d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d6a:	js     0x408d01
  408d6c:	test   eax,0x59f36b9e
  408d71:	fwait
  408d72:	ss int3 
  408d74:	dec    esp
  408d75:	scas   al,BYTE PTR es:[edi]
  408d76:	stos   BYTE PTR es:[edi],al
  408d77:	xor    ch,BYTE PTR [edi-0x13]
  408d7a:	fadd   st,st(6)
  408d7c:	shl    BYTE PTR [ecx-0x2facfd48],1
  408d82:	sti    
  408d83:	dec    ecx
  408d84:	pop    esp
  408d85:	and    BYTE PTR [edx-0xa],bh
  408d88:	sbb    al,0xd5
  408d8a:	cmp    dl,BYTE PTR [edx+ebx*4-0x49a21344]
  408d91:	ds inc ebx
  408d93:	mov    edx,0x3d2dd1e9
  408d98:	dec    edi
  408d99:	daa    
  408d9a:	in     al,0xda
  408d9c:	fisubr WORD PTR [ecx]
  408d9e:	aas    
  408d9f:	(bad)  [ecx]
  408da1:	or     DWORD PTR [eax+0x76],esi
  408da4:	xchg   BYTE PTR [eax-0x5a1f5937],ah
  408daa:	cmp    eax,0x2121c9e7
  408daf:	cmp    BYTE PTR [edx-0x76],cl
  408db2:	mov    ah,0x7b
  408db4:	xor    DWORD PTR [esi-0x2ca1d752],ecx
  408dba:	in     al,0xac
  408dbc:	mov    gs,edx
  408dbe:	push   edi
  408dbf:	cmp    BYTE PTR [ebx-0x7193f83b],0x9
  408dc6:	mov    WORD PTR [ecx],ds
  408dc8:	or     esp,DWORD PTR [eax]
  408dca:	into   
  408dcb:	sti    
  408dcc:	faddp  st(6),st
  408dce:	enter  0x414d,0x4d
  408dd2:	lods   eax,DWORD PTR ds:[esi]
  408dd3:	cli    
  408dd4:	cmp    eax,0x4b028545
  408dd9:	sti    
  408dda:	push   0x7a135e7c
  408ddf:	int    0x9a
  408de1:	add    eax,0xa48fd1b9
  408de6:	xchg   ebx,eax
  408de7:	loopne 0x408dc6
  408de9:	push   esi
  408dea:	jmp    0x408e65
  408dec:	mov    bl,0x2f
  408dee:	mov    al,0x35
  408df0:	xor    ah,dh
  408df2:	xchg   BYTE PTR [esp+ebp*4],al
  408df5:	fdiv   QWORD PTR [edi-0x73bb0b45]
  408dfb:	or     cl,BYTE PTR [edx-0x15]
  408dfe:	loopne 0x408e7d
  408e00:	in     al,0x6a
  408e02:	inc    esp
  408e03:	dec    edi
  408e04:	popa   
  408e05:	scas   al,BYTE PTR es:[edi]
  408e06:	jno    0x408e22
  408e08:	pop    es
  408e09:	sub    eax,0xaa8e7b47
  408e0e:	sub    DWORD PTR [eax],esi
  408e10:	mov    edi,edi
  408e12:	cs push es
  408e14:	mov    ebx,0x6f71ddc3
  408e19:	cld    
  408e1a:	dec    ebp
  408e1b:	and    edx,DWORD PTR [ebx-0x30]
  408e1e:	xlat   BYTE PTR ds:[ebx]
  408e1f:	(bad)
  408e22:	aas    
  408e23:	or     dl,BYTE PTR [edi+0x3634bc84]
  408e29:	mov    DWORD PTR [edx+0x18c9cf3c],edx
  408e2f:	stc    
  408e30:	xchg   edi,edx
  408e32:	dec    edi
  408e33:	mov    esp,0xff71e33b
  408e38:	adc    al,0xcb
  408e3a:	leave  
  408e3b:	jae    0x408dff
  408e3d:	fbld   TBYTE PTR [eax]
  408e3f:	sub    cl,BYTE PTR [esi]
  408e41:	ficom  DWORD PTR [esi]
  408e43:	cmc    
  408e44:	aad    0x41
  408e46:	mov    al,0x97
  408e48:	ja     0x408e77
  408e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e4b:	into   
  408e4c:	out    dx,al
  408e4d:	adc    esi,DWORD PTR [ebx]
  408e4f:	(bad)  
  408e53:	test   BYTE PTR [ebp-0x73fede3f],dl
  408e59:	cli    
  408e5a:	in     eax,0xbe
  408e5c:	add    al,0xf0
  408e5e:	dec    eax
  408e5f:	test   eax,0xcbad50ba
  408e64:	sbb    BYTE PTR [ebp-0x65bab633],ah
  408e6a:	push   ebx
  408e6b:	iret   
  408e6c:	repz inc eax
  408e6e:	cld    
  408e6f:	lods   al,BYTE PTR ds:[esi]
  408e70:	icebp  
  408e71:	cmc    
  408e72:	mov    ds:0xc129e575,al
  408e77:	sbb    al,0xa0
  408e79:	in     eax,dx
  408e7a:	xchg   esi,eax
  408e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e7c:	push   esp
  408e7d:	enterw 0xcd48,0xba
  408e82:	cmp    eax,0x1e571219
  408e87:	jle    0x408e17
  408e89:	adc    al,0xcc
  408e8b:	jbe    0x408e9c
  408e8d:	call   0x21fd:0xd0b6b1a0
  408e94:	push   ecx
  408e95:	jmp    0xc8d483f0
  408e9a:	fstp   DWORD PTR ds:0x53b1d9fc
  408ea0:	pop    ds
  408ea1:	mov    al,0x37
  408ea3:	jg     0x408ede
  408ea5:	call   0x3b35c8de
  408eaa:	stos   BYTE PTR es:[edi],al
  408eab:	push   esp
  408eac:	inc    ecx
  408ead:	mov    dh,0x70
  408eaf:	xor    al,dl
  408eb1:	sti    
  408eb2:	mov    al,ds:0xf5a66172
  408eb7:	repnz ds push es
  408eba:	sti    
  408ebb:	stc    
  408ebc:	cs mov ebp,?
  408ebf:	sbb    ebx,DWORD PTR [esi+0xb1a5de5]
  408ec5:	mov    WORD PTR [edx*8-0x28ae23d],es
  408ecc:	dec    edi
  408ecd:	push   ebp
  408ece:	ins    DWORD PTR es:[edi],dx
  408ecf:	cmp    esp,DWORD PTR [edx+0x2c]
  408ed2:	pop    ds
  408ed3:	dec    esp
  408ed4:	test   eax,0x311ed72c
  408ed9:	cmp    al,0xbe
  408edb:	(bad)  
  408edd:	pusha  
  408ede:	aam    0x73
  408ee0:	ss out 0xc,eax
  408ee3:	sub    al,BYTE PTR [eax]
  408ee5:	leave  
  408ee6:	jo     0x408f05
  408ee8:	or     DWORD PTR [edi],esi
  408eea:	jp     0x408f62
  408eec:	jg     0x408e90
  408eee:	mov    bl,0xc7
  408ef0:	push   edi
  408ef1:	shl    BYTE PTR [edi],1
  408ef3:	outs   dx,DWORD PTR ds:[esi]
  408ef4:	jne    0x408f67
  408ef6:	arpl   WORD PTR [edi-0x71c3d7d2],cx
  408efc:	aaa    
  408efd:	push   ds
  408efe:	push   edi
  408eff:	(bad)  
  408f00:	out    dx,eax
  408f01:	add    al,0xd
  408f03:	xor    al,0xbb
  408f05:	rol    BYTE PTR [edi+0x6f59bc6d],0xf0
  408f0c:	(bad)  [eax+eax*8]
  408f0f:	inc    ebp
  408f10:	(bad)  
  408f11:	push   esp
  408f12:	mov    esi,0xbf509f83
  408f17:	xlat   BYTE PTR ds:[ebx]
  408f18:	inc    ebp
  408f19:	jno    0x408efd
  408f1b:	imul   esi,DWORD PTR [esi-0x68],0x188167ef
  408f22:	into   
  408f23:	add    eax,0x806848da
  408f28:	xchg   ecx,eax
  408f29:	jp     0x408f1c
  408f2b:	call   0x531185b6
  408f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f31:	cli    
  408f32:	(bad)  
  408f33:	imul   DWORD PTR [esp+ebx*2+0x546d2631]
  408f3a:	pop    ds
  408f3b:	dec    edx
  408f3c:	cmp    al,BYTE PTR [esi+edi*8-0x65]
  408f40:	jmp    0xea58:0xe5cbfb36
  408f47:	loope  0x408f15
  408f49:	or     al,0x6e
  408f4b:	rcr    al,1
  408f4d:	xchg   ebp,eax
  408f4e:	xchg   ebx,eax
  408f4f:	cwde   
  408f50:	jo     0x408f55
  408f52:	xchg   esp,eax
  408f53:	retf   0xd2cc
  408f56:	popf   
  408f57:	loope  0x408fc4
  408f59:	cwde   
  408f5a:	in     al,0x90
  408f5c:	int3   
  408f5d:	push   edi
  408f5e:	inc    edi
  408f5f:	stos   DWORD PTR es:[edi],eax
  408f60:	div    BYTE PTR [edx-0x3d7aeaa1]
  408f66:	idiv   BYTE PTR [edx-0x15]
  408f69:	and    edx,DWORD PTR [eax]
  408f6b:	enter  0xd77,0x41
  408f6f:	loope  0x408f87
  408f71:	mul    BYTE PTR [ebx-0x3c]
  408f74:	adc    eax,0x9eec12af
  408f79:	fst    QWORD PTR [eax+0x4c00b9e5]
  408f7f:	je     0x408f04
  408f81:	add    eax,0x1815d9ac
  408f86:	jnp    0x408f2e
  408f88:	mov    al,ds:0x75ff3f8c
  408f8d:	bound  ecx,QWORD PTR ds:[esi+0x47]
  408f91:	rol    esp,cl
  408f93:	or     DWORD PTR [edi],ecx
  408f95:	lahf   
  408f96:	sbb    DWORD PTR [ecx+0x3e],ebp
  408f99:	or     eax,0x37a88485
  408f9e:	out    0xa4,al
  408fa0:	ror    edx,0x3a
  408fa3:	ss pop ds
  408fa5:	jne    0x408f9d
  408fa7:	clc    
  408fa8:	in     al,0xd4
  408faa:	pop    eax
  408fab:	shl    DWORD PTR [eax+0x2f],0x76
  408faf:	jns    0x408f67
  408fb1:	jbe    0x409001
  408fb3:	enter  0xc372,0xc9
  408fb7:	cmp    BYTE PTR [eax],bh
  408fb9:	mov    WORD PTR [esi-0x2a],ss
  408fbc:	fbstp  TBYTE PTR [esi]
  408fbe:	mov    edx,0x8795172f
  408fc3:	aam    0x32
  408fc5:	loopne 0x408fdb
  408fc7:	mov    eax,ds:0x1d4961e7
  408fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fcd:	inc    DWORD PTR [esi+esi*2]
  408fd0:	jo     0x408f6a
  408fd2:	adc    al,0x50
  408fd4:	fidiv  DWORD PTR [esi]
  408fd6:	jno    0x408f96
  408fd8:	and    DWORD PTR [esi],edx
  408fda:	or     edi,DWORD PTR [esi+0x1d]
  408fdd:	out    0xa5,al
  408fdf:	(bad)  
  408fe0:	out    dx,al
  408fe1:	jle    0x409012
  408fe3:	sub    bl,ch
  408fe5:	mov    ah,0x69
  408fe7:	imul   ebx,DWORD PTR [ecx-0x74],0x5e53d524
  408fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fef:	sbb    eax,0x6ac62658
  408ff4:	addr16 enter 0x5957,0xc2
  408ff9:	daa    
  408ffa:	aaa    
  408ffb:	popa   
  408ffc:	lea    edi,[ebp+0x6f8b4160]
  409002:	lds    ebp,FWORD PTR [ebx]
  409004:	aas    
  409005:	mov    al,ds:0xa51eec04
  40900a:	in     eax,0x3a
  40900c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40900d:	call   0x67bb:0x36155914
  409014:	inc    ebp
  409015:	test   al,0x84
  409017:	dec    eax
  409018:	imul   esp,edi,0x78
  40901b:	scas   al,BYTE PTR es:[edi]
  40901c:	push   edi
  40901d:	adc    DWORD PTR [edx+0xd],ebx
  409020:	cld    
  409021:	mov    fs,ecx
  409023:	add    DWORD PTR [ecx+eax*8-0x31],0x7cfd3a7d
  40902b:	push   0x4
  40902d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40902e:	jp     0x408fc2
  409030:	test   ecx,esp
  409032:	(bad)  
  409033:	mov    eax,0xbc191d1d
  409038:	cdq    
  409039:	nop
  40903a:	inc    edi
  40903b:	mov    eax,DWORD PTR [ebp+0x69]
  40903e:	cmp    eax,0x37e77c42
  409043:	cmp    al,BYTE PTR [ebx]
  409045:	mov    ch,0x0
  409047:	ds xor eax,0x3e3d584d
  40904d:	sub    al,0xba
  40904f:	adc    edx,DWORD PTR [ecx-0xeba1fc9]
  409055:	push   0x5208966a
  40905a:	or     al,0xa5
  40905c:	test   BYTE PTR [ecx],al
  40905e:	dec    ebx
  40905f:	add    ecx,DWORD PTR ds:0x47790167
  409065:	push   ds
  409066:	add    al,0xb3
  409068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409069:	mov    eax,0x27161870
  40906e:	mov    esp,0xea8b127a
  409073:	out    dx,eax
  409074:	mov    ebx,0x46120153
  409079:	mov    ecx,0xabd777aa
  40907e:	out    0x4,eax
  409080:	mov    eax,0x17605a83
  409085:	int3   
  409086:	retf   
  409087:	pop    ds
  409088:	xchg   ecx,esp
  40908a:	cmp    al,0xeb
  40908c:	xor    al,0xfd
  40908e:	cmp    al,0xd8
  409090:	mov    WORD PTR ds:[eax-0x4ba816ec],?
  409097:	mov    ch,BYTE PTR [ebx]
  409099:	(bad)  
  40909b:	cld    
  40909c:	xlat   BYTE PTR ds:[ebx]
  40909d:	into   
  40909e:	sbb    DWORD PTR [edx-0x6ca378ca],edi
  4090a4:	data16 in al,dx
  4090a6:	cmc    
  4090a7:	jge    0x409111
  4090a9:	sbb    DWORD PTR [esi+0x3c767ad3],ecx
  4090af:	pop    eax
  4090b0:	aam    0x15
  4090b2:	jae    0x4090ab
  4090b4:	mov    esp,edx
  4090b6:	inc    ebp
  4090b7:	rcl    BYTE PTR [edx],cl
  4090b9:	xchg   ebp,eax
  4090ba:	vpcomw xmm6,xmm6,xmm5,0xcd
  4090c0:	arpl   WORD PTR [ebx],dx
  4090c2:	push   esi
  4090c3:	sbb    al,0xb9
  4090c5:	ss out dx,eax
  4090c7:	into   
  4090c8:	in     al,0x62
  4090ca:	das    
  4090cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090cc:	mov    fs,edx
  4090ce:	mov    ds:0x76d659b4,al
  4090d3:	lds    edx,FWORD PTR [edi]
  4090d5:	ds repz jle 0x409086
  4090d9:	imul   esp,DWORD PTR [eax],0x67269aa9
  4090df:	std    
  4090e0:	into   
  4090e1:	jo     0x40907c
  4090e3:	mov    bh,0xf9
  4090e5:	jae    0x4090f3
  4090e7:	dec    BYTE PTR [ebx+0xe]
  4090ea:	mov    esp,0x357ee3d1
  4090ef:	adc    ecx,ebx
  4090f1:	add    BYTE PTR [ebp+0x54a7c4fc],0xdb
  4090f8:	sbb    al,0xa6
  4090fa:	mov    dl,BYTE PTR [esi-0x48a71334]
  409100:	adc    eax,0x67bb143a
  409105:	sub    al,0x8a
  409107:	add    eax,0xbd1aa481
  40910c:	fimul  DWORD PTR [esi+0x5d01443e]
  409112:	in     eax,0xf7
  409114:	mov    ds:0x189f23cb,al
  409119:	mov    ah,0xad
  40911b:	inc    ecx
  40911c:	cmp    DWORD PTR [ebx],eax
  40911e:	mov    edx,eax
  409120:	xchg   esi,eax
  409121:	je     0x4090f0
  409123:	rcl    BYTE PTR [edx],cl
  409125:	fadd   st,st(5)
  409127:	shl    DWORD PTR [ebx],1
  409129:	popf   
  40912a:	fcom   st(0)
  40912c:	shl    DWORD PTR ds:0xff5600ae,cl
  409132:	pop    ecx
  409133:	test   eax,0x354d1b6c
  409138:	rol    eax,0xff
  40913b:	xor    DWORD PTR [ecx],esi
  40913d:	jg     0x409118
  40913f:	mov    ebp,0xd388e355
  409144:	imul   ebp,DWORD PTR [ebx-0x1c0db78c],0xdb5693f0
  40914e:	xor    al,0x2b
  409150:	fistp  WORD PTR [ecx+0x2bdcf6b3]
  409156:	cmp    al,0x30
  409158:	test   al,0x87
  40915a:	sti    
  40915b:	inc    esp
  40915c:	fld    DWORD PTR [ebp-0x31]
  40915f:	and    DWORD PTR [edi-0x42],0x32
  409163:	pop    esi
  409164:	xor    dh,0x9a
  409167:	rcl    DWORD PTR [edx+0x334b530c],1
  40916d:	xchg   DWORD PTR [edx],edi
  40916f:	sub    BYTE PTR [eax-0x2ddb8ae2],cl
  409175:	push   edx
  409176:	mov    eax,ds:0x21e579d5
  40917b:	inc    eax
  40917c:	jecxz  0x4091cf
  40917e:	sbb    cl,dh
  409180:	(bad)  
  409181:	jmp    0x409192
  409183:	inc    ebp
  409184:	mov    dl,0xc0
  409186:	sar    ebx,cl
  409188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409189:	in     al,0xa7
  40918b:	adc    eax,0x333daad3
  409190:	mov    eax,ds:0x6be7a507
  409195:	ror    ah,1
  409197:	inc    ebx
  409198:	cmp    edx,DWORD PTR [eax-0x6c]
  40919b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40919c:	pop    ecx
  40919d:	mov    ds:0xffacfc6e,eax
  4091a2:	daa    
  4091a3:	xor    BYTE PTR [eax-0x92bf4d],dh
  4091a9:	or     al,0x3f
  4091ab:	ss push esi
  4091ad:	lock rcl DWORD PTR [ebp+0x45f06818],cl
  4091b4:	repnz and dh,BYTE PTR [ecx-0x49a762fe]
  4091bb:	ret    0xeff4
  4091be:	outs   dx,DWORD PTR ds:[esi]
  4091bf:	popa   
  4091c0:	cmp    BYTE PTR [eax+0x116f5da3],ch
  4091c6:	and    ebx,DWORD PTR [edi-0x75]
  4091c9:	test   BYTE PTR [edi],bl
  4091cb:	(bad)  
  4091cc:	dec    ecx
  4091cd:	adc    al,ah
  4091cf:	cmp    al,0xe7
  4091d2:	bound  edi,QWORD PTR [ebp-0x504c3729]
  4091d8:	push   esi
  4091d9:	mov    ds:0x318dce8d,al
  4091de:	sbb    esp,0x54c9d135
  4091e4:	pop    eax
  4091e5:	xor    edi,esi
  4091e7:	add    BYTE PTR [edx-0x73],0xdb
  4091eb:	sbb    DWORD PTR [ecx-0x4b],edi
  4091ee:	(bad)  
  4091ef:	pop    edi
  4091f0:	and    dl,BYTE PTR [esp+ecx*1]
  4091f3:	push   0x6d
  4091f5:	cmp    bl,cl
  4091f7:	ror    al,0x7f
  4091fa:	and    edi,eax
  4091fc:	mov    dh,0xb
  4091fe:	pusha  
  4091ff:	jo     0x409249
  409201:	xchg   esp,eax
  409202:	jbe    0x40922b
  409204:	sub    edi,eax
  409206:	jae    0x409283
  409208:	add    al,BYTE PTR [edx]
  40920a:	dec    ebp
  40920b:	ret    
  40920c:	fbld   TBYTE PTR ds:0x136c4805
  409212:	imul   eax,edx,0xffffffc2
  409215:	out    dx,al
  409216:	mov    ch,0xf1
  409218:	out    dx,al
  409219:	pop    ecx
  40921a:	cmp    BYTE PTR [esi-0x7],0x1e
  40921e:	repz dec edx
  409220:	fneni(8087 only) 
  409222:	cmp    DWORD PTR [ecx+0x20],ebx
  409225:	(bad)  
  409226:	mov    eax,0x8dd91f12
  40922b:	shr    cl,0x7d
  40922e:	jne    0x4091c6
  409230:	sahf   
  409231:	outs   dx,DWORD PTR ds:[esi]
  409232:	out    dx,al
  409233:	retf   
  409234:	inc    esi
  409235:	ins    DWORD PTR es:[edi],dx
  409236:	xchg   edi,eax
  409237:	sub    BYTE PTR [ecx+0x43],ch
  40923a:	dec    ecx
  40923b:	rep lods eax,DWORD PTR ds:[esi]
  40923d:	rcl    BYTE PTR ds:0x7bbd415e,1
  409243:	scas   al,BYTE PTR es:[edi]
  409244:	data16 xor BYTE PTR [ecx+0x2079a8bc],cl
  40924b:	inc    edi
  40924c:	mov    DWORD PTR [eax+0x6e],ecx
  40924f:	inc    esp
  409250:	outs   dx,DWORD PTR ds:[esi]
  409251:	adc    esi,DWORD PTR [ebx+eiz*8+0x51]
  409255:	fld    st(7)
  409257:	rol    ch,cl
  409259:	and    DWORD PTR [ebx+0x2e63acf7],0x48
  409260:	cmp    ah,bl
  409262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409263:	dec    eax
  409264:	pop    edx
  409265:	mov    ecx,0x8ff543e2
  40926a:	cmp    BYTE PTR [edx],cl
  40926c:	sbb    bh,al
  40926e:	dec    ebx
  40926f:	sub    DWORD PTR [ebx+0x640949f9],edx
  409275:	jge    0x409293
  409277:	scas   eax,DWORD PTR es:[edi]
  409278:	and    DWORD PTR [ebp-0x5c1af5c0],0xffffffda
  40927f:	xor    cl,BYTE PTR [ecx+esi*4+0x47]
  409283:	mov    al,ds:0xacf15351
  409288:	or     al,0x52
  40928a:	(bad)  
  40928c:	test   eax,0x351eccc4
  409291:	inc    eax
  409292:	adc    dh,BYTE PTR [eax+0x51]
  409295:	int3   
  409296:	jmp    0x3f25cc8f
  40929b:	jp     0x4092cf
  40929d:	sub    BYTE PTR [ecx],ah
  40929f:	in     eax,0x1e
  4092a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a2:	inc    ecx
  4092a3:	sbb    ecx,DWORD PTR [ebp+0x34]
  4092a6:	pop    esp
  4092a7:	rcl    DWORD PTR [edi-0x56],1
  4092aa:	xchg   edx,edi
  4092ac:	mov    ds:0x51453795,eax
  4092b1:	jl     0x4092bd
  4092b3:	pop    ebx
  4092b4:	jno    0x409329
  4092b6:	imul   esp,DWORD PTR [esi-0xa693492],0x6a
  4092bd:	popf   
  4092be:	xor    bh,dl
  4092c0:	in     al,dx
  4092c1:	ficomp DWORD PTR [edi-0x13]
  4092c4:	aas    
  4092c5:	aaa    
  4092c6:	push   ebp
  4092c7:	or     eax,0xbdd25a8e
  4092cc:	popf   
  4092cd:	int3   
  4092ce:	cmp    eax,0xdf68ebe8
  4092d3:	jns    0x40934f
  4092d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d6:	iret   
  4092d7:	xchg   edx,eax
  4092d8:	mov    dh,0x8d
  4092da:	imul   ecx,DWORD PTR [edi+0x67],0xf
  4092de:	repz cdq 
  4092e0:	sub    al,0x99
  4092e2:	sahf   
  4092e3:	out    0x63,al
  4092e5:	out    0x28,eax
  4092e7:	xor    DWORD PTR [edi-0x584b5988],0x11
  4092ee:	repz adc edi,DWORD PTR [edx+ebp*4]
  4092f2:	push   ebx
  4092f3:	je     0x409358
  4092f5:	pop    edx
  4092f6:	mov    ds:0xe4252e9c,al
  4092fb:	mov    eax,?
  4092fd:	sbb    bl,BYTE PTR [ecx+0x54]
  409300:	push   WORD PTR [edi]
  409303:	push   0x3d
  409305:	push   edx
  409306:	fidivr WORD PTR [esi+ecx*4-0x11]
  40930a:	and    ebp,DWORD PTR [ebx+0x49]
  40930d:	adc    dh,BYTE PTR [eax+0x7dc3302e]
  409313:	add    ah,dl
  409315:	or     al,0x28
  409317:	test   DWORD PTR [eax-0x696c06ca],0x35bcb2fa
  409321:	cmp    dh,BYTE PTR [ebp+0x56]
  409324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409325:	pop    eax
  409326:	sub    esp,DWORD PTR [ecx-0x13ccf143]
  40932c:	xchg   ebx,eax
  40932d:	fcom   QWORD PTR [ebx*2-0x6ed06b8d]
  409334:	jmp    0x409337
  409336:	jecxz  0x4092e3
  409338:	adc    al,BYTE PTR [ebx]
  40933a:	jo     0x409336
  40933c:	nop
  40933d:	push   ebx
  40933e:	fistp  DWORD PTR [ebp+esi*4-0x7a736829]
  409345:	idiv   DWORD PTR [esi-0x34a5753c]
  40934b:	(bad)  
  40934c:	in     eax,dx
  40934d:	sub    DWORD PTR [edx-0x1f],ecx
  409350:	pop    edi
  409351:	test   bh,bh
  409353:	or     eax,0x931ee6f
  409358:	or     al,0x25
  40935a:	test   DWORD PTR [ebx+0x6f],eax
  40935d:	inc    esp
  40935e:	popa   
  40935f:	or     DWORD PTR [ecx-0x4a],ecx
  409362:	inc    ebp
  409363:	mov    ebp,0x24d4f1e5
  409368:	push   0xe8b31473
  40936d:	dec    BYTE PTR [ebp+0x8]
  409370:	xor    edx,DWORD PTR fs:[edx-0x4459d891]
  409377:	add    DWORD PTR [edi],0x74
  40937a:	jp     0x4093a7
  40937c:	inc    ebp
  40937d:	idiv   BYTE PTR [edx]
  40937f:	out    dx,al
  409380:	pop    eax
  409381:	outs   dx,DWORD PTR ds:[esi]
  409382:	stos   BYTE PTR es:[edi],al
  409383:	xchg   esp,eax
  409384:	dec    edi
  409385:	jecxz  0x4093db
  409387:	jge    0x409342
  409389:	mov    BYTE PTR [ecx+0x4b8818ad],bl
  40938f:	idiv   esi
  409391:	retf   
  409392:	push   ebx
  409393:	pop    edx
  409394:	outs   dx,BYTE PTR ds:[esi]
  409395:	dec    esp
  409396:	xlat   BYTE PTR ds:[ebx]
  409397:	lock out 0x1b,eax
  40939a:	push   cs
  40939b:	sahf   
  40939c:	pop    ebx
  40939d:	inc    ecx
  40939e:	pushf  
  40939f:	ins    BYTE PTR es:[edi],dx
  4093a0:	mov    ecx,DWORD PTR [ebp+0x6dc48fa2]
  4093a6:	sub    edx,esp
  4093a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093a9:	xor    eax,0x84d5fb3a
  4093ae:	out    0xbe,al
  4093b0:	and    BYTE PTR [esi],bh
  4093b2:	push   0xf12eeb48
  4093b7:	leave  
  4093b8:	mov    cl,0xd4
  4093ba:	lds    ecx,FWORD PTR [esi+0x3e888b07]
  4093c0:	rcr    BYTE PTR [ebx+0x4a3ce9dd],1
  4093c6:	lock xchg esi,eax
  4093c8:	push   0x76914fd3
  4093cd:	adc    ebp,DWORD PTR [ebp-0x5e4f058f]
  4093d3:	or     BYTE PTR [edi+0x46],al
  4093d6:	add    al,cl
  4093d8:	jne    0x4093f7
  4093da:	imul   eax,DWORD PTR [eax+edi*2+0x13221fdc],0xffffffad
  4093e2:	icebp  
  4093e3:	lds    eax,FWORD PTR [esi+ebx*8-0x69]
  4093e7:	cld    
  4093e8:	adc    eax,0x97fab5f4
  4093ed:	mov    eax,ds:0xa05523a1
  4093f2:	or     dl,dl
  4093f4:	add    BYTE PTR [ebx],bl
  4093f6:	inc    ecx
  4093f7:	neg    DWORD PTR [esi-0x5a]
  4093fa:	outs   dx,BYTE PTR ds:[esi]
  4093fb:	dec    esi
  4093fc:	push   esp
  4093fd:	xchg   BYTE PTR [edx+eiz*8],dl
  409400:	push   eax
  409401:	mov    al,ds:0x66006807
  409406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409407:	repnz dec edi
  409409:	push   ecx
  40940a:	jge    0x409405
  40940c:	or     DWORD PTR [edi-0x5c],edx
  40940f:	pop    eax
  409410:	xchg   esi,eax
  409411:	and    bh,bl
  409413:	rol    DWORD PTR [ebp-0x707a2b2e],cl
  409419:	sub    al,0x1a
  40941b:	(bad)  
  40941c:	mov    ebp,0x33e7885e
  409421:	lea    edi,[edx]
  409423:	push   edi
  409424:	lock mov ds:0x7ac9c7ac,eax
  40942a:	or     DWORD PTR [edx-0x3d88aae4],ebp
  409430:	inc    DWORD PTR [edi]
  409432:	mov    ebp,0x251f1cf9
  409437:	fsub   st,st(0)
  409439:	jne    0x409405
  40943b:	lea    ebx,[eax]
  40943d:	cmp    ecx,DWORD PTR [edi+0x434fe8b8]
  409443:	adc    edi,DWORD PTR [ecx]
  409445:	cmp    eax,0x48f8508d
  40944a:	lods   eax,DWORD PTR ds:[esi]
  40944b:	int    0x72
  40944d:	mov    DWORD PTR [eax+0x36],esp
  409450:	pop    esp
  409451:	mov    dh,0x16
  409453:	mov    bh,0xf
  409455:	ja     0x40949a
  409457:	and    BYTE PTR [ebx+edx*8-0x381d330e],ah
  40945e:	sbb    eax,0x702f4130
  409463:	fadd   QWORD PTR [ebp-0x7a]
  409466:	adc    edi,eax
  409468:	or     ah,ch
  40946a:	xor    bl,dh
  40946c:	(bad)  
  40946d:	xchg   ebp,eax
  40946e:	mov    eax,0x8ec15f6f
  409473:	and    eax,0x169eda8c
  409478:	jmp    0xd64:0xc13aa06f
  40947f:	mov    ds:0x649d9b9a,al
  409484:	jo     0x40943b
  409486:	sub    al,0xc2
  409488:	repnz retf 
  40948a:	add    al,0xa7
  40948c:	scas   al,BYTE PTR es:[edi]
  40948d:	jecxz  0x40949a
  40948f:	outs   dx,BYTE PTR ds:[esi]
  409490:	aad    0xff
  409492:	mov    edi,0xc068c9fc
  409497:	sub    DWORD PTR [esi+0x67],ebp
  40949a:	add    al,0x6d
  40949c:	jle    0x4094e4
  40949e:	mov    al,ds:0xe075b6d3
  4094a3:	push   edi
  4094a4:	sbb    BYTE PTR [esi],0xb8
  4094a7:	daa    
  4094a8:	push   ecx
  4094a9:	mov    ch,0xe6
  4094ab:	or     eax,0x37e65fb7
  4094b0:	lods   eax,DWORD PTR ds:[esi]
  4094b1:	sbb    al,0xde
  4094b3:	xchg   esp,eax
  4094b4:	popf   
  4094b5:	dec    ebx
  4094b6:	jp     0x40946f
  4094b8:	es mov bl,0xe7
  4094bb:	stc    
  4094bc:	sbb    WORD PTR [ebp+0x60cc28],si
  4094c3:	mov    dh,0x2a
  4094c5:	mov    dh,0x24
  4094c7:	push   ss
  4094c8:	jle    0x40944e
  4094ca:	mov    esi,0x44d65e33
  4094cf:	sti    
  4094d0:	sti    
  4094d1:	aaa    
  4094d2:	jg     0x40949f
  4094d4:	xor    DWORD PTR [esi],edi
  4094d6:	fsub   st,st(6)
  4094d8:	enter  0xc1f9,0x88
  4094dc:	out    0x88,eax
  4094de:	aam    0x9a
  4094e0:	xlat   BYTE PTR ds:[ebx]
  4094e1:	dec    eax
  4094e2:	sub    BYTE PTR [ebx],bl
  4094e4:	cli    
  4094e5:	push   ebp
  4094e6:	into   
  4094e7:	sub    dh,BYTE PTR [eax]
  4094e9:	mov    DWORD PTR [esp+ecx*8-0x3206778],edi
  4094f0:	daa    
  4094f1:	or     dl,BYTE PTR [edi+0x4a10fa10]
  4094f7:	dec    eax
  4094f8:	fdivrp st(5),st
  4094fa:	(bad)  
  4094fc:	xchg   ecx,eax
  4094fd:	sbb    DWORD PTR [edx+eax*8-0x4c486544],ebp
  409504:	lock std 
  409506:	bnd jge 0x4094b5
  409509:	(bad)  
  40950b:	mov    ebx,0x21a36655
  409510:	inc    edx
  409511:	imul   WORD PTR [ecx+esi*4]
  409515:	int3   
  409516:	add    al,0xbe
  409518:	scas   eax,DWORD PTR es:[edi]
  409519:	in     eax,0x33
  40951b:	mov    dl,bh
  40951d:	(bad)  
  40951e:	push   ds
  40951f:	mov    ebp,0x12591e46
  409524:	shl    DWORD PTR [edi+0x309b0a67],0xc5
  40952b:	cwde   
  40952c:	test   dh,bh
  40952e:	test   dl,dh
  409530:	or     esi,DWORD PTR [edx-0x1a]
  409533:	mov    bl,BYTE PTR [edi+0x6a]
  409536:	cs mov edi,0x7a95b20f
  40953c:	inc    ebp
  40953d:	mov    al,ds:0xee49cec3
  409542:	arpl   WORD PTR [esi-0x5510156a],dx
  409548:	push   ds
  409549:	cs jle 0x4095c0
  40954c:	sbb    ebp,ebx
  40954e:	mov    BYTE PTR [ebp+ebx*2+0x23],dl
  409552:	jg     0x409595
  409554:	dec    ecx
  409555:	lea    edi,ds:0x9903d114
  40955b:	jnp    0x409530
  40955d:	loope  0x409535
  40955f:	sub    esp,eax
  409561:	mov    eax,ds:0x8a01af31
  409566:	lea    edi,[ebp-0x39]
  409569:	aad    0xf5
  40956b:	xor    BYTE PTR [esi-0x61],dh
  40956e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40956f:	stos   DWORD PTR es:[edi],eax
  409570:	inc    eax
  409571:	pop    ss
  409572:	pop    ds
  409573:	into   
  409574:	xor    DWORD PTR [ebp-0x5c55a14a],esp
  40957a:	jg     0x4094fd
  40957c:	sbb    edx,ebx
  40957e:	out    dx,eax
  40957f:	and    DWORD PTR [edi],ecx
  409581:	jecxz  0x409566
  409583:	mov    gs,WORD PTR [edx+ebx*1+0x76a4c550]
  40958a:	fsub   st,st(1)
  40958c:	sub    edi,ebx
  40958e:	dec    edi
  40958f:	jnp    0x4095fc
  409591:	popa   
  409592:	les    esi,FWORD PTR [ecx-0x10]
  409595:	out    dx,eax
  409596:	and    BYTE PTR [edx],bh
  409598:	xor    ah,al
  40959a:	pop    edx
  40959b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959c:	cwde   
  40959d:	fdiv   st(3),st
  40959f:	push   ecx
  4095a0:	xchg   ebp,eax
  4095a1:	jo     0x4095d9
  4095a3:	iret   
  4095a4:	cmc    
  4095a5:	and    DWORD PTR [ebp+0xb],ebp
  4095a8:	stc    
  4095a9:	inc    eax
  4095aa:	or     esp,DWORD PTR [ebx]
  4095ac:	sub    al,BYTE PTR [eax+0x71]
  4095af:	adc    bl,cl
  4095b1:	cmp    al,0xd
  4095b3:	fst    st(3)
  4095b5:	jmp    0x4095cd
  4095b7:	test   al,0xfa
  4095b9:	dec    esi
  4095ba:	iret   
  4095bb:	jmp    0x1b6e4478
  4095c0:	ins    DWORD PTR es:[edi],dx
  4095c1:	(bad)  
  4095c2:	lahf   
  4095c3:	ds in  eax,0x8f
  4095c6:	test   al,0x80
  4095c8:	add    esp,eax
  4095ca:	ret    0x8094
  4095cd:	in     eax,0x3a
  4095cf:	push   ebp
  4095d0:	mov    cl,0xac
  4095d2:	jmp    0xf5d2:0x84618939
  4095d9:	ret    
  4095da:	add    al,0x40
  4095dc:	pop    ecx
  4095dd:	cmp    BYTE PTR [edi+0x77519891],dh
  4095e3:	xchg   edx,eax
  4095e4:	jne    0x4095eb
  4095e6:	mov    ebp,0x74b19aa7
  4095eb:	jmp    0x4095fa
  4095ed:	or     eax,DWORD PTR [ecx-0x77]
  4095f0:	sub    DWORD PTR [ecx+0x73],0xffffff9c
  4095f4:	jle    0x4095c1
  4095f6:	mov    BYTE PTR [edi+0x3a573df3],0x1f
  4095fd:	inc    esi
  4095fe:	jmp    0xd2fd:0xcc7b4b71
  409605:	add    al,0xf2
  409607:	test   BYTE PTR [ebp+0x77386582],0x53
  40960e:	shl    BYTE PTR [eax-0x5a],cl
  409611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409612:	stos   BYTE PTR es:[edi],al
  409613:	popa   
  409614:	jecxz  0x4095cd
  409616:	ds (bad) 
  409618:	jmp    DWORD PTR [ebp-0x73d71af6]
  40961e:	inc    eax
  40961f:	dec    esi
  409620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409621:	jnp    0x4095cb
  409623:	fsubr  DWORD PTR [edi+ecx*4+0x6779ad07]
  40962a:	dec    eax
  40962b:	pushf  
  40962c:	push   eax
  40962d:	xor    al,0xa7
  40962f:	stos   DWORD PTR es:[edi],eax
  409630:	jbe    0x409606
  409632:	popa   
  409633:	fidivr DWORD PTR [ebp+0x3e7e40f2]
  409639:	sti    
  40963a:	sub    BYTE PTR [ecx+0x6],cl
  40963d:	push   es
  40963e:	sahf   
  40963f:	rcl    DWORD PTR [esp+edi*8+0x57],1
  409643:	pop    ebp
  409644:	test   eax,0xb0ef745f
  40964a:	bound  edi,QWORD PTR [esi+ecx*4+0x76a10f52]
  409651:	das    
  409652:	data16 loope 0x409614
  409655:	addr16 add al,0x3
  409658:	(bad)  
  409659:	and    al,BYTE PTR [ecx]
  40965b:	jmp    0xd3567479
  409660:	sub    al,0x6b
  409662:	out    0x75,eax
  409664:	add    eax,0x2bf587ec
  409669:	mov    ds:0xc67025a5,eax
  40966e:	cmc    
  40966f:	mov    cl,0xb4
  409671:	and    BYTE PTR ds:0x508097df,cl
  409677:	push   ss
  409678:	pop    ecx
  409679:	pusha  
  40967a:	mov    ecx,0x39f4f80d
  40967f:	mov    ebx,0xfd8015cc
  409684:	(bad)  
  409686:	neg    DWORD PTR [edx]
  409688:	pushf  
  409689:	mov    DWORD PTR [eax-0x18],ecx
  40968c:	fmul   QWORD PTR ds:0x5d148004
  409692:	test   eax,0x78e23ba
  409697:	cs retf 
  409699:	data16 jb 0x4096ad
  40969c:	mov    ch,ch
  40969e:	jge    0xe9fddc19
  4096a4:	stc    
  4096a5:	(bad)  
  4096a6:	sub    al,0x81
  4096a8:	sub    eax,edx
  4096aa:	sti    
  4096ab:	js     0x4096ab
  4096ad:	hlt    
  4096ae:	cld    
  4096af:	or     al,0x8e
  4096b1:	adc    dh,BYTE PTR [ecx-0x1c]
  4096b4:	mov    DWORD PTR es:[ebx+edx*1+0x70],edx
  4096b9:	test   eax,ecx
  4096bb:	mov    ah,0x41
  4096bd:	jb     0x409643
  4096bf:	mov    ebx,edx
  4096c1:	fcomp  QWORD PTR [edx]
  4096c3:	out    dx,eax
  4096c4:	cmp    cl,ch
  4096c6:	inc    ebp
  4096c7:	jl     0x409699
  4096c9:	inc    eax
  4096ca:	inc    esp
  4096cb:	(bad)  
  4096cc:	push   DWORD PTR [ebx+0x3c]
  4096cf:	mov    al,0x2d
  4096d1:	fsub   st,st(7)
  4096d3:	add    esi,DWORD PTR [esi-0x77]
  4096d6:	outs   dx,DWORD PTR ds:[esi]
  4096d7:	lods   al,BYTE PTR ds:[esi]
  4096d8:	mov    al,0xe9
  4096da:	jl     0x409748
  4096dc:	aas    
  4096dd:	push   ebx
  4096de:	bound  ecx,QWORD PTR [esp+eax*8-0x2d382bdf]
  4096e5:	loopne 0x409694
  4096e7:	pop    ebx
  4096e8:	cmp    dh,BYTE PTR ds:0xa4d0ca88
  4096ee:	jl     0x40971e
  4096f0:	outs   dx,BYTE PTR es:[esi]
  4096f2:	push   ebx
  4096f3:	add    bh,BYTE PTR [edx+edi*2]
  4096f6:	xor    DWORD PTR [eax-0x4c],ebp
  4096f9:	jb     0x4096e1
  4096fb:	or     eax,DWORD PTR [ecx+0x29]
  4096fe:	xor    eax,0xebf9a2a
  409703:	sub    DWORD PTR ss:[ebp+0x7671563],ebx
  40970a:	ins    DWORD PTR es:[edi],dx
  40970b:	cdq    
  40970c:	ja     0x409696
  40970e:	or     esi,esi
  409710:	or     cl,BYTE PTR [edx+0x3f]
  409713:	fstp   QWORD PTR [ecx]
  409715:	adc    al,dh
  409717:	(bad)  
  409718:	sub    DWORD PTR [esi-0x3727f13a],esp
  40971e:	mov    al,0x54
  409720:	xchg   edi,eax
  409721:	fcomi  st,st(1)
  409723:	cmp    eax,ebp
  409725:	sub    DWORD PTR [eax+ecx*1+0x4743c6f],edi
  40972c:	(bad)  
  40972d:	and    eax,0xbb740cea
  409732:	or     al,0xef
  409734:	outs   dx,DWORD PTR ds:[esi]
  409735:	stos   BYTE PTR es:[edi],al
  409736:	retf   0x7bb6
  409739:	out    dx,al
  40973a:	call   0xc2b9ad3
  40973f:	int3   
  409740:	sub    ebx,ebx
  409742:	adc    dh,BYTE PTR ss:[edx-0x7f]
  409746:	test   al,0x3b
  409748:	test   edx,0x12dc2c16
  40974e:	sbb    al,0x3a
  409750:	pop    ebx
  409751:	test   DWORD PTR [edx-0x7d],edx
  409754:	dec    esp
  409755:	rol    cl,0x62
  409758:	add    ah,BYTE PTR [edi+0x0]
  40975b:	pop    edi
  40975c:	ret    0x5695
  40975f:	sbb    BYTE PTR [ebp-0x67],bl
  409762:	into   
  409763:	or     esp,esp
  409765:	jmp    0x4058:0xb5c9870d
  40976c:	xchg   ecx,eax
  40976d:	sar    BYTE PTR [ebp+0x1605cee3],cl
  409773:	ins    BYTE PTR es:[edi],dx
  409774:	sbb    eax,0xdf81aa06
  409779:	sub    BYTE PTR [ebx-0x64bfa9cc],cl
  40977f:	gs cld 
  409781:	les    esp,FWORD PTR [eax+0x6e]
  409784:	in     eax,dx
  409785:	jmp    0x92be23c
  40978a:	push   ds
  40978b:	and    DWORD PTR [edi-0x4108d12c],eax
  409791:	jl     0x409799
  409793:	div    BYTE PTR [ebp+eax*4-0x58808fa5]
  40979a:	call   0x109367af
  40979f:	into   
  4097a0:	xchg   ebx,eax
  4097a1:	adc    esp,DWORD PTR [ebp-0x3a]
  4097a4:	mov    esi,ss
  4097a6:	xchg   ebp,eax
  4097a7:	sub    DWORD PTR [esi-0x18c5789a],0xcc3d1cab
  4097b1:	xor    al,0xab
  4097b3:	push   ds
  4097b4:	out    dx,al
  4097b5:	call   0x56f6:0x16a1ed22
  4097bc:	add    eax,DWORD PTR [esi+0x63b3494b]
  4097c2:	adc    al,0xfb
  4097c4:	jge    0x409815
  4097c6:	mov    al,ds:0x941493db
  4097cb:	push   ebp
  4097cc:	xor    al,0x87
  4097ce:	add    bh,BYTE PTR cs:[ecx-0x18]
  4097d2:	in     eax,dx
  4097d3:	or     eax,DWORD PTR [edx+0x1a055aab]
  4097d9:	pusha  
  4097da:	adc    BYTE PTR ds:0xc460d10,bl
  4097e0:	fisub  WORD PTR [eax+0x2b]
  4097e3:	neg    BYTE PTR [eax]
  4097e5:	jmp    0xc4f209c6
  4097ea:	sahf   
  4097eb:	sbb    al,0x3e
  4097ed:	cmp    cl,BYTE PTR [edi+edi*1]
  4097f0:	xchg   ecx,eax
  4097f1:	test   al,0x3b
  4097f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f4:	repz mov bl,0xa5
  4097f7:	mov    dh,0x27
  4097f9:	pop    ebp
  4097fa:	or     ebx,ebp
  4097fc:	cwde   
  4097fd:	adc    BYTE PTR [edx-0x2b4d7eaa],bh
  409803:	or     DWORD PTR [esi-0x12],ecx
  409806:	push   esp
  409807:	sbb    cl,ch
  409809:	rcr    DWORD PTR [eax],0x1b
  40980c:	ficomp WORD PTR ds:0x33998d3e
  409812:	in     al,0x11
  409814:	mov    eax,ds:0x9649f664
  409819:	sbb    eax,0xffffffe7
  40981c:	sub    al,0xf9
  40981e:	fbstp  TBYTE PTR [edi+0x6ba1f5cc]
  409824:	cwde   
  409825:	jno    0x409880
  409827:	mov    cl,0x7f
  409829:	xchg   ecx,eax
  40982a:	pop    eax
  40982b:	and    cl,0xe
  40982e:	es dec edi
  409830:	mov    ds:0x83a4fd22,al
  409835:	lods   al,BYTE PTR ds:[esi]
  409836:	hlt    
  409837:	shr    BYTE PTR [eax+0x55],1
  40983a:	ficomp WORD PTR [edi-0x269b0b8a]
  409840:	aas    
  409841:	xchg   DWORD PTR [ecx-0x7e],edi
  409844:	xor    edx,DWORD PTR [ebx+0x59]
  409847:	xor    BYTE PTR [ecx-0x75],bh
  40984a:	push   0x36f6189b
  40984f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409850:	jne    0x40986c
  409852:	stos   BYTE PTR es:[di],al
  409854:	xor    cl,bh
  409856:	adc    edx,ebp
  409858:	inc    edx
  409859:	call   DWORD PTR [esi-0x2]
  40985c:	icebp  
  40985d:	aaa    
  40985e:	clc    
  40985f:	adc    al,0x64
  409861:	sbb    ecx,eax
  409863:	jno    0x4097f0
  409865:	call   0x436b:0x877cf855
  40986c:	sbb    bh,al
  40986e:	and    esp,esi
  409870:	cmp    esp,DWORD PTR [edi-0x31802d83]
  409876:	xchg   DWORD PTR [eax],esp
  409878:	cmc    
  409879:	pop    esi
  40987a:	add    eax,DWORD PTR [ecx]
  40987c:	aas    
  40987d:	adc    eax,0x72e4535b
  409882:	add    dl,ah
  409884:	or     BYTE PTR [edi+0x4d],al
  409887:	fstp   QWORD PTR ds:0xe9bb85ba
  40988d:	xchg   edi,eax
  40988e:	scas   eax,DWORD PTR es:[edi]
  40988f:	int3   
  409890:	int3   
  409891:	inc    edi
  409892:	in     al,dx
  409893:	js     0x40988a
  409895:	jno    0x4098d6
  409897:	sbb    eax,0x380c696e
  40989c:	test   BYTE PTR [ecx-0x64],dl
  40989f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a0:	loopne 0x409903
  4098a2:	in     eax,0xd8
  4098a4:	ret    
  4098a5:	adc    al,0x5d
  4098a7:	loopne 0x40983e
  4098a9:	fcomip st,st(6)
  4098ab:	sbb    dl,ah
  4098ad:	mov    WORD PTR ds:0x90e76a85,es
  4098b3:	and    dl,BYTE PTR ds:0x65c00870
  4098b9:	dec    ebp
  4098ba:	and    BYTE PTR [eax-0x667c07c6],ah
  4098c0:	mov    ch,0x8
  4098c2:	inc    eax
  4098c3:	or     BYTE PTR [ecx],dl
  4098c5:	push   0x54aca7f7
  4098ca:	jg     0x4098ea
  4098cc:	js     0x409908
  4098ce:	repz mov ah,0x4b
  4098d1:	in     eax,dx
  4098d2:	aad    0xed
  4098d4:	ds iret 
  4098d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098d7:	jnp    0x409930
  4098d9:	sbb    ebx,DWORD PTR [ebx-0x7da32ce1]
  4098df:	mov    ebp,0xd3a7a54b
  4098e4:	int3   
  4098e5:	fwait
  4098e6:	aam    0x2f
  4098e8:	jnp    0x409892
  4098ea:	jle    0x409947
  4098ec:	shl    BYTE PTR [edx+0x342db277],1
  4098f2:	nop
  4098f3:	inc    ecx
  4098f4:	xor    al,0x2
  4098f6:	enter  0xb85e,0x30
  4098fa:	sbb    DWORD PTR [esp+esi*2+0x293b33f8],edi
  409901:	push   cs
  409902:	dec    esp
  409903:	or     edx,ecx
  409905:	popa   
  409906:	je     0x4098c6
  409908:	mov    edx,0x522da3fe
  40990d:	(bad)  
  40990e:	and    cl,BYTE PTR ds:0x65065818
  409914:	stc    
  409915:	js     0x409976
  409917:	bound  edi,QWORD PTR [ebx-0x7382d601]
  40991d:	jb     0x409976
  40991f:	push   edx
  409920:	test   BYTE PTR [esi+0x74],bl
  409923:	mov    cl,bh
  409925:	cmp    BYTE PTR [esi+0x418a1127],bh
  40992b:	pop    es
  40992c:	add    bh,dl
  40992e:	test   BYTE PTR [edx+0x639d819f],al
  409934:	aad    0xeb
  409936:	and    al,0xcf
  409938:	ins    DWORD PTR es:[edi],dx
  409939:	into   
  40993a:	fstp   TBYTE PTR ds:0x56d49eab
  409940:	pop    ds
  409941:	mul    DWORD PTR [ecx]
  409943:	add    DWORD PTR [eax],ebx
  409945:	dec    esi
  409946:	cmp    eax,0xd817af7f
  40994b:	(bad)
  40994f:	js     0x4098df
  409951:	stos   BYTE PTR es:[edi],al
  409952:	into   
  409953:	fimul  WORD PTR [ebx+0x8]
  409956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409957:	int3   
  409958:	add    esi,DWORD PTR [ebp-0x4]
  40995b:	es into 
  40995d:	sbb    ebx,DWORD PTR [esi+0x5bee0b15]
  409963:	push   ecx
  409964:	lahf   
  409965:	inc    ebp
  409966:	mov    dl,0x6b
  409968:	(bad)  
  409969:	adc    BYTE PTR [edi-0x7278077f],bl
  40996f:	sbb    dl,BYTE PTR [ebx+0x6c05f90]
  409975:	jnp    0x409937
  409977:	lea    ebp,ds:0x3a9dbc46
  40997d:	arpl   cx,bx
  40997f:	xor    ah,BYTE PTR [eax+0x59fd6a9d]
  409985:	sbb    al,0x50
  409987:	jb     0x409933
  409989:	into   
  40998a:	mov    dl,0x41
  40998c:	icebp  
  40998d:	push   ebp
  40998e:	cli    
  40998f:	sbb    DWORD PTR [edi+0x755c5050],ebp
  409995:	dec    ebp
  409996:	and    bl,cl
  409998:	pop    es
  409999:	push   0x4a9aa115
  40999e:	mov    ebp,0x1a7fe579
  4099a3:	mov    ds:0x2deaa79,eax
  4099a8:	aaa    
  4099a9:	push   esp
  4099aa:	jp     0x409937
  4099ac:	pop    esp
  4099ad:	mov    ?,WORD PTR [eax+0x6c]
  4099b0:	pop    esp
  4099b1:	dec    ebp
  4099b2:	out    dx,eax
  4099b3:	adc    eax,DWORD PTR [ecx+0x18]
  4099b6:	out    0x7c,eax
  4099b8:	xor    dl,0x77
  4099bb:	jmp    0x26b5:0x3661f385
  4099c2:	imul   edx,DWORD PTR [ebx],0xec12f5ea
  4099c8:	adc    DWORD PTR [edi-0xb],esp
  4099cb:	add    DWORD PTR [esi-0x43],esp
  4099ce:	sbb    eax,0x899b1c1e
  4099d3:	and    DWORD PTR [ebx-0x2bc7defe],edx
  4099d9:	test   DWORD PTR [ebx+0x52a31a5c],edx
  4099df:	pop    eax
  4099e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e1:	xor    bh,dh
  4099e3:	cwde   
  4099e4:	dec    ecx
  4099e5:	mov    cl,0x95
  4099e7:	push   ebp
  4099e8:	inc    edx
  4099e9:	(bad)  [edx+0x22]
  4099ec:	jno    0x409a3b
  4099ee:	(bad)  
  4099ef:	outs   dx,BYTE PTR ds:[esi]
  4099f0:	packsswb mm3,QWORD PTR ds:0x1ef5eb37
  4099f7:	adc    edi,DWORD PTR [ebx-0x64d12833]
  4099fd:	das    
  4099fe:	aam    0x75
  409a00:	out    dx,eax
  409a01:	js     0x4099a5
  409a03:	jmp    0x18e6:0xdc48933f
  409a0a:	adc    bh,ch
  409a0c:	jae    0x409a47
  409a0e:	sbb    al,0x5b
  409a10:	ficomp WORD PTR ds:0xd70b48cd
  409a16:	jl     0x4099be
  409a18:	(bad)
  409a1c:	xor    dh,BYTE PTR [ecx+ebp*1]
  409a1f:	int    0x81
  409a21:	cmp    BYTE PTR [ebx+0x1fba9167],al
  409a27:	jmp    0x10b4:0x2ca89fc2
  409a2e:	dec    esp
  409a2f:	cs into 
  409a31:	test   BYTE PTR [ebp+0x672df0fe],dh
  409a37:	push   ecx
  409a38:	mov    eax,ds:0xee3bf64b
  409a3d:	pop    ebp
  409a3e:	or     dh,BYTE PTR [ebx]
  409a40:	imul   edi,DWORD PTR [esi+0x50],0x4b
  409a44:	fs aad 0x50
  409a47:	xchg   ebx,eax
  409a48:	sub    ecx,DWORD PTR [ecx+0x61]
  409a4b:	fs out dx,eax
  409a4d:	pop    edx
  409a4e:	lea    ebp,[edi+0x169ffa46]
  409a54:	mov    edi,0x8b31b877
  409a59:	mov    bh,0x5e
  409a5b:	dec    ebp
  409a5c:	and    dl,0xc7
  409a5f:	shl    DWORD PTR [edx],cl
  409a61:	dec    ebp
  409a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a64:	fisttp DWORD PTR [edi]
  409a66:	retf   0xd274
  409a69:	dec    ebp
  409a6a:	adc    eax,0xa89224c0
  409a6f:	jg     0x409ac8
  409a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a72:	fistp  QWORD PTR [ecx-0x31]
  409a75:	ror    DWORD PTR ds:[edx-0x5a],0x1c
  409a7a:	out    0x64,eax
  409a7c:	dec    edi
  409a7d:	out    0x88,eax
  409a7f:	mov    ds:0xaeb758ca,al
  409a84:	mov    bh,0xb5
  409a86:	push   es
  409a87:	jg     0x409b08
  409a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a8a:	cmp    al,0x3b
  409a8c:	inc    edx
  409a8d:	es fwait
  409a8f:	in     al,0x48
  409a91:	std    
  409a92:	sub    ebp,DWORD PTR [eax+0x61a58d43]
  409a98:	sub    DWORD PTR [esi],eax
  409a9a:	fstp   QWORD PTR [ebx]
  409a9c:	inc    ebp
  409a9d:	nop
  409a9e:	aaa    
  409a9f:	or     eax,DWORD PTR [eax-0x148cafb9]
  409aa5:	cmp    eax,0x8df4e334
  409aaa:	call   0x8516:0xe24e6473
  409ab1:	pop    ebp
  409ab2:	repz call DWORD PTR ds:0x3455b7e9
  409ab9:	js     0x409a94
  409abb:	and    al,0x27
  409abd:	push   ecx
  409abe:	push   esp
  409abf:	hlt    
  409ac0:	adc    DWORD PTR [ebp+0x73],ebx
  409ac3:	push   eax
  409ac4:	shr    BYTE PTR [ebx],1
  409ac6:	jmp    0x409a6f
  409ac8:	lahf   
  409ac9:	ins    BYTE PTR es:[edi],dx
  409aca:	mov    ah,0xd5
  409acc:	xor    al,0x15
  409ace:	xchg   esi,eax
  409acf:	fsubr  QWORD PTR [esi]
  409ad1:	das    
  409ad2:	jle    0x409abb
  409ad4:	dec    ebp
  409ad5:	xchg   esi,eax
  409ad6:	and    BYTE PTR [edi+esi*1-0x4b9a1c42],bl
  409add:	ss push 0xffffffac
  409ae0:	jmp    0xcf67:0x9254ccd7
  409ae7:	into   
  409ae8:	sbb    al,0xe8
  409aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aeb:	jbe    0x409b11
  409aed:	sub    ecx,DWORD PTR [ebp-0x36]
  409af0:	pop    edx
  409af1:	mov    edi,0x56e5f80e
  409af6:	das    
  409af7:	xadd   BYTE PTR [eax-0x31],al
  409afb:	shr    ebp,1
  409afd:	pop    esp
  409afe:	sbb    DWORD PTR [ebp+0x55],0xffffffe9
  409b02:	jl     0x409b2b
  409b04:	pop    edx
  409b05:	jne    0x409afc
  409b07:	pop    ebx
  409b08:	cmp    DWORD PTR fs:[ebx],eax
  409b0b:	mov    esp,0x25e7ff54
  409b10:	inc    ebp
  409b11:	xor    bh,BYTE PTR [edx-0x5f780837]
  409b17:	pop    esp
  409b18:	(bad)  
  409b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1a:	and    DWORD PTR [edx+eax*4],esp
  409b1d:	jmp    0x72556a3
  409b22:	sbb    eax,0x55fe8f98
  409b27:	mov    ah,0xba
  409b29:	inc    edx
  409b2a:	aam    0x1e
  409b2c:	jg     0x409b2f
  409b2e:	sbb    eax,0x1d4354a1
  409b33:	jne    0x409b07
  409b35:	or     al,0xd4
  409b37:	shr    BYTE PTR [eax+0x723f1071],cl
  409b3d:	jae    0x409af6
  409b3f:	push   esi
  409b40:	or     al,0xda
  409b42:	jno    0x409ae9
  409b44:	rol    DWORD PTR [esi+0x753980ca],1
  409b4a:	stc    
  409b4b:	ficom  DWORD PTR [esi+0x48943c]
  409b51:	mov    bl,0x3f
  409b53:	xchg   edi,eax
  409b54:	je     0x409bbb
  409b56:	jle    0x409ae1
  409b58:	retf   
  409b59:	sub    al,0x7c
  409b5b:	stos   DWORD PTR es:[edi],eax
  409b5c:	push   ecx
  409b5d:	cmc    
  409b5e:	nop
  409b5f:	jecxz  0x409b06
  409b61:	sbb    BYTE PTR [edi-0x227023af],bl
  409b67:	add    ebp,ebx
  409b69:	shl    BYTE PTR [esi+edi*2],cl
  409b6c:	aad    0x7f
  409b6e:	pop    esi
  409b6f:	mov    ch,0xa6
  409b71:	mov    cs,WORD PTR [ebp+0x76]
  409b74:	popf   
  409b75:	int3   
  409b76:	stos   BYTE PTR es:[edi],al
  409b77:	outs   dx,BYTE PTR ds:[esi]
  409b78:	jp     0x409b22
  409b7a:	mov    esi,0xc9700c44
  409b7f:	or     al,0xa1
  409b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b82:	fwait
  409b83:	sub    eax,0xc1db4b76
  409b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b89:	push   ss
  409b8a:	jmp    0xe91065d9
  409b8f:	loope  0x409be4
  409b91:	das    
  409b92:	and    BYTE PTR [ecx+0x22],cl
  409b95:	icebp  
  409b96:	pushf  
  409b97:	into   
  409b98:	mov    cl,BYTE PTR [ebx-0x752510d3]
  409b9e:	call   0x9761:0x12ca56a6
  409ba5:	mov    ecx,0xe0e04256
  409baa:	das    
  409bab:	dec    ecx
  409bac:	jmp    0x409b6c
  409bae:	mov    cl,0xee
  409bb0:	adc    al,bh
  409bb2:	int    0xd1
  409bb4:	sub    ebx,DWORD PTR gs:[edi]
  409bb7:	xchg   edi,eax
  409bb8:	stos   DWORD PTR es:[edi],eax
  409bb9:	idiv   DWORD PTR [edx-0x71]
  409bbc:	mov    ds:0xb58bbea1,eax
  409bc1:	popa   
  409bc2:	xlat   BYTE PTR ds:[ebx]
  409bc3:	out    dx,al
  409bc4:	mov    esi,DWORD PTR [esi]
  409bc6:	jge    0x409b4d
  409bc8:	xor    DWORD PTR [ebx],ebp
  409bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bcb:	js     0x409bc3
  409bcd:	sbb    edx,DWORD PTR [eax+0x29b544e0]
  409bd3:	sar    DWORD PTR [ebx+eiz*2-0x16547746],0xcc
  409bdb:	fistp  DWORD PTR [ebx+ebp*2]
  409bde:	add    eax,0x7c685559
  409be3:	xor    al,0xb9
  409be5:	add    edi,DWORD PTR [edi+0x79e74cdc]
  409beb:	sbb    dl,BYTE PTR [edi-0x32]
  409bee:	call   DWORD PTR [edi+0x1]
  409bf1:	push   edx
  409bf2:	xchg   edx,eax
  409bf3:	adc    bh,ah
  409bf5:	leave  
  409bf6:	add    eax,DWORD PTR [esi-0x51]
  409bf9:	int    0x2a
  409bfb:	pushf  
  409bfc:	mov    ebx,0x1d32b432
  409c01:	mov    cl,0xb4
  409c03:	sbb    dl,BYTE PTR [eax]
  409c05:	inc    edx
  409c06:	mov    WORD PTR [esi-0x5f49fac9],?
  409c0c:	addr16 xchg esp,eax
  409c0e:	push   0xffffffe2
  409c10:	push   cs
  409c11:	pop    eax
  409c12:	clc    
  409c13:	xor    BYTE PTR [ebp+0x2f],ch
  409c16:	lods   eax,DWORD PTR ds:[esi]
  409c17:	imul   ebp,DWORD PTR [ecx],0x1f
  409c1a:	ins    BYTE PTR es:[edi],dx
  409c1b:	adc    BYTE PTR [ebx+0x39d09bc4],bl
  409c21:	lock xchg ecx,eax
  409c23:	into   
  409c24:	cmp    al,0x80
  409c26:	pop    esp
  409c27:	sub    al,0xb8
  409c29:	adc    al,0x5d
  409c2b:	arpl   WORD PTR [ebp+0xd423b4c],dx
  409c31:	mov    eax,0xf4ec76b8
  409c36:	lahf   
  409c37:	nop
  409c38:	loop   0x409c94
  409c3a:	pushf  
  409c3b:	cmc    
  409c3c:	outs   dx,DWORD PTR ds:[esi]
  409c3d:	scas   eax,DWORD PTR es:[edi]
  409c3e:	adc    eax,0x24270ed0
  409c43:	adc    dl,bl
  409c45:	cmp    ch,BYTE PTR [eax+eax*8+0x53]
  409c49:	lods   al,BYTE PTR ds:[esi]
  409c4a:	in     al,dx
  409c4b:	mov    bl,0x60
  409c4d:	lock mov cl,0x3e
  409c50:	test   BYTE PTR [eax+eiz*4-0x480787b2],0xe3
  409c58:	lea    edx,[edx+0x3a]
  409c5b:	or     bh,bl
  409c5d:	rcr    bh,0x81
  409c60:	and    bl,BYTE PTR [edi+ebx*8+0x33f76270]
  409c67:	shl    DWORD PTR [edx],1
  409c69:	xor    BYTE PTR [eax+0x49],0x76
  409c6d:	xchg   ebp,eax
  409c6e:	add    BYTE PTR [eax],ch
  409c70:	je     0x409cf0
  409c72:	aas    
  409c73:	sub    BYTE PTR ds:0xed9019b0,bl
  409c79:	fwait
  409c7a:	inc    edx
  409c7b:	shl    bl,0x94
  409c7e:	adc    DWORD PTR [edx+0x55663407],esp
  409c84:	xor    eax,0xd3c3425c
  409c89:	mov    bl,0x9c
  409c8b:	pop    edi
  409c8c:	pop    esp
  409c8d:	(bad)  
  409c8e:	ficom  WORD PTR [eax+eax*1-0x60]
  409c92:	adc    esp,DWORD PTR [eax+eax*2]
  409c95:	mov    al,ds:0x187e1fe0
  409c9a:	in     eax,0xc6
  409c9c:	push   edx
  409c9d:	(bad)  
  409c9e:	mov    ebx,0x8545c9e7
  409ca3:	mov    cl,0xb0
  409ca5:	push   0xe0360dc6
  409caa:	fdivr  st,st(1)
  409cac:	clc    
  409cad:	ret    
  409cae:	pop    eax
  409caf:	sbb    BYTE PTR [ecx+0x4c666964],dh
  409cb5:	push   ebx
  409cb6:	inc    ebx
  409cb7:	mov    al,ds:0x8c5ec601
  409cbc:	inc    edi
  409cbd:	cmp    al,0x73
  409cbf:	jmp    0xcef0b924
  409cc4:	mov    ch,0xd7
  409cc6:	and    al,0x74
  409cc8:	ins    DWORD PTR es:[edi],dx
  409cc9:	frstpm(287 only) 
  409ccb:	out    0xf0,ax
  409cce:	mov    cl,0xe6
  409cd0:	jle    0x409ce2
  409cd2:	fild   WORD PTR [esi-0xd63eb1a]
  409cd8:	jle    0x409ce7
  409cda:	enter  0xe5fd,0xc
  409cde:	push   esi
  409cdf:	xchg   ebp,eax
  409ce0:	xchg   ebx,eax
  409ce1:	push   ecx
  409ce2:	imul   esi,DWORD PTR [esi+0x7131ee5e],0x61020105
  409cec:	in     eax,dx
  409ced:	adc    al,0xed
  409cef:	outs   dx,BYTE PTR ds:[esi]
  409cf0:	sti    
  409cf1:	cld    
  409cf2:	mov    al,ds:0xe436aba2
  409cf7:	mov    edi,0x30a8db76
  409cfc:	clc    
  409cfd:	adc    esi,DWORD PTR [edx]
  409cff:	loopne 0x409d57
  409d01:	clc    
  409d02:	lods   al,BYTE PTR ds:[esi]
  409d03:	xor    BYTE PTR [eax+0x16c67dac],bl
  409d09:	add    eax,0xfffffffa
  409d0c:	inc    edx
  409d0d:	in     al,0xdd
  409d0f:	jae    0x409d87
  409d11:	jo     0x409d8a
  409d13:	cmp    eax,0x62ee4750
  409d18:	stos   DWORD PTR es:[edi],eax
  409d19:	add    esi,edi
  409d1b:	imul   eax,DWORD PTR [eax-0x74],0xffffff8b
  409d1f:	mov    eax,ebp
  409d21:	dec    ebx
  409d22:	xchg   bl,bl
  409d24:	mov    eax,ds:0xaadfd683
  409d29:	jne    0x409d16
  409d2b:	lods   eax,DWORD PTR ds:[esi]
  409d2c:	mov    dh,0xfc
  409d2e:	cmp    al,0x29
  409d30:	imul   ebx,DWORD PTR [esi+0x2c],0xdbc50896
  409d37:	jmp    0x409cd3
  409d39:	dec    edi
  409d3a:	add    eax,0xd7b0d85d
  409d3f:	jecxz  0x409d95
  409d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d42:	je     0x409d3f
  409d44:	and    ah,BYTE PTR [eax-0x7a291561]
  409d4a:	adc    al,0x4a
  409d4c:	xor    esp,DWORD PTR [esi+0x2c]
  409d4f:	pop    esp
  409d50:	ror    DWORD PTR [eax-0x990ba34],1
  409d56:	fwait
  409d57:	call   0xf17c:0x440e4825
  409d5e:	adc    BYTE PTR [ebx+esi*4],0x1e
  409d62:	cs add ecx,esp
  409d65:	mov    ch,0x1b
  409d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d68:	xchg   ebp,eax
  409d69:	sub    bl,BYTE PTR [esi]
  409d6b:	dec    ebx
  409d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6d:	mov    al,BYTE PTR [eax]
  409d6f:	pop    ds
  409d70:	test   al,0x7
  409d72:	and    al,0x28
  409d74:	pop    DWORD PTR [ebx]
  409d76:	mov    ecx,0xfb0c4b79
  409d7b:	sbb    edi,0x234debf
  409d81:	shl    edi,0x7d
  409d84:	addr16 mov bh,0x2d
  409d87:	aas    
  409d88:	mov    ch,0x50
  409d8a:	repz jnp 0x409d22
  409d8d:	mov    edx,0x108da717
  409d92:	push   esp
  409d93:	pusha  
  409d94:	mov    bh,0xa5
  409d96:	arpl   WORD PTR [ebx+ebp*8+0x7b],cx
  409d9a:	and    eax,0x3a42420d
  409d9f:	sub    eax,DWORD PTR [ebx+0x65]
  409da2:	ins    DWORD PTR es:[edi],dx
  409da3:	ss dec edi
  409da5:	push   cs
  409da6:	jl     0x409d35
  409da8:	and    ebp,DWORD PTR [edi+0x72]
  409dab:	mov    bh,0xbe
  409dad:	std    
  409dae:	ins    BYTE PTR es:[edi],dx
  409daf:	cmp    ebx,DWORD PTR [esi]
  409db1:	enter  0xe241,0x9b
  409db5:	out    dx,al
  409db6:	lock jmp eax
  409db9:	rcr    BYTE PTR [ecx+ecx*4],cl
  409dbc:	mov    al,ds:0xba2e4b84
  409dc1:	adc    DWORD PTR [eax],ebx
  409dc3:	push   esi
  409dc4:	(bad)  
  409dc5:	and    ch,ch
  409dc7:	cld    
  409dc8:	cdq    
  409dc9:	shr    BYTE PTR [ebx],0x45
  409dcc:	ss mov bl,0xf0
  409dcf:	in     eax,dx
  409dd0:	mov    al,ds:0x89b05404
  409dd5:	mov    eax,ss:0xf793a143
  409ddb:	xchg   ebp,eax
  409ddc:	or     al,0xf2
  409dde:	cli    
  409ddf:	rcr    esi,0x43
  409de2:	mov    al,ds:0x722e196c
  409de7:	cmp    edi,DWORD PTR [edi+edi*8-0xa]
  409deb:	mov    esp,0xcb84ea4
  409df0:	stc    
  409df1:	push   esi
  409df2:	jb     0x409e37
  409df4:	adc    eax,0xc6c962fe
  409df9:	imul   edi,DWORD PTR ds:0x978370c,0x56
  409e00:	lock aas 
  409e02:	xchg   esp,eax
  409e03:	push   0x4c03ec3
  409e08:	popa   
  409e09:	sbb    dl,BYTE PTR [ecx+0x49dfcc7]
  409e0f:	push   cs
  409e10:	test   BYTE PTR ds:0x27184a3c,dl
  409e16:	test   esp,ebx
  409e18:	push   ds
  409e19:	add    DWORD PTR [eax],edi
  409e1b:	test   eax,0x4e49ddae
  409e20:	cmp    esi,DWORD PTR [edx+ecx*8+0x55c293b1]
  409e27:	stc    
  409e28:	inc    ebp
  409e29:	adc    bl,BYTE PTR [ebp+0x56]
  409e2c:	mov    ch,0x4
  409e2e:	idiv   BYTE PTR [eax-0x7cf762b0]
  409e34:	push   ss
  409e35:	jno    0x409e41
  409e37:	add    al,0x53
  409e39:	out    0x32,eax
  409e3b:	ins    DWORD PTR es:[edi],dx
  409e3c:	jl     0x409dea
  409e3e:	jb     0x409dd8
  409e40:	jge    0x409e18
  409e42:	jmp    0x409e68
  409e44:	sub    DWORD PTR [eax+0x32],ecx
  409e47:	xor    eax,0xf2c54379
  409e4c:	loop   0x409dff
  409e4e:	ret    0x3165
  409e51:	sbb    al,BYTE PTR [edx+0x6f]
  409e54:	out    0xf5,eax
  409e56:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409e58:	mov    dl,0xd2
  409e5a:	loop   0x409eb9
  409e5c:	xchg   ebp,eax
  409e5d:	xchg   ebx,eax
  409e5e:	adc    eax,DWORD PTR [eax+0x69565b7c]
  409e64:	popf   
  409e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e66:	out    0x2e,al
  409e68:	or     BYTE PTR [ebx-0x32e92999],bh
  409e6e:	add    DWORD PTR [ecx-0x26],ebx
  409e71:	add    al,0x88
  409e73:	bound  ebx,QWORD PTR [esi-0x6d]
  409e76:	and    esi,DWORD PTR [ebp+0x5d]
  409e79:	imul   edx,DWORD PTR [edx-0x41f3f6],0xffffff92
  409e80:	inc    ebp
  409e81:	pop    eax
  409e82:	mov    dl,0xfa
  409e84:	or     BYTE PTR [eax+0xa400208],ah
  409e8a:	adc    dl,dl
  409e8c:	inc    ebp
  409e8d:	int3   
  409e8e:	push   es
  409e8f:	xchg   esp,eax
  409e90:	mov    edi,0x1b995de2
  409e95:	(bad)  
  409e97:	dec    ecx
  409e98:	call   FWORD PTR [ebx+eax*4]
  409e9b:	sbb    al,0x7c
  409e9d:	xchg   dh,ah
  409e9f:	pop    eax
  409ea0:	adc    ebx,DWORD PTR [edx-0x4e]
  409ea3:	rcl    DWORD PTR [ebx+ecx*1],cl
  409ea6:	aad    0x44
  409ea8:	ffreep st(6)
  409eaa:	and    ebp,DWORD PTR ds:0xf9774544
  409eb0:	in     al,dx
  409eb1:	je     0x409e36
  409eb3:	mov    cl,BYTE PTR [ebx-0x61a4393b]
  409eb9:	pop    ecx
  409eba:	test   ecx,ebx
  409ebc:	fiadd  WORD PTR [edi+0x2a]
  409ebf:	push   es
  409ec0:	out    dx,eax
  409ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec2:	lods   al,BYTE PTR ds:[esi]
  409ec3:	mov    ebp,0x47e9da4d
  409ec8:	and    eax,0x4c94a5a5
  409ecd:	ret    
  409ece:	xor    edi,DWORD PTR [edi]
  409ed0:	mov    es,edx
  409ed2:	mov    bh,BYTE PTR ds:0x24c23d4
  409ed8:	jp     0x409edb
  409eda:	and    BYTE PTR [ecx],al
  409edc:	push   edx
  409edd:	lds    edx,FWORD PTR [edi]
  409edf:	sub    ah,0xfd
  409ee2:	je     0x409f33
  409ee4:	mov    esi,0x46f7ae92
  409ee9:	js     0x409f00
  409eeb:	push   ecx
  409eec:	icebp  
  409eed:	xchg   DWORD PTR [edx-0x6c],edi
  409ef0:	(bad)  
  409ef1:	pop    ebx
  409ef2:	mov    ds:0x9991342b,eax
  409ef7:	push   esi
  409ef8:	shl    BYTE PTR [esi+ebp*2-0x60505942],cl
  409eff:	dec    esi
  409f00:	xor    al,0xfe
  409f02:	imul   ebx,DWORD PTR [ebp+ecx*2+0x28],0xd7af3649
  409f0a:	test   bh,dh
  409f0c:	jb     0x409edd
  409f0e:	jno    0x409f36
  409f10:	div    DWORD PTR [edi+0xa5a552e]
  409f16:	jg     0x409ecc
  409f18:	push   ebp
  409f19:	mov    esi,0xaa76762c
  409f1e:	jmp    0x6d05:0x2f98c5da
  409f25:	mov    edx,0x45d026cb
  409f2a:	loopne 0x409f9e
  409f2c:	lods   al,BYTE PTR ds:[esi]
  409f2d:	jle    0x409f46
  409f2f:	jg     0x409f88
  409f31:	out    0xeb,al
  409f33:	call   0x2a28603b
  409f38:	xchg   edx,eax
  409f39:	pop    ecx
  409f3a:	in     al,dx
  409f3b:	xchg   DWORD PTR [edi-0x2309941],eax
  409f41:	inc    ecx
  409f42:	cmc    
  409f43:	pop    edi
  409f44:	and    BYTE PTR [eax+0x1a57a151],dl
  409f4a:	fwait
  409f4b:	out    dx,al
  409f4c:	dec    eax
  409f4d:	dec    edx
  409f4e:	mov    ebx,0x44c1f5e2
  409f53:	cmp    eax,0xd7340651
  409f58:	ret    0x827
  409f5b:	pop    ss
  409f5c:	jbe    0x409f6f
  409f5e:	mov    DWORD PTR ds:[eax],esp
  409f61:	mov    ebx,0xaac32697
  409f66:	sbb    BYTE PTR [edi],bh
  409f68:	(bad)  
  409f69:	pop    es
  409f6a:	fucom  st(4)
  409f6c:	xor    eax,0x22b655ae
  409f71:	xchg   ebp,eax
  409f72:	into   
  409f73:	neg    dh
  409f75:	in     al,0xf5
  409f77:	into   
  409f78:	jmp    0xee5e:0xf1ab4f21
  409f7f:	xor    ch,BYTE PTR [edx]
  409f81:	cli    
  409f82:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409f84:	xor    eax,DWORD PTR [ecx-0x18c6dec7]
  409f8a:	mov    eax,ds:0xde6341f
  409f8f:	or     BYTE PTR [ebx-0x6d278cee],cl
  409f95:	or     eax,0x31bae7a1
  409f9a:	pushf  
  409f9b:	sti    
  409f9c:	scas   eax,DWORD PTR es:[edi]
  409f9d:	call   0x8243bd52
  409fa2:	inc    edi
  409fa3:	data16 loope 0x409f72
  409fa6:	and    edi,ecx
  409fa8:	sub    cl,BYTE PTR [edx+ebp*1+0x16]
  409fac:	mov    al,0xd8
  409fae:	or     BYTE PTR [esi+0x6ef6123d],0x21
  409fb5:	jg     0x409f9a
  409fb7:	adc    BYTE PTR [ebx],ah
  409fb9:	xlat   BYTE PTR ds:[ebx]
  409fba:	jmp    0x40a025
  409fbc:	or     bl,BYTE PTR [edi-0x62]
  409fbf:	int    0x72
  409fc1:	or     eax,0x953ffe8b
  409fc6:	aad    0xc9
  409fc8:	lods   eax,DWORD PTR ds:[esi]
  409fc9:	daa    
  409fca:	or     DWORD PTR [ebx+0x66bf831c],edx
  409fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd1:	test   ax,0x92de
  409fd5:	arpl   cx,ax
  409fd7:	aam    0x52
  409fd9:	scas   eax,DWORD PTR es:[edi]
  409fda:	push   ds
  409fdb:	or     eax,0x6d5f2bf9
  409fe0:	enter  0xa949,0xb3
  409fe4:	cmp    cl,BYTE PTR [eax+edx*4-0x1f]
  409fe8:	icebp  
  409fe9:	int3   
  409fea:	gs pop ebp
  409fec:	adc    bl,BYTE PTR [edx]
  409fee:	int3   
  409fef:	jb     0x409fc7
  409ff1:	loope  0x40a071
  409ff3:	push   ss
  409ff4:	out    0x6a,eax
  409ff6:	outs   dx,DWORD PTR ds:[esi]
  409ff7:	adc    DWORD PTR [eax],0xffffffb4
  409ffa:	pop    esp
  409ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ffc:	fsubr  st(6),st
  409ffe:	test   BYTE PTR [ebx+ebp*2+0x14],bl
  40a002:	mov    esi,0x573a2891
  40a007:	push   0x7e2456ca
  40a00c:	and    dh,BYTE PTR [eax+0x35]
  40a00f:	jo     0x40a040
  40a011:	out    0x4,al
  40a013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a014:	ror    DWORD PTR [ebx+0x1c56617],cl
  40a01a:	xlat   BYTE PTR ds:[ebx]
  40a01b:	pushf  
  40a01c:	inc    ebp
  40a01d:	popa   
  40a01e:	cld    
  40a01f:	call   0x2a4a:0xed2b2685
  40a026:	sar    DWORD PTR ds:0x8dd8f600,0x88
  40a02d:	dec    esi
  40a02e:	scas   eax,DWORD PTR es:[edi]
  40a02f:	cwde   
  40a030:	ins    BYTE PTR es:[edi],dx
  40a031:	ds loop 0x409fef
  40a034:	cli    
  40a035:	out    0x36,al
  40a037:	in     al,dx
  40a038:	mov    edi,0x13663076
  40a03d:	jmp    0x40a05d
  40a03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a040:	dec    ecx
  40a041:	fiadd  WORD PTR [esi]
  40a043:	iret   
  40a044:	push   ebx
  40a045:	push   es
  40a046:	(bad)  [edi+ecx*8-0x68f31169]
  40a04d:	or     bh,BYTE PTR [eax+0x2b]
  40a050:	add    BYTE PTR ds:0xe2fe5501,bl
  40a056:	and    BYTE PTR [edx],ch
  40a058:	ins    DWORD PTR es:[edi],dx
  40a059:	aaa    
  40a05a:	cld    
  40a05b:	mov    edx,0x363cddcd
  40a060:	xor    BYTE PTR [edx+0x17],0x2c
  40a064:	leave  
  40a065:	cmp    al,0xef
  40a067:	mov    dh,0xd2
  40a069:	stos   BYTE PTR es:[edi],al
  40a06a:	outs   dx,DWORD PTR ds:[esi]
  40a06b:	sbb    ebx,esp
  40a06d:	stos   BYTE PTR es:[edi],al
  40a06e:	loope  0x40a01b
  40a070:	das    
  40a071:	push   ebx
  40a072:	dec    ebp
  40a073:	pop    edi
  40a074:	cwde   
  40a075:	pop    ebp
  40a076:	mov    BYTE PTR [edi],dh
  40a078:	push   eax
  40a079:	mov    eax,0x39942de1
  40a07e:	call   0xf8fb:0x1e0f600
  40a085:	mov    dl,0x8
  40a087:	aad    0xbf
  40a089:	inc    ebp
  40a08a:	dec    esp
  40a08b:	mov    ebx,DWORD PTR [edx-0x23845fa3]
  40a091:	in     eax,0x2f
  40a093:	pop    edi
  40a094:	push   es
  40a095:	out    dx,al
  40a096:	ficom  DWORD PTR [ebx-0x3e]
  40a099:	sub    esi,edx
  40a09b:	out    dx,eax
  40a09c:	gs in  al,0x82
  40a09f:	pop    ebp
  40a0a0:	sti    
  40a0a1:	or     al,0x53
  40a0a3:	mov    ch,0xf
  40a0a5:	cmp    al,0x64
  40a0a7:	lds    ebx,FWORD PTR [ecx-0xb5158eb]
  40a0ad:	inc    edi
  40a0ae:	or     eax,esi
  40a0b0:	and    al,0x75
  40a0b2:	fnstcw WORD PTR [eax+edi*8+0x5e]
  40a0b6:	cmp    al,0x57
  40a0b8:	jmp    0xa7d63258
  40a0bd:	mov    cs,WORD PTR [eax+0x43]
  40a0c0:	lods   eax,DWORD PTR ds:[esi]
  40a0c1:	into   
  40a0c2:	mov    ds:0x37a3a73c,al
  40a0c7:	stos   BYTE PTR es:[edi],al
  40a0c8:	(bad)  
  40a0ca:	pop    ds
  40a0cb:	je     0x40a0da
  40a0cd:	test   BYTE PTR [ebx-0x52d7c21d],0x48
  40a0d4:	into   
  40a0d5:	cli    
  40a0d6:	adc    al,0x0
  40a0d8:	mov    edx,0x48aa6045
  40a0dd:	jb     0x40a09e
  40a0df:	jecxz  0x40a100
  40a0e1:	inc    ebx
  40a0e2:	pop    eax
  40a0e3:	and    BYTE PTR [edx-0x1666ac5e],bl
  40a0e9:	push   esp
  40a0ea:	out    dx,eax
  40a0eb:	fwait
  40a0ec:	inc    esi
  40a0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ee:	adc    al,0x78
  40a0f0:	add    edi,DWORD PTR [edx+ebx*8+0x5a]
  40a0f4:	sbb    BYTE PTR [ebx+0x3f],0xf9
  40a0f8:	mov    ds:0x3616260f,al
  40a0fd:	loope  0x40a112
  40a0ff:	sti    
  40a100:	mov    DWORD PTR [edx],esi
  40a102:	gs or  al,0xd9
  40a105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a106:	and    bl,BYTE PTR [eax]
  40a108:	sbb    BYTE PTR [ebp+0x7d7ee118],bl
  40a10e:	mov    esp,0x823f0e4f
  40a113:	cdq    
  40a114:	and    esi,DWORD PTR [eax+0x44]
  40a117:	test   al,0x18
  40a119:	(bad)  
  40a11a:	(bad)  
  40a11b:	test   DWORD PTR [ecx],ebx
  40a11d:	mov    eax,ebp
  40a11f:	nop    DWORD PTR [esi]
  40a122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a123:	stos   DWORD PTR es:[edi],eax
  40a124:	call   0xfb01:0x1ec55f5d
  40a12b:	and    BYTE PTR [ebx+eiz*4],0x18
  40a12f:	inc    edx
  40a130:	call   0xb68f:0xb07be36c
  40a137:	mov    al,ds:0xb99cf2f1
  40a13c:	push   cs
  40a13d:	daa    
  40a13e:	nop
  40a13f:	cmp    dh,bh
  40a141:	jmp    0xebdacf72
  40a146:	ficom  WORD PTR [ebp+0x45]
  40a149:	loope  0x40a0e8
  40a14b:	retf   0x400e
  40a14e:	sbb    esp,DWORD PTR [edx+0x291cd4bc]
  40a154:	shl    DWORD PTR [eax-0x18],0x6a
  40a158:	in     al,dx
  40a159:	mov    ch,0xdf
  40a15b:	add    eax,0x6d30f28
  40a160:	add    dh,BYTE PTR [edi+0x3a3ad527]
  40a166:	jae    0x40a116
  40a168:	enter  0xe698,0x23
  40a16c:	lock xchg ebp,edi
  40a16f:	pop    eax
  40a170:	xchg   edi,eax
  40a171:	ficom  WORD PTR [edi+0x5af249d9]
  40a177:	pushf  
  40a178:	mov    al,ds:0x1b1d05b4
  40a17d:	(bad)  
  40a17e:	cmc    
  40a17f:	push   ebx
  40a180:	or     DWORD PTR [edi-0x1c],0x9e1fa40c
  40a187:	gs shr dh,1
  40a18a:	add    al,0xb
  40a18c:	in     eax,dx
  40a18d:	sub    BYTE PTR [ebx+edx*4+0x2029357e],bl
  40a194:	push   cs
  40a195:	dec    edi
  40a196:	xor    ebx,DWORD PTR [ecx+0x4a]
  40a199:	dec    edx
  40a19a:	dec    esp
  40a19b:	push   edi
  40a19c:	cld    
  40a19d:	in     eax,0x30
  40a19f:	call   0xe2ec1000
  40a1a4:	sahf   
  40a1a5:	push   ebp
  40a1a6:	dec    esp
  40a1a7:	jo     0x40a1ae
  40a1a9:	pop    edi
  40a1aa:	and    eax,0x93301e5b
  40a1af:	gs iret 
  40a1b1:	pop    ebp
  40a1b2:	inc    ecx
  40a1b3:	xchg   edx,eax
  40a1b4:	test   DWORD PTR ds:0xa573aee5,esi
  40a1ba:	je     0x40a1cf
  40a1bc:	pop    edi
  40a1bd:	in     al,0xa6
  40a1bf:	inc    eax
  40a1c0:	lea    edi,[ecx-0xe455d3d]
  40a1c6:	(bad)
  40a1c9:	inc    ebp
  40a1ca:	adc    BYTE PTR [ecx-0x23],dh
  40a1cd:	das    
  40a1ce:	(bad)  
  40a1cf:	(bad)  
  40a1d0:	scas   eax,DWORD PTR es:[edi]
  40a1d1:	pop    esi
  40a1d2:	neg    DWORD PTR [edx-0x63aef30c]
  40a1d8:	popf   
  40a1d9:	test   BYTE PTR [esi+0x67],ch
  40a1dc:	ror    BYTE PTR [edx-0x64e50ccb],0x9d
  40a1e3:	xor    cl,BYTE PTR [ebp+0x4d]
  40a1e6:	sub    al,0x16
  40a1e8:	sbb    BYTE PTR [ecx+0x4b],bl
  40a1eb:	stc    
  40a1ec:	push   edx
  40a1ee:	cmp    eax,0xa624bcef
  40a1f3:	xor    DWORD PTR [edx],edx
  40a1f5:	jno    0x40a1e9
  40a1f7:	pop    edi
  40a1f8:	or     ecx,ebx
  40a1fa:	nop
  40a1fb:	lods   eax,DWORD PTR ds:[esi]
  40a1fc:	pop    ebx
  40a1fd:	pop    edx
  40a1fe:	dec    ebp
  40a1ff:	sti    
  40a200:	in     eax,dx
  40a201:	lds    ecx,FWORD PTR [ecx+0x32]
  40a204:	push   ebx
  40a205:	loopne 0x40a27d
  40a207:	loopne 0x40a1e0
  40a209:	aam    0x78
  40a20b:	aad    0xe
  40a20d:	fldcw  WORD PTR es:[ebx]
  40a210:	mov    bh,0x41
  40a212:	cld    
  40a213:	(bad)  
  40a214:	cmc    
  40a215:	jg     0x40a1e3
  40a217:	data16 jo 0x40a227
  40a21a:	(bad)  
  40a21c:	cld    
  40a21d:	pop    edi
  40a21e:	out    dx,eax
  40a21f:	pop    ebp
  40a220:	mov    al,0xda
  40a222:	(bad)  [edi+0x52]
  40a225:	xchg   ecx,eax
  40a226:	push   es
  40a227:	jge    0x40a2a2
  40a229:	(bad)  
  40a22b:	pop    eax
  40a22c:	arpl   WORD PTR [ecx+0x311793ab],dx
  40a232:	dec    esp
  40a233:	scas   al,BYTE PTR es:[edi]
  40a234:	pop    esi
  40a235:	adc    dl,BYTE PTR [ebx]
  40a237:	push   0x1c66d59c
  40a23c:	in     al,dx
  40a23d:	dec    ebx
  40a23e:	pop    ebp
  40a23f:	push   eax
  40a240:	pop    ds
  40a241:	pop    ebp
  40a242:	add    eax,0x80835fa2
  40a247:	ins    BYTE PTR es:[edi],dx
  40a248:	inc    eax
  40a249:	(bad)  
  40a24a:	js     0x40a2b7
  40a24c:	out    0x7c,eax
  40a24e:	sub    eax,0xb925f56a
  40a253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a254:	test   BYTE PTR [ebx+0x19080f00],dh
  40a25a:	in     al,dx
  40a25b:	(bad)  
  40a25c:	sub    BYTE PTR [edx+0xa],dh
  40a25f:	fcmovnu st,st(5)
  40a261:	or     BYTE PTR [esi],al
  40a263:	enter  0xa6ea,0x64
  40a267:	mov    edi,0x842fe0e8
  40a26c:	gs push esp
  40a26e:	cwde   
  40a26f:	aas    
  40a270:	lahf   
  40a271:	adc    BYTE PTR [ebx],dl
  40a273:	push   ebp
  40a274:	or     al,0x1a
  40a276:	ins    BYTE PTR es:[edi],dx
  40a277:	hlt    
  40a278:	fdiv   QWORD PTR [ebp-0x32]
  40a27b:	mov    BYTE PTR ds:0xec14e35,bl
  40a281:	sahf   
  40a282:	cmp    eax,0xece1894
  40a287:	sbb    eax,0x6fbced48
  40a28c:	pop    esi
  40a28d:	or     al,dh
  40a28f:	mov    esi,0x70160fca
  40a294:	sti    
  40a295:	xor    ebx,DWORD PTR [edi]
  40a297:	dec    edx
  40a298:	arpl   WORD PTR [ecx],ax
  40a29a:	pop    ds
  40a29b:	pop    ebx
  40a29c:	cmp    BYTE PTR [ebx-0x7ca135c1],0x8d
  40a2a3:	xor    al,0x2c
  40a2a5:	jo     0x40a2a4
  40a2a7:	addr16 push ebx
  40a2a9:	call   0xd5e4:0xf2d7a3d2
  40a2b0:	dec    eax
  40a2b1:	into   
  40a2b2:	aaa    
  40a2b3:	inc    edi
  40a2b4:	int3   
  40a2b5:	xchg   DWORD PTR [ebx],ebp
  40a2b7:	pusha  
  40a2b8:	loop   0x40a2f3
  40a2ba:	xlat   BYTE PTR ds:[ebx]
  40a2bb:	adc    ebp,DWORD PTR [esp+ebp*4+0x68]
  40a2bf:	jmpw   0xda3e
  40a2c3:	aaa    
  40a2c4:	in     eax,dx
  40a2c5:	rol    DWORD PTR [edx-0x1307d7c],cl
  40a2cb:	push   ebp
  40a2cc:	or     bh,0xd7
  40a2cf:	lock sbb ebp,DWORD PTR [esi-0x29]
  40a2d3:	inc    ebp
  40a2d4:	push   edx
  40a2d5:	jmp    0x588bbbff
  40a2da:	int    0x6a
  40a2dc:	lds    ebx,FWORD PTR [ecx+edx*4]
  40a2df:	in     eax,0xbc
  40a2e1:	dec    ebx
  40a2e2:	test   eax,0x601afbf2
  40a2e7:	cmp    bl,BYTE PTR [ecx-0x2e]
  40a2ea:	leave  
  40a2eb:	sahf   
  40a2ec:	sahf   
  40a2ed:	jno    0x40a2e7
  40a2ef:	fucomi st,st(6)
  40a2f1:	stc    
  40a2f2:	(bad)  
  40a2f3:	mov    DWORD PTR [edx-0x5afdabe7],esp
  40a2f9:	pop    es
  40a2fa:	push   ds
  40a2fb:	lds    esp,FWORD PTR [esi-0x74]
  40a2fe:	imul   esi,DWORD PTR [ecx+0xd],0x82ef6c21
  40a305:	in     al,dx
  40a306:	sbb    al,0x83
  40a308:	xor    esi,DWORD PTR [edx+0x76f0de21]
  40a30e:	sub    bl,ch
  40a310:	mov    edi,0xd4a4d990
  40a315:	push   0x4b
  40a317:	jae    0x40a368
  40a319:	xor    al,0x9e
  40a31c:	repz sub eax,0x33ea89f4
  40a322:	or     ecx,esp
  40a324:	pop    ds
  40a325:	add    bl,bl
  40a327:	and    al,0xd1
  40a329:	and    al,0x8d
  40a32b:	or     bh,dh
  40a32d:	outs   dx,BYTE PTR ds:[esi]
  40a32e:	into   
  40a32f:	and    al,0x9e
  40a331:	(bad)  
  40a332:	(bad)  
  40a333:	hlt    
  40a334:	push   eax
  40a335:	mov    ah,0x76
  40a337:	loope  0x40a2e0
  40a339:	jmp    0xc4a3:0xc5ef1e4e
  40a340:	popa   
  40a341:	mov    eax,0x88a0828
  40a346:	adc    eax,0xa6bf1c85
  40a34b:	mov    al,ds:0x6d194cab
  40a350:	shl    BYTE PTR [eax],1
  40a352:	adc    al,0x31
  40a354:	and    BYTE PTR [ebx-0x2d],bh
  40a357:	xchg   ebp,eax
  40a358:	clc    
  40a359:	mov    al,ds:0x94281220
  40a35e:	out    0xbc,eax
  40a360:	sbb    edi,DWORD PTR ss:[ecx+0x12]
  40a364:	or     edx,edx
  40a366:	enter  0xe51,0x93
  40a36a:	(bad)  
  40a36b:	mov    cl,0x50
  40a36d:	nop
  40a36e:	mov    al,0x50
  40a370:	dec    ebx
  40a371:	test   BYTE PTR [ecx+0x3a],cl
  40a374:	stc    
  40a375:	push   es
  40a376:	pop    ds
  40a377:	adc    eax,0x55ef9477
  40a37c:	jne    0x40a3fd
  40a37e:	push   edi
  40a37f:	adc    eax,0x6d84033
  40a384:	pop    ecx
  40a385:	fild   DWORD PTR [edi]
  40a387:	les    edi,FWORD PTR [edi+edx*4]
  40a38a:	loop   0x40a3d4
  40a38c:	cld    
  40a38d:	rol    dl,cl
  40a38f:	mov    ebx,0xbf6cf712
  40a394:	pop    esp
  40a395:	adc    esp,esi
  40a397:	adc    BYTE PTR [edi],dh
  40a399:	add    DWORD PTR [ecx+0x4f361c87],edi
  40a39f:	xchg   edi,eax
  40a3a0:	iret   
  40a3a1:	rcr    DWORD PTR ds:0xfe079dde,1
  40a3a7:	stc    
  40a3a8:	idiv   al
  40a3aa:	test   al,0xa1
  40a3ac:	loope  0x40a427
  40a3ae:	fldenv [edi+0x20a5f7b5]
  40a3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3b5:	sbb    BYTE PTR [esi],ch
  40a3b7:	push   ebx
  40a3b8:	sub    al,0x36
  40a3ba:	jle    0x40a36b
  40a3bc:	mov    dh,0xab
  40a3be:	(bad)  
  40a3bf:	adc    eax,0xf2a92d34
  40a3c4:	or     BYTE PTR [ebx+0x1e],ch
  40a3c7:	jle    0x40a38d
  40a3c9:	sub    eax,0x4ee5bbc7
  40a3ce:	dec    ebp
  40a3cf:	inc    edx
  40a3d0:	mov    ebx,0x5660b8d9
  40a3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d6:	inc    edx
  40a3d7:	aam    0xaf
  40a3d9:	push   0xffffffbb
  40a3db:	jle    0x40a3b9
  40a3dd:	popf   
  40a3de:	fwait
  40a3df:	adc    al,0x35
  40a3e1:	cdq    
  40a3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e3:	adc    ah,al
  40a3e5:	sub    ebp,esp
  40a3e7:	out    0x33,al
  40a3e9:	jbe    0x40a3f3
  40a3eb:	sub    DWORD PTR [edx-0x1fb5ec6a],0xffffff96
  40a3f2:	pop    ss
  40a3f3:	mov    eax,ds:0x929e7178
  40a3f8:	mul    BYTE PTR [ebx-0x67bbd758]
  40a3fe:	jo     0x40a39b
  40a400:	mov    WORD PTR [ecx-0x63],?
  40a403:	int3   
  40a404:	cmc    
  40a405:	jecxz  0x40a42d
  40a407:	sub    edi,esp
  40a409:	add    esp,ebp
  40a40b:	lods   al,BYTE PTR ds:[esi]
  40a40c:	je     0x40a461
  40a40e:	inc    ecx
  40a40f:	movntps XMMWORD PTR [ecx],xmm6
  40a412:	js     0x40a395
  40a414:	dec    ebx
  40a415:	xchg   esi,eax
  40a416:	mov    dl,0x58
  40a418:	mov    bh,0xe3
  40a41a:	(bad)  
  40a41b:	mov    edx,0xede3ad63
  40a420:	adc    ecx,DWORD PTR ds:0x3a8ded9
  40a426:	and    edx,DWORD PTR [ecx]
  40a428:	repnz and eax,0xac825ff9
  40a42e:	(bad)  
  40a42f:	xchg   esp,eax
  40a430:	inc    esi
  40a431:	imul   eax,ecx,0x8
  40a434:	mov    ebx,0xd9288a5c
  40a439:	adc    al,0x8f
  40a43b:	inc    eax
  40a43c:	ins    DWORD PTR es:[edi],dx
  40a43d:	cmp    dl,BYTE PTR [ecx]
  40a43f:	mov    ebx,0x78863d41
  40a444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a445:	mov    ds:0x9258d74b,al
  40a44a:	into   
  40a44b:	add    ecx,DWORD PTR [eax+0x63]
  40a44e:	inc    esp
  40a44f:	jo     0x40a3f5
  40a451:	dec    ecx
  40a452:	inc    ebx
  40a453:	fbld   TBYTE PTR [ecx-0x26]
  40a456:	stos   DWORD PTR es:[edi],eax
  40a457:	dec    ebx
  40a458:	pop    ebx
  40a459:	xor    esi,DWORD PTR [edx-0x15312d69]
  40a45f:	mov    WORD PTR [esp+eax*1],?
  40a462:	adc    dx,WORD PTR [ecx-0x1]
  40a466:	add    DWORD PTR [ebx-0x21],0xffffff98
  40a46a:	fs push ds
  40a46c:	rol    BYTE PTR ds:0xe59d2c74,0x8a
  40a473:	bound  ebx,QWORD PTR [ecx+eax*2-0x4c]
  40a477:	rcr    BYTE PTR [edx+0x21],cl
  40a47a:	adc    bh,BYTE PTR es:[edx+0x7f]
  40a47e:	ret    
  40a47f:	mov    ebx,0x734c5051
  40a484:	xchg   edi,eax
  40a485:	and    BYTE PTR [eax+0x36],bl
  40a488:	(bad)  
  40a489:	pop    ecx
  40a48a:	nop
  40a48b:	ss sub eax,0x4a99c91a
  40a491:	js     0x40a422
  40a493:	test   DWORD PTR [eax],esi
  40a495:	clc    
  40a496:	pusha  
  40a497:	lea    esi,[ebp-0x2a]
  40a49a:	xor    eax,0x236e5641
  40a49f:	pop    edi
  40a4a0:	sub    cl,bl
  40a4a2:	fcom   QWORD PTR [ebp+0x2395a5ee]
  40a4a8:	inc    eax
  40a4a9:	mov    edi,0x7d6dcb3c
  40a4ae:	inc    ecx
  40a4af:	stc    
  40a4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4b1:	mov    ds:0x6cdf7cb6,al
  40a4b6:	fcomp  QWORD PTR [edi-0x56381279]
  40a4bc:	or     eax,esi
  40a4be:	xchg   edx,eax
  40a4bf:	xor    DWORD PTR [eax],ebx
  40a4c1:	fcom   st(1)
  40a4c3:	mov    dl,0xee
  40a4c5:	(bad)  
  40a4c6:	mov    bl,0xd7
  40a4c8:	shr    BYTE PTR [eax],1
  40a4ca:	jmp    0x5db:0x2cbea343
  40a4d1:	test   bl,0xeb
  40a4d4:	or     DWORD PTR [edx+0x18],esi
  40a4d7:	inc    sp
  40a4d9:	jns    0x40a474
  40a4db:	mov    ecx,0xd09144de
  40a4e0:	mov    ah,BYTE PTR ds:[ecx-0x4]
  40a4e4:	sub    dl,al
  40a4e6:	sbb    al,0x93
  40a4e8:	xlat   BYTE PTR ds:[ebx]
  40a4e9:	jg     0x40a4de
  40a4eb:	int3   
  40a4ec:	retf   
  40a4ed:	pop    esp
  40a4ee:	scas   al,BYTE PTR es:[edi]
  40a4ef:	fsubrp st(5),st
  40a4f1:	jb     0x40a4b7
  40a4f3:	mov    al,ds:0x59dbdb6
  40a4f8:	jns    0x40a4bb
  40a4fa:	mov    edi,0x40952c78
  40a4ff:	mov    ds:0xc42e6abe,al
  40a504:	dec    esi
  40a506:	pmaddwd mm0,QWORD PTR [bx+si]
  40a50a:	push   esi
  40a50b:	jmp    0x40a58a
  40a50d:	push   es
  40a50e:	adc    DWORD PTR [ecx],ebx
  40a510:	or     esp,DWORD PTR [ecx]
  40a512:	jnp    0x40a58c
  40a514:	mov    cl,0x65
  40a516:	in     al,dx
  40a517:	(bad)  
  40a518:	lock aam 0xee
  40a51b:	mov    esp,DWORD PTR [ebp-0x2ceeb975]
  40a521:	add    ch,BYTE PTR [ecx+eax*4-0x29be8c64]
  40a528:	inc    eax
  40a529:	and    DWORD PTR [ebx],ebx
  40a52b:	aaa    
  40a52c:	aas    
  40a52d:	repnz mov ebx,0x2322fac8
  40a533:	jo     0x40a4b8
  40a535:	and    ebp,DWORD PTR [esi+0x24]
  40a538:	mov    eax,0x4f598c40
  40a53d:	cwde   
  40a53e:	dec    esi
  40a53f:	jbe    0x40a553
  40a541:	adc    BYTE PTR [esi-0xd],al
  40a544:	arpl   WORD PTR [edx-0x94b5ad],sp
  40a54a:	mov    eax,ds:0x4050838b
  40a54f:	test   BYTE PTR [esi*8+0x4fcc0b41],0xc5
  40a557:	xchg   esp,eax
  40a558:	push   0x754546a4
  40a55d:	test   DWORD PTR [ecx],ecx
  40a55f:	xor    DWORD PTR [ecx-0x34],esi
  40a562:	fisttp QWORD PTR [edx]
  40a564:	fbstp  TBYTE PTR [esi]
  40a566:	inc    eax
  40a567:	aad    0xfa
  40a569:	cmp    eax,0x463868c6
  40a56e:	pop    edi
  40a56f:	aas    
  40a570:	push   ss
  40a571:	xor    bh,dh
  40a573:	jp     0x40a54c
  40a575:	call   DWORD PTR [esi]
  40a577:	mov    DWORD PTR [ebp-0x5b97a6d],edx
  40a57d:	cld    
  40a57e:	jnp    0x40a53d
  40a580:	pop    edi
  40a581:	mov    ebp,0xd913225c
  40a586:	and    al,0x35
  40a588:	outs   dx,BYTE PTR ds:[esi]
  40a589:	ror    BYTE PTR [eax],0xac
  40a58c:	sbb    DWORD PTR gs:[ebp-0x7f],ebp
  40a590:	cmc    
  40a591:	sub    bh,BYTE PTR [ebx+0x1b19013a]
  40a597:	inc    eax
  40a598:	pop    edi
  40a599:	aaa    
  40a59a:	jmp    0x208c:0xb0325494
  40a5a1:	pusha  
  40a5a2:	aad    0x44
  40a5a4:	loop   0x40a557
  40a5a6:	lods   al,BYTE PTR ds:[esi]
  40a5a7:	xchg   esp,eax
  40a5a8:	sbb    BYTE PTR [ebx],dl
  40a5aa:	xor    DWORD PTR [ecx+0x2a],ecx
  40a5ad:	sbb    eax,DWORD PTR [esi+ebx*1-0x345d2f11]
  40a5b4:	in     eax,dx
  40a5b5:	pusha  
  40a5b6:	pushf  
  40a5b7:	mov    edi,0xff004992
  40a5bc:	push   0x2e20d86
  40a5c1:	popf   
  40a5c2:	outs   dx,DWORD PTR ds:[esi]
  40a5c3:	outs   dx,BYTE PTR ds:[esi]
  40a5c4:	test   al,0xf9
  40a5c6:	xchg   ebp,eax
  40a5c7:	cmp    ah,ah
  40a5c9:	lahf   
  40a5ca:	lock xchg edi,eax
  40a5cc:	fwait
  40a5cd:	(bad)  
  40a5ce:	adc    ch,ah
  40a5d0:	idiv   ebp
  40a5d2:	je     0x40a605
  40a5d4:	cmp    esp,DWORD PTR [esi+0xb]
  40a5d7:	into   
  40a5d8:	rdmsr  
  40a5da:	inc    esi
  40a5db:	and    eax,0x955578b3
  40a5e0:	xchg   edx,eax
  40a5e1:	push   ss
  40a5e2:	(bad)  
  40a5e3:	fimul  DWORD PTR [ebx]
  40a5e5:	jg     0x40a5b2
  40a5e7:	jp     0x40a5f7
  40a5e9:	loope  0x40a62b
  40a5eb:	inc    esp
  40a5ec:	mov    al,ds:0xe651a726
  40a5f1:	cwde   
  40a5f2:	jnp    0x40a624
  40a5f4:	xchg   edx,eax
  40a5f5:	adc    ebx,DWORD PTR [ebp-0x24]
  40a5f8:	(bad)  
  40a5f9:	leave  
  40a5fa:	lock jle 0x40a675
  40a5fd:	xlat   BYTE PTR ds:[ebx]
  40a5fe:	inc    ecx
  40a5ff:	sub    eax,0xefe37596
  40a604:	ret    
  40a605:	out    dx,eax
  40a606:	push   ecx
  40a607:	dec    ebx
  40a608:	jmp    0x40a58c
  40a60a:	push   0xffffffca
  40a60c:	lods   eax,DWORD PTR ds:[esi]
  40a60d:	mov    esp,0x5e031a78
  40a612:	push   edx
  40a613:	and    eax,0xd96ad8f4
  40a618:	mov    eax,ebp
  40a61a:	inc    edx
  40a61b:	hlt    
  40a61c:	cmp    edi,DWORD PTR [ecx]
  40a61e:	mov    al,0x44
  40a620:	outs   dx,DWORD PTR ds:[esi]
  40a621:	or     BYTE PTR [ecx+0x66],ch
  40a624:	or     al,0x4b
  40a626:	jge    0x40a5c7
  40a628:	cmp    dh,BYTE PTR [ecx-0x38468776]
  40a62e:	push   edx
  40a62f:	pushf  
  40a630:	lahf   
  40a631:	push   es
  40a632:	push   0x40361080
  40a637:	mov    ebp,0x614dc1d4
  40a63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63d:	jge    0x40a5d8
  40a63f:	lods   eax,DWORD PTR ds:[esi]
  40a640:	loop   0x40a663
  40a642:	adc    BYTE PTR [edi],0xd8
  40a645:	sbb    esp,ebx
  40a647:	mov    ds:0xf8cd3522,al
  40a64c:	shr    ecx,1
  40a64e:	pop    es
  40a64f:	sbb    bh,BYTE PTR [edi]
  40a651:	xchg   ecx,eax
  40a652:	ins    BYTE PTR es:[edi],dx
  40a653:	push   ebp
  40a654:	dec    ebx
  40a655:	comiss xmm6,DWORD PTR [ebx]
  40a658:	or     BYTE PTR [edi-0x376534a2],0xc9
  40a65f:	(bad)
  40a663:	jmp    0x40a5f1
  40a665:	mov    cl,0xca
  40a667:	mov    ?,WORD PTR [ecx+0x3c]
  40a66a:	mov    ds:0xf4308d1,al
  40a66f:	cdq    
  40a670:	mov    ch,0xc2
  40a672:	(bad)  
  40a673:	xor    ebp,DWORD PTR [ebx-0x4f]
  40a676:	test   BYTE PTR [ebx-0x61],bh
  40a679:	repnz pop ebx
  40a67b:	sub    DWORD PTR [eax],0x6b
  40a67e:	pop    ecx
  40a67f:	xchg   esp,eax
  40a680:	or     BYTE PTR [ebx-0x61],dl
  40a683:	ror    DWORD PTR [edx],cl
  40a685:	jno    0x40a642
  40a687:	adc    DWORD PTR [eax+edi*2+0x10f2740c],esp
  40a68e:	sbb    DWORD PTR [ebx+0x4b],ebx
  40a691:	jmp    0x40a641
  40a693:	std    
  40a694:	dec    esi
  40a695:	shl    DWORD PTR [ebp+ebx*8+0x64e2af27],0xd
  40a69d:	mov    esi,0xd38ebbdc
  40a6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a3:	adc    al,0x75
  40a6a5:	cmp    bl,BYTE PTR [ecx-0x4c]
  40a6a8:	ret    0x1107
  40a6ab:	mov    eax,DWORD PTR [edi+edi*8]
  40a6ae:	mov    ah,0x3b
  40a6b0:	xchg   ecx,eax
  40a6b1:	(bad)  
  40a6b2:	mov    DWORD PTR [edi+0x8bff540],ecx
  40a6b8:	clc    
  40a6b9:	push   es
  40a6ba:	test   BYTE PTR [ebp-0x72],dl
  40a6bd:	mov    WORD PTR [edx+0x46],cs
  40a6c0:	mov    ch,0x6d
  40a6c2:	dec    esi
  40a6c3:	(bad)  
  40a6c4:	mov    bl,0xe6
  40a6c6:	mov    cl,0x3a
  40a6c8:	mov    ds:0xc698bd4f,al
  40a6cd:	dec    ebp
  40a6ce:	ret    
  40a6cf:	push   es
  40a6d0:	(bad)  
  40a6d1:	pop    esi
  40a6d2:	(bad)  
  40a6d3:	clc    
  40a6d4:	and    edx,esp
  40a6d6:	retf   
  40a6d7:	mov    dh,0xbb
  40a6d9:	xchg   esp,eax
  40a6da:	ja     0x40a758
  40a6dc:	xlat   BYTE PTR ds:[ebx]
  40a6dd:	dec    eax
  40a6de:	push   0x75
  40a6e0:	daa    
  40a6e1:	mov    esp,0xfa16dedb
  40a6e6:	fnsave [eax-0x2d9831a9]
  40a6ec:	jg     0x40a6f2
  40a6ee:	sub    DWORD PTR [ecx+ebp*1],ebx
  40a6f1:	cmp    BYTE PTR [eax],0x3b
  40a6f4:	int    0x71
  40a6f6:	ss mov ah,0x12
  40a6f9:	popf   
  40a6fa:	cmp    ecx,DWORD PTR [ecx+0x74d6f1e1]
  40a700:	inc    edi
  40a701:	xor    eax,0xad722ada
  40a706:	mov    ebp,0x34025f6f
  40a70b:	push   ss
  40a70c:	fwait
  40a70d:	mul    DWORD PTR [edx]
  40a70f:	jge    0x40a731
  40a711:	popf   
  40a712:	and    ah,0xce
  40a715:	es addr16 test eax,esi
  40a719:	xchg   esp,eax
  40a71a:	les    ecx,FWORD PTR [edx-0x3aa11fa]
  40a720:	mov    ecx,0xe7371dc8
  40a725:	addr16 push ebx
  40a727:	or     BYTE PTR [esi-0x2f],al
  40a72a:	shl    BYTE PTR ds:0x48e02cfb,0xbc
  40a731:	mov    bl,0xd
  40a733:	pop    ecx
  40a734:	cmp    eax,DWORD PTR [edi+0x10]
  40a737:	fs sbb ecx,edi
  40a73a:	ror    al,cl
  40a73c:	xchg   edi,eax
  40a73d:	inc    eax
  40a73e:	sub    al,0xd0
  40a740:	mov    bl,0x9d
  40a742:	pop    ebp
  40a743:	dec    edi
  40a744:	mov    eax,0x4a5712db
  40a749:	cs dec edx
  40a74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a74c:	or     bl,BYTE PTR [eax+0x24]
  40a74f:	and    eax,0xd5fe14d9
  40a754:	adc    ebp,DWORD PTR [eax-0x5b]
  40a757:	fmul   QWORD PTR [edx+0x53]
  40a75a:	lds    ebp,FWORD PTR [ebx+0x790c3186]
  40a760:	(bad)  [ecx+0x5730a679]
  40a766:	or     BYTE PTR [edx-0x51],dl
  40a769:	aam    0x66
  40a76b:	lods   al,BYTE PTR ds:[esi]
  40a76c:	mov    ebx,DWORD PTR [ebp+0x27]
  40a76f:	dec    edi
  40a770:	clc    
  40a771:	int3   
  40a772:	sub    DWORD PTR [edx-0x475a8741],ebp
  40a778:	retf   
  40a779:	leave  
  40a77a:	enter  0x3a98,0xda
  40a77e:	xchg   edi,eax
  40a77f:	clc    
  40a780:	jno    0x40a7e0
  40a782:	sbb    ah,BYTE PTR [edx]
  40a784:	sub    al,0x62
  40a786:	jno    0x40a72c
  40a788:	fsub   st,st(7)
  40a78a:	push   0xffffff8d
  40a78c:	and    DWORD PTR [edi+ebx*2],ecx
  40a78f:	fwait
  40a790:	jl     0x40a7a3
  40a792:	cmp    ebx,DWORD PTR [ebp-0x6fce8ebd]
  40a798:	addr16 sti 
  40a79a:	ret    0xc910
  40a79d:	test   DWORD PTR [ebp+0x1530b116],0x7265046f
  40a7a7:	sbb    ebx,DWORD PTR [edx+0x5ba76854]
  40a7ad:	rcr    BYTE PTR [ebx-0x42],0x27
  40a7b1:	std    
  40a7b2:	xchg   ebx,eax
  40a7b3:	xchg   ebx,eax
  40a7b4:	dec    ecx
  40a7b5:	mov    ebp,0xe1bb6e7b
  40a7ba:	cmp    BYTE PTR fs:[edi-0x28acc238],bh
  40a7c1:	mov    dl,0x29
  40a7c3:	and    ebx,esp
  40a7c5:	aad    0x13
  40a7c7:	pop    edi
  40a7c8:	and    ebx,DWORD PTR [edi]
  40a7ca:	call   0x680bb223
  40a7cf:	pop    esi
  40a7d0:	stos   BYTE PTR es:[edi],al
  40a7d1:	outs   dx,DWORD PTR ds:[esi]
  40a7d2:	in     eax,dx
  40a7d3:	jmp    0x92b5:0xf3a922f2
  40a7da:	xchg   edi,eax
  40a7db:	ja     0x40a7d4
  40a7dd:	in     eax,0xfa
  40a7df:	jne    0x40a7eb
  40a7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7e2:	mov    bh,0xc7
  40a7e4:	popa   
  40a7e5:	pop    ds
  40a7e6:	rcl    DWORD PTR [ebx-0x635d2e1f],cl
  40a7ec:	mov    edx,?
  40a7ee:	push   edi
  40a7ef:	aaa    
  40a7f0:	xchg   BYTE PTR [ecx],dh
  40a7f2:	pop    es
  40a7f3:	imul   ecx,DWORD PTR [esi],0xffffffc1
  40a7f6:	adc    BYTE PTR [edx+eax*2],bh
  40a7f9:	dec    ebp
  40a7fa:	mov    ah,0x13
  40a7fc:	jns    0x40a82d
  40a7fe:	push   edx
  40a7ff:	mov    cl,0x2f
  40a801:	xor    eax,0xe5af2b0c
  40a806:	pop    esi
  40a807:	cdq    
  40a808:	lea    ebp,[edx]
  40a80a:	fstp   DWORD PTR [edx-0x30]
  40a80d:	scas   eax,DWORD PTR es:[edi]
  40a80e:	cmp    esi,DWORD PTR [esi-0xdb0c95d]
  40a814:	arpl   WORD PTR [ecx],di
  40a816:	call   0x845587a4
  40a81b:	gs (bad) 
  40a81d:	mov    ebp,0x496a78dd
  40a822:	cmp    bl,cl
  40a824:	add    BYTE PTR [edx],al
  40a826:	scas   eax,DWORD PTR es:[edi]
  40a827:	pop    edx
  40a828:	data16 (bad) 
  40a82a:	sti    
  40a82b:	iret   
  40a82c:	add    BYTE PTR [ebx],0xbe
  40a82f:	shl    cl,0xed
  40a832:	xor    DWORD PTR [esi+0x50],0x0
  40a836:	mov    cl,0x3e
  40a838:	add    bh,BYTE PTR cs:[edx-0x4f]
  40a83c:	stos   BYTE PTR es:[edi],al
  40a83d:	icebp  
  40a83e:	test   eax,0xd357055c
  40a843:	out    dx,al
  40a844:	push   ss
  40a845:	scas   al,BYTE PTR es:[edi]
  40a846:	add    edx,eax
  40a848:	stc    
  40a849:	aaa    
  40a84a:	ficomp WORD PTR [edi-0x1d]
  40a84d:	int3   
  40a84e:	dec    esi
  40a84f:	sub    al,0x62
  40a851:	call   0x7ac06852
  40a856:	in     al,dx
  40a857:	pop    esp
  40a858:	cdq    
  40a859:	inc    edx
  40a85a:	neg    DWORD PTR [edi-0x44]
  40a85d:	fs fwait
  40a85f:	add    DWORD PTR [edi-0x37],0x6e27c219
  40a866:	dec    BYTE PTR [edx]
  40a868:	xchg   edx,eax
  40a869:	loop   0x40a82e
  40a86b:	jns    0x40a852
  40a86d:	mov    bh,0x4
  40a86f:	sti    
  40a870:	xor    DWORD PTR [ecx+0x29e82c],ebp
  40a876:	adc    al,0x7d
  40a878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a879:	lock inc ebx
  40a87b:	lahf   
  40a87c:	sbb    al,0xca
  40a87e:	repnz imul edx,DWORD PTR [edx-0x27],0xd4320c1a
  40a886:	stc    
  40a887:	mov    bh,0x57
  40a889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a88a:	js     0x40a8f0
  40a88c:	xor    ch,BYTE PTR [ecx+eiz*4+0x5c]
  40a890:	sbb    cl,BYTE PTR [edi]
  40a892:	popf   
  40a893:	iret   
  40a894:	jl     0x40a8a9
  40a896:	mov    WORD PTR [edx+0x6d5b7596],?
  40a89c:	xchg   DWORD PTR ss:[edx-0x17],eax
  40a8a0:	pop    ds
  40a8a1:	test   DWORD PTR [edi],ebp
  40a8a3:	inc    ebx
  40a8a4:	imul   esp,esi,0xffffffa2
  40a8a7:	mov    ebp,0xb6477013
  40a8ac:	mov    al,0xeb
  40a8ae:	out    0xe5,al
  40a8b0:	mov    esi,gs
  40a8b2:	in     al,0x7c
  40a8b4:	mov    ebx,0xe7e5df13
  40a8b9:	outs   dx,BYTE PTR ds:[esi]
  40a8ba:	cmp    BYTE PTR [ebp-0x19],bh
  40a8bd:	mov    eax,ds:0x8f4538b2
  40a8c2:	push   ds
  40a8c3:	cld    
  40a8c4:	mov    ch,0x8a
  40a8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c8:	ja     0x40a89b
  40a8ca:	dec    esi
  40a8cb:	aad    0xd3
  40a8cd:	mov    eax,0x5c675834
  40a8d2:	imul   ebx,DWORD PTR [edx],0x5f46ed2a
  40a8d8:	mov    dh,0xeb
  40a8da:	xor    ebx,DWORD PTR [ecx-0x6c]
  40a8dd:	cs ret 0xfdfb
  40a8e1:	xor    dl,BYTE PTR [edx-0x6d84e601]
  40a8e7:	jmp    0x40a8fa
  40a8e9:	icebp  
  40a8ea:	dec    ebx
  40a8eb:	cld    
  40a8ec:	jno    0x40a890
  40a8ee:	lds    ecx,FWORD PTR [edx-0x43]
  40a8f1:	mov    ss,esi
  40a8f3:	xor    al,0xd1
  40a8f5:	fwait
  40a8f6:	leave  
  40a8f7:	or     ah,BYTE PTR [ebx-0x4c5badc9]
  40a8fd:	stos   DWORD PTR es:[edi],eax
  40a8fe:	call   0x8621:0x31bb2d20
  40a905:	scas   al,BYTE PTR es:[edi]
  40a906:	inc    eax
  40a907:	sbb    ebx,DWORD PTR [edx-0x70]
  40a90a:	mul    BYTE PTR [ecx+0x6f05c953]
  40a910:	jmp    0x9962:0x2662260d
  40a917:	das    
  40a918:	mov    edx,0x61ae3fa3
  40a91d:	inc    ebx
  40a91e:	(bad)  
  40a91f:	scas   eax,DWORD PTR es:[edi]
  40a920:	or     DWORD PTR [ebx-0x4e],0xfffffffa
  40a924:	clc    
  40a925:	ficomp DWORD PTR [ecx-0x4]
  40a928:	ret    
  40a929:	loopne 0x40a947
  40a92b:	sub    BYTE PTR [eax+0x39],ah
  40a92e:	(bad)
  40a931:	(bad)  
  40a932:	mov    gs,eax
  40a934:	dec    esi
  40a935:	lea    ecx,[ecx-0x2ae788a8]
  40a93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93c:	mov    ds:0x9b374522,al
  40a941:	leave  
  40a942:	dec    edi
  40a943:	xor    cl,BYTE PTR [esi-0x45]
  40a946:	in     al,0xd4
  40a948:	or     edx,edx
  40a94a:	mov    eax,0xe54006c9
  40a94f:	inc    ebx
  40a950:	(bad)  
  40a951:	les    edx,FWORD PTR [ebp-0x3dd32fe1]
  40a957:	shl    ebx,1
  40a959:	imul   esi,DWORD PTR [edx],0x7a2990cf
  40a95f:	aaa    
  40a960:	mov    edx,DWORD PTR [edx+0x6e]
  40a963:	mov    ebx,0x8e6bf179
  40a968:	test   BYTE PTR [ecx-0x10b783c5],al
  40a96e:	out    dx,eax
  40a96f:	or     dl,BYTE PTR [edi+0x6c]
  40a972:	ds mov dl,0xa5
  40a975:	mov    edi,0x4ff2c1ed
  40a97a:	pop    ss
  40a97b:	sahf   
  40a97c:	imul   eax,DWORD PTR [bx+si-0x5fc7],0xffffffd6
  40a982:	xlat   BYTE PTR ds:[ebx]
  40a983:	aaa    
  40a984:	shr    BYTE PTR ds:0x85b63f57,cl
  40a98a:	enter  0x937a,0xbe
  40a98e:	cmc    
  40a98f:	mov    esi,0x50538ca4
  40a994:	ss inc edx
  40a996:	pop    edi
  40a997:	mov    esp,0x2a876b71
  40a99c:	pop    es
  40a99d:	mov    ebx,0xcb9f7984
  40a9a2:	sbb    al,0x1d
  40a9a4:	fs loop 0x40a9f6
  40a9a7:	push   0xffffffb3
  40a9a9:	and    eax,0x96559ff9
  40a9ae:	mov    ah,0xbc
  40a9b0:	jl     0x40a96a
  40a9b2:	xor    cl,BYTE PTR [esi+edi*1-0x11]
  40a9b6:	dec    eax
  40a9b7:	jmp    0xc8e:0xba5f356f
  40a9be:	frstor [edx+0x45]
  40a9c1:	xlat   BYTE PTR ds:[ebx]
  40a9c2:	adc    ecx,DWORD PTR [ebx+0xf]
  40a9c5:	mov    ecx,eax
  40a9c7:	sahf   
  40a9c8:	or     ch,BYTE PTR [edx-0x3c911176]
  40a9ce:	inc    ebp
  40a9cf:	adc    DWORD PTR [edi],0x77
  40a9d2:	clc    
  40a9d3:	dec    edi
  40a9d4:	add    esi,DWORD PTR [edx]
  40a9d6:	cwde   
  40a9d7:	mov    al,0x82
  40a9d9:	jb     0x40a997
  40a9db:	mov    edx,0x6c3129
  40a9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e1:	xchg   ebx,eax
  40a9e2:	dec    esi
  40a9e3:	add    eax,0x6e
  40a9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e7:	dec    ecx
  40a9e8:	dec    ebp
  40a9e9:	lds    eax,FWORD PTR [edx]
  40a9eb:	sbb    BYTE PTR [eax-0x78d1c05d],bl
  40a9f1:	(bad)  
  40a9f2:	arpl   WORD PTR [edx],si
  40a9f4:	xor    DWORD PTR ds:[ebp-0x4],edi
  40a9f8:	dec    eax
  40a9f9:	push   es
  40a9fa:	dec    ecx
  40a9fb:	jmp    0xe227ad9a
  40aa00:	sbb    edi,eax
  40aa02:	adc    al,0xf8
  40aa04:	jl     0x40aa64
  40aa06:	js     0x40aa6b
  40aa08:	call   0x4998:0x483c5aec
  40aa0f:	mov    eax,ds:0x73a5a429
  40aa14:	mov    ebp,0x86a8e19d
  40aa19:	or     DWORD PTR [eax+0x36],ebp
  40aa1c:	enter  0x6d96,0xb1
  40aa20:	push   edi
  40aa21:	mov    ah,0xbb
  40aa23:	add    dh,dh
  40aa25:	pushf  
  40aa26:	mov    dl,0x79
  40aa28:	in     al,dx
  40aa29:	push   es
  40aa2a:	mov    ds:0xe3cdd044,eax
  40aa2f:	sti    
  40aa30:	pushf  
  40aa31:	outs   dx,DWORD PTR ds:[esi]
  40aa32:	arpl   WORD PTR [eax],sp
  40aa34:	xchg   esi,eax
  40aa35:	lods   al,BYTE PTR ds:[esi]
  40aa36:	xor    bh,BYTE PTR [eax]
  40aa38:	fwait
  40aa39:	ds mov ch,0x39
  40aa3c:	push   edx
  40aa3d:	adc    bl,BYTE PTR [ebx+0x4f]
  40aa40:	mov    ds:0x6e51093b,eax
  40aa45:	sbb    al,0x14
  40aa47:	xor    eax,0x4366e3b5
  40aa4c:	mov    edi,0xb9d68e01
  40aa51:	xor    ah,ah
  40aa53:	in     al,0xdb
  40aa55:	xlat   BYTE PTR ds:[ebx]
  40aa56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa57:	and    eax,DWORD PTR [eax-0x26]
  40aa5a:	pop    edi
  40aa5b:	lods   al,BYTE PTR ds:[esi]
  40aa5c:	or     BYTE PTR [ebp+0x3],cl
  40aa5f:	loopne 0x40aaae
  40aa61:	js     0x40aa38
  40aa63:	shr    DWORD PTR [edx+0x3c],cl
  40aa66:	fs mov cl,0xeb
  40aa69:	cld    
  40aa6a:	inc    ecx
  40aa6b:	push   esi
  40aa6c:	fmul   DWORD PTR [edi+0x17cd98cb]
  40aa72:	add    al,0xb3
  40aa74:	imul   ebx,DWORD PTR [ebx+eiz*2+0x5f],0x985a7d59
  40aa7c:	sub    DWORD PTR [esi+edx*2+0x5224fa2e],ebx
  40aa83:	mov    bl,0xf4
  40aa85:	(bad)  
  40aa86:	imul   esi,DWORD PTR [edi],0xb492e846
  40aa8c:	mov    bl,0x9e
  40aa8e:	push   edx
  40aa8f:	cmp    al,cl
  40aa91:	lods   al,BYTE PTR es:[esi]
  40aa93:	mul    bh
  40aa95:	and    eax,0x8b1f2e37
  40aa9a:	mov    edx,0x2b60fd49
  40aa9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa0:	retf   
  40aaa1:	aas    
  40aaa2:	or     bl,BYTE PTR [eax+0x6395ceec]
  40aaa8:	iret   
  40aaa9:	lods   al,BYTE PTR ds:[esi]
  40aaaa:	fs sahf 
  40aaac:	pop    ecx
  40aaad:	sub    ebp,edx
  40aaaf:	clc    
  40aab0:	xor    bl,BYTE PTR [ebx]
  40aab2:	ds lahf 
  40aab4:	pop    ss
  40aab5:	aam    0x0
  40aab7:	cdq    
  40aab8:	fnstsw WORD PTR [esi+0x57f30d5b]
  40aabe:	cmp    ebp,DWORD PTR [edi+ebx*2-0x3e]
  40aac2:	pop    ds
  40aac3:	pop    ebp
  40aac4:	or     cl,BYTE PTR [edi]
  40aac6:	ja     0x40ab06
  40aac8:	mov    BYTE PTR [ebx+0x4f],bl
  40aacb:	mov    esi,0x17ad1d85
  40aad0:	mov    ds:0x5051d439,al
  40aad5:	retf   0x18c8
  40aad8:	jns    0x40ab04
  40aada:	int3   
  40aadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aadc:	cmovno edi,DWORD PTR [edx+ebp*1+0x2b]
  40aae1:	mov    BYTE PTR [ebx+0x585102a0],ah
  40aae7:	gs js  0x40ab20
  40aaea:	push   0xffffffdd
  40aaec:	in     eax,dx
  40aaed:	sub    eax,0x2796a267
  40aaf2:	ret    
  40aaf3:	out    dx,al
  40aaf4:	lods   al,BYTE PTR ds:[esi]
  40aaf5:	add    ecx,ebx
  40aaf7:	mov    cl,dh
  40aaf9:	loope  0x40ab77
  40aafb:	clc    
  40aafc:	pop    es
  40aafd:	mov    esi,0x4d685033
  40ab02:	arpl   WORD PTR [edx+0x38d2a74d],ax
  40ab08:	in     al,0xee
  40ab0a:	sub    bl,al
  40ab0c:	mov    dh,0x65
  40ab0e:	inc    ecx
  40ab0f:	aam    0xcd
  40ab11:	aas    
  40ab12:	mov    BYTE PTR ds:[edi+ebx*4+0x26],ah
  40ab17:	(bad)  
  40ab18:	pop    eax
  40ab19:	cmp    al,0x3
  40ab1b:	pop    ebx
  40ab1c:	mov    es,WORD PTR [ebx+0x70]
  40ab1f:	ret    0x552b
  40ab22:	sbb    ah,bh
  40ab24:	out    0x95,eax
  40ab26:	cmp    edx,DWORD PTR [ecx-0x7e]
  40ab29:	mov    ebx,0x4612b8c1
  40ab2e:	pop    esp
  40ab2f:	add    eax,0x54e9bec
  40ab34:	mov    ch,0xc2
  40ab36:	lea    eax,[esi-0x7c]
  40ab39:	or     al,0x93
  40ab3b:	dec    esi
  40ab3c:	and    ah,dl
  40ab3e:	jl     0x40ab75
  40ab40:	xor    ecx,esi
  40ab42:	mov    DWORD PTR ds:0x42a2e6,0x254
  40ab4c:	cmp    ecx,eax
  40ab4e:	je     0x40d111
  40ab54:	mov    eax,DWORD PTR [ebp-0x4]
  40ab57:	and    DWORD PTR ds:0x42a28a,0x5384
  40ab61:	xor    eax,esi
  40ab63:	add    DWORD PTR ds:0x42a2fa,0x7b59
  40ab6d:	add    eax,edi
  40ab6f:	cmp    ebx,eax
  40ab71:	mov    DWORD PTR ds:0x42a2e6,0x2910
  40ab7b:	jne    0x40d0af
  40ab81:	xor    DWORD PTR ds:0x42a276,0x42a2d6
  40ab8b:	push   DWORD PTR [ebp+0x8]
  40ab8e:	call   0x42510d
  40ab93:	and    DWORD PTR ds:0x42a266,edi
  40ab99:	mov    DWORD PTR [ebp-0x14],eax
  40ab9c:	xor    ecx,ecx
  40ab9e:	xor    ecx,DWORD PTR ds:0x42a306
  40aba4:	mov    eax,ds:0x42a3a2
  40aba9:	sub    ecx,eax
  40abab:	or     ecx,DWORD PTR [ecx+eax*1]
  40abae:	mov    eax,DWORD PTR [ebp-0x4]
  40abb1:	sbb    ecx,0x17a4
  40abb7:	mov    ecx,DWORD PTR [ebp-0x14]
  40abba:	xor    DWORD PTR ds:0x42a28a,0x42a2a6
  40abc4:	xor    eax,esi
  40abc6:	add    eax,edi
  40abc8:	mov    DWORD PTR ds:0x42a25a,0x307a
  40abd2:	cmp    ecx,eax
  40abd4:	mov    DWORD PTR ds:0x42a2be,0xd4
  40abde:	je     0x40d1cc
  40abe4:	or     DWORD PTR ds:0x42a2c6,0x42a266
  40abee:	push   DWORD PTR [ebp-0x14]
  40abf1:	not    DWORD PTR ds:0x42a2a6
  40abf7:	push   DWORD PTR [ebp+0x8]
  40abfa:	sbb    DWORD PTR ds:0x42a2ae,0x3b6a
  40ac04:	call   0x4251cd
  40ac09:	mov    DWORD PTR [ebp-0x14],eax
  40ac0c:	or     eax,DWORD PTR ds:0x42a2be
  40ac12:	mov    eax,DWORD PTR [ebp-0x4]
  40ac15:	mov    ecx,DWORD PTR [ebp-0x14]
  40ac18:	xor    eax,esi
  40ac1a:	and    DWORD PTR ds:0x42a2da,0x42a2fe
  40ac24:	add    eax,edi
  40ac26:	cmp    ecx,eax
  40ac28:	mov    DWORD PTR ds:0x42a2d6,0x7d26
  40ac32:	je     0x40d1cc
  40ac38:	xor    ecx,DWORD PTR ds:0x42a2ea
  40ac3e:	mov    eax,DWORD PTR [ebp-0x14]
  40ac41:	mov    eax,DWORD PTR [eax+0x18]
  40ac44:	or     DWORD PTR ds:0x42a29a,0x5e55
  40ac4e:	mov    DWORD PTR [ebp-0x24],eax
  40ac51:	xor    DWORD PTR ds:0x42a2be,ecx
  40ac57:	mov    eax,DWORD PTR [ebp-0x14]
  40ac5a:	and    DWORD PTR ds:0x42a2ee,0x0
  40ac64:	mov    ecx,DWORD PTR ds:0x42a2ee
  40ac6a:	inc    ecx
  40ac6b:	mov    DWORD PTR ds:0x42a2ee,ecx
  40ac71:	cmp    DWORD PTR ds:0x42a2ee,0x1f
  40ac78:	jb     0x40acb0
  40ac7e:	jmp    0x40aca3
  40ac83:	push   DWORD PTR [ebp-0x28]
  40ac86:	push   0x6caa
  40ac8b:	push   0x1820
  40ac90:	push   0x670f
  40ac95:	push   0x3854
  40ac9a:	push   DWORD PTR [ebp-0x24]
  40ac9d:	call   DWORD PTR ds:0x42a3c2
  40aca3:	cmp    DWORD PTR ds:0x42a2ee,0x14
  40acaa:	jb     0x40ac64
  40acb0:	mov    ecx,DWORD PTR [ebp+0x8]
  40acb3:	add    ecx,DWORD PTR [eax+0x20]
  40acb6:	movzx  eax,BYTE PTR ds:0x42a2e6
  40acbd:	adc    DWORD PTR ds:0x42a286,eax
  40acc3:	mov    DWORD PTR [ebp-0x2c],ecx
  40acc6:	adc    DWORD PTR ds:0x42a2b6,ecx
  40accc:	mov    eax,DWORD PTR [ebp-0x14]
  40accf:	sbb    ecx,DWORD PTR ds:0x42a262
  40acd5:	jmp    0x40d063
  40acda:	test   BYTE PTR fs:[esi],bl
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	and    DWORD PTR [edx-0x80],0x235b4cfa
  40ace6:	call   esi
  40ace8:	imul   ebp,DWORD PTR [edx],0x58
  40aceb:	lock add DWORD PTR [ebx-0x7c7ca1f4],0xffffffee
  40acf3:	sbb    eax,0x3f794200
  40acf8:	icebp  
  40acf9:	(bad)  
  40acfa:	and    eax,0x5d3371a1
  40acff:	ret    0x2b43
  40ad02:	jmp    0x40ad3f
  40ad04:	mov    esi,0x8243143
  40ad09:	mov    al,ds:0x5d95a24d
  40ad0e:	and    BYTE PTR [ecx],bh
  40ad10:	nop
  40ad11:	jl     0x40ad7f
  40ad13:	into   
  40ad14:	das    
  40ad15:	jnp    0x40ad12
  40ad17:	xor    BYTE PTR [eax],dl
  40ad19:	call   0x1bb9:0x12a3767d
  40ad20:	xlat   BYTE PTR ds:[ebx]
  40ad21:	addr16 wrmsr 
  40ad24:	jecxz  0x40ad56
  40ad26:	or     al,0x49
  40ad28:	or     edi,DWORD PTR [edx+0x5fb3cdac]
  40ad2e:	sti    
  40ad2f:	gs clc 
  40ad31:	mov    al,0x59
  40ad33:	mov    dl,0x2b
  40ad35:	repnz pushf 
  40ad37:	inc    ebp
  40ad38:	pop    esi
  40ad39:	push   cs
  40ad3a:	jbe    0x40ad74
  40ad3c:	clc    
  40ad3d:	jmp    0x9ba4d9ea
  40ad42:	or     eax,0xb8704eaa
  40ad47:	pop    eax
  40ad48:	jp     0x40ad5e
  40ad4a:	fwait
  40ad4b:	nop
  40ad4c:	adc    DWORD PTR [ecx],edi
  40ad4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4f:	cwde   
  40ad50:	push   esi
  40ad51:	jo     0x40ad98
  40ad53:	jl     0x40ad87
  40ad55:	ins    BYTE PTR es:[edi],dx
  40ad56:	mov    ds:0x44355f37,al
  40ad5b:	ss cmc 
  40ad5d:	and    eax,0xa94c3756
  40ad62:	cmp    eax,0x726d95aa
  40ad67:	cmp    al,BYTE PTR [esi-0x78cb52c2]
  40ad6d:	test   eax,0xfe1b5e74
  40ad72:	rcl    BYTE PTR [edi-0x1d],cl
  40ad75:	fmul   QWORD PTR [eax]
  40ad77:	and    dl,BYTE PTR [edx]
  40ad79:	mov    BYTE PTR [eax-0x13d5cb23],ch
  40ad7f:	lds    edi,FWORD PTR [ebx]
  40ad81:	pop    ebp
  40ad82:	mov    DWORD PTR [ebx-0x1962da0f],ecx
  40ad88:	xor    DWORD PTR [ebp+0x54],edx
  40ad8b:	cmp    DWORD PTR [ebx],ebp
  40ad8d:	jecxz  0x40ad54
  40ad8f:	or     edi,DWORD PTR [ebx-0x38d25735]
  40ad95:	mov    ch,0xce
  40ad97:	or     ebx,edx
  40ad99:	int    0x7c
  40ad9b:	ror    BYTE PTR [ebx+0x5eb13104],1
  40ada1:	add    al,0x40
  40ada3:	pop    esp
  40ada4:	mov    ebx,0xa158543c
  40ada9:	cmc    
  40adaa:	xor    edi,eax
  40adac:	xlat   BYTE PTR ds:[ebx]
  40adad:	cwde   
  40adae:	add    al,0xdd
  40adb0:	repnz mov DWORD PTR [ebx],ebx
  40adb3:	popf   
  40adb4:	test   eax,0x43531371
  40adb9:	cmp    ebp,edx
  40adbb:	(bad)  
  40adbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adbd:	outs   dx,BYTE PTR ds:[esi]
  40adbe:	and    dl,0x49
  40adc1:	sbb    BYTE PTR [ebp+0x67],bh
  40adc4:	fsubr  DWORD PTR [ecx]
  40adc6:	mov    ch,0xd8
  40adc8:	idiv   DWORD PTR [ebp+edx*8-0x3fe7f90]
  40adcf:	jno    0x40ade9
  40add1:	pusha  
  40add2:	lock out dx,eax
  40add4:	retf   
  40add5:	enter  0x2032,0xd0
  40add9:	retf   
  40adda:	mov    ch,0x62
  40addc:	sub    eax,eax
  40adde:	pop    ds
  40addf:	mov    dl,0x12
  40ade1:	cmp    BYTE PTR [ecx-0x3f],ch
  40ade4:	push   ds
  40ade5:	das    
  40ade6:	xor    edi,edi
  40ade8:	pop    ds
  40ade9:	idiv   DWORD PTR [ebp-0xc]
  40adec:	or     DWORD PTR [ecx],esp
  40adee:	and    ecx,DWORD PTR [edx]
  40adf0:	fistp  DWORD PTR [ebx]
  40adf2:	xchg   ecx,eax
  40adf3:	adc    DWORD PTR [ebp-0x4ca4e6b1],esp
  40adf9:	jnp    0x40ae77
  40adfb:	push   es
  40adfc:	mov    ch,0x7b
  40adfe:	loopne 0x40ade3
  40ae00:	xchg   esi,eax
  40ae01:	scas   al,BYTE PTR es:[edi]
  40ae02:	push   ebx
  40ae03:	dec    eax
  40ae04:	adc    ebp,DWORD PTR [esi-0x60cd4c44]
  40ae0a:	aam    0x3a
  40ae0c:	in     al,dx
  40ae0d:	int    0xcc
  40ae0f:	fstp   DWORD PTR [edi]
  40ae11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae12:	sbb    BYTE PTR [ecx+0x63],dl
  40ae15:	bound  ebp,QWORD PTR [ebp-0x423acb7e]
  40ae1b:	mov    ah,0x6d
  40ae1d:	neg    BYTE PTR [ecx]
  40ae1f:	jno    0x40ae57
  40ae21:	sub    al,0x82
  40ae23:	xor    eax,0x22cc9db5
  40ae28:	sbb    DWORD PTR [ecx-0x72beae53],esp
  40ae2e:	adc    bh,dh
  40ae30:	(bad)  
  40ae31:	sub    DWORD PTR [edi],ebx
  40ae33:	lock mov eax,ds:0xa9fb7ec2
  40ae39:	scas   al,BYTE PTR es:[edi]
  40ae3a:	out    dx,al
  40ae3b:	xchg   edi,eax
  40ae3c:	push   0x26
  40ae3e:	mov    DWORD PTR [edi+0x249ee7ad],eax
  40ae44:	pop    ebx
  40ae45:	cwde   
  40ae46:	pop    ecx
  40ae47:	mov    ecx,0xecf18cad
  40ae4c:	sbb    al,0x39
  40ae4e:	arpl   WORD PTR [esi+0x250d5766],bp
  40ae54:	pop    ds
  40ae55:	push   edi
  40ae56:	(bad)  
  40ae57:	call   0xecce0115
  40ae5c:	sub    DWORD PTR [eax],esi
  40ae5e:	or     BYTE PTR [ecx+0x3001790f],0x87
  40ae65:	icebp  
  40ae66:	xchg   esi,eax
  40ae67:	jbe    0x40ae68
  40ae69:	das    
  40ae6a:	btc    DWORD PTR [eax],esp
  40ae6d:	dec    edi
  40ae6e:	fs push ecx
  40ae70:	or     dl,BYTE PTR [ecx-0x6b]
  40ae73:	jb     0x40aeb7
  40ae75:	aad    0xcf
  40ae77:	in     al,dx
  40ae78:	popf   
  40ae79:	mov    edx,0x18148242
  40ae7e:	ja     0x40ae53
  40ae80:	arpl   WORD PTR [eax],si
  40ae82:	idiv   BYTE PTR [ecx-0x53]
  40ae85:	jae    0x40ae94
  40ae87:	add    DWORD PTR [ecx+0x52],ecx
  40ae8a:	jmp    0x3a364366
  40ae8f:	sbb    BYTE PTR [eax],bh
  40ae91:	aaa    
  40ae92:	shr    DWORD PTR ss:[eax],0x10
  40ae96:	push   cs
  40ae97:	or     al,0x77
  40ae99:	xchg   edi,eax
  40ae9a:	push   0xe73809f2
  40ae9f:	outs   dx,BYTE PTR ds:[esi]
  40aea1:	rol    bl,cl
  40aea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea5:	cdq    
  40aea6:	or     eax,0x15e20f01
  40aeab:	push   ds
  40aeac:	leave  
  40aead:	cmp    bl,BYTE PTR cs:[esi]
  40aeb0:	call   FWORD PTR [esi+0x6f]
  40aeb3:	mov    edx,edx
  40aeb5:	dec    ebx
  40aeb6:	test   al,0x2f
  40aeb8:	xor    ebx,DWORD PTR [ebp-0x228ac2f1]
  40aebe:	addr16 push eax
  40aec0:	sbb    DWORD PTR [eax],edi
  40aec2:	rol    DWORD PTR [ebx+0x6786386b],0x2e
  40aec9:	push   esi
  40aeca:	call   0x991:0xd0ad8f11
  40aed1:	lods   eax,DWORD PTR ds:[esi]
  40aed2:	xchg   esi,eax
  40aed3:	pop    esp
  40aed4:	or     al,0x9
  40aed6:	test   esp,ebp
  40aed8:	mov    bl,0x12
  40aeda:	adc    ebx,DWORD PTR [edi+esi*4+0x5dc1b551]
  40aee1:	js     0x40aec7
  40aee3:	sub    dl,dh
  40aee5:	rep ins DWORD PTR es:[edi],dx
  40aee7:	ficom  WORD PTR [edx+edx*2-0x45a72975]
  40aeee:	imul   ebp,DWORD PTR [ebx],0x3c
  40aef1:	jbe    0x40aeba
  40aef3:	inc    esi
  40aef4:	shl    BYTE PTR [edx+0x19],cl
  40aef7:	and    esi,DWORD PTR [ebx-0x3602df92]
  40aefd:	arpl   WORD PTR gs:[eax-0x41],ax
  40af01:	popa   
  40af02:	jmp    0x11c85f52
  40af07:	jmp    0xa787:0x2df8c233
  40af0e:	in     al,0x9b
  40af10:	in     eax,0xd2
  40af12:	std    
  40af13:	jl     0x40aed3
  40af15:	pop    ds
  40af16:	sbb    ebx,DWORD PTR [edx]
  40af18:	(bad)  
  40af1a:	cmp    DWORD PTR [ebx-0x396d154c],ebp
  40af20:	xchg   esi,eax
  40af21:	adc    ecx,DWORD PTR [ebx]
  40af23:	jns    0x40af44
  40af25:	cmp    DWORD PTR [esp+edi*8],edx
  40af28:	inc    edi
  40af29:	jne    0x40af4c
  40af2b:	mov    ebp,0xc21de820
  40af30:	icebp  
  40af31:	aaa    
  40af32:	dec    edx
  40af33:	or     BYTE PTR [ecx-0x1ee2fb65],ah
  40af39:	cmp    al,0x50
  40af3b:	xchg   DWORD PTR [eax+0x71bef929],eax
  40af41:	call   0x894e:0x9b6e209a
  40af48:	in     al,dx
  40af49:	outs   dx,BYTE PTR ds:[esi]
  40af4a:	xchg   BYTE PTR [ecx],bl
  40af4c:	sub    eax,0xcf14ea9a
  40af51:	in     al,dx
  40af52:	mov    esi,0x68364442
  40af57:	test   al,0x3f
  40af59:	or     al,0x17
  40af5b:	pushf  
  40af5c:	daa    
  40af5d:	icebp  
  40af5e:	add    al,0xc1
  40af60:	cmp    ecx,DWORD PTR [esp+eax*4-0x32fceb3c]
  40af67:	xchg   DWORD PTR [ecx+0x7],eax
  40af6a:	je     0x40af69
  40af6c:	jmp    0x4b62:0x2668d1dd
  40af73:	mov    esi,0x918cd77f
  40af78:	es mov esp,0xd6860263
  40af7e:	sub    eax,0x94a35ad1
  40af83:	mov    ebp,0x5c7a522d
  40af88:	xor    DWORD PTR [edi+0x51],0x3939a910
  40af8f:	cmp    eax,0x67461fc1
  40af94:	pop    ebx
  40af95:	xchg   DWORD PTR [esi+0x41c9ef48],esp
  40af9b:	mov    dl,0xb4
  40af9d:	mov    DWORD PTR [edx+0x24],ebp
  40afa0:	xchg   esi,eax
  40afa1:	pop    edx
  40afa2:	jmp    0x40afb3
  40afa4:	ins    DWORD PTR es:[edi],dx
  40afa5:	add    cl,dh
  40afa7:	std    
  40afa8:	frstor [ecx-0x8]
  40afab:	aad    0xcb
  40afad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afaf:	xor    DWORD PTR [eax],0xffffffc2
  40afb2:	inc    edi
  40afb3:	test   dl,al
  40afb5:	mov    ebp,0xfe25e792
  40afba:	pop    esi
  40afbb:	lahf   
  40afbc:	mov    WORD PTR [ebx],?
  40afbe:	rcr    BYTE PTR [eax+0x2d],0x42
  40afc2:	and    BYTE PTR [esi-0x673277ea],ch
  40afc8:	jp     0x40afdd
  40afca:	loope  0x40af7b
  40afcc:	and    ebx,esp
  40afce:	cs pop ecx
  40afd0:	or     al,0x6a
  40afd3:	ror    BYTE PTR [edx+0x7ba6b2d3],cl
  40afd9:	dec    edx
  40afda:	fdivr  QWORD PTR [ebp+edx*1-0x68]
  40afde:	pop    es
  40afdf:	repz fwait
  40afe1:	sbb    ebx,DWORD PTR [edi]
  40afe3:	test   BYTE PTR ds:0x6cc018af,0x2
  40afea:	fwait
  40afeb:	sbb    esp,DWORD PTR [ebp+0x1c]
  40afee:	mov    eax,0xcf6714fd
  40aff3:	jmp    0x40af91
  40aff5:	addr16 int 0x33
  40aff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff9:	xchg   ebp,eax
  40affa:	jb     0x40af94
  40affc:	push   0x8dcd8876
  40b001:	rol    dh,1
  40b003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b004:	cmc    
  40b005:	int3   
  40b006:	pop    esp
  40b007:	cs ss nop
  40b00a:	dec    esi
  40b00b:	clc    
  40b00c:	xor    BYTE PTR [ecx+0x10],al
  40b00f:	jl     0x40afe8
  40b011:	sub    BYTE PTR [ecx],0x2a
  40b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b015:	or     al,0xdd
  40b017:	scas   al,BYTE PTR es:[edi]
  40b018:	cmp    eax,DWORD PTR [esi+0x20da205e]
  40b01e:	into   
  40b01f:	dec    esp
  40b020:	and    BYTE PTR [esi],ah
  40b022:	adc    al,0x17
  40b024:	aam    0x5b
  40b026:	xor    BYTE PTR [ebp+ebp*2+0x617a2761],0xc3
  40b02e:	addr16 jle 0x40b051
  40b031:	je     0x40b034
  40b033:	cmc    
  40b034:	jmp    0x40b020
  40b036:	inc    esi
  40b037:	add    edx,DWORD PTR [ecx+0x7bac70d6]
  40b03d:	sahf   
  40b03e:	rcl    esp,0xa8
  40b041:	pmaddwd mm6,mm4
  40b044:	fmul   QWORD PTR [eax+0x32]
  40b047:	in     eax,0x2a
  40b049:	or     al,0xc4
  40b04b:	jb     0x40b0b0
  40b04d:	mov    eax,esi
  40b04f:	jle    0x40afe4
  40b051:	fwait
  40b052:	daa    
  40b053:	mov    cl,ch
  40b055:	inc    eax
  40b056:	test   eax,0x8892bf68
  40b05b:	pop    eax
  40b05c:	inc    edi
  40b05d:	add    DWORD PTR [edx-0x80],esp
  40b060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b061:	mov    esp,0xc1f081c5
  40b066:	jns    0x40b04a
  40b068:	mov    dh,0x76
  40b06a:	stos   DWORD PTR es:[edi],eax
  40b06b:	iret   
  40b06c:	test   eax,0xed2ba7c8
  40b071:	xor    ecx,DWORD PTR [ebp+0x483933e1]
  40b077:	xchg   DWORD PTR [ebp+0x40],ecx
  40b07a:	lahf   
  40b07b:	sbb    dl,BYTE PTR gs:[ebx+0x4c]
  40b07f:	mov    bh,0x6d
  40b081:	sub    edx,DWORD PTR [edx+0x15ba016d]
  40b087:	xchg   esi,eax
  40b088:	mov    al,0x82
  40b08a:	push   ds
  40b08b:	and    BYTE PTR [ebx+0x34607b05],0x4
  40b092:	push   edx
  40b093:	data16 pop bp
  40b096:	add    BYTE PTR [esi+0xf019ca1],al
  40b09c:	not    DWORD PTR ds:0x4aa3223d
  40b0a2:	mov    esi,0xd9f217ef
  40b0a7:	mov    WORD PTR [eax+0xd29b7e9],es
  40b0ad:	push   ebx
  40b0ae:	into   
  40b0af:	jmp    0x3332:0x63ba61d1
  40b0b6:	adc    edx,edx
  40b0b8:	mov    ebp,0x9b28f764
  40b0bd:	enter  0xd4f7,0x71
  40b0c1:	cmp    DWORD PTR [edi+esi*1-0x7d],0xe5f94394
  40b0c9:	xchg   ebp,eax
  40b0ca:	outs   dx,BYTE PTR ds:[esi]
  40b0cb:	inc    esp
  40b0cc:	into   
  40b0cd:	rcr    ebp,1
  40b0cf:	sahf   
  40b0d0:	jae    0x40b128
  40b0d2:	xlat   BYTE PTR ds:[ebx]
  40b0d3:	imul   ecx,DWORD PTR [edi],0x6d3b3f83
  40b0d9:	pop    ebp
  40b0da:	retf   
  40b0db:	loopne 0x40b085
  40b0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0de:	pushf  
  40b0df:	in     al,dx
  40b0e0:	popa   
  40b0e1:	pop    eax
  40b0e2:	xor    BYTE PTR [ebp+0x10e70a1f],dl
  40b0e8:	pop    edi
  40b0e9:	jecxz  0x40b164
  40b0eb:	sbb    ebp,ebp
  40b0ed:	mov    edx,0x76b45f11
  40b0f2:	sub    eax,0x74b3d7b3
  40b0f7:	mov    bh,0xfc
  40b0f9:	cmp    BYTE PTR [esi],ch
  40b0fb:	bound  eax,QWORD PTR [eax-0x44]
  40b0fe:	loopne 0x40b133
  40b100:	inc    ebx
  40b101:	pop    ecx
  40b102:	iret   
  40b103:	cmp    al,0xcf
  40b105:	mov    ds,esi
  40b107:	mov    edx,0x463e3146
  40b10c:	mov    DWORD PTR [edx],ebx
  40b10e:	ret    
  40b10f:	xchg   ebx,eax
  40b110:	(bad)  
  40b111:	push   eax
  40b112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b113:	push   esi
  40b114:	fwait
  40b115:	mov    dl,0xd9
  40b117:	(bad)  
  40b118:	push   eax
  40b119:	mov    ebp,0x8dcae4c1
  40b11e:	push   ebp
  40b11f:	sbb    eax,0x28940773
  40b124:	mov    WORD PTR [esi-0x4aad1ac],?
  40b12a:	imul   ecx,ebx,0xffffff9b
  40b12d:	sub    BYTE PTR [ebp+0x2a637752],al
  40b133:	inc    esp
  40b134:	jle    0x40b0b7
  40b136:	push   esp
  40b137:	pusha  
  40b138:	in     al,dx
  40b139:	aas    
  40b13a:	jb     0x40b140
  40b13c:	cmp    BYTE PTR ds:0xb778fa13,dh
  40b142:	mov    cl,0x35
  40b144:	add    al,0x45
  40b146:	mov    edx,ebp
  40b148:	mov    ebp,0x754f0898
  40b14d:	(bad)  
  40b14e:	adc    ah,BYTE PTR [esi+esi*8-0x483b826b]
  40b155:	cmp    ebx,esp
  40b157:	popa   
  40b158:	loopne 0x40b13b
  40b15a:	pushf  
  40b15b:	mov    bh,0xe6
  40b15d:	mov    ch,0x6d
  40b15f:	push   ebx
  40b160:	pop    ss
  40b161:	adc    eax,0x1705f65d
  40b166:	les    ecx,FWORD PTR [edx+0x4eb1f8fc]
  40b16c:	stos   DWORD PTR es:[edi],eax
  40b16d:	ins    DWORD PTR es:[edi],dx
  40b16e:	inc    esp
  40b16f:	inc    ebx
  40b170:	or     edx,esp
  40b172:	ror    BYTE PTR [esi+0x433914de],cl
  40b178:	and    eax,0xef3dc06
  40b17d:	cld    
  40b17e:	retf   0xf97a
  40b181:	or     eax,0x3665269f
  40b186:	jns    0x40b111
  40b188:	add    BYTE PTR [edx+0x36],0xc6
  40b18c:	lock push esi
  40b18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18f:	xor    esp,DWORD PTR [eax]
  40b191:	test   DWORD PTR [ebp-0x15a2b021],esi
  40b197:	mov    eax,ds:0x6bed7c6a
  40b19c:	jno    0x40b138
  40b19e:	pop    ds
  40b19f:	into   
  40b1a0:	not    BYTE PTR gs:[ebp-0x7f]
  40b1a4:	dec    ebp
  40b1a5:	mov    ah,0x6d
  40b1a7:	aad    0xd5
  40b1a9:	add    dh,cl
  40b1ab:	xor    esi,DWORD PTR [edi-0x778f5425]
  40b1b1:	rep outs dx,BYTE PTR ds:[esi]
  40b1b3:	xsavec [eax-0xe]
  40b1b7:	pusha  
  40b1b8:	xor    eax,DWORD PTR [edi+0x28300889]
  40b1be:	out    dx,eax
  40b1bf:	arpl   WORD PTR [eax],dx
  40b1c1:	jb     0x40b14d
  40b1c3:	out    dx,eax
  40b1c4:	cmc    
  40b1c5:	les    esp,FWORD PTR [ebp-0x3d2ff9f7]
  40b1cb:	pop    ds
  40b1cc:	imul   esp,DWORD PTR [ecx+0x1],0xd0327cf4
  40b1d3:	sub    edi,DWORD PTR [ecx+0x1e821f34]
  40b1d9:	cmp    al,0x2d
  40b1db:	out    0x4,al
  40b1dd:	mov    ah,BYTE PTR [edi]
  40b1df:	mov    es,WORD PTR [eax]
  40b1e1:	mov    eax,ds:0x88039072
  40b1e6:	xchg   edi,eax
  40b1e7:	jge    0x40b220
  40b1e9:	push   esi
  40b1ea:	cmp    esp,DWORD PTR [ecx+eax*8]
  40b1ed:	cmp    eax,0x1a97cfde
  40b1f2:	cmp    DWORD PTR ds:0xc0bcf807,edi
  40b1f8:	movhps xmm1,QWORD PTR [eax+0x6c]
  40b1fc:	mov    cs,WORD PTR [ecx-0x3e5a232a]
  40b202:	sub    ecx,DWORD PTR fs:[ebx+0x37e93c65]
  40b209:	gs aas 
  40b20b:	or     ecx,edi
  40b20d:	in     al,dx
  40b20e:	xchg   DWORD PTR [eax],ecx
  40b210:	ds xchg cl,ch
  40b213:	xchg   esi,eax
  40b214:	add    DWORD PTR [edi],ecx
  40b216:	(bad)  
  40b217:	aad    0x3a
  40b219:	and    BYTE PTR [edi-0x7a],0xe7
  40b21d:	mov    es,ebp
  40b21f:	cdq    
  40b220:	push   edi
  40b221:	outs   dx,DWORD PTR ds:[esi]
  40b222:	int3   
  40b223:	mov    BYTE PTR [edi],al
  40b225:	iret   
  40b226:	dec    esp
  40b227:	pop    ds
  40b228:	mov    al,0x82
  40b22a:	dec    esp
  40b22b:	or     BYTE PTR [edx],al
  40b22d:	xchg   edi,eax
  40b22e:	inc    DWORD PTR [esi+0x54]
  40b231:	jae    0x40b1f5
  40b233:	xchg   ebp,eax
  40b234:	loope  0x40b201
  40b236:	mov    edx,0x2ec77de5
  40b23b:	idiv   BYTE PTR [ecx-0x12c727a7]
  40b241:	sbb    BYTE PTR [edx+edi*2-0x7e],ch
  40b245:	mov    ah,0xc6
  40b247:	leave  
  40b248:	scas   al,BYTE PTR es:[edi]
  40b249:	or     eax,0xf1335bcc
  40b24e:	xor    eax,0xc8e0f2a2
  40b253:	xlat   BYTE PTR ds:[ebx]
  40b254:	push   ebx
  40b255:	std    
  40b256:	mov    dh,0x88
  40b258:	sub    BYTE PTR [esi],ah
  40b25a:	std    
  40b25b:	in     eax,dx
  40b25c:	adc    eax,0xa6073c1c
  40b261:	test   eax,0x310d590
  40b266:	adc    eax,0x1fd3b290
  40b26b:	sbb    eax,0xf84e3755
  40b270:	mov    esp,0xe6f8be99
  40b275:	xor    BYTE PTR ds:0x84112c9c,dh
  40b27b:	pop    ss
  40b27c:	add    dh,bl
  40b27e:	inc    edx
  40b27f:	(bad)  
  40b280:	mov    DWORD PTR [edi],0x9b7ad50
  40b286:	cmp    esp,DWORD PTR [ecx+0x367de211]
  40b28c:	jno    0x40b21f
  40b28e:	cmp    edi,DWORD PTR [edx+0x178f5a62]
  40b294:	scas   al,BYTE PTR es:[edi]
  40b295:	jns    0x40b26e
  40b297:	retf   0x1463
  40b29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b29b:	pop    ebx
  40b29c:	sub    BYTE PTR [esi-0x743a1089],dl
  40b2a2:	ficomp DWORD PTR gs:[edi+0x2d]
  40b2a6:	mov    bh,0x1b
  40b2a8:	and    eax,0xc42d19c1
  40b2ad:	mov    BYTE PTR [ecx+ecx*4-0x6f],cl
  40b2b1:	std    
  40b2b2:	test   BYTE PTR [esi+ebp*4-0x3f56feb2],ah
  40b2b9:	adc    eax,0xc3040a99
  40b2be:	mov    bl,0x39
  40b2c0:	sub    BYTE PTR [eax],al
  40b2c2:	and    ch,0xb4
  40b2c5:	add    dl,ch
  40b2c7:	mov    cl,0x82
  40b2c9:	lea    esp,[ecx]
  40b2cb:	in     eax,0x93
  40b2cd:	inc    edx
  40b2ce:	and    BYTE PTR [eax+0x70],al
  40b2d1:	sub    al,0xec
  40b2d3:	daa    
  40b2d4:	dec    edx
  40b2d5:	bsf    esi,DWORD PTR [esi+0x18]
  40b2d9:	in     al,dx
  40b2da:	jae    0x40b2d8
  40b2dc:	test   DWORD PTR [esi-0x33c35027],eax
  40b2e2:	out    0x75,al
  40b2e4:	add    dl,BYTE PTR [edx]
  40b2e6:	sbb    eax,0xe5d8995c
  40b2eb:	jnp    0x40b309
  40b2ed:	fwait
  40b2ee:	enter  0xbaf2,0x71
  40b2f2:	add    eax,ecx
  40b2f4:	mov    eax,0x93aec133
  40b2f9:	cmp    dl,dl
  40b2fb:	push   ecx
  40b2fc:	inc    edi
  40b2fd:	mul    BYTE PTR [ecx-0x576e6694]
  40b303:	pop    ebx
  40b304:	popa   
  40b305:	jne    0x40b2c5
  40b307:	out    dx,al
  40b308:	mov    al,ds:0x45fbddbd
  40b30d:	outs   dx,BYTE PTR ds:[esi]
  40b30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b30f:	dec    ebx
  40b310:	cli    
  40b311:	push   eax
  40b312:	add    edx,0x100d7f19
  40b318:	or     DWORD PTR [esi-0x27],esi
  40b31b:	leave  
  40b31c:	ins    DWORD PTR es:[edi],dx
  40b31d:	mov    ecx,0xedc5ca77
  40b322:	add    al,BYTE PTR [edi]
  40b324:	jne    0x40b38c
  40b326:	dec    esp
  40b327:	int3   
  40b328:	ficomp DWORD PTR [edi-0x5db3b80e]
  40b32e:	hlt    
  40b32f:	dec    edi
  40b330:	scas   eax,DWORD PTR es:[edi]
  40b331:	fidiv  DWORD PTR [ebp+0x5d]
  40b334:	sbb    DWORD PTR [esi],ecx
  40b336:	and    ebp,DWORD PTR [edx]
  40b338:	pop    ss
  40b339:	loope  0x40b305
  40b33b:	pop    ecx
  40b33c:	mov    al,BYTE PTR [edx+ebx*2]
  40b33f:	ds inc ebx
  40b341:	sbb    eax,0x555c905b
  40b346:	dec    edi
  40b347:	iret   
  40b348:	fwait
  40b349:	mov    eax,0x1433eeca
  40b34e:	inc    esi
  40b34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b350:	sbb    al,0x5c
  40b352:	xor    DWORD PTR [ebx+0x79],ebp
  40b355:	push   ds
  40b356:	(bad)  
  40b357:	sbb    eax,0x8c619810
  40b35c:	mov    esi,0xa871b79
  40b361:	push   ebp
  40b362:	pxor   mm1,QWORD PTR [ecx]
  40b365:	arpl   WORD PTR [ecx+0x11ef99a6],bx
  40b36b:	push   ebp
  40b36c:	aas    
  40b36d:	xchg   edx,eax
  40b36e:	lahf   
  40b36f:	inc    eax
  40b370:	dec    ecx
  40b371:	hlt    
  40b372:	add    BYTE PTR [edi],dh
  40b374:	pop    edx
  40b375:	rcl    BYTE PTR [edx+0x5cabd7b],1
  40b37b:	xchg   ebp,eax
  40b37c:	xchg   esi,eax
  40b37d:	cmp    DWORD PTR [ebp-0x26c78165],edi
  40b383:	mov    dh,0x52
  40b385:	cmp    DWORD PTR [edi+0x346d31c1],ecx
  40b38b:	sti    
  40b38c:	fisub  WORD PTR [eax-0x1019b559]
  40b392:	clc    
  40b393:	mov    ch,0xbc
  40b395:	ss inc edx
  40b397:	and    DWORD PTR [eax+edx*8-0x40],edx
  40b39b:	leave  
  40b39c:	pop    eax
  40b39d:	imul   ebp,DWORD PTR [ecx-0x32],0x462a933
  40b3a4:	ins    DWORD PTR es:[edi],dx
  40b3a5:	adc    ebp,DWORD PTR [edx-0x11]
  40b3a8:	sub    DWORD PTR [esp+edi*8+0x3a],esi
  40b3ac:	or     al,0x1c
  40b3ae:	xchg   ecx,eax
  40b3af:	scas   al,BYTE PTR es:[edi]
  40b3b0:	cli    
  40b3b1:	mov    ch,0x0
  40b3b3:	(bad)  
  40b3b4:	cmp    cl,bh
  40b3b6:	push   ecx
  40b3b7:	mov    edx,0x7d546aca
  40b3bc:	mov    bl,0x87
  40b3be:	ficom  DWORD PTR [edx-0x7b9d55b7]
  40b3c4:	mov    ebp,0x29dca837
  40b3c9:	mov    al,0x7a
  40b3cb:	call   0xcd60:0xe926ad0c
  40b3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d3:	inc    esi
  40b3d4:	sub    esi,edi
  40b3d6:	popf   
  40b3d7:	(bad)  
  40b3d8:	ficom  DWORD PTR [ebp+0x5d651b94]
  40b3de:	sbb    cl,BYTE PTR [ebx]
  40b3e0:	mov    dh,0x56
  40b3e3:	or     BYTE PTR [ebx-0x4a],0xca
  40b3e7:	jecxz  0x40b399
  40b3e9:	cmp    BYTE PTR [edi],bh
  40b3eb:	into   
  40b3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ed:	(bad)  
  40b3ee:	neg    BYTE PTR [ebx-0x61]
  40b3f1:	add    bl,ch
  40b3f3:	into   
  40b3f4:	mov    esp,0xa84fe70
  40b3f9:	fnstcw WORD PTR [edx]
  40b3fb:	add    ebp,DWORD PTR [ebx+edx*8+0xd8fc125]
  40b402:	sbb    bh,dl
  40b404:	push   cs
  40b405:	or     eax,0x70bc4e01
  40b40a:	mov    esp,0xe319b4d0
  40b40f:	fdiv   st(2),st
  40b411:	xchg   esp,eax
  40b412:	and    eax,0x1ae08ac
  40b417:	fsubr  QWORD PTR [eax+0x78b61f6b]
  40b41d:	add    DWORD PTR [eax-0x57d68db1],0x9847fdf7
  40b427:	clc    
  40b428:	xchg   edx,eax
  40b429:	and    DWORD PTR [esi+0x6955fe60],0x1a1cf57d
  40b433:	cwde   
  40b434:	sbb    BYTE PTR [eax*1-0x78ce7d60],0x43
  40b43c:	pop    es
  40b43d:	(bad)  
  40b43e:	hlt    
  40b43f:	xchg   ebx,eax
  40b440:	(bad)  
  40b441:	push   ss
  40b442:	neg    bl
  40b444:	inc    esi
  40b445:	sbb    DWORD PTR [eax-0x2096b045],esi
  40b44b:	push   ebx
  40b44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b44d:	mov    BYTE PTR [ebp-0x2ac61b2a],dh
  40b453:	pusha  
  40b454:	shr    BYTE PTR gs:[ebp+0x37fc3fde],0x19
  40b45c:	(bad)  
  40b45d:	in     eax,0x70
  40b45f:	add    BYTE PTR [esi+0x9],cl
  40b462:	jp     0x40b40c
  40b464:	push   es
  40b465:	sbb    ah,bl
  40b467:	cmp    edx,DWORD PTR [eax+0x30]
  40b46a:	mov    ds:0xeff1b83e,al
  40b46f:	icebp  
  40b470:	icebp  
  40b471:	leave  
  40b472:	and    DWORD PTR [ebx+0x70b65287],ebx
  40b478:	mov    BYTE PTR [edx-0x7e8b3ac8],ch
  40b47e:	mov    bh,0xe4
  40b480:	imul   ebp,esp,0xf677b7ac
  40b486:	(bad)
  40b48a:	cmp    bl,BYTE PTR [ebp+0x20]
  40b48d:	jno    0x40b4d0
  40b48f:	pop    eax
  40b490:	jmp    0x40b4d1
  40b492:	fxch   st(3)
  40b494:	jne    0x40b41a
  40b496:	mov    dl,ch
  40b498:	or     esp,DWORD PTR [edx-0x35]
  40b49b:	fiadd  WORD PTR [ebx]
  40b49d:	clc    
  40b49e:	inc    esp
  40b49f:	dec    DWORD PTR [ebp-0x2fff1997]
  40b4a5:	mov    dh,0x26
  40b4a7:	add    eax,DWORD PTR [esi+0x18a5b6fa]
  40b4ad:	jmp    0xf5860a9c
  40b4b2:	and    edi,DWORD PTR [ebx+0x62195a65]
  40b4b8:	xor    BYTE PTR [ebp-0x49],dl
  40b4bb:	sar    DWORD PTR [esp+ebp*2],1
  40b4be:	push   0x1e6df43c
  40b4c3:	aad    0x6a
  40b4c5:	lahf   
  40b4c6:	mov    ah,0x88
  40b4c8:	cmp    DWORD PTR [esi+0x39],edx
  40b4cb:	xchg   DWORD PTR ds:0xac371315,esi
  40b4d1:	push   edi
  40b4d2:	loopne 0x40b51b
  40b4d4:	jl     0x40b484
  40b4d6:	div    DWORD PTR ds:0xf9fdae36
  40b4dc:	mov    ds:0x2d3559b1,eax
  40b4e1:	loop   0x40b4fe
  40b4e3:	sbb    esi,DWORD PTR [ebp+0x565627a6]
  40b4e9:	inc    ecx
  40b4ea:	pop    esp
  40b4eb:	jne    0x40b49c
  40b4ed:	adc    dl,BYTE PTR [edi+0x15e70f2]
  40b4f3:	out    0xb7,eax
  40b4f5:	xor    BYTE PTR [esi+0x39],0x10
  40b4f9:	jge    0x40b4c5
  40b4fb:	jp     0x40b533
  40b4fd:	stos   DWORD PTR es:[edi],eax
  40b4fe:	stc    
  40b4ff:	inc    ebx
  40b500:	js     0x40b4bb
  40b502:	test   DWORD PTR [ecx-0x6c15206a],esi
  40b508:	lods   eax,DWORD PTR ds:[esi]
  40b509:	inc    edi
  40b50a:	pop    edi
  40b50b:	pusha  
  40b50c:	dec    ebx
  40b50d:	rol    esp,cl
  40b50f:	or     BYTE PTR [eax+0x7],ch
  40b512:	shl    esi,1
  40b514:	add    ah,dh
  40b516:	mov    bh,0x48
  40b518:	dec    edx
  40b519:	mov    edi,0x39b2874a
  40b51e:	shr    DWORD PTR [eax],cl
  40b520:	inc    edi
  40b521:	jb     0x40b52a
  40b523:	mov    eax,ds:0xaa335c5
  40b528:	mov    eax,0xde96b9ce
  40b52d:	mov    ch,0x94
  40b52f:	scas   eax,DWORD PTR es:[edi]
  40b530:	push   edx
  40b531:	push   es
  40b532:	iret   
  40b533:	cwde   
  40b534:	push   ecx
  40b535:	icebp  
  40b536:	sbb    ebp,DWORD PTR [ebx-0x373bdfae]
  40b53c:	push   edi
  40b53d:	mov    bh,0x62
  40b53f:	jle    0x40b54b
  40b541:	shl    BYTE PTR [ecx+0x6a],cl
  40b544:	rcl    BYTE PTR [edi+ebx*8-0x33],1
  40b548:	imul   ebp,ebx,0x75c84376
  40b54e:	inc    ecx
  40b54f:	push   ss
  40b550:	pop    ebx
  40b551:	xor    al,0x8e
  40b553:	stc    
  40b554:	or     bh,BYTE PTR [edx+0x5737fb8a]
  40b55a:	xor    BYTE PTR [edi],0x8d
  40b55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b55e:	out    dx,al
  40b55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b560:	loop   0x40b582
  40b562:	mov    ah,0xa4
  40b564:	fdivrp st(3),st
  40b566:	inc    ebp
  40b567:	mov    di,0x3f30
  40b56b:	xchg   esi,eax
  40b56c:	(bad)  
  40b56d:	clc    
  40b56e:	mov    ds:0xcaa14f11,eax
  40b573:	js     0x40b51d
  40b575:	cmc    
  40b576:	std    
  40b577:	and    ch,BYTE PTR [ebp-0x7010b2cf]
  40b57d:	and    al,0x4c
  40b57f:	sahf   
  40b580:	ss mov bl,0x46
  40b583:	jo     0x40b51a
  40b585:	cld    
  40b586:	dec    esp
  40b587:	pop    eax
  40b588:	dec    esi
  40b589:	pop    ebp
  40b58a:	push   es
  40b58b:	or     eax,0x60e21ff0
  40b590:	jmp    0x41f9715e
  40b595:	push   cs
  40b596:	lds    esp,FWORD PTR [esi+ebx*1]
  40b599:	call   0x8ac6f201
  40b59e:	xor    ebx,DWORD PTR [esi]
  40b5a0:	xchg   ebp,eax
  40b5a1:	mov    ds:0x59fe4ef3,al
  40b5a6:	imul   ecx,DWORD PTR [ebx],0x2c7c370a
  40b5ac:	mov    dh,0x59
  40b5ae:	je     0x40b54d
  40b5b0:	int3   
  40b5b1:	in     eax,0xcb
  40b5b3:	sub    BYTE PTR [edx+ebx*1],ah
  40b5b6:	adc    ah,BYTE PTR [eax+0x5a]
  40b5b9:	addr16 fcmovnb st,st(6)
  40b5bc:	or     eax,0x1ace0784
  40b5c1:	jmp    0x40b54e
  40b5c3:	lock inc esp
  40b5c5:	enter  0x6044,0xf1
  40b5c9:	in     eax,dx
  40b5ca:	shr    DWORD PTR [eax-0x67],cl
  40b5cd:	jle    0x40b5ec
  40b5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d0:	and    edx,esi
  40b5d2:	mov    ah,0x3
  40b5d4:	adc    al,0x23
  40b5d6:	lahf   
  40b5d7:	daa    
  40b5d8:	fisub  DWORD PTR [edx-0x45]
  40b5db:	imul   esi,DWORD PTR [esi-0x33c5c484],0x45
  40b5e2:	(bad)  
  40b5e3:	in     eax,dx
  40b5e4:	nop
  40b5e5:	add    eax,ebx
  40b5e7:	xchg   ebx,eax
  40b5e8:	and    esp,DWORD PTR [ebx-0x4a93bd04]
  40b5ee:	mov    ch,0x32
  40b5f0:	je     0x40b57e
  40b5f2:	retf   0x1d65
  40b5f5:	lea    ebp,[ecx-0x44]
  40b5f8:	cmc    
  40b5f9:	inc    BYTE PTR [esi-0x6050521c]
  40b5ff:	and    ecx,0x2761a401
  40b605:	xor    ah,BYTE PTR gs:[eax-0x55]
  40b609:	(bad)  
  40b60a:	cmp    eax,0x911cf605
  40b60f:	cmp    BYTE PTR [eax+esi*1+0x70e53db2],0x11
  40b617:	scas   eax,DWORD PTR es:[edi]
  40b618:	in     eax,dx
  40b619:	xchg   edi,eax
  40b61a:	jbe    0x40b5a3
  40b61c:	jbe    0x40b5fa
  40b61e:	pushf  
  40b61f:	mov    edx,0x9760e9be
  40b624:	lock ss push ss
  40b627:	mov    WORD PTR [ebx-0x73],?
  40b62a:	add    eax,0x7439508b
  40b62f:	(bad)
  40b632:	stos   BYTE PTR es:[edi],al
  40b633:	mov    eax,0xa6ba16af
  40b638:	call   0xe49:0xceb0294d
  40b63f:	xchg   ebp,eax
  40b640:	mov    bl,0x30
  40b642:	or     dl,BYTE PTR [eax]
  40b644:	(bad)  
  40b645:	out    0xa8,al
  40b647:	cmp    eax,0xfa7c936e
  40b64c:	push   ebx
  40b64d:	sub    bh,al
  40b64f:	push   edi
  40b650:	dec    ecx
  40b651:	mov    ebp,0x3cb9f88a
  40b656:	inc    esp
  40b657:	mov    fs:0x4bdb2fe1,al
  40b65d:	inc    esp
  40b65e:	rdmsr  
  40b660:	pop    esi
  40b661:	jnp    0x40b691
  40b663:	pop    esp
  40b664:	out    dx,eax
  40b665:	push   0x10880fac
  40b66a:	fst    QWORD PTR [eax+0x7f3a4722]
  40b670:	inc    esi
  40b671:	jmp    0x9a23985e
  40b676:	int3   
  40b677:	imul   ebx,DWORD PTR [eax+0x497521a8],0x5c
  40b67e:	(bad)  
  40b680:	sar    ch,1
  40b682:	mov    al,ds:0x99005339
  40b687:	jg     0x40b6c6
  40b689:	or     edi,DWORD PTR [ebx+0x3b7c0e5f]
  40b68f:	jbe    0x40b642
  40b691:	std    
  40b692:	fdivr  DWORD PTR [edi+0x471724a]
  40b698:	pop    edi
  40b699:	ds jmp 0x9c81bee4
  40b69f:	rcl    DWORD PTR [edx+0x7f],cl
  40b6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a3:	pop    ebp
  40b6a4:	retf   0x1c3d
  40b6a7:	aas    
  40b6a8:	js     0x40b680
  40b6aa:	loop   0x40b66d
  40b6ac:	push   ebx
  40b6ad:	jmp    0x40b691
  40b6af:	std    
  40b6b0:	xchg   edi,eax
  40b6b1:	out    0xf,al
  40b6b3:	xor    DWORD PTR [eax],0xfffffffc
  40b6b6:	test   BYTE PTR ds:0x250bf17f,bh
  40b6bc:	fsub   QWORD PTR [esi+0x281e2f84]
  40b6c2:	jnp    0x40b653
  40b6c4:	pop    es
  40b6c5:	int    0x42
  40b6c7:	addr16 daa 
  40b6c9:	xchg   BYTE PTR [esi-0x77],ah
  40b6cc:	mov    WORD PTR [ebx-0x17f144fd],?
  40b6d2:	push   esp
  40b6d3:	fs pop edi
  40b6d5:	leave  
  40b6d6:	jne    0x40b663
  40b6d8:	iret   
  40b6d9:	sbb    ebp,ebp
  40b6db:	sub    DWORD PTR [eax],0xcc2c984
  40b6e1:	push   esp
  40b6e2:	test   DWORD PTR [edx+0x1caa9a55],esp
  40b6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e9:	add    BYTE PTR [ebp+0x4de75eec],al
  40b6ef:	push   0xffffffdc
  40b6f1:	and    eax,0xe8ac8c91
  40b6f6:	fisttp QWORD PTR [esi-0x1fab518e]
  40b6fc:	mov    BYTE PTR ds:0x5f60b9a,bh
  40b702:	clc    
  40b703:	fadd   st,st(6)
  40b705:	push   esp
  40b707:	mov    edi,0x9f8c4c93
  40b70c:	push   ebx
  40b70d:	cmp    esi,DWORD PTR [esi+0x36]
  40b710:	sar    ebx,0x13
  40b713:	(bad)
  40b717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b718:	inc    esp
  40b719:	inc    esi
  40b71a:	sbb    al,0xbf
  40b71c:	(bad)  
  40b71d:	loop   0x40b6c0
  40b71f:	int    0x9f
  40b721:	rcr    ebx,cl
  40b723:	shr    DWORD PTR [esi],cl
  40b725:	int    0x4c
  40b727:	mov    ebx,DWORD PTR [ebx+0x54]
  40b72a:	adc    dh,BYTE PTR [ebx]
  40b72c:	xor    DWORD PTR [ebx+0x5dcdc963],ecx
  40b732:	(bad)
  40b735:	rol    DWORD PTR [ecx],cl
  40b737:	loopne 0x40b712
  40b739:	(bad)  
  40b73a:	bound  ebx,QWORD PTR [ecx]
  40b73c:	mov    eax,0x743bbae4
  40b741:	ins    BYTE PTR es:[edi],dx
  40b742:	cmp    eax,0xdacfeca5
  40b747:	sub    eax,0xce41c19b
  40b74c:	inc    ecx
  40b74d:	or     BYTE PTR [edi+esi*8+0x71],dh
  40b751:	ret    0x89b5
  40b754:	mov    ch,0x24
  40b756:	aaa    
  40b757:	int3   
  40b758:	sub    DWORD PTR [esi],ebp
  40b75a:	jmp    DWORD PTR [edi]
  40b75c:	pusha  
  40b75d:	(bad)  [eax]
  40b75f:	fwait
  40b760:	jno    0x40b7cc
  40b762:	push   esp
  40b763:	loopne 0x40b7be
  40b765:	adc    eax,0x68129b9e
  40b76a:	pop    eax
  40b76b:	shl    BYTE PTR ds:0xcbdb95e3,1
  40b771:	pop    eax
  40b772:	push   ebp
  40b773:	lahf   
  40b774:	adc    DWORD PTR [edi-0x34],0xfffffff5
  40b778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b779:	pop    edi
  40b77a:	mov    ch,0xc9
  40b77c:	sbb    eax,0xc51d91e8
  40b781:	add    al,0x33
  40b783:	cmc    
  40b784:	jnp    0x40b7b3
  40b786:	aad    0x95
  40b788:	ds adc esp,esi
  40b78b:	fist   WORD PTR [eax+ebx*4-0x678132de]
  40b792:	xor    bl,cl
  40b794:	jns    0x40b7b8
  40b796:	mov    al,0xf8
  40b798:	outs   dx,DWORD PTR ds:[esi]
  40b799:	xchg   esp,eax
  40b79a:	and    dl,BYTE PTR ds:0x24e5bc1e
  40b7a0:	sub    al,0x4c
  40b7a2:	xchg   esp,eax
  40b7a3:	(bad)  [ebx-0x36642654]
  40b7a9:	fs lahf 
  40b7ab:	jae    0x40b794
  40b7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ae:	sti    
  40b7af:	lock pop eax
  40b7b1:	outs   dx,BYTE PTR ds:[esi]
  40b7b2:	inc    esi
  40b7b3:	fisub  WORD PTR [edx+ebp*8+0x7b19ff26]
  40b7ba:	dec    ebp
  40b7bb:	lahf   
  40b7bc:	mov    esp,0x3fec705d
  40b7c1:	push   ss
  40b7c2:	icebp  
  40b7c3:	test   al,0x1f
  40b7c5:	inc    eax
  40b7c6:	add    edx,ebp
  40b7c8:	xor    dh,bl
  40b7ca:	xchg   DWORD PTR [edi+edx*2-0x75acf26a],edx
  40b7d1:	jg     0x40b805
  40b7d3:	add    BYTE PTR [esi+ebx*1+0x47eeaaa],0x1d
  40b7db:	jae    0x40b7e1
  40b7dd:	clc    
  40b7de:	and    al,0x12
  40b7e0:	das    
  40b7e1:	xchg   esi,eax
  40b7e2:	fnstsw WORD PTR [edi-0x3]
  40b7e5:	inc    esp
  40b7e6:	outs   dx,DWORD PTR ds:[esi]
  40b7e7:	shl    DWORD PTR [esi-0x40],0xcd
  40b7eb:	outs   dx,BYTE PTR ds:[esi]
  40b7ec:	fcmovnu st,st(7)
  40b7ee:	ss sub al,0x15
  40b7f1:	jge    0x40b7a3
  40b7f3:	jmp    0x40b845
  40b7f5:	test   DWORD PTR [eax+0x33b40a2c],0x7f65dc93
  40b7ff:	push   ebx
  40b800:	aas    
  40b801:	ror    BYTE PTR [edi],0x67
  40b804:	fwait
  40b805:	add    DWORD PTR [esi-0x177667ce],ebp
  40b80b:	jge    0x40b85f
  40b80d:	ss inc esp
  40b80f:	pop    esp
  40b810:	mov    ecx,DWORD PTR [edi+ebp*1-0x2f]
  40b814:	jo     0x40b7ea
  40b816:	ds mov esp,0x41dda320
  40b81c:	jg     0x40b7ef
  40b81e:	ds pop es
  40b820:	add    eax,0x14d39e5a
  40b825:	mov    dh,BYTE PTR [eax+ebp*1+0x20101126]
  40b82c:	fist   WORD PTR [ebp-0x70]
  40b82f:	push   ebx
  40b830:	imul   ebp,DWORD PTR [esi+0x56],0xb675c782
  40b837:	pop    ebx
  40b838:	std    
  40b839:	ss sbb eax,0xe24cdaf7
  40b83f:	in     al,dx
  40b840:	scas   al,BYTE PTR es:[edi]
  40b841:	aad    0x17
  40b843:	push   ebx
  40b844:	pop    esp
  40b845:	xchg   ebx,eax
  40b846:	mov    ch,0x66
  40b848:	cwde   
  40b849:	stos   DWORD PTR es:[edi],eax
  40b84a:	leave  
  40b84b:	in     eax,dx
  40b84c:	fnstsw WORD PTR [ebx]
  40b84e:	xlat   BYTE PTR ds:[ebx]
  40b84f:	hlt    
  40b850:	imul   esp,DWORD PTR [edi-0x4f],0xfffffffd
  40b854:	fld    QWORD PTR [ebp+0x384effa1]
  40b85a:	ja     0x40b820
  40b85c:	xrelease lock sbb BYTE PTR [ebp-0x39],bh
  40b861:	inc    esp
  40b862:	arpl   WORD PTR [edx+0x124350e9],sp
  40b868:	inc    esp
  40b869:	pop    ebp
  40b86a:	jge    0x40b805
  40b86c:	popf   
  40b86d:	in     al,0x6f
  40b86f:	push   edi
  40b870:	mov    ds:0x81ff471,al
  40b875:	sar    ecx,cl
  40b877:	je     0x40b865
  40b879:	call   0x3bd5:0x94b93621
  40b880:	retf   
  40b881:	(bad)  
  40b883:	add    BYTE PTR [esi+esi*4],cl
  40b886:	in     al,dx
  40b887:	mov    esi,0x192a6db7
  40b88c:	in     eax,0x96
  40b88e:	(bad)  
  40b890:	pop    ecx
  40b891:	loop   0x40b8c9
  40b893:	ret    
  40b894:	sbb    esi,DWORD PTR [ecx]
  40b896:	loopne 0x40b876
  40b898:	and    DWORD PTR [ebp-0x1a],ebp
  40b89b:	mov    eax,0xf86a0c6f
  40b8a0:	adc    ah,bl
  40b8a2:	mov    cl,0xa
  40b8a4:	shr    eax,1
  40b8a6:	adc    BYTE PTR [ecx-0x7c],dh
  40b8a9:	fild   DWORD PTR [eax+0x46]
  40b8ac:	loop   0x40b8a6
  40b8ae:	add    DWORD PTR [edx],ebp
  40b8b0:	daa    
  40b8b1:	iret   
  40b8b2:	in     al,dx
  40b8b3:	(bad)  
  40b8b4:	loope  0x40b83a
  40b8b6:	in     al,dx
  40b8b7:	push   eax
  40b8b8:	push   esp
  40b8b9:	sbb    al,0xdd
  40b8bb:	jns    0x40b86e
  40b8bd:	inc    esi
  40b8be:	jl     0x40b927
  40b8c0:	scas   al,BYTE PTR es:[edi]
  40b8c1:	ret    0x6eb6
  40b8c4:	popf   
  40b8c5:	cmp    bl,BYTE PTR [ebx-0x4543de2c]
  40b8cb:	or     DWORD PTR [esi],esi
  40b8cd:	push   DWORD PTR [ecx]
  40b8cf:	pop    ss
  40b8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d1:	jno    0x40b929
  40b8d3:	icebp  
  40b8d4:	pop    edx
  40b8d5:	out    0xad,al
  40b8d7:	bound  ebp,QWORD PTR [ecx]
  40b8d9:	mov    bh,0x0
  40b8db:	std    
  40b8dc:	dec    eax
  40b8dd:	ret    0x5926
  40b8e0:	push   ds
  40b8e1:	push   cs
  40b8e2:	fld    QWORD PTR [eax+0x46]
  40b8e5:	dec    edi
  40b8e6:	sbb    DWORD PTR [ebx],ecx
  40b8e8:	jbe    0x40b91c
  40b8ea:	mov    al,ds:0x2bf4382b
  40b8ef:	jp     0x40b91d
  40b8f1:	arpl   si,si
  40b8f3:	fcom   st(6)
  40b8f5:	fs mov al,dl
  40b8f8:	and    dh,BYTE PTR [esi]
  40b8fa:	psrlq  mm4,mm3
  40b8fd:	dec    esi
  40b8fe:	adc    al,0x27
  40b900:	(bad)  
  40b902:	aas    
  40b903:	or     BYTE PTR [ecx+edi*8-0x21],ah
  40b907:	sbb    al,0x8e
  40b909:	iret   
  40b90a:	mov    esp,0xfeb4b86f
  40b90f:	add    bh,BYTE PTR [edx+0xc]
  40b912:	int    0xae
  40b914:	xchg   ecx,eax
  40b915:	aas    
  40b916:	jecxz  0x40b8c9
  40b918:	adc    al,0x6c
  40b91a:	arpl   WORD PTR [ecx-0x59],cx
  40b91d:	pop    ds
  40b91e:	loop   0x40b98f
  40b920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b921:	cs cmc 
  40b923:	cmc    
  40b924:	pop    esp
  40b925:	cmp    eax,0xb4af4c24
  40b92a:	push   eax
  40b92b:	stc    
  40b92c:	push   0x46
  40b92e:	push   cs
  40b92f:	push   0x71b6ee78
  40b934:	rcl    DWORD PTR [ebp+0x26],cl
  40b937:	push   ss
  40b938:	cmp    DWORD PTR [ecx],edx
  40b93a:	clc    
  40b93b:	xchg   ebp,eax
  40b93c:	push   esi
  40b93d:	add    bl,BYTE PTR [ebp+0x3d0bf288]
  40b943:	ret    
  40b944:	xchg   BYTE PTR [ebx],ch
  40b946:	adc    ebp,ecx
  40b948:	ins    DWORD PTR es:[edi],dx
  40b949:	fwait
  40b94a:	stos   DWORD PTR es:[edi],eax
  40b94b:	mov    DWORD PTR [ecx-0x4375e963],esi
  40b951:	cmp    ebx,DWORD PTR [eax-0x31]
  40b954:	xchg   eax,edi
  40b956:	popf   
  40b957:	out    0x42,al
  40b959:	jp     0x40b9d0
  40b95b:	outs   dx,BYTE PTR ds:[esi]
  40b95c:	adc    al,0x68
  40b95e:	pop    ds
  40b95f:	lds    esi,FWORD PTR [edi]
  40b961:	jae    0x40b94a
  40b963:	sub    DWORD PTR [edi],eax
  40b965:	data16 mov dl,0xd4
  40b968:	aad    0x92
  40b96a:	(bad)  
  40b96b:	rcr    DWORD PTR [ebp+0x33],cl
  40b96e:	test   BYTE PTR [ebx+0x1469fd1],ch
  40b974:	or     dl,ah
  40b976:	repz dec edx
  40b978:	mov    edx,0x725e5a0
  40b97d:	and    al,0x71
  40b97f:	and    al,0xf7
  40b981:	pop    ebx
  40b982:	into   
  40b983:	or     esi,DWORD PTR [ecx]
  40b985:	jmp    0x2f71:0xac167397
  40b98c:	jno    0x40b9fd
  40b98e:	xchg   ecx,eax
  40b98f:	loopne 0x40b9f7
  40b991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b992:	out    dx,eax
  40b993:	pop    eax
  40b994:	push   ebp
  40b995:	ja     0x40b9ea
  40b997:	pop    ebp
  40b998:	outs   dx,BYTE PTR ds:[esi]
  40b999:	jge    0x40b95d
  40b99b:	jae    0x40b963
  40b99d:	fadd   st,st(0)
  40b99f:	add    DWORD PTR ds:[esi+0x40],ebp
  40b9a3:	mov    DWORD PTR [eax+ebx*8-0x44],ebx
  40b9a7:	or     dh,BYTE PTR [esi+edi*4-0x6872b36]
  40b9ae:	in     al,dx
  40b9af:	xor    DWORD PTR [edi+0x5a],ebx
  40b9b2:	lock pop ds
  40b9b4:	bound  esi,QWORD PTR [eax]
  40b9b6:	xchg   ebx,eax
  40b9b7:	mov    esi,0xcf453568
  40b9bc:	repz xchg ebx,eax
  40b9be:	inc    BYTE PTR [ecx]
  40b9c0:	mov    WORD PTR [edx-0x27],?
  40b9c3:	fldenv [eax+0x14]
  40b9c6:	daa    
  40b9c7:	add    eax,0x81eac974
  40b9cc:	shl    DWORD PTR [edx+eiz*8],0x2e
  40b9d0:	push   ebx
  40b9d1:	jno    0x40b972
  40b9d3:	xor    al,0xbe
  40b9d5:	push   ss
  40b9d6:	or     esi,DWORD PTR [eax+0x5a5e6307]
  40b9dc:	fst    QWORD PTR [edx-0x14]
  40b9df:	jg     0x40b9ed
  40b9e1:	push   ebx
  40b9e2:	inc    edx
  40b9e3:	xchg   BYTE PTR [ecx+0x492959a9],bh
  40b9e9:	adc    al,0x76
  40b9eb:	clc    
  40b9ec:	pop    ecx
  40b9ed:	and    BYTE PTR [esp+ebx*8+0x68],bl
  40b9f1:	push   cs
  40b9f2:	xor    eax,0xe8b4d3af
  40b9f7:	(bad)  
  40b9f9:	fdivr  QWORD PTR [esi+ebp*1]
  40b9fc:	sbb    eax,0x81b2caa5
  40ba01:	loop   0x40ba39
  40ba03:	retf   0xda17
  40ba06:	push   esp
  40ba07:	sub    ch,0xf9
  40ba0a:	gs dec eax
  40ba0c:	inc    esi
  40ba0d:	scas   al,BYTE PTR es:[edi]
  40ba0e:	add    dh,0x3f
  40ba11:	addr16 pushf 
  40ba13:	(bad)  
  40ba14:	fadd   QWORD PTR [edx+0x38]
  40ba17:	faddp  st(3),st
  40ba19:	arpl   WORD PTR ds:0x1252e2c3,sp
  40ba1f:	fcomip st,st(1)
  40ba21:	push   edx
  40ba22:	sub    eax,0x15dac539
  40ba27:	out    0xdf,al
  40ba29:	ins    DWORD PTR es:[edi],dx
  40ba2a:	and    DWORD PTR [ebp-0x28],edx
  40ba2d:	add    ebx,DWORD PTR [edx-0x1b96447d]
  40ba33:	int    0xcb
  40ba35:	sbb    DWORD PTR ds:0x364cb55e,0x81be6d9d
  40ba3f:	and    dl,BYTE PTR [ecx+0x2671c0a]
  40ba45:	xchg   edx,eax
  40ba46:	(bad)  
  40ba47:	jno    0x40b9dd
  40ba49:	in     eax,0x47
  40ba4b:	test   DWORD PTR [eax-0x56],ebx
  40ba4e:	ret    0xaa7e
  40ba51:	pop    ds
  40ba52:	jno    0x40ba94
  40ba54:	ins    BYTE PTR es:[edi],dx
  40ba55:	test   eax,0xfa2b4d3f
  40ba5a:	scas   eax,DWORD PTR es:[edi]
  40ba5b:	push   0xffffffe0
  40ba5d:	dec    eax
  40ba5e:	dec    ecx
  40ba5f:	rcr    BYTE PTR [eax],cl
  40ba61:	xor    eax,0x8d65a5c2
  40ba66:	sar    ecx,cl
  40ba68:	xchg   edx,eax
  40ba69:	sbb    eax,0xe3f2fa0e
  40ba6e:	or     eax,DWORD PTR [edi-0x80]
  40ba71:	shr    cl,cl
  40ba73:	sti    
  40ba74:	sub    eax,0x6820dfac
  40ba79:	rcr    DWORD PTR [edi+0x7],cl
  40ba7c:	and    DWORD PTR [edi-0x3b8b289e],esp
  40ba82:	xor    al,0x40
  40ba84:	sub    BYTE PTR [esi-0x6d25738f],0xa7
  40ba8b:	(bad)  
  40ba8c:	shl    ch,0x68
  40ba8f:	jmp    0xf6c73df6
  40ba94:	ja     0x40baff
  40ba96:	adc    DWORD PTR [ecx+esi*4-0x29],eax
  40ba9a:	rol    ebx,0x46
  40ba9d:	pop    ds
  40ba9e:	repnz xor DWORD PTR [esi-0x6d],ebp
  40baa2:	std    
  40baa3:	mov    esi,0x4a44a8a2
  40baa8:	jge    0x40ba4a
  40baaa:	loope  0x40ba8f
  40baac:	mov    bh,0x99
  40baae:	pop    esp
  40baaf:	fcom   QWORD PTR [ecx]
  40bab1:	mov    edx,0xd05518e9
  40bab6:	jge    0x40ba95
  40bab8:	cli    
  40bab9:	xor    al,0xa2
  40babb:	je     0x40ba69
  40babd:	fbstp  TBYTE PTR [ecx+edi*2+0x34a2b7e1]
  40bac4:	daa    
  40bac5:	fisttp WORD PTR [edi]
  40bac7:	adc    ah,BYTE PTR [esp+esi*1]
  40baca:	sar    DWORD PTR [edi-0x6f43bc2a],1
  40bad0:	aad    0xc1
  40bad2:	push   es
  40bad3:	sub    ah,dl
  40bad5:	pop    esp
  40bad6:	imul   esi,DWORD PTR [ebx-0x39],0x3c
  40bada:	adc    dh,BYTE PTR [edx-0x80]
  40badd:	cmc    
  40bade:	xchg   BYTE PTR [edi-0x1ee6eaff],dh
  40bae4:	in     eax,0x19
  40bae6:	ss mov eax,0x7b7b283c
  40baec:	cwde   
  40baed:	(bad)  
  40baef:	inc    eax
  40baf0:	ins    DWORD PTR es:[edi],dx
  40baf1:	mov    edx,ds
  40baf3:	sti    
  40baf4:	data16 sahf 
  40baf6:	out    0x9a,eax
  40baf8:	shl    DWORD PTR [edx-0xc],cl
  40bafb:	adc    edi,ecx
  40bafd:	mov    dl,0xe8
  40baff:	in     al,0x99
  40bb01:	cmp    BYTE PTR [eax],ch
  40bb03:	fcom   QWORD PTR [esi+0x77fc22ac]
  40bb09:	jnp    0x40bad3
  40bb0b:	or     eax,0xa9df5dbf
  40bb10:	cmp    ebp,DWORD PTR [esi]
  40bb12:	mov    dh,0xbd
  40bb14:	(bad)  
  40bb15:	rcr    DWORD PTR [ecx+0x339bde9f],cl
  40bb1b:	and    al,0x76
  40bb1d:	out    dx,al
  40bb1e:	sub    al,0x48
  40bb20:	pusha  
  40bb21:	xor    al,0x64
  40bb23:	gs mov ?,esp
  40bb26:	push   0xffffffe7
  40bb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb29:	mov    esp,0x54b6ca6e
  40bb2e:	cmp    DWORD PTR [esi],ecx
  40bb30:	push   eax
  40bb31:	pop    ss
  40bb32:	rcl    bh,1
  40bb34:	test   BYTE PTR [ebx-0x4eb3df22],0xc
  40bb3b:	and    ebx,esi
  40bb3d:	popf   
  40bb3e:	icebp  
  40bb3f:	cmp    ebx,ebp
  40bb41:	je     0x40badc
  40bb43:	mov    esp,0x9d5a4187
  40bb48:	cdq    
  40bb49:	jmp    0x9f7cf98a
  40bb4e:	in     al,0xe6
  40bb50:	xchg   BYTE PTR [edx+0xa],al
  40bb53:	fsub   QWORD PTR [edi-0x2f]
  40bb56:	mov    BYTE PTR [esi+0x58],ah
  40bb59:	cmp    eax,0xc7ce6e56
  40bb5e:	and    eax,0x872b8ecc
  40bb63:	out    0xe2,al
  40bb65:	imul   ebx,DWORD PTR [ecx],0xffffffcf
  40bb68:	fwait
  40bb69:	cs jmp 0x40bb40
  40bb6c:	rol    BYTE PTR [eax+0x7a],cl
  40bb6f:	loopne 0x40bb8f
  40bb71:	push   0x65aa15b5
  40bb76:	cmp    eax,0xea3193c0
  40bb7b:	add    DWORD PTR [edx-0x2f],ebp
  40bb7e:	xor    BYTE PTR [ecx+ebx*2],dl
  40bb81:	cmp    BYTE PTR [ebx],cl
  40bb83:	mov    dh,0xab
  40bb85:	fcmove st,st(5)
  40bb87:	mov    ebp,0x179260d0
  40bb8c:	jge    0x40bbdb
  40bb8e:	leave  
  40bb8f:	mov    ?,WORD PTR [eax-0x3fd7bc50]
  40bb95:	jge    0x40bb4a
  40bb97:	dec    ecx
  40bb98:	push   0x37f2563d
  40bb9d:	les    ebp,FWORD PTR [ecx-0x3f]
  40bba0:	pop    ss
  40bba1:	add    ebx,DWORD PTR [ecx+0x4f0f4669]
  40bba7:	push   0xffffffa4
  40bba9:	out    dx,al
  40bbaa:	imul   edx,DWORD PTR [esi-0x2466ef93],0xffffffca
  40bbb1:	xchg   ebx,eax
  40bbb2:	loope  0x40bb85
  40bbb4:	mov    ecx,0xf6445e59
  40bbb9:	fcmove st,st(7)
  40bbbb:	mov    esi,0xf3e8df93
  40bbc0:	and    al,0xbf
  40bbc2:	loopne 0x40bb5c
  40bbc4:	pop    ecx
  40bbc5:	push   esi
  40bbc6:	mov    ecx,0x4a3a4f15
  40bbcb:	stc    
  40bbcc:	scas   al,BYTE PTR es:[edi]
  40bbcd:	xor    DWORD PTR [esi],0xf00bbd1d
  40bbd3:	ffree  st(7)
  40bbd5:	out    0xe8,al
  40bbd7:	shl    DWORD PTR [eax-0xb],0xfb
  40bbdb:	xor    al,0xac
  40bbdd:	xor    al,BYTE PTR [ebp+0x168176d9]
  40bbe3:	popf   
  40bbe4:	mov    esp,ss
  40bbe6:	or     BYTE PTR [ecx],bh
  40bbe8:	ins    BYTE PTR es:[edi],dx
  40bbe9:	je     0x40bc5e
  40bbeb:	or     BYTE PTR [ebx-0x1],bl
  40bbee:	add    eax,0xc0ffbd75
  40bbf3:	sbb    ecx,DWORD PTR [ecx+0x70]
  40bbf6:	sbb    al,0xf3
  40bbf8:	call   0xa245dc6e
  40bbfd:	xor    eax,0xb08d9d1d
  40bc02:	test   al,0xc
  40bc04:	stos   BYTE PTR es:[edi],al
  40bc05:	add    eax,0x1015f59f
  40bc0a:	xchg   DWORD PTR [ebx+eax*4+0x306ee567],ecx
  40bc11:	sti    
  40bc12:	jbe    0x40bc8f
  40bc14:	add    DWORD PTR [ecx+0x7a7c6d60],ebx
  40bc1a:	xor    eax,0x25dcff8d
  40bc1f:	pop    ss
  40bc20:	sar    DWORD PTR [eax],0xbc
  40bc23:	popf   
  40bc24:	arpl   WORD PTR [eax-0x4786f8ac],bx
  40bc2a:	ins    BYTE PTR es:[edi],dx
  40bc2b:	dec    edx
  40bc2c:	shr    BYTE PTR ds:0xbb733580,cl
  40bc32:	test   eax,0xdfcd4908
  40bc37:	sbb    BYTE PTR [eax],ch
  40bc39:	xchg   edx,eax
  40bc3a:	jb     0x40bbf1
  40bc3c:	jb     0x40bbc7
  40bc3e:	(bad)  
  40bc3f:	sub    ebx,eax
  40bc41:	cmp    eax,0x85b888a7
  40bc46:	gs scas al,BYTE PTR es:[edi]
  40bc48:	xor    al,0x54
  40bc4a:	cld    
  40bc4b:	or     al,0x45
  40bc4d:	dec    ebp
  40bc4e:	mov    eax,ds:0xc089c1dc
  40bc53:	mov    ebx,?
  40bc55:	jecxz  0x40bc95
  40bc57:	adc    cl,BYTE PTR [edx+edx*2+0x0]
  40bc5b:	push   cs
  40bc5c:	xchg   ecx,eax
  40bc5d:	dec    esp
  40bc5e:	xchg   ecx,eax
  40bc5f:	(bad)  
  40bc60:	out    0x48,eax
  40bc62:	cmp    BYTE PTR [ebx-0x1263b425],cl
  40bc68:	test   DWORD PTR [edi+0x13],0x64e00654
  40bc6f:	popa   
  40bc70:	addr16 and eax,0x6f
  40bc74:	pop    ebp
  40bc75:	adc    BYTE PTR [eax+ebp*2],0x91
  40bc79:	ss popa 
  40bc7b:	loop   0x40bc78
  40bc7d:	adc    ecx,DWORD PTR [eax+0x1499d48f]
  40bc83:	pusha  
  40bc84:	shl    BYTE PTR [ebx+0x7e],0xd5
  40bc88:	add    eax,0xb5c44585
  40bc8e:	add    al,al
  40bc90:	cmp    DWORD PTR [esi],eax
  40bc92:	xor    dh,BYTE PTR [edi]
  40bc94:	(bad)  
  40bc95:	fild   QWORD PTR [edi-0x7c]
  40bc98:	outs   dx,DWORD PTR ds:[esi]
  40bc99:	adc    ecx,DWORD PTR [ebp+0x44]
  40bc9c:	or     edx,DWORD PTR [esi]
  40bc9e:	jne    0x40bcf4
  40bca0:	sub    al,0x3
  40bca2:	dec    esp
  40bca3:	jecxz  0x40bd23
  40bca5:	mov    fs,WORD PTR [si]
  40bca8:	mov    dh,0x1c
  40bcaa:	fwait
  40bcab:	test   ch,bl
  40bcad:	mov    ebx,0xd85030af
  40bcb2:	cdq    
  40bcb3:	ds das 
  40bcb5:	in     eax,dx
  40bcb6:	dec    ebx
  40bcb7:	xor    edx,DWORD PTR [edi-0x5c4ff86]
  40bcbd:	popa   
  40bcbe:	sub    dh,bl
  40bcc0:	scas   eax,DWORD PTR es:[edi]
  40bcc1:	fnsave [esi]
  40bcc3:	push   ebx
  40bcc4:	mov    bl,0xb
  40bcc6:	int3   
  40bcc7:	jb     0x40bc9a
  40bcc9:	nop
  40bcca:	dec    edi
  40bccb:	ror    ebx,1
  40bccd:	mov    bl,0xba
  40bccf:	xor    dl,ah
  40bcd1:	loopne 0x40bd40
  40bcd3:	inc    edi
  40bcd4:	and    eax,0x615a292e
  40bcda:	mov    esp,0x8fbee491
  40bcdf:	int    0x2a
  40bce1:	stos   DWORD PTR es:[edi],eax
  40bce2:	mov    bl,BYTE PTR [esi+0x1be753d3]
  40bce8:	pop    esp
  40bce9:	lds    ecx,FWORD PTR [edi-0x1c3f90be]
  40bcef:	scas   al,BYTE PTR es:[edi]
  40bcf0:	or     esp,DWORD PTR [ecx]
  40bcf2:	jmp    0xf4e9:0xadb0f88c
  40bcf9:	into   
  40bcfa:	pop    ss
  40bcfb:	fwait
  40bcfc:	outs   dx,BYTE PTR ds:[esi]
  40bcfd:	xlat   BYTE PTR ds:[ebx]
  40bcfe:	outs   dx,BYTE PTR ds:[esi]
  40bcff:	xor    ecx,esp
  40bd01:	lods   eax,DWORD PTR ds:[esi]
  40bd02:	inc    esi
  40bd03:	cmp    eax,0x8b38eda2
  40bd08:	mov    BYTE PTR [esi+esi*8-0x3e],dh
  40bd0c:	sahf   
  40bd0d:	in     eax,0x55
  40bd0f:	aaa    
  40bd10:	(bad)  [edx]
  40bd12:	inc    edi
  40bd13:	xor    eax,DWORD PTR [edx-0x3365723c]
  40bd19:	mov    esi,0x8676496e
  40bd1e:	push   edi
  40bd1f:	das    
  40bd20:	scas   eax,DWORD PTR es:[edi]
  40bd21:	mov    ch,0xed
  40bd23:	xchg   esp,eax
  40bd24:	outs   dx,DWORD PTR ds:[esi]
  40bd25:	adc    DWORD PTR [ebx-0x6b1c5bbc],0xffffff99
  40bd2c:	push   ecx
  40bd2d:	js     0x40bcf2
  40bd2f:	jl     0x40bcc1
  40bd31:	repnz nop
  40bd33:	jns    0x40bd20
  40bd35:	add    dh,bl
  40bd37:	lea    esp,[ebp+0x1f4ce590]
  40bd3d:	xor    eax,0xc6970c62
  40bd43:	push   esi
  40bd44:	jmp    0x40bdb1
  40bd46:	or     DWORD PTR [edi],edx
  40bd48:	pop    es
  40bd49:	into   
  40bd4a:	scas   eax,DWORD PTR es:[edi]
  40bd4b:	jne    0x40bcd9
  40bd4d:	xor    al,0x32
  40bd4f:	xor    eax,0xc5df314e
  40bd54:	lds    edx,FWORD PTR [ebx+0x17]
  40bd57:	hlt    
  40bd58:	xor    DWORD PTR [ebx-0x56],edi
  40bd5b:	aam    0xc7
  40bd5d:	(bad)  [edi]
  40bd5f:	and    ah,BYTE PTR [ebx-0x1b]
  40bd62:	add    dh,0x27
  40bd65:	cmc    
  40bd66:	adc    edi,DWORD PTR [ebp-0x3d]
  40bd69:	rcr    DWORD PTR [edi-0x7a],1
  40bd6c:	dec    ebp
  40bd6d:	int3   
  40bd6e:	nop
  40bd6f:	and    DWORD PTR [ebp+0x563eba51],ebp
  40bd75:	add    BYTE PTR [edi-0x55099c29],bh
  40bd7b:	ins    DWORD PTR es:[edi],dx
  40bd7c:	xchg   esp,eax
  40bd7d:	repnz xor ebp,edi
  40bd80:	not    BYTE PTR [edi+0x6d]
  40bd83:	(bad)  
  40bd85:	jl     0x40bdf5
  40bd87:	icebp  
  40bd88:	dec    ecx
  40bd89:	(bad)  
  40bd8a:	pop    esi
  40bd8b:	adc    BYTE PTR [ebx+0x2d7f8579],cl
  40bd91:	int3   
  40bd92:	dec    esp
  40bd93:	jno    0x40bdd6
  40bd95:	adc    eax,0x9ed0207a
  40bd9a:	lea    bp,[bx+di+0x50dc]
  40bda0:	cmp    bh,ch
  40bda2:	xchg   DWORD PTR [eax],eax
  40bda4:	dec    esp
  40bda5:	rol    BYTE PTR [esi],0x66
  40bda8:	ss dec ebx
  40bdaa:	cmc    
  40bdab:	lds    ebp,FWORD PTR [edx-0x26c638a4]
  40bdb1:	cwde   
  40bdb2:	xchg   BYTE PTR [ebx+0x18dc451a],al
  40bdb8:	pop    ecx
  40bdb9:	push   ecx
  40bdba:	out    dx,eax
  40bdbb:	fild   DWORD PTR [ecx+0x30]
  40bdbe:	ins    DWORD PTR es:[edi],dx
  40bdbf:	js     0x40bde7
  40bdc1:	not    esp
  40bdc3:	pop    ss
  40bdc4:	in     eax,dx
  40bdc5:	repnz ins DWORD PTR es:[edi],dx
  40bdc7:	mov    al,ds:0xe2746453
  40bdcc:	lock cmp dh,bl
  40bdcf:	cli    
  40bdd0:	not    BYTE PTR [edi]
  40bdd2:	fidiv  WORD PTR [eax+eiz*2]
  40bdd5:	scas   eax,DWORD PTR es:[edi]
  40bdd6:	mov    dh,0x7
  40bdd8:	scas   al,BYTE PTR es:[edi]
  40bdd9:	sbb    eax,0x76a13f2d
  40bdde:	in     eax,dx
  40bddf:	(bad)  
  40bde0:	ins    BYTE PTR es:[edi],dx
  40bde1:	arpl   WORD PTR [eax-0x1549a1fe],cx
  40bde7:	inc    esp
  40bde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bde9:	push   0xffffffad
  40bdeb:	jne    0x40be08
  40bded:	adc    BYTE PTR [ebp+0x5d55ce03],0x8a
  40bdf4:	ret    
  40bdf5:	push   esp
  40bdf6:	inc    edx
  40bdf7:	add    ecx,DWORD PTR [ebp+0x77]
  40bdfa:	outs   dx,BYTE PTR ds:[esi]
  40bdfb:	dec    esp
  40bdfc:	jae    0x40be23
  40bdfe:	jmp    DWORD PTR [ebx+ebx*4-0x4f]
  40be02:	(bad)  
  40be03:	pop    edx
  40be04:	pop    ecx
  40be05:	cmp    edi,DWORD PTR ds:0x86ad9ae0
  40be0b:	btc    DWORD PTR [ebp+edi*4-0x26],esp
  40be10:	inc    ebp
  40be11:	sub    dh,ch
  40be13:	into   
  40be14:	bound  esp,QWORD PTR [eax-0x37]
  40be17:	mov    eax,ds:0x3c2a3b26
  40be1c:	gs sbb ch,cl
  40be1f:	fldcw  WORD PTR [eax]
  40be21:	xchg   esp,eax
  40be22:	fisttp QWORD PTR [edx-0x3b]
  40be25:	jmp    0x4655:0x5f5d374f
  40be2c:	dec    ebx
  40be2d:	addr16 inc ecx
  40be2f:	mov    bh,0x75
  40be31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be32:	int    0xa2
  40be34:	jbe    0x40beb3
  40be36:	dec    ebx
  40be37:	imul   ebx,edi,0xd92165f4
  40be3d:	pop    ss
  40be3e:	push   eax
  40be3f:	and    dl,dl
  40be41:	xchg   esi,eax
  40be42:	push   eax
  40be43:	and    eax,0x6f1323cf
  40be48:	inc    ah
  40be4a:	retf   
  40be4b:	push   esi
  40be4c:	lea    edx,[ecx]
  40be4e:	out    dx,al
  40be4f:	shl    bl,0xca
  40be52:	xchg   esp,eax
  40be53:	fisttp WORD PTR [esi]
  40be55:	(bad)  
  40be58:	and    eax,0xccfd9757
  40be5d:	shl    BYTE PTR [esi],0xc3
  40be60:	dec    edi
  40be61:	cdq    
  40be62:	adc    ecx,edx
  40be64:	pop    esi
  40be65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be66:	lahf   
  40be67:	mov    eax,ds:0x9b72006e
  40be6c:	jg     0x40bdf1
  40be6e:	or     BYTE PTR [edi-0x253fd3a3],dh
  40be74:	add    ebp,ebx
  40be76:	jo     0x40be83
  40be78:	mov    esi,0x56b5f613
  40be7d:	jl     0x40be1c
  40be7f:	nop
  40be80:	jae    0x40beeb
  40be82:	sub    ah,BYTE PTR [ecx+0x51]
  40be85:	jle    0x40be70
  40be87:	pushf  
  40be88:	xor    ch,al
  40be8a:	outs   dx,BYTE PTR ds:[esi]
  40be8b:	lock (bad) 
  40be8d:	adc    eax,0x3bc27abf
  40be92:	sbb    al,0xed
  40be94:	xchg   DWORD PTR [esi],esi
  40be96:	test   bl,bh
  40be98:	js     0x40be55
  40be9a:	mov    ch,0x47
  40be9c:	inc    edi
  40be9d:	das    
  40be9e:	or     DWORD PTR [edx-0x2d],ebx
  40bea1:	pop    esi
  40bea2:	(bad)
  40bea6:	mov    al,0xad
  40bea8:	jnp    0x40beef
  40beaa:	jnp    0x40bedb
  40beac:	aam    0xc9
  40beae:	aad    0x22
  40beb0:	and    DWORD PTR [ebx],edi
  40beb2:	jg     0x40bea6
  40beb4:	mov    ah,0xa
  40beb6:	shl    ch,1
  40beb8:	adc    ebp,DWORD PTR [edx+0x44722f0a]
  40bebe:	mov    dl,0xca
  40bec0:	sub    al,BYTE PTR [esi-0x1179b0a9]
  40bec6:	imul   edi,esi,0xffffffd9
  40bec9:	rcl    DWORD PTR [esi],1
  40becb:	mov    esi,0xd31057f3
  40bed0:	jnp    0x40becb
  40bed2:	sub    BYTE PTR [edx+0x69],0xba
  40bed6:	xchg   ecx,eax
  40bed7:	push   ebx
  40bed8:	push   ds
  40bed9:	int    0x3
  40bedb:	das    
  40bedc:	lds    ecx,FWORD PTR [esp+eiz*4]
  40bedf:	pop    esp
  40bee0:	mov    edi,0x4b55da05
  40bee5:	scas   al,BYTE PTR es:[edi]
  40bee6:	leave  
  40bee7:	repnz (bad) 
  40bee9:	popa   
  40beea:	fnstsw WORD PTR [eax+0x79a0292e]
  40bef0:	aam    0x3c
  40bef2:	test   BYTE PTR [edi],ch
  40bef4:	pop    esp
  40bef5:	mov    edi,0x7535a63
  40befa:	sbb    DWORD PTR [ebp-0x3e1e62c5],ebx
  40bf00:	das    
  40bf01:	mov    ebx,0x146401e3
  40bf06:	(bad)  
  40bf07:	dec    eax
  40bf08:	das    
  40bf09:	sub    ebp,edx
  40bf0b:	movq   QWORD PTR [ebx],mm6
  40bf0e:	retf   
  40bf0f:	or     dl,dh
  40bf11:	xlat   BYTE PTR ds:[ebx]
  40bf12:	mov    gs,esi
  40bf14:	jb     0x40be9d
  40bf16:	out    dx,al
  40bf17:	(bad)  
  40bf18:	test   al,0x9c
  40bf1a:	int3   
  40bf1b:	xor    esi,DWORD PTR [esi]
  40bf1d:	outs   dx,DWORD PTR ds:[esi]
  40bf1e:	repnz retf 0x355f
  40bf22:	add    eax,0x92c48e04
  40bf27:	test   al,0x60
  40bf29:	ins    BYTE PTR es:[edi],dx
  40bf2a:	fld    st(3)
  40bf2c:	sub    bh,BYTE PTR [eax]
  40bf2e:	sub    ah,BYTE PTR [edx-0x280fdbf6]
  40bf34:	nop
  40bf35:	sbb    edi,DWORD PTR [eax-0x64]
  40bf38:	adc    bl,bl
  40bf3a:	ror    BYTE PTR [ecx],0x1
  40bf3d:	nop
  40bf3e:	mov    dl,0x66
  40bf40:	les    ecx,FWORD PTR [esi-0x1]
  40bf43:	fist   WORD PTR [ebx-0x31e9cd23]
  40bf49:	out    dx,eax
  40bf4a:	aad    0xc0
  40bf4c:	pop    ebp
  40bf4d:	add    DWORD PTR [ebx+0xe4220c2],edx
  40bf53:	je     0x40bf4c
  40bf55:	xlat   BYTE PTR ds:[ebx]
  40bf56:	pop    esi
  40bf57:	jge    0x40bfd8
  40bf59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf5a:	imul   eax,DWORD PTR [ebp+0x361e4525],0xbd277f5e
  40bf64:	sbb    ch,cl
  40bf66:	push   ss
  40bf67:	lds    edi,FWORD PTR [ebp-0x2a]
  40bf6a:	ret    
  40bf6b:	arpl   di,ax
  40bf6d:	dec    ecx
  40bf6e:	jne    0x40bfa8
  40bf70:	or     eax,0xd1c3f88b
  40bf75:	jp     0x40bf4f
  40bf77:	cmp    ebx,DWORD PTR [ebp+0x17dd6f67]
  40bf7d:	cli    
  40bf7e:	cmp    BYTE PTR [esi+0x77f70ff2],dl
  40bf84:	mov    ds:0x781721ed,eax
  40bf89:	or     cl,BYTE PTR [ebx]
  40bf8b:	xchg   al,bh
  40bf8d:	dec    esp
  40bf8e:	lods   eax,DWORD PTR ds:[esi]
  40bf8f:	mov    dl,0xe7
  40bf91:	cmp    bl,BYTE PTR [edx+0x270975b3]
  40bf97:	sti    
  40bf98:	push   es
  40bf99:	cmp    eax,0x53201e0
  40bf9e:	aad    0x8e
  40bfa0:	sbb    BYTE PTR [edi+ebp*4],0x6b
  40bfa4:	adc    edx,edx
  40bfa6:	or     DWORD PTR [esi+0xd],edi
  40bfa9:	cs adc bh,al
  40bfac:	fstp   TBYTE PTR [edx+0x13]
  40bfaf:	test   BYTE PTR ds:[edi+0x2a],dh
  40bfb3:	stos   BYTE PTR es:[edi],al
  40bfb4:	pusha  
  40bfb5:	in     eax,0x72
  40bfb7:	sub    ebx,esp
  40bfb9:	icebp  
  40bfba:	jl     0x40bfe1
  40bfbc:	jmp    0x40bf80
  40bfbe:	ds mov dh,0xc1
  40bfc1:	inc    ebx
  40bfc2:	mov    edi,0x10583994
  40bfc7:	std    
  40bfc8:	sub    edi,DWORD PTR [ecx+0x339e9c01]
  40bfce:	(bad)  
  40bfcf:	out    dx,al
  40bfd0:	inc    ebp
  40bfd1:	bound  ecx,QWORD PTR [edi+0x5b]
  40bfd4:	and    eax,0xd20ee4d6
  40bfd9:	call   0x5c24:0xb90c11f
  40bfe0:	stos   DWORD PTR es:[edi],eax
  40bfe1:	imul   esi,DWORD PTR [ecx+0x28],0x7b
  40bfe5:	sete   BYTE PTR [ebx-0x226f16cb]
  40bfec:	push   esp
  40bfed:	cmc    
  40bfee:	fwait
  40bfef:	out    dx,al
  40bff0:	push   esp
  40bff1:	imul   esp,edi,0xbca046a2
  40bff7:	jnp    0x40c039
  40bff9:	in     eax,0x3a
  40bffb:	add    eax,0x91ea7db1
  40c000:	dec    ecx
  40c001:	lahf   
  40c002:	add    DWORD PTR [esi-0x6106f133],edi
  40c008:	gs hlt 
  40c00a:	sub    al,0x39
  40c00c:	and    esp,DWORD PTR [ebx+0x2e9e8af6]
  40c012:	cmp    edi,DWORD PTR [ecx+edi*8-0x5575d05c]
  40c019:	cmp    bl,BYTE PTR [eax+0x2c9e4d59]
  40c01f:	xor    DWORD PTR [eax],ebp
  40c021:	call   0x7b03:0xf0a00b83
  40c028:	xchg   dh,bl
  40c02a:	(bad)  
  40c02b:	mov    dh,0x57
  40c02d:	mov    ch,0x95
  40c02f:	(bad)
  40c032:	xor    al,0xb0
  40c034:	cdq    
  40c035:	adc    BYTE PTR ds:0x387966fa,dh
  40c03b:	xchg   dh,bh
  40c03d:	(bad)  
  40c03e:	cdq    
  40c03f:	out    0x1f,al
  40c041:	xor    al,0x53
  40c043:	jno    0x40c035
  40c045:	sbb    al,0xc9
  40c047:	outs   dx,DWORD PTR ds:[esi]
  40c048:	in     al,dx
  40c049:	jae    0x40c017
  40c04b:	jnp    0x40c006
  40c04d:	inc    ecx
  40c04e:	rcr    DWORD PTR [ecx-0x2927b823],1
  40c054:	xchg   BYTE PTR [edi+0xcebdb63],dh
  40c05a:	ds test BYTE PTR fs:[ecx*1+0x86d7ff9],bh
  40c063:	mov    bl,0x73
  40c065:	cld    
  40c066:	xor    edi,DWORD PTR [ecx+esi*2]
  40c069:	fild   WORD PTR [edx+0x5f]
  40c06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c06d:	inc    eax
  40c06e:	adc    ebx,DWORD PTR [esi]
  40c070:	in     eax,dx
  40c071:	cld    
  40c072:	adc    BYTE PTR [ecx-0x42eccd57],cl
  40c078:	(bad)  
  40c079:	mov    esi,DWORD PTR [edi+ecx*1+0x90eb0eb]
  40c080:	aad    0xb5
  40c082:	jge    0x40c011
  40c084:	dec    esi
  40c085:	shl    BYTE PTR es:[edi-0x19],1
  40c089:	mov    edx,0xebbeb0d
  40c08e:	test   BYTE PTR [esi-0x46d7d8cf],dl
  40c094:	or     ah,BYTE PTR [ebp+0x787c95e0]
  40c09a:	out    0x2c,al
  40c09c:	pop    ss
  40c09d:	es mov bh,0x2e
  40c0a0:	into   
  40c0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a2:	stc    
  40c0a3:	dec    esi
  40c0a4:	cmp    BYTE PTR [ecx],al
  40c0a6:	lods   eax,DWORD PTR ds:[esi]
  40c0a7:	imul   edi,DWORD PTR [edi],0x4e
  40c0aa:	call   0xc7c9:0xf8a593b7
  40c0b1:	jnp    0x40c063
  40c0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b4:	(bad)  
  40c0b6:	sahf   
  40c0b7:	jmp    0x34f0bcca
  40c0bc:	aaa    
  40c0bd:	dec    esp
  40c0be:	push   edx
  40c0bf:	idiv   DWORD PTR [esi]
  40c0c1:	cmp    dl,BYTE PTR [ebx-0x42]
  40c0c4:	ins    BYTE PTR es:[edi],dx
  40c0c5:	data16 sbb bl,BYTE PTR es:[edi]
  40c0c9:	push   0xcae69d1d
  40c0ce:	stos   DWORD PTR es:[edi],eax
  40c0cf:	es pop esp
  40c0d1:	arpl   sp,bx
  40c0d3:	xchg   BYTE PTR [edi+0x5c],dl
  40c0d6:	xchg   ebp,eax
  40c0d7:	int    0x9f
  40c0d9:	call   0x98d7:0xb4756170
  40c0e0:	in     al,0x8d
  40c0e2:	call   0x11e5de2c
  40c0e7:	or     al,0x41
  40c0e9:	out    dx,al
  40c0ea:	and    eax,0xb8f2402d
  40c0ef:	outs   dx,DWORD PTR ds:[esi]
  40c0f0:	jmp    FWORD PTR [ebp-0x1fa07590]
  40c0f6:	dec    eax
  40c0f7:	imul   eax,DWORD PTR [edi+0x1dba493b],0x5df7cc3a
  40c101:	push   0xf21ab3b2
  40c106:	test   al,0xd2
  40c108:	adc    bh,dh
  40c10a:	mov    eax,0x7278ed77
  40c10f:	mov    al,0xa9
  40c111:	jb     0x40c110
  40c113:	out    0xa2,al
  40c115:	push   0x65eea72
  40c11a:	inc    eax
  40c11b:	aas    
  40c11c:	jnp    0x40c0c6
  40c11e:	mov    dl,0xc4
  40c120:	mov    ebp,0xf314e142
  40c125:	retf   
  40c126:	push   cs
  40c127:	push   0xffffff99
  40c129:	inc    edi
  40c12a:	(bad)  
  40c12b:	pop    ecx
  40c12c:	jnp    0x40c115
  40c12e:	and    eax,eax
  40c130:	sbb    esp,DWORD PTR [esi+eiz*2-0x17]
  40c134:	mov    cl,0x99
  40c136:	pop    es
  40c137:	cli    
  40c138:	imul   ebx,DWORD PTR [ebx-0x460889f6],0xffffff80
  40c13f:	test   BYTE PTR [edx+0x6f],dl
  40c142:	xor    bl,al
  40c144:	out    0x31,eax
  40c146:	mov    ds:0x91def9f9,al
  40c14b:	stc    
  40c14c:	jns    0x40c194
  40c14e:	lock call 0xf76f:0x55d7a456
  40c156:	pusha  
  40c157:	ss mov bh,0x1d
  40c15a:	daa    
  40c15b:	pop    ss
  40c15c:	pusha  
  40c15d:	adc    al,0xd
  40c15f:	add    DWORD PTR [edi+0xfd7b5da],ebp
  40c165:	adc    ebp,DWORD PTR [ecx+0xf85b957]
  40c16b:	xchg   ebx,eax
  40c16c:	and    DWORD PTR [ebx-0x55],ecx
  40c16f:	or     DWORD PTR [esi],ebx
  40c171:	rcl    BYTE PTR [ebx+0x824acd],cl
  40c177:	xor    eax,0x66992fe2
  40c17c:	mov    dl,0xe8
  40c17e:	mov    bl,0x81
  40c180:	in     eax,dx
  40c181:	mov    ebx,0x3168ebd7
  40c186:	pop    ebp
  40c187:	mov    dl,0x0
  40c189:	pusha  
  40c18a:	icebp  
  40c18b:	push   0x43
  40c18d:	mov    bl,0xe4
  40c18f:	jmp    0x26a4:0x3d6f457e
  40c196:	sub    BYTE PTR [ecx-0x5],0xa3
  40c19a:	shr    BYTE PTR [edi+0x7d],1
  40c19d:	dec    ecx
  40c19e:	cmp    esi,DWORD PTR [edx-0x5ce1be6b]
  40c1a4:	sahf   
  40c1a5:	ret    0x71bd
  40c1a8:	fldcw  WORD PTR [edi+0x1f]
  40c1ab:	pop    ds
  40c1ac:	dec    eax
  40c1ad:	aas    
  40c1ae:	or     BYTE PTR [eax+0x6d801db],dl
  40c1b4:	(bad)  
  40c1b5:	imul   ebx,esp,0x2e
  40c1b8:	jmp    0x3541:0xdf4ce699
  40c1bf:	into   
  40c1c0:	sbb    eax,0x178c2c8f
  40c1c5:	sbb    BYTE PTR [edx+0xc],al
  40c1c8:	and    edx,esi
  40c1ca:	imul   esp
  40c1cc:	jnp    0x40c1ef
  40c1ce:	push   esp
  40c1cf:	xor    ah,al
  40c1d1:	or     DWORD PTR [ebx+0x15dca262],ecx
  40c1d7:	jp     0x40c233
  40c1d9:	add    BYTE PTR [bp+si+0x74a2],al
  40c1de:	jne    0x40c1dc
  40c1e0:	or     ch,BYTE PTR [esi]
  40c1e2:	repnz push es
  40c1e4:	mov    eax,0xe20d086d
  40c1e9:	push   edx
  40c1ea:	sbb    bl,BYTE PTR [eax-0x53eb7c]
  40c1f0:	cdq    
  40c1f1:	arpl   WORD PTR [edi+0x32],sp
  40c1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1f5:	xchg   esi,eax
  40c1f6:	sbb    BYTE PTR [edi-0x20992cb1],ch
  40c1fc:	xchg   dl,al
  40c1fe:	test   al,0x46
  40c200:	fadd   QWORD PTR [ebx+0x7d]
  40c203:	in     eax,dx
  40c204:	push   cs
  40c205:	mov    bl,BYTE PTR [ebp-0x2e4e543a]
  40c20b:	mov    al,ds:0x6f707be7
  40c210:	push   esi
  40c211:	push   0x11c3b6b6
  40c216:	cmp    ah,BYTE PTR ds:0x2c8fc437
  40c21c:	mov    al,ds:0x8d583ca3
  40c221:	out    0x25,eax
  40c223:	push   es
  40c224:	lods   eax,DWORD PTR ds:[esi]
  40c225:	mov    bl,0x36
  40c227:	scas   al,BYTE PTR es:[edi]
  40c228:	cmp    eax,0xe1d929f3
  40c22d:	adc    bl,BYTE PTR [eax]
  40c22f:	mov    ecx,0x393185f8
  40c234:	(bad)  
  40c235:	loope  0x40c1de
  40c237:	sbb    eax,0xb90a4534
  40c23c:	fcomp  DWORD PTR [ebp-0x3f61e6fd]
  40c242:	mov    ah,0xcc
  40c244:	and    ch,ch
  40c246:	(bad)  
  40c247:	mov    WORD PTR [ecx+edx*2],fs
  40c24a:	mov    edx,ebp
  40c24c:	call   0x387f67b4
  40c251:	pop    es
  40c252:	je     0x40c222
  40c254:	loop   0x40c2d5
  40c256:	ficomp DWORD PTR [eax]
  40c258:	jge    0x40c286
  40c25a:	cli    
  40c25b:	out    dx,eax
  40c25c:	in     eax,0x4a
  40c25e:	icebp  
  40c25f:	hlt    
  40c260:	dec    edi
  40c261:	add    DWORD PTR [ecx+eax*2-0x320e9736],esp
  40c268:	nop
  40c269:	dec    ebx
  40c26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26b:	(bad)  
  40c26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26d:	mov    esp,0x3b32f821
  40c272:	mov    edi,0x1399c727
  40c277:	adc    ch,ah
  40c279:	jne    0x40c211
  40c27b:	div    eax
  40c27d:	arpl   WORD PTR [edx],sp
  40c27f:	cmc    
  40c280:	push   0xffffffc9
  40c282:	aam    0x34
  40c284:	imul   ecx,DWORD PTR [esi],0xffffffd1
  40c287:	pop    esp
  40c288:	sbb    DWORD PTR [edi],0x3489e9c0
  40c28e:	mov    ah,0x38
  40c290:	shr    DWORD PTR [ebx-0x10],cl
  40c293:	dec    esp
  40c294:	xor    al,BYTE PTR [esi+0x17]
  40c297:	gs jmp 0x4a87:0xcef0feb5
  40c29f:	in     eax,0x18
  40c2a1:	and    al,0xe1
  40c2a3:	rcr    DWORD PTR [di+0x14],1
  40c2a7:	cwde   
  40c2a8:	rcl    BYTE PTR [esi+0x17],cl
  40c2ab:	add    al,0x34
  40c2ad:	(bad)  
  40c2ae:	scas   eax,DWORD PTR es:[edi]
  40c2af:	jae    0x40c262
  40c2b1:	inc    ecx
  40c2b2:	fmul   DWORD PTR [ecx]
  40c2b4:	push   esi
  40c2b5:	mov    eax,0x497d9cd4
  40c2ba:	shr    BYTE PTR [ebx+0x66a6a091],0x74
  40c2c1:	push   0x5844ae58
  40c2c6:	xchg   esi,eax
  40c2c7:	leave  
  40c2c8:	leave  
  40c2c9:	int    0xa6
  40c2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2cd:	cmc    
  40c2ce:	and    eax,0xeac4887a
  40c2d3:	aam    0xe7
  40c2d5:	ror    BYTE PTR [esi-0x21],cl
  40c2d8:	(bad)  
  40c2d9:	out    0xcf,eax
  40c2db:	mov    bh,0xb1
  40c2dd:	fistp  QWORD PTR [ecx-0x8967842]
  40c2e3:	sub    DWORD PTR [ebx+ebp*8-0x583e3819],ebx
  40c2ea:	mov    DWORD PTR [eax],ecx
  40c2ec:	call   0x5843b6e3
  40c2f1:	cwde   
  40c2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2f3:	(bad)  
  40c2f4:	mov    BYTE PTR [ecx+0x8],ch
  40c2f7:	icebp  
  40c2f8:	(bad)  
  40c2f9:	aaa    
  40c2fa:	(bad)  
  40c2fb:	test   al,0x56
  40c2fd:	inc    edi
  40c2fe:	sbb    eax,0x391de7d8
  40c303:	push   ebx
  40c304:	xor    al,0xb7
  40c306:	(bad)  
  40c307:	pop    edx
  40c308:	adc    eax,edi
  40c30a:	imul   esi,DWORD PTR [ecx],0xffffff8b
  40c30d:	fcmovnbe st,st(6)
  40c30f:	sbb    al,0x58
  40c311:	add    edx,ebx
  40c313:	jnp    0x40c2dc
  40c315:	clc    
  40c316:	push   DWORD PTR [ebx]
  40c318:	jmp    FWORD PTR [edx*1-0x7c251799]
  40c31f:	sub    DWORD PTR [esi-0x9],edx
  40c322:	pop    esp
  40c323:	in     al,dx
  40c324:	into   
  40c325:	sbb    ch,al
  40c327:	cmp    DWORD PTR [ebx],ecx
  40c329:	ror    DWORD PTR [esi+0x7],cl
  40c32c:	mov    eax,edx
  40c32e:	aam    0x65
  40c330:	mov    WORD PTR [edi+0xcde80bb],?
  40c336:	xor    ah,cl
  40c338:	(bad)  
  40c339:	pop    ebx
  40c33a:	sti    
  40c33b:	pusha  
  40c33c:	xchg   BYTE PTR [ecx-0x5d0b8c9e],dl
  40c342:	lock xchg DWORD PTR [ecx-0x67],esi
  40c346:	xor    bl,BYTE PTR [eax]
  40c348:	jb     0x40c2ea
  40c34a:	fimul  WORD PTR [edx-0x44807a6b]
  40c350:	addr16 sti 
  40c352:	iret   
  40c353:	cmp    eax,0x88449386
  40c358:	mov    dl,0xa1
  40c35a:	pop    ebp
  40c35b:	add    ebx,edi
  40c35d:	enter  0x8e7a,0x70
  40c361:	mov    al,0x5b
  40c363:	imul   edi,DWORD PTR [ecx],0xffffffcb
  40c366:	push   edi
  40c367:	sti    
  40c368:	jne    0x40c3ab
  40c36a:	mov    esi,0x2843d185
  40c36f:	dec    eax
  40c370:	sar    DWORD PTR [esi],cl
  40c372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c373:	fdiv   QWORD PTR [ebx-0x29]
  40c376:	cmp    BYTE PTR [eax+0xd],0xf2
  40c37a:	repnz cmc 
  40c37c:	push   edi
  40c37d:	idiv   DWORD PTR [ebp-0x705af7b]
  40c383:	and    ah,BYTE PTR [eax-0x83fab2e]
  40c389:	push   edi
  40c38a:	or     dl,BYTE PTR [eax+0x248fe921]
  40c390:	icebp  
  40c391:	pop    edi
  40c392:	or     DWORD PTR [edi-0x4e973620],eax
  40c398:	cmp    BYTE PTR ds:0x8f9f8629,0x6b
  40c39f:	xchg   BYTE PTR [eax+0x68c0f647],dl
  40c3a5:	jecxz  0x40c3d6
  40c3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3a8:	push   ecx
  40c3a9:	test   eax,0x7cd2ba81
  40c3ae:	jmp    0x5b4c6704
  40c3b3:	xchg   edi,eax
  40c3b4:	cmp    al,0x2
  40c3b6:	and    ecx,edx
  40c3b8:	aaa    
  40c3b9:	pop    ecx
  40c3ba:	outs   dx,BYTE PTR ds:[esi]
  40c3bb:	arpl   WORD PTR [ebx-0x57],bx
  40c3be:	jecxz  0x40c3a7
  40c3c0:	out    dx,al
  40c3c1:	mov    dh,0x99
  40c3c3:	stos   DWORD PTR es:[edi],eax
  40c3c4:	cdq    
  40c3c5:	(bad)  
  40c3c6:	sbb    bl,bl
  40c3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c9:	ins    DWORD PTR es:[edi],dx
  40c3ca:	dec    edx
  40c3cb:	xor    bh,bl
  40c3cd:	int3   
  40c3ce:	icebp  
  40c3cf:	pop    ecx
  40c3d0:	mov    gs:0x10fadf7e,eax
  40c3d6:	stos   DWORD PTR es:[edi],eax
  40c3d7:	mov    bl,0x3
  40c3d9:	(bad)  
  40c3da:	call   0x67936c37
  40c3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e0:	ret    
  40c3e1:	cmp    DWORD PTR [edx],ecx
  40c3e3:	ror    ecx,cl
  40c3e5:	add    dh,BYTE PTR [edx+edi*8]
  40c3e8:	jno    0x40c39c
  40c3ea:	add    al,0x96
  40c3ec:	(bad)  
  40c3ee:	mov    al,ds:0x3b73a66f
  40c3f3:	xchg   ebp,eax
  40c3f4:	cli    
  40c3f5:	(bad)  
  40c3f6:	pop    esp
  40c3f7:	mov    al,0xa2
  40c3f9:	fsubr  DWORD PTR [ecx+0x531e2ba3]
  40c3ff:	or     BYTE PTR [eax-0x55],dh
  40c402:	and    al,0x36
  40c404:	xchg   edx,eax
  40c405:	gs (bad) 
  40c407:	lea    eax,[ebx+0x37]
  40c40a:	pop    edi
  40c40b:	not    DWORD PTR [edx-0x2e]
  40c40e:	jg     0x40c46e
  40c410:	cdq    
  40c411:	(bad)  
  40c412:	out    dx,eax
  40c413:	inc    esi
  40c414:	imul   eax,edx,0x6db021f8
  40c41a:	mov    ecx,0xb7e40fc
  40c41f:	stos   BYTE PTR es:[edi],al
  40c420:	mov    ds:0x8f47f210,al
  40c425:	sbb    esi,esi
  40c427:	clc    
  40c428:	push   ebp
  40c429:	fidiv  DWORD PTR [esi-0x20]
  40c42c:	call   0xad2a4df5
  40c431:	mov    edi,0x11461994
  40c436:	push   cs
  40c437:	out    dx,al
  40c438:	test   edi,edx
  40c43a:	jb     0x40c4b0
  40c43c:	shl    BYTE PTR [edx-0x45],cl
  40c43f:	retf   0x2e53
  40c442:	aad    0xd1
  40c444:	xor    DWORD PTR [ecx+eax*1],esi
  40c447:	inc    edi
  40c448:	daa    
  40c449:	push   esi
  40c44a:	xor    dh,BYTE PTR [edx-0x5d]
  40c44d:	test   esi,ecx
  40c44f:	inc    edx
  40c450:	outs   dx,BYTE PTR ds:[esi]
  40c451:	adc    ch,BYTE PTR [ecx-0x73106ad6]
  40c457:	sbb    cl,BYTE PTR [edx+edi*4+0x45]
  40c45b:	jo     0x40c4d6
  40c45d:	and    bh,BYTE PTR [edi]
  40c45f:	ret    0xc2e6
  40c462:	popf   
  40c463:	jmp    0x21e93d8a
  40c468:	inc    ebp
  40c469:	xchg   ecx,eax
  40c46a:	clc    
  40c46b:	and    esp,DWORD PTR [ebx]
  40c46d:	adc    ah,BYTE PTR [esi+0x4acf37fa]
  40c473:	sub    bl,BYTE PTR [ecx]
  40c475:	mov    al,ds:0x4b768e1
  40c47a:	pop    edx
  40c47b:	jne    0x40c4ef
  40c47d:	mov    ds:0x20ffc0a2,al
  40c482:	sbb    al,0x19
  40c484:	inc    ecx
  40c485:	fiadd  WORD PTR [ebx-0x131690f3]
  40c48b:	cld    
  40c48c:	inc    eax
  40c48d:	std    
  40c48e:	stos   BYTE PTR es:[edi],al
  40c48f:	dec    ebx
  40c490:	mov    dh,0xe7
  40c492:	nop
  40c493:	scas   eax,DWORD PTR es:[edi]
  40c494:	xor    esp,edx
  40c496:	outs   dx,DWORD PTR ds:[esi]
  40c497:	push   0xd1c7b5e8
  40c49c:	mov    DWORD PTR [ebx],edi
  40c49e:	cmp    BYTE PTR [edx-0x3],al
  40c4a1:	aad    0xcf
  40c4a3:	out    dx,eax
  40c4a4:	xchg   DWORD PTR [edi],ecx
  40c4a6:	inc    edx
  40c4a7:	cwde   
  40c4a8:	mov    ds:0xab6580ac,al
  40c4ad:	mov    eax,ds:0xda080e20
  40c4b2:	xchg   BYTE PTR [ecx],al
  40c4b4:	ud1    eax,DWORD PTR [edi-0x4b]
  40c4b8:	mov    dl,0xec
  40c4ba:	pop    edx
  40c4bb:	hlt    
  40c4bc:	sar    BYTE PTR [ecx+0x70],cl
  40c4bf:	outs   dx,DWORD PTR ds:[esi]
  40c4c0:	call   DWORD PTR [eax]
  40c4c2:	mov    al,ds:0x1e48d70e
  40c4c7:	and    cl,BYTE PTR [edi+0x60326ed]
  40c4cd:	add    eax,0xfee220a3
  40c4d2:	lods   al,BYTE PTR ds:[esi]
  40c4d3:	leave  
  40c4d4:	out    0xb4,al
  40c4d6:	mov    al,ds:0x93ecd512
  40c4db:	cwde   
  40c4dc:	call   0x1301:0xa55e0003
  40c4e3:	lahf   
  40c4e4:	popf   
  40c4e5:	enter  0x420f,0x65
  40c4e9:	sub    DWORD PTR [ecx+0x45ab7114],0xffffffc1
  40c4f0:	pop    ss
  40c4f1:	stc    
  40c4f2:	push   edi
  40c4f3:	pop    edx
  40c4f4:	pop    edi
  40c4f5:	add    edi,ecx
  40c4f7:	or     eax,0x2ec1a55a
  40c4fc:	lds    ebp,FWORD PTR [eax+ebx*2-0x1f702149]
  40c503:	xchg   ecx,eax
  40c504:	fisttp WORD PTR [edx-0x4212130b]
  40c50a:	int3   
  40c50b:	and    BYTE PTR [esi+eiz*8],ch
  40c50e:	test   DWORD PTR [edi],0x25bb68da
  40c514:	inc    eax
  40c515:	push   esp
  40c516:	arpl   WORD PTR [esp+ebp*8+0x7a],dx
  40c51a:	pushf  
  40c51b:	sbb    ch,al
  40c51d:	ret    
  40c51e:	xchg   ecx,eax
  40c51f:	fs stos BYTE PTR es:[edi],al
  40c521:	push   ds
  40c522:	jmp    0x5c60:0x83486249
  40c529:	cmove  edx,esi
  40c52c:	test   eax,0x91091305
  40c531:	lds    edx,FWORD PTR [ebp+edx*8-0x6]
  40c535:	ss mov cl,0xd3
  40c538:	cld    
  40c539:	leave  
  40c53a:	mov    eax,0xf2e7f974
  40c53f:	jns    0x40c4de
  40c541:	cmp    DWORD PTR ds:0x7b0562e1,edx
  40c547:	dec    ecx
  40c548:	push   edi
  40c549:	outs   dx,BYTE PTR ds:[esi]
  40c54a:	out    dx,eax
  40c54b:	popf   
  40c54c:	pusha  
  40c54d:	int    0x6b
  40c54f:	std    
  40c550:	fxch   st(4)
  40c552:	xchg   esi,eax
  40c553:	lods   al,BYTE PTR ds:[esi]
  40c554:	mov    edi,esp
  40c556:	fcmovbe st,st(6)
  40c558:	cmc    
  40c559:	nop
  40c55a:	out    0xfe,eax
  40c55c:	jnp    0x40c55f
  40c55e:	mov    esi,0xfaf00b9c
  40c563:	pop    bp
  40c565:	jmp    0x44:0x33800722
  40c56c:	dec    eax
  40c56d:	sub    ah,BYTE PTR [ecx]
  40c56f:	mov    edx,0xf907e131
  40c574:	sub    DWORD PTR [ebp-0x1990c226],ebp
  40c57a:	jnp    0x40c56c
  40c57c:	inc    esp
  40c57d:	cmp    ecx,DWORD PTR [edx-0x43]
  40c580:	mov    esi,0xefe7f90f
  40c585:	pop    ebx
  40c586:	push   eax
  40c587:	fild   DWORD PTR [ebp-0x4eecfe98]
  40c58d:	xchg   ebx,eax
  40c58e:	test   BYTE PTR [ecx+0x47],dl
  40c591:	push   esi
  40c592:	xchg   DWORD PTR [edx],edi
  40c594:	inc    esi
  40c595:	enter  0x5a80,0x2b
  40c599:	or     al,0x5d
  40c59b:	fst    DWORD PTR [eax]
  40c59d:	xchg   DWORD PTR [esi-0x3a09f3b6],edx
  40c5a3:	(bad)  
  40c5a4:	rol    BYTE PTR [edx],1
  40c5a6:	and    edi,DWORD PTR [ebp+0x3]
  40c5a9:	test   eax,0x970b9de2
  40c5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5af:	sub    BYTE PTR [ebx-0x3e2cfe9f],cl
  40c5b5:	mov    esp,0xecc74a42
  40c5ba:	and    DWORD PTR [edx+0x5a],0x3253875e
  40c5c1:	cmp    esi,DWORD PTR [esi-0x570c0d10]
  40c5c7:	das    
  40c5c8:	or     dl,BYTE PTR [ecx-0x2a]
  40c5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5cc:	push   0xb591b505
  40c5d1:	xor    esp,DWORD PTR [ecx-0x45bcdee5]
  40c5d7:	arpl   sp,di
  40c5d9:	ss and edi,esi
  40c5dc:	mov    esi,0xb1dcc5d7
  40c5e1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e3:	fstp   QWORD PTR [ebx-0x4242e5b8]
  40c5e9:	pusha  
  40c5ea:	mov    cl,0xc8
  40c5ec:	lods   eax,DWORD PTR ds:[esi]
  40c5ed:	push   ebx
  40c5ee:	retfw  
  40c5f0:	cmp    DWORD PTR [ebp+0x4ee38b32],0x276839ee
  40c5fa:	push   ebx
  40c5fb:	inc    ebp
  40c5fc:	adc    esi,DWORD PTR [eax-0x23]
  40c5ff:	test   DWORD PTR [esi+0x53fe4db0],ebx
  40c605:	retf   
  40c606:	sbb    al,0xb7
  40c608:	ror    BYTE PTR [ebx],1
  40c60a:	inc    edx
  40c60b:	mov    al,ds:0xe3a93549
  40c610:	xchg   edi,eax
  40c611:	lock or dl,BYTE PTR [edx+0x1821a0c3]
  40c618:	leave  
  40c619:	test   al,0xf2
  40c61b:	push   cs
  40c61c:	aaa    
  40c61d:	rol    BYTE PTR [ecx-0x44],1
  40c620:	js     0x40c612
  40c622:	or     eax,0xd186e869
  40c627:	fwait
  40c628:	sub    eax,0x68521f07
  40c62d:	ja     0x40c5e7
  40c62f:	cmp    bh,BYTE PTR [ebp-0x4d811f2d]
  40c635:	cli    
  40c636:	or     DWORD PTR [edx-0x3b],esp
  40c639:	js     0x40c68a
  40c63b:	add    dh,0x69
  40c63e:	mov    eax,0xe3f112e2
  40c643:	(bad)  
  40c644:	mov    edx,0x5dcffeb1
  40c649:	mov    ds:0x2679ff0d,eax
  40c64e:	xlat   BYTE PTR ds:[ebx]
  40c64f:	mov    cl,al
  40c651:	repz pop esp
  40c653:	lods   al,BYTE PTR ds:[esi]
  40c654:	out    0xd2,eax
  40c656:	call   0x6d94a333
  40c65b:	pop    edx
  40c65c:	fwait
  40c65d:	in     eax,dx
  40c65e:	mov    dl,BYTE PTR [edx+0x387fed4d]
  40c664:	pop    es
  40c665:	xor    DWORD PTR [ebp+0x7c],ecx
  40c668:	pop    ebp
  40c669:	pop    esi
  40c66a:	mov    DWORD PTR [edi],esi
  40c66c:	out    dx,al
  40c66d:	pop    ds
  40c66e:	je     0x40c620
  40c670:	sbb    dh,BYTE PTR [edi-0x5383db00]
  40c676:	and    esi,DWORD PTR [edx]
  40c678:	mov    WORD PTR [ebx+0x1c],gs
  40c67b:	pop    esi
  40c67c:	and    eax,0xbf077182
  40c681:	out    0xb1,al
  40c683:	cwde   
  40c684:	pop    ecx
  40c685:	aaa    
  40c686:	or     BYTE PTR [edi+0x21933e91],0x44
  40c68d:	cld    
  40c68e:	sub    BYTE PTR [edx],ah
  40c690:	sub    eax,0x7b8292cf
  40c695:	call   0xd8a9:0x85497404
  40c69c:	mul    DWORD PTR [ecx+0x4c223184]
  40c6a2:	aas    
  40c6a3:	dec    ebx
  40c6a4:	sahf   
  40c6a5:	inc    ecx
  40c6a6:	jno    0x40c697
  40c6a8:	ss adc al,0xa9
  40c6ab:	jno    0x40c700
  40c6ad:	cmp    al,BYTE PTR [edx]
  40c6af:	pop    ebx
  40c6b0:	push   ebp
  40c6b1:	and    esp,0x42b2fe0
  40c6b7:	jnp    0x40c66d
  40c6b9:	xchg   esp,eax
  40c6ba:	fs mov ecx,0xaeb08e08
  40c6c0:	ds dec edi
  40c6c2:	add    eax,0x95d59dec
  40c6c7:	push   ss
  40c6c8:	idiv   DWORD PTR ds:0x5a9ce370
  40c6ce:	jb     0x40c736
  40c6d0:	sub    al,0xea
  40c6d2:	xor    edx,DWORD PTR [eax]
  40c6d4:	sar    DWORD PTR [eax+ebp*1-0x21],cl
  40c6d8:	mov    eax,0xda7107e2
  40c6dd:	mul    dl
  40c6df:	cmp    dh,al
  40c6e1:	push   ecx
  40c6e2:	ss (bad) 
  40c6e4:	pushf  
  40c6e5:	adc    al,0x77
  40c6e7:	lock pop ebx
  40c6e9:	fisttp WORD PTR [esi+0x20]
  40c6ec:	jge    0x40c6dd
  40c6ee:	(bad)  
  40c6f0:	mov    eax,0x70b4a07e
  40c6f5:	or     eax,0xf5b94b8e
  40c6fa:	xor    al,0x2f
  40c6fc:	lahf   
  40c6fd:	bound  eax,QWORD PTR [edi]
  40c6ff:	dec    ebp
  40c700:	or     dx,cx
  40c703:	or     ah,al
  40c705:	push   edi
  40c706:	fild   QWORD PTR [edx]
  40c708:	xchg   esp,eax
  40c709:	mov    ch,0x48
  40c70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c70c:	jge    0x40c714
  40c70e:	push   0x75fa88b3
  40c713:	sub    DWORD PTR [edi-0x2f507699],ebx
  40c719:	mov    esp,0xd7eb3364
  40c71e:	dec    edx
  40c71f:	or     al,0xfa
  40c721:	dec    esp
  40c722:	loop   0x40c732
  40c724:	pop    eax
  40c725:	push   es
  40c726:	cmp    BYTE PTR [edx+0x170f7611],al
  40c72c:	mov    ebp,0xee914e3
  40c731:	sbb    edx,esp
  40c733:	mov    bh,0x6e
  40c735:	mov    bl,0x22
  40c737:	inc    esp
  40c738:	push   ds
  40c739:	jo     0x40c6ff
  40c73b:	cmp    esp,DWORD PTR [esi-0x42ac5a27]
  40c741:	dec    ebx
  40c742:	neg    BYTE PTR [edx-0x6d]
  40c745:	sub    BYTE PTR [edi-0x4669c6bd],dh
  40c74b:	fisub  DWORD PTR ds:[edx]
  40c74e:	hlt    
  40c74f:	aad    0x6f
  40c751:	pushf  
  40c752:	pop    esi
  40c753:	jns    0x40c71f
  40c755:	pop    edx
  40c756:	adc    BYTE PTR [ecx-0x32a9c8b7],bh
  40c75c:	push   ds
  40c75d:	xor    al,0x57
  40c75f:	push   eax
  40c760:	lea    esp,[ebx]
  40c762:	ss inc eax
  40c764:	aas    
  40c765:	(bad)  [edi]
  40c767:	in     eax,dx
  40c768:	mov    al,0x21
  40c76b:	jecxz  0x40c71e
  40c76d:	scas   eax,DWORD PTR es:[edi]
  40c76e:	jmp    FWORD PTR [eax-0x39]
  40c771:	adc    dl,ch
  40c773:	leave  
  40c774:	dec    eax
  40c775:	pop    esi
  40c776:	sar    BYTE PTR [ebx+0x54f99b25],0xa
  40c77d:	sbb    DWORD PTR [ebp+0x24],0xffffff91
  40c781:	scas   al,BYTE PTR es:[edi]
  40c782:	jae    0x40c771
  40c784:	fdivrp st(4),st
  40c786:	or     ch,BYTE PTR [edx]
  40c788:	or     DWORD PTR [edx+0x6f],ebx
  40c78b:	fidivr WORD PTR [esi+ebx*1]
  40c78e:	pop    ecx
  40c78f:	adc    BYTE PTR [edi-0x52],ah
  40c792:	mov    edi,0x2ec83ac5
  40c797:	pop    es
  40c798:	fistp  DWORD PTR [ebx-0x7b]
  40c79b:	add    edi,0xd5a482b5
  40c7a1:	aas    
  40c7a2:	add    al,0x42
  40c7a4:	aad    0xb4
  40c7a6:	mov    dh,0xec
  40c7a8:	std    
  40c7a9:	add    dh,BYTE PTR [esi+0x2e]
  40c7ac:	and    BYTE PTR [ecx-0x215dddb7],ch
  40c7b2:	popa   
  40c7b3:	sbb    BYTE PTR [edi+0x2],0x7a
  40c7b7:	push   ebx
  40c7b8:	ret    
  40c7b9:	sar    BYTE PTR [eax-0x503fd9e3],cl
  40c7bf:	cli    
  40c7c0:	sbb    BYTE PTR [eax+ebx*4],al
  40c7c3:	sbb    al,0x9a
  40c7c5:	out    0xa9,al
  40c7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c8:	mov    eax,DWORD PTR [eax]
  40c7ca:	push   0xad952225
  40c7cf:	mov    esi,0x15268574
  40c7d4:	(bad)  
  40c7d5:	sbb    BYTE PTR [eax-0x14],cl
  40c7d8:	ja     0x40c83c
  40c7da:	and    BYTE PTR [eax],ch
  40c7dc:	ss adc al,0xb2
  40c7df:	cwde   
  40c7e0:	int3   
  40c7e1:	pop    esi
  40c7e2:	push   esp
  40c7e3:	pop    sp
  40c7e5:	dec    edx
  40c7e6:	stc    
  40c7e7:	inc    esi
  40c7e8:	mov    cl,BYTE PTR [eax+0x6882c28b]
  40c7ee:	xchg   esi,eax
  40c7ef:	jge    0x40c862
  40c7f1:	pop    sp
  40c7f3:	mov    DWORD PTR [esi],edx
  40c7f5:	mov    ds:0xf29f6a76,eax
  40c7fa:	jmp    0x5705af9a
  40c7ff:	jo     0x40c7b5
  40c801:	mov    ebp,0x736a8c7f
  40c806:	sti    
  40c807:	cli    
  40c808:	xor    ecx,eax
  40c80a:	stos   BYTE PTR es:[edi],al
  40c80b:	sbb    DWORD PTR [ebx+0x1fae4833],ebp
  40c811:	loopne 0x40c85e
  40c813:	push   esp
  40c814:	mov    bl,0x7b
  40c816:	es retf 0xfe0b
  40c81a:	not    DWORD PTR ds:0xf6c4d77c
  40c820:	jmp    0x40c858
  40c822:	imul   ecx,edi,0x47
  40c825:	push   esp
  40c826:	mov    bh,0xe2
  40c828:	stos   BYTE PTR es:[edi],al
  40c829:	dec    edi
  40c82a:	mov    dl,0x1e
  40c82c:	push   eax
  40c82d:	ja     0x40c7de
  40c82f:	bnd jns 0x40c7d7
  40c832:	repz pop edi
  40c834:	sub    al,0x33
  40c836:	mov    ds:0xb3ed0f22,eax
  40c83b:	mov    ebp,0xf7aa650
  40c840:	out    0xd6,al
  40c842:	mov    ebx,0xdfc3c24f
  40c847:	cmp    BYTE PTR [edx+0x4c6b5d53],bl
  40c84d:	ins    DWORD PTR es:[edi],dx
  40c84e:	cmp    BYTE PTR [edx+0x11c456a3],ch
  40c854:	mov    ds:0xd3a65e6b,al
  40c859:	sbb    al,0x95
  40c85b:	fstp   DWORD PTR [eax-0x5ac242fa]
  40c861:	mov    ?,WORD PTR [edi]
  40c863:	(bad)  
  40c864:	pop    ebx
  40c865:	mov    ah,ch
  40c867:	in     eax,dx
  40c868:	mov    dl,0xa4
  40c86a:	ds (bad) 
  40c86c:	mov    al,ds:0x91ae9e34
  40c871:	mov    bl,0xb1
  40c873:	add    BYTE PTR [esi-0x1eb2bdb],al
  40c879:	sbb    BYTE PTR [edx-0x299be928],dh
  40c87f:	adc    esi,DWORD PTR [ebx+eiz*2+0x793cc8be]
  40c886:	xchg   ebp,eax
  40c887:	xchg   eax,ecx
  40c889:	sbb    dl,al
  40c88b:	jge    0x40c82a
  40c88d:	sub    BYTE PTR [edi+0x69],ah
  40c890:	mov    eax,esp
  40c892:	push   es
  40c893:	push   ecx
  40c894:	jo     0x40c884
  40c896:	push   edx
  40c897:	cwde   
  40c898:	inc    esp
  40c899:	mov    eax,0x8a77a048
  40c89e:	fwait
  40c89f:	xor    dh,BYTE PTR [eax]
  40c8a1:	push   esi
  40c8a2:	cmp    al,0x3b
  40c8a4:	arpl   di,di
  40c8a6:	jmp    FWORD PTR [edi-0x656631a6]
  40c8ac:	sbb    al,0xc2
  40c8ae:	adc    dl,BYTE PTR [esi+0x77]
  40c8b1:	cmp    eax,0xbd4f9dfe
  40c8b6:	lahf   
  40c8b7:	xchg   ecx,eax
  40c8b8:	cmp    al,0x1e
  40c8ba:	loop   0x40c85a
  40c8bc:	inc    ecx
  40c8bd:	fwait
  40c8be:	sub    dl,BYTE PTR [eax-0x7e07667]
  40c8c4:	mov    edi,0x1096a395
  40c8c9:	mov    bh,0xfe
  40c8cb:	nop
  40c8cc:	in     eax,0xce
  40c8ce:	sti    
  40c8cf:	jge    0x40c890
  40c8d1:	add    al,0xad
  40c8d3:	pop    esp
  40c8d4:	jecxz  0x40c868
  40c8d6:	scas   al,BYTE PTR es:[edi]
  40c8d7:	jmp    esp
  40c8d9:	push   es
  40c8da:	std    
  40c8db:	loope  0x40c893
  40c8dd:	cld    
  40c8de:	loopne 0x40c947
  40c8e0:	add    ebx,DWORD PTR [ecx-0x1f6cdb75]
  40c8e6:	push   ds
  40c8e7:	or     al,0xd4
  40c8e9:	pop    eax
  40c8ea:	pusha  
  40c8eb:	jae    0x40c96b
  40c8ed:	pop    esi
  40c8ee:	or     al,0x1e
  40c8f0:	js     0x40c921
  40c8f2:	xchg   ebx,eax
  40c8f3:	test   BYTE PTR [edi-0x64],0xc7
  40c8f7:	sbb    al,0x68
  40c8f9:	or     al,0xfb
  40c8fb:	repz mov ebp,0x1da6957f
  40c901:	mov    eax,ds:0x747e402f
  40c906:	dec    ebp
  40c907:	push   ds
  40c908:	not    BYTE PTR [ecx]
  40c90a:	push   ebx
  40c90b:	iret   
  40c90c:	rsm    
  40c90e:	push   ds
  40c90f:	pop    ss
  40c910:	(bad)
  40c913:	nop
  40c914:	pop    ecx
  40c915:	cmp    dl,BYTE PTR [ecx]
  40c917:	(bad)  
  40c918:	pop    edx
  40c919:	ins    WORD PTR es:[edi],dx
  40c91b:	loop   0x40c8e4
  40c91d:	fisub  DWORD PTR [ecx+eax*2]
  40c920:	and    edx,DWORD PTR [ecx]
  40c922:	es mov ecx,0xbc8abb0
  40c928:	js     0x40c9a9
  40c92a:	or     bh,BYTE PTR [esi+ecx*8+0x7ee18d1]
  40c931:	sbb    eax,0x8c464fb2
  40c936:	pop    es
  40c937:	(bad)  
  40c938:	in     eax,dx
  40c939:	ret    
  40c93a:	cmp    DWORD PTR [ebx],edx
  40c93c:	dec    edi
  40c93d:	mov    al,ds:0xa95500d3
  40c942:	dec    ecx
  40c943:	test   eax,0x396e7f8c
  40c948:	mov    WORD PTR [ebp-0x80],?
  40c94b:	imul   edx,DWORD PTR [ebx],0xb7878106
  40c951:	cmp    eax,0xde7016d5
  40c956:	inc    eax
  40c957:	in     al,0x2a
  40c959:	inc    ecx
  40c95a:	retf   
  40c95b:	stos   BYTE PTR es:[edi],al
  40c95c:	xchg   esi,eax
  40c95d:	mov    al,0x28
  40c95f:	ret    0xd1fa
  40c962:	jbe    0x40c9dd
  40c964:	dec    eax
  40c965:	mov    dh,0x1
  40c967:	mov    es,WORD PTR [esi]
  40c969:	or     BYTE PTR [esp+ebx*2],cl
  40c96c:	test   BYTE PTR [ebx+ebx*2],ch
  40c96f:	shr    BYTE PTR [ecx-0x70a8edad],cl
  40c975:	mov    bl,0x1a
  40c977:	dec    edx
  40c978:	xor    bh,ch
  40c97a:	xchg   edi,eax
  40c97b:	mov    cl,0xaf
  40c97d:	cdq    
  40c97e:	or     ch,BYTE PTR [eax-0xcc57a8d]
  40c984:	inc    ebp
  40c985:	and    eax,ebx
  40c987:	(bad)  
  40c988:	ins    DWORD PTR es:[edi],dx
  40c989:	fs popa 
  40c98b:	imul   ecx,DWORD PTR [edi],0xffffffc6
  40c98e:	neg    DWORD PTR [eax-0x4a7759bc]
  40c994:	pop    es
  40c995:	cmp    ah,dl
  40c997:	adc    al,0xa9
  40c999:	imul   ecx,DWORD PTR [edx+0x4b],0x2cde4998
  40c9a0:	rcr    BYTE PTR [ebp+0x63df1261],cl
  40c9a6:	popa   
  40c9a7:	cli    
  40c9a8:	arpl   WORD PTR [edx-0x57],di
  40c9ab:	cmp    BYTE PTR [ecx-0x68629d7a],ah
  40c9b1:	sbb    al,0x1d
  40c9b3:	test   ebx,ebx
  40c9b5:	out    0xef,al
  40c9b7:	test   BYTE PTR [edx+0x26020c91],dh
  40c9bd:	push   esp
  40c9be:	je     0x40c9bb
  40c9c0:	in     eax,dx
  40c9c1:	aas    
  40c9c2:	loope  0x40c9e8
  40c9c4:	push   ebx
  40c9c5:	fadd   st(5),st
  40c9c7:	mov    ebp,0x32af714f
  40c9cc:	xor    cl,BYTE PTR [edx]
  40c9ce:	dec    eax
  40c9cf:	mov    esp,0x4615e53e
  40c9d4:	sbb    edi,edx
  40c9d6:	out    dx,eax
  40c9d7:	(bad)  
  40c9d8:	das    
  40c9d9:	push   ecx
  40c9da:	aaa    
  40c9db:	fwait
  40c9dc:	mov    ah,0x28
  40c9de:	imul   ebx,DWORD PTR [esi+0x17],0xffffffc7
  40c9e2:	push   ds
  40c9e3:	stos   DWORD PTR es:[edi],eax
  40c9e4:	inc    BYTE PTR [ecx+0x78628380]
  40c9ea:	mov    esp,0xe3ec81fd
  40c9ef:	bswap  eax
  40c9f1:	fistp  DWORD PTR ds:0x1366af31
  40c9f7:	scas   al,BYTE PTR es:[edi]
  40c9f8:	nop
  40c9f9:	xchg   edx,eax
  40c9fa:	outs   dx,DWORD PTR ds:[esi]
  40c9fb:	add    al,0x85
  40c9fd:	int3   
  40c9fe:	leave  
  40c9ff:	shl    DWORD PTR [esi-0xbfc3864],0x27
  40ca06:	pop    ebx
  40ca07:	mov    cl,0xaa
  40ca0a:	outs   dx,BYTE PTR ds:[esi]
  40ca0b:	push   0xf7d5dd2
  40ca10:	sub    al,0x8a
  40ca12:	imul   edx,eax,0xfffffff1
  40ca15:	jno    0x40c9cc
  40ca17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca18:	mov    esi,0xb43828d0
  40ca1d:	aam    0x37
  40ca1f:	xchg   edi,eax
  40ca20:	xchg   esi,eax
  40ca21:	shl    DWORD PTR ds:0x45123dac,1
  40ca27:	ins    DWORD PTR es:[edi],dx
  40ca28:	mov    ebp,0x4f8bc8c3
  40ca2d:	mov    cl,0xea
  40ca2f:	push   ss
  40ca30:	(bad)  
  40ca31:	jb     0x40ca4b
  40ca33:	repnz test eax,0x6bc6fe11
  40ca39:	ja     0x40ca1e
  40ca3b:	bswap  esi
  40ca3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3e:	das    
  40ca3f:	xchg   BYTE PTR [ebp+ebp*1-0x37652c0],cl
  40ca46:	sub    BYTE PTR [ebx+0x609b523d],dh
  40ca4c:	retf   
  40ca4d:	jmp    0xd2730b5
  40ca52:	sub    BYTE PTR ds:0xc7015926,al
  40ca58:	mov    ebx,0x3ef04bd6
  40ca5e:	icebp  
  40ca5f:	lea    edx,[ecx+0x59429330]
  40ca65:	dec    edx
  40ca66:	xchg   edi,eax
  40ca67:	pop    ebp
  40ca68:	mov    cl,0x45
  40ca6a:	add    dh,BYTE PTR [ecx-0x20e5c0ec]
  40ca70:	int3   
  40ca71:	popf   
  40ca72:	cs push eax
  40ca74:	(bad)  
  40ca75:	cmp    BYTE PTR [esi+0xf4d4944],bh
  40ca7b:	or     al,0xf0
  40ca7d:	fcmovbe st,st(4)
  40ca7f:	jnp    0x40cae6
  40ca81:	jno    0x40ca42
  40ca83:	retf   
  40ca84:	outs   dx,DWORD PTR ds:[esi]
  40ca85:	jo     0x40ca51
  40ca87:	xor    ebp,ecx
  40ca89:	sar    BYTE PTR [esi+0x2ca0b0c0],cl
  40ca8f:	mov    WORD PTR [ebx-0x11],ss
  40ca92:	jle    0x40caa0
  40ca94:	sub    al,0x7b
  40ca96:	pop    edi
  40ca97:	in     al,0xf7
  40ca99:	pop    es
  40ca9a:	and    al,dl
  40ca9c:	mov    ah,0xbf
  40ca9e:	fld    QWORD PTR [eax+esi*4-0x67e01c41]
  40caa5:	repz jno 0x40ca38
  40caa8:	fnsave [ebx]
  40caaa:	dec    esp
  40caab:	xor    al,0x6c
  40caad:	mov    ds:0xdd216174,eax
  40cab2:	dec    ebx
  40cab3:	sub    eax,0x1effd10e
  40cab8:	xor    BYTE PTR [ecx+0x55],ch
  40cabb:	idiv   BYTE PTR [ebx-0x69]
  40cabe:	(bad)  
  40cabf:	pcmpeqw mm6,QWORD PTR [edx+eax*2+0x4a]
  40cac4:	ins    DWORD PTR es:[edi],dx
  40cac5:	sub    cl,0xed
  40cac8:	pop    edx
  40cac9:	lock jno 0x40cafc
  40cacc:	out    dx,eax
  40cacd:	push   eax
  40cace:	inc    esi
  40cacf:	es repnz scas eax,DWORD PTR es:[edi]
  40cad2:	jno    0x40ca5a
  40cad4:	sar    DWORD PTR [ebx-0x3e01eb3c],cl
  40cada:	add    eax,0xaf15c076
  40cadf:	mov    edi,0x38ed6549
  40cae4:	sbb    DWORD PTR [ebp+0x7b],edx
  40cae7:	xchg   esi,eax
  40cae8:	jb     0x40cae5
  40caea:	fidiv  WORD PTR [edx-0x3b]
  40caed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caee:	xor    BYTE PTR [ebp+0x1eba1d9],ch
  40caf4:	(bad)  
  40caf5:	pop    ss
  40caf6:	test   DWORD PTR [edx+0x2f7fe0b3],0x42f605d8
  40cb00:	adc    eax,0x5b09d44f
  40cb05:	add    BYTE PTR [edx-0x1197bd38],bh
  40cb0b:	bound  esp,QWORD PTR [edi+esi*1+0x26]
  40cb0f:	stos   BYTE PTR es:[edi],al
  40cb10:	cmp    ebp,edi
  40cb12:	mov    cl,0x11
  40cb14:	pop    edi
  40cb15:	pop    es
  40cb16:	in     al,0xa3
  40cb18:	mov    dl,0xce
  40cb1a:	inc    ebp
  40cb1b:	pop    ss
  40cb1c:	push   0xfffffffd
  40cb1e:	repz bound esp,QWORD PTR [esi+0x1946b9b0]
  40cb25:	mov    WORD PTR [eax],ss
  40cb27:	pop    ebx
  40cb28:	(bad)  
  40cb29:	jmp    0x40cb99
  40cb2b:	cld    
  40cb2c:	retf   
  40cb2d:	xor    ebp,DWORD PTR [ebx+0x18]
  40cb30:	and    DWORD PTR [eax-0x21e0545d],edx
  40cb36:	aad    0xa3
  40cb38:	pop    edx
  40cb39:	mov    dl,BYTE PTR [ebx+0x321265f9]
  40cb3f:	int3   
  40cb40:	rol    dl,cl
  40cb42:	int3   
  40cb43:	mov    ecx,0x135becad
  40cb48:	out    dx,al
  40cb49:	add    BYTE PTR [edx-0x5b641d9f],ah
  40cb4f:	(bad)  
  40cb50:	mov    gs,WORD PTR [edx-0x4e3ab1a]
  40cb56:	and    eax,DWORD PTR [ebp-0x24]
  40cb59:	push   esp
  40cb5a:	lock push 0x4d
  40cb5d:	sub    BYTE PTR [ebx],dl
  40cb5f:	and    edx,edx
  40cb61:	push   es
  40cb62:	neg    edx
  40cb64:	mov    eax,DWORD PTR [edx-0x25]
  40cb67:	pop    eax
  40cb68:	mov    gs,WORD PTR [ebx]
  40cb6a:	jnp    0x40cb0b
  40cb6c:	push   0xbfa6fc49
  40cb71:	mov    al,0xc4
  40cb73:	loope  0x40cbdb
  40cb75:	sbb    BYTE PTR [eax-0x31],ch
  40cb78:	and    al,0x70
  40cb7a:	pop    edi
  40cb7b:	push   0xb2a5b298
  40cb80:	ret    
  40cb81:	fs cmc 
  40cb83:	inc    ecx
  40cb84:	push   edx
  40cb85:	push   esi
  40cb86:	aas    
  40cb87:	pushf  
  40cb88:	mov    bh,0xb5
  40cb8a:	hlt    
  40cb8b:	mov    ebp,0x459efe31
  40cb90:	bndstx [ebx+0x39cf6260],bnd0
  40cb97:	retf   
  40cb98:	leave  
  40cb99:	fistp  WORD PTR [edx]
  40cb9b:	and    DWORD PTR [edi],ecx
  40cb9d:	shr    DWORD PTR [ebx+0xf],1
  40cba0:	enter  0x73af,0x45
  40cba4:	data16 test BYTE PTR [esi-0x3face4b2],dl
  40cbab:	clc    
  40cbac:	pop    esi
  40cbad:	fisttp DWORD PTR [eax]
  40cbaf:	aaa    
  40cbb0:	cmp    ch,BYTE PTR [ebx]
  40cbb2:	cwde   
  40cbb3:	loop   0x40cc32
  40cbb5:	sub    eax,0x222e6
  40cbba:	adc    bl,bl
  40cbbc:	ret    
  40cbbd:	jae    0x40cb79
  40cbbf:	hlt    
  40cbc0:	inc    ebx
  40cbc1:	test   ah,cl
  40cbc3:	in     eax,0x52
  40cbc5:	mov    ds:0x5979e415,eax
  40cbca:	jmp    0xd2ca:0xea34ad88
  40cbd1:	fnsave [edx-0x1ff002df]
  40cbd7:	push   ss
  40cbd8:	cmp    bh,dh
  40cbda:	sti    
  40cbdb:	loop   0x40cbd2
  40cbdd:	ja     0x40cc03
  40cbdf:	mov    ecx,0x12c38d9
  40cbe4:	stos   BYTE PTR es:[edi],al
  40cbe5:	sbb    eax,0x79f72698
  40cbea:	aam    0x95
  40cbec:	jg     0x40cc0a
  40cbee:	cli    
  40cbef:	mov    ebp,DWORD PTR [edx+0x69073324]
  40cbf5:	sub    al,0xd8
  40cbf7:	(bad)  
  40cbf8:	aam    0xdd
  40cbfa:	jo     0x40cbee
  40cbfc:	dec    ecx
  40cbfd:	(bad)  
  40cbff:	mov    edx,0x4b64dd7b
  40cc04:	sub    BYTE PTR [esi-0x47],al
  40cc07:	mov    cl,0xbc
  40cc09:	push   0x36
  40cc0b:	lock cli 
  40cc0d:	cld    
  40cc0e:	xchg   edx,eax
  40cc0f:	jns    0x40cc8c
  40cc11:	mov    bh,0x13
  40cc13:	push   edi
  40cc14:	cmp    DWORD PTR [edi+0x2e],esp
  40cc17:	retf   0xa620
  40cc1a:	adc    BYTE PTR [eax+0x6e],dh
  40cc1d:	in     eax,0xd7
  40cc1f:	pop    edi
  40cc20:	fcmovnbe st,st(7)
  40cc22:	jmp    0x9ed819dc
  40cc27:	xchg   ebp,eax
  40cc28:	dec    edx
  40cc29:	(bad)  [esi+0x1430590d]
  40cc2f:	push   ebp
  40cc30:	xor    eax,0xc062790c
  40cc35:	xchg   ebx,eax
  40cc36:	in     eax,dx
  40cc37:	fld    TBYTE PTR ds:0x7010b0de
  40cc3d:	mov    ch,0xf7
  40cc3f:	fdivr  QWORD PTR [edx+0x21935dd1]
  40cc45:	test   eax,0x1a95e9d1
  40cc4a:	loope  0x40cc81
  40cc4c:	push   ebx
  40cc4d:	add    eax,0x9e905c66
  40cc52:	mov    esp,0xcb04e9c3
  40cc57:	xchg   edx,eax
  40cc58:	or     ch,bl
  40cc5a:	push   ss
  40cc5b:	in     eax,dx
  40cc5c:	dec    edx
  40cc5d:	in     eax,dx
  40cc5e:	adc    DWORD PTR [edi],0xfffffffc
  40cc61:	pop    eax
  40cc62:	mul    esi
  40cc64:	aas    
  40cc65:	mov    esi,DWORD PTR ds:0x13d28fd3
  40cc6b:	mov    dh,0x8
  40cc6d:	jle    0x40cc2e
  40cc6f:	push   ebx
  40cc70:	sub    al,0xa0
  40cc72:	xor    al,0x7d
  40cc74:	cs into 
  40cc76:	sbb    eax,0x30cefd30
  40cc7b:	adc    eax,0xd0c702ef
  40cc80:	gs cwde 
  40cc82:	mov    dh,BYTE PTR [ebx+0x3cd7b575]
  40cc88:	shl    DWORD PTR [ecx],1
  40cc8a:	popw   ds
  40cc8c:	shl    cl,0x88
  40cc8f:	arpl   WORD PTR [ecx-0x5a],dx
  40cc92:	dec    esp
  40cc93:	push   cs
  40cc94:	sbb    bh,BYTE PTR [ecx+0x5c]
  40cc97:	fsqrt  
  40cc99:	les    esp,FWORD PTR [eax]
  40cc9b:	scas   al,BYTE PTR es:[edi]
  40cc9c:	pop    ds
  40cc9d:	test   al,0x97
  40cc9f:	(bad)  
  40cca0:	aaa    
  40cca1:	dec    ecx
  40cca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca3:	jecxz  0x40ccbc
  40cca5:	fdiv   st,st(1)
  40cca7:	adc    BYTE PTR [eax+0x64eec674],0xb8
  40ccae:	xchg   esi,eax
  40ccaf:	and    BYTE PTR ds:0x18603b8,0x2f
  40ccb6:	stos   BYTE PTR es:[edi],al
  40ccb7:	cld    
  40ccb8:	add    DWORD PTR [edi+esi*1],eax
  40ccbb:	iret   
  40ccbc:	ficomp WORD PTR [eax+esi*4]
  40ccbf:	ins    BYTE PTR es:[di],dx
  40ccc1:	jo     0x40ccc9
  40ccc3:	std    
  40ccc4:	push   ss
  40ccc5:	mov    dl,0xe7
  40ccc7:	dec    esi
  40ccc8:	call   0xc918:0x6a34700a
  40cccf:	loope  0x40cc84
  40ccd1:	mov    cl,0xe7
  40ccd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd4:	adc    dl,cl
  40ccd6:	ficomp WORD PTR [edx-0x276a485b]
  40ccdc:	retf   0x7e26
  40ccdf:	test   eax,0xf5f32d0e
  40cce4:	aad    0x3d
  40cce6:	ja     0x40ccc6
  40cce8:	int    0xa0
  40ccea:	pop    ss
  40cceb:	and    eax,0x20d63003
  40ccf0:	(bad)  [edi]
  40ccf2:	or     al,0x8c
  40ccf4:	aad    0x7c
  40ccf6:	mov    ds:0x10f5640f,eax
  40ccfb:	jg     0x40ccb7
  40ccfd:	out    dx,al
  40ccfe:	or     DWORD PTR [edi-0xfe4dd9d],esp
  40cd04:	mov    bl,BYTE PTR [ebx]
  40cd06:	es push ebx
  40cd08:	dec    edx
  40cd09:	mov    ebp,0x36361d88
  40cd0e:	retf   0x8da8
  40cd11:	cmp    bh,ch
  40cd13:	loopne 0x40cd26
  40cd15:	cmp    DWORD PTR [eax+0xf],eax
  40cd18:	sbb    eax,0x5b10d854
  40cd1d:	cwde   
  40cd1e:	dec    eax
  40cd1f:	add    DWORD PTR [edi],edi
  40cd21:	xchg   ebx,eax
  40cd22:	xchg   esp,eax
  40cd23:	fs add al,0x8f
  40cd26:	pop    ebx
  40cd27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd28:	loop   0x40cd47
  40cd2a:	enter  0x1df0,0xc2
  40cd2e:	cli    
  40cd2f:	or     eax,0x3efdf5d4
  40cd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd35:	pop    ds
  40cd36:	cli    
  40cd37:	ja     0x40cd84
  40cd39:	jmp    0xc062:0xf1954c4b
  40cd40:	push   cs
  40cd41:	push   0xc6aadf04
  40cd46:	addr16 mov ebp,0x75601a6f
  40cd4c:	(bad)  
  40cd4d:	push   esi
  40cd4e:	mov    edx,0xd2e5a294
  40cd53:	mov    WORD PTR [edi+0x458045bf],cs
  40cd59:	fcmove st,st(3)
  40cd5b:	xchg   ecx,eax
  40cd5c:	dec    ebp
  40cd5d:	xchg   esi,eax
  40cd5e:	xor    BYTE PTR [eax-0x65],dl
  40cd61:	mov    esp,0xddc33383
  40cd66:	ins    BYTE PTR es:[edi],dx
  40cd67:	inc    edi
  40cd68:	test   al,0xa6
  40cd6a:	leave  
  40cd6b:	mov    ah,0x8c
  40cd6d:	inc    eax
  40cd6e:	cmp    al,BYTE PTR [ecx]
  40cd70:	cld    
  40cd71:	(bad)  
  40cd72:	jmp    0xd73f:0x817fd51a
  40cd79:	aaa    
  40cd7a:	xchg   edx,eax
  40cd7b:	jmp    0xda7c:0xd7eae783
  40cd82:	cmp    al,0xaf
  40cd84:	and    ch,bl
  40cd86:	sub    eax,0x3e52ed3b
  40cd8b:	mov    dh,0x7f
  40cd8d:	push   esi
  40cd8e:	mov    al,ds:0xb9224f2
  40cd93:	push   ds
  40cd94:	inc    edx
  40cd95:	xchg   esp,eax
  40cd96:	xchg   ch,ah
  40cd98:	pop    esi
  40cd99:	mov    eax,0xbf4cd2f4
  40cd9e:	out    0xf,al
  40cda0:	sbb    eax,0x2617c653
  40cda5:	pusha  
  40cda6:	pop    esi
  40cda7:	mov    al,ds:0xa8ac5244
  40cdac:	mov    edx,0x5a08ec7d
  40cdb1:	pop    eax
  40cdb2:	or     cl,BYTE PTR [eax-0x9095360]
  40cdb8:	dec    ebx
  40cdb9:	sti    
  40cdba:	inc    edx
  40cdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdbc:	jge    0x40cd90
  40cdbe:	lds    ecx,FWORD PTR [ebx-0x19dfa499]
  40cdc4:	pop    esi
  40cdc5:	sub    eax,0xb17dadd3
  40cdca:	pop    esp
  40cdcb:	dec    esi
  40cdcc:	inc    edi
  40cdcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdce:	push   cs
  40cdcf:	jle    0x40cdff
  40cdd1:	jle    0x40ce51
  40cdd3:	push   esp
  40cdd4:	pushf  
  40cdd5:	js     0x40cda9
  40cdd7:	mov    ch,0xfd
  40cdd9:	inc    ebx
  40cdda:	mov    ah,0x41
  40cddc:	ss cmc 
  40cdde:	ins    DWORD PTR es:[edi],dx
  40cddf:	ins    DWORD PTR es:[edi],dx
  40cde0:	mov    edx,0x65d74808
  40cde5:	ror    BYTE PTR [ebx+0x6fa5bb64],cl
  40cdeb:	in     al,dx
  40cdec:	pushf  
  40cded:	out    dx,eax
  40cdee:	nop
  40cdef:	outs   dx,BYTE PTR ds:[esi]
  40cdf0:	mov    edi,0x3b4d77d2
  40cdf5:	mov    edi,0x78d627ae
  40cdfa:	and    eax,0x363d0717
  40cdff:	xlat   BYTE PTR ds:[ebx]
  40ce00:	popa   
  40ce01:	jne    0x40cdee
  40ce03:	in     eax,dx
  40ce04:	bound  eax,QWORD PTR ds:0xa98fca70
  40ce0a:	stos   BYTE PTR es:[edi],al
  40ce0b:	sub    BYTE PTR [esi+0x4d863848],dl
  40ce11:	xchg   edi,eax
  40ce12:	adc    edi,DWORD PTR [eax+0x22a773ee]
  40ce18:	or     ebx,edx
  40ce1a:	mov    ebp,0x1687e8f0
  40ce1f:	push   ecx
  40ce20:	xor    al,0xb4
  40ce22:	xchg   esi,eax
  40ce23:	mov    ds:0xcd8442a8,al
  40ce28:	hlt    
  40ce29:	push   esp
  40ce2a:	sbb    BYTE PTR [edx+0x3b],al
  40ce2d:	adc    BYTE PTR [eax+0x32],ah
  40ce30:	clc    
  40ce31:	and    edi,DWORD PTR [eax-0x61]
  40ce34:	das    
  40ce35:	aaa    
  40ce36:	pusha  
  40ce37:	rcr    DWORD PTR [ecx+0x5df9a3be],1
  40ce3d:	and    esp,eax
  40ce3f:	xlat   BYTE PTR ds:[ebx]
  40ce40:	xor    ebp,0x37
  40ce43:	mov    esi,0xb5bee348
  40ce48:	add    esp,DWORD PTR [edx+0x30]
  40ce4b:	cmp    esi,DWORD PTR [ecx]
  40ce4d:	jle    0x40cdde
  40ce4f:	icebp  
  40ce50:	jmp    0xffde:0xcd20d393
  40ce57:	adc    esp,ecx
  40ce59:	pop    ebx
  40ce5a:	test   DWORD PTR [eax-0x19],edi
  40ce5d:	out    0xef,eax
  40ce5f:	(bad)  
  40ce60:	repnz fcmovnb st,st(5)
  40ce63:	push   es
  40ce64:	add    esi,DWORD PTR [edi+edx*1+0xc]
  40ce68:	adc    eax,0x10455060
  40ce6d:	sahf   
  40ce6e:	xchg   BYTE PTR [ebx+0x3c88bb3f],dl
  40ce74:	idiv   bl
  40ce76:	imul   ecx,ebp,0xffffffa0
  40ce79:	loopne 0x40ce78
  40ce7b:	ds call 0x5131:0xcb21b08
  40ce83:	adc    eax,0x56794176
  40ce88:	sub    al,0x1f
  40ce8a:	je     0x40ce6a
  40ce8c:	jne    0x40cec9
  40ce8e:	sti    
  40ce8f:	jl     0x40ced9
  40ce91:	into   
  40ce92:	loopne 0x40ce4b
  40ce94:	xlat   BYTE PTR ds:[ebx]
  40ce95:	sbb    DWORD PTR [eax-0x6],ebp
  40ce98:	scas   al,BYTE PTR es:[edi]
  40ce99:	frstor [esi]
  40ce9b:	daa    
  40ce9c:	fwait
  40ce9d:	mov    dh,0xf9
  40ce9f:	or     al,0x47
  40cea1:	cs test al,0x9d
  40cea4:	mov    ds:0xf9e879ef,al
  40cea9:	sbb    dh,cl
  40ceab:	push   es
  40ceac:	sub    bh,bh
  40ceae:	loope  0x40cf12
  40ceb0:	bound  ebx,QWORD PTR [ebx]
  40ceb2:	les    edi,FWORD PTR [edi+edi*8+0x51]
  40ceb6:	cli    
  40ceb7:	push   ss
  40ceb8:	out    dx,eax
  40ceb9:	adc    bl,dl
  40cebb:	mov    bl,0x67
  40cebd:	sub    BYTE PTR [eax+esi*8+0x6b],dl
  40cec1:	pop    esi
  40cec2:	inc    esi
  40cec3:	fnstenv [edi+0x4b]
  40cec6:	xor    ah,al
  40cec8:	rcr    DWORD PTR [esp+eax*1],cl
  40cecb:	xor    bh,BYTE PTR [eax]
  40cecd:	and    edx,ebp
  40cecf:	loope  0x40cec0
  40ced1:	lods   al,BYTE PTR ds:[esi]
  40ced2:	adc    al,0xf3
  40ced4:	xor    DWORD PTR [ebp+0x32],ebp
  40ced7:	jp     0x40ce70
  40ced9:	loope  0x40ce87
  40cedb:	cmp    DWORD PTR [ebp+0x4e2a24a1],0xffffffca
  40cee2:	mov    esi,0x16a9f867
  40cee7:	adc    al,BYTE PTR [ecx]
  40cee9:	cmp    cl,0x6b
  40ceec:	mov    dh,0x23
  40ceee:	pusha  
  40ceef:	je     0x40cf1b
  40cef1:	and    DWORD PTR [ebp+ebp*4-0x1c55c80a],edx
  40cef8:	adc    ecx,ebx
  40cefa:	and    al,0x24
  40cefc:	test   BYTE PTR [edx],al
  40cefe:	fnstenv [edi]
  40cf00:	xor    BYTE PTR [ecx-0x36],dh
  40cf03:	test   BYTE PTR [ebx-0x11],dh
  40cf06:	ja     0x40cf0a
  40cf08:	jp     0x40cef9
  40cf0a:	cmp    bh,BYTE PTR [edi-0x58]
  40cf0d:	mov    ch,0x13
  40cf0f:	imul   ebp,ebx,0xbfa32bb8
  40cf15:	aas    
  40cf16:	fdivr  DWORD PTR [ecx]
  40cf18:	test   BYTE PTR [edx+eiz*1],0xb
  40cf1c:	retf   
  40cf1d:	sbb    al,0x7e
  40cf1f:	adc    al,0x1a
  40cf21:	ds push es
  40cf23:	call   0x92682cca
  40cf28:	repz mov esp,0x3990f74c
  40cf2e:	retf   0xb9c5
  40cf31:	jb     0x40cec4
  40cf33:	call   0x5594:0xbb6266de
  40cf3a:	add    al,0x99
  40cf3c:	add    ecx,DWORD PTR [edi+0x672ff10]
  40cf42:	cmp    BYTE PTR [ebx-0x7e49c7aa],dh
  40cf48:	adc    BYTE PTR [eax+edi*4+0x33846244],cl
  40cf4f:	mov    ebp,0x7553db15
  40cf54:	sbb    dh,bl
  40cf56:	jne    0x40cf7c
  40cf58:	pop    esp
  40cf59:	mov    al,ds:0xa4b6bee2
  40cf5e:	popa   
  40cf5f:	daa    
  40cf60:	sahf   
  40cf61:	ss mov al,0x96
  40cf64:	mov    ebp,DWORD PTR [ebp+ecx*8-0x266c5a3]
  40cf6b:	sub    eax,0x8622a10b
  40cf70:	jp     0x40cfc3
  40cf72:	fisubr WORD PTR [ebp+0x6f]
  40cf75:	fcmovu st,st(0)
  40cf77:	daa    
  40cf78:	mov    al,ds:0x7b7bd3a3
  40cf7d:	cli    
  40cf7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7f:	cmp    DWORD PTR [ebp-0x53],0xffffffd6
  40cf83:	push   cs
  40cf84:	adc    eax,0x42713953
  40cf89:	sub    esp,DWORD PTR [edi+ebx*1+0x2045e42]
  40cf90:	outs   dx,DWORD PTR ds:[esi]
  40cf91:	adc    bh,BYTE PTR [edi+0x402d56b8]
  40cf97:	stos   BYTE PTR es:[edi],al
  40cf98:	or     al,0xee
  40cf9a:	inc    edx
  40cf9b:	mov    ecx,DWORD PTR [eax]
  40cf9d:	enter  0x9f5b,0x8b
  40cfa1:	out    0x45,eax
  40cfa3:	jecxz  0x40cf4b
  40cfa5:	sbb    ch,BYTE PTR [eax+0x60]
  40cfa8:	xchg   esp,eax
  40cfa9:	daa    
  40cfaa:	dec    edi
  40cfab:	ins    DWORD PTR es:[edi],dx
  40cfac:	popf   
  40cfad:	xchg   esi,eax
  40cfae:	pop    esp
  40cfaf:	push   esi
  40cfb0:	enter  0xe89c,0x8e
  40cfb4:	xchg   edx,eax
  40cfb5:	mov    esi,0x89b8f419
  40cfba:	outs   dx,DWORD PTR ds:[esi]
  40cfbb:	and    ah,BYTE PTR [eax+0x4a]
  40cfbe:	xchg   ebx,eax
  40cfbf:	xchg   ecx,eax
  40cfc0:	push   es
  40cfc1:	call   0xa122:0x6e2d35c8
  40cfc8:	lock scas eax,DWORD PTR es:[edi]
  40cfca:	scas   al,BYTE PTR es:[edi]
  40cfcb:	int3   
  40cfcc:	lea    edx,[ebx+0x46]
  40cfcf:	out    0x41,al
  40cfd1:	shl    BYTE PTR ds:0x368d8bbc,1
  40cfd7:	add    bl,BYTE PTR [edx+eiz*2+0x67f8014d]
  40cfde:	xchg   ebp,eax
  40cfdf:	stc    
  40cfe0:	retf   
  40cfe1:	mov    bh,0x60
  40cfe3:	pop    ds
  40cfe4:	adc    BYTE PTR [edx+0x4bb3a8a1],ch
  40cfea:	add    dl,al
  40cfec:	push   cs
  40cfed:	nop
  40cfee:	sub    DWORD PTR [ebx],0xfffffff9
  40cff1:	inc    ebp
  40cff2:	inc    edi
  40cff3:	call   0x4385:0xa619fa3c
  40cffa:	mov    ds:0x9f096f46,eax
  40cfff:	aaa    
  40d000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d001:	in     eax,0xed
  40d003:	pop    edi
  40d004:	lock add al,0x14
  40d007:	or     bh,BYTE PTR [ecx-0x4186237d]
  40d00d:	push   edi
  40d00e:	inc    DWORD PTR [esi+0x41]
  40d011:	sbb    eax,0x80509b47
  40d016:	fild   QWORD PTR [ebx-0x4c0c9344]
  40d01c:	mov    esi,0x6a82d9d6
  40d021:	sub    al,0x86
  40d023:	push   edx
  40d024:	fiadd  DWORD PTR [ebp-0x4a]
  40d027:	addr16 mov ecx,0x9b1f802f
  40d02d:	jl     0x40d052
  40d02f:	or     eax,0x8cf50fd6
  40d034:	ss inc edx
  40d036:	sbb    BYTE PTR [ebx+eax*4+0x1c3e49a4],0x16
  40d03e:	xchg   ebp,eax
  40d040:	(bad)  
  40d041:	sbb    ecx,esp
  40d043:	sbb    eax,0x87869d0c
  40d048:	push   eax
  40d049:	mov    ds:0x305424d4,eax
  40d04e:	sbb    al,0xc8
  40d050:	push   ebx
  40d051:	mov    ebx,0xe6b8a29
  40d056:	and    bl,BYTE PTR [esi]
  40d058:	add    eax,0x8fdf56a2
  40d05d:	jns    0x40d0ab
  40d05f:	jge    0x40d026
  40d061:	jbe    0x40d0d1
  40d063:	mov    ecx,DWORD PTR [ebp+0x8]
  40d066:	sbb    DWORD PTR ds:0x42a2b6,0x42a2d2
  40d070:	add    ecx,DWORD PTR [eax+0x24]
  40d073:	and    DWORD PTR ds:0x42a2de,0x1336
  40d07d:	mov    DWORD PTR [ebp-0x34],ecx
  40d080:	mov    eax,DWORD PTR [ebp-0x14]
  40d083:	mov    ecx,DWORD PTR [ebp+0x8]
  40d086:	add    DWORD PTR ds:0x42a276,0x42a2a6
  40d090:	add    ecx,DWORD PTR [eax+0x1c]
  40d093:	mov    DWORD PTR ds:0x42a2ae,0x5cb0
  40d09d:	mov    DWORD PTR [ebp-0x14],ecx
  40d0a0:	mov    DWORD PTR ds:0x42a2f2,0x755c
  40d0aa:	jmp    0x40d194
  40d0af:	or     eax,ecx
  40d0b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40d0b4:	xor    ecx,0x90a
  40d0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40d0bd:	adc    DWORD PTR ds:0x42a28e,0x25cc
  40d0c7:	add    ecx,DWORD PTR [eax+ebx*4]
  40d0ca:	mov    DWORD PTR [ebp-0x28],ecx
  40d0cd:	xor    eax,0x75c
  40d0d2:	mov    eax,DWORD PTR [ebp-0x4]
  40d0d5:	mov    ecx,DWORD PTR [ebp-0x28]
  40d0d8:	xor    eax,esi
  40d0da:	and    DWORD PTR ds:0x42a2ae,0x42a2c2
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ea,0x1030
  40d0f0:	cmp    ecx,eax
  40d0f2:	mov    DWORD PTR ds:0x42a2c6,0xfb7
  40d0fc:	je     0x40d194
  40d102:	mov    DWORD PTR ds:0x42a262,0xed5
  40d10c:	jmp    0x40d185
  40d111:	and    DWORD PTR ds:0x42a2e2,0x0
  40d11b:	jmp    0x40d12d
  40d120:	mov    ecx,DWORD PTR ds:0x42a2e2
  40d126:	inc    ecx
  40d127:	mov    DWORD PTR ds:0x42a2e2,ecx
  40d12d:	cmp    DWORD PTR ds:0x42a2e2,0x10
  40d134:	jae    0x40d161
  40d13a:	cmp    DWORD PTR ds:0x42a2e2,0x15
  40d141:	jle    0x40d161
  40d147:	jmp    0x40d15c
  40d14c:	push   0x42a2ae
  40d151:	push   0x429181
  40d156:	call   DWORD PTR ds:0x42a3ca
  40d15c:	jmp    0x40d120
  40d161:	mov    eax,DWORD PTR [ebp-0x4]
  40d164:	mov    ecx,DWORD PTR [ebp-0x8]
  40d167:	xor    eax,esi
  40d169:	add    eax,edi
  40d16b:	cmp    ecx,eax
  40d16d:	mov    eax,DWORD PTR [ebp-0x4]
  40d170:	je     0x40d1cf
  40d176:	mov    ecx,DWORD PTR [ebp-0x30]
  40d179:	xor    eax,esi
  40d17b:	add    eax,edi
  40d17d:	cmp    ecx,eax
  40d17f:	je     0x40d1d8
  40d185:	lea    eax,[ebp-0x8]
  40d188:	push   eax
  40d189:	push   DWORD PTR [ebp-0x28]
  40d18c:	push   DWORD PTR [ebp+0xc]
  40d18f:	call   0x41622a
  40d194:	mov    eax,DWORD PTR [ebp-0x4]
  40d197:	mov    ecx,DWORD PTR [ebp-0x8]
  40d19a:	xor    eax,esi
  40d19c:	add    eax,edi
  40d19e:	cmp    ecx,eax
  40d1a0:	je     0x40d1bb
  40d1a6:	mov    eax,DWORD PTR [ebp-0x34]
  40d1a9:	movzx  eax,WORD PTR [eax+ebx*2]
  40d1ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40d1b0:	mov    eax,DWORD PTR [ecx+eax*4]
  40d1b3:	mov    DWORD PTR [ebp-0x38],eax
  40d1b6:	jmp    0x40d111
  40d1bb:	mov    eax,DWORD PTR [ebp-0xc]
  40d1be:	xor    eax,esi
  40d1c0:	lea    ebx,[ebx+eax*1+0x3272f1]
  40d1c7:	jmp    0x40872d
  40d1cc:	mov    eax,DWORD PTR [ebp-0x4]
  40d1cf:	xor    eax,esi
  40d1d1:	add    eax,edi
  40d1d3:	jmp    0x413da1
  40d1d8:	mov    eax,DWORD PTR [ebp-0x38]
  40d1db:	add    eax,DWORD PTR [ebp+0x8]
  40d1de:	mov    DWORD PTR [ebp-0x18],eax
  40d1e1:	mov    eax,DWORD PTR [ebp-0x1c]
  40d1e4:	test   eax,eax
  40d1e6:	je     0x40f60e
  40d1ec:	mov    DWORD PTR [ebp-0x20],0x0
  40d1f3:	push   0x3
  40d1f5:	xor    edx,edx
  40d1f7:	pop    edx
  40d1f8:	add    edx,0x8
  40d1fb:	push   edx
  40d1fc:	pop    ecx
  40d1fd:	push   0x6
  40d1ff:	dec    ecx
  40d200:	pop    ebx
  40d201:	dec    ebx
  40d202:	xchg   ebx,ecx
  40d204:	sub    ebx,ecx
  40d206:	xchg   ebx,ecx
  40d208:	dec    ecx
  40d209:	mov    eax,DWORD PTR [ebp-0x1c]
  40d20c:	imul   eax,ecx
  40d20f:	sub    esp,eax
  40d211:	mov    DWORD PTR [ebp-0x20],esp
  40d214:	mov    eax,DWORD PTR [ebp-0x4]
  40d217:	xor    eax,esi
  40d219:	add    eax,edi
  40d21b:	jmp    0x40f5e7
  40d220:	mov    ecx,DWORD PTR [ebp-0xc]
  40d223:	mov    eax,DWORD PTR [ebp+0x8]
  40d226:	mov    edx,DWORD PTR [ebp+0x14]
  40d229:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d22d:	xor    ecx,esi
  40d22f:	add    ecx,edi
  40d231:	xor    edx,edx
  40d233:	div    ecx
  40d235:	mov    ecx,DWORD PTR [ebp-0x4]
  40d238:	jmp    0x40f5c6
  40d23d:	adc    esp,DWORD PTR [eax-0x55]
  40d240:	jl     0x40d1c2
  40d242:	mov    eax,0x95ec0084
  40d247:	bound  ebp,QWORD PTR [ecx+0x13]
  40d24a:	sbb    bh,BYTE PTR [esi-0x7c2c16b3]
  40d250:	or     DWORD PTR [esi+ebx*2],0xffffff83
  40d254:	sbb    DWORD PTR [eax+0x575a3e91],0xfffffffd
  40d25b:	inc    esp
  40d25c:	jne    0x40d1fc
  40d25e:	sbb    ch,bh
  40d260:	jge    0x40d213
  40d262:	mov    bh,0x9d
  40d264:	pushf  
  40d265:	mov    ebx,0x70efe2f6
  40d26a:	xchg   esp,eax
  40d26b:	adc    ebp,ebp
  40d26d:	xor    al,0x5d
  40d26f:	rol    DWORD PTR [ebx-0x22],1
  40d272:	outs   dx,DWORD PTR cs:[esi]
  40d274:	mov    DWORD PTR [ebp+0x34],ebp
  40d277:	call   0x7b9d6f0c
  40d27c:	adc    esi,DWORD PTR [ebp+0x5cafb9c7]
  40d282:	cmp    al,0x2d
  40d284:	push   0x1d
  40d286:	lock cmp al,0xd1
  40d289:	ret    
  40d28a:	cli    
  40d28b:	cld    
  40d28c:	sbb    al,0xed
  40d28e:	add    ecx,ebx
  40d290:	jo     0x40d27f
  40d292:	jge    0x40d2e5
  40d294:	pushf  
  40d295:	push   0xffffffcc
  40d297:	ins    BYTE PTR es:[edi],dx
  40d298:	cmc    
  40d299:	add    ecx,DWORD PTR [esi]
  40d29b:	pop    edi
  40d29c:	adc    eax,0xb06be6a3
  40d2a1:	imul   esi,ecx,0x76b7eeed
  40d2a7:	pop    ss
  40d2a8:	aas    
  40d2a9:	ds cmp ch,ch
  40d2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ad:	jge    0x40d260
  40d2af:	jmp    ebp
  40d2b1:	jmp    0xd6fe:0xacfa8eb0
  40d2b8:	ins    DWORD PTR es:[edi],dx
  40d2b9:	test   BYTE PTR [edi+0x7d],bh
  40d2bc:	fcmovbe st,st(4)
  40d2be:	jecxz  0x40d31a
  40d2c0:	sbb    al,BYTE PTR [edx]
  40d2c2:	push   edi
  40d2c3:	loopne 0x40d27e
  40d2c5:	addr16 ds push ebp
  40d2c8:	ja     0x40d2dd
  40d2ca:	loop   0x40d2e1
  40d2cc:	sub    eax,DWORD PTR [ebp+ebx*4+0x1175a3e1]
  40d2d3:	ja     0x40d2e1
  40d2d5:	inc    eax
  40d2d6:	cmp    bh,BYTE PTR [edx-0x33affa9a]
  40d2dc:	dec    edx
  40d2dd:	into   
  40d2de:	aam    0xe6
  40d2e0:	cmp    al,0x59
  40d2e2:	lods   eax,DWORD PTR ds:[esi]
  40d2e3:	inc    esi
  40d2e5:	rol    BYTE PTR [ebp-0x30],1
  40d2e8:	mov    eax,0xe51f35d5
  40d2ed:	and    eax,0xf4d0a3f5
  40d2f2:	fbld   TBYTE PTR [esi+0x38ea9225]
  40d2f8:	idiv   edi
  40d2fa:	aaa    
  40d2fb:	sub    bh,BYTE PTR ds:0x7c40a510
  40d301:	daa    
  40d302:	jp     0x40d2e6
  40d304:	sbb    eax,esp
  40d306:	es inc ebx
  40d308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d309:	lods   eax,DWORD PTR ds:[esi]
  40d30a:	sahf   
  40d30b:	mov    edi,0xf39138ef
  40d310:	cmp    ebp,DWORD PTR [ecx-0x44]
  40d313:	jae    0x40d38d
  40d315:	xor    dh,BYTE PTR [esi+ebp*1-0x27]
  40d319:	jne    0x40d371
  40d31b:	fisttp QWORD PTR [edx-0x57]
  40d31e:	cmp    bl,BYTE PTR [ebp+0x73]
  40d321:	outs   dx,DWORD PTR ds:[esi]
  40d322:	fmul   st(2),st
  40d324:	fwait
  40d325:	mov    bh,BYTE PTR [esi-0x14b05a6b]
  40d32b:	enter  0x8505,0xbf
  40d32f:	push   ecx
  40d330:	push   eax
  40d331:	cmp    al,0xe7
  40d333:	pushf  
  40d334:	cmp    al,0xca
  40d336:	xor    eax,0xb91652ab
  40d33b:	dec    eax
  40d33c:	cmp    DWORD PTR [edi+0x7a],ecx
  40d33f:	xor    DWORD PTR [esp+eax*8],0xda6b881a
  40d346:	mov    esp,0xfd0ee7e7
  40d34b:	jl     0x40d338
  40d34d:	out    dx,eax
  40d34e:	mov    eax,ds:0x82109875
  40d353:	sbb    cl,ch
  40d355:	sti    
  40d356:	and    edi,DWORD PTR [ebp-0x79]
  40d359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d35a:	lea    ecx,[edx-0x53924d3]
  40d360:	xchg   edi,eax
  40d361:	sub    eax,0x98cee2cc
  40d366:	retf   
  40d367:	xor    eax,0xa3c011f2
  40d36c:	fsubr  QWORD PTR [eax]
  40d36e:	dec    ebp
  40d36f:	out    0xc0,eax
  40d371:	dec    eax
  40d372:	cmp    al,BYTE PTR [eax+0x3718436b]
  40d378:	pop    ebx
  40d379:	xchg   ecx,eax
  40d37a:	xchg   BYTE PTR [edx],dh
  40d37c:	jecxz  0x40d37d
  40d37e:	mov    edx,0x353b05e9
  40d383:	daa    
  40d384:	ds clc 
  40d386:	xor    ecx,edx
  40d388:	add    ebp,eax
  40d38a:	add    edi,0x366048bf
  40d390:	in     eax,0xcb
  40d392:	cmp    BYTE PTR [ebx-0x3a],bh
  40d395:	add    DWORD PTR [ebp+0xc],edx
  40d398:	hlt    
  40d399:	sub    eax,0x5edb55a3
  40d39e:	mov    ch,bh
  40d3a0:	lods   eax,DWORD PTR ds:[esi]
  40d3a1:	mov    edi,0x9df65159
  40d3a6:	xor    ch,BYTE PTR [ecx-0x190067bc]
  40d3ac:	inc    edi
  40d3ad:	adc    BYTE PTR [esi+edi*2],0x58
  40d3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b2:	stos   BYTE PTR es:[edi],al
  40d3b3:	xchg   edi,eax
  40d3b4:	xchg   ebp,eax
  40d3b5:	outs   dx,BYTE PTR ds:[esi]
  40d3b6:	sub    cl,cl
  40d3b8:	enter  0x801b,0x7b
  40d3bc:	(bad)  
  40d3bd:	es ins BYTE PTR es:[edi],dx
  40d3bf:	xor    al,0x65
  40d3c1:	lock or eax,0x61cb58b2
  40d3c7:	test   eax,0xde002827
  40d3cc:	ret    0xdd1e
  40d3cf:	hlt    
  40d3d0:	scas   al,BYTE PTR es:[edi]
  40d3d1:	(bad)  
  40d3d2:	sar    ebp,cl
  40d3d4:	repnz mov bl,0x51
  40d3d7:	xor    eax,0xccaee9d3
  40d3dc:	mov    al,ds:0x25839c2e
  40d3e1:	xor    al,0x9d
  40d3e3:	scas   al,BYTE PTR es:[edi]
  40d3e4:	jmp    0x771f0c24
  40d3e9:	push   eax
  40d3ea:	mov    al,ds:0x9ca6afa7
  40d3ef:	xchg   ebx,eax
  40d3f0:	lea    esi,[edx+0x5307609c]
  40d3f6:	fs push ds
  40d3f8:	aam    0xbc
  40d3fa:	pop    ecx
  40d3fb:	sbb    DWORD PTR [ebx+eax*8-0x7e99a54a],edx
  40d402:	mov    edx,0x696d1f32
  40d407:	nop
  40d408:	xor    ecx,edx
  40d40a:	imul   edx,DWORD PTR ds:0xbd9bb3fc,0xd27c9adf
  40d414:	sbb    edx,DWORD PTR [eax+0x3e891cb5]
  40d41a:	mov    dh,0xef
  40d41c:	add    cl,BYTE PTR [ebx+0x33e70762]
  40d422:	stc    
  40d423:	loope  0x40d3af
  40d425:	inc    esi
  40d426:	xchg   ebx,eax
  40d427:	push   edx
  40d428:	loop   0x40d41e
  40d42a:	mov    ebx,0x8e6341e0
  40d42f:	rcl    DWORD PTR [edx+edx*2+0x107bf134],0xd4
  40d437:	or     eax,0x6af960cb
  40d43c:	pop    eax
  40d43d:	aas    
  40d43e:	or     ebp,DWORD PTR [eax+0x76]
  40d441:	iret   
  40d442:	or     ebx,DWORD PTR [eax-0x605211b7]
  40d448:	out    0x6e,al
  40d44a:	dec    ecx
  40d44b:	xchg   edx,eax
  40d44c:	jg     0x40d3ee
  40d44e:	std    
  40d44f:	mov    dh,0xe8
  40d451:	mov    eax,0xc7b4add5
  40d456:	fadd   DWORD PTR [eax+edx*4]
  40d459:	xor    DWORD PTR [edi-0x23],edi
  40d45c:	lods   al,BYTE PTR ds:[esi]
  40d45d:	ss iret 
  40d45f:	(bad)  
  40d460:	mov    eax,0xcc0ca127
  40d465:	adc    al,0xa3
  40d467:	push   ebx
  40d468:	scas   eax,DWORD PTR es:[edi]
  40d469:	and    BYTE PTR [edi],bl
  40d46b:	or     BYTE PTR [ecx-0x543f91a8],bh
  40d471:	cli    
  40d472:	ins    BYTE PTR es:[edi],dx
  40d473:	fstp   st(2)
  40d475:	mov    ah,0xee
  40d477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d478:	push   ss
  40d479:	xor    ch,BYTE PTR [esi]
  40d47b:	mov    fs,esi
  40d47d:	sti    
  40d47e:	lahf   
  40d47f:	out    dx,al
  40d480:	ret    0xcbff
  40d483:	jne    0x40d502
  40d485:	ret    
  40d486:	cmp    al,0x58
  40d488:	out    0x3b,eax
  40d48a:	jecxz  0x40d496
  40d48c:	cmp    al,0x97
  40d48e:	inc    ebx
  40d48f:	push   eax
  40d490:	(bad)  
  40d492:	jmp    0x40d45c
  40d494:	push   ecx
  40d495:	sar    BYTE PTR [edi+0x40],cl
  40d498:	mov    bh,0x58
  40d49a:	mov    ebp,0x2c77bcc9
  40d49f:	repz jbe 0x40d4c9
  40d4a2:	push   ebx
  40d4a3:	nop
  40d4a4:	loopne 0x40d45d
  40d4a6:	push   ss
  40d4a7:	cmp    BYTE PTR [eax],bl
  40d4a9:	mov    DWORD PTR [esi],0x7376e2aa
  40d4af:	xor    eax,0x1e71dfbf
  40d4b4:	repz sti 
  40d4b6:	mov    cl,0xe1
  40d4b8:	or     al,0xb1
  40d4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4bb:	ffreep st(1)
  40d4bd:	popa   
  40d4be:	mov    cl,0xc6
  40d4c0:	add    ebp,0xff74df87
  40d4c6:	xor    bl,BYTE PTR [ebp-0x5da0c61f]
  40d4cc:	cmp    al,0x70
  40d4ce:	xor    ecx,DWORD PTR [ebp+edx*4-0x63]
  40d4d2:	mov    al,ds:0xfa92eb62
  40d4d7:	int3   
  40d4d8:	sahf   
  40d4d9:	stos   DWORD PTR es:[edi],eax
  40d4da:	sar    bl,cl
  40d4dc:	popa   
  40d4dd:	sub    al,BYTE PTR [esi]
  40d4df:	lss    edi,FWORD PTR [edx-0xf]
  40d4e3:	push   eax
  40d4e4:	sub    al,BYTE PTR [eax]
  40d4e6:	std    
  40d4e7:	adc    BYTE PTR [ebx],bh
  40d4e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ea:	pop    ecx
  40d4eb:	xchg   ebp,eax
  40d4ec:	xor    dl,BYTE PTR [ebp+edx*8-0x40]
  40d4f0:	mov    bh,0xb0
  40d4f2:	pop    esi
  40d4f3:	int    0x8d
  40d4f5:	lods   eax,DWORD PTR ds:[esi]
  40d4f6:	mov    ah,0xe4
  40d4f8:	adc    BYTE PTR [ecx+0x76869137],bh
  40d4fe:	mov    bh,bl
  40d500:	outs   dx,DWORD PTR ds:[esi]
  40d501:	add    eax,0xacec3841
  40d506:	pop    ebx
  40d507:	mov    ebp,DWORD PTR [ecx]
  40d509:	inc    BYTE PTR [ecx+0x19d3b86f]
  40d50f:	stc    
  40d510:	pop    esi
  40d511:	xor    eax,0x6cfc215e
  40d516:	pop    ebx
  40d517:	push   ds
  40d518:	mov    bh,BYTE PTR [esi]
  40d51a:	xchg   esp,eax
  40d51b:	mov    dh,0x4f
  40d51d:	mov    al,ds:0xd991c937
  40d522:	popa   
  40d523:	ja     0x40d4b1
  40d525:	andps  xmm5,XMMWORD PTR [edi+0x66]
  40d529:	sbb    al,bh
  40d52b:	lock mov WORD PTR [edi-0x4c],?
  40d52f:	ja     0x40d506
  40d531:	stc    
  40d532:	outs   dx,BYTE PTR ds:[esi]
  40d533:	jge    0x40d5a9
  40d535:	iret   
  40d536:	xor    al,cl
  40d538:	cmp    bl,bh
  40d53a:	xor    DWORD PTR [ebp+0xc],0xff600055
  40d541:	(bad)  
  40d542:	xor    eax,0xec43b6a2
  40d547:	shr    BYTE PTR [edi-0x78],cl
  40d54a:	pushf  
  40d54b:	push   esi
  40d54c:	mov    esi,DWORD PTR [edx-0x2a]
  40d54f:	(bad)  
  40d550:	sbb    eax,0x299bafd7
  40d555:	in     eax,0xb7
  40d557:	dec    ebx
  40d558:	and    bl,BYTE PTR [eax]
  40d55a:	jno    0x40d55b
  40d55c:	sub    al,0x75
  40d55e:	mov    al,0xc4
  40d560:	push   es
  40d561:	leave  
  40d562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d563:	xchg   esp,eax
  40d564:	retf   
  40d565:	adc    bl,cl
  40d567:	push   ss
  40d568:	pop    ss
  40d569:	jle    0x40d5ce
  40d56b:	xor    al,0x3c
  40d56d:	scas   al,BYTE PTR es:[edi]
  40d56e:	in     al,dx
  40d56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d570:	sbb    al,0x95
  40d572:	inc    eax
  40d573:	ins    DWORD PTR es:[edi],dx
  40d574:	dec    ebx
  40d575:	cli    
  40d576:	pop    es
  40d577:	mov    al,ds:0xbaa41800
  40d57c:	data16 mov ah,0x4b
  40d57f:	or     BYTE PTR [ecx+ecx*2+0x37646d96],bh
  40d586:	sbb    BYTE PTR ds:0x254f7dda,ah
  40d58c:	cdq    
  40d58d:	frndint 
  40d58f:	ret    
  40d590:	fs jmp 0x6e83:0xc1eb6443
  40d598:	rcl    bl,cl
  40d59a:	hlt    
  40d59b:	mov    dl,0x4f
  40d59d:	sub    al,0x12
  40d59f:	adc    bl,ch
  40d5a1:	test   eax,0x73a80164
  40d5a6:	and    esi,DWORD PTR [ebx+0x57c10ec0]
  40d5ac:	mov    dh,0x68
  40d5ae:	sub    eax,0x4fddef58
  40d5b3:	push   0x20
  40d5b5:	fcomp  DWORD PTR [esp]
  40d5b8:	xor    eax,0x40ac625f
  40d5bd:	mov    WORD PTR ds:0xf56828d4,?
  40d5c3:	sbb    DWORD PTR [edi-0x750f21b],0x2d83e050
  40d5cd:	call   0x1d50:0x8d123dcf
  40d5d4:	mov    ebx,DWORD PTR ds:0xaaf00fb1
  40d5da:	jle    0x40d616
  40d5dc:	int3   
  40d5dd:	daa    
  40d5de:	retf   
  40d5df:	inc    ebx
  40d5e0:	or     esi,edi
  40d5e2:	test   eax,0xbb506feb
  40d5e7:	pop    ebx
  40d5e8:	xor    eax,0xeb82a6e6
  40d5ed:	or     eax,0xcae60166
  40d5f2:	mov    cl,0x98
  40d5f4:	ret    0xf0d0
  40d5f7:	mov    eax,DWORD PTR [esi-0x73431713]
  40d5fd:	fxch   st(3)
  40d5ff:	stos   BYTE PTR es:[edi],al
  40d600:	mov    ecx,0x3ec648bf
  40d605:	paddd  mm1,mm3
  40d608:	sub    eax,0x51050604
  40d60d:	xchg   ebx,eax
  40d60e:	(bad)  
  40d60f:	push   0x713c90d9
  40d614:	aam    0x44
  40d616:	xor    al,0xf1
  40d618:	(bad)  
  40d619:	mov    esi,0x84920260
  40d61e:	xchg   ebp,eax
  40d61f:	push   es
  40d620:	mov    WORD PTR [edi+0x3673ee98],?
  40d626:	popf   
  40d627:	pop    es
  40d628:	mov    esp,0x4e57afac
  40d62d:	and    al,0x16
  40d62f:	add    DWORD PTR [edx+eiz*1-0x27],esi
  40d633:	ja     0x40d691
  40d635:	pusha  
  40d636:	sahf   
  40d637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d638:	popa   
  40d639:	test   al,0x33
  40d63b:	sub    al,ch
  40d63d:	dec    ecx
  40d63e:	stc    
  40d63f:	dec    ebx
  40d640:	xor    eax,0x64ce8692
  40d645:	and    DWORD PTR [ebx-0xec4330a],0xffffff9e
  40d64c:	mov    ebp,0x413e16a9
  40d651:	jnp    0x40d65a
  40d653:	jae    0x40d618
  40d655:	adc    ebp,DWORD PTR [edx]
  40d657:	xchg   ecx,eax
  40d658:	sbb    DWORD PTR [ecx-0xb],0xffffff95
  40d65c:	fimul  DWORD PTR [ebx]
  40d65e:	icebp  
  40d65f:	mov    ecx,0x3725455d
  40d664:	fsub   QWORD PTR [edi-0xba4902d]
  40d66a:	xchg   esp,eax
  40d66b:	xor    al,0x40
  40d66d:	stos   DWORD PTR es:[edi],eax
  40d66e:	mov    edx,0x6be99342
  40d673:	enter  0xcdad,0x13
  40d677:	(bad)  
  40d678:	retf   0x37b7
  40d67b:	mov    DWORD PTR [ecx-0x6c528785],edi
  40d681:	cmc    
  40d682:	das    
  40d683:	ss mov ecx,0x9550bb75
  40d689:	aas    
  40d68a:	aas    
  40d68b:	xor    DWORD PTR ss:[ebx-0x5f],eax
  40d68f:	push   es
  40d690:	jns    0x40d6f5
  40d692:	inc    esp
  40d693:	inc    ebp
  40d694:	xor    ecx,DWORD PTR [ebx+0x762a0d96]
  40d69a:	and    DWORD PTR [eax+0x252834cc],0x8c51643
  40d6a4:	push   eax
  40d6a5:	mov    eax,0xfa9e31cd
  40d6aa:	cmp    DWORD PTR [esi+0x68],ebx
  40d6ad:	scas   eax,DWORD PTR es:[edi]
  40d6ae:	sub    eax,0x30348d12
  40d6b3:	adc    DWORD PTR [edx],0x4f
  40d6b6:	push   0x67
  40d6b8:	repnz test DWORD PTR [esi+eiz*8-0x7d],edx
  40d6bd:	xor    bh,BYTE PTR [edx+0x1b230290]
  40d6c3:	mov    eax,?
  40d6c5:	imul   ecx,DWORD PTR [ecx-0x5],0x7222b150
  40d6cc:	lea    esi,[eax+0x7e0b69bb]
  40d6d2:	mov    esp,0xbe488093
  40d6d7:	pop    esp
  40d6d8:	lods   eax,DWORD PTR ds:[esi]
  40d6d9:	in     eax,0xe4
  40d6db:	mov    BYTE PTR [ecx],al
  40d6dd:	push   ebp
  40d6de:	jle    0x40d6db
  40d6e0:	pushf  
  40d6e1:	jb     0x40d73e
  40d6e3:	jb     0x40d704
  40d6e5:	adc    DWORD PTR [ebp-0x4210bc78],edx
  40d6eb:	pop    ds
  40d6ec:	jne    0x40d6e9
  40d6ee:	adc    DWORD PTR [eax-0x79],eax
  40d6f1:	pushf  
  40d6f2:	int3   
  40d6f3:	ja     0x40d76f
  40d6f5:	or     eax,0x268ca778
  40d6fa:	inc    ebx
  40d6fb:	gs nop
  40d6fd:	ss sti 
  40d6ff:	jb     0x40d71b
  40d701:	and    al,0x7
  40d703:	adc    eax,0xaacd63cd
  40d708:	sub    DWORD PTR [ebx+0x3f1256f2],eax
  40d70e:	loopne 0x40d740
  40d710:	or     DWORD PTR [ecx+ebx*8+0x5f],ebp
  40d714:	adc    eax,0x61
  40d717:	jecxz  0x40d717
  40d719:	mov    bl,0xdd
  40d71b:	sar    DWORD PTR [edx+0x6b],cl
  40d71e:	mov    ?,WORD PTR [ebp-0x219f1435]
  40d724:	dec    edi
  40d725:	pop    ecx
  40d726:	xchg   edx,eax
  40d727:	inc    esi
  40d728:	dec    ebp
  40d729:	retf   0x73f7
  40d72c:	mov    DWORD PTR [edi],0x2dca1b03
  40d732:	ss (bad) 
  40d734:	jmp    0x2f42:0x3ee98115
  40d73b:	lea    ecx,[edx+0x5dbb7eff]
  40d741:	and    eax,0x5d546644
  40d746:	imul   BYTE PTR [edi-0x38792c08]
  40d74c:	stc    
  40d74d:	sub    eax,0x612e8192
  40d752:	xchg   ebx,eax
  40d753:	std    
  40d754:	pushf  
  40d755:	std    
  40d756:	pop    esp
  40d757:	fst    DWORD PTR [ebx-0x68]
  40d75a:	iret   
  40d75b:	repz sub BYTE PTR cs:[ebp+0x25],dh
  40d760:	mov    dh,0xba
  40d762:	push   ebp
  40d763:	stos   DWORD PTR es:[edi],eax
  40d764:	jge    0x40d7b5
  40d766:	bound  esp,QWORD PTR [edi+eax*4-0x5f2ede23]
  40d76d:	lods   al,BYTE PTR ds:[esi]
  40d76e:	inc    ebp
  40d76f:	mov    eax,fs
  40d771:	jae    0x40d73d
  40d773:	mov    DWORD PTR [edi],ebx
  40d775:	rcl    BYTE PTR [edx-0x37],0x9f
  40d779:	push   edi
  40d77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77b:	cmp    ecx,ecx
  40d77d:	add    ebp,esi
  40d77f:	mov    cl,0xb9
  40d781:	out    0x74,al
  40d783:	ror    DWORD PTR [eax+0x66],1
  40d786:	clc    
  40d787:	xor    BYTE PTR [eax],0x47
  40d78a:	mul    DWORD PTR [ebp+0x51ddf022]
  40d790:	call   0xdae65e6f
  40d795:	mov    esp,0xd4d5243
  40d79a:	inc    esi
  40d79b:	bndldx bnd1,[eax]
  40d79e:	xchg   ebp,eax
  40d79f:	retf   0x8e42
  40d7a2:	es mov bl,0x29
  40d7a5:	stos   DWORD PTR es:[edi],eax
  40d7a6:	scas   eax,DWORD PTR es:[edi]
  40d7a7:	lods   eax,DWORD PTR ds:[esi]
  40d7a8:	mov    ebp,0x41831502
  40d7ad:	mov    WORD PTR [esi+0x79],cs
  40d7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b1:	rcl    BYTE PTR [ecx-0x43],cl
  40d7b4:	into   
  40d7b5:	aaa    
  40d7b6:	ror    bl,cl
  40d7b8:	cld    
  40d7b9:	sti    
  40d7ba:	ja     0x40d81d
  40d7bc:	(bad)  
  40d7bd:	arpl   WORD PTR [edi],bp
  40d7bf:	push   es
  40d7c0:	test   BYTE PTR [ebp+0xb],bl
  40d7c3:	call   0x214c45a8
  40d7c8:	std    
  40d7c9:	xor    eax,0xaf0d82c8
  40d7ce:	aas    
  40d7cf:	sbb    DWORD PTR [edx+0x2e7dc38a],edi
  40d7d5:	int3   
  40d7d6:	jmp    0x40d76f
  40d7d8:	sar    DWORD PTR [ecx-0x7f],0xe3
  40d7dc:	jmp    0x58588fdf
  40d7e1:	jo     0x40d7d7
  40d7e3:	sbb    ebx,edx
  40d7e5:	mov    ebp,0xbf6ca3c4
  40d7ea:	sbb    BYTE PTR [edi+edx*1-0x2fa1570c],ch
  40d7f1:	inc    ebx
  40d7f2:	scas   al,BYTE PTR es:[edi]
  40d7f3:	call   0x3f6ec7dd
  40d7f8:	fmul   st,st(1)
  40d7fa:	cs jmp 0x40d79f
  40d7fd:	xchg   esp,eax
  40d7fe:	xor    BYTE PTR [ebx],ch
  40d800:	ins    DWORD PTR es:[edi],dx
  40d801:	add    DWORD PTR [edi+0x7b],eax
  40d804:	xchg   BYTE PTR [ecx],bl
  40d806:	imul   eax,DWORD PTR [ebp-0xb83b2d6],0x399c1253
  40d810:	in     eax,dx
  40d811:	test   eax,0x9d42b67d
  40d816:	push   ebx
  40d817:	ja     0x40d882
  40d819:	jae    0x40d7c3
  40d81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d81c:	sub    DWORD PTR [eax+0x25b2081f],0xb448ecb2
  40d826:	icebp  
  40d827:	arpl   WORD PTR [ecx],bp
  40d829:	scas   al,BYTE PTR es:[edi]
  40d82a:	mov    bl,BYTE PTR [ebx+eiz*1]
  40d82d:	mov    ebx,edx
  40d82f:	pop    ebx
  40d830:	xor    eax,0x5df1fa73
  40d835:	push   esi
  40d836:	xor    bh,ch
  40d838:	pusha  
  40d839:	sbb    eax,0x2fbf58cc
  40d83e:	call   0x1c01:0xe4ec49ff
  40d845:	js     0x40d887
  40d847:	fisttp WORD PTR [ebp-0x2cfafe59]
  40d84d:	pop    edi
  40d84e:	out    0x8,eax
  40d850:	nop
  40d851:	shl    BYTE PTR [eax+0x761fb11],0x83
  40d858:	jo     0x40d8b9
  40d85a:	add    eax,DWORD PTR [ebp+0x74c2fd6c]
  40d860:	int    0xe5
  40d862:	repz adc bl,bh
  40d865:	pusha  
  40d866:	clc    
  40d867:	(bad)  
  40d868:	(bad)  
  40d869:	push   ebp
  40d86a:	imul   eax,DWORD PTR [edx],0x21
  40d86d:	cwde   
  40d86e:	or     DWORD PTR [edi],esi
  40d870:	loop   0x40d896
  40d872:	lods   eax,DWORD PTR ds:[esi]
  40d873:	out    0xe8,eax
  40d875:	and    al,0x2
  40d877:	mul    eax
  40d879:	retf   
  40d87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d87b:	mov    al,ds:0xd38227b7
  40d880:	add    DWORD PTR [ebx-0x79],edi
  40d883:	mov    eax,ds:0x84530549
  40d888:	xchg   edx,eax
  40d889:	sbb    eax,0x67dd4c8e
  40d88e:	outs   dx,DWORD PTR ds:[esi]
  40d88f:	add    DWORD PTR [ecx*8-0x1645d764],ebx
  40d896:	call   DWORD PTR [ecx*4-0x33fd509d]
  40d89d:	out    0x9,eax
  40d89f:	add    al,0x65
  40d8a1:	xchg   eax,esp
  40d8a3:	pop    ebp
  40d8a4:	addr16 mov cl,0x70
  40d8a7:	in     eax,dx
  40d8a8:	retf   
  40d8a9:	inc    eax
  40d8aa:	push   edx
  40d8ab:	loope  0x40d89a
  40d8ad:	ins    DWORD PTR es:[edi],dx
  40d8ae:	mov    cl,0x74
  40d8b0:	and    al,0x38
  40d8b2:	pop    ebx
  40d8b3:	ins    DWORD PTR es:[edi],dx
  40d8b4:	retf   0x4de8
  40d8b7:	or     eax,0x519c0557
  40d8bc:	push   esp
  40d8bd:	imul   esp,ecx,0x75bf05cf
  40d8c3:	push   0xf62b0cec
  40d8c8:	(bad)  
  40d8c9:	jge    0x40d929
  40d8cb:	and    ah,BYTE PTR ds:0xad02eff2
  40d8d1:	dec    ebx
  40d8d2:	or     dl,cl
  40d8d4:	and    esi,DWORD PTR [edi+0x2a]
  40d8d7:	int3   
  40d8d8:	mov    dh,0x52
  40d8da:	adc    eax,0x98d00c81
  40d8df:	pushf  
  40d8e0:	dec    edx
  40d8e1:	jmp    0x40d950
  40d8e3:	fcom   QWORD PTR [ebx]
  40d8e5:	jae    0x40d86a
  40d8e7:	shl    eax,1
  40d8e9:	ins    BYTE PTR es:[edi],dx
  40d8ea:	and    DWORD PTR [ebp-0x1],edx
  40d8ed:	push   0xffffff90
  40d8ef:	sbb    esi,DWORD PTR [edx+0x145514e]
  40d8f5:	sbb    DWORD PTR [eax+0x77],esi
  40d8f8:	xor    ah,BYTE PTR ds:0x4604a7b4
  40d8fe:	cmp    edi,edx
  40d900:	fiadd  WORD PTR [ebx+0x55831659]
  40d906:	cs in  al,0x5d
  40d909:	les    ebx,FWORD PTR [edx+0x60]
  40d90c:	bound  ebx,QWORD PTR [esi+0x2144431b]
  40d912:	mov    eax,ds:0x8d454c06
  40d917:	and    BYTE PTR [edi+0x4cd97ba3],cl
  40d91d:	mov    dh,0xa8
  40d91f:	or     al,0xf5
  40d921:	es dec edx
  40d923:	test   eax,0x96dc7ca9
  40d928:	lahf   
  40d929:	ret    
  40d92a:	jae    0x40d90f
  40d92c:	in     al,0x6
  40d92e:	retf   
  40d92f:	push   esi
  40d930:	inc    si
  40d932:	mov    es,WORD PTR [eax-0x6b]
  40d935:	inc    eax
  40d936:	dec    edx
  40d937:	jns    0x40d985
  40d939:	mov    ds:0x34b2a48c,al
  40d93e:	cdq    
  40d93f:	sbb    ah,0x7c
  40d942:	(bad)  
  40d943:	jecxz  0x40d9b3
  40d945:	add    al,0x1d
  40d947:	fsub   DWORD PTR [ebx-0x60]
  40d94a:	mov    ebp,0xbc1eb590
  40d94f:	stos   BYTE PTR es:[edi],al
  40d950:	mov    esp,0xdac7c082
  40d955:	ins    BYTE PTR es:[edi],dx
  40d956:	out    dx,al
  40d957:	int    0xf
  40d959:	scas   al,BYTE PTR es:[edi]
  40d95a:	push   ds
  40d95b:	(bad)  
  40d95d:	mov    DWORD PTR [ebp*4-0x8a118f2],esi
  40d964:	test   eax,0x2dcc9b83
  40d969:	jp     0x40d94a
  40d96b:	dec    edx
  40d96c:	jg     0x40d99c
  40d96e:	ins    BYTE PTR es:[edi],dx
  40d96f:	rcr    BYTE PTR [ebx+0x58],cl
  40d972:	add    al,BYTE PTR [edx-0x51]
  40d975:	popf   
  40d976:	arpl   WORD PTR [edx+ebx*8+0x47],dx
  40d97a:	cmp    DWORD PTR [ecx+0x42e4303d],esi
  40d980:	dec    esp
  40d981:	imul   eax,edx,0xffffff97
  40d984:	aad    0xcf
  40d986:	lea    ebp,[ebx]
  40d988:	pop    ebp
  40d989:	gs jns 0x40d981
  40d98c:	out    dx,al
  40d98d:	pop    ebp
  40d98e:	inc    ebx
  40d98f:	add    eax,0x67aaedcd
  40d995:	or     eax,0x99936e2e
  40d99a:	and    al,0x72
  40d99c:	inc    edx
  40d99d:	les    ebp,FWORD PTR [ebx+0x32]
  40d9a0:	enter  0xcd3a,0x77
  40d9a4:	outs   dx,BYTE PTR ds:[esi]
  40d9a5:	in     eax,dx
  40d9a6:	(bad)  
  40d9a7:	sub    ch,BYTE PTR [edi]
  40d9a9:	(bad)  
  40d9aa:	and    edi,DWORD PTR [edi]
  40d9ac:	sub    al,0xd3
  40d9ae:	mov    al,0xc6
  40d9b0:	div    BYTE PTR [esi]
  40d9b2:	mov    al,ds:0x71137cdd
  40d9b7:	jae    0x40d9e6
  40d9b9:	fstp   TBYTE PTR [eax+0x2cd210dc]
  40d9bf:	shl    DWORD PTR [edi-0x7c],1
  40d9c2:	cmp    BYTE PTR [ecx+0x6f],0x60
  40d9c6:	stos   BYTE PTR es:[edi],al
  40d9c7:	push   esp
  40d9c8:	mov    ds:0xb76c8ae5,eax
  40d9cd:	push   ecx
  40d9ce:	and    esp,DWORD PTR [eax]
  40d9d0:	xchg   esi,eax
  40d9d1:	push   0x5fd33457
  40d9d6:	mov    ecx,0xcca7393d
  40d9db:	cmp    BYTE PTR [edx+ebx*4],0x15
  40d9df:	cmp    BYTE PTR [edi+edx*4+0x53536a93],bh
  40d9e6:	rcr    BYTE PTR [ecx+0xa527764],1
  40d9ec:	mov    eax,ds:0x6d0f22af
  40d9f1:	je     0x40da56
  40d9f3:	out    0xc0,al
  40d9f5:	cmp    eax,eax
  40d9f7:	mov    esi,0xfafc4c2c
  40d9fc:	shl    DWORD PTR [eax-0x67eb4c93],0x36
  40da03:	outs   dx,BYTE PTR ds:[esi]
  40da04:	sbb    DWORD PTR [eax],ebx
  40da06:	jns    0x40d995
  40da08:	or     DWORD PTR [esi],ebp
  40da0a:	daa    
  40da0b:	cmp    esp,DWORD PTR [edx+eax*4+0x26]
  40da0f:	scas   al,BYTE PTR es:[edi]
  40da10:	sbb    eax,0x45f88837
  40da15:	fidiv  WORD PTR [esi]
  40da17:	jo     0x40da76
  40da19:	or     ecx,esi
  40da1b:	pop    ss
  40da1c:	test   eax,0xc92bf1e2
  40da21:	call   0x5c6c:0x5a073041
  40da28:	leave  
  40da29:	daa    
  40da2a:	mov    WORD PTR [ebp+0x6641550f],cs
  40da30:	push   0xffffffea
  40da32:	inc    esp
  40da33:	push   eax
  40da34:	cmp    edi,esi
  40da36:	adc    edx,DWORD PTR [edi]
  40da38:	xor    eax,0x855546d3
  40da3d:	jg     0x40da5b
  40da3f:	test   al,0x68
  40da41:	popf   
  40da42:	xor    edx,esi
  40da44:	popf   
  40da45:	adc    BYTE PTR [ebp+esi*1+0x78717d4],cl
  40da4c:	(bad)  
  40da4d:	dec    ebp
  40da4e:	xor    DWORD PTR [ebx],ebx
  40da50:	mov    edx,0xd99e8332
  40da55:	mov    ds,WORD PTR [eax]
  40da57:	xchg   edx,eax
  40da58:	popf   
  40da59:	fucomip st,st(1)
  40da5b:	sub    dl,BYTE PTR [esi-0x6d]
  40da5e:	jb     0x40da69
  40da60:	imul   eax,ecx,0x2a
  40da63:	xor    eax,0xefadb0d1
  40da68:	ins    BYTE PTR es:[edi],dx
  40da69:	loop   0x40d9ed
  40da6b:	loopne 0x40da47
  40da6d:	adc    bh,bh
  40da6f:	push   esp
  40da70:	pop    es
  40da71:	int    0xd5
  40da73:	dec    esp
  40da74:	shl    DWORD PTR [eax-0x6],cl
  40da77:	adc    al,0xe5
  40da79:	xchg   ebx,eax
  40da7a:	enter  0xa44c,0x13
  40da7e:	arpl   WORD PTR [edx+ecx*1+0x6],dx
  40da82:	adc    edx,DWORD PTR ds:0x4288910e
  40da88:	mov    al,0xe9
  40da8a:	push   ds
  40da8b:	inc    edx
  40da8c:	xor    eax,0x35f8d511
  40da91:	fld    QWORD PTR [eax-0x7246a756]
  40da97:	inc    eax
  40da98:	inc    ebx
  40da99:	xor    edi,DWORD PTR [edi]
  40da9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da9c:	xchg   edi,eax
  40da9d:	imul   eax,DWORD PTR ds:0xebf7ad20,0x3ab6e6fa
  40daa7:	call   0x2a36:0xdd4fb4a7
  40daae:	and    ecx,edx
  40dab0:	nop
  40dab1:	push   edx
  40dab2:	js     0x40da74
  40dab4:	inc    edx
  40dab5:	mov    esp,0xabb33073
  40daba:	stc    
  40dabb:	(bad)  
  40dabc:	sub    al,0x59
  40dabe:	or     cl,BYTE PTR [esi+0x305e8dbd]
  40dac4:	or     eax,0x6ff94693
  40dac9:	xor    DWORD PTR [ebx-0x1b9a006b],edi
  40dacf:	outs   dx,BYTE PTR ds:[esi]
  40dad0:	scas   al,BYTE PTR es:[edi]
  40dad1:	push   edx
  40dad2:	cmp    DWORD PTR [ecx-0x7c],ebp
  40dad5:	dec    edx
  40dad6:	mov    WORD PTR ds:[esp+ebp*2+0x7176bf9d],fs
  40dade:	cwde   
  40dadf:	ins    DWORD PTR es:[edi],dx
  40dae0:	push   ebp
  40dae1:	adc    BYTE PTR [edi-0x4e7e0b7e],dh
  40dae7:	adc    ecx,DWORD PTR [esi+0x7182193a]
  40daed:	pop    ebx
  40daee:	rcr    ebp,1
  40daf0:	in     eax,0xd3
  40daf2:	and    eax,0x5e08848c
  40daf7:	icebp  
  40daf8:	cmp    ch,BYTE PTR [ebp-0x296b8ad5]
  40dafe:	sbb    al,0xac
  40db00:	xor    ah,BYTE PTR [eax-0xe]
  40db03:	mov    eax,DWORD PTR [ebx]
  40db05:	mov    bh,0xa1
  40db07:	adc    edi,DWORD PTR [ebx]
  40db09:	xacquire xchg BYTE PTR [edi+0x1dc41e3c],ah
  40db10:	sbb    DWORD PTR [esi+0x2e],0xffffffff
  40db14:	loop   0x40dabc
  40db16:	add    edx,DWORD PTR [eax-0x19f3fba8]
  40db1c:	inc    ecx
  40db1d:	stos   DWORD PTR es:[edi],eax
  40db1e:	cmp    dh,0xcd
  40db21:	rol    ebp,cl
  40db23:	imul   eax,DWORD PTR [eax],0x2c
  40db26:	dec    eax
  40db27:	icebp  
  40db28:	jb     0x40daf5
  40db2a:	and    DWORD PTR [eax-0x26bfa32],edx
  40db30:	inc    eax
  40db31:	jmp    0xf38c7a02
  40db36:	stos   DWORD PTR es:[edi],eax
  40db37:	inc    eax
  40db38:	retf   0xb5cd
  40db3b:	xchg   esi,eax
  40db3c:	mov    dl,0xa0
  40db3e:	push   esp
  40db3f:	dec    esi
  40db40:	dec    esi
  40db41:	dec    edi
  40db42:	cld    
  40db43:	pop    ebp
  40db44:	cdq    
  40db45:	lods   eax,DWORD PTR ds:[esi]
  40db46:	xlat   BYTE PTR ds:[ebx]
  40db47:	popf   
  40db48:	inc    esi
  40db49:	mov    ebp,0x9dbd3a16
  40db4e:	and    bl,ch
  40db50:	stos   BYTE PTR es:[edi],al
  40db51:	sbb    BYTE PTR [ebx],ch
  40db53:	xor    al,0x77
  40db55:	push   ebp
  40db56:	xor    esp,DWORD PTR [edx]
  40db58:	aas    
  40db59:	inc    ebp
  40db5a:	aaa    
  40db5b:	and    al,bl
  40db5d:	mov    ds:0x9fe3f707,eax
  40db62:	pop    esi
  40db63:	jb     0x40db09
  40db65:	jne    0x40dbc8
  40db67:	and    ecx,DWORD PTR [eax]
  40db69:	mov    WORD PTR [ecx-0x2e7ea227],?
  40db6f:	test   eax,0x76b23438
  40db74:	stos   BYTE PTR es:[edi],al
  40db75:	xchg   DWORD PTR [ebx+0x3f],eax
  40db78:	xchg   ecx,eax
  40db79:	fstp   DWORD PTR [esi-0x38572757]
  40db7f:	cwde   
  40db80:	(bad)  
  40db82:	popa   
  40db83:	(bad)  
  40db84:	xchg   esi,eax
  40db85:	mov    dh,0x5b
  40db87:	daa    
  40db88:	adc    esp,DWORD PTR [esi-0x28447294]
  40db8e:	je     0x40db38
  40db90:	and    ebp,esp
  40db92:	cmp    bh,dh
  40db94:	sbb    DWORD PTR [edx-0x33],esp
  40db97:	leave  
  40db98:	push   edi
  40db99:	sbb    DWORD PTR [edi-0x1c1abf25],0x8c75d77a
  40dba3:	imul   edi,DWORD PTR [ebp-0x5c5a8d2b],0x63
  40dbaa:	mov    ebp,DWORD PTR [ecx]
  40dbac:	mov    bl,BYTE PTR [bp+di]
  40dbaf:	(bad)  
  40dbb0:	les    ebp,FWORD PTR [eax]
  40dbb2:	mov    edi,0xc2edffc2
  40dbb7:	ins    DWORD PTR es:[edi],dx
  40dbb8:	pop    esi
  40dbb9:	dec    esp
  40dbba:	jg     0x40dbf6
  40dbbc:	adc    al,0xab
  40dbbe:	bound  ecx,QWORD PTR [esi+0x4e96f7af]
  40dbc4:	aad    0x9a
  40dbc6:	mul    BYTE PTR [edi+ebx*1]
  40dbc9:	cli    
  40dbca:	scas   al,BYTE PTR es:[edi]
  40dbcb:	nop
  40dbcc:	daa    
  40dbcd:	dec    esp
  40dbce:	mov    ebp,0x2c11f59e
  40dbd3:	jecxz  0x40dbcd
  40dbd5:	mov    bh,0x85
  40dbd7:	in     al,0x86
  40dbd9:	dec    ebp
  40dbda:	fiadd  DWORD PTR [ebx-0x35]
  40dbdd:	sbb    BYTE PTR [esp+0x10],cl
  40dbe1:	pushf  
  40dbe2:	call   0xc17d:0x6bfe647c
  40dbe9:	into   
  40dbea:	(bad)  
  40dbeb:	out    0x0,al
  40dbed:	mov    ebx,0x8dbf03cd
  40dbf2:	rol    BYTE PTR [esi-0x14],1
  40dbf5:	lock sub ah,bl
  40dbf8:	(bad)  
  40dbf9:	data16 mov dl,0x96
  40dbfc:	repnz mov esi,DWORD PTR [edi+edi*2]
  40dc00:	xchg   edi,eax
  40dc01:	ds in  al,dx
  40dc03:	sub    BYTE PTR [eax-0x1a],ah
  40dc06:	loopne 0x40dbf0
  40dc08:	pop    ds
  40dc09:	sysret 
  40dc0b:	add    eax,0xffffffb0
  40dc0e:	fistp  DWORD PTR [edx]
  40dc10:	jb     0x40dc4f
  40dc12:	adc    DWORD PTR [esi],esi
  40dc14:	aam    0xdb
  40dc16:	mov    cl,0x2b
  40dc18:	mov    ebp,0xdfe5e0f8
  40dc1d:	test   eax,0xb889c4d1
  40dc22:	push   eax
  40dc23:	f2xm1  
  40dc25:	xchg   esi,eax
  40dc26:	sbb    DWORD PTR [edx-0x3b2dc5c1],edx
  40dc2c:	rcl    DWORD PTR [edi-0x1d],1
  40dc2f:	xchg   esp,eax
  40dc30:	push   ebp
  40dc31:	jns    0x40dc7a
  40dc33:	stc    
  40dc34:	retf   0x4a09
  40dc37:	in     eax,0xa5
  40dc39:	and    DWORD PTR [esi+edi*2],0xffffffff
  40dc3d:	jle    0x40dc01
  40dc3f:	clc    
  40dc40:	mov    edx,0x4c503789
  40dc45:	popa   
  40dc46:	push   ebp
  40dc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc48:	gs jno 0x40dbfd
  40dc4b:	push   0x465285be
  40dc50:	xchg   esp,eax
  40dc51:	stos   DWORD PTR es:[edi],eax
  40dc52:	mov    WORD PTR [esi+0x24],gs
  40dc55:	pop    esp
  40dc56:	inc    ebp
  40dc57:	aaa    
  40dc58:	jno    0x40dcab
  40dc5a:	sub    DWORD PTR [ebx-0x6a],eax
  40dc5d:	xor    BYTE PTR [edx+ebx*8-0x76],0xc3
  40dc62:	pop    ebx
  40dc63:	lahf   
  40dc64:	mov    eax,ds:0x1c9055fd
  40dc69:	sbb    al,0x51
  40dc6b:	dec    esi
  40dc6c:	mov    fs,WORD PTR [eax]
  40dc6e:	mov    edx,DWORD PTR [edi]
  40dc70:	sbb    esp,ecx
  40dc72:	mov    ds:0x682b7d4b,al
  40dc77:	imul   eax,DWORD PTR [ebx-0xd80626],0x1c
  40dc7e:	and    DWORD PTR [eax],eax
  40dc80:	or     DWORD PTR [eax+0x6ebb1e20],edi
  40dc86:	cld    
  40dc87:	jnp    0x40dc60
  40dc89:	or     dl,al
  40dc8b:	xlat   BYTE PTR ds:[ebx]
  40dc8c:	jns    0x40dca5
  40dc8e:	aad    0xe7
  40dc90:	imul   esi,esp,0x69ab844c
  40dc96:	dec    edi
  40dc97:	xor    DWORD PTR [esi-0xb],esi
  40dc9a:	cld    
  40dc9b:	push   edi
  40dc9c:	enter  0x5cd8,0x9c
  40dca0:	mov    ch,0xc0
  40dca2:	call   0xaf61:0x4fa42113
  40dca9:	mov    ebx,DWORD PTR [ebp+0x14]
  40dcac:	mov    ah,0xb6
  40dcae:	js     0x40dd0b
  40dcb0:	and    ah,cl
  40dcb2:	hlt    
  40dcb3:	and    al,0x21
  40dcb5:	mov    edi,DWORD PTR [edi]
  40dcb7:	cmp    eax,0xa85c2fde
  40dcbc:	cwde   
  40dcbd:	arpl   WORD PTR [edi-0x65],di
  40dcc0:	pop    ebx
  40dcc1:	sar    DWORD PTR [edx],1
  40dcc3:	inc    eax
  40dcc4:	cmp    DWORD PTR [ebx],ebx
  40dcc6:	xor    eax,0x8c13adc1
  40dccb:	das    
  40dccc:	add    esp,DWORD PTR [ebx+0x5e]
  40dccf:	or     bl,BYTE PTR [esi]
  40dcd1:	test   eax,0xc9caf06e
  40dcd6:	dec    ebx
  40dcd7:	and    DWORD PTR [ecx-0x25],0x15
  40dcdb:	dec    edx
  40dcdc:	mov    esi,DWORD PTR [edx]
  40dcde:	lods   al,BYTE PTR ds:[esi]
  40dcdf:	pushf  
  40dce0:	sub    DWORD PTR [esp+ebp*2],ebp
  40dce3:	inc    eax
  40dce4:	mov    ds:0xe45d2509,eax
  40dce9:	mov    ebx,0x68ecda6f
  40dcee:	jo     0x40dd38
  40dcf0:	cmp    al,0xb0
  40dcf2:	scas   al,BYTE PTR es:[edi]
  40dcf3:	push   ebp
  40dcf4:	dec    eax
  40dcf5:	loope  0x40dd64
  40dcf7:	hlt    
  40dcf8:	mov    dl,0x45
  40dcfa:	mov    esp,0x1e54dc06
  40dcff:	stos   DWORD PTR es:[edi],eax
  40dd00:	outs   dx,BYTE PTR ds:[esi]
  40dd01:	std    
  40dd02:	mov    esp,0x9d608a15
  40dd07:	in     al,0x4c
  40dd09:	test   esi,eax
  40dd0b:	mov    eax,ds:0x73d8c353
  40dd10:	cli    
  40dd11:	pop    esi
  40dd12:	push   ss
  40dd13:	pop    eax
  40dd14:	push   ds
  40dd15:	xchg   esp,eax
  40dd16:	(bad)  
  40dd17:	repz aad 0xa2
  40dd1a:	sub    eax,0x37aaf41a
  40dd1f:	xor    ecx,DWORD PTR [edx-0x69]
  40dd22:	mov    dh,0xe8
  40dd24:	cmp    BYTE PTR [ecx-0x66],bh
  40dd27:	test   eax,0x9209379a
  40dd2c:	mov    ch,0xbe
  40dd2e:	aad    0x2
  40dd30:	js     0x40dd93
  40dd32:	call   0xf061:0x2bd12805
  40dd39:	push   0xbc9f2779
  40dd3e:	ficomp DWORD PTR [ecx+0x4b]
  40dd41:	shr    BYTE PTR [ebp+edx*4+0x2d],1
  40dd45:	sub    al,0xed
  40dd47:	scas   al,BYTE PTR es:[edi]
  40dd48:	sub    al,0xda
  40dd4a:	lods   eax,DWORD PTR ds:[esi]
  40dd4b:	pusha  
  40dd4c:	cld    
  40dd4d:	xchg   esp,eax
  40dd4e:	mov    eax,0x5a0db4e6
  40dd53:	adc    DWORD PTR [edi],edi
  40dd55:	mov    ds,WORD PTR ds:0xfd8f5abe
  40dd5b:	xchg   ebp,eax
  40dd5c:	adc    al,0x7f
  40dd5e:	xchg   edx,eax
  40dd5f:	jl     0x40dd61
  40dd61:	lock jo 0x40dcf6
  40dd64:	(bad)  
  40dd65:	fucomi st,st(2)
  40dd67:	(bad)  
  40dd68:	in     al,dx
  40dd69:	pop    edi
  40dd6a:	ins    DWORD PTR es:[edi],dx
  40dd6b:	in     al,dx
  40dd6c:	(bad)  
  40dd6d:	ins    BYTE PTR es:[edi],dx
  40dd6e:	push   ds
  40dd6f:	cwde   
  40dd70:	jmp    0x40ddd4
  40dd72:	scas   al,BYTE PTR es:[edi]
  40dd73:	enter  0x44b2,0xf7
  40dd77:	lea    ecx,[ebp-0x53]
  40dd7a:	mov    eax,0x7afdcfc0
  40dd7f:	(bad)  
  40dd80:	mov    ebp,0x2bba2095
  40dd85:	rol    DWORD PTR [ebp-0x60],cl
  40dd88:	dec    eax
  40dd89:	xlat   BYTE PTR ds:[ebx]
  40dd8a:	sti    
  40dd8b:	push   es
  40dd8c:	pop    ebx
  40dd8d:	mov    DWORD PTR [esi+esi*8-0x4ad512c9],ebx
  40dd94:	ret    0xb82e
  40dd97:	faddp  st(0),st
  40dd99:	xchg   ebx,eax
  40dd9a:	fs aam 0xdb
  40dd9d:	loopne 0x40ddcf
  40dd9f:	(bad)  
  40dda0:	mov    edi,0x560b2014
  40dda5:	mov    edx,0x2aeaffd4
  40ddaa:	push   ebp
  40ddab:	mov    ch,0xdc
  40ddad:	(bad)  
  40ddaf:	in     eax,0x77
  40ddb1:	sbb    bl,ch
  40ddb3:	das    
  40ddb4:	mov    al,0xe8
  40ddb6:	and    eax,eax
  40ddb8:	pop    ecx
  40ddb9:	pop    ds
  40ddba:	inc    edx
  40ddbb:	xchg   DWORD PTR ds:0x8b82d7eb,ebx
  40ddc1:	(bad)
  40ddc5:	xchg   ecx,eax
  40ddc6:	ret    0xe8d1
  40ddc9:	pop    esi
  40ddca:	dec    esi
  40ddcb:	mov    ebx,0xe1cbe4ad
  40ddd0:	mov    esp,0xaa8f7b22
  40ddd5:	pop    DWORD PTR [ebp+0x6a]
  40ddd8:	cwd    
  40ddda:	or     al,0xab
  40dddc:	mov    dh,0x9b
  40ddde:	adc    al,0x0
  40dde0:	adc    BYTE PTR [ebx-0x19],ch
  40dde3:	repz leave 
  40dde5:	pusha  
  40dde6:	repz cli 
  40dde8:	pop    esi
  40dde9:	jo     0x40de03
  40ddeb:	out    0x41,al
  40dded:	icebp  
  40ddee:	inc    edx
  40ddef:	or     BYTE PTR [edi*1-0x3aae5c53],bl
  40ddf6:	sbb    ebx,DWORD PTR [ecx+edi*8+0xb9677a5]
  40ddfd:	(bad)  
  40ddfe:	loope  0x40de0c
  40de00:	loope  0x40de35
  40de02:	imul   esi,DWORD PTR [eiz*2-0x54ca9ec],0x7a5d0078
  40de0d:	aas    
  40de0e:	dec    eax
  40de0f:	adc    BYTE PTR [eax-0x2818c5de],dh
  40de15:	jp     0x40ddf0
  40de17:	cmp    ebp,edx
  40de19:	xor    ecx,DWORD PTR [edi]
  40de1b:	outs   dx,BYTE PTR ds:[esi]
  40de1c:	(bad)  
  40de1d:	in     eax,dx
  40de1e:	dec    esp
  40de1f:	imul   BYTE PTR [esi+eax*8]
  40de22:	fmul   QWORD PTR cs:[ecx]
  40de25:	mov    ds:0x809c4d54,al
  40de2a:	adc    esi,DWORD PTR [edi]
  40de2c:	es adc dh,cl
  40de2f:	push   ebp
  40de30:	(bad)  
  40de31:	enter  0x32f8,0x8e
  40de35:	imul   esi,DWORD PTR [ecx-0x73],0xf576c019
  40de3c:	(bad)  
  40de3d:	fdivr  QWORD PTR [ebx-0x1c28a654]
  40de43:	in     al,0xfc
  40de45:	sub    al,0x45
  40de47:	aad    0x76
  40de49:	sub    ecx,DWORD PTR [ecx+0x361bc0d4]
  40de4f:	lea    edi,[edx+0x54]
  40de52:	xchg   edx,eax
  40de53:	arpl   WORD PTR [ecx-0x7652a32f],bp
  40de59:	add    al,0x7b
  40de5b:	adc    eax,0xa374cd32
  40de60:	aas    
  40de61:	push   ds
  40de62:	mov    ecx,0xe6d76e94
  40de67:	wbinvd 
  40de69:	cmp    BYTE PTR [eax],cl
  40de6b:	test   eax,0xe3cdbd89
  40de70:	pop    ecx
  40de71:	add    DWORD PTR [edx-0x30],ebx
  40de74:	fdiv   st,st(3)
  40de76:	int    0x5a
  40de78:	push   esp
  40de79:	pop    ss
  40de7a:	sbb    DWORD PTR [esi+0x4ab1e358],eax
  40de80:	cmp    al,0xcc
  40de82:	jle    0x40de1f
  40de84:	mov    dh,0xb5
  40de86:	js     0x40de60
  40de88:	dec    eax
  40de89:	push   ebx
  40de8a:	mov    dh,0x5b
  40de8c:	jnp    0x40de1e
  40de8e:	(bad)  
  40de8f:	fsubr  QWORD PTR [eax+0x3d]
  40de92:	aas    
  40de93:	gs out dx,eax
  40de95:	popf   
  40de96:	ja     0x40def3
  40de98:	and    DWORD PTR [eax-0x70],0xce671f29
  40de9f:	add    eax,0x2461581d
  40dea4:	int    0x6e
  40dea6:	push   ss
  40dea7:	pusha  
  40dea8:	lea    edx,[esp+ebp*8]
  40deab:	jb     0x40de77
  40dead:	dec    ecx
  40deae:	jmp    0x3e75:0xcc1465e5
  40deb5:	sub    BYTE PTR [ebx-0x64804321],ch
  40debb:	inc    edi
  40debc:	pop    eax
  40debd:	inc    edi
  40debe:	inc    edx
  40debf:	sahf   
  40dec0:	adc    al,0x6
  40dec2:	mov    bl,0x8
  40dec4:	ds pop ebp
  40dec6:	adc    esi,ecx
  40dec8:	je     0x40dec1
  40deca:	xor    al,0x88
  40decc:	std    
  40decd:	sub    al,0x7a
  40decf:	clc    
  40ded0:	pop    ss
  40ded1:	dec    bh
  40ded3:	sbb    edi,0x69
  40ded6:	aas    
  40ded7:	cmp    al,0x8b
  40ded9:	fiadd  DWORD PTR [esi-0x21]
  40dedc:	mov    ah,0x5a
  40dede:	es or  eax,0xe6a1d38e
  40dee4:	nop
  40dee5:	pop    ebp
  40dee6:	shr    esp,0xba
  40dee9:	and    cl,BYTE PTR [eax]
  40deeb:	aaa    
  40deec:	push   ebx
  40deed:	lahf   
  40deee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def0:	dec    esp
  40def1:	dec    DWORD PTR [edi]
  40def3:	out    0x94,al
  40def5:	call   0x16dcc171
  40defa:	push   esi
  40defb:	push   ebx
  40defc:	sub    cl,BYTE PTR [edx+esi*1-0x1f1e1bf2]
  40df03:	cmp    eax,esp
  40df05:	mov    al,0xde
  40df07:	jge    0x40dea0
  40df09:	xor    dh,BYTE PTR [eax-0x3e]
  40df0c:	mov    ds:0x836d8120,al
  40df11:	les    ebx,FWORD PTR [esi-0x1f]
  40df14:	and    eax,0x1d361901
  40df19:	mov    dl,0xf7
  40df1b:	(bad)  
  40df1d:	adc    ebp,DWORD PTR [edx-0x45793c9]
  40df23:	out    0xa1,eax
  40df25:	xchg   ecx,eax
  40df26:	out    dx,eax
  40df27:	pop    ss
  40df28:	sub    eax,0x200ae73e
  40df2d:	push   ebx
  40df2e:	sub    bh,BYTE PTR [ebx+edi*2]
  40df31:	rcl    DWORD PTR [esp+ebx*2-0x5f613237],cl
  40df38:	pop    edx
  40df39:	jl     0x40df6f
  40df3b:	pop    edx
  40df3c:	ror    bl,1
  40df3e:	stc    
  40df3f:	dec    ecx
  40df40:	pop    ss
  40df41:	sub    DWORD PTR [ecx+0x3c],0x38
  40df45:	push   edx
  40df46:	in     eax,0xa1
  40df48:	inc    ebp
  40df49:	mov    eax,0xf35bbdba
  40df4e:	pusha  
  40df4f:	or     edx,eax
  40df51:	xor    BYTE PTR [ebx+0x60926185],ah
  40df57:	sub    eax,0x31d4bd18
  40df5c:	leave  
  40df5d:	or     dh,BYTE PTR [ebx+ebx*1-0x1b87160f]
  40df64:	mov    ebx,0x96ba215e
  40df69:	sti    
  40df6a:	xlat   BYTE PTR ds:[ebx]
  40df6b:	cmp    BYTE PTR [ebx],dl
  40df6d:	mov    ds:0x54cbc91f,eax
  40df72:	mov    edx,0xf2b74e1c
  40df77:	jb     0x40dfef
  40df79:	xchg   ebx,eax
  40df7a:	mov    esp,0x3ac59c1d
  40df7f:	mov    ?,WORD PTR [ecx+0x17]
  40df82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df83:	jmp    0x663a06aa
  40df88:	scas   al,BYTE PTR es:[edi]
  40df89:	push   ebp
  40df8a:	into   
  40df8b:	loope  0x40df7c
  40df8d:	test   BYTE PTR [ebx-0x23],ah
  40df90:	mov    al,ds:0x5646634f
  40df95:	stc    
  40df96:	rol    ebx,0x78
  40df99:	dec    ebx
  40df9a:	xlat   BYTE PTR ds:[ebx]
  40df9b:	mov    ecx,0x3071318b
  40dfa0:	es (bad) 
  40dfa2:	bound  eax,QWORD PTR [edi-0x2ff5577b]
  40dfa8:	jge    0x40dff6
  40dfaa:	pop    esp
  40dfab:	mov    eax,0xe72648fd
  40dfb0:	gs push ecx
  40dfb2:	out    dx,eax
  40dfb3:	jns    0x40dff8
  40dfb5:	addr16 retf 0x21fb
  40dfb9:	mov    eax,0x43b27d18
  40dfbe:	lahf   
  40dfbf:	mov    ds:0x472041f6,al
  40dfc4:	je     0x40df89
  40dfc6:	push   cs
  40dfc7:	and    edx,DWORD PTR [ebx-0x1b]
  40dfca:	cmp    eax,0x97465f0f
  40dfcf:	mov    ebx,0x98cb213b
  40dfd4:	cwde   
  40dfd5:	clc    
  40dfd6:	push   ss
  40dfd7:	jo     0x40df7c
  40dfd9:	gs es hlt 
  40dfdc:	mov    eax,0x23366b0f
  40dfe1:	and    al,0x51
  40dfe3:	(bad)  
  40dfe4:	(bad)  
  40dfe5:	xchg   esp,eax
  40dfe6:	and    BYTE PTR [ebx],ch
  40dfe8:	mov    ds:0x80eafef3,al
  40dfed:	retf   0xa53
  40dff0:	int    0x59
  40dff2:	or     al,0x9c
  40dff4:	jne    0x40dfb5
  40dff6:	sub    BYTE PTR [ebp-0x72],dl
  40dff9:	xchg   edx,eax
  40dffa:	push   0x3
  40dffc:	ret    0xbe4a
  40dfff:	mov    dl,0x1f
  40e001:	cwde   
  40e002:	mov    ebp,0x62f502eb
  40e007:	addr16 mov dh,0x41
  40e00a:	pop    ss
  40e00b:	pusha  
  40e00c:	fild   QWORD PTR [ebx+0x3c]
  40e00f:	or     edx,ebx
  40e011:	dec    eax
  40e012:	xchg   dl,al
  40e014:	adc    esi,DWORD PTR [ecx]
  40e016:	maskmovq mm5,mm4
  40e019:	cdq    
  40e01a:	xchg   ecx,eax
  40e01b:	aas    
  40e01c:	mov    ds:0x6db96a1d,al
  40e021:	sbb    DWORD PTR [eax+0x76349b51],eax
  40e027:	nop
  40e028:	pop    esp
  40e029:	dec    esp
  40e02a:	punpckldq mm4,DWORD PTR [ebx]
  40e02d:	aas    
  40e02e:	dec    edi
  40e02f:	mov    ds:0x739d7db5,al
  40e034:	lods   al,BYTE PTR ds:[esi]
  40e035:	shr    edx,cl
  40e037:	int3   
  40e038:	adc    ebp,DWORD PTR [esi-0x199931e8]
  40e03e:	pop    ds
  40e03f:	inc    edi
  40e040:	push   es
  40e041:	inc    ebx
  40e042:	sbb    ecx,DWORD PTR [ecx-0x30102cb3]
  40e048:	mov    bh,0xf3
  40e04a:	cmp    al,0x53
  40e04c:	test   DWORD PTR ds:0xf4482372,eax
  40e052:	loopne 0x40e06e
  40e054:	test   DWORD PTR [eax+eax*1+0x9],edi
  40e058:	repnz gs dec edx
  40e05c:	in     eax,dx
  40e05d:	push   edi
  40e05e:	rcr    DWORD PTR [esi-0x3a8b1400],0xce
  40e065:	or     eax,0x9bddf146
  40e06a:	pusha  
  40e06b:	iret   
  40e06c:	(bad)  
  40e06e:	cmp    ch,dl
  40e070:	imul   edx,DWORD PTR [eax],0xffffffdd
  40e073:	je     0x40e0d4
  40e075:	xchg   ecx,eax
  40e076:	pop    esi
  40e077:	xchg   ecx,eax
  40e078:	(bad)  
  40e079:	jmp    0x25f739c3
  40e07e:	mov    esp,0x9da366d
  40e083:	cmp    DWORD PTR [edi-0xe],0x9fc8dbb1
  40e08a:	(bad)  
  40e08c:	sub    esp,DWORD PTR [ebp-0x5c7e4b66]
  40e092:	in     al,0x1e
  40e094:	pop    esi
  40e095:	mov    eax,ds:0xf00ff062
  40e09a:	jg     0x40e02e
  40e09c:	sbb    ah,bh
  40e09e:	outs   dx,BYTE PTR ds:[esi]
  40e09f:	sub    bh,BYTE PTR [ebx-0x1]
  40e0a2:	add    eax,0x5e8a98c5
  40e0a7:	fild   WORD PTR [ecx-0x1b]
  40e0aa:	shl    DWORD PTR [ebx-0xb],1
  40e0ad:	lods   al,BYTE PTR ds:[esi]
  40e0ae:	push   edx
  40e0af:	sub    ecx,ecx
  40e0b1:	inc    ebp
  40e0b2:	lock pop edi
  40e0b4:	pop    ss
  40e0b5:	std    
  40e0b6:	mov    esp,0xb1c452fa
  40e0bb:	jns    0x40e0f0
  40e0bd:	mov    cx,dx
  40e0c0:	fnstenv [eax-0x5a]
  40e0c3:	mov    ebp,edx
  40e0c5:	adc    bh,BYTE PTR [bx+0x4a]
  40e0c9:	fwait
  40e0ca:	je     0x40e12b
  40e0cc:	xor    eax,0xf18db097
  40e0d1:	daa    
  40e0d2:	mov    eax,0x576a9fca
  40e0d7:	mov    esp,0x2bbc30a
  40e0dc:	and    eax,0x7a3bdbe7
  40e0e1:	out    dx,eax
  40e0e2:	xchg   edx,eax
  40e0e3:	cmc    
  40e0e4:	inc    esi
  40e0e5:	push   cs
  40e0e6:	inc    edi
  40e0e7:	call   0x23c66566
  40e0ec:	adc    al,0x46
  40e0ee:	mov    DWORD PTR [eax-0x17291320],ecx
  40e0f4:	popf   
  40e0f5:	(bad)  
  40e0f6:	adc    ah,ah
  40e0f8:	sub    ch,BYTE PTR [ebx-0x12]
  40e0fb:	and    BYTE PTR [ecx+0x445a2b4c],0xc4
  40e102:	dec    ebx
  40e103:	(bad)
  40e107:	cs pop es
  40e109:	dec    ebp
  40e10a:	or     DWORD PTR [eax],0xbdedce6c
  40e110:	xchg   ebp,eax
  40e111:	ror    DWORD PTR [ebx+0x42494189],0x95
  40e118:	scas   al,BYTE PTR es:[edi]
  40e119:	adc    BYTE PTR ds:0x69ea0255,ah
  40e11f:	push   edi
  40e120:	push   esp
  40e121:	daa    
  40e122:	jnp    0x40e0e4
  40e124:	inc    edi
  40e125:	mov    bl,0x97
  40e127:	lea    ebp,[edx-0x4774e2f5]
  40e12d:	fs cmp bl,dl
  40e130:	mov    eax,0x20a29af5
  40e135:	int    0x74
  40e137:	int    0xda
  40e139:	sub    esi,eax
  40e13b:	inc    ecx
  40e13c:	inc    edi
  40e13d:	sbb    eax,0x30a3f8c7
  40e142:	cmp    dh,ch
  40e144:	push   0x28
  40e146:	imul   edi,DWORD PTR [esi+0x3c4255b9],0x7d9341cb
  40e150:	fcmovbe st,st(5)
  40e152:	lods   al,BYTE PTR ds:[esi]
  40e153:	addr16 js 0x40e0ff
  40e156:	test   al,0x1a
  40e158:	test   BYTE PTR [ebp-0x2a],dl
  40e15b:	imul   ebx,edx,0x98a60725
  40e161:	jb     0x40e1b1
  40e163:	cmp    eax,0x1b1cfcc8
  40e168:	xor    DWORD PTR [edi],esp
  40e16a:	sub    esp,DWORD PTR [ebp-0x36]
  40e16d:	push   esp
  40e16e:	repz ret 0x9457
  40e172:	(bad)  
  40e174:	adc    dh,ch
  40e176:	pop    ebp
  40e177:	push   esp
  40e178:	inc    edi
  40e179:	int3   
  40e17a:	fcompp 
  40e17c:	cdq    
  40e17d:	int3   
  40e17e:	pop    esp
  40e17f:	ss sahf 
  40e181:	das    
  40e182:	inc    eax
  40e183:	sub    DWORD PTR [esi],ecx
  40e185:	hlt    
  40e186:	push   0xd08f9eec
  40e18b:	jl     0x40e127
  40e18d:	cmp    esi,DWORD PTR [ebp+eax*1+0x3f91a13f]
  40e194:	sti    
  40e195:	push   edi
  40e196:	mov    ebp,DWORD PTR [eax]
  40e198:	cmp    edi,esp
  40e19a:	std    
  40e19b:	fnstsw WORD PTR [edx+0x51]
  40e19e:	inc    ecx
  40e19f:	mul    DWORD PTR [eax-0x74]
  40e1a2:	(bad)  
  40e1a4:	cdq    
  40e1a5:	cli    
  40e1a6:	mov    edx,0x659a15d3
  40e1ab:	jmp    0xb7246e96
  40e1b0:	inc    ebp
  40e1b1:	dec    ebx
  40e1b2:	push   es
  40e1b3:	pusha  
  40e1b4:	(bad)  
  40e1b5:	out    0xfa,al
  40e1b7:	pop    ebp
  40e1b8:	shl    BYTE PTR [ebx-0x7dfa55cc],0x98
  40e1bf:	repnz test al,0x68
  40e1c2:	push   cs
  40e1c3:	je     0x40e179
  40e1c5:	xor    DWORD PTR [eax+edi*4+0x76],ebp
  40e1c9:	clc    
  40e1ca:	test   eax,0x7c2ca86a
  40e1cf:	pop    edi
  40e1d0:	lock idiv BYTE PTR es:[bx+si]
  40e1d5:	xor    bh,dh
  40e1d7:	scas   al,BYTE PTR es:[edi]
  40e1d8:	scas   al,BYTE PTR es:[edi]
  40e1d9:	outs   dx,DWORD PTR ds:[esi]
  40e1da:	and    ebp,ecx
  40e1dc:	sub    al,0xf0
  40e1de:	xchg   DWORD PTR [ecx+0x65da3f],ecx
  40e1e4:	test   eax,0x7d37afa3
  40e1e9:	leave  
  40e1ea:	mov    esi,0x15be758d
  40e1ef:	push   edx
  40e1f0:	push   esp
  40e1f1:	jnp    0x40e1eb
  40e1f3:	mov    ds:0x5b55d350,al
  40e1f8:	xchg   edx,esp
  40e1fa:	inc    ebx
  40e1fb:	pop    esp
  40e1fc:	adc    dh,BYTE PTR [ebx+eax*4+0x5b]
  40e200:	mov    esi,0xed83a160
  40e205:	fst    DWORD PTR [esi+0xa258f1e]
  40e20b:	test   BYTE PTR [ebp+0x1b5ac1ef],al
  40e211:	in     al,0x75
  40e213:	cmp    eax,0xa731c9bc
  40e218:	sub    ah,BYTE PTR [ebx-0x2971a436]
  40e21e:	in     al,dx
  40e21f:	pop    edx
  40e220:	lea    esp,[edi]
  40e222:	cli    
  40e223:	ss cmp esp,ebx
  40e226:	or     al,0x8
  40e228:	in     al,dx
  40e229:	pop    edx
  40e22a:	mov    ds:0x619d4b1d,al
  40e22f:	in     al,dx
  40e230:	sub    DWORD PTR [edi-0x4c88ffca],eax
  40e236:	adc    eax,0x953d080e
  40e23b:	les    ebx,FWORD PTR [ebp+0x75e4bbb6]
  40e241:	bound  ebx,QWORD PTR [edi-0x5a]
  40e244:	cmp    eax,0xf5b5fae2
  40e249:	jmp    0x40e276
  40e24b:	arpl   WORD PTR [eax-0x2],bp
  40e24e:	mov    bl,dh
  40e250:	mov    al,BYTE PTR cs:[esi+0x47063215]
  40e257:	(bad)  
  40e258:	jmp    0x2f9f3b06
  40e25d:	sbb    DWORD PTR [edx-0x1d1cb45f],ebx
  40e263:	inc    ecx
  40e264:	sti    
  40e265:	mov    ds:0x44a15423,eax
  40e26a:	add    DWORD PTR [esi+0xc],eax
  40e26d:	lock mov bl,0x7b
  40e270:	pop    es
  40e271:	push   0x45da2027
  40e276:	das    
  40e277:	add    cl,dl
  40e279:	adc    al,0xd1
  40e27b:	cmp    bl,bl
  40e27d:	call   0x810b8beb
  40e282:	mov    ebp,0xe18c8166
  40e287:	adc    eax,0xf95dc709
  40e28c:	arpl   WORD PTR [eax-0x404e1155],dx
  40e292:	ret    0x2b35
  40e295:	sbb    BYTE PTR [eiz*4+0x5bacc120],bh
  40e29c:	xchg   BYTE PTR [edi+esi*1+0x19],dh
  40e2a0:	loopne 0x40e2a5
  40e2a2:	jb     0x40e270
  40e2a4:	sbb    eax,0x4d654ee7
  40e2a9:	imul   ebp,DWORD PTR [edx-0x64],0x6c
  40e2ad:	xchg   ebp,eax
  40e2ae:	idiv   DWORD PTR [edi]
  40e2b0:	out    0x7d,eax
  40e2b2:	xlat   BYTE PTR ds:[ebx]
  40e2b3:	mov    ds:0xf4b02c26,eax
  40e2b8:	inc    edi
  40e2b9:	sahf   
  40e2ba:	mov    DWORD PTR [edx+eax*2+0x6e],0x8e5b1e24
  40e2c2:	xchg   esp,eax
  40e2c3:	mov    bh,0x8e
  40e2c5:	out    dx,eax
  40e2c6:	dec    eax
  40e2c7:	jno    0x40e277
  40e2c9:	push   0xd4dd494d
  40e2ce:	sti    
  40e2cf:	mov    esp,0xd4d4cfb3
  40e2d4:	int3   
  40e2d5:	loop   0x40e344
  40e2d7:	jbe    0x40e26e
  40e2d9:	scas   eax,DWORD PTR es:[edi]
  40e2da:	and    ecx,ebx
  40e2dc:	cmp    DWORD PTR [edx],0xdfe8808
  40e2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e3:	rcl    BYTE PTR [edx],cl
  40e2e5:	mov    ch,0x83
  40e2e7:	in     al,0xc5
  40e2e9:	adc    DWORD PTR [ecx+0x4b],ecx
  40e2ec:	daa    
  40e2ed:	das    
  40e2ee:	inc    edi
  40e2ef:	fcmovnb st,st(6)
  40e2f1:	push   edi
  40e2f2:	in     eax,dx
  40e2f3:	jns    0x40e286
  40e2f5:	cmp    eax,0x1985503c
  40e2fa:	fwait
  40e2fb:	(bad)  
  40e2fc:	fmul   QWORD PTR [ebx+0x477e421c]
  40e302:	xchg   ebp,eax
  40e303:	dec    cx
  40e305:	fcom   QWORD PTR ds:[ebp+0x287bdb62]
  40e30c:	test   al,0xca
  40e30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30f:	shl    BYTE PTR [ebp-0x282e72a8],1
  40e315:	icebp  
  40e316:	adc    eax,0x9dc57b08
  40e31b:	jbe    0x40e360
  40e31d:	test   ecx,edx
  40e31f:	fscale 
  40e321:	mov    esi,0x78d37647
  40e326:	in     eax,dx
  40e327:	in     al,dx
  40e328:	clc    
  40e329:	jge    0x40e2cd
  40e32b:	stc    
  40e32c:	add    BYTE PTR [ebx+ebp*2+0x68],0x7d
  40e331:	dec    ecx
  40e332:	(bad)  
  40e333:	cmp    bl,dl
  40e335:	ins    DWORD PTR es:[edi],dx
  40e336:	mov    ds:0x5cc0c24b,eax
  40e33b:	out    0xa5,al
  40e33d:	cmp    eax,ebp
  40e33f:	push   cs
  40e340:	pop    edx
  40e341:	es rol cl,1
  40e344:	jmp    0x66e8:0xf0c467a
  40e34b:	mov    ah,0x6c
  40e34d:	mov    ds:0x5a6335e8,eax
  40e352:	xchg   BYTE PTR [edi+edx*2-0x3b854e3d],al
  40e359:	xchg   BYTE PTR es:[edi-0x5b],ch
  40e35d:	dec    edx
  40e35e:	dec    eax
  40e35f:	inc    eax
  40e360:	lds    ebp,FWORD PTR ds:0xb225c7c3
  40e366:	jb     0x40e38d
  40e368:	imul   dh
  40e36a:	shr    BYTE PTR [ebx-0x6801f036],0xd7
  40e371:	clc    
  40e372:	mov    ebx,0xe6182f
  40e377:	mov    ds:0x8edee291,eax
  40e37c:	mov    cl,al
  40e37e:	int    0x9c
  40e380:	jne    0x40e3ad
  40e382:	mov    al,ds:0x6aca4990
  40e387:	sbb    dl,cl
  40e389:	(bad)  
  40e38a:	jmp    0x40e342
  40e38c:	xor    DWORD PTR [edi],ecx
  40e38e:	int    0x55
  40e390:	out    0x9b,eax
  40e392:	adc    al,0x8e
  40e394:	mov    esi,0x493b246e
  40e399:	stos   DWORD PTR es:[edi],eax
  40e39a:	pop    esp
  40e39b:	(bad)  
  40e39d:	jle    0x40e3bf
  40e39f:	les    ebp,FWORD PTR [eax+0x7a8113d9]
  40e3a5:	cmp    BYTE PTR [eax],cl
  40e3a7:	std    
  40e3a8:	sbb    eax,0xffa7e7c5
  40e3ad:	cmc    
  40e3ae:	loope  0x40e333
  40e3b0:	sbb    eax,DWORD PTR [esi+0x3d0b5de9]
  40e3b6:	cwde   
  40e3b7:	mov    ecx,0xaae7084f
  40e3bc:	sbb    DWORD PTR [ebx-0x57c10036],esp
  40e3c2:	cmp    cl,BYTE PTR [eax-0x3a30e49a]
  40e3c8:	jbe    0x40e34e
  40e3ca:	or     BYTE PTR ds:0x110bbfdd,ah
  40e3d0:	mov    BYTE PTR [ecx],bl
  40e3d2:	jns    0x40e40f
  40e3d4:	cmp    al,al
  40e3d6:	pop    ebx
  40e3d7:	add    BYTE PTR [edi-0x49],dh
  40e3da:	loop   0x40e45a
  40e3dc:	mov    al,ds:0xde255960
  40e3e1:	cld    
  40e3e2:	sbb    DWORD PTR [ebx+0x7a],ebx
  40e3e5:	fstp   DWORD PTR [esi-0x4b]
  40e3e8:	or     ch,bh
  40e3ea:	or     al,0x58
  40e3ec:	sbb    DWORD PTR [ebp+0x78f17ad5],ecx
  40e3f2:	addr16 cld 
  40e3f4:	jmp    0x40e3ce
  40e3f6:	xlat   BYTE PTR ds:[ebx]
  40e3f7:	ror    BYTE PTR [ecx+0x2f9a3e81],1
  40e3fd:	pusha  
  40e3fe:	mov    fs,WORD PTR [edi]
  40e400:	dec    ebp
  40e401:	popf   
  40e402:	and    DWORD PTR [edi+ebp*1-0x7c],eax
  40e406:	add    esi,DWORD PTR [ecx+0x6261028d]
  40e40c:	push   ebx
  40e40d:	xchg   ebx,eax
  40e40e:	push   es
  40e40f:	in     al,dx
  40e410:	rol    edx,0x75
  40e413:	repnz clc 
  40e415:	fistp  QWORD PTR [edi+0x27128751]
  40e41b:	xor    bl,BYTE PTR [edi]
  40e41d:	nop
  40e41e:	stc    
  40e41f:	inc    ebx
  40e420:	lods   al,BYTE PTR ds:[esi]
  40e421:	adc    al,0xdc
  40e423:	rol    DWORD PTR [edi-0x43],0xb9
  40e427:	call   0x8e4c:0x39988fa6
  40e42e:	pop    ebp
  40e42f:	(bad)  
  40e430:	fldlg2 
  40e432:	into   
  40e433:	pop    ecx
  40e434:	sub    DWORD PTR [edx-0x60],eax
  40e437:	ja     0x40e400
  40e439:	test   BYTE PTR [edi+ebx*8+0x364c8a63],dl
  40e440:	push   0xffffffd2
  40e442:	mov    bl,0xe9
  40e444:	mov    DWORD PTR [edx+0xd],edi
  40e447:	mov    cl,0xed
  40e449:	inc    esi
  40e44a:	cmp    eax,0xac967f93
  40e44f:	shl    BYTE PTR [edi+0x1e],cl
  40e452:	ret    
  40e453:	mov    dh,0x73
  40e455:	and    BYTE PTR [esi],cl
  40e457:	enter  0xe158,0xd8
  40e45b:	xor    al,0xe
  40e45d:	test   eax,0x60900a3
  40e462:	mov    ah,0xb8
  40e464:	add    esp,DWORD PTR [esi+ebp*1-0x7b]
  40e468:	test   DWORD PTR [ebx-0xa52e251],ebp
  40e46e:	iret   
  40e46f:	and    BYTE PTR [ebx+eiz*2-0x58fb7a0c],bh
  40e476:	in     eax,0xb6
  40e478:	inc    esp
  40e479:	mov    eax,0x7e02b2c8
  40e47e:	push   ss
  40e47f:	mov    ss,WORD PTR [edx+ecx*2-0x599dcca9]
  40e486:	shr    BYTE PTR [ecx+0x3b],1
  40e489:	mov    ch,0xf4
  40e48b:	sub    cl,bh
  40e48d:	ins    DWORD PTR es:[edi],dx
  40e48e:	inc    ebp
  40e48f:	xor    ebx,DWORD PTR [esi-0x11]
  40e492:	push   eax
  40e493:	cmp    BYTE PTR [eax-0x13],0xe0
  40e497:	jge    0x40e499
  40e499:	jb     0x40e4c5
  40e49b:	mov    ebx,0xc920a528
  40e4a0:	push   edx
  40e4a1:	xchg   ecx,eax
  40e4a2:	addr16 push 0x52c93cad
  40e4a8:	fisttp DWORD PTR [eax-0x7c1ad356]
  40e4ae:	jns    0x40e4e6
  40e4b0:	(bad)  
  40e4b1:	shl    BYTE PTR [ebx],1
  40e4b3:	adc    DWORD PTR [ebx+0x780e6fa0],0xffffff80
  40e4ba:	aas    
  40e4bb:	std    
  40e4bc:	cmc    
  40e4bd:	or     DWORD PTR [ebx+eax*4-0x4d],ecx
  40e4c1:	aad    0xd5
  40e4c3:	ins    BYTE PTR es:[edi],dx
  40e4c4:	rcl    BYTE PTR [ebx+0x3f],cl
  40e4c7:	xchg   edi,eax
  40e4c8:	loop   0x40e4de
  40e4ca:	dec    eax
  40e4cb:	ins    BYTE PTR es:[edi],dx
  40e4cc:	ja     0x40e506
  40e4ce:	test   eax,0x94ae7d5d
  40e4d3:	in     eax,dx
  40e4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d5:	inc    ebp
  40e4d6:	xchg   BYTE PTR [esi-0x38],bl
  40e4d9:	pop    ebx
  40e4da:	sbb    eax,0x7453e21e
  40e4df:	mov    ecx,esi
  40e4e1:	push   ss
  40e4e2:	sbb    al,0xf5
  40e4e4:	test   bl,0xb8
  40e4e7:	mul    dh
  40e4e9:	mov    dh,0x9c
  40e4eb:	sub    ch,bl
  40e4ed:	clc    
  40e4ee:	or     bl,cl
  40e4f0:	cmp    BYTE PTR [ebx+0x745ca124],bh
  40e4f6:	lods   eax,DWORD PTR ds:[esi]
  40e4f7:	push   es
  40e4f8:	sub    eax,0x7416ed07
  40e4fd:	fcmove st,st(5)
  40e4ff:	lahf   
  40e500:	push   0x2
  40e502:	scas   eax,DWORD PTR es:[edi]
  40e503:	pop    ds
  40e504:	stos   DWORD PTR es:[edi],eax
  40e505:	sbb    DWORD PTR [eax+0x21],ebp
  40e508:	mov    ds:0x192db082,eax
  40e50d:	scas   eax,DWORD PTR es:[edi]
  40e50e:	xlat   BYTE PTR ds:[ebx]
  40e50f:	mov    ds:0xd53ddfc,eax
  40e514:	std    
  40e515:	mov    cl,0x84
  40e517:	mov    esi,0xae912939
  40e51c:	imul   cx,sp,0xffd0
  40e520:	jne    0x40e549
  40e522:	push   eax
  40e523:	mov    ds:0xbec12709,al
  40e528:	shr    DWORD PTR [ebx+0x43],cl
  40e52b:	sub    BYTE PTR [ecx],0x94
  40e52e:	sub    eax,0x682ac6ce
  40e533:	adc    eax,0x72738080
  40e538:	popf   
  40e539:	push   cs
  40e53a:	xor    ch,BYTE PTR [eax+esi*1+0x487329eb]
  40e541:	adc    eax,0xef408d1a
  40e546:	xor    dh,dl
  40e548:	add    al,0x46
  40e54a:	test   DWORD PTR [esi+ecx*8+0x22c58e24],ecx
  40e551:	pusha  
  40e552:	xor    dl,bl
  40e554:	push   eax
  40e555:	push   ebp
  40e556:	sbb    BYTE PTR [ecx-0x3a],bh
  40e559:	pop    esi
  40e55a:	jle    0x40e597
  40e55c:	nop
  40e55d:	inc    ecx
  40e55e:	out    0xc1,eax
  40e560:	js     0x40e5d6
  40e562:	lods   eax,DWORD PTR ds:[esi]
  40e563:	push   ebp
  40e564:	push   esi
  40e565:	cwde   
  40e566:	push   0xffffffc9
  40e568:	dec    eax
  40e569:	jl     0x40e5c4
  40e56b:	cli    
  40e56c:	clc    
  40e56d:	cmp    eax,0xe914cce
  40e572:	outs   dx,DWORD PTR ds:[esi]
  40e573:	dec    edi
  40e574:	adc    al,BYTE PTR [ebp-0x4fbee292]
  40e57a:	pop    esi
  40e57b:	xchg   edx,eax
  40e57c:	and    BYTE PTR [ecx-0x4f],0x5f
  40e580:	sub    al,0xeb
  40e582:	in     al,0x4f
  40e584:	lock sub edi,DWORD PTR [ecx+ebp*4+0x59]
  40e589:	add    al,0xaf
  40e58b:	mov    ah,0x9d
  40e58d:	xchg   ebp,eax
  40e58e:	adc    BYTE PTR [esi-0x56],cl
  40e591:	push   esp
  40e592:	ds cs inc ebx
  40e595:	adc    eax,0x73b214d7
  40e59a:	mov    ah,bh
  40e59c:	pop    ds
  40e59d:	mov    edi,0x7321f665
  40e5a2:	sub    al,BYTE PTR [eax-0xd21640f]
  40e5a8:	xchg   esp,eax
  40e5a9:	mov    ah,BYTE PTR [ebx+0x1f]
  40e5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5ad:	cdq    
  40e5ae:	lahf   
  40e5af:	in     al,0x5b
  40e5b1:	ins    BYTE PTR es:[edi],dx
  40e5b2:	mov    gs,WORD PTR [edi-0x4b]
  40e5b5:	data16 mov ds:0xf02046a8,al
  40e5bb:	adc    DWORD PTR [edx+ebx*4],edx
  40e5be:	(bad)  
  40e5bf:	xor    esp,ebx
  40e5c1:	jle    0x40e600
  40e5c3:	mov    ds:0x8de1aa3f,eax
  40e5c8:	or     eax,0xb7da49aa
  40e5cd:	jp     0x40e645
  40e5cf:	add    al,0xad
  40e5d1:	jmp    0x40e639
  40e5d3:	mov    ds:0xadec6272,eax
  40e5d8:	rcr    DWORD PTR [esi-0x59],1
  40e5db:	lock mov bl,0x82
  40e5de:	inc    eax
  40e5df:	xor    DWORD PTR [esi+ecx*4-0x27],ecx
  40e5e3:	scas   eax,DWORD PTR es:[edi]
  40e5e4:	xchg   esp,eax
  40e5e5:	enter  0x418,0x9a
  40e5e9:	xchg   ecx,ebx
  40e5eb:	xchg   edi,eax
  40e5ec:	mov    al,0xbb
  40e5ee:	ss inc ebx
  40e5f0:	jl     0x40e658
  40e5f2:	in     al,dx
  40e5f3:	nop
  40e5f4:	sbb    al,0x4a
  40e5f6:	lods   eax,DWORD PTR ds:[esi]
  40e5f7:	lods   eax,DWORD PTR ds:[esi]
  40e5f8:	aas    
  40e5f9:	xor    eax,0x10f0e7ba
  40e5fe:	mov    bl,0x7d
  40e600:	scas   eax,DWORD PTR es:[edi]
  40e601:	or     ebp,0xffffffc0
  40e604:	add    ebp,DWORD PTR [edi*8+0x20811d32]
  40e60b:	fcomp  DWORD PTR [ebx+0x6e3cb679]
  40e611:	jg     0x40e67d
  40e613:	in     eax,dx
  40e614:	xor    BYTE PTR [eax-0x11493944],bl
  40e61a:	and    ah,BYTE PTR [eax+0x4fcf68a6]
  40e620:	fdivr  QWORD PTR [edx-0x2efb1bd1]
  40e626:	mov    edx,0x88bce6c5
  40e62b:	js     0x40e65a
  40e62d:	cmp    BYTE PTR [edx-0x25],ah
  40e630:	cwde   
  40e631:	push   cs
  40e632:	pop    ebx
  40e633:	imul   esp,DWORD PTR [eax+0x73026823],0xffffff98
  40e63a:	push   edx
  40e63b:	sahf   
  40e63c:	fs (bad) 
  40e63e:	(bad)  
  40e63f:	sbb    esi,DWORD PTR [esi-0x3a]
  40e642:	sbb    eax,0x68ec328f
  40e647:	(bad)  
  40e648:	fist   DWORD PTR [ebx]
  40e64a:	imul   eax,DWORD PTR [eax],0x17764eb8
  40e650:	or     eax,DWORD PTR [edx+esi*4+0x9b3894d]
  40e657:	jnp    0x40e667
  40e659:	ins    BYTE PTR es:[edi],dx
  40e65a:	(bad)  
  40e65b:	mov    eax,ds:0x6b0132cb
  40e660:	mov    esi,esi
  40e662:	fwait
  40e663:	test   al,0x7c
  40e665:	or     dl,BYTE PTR [esi+ebp*2]
  40e668:	(bad)  
  40e669:	cli    
  40e66a:	rol    BYTE PTR [ebx-0x6078cbdb],1
  40e670:	pop    esi
  40e671:	adc    BYTE PTR [edi+0x15cc3a9c],bl
  40e677:	xor    dh,BYTE PTR [edi]
  40e679:	mov    bh,0xa8
  40e67b:	mov    ebx,0x817cedcd
  40e680:	in     al,dx
  40e681:	xchg   ecx,eax
  40e682:	sbb    esi,edx
  40e684:	or     al,0xdb
  40e686:	and    al,BYTE PTR [ebp+0x59]
  40e689:	dec    ebp
  40e68a:	cmp    DWORD PTR [ecx-0x24],esp
  40e68d:	cmp    eax,esi
  40e68f:	inc    ecx
  40e690:	jp     0x40e6ac
  40e692:	xor    BYTE PTR [ebp-0x27458d3f],al
  40e698:	xchg   esi,eax
  40e699:	les    edi,FWORD PTR [ebp+0x63bb63c9]
  40e69f:	jecxz  0x40e6b2
  40e6a1:	mov    al,BYTE PTR [eax+0x67]
  40e6a4:	inc    ebp
  40e6a5:	and    eax,0xc68e9744
  40e6aa:	inc    ecx
  40e6ab:	sbb    al,0x9c
  40e6ad:	adc    DWORD PTR [ecx-0x26],esp
  40e6b0:	xchg   edx,eax
  40e6b1:	mov    al,0x18
  40e6b3:	or     eax,0x61070206
  40e6b8:	xor    DWORD PTR [ecx-0x1c],esi
  40e6bb:	hlt    
  40e6bc:	ds scas eax,DWORD PTR es:[edi]
  40e6be:	ins    BYTE PTR es:[edi],dx
  40e6bf:	(bad)  
  40e6c0:	lea    ecx,[eax+0x7c]
  40e6c3:	ret    0x82c8
  40e6c6:	adc    bl,cl
  40e6c8:	stc    
  40e6c9:	push   ecx
  40e6ca:	ss icebp 
  40e6cc:	and    eax,0x7a3b4b72
  40e6d1:	stos   BYTE PTR es:[edi],al
  40e6d2:	icebp  
  40e6d3:	into   
  40e6d4:	inc    edi
  40e6d5:	out    0x18,eax
  40e6d7:	neg    BYTE PTR [edx]
  40e6d9:	mov    al,0xea
  40e6db:	repz cwde 
  40e6dd:	ss test al,0x2e
  40e6e0:	cdq    
  40e6e1:	mov    esp,0xee6d4182
  40e6e6:	jae    0x40e75c
  40e6e8:	add    al,0x9
  40e6ea:	sub    edi,DWORD PTR [esi]
  40e6ec:	pop    ds
  40e6ed:	fsub   QWORD PTR [ecx]
  40e6ef:	and    bh,BYTE PTR [eax+eiz*2+0x5fe6bd5b]
  40e6f6:	sbb    al,0x4e
  40e6f8:	sbb    al,0xbb
  40e6fa:	scas   eax,DWORD PTR es:[edi]
  40e6fb:	jnp    0x40e6c7
  40e6fd:	(bad)  
  40e6fe:	cmp    al,0x65
  40e700:	or     ah,BYTE PTR [esp+esi*1+0x79]
  40e704:	retf   
  40e705:	add    dh,dh
  40e707:	sbb    ebp,DWORD PTR [ecx-0x6fa698c6]
  40e70d:	and    eax,0xc682053a
  40e712:	popa   
  40e713:	outs   dx,DWORD PTR ds:[esi]
  40e714:	add    al,0x55
  40e716:	(bad)  [edi-0xb]
  40e719:	or     DWORD PTR [ecx-0x6c],ebp
  40e71c:	fcom   st(3)
  40e71e:	dec    ebp
  40e71f:	pop    eax
  40e720:	mov    esi,0x59ebcfd4
  40e725:	loope  0x40e71f
  40e727:	push   es
  40e728:	mov    bl,BYTE PTR [ebp-0x48]
  40e72b:	clc    
  40e72c:	call   0x920cc103
  40e731:	inc    edx
  40e732:	int3   
  40e733:	(bad)  
  40e734:	ds pop esp
  40e736:	imul   eax,ecx,0x13
  40e739:	fidivr DWORD PTR [ecx+0x18]
  40e73c:	lds    edi,FWORD PTR [edx+0x2611c98e]
  40e742:	lea    ebx,[edi-0x4d]
  40e745:	enter  0x92e0,0xea
  40e749:	push   0x1c
  40e74b:	fst    QWORD PTR [edx-0x7e]
  40e74e:	loop   0x40e7b2
  40e750:	repz inc esp
  40e752:	(bad)  
  40e753:	jge    0x40e7ad
  40e755:	fldenv [edi-0x7b1fae7d]
  40e75b:	sub    eax,0xc62c39ed
  40e760:	xor    ah,BYTE PTR ds:0x508fe1dd
  40e766:	push   cs
  40e767:	mov    esi,0xf89cc2d2
  40e76c:	dec    esi
  40e76d:	push   ecx
  40e76e:	push   cs
  40e76f:	mov    edi,0xffbcf056
  40e774:	mov    dl,0x45
  40e776:	sbb    DWORD PTR [eax-0x5b],0xffffffb6
  40e77a:	or     BYTE PTR [eax],ch
  40e77c:	stc    
  40e77d:	fst    QWORD PTR [edx]
  40e77f:	jg     0x40e79a
  40e781:	or     eax,0x78de303b
  40e786:	mov    esi,ecx
  40e788:	test   al,0xf9
  40e78a:	and    BYTE PTR [esi],ah
  40e78c:	push   ecx
  40e78d:	or     dl,BYTE PTR [ebx]
  40e78f:	(bad)  
  40e790:	loope  0x40e744
  40e792:	out    0x37,al
  40e794:	inc    edx
  40e795:	dec    ebp
  40e796:	icebp  
  40e797:	cmc    
  40e798:	aam    0xb4
  40e79a:	xor    BYTE PTR [edx+edx*1-0x47],ah
  40e79e:	ds (bad) 
  40e7a0:	xchg   ebx,eax
  40e7a1:	jl     0x40e7c4
  40e7a3:	mov    DWORD PTR [esi],eax
  40e7a5:	aam    0x78
  40e7a7:	in     eax,dx
  40e7a8:	xor    al,BYTE PTR [eax+0x39]
  40e7ab:	sub    al,0x4b
  40e7ad:	dec    esp
  40e7ae:	les    eax,FWORD PTR [esi+0x26]
  40e7b1:	mov    al,ds:0x8b5458b2
  40e7b6:	sbb    al,0x97
  40e7b8:	into   
  40e7b9:	and    ch,BYTE PTR [edi+0x2e]
  40e7bc:	cmp    esi,DWORD PTR [ebx-0x36]
  40e7bf:	jo     0x40e74a
  40e7c1:	loop   0x40e792
  40e7c3:	test   BYTE PTR [ecx-0x11],dl
  40e7c6:	push   DWORD PTR [ecx]
  40e7c8:	das    
  40e7c9:	mov    ebx,0x6b016481
  40e7ce:	mov    esp,0x7fd81477
  40e7d3:	mov    esi,0xe30c9238
  40e7d8:	dec    DWORD PTR [edi-0xa]
  40e7db:	call   0x2e0a9f48
  40e7e0:	add    edx,0xfaebf38a
  40e7e6:	mov    cl,0xc4
  40e7e8:	xor    ecx,eax
  40e7ea:	das    
  40e7eb:	jge    0x40e84f
  40e7ed:	dec    edi
  40e7ee:	sub    DWORD PTR [edi-0x1e86b3f5],eax
  40e7f4:	adc    al,0x76
  40e7f6:	and    bh,BYTE PTR [edx+0xb500e99]
  40e7fc:	adc    eax,0x59a4821c
  40e801:	fldenv [ebp+0x67]
  40e804:	ins    DWORD PTR es:[edi],dx
  40e805:	xchg   BYTE PTR [ebx+0x6a95fcaf],al
  40e80b:	les    eax,FWORD PTR [esi-0x57]
  40e80e:	(bad)  
  40e80f:	out    dx,eax
  40e810:	stos   DWORD PTR es:[edi],eax
  40e811:	leave  
  40e812:	lods   al,BYTE PTR ds:[esi]
  40e813:	mov    bl,0xcb
  40e815:	inc    ebp
  40e816:	pop    esp
  40e817:	fild   DWORD PTR [ecx+0x618dee]
  40e81d:	scas   eax,DWORD PTR es:[edi]
  40e81e:	loop   0x40e7dd
  40e820:	ins    BYTE PTR es:[edi],dx
  40e821:	call   0x1f728496
  40e826:	pop    esi
  40e827:	jno    0x40e89f
  40e829:	cmp    dh,ah
  40e82b:	popf   
  40e82c:	cld    
  40e82d:	and    esp,edx
  40e82f:	(bad)  
  40e830:	fwait
  40e831:	jg     0x40e7f2
  40e833:	jnp    0x40e81c
  40e835:	pop    eax
  40e836:	jmp    0x40e883
  40e838:	push   ebp
  40e839:	inc    edx
  40e83a:	(bad)  
  40e83c:	ret    
  40e83d:	dec    esi
  40e83e:	add    edi,edi
  40e840:	and    dh,BYTE PTR [ebp-0x11338abf]
  40e846:	ins    BYTE PTR es:[edi],dx
  40e847:	pop    ds
  40e848:	adc    DWORD PTR [ecx-0x35],edx
  40e84b:	int3   
  40e84c:	scas   eax,DWORD PTR es:[edi]
  40e84d:	pop    esi
  40e84e:	dec    ebp
  40e84f:	xchg   ecx,eax
  40e850:	sbb    BYTE PTR [edx],0xe3
  40e853:	push   ebp
  40e854:	xchg   BYTE PTR [ecx+0xc7a0ecd],bh
  40e85a:	dec    esi
  40e85b:	pop    ds
  40e85c:	mov    ebp,0x32fc0021
  40e861:	and    BYTE PTR [eax+0x14],dh
  40e864:	mov    esp,DWORD PTR [edi-0x1]
  40e867:	js     0x40e8e5
  40e869:	mov    ebx,0xd6340670
  40e86e:	mov    fs,WORD PTR cs:[esi-0x7c4fcc2d]
  40e875:	add    BYTE PTR [edx-0x24],dl
  40e878:	loope  0x40e872
  40e87a:	jge    0x40e83b
  40e87c:	inc    ebp
  40e87d:	jbe    0x40e83a
  40e87f:	test   BYTE PTR [eax-0x5f1b621],bl
  40e885:	rcl    DWORD PTR [esi-0x70],0xe8
  40e889:	and    BYTE PTR [ecx+0xf53160c],dl
  40e88f:	clc    
  40e890:	test   eax,0x413d54f8
  40e895:	sub    dh,0x21
  40e898:	inc    eax
  40e899:	stos   DWORD PTR es:[edi],eax
  40e89a:	inc    ebp
  40e89b:	in     eax,dx
  40e89c:	mov    ds:0xffd51cfb,al
  40e8a1:	push   esp
  40e8a2:	jle    0x40e911
  40e8a4:	sbb    BYTE PTR [esi-0x75],0xe1
  40e8a8:	mov    ah,0x50
  40e8aa:	in     al,dx
  40e8ab:	fmul   QWORD PTR [ecx]
  40e8ad:	mov    ebp,0x2710de38
  40e8b2:	stos   DWORD PTR es:[edi],eax
  40e8b3:	pusha  
  40e8b4:	test   DWORD PTR [ebp+edi*8+0x191be631],ebp
  40e8bb:	pop    ebp
  40e8bc:	retf   0xe644
  40e8bf:	adc    DWORD PTR [esp+ecx*4-0x7b814175],0xffffffa0
  40e8c7:	dec    eax
  40e8c8:	xor    eax,0xbcf43854
  40e8cd:	jge    0x40e8d4
  40e8cf:	ins    BYTE PTR es:[di],dx
  40e8d1:	mov    ebp,0xe2c89114
  40e8d6:	inc    esp
  40e8d7:	adc    DWORD PTR [eax+0x2e8cb9a1],0x23
  40e8de:	push   0x7bc2352a
  40e8e3:	dec    edi
  40e8e4:	lea    edx,[edx-0x30]
  40e8e7:	adc    al,0xbb
  40e8e9:	pop    edi
  40e8ea:	dec    esp
  40e8eb:	pop    esp
  40e8ec:	test   DWORD PTR [edx*8-0x605f1634],edx
  40e8f3:	push   ss
  40e8f4:	fnstsw WORD PTR [edi-0x71]
  40e8f7:	mov    al,0x66
  40e8f9:	loopne 0x40e8a8
  40e8fb:	mov    edx,0xb78539fd
  40e900:	repnz pop ebp
  40e902:	lds    ebx,FWORD PTR [ecx+0x6a]
  40e905:	jle    0x40e8e1
  40e907:	je     0x40e987
  40e909:	(bad)  
  40e90b:	push   cs
  40e90c:	mov    ebp,0xc9adadf
  40e911:	sbb    ch,BYTE PTR [ebx-0x9]
  40e914:	cmp    ebx,edx
  40e916:	jbe    0x40e8dd
  40e918:	nop
  40e919:	outs   dx,DWORD PTR ds:[esi]
  40e91a:	jb     0x40e960
  40e91c:	int3   
  40e91d:	(bad)  
  40e91e:	(bad)  
  40e91f:	xchg   DWORD PTR [ecx],edx
  40e921:	fadd   DWORD PTR [edi+0x694521d8]
  40e927:	mov    cl,dh
  40e929:	add    BYTE PTR [ecx-0x434f1b],bh
  40e92f:	adc    BYTE PTR [ecx],ch
  40e931:	into   
  40e932:	inc    eax
  40e933:	(bad)  
  40e934:	ret    
  40e935:	mov    fs,WORD PTR [esi+edi*8-0x1bf80cf5]
  40e93c:	test   BYTE PTR [edi],ah
  40e93e:	inc    ecx
  40e93f:	xchg   edi,eax
  40e940:	push   esp
  40e941:	mov    esp,0xb14e59b7
  40e946:	jmp    0x7e37:0x9e5c6ffe
  40e94d:	sub    eax,0xd0290ed0
  40e952:	and    ch,bh
  40e954:	retf   0x7208
  40e957:	and    eax,0xf20e9e7e
  40e95c:	mov    edx,0x7dec6155
  40e961:	adc    edx,DWORD PTR [ebx+0x14]
  40e964:	imul   esi,DWORD PTR [edi],0xffffffd6
  40e967:	lods   eax,DWORD PTR ds:[esi]
  40e968:	jle    0x40e967
  40e96a:	mov    BYTE PTR [edx-0xf571c4a],dl
  40e970:	adc    eax,0x885dc214
  40e975:	mov    ch,0xc1
  40e977:	pop    es
  40e978:	jmp    0x273be564
  40e97d:	sub    DWORD PTR [ebp-0x67],ebp
  40e980:	outs   dx,DWORD PTR ds:[esi]
  40e981:	cmp    edi,DWORD PTR [eax+esi*2+0x3cec97d4]
  40e988:	or     cl,BYTE PTR [edi-0x45acc53e]
  40e98e:	mov    ecx,DWORD PTR [edx+ecx*4-0x44b9e5c2]
  40e995:	dec    esp
  40e996:	push   0x5c
  40e998:	out    dx,al
  40e999:	push   ecx
  40e99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e99b:	adc    ebx,esp
  40e99d:	pop    ebp
  40e99e:	jmp    0x9bb03471
  40e9a3:	ins    DWORD PTR es:[edi],dx
  40e9a4:	cmp    al,BYTE PTR [esi+0x5d]
  40e9a7:	pop    ds
  40e9a8:	bound  ebx,QWORD PTR [eax+0x2b39590a]
  40e9ae:	pop    esp
  40e9af:	stos   BYTE PTR es:[edi],al
  40e9b0:	fdivr  QWORD PTR [eax+0x18]
  40e9b3:	mov    esp,ebx
  40e9b5:	loopne 0x40e9c9
  40e9b7:	pop    ss
  40e9b8:	int    0xf7
  40e9ba:	mov    edx,ecx
  40e9bc:	sub    edi,DWORD PTR [edx]
  40e9be:	test   ch,0xbd
  40e9c1:	push   esp
  40e9c2:	mov    eax,ds:0xe7069812
  40e9c7:	push   es
  40e9c8:	lock inc esi
  40e9ca:	imul   esi,DWORD PTR [esi-0x301cc840],0xffffffbd
  40e9d1:	mov    al,ds:0x58b92032
  40e9d6:	xor    al,0x4c
  40e9d8:	jg     0x40ea24
  40e9da:	popf   
  40e9db:	fs push esi
  40e9dd:	addr16 cs mov dl,0xda
  40e9e1:	dec    esp
  40e9e2:	lea    esi,[edi-0x9]
  40e9e5:	stos   DWORD PTR es:[edi],eax
  40e9e6:	dec    ebx
  40e9e7:	test   BYTE PTR [ebp+0x44b293e8],dl
  40e9ed:	or     BYTE PTR [ecx],ah
  40e9ef:	mov    dh,0xa8
  40e9f1:	mov    eax,0x7496b512
  40e9f6:	(bad)  [edi]
  40e9f8:	aas    
  40e9f9:	push   ds
  40e9fa:	rcl    DWORD PTR [eax+0x36b64df],1
  40ea00:	adc    al,0xb9
  40ea02:	sub    BYTE PTR [edx-0x1cb25cef],ch
  40ea08:	jecxz  0x40ea23
  40ea0a:	test   BYTE PTR [edi+0x59ac4883],dl
  40ea10:	jmp    0x6d1b:0x7a41a09e
  40ea17:	ins    BYTE PTR es:[edi],dx
  40ea18:	add    esp,DWORD PTR [ebx]
  40ea1a:	and    DWORD PTR [ebx-0x13],ebp
  40ea1d:	in     eax,dx
  40ea1e:	lock enter 0x59da,0xca
  40ea23:	mov    bh,0x70
  40ea25:	repz das 
  40ea27:	aam    0x9a
  40ea29:	leave  
  40ea2a:	scas   al,BYTE PTR es:[edi]
  40ea2b:	push   esp
  40ea2c:	fsubr  st,st(4)
  40ea2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea2f:	call   0xecfda520
  40ea34:	test   eax,0x1a254e1a
  40ea39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea3a:	jo     0x40e9f1
  40ea3c:	cmp    edx,DWORD PTR [edi+0x45ad36e3]
  40ea42:	inc    edi
  40ea43:	sub    eax,0x460232ae
  40ea48:	push   es
  40ea49:	ins    BYTE PTR es:[edi],dx
  40ea4a:	adc    edx,ecx
  40ea4c:	jecxz  0x40eaa2
  40ea4e:	xor    ebp,DWORD PTR [ecx-0x3eb01702]
  40ea54:	and    eax,0xf83b7c89
  40ea59:	pop    ecx
  40ea5a:	push   ss
  40ea5b:	jbe    0x40eaa9
  40ea5d:	mov    dh,0x33
  40ea5f:	pop    esp
  40ea60:	sub    eax,0x4e5803c8
  40ea65:	aad    0x38
  40ea67:	mov    bl,0x87
  40ea69:	in     al,dx
  40ea6a:	loopne 0x40ea52
  40ea6c:	adc    BYTE PTR [edx+0x10b6761e],bl
  40ea72:	in     eax,0xd5
  40ea74:	loop   0x40ea8a
  40ea76:	inc    edx
  40ea77:	or     eax,DWORD PTR [edi]
  40ea79:	jl     0x40ea51
  40ea7b:	lea    esp,[ebx+esi*4]
  40ea7e:	call   0xfae4:0x78907c31
  40ea85:	stos   DWORD PTR es:[di],eax
  40ea87:	add    esi,DWORD PTR [edx-0x79d82b5a]
  40ea8d:	stc    
  40ea8e:	jnp    0x40ea5c
  40ea90:	pop    ds
  40ea91:	cmp    eax,0xffffffd1
  40ea94:	dec    ebp
  40ea95:	rcl    BYTE PTR [esi-0x24],0xe0
  40ea99:	div    DWORD PTR [edx-0x5c]
  40ea9c:	mov    DWORD PTR [ecx+0xa53b413],esp
  40eaa2:	fistp  QWORD PTR [ebp-0x6c]
  40eaa5:	sar    BYTE PTR [ebp-0x6c],0x5f
  40eaa9:	cmp    DWORD PTR [ecx+0x234fd2ba],ecx
  40eaaf:	stos   DWORD PTR es:[edi],eax
  40eab0:	fwait
  40eab1:	imul   BYTE PTR [edx]
  40eab3:	jmp    DWORD PTR [ecx-0x57]
  40eab6:	pop    ss
  40eab7:	xchg   ecx,eax
  40eab8:	fisttp QWORD PTR [edi+0x1e5dbf28]
  40eabe:	mov    ch,BYTE PTR [ecx]
  40eac0:	retf   0x9ff8
  40eac3:	shr    DWORD PTR [edx],0x2e
  40eac6:	jns    0x40ea90
  40eac8:	mov    bh,0x2c
  40eaca:	bnd jge 0x40ea94
  40eacd:	pop    edi
  40eace:	dec    esp
  40ead0:	loope  0x40eac4
  40ead2:	xchg   ebp,eax
  40ead3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead4:	cmp    dh,BYTE PTR [ebx+0x1]
  40ead7:	pushf  
  40ead8:	and    al,0x38
  40eada:	dec    edx
  40eadb:	stc    
  40eadc:	rcl    cl,cl
  40eade:	jb     0x40eab6
  40eae0:	add    edx,esi
  40eae2:	mov    DWORD PTR [ebp+eax*1+0x36],eax
  40eae6:	and    bl,dl
  40eae8:	in     al,dx
  40eae9:	les    ebx,FWORD PTR [ebx-0x6a]
  40eaec:	ficomp DWORD PTR [esi]
  40eaee:	add    BYTE PTR [ecx-0x19],bl
  40eaf1:	inc    ebx
  40eaf2:	push   ebp
  40eaf3:	sbb    BYTE PTR [ecx+0x3c0b450e],al
  40eaf9:	mov    ds:0x22a021ef,eax
  40eafe:	lea    esi,[ebx+0x667855ef]
  40eb04:	mov    bl,0x16
  40eb06:	mov    ecx,ss
  40eb08:	jmp    0x599:0x1abc79ea
  40eb0f:	aaa    
  40eb10:	retf   0xba17
  40eb13:	imul   ebp,DWORD PTR [ebx-0x46],0x8b724077
  40eb1a:	stos   BYTE PTR es:[edi],al
  40eb1b:	enter  0xfa86,0xef
  40eb1f:	xchg   edi,eax
  40eb20:	add    al,0x77
  40eb22:	jmp    0x40eb05
  40eb24:	fisttp WORD PTR [ebx]
  40eb26:	imul   esp,ecx,0x3f
  40eb29:	(bad)  
  40eb2a:	mov    ebx,0x49961014
  40eb2f:	in     eax,dx
  40eb30:	push   0xa9f9ebf9
  40eb35:	outs   dx,BYTE PTR es:[esi]
  40eb37:	xor    al,0x88
  40eb39:	sldt   WORD PTR [ebx+0x0]
  40eb3d:	int3   
  40eb3e:	cli    
  40eb3f:	call   0x24df:0x8e46da02
  40eb46:	ins    BYTE PTR es:[edi],dx
  40eb47:	jae    0x40eaf9
  40eb49:	jp     0x40eb2f
  40eb4b:	push   esp
  40eb4c:	fwait
  40eb4d:	dec    ebp
  40eb4e:	inc    DWORD PTR [ecx+ebp*1]
  40eb51:	pop    esi
  40eb52:	sbb    eax,0x954ec36d
  40eb57:	adc    al,0x4b
  40eb59:	cwde   
  40eb5a:	inc    ebx
  40eb5b:	std    
  40eb5c:	lds    ebx,FWORD PTR [ecx]
  40eb5e:	xchg   ecx,edx
  40eb60:	xor    al,0x14
  40eb62:	or     al,0x9e
  40eb64:	jnp    0x40eb90
  40eb66:	jne    0x40eb20
  40eb68:	adc    edi,edx
  40eb6a:	mov    ah,0x1d
  40eb6c:	lahf   
  40eb6d:	mov    ebx,0xffedf84
  40eb72:	jl     0x40eb26
  40eb74:	jne    0x40eb31
  40eb76:	stos   DWORD PTR es:[edi],eax
  40eb77:	out    0xc6,eax
  40eb79:	inc    esi
  40eb7a:	jg     0x40eb18
  40eb7c:	sub    cl,al
  40eb7e:	loope  0x40eba0
  40eb80:	(bad)  
  40eb81:	fwait
  40eb82:	outs   dx,BYTE PTR ds:[esi]
  40eb83:	jle    0x40ebd0
  40eb85:	dec    ecx
  40eb86:	fimul  WORD PTR [eax]
  40eb88:	outs   dx,DWORD PTR ds:[esi]
  40eb89:	ret    
  40eb8a:	sbb    eax,0x480c8977
  40eb8f:	mov    dh,0x84
  40eb91:	fst    QWORD PTR [esi-0x7c8d586c]
  40eb97:	pop    ecx
  40eb98:	mov    dh,0x64
  40eb9a:	inc    ebp
  40eb9b:	or     ebx,DWORD PTR [esi-0x3]
  40eb9e:	dec    esp
  40eb9f:	push   eax
  40eba0:	aad    0xc1
  40eba2:	push   esi
  40eba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eba5:	xor    dl,0xea
  40eba8:	repnz fbld TBYTE PTR [edx+0x5bd415fc]
  40ebaf:	rcl    edi,cl
  40ebb1:	inc    edi
  40ebb2:	mov    ebx,0xfd41ab41
  40ebb7:	sahf   
  40ebb8:	or     al,0xaf
  40ebba:	xor    al,0xe
  40ebbc:	inc    ebx
  40ebbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbe:	dec    eax
  40ebbf:	xlat   BYTE PTR ds:[ebx]
  40ebc0:	xchg   edi,eax
  40ebc1:	dec    eax
  40ebc2:	sbb    BYTE PTR [ebx-0x19b75b9a],al
  40ebc8:	or     al,0xf7
  40ebca:	stos   DWORD PTR es:[edi],eax
  40ebcb:	jo     0x40eb91
  40ebcd:	das    
  40ebce:	retf   
  40ebcf:	mov    ebp,0xb7b50643
  40ebd4:	or     edx,0xa33a88f6
  40ebda:	sar    BYTE PTR [esi+0x3f],0x3d
  40ebde:	neg    BYTE PTR [esi]
  40ebe0:	xchg   DWORD PTR [ebp+0x73],ecx
  40ebe3:	pop    eax
  40ebe4:	pop    eax
  40ebe5:	fcom   QWORD PTR [ebp+0x2fb0018b]
  40ebeb:	add    cl,BYTE PTR [ecx-0x34]
  40ebee:	loope  0x40ec4b
  40ebf0:	ja     0x40ec37
  40ebf2:	lods   eax,DWORD PTR ds:[esi]
  40ebf3:	and    eax,0x3b86ca00
  40ebf8:	mov    esi,ecx
  40ebfa:	aas    
  40ebfb:	iret   
  40ebfc:	clc    
  40ebfd:	or     DWORD PTR [ebx],esi
  40ebff:	aam    0x89
  40ec01:	jno    0x40ebdd
  40ec03:	xor    al,0xbd
  40ec05:	pop    esp
  40ec06:	jmp    0x8ec7:0x253584fd
  40ec0d:	lock push ebx
  40ec0f:	fs (bad) 
  40ec12:	fldcw  WORD PTR [esi]
  40ec14:	dec    eax
  40ec15:	add    esi,edx
  40ec17:	mov    bh,0xdb
  40ec19:	push   ss
  40ec1a:	push   0xcb4d9898
  40ec1f:	outs   dx,DWORD PTR ds:[esi]
  40ec20:	das    
  40ec21:	xchg   ebx,ebx
  40ec23:	(bad)  
  40ec24:	jmp    FWORD PTR [ebp+0x6f5deb59]
  40ec2a:	fs sub eax,0xbd371803
  40ec30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec31:	test   al,0x9e
  40ec33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec34:	stos   DWORD PTR es:[edi],eax
  40ec35:	mov    DWORD PTR [esi+0x2fb8e81e],eax
  40ec3b:	xor    edx,DWORD PTR [ebp-0x7436a8e9]
  40ec41:	pop    eax
  40ec42:	xchg   ebx,eax
  40ec43:	lods   al,BYTE PTR ds:[esi]
  40ec44:	iret   
  40ec45:	das    
  40ec46:	repnz inc esi
  40ec48:	inc    edx
  40ec49:	push   ebx
  40ec4a:	mov    gs,WORD PTR [ecx-0x2b10ddbe]
  40ec50:	mov    esi,0xf3605eaf
  40ec55:	dec    esi
  40ec56:	mov    al,0x6c
  40ec58:	fistp  WORD PTR ss:[ebx]
  40ec5b:	mov    dl,0x99
  40ec5d:	push   0x17
  40ec5f:	xchg   esp,eax
  40ec60:	int3   
  40ec61:	adc    esp,DWORD PTR [ebx+0x41cd3bf6]
  40ec67:	cdq    
  40ec68:	or     ah,BYTE PTR [eax+0x73]
  40ec6b:	jbe    0x40ebf4
  40ec6d:	test   al,0x74
  40ec6f:	inc    ebx
  40ec70:	int3   
  40ec71:	fwait
  40ec72:	add    eax,0x14f9dc87
  40ec77:	xor    edi,esi
  40ec79:	cmp    BYTE PTR [esi+0x74ccdb97],ah
  40ec7f:	(bad)  
  40ec80:	jns    0x40ec81
  40ec82:	lea    ebp,[eiz*8-0x13cb8dd8]
  40ec89:	jns    0x40ecdc
  40ec8b:	pop    edx
  40ec8c:	jno    0x40ec92
  40ec8e:	xchg   DWORD PTR [edx],edi
  40ec90:	cs sbb edi,esi
  40ec93:	(bad)  
  40ec94:	pop    ds
  40ec95:	fwait
  40ec96:	jb     0x40ecd2
  40ec98:	int3   
  40ec99:	pop    ebx
  40ec9a:	xchg   ecx,eax
  40ec9b:	stos   BYTE PTR es:[edi],al
  40ec9c:	push   ebp
  40ec9d:	inc    ecx
  40ec9e:	sbb    edx,DWORD PTR [edi-0x26]
  40eca1:	or     BYTE PTR [edx+eax*4-0x65],bl
  40eca5:	and    bl,BYTE PTR ds:0x4c5b0f35
  40ecab:	(bad)  
  40ecac:	push   ss
  40ecad:	push   0x448ea06a
  40ecb2:	daa    
  40ecb3:	and    BYTE PTR [edx],0x8c
  40ecb6:	inc    edi
  40ecb7:	mov    edi,0xa3579bac
  40ecbc:	imul   edi,DWORD PTR ds:0xd30744aa,0x9f54fc21
  40ecc6:	mov    eax,0xf181d81e
  40eccb:	add    DWORD PTR [edi-0x542c21a7],ebp
  40ecd1:	icebp  
  40ecd2:	add    al,0x77
  40ecd4:	add    al,BYTE PTR [ebx]
  40ecd6:	lock out 0x55,eax
  40ecd9:	in     eax,dx
  40ecda:	rol    cl,0x5b
  40ecdd:	jecxz  0x40ed1f
  40ecdf:	dec    ebp
  40ece0:	in     al,0xca
  40ece2:	jnp    0x40ed32
  40ece4:	push   edx
  40ece5:	inc    ecx
  40ece6:	mov    DWORD PTR [ebx],eax
  40ece8:	dec    esi
  40ece9:	mov    bl,0xe6
  40eceb:	push   ebx
  40ecec:	push   edx
  40eced:	pop    ebp
  40ecee:	out    0xc9,eax
  40ecf0:	cld    
  40ecf1:	jmp    0x40ece4
  40ecf3:	jbe    0x40ec88
  40ecf5:	out    0x4f,eax
  40ecf7:	xchg   ecx,eax
  40ecf8:	arpl   WORD PTR [ecx+0x7499e0e1],ax
  40ecfe:	mov    esi,0xa7d6d178
  40ed04:	sbb    ebp,edx
  40ed06:	sbb    eax,0x6e1f9d3
  40ed0b:	retf   
  40ed0c:	fucom  st(0)
  40ed0e:	and    esp,DWORD PTR [eax]
  40ed10:	push   ebp
  40ed11:	inc    ecx
  40ed12:	dec    eax
  40ed13:	addr16 inc ecx
  40ed15:	xor    BYTE PTR [eax-0x58f132cc],dh
  40ed1b:	push   0x6b
  40ed1d:	cmp    eax,0xedf930bf
  40ed22:	dec    esp
  40ed23:	inc    eax
  40ed24:	shl    BYTE PTR [eax+eax*4],0x4b
  40ed28:	test   BYTE PTR [eax+0x9553308],dh
  40ed2e:	rol    BYTE PTR [esi+0x6fca1a9],0xf
  40ed35:	sub    al,BYTE PTR [edi-0x2c2a7811]
  40ed3b:	retf   0xdd0a
  40ed3e:	push   edx
  40ed3f:	lds    eax,FWORD PTR [eax]
  40ed41:	push   0xdd900870
  40ed46:	shl    BYTE PTR [esi-0x2d53f93],1
  40ed4c:	jge    0x40ed07
  40ed4e:	jg     0x40ed90
  40ed50:	jle    0x40eda8
  40ed52:	sti    
  40ed53:	sub    BYTE PTR [esi+0x6243d781],ah
  40ed59:	addr16 aaa 
  40ed5b:	jae    0x40ecfc
  40ed5d:	test   ebp,edi
  40ed5f:	or     esi,DWORD PTR ds:0x7a5b2add
  40ed65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed66:	jns    0x40ed8f
  40ed68:	push   edi
  40ed69:	adc    BYTE PTR [eax+edx*4-0x6b87e12],al
  40ed70:	retf   0xc11a
  40ed73:	dec    edx
  40ed74:	mov    ch,0xf0
  40ed76:	cs loope 0x40ed4c
  40ed79:	mov    ecx,0x39e51a55
  40ed7e:	xchg   BYTE PTR [eax],ah
  40ed80:	mov    ebx,es
  40ed82:	jno    0x40ed83
  40ed84:	xchg   ecx,eax
  40ed85:	cmp    ebp,DWORD PTR [edi]
  40ed87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed88:	leave  
  40ed89:	or     ebx,DWORD PTR [edi+edx*1]
  40ed8c:	push   esi
  40ed8d:	or     edi,DWORD PTR ds:0xb7c1c9cc
  40ed93:	leave  
  40ed94:	cld    
  40ed95:	cmp    al,0x35
  40ed97:	xor    al,0x44
  40ed99:	cmp    eax,0xcb1958c7
  40ed9e:	xchg   esi,eax
  40ed9f:	mov    al,0x38
  40eda1:	add    ebp,ebx
  40eda3:	aam    0x21
  40eda5:	(bad)  
  40eda6:	pop    ecx
  40eda7:	enter  0x3672,0xc8
  40edab:	div    eax
  40edad:	shr    DWORD PTR [edx+0x27327a15],0xc3
  40edb4:	jg     0x40ed41
  40edb6:	das    
  40edb7:	mov    dl,0xa0
  40edb9:	adc    dh,0x62
  40edbc:	icebp  
  40edbd:	inc    esp
  40edbe:	xchg   edx,eax
  40edbf:	out    0x84,eax
  40edc1:	in     eax,0x2d
  40edc3:	scas   eax,DWORD PTR es:[edi]
  40edc4:	adc    esi,ebp
  40edc6:	mov    bl,0xc7
  40edc8:	stc    
  40edc9:	daa    
  40edca:	inc    edx
  40edcb:	push   ebx
  40edcc:	inc    esp
  40edcd:	and    eax,0x71b20391
  40edd2:	loope  0x40ed87
  40edd4:	and    ebx,DWORD PTR [edi+0x734181e0]
  40edda:	cmp    al,0x82
  40eddc:	std    
  40eddd:	(bad)  
  40edde:	pop    esi
  40eddf:	fdiv   QWORD PTR [esi]
  40ede1:	(bad)  
  40ede2:	out    dx,eax
  40ede3:	jne    0x40ee06
  40ede5:	push   es
  40ede6:	or     al,0x74
  40ede8:	xor    DWORD PTR [ecx+0x6b],eax
  40edeb:	sbb    al,0xb2
  40eded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edee:	mov    ecx,0xbc594d51
  40edf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf4:	or     ah,BYTE PTR [edx-0x48]
  40edf7:	stc    
  40edf8:	sub    ebp,ebx
  40edfa:	or     cl,BYTE PTR [esi+edi*4-0x18651c2e]
  40ee01:	int3   
  40ee02:	into   
  40ee03:	call   0x56ab2ef4
  40ee08:	leave  
  40ee09:	das    
  40ee0a:	cmp    dl,BYTE PTR [esi+0x52086016]
  40ee10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee11:	mov    eax,ebp
  40ee13:	mov    al,ds:0x60a1e4a6
  40ee18:	sti    
  40ee19:	dec    ebx
  40ee1a:	scas   al,BYTE PTR es:[edi]
  40ee1b:	enter  0x9d13,0xfa
  40ee1f:	adc    eax,0x602dab3e
  40ee24:	mov    ecx,0xa70c2cbe
  40ee29:	hlt    
  40ee2a:	mov    DWORD PTR ds:0x8574c75e,0xa1c96aca
  40ee34:	dec    esp
  40ee35:	pop    ebp
  40ee36:	jae    0x40ee9b
  40ee38:	lock dec esi
  40ee3a:	inc    eax
  40ee3b:	mov    eax,ds:0xfc12b575
  40ee40:	jecxz  0x40edfa
  40ee42:	into   
  40ee43:	sbb    dl,BYTE PTR [esi+0xfed061]
  40ee49:	loop   0x40ee9b
  40ee4b:	call   FWORD PTR [ecx]
  40ee4d:	jbe    0x40ee0d
  40ee4f:	add    ebx,eax
  40ee51:	mov    ah,0x38
  40ee53:	adc    eax,0xb836c83e
  40ee58:	pop    ebx
  40ee59:	retf   
  40ee5a:	mov    esp,0xca0687c7
  40ee5f:	inc    esi
  40ee60:	sbb    DWORD PTR [edx+0x7088475d],0x73e91aee
  40ee6a:	(bad)  
  40ee6b:	std    
  40ee6c:	push   ss
  40ee6d:	xor    BYTE PTR [esi],bl
  40ee6f:	inc    ecx
  40ee70:	pushf  
  40ee71:	cmp    DWORD PTR [ebx],ebx
  40ee73:	jno    0x40ee25
  40ee75:	mov    ecx,0x6be0618b
  40ee7a:	in     al,0x3b
  40ee7c:	scas   eax,DWORD PTR es:[edi]
  40ee7d:	jae    0x40eefa
  40ee7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee80:	push   edi
  40ee81:	jge    0x40eed8
  40ee83:	mov    ch,al
  40ee85:	icebp  
  40ee86:	jb     0x40ee89
  40ee88:	fcmovnbe st,st(3)
  40ee8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee8b:	ins    BYTE PTR es:[edi],dx
  40ee8c:	adc    bl,dh
  40ee8e:	lahf   
  40ee8f:	push   edx
  40ee90:	repnz dec ebp
  40ee92:	add    BYTE PTR [esi],ch
  40ee94:	into   
  40ee95:	lods   eax,DWORD PTR ds:[esi]
  40ee96:	fldcw  WORD PTR [ecx-0x49]
  40ee99:	enter  0x9987,0xe
  40ee9d:	dec    ebx
  40ee9e:	sub    esp,DWORD PTR [ecx-0x7]
  40eea1:	out    0xdd,al
  40eea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea4:	pop    eax
  40eea5:	bound  eax,QWORD PTR [ebx+0x14]
  40eea8:	shl    ebp,cl
  40eeaa:	hlt    
  40eeab:	out    dx,al
  40eeac:	inc    ecx
  40eead:	jb     0x40ee5c
  40eeaf:	jnp    0x40ee3a
  40eeb1:	in     eax,0xdd
  40eeb3:	push   ebx
  40eeb4:	out    0x98,eax
  40eeb6:	pop    ebp
  40eeb7:	pushf  
  40eeb8:	adc    ecx,DWORD PTR [eax+0x5a11d728]
  40eebe:	mov    edi,0x7f42ed2f
  40eec3:	cmp    al,BYTE PTR [ecx+0xa0fb6df]
  40eec9:	rol    BYTE PTR [esi+0x4ba9c2a6],1
  40eecf:	stc    
  40eed0:	inc    esp
  40eed1:	mov    ebx,edx
  40eed3:	cmp    eax,0x4fb5046c
  40eed8:	mov    eax,0x5a5cc26b
  40eedd:	jle    0x40eee5
  40eedf:	into   
  40eee0:	icebp  
  40eee1:	pop    ss
  40eee2:	fs (bad) 
  40eee4:	cld    
  40eee5:	jnp    0x40ef06
  40eee7:	sar    DWORD PTR [esi-0x2186e7c9],0xad
  40eeee:	stos   DWORD PTR es:[edi],eax
  40eeef:	jo     0x40ef1c
  40eef1:	lock call 0x15c1e95e
  40eef7:	jns    0x40ef53
  40eef9:	out    0xa2,eax
  40eefb:	in     eax,0xa7
  40eefd:	(bad)  
  40eefe:	enter  0xecd0,0xb7
  40ef02:	xchg   ebx,eax
  40ef03:	fdivr  DWORD PTR [eax+0x3b]
  40ef06:	mov    cl,0xb
  40ef08:	dec    esi
  40ef09:	push   esi
  40ef0a:	popf   
  40ef0b:	scas   al,BYTE PTR es:[edi]
  40ef0c:	cmc    
  40ef0d:	push   0xfffffff6
  40ef0f:	push   ebp
  40ef10:	div    al
  40ef12:	enter  0xfe19,0xa3
  40ef16:	lods   eax,DWORD PTR ds:[esi]
  40ef17:	xchg   esp,eax
  40ef18:	jo     0x40ef1c
  40ef1a:	xor    eax,0x59e43bfe
  40ef1f:	pop    edi
  40ef20:	push   edx
  40ef21:	mov    esp,0xaf5a19fe
  40ef26:	cmp    DWORD PTR [edx-0x3c],ebx
  40ef29:	mov    bl,0xdf
  40ef2b:	jae    0x40ef1e
  40ef2d:	adc    edi,DWORD PTR [ebx]
  40ef2f:	sub    al,0xd4
  40ef31:	xchg   ebp,eax
  40ef32:	sbb    edx,DWORD PTR [edi+0x61]
  40ef35:	ins    DWORD PTR es:[edi],dx
  40ef36:	sub    al,0x4b
  40ef38:	jne    0x40ef65
  40ef3a:	and    al,0xec
  40ef3c:	cmp    al,bl
  40ef3e:	pop    es
  40ef3f:	add    DWORD PTR [edx+0x320aa123],esp
  40ef45:	mov    ebp,0xb7b238aa
  40ef4a:	mov    ds:0x1af39b41,al
  40ef4f:	or     DWORD PTR [edi],esp
  40ef51:	lods   eax,DWORD PTR ds:[esi]
  40ef52:	bound  edi,QWORD PTR [eax]
  40ef54:	dec    ebx
  40ef55:	or     dh,BYTE PTR [ecx-0x524fc59b]
  40ef5b:	push   cs
  40ef5c:	pop    eax
  40ef5d:	xor    eax,edx
  40ef5f:	(bad)  
  40ef60:	fstp   DWORD PTR [esi]
  40ef62:	test   BYTE PTR [edi],bh
  40ef64:	add    bl,BYTE PTR [ebx+0x13]
  40ef67:	push   esi
  40ef68:	xchg   esp,eax
  40ef69:	ins    DWORD PTR es:[edi],dx
  40ef6a:	rol    edx,1
  40ef6c:	jnp    0x40ef6f
  40ef6e:	iret   
  40ef6f:	ds adc eax,0x701f7371
  40ef75:	dec    ebp
  40ef76:	pop    ebx
  40ef77:	pushf  
  40ef78:	fiadd  WORD PTR ds:0xc2bc8882
  40ef7e:	push   ds
  40ef7f:	push   es
  40ef80:	ret    0x6a43
  40ef83:	dec    esi
  40ef84:	dec    esp
  40ef85:	mov    DWORD PTR [edi],edi
  40ef87:	jle    0x40efa0
  40ef89:	sub    DWORD PTR [esp+ebp*8+0xf],0x96ae0141
  40ef91:	jb     0x40ef66
  40ef93:	sbb    ebp,0xd2a11665
  40ef99:	jmp    0xa67565d9
  40ef9e:	or     eax,DWORD PTR [ecx]
  40efa0:	xchg   BYTE PTR [ebx-0x680c3973],al
  40efa6:	popa   
  40efa7:	sub    esp,DWORD PTR [edi+0x6d]
  40efaa:	and    edx,DWORD PTR [ebp+0x5d]
  40efad:	lods   al,BYTE PTR ds:[esi]
  40efae:	and    dl,BYTE PTR [edi+0x4d359e4a]
  40efb4:	(bad)  
  40efb5:	ins    DWORD PTR es:[edi],dx
  40efb6:	rol    DWORD PTR [esp+eax*4+0x2d],0x71
  40efbb:	and    esi,eax
  40efbd:	dec    esi
  40efbe:	pop    ecx
  40efbf:	into   
  40efc0:	sub    al,0xfb
  40efc2:	cmp    DWORD PTR [edi+0x7e],edx
  40efc5:	inc    BYTE PTR [ebx-0x1ea59003]
  40efcb:	ret    0x7d93
  40efce:	inc    esi
  40efcf:	iret   
  40efd0:	mov    ah,0xc3
  40efd2:	stos   BYTE PTR es:[edi],al
  40efd3:	out    0xaf,al
  40efd5:	sub    BYTE PTR ds:0xbf4918a6,ch
  40efdb:	popa   
  40efdc:	or     DWORD PTR [edi+edx*8],edi
  40efdf:	xlat   BYTE PTR ds:[ebx]
  40efe0:	cdq    
  40efe1:	jnp    0x40efe5
  40efe3:	mov    ds:0x2936c49c,al
  40efe8:	mov    BYTE PTR [edi],ch
  40efea:	adc    al,0x28
  40efec:	inc    esp
  40efed:	mov    ebx,esp
  40efef:	cmp    al,0xfc
  40eff1:	jp     0x40efd0
  40eff3:	test   BYTE PTR [edx-0x683c20e6],ch
  40eff9:	xchg   ebp,eax
  40effa:	cmp    eax,0x27094b87
  40efff:	in     al,dx
  40f000:	and    esi,DWORD PTR [edi-0x28cb421a]
  40f006:	ins    BYTE PTR es:[edi],dx
  40f007:	call   0x75f857c9
  40f00c:	mov    bh,0x6d
  40f00e:	daa    
  40f00f:	pop    ss
  40f010:	sub    al,0x2c
  40f012:	dec    edx
  40f013:	pushf  
  40f014:	out    0x9c,eax
  40f016:	adc    dl,dl
  40f018:	test   BYTE PTR [ebp+0x3a730a48],0xf9
  40f01f:	and    ebp,edi
  40f021:	mov    bh,0xfe
  40f023:	pop    ebx
  40f024:	push   es
  40f025:	add    esp,eax
  40f027:	test   al,0x3f
  40f029:	or     eax,0xf944c66a
  40f02e:	jl     0x40efcb
  40f030:	xor    eax,0x7c72ea00
  40f035:	jne    0x40f065
  40f037:	mov    eax,ds:0x5c77f6b4
  40f03c:	jp     0x40f056
  40f03e:	mov    ah,0x8f
  40f040:	ss sbb bl,0x6a
  40f044:	push   cs
  40f045:	cmp    BYTE PTR [ebx-0x34a9cd3d],0x16
  40f04c:	sbb    BYTE PTR [ebp+0x4b67548e],bh
  40f052:	loop   0x40f0a3
  40f054:	clc    
  40f055:	in     al,dx
  40f056:	cmp    ebx,DWORD PTR gs:[ecx]
  40f059:	add    eax,eax
  40f05b:	ja     0x40f021
  40f05d:	inc    eax
  40f05e:	xor    BYTE PTR ds:[ecx+ebp*2+0x67],cl
  40f063:	xor    ebp,0x3ee9c4a2
  40f069:	pop    ds
  40f06a:	mov    ecx,0x3dfddec8
  40f06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f070:	in     eax,dx
  40f071:	sahf   
  40f072:	jne    0x40f0c5
  40f074:	(bad)  
  40f075:	cli    
  40f076:	jnp    0x40f04a
  40f078:	call   0x7451:0xaf84b2ef
  40f07f:	jg     0x40f0d0
  40f081:	into   
  40f082:	rol    BYTE PTR [ebx],cl
  40f084:	out    0x28,eax
  40f086:	sub    BYTE PTR [ebx],dl
  40f088:	(bad)  
  40f089:	mov    al,0xe2
  40f08b:	sti    
  40f08c:	add    dh,ch
  40f08e:	jge    0x40f0a3
  40f090:	inc    esp
  40f091:	xchg   ebp,eax
  40f092:	push   ebp
  40f093:	adc    eax,0xf600eeaf
  40f098:	mov    DWORD PTR [ebp+0x3dde77f5],ebp
  40f09e:	mov    al,0xf7
  40f0a0:	repz push esp
  40f0a2:	(bad)  
  40f0a3:	cdq    
  40f0a4:	jmp    0x1aae5397
  40f0a9:	ror    DWORD PTR [eax-0x9],1
  40f0ac:	scas   eax,DWORD PTR es:[edi]
  40f0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ae:	adc    eax,DWORD PTR [ebp+0x2b8936cc]
  40f0b4:	mov    dh,0x73
  40f0b6:	and    al,BYTE PTR [ecx]
  40f0b8:	outs   dx,BYTE PTR ds:[esi]
  40f0b9:	fisubr WORD PTR [edi+0x1e]
  40f0bc:	jp     0x40f0c2
  40f0be:	mov    eax,0xf34e0daa
  40f0c3:	(bad)  
  40f0c4:	pusha  
  40f0c5:	and    BYTE PTR [edi-0x37],ch
  40f0c8:	minps  xmm4,XMMWORD PTR [eax-0xf7ef4a8]
  40f0cf:	daa    
  40f0d0:	xchg   ecx,eax
  40f0d1:	jbe    0x40f0dc
  40f0d3:	iret   
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	or     DWORD PTR [ecx-0x71],esp
  40f0d8:	mov    BYTE PTR [eax],ah
  40f0da:	add    ecx,eax
  40f0dc:	pop    ebp
  40f0dd:	in     al,0x2d
  40f0df:	mov    BYTE PTR [ebx-0x1f4ede5f],cl
  40f0e5:	pop    edx
  40f0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e7:	push   0x296b4009
  40f0ec:	sub    eax,0xf26e434b
  40f0f1:	stc    
  40f0f2:	cmp    DWORD PTR [ecx+0x17],ecx
  40f0f5:	mov    al,ds:0x2d73d69a
  40f0fa:	xchg   esi,eax
  40f0fb:	dec    edx
  40f0fc:	outs   dx,BYTE PTR ds:[esi]
  40f0fd:	mov    bl,0xa2
  40f0ff:	mov    ch,0x20
  40f101:	pop    ds
  40f102:	adc    esi,DWORD PTR [edi+0x7f]
  40f105:	(bad)  
  40f106:	jb     0x40f0b7
  40f108:	push   ecx
  40f109:	imul   edi,DWORD PTR [esi+ebx*4+0x5e2577c],0xffffffb4
  40f111:	mov    ch,ch
  40f113:	mov    dl,0xb4
  40f115:	mov    cl,0x56
  40f117:	rcl    esp,0x83
  40f11a:	cdq    
  40f11b:	icebp  
  40f11c:	jno    0x40f155
  40f11e:	and    ecx,edx
  40f120:	lahf   
  40f121:	jmp    0x9910be0d
  40f126:	or     ah,bl
  40f128:	outs   dx,DWORD PTR ds:[esi]
  40f129:	int3   
  40f12a:	repnz mov ds:0xfaaed373,al
  40f130:	fucom  st(4)
  40f132:	or     al,0xf1
  40f134:	xor    al,0x19
  40f136:	out    0x39,al
  40f138:	and    BYTE PTR [ebx-0xe],ch
  40f13b:	xor    BYTE PTR [eax+eax*2-0x98994a1],cl
  40f142:	adc    esi,eax
  40f144:	jecxz  0x40f0df
  40f146:	repnz push cs
  40f148:	inc    ecx
  40f149:	ficomp DWORD PTR [ebx+0x1f5771b6]
  40f14f:	adc    BYTE PTR [ecx+0x788b0252],al
  40f155:	add    eax,0x3e0487ab
  40f15a:	pop    esp
  40f15b:	adc    esp,edx
  40f15d:	sti    
  40f15e:	dec    edx
  40f15f:	ins    DWORD PTR es:[edi],dx
  40f160:	xchg   DWORD PTR [eiz*8-0x499c72ea],esi
  40f167:	aad    0x73
  40f169:	lds    ebx,FWORD PTR [eax+ebx*2+0x28]
  40f16d:	push   esi
  40f16e:	(bad)  
  40f16f:	aam    0x8a
  40f171:	dec    eax
  40f172:	push   0x2ba6a842
  40f177:	idiv   al
  40f179:	fidivr WORD PTR [edi-0x78]
  40f17c:	xor    eax,0xa680aad9
  40f181:	sub    eax,0x2a6742ad
  40f186:	(bad)  
  40f187:	adc    eax,0x3dc31936
  40f18c:	xchg   esi,eax
  40f18d:	les    esi,FWORD PTR [edx+0x2daf511a]
  40f193:	rcr    bh,0x3c
  40f196:	ficomp DWORD PTR [ebx+0x60]
  40f199:	sub    eax,0xad8dac02
  40f19e:	fcmovu st,st(1)
  40f1a0:	and    eax,0xba945c60
  40f1a5:	test   al,0x85
  40f1a7:	cli    
  40f1a8:	cs pop edi
  40f1aa:	fwait
  40f1ab:	pop    ecx
  40f1ac:	xchg   esi,eax
  40f1ad:	pop    esi
  40f1ae:	iret   
  40f1af:	les    eax,FWORD PTR [ecx+0x4d]
  40f1b2:	je     0x40f14e
  40f1b4:	retf   
  40f1b5:	xchg   ecx,eax
  40f1b6:	mov    ss,WORD PTR [esi-0x67]
  40f1b9:	xchg   ecx,eax
  40f1ba:	scas   eax,DWORD PTR es:[edi]
  40f1bb:	(bad)  
  40f1bc:	ins    DWORD PTR es:[edi],dx
  40f1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1be:	stc    
  40f1bf:	pop    ebx
  40f1c0:	jmp    0x40f218
  40f1c2:	push   ecx
  40f1c3:	in     al,dx
  40f1c4:	mov    ds:0x332617aa,al
  40f1c9:	sbb    BYTE PTR ds:0x558cf662,ah
  40f1cf:	repz sar DWORD PTR ds:0xa7effad5,cl
  40f1d6:	cmp    BYTE PTR [eax],bh
  40f1d8:	clc    
  40f1d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1da:	data16 jno 0x40f19a
  40f1dd:	inc    ecx
  40f1de:	int3   
  40f1df:	mov    ecx,0x439f087b
  40f1e4:	ins    BYTE PTR es:[edi],dx
  40f1e5:	(bad)  
  40f1e6:	mov    esi,0xf42951aa
  40f1eb:	sub    BYTE PTR [esi],ch
  40f1ed:	cmp    BYTE PTR [ebx-0x2861b041],cl
  40f1f3:	cmp    dh,BYTE PTR [edi+0x32cf9a9d]
  40f1f9:	push   ebp
  40f1fa:	clc    
  40f1fb:	xor    ecx,ebp
  40f1fd:	and    cl,al
  40f1ff:	add    DWORD PTR [edi],edi
  40f201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f202:	test   BYTE PTR [esi-0x7d],cl
  40f205:	loopne 0x40f27c
  40f207:	fwait
  40f208:	and    al,0x34
  40f20a:	clc    
  40f20b:	loope  0x40f266
  40f20d:	lods   eax,DWORD PTR ds:[esi]
  40f20e:	fld    TBYTE PTR [eax-0x2e]
  40f211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f212:	jp     0x40f212
  40f214:	dec    edi
  40f215:	fs out dx,al
  40f217:	cmc    
  40f218:	cmp    ebx,DWORD PTR [ebp-0x4a]
  40f21b:	xchg   esi,eax
  40f21c:	not    DWORD PTR [esp+ecx*2]
  40f21f:	jae    0x40f253
  40f221:	icebp  
  40f222:	stc    
  40f223:	call   0x91f3e8f7
  40f228:	and    BYTE PTR [eax+0x672ad393],dh
  40f22e:	cmovle ebx,ebp
  40f231:	inc    ebp
  40f232:	adc    ah,BYTE PTR [ebx]
  40f234:	xor    DWORD PTR gs:[ebp+0x79798f30],ebx
  40f23b:	stos   BYTE PTR es:[edi],al
  40f23c:	push   ebx
  40f23d:	cmp    DWORD PTR [edi],edx
  40f23f:	stos   DWORD PTR es:[edi],eax
  40f240:	dec    eax
  40f241:	and    cl,BYTE PTR [esi-0x78]
  40f244:	mov    bl,0xf3
  40f246:	std    
  40f247:	dec    ebx
  40f248:	add    al,0x50
  40f24a:	add    DWORD PTR [ebx+edi*2+0x2bcdcea2],eax
  40f251:	add    ecx,ecx
  40f253:	dec    DWORD PTR [esi]
  40f255:	push   edx
  40f256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f257:	test   DWORD PTR [esi+0x6dae962f],ebp
  40f25d:	inc    ecx
  40f25e:	and    al,0xc6
  40f260:	xchg   ebx,eax
  40f261:	xchg   ebp,eax
  40f262:	ins    DWORD PTR es:[edi],dx
  40f263:	clc    
  40f264:	jo     0x40f1e7
  40f266:	xchg   ebp,eax
  40f267:	xchg   DWORD PTR [ebx+0x678a9eea],esp
  40f26d:	xor    dh,BYTE PTR [ecx+eiz*4+0x5702c2f2]
  40f274:	fadd   DWORD PTR [eax-0x37036447]
  40f27a:	xchg   ebx,eax
  40f27b:	int    0x7f
  40f27d:	and    DWORD PTR [edi],edx
  40f27f:	out    0xe,al
  40f281:	jmp    0xab258c6d
  40f286:	test   BYTE PTR [edi-0x42],ah
  40f289:	cmp    eax,0xbc35a894
  40f28e:	adc    BYTE PTR [ebx+edx*8+0x9],0xd
  40f293:	fxch   st(7)
  40f295:	mov    ch,0x82
  40f297:	adc    edx,0xc
  40f29a:	sbb    bh,BYTE PTR ds:0xbb1a9e58
  40f2a0:	lods   eax,DWORD PTR ds:[esi]
  40f2a1:	iret   
  40f2a2:	mov    al,0xf9
  40f2a4:	add    DWORD PTR [edx],esp
  40f2a6:	aaa    
  40f2a7:	jecxz  0x40f326
  40f2a9:	fadd   st(2),st
  40f2ab:	rcl    BYTE PTR [eax],1
  40f2ad:	lock sbb BYTE PTR es:[edx],bh
  40f2b1:	or     esi,esp
  40f2b3:	daa    
  40f2b4:	jbe    0x40f2b8
  40f2b6:	fcomp  DWORD PTR [edx]
  40f2b8:	mov    al,0xc
  40f2ba:	or     al,0xed
  40f2bc:	cmp    DWORD PTR [edx+0x18],edx
  40f2bf:	push   edi
  40f2c0:	in     eax,dx
  40f2c1:	mov    dl,0xff
  40f2c3:	push   cs
  40f2c4:	imul   esp,DWORD PTR gs:[eax-0x64dd1553],0xffffff98
  40f2cc:	inc    esi
  40f2cd:	stc    
  40f2ce:	scas   al,BYTE PTR es:[edi]
  40f2cf:	ja     0x40f29b
  40f2d1:	shr    esp,1
  40f2d3:	aad    0x8
  40f2d5:	ficom  WORD PTR [ebp+0x52]
  40f2d8:	jmp    0x91826f10
  40f2dd:	mov    ecx,0xe1479c98
  40f2e2:	xor    ah,cl
  40f2e4:	(bad)  
  40f2e5:	sub    eax,0x30c0b7c2
  40f2ea:	push   0xffffffd0
  40f2ec:	dec    edi
  40f2ed:	scas   eax,DWORD PTR es:[edi]
  40f2ee:	sbb    ecx,edx
  40f2f0:	mov    al,0x6a
  40f2f2:	mul    BYTE PTR [ebp+0x5f69e673]
  40f2f8:	jmp    0x8030:0x97794040
  40f2ff:	iret   
  40f300:	xchg   ecx,eax
  40f301:	je     0x40f349
  40f303:	mov    al,ds:0x30731974
  40f308:	jg     0x40f2af
  40f30a:	rcr    ebx,1
  40f30c:	fld    DWORD PTR [ebp-0x6243026f]
  40f312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f313:	jnp    0x40f372
  40f315:	jb     0x40f2db
  40f317:	cld    
  40f318:	or     ebp,DWORD PTR [ecx]
  40f31a:	mov    dl,0x58
  40f31c:	push   esi
  40f31d:	cmc    
  40f31e:	inc    ecx
  40f31f:	ja     0x40f2be
  40f321:	inc    esi
  40f322:	inc    ebp
  40f323:	jo     0x40f2f4
  40f325:	push   0x612c48e9
  40f32a:	and    al,0xf0
  40f32c:	fisub  WORD PTR [edi+0x5e8beab0]
  40f332:	sub    cl,bh
  40f334:	xor    DWORD PTR [edi+0x26],edx
  40f337:	push   ss
  40f338:	add    dh,0x9a
  40f33b:	shr    DWORD PTR [eax],0x74
  40f33e:	jns    0x40f319
  40f340:	retf   
  40f341:	mov    ds:0xf99f9cab,eax
  40f346:	ins    DWORD PTR es:[edi],dx
  40f347:	pop    ecx
  40f348:	bound  esp,QWORD PTR [ebx-0x53]
  40f34b:	sub    esi,0xffffffbf
  40f34e:	ds jg  0x40f303
  40f351:	push   ebx
  40f352:	and    al,0x15
  40f354:	or     BYTE PTR cs:[ebp+eiz*1+0x27],bh
  40f359:	dec    esp
  40f35a:	popa   
  40f35b:	inc    ebp
  40f35c:	and    eax,0x343b54df
  40f361:	sbb    esi,edx
  40f363:	jp     0x40f376
  40f365:	iret   
  40f366:	stos   DWORD PTR es:[edi],eax
  40f367:	dec    esp
  40f368:	xchg   ecx,eax
  40f369:	add    DWORD PTR [esi],eax
  40f36b:	mov    BYTE PTR [eax],cl
  40f36d:	aas    
  40f36e:	pop    esp
  40f36f:	push   esp
  40f370:	data16 fiadd DWORD PTR [eax+0x284ba914]
  40f377:	js     0x40f3ca
  40f379:	in     al,dx
  40f37a:	adc    BYTE PTR [edx],bh
  40f37c:	repz sub BYTE PTR [ebp+ebx*8-0x37315b45],cl
  40f384:	fwait
  40f385:	lock mov ch,0xb
  40f388:	cmc    
  40f389:	ret    0xafc9
  40f38c:	mov    edx,esi
  40f38e:	pop    edi
  40f38f:	std    
  40f390:	loopne 0x40f3a1
  40f392:	(bad)  
  40f393:	cmp    dh,BYTE PTR [edx]
  40f395:	bnd jle 0x40f32c
  40f398:	pop    esi
  40f399:	ret    0xd5a9
  40f39c:	test   al,0xf9
  40f39e:	pop    ds
  40f39f:	in     al,0xc3
  40f3a1:	xor    DWORD PTR [eax],esp
  40f3a3:	push   ebp
  40f3a4:	pop    ds
  40f3a5:	je     0x40f3e2
  40f3a7:	mov    al,ds:0xa5142fe6
  40f3ac:	loope  0x40f3d4
  40f3ae:	sub    edi,ebx
  40f3b0:	lahf   
  40f3b1:	and    cl,BYTE PTR [edi]
  40f3b3:	popa   
  40f3b4:	aaa    
  40f3b5:	xor    DWORD PTR [esi-0x76],0xffffffad
  40f3b9:	in     al,0xf3
  40f3bb:	cmp    al,0xf
  40f3bd:	sub    al,0xb5
  40f3bf:	inc    ebx
  40f3c0:	out    dx,al
  40f3c1:	in     al,dx
  40f3c2:	stc    
  40f3c3:	aad    0x96
  40f3c5:	call   0x3872:0xe0576644
  40f3cc:	out    0xdc,al
  40f3ce:	pop    ebp
  40f3cf:	sar    DWORD PTR [ebx-0x6c],1
  40f3d2:	pop    esi
  40f3d3:	and    DWORD PTR [eax],ebp
  40f3d5:	jnp    0x40f36d
  40f3d7:	dec    ebp
  40f3d8:	ins    DWORD PTR es:[edi],dx
  40f3d9:	ins    DWORD PTR es:[edi],dx
  40f3da:	std    
  40f3db:	js     0x40f3f1
  40f3dd:	gs inc ecx
  40f3df:	in     eax,dx
  40f3e0:	scas   eax,DWORD PTR es:[edi]
  40f3e1:	and    eax,0xf63b7a3f
  40f3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e7:	sbb    eax,0x3ada5dac
  40f3ec:	aad    0x1e
  40f3ee:	dec    ebx
  40f3ef:	dec    edx
  40f3f0:	retf   
  40f3f1:	push   esi
  40f3f2:	push   es
  40f3f3:	jg     0x40f3a5
  40f3f5:	mov    eax,0xb580dac8
  40f3fa:	jb     0x40f3eb
  40f3fc:	mov    cl,0xc
  40f3fe:	sbb    cl,bl
  40f400:	inc    edi
  40f401:	xor    BYTE PTR [esi+0x61],dl
  40f404:	mov    al,ds:0x32d866af
  40f409:	aaa    
  40f40a:	add    DWORD PTR [ebx-0x7d],eax
  40f40d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f40e:	adc    ebx,DWORD PTR [eax]
  40f410:	mov    dh,bh
  40f412:	xchg   ebx,eax
  40f413:	repnz pop ebx
  40f415:	ss cli 
  40f417:	mov    bl,0x2d
  40f419:	push   ebx
  40f41a:	loop   0x40f41a
  40f41c:	icebp  
  40f41d:	cmp    BYTE PTR [eax+edi*1+0x74],al
  40f421:	int3   
  40f422:	imul   ebp,DWORD PTR [edi],0x3f1c6096
  40f428:	mov    ds:0xf55ac294,eax
  40f42d:	int3   
  40f42e:	and    DWORD PTR [edx+0x298a521b],0xa7461df4
  40f438:	xchg   edi,eax
  40f439:	mov    bl,0x26
  40f43b:	aad    0xc6
  40f43d:	hlt    
  40f43e:	mov    ch,0x2e
  40f440:	jne    0x40f451
  40f442:	cmpps  xmm5,XMMWORD PTR [ecx+0x5a],0x9d
  40f447:	in     eax,dx
  40f448:	pop    es
  40f449:	sub    eax,0xd4a3521f
  40f44e:	lods   eax,DWORD PTR ds:[esi]
  40f44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f450:	rcr    BYTE PTR [ecx-0x3d],cl
  40f453:	stos   DWORD PTR es:[edi],eax
  40f454:	out    dx,al
  40f455:	jno    0x40f421
  40f457:	es xchg ebp,eax
  40f459:	addr16 push esp
  40f45b:	add    al,0xc9
  40f45d:	pop    es
  40f45e:	clc    
  40f45f:	jno    0x40f3ef
  40f461:	cmp    DWORD PTR [edi+0x122e4a02],ecx
  40f467:	xor    DWORD PTR [ebp+0x56ba4cde],0xffffffd7
  40f46e:	fisttp QWORD PTR [ebx+ebx*2]
  40f471:	arpl   bx,cx
  40f473:	lea    eax,ds:0x9fb949f1
  40f479:	mov    esi,DWORD PTR [edx+0x5b]
  40f47c:	push   ds
  40f47d:	hlt    
  40f47e:	push   ds
  40f47f:	fdivr  DWORD PTR [edi+0x41]
  40f482:	es fwait
  40f484:	cmp    eax,0xf032ba3e
  40f489:	sub    DWORD PTR [esi],esi
  40f48b:	and    BYTE PTR ss:[esi],0x65
  40f48f:	cdq    
  40f490:	pop    DWORD PTR [ebp-0x73]
  40f493:	in     eax,dx
  40f494:	and    al,0x34
  40f496:	or     al,0x8
  40f498:	adc    DWORD PTR [eax],esp
  40f49a:	xor    al,0xff
  40f49c:	fmul   st,st(1)
  40f49e:	(bad)  
  40f49f:	test   DWORD PTR [eax-0x7b93de4a],0x2653c96d
  40f4a9:	aaa    
  40f4aa:	mov    eax,0xb620e0e2
  40f4af:	mov    eax,0x9558c109
  40f4b4:	xor    DWORD PTR [esi],ebx
  40f4b6:	outs   dx,DWORD PTR ds:[esi]
  40f4b7:	inc    esi
  40f4b8:	sub    dl,BYTE PTR [ecx]
  40f4ba:	sub    DWORD PTR ds:0x924ec1cc,eax
  40f4c0:	div    DWORD PTR [di-0x1089]
  40f4c5:	shl    BYTE PTR [eax+esi*2-0x46a15358],0x1b
  40f4cd:	rcl    esi,cl
  40f4cf:	sub    eax,0xe96d63f7
  40f4d4:	pop    ebp
  40f4d5:	lea    edi,[eax-0xe]
  40f4d8:	adc    al,0x92
  40f4da:	sar    BYTE PTR ss:[ebp+0x5753fcf8],1
  40f4e1:	repnz loopne 0x40f4aa
  40f4e4:	sbb    edi,DWORD PTR [eax+0x73]
  40f4e7:	xor    ebx,ebx
  40f4e9:	mov    ecx,0x5407fade
  40f4ee:	and    bl,dl
  40f4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f1:	lods   al,BYTE PTR ds:[esi]
  40f4f2:	imul   ebx,DWORD PTR [ebx+esi*1-0x2c],0x9de70785
  40f4fa:	shl    DWORD PTR [ecx],0xc2
  40f4fd:	inc    edx
  40f4fe:	and    esi,ebx
  40f500:	in     al,dx
  40f501:	(bad)  
  40f502:	jle    0x40f4e6
  40f504:	dec    eax
  40f505:	xchg   edx,eax
  40f506:	(bad)  
  40f507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f508:	scas   al,BYTE PTR es:[edi]
  40f509:	cmp    al,0xc2
  40f50b:	pop    esp
  40f50c:	nop
  40f50d:	mov    esi,0xa3becf2a
  40f512:	mov    ebx,0xcee374eb
  40f517:	adc    eax,DWORD PTR [esi]
  40f519:	(bad)  
  40f51a:	push   ds
  40f51b:	stos   DWORD PTR es:[edi],eax
  40f51c:	aaa    
  40f51d:	lds    ecx,FWORD PTR ds:0x752759a5
  40f523:	and    DWORD PTR [ebx+0x2878e06],edi
  40f529:	jp     0x40f568
  40f52b:	nop
  40f52c:	scas   eax,DWORD PTR es:[edi]
  40f52d:	ss lock jp 0x40f4fb
  40f531:	xchg   edx,eax
  40f532:	icebp  
  40f533:	test   eax,edx
  40f535:	and    esp,eax
  40f537:	adc    eax,0x6ff40e72
  40f53c:	and    edx,DWORD PTR [edi-0x73]
  40f53f:	and    bh,ch
  40f541:	mov    bh,0x99
  40f543:	mov    bl,0x3f
  40f545:	xor    eax,0x7dd30ada
  40f54a:	(bad)  
  40f54b:	loop   0x40f544
  40f54d:	jo     0x40f52b
  40f54f:	das    
  40f550:	outs   dx,DWORD PTR ds:[esi]
  40f551:	or     BYTE PTR [ebp-0x53],ah
  40f554:	fxch   st(6)
  40f556:	ud0    ecx,edi
  40f559:	lods   al,BYTE PTR ds:[esi]
  40f55a:	ret    
  40f55b:	pushf  
  40f55c:	add    DWORD PTR [edx+edi*1],0x42
  40f560:	bound  ecx,QWORD PTR [edx+ebx*2]
  40f563:	sub    DWORD PTR [edi-0x1f556e3a],esi
  40f569:	mov    esp,0xc07fd3ff
  40f56e:	rcr    BYTE PTR [edi+0x56cde36e],cl
  40f574:	add    DWORD PTR [ecx+0x5d70984f],esp
  40f57a:	ja     0x40f529
  40f57c:	out    dx,eax
  40f57d:	push   edi
  40f57e:	jnp    0x40f56e
  40f580:	sub    dh,bh
  40f582:	or     BYTE PTR [ecx+0x26],dh
  40f585:	adc    ch,0x57
  40f588:	push   ss
  40f589:	sar    DWORD PTR [edx+0x85344c1],0xfe
  40f590:	push   0xffffffdc
  40f592:	jge    0x40f609
  40f594:	shr    DWORD PTR [esi],0xe
  40f597:	sbb    edx,DWORD PTR [ecx+0x42]
  40f59a:	sbb    BYTE PTR [ecx-0xe],bh
  40f59d:	mov    ah,BYTE PTR ds:0x7bb14b7
  40f5a3:	sar    DWORD PTR [edx],1
  40f5a5:	inc    ebp
  40f5a6:	xor    DWORD PTR [ebp+0x11],esp
  40f5a9:	cwde   
  40f5aa:	add    al,0x9f
  40f5ac:	fisttp QWORD PTR [ecx+0x6b]
  40f5af:	aad    0xd4
  40f5b1:	fstp   DWORD PTR fs:[edi+0x79]
  40f5b5:	xor    eax,0xb90882ef
  40f5ba:	into   
  40f5bb:	jae    0x40f5c9
  40f5bd:	lds    esi,FWORD PTR [eax-0x16]
  40f5c0:	ficom  DWORD PTR [edi-0x4b]
  40f5c3:	data16 (bad) 
  40f5c5:	mov    ch,0x33
  40f5c7:	into   
  40f5c8:	lea    eax,[ecx+eax*1+0x3272f1]
  40f5cf:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5d2:	mov    edx,DWORD PTR [ebp-0x20]
  40f5d5:	mov    DWORD PTR [edx+ecx*4],eax
  40f5d8:	mov    eax,DWORD PTR [ebp-0xc]
  40f5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5de:	xor    eax,esi
  40f5e0:	lea    eax,[eax+ecx*1+0x3272f1]
  40f5e7:	mov    DWORD PTR [ebp+0x8],eax
  40f5ea:	mov    eax,DWORD PTR [ebp-0xc]
  40f5ed:	mov    ecx,DWORD PTR [ebp+0x14]
  40f5f0:	xor    eax,esi
  40f5f2:	add    eax,edi
  40f5f4:	imul   eax,DWORD PTR [ecx]
  40f5f7:	mov    ecx,DWORD PTR [ebp-0x4]
  40f5fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f5fd:	xor    ecx,esi
  40f5ff:	lea    ecx,[ecx+edx*1+0x3272f1]
  40f606:	cmp    ecx,eax
  40f608:	jne    0x40d220
  40f60e:	mov    eax,DWORD PTR [ebp-0x4]
  40f611:	xor    eax,esi
  40f613:	add    eax,edi
  40f615:	mov    DWORD PTR [ebp-0x10],eax
  40f618:	mov    ebx,0x65655
  40f61d:	add    ebx,0x3234
  40f623:	xchg   ebx,esi
  40f625:	xor    ebx,ebx
  40f627:	push   esi
  40f628:	mov    esi,ebx
  40f62a:	pop    ebx
  40f62b:	mov    edx,esi
  40f62d:	add    ebx,0x1002
  40f633:	lea    eax,[ebp-0x18]
  40f636:	add    edx,eax
  40f638:	add    edx,0x5
  40f63b:	push   edx
  40f63c:	inc    esi
  40f63d:	pop    ecx
  40f63e:	dec    ecx
  40f63f:	xchg   ecx,eax
  40f640:	dec    eax
  40f641:	xchg   ecx,eax
  40f642:	dec    ecx
  40f643:	xchg   ecx,edx
  40f645:	dec    edx
  40f646:	push   edx
  40f647:	mov    edx,ebx
  40f649:	pop    ebx
  40f64a:	dec    ebx
  40f64b:	call   DWORD PTR [ebx]
  40f64d:	cmp    DWORD PTR [ebp+0x10],esi
  40f650:	je     0x413d8d
  40f656:	xchg   edx,eax
  40f657:	push   0xc
  40f659:	pop    ecx
  40f65a:	dec    ecx
  40f65b:	jmp    0x4119e9
  40f660:	test   al,0x3a
  40f662:	jl     0x40f606
  40f664:	out    dx,al
  40f665:	mov    ds:0xdb3d32a2,al
  40f66a:	sti    
  40f66b:	loopne 0x40f632
  40f66d:	mov    ss,WORD PTR [ebx]
  40f66f:	jnp    0x40f6eb
  40f671:	scas   eax,DWORD PTR es:[edi]
  40f672:	add    DWORD PTR [ebx-0x7c7ca1f4],0x73
  40f679:	mov    ebp,0x16327e6c
  40f67e:	stos   DWORD PTR es:[edi],eax
  40f67f:	mov    ah,BYTE PTR [edi+edi*2-0x27b7bfeb]
  40f686:	mov    eax,0xb5a52ff9
  40f68b:	ret    
  40f68c:	mov    bh,0x8d
  40f68e:	into   
  40f68f:	sub    bh,BYTE PTR [ecx-0x37]
  40f692:	xlat   BYTE PTR ds:[ebx]
  40f693:	(bad)  
  40f695:	xchg   ebx,eax
  40f696:	fild   QWORD PTR [eax+0x67bc2604]
  40f69c:	pop    ecx
  40f69d:	mov    edx,DWORD PTR [edi-0x4953e0d5]
  40f6a3:	aas    
  40f6a4:	jge    0x40f664
  40f6a6:	and    DWORD PTR [ecx],ebx
  40f6a8:	rcr    BYTE PTR [esi-0x21a16d0f],1
  40f6ae:	adc    ebp,DWORD PTR [ebx+ecx*4]
  40f6b1:	clc    
  40f6b2:	mov    WORD PTR [ecx+0x15cf8e29],cs
  40f6b8:	xchg   ebx,eax
  40f6b9:	push   0xffffffa2
  40f6bb:	int    0x8c
  40f6bd:	jecxz  0x40f6b5
  40f6bf:	rcl    ah,cl
  40f6c1:	popa   
  40f6c2:	or     bl,dl
  40f6c4:	mov    WORD PTR [eax-0x61],sp
  40f6c8:	add    DWORD PTR [esi-0x4a],0x62
  40f6cc:	test   BYTE PTR [eax],cl
  40f6ce:	aad    0x76
  40f6d0:	mov    ebp,0x58b23857
  40f6d5:	add    al,0x63
  40f6d7:	inc    edx
  40f6d8:	and    DWORD PTR [eax+0x7c101506],edi
  40f6de:	mov    ah,0xc0
  40f6e0:	call   0x9484:0x168211ae
  40f6e7:	xchg   esp,eax
  40f6e8:	(bad)  
  40f6e9:	mov    edx,0x7569b5a2
  40f6ee:	jae    0x40f682
  40f6f0:	xchg   BYTE PTR [ecx+0x765852a0],ah
  40f6f6:	sbb    al,0x2a
  40f6f8:	push   esp
  40f6f9:	je     0x40f699
  40f6fb:	jp     0x40f6c6
  40f6fd:	sub    ecx,DWORD PTR [ebx]
  40f6ff:	in     eax,dx
  40f700:	sbb    al,0x3a
  40f702:	mov    bl,0xf0
  40f704:	not    ah
  40f706:	fs mov ebp,0x87180328
  40f70c:	push   ebx
  40f70d:	fdivp  st(6),st
  40f70f:	mov    ?,WORD PTR [eax-0x138a1bd0]
  40f715:	xchg   edx,eax
  40f716:	jp     0x40f6fb
  40f718:	retf   0xe9dd
  40f71b:	les    esp,FWORD PTR [esi+0x67]
  40f71e:	arpl   WORD PTR fs:[ebp-0x22],dx
  40f722:	sub    dh,BYTE PTR [ebx+0x2d]
  40f725:	es pusha 
  40f727:	sub    eax,0x9157ba1e
  40f72c:	mov    eax,0xb70ae56
  40f731:	add    BYTE PTR [edx],0xb0
  40f734:	pop    ecx
  40f735:	push   ecx
  40f736:	stc    
  40f737:	xchg   edi,eax
  40f738:	mov    DWORD PTR [edx-0x3b075cd1],0xaaa94606
  40f742:	fs xchg ebp,eax
  40f744:	out    0x48,al
  40f746:	adc    BYTE PTR [edi+ebx*8],ch
  40f749:	(bad)  
  40f74a:	(bad)  
  40f74b:	das    
  40f74c:	ins    DWORD PTR es:[edi],dx
  40f74d:	push   0x93a241cb
  40f752:	iret   
  40f753:	shl    DWORD PTR [bx+di+0x1110],0x9
  40f759:	cmp    al,0xc4
  40f75b:	jnp    0x40f7a1
  40f75d:	ins    BYTE PTR es:[edi],dx
  40f75e:	pop    ds
  40f75f:	daa    
  40f760:	xchg   edi,eax
  40f761:	mov    al,ds:0xb9f63eda
  40f766:	(bad)
  40f769:	arpl   WORD PTR [esi-0x5536b805],si
  40f76f:	sub    eax,0xd68a1390
  40f774:	jbe    0x40f768
  40f776:	add    DWORD PTR [bx],0xf3c6c8ba
  40f77d:	cwde   
  40f77e:	loop   0x40f78d
  40f780:	add    DWORD PTR ss:[eax-0x4f35791b],esp
  40f787:	mov    DWORD PTR [ebx-0xe8b2820],edi
  40f78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78e:	jmp    0x158f:0xda60f09c
  40f795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f796:	add    al,0x8b
  40f798:	jl     0x40f7ac
  40f79a:	adc    al,0x4e
  40f79c:	sbb    BYTE PTR [edi],bl
  40f79e:	mov    ds:0xd0a9470b,eax
  40f7a3:	lods   eax,DWORD PTR gs:[esi]
  40f7a5:	add    bl,BYTE PTR [ebp-0x4c]
  40f7a8:	scas   eax,DWORD PTR es:[edi]
  40f7a9:	push   eax
  40f7aa:	jo     0x40f7c3
  40f7ac:	inc    ecx
  40f7ad:	fwait
  40f7ae:	not    BYTE PTR [ecx]
  40f7b0:	xor    eax,0xe5a2f27
  40f7b5:	bound  ebp,QWORD PTR [ebx]
  40f7b7:	jl     0x40f768
  40f7b9:	out    dx,eax
  40f7ba:	test   al,0x1d
  40f7bc:	sahf   
  40f7bd:	push   DWORD PTR [edi+0x5d]
  40f7c0:	jg     0x40f7e9
  40f7c2:	mov    ?,WORD PTR [edx+eax*8-0x2d]
  40f7c6:	add    BYTE PTR [ecx-0x4a],dl
  40f7c9:	push   esp
  40f7ca:	ret    0xb8e3
  40f7cd:	sahf   
  40f7ce:	out    dx,al
  40f7cf:	cs mov eax,0xb5a61b2a
  40f7d5:	rcr    BYTE PTR [edx+edi*1-0x60],0x57
  40f7da:	call   0xe4a1c343
  40f7df:	cmp    bl,BYTE PTR [ecx]
  40f7e1:	sub    ebx,edi
  40f7e3:	lods   al,BYTE PTR ds:[esi]
  40f7e4:	fs (bad) 
  40f7e6:	nop
  40f7e7:	arpl   cx,ax
  40f7e9:	mov    esp,0x4a2c700
  40f7ee:	dec    edx
  40f7ef:	mov    edi,0x67088572
  40f7f4:	sbb    BYTE PTR [esp+edx*8],dl
  40f7f7:	call   0xb45c:0x97b8558f
  40f7fe:	cmc    
  40f7ff:	pop    es
  40f800:	outs   dx,BYTE PTR ds:[esi]
  40f801:	pop    esp
  40f802:	fwait
  40f803:	popa   
  40f804:	ret    
  40f805:	fstp   TBYTE PTR [ebx-0x144da9da]
  40f80b:	fadd   DWORD PTR [ecx-0x7d26707b]
  40f811:	and    esi,DWORD PTR ds:[esi]
  40f814:	xlat   BYTE PTR ds:[ebx]
  40f815:	push   ebp
  40f816:	xor    BYTE PTR [eax],dl
  40f818:	sbb    DWORD PTR [ecx+0x3a],0x24
  40f81c:	sub    BYTE PTR [ecx],bl
  40f81e:	inc    edx
  40f81f:	(bad)  
  40f820:	push   0x677f1cb8
  40f825:	push   0xc24d7439
  40f82a:	das    
  40f82b:	pop    esp
  40f82c:	pop    esi
  40f82d:	(bad)  
  40f82e:	adc    eax,0x28d45208
  40f833:	and    DWORD PTR [ecx],esp
  40f835:	pop    esp
  40f836:	or     ecx,DWORD PTR [ecx+0x1ebf3207]
  40f83c:	inc    ebx
  40f83d:	xchg   esi,eax
  40f83e:	and    BYTE PTR [edi+0x15],dh
  40f841:	fsub   st,st(6)
  40f843:	mov    edx,0x2b5c4ec
  40f848:	sub    BYTE PTR [esi-0x6d],ah
  40f84b:	cmp    bh,BYTE PTR [edx-0x6cea0952]
  40f851:	and    DWORD PTR [ebx-0xa],0xb1db4208
  40f858:	mov    cl,0x4d
  40f85a:	stos   DWORD PTR es:[edi],eax
  40f85b:	lods   eax,DWORD PTR ds:[esi]
  40f85c:	nop
  40f85d:	push   ss
  40f85e:	retf   
  40f85f:	pop    ebx
  40f860:	ins    DWORD PTR es:[edi],dx
  40f861:	cmp    al,0xf3
  40f863:	sub    DWORD PTR [edi-0x66],esp
  40f866:	fdiv   QWORD PTR [esp+eax*1+0x30]
  40f86a:	or     DWORD PTR [ebx-0x55241d5d],0xffffffb2
  40f871:	lock scas al,BYTE PTR es:[edi]
  40f873:	ja     0x40f846
  40f875:	pop    ds
  40f876:	sub    ah,dl
  40f878:	xchg   edx,eax
  40f879:	mov    BYTE PTR [ebp-0xc],cl
  40f87c:	cmp    bh,dh
  40f87e:	outs   dx,BYTE PTR ds:[esi]
  40f87f:	mov    bl,0x93
  40f881:	mov    esi,0x819d31
  40f886:	adc    bl,0xa6
  40f889:	repz mov esp,0x27d6b243
  40f88f:	inc    ecx
  40f890:	hlt    
  40f891:	sub    ah,bh
  40f893:	mov    eax,0x5ecf291a
  40f898:	jp     0x40f838
  40f89a:	pop    ebx
  40f89b:	sbb    eax,0x1f7fec82
  40f8a0:	loop   0x40f8a3
  40f8a2:	popf   
  40f8a3:	sbb    dl,BYTE PTR [edx]
  40f8a5:	enter  0x548b,0x1b
  40f8a9:	test   eax,0xcb5e72f3
  40f8ae:	sub    al,dh
  40f8b0:	(bad)  
  40f8b3:	stos   BYTE PTR es:[edi],al
  40f8b4:	or     eax,0x106531d3
  40f8b9:	rcr    BYTE PTR [edx],cl
  40f8bb:	fist   DWORD PTR [esi-0x13]
  40f8be:	xchg   ebp,eax
  40f8bf:	enter  0xbb72,0x3c
  40f8c3:	gs cwde 
  40f8c5:	dec    edx
  40f8c6:	dec    ebx
  40f8c7:	inc    esi
  40f8c8:	sub    BYTE PTR [ecx],cl
  40f8ca:	mov    ebx,0xed1d2b2e
  40f8cf:	dec    edi
  40f8d0:	scas   al,BYTE PTR es:[edi]
  40f8d1:	test   ebp,edx
  40f8d3:	neg    bl
  40f8d5:	bound  ebp,QWORD PTR [ecx-0x34]
  40f8d8:	(bad)  
  40f8d9:	call   0xc32409be
  40f8de:	pop    eax
  40f8df:	mov    ch,0x34
  40f8e1:	mov    edx,0x6ba4334c
  40f8e6:	rcr    DWORD PTR [edx-0x19],cl
  40f8e9:	sub    ebx,DWORD PTR [eax-0x699a1e50]
  40f8ef:	js     0x40f96a
  40f8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f2:	mov    bh,BYTE PTR [edi-0x105ca348]
  40f8f8:	fs cmp al,0x64
  40f8fb:	pushf  
  40f8fc:	loop   0x40f8c8
  40f8fe:	xor    DWORD PTR [eax-0x51ea8c9d],esi
  40f904:	sar    BYTE PTR [eax+0x7053f1e0],1
  40f90a:	repz add eax,0xe8a59873
  40f910:	inc    eax
  40f911:	int3   
  40f912:	lods   al,BYTE PTR ds:[esi]
  40f913:	fnsave [eax+esi*1+0x6f]
  40f917:	adc    bl,BYTE PTR [ebx+ecx*4+0x4ec8bcbb]
  40f91e:	mov    esi,0x4e6f01b0
  40f923:	fwait
  40f924:	cli    
  40f925:	sti    
  40f926:	cmp    al,0xc4
  40f928:	mov    ebp,ebp
  40f92a:	mov    cl,0x5f
  40f92c:	mov    al,dl
  40f92e:	lods   eax,DWORD PTR ds:[esi]
  40f92f:	pop    ss
  40f930:	aad    0xce
  40f932:	dec    ebp
  40f933:	lock bound ebp,QWORD PTR [edx]
  40f936:	out    dx,al
  40f937:	mov    DWORD PTR [edi+0x59],esp
  40f93a:	mov    eax,ds:0x15bcbba4
  40f93f:	sub    BYTE PTR [edi],0xbf
  40f942:	inc    edi
  40f943:	lods   eax,DWORD PTR ds:[esi]
  40f944:	mov    DWORD PTR [edx],ecx
  40f946:	cs nop
  40f948:	test   ecx,edx
  40f94a:	mov    BYTE PTR [edi],ah
  40f94c:	out    0xe5,al
  40f94e:	pop    ds
  40f94f:	repz mov dh,0x71
  40f952:	int3   
  40f953:	in     eax,0x2b
  40f955:	pop    eax
  40f956:	fsubr  DWORD PTR [esi-0x2f33bf3d]
  40f95c:	pop    ds
  40f95d:	pop    esp
  40f95e:	aaa    
  40f95f:	inc    ebp
  40f960:	sub    ebp,DWORD PTR [esi+0x742a5cce]
  40f966:	scas   eax,DWORD PTR es:[edi]
  40f967:	or     eax,0x6076e24b
  40f96c:	xrelease xchg DWORD PTR [edx],edi
  40f96f:	adc    al,0x25
  40f971:	dec    ebp
  40f972:	sahf   
  40f973:	xor    bh,BYTE PTR [edi]
  40f975:	(bad)  
  40f976:	jmp    0xef2b:0x31e94c16
  40f97d:	in     al,0x36
  40f97f:	push   es
  40f980:	inc    edx
  40f981:	dec    eax
  40f982:	int    0x82
  40f984:	call   0xb5e14116
  40f989:	and    al,0x85
  40f98b:	push   eax
  40f98c:	mov    esi,0xfc5fcbce
  40f991:	daa    
  40f992:	repnz lock stos DWORD PTR es:[edi],eax
  40f995:	iret   
  40f996:	dec    ebp
  40f997:	xchg   edi,eax
  40f998:	sbb    eax,0x69c289e6
  40f99d:	sbb    eax,0x9bce6842
  40f9a2:	retf   
  40f9a3:	xchg   BYTE PTR [ebp+ecx*1+0x5715f376],dl
  40f9aa:	dec    esi
  40f9ab:	sbb    ch,BYTE PTR [ecx]
  40f9ad:	xlat   BYTE PTR ds:[ebx]
  40f9ae:	(bad)  
  40f9b0:	fistp  DWORD PTR [esi]
  40f9b2:	adc    eax,0xbed664da
  40f9b7:	dec    edx
  40f9b8:	jmp    0x40fa2d
  40f9ba:	push   ds
  40f9bb:	int3   
  40f9bc:	int    0x25
  40f9be:	loopne 0x40f9b0
  40f9c0:	add    DWORD PTR ds:0x9de90b89,ebp
  40f9c6:	rcl    DWORD PTR [edx+0x2f],0x95
  40f9ca:	mov    ah,0x76
  40f9cc:	adc    ebx,0x6e61d55e
  40f9d2:	lods   eax,DWORD PTR ds:[esi]
  40f9d3:	xlat   BYTE PTR ds:[ebx]
  40f9d4:	je     0x40fa32
  40f9d6:	(bad)  
  40f9d7:	jns    0x40fa06
  40f9d9:	xchg   ebx,eax
  40f9da:	in     eax,dx
  40f9db:	stos   DWORD PTR es:[edi],eax
  40f9dc:	sbb    eax,0x7c373c22
  40f9e1:	fstp   QWORD PTR [ebx+edi*1-0xc]
  40f9e5:	jno    0x40f980
  40f9e7:	scas   al,BYTE PTR es:[edi]
  40f9e8:	push   edx
  40f9e9:	or     ebx,eax
  40f9eb:	inc    esp
  40f9ec:	(bad)  
  40f9ed:	call   0xabdc313d
  40f9f2:	xchg   ebp,eax
  40f9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f4:	scas   al,BYTE PTR es:[edi]
  40f9f5:	dec    edx
  40f9f6:	jne    0x40f9dd
  40f9f8:	and    esi,DWORD PTR ss:[eax+ecx*1-0x4b]
  40f9fd:	aas    
  40f9fe:	xchg   edi,eax
  40f9ff:	mov    dh,0xa3
  40fa01:	hlt    
  40fa02:	ss sub eax,0xe81daffc
  40fa08:	mov    ah,0x3d
  40fa0a:	jmp    0xd51:0x610c513a
  40fa11:	sub    BYTE PTR [edi],ah
  40fa13:	push   eax
  40fa14:	lods   eax,DWORD PTR ds:[esi]
  40fa15:	sahf   
  40fa16:	pop    ecx
  40fa17:	dec    esi
  40fa18:	pop    ds
  40fa19:	sub    dl,BYTE PTR [eax-0x2eaa0b32]
  40fa1f:	push   ebp
  40fa20:	mov    esp,0x4904ed8c
  40fa25:	clc    
  40fa26:	add    DWORD PTR [edi-0x3a],esp
  40fa29:	xchg   DWORD PTR [esp+esi*2+0x3fa92c06],esi
  40fa30:	test   BYTE PTR [edi-0x1bc936cb],cl
  40fa36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa37:	data16 int 0xed
  40fa3a:	xor    al,0x77
  40fa3c:	sbb    eax,0x4ba904c1
  40fa41:	test   eax,0xb2a41a86
  40fa46:	jecxz  0x40faab
  40fa48:	xchg   edi,eax
  40fa49:	loope  0x40fa70
  40fa4b:	ror    ebx,0x18
  40fa4e:	shr    DWORD PTR [edx+0x4146094e],cl
  40fa54:	(bad)  
  40fa55:	enter  0x3bd6,0xc1
  40fa59:	mov    ds:0xf9bbe90e,eax
  40fa5e:	cmp    DWORD PTR [ecx+0x72],edi
  40fa61:	inc    esp
  40fa62:	daa    
  40fa63:	stc    
  40fa64:	bnd js 0x40fad3
  40fa67:	neg    DWORD PTR [edi]
  40fa69:	inc    DWORD PTR [esi]
  40fa6b:	aaa    
  40fa6c:	mov    DWORD PTR [edx+0x357ce3f],eax
  40fa72:	jecxz  0x40fa66
  40fa74:	jno    0x40fa5e
  40fa76:	xchg   ecx,eax
  40fa77:	mov    dl,0xfb
  40fa79:	cmp    ah,dh
  40fa7b:	mov    eax,0x31ca631
  40fa80:	call   0x15c1f379
  40fa85:	sbb    BYTE PTR [ecx],cl
  40fa87:	das    
  40fa88:	xchg   edi,eax
  40fa89:	push   esp
  40fa8a:	jg     0x40fa90
  40fa8c:	xor    eax,ebp
  40fa8e:	mov    dl,0x87
  40fa90:	push   esp
  40fa91:	inc    edx
  40fa92:	in     eax,0xfe
  40fa94:	dec    ebp
  40fa95:	lahf   
  40fa96:	inc    ecx
  40fa97:	daa    
  40fa98:	or     BYTE PTR [ebp+0x3ff789fe],dl
  40fa9e:	sbb    DWORD PTR [eax+0x18],ecx
  40faa1:	push   ss
  40faa2:	out    dx,al
  40faa3:	dec    ax
  40faa5:	inc    eax
  40faa6:	imul   di,WORD PTR [ebx-0x13f44164],0xffef
  40faae:	jge    0x40fa48
  40fab0:	inc    esp
  40fab1:	not    BYTE PTR [esi-0x34]
  40fab4:	add    WORD PTR [edi],ax
  40fab7:	lods   eax,DWORD PTR ds:[esi]
  40fab8:	add    bl,BYTE PTR [ebp+0x47]
  40fabb:	mov    WORD PTR [ecx+ebp*1-0x3a96ca86],ss
  40fac2:	icebp  
  40fac3:	mov    esi,DWORD PTR [ebx+0x4a]
  40fac6:	or     eax,0x33ef91a6
  40facb:	or     eax,0xb73d3790
  40fad0:	or     cl,ah
  40fad2:	xor    al,bl
  40fad4:	inc    edx
  40fad5:	push   es
  40fad6:	or     dh,dh
  40fad8:	inc    edx
  40fad9:	fisubr DWORD PTR [eax-0x6fbb7222]
  40fadf:	mov    ds:0xf7b04e1,al
  40fae4:	add    eax,0x881ebbb6
  40fae9:	iret   
  40faea:	and    BYTE PTR [ebp-0x321cbc66],cl
  40faf0:	mov    ecx,0xe6a018ab
  40faf5:	add    DWORD PTR [ecx],esp
  40faf7:	xchg   esp,eax
  40faf8:	push   ds
  40faf9:	fs mov edi,0x9d8f05a6
  40faff:	bound  edx,QWORD PTR [ecx-0xa]
  40fb02:	loope  0x40fb2b
  40fb04:	inc    esi
  40fb05:	dec    ebx
  40fb06:	push   ebp
  40fb07:	add    ah,BYTE PTR [ebp-0x6c]
  40fb0a:	mov    ?,WORD PTR [ecx-0x5ab861f1]
  40fb10:	and    ebp,ebp
  40fb12:	mov    eax,ds:0xc25bb205
  40fb17:	and    bh,BYTE PTR [edx+ebp*2]
  40fb1a:	inc    ebp
  40fb1b:	idiv   BYTE PTR [eax-0x4c]
  40fb1e:	aad    0x2a
  40fb20:	pushf  
  40fb21:	xchg   esp,eax
  40fb22:	dec    esp
  40fb23:	ret    
  40fb24:	and    edx,eax
  40fb26:	pusha  
  40fb27:	fisubr WORD PTR [edi-0x2b]
  40fb2a:	mov    WORD PTR [esi-0x5f],?
  40fb2d:	js     0x40fab1
  40fb2f:	jb     0x40fb79
  40fb31:	dec    ebp
  40fb32:	dec    edx
  40fb33:	ja     0x40fb0e
  40fb35:	cli    
  40fb36:	rcr    DWORD PTR [ebp+ebp*2-0x6f90a76b],1
  40fb3d:	outs   dx,DWORD PTR ds:[esi]
  40fb3e:	jecxz  0x40faee
  40fb40:	adc    eax,0x42b5a328
  40fb45:	stos   BYTE PTR es:[edi],al
  40fb46:	lock or cl,BYTE PTR [edi+0x28]
  40fb4a:	jg     0x40fba2
  40fb4c:	add    BYTE PTR [edi-0x4b],dh
  40fb4f:	test   BYTE PTR [ecx],dl
  40fb51:	shr    DWORD PTR [edi],1
  40fb53:	rcl    BYTE PTR [edi-0x6d],1
  40fb56:	add    cl,BYTE PTR [ebx-0x20]
  40fb59:	shl    dl,1
  40fb5b:	pop    eax
  40fb5c:	xor    dh,dl
  40fb5e:	mov    DWORD PTR [eax+0x6c4c13fc],ebp
  40fb64:	(bad)  
  40fb65:	loopne 0x40fb2c
  40fb67:	mov    ds,WORD PTR [eax+0x270113c7]
  40fb6d:	repnz shr DWORD PTR [ecx-0x30],0x91
  40fb72:	xchg   ebp,eax
  40fb73:	xchg   esi,eax
  40fb74:	or     ch,dh
  40fb76:	and    BYTE PTR [ebx],al
  40fb78:	push   ds
  40fb79:	pop    esp
  40fb7a:	stos   BYTE PTR es:[edi],al
  40fb7b:	ss fwait
  40fb7d:	pop    es
  40fb7e:	cmp    al,0x7f
  40fb80:	in     al,dx
  40fb81:	stc    
  40fb82:	adc    eax,DWORD PTR [edx]
  40fb84:	or     DWORD PTR [esi-0x1b],ebp
  40fb87:	mov    cl,0x86
  40fb89:	mov    gs,WORD PTR [ecx-0x67eaf1e3]
  40fb8f:	mov    BYTE PTR [edi+esi*1],bh
  40fb92:	inc    esi
  40fb93:	xor    al,0xc9
  40fb95:	fild   WORD PTR [eax-0x32a61d55]
  40fb9b:	bound  edi,QWORD PTR [ebx+0x4281cfd4]
  40fba1:	dec    ebp
  40fba2:	adc    BYTE PTR [eax+0x32],bl
  40fba5:	hlt    
  40fba6:	sar    esi,1
  40fba8:	jnp    0x40fbca
  40fbaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbab:	call   0xd12f:0x6c45f69e
  40fbb2:	sub    edi,ecx
  40fbb4:	push   esp
  40fbb5:	ins    BYTE PTR es:[edi],dx
  40fbb6:	xor    al,0xb
  40fbb8:	out    dx,eax
  40fbb9:	push   0xffffffb0
  40fbbb:	cli    
  40fbbc:	fimul  WORD PTR [edi+0x6f61013d]
  40fbc2:	xor    ah,ch
  40fbc4:	xchg   cl,bl
  40fbc6:	retf   0x1b44
  40fbc9:	fs jge 0x40fbb1
  40fbcc:	(bad)  
  40fbce:	fdiv   DWORD PTR [ebp+0x252c46c4]
  40fbd4:	xor    eax,0xd964bdd6
  40fbd9:	push   esi
  40fbda:	push   ebx
  40fbdb:	addr16 pop ds
  40fbdd:	pushf  
  40fbde:	mov    dl,0xe1
  40fbe0:	sub    cl,dl
  40fbe2:	add    DWORD PTR [eax-0x3f],ecx
  40fbe5:	xchg   ebx,eax
  40fbe6:	pop    ds
  40fbe7:	ret    0xc025
  40fbea:	jns    0x40fbf9
  40fbec:	sbb    edx,DWORD PTR [esi]
  40fbee:	out    dx,al
  40fbef:	icebp  
  40fbf0:	cmc    
  40fbf1:	sbb    ecx,DWORD PTR ds:0x38d3ab26
  40fbf7:	jae    0x40fb7f
  40fbf9:	test   ch,bl
  40fbfb:	xchg   BYTE PTR [ebx],bl
  40fbfd:	sub    ch,0x65
  40fc00:	fcom   DWORD PTR [ecx]
  40fc02:	mov    eax,ds:0xdf76b7e4
  40fc07:	mov    dl,0x23
  40fc09:	push   0xffffffd3
  40fc0b:	add    eax,0x274f93c9
  40fc10:	pop    ecx
  40fc11:	loope  0x40fbe5
  40fc13:	(bad)  
  40fc14:	mov    esp,DWORD PTR [ebp+0x60]
  40fc17:	jns    0x40fc92
  40fc19:	nop
  40fc1a:	pushf  
  40fc1b:	push   ss
  40fc1c:	push   ebx
  40fc1d:	pop    es
  40fc1e:	scas   al,BYTE PTR es:[edi]
  40fc1f:	mov    BYTE PTR ds:0x5a6f1a90,bl
  40fc25:	xor    al,0x8b
  40fc27:	fsub   DWORD PTR [ebp-0x3]
  40fc2a:	jecxz  0x40fc48
  40fc2c:	hlt    
  40fc2d:	push   es
  40fc2e:	dec    eax
  40fc2f:	bound  eax,QWORD PTR [ecx]
  40fc31:	out    0x55,eax
  40fc33:	ret    0x3e9d
  40fc36:	fnstenv [eax-0xe]
  40fc39:	out    dx,al
  40fc3a:	push   cs
  40fc3b:	jmp    0xb6d6:0x28a282d4
  40fc42:	shr    ecx,cl
  40fc44:	push   0xffffff87
  40fc46:	shl    BYTE PTR [ebx],cl
  40fc48:	es push ss
  40fc4a:	pop    edx
  40fc4b:	dec    esp
  40fc4c:	cmp    dh,BYTE PTR [edx+edi*1]
  40fc4f:	push   0x42
  40fc51:	loopne 0x40fc0f
  40fc53:	add    BYTE PTR [ebp+0x45c63ed],cl
  40fc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc5a:	jb     0x40fc09
  40fc5c:	das    
  40fc5d:	dec    eax
  40fc5e:	mov    bh,bh
  40fc60:	pushf  
  40fc61:	pop    edi
  40fc62:	pop    ebx
  40fc63:	adc    DWORD PTR [edi+0x77],ecx
  40fc66:	or     bh,ch
  40fc68:	pop    edi
  40fc69:	xor    ch,BYTE PTR [edi+0x1fd8d74b]
  40fc6f:	pop    eax
  40fc70:	psllw  mm7,mm0
  40fc73:	mov    dl,0x48
  40fc75:	pop    ebx
  40fc76:	cmp    DWORD PTR [edx+0x6c],ebx
  40fc79:	xchg   ebx,eax
  40fc7a:	dec    ebp
  40fc7b:	ja     0x40fc20
  40fc7d:	mov    bh,0xdb
  40fc7f:	imul   eax,DWORD PTR [eax-0x1087293e],0xef34b3f2
  40fc89:	fmul   st,st(7)
  40fc8b:	(bad)  
  40fc8c:	out    0xdb,eax
  40fc8e:	push   0xffffff9f
  40fc90:	and    BYTE PTR [ebx+0x6d49a178],0xee
  40fc97:	shr    BYTE PTR ds:0xc8d2767d,0x11
  40fc9e:	pop    esi
  40fc9f:	mov    al,0xeb
  40fca1:	pusha  
  40fca2:	ficom  DWORD PTR [ebx]
  40fca4:	gs out dx,al
  40fca6:	sub    cl,BYTE PTR [eax+eiz*8-0xa02c1d3]
  40fcad:	dec    ebp
  40fcae:	loope  0x40fcb7
  40fcb0:	sbb    esp,DWORD PTR [esi+0x4a]
  40fcb3:	fld    TBYTE PTR [ebx-0x9977e0b]
  40fcb9:	iret   
  40fcba:	and    eax,0x560df456
  40fcbf:	stos   BYTE PTR es:[edi],al
  40fcc0:	jne    0x40fcad
  40fcc2:	leave  
  40fcc3:	push   ebp
  40fcc4:	xchg   BYTE PTR [ecx],dl
  40fcc6:	and    ecx,DWORD PTR [ebx+esi*8]
  40fcc9:	xchg   BYTE PTR [esi],bh
  40fccb:	fs dec eax
  40fccd:	cmp    eax,0x3e466ce7
  40fcd2:	lods   al,BYTE PTR ds:[esi]
  40fcd3:	sti    
  40fcd4:	in     al,dx
  40fcd5:	xchg   edx,eax
  40fcd6:	mov    ecx,0xb53dec0e
  40fcdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcdc:	pop    esi
  40fcdd:	fsubp  st(5),st
  40fcdf:	xchg   edi,eax
  40fce0:	test   eax,0x147f3ff6
  40fce5:	dec    eax
  40fce6:	fsub   QWORD PTR [edi+0x6f507c59]
  40fcec:	adc    eax,0xc97fb0d7
  40fcf1:	and    DWORD PTR [edx-0x27],0xffffffcc
  40fcf5:	and    bh,ch
  40fcf7:	test   BYTE PTR [ebx+0x3a35266c],0x4e
  40fcfe:	xchg   ecx,eax
  40fcff:	push   esp
  40fd00:	arpl   bx,dx
  40fd02:	xchg   edx,eax
  40fd03:	popa   
  40fd04:	pop    ebx
  40fd05:	clc    
  40fd06:	jnp    0x40fccb
  40fd08:	adc    eax,0xe057c2a8
  40fd0d:	aad    0x38
  40fd0f:	sub    al,0xfa
  40fd11:	push   esi
  40fd12:	or     DWORD PTR [esi],edi
  40fd14:	dec    eax
  40fd15:	pop    esi
  40fd16:	dec    edx
  40fd17:	loopne 0x40fd73
  40fd19:	sti    
  40fd1a:	fdiv   st,st(3)
  40fd1c:	mov    DWORD PTR [ecx],edx
  40fd1e:	loop   0x40fcde
  40fd20:	sahf   
  40fd21:	pop    edi
  40fd22:	call   0xffd5:0xd2a2b055
  40fd29:	inc    ecx
  40fd2a:	or     ch,BYTE PTR [ebp+0x7b]
  40fd2d:	adc    eax,0xbe499e96
  40fd32:	or     BYTE PTR [ecx],dl
  40fd34:	add    DWORD PTR [ebp-0x42],0x5f
  40fd38:	adc    BYTE PTR [eax],dl
  40fd3a:	lea    edx,[esi]
  40fd3c:	jmp    0x58c6:0x4f954e59
  40fd43:	lods   eax,DWORD PTR ds:[esi]
  40fd44:	cwde   
  40fd45:	pop    ds
  40fd46:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40fd48:	inc    ebx
  40fd49:	sub    eax,0xe8cfa1e0
  40fd4e:	and    al,0x2
  40fd50:	imul   ebx,DWORD PTR [esi],0x8ba7a109
  40fd56:	ret    
  40fd57:	xchg   ecx,eax
  40fd58:	fidivr WORD PTR [edx]
  40fd5a:	(bad)  
  40fd5b:	jb     0x40fdd6
  40fd5d:	adc    ecx,DWORD PTR [ebx+0x693829d5]
  40fd63:	jmp    0x3774:0x99ee8a3c
  40fd6a:	lods   al,BYTE PTR ds:[esi]
  40fd6b:	pop    ecx
  40fd6c:	or     BYTE PTR [edi],dl
  40fd6e:	jns    0x40fdeb
  40fd70:	ins    BYTE PTR es:[edi],dx
  40fd71:	lods   eax,DWORD PTR ds:[esi]
  40fd72:	in     al,0xb7
  40fd74:	sbb    al,0xb6
  40fd76:	retf   0xb577
  40fd79:	mov    esi,0xc3964b91
  40fd7e:	shl    DWORD PTR [ecx],1
  40fd80:	xor    BYTE PTR [ecx-0x7],0x80
  40fd84:	sbb    edx,DWORD PTR [ebx+edi*8+0x12]
  40fd88:	adc    BYTE PTR [ebx],0xd0
  40fd8b:	out    dx,eax
  40fd8c:	add    dl,BYTE PTR [edx+0x35]
  40fd8f:	mov    dl,0x19
  40fd91:	lock iret 
  40fd93:	out    dx,al
  40fd94:	mov    ecx,0x3d13c698
  40fd99:	aas    
  40fd9a:	imul   BYTE PTR [ecx-0x58a53c35]
  40fda0:	jnp    0x40fdd3
  40fda2:	xchg   ebx,eax
  40fda3:	in     eax,dx
  40fda4:	cmp    BYTE PTR [eax+0x56],dh
  40fda7:	xchg   BYTE PTR [esi-0x2f],cl
  40fdaa:	cmp    eax,0x17043df8
  40fdaf:	jl     0x40fdf2
  40fdb1:	cld    
  40fdb2:	stc    
  40fdb3:	outs   dx,DWORD PTR ds:[esi]
  40fdb4:	xor    BYTE PTR ds:0xad95bf3e,ch
  40fdba:	shl    eax,cl
  40fdbc:	or     eax,DWORD PTR [ebp+esi*4-0x8]
  40fdc0:	pop    esi
  40fdc1:	pop    es
  40fdc2:	gs sub eax,0xf407ccf5
  40fdc8:	out    0xcd,eax
  40fdca:	imul   edx,DWORD PTR [edi],0x843a6102
  40fdd0:	push   ss
  40fdd1:	hlt    
  40fdd2:	mov    bl,0x31
  40fdd4:	in     al,dx
  40fdd5:	and    BYTE PTR [ecx+eax*8+0x62],ch
  40fdd9:	mov    dh,0x38
  40fddb:	mov    dl,0x6d
  40fddd:	in     al,dx
  40fdde:	mov    cl,0x33
  40fde0:	aam    0x7e
  40fde2:	sbb    eax,eax
  40fde4:	sub    esi,0xaa5d95f0
  40fdea:	sub    al,BYTE PTR [esi+eax*4+0x9]
  40fdee:	cld    
  40fdef:	test   ebp,ebx
  40fdf1:	lds    eax,FWORD PTR [ebx+ebx*4]
  40fdf4:	push   esi
  40fdf5:	shl    BYTE PTR [ebx+0x4c],0xf9
  40fdf9:	shr    DWORD PTR [ebp+0x1f],cl
  40fdfc:	call   DWORD PTR fs:[ebp+0x6b5ea8e8]
  40fe03:	add    edi,edi
  40fe05:	test   ecx,esi
  40fe07:	mov    ds:0x2780539b,eax
  40fe0c:	int    0x1f
  40fe0e:	sbb    DWORD PTR [esi],eax
  40fe10:	test   eax,0xff445caf
  40fe15:	sub    DWORD PTR [edi+0x27c711d7],ecx
  40fe1b:	(bad)  
  40fe1c:	sti    
  40fe1d:	jp     0x40fdf4
  40fe1f:	add    BYTE PTR [esi],cl
  40fe21:	xchg   edi,eax
  40fe22:	pop    ss
  40fe23:	xor    al,0x3d
  40fe25:	lahf   
  40fe26:	mov    al,0x78
  40fe28:	push   ebp
  40fe29:	repnz and eax,DWORD PTR [ecx]
  40fe2c:	lock test DWORD PTR [ebx+ebp*4+0x40],ebp
  40fe31:	bound  ebp,QWORD PTR [esi+0x68b1734d]
  40fe37:	(bad)  
  40fe38:	leavew 
  40fe3a:	inc    edx
  40fe3b:	aam    0xb8
  40fe3d:	adc    DWORD PTR [ebx],edx
  40fe3f:	imul   BYTE PTR [eax-0x13]
  40fe42:	push   es
  40fe43:	jns    0x40fdc9
  40fe45:	loopne 0x40feb1
  40fe47:	or     al,bh
  40fe49:	scas   eax,DWORD PTR es:[edi]
  40fe4a:	cwde   
  40fe4b:	adc    al,0xa9
  40fe4d:	daa    
  40fe4e:	jg     0x40fdf9
  40fe50:	and    al,0xdd
  40fe52:	les    ebp,FWORD PTR [eax-0x5e898516]
  40fe58:	mov    cl,0xa8
  40fe5a:	or     cl,bh
  40fe5c:	inc    ebx
  40fe5d:	mov    cx,0xa883
  40fe61:	mov    dh,0xe3
  40fe63:	and    BYTE PTR [esi-0x4a],0xd6
  40fe67:	xor    esp,edx
  40fe69:	push   ebx
  40fe6a:	outs   dx,DWORD PTR ds:[esi]
  40fe6b:	xchg   ebp,eax
  40fe6c:	mov    eax,gs
  40fe6e:	jmp    0x7ea7:0xb38b12d8
  40fe75:	(bad)  
  40fe76:	je     0x40fea0
  40fe78:	and    DWORD PTR [edi+0x7],edi
  40fe7b:	clc    
  40fe7c:	pop    ss
  40fe7d:	(bad)  
  40fe7e:	pop    ds
  40fe7f:	mov    ch,0xe4
  40fe81:	in     eax,dx
  40fe82:	push   ebp
  40fe83:	sti    
  40fe84:	int3   
  40fe85:	lock jl 0x40fe70
  40fe88:	(bad)  
  40fe89:	stos   DWORD PTR es:[edi],eax
  40fe8a:	add    al,0xc1
  40fe8c:	jle    0x40fe4f
  40fe8e:	jle    0x40fe9c
  40fe90:	enter  0x71ca,0x3e
  40fe94:	jge    0x40fe77
  40fe96:	and    bl,bl
  40fe98:	add    bl,BYTE PTR [esi+0x1c4dea9d]
  40fe9e:	mov    eax,ds:0x24e102d0
  40fea3:	in     al,0x1b
  40fea5:	jmp    DWORD PTR [ebx+0x2d]
  40fea8:	ins    BYTE PTR es:[edi],dx
  40fea9:	jecxz  0x40feaa
  40feab:	fcomp  QWORD PTR [ecx]
  40fead:	es aaa 
  40feaf:	cmp    BYTE PTR [ecx-0x5a],dl
  40feb2:	repz idiv ebx
  40feb5:	test   DWORD PTR [edi+0x76cdcbf0],edi
  40febb:	and    al,0x0
  40febd:	pop    eax
  40febe:	fs ja  0x40fe45
  40fec1:	inc    ebp
  40fec2:	dec    ebx
  40fec3:	call   0x8acb:0x2e6c4489
  40feca:	sbb    BYTE PTR [edx+0x4d5f5dc1],al
  40fed0:	dec    di
  40fed2:	imul   eax,ebp,0x70cdbcd9
  40fed8:	lds    esp,FWORD PTR [ebp+0x1f3d16f4]
  40fede:	ds aad 0xe5
  40fee1:	call   DWORD PTR [edi]
  40fee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee4:	in     eax,0x53
  40fee6:	scas   al,BYTE PTR es:[edi]
  40fee7:	imul   ebx,ebp,0x9580c1da
  40feed:	jne    0x40feb8
  40feef:	push   edx
  40fef0:	(bad)  
  40fef1:	add    al,0xb5
  40fef3:	push   ds
  40fef4:	jecxz  0x40fef4
  40fef6:	sub    al,0x51
  40fef8:	pop    ebp
  40fef9:	mov    ch,bl
  40fefb:	sbb    eax,0x93013d82
  40ff00:	loope  0x40fe9c
  40ff02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff03:	pop    ds
  40ff04:	and    dx,WORD PTR [edx+ebx*4-0x3d]
  40ff09:	sub    DWORD PTR [ecx],esi
  40ff0b:	(bad)
  40ff0e:	fucom  st(4)
  40ff10:	addr16 sbb eax,0x1bf9f83d
  40ff16:	mov    bl,0xf6
  40ff18:	sbb    ah,BYTE PTR [edi-0x30]
  40ff1b:	sub    cl,BYTE PTR [eax+0x1a0165dd]
  40ff21:	std    
  40ff22:	mov    ch,0xc1
  40ff24:	sbb    BYTE PTR [ebx+edi*1+0x56],bl
  40ff28:	int3   
  40ff29:	xor    al,BYTE PTR [edi]
  40ff2b:	and    DWORD PTR [ecx-0x714886dc],esp
  40ff31:	mov    eax,ds:0xb9b241d6
  40ff36:	inc    edx
  40ff37:	mov    ebp,0x3dbe6d72
  40ff3c:	mov    esi,0xdc4e53f2
  40ff41:	xchg   edx,eax
  40ff42:	jp     0x40ff88
  40ff44:	imul   edx
  40ff46:	and    BYTE PTR [edi-0x39ccc46b],0x28
  40ff4d:	loop   0x40fee2
  40ff4f:	lds    esp,FWORD PTR [esi+edx*1-0x61f42f07]
  40ff56:	sub    DWORD PTR [ebp+0x53],0x4d
  40ff5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff5b:	mov    ds:0xb9a541ac,eax
  40ff60:	adc    cl,BYTE PTR [eax]
  40ff62:	dec    ecx
  40ff63:	dec    ebp
  40ff64:	and    eax,edx
  40ff66:	xchg   DWORD PTR [edi],esp
  40ff68:	pop    eax
  40ff69:	or     BYTE PTR [ebp+0x67],dl
  40ff6c:	iret   
  40ff6d:	sub    al,0x78
  40ff6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff70:	sub    ecx,ebx
  40ff72:	jmp    0x19f7381a
  40ff77:	call   0x44a9a18a
  40ff7c:	rol    DWORD PTR es:[esi+0x7e],cl
  40ff80:	xor    eax,DWORD PTR [eax]
  40ff82:	fldenv [edi]
  40ff84:	pushf  
  40ff85:	scas   al,BYTE PTR es:[edi]
  40ff86:	cli    
  40ff87:	jo     0x40fff4
  40ff89:	rcr    DWORD PTR [ebp-0x7e],0xfa
  40ff8d:	sbb    ebx,esp
  40ff8f:	and    dl,0x87
  40ff92:	mov    ah,0x12
  40ff94:	dec    eax
  40ff95:	or     DWORD PTR [edi],edi
  40ff97:	push   esp
  40ff98:	and    eax,0xedf461e2
  40ff9d:	push   0xffffffd0
  40ff9f:	mov    DWORD PTR [edx],eax
  40ffa1:	frstor [ebx-0x6]
  40ffa4:	or     edx,DWORD PTR [edx+eiz*8+0x48a17ae0]
  40ffab:	xchg   edi,eax
  40ffac:	mov    bh,bh
  40ffae:	dec    edi
  40ffaf:	shl    DWORD PTR cs:[ecx],1
  40ffb2:	add    ch,bl
  40ffb4:	loopne 0x40ffdb
  40ffb6:	mov    edx,ebx
  40ffb8:	(bad)  
  40ffb9:	out    0x53,eax
  40ffbb:	leave  
  40ffbc:	enter  0x12da,0xbc
  40ffc0:	jnp    0x410038
  40ffc2:	sub    eax,0x70ffdb8e
  40ffc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc8:	add    ebp,DWORD PTR [eax-0x43bfa823]
  40ffce:	enter  0x1bda,0xc0
  40ffd2:	imul   esp,edx,0x3c
  40ffd5:	jns    0x40fff3
  40ffd7:	popa   
  40ffd8:	out    0xd8,al
  40ffda:	mov    ds:0xdcf5e259,al
  40ffdf:	mov    ebx,0x7d664a47
  40ffe4:	pop    ds
  40ffe5:	retf   0xc2cd
  40ffe8:	int3   
  40ffe9:	ja     0x410036
  40ffeb:	(bad)  
  40ffec:	jecxz  0x410059
  40ffee:	je     0x410015
  40fff0:	adc    al,0x7e
  40fff2:	stos   BYTE PTR es:[edi],al
  40fff3:	mov    bl,0x1b
  40fff5:	jmp    0x8cfd3d3a
  40fffa:	jb     0x40ffda
  40fffc:	jne    0x410071
  40fffe:	xchg   esi,eax
  40ffff:	sub    al,0xb6
  410001:	scas   eax,DWORD PTR es:[edi]
  410002:	in     al,0xf0
  410004:	push   eax
  410005:	fiadd  WORD PTR [ebx-0x581852ea]
  41000b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41000c:	(bad)  
  41000d:	fst    DWORD PTR [ebx]
  41000f:	inc    edx
  410010:	frstor [edx+0x2534aee5]
  410016:	cmp    eax,0xe47a459b
  41001b:	iret   
  41001c:	jnp    0x40ffbd
  41001e:	xor    eax,0xfdb32cca
  410023:	or     al,0x8e
  410025:	call   0xc90e:0xfc3a6ed3
  41002c:	sbb    BYTE PTR [edx-0x1d],bl
  41002f:	jnp    0x40ffc5
  410031:	inc    eax
  410032:	and    dl,ah
  410034:	push   esi
  410035:	fwait
  410036:	daa    
  410037:	repnz retf 0x6618
  41003b:	pop    ebp
  41003c:	mov    edi,0x1c671330
  410041:	ja     0x40ffdb
  410043:	adc    esi,DWORD PTR [esi+0x65]
  410046:	push   cs
  410047:	jns    0x40ffe0
  410049:	sbb    al,0x77
  41004b:	or     BYTE PTR [ebp-0x99ad680],cl
  410051:	pop    ds
  410052:	mov    ebp,0xf37c4648
  410057:	xor    ch,cl
  410059:	mov    ebp,0xfc3aa6b3
  41005e:	jmp    0x7c34:0xbbf4000
  410065:	test   eax,esp
  410067:	icebp  
  410068:	cmp    ebp,ebp
  41006a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41006b:	rol    al,cl
  41006d:	jecxz  0x4100aa
  41006f:	xor    BYTE PTR ds:0xbedff0e2,dh
  410075:	and    DWORD PTR [edx+0x3],ebp
  410078:	pop    ebp
  410079:	dec    ecx
  41007a:	in     al,dx
  41007b:	(bad)  
  41007c:	daa    
  41007d:	sbb    BYTE PTR [ecx-0x18],bh
  410080:	call   0xbc1:0x50bdf42f
  410087:	rcr    DWORD PTR [esi+0x20],cl
  41008a:	shl    DWORD PTR [edx],1
  41008c:	jg     0x41004a
  41008e:	div    esp
  410090:	in     al,0xc2
  410092:	shr    DWORD PTR [edx],1
  410094:	jle    0x4100c0
  410096:	cwde   
  410097:	xor    al,0x63
  410099:	jbe    0x410058
  41009b:	(bad)  
  41009c:	mov    bh,0xcb
  41009e:	adc    BYTE PTR [edx-0x44],dh
  4100a1:	mov    bl,0x29
  4100a3:	aas    
  4100a4:	adc    al,0xa2
  4100a6:	out    dx,eax
  4100a7:	pop    es
  4100a8:	and    edx,DWORD PTR [edx+ebx*2-0x5f]
  4100ac:	pop    esi
  4100ad:	imul   ecx,DWORD PTR [eax+eiz*8-0x6b],0x7ede27a2
  4100b5:	or     ebp,DWORD PTR [ebx]
  4100b7:	sub    al,BYTE PTR [esi+0x3647378d]
  4100bd:	inc    eax
  4100be:	clc    
  4100bf:	jo     0x4100f3
  4100c1:	pop    es
  4100c2:	mov    ecx,eax
  4100c4:	pop    edi
  4100c5:	jo     0x4100f7
  4100c7:	test   al,0x16
  4100c9:	jo     0x4100e9
  4100cb:	loope  0x410104
  4100cd:	inc    ebp
  4100ce:	add    BYTE PTR [edx+eiz*8],0x8d
  4100d2:	pop    edi
  4100d3:	adc    ah,BYTE PTR [ecx+0x58]
  4100d6:	fwait
  4100d7:	mov    ebp,0xed560350
  4100dc:	lods   al,BYTE PTR ds:[esi]
  4100dd:	cmp    eax,0xa9c852e9
  4100e2:	ja     0x4100c0
  4100e4:	cmp    BYTE PTR [ebp+0x4ba2c027],0x59
  4100eb:	add    bh,al
  4100ed:	imul   ecx,DWORD PTR [esi-0x73d08bf4],0x5f
  4100f4:	mov    ch,0xb1
  4100f6:	jb     0x41010b
  4100f8:	ret    
  4100f9:	jge    0x4100bb
  4100fb:	out    0xbe,al
  4100fd:	hlt    
  4100fe:	scas   al,BYTE PTR es:[edi]
  4100ff:	sub    DWORD PTR [ebx-0x73d1d368],0x79
  410106:	daa    
  410107:	add    al,0xb9
  410109:	jnp    0x410179
  41010b:	inc    ebp
  41010c:	sar    dh,cl
  41010e:	mov    edx,0x882674c2
  410113:	ja     0x4100a8
  410115:	into   
  410116:	adc    eax,0x53bb8a03
  41011b:	push   ds
  41011c:	es ss cld 
  41011f:	fwait
  410120:	sub    al,0x6a
  410122:	push   esp
  410123:	lock mov eax,0x7133fe41
  410129:	(bad)  
  41012a:	out    dx,al
  41012b:	outs   dx,BYTE PTR ds:[esi]
  41012c:	sbb    eax,0x829cc5e1
  410131:	cmp    DWORD PTR [ebx+eax*4],0x8928c8ef
  410138:	je     0x41016e
  41013a:	shl    DWORD PTR [ecx],cl
  41013c:	inc    edi
  41013d:	xchg   esi,eax
  41013e:	mov    ch,0xfe
  410140:	pusha  
  410141:	mov    bl,0x20
  410143:	(bad)  
  410145:	retf   0x1d9c
  410148:	in     al,0x83
  41014a:	pushf  
  41014b:	lea    ebx,gs:[ecx-0x4527f840]
  410152:	mov    edi,0xb5ad37df
  410157:	pop    ss
  410158:	sub    esi,DWORD PTR [edx]
  41015a:	test   al,0xf3
  41015c:	jl     0x410131
  41015e:	outs   dx,BYTE PTR ds:[esi]
  41015f:	mov    ds:0x5f54fd50,eax
  410164:	retf   
  410165:	xchg   esp,eax
  410166:	pop    ebx
  410167:	xor    edx,ebx
  410169:	push   esi
  41016a:	mov    dh,0xc6
  41016c:	scas   eax,DWORD PTR es:[edi]
  41016d:	push   esp
  41016e:	lahf   
  41016f:	jp     0x410112
  410171:	fldenv [edi+0xb]
  410174:	mov    edx,0xe23c214e
  410179:	sar    DWORD PTR [edi],0x90
  41017c:	add    eax,0xdd6e2d3b
  410181:	pop    esi
  410182:	pop    es
  410183:	xor    eax,0x213b5ceb
  410188:	(bad)  [ebx+0x6]
  41018b:	push   edi
  41018c:	arpl   sp,sp
  41018e:	and    eax,0x4b3e341f
  410193:	ja     0x41011b
  410195:	xchg   esp,eax
  410196:	arpl   WORD PTR [eax+0x46db80cd],ax
  41019c:	ret    
  41019d:	loopne 0x410209
  41019f:	clc    
  4101a0:	idiv   BYTE PTR [edi+eax*2-0x47]
  4101a4:	fdivr  DWORD PTR [ebp+0x16b93c41]
  4101aa:	pusha  
  4101ab:	dec    esi
  4101ac:	jecxz  0x4101f9
  4101ae:	mov    dh,0xb8
  4101b0:	repnz iret 
  4101b2:	xlat   BYTE PTR ds:[ebx]
  4101b3:	shl    DWORD PTR [ebp-0x3d2afb2c],0x49
  4101ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101bb:	adc    DWORD PTR [edx],esp
  4101bd:	push   esi
  4101be:	cmp    bl,bl
  4101c0:	add    al,0x92
  4101c2:	mov    ss,WORD PTR [ebx]
  4101c4:	dec    edi
  4101c5:	div    DWORD PTR [edi]
  4101c7:	mov    bh,0x12
  4101c9:	adc    DWORD PTR [ebp-0x6a],esp
  4101cc:	rol    BYTE PTR [ebp-0x55dad0ee],0xc2
  4101d3:	ss mov esp,ebp
  4101d6:	mov    al,0x3e
  4101d9:	lds    eax,FWORD PTR [ebx+0x65]
  4101dc:	outs   dx,BYTE PTR ds:[esi]
  4101dd:	dec    esi
  4101de:	xchg   esi,eax
  4101df:	into   
  4101e0:	stos   DWORD PTR es:[edi],eax
  4101e1:	sti    
  4101e2:	adc    BYTE PTR [ecx-0x55],bl
  4101e5:	fucomp st(6)
  4101e7:	pop    ds
  4101e8:	neg    BYTE PTR [esi]
  4101ea:	jp     0x410222
  4101ec:	mov    bl,BYTE PTR [ecx]
  4101ee:	mov    ah,0x18
  4101f0:	aaa    
  4101f1:	fstp   DWORD PTR [eax-0x80]
  4101f4:	data16 cmp bl,BYTE PTR [ecx]
  4101f7:	imul   esi,edx,0x136fdf7f
  4101fd:	jmp    0x410278
  4101ff:	mov    bh,0x1a
  410201:	inc    esi
  410202:	and    DWORD PTR [ecx-0x76],esp
  410205:	clc    
  410206:	es xchg edi,eax
  410208:	(bad)  
  410209:	pop    esi
  41020a:	daa    
  41020b:	inc    ecx
  41020c:	cmp    dl,BYTE PTR [eax+0x543c1a93]
  410212:	sahf   
  410213:	cmp    al,0x43
  410215:	mov    cl,0x7a
  410217:	stos   DWORD PTR es:[edi],eax
  410218:	push   0x2c
  41021a:	cmc    
  41021b:	jg     0x41022c
  41021d:	dec    sp
  41021f:	(bad)  
  410220:	loopne 0x410274
  410222:	jmp    0xc7fa62cc
  410227:	and    al,0x17
  410229:	xchg   BYTE PTR [edx],bh
  41022b:	icebp  
  41022c:	shl    ch,1
  41022e:	imul   esp,DWORD PTR [edi-0x210ea7e],0xffffffd4
  410235:	lahf   
  410236:	push   esi
  410237:	fnsave [esi+0xc]
  41023a:	sub    edi,DWORD PTR [esi+eax*4-0x2d66aae0]
  410241:	stos   DWORD PTR es:[edi],eax
  410242:	cs pop ebp
  410244:	sbb    ch,BYTE PTR [edx-0x18]
  410247:	pop    ecx
  410248:	jecxz  0x41020e
  41024a:	ror    ah,1
  41024c:	xchg   ebx,eax
  41024d:	pop    esp
  41024e:	mov    bh,0xf7
  410250:	sub    DWORD PTR [eax+edx*8+0x2a0fdf91],edi
  410257:	neg    al
  410259:	jne    0x410278
  41025b:	add    DWORD PTR [ebx-0x78],edx
  41025e:	xchg   bh,bl
  410260:	(bad)  
  410261:	pop    eax
  410262:	addr16 push 0x40c2f5c9
  410268:	loopne 0x4102da
  41026a:	(bad)  [edi-0x6]
  41026d:	push   ecx
  41026e:	mov    esp,esp
  410270:	std    
  410271:	out    dx,eax
  410272:	add    eax,0x2b754bdc
  410277:	cmc    
  410278:	and    edi,ebp
  41027a:	xor    BYTE PTR [ecx+0x6a5d012b],dh
  410280:	cs or  ah,bl
  410283:	mov    ds:0x5442bb3b,eax
  410288:	lahf   
  410289:	xchg   esp,eax
  41028a:	xchg   edx,eax
  41028b:	lds    ebp,FWORD PTR [edi]
  41028d:	or     esp,DWORD PTR [ecx]
  41028f:	hlt    
  410290:	push   edx
  410291:	sub    al,0x50
  410293:	das    
  410294:	fwait
  410295:	and    eax,0x9203fa14
  41029a:	jmp    0x41030e
  41029c:	(bad)  
  41029d:	push   cs
  41029e:	iret   
  41029f:	pop    ebx
  4102a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a1:	mov    al,ds:0x4fdd50f
  4102a6:	jl     0x41030a
  4102a8:	xchg   edx,eax
  4102a9:	outs   dx,DWORD PTR ds:[esi]
  4102aa:	les    ebp,FWORD PTR [ebx+0x4f]
  4102ad:	mov    ds:0xf275bb14,eax
  4102b2:	rcr    BYTE PTR [edx],cl
  4102b4:	aaa    
  4102b5:	rcr    ah,0xb6
  4102b8:	xchg   esi,eax
  4102b9:	leave  
  4102ba:	fcom   QWORD PTR [edi-0x3e]
  4102bd:	sti    
  4102be:	cs push cs
  4102c0:	icebp  
  4102c1:	xor    ah,BYTE PTR [ebp-0x24]
  4102c4:	mov    esi,0x6010dd9e
  4102c9:	retf   0x6ff6
  4102cc:	retf   
  4102cd:	cld    
  4102ce:	xor    DWORD PTR [ebp+0x63ad265a],ecx
  4102d4:	pusha  
  4102d5:	iret   
  4102d6:	cmp    DWORD PTR [esp+esi*4],esp
  4102d9:	bswap  ebx
  4102db:	div    dh
  4102dd:	add    eax,0x592096d7
  4102e2:	or     DWORD PTR ss:[esi],0x31
  4102e6:	jnp    0x4102c8
  4102e8:	add    ebx,edx
  4102ea:	aaa    
  4102eb:	add    bh,BYTE PTR gs:[edi+eax*2-0x23]
  4102f0:	ss adc eax,eax
  4102f3:	ins    BYTE PTR es:[edi],dx
  4102f4:	push   cs
  4102f5:	xchg   edi,eax
  4102f6:	enter  0xeecf,0x38
  4102fa:	xor    ch,BYTE PTR [edi-0x5a]
  4102fd:	outs   dx,BYTE PTR ds:[esi]
  4102fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ff:	sub    eax,DWORD PTR [esi+0x1eb0a360]
  410305:	int3   
  410306:	mov    ds:0xaeb1e7e4,al
  41030b:	or     al,0xc5
  41030d:	dec    ebp
  41030e:	fwait
  41030f:	imul   esp,DWORD PTR [edi+0x5f],0xffffffac
  410313:	loopne 0x4102a0
  410315:	inc    edx
  410316:	in     eax,0x6c
  410318:	lahf   
  410319:	mov    al,ds:0x3c27f8ac
  41031e:	rcr    dh,0xaf
  410321:	pusha  
  410322:	sub    BYTE PTR [edx+0x5b],ch
  410325:	cli    
  410326:	push   ss
  410327:	add    cl,BYTE PTR [eax-0x10e2006b]
  41032d:	mov    eax,ds:0xbe6895b0
  410332:	mov    edi,0xd9bcfa58
  410337:	mov    bh,0x81
  410339:	mov    BYTE PTR [edx-0x683e054f],0x8c
  410340:	test   BYTE PTR [ecx+0x19],dh
  410343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410344:	pop    edi
  410345:	popa   
  410346:	stos   DWORD PTR es:[edi],eax
  410347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410348:	or     DWORD PTR [ebx],0x7c85e6e9
  41034e:	add    DWORD PTR [edx+0x7e],esi
  410351:	pusha  
  410352:	adc    BYTE PTR [edi+ebp*8-0x36ed2351],0x14
  41035a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41035b:	imul   edi,DWORD PTR gs:[edx+0x4af09f1b],0x75aa6b4b
  410366:	jle    0x41035a
  410368:	mov    eax,DWORD PTR [eax+0x59776a31]
  41036e:	add    eax,0xc98f3935
  410373:	dec    ebx
  410374:	jns    0x410384
  410376:	clc    
  410377:	test   al,0xe8
  410379:	sbb    eax,DWORD PTR [edi-0x7feaff5f]
  41037f:	(bad)  
  410381:	sti    
  410382:	mov    edx,DWORD PTR [eax]
  410384:	sbb    edx,edi
  410386:	lods   al,BYTE PTR ds:[esi]
  410387:	and    ch,dl
  410389:	call   0x94889b03
  41038e:	mov    bh,0xaf
  410390:	fdivr  DWORD PTR [ebx]
  410392:	dec    esi
  410393:	jmp    DWORD PTR [eax+0x77]
  410396:	add    bl,ch
  410398:	fisub  DWORD PTR [ebp+eiz*2-0x6a4599d7]
  41039f:	push   ebp
  4103a0:	sbb    ecx,DWORD PTR [edi+0x47]
  4103a3:	cmp    DWORD PTR [ecx],0xfffffff5
  4103a6:	daa    
  4103a7:	mov    eax,ds:0xa2fb3cfd
  4103ac:	xor    BYTE PTR [ecx+0x48],ah
  4103af:	xchg   ebp,eax
  4103b0:	dec    ebp
  4103b1:	cs jg  0x4103dc
  4103b4:	call   FWORD PTR [ecx-0x46c2deda]
  4103ba:	std    
  4103bb:	repnz repz fild WORD PTR [bx-0x1055]
  4103c2:	je     0x4103e8
  4103c4:	xchg   ecx,eax
  4103c5:	xchg   ebp,edx
  4103c7:	pop    edi
  4103c8:	es pusha 
  4103ca:	xchg   edx,eax
  4103cb:	jnp    0x4103f2
  4103cd:	in     eax,dx
  4103ce:	call   0xe5a3:0xd2d846f1
  4103d5:	or     edi,DWORD PTR [esi+0x11]
  4103d8:	jecxz  0x41036b
  4103da:	push   0x91500b07
  4103df:	mov    DWORD PTR [ecx],esi
  4103e1:	add    DWORD PTR [esp+edx*8],esp
  4103e4:	jl     0x4103c3
  4103e6:	test   BYTE PTR [edi+0x52e61094],al
  4103ec:	xor    eax,0xbd0eea2b
  4103f1:	hlt    
  4103f2:	dec    esi
  4103f3:	out    dx,eax
  4103f4:	sbb    ebp,DWORD PTR [edx-0x2031ccea]
  4103fa:	out    dx,eax
  4103fb:	ret    
  4103fc:	mov    cl,0xb2
  4103fe:	addr16 lahf 
  410400:	mov    cl,0x87
  410402:	inc    ebx
  410403:	inc    esp
  410404:	sbb    BYTE PTR [ebp-0x3eda7007],al
  41040a:	gs hlt 
  41040c:	mov    WORD PTR [edx-0x62],?
  41040f:	sbb    bl,BYTE PTR [eax-0x15143ad1]
  410415:	push   0x2b3c68b2
  41041a:	pop    esi
  41041b:	mov    al,bh
  41041d:	es jns 0x410452
  410420:	pop    esi
  410421:	in     al,0x46
  410423:	test   ecx,ebx
  410425:	int3   
  410426:	sbb    eax,0x1e6d44c3
  41042b:	sbb    ah,BYTE PTR gs:[esi]
  41042e:	(bad)  
  41042f:	or     DWORD PTR [ebx+0x77],ebp
  410432:	jge    0x410443
  410434:	in     eax,0x57
  410436:	ret    0x51e7
  410439:	cmp    eax,0x661dc58d
  41043e:	clc    
  41043f:	mov    bl,0xe3
  410441:	(bad)  
  410442:	pusha  
  410443:	mov    ebx,DWORD PTR [ecx-0x49c031f4]
  410449:	enter  0x1adb,0xe6
  41044d:	sar    DWORD PTR [edi+0x1f],0x16
  410451:	cmp    ebp,DWORD PTR [edi-0x62]
  410454:	out    0x86,al
  410456:	add    bh,cl
  410458:	cwde   
  410459:	push   ds
  41045a:	or     dl,bl
  41045c:	pop    eax
  41045d:	mov    ebx,0xb6a45607
  410462:	(bad)  
  410463:	js     0x41049c
  410465:	retf   0x1734
  410468:	sbb    bh,al
  41046a:	in     al,dx
  41046b:	js     0x4104c8
  41046d:	jb     0x4103fe
  41046f:	lds    eax,FWORD PTR [edi+0x34]
  410472:	addr16 dec edi
  410474:	mov    BYTE PTR [edx],cl
  410476:	xor    eax,0xc8cdf03
  41047b:	jae    0x41045c
  41047d:	pop    ebp
  41047e:	jl     0x410433
  410480:	adc    eax,0x69d43b92
  410485:	sbb    al,0xdb
  410487:	jge    0x41042a
  410489:	jae    0x410442
  41048b:	test   eax,0x978e4a3a
  410490:	and    ecx,ebx
  410492:	jmp    0xae26:0x273547c
  410499:	xor    edx,DWORD PTR [edi]
  41049b:	mov    ecx,DWORD PTR [ebx-0x6f]
  41049e:	(bad)  
  41049f:	jno    0x4104e4
  4104a1:	inc    edx
  4104a2:	imul   esi,DWORD PTR [ebx],0x23
  4104a5:	outs   dx,DWORD PTR ds:[esi]
  4104a6:	pop    ecx
  4104a7:	gs or  al,0xbe
  4104aa:	mov    DWORD PTR [edi+0x20fd5271],ecx
  4104b0:	inc    edi
  4104b1:	push   es
  4104b2:	mov    ebx,0xe206096e
  4104b7:	pushf  
  4104b8:	mov    ds:0x597c132e,eax
  4104bd:	lods   eax,DWORD PTR ds:[esi]
  4104be:	dec    edi
  4104bf:	pop    eax
  4104c0:	arpl   dx,sp
  4104c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c3:	pop    esi
  4104c4:	and    DWORD PTR [ebp+ebp*1+0x6b],ebx
  4104c8:	sbb    al,0x4c
  4104ca:	xchg   ebx,eax
  4104cb:	push   ss
  4104cc:	std    
  4104cd:	xor    al,0xca
  4104cf:	(bad)  
  4104d1:	pop    ecx
  4104d2:	cli    
  4104d3:	sub    esi,DWORD PTR [edi-0x7a3ffe12]
  4104d9:	cmp    al,cl
  4104db:	mov    al,0x61
  4104dd:	adc    al,0x53
  4104df:	add    BYTE PTR ds:0x62b8eaef,bh
  4104e5:	jmp    0x41051e
  4104e7:	lods   eax,DWORD PTR ds:[esi]
  4104e8:	dec    esp
  4104e9:	push   edx
  4104ea:	cmp    al,0x93
  4104ec:	xchg   ecx,eax
  4104ed:	mov    ch,0xca
  4104ef:	or     BYTE PTR [ebp-0x46],ah
  4104f2:	pop    es
  4104f3:	and    bh,BYTE PTR [edi+0x2f]
  4104f6:	(bad)  [esi+0x60]
  4104f9:	int    0x1b
  4104fb:	xor    eax,0x48b8c805
  410500:	jnp    0x4104d1
  410502:	cmp    al,0x82
  410504:	jmp    FWORD PTR [esi+0x56]
  410507:	dec    edi
  410508:	repz add edi,esi
  41050b:	lea    edi,[ecx+0x51e7c539]
  410511:	push   esi
  410512:	push   esp
  410513:	pop    eax
  410514:	into   
  410515:	je     0x410593
  410517:	xor    bh,BYTE PTR [edi-0x29]
  41051a:	je     0x4104b3
  41051c:	add    ah,BYTE PTR [edi+0xe]
  41051f:	or     eax,0x6f3efe6e
  410524:	add    edx,0xfffffff6
  410527:	and    dl,BYTE PTR [di+0x45f3]
  41052c:	and    ch,BYTE PTR [eax]
  41052e:	and    BYTE PTR [ebx],dh
  410530:	imul   ecx,DWORD PTR [esi],0x3b
  410533:	dec    ecx
  410534:	ins    BYTE PTR es:[edi],dx
  410535:	cld    
  410536:	shl    DWORD PTR [edx+0x259324d5],cl
  41053c:	jnp    0x410593
  41053e:	adc    DWORD PTR [edx],0x9da08be
  410544:	daa    
  410545:	retf   0x8d5c
  410548:	ins    BYTE PTR es:[edi],dx
  410549:	mov    BYTE PTR [esp+eax*8+0x55],bh
  41054d:	xor    edx,DWORD PTR ds:0xc99cc14a
  410553:	mul    BYTE PTR [edx+esi*2-0x246e5876]
  41055a:	loop   0x41053a
  41055c:	cmp    bh,BYTE PTR [edx-0x58]
  41055f:	gs push esp
  410561:	push   ss
  410562:	lahf   
  410563:	loop   0x4105c4
  410565:	or     eax,0xb480be97
  41056a:	cld    
  41056b:	mov    ebx,0x7e8f531
  410570:	jns    0x410579
  410572:	sti    
  410573:	fidiv  WORD PTR [eax]
  410575:	adc    BYTE PTR [ebx],0x35
  410578:	aam    0x4f
  41057a:	dec    ebx
  41057b:	xchg   BYTE PTR [edx],dl
  41057d:	push   edx
  41057e:	add    bh,dl
  410580:	pusha  
  410581:	push   ebx
  410582:	sbb    eax,0x824ed7ff
  410587:	cmp    esi,0xffffffca
  41058a:	dec    eax
  41058b:	rep stos BYTE PTR es:[edi],al
  41058d:	mov    dl,0x7b
  41058f:	mov    ah,BYTE PTR [eax+0x60]
  410592:	add    DWORD PTR [edx+0x57],ebp
  410595:	inc    ebp
  410596:	dec    edi
  410597:	dec    esp
  410598:	mov    eax,0xb49f6c4f
  41059d:	or     ebp,DWORD PTR [edi+edi*2+0x76]
  4105a1:	out    0xec,eax
  4105a3:	scas   al,BYTE PTR es:[edi]
  4105a4:	add    eax,DWORD PTR [edi+0x58]
  4105a7:	aam    0x23
  4105a9:	mov    edx,0xafe904b3
  4105ae:	jno    0x410555
  4105b0:	inc    ebx
  4105b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b2:	sub    BYTE PTR [edx+0x5e],ah
  4105b5:	std    
  4105b6:	outs   dx,DWORD PTR ds:[esi]
  4105b7:	aad    0x6
  4105b9:	push   0x60
  4105bb:	sub    eax,0x48e8487f
  4105c0:	or     eax,DWORD PTR [ebx+0x48]
  4105c3:	sub    ebp,DWORD PTR [ebp+0x51]
  4105c6:	xchg   esi,eax
  4105c7:	loope  0x410615
  4105c9:	cmp    DWORD PTR [ebx-0x708aba21],edi
  4105cf:	xchg   ebp,eax
  4105d0:	ret    
  4105d1:	mov    eax,0x89336282
  4105d6:	les    eax,FWORD PTR [edx-0x5f]
  4105d9:	out    dx,al
  4105da:	aas    
  4105db:	enter  0x6b09,0x95
  4105df:	sub    esi,DWORD PTR [ecx-0x59c5fdf2]
  4105e5:	jae    0x410603
  4105e7:	mov    cl,0x5a
  4105e9:	lds    ebp,FWORD PTR [eax]
  4105eb:	cli    
  4105ec:	(bad)  
  4105ed:	out    0x25,eax
  4105ef:	mov    eax,0x48fbca17
  4105f4:	dec    esp
  4105f5:	jne    0x4105b7
  4105f7:	jbe    0x410660
  4105f9:	mov    ebp,0x8729f71b
  4105fe:	fild   QWORD PTR [edi]
  410600:	xor    eax,0xeb0ec4fe
  410605:	aaa    
  410606:	stos   BYTE PTR es:[edi],al
  410607:	mov    edi,fs
  410609:	pop    eax
  41060a:	jp     0x410632
  41060c:	lahf   
  41060d:	mov    esi,DWORD PTR [edi+0x162cedff]
  410613:	dec    edi
  410614:	mov    esi,DWORD PTR [ebx-0x38a13bac]
  41061a:	adc    BYTE PTR [edx-0x67],dl
  41061d:	lods   al,BYTE PTR ds:[esi]
  41061e:	cmp    eax,0x805abc04
  410623:	push   esp
  410624:	clc    
  410625:	mov    edx,0xa2f29c80
  41062a:	imul   esi,DWORD PTR [ecx+0x24],0x775058c7
  410631:	je     0x41066a
  410633:	test   al,0x8d
  410635:	cvttps2pi mm2,QWORD PTR [edi+0x25]
  410639:	jecxz  0x41061b
  41063b:	push   eax
  41063c:	jb     0x4105ef
  41063e:	adc    DWORD PTR [ebx],esi
  410640:	retf   
  410641:	stos   BYTE PTR es:[edi],al
  410642:	leave  
  410643:	cmp    eax,edi
  410645:	jmp    0x2d8f:0xbd96eac
  41064c:	add    DWORD PTR [ecx-0x15],0x7b5e3612
  410653:	ficomp DWORD PTR [edi]
  410655:	push   esp
  410656:	xor    bl,BYTE PTR [edx+0x3b]
  410659:	cdq    
  41065a:	test   BYTE PTR [esi-0x2041b80c],bl
  410660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410661:	dec    esp
  410662:	ja     0x410611
  410664:	xchg   DWORD PTR [ebx],ebp
  410666:	stos   BYTE PTR es:[edi],al
  410667:	push   0x2f537dc3
  41066c:	dec    ebx
  41066d:	cmp    BYTE PTR ds:0xa6498cd9,dh
  410673:	sahf   
  410674:	adc    ah,BYTE PTR [eax+0x50]
  410677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410678:	repz stc 
  41067a:	lods   eax,DWORD PTR ds:[esi]
  41067b:	ficom  DWORD PTR [esi]
  41067d:	adc    ch,BYTE PTR [edx+0x11c80b50]
  410683:	push   ecx
  410684:	mov    dl,0x5e
  410686:	loopne 0x410618
  410688:	sahf   
  410689:	cmp    ah,BYTE PTR [eax]
  41068b:	in     al,0x68
  41068d:	imul   dl
  41068f:	and    ebp,esi
  410691:	adc    eax,DWORD PTR [eax+0x0]
  410694:	xchg   ebx,eax
  410695:	mov    ebp,esp
  410697:	or     BYTE PTR [edi+0x67],bl
  41069a:	and    al,0x17
  41069c:	leave  
  41069d:	push   edx
  41069e:	sub    al,0xd0
  4106a0:	xchg   ebp,eax
  4106a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a2:	dec    ecx
  4106a3:	mov    esi,0x8caa06a
  4106a8:	nop
  4106a9:	pop    esp
  4106aa:	xor    dh,BYTE PTR [esi-0x2bd18e5e]
  4106b0:	mov    al,0xee
  4106b2:	call   0xd9f2:0xad1f9e31
  4106b9:	out    0x5e,eax
  4106bb:	push   ebp
  4106bc:	fs mov eax,DWORD PTR es:[ebp-0x5b2cbbd1]
  4106c4:	inc    edx
  4106c5:	pop    ebp
  4106c6:	and    BYTE PTR [ebp+ebp*2-0x5b54a774],al
  4106cd:	enter  0x3462,0xd5
  4106d1:	std    
  4106d2:	push   0xffffffe4
  4106d4:	xchg   esi,eax
  4106d5:	(bad)  
  4106d6:	icebp  
  4106d7:	jnp    0x4106eb
  4106d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106da:	in     al,dx
  4106db:	and    ah,ah
  4106dd:	repz push esi
  4106df:	jae    0x410683
  4106e1:	mov    ah,0x5d
  4106e3:	cmp    DWORD PTR [eax-0x6a88fa8c],esi
  4106e9:	ror    DWORD PTR [edx-0x599ca7f6],cl
  4106ef:	mov    dl,0xdf
  4106f1:	shl    BYTE PTR [edx+0x60e3f146],1
  4106f7:	ss pop edx
  4106f9:	jnp    0x4106ac
  4106fb:	lea    ecx,[ebx-0x15548732]
  410701:	popf   
  410702:	nop
  410703:	sahf   
  410704:	push   edx
  410705:	xchg   ecx,eax
  410706:	mov    ecx,0x9c765808
  41070b:	sbb    bh,al
  41070d:	dec    ebp
  41070e:	int3   
  41070f:	(bad)  
  410711:	or     ch,BYTE PTR [esp+eiz*4+0x6ba1b545]
  410718:	out    dx,eax
  410719:	(bad)  
  41071a:	(bad)  
  41071b:	ins    BYTE PTR es:[edi],dx
  41071c:	stos   DWORD PTR es:[edi],eax
  41071d:	cmp    bl,ah
  41071f:	pushf  
  410720:	int    0xab
  410722:	popf   
  410723:	pop    esp
  410724:	jmp    0xe439:0x5836a110
  41072b:	nop
  41072c:	dec    ebp
  41072d:	inc    ebp
  41072e:	sahf   
  41072f:	add    ch,BYTE PTR [esi+0x2864d13e]
  410735:	(bad)  
  410736:	call   FWORD PTR [ebx]
  410738:	push   0x3d832246
  41073d:	sti    
  41073e:	and    BYTE PTR [ecx],ah
  410740:	sub    al,0x4b
  410742:	dec    esp
  410743:	retf   0xb2d5
  410746:	clc    
  410747:	and    BYTE PTR [ecx+0xa0c9d21],al
  41074d:	lahf   
  41074e:	(bad)  
  41074f:	jbe    0x410783
  410751:	lock nop
  410753:	inc    ebp
  410754:	and    ah,ch
  410756:	push   eax
  410757:	xor    eax,ecx
  410759:	push   edx
  41075a:	push   ebx
  41075b:	add    BYTE PTR [ebp+0x3f95ee52],dh
  410761:	cwde   
  410762:	out    0x12,eax
  410764:	jecxz  0x410736
  410766:	or     BYTE PTR [ebx],0x1f
  410769:	(bad)  [esi]
  41076b:	fldenv [edi+ebx*8-0x73]
  41076f:	cwde   
  410770:	push   ebp
  410771:	jbe    0x410797
  410773:	or     al,0x98
  410775:	ins    DWORD PTR es:[edi],dx
  410776:	(bad)  
  410777:	fstp   st(6)
  410779:	fisub  WORD PTR [edx+esi*4-0x3b690332]
  410780:	jmp    FWORD PTR [edi+0x29]
  410783:	lea    eax,[esp+edx*4-0x13c3f6c3]
  41078a:	jmp    0xf7994cef
  41078f:	test   eax,0xdf0eb92e
  410794:	inc    esp
  410795:	adc    BYTE PTR [ebx+0x4b80e7f8],bl
  41079b:	sbb    al,0x43
  41079d:	xchg   ebx,eax
  41079e:	xor    BYTE PTR [esi+0x6],ch
  4107a1:	xchg   DWORD PTR [ecx+0x34],esi
  4107a4:	jae    0x410772
  4107a6:	rcr    DWORD PTR [edx-0x3c44a6],1
  4107ac:	shl    DWORD PTR [eax+0x3f],0x51
  4107b0:	cld    
  4107b1:	push   edx
  4107b2:	inc    ebp
  4107b3:	ja     0x4107c8
  4107b5:	push   esi
  4107b6:	(bad)  
  4107b7:	jmp    0x1bd3:0x502ae662
  4107be:	cmp    BYTE PTR [ebx+esi*2+0x2b],ch
  4107c2:	add    BYTE PTR [edi-0x7d8eb92c],dl
  4107c8:	out    0xfe,eax
  4107ca:	dec    ebp
  4107cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107cc:	jno    0x4107ac
  4107ce:	jne    0x41083a
  4107d0:	pop    edi
  4107d1:	js     0x41084b
  4107d3:	scas   eax,DWORD PTR es:[edi]
  4107d4:	mov    ds:0xc714f5b7,eax
  4107d9:	popf   
  4107da:	lea    ebp,[esi-0x41]
  4107dd:	pop    esp
  4107de:	ss or  al,0xf0
  4107e1:	sbb    esp,0x6d
  4107e4:	or     cl,BYTE PTR [edx]
  4107e6:	sbb    eax,0x5010bbfb
  4107eb:	(bad)  
  4107ec:	stc    
  4107ed:	xor    BYTE PTR [ecx],dl
  4107ef:	out    0xbc,al
  4107f1:	cs xor cl,ch
  4107f4:	cli    
  4107f5:	xor    eax,0xa44a28ce
  4107fa:	jo     0x410819
  4107fc:	repz and eax,0xb50fdf7
  410802:	and    eax,0x38051040
  410807:	clc    
  410808:	xchg   esi,eax
  410809:	pop    ds
  41080a:	ins    BYTE PTR es:[edi],dx
  41080b:	into   
  41080c:	push   cs
  41080d:	out    dx,al
  41080e:	aaa    
  41080f:	sub    BYTE PTR [esi],al
  410811:	mov    ds:0x33eb7223,eax
  410816:	sub    eax,edx
  410818:	cmp    BYTE PTR [esi+0x1d822b03],dh
  41081e:	lahf   
  41081f:	adc    ebp,esi
  410821:	xchg   ecx,eax
  410822:	pop    edx
  410823:	popa   
  410824:	dec    eax
  410825:	jmp    0x81b7eb0
  41082a:	jae    0x41081a
  41082c:	in     al,dx
  41082d:	idiv   eax
  41082f:	add    DWORD PTR [ebp-0x95cf6f7],ecx
  410835:	jno    0x410839
  410837:	or     dl,0x88
  41083a:	fsub   QWORD PTR [edi-0x754a424d]
  410840:	sbb    DWORD PTR [ebx+ecx*4-0x59523533],esp
  410847:	pop    eax
  410848:	mov    bl,0x27
  41084a:	fnstenvw [esi]
  41084d:	xchg   esi,eax
  41084e:	mov    gs,WORD PTR [edx+0x1538c7c2]
  410854:	aas    
  410855:	xchg   esi,eax
  410856:	lds    ebx,FWORD PTR [eax-0x7]
  410859:	sub    al,0x6b
  41085b:	mov    ch,BYTE PTR [edx]
  41085d:	xchg   ecx,eax
  41085e:	inc    esi
  41085f:	retf   0x8ed6
  410862:	(bad)  
  410863:	push   esp
  410864:	neg    dl
  410866:	ins    BYTE PTR es:[edi],dx
  410867:	pop    ds
  410868:	sub    BYTE PTR [ebp-0x3d],al
  41086b:	das    
  41086c:	mov    edx,0x6c12f2df
  410871:	cmp    eax,0x478c169e
  410876:	add    al,al
  410878:	popf   
  410879:	add    ecx,DWORD PTR [eax+0x6f]
  41087c:	aam    0x11
  41087e:	ins    BYTE PTR es:[edi],dx
  41087f:	(bad)  
  410880:	mov    al,0xad
  410882:	iret   
  410883:	fnsave es:[edi+0x5f879094]
  41088a:	push   cs
  41088b:	arpl   ax,sp
  41088d:	cli    
  41088e:	jbe    0x410906
  410890:	xchg   esp,eax
  410891:	pop    edx
  410892:	adc    eax,0x663c7fb7
  410897:	mov    ch,0x9e
  410899:	std    
  41089a:	sti    
  41089b:	add    DWORD PTR [ecx-0x29],0xd078a980
  4108a2:	mov    ds:0xbd698beb,eax
  4108a7:	or     ch,bh
  4108a9:	sub    BYTE PTR [ebx+ebx*1-0x12cb5789],ch
  4108b0:	jecxz  0x4108e7
  4108b2:	stc    
  4108b3:	mov    ebx,0x5d6671b9
  4108b8:	mov    BYTE PTR [ebx-0xeeddb15],bl
  4108be:	jae    0x4108fc
  4108c0:	xor    dl,0xcb
  4108c3:	mov    eax,0x69cff0b3
  4108c8:	sub    dh,BYTE PTR [edi]
  4108ca:	jne    0x410910
  4108cc:	mov    WORD PTR [ecx+0x1a],ss
  4108cf:	mov    bh,0x8b
  4108d1:	xchg   ecx,eax
  4108d2:	or     eax,0x5df7c527
  4108d7:	sub    DWORD PTR [esi+0x1a41166f],esp
  4108dd:	mov    eax,0x8fcdf1e8
  4108e2:	inc    edi
  4108e3:	push   edx
  4108e4:	fistp  QWORD PTR [ebp-0x1e6df556]
  4108ea:	cmovb  eax,DWORD PTR [esi]
  4108ed:	cwde   
  4108ee:	imul   esi,DWORD PTR cs:[eax],0xff19806f
  4108f5:	jmp    0x98d0:0x19e7d505
  4108fc:	jmp    0x4108c9
  4108fe:	dec    ebp
  4108ff:	ins    DWORD PTR es:[edi],dx
  410900:	js     0x410943
  410902:	add    DWORD PTR [ebx],eax
  410904:	jle    0x41097c
  410906:	mov    dh,0x9a
  410908:	jl     0x410943
  41090a:	retf   0x15f7
  41090d:	fcomp  QWORD PTR [ebx-0x18]
  410910:	add    DWORD PTR [ebx],edx
  410912:	out    0x5d,al
  410914:	nop
  410915:	mov    DWORD PTR [edx-0x267fa23c],0x648cdb2a
  41091f:	push   edi
  410920:	mov    ds:0x3a0acca,al
  410925:	test   al,0xf0
  410927:	jns    0x410992
  410929:	in     al,dx
  41092a:	in     eax,dx
  41092b:	and    edi,esp
  41092d:	lea    edi,[edi]
  41092f:	xchg   ecx,eax
  410930:	int3   
  410931:	pop    es
  410932:	stc    
  410933:	sub    eax,0xecf7f2c3
  410938:	outs   dx,BYTE PTR ds:[esi]
  410939:	cmp    ecx,esi
  41093b:	js     0x4109b9
  41093d:	fdivr  QWORD PTR [eax-0x138d9b08]
  410943:	pop    eax
  410944:	push   ebp
  410945:	or     eax,0x7de8f490
  41094a:	xchg   edi,eax
  41094b:	inc    ebp
  41094c:	or     ah,0x18
  41094f:	push   edi
  410950:	or     al,BYTE PTR [esi-0x760c3e7b]
  410956:	mov    WORD PTR [ebp+0x79],?
  410959:	std    
  41095a:	xor    esi,DWORD PTR [ebx+0x39]
  41095d:	push   cs
  41095e:	retf   
  41095f:	cmp    DWORD PTR [ecx+0x65],ebx
  410962:	pop    ecx
  410963:	repnz (bad) 
  410965:	out    0x12,al
  410967:	pop    DWORD PTR [eax]
  410969:	dec    ecx
  41096a:	xchg   esi,eax
  41096b:	stc    
  41096c:	cmp    esp,ecx
  41096e:	in     eax,dx
  41096f:	nop
  410970:	mov    bl,0x30
  410972:	xor    al,0x54
  410974:	test   edi,esp
  410976:	sbb    eax,0x63accc90
  41097b:	mov    ebx,0x4f28154c
  410980:	popa   
  410981:	and    DWORD PTR [edi+0x53],ebx
  410984:	sbb    al,0x10
  410986:	and    BYTE PTR [ebx],ch
  410988:	push   ebp
  410989:	and    esi,esi
  41098b:	repz xor eax,0x82ddc6a4
  410991:	push   eax
  410992:	sahf   
  410993:	adc    ah,bh
  410995:	jae    0x4109af
  410997:	inc    ecx
  410998:	mov    WORD PTR [eax+0x36afa62e],fs
  41099e:	lock int 0xb9
  4109a1:	pop    ss
  4109a2:	sub    ebp,ebx
  4109a4:	add    BYTE PTR [ecx],0x9
  4109a7:	scas   al,BYTE PTR es:[edi]
  4109a8:	lods   eax,DWORD PTR ds:[esi]
  4109a9:	int    0xd5
  4109ab:	inc    esp
  4109ac:	pusha  
  4109ad:	dec    esi
  4109ae:	mov    edx,DWORD PTR [eax+0x29010463]
  4109b4:	ret    0xeba2
  4109b7:	pop    ds
  4109b8:	mov    eax,0xe04d0be1
  4109bd:	enter  0x2177,0xed
  4109c1:	cmp    BYTE PTR [edi],bh
  4109c3:	(bad)  
  4109c4:	xor    esp,DWORD PTR [ebp+ecx*8-0x9c35978]
  4109cb:	nop
  4109cc:	mov    al,ds:0x8e8c95af
  4109d1:	mov    cl,0xd9
  4109d3:	call   FWORD PTR [edi+esi*2-0x6b81317b]
  4109da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109db:	retf   0x85a0
  4109de:	cdq    
  4109df:	lea    ecx,[edi+0x7c7e29ab]
  4109e5:	xor    al,BYTE PTR [eax]
  4109e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e8:	cmp    eax,0x15377927
  4109ed:	dec    eax
  4109ee:	jmp    0x41099e
  4109f0:	cs adc eax,0xadccbce0
  4109f6:	adc    ah,BYTE PTR [ecx-0x3]
  4109f9:	fwait
  4109fa:	mov    ebx,gs
  4109fc:	int3   
  4109fd:	push   0x52
  4109ff:	jecxz  0x410a7a
  410a01:	push   ebx
  410a02:	adc    eax,0x2460a809
  410a07:	std    
  410a08:	dec    edi
  410a09:	cmp    al,0xbe
  410a0b:	aam    0x3f
  410a0d:	adc    DWORD PTR [esi],eax
  410a0f:	sub    al,BYTE PTR [eax+0x10]
  410a12:	push   ecx
  410a13:	pop    esp
  410a14:	test   edx,ebx
  410a16:	test   BYTE PTR [ebp-0x71],ch
  410a19:	repz sti 
  410a1b:	stos   DWORD PTR es:[edi],eax
  410a1c:	icebp  
  410a1d:	mov    eax,ds:0x65e1ddbf
  410a22:	lds    edx,FWORD PTR [ecx-0x31]
  410a25:	std    
  410a26:	push   eax
  410a27:	mov    al,0xb3
  410a29:	in     al,0x1c
  410a2b:	mov    esi,0x6dfbfd8a
  410a30:	sbb    ebx,DWORD PTR [edi+0x16e822d8]
  410a36:	jle    0x410a55
  410a38:	add    esi,DWORD PTR [ebx+0x64]
  410a3b:	push   ss
  410a3c:	stos   BYTE PTR es:[edi],al
  410a3d:	cmp    eax,0xbe197594
  410a42:	push   ebp
  410a43:	push   0x3ad1a6b0
  410a48:	ins    BYTE PTR es:[edi],dx
  410a49:	xchg   DWORD PTR [ecx+0x7369ff50],eax
  410a4f:	(bad)  
  410a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a51:	leave  
  410a52:	inc    esi
  410a53:	bt     DWORD PTR [esi],edi
  410a56:	mov    edx,0x389d506
  410a5b:	out    0x5f,eax
  410a5d:	(bad)  
  410a5f:	ret    
  410a60:	mov    ds:0x3b18c2a0,eax
  410a65:	or     dl,0xa9
  410a68:	stc    
  410a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a6a:	jb     0x410a2a
  410a6c:	mov    al,0xfc
  410a6e:	mov    WORD PTR [eax+0x565d3228],gs
  410a74:	shl    BYTE PTR [edx],cl
  410a76:	xor    al,0x17
  410a78:	retf   0x1ce3
  410a7b:	pop    edx
  410a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a7d:	(bad)  
  410a7e:	jns    0x410aba
  410a80:	pop    ebp
  410a81:	push   0x5d
  410a83:	lahf   
  410a84:	mov    cl,BYTE PTR [edx+0x35]
  410a87:	inc    esi
  410a88:	(bad)  
  410a89:	ins    DWORD PTR es:[edi],dx
  410a8a:	stc    
  410a8b:	outs   dx,BYTE PTR ds:[esi]
  410a8c:	mov    esi,DWORD PTR [esp+ebp*1-0x51cfcac7]
  410a93:	mov    ah,0x1
  410a95:	push   esp
  410a96:	test   eax,0x93ec526b
  410a9b:	bound  edi,QWORD PTR [ebp-0x6b]
  410a9e:	dec    ebp
  410a9f:	mov    eax,0x5f724a9d
  410aa4:	leave  
  410aa5:	mov    esp,0x83fdbc0b
  410aaa:	inc    eax
  410aab:	or     bh,al
  410aad:	inc    eax
  410aae:	mov    fs,WORD PTR [ecx-0x7f92b866]
  410ab4:	stos   DWORD PTR es:[edi],eax
  410ab5:	adc    eax,0x339064bf
  410aba:	dec    esi
  410abb:	scas   eax,DWORD PTR es:[edi]
  410abc:	aaa    
  410abd:	xchg   esi,eax
  410abe:	ficomp DWORD PTR [ebx-0x658fea79]
  410ac4:	mov    esp,0x8121e921
  410ac9:	in     al,dx
  410aca:	or     BYTE PTR ds:0x9e4ec728,al
  410ad0:	xor    DWORD PTR [esi-0x22],edx
  410ad3:	popa   
  410ad4:	mov    esi,0xeb82e0c9
  410ad9:	mov    eax,ds:0x760306eb
  410ade:	mov    ch,0xe7
  410ae0:	lea    ecx,[ebp+0x42]
  410ae3:	stc    
  410ae4:	fmul   DWORD PTR [edi]
  410ae6:	jne    0x410a76
  410ae8:	pop    esp
  410ae9:	loope  0x410ad4
  410aeb:	loope  0x410a7d
  410aed:	ret    
  410aee:	mov    edx,esp
  410af0:	push   es
  410af1:	iret   
  410af2:	sub    BYTE PTR [edx],0x82
  410af5:	push   edi
  410af6:	adc    al,0x68
  410af8:	jp     0x410aee
  410afa:	add    edi,edx
  410afc:	xchg   ecx,edx
  410afe:	jae    0x410abb
  410b00:	dec    esi
  410b01:	in     al,dx
  410b02:	and    dh,BYTE PTR [ecx+0x11191ce1]
  410b08:	popf   
  410b09:	push   ss
  410b0a:	cmp    bl,BYTE PTR [ebx]
  410b0c:	mov    eax,0xfe0a46a1
  410b11:	sbb    edi,DWORD PTR [edi+eiz*1]
  410b14:	inc    ebp
  410b15:	cdq    
  410b16:	push   ss
  410b17:	adc    BYTE PTR [edx+0x22],dh
  410b1a:	xor    al,0xc5
  410b1c:	sbb    dl,BYTE PTR [esi-0x646af063]
  410b22:	test   DWORD PTR [eax+0x786962e6],edi
  410b28:	push   0xffffffd1
  410b2a:	lods   al,BYTE PTR ds:[esi]
  410b2b:	hlt    
  410b2c:	(bad)  
  410b2d:	out    0xd7,al
  410b2f:	in     eax,dx
  410b30:	test   dl,bh
  410b32:	pop    esp
  410b33:	jae    0x410ad0
  410b35:	sbb    bh,ah
  410b37:	jno    0x410b69
  410b39:	lods   al,BYTE PTR ds:[esi]
  410b3a:	and    eax,0x994adb29
  410b3f:	jle    0x410b5e
  410b41:	fs loopne 0x410b05
  410b44:	jecxz  0x410bb3
  410b46:	and    BYTE PTR [eax+0x1f],dh
  410b49:	aam    0xf5
  410b4b:	mov    cl,0xf0
  410b4d:	sub    bh,BYTE PTR [ebx]
  410b4f:	dec    esp
  410b50:	add    bl,BYTE PTR [edi]
  410b52:	cmp    esi,DWORD PTR [esi]
  410b54:	ds sahf 
  410b56:	xor    eax,ebx
  410b58:	mov    bl,0x16
  410b5a:	ins    BYTE PTR es:[edi],dx
  410b5b:	or     esp,DWORD PTR [edi-0xb]
  410b5e:	dec    esi
  410b5f:	into   
  410b60:	mov    ah,0x6b
  410b62:	or     BYTE PTR [eax+0x1f],0xb4
  410b66:	sub    bh,bh
  410b68:	(bad)  
  410b69:	repnz rol DWORD PTR gs:[eax-0x13493359],1
  410b71:	loope  0x410b94
  410b73:	or     BYTE PTR [ebp-0x224606b9],al
  410b79:	dec    edx
  410b7a:	les    eax,FWORD PTR [edx+0x33]
  410b7d:	mov    cl,0x3e
  410b7f:	cs fs jbe 0x410b44
  410b83:	out    0x24,al
  410b85:	or     eax,0x11a22b0a
  410b8a:	ret    
  410b8b:	adc    al,0x22
  410b8d:	loope  0x410b9d
  410b8f:	shr    DWORD PTR [edx],1
  410b91:	test   al,0x95
  410b93:	push   cs
  410b94:	clc    
  410b95:	fwait
  410b96:	xor    esi,esp
  410b98:	retf   
  410b99:	push   0xffffff90
  410b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b9c:	mov    ds:0x59901dd8,al
  410ba1:	cs inc edx
  410ba3:	jp     0x410c1d
  410ba5:	nop
  410ba6:	bound  esp,QWORD PTR [ecx]
  410ba8:	jmp    0x9f4548d4
  410bad:	xor    BYTE PTR [edx],dl
  410baf:	push   ecx
  410bb0:	sbb    BYTE PTR [edx+0x7d88f1d8],al
  410bb6:	(bad)  
  410bb7:	cdq    
  410bb8:	push   ebp
  410bb9:	push   ds
  410bba:	(bad)  
  410bbc:	mov    esp,0x99b0bdb1
  410bc1:	jmp    FWORD PTR [esi+0x646ec60f]
  410bc7:	push   edi
  410bc8:	xor    eax,0x274c6bbf
  410bcd:	lock out 0xa1,al
  410bd0:	jmp    0x410bf4
  410bd2:	cmp    dl,0x54
  410bd5:	lods   eax,DWORD PTR ds:[esi]
  410bd6:	outs   dx,DWORD PTR ds:[esi]
  410bd7:	cmovle esi,DWORD PTR [edx]
  410bda:	cmp    ecx,DWORD PTR [ebx+0x67]
  410bdd:	jne    0x410b9f
  410bdf:	xchg   BYTE PTR [esi],ch
  410be1:	and    al,BYTE PTR [ecx-0x9]
  410be4:	(bad)  
  410be6:	das    
  410be7:	in     eax,0x85
  410be9:	not    BYTE PTR [esi]
  410beb:	gs pushf 
  410bed:	icebp  
  410bee:	scas   al,BYTE PTR es:[edi]
  410bef:	out    0x43,eax
  410bf1:	xlat   BYTE PTR ds:[ebx]
  410bf2:	test   al,0x8d
  410bf4:	sar    DWORD PTR [edi],1
  410bf6:	adc    eax,0x73852b2f
  410bfb:	into   
  410bfc:	leave  
  410bfd:	mov    ecx,0x7e303405
  410c02:	xor    eax,DWORD PTR [esi-0x56db97b3]
  410c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c09:	sub    eax,0x22d390c3
  410c0e:	and    dl,dh
  410c10:	add    BYTE PTR [eax+0x15beaaf7],ah
  410c16:	lahf   
  410c17:	cdq    
  410c18:	or     ebx,0x1e
  410c1b:	mov    edx,eax
  410c1d:	retf   
  410c1e:	loope  0x410c28
  410c20:	pop    esi
  410c21:	xchg   DWORD PTR [edi-0x32],ebp
  410c24:	mov    ch,0x2b
  410c26:	ret    
  410c27:	sub    bl,BYTE PTR ds:0x1ad0d76e
  410c2d:	xor    esi,ebp
  410c2f:	iret   
  410c30:	punpckhwd mm7,QWORD PTR [edi+0x40eb773e]
  410c37:	mov    bl,0x1e
  410c39:	aas    
  410c3a:	repnz int3 
  410c3c:	mov    ah,0xa9
  410c3e:	xlat   BYTE PTR ds:[ebx]
  410c3f:	inc    ebp
  410c40:	jge    0x410c03
  410c42:	inc    eax
  410c43:	sub    eax,0xf70e63b4
  410c48:	jno    0x410be5
  410c4a:	sahf   
  410c4b:	lds    edi,FWORD PTR [edi-0x2cd117ba]
  410c51:	test   eax,esi
  410c53:	ds sub al,0x73
  410c56:	stos   DWORD PTR es:[edi],eax
  410c57:	ror    DWORD PTR [edx*1+0x2803cf35],0x4b
  410c5f:	and    bl,BYTE PTR [eax+0x124414ae]
  410c65:	mov    ds:0x147b9cec,al
  410c6a:	dec    edi
  410c6b:	lods   al,BYTE PTR ds:[esi]
  410c6c:	aam    0xcb
  410c6e:	sub    DWORD PTR [ebx+0x33],esi
  410c71:	out    0x49,al
  410c73:	inc    ecx
  410c74:	push   0xd12a2f4f
  410c79:	and    eax,0xa2889717
  410c7e:	dec    edi
  410c7f:	add    dl,bl
  410c81:	push   0xfffffffa
  410c83:	xor    ecx,DWORD PTR [ecx]
  410c85:	mov    ecx,0x929d537
  410c8a:	or     bh,BYTE PTR [edi]
  410c8c:	bound  ebp,QWORD PTR [ebx]
  410c8e:	shr    BYTE PTR [eax+0x232984c9],cl
  410c94:	dec    eax
  410c95:	mov    cs,WORD PTR [edx]
  410c97:	mov    cl,0x8d
  410c99:	sbb    dl,BYTE PTR ds:0x6ef7b8e
  410c9f:	es jle 0x410d1e
  410ca2:	or     al,0xf
  410ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ca5:	mov    ch,0x1b
  410ca7:	in     eax,dx
  410ca8:	rol    BYTE PTR [esi-0xcfcaa50],1
  410cae:	test   al,0x54
  410cb0:	adc    ebx,DWORD PTR [ecx-0x276b205c]
  410cb6:	push   eax
  410cb7:	sub    DWORD PTR [edx],ebp
  410cb9:	dec    edx
  410cba:	ror    dh,0x52
  410cbd:	sbb    BYTE PTR [ebx-0x68e9ec20],cl
  410cc3:	mov    edx,0xfa34ed0e
  410cc8:	test   al,0x7c
  410cca:	rcl    BYTE PTR [eax-0x6e],1
  410ccd:	fdivr  DWORD PTR [ecx]
  410ccf:	cmp    DWORD PTR ds:[ecx-0x7],0x49
  410cd4:	mov    al,ds:0x440a6a7e
  410cd9:	cld    
  410cda:	mov    ds:0x5cf7810e,eax
  410cdf:	(bad)  
  410ce0:	cmc    
  410ce1:	add    cl,BYTE PTR [edx+0x38b60e08]
  410ce7:	and    al,0xcd
  410ce9:	call   0xc8e3:0xc8704f76
  410cf0:	pop    eax
  410cf1:	sar    BYTE PTR [ebx],1
  410cf3:	dec    edi
  410cf4:	pop    esi
  410cf5:	fidiv  DWORD PTR [edx]
  410cf7:	push   ebp
  410cf8:	sub    BYTE PTR [ebp+0x2bbb994a],al
  410cfe:	and    BYTE PTR [edi+ebx*4-0x27],0x35
  410d03:	not    BYTE PTR [eax]
  410d05:	or     al,0x15
  410d07:	neg    BYTE PTR [eax]
  410d09:	cmp    DWORD PTR [eax],edx
  410d0b:	mov    ss,WORD PTR [ebx+0x76]
  410d0e:	adc    eax,0xfaa8cf19
  410d13:	jns    0x410d66
  410d15:	inc    esi
  410d16:	sub    DWORD PTR [ebp-0x3a],eax
  410d19:	xor    al,0x74
  410d1b:	fstp   DWORD PTR [edi]
  410d1d:	into   
  410d1e:	xor    BYTE PTR [edi],bl
  410d20:	inc    ecx
  410d21:	add    al,0x52
  410d23:	add    eax,0x554f04aa
  410d28:	popa   
  410d29:	mov    edx,0x69680d38
  410d2e:	mov    DWORD PTR [edi+0x30c5dc77],0x824deb67
  410d38:	jge    0x410da7
  410d3a:	adc    cl,BYTE PTR [edi]
  410d3c:	hlt    
  410d3d:	push   edx
  410d3e:	mov    dl,BYTE PTR [esi+0x4f]
  410d41:	popf   
  410d42:	and    eax,0xed866cb5
  410d47:	push   edi
  410d48:	mov    esp,0xeb2712f0
  410d4d:	fnstenv [eax]
  410d4f:	jmp    0x6b5:0x7fe80f03
  410d56:	lea    esi,fs:[edi+0x32841639]
  410d5d:	pop    ebx
  410d5e:	dec    ecx
  410d5f:	push   edx
  410d60:	sbb    DWORD PTR [eax+ebx*2+0x5f],edi
  410d64:	mov    edi,0x761a4e2f
  410d69:	fild   DWORD PTR [ebx-0x2b26903b]
  410d6f:	or     BYTE PTR [ebp+0x5f],dl
  410d72:	sbb    cl,BYTE PTR [ebx-0x3d1c2dcf]
  410d78:	addr16 fcmovnu st,st(3)
  410d7b:	cmp    eax,0x9f06561
  410d80:	inc    edx
  410d81:	into   
  410d82:	in     al,dx
  410d83:	xlat   BYTE PTR ds:[ebx]
  410d84:	cmp    al,0xe4
  410d86:	push   fs
  410d88:	xchg   ecx,eax
  410d89:	in     al,0x52
  410d8b:	sub    BYTE PTR [ecx],bl
  410d8d:	add    ebp,ebx
  410d8f:	inc    esi
  410d90:	out    0x26,al
  410d92:	cmp    ch,0x59
  410d95:	daa    
  410d96:	cmp    eax,0x3b2ee735
  410d9b:	jl     0x410da3
  410d9d:	dec    ecx
  410d9e:	jae    0x410e0b
  410da0:	clc    
  410da1:	fisttp QWORD PTR [esi+0x3a]
  410da4:	xchg   ebp,eax
  410da5:	sbb    eax,0x9e39ec9d
  410daa:	mov    esi,0x39a776ae
  410daf:	out    0x47,eax
  410db1:	inc    esi
  410db2:	outs   dx,DWORD PTR ds:[esi]
  410db3:	repnz dec edi
  410db5:	dec    ecx
  410db6:	push   0x678b779d
  410dbb:	sbb    esi,ecx
  410dbd:	pop    es
  410dbe:	aad    0x9d
  410dc0:	scas   al,BYTE PTR es:[edi]
  410dc1:	mov    cl,0x25
  410dc3:	stos   DWORD PTR es:[edi],eax
  410dc4:	fdiv   st(2),st
  410dc6:	shl    BYTE PTR [ebx-0x755b576],0x3e
  410dcd:	(bad)  
  410dce:	mov    dh,0x6e
  410dd0:	xor    DWORD PTR [ecx+0x7c],0x36f1353f
  410dd7:	push   es
  410dd8:	jle    0x410e2b
  410dda:	add    al,0x7a
  410ddc:	loope  0x410dcd
  410dde:	xor    al,0xc8
  410de0:	jle    0x410df6
  410de2:	fdivr  DWORD PTR [ecx-0x5ad9744c]
  410de8:	cmp    esi,ebp
  410dea:	jg     0x410e60
  410dec:	adc    eax,0x86290b8a
  410df1:	push   es
  410df2:	cmc    
  410df3:	nop
  410df4:	and    al,BYTE PTR [ecx-0x4e]
  410df7:	pop    esi
  410df8:	sbb    bh,bl
  410dfa:	inc    edi
  410dfb:	mov    ds:0x1f5f11d8,eax
  410e00:	or     DWORD PTR ds:0xd46cb292,edx
  410e06:	jg     0x410e34
  410e08:	retf   
  410e09:	xchg   ecx,eax
  410e0a:	adc    al,0x89
  410e0c:	shr    BYTE PTR [edi+0x65],0x36
  410e10:	out    0x9,al
  410e12:	sbb    cl,BYTE PTR [edx-0x17]
  410e15:	mov    esi,eax
  410e17:	out    dx,al
  410e18:	dec    edx
  410e19:	mov    al,ds:0x715e2a36
  410e1e:	add    bl,ch
  410e20:	sub    edx,edi
  410e22:	lods   al,BYTE PTR ds:[esi]
  410e23:	(bad)  
  410e25:	icebp  
  410e26:	mov    dl,BYTE PTR [edx-0x5cb81755]
  410e2c:	setne  BYTE PTR [esi+0x5c1404b2]
  410e33:	sub    DWORD PTR [ebx-0x23],esp
  410e36:	dec    edi
  410e37:	mov    ebp,0xa7da1d57
  410e3c:	jl     0x410e10
  410e3e:	push   cs
  410e3f:	(bad)  
  410e41:	sub    al,0x9c
  410e43:	jnp    0x410ea3
  410e45:	out    0x3d,al
  410e47:	(bad)  
  410e48:	dec    ebx
  410e49:	inc    esp
  410e4a:	dec    ecx
  410e4b:	push   0x69239392
  410e50:	mov    cl,0x2c
  410e52:	adc    ch,BYTE PTR [edx]
  410e54:	mov    ebx,0x5aff2549
  410e59:	stos   DWORD PTR es:[edi],eax
  410e5a:	and    al,0x57
  410e5c:	and    eax,0xe317e8b0
  410e61:	mov    eax,0x9209c0ec
  410e66:	push   ecx
  410e67:	pushf  
  410e68:	xchg   ebx,eax
  410e69:	fistp  WORD PTR [ecx+0x69]
  410e6c:	mov    WORD PTR [edx+0x131d9ddc],?
  410e72:	cmp    ebx,edi
  410e74:	dec    edx
  410e75:	inc    ebp
  410e76:	mov    esp,0x1b106e9b
  410e7b:	repnz shl BYTE PTR ds:0xd1ead5fe,0xc8
  410e83:	out    0x6,eax
  410e85:	sbb    DWORD PTR [bx+0x143c],esp
  410e8a:	jmp    0xb570:0x3ddd8955
  410e91:	add    al,0xb1
  410e93:	pop    ebx
  410e94:	or     BYTE PTR [ecx-0x3f07a92d],0xbb
  410e9b:	push   ebp
  410e9c:	(bad)
  410e9f:	inc    edi
  410ea0:	add    dl,BYTE PTR ds:0x48b9c639
  410ea6:	jmp    0xaf1f:0x54f4bd2e
  410ead:	aaa    
  410eae:	mov    al,0x68
  410eb0:	in     eax,dx
  410eb1:	or     eax,0xe526fe1d
  410eb6:	inc    edx
  410eb7:	fidivr WORD PTR [eax+0x4e]
  410eba:	pop    esp
  410ebb:	iret   
  410ebc:	sbb    bh,ah
  410ebe:	call   0x6b71:0x4e8f3316
  410ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec6:	mov    esi,0x95f5dc9c
  410ecb:	les    edi,FWORD PTR [eax+0x11]
  410ece:	arpl   WORD PTR [esi-0x47b590d4],ax
  410ed4:	mov    edx,DWORD PTR [edi+0x691f0038]
  410eda:	and    esp,edx
  410edc:	jns    0x410f02
  410ede:	cld    
  410edf:	xor    edx,DWORD PTR [ebx-0x3f]
  410ee2:	ret    
  410ee3:	xchg   BYTE PTR [ebp+0x19f383f2],bh
  410ee9:	mov    esp,0x903e4281
  410eee:	pop    ebx
  410eef:	stc    
  410ef0:	test   BYTE PTR [edx],dh
  410ef2:	push   ecx
  410ef3:	pop    esi
  410ef4:	jo     0x410ec5
  410ef6:	cmovg  ecx,esi
  410ef9:	add    DWORD PTR [edi],0x0
  410efc:	call   0xa387:0x5ba29d98
  410f03:	jmp    0x12b1:0xe1d4285b
  410f0a:	inc    esp
  410f0b:	or     DWORD PTR [edx-0x3ce90be6],esp
  410f11:	aad    0x9a
  410f13:	push   0xe21af779
  410f18:	or     DWORD PTR [esi-0x6c],esp
  410f1b:	mov    ecx,0x30380314
  410f20:	outs   dx,DWORD PTR ds:[esi]
  410f21:	and    cl,dl
  410f23:	push   esi
  410f24:	retf   0xaecb
  410f27:	retf   0x617d
  410f2a:	or     eax,0xd29757b3
  410f2f:	fmul   QWORD PTR [esi]
  410f31:	xchg   edx,eax
  410f32:	(bad)
  410f35:	push   esp
  410f36:	(bad)  
  410f37:	pop    esp
  410f38:	xchg   esp,eax
  410f39:	out    0x22,al
  410f3b:	call   0xedd8f542
  410f40:	imul   ebx,DWORD PTR [ebx-0x349190b9],0xdc269d93
  410f4a:	les    esp,FWORD PTR [esp+eax*8]
  410f4d:	push   esp
  410f4e:	scas   al,BYTE PTR es:[edi]
  410f4f:	xchg   edi,eax
  410f50:	pop    ss
  410f51:	mov    dh,0x4b
  410f53:	outs   dx,BYTE PTR ds:[esi]
  410f54:	(bad)  
  410f55:	ret    0xce11
  410f58:	jno    0x410ee6
  410f5a:	jp     0x410f26
  410f5c:	retf   0x1d83
  410f5f:	cmp    bh,BYTE PTR [ebp+0x20]
  410f62:	cmc    
  410f63:	adc    bh,BYTE PTR [esi]
  410f65:	vpaddq xmm2,xmm3,xmm3
  410f69:	nop
  410f6a:	stos   DWORD PTR es:[edi],eax
  410f6b:	mov    al,ds:0xdc42b96e
  410f70:	int    0xf3
  410f72:	xlat   BYTE PTR ds:[ebx]
  410f73:	cmp    al,0x92
  410f75:	mov    esi,0x97082952
  410f7a:	dec    ebx
  410f7b:	out    0x72,al
  410f7d:	out    dx,al
  410f7e:	sahf   
  410f7f:	icebp  
  410f80:	mov    bl,BYTE PTR [esi+ebx*2+0x77]
  410f84:	ins    DWORD PTR es:[edi],dx
  410f85:	scas   al,BYTE PTR es:[edi]
  410f86:	mov    bl,0x5d
  410f88:	cwde   
  410f89:	and    cl,bh
  410f8b:	fnstenv [edx+0x22]
  410f8e:	dec    esi
  410f8f:	test   BYTE PTR [esi+0x43],cl
  410f92:	(bad)  
  410f93:	les    ebp,FWORD PTR [ebp-0x8753777]
  410f99:	ins    DWORD PTR es:[edi],dx
  410f9a:	popa   
  410f9b:	test   DWORD PTR [edx-0x21a2c0fd],esp
  410fa1:	leave  
  410fa2:	sub    eax,0x9947e2eb
  410fa7:	add    BYTE PTR [ebp+0x29],al
  410faa:	sahf   
  410fab:	cli    
  410fac:	test   BYTE PTR [eax],dh
  410fae:	mov    ds:0x91abc16a,eax
  410fb3:	fs push edi
  410fb5:	(bad)  
  410fb6:	imul   eax,DWORD PTR [bp+si],0xe17b080f
  410fbd:	dec    eax
  410fbe:	sbb    al,ch
  410fc0:	mov    ebx,0x928a69cb
  410fc5:	mov    ds:0x1161c647,al
  410fca:	mov    ah,0xbb
  410fcc:	fdiv   DWORD PTR [eax+0x30]
  410fcf:	jns    0x410fca
  410fd1:	cmp    al,0xa1
  410fd3:	rol    ecx,0x3
  410fd6:	mov    bh,BYTE PTR [ebp+ecx*4+0x30]
  410fda:	pop    ds
  410fdb:	addr16 mov edi,0x8cbbaf53
  410fe1:	mov    esp,0x1c6e4f41
  410fe6:	jns    0x410fe7
  410fe8:	xor    dh,ch
  410fea:	pop    eax
  410feb:	adc    cl,dh
  410fed:	mov    ch,0xcb
  410fef:	adc    edi,ecx
  410ff1:	pop    eax
  410ff2:	or     al,0xa7
  410ff4:	xor    BYTE PTR ds:0xdbf0e28d,ah
  410ffa:	or     DWORD PTR [ebx+0x30],edx
  410ffd:	pop    edi
  410ffe:	dec    ecx
  410fff:	sar    DWORD PTR [ecx+0x1a],0x7
  411003:	push   es
  411004:	aas    
  411005:	dec    esi
  411006:	int    0x46
  411008:	scas   eax,DWORD PTR es:[edi]
  411009:	sub    ebp,DWORD PTR [ecx-0x704f6db]
  41100f:	fisttp QWORD PTR [esi-0x2f]
  411012:	das    
  411013:	xchg   ebp,eax
  411014:	(bad)  
  411015:	std    
  411016:	mov    ecx,0x2337b296
  41101b:	nop
  41101c:	add    DWORD PTR [eax],esp
  41101e:	into   
  41101f:	aam    0x35
  411021:	jbe    0x410fbf
  411023:	in     eax,0x55
  411025:	clc    
  411026:	and    DWORD PTR [eax],0x99923974
  41102c:	ins    DWORD PTR es:[edi],dx
  41102d:	jle    0x410fbf
  41102f:	or     BYTE PTR ds:0xed583a0,0xdb
  411036:	je     0x411056
  411038:	xchg   esi,eax
  411039:	add    DWORD PTR [eax],esp
  41103b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41103c:	inc    ecx
  41103d:	mov    ebp,0x6f253c11
  411042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411043:	add    esp,esp
  411045:	loopne 0x411008
  411047:	sub    ah,BYTE PTR [ecx+0x75]
  41104a:	test   BYTE PTR [ebp-0x59],0xcb
  41104e:	or     al,0x68
  411050:	push   ecx
  411051:	mov    esi,0x1c7bb66b
  411056:	pop    edi
  411057:	rcl    DWORD PTR [ebp-0x1b],cl
  41105a:	fcom   DWORD PTR [esi]
  41105c:	pop    ss
  41105d:	fwait
  41105e:	sbb    edx,ecx
  411060:	xor    al,0x6e
  411062:	daa    
  411063:	fisttp WORD PTR cs:[eax+0xea3dc19]
  41106a:	mov    dl,0x3c
  41106c:	or     BYTE PTR [ecx],bh
  41106e:	(bad)  [ecx]
  411070:	lea    ebx,[ecx]
  411072:	inc    ebx
  411073:	push   ebp
  411074:	and    ecx,DWORD PTR [eax]
  411076:	pop    eax
  411077:	push   esp
  411078:	fsub   DWORD PTR [ecx+edi*8-0x43]
  41107c:	push   esi
  41107d:	(bad)  
  41107e:	test   al,0x88
  411080:	ret    
  411081:	adc    DWORD PTR [eax+edx*1+0x47],0x6fac736a
  411089:	cmp    BYTE PTR [esp+edx*8],bl
  41108c:	test   BYTE PTR [esi-0x6597cd4e],bh
  411092:	cmp    eax,0xffffffca
  411095:	int3   
  411096:	push   ebp
  411097:	pop    DWORD PTR [ecx-0x5e]
  41109a:	cs pop eax
  41109c:	mov    bh,0xd2
  41109e:	scas   al,BYTE PTR es:[edi]
  41109f:	pop    esi
  4110a0:	mov    ecx,0xcdd7d8f1
  4110a5:	cs loope 0x411088
  4110a8:	sub    eax,0x50f69886
  4110ad:	xor    dh,ch
  4110af:	bound  edx,QWORD PTR [ecx-0x67fd8f9b]
  4110b5:	(bad)  
  4110b6:	(bad)  
  4110b7:	out    dx,eax
  4110b8:	mov    ebp,ebp
  4110ba:	cmp    eax,0x84dbfd1
  4110bf:	ins    BYTE PTR es:[edi],dx
  4110c0:	mov    ebx,0xd29c445c
  4110c5:	sbb    ebx,DWORD PTR [ebx-0x6a]
  4110c8:	fld    DWORD PTR [esi-0x10]
  4110cb:	test   al,0xed
  4110cd:	cmp    ebp,DWORD PTR [ebp-0x613ae606]
  4110d3:	adc    cl,BYTE PTR [ecx+esi*2-0x43]
  4110d7:	lods   al,BYTE PTR ds:[esi]
  4110d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d9:	fsub   DWORD PTR [ebx+eax*1]
  4110dc:	sub    DWORD PTR [ebp-0x7b263039],0xffffff86
  4110e3:	mov    eax,ds:0x8a19dc6d
  4110e8:	aaa    
  4110e9:	cmp    al,0xe9
  4110eb:	fst    DWORD PTR [eax]
  4110ed:	xor    dh,bh
  4110ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f0:	test   cl,cl
  4110f2:	sbb    eax,0x7c94f46f
  4110f7:	sub    eax,0x76f6efa0
  4110fc:	push   edx
  4110fd:	adc    al,0xaa
  4110ff:	mov    edx,DWORD PTR [esp+esi*8]
  411102:	sub    al,0xbe
  411104:	add    eax,0x6e45ab6b
  411109:	mov    ebx,0xc5f0f7b1
  41110e:	pop    eax
  41110f:	hlt    
  411110:	aam    0xf7
  411112:	shr    DWORD PTR [ecx-0xf],0x73
  411116:	test   eax,0x80c11713
  41111b:	lahf   
  41111c:	dec    esi
  41111d:	bound  edx,QWORD PTR [ebp-0x5b]
  411120:	cmp    DWORD PTR [eax-0x7068645],esp
  411126:	shr    dl,1
  411128:	fyl2xp1 
  41112a:	push   ebx
  41112b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41112d:	add    eax,esp
  41112f:	sbb    DWORD PTR [eax+0xd1245aa],esi
  411135:	dec    eax
  411136:	fwait
  411137:	pushf  
  411138:	test   al,0xfa
  41113a:	sub    bh,dh
  41113c:	push   ebx
  41113d:	bound  ebx,QWORD PTR [edi]
  41113f:	push   ecx
  411140:	xchg   ebx,eax
  411141:	cmp    dl,ah
  411143:	test   DWORD PTR [eax+0x50743f96],esp
  411149:	jg     0x41113c
  41114b:	xchg   ebp,eax
  41114c:	or     DWORD PTR [edi],edi
  41114e:	lds    edi,FWORD PTR ds:0xf73a61e9
  411154:	sahf   
  411155:	ret    
  411156:	cmp    eax,0x3c4f746
  41115b:	sub    al,cl
  41115d:	sbb    eax,0x6c2aebc8
  411162:	jge    0x41111c
  411164:	add    bh,BYTE PTR [ecx+ecx*2-0x1fee669]
  41116b:	retf   
  41116c:	sbb    eax,0xe4c17396
  411171:	pop    es
  411172:	arpl   dx,cx
  411174:	std    
  411175:	js     0x411185
  411177:	inc    edi
  411178:	in     eax,dx
  411179:	ror    al,cl
  41117b:	sbb    BYTE PTR [ecx+0x8e6be8e],0x74
  411182:	ins    BYTE PTR es:[edi],dx
  411183:	popf   
  411184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411185:	rcr    dl,0xd2
  411188:	ins    DWORD PTR es:[edi],dx
  411189:	pop    edx
  41118a:	mov    ch,0x2c
  41118c:	retf   
  41118d:	mov    dl,0x63
  41118f:	aas    
  411190:	cdq    
  411191:	stos   BYTE PTR es:[edi],al
  411192:	add    ch,dh
  411194:	lea    ebp,[esi]
  411196:	int3   
  411197:	popa   
  411198:	ret    
  411199:	aas    
  41119a:	outs   dx,BYTE PTR ds:[esi]
  41119b:	sar    DWORD PTR [edx+0x22],cl
  41119e:	sub    BYTE PTR [edx+ebx*8+0x5c1fae05],bl
  4111a5:	inc    edx
  4111a6:	les    esi,FWORD PTR [ecx-0x56]
  4111a9:	shr    BYTE PTR [eax+0x1b12ace4],0x12
  4111b0:	ins    BYTE PTR es:[edi],dx
  4111b1:	add    bh,BYTE PTR [edx-0x4958c537]
  4111b7:	retf   0x1f88
  4111ba:	mov    bl,0x98
  4111bc:	xchg   ebx,eax
  4111bd:	inc    ebx
  4111be:	fdivr  DWORD PTR [edx]
  4111c0:	dec    eax
  4111c1:	shr    DWORD PTR [eax+edi*8],0x8
  4111c5:	das    
  4111c6:	inc    edx
  4111c7:	jl     0x411209
  4111c9:	ror    BYTE PTR [ebx-0x2b49a5b2],0x84
  4111d0:	test   BYTE PTR [ebx+0x25be8fec],bh
  4111d6:	int    0xb1
  4111d8:	retf   0xea0b
  4111db:	pop    ecx
  4111dc:	mov    al,ds:0x7164140c
  4111e1:	xchg   esp,eax
  4111e2:	es test eax,0x626f59ed
  4111e8:	pop    esi
  4111e9:	test   al,0x6d
  4111eb:	sbb    BYTE PTR [esi-0x5a],ah
  4111ee:	aas    
  4111ef:	lods   al,BYTE PTR ds:[esi]
  4111f0:	rol    DWORD PTR [eax],1
  4111f2:	or     al,0x29
  4111f4:	xchg   ebx,eax
  4111f5:	popa   
  4111f6:	inc    ebp
  4111f7:	push   cs
  4111f8:	cwde   
  4111f9:	outs   dx,BYTE PTR ds:[esi]
  4111fa:	enter  0x2b6,0xf2
  4111fe:	cmp    edx,DWORD PTR [ecx]
  411200:	xor    DWORD PTR [ebp+0x6e],ecx
  411203:	gs push ss
  411205:	cwde   
  411206:	jl     0x41125b
  411208:	dec    edx
  411209:	push   es
  41120a:	add    DWORD PTR [ecx],edi
  41120c:	add    cl,bh
  41120e:	pop    ebx
  41120f:	mul    BYTE PTR [eax]
  411211:	loopne 0x4111ae
  411213:	or     al,0x6
  411215:	dec    ebp
  411216:	and    edi,esi
  411218:	xlat   BYTE PTR es:[ebx]
  41121a:	repz call 0x93c3:0x787b2b3
  411222:	jl     0x411277
  411224:	pusha  
  411225:	xor    edx,DWORD PTR [esi]
  411227:	and    al,BYTE PTR [ecx+0x9]
  41122a:	inc    edi
  41122b:	icebp  
  41122c:	outs   dx,BYTE PTR ds:[esi]
  41122d:	cld    
  41122e:	inc    edi
  41122f:	and    DWORD PTR [edi-0x23],edx
  411232:	pop    ds
  411233:	add    eax,DWORD PTR [edi]
  411235:	push   ss
  411236:	ret    
  411237:	push   ecx
  411238:	lods   eax,DWORD PTR ds:[esi]
  411239:	leave  
  41123a:	pop    ebx
  41123b:	and    al,0x93
  41123d:	sbb    esp,eax
  41123f:	and    ah,BYTE PTR [esi+0x39]
  411242:	ss pop esp
  411244:	(bad)  
  411245:	out    0x71,eax
  411247:	pop    edx
  411248:	xlat   BYTE PTR ds:[ebx]
  411249:	mov    bh,0x19
  41124b:	push   ss
  41124c:	pop    esi
  41124d:	cdq    
  41124e:	inc    edi
  41124f:	mov    eax,ds:0xbc0fd1ee
  411254:	rol    BYTE PTR [ebp+0x12],1
  411257:	sub    eax,0x4455c8ef
  41125c:	push   eax
  41125d:	add    eax,0x42fe46bf
  411262:	aam    0x4c
  411264:	in     al,0x7f
  411266:	sbb    al,0x62
  411268:	xchg   esi,eax
  411269:	clc    
  41126a:	ins    BYTE PTR es:[edi],dx
  41126b:	inc    esp
  41126c:	bound  edi,QWORD PTR [eax+0x9]
  41126f:	push   0xffffffa6
  411271:	jg     0x411282
  411273:	fcmovne st,st(3)
  411275:	xor    BYTE PTR [edi-0x52e44be9],cl
  41127b:	xchg   esp,eax
  41127c:	cs inc ebp
  41127e:	push   edx
  41127f:	push   ebx
  411280:	ret    
  411281:	push   ebp
  411282:	pop    ecx
  411283:	and    esp,0x9b7d04bc
  411289:	sbb    BYTE PTR [eax+0x36],cl
  41128c:	cld    
  41128d:	pushf  
  41128e:	pop    esp
  41128f:	sub    eax,0xcbeb3d5
  411294:	shl    DWORD PTR [ebp-0xf192f58],0x1f
  41129b:	loope  0x411271
  41129d:	mov    al,ds:0x2ecfa28c
  4112a2:	or     DWORD PTR [esi-0x3e87208f],ebx
  4112a8:	pusha  
  4112a9:	sbb    esi,DWORD PTR [ebx+ebp*1]
  4112ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ad:	jmp    0xeadf:0xae098534
  4112b4:	es call 0x5a57:0xed251dbf
  4112bc:	add    al,0xa5
  4112be:	sub    ebx,DWORD PTR [ebx-0x55095200]
  4112c4:	sub    DWORD PTR [edi],0xffffffca
  4112c7:	xchg   esp,eax
  4112c8:	add    ah,ah
  4112ca:	loope  0x411330
  4112cc:	int3   
  4112cd:	nop
  4112ce:	out    0x45,al
  4112d0:	pop    esp
  4112d1:	lock mov ebp,0x2ff1671f
  4112d7:	sub    BYTE PTR [ecx-0x5f1c3f8a],0x5e
  4112de:	inc    edx
  4112df:	mov    ecx,ss
  4112e1:	mov    ds:0xb2614e91,eax
  4112e6:	ss dec eax
  4112e8:	inc    esi
  4112e9:	mov    ds:0x1a56db80,eax
  4112ee:	nop
  4112ef:	xchg   edx,eax
  4112f0:	js     0x4112c5
  4112f2:	popf   
  4112f3:	adc    ebp,DWORD PTR [esi-0xc]
  4112f6:	sbb    al,0xe9
  4112f8:	mov    al,BYTE PTR [eax+0x92f5174]
  4112fe:	call   0x580dcd0c
  411303:	pushf  
  411304:	push   DWORD PTR [ebp-0x1c]
  411307:	or     al,0xa2
  411309:	cs mov ebx,0xecc6a4cf
  411310:	xlat   BYTE PTR ds:[ebx]
  411311:	scas   eax,DWORD PTR es:[edi]
  411312:	lahf   
  411313:	call   0x33feb7dc
  411318:	test   ch,bl
  41131a:	xor    DWORD PTR [edx+0x14],ebp
  41131d:	fild   DWORD PTR [ecx*1-0x49c9a24d]
  411324:	(bad)  
  411325:	push   0x48f4dac8
  41132a:	push   edx
  41132b:	or     BYTE PTR [ebp-0x515c4e47],ah
  411331:	inc    edi
  411332:	sbb    edi,DWORD PTR [eax+0x66981b85]
  411338:	js     0x4112e2
  41133a:	repz pop ecx
  41133c:	daa    
  41133d:	retf   
  41133e:	sahf   
  41133f:	push   ss
  411340:	jnp    0x4112d1
  411342:	mov    cl,0xe8
  411344:	fcom   QWORD PTR [ecx+ebx*2]
  411347:	jp     0x41139f
  411349:	mov    ch,0x8c
  41134b:	push   0xd20dbd0
  411350:	out    0xe7,eax
  411352:	xor    al,BYTE PTR [edi+esi*4+0x12]
  411356:	mov    edx,0x4b0a5371
  41135b:	fstp   QWORD PTR [ecx+0x5c]
  41135e:	imul   eax,DWORD PTR [edx-0x6259f1d4],0xffffffad
  411365:	and    BYTE PTR [edx-0x4214c847],ah
  41136b:	xor    eax,0x85a58005
  411370:	lods   al,BYTE PTR ds:[esi]
  411371:	hlt    
  411372:	repz push esi
  411374:	icebp  
  411375:	mov    ds:0x16d624f3,eax
  41137a:	repnz retf 0xc474
  41137e:	xor    eax,0x79fc4274
  411383:	retf   0xe41
  411386:	data16 lock or BYTE PTR [ebx+0x22],bh
  41138b:	cs jbe 0x41139e
  41138e:	rcl    DWORD PTR [eax-0xd],0xfd
  411392:	mov    eax,ds:0xb66b0d8b
  411397:	or     ch,BYTE PTR [edx+0x38]
  41139a:	add    BYTE PTR [edi-0x41],bh
  41139d:	bound  eax,QWORD PTR [eax]
  41139f:	mov    ds:0x3dd093af,al
  4113a4:	mov    BYTE PTR [esi-0x48],0xf0
  4113a8:	scas   eax,DWORD PTR es:[edi]
  4113a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113aa:	pop    ecx
  4113ab:	xor    DWORD PTR [ecx],ebx
  4113ad:	fist   DWORD PTR [edi+esi*1]
  4113b0:	cmp    al,0xd1
  4113b2:	mov    edi,0x75cd026
  4113b7:	cmp    DWORD PTR [ecx+0x2491d7de],esp
  4113bd:	or     eax,0x4f361d79
  4113c2:	add    eax,DWORD PTR [ebx+0xc93e4be]
  4113c8:	cdq    
  4113c9:	inc    ebx
  4113ca:	mov    bl,0x9c
  4113cc:	fcmovbe st,st(4)
  4113ce:	out    dx,eax
  4113cf:	mov    esp,0x8952994d
  4113d4:	push   ebx
  4113d5:	jb     0x41144c
  4113d7:	adc    BYTE PTR [edi+edi*2+0x52],0x14
  4113dc:	add    BYTE PTR [edx],al
  4113de:	nop
  4113df:	mov    edi,DWORD PTR [edi-0x43]
  4113e2:	mov    al,0xb2
  4113e4:	mov    eax,ds:0x2c8618e6
  4113e9:	arpl   WORD PTR [eax],bx
  4113eb:	jnp    0x411447
  4113ed:	adc    ebx,ecx
  4113ef:	mov    ebx,0xb4c6ec32
  4113f4:	push   esp
  4113f5:	(bad)  
  4113f6:	cmc    
  4113f7:	(bad)  
  4113f8:	jle    0x411434
  4113fa:	arpl   WORD PTR [ecx+0x66],ax
  4113fd:	sub    al,0xfc
  4113ff:	push   esi
  411400:	ret    0xe6a4
  411403:	out    dx,eax
  411404:	test   BYTE PTR [eax-0x4e37748c],al
  41140a:	pop    ecx
  41140b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41140c:	out    0xd2,eax
  41140e:	sbb    BYTE PTR [ecx-0x63ca59e1],al
  411414:	rol    DWORD PTR [ecx],0xc4
  411417:	pop    ds
  411418:	adc    al,0x39
  41141a:	rol    DWORD PTR ds:0x9f97f584,1
  411420:	add    DWORD PTR [ebx],edx
  411422:	retf   
  411423:	cmovo  esp,DWORD PTR [esi-0x7d7ed48c]
  41142a:	dec    esp
  41142b:	aas    
  41142c:	loop   0x41149a
  41142e:	xor    al,0xe4
  411430:	ror    DWORD PTR [esi+0x1d421f93],0x86
  411437:	ja     0x41144b
  411439:	dec    ebx
  41143a:	dec    ebp
  41143b:	in     al,dx
  41143c:	cmp    dh,ch
  41143e:	pop    esi
  41143f:	call   FWORD PTR [ebx+esi*2+0x13a25d4e]
  411446:	mov    BYTE PTR [ecx],bh
  411448:	sbb    edi,DWORD PTR [ebp+0x3]
  41144b:	out    dx,eax
  41144c:	fpatan 
  41144e:	test   eax,0x53e8db12
  411453:	outs   dx,BYTE PTR ds:[esi]
  411454:	mov    ebp,ecx
  411456:	dec    ecx
  411457:	sub    ebp,DWORD PTR [edx]
  411459:	je     0x411487
  41145b:	cmp    DWORD PTR [edi-0x3e],0x2e
  41145f:	shr    BYTE PTR [ebp+ebx*4+0x1c],0xf3
  411464:	stos   BYTE PTR es:[edi],al
  411465:	(bad)  
  411466:	cld    
  411467:	data16 mov bl,ch
  41146a:	sub    DWORD PTR [ebp-0x11292bf3],0xffffffbf
  411471:	in     eax,dx
  411472:	fistp  DWORD PTR [edi]
  411474:	shr    al,cl
  411476:	sbb    al,0xc4
  411478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411479:	scas   al,BYTE PTR es:[edi]
  41147a:	sbb    al,BYTE PTR [ebx]
  41147c:	sbb    edx,DWORD PTR [ecx+edx*4-0x7a7e7cde]
  411483:	into   
  411484:	and    eax,ebp
  411486:	mov    ebp,0x63bb7cb6
  41148b:	fild   QWORD PTR [ebp-0x18]
  41148e:	outs   dx,BYTE PTR ds:[esi]
  41148f:	fidivr DWORD PTR ds:0x1343af74
  411495:	mov    DWORD PTR [ecx],ebx
  411497:	xor    BYTE PTR [ecx],0x15
  41149a:	jmp    0x411458
  41149c:	into   
  41149d:	mov    bl,0xfe
  41149f:	clc    
  4114a0:	or     al,0x64
  4114a2:	xchg   ebp,eax
  4114a3:	out    dx,eax
  4114a4:	push   0xffffff93
  4114a6:	daa    
  4114a7:	ret    0xc573
  4114aa:	test   DWORD PTR [esi-0x41],edi
  4114ad:	xchg   edi,eax
  4114ae:	mov    eax,ds:0xfa6eb71
  4114b3:	inc    esi
  4114b4:	sub    dh,BYTE PTR [edi]
  4114b6:	dec    ebx
  4114b7:	push   ds
  4114b8:	out    dx,al
  4114b9:	lods   eax,DWORD PTR ds:[esi]
  4114ba:	mov    ds:0x6043b55,al
  4114bf:	es xchg edi,eax
  4114c1:	mov    WORD PTR [eax-0x6b],ds
  4114c4:	sbb    BYTE PTR [edi+0x60],cl
  4114c7:	sahf   
  4114c8:	retf   0xb508
  4114cb:	iret   
  4114cc:	loop   0x4114c2
  4114ce:	and    eax,0x90d0363a
  4114d3:	test   eax,0x765df38a
  4114d8:	and    bh,BYTE PTR [edx-0x6c]
  4114db:	dec    esp
  4114dc:	and    DWORD PTR [eax+0x23],esi
  4114df:	jo     0x411468
  4114e1:	mov    esp,0xe5d0c394
  4114e6:	xlat   BYTE PTR ds:[ebx]
  4114e7:	jb     0x411526
  4114e9:	mov    al,ds:0x332e8e75
  4114ee:	hlt    
  4114ef:	inc    ecx
  4114f0:	jp     0x411543
  4114f2:	inc    ecx
  4114f3:	sub    dl,ah
  4114f5:	mov    BYTE PTR gs:0xdbb2cda5,dh
  4114fc:	pop    ss
  4114fd:	cmp    DWORD PTR [edi],edx
  4114ff:	jg     0x4114ca
  411501:	loopne 0x4114d0
  411503:	(bad)  [esi-0x2290f493]
  411509:	mov    al,ds:0x82950def
  41150e:	lods   eax,DWORD PTR ds:[esi]
  41150f:	(bad)  
  411510:	repz jnp 0x41156b
  411513:	shr    BYTE PTR [edi],1
  411515:	xor    al,0x29
  411517:	mov    BYTE PTR [esi],bl
  411519:	sti    
  41151a:	enter  0xa19f,0x44
  41151e:	out    0xf0,al
  411520:	jl     0x411556
  411522:	xor    eax,0x3579fd82
  411527:	dec    esi
  411528:	mov    BYTE PTR [ebx+0x4c],al
  41152b:	js     0x41155e
  41152d:	stos   DWORD PTR es:[edi],eax
  41152e:	mov    dh,al
  411530:	loope  0x4114dd
  411532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411533:	adc    BYTE PTR [edi],bh
  411535:	imul   esp,DWORD PTR [ecx-0x5a],0xffffffb3
  411539:	add    BYTE PTR [edx+0x42bff809],cl
  41153f:	popf   
  411540:	(bad)  
  411541:	repz in al,dx
  411543:	xor    edx,DWORD PTR [edx+0x16e44bee]
  411549:	inc    esp
  41154a:	xchg   ebp,eax
  41154b:	mov    ecx,DWORD PTR [ebx+ebp*1+0x4aea6dc1]
  411552:	xchg   ebp,eax
  411553:	mov    dl,0xd2
  411555:	addr16 jmp 0xe877392b
  41155b:	mov    eax,DWORD PTR [ecx]
  41155d:	(bad)  
  41155e:	push   ebp
  41155f:	fld    DWORD PTR [ebp-0x72a60edf]
  411565:	and    al,0x19
  411567:	pushf  
  411568:	lea    ecx,[edi+esi*8-0x17]
  41156c:	cdq    
  41156d:	popa   
  41156e:	leave  
  41156f:	ja     0x41158d
  411571:	and    ah,cl
  411573:	mov    ds:0x57c870af,eax
  411578:	cmp    BYTE PTR [ebx+eiz*2],ch
  41157b:	jmp    DWORD PTR [edi-0x5cd94efd]
  411581:	cdq    
  411582:	jmp    0x2353:0xca0ca5f5
  411589:	xchg   edx,eax
  41158a:	out    dx,eax
  41158b:	jno    0x41152d
  41158d:	shr    BYTE PTR [ecx+0x593ee975],1
  411593:	cmp    cl,ch
  411595:	jne    0x411594
  411597:	mov    esp,0x7ae2ef7d
  41159c:	push   ecx
  41159d:	call   0x45e2:0xb1ce5890
  4115a4:	add    edi,ebx
  4115a6:	xchg   esp,eax
  4115a7:	add    edi,DWORD PTR [ecx-0x4eaff97c]
  4115ad:	cs push 0x7
  4115b0:	pop    esi
  4115b1:	imul   ecx,eax,0x2c
  4115b4:	inc    esi
  4115b5:	xchg   ebx,eax
  4115b6:	jo     0x41161d
  4115b8:	popf   
  4115b9:	pushf  
  4115ba:	leave  
  4115bb:	(bad)  
  4115bc:	mov    ebp,0x2a393826
  4115c1:	mov    ?,edx
  4115c3:	jmp    0xca869ee0
  4115c8:	adc    al,0x9
  4115ca:	ins    BYTE PTR es:[edi],dx
  4115cb:	aam    0xf7
  4115cd:	xchg   ebp,eax
  4115ce:	and    ebp,eax
  4115d0:	and    esi,edx
  4115d2:	jb     0x411605
  4115d4:	mov    ss,WORD PTR [esi-0x26]
  4115d7:	imul   ecx,DWORD PTR [esi+0x3dc6f9bc],0xefb8e9e1
  4115e1:	sub    eax,eax
  4115e3:	jecxz  0x411566
  4115e5:	retf   
  4115e6:	mov    bh,0xdc
  4115e8:	call   FWORD PTR [eax+0x12]
  4115eb:	retf   
  4115ec:	sbb    DWORD PTR [ecx-0x77659a44],esp
  4115f2:	mov    ch,0x94
  4115f4:	add    eax,0x23b6e471
  4115f9:	imul   edx,DWORD PTR [eax],0xe23c59f9
  4115ff:	adc    al,0x9f
  411601:	adc    eax,0xa2891398
  411606:	cli    
  411607:	xchg   ecx,eax
  411608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411609:	into   
  41160a:	std    
  41160b:	sub    BYTE PTR [eax],al
  41160d:	cli    
  41160e:	jl     0x41163c
  411610:	add    DWORD PTR [ebp+0x70578409],esi
  411616:	add    eax,DWORD PTR [ecx-0x6d809eb2]
  41161c:	add    BYTE PTR [ecx],0xd8
  41161f:	mov    cr5,ebp
  411622:	jae    0x411699
  411624:	shl    dh,cl
  411626:	pop    ecx
  411627:	xchg   ebx,eax
  411628:	or     DWORD PTR [eax+0x10f1c378],0x9
  41162f:	dec    eax
  411630:	add    ebx,DWORD PTR [edi+0xd]
  411633:	js     0x41165d
  411635:	mov    dh,0xf9
  411637:	cwde   
  411638:	cmp    DWORD PTR [ebx-0x55ec5f19],eax
  41163e:	js     0x41163b
  411640:	cli    
  411641:	ret    0xddd5
  411644:	adc    dl,bl
  411646:	xchg   esi,eax
  411647:	out    dx,eax
  411648:	xchg   esp,eax
  411649:	mov    cl,0xde
  41164b:	sub    ah,BYTE PTR [ecx+eax*4+0xc]
  41164f:	jae    0x411607
  411651:	mov    ah,0xb5
  411653:	xor    edx,DWORD PTR [ebp+0x4a3afc64]
  411659:	(bad)  
  41165a:	mov    esp,0xf62ce1f3
  41165f:	push   esi
  411660:	adc    al,0x82
  411662:	fist   WORD PTR [edi]
  411664:	dec    eax
  411665:	rol    dh,1
  411667:	pop    ebx
  411668:	ds dec edi
  41166a:	inc    edx
  41166b:	pop    esp
  41166c:	hlt    
  41166d:	xor    bl,BYTE PTR [edx+edx*8-0x5e0f498e]
  411674:	es push edi
  411676:	clc    
  411677:	mov    ebx,0x5008451a
  41167c:	adc    eax,0x7315953b
  411681:	loopne 0x41168d
  411683:	fdiv   QWORD PTR ds:0x5d58b78b
  411689:	lods   eax,DWORD PTR ds:[esi]
  41168a:	int    0xcc
  41168c:	ret    
  41168d:	dec    edx
  41168e:	mov    edi,0xe83f9cde
  411693:	je     0x411667
  411695:	push   ebx
  411696:	call   0x8fad:0x854151ec
  41169d:	ins    BYTE PTR es:[edi],dx
  41169e:	and    ecx,DWORD PTR [ecx+0x11566e37]
  4116a4:	pop    esp
  4116a5:	rcr    edx,0x40
  4116a8:	pop    es
  4116a9:	ins    DWORD PTR es:[edi],dx
  4116aa:	por    mm6,mm1
  4116ad:	mov    WORD PTR [edi],?
  4116af:	pushf  
  4116b0:	clc    
  4116b1:	out    0xc6,eax
  4116b3:	or     al,0xcc
  4116b5:	pop    ds
  4116b6:	fistp  DWORD PTR ds:0xe3d17c15
  4116bc:	leave  
  4116bd:	out    dx,eax
  4116be:	hlt    
  4116bf:	stc    
  4116c0:	cmc    
  4116c1:	sahf   
  4116c2:	mov    edi,0x8d4dfcb8
  4116c7:	ins    BYTE PTR es:[edi],dx
  4116c8:	mov    eax,ds:0xc77749b5
  4116cd:	fs ja  0x41172e
  4116d0:	pop    ecx
  4116d1:	add    eax,0xdf08f649
  4116d6:	retf   0xa9b
  4116d9:	loope  0x41167a
  4116db:	jmp    0x1ff9:0x8e523097
  4116e2:	jns    0x4116bd
  4116e4:	mov    dl,0xfc
  4116e6:	xor    al,0x16
  4116e8:	inc    ebx
  4116e9:	dec    eax
  4116ea:	sbb    BYTE PTR [edx],cl
  4116ec:	xor    DWORD PTR [ecx+0x62d49aaf],eax
  4116f2:	aam    0x46
  4116f4:	loop   0x4116dd
  4116f6:	into   
  4116f7:	lds    edi,FWORD PTR [ebx+edx*2]
  4116fa:	cld    
  4116fb:	arpl   WORD PTR [esi],bp
  4116fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fe:	push   es
  4116ff:	addr16 pop edx
  411701:	xlat   BYTE PTR ds:[ebx]
  411702:	or     bh,ah
  411704:	bound  edi,QWORD PTR [edi+0x48]
  411707:	push   DWORD PTR [ebp+0x2eecd7d8]
  41170d:	pop    ecx
  41170e:	xchg   ebp,eax
  41170f:	sub    cl,al
  411711:	lds    esi,FWORD PTR [ecx+0x19]
  411714:	test   DWORD PTR [edx],0x5b407b3c
  41171a:	adc    cl,BYTE PTR [ebx+0x22]
  41171d:	mov    bl,0xae
  41171f:	jae    0x41172a
  411721:	pop    edx
  411722:	(bad)  
  411723:	in     al,0x68
  411725:	mov    cl,0xa1
  411727:	aas    
  411728:	or     DWORD PTR [ecx+ecx*8+0x2a1d2449],ebp
  41172f:	(bad)  
  411730:	sub    eax,0xc825ac57
  411735:	jbe    0x4116fc
  411737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411738:	sbb    DWORD PTR [ecx+0x3a],edi
  41173b:	je     0x411705
  41173d:	(bad)  
  41173f:	jp     0x4116c1
  411741:	or     al,0x3b
  411743:	mov    ch,0x3c
  411745:	fwait
  411746:	xor    DWORD PTR [eax+esi*1+0x6cf40a],ebp
  41174d:	aaa    
  41174e:	push   ebx
  41174f:	out    0x5e,eax
  411751:	inc    ebp
  411752:	cwde   
  411753:	out    0x60,eax
  411755:	add    al,0x45
  411757:	xor    al,0xd3
  411759:	lds    edi,FWORD PTR [edi+0x33820435]
  41175f:	cs push 0xa
  411762:	sbb    esi,DWORD PTR [edx+edi*4]
  411765:	out    0x7c,eax
  411767:	gs retf 
  411769:	ss xchg edi,eax
  41176b:	adc    esp,eax
  41176d:	or     al,0xd0
  41176f:	les    eax,FWORD PTR [edi+0x5613ebe]
  411775:	aad    0x42
  411777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411778:	gs call 0x38b93378
  41177e:	pop    eax
  41177f:	mov    ebx,0x7d86fea1
  411784:	aad    0x45
  411786:	bound  edi,QWORD PTR [ebp-0x644e5241]
  41178c:	sub    ebp,esi
  41178e:	sbb    esi,edi
  411790:	hlt    
  411791:	mov    edx,0x7fd55eaf
  411796:	sub    BYTE PTR [ebx-0x459bebad],cl
  41179c:	es out dx,eax
  41179e:	mov    eax,0xb99f8c2a
  4117a3:	mov    ah,0xed
  4117a5:	mov    ah,0x97
  4117a7:	mov    ch,0x44
  4117a9:	ss sahf 
  4117ab:	aaa    
  4117ac:	jl     0x41174d
  4117ae:	add    bl,0x7c
  4117b1:	sbb    eax,0xe586c881
  4117b6:	out    dx,al
  4117b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b8:	pop    esp
  4117b9:	sub    DWORD PTR [edi+0x61],ebx
  4117bc:	mov    DWORD PTR [esi+0x6a07f39f],edi
  4117c2:	mov    ebp,0x48f6a699
  4117c7:	dec    ecx
  4117c8:	lds    eax,FWORD PTR [edx]
  4117ca:	fs jmp 0x8b74:0x58389169
  4117d2:	sbb    al,0xb5
  4117d4:	inc    ebp
  4117d5:	dec    eax
  4117d6:	into   
  4117d7:	xor    eax,0xb3798d1e
  4117dc:	mov    esp,0x6e99cedf
  4117e1:	push   cs
  4117e2:	mov    eax,ds:0xdea44ce8
  4117e7:	sub    eax,0x5d7626af
  4117ec:	push   edx
  4117ed:	lea    esp,[ebx-0x45388c12]
  4117f3:	xchg   ebx,eax
  4117f4:	inc    ecx
  4117f5:	hlt    
  4117f6:	dec    edi
  4117f7:	call   0xd9a7:0x2e5cfb66
  4117fe:	inc    esi
  4117ff:	push   0xef336ee8
  411804:	jp     0x4117ba
  411806:	imul   ecx,ebx,0x2404ccf8
  41180c:	xlat   BYTE PTR ds:[ebx]
  41180d:	mov    DWORD PTR [ebx+0x3663003f],esi
  411813:	jge    0x4117b9
  411815:	test   DWORD PTR [ebx],ecx
  411817:	jmp    0x3659:0x7e71a80f
  41181e:	sar    BYTE PTR [edx],1
  411820:	aas    
  411821:	push   0xff88261f
  411826:	ret    0x76c0
  411829:	dec    ecx
  41182a:	xor    ch,BYTE PTR [ebx-0x7e]
  41182d:	sub    eax,0x6a96cd48
  411832:	fisub  WORD PTR [eax-0x9]
  411835:	fs pop ss
  411837:	je     0x4117e3
  411839:	add    BYTE PTR [ebx-0x23],cl
  41183c:	clc    
  41183d:	push   esi
  41183e:	jecxz  0x41180d
  411840:	gs (bad) 
  411842:	pop    edi
  411843:	xchg   edi,eax
  411844:	jecxz  0x4118bd
  411846:	mov    eax,ds:0x68237107
  41184b:	out    0x21,eax
  41184d:	jno    0x411815
  41184f:	jo     0x4118d0
  411851:	and    al,0xe
  411853:	push   es
  411854:	pop    eax
  411855:	mov    cl,0x6d
  411857:	add    ebp,DWORD PTR [ebp-0x6f64f9c9]
  41185d:	sbb    bl,BYTE PTR [edi]
  41185f:	dec    edx
  411860:	mov    edi,0x535a76e7
  411865:	pop    esp
  411866:	add    BYTE PTR [ecx+0x20],dh
  411869:	fcom   QWORD PTR [ebx+0x263f4286]
  41186f:	retf   0xc0a4
  411872:	test   esp,ebp
  411874:	adc    esi,ecx
  411876:	mov    dl,0xfe
  411878:	jecxz  0x41189c
  41187a:	out    0x74,eax
  41187c:	adc    eax,0x479944ce
  411881:	cmp    DWORD PTR [eax],ecx
  411883:	aam    0xc9
  411885:	das    
  411886:	xchg   ecx,eax
  411887:	mov    eax,ds:0xf1771602
  41188c:	jmp    0x2cd3:0xfc21133f
  411893:	push   edi
  411894:	test   al,0xbc
  411896:	stos   DWORD PTR es:[edi],eax
  411897:	add    al,0x5e
  411899:	jmp    0x4118c1
  41189b:	or     DWORD PTR [eax+ebx*2+0x5f],esp
  41189f:	hlt    
  4118a0:	or     cl,BYTE PTR [ebx]
  4118a2:	gs sbb al,0x97
  4118a5:	ret    0x2cbe
  4118a8:	jmp    0x10a:0x217b00c7
  4118af:	jg     0x411871
  4118b1:	ins    BYTE PTR es:[edi],dx
  4118b2:	or     al,0x77
  4118b4:	mov    cs,WORD PTR [edx]
  4118b6:	push   ebx
  4118b7:	loop   0x411868
  4118b9:	dec    ebp
  4118ba:	push   0x88fbb2f2
  4118bf:	push   ebp
  4118c0:	mov    al,ds:0x1a40eea1
  4118c5:	push   ebp
  4118c6:	xchg   ecx,eax
  4118c7:	mov    al,0x99
  4118c9:	pop    edx
  4118ca:	sti    
  4118cb:	mov    al,BYTE PTR [ebx*4+0x3b55d92a]
  4118d2:	sub    cl,cl
  4118d4:	pushf  
  4118d5:	mov    eax,0x16092df1
  4118da:	xchg   BYTE PTR [esi-0x2d41e033],dh
  4118e0:	pop    esi
  4118e1:	ins    BYTE PTR es:[edi],dx
  4118e2:	out    dx,eax
  4118e3:	pop    ds
  4118e4:	and    BYTE PTR [edx+eiz*4+0x10],bl
  4118e8:	inc    ecx
  4118e9:	(bad)  
  4118ea:	stc    
  4118eb:	adc    esp,eax
  4118ed:	fwait
  4118ee:	cmp    ch,BYTE PTR [esi]
  4118f0:	xchg   ebx,eax
  4118f1:	ss (bad) 
  4118f3:	push   edi
  4118f4:	outs   dx,DWORD PTR ds:[esi]
  4118f5:	sub    eax,0x83d78e95
  4118fa:	xor    eax,0x337603a9
  4118ff:	push   esp
  411900:	inc    esp
  411901:	dec    esp
  411902:	mov    edi,0xcc685ddb
  411907:	or     al,0xb9
  411909:	jmp    0x6f0b:0xcb205030
  411910:	add    bh,0x5d
  411913:	(bad)  
  411914:	adc    al,0x21
  411916:	push   ecx
  411917:	aaa    
  411918:	cdq    
  411919:	xchg   edx,eax
  41191a:	pop    ecx
  41191b:	out    dx,eax
  41191c:	popf   
  41191d:	mov    dh,BYTE PTR [ebx+0x7bb500d6]
  411923:	retf   
  411924:	cmp    al,0x67
  411926:	mov    al,0x48
  411928:	dec    esp
  411929:	sahf   
  41192a:	gs (bad) 
  41192c:	cmp    DWORD PTR [ebx],esi
  41192e:	jg     0x41196c
  411930:	in     eax,dx
  411931:	aam    0xe8
  411933:	arpl   WORD PTR [edi-0x48],cx
  411936:	in     eax,dx
  411937:	iret   
  411938:	add    al,0xb1
  41193a:	out    dx,al
  41193b:	xchg   edx,eax
  41193c:	jmp    FWORD PTR [eax-0x3b48d8ee]
  411942:	imul   esi,DWORD PTR [esi+0x14],0x2d
  411946:	(bad)  
  411947:	fcomi  st,st(5)
  411949:	sbb    BYTE PTR [edx-0x22],0xca
  41194d:	loopne 0x411982
  41194f:	call   0x58a6ab3
  411954:	sbb    bh,0x0
  411957:	daa    
  411958:	test   DWORD PTR [ebp+0x1a],edx
  41195b:	sbb    edi,DWORD PTR [edx+0x64]
  41195e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41195f:	mov    ch,0x67
  411961:	cli    
  411962:	xchg   ecx,eax
  411963:	xor    esp,esi
  411965:	xchg   ebx,eax
  411966:	dec    ecx
  411967:	nop
  411968:	sbb    ebx,DWORD PTR [eiz*8-0x42c5b402]
  41196f:	cmc    
  411970:	sbb    DWORD PTR [ecx-0x3d],0x179eac74
  411977:	add    BYTE PTR [esi],al
  411979:	and    al,0xff
  41197b:	aam    0xf4
  41197d:	in     eax,0x23
  41197f:	push   0x71
  411981:	lahf   
  411982:	adc    cl,BYTE PTR [edi-0x3a201e23]
  411988:	sbb    ebx,DWORD PTR [ebp+eax*1-0x27939e89]
  41198f:	cmp    BYTE PTR [edi+0x16ec91ae],dl
  411995:	sbb    al,0x12
  411997:	fist   DWORD PTR [ebp+0x7d]
  41199a:	ror    bl,1
  41199c:	loop   0x411a0b
  41199e:	mov    cl,0x3f
  4119a0:	mov    BYTE PTR [edx+edi*8],dh
  4119a3:	jae    0x4119a9
  4119a5:	xchg   ebx,eax
  4119a6:	jo     0x41193a
  4119a8:	imul   eax,DWORD PTR [ecx-0x48],0xffffffd0
  4119ac:	and    eax,0x4230cd77
  4119b1:	cdq    
  4119b2:	push   ebp
  4119b3:	add    ch,ch
  4119b5:	scas   al,BYTE PTR es:[edi]
  4119b6:	loope  0x411a26
  4119b8:	sbb    al,0xb5
  4119ba:	call   0x9708:0xa9390130
  4119c1:	lods   eax,DWORD PTR ds:[esi]
  4119c2:	pushf  
  4119c3:	je     0x4119d5
  4119c5:	dec    edi
  4119c6:	hlt    
  4119c7:	mov    dh,0xc6
  4119c9:	out    dx,al
  4119ca:	scas   al,BYTE PTR es:[edi]
  4119cb:	ins    DWORD PTR es:[edi],dx
  4119cc:	je     0x4119ea
  4119ce:	mov    bh,0x75
  4119d0:	jmp    0x5d97:0x213cc96a
  4119d7:	cwde   
  4119d8:	and    DWORD PTR [edx+edx*8-0x36],ebx
  4119dc:	mov    ds:0x50b7f3ba,al
  4119e1:	maxps  xmm3,XMMWORD PTR [edx+0x161b0155]
  4119e8:	and    ch,BYTE PTR [edx+0x3]
  4119eb:	pop    ebx
  4119ec:	inc    ebx
  4119ed:	xchg   ebx,ecx
  4119ef:	jmp    0x413d7d
  4119f4:	popf   
  4119f5:	add    eax,0xa840804
  4119fa:	xchg   ecx,eax
  4119fb:	adc    bl,0x9b
  4119fe:	pop    eax
  4119ff:	in     al,dx
  411a00:	out    dx,eax
  411a01:	pop    esi
  411a02:	outs   dx,DWORD PTR cs:[esi]
  411a04:	or     ecx,DWORD PTR [edx+0x5e0c8383]
  411a0a:	add    DWORD PTR [ebx-0x481fa958],0xffffffe9
  411a11:	(bad)  
  411a12:	lods   eax,DWORD PTR ds:[esi]
  411a13:	dec    esp
  411a14:	sbb    eax,0x9c6cdae5
  411a19:	sub    al,BYTE PTR [edx+0x2dc77e63]
  411a1f:	rol    DWORD PTR [ebp+0x75],0xde
  411a23:	fimul  WORD PTR [edx]
  411a25:	sbb    DWORD PTR [eax-0x1350c4dc],ecx
  411a2b:	push   edi
  411a2c:	test   edi,ebx
  411a2e:	and    DWORD PTR [ebp-0x48913d84],edx
  411a34:	test   BYTE PTR [esi+0x3294af13],bh
  411a3a:	jae    0x411a78
  411a3c:	dec    esi
  411a3d:	dec    edi
  411a3e:	push   0xdf41e5cd
  411a43:	jecxz  0x4119e8
  411a45:	sbb    eax,0xc080bfa4
  411a4a:	jo     0x411a03
  411a4c:	and    BYTE PTR [ebp+0x3f],dl
  411a4f:	aam    0x83
  411a51:	int    0xa
  411a53:	mov    dl,0x67
  411a55:	cmp    eax,0xed189ecf
  411a5a:	(bad)  
  411a5b:	stos   DWORD PTR es:[edi],eax
  411a5c:	add    ah,0x51
  411a5f:	cwde   
  411a60:	cmp    ebp,ebx
  411a62:	xchg   DWORD PTR [ecx-0x7f],eax
  411a65:	fst    DWORD PTR ds:0xd83050e2
  411a6b:	es int 0xbb
  411a6e:	fs test bl,bh
  411a71:	mov    bl,0x90
  411a73:	enter  0x5a2,0xda
  411a77:	mov    al,ds:0xe5c6450b
  411a7c:	xor    dh,BYTE PTR [eax]
  411a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a7f:	shl    ecx,0x7b
  411a82:	and    BYTE PTR [ecx-0x23421897],bh
  411a88:	mov    edi,0xb770bab9
  411a8d:	ds scas eax,DWORD PTR es:[edi]
  411a8f:	dec    edx
  411a90:	test   al,0x78
  411a92:	or     BYTE PTR [esi],dh
  411a94:	push   ebp
  411a95:	pop    ecx
  411a96:	and    BYTE PTR ss:[edx-0x2e],0x1f
  411a9b:	pop    ebp
  411a9c:	dec    ebx
  411a9d:	pop    eax
  411a9e:	sbb    ecx,DWORD PTR [eax+0x6bba66e6]
  411aa4:	xor    eax,0x45ab85e2
  411aa9:	rcl    DWORD PTR [eax],1
  411aab:	cwde   
  411aac:	jno    0x411a63
  411aae:	mov    al,ds:0xd1b7664a
  411ab3:	sbb    ah,BYTE PTR [ebp-0x64e5d9ab]
  411ab9:	idiv   BYTE PTR [edx-0x21]
  411abc:	cmp    al,0x74
  411abe:	pop    ss
  411abf:	cmp    BYTE PTR [edx-0x6b5e11b2],ch
  411ac5:	sbb    eax,0xdec9584
  411aca:	push   ebx
  411acb:	into   
  411acc:	cmp    al,0x25
  411ace:	sbb    eax,0x3604adbc
  411ad3:	xchg   edx,eax
  411ad4:	fimul  DWORD PTR [eax+ebx*8+0x7f]
  411ad8:	stc    
  411ad9:	or     ecx,DWORD PTR [eax-0x50]
  411adc:	cmp    al,0x85
  411ade:	xor    ah,BYTE PTR [ebx+0x15]
  411ae1:	in     eax,dx
  411ae2:	xchg   esp,eax
  411ae3:	jns    0x411b4d
  411ae5:	sbb    al,0x7
  411ae7:	inc    esp
  411ae8:	cwde   
  411ae9:	icebp  
  411aea:	add    al,0x1e
  411aec:	jne    0x411abf
  411aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aef:	push   ebp
  411af0:	dec    ebp
  411af1:	(bad)  
  411af2:	in     eax,0x12
  411af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af5:	dec    esp
  411af6:	mov    cl,0xab
  411af8:	ret    0x1bcb
  411afb:	cmp    al,BYTE PTR [edx-0x5ee7795]
  411b01:	adc    al,0xce
  411b03:	cmc    
  411b04:	xchg   esp,eax
  411b05:	xchg   ebp,eax
  411b06:	loopne 0x411ab8
  411b08:	cmp    ecx,DWORD PTR [eax-0x1f08e2f9]
  411b0e:	outs   dx,DWORD PTR ds:[esi]
  411b0f:	sti    
  411b10:	test   al,0xa1
  411b12:	je     0x411b0d
  411b14:	dec    ecx
  411b15:	in     eax,dx
  411b16:	ins    WORD PTR es:[edi],dx
  411b18:	repnz mov al,ds:0xc04d00b5
  411b1e:	or     al,bh
  411b20:	push   0xee7e8f4f
  411b25:	xor    eax,0x88102b08
  411b2a:	xor    al,0x40
  411b2c:	sahf   
  411b2d:	aaa    
  411b2e:	cwde   
  411b2f:	xlat   BYTE PTR ds:[ebx]
  411b30:	and    dl,ch
  411b32:	push   esi
  411b33:	cwde   
  411b34:	inc    ecx
  411b35:	loop   0x411b38
  411b37:	sbb    DWORD PTR [eax-0x75e330ea],ecx
  411b3d:	mov    ds:0xfd451c75,al
  411b42:	push   ss
  411b43:	pop    ebp
  411b44:	ins    DWORD PTR es:[edi],dx
  411b45:	pop    esi
  411b46:	inc    ebp
  411b47:	mov    al,0x1b
  411b49:	fnop   
  411b4b:	mov    bl,0xd2
  411b4d:	(bad)  
  411b4e:	pop    ds
  411b4f:	adc    eax,eax
  411b51:	fs fcomip st,st(0)
  411b54:	mov    ebx,0xd04f18e2
  411b59:	pop    esi
  411b5a:	mov    ds:0x2dbd63c9,al
  411b5f:	stos   DWORD PTR es:[edi],eax
  411b60:	mov    cl,al
  411b62:	jl     0x411b05
  411b64:	int    0xad
  411b66:	mov    WORD PTR [edx+0x151559aa],gs
  411b6c:	cmp    al,0x78
  411b6e:	adc    BYTE PTR [edx-0x7d804330],al
  411b74:	add    BYTE PTR [ecx],bl
  411b76:	into   
  411b77:	pop    ecx
  411b78:	pop    esi
  411b79:	fldenv [esi]
  411b7b:	mov    ebx,0xa798a0b4
  411b80:	xchg   ebx,eax
  411b81:	cdq    
  411b82:	mov    eax,0xe8888482
  411b87:	jmp    0x411b0c
  411b89:	xchg   edx,eax
  411b8a:	pop    esp
  411b8b:	sub    edx,0x48b04e5e
  411b91:	and    edi,DWORD PTR ds:0xb85b1a99
  411b97:	xor    eax,edi
  411b99:	ret    
  411b9a:	ret    
  411b9b:	aad    0xbf
  411b9d:	pop    ss
  411b9e:	push   cs
  411b9f:	rol    DWORD PTR [eax],0x2a
  411ba2:	mov    eax,0x21ca3100
  411ba7:	dec    edx
  411ba8:	loope  0x411b2d
  411baa:	or     BYTE PTR [edi+0x60],al
  411bad:	sub    al,0xfc
  411bb0:	sar    BYTE PTR [edi+0x4],cl
  411bb3:	xor    BYTE PTR [eax+0x63eb39cf],bh
  411bb9:	sub    al,0xfd
  411bbb:	addr16 vmread esp,esi
  411bbf:	xor    DWORD PTR [ecx+0x574063f7],ebx
  411bc5:	jmp    0x964b5d8f
  411bca:	sub    ebp,0x33c70572
  411bd0:	es mov edi,0x620ca29e
  411bd6:	cmp    ebp,edi
  411bd8:	sub    edx,ecx
  411bda:	mov    ds:0x3f0dd4a9,al
  411bdf:	push   edi
  411be0:	call   0x447:0xb56b3012
  411be7:	ds dec edi
  411be9:	repz (bad) 
  411beb:	(bad)  
  411bec:	sbb    edi,edi
  411bee:	cmp    DWORD PTR [ecx-0x7e],ebp
  411bf1:	lock sbb bl,dl
  411bf4:	pop    edi
  411bf5:	out    0x57,al
  411bf7:	mov    DWORD PTR [ebx+esi*4],ecx
  411bfa:	pop    edi
  411bfb:	mov    edx,0x5448709d
  411c00:	xchg   esi,eax
  411c01:	xor    eax,0xd6b4ba53
  411c06:	pop    ebx
  411c07:	sbb    dl,dl
  411c09:	mov    ds:0x8e0f5f19,al
  411c0e:	call   FWORD PTR [edi+0x64]
  411c11:	jae    0x411c0f
  411c13:	add    ah,ah
  411c15:	mov    BYTE PTR [edi-0x64b22afd],cl
  411c1b:	mov    dh,0x82
  411c1d:	jecxz  0x411c7b
  411c1f:	jmp    0x411c94
  411c21:	call   0x9c56:0xd39fabc6
  411c28:	mov    WORD PTR [ecx-0x76f15e88],cs
  411c2e:	leave  
  411c2f:	pop    esp
  411c30:	adc    al,0xc7
  411c32:	inc    esi
  411c33:	leave  
  411c34:	push   ss
  411c35:	fistp  WORD PTR [eax-0x210f076b]
  411c3b:	call   0x3ebee472
  411c40:	inc    edi
  411c41:	ins    DWORD PTR es:[edi],dx
  411c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c43:	sbb    eax,DWORD PTR [edx-0x79fb4556]
  411c49:	in     al,dx
  411c4a:	ror    DWORD PTR [edx+edx*1],1
  411c4d:	jmp    0xb11:0x59eaf093
  411c54:	jg     0x411c53
  411c56:	lock lods al,BYTE PTR ds:[esi]
  411c58:	mov    edi,0x168987b7
  411c5d:	stc    
  411c5e:	mov    ecx,0x4e5a891a
  411c63:	mov    bl,0x6c
  411c65:	nop
  411c66:	(bad)  
  411c67:	pop    ss
  411c68:	test   eax,0xdcadd11
  411c6d:	inc    edi
  411c6e:	cdq    
  411c6f:	mov    ah,0x2e
  411c71:	out    dx,al
  411c72:	je     0x411c21
  411c74:	je     0x411c50
  411c76:	mov    bh,BYTE PTR [edi]
  411c78:	nop
  411c79:	mov    esi,0x95ecd574
  411c7e:	jae    0x411c2d
  411c80:	add    ecx,DWORD PTR [edi+0x70eaecd1]
  411c86:	and    BYTE PTR [ecx+0x6b7aac66],dh
  411c8c:	push   es
  411c8d:	fcomp  DWORD PTR [ebx]
  411c8f:	(bad)  
  411c90:	shl    BYTE PTR [eax],cl
  411c92:	jg     0x411c96
  411c94:	scas   eax,DWORD PTR es:[edi]
  411c95:	call   eax
  411c97:	into   
  411c98:	popf   
  411c99:	sbb    eax,0xc68b9cb0
  411c9e:	push   ecx
  411c9f:	cmp    esp,DWORD PTR [ecx-0xc79d3a1]
  411ca5:	stos   BYTE PTR es:[edi],al
  411ca6:	pusha  
  411ca7:	fs clc 
  411ca9:	ins    DWORD PTR es:[edi],dx
  411caa:	mov    al,BYTE PTR [ebp-0x64]
  411cad:	outs   dx,BYTE PTR ds:[esi]
  411cae:	ss scas eax,DWORD PTR es:[edi]
  411cb0:	pop    ecx
  411cb1:	fld    st(1)
  411cb3:	rol    BYTE PTR [ebp-0x6b93b81e],cl
  411cb9:	mov    ah,0x44
  411cbb:	mov    esi,0xc26b9c03
  411cc0:	sub    al,0x24
  411cc2:	inc    BYTE PTR [edx+0x4607df35]
  411cc8:	pop    esi
  411cc9:	and    al,0x90
  411ccb:	sub    al,BYTE PTR [ecx+0x524054c4]
  411cd1:	ss dec esi
  411cd3:	adc    eax,0x1cfcc8b3
  411cd8:	sub    esi,esi
  411cda:	push   cs
  411cdb:	ds iret 
  411cdd:	fdiv   st,st(5)
  411cdf:	aas    
  411ce0:	mov    edi,0xa1d5c28a
  411ce5:	xor    dh,BYTE PTR [eax+0x75]
  411ce8:	(bad)  
  411ce9:	lods   eax,DWORD PTR ds:[esi]
  411cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ceb:	test   eax,0xc6c0de0f
  411cf0:	aad    0xc4
  411cf2:	jae    0x411d54
  411cf4:	dec    edi
  411cf5:	std    
  411cf6:	mov    DWORD PTR [ebx-0x25daa737],esi
  411cfc:	mov    al,0x86
  411cfe:	mov    eax,ds:0x9ede1027
  411d03:	or     al,0x84
  411d05:	lods   al,BYTE PTR ds:[esi]
  411d06:	arpl   WORD PTR [ecx-0x5f],ax
  411d09:	cmp    al,0x37
  411d0b:	mov    ah,dh
  411d0d:	xor    DWORD PTR [edi+0x3650ce42],esp
  411d13:	pusha  
  411d14:	ds push esi
  411d16:	push   edi
  411d17:	xchg   edx,eax
  411d18:	adc    BYTE PTR [eax+0x3a601b0a],dh
  411d1e:	(bad)  
  411d1f:	mov    esp,0x40406f28
  411d24:	sar    DWORD PTR [esi+0xe],cl
  411d27:	sahf   
  411d28:	or     ah,BYTE PTR [esi+0x5d0ebdfe]
  411d2e:	enter  0x4d5c,0xe6
  411d32:	stos   DWORD PTR es:[edi],eax
  411d33:	adc    al,0xb4
  411d35:	and    al,0xbe
  411d37:	xor    DWORD PTR ds:0xa6ffefe5,0x542d5678
  411d41:	xor    al,0xc6
  411d43:	std    
  411d44:	sub    bl,BYTE PTR [eax]
  411d46:	leave  
  411d47:	jge    0x411d73
  411d49:	fisubr DWORD PTR [esi+0x76]
  411d4c:	dec    ebp
  411d4d:	retf   0xdf7
  411d50:	pop    esi
  411d51:	addr16 cmp ch,ch
  411d54:	xchg   edi,eax
  411d55:	arpl   dx,si
  411d57:	stc    
  411d58:	and    edi,esp
  411d5a:	cwde   
  411d5b:	jmp    0xdc23:0x75bb36de
  411d62:	mov    ebx,0x73a7cd36
  411d67:	js     0x411d58
  411d69:	add    eax,0xde37884f
  411d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6f:	les    ebx,FWORD PTR [edx+0x1b]
  411d72:	add    al,cl
  411d74:	xchg   ebx,eax
  411d75:	xor    DWORD PTR [edx-0x1782bf12],eax
  411d7b:	lds    edi,FWORD PTR [ebx-0x4eea3fd5]
  411d81:	ror    edi,cl
  411d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d84:	push   ebx
  411d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d86:	fdivr  QWORD PTR [eax]
  411d88:	js     0x411dfc
  411d8a:	and    BYTE PTR ds:0xd297837a,dl
  411d90:	aas    
  411d91:	(bad)  
  411d92:	fbstp  TBYTE PTR [ecx-0x73]
  411d95:	in     eax,0xba
  411d97:	mov    cl,bl
  411d99:	and    eax,0x36a2847a
  411d9e:	retf   0x3534
  411da1:	out    dx,al
  411da2:	std    
  411da3:	sbb    al,0xe0
  411da5:	outs   dx,BYTE PTR ds:[esi]
  411da6:	xchg   DWORD PTR [eax+ebx*4+0x64c7bd4e],ebx
  411dad:	or     edi,ecx
  411daf:	fs sar bh,0x64
  411db3:	sub    esi,edx
  411db5:	pop    esi
  411db6:	cld    
  411db7:	mov    edx,0x7c80a6ec
  411dbc:	sar    BYTE PTR [ebp-0x2e],cl
  411dbf:	jo     0x411dc5
  411dc1:	popa   
  411dc2:	sub    eax,0x5b8a3a2f
  411dc7:	add    eax,0xff7db038
  411dcc:	out    0xe4,eax
  411dce:	jo     0x411e2b
  411dd0:	lds    ebp,FWORD PTR [ebx+0x720dc0ca]
  411dd6:	sbb    DWORD PTR [edx+ecx*4+0x23],edi
  411dda:	jp     0x411dbf
  411ddc:	gs mov ch,0x17
  411ddf:	mov    cl,BYTE PTR [ebx+0x32]
  411de2:	jg     0x411dc5
  411de4:	sbb    al,0xcb
  411de6:	fistp  QWORD PTR [eax]
  411de8:	into   
  411de9:	sbb    eax,0xd2d8e804
  411dee:	inc    edx
  411def:	je     0x411e6c
  411df1:	xchg   ecx,eax
  411df2:	lock mov ebp,ecx
  411df5:	push   ecx
  411df6:	fadd   DWORD PTR [ecx]
  411df8:	adc    esi,esi
  411dfa:	lock sub ch,BYTE PTR [ebx+0x50]
  411dfe:	cmp    eax,0x527b2be
  411e03:	sub    ebx,edx
  411e05:	pop    ebp
  411e06:	or     edx,DWORD PTR [ebx]
  411e08:	and    BYTE PTR [ebx+eax*4-0x6c],dh
  411e0c:	hlt    
  411e0d:	loop   0x411d99
  411e0f:	nop
  411e10:	scas   eax,DWORD PTR es:[edi]
  411e11:	mov    ss,WORD PTR [eax]
  411e13:	lea    esp,[eax+0x67e2b32d]
  411e19:	jg     0x411e08
  411e1b:	dec    esp
  411e1c:	cdq    
  411e1d:	(bad)  
  411e1e:	dec    DWORD PTR [ecx+0x1228bbf4]
  411e24:	int3   
  411e25:	xor    al,0xa9
  411e27:	xchg   ecx,eax
  411e28:	es pop ebx
  411e2a:	pop    ecx
  411e2b:	aad    0x89
  411e2d:	(bad)  [ebp+eiz*4-0x32bee35e]
  411e34:	popf   
  411e35:	hlt    
  411e36:	push   ebp
  411e37:	adc    bh,BYTE PTR [ebx-0x80]
  411e3a:	push   ecx
  411e3b:	rol    DWORD PTR [eax],1
  411e3d:	pop    esp
  411e3e:	jmp    0x711764d8
  411e43:	xchg   ecx,eax
  411e44:	int3   
  411e45:	xor    BYTE PTR [ecx-0x25],0xa2
  411e49:	or     BYTE PTR [ebx],cl
  411e4b:	repnz ds and al,0x47
  411e4f:	add    edi,DWORD PTR [ecx+0x22fa33a4]
  411e55:	test   eax,0x2c2e5839
  411e5a:	jecxz  0x411e02
  411e5c:	arpl   WORD PTR [edi-0x73],bx
  411e5f:	outs   dx,BYTE PTR ds:[esi]
  411e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e61:	(bad)  
  411e62:	fcom   QWORD PTR [eax]
  411e64:	dec    edx
  411e65:	shl    BYTE PTR [ebx-0x75],1
  411e68:	repnz retf 0xbb
  411e6c:	dec    ecx
  411e6d:	(bad)  
  411e6e:	jo     0x411e0d
  411e70:	add    eax,0xc94222bd
  411e75:	jne    0x411e3a
  411e77:	repz push esp
  411e79:	dec    esp
  411e7a:	or     dl,cl
  411e7c:	sar    DWORD PTR [edx+0x715a8483],0x37
  411e83:	xlat   BYTE PTR ds:[ebx]
  411e84:	jg     0x411eb5
  411e86:	pop    es
  411e87:	out    0xe2,eax
  411e89:	xor    ah,BYTE PTR [edx-0x1b57fbca]
  411e8f:	add    al,0x91
  411e91:	inc    esp
  411e92:	(bad)  
  411e93:	outs   dx,DWORD PTR ds:[esi]
  411e94:	stos   BYTE PTR es:[edi],al
  411e95:	cwde   
  411e96:	mov    cl,0x5f
  411e98:	jbe    0x411e84
  411e9a:	test   BYTE PTR [edi-0x68],cl
  411e9d:	sahf   
  411e9e:	sbb    BYTE PTR [ecx+0x6ac62ed2],cl
  411ea4:	sar    DWORD PTR [edi],cl
  411ea6:	cs nop
  411ea8:	in     al,0x4e
  411eaa:	scas   eax,DWORD PTR es:[edi]
  411eab:	iret   
  411eac:	mov    ebx,0x24d2580e
  411eb1:	and    al,0x67
  411eb3:	or     ah,ah
  411eb5:	mov    ds:0x5e4d596c,eax
  411eba:	ret    0x7278
  411ebd:	ret    
  411ebe:	and    al,0xa
  411ec0:	stos   DWORD PTR es:[edi],eax
  411ec1:	ins    BYTE PTR es:[edi],dx
  411ec2:	mov    bl,0xf1
  411ec4:	sahf   
  411ec5:	in     eax,0xb8
  411ec7:	add    dl,BYTE PTR [ecx+0x780f0bbe]
  411ecd:	pop    eax
  411ece:	lods   al,BYTE PTR ds:[esi]
  411ecf:	test   DWORD PTR [eax-0x27],0xfc347fb5
  411ed6:	test   DWORD PTR [edx-0x51],edx
  411ed9:	xor    eax,0xb0c94195
  411ede:	loop   0x411ea3
  411ee0:	xor    eax,0xba3adc2f
  411ee5:	mov    esi,DWORD PTR ds:0x70bb2e96
  411eeb:	mov    al,ds:0xd7abf14e
  411ef0:	and    DWORD PTR [ecx],ebx
  411ef2:	repnz vpunpckhbw ymm4,ymm4,ymm3
  411ef7:	ins    DWORD PTR es:[edi],dx
  411ef8:	bound  ebp,QWORD PTR [ebx+edx*1+0x7c]
  411efc:	out    dx,eax
  411efd:	sbb    eax,0xd2de6a1f
  411f02:	fiadd  DWORD PTR [ebx+0x61897be]
  411f08:	mov    esi,0xdb0ff682
  411f0d:	xchg   ebp,eax
  411f0e:	xlat   BYTE PTR ds:[ebx]
  411f0f:	addr16 jne 0x411e9d
  411f12:	cmp    esi,ebp
  411f14:	add    ebp,esp
  411f16:	xor    bl,BYTE PTR ds:0x3564288c
  411f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1d:	mov    WORD PTR [edx-0x17],ss
  411f20:	in     eax,0x1d
  411f22:	pop    es
  411f23:	gs mov edx,0xd1c080f6
  411f29:	inc    esi
  411f2a:	call   0xcd38:0x2fd30139
  411f31:	xor    BYTE PTR [esi-0x4e],dl
  411f34:	add    dh,BYTE PTR [esi]
  411f36:	mov    bh,0x3d
  411f38:	sti    
  411f39:	cli    
  411f3a:	mov    ecx,DWORD PTR ss:[edx+0x7a]
  411f3e:	pushf  
  411f3f:	imul   edi,ebp,0xffffff9b
  411f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f43:	cmp    BYTE PTR [ecx+0x50ceeadc],cl
  411f49:	sbb    DWORD PTR [esi],ebx
  411f4b:	mov    dl,0x58
  411f4d:	jns    0x411fbb
  411f4f:	fisub  WORD PTR [ebx-0x5b6510d2]
  411f55:	(bad)  
  411f56:	pop    esi
  411f57:	xor    bx,WORD PTR ds:0x2bd3ad2
  411f5e:	aaa    
  411f5f:	cmp    dl,BYTE PTR [ecx-0x117e58e4]
  411f65:	inc    eax
  411f66:	fild   DWORD PTR [esi+esi*4-0x25]
  411f6a:	std    
  411f6b:	out    dx,eax
  411f6c:	jnp    0x411fdc
  411f6e:	sub    eax,0x325f2136
  411f73:	sti    
  411f74:	cld    
  411f75:	sub    eax,0x11a9d265
  411f7a:	fsubr  st(1),st
  411f7c:	call   0xed42:0x3a669321
  411f83:	sub    DWORD PTR [ebx+eax*1],0xfffffff1
  411f87:	pop    esp
  411f88:	(bad)  [edx]
  411f8a:	pop    es
  411f8b:	leave  
  411f8c:	adc    eax,0x494653e2
  411f91:	js     0x411fef
  411f93:	je     0x411f94
  411f95:	cmp    esi,DWORD PTR ds:0xc6dab0b2
  411f9b:	test   eax,0x40f5a77a
  411fa0:	mov    BYTE PTR [ecx-0x2f],cl
  411fa3:	pop    ecx
  411fa4:	in     al,dx
  411fa5:	adc    esi,esi
  411fa7:	cmc    
  411fa8:	es ja  0x411fde
  411fab:	ins    BYTE PTR es:[edi],dx
  411fac:	bound  edi,QWORD PTR [eax]
  411fae:	and    cl,BYTE PTR gs:[edx]
  411fb1:	jecxz  0x411f88
  411fb3:	gs sub al,0x58
  411fb6:	dec    eax
  411fb7:	imul   BYTE PTR [si-0x75]
  411fbb:	out    dx,eax
  411fbc:	mov    bl,0xe3
  411fbe:	out    0xa7,eax
  411fc0:	test   BYTE PTR fs:[edi-0x57bd344f],0x54
  411fc8:	push   esi
  411fc9:	es sbb eax,0x8d340d53
  411fcf:	sbb    BYTE PTR [edx+ebp*2],0x21
  411fd3:	or     dh,BYTE PTR ds:0xb11d69a4
  411fd9:	mov    DWORD PTR [edi-0x54],esi
  411fdc:	inc    ebx
  411fdd:	mov    ch,0x28
  411fdf:	ins    BYTE PTR es:[edi],dx
  411fe0:	fadd   QWORD PTR [eax+0x79]
  411fe3:	sub    DWORD PTR [ecx],edi
  411fe5:	add    eax,DWORD PTR [ebp-0x7c2997b7]
  411feb:	ja     0x411f6e
  411fed:	or     bl,cl
  411fef:	or     DWORD PTR [edi],ecx
  411ff1:	xchg   esi,eax
  411ff2:	aad    0x5d
  411ff4:	adc    eax,0x553edf9
  411ff9:	mov    dl,0xe
  411ffb:	pop    ds
  411ffc:	cmp    eax,DWORD PTR [ebx+0x7114cb]
  412002:	vmovaps ymm1,ymm1
  412006:	pop    ebx
  412007:	cdq    
  412008:	mov    al,0x22
  41200a:	in     al,dx
  41200b:	xchg   edx,eax
  41200c:	inc    edi
  41200d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41200e:	outs   dx,BYTE PTR ds:[esi]
  41200f:	jae    0x411f92
  412011:	mov    al,ds:0x544e7456
  412016:	retf   0x693f
  412019:	dec    ebp
  41201a:	jle    0x411fe4
  41201c:	push   cs
  41201d:	gs dec ebp
  41201f:	xor    DWORD PTR [ebx+eiz*2],edx
  412022:	fwait
  412023:	ss dec edi
  412025:	and    BYTE PTR [ebp+ebp*2-0x34759bc3],0x36
  41202d:	mov    eax,0x6c029c76
  412032:	ret    
  412033:	ficomp DWORD PTR ds:0x3f89bee
  412039:	inc    esp
  41203a:	cmp    ebp,DWORD PTR [ebx]
  41203c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41203d:	jecxz  0x41208c
  41203f:	dec    esi
  412040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412041:	out    0x8,al
  412043:	and    esp,ebx
  412045:	sbb    cl,BYTE PTR ds:[esi+ecx*4-0x38]
  41204a:	cmp    al,0x11
  41204c:	adc    cl,al
  41204e:	(bad)  
  41204f:	aam    0x51
  412051:	or     ch,ah
  412053:	and    cl,BYTE PTR [ecx]
  412055:	repz xor eax,0xf9ff4104
  41205b:	data16 sbb al,0xb1
  41205e:	inc    DWORD PTR [esi]
  412060:	dec    ebx
  412061:	mov    ebp,0xca346fbe
  412066:	jp     0x4120aa
  412068:	mov    edi,0xcc3621a9
  41206d:	js     0x412074
  41206f:	(bad)  
  412070:	loope  0x412066
  412072:	mov    edx,0x35346023
  412077:	or     BYTE PTR ds:0x8cb3aadd,ah
  41207d:	ins    DWORD PTR es:[edi],dx
  41207e:	in     al,0x40
  412080:	dec    ecx
  412081:	cvtps2pi mm3,xmm5
  412084:	test   eax,0x1346264a
  412089:	jle    0x412024
  41208b:	pop    ebx
  41208c:	sbb    al,cl
  41208e:	les    ebx,FWORD PTR [eax+0x48]
  412091:	sar    dh,0x9e
  412094:	inc    ebx
  412095:	mov    eax,0xe49a84a3
  41209a:	sub    bh,BYTE PTR [edi+eiz*4]
  41209d:	inc    edi
  41209e:	test   al,0x78
  4120a0:	fwait
  4120a1:	das    
  4120a2:	inc    esp
  4120a3:	jo     0x4120c3
  4120a5:	cmc    
  4120a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a7:	ret    0x4456
  4120aa:	imul   BYTE PTR [eax]
  4120ac:	(bad)  
  4120ad:	fistp  QWORD PTR [edx]
  4120af:	lahf   
  4120b0:	retf   0xf3d1
  4120b3:	push   es
  4120b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b5:	jbe    0x412096
  4120b7:	inc    edx
  4120b8:	rcl    cl,0xec
  4120bb:	sub    DWORD PTR [edi-0x7f187011],ebp
  4120c1:	cmp    eax,DWORD PTR [edi-0x49]
  4120c4:	or     ebp,eax
  4120c6:	sub    eax,DWORD PTR [ebx]
  4120c8:	cmp    BYTE PTR [edx+0x5],cl
  4120cb:	ret    
  4120cc:	aas    
  4120cd:	retf   
  4120ce:	push   ebp
  4120cf:	xchg   edi,eax
  4120d0:	(bad)  
  4120d1:	fldcw  WORD PTR [edi]
  4120d3:	jno    0x4120ab
  4120d5:	jbe    0x41211a
  4120d7:	sbb    BYTE PTR [edx],0xda
  4120da:	push   cs
  4120db:	push   eax
  4120dc:	test   al,0x14
  4120de:	(bad)  
  4120df:	sahf   
  4120e0:	jecxz  0x4120b9
  4120e2:	mov    WORD PTR ds:0xbdd9b218,ss
  4120e8:	mov    BYTE PTR [ebp-0x47],0xb1
  4120ec:	jno    0x4120e3
  4120ee:	push   cs
  4120ef:	out    dx,al
  4120f0:	lods   al,BYTE PTR ds:[esi]
  4120f1:	fcmovnbe st,st(4)
  4120f3:	add    bl,BYTE PTR [edi]
  4120f5:	das    
  4120f6:	mov    eax,DWORD PTR [ebx]
  4120f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f9:	shl    DWORD PTR [ebx],cl
  4120fb:	push   cs
  4120fc:	inc    edi
  4120fd:	dec    ebp
  4120fe:	das    
  4120ff:	inc    edx
  412100:	pop    es
  412101:	pop    esp
  412102:	mov    ch,0x3a
  412104:	retf   0xdca5
  412107:	fidiv  WORD PTR [ecx-0x7b]
  41210a:	push   eax
  41210b:	pop    ebp
  41210c:	fsub   QWORD PTR [esi+0x12]
  41210f:	dec    edi
  412110:	push   ebx
  412111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412112:	or     al,0x1b
  412114:	in     eax,dx
  412115:	test   BYTE PTR [esi-0x2e],dh
  412118:	fcmovnu st,st(5)
  41211a:	bound  eax,QWORD PTR [edx+0x2b]
  41211d:	adc    BYTE PTR [ecx],bh
  41211f:	xchg   DWORD PTR [ecx],ebx
  412121:	js     0x412157
  412123:	std    
  412124:	xor    BYTE PTR [edx],bh
  412126:	enter  0x1fb4,0xe7
  41212a:	ret    0x513e
  41212d:	jae    0x412167
  41212f:	adc    cl,BYTE PTR [ecx]
  412131:	pop    eax
  412132:	add    al,0x51
  412134:	sub    ch,ch
  412136:	repnz pusha 
  412138:	je     0x4121ac
  41213a:	adc    DWORD PTR [edi-0x5],0xffffffa5
  41213e:	pop    ds
  41213f:	cwde   
  412140:	inc    ebp
  412141:	or     eax,0xc8a816e2
  412146:	push   ebx
  412147:	stos   BYTE PTR es:[edi],al
  412148:	cli    
  412149:	xor    al,0x51
  41214b:	mov    ?,WORD PTR [ebp-0x9204667]
  412151:	mov    ch,0x5a
  412153:	hlt    
  412154:	jge    0x4121c3
  412156:	sbb    eax,ebx
  412158:	fimul  DWORD PTR [bx+di+0x69]
  41215c:	clc    
  41215d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215e:	add    BYTE PTR [ebx],ch
  412160:	adc    al,0x4e
  412162:	or     al,bh
  412164:	out    dx,al
  412165:	daa    
  412166:	xlat   BYTE PTR ds:[ebx]
  412167:	xor    ch,BYTE PTR [eax-0x2c]
  41216a:	mov    al,0x35
  41216c:	and    BYTE PTR [ebx],cl
  41216e:	ins    BYTE PTR es:[edi],dx
  41216f:	jne    0x412194
  412171:	mov    edi,0x3a91fea9
  412176:	push   cs
  412177:	les    esi,FWORD PTR [esi]
  412179:	add    al,BYTE PTR [ebp-0x621dddcc]
  41217f:	adc    dl,BYTE PTR [eax]
  412181:	mov    ebx,0x3f94b6e5
  412186:	push   cs
  412187:	xchg   esp,eax
  412188:	cmp    eax,0x241ba84a
  41218d:	(bad)  
  41218e:	out    0xbd,al
  412190:	dec    ecx
  412191:	sbb    ebp,DWORD PTR [esi]
  412193:	mov    WORD PTR [edi+0x5613b7cb],ss
  412199:	fild   WORD PTR [edi]
  41219b:	cmp    BYTE PTR [ebp+eiz*8-0x12],ah
  41219f:	(bad)  
  4121a0:	iret   
  4121a1:	shr    cl,1
  4121a3:	aad    0xae
  4121a5:	mov    ah,0x5
  4121a7:	mov    BYTE PTR [eax-0x2430aff4],al
  4121ad:	push   ds
  4121ae:	lahf   
  4121af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b0:	xlat   BYTE PTR ds:[ebx]
  4121b1:	enter  0x8a41,0x73
  4121b5:	adc    DWORD PTR [ebx-0x5468274],0x78cc8038
  4121bf:	xor    DWORD PTR [ebp-0x6d86d8a8],eax
  4121c5:	test   BYTE PTR [edx+0x5dfdeadf],0x32
  4121cc:	pop    esi
  4121cd:	xor    bh,al
  4121cf:	ret    0xf35d
  4121d2:	xchg   ecx,eax
  4121d3:	jns    0x412231
  4121d5:	sub    DWORD PTR [eax+0x68],ebx
  4121d8:	mov    cl,BYTE PTR [esi+0x3b]
  4121db:	sbb    eax,0x82f82dad
  4121e0:	push   ebx
  4121e1:	lods   al,BYTE PTR ds:[esi]
  4121e2:	stos   DWORD PTR es:[edi],eax
  4121e3:	xor    al,0xcd
  4121e5:	push   esp
  4121e6:	lock cdq 
  4121e8:	sbb    BYTE PTR [ebp-0x2ca765c8],bl
  4121ee:	das    
  4121ef:	popa   
  4121f0:	mov    dl,0xf6
  4121f2:	enter  0x968a,0x10
  4121f6:	ror    DWORD PTR [esi],0x14
  4121f9:	data16 mov ds:0xc1e71089,al
  4121ff:	retf   0x71ac
  412202:	mov    al,ds:0x2cf91afd
  412207:	cld    
  412208:	cmp    dl,BYTE PTR [edi-0x4d1dc309]
  41220e:	jmp    0x6a3f:0xd3285310
  412215:	sbb    ebx,eax
  412217:	enter  0xd8fb,0x44
  41221b:	push   0x601e9129
  412220:	je     0x41225e
  412222:	shl    bl,0xf6
  412225:	aad    0x23
  412227:	sti    
  412228:	push   ecx
  412229:	in     al,dx
  41222a:	into   
  41222b:	nop
  41222c:	aam    0x89
  41222e:	scas   al,BYTE PTR es:[edi]
  41222f:	jmp    0x1463:0x7b8fa265
  412236:	imul   ebx,DWORD PTR [esi+0xb],0x3e
  41223a:	mov    dl,BYTE PTR [esi+ebx*8+0x24]
  41223e:	push   ds
  41223f:	(bad)  
  412241:	mov    DWORD PTR ds:0x4755d289,0x8b56cd7b
  41224b:	outs   dx,BYTE PTR fs:[esi]
  41224d:	(bad)  
  41224e:	and    al,0x46
  412250:	dec    edx
  412251:	shl    BYTE PTR [ebp-0x68e05368],0x41
  412258:	push   edx
  412259:	retf   0x3164
  41225c:	mov    ah,0x93
  41225e:	idiv   BYTE PTR [edx+0x52]
  412261:	aam    0x90
  412263:	lahf   
  412264:	and    al,0x6f
  412266:	cmp    ch,dh
  412268:	popf   
  412269:	and    eax,0x6f32d4f7
  41226e:	mov    dh,BYTE PTR [esi+0x111a0c8b]
  412274:	clc    
  412275:	jge    0x412208
  412277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412278:	mov    esp,0xa85dc728
  41227d:	sbb    BYTE PTR ds:0xe7130985,bl
  412283:	push   0xacc88c17
  412288:	or     ebx,DWORD PTR [edi+edx*8-0x5b]
  41228c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41228d:	sti    
  41228e:	outs   dx,DWORD PTR ds:[esi]
  41228f:	jmp    0x4122dc
  412291:	test   al,0x12
  412293:	int3   
  412294:	sub    dl,BYTE PTR [esi+eax*1-0x1f]
  412298:	push   cs
  412299:	dec    edx
  41229a:	cwde   
  41229b:	stos   BYTE PTR es:[edi],al
  41229c:	pop    esp
  41229d:	and    DWORD PTR es:[edx+0x2408ec42],esi
  4122a4:	mov    al,0x3a
  4122a6:	dec    esi
  4122a7:	lea    edi,ds:0x1ef38101
  4122ad:	cmp    DWORD PTR [ecx-0x790342f7],ecx
  4122b3:	call   0x87ee6f6a
  4122b8:	iret   
  4122b9:	jmp    0xb61d:0x2db37a8b
  4122c0:	mov    es,WORD PTR [ecx+0x6c]
  4122c3:	dec    ecx
  4122c4:	adc    eax,0x25f6c49
  4122c9:	pop    ebp
  4122ca:	or     al,0x67
  4122cc:	or     al,0x7d
  4122ce:	jne    0x412310
  4122d0:	xchg   BYTE PTR [edx],bh
  4122d2:	repnz and al,0x58
  4122d5:	and    BYTE PTR [ecx+0x6e],0xb3
  4122d9:	es repz cmp al,0x10
  4122dd:	int    0xa4
  4122df:	stc    
  4122e0:	inc    esi
  4122e1:	push   ecx
  4122e2:	cwde   
  4122e3:	dec    edi
  4122e4:	daa    
  4122e5:	pop    edx
  4122e6:	(bad)
  4122e9:	xor    DWORD PTR [esi+0x48],ecx
  4122ec:	jmp    0x1ef8:0x79233fb9
  4122f3:	(bad)  
  4122f4:	out    dx,eax
  4122f5:	std    
  4122f6:	pop    ecx
  4122f7:	jns    0x4122b2
  4122f9:	inc    ebp
  4122fa:	cli    
  4122fb:	lea    ebp,[edx-0x4e]
  4122fe:	or     al,0x33
  412300:	out    0xdf,al
  412302:	test   eax,0x2c9ee0e8
  412307:	in     al,dx
  412308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412309:	std    
  41230a:	lods   al,BYTE PTR ds:[esi]
  41230b:	dec    edi
  41230c:	push   ds
  41230d:	mov    al,0xee
  41230f:	aam    0xca
  412311:	mov    ebp,0x7a272170
  412316:	mov    ?,WORD PTR [esi*8+0x47cb0e4b]
  41231d:	xor    eax,0xc74fd99c
  412322:	int    0x63
  412324:	ins    BYTE PTR es:[edi],dx
  412325:	jne    0x4123a0
  412327:	sub    al,0x89
  412329:	gs xor al,0x2d
  41232c:	inc    BYTE PTR [ebp-0x1e57b24d]
  412332:	xor    dl,BYTE PTR [edi+0x2f3847f]
  412338:	sbb    DWORD PTR [esi-0x1adcca8e],ebp
  41233e:	inc    edi
  41233f:	push   esi
  412340:	lods   eax,DWORD PTR ds:[esi]
  412341:	or     bh,BYTE PTR [eax]
  412343:	in     eax,0x69
  412345:	arpl   cx,dx
  412347:	out    0x12,al
  412349:	xor    ah,bl
  41234b:	push   ds
  41234c:	shl    ah,1
  41234e:	push   esp
  41234f:	aaa    
  412350:	and    ebp,edx
  412352:	aaa    
  412353:	mov    eax,ds:0xcc83743f
  412358:	retf   0x5f5f
  41235b:	cli    
  41235c:	xchg   ecx,eax
  41235d:	daa    
  41235e:	fcom   QWORD PTR [ebx+ecx*1+0x47693fcc]
  412365:	inc    eax
  412366:	or     bh,cl
  412368:	cdq    
  412369:	jmp    0xe88cf0f7
  41236e:	fs or  al,0xde
  412371:	call   0xff15f1eb
  412376:	out    0x7c,eax
  412378:	adc    BYTE PTR [ebx+0x9],al
  41237b:	dec    esp
  41237c:	js     0x4123ae
  41237e:	in     eax,0x1d
  412380:	mov    al,ds:0xf616d19
  412385:	inc    esi
  412386:	cld    
  412387:	pop    edi
  412388:	es ins DWORD PTR es:[edi],dx
  41238a:	cmp    eax,0x28275ffb
  41238f:	(bad)  
  412390:	xor    eax,0xfc984ca
  412395:	rcr    BYTE PTR [ecx+ecx*4+0x62],1
  412399:	retf   
  41239a:	aam    0xb7
  41239c:	inc    esp
  41239d:	jmp    0xebbf:0x17d9e353
  4123a4:	cmp    ecx,DWORD PTR [ebx+0x1ee23b4f]
  4123aa:	jl     0x4123c7
  4123ac:	rcl    DWORD PTR [eax],0x5a
  4123af:	jg     0x41241a
  4123b1:	inc    edx
  4123b2:	mov    al,ds:0x2687b8cd
  4123b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b8:	jmp    0xd1b4:0xfa5489f0
  4123bf:	or     BYTE PTR [eax-0x2ebe65a0],cl
  4123c5:	jmp    0x412361
  4123c7:	and    DWORD PTR [edx],ebp
  4123c9:	cmp    ecx,esi
  4123cb:	xchg   esp,eax
  4123cc:	adc    eax,0x3d361669
  4123d1:	dec    edi
  4123d2:	out    dx,eax
  4123d3:	mov    al,0xab
  4123d5:	push   edx
  4123d6:	pop    ecx
  4123d7:	mov    ds:0x897891c8,al
  4123dc:	pop    es
  4123dd:	jmp    0x412407
  4123df:	jl     0x41244b
  4123e1:	fst    DWORD PTR es:[edi+0x36dd3c9]
  4123e8:	test   DWORD PTR [ebp+0x413a80e3],edi
  4123ee:	pop    ss
  4123ef:	or     DWORD PTR [ecx-0x6c],esi
  4123f2:	sbb    BYTE PTR [eax+0x26],ah
  4123f5:	mov    esi,0xd0decd0d
  4123fa:	mov    ds:0xf7a0dd3a,al
  4123ff:	push   0x70
  412401:	push   ebp
  412402:	mov    ebp,0xe486cf5a
  412407:	nop
  412408:	xchg   DWORD PTR [ebx+eax*4],ebp
  41240b:	neg    edx
  41240d:	lea    edi,[ebp+0x4f12d50b]
  412413:	push   edi
  412414:	jae    0x41246a
  412416:	push   ds
  412417:	add    al,0x7e
  412419:	rcr    dl,0xc3
  41241c:	loopne 0x412427
  41241e:	jae    0x4123d6
  412420:	push   eax
  412421:	and    al,0x41
  412423:	rol    cl,0xeb
  412426:	sub    al,0x24
  412428:	call   0x9818:0x2154c68e
  41242f:	daa    
  412430:	adc    al,0x33
  412432:	xor    al,0xaf
  412434:	adc    esp,DWORD PTR [ebp-0x1d89d61c]
  41243a:	mov    bl,0x27
  41243c:	ss jmp 0xcba11bab
  412442:	push   ecx
  412443:	lock dec ecx
  412445:	sub    edx,DWORD PTR [esi]
  412447:	adc    DWORD PTR [edi+0x3a],esi
  41244a:	mov    bh,0x2c
  41244c:	xchg   ebx,eax
  41244d:	mov    al,0x60
  41244f:	mov    esp,0x3597a5ea
  412454:	jnp    0x412412
  412456:	jmp    0x41246b
  412458:	int3   
  412459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41245a:	test   al,0xc7
  41245c:	mov    al,0x34
  41245e:	push   ebp
  41245f:	clc    
  412460:	dec    ebp
  412461:	xchg   esp,eax
  412462:	ja     0x41246e
  412464:	shr    BYTE PTR ds:0xc0a7fac3,0x60
  41246b:	popf   
  41246c:	imul   ecx,DWORD PTR [esi-0x38],0xc392f8e8
  412473:	fsub   DWORD PTR ds:[edx]
  412476:	cmc    
  412477:	ret    0xd393
  41247a:	scas   eax,DWORD PTR es:[edi]
  41247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41247c:	xchg   edx,eax
  41247d:	hlt    
  41247e:	mov    al,0x67
  412480:	seta   cl
  412483:	fmul   st(2),st
  412485:	sbb    eax,0x6b88492e
  41248a:	jno    0x4124f2
  41248c:	(bad)  
  41248d:	add    eax,0xdb73878a
  412492:	in     al,dx
  412493:	cmc    
  412494:	cmp    edi,DWORD PTR [ecx]
  412496:	pop    esi
  412497:	rcl    DWORD PTR [eax-0x1efc3b3e],cl
  41249d:	imul   ebx,DWORD PTR [edx-0x3921bd0a],0xffffff96
  4124a4:	repz add al,0x28
  4124a7:	xor    al,0xff
  4124a9:	fdivr  st(3),st
  4124ab:	mov    eax,0x5e07a880
  4124b0:	or     eax,0x30c39c8c
  4124b5:	cmp    DWORD PTR [ebx],edx
  4124b7:	fstp   TBYTE PTR [edx+ebx*2-0x783d9619]
  4124be:	mov    ch,0x7
  4124c0:	pop    es
  4124c1:	bound  ebx,QWORD PTR [esi-0x6348c749]
  4124c7:	cmp    ebp,edx
  4124c9:	test   BYTE PTR [ebx-0x2e],bh
  4124cc:	loope  0x41251c
  4124ce:	or     DWORD PTR ds:0x251767f3,esi
  4124d4:	les    esi,FWORD PTR [ebx]
  4124d6:	mov    ah,0xc9
  4124d8:	rcl    DWORD PTR [ebx+0x1b644828],cl
  4124de:	push   edx
  4124df:	mov    esi,DWORD PTR [esi+0x69]
  4124e2:	hlt    
  4124e3:	ins    DWORD PTR es:[edi],dx
  4124e4:	pop    eax
  4124e5:	inc    ecx
  4124e6:	pop    esp
  4124e7:	dec    eax
  4124e8:	sub    BYTE PTR ds:0xc523cad7,dl
  4124ee:	mov    ds:0x312d224e,eax
  4124f3:	sub    BYTE PTR [esi+eiz*4],0x36
  4124f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f8:	add    eax,0x8ff3d174
  4124fd:	sub    ch,BYTE PTR [ecx-0x12d33744]
  412503:	add    DWORD PTR [eax],ebx
  412505:	jbe    0x4124f1
  412507:	dec    edx
  412508:	sti    
  412509:	xchg   edx,eax
  41250a:	xchg   ch,ah
  41250c:	cmp    eax,0xb45d67e3
  412511:	pop    edx
  412512:	fwait
  412513:	out    dx,al
  412514:	pop    ss
  412515:	sub    dl,dh
  412517:	pop    esi
  412518:	(bad)  
  412519:	sti    
  41251a:	(bad)  
  41251c:	dec    eax
  41251d:	mov    ds:0xfd87a462,al
  412522:	sub    DWORD PTR [edi+edx*4+0x494f8b78],0xffffff9b
  41252a:	fstp   QWORD PTR [ebx]
  41252c:	das    
  41252d:	sub    BYTE PTR [ebp-0x3f9ba892],ch
  412533:	xchg   ebp,eax
  412534:	sbb    BYTE PTR [edi-0x29],bl
  412537:	jno    0x412562
  412539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253a:	xor    ecx,ebp
  41253c:	mov    dh,0xd3
  41253e:	cs dec edi
  412540:	inc    eax
  412541:	push   ebp
  412542:	push   edi
  412543:	out    0x93,eax
  412545:	jne    0x412531
  412547:	mov    dh,bl
  412549:	adc    ah,BYTE PTR ss:[edi+0x4b6e08a4]
  412550:	cmp    ah,ch
  412552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412553:	dec    eax
  412554:	fcomp  DWORD PTR [edx+eax*2+0x16]
  412558:	hlt    
  412559:	pop    esi
  41255a:	jp     0x4125bc
  41255c:	cli    
  41255d:	and    BYTE PTR [ecx-0x4],cl
  412560:	retf   0xc202
  412563:	mov    edx,0x45e82c8d
  412568:	cwde   
  412569:	(bad)  
  41256b:	jnp    0x4125b8
  41256d:	fstp   DWORD PTR [ebx+0x3a]
  412570:	sbb    eax,0xf8dda42
  412575:	push   esp
  412576:	sahf   
  412577:	pop    ecx
  412578:	push   ebx
  412579:	popa   
  41257a:	or     eax,0x5ed3da33
  41257f:	test   al,0x88
  412581:	inc    ebp
  412582:	gs ds cdq 
  412585:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412587:	sahf   
  412588:	jle    0x412591
  41258a:	cmp    eax,0xfccdaee1
  41258f:	sbb    BYTE PTR [ebx+eax*2],al
  412592:	inc    esi
  412593:	xchg   bl,al
  412595:	(bad)  
  412596:	in     eax,dx
  412597:	lods   eax,DWORD PTR ds:[esi]
  412598:	sbb    al,0xb3
  41259a:	scas   eax,DWORD PTR es:[edi]
  41259b:	out    0x4f,eax
  41259d:	jb     0x412532
  41259f:	push   eax
  4125a0:	xchg   edi,eax
  4125a1:	dec    edx
  4125a2:	cmp    esi,eax
  4125a4:	add    DWORD PTR [ebx+edi*2+0x1c292966],edi
  4125ab:	(bad)  
  4125ac:	or     DWORD PTR [eax-0x65],ebx
  4125af:	or     edi,DWORD PTR [ebx]
  4125b1:	mov    eax,ds:0xf7bdfa06
  4125b6:	popa   
  4125b7:	jae    0x412607
  4125b9:	ret    0x5835
  4125bc:	and    BYTE PTR [eax],bl
  4125be:	or     ah,BYTE PTR [edi-0xb]
  4125c1:	xchg   ebx,eax
  4125c2:	mov    cl,0x46
  4125c4:	jle    0x41263c
  4125c6:	fsub   DWORD PTR [eax+0x3d]
  4125c9:	dec    edi
  4125ca:	sub    ch,bh
  4125cc:	xchg   BYTE PTR [eax+ebp*4],ah
  4125cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125d0:	jg     0x4125b4
  4125d2:	mov    eax,ds:0x1473733e
  4125d7:	adc    al,0x11
  4125d9:	fld    DWORD PTR [ebx+0x3dec8981]
  4125df:	shl    BYTE PTR [eax-0x659bb7c3],cl
  4125e5:	test   BYTE PTR [eax+0x571f5fcd],cl
  4125eb:	inc    ecx
  4125ec:	test   DWORD PTR [bp+0x713b],edx
  4125f1:	lods   eax,DWORD PTR ds:[esi]
  4125f2:	jecxz  0x41259b
  4125f4:	icebp  
  4125f5:	mov    edx,esi
  4125f7:	xor    DWORD PTR [edx],esi
  4125f9:	add    al,0x45
  4125fb:	adc    eax,0xd929835
  412600:	and    dh,BYTE PTR [edx+eax*4+0xf44cefd]
  412607:	mov    es,WORD PTR [ecx]
  412609:	xchg   esp,eax
  41260a:	cmp    BYTE PTR [eax+0x7a],ch
  41260d:	ror    DWORD PTR [eax-0x6],cl
  412610:	fsub   DWORD PTR [ecx+0x5b312b6a]
  412616:	cld    
  412617:	loopne 0x412672
  412619:	pop    esp
  41261a:	push   eax
  41261b:	aas    
  41261c:	ins    BYTE PTR es:[edi],dx
  41261d:	and    edi,DWORD PTR [eax+0x6c]
  412620:	xor    BYTE PTR [ecx],0x50
  412623:	jge    0x4126a3
  412625:	iret   
  412626:	xor    BYTE PTR [edi-0x11900ec3],dl
  41262c:	lea    edi,[edi-0x62]
  41262f:	retf   0x8a25
  412632:	cld    
  412633:	ret    0x116e
  412636:	stos   BYTE PTR es:[edi],al
  412637:	xor    ebx,DWORD PTR [edi+ebx*2-0x5]
  41263b:	inc    edx
  41263c:	pop    es
  41263d:	cdq    
  41263e:	dec    eax
  41263f:	pop    esi
  412640:	sub    DWORD PTR [esp+esi*2],ebp
  412643:	les    esi,FWORD PTR [edx-0x4f]
  412646:	dec    edi
  412647:	ins    DWORD PTR es:[edi],dx
  412648:	call   0xb21d69c2
  41264d:	add    dl,BYTE PTR [ebp+0x27d60b82]
  412653:	imul   eax,DWORD PTR [ecx],0xeb44410
  412659:	mov    ebx,DWORD PTR [eax+eiz*2-0x7d]
  41265d:	add    eax,0xbcd88a09
  412662:	jns    0x412640
  412664:	or     BYTE PTR [eax+0x5f],bl
  412667:	daa    
  412668:	std    
  412669:	jg     0x4126bd
  41266b:	cmp    al,0xcb
  41266d:	xchg   ebx,eax
  41266e:	or     dl,BYTE PTR [ecx-0x6e]
  412671:	int3   
  412672:	adc    eax,0x162cea42
  412677:	popf   
  412678:	les    ebx,FWORD PTR [esi-0xa]
  41267b:	push   ss
  41267c:	or     bl,BYTE PTR [ebx]
  41267e:	test   DWORD PTR [ecx+0x1e],esp
  412681:	je     0x412661
  412683:	lods   al,BYTE PTR ds:[esi]
  412684:	jnp    0x41262c
  412686:	xchg   edx,eax
  412687:	(bad)  
  412688:	xor    al,0x25
  41268a:	dec    eax
  41268b:	test   al,0x54
  41268d:	or     eax,DWORD PTR [edx]
  41268f:	push   esi
  412690:	cmp    DWORD PTR [ebp+0x734f8e93],esp
  412696:	push   ecx
  412697:	adc    al,0x43
  412699:	iret   
  41269a:	ds int 0xa7
  41269d:	and    eax,0xf8d90082
  4126a2:	cmp    eax,0xa8f29964
  4126a7:	inc    edx
  4126a8:	dec    edi
  4126a9:	jb     0x412664
  4126ab:	fcomp  QWORD PTR [eax-0x4d01308c]
  4126b1:	aaa    
  4126b2:	fisub  WORD PTR [ecx+0x3d]
  4126b5:	dec    ebx
  4126b6:	ins    DWORD PTR es:[edi],dx
  4126b7:	inc    ecx
  4126b8:	mov    dl,BYTE PTR [eax+eax*8+0x572a8b4e]
  4126bf:	std    
  4126c0:	pop    eax
  4126c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c2:	inc    ebx
  4126c3:	push   0x9d7776a5
  4126c8:	(bad)  
  4126c9:	mov    ch,0x21
  4126cb:	cmp    esp,DWORD PTR [ebp+0x73590d4a]
  4126d1:	(bad)  
  4126d2:	mov    esi,0x2b0b0db2
  4126d7:	sub    ebx,DWORD PTR [ecx]
  4126d9:	dec    esp
  4126da:	aad    0xc3
  4126dc:	jnp    0x412734
  4126de:	lods   al,BYTE PTR ds:[esi]
  4126df:	leave  
  4126e0:	push   cs
  4126e1:	not    edi
  4126e3:	sbb    DWORD PTR [edx],edi
  4126e5:	inc    esp
  4126e6:	inc    ecx
  4126e7:	adc    ebp,DWORD PTR [esi]
  4126e9:	inc    eax
  4126ea:	imul   ecx,DWORD PTR [edi],0x4f
  4126ed:	mov    dh,0x8d
  4126ef:	mov    BYTE PTR [edx+edi*1-0x1dad44a1],bh
  4126f6:	push   0xb5c06270
  4126fb:	mov    eax,DWORD PTR [edx]
  4126fd:	adc    al,BYTE PTR [ebp-0x5c]
  412700:	jmp    0xabd2:0xd64fc9b9
  412707:	mov    eax,ds:0x1501b485
  41270c:	fcom   DWORD PTR [bp-0x7561]
  412711:	popa   
  412712:	mov    ds:0xea9a6127,eax
  412717:	pop    es
  412718:	xor    cl,BYTE PTR [ebx-0x44]
  41271b:	test   eax,0x8eb3bbab
  412720:	nop
  412721:	pop    ss
  412722:	push   edi
  412723:	mov    edx,0xb5956a55
  412728:	bound  edx,QWORD PTR [edx-0x12]
  41272b:	dec    esi
  41272c:	nop
  41272d:	sar    cl,cl
  41272f:	neg    DWORD PTR [edi+0xce81cda]
  412735:	sbb    al,0x3a
  412737:	jp     0x4126c1
  412739:	daa    
  41273a:	ss mov cl,0x34
  41273d:	scas   al,BYTE PTR es:[edi]
  41273e:	sub    al,0xc6
  412740:	jb     0x4127bf
  412742:	lock pop ebp
  412744:	sub    BYTE PTR [eax+0x7d39f9a9],bl
  41274a:	ficomp WORD PTR [ebx+0x44]
  41274d:	push   ebx
  41274e:	xchg   ebx,eax
  41274f:	fsubr  QWORD PTR [ebx]
  412751:	mov    ch,dh
  412753:	xchg   ecx,eax
  412754:	rol    bh,0xab
  412757:	cmp    al,0xee
  412759:	call   0xb71e:0x65ad077b
  412760:	or     dh,BYTE PTR [ebp+edi*1-0x1e]
  412764:	loopne 0x412702
  412766:	fsubr  DWORD PTR [esi+0x25]
  412769:	mov    eax,ds:0x48c459e7
  41276e:	in     al,dx
  41276f:	push   es
  412770:	mov    ds:0x44e37533,eax
  412775:	adc    DWORD PTR [edx-0x108d68cb],ebp
  41277b:	bound  edi,QWORD PTR [ebp+0x65d75037]
  412781:	std    
  412782:	push   0x6b
  412784:	jecxz  0x412786
  412786:	push   eax
  412787:	adc    bl,BYTE PTR [ebp-0x3]
  41278a:	sbb    dh,ah
  41278c:	mov    ebx,ebx
  41278e:	aas    
  41278f:	pushf  
  412790:	xchg   BYTE PTR [esi-0x4c7d6501],ah
  412796:	add    al,0x84
  412798:	inc    eax
  412799:	iret   
  41279a:	out    0x9d,al
  41279c:	adc    ebp,ebp
  41279e:	dec    ecx
  41279f:	psrlq  mm4,QWORD PTR [ecx-0x2]
  4127a3:	jae    0x412813
  4127a5:	xchg   ecx,eax
  4127a6:	(bad)  
  4127a7:	jnp    0x4127f0
  4127a9:	push   0x112732c
  4127ae:	dec    esp
  4127af:	shl    DWORD PTR [edx],0xd
  4127b2:	cwde   
  4127b3:	push   0xffffff8a
  4127b5:	sub    esp,DWORD PTR [ebx+0x5199f9f7]
  4127bb:	pop    eax
  4127bc:	mov    ds:0x72a397ec,eax
  4127c1:	xor    bh,ch
  4127c3:	jp     0x412824
  4127c5:	in     eax,dx
  4127c6:	push   ss
  4127c7:	jno    0x4127eb
  4127c9:	mov    edi,0x45238148
  4127ce:	in     al,dx
  4127cf:	xor    eax,0x44f94f8
  4127d4:	leave  
  4127d5:	ret    
  4127d6:	sub    eax,0x253db742
  4127db:	(bad)  
  4127dc:	outs   dx,DWORD PTR ds:[esi]
  4127dd:	popa   
  4127de:	jo     0x412829
  4127e0:	push   ss
  4127e1:	gs jge 0x4127d8
  4127e4:	popf   
  4127e5:	test   eax,0xb84f867e
  4127ea:	inc    edi
  4127eb:	std    
  4127ec:	ja     0x4127b1
  4127ee:	rcr    BYTE PTR [edx-0x6b],0xe7
  4127f2:	popa   
  4127f3:	leave  
  4127f4:	std    
  4127f5:	mov    al,ds:0xec5a5375
  4127fa:	mov    ebp,0xb8308c1e
  4127ff:	das    
  412800:	cmc    
  412801:	sar    dh,1
  412803:	fldz   
  412805:	pop    ebx
  412806:	retf   0x6b9f
  412809:	jge    0x4127c1
  41280b:	sub    BYTE PTR [eax+0x7c9d565a],ch
  412811:	shl    BYTE PTR ds:0x282ed1b,cl
  412817:	push   ds
  412818:	mov    al,0x64
  41281a:	bound  esi,QWORD PTR [edx+0x70b204b]
  412820:	ins    BYTE PTR es:[edi],dx
  412821:	cs addr16 ret 0x6e39
  412826:	sar    DWORD PTR [edx+0x26],0x17
  41282a:	mov    esi,0x9ce22e7e
  41282f:	pop    ebp
  412830:	neg    BYTE PTR [ebx+0x62b71561]
  412836:	add    eax,0x9a010cd
  41283b:	les    ebx,FWORD PTR [edi-0x43137a89]
  412841:	adc    DWORD PTR [ebp+0x56],esi
  412844:	xchg   ecx,eax
  412845:	(bad)  
  412846:	mov    bh,0x51
  412848:	rcl    DWORD PTR [ecx-0x42],cl
  41284b:	cmp    dl,BYTE PTR [ecx-0x18adfec4]
  412851:	mov    bh,0xa4
  412853:	jge    0x4128b2
  412855:	or     ecx,esi
  412857:	mul    al
  412859:	add    eax,0x8bbefa7d
  41285e:	imul   esi,DWORD PTR [eax-0x47db8670],0x2c371db7
  412868:	push   esp
  412869:	add    BYTE PTR [edx+0x38756cd],cl
  41286f:	loop   0x4128b4
  412871:	mov    al,BYTE PTR [ebx+edi*4+0x38]
  412875:	dec    eax
  412876:	xor    ebx,DWORD PTR [edi+ecx*1+0x4e832dac]
  41287d:	in     eax,0x8b
  41287f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412880:	test   al,0x8d
  412882:	mov    BYTE PTR [eax],ah
  412884:	mov    ebx,0xe38854bd
  412889:	nop
  41288a:	jae    0x4128a0
  41288c:	aad    0x41
  41288e:	test   eax,0x51be52f1
  412893:	lods   eax,DWORD PTR ds:[esi]
  412894:	clc    
  412895:	dec    DWORD PTR ds:[edx]
  412898:	inc    esi
  412899:	ret    
  41289a:	fmul   QWORD PTR [edx]
  41289c:	inc    esp
  41289d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41289e:	jge    0x412881
  4128a0:	mov    dh,0xa9
  4128a2:	xchg   ecx,eax
  4128a3:	add    ch,bh
  4128a5:	or     eax,0xf5bf6bd7
  4128aa:	pushf  
  4128ab:	rol    BYTE PTR [ebx+0x18412eb9],1
  4128b1:	iret   
  4128b2:	push   0xdd3819d
  4128b7:	fxch   st(4)
  4128b9:	xchg   esi,eax
  4128ba:	dec    esp
  4128bb:	dec    ebx
  4128bc:	das    
  4128bd:	jne    0x41289f
  4128bf:	sti    
  4128c0:	xchg   BYTE PTR [eax+0x14bac43],cl
  4128c6:	mov    ch,0x76
  4128c8:	and    al,0x1b
  4128ca:	push   ebx
  4128cb:	inc    esi
  4128cc:	mov    dh,BYTE PTR [ebp+ebx*8-0x21a576df]
  4128d3:	pusha  
  4128d4:	xor    al,BYTE PTR [ebp-0x4d8b190]
  4128da:	stos   BYTE PTR es:[edi],al
  4128db:	add    al,0xf9
  4128dd:	jae    0x412932
  4128df:	xchg   DWORD PTR [esp+edi*2-0x10561771],eax
  4128e6:	pop    edx
  4128e7:	and    eax,0xbf8dfdf7
  4128ec:	cmp    edx,DWORD PTR [edi+edi*1+0x304d37f6]
  4128f3:	pop    edx
  4128f4:	ficom  DWORD PTR [edi+0x6830c3f4]
  4128fa:	inc    eax
  4128fb:	fsubr  QWORD PTR [ebx+0x4807e6f8]
  412901:	scas   al,BYTE PTR es:[edi]
  412902:	or     BYTE PTR [edx-0x34],bh
  412905:	bound  ebp,QWORD PTR [esi-0x4f4f7409]
  41290b:	inc    edi
  41290c:	xor    cl,BYTE PTR [edx-0x3f]
  41290f:	pop    ss
  412910:	retf   0xd3a3
  412913:	enter  0x3650,0x2b
  412917:	ficom  WORD PTR es:[ecx-0x5e252e03]
  41291e:	adc    DWORD PTR [ebp+0x39b19c60],0x2
  412925:	mov    dh,0xdf
  412927:	mov    edi,0xa8a248fb
  41292c:	xor    ch,BYTE PTR [ecx]
  41292e:	jp     0x4128d7
  412930:	out    dx,al
  412931:	jno    0x41291e
  412933:	cmp    eax,0xdf720841
  412938:	scas   al,BYTE PTR es:[edi]
  412939:	cmc    
  41293a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41293b:	xor    al,0xdd
  41293d:	dec    ebp
  41293e:	mov    ebx,0x8bcd0c3e
  412943:	test   DWORD PTR [eax],0x6402773f
  412949:	mov    dl,0x95
  41294b:	in     eax,dx
  41294c:	jmp    0x8de70711
  412951:	fst    st(5)
  412953:	sub    dl,BYTE PTR [ebx+0x4f]
  412956:	and    eax,0xd831d957
  41295b:	iret   
  41295c:	jle    0x4129b2
  41295e:	xchg   ecx,eax
  41295f:	mov    dh,0x70
  412961:	in     eax,0xab
  412963:	xor    WORD PTR ds:0x5a72edf9,sp
  41296a:	out    0x69,al
  41296c:	add    DWORD PTR [edi+0x1c],0x54
  412970:	add    al,0xef
  412972:	pop    ebx
  412973:	cmp    BYTE PTR [ebp-0x49],0x8
  412977:	push   eax
  412978:	or     dl,BYTE PTR [eax-0x53239f3]
  41297e:	push   0x7bf12a32
  412983:	retf   
  412984:	pop    esp
  412985:	adc    eax,DWORD PTR [esi+0x26]
  412988:	cwde   
  412989:	fwait
  41298a:	mov    ds:0x40c8654e,al
  41298f:	retf   0x827c
  412992:	mov    ah,0xde
  412994:	ja     0x4129ab
  412996:	xor    DWORD PTR [edi],edx
  412998:	icebp  
  412999:	ins    BYTE PTR es:[edi],dx
  41299a:	pop    edx
  41299b:	popf   
  41299c:	std    
  41299d:	ja     0x41296e
  41299f:	shl    BYTE PTR cs:[eax-0x4a255f1a],0xfb
  4129a7:	mov    eax,DWORD PTR [ecx+0x77]
  4129aa:	scas   al,BYTE PTR es:[edi]
  4129ab:	adc    eax,0x73ebd7a2
  4129b0:	dec    ebx
  4129b1:	or     dl,ah
  4129b3:	sbb    BYTE PTR [ebx-0x54],al
  4129b6:	leave  
  4129b7:	(bad)  
  4129b8:	fistp  WORD PTR [eax+0x7be77643]
  4129be:	out    0xec,al
  4129c0:	push   ebx
  4129c1:	mov    BYTE PTR [ebx+0xb],ah
  4129c4:	or     al,0xb1
  4129c6:	jb     0x412995
  4129c8:	or     DWORD PTR [edi],edx
  4129ca:	inc    ecx
  4129cb:	add    DWORD PTR [ebp+0x59],0xffffffda
  4129cf:	mov    cl,0xa1
  4129d1:	push   ebx
  4129d2:	rcl    DWORD PTR [ebp-0xd4ef7a],0xe2
  4129d9:	ins    DWORD PTR es:[edi],dx
  4129da:	mov    ecx,0x3d68c85b
  4129df:	rol    BYTE PTR [ebx],cl
  4129e1:	mov    esi,0x8b54cbd6
  4129e6:	lods   eax,DWORD PTR ds:[esi]
  4129e7:	loope  0x41299f
  4129e9:	mov    eax,ds:0x320a1863
  4129ee:	out    0xec,al
  4129f0:	test   DWORD PTR [esi],ecx
  4129f2:	aam    0x3c
  4129f4:	inc    eax
  4129f5:	xor    al,0xbf
  4129f7:	aam    0x73
  4129f9:	out    0x51,al
  4129fb:	adc    al,0x80
  4129fd:	fisub  DWORD PTR [edx-0x18]
  412a00:	xchg   ebp,eax
  412a01:	or     eax,0xfd1051f8
  412a06:	cld    
  412a07:	pop    edi
  412a08:	inc    edx
  412a09:	jns    0x412a58
  412a0b:	ret    
  412a0c:	shr    DWORD PTR [esi-0x69],0x5c
  412a10:	call   0xe984f468
  412a15:	mov    WORD PTR fs:[esi+0x4fe4ff4d],?
  412a1c:	loopne 0x4129fd
  412a1e:	mov    esi,0x26d8b156
  412a23:	pusha  
  412a24:	and    esp,esi
  412a26:	add    ah,al
  412a28:	clc    
  412a29:	xor    BYTE PTR [esi+edx*8-0x3a],dh
  412a2d:	ss dec esi
  412a2f:	bound  ecx,QWORD PTR [ebp-0x4e]
  412a32:	out    0xee,al
  412a34:	mov    WORD PTR [ebx+ebx*1-0x1a5fad6a],ss
  412a3b:	std    
  412a3c:	shr    BYTE PTR [ebp+ebx*8+0x21],0xfa
  412a41:	dec    esi
  412a43:	les    eax,FWORD PTR [ebp-0x58da482f]
  412a49:	inc    ecx
  412a4a:	pop    es
  412a4b:	dec    edx
  412a4c:	ficomp DWORD PTR [esi+0x2e1789df]
  412a52:	sub    BYTE PTR [eax+0x7f938535],ah
  412a58:	scas   al,BYTE PTR es:[edi]
  412a59:	fdiv   QWORD PTR ds:0x413b5965
  412a5f:	popa   
  412a60:	push   0x8b6065a9
  412a65:	je     0x412a21
  412a67:	adc    dh,bh
  412a69:	out    0x19,eax
  412a6b:	pop    es
  412a6c:	imul   ebp,ebx,0xffffff98
  412a6f:	add    ebx,DWORD PTR [edi-0x35]
  412a72:	popf   
  412a73:	and    al,0x2e
  412a75:	test   DWORD PTR [edx],edi
  412a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a78:	(bad)  
  412a79:	arpl   WORD PTR [edi+0x23],ax
  412a7c:	mov    ds,WORD PTR [ebx+0x23c31c6e]
  412a82:	pop    ss
  412a83:	mov    esp,0xee6b93c0
  412a88:	fidiv  WORD PTR [edx+0x86770ff]
  412a8e:	fsubr  QWORD PTR [ebx-0x4715f78f]
  412a94:	sbb    eax,0x936985d4
  412a99:	xor    eax,0x5e4c5d4d
  412a9e:	out    dx,eax
  412a9f:	mov    ebx,0x69a1147a
  412aa4:	xchg   DWORD PTR [esi],ebx
  412aa6:	mov    ds:0x8827b66b,al
  412aab:	push   ebx
  412aac:	adc    eax,0xb5237a27
  412ab1:	sub    al,BYTE PTR [esi-0x44962028]
  412ab7:	cmp    ebx,ecx
  412ab9:	les    ebx,FWORD PTR [edx]
  412abb:	xchg   edi,ebx
  412abd:	nop
  412abe:	jmp    0x34518d7b
  412ac3:	push   ecx
  412ac4:	fnstenv [ebx+0x78d80764]
  412aca:	fwait
  412acb:	mov    es:0xdfb2d893,al
  412ad1:	(bad)  
  412ad2:	push   ds
  412ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad4:	fistp  WORD PTR [ebx]
  412ad6:	jmp    0xce60:0xf110d92c
  412add:	adc    ebx,DWORD PTR ds:[eax-0x22]
  412ae1:	xchg   ecx,eax
  412ae2:	nop
  412ae3:	(bad)  
  412ae4:	jmp    0x55abcba7
  412ae9:	mov    ch,0x7d
  412aeb:	fnsave [esi-0x7ef80199]
  412af1:	outs   dx,DWORD PTR ds:[esi]
  412af2:	imul   ebx,DWORD PTR [ecx],0x29a6b217
  412af8:	in     al,dx
  412af9:	rcr    DWORD PTR [esi+0x53],cl
  412afc:	icebp  
  412afd:	std    
  412afe:	pop    edi
  412aff:	cmp    eax,0x39c553c1
  412b04:	bound  ebp,QWORD PTR [edi-0x1071141]
  412b0a:	test   DWORD PTR [eax-0x12702374],edx
  412b10:	cs mov esp,0xeb4c35ab
  412b16:	lods   eax,DWORD PTR ds:[esi]
  412b17:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412b19:	dec    ebx
  412b1a:	call   0xe6a45739
  412b1f:	jnp    0x412aca
  412b21:	jns    0x412b9f
  412b23:	add    al,0x9
  412b25:	mov    ch,BYTE PTR [ebx+0x609bd373]
  412b2b:	jmp    0xe770c23f
  412b30:	loop   0x412ab4
  412b32:	(bad)  
  412b33:	mov    cl,cl
  412b35:	rcl    DWORD PTR [ebx+0x78bf4656],0x4d
  412b3c:	or     al,0xa0
  412b3e:	lahf   
  412b3f:	inc    edi
  412b40:	cld    
  412b41:	mov    BYTE PTR [eax],ch
  412b43:	ucomiss xmm5,DWORD PTR [ebp-0x2cbddca1]
  412b4a:	cmp    al,0x9d
  412b4c:	sahf   
  412b4d:	aas    
  412b4e:	sbb    dh,BYTE PTR [ebp+ebx*1-0x1f328989]
  412b55:	call   0x3718a6a9
  412b5a:	test   al,0xf5
  412b5c:	add    DWORD PTR [ebp+0x5173166c],ebx
  412b62:	or     eax,0x5c28f77d
  412b67:	jnp    0x412b23
  412b69:	mov    edx,0x2b763222
  412b6e:	out    0x6a,al
  412b70:	mov    cl,BYTE PTR [ebx]
  412b72:	xchg   DWORD PTR [edi],esi
  412b74:	sub    BYTE PTR [ecx-0x67],dh
  412b77:	pop    esi
  412b78:	out    dx,al
  412b79:	sub    DWORD PTR [ecx],ebx
  412b7b:	cli    
  412b7c:	sub    al,0xc0
  412b7e:	push   ds
  412b7f:	pusha  
  412b80:	lahf   
  412b81:	ret    0xb23
  412b84:	imul   edi,DWORD PTR [ebx-0x2fabfff8],0x2f
  412b8b:	aaa    
  412b8c:	adc    cl,BYTE PTR [edx+ebp*2]
  412b8f:	mov    cs,WORD PTR gs:[ecx-0x3c948167]
  412b96:	and    al,0xf0
  412b98:	test   eax,0x27bde376
  412b9d:	inc    ebp
  412b9e:	rol    bh,cl
  412ba0:	retf   0x46ff
  412ba3:	fwait
  412ba4:	jecxz  0x412b75
  412ba6:	std    
  412ba7:	stc    
  412ba8:	test   DWORD PTR [edx],esi
  412baa:	out    0x37,al
  412bac:	test   DWORD PTR [edx+0x26e55608],0x1f417fc5
  412bb6:	xor    DWORD PTR [ebx-0x1604cea4],eax
  412bbc:	shl    BYTE PTR [edi-0x6e],0x1f
  412bc0:	and    ah,BYTE PTR [ebx-0x1b]
  412bc3:	js     0x412baf
  412bc5:	xor    eax,0x28251cd9
  412bca:	dec    esp
  412bcb:	call   FWORD PTR [esi-0x627a9471]
  412bd1:	pushf  
  412bd2:	xchg   DWORD PTR [ebp-0x5c03d532],esi
  412bd8:	xor    ecx,edi
  412bda:	push   ebx
  412bdb:	repnz outs dx,BYTE PTR ds:[esi]
  412bdd:	or     BYTE PTR [edx-0x1dc4ea16],0x7b
  412be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412be5:	mov    DWORD PTR [ebx+edx*1],eax
  412be8:	aad    0x5f
  412bea:	mov    edx,0x3fc84f8a
  412bef:	mul    BYTE PTR ds:0xb33a4add
  412bf5:	fisub  DWORD PTR [edi+ebx*1+0x17]
  412bf9:	adc    bl,BYTE PTR [edi+0x44]
  412bfc:	test   al,0x83
  412bfe:	in     eax,dx
  412bff:	push   edi
  412c00:	std    
  412c01:	xchg   esp,eax
  412c02:	push   ebp
  412c03:	data16 fsubr QWORD PTR [ecx-0x2616624a]
  412c0a:	imul   edx
  412c0c:	(bad)  
  412c0d:	das    
  412c0e:	jp     0x412ba5
  412c10:	jp     0x412c39
  412c12:	jno    0x412ba8
  412c14:	stc    
  412c15:	pushf  
  412c16:	jnp    0x412c22
  412c18:	retf   0xa71e
  412c1b:	push   cs
  412c1c:	xor    DWORD PTR [ebx-0x3062e9ca],esi
  412c22:	fwait
  412c23:	jnp    0x412bdc
  412c25:	push   esi
  412c26:	rcr    DWORD PTR [ecx+0x6603debe],cl
  412c2c:	xchg   edx,eax
  412c2d:	iret   
  412c2e:	repz push edx
  412c30:	pop    ebp
  412c31:	add    ebp,DWORD PTR [edx+0x6536f34f]
  412c37:	fwait
  412c38:	in     al,dx
  412c39:	and    BYTE PTR [edi],dl
  412c3b:	fnsave ds:0xe920a910
  412c41:	cld    
  412c42:	mov    al,0x7
  412c44:	add    dl,BYTE PTR ds:0x9fe56901
  412c4a:	cmp    dl,al
  412c4c:	sub    bl,bh
  412c4e:	enter  0x4b63,0x90
  412c52:	add    BYTE PTR [ecx+0x3252841f],bh
  412c58:	xor    DWORD PTR [ecx-0x3f],edx
  412c5b:	or     ah,BYTE PTR [edi-0x70]
  412c5e:	jmp    0x6860:0xdc0df7c3
  412c65:	or     ebp,esi
  412c67:	jmp    0x6aa6:0x9739c2f4
  412c6e:	jmp    0x412bfa
  412c70:	mul    BYTE PTR [edx]
  412c72:	fist   DWORD PTR [esi+eax*1-0x39]
  412c76:	scas   al,BYTE PTR es:[edi]
  412c77:	in     al,0xa7
  412c79:	mov    cl,0x94
  412c7b:	mov    edx,0xaf0961fd
  412c80:	cmp    ecx,eax
  412c82:	in     al,0x82
  412c84:	nop
  412c85:	in     eax,dx
  412c86:	cwde   
  412c87:	jbe    0x412ccd
  412c89:	or     esp,DWORD PTR [esi]
  412c8b:	fwait
  412c8c:	dec    edi
  412c8d:	jecxz  0x412c7f
  412c8f:	xlat   BYTE PTR ds:[ebx]
  412c90:	mov    eax,ds:0xca47d4e4
  412c95:	int3   
  412c96:	dec    ecx
  412c97:	add    eax,0x11fa2114
  412c9c:	ret    0x27ee
  412c9f:	lods   al,BYTE PTR ds:[esi]
  412ca0:	sti    
  412ca1:	call   FWORD PTR [ebx+0x68]
  412ca4:	addr16 in eax,0xab
  412ca7:	fwait
  412ca8:	xor    BYTE PTR [edx+ebp*1+0x570a4c0c],al
  412caf:	add    BYTE PTR ds:0xf82a59d7,al
  412cb5:	enter  0xdb5,0x95
  412cb9:	and    BYTE PTR [ecx+0x34],0x3e
  412cbd:	ret    0xaf16
  412cc0:	and    ebx,DWORD PTR [ebp+0x32db2efd]
  412cc6:	xchg   esp,eax
  412cc7:	leave  
  412cc8:	scas   al,BYTE PTR es:[edi]
  412cc9:	sub    bh,cl
  412ccb:	and    BYTE PTR [eax],al
  412ccd:	mov    ds:0xde887711,eax
  412cd2:	out    dx,al
  412cd3:	fcmovnb st,st(5)
  412cd5:	and    edi,DWORD PTR [edi]
  412cd7:	cmc    
  412cd8:	adc    eax,0xc1241fd7
  412cdd:	mov    bx,0xce00
  412ce1:	dec    ebp
  412ce2:	mov    WORD PTR [edi],cs
  412ce4:	out    dx,al
  412ce5:	je     0x412c97
  412ce7:	mov    BYTE PTR [edx+0x3e19d6c3],ch
  412ced:	inc    edx
  412cee:	sub    eax,0x333e9e12
  412cf3:	outs   dx,DWORD PTR ds:[esi]
  412cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf5:	stos   DWORD PTR es:[edi],eax
  412cf6:	sub    bh,BYTE PTR [edi+0x45cfde13]
  412cfc:	push   ebx
  412cfd:	int3   
  412cfe:	inc    ebp
  412cff:	pop    eax
  412d00:	loopne 0x412d3c
  412d02:	outs   dx,DWORD PTR ds:[esi]
  412d03:	scas   eax,DWORD PTR es:[edi]
  412d04:	or     BYTE PTR [ebp+0x78],ah
  412d07:	(bad)  
  412d08:	inc    eax
  412d0a:	inc    ebx
  412d0b:	xor    BYTE PTR [edx],0x90
  412d0e:	add    bh,al
  412d10:	rcl    BYTE PTR [ebx-0x20246093],1
  412d16:	lds    edi,FWORD PTR [ebx+0x194a7433]
  412d1c:	xchg   DWORD PTR [edx+0x36c8bacc],edi
  412d22:	jmp    0x31903faf
  412d27:	imul   BYTE PTR [ebx]
  412d29:	mov    ebx,0x874d78e4
  412d2e:	cwde   
  412d2f:	das    
  412d30:	add    esi,eax
  412d32:	pop    es
  412d33:	(bad)  
  412d34:	push   cs
  412d35:	push   cs
  412d36:	dec    eax
  412d37:	(bad)  
  412d39:	mov    edx,0xbdc1500
  412d3e:	sub    ebp,ebx
  412d40:	nop
  412d41:	(bad)  
  412d42:	cmp    DWORD PTR [edi+0x3f],ebp
  412d45:	and    esi,esi
  412d47:	pop    es
  412d48:	or     BYTE PTR [edx+0x3b1f2fe4],ah
  412d4e:	xchg   ecx,eax
  412d4f:	addr16 ret 
  412d51:	outs   dx,DWORD PTR ds:[esi]
  412d52:	pop    es
  412d53:	jae    0x412d0e
  412d55:	jo     0x412d93
  412d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d58:	popa   
  412d59:	out    0xb1,al
  412d5b:	xchg   edx,eax
  412d5c:	sbb    ebp,esp
  412d5e:	pop    ds
  412d5f:	dec    ebp
  412d60:	(bad)  
  412d61:	dec    esp
  412d62:	mov    al,ds:0xbc021f76
  412d67:	push   ebx
  412d68:	fsubr  st,st(4)
  412d6a:	mov    ah,0xe2
  412d6c:	in     al,dx
  412d6d:	test   al,0xa
  412d6f:	(bad)
  412d72:	(bad)  
  412d74:	fsub   QWORD PTR [edx+0x408d52ed]
  412d7a:	dec    edx
  412d7b:	ins    BYTE PTR es:[edi],dx
  412d7c:	cwde   
  412d7d:	repnz stos BYTE PTR es:[edi],al
  412d7f:	push   esi
  412d80:	aas    
  412d81:	shl    BYTE PTR [ebp-0x431339d7],1
  412d87:	inc    ecx
  412d88:	and    al,0x8e
  412d8a:	fisttp WORD PTR [ebx]
  412d8c:	bound  ebx,QWORD PTR [eax]
  412d8e:	nop
  412d8f:	into   
  412d90:	inc    edx
  412d91:	test   DWORD PTR [eax-0x39],eax
  412d94:	arpl   WORD PTR [ebp-0x1826a15],bp
  412d9a:	mov    cl,0xcc
  412d9c:	cdq    
  412d9d:	push   0x6649e7dc
  412da2:	add    DWORD PTR [ebx-0x7f5ef729],esi
  412da8:	pop    es
  412da9:	cld    
  412daa:	pop    edi
  412dab:	mov    bl,0xd6
  412dad:	rcl    BYTE PTR [esi],cl
  412daf:	cmp    eax,0xd049da21
  412db4:	or     al,0x2e
  412db6:	lods   al,BYTE PTR ds:[esi]
  412db7:	test   eax,0xc5ab40de
  412dbc:	mov    dl,BYTE PTR [ebp+0x58a14af9]
  412dc2:	imul   ecx,DWORD PTR [ecx+0x11],0x18
  412dc6:	sub    bh,cl
  412dc8:	or     eax,0x6c3adf55
  412dcd:	lods   al,BYTE PTR ds:[esi]
  412dce:	out    dx,al
  412dcf:	cli    
  412dd0:	dec    eax
  412dd1:	adc    ebp,edx
  412dd3:	inc    ebp
  412dd4:	es inc eax
  412dd6:	in     al,0xd4
  412dd8:	icebp  
  412dd9:	sbb    eax,0xacb24497
  412dde:	in     al,dx
  412ddf:	pop    es
  412de0:	lods   eax,DWORD PTR ds:[esi]
  412de1:	pop    ds
  412de2:	cmp    esi,esp
  412de4:	lods   eax,DWORD PTR ds:[esi]
  412de5:	mov    ecx,DWORD PTR [edi]
  412de7:	in     al,dx
  412de8:	(bad)  
  412dea:	iret   
  412deb:	popf   
  412dec:	jnp    0x412e64
  412dee:	dec    ebp
  412def:	enter  0xce4f,0x67
  412df3:	inc    edi
  412df4:	(bad)  [edx]
  412df6:	addr16 popf 
  412df8:	xchg   esp,eax
  412df9:	lods   al,BYTE PTR ds:[esi]
  412dfa:	jnp    0x412d8b
  412dfc:	arpl   WORD PTR [edi-0x62],ax
  412dff:	lods   eax,DWORD PTR ds:[esi]
  412e00:	cs xor bh,bl
  412e03:	or     bl,BYTE PTR [eax-0x3a469211]
  412e09:	in     eax,0xe9
  412e0b:	(bad)  
  412e0c:	aas    
  412e0d:	inc    edx
  412e0e:	mov    dh,0xc3
  412e10:	xchg   esp,eax
  412e11:	pop    esi
  412e12:	pop    ds
  412e13:	shl    ch,cl
  412e15:	pushf  
  412e16:	xor    cl,BYTE PTR [edx-0x1a]
  412e19:	push   ss
  412e1a:	or     esp,edi
  412e1c:	call   0x75185092
  412e21:	sbb    ebp,DWORD PTR [edx+edi*8+0x64]
  412e25:	add    BYTE PTR [ecx-0x45945731],dh
  412e2b:	and    BYTE PTR [ebp+0x1a],ah
  412e2e:	inc    eax
  412e2f:	cmp    BYTE PTR [eax+0x0],bh
  412e32:	push   ss
  412e33:	mov    ds:0x6ad2d1f,al
  412e38:	mov    ah,0x3a
  412e3a:	mov    DWORD PTR [ebx],ebx
  412e3c:	mov    eax,0x7272a503
  412e41:	or     eax,0x71eafc5c
  412e46:	in     eax,dx
  412e47:	jg     0x412e30
  412e49:	and    al,0x82
  412e4b:	pop    ebp
  412e4c:	or     bh,0x9d
  412e4f:	pop    edi
  412e50:	jo     0x412e12
  412e52:	int3   
  412e53:	push   0xf
  412e55:	(bad)
  412e58:	mov    eax,ds:0x7d9e6a6d
  412e5d:	pop    ebp
  412e5e:	popf   
  412e5f:	ret    
  412e60:	enter  0xc8cc,0x1a
  412e64:	or     edi,DWORD PTR [edx+0x4e]
  412e67:	repz pop ebp
  412e69:	jle    0x412df0
  412e6b:	and    BYTE PTR [esi],0x46
  412e6e:	fldcw  WORD PTR [edi-0x73]
  412e71:	mov    DWORD PTR [ebp+0x240cd263],esp
  412e77:	jle    0x412e68
  412e79:	adc    eax,0x8a32ca00
  412e7e:	cwde   
  412e7f:	(bad)  
  412e80:	imul   esi,ebp,0x4cfb6b54
  412e86:	(bad)  
  412e87:	or     BYTE PTR [edx+edi*2-0x439cfd64],bl
  412e8e:	jecxz  0x412e5e
  412e90:	js     0x412efb
  412e92:	push   eax
  412e93:	mov    ebp,DWORD PTR [ebp+ebp*8-0x45]
  412e97:	xor    edx,esp
  412e99:	mov    esp,DWORD PTR [edx]
  412e9b:	inc    ecx
  412e9c:	je     0x412e50
  412e9e:	jg     0x412ecf
  412ea0:	and    al,0x3e
  412ea2:	xlat   BYTE PTR ds:[ebx]
  412ea3:	pop    esi
  412ea4:	cmc    
  412ea5:	mov    edi,ecx
  412ea7:	adc    BYTE PTR [esi],cl
  412ea9:	into   
  412eaa:	scas   al,BYTE PTR es:[edi]
  412eab:	mov    dl,0x44
  412ead:	push   es
  412eae:	addr16 clc 
  412eb0:	mov    dl,BYTE PTR [ebx-0x41ce53ec]
  412eb6:	add    edi,DWORD PTR [esi+eax*8+0xf]
  412eba:	sbb    eax,0x19ef0efa
  412ebf:	cwde   
  412ec0:	fisttp QWORD PTR [ebp-0x5c]
  412ec3:	cmp    al,0x61
  412ec5:	pop    esi
  412ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec7:	cmp    al,0xea
  412ec9:	ds (bad) 
  412ecb:	daa    
  412ecc:	sub    edx,esp
  412ece:	das    
  412ecf:	push   0x31
  412ed1:	xor    eax,0x64060b5e
  412ed6:	imul   BYTE PTR cs:[ebp+0x4a]
  412eda:	nop
  412edb:	ins    BYTE PTR es:[edi],dx
  412edc:	loopne 0x412e96
  412ede:	jmp    0x412ece
  412ee0:	call   0x4db1316f
  412ee5:	shl    DWORD PTR [edi+0x37d0ade5],cl
  412eeb:	int    0xd8
  412eed:	add    BYTE PTR [ecx-0x14a88516],ah
  412ef3:	mov    ds:0x1cdd05e4,eax
  412ef8:	lods   eax,DWORD PTR ds:[esi]
  412ef9:	push   0x2348b73d
  412efe:	repnz ror BYTE PTR [ebp-0x72],cl
  412f02:	mov    al,BYTE PTR [edx]
  412f04:	jecxz  0x412f00
  412f06:	imul   eax,DWORD PTR [ebp-0x12],0x74
  412f0a:	xor    eax,DWORD PTR ds:0xe1f0e1cb
  412f10:	sbb    al,0x67
  412f12:	jmp    0x7b2505ca
  412f17:	imul   esp,DWORD PTR [ebx+0x3d],0xf9e087f7
  412f1e:	add    DWORD PTR [edi-0x14b77837],ebp
  412f24:	or     eax,DWORD PTR [edx-0x434bfaf7]
  412f2a:	mov    ds,WORD PTR [eax-0x2166fd30]
  412f30:	lock jns 0x412f94
  412f33:	loope  0x412f87
  412f35:	pop    ss
  412f36:	shl    DWORD PTR [edi],cl
  412f38:	jecxz  0x412fb2
  412f3a:	repz iret 
  412f3c:	mov    ch,0xaf
  412f3e:	xchg   edx,eax
  412f3f:	mov    BYTE PTR [esi],ch
  412f41:	sub    al,0xb3
  412f43:	fs mov esp,0x7bb777b7
  412f49:	jp     0x412ef6
  412f4b:	jp     0x412fb1
  412f4d:	push   esp
  412f4e:	and    esi,DWORD PTR [eax]
  412f50:	mov    WORD PTR [edx+0x17],?
  412f53:	test   al,0xba
  412f55:	call   0xe43b:0x4d6c477f
  412f5c:	adc    eax,0x9aa9b1c5
  412f61:	(bad)  
  412f63:	or     al,0x11
  412f65:	add    DWORD PTR [ebx-0x24007ae],0x11
  412f6c:	mov    DWORD PTR [edi],eax
  412f6e:	icebp  
  412f6f:	xchg   ebp,eax
  412f70:	mov    bh,0x49
  412f72:	out    0x7d,eax
  412f74:	and    bh,BYTE PTR [ebx]
  412f76:	lds    ecx,FWORD PTR [edx-0x4b]
  412f79:	hlt    
  412f7a:	fldenv [eax-0x70]
  412f7d:	jne    0x412ff1
  412f7f:	inc    ecx
  412f80:	xchg   edx,eax
  412f81:	je     0x412ffd
  412f83:	and    DWORD PTR [edx+esi*4],ebp
  412f86:	pop    ecx
  412f87:	or     edi,edi
  412f89:	rcl    DWORD PTR [edi+0x4616ef1d],cl
  412f8f:	out    dx,eax
  412f90:	jmp    0x7953672f
  412f95:	jne    0x412f71
  412f97:	xchg   esp,eax
  412f98:	mov    ch,0x68
  412f9a:	lods   al,BYTE PTR ds:[esi]
  412f9b:	lods   al,BYTE PTR ds:[esi]
  412f9c:	js     0x412fa7
  412f9e:	clc    
  412f9f:	add    DWORD PTR [edx-0x43],ebp
  412fa2:	mov    edi,0xd645bab9
  412fa7:	ret    0x6a20
  412faa:	push   ebx
  412fab:	das    
  412fac:	mov    ah,0x6e
  412fae:	call   0xc7a397e
  412fb3:	xor    dl,bh
  412fb5:	mov    bh,0x26
  412fb7:	adc    BYTE PTR [edi],al
  412fb9:	push   ebp
  412fba:	mov    ch,0xe8
  412fbc:	mov    esi,0xd4edcf72
  412fc1:	and    bh,bh
  412fc3:	jg     0x412fc3
  412fc5:	repnz imul edi,edi,0xb
  412fc9:	out    dx,al
  412fca:	js     0x412f69
  412fcc:	mov    ebx,0x9110d373
  412fd1:	push   ecx
  412fd2:	dec    edx
  412fd3:	push   0xffffffb9
  412fd5:	dec    eax
  412fd6:	ficomp WORD PTR [edx-0x2d]
  412fd9:	push   cs
  412fda:	mov    ebp,0x50af9d37
  412fdf:	repz iret 
  412fe1:	inc    ecx
  412fe2:	out    0xbf,eax
  412fe4:	mov    ds:0xac76bbc4,eax
  412fe9:	pop    ss
  412fea:	pop    ebx
  412feb:	pop    eax
  412fec:	mul    DWORD PTR [edx-0x17]
  412fef:	imul   edi,eax,0xc331143a
  412ff5:	inc    edi
  412ff6:	or     al,ah
  412ff8:	xchg   ecx,eax
  412ff9:	mov    ebp,0x49c68881
  412ffe:	xor    ebp,DWORD PTR [ebx-0x19]
  413001:	cmp    eax,0xaded4a1e
  413006:	sub    al,ah
  413008:	dec    ebp
  413009:	jmp    0xa68cbeea
  41300e:	jb     0x413015
  413010:	jle    0x41308b
  413012:	dec    ebx
  413013:	xor    eax,0xa4a5d514
  413018:	daa    
  413019:	jb     0x41301e
  41301b:	pushf  
  41301c:	stos   BYTE PTR es:[edi],al
  41301d:	cmp    DWORD PTR [edi-0x4c1fcc0f],0xc861aa6f
  413027:	mov    edi,0x777b65e4
  41302c:	xchg   edx,eax
  41302d:	(bad)
  413031:	sbb    al,0x29
  413033:	inc    esp
  413034:	mov    ds:0x8cea311a,eax
  413039:	xchg   esp,eax
  41303a:	ja     0x412fca
  41303c:	push   ds
  41303d:	and    cl,al
  41303f:	dec    edi
  413040:	inc    ecx
  413041:	outs   dx,BYTE PTR ds:[esi]
  413042:	cwde   
  413043:	fsub   DWORD PTR ss:[ebx*1+0x70b004f]
  41304b:	xchg   ebp,eax
  41304c:	xor    DWORD PTR [edx],eax
  41304e:	das    
  41304f:	push   ss
  413050:	je     0x41305a
  413052:	and    BYTE PTR [edi-0x51],dl
  413055:	mov    ecx,0xb90418da
  41305a:	mov    ds:0xfa88f7fd,al
  41305f:	sti    
  413060:	je     0x413061
  413062:	push   es
  413063:	retf   0x417a
  413066:	jmp    0x4130b6
  413068:	push   ebx
  413069:	into   
  41306a:	xchg   BYTE PTR [ecx],al
  41306c:	rol    DWORD PTR [edi],1
  41306e:	push   cs
  41306f:	mov    bh,0x2c
  413071:	cwde   
  413072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413075:	inc    esp
  413076:	sbb    ebx,DWORD PTR [esi+0xdb1de64]
  41307c:	addr16 and eax,0x6c4baf47
  413082:	inc    edi
  413083:	mov    ds:0x70a1aeb,al
  413088:	jno    0x41306d
  41308a:	cld    
  41308b:	lock mov eax,0x3217cd2a
  413091:	push   esi
  413092:	dec    ecx
  413093:	add    al,0x7b
  413095:	loopne 0x4130d1
  413097:	ret    0x7178
  41309a:	dec    edx
  41309b:	out    dx,eax
  41309c:	cmp    DWORD PTR [ecx+0x779156c2],edx
  4130a2:	mov    edi,0xdc70ac92
  4130a7:	lock aam 0xdc
  4130aa:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ac:	sub    dl,BYTE PTR [esi-0x4e]
  4130af:	push   ds
  4130b0:	jnp    0x4130f3
  4130b2:	sti    
  4130b3:	sbb    eax,0xe98e6cef
  4130b8:	(bad)  
  4130b9:	xchg   ebp,eax
  4130ba:	or     edx,0xffffffd5
  4130bd:	les    ebx,FWORD PTR [ebp+0x20]
  4130c0:	mov    eax,0x25bd304d
  4130c5:	sub    DWORD PTR ds:0xfcef949c,edi
  4130cb:	into   
  4130cc:	mov    cl,0x6b
  4130ce:	push   cs
  4130cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d0:	out    dx,eax
  4130d1:	jmp    0x14f4160b
  4130d6:	in     eax,dx
  4130d7:	popf   
  4130d8:	sti    
  4130d9:	mov    ds:0xe3b8cc85,al
  4130de:	(bad)  
  4130df:	jge    0x413119
  4130e1:	std    
  4130e2:	ins    BYTE PTR es:[edi],dx
  4130e3:	mov    ecx,0x68262d1b
  4130e8:	js     0x413101
  4130ea:	stos   BYTE PTR es:[edi],al
  4130eb:	fsubr  QWORD PTR [ecx+0x4a5c29d4]
  4130f1:	call   0x9b8b:0xc7b87e86
  4130f8:	jo     0x4130c3
  4130fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fb:	or     cl,BYTE PTR [ebx]
  4130fd:	aam    0xa1
  4130ff:	and    eax,DWORD PTR [edx+edi*1-0x1ee3e3f]
  413106:	pop    edx
  413107:	ss scas eax,DWORD PTR es:[edi]
  413109:	stc    
  41310a:	test   BYTE PTR [eax],cl
  41310c:	sti    
  41310d:	stos   DWORD PTR es:[edi],eax
  41310e:	fcomp  QWORD PTR [edx+ebx*8]
  413111:	inc    esp
  413112:	mov    ah,0xff
  413114:	jnp    0x413128
  413116:	xchg   ebx,eax
  413117:	jecxz  0x413140
  413119:	aam    0x6
  41311b:	shl    edi,1
  41311d:	adc    cl,BYTE PTR [ebx+eiz*2]
  413120:	gs pop es
  413122:	jno    0x413141
  413124:	ja     0x413155
  413126:	sti    
  413127:	pop    ebp
  413128:	rcl    BYTE PTR [ecx],0xc6
  41312b:	push   esi
  41312c:	fiadd  WORD PTR [ecx-0x7a36a02f]
  413132:	ja     0x41313b
  413134:	rcl    esp,cl
  413136:	cmc    
  413137:	adc    al,0xd3
  413139:	mov    ch,0x6b
  41313b:	stc    
  41313c:	cmp    esp,ebx
  41313e:	test   edi,0xed148198
  413144:	add    ch,BYTE PTR [ecx]
  413146:	or     al,al
  413148:	daa    
  413149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314a:	cmp    al,0x1f
  41314c:	sahf   
  41314d:	xchg   ecx,eax
  41314e:	outs   dx,DWORD PTR ds:[esi]
  41314f:	(bad)  
  413151:	fiadd  DWORD PTR [esi-0x23ff5089]
  413157:	mov    BYTE PTR [edx-0x64],0xeb
  41315b:	lods   eax,DWORD PTR ds:[esi]
  41315c:	pop    ss
  41315d:	aas    
  41315e:	mov    ds:0x5f2b3bbf,eax
  413163:	cmp    eax,0x62db140d
  413168:	aam    0x48
  41316a:	sub    al,0xa4
  41316c:	fist   WORD PTR [ebx+0x6b]
  41316f:	in     eax,0x31
  413171:	imul   BYTE PTR [ecx+0x648996af]
  413177:	inc    esi
  413178:	out    0x4a,al
  41317a:	mov    eax,ds:0x72a2f0a0
  41317f:	stos   BYTE PTR es:[edi],al
  413180:	clc    
  413181:	xor    DWORD PTR [edi-0x3e99d723],0x6d3ea9f6
  41318b:	fcomp  QWORD PTR [edx-0x1c04e637]
  413191:	push   0x7150d343
  413196:	and    BYTE PTR [eax+ebp*8-0x41],ah
  41319a:	jo     0x413172
  41319c:	pop    edi
  41319d:	(bad)  
  41319e:	std    
  41319f:	jecxz  0x41319c
  4131a1:	clc    
  4131a2:	mov    esi,0x6051461
  4131a7:	outs   dx,BYTE PTR ds:[esi]
  4131a8:	sbb    bh,dl
  4131aa:	push   es
  4131ab:	xor    al,BYTE PTR [ebx-0xf57a82f]
  4131b1:	add    al,BYTE PTR ss:[esi+0x2049e188]
  4131b8:	loop   0x413237
  4131ba:	jp     0x4131ba
  4131bc:	lds    edi,FWORD PTR ds:[edi]
  4131bf:	pop    ss
  4131c0:	sub    eax,0xd65c2bd9
  4131c5:	ds adc eax,0x27c8332
  4131cb:	mov    dl,0x28
  4131cd:	es (bad) 
  4131cf:	jp     0x4131f8
  4131d1:	fild   WORD PTR [eax-0x74b53923]
  4131d7:	ds ret 
  4131d9:	in     eax,dx
  4131da:	mov    DWORD PTR [eax+0x4f],esi
  4131dd:	in     eax,0xf8
  4131df:	xchg   ebx,eax
  4131e0:	jecxz  0x413249
  4131e2:	icebp  
  4131e3:	lds    edi,FWORD PTR [ebx+ecx*2-0x1d]
  4131e7:	pop    eax
  4131e8:	lock fs pop esi
  4131eb:	mov    eax,ds:0xe56d4c6d
  4131f0:	xor    al,0x8f
  4131f2:	enter  0x585e,0x4f
  4131f6:	cmp    DWORD PTR [ecx+edi*2],ecx
  4131f9:	mov    cl,0x1a
  4131fb:	pop    ss
  4131fc:	(bad)  
  4131fe:	sbb    DWORD PTR [edx+0x731236bd],0xd666b205
  413208:	in     al,0x25
  41320a:	or     DWORD PTR [ecx+ebx*2],edi
  41320d:	retf   
  41320e:	xchg   esi,eax
  41320f:	fcmovne st,st(1)
  413211:	btr    esp,eax
  413214:	out    dx,eax
  413215:	inc    edx
  413216:	cmp    eax,0xa59513c7
  41321b:	mov    ?,WORD PTR [edx+0x59]
  41321e:	xchg   BYTE PTR [eax],al
  413220:	pop    ecx
  413221:	ss dec ecx
  413223:	jecxz  0x413234
  413225:	test   al,0xf8
  413227:	xchg   edx,eax
  413228:	stc    
  413229:	xchg   edx,eax
  41322a:	push   edx
  41322b:	pop    edx
  41322c:	xor    DWORD PTR [ecx+0x23039dcf],ebp
  413232:	and    DWORD PTR [esi],ecx
  413234:	mov    DWORD PTR [eax+0x34b46067],edi
  41323a:	jno    0x41327b
  41323c:	sbb    DWORD PTR [esi+0x5e05e72d],edx
  413242:	push   es
  413243:	cli    
  413244:	or     BYTE PTR [ecx+0x6c8a2252],al
  41324a:	sbb    BYTE PTR [edx-0x8c55ffc],bh
  413250:	(bad)
  413254:	inc    eax
  413255:	dec    edi
  413256:	retf   0xea36
  413259:	mov    WORD PTR [esi+eax*8-0xe],ss
  41325d:	js     0x413222
  41325f:	xor    eax,0xd9af34e4
  413264:	mov    ecx,0x4d5e5d61
  413269:	and    eax,0x3450384c
  41326e:	fisttp DWORD PTR [edi]
  413270:	and    eax,0x189a858e
  413275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413276:	and    eax,0xdc209649
  41327b:	push   edi
  41327c:	adc    dl,ch
  41327e:	mov    ebp,0x63bab6ae
  413283:	dec    eax
  413284:	lahf   
  413285:	push   0x7fadb603
  41328a:	push   esp
  41328b:	sbb    al,0xa0
  41328d:	cmp    al,0xb1
  41328f:	add    bl,BYTE PTR [ebx-0x33]
  413292:	push   ds
  413293:	iret   
  413294:	nop
  413295:	adc    bh,dl
  413297:	cld    
  413298:	pop    eax
  413299:	fnstcw WORD PTR [ebx]
  41329b:	mov    dh,0x6d
  41329d:	test   al,0x7
  41329f:	loope  0x41322d
  4132a1:	stos   DWORD PTR es:[edi],eax
  4132a2:	cli    
  4132a3:	rcr    cl,1
  4132a5:	sub    al,0x3
  4132a7:	cs xchg ecx,eax
  4132a9:	or     al,0x9d
  4132ab:	push   ecx
  4132ac:	fdiv   DWORD PTR [eiz*2+0x352ba009]
  4132b3:	push   edx
  4132b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b5:	cs iret 
  4132b7:	pop    ecx
  4132b8:	cld    
  4132b9:	or     DWORD PTR [eax],0xb3fcd11b
  4132bf:	or     ebx,DWORD PTR [eax-0x1d0eddc7]
  4132c5:	inc    edx
  4132c6:	test   al,0x7b
  4132c8:	jp     0x4132b8
  4132ca:	mov    bh,0xb7
  4132cc:	jne    0x413334
  4132ce:	ja     0x4132fa
  4132d0:	retf   0x6573
  4132d3:	sub    eax,0x70fde760
  4132d8:	adc    DWORD PTR [ecx+0x54],edx
  4132db:	dec    ecx
  4132dc:	sbb    BYTE PTR [eax+0x11],cl
  4132df:	call   0x4914:0xd0399c91
  4132e6:	fwait
  4132e7:	cmp    edi,DWORD PTR [edi-0x3]
  4132ea:	test   BYTE PTR [eax+ebp*2-0x14],dh
  4132ee:	xchg   esp,eax
  4132ef:	sbb    ah,ah
  4132f1:	lock out dx,al
  4132f3:	dec    esp
  4132f4:	repz mov ecx,0xd843b328
  4132fa:	pop    ds
  4132fb:	xchg   ebx,eax
  4132fc:	pop    ebx
  4132fd:	test   BYTE PTR [ebx],ch
  4132ff:	hlt    
  413300:	jg     0x413331
  413302:	sub    BYTE PTR [edx+esi*2+0x39f2ce81],bh
  413309:	(bad)  
  41330a:	sbb    esp,edx
  41330c:	loop   0x4132e4
  41330e:	loopne 0x4132d6
  413310:	inc    BYTE PTR [ecx]
  413312:	inc    eax
  413313:	retf   
  413314:	in     eax,0xe8
  413316:	add    DWORD PTR [ebp+0x5],eax
  413319:	mov    ds:0x7b96e03a,al
  41331e:	mov    edi,0x3d8196b0
  413323:	or     ah,BYTE PTR [ebp-0x1cd4861d]
  413329:	add    eax,0xd9daaa25
  41332e:	fdiv   DWORD PTR [edx+0x7d]
  413331:	jmp    0x4132e1
  413333:	push   cs
  413334:	and    al,0x34
  413336:	int3   
  413337:	sub    BYTE PTR [esi-0x6c],dh
  41333a:	test   BYTE PTR [eax+0x23c6157],dl
  413340:	mov    eax,ds:0xe6f9fa3c
  413345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413346:	sub    al,0x43
  413348:	jo     0x4132f8
  41334a:	push   ecx
  41334b:	and    al,0x58
  41334d:	pop    ebp
  41334e:	push   esp
  41334f:	test   eax,0x3779f256
  413354:	pop    edx
  413355:	mov    bl,0x3e
  413357:	sti    
  413358:	cmp    al,0x83
  41335a:	and    DWORD PTR [edx+ecx*8+0x76],esi
  41335e:	and    cl,BYTE PTR [eax]
  413360:	and    DWORD PTR [ecx+0x63147849],edx
  413366:	mov    ebp,0x19187d3b
  41336b:	push   es
  41336c:	sub    DWORD PTR [ebx+0x4a],edx
  41336f:	pop    ebp
  413370:	icebp  
  413371:	pop    ss
  413372:	inc    esp
  413373:	sbb    DWORD PTR [ebp-0x7e5ad0a9],ecx
  413379:	push   ss
  41337a:	pushf  
  41337b:	loop   0x413333
  41337d:	std    
  41337e:	into   
  41337f:	mov    eax,0x9d310f76
  413384:	imul   eax,DWORD PTR [edi-0x54eba033],0x33
  41338b:	jmp    0x82fd9d3b
  413390:	sbb    al,0xd1
  413392:	and    al,0x6b
  413394:	mov    ebx,0x9d857631
  413399:	fidivr WORD PTR [ebp-0x80]
  41339c:	xor    edx,ebp
  41339e:	dec    edi
  41339f:	pop    eax
  4133a0:	or     BYTE PTR [esi-0x70926b36],dh
  4133a6:	jg     0x41332c
  4133a8:	pop    ebp
  4133a9:	add    DWORD PTR [esi],0x7a4f73d0
  4133af:	mov    BYTE PTR [ebx],dl
  4133b1:	jne    0x41341e
  4133b3:	in     eax,0xc8
  4133b5:	sbb    edi,edi
  4133b7:	jnp    0x4133e1
  4133b9:	pop    ss
  4133ba:	jb     0x4133db
  4133bc:	lods   eax,DWORD PTR ds:[esi]
  4133bd:	jae    0x4133cc
  4133bf:	cwde   
  4133c0:	cmp    ebp,DWORD PTR [edx]
  4133c2:	call   0xed767e00
  4133c7:	fistp  DWORD PTR [esi-0x144352cd]
  4133cd:	add    ebp,DWORD PTR [eax+0x3d]
  4133d0:	stos   BYTE PTR es:[edi],al
  4133d1:	dec    edi
  4133d2:	gs into 
  4133d4:	mov    al,0xcc
  4133d6:	inc    BYTE PTR [ecx+0x397bd7d]
  4133dc:	(bad)  
  4133dd:	mov    al,0x68
  4133df:	fisubr WORD PTR fs:[eax+0x11]
  4133e3:	adc    al,0xc8
  4133e5:	xor    eax,0x283a455c
  4133ea:	cmp    DWORD PTR [ebp+0x5b],esi
  4133ed:	lock pop ecx
  4133ef:	cmp    bh,BYTE PTR [ebp+0x1c]
  4133f2:	in     al,dx
  4133f3:	sub    al,0x91
  4133f5:	(bad)  ds:0x288a712b
  4133fb:	jns    0x41345e
  4133fd:	call   0xdedf:0xfd1f46b6
  413404:	ins    DWORD PTR es:[edi],dx
  413405:	call   0x50e6cd6e
  41340a:	fisttp WORD PTR [ebx-0x9ab9191]
  413410:	les    esi,FWORD PTR [edx]
  413412:	lods   eax,DWORD PTR ds:[esi]
  413413:	jne    0x4133d5
  413415:	mov    dh,0x6d
  413417:	push   edx
  413418:	and    ah,BYTE PTR [ecx]
  41341a:	pop    edi
  41341b:	clc    
  41341c:	pushf  
  41341d:	daa    
  41341e:	push   edx
  41341f:	stc    
  413420:	cmc    
  413421:	loopne 0x413411
  413423:	inc    esp
  413424:	push   eax
  413425:	hlt    
  413426:	mov    WORD PTR [ebx],?
  413428:	push   es
  413429:	xor    dh,BYTE PTR [edi+eax*2+0x6f6ed9ae]
  413430:	inc    ebx
  413431:	mov    BYTE PTR [ecx-0x13],cl
  413434:	out    dx,al
  413435:	push   ss
  413436:	lock fisub DWORD PTR [esi-0x65d47240]
  41343d:	push   0xffffffb1
  41343f:	adc    BYTE PTR [edi-0x15],dl
  413442:	push   ebp
  413443:	add    al,0x62
  413445:	les    eax,FWORD PTR [ebp-0x22]
  413448:	pusha  
  413449:	cld    
  41344a:	jo     0x4134a8
  41344c:	mov    ecx,0x7812001f
  413451:	pop    es
  413452:	retf   
  413453:	ja     0x41348e
  413455:	sbb    esp,edi
  413457:	push   eax
  413458:	pushf  
  413459:	mov    DWORD PTR [eax+0x8176546],ebp
  41345f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413460:	mov    edi,0x196f8d91
  413465:	enter  0xc1dd,0x5c
  413469:	xchg   edi,eax
  41346a:	scas   al,BYTE PTR es:[edi]
  41346b:	sbb    esi,DWORD PTR [ebx+0x7d]
  41346e:	loop   0x413492
  413470:	inc    ecx
  413471:	call   0xc7074fc8
  413476:	(bad)  [edi-0x1f]
  413479:	jns    0x4134ea
  41347b:	push   edx
  41347c:	jmp    0x8d3412aa
  413481:	loope  0x4134eb
  413483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413484:	dec    esi
  413485:	cmc    
  413486:	xchg   DWORD PTR [esi-0x36],esi
  413489:	lods   eax,DWORD PTR ds:[esi]
  41348a:	sub    eax,0x8da46155
  41348f:	repz mov bl,bh
  413492:	test   DWORD PTR [eax+ebp*8],edi
  413495:	daa    
  413496:	sub    DWORD PTR [ebp+0x2f61ce18],edi
  41349c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41349d:	ss cli 
  41349f:	jbe    0x413488
  4134a1:	cli    
  4134a2:	lods   eax,DWORD PTR ds:[esi]
  4134a3:	popf   
  4134a4:	fs dec esi
  4134a6:	stos   DWORD PTR es:[edi],eax
  4134a7:	push   esp
  4134a8:	stos   BYTE PTR es:[edi],al
  4134a9:	scas   al,BYTE PTR es:[edi]
  4134aa:	mov    edi,0x3ac767ad
  4134af:	inc    esp
  4134b0:	sar    ebp,0xf9
  4134b3:	pop    ebp
  4134b5:	pop    edx
  4134b6:	mov    dl,0x8e
  4134b8:	fdivrp st(6),st
  4134ba:	push   ecx
  4134bb:	loop   0x413509
  4134bd:	mov    cl,0xc0
  4134bf:	xchg   edx,eax
  4134c0:	pop    ds
  4134c1:	adc    al,0x11
  4134c3:	call   0x1473:0xc8006bc1
  4134ca:	xchg   BYTE PTR [edi+0x44],ch
  4134cd:	ss push ss
  4134cf:	(bad)  
  4134d0:	test   DWORD PTR [edi],0xcee60e86
  4134d6:	inc    ecx
  4134d7:	mov    ebp,ecx
  4134d9:	outs   dx,BYTE PTR ds:[esi]
  4134da:	(bad)  
  4134db:	sub    BYTE PTR [ebp-0x53119bb7],cl
  4134e1:	mov    ?,WORD PTR [ebp-0x4d9e8231]
  4134e7:	push   0x35
  4134e9:	fcomp  QWORD PTR [edx+0x46ad69df]
  4134ef:	xchg   ebp,eax
  4134f0:	into   
  4134f1:	xor    al,bh
  4134f3:	push   0xffffffa2
  4134f5:	lods   eax,DWORD PTR ds:[esi]
  4134f6:	jp     0x413488
  4134f8:	cmp    ah,0x5
  4134fb:	je     0x41351e
  4134fd:	xchg   dh,cl
  4134ff:	dec    esp
  413500:	xchg   esi,eax
  413501:	push   0xf5b18a2e
  413506:	ins    BYTE PTR es:[edi],dx
  413507:	call   0x81d8f3e4
  41350c:	pop    ecx
  41350d:	dec    edx
  41350e:	int    0x9
  413510:	pop    eax
  413511:	jl     0x41357b
  413513:	daa    
  413514:	std    
  413515:	xor    ch,dh
  413517:	add    DWORD PTR [eax-0x52],0xffffff80
  41351b:	xchg   ebx,eax
  41351c:	inc    ebx
  41351d:	jb     0x41351c
  41351f:	aam    0x43
  413521:	mov    ebx,0x728ff71c
  413526:	cdq    
  413527:	fistp  WORD PTR [esi]
  413529:	and    esp,ebx
  41352b:	push   esi
  41352c:	(bad)
  413530:	jecxz  0x413543
  413532:	mov    esp,0x37df225b
  413537:	xlat   BYTE PTR ds:[ebx]
  413538:	in     al,0x30
  41353a:	sbb    eax,0xa0d97ca9
  41353f:	call   WORD PTR [ecx-0x7c899d72]
  413546:	push   edi
  413547:	jl     0x413503
  413549:	fnstcw WORD PTR [ecx-0x5c]
  41354c:	lahf   
  41354d:	inc    esp
  41354e:	pop    ss
  41354f:	pusha  
  413550:	dec    ecx
  413551:	jo     0x41354d
  413553:	mov    ecx,0x82ed98e5
  413558:	popf   
  413559:	loope  0x41351b
  41355b:	sbb    BYTE PTR [edx+esi*2-0x60409a11],0x15
  413563:	push   cs
  413564:	outs   dx,BYTE PTR ds:[esi]
  413565:	xchg   ebp,eax
  413566:	aad    0xaa
  413568:	mov    bl,0x25
  41356a:	inc    ebp
  41356b:	into   
  41356c:	xor    bl,BYTE PTR [edi-0x77]
  41356f:	dec    ebp
  413570:	mov    eax,0xef12955a
  413575:	fadd   QWORD PTR ds:0x8c7eaa68
  41357b:	repz fs call 0xd3d2:0xc950ccea
  413584:	mov    esp,0x8c35cd2a
  413589:	push   ds
  41358a:	push   edi
  41358b:	dec    esp
  41358c:	jg     0x413548
  41358e:	dec    esp
  41358f:	sub    ecx,DWORD PTR [ebp+0x6a35f724]
  413595:	loopne 0x4135da
  413597:	mov    ah,0x48
  413599:	data16 (bad) 
  41359b:	adc    eax,edi
  41359d:	test   DWORD PTR [eax+0x4caae550],eax
  4135a3:	hlt    
  4135a4:	pop    edx
  4135a5:	fs cwde 
  4135a7:	sar    ecx,cl
  4135a9:	mov    ds:0x2f4738cc,al
  4135ae:	fisubr DWORD PTR ds:0x466b440c
  4135b4:	mov    bh,0xda
  4135b7:	mov    ebx,0xb72c1e7f
  4135bc:	aam    0x2d
  4135be:	dec    ecx
  4135bf:	in     eax,0x30
  4135c1:	sbb    DWORD PTR [eax-0x7766fb0e],0x56
  4135c8:	scas   eax,DWORD PTR es:[edi]
  4135c9:	cmp    al,0x6d
  4135cb:	mov    ch,0x62
  4135cd:	xor    eax,0x932fa4a2
  4135d2:	cmp    ch,BYTE PTR [ecx]
  4135d4:	or     DWORD PTR [esi],eax
  4135d6:	(bad)  
  4135d7:	stc    
  4135d8:	mov    BYTE PTR [eax+ebx*1],0xae
  4135dc:	push   ss
  4135dd:	or     edi,DWORD PTR [esi]
  4135df:	test   eax,0x4ccb7840
  4135e4:	sbb    BYTE PTR [ebx],bh
  4135e6:	push   ss
  4135e7:	adc    esi,DWORD PTR [ecx]
  4135e9:	xchg   esi,eax
  4135ea:	xchg   ecx,eax
  4135eb:	cmp    eax,0x3a0ccbd0
  4135f0:	(bad)  
  4135f1:	cmp    eax,0xb66463bb
  4135f6:	or     BYTE PTR [ebp+eax*2-0xdb6a2a1],0x1b
  4135fe:	out    dx,eax
  4135ff:	es mov esi,0x6bc7bd71
  413605:	push   0x38
  413607:	mov    ebp,0x141538a8
  41360c:	das    
  41360d:	aas    
  41360e:	pop    ebp
  41360f:	shl    ecx,cl
  413611:	sti    
  413612:	outs   dx,BYTE PTR ds:[esi]
  413613:	cld    
  413614:	ja     0x41364f
  413616:	fistp  DWORD PTR [edx]
  413618:	(bad)  
  413619:	stc    
  41361a:	cmp    DWORD PTR [esi],ecx
  41361c:	cmp    al,0xc1
  41361e:	sbb    ecx,0x76080165
  413624:	lds    ecx,FWORD PTR [esi]
  413626:	daa    
  413627:	mov    eax,0x22a9217b
  41362c:	in     al,dx
  41362d:	(bad)  
  41362e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41362f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413630:	in     al,dx
  413631:	push   cs
  413632:	xor    al,0xc0
  413634:	mov    eax,0x3619a781
  413639:	shr    bl,0x5c
  41363c:	inc    ebp
  41363d:	jmp    0x830be1e9
  413642:	jns    0x413675
  413644:	js     0x413691
  413646:	cdq    
  413647:	popa   
  413648:	mov    ds:0x40e7aedb,eax
  41364d:	pop    ds
  41364e:	out    0xd9,al
  413650:	adc    eax,0xa16b00ef
  413655:	imul   ebx,DWORD PTR [edi],0xffffff8a
  413658:	pop    ds
  413659:	mov    dh,0xc
  41365b:	pop    ss
  41365c:	ror    ebp,cl
  41365e:	jbe    0x4136cf
  413660:	pop    eax
  413661:	jb     0x413653
  413663:	inc    ebx
  413664:	call   0xf9196f09
  413669:	cmc    
  41366a:	add    eax,0xbb3c2ed3
  41366f:	add    eax,0xc6fae4e8
  413674:	mov    BYTE PTR [ebx+0x55ad896a],cl
  41367a:	mov    dl,0x86
  41367c:	dec    ebp
  41367d:	sbb    cl,BYTE PTR [ebx]
  41367f:	in     al,dx
  413680:	mov    eax,ds:0x4bb9f724
  413685:	cmp    esi,ebx
  413687:	cmp    BYTE PTR [esi+0xf],ah
  41368a:	test   DWORD PTR [esi-0x562bb0e5],edi
  413690:	pop    ds
  413691:	xor    BYTE PTR [edi],bl
  413693:	rcr    DWORD PTR [eax+0x5bc5e360],1
  413699:	xor    BYTE PTR [eax-0x63293a04],0x90
  4136a0:	scas   eax,DWORD PTR es:[edi]
  4136a1:	scas   al,BYTE PTR es:[edi]
  4136a2:	adc    al,bh
  4136a4:	(bad)  
  4136a6:	cli    
  4136a7:	and    eax,DWORD PTR [esi+0x3d506884]
  4136ad:	clc    
  4136ae:	cmc    
  4136af:	es (bad) 
  4136b1:	jle    0x413649
  4136b3:	add    BYTE PTR [esi],dh
  4136b5:	xor    dl,cl
  4136b7:	lds    edi,FWORD PTR [edx-0x3]
  4136ba:	sub    eax,0xca48042e
  4136bf:	sbb    ebp,DWORD PTR [ecx-0xd2fb35e]
  4136c5:	inc    esp
  4136c6:	test   BYTE PTR [ebp-0x5868bea4],bl
  4136cc:	mov    eax,ds:0xcfb29a57
  4136d1:	icebp  
  4136d2:	adc    ebp,ebx
  4136d4:	jecxz  0x4136cf
  4136d6:	cld    
  4136d7:	adc    DWORD PTR [edx-0x5d436fdd],ebp
  4136dd:	jae    0x413748
  4136df:	and    dl,BYTE PTR [edx]
  4136e1:	xchg   edi,eax
  4136e2:	lea    ecx,[si-0x5e]
  4136e6:	xor    bl,BYTE PTR [ebx+0x5cc023b2]
  4136ec:	mov    WORD PTR [ebx-0x5b7bff6a],fs
  4136f2:	fisub  WORD PTR [esi+0x564cb5d0]
  4136f8:	call   0x78b0:0x838b86ae
  4136ff:	push   ds
  413700:	mov    cs,WORD PTR [esi+0x384ddbda]
  413706:	mov    cl,0xda
  413708:	aam    0xb3
  41370a:	mov    al,ds:0xea380cd3
  41370f:	cwde   
  413710:	fldenv [esi+0x64]
  413713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413714:	mov    ecx,0xf3d8d9dd
  413719:	sbb    eax,0xb72299be
  41371e:	or     esp,ebx
  413720:	jg     0x41375a
  413722:	jbe    0x413746
  413724:	sub    DWORD PTR [ebp+ecx*1+0x5fa81af4],esp
  41372b:	scas   al,BYTE PTR es:[edi]
  41372c:	shl    DWORD PTR [ebp-0x1c],cl
  41372f:	(bad)
  413732:	sahf   
  413733:	mov    dh,0xfd
  413735:	(bad)  
  413736:	mov    edx,0x9546e186
  41373b:	aad    0x2f
  41373d:	jmp    0x2cdd570a
  413742:	pusha  
  413743:	sbb    eax,0x5dd8252e
  413748:	hlt    
  413749:	stc    
  41374a:	(bad)  
  41374b:	(bad)  
  41374c:	(bad)  
  41374d:	in     eax,0xe2
  41374f:	dec    ebx
  413750:	aaa    
  413751:	pop    ecx
  413752:	adc    BYTE PTR [edx-0x7b0793a8],bh
  413758:	mov    ds:0x7d257977,al
  41375d:	mov    DWORD PTR [esp+eiz*8-0x74],edx
  413761:	stos   DWORD PTR es:[edi],eax
  413762:	jns    0x413748
  413764:	fdivr  DWORD PTR [edx]
  413766:	sahf   
  413767:	sbb    al,0x68
  413769:	cmp    BYTE PTR [edx],bh
  41376b:	ficomp WORD PTR [ecx]
  41376d:	jmp    0xdd77:0xee957802
  413774:	shl    DWORD PTR [ebx],0xa4
  413777:	repz dec esi
  413779:	cli    
  41377a:	jmp    0xcc06:0x65d1283c
  413781:	lods   eax,DWORD PTR ds:[esi]
  413782:	push   ebp
  413783:	dec    ecx
  413784:	in     eax,0x80
  413786:	(bad)  
  413787:	daa    
  413788:	adc    al,0x7
  41378a:	jo     0x4137b1
  41378c:	jg     0x413782
  41378e:	jo     0x413776
  413790:	jmp    0x41372e
  413792:	js     0x413758
  413794:	daa    
  413795:	jno    0x413786
  413797:	or     ecx,DWORD PTR [edx+0x43]
  41379a:	out    dx,eax
  41379b:	sbb    al,0xfb
  41379d:	into   
  41379e:	jo     0x413727
  4137a0:	hlt    
  4137a1:	dec    eax
  4137a2:	in     al,0x99
  4137a4:	xchg   BYTE PTR [edx+0x469ce624],bl
  4137aa:	or     ecx,edx
  4137ac:	pop    edx
  4137ad:	and    ebx,DWORD PTR [edx-0x2d]
  4137b0:	pop    ds
  4137b1:	out    0xf6,eax
  4137b3:	xchg   ecx,eax
  4137b4:	test   eax,0x62d8c0d6
  4137b9:	xchg   edi,eax
  4137ba:	lods   al,BYTE PTR ds:[esi]
  4137bb:	int3   
  4137bc:	jg     0x413790
  4137be:	mov    eax,0x6ba76091
  4137c3:	(bad)  
  4137c4:	xchg   edi,eax
  4137c5:	arpl   WORD PTR [ebx],ax
  4137c7:	xchg   esp,eax
  4137c8:	mov    ebp,0xbecdf9fc
  4137cd:	xor    eax,0x7cdf8ab
  4137d2:	mov    ch,0x27
  4137d4:	sub    eax,0xe837af10
  4137d9:	mov    ch,BYTE PTR [edi+ebx*2]
  4137dc:	sub    ah,BYTE PTR [edx+0x75]
  4137df:	imul   ebx,DWORD PTR [esi-0x72ba5ecd],0x5c
  4137e6:	dec    edx
  4137e7:	push   cs
  4137e8:	cmc    
  4137e9:	mov    ds:0x4586abf0,eax
  4137ee:	jae    0x413826
  4137f0:	neg    BYTE PTR [eax]
  4137f2:	pop    ds
  4137f3:	cmp    ch,0x1
  4137f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137f7:	xchg   DWORD PTR [eax-0x47],ebp
  4137fa:	jno    0x413850
  4137fc:	fild   QWORD PTR cs:[ebp+0x59eefcb7]
  413803:	out    dx,al
  413804:	dec    ebp
  413805:	adc    ecx,DWORD PTR ds:0x2f5eda88
  41380b:	push   0x7c0b4901
  413810:	inc    ebx
  413811:	loopne 0x41388e
  413813:	mov    cl,0x15
  413815:	mov    eax,ds:0x1c0df333
  41381a:	adc    DWORD PTR [eax+0x5c],ebx
  41381d:	push   ss
  41381e:	jge    0x41388a
  413820:	jns    0x413811
  413822:	xor    eax,edx
  413824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413825:	aad    0x26
  413827:	pop    edi
  413828:	(bad)  
  413829:	add    eax,0x74d7c460
  41382e:	cmc    
  41382f:	cld    
  413830:	mov    dl,0xcb
  413832:	adc    esp,DWORD PTR [edi]
  413834:	repz xor DWORD PTR [ecx],eax
  413837:	mov    ecx,0xede0cc15
  41383c:	jbe    0x4137d2
  41383e:	aaa    
  41383f:	(bad)  
  413840:	jecxz  0x4137c8
  413842:	(bad)  
  413843:	xchg   esi,eax
  413844:	int3   
  413845:	sub    eax,0x9f5882f0
  41384a:	mov    cs,WORD PTR [ecx]
  41384c:	(bad)  
  41384d:	mov    BYTE PTR [edx+0x5e],dl
  413850:	add    al,0x3f
  413852:	jl     0x4137fe
  413854:	mov    ecx,0x75b5d499
  413859:	inc    eax
  41385a:	int3   
  41385b:	jmp    0x413896
  41385d:	xchg   ecx,eax
  41385e:	je     0x41388b
  413860:	cmp    DWORD PTR [edx-0x57],ecx
  413863:	dec    edi
  413864:	xchg   ebx,eax
  413865:	pop    ebx
  413866:	dec    ecx
  413867:	inc    ebp
  413868:	adc    cl,dh
  41386a:	leave  
  41386b:	aad    0xa9
  41386d:	or     eax,0xf64cfd8c
  413872:	clc    
  413873:	push   edi
  413874:	ja     0x4137fb
  413876:	and    eax,0x9c443cfb
  41387b:	ss aas 
  41387d:	loope  0x413843
  41387f:	inc    ecx
  413880:	xchg   esi,eax
  413881:	push   es
  413882:	pushf  
  413883:	mov    cs,esi
  413885:	mov    al,0x6d
  413887:	push   esi
  413888:	mov    ah,0xc1
  41388a:	or     BYTE PTR [ebx+0x5ffd4ba8],0xbd
  413891:	or     ecx,esp
  413893:	xchg   ebx,eax
  413894:	jecxz  0x41390d
  413896:	push   es
  413897:	mov    dl,0x5c
  413899:	(bad)  
  41389a:	and    ah,BYTE PTR [ebx+ecx*2-0x49166777]
  4138a1:	movlps QWORD PTR ds:0xe80ff96f,xmm4
  4138a8:	fs pop es
  4138aa:	jnp    0x413865
  4138ac:	mov    dl,BYTE PTR [ebp+ebx*8-0xce069f4]
  4138b3:	mov    cl,0x81
  4138b5:	jne    0x4138e7
  4138b7:	adc    bl,BYTE PTR [ebp+0x65]
  4138ba:	je     0x41392e
  4138bc:	jns    0x41385d
  4138be:	(bad)  
  4138bf:	or     ecx,DWORD PTR [edx+ebp*2-0x721c965a]
  4138c6:	aam    0xe9
  4138c8:	push   edi
  4138c9:	outs   dx,DWORD PTR ds:[esi]
  4138ca:	in     eax,0x5a
  4138cc:	clc    
  4138cd:	fucom  st(6)
  4138cf:	push   edi
  4138d0:	adc    eax,0x895e7a31
  4138d5:	xor    eax,DWORD PTR [edi+0x61f38772]
  4138db:	dec    esp
  4138dc:	or     eax,eax
  4138de:	imul   edi,DWORD PTR ds:0xe1a93b78,0x4b
  4138e5:	mov    DWORD PTR [esp+edx*1+0x2ac9167b],ecx
  4138ec:	test   al,0xf9
  4138ee:	inc    esp
  4138ef:	cli    
  4138f0:	xchg   edx,eax
  4138f1:	pop    edx
  4138f2:	cmp    al,0xf6
  4138f4:	mov    cl,bl
  4138f6:	sub    al,dh
  4138f8:	arpl   WORD PTR [edx+0x3cfe754f],si
  4138fe:	add    al,0x16
  413900:	push   edx
  413901:	add    BYTE PTR [esi+0x39],dh
  413904:	loop   0x41391e
  413906:	rol    BYTE PTR [edi+ecx*8+0x16],0x1c
  41390b:	add    eax,0x31aec031
  413910:	test   DWORD PTR [ebx+0x6c],eax
  413913:	dec    ebx
  413914:	in     eax,dx
  413915:	sbb    al,0x18
  413917:	mov    eax,ds:0x5cc53254
  41391c:	push   0xffffff92
  41391e:	jmp    0x8dcf:0xcb394533
  413925:	dec    sp
  413927:	and    bl,ah
  413929:	cmc    
  41392a:	ja     0x4138de
  41392c:	ret    0x5c68
  41392f:	xor    eax,0x361978c9
  413934:	mov    edi,0xeca7e7fb
  413939:	add    eax,0xecd6e0a4
  41393e:	push   esi
  41393f:	adc    eax,0x68416492
  413944:	xor    eax,0x9764722d
  413949:	jmp    ecx
  41394b:	mov    dh,0xda
  41394d:	rcl    BYTE PTR [eax],cl
  41394f:	call   0xe82e:0x5fe4c9ef
  413956:	sbb    edx,DWORD PTR [ecx+0x7b]
  413959:	inc    edi
  41395a:	inc    edx
  41395b:	adc    esp,DWORD PTR [edi+0x67aef1d8]
  413961:	into   
  413962:	jns    0x4139d4
  413964:	shl    edx,1
  413966:	xchg   esp,eax
  413967:	mov    edi,0x3a4dd241
  41396c:	shr    BYTE PTR [edi+0x71],0xd0
  413970:	(bad)  
  413972:	mov    edx,0xccc42b2d
  413977:	dec    edi
  413978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413979:	in     al,0xe5
  41397b:	xchg   esp,eax
  41397c:	sub    ebp,DWORD PTR [ecx+0x356bd5d4]
  413982:	inc    edi
  413983:	mov    eax,ds:0xc0ea5df2
  413988:	or     al,dh
  41398a:	setp   BYTE PTR [esi]
  41398d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398e:	pop    ecx
  41398f:	fild   WORD PTR [edi]
  413991:	xchg   ebx,eax
  413992:	push   0xb4e4fcbf
  413997:	mov    cl,0x87
  413999:	ror    DWORD PTR [ecx+0x53],cl
  41399c:	xor    al,0x9e
  41399e:	pop    esi
  41399f:	mov    edi,0xe2232e8b
  4139a4:	xor    BYTE PTR [edx-0x6c],ah
  4139a7:	xor    BYTE PTR [ebx],bh
  4139a9:	mov    dh,0x54
  4139ab:	out    0xf4,al
  4139ad:	in     al,0xe3
  4139af:	adc    eax,0x7d8602e9
  4139b4:	mov    WORD PTR [eax+0x30eaca8a],ds
  4139ba:	inc    eax
  4139bb:	test   DWORD PTR [eax+0x6f6ef2a2],edi
  4139c1:	(bad)  
  4139c3:	out    0x7c,eax
  4139c5:	test   BYTE PTR [ecx-0x4a],bl
  4139c8:	xlat   BYTE PTR ds:[ebx]
  4139c9:	in     eax,0x7a
  4139cb:	cmp    ecx,esp
  4139cd:	iret   
  4139ce:	mov    eax,DWORD PTR [eax-0x15]
  4139d1:	push   ebp
  4139d2:	or     BYTE PTR [ebp+edi*4+0x1fda8343],ch
  4139d9:	add    BYTE PTR [edi+0x64],bl
  4139dc:	addr16 aad 0xab
  4139df:	push   0x5204f80d
  4139e4:	pop    ecx
  4139e5:	je     0x413a15
  4139e7:	test   si,bx
  4139ea:	dec    ecx
  4139eb:	fidivr WORD PTR [edx+0x162b39df]
  4139f1:	stc    
  4139f2:	mov    ds:0xb1a220cd,al
  4139f7:	idiv   edi
  4139f9:	xchg   esp,edi
  4139fb:	fcomp  DWORD PTR [edx-0x4cb774b8]
  413a01:	inc    esp
  413a02:	add    ah,dl
  413a04:	icebp  
  413a05:	imul   bp,WORD PTR [edi+0x3d6ad3e5],0x1145
  413a0e:	sahf   
  413a0f:	push   edx
  413a10:	xchg   ebp,eax
  413a11:	shl    BYTE PTR [eax],1
  413a13:	pusha  
  413a14:	push   cs
  413a15:	and    al,BYTE PTR [ecx]
  413a17:	jl     0x4139d4
  413a19:	jp     0x413a8c
  413a1b:	mov    ch,0x35
  413a1d:	inc    edx
  413a1e:	push   esp
  413a1f:	mov    ds:0x3e266c4,eax
  413a24:	pop    ecx
  413a25:	sub    BYTE PTR [ecx],al
  413a27:	sbb    al,0xd0
  413a29:	mov    ebp,0x23c88550
  413a2e:	and    eax,DWORD PTR [ebx]
  413a30:	push   ss
  413a31:	retf   0x25f9
  413a34:	jecxz  0x413a33
  413a36:	mov    esp,0x472314cc
  413a3b:	push   0xcd2ebd4b
  413a40:	cmp    al,BYTE PTR ss:[ebx+0xbfa7b0c]
  413a47:	sbb    cl,BYTE PTR [esi]
  413a49:	dec    edi
  413a4a:	add    al,0x9b
  413a4c:	aaa    
  413a4d:	out    dx,al
  413a4e:	jns    0x4139ee
  413a50:	and    al,0x5c
  413a52:	ret    0x2db7
  413a55:	out    0x9b,al
  413a57:	loope  0x413a8b
  413a59:	outs   dx,DWORD PTR ds:[esi]
  413a5a:	mov    eax,gs:0x16895390
  413a60:	inc    edx
  413a61:	pushf  
  413a62:	inc    esi
  413a63:	jp     0x4139f7
  413a65:	out    0x2f,eax
  413a67:	(bad)
  413a6b:	mov    DWORD PTR [edx-0x1fc8e46b],edx
  413a71:	pop    ss
  413a72:	in     al,0x64
  413a74:	inc    esp
  413a75:	dec    esi
  413a76:	test   DWORD PTR [edx-0xf],edx
  413a79:	or     cl,BYTE PTR [ebx+0x4f]
  413a7c:	jle    0x413aba
  413a7e:	mov    bh,al
  413a80:	and    esp,0xffffff80
  413a83:	clc    
  413a84:	mov    es,WORD PTR [edi+0x42]
  413a87:	loopne 0x413a22
  413a89:	mov    ds:0x62f46a27,al
  413a8e:	adc    ch,ch
  413a90:	imul   DWORD PTR [ecx-0x14a75525]
  413a96:	jg     0x413a30
  413a98:	inc    ebx
  413a99:	push   ecx
  413a9a:	aaa    
  413a9b:	imul   edx,DWORD PTR [esi+0x7bd3692a],0x4d
  413aa2:	and    BYTE PTR [eax-0xa76419b],dh
  413aa8:	mov    WORD PTR [edx],ds
  413aaa:	fist   DWORD PTR [ebx-0x53]
  413aad:	dec    esi
  413aae:	adc    eax,0xa537a3cd
  413ab3:	push   eax
  413ab4:	int    0xdc
  413ab6:	jbe    0x413b0f
  413ab8:	repnz cmp cl,0x7e
  413abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413abd:	xchg   edx,eax
  413abe:	and    eax,0x7135e393
  413ac3:	scas   eax,DWORD PTR es:[edi]
  413ac4:	adc    cl,dh
  413ac6:	jns    0x413ac3
  413ac8:	push   esp
  413ac9:	outs   dx,DWORD PTR ds:[esi]
  413aca:	loope  0x413b3a
  413acc:	mov    edi,DWORD PTR [edx-0x18]
  413acf:	data16 add al,0xc
  413ad2:	fimul  WORD PTR [edi]
  413ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad5:	packuswb mm3,QWORD PTR [edi+0x2d]
  413ad9:	out    0xcb,eax
  413adb:	stos   DWORD PTR es:[edi],eax
  413adc:	pop    ecx
  413add:	mov    bl,0x78
  413adf:	lahf   
  413ae0:	loop   0x413a94
  413ae2:	xor    eax,0x1980ce3a
  413ae7:	aam    0xa9
  413ae9:	or     esi,DWORD PTR [ebx]
  413aeb:	xchg   ecx,eax
  413aec:	jne    0x413b2a
  413aee:	ret    
  413aef:	repz cmp al,0x1e
  413af2:	jb     0x413b62
  413af4:	sub    al,0x99
  413af6:	pushf  
  413af7:	sub    eax,0x62938d0a
  413afc:	sub    eax,0x947872f
  413b01:	fsub   DWORD PTR [edi-0x65983ab9]
  413b07:	adc    ebx,DWORD PTR [si]
  413b0a:	jbe    0x413a9d
  413b0c:	dec    ecx
  413b0d:	pop    edx
  413b0e:	sbb    BYTE PTR [esp+edx*1],ch
  413b11:	cwde   
  413b12:	jmp    0x54496b41
  413b17:	push   ds
  413b18:	push   eax
  413b19:	and    ebp,0x505e9d37
  413b1f:	lods   eax,DWORD PTR ds:[esi]
  413b20:	cli    
  413b21:	(bad)  
  413b23:	sub    eax,0xfcc201c0
  413b28:	std    
  413b29:	into   
  413b2a:	cmp    DWORD PTR [edi-0x6f],esi
  413b2d:	loop   0x413af9
  413b2f:	mov    al,0xec
  413b31:	inc    DWORD PTR [eax+ebx*1-0x7c]
  413b35:	inc    ebx
  413b36:	(bad)  
  413b37:	dec    ecx
  413b38:	mov    ebp,0xf0ffc05d
  413b3d:	mov    ch,0xbb
  413b3f:	les    esp,FWORD PTR [ebx+esi*2]
  413b42:	paddb  mm4,QWORD PTR [esi-0x26fc4ef9]
  413b49:	sti    
  413b4a:	jecxz  0x413b6b
  413b4c:	mov    eax,0xefcf6cd0
  413b51:	call   0x8c91:0xd08ac24b
  413b58:	adc    al,0x72
  413b5a:	mov    WORD PTR [edx],es
  413b5c:	sbb    cl,cl
  413b5e:	jb     0x413b5a
  413b60:	stos   DWORD PTR es:[edi],eax
  413b61:	arpl   di,bx
  413b63:	inc    ebp
  413b64:	(bad)  
  413b65:	mov    ?,WORD PTR [esi]
  413b67:	inc    ecx
  413b68:	xor    bh,BYTE PTR [eax+ebx*2-0x195c199d]
  413b6f:	pushf  
  413b70:	jmp    0x413ba9
  413b72:	add    BYTE PTR [ebp-0x6d163c3d],al
  413b78:	into   
  413b79:	aam    0x39
  413b7b:	fisubr DWORD PTR [esi+0x24]
  413b7e:	stos   BYTE PTR es:[edi],al
  413b7f:	adc    eax,0x4cdde5e4
  413b84:	jno    0x413bd5
  413b86:	ror    cl,1
  413b88:	shl    esi,cl
  413b8a:	mov    ecx,0x7055faf4
  413b8f:	sub    BYTE PTR [edx],dl
  413b91:	sbb    eax,0xd99167df
  413b96:	fisub  WORD PTR [ebx]
  413b98:	nop
  413b99:	fs xchg si,ax
  413b9c:	mov    edx,0xd01eb8a9
  413ba1:	jge    0x413b72
  413ba3:	jne    0x413b3d
  413ba5:	fstp   QWORD PTR [ebp+ebp*2-0x8]
  413ba9:	ins    BYTE PTR es:[edi],dx
  413baa:	jmp    0xc6f5:0x44f9fdec
  413bb1:	sbb    dl,BYTE PTR [ecx]
  413bb3:	ss xchg ecx,eax
  413bb5:	sbb    BYTE PTR [ebx],dh
  413bb7:	xchg   edi,eax
  413bb8:	xor    DWORD PTR [edx-0x3b1c5788],0xffffffb7
  413bbf:	dec    eax
  413bc0:	xchg   ebp,eax
  413bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bc2:	push   es
  413bc3:	mov    ecx,0x3f76fb1b
  413bc8:	or     DWORD PTR [esi],esi
  413bca:	adc    DWORD PTR [edi+eiz*4+0xaf471e2],esp
  413bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd2:	and    DWORD PTR [esi],0xfffffff5
  413bd5:	adc    al,0x41
  413bd7:	fbld   TBYTE PTR [edi+0x53]
  413bda:	xchg   ebp,eax
  413bdb:	fwait
  413bdc:	push   ebx
  413bdd:	xor    al,0x3e
  413bdf:	cmp    BYTE PTR [eax],0x2
  413be2:	in     eax,dx
  413be3:	rcr    DWORD PTR [ebp+0x30],0xf2
  413be7:	aad    0xa3
  413be9:	cmp    DWORD PTR [esi+0x17],esp
  413bec:	mov    ch,0x71
  413bee:	xchg   ebx,eax
  413bef:	mov    al,0x8a
  413bf1:	(bad)  
  413bf2:	into   
  413bf3:	mov    ch,0x48
  413bf5:	(bad)  
  413bf6:	pop    ss
  413bf7:	aam    0x6a
  413bf9:	mov    edx,DWORD PTR ds:0x634fa7f9
  413bff:	stc    
  413c00:	mov    edi,DWORD PTR [edi]
  413c02:	cld    
  413c03:	sbb    DWORD PTR [ecx-0x5e01dcb0],ecx
  413c09:	push   edi
  413c0a:	inc    eax
  413c0b:	cmp    eax,0x4a0b8341
  413c10:	adc    ecx,ebp
  413c12:	pop    es
  413c13:	jmp    0x969b4a61
  413c18:	push   edx
  413c19:	jae    0x413c53
  413c1b:	push   eax
  413c1c:	sub    DWORD PTR [ebp+edi*8+0x6dc7aa5b],edx
  413c23:	imul   ebx,DWORD PTR [ecx-0x7b],0xc5e1c57d
  413c2a:	ret    
  413c2b:	in     eax,0xa0
  413c2d:	ins    DWORD PTR es:[edi],dx
  413c2e:	cmp    BYTE PTR [ebp+edi*2-0xb],0x91
  413c33:	int3   
  413c34:	and    DWORD PTR [edx],0xfffffff3
  413c37:	or     BYTE PTR [ebp-0x4c],0x2f
  413c3b:	or     ah,BYTE PTR [ebp+eax*4+0x1f]
  413c3f:	xor    DWORD PTR [esi+eax*1],ebp
  413c42:	xchg   ecx,eax
  413c43:	cwde   
  413c44:	add    DWORD PTR [edi-0x302e6ccf],ebx
  413c4a:	fnsave ds:0xf6e72aad
  413c50:	out    dx,eax
  413c51:	adc    bh,cl
  413c53:	mov    eax,0x79c1204f
  413c58:	stos   DWORD PTR es:[edi],eax
  413c59:	pandn  mm3,QWORD PTR [eax]
  413c5c:	out    0x18,al
  413c5e:	mov    eax,ds:0x33a50b71
  413c63:	(bad)  
  413c64:	pop    ebx
  413c65:	push   ecx
  413c66:	mov    eax,0xd54ed5fd
  413c6b:	pusha  
  413c6c:	std    
  413c6d:	repnz inc eax
  413c6f:	xlat   BYTE PTR ds:[ebx]
  413c70:	cmp    BYTE PTR [ebx+0x36a51718],0xf4
  413c77:	loopne 0x413bff
  413c79:	int    0x7d
  413c7b:	cmc    
  413c7c:	jnp    0x413c2a
  413c7e:	iret   
  413c7f:	popa   
  413c80:	shl    DWORD PTR [ecx+0x74],1
  413c83:	scas   al,BYTE PTR es:[edi]
  413c84:	inc    esp
  413c85:	mov    bh,0x69
  413c87:	push   edi
  413c88:	ds mov edx,ebx
  413c8b:	lods   eax,DWORD PTR ds:[esi]
  413c8c:	adc    al,0x69
  413c8e:	outs   dx,DWORD PTR ds:[esi]
  413c8f:	cli    
  413c90:	and    ebp,DWORD PTR [eax-0x1807fb3]
  413c96:	(bad)  
  413c98:	dec    edx
  413c99:	test   BYTE PTR [ebx+eax*8-0x37],dl
  413c9d:	jmp    0x413ccf
  413c9f:	out    0xab,eax
  413ca1:	call   0xee03:0xa2e76d4e
  413ca8:	dec    ebx
  413ca9:	imul   ebp,DWORD PTR [esi],0x76551354
  413caf:	in     al,dx
  413cb0:	ja     0x413d2c
  413cb2:	pushf  
  413cb3:	push   esp
  413cb4:	cs iret 
  413cb6:	lea    edi,[edx-0x7a]
  413cb9:	int3   
  413cba:	out    dx,eax
  413cbb:	retf   
  413cbc:	adc    ebx,ecx
  413cbe:	addr16 retf 0x11e1
  413cc2:	outs   dx,BYTE PTR ds:[esi]
  413cc3:	mov    ebx,0x6c4e9272
  413cc8:	xchg   esi,eax
  413cc9:	btc    edx,eax
  413ccc:	arpl   WORD PTR [edi-0x19441f62],si
  413cd2:	ja     0x413c55
  413cd4:	xor    BYTE PTR [eax],0xfe
  413cd7:	jo     0x413ce8
  413cd9:	push   esi
  413cda:	inc    ebp
  413cdb:	cwde   
  413cdc:	outs   dx,DWORD PTR ds:[esi]
  413cdd:	dec    ecx
  413cde:	lock push ebp
  413ce0:	les    esi,FWORD PTR [ebx]
  413ce2:	cwde   
  413ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce5:	nop
  413ce6:	addr16 es push cs
  413ce9:	cmc    
  413cea:	out    dx,al
  413ceb:	jg     0x413cdc
  413ced:	outs   dx,DWORD PTR ds:[esi]
  413cee:	bound  ebx,QWORD PTR ds:0xb85f10cb
  413cf4:	test   esp,edx
  413cf6:	xchg   esi,eax
  413cf7:	ins    DWORD PTR es:[edi],dx
  413cf8:	clc    
  413cf9:	nop
  413cfa:	cmp    dh,cl
  413cfc:	sbb    eax,0xb888d4d3
  413d01:	dec    edi
  413d02:	lock pop eax
  413d04:	dec    ebp
  413d05:	push   esp
  413d06:	mov    ds:0x4d092d14,al
  413d0b:	mov    eax,0xe2ce8114
  413d10:	push   es
  413d11:	push   ebx
  413d12:	pusha  
  413d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d14:	mov    WORD PTR [ecx+eiz*1-0x52],ds
  413d18:	ja     0x413d7f
  413d1a:	leave  
  413d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1c:	push   edi
  413d1d:	pop    esp
  413d1e:	ss inc edi
  413d20:	int    0x48
  413d22:	push   eax
  413d23:	dec    DWORD PTR [edx+0x3b26060]
  413d29:	push   cs
  413d2a:	loopne 0x413dab
  413d2c:	jmp    0x44ac81ad
  413d31:	xor    ch,dh
  413d33:	lds    ecx,FWORD PTR [edx]
  413d35:	lock xor DWORD PTR [edx-0x71dff9ed],esi
  413d3c:	scas   al,BYTE PTR es:[edi]
  413d3d:	sub    edi,esp
  413d3f:	repz fwait
  413d41:	(bad)  
  413d42:	inc    esi
  413d43:	xor    BYTE PTR [edi],dl
  413d45:	stos   BYTE PTR es:[edi],al
  413d46:	xor    bl,BYTE PTR [eax+0x61e24f9]
  413d4c:	repz xchg ebp,eax
  413d4e:	ja     0x413d9d
  413d50:	mov    DWORD PTR [edi-0x444b9ba9],esi
  413d56:	push   edx
  413d57:	cmp    DWORD PTR [edx+0x47],ebx
  413d5a:	pmaxsw mm5,QWORD PTR ds:0x8d1fa2aa
  413d61:	aam    0x47
  413d63:	out    0x3b,eax
  413d65:	xchg   ecx,eax
  413d66:	dec    DWORD PTR [edi+0x55]
  413d69:	test   eax,0x13605be3
  413d6e:	mov    ecx,DWORD PTR [ebx]
  413d70:	cmp    ah,bl
  413d72:	sbb    DWORD PTR [edx+0x6d],ebx
  413d75:	pop    esi
  413d76:	loopne 0x413de1
  413d78:	push   ss
  413d79:	out    0xeb,eax
  413d7b:	hlt    
  413d7c:	sti    
  413d7d:	inc    ecx
  413d7e:	sub    ebx,ecx
  413d80:	xchg   ebx,ecx
  413d82:	dec    ecx
  413d83:	dec    ecx
  413d84:	mov    eax,DWORD PTR [ebp-0x1c]
  413d87:	imul   eax,ecx
  413d8a:	add    esp,eax
  413d8c:	xchg   edx,eax
  413d8d:	push   eax
  413d8e:	xor    ebx,ebx
  413d90:	mov    edx,esp
  413d92:	dec    edx
  413d93:	inc    ebx
  413d94:	add    ebx,DWORD PTR [edx+ebx*1]
  413d97:	dec    ebx
  413d98:	xor    edx,edx
  413d9a:	add    DWORD PTR [ebp-0x10],ebx
  413d9d:	pop    ebx
  413d9e:	mov    eax,DWORD PTR [ebp-0x10]
  413da1:	pop    edi
  413da2:	pop    esi
  413da3:	pop    ebx
  413da4:	leave  
  413da5:	ret    0x10
  413da8:	push   ebp
  413da9:	mov    ebp,esp
  413dab:	push   ecx
  413dac:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413db3:	sub    DWORD PTR ds:0x42a2e6,ebx
  413db9:	mov    eax,DWORD PTR [ebp-0x4]
  413dbc:	and    DWORD PTR ds:0x42a2e6,0x0
  413dc6:	jmp    0x413dd8
  413dcb:	mov    edx,DWORD PTR ds:0x42a2e6
  413dd1:	inc    edx
  413dd2:	mov    DWORD PTR ds:0x42a2e6,edx
  413dd8:	cmp    DWORD PTR ds:0x42a2e6,0x1a
  413ddf:	jae    0x413e0a
  413de5:	cmp    DWORD PTR ds:0x42a2e6,0x2a
  413dec:	ja     0x413e0a
  413df2:	jmp    0x413e05
  413df7:	push   DWORD PTR [ebp-0x10]
  413dfa:	push   0x42a27e
  413dff:	call   DWORD PTR ds:0x42a3ce
  413e05:	jmp    0x413dcb
  413e0a:	mov    edx,DWORD PTR [ebp+0x10]
  413e0d:	mov    ecx,0x75108aa
  413e12:	xor    eax,ecx
  413e14:	sbb    DWORD PTR ds:0x42a2aa,0x2976
  413e1e:	add    eax,0x3272f1
  413e23:	xor    DWORD PTR ds:0x42a272,0x42a2b6
  413e2d:	mov    DWORD PTR [edx],eax
  413e2f:	mov    eax,DWORD PTR [ebp+0xc]
  413e32:	and    edx,DWORD PTR ds:0x42a2f2
  413e38:	xor    eax,ecx
  413e3a:	and    DWORD PTR ds:0x42a2de,edi
  413e40:	push   esi
  413e41:	mov    esi,DWORD PTR [ebp+0x10]
  413e44:	mov    edx,0x3272f1
  413e49:	add    eax,edx
  413e4b:	mov    DWORD PTR [esi+0x4],eax
  413e4e:	mov    eax,DWORD PTR [ebp+0x14]
  413e51:	mov    esi,DWORD PTR [ebp+0x10]
  413e54:	mov    DWORD PTR [esi+0x8],eax
  413e57:	mov    eax,DWORD PTR [ebp+0x18]
  413e5a:	mov    esi,DWORD PTR [ebp+0x10]
  413e5d:	mov    DWORD PTR [esi+0xc],eax
  413e60:	mov    eax,DWORD PTR [ebp+0x1c]
  413e63:	mov    esi,DWORD PTR [ebp+0x10]
  413e66:	mov    DWORD PTR [esi+0x10],eax
  413e69:	mov    eax,DWORD PTR [ebp+0x8]
  413e6c:	xor    eax,ecx
  413e6e:	add    eax,edx
  413e70:	jmp    0x416225
  413e75:	mov    esi,ebx
  413e77:	push   ebx
  413e78:	push   esi
  413e79:	or     edx,esi
  413e7b:	xchg   BYTE PTR [esi+0x72f8d7bb],ch
  413e81:	fstp   DWORD PTR [ebx+0x6594671f]
  413e87:	jl     0x413e0c
  413e89:	jmp    0x413ee9
  413e8b:	add    DWORD PTR [ebx+0x76613ed8],0x2f
  413e92:	push   edx
  413e93:	jp     0x413e42
  413e95:	sbb    BYTE PTR [esi],0x97
  413e98:	pop    es
  413e99:	mov    dh,0x27
  413e9b:	shl    BYTE PTR ds:0xaf898391,0xc3
  413ea2:	add    esi,DWORD PTR ds:0x78920b51
  413ea8:	dec    eax
  413ea9:	adc    ch,ah
  413eab:	outs   dx,BYTE PTR ds:[esi]
  413eac:	jno    0x413e63
  413eae:	push   edi
  413eaf:	jge    0x413ebb
  413eb1:	jno    0x413e5c
  413eb3:	mov    esp,0xe5bccf0f
  413eb8:	bound  ebp,QWORD PTR [eax+0x277ac877]
  413ebe:	fwait
  413ebf:	and    dh,BYTE PTR [ebx+edi*1-0x4e]
  413ec3:	cs sub eax,0x4e4819a2
  413ec9:	inc    edi
  413eca:	test   al,0x31
  413ecc:	pushf  
  413ecd:	push   eax
  413ece:	or     al,0x8c
  413ed0:	or     eax,0xa36e494f
  413ed5:	ret    
  413ed6:	fwait
  413ed7:	dec    esi
  413ed8:	or     BYTE PTR [edx+0xa],bl
  413edb:	push   esi
  413edc:	lods   al,BYTE PTR ds:[esi]
  413edd:	cli    
  413ede:	dec    esp
  413edf:	push   ss
  413ee0:	js     0x413efb
  413ee2:	mov    al,ss:0x1a31953b
  413ee8:	adc    al,0xe2
  413eea:	adc    DWORD PTR [esi+0x7211f0d3],esi
  413ef0:	inc    esi
  413ef1:	mov    esp,0x1ff7bafa
  413ef6:	stos   DWORD PTR es:[edi],eax
  413ef7:	sar    DWORD PTR [eax+0x2ddfe3c3],0x5e
  413efe:	test   DWORD PTR [esi-0xa],eax
  413f01:	and    cl,bh
  413f03:	and    al,0xf9
  413f05:	push   ds
  413f06:	gs push ss
  413f08:	icebp  
  413f09:	cmp    eax,0x8539e5e2
  413f0e:	mov    ds:0xffbfaf98,eax
  413f13:	ss (bad) 
  413f15:	(bad)  
  413f17:	aam    0x35
  413f19:	test   DWORD PTR [ecx-0x80],ebx
  413f1c:	pop    ebp
  413f1d:	leave  
  413f1e:	mov    al,ds:0xfba4fb56
  413f23:	jns    0x413f74
  413f25:	xchg   edx,eax
  413f26:	pop    ebp
  413f27:	fstp   QWORD PTR [esp+ecx*4+0x6c]
  413f2b:	mov    eax,ds:0xda90e516
  413f30:	lea    ebx,[edi+edx*2+0x40e40133]
  413f37:	adc    BYTE PTR [eax-0x7c],dl
  413f3a:	dec    edx
  413f3b:	xchg   eax,ecx
  413f3d:	push   eax
  413f3e:	sbb    al,dh
  413f40:	push   ds
  413f41:	inc    edx
  413f42:	jg     0x413f5c
  413f44:	(bad)  
  413f45:	fbld   TBYTE PTR [edx+eiz*8+0xc]
  413f49:	outs   dx,DWORD PTR ds:[esi]
  413f4a:	ror    BYTE PTR [esi+edx*2+0x9781bf],cl
  413f51:	mov    edi,0xc5e5ab2d
  413f56:	inc    esp
  413f57:	popf   
  413f58:	mov    ds:0x699eb357,eax
  413f5d:	push   cs
  413f5e:	stc    
  413f5f:	jno    0x413fae
  413f61:	retf   0xc341
  413f64:	or     DWORD PTR [edi+0x42],0x16
  413f68:	aas    
  413f69:	sbb    BYTE PTR [edx+0x61],dl
  413f6c:	xor    BYTE PTR [eax],0xf7
  413f6f:	(bad)  
  413f70:	sahf   
  413f71:	shl    BYTE PTR [ebx+0x7b],cl
  413f74:	push   edx
  413f75:	aam    0xe1
  413f77:	cmc    
  413f78:	int3   
  413f79:	pop    ebp
  413f7a:	mov    ebx,0xb9d1e29d
  413f7f:	add    al,bl
  413f81:	aas    
  413f82:	add    esi,ebx
  413f84:	lods   al,BYTE PTR ds:[esi]
  413f85:	outs   dx,DWORD PTR ds:[esi]
  413f86:	cmp    al,0xd2
  413f88:	repnz inc esp
  413f8a:	out    0x9a,eax
  413f8c:	in     al,dx
  413f8d:	and    BYTE PTR [eax],ah
  413f8f:	jecxz  0x413fce
  413f91:	and    eax,0x9dbd0b1b
  413f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f97:	push   edx
  413f98:	adc    eax,0x7d0e0839
  413f9d:	add    ch,BYTE PTR [ebp+0x13184091]
  413fa3:	inc    esi
  413fa4:	inc    ebp
  413fa5:	jo     0x413f8a
  413fa7:	js     0x413f74
  413fa9:	inc    ebp
  413faa:	xchg   ebp,eax
  413fab:	jns    0x413f65
  413fad:	(bad)  
  413fae:	jae    0x414003
  413fb0:	shl    BYTE PTR [ecx],1
  413fb2:	ds xchg esi,eax
  413fb4:	pop    ss
  413fb5:	mul    ah
  413fb7:	mov    cl,BYTE PTR [ebp+0x3b3edb22]
  413fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fbe:	push   ds
  413fbf:	enter  0x276,0xbf
  413fc3:	pusha  
  413fc4:	push   esi
  413fc5:	pusha  
  413fc6:	or     BYTE PTR [edi+0x7659c467],0x72
  413fcd:	fbld   TBYTE PTR [ebp-0x5f74c4c4]
  413fd3:	call   0xf16cdee9
  413fd8:	xor    esi,DWORD PTR [eax]
  413fda:	pushf  
  413fdb:	aas    
  413fdc:	shr    BYTE PTR [eax-0x28],0xff
  413fe0:	xor    al,0x52
  413fe2:	push   ebx
  413fe3:	rep ins BYTE PTR es:[edi],dx
  413fe5:	adc    eax,0xb1c74486
  413fea:	jnp    0x413faf
  413fec:	jmp    0x246ea807
  413ff1:	cwde   
  413ff2:	sahf   
  413ff3:	pop    eax
  413ff4:	xchg   esi,eax
  413ff5:	repnz test eax,0x8521e0f
  413ffb:	mov    ebx,0x1b6c6b30
  414000:	jne    0x413fea
  414002:	xor    ebx,DWORD PTR [esi+0x1a44e9e6]
  414008:	pop    edx
  414009:	iret   
  41400a:	jle    0x414062
  41400c:	fstp   DWORD PTR [ecx+0x3c]
  41400f:	pop    esi
  414010:	and    al,0xc4
  414012:	jge    0x414023
  414014:	add    DWORD PTR [ecx],0xef055ea4
  41401a:	pop    ecx
  41401b:	pop    ebp
  41401c:	or     ebx,DWORD PTR [ecx+0x5a]
  41401f:	xchg   edi,ebp
  414021:	mov    edi,0x734ccb6
  414026:	mov    esi,0xc15cbc12
  41402b:	mov    edi,ebp
  41402d:	nop
  41402e:	xlat   BYTE PTR ds:[ebx]
  414030:	data16 jl 0x413fc5
  414033:	push   ebp
  414034:	into   
  414035:	pop    ds
  414036:	jp     0x414005
  414038:	out    0xcb,eax
  41403a:	fsubrp st(1),st
  41403c:	mov    dl,0x22
  41403e:	jae    0x413ff3
  414040:	push   ebp
  414041:	inc    ecx
  414042:	mov    esp,0x5f2584e5
  414047:	xchg   BYTE PTR ds:0xc47f413a,al
  41404d:	xor    bh,cl
  41404f:	loope  0x4140cd
  414051:	int    0x7c
  414053:	sbb    eax,0xec5d0dc5
  414058:	lods   al,BYTE PTR ds:[esi]
  414059:	into   
  41405a:	ds aad 0xcd
  41405d:	fcmovu st,st(6)
  41405f:	imul   esi,edi,0x6e
  414062:	jmp    0x4140c7
  414064:	and    eax,0xe24e31ee
  414069:	jmp    DWORD PTR ss:[ecx]
  41406c:	daa    
  41406d:	fimul  DWORD PTR [ecx]
  41406f:	call   0x5d36:0xf46dd72c
  414076:	and    BYTE PTR [ecx],dl
  414078:	jne    0x414046
  41407a:	add    DWORD PTR [ebp-0x5f],ebp
  41407d:	inc    ebp
  41407e:	jle    0x414011
  414080:	jne    0x4140f5
  414082:	jge    0x414057
  414084:	(bad)  
  414085:	daa    
  414086:	or     dh,BYTE PTR [eax-0x4204f8ea]
  41408c:	lds    esp,FWORD PTR [edi+esi*8]
  41408f:	mov    eax,0x91c113e5
  414094:	pop    ecx
  414095:	jecxz  0x414032
  414097:	loopne 0x41404f
  414099:	and    BYTE PTR [eax+0x12],al
  41409c:	dec    edi
  41409d:	ja     0x414023
  41409f:	out    0x2b,al
  4140a1:	fld    TBYTE PTR [esi]
  4140a3:	mov    esp,0xcf615a09
  4140a8:	adc    esp,esp
  4140aa:	sti    
  4140ab:	enter  0x6e15,0x12
  4140af:	push   es
  4140b0:	ins    DWORD PTR es:[edi],dx
  4140b1:	cmp    esp,ebx
  4140b3:	or     BYTE PTR [edi+0xd77886a],ah
  4140b9:	aas    
  4140ba:	popa   
  4140bb:	push   ebp
  4140bc:	push   es
  4140bd:	or     ah,ch
  4140bf:	sbb    eax,0x4d71aaf9
  4140c4:	push   ds
  4140c5:	lea    esi,[ebx-0x3eae842b]
  4140cb:	stos   DWORD PTR es:[edi],eax
  4140cc:	push   ss
  4140cd:	push   esp
  4140ce:	jmp    0x4140f2
  4140d0:	lods   al,BYTE PTR ds:[esi]
  4140d1:	cwde   
  4140d2:	mov    gs,WORD PTR [edx+esi*4]
  4140d5:	out    0x64,eax
  4140d7:	jbe    0x41412c
  4140d9:	inc    ebp
  4140da:	dec    ebx
  4140db:	sub    DWORD PTR [eax+0x418de3a0],0x91a6edd
  4140e5:	inc    esp
  4140e6:	sbb    BYTE PTR [esi+0x35d7de5f],0x1d
  4140ed:	mov    ecx,0x2ed9aa38
  4140f2:	or     eax,0x2ce94a10
  4140f7:	mov    ecx,ebp
  4140f9:	mov    ds:0xda9ac722,eax
  4140fe:	mov    eax,DWORD PTR [ebp+0x63]
  414101:	jmp    0xf9af:0xb9e2df3c
  414108:	scas   al,BYTE PTR es:[edi]
  414109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41410a:	loop   0x4140b9
  41410c:	js     0x4140dd
  41410e:	mov    esp,edx
  414110:	and    al,0x76
  414112:	lds    esi,FWORD PTR [ebx-0x76]
  414115:	xor    ch,BYTE PTR [edx]
  414117:	xchg   ebp,eax
  414118:	fild   QWORD PTR [ebp-0x7c4a215]
  41411e:	jae    0x414145
  414120:	mov    DWORD PTR [edi],ecx
  414122:	sbb    eax,0xe7fdaa79
  414127:	mov    edx,0xe91a80c7
  41412c:	cmp    BYTE PTR [ebx+eiz*1-0x7a],bh
  414130:	int3   
  414131:	mov    al,ds:0xaba35210
  414136:	jle    0x414142
  414138:	in     al,0xb2
  41413a:	cmc    
  41413b:	push   eax
  41413c:	xor    esp,edx
  41413e:	jp     0x414171
  414140:	aam    0xaf
  414142:	jae    0x414133
  414144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414145:	xchg   ebp,eax
  414146:	mov    ecx,0xe0556700
  41414b:	fwait
  41414c:	sbb    DWORD PTR [ecx+ebp*2+0x4743cd80],esi
  414153:	jecxz  0x4140fe
  414155:	push   ecx
  414156:	sub    DWORD PTR [edx+ecx*8+0x2db7db7d],0x6a0a0503
  414161:	enter  0xa073,0x1a
  414165:	cdq    
  414166:	jecxz  0x414122
  414168:	leave  
  414169:	test   al,0x62
  41416b:	inc    ebp
  41416c:	sub    eax,0x11058713
  414171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414172:	mov    ebp,DWORD PTR [ebx-0x2e]
  414175:	xor    eax,0x1e9508cb
  41417a:	add    eax,DWORD PTR [ebp+edi*8-0x79]
  41417e:	cmp    ch,0x28
  414181:	and    DWORD PTR [ebx],ebp
  414183:	mov    ecx,eax
  414185:	mov    bh,0x8b
  414187:	or     al,0xb0
  414189:	shl    dh,cl
  41418b:	mov    WORD PTR ss:[ecx+0x751a50fd],ss
  414192:	pop    es
  414193:	stos   DWORD PTR es:[edi],eax
  414194:	test   DWORD PTR [ebp+0x31fe1a36],ebp
  41419a:	mov    BYTE PTR [ebp-0x1b42b9e8],ch
  4141a0:	inc    esp
  4141a1:	xchg   edi,eax
  4141a2:	xchg   ebx,eax
  4141a3:	pop    ss
  4141a4:	mov    bh,0x1
  4141a6:	fist   WORD PTR [ebx+0xae848a6]
  4141ac:	je     0x414155
  4141ae:	test   ah,0xf9
  4141b1:	mov    eax,0xd03ab175
  4141b6:	into   
  4141b7:	fistp  QWORD PTR [ebx-0x2b]
  4141ba:	dec    ecx
  4141bb:	xor    eax,0x4675dded
  4141c0:	popf   
  4141c1:	gs mov ah,0xf6
  4141c4:	push   es
  4141c5:	pop    ds
  4141c6:	dec    edx
  4141c7:	mov    edi,0x5bef8f3b
  4141cc:	data16 adc BYTE PTR cs:[esi-0x22],cl
  4141d1:	test   DWORD PTR [eax-0x36],0xbadcfeb7
  4141d8:	int    0x31
  4141da:	dec    edx
  4141db:	ss add eax,edi
  4141de:	inc    eax
  4141df:	scas   al,BYTE PTR es:[edi]
  4141e0:	fidiv  DWORD PTR [ebp+0x27]
  4141e3:	add    ch,0xae
  4141e6:	(bad)  
  4141e8:	push   ss
  4141e9:	push   ebp
  4141ea:	adc    edx,DWORD PTR [ebp+0x4e1ff668]
  4141f0:	aas    
  4141f1:	lea    ecx,[esi]
  4141f3:	hlt    
  4141f4:	fdiv   QWORD PTR [esi+0x74]
  4141f7:	cmc    
  4141f8:	cmp    DWORD PTR [ebx+0xe],ecx
  4141fb:	inc    esi
  4141fc:	jmp    0x6553:0x80920fd9
  414203:	mov    ebp,0x6b5d4561
  414208:	imul   ebx,DWORD PTR [edi],0x19bfa13c
  41420e:	pop    edx
  41420f:	cmp    bh,ch
  414211:	mov    ebp,0x314b15fe
  414216:	shr    BYTE PTR es:[ebx+0x3e],1
  41421a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41421b:	daa    
  41421c:	dec    esi
  41421d:	cmc    
  41421e:	mov    ecx,0xb55a25f2
  414223:	sbb    bl,BYTE PTR [ecx-0x1243ec41]
  414229:	cmp    bl,bl
  41422b:	lahf   
  41422c:	pop    ds
  41422d:	fld    QWORD PTR [esi-0x58]
  414230:	or     ecx,DWORD PTR [ebp-0x7f]
  414233:	or     ah,BYTE PTR [edi-0x2d0a2415]
  414239:	xchg   edi,eax
  41423a:	push   0x6d
  41423c:	or     dh,cl
  41423e:	aad    0xd3
  414240:	add    al,0x73
  414242:	or     BYTE PTR [edi],0xc
  414245:	jmp    0xbb33:0x26378260
  41424c:	cmp    eax,0x778edcd5
  414251:	push   ds
  414252:	push   ebp
  414253:	scas   eax,DWORD PTR es:[edi]
  414254:	out    dx,al
  414255:	mov    ds:0x78fede66,eax
  41425a:	cmp    eax,0xc0227a1f
  41425f:	sub    al,0x18
  414261:	inc    esi
  414262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414263:	stos   BYTE PTR es:[edi],al
  414264:	inc    edx
  414265:	mov    esp,0x3c21f203
  41426a:	stc    
  41426b:	pop    ebx
  41426c:	mov    bh,0x75
  41426e:	fld    QWORD PTR [edx+edi*2+0x62047a37]
  414275:	shl    BYTE PTR [edi-0x45077779],cl
  41427b:	push   ecx
  41427c:	dec    eax
  41427d:	sub    BYTE PTR [ecx+edi*4+0x6383ca55],ah
  414284:	xor    eax,ebx
  414286:	stos   DWORD PTR es:[edi],eax
  414287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414288:	adc    DWORD PTR [esi-0x6d4371],0x9fbed274
  414292:	cs (bad) 
  414294:	sub    DWORD PTR [ecx+0x4b],eax
  414297:	lea    ecx,[esi]
  414299:	ficom  DWORD PTR [edx+0x75521350]
  41429f:	sbb    al,0x4a
  4142a1:	ret    
  4142a2:	call   0xfa5a524b
  4142a7:	sbb    esp,edx
  4142a9:	lods   eax,DWORD PTR ds:[esi]
  4142aa:	sbb    dh,bl
  4142ac:	fs retf 0x78d4
  4142b0:	rcl    DWORD PTR [edx+0x48],0x20
  4142b4:	iret   
  4142b5:	cmc    
  4142b6:	sahf   
  4142b7:	(bad)  
  4142b8:	aam    0x82
  4142ba:	jmp    0xbbbab06c
  4142bf:	pop    ss
  4142c0:	jp     0x4142b1
  4142c2:	cdq    
  4142c3:	inc    eax
  4142c4:	mov    ds:0xf3d46391,eax
  4142c9:	mov    ch,0xcd
  4142cb:	mov    cl,0xbc
  4142cd:	out    dx,eax
  4142ce:	ja     0x4142dc
  4142d0:	sbb    eax,0x14a07c0e
  4142d5:	(bad)  
  4142d6:	shufps xmm2,xmm0,0x35
  4142da:	mov    ecx,0x102f1302
  4142df:	(bad)  
  4142e0:	pop    ss
  4142e1:	test   DWORD PTR [ecx+0x5f],0xc651463
  4142e8:	sbb    ebp,esi
  4142ea:	xchg   edx,eax
  4142eb:	push   esi
  4142ec:	cmp    al,0x97
  4142ee:	test   BYTE PTR [edi-0xa],dh
  4142f1:	jg     0x4142f8
  4142f3:	or     BYTE PTR [edi-0x3bd91249],ah
  4142f9:	call   0xe92d9f42
  4142fe:	inc    ecx
  4142ff:	and    BYTE PTR [eax+edx*8-0x37],bl
  414303:	sub    al,0x90
  414305:	jne    0x414290
  414307:	lahf   
  414308:	les    edx,FWORD PTR [eax]
  41430a:	arpl   di,cx
  41430c:	repz loop 0x414294
  41430f:	sahf   
  414310:	push   ecx
  414311:	adc    BYTE PTR [ecx],ch
  414313:	dec    esi
  414314:	call   0x4b2a:0x7ee9a4f1
  41431b:	retf   0x6293
  41431e:	arpl   WORD PTR ds:0x600bdaaa,di
  414324:	adc    BYTE PTR [edx],bh
  414326:	ret    0x8ecf
  414329:	imul   esp,DWORD PTR [ecx],0x3a754396
  41432f:	outs   dx,BYTE PTR ds:[esi]
  414330:	add    edx,DWORD PTR [ebx+ebx*4]
  414333:	and    al,dh
  414335:	xchg   edx,eax
  414336:	ins    DWORD PTR es:[edi],dx
  414337:	lods   al,BYTE PTR ds:[esi]
  414338:	(bad)  
  414339:	sahf   
  41433a:	dec    esp
  41433b:	jne    0x414387
  41433d:	cs jmp 0x414335
  414340:	sub    BYTE PTR [ebx+0x47e7e114],bl
  414346:	dec    esi
  414347:	add    al,0x49
  414349:	mov    DWORD PTR [ecx],esi
  41434b:	aam    0x90
  41434d:	dec    esp
  41434e:	pop    edx
  41434f:	je     0x41435b
  414351:	and    ch,BYTE PTR [ebp-0x97fac0c]
  414357:	sub    eax,0x444df0ad
  41435c:	fwait
  41435d:	and    edi,DWORD PTR [edx-0x76]
  414360:	add    al,0xb8
  414362:	add    eax,DWORD PTR [ebp-0x2b]
  414365:	jnp    0x41430b
  414367:	or     al,0x57
  41436a:	into   
  41436b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41436c:	adc    ecx,DWORD PTR [ebx+edx*4]
  41436f:	int3   
  414370:	jnp    0x4143e1
  414372:	cdq    
  414373:	mov    ebp,0xe7095cfd
  414378:	cmp    BYTE PTR [eax+esi*4-0x5a6483b6],ah
  41437f:	cmp    edx,DWORD PTR [edx-0x16]
  414382:	das    
  414383:	jno    0x41434d
  414385:	retf   0xdeb7
  414388:	fcomp  QWORD PTR [ebp+esi*4+0x406e22ec]
  41438f:	adc    BYTE PTR [eax+edi*1],0xb8
  414393:	cdq    
  414394:	add    al,0x96
  414396:	xchg   edi,eax
  414397:	dec    ebx
  414398:	sti    
  414399:	push   0x14a474d5
  41439e:	ins    BYTE PTR es:[edi],dx
  41439f:	push   esp
  4143a0:	repnz stos BYTE PTR es:[edi],al
  4143a2:	clc    
  4143a3:	adc    eax,0x8dd3c4e0
  4143a8:	jo     0x414381
  4143aa:	pop    ebp
  4143ab:	or     eax,0x8f51142c
  4143b0:	jo     0x41435e
  4143b2:	ss sahf 
  4143b4:	shl    DWORD PTR [edx-0x54],0x13
  4143b8:	ds scas al,BYTE PTR es:[edi]
  4143ba:	out    dx,eax
  4143bb:	aam    0x42
  4143bd:	cmp    DWORD PTR [ebx+eiz*2-0x12],ebx
  4143c1:	out    0xb7,eax
  4143c3:	inc    edi
  4143c4:	cmp    eax,0xc791c6b5
  4143c9:	pop    esi
  4143ca:	inc    ebp
  4143cb:	inc    esi
  4143cc:	aam    0x9d
  4143ce:	mov    edi,0xdbbca6f0
  4143d3:	call   0xabcc3b3a
  4143d8:	outs   dx,DWORD PTR ds:[esi]
  4143d9:	sbb    al,0xa6
  4143db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143dc:	fsub   st,st(5)
  4143de:	or     al,0x4c
  4143e0:	ss js  0x41440a
  4143e3:	mov    ds:0x8aa90a3e,al
  4143e8:	test   eax,0x3111c011
  4143ed:	push   esi
  4143ee:	pop    ds
  4143ef:	bound  edi,QWORD PTR ds:0xd00cfe58
  4143f5:	push   ebx
  4143f6:	jne    0x414390
  4143f8:	cdq    
  4143f9:	js     0x414459
  4143fb:	mov    ds:0x8491a628,eax
  414400:	adc    esi,edx
  414402:	sbb    al,BYTE PTR [edi-0x7e]
  414405:	in     al,0x88
  414407:	repz push ebp
  414409:	xchg   esp,eax
  41440a:	pop    esi
  41440b:	aas    
  41440c:	jo     0x414415
  41440e:	add    dl,bh
  414410:	and    DWORD PTR [ebp+0x163f7e5c],edx
  414416:	xchg   edi,eax
  414417:	test   al,0x35
  414419:	shl    edi,cl
  41441b:	push   0xf89ab25c
  414420:	mov    ah,0x18
  414422:	inc    eax
  414423:	stos   BYTE PTR es:[edi],al
  414424:	mov    WORD PTR [esp+edx*2],cs
  414427:	test   al,0x94
  414429:	sub    bl,bl
  41442b:	sahf   
  41442c:	call   0x99aaeed6
  414431:	minps  xmm0,XMMWORD PTR [ebx]
  414434:	or     dh,bh
  414436:	and    dl,BYTE PTR [eax+0x3e3b7911]
  41443c:	arpl   WORD PTR [ebx-0x36],si
  41443f:	ror    edx,0xeb
  414442:	lock ret 0xe1a2
  414446:	lock in al,dx
  414448:	mov    ecx,0x4758722f
  41444d:	xor    dh,BYTE PTR [edx-0x10]
  414450:	es jb  0x41440e
  414453:	dec    eax
  414454:	add    BYTE PTR gs:[ebx-0x27993dfe],dh
  41445b:	push   ebx
  41445c:	aas    
  41445d:	pop    ecx
  41445e:	push   ss
  41445f:	xchg   esi,eax
  414460:	lahf   
  414461:	mov    al,ds:0xe4bae0e
  414466:	ins    BYTE PTR es:[edi],dx
  414467:	aam    0xab
  414469:	push   es
  41446a:	and    al,0x4
  41446c:	inc    esi
  41446d:	pop    ecx
  41446e:	imul   ebp,DWORD PTR [esi],0x1d9d5234
  414474:	cmp    BYTE PTR [edi+0x77ed890c],bh
  41447a:	mov    ah,0x40
  41447c:	sub    DWORD PTR ds:0xdb97b922,0x29c4ef56
  414486:	sbb    DWORD PTR [esp+edi*2+0x6c],ecx
  41448a:	(bad)  
  41448b:	pusha  
  41448c:	push   edx
  41448d:	and    BYTE PTR [eax],ah
  41448f:	xchg   ebp,eax
  414490:	icebp  
  414491:	std    
  414492:	iret   
  414493:	lds    esi,FWORD PTR [ebx+eiz*1-0x31f16910]
  41449a:	pop    es
  41449b:	inc    edi
  41449c:	adc    edx,ebx
  41449e:	adc    edx,DWORD PTR [ebp-0x48]
  4144a1:	fld    QWORD PTR [edi+0x16]
  4144a4:	xchg   BYTE PTR [edi+0x235b7b7d],bl
  4144aa:	repnz mov eax,0xd3f4be60
  4144b0:	ja     0x4144c1
  4144b2:	cmp    eax,ebx
  4144b4:	sub    ch,BYTE PTR [esi]
  4144b6:	fsubr  DWORD PTR [edx+0x34754873]
  4144bc:	pop    edi
  4144bd:	das    
  4144be:	push   esp
  4144bf:	push   ss
  4144c0:	(bad)  
  4144c1:	shl    BYTE PTR [edi-0x579632b2],1
  4144c7:	dec    esp
  4144c8:	test   bl,dl
  4144ca:	or     al,0xca
  4144cc:	sbb    BYTE PTR ds:0x3e342741,bl
  4144d2:	adc    al,BYTE PTR [ebp-0xe13ef82]
  4144d8:	mov    ebx,0x1004c65e
  4144dd:	pop    ecx
  4144de:	popa   
  4144df:	pop    ebp
  4144e0:	out    0x47,al
  4144e2:	inc    edx
  4144e3:	xlat   BYTE PTR ds:[ebx]
  4144e4:	mov    edi,0xca850d8e
  4144e9:	lahf   
  4144ea:	gs xor dh,0x29
  4144ee:	inc    eax
  4144ef:	xchg   ebx,eax
  4144f0:	mov    cl,0xeb
  4144f2:	or     cl,ch
  4144f4:	shl    DWORD PTR [eax-0x25],0xdf
  4144f8:	xchg   esi,eax
  4144f9:	fild   QWORD PTR [eax+eax*8]
  4144fc:	(bad)  
  4144fd:	loop   0x414578
  4144ff:	adc    BYTE PTR [edi],cl
  414501:	or     al,0x72
  414503:	(bad)  
  414504:	mov    cl,0xc0
  414506:	loop   0x414578
  414508:	nop
  414509:	enter  0xb841,0xeb
  41450d:	adc    al,0x4a
  41450f:	push   edi
  414510:	inc    esi
  414511:	arpl   WORD PTR [eax+0x18186ba6],dx
  414517:	or     BYTE PTR [edi+0x73292205],bl
  41451d:	ret    0x3ac0
  414520:	pop    esp
  414521:	cmp    ebx,DWORD PTR [edi]
  414523:	popa   
  414524:	fisubr WORD PTR [edx]
  414526:	fwait
  414527:	pop    esi
  414528:	inc    edi
  414529:	inc    esp
  41452a:	dec    ecx
  41452b:	loopne 0x414596
  41452d:	imul   edx,edx,0x10
  414530:	xchg   ebp,eax
  414531:	jne    0x4144b7
  414533:	push   0xe790bdf9
  414538:	shl    DWORD PTR [eax+0x207ec03d],1
  41453e:	xor    dl,BYTE PTR [esi-0x7a]
  414541:	sub    DWORD PTR [edi],eax
  414543:	mov    DWORD PTR gs:[ebx-0x6dfb4e12],edi
  41454a:	xor    eax,0x93026abd
  41454f:	bound  esp,QWORD PTR [ecx]
  414551:	cmp    DWORD PTR [ebp-0x1],0xffffffd8
  414555:	aaa    
  414556:	push   0xc6365d20
  41455b:	(bad)  
  41455c:	jnp    0x4145d8
  41455e:	push   0x1c
  414560:	sbb    al,0x55
  414562:	adc    eax,0x104539e3
  414567:	sbb    eax,0x8cf70a97
  41456c:	push   0x571c08d3
  414571:	or     DWORD PTR [edx-0x7f2538d7],0x791e6e06
  41457b:	aaa    
  41457c:	jb     0x41459e
  41457e:	sub    al,0x6c
  414580:	jl     0xe56c7929
  414586:	ss (bad) 
  414588:	test   al,0xd0
  41458a:	sub    DWORD PTR [esi],ebp
  41458c:	or     esi,0xfffffffc
  41458f:	out    dx,eax
  414590:	inc    eax
  414591:	popa   
  414592:	loop   0x4145c4
  414594:	cs dec eax
  414596:	stos   BYTE PTR es:[edi],al
  414597:	test   BYTE PTR [esi],cl
  414599:	clc    
  41459a:	fwait
  41459b:	jbe    0x414582
  41459d:	cld    
  41459e:	jmp    0x1461c541
  4145a3:	shl    BYTE PTR fs:[edi+ecx*1],cl
  4145a7:	mov    bl,0xbc
  4145a9:	mov    eax,ds:0x87473953
  4145ae:	cmp    al,dh
  4145b0:	pop    ecx
  4145b1:	add    bl,BYTE PTR ds:0xff1ad28f
  4145b7:	mov    esp,0xe31d5155
  4145bc:	cmp    eax,0x12c9c7cd
  4145c1:	sbb    BYTE PTR [ebx],ah
  4145c3:	dec    eax
  4145c4:	test   DWORD PTR [ebx],0x259f49d2
  4145ca:	lahf   
  4145cb:	mov    edi,0xd45c032a
  4145d0:	cmp    dl,ah
  4145d2:	push   edi
  4145d3:	add    eax,0x9766fade
  4145d8:	fadd   DWORD PTR [edx]
  4145da:	stos   DWORD PTR es:[edi],eax
  4145db:	mov    ds:0xa05e922,eax
  4145e0:	stc    
  4145e1:	adc    ch,BYTE PTR [ebp-0x65]
  4145e4:	jl     0x41456f
  4145e6:	xchg   esp,eax
  4145e7:	nop
  4145e8:	jmp    0x414621
  4145ea:	and    dl,BYTE PTR [esi+0x1fb432d5]
  4145f0:	add    esi,DWORD PTR [ebp+0x450e6602]
  4145f6:	sbb    edx,ecx
  4145f8:	popa   
  4145f9:	imul   ebp,DWORD PTR [ecx+0x7a2836ce],0x38026d23
  414603:	or     al,0xa9
  414605:	and    eax,0x5eef29d6
  41460a:	daa    
  41460b:	or     esi,eax
  41460d:	stos   BYTE PTR es:[edi],al
  41460e:	xchg   esi,eax
  41460f:	xor    DWORD PTR [ebp+0x5],0xb699c0e3
  414616:	and    cl,BYTE PTR [edi-0x64]
  414619:	cs pop ebp
  41461b:	into   
  41461c:	mulps  xmm2,XMMWORD PTR [esi+edx*8]
  414620:	fmul   st(1),st
  414622:	adc    esi,ecx
  414624:	xchg   ecx,eax
  414625:	leave  
  414626:	sbb    DWORD PTR [edi-0x15],ebx
  414629:	(bad)  
  41462a:	xor    ah,bh
  41462c:	xlat   BYTE PTR ds:[ebx]
  41462d:	sbb    cl,bl
  41462f:	and    DWORD PTR [edx+0x1aa63c77],esp
  414635:	pop    esp
  414636:	or     al,0x94
  414638:	retf   0x5b3a
  41463b:	aam    0xf0
  41463d:	fiadd  DWORD PTR [ecx+0xdef959c]
  414643:	mul    BYTE PTR [esi-0x7b8fd70]
  414649:	in     al,0x6c
  41464b:	out    0x6d,al
  41464d:	jmp    0x414673
  41464f:	(bad)  
  414650:	iret   
  414651:	sub    ah,ah
  414653:	jae    0x414659
  414655:	jmp    0xe3ccfbe7
  41465a:	cmp    BYTE PTR [ecx+0x4cc3b79c],bl
  414660:	push   es
  414661:	jnp    0x414647
  414663:	or     edx,DWORD PTR gs:[ebp-0x3092c05]
  41466a:	jae    0x4145fc
  41466c:	xchg   BYTE PTR [ebp-0x227f22b8],ch
  414672:	jnp    0x4146a6
  414674:	dec    ebx
  414675:	add    edx,edx
  414677:	in     eax,0x43
  414679:	in     eax,dx
  41467a:	mov    bl,0xfa
  41467c:	jno    0x414682
  41467e:	mov    bh,0x6f
  414680:	jle    0x41469a
  414682:	test   BYTE PTR [esp+esi*2],bl
  414685:	lods   eax,DWORD PTR ds:[esi]
  414686:	(bad)  
  414687:	stos   DWORD PTR es:[edi],eax
  414688:	mov    al,ds:0xec56f895
  41468d:	stos   DWORD PTR es:[edi],eax
  41468e:	ins    BYTE PTR es:[edi],dx
  41468f:	sbb    dh,BYTE PTR [ebp+0x38]
  414692:	mov    al,0xa4
  414694:	cmp    dh,BYTE PTR [esi+ecx*4+0x50]
  414698:	loop   0x414696
  41469a:	stc    
  41469b:	push   cs
  41469c:	outs   dx,DWORD PTR ds:[esi]
  41469d:	lods   al,BYTE PTR ds:[esi]
  41469e:	call   0xa21e:0x4565ff4a
  4146a5:	sub    DWORD PTR [esi-0x2c385f9d],ebp
  4146ab:	xor    BYTE PTR [esi+0x51],dh
  4146ae:	jns    0x4146f7
  4146b0:	aam    0xe6
  4146b2:	pop    ecx
  4146b3:	sbb    dh,0xba
  4146b6:	push   eax
  4146b7:	(bad)  [ebx+0x44]
  4146ba:	and    DWORD PTR [eax],ebx
  4146bc:	or     ecx,esi
  4146be:	popa   
  4146bf:	ret    0xb5ef
  4146c2:	fisttp QWORD PTR [eax+0x77]
  4146c5:	(bad)  
  4146c6:	pop    ebp
  4146c7:	sbb    ch,ah
  4146c9:	cwde   
  4146ca:	test   eax,0x2b4ed35a
  4146d0:	jmp    0x414674
  4146d2:	mov    ebx,DWORD PTR es:[edx-0x65]
  4146d6:	je     0x414739
  4146d8:	mov    cl,BYTE PTR [ebx-0x3d]
  4146db:	xchg   ebp,eax
  4146dc:	div    BYTE PTR [edi-0x66]
  4146df:	add    eax,0x8b74a2f3
  4146e4:	cld    
  4146e5:	test   eax,0x82ea7c81
  4146ea:	mov    cl,0x81
  4146ec:	xor    bh,BYTE PTR [edx-0x4c]
  4146ef:	inc    ecx
  4146f0:	imul   ebx,esi,0x34c969ba
  4146f6:	cli    
  4146f7:	iret   
  4146f8:	mov    eax,0x60fa1fef
  4146fd:	cmp    ah,BYTE PTR [ecx-0x5a73439]
  414703:	mov    esp,0xa6a96916
  414708:	adc    dl,0x9f
  41470b:	outs   dx,BYTE PTR ds:[esi]
  41470c:	into   
  41470d:	sahf   
  41470e:	pop    ecx
  41470f:	dec    esi
  414710:	sar    DWORD PTR [edi-0x73ecd08e],1
  414716:	xor    ebp,edi
  414718:	adc    BYTE PTR [esi-0x3ad4f38c],cl
  41471e:	mov    dh,0x31
  414720:	push   esp
  414721:	xchg   ebp,eax
  414722:	pushf  
  414723:	xor    ecx,ebp
  414725:	addr16 cmp al,0xd7
  414728:	jl     0x41477a
  41472a:	test   eax,0xcdc969ff
  41472f:	and    eax,0xf0b974b
  414734:	add    bh,BYTE PTR [edi]
  414736:	pop    esi
  414737:	out    dx,al
  414738:	push   ebx
  414739:	bound  edx,QWORD PTR [ecx+edx*1+0x57]
  41473d:	cmp    eax,0xa830d80b
  414742:	pusha  
  414743:	and    DWORD PTR [esi+0x48],edx
  414746:	jcxz   0x41474b
  414749:	jo     0x414796
  41474b:	sti    
  41474c:	or     ah,BYTE PTR [edx]
  41474e:	ret    
  41474f:	loopne 0x414732
  414751:	jmp    DWORD PTR [edi-0x74]
  414754:	test   al,0xbf
  414756:	mov    ah,0x38
  414758:	mov    edi,0x5e19c93c
  41475d:	add    DWORD PTR [edx-0x403edb82],edi
  414763:	sub    eax,0x5ab194a3
  414768:	or     al,0xe1
  41476a:	jae    0x414740
  41476c:	sub    eax,0x9a472021
  414771:	ds call 0x7eb5:0xe9a7830e
  414779:	dec    esi
  41477a:	in     eax,dx
  41477b:	int3   
  41477c:	rcr    DWORD PTR [esi],1
  41477e:	push   cs
  41477f:	aaa    
  414780:	jns    0x414709
  414782:	mov    ebp,0xf97750f6
  414787:	inc    ecx
  414788:	jo     0x414773
  41478a:	stc    
  41478b:	retf   0x8d11
  41478e:	push   es
  41478f:	shr    DWORD PTR [edx+0x39eed3d1],1
  414795:	dec    ebp
  414796:	shl    BYTE PTR [edi+ecx*2],1
  414799:	dec    edi
  41479a:	xchg   DWORD PTR [esi+0x6f],ebx
  41479d:	jbe    0x414800
  41479f:	xchg   DWORD PTR [esi+0x1d],esp
  4147a2:	mov    bl,0x45
  4147a4:	add    al,0xee
  4147a6:	ins    BYTE PTR es:[edi],dx
  4147a7:	sub    ch,bh
  4147a9:	aas    
  4147aa:	fwait
  4147ab:	push   edi
  4147ac:	pop    eax
  4147ad:	lea    esi,[edx-0x37c9deaa]
  4147b3:	cmp    dl,BYTE PTR [ebp+0x7c370703]
  4147b9:	fidivr WORD PTR [esi]
  4147bb:	div    BYTE PTR [ecx-0x1d5b5ecb]
  4147c1:	fadd   QWORD PTR [edx]
  4147c3:	into   
  4147c4:	dec    edx
  4147c5:	int3   
  4147c6:	icebp  
  4147c7:	xchg   esi,eax
  4147c8:	loop   0x4147a0
  4147ca:	in     eax,0x5c
  4147cc:	cmp    BYTE PTR [esi+0x36546572],cl
  4147d2:	jg     0x41476a
  4147d4:	addr16 mov dh,0x5b
  4147d7:	mov    bh,0xad
  4147d9:	push   esi
  4147da:	and    ch,ah
  4147dc:	push   0x7a2daaea
  4147e1:	es or  esi,esi
  4147e4:	cmp    al,0xec
  4147e6:	lods   eax,DWORD PTR ds:[esi]
  4147e7:	or     ebx,0x7d
  4147ea:	push   ds
  4147eb:	test   al,bl
  4147ed:	sub    BYTE PTR [ebp-0x138d4af4],ah
  4147f3:	nop
  4147f4:	gs push esp
  4147f6:	mov    cl,0xd
  4147f8:	int3   
  4147f9:	test   al,0x99
  4147fb:	fmul   QWORD PTR [ecx-0x3]
  4147fe:	daa    
  4147ff:	cmp    BYTE PTR [edi+edi*2-0x50],0xd2
  414804:	stc    
  414805:	(bad)  
  414806:	sbb    al,0xf2
  414808:	sbb    BYTE PTR [ebx+eiz*8-0xf3faabc],al
  41480f:	dec    ebp
  414810:	lock or BYTE PTR [edi+0x14],al
  414814:	adc    al,0x1a
  414816:	push   esp
  414817:	jle    0x414802
  414819:	(bad)  
  41481a:	ret    
  41481b:	std    
  41481c:	mov    cs,WORD PTR [ebp-0x7]
  41481f:	mov    esp,0x720c32
  414824:	lods   eax,DWORD PTR ds:[esi]
  414825:	mov    ds:0xec7edc9b,al
  41482a:	sti    
  41482b:	push   ds
  41482c:	jae    0x414833
  41482e:	push   es
  41482f:	or     eax,0xbe8df046
  414834:	call   0x6230:0xea908d4c
  41483b:	mov    ch,dl
  41483d:	retf   
  41483e:	lea    eax,[ecx+0x4ec7d857]
  414844:	lods   eax,DWORD PTR ds:[esi]
  414845:	fild   DWORD PTR [ebx]
  414847:	xor    al,0xac
  414849:	xor    al,0xed
  41484b:	out    0xce,al
  41484d:	push   ebp
  41484e:	(bad)  
  41484f:	fwait
  414850:	xchg   ebp,eax
  414851:	(bad)  
  414852:	push   edx
  414853:	mov    ah,0xf4
  414855:	or     al,0x9e
  414857:	xor    ah,BYTE PTR [eax+0xb]
  41485a:	ss mov ebp,0x5c1f321
  414860:	mov    dl,0x4e
  414862:	or     al,0xb4
  414864:	call   0xbc1285b1
  414869:	dec    eax
  41486a:	xor    esp,DWORD PTR [ebx]
  41486c:	lods   eax,DWORD PTR ds:[esi]
  41486d:	in     eax,dx
  41486e:	pop    ebx
  41486f:	imul   edx,DWORD PTR [esi-0x14],0x6e0f4107
  414876:	test   eax,0x3f0d0433
  41487b:	xchg   edi,eax
  41487c:	repz push esi
  41487e:	aad    0x3f
  414880:	hlt    
  414881:	jle    0x4148e1
  414883:	shl    bh,cl
  414885:	mov    dh,0x43
  414887:	sahf   
  414888:	test   DWORD PTR [ebp-0x12],eax
  41488b:	dec    esp
  41488c:	leave  
  41488d:	bound  edi,QWORD PTR [ebx+esi*1-0x2d988741]
  414894:	sar    BYTE PTR [eax-0x17],cl
  414897:	test   al,0xd6
  414899:	push   ebp
  41489a:	outs   dx,DWORD PTR ds:[esi]
  41489b:	leave  
  41489c:	test   al,0x18
  41489e:	or     al,0x1
  4148a0:	rcl    BYTE PTR [edi+0x73],cl
  4148a3:	and    BYTE PTR [edi],ch
  4148a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a6:	adc    esp,DWORD PTR [esi]
  4148a8:	push   edx
  4148a9:	(bad)  
  4148aa:	jmp    0x3643:0x69fe8fa3
  4148b1:	push   0xff129648
  4148b6:	push   ecx
  4148b7:	mov    ecx,0xfb03c03d
  4148bc:	add    ah,bh
  4148be:	call   0xeb335722
  4148c3:	out    0x88,eax
  4148c5:	jmp    0x562ecda9
  4148ca:	mov    eax,0x761d8499
  4148cf:	cmc    
  4148d0:	adc    BYTE PTR [edi],0xf6
  4148d3:	mov    esp,0x6e027cec
  4148d8:	out    dx,eax
  4148d9:	and    DWORD PTR [edi],ebx
  4148db:	dec    esp
  4148dc:	jge    0x41486e
  4148de:	bound  ebp,QWORD PTR [esi+edx*1-0x12]
  4148e2:	stos   BYTE PTR es:[edi],al
  4148e3:	stos   DWORD PTR es:[edi],eax
  4148e4:	cmp    ah,BYTE PTR cs:[esi-0x44]
  4148e8:	jno    0x414955
  4148ea:	aad    0xc
  4148ec:	xchg   ebp,eax
  4148ed:	rcl    dl,0x3e
  4148f0:	aas    
  4148f1:	mov    bl,0x27
  4148f3:	fldenv [eax-0x62ea0dbd]
  4148f9:	outs   dx,DWORD PTR ds:[esi]
  4148fb:	jnp    0x41489b
  4148fd:	and    DWORD PTR [esi],ecx
  4148ff:	push   ss
  414900:	rcl    DWORD PTR [edi],0x47
  414903:	stos   BYTE PTR es:[edi],al
  414904:	imul   DWORD PTR [edi-0x57]
  414907:	repz jg 0x4148a8
  41490a:	pop    ds
  41490b:	cmp    edx,eax
  41490d:	gs dec eax
  41490f:	lahf   
  414910:	and    ebp,0xdda42fec
  414916:	mov    bh,0xc8
  414918:	aad    0x6f
  41491a:	mov    al,ds:0x6cc4adc2
  41491f:	mov    eax,ebx
  414921:	psubb  mm1,QWORD PTR [edi+0x4d]
  414925:	cmp    DWORD PTR [ebp+0x70],0x2f
  414929:	fimul  WORD PTR gs:[edi+0x37]
  41492d:	push   edi
  41492e:	(bad)  [esp+eax*8-0x7974bdbf]
  414935:	push   ds
  414936:	add    DWORD PTR [ebp-0x5a8e4dda],0xffffffc3
  41493d:	xor    BYTE PTR [edx+0x12d1215a],cl
  414943:	mov    dh,0xf7
  414945:	fbstp  TBYTE PTR [ecx]
  414947:	imul   esp,DWORD PTR [edx+0x6fdc1786],0x3f
  41494e:	fdivr  QWORD PTR [esi]
  414950:	imul   eax,ebx,0xffffff9c
  414953:	inc    eax
  414954:	pop    edx
  414955:	push   cs
  414956:	mov    cl,0x55
  414958:	cli    
  414959:	adc    eax,0x169b51da
  41495e:	xor    DWORD PTR [edx+eax*4-0x32a0dd52],0x9f6fa889
  414969:	mov    edi,0xfee5fe94
  41496e:	repz call 0xb06c21d1
  414974:	push   eax
  414975:	jbe    0x414925
  414977:	leave  
  414978:	popf   
  414979:	xor    al,0xbb
  41497b:	add    al,0x18
  41497d:	in     eax,0x28
  41497f:	rol    ebx,1
  414981:	jne    0x414923
  414983:	mov    bh,0x3f
  414985:	(bad)  
  414986:	call   0x9b1f6401
  41498b:	jecxz  0x4149b5
  41498d:	jb     0x4149d9
  41498f:	daa    
  414990:	out    0xf,eax
  414992:	out    0x94,eax
  414994:	pop    eax
  414995:	jnp    0x41498b
  414997:	out    0x56,al
  414999:	scas   al,BYTE PTR es:[edi]
  41499a:	push   esi
  41499b:	fwait
  41499c:	xchg   esp,eax
  41499d:	mov    ebx,0x129b3af4
  4149a2:	add    cl,dl
  4149a4:	js     0x4149b3
  4149a6:	in     eax,dx
  4149a7:	mov    DWORD PTR [edx],0xb864dbfd
  4149ad:	in     eax,0xaa
  4149af:	sub    ebx,DWORD PTR [esi+0x2ece0142]
  4149b5:	adc    ah,BYTE PTR [eax]
  4149b7:	mov    ebx,0xa936336f
  4149bc:	arpl   bx,di
  4149be:	aad    0xb
  4149c0:	out    0xfe,eax
  4149c2:	sub    eax,0xea26ff0b
  4149c7:	push   ecx
  4149c8:	pop    esp
  4149c9:	imul   ebx,DWORD PTR [eax+0x4f],0xffffff93
  4149cd:	mov    cl,0x5f
  4149cf:	mov    dh,0x13
  4149d1:	ja     0x41496f
  4149d3:	dec    eax
  4149d4:	fwait
  4149d5:	cmp    edx,DWORD PTR [edx+0x60]
  4149d8:	adc    DWORD PTR [esi-0x2817af21],edi
  4149de:	ins    DWORD PTR es:[edi],dx
  4149df:	loop   0x414971
  4149e1:	mov    esi,0x77f26e25
  4149e6:	sbb    ch,BYTE PTR [ecx-0xcca3e54]
  4149ec:	pop    ds
  4149ed:	adc    ch,BYTE PTR [ebx+0x4fd2d21e]
  4149f3:	pop    edi
  4149f4:	sub    DWORD PTR [ecx-0x27],esp
  4149f7:	cld    
  4149f8:	dec    edx
  4149f9:	cld    
  4149fa:	jle    0x414a66
  4149fc:	xor    BYTE PTR [edi],0x3
  4149ff:	mov    ds:0xaf9195d7,al
  414a04:	ret    
  414a05:	mov    ecx,0xc0645049
  414a0a:	xor    BYTE PTR [ebp-0x2d1774fc],cl
  414a10:	inc    ecx
  414a11:	sub    edx,0xffffff86
  414a14:	inc    ebx
  414a15:	not    DWORD PTR [ebp-0x71]
  414a18:	jge    0x414a1a
  414a1a:	jp     0x4149a7
  414a1c:	and    DWORD PTR [ecx],ebx
  414a1e:	add    dh,al
  414a20:	data16 int3 
  414a22:	fsubr  DWORD PTR [ebp+0xb08e636]
  414a28:	or     al,0x22
  414a2a:	stos   DWORD PTR es:[edi],eax
  414a2b:	dec    esp
  414a2c:	xor    edx,DWORD PTR [ebp+0x21]
  414a2f:	and    DWORD PTR [ebp-0x23],0xffffffc1
  414a33:	(bad)  [ebx]
  414a35:	mov    ebx,ebx
  414a37:	mov    edx,0x8933fbc7
  414a3c:	sti    
  414a3d:	jl     0x414a58
  414a3f:	inc    ebp
  414a40:	push   ss
  414a41:	call   DWORD PTR [eax+0x52fb572b]
  414a47:	jo     0x414a00
  414a49:	int    0x18
  414a4b:	xchg   esi,eax
  414a4c:	fwait
  414a4d:	mov    eax,0x46d20734
  414a52:	int    0x8c
  414a54:	imul   ebx,DWORD PTR [edx+0x1facebb7],0xb5d499cb
  414a5e:	xchg   esp,eax
  414a5f:	pop    esp
  414a60:	fsubr  QWORD PTR [ecx-0x28]
  414a63:	sub    al,0x91
  414a65:	mov    bh,dh
  414a67:	push   esp
  414a68:	xor    al,0xa8
  414a6a:	xor    al,BYTE PTR [ebp+0x30d341b4]
  414a70:	lock (bad) 
  414a72:	pushf  
  414a73:	mov    DWORD PTR [esi],ebx
  414a75:	test   al,0xb2
  414a77:	sub    dh,BYTE PTR [esi-0x17]
  414a7a:	jl     0x414a5d
  414a7c:	xor    esp,eax
  414a7e:	leave  
  414a7f:	and    dl,BYTE PTR [ecx]
  414a81:	pop    ds
  414a82:	mov    esp,DWORD PTR [edx-0xa5a81e8]
  414a88:	xor    edx,DWORD PTR [esi]
  414a8a:	cwde   
  414a8b:	gs jne 0x414a61
  414a8e:	and    eax,0x127331d3
  414a93:	jno    0x414ae2
  414a95:	pop    ebp
  414a96:	fsubr  DWORD PTR [ecx+edx*2+0x2d]
  414a9a:	adc    al,0xae
  414a9c:	in     eax,0xd0
  414a9e:	or     BYTE PTR [esi-0x5629fe8b],ch
  414aa4:	(bad)  
  414aa5:	or     al,0x6b
  414aa7:	xchg   esi,eax
  414aa8:	jns    0x414b27
  414aaa:	leave  
  414aab:	xlat   BYTE PTR ds:[ebx]
  414aac:	or     ch,BYTE PTR [eax-0x62]
  414aaf:	mov    ebp,0x6816fcf2
  414ab4:	xor    eax,0x447de194
  414ab9:	mov    ebp,0xe38436fb
  414abe:	push   es
  414abf:	pop    ebx
  414ac0:	ins    DWORD PTR es:[edi],dx
  414ac1:	(bad)  
  414ac2:	xor    al,ah
  414ac4:	sub    dh,al
  414ac6:	inc    esi
  414ac7:	mov    ebx,0x6223abe1
  414acc:	and    BYTE PTR [ebp+0x6069745b],0x81
  414ad3:	mov    dl,BYTE PTR ds:0xc2f4d463
  414ad9:	and    DWORD PTR [edi+esi*4],esi
  414adc:	in     eax,dx
  414add:	leave  
  414ade:	sub    eax,0xaf166b2b
  414ae3:	gs push ebp
  414ae5:	jb     0x414ae4
  414ae7:	sbb    dl,al
  414ae9:	mov    ecx,DWORD PTR [eax+0x17]
  414aec:	push   es
  414aed:	sub    dh,BYTE PTR [edx+0x55]
  414af0:	test   BYTE PTR [ebx],al
  414af2:	js     0x414a7d
  414af4:	fld    QWORD PTR [eax]
  414af6:	cmp    dl,ah
  414af8:	adc    BYTE PTR [ecx+0x76],ch
  414afb:	push   edx
  414afc:	fs pop ecx
  414afe:	mov    eax,gs:0x78eaa33e
  414b04:	arpl   WORD PTR [bx+di],di
  414b07:	jns    0x414af4
  414b09:	in     al,dx
  414b0a:	add    eax,0x7da8c8d2
  414b0f:	(bad)  
  414b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b11:	xchg   ebx,eax
  414b12:	out    0x28,eax
  414b14:	loopne 0x414aa7
  414b16:	xchg   ebx,ebx
  414b18:	arpl   WORD PTR [edx],ax
  414b1a:	pop    es
  414b1b:	daa    
  414b1c:	test   DWORD PTR [ebx+0x369179aa],0x6b742305
  414b26:	push   ecx
  414b27:	bound  esp,QWORD PTR [ebx+0x44]
  414b2a:	mov    esp,0x93a8ee2
  414b2f:	jmp    0x414b0c
  414b31:	jge    0x414b87
  414b33:	mov    ds:0x998c9a26,al
  414b38:	inc    esp
  414b39:	retf   
  414b3a:	lods   eax,DWORD PTR ds:[esi]
  414b3b:	sub    edx,DWORD PTR [eax+0x603736ea]
  414b41:	push   ecx
  414b42:	test   al,0xd1
  414b44:	mov    eax,0xfc14867a
  414b49:	sbb    eax,DWORD PTR [ebx-0x2f2ee3a2]
  414b4f:	xchg   BYTE PTR [edx-0x3a555bfa],dh
  414b55:	jl     0x414ba4
  414b57:	pop    edi
  414b58:	and    eax,DWORD PTR cs:[edi]
  414b5b:	sahf   
  414b5c:	mov    ebx,0x5dc0c796
  414b61:	mov    ah,0x4d
  414b63:	imul   edi,DWORD PTR ds:0xf2b5de9,0xfffffffb
  414b6a:	dec    ebp
  414b6b:	pushf  
  414b6c:	sbb    cl,BYTE PTR [ebp+0x46]
  414b6f:	rol    bh,1
  414b71:	xchg   ecx,eax
  414b72:	add    al,0xb9
  414b74:	mov    ecx,0x85825e02
  414b79:	dec    edi
  414b7a:	frstor [eax+0x27]
  414b7d:	jecxz  0x414bb6
  414b7f:	mov    ebp,0xee4b9c55
  414b84:	xor    esi,DWORD PTR [ebp-0x1b26b8dd]
  414b8a:	or     BYTE PTR [ebp-0x19c98d1c],0xfc
  414b91:	jne    0x414b3b
  414b93:	jnp    0x414b7d
  414b95:	mov    ah,0x30
  414b97:	fwait
  414b98:	stos   DWORD PTR es:[edi],eax
  414b99:	hlt    
  414b9a:	(bad)  
  414b9b:	js     0x414bec
  414b9d:	push   0x6b244ee4
  414ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ba3:	in     al,0xd9
  414ba5:	(bad)  
  414ba6:	test   edx,0xf151f74e
  414bac:	enter  0x240a,0x9a
  414bb0:	mov    dl,0xc1
  414bb2:	lds    esp,FWORD PTR [ebp-0x69]
  414bb5:	sbb    al,0xa2
  414bb7:	loope  0x414c09
  414bb9:	fsub   st,st(3)
  414bbb:	lods   al,BYTE PTR ds:[esi]
  414bbc:	adc    DWORD PTR [edi],esp
  414bbe:	mov    eax,ds:0x2289bc56
  414bc3:	loop   0x414be1
  414bc5:	adc    dl,0xd3
  414bc8:	pusha  
  414bc9:	sub    al,0x44
  414bcb:	push   ecx
  414bcc:	sbb    ebp,edi
  414bce:	add    eax,0x165c05a6
  414bd3:	repnz and DWORD PTR [eax],esi
  414bd6:	mov    cl,0x89
  414bd8:	pop    edx
  414bd9:	pop    edi
  414bda:	push   esi
  414bdb:	mov    al,0x78
  414bdd:	lods   eax,DWORD PTR ds:[esi]
  414bde:	pop    edx
  414bdf:	stos   DWORD PTR es:[edi],eax
  414be0:	cli    
  414be1:	xor    DWORD PTR [esi-0x21],ecx
  414be4:	jle    0x414be8
  414be6:	stc    
  414be7:	cmp    eax,0xe00251f7
  414bec:	popa   
  414bed:	xor    BYTE PTR ds:0x7c673173,bl
  414bf3:	dec    ecx
  414bf4:	fisttp DWORD PTR [edx]
  414bf6:	ins    BYTE PTR es:[edi],dx
  414bf7:	mov    ds:0x42a341be,al
  414bfc:	sub    bh,bh
  414bfe:	xchg   ebx,eax
  414bff:	int3   
  414c00:	add    dl,BYTE PTR gs:[edx-0x67]
  414c04:	(bad)  
  414c06:	lea    eax,[ebx+eax*4+0x5]
  414c0a:	imul   eax,ebx,0x1b8bf61
  414c10:	mov    ds,WORD PTR [ecx+0x59]
  414c13:	call   0x213fd135
  414c18:	xchg   esp,eax
  414c19:	out    0x8b,eax
  414c1b:	mov    al,0x2b
  414c1d:	js     0x414c3e
  414c1f:	in     al,dx
  414c20:	jo     0x414c34
  414c22:	imul   edi,DWORD PTR [eax+esi*4-0x1a],0x7b
  414c27:	xchg   DWORD PTR ss:[edi-0x54],edx
  414c2b:	xchg   bl,dh
  414c2d:	clc    
  414c2e:	jg     0x414c21
  414c30:	lds    esp,FWORD PTR [eax+eiz*1+0x5e]
  414c34:	imul   edx,DWORD PTR [bp+di],0x68
  414c38:	repnz adc ebx,ecx
  414c3b:	sbb    al,0x23
  414c3e:	and    ch,BYTE PTR [esi-0x567c3816]
  414c44:	xchg   DWORD PTR [ebx-0x25],eax
  414c47:	out    0x1f,al
  414c49:	outs   dx,BYTE PTR ds:[esi]
  414c4a:	jle    0x414bee
  414c4c:	fwait
  414c4d:	push   ds
  414c4e:	jbe    0x414bfe
  414c50:	cld    
  414c51:	ss dec esi
  414c53:	scas   eax,DWORD PTR es:[edi]
  414c54:	push   es
  414c55:	out    0x2c,al
  414c57:	mov    eax,cr0
  414c5a:	mov    esi,DWORD PTR [ebx-0x39cfa5d]
  414c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c61:	push   es
  414c62:	sub    DWORD PTR [esi-0x1b5457aa],ebx
  414c68:	sub    ch,bl
  414c6a:	xchg   ebx,eax
  414c6b:	inc    ebx
  414c6c:	iret   
  414c6d:	pop    DWORD PTR [esp+eiz*8+0x55]
  414c71:	retf   
  414c72:	add    eax,0x590563a7
  414c77:	or     eax,DWORD PTR [edx-0x328cb1c3]
  414c7d:	lods   al,BYTE PTR ds:[esi]
  414c7e:	test   al,0x75
  414c80:	aam    0xec
  414c82:	aaa    
  414c83:	fcomp  DWORD PTR [ebx+0x6b4ea0ef]
  414c89:	nop
  414c8a:	mov    BYTE PTR [ebx-0x30d2bcd8],dh
  414c90:	outs   dx,DWORD PTR ds:[esi]
  414c91:	dec    esp
  414c92:	scas   eax,DWORD PTR es:[edi]
  414c93:	scas   eax,DWORD PTR es:[edi]
  414c94:	rcr    al,cl
  414c96:	cli    
  414c97:	loopne 0x414c9d
  414c99:	add    bl,BYTE PTR [edi]
  414c9b:	and    bh,bh
  414c9d:	pushf  
  414c9e:	fld    DWORD PTR [esp+ecx*2-0x3f0d841c]
  414ca5:	rcr    DWORD PTR [eax-0x7e],1
  414ca8:	pop    ds
  414ca9:	stos   DWORD PTR es:[edi],eax
  414caa:	jmp    0x10e22b81
  414caf:	push   esi
  414cb0:	dec    esp
  414cb1:	push   ds
  414cb2:	jmp    0xbc2cef52
  414cb7:	mov    esp,0x929ef18f
  414cbc:	or     al,0xdc
  414cbe:	fwait
  414cbf:	stc    
  414cc0:	inc    edi
  414cc1:	call   0xaa22ba8d
  414cc6:	adc    eax,0xab8e3fdf
  414ccb:	push   esi
  414ccc:	es dec ecx
  414cce:	call   0xbfab:0xdc1c8832
  414cd5:	cli    
  414cd6:	cmc    
  414cd7:	jnp    0x414cdc
  414cd9:	pop    es
  414cda:	test   BYTE PTR [esp+eiz*8+0x750b8b4e],dh
  414ce1:	dec    ebx
  414ce2:	mov    bh,0xb7
  414ce4:	push   edx
  414ce5:	repnz popa 
  414ce7:	fimul  DWORD PTR [ebx]
  414ce9:	dec    ecx
  414cea:	dec    ebp
  414ceb:	out    dx,al
  414cec:	lahf   
  414ced:	pop    edx
  414cee:	repnz sub al,BYTE PTR [ecx+eax*1]
  414cf2:	ins    BYTE PTR es:[edi],dx
  414cf3:	pop    edx
  414cf4:	adc    al,0x92
  414cf6:	fiadd  DWORD PTR [ebp+0x64]
  414cf9:	test   esi,esi
  414cfb:	xchg   esi,eax
  414cfc:	das    
  414cfd:	xchg   edi,eax
  414cfe:	sbb    eax,0x75bd9afe
  414d03:	clc    
  414d04:	enter  0x288c,0xa2
  414d08:	mov    edx,DWORD PTR [ebp-0x5e]
  414d0b:	xchg   esi,eax
  414d0c:	mov    eax,ds:0xb95b6504
  414d11:	cmp    al,0xaa
  414d13:	jbe    0x414d15
  414d15:	ss mov bl,0x11
  414d18:	int    0xd9
  414d1a:	sbb    al,cl
  414d1c:	sub    DWORD PTR [edx*2-0xda2bf19],edx
  414d23:	or     BYTE PTR [eax],dh
  414d25:	outs   dx,DWORD PTR ds:[esi]
  414d26:	fs je  0x414d22
  414d29:	adc    edi,DWORD PTR ds:0x577d0bb0
  414d2f:	lea    ecx,[ebx-0x63]
  414d32:	mov    al,ds:0x77ca938d
  414d37:	push   0xffffffe8
  414d39:	imul   ebp,DWORD PTR [ebp-0x70659929],0x619db4c6
  414d43:	enter  0xbe69,0x4e
  414d47:	lods   eax,DWORD PTR ds:[esi]
  414d48:	adc    edx,esi
  414d4a:	xchg   esp,eax
  414d4b:	sbb    BYTE PTR [edx+esi*4+0x14719551],dl
  414d52:	out    0xd1,eax
  414d54:	mov    cl,0x56
  414d56:	imul   esp,DWORD PTR [edx+0x1ea7fc46],0xeac09d3e
  414d60:	mov    ah,BYTE PTR [ecx]
  414d62:	nop
  414d63:	or     al,0x49
  414d65:	xor    al,0x40
  414d67:	mov    ah,0xd
  414d69:	push   esi
  414d6a:	aam    0x30
  414d6c:	jno    0x414d5f
  414d6e:	das    
  414d6f:	mov    al,0x85
  414d71:	les    edx,FWORD PTR [ecx]
  414d73:	adc    esp,DWORD PTR [ecx-0x71254a18]
  414d79:	gs push 0xffffffb6
  414d7c:	cmp    al,0x35
  414d7e:	popa   
  414d7f:	test   DWORD PTR [esi-0x65],0xa7296101
  414d86:	sub    al,0x86
  414d88:	cdq    
  414d89:	nop
  414d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8b:	dec    eax
  414d8c:	(bad)  
  414d8d:	cwde   
  414d8e:	inc    esi
  414d8f:	(bad)  
  414d90:	mov    ch,0xaa
  414d92:	or     BYTE PTR [esi+0x341a64f],dl
  414d98:	repz lds ecx,FWORD PTR [esp+ecx*4-0x7d]
  414d9d:	fcom   st(2)
  414d9f:	add    DWORD PTR [esi+0x1],0x3a
  414da3:	stos   BYTE PTR es:[edi],al
  414da4:	aaa    
  414da5:	fcom   st(2)
  414da7:	loop   0x414df2
  414da9:	sbb    dh,BYTE PTR [edi-0x661b00c]
  414daf:	push   ecx
  414db0:	jecxz  0x414e04
  414db2:	loopne 0x414dfa
  414db4:	mov    ch,0x85
  414db6:	leave  
  414db7:	mul    esp
  414db9:	sbb    eax,0xb858dfda
  414dbe:	and    esp,DWORD PTR ds:0xd9e9a981
  414dc4:	call   0xf381a28
  414dc9:	into   
  414dca:	ins    BYTE PTR es:[edi],dx
  414dcb:	dec    esp
  414dcc:	pop    edi
  414dcd:	pop    ds
  414dce:	nop
  414dcf:	add    al,0xf9
  414dd1:	inc    edx
  414dd2:	jne    0x414de9
  414dd4:	loopne 0x414d9a
  414dd6:	fimul  WORD PTR [edx-0x2a6c4197]
  414ddc:	aaa    
  414ddd:	fldz   
  414ddf:	cmp    esp,DWORD PTR [edx-0x1e6b78bb]
  414de5:	mov    ch,0xc4
  414de7:	mov    DWORD PTR es:[ecx-0x3e],0x4ba056f1
  414def:	fldcw  WORD PTR [ecx*8+0x102d3ba2]
  414df6:	lahf   
  414df7:	or     al,0xea
  414df9:	and    DWORD PTR [eax+0x1f],ebx
  414dfc:	std    
  414dfd:	and    ebx,DWORD PTR [ebp+0x72]
  414e00:	push   ss
  414e01:	and    dl,bh
  414e03:	cs mov WORD PTR ds:[ecx+0x70bbc6ec],ss
  414e0b:	jo     0x414e1e
  414e0d:	cmp    eax,0xcd9f0516
  414e12:	gs retf 
  414e14:	jno    0x414e6a
  414e16:	es pop edx
  414e18:	sahf   
  414e19:	pop    ds
  414e1a:	push   esi
  414e1b:	xchg   ecx,eax
  414e1c:	stc    
  414e1d:	lock sahf 
  414e1f:	mov    edx,0x9e15fced
  414e24:	imul   ebx,DWORD PTR [ecx],0xd269bf69
  414e2a:	call   FWORD PTR [ebx]
  414e2c:	ror    BYTE PTR [edi-0x37cbb166],cl
  414e32:	xor    BYTE PTR [edi],ch
  414e34:	lods   eax,DWORD PTR ds:[esi]
  414e35:	fnstsw WORD PTR [edx+0x50]
  414e38:	cwde   
  414e39:	fst    DWORD PTR [eax]
  414e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3c:	jp     0x414e9f
  414e3e:	push   esi
  414e3f:	or     al,0xf6
  414e41:	aam    0xbc
  414e43:	(bad)  
  414e44:	jne    0x414e22
  414e46:	inc    edi
  414e47:	add    al,0xdf
  414e49:	(bad)  
  414e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4c:	cmp    al,0x1d
  414e4e:	dec    esp
  414e4f:	push   esi
  414e50:	out    dx,al
  414e51:	sbb    edi,DWORD PTR [esp+ebx*8+0x17]
  414e55:	sbb    DWORD PTR [ebx],ebx
  414e57:	retf   0xd488
  414e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5b:	jmp    0x414eb9
  414e5d:	and    WORD PTR [edx-0x44],0x2ad6
  414e63:	shl    BYTE PTR [ecx-0x26dcd14],1
  414e69:	stos   DWORD PTR es:[edi],eax
  414e6a:	sbb    eax,0xf387bc7d
  414e6f:	lds    eax,FWORD PTR [edx]
  414e71:	psraw  mm2,QWORD PTR [esi]
  414e74:	test   BYTE PTR [ecx],ah
  414e76:	aam    0xc
  414e78:	in     al,dx
  414e79:	out    dx,al
  414e7a:	xchg   edx,eax
  414e7b:	add    al,0x4b
  414e7e:	jnp    0x414e6d
  414e80:	ins    BYTE PTR es:[edi],dx
  414e81:	or     edx,DWORD PTR [ebp-0x30]
  414e84:	mov    cl,0x65
  414e86:	rcr    DWORD PTR [bp-0x58],0x4a
  414e8b:	cdq    
  414e8c:	je     0x414e55
  414e8e:	sub    cl,BYTE PTR [esi]
  414e90:	or     BYTE PTR [edi+0xb],ah
  414e93:	daa    
  414e94:	xor    eax,0x3abf69e4
  414e99:	out    0x8f,al
  414e9b:	adc    dh,dh
  414e9d:	mov    ds,WORD PTR [esi+edi*1+0x48b3a089]
  414ea4:	sbb    bl,al
  414ea6:	cld    
  414ea7:	iret   
  414ea8:	jne    0x414eb6
  414eaa:	out    0x37,al
  414eac:	scas   eax,DWORD PTR es:[edi]
  414ead:	mov    BYTE PTR [esi+0xce10596],bl
  414eb3:	or     eax,0x75
  414eb6:	retf   0xc6cc
  414eb9:	popa   
  414eba:	cmp    DWORD PTR [ecx+edx*1],0xaaf21bd8
  414ec1:	cmp    bl,BYTE PTR [ebp+ebp*1-0x20]
  414ec5:	xchg   edi,eax
  414ec6:	scas   al,BYTE PTR es:[edi]
  414ec7:	je     0x414e6f
  414ec9:	mov    bh,0xb4
  414ecb:	in     al,0x99
  414ecd:	repnz icebp 
  414ecf:	ja     0x414e6f
  414ed1:	sbb    dh,bh
  414ed3:	inc    edi
  414ed4:	hlt    
  414ed5:	xor    al,cl
  414ed7:	mov    ebp,0xd1bc0646
  414edc:	or     DWORD PTR [eax+ecx*8-0x48d64c01],esp
  414ee3:	lods   al,BYTE PTR ds:[esi]
  414ee4:	pop    eax
  414ee5:	push   ebp
  414ee6:	xchg   ebp,eax
  414ee7:	jp     0x414f59
  414ee9:	inc    esi
  414eea:	xor    ebx,DWORD PTR [eax]
  414eec:	aaa    
  414eed:	sub    eax,0xbb63d0e9
  414ef2:	jae    0x414e86
  414ef4:	pop    edi
  414ef5:	ud0    edx,DWORD PTR [ebx+ebx*8]
  414ef9:	jb     0x414f35
  414efb:	mov    eax,0x355fd5db
  414f00:	xor    dh,BYTE PTR [edx+0x24]
  414f03:	and    edx,eax
  414f05:	mov    DWORD PTR [eax+0x18ff4f0f],0xbffd5695
  414f0f:	and    al,0xc
  414f11:	mov    dl,cl
  414f13:	adc    al,0x74
  414f15:	ror    DWORD PTR ss:[edi+0xf],cl
  414f19:	(bad)  [ecx+0x7bc5f602]
  414f1f:	cwde   
  414f20:	lock mov bl,0xa8
  414f23:	mov    eax,ds:0xb64342d5
  414f28:	test   eax,0x8d66bad0
  414f2d:	add    DWORD PTR [ebx-0x34],edi
  414f30:	jg     0x414f6e
  414f32:	addr16 aam 0xd6
  414f35:	pop    ds
  414f36:	std    
  414f37:	pop    ebx
  414f38:	sahf   
  414f39:	fstp   DWORD PTR [edi]
  414f3b:	dec    eax
  414f3c:	in     eax,dx
  414f3d:	test   BYTE PTR [ebx+ebp*1+0x58],dl
  414f41:	test   DWORD PTR [ecx],0x1bdb2e83
  414f47:	cmc    
  414f48:	imul   eax,DWORD PTR [edi+eax*8-0x15f13f6b],0xffffffd9
  414f50:	mul    BYTE PTR [ebp-0xb78528d]
  414f56:	icebp  
  414f57:	adc    DWORD PTR ds:0xe26239ca,esi
  414f5d:	jge    0x414fad
  414f5f:	inc    ebx
  414f60:	in     al,dx
  414f61:	arpl   WORD PTR [ebx-0x4a],si
  414f64:	push   ecx
  414f65:	push   edx
  414f66:	mov    eax,ds:0x32ba35c8
  414f6b:	cmp    al,0xec
  414f6d:	retf   0xda62
  414f70:	cmp    dh,cl
  414f72:	push   0xffffffd5
  414f74:	fsub   QWORD PTR [eax-0x25]
  414f77:	loopne 0x414f4d
  414f79:	jge    0x414f21
  414f7b:	pop    edx
  414f7c:	mov    dh,0x53
  414f7e:	(bad)  
  414f80:	inc    edx
  414f81:	shl    DWORD PTR [ebp-0x3d],1
  414f84:	inc    eax
  414f85:	pop    esi
  414f86:	pop    esi
  414f87:	mov    ds:0xfc86110e,al
  414f8c:	rcl    bl,cl
  414f8e:	push   ebp
  414f8f:	fsubr  st,st(0)
  414f91:	sbb    al,0xf
  414f93:	adc    esp,DWORD PTR [edx-0xf2b6ba0]
  414f99:	jb     0x414fa7
  414f9b:	into   
  414f9c:	aam    0xab
  414f9e:	sbb    al,cl
  414fa0:	push   eax
  414fa1:	test   BYTE PTR [edx],dh
  414fa3:	scas   al,BYTE PTR es:[edi]
  414fa4:	dec    edi
  414fa5:	mov    dl,0x79
  414fa7:	call   0x92c:0x3bad8b41
  414fae:	mov    eax,ds:0x8f163d1b
  414fb3:	shl    BYTE PTR [edx-0x7e],1
  414fb6:	dec    ebp
  414fb7:	mov    esi,0x526d8a22
  414fbc:	mov    edi,0x8c1a2a7c
  414fc1:	pop    ss
  414fc2:	cdq    
  414fc3:	xor    DWORD PTR [edi-0x72],edx
  414fc6:	push   ebx
  414fc7:	xor    DWORD PTR [edx+0xf75b90],eax
  414fcd:	pushf  
  414fce:	(bad)  
  414fcf:	mul    DWORD PTR [ecx+0x71]
  414fd2:	call   0xcd4c:0x8bf79d8a
  414fd9:	jp     0x414f83
  414fdb:	push   ebp
  414fdc:	mov    bh,0xf3
  414fde:	call   0xd659:0x56b0ee49
  414fe5:	mov    dl,0xb9
  414fe7:	mov    ah,0xd3
  414fe9:	int    0x14
  414feb:	clc    
  414fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fed:	fsubp  st(6),st
  414fef:	hlt    
  414ff0:	mov    edi,0x2d4b0b0f
  414ff5:	sahf   
  414ff6:	sub    eax,0x55d2e1ee
  414ffb:	xchg   edi,eax
  414ffc:	and    ebx,esi
  414ffe:	push   cs
  414fff:	aaa    
  415000:	pop    eax
  415001:	popf   
  415002:	inc    esi
  415003:	or     BYTE PTR [ebx-0x69edb8ca],bl
  415009:	shr    DWORD PTR [ebx],cl
  41500b:	dec    ecx
  41500c:	mov    bh,0xcf
  41500e:	loop   0x415034
  415010:	in     eax,0xc8
  415012:	div    BYTE PTR [eax]
  415014:	dec    esi
  415015:	add    al,0x25
  415017:	pusha  
  415018:	ret    0xe26d
  41501b:	arpl   WORD PTR [eax+0x7c],ax
  41501e:	je     0x414fc9
  415020:	push   es
  415021:	lea    esi,[ecx+0x18]
  415024:	mov    ah,0x22
  415026:	and    al,ah
  415028:	lea    ecx,[eax+0x60f57db8]
  41502e:	sub    DWORD PTR [ecx],ecx
  415030:	xchg   esp,eax
  415031:	ror    esp,1
  415033:	shr    bh,1
  415035:	mov    dl,0xb4
  415037:	(bad)  
  415038:	xchg   edx,eax
  415039:	xor    al,0x6b
  41503b:	test   BYTE PTR [eax-0x5d],cl
  41503e:	inc    edi
  41503f:	call   0xa8fcb669
  415044:	xor    bl,al
  415046:	mov    ds:0x53604cf,al
  41504b:	ja     0x415081
  41504d:	daa    
  41504e:	and    al,0x80
  415050:	mov    bh,0x38
  415052:	mov    edx,DWORD PTR [esi-0x38f4f7d0]
  415058:	ins    DWORD PTR es:[edi],dx
  415059:	bswap  edx
  41505b:	call   0xb368:0x476e9576
  415062:	mov    al,0xd1
  415064:	stos   DWORD PTR es:[edi],eax
  415065:	test   eax,0xefde7b92
  41506a:	std    
  41506b:	or     DWORD PTR [edx],0x5866ad5
  415071:	inc    eax
  415072:	push   ebx
  415073:	pop    ebp
  415074:	imul   edx,DWORD PTR [edi],0xffffffad
  415077:	mov    al,ds:0xc591eb53
  41507c:	(bad)  
  41507d:	cmp    DWORD PTR [ecx+eax*2+0x4dc6f8bf],edi
  415084:	inc    ecx
  415085:	xor    ch,BYTE PTR [ecx+0x67]
  415088:	rcr    DWORD PTR [ebp+0x63be10f3],0xf7
  41508f:	jmp    0xaf3e5f70
  415094:	pop    es
  415095:	mov    bl,0x2a
  415097:	inc    esp
  415098:	je     0x4150a5
  41509a:	shr    BYTE PTR [esi-0x55],0x91
  41509e:	les    ebp,FWORD PTR [esi+0x4e1126ee]
  4150a4:	push   0xa8c3b642
  4150a9:	jno    0x41509a
  4150ab:	pushf  
  4150ac:	ror    DWORD PTR [ebx-0x80],0x73
  4150b0:	aaa    
  4150b1:	shr    BYTE PTR [ecx-0x24a386f7],1
  4150b7:	mov    ebx,DWORD PTR [ebp+0x58]
  4150ba:	dec    ecx
  4150bb:	inc    ebp
  4150bc:	div    BYTE PTR [edx+0x13]
  4150bf:	dec    ecx
  4150c0:	fld    QWORD PTR [eax+0x6f]
  4150c3:	push   edi
  4150c4:	or     dh,0x44
  4150c7:	(bad)  
  4150c8:	fisub  DWORD PTR [esi-0x6f]
  4150cb:	test   eax,0xbf98fa7e
  4150d0:	jnp    0x4150e5
  4150d2:	sub    DWORD PTR [ebx+0x50],esi
  4150d5:	jmp    0x8e5e4b52
  4150da:	icebp  
  4150db:	mov    ds:0xad8b4b48,eax
  4150e0:	mov    dh,0x53
  4150e2:	je     0x415136
  4150e4:	nop    DWORD PTR [esi-0x4f]
  4150e8:	or     eax,0x35e9dfcb
  4150ed:	into   
  4150ee:	xchg   DWORD PTR [esi-0x2c],esp
  4150f1:	jnp    0x4150f4
  4150f3:	cmp    eax,0x542a5cd1
  4150f8:	push   cs
  4150f9:	push   es
  4150fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150fb:	add    eax,0x41448d7f
  415100:	mov    ds:0x773a1f20,eax
  415105:	fadd   DWORD PTR [esi-0x74f47e31]
  41510b:	mov    DWORD PTR [ebp+0x1be706aa],edi
  415111:	scas   al,BYTE PTR es:[edi]
  415112:	mov    BYTE PTR [ebx],bl
  415114:	cmp    eax,0xa515204e
  415119:	or     DWORD PTR [ecx+0x5fd81607],ecx
  41511f:	or     bl,bl
  415121:	push   ss
  415122:	cwde   
  415123:	add    al,bl
  415125:	sbb    eax,DWORD PTR [eax]
  415127:	mov    DWORD PTR [edi-0x2],ebx
  41512a:	inc    ebx
  41512b:	mov    cl,0x88
  41512d:	inc    eax
  41512e:	push   ecx
  41512f:	imul   ebp,DWORD PTR [ebp-0x6bb4cf53],0x48
  415136:	push   ebx
  415137:	add    edx,DWORD PTR [ecx+esi*4+0xe06fc9f]
  41513e:	out    0x93,eax
  415140:	aas    
  415141:	imul   eax,ebp,0xa9d8c2a9
  415147:	jmp    0x1fb:0x39b32694
  41514e:	sahf   
  41514f:	adc    eax,0x5d8031bf
  415154:	mov    DWORD PTR [ebp+0x62e3d6b2],ecx
  41515a:	sbb    eax,0xeef420fb
  41515f:	sbb    eax,0xf3271319
  415164:	fwait
  415165:	sub    edi,DWORD PTR [edi]
  415167:	dec    esp
  415168:	pop    edi
  415169:	add    eax,0x383379bc
  41516e:	leave  
  41516f:	repz push esi
  415171:	int    0x93
  415173:	in     eax,0x9d
  415175:	out    dx,al
  415176:	pop    es
  415177:	pop    ecx
  415178:	aam    0x43
  41517a:	loopne 0x415192
  41517c:	sub    eax,0x57cc1028
  415181:	lods   al,BYTE PTR ds:[esi]
  415182:	mov    esp,0xef6c134
  415187:	adc    BYTE PTR [edx],0x5c
  41518a:	aam    0x2d
  41518c:	add    al,0x83
  41518e:	xchg   edi,eax
  41518f:	mov    ebp,esp
  415191:	dec    esp
  415192:	push   ebp
  415193:	ret    0xdedf
  415196:	mov    WORD PTR [eax+0x1c2a6ba9],ss
  41519c:	ficomp WORD PTR [edi]
  41519e:	jnp    0x4151e6
  4151a0:	fmulp  st(4),st
  4151a2:	inc    edx
  4151a3:	mov    BYTE PTR [ebx-0x59],dh
  4151a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a7:	add    BYTE PTR [esi+0x4a],cl
  4151aa:	call   0x6c518028
  4151af:	into   
  4151b0:	pop    eax
  4151b1:	xchg   ebx,eax
  4151b2:	popa   
  4151b3:	mov    bh,0x1c
  4151b5:	inc    edx
  4151b6:	jb     0x415155
  4151b8:	push   esp
  4151b9:	mov    bl,0xd
  4151bb:	in     al,0xd9
  4151bd:	pop    es
  4151be:	inc    edx
  4151bf:	sahf   
  4151c0:	jb     0x415207
  4151c2:	cmp    eax,0x78d658ae
  4151c7:	cmp    bh,bh
  4151c9:	retf   
  4151ca:	sbb    DWORD PTR [esi+eiz*1],esi
  4151cd:	fwait
  4151ce:	mov    dl,0x60
  4151d0:	adc    edx,DWORD PTR [edi-0x2f18e3a6]
  4151d6:	les    eax,FWORD PTR [ebp+0x2f]
  4151d9:	mov    bl,0x38
  4151db:	leave  
  4151dc:	jbe    0x41520d
  4151de:	adc    dl,BYTE PTR [edx]
  4151e0:	push   ecx
  4151e1:	jp     0x4151e1
  4151e3:	pushf  
  4151e4:	mov    WORD PTR [esi-0x8],ss
  4151e7:	add    cl,0x33
  4151ea:	add    BYTE PTR [edi-0x50],dl
  4151ed:	rcr    BYTE PTR ds:0xe40471e2,1
  4151f3:	mov    ebp,0xc480fe3f
  4151f8:	fimul  DWORD PTR [bp+di]
  4151fb:	sub    al,0x6f
  4151fd:	jmp    0x415272
  4151ff:	stos   DWORD PTR es:[edi],eax
  415200:	and    eax,0xeabd9170
  415205:	push   eax
  415206:	and    DWORD PTR [eax+0xeb98fea],0x2b
  41520d:	adc    edx,DWORD PTR [eax+eax*8]
  415210:	xchg   ecx,eax
  415211:	mov    eax,0x13ba1bef
  415216:	ss dec eax
  415218:	sahf   
  415219:	jmp    0x41522f
  41521b:	test   ecx,esp
  41521d:	push   ebp
  41521e:	fs scas al,BYTE PTR es:[edi]
  415220:	sbb    DWORD PTR [ebx+0x3b46f816],edx
  415226:	mov    cl,ah
  415228:	adc    DWORD PTR [edx+0x5d6551f8],edx
  41522e:	(bad)  
  41522f:	and    ch,BYTE PTR [esi+0x39787062]
  415235:	retf   0x81eb
  415238:	test   DWORD PTR [ebp+0x531bc064],esi
  41523e:	popa   
  41523f:	in     al,0xc
  415241:	jo     0x4152b8
  415243:	ret    0xf13a
  415246:	mov    ds:0xef64fd1d,al
  41524b:	jns    0x415266
  41524d:	jg     0x415289
  41524f:	dec    ecx
  415250:	push   0x383d8ea0
  415255:	or     ebx,edx
  415257:	push   ecx
  415258:	enter  0x2c9e,0xe1
  41525c:	out    0x69,eax
  41525e:	xor    DWORD PTR [eax-0x66],0x4ae1b5c7
  415265:	arpl   WORD PTR [edx+0x7a],sp
  415268:	xchg   esp,eax
  415269:	enter  0x32a,0xdd
  41526d:	imul   ebx,DWORD PTR [ebx],0xffffffa1
  415270:	add    al,BYTE PTR [esi+0x449f8d03]
  415276:	mov    esi,0x33471522
  41527b:	mov    al,0xbb
  41527d:	jle    0x415291
  41527f:	out    0x3f,al
  415281:	jo     0x4152d3
  415283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415284:	mov    al,0xb6
  415286:	jnp    0x41524c
  415288:	out    dx,eax
  415289:	into   
  41528a:	jmp    0x714f0ba0
  41528f:	fs cmp eax,eax
  415292:	jle    0x41521e
  415294:	add    bh,BYTE PTR [edx]
  415296:	pop    ss
  415297:	imul   edx,DWORD PTR [ebp+0x65],0x1e40bf7e
  41529e:	cmp    eax,esp
  4152a0:	jl     0x4152b9
  4152a2:	mov    edi,0x5661e441
  4152a7:	pop    eax
  4152a8:	push   esp
  4152a9:	scas   eax,DWORD PTR es:[edi]
  4152aa:	sbb    DWORD PTR [edi-0x3b7fdd15],esp
  4152b0:	sub    eax,0xb5494b43
  4152b5:	and    BYTE PTR [edx+0x13],0xa3
  4152b9:	imul   eax,DWORD PTR [ecx-0x153a86d8],0xe353e9c3
  4152c3:	unpcklps xmm1,XMMWORD PTR [esi-0x59]
  4152c7:	or     al,0xb6
  4152c9:	cmp    al,0xcf
  4152cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152cc:	push   eax
  4152cd:	jmp    DWORD PTR [ebx+edi*8-0x535bf09f]
  4152d4:	cld    
  4152d5:	fcmovnbe st,st(6)
  4152d7:	repz aam 0xa8
  4152da:	sub    DWORD PTR [edi+0x75],edi
  4152dd:	in     eax,0x83
  4152df:	push   ds
  4152e0:	sub    al,0x93
  4152e2:	in     eax,0x65
  4152e4:	ja     0x4152ec
  4152e6:	mov    bh,BYTE PTR [esi+ebp*1-0x22637216]
  4152ed:	inc    esp
  4152ee:	mov    edi,0x8d78027d
  4152f3:	jmp    0xf083:0x3c200c
  4152fa:	mov    dh,0xb8
  4152fc:	or     bl,bh
  4152fe:	fist   DWORD PTR [ebx-0x6d]
  415301:	push   esp
  415302:	xchg   ecx,eax
  415303:	push   eax
  415304:	mov    ebp,0xe1eae162
  415309:	sbb    cl,BYTE PTR [esi]
  41530b:	popa   
  41530c:	sub    BYTE PTR [ebp+0x7d],dh
  41530f:	leave  
  415310:	repnz and eax,0xaf24421a
  415316:	dec    ecx
  415317:	std    
  415318:	mov    esp,0x7fba0360
  41531d:	popa   
  41531e:	ins    DWORD PTR es:[edi],dx
  41531f:	sbb    eax,0x464d8148
  415325:	xor    ebx,edi
  415327:	jp     0x4152f8
  415329:	addr16 (bad) 
  41532b:	jmp    0x41537c
  41532d:	aad    0xb0
  41532f:	outs   dx,BYTE PTR ds:[esi]
  415330:	call   0x66afa3ba
  415335:	rcl    BYTE PTR [ecx],1
  415337:	lds    ebp,FWORD PTR [ebp-0x51d26e07]
  41533d:	out    0x3f,al
  41533f:	pusha  
  415340:	icebp  
  415341:	jb     0x4152f9
  415343:	jns    0x415351
  415345:	mov    esi,0x7f1e037f
  41534a:	ja     0x41538f
  41534c:	inc    esp
  41534d:	test   edx,edi
  41534f:	arpl   WORD PTR [edx+0x52],dx
  415352:	lds    ecx,FWORD PTR [esi]
  415354:	adc    edi,esp
  415356:	fdecstp 
  415358:	or     dl,BYTE PTR [ebp+0x73751436]
  41535e:	fnstenv [ecx]
  415360:	mov    edi,0x645d8c39
  415365:	fdivr  QWORD PTR [esi-0x7a]
  415368:	sub    al,0xa
  41536a:	or     ah,dh
  41536c:	adc    DWORD PTR [esi+ebx*2+0x4aa13329],edi
  415373:	in     al,dx
  415374:	cmp    BYTE PTR [eax-0x5f],al
  415377:	and    al,0xbd
  415379:	mov    dh,ch
  41537b:	rcl    dh,0xa2
  41537e:	int    0x7c
  415380:	and    DWORD PTR [edi],ebp
  415382:	jno    0x4153bc
  415384:	inc    edx
  415385:	ds push esi
  415387:	loope  0x415353
  415389:	retf   
  41538a:	cwde   
  41538b:	mov    eax,ds:0xcfa43464
  415390:	aas    
  415391:	(bad)  
  415392:	(bad)  
  415393:	stc    
  415394:	mov    bl,0x13
  415396:	sub    BYTE PTR [edx-0x40],bl
  415399:	out    0xdb,al
  41539b:	cld    
  41539c:	mov    ch,0xe1
  41539e:	xchg   DWORD PTR [edi-0x7c429c72],esp
  4153a4:	pushf  
  4153a5:	hlt    
  4153a6:	rcr    edi,0x77
  4153a9:	and    eax,0xf2e90324
  4153ae:	leave  
  4153af:	(bad)  
  4153b0:	jmp    0x41539b
  4153b2:	push   es
  4153b3:	std    
  4153b4:	test   BYTE PTR [ecx+ebx*4-0x7d],cl
  4153b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b9:	or     edx,0x40f82878
  4153bf:	xchg   edx,eax
  4153c0:	and    al,0x89
  4153c2:	jg     0x415359
  4153c4:	cdq    
  4153c5:	cmp    bl,al
  4153c7:	mov    dh,0xb
  4153c9:	xlat   BYTE PTR ds:[ebx]
  4153ca:	jnp    0x415368
  4153cc:	mov    ebx,0x6c58b831
  4153d1:	lahf   
  4153d2:	xchg   edi,eax
  4153d3:	adc    ebp,DWORD PTR [ebx+0x67]
  4153d6:	loop   0x415374
  4153d8:	cmp    dh,al
  4153da:	lock sar DWORD PTR [edx-0x62],1
  4153de:	dec    edx
  4153df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153e0:	sbb    al,ch
  4153e2:	mov    BYTE PTR [eax+edi*2-0x35],dl
  4153e6:	lods   eax,DWORD PTR ds:[esi]
  4153e7:	jmp    0x415458
  4153e9:	push   eax
  4153ea:	jns    0x41540e
  4153ec:	retf   0xe26f
  4153ef:	dec    ebx
  4153f0:	je     0x415460
  4153f2:	pop    esi
  4153f3:	sub    dh,BYTE PTR [ebx+0xc]
  4153f6:	jnp    0x415392
  4153f8:	mov    ebp,0xa628d0a7
  4153fd:	(bad)  
  4153fe:	outs   dx,DWORD PTR ds:[esi]
  4153ff:	popa   
  415400:	or     DWORD PTR [edi-0x6f2e5af6],edx
  415406:	test   al,0xc2
  415408:	sub    ebp,DWORD PTR [esi+0x7b]
  41540b:	out    dx,eax
  41540c:	(bad)  
  41540d:	icebp  
  41540e:	imul   esi,DWORD PTR [ebp-0x18],0xc20005bb
  415415:	aaa    
  415416:	(bad)  
  415417:	sbb    DWORD PTR [ecx+0x50],ebp
  41541a:	cmp    al,0x80
  41541c:	adc    esp,DWORD PTR [ebp+0x211fc5c7]
  415422:	push   esi
  415423:	repz inc esp
  415425:	(bad)  
  415426:	inc    DWORD PTR [ecx+0x1f508d05]
  41542c:	pop    ebp
  41542d:	loop   0x415475
  41542f:	adc    al,0xe
  415431:	fwait
  415432:	fs add al,0x12
  415435:	mov    eax,ds:0x9e4901b8
  41543a:	scas   eax,DWORD PTR es:[edi]
  41543b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41543c:	cli    
  41543d:	pop    cx
  41543f:	add    eax,0x250003ec
  415444:	stos   DWORD PTR es:[edi],eax
  415445:	and    ebx,DWORD PTR [edi]
  415447:	das    
  415448:	outs   dx,DWORD PTR ds:[esi]
  415449:	pop    ebx
  41544a:	xor    ebx,DWORD PTR [edi]
  41544c:	push   0x25
  41544e:	mov    ebp,0xd4c72393
  415453:	fs loop 0x4154ac
  415456:	daa    
  415457:	jns    0x415431
  415459:	icebp  
  41545a:	lods   eax,DWORD PTR ds:[esi]
  41545b:	jae    0x415479
  41545d:	push   ds
  41545e:	cs stc 
  415460:	inc    esi
  415461:	cmp    cl,BYTE PTR [eax+ebx*1+0x6a]
  415465:	pop    eax
  415466:	sbb    BYTE PTR [esi+ebx*2+0x37],cl
  41546a:	out    0x93,eax
  41546c:	addr16 out 0x27,al
  41546f:	shl    DWORD PTR [edx+0x18],0x53
  415473:	pushf  
  415474:	push   ss
  415475:	inc    esp
  415476:	add    DWORD PTR [ecx+0x62],esp
  415479:	(bad)  [esi-0xc0bcf35]
  41547f:	mul    DWORD PTR [ecx-0x3259fb9e]
  415485:	stos   BYTE PTR es:[edi],al
  415486:	mov    bh,0xc2
  415488:	inc    eax
  415489:	inc    edx
  41548a:	out    dx,al
  41548b:	fcom   DWORD PTR [ecx+ecx*2-0x1a]
  41548f:	pop    es
  415490:	data16 add al,BYTE PTR [edi+0x724e2a41]
  415497:	loopne 0x415508
  415499:	sbb    esi,ebp
  41549b:	cmp    al,0xcd
  41549d:	clc    
  41549e:	aad    0x11
  4154a0:	mul    DWORD PTR ds:0x5985e148
  4154a6:	inc    ebp
  4154a7:	ds add edi,0x71ec5eb3
  4154ae:	test   DWORD PTR [ecx-0x31],0xfa8e9c94
  4154b5:	xor    DWORD PTR [edi],esp
  4154b7:	(bad)  
  4154b8:	xor    esi,DWORD PTR [edi]
  4154ba:	cli    
  4154bb:	sbb    al,0xc3
  4154bd:	mov    ecx,0x2ad691b1
  4154c2:	(bad)  
  4154c3:	je     0x4154cf
  4154c5:	fucomip st,st(3)
  4154c7:	ds xchg ebp,eax
  4154c9:	xor    DWORD PTR [eax-0x69],0x5b
  4154cd:	mov    al,BYTE PTR [edi-0x6742636d]
  4154d3:	mov    ebp,0x70d717ce
  4154d8:	inc    ecx
  4154d9:	add    dh,dl
  4154db:	mov    bh,BYTE PTR [edx+eiz*2-0x37f9a825]
  4154e2:	fbstp  TBYTE PTR [ebx+0x3d]
  4154e5:	mov    dl,BYTE PTR [edx]
  4154e7:	loope  0x415492
  4154e9:	xchg   esp,eax
  4154ea:	mov    ebx,0x812f8aeb
  4154ef:	sahf   
  4154f0:	dec    edx
  4154f1:	popa   
  4154f2:	idiv   BYTE PTR [eax-0x6d]
  4154f5:	fidivr DWORD PTR [ebx-0x60fb21fd]
  4154fc:	mov    edx,fs
  4154fe:	sub    ah,bl
  415500:	jne    0x415496
  415502:	dec    eax
  415503:	push   ebx
  415504:	imul   esp,DWORD PTR [eax],0x717ce446
  41550a:	dec    ecx
  41550b:	sti    
  41550c:	mul    dh
  41550e:	fadd   QWORD PTR [ecx+0x5207e48e]
  415514:	add    al,0xf4
  415516:	bound  esp,QWORD PTR [ecx-0x4bb5f404]
  41551c:	pusha  
  41551d:	or     dh,BYTE PTR [ebp+edx*2-0xd]
  415521:	(bad)  
  415522:	std    
  415523:	iret   
  415524:	fwait
  415525:	ret    0x6480
  415528:	or     al,0xb5
  41552a:	xchg   ecx,eax
  41552b:	xchg   ebp,eax
  41552c:	shr    DWORD PTR [ecx-0x52],1
  41552f:	sub    eax,0xb3252ac
  415534:	jbe    0x4154d7
  415536:	js     0x41552f
  415538:	jle    0x41552c
  41553a:	ins    BYTE PTR es:[edi],dx
  41553b:	pop    eax
  41553c:	sbb    DWORD PTR [ecx-0x53a37941],edx
  415542:	and    esp,DWORD PTR ds:0x9370a423
  415548:	jnp    0x415563
  41554a:	add    BYTE PTR [eax-0x13dff802],0xde
  415551:	jne    0x41552b
  415553:	mov    ebx,0xeb570aec
  415558:	pop    edi
  415559:	test   eax,ebx
  41555b:	jge    0x41557a
  41555d:	aas    
  41555e:	add    cl,dh
  415560:	lds    esi,FWORD PTR [ecx]
  415562:	mov    esi,0x4e1372ca
  415567:	js     0x415560
  415569:	push   esp
  41556a:	xor    ch,BYTE PTR [edx]
  41556c:	ds push esi
  41556e:	les    eax,FWORD PTR [edx+ebp*1]
  415571:	jg     0x4155ae
  415573:	sahf   
  415574:	push   0x393ef8c
  415579:	repnz mov cl,0x6f
  41557c:	test   al,0x9b
  41557e:	test   BYTE PTR [ebx+0x63],al
  415581:	sub    ecx,DWORD PTR [eax]
  415583:	cwde   
  415584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415585:	jp     0x415541
  415587:	cmp    BYTE PTR [eax],ah
  415589:	fnstenv [edi+0x4e]
  41558c:	leave  
  41558d:	adc    BYTE PTR [esi+0x2262ca46],bl
  415593:	ds push cs
  415595:	inc    ecx
  415596:	aam    0xeb
  415598:	shr    BYTE PTR [esp-0x224e1a4e],1
  41559f:	fcomp  DWORD PTR [eax+0x2646440]
  4155a5:	outs   dx,DWORD PTR ds:[esi]
  4155a6:	xor    DWORD PTR [ecx],edi
  4155a8:	cmc    
  4155a9:	inc    edx
  4155aa:	imul   ecx,ebp,0x18bb3834
  4155b0:	mov    ebx,0x6cd22acf
  4155b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b6:	(bad)  
  4155b8:	inc    eax
  4155b9:	dec    ebx
  4155ba:	mov    edx,0xe6733c30
  4155bf:	stc    
  4155c0:	ror    DWORD PTR [ebx+0x11],1
  4155c3:	iret   
  4155c4:	push   ds
  4155c5:	dec    esp
  4155c6:	sbb    al,0xb5
  4155c8:	xor    ebx,DWORD PTR ds:0xd29ac604
  4155ce:	inc    ebp
  4155cf:	fidivr WORD PTR [ecx-0x14]
  4155d2:	cs jg  0x4155f3
  4155d5:	add    ecx,DWORD PTR [esi+0x7d3e30d1]
  4155db:	xor    eax,0xa185fa7
  4155e0:	mov    edx,0x32aab5ad
  4155e5:	iret   
  4155e6:	mov    DWORD PTR [esi+0x0],ecx
  4155e9:	fwait
  4155ea:	loope  0x41565f
  4155ec:	and    bl,BYTE PTR [esi+0x3a0864fc]
  4155f2:	mov    esp,0xbb19f94
  4155f7:	inc    esi
  4155f8:	add    eax,0x6d458061
  4155fd:	idiv   BYTE PTR [eax]
  4155ff:	inc    edx
  415600:	mov    dl,cl
  415602:	leave  
  415603:	jae    0x41560e
  415605:	(bad)  
  415606:	pop    ds
  415607:	jns    0x41563f
  415609:	sbb    BYTE PTR [ebx-0xa],bh
  41560c:	add    al,ah
  41560e:	mov    esi,0x2ecd2e15
  415613:	daa    
  415614:	scas   eax,DWORD PTR es:[edi]
  415615:	scas   eax,DWORD PTR es:[edi]
  415616:	or     BYTE PTR [edx-0x63],0x4f
  41561a:	adc    eax,0x9bb6d28b
  41561f:	outs   dx,BYTE PTR ds:[esi]
  415620:	aaa    
  415621:	cmp    eax,0x73204ace
  415626:	sbb    ecx,ebx
  415628:	(bad)  
  41562a:	repnz mov dl,0xee
  41562d:	in     eax,0x7c
  41562f:	xor    eax,0xbaac4682
  415634:	mov    ebp,0xc6f4003d
  415639:	ja     0x415672
  41563b:	adc    eax,0xe8f9c7db
  415640:	cld    
  415641:	pushw  ds
  415643:	dec    ebx
  415644:	push   eax
  415645:	cld    
  415646:	std    
  415647:	icebp  
  415648:	dec    ebx
  415649:	xor    eax,DWORD PTR [eax+0xda3ff1a]
  41564f:	jb     0x41565f
  415651:	and    DWORD PTR [eax],ebx
  415653:	imul   esi,DWORD PTR [esp+ebp*8],0x51767eca
  41565a:	dec    edx
  41565b:	ds cld 
  41565d:	push   ss
  41565e:	dec    ebx
  41565f:	loopne 0x4155fb
  415661:	adc    al,0x32
  415663:	mov    ds:0xf8bb6b2a,eax
  415668:	add    eax,eax
  41566a:	fsub   st,st(0)
  41566c:	push   ds
  41566d:	cmp    bh,BYTE PTR [ebp+ebp*4+0x50]
  415671:	shr    BYTE PTR [eax],0x80
  415674:	jno    0x4156d3
  415676:	inc    ecx
  415677:	js     0x4156db
  415679:	neg    DWORD PTR [esi+ebp*2]
  41567c:	push   ss
  41567d:	push   0xb2318e23
  415682:	outs   dx,BYTE PTR ds:[esi]
  415683:	sub    edi,ecx
  415685:	lock lock iret 
  415688:	data16 aaa 
  41568a:	sub    al,0xec
  41568c:	dec    esi
  41568d:	dec    edi
  41568e:	fimul  DWORD PTR [ebp-0x33b74e06]
  415694:	or     BYTE PTR [ebx-0xc],0xd8
  415698:	jmp    0x2fd4:0x8ec2f4b1
  41569f:	xchg   esi,eax
  4156a0:	sbb    eax,0x40c073a6
  4156a5:	sbb    DWORD PTR [edx-0x5a],edi
  4156a8:	push   0xc
  4156aa:	dec    edi
  4156ab:	fdiv   DWORD PTR [ebp+0xddb32cb]
  4156b1:	inc    eax
  4156b2:	imul   ecx,DWORD PTR [ecx+0x8],0x51
  4156b6:	xlat   BYTE PTR ds:[ebx]
  4156b7:	push   ss
  4156b8:	loop   0x4156c4
  4156ba:	xchg   ebx,eax
  4156bb:	mov    dl,BYTE PTR [esp+eax*8+0x459602eb]
  4156c2:	fisttp DWORD PTR [ebp-0x33]
  4156c5:	inc    eax
  4156c6:	rol    DWORD PTR [ebx-0x4d5d8c4],cl
  4156cc:	sub    edx,DWORD PTR [ebx]
  4156ce:	call   0x6a87681b
  4156d3:	cmp    eax,0x805bffd5
  4156d8:	fdivr  QWORD PTR [edx+0x5d]
  4156db:	loopne 0x415716
  4156dd:	xchg   bl,ah
  4156df:	cdq    
  4156e0:	sbb    cl,BYTE PTR [ecx]
  4156e2:	jmp    DWORD PTR [eax+0x1c628b85]
  4156e8:	int    0xd3
  4156ea:	fdiv   st,st(0)
  4156ec:	iret   
  4156ed:	imul   edi,DWORD PTR [esi+0x10236278],0xfffffff9
  4156f4:	out    0x0,eax
  4156f6:	aad    0x9b
  4156f8:	or     al,0x96
  4156fa:	mov    esp,0xded4d3be
  4156ff:	pop    esp
  415700:	mov    DWORD PTR [edi+eiz*8],ebp
  415703:	and    eax,0xeceb451
  415708:	mov    al,0x91
  41570a:	out    0xcd,eax
  41570c:	into   
  41570d:	imul   eax,DWORD PTR [ebp+0x47],0x53
  415711:	outs   dx,BYTE PTR ds:[esi]
  415712:	dec    edi
  415713:	xor    al,0xb7
  415715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415716:	mov    ds:0xdac644f8,eax
  41571b:	or     edx,ecx
  41571d:	aaa    
  41571e:	test   WORD PTR [edi],bp
  415721:	pop    ecx
  415722:	adc    BYTE PTR [ecx+0x7f157381],bl
  415728:	mov    dl,0xfd
  41572a:	jb     0x415711
  41572c:	scas   al,BYTE PTR es:[edi]
  41572d:	cmp    al,0xca
  41572f:	sub    ch,BYTE PTR [ebp+0x7fc6f9d5]
  415735:	icebp  
  415736:	ss inc ebp
  415738:	out    dx,al
  415739:	repz fisttp WORD PTR [ecx+eiz*1+0x3549b13]
  415741:	scas   al,BYTE PTR es:[edi]
  415742:	or     BYTE PTR [eax],dh
  415744:	test   eax,0x18501db6
  415749:	jnp    0x415774
  41574b:	std    
  41574c:	scas   eax,DWORD PTR es:[edi]
  41574d:	out    0xd5,eax
  41574f:	fcomp  QWORD PTR [ebp+0x7a]
  415752:	imul   esp,DWORD PTR [ebx+edi*4-0x4d],0x1a
  415757:	(bad)  
  415758:	mul    bl
  41575a:	sbb    bh,BYTE PTR [edi]
  41575c:	pop    ecx
  41575d:	jg     0x41579d
  41575f:	stos   DWORD PTR es:[edi],eax
  415760:	adc    edx,DWORD PTR [ecx]
  415762:	(bad)  
  415763:	mov    ds:0x300b5326,al
  415768:	and    DWORD PTR [eax-0x448a76b2],edi
  41576e:	cdq    
  41576f:	stos   DWORD PTR es:[edi],eax
  415770:	xchg   edi,eax
  415771:	jge    0x4157ad
  415773:	add    DWORD PTR [ebp+edx*2-0x583bf9d5],edi
  41577a:	mov    ebx,0x3aaf3435
  41577f:	mov    edi,0xdad3f2f7
  415784:	xor    bl,BYTE PTR [edi]
  415786:	fwait
  415787:	int    0xfa
  415789:	cmp    eax,0x52fa27a9
  41578e:	and    al,0x90
  415790:	outs   dx,BYTE PTR ds:[esi]
  415791:	cwde   
  415792:	sar    edx,0x36
  415795:	mov    ch,0xa8
  415797:	sbb    bh,bl
  415799:	mov    ebx,0x4f80312d
  41579e:	cmp    ecx,DWORD PTR [esi-0x4c6c4f08]
  4157a4:	pop    ecx
  4157a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a6:	in     al,0xc5
  4157a8:	sub    ebx,DWORD PTR [ecx+0x43c5221]
  4157ae:	xlat   BYTE PTR ds:[ebx]
  4157af:	enter  0xf321,0x57
  4157b3:	push   ss
  4157b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157b5:	mov    bl,0x9
  4157b7:	cmp    dl,dl
  4157b9:	xchg   ecx,eax
  4157ba:	pop    esi
  4157bb:	cld    
  4157bc:	loope  0x4157cd
  4157be:	and    ecx,DWORD PTR [ebx+edx*1-0x5a622405]
  4157c5:	jmp    0x18bb54de
  4157ca:	push   ebx
  4157cb:	outs   dx,DWORD PTR ds:[esi]
  4157cc:	es xor esp,0xffffffdf
  4157d0:	or     ebp,DWORD PTR [ecx]
  4157d2:	xor    eax,0xf59d4595
  4157d7:	and    ah,BYTE PTR [eax+0x1a1d7568]
  4157dd:	icebp  
  4157de:	adc    bh,bh
  4157e0:	(bad)  [edi-0x73]
  4157e3:	retf   0xd810
  4157e6:	mov    ebx,0x4745e732
  4157eb:	xchg   ecx,eax
  4157ec:	pushf  
  4157ed:	xor    ecx,ebx
  4157ef:	loop   0x41579c
  4157f1:	inc    ebp
  4157f2:	dec    ebp
  4157f3:	mov    al,0x59
  4157f5:	scas   eax,DWORD PTR es:[edi]
  4157f6:	out    0x93,eax
  4157f8:	push   esp
  4157f9:	mov    bl,0xa
  4157fb:	inc    ebx
  4157fc:	sub    DWORD PTR [esi],0xde88a00a
  415802:	cli    
  415803:	outs   dx,DWORD PTR ds:[esi]
  415804:	jp     0x4157c1
  415806:	jmp    0xd313:0x22deea7e
  41580d:	imul   ebp,DWORD PTR es:0x72dcabf3,0xc22cdabc
  415818:	call   0x574b:0xad7dab78
  41581f:	addr16 pop es
  415821:	push   ecx
  415822:	jg     0x41589c
  415824:	sub    al,0x6
  415826:	xor    al,0xfb
  415828:	cli    
  415829:	ins    BYTE PTR es:[edi],dx
  41582a:	clc    
  41582b:	xor    bh,BYTE PTR [eax+0x6e]
  41582e:	push   esi
  41582f:	scas   al,BYTE PTR es:[edi]
  415830:	cmc    
  415831:	mov    dl,0x7c
  415833:	cmc    
  415834:	adc    BYTE PTR [esi],dh
  415836:	sahf   
  415837:	int3   
  415838:	gs push ebp
  41583a:	mov    dl,0xbe
  41583c:	popf   
  41583d:	inc    ecx
  41583e:	jl     0x4157f7
  415840:	ja     0x415837
  415842:	std    
  415843:	pop    ecx
  415844:	mov    edx,0x989b98e8
  415849:	(bad)  
  41584a:	xlat   BYTE PTR ds:[ebx]
  41584b:	or     DWORD PTR [ecx],ecx
  41584d:	(bad)  
  41584e:	adc    ecx,DWORD PTR [ebp-0x445b15a2]
  415854:	xchg   edx,eax
  415855:	xor    edx,eax
  415857:	cmp    al,al
  415859:	(bad)  
  41585a:	adc    eax,0xc3fcc449
  41585f:	mov    edx,0x4513ce7c
  415864:	jo     0x41582b
  415866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415867:	sub    ecx,0x997ea2d0
  41586d:	sub    al,0x81
  41586f:	pop    edx
  415870:	fild   DWORD PTR [eax-0x34b26fb1]
  415876:	dec    eax
  415877:	jns    0x41583c
  415879:	pusha  
  41587a:	push   esi
  41587b:	test   al,0xef
  41587d:	iret   
  41587e:	test   eax,0xf476150f
  415883:	cli    
  415884:	lock mov cl,0xd0
  415887:	dec    ebp
  415888:	shl    DWORD PTR ds:0x881f7427,cl
  41588e:	loope  0x41590f
  415890:	adc    BYTE PTR [esp-0x20b4d901],bl
  415897:	pushf  
  415898:	add    DWORD PTR [esi-0x197d57ff],esi
  41589e:	or     al,0x47
  4158a0:	dec    edi
  4158a1:	call   0x6bcd:0x76f8bb23
  4158a8:	call   0x22375408
  4158ad:	add    cl,ch
  4158af:	popa   
  4158b0:	sbb    al,BYTE PTR [ebp+0x5e]
  4158b3:	sbb    bh,BYTE PTR [eax]
  4158b5:	loopne 0x415848
  4158b7:	or     DWORD PTR [esi-0x60],0xffffffc4
  4158bb:	dec    ebx
  4158bc:	sbb    eax,0x171504a4
  4158c1:	and    DWORD PTR [ebp-0x3f],edi
  4158c4:	or     BYTE PTR [esi],dl
  4158c6:	fadd   QWORD PTR [ebp+0x584e78b5]
  4158cc:	add    al,BYTE PTR [ebx]
  4158ce:	pop    esi
  4158cf:	das    
  4158d0:	push   ebx
  4158d1:	hlt    
  4158d2:	xchg   edi,eax
  4158d3:	inc    DWORD PTR [edi]
  4158d5:	das    
  4158d6:	cld    
  4158d7:	aam    0x99
  4158d9:	and    DWORD PTR [edx+0x1e8646ad],ebp
  4158df:	gs xchg ebp,eax
  4158e1:	push   ecx
  4158e2:	mov    DWORD PTR [ecx],ebp
  4158e4:	mov    BYTE PTR [ebx],dh
  4158e6:	push   0xffffffe2
  4158e8:	push   edx
  4158e9:	loopne 0x415903
  4158eb:	test   al,0xe9
  4158ed:	push   ecx
  4158ee:	inc    ebx
  4158ef:	mov    ds:0x4e5c62a7,eax
  4158f4:	ror    DWORD PTR [ebx],0x66
  4158f7:	xchg   DWORD PTR [edx-0x22113a2b],eax
  4158fd:	xor    al,0xf7
  4158ff:	cdq    
  415900:	ret    0x985c
  415903:	enter  0x4ce3,0x1e
  415907:	inc    edx
  415908:	mov    ebx,0xf5e714d1
  41590d:	push   0x30a38b48
  415912:	mov    ds:0x97229043,eax
  415917:	aas    
  415918:	inc    esp
  415919:	add    DWORD PTR [esi],esi
  41591b:	inc    esi
  41591c:	stc    
  41591d:	xchg   BYTE PTR [esi],dl
  41591f:	adc    ch,ch
  415921:	shr    ah,0xb
  415924:	xchg   edi,eax
  415925:	xchg   ebp,eax
  415926:	call   0x756f:0x5fe4c9ef
  41592d:	adc    DWORD PTR [ecx+0x20],edx
  415930:	mov    dh,0xe6
  415932:	add    DWORD PTR [ecx+eiz*4],ebx
  415935:	iret   
  415936:	sahf   
  415937:	fist   DWORD PTR [eax+ebx*2-0x3d]
  41593b:	cmp    eax,0x80e9e8d7
  415940:	jmp    0xb259:0xd02fafd3
  415947:	mov    ecx,0x2578cd74
  41594c:	in     eax,0x73
  41594e:	cld    
  41594f:	sbb    DWORD PTR [ecx],eax
  415951:	lods   eax,DWORD PTR ds:[esi]
  415952:	sbb    BYTE PTR [esi-0x29108ad8],dl
  415958:	xor    al,0xf0
  41595a:	jo     0x415960
  41595c:	(bad)  
  41595d:	sar    ecx,1
  41595f:	jle    0x41591f
  415961:	push   ss
  415962:	pop    esp
  415963:	jmp    0x4159e1
  415965:	jbe    0x41595e
  415967:	jge    0x415941
  415969:	push   0xffffffa8
  41596b:	cwde   
  41596c:	(bad)  
  41596e:	pop    es
  41596f:	push   ebp
  415970:	test   eax,0x134c021e
  415975:	mov    edx,0x28110e8a
  41597a:	mov    ch,BYTE PTR [ebx]
  41597c:	popf   
  41597d:	sbb    BYTE PTR [ebx+eiz*4+0x71],dl
  415981:	sti    
  415982:	dec    ebx
  415983:	mov    ch,0x3b
  415985:	jl     0x41595c
  415987:	int3   
  415988:	jbe    0x415994
  41598a:	cs xchg esp,eax
  41598c:	dec    eax
  41598d:	lea    esi,[ebp-0x34026af3]
  415993:	inc    BYTE PTR [ebx+edx*1-0xe]
  415997:	sub    bl,BYTE PTR [ebp+0x57]
  41599a:	inc    esi
  41599b:	pushf  
  41599c:	test   BYTE PTR [esi-0x35],dl
  41599f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a0:	mov    eax,0xce299398
  4159a5:	sub    al,ch
  4159a7:	cmp    BYTE PTR [edi],ch
  4159a9:	(bad)  
  4159aa:	jge    0x415a21
  4159ac:	in     eax,dx
  4159ad:	jbe    0x415970
  4159af:	jo     0x415a20
  4159b1:	push   ss
  4159b2:	ror    DWORD PTR [edi-0x24],1
  4159b5:	ror    BYTE PTR [ebp-0x7b],1
  4159b8:	jp     0x4159bd
  4159ba:	(bad)
  4159be:	pop    ebp
  4159bf:	sub    bh,BYTE PTR [ebx-0x49112baf]
  4159c5:	(bad)  
  4159c6:	ja     0x415953
  4159c8:	test   al,0xc5
  4159ca:	clc    
  4159cb:	sti    
  4159cc:	outs   dx,DWORD PTR ds:[esi]
  4159cd:	(bad)  
  4159ce:	mov    eax,0xe2616830
  4159d3:	mov    BYTE PTR [edx],dh
  4159d5:	jecxz  0x415985
  4159d7:	mov    ebx,DWORD PTR ds:0xc86755bd
  4159dd:	lea    edx,[eax]
  4159df:	mov    al,0x65
  4159e1:	dec    esp
  4159e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e3:	push   esp
  4159e4:	mov    edx,0x91e4c345
  4159e9:	sub    dh,ch
  4159eb:	hlt    
  4159ec:	or     bl,BYTE PTR [ebx-0x26]
  4159ef:	sahf   
  4159f0:	jns    0x415a0a
  4159f2:	pop    eax
  4159f3:	pop    edi
  4159f4:	fsubr  DWORD PTR [esi+0x116ce94b]
  4159fa:	xchg   edi,eax
  4159fb:	inc    esp
  4159fc:	dec    esp
  4159fd:	sub    bl,BYTE PTR [edx-0x13]
  415a00:	cmp    ch,BYTE PTR [esp+ebx*1-0x7d]
  415a04:	add    DWORD PTR [ecx+esi*4-0x4b1c2520],edi
  415a0b:	xchg   esi,eax
  415a0c:	lods   eax,DWORD PTR ds:[esi]
  415a0d:	shl    BYTE PTR [esi],cl
  415a0f:	or     dh,bh
  415a11:	cmp    ch,BYTE PTR [esi+0xa]
  415a14:	push   0xa07159c7
  415a19:	jl     0x415a3b
  415a1b:	pop    es
  415a1c:	sar    BYTE PTR [esi+ebx*2+0x338047c1],0x4a
  415a24:	stos   DWORD PTR es:[edi],eax
  415a25:	mov    ecx,0x1162aeee
  415a2a:	sub    eax,0x3a8b138f
  415a2f:	jg     0x415aa2
  415a31:	and    edx,eax
  415a33:	mov    eax,0x4e10822d
  415a38:	sar    BYTE PTR [edi+eiz*2],0xc6
  415a3c:	pop    ecx
  415a3d:	fbld   TBYTE PTR [edx]
  415a3f:	pop    ebx
  415a40:	mov    DWORD PTR [edi+eax*4],0x358d768c
  415a47:	jb     0x415a08
  415a49:	enter  0xee45,0x62
  415a4d:	(bad)  
  415a4e:	jae    0x415ac7
  415a50:	jge    0x415ace
  415a52:	call   0x8fae:0x7202cec8
  415a59:	dec    ebx
  415a5a:	sub    ch,BYTE PTR [eax+0x25]
  415a5d:	sbb    DWORD PTR [edx+edx*4],edx
  415a60:	push   edi
  415a61:	sbb    bh,0x7e
  415a64:	aam    0xe8
  415a66:	add    eax,0x12c760ef
  415a6b:	cmp    eax,0x2ce63431
  415a70:	cmp    DWORD PTR [eax*1+0x44e646d9],edi
  415a77:	scas   eax,DWORD PTR es:[edi]
  415a78:	push   cs
  415a79:	dec    edx
  415a7a:	loopne 0x415a9a
  415a7c:	jmp    0x93a1:0x12a165dc
  415a83:	mov    BYTE PTR [esi],cl
  415a85:	sub    cl,dl
  415a87:	cmp    edi,DWORD PTR [ecx+eax*1]
  415a8a:	lods   al,BYTE PTR ds:[esi]
  415a8b:	mov    al,0x8a
  415a8d:	jmp    0x4d65c8ea
  415a92:	jb     0x415a98
  415a94:	pop    esp
  415a95:	mov    dh,0x8f
  415a97:	nop
  415a98:	pop    esi
  415a99:	out    0xf,al
  415a9b:	inc    esi
  415a9c:	clc    
  415a9d:	scas   eax,DWORD PTR es:[edi]
  415a9e:	mov    ?,WORD PTR [eax]
  415aa0:	pop    esi
  415aa1:	test   al,0x5b
  415aa3:	(bad)  
  415aa4:	(bad)  
  415aa6:	mov    eax,0xa7ef9f85
  415aab:	xchg   ecx,eax
  415aac:	fiadd  WORD PTR [eax-0x53]
  415aaf:	cld    
  415ab0:	ins    DWORD PTR es:[edi],dx
  415ab1:	cmp    eax,0x101f8089
  415ab6:	dec    ebp
  415ab7:	push   esp
  415ab8:	stc    
  415ab9:	call   0x25f18bb9
  415abe:	adc    al,0xff
  415ac0:	in     eax,0x42
  415ac2:	nop
  415ac3:	shl    DWORD PTR [ecx-0x60c3a52a],cl
  415ac9:	jno    0x415a6a
  415acb:	sbb    al,0x16
  415acd:	cmp    DWORD PTR [edx-0x5bc9c4a6],ecx
  415ad3:	and    DWORD PTR [esi],ecx
  415ad5:	mov    cl,0x5a
  415ad7:	out    0x31,al
  415ad9:	pop    ebp
  415ada:	xor    DWORD PTR [edx],0x5f
  415add:	mov    ebp,0x186482ff
  415ae2:	pusha  
  415ae3:	xor    edx,0x6
  415ae6:	ss clc 
  415ae8:	das    
  415ae9:	sbb    esi,ecx
  415aeb:	push   eax
  415aec:	sete   BYTE PTR [edi-0x69]
  415af0:	adc    dl,BYTE PTR [ebx-0x78]
  415af3:	lea    edi,[ecx+0x33]
  415af6:	push   eax
  415af7:	adc    ch,bl
  415af9:	push   DWORD PTR [edx+0x75]
  415afc:	xor    eax,0x15290e2a
  415b01:	mov    al,0x5b
  415b03:	mov    esi,0xbc4633e8
  415b08:	mov    al,0xa1
  415b0a:	fst    DWORD PTR [ebp+0x41d8526e]
  415b10:	js     0x415b7e
  415b12:	stos   BYTE PTR es:[edi],al
  415b13:	loop   0x415ab5
  415b15:	jp     0x415b4f
  415b17:	mov    ebp,0xeec08faa
  415b1c:	or     eax,0x55421d30
  415b21:	add    ebx,esp
  415b23:	jb     0x415b06
  415b25:	xor    eax,0x40ceae15
  415b2a:	jle    0x415b8f
  415b2c:	pop    edi
  415b2d:	push   DWORD PTR [esi+0x15]
  415b30:	jno    0x415b7b
  415b32:	cmp    eax,0x2ea4849d
  415b37:	and    edi,esi
  415b39:	xlat   BYTE PTR ds:[ebx]
  415b3a:	fwait
  415b3b:	push   cs
  415b3c:	jb     0x415b43
  415b3e:	cmc    
  415b3f:	mov    edx,0x68e9deae
  415b44:	icebp  
  415b45:	in     al,dx
  415b46:	jne    0x415bba
  415b48:	dec    ebp
  415b49:	out    0xf6,al
  415b4b:	loope  0x415b56
  415b4d:	arpl   WORD PTR cs:[eax+0x4a5e5fc9],di
  415b54:	out    dx,al
  415b55:	push   es
  415b56:	frstor [edi]
  415b58:	dec    esp
  415b59:	leave  
  415b5a:	inc    ebx
  415b5b:	sbb    cl,ah
  415b5d:	in     eax,dx
  415b5e:	push   ecx
  415b5f:	push   ebp
  415b60:	ret    
  415b61:	pop    ecx
  415b62:	push   edx
  415b63:	and    eax,0xf45be0ad
  415b68:	lods   eax,DWORD PTR ds:[esi]
  415b69:	sub    eax,0x91c9dc6c
  415b6e:	in     eax,0xec
  415b70:	xor    edi,DWORD PTR ds:0x48313cc7
  415b76:	pop    edx
  415b77:	adc    bl,cl
  415b79:	rol    DWORD PTR [esi+0x3234933f],1
  415b7f:	and    eax,0xc07185fe
  415b84:	retf   
  415b85:	and    BYTE PTR [esi-0x40],dh
  415b88:	mov    ecx,DWORD PTR [edi+0x123554b1]
  415b8e:	jg     0x415b4d
  415b90:	icebp  
  415b91:	and    bl,bl
  415b93:	mov    esi,0x60f41f59
  415b98:	mov    eax,ds:0xb0cc2a80
  415b9d:	sti    
  415b9e:	jg     0x415c08
  415ba0:	pop    edi
  415ba1:	xor    dl,ah
  415ba3:	aad    0xa7
  415ba5:	test   al,0x42
  415ba7:	xor    bh,BYTE PTR [ecx]
  415ba9:	arpl   sp,bp
  415bab:	mov    bl,0x36
  415bad:	lods   eax,DWORD PTR ds:[esi]
  415bae:	idiv   ch
  415bb0:	popa   
  415bb1:	jmp    FWORD PTR [esi+0x51]
  415bb4:	daa    
  415bb5:	adc    eax,0xb1d6626c
  415bba:	(bad)  
  415bbc:	stos   BYTE PTR es:[edi],al
  415bbd:	outs   dx,DWORD PTR ds:[esi]
  415bbe:	add    dh,BYTE PTR [edi]
  415bc0:	cmp    eax,0x5dfa8635
  415bc5:	mov    ds:0x5bb8ba7f,eax
  415bca:	outs   dx,BYTE PTR ds:[esi]
  415bcb:	mov    edx,eax
  415bcd:	cmp    cl,BYTE PTR [eax+0x39]
  415bd0:	pop    ds
  415bd1:	jp     0x415bd7
  415bd3:	loope  0x415b5e
  415bd5:	dec    ebp
  415bd6:	stc    
  415bd7:	rcl    DWORD PTR [eax+0x1b044169],cl
  415bdd:	bound  edx,QWORD PTR [ecx-0x3d]
  415be0:	mov    esp,0xc978fd0a
  415be5:	adc    al,0x9a
  415be7:	pop    ecx
  415be8:	cvtps2pd xmm6,QWORD PTR [ebx+0x3f]
  415bec:	jle    0x415b9a
  415bee:	dec    edi
  415bef:	dec    esp
  415bf0:	push   esi
  415bf1:	jb     0x415b7e
  415bf3:	and    DWORD PTR ds:0x88a47855,esi
  415bf9:	and    al,0xd3
  415bfb:	xchg   ebx,eax
  415bfc:	sbb    DWORD PTR ds:0xb69f4239,edi
  415c02:	fwait
  415c03:	mov    ebp,0x8b984ab0
  415c08:	pop    edi
  415c09:	imul   esp,ebx,0xe973c9f8
  415c0f:	addr16 lahf 
  415c11:	(bad)  
  415c13:	rcr    DWORD PTR [ebx],cl
  415c15:	mov    WORD PTR [ebx],es
  415c17:	cmc    
  415c18:	arpl   WORD PTR [ebp+esi*2-0x40],di
  415c1c:	push   cs
  415c1d:	loop   0x415c2e
  415c1f:	cwde   
  415c20:	lods   eax,DWORD PTR ds:[esi]
  415c21:	outs   dx,DWORD PTR ds:[esi]
  415c22:	data16 sbb BYTE PTR [edi+0x50],ch
  415c26:	xor    BYTE PTR [ecx+edi*4],dl
  415c29:	stos   DWORD PTR es:[edi],eax
  415c2a:	inc    edx
  415c2b:	call   0x15e6:0x4663a48e
  415c32:	mov    ah,0x3a
  415c34:	cdq    
  415c35:	mov    esp,0xb192b2d2
  415c3a:	sbb    DWORD PTR [ebx],ecx
  415c3c:	add    ch,BYTE PTR ds:0xf9a07db
  415c42:	xchg   DWORD PTR [esi+0x47a80d44],ebx
  415c48:	jne    0x415c6d
  415c4a:	ds sbb eax,0xcde7b854
  415c50:	test   DWORD PTR [eax+0x174a21b4],ecx
  415c56:	int    0x1d
  415c58:	xchg   edx,eax
  415c59:	inc    ebx
  415c5a:	or     BYTE PTR [ebp-0x1191d5c],cl
  415c60:	leave  
  415c61:	aam    0x9a
  415c63:	mov    ah,0x2a
  415c65:	pop    edi
  415c66:	mov    dl,BYTE PTR [edi+0x19]
  415c69:	repz ret 
  415c6b:	popf   
  415c6c:	jmp    0x415c82
  415c6e:	ret    0x4b56
  415c71:	push   eax
  415c72:	xchg   esi,eax
  415c73:	ins    DWORD PTR es:[edi],dx
  415c74:	(bad)  
  415c75:	in     eax,dx
  415c76:	xchg   BYTE PTR ds:0xf02d543d,bl
  415c7c:	jne    0x415ceb
  415c7e:	inc    ebx
  415c7f:	(bad)  
  415c80:	mov    esp,0xd36da4df
  415c85:	xlat   BYTE PTR ds:[ebx]
  415c86:	push   0x424d7cc7
  415c8b:	mov    ebp,0x39abe642
  415c90:	dec    eax
  415c91:	mov    dh,0xcb
  415c93:	jp     0x415c25
  415c95:	push   es
  415c96:	inc    edx
  415c97:	push   ss
  415c98:	stos   DWORD PTR es:[edi],eax
  415c99:	cdq    
  415c9a:	lods   eax,DWORD PTR ds:[esi]
  415c9b:	dec    esi
  415c9c:	cmp    DWORD PTR [esi+ebx*4+0x1f0e3a51],0xae402225
  415ca7:	test   BYTE PTR [edx+0x6e8db7fc],cl
  415cad:	cmp    cl,bh
  415caf:	mov    eax,0x106c4255
  415cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cb5:	int3   
  415cb6:	sti    
  415cb7:	xchg   ecx,eax
  415cb8:	shr    ebx,1
  415cba:	xor    DWORD PTR [ebp-0x5b],0xb1cd623b
  415cc1:	fsub   DWORD PTR [eax-0x4ca79ebb]
  415cc7:	pushf  
  415cc8:	imul   esi,edi,0xffffffd8
  415ccb:	sbb    dl,BYTE PTR [esi+0xf016425]
  415cd1:	popf   
  415cd2:	test   DWORD PTR [ebx+0x1a],esp
  415cd5:	imul   ebp,DWORD PTR [esi],0x49cd3347
  415cdb:	jbe    0x415d44
  415cdd:	imul   ebp,DWORD PTR ds:0x63b4ef6e,0xe419220a
  415ce7:	mov    WORD PTR [ebp-0x922dda1],fs
  415ced:	adc    eax,0xca2245b0
  415cf2:	imul   esi,DWORD PTR [edi],0xd8a445ec
  415cf8:	(bad)  
  415cf9:	cmp    al,0x23
  415cfb:	cdq    
  415cfc:	cli    
  415cfd:	cli    
  415cfe:	es mov dh,0x49
  415d01:	adc    ah,BYTE PTR ds:0x1621053d
  415d07:	xor    edx,0xfd6de3e9
  415d0d:	arpl   WORD PTR [ebx-0x35],cx
  415d10:	push   ss
  415d11:	and    al,0x22
  415d13:	push   eax
  415d14:	mov    bh,0x2f
  415d16:	and    eax,0x663ad6c0
  415d1b:	push   cs
  415d1c:	mov    ecx,0x69863154
  415d21:	jno    0x415cb9
  415d23:	sub    DWORD PTR [eax],eax
  415d25:	(bad)  
  415d26:	ins    BYTE PTR es:[edi],dx
  415d27:	ins    DWORD PTR es:[edi],dx
  415d28:	add    eax,0x656522cd
  415d2d:	mov    ecx,0xe2b820ab
  415d32:	inc    ebx
  415d33:	loop   0x415da6
  415d35:	inc    esp
  415d36:	adc    edx,DWORD PTR [esi]
  415d38:	shl    BYTE PTR [ecx+0x48adea54],1
  415d3e:	stos   DWORD PTR es:[edi],eax
  415d3f:	and    DWORD PTR [eax-0x514be293],0xc2e22e4f
  415d49:	jmp    0x415d14
  415d4b:	dec    edi
  415d4c:	ret    
  415d4d:	retf   
  415d4e:	pop    esi
  415d4f:	dec    esp
  415d50:	mov    cs,WORD PTR [esi-0x498c438c]
  415d56:	test   eax,0xec2bc796
  415d5b:	pop    ebp
  415d5c:	mov    eax,0x3e9279a7
  415d61:	mov    ebp,0xc8ab3c9
  415d66:	jno    0x415cf6
  415d68:	inc    eax
  415d69:	mov    ecx,0xd8917562
  415d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d6f:	inc    esp
  415d70:	cmp    eax,0x918dfe8c
  415d75:	imul   edi,DWORD PTR [esi+0x39],0x1d6b8a0
  415d7c:	ja     0x415dfa
  415d7e:	and    esp,0xffffffb6
  415d81:	xor    al,0x4e
  415d83:	xchg   BYTE PTR [eax+esi*4],cl
  415d86:	repz adc bl,ah
  415d89:	imul   eax,DWORD PTR [ebx-0x13],0x15
  415d8d:	jnp    0x415dc8
  415d8f:	out    dx,eax
  415d90:	push   ecx
  415d91:	out    0xb6,eax
  415d93:	fld    DWORD PTR [edx]
  415d95:	into   
  415d96:	pop    edi
  415d97:	ret    0x7053
  415d9a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d9c:	sbb    esi,DWORD PTR [ecx+0xa6fe441]
  415da2:	std    
  415da3:	pop    esp
  415da4:	in     al,dx
  415da5:	add    bh,BYTE PTR [eax-0x4b]
  415da8:	push   edi
  415da9:	rcr    DWORD PTR [esi+0x25],cl
  415dac:	fist   DWORD PTR [edx]
  415dae:	push   cs
  415daf:	ret    
  415db0:	rcr    ah,1
  415db2:	mov    ebp,0x992105b3
  415db7:	ror    DWORD PTR [eax],0x9a
  415dba:	lods   al,BYTE PTR ds:[esi]
  415dbb:	nop
  415dbc:	mov    ebp,0x7cb36523
  415dc1:	sub    BYTE PTR [eax],bh
  415dc3:	pop    esp
  415dc4:	add    DWORD PTR [esi+ebx*1+0x5],esi
  415dc8:	rcr    edi,1
  415dca:	mov    DWORD PTR [edx+0x6b],edi
  415dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dce:	and    DWORD PTR [edi+0x66647e30],ebx
  415dd4:	pusha  
  415dd5:	fldcw  WORD PTR [ebp+0x6e]
  415dd8:	scas   eax,DWORD PTR es:[edi]
  415dd9:	leave  
  415dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ddb:	loopne 0x415d5f
  415ddd:	jno    0x415dd5
  415ddf:	in     eax,0xfe
  415de1:	mov    esi,0xd47072fe
  415de6:	or     eax,0x5324e293
  415deb:	push   ebx
  415dec:	xlat   BYTE PTR ds:[ebx]
  415ded:	add    edi,esi
  415def:	lahf   
  415df0:	hlt    
  415df1:	jge    0x415e31
  415df3:	xchg   BYTE PTR [eax+0x50481db],ah
  415df9:	fistp  WORD PTR [esi]
  415dfb:	adc    dh,ch
  415dfd:	mov    BYTE PTR [ecx+0x32],bl
  415e00:	ins    DWORD PTR es:[edi],dx
  415e01:	sbb    bh,bl
  415e03:	iret   
  415e04:	jnp    0x415de5
  415e06:	mov    al,0x16
  415e08:	jb     0x415e5c
  415e0a:	mov    bh,0x14
  415e0c:	or     al,bl
  415e0e:	push   esi
  415e0f:	arpl   WORD PTR [ebp+ecx*1-0x2],cx
  415e13:	or     al,0x4e
  415e15:	les    ebx,FWORD PTR [eax]
  415e17:	jae    0x415e3f
  415e19:	in     al,dx
  415e1a:	and    al,BYTE PTR [esi+0x5]
  415e1d:	aaa    
  415e1e:	inc    edi
  415e1f:	sub    edi,DWORD PTR [eax+eiz*4+0xf]
  415e23:	push   0xc53fed3a
  415e28:	fiadd  DWORD PTR [edi+ecx*1+0x62224fff]
  415e2f:	mov    WORD PTR [ecx+edx*2-0x8],cs
  415e33:	les    esi,FWORD PTR [eax+esi*2+0x772e2d38]
  415e3a:	test   ebp,0x6d4b8da5
  415e40:	xchg   esi,eax
  415e41:	cmp    eax,0x8555986
  415e46:	js     0x415ec1
  415e48:	aam    0x1
  415e4a:	mov    dh,0x5
  415e4c:	mov    ch,0x98
  415e4e:	mov    ecx,0xd5c0cdba
  415e53:	(bad)  
  415e54:	cmp    eax,0xe5683601
  415e59:	push   ebp
  415e5a:	jnp    0x415e9f
  415e5c:	mov    dl,0x56
  415e5e:	mov    edi,0x2fd9241
  415e63:	test   eax,0xb679e11c
  415e68:	and    cl,al
  415e6a:	jecxz  0x415e36
  415e6c:	adc    BYTE PTR [edi-0x7e],bl
  415e6f:	lock call 0x19b5:0x80f9d9c
  415e77:	pop    ds
  415e78:	outs   dx,DWORD PTR ds:[esi]
  415e79:	adc    BYTE PTR [ebx+0x75],dh
  415e7c:	pop    edi
  415e7d:	jp     0x415ecf
  415e7f:	call   0x4e0d:0x5ae63a41
  415e86:	mov    esp,0x838548a2
  415e8b:	inc    eax
  415e8c:	data16 fnstsw WORD PTR [eax]
  415e8f:	inc    edi
  415e90:	mov    ch,0xcf
  415e92:	mov    ch,0x6f
  415e94:	mov    ebp,0x8d393065
  415e99:	je     0x415e56
  415e9b:	outs   dx,BYTE PTR ds:[esi]
  415e9c:	mov    dl,BYTE PTR [eax+0x7e]
  415e9f:	aad    0x8c
  415ea1:	sub    dh,ah
  415ea3:	xor    BYTE PTR [edi-0x48b4b44c],bl
  415ea9:	or     esi,DWORD PTR [eax-0x63]
  415eac:	cwde   
  415ead:	ss std 
  415eaf:	scas   eax,DWORD PTR es:[edi]
  415eb0:	xchg   edi,eax
  415eb1:	fadd   QWORD PTR [ebp-0x59]
  415eb4:	cdq    
  415eb5:	iret   
  415eb6:	in     al,0xb2
  415eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eb9:	fbld   TBYTE PTR [ecx]
  415ebb:	mov    cs,WORD PTR [edx-0x62]
  415ebe:	jmp    0x879a:0x99db5f2d
  415ec5:	nop
  415ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec7:	add    BYTE PTR [ecx+0x52b3f48d],ah
  415ecd:	daa    
  415ece:	jge    0x415f3f
  415ed0:	adc    edi,DWORD PTR [ecx+0x20fb20bb]
  415ed6:	jb     0x415eb8
  415ed8:	or     al,0xf9
  415eda:	mov    ebp,0xb1dc9c15
  415edf:	je     0x415e68
  415ee1:	retf   0x83ef
  415ee4:	jo     0x415e84
  415ee6:	(bad)  
  415ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee8:	(bad)
  415eec:	mov    ds:0xe25f41d6,al
  415ef1:	and    DWORD PTR [ebx-0x720695cf],0xb75b6969
  415efb:	mov    dl,0x89
  415efd:	xchg   edi,eax
  415efe:	sub    esp,ebx
  415f00:	test   DWORD PTR [edi-0x60],esi
  415f03:	mov    ds:0xb179ea73,eax
  415f08:	cmp    DWORD PTR [eax],esp
  415f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0b:	stc    
  415f0c:	shl    DWORD PTR [ebx],cl
  415f0e:	retf   
  415f0f:	or     ecx,esp
  415f11:	dec    edx
  415f12:	imul   DWORD PTR [edi*4-0x1f7ce556]
  415f19:	xchg   esp,eax
  415f1a:	pop    ss
  415f1b:	rol    DWORD PTR [esi-0x5d],cl
  415f1e:	jp     0x415ece
  415f20:	out    0x62,eax
  415f22:	cld    
  415f23:	add    DWORD PTR [eax],edi
  415f25:	shr    BYTE PTR [edi+0x334367a3],1
  415f2b:	and    al,0xc
  415f2d:	mov    ebp,0xd7d0a4aa
  415f32:	mov    esi,0x6ae77601
  415f37:	mov    al,0x68
  415f39:	sub    BYTE PTR [ebp+0x6deeb2a6],bh
  415f3f:	sbb    edx,DWORD PTR [ebx-0x5ff65c31]
  415f45:	dec    esp
  415f46:	retf   0x2904
  415f49:	(bad)  
  415f4a:	xor    eax,0xc5168c76
  415f4f:	and    dh,BYTE PTR [eax+0x33]
  415f52:	(bad)  
  415f53:	mov    ebp,0x31768431
  415f58:	cmp    DWORD PTR ds:0xc4e90747,esi
  415f5e:	xor    BYTE PTR [bx+di],bl
  415f61:	arpl   WORD PTR [ebx-0x1f],bx
  415f64:	cmp    dh,bl
  415f66:	cld    
  415f67:	enter  0x2098,0x9d
  415f6b:	push   edx
  415f6c:	scas   eax,DWORD PTR es:[edi]
  415f6d:	int3   
  415f6e:	out    dx,al
  415f6f:	(bad)  
  415f71:	scas   eax,DWORD PTR es:[edi]
  415f72:	shr    dl,0xf8
  415f75:	in     eax,0x12
  415f77:	rcr    BYTE PTR [esi-0x1585c851],0xf
  415f7e:	loope  0x415fee
  415f80:	and    BYTE PTR [edi-0x3a],0x2
  415f84:	int3   
  415f85:	inc    ecx
  415f86:	sub    bh,BYTE PTR [esp+ebx*1+0x1fd0012d]
  415f8d:	imul   esp,DWORD PTR [ebp+0x56]
  415f91:	xor    ecx,DWORD PTR [ebx+eax*2]
  415f94:	sub    eax,0xf2b9972f
  415f99:	aaa    
  415f9a:	xchg   esi,eax
  415f9b:	mov    edx,0x139ae99e
  415fa0:	fisttp QWORD PTR [ecx-0x361df67d]
  415fa6:	aam    0x2b
  415fa8:	ror    DWORD PTR [esi+0x792352fa],1
  415fae:	fcom   DWORD PTR ds:0x48504248
  415fb4:	cli    
  415fb5:	je     0x416006
  415fb7:	mov    esp,0xdae3dbed
  415fbc:	add    DWORD PTR [esi-0x4a],eax
  415fbf:	xor    ecx,DWORD PTR [ebx+0x6ec6c641]
  415fc5:	xchg   ebx,eax
  415fc6:	ins    BYTE PTR es:[edi],dx
  415fc7:	lahf   
  415fc8:	test   al,0x8a
  415fca:	fdiv   DWORD PTR [ebx-0x39]
  415fcd:	lods   al,BYTE PTR ds:[esi]
  415fce:	mov    edx,0xbb466b43
  415fd3:	rol    ebp,cl
  415fd5:	sub    eax,eax
  415fd7:	shr    BYTE PTR [edx+ebx*8-0x2ffb8e75],cl
  415fde:	dec    ebx
  415fdf:	mov    edi,eax
  415fe1:	push   ecx
  415fe2:	push   esp
  415fe3:	xchg   dh,bl
  415fe5:	sub    eax,0xff9e11b1
  415fea:	xor    BYTE PTR [edi+0x2d],bl
  415fed:	dec    eax
  415fee:	cmp    bh,BYTE PTR [ebp-0x4c42424d]
  415ff4:	aaa    
  415ff5:	fwait
  415ff6:	mov    bl,0x69
  415ff8:	dec    edx
  415ffa:	popa   
  415ffb:	mov    edi,0x82ca9f1
  416000:	(bad)  
  416001:	aas    
  416002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416003:	push   esi
  416004:	addr16 dec esi
  416006:	xor    BYTE PTR [edi-0x45],ah
  416009:	or     DWORD PTR [ecx+0x5113774d],ebp
  41600f:	or     ebx,DWORD PTR [edx]
  416011:	sbb    al,0x43
  416013:	in     eax,0x7b
  416015:	push   ebx
  416016:	stc    
  416017:	xor    eax,esp
  416019:	cmp    BYTE PTR [edi],al
  41601b:	fdiv   QWORD PTR [edx-0x32]
  41601e:	scas   al,BYTE PTR es:[edi]
  41601f:	out    dx,al
  416020:	mov    esi,0x1ac78264
  416025:	ds shr BYTE PTR cs:[ebx-0x6e],cl
  41602a:	mov    al,ds:0x7ebe1ec9
  41602f:	cmp    DWORD PTR [edi-0x4c],ecx
  416032:	outs   dx,BYTE PTR ds:[esi]
  416033:	std    
  416034:	(bad)  
  416035:	lods   al,BYTE PTR ds:[esi]
  416036:	sbb    DWORD PTR [edi-0x2d7ee9ca],esi
  41603c:	not    DWORD PTR [ebp+eax*4-0x4e794a13]
  416043:	test   eax,0x43d876cd
  416048:	sub    al,0x44
  41604a:	test   al,0xf1
  41604c:	dec    ecx
  41604d:	jno    0x416053
  41604f:	cmp    BYTE PTR [ebx],bl
  416051:	xor    al,0x26
  416053:	data16 stc 
  416055:	add    BYTE PTR [ebx+0x7208f94c],cl
  41605b:	pop    ebx
  41605c:	inc    edx
  41605d:	es pop ds
  41605f:	and    DWORD PTR [edx],edi
  416061:	lea    edi,[eax+0x1c1df4a4]
  416067:	fcmovnbe st,st(0)
  416069:	bound  edx,QWORD PTR ss:[ecx+esi*4]
  41606d:	sub    BYTE PTR ds:0xff4d8d66,cl
  416073:	sub    al,0xfb
  416075:	jle    0x415ff7
  416077:	sbb    DWORD PTR [edx+0x4817c62f],0xffffffc9
  41607e:	leave  
  41607f:	fs or  eax,0x9464d064
  416085:	fist   DWORD PTR [edx+ebp*8-0x73]
  416089:	sub    eax,0xd6d256d2
  41608e:	mov    bh,0xf2
  416090:	(bad)  
  416091:	sbb    al,0x55
  416093:	dec    esp
  416094:	mov    ecx,0xfa178081
  416099:	xlat   BYTE PTR ds:[ebx]
  41609a:	cmp    BYTE PTR [ebx+0x44aff555],bl
  4160a0:	xchg   esp,eax
  4160a1:	jae    0x4160f0
  4160a3:	fs popf 
  4160a5:	sub    ch,BYTE PTR [edi-0x50f2efd1]
  4160ab:	imul   ebx,DWORD PTR [eax+0x5d],0xc1c526cf
  4160b2:	fnstcw WORD PTR [ebx+0x720d9e6a]
  4160b8:	call   DWORD PTR [esi+0x4df94258]
  4160be:	js     0x4160e9
  4160c0:	pop    es
  4160c1:	dec    ebp
  4160c2:	jae    0x416101
  4160c4:	ret    
  4160c5:	lahf   
  4160c6:	fdivr  DWORD PTR [edx+0xf]
  4160c9:	mov    ds:0x2d96a546,eax
  4160ce:	xchg   esp,eax
  4160cf:	inc    esi
  4160d0:	pop    esp
  4160d1:	rcr    cl,1
  4160d3:	lock rcr BYTE PTR [ecx-0x24f8dcee],0x23
  4160db:	xchg   edx,eax
  4160dc:	xchg   ebp,eax
  4160dd:	xor    al,0x4
  4160df:	jg     0x416109
  4160e1:	addr16 jmp 0x416085
  4160e4:	mov    ecx,0x379bda13
  4160e9:	inc    eax
  4160ea:	stos   DWORD PTR es:[edi],eax
  4160eb:	popf   
  4160ec:	adc    BYTE PTR [eax-0x3bccf5a2],cl
  4160f2:	arpl   WORD PTR [esp+esi*4+0x1b],dx
  4160f6:	mov    edx,0x7a02b10e
  4160fb:	mov    ebp,0xc6e8cd79
  416100:	xlat   BYTE PTR ds:[ebx]
  416101:	stos   DWORD PTR es:[edi],eax
  416102:	std    
  416103:	push   0xe32a2941
  416108:	fs loop 0x416110
  41610b:	xor    DWORD PTR [ebp-0x609bcf3f],0xd781a1c8
  416115:	nop
  416116:	fiadd  WORD PTR [ecx+esi*8-0x70]
  41611a:	and    eax,0x960f74a0
  41611f:	xchg   edi,eax
  416120:	test   al,0xec
  416122:	mov    ?,WORD PTR [edi+ebp*2]
  416125:	scas   al,BYTE PTR es:[edi]
  416126:	hlt    
  416127:	and    esp,DWORD PTR [ecx-0x7e]
  41612a:	aam    0x76
  41612c:	ins    DWORD PTR es:[edi],dx
  41612d:	cli    
  41612e:	enter  0x9879,0x3b
  416132:	adc    BYTE PTR [ecx],dh
  416134:	push   0xafbcf1bf
  416139:	adc    eax,0x6edb3db6
  41613e:	(bad)  
  41613f:	fstp   DWORD PTR [ecx+eiz*1]
  416142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416143:	js     0x416125
  416145:	cmp    esp,DWORD PTR [ebx]
  416147:	mov    al,ds:0xd88bc7f
  41614c:	daa    
  41614d:	push   ebp
  41614e:	aaa    
  41614f:	mov    cl,0xf7
  416151:	and    al,0xab
  416153:	cld    
  416154:	test   al,0xb7
  416156:	mov    dl,0x62
  416158:	mov    WORD PTR [ecx-0x2d8b2eb6],cs
  41615e:	scas   eax,DWORD PTR es:[edi]
  41615f:	dec    edx
  416160:	pusha  
  416161:	out    dx,eax
  416162:	jl     0x41619d
  416164:	outs   dx,BYTE PTR ds:[esi]
  416165:	pop    esi
  416166:	mov    esp,0x35147344
  41616b:	xchg   edx,eax
  41616c:	in     eax,dx
  41616d:	ja     0x416109
  41616f:	sub    al,0x8c
  416171:	mov    dl,0xab
  416173:	xor    ebx,edx
  416175:	loop   0x416183
  416177:	sahf   
  416178:	or     ebx,DWORD PTR [esi]
  41617a:	inc    ebx
  41617b:	mov    cl,0x58
  41617d:	or     dl,BYTE PTR [eax-0x4f]
  416180:	lds    esi,FWORD PTR [eax-0x2a93ca11]
  416186:	inc    ebx
  416187:	mov    DWORD PTR [ecx+ecx*8],esp
  41618a:	or     al,0xac
  41618c:	ins    BYTE PTR es:[edi],dx
  41618d:	outs   dx,BYTE PTR ds:[esi]
  41618e:	sbb    ebp,DWORD PTR [ebx]
  416190:	popa   
  416191:	adc    ebp,edi
  416193:	enter  0x848f,0xf6
  416197:	sbb    ah,ah
  416199:	shl    BYTE PTR [edi],1
  41619b:	add    BYTE PTR [ebx],bh
  41619d:	jle    0x416211
  41619f:	and    ebp,DWORD PTR [ebp-0x22]
  4161a2:	stc    
  4161a3:	xchg   ebp,eax
  4161a4:	dec    ecx
  4161a5:	fs mov bl,0x8a
  4161a8:	stos   BYTE PTR es:[edi],al
  4161a9:	inc    ebp
  4161aa:	daa    
  4161ab:	xchg   DWORD PTR [eax+0x7d4cf7a0],edi
  4161b1:	jp     0x416206
  4161b3:	xchg   BYTE PTR [ebx+edi*1-0x46],bh
  4161b7:	xchg   ebp,eax
  4161b8:	cwde   
  4161b9:	add    eax,0x299afa77
  4161be:	fisttp QWORD PTR [ebx+0x4b264d2d]
  4161c4:	push   0xffffffa6
  4161c6:	jmp    0x41620b
  4161c8:	mov    WORD PTR [esi+0x3d],cs
  4161cb:	dec    esi
  4161cc:	sub    al,0xb
  4161ce:	mov    DWORD PTR [eax-0x58],ebx
  4161d1:	js     0x41624a
  4161d3:	mov    ch,0x1d
  4161d5:	int3   
  4161d6:	jno    0x41621a
  4161d8:	xlat   BYTE PTR ds:[ebx]
  4161d9:	xor    eax,0xeb12c127
  4161de:	aad    0x76
  4161e0:	outs   dx,BYTE PTR ds:[esi]
  4161e1:	jg     0x41619f
  4161e3:	jecxz  0x4161c4
  4161e5:	(bad)  
  4161e6:	aad    0x50
  4161e8:	test   eax,0xb50469b8
  4161ed:	adc    eax,0x84460c98
  4161f2:	mov    esi,0xc8a06e43
  4161f7:	int3   
  4161f8:	neg    dh
  4161fa:	mov    ecx,0xab9e9da3
  4161ff:	sub    WORD PTR [ebx+eax*4+0xe],si
  416204:	or     dl,bh
  416206:	bound  eax,QWORD PTR [ecx+edx*4-0x697343a7]
  41620d:	out    dx,eax
  41620e:	cdq    
  41620f:	(bad)  
  416210:	pop    edi
  416211:	or     eax,0x6c7f900
  416216:	mov    al,ds:0xc7386cba
  41621b:	push   esp
  41621c:	and    eax,0x49f89ae9
  416221:	xchg   esp,eax
  416222:	pop    ds
  416223:	mov    bl,0x4b
  416225:	pop    esi
  416226:	leave  
  416227:	ret    0x18
  41622a:	push   ebp
  41622b:	mov    ebp,esp
  41622d:	sub    esp,0x9c
  416233:	or     ecx,eax
  416235:	mov    ecx,DWORD PTR [ebp+0x8]
  416238:	adc    DWORD PTR ds:0x42a29e,0x5466
  416242:	mov    eax,0x8a98
  416247:	xor    ax,WORD PTR [ecx+0x20]
  41624b:	and    DWORD PTR ds:0x42a2d6,0x0
  416255:	jmp    0x416267
  41625a:	mov    ecx,DWORD PTR ds:0x42a2d6
  416260:	inc    ecx
  416261:	mov    DWORD PTR ds:0x42a2d6,ecx
  416267:	cmp    DWORD PTR ds:0x42a2d6,0x12
  41626e:	jae    0x4162bb
  416274:	cmp    DWORD PTR ds:0x42a2d6,0xa
  41627b:	jle    0x4162bb
  416281:	jmp    0x41629c
  416286:	push   0x5de0
  41628b:	push   0x42a26a
  416290:	push   DWORD PTR [ebp-0x28]
  416293:	push   DWORD PTR [ebp-0x10]
  416296:	call   DWORD PTR ds:0x42a3d2
  41629c:	cmp    DWORD PTR ds:0x42a2d6,0x9
  4162a3:	jne    0x4162b6
  4162a9:	mov    ecx,DWORD PTR ds:0x42a2d6
  4162af:	inc    ecx
  4162b0:	mov    DWORD PTR ds:0x42a2d6,ecx
  4162b6:	jmp    0x41625a
  4162bb:	mov    ecx,0x3b5a
  4162c0:	add    DWORD PTR ds:0x42a292,0x71f8
  4162ca:	add    ax,cx
  4162cd:	sbb    ecx,DWORD PTR ds:0x42a2d6
  4162d3:	movzx  eax,ax
  4162d6:	sbb    ecx,DWORD PTR ds:0x42a29a
  4162dc:	mov    DWORD PTR [ebp-0x10],eax
  4162df:	mov    BYTE PTR [ebp-0x1],0x7c
  4162e3:	and    DWORD PTR ds:0x42a2a2,ecx
  4162e9:	lea    eax,[ebp-0x1]
  4162ec:	mov    DWORD PTR [ebp-0xc],eax
  4162ef:	and    DWORD PTR ds:0x42a2be,0x0
  4162f9:	mov    ecx,DWORD PTR ds:0x42a2be
  4162ff:	inc    ecx
  416300:	mov    DWORD PTR ds:0x42a2be,ecx
  416306:	cmp    DWORD PTR ds:0x42a2be,0x25
  41630d:	jg     0x416346
  416313:	jmp    0x416339
  416318:	push   DWORD PTR [ebp-0x28]
  41631b:	push   0x5043
  416320:	push   DWORD PTR [ebp-0x18]
  416323:	push   DWORD PTR [ebp-0xc]
  416326:	push   DWORD PTR [ebp-0x1c]
  416329:	push   0x5d36
  41632e:	push   0x429153
  416333:	call   DWORD PTR ds:0x42a3d6
  416339:	cmp    DWORD PTR ds:0x42a2be,0x1a
  416340:	jb     0x4162f9
  416346:	mov    al,BYTE PTR [ebp-0x1]
  416349:	and    DWORD PTR ds:0x42a26e,0x0
  416353:	mov    ecx,DWORD PTR ds:0x42a26e
  416359:	inc    ecx
  41635a:	mov    DWORD PTR ds:0x42a26e,ecx
  416360:	cmp    DWORD PTR ds:0x42a26e,0x19
  416367:	jge    0x416385
  41636d:	jmp    0x416378
  416372:	call   DWORD PTR ds:0x42a3da
  416378:	cmp    DWORD PTR ds:0x42a26e,0x10
  41637f:	jb     0x416353
  416385:	mov    ecx,DWORD PTR [ebp-0xc]
  416388:	xor    al,0x7c
  41638a:	mov    DWORD PTR ds:0x42a2c6,0x2666
  416394:	inc    al
  416396:	and    DWORD PTR ds:0x42a2ce,0x42a28a
  4163a0:	mov    BYTE PTR [ecx],al
  4163a2:	sbb    DWORD PTR ds:0x42a2f6,0x5717
  4163ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  4163b3:	push   ebx
  4163b4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4163bb:	mov    DWORD PTR ds:0x42a2f6,0x16
  4163c5:	cmp    DWORD PTR ds:0x42a2f6,0x0
  4163cc:	je     0x41640c
  4163d2:	cmp    DWORD PTR ds:0x42a2f6,0x1e
  4163d9:	jb     0x41640c
  4163df:	jmp    0x4163fc
  4163e4:	push   0x8db9
  4163e9:	push   DWORD PTR [ebp-0x1c]
  4163ec:	push   0x6bac
  4163f1:	push   0x6e74
  4163f6:	call   DWORD PTR ds:0x42a3de
  4163fc:	mov    eax,ds:0x42a2f6
  416401:	dec    eax
  416402:	mov    ds:0x42a2f6,eax
  416407:	jmp    0x4163c5
  41640c:	mov    ecx,DWORD PTR [ebp-0x18]
  41640f:	push   esi
  416410:	or     DWORD PTR ds:0x42a286,0x93e
  41641a:	mov    eax,0x75108aa
  41641f:	and    DWORD PTR ds:0x42a2e2,0x0
  416429:	jmp    0x41643d
  41642e:	xor    esi,esi
  416430:	add    esi,DWORD PTR ds:0x42a2e2
  416436:	inc    esi
  416437:	mov    DWORD PTR ds:0x42a2e2,esi
  41643d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  416444:	jae    0x416481
  41644a:	cmp    DWORD PTR ds:0x42a2e2,0xa
  416451:	jl     0x416481
  416457:	jmp    0x416462
  41645c:	call   DWORD PTR ds:0x42a3e2
  416462:	cmp    DWORD PTR ds:0x42a2e2,0x9
  416469:	jne    0x41647c
  41646f:	mov    esi,DWORD PTR ds:0x42a2e2
  416475:	inc    esi
  416476:	mov    DWORD PTR ds:0x42a2e2,esi
  41647c:	jmp    0x41642e
  416481:	xor    ecx,eax
  416483:	mov    esi,DWORD PTR ds:0x42a2ae
  416489:	sbb    esi,DWORD PTR ds:0x42a25a
  41648f:	mov    DWORD PTR ds:0x42a2ae,esi
  416495:	mov    esi,0x3272f1
  41649a:	push   edi
  41649b:	add    ecx,esi
  41649d:	jmp    0x4164b3
  4164a2:	inc    DWORD PTR ds:0x42a26e
  4164a8:	mov    dl,BYTE PTR [ebp-0x1]
  4164ab:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4164b2:	inc    ecx
  4164b3:	mov    DWORD PTR ds:0x42a286,0x7bd4
  4164bd:	cmp    ecx,0x40
  4164c0:	jb     0x4164a2
  4164c6:	not    edx
  4164c8:	mov    edx,DWORD PTR [ebp-0x18]
  4164cb:	xor    edx,eax
  4164cd:	mov    DWORD PTR ds:0x42a302,0x3db0
  4164d7:	add    edx,esi
  4164d9:	jmp    0x416628
  4164de:	movzx  edi,WORD PTR ds:0x42a296
  4164e5:	or     DWORD PTR ds:0x42a262,edi
  4164eb:	mov    edi,DWORD PTR [ebp+0x8]
  4164ee:	adc    DWORD PTR ds:0x42a286,edx
  4164f4:	mov    ecx,0x8a98
  4164f9:	adc    DWORD PTR ds:0x42a2fe,0x3816
  416503:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416508:	and    DWORD PTR ds:0x42a2ae,0x0
  416512:	jmp    0x416524
  416517:	mov    edi,DWORD PTR ds:0x42a2ae
  41651d:	inc    edi
  41651e:	mov    DWORD PTR ds:0x42a2ae,edi
  416524:	cmp    DWORD PTR ds:0x42a2ae,0x1f
  41652b:	jae    0x41657e
  416531:	cmp    DWORD PTR ds:0x42a2ae,0xa
  416538:	jbe    0x41657e
  41653e:	jmp    0x41655d
  416543:	push   0x42a25e
  416548:	push   0x6fb7
  41654d:	push   0x429009
  416552:	push   0x4290e8
  416557:	call   DWORD PTR ds:0x42a3ea
  41655d:	cmp    DWORD PTR ds:0x42a2ae,0x9
  416564:	jne    0x416579
  41656a:	xor    edi,edi
  41656c:	xor    edi,DWORD PTR ds:0x42a2ae
  416572:	inc    edi
  416573:	mov    DWORD PTR ds:0x42a2ae,edi
  416579:	jmp    0x416517
  41657e:	mov    edi,0x3b5a
  416583:	add    DWORD PTR ds:0x42a2fa,0x42a2c2
  41658d:	add    cx,di
  416590:	sbb    DWORD PTR ds:0x42a256,0x16d8
  41659a:	movzx  ecx,cx
  41659d:	and    DWORD PTR ds:0x42a2a2,0x42a29a
  4165a7:	mov    DWORD PTR [ebp-0xc],ecx
  4165aa:	and    DWORD PTR ds:0x42a26e,0x0
  4165b4:	xor    ecx,ecx
  4165b6:	xor    ecx,DWORD PTR ds:0x42a26e
  4165bc:	inc    ecx
  4165bd:	mov    DWORD PTR ds:0x42a26e,ecx
  4165c3:	cmp    DWORD PTR ds:0x42a26e,0x19
  4165ca:	jle    0x4165f5
  4165d0:	jmp    0x4165e8
  4165d5:	push   0x594c
  4165da:	push   0x42a276
  4165df:	push   DWORD PTR [ebp-0x1c]
  4165e2:	call   DWORD PTR ds:0x42a3ee
  4165e8:	cmp    DWORD PTR ds:0x42a26e,0x17
  4165ef:	jb     0x4165b4
  4165f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4165f8:	mov    DWORD PTR ds:0x42a29a,0x62ed
  416602:	movzx  ecx,WORD PTR [ecx+edx*4]
  416606:	xor    ecx,0x8a98
  41660c:	add    ecx,edi
  41660e:	mov    DWORD PTR ds:0x42a302,0x1620
  416618:	mov    edi,DWORD PTR [ebp-0xc]
  41661b:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416622:	mov    ecx,0x8de
  416627:	inc    edx
  416628:	mov    ecx,DWORD PTR [ebp-0x10]
  41662b:	mov    DWORD PTR ds:0x42a25a,0x2d30
  416635:	cmp    edx,ecx
  416637:	jne    0x4164de
  41663d:	and    edx,edx
  41663f:	mov    ecx,DWORD PTR [ebp-0x18]
  416642:	sub    edi,DWORD PTR ds:0x42a25a
  416648:	mov    edx,DWORD PTR [ebp+0x10]
  41664b:	xor    DWORD PTR ds:0x42a2ca,0xf9d
  416655:	xor    ecx,eax
  416657:	and    DWORD PTR ds:0x42a2c2,ebx
  41665d:	add    ecx,esi
  41665f:	mov    DWORD PTR [edx],ecx
  416661:	mov    ecx,DWORD PTR [ebp-0x18]
  416664:	sbb    DWORD PTR ds:0x42a2aa,0x1e81
  41666e:	jmp    0x4189c6
  416673:	mov    dl,0x1f
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	and    edx,edx
  416678:	mov    eax,ds:0xbec98882
  41667d:	js     0x4166c3
  41667f:	push   edx
  416680:	xchg   ecx,eax
  416681:	mov    ds:0x7c41fc75,al
  416686:	add    DWORD PTR [esi+0x5e],0xffffff83
  41668a:	add    DWORD PTR [ecx-0x1e],0x68
  41668e:	bound  esi,QWORD PTR [ecx-0x75]
  416691:	mov    dl,0x87
  416693:	pop    ss
  416694:	cdq    
  416695:	add    esi,DWORD PTR [edx]
  416697:	sar    BYTE PTR gs:[edx+edi*2],0x13
  41669c:	pop    ecx
  41669d:	sbb    dl,BYTE PTR ds:0x3f90634a
  4166a3:	or     eax,0x3893249c
  4166a8:	inc    edx
  4166a9:	and    esi,DWORD PTR [ebx-0x4fa647d9]
  4166af:	push   esp
  4166b0:	xchg   ebp,eax
  4166b1:	aas    
  4166b2:	popa   
  4166b3:	jbe    0x4166de
  4166b5:	repnz mov ebp,0x7b5d9662
  4166bb:	loope  0x41667d
  4166bd:	cdq    
  4166be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166bf:	das    
  4166c0:	inc    eax
  4166c1:	add    BYTE PTR [esi+0xa],dl
  4166c4:	aam    0x8b
  4166c6:	ds rcl ch,cl
  4166c9:	data16 xor dl,BYTE PTR [edx]
  4166cc:	sti    
  4166cd:	mov    al,0xc3
  4166cf:	jge    0x416718
  4166d1:	xchg   ebp,eax
  4166d2:	mov    edi,0x5a1d4c3
  4166d7:	adc    ch,dh
  4166d9:	jle    0x416663
  4166db:	pop    eax
  4166dc:	jecxz  0x4166d9
  4166de:	out    0x2,eax
  4166e0:	dec    DWORD PTR [eax+ebx*4]
  4166e3:	test   BYTE PTR [ebp+0x3f8167c1],bl
  4166e9:	and    ecx,esp
  4166eb:	(bad)  
  4166ec:	mov    bh,0xd6
  4166ee:	ret    
  4166ef:	cwde   
  4166f0:	(bad)  [ecx+0x7e6a81b0]
  4166f6:	mov    ds:0xa892967c,eax
  4166fb:	fs data16 add al,0x7
  4166ff:	and    DWORD PTR [ebp-0x58],ebx
  416702:	jnp    0x4166cc
  416704:	adc    esi,esi
  416706:	or     DWORD PTR [edx+0x2d3237d4],ebp
  41670c:	jmp    0x516e:0xf726b57d
  416713:	dec    ebp
  416714:	dec    esi
  416715:	mov    ds:0xfc29af8b,al
  41671a:	sub    bh,BYTE PTR [ecx]
  41671c:	call   0x83a6f6d1
  416721:	mov    ds:0x69002c74,al
  416726:	fdiv   QWORD PTR [eax+esi*4-0x4d]
  41672a:	mov    ah,0x4b
  41672c:	cmc    
  41672d:	mov    DWORD PTR ds:0x5d9b1eb0,eax
  416733:	jge    0x416731
  416735:	test   DWORD PTR [ecx+0x4],0x80a73747
  41673c:	stos   BYTE PTR es:[edi],al
  41673d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41673e:	ins    DWORD PTR es:[edi],dx
  41673f:	lock add al,0xa4
  416742:	mov    esi,0xcab5a7a3
  416747:	pop    ecx
  416748:	xor    DWORD PTR [ebp-0x35232a6b],ecx
  41674e:	rol    BYTE PTR [esi+0x2f95192],0x55
  416755:	sbb    esp,esi
  416757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416758:	ss sbb al,0x14
  41675b:	sbb    DWORD PTR [edi],eax
  41675d:	jbe    0x41678a
  41675f:	ret    
  416760:	mov    al,ds:0x58d6ab03
  416765:	mov    ah,0xf5
  416767:	sub    DWORD PTR [ebx],esi
  416769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676a:	iret   
  41676b:	dec    ebx
  41676c:	add    bh,BYTE PTR [esi+0x53fb6dd5]
  416772:	jae    0x416732
  416774:	call   0x4167:0x9aa40adf
  41677b:	ss shr cl,1
  41677e:	mov    ebp,0xf93de742
  416783:	rcl    ah,1
  416785:	pop    es
  416786:	xchg   edi,eax
  416787:	or     esp,DWORD PTR [eax+0x5493f349]
  41678d:	adc    BYTE PTR [esi+edx*2+0xd],dh
  416791:	add    al,0xc6
  416793:	cmp    eax,ebx
  416795:	not    DWORD PTR [esi+0xd]
  416798:	daa    
  416799:	mov    eax,0x81fe54aa
  41679e:	add    DWORD PTR [ebp-0x20],edi
  4167a1:	call   0x77c9:0x5688b52d
  4167a8:	(bad)  
  4167a9:	sub    al,0xb7
  4167ab:	popf   
  4167ac:	inc    esp
  4167ad:	sub    DWORD PTR ds:0x76c1120b,edx
  4167b3:	jge    0x41682f
  4167b5:	scas   al,BYTE PTR es:[edi]
  4167b6:	int3   
  4167b7:	sub    DWORD PTR [edi-0x46565d30],ecx
  4167bd:	out    0xc0,al
  4167bf:	mov    ds,WORD PTR [edi]
  4167c1:	aad    0x6
  4167c3:	inc    eax
  4167c4:	fistp  QWORD PTR [esi-0x4d00ff66]
  4167ca:	pop    ss
  4167cb:	bound  edx,QWORD PTR [eax+0x25]
  4167ce:	jge    0x4167db
  4167d0:	sub    BYTE PTR [esi],ch
  4167d2:	cs stos BYTE PTR es:[edi],al
  4167d4:	mov    dl,0xbd
  4167d6:	int    0x8b
  4167d8:	mov    dl,0x38
  4167da:	jno    0x416799
  4167dc:	xor    ecx,edi
  4167de:	ds test eax,0x368c6886
  4167e4:	out    0x70,al
  4167e6:	push   esi
  4167e7:	loope  0x416807
  4167e9:	push   esi
  4167ea:	adc    al,0x1c
  4167ec:	push   eax
  4167ed:	pop    edx
  4167ee:	sbb    edi,DWORD PTR [ebp-0x1e]
  4167f1:	leave  
  4167f2:	out    dx,eax
  4167f3:	in     al,0x19
  4167f5:	fisubr DWORD PTR [eax+0x6f]
  4167f8:	add    DWORD PTR [esi+0x4266f405],ebp
  4167fe:	and    bl,BYTE PTR [eax]
  416800:	xor    eax,0xcc758dca
  416805:	push   esi
  416806:	outs   dx,DWORD PTR ds:[esi]
  416807:	popf   
  416808:	cmp    DWORD PTR [esp+ebp*4],edx
  41680b:	aaa    
  41680c:	inc    edx
  41680d:	cs add ax,di
  416811:	scas   al,BYTE PTR es:[edi]
  416812:	inc    edi
  416813:	data16 xlat BYTE PTR ds:[ebx]
  416815:	mov    ch,0x5f
  416817:	in     al,dx
  416818:	call   0xd90e:0x9292901e
  41681f:	shl    esp,cl
  416821:	pop    edi
  416822:	arpl   WORD PTR [ebx+0x72],si
  416825:	cs xor eax,0x3f3af9b8
  41682b:	aaa    
  41682c:	inc    eax
  41682d:	les    ebx,FWORD PTR [eax-0x26]
  416830:	outs   dx,DWORD PTR ds:[esi]
  416831:	mov    edx,0xd1ca1a0c
  416836:	daa    
  416837:	test   BYTE PTR [eax+0x37206051],dl
  41683d:	push   0xe
  41683f:	jle    0x41688e
  416841:	lock dec edx
  416843:	pushf  
  416844:	or     edi,DWORD PTR [esi-0xd]
  416847:	cs dec ecx
  416849:	or     eax,0xa44d9cb5
  41684e:	pushf  
  41684f:	mov    al,0xa2
  416851:	mov    al,ds:0x5240561e
  416856:	xchg   eax,ecx
  416858:	lods   al,BYTE PTR ds:[esi]
  416859:	out    dx,eax
  41685a:	add    BYTE PTR [edx],0xdd
  41685d:	dec    ecx
  41685e:	jle    0x4167e4
  416860:	push   ecx
  416861:	jl     0x4167f7
  416863:	outs   dx,BYTE PTR ds:[esi]
  416864:	dec    ebx
  416865:	cmp    DWORD PTR ds:[eax+0x57],ebp
  416869:	mov    ebp,0x17a2953b
  41686e:	repz jo 0x4168dd
  416871:	stos   DWORD PTR es:[edi],eax
  416872:	inc    edx
  416873:	icebp  
  416874:	inc    ebx
  416875:	xchg   edi,eax
  416876:	in     al,0xaf
  416878:	addr16 nop
  41687a:	cmp    eax,0x53895fa9
  41687f:	push   es
  416880:	cmp    eax,0x10ecdd02
  416885:	adc    ebx,edx
  416887:	inc    edi
  416888:	out    0x60,al
  41688a:	(bad)  
  41688c:	push   DWORD PTR [eax]
  41688e:	adc    DWORD PTR [edi-0x5970c25],edi
  416894:	or     eax,0xf6c59342
  416899:	mov    ds:0x6353bbdd,eax
  41689e:	mov    ecx,0x488b9985
  4168a3:	les    ebp,FWORD PTR [edx+ebp*1]
  4168a6:	sahf   
  4168a7:	pop    ss
  4168a8:	xlat   BYTE PTR ds:[ebx]
  4168a9:	sbb    esp,DWORD PTR [ecx+0x5243e974]
  4168af:	dec    ebp
  4168b0:	outs   dx,BYTE PTR ds:[esi]
  4168b1:	mov    ds:0x82e83aa3,al
  4168b6:	jnp    0x4168ba
  4168b8:	xor    bl,BYTE PTR [esi+0x5a]
  4168bb:	stc    
  4168bc:	push   ecx
  4168bd:	or     al,ch
  4168bf:	inc    ebp
  4168c0:	into   
  4168c1:	ds mov eax,0xe9eb7f18
  4168c7:	jmp    0x49cb:0xb6ca2cd9
  4168ce:	sub    al,0xc9
  4168d0:	(bad)  
  4168d1:	xlat   BYTE PTR ds:[ebx]
  4168d2:	push   ebp
  4168d3:	je     0x4168b1
  4168d5:	fsub   DWORD PTR [eax+0x71]
  4168d8:	lahf   
  4168d9:	stos   DWORD PTR es:[edi],eax
  4168da:	shl    BYTE PTR [eax+0x1a],0xe5
  4168de:	inc    eax
  4168df:	cmp    DWORD PTR [edx+ebx*2-0x14],edi
  4168e3:	lock ror DWORD PTR [edx+0x46],cl
  4168e7:	push   esi
  4168e8:	xchg   edx,eax
  4168e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ea:	cli    
  4168eb:	cld    
  4168ec:	in     al,0xab
  4168ee:	outs   dx,BYTE PTR ds:[esi]
  4168ef:	nop
  4168f0:	fisubr WORD PTR [eax+0x23]
  4168f3:	(bad)  
  4168f4:	push   ebp
  4168f5:	dec    eax
  4168f6:	inc    ebp
  4168f7:	aaa    
  4168f8:	adc    esi,ebp
  4168fa:	inc    ebp
  4168fb:	loop   0x4168e6
  4168fd:	(bad)  
  4168fe:	in     eax,0x11
  416900:	fadd   QWORD PTR [edi-0x1d]
  416903:	loop   0x416911
  416905:	les    eax,FWORD PTR [esi+edx*1-0x56]
  416909:	mov    bh,0x3b
  41690b:	inc    ebx
  41690c:	sub    BYTE PTR [edx-0x596eccc0],dl
  416912:	jb     0x4168c3
  416914:	fadd   st(1),st
  416916:	ja     0x416946
  416918:	std    
  416919:	je     0x4168df
  41691b:	pop    es
  41691c:	(bad)  
  41691d:	cmc    
  41691e:	and    dh,BYTE PTR [edx]
  416920:	test   DWORD PTR [ecx+edx*1+0x2b],esi
  416924:	in     al,dx
  416925:	adc    BYTE PTR [ebp-0x2de4a3bb],ah
  41692b:	sar    BYTE PTR [esi+eiz*8+0x5a],0xb2
  416930:	out    dx,al
  416931:	mov    edi,0xec518fb7
  416936:	xchg   edx,eax
  416937:	cld    
  416938:	jae    0x4168c8
  41693a:	out    dx,al
  41693b:	push   ss
  41693c:	mov    ecx,0x6d258e67
  416941:	push   ss
  416942:	fwait
  416943:	inc    edx
  416944:	es cld 
  416946:	addr16 retf 
  416948:	dec    ebx
  416949:	xchg   ebx,eax
  41694a:	adc    eax,0x6c9e9074
  41694f:	paddb  mm1,mm3
  416952:	leave  
  416953:	cmp    ecx,DWORD PTR [ecx-0x4d]
  416956:	push   esp
  416957:	jne    0x416981
  416959:	jmp    0x3641:0x4c0b7ac2
  416960:	adc    dl,BYTE PTR ds:0xb6fb58e
  416966:	or     al,0xfc
  416968:	out    dx,al
  416969:	mov    al,0x60
  41696b:	fiadd  WORD PTR [ecx+0x39]
  41696e:	add    eax,0xb9d2fe7d
  416973:	movd   DWORD PTR [edx],mm1
  416976:	(bad)  
  416977:	stos   DWORD PTR es:[edi],eax
  416978:	jmp    FWORD PTR [ebp-0x64]
  41697b:	adc    ecx,DWORD PTR [ecx]
  41697d:	mov    eax,0x4ef672f4
  416982:	xor    ah,BYTE PTR [ebx-0xb]
  416985:	jo     0x4169d1
  416987:	add    eax,0xb295bf07
  41698c:	jmp    0xd1a2:0x941d5f13
  416993:	and    eax,esp
  416995:	cli    
  416996:	jns    0x4169f1
  416998:	das    
  416999:	cmpps  xmm7,XMMWORD PTR [eax],0xfd
  41699d:	mov    esi,0xe94f3752
  4169a2:	mov    ecx,0x7e918a15
  4169a7:	gs lahf 
  4169a9:	xor    eax,0x872ae45a
  4169ae:	sbb    DWORD PTR [eax+0x612ad332],0x2cb83bc1
  4169b8:	pusha  
  4169b9:	cmc    
  4169ba:	inc    eax
  4169bb:	(bad)  
  4169bc:	imul   edx,DWORD PTR [eax],0xffffffb1
  4169bf:	test   DWORD PTR [esi],0xa8882be5
  4169c5:	fwait
  4169c6:	jo     0x416a3d
  4169c8:	mov    al,0xda
  4169ca:	push   edx
  4169cb:	jmp    0x4169a0
  4169cd:	adc    DWORD PTR [edx+eax*4-0x22622150],ecx
  4169d4:	pop    ss
  4169d5:	mov    esp,0x472518e1
  4169da:	cs adc ebp,ebx
  4169dd:	jmp    0x4169ff
  4169df:	scas   al,BYTE PTR es:[edi]
  4169e0:	xor    ecx,DWORD PTR [esi+0x7e669ae4]
  4169e6:	mov    ds:0xe6659f83,al
  4169eb:	fst    st(2)
  4169ed:	add    ebp,DWORD PTR [edx-0x4c]
  4169f0:	adc    eax,0x2bea413d
  4169f5:	mov    edx,0x76b347c0
  4169fa:	icebp  
  4169fb:	mov    esp,0x880147db
  416a00:	mov    al,bl
  416a02:	or     ecx,ebx
  416a04:	inc    esi
  416a05:	inc    ebx
  416a06:	xor    al,0x61
  416a08:	fsub   st(4),st
  416a0a:	sbb    cl,cl
  416a0c:	dec    ebx
  416a0d:	add    eax,0x6be0ac7e
  416a12:	es out dx,eax
  416a14:	sti    
  416a15:	push   0xc4fe2147
  416a1a:	fwait
  416a1b:	xchg   BYTE PTR [eax+0x4d],bh
  416a1e:	mov    dh,0x11
  416a20:	jle    0x416a43
  416a22:	(bad)  
  416a23:	das    
  416a24:	adc    al,0x26
  416a26:	xor    al,0x13
  416a28:	int    0x12
  416a2a:	push   edx
  416a2b:	cmp    BYTE PTR [ecx],0x52
  416a2e:	retf   
  416a2f:	imul   edx,DWORD PTR [eax+0x5f],0xffffff94
  416a33:	dec    edi
  416a34:	xor    cl,BYTE PTR [esi-0x7b106e5c]
  416a3a:	sbb    al,0xb2
  416a3c:	out    0x0,al
  416a3e:	cld    
  416a3f:	push   0xa
  416a41:	sbb    BYTE PTR fs:[ebx+0x2a5a16a2],dh
  416a48:	xor    DWORD PTR es:[ebp-0x5e26dd79],eax
  416a4f:	scas   eax,DWORD PTR es:[edi]
  416a50:	xor    DWORD PTR [edx],esp
  416a52:	inc    eax
  416a53:	sub    bh,BYTE PTR [edx+0x1b]
  416a56:	scas   eax,DWORD PTR es:[edi]
  416a57:	mov    ebp,0x27f90853
  416a5c:	mov    bl,0x91
  416a5e:	test   eax,0xe17e917b
  416a63:	mov    esi,0x1d301498
  416a68:	outs   dx,DWORD PTR ds:[esi]
  416a69:	sbb    al,0x2c
  416a6b:	cdq    
  416a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6d:	les    esp,FWORD PTR [ecx-0x15c8e91a]
  416a73:	pop    eax
  416a74:	sti    
  416a75:	call   0xf70cf24c
  416a7a:	dec    esp
  416a7b:	add    al,0x95
  416a7d:	es pushf 
  416a7f:	(bad)  
  416a80:	sub    eax,0x93a7f927
  416a85:	xchg   BYTE PTR [edi+0x1831bf85],dh
  416a8b:	int3   
  416a8c:	mov    bh,bh
  416a8e:	aam    0xd8
  416a90:	pushf  
  416a91:	out    0xd8,al
  416a93:	xor    DWORD PTR [ecx-0x1a],ebp
  416a96:	or     BYTE PTR [eax],dh
  416a98:	(bad)  
  416a99:	ret    0x672f
  416a9c:	sbb    eax,DWORD PTR [eax]
  416a9e:	ficom  DWORD PTR [ecx-0x3d655cb8]
  416aa4:	icebp  
  416aa5:	jne    0x416b17
  416aa7:	fld    QWORD PTR [eax+0x369b7307]
  416aad:	cwde   
  416aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aaf:	cmp    al,0xb3
  416ab1:	retf   
  416ab2:	cmp    DWORD PTR [ebx],edx
  416ab4:	popf   
  416ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab6:	mul    DWORD PTR [edi-0x58]
  416ab9:	push   esp
  416aba:	adc    BYTE PTR [eax],cl
  416abc:	and    dl,BYTE PTR [edx]
  416abe:	pushf  
  416abf:	mov    BYTE PTR [esi],dl
  416ac1:	test   BYTE PTR [ecx-0x58],bh
  416ac4:	stc    
  416ac5:	adc    DWORD PTR [ecx],eax
  416ac7:	scas   al,BYTE PTR es:[edi]
  416ac8:	int    0x1
  416aca:	dec    esi
  416acb:	mov    al,0x8d
  416acd:	pushw  0xffda
  416ad0:	cmp    eax,0xd741a38a
  416ad5:	mov    al,ds:0xd1503f16
  416ada:	cmp    BYTE PTR [edi+0x16],0x0
  416ade:	mov    ds:0x6bd2d068,eax
  416ae3:	sub    ch,dh
  416ae5:	cmp    BYTE PTR [edi+0x27f1af5f],dl
  416aeb:	fcom   DWORD PTR [ecx-0x2e]
  416aee:	cli    
  416aef:	cld    
  416af0:	or     eax,0xfaef67fc
  416af5:	sub    bl,BYTE PTR [ecx-0x41b32683]
  416afb:	gs add eax,0x669ae16f
  416b01:	lea    edx,[edi+0x7367fcaa]
  416b07:	push   esp
  416b08:	js     0x416add
  416b0a:	(bad)
  416b0d:	cdq    
  416b0e:	xor    eax,0xa69824f2
  416b13:	xchg   BYTE PTR [eax],al
  416b15:	lea    ebx,[ecx+0xc]
  416b18:	movnti DWORD PTR ds:0xf89e777c,esi
  416b1f:	ret    0x27ee
  416b22:	sbb    eax,0x702ddcbf
  416b27:	sbb    BYTE PTR [esi-0x6],bh
  416b2a:	sbb    al,0x34
  416b2c:	xchg   ebp,eax
  416b2d:	mov    ds:0x120aca37,al
  416b32:	inc    eax
  416b33:	je     0x416b26
  416b35:	lahf   
  416b36:	and    DWORD PTR [esi-0x3d],ebx
  416b39:	cmp    al,0x12
  416b3b:	aad    0x18
  416b3d:	push   cs
  416b3e:	adc    DWORD PTR [esi-0x4d],ebp
  416b41:	sahf   
  416b42:	or     BYTE PTR [ebp+0x31],dh
  416b45:	cwde   
  416b46:	jle    0x416ad1
  416b48:	rcl    ebx,1
  416b4a:	mov    ds:0x4631edcc,al
  416b4f:	add    eax,0x7ee7bf55
  416b54:	in     eax,dx
  416b55:	outs   dx,BYTE PTR ds:[esi]
  416b56:	push   esi
  416b57:	and    eax,0x5a97d92b
  416b5c:	inc    DWORD PTR ds:0x2185ca4d
  416b62:	fwait
  416b63:	sbb    ecx,DWORD PTR fs:[ecx+0x8]
  416b67:	sbb    DWORD PTR [ebx-0x55],edi
  416b6a:	xchg   esi,eax
  416b6b:	sub    edi,DWORD PTR [eax]
  416b6d:	dec    esp
  416b6e:	mov    esi,0xa66d79a7
  416b73:	jp     0x416b23
  416b75:	jmp    0x416bb8
  416b77:	or     BYTE PTR [eax],0x22
  416b7a:	jnp    0x416b0f
  416b7c:	adc    bx,WORD PTR [edi-0x2e]
  416b80:	mov    eax,0x964755fd
  416b85:	mov    esi,0xea88de20
  416b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8b:	inc    ecx
  416b8c:	add    bl,BYTE PTR [ecx-0x5dde39cf]
  416b92:	stos   BYTE PTR es:[edi],al
  416b93:	or     eax,0x6efe40ba
  416b98:	and    al,0xeb
  416b9a:	pusha  
  416b9b:	out    dx,al
  416b9c:	xchg   ecx,eax
  416b9d:	add    esp,DWORD PTR [edx-0xf1c8858]
  416ba3:	mov    ebx,0x5e718c84
  416ba8:	add    eax,0xe9c4e271
  416bad:	pop    ss
  416bae:	ss sub eax,0x3423abe9
  416bb4:	adc    eax,DWORD PTR [ebp-0x62]
  416bb7:	ds popa 
  416bb9:	dec    eax
  416bba:	inc    ecx
  416bbb:	(bad)  
  416bbc:	mov    cl,0xfb
  416bbe:	pop    es
  416bbf:	clc    
  416bc0:	mov    DWORD PTR [edx],0xb5305c61
  416bc6:	mul    DWORD PTR [esi+0x85f8e6d]
  416bcc:	xchg   edx,eax
  416bcd:	enter  0xe7fa,0xe2
  416bd1:	mov    dh,0x76
  416bd3:	and    al,0x4a
  416bd5:	mov    ecx,0x6b3576b
  416bda:	(bad)  
  416bdb:	repnz shr DWORD PTR [esi-0x1f892eec],0x8c
  416be3:	mov    al,0x5e
  416be5:	(bad)  
  416be6:	outs   dx,DWORD PTR ds:[esi]
  416be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be8:	add    BYTE PTR [eax-0xa6ce5e9],0x33
  416bef:	and    ecx,edi
  416bf1:	(bad)  
  416bf3:	xor    DWORD PTR [ebp+ecx*8-0x63a870e8],esi
  416bfa:	and    bh,bh
  416bfc:	icebp  
  416bfd:	call   0xd7d8:0x2f402bc0
  416c04:	dec    edi
  416c05:	mov    eax,0xd43bce64
  416c0a:	stos   DWORD PTR es:[edi],eax
  416c0b:	push   eax
  416c0c:	or     ebp,0xffffffb7
  416c0f:	ins    BYTE PTR es:[edi],dx
  416c10:	out    0x31,eax
  416c12:	loope  0x416bfe
  416c14:	mov    BYTE PTR [edx-0x4c6a5bd4],ch
  416c1a:	sbb    edi,DWORD PTR [edi]
  416c1c:	outs   dx,BYTE PTR ds:[esi]
  416c1d:	fs xchg esp,eax
  416c1f:	aas    
  416c20:	or     al,BYTE PTR [eax]
  416c22:	mov    ebp,0xc531efaa
  416c27:	jl     0x416bd8
  416c29:	popf   
  416c2a:	inc    eax
  416c2b:	pop    ecx
  416c2c:	and    ebp,DWORD PTR gs:[ecx+0x7c74f7ab]
  416c33:	cld    
  416c34:	lea    ecx,[edx+0x6793e55a]
  416c3a:	fbstp  TBYTE PTR [ebx]
  416c3c:	ins    BYTE PTR es:[edi],dx
  416c3d:	cs call 0x66a1:0xf3081232
  416c45:	call   0x8070:0x94f75530
  416c4c:	jns    0x416c53
  416c4e:	dec    eax
  416c4f:	sbb    eax,0x66fd6bab
  416c54:	jecxz  0x416cb9
  416c56:	shl    edx,cl
  416c58:	data16 fidivr WORD PTR [ebx]
  416c5b:	push   ss
  416c5c:	jg     0x416c1d
  416c5e:	shr    DWORD PTR [edi],1
  416c60:	jg     0x416cb9
  416c62:	xor    al,0x99
  416c64:	(bad)  
  416c65:	mov    ebx,esi
  416c67:	dec    ecx
  416c68:	int    0xfe
  416c6a:	(bad)  
  416c6b:	jecxz  0x416c00
  416c6d:	cld    
  416c6e:	sub    al,0xdc
  416c70:	or     DWORD PTR [ecx+0x47],eax
  416c73:	sar    DWORD PTR [eax-0x7d240f9f],1
  416c79:	(bad)  
  416c7a:	sbb    al,0xf7
  416c7c:	and    ebx,DWORD PTR [ebx+0x27]
  416c7f:	inc    ecx
  416c80:	add    BYTE PTR [edi],0x1a
  416c83:	pop    esp
  416c84:	sbb    al,0x50
  416c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c87:	cwde   
  416c88:	sbb    dh,BYTE PTR [ecx]
  416c8a:	adc    eax,0x5366d99b
  416c8f:	in     eax,dx
  416c90:	adc    eax,0xa6843f25
  416c95:	and    DWORD PTR [ebx+0x8d105bf],ecx
  416c9b:	fdiv   st(6),st
  416c9d:	jmp    0x416c7b
  416c9f:	or     al,0x44
  416ca1:	mov    dl,0x80
  416ca3:	add    al,dh
  416ca5:	sub    dl,0xaf
  416ca8:	dec    edi
  416ca9:	pop    eax
  416caa:	sub    bh,BYTE PTR [edx]
  416cac:	inc    edi
  416cad:	fistp  DWORD PTR [ebx+0x29]
  416cb0:	sub    edx,DWORD PTR ds:0x40139110
  416cb6:	std    
  416cb7:	inc    esp
  416cb8:	add    DWORD PTR [edi+0x50],edx
  416cbb:	bound  edi,QWORD PTR [edi]
  416cbd:	push   ebx
  416cbe:	jb     0x416c9e
  416cc0:	mov    DWORD PTR [eax],edx
  416cc2:	ss dec ebp
  416cc4:	mov    es,WORD PTR [edx]
  416cc6:	adc    dh,BYTE PTR [esi]
  416cc8:	inc    esi
  416cc9:	fistp  QWORD PTR [ecx+ebp*8]
  416ccc:	loopne 0x416d27
  416cce:	pop    edx
  416ccf:	cmp    al,0x3a
  416cd1:	std    
  416cd2:	mov    eax,DWORD PTR [eax+0x356d6378]
  416cd8:	push   edx
  416cd9:	sbb    dl,ah
  416cdb:	fstp   QWORD PTR [esi-0x2b6c03e0]
  416ce1:	dec    edx
  416ce2:	rcr    DWORD PTR [eax-0x60bdeee8],cl
  416ce8:	xor    al,0xa5
  416cea:	push   ebx
  416ceb:	cmp    ebp,DWORD PTR [ebx-0x4ad051f4]
  416cf1:	hlt    
  416cf2:	sbb    DWORD PTR fs:0x680ca0ff,esp
  416cf9:	pop    es
  416cfa:	cmp    eax,0x13d25960
  416cff:	mov    ecx,0xbdaad0f2
  416d04:	and    esi,edx
  416d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d07:	mov    bl,0x72
  416d09:	jg     0x416d3c
  416d0b:	add    ebp,ebx
  416d0d:	test   eax,0x22c07795
  416d12:	in     al,dx
  416d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d14:	rcl    DWORD PTR [edx+0x2c],0x41
  416d18:	call   0xf139a85e
  416d1d:	std    
  416d1e:	jl     0x416d88
  416d20:	stos   DWORD PTR es:[edi],eax
  416d21:	frstor [eax+ebp*8+0x3c]
  416d25:	mov    dh,BYTE PTR [ebp+edx*2+0x5280efef]
  416d2c:	adc    DWORD PTR [ecx+edi*4+0x6a2c50e8],edi
  416d33:	ss jnp 0x416cfb
  416d36:	sbb    BYTE PTR [ecx],ah
  416d38:	sbb    ecx,DWORD PTR [ebx*8-0x6bc0ec25]
  416d3f:	ins    DWORD PTR es:[edi],dx
  416d40:	mov    dl,0x17
  416d42:	shl    DWORD PTR [esi],0x13
  416d45:	jle    0x416d1d
  416d47:	xchg   esp,eax
  416d48:	dec    ecx
  416d49:	dec    ecx
  416d4a:	dec    ebx
  416d4b:	fisttp QWORD PTR [ebp-0x3c66e36]
  416d51:	mov    al,ds:0x873fd098
  416d56:	xchg   BYTE PTR [edi],dh
  416d58:	sar    BYTE PTR ds:0xa800b4c1,cl
  416d5e:	mov    al,0xe0
  416d60:	mov    bh,0xab
  416d62:	sbb    edx,0x7
  416d65:	fidivr WORD PTR [ecx-0x6a9583d2]
  416d6b:	jne    0x416d1c
  416d6d:	aaa    
  416d6e:	inc    ecx
  416d6f:	push   ecx
  416d70:	and    DWORD PTR [eax-0x6aea7917],ebp
  416d76:	mov    ch,0x77
  416d78:	imul   DWORD PTR [ebp+eax*4+0x2f]
  416d7c:	ds mov esi,?
  416d7f:	or     BYTE PTR [eax-0x35],bl
  416d82:	lods   al,BYTE PTR ds:[esi]
  416d83:	xchg   ecx,ecx
  416d85:	pusha  
  416d86:	cmp    BYTE PTR [edx+0x2a],ch
  416d89:	sbb    al,0x93
  416d8b:	pop    ebx
  416d8c:	sbb    ch,cl
  416d8e:	hlt    
  416d8f:	imul   esi,DWORD PTR [ecx+edi*4+0x74],0xb9f2a9c8
  416d97:	loopne 0x416d94
  416d99:	frstor [eax+edi*1-0x115444fc]
  416da0:	sbb    bl,BYTE PTR [edx]
  416da2:	inc    ebx
  416da3:	jge    0x416d35
  416da5:	and    eax,0x5f822a4e
  416daa:	adc    dl,bl
  416dac:	dec    esp
  416dad:	imul   edx,DWORD PTR [ecx+0x2a4b0448],0x7c2c0d60
  416db7:	mov    edi,0x564af760
  416dbc:	mov    ebp,0xac4aa4a2
  416dc1:	icebp  
  416dc2:	fcomp  st(1)
  416dc4:	cmp    dh,bl
  416dc6:	stos   DWORD PTR es:[edi],eax
  416dc7:	ret    0x88d1
  416dca:	jmp    0x7b9d6cac
  416dcf:	cmp    eax,0x222a0f43
  416dd4:	push   ecx
  416dd5:	shr    DWORD PTR [edi+0x379e9d6c],0xa2
  416ddc:	enter  0x8923,0x27
  416de0:	ins    BYTE PTR es:[edi],dx
  416de1:	(bad)  [ebx-0x16]
  416de4:	aad    0x2f
  416de6:	shl    BYTE PTR [ebx+0x7bdbcff9],cl
  416dec:	xlat   BYTE PTR fs:[ebx]
  416dee:	mov    al,0x42
  416df0:	jecxz  0x416db0
  416df2:	adc    al,0xc9
  416df4:	cmp    DWORD PTR [edx+0x62],esp
  416df7:	aas    
  416df8:	das    
  416df9:	and    ebx,0x79
  416dfc:	add    eax,0x569bc66e
  416e01:	sbb    edx,DWORD PTR [ebx]
  416e03:	sub    al,0x2
  416e05:	out    0x82,al
  416e07:	out    0xfa,eax
  416e09:	mov    ?,WORD PTR [ecx+ebx*8]
  416e0c:	xchg   esi,eax
  416e0d:	aaa    
  416e0e:	dec    esp
  416e0f:	jp     0x416d96
  416e11:	in     eax,0x63
  416e13:	adc    esp,DWORD PTR [edi-0x671a8be3]
  416e19:	mov    ds,WORD PTR [ebp-0x59]
  416e1c:	call   0xaf0a4a57
  416e21:	fsubr  DWORD PTR [esp+edi*1]
  416e24:	mov    dl,0x38
  416e26:	xor    ecx,esp
  416e28:	(bad)  
  416e2a:	jae    0x416e98
  416e2c:	push   ecx
  416e2d:	mov    dh,BYTE PTR [esi+0x1c]
  416e30:	mov    ebx,0xe07827ad
  416e35:	sti    
  416e36:	inc    ecx
  416e37:	int3   
  416e38:	mov    al,0x5b
  416e3a:	out    0x4,al
  416e3c:	ds mov ch,0x26
  416e3f:	cmp    DWORD PTR [edx+0x75],0x7c95c84
  416e46:	aas    
  416e47:	retf   0x5fd
  416e4a:	jb     0x416e22
  416e4c:	mov    ah,cl
  416e4e:	add    eax,0x4810c936
  416e53:	jo     0x416def
  416e55:	sbb    eax,0x62693f4e
  416e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e5b:	xor    DWORD PTR ds:0xb9755380,ebx
  416e61:	xor    ch,BYTE PTR [edx+0x78331ba4]
  416e67:	push   ebp
  416e68:	sahf   
  416e69:	adc    DWORD PTR [edi+0x4be13708],edx
  416e6f:	daa    
  416e70:	in     eax,0xb0
  416e72:	jne    0x416eef
  416e74:	mov    al,BYTE PTR [edi+ebx*2]
  416e77:	adc    al,0x1e
  416e79:	shr    BYTE PTR [esi+0x21ad3507],0x39
  416e80:	dec    edi
  416e81:	xor    dl,ch
  416e83:	sbb    DWORD PTR ds:0xb7bd8f86,esi
  416e89:	cld    
  416e8a:	mov    cl,0xea
  416e8c:	sbb    DWORD PTR [ecx-0x14abd4e7],esp
  416e92:	mov    ds:0x4d2221ea,al
  416e97:	fs in  eax,dx
  416e99:	xchg   edx,eax
  416e9a:	mov    DWORD PTR [edi+eiz*8+0x3954a6b2],ebp
  416ea1:	lock mov dl,0xa0
  416ea4:	pusha  
  416ea5:	aaa    
  416ea6:	jb     0x416e8c
  416ea8:	and    cl,al
  416eaa:	shl    ecx,cl
  416eac:	in     eax,0xf9
  416eae:	xchg   ebp,eax
  416eaf:	push   0xffffff9a
  416eb1:	in     al,0x61
  416eb3:	xchg   BYTE PTR [esi+edx*4],bl
  416eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb7:	or     eax,ecx
  416eb9:	pop    eax
  416eba:	je     0x416ece
  416ebc:	sti    
  416ebd:	mov    esi,0x8c9ebf9d
  416ec2:	popf   
  416ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ec4:	adc    DWORD PTR [esi-0x12f0a434],ecx
  416eca:	cmc    
  416ecb:	int    0xa7
  416ecd:	dec    eax
  416ece:	rcr    BYTE PTR [esi],1
  416ed0:	pop    ebx
  416ed1:	sub    BYTE PTR [edx],bh
  416ed3:	outs   dx,BYTE PTR ds:[esi]
  416ed4:	or     DWORD PTR [edi-0x5a],edx
  416ed7:	xchg   edi,eax
  416ed8:	mov    ebp,0x1ec7fcd
  416edd:	and    al,0x7e
  416edf:	adc    dl,BYTE PTR [edx-0x8]
  416ee2:	inc    ebp
  416ee3:	(bad)  
  416ee4:	out    dx,eax
  416ee5:	repz xchg esi,eax
  416ee7:	adc    DWORD PTR [ecx-0x1a],eax
  416eea:	jo     0x416f47
  416eec:	addr16 test al,0x73
  416eef:	fld    TBYTE PTR [eax]
  416ef1:	jae    0x416ea8
  416ef3:	fimul  WORD PTR [ecx+0x48b24ec3]
  416ef9:	ret    
  416efa:	xchg   edx,eax
  416efb:	arpl   WORD PTR [edi],sp
  416efd:	mov    cs,WORD PTR [ebp-0x35]
  416f00:	push   ss
  416f01:	sub    eax,0x62c64984
  416f06:	dec    ebx
  416f07:	shl    BYTE PTR [edx+edi*4-0x41c22a89],1
  416f0e:	cmp    edx,DWORD PTR [edx-0x3d]
  416f11:	outs   dx,DWORD PTR ds:[esi]
  416f12:	push   esi
  416f13:	jbe    0x416f8d
  416f15:	jle    0x416ef3
  416f17:	pushf  
  416f18:	shl    BYTE PTR [ebp+edx*2+0x411881b7],cl
  416f1f:	scas   al,BYTE PTR es:[edi]
  416f20:	aas    
  416f21:	and    eax,0x17cb98b1
  416f26:	outs   dx,DWORD PTR ds:[esi]
  416f27:	into   
  416f28:	mov    dh,0xde
  416f2a:	add    edi,0xffffffdf
  416f2d:	xchg   esp,eax
  416f2e:	and    DWORD PTR [eax+edx*4],edx
  416f31:	sbb    dl,BYTE PTR [ebx+edi*1]
  416f34:	jae    0x416ee3
  416f36:	adc    ch,dl
  416f38:	cmp    al,BYTE PTR [ebx+0x318295dd]
  416f3e:	ror    DWORD PTR [esi+0x23],1
  416f41:	pop    es
  416f42:	push   ecx
  416f43:	mov    dh,0xc8
  416f45:	int    0x13
  416f47:	push   ecx
  416f48:	mov    DWORD PTR [eax+0x42592447],ebp
  416f4e:	jl     0x416f59
  416f50:	xor    eax,0x4598cb34
  416f55:	ins    BYTE PTR es:[edi],dx
  416f56:	test   al,0x93
  416f58:	push   eax
  416f59:	mov    eax,ds:0x449af524
  416f5e:	pop    esp
  416f5f:	dec    esi
  416f60:	and    DWORD PTR [ecx+0x6d],0xd4f74a4f
  416f67:	mov    ecx,DWORD PTR [edx]
  416f69:	add    BYTE PTR [edx-0x81e232d],bh
  416f6f:	add    BYTE PTR [ebp+0x4a2ab508],dl
  416f75:	lahf   
  416f76:	add    al,0x19
  416f78:	adc    al,0x33
  416f7a:	lea    esp,[esi+0x6a]
  416f7d:	mov    dh,0xb9
  416f7f:	and    ecx,DWORD PTR [edx-0x45]
  416f82:	sub    bl,dh
  416f84:	push   es
  416f85:	and    BYTE PTR [edx-0x1f],bh
  416f88:	fimul  DWORD PTR [ebp-0x23]
  416f8b:	and    eax,0x9c25c032
  416f90:	mov    dh,0xe5
  416f92:	lea    ebp,[edx]
  416f94:	lods   al,BYTE PTR ds:[esi]
  416f95:	sbb    BYTE PTR [edx-0x37],al
  416f98:	and    eax,0x64bccb87
  416f9d:	jmp    0xaefe:0x14f47fed
  416fa4:	rol    ch,0x41
  416fa7:	xor    dl,BYTE PTR [edx+0x3a2d71d9]
  416fad:	push   ebp
  416fae:	(bad)  
  416faf:	xchg   ebp,eax
  416fb0:	mov    BYTE PTR ds:0xfe50594a,0x91
  416fb7:	dec    esp
  416fb8:	fsubr  QWORD PTR [ebx-0x693fd6cb]
  416fbe:	repnz mov eax,0x557e8dad
  416fc4:	push   cs
  416fc5:	stos   BYTE PTR es:[edi],al
  416fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc7:	xchg   esi,eax
  416fc8:	out    0xc2,eax
  416fca:	pushf  
  416fcb:	mul    BYTE PTR [eax-0x13]
  416fce:	dec    esp
  416fcf:	sbb    cl,BYTE PTR [eax]
  416fd1:	dec    edi
  416fd2:	repnz push esp
  416fd4:	adc    BYTE PTR [esp+ecx*1-0x71],0xfa
  416fd9:	mov    edx,0x87328f57
  416fde:	xchg   ebx,eax
  416fdf:	sub    al,0xff
  416fe1:	inc    ebx
  416fe2:	adc    bl,BYTE PTR [edi+0x8]
  416fe5:	adc    bh,cl
  416fe7:	pushf  
  416fe8:	or     BYTE PTR [edx+edx*4],0x5
  416fec:	jp     0x41702a
  416fee:	jp     0x416fe4
  416ff0:	and    al,0x3c
  416ff2:	mov    al,ds:0x8853203e
  416ff7:	leave  
  416ff8:	rcr    ch,1
  416ffa:	or     eax,0x8909186e
  416fff:	jbe    0x41701f
  417001:	pop    ss
  417002:	mov    bh,cl
  417004:	dec    ecx
  417005:	fsubr  DWORD PTR [ecx+0x24]
  417008:	mov    esp,0x4879e33b
  41700d:	mov    BYTE PTR [ebp+0x76c7c732],dl
  417013:	mov    ecx,0xba5f9ec3
  417018:	mov    esi,0x70e40436
  41701d:	adc    bh,BYTE PTR [eax]
  41701f:	xchg   edx,eax
  417020:	jne    0x416faa
  417022:	cmp    cl,dh
  417024:	jmp    0xc0ca:0x192ba38c
  41702b:	lds    ebp,FWORD PTR [eax+0x46]
  41702e:	loope  0x417059
  417030:	sub    DWORD PTR [eax+0x1e],esp
  417033:	lods   al,BYTE PTR ds:[esi]
  417034:	and    BYTE PTR [edi],dh
  417036:	cmp    cl,ch
  417038:	loopne 0x417043
  41703a:	out    0x4f,eax
  41703c:	addr16 inc eax
  41703e:	pop    ebx
  41703f:	nop
  417040:	cld    
  417041:	int    0xe1
  417043:	jge    0x417075
  417045:	mov    dl,0x14
  417047:	adc    dl,BYTE PTR [ebx]
  417049:	dec    ebx
  41704a:	and    al,0x9c
  41704c:	fbld   TBYTE PTR [esi-0x119ec720]
  417052:	fild   DWORD PTR [ecx-0x4]
  417055:	ss pop edx
  417057:	fadd   st,st(3)
  417059:	jae    0x41709c
  41705b:	aad    0xa2
  41705d:	sbb    ebp,esi
  41705f:	(bad)  
  417060:	ins    DWORD PTR es:[edi],dx
  417061:	std    
  417062:	inc    edi
  417063:	ret    
  417064:	jle    0x416fee
  417066:	mov    ebp,0x4b9699cd
  41706b:	xor    BYTE PTR [esi-0x50],bl
  41706e:	outs   dx,DWORD PTR ds:[esi]
  41706f:	imul   ebx,DWORD PTR [esi],0x5b31ba47
  417075:	mov    WORD PTR [ebx-0x173debb3],gs
  41707b:	mov    esp,0xd6270c20
  417080:	out    0x63,eax
  417082:	dec    ebx
  417083:	xchg   BYTE PTR [edx+0xe],bh
  417086:	jno    0x41706a
  417088:	aaa    
  417089:	sub    eax,0xc19faf00
  41708e:	and    al,dh
  417090:	xor    ch,0xd
  417093:	mov    cl,0x99
  417095:	sahf   
  417096:	ins    BYTE PTR es:[edi],dx
  417097:	dec    edx
  417098:	mov    dl,0x7
  41709a:	cmp    al,0x2d
  41709c:	xchg   edx,eax
  41709d:	in     al,dx
  41709e:	popf   
  41709f:	test   esp,esp
  4170a1:	sub    DWORD PTR [edx],ecx
  4170a3:	or     al,BYTE PTR [edi+0x3e489acf]
  4170a9:	stc    
  4170aa:	sbb    eax,0x1ca60512
  4170af:	jge    0x41703a
  4170b1:	mov    bh,0x2a
  4170b3:	add    dl,BYTE PTR [ecx+0x15]
  4170b6:	repz jmp 0x3b7aa28a
  4170bc:	call   0xb8b4:0xa31212fc
  4170c3:	call   0xa4bf01c
  4170c8:	(bad)  
  4170c9:	les    edi,FWORD PTR [ebp-0x4b282004]
  4170cf:	pop    esp
  4170d0:	not    BYTE PTR [esi-0x5a]
  4170d3:	test   dl,bh
  4170d5:	shr    bh,0x5b
  4170d8:	fwait
  4170d9:	cld    
  4170da:	rol    BYTE PTR [ebx-0x33713d88],1
  4170e0:	push   edi
  4170e1:	test   BYTE PTR [edi+ebp*4],bh
  4170e4:	xor    al,0xbf
  4170e6:	dec    esp
  4170e7:	inc    esp
  4170e8:	hlt    
  4170e9:	sub    edi,ebp
  4170eb:	jo     0x4170ac
  4170ed:	pop    edi
  4170ee:	lahf   
  4170ef:	jno    0x417142
  4170f1:	cdq    
  4170f2:	daa    
  4170f3:	in     eax,dx
  4170f4:	cmp    bh,BYTE PTR [ecx-0x32315463]
  4170fa:	mov    ch,0x7c
  4170fc:	int    0x5c
  4170fe:	sbb    DWORD PTR [ebp+0x4a820fd5],ecx
  417104:	repnz adc BYTE PTR [esi-0x4269616e],ah
  41710b:	(bad)  
  41710c:	dec    ecx
  41710d:	mov    ds:0x14c32e22,eax
  417112:	stc    
  417113:	inc    esi
  417114:	dec    eax
  417115:	pop    eax
  417116:	sbb    eax,0x10709c68
  41711b:	inc    esi
  41711c:	mov    dh,0xee
  41711e:	pop    ss
  41711f:	scas   al,BYTE PTR es:[edi]
  417120:	mov    WORD PTR [edx+0x5f712797],gs
  417126:	add    eax,0x21ab4384
  41712b:	int    0xd
  41712d:	inc    esi
  41712e:	mov    ds:0x5c46dc0b,eax
  417133:	(bad)  
  417135:	out    dx,eax
  417136:	aas    
  417137:	mov    al,0xe8
  417139:	adc    ecx,DWORD PTR [edi-0x78]
  41713c:	scas   eax,DWORD PTR es:[edi]
  41713d:	or     DWORD PTR [ecx],ebp
  41713f:	shr    DWORD PTR ds:0xd900c06,1
  417145:	arpl   WORD PTR [esi-0x6bfa4c83],sp
  41714b:	gs out 0xc3,al
  41714e:	jbe    0x417133
  417150:	sub    eax,0xcb5b1f29
  417155:	fidivr WORD PTR [edx-0x5c]
  417158:	test   al,0xf7
  41715a:	mov    ds:0x83ca3be9,eax
  41715f:	push   ecx
  417160:	and    eax,0xed66f096
  417165:	aad    0x19
  417167:	mov    al,ds:0x3d5ae5
  41716c:	fsubr  DWORD PTR [ebx+0x13]
  41716f:	mov    dh,BYTE PTR [eax-0x127641d3]
  417175:	mov    ch,0xa1
  417177:	mov    ah,0x2b
  417179:	stos   BYTE PTR es:[edi],al
  41717a:	dec    edx
  41717b:	add    eax,0x49383d2e
  417180:	mov    bl,0x9
  417182:	push   esp
  417183:	xchg   ebp,eax
  417184:	pushf  
  417185:	bnd jmp 0x33035c1f
  41718b:	pop    esp
  41718c:	fwait
  41718d:	out    0xf7,al
  41718f:	mov    WORD PTR [eax-0xf],?
  417192:	pop    ss
  417193:	jmp    DWORD PTR [ecx-0x2b]
  417196:	mul    BYTE PTR [edx]
  417198:	rol    DWORD PTR [esi+eiz*8],1
  41719b:	cwde   
  41719c:	imul   esi,DWORD PTR [edi+0x2d],0xffffffde
  4171a0:	cmp    al,0x43
  4171a2:	js     0x4171c8
  4171a4:	out    dx,eax
  4171a5:	mov    ch,0x7b
  4171a7:	mov    al,ds:0xa5475745
  4171ac:	imul   edx,DWORD PTR [ecx+eax*1+0x23bd97fc],0xffffffae
  4171b4:	or     dh,bl
  4171b6:	lock data16 or ah,BYTE PTR [edi]
  4171ba:	sbb    ecx,eax
  4171bc:	mov    cl,0x26
  4171be:	mul    bh
  4171c0:	ret    0xe271
  4171c3:	das    
  4171c4:	or     BYTE PTR [eax+0x462ef335],0x4d
  4171cb:	jo     0x4171ca
  4171cd:	jnp    0x417172
  4171cf:	push   0xffffffb0
  4171d1:	mov    ds:0x8d2f7c59,eax
  4171d6:	aas    
  4171d7:	ror    DWORD PTR [ebx],cl
  4171d9:	idiv   DWORD PTR [ebp-0x1b5460f4]
  4171df:	push   esp
  4171e0:	mov    eax,0x5806cfc9
  4171e5:	sar    esp,0x79
  4171e8:	ds or  DWORD PTR ss:[eax],eax
  4171ec:	jne    0x417201
  4171ee:	adc    eax,0x96764c20
  4171f3:	dec    eax
  4171f4:	xor    cl,bh
  4171f6:	and    al,0x8f
  4171f8:	adc    di,cx
  4171fb:	cmp    eax,0x67c94a70
  417200:	addr16 dec eax
  417202:	mov    ebp,?
  417204:	cdq    
  417205:	rol    BYTE PTR [ebp-0x50c95d30],1
  41720b:	push   ebx
  41720c:	rcl    DWORD PTR [ebx],0xc8
  41720f:	cmp    BYTE PTR [ecx-0x2469c7bb],dh
  417215:	repnz pop ss
  417217:	out    0x28,al
  417219:	fld    DWORD PTR [ebx+eax*4-0x2d550708]
  417220:	dec    ecx
  417221:	add    al,0x3f
  417223:	iret   
  417224:	sbb    dh,BYTE PTR [edx]
  417226:	fs aaa 
  417228:	loopne 0x4171bf
  41722a:	test   al,0xec
  41722c:	popf   
  41722d:	ror    ecx,cl
  41722f:	cmp    BYTE PTR [ebx+0x11e00888],0xa9
  417236:	repnz inc edi
  417238:	push   ebx
  417239:	mov    ?,WORD PTR ds:0x4ff4102a
  41723f:	push   cs
  417240:	ja     0x417280
  417242:	push   ds
  417243:	shr    DWORD PTR ss:[edi],0xf3
  417247:	mov    cl,0xe
  417249:	iret   
  41724a:	add    bl,BYTE PTR [ebp+edi*4+0x63]
  41724e:	pop    esp
  41724f:	outs   dx,DWORD PTR ds:[esi]
  417250:	add    al,0xc9
  417252:	fcos   
  417254:	sbb    BYTE PTR [edi+0x13],dl
  417257:	fild   QWORD PTR [esi-0x2ec00504]
  41725d:	cmp    edi,DWORD PTR [eax+0x0]
  417260:	dec    esi
  417261:	mov    cl,0xab
  417264:	in     eax,dx
  417265:	adc    eax,0x4
  417268:	add    bl,dh
  41726a:	lea    edi,[esi]
  41726c:	iret   
  41726d:	cs xchg dl,ch
  417270:	mov    ecx,0x4a4613a6
  417275:	dec    edi
  417276:	test   al,0xee
  417278:	shl    BYTE PTR [ecx+0x46a76993],cl
  41727e:	mov    DWORD PTR [ecx+0x10402842],ebp
  417284:	jg     0x417212
  417286:	xchg   ecx,eax
  417287:	push   0x9d835ae8
  41728c:	rcr    BYTE PTR ds:0xa30c380a,0xc9
  417293:	shl    BYTE PTR [ecx],cl
  417295:	ror    DWORD PTR [eax-0x6aad3e91],cl
  41729b:	iret   
  41729c:	jmp    0xaedc:0x5282951b
  4172a3:	push   es
  4172a4:	adc    DWORD PTR [esp+eax*4+0x68],0x2
  4172a9:	mov    ss,WORD PTR [ecx+0x28]
  4172ac:	push   edi
  4172ad:	sbb    eax,0x91627e7e
  4172b2:	leave  
  4172b3:	cdq    
  4172b4:	cmc    
  4172b5:	push   ss
  4172b6:	adc    cl,BYTE PTR [esi-0x46]
  4172b9:	pop    es
  4172ba:	xlat   BYTE PTR ds:[ebx]
  4172bb:	stos   BYTE PTR es:[edi],al
  4172bc:	dec    esp
  4172bd:	jb     0x417246
  4172bf:	lds    eax,FWORD PTR [edx]
  4172c1:	jmp    0x417317
  4172c3:	mov    ebx,0x349da2b4
  4172c8:	or     esi,ebp
  4172ca:	retf   
  4172cb:	pop    ds
  4172cc:	nop
  4172cd:	popa   
  4172ce:	inc    esi
  4172cf:	daa    
  4172d0:	xlat   BYTE PTR ds:[ebx]
  4172d1:	cmp    al,0xe8
  4172d3:	test   BYTE PTR [eax],dl
  4172d5:	adc    ebx,DWORD PTR [eax+ebp*8]
  4172d8:	sbb    BYTE PTR [edx+0x77],ah
  4172db:	jnp    0x417323
  4172dd:	out    0xa8,eax
  4172df:	ret    
  4172e0:	mov    es,WORD PTR [esi-0x5136ab31]
  4172e6:	pop    esp
  4172e7:	mov    ecx,0xa72dddfd
  4172ec:	fbld   TBYTE PTR [ebp-0x57]
  4172ef:	popf   
  4172f0:	pop    esi
  4172f1:	push   es
  4172f2:	push   ds
  4172f3:	inc    ebx
  4172f4:	dec    ebp
  4172f5:	stos   DWORD PTR es:[edi],eax
  4172f6:	ret    
  4172f7:	mov    ch,0x36
  4172f9:	mov    ch,0x60
  4172fb:	xchg   DWORD PTR [ebx],eax
  4172fd:	sbb    ebx,DWORD PTR [ecx]
  4172ff:	and    ecx,eax
  417301:	sub    ebx,ebx
  417303:	fsub   QWORD PTR [eax]
  417305:	imul   esi,DWORD PTR ds:0x5850e4b1,0x5b
  41730c:	push   es
  41730d:	and    eax,0x5539bab2
  417312:	mov    dh,0x81
  417314:	mov    ds:0x23539173,al
  417319:	(bad)  
  41731a:	xchg   edx,eax
  41731b:	xor    BYTE PTR [edi+0x2b],0xf4
  41731f:	jnp    0x41734d
  417321:	push   ds
  417322:	add    BYTE PTR [ebx-0x4748ce2],dl
  417328:	xchg   BYTE PTR [ebp+ebp*1-0x1b27054d],bl
  41732f:	mov    dh,0x69
  417331:	xor    eax,0x52547d4f
  417336:	popf   
  417337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417338:	aam    0x6c
  41733a:	pop    edi
  41733b:	xor    dl,dh
  41733d:	test   BYTE PTR [ebx+0xd],ch
  417340:	push   ecx
  417341:	ds repnz push ecx
  417344:	jo     0x41738b
  417346:	xchg   ebx,eax
  417347:	pop    esp
  417348:	sub    al,0x9
  41734a:	jne    0x417381
  41734c:	adc    esi,DWORD PTR [ebx]
  41734e:	retfw  0x3a26
  417352:	adc    DWORD PTR ss:[edx],0xffffffac
  417356:	mov    ah,0x62
  417358:	aas    
  417359:	lods   al,BYTE PTR ds:[esi]
  41735a:	adc    al,0x62
  41735c:	and    al,0x85
  41735e:	jp     0x4172e6
  417360:	xchg   esp,eax
  417361:	jmp    0x3687e35d
  417366:	sub    DWORD PTR [esi+esi*1+0x1d6ca6d1],ebx
  41736d:	repnz sub BYTE PTR es:0x6336a5be,ch
  417375:	mov    ds:0xe8d52096,eax
  41737a:	cli    
  41737b:	mov    cl,0x5
  41737d:	inc    ecx
  41737e:	jns    0x41733b
  417380:	stos   BYTE PTR es:[edi],al
  417381:	aam    0x13
  417383:	ja     0x41730d
  417385:	adc    bl,BYTE PTR [esi]
  417387:	pushf  
  417388:	sub    BYTE PTR [edi],cl
  41738a:	pop    esp
  41738b:	jle    0x4173ea
  41738d:	inc    ecx
  41738e:	and    al,0x43
  417390:	dec    esi
  417391:	aas    
  417392:	mov    BYTE PTR [edi-0x7332a4b5],al
  417398:	inc    esp
  417399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739a:	and    ch,ah
  41739c:	cmp    DWORD PTR [ecx+0x128515a4],esi
  4173a2:	mov    edi,esp
  4173a4:	inc    esp
  4173a5:	mov    es,WORD PTR [ebx-0x386ba458]
  4173ab:	outs   dx,DWORD PTR ds:[esi]
  4173ac:	fsubr  DWORD PTR [edx+0x75]
  4173af:	call   0x203e:0x1bdcf3b5
  4173b6:	push   esp
  4173b7:	mov    al,BYTE PTR [esi+0x70]
  4173ba:	or     BYTE PTR [ecx],0x1f
  4173bd:	mov    esp,DWORD PTR [eax+0x16]
  4173c0:	test   eax,0x7a226b05
  4173c5:	sbb    DWORD PTR [ecx-0x72],edi
  4173c8:	cwde   
  4173c9:	lea    ecx,[ebp+eiz*2-0x4d8527c6]
  4173d0:	jo     0x4173ac
  4173d2:	popf   
  4173d3:	inc    ecx
  4173d4:	push   ecx
  4173d5:	jle    0x4173b7
  4173d7:	xchg   edx,eax
  4173d8:	sub    BYTE PTR ss:[ebx+0x38e341d6],ah
  4173df:	cmp    al,0x81
  4173e1:	das    
  4173e2:	fisttp QWORD PTR [ecx-0x72]
  4173e5:	fld    TBYTE PTR [ecx]
  4173e7:	out    dx,eax
  4173e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173e9:	rcr    BYTE PTR [ecx+0x69308b8],cl
  4173ef:	jl     0x41737f
  4173f1:	shl    BYTE PTR [edi-0x57],0x3d
  4173f5:	ss push esp
  4173f7:	xchg   ecx,eax
  4173f8:	mov    bh,0x51
  4173fa:	scas   al,BYTE PTR es:[edi]
  4173fb:	xor    al,0x84
  4173fd:	cmc    
  4173fe:	xlat   BYTE PTR ds:[ebx]
  4173ff:	daa    
  417400:	fdecstp 
  417402:	xchg   esi,eax
  417403:	out    dx,eax
  417404:	cmp    eax,0xc6f43c06
  417409:	pop    es
  41740a:	adc    DWORD PTR ds:0x81a34e03,ebx
  417410:	inc    ebx
  417411:	adc    ah,BYTE PTR [ebx-0x7da74e4a]
  417417:	cmp    bh,BYTE PTR [esi]
  417419:	or     al,0x4e
  41741b:	mov    ecx,0x58e41c1f
  417420:	aam    0x3b
  417422:	imul   ecx,DWORD PTR [eax],0xfffffffd
  417425:	inc    eax
  417426:	or     cl,BYTE PTR [ebx]
  417428:	xlat   BYTE PTR ds:[ebx]
  417429:	mov    ah,BYTE PTR [eax+0x62]
  41742c:	test   BYTE PTR [eax],0x7e
  41742f:	stc    
  417430:	rcr    esp,cl
  417432:	fisubr DWORD PTR [ebp+0x58]
  417435:	in     al,0xd
  417437:	mov    edi,0x72d0260c
  41743c:	test   BYTE PTR [ebp-0x11c2688e],0xee
  417443:	(bad)  
  417445:	adc    al,0x4a
  417447:	fidivr WORD PTR [ecx+ebx*2]
  41744a:	mov    al,0x9e
  41744c:	or     dl,BYTE PTR [ebx-0x27c73d7f]
  417452:	jmp    0x417462
  417454:	int3   
  417455:	xor    BYTE PTR [ecx+0x33],ah
  417458:	aas    
  417459:	stos   DWORD PTR es:[edi],eax
  41745a:	and    BYTE PTR [ecx],al
  41745c:	push   ss
  41745d:	(bad)  
  41745e:	(bad)  
  417460:	cld    
  417461:	(bad)  
  417463:	cmp    al,0x3
  417465:	xchg   ecx,eax
  417466:	scas   al,BYTE PTR es:[edi]
  417467:	xchg   ebp,eax
  417468:	or     esi,DWORD PTR [ecx+0x2b]
  41746b:	push   0x3806e067
  417470:	sti    
  417471:	mov    ecx,0xb3af7862
  417476:	pop    ecx
  417477:	xchg   DWORD PTR [esi-0x1f],ecx
  41747a:	ds fdivr st,st(7)
  41747d:	nop
  41747e:	add    cl,ch
  417480:	lea    edx,[edi]
  417482:	adc    DWORD PTR [esi-0x7941ddcf],0x53
  417489:	or     eax,0x1f714286
  41748e:	jnp    0x4174f0
  417490:	xor    BYTE PTR [edi-0x2c],ah
  417493:	aaa    
  417494:	mov    edi,DWORD PTR [ecx-0x5668b53f]
  41749a:	mov    ch,0xf6
  41749c:	out    dx,eax
  41749d:	into   
  41749e:	mov    ds,WORD PTR [ebp-0x71]
  4174a1:	(bad)  
  4174a2:	dec    esp
  4174a3:	xchg   DWORD PTR [esi-0x27e25c5e],edx
  4174a9:	(bad)  
  4174aa:	nop/reserved BYTE PTR [ebx]
  4174ad:	sbb    esi,DWORD PTR [esi+ebp*1]
  4174b0:	add    BYTE PTR [ebp-0x795eed1d],cl
  4174b6:	dec    ecx
  4174b7:	test   eax,0x145f566a
  4174bc:	sbb    al,0x1f
  4174be:	xchg   ebp,eax
  4174bf:	xor    al,0xf7
  4174c1:	test   BYTE PTR [eax-0x7e3819ae],ch
  4174c7:	pop    esp
  4174c8:	mov    ebp,0x3f0f1770
  4174cd:	jb     0x4174f6
  4174cf:	xchg   ebp,eax
  4174d0:	pop    ds
  4174d1:	shl    DWORD PTR [eax+0x47cfc82e],1
  4174d7:	jo     0x417554
  4174d9:	sub    al,0x4c
  4174db:	add    ch,BYTE PTR [ecx+0x1009177b]
  4174e1:	adc    ebx,0x15bb251
  4174e7:	(bad)  
  4174e9:	cdq    
  4174ea:	dec    ebp
  4174eb:	(bad)  
  4174ec:	xchg   edi,eax
  4174ed:	pop    ebp
  4174ee:	cmp    eax,0x4b4f9975
  4174f3:	mov    edi,edx
  4174f5:	cmp    BYTE PTR [eax-0x53],al
  4174f8:	or     eax,0x4e4533f8
  4174fd:	xchg   edi,eax
  4174fe:	cmp    al,0xc9
  417500:	into   
  417501:	cmp    al,0x87
  417503:	dec    ebx
  417504:	and    al,0x1f
  417506:	outs   dx,BYTE PTR ds:[esi]
  417507:	outs   dx,BYTE PTR ds:[esi]
  417508:	cli    
  417509:	aas    
  41750a:	ja     0x417534
  41750c:	xor    al,0xbf
  41750e:	adc    edi,DWORD PTR [eax*2-0x10a631cc]
  417515:	push   cs
  417516:	mov    ch,BYTE PTR [edx]
  417518:	inc    edi
  417519:	pusha  
  41751a:	ret    
  41751b:	and    ch,BYTE PTR [ebx-0x74]
  41751e:	pop    es
  41751f:	jecxz  0x417554
  417521:	mov    dl,0x99
  417523:	mov    cl,0xa
  417525:	out    0xff,eax
  417527:	pop    esi
  417528:	outs   dx,BYTE PTR ds:[esi]
  417529:	sbb    al,0x1a
  41752b:	int    0xe5
  41752d:	data16 mov ah,0xc9
  417530:	mov    cl,0xe6
  417532:	inc    ecx
  417533:	inc    edx
  417534:	mov    cl,0x6d
  417536:	mov    ch,0xa4
  417538:	pop    edx
  417539:	jl     0x4174fd
  41753b:	es inc eax
  41753d:	ret    
  41753e:	aaa    
  41753f:	mov    edi,?
  417541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417542:	jo     0x417529
  417544:	xchg   edx,eax
  417545:	pop    esp
  417546:	cli    
  417547:	stc    
  417548:	(bad)  
  417549:	jb     0x41759e
  41754b:	arpl   sp,ax
  41754d:	push   edi
  41754e:	mov    fs,edx
  417550:	div    BYTE PTR [eax-0x40]
  417553:	into   
  417554:	and    DWORD PTR [esi],0xc6be28d0
  41755a:	in     al,dx
  41755b:	or     al,0x2b
  41755d:	(bad)  
  41755e:	enter  0xac25,0x4e
  417562:	stc    
  417563:	leave  
  417564:	inc    eax
  417565:	dec    eax
  417566:	pop    ecx
  417567:	add    al,ah
  417569:	pop    edx
  41756a:	es or  eax,0x419a5c03
  417570:	mov    ds:0x8575bb72,eax
  417575:	outs   dx,DWORD PTR ds:[esi]
  417576:	xor    eax,esi
  417578:	push   ebx
  417579:	push   eax
  41757a:	icebp  
  41757b:	(bad)  
  41757c:	bnd jmp 0xa2d8683
  417582:	int3   
  417583:	push   edi
  417584:	outs   dx,BYTE PTR ds:[esi]
  417585:	mov    ecx,0x88a091a8
  41758a:	jl     0x41759c
  41758c:	cmp    bh,BYTE PTR [edx-0x44]
  41758f:	jl     0x41756e
  417591:	pop    esp
  417592:	dec    ebp
  417593:	inc    eax
  417594:	fnsave [ecx+eiz*1+0x166e587e]
  41759b:	clc    
  41759c:	stc    
  41759d:	inc    ebx
  41759e:	fld    st(7)
  4175a0:	inc    ebx
  4175a1:	test   DWORD PTR [ecx-0x5d],0xe52100c3
  4175a8:	or     ebp,eax
  4175aa:	jmp    0xb3fc:0xcb5b4726
  4175b1:	aaa    
  4175b2:	and    BYTE PTR [esi-0x74],dl
  4175b5:	sub    BYTE PTR [ebp-0x7f],bl
  4175b8:	xchg   edi,eax
  4175b9:	aaa    
  4175ba:	push   0xb213a47d
  4175bf:	scas   al,BYTE PTR es:[edi]
  4175c0:	bound  ebp,QWORD PTR [ecx+edi*2+0x63]
  4175c4:	and    ah,dh
  4175c6:	(bad)  
  4175c8:	pop    esp
  4175c9:	repnz arpl WORD PTR [ecx+eax*4],cx
  4175cd:	test   al,0x7d
  4175cf:	(bad)  
  4175d0:	jns    0x417645
  4175d2:	and    eax,esp
  4175d4:	cmp    esi,DWORD PTR [edi-0x67]
  4175d7:	sub    al,0x33
  4175d9:	loope  0x4175c9
  4175db:	lea    esi,[ecx+ecx*8]
  4175de:	(bad)  
  4175df:	fdivr  st(6),st
  4175e1:	mov    dl,bh
  4175e3:	adc    ah,BYTE PTR [ebx+0x49]
  4175e6:	xor    esi,DWORD PTR [ebx]
  4175e8:	jo     0x41757d
  4175ea:	dec    eax
  4175eb:	xor    BYTE PTR [eax],al
  4175ed:	lods   al,BYTE PTR ds:[esi]
  4175ee:	addr16 cdq 
  4175f0:	int3   
  4175f1:	inc    esi
  4175f2:	ins    DWORD PTR es:[edi],dx
  4175f3:	imul   esp,DWORD PTR [ecx-0xa2d7a2d],0xf415a472
  4175fd:	loop   0x41759a
  4175ff:	push   ds
  417600:	push   eax
  417601:	push   di
  417603:	jno    0x417593
  417605:	fcom   QWORD PTR [esi-0x1]
  417608:	outs   dx,BYTE PTR ds:[esi]
  417609:	pop    edx
  41760a:	ja     0x4175d2
  41760c:	sbb    al,0xe7
  41760e:	iret   
  41760f:	jb     0x417631
  417611:	jg     0x4175e2
  417613:	sbb    al,dh
  417615:	cmp    eax,0x686478ca
  41761a:	daa    
  41761b:	test   DWORD PTR [edi-0x4fee9652],esi
  417621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417622:	out    dx,eax
  417623:	push   0xffffff90
  417625:	pop    ss
  417626:	ja     0x4175d5
  417628:	cmp    al,0xf8
  41762a:	and    ebp,eax
  41762c:	in     al,0x53
  41762e:	sti    
  41762f:	pop    edi
  417630:	arpl   sp,cx
  417632:	push   ds
  417633:	mov    bl,BYTE PTR [esp+eax*4-0x5c2c0256]
  41763a:	cmc    
  41763b:	cmp    dl,BYTE PTR [ecx+0x17f389b5]
  417641:	lds    edi,FWORD PTR [eax+ebp*4+0x16bba6f4]
  417648:	add    dl,BYTE PTR [eax-0x5a]
  41764b:	call   0x5190:0xd978a41d
  417652:	mov    esp,0x9639011b
  417657:	fwait
  417658:	sbb    DWORD PTR [edx+esi*2],ecx
  41765b:	test   dh,bh
  41765d:	je     0x41767c
  41765f:	cli    
  417660:	or     edx,eax
  417662:	inc    esi
  417663:	xchg   edi,eax
  417664:	push   ecx
  417665:	cmp    al,0x7
  417667:	xor    eax,0x71038441
  41766c:	mov    ecx,0xc912927a
  417671:	pop    edi
  417672:	add    al,0xc1
  417674:	jne    0x4175ff
  417676:	pushf  
  417677:	(bad)  
  417678:	lea    ebp,[edi-0x61]
  41767b:	inc    edi
  41767c:	fsubr  st,st(6)
  41767e:	xchg   edi,eax
  41767f:	test   BYTE PTR [edi+0x1f],dh
  417682:	pusha  
  417683:	(bad)  
  417684:	(bad)  
  417685:	(bad)  
  417687:	loopne 0x41761b
  417689:	xor    BYTE PTR [ebx],cl
  41768b:	lock bound esp,QWORD PTR [edi]
  41768e:	sub    BYTE PTR [esi+0x3e635703],0xd4
  417695:	mov    ebx,0x551edd62
  41769a:	mov    dh,0xa0
  41769c:	sar    BYTE PTR [esi-0x66],1
  41769f:	xchg   esp,eax
  4176a0:	call   0x824c:0x5cc1a0c1
  4176a7:	add    bl,ah
  4176a9:	aas    
  4176aa:	adc    DWORD PTR [ebx+0x2e22f672],esi
  4176b0:	xor    esp,DWORD PTR [eax-0x526b80f4]
  4176b6:	mov    ebp,0xfccab89e
  4176bb:	pop    esp
  4176bc:	pop    eax
  4176bd:	popf   
  4176be:	add    al,0xeb
  4176c0:	mov    ch,0xee
  4176c2:	sub    DWORD PTR [ebp-0x1b5ab7ca],esp
  4176c8:	fnsave [esi]
  4176ca:	fmul   QWORD PTR [eax+eax*2-0x3]
  4176ce:	psraw  mm3,QWORD PTR [edi]
  4176d1:	addr16 cdq 
  4176d3:	cmp    al,0x1f
  4176d5:	push   ss
  4176d6:	push   eax
  4176d7:	cmp    al,BYTE PTR ds:0x20838839
  4176dd:	cmp    al,0x6c
  4176df:	xchg   ebx,eax
  4176e0:	mov    ch,0xb3
  4176e2:	add    edx,0x29
  4176e5:	add    al,0x9e
  4176e7:	mov    eax,ds:0x6ddc4425
  4176ec:	fcom   QWORD PTR [esp+0x4dc4a41f]
  4176f3:	ret    0xbcd3
  4176f6:	test   al,0xf6
  4176f8:	jl     0x4176d5
  4176fa:	into   
  4176fb:	cmp    esi,DWORD PTR [esi+0x5cbb6759]
  417701:	add    eax,DWORD PTR [esi]
  417703:	cmp    edx,edx
  417705:	mov    dh,0x69
  417707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417708:	into   
  417709:	call   0xd0ce:0xa4bd60c4
  417710:	mov    ebp,0x7a4d1c64
  417715:	leave  
  417716:	adc    ah,BYTE PTR [esi+0x5c64ab35]
  41771c:	loop   0x4176aa
  41771e:	or     BYTE PTR [ecx+ebp*1-0x45],dl
  417722:	ss test eax,0x39041077
  417728:	mov    bh,0x30
  41772a:	pop    eax
  41772b:	or     ebp,DWORD PTR [edi]
  41772d:	outs   dx,BYTE PTR ds:[esi]
  41772e:	mov    al,ds:0x4ba619f3
  417733:	mov    bh,0xce
  417735:	and    eax,esi
  417737:	imul   eax,DWORD PTR [esi-0x2ab73a51],0x76f5e106
  417741:	neg    BYTE PTR [ecx+0x75]
  417744:	stos   BYTE PTR es:[edi],al
  417745:	adc    bl,BYTE PTR [esi]
  417747:	jecxz  0x4176c9
  417749:	ror    ebx,cl
  41774b:	jo     0x417795
  41774d:	adc    al,0x31
  41774f:	cld    
  417750:	jle    0x4177a4
  417752:	add    eax,0xe2067c62
  417757:	fcmovbe st,st(4)
  417759:	or     eax,0x8b2fba70
  41775e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41775f:	add    ebx,DWORD PTR [esi-0x29d67809]
  417765:	aas    
  417766:	mov    al,0xa6
  417768:	inc    ebp
  417769:	xchg   ecx,eax
  41776a:	dec    eax
  41776b:	shr    DWORD PTR [ecx],cl
  41776d:	jl     0x4176f4
  41776f:	or     bl,BYTE PTR [ebx-0x41802c9e]
  417775:	ins    DWORD PTR es:[edi],dx
  417776:	jne    0x4177ce
  417778:	mov    esi,0x2e52785a
  41777d:	adc    DWORD PTR [ecx+0x9],eax
  417780:	push   ebx
  417781:	retf   0xc9eb
  417784:	mov    ebp,0xcadd40eb
  417789:	push   es
  41778a:	mov    al,ds:0xc2db33ac
  41778f:	dec    edi
  417790:	jge    0x4177e6
  417792:	mov    BYTE PTR [edi],ah
  417794:	mov    dh,0xb6
  417796:	ins    DWORD PTR es:[edi],dx
  417797:	stos   DWORD PTR es:[edi],eax
  417798:	add    al,0x9d
  41779a:	fcomp  QWORD PTR [edx+0x28c02105]
  4177a0:	fst    st(4)
  4177a2:	ss xor dh,al
  4177a5:	jb     0x4177d2
  4177a7:	mov    ebp,0xb1cea69a
  4177ac:	nop
  4177ad:	sbb    DWORD PTR [edx+0x12b0fdac],eax
  4177b3:	lods   eax,DWORD PTR ds:[esi]
  4177b4:	fdivr  st(6),st
  4177b6:	inc    eax
  4177b7:	test   al,0xc7
  4177b9:	(bad)  
  4177ba:	aam    0xb7
  4177bc:	outs   dx,DWORD PTR ds:[esi]
  4177bd:	mov    bl,0xe0
  4177bf:	inc    eax
  4177c0:	ret    0x1d4f
  4177c3:	fistp  DWORD PTR [esi+eiz*2]
  4177c6:	xchg   ecx,edi
  4177c8:	scas   eax,DWORD PTR es:[edi]
  4177c9:	(bad)  
  4177ca:	iret   
  4177cb:	(bad)  
  4177cc:	add    al,0xf9
  4177ce:	push   ebp
  4177cf:	add    edi,DWORD PTR [edi+0x2a85afcb]
  4177d5:	das    
  4177d6:	dec    eax
  4177d7:	pushf  
  4177d8:	mov    esi,0xa8bdd662
  4177dd:	sbb    dl,BYTE PTR [ecx*1-0x58b7152c]
  4177e4:	fisttp QWORD PTR [eax+0x52]
  4177e7:	call   0x7c3a3354
  4177ec:	cmp    al,dl
  4177ee:	cmp    edi,DWORD PTR [ebx]
  4177f0:	fcomip st,st(3)
  4177f2:	jne    0x417859
  4177f4:	mov    ds:0xac619c6d,eax
  4177f9:	cmp    ebp,eax
  4177fb:	sbb    edx,0x9f536cdc
  417801:	mov    BYTE PTR [ecx-0x61e7075f],ch
  417807:	shl    DWORD PTR [esi-0x2d],cl
  41780a:	cld    
  41780b:	cwde   
  41780c:	jns    0x417801
  41780e:	pop    ds
  41780f:	pop    ss
  417810:	push   ebx
  417811:	(bad)  
  417812:	loopne 0x4177a3
  417814:	jnp    0x4177fb
  417816:	xor    bh,BYTE PTR [ebx+0x7a6c7bbf]
  41781c:	sbb    al,0xc4
  41781e:	(bad)  
  417820:	jb     0x41786b
  417822:	es ja  0x4177bb
  417825:	inc    esi
  417826:	sub    edi,DWORD PTR [edx-0x38e2f73f]
  41782c:	mov    ah,0x34
  41782e:	sub    eax,0x667b8e1e
  417833:	lods   al,BYTE PTR ds:[esi]
  417834:	jecxz  0x417891
  417836:	sbb    al,0x96
  417838:	dec    esi
  417839:	jp     0x4177c1
  41783b:	jns    0x4178a4
  41783d:	enter  0x90a2,0xa7
  417841:	std    
  417842:	maxps  xmm5,XMMWORD PTR [edi]
  417845:	in     eax,0x71
  417847:	je     0x41783a
  417849:	dec    edi
  41784a:	sbb    eax,0x9f695ef2
  41784f:	in     eax,dx
  417850:	sahf   
  417851:	lds    edi,FWORD PTR [ecx-0x61]
  417854:	xor    BYTE PTR [edx+eax*2-0x23],bh
  417858:	sub    al,0x9f
  41785a:	xor    bh,BYTE PTR [eax+eax*1-0xfa6a62b]
  417861:	xlat   BYTE PTR ds:[ebx]
  417862:	pop    edx
  417863:	popf   
  417864:	out    dx,al
  417865:	cmc    
  417866:	clc    
  417867:	xor    ecx,DWORD PTR [ebx]
  417869:	lods   al,BYTE PTR ds:[esi]
  41786a:	aaa    
  41786b:	inc    eax
  41786c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41786d:	xor    eax,0x275dae50
  417872:	test   edx,esp
  417874:	lods   al,BYTE PTR ds:[esi]
  417875:	jge    0x4178af
  417877:	gs ja  0x41782a
  41787a:	ins    DWORD PTR es:[edi],dx
  41787b:	mov    al,ds:0x28f18a10
  417880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417881:	pop    esi
  417882:	and    DWORD PTR [esi+0x74cb7e45],edx
  417888:	outs   dx,DWORD PTR ds:[esi]
  417889:	sub    DWORD PTR [ebp+0x2c],esp
  41788c:	arpl   WORD PTR [edx+0x45],bx
  41788f:	loopne 0x41782f
  417891:	adc    al,0x7a
  417893:	pop    ecx
  417894:	inc    edx
  417895:	push   es
  417896:	lea    esp,[ecx-0x49]
  417899:	lods   eax,DWORD PTR ds:[esi]
  41789a:	cld    
  41789b:	shl    BYTE PTR [ecx],0xa9
  41789e:	mov    ebp,DWORD PTR [edx]
  4178a0:	aad    0xe4
  4178a2:	iret   
  4178a3:	rcl    DWORD PTR [ebx],0x4b
  4178a6:	jl     0x4178e6
  4178a8:	xor    esp,esp
  4178aa:	addr16 cmp bl,dh
  4178ad:	dec    edi
  4178ae:	and    BYTE PTR [ecx],0x1e
  4178b1:	lods   eax,DWORD PTR ds:[esi]
  4178b2:	call   0x3dab78e2
  4178b7:	call   0x575da325
  4178bc:	push   edi
  4178bd:	pusha  
  4178be:	or     ch,BYTE PTR [ebp+ebp*2+0x18]
  4178c2:	push   ebp
  4178c3:	shr    ebp,cl
  4178c5:	and    DWORD PTR [esi+0x12],0x32
  4178c9:	icebp  
  4178ca:	mov    al,0x61
  4178cc:	ins    DWORD PTR es:[edi],dx
  4178cd:	fdiv   st(2),st
  4178cf:	(bad)  
  4178d0:	fldcw  WORD PTR [ebx+eax*1-0x5c]
  4178d4:	adc    ch,dl
  4178d6:	xchg   ebx,eax
  4178d7:	push   cs
  4178d8:	or     al,BYTE PTR [esi+eiz*8]
  4178db:	mov    dl,0x8d
  4178dd:	adc    eax,0x7d0780f6
  4178e2:	push   ebx
  4178e3:	sbb    al,0x1
  4178e5:	dec    esi
  4178e6:	repnz (bad) 
  4178e8:	js     0x417967
  4178ea:	mov    al,ds:0x84503e1c
  4178ef:	mov    ah,0xff
  4178f1:	lea    ebx,[edi+0x63409b8c]
  4178f7:	add    dl,BYTE PTR [esi]
  4178f9:	and    dh,BYTE PTR [edx+0x37ac3bc0]
  4178ff:	rcr    BYTE PTR [ebp+ebx*8+0x72e67fe5],0xf1
  417907:	shr    DWORD PTR [edx],1
  417909:	test   DWORD PTR [eax+0x22],0xe1c45582
  417910:	aaa    
  417911:	pop    ebx
  417912:	push   edx
  417913:	daa    
  417914:	push   ds
  417915:	push   eax
  417916:	in     al,0x9b
  417918:	test   DWORD PTR [ebx+0x6c],0xb858714f
  41791f:	ret    0xf4b4
  417922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417923:	out    dx,eax
  417924:	push   0xf0be3644
  417929:	dec    edx
  41792a:	inc    edi
  41792b:	fistp  WORD PTR [esi-0x5d]
  41792e:	outs   dx,DWORD PTR ds:[esi]
  41792f:	sahf   
  417930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417931:	dec    esi
  417932:	addr16 pop ebp
  417934:	dec    ebp
  417935:	inc    ecx
  417936:	add    edi,DWORD PTR [ecx-0x3ef76d2a]
  41793c:	xchg   ebp,eax
  41793d:	stos   BYTE PTR es:[edi],al
  41793e:	mov    eax,0x3c4b1fbc
  417943:	mov    ah,BYTE PTR [ebx-0x4e]
  417946:	out    0x83,al
  417948:	dec    esi
  417949:	ins    DWORD PTR es:[edi],dx
  41794a:	and    eax,esi
  41794c:	lock mov ds:0x747e98d7,eax
  417952:	xor    bh,BYTE PTR [edx]
  417954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417955:	pop    edx
  417956:	sahf   
  417957:	pop    esi
  417958:	out    dx,al
  417959:	(bad)  
  41795a:	lahf   
  41795b:	(bad)  
  41795c:	ret    0x8859
  41795f:	stos   BYTE PTR es:[edi],al
  417960:	mov    BYTE PTR [esp+ebx*4-0x60],cl
  417964:	push   ecx
  417965:	push   edi
  417967:	mov    ebx,0xbfb41817
  41796c:	cdq    
  41796d:	jb     0x41794d
  41796f:	ror    ecx,cl
  417971:	mov    cl,0x73
  417973:	xor    DWORD PTR [edi],ebx
  417975:	and    eax,0x54c0eae3
  41797a:	dec    esi
  41797b:	ret    0x672a
  41797e:	or     al,0x87
  417980:	icebp  
  417981:	jl     0x417997
  417983:	popa   
  417984:	in     eax,dx
  417985:	and    bl,0x94
  417988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417989:	in     al,dx
  41798a:	cmp    al,0x24
  41798c:	cwde   
  41798d:	xchg   edx,eax
  41798e:	aam    0x24
  417990:	push   ds
  417991:	je     0x4179ec
  417993:	ret    0xe307
  417996:	pusha  
  417997:	xchg   esp,eax
  417998:	pop    ss
  417999:	inc    esp
  41799a:	push   esp
  41799b:	sbb    al,0x14
  41799d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799e:	xor    al,0x32
  4179a0:	pushf  
  4179a1:	push   eax
  4179a2:	jle    0x4179bd
  4179a4:	sub    BYTE PTR [ebx+0x7a],ah
  4179a7:	inc    eax
  4179a8:	(bad)
  4179ab:	cmp    DWORD PTR [ebx-0x5ab658c5],0x12
  4179b2:	mov    ds:0x7d3ff46d,al
  4179b7:	popa   
  4179b8:	dec    ebp
  4179b9:	ds je  0x4179f3
  4179bc:	inc    ecx
  4179bd:	push   ds
  4179be:	lods   al,BYTE PTR ds:[esi]
  4179bf:	sbb    bl,BYTE PTR [ebx+0x441d9663]
  4179c5:	lds    esi,FWORD PTR [ecx-0x2f011855]
  4179cb:	cs xchg ebp,eax
  4179cd:	daa    
  4179ce:	loop   0x417950
  4179d0:	mov    ch,ch
  4179d2:	fs mov ah,0xf4
  4179d5:	inc    ebp
  4179d6:	imul   DWORD PTR [ecx+0x31]
  4179d9:	pop    esp
  4179da:	adc    al,0xfb
  4179dc:	pop    es
  4179dd:	mov    eax,0xf6079634
  4179e2:	cmp    DWORD PTR [ecx+0x41],0x8cca5491
  4179e9:	mov    dh,0x20
  4179eb:	aas    
  4179ec:	mov    esi,0x37ecc03e
  4179f1:	mov    ebp,0x3b1f757f
  4179f6:	ss dec ebp
  4179f8:	adc    eax,DWORD PTR [eax-0x7a]
  4179fb:	sub    bh,ch
  4179fd:	or     BYTE PTR [edx-0x6e7c95ab],dh
  417a03:	cwde   
  417a04:	jnp    0x4179e7
  417a06:	ds jnp 0x4179a4
  417a09:	xor    dl,BYTE PTR [edx]
  417a0b:	fistp  WORD PTR [edi]
  417a0d:	fwait
  417a0e:	inc    edx
  417a0f:	push   ecx
  417a10:	jl     0x417a03
  417a12:	and    cl,BYTE PTR [ebx-0x27]
  417a15:	sti    
  417a16:	mov    al,ds:0x39c2409d
  417a1b:	ja     0x417a38
  417a1d:	inc    eax
  417a1e:	pop    ebp
  417a1f:	xchg   ecx,eax
  417a20:	adc    ah,0xc0
  417a23:	inc    ebp
  417a24:	sub    BYTE PTR [edi+0x6cbe38c9],dh
  417a2a:	xchg   esi,eax
  417a2b:	scas   eax,DWORD PTR es:[edi]
  417a2c:	xchg   ecx,eax
  417a2d:	iret   
  417a2e:	cmp    al,0xc3
  417a30:	imul   eax,DWORD PTR [esi-0x61788554],0x24
  417a37:	xchg   esi,eax
  417a38:	ret    
  417a39:	xor    eax,0x3c873a6
  417a3e:	cmp    eax,0x49bd278e
  417a43:	stos   DWORD PTR es:[edi],eax
  417a44:	push   ebx
  417a45:	or     DWORD PTR [ebx-0x3f66b70e],0x63
  417a4c:	mov    ecx,0x307d6652
  417a51:	(bad)  
  417a52:	neg    DWORD PTR [ebx-0x68]
  417a55:	jmp    0x4179f9
  417a57:	sub    al,BYTE PTR [edx-0x2b469f0d]
  417a5d:	xchg   esi,eax
  417a5e:	xchg   DWORD PTR [ebx+0x24c5ebdb],esp
  417a64:	ror    edi,0xeb
  417a67:	shl    DWORD PTR [ebp+eax*8+0x28],1
  417a6b:	shl    DWORD PTR [ecx-0x37eb989f],cl
  417a71:	sub    eax,0x4b12d0a6
  417a76:	cmp    eax,0x836742a0
  417a7b:	pop    eax
  417a7c:	stos   DWORD PTR es:[edi],eax
  417a7d:	stos   DWORD PTR es:[edi],eax
  417a7e:	push   esp
  417a7f:	push   esi
  417a80:	sbb    eax,0x3c
  417a83:	scas   eax,DWORD PTR es:[edi]
  417a84:	pop    ecx
  417a85:	push   ss
  417a86:	mov    ebp,0xd08e1acc
  417a8b:	sahf   
  417a8c:	mov    ss,WORD PTR [ebx+esi*2-0x424713e1]
  417a93:	js     0x417ae3
  417a95:	sub    edi,edx
  417a97:	push   cs
  417a98:	sbb    ebx,DWORD PTR [edi+ebp*1+0xc]
  417a9c:	in     eax,0xb2
  417a9e:	fs icebp 
  417aa0:	push   esi
  417aa1:	cmp    bh,ch
  417aa3:	sub    al,0xb0
  417aa5:	cmc    
  417aa6:	cs jl  0x417a80
  417aa9:	and    ebx,DWORD PTR [eax-0x2934b65f]
  417aaf:	mov    dh,BYTE PTR [edx+0x7217f660]
  417ab5:	loopne 0x417b32
  417ab7:	dec    ebx
  417ab8:	xor    DWORD PTR [ebx+0x44],esi
  417abb:	loopne 0x417ae1
  417abd:	sub    DWORD PTR [esi],ebx
  417abf:	sbb    BYTE PTR [ebp-0x3edbeb98],ah
  417ac5:	mov    bh,0x13
  417ac7:	lods   al,BYTE PTR ds:[esi]
  417ac8:	cli    
  417ac9:	std    
  417aca:	dec    esp
  417acb:	ins    BYTE PTR es:[edi],dx
  417acc:	iret   
  417acd:	mov    esi,0xf723524a
  417ad2:	outs   dx,BYTE PTR ds:[esi]
  417ad3:	stos   BYTE PTR es:[edi],al
  417ad4:	in     eax,dx
  417ad5:	enter  0x3c2e,0xaf
  417ad9:	sub    al,0xa4
  417adb:	in     al,0x26
  417add:	or     al,BYTE PTR [ebx-0x43]
  417ae0:	pop    ecx
  417ae1:	jmp    0x785a53bb
  417ae6:	sub    BYTE PTR [ebp+0x1767bace],dh
  417aec:	xchg   ebp,eax
  417aed:	dec    edx
  417aee:	lahf   
  417aef:	(bad)  
  417af0:	test   DWORD PTR [eax],0xcb560103
  417af6:	add    esp,ecx
  417af8:	sbb    al,0x1b
  417afa:	push   ecx
  417afb:	sbb    DWORD PTR [eax],0xffffff99
  417afe:	(bad)  [eax+0x6d]
  417b01:	sub    DWORD PTR ds:0x28aba1e8,ebx
  417b07:	pop    ds
  417b08:	and    BYTE PTR [edx-0x1629f6d3],al
  417b0e:	dec    bx
  417b10:	inc    ebp
  417b11:	sar    DWORD PTR [edi-0x63],cl
  417b14:	arpl   WORD PTR [edi],di
  417b16:	ret    
  417b17:	lock ins DWORD PTR es:[edi],dx
  417b19:	sar    BYTE PTR [ecx-0x73],1
  417b1c:	jne    0x417b0b
  417b1e:	dec    ecx
  417b1f:	lock push edx
  417b21:	int    0x6b
  417b23:	(bad)  
  417b25:	push   0x64c5e2d4
  417b2a:	pop    es
  417b2b:	ret    
  417b2c:	and    DWORD PTR [ebx-0x7b0a28dc],edx
  417b32:	sbb    al,0x47
  417b34:	inc    eax
  417b35:	std    
  417b36:	sub    al,0xe9
  417b38:	test   eax,0x86477f8
  417b3d:	fsubp  st(3),st
  417b3f:	pop    esi
  417b40:	dec    esi
  417b41:	mov    ecx,0x8240b84d
  417b46:	cmp    eax,0xba243cfb
  417b4b:	cmc    
  417b4c:	mov    dh,0x8e
  417b4e:	sub    esp,ebp
  417b50:	add    DWORD PTR [ebp-0x345fc859],esp
  417b56:	mov    al,ds:0xc2982b88
  417b5b:	jnp    0x417b2a
  417b5d:	add    DWORD PTR [edi+0x18],eax
  417b60:	add    eax,0x3778ae10
  417b65:	xchg   DWORD PTR [eax-0x45fe9f03],edi
  417b6b:	mov    dl,0xa0
  417b6e:	enter  0x73b3,0x27
  417b72:	sahf   
  417b73:	pop    ds
  417b74:	iret   
  417b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b76:	addr16 inc esp
  417b78:	add    al,0x43
  417b7a:	add    ebx,DWORD PTR [edi]
  417b7c:	push   esp
  417b7d:	dec    esp
  417b7e:	cs inc ecx
  417b80:	comiss xmm7,DWORD PTR [edi]
  417b83:	into   
  417b84:	daa    
  417b85:	shl    BYTE PTR [ebx-0x1],cl
  417b88:	outs   dx,DWORD PTR ds:[esi]
  417b89:	xchg   dh,ch
  417b8b:	push   es
  417b8c:	sbb    ax,0x9cb3
  417b90:	sub    DWORD PTR [eax+0x67],ebx
  417b93:	mov    ebx,0xa4fa888b
  417b98:	and    eax,0x4ab5c8bd
  417b9d:	jno    0x417b2b
  417b9f:	mov    al,0x8c
  417ba1:	in     eax,dx
  417ba2:	ret    
  417ba3:	sbb    ecx,esi
  417ba5:	(bad)  
  417ba7:	mov    BYTE PTR [ecx],0x2e
  417baa:	mov    ch,BYTE PTR [eax-0x7c]
  417bad:	xchg   ebx,eax
  417bae:	push   esp
  417baf:	jbe    0x417be7
  417bb1:	imul   edx,DWORD PTR [ebx],0x68e28b85
  417bb7:	or     eax,0x2abc443f
  417bbc:	ds int 0x9a
  417bbf:	and    ah,cl
  417bc1:	adc    al,0x1f
  417bc3:	jb     0x417b88
  417bc5:	jge    0x417bdd
  417bc7:	outs   dx,DWORD PTR ds:[esi]
  417bc8:	int3   
  417bc9:	sbb    esp,edi
  417bcb:	popf   
  417bcc:	jmp    0x3e68c876
  417bd1:	in     al,dx
  417bd2:	imul   ebx,DWORD PTR [eax+0x1],0xffffff9d
  417bd6:	loop   0x417c05
  417bd8:	jb     0x417c3a
  417bda:	test   eax,0xa961094a
  417bdf:	loop   0x417c42
  417be1:	imul   edx,DWORD PTR [edi+esi*2-0x1],0xffffffbf
  417be6:	or     DWORD PTR [edi-0x746bf60c],esp
  417bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bed:	sub    bh,cl
  417bef:	xchg   edx,eax
  417bf0:	mov    es,ebx
  417bf2:	call   0x6ad100ed
  417bf7:	stc    
  417bf8:	(bad)  
  417bf9:	dec    DWORD PTR [edi]
  417bfb:	push   cs
  417bfc:	mov    esi,0x5cf09b11
  417c01:	add    esi,DWORD PTR [ecx+0x1e]
  417c04:	dec    eax
  417c05:	or     eax,0x81319b7f
  417c0a:	mov    cl,0xbf
  417c0c:	retf   
  417c0d:	mov    al,0xfd
  417c0f:	sti    
  417c10:	adc    bh,BYTE PTR [esi-0x69]
  417c13:	inc    edi
  417c14:	mov    DWORD PTR [edx+ecx*2+0x335d90f5],esp
  417c1b:	daa    
  417c1c:	sub    al,0xe1
  417c1e:	xor    BYTE PTR [ecx],dh
  417c20:	mul    eax
  417c22:	xor    BYTE PTR [eax+esi*2-0x261d00dc],0xb1
  417c2a:	push   esi
  417c2b:	push   ecx
  417c2c:	jae    0x417c38
  417c2e:	mov    esp,0xa385ea2
  417c33:	sar    DWORD PTR [edi-0x69],0x82
  417c37:	mov    WORD PTR [eax-0x5f],?
  417c3a:	jmp    0xcd86:0xf66fd03b
  417c41:	mov    BYTE PTR [edi+0x4],dh
  417c44:	jnp    0x417bd6
  417c46:	leave  
  417c47:	add    al,0x99
  417c49:	push   cs
  417c4a:	imul   ecx,DWORD PTR [ecx],0xb
  417c4d:	in     eax,dx
  417c4e:	sbb    eax,0x7b05b719
  417c53:	push   edi
  417c54:	test   al,0xfa
  417c56:	mov    eax,0xdabf645
  417c5b:	imul   ecx,ebp,0xfffffff2
  417c5e:	stos   BYTE PTR es:[edi],al
  417c5f:	jp     0x417be6
  417c61:	clc    
  417c62:	cwde   
  417c63:	xor    eax,0x4b296d6a
  417c68:	mov    BYTE PTR [edx],dh
  417c6a:	scas   al,BYTE PTR es:[edi]
  417c6b:	daa    
  417c6c:	xchg   ecx,eax
  417c6d:	xchg   esp,eax
  417c6e:	xchg   DWORD PTR [eax+0x5a41b297],edx
  417c74:	adc    al,dh
  417c76:	dec    ecx
  417c77:	push   esi
  417c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c79:	call   0x3030:0x5e60b6c0
  417c80:	out    dx,al
  417c81:	ret    
  417c82:	adc    al,0xfa
  417c84:	inc    esi
  417c85:	dec    edx
  417c86:	cwde   
  417c87:	in     al,0xac
  417c89:	mov    ch,0x4a
  417c8b:	js     0x417c5c
  417c8d:	gs ins BYTE PTR es:[edi],dx
  417c8f:	stos   DWORD PTR es:[edi],eax
  417c90:	popa   
  417c91:	pop    ecx
  417c92:	mov    dh,BYTE PTR [ebp+0x1c]
  417c95:	jg     0x417cc9
  417c97:	mov    edx,0x8fc7cace
  417c9c:	ja     0x417cf1
  417c9e:	popa   
  417c9f:	mov    eax,0x74688b09
  417ca4:	jl     0x417d0c
  417ca6:	out    dx,al
  417ca7:	fsub   DWORD PTR [eax+0x3b67d941]
  417cad:	cmp    al,0xf3
  417caf:	mov    DWORD PTR [edi],eax
  417cb1:	lea    edi,[ebp-0x3]
  417cb4:	loope  0x417c82
  417cb6:	adc    DWORD PTR [eax+0x7c],esi
  417cb9:	mov    edx,0x5ce04348
  417cbe:	mov    dh,BYTE PTR [eax+0xe]
  417cc1:	call   0xe008:0x873e11b8
  417cc8:	sub    DWORD PTR [edi-0x3d],ebp
  417ccb:	stos   DWORD PTR es:[edi],eax
  417ccc:	pop    edi
  417ccd:	jnp    0x417c81
  417ccf:	pop    ebp
  417cd0:	call   0xd42d:0xb6d52863
  417cd7:	or     al,0x9f
  417cd9:	repz es mov dl,0xd2
  417cdd:	sbb    ch,BYTE PTR [edx]
  417cdf:	in     al,dx
  417ce0:	lds    ebp,FWORD PTR ds:0x2864921c
  417ce6:	clc    
  417ce7:	test   eax,0x71cae4ad
  417cec:	pushf  
  417ced:	stos   BYTE PTR es:[edi],al
  417cee:	cli    
  417cef:	add    BYTE PTR [ebx],0x9a
  417cf2:	xchg   DWORD PTR [edx-0x38215e90],ebx
  417cf8:	sub    al,ah
  417cfa:	test   eax,0xc263437
  417cff:	inc    esp
  417d00:	scas   eax,DWORD PTR es:[edi]
  417d01:	mov    ?,WORD PTR [esi+0x67f2c44f]
  417d07:	aas    
  417d08:	out    dx,al
  417d09:	add    al,0xf2
  417d0b:	pushf  
  417d0c:	sti    
  417d0d:	nop
  417d0e:	into   
  417d0f:	lods   eax,DWORD PTR ds:[esi]
  417d10:	mov    ecx,0x54de1e90
  417d15:	pushf  
  417d16:	mov    ds:0x6de29d5b,al
  417d1b:	mov    eax,ds:0xbfdda92d
  417d20:	pop    edx
  417d21:	in     al,dx
  417d22:	sbb    DWORD PTR [eax-0x71],esp
  417d25:	(bad)  
  417d26:	jge    0x417cec
  417d28:	sub    eax,0x66fced2
  417d2d:	sub    al,0x12
  417d2f:	mov    edx,0xe171a3f6
  417d34:	and    ebp,DWORD PTR [edx-0x24]
  417d37:	sub    al,0xf
  417d39:	arpl   WORD PTR [ecx+0x27],si
  417d3c:	xor    eax,0xfda9e622
  417d41:	fwait
  417d42:	cld    
  417d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d44:	bound  ecx,QWORD PTR [edx-0x46c21c9e]
  417d4a:	sbb    al,0xd1
  417d4c:	push   edx
  417d4d:	stc    
  417d4e:	sub    DWORD PTR ds:0x5783737c,esp
  417d54:	test   BYTE PTR [eax-0x1b],ah
  417d57:	pop    esi
  417d58:	pop    esp
  417d59:	mov    bl,0xe2
  417d5b:	jg     0x417ce4
  417d5d:	mov    dl,0x58
  417d5f:	rcl    edi,0xfc
  417d62:	lods   al,BYTE PTR ds:[esi]
  417d63:	mov    esp,0x69d126e2
  417d68:	sti    
  417d69:	nop
  417d6a:	adc    al,0xba
  417d6c:	mov    ecx,0xce502072
  417d71:	jne    0x417dbd
  417d73:	outs   dx,DWORD PTR ds:[esi]
  417d74:	push   esi
  417d75:	in     eax,0xaf
  417d77:	sbb    DWORD PTR [edi+0x1e],edx
  417d7a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  417d7c:	iret   
  417d7d:	cli    
  417d7e:	dec    esi
  417d7f:	ds mov esi,0xbc60dfb9
  417d85:	stos   DWORD PTR es:[edi],eax
  417d86:	mov    dl,ch
  417d88:	xchg   esp,eax
  417d89:	lock pop eax
  417d8b:	je     0x417d41
  417d8d:	out    dx,eax
  417d8e:	push   ds
  417d8f:	xchg   BYTE PTR [esi],dh
  417d91:	cmc    
  417d92:	lea    esi,[edx+0x68f92b1d]
  417d98:	pop    esp
  417d99:	iret   
  417d9a:	arpl   ax,bx
  417d9c:	loop   0x417d61
  417d9e:	xchg   esi,eax
  417d9f:	add    BYTE PTR [esi-0x40aacbcb],ah
  417da5:	inc    edi
  417da6:	add    eax,0x2179bfcd
  417dab:	ins    BYTE PTR es:[edi],dx
  417dac:	mov    ebx,0x864a5e8a
  417db1:	loope  0x417d91
  417db3:	hlt    
  417db4:	and    esi,ebx
  417db6:	mov    ebp,0x6981c03
  417dbb:	mov    ebp,0xf67aea3e
  417dc0:	jae    0x417e12
  417dc2:	loopne 0x417d89
  417dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dc5:	pop    ebp
  417dc6:	or     al,BYTE PTR [eax-0x55]
  417dc9:	jge    0x417d7b
  417dcb:	cmp    bh,dl
  417dcd:	aas    
  417dce:	shr    BYTE PTR cs:[edi+0x46410456],cl
  417dd5:	xor    bh,ch
  417dd7:	clc    
  417dd8:	ins    DWORD PTR es:[edi],dx
  417dd9:	jmp    0x610239a2
  417dde:	jmp    0xbc45:0x115a7f0d
  417de5:	xor    ecx,eax
  417de7:	and    ecx,DWORD PTR [ecx]
  417de9:	sub    DWORD PTR [ebx+0x68],0x32
  417ded:	and    eax,DWORD PTR [edx]
  417def:	xchg   edi,eax
  417df0:	test   eax,0x2a962a20
  417df5:	outs   dx,BYTE PTR ds:[esi]
  417df6:	cmp    eax,0x4f0ecfbb
  417dfb:	mov    ecx,0x4b2a7f9f
  417e00:	and    DWORD PTR [edi-0x24],esi
  417e03:	in     eax,0x2f
  417e05:	inc    edx
  417e06:	fisttp QWORD PTR [ecx+eiz*1]
  417e09:	(bad)  
  417e0a:	sbb    al,0x94
  417e0c:	popa   
  417e0d:	sahf   
  417e0e:	jnp    0x417e8c
  417e10:	imul   ebx,DWORD PTR [ecx],0xffffffb2
  417e13:	loope  0x417e36
  417e15:	fwait
  417e16:	push   ss
  417e17:	fmulp  st(6),st
  417e19:	shl    eax,0x88
  417e1c:	mov    ebx,?
  417e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e1f:	mov    DWORD PTR [ebx*4-0x3b936db],ebp
  417e26:	mov    esi,ebp
  417e28:	iret   
  417e29:	and    al,0xca
  417e2b:	loop   0x417e8d
  417e2d:	pop    ds
  417e2e:	cmp    al,BYTE PTR [edx-0x59]
  417e31:	fld    DWORD PTR [esi-0xf]
  417e34:	bound  esi,QWORD PTR [ecx+0x41]
  417e37:	cmp    BYTE PTR [ebx-0x5c28190c],ch
  417e3d:	out    0x94,eax
  417e3f:	xchg   esi,eax
  417e40:	push   edx
  417e41:	pop    ebx
  417e42:	mov    edi,0x88d515a8
  417e47:	xor    BYTE PTR [eax+0x71],al
  417e4a:	xor    BYTE PTR [esp+edi*4],bl
  417e4d:	icebp  
  417e4e:	(bad)  [esi]
  417e50:	shl    ch,0xbd
  417e53:	jo     0x417dd5
  417e55:	dec    ecx
  417e56:	enter  0x3aef,0xaf
  417e5a:	adc    edx,0x3ea19a12
  417e60:	call   0x1693:0xd5113c33
  417e67:	xchg   edi,eax
  417e68:	stc    
  417e69:	stos   DWORD PTR es:[edi],eax
  417e6a:	je     0x417eda
  417e6c:	ret    0x7b0c
  417e6f:	fdiv   QWORD PTR [edx]
  417e71:	and    ebx,ebp
  417e73:	sti    
  417e74:	push   0x7dcb54b2
  417e79:	push   eax
  417e7a:	mov    esp,0x77b0bc3a
  417e7f:	(bad)  
  417e81:	sub    DWORD PTR [eax-0x6104de7c],eax
  417e87:	xor    al,0xd5
  417e89:	sub    eax,0xbce1a9c9
  417e8e:	fistp  DWORD PTR [esi]
  417e90:	in     eax,0x8c
  417e92:	xor    BYTE PTR [ebx+0x5fb71cb3],dh
  417e98:	sbb    BYTE PTR [eax-0x682b92b7],ch
  417e9e:	sub    ch,BYTE PTR [ebx-0xd]
  417ea1:	push   edi
  417ea2:	push   ecx
  417ea3:	sar    BYTE PTR [eax+0x40],1
  417ea6:	sub    DWORD PTR [edx-0x24],eax
  417ea9:	sub    al,0xbe
  417eab:	or     DWORD PTR [edx+0x9c78f6d],edi
  417eb1:	shl    DWORD PTR [eax],cl
  417eb3:	adc    al,ah
  417eb5:	in     eax,dx
  417eb6:	mov    esi,0x21bf72e9
  417ebb:	popa   
  417ebc:	in     eax,0x3d
  417ebe:	xchg   esp,eax
  417ebf:	inc    eax
  417ec0:	jp     0x417f32
  417ec2:	pushf  
  417ec3:	xor    BYTE PTR [eax+0x1336f95d],dh
  417ec9:	test   DWORD PTR [ebx+0x6262d000],ecx
  417ecf:	xchg   edi,eax
  417ed0:	(bad)  
  417ed1:	(bad)  
  417ed2:	xchg   BYTE PTR [ecx+eiz*2+0x3a514ca9],al
  417ed9:	dec    esp
  417eda:	push   0xffffffa0
  417edc:	stos   BYTE PTR es:[edi],al
  417edd:	out    dx,eax
  417ede:	mov    ch,0xb3
  417ee0:	xchg   esp,eax
  417ee1:	mov    dl,0xa5
  417ee3:	mov    eax,0xb2826490
  417ee8:	sbb    BYTE PTR [ebx-0x6f4bf44f],cl
  417eee:	jg     0x417edf
  417ef0:	cld    
  417ef1:	icebp  
  417ef2:	shr    DWORD PTR [ebp+0x364fbf7a],1
  417ef8:	mov    ebx,0x7039f996
  417efd:	ss or  al,0x9a
  417f00:	lea    eax,[ecx-0x68edbb22]
  417f06:	mov    ecx,0x1e96a4df
  417f0b:	call   0x69e35d97
  417f10:	jnp    0x417f48
  417f12:	out    dx,al
  417f13:	push   es
  417f14:	xchg   ebp,eax
  417f15:	xchg   esp,eax
  417f16:	test   ebx,ebp
  417f18:	mov    cl,0xd5
  417f1a:	add    al,0x9e
  417f1c:	lds    esi,FWORD PTR [ecx-0x3b545c5f]
  417f22:	int    0x76
  417f24:	cmp    eax,0xa6340e87
  417f29:	sub    ecx,DWORD PTR [edi+0xd]
  417f2c:	cld    
  417f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2e:	inc    esp
  417f2f:	fwait
  417f30:	add    bl,BYTE PTR [ebp+0x23]
  417f33:	fisttp QWORD PTR [ecx-0x3e6d7dd1]
  417f39:	in     eax,0x74
  417f3b:	into   
  417f3c:	scas   al,BYTE PTR es:[edi]
  417f3d:	ss lahf 
  417f3f:	inc    ecx
  417f40:	mov    al,ds:0xd895667
  417f45:	mov    eax,0xcda0db41
  417f4a:	js     0x417f92
  417f4c:	cmp    ah,0x26
  417f4f:	mov    bl,0x70
  417f51:	dec    ebx
  417f52:	retf   0x3b2c
  417f55:	adc    BYTE PTR [ebx-0x21cca9b1],dh
  417f5b:	test   ebx,0xd931ff94
  417f61:	push   ebx
  417f62:	or     BYTE PTR [edx+0x25e2713a],ch
  417f68:	jp     0x417f1e
  417f6a:	mov    gs,WORD PTR [ebx-0x3d]
  417f6d:	dec    ecx
  417f6e:	sub    BYTE PTR [edx],bh
  417f70:	test   DWORD PTR [ebx-0x57],eax
  417f73:	test   eax,0x9684d23c
  417f78:	popf   
  417f79:	jmp    0x417f30
  417f7b:	js     0x417f7d
  417f7d:	loop   0x417f16
  417f7f:	test   al,0xff
  417f81:	or     BYTE PTR [esi],al
  417f83:	mov    ch,0x97
  417f85:	ss stc 
  417f87:	jmp    0x417fa8
  417f89:	cmp    dl,ah
  417f8b:	jl     0x417f40
  417f8d:	dec    ebx
  417f8e:	inc    esp
  417f8f:	sbb    BYTE PTR [esi+esi*8-0x21],al
  417f93:	inc    ebp
  417f94:	xchg   ebx,eax
  417f95:	mov    ch,0xde
  417f97:	jns    0x417f4c
  417f99:	mov    cl,0x22
  417f9b:	jo     0x417ff8
  417f9d:	mov    bh,0xa9
  417f9f:	(bad)  
  417fa0:	retf   
  417fa1:	or     eax,0x315bac21
  417fa6:	jg     0x417f7d
  417fa8:	loop   0x417f81
  417faa:	pushf  
  417fab:	pop    es
  417fac:	or     esi,DWORD PTR [edx+0x31aa6b2d]
  417fb2:	cld    
  417fb3:	inc    ebx
  417fb4:	sbb    al,0x17
  417fb6:	clc    
  417fb7:	aam    0x4
  417fb9:	add    BYTE PTR [ebp+0x4b],ch
  417fbc:	shr    bh,1
  417fbe:	loopne 0x417f57
  417fc0:	mov    edx,0x46f7f99
  417fc5:	pop    eax
  417fc6:	test   eax,0x835e6a4d
  417fcb:	and    ecx,DWORD PTR [eax+0x6d27fc3e]
  417fd1:	shl    BYTE PTR [ebp+0x66b040ea],cl
  417fd7:	(bad)  [esi+0x23]
  417fda:	scas   eax,DWORD PTR es:[edi]
  417fdb:	cs sbb ecx,esp
  417fde:	int    0xb6
  417fe0:	mov    eax,ds:0x437954f9
  417fe5:	test   eax,0x8d71ea12
  417fea:	jmp    0xf94548b6
  417fef:	push   ecx
  417ff0:	fwait
  417ff1:	in     al,0x5b
  417ff3:	xchg   DWORD PTR [eax],edx
  417ff5:	stc    
  417ff6:	lods   al,BYTE PTR cs:[esi]
  417ff8:	int    0xaf
  417ffa:	mov    bl,0x1c
  417ffc:	or     BYTE PTR [ecx],al
  417ffe:	xor    ebp,DWORD PTR [esi-0x6f]
  418001:	pop    edi
  418002:	cmc    
  418003:	xor    DWORD PTR [esi+ebx*4-0x4a],edi
  418007:	cmp    ebp,ebp
  418009:	stos   BYTE PTR es:[edi],al
  41800a:	mov    edx,0x8e75632c
  41800f:	cmp    ebx,DWORD PTR [edx+ecx*8+0x42f235cd]
  418016:	in     eax,0xaf
  418018:	fisttp DWORD PTR [ebp+0x39]
  41801b:	call   0xa2d7775e
  418020:	sbb    eax,0xcad453c5
  418025:	adc    bh,cl
  418027:	adc    al,0x4f
  418029:	rcr    BYTE PTR [edx+0x15],0x21
  41802d:	mov    dh,0x7f
  41802f:	sub    DWORD PTR [ebx-0x50b5928e],edx
  418035:	or     ch,BYTE PTR [ebx]
  418037:	ror    BYTE PTR [ebx-0x3ca903fc],1
  41803d:	and    dl,dl
  41803f:	loop   0x41805f
  418041:	sub    al,0x7a
  418043:	jne    0x418016
  418045:	arpl   WORD PTR [eax],si
  418047:	mov    dl,0xcf
  418049:	mov    bl,0xe7
  41804b:	or     ch,al
  41804d:	out    dx,al
  41804e:	sbb    eax,0xa550641a
  418053:	test   al,0xbd
  418055:	jnp    0x418051
  418057:	jne    0x418081
  418059:	(bad)  
  41805a:	cvttps2pi mm3,QWORD PTR [eax]
  41805d:	lods   al,BYTE PTR ds:[esi]
  41805e:	cmc    
  41805f:	sub    esp,esi
  418061:	call   edi
  418063:	push   ss
  418064:	pop    ecx
  418065:	xlat   BYTE PTR ds:[ebx]
  418066:	test   BYTE PTR [edi],0x62
  418069:	xchg   ecx,eax
  41806a:	jo     0x417ffa
  41806c:	rcr    DWORD PTR [ecx],0x12
  41806f:	(bad)  
  418070:	jecxz  0x418081
  418072:	adc    al,0xdf
  418074:	bound  ebx,QWORD PTR [esi-0x59711e5b]
  41807a:	cmp    ah,BYTE PTR [edx-0x5b]
  41807d:	pushf  
  41807e:	add    bh,BYTE PTR [eax+eax*1+0x4a]
  418082:	mov    ecx,0x980ff67e
  418087:	out    dx,eax
  418088:	sub    al,0x87
  41808a:	and    al,0x5b
  41808c:	je     0x41806d
  41808e:	shl    BYTE PTR [esi],cl
  418090:	mov    esp,0x240614de
  418095:	adc    ah,BYTE PTR [eax+0x5f8334f0]
  41809b:	cmp    al,0xf0
  41809d:	ss jmp 0xf51335bb
  4180a3:	loopne 0x4180ea
  4180a5:	add    al,0x51
  4180a7:	int    0xb9
  4180a9:	leave  
  4180aa:	pop    es
  4180ab:	xor    edi,ebp
  4180ad:	push   esi
  4180ae:	fs ins BYTE PTR es:[edi],dx
  4180b0:	popa   
  4180b1:	jo     0x4180f1
  4180b3:	inc    ebx
  4180b4:	mov    ebx,0x721f2ca1
  4180b9:	(bad)  
  4180ba:	push   ecx
  4180bb:	test   DWORD PTR [esi],edi
  4180bd:	push   es
  4180be:	push   ebx
  4180bf:	jnp    0x4180e0
  4180c1:	imul   edi,DWORD PTR [ecx+ebp*8+0xe3d2416],0xfdf0fc26
  4180cc:	jp     0x418111
  4180ce:	(bad)
  4180d1:	test   BYTE PTR [ebx+0x66345498],bh
  4180d7:	cmp    cl,dl
  4180d9:	inc    ecx
  4180da:	jo     0x4180bd
  4180dc:	xor    eax,0xba4e653a
  4180e1:	repz mov eax,ds:0x4679c671
  4180e7:	jns    0x4180db
  4180e9:	mov    ds:0x37520afa,al
  4180ee:	and    al,BYTE PTR [edi-0x1d1704e2]
  4180f4:	ins    DWORD PTR es:[edi],dx
  4180f5:	cli    
  4180f6:	sub    BYTE PTR [ecx+eiz*1+0x2bcb5e16],bh
  4180fd:	or     eax,DWORD PTR [ebp+0x16]
  418100:	outs   dx,DWORD PTR ds:[esi]
  418101:	pop    edx
  418102:	inc    eax
  418103:	mov    esp,DWORD PTR [edi]
  418105:	push   0xffffff97
  418107:	jo     0x418169
  418109:	mov    ecx,0x91e05c4b
  41810e:	cmp    ebp,ecx
  418110:	jmp    0xa55132eb
  418115:	pop    esi
  418116:	sbb    DWORD PTR [edi+esi*8],edi
  418119:	(bad)  
  41811b:	or     esp,DWORD PTR [esi+0x4818e6f1]
  418121:	and    ecx,DWORD PTR [ebx+ecx*1-0x5b]
  418125:	inc    ecx
  418126:	adc    ecx,DWORD PTR [eax+0x7bf91ad4]
  41812c:	or     edi,ebx
  41812e:	mov    esp,0x17e68f14
  418133:	pop    ebx
  418134:	arpl   WORD PTR [edx-0x114b8820],cx
  41813a:	jb     0x4180c2
  41813c:	xor    eax,0x9139b9c8
  418141:	test   DWORD PTR [edi+eiz*8-0xe],0x69f368b7
  418149:	add    eax,0xb78aeb05
  41814e:	or     cl,BYTE PTR [ebp-0x494112]
  418154:	inc    edi
  418155:	retf   0x6732
  418158:	jae    0x4180eb
  41815a:	cs jge 0x4181af
  41815d:	stc    
  41815e:	sbb    DWORD PTR [esi],edi
  418160:	xchg   edi,eax
  418161:	inc    esi
  418162:	ja     0x4181ce
  418164:	cmp    ebx,DWORD PTR [esi+0x4b]
  418167:	(bad)  
  418168:	or     al,0x97
  41816a:	sbb    BYTE PTR [ecx],dh
  41816c:	stos   DWORD PTR es:[edi],eax
  41816d:	sti    
  41816e:	bound  esi,QWORD PTR [eax-0x56]
  418171:	pop    es
  418172:	jnp    0x418120
  418174:	leave  
  418175:	push   ebp
  418176:	lock clc 
  418178:	jmp    0x41812d
  41817a:	nop
  41817b:	sub    ah,BYTE PTR [esi]
  41817d:	and    eax,0x57ae5ae0
  418182:	jg     0x418192
  418184:	and    dh,0xf
  418187:	jae    0x418206
  418189:	push   0x26
  41818b:	push   edi
  41818c:	dec    edi
  41818d:	aas    
  41818e:	call   ebp
  418190:	push   0x569d4147
  418195:	(bad)  
  418196:	outs   dx,BYTE PTR ds:[esi]
  418197:	rsqrtps xmm4,XMMWORD PTR [ebx+eax*8-0x72]
  41819c:	repz push ss
  41819e:	ja     0x4181ce
  4181a0:	out    0x4c,al
  4181a2:	add    BYTE PTR [esi+ecx*1-0x73],0x4f
  4181a7:	js     0x41817c
  4181a9:	das    
  4181aa:	dec    ebp
  4181ab:	cld    
  4181ac:	add    bl,dl
  4181ae:	pop    edi
  4181af:	shr    BYTE PTR [edi+0x35],cl
  4181b2:	push   ss
  4181b3:	add    eax,0xb0ef253b
  4181b8:	iret   
  4181b9:	inc    edi
  4181ba:	jns    0x418234
  4181bc:	mov    al,0xcd
  4181be:	stos   BYTE PTR es:[edi],al
  4181bf:	xchg   edi,eax
  4181c0:	inc    esi
  4181c1:	ret    0x4ce
  4181c4:	and    eax,0xb698e999
  4181c9:	stc    
  4181ca:	pop    esp
  4181cb:	aas    
  4181cc:	aad    0x74
  4181ce:	and    al,0x17
  4181d0:	mov    esi,0xb49090ed
  4181d5:	dec    edi
  4181d6:	mov    al,ds:0xf1376cd
  4181db:	sbb    BYTE PTR [edx],ch
  4181dd:	xchg   edi,eax
  4181de:	mov    ebp,0xa97da919
  4181e3:	js     0x4181dc
  4181e5:	or     eax,0x440e3351
  4181ea:	addr16 pop edx
  4181ec:	sbb    DWORD PTR [edx-0x6eb0da7d],edi
  4181f2:	add    al,0x4d
  4181f4:	jp     0x4181b3
  4181f6:	xchg   esi,eax
  4181f7:	pop    ss
  4181f8:	mov    BYTE PTR [eax+0x55],0x45
  4181fc:	dec    ebx
  4181fd:	(bad)  [eax+0x3b3913fe]
  418203:	daa    
  418204:	lea    edi,[edi]
  418206:	cmp    eax,DWORD PTR [edx+0x1d]
  418209:	int    0xa6
  41820b:	and    eax,0x950f576e
  418210:	cld    
  418211:	adc    al,0xcd
  418213:	loopne 0x4181f9
  418215:	push   0xe8dc52a1
  41821a:	(bad)  
  41821b:	inc    BYTE PTR [edx+0x8]
  41821e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41821f:	or     edx,DWORD PTR [edx+0x185f109f]
  418225:	shr    DWORD PTR [esi],0x33
  418228:	sub    al,0x34
  41822a:	dec    esp
  41822b:	cmp    ch,BYTE PTR [ebp+ebp*1-0x63c1892e]
  418232:	out    0xcd,eax
  418234:	inc    ebx
  418235:	xor    BYTE PTR [eax],dh
  418237:	push   es
  418238:	jne    0x418215
  41823a:	cmp    DWORD PTR ds:0x20fa826a,esp
  418240:	dec    ecx
  418241:	cld    
  418242:	cmp    BYTE PTR [eax+0x4b5bb8e0],0x0
  418249:	jl     0x4182b8
  41824b:	out    dx,al
  41824c:	out    0x9a,al
  41824e:	hlt    
  41824f:	cmovae eax,DWORD PTR [edi-0x3938d3a8]
  418256:	dec    eax
  418257:	push   esp
  418258:	push   ss
  418259:	in     al,0x29
  41825b:	xchg   BYTE PTR [ebx-0x6a3bf981],bh
  418261:	jl     0x4182be
  418263:	mov    esi,0x61e5ba4b
  418268:	xor    al,ah
  41826a:	fwait
  41826b:	pop    ss
  41826c:	xchg   DWORD PTR [eax+0x46],edi
  41826f:	jecxz  0x418235
  418271:	out    0x8a,eax
  418273:	cmp    DWORD PTR [esi+0x5e],ebp
  418276:	outs   dx,DWORD PTR ds:[esi]
  418277:	scas   eax,DWORD PTR es:[edi]
  418278:	out    dx,eax
  418279:	loop   0x418231
  41827b:	sbb    dl,al
  41827d:	pusha  
  41827e:	and    DWORD PTR [eax+0x9],0x40
  418282:	test   BYTE PTR [edx-0x6],0x5f
  418286:	not    BYTE PTR [esi]
  418288:	call   0x8b8e4753
  41828d:	jae    0x4182fb
  41828f:	dec    ebx
  418290:	jl     0x4182dd
  418292:	sub    ebp,eax
  418294:	sub    BYTE PTR [ebx+0x3d],ah
  418297:	sub    ebp,DWORD PTR [eax]
  418299:	sub    eax,0x52dc6342
  41829e:	outs   dx,DWORD PTR ds:[esi]
  41829f:	cmc    
  4182a0:	nop
  4182a1:	add    eax,0xcad56dea
  4182a6:	push   ebp
  4182a7:	sub    DWORD PTR [edx-0x1f],esp
  4182aa:	jne    0x418254
  4182ac:	test   ecx,eax
  4182ae:	jp     0x418272
  4182b0:	mov    ah,0xcd
  4182b2:	inc    edi
  4182b3:	jmp    0xa63c794
  4182b8:	and    DWORD PTR [esi],0x196e8487
  4182be:	pop    ecx
  4182bf:	arpl   WORD PTR [edx+0x667dd891],cx
  4182c5:	push   ecx
  4182c6:	fdivr  DWORD PTR [esi+0x27]
  4182c9:	mov    al,0xce
  4182cb:	rcr    DWORD PTR fs:[ebx+0x77],cl
  4182cf:	add    eax,0xa8851105
  4182d4:	push   ecx
  4182d5:	pop    ds
  4182d6:	or     DWORD PTR [eax],edi
  4182d8:	pop    ecx
  4182d9:	pop    eax
  4182da:	mov    bl,0xcc
  4182dc:	add    al,0x2e
  4182de:	test   eax,0x57099d7c
  4182e3:	xor    ch,bl
  4182e5:	mov    esi,0x72990e3d
  4182ea:	push   DWORD PTR [ebx]
  4182ec:	jae    0x418281
  4182ee:	(bad)  
  4182ef:	gs xor esi,edx
  4182f2:	addr16 cmp eax,0xdcb334d6
  4182f8:	sahf   
  4182f9:	neg    DWORD PTR [ebx+0x42b32068]
  4182ff:	in     eax,0xe6
  418301:	lahf   
  418302:	and    DWORD PTR [edx-0x18],ebp
  418305:	cmp    BYTE PTR [ebx-0x68764e16],ch
  41830b:	jbe    0x41832b
  41830d:	mov    es,WORD PTR [si]
  418310:	pop    ebx
  418311:	not    BYTE PTR [edx-0x80]
  418314:	jne    0x418327
  418316:	rol    DWORD PTR [edx+0x269f555],1
  41831c:	pop    esp
  41831d:	lods   al,BYTE PTR ds:[esi]
  41831e:	sub    al,0x13
  418320:	fwait
  418321:	leave  
  418322:	call   DWORD PTR [ebp+0x75]
  418325:	dec    esp
  418326:	mov    al,0x20
  418328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418329:	into   
  41832a:	in     eax,dx
  41832b:	stos   DWORD PTR es:[edi],eax
  41832c:	fstp   TBYTE PTR [ebp-0x75]
  41832f:	in     ax,dx
  418331:	dec    esp
  418332:	mov    ds:0xae8164dd,al
  418337:	shr    BYTE PTR [ebx],1
  418339:	leave  
  41833a:	stc    
  41833b:	out    0xdb,eax
  41833d:	stos   BYTE PTR es:[edi],al
  41833e:	adc    DWORD PTR [edx-0x3a],esi
  418341:	pop    esi
  418342:	daa    
  418343:	add    esp,DWORD PTR [eax+0x1c]
  418346:	push   esp
  418347:	mov    dl,BYTE PTR [ebp-0x61]
  41834a:	out    0x97,al
  41834c:	mov    al,0xca
  41834e:	add    eax,0xf3978b92
  418353:	jle    0x41833a
  418355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418356:	loop   0x418386
  418358:	pop    ecx
  418359:	iret   
  41835a:	jb     0x4183bc
  41835c:	ror    ebp,0xdb
  41835f:	xlat   BYTE PTR ds:[ebx]
  418360:	repz xchg ch,cl
  418363:	test   al,0x7b
  418365:	retf   
  418366:	xlat   BYTE PTR ds:[ebx]
  418367:	enter  0xf841,0x30
  41836b:	dec    edi
  41836c:	cwde   
  41836d:	pop    edx
  41836e:	out    dx,al
  41836f:	lea    esp,[eax-0x7e]
  418372:	cmp    eax,0xf1c66e98
  418377:	test   al,0x7f
  418379:	cdq    
  41837a:	mov    ds:0xcaa4b1e8,al
  41837f:	cmp    al,0x18
  418381:	icebp  
  418382:	xor    ebx,DWORD PTR [edx+0x17a70896]
  418388:	adc    ch,0x24
  41838b:	add    eax,0x66f404c3
  418390:	adc    eax,0xc1ff481
  418395:	out    dx,al
  418396:	sub    eax,0x4edb137e
  41839b:	add    esi,DWORD PTR [ecx+0x3a]
  41839e:	pop    esp
  41839f:	push   ebx
  4183a0:	int3   
  4183a1:	popf   
  4183a2:	add    eax,0xad57ef35
  4183a7:	popf   
  4183a8:	in     al,dx
  4183a9:	mov    ds:0x3ef8a74a,eax
  4183ae:	les    esp,FWORD PTR [ebx+0x51]
  4183b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183b2:	popa   
  4183b3:	xchg   BYTE PTR ds:0x25e50737,ah
  4183b9:	shl    dl,cl
  4183bb:	inc    ecx
  4183bc:	or     DWORD PTR [edi-0x3d],esi
  4183bf:	adc    edx,0xfffffff6
  4183c2:	ss jbe 0x41842d
  4183c5:	clc    
  4183c6:	cmp    ch,BYTE PTR [ebx]
  4183c8:	cmp    DWORD PTR [ecx],edx
  4183ca:	cmovnp esi,DWORD PTR [edi+0x3c1692c2]
  4183d1:	clc    
  4183d2:	mov    ecx,0x5c4a1bd9
  4183d7:	add    al,0x73
  4183d9:	push   ebp
  4183da:	ret    
  4183db:	pushf  
  4183dc:	scas   eax,DWORD PTR es:[edi]
  4183dd:	sub    BYTE PTR [esi],bh
  4183df:	xchg   edx,eax
  4183e0:	aam    0xf4
  4183e2:	cmp    eax,0xc3ffbd9a
  4183e7:	popf   
  4183e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183e9:	fisttp DWORD PTR [ecx-0x33]
  4183ec:	imul   edx,edi,0x5be352f1
  4183f2:	dec    esi
  4183f3:	not    DWORD PTR [esi]
  4183f5:	cdq    
  4183f6:	test   al,0x44
  4183f8:	xchg   BYTE PTR [ecx+edx*8],bh
  4183fb:	fimul  DWORD PTR [ebx-0x69a4a944]
  418401:	jmp    0x2347411c
  418406:	push   edx
  418407:	xchg   BYTE PTR [eax],ch
  418409:	in     eax,0x47
  41840b:	leave  
  41840c:	popf   
  41840d:	push   esp
  41840e:	int    0x7d
  418410:	retf   
  418411:	ds in  eax,dx
  418413:	pop    ds
  418414:	add    BYTE PTR [edx+eax*4-0x37],dl
  418418:	aas    
  418419:	ins    BYTE PTR es:[edi],dx
  41841a:	cmp    eax,0x5c987460
  41841f:	out    dx,al
  418420:	fdivp  st(7),st
  418422:	loop   0x41846a
  418424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418425:	mul    DWORD PTR [ebp-0x367671d2]
  41842b:	pop    esp
  41842c:	xchg   ebp,eax
  41842d:	jp     0x4183dc
  41842f:	lods   al,BYTE PTR ds:[esi]
  418430:	int3   
  418431:	ins    DWORD PTR es:[edi],dx
  418432:	mov    ebx,0x7e2ac38e
  418437:	bound  edi,QWORD PTR [ebp-0x5b]
  41843a:	push   ds
  41843b:	dec    edx
  41843c:	xor    edi,DWORD PTR [ebp-0x34]
  41843f:	inc    esp
  418440:	imul   ebp,DWORD PTR [edx+0x46762281],0x25
  418447:	cs std 
  418449:	or     bh,dl
  41844b:	jge    0x4184a7
  41844d:	add    al,0x94
  41844f:	pop    ebx
  418450:	push   edx
  418451:	dec    BYTE PTR [ebp-0x11]
  418454:	stc    
  418455:	cld    
  418456:	xchg   bl,dh
  418458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418459:	(bad)  [edx+0x7b]
  41845c:	or     DWORD PTR ds:0xbf4dec1d,eax
  418462:	std    
  418463:	mov    cl,0x37
  418465:	sub    DWORD PTR [esp+eax*1-0x60],0xf21d9ccb
  41846d:	mov    esp,0x3eb9e5a9
  418472:	scas   al,BYTE PTR es:[edi]
  418473:	mov    ch,0xf8
  418475:	rol    cl,1
  418477:	jmp    0x4184f8
  418479:	sbb    dl,BYTE PTR [ecx-0x22ad20ca]
  41847f:	mov    cl,0x1c
  418481:	cmp    DWORD PTR [ebx-0x56073a68],ebx
  418487:	xor    ebp,DWORD PTR [edx+0x72]
  41848a:	ds xchg edx,ebp
  41848d:	mov    ebp,0xef4a7cd5
  418492:	in     al,0x18
  418494:	jne    0x418510
  418496:	xor    BYTE PTR [ecx-0xb],0x52
  41849a:	and    al,0xb0
  41849c:	call   0x775bbf3f
  4184a1:	mov    cl,0xf2
  4184a3:	mov    al,ds:0xe62afaba
  4184a8:	retf   
  4184a9:	les    ebx,FWORD PTR [edi-0x413c85]
  4184af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b0:	xchg   edi,esp
  4184b2:	iret   
  4184b3:	into   
  4184b4:	icebp  
  4184b5:	adc    BYTE PTR [esi+ebx*4+0x76],0x6e
  4184ba:	xchg   bl,bh
  4184bc:	xchg   edi,eax
  4184bd:	and    cl,al
  4184bf:	cmp    eax,0x364e8855
  4184c4:	in     eax,0x7b
  4184c6:	repz mov ecx,0xcc71061c
  4184cc:	les    esp,FWORD PTR [ebp+0x60ee1343]
  4184d2:	call   0x88683908
  4184d7:	xor    eax,0x2b889083
  4184dc:	inc    esi
  4184dd:	pop    es
  4184de:	icebp  
  4184df:	dec    ebx
  4184e0:	inc    esi
  4184e1:	js     0x4184a5
  4184e3:	jae    0x41847c
  4184e5:	inc    ecx
  4184e6:	jo     0x418516
  4184e8:	adc    DWORD PTR [esp+eiz*8+0x55],ecx
  4184ec:	inc    ebx
  4184ed:	arpl   WORD PTR [edx],si
  4184ef:	daa    
  4184f0:	inc    esi
  4184f1:	pusha  
  4184f2:	data16 (bad) 
  4184f4:	xchg   ecx,eax
  4184f5:	lahf   
  4184f6:	loop   0x4184de
  4184f8:	into   
  4184f9:	push   ebp
  4184fa:	and    al,BYTE PTR [edi-0x9ec1583]
  418500:	daa    
  418501:	idiv   DWORD PTR [ebx+0x74e527d8]
  418507:	fadd   DWORD PTR ds:0x31fed5ff
  41850d:	jbe    0x418549
  41850f:	fisubr DWORD PTR [esi+0x435b0794]
  418515:	sahf   
  418516:	addr16 dec esi
  418518:	mov    WORD PTR [edx-0x6e],?
  41851b:	retf   0x48b6
  41851e:	das    
  41851f:	pop    edx
  418520:	out    0x99,al
  418522:	push   ss
  418523:	mov    al,0x9b
  418525:	in     eax,0x6
  418527:	bound  ax,DWORD PTR [ebx-0x4d]
  41852b:	inc    ecx
  41852c:	sbb    DWORD PTR [edx],ecx
  41852e:	or     al,0x2f
  418530:	test   eax,0x1c1950ab
  418535:	jg     0x418533
  418537:	inc    ecx
  418538:	loopne 0x418541
  41853a:	add    ecx,DWORD PTR [edi-0x79]
  41853d:	pop    edi
  41853e:	imul   edi,DWORD PTR [ecx+0x3f71d30c],0x2b7c5d9c
  418548:	call   0x27552ac6
  41854d:	fst    QWORD PTR [esi]
  41854f:	jmp    0x4185b3
  418551:	fcomp  st(6)
  418553:	arpl   bx,cx
  418555:	xor    bh,BYTE PTR [ebp-0x5e]
  418558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418559:	(bad)  
  41855a:	cdq    
  41855b:	mov    BYTE PTR [edi+0x12],al
  41855e:	sub    al,0x4c
  418561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418562:	repnz cmp esp,DWORD PTR [esi]
  418565:	enter  0x89a2,0x86
  418569:	mov    es,WORD PTR [ebx-0x7b]
  41856c:	push   ds
  41856d:	inc    ebp
  41856e:	(bad)  
  418570:	ja     0x418571
  418572:	inc    ecx
  418573:	mov    esp,0xe226cce7
  418578:	shl    BYTE PTR [esi+0x3449494c],0x63
  41857f:	dec    ecx
  418580:	mov    edi,0x62ee0111
  418585:	fnsave [edi-0xb]
  418588:	mov    eax,ds:0x38c8c31c
  41858d:	or     DWORD PTR [eax-0x2],esp
  418590:	cmp    al,0x4e
  418592:	test   eax,0xfefc8df3
  418597:	sbb    bh,BYTE PTR [ecx-0x57]
  41859a:	cdq    
  41859b:	push   0xffffff91
  41859d:	dec    ebx
  41859e:	lods   eax,DWORD PTR ds:[esi]
  41859f:	addr16 fs out 0x58,eax
  4185a3:	sub    edx,esi
  4185a5:	push   0x44
  4185a7:	fdiv   QWORD PTR [eax]
  4185aa:	lods   eax,DWORD PTR ds:[esi]
  4185ab:	addr16 data16 es clc 
  4185af:	xor    al,0x98
  4185b1:	and    al,0xfe
  4185b3:	or     eax,0x243e3d94
  4185b8:	test   DWORD PTR [ebx+0x2fc3aa2f],edi
  4185be:	mov    eax,DWORD PTR [esi+0x56]
  4185c1:	sar    DWORD PTR [edx-0x5a572c9b],cl
  4185c7:	stc    
  4185c8:	neg    DWORD PTR [ebp-0x530d4df6]
  4185ce:	jae    0x418564
  4185d0:	adc    eax,esp
  4185d2:	jo     0x41855f
  4185d4:	mov    ds:0x58b2ecd3,al
  4185d9:	fld    DWORD PTR [edx-0x51]
  4185dc:	vsubps ymm5,ymm6,YMMWORD PTR [ebp+0x72]
  4185e1:	mov    al,0x36
  4185e3:	jl     0x4185d0
  4185e5:	idiv   BYTE PTR [eax+0x1f]
  4185e8:	and    edi,DWORD PTR [esi+0x3e]
  4185eb:	mov    eax,ds:0xbc1dd0e9
  4185f0:	push   ds
  4185f1:	data16 clc 
  4185f3:	inc    ecx
  4185f4:	pop    ebp
  4185f5:	and    DWORD PTR [edx-0x18837756],ecx
  4185fb:	inc    edx
  4185fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185fd:	pop    DWORD PTR [esi-0x6aeeba1b]
  418603:	adc    DWORD PTR [ebp-0x30],esi
  418606:	scas   eax,DWORD PTR es:[edi]
  418607:	adc    al,0xc0
  41860a:	sub    BYTE PTR [ebx-0x13],bl
  41860d:	ds aad 0xa1
  418610:	loope  0x4185b4
  418612:	push   edx
  418613:	jmp    0x41862e
  418615:	cmp    BYTE PTR [esi+0x62],cl
  418618:	and    eax,0xbbb8e65a
  41861d:	xor    al,0x44
  41861f:	mov    bh,0xc5
  418621:	das    
  418622:	cmovg  ecx,DWORD PTR [esi-0x2cc0fd29]
  418629:	ss (bad) 
  41862c:	rcl    ebp,cl
  41862e:	cmp    cl,ch
  418630:	pop    eax
  418631:	cdq    
  418632:	cmp    al,0x7d
  418634:	daa    
  418635:	dec    eax
  418636:	push   es
  418637:	ja     0x4185cd
  418639:	pusha  
  41863a:	lods   eax,DWORD PTR ds:[esi]
  41863b:	push   edi
  41863c:	push   eax
  41863d:	dec    edx
  41863e:	mov    BYTE PTR [ebx+0x7e],al
  418641:	push   esp
  418642:	int    0xd5
  418644:	shr    DWORD PTR [eax-0x6d],1
  418647:	ins    BYTE PTR es:[edi],dx
  418648:	cli    
  418649:	xor    DWORD PTR [ebp-0x1e20abfa],ecx
  41864f:	cmp    BYTE PTR [edi+0x6001421e],0x9b
  418656:	retf   
  418657:	jmp    0x16a25676
  41865c:	into   
  41865d:	into   
  41865e:	or     ebp,esp
  418660:	and    eax,0xc543e83c
  418665:	loop   0x41865b
  418667:	test   eax,0x35677514
  41866c:	jno    0x4186e1
  41866e:	or     al,0x7d
  418670:	push   es
  418671:	push   0x71
  418673:	stos   DWORD PTR es:[edi],eax
  418674:	shl    BYTE PTR [ebx-0x5c],1
  418677:	ss pop esp
  418679:	pop    ecx
  41867a:	push   ecx
  41867b:	sbb    al,0x9f
  41867d:	mov    eax,0xf044090c
  418682:	xchg   ebx,eax
  418683:	js     0x41862f
  418685:	xor    bh,BYTE PTR [esi-0x1]
  418688:	js     0x418610
  41868a:	ss loopne 0x4186c5
  41868d:	push   ss
  41868e:	mov    bl,0x97
  418690:	pop    ebp
  418691:	popf   
  418692:	pop    ds
  418693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418694:	imul   esp,ecx,0x3
  418697:	jmp    0x5b72:0xea2ace4b
  41869e:	mov    esp,0xe3996c9c
  4186a3:	or     eax,0x58fba6a0
  4186a8:	in     al,dx
  4186a9:	adc    al,0x9a
  4186ab:	das    
  4186ac:	mov    edx,ebx
  4186ae:	fimul  WORD PTR [edi]
  4186b0:	sub    dh,BYTE PTR [edi]
  4186b2:	repz push ebp
  4186b4:	je     0x4186c3
  4186b6:	sbb    eax,0xb3d8d2ff
  4186bb:	sub    edi,eax
  4186bd:	ja     0x4186b3
  4186bf:	inc    esi
  4186c0:	adc    esi,ebp
  4186c2:	xchg   edi,eax
  4186c3:	add    eax,0x74459d64
  4186c8:	cwde   
  4186c9:	mov    eax,0xe3f6cfb9
  4186ce:	pop    edi
  4186cf:	out    0xaf,eax
  4186d1:	pop    es
  4186d2:	dec    edi
  4186d3:	gs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  4186d6:	sub    esp,DWORD PTR [ebx]
  4186d8:	pushf  
  4186d9:	fisub  WORD PTR [ebx+0x42]
  4186dc:	xor    dl,BYTE PTR [edi+0x21f52c37]
  4186e2:	and    ebx,edi
  4186e4:	mov    al,0x6a
  4186e6:	sub    eax,0x8271f9be
  4186eb:	pop    eax
  4186ec:	xchg   edx,eax
  4186ed:	lods   al,BYTE PTR ds:[esi]
  4186ee:	rcr    DWORD PTR [ebx+0x675cff17],0x62
  4186f5:	adc    DWORD PTR [ebx],edx
  4186f7:	outs   dx,BYTE PTR ds:[esi]
  4186f8:	fisubr DWORD PTR [edi+edi*1+0x3c]
  4186fc:	ins    BYTE PTR es:[edi],dx
  4186fd:	mov    ds:0x14f5683d,eax
  418702:	mov    ebp,0x13353f31
  418707:	pop    eax
  418708:	pop    ss
  418709:	test   ecx,ecx
  41870b:	daa    
  41870c:	xchg   ch,cl
  41870e:	fs pop esi
  418710:	mov    cl,0x11
  418712:	jae    0x4186ba
  418714:	adc    BYTE PTR [edi],0x9f
  418717:	jnp    0x418792
  418719:	pop    ebp
  41871a:	mov    bl,0x95
  41871c:	and    ecx,DWORD PTR [edx+0x26]
  41871f:	push   esi
  418720:	mov    bh,0x3
  418722:	in     al,0xd8
  418724:	ret    
  418725:	in     al,dx
  418726:	ss in  eax,dx
  418728:	or     bl,dh
  41872a:	jno    0x41876b
  41872c:	inc    ebx
  41872d:	aaa    
  41872e:	fwait
  41872f:	push   esp
  418730:	mov    eax,ds:0xb4c745d
  418735:	mov    edi,0x8349eff5
  41873a:	mov    DWORD PTR [ecx+ebp*2-0x3b],ebx
  41873e:	xchg   esp,eax
  41873f:	pop    esp
  418740:	mov    ds:0x580edc4e,eax
  418745:	bound  eax,QWORD PTR [esi+0x164c2b8b]
  41874b:	dec    eax
  41874c:	arpl   WORD PTR [eax-0x32],cx
  41874f:	and    bl,bh
  418751:	cmp    dh,ch
  418753:	inc    ecx
  418754:	rcr    DWORD PTR [edx+edx*1],cl
  418757:	test   al,0x20
  418759:	aad    0xb4
  41875b:	mov    ds:0xd515f269,eax
  418760:	jne    0x418753
  418762:	xor    bl,BYTE PTR [bx-0x34dd]
  418767:	jno    0x418794
  418769:	imul   edi,esi,0x2cb86dd4
  41876f:	pop    ebp
  418770:	test   eax,0xda1d0a9f
  418775:	std    
  418776:	adc    BYTE PTR [ebp+0xf6f9a0c],dl
  41877c:	jmp    0xd695:0x74998e12
  418783:	push   ebx
  418784:	push   edi
  418785:	dec    ebp
  418786:	ja     0x4187de
  418788:	popa   
  418789:	push   ds
  41878a:	pushf  
  41878b:	mov    BYTE PTR [edi-0x7d],dl
  41878e:	jge    0x41874d
  418790:	fs mov edx,0x6eb39622
  418796:	aas    
  418797:	lods   al,BYTE PTR ds:[esi]
  418798:	push   ebp
  418799:	je     0x41875f
  41879b:	div    DWORD PTR [ecx-0x6e]
  41879e:	or     eax,0xf41c1d42
  4187a3:	pop    ebp
  4187a4:	dec    ebp
  4187a5:	fist   WORD PTR [edx-0x39]
  4187a8:	sub    DWORD PTR [ebp-0x5d9bde21],edx
  4187ae:	pop    edx
  4187af:	aas    
  4187b0:	mov    edi,DWORD PTR [ebp+0x2ec94f99]
  4187b6:	sub    ebp,esi
  4187b8:	adc    eax,0x7a800015
  4187bd:	std    
  4187be:	dec    ebx
  4187bf:	(bad)  
  4187c1:	mov    ch,0x8
  4187c3:	dec    ebp
  4187c4:	mov    bh,0x90
  4187c6:	mov    ebp,0x80a20047
  4187cb:	stc    
  4187cc:	inc    eax
  4187cd:	push   ecx
  4187ce:	ins    BYTE PTR es:[edi],dx
  4187cf:	in     al,dx
  4187d0:	shl    esp,1
  4187d2:	imul   ebx,DWORD PTR [eax],0x724a4974
  4187d8:	rcr    BYTE PTR [ecx],1
  4187da:	mov    ebx,0x601b278b
  4187df:	dec    ebp
  4187e0:	add    DWORD PTR [ebp+0x1e],ebp
  4187e3:	jbe    0x41885f
  4187e5:	cmp    dl,ah
  4187e7:	pushf  
  4187e8:	idiv   ecx
  4187ea:	(bad)  
  4187ec:	popa   
  4187ed:	cdq    
  4187ee:	pop    edi
  4187ef:	ja     0x418810
  4187f1:	inc    edx
  4187f2:	call   0x45ac:0x93b7df
  4187f9:	cwde   
  4187fa:	pop    edi
  4187fb:	dec    ebp
  4187fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fd:	pop    esp
  4187fe:	dec    ebp
  4187ff:	call   DWORD PTR [eax+0x60]
  418802:	adc    dh,BYTE PTR [edi]
  418804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418805:	cs daa 
  418807:	add    eax,0xdf928fc7
  41880c:	shl    BYTE PTR [edx],1
  41880e:	cli    
  41880f:	test   dh,bh
  418811:	sub    dh,bh
  418813:	mov    ebp,0xe6549e13
  418818:	mov    edx,0xab2a6b01
  41881d:	pop    eax
  41881e:	jp     0x418830
  418820:	lds    eax,FWORD PTR ss:[ebp+0x43bd0914]
  418827:	fsubr  st,st(6)
  418829:	mov    edi,0x9924c7f8
  41882e:	mov    ebx,0x5e28ffba
  418833:	jbe    0x4188a1
  418835:	inc    edx
  418836:	jecxz  0x418818
  418838:	mov    BYTE PTR [ecx-0x5a59c31b],dh
  41883e:	arpl   dx,si
  418840:	add    BYTE PTR [edx],ah
  418842:	xchg   edi,eax
  418843:	or     DWORD PTR [edx],edi
  418845:	(bad)  
  418846:	repnz clc 
  418848:	sub    BYTE PTR [ebp+0x560e6c4],dh
  41884e:	(bad)  
  41884f:	(bad)  
  418851:	inc    ecx
  418852:	push   cs
  418853:	jp     0x418813
  418855:	dec    esp
  418856:	shr    DWORD PTR [esi+0x6d],cl
  418859:	cmp    eax,0x69cd664c
  41885e:	jecxz  0x418806
  418860:	mov    al,0x42
  418862:	not    bh
  418864:	icebp  
  418865:	arpl   WORD PTR [ebp-0x5afce4e2],ax
  41886b:	out    dx,al
  41886c:	pop    edx
  41886d:	add    dh,BYTE PTR [edi]
  41886f:	jl     0x418879
  418871:	mov    dh,0x77
  418873:	and    ah,BYTE PTR [ecx-0x49a10ad1]
  418879:	xor    eax,0x7f555f57
  41887e:	and    DWORD PTR [ebp+0x4a],0x68
  418882:	retf   
  418883:	(bad)  
  418884:	in     al,dx
  418885:	pop    esp
  418886:	mov    cl,0xb1
  418888:	mov    ch,0xfb
  41888a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41888b:	mov    cl,0xe6
  41888d:	clc    
  41888e:	sub    BYTE PTR [ecx-0x238f9d53],bh
  418894:	ret    
  418895:	loop   0x418880
  418897:	js     0x4188f8
  418899:	int3   
  41889a:	arpl   WORD PTR [edx+ebp*4+0x53],bp
  41889e:	xadd   bh,ch
  4188a1:	rcr    BYTE PTR [edi-0x24],1
  4188a4:	xchg   edx,eax
  4188a5:	push   ds
  4188a6:	pushf  
  4188a7:	pushf  
  4188a8:	jp     0x418895
  4188aa:	in     al,0x2e
  4188ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ad:	pop    ds
  4188ae:	sbb    DWORD PTR [ecx+0x7d],ecx
  4188b1:	or     bh,BYTE PTR [edx-0x4e]
  4188b4:	ins    BYTE PTR es:[edi],dx
  4188b5:	cmp    edi,edx
  4188b7:	icebp  
  4188b8:	(bad)  
  4188b9:	mov    eax,0xe65b65c9
  4188be:	pop    ebp
  4188bf:	arpl   WORD PTR [ebp-0x7c24e4b1],bx
  4188c5:	rol    al,0x87
  4188c8:	inc    ebp
  4188c9:	push   ebp
  4188ca:	pop    ss
  4188cb:	daa    
  4188cc:	pop    edi
  4188cd:	std    
  4188ce:	adc    eax,0x66f32086
  4188d3:	push   ss
  4188d4:	leave  
  4188d5:	lods   al,BYTE PTR ds:[esi]
  4188d6:	jo     0x4188b4
  4188d8:	jbe    0x4188cf
  4188da:	outs   dx,DWORD PTR ds:[esi]
  4188db:	pop    ebx
  4188dc:	dec    eax
  4188dd:	int3   
  4188de:	ficom  WORD PTR [ebx+eiz*4]
  4188e1:	repz jo 0x4188b9
  4188e4:	lock and BYTE PTR [ebx-0x55],bl
  4188e8:	or     edx,DWORD PTR [esi-0x630b195b]
  4188ee:	jno    0x4188a3
  4188f0:	cmp    ebx,DWORD PTR ds:0x98d483e6
  4188f6:	adc    BYTE PTR [ebx-0x2bb71684],cl
  4188fc:	(bad)  
  4188fd:	in     eax,dx
  4188fe:	inc    ebx
  4188ff:	popf   
  418900:	mov    ebx,0x322cddd
  418905:	inc    ebp
  418906:	pop    esp
  418907:	pop    ss
  418908:	lods   eax,DWORD PTR ds:[esi]
  418909:	sbb    eax,0x2d6613cd
  41890e:	outs   dx,DWORD PTR ds:[esi]
  41890f:	push   es
  418910:	(bad)  
  418911:	daa    
  418912:	mov    WORD PTR [edi-0x79],ss
  418915:	bound  eax,QWORD PTR [ebx+0x4b]
  418918:	mov    fs,WORD PTR [eax]
  41891a:	push   edi
  41891b:	jbe    0x418946
  41891d:	inc    ebp
  41891e:	into   
  41891f:	mov    esi,0xd7583004
  418924:	dec    ebx
  418925:	call   0xd30e4818
  41892a:	imul   edi,DWORD PTR [eax],0xda704f4f
  418930:	sub    BYTE PTR [edi+0x2df672a5],cl
  418936:	push   edx
  418937:	mov    esi,0xb93e2b1f
  41893c:	lds    edx,FWORD PTR ds:0xac7cb8bb
  418942:	in     eax,0xe2
  418944:	jg     0x418958
  418946:	lea    ebx,[esi-0x2146e94]
  41894c:	mov    bl,cl
  41894e:	mov    ch,BYTE PTR [edx+0x6c429555]
  418954:	inc    edi
  418955:	pop    esp
  418956:	leave  
  418957:	and    eax,DWORD PTR [ebx+0xd98b332]
  41895d:	xor    al,0x17
  41895f:	neg    esp
  418961:	xlat   BYTE PTR ds:[ebx]
  418962:	jns    0x418944
  418964:	in     al,0x72
  418966:	jle    0x4188e9
  418968:	or     al,0xca
  41896a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41896b:	rcl    dh,0xc2
  41896e:	sti    
  41896f:	jae    0x41896c
  418971:	or     eax,0x377d9d3a
  418976:	dec    ecx
  418977:	aad    0x79
  418979:	push   edx
  41897a:	pop    ds
  41897b:	pop    ebp
  41897c:	in     al,0xaf
  41897e:	dec    ecx
  41897f:	cmp    eax,0x813c5270
  418984:	add    BYTE PTR [ebp-0x59e5c91f],al
  41898a:	fiadd  WORD PTR [edi]
  41898c:	js     0x4189d0
  41898e:	fisubr DWORD PTR [edi+0x5a]
  418991:	and    al,0x3d
  418993:	and    DWORD PTR [ecx-0x285d56df],0x43
  41899a:	call   0x817e:0xa89d704d
  4189a1:	je     0x418986
  4189a3:	mov    al,0x84
  4189a5:	jae    0x4189b6
  4189a7:	out    dx,al
  4189a8:	pop    edi
  4189a9:	adc    ebp,ebp
  4189ab:	jl     0x418978
  4189ad:	loop   0x41893e
  4189af:	jne    0x4189c7
  4189b1:	mov    dl,0xf1
  4189b3:	(bad)  
  4189b4:	jae    0x418997
  4189b6:	xchg   ebp,eax
  4189b7:	sub    al,0x36
  4189b9:	inc    eax
  4189ba:	mov    esi,0x930848fd
  4189bf:	scas   al,BYTE PTR es:[edi]
  4189c0:	retf   0xbffc
  4189c3:	out    dx,al
  4189c4:	or     DWORD PTR [ecx],esp
  4189c6:	xor    ecx,eax
  4189c8:	add    ecx,esi
  4189ca:	adc    DWORD PTR ds:0x42a2ee,edi
  4189d0:	mov    DWORD PTR [ebp-0xc],ecx
  4189d3:	add    DWORD PTR ds:0x42a25a,0x6cdc
  4189dd:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4189e4:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  4189ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4189f5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4189fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4189ff:	mov    DWORD PTR ds:0x42a2ee,0x1b
  418a09:	cmp    DWORD PTR ds:0x42a2ee,0x0
  418a10:	je     0x418a4a
  418a16:	cmp    DWORD PTR ds:0x42a2ee,0x1c
  418a1d:	ja     0x418a4a
  418a23:	jmp    0x418a38
  418a28:	push   0x4b24
  418a2d:	push   0x42a296
  418a32:	call   DWORD PTR ds:0x42a3f2
  418a38:	mov    edi,DWORD PTR ds:0x42a2ee
  418a3e:	dec    edi
  418a3f:	mov    DWORD PTR ds:0x42a2ee,edi
  418a45:	jmp    0x418a09
  418a4a:	mov    DWORD PTR [ebp+0x8],ecx
  418a4d:	mov    edi,DWORD PTR ds:0x42a28e
  418a53:	xor    edi,DWORD PTR ds:0x42a2c6
  418a59:	mov    DWORD PTR ds:0x42a28e,edi
  418a5f:	mov    ecx,DWORD PTR [ebp+0x8]
  418a62:	xor    ecx,eax
  418a64:	mov    DWORD PTR ds:0x42a2b6,0x16
  418a6e:	cmp    DWORD PTR ds:0x42a2b6,0x0
  418a75:	je     0x418aac
  418a7b:	cmp    DWORD PTR ds:0x42a2b6,0x1d
  418a82:	ja     0x418aac
  418a88:	jmp    0x418a98
  418a8d:	push   0x42a28a
  418a92:	call   DWORD PTR ds:0x42a3f6
  418a98:	xor    edi,edi
  418a9a:	xor    edi,DWORD PTR ds:0x42a2b6
  418aa0:	dec    edi
  418aa1:	mov    DWORD PTR ds:0x42a2b6,edi
  418aa7:	jmp    0x418a6e
  418aac:	add    ecx,esi
  418aae:	mov    ecx,0x242ebc9
  418ab3:	mov    edi,0xf641bc8
  418ab8:	je     0x421e4f
  418abe:	and    DWORD PTR ds:0x42a27a,0x0
  418ac8:	jmp    0x418adc
  418acd:	xor    ebx,ebx
  418acf:	or     ebx,DWORD PTR ds:0x42a27a
  418ad5:	inc    ebx
  418ad6:	mov    DWORD PTR ds:0x42a27a,ebx
  418adc:	cmp    DWORD PTR ds:0x42a27a,0x14
  418ae3:	jae    0x418b2d
  418ae9:	cmp    DWORD PTR ds:0x42a27a,0xa
  418af0:	jb     0x418b2d
  418af6:	jmp    0x418b0e
  418afb:	push   DWORD PTR [ebp-0x14]
  418afe:	push   0x42a272
  418b03:	push   0x7a1d
  418b08:	call   DWORD PTR ds:0x42a3fa
  418b0e:	cmp    DWORD PTR ds:0x42a27a,0x9
  418b15:	jne    0x418b28
  418b1b:	mov    ebx,DWORD PTR ds:0x42a27a
  418b21:	inc    ebx
  418b22:	mov    DWORD PTR ds:0x42a27a,ebx
  418b28:	jmp    0x418acd
  418b2d:	mov    edx,DWORD PTR [ebp+0x8]
  418b30:	mov    ebx,DWORD PTR [ebp-0x8]
  418b33:	xor    edx,eax
  418b35:	xor    ebx,eax
  418b37:	sub    edx,ebx
  418b39:	sub    DWORD PTR ds:0x42a26e,edi
  418b3f:	sub    edx,esi
  418b41:	sub    ebx,0x5edd
  418b47:	xor    edx,eax
  418b49:	adc    ebx,DWORD PTR ds:0x42a272
  418b4f:	mov    DWORD PTR [ebp+0x8],edx
  418b52:	adc    DWORD PTR ds:0x42a2d6,edx
  418b58:	jmp    0x41aeb0
  418b5d:	add    al,ch
  418b5f:	test   BYTE PTR [edx-0x15ff7d6a],0x26
  418b66:	and    BYTE PTR [edx-0x3e],dl
  418b69:	or     cl,BYTE PTR [ecx+0x1cc7d375]
  418b6f:	jl     0x418af4
  418b71:	inc    esi
  418b72:	pop    esi
  418b73:	add    DWORD PTR [ebx-0x1d9e0d6],0x6
  418b7a:	xchg   ecx,eax
  418b7b:	mov    esi,0x378e58ad
  418b80:	dec    BYTE PTR [ebx-0x490e4986]
  418b86:	sbb    al,0xb7
  418b88:	dec    edi
  418b89:	loopne 0x418b77
  418b8b:	cmp    cl,BYTE PTR [ecx+ecx*2-0x556b615b]
  418b92:	and    al,0x7e
  418b94:	add    esp,esi
  418b96:	(bad)  
  418b97:	xor    BYTE PTR [ecx-0x56],ch
  418b9a:	xchg   ecx,eax
  418b9b:	and    BYTE PTR [ebx],ah
  418b9d:	pop    es
  418b9e:	xchg   edx,eax
  418b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba0:	ins    BYTE PTR es:[edi],dx
  418ba1:	mov    bh,0xe8
  418ba3:	pop    esp
  418ba4:	inc    ebp
  418ba5:	push   ebx
  418ba6:	and    BYTE PTR [edx],0xb1
  418ba9:	call   DWORD PTR [esi+0x68]
  418bac:	xor    eax,0x15d78cb5
  418bb1:	jnp    0x418b9d
  418bb3:	outs   dx,DWORD PTR ds:[esi]
  418bb4:	(bad)  
  418bb5:	lods   al,BYTE PTR ds:[esi]
  418bb6:	jecxz  0x418ba5
  418bb8:	jb     0x418bbf
  418bba:	push   0x8bb3c332
  418bbf:	adc    al,0xc3
  418bc1:	gs jmp 0x5994d165
  418bc7:	xor    al,0xb9
  418bc9:	push   esp
  418bca:	mov    al,0x30
  418bcc:	and    DWORD PTR [ebx+0x2b9e11d6],0x9f56f7fd
  418bd6:	jmp    0x6f2ddb7
  418bdb:	mov    ebx,0xea1b440c
  418be0:	jle    0x418ba6
  418be2:	pusha  
  418be3:	and    ecx,DWORD PTR [esi+0x7605a48e]
  418be9:	arpl   WORD PTR cs:[edx-0x3fce9afc],si
  418bf0:	aad    0x7e
  418bf2:	stos   DWORD PTR es:[edi],eax
  418bf3:	ror    dl,1
  418bf5:	loop   0x418bb6
  418bf7:	pusha  
  418bf8:	pop    eax
  418bf9:	mov    ebx,0x4bfcbd38
  418bfe:	adc    al,0x18
  418c00:	pusha  
  418c01:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  418c03:	popf   
  418c04:	es icebp 
  418c06:	or     DWORD PTR [edx],edi
  418c08:	mov    al,ds:0x6dabc24f
  418c0d:	add    al,0x95
  418c0f:	(bad)  
  418c10:	ficomp WORD PTR ds:0x6e86907b
  418c16:	lock aas 
  418c18:	inc    ecx
  418c19:	out    0xec,al
  418c1b:	retf   
  418c1c:	data16 mov bh,0xda
  418c1f:	pop    esi
  418c20:	lock sub ebp,DWORD PTR [ecx+0x190f5d28]
  418c27:	and    eax,0xce456526
  418c2c:	(bad)  
  418c2d:	daa    
  418c2e:	stc    
  418c2f:	jb     0x418c8b
  418c31:	push   edi
  418c32:	pcmpgtd mm1,mm7
  418c35:	outs   dx,DWORD PTR ds:[esi]
  418c36:	arpl   WORD PTR [ecx],si
  418c38:	and    bl,ah
  418c3a:	fistp  QWORD PTR [ebx+ebx*1-0x7f1b2361]
  418c41:	int    0x23
  418c43:	sbb    esp,DWORD PTR [ecx-0x72ef6cb7]
  418c49:	mov    dh,0xc2
  418c4b:	jmp    0xfaf2:0x53590278
  418c52:	or     edx,DWORD PTR [esi-0x1795eeea]
  418c58:	(bad)  
  418c59:	cmp    eax,0xdea065cb
  418c5e:	sbb    ebp,DWORD PTR [ecx+0x1bc7686c]
  418c64:	jb     0x418cc7
  418c66:	ds mov edi,0xd656ea01
  418c6c:	inc    ebp
  418c6d:	mov    ds:0x838d9f97,eax
  418c72:	push   edi
  418c73:	ficom  DWORD PTR [ebx+0x29fba5]
  418c79:	rcr    dh,cl
  418c7b:	es jg  0x418c30
  418c7e:	jb     0x418ce1
  418c80:	ficomp WORD PTR [eax]
  418c82:	cmp    esp,ebp
  418c84:	xchg   edx,eax
  418c85:	mov    ebp,fs
  418c87:	add    ch,ch
  418c89:	in     al,0x2d
  418c8b:	cmp    ah,BYTE PTR [edi+0x0]
  418c8e:	mov    edx,ebp
  418c90:	add    BYTE PTR [edx+edi*4+0x65],dh
  418c94:	adc    al,0x5b
  418c96:	push   ebp
  418c97:	xchg   edi,eax
  418c98:	bound  ecx,QWORD PTR [ecx]
  418c9a:	pop    esp
  418c9b:	dec    esi
  418c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c9d:	aaa    
  418c9e:	stc    
  418c9f:	or     DWORD PTR [ebx],ebp
  418ca1:	test   DWORD PTR [ebp-0x4c],ebx
  418ca4:	xor    DWORD PTR [ebx],ebp
  418ca6:	push   edx
  418ca7:	js     0x418cca
  418ca9:	outs   dx,DWORD PTR ds:[esi]
  418caa:	sbb    DWORD PTR [ecx+0x46b2512d],esi
  418cb0:	das    
  418cb1:	popa   
  418cb2:	fwait
  418cb3:	xlat   BYTE PTR ds:[ebx]
  418cb4:	sub    DWORD PTR [edx-0x7b04ac8b],ebp
  418cba:	mov    esp,0xb3869bad
  418cbf:	std    
  418cc0:	xor    DWORD PTR ss:[ecx-0x5300260a],0x544fd8c9
  418ccb:	loopne 0x418d1c
  418ccd:	cmp    esi,edx
  418ccf:	lods   eax,DWORD PTR ds:[esi]
  418cd0:	push   cs
  418cd1:	fxch   st(1)
  418cd3:	jno    0x418cd2
  418cd5:	mov    edx,DWORD PTR [edx-0x2647e52f]
  418cdb:	int3   
  418cdc:	pop    esp
  418cdd:	outs   dx,BYTE PTR ds:[esi]
  418cde:	mov    al,ds:0x50353f89
  418ce3:	repnz (bad) 
  418ce5:	mov    bl,0xbf
  418ce7:	mov    esp,DWORD PTR [ebp-0x35]
  418cea:	ja     0x418cb2
  418cec:	rcr    BYTE PTR [edi+ebp*2],cl
  418cef:	(bad)  
  418cf0:	iret   
  418cf1:	outs   dx,BYTE PTR ds:[esi]
  418cf2:	sbb    al,dl
  418cf4:	dec    ebp
  418cf5:	fcomi  st,st(5)
  418cf7:	pop    es
  418cf8:	in     eax,0x5c
  418cfa:	std    
  418cfb:	dec    esp
  418cfc:	sbb    al,0x97
  418cfe:	xchg   ebp,eax
  418cff:	pop    eax
  418d00:	jnp    0x418cb7
  418d02:	fsubr  st(4),st
  418d04:	push   ebp
  418d05:	fstp   TBYTE PTR [eax-0x74079f16]
  418d0b:	cld    
  418d0c:	xlat   BYTE PTR ds:[ebx]
  418d0d:	inc    ebx
  418d0e:	pop    ebx
  418d0f:	icebp  
  418d10:	dec    edx
  418d11:	mov    ds:0x8b793b35,al
  418d16:	sub    al,0xe3
  418d18:	inc    edi
  418d19:	sub    ch,BYTE PTR [edi]
  418d1b:	(bad)  
  418d1c:	icebp  
  418d1d:	arpl   dx,bp
  418d1f:	(bad)  
  418d21:	cli    
  418d22:	add    ecx,esp
  418d24:	les    edx,FWORD PTR [eax+0xf]
  418d27:	inc    edx
  418d28:	mov    BYTE PTR [eax-0x72a31a97],bh
  418d2e:	jmp    0xfc398b40
  418d33:	retf   
  418d34:	and    edx,DWORD PTR [esi+0x6d1df82b]
  418d3a:	jmp    0x418d13
  418d3c:	xor    DWORD PTR [ecx+0x63],ebp
  418d3f:	pop    ss
  418d40:	pop    esp
  418d41:	mov    ecx,0x6323a9b5
  418d46:	push   edi
  418d47:	data16 xlat BYTE PTR ds:[ebx]
  418d49:	dec    esp
  418d4a:	loopne 0x418cce
  418d4c:	cli    
  418d4d:	or     cl,bl
  418d4f:	inc    esp
  418d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d51:	push   ds
  418d52:	add    esp,DWORD PTR [edx+eiz*4-0x49c3d965]
  418d59:	xacquire xchg BYTE PTR [esi],bl
  418d5c:	jne    0x418ce2
  418d5e:	sahf   
  418d5f:	hlt    
  418d60:	cmp    eax,esp
  418d62:	fwait
  418d63:	push   ebp
  418d64:	mov    al,ds:0xa2d74e6c
  418d69:	cmp    cl,BYTE PTR [edi-0x3e]
  418d6c:	in     al,dx
  418d6d:	pop    edx
  418d6e:	sbb    DWORD PTR [ebp+ebp*2-0x48],esi
  418d72:	js     0x418dd6
  418d74:	adc    BYTE PTR [esp+ecx*8+0x6e2f8dab],dh
  418d7b:	jns    0x418da1
  418d7d:	fucomip st,st(3)
  418d7f:	cmp    al,0x85
  418d81:	jb     0x418d71
  418d83:	cwde   
  418d84:	pop    esp
  418d85:	or     BYTE PTR [edi+0x21],dh
  418d88:	fisttp QWORD PTR ds:0x4a3c8531
  418d8e:	pop    ecx
  418d8f:	int    0xcd
  418d91:	push   esp
  418d92:	and    BYTE PTR [ebx+ecx*4],cl
  418d95:	ror    DWORD PTR [edi-0xe],0x61
  418d99:	xlat   BYTE PTR ds:[ebx]
  418d9a:	(bad)  
  418d9b:	(bad)  
  418d9c:	sub    DWORD PTR [ebp-0x2856a265],ecx
  418da2:	push   ss
  418da3:	mov    eax,0xe3c2590
  418da8:	(bad)  
  418da9:	jl     0x418d8b
  418dab:	add    ebx,ebx
  418dad:	repnz jecxz 0x418d42
  418db0:	imul   edi,DWORD PTR [eax-0x489710d6],0x73
  418db7:	pop    ecx
  418db8:	cmp    DWORD PTR ds:0x2599a4f5,ecx
  418dbe:	xchg   ebp,eax
  418dbf:	inc    esp
  418dc0:	mov    BYTE PTR ds:0xbf6f0e3b,dh
  418dc6:	xchg   edi,eax
  418dc7:	cmp    esi,DWORD PTR [eax]
  418dc9:	dec    ebx
  418dca:	adc    dh,BYTE PTR [eax-0x6f]
  418dcd:	mov    dh,0x27
  418dcf:	(bad)  
  418dd1:	(bad)  
  418dd2:	cmpxchg edx,edx
  418dd5:	aad    0xcb
  418dd7:	int    0xae
  418dd9:	push   ecx
  418dda:	fadd   DWORD PTR [eax]
  418ddc:	xchg   BYTE PTR [ebx+0x7f],dh
  418ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de0:	das    
  418de1:	out    0xd5,al
  418de3:	jle    0x418dbc
  418de5:	adc    esi,DWORD PTR [ecx]
  418de7:	(bad)  
  418de9:	repz stc 
  418deb:	stos   DWORD PTR es:[edi],eax
  418dec:	mov    ecx,0x176d0a80
  418df1:	sub    ecx,ebx
  418df3:	in     al,dx
  418df4:	das    
  418df5:	xchg   edi,eax
  418df6:	stos   DWORD PTR es:[edi],eax
  418df7:	out    0xf2,al
  418df9:	(bad)  
  418dfb:	adc    DWORD PTR [ecx+0x10ee5182],eax
  418e01:	int    0x89
  418e03:	sub    al,0x4d
  418e05:	xchg   ebp,eax
  418e06:	retf   
  418e07:	mov    BYTE PTR [edx+0x7a],cl
  418e0a:	mov    edi,0xf113c2d3
  418e0f:	lea    ebp,[edx-0x2e]
  418e12:	dec    esi
  418e13:	cli    
  418e14:	xchg   BYTE PTR [esi],bh
  418e16:	jecxz  0x418dfb
  418e18:	mov    al,ds:0x111da945
  418e1d:	mov    cl,0xa2
  418e1f:	push   ebx
  418e20:	stos   BYTE PTR es:[edi],al
  418e21:	jbe    0x418e1f
  418e23:	lods   eax,DWORD PTR ds:[esi]
  418e24:	enter  0x7498,0xe0
  418e28:	(bad)  
  418e29:	loope  0x418db0
  418e2b:	xchg   edx,eax
  418e2c:	jl     0x418de4
  418e2e:	fldcw  WORD PTR [eax-0x13]
  418e31:	mov    ch,0x2c
  418e33:	sbb    ecx,DWORD PTR [edi]
  418e35:	lea    esp,[ebp+0x2f]
  418e38:	ret    0x363f
  418e3b:	xchg   BYTE PTR [edi-0x1],cl
  418e3e:	sub    BYTE PTR [edx],cl
  418e40:	xlat   BYTE PTR ds:[ebx]
  418e41:	popa   
  418e42:	pop    eax
  418e43:	push   es
  418e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e45:	dec    BYTE PTR [eax]
  418e47:	mov    edx,0x22e20431
  418e4c:	scas   eax,DWORD PTR es:[edi]
  418e4d:	fst    QWORD PTR gs:[ecx-0x6]
  418e51:	inc    edi
  418e52:	mov    al,0x53
  418e54:	sar    DWORD PTR [eax+0x2d03f131],1
  418e5a:	ja     0x418e9b
  418e5c:	jb     0x418e2a
  418e5e:	pop    ebx
  418e5f:	sbb    eax,0xf3e5cf24
  418e64:	inc    ecx
  418e65:	ss mov cl,0xe0
  418e68:	jmp    0x3829c733
  418e6d:	sub    eax,0x51766c6
  418e72:	adc    edi,edx
  418e74:	loope  0x418e59
  418e76:	mov    ecx,0x8e31d3dd
  418e7b:	cs out 0x91,al
  418e7e:	dec    ebp
  418e7f:	adc    al,0x82
  418e81:	mov    dl,0x71
  418e83:	std    
  418e84:	mov    cl,0xf9
  418e86:	push   esi
  418e87:	add    eax,esp
  418e89:	fwait
  418e8a:	xchg   edx,eax
  418e8b:	add    ebx,eax
  418e8d:	sbb    dh,dl
  418e8f:	pop    eax
  418e90:	xchg   ebp,eax
  418e91:	mov    DWORD PTR [ebx],edx
  418e93:	push   edi
  418e94:	dec    ebx
  418e95:	push   esp
  418e96:	stc    
  418e97:	inc    ebx
  418e98:	cld    
  418e99:	add    eax,0x22aa4bba
  418e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9f:	iret   
  418ea0:	and    esp,esi
  418ea2:	nop
  418ea3:	nop
  418ea4:	mov    ebp,0xb48c8668
  418ea9:	rcr    DWORD PTR ds:0x9cd5cc02,0xef
  418eb0:	or     al,dh
  418eb2:	or     ah,BYTE PTR [ecx+esi*2-0x5700e320]
  418eb9:	out    0x8b,al
  418ebb:	(bad)  
  418ebc:	cmp    eax,0xacdbd3c
  418ec1:	jb     0x418e9f
  418ec3:	dec    ecx
  418ec4:	lahf   
  418ec5:	cdq    
  418ec6:	dec    ebx
  418ec7:	test   ah,dl
  418ec9:	push   0x3fae0af2
  418ece:	inc    eax
  418ecf:	xchg   BYTE PTR [edx+0x22735b19],dh
  418ed5:	dec    ebx
  418ed6:	sar    DWORD PTR [ecx+0x50],1
  418ed9:	cli    
  418eda:	pop    eax
  418edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418edc:	movbe  (bad),edx
  418edd:	cmp    cl,dh
  418edf:	shr    BYTE PTR [ebx],cl
  418ee1:	push   0xc8bd1c39
  418ee6:	lods   al,BYTE PTR ds:[esi]
  418ee7:	sahf   
  418ee8:	imul   eax,DWORD PTR [edx+esi*4],0xffffffb2
  418eec:	push   ebx
  418eed:	inc    edx
  418eee:	les    ebp,FWORD PTR [ebx+0x71]
  418ef1:	and    al,0x82
  418ef3:	add    ebx,eax
  418ef5:	add    bh,BYTE PTR [ebp+0x2e]
  418ef8:	and    DWORD PTR ds:0xc729e613,edx
  418efe:	adc    edi,DWORD PTR [esi]
  418f00:	fistp  DWORD PTR [esi+0x39]
  418f03:	pop    esi
  418f04:	mov    edx,0xa0953c83
  418f09:	sub    cl,al
  418f0b:	das    
  418f0c:	xor    DWORD PTR [ebp+0x5b],edi
  418f0f:	ficomp WORD PTR [edx+ebp*8-0x7f0f3452]
  418f16:	ins    DWORD PTR es:[edi],dx
  418f17:	pop    esp
  418f18:	fimul  DWORD PTR [ecx+0x7dc353ab]
  418f1e:	cmp    eax,0xa0b61b35
  418f23:	repz dec eax
  418f25:	in     al,0x40
  418f27:	into   
  418f28:	xor    al,0xda
  418f2a:	ds sub al,0x84
  418f2d:	mov    al,ds:0x897f83b8
  418f32:	shr    DWORD PTR [edi],cl
  418f34:	cmp    BYTE PTR [edi+0x46f3ccb7],ah
  418f3a:	shr    BYTE PTR [ecx+0x21390a24],0x5a
  418f41:	nop
  418f42:	leave  
  418f43:	jmp    0x418f43
  418f45:	and    ecx,DWORD PTR [eax+0x2b29e354]
  418f4b:	mov    eax,0xfab01183
  418f50:	push   eax
  418f51:	push   0xffffffcd
  418f53:	stos   BYTE PTR es:[edi],al
  418f54:	sub    cl,BYTE PTR [esi*1+0x4657e602]
  418f5b:	clc    
  418f5c:	shr    ah,cl
  418f5e:	push   edx
  418f5f:	pushf  
  418f60:	or     BYTE PTR [esi],cl
  418f62:	inc    eax
  418f63:	add    BYTE PTR ds:0x835b8248,0xdf
  418f6a:	xor    DWORD PTR [edi+0x20],0x7e30c9f7
  418f71:	inc    esi
  418f72:	aas    
  418f73:	jo     0x418f5d
  418f75:	hlt    
  418f76:	jle    0x418fd2
  418f78:	jge    0x418f10
  418f7a:	cli    
  418f7b:	sub    DWORD PTR [ecx],eax
  418f7d:	call   0x104e6398
  418f82:	sahf   
  418f83:	pushf  
  418f84:	call   0xb11bbd27
  418f89:	xlat   BYTE PTR ds:[ebx]
  418f8a:	mov    bh,0x1e
  418f8c:	and    BYTE PTR [esi-0x1b],al
  418f8f:	inc    ebx
  418f90:	stos   BYTE PTR es:[edi],al
  418f91:	mov    al,0x43
  418f93:	rcr    BYTE PTR [edx+ecx*2+0x3c4cd0fc],cl
  418f9a:	dec    edi
  418f9b:	outs   dx,DWORD PTR ds:[esi]
  418f9c:	fstp   TBYTE PTR cs:[esi-0x72]
  418fa0:	jg     0x418f4b
  418fa2:	jmp    0x418fb1
  418fa4:	or     eax,DWORD PTR [ecx-0x2e93dcd8]
  418faa:	push   edx
  418fab:	add    DWORD PTR [esi],0x5c
  418fae:	popa   
  418faf:	sti    
  418fb0:	add    al,0xf0
  418fb2:	sti    
  418fb3:	mov    ebp,0x72c08250
  418fb8:	xor    BYTE PTR [ecx-0x70c78a41],cl
  418fbe:	shl    DWORD PTR [edi+0x5b],0xf9
  418fc2:	jp     0x418fb8
  418fc4:	push   ecx
  418fc5:	xchg   ebp,eax
  418fc6:	xchg   esp,eax
  418fc7:	arpl   WORD PTR [edx-0x674a5eb1],ax
  418fcd:	pop    ecx
  418fce:	lods   eax,DWORD PTR ds:[esi]
  418fcf:	push   ss
  418fd0:	push   0x5d6fabf2
  418fd5:	mov    al,0x89
  418fd7:	or     al,0x38
  418fd9:	mov    bl,BYTE PTR [edi+ebp*8+0x1716af15]
  418fe0:	mov    esi,0x46ec9c27
  418fe5:	daa    
  418fe6:	mov    edi,0xfcb4127d
  418feb:	daa    
  418fec:	xchg   edx,eax
  418fed:	push   0xb5140050
  418ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff3:	jecxz  0x418fb6
  418ff5:	jb     0x418ff9
  418ff7:	sub    ah,dh
  418ff9:	iret   
  418ffa:	fbld   TBYTE PTR [ecx]
  418ffc:	mov    eax,ds:0xc0a45d58
  419001:	lahf   
  419002:	sti    
  419003:	cmc    
  419004:	mov    al,ds:0x554c69b9
  419009:	ins    DWORD PTR es:[edi],dx
  41900a:	nop
  41900b:	repnz outs dx,BYTE PTR ds:[esi]
  41900d:	push   ebx
  41900e:	jg     0x418fae
  419010:	sahf   
  419011:	int3   
  419012:	mov    esp,0xed02c933
  419017:	inc    edi
  419018:	cmp    eax,0x48f7b357
  41901d:	mov    edx,0xdc8a1cf1
  419022:	ss pop edx
  419024:	push   ebx
  419025:	outs   dx,DWORD PTR ds:[esi]
  419026:	mov    bh,0x71
  419028:	in     eax,0x22
  41902a:	(bad)  
  41902b:	inc    esp
  41902c:	sbb    bl,bh
  41902e:	loopne 0x418fb0
  419030:	sar    edx,cl
  419032:	jmp    0x419095
  419034:	(bad)  es:0x3ccda581
  41903b:	daa    
  41903c:	pop    edx
  41903d:	lods   al,BYTE PTR ds:[esi]
  41903e:	int3   
  41903f:	addr16 xor al,0xe3
  419042:	xor    edx,DWORD PTR [esi]
  419044:	fnstsw WORD PTR [edi-0x76ef529a]
  41904a:	pop    eax
  41904c:	fmul   DWORD PTR [eax-0x77]
  41904f:	lahf   
  419050:	cli    
  419051:	xchg   ecx,eax
  419052:	ins    DWORD PTR es:[edi],dx
  419053:	pop    ecx
  419054:	jnp    0x4190b5
  419056:	scas   al,BYTE PTR es:[edi]
  419057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419058:	jg     0x419072
  41905a:	hlt    
  41905b:	mov    ebx,0xa6105398
  419060:	hlt    
  419061:	xchg   BYTE PTR [esi-0x44],al
  419064:	jecxz  0x4190a3
  419066:	sbb    ecx,DWORD PTR [ebx-0x2284852b]
  41906c:	cmp    ah,bl
  41906e:	std    
  41906f:	xor    al,0x9c
  419071:	sub    BYTE PTR [esi+0x1b607d8f],0x14
  419078:	adc    eax,edi
  41907a:	je     0x41907d
  41907c:	mov    edx,0x30a9de72
  419081:	mov    ebx,0x9626b20b
  419086:	push   ecx
  419087:	push   0x6a
  419089:	lock inc ecx
  41908b:	mov    esp,0x413c5ec4
  419090:	xor    eax,0x9d5b4a33
  419095:	repnz mov DWORD PTR [edi+0x16d5bfe4],ebp
  41909c:	pushf  
  41909d:	daa    
  41909e:	ins    BYTE PTR es:[edi],dx
  41909f:	ds jb  0x41907e
  4190a2:	ret    0x2404
  4190a5:	inc    edx
  4190a6:	dec    eax
  4190a7:	cmc    
  4190a8:	in     al,dx
  4190a9:	addr16 jmp 0x389:0xd1badfa4
  4190b1:	(bad)  
  4190b3:	sub    cl,BYTE PTR [ebp+0x40]
  4190b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b7:	mov    ch,0xf3
  4190b9:	jp     0x419069
  4190bb:	outs   dx,DWORD PTR ds:[esi]
  4190bc:	push   esp
  4190bd:	(bad)  
  4190be:	repz cli 
  4190c0:	std    
  4190c1:	imul   esp,ecx,0xc
  4190c4:	jb     0x4190a3
  4190c6:	imul   ebp,DWORD PTR [ebx+0x3f],0x8b70df2e
  4190cd:	sbb    eax,0xe2845cfa
  4190d2:	ret    
  4190d3:	test   al,0x6c
  4190d5:	pop    edi
  4190d6:	and    ecx,DWORD PTR [eax]
  4190d8:	add    ebx,ebp
  4190da:	bswap  ebx
  4190dc:	(bad)  
  4190dd:	xchg   edx,eax
  4190de:	lods   eax,DWORD PTR ds:[esi]
  4190df:	push   es
  4190e0:	sar    DWORD PTR [esi],0x5f
  4190e3:	imul   esp,eax,0x40
  4190e6:	mov    edi,0x79c9ce86
  4190eb:	es dec ebx
  4190ed:	sbb    BYTE PTR [ecx-0x24560119],bl
  4190f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f4:	or     esp,DWORD PTR [edx+0x781e8f18]
  4190fa:	xchg   ebx,eax
  4190fb:	xor    DWORD PTR [esi+0x19],edx
  4190fe:	retf   0x4162
  419101:	repz out 0x8a,al
  419104:	fistp  DWORD PTR [ebx]
  419106:	out    dx,eax
  419107:	fdivr  st(6),st
  419109:	mov    ds:0xbeb3d22e,eax
  41910e:	sbb    al,0x1f
  419110:	in     al,dx
  419111:	mov    ecx,0x7602dc69
  419116:	sub    DWORD PTR [ebp+0x5f39c1a7],ebp
  41911c:	mov    ecx,0xb714985c
  419121:	cld    
  419122:	push   ecx
  419123:	mov    al,ds:0x41954de4
  419128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419129:	in     eax,dx
  41912a:	fwait
  41912b:	jle    0x4190ba
  41912d:	in     eax,dx
  41912e:	out    dx,al
  41912f:	dec    esp
  419130:	dec    esp
  419131:	xchg   edi,eax
  419132:	cmp    ch,0xb0
  419135:	ret    0x3bba
  419138:	popf   
  419139:	and    BYTE PTR [ecx-0x10],cl
  41913c:	mov    edx,0x73ccf547
  419141:	xchg   ebp,eax
  419142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419143:	mov    esi,0x4551b3a0
  419148:	pop    ss
  419149:	iret   
  41914a:	fbld   TBYTE PTR [eax-0x6a]
  41914d:	mov    ebp,DWORD PTR [edx+0x602aeb7]
  419153:	pop    eax
  419154:	cs pop edx
  419156:	(bad)  
  419158:	jecxz  0x419165
  41915a:	mov    al,ds:0x922f1310
  41915f:	mov    esp,0x1d8b3807
  419164:	mov    ecx,0xdc987fd6
  419169:	retf   0x8935
  41916c:	lods   eax,DWORD PTR ds:[esi]
  41916d:	retf   0xd4d4
  419170:	out    dx,al
  419171:	jle    0x41917e
  419173:	xchg   edx,eax
  419174:	sbb    al,0xbd
  419176:	mov    esi,0x734074b0
  41917b:	mov    DWORD PTR [edx],ebp
  41917d:	or     cl,BYTE PTR [bx+si]
  419180:	stc    
  419181:	xchg   ebx,eax
  419182:	pop    edi
  419183:	sar    DWORD PTR [edx+0x53],0x8e
  419187:	(bad)  
  419188:	push   ebp
  419189:	loop   0x419190
  41918b:	lock daa 
  41918d:	sbb    edx,DWORD PTR [eax-0x2b]
  419190:	hlt    
  419191:	inc    edi
  419192:	add    BYTE PTR [edi+0x7a],al
  419195:	ss xchg edi,eax
  419197:	adc    dh,al
  419199:	mov    esp,0xd1af9d4d
  41919e:	data16 mov BYTE PTR [ebp+0x2646fe11],dl
  4191a5:	cmp    BYTE PTR [ebx-0x67b885b4],bh
  4191ab:	jmp    0x155e0cdc
  4191b0:	outs   dx,DWORD PTR ds:[esi]
  4191b1:	inc    edx
  4191b2:	out    dx,eax
  4191b3:	inc    edx
  4191b4:	sub    eax,0x420298ac
  4191b9:	add    esi,esi
  4191bb:	dec    edi
  4191bc:	(bad)  
  4191bd:	retf   
  4191be:	jle    0x4191bd
  4191c0:	bound  esi,QWORD PTR [eax-0x28]
  4191c3:	dec    esi
  4191c4:	stc    
  4191c5:	ins    DWORD PTR es:[edi],dx
  4191c6:	fnstenv [esi-0x788e8ee0]
  4191cc:	bound  edx,QWORD PTR [ecx-0x6bd4dd71]
  4191d2:	arpl   WORD PTR [edi-0x2e],di
  4191d5:	test   BYTE PTR [esi],0x75
  4191d8:	lds    eax,FWORD PTR [edi]
  4191da:	sbb    DWORD PTR [esi-0x22bf0826],edi
  4191e0:	enter  0x838d,0xdd
  4191e4:	pop    ecx
  4191e5:	dec    edx
  4191e6:	int    0xef
  4191e8:	ret    0xf5ca
  4191eb:	shr    DWORD PTR [eax+0x576b5800],cl
  4191f1:	pop    eax
  4191f2:	sbb    al,0x28
  4191f4:	test   al,0x9b
  4191f6:	add    dl,BYTE PTR [ebx-0x49a2f813]
  4191fc:	cmp    eax,0xc454c024
  419201:	pushf  
  419202:	jge    0x4191a9
  419204:	push   ds
  419205:	imul   edx,DWORD PTR [eax-0x18],0x6e
  419209:	lds    edi,FWORD PTR [ebx-0x5d5806b7]
  41920f:	outs   dx,DWORD PTR ds:[esi]
  419210:	adc    ebp,DWORD PTR [esi-0x6d0c2f3c]
  419216:	mov    esp,edi
  419218:	inc    esi
  419219:	mov    esi,0x56c5778c
  41921e:	mov    ch,0x92
  419220:	and    edi,DWORD PTR [eax-0x3a7e0456]
  419226:	mov    WORD PTR [edx-0x46],cs
  419229:	mov    dl,0x51
  41922b:	call   0x4c50:0x5b8cda87
  419232:	xchg   ecx,eax
  419233:	push   ecx
  419234:	sub    bh,bh
  419236:	pop    ds
  419237:	jge    0x419266
  419239:	mov    al,ds:0x28530bf1
  41923e:	test   BYTE PTR [eax+0x6de68a8e],bl
  419244:	push   0xffffffe3
  419246:	and    edx,DWORD PTR [ebx-0x29778304]
  41924c:	push   edx
  41924d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41924e:	inc    edi
  41924f:	add    al,0x62
  419251:	shr    BYTE PTR [ecx],1
  419253:	clc    
  419254:	inc    ebx
  419255:	js     0x41929e
  419257:	push   esi
  419258:	pop    eax
  419259:	xchg   edi,edi
  41925b:	jns    0x419258
  41925d:	mov    dh,0xfd
  41925f:	les    esi,FWORD PTR [ebx]
  419261:	dec    edi
  419262:	mov    ebx,0xde5be106
  419267:	shr    esi,0xe
  41926a:	data16 mov ah,0x78
  41926d:	xchg   edi,eax
  41926e:	rol    ecx,1
  419270:	sub    DWORD PTR [edx],0x3e
  419273:	jp     0x419272
  419275:	(bad)  
  419277:	cmp    eax,0xf20681e5
  41927c:	jb     0x419288
  41927e:	ss xchg ecx,eax
  419280:	addr16 (bad) 
  419283:	shl    DWORD PTR [eax-0x47180ffe],1
  419289:	jmp    0x5f7d3ab1
  41928e:	and    eax,0xdec612aa
  419293:	xchg   edx,eax
  419294:	shl    DWORD PTR [esi-0x2],cl
  419297:	jnp    0x419279
  419299:	nop
  41929a:	scas   al,BYTE PTR es:[edi]
  41929b:	jg     0x419229
  41929d:	aam    0x4f
  41929f:	mov    esi,0x3df2b703
  4192a4:	mov    WORD PTR [ebx-0x8c6ea3],gs
  4192aa:	in     al,dx
  4192ab:	xchg   ebp,eax
  4192ac:	inc    edx
  4192ad:	inc    esi
  4192ae:	dec    ebx
  4192af:	mov    BYTE PTR [esi],bl
  4192b1:	mov    WORD PTR [ebx],fs
  4192b3:	pop    eax
  4192b4:	dec    edi
  4192b5:	sub    DWORD PTR [edx+0x2699b6c4],edi
  4192bb:	push   ecx
  4192bc:	test   BYTE PTR [esi+0x39],0x6d
  4192c0:	aam    0x8
  4192c2:	addr16 fcomi st,st(7)
  4192c5:	mov    dh,0xd5
  4192c7:	sub    BYTE PTR [eax],bh
  4192c9:	sub    BYTE PTR cs:[edx-0x40b18a21],ah
  4192d0:	popf   
  4192d1:	jg     0x4192cd
  4192d3:	mov    bl,0xb1
  4192d5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d7:	jae    0x419335
  4192d9:	sbb    dh,bl
  4192db:	xor    esi,esi
  4192dd:	cmp    eax,0x38923ee5
  4192e2:	test   BYTE PTR [ecx-0x68],0xc
  4192e6:	sar    BYTE PTR [ecx+0x36],0x64
  4192ea:	into   
  4192eb:	sti    
  4192ec:	jne    0x4192cf
  4192ee:	sbb    edi,DWORD PTR [ebp+0x63a76646]
  4192f4:	or     eax,esi
  4192f6:	mov    cx,0x7369
  4192fa:	jne    0x41929f
  4192fc:	ins    BYTE PTR es:[edi],dx
  4192fd:	outs   dx,BYTE PTR ds:[esi]
  4192fe:	dec    ebp
  4192ff:	inc    edi
  419300:	cmp    DWORD PTR [ebp+0xd],0x8bedf220
  419307:	clc    
  419308:	test   BYTE PTR [eax],0xde
  41930b:	sub    BYTE PTR [eax],ah
  41930d:	add    bl,ch
  41930f:	in     al,dx
  419310:	jns    0x4192e0
  419312:	daa    
  419313:	adc    al,0xda
  419315:	out    dx,al
  419316:	push   ebp
  419317:	pop    ebp
  419318:	ja     0x41937c
  41931a:	mov    ah,0x29
  41931c:	inc    esi
  41931d:	mov    gs,WORD PTR ds:0x2f623094
  419323:	(bad)  
  419324:	pop    es
  419325:	sbb    eax,0xce5b445b
  41932a:	inc    esi
  41932b:	or     al,0xe
  41932d:	leave  
  41932e:	mov    DWORD PTR [ebx],esi
  419330:	mov    cl,BYTE PTR [ebp+0x27ba3886]
  419336:	mov    ah,0xd7
  419338:	imul   esi,DWORD PTR [eax],0x69
  41933b:	aas    
  41933c:	icebp  
  41933d:	lea    esp,[edx]
  41933f:	stc    
  419340:	sub    eax,0x394c2d83
  419345:	dec    ebp
  419346:	call   0x699828a7
  41934b:	jp     0x419320
  41934d:	jb     0x4193b6
  41934f:	loop   0x4193bd
  419351:	and    al,0xa
  419353:	jmp    0x2a1a258
  419358:	jb     0x419306
  41935a:	dec    ebp
  41935b:	call   0x40bc:0xf343baa3
  419362:	out    dx,al
  419363:	adc    DWORD PTR [edx],0x46
  419366:	cmp    BYTE PTR [ecx-0x28c1f492],al
  41936c:	aaa    
  41936d:	add    dh,BYTE PTR [ecx+edx*1]
  419370:	xor    eax,0x7a62b196
  419376:	(bad)  
  419377:	fldcw  WORD PTR [ebx+ebp*8]
  41937a:	jp     0x4193a9
  41937c:	and    edi,DWORD PTR [esi-0x65442c16]
  419382:	ficom  WORD PTR ds:0x85c6768f
  419388:	shl    DWORD PTR [eax],0xa1
  41938b:	popf   
  41938c:	xchg   ebp,eax
  41938d:	popa   
  41938e:	(bad)  
  419390:	in     al,dx
  419391:	mov    al,0x88
  419393:	outs   dx,DWORD PTR ds:[esi]
  419394:	adc    BYTE PTR [esi-0x17125bb2],ah
  41939a:	xor    bl,dh
  41939c:	imul   DWORD PTR [edx]
  41939e:	xor    esp,DWORD PTR [esi+0x5c25d603]
  4193a4:	push   ss
  4193a5:	mov    dh,BYTE PTR [edi-0x75e91364]
  4193ab:	mov    al,0x45
  4193ad:	std    
  4193ae:	push   edx
  4193af:	cmp    DWORD PTR [esi+0x7a00c43],ecx
  4193b5:	jns    0x4193e7
  4193b7:	clc    
  4193b8:	cwde   
  4193b9:	sbb    eax,0x6da171c8
  4193be:	mov    bl,0x48
  4193c0:	push   ss
  4193c1:	push   ss
  4193c2:	ins    BYTE PTR es:[edi],dx
  4193c3:	fwait
  4193c4:	jg     0x419445
  4193c6:	lods   eax,DWORD PTR ds:[esi]
  4193c7:	cdq    
  4193c8:	dec    eax
  4193c9:	mov    ch,0x97
  4193cb:	cmc    
  4193cc:	inc    edx
  4193cd:	and    BYTE PTR [ecx+edx*2],ch
  4193d0:	and    bl,BYTE PTR [esi-0x28]
  4193d3:	imul   ebx,esp,0x34
  4193d6:	out    0xdd,eax
  4193d8:	add    ecx,0x6f
  4193db:	mov    ds:0xf0c6a9e5,eax
  4193e0:	pop    edx
  4193e1:	or     al,0x5d
  4193e3:	fstp   TBYTE PTR [edi+0x35]
  4193e6:	mov    esi,edi
  4193e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193e9:	in     eax,0xcc
  4193eb:	mov    al,0x12
  4193ed:	fisttp QWORD PTR [edx-0x67]
  4193f0:	push   0xffffffc5
  4193f2:	and    DWORD PTR [ebx+ebx*8-0x1a],eax
  4193f6:	adc    bh,0xd9
  4193f9:	shl    DWORD PTR [edi-0x798eb1a7],1
  4193ff:	jmp    0xd1c0:0x62b1b51c
  419406:	fistp  QWORD PTR [esi]
  419408:	xor    DWORD PTR [esi-0x7453f59c],edx
  41940e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41940f:	rcr    BYTE PTR [edx-0x799f2784],cl
  419415:	pop    edx
  419416:	mov    al,ds:0xaa732824
  41941b:	add    eax,0x73dc84af
  419420:	xor    al,0x4e
  419422:	add    DWORD PTR [esp+ebx*1],ecx
  419425:	js     0x419448
  419427:	ret    
  419428:	in     al,0x9b
  41942a:	pop    edi
  41942b:	idiv   BYTE PTR [ecx-0x7bf1be22]
  419431:	mov    al,BYTE PTR [edi+edi*2-0x18]
  419435:	push   ds
  419436:	xlat   BYTE PTR ds:[ebx]
  419437:	cmp    al,al
  419439:	loop   0x41946f
  41943b:	jo     0x41940e
  41943d:	mov    dl,0xa1
  41943f:	add    DWORD PTR [ebx],edx
  419441:	cs test eax,0x1cd4b30f
  419447:	outs   dx,DWORD PTR ds:[esi]
  419448:	mov    esi,0x530fb326
  41944d:	inc    edx
  41944e:	or     BYTE PTR [eax-0x76],ah
  419451:	or     esp,DWORD PTR [edx+0x782cbff7]
  419457:	jb     0x4194ba
  419459:	sti    
  41945a:	test   al,0x6e
  41945c:	mov    cl,0xd9
  41945e:	cmp    esi,DWORD PTR [edi+0x4b]
  419461:	cmp    eax,0x867face4
  419466:	sub    DWORD PTR [edx+0x2de6c714],ebx
  41946c:	push   esi
  41946d:	into   
  41946e:	sub    BYTE PTR [esi+0x6924d4b],bh
  419474:	aaa    
  419475:	ret    0xf097
  419478:	gs lock jl 0x4194e1
  41947c:	es push eax
  41947e:	sbb    dl,dh
  419480:	vhsubpd ymm6,ymm3,YMMWORD PTR [ecx-0x65]
  419485:	mov    esp,0x47d0f12b
  41948a:	fist   DWORD PTR [edi]
  41948c:	cmc    
  41948d:	adc    al,0x5f
  41948f:	inc    esp
  419490:	add    al,0xe9
  419492:	mov    dh,dl
  419494:	jo     0x41944f
  419496:	mov    ch,0xa2
  419498:	sahf   
  419499:	(bad)  
  41949a:	(bad)  [esi+0x17]
  41949d:	and    BYTE PTR [edx+eiz*2],0xac
  4194a1:	add    dh,ch
  4194a3:	popf   
  4194a4:	pop    esi
  4194a5:	in     al,0x3f
  4194a7:	pop    ecx
  4194a8:	icebp  
  4194a9:	loop   0x4194bb
  4194ab:	push   0x6330ecd0
  4194b0:	rcl    DWORD PTR [esi],1
  4194b2:	test   DWORD PTR [esi],edi
  4194b4:	icebp  
  4194b5:	mov    edx,0xec665ed4
  4194ba:	push   esi
  4194bb:	mov    eax,0xf904f56d
  4194c0:	add    eax,DWORD PTR [ebp+ebp*2+0x7f488fb3]
  4194c7:	and    bl,BYTE PTR [edx-0x3b181098]
  4194cd:	and    eax,0x2df733a9
  4194d2:	xor    dl,BYTE PTR [edx-0x1b]
  4194d5:	neg    BYTE PTR [esi]
  4194d7:	adc    cl,dl
  4194d9:	and    eax,0x3faa5e16
  4194de:	ins    DWORD PTR es:[edi],dx
  4194df:	addr16 xchg esp,eax
  4194e1:	cmp    edx,ecx
  4194e3:	mov    al,0xbd
  4194e5:	and    al,0x51
  4194e7:	hlt    
  4194e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e9:	dec    esi
  4194ea:	cmp    al,0xf8
  4194ec:	sub    DWORD PTR [eax+0x21a6847],0x1cdf6026
  4194f6:	jge    0x41951b
  4194f8:	cmp    al,BYTE PTR [ebx-0x1a]
  4194fb:	adc    dl,BYTE PTR [ebx]
  4194fd:	lods   eax,DWORD PTR ds:[esi]
  4194fe:	mov    ch,BYTE PTR [ebx+0x63]
  419501:	push   ebp
  419502:	mov    edx,DWORD PTR [esp+ebx*4+0x133d36f3]
  419509:	icebp  
  41950a:	out    0x99,al
  41950c:	std    
  41950d:	(bad)  
  41950e:	cmp    al,0xc0
  419510:	jbe    0x4194c6
  419512:	add    eax,0xcad5530d
  419517:	dec    eax
  419518:	ins    BYTE PTR es:[edi],dx
  419519:	cld    
  41951a:	mov    DWORD PTR [eax+0x3a69b971],edi
  419520:	add    DWORD PTR [ecx],edx
  419522:	fnstsw WORD PTR [ebx+ebp*4-0x46]
  419526:	mov    ds:0x4310465e,al
  41952b:	outs   dx,BYTE PTR ds:[esi]
  41952c:	bound  ecx,QWORD PTR [ebp-0x2f]
  41952f:	mov    cs,ebx
  419531:	popa   
  419532:	inc    esp
  419533:	popf   
  419534:	pop    edi
  419535:	dec    ebp
  419536:	in     al,0x62
  419538:	sub    ah,BYTE PTR [ebp+0x265770cb]
  41953e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953f:	add    eax,0x7b3e705a
  419544:	sbb    BYTE PTR [ebp+0x72],0x56
  419548:	and    DWORD PTR [esi-0x495a32a9],ecx
  41954e:	mov    bl,0x23
  419550:	adc    dl,dl
  419552:	test   bl,cl
  419554:	jg     0x4195b8
  419556:	es dec ebp
  419558:	or     al,0x6e
  41955a:	and    al,0xd0
  41955c:	sbb    ebx,ebp
  41955e:	push   esi
  41955f:	stos   BYTE PTR es:[edi],al
  419560:	test   eax,0x126bb5b9
  419565:	mov    esi,DWORD PTR [esi+0x25]
  419568:	fisttp WORD PTR [eax]
  41956a:	xchg   esi,eax
  41956b:	hlt    
  41956c:	jg     0x419525
  41956e:	out    dx,eax
  41956f:	mov    WORD PTR [edx],gs
  419571:	cli    
  419572:	sub    BYTE PTR [eax-0x2b],al
  419575:	aaa    
  419576:	int3   
  419577:	push   0x47f51bb1
  41957c:	and    DWORD PTR [ecx+0x3287c4ed],eax
  419582:	add    bh,BYTE PTR [esi]
  419584:	mov    bl,0x0
  419586:	sar    BYTE PTR [edi],cl
  419588:	out    dx,al
  419589:	push   edx
  41958a:	jmp    0x419544
  41958c:	stc    
  41958d:	sahf   
  41958e:	sub    DWORD PTR [ebx+0x5e],eax
  419591:	sbb    al,0xd2
  419593:	test   BYTE PTR ss:[ebp-0x2],ah
  419597:	xor    eax,DWORD PTR [eax+0x48]
  41959a:	jae    0x41956b
  41959c:	xchg   ecx,eax
  41959d:	fbld   TBYTE PTR [ebx]
  41959f:	cmp    cl,al
  4195a1:	dec    eax
  4195a2:	stc    
  4195a3:	ds cmc 
  4195a5:	hlt    
  4195a6:	in     al,0x5b
  4195a8:	jle    0x419587
  4195aa:	mov    edi,0xfd7d9ec5
  4195af:	or     dh,bh
  4195b1:	sub    DWORD PTR [ecx-0x1f],edx
  4195b4:	test   al,0x49
  4195b6:	(bad)  
  4195b7:	call   0xaa0718a8
  4195bc:	jnp    0x419574
  4195be:	mov    al,ds:0x9eea33a3
  4195c3:	dec    esi
  4195c4:	push   esp
  4195c5:	loopne 0x419600
  4195c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c8:	(bad)  
  4195c9:	fimul  WORD PTR [edx-0x5]
  4195cc:	test   DWORD PTR [eax],ebp
  4195ce:	mov    ch,0xf5
  4195d0:	push   ss
  4195d1:	dec    ebx
  4195d2:	sub    BYTE PTR [ebx+0x4b6c5533],dh
  4195d8:	cmp    eax,0xeec1107c
  4195dd:	push   es
  4195de:	cmc    
  4195df:	jg     0x4195c0
  4195e1:	sub    DWORD PTR [eax-0x324fae71],ecx
  4195e7:	das    
  4195e8:	sbb    dl,BYTE PTR [edi-0x48f371fb]
  4195ee:	pop    edx
  4195ef:	inc    edi
  4195f0:	stc    
  4195f1:	(bad)  
  4195f2:	(bad)  
  4195f3:	cwde   
  4195f4:	or     dl,BYTE PTR ds:0xe8e9d26c
  4195fa:	lods   al,BYTE PTR ds:[esi]
  4195fb:	jle    0x419645
  4195fd:	daa    
  4195fe:	test   DWORD PTR [esi+ebp*1],esp
  419601:	fcomp  QWORD PTR [edx+ecx*2]
  419604:	xor    BYTE PTR [ecx-0x7d150546],ch
  41960a:	or     ebp,ecx
  41960c:	fwait
  41960d:	push   0x30ac2061
  419612:	or     al,0x73
  419614:	inc    eax
  419615:	cmp    DWORD PTR [eax-0x7eca0fdb],ebx
  41961b:	popf   
  41961c:	mov    edi,DWORD PTR [ebp+0x6]
  41961f:	or     BYTE PTR [ecx+0x1f],0x3e
  419623:	inc    dh
  419625:	and    al,0xb3
  419627:	(bad)  
  419628:	fsubr  DWORD PTR [edi-0x3b]
  41962b:	(bad)  
  41962d:	cmp    ah,BYTE PTR [esi+0x49]
  419630:	int3   
  419631:	scas   eax,DWORD PTR es:[edi]
  419632:	retf   0xfbc8
  419635:	mov    bh,BYTE PTR fs:[edi-0x43c6f8eb]
  41963c:	push   esi
  41963d:	inc    eax
  41963e:	cwde   
  41963f:	mov    ds:0x4eb02fc5,eax
  419644:	adc    ah,BYTE PTR [esi+0x6793928a]
  41964a:	in     al,0x28
  41964c:	adc    eax,0x41f5b3ea
  419651:	xchg   BYTE PTR [edx],dl
  419653:	cmp    edi,0x8
  419656:	jp     0x4196be
  419658:	ds dec esp
  41965a:	or     DWORD PTR [edx],edi
  41965c:	mov    bh,0xdc
  41965e:	push   esp
  41965f:	jb     0x41966a
  419661:	scas   al,BYTE PTR es:[edi]
  419662:	ds jp  0x419695
  419665:	add    dh,BYTE PTR [ebx+0xa4ac695]
  41966b:	mov    bh,0xd3
  41966d:	(bad)  
  41966e:	aad    0xd5
  419670:	push   esp
  419671:	popa   
  419672:	cwde   
  419673:	jno    0x41961e
  419675:	inc    ecx
  419676:	retf   0xb462
  419679:	add    esp,DWORD PTR [esi-0x401beae7]
  41967f:	inc    ebp
  419680:	or     cl,BYTE PTR [ebp+0x77246ee0]
  419686:	hlt    
  419687:	add    BYTE PTR ds:0x27d0be87,0x35
  41968e:	jge    0x4196c7
  419690:	fisubr DWORD PTR [ebp+0x68]
  419693:	aam    0xee
  419695:	mov    es,WORD PTR [esp+esi*2]
  419698:	cmp    BYTE PTR [edx+eiz*2+0x1c],0x5f
  41969d:	mov    DWORD PTR [edi],ebp
  41969f:	or     DWORD PTR [esi-0x77ddd1b1],ecx
  4196a5:	inc    eax
  4196a6:	mov    ch,0xc2
  4196a8:	xor    eax,0x6ae9fddf
  4196ad:	mov    eax,ds:0x1d57a213
  4196b2:	adc    ch,al
  4196b4:	ficomp DWORD PTR [ebp+0x2df96157]
  4196ba:	adc    BYTE PTR [ebx+0x2a],0x86
  4196be:	shl    DWORD PTR [ecx],cl
  4196c0:	out    dx,eax
  4196c1:	ret    0xfd90
  4196c4:	mov    bl,0x26
  4196c6:	ss stos BYTE PTR es:[edi],al
  4196c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c9:	in     al,dx
  4196ca:	and    al,0xb
  4196cc:	addr16 dec edx
  4196ce:	adc    esp,esp
  4196d0:	out    0x10,eax
  4196d2:	dec    ecx
  4196d3:	inc    edx
  4196d4:	sub    eax,0x5078c14
  4196d9:	sahf   
  4196da:	out    dx,al
  4196db:	push   es
  4196dc:	cmc    
  4196dd:	pop    ds
  4196de:	mov    ah,0xb8
  4196e0:	mov    dl,0xd1
  4196e2:	xor    esi,edx
  4196e4:	push   0xffffffc6
  4196e6:	ins    DWORD PTR es:[edi],dx
  4196e7:	nop
  4196e8:	jmp    0xa97292a5
  4196ed:	addr16 xchg esi,eax
  4196ef:	xchg   edi,eax
  4196f0:	(bad)  
  4196f2:	inc    ebp
  4196f3:	in     eax,0x80
  4196f5:	mov    dl,0xeb
  4196f7:	inc    esi
  4196f8:	cmp    al,0xe3
  4196fa:	xchg   BYTE PTR [ebp+0x14],ch
  4196fd:	bnd jns 0x4196ff
  419700:	inc    ebp
  419701:	mov    al,BYTE PTR [ecx-0x1740b238]
  419707:	adc    eax,0x9f0808d4
  41970c:	dec    eax
  41970d:	fld    TBYTE PTR [ebx+eax*1-0x3a]
  419711:	adc    cl,0xe1
  419714:	mov    ecx,0x3794f3e3
  419719:	scas   eax,DWORD PTR es:[edi]
  41971a:	xchg   edx,eax
  41971b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41971c:	add    BYTE PTR [esi+0x4bb29f2f],bh
  419722:	pop    ebp
  419723:	ret    
  419724:	mov    dl,BYTE PTR [ebp+0x28]
  419727:	dec    edx
  419728:	repz icebp 
  41972a:	fist   WORD PTR [esp+eax*4+0x584e0d7b]
  419731:	bound  edi,QWORD PTR [eax+eiz*8+0x7b723825]
  419738:	and    eax,0x9cbdbb44
  41973d:	mov    edi,0xf6685db1
  419742:	push   0xfffffffb
  419744:	xchg   esi,eax
  419745:	fmul   QWORD PTR [esi]
  419747:	cwde   
  419748:	pop    ebx
  419749:	mov    esp,0x7bc9f753
  41974e:	or     ebp,DWORD PTR [eax-0x2ae3f495]
  419754:	dec    eax
  419755:	addr16 into 
  419757:	or     al,0x6b
  419759:	inc    ecx
  41975a:	jmp    0xf2f2543c
  41975f:	test   al,0x9c
  419761:	mov    dh,0x64
  419763:	mov    bh,0xa5
  419765:	outs   dx,BYTE PTR ds:[esi]
  419766:	imul   DWORD PTR [esi-0x5b]
  419769:	cli    
  41976a:	sbb    ah,BYTE PTR [eax+0x7]
  41976d:	mov    WORD PTR [ecx-0x1e],ss
  419770:	test   DWORD PTR [ebp*1+0x1fc13f3d],ebp
  419777:	popa   
  419778:	sub    DWORD PTR [edi-0x41],0xe219dd24
  41977f:	xchg   BYTE PTR [edi],ah
  419781:	and    al,cl
  419783:	pop    DWORD PTR [edx+0x61a33dcd]
  419789:	cs dec ebx
  41978b:	daa    
  41978c:	jbe    0x4197b2
  41978e:	out    dx,al
  41978f:	add    esi,esi
  419791:	or     ebp,esp
  419793:	fcmove st,st(2)
  419795:	jle    0x419751
  419797:	sbb    ah,bh
  419799:	ins    DWORD PTR es:[edi],dx
  41979a:	lahf   
  41979b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41979c:	ins    DWORD PTR es:[edi],dx
  41979d:	adc    DWORD PTR [eax-0x2ce61652],ebx
  4197a3:	aas    
  4197a4:	dec    ebp
  4197a5:	push   ebx
  4197a6:	and    eax,0x329588da
  4197ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ac:	(bad)  
  4197ae:	jbe    0x41981d
  4197b0:	push   edi
  4197b1:	call   0xcc3b:0x4dce02e2
  4197b8:	dec    edi
  4197b9:	int3   
  4197ba:	(bad)  
  4197bb:	addr16 cwde 
  4197bd:	fs out 0x6c,eax
  4197c0:	mov    cl,BYTE PTR [ebp-0x1ba1d207]
  4197c6:	imul   ebp,DWORD PTR [ecx],0x7a
  4197c9:	pop    ecx
  4197ca:	inc    eax
  4197cb:	sbb    al,0xa4
  4197cd:	pop    esi
  4197ce:	inc    esi
  4197cf:	mov    WORD PTR [ebx-0x6d],es
  4197d2:	mov    esi,0xc8c8026b
  4197d7:	mov    WORD PTR [ebp-0x41],gs
  4197da:	or     BYTE PTR [edi],dh
  4197dc:	sub    BYTE PTR ds:0xf7eefd3,cl
  4197e2:	sbb    BYTE PTR [ecx-0x796dbf61],ah
  4197e8:	scas   al,BYTE PTR es:[edi]
  4197e9:	adc    edx,ebx
  4197eb:	sbb    BYTE PTR [esi-0x1332cc82],cl
  4197f1:	mov    bl,0x33
  4197f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f4:	je     0x419858
  4197f6:	scas   al,BYTE PTR es:[edi]
  4197f7:	ins    BYTE PTR es:[edi],dx
  4197f8:	sbb    ebx,edx
  4197fa:	adc    esp,DWORD PTR [ecx+0x35]
  4197fd:	sbb    BYTE PTR [esi+0x16],ch
  419800:	jecxz  0x4197ee
  419802:	mov    dh,0x2b
  419804:	ret    0x7803
  419807:	cs and eax,0x60bf3c15
  41980d:	add    BYTE PTR [esi],bh
  41980f:	jl     0x4197c9
  419811:	mov    BYTE PTR [esi+eiz*2-0x3559f896],ah
  419818:	and    esp,DWORD PTR [esi]
  41981a:	or     al,0x4f
  41981c:	fdivr  QWORD PTR [edx+0x4102361e]
  419822:	add    al,0x61
  419824:	push   ds
  419825:	and    eax,0x5f518760
  41982a:	test   al,0xdd
  41982c:	mov    bl,0xe2
  41982e:	mov    eax,ds:0xf210c7c7
  419833:	test   eax,0x2927a8e4
  419838:	push   ebx
  419839:	jno    0x419897
  41983b:	push   cs
  41983c:	or     DWORD PTR [ebx],0x37dd005b
  419842:	out    0xdf,eax
  419844:	int    0x1d
  419846:	xchg   DWORD PTR [ecx-0x7e],edx
  419849:	cmp    DWORD PTR [ecx+0x76],edx
  41984c:	cmp    edi,DWORD PTR [bx+di+0x2edc]
  419851:	(bad)  
  419852:	or     edi,DWORD PTR [esi+0x10]
  419855:	rol    DWORD PTR [ecx-0x74],1
  419858:	mov    edi,0xb76b060f
  41985d:	outs   dx,DWORD PTR ds:[esi]
  41985e:	call   0x1dda:0x140f0c92
  419865:	into   
  419866:	mov    ds:0xa7ced497,eax
  41986b:	shl    DWORD PTR [ebx],0xb9
  41986e:	push   ds
  41986f:	sub    eax,0xf45ff4ef
  419874:	jnp    0x41982f
  419876:	inc    edx
  419877:	cli    
  419878:	shl    BYTE PTR [edi-0x42],cl
  41987b:	cwde   
  41987c:	inc    esp
  41987d:	repz mov dl,0xfd
  419880:	sub    BYTE PTR [ebp+0x25],cl
  419883:	sbb    esp,edi
  419885:	ds mov ebx,0x7754aff5
  41988b:	lds    edi,FWORD PTR [ebx-0x326060eb]
  419891:	xor    BYTE PTR [esi+0x5078274e],0x59
  419898:	jns    0x41986f
  41989a:	cmp    al,0x93
  41989c:	in     al,dx
  41989d:	stos   BYTE PTR es:[edi],al
  41989e:	push   ebp
  41989f:	add    eax,0xc6dfec4e
  4198a4:	hlt    
  4198a5:	mov    dl,0x49
  4198a7:	lea    edi,[ebp-0x460b7f41]
  4198ad:	int3   
  4198ae:	inc    ecx
  4198af:	push   ebp
  4198b0:	cwde   
  4198b1:	xchg   edx,eax
  4198b2:	pushf  
  4198b3:	sahf   
  4198b4:	fistp  QWORD PTR [esi-0x1f997b8b]
  4198ba:	aaa    
  4198bb:	jge    0x41984b
  4198bd:	mov    al,bl
  4198bf:	out    0xdd,al
  4198c1:	in     eax,0x50
  4198c3:	jnp    0x419898
  4198c5:	mov    bh,BYTE PTR [edi]
  4198c7:	dec    ebp
  4198c8:	cmp    DWORD PTR [edi-0x6e],ecx
  4198cb:	mov    esi,0x4760226d
  4198d0:	xchg   esi,eax
  4198d1:	int3   
  4198d2:	fld    st(6)
  4198d4:	shr    ecx,1
  4198d6:	mov    ds:0xa65ca552,al
  4198db:	sahf   
  4198dc:	dec    eax
  4198dd:	jne    0x41995a
  4198df:	or     eax,edi
  4198e1:	fnsave [edx]
  4198e3:	int3   
  4198e4:	pop    ds
  4198e5:	sbb    dl,BYTE PTR [edx-0x52bf8ba3]
  4198eb:	pop    esi
  4198ec:	sbb    dl,bh
  4198ee:	loopne 0x41990c
  4198f0:	nop
  4198f1:	test   DWORD PTR [ebp+0xbe572d8],edx
  4198f7:	add    dh,BYTE PTR [eax+edx*8-0x67045c89]
  4198fe:	mov    esi,0x1a1f03f8
  419903:	push   esp
  419904:	push   ebx
  419905:	sub    bh,BYTE PTR [ecx-0x3515cb4e]
  41990b:	inc    ecx
  41990c:	pop    ebp
  41990d:	(bad)  
  41990e:	in     al,dx
  41990f:	mov    WORD PTR [ebx+eax*2],fs
  419912:	push   esp
  419913:	lods   eax,DWORD PTR ds:[esi]
  419914:	int3   
  419915:	inc    eax
  419916:	arpl   WORD PTR [ecx+0x705ff817],si
  41991c:	das    
  41991d:	ja     0x41994a
  41991f:	sub    ecx,DWORD PTR [edi+0x6b]
  419922:	add    al,0x9a
  419924:	sub    al,0x41
  419926:	je     0x41995a
  419928:	cwde   
  419929:	pop    ebp
  41992a:	jge    0x4198d6
  41992c:	mov    BYTE PTR [esi-0x79],bh
  41992f:	in     eax,dx
  419930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419931:	xor    eax,0x6497e2f6
  419936:	mov    esp,0xaa518c1e
  41993b:	cdq    
  41993c:	fcom   QWORD PTR [ecx]
  41993e:	pop    es
  41993f:	rcl    DWORD PTR [edi-0x57],cl
  419942:	mov    eax,0xac247cc
  419947:	xchg   esi,eax
  419948:	sahf   
  419949:	out    0xe0,eax
  41994b:	(bad)  
  41994c:	pop    ss
  41994d:	inc    edx
  41994e:	sbb    eax,DWORD PTR [ebp+0x295d75cf]
  419954:	cmp    BYTE PTR [eax],bh
  419956:	pop    esi
  419957:	jmp    0x4199a4
  419959:	aaa    
  41995a:	sbb    DWORD PTR [ebp+esi*8+0x2667fe2b],0xab97d0b6
  419965:	dec    esp
  419966:	push   esi
  419967:	and    esi,DWORD PTR [ebp-0x7358cf01]
  41996d:	repz and edx,edx
  419970:	mov    esi,0x14a84c22
  419975:	retf   0xf818
  419978:	mov    esp,0xfc34dc82
  41997d:	scas   al,BYTE PTR es:[edi]
  41997e:	pop    ds
  41997f:	pop    ecx
  419980:	mov    bl,0x46
  419982:	push   ebp
  419983:	cmc    
  419984:	mov    al,0xf4
  419986:	inc    ebp
  419987:	scas   al,BYTE PTR es:[edi]
  419988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419989:	(bad)  
  41998a:	lds    esi,FWORD PTR [edx+0x23d6457a]
  419990:	mov    edi,0xb72dd747
  419995:	jae    0x4199e1
  419997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419998:	jne    0x4199d7
  41999a:	in     al,0xe2
  41999c:	sub    esp,DWORD PTR [ebp-0x31deb369]
  4199a2:	cli    
  4199a3:	xchg   esi,eax
  4199a4:	add    DWORD PTR [eax-0x4a],ebx
  4199a7:	mov    esi,0xb69f4e79
  4199ac:	enter  0xc174,0x11
  4199b0:	mov    cl,0xd9
  4199b2:	xchg   esp,eax
  4199b3:	(bad)  
  4199b4:	in     al,0xe6
  4199b6:	addr16 sbb eax,0xb7debe8f
  4199bc:	adc    BYTE PTR [eax-0x73],ah
  4199bf:	cvttps2pi mm4,QWORD PTR [ecx]
  4199c2:	mov    dh,0x69
  4199c4:	and    bh,dl
  4199c6:	iret   
  4199c7:	test   eax,0x4434e312
  4199cc:	out    dx,al
  4199cd:	loope  0x4199cd
  4199cf:	in     eax,0x31
  4199d1:	mov    esi,0x5c1443cc
  4199d6:	cmp    bh,bl
  4199d8:	push   eax
  4199d9:	dec    eax
  4199da:	cmp    eax,0xb1d5cf27
  4199df:	push   ds
  4199e0:	mov    edx,0x19da9057
  4199e5:	mov    eax,0x7ea8a51f
  4199ea:	mov    cl,0xe8
  4199ec:	inc    edx
  4199ed:	pop    eax
  4199ee:	xchg   edx,eax
  4199ef:	adc    BYTE PTR [edi+edx*4-0x6a4c2a72],0x25
  4199f7:	mov    bh,0x9b
  4199f9:	sar    esi,0xa8
  4199fc:	sbb    bl,BYTE PTR [edx+ebp*4]
  4199ff:	jg     0x4199eb
  419a01:	xor    al,BYTE PTR [ecx+0x498c4a64]
  419a07:	push   ebx
  419a08:	in     al,0x32
  419a0a:	das    
  419a0b:	mov    esp,?
  419a0d:	and    al,0x4f
  419a0f:	inc    eax
  419a10:	dec    edx
  419a11:	fdivr  QWORD PTR [esi+edi*8-0x50]
  419a15:	jge    0x419a1d
  419a17:	arpl   WORD PTR [edx+0x79],dx
  419a1a:	add    dh,BYTE PTR [esi-0x3d2b2f2e]
  419a20:	adc    DWORD PTR [eax],eax
  419a22:	imul   esi,DWORD PTR [eax+0x56],0x5d
  419a26:	inc    ecx
  419a27:	lea    edx,es:[ebp+0x1b0e6b60]
  419a2e:	jae    0x4199bf
  419a30:	adc    ebp,eax
  419a32:	and    eax,0xc03d6f0b
  419a37:	ror    BYTE PTR [edi+0x75],1
  419a3a:	xchg   edi,eax
  419a3b:	xchg   esi,eax
  419a3c:	mov    esi,0x350828cd
  419a41:	daa    
  419a42:	scas   eax,DWORD PTR es:[di]
  419a44:	xchg   BYTE PTR [si+0x49],ch
  419a48:	les    edi,FWORD PTR [ebx-0x7e770066]
  419a4e:	and    ch,ch
  419a50:	xchg   esi,eax
  419a51:	xor    BYTE PTR [edx],0x71
  419a54:	out    0xa1,eax
  419a56:	cwde   
  419a57:	mov    eax,0xafc59683
  419a5c:	popa   
  419a5d:	outs   dx,BYTE PTR ds:[esi]
  419a5e:	jmp    FWORD PTR [ecx+0x62]
  419a61:	ins    DWORD PTR es:[edi],dx
  419a62:	bound  edi,QWORD PTR [ebx]
  419a64:	daa    
  419a65:	and    esi,DWORD PTR [ecx+0x584b6c4e]
  419a6b:	pushf  
  419a6c:	dec    ebx
  419a6d:	dec    edx
  419a6e:	or     ecx,DWORD PTR [ebx]
  419a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a71:	aas    
  419a72:	cli    
  419a73:	retf   0x7e7e
  419a76:	mov    al,0x70
  419a78:	sbb    al,0x46
  419a7a:	mov    bh,0x4d
  419a7c:	sbb    al,0xee
  419a7e:	in     al,0x94
  419a80:	aad    0x86
  419a82:	loopne 0x419af7
  419a84:	loopne 0x419ae5
  419a86:	int3   
  419a87:	rcl    DWORD PTR [ecx-0x66],cl
  419a8a:	inc    DWORD PTR [edx-0x1e206edd]
  419a90:	fisub  DWORD PTR [eax-0x1d]
  419a93:	stos   DWORD PTR es:[edi],eax
  419a94:	fld    TBYTE PTR [ebx+eax*2+0x3b]
  419a98:	loopne 0x419ab1
  419a9a:	dec    edx
  419a9b:	jnp    0x419afe
  419a9d:	push   cs
  419a9e:	outs   dx,DWORD PTR ds:[esi]
  419a9f:	sbb    bl,0xb4
  419aa2:	fldcw  WORD PTR [edx]
  419aa4:	fcomi  st,st(2)
  419aa6:	jg     0x419ae0
  419aa8:	sbb    DWORD PTR [ebx-0x208ee849],eax
  419aae:	into   
  419aaf:	addr16 out dx,al
  419ab1:	outs   dx,DWORD PTR ds:[esi]
  419ab2:	jle    0x419a89
  419ab4:	xchg   edi,eax
  419ab5:	pop    ss
  419ab6:	add    esi,DWORD PTR [ebp+0x2934b96a]
  419abc:	std    
  419abd:	cli    
  419abe:	dec    esp
  419abf:	aam    0xc8
  419ac1:	dec    eax
  419ac2:	punpckldq mm1,DWORD PTR [ebx-0x1c]
  419ac6:	(bad)  
  419ac7:	xchg   ecx,eax
  419ac8:	inc    ebx
  419ac9:	sbb    bl,BYTE PTR [esi]
  419acb:	sub    esi,DWORD PTR ds:0x8922f55e
  419ad1:	cmp    DWORD PTR ds:0xe3b881eb,eax
  419ad7:	outs   dx,BYTE PTR ds:[esi]
  419ad8:	rcr    BYTE PTR [edi],0x7b
  419adb:	(bad)  
  419adc:	out    dx,eax
  419add:	dec    edx
  419ade:	jns    0x419b1b
  419ae0:	add    esp,ebp
  419ae2:	xchg   ebx,eax
  419ae3:	pop    ds
  419ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae5:	ins    BYTE PTR es:[edi],dx
  419ae6:	ds test eax,0xa5320d4
  419aec:	ror    BYTE PTR [edx-0x72],cl
  419aef:	and    DWORD PTR [ebp-0x690a227e],esp
  419af5:	and    DWORD PTR gs:[edx+0x59],ebp
  419af9:	(bad)  
  419afa:	outs   dx,DWORD PTR ds:[esi]
  419afb:	and    BYTE PTR ds:0xbf4bc6bf,ah
  419b01:	outs   dx,BYTE PTR ds:[esi]
  419b02:	mov    WORD PTR [ebx],ss
  419b04:	imul   BYTE PTR [eax-0x11]
  419b07:	add    eax,0x5acf7942
  419b0c:	(bad)  
  419b0d:	test   BYTE PTR ds:0x99f44d85,0x56
  419b14:	and    eax,0x5722f24a
  419b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1a:	push   cs
  419b1b:	cmc    
  419b1c:	add    DWORD PTR [esi],esp
  419b1e:	dec    ecx
  419b1f:	dec    ebx
  419b20:	(bad)  
  419b21:	retf   
  419b22:	cmp    ebp,DWORD PTR [esp+esi*1]
  419b25:	stc    
  419b26:	stc    
  419b27:	fdiv   QWORD PTR [ebx]
  419b29:	jne    0x419b8e
  419b2b:	enter  0x65f6,0xa6
  419b2f:	push   ebp
  419b30:	add    DWORD PTR [ebp+0x1a57ce77],esi
  419b36:	fsub   DWORD PTR [edi+eiz*1+0x5c]
  419b3a:	daa    
  419b3b:	pop    esp
  419b3c:	inc    esi
  419b3d:	imul   edx,esi,0xa2ef1886
  419b43:	sub    DWORD PTR [ebp+0x588da579],edx
  419b49:	and    al,0xc8
  419b4b:	jns    0x419b13
  419b4d:	data16 and bh,BYTE PTR [ecx+0x2f]
  419b51:	push   ds
  419b52:	psubusw mm6,QWORD PTR [ebx+0x1d]
  419b56:	(bad)  
  419b57:	outs   dx,DWORD PTR cs:[esi]
  419b59:	pop    esi
  419b5a:	inc    ecx
  419b5b:	and    al,0xab
  419b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b5e:	faddp  st(7),st
  419b60:	(bad)  
  419b61:	cwde   
  419b62:	ss out dx,eax
  419b64:	push   0xf5340b0d
  419b69:	sbb    dh,al
  419b6b:	loopne 0x419b2a
  419b6d:	neg    DWORD PTR ds:0x50e75016
  419b73:	mov    gs,WORD PTR [ebx+0xf]
  419b76:	xor    eax,0xb0793a27
  419b7b:	or     eax,0x706b2bef
  419b80:	cwde   
  419b81:	sti    
  419b82:	xchg   ebp,eax
  419b83:	rcr    BYTE PTR [ebp-0x1ffad032],0x1f
  419b8a:	stos   BYTE PTR es:[edi],al
  419b8b:	je     0x419b86
  419b8d:	repz leave 
  419b8f:	push   eax
  419b90:	xor    dl,BYTE PTR [esi]
  419b92:	cmp    DWORD PTR [ebx],eax
  419b94:	in     al,0x1
  419b96:	adc    esi,DWORD PTR [esi-0x4c]
  419b99:	clc    
  419b9a:	fcomp  DWORD PTR ds:0xbf2c358e
  419ba0:	shr    edi,1
  419ba2:	mov    dl,0xcd
  419ba4:	mov    eax,ds:0xe247258e
  419ba9:	outs   dx,DWORD PTR ds:[esi]
  419baa:	pop    eax
  419bab:	arpl   WORD PTR [ebx-0x54c20ec1],sp
  419bb1:	retf   
  419bb2:	fs stos DWORD PTR es:[edi],eax
  419bb4:	lods   al,BYTE PTR ds:[esi]
  419bb5:	das    
  419bb6:	adc    eax,0x16ac33f4
  419bbb:	call   eax
  419bbd:	jnp    0x419bfa
  419bbf:	xchg   edx,eax
  419bc0:	arpl   WORD PTR [ebx+0x30],di
  419bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc4:	fistp  DWORD PTR [ebx+0x7c]
  419bc7:	hlt    
  419bc8:	mov    BYTE PTR [edx+0x751b8f27],cl
  419bce:	sbb    BYTE PTR ds:0xed785c99,bh
  419bd4:	sbb    al,0xc4
  419bd6:	nop
  419bd7:	sahf   
  419bd8:	sbb    al,0x6b
  419bda:	call   0xacd1:0x84276977
  419be1:	sub    al,cl
  419be3:	or     ebp,esi
  419be5:	loop   0x419bbf
  419be7:	retf   
  419be8:	mov    DWORD PTR [eax+0x11a60e2d],esi
  419bee:	rep stos DWORD PTR es:[edi],eax
  419bf0:	jbe    0x419bb8
  419bf2:	add    eax,DWORD PTR [edi]
  419bf4:	je     0x419b8a
  419bf6:	jnp    0x419b96
  419bf8:	fst    DWORD PTR [eax+0x71b41cba]
  419bfe:	imul   ebp,DWORD PTR [esi+esi*1-0x385b2852],0x79
  419c06:	cld    
  419c07:	nop
  419c08:	aaa    
  419c09:	fwait
  419c0a:	js     0x419bed
  419c0c:	push   es
  419c0d:	pop    edx
  419c0e:	call   0xf1ecfe09
  419c13:	pop    ebx
  419c14:	nop
  419c15:	mov    edi,ebx
  419c17:	pop    es
  419c18:	inc    edx
  419c19:	xchg   esi,eax
  419c1a:	cli    
  419c1b:	int3   
  419c1c:	cmp    DWORD PTR [esi+0x45],0x78
  419c20:	ror    BYTE PTR [esi-0x2c188811],1
  419c26:	lea    eax,[ebp+0x15]
  419c29:	imul   edi,DWORD PTR [edi+eax*2-0x61],0x8f6ffda7
  419c31:	call   0x7cc3:0x4161b595
  419c38:	cmp    BYTE PTR [edi-0x51],cl
  419c3b:	call   0x907:0x42744c9c
  419c42:	xor    eax,0x9d8a3654
  419c47:	xor    eax,0x2caa82eb
  419c4c:	cmp    al,0x0
  419c4e:	test   al,0xe6
  419c50:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  419c52:	mov    edx,0xb1d189ae
  419c57:	ret    
  419c58:	(bad)  
  419c59:	scas   al,BYTE PTR es:[edi]
  419c5a:	cmc    
  419c5b:	sub    bh,BYTE PTR [ebx+0x183ad3f3]
  419c61:	and    BYTE PTR [ebp-0x33f8aa24],0x6a
  419c68:	dec    edx
  419c69:	jle    0x419cd9
  419c6b:	aad    0xa5
  419c6d:	pop    edx
  419c6e:	xchg   ebx,eax
  419c6f:	adc    ch,BYTE PTR fs:[edx-0x5874f3f4]
  419c76:	and    cl,bl
  419c78:	mov    ds:0x501fcce1,al
  419c7d:	inc    edi
  419c7e:	mov    cl,0x49
  419c80:	test   al,0x2a
  419c82:	call   0xb7d533f1
  419c87:	or     ah,BYTE PTR [ebp-0x1dc41bc9]
  419c8d:	mov    esp,0xdca43d65
  419c92:	jmp    0x530e9ea1
  419c97:	or     DWORD PTR [edx+eiz*2-0x54],edx
  419c9b:	dec    ebp
  419c9c:	and    al,0xb6
  419c9e:	mov    WORD PTR ds:0xa5c6c13d,ss
  419ca4:	nop
  419ca5:	mov    esi,0x1147a513
  419caa:	push   ss
  419cab:	pop    eax
  419cac:	sbb    ebp,ecx
  419cae:	mov    al,0xc9
  419cb0:	mov    ss,WORD PTR [ebx-0x7d9a52ba]
  419cb6:	pop    esp
  419cb7:	adc    DWORD PTR [esi+0x54827e33],esi
  419cbd:	sub    ch,bl
  419cbf:	int3   
  419cc0:	sub    BYTE PTR [eax-0x6e],cl
  419cc3:	out    0x5e,eax
  419cc5:	test   DWORD PTR [edi+edx*2],ebx
  419cc8:	xor    DWORD PTR [eax-0x2d],edx
  419ccb:	dec    edx
  419ccc:	dec    ebp
  419ccd:	xchg   eax,ecx
  419ccf:	out    dx,al
  419cd0:	fs sbb eax,0x83c52130
  419cd6:	and    dl,BYTE PTR [esi]
  419cd8:	mov    edx,0xa2d7b7ae
  419cdd:	out    0xec,al
  419cdf:	add    ecx,DWORD PTR [esi+ebp*4+0x3440f21d]
  419ce6:	mov    ch,BYTE PTR [eax-0x3b]
  419ce9:	stos   DWORD PTR es:[edi],eax
  419cea:	lods   al,BYTE PTR ds:[esi]
  419ceb:	mov    ds:0x651a2662,eax
  419cf0:	in     al,dx
  419cf1:	adc    eax,0x40462414
  419cf6:	mov    edi,0x8ba145fa
  419cfb:	cmp    al,0xff
  419cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfe:	loop   0x419d52
  419d00:	pop    edi
  419d01:	lods   al,BYTE PTR ds:[esi]
  419d02:	psubq  mm4,QWORD PTR [ebp-0x3bbe9103]
  419d09:	push   ebx
  419d0a:	nop
  419d0b:	aaa    
  419d0c:	ins    BYTE PTR es:[edi],dx
  419d0d:	push   esp
  419d0e:	mov    ebx,0xfbbe8d6e
  419d13:	mov    ds:0x47d38a4e,eax
  419d18:	outs   dx,BYTE PTR ds:[esi]
  419d19:	xchg   ecx,eax
  419d1a:	inc    ecx
  419d1b:	inc    ecx
  419d1c:	inc    ebp
  419d1d:	xchg   edi,eax
  419d1e:	sbb    ah,BYTE PTR [ebp-0x7a]
  419d21:	(bad)  
  419d22:	dec    edi
  419d23:	push   eax
  419d24:	outs   dx,BYTE PTR ds:[esi]
  419d25:	xchg   ecx,eax
  419d26:	xchg   esi,eax
  419d27:	iret   
  419d28:	js     0x61b8219f
  419d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d2f:	inc    ebp
  419d30:	push   edx
  419d31:	call   0xa16bd793
  419d36:	cmp    DWORD PTR [eax],edx
  419d38:	scas   al,BYTE PTR es:[edi]
  419d39:	jno    0x419da7
  419d3b:	mov    eax,ds:0x5b360b82
  419d40:	mov    edi,0x25e61d12
  419d45:	inc    edi
  419d46:	pop    ecx
  419d47:	cli    
  419d48:	sahf   
  419d49:	push   esp
  419d4a:	fcomi  st,st(3)
  419d4c:	and    eax,0x450530e4
  419d51:	and    BYTE PTR [ebx-0x527d318d],dl
  419d57:	lods   al,BYTE PTR ds:[esi]
  419d58:	mov    edi,0xd2c19e2b
  419d5d:	pop    edx
  419d5e:	xchg   esi,eax
  419d5f:	cdq    
  419d60:	xor    esi,ecx
  419d62:	lea    ebp,[edi-0x494cead1]
  419d68:	dec    esp
  419d69:	cmp    cl,BYTE PTR [ecx]
  419d6b:	pop    ss
  419d6c:	sub    DWORD PTR [ebx+ebp*1-0x63],eax
  419d70:	data16 xor BYTE PTR [ebx],0x27
  419d74:	in     al,0xcb
  419d76:	jecxz  0x419d1f
  419d78:	push   ss
  419d79:	mov    ds:0x9b6b58f9,eax
  419d7e:	dec    ebp
  419d7f:	rcr    cl,cl
  419d81:	fchs   
  419d83:	repnz pop ebx
  419d85:	loope  0x419d37
  419d87:	mov    dl,ah
  419d89:	(bad)  
  419d8a:	adc    BYTE PTR [eax-0x51d02f5c],al
  419d90:	fistp  DWORD PTR [edx-0x23786cb7]
  419d96:	push   ebx
  419d97:	pop    es
  419d98:	sub    dl,ah
  419d9a:	xchg   ecx,eax
  419d9b:	cld    
  419d9c:	cmp    BYTE PTR [edx],0x97
  419d9f:	jbe    0x419d81
  419da1:	cld    
  419da2:	ins    BYTE PTR es:[edi],dx
  419da3:	jbe    0x419d6b
  419da5:	adc    ch,BYTE PTR [edi+0x54207b84]
  419dab:	mov    ah,0xc3
  419dad:	push   0x8fef3e02
  419db2:	push   es
  419db3:	jb     0x419e13
  419db5:	ds aas 
  419db7:	lock jle 0x419d9a
  419dba:	addr16 mov al,ds:0xc876
  419dbe:	push   edi
  419dbf:	mov    WORD PTR [edi+0x7df8ac92],ss
  419dc5:	or     ch,cl
  419dc7:	retf   0xf741
  419dca:	imul   ecx,esi,0xffffffe6
  419dcd:	cli    
  419dce:	fimul  WORD PTR [edi]
  419dd0:	pop    ebp
  419dd1:	sbb    ebx,DWORD PTR [esi+eax*1+0x3511a69c]
  419dd8:	(bad)  
  419dd9:	clc    
  419dda:	out    0x44,eax
  419ddc:	lods   al,BYTE PTR ds:[esi]
  419ddd:	outs   dx,BYTE PTR ds:[esi]
  419dde:	stos   BYTE PTR es:[edi],al
  419ddf:	push   edi
  419de0:	test   DWORD PTR ds:0xfcae99ed,edi
  419de6:	jp     0x419e10
  419de8:	cmp    edi,DWORD PTR [edx]
  419dea:	xor    ch,dl
  419dec:	arpl   WORD PTR [ecx],dx
  419dee:	bound  ebx,QWORD PTR [eax]
  419df0:	xchg   DWORD PTR [eax+eax*8+0x5b],eax
  419df4:	sub    DWORD PTR [ebx],ebx
  419df6:	pushf  
  419df7:	cmp    al,0xe3
  419df9:	jne    0x419e30
  419dfb:	adc    eax,0x9b2f81c2
  419e00:	mov    bh,0x48
  419e02:	cmp    ebp,esi
  419e04:	push   edi
  419e05:	dec    edx
  419e06:	(bad)
  419e0a:	mov    bh,BYTE PTR [eax]
  419e0c:	ja     0x419e6b
  419e0e:	push   cs
  419e0f:	rcl    bh,0xed
  419e12:	sbb    al,0x5a
  419e14:	repz push edi
  419e16:	adc    DWORD PTR gs:[ebx-0x76108ccd],eax
  419e1d:	adc    ecx,DWORD PTR [edi]
  419e1f:	ret    
  419e20:	push   edi
  419e21:	mov    esi,0x712ca1bb
  419e26:	cmc    
  419e27:	pusha  
  419e28:	cmp    dl,BYTE PTR [edx+eax*2+0x3b]
  419e2c:	stos   BYTE PTR es:[edi],al
  419e2d:	stos   BYTE PTR es:[edi],al
  419e2e:	rcl    dh,1
  419e30:	mov    ss,esi
  419e32:	fs inc ecx
  419e34:	pop    es
  419e35:	js     0x419de6
  419e37:	jmp    0x4cd84f66
  419e3c:	xor    dh,BYTE PTR [edx+0x45104ef1]
  419e42:	imul   eax,eax,0x780d05ce
  419e48:	xor    dh,BYTE PTR [ecx-0x5]
  419e4b:	aam    0x3d
  419e4d:	aas    
  419e4e:	cmp    dl,dl
  419e50:	mov    dh,0x23
  419e52:	stos   BYTE PTR es:[edi],al
  419e53:	adc    al,0x38
  419e55:	push   edx
  419e56:	(bad)  
  419e57:	jb     0x419e70
  419e59:	mov    dh,0xd5
  419e5b:	sar    DWORD PTR [edx-0x11371856],cl
  419e61:	sti    
  419e62:	jmp    FWORD PTR [ebx-0x69]
  419e65:	out    dx,eax
  419e66:	add    BYTE PTR ds:0xc1f28c1e,dl
  419e6c:	cld    
  419e6d:	cwde   
  419e6e:	stos   BYTE PTR es:[edi],al
  419e6f:	jmp    0x419e08
  419e71:	push   edx
  419e72:	int3   
  419e73:	mov    esp,0x3ab548ef
  419e78:	jle    0x419e70
  419e7a:	shl    DWORD PTR [edx],1
  419e7c:	shr    esi,0x50
  419e7f:	dec    edi
  419e80:	out    0xa7,al
  419e82:	sbb    eax,0x51ec380a
  419e87:	pop    edx
  419e88:	adc    BYTE PTR [ebx],bl
  419e8a:	add    WORD PTR [ebx-0xb],ax
  419e8e:	dec    edi
  419e8f:	rcl    ch,cl
  419e91:	inc    ecx
  419e92:	and    ch,BYTE PTR [esi+ebx*4-0x6d]
  419e96:	push   edi
  419e97:	test   edx,esi
  419e99:	push   ds
  419e9a:	sub    al,0x2f
  419e9c:	adc    dl,dl
  419e9e:	cmp    DWORD PTR [ebp+0x53],eax
  419ea1:	aad    0x74
  419ea3:	push   edi
  419ea4:	js     0x419e4e
  419ea6:	ds in  al,dx
  419ea8:	shrd   esi,ebp,0xfc
  419eac:	add    eax,0x73df6c1d
  419eb1:	xchg   ebx,eax
  419eb2:	cs pop ecx
  419eb4:	jne    0x419f07
  419eb6:	mov    dl,0xb1
  419eb8:	lahf   
  419eb9:	adc    DWORD PTR [ebx+0x7ea95cfb],edi
  419ebf:	xor    al,0x72
  419ec1:	jge    0x419f02
  419ec3:	imul   DWORD PTR [ebp+0xaaf3700]
  419ec9:	or     BYTE PTR [ebx],dh
  419ecb:	mov    al,0xc4
  419ecd:	xchg   esp,eax
  419ece:	jg     0x419ee6
  419ed0:	popa   
  419ed1:	jnp    0x419e97
  419ed3:	int3   
  419ed4:	mov    ds:0x4531202f,al
  419ed9:	sub    BYTE PTR [edx-0x7a],ch
  419edc:	ret    0xed73
  419edf:	adc    eax,0x51f924fd
  419ee4:	jbe    0x419eaf
  419ee6:	mov    ss,ecx
  419ee8:	loopne 0x419f07
  419eea:	push   edx
  419eeb:	idiv   DWORD PTR [edi]
  419eed:	test   al,0xe2
  419eef:	shl    BYTE PTR [edx],1
  419ef1:	mov    ah,0x64
  419ef3:	int3   
  419ef4:	mov    esp,0xa70aff33
  419ef9:	pop    ebx
  419efa:	jne    0x419e99
  419efc:	adc    eax,0x9391c11a
  419f01:	in     eax,dx
  419f02:	repz cwde 
  419f04:	sub    eax,0x3e022b2
  419f09:	scas   eax,DWORD PTR es:[edi]
  419f0a:	pop    ds
  419f0b:	lods   al,BYTE PTR ds:[esi]
  419f0c:	inc    edi
  419f0d:	dec    ebp
  419f0e:	pop    ss
  419f0f:	dec    ebx
  419f10:	test   DWORD PTR [edx+0x5274f88f],0x5fcffbe9
  419f1a:	popa   
  419f1b:	rcr    BYTE PTR [ecx+0x1d],cl
  419f1e:	std    
  419f1f:	inc    esp
  419f20:	mov    ecx,0x732a587d
  419f25:	sbb    al,0x74
  419f27:	test   al,0x1e
  419f29:	cmp    BYTE PTR [esp+ecx*1-0x3c1da693],ah
  419f30:	push   ebp
  419f31:	test   BYTE PTR [esi+0x21],cl
  419f34:	js     0x419f0b
  419f36:	nop
  419f37:	adc    DWORD PTR ds:0x5bcf44b7,esi
  419f3d:	xor    eax,0xb834fa05
  419f42:	lds    ebp,FWORD PTR [esi-0x56]
  419f45:	xchg   ebx,eax
  419f46:	rcr    DWORD PTR [edi],cl
  419f48:	leave  
  419f49:	pop    edx
  419f4a:	test   eax,0x7dda0d82
  419f4f:	call   0xae07e905
  419f54:	push   cs
  419f55:	xsave  [esi+ecx*4]
  419f59:	mov    dh,0x2c
  419f5b:	sti    
  419f5c:	cld    
  419f5d:	push   ebx
  419f5e:	mov    esi,ebp
  419f60:	sbb    eax,0x4c8f73f9
  419f65:	pop    ecx
  419f66:	cmc    
  419f67:	sbb    al,0x1b
  419f69:	fisub  DWORD PTR [ebp-0x61]
  419f6c:	jl     0x419f52
  419f6e:	shl    BYTE PTR [edi],cl
  419f70:	es (bad) 
  419f72:	xchg   edi,eax
  419f73:	ret    
  419f74:	inc    ebp
  419f75:	ss xor eax,0x6cf5a72d
  419f7b:	push   ds
  419f7c:	mov    cs,WORD PTR [esi-0x7d]
  419f7f:	xchg   ebx,eax
  419f80:	mov    esp,0x14f0c5d4
  419f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f86:	bound  edi,QWORD PTR [edx]
  419f88:	sub    al,0x42
  419f8a:	aas    
  419f8b:	jns    0x419fb8
  419f8d:	jmp    0x6937:0x3745ccb0
  419f94:	and    bl,BYTE PTR [ecx+0x9052d1f]
  419f9a:	adc    BYTE PTR [eax+eax*4],dh
  419f9d:	out    dx,eax
  419f9e:	addr16 (bad) 
  419fa0:	jle    0x419f90
  419fa2:	jle    0x419f8d
  419fa4:	dec    ebp
  419fa5:	cmp    al,0x36
  419fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fa8:	(bad)  
  419fa9:	in     eax,0x65
  419fab:	xchg   ecx,eax
  419fac:	push   0x1773dbf4
  419fb1:	jmp    0x419f6d
  419fb3:	bound  eax,QWORD PTR [esi-0x19]
  419fb6:	stos   DWORD PTR es:[edi],eax
  419fb7:	lea    esp,[ebp-0x6757cd1f]
  419fbd:	mov    dl,0xda
  419fbf:	push   edx
  419fc0:	sub    DWORD PTR [edx-0x31],eax
  419fc3:	or     DWORD PTR [ebp+0x6276721e],0x49
  419fca:	cli    
  419fcb:	lds    esi,FWORD PTR [esi]
  419fcd:	lods   eax,DWORD PTR ds:[esi]
  419fce:	and    BYTE PTR [edx-0x39],0x4b
  419fd2:	cmp    DWORD PTR [esi-0x5c],0x52537121
  419fd9:	mov    dh,0xb4
  419fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fdc:	in     eax,0x1e
  419fde:	jle    0x41a050
  419fe0:	add    esi,DWORD PTR [ebp+0x3c]
  419fe3:	push   esi
  419fe4:	jbe    0x419fad
  419fe6:	(bad)  
  419fe7:	fs sti 
  419fe9:	call   0xd4a4:0xe2ee2d08
  419ff0:	push   esp
  419ff1:	shl    BYTE PTR [ecx+0x50e782fe],0xe2
  419ff8:	in     al,0xf2
  419ffa:	scas   al,BYTE PTR es:[edi]
  419ffb:	int    0xc8
  419ffd:	push   cs
  419ffe:	mov    bl,0x68
  41a000:	sti    
  41a001:	mov    WORD PTR [esi-0x51],fs
  41a004:	dec    ebp
  41a005:	stos   DWORD PTR es:[edi],eax
  41a006:	call   0x763e:0x4b463f43
  41a00d:	loopne 0x41a066
  41a00f:	cvttps2pi mm2,QWORD PTR [ebp+edi*1-0x38105f22]
  41a017:	mov    esp,0xc3711e89
  41a01c:	cmc    
  41a01d:	bound  edx,QWORD PTR [bx+si+0x2f9c]
  41a022:	or     eax,0xd7a4c830
  41a027:	leave  
  41a028:	pop    edx
  41a029:	or     BYTE PTR [ebp+0x37a99256],0xe8
  41a030:	jae    0x41a08b
  41a032:	and    al,0xbb
  41a034:	pop    ecx
  41a035:	dec    ebx
  41a036:	adc    BYTE PTR [esi],dl
  41a038:	nop
  41a039:	cmp    DWORD PTR [ecx+0x17],eax
  41a03c:	dec    ecx
  41a03d:	jae    0x41a05a
  41a03f:	xchg   ecx,eax
  41a040:	push   ss
  41a041:	dec    ecx
  41a042:	xor    edi,DWORD PTR [eax-0x55]
  41a045:	sbb    DWORD PTR [esi],esp
  41a047:	add    ebx,DWORD PTR [edi+0x740f3078]
  41a04d:	shl    dh,0x15
  41a050:	dec    ecx
  41a051:	pop    ds
  41a052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a053:	xchg   DWORD PTR [edx+0x27],ecx
  41a056:	add    ecx,DWORD PTR [eax-0x401e5690]
  41a05c:	hlt    
  41a05d:	add    eax,0x824e7af1
  41a062:	and    edx,DWORD PTR [ebx]
  41a064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a065:	dec    ecx
  41a066:	mov    ah,0x32
  41a068:	lods   al,BYTE PTR ds:[esi]
  41a069:	inc    esi
  41a06a:	enter  0x5fe9,0xf1
  41a06e:	xchg   esi,eax
  41a06f:	adc    BYTE PTR [ecx-0x48],dh
  41a072:	pop    esi
  41a073:	cwde   
  41a074:	fisttp QWORD PTR [edi+0x7c]
  41a077:	dec    eax
  41a078:	ins    DWORD PTR es:[edi],dx
  41a079:	lea    ebx,[ebx+ecx*4-0x80]
  41a07d:	add    edi,DWORD PTR [ebx]
  41a07f:	loope  0x41a0ef
  41a081:	mov    cl,0x22
  41a083:	xchg   esp,eax
  41a084:	jp     0x41a0a2
  41a086:	out    dx,eax
  41a087:	lds    eax,FWORD PTR [esi-0x2a]
  41a08a:	xlat   BYTE PTR ds:[ebx]
  41a08b:	mov    ebx,0xdca503b5
  41a090:	stos   BYTE PTR es:[edi],al
  41a091:	jmp    0x41a10f
  41a093:	pop    ecx
  41a094:	pop    edx
  41a095:	and    eax,0xd4e6dca4
  41a09a:	jns    0x41a0b8
  41a09c:	mov    al,0x6c
  41a09e:	mov    ch,BYTE PTR [eax]
  41a0a0:	(bad)  
  41a0a1:	mov    eax,0x6864b4a3
  41a0a6:	cwde   
  41a0a7:	pushf  
  41a0a8:	sub    BYTE PTR [edx+0x6cda6a73],ch
  41a0ae:	(bad)  
  41a0af:	popf   
  41a0b0:	mov    ah,0xa0
  41a0b2:	in     al,0xc1
  41a0b4:	push   0xd4878097
  41a0b9:	cmp    ah,BYTE PTR [esi]
  41a0bb:	mov    ch,dh
  41a0bd:	sub    al,0xb4
  41a0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c0:	jo     0x41a0c2
  41a0c2:	add    eax,0xb0f74036
  41a0c7:	cmp    al,0x29
  41a0c9:	xlat   BYTE PTR ds:[ebx]
  41a0ca:	in     eax,0x39
  41a0cc:	push   esi
  41a0cd:	jmp    FWORD PTR [ebx+0x75c13c1b]
  41a0d3:	and    al,0x62
  41a0d5:	outs   dx,BYTE PTR ds:[esi]
  41a0d6:	jecxz  0x41a05b
  41a0d8:	jl     0x41a146
  41a0da:	fwait
  41a0db:	mov    ch,0xc5
  41a0dd:	leave  
  41a0de:	js     0x41a0cd
  41a0e0:	and    ebx,eax
  41a0e2:	fidivr WORD PTR [ebx]
  41a0e4:	rcl    BYTE PTR [ecx],1
  41a0e6:	jp     0x41a110
  41a0e8:	sbb    al,0x8e
  41a0ea:	(bad)  
  41a0eb:	adc    al,0xbf
  41a0ed:	cld    
  41a0ee:	add    DWORD PTR [edi],0xf8c97a64
  41a0f4:	ins    BYTE PTR es:[edi],dx
  41a0f5:	aam    0x58
  41a0f7:	add    BYTE PTR ds:0x44ff45a6,al
  41a0fd:	sub    ebx,DWORD PTR [ebx-0xac27a82]
  41a103:	adc    bl,dl
  41a105:	jge    0x41a138
  41a107:	pop    eax
  41a108:	xor    ebp,DWORD PTR [ebx]
  41a10a:	inc    esi
  41a10b:	popf   
  41a10c:	cmp    eax,0x4522d36f
  41a111:	add    ebx,DWORD PTR [edx+ecx*1]
  41a114:	mov    ecx,esp
  41a116:	pusha  
  41a117:	xchg   edx,eax
  41a118:	xor    BYTE PTR [ebp+0x6f1e8774],0x38
  41a11f:	loop   0x41a19b
  41a121:	popf   
  41a122:	ficom  DWORD PTR [eax]
  41a124:	sub    al,0xa4
  41a126:	cdq    
  41a127:	jle    0x41a133
  41a129:	mov    gs,WORD PTR [edi]
  41a12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a12c:	mov    ch,0xc1
  41a12e:	(bad)  
  41a130:	or     BYTE PTR [ecx+eax*1],dh
  41a133:	inc    ebp
  41a134:	in     eax,0x24
  41a136:	fnstcw WORD PTR [eax+0x4c]
  41a139:	cmc    
  41a13a:	sbb    ebx,DWORD PTR [edi]
  41a13c:	inc    esi
  41a13d:	sub    eax,0xe485c18
  41a142:	or     BYTE PTR [eax+0x1b1dd4d7],al
  41a148:	mov    cs,WORD PTR [ebx+esi*8+0xd]
  41a14c:	xor    eax,0x583a81cf
  41a151:	inc    edx
  41a152:	out    dx,al
  41a153:	sub    bl,dh
  41a155:	and    eax,0x98200c52
  41a15a:	loope  0x41a0f1
  41a15c:	mov    ch,0x3a
  41a15e:	in     eax,dx
  41a15f:	push   ecx
  41a160:	xor    DWORD PTR [edi+0x78],ebx
  41a163:	pushf  
  41a164:	xchg   esp,eax
  41a165:	(bad)  
  41a166:	mov    ebp,0xb737a572
  41a16b:	aas    
  41a16c:	mov    ah,0x5
  41a16e:	out    dx,al
  41a16f:	xor    al,0x5a
  41a171:	bound  esp,QWORD PTR [edx-0x1c6b9613]
  41a177:	popf   
  41a178:	je     0x41a1c7
  41a17a:	in     eax,dx
  41a17b:	jno    0x41a159
  41a17d:	cmp    esi,DWORD PTR [esi+ecx*1-0x27ff32a8]
  41a184:	sub    BYTE PTR [ebx+0x54c03aeb],bl
  41a18a:	hlt    
  41a18b:	mov    dh,0x4
  41a18d:	jae    0x41a1bd
  41a18f:	jecxz  0x41a193
  41a191:	aas    
  41a192:	jmp    0x6e0f:0x3dbc79a4
  41a199:	clc    
  41a19a:	mov    es,WORD PTR [edi+0x6a]
  41a19d:	sbb    edx,ecx
  41a19f:	jmp    0x41a1d3
  41a1a1:	test   al,0x80
  41a1a3:	hlt    
  41a1a4:	out    0xd9,eax
  41a1a6:	aad    0xe4
  41a1a8:	(bad)
  41a1ab:	xchg   DWORD PTR [edi],ecx
  41a1ad:	shl    DWORD PTR [esi+0x69f457b8],cl
  41a1b3:	popa   
  41a1b4:	inc    esp
  41a1b5:	push   ecx
  41a1b6:	adc    al,0x1f
  41a1b8:	stos   BYTE PTR es:[edi],al
  41a1b9:	cwde   
  41a1ba:	adc    DWORD PTR [eax-0x7579fd75],ebx
  41a1c0:	jecxz  0x41a22e
  41a1c2:	mov    edx,0x18caa582
  41a1c7:	jb     0x41a194
  41a1c9:	pop    ecx
  41a1ca:	xor    DWORD PTR [edi+0x65],ecx
  41a1cd:	hlt    
  41a1ce:	lea    edi,[esi+0x8]
  41a1d1:	xor    eax,0x187c1347
  41a1d6:	dec    esp
  41a1d7:	ret    
  41a1d8:	inc    edx
  41a1d9:	jg     0x41a1c7
  41a1db:	in     al,0x22
  41a1dd:	pusha  
  41a1de:	cmp    ch,bl
  41a1e0:	sbb    al,0x51
  41a1e2:	mov    al,0x13
  41a1e4:	loopne 0x41a1c4
  41a1e6:	fistp  DWORD PTR [eax-0x39bbfca8]
  41a1ec:	dec    ebp
  41a1ed:	dec    ecx
  41a1ee:	sub    BYTE PTR [esi+0x14],ah
  41a1f1:	call   0x4427:0xfa9d3d58
  41a1f8:	sub    cl,BYTE PTR [edi-0x68]
  41a1fb:	fnsave [edx+0x1b68d69c]
  41a201:	stc    
  41a202:	mov    bl,0x3c
  41a204:	lods   eax,DWORD PTR ds:[esi]
  41a205:	(bad)  
  41a206:	aas    
  41a207:	stos   DWORD PTR es:[edi],eax
  41a208:	(bad)  
  41a209:	cdq    
  41a20a:	push   0xae4ce63c
  41a20f:	out    dx,al
  41a210:	mov    al,0x6a
  41a212:	push   ebx
  41a213:	sahf   
  41a214:	or     bh,ch
  41a216:	cmp    ch,BYTE PTR [edx-0x17]
  41a219:	popf   
  41a21a:	or     eax,0x38cc5708
  41a21f:	and    ecx,DWORD PTR [edx-0x4196e8c8]
  41a225:	(bad)  
  41a227:	pusha  
  41a228:	fwait
  41a229:	int3   
  41a22a:	bound  edi,QWORD PTR [ecx+edx*4-0x5290a469]
  41a231:	fisubr DWORD PTR [edx-0x72d2dd53]
  41a237:	ret    0x8dac
  41a23a:	xchg   ebp,eax
  41a23b:	xchg   esp,eax
  41a23c:	sbb    eax,DWORD PTR [ecx+0x19]
  41a23f:	std    
  41a240:	or     eax,0x2959d195
  41a245:	cmp    bl,al
  41a247:	sar    DWORD PTR [edi-0x68],1
  41a24a:	lds    ebx,FWORD PTR ds:0x25f7c27e
  41a250:	ret    0xe7a7
  41a253:	sub    cl,BYTE PTR [ecx]
  41a255:	pop    ebp
  41a256:	iret   
  41a257:	mov    al,ds:0xdee68000
  41a25c:	ds sub cl,cl
  41a25f:	xchg   esi,eax
  41a260:	dec    esi
  41a261:	fxch   st(3)
  41a263:	arpl   bp,dx
  41a265:	cmp    DWORD PTR [ebx+edi*2],edi
  41a268:	xchg   edi,eax
  41a269:	mov    al,ds:0x245aa278
  41a26e:	mov    ds,WORD PTR [esi+ebp*8-0x73e338d6]
  41a275:	mov    BYTE PTR [ebp-0x14326c79],bl
  41a27b:	adc    al,0x6f
  41a27d:	dec    eax
  41a27e:	jno    0x41a238
  41a280:	je     0x41a27d
  41a282:	stos   DWORD PTR es:[edi],eax
  41a283:	stos   DWORD PTR es:[edi],eax
  41a284:	mov    ebp,DWORD PTR ds:[eax-0x11377e09]
  41a28b:	xor    bh,BYTE PTR [eax-0x13783108]
  41a291:	scas   eax,DWORD PTR es:[edi]
  41a292:	lock xor ecx,DWORD PTR [ebp+0x6a]
  41a296:	dec    ecx
  41a297:	dec    esi
  41a298:	dec    esp
  41a299:	lds    esi,FWORD PTR [edi]
  41a29b:	fwait
  41a29c:	or     bh,dh
  41a29e:	repz in eax,0x98
  41a2a1:	outs   dx,BYTE PTR ds:[esi]
  41a2a2:	dec    ebp
  41a2a3:	iret   
  41a2a4:	mov    eax,ds:0xd4ee4fa6
  41a2a9:	pop    eax
  41a2aa:	daa    
  41a2ab:	(bad)  
  41a2ac:	pop    ss
  41a2ad:	lock es add ecx,0x579acc72
  41a2b5:	fdivp  st(7),st
  41a2b7:	xchg   esi,eax
  41a2b8:	adc    ebp,ebx
  41a2ba:	jg     0x41a304
  41a2bc:	jmp    0x41a288
  41a2be:	sbb    al,0xfd
  41a2c0:	test   ch,dl
  41a2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c3:	sbb    BYTE PTR [ebx],ch
  41a2c5:	sub    eax,0x21d51d40
  41a2ca:	dec    ebp
  41a2cb:	or     BYTE PTR ds:0x62a74358,0x46
  41a2d2:	lea    edx,[ebp+eiz*2-0x531ac2be]
  41a2d9:	inc    eax
  41a2da:	mov    al,0xf0
  41a2dc:	test   BYTE PTR [ebx-0x77ebd9bb],dh
  41a2e2:	inc    ebp
  41a2e3:	add    bl,BYTE PTR [edi+0x1f2ae9ff]
  41a2e9:	xlat   BYTE PTR ds:[ebx]
  41a2ea:	pop    ebx
  41a2eb:	adc    eax,0x1ad8ce86
  41a2f0:	fstp   QWORD PTR [eax+0x8eb883d]
  41a2f6:	sub    al,BYTE PTR [eax]
  41a2f8:	repnz mov al,0xf5
  41a2fb:	jecxz  0x41a303
  41a2fd:	add    ch,cl
  41a2ff:	addr16 pop edi
  41a301:	mov    esi,0xd6427960
  41a306:	jmp    0x41a31f
  41a308:	pop    edx
  41a309:	call   0x4a4e:0x2fa12e56
  41a310:	mov    ds:0x7928da25,eax
  41a315:	ret    
  41a316:	mov    ds:0xe52cf3a3,eax
  41a31b:	neg    BYTE PTR [esi-0x2506ec26]
  41a321:	arpl   WORD PTR [edi],sp
  41a323:	jecxz  0x41a2ff
  41a325:	cwde   
  41a326:	add    ebx,edi
  41a328:	(bad)  
  41a329:	test   eax,0x35be267f
  41a32e:	rcl    DWORD PTR ds:0x94afd971,0x94
  41a335:	ret    0xa543
  41a338:	cwde   
  41a339:	adc    edi,esi
  41a33b:	out    dx,eax
  41a33c:	aas    
  41a33d:	sbb    BYTE PTR [ecx+edi*4-0x8],dh
  41a341:	sar    BYTE PTR [ebp-0x48eb3f0],1
  41a347:	add    al,0xc9
  41a349:	sar    BYTE PTR [edi+0x77],cl
  41a34c:	rcr    BYTE PTR [edx],1
  41a34e:	mov    ebp,0xd039f5a9
  41a353:	xchg   edi,eax
  41a354:	retf   
  41a355:	pop    ebp
  41a356:	cmp    eax,0x64b4e6e4
  41a35b:	adc    al,0xbf
  41a35d:	adc    al,0xa2
  41a35f:	adc    DWORD PTR [ecx],esi
  41a361:	adc    al,0x4e
  41a363:	xlat   BYTE PTR ds:[ebx]
  41a364:	std    
  41a365:	test   al,0xab
  41a367:	inc    eax
  41a368:	jns    0x41a3e5
  41a36a:	int3   
  41a36b:	add    eax,0x6e42cb00
  41a370:	(bad)  
  41a371:	(bad)  
  41a372:	jno    0x41a3cf
  41a374:	icebp  
  41a375:	mov    al,ds:0xa00ede0e
  41a37a:	test   BYTE PTR [edi-0x51b11ac5],0x9e
  41a381:	cmc    
  41a382:	enter  0x88e5,0x3f
  41a386:	(bad)  
  41a387:	repnz mov ebx,ebx
  41a38a:	push   ebx
  41a38b:	shl    DWORD PTR [esp+ecx*8-0x10],cl
  41a38f:	mov    ah,BYTE PTR [ecx+esi*8-0x7e9fac0c]
  41a396:	mov    cs,WORD PTR [edi+ebp*2-0x4]
  41a39a:	jo     0x41a409
  41a39c:	mov    edx,0x201a81c7
  41a3a1:	lds    esi,FWORD PTR [ebp-0x3b8a4460]
  41a3a7:	jo     0x41a3fb
  41a3a9:	xor    BYTE PTR [edx],ah
  41a3ab:	popa   
  41a3ac:	inc    ebx
  41a3ad:	test   esi,ebp
  41a3af:	sbb    eax,0x46967423
  41a3b4:	iret   
  41a3b5:	das    
  41a3b6:	fs out 0xd0,al
  41a3b9:	out    0x68,eax
  41a3bb:	in     eax,dx
  41a3bc:	sar    DWORD PTR [edx-0x13],1
  41a3bf:	scas   al,BYTE PTR es:[edi]
  41a3c0:	mov    cl,0x75
  41a3c2:	adc    dh,BYTE PTR [eax]
  41a3c4:	mov    ds:0xf63dab43,eax
  41a3c9:	push   esi
  41a3ca:	ds mov edi,0x9b47278f
  41a3d0:	dec    edx
  41a3d1:	jl     0x41a414
  41a3d3:	loope  0x41a3e0
  41a3d5:	(bad)  
  41a3d6:	shl    BYTE PTR [eax],1
  41a3d8:	iret   
  41a3d9:	daa    
  41a3da:	aas    
  41a3db:	int    0xc6
  41a3dd:	push   eax
  41a3de:	xor    eax,0xf3806fed
  41a3e3:	in     eax,0x8f
  41a3e5:	std    
  41a3e6:	add    al,0x7b
  41a3e8:	dec    ebx
  41a3e9:	jbe    0x41a3be
  41a3eb:	mov    DWORD PTR [edx+0x17],edi
  41a3ee:	std    
  41a3ef:	adc    bl,BYTE PTR [eax-0x55]
  41a3f2:	mov    edi,DWORD PTR [edi-0x37]
  41a3f5:	repz arpl WORD PTR [edi+esi*1-0x308ad5c],di
  41a3fd:	and    eax,0xd4000b32
  41a402:	ret    0x446
  41a405:	jae    0x41a438
  41a407:	rcr    BYTE PTR [edx-0x51],0xb9
  41a40b:	mov    eax,ds:0xc9ee28b9
  41a410:	mov    BYTE PTR [si-0x6333],cl
  41a415:	cmp    esp,DWORD PTR [ecx+0x44]
  41a418:	test   edx,edi
  41a41a:	mov    edi,0xc1fef94c
  41a41f:	mov    al,0x13
  41a421:	in     al,0x22
  41a423:	loopne 0x41a3ed
  41a425:	xchg   edi,eax
  41a426:	repz xchg ecx,eax
  41a428:	stc    
  41a429:	or     eax,0xb05a942f
  41a42e:	mov    al,ds:0x59fbe657
  41a433:	sub    al,0xc3
  41a435:	imul   ebx,DWORD PTR [edi],0x605ac3ca
  41a43b:	mov    bh,0xb7
  41a43d:	test   DWORD PTR [ecx+0x18],eax
  41a440:	push   es
  41a441:	test   al,0x16
  41a443:	dec    esp
  41a444:	or     BYTE PTR [ecx+0x2d664dee],cl
  41a44a:	pop    edi
  41a44b:	int    0xfb
  41a44d:	or     ch,bh
  41a44f:	dec    edx
  41a450:	inc    ebp
  41a451:	repnz (bad) 
  41a453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a454:	mov    ebx,0x27013351
  41a459:	(bad)  
  41a45a:	cmp    ch,BYTE PTR [eax]
  41a45c:	xchg   ebp,eax
  41a45d:	and    DWORD PTR [edx],esi
  41a45f:	xchg   ecx,eax
  41a460:	jnp    0x41a437
  41a462:	adc    esi,DWORD PTR [ecx-0x55]
  41a465:	addr16 pop ecx
  41a467:	and    BYTE PTR [ecx+0x795246c9],al
  41a46d:	mov    cl,0xf2
  41a46f:	mov    WORD PTR ds:0xf94626f4,?
  41a475:	adc    al,BYTE PTR [edi-0x63]
  41a478:	(bad)  
  41a479:	dec    edi
  41a47a:	enter  0x21ef,0x39
  41a47e:	cmp    al,0xed
  41a480:	aam    0x2f
  41a482:	fnstenv [edx+0x25]
  41a485:	push   0x1ae5dbea
  41a48a:	out    dx,al
  41a48b:	repnz lea esp,[ecx]
  41a48e:	push   0x23ab162d
  41a493:	mov    al,ds:0x56e0a3fb
  41a498:	xlat   BYTE PTR ds:[ebx]
  41a499:	sbb    BYTE PTR [eax+0x2f],bl
  41a49c:	mov    cl,0x7
  41a49e:	mov    eax,ds:0x561100af
  41a4a3:	mov    ds:0x6bea1f71,eax
  41a4a8:	and    eax,0x9282bc48
  41a4ad:	popf   
  41a4ae:	sub    ecx,esi
  41a4b0:	jne    0x41a445
  41a4b2:	(bad)
  41a4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b6:	lahf   
  41a4b7:	in     eax,dx
  41a4b8:	push   ebp
  41a4b9:	add    BYTE PTR [ebx-0x6e],bl
  41a4bc:	mov    BYTE PTR [ecx+0x4f],cl
  41a4bf:	(bad)  
  41a4c0:	aad    0xc2
  41a4c2:	mov    al,ds:0xb23ae5ae
  41a4c7:	mov    eax,0xf5d980df
  41a4cc:	cmp    eax,0xb6b8f7c1
  41a4d1:	out    dx,eax
  41a4d2:	mov    bl,0x51
  41a4d4:	mov    edi,0x9e93d78e
  41a4d9:	call   esp
  41a4db:	outs   dx,BYTE PTR ds:[esi]
  41a4dc:	dec    ecx
  41a4dd:	sub    al,0x71
  41a4df:	nop
  41a4e0:	fadd   st,st(1)
  41a4e2:	mov    cl,BYTE PTR ds:0xb2a575a6
  41a4e8:	fcom   DWORD PTR [esi+eiz*1]
  41a4eb:	retf   
  41a4ec:	sahf   
  41a4ed:	ror    DWORD PTR [edx+eax*2+0x420c8bac],1
  41a4f4:	hlt    
  41a4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4f6:	out    dx,al
  41a4f7:	mov    dh,0x1a
  41a4f9:	sahf   
  41a4fa:	rcl    BYTE PTR [ecx-0x53],cl
  41a4fd:	(bad)  
  41a4fe:	sbb    esi,edi
  41a500:	xor    bh,BYTE PTR [eax]
  41a502:	dec    edx
  41a503:	int3   
  41a504:	mov    edi,0x5aa7e128
  41a509:	dec    edi
  41a50a:	jle    0x41a541
  41a50c:	(bad)  
  41a50d:	push   ds
  41a50e:	in     eax,0xa5
  41a510:	jp     0x41a509
  41a512:	loope  0x41a4ab
  41a514:	mov    ebx,0x7327d209
  41a519:	cmp    DWORD PTR [ecx+0x55],ebx
  41a51c:	daa    
  41a51d:	retf   0x28db
  41a520:	dec    ecx
  41a521:	js     0x41a523
  41a523:	mov    ds:0x7d17a00e,al
  41a528:	ret    
  41a529:	les    edi,FWORD PTR [esi+0x3]
  41a52c:	and    BYTE PTR [ebx+0x1c273f51],ch
  41a532:	mov    ebx,0xb9aeab9a
  41a537:	cmp    eax,0x2a2498a3
  41a53c:	sub    cl,BYTE PTR [edx+ebp*4+0x6c]
  41a540:	repz fld TBYTE PTR [esi+0x3f9a5267]
  41a547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a548:	(bad)  
  41a549:	pop    ebx
  41a54a:	inc    ebx
  41a54b:	enter  0x5790,0xa
  41a54f:	cli    
  41a550:	dec    ebp
  41a551:	sbb    DWORD PTR [edx+0x4a],esp
  41a554:	add    DWORD PTR [edx-0x7f],0xffffffca
  41a558:	icebp  
  41a559:	and    al,0x88
  41a55b:	stc    
  41a55c:	sbb    al,0x14
  41a55e:	jo     0x41a538
  41a560:	jle    0x41a5d0
  41a562:	int3   
  41a563:	popa   
  41a564:	call   0x215690c3
  41a569:	and    ebx,DWORD PTR [ebx+eax*2+0x15]
  41a56d:	xchg   esi,eax
  41a56e:	xor    BYTE PTR [edi-0x5f],dl
  41a571:	shl    BYTE PTR [bx],1
  41a574:	sub    al,cl
  41a576:	icebp  
  41a577:	pop    esp
  41a578:	and    eax,0x59601c0a
  41a57d:	lock xor eax,0x7fbdf123
  41a583:	adc    dh,BYTE PTR [edi+0x58]
  41a586:	cld    
  41a587:	push   eax
  41a588:	fcomp  QWORD PTR [esi]
  41a58a:	repz mov ds:0x6d5f8251,eax
  41a590:	jmp    0x41a51a
  41a592:	mov    BYTE PTR [bx+si-0x6e8a],0xc1
  41a598:	pushf  
  41a599:	int3   
  41a59a:	mov    esi,0x7df242af
  41a59f:	hlt    
  41a5a0:	add    ah,BYTE PTR [esi+0x11]
  41a5a3:	dec    ebx
  41a5a4:	sti    
  41a5a5:	push   0x3d
  41a5a7:	loop   0x41a574
  41a5a9:	outs   dx,DWORD PTR ds:[esi]
  41a5aa:	inc    ecx
  41a5ab:	ins    BYTE PTR es:[edi],dx
  41a5ac:	lods   al,BYTE PTR ds:[esi]
  41a5ad:	lods   al,BYTE PTR ds:[esi]
  41a5ae:	pop    ebx
  41a5af:	inc    esi
  41a5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b1:	stos   DWORD PTR es:[edi],eax
  41a5b2:	adc    DWORD PTR [ebx],0xe6a7cf35
  41a5b8:	fild   QWORD PTR [edx+edx*1+0x12]
  41a5bc:	mov    WORD PTR [ebx],ds
  41a5be:	xchg   edi,eax
  41a5bf:	mov    ch,0x8e
  41a5c1:	mov    esp,0xe5064e0b
  41a5c6:	cwde   
  41a5c7:	leave  
  41a5c8:	in     al,dx
  41a5c9:	in     al,dx
  41a5ca:	pop    esi
  41a5cb:	mov    dl,0xfc
  41a5cd:	fs mov bl,0x99
  41a5d0:	dec    ebp
  41a5d1:	data16 sahf 
  41a5d3:	mov    edx,DWORD PTR [ebp+ecx*8-0x45]
  41a5d7:	test   eax,0xd29fd55a
  41a5dc:	fnstenv [ecx+0xa]
  41a5df:	or     al,0xbc
  41a5e1:	lahf   
  41a5e2:	push   cs
  41a5e3:	fcomp  st(0)
  41a5e5:	xchg   edx,eax
  41a5e6:	pop    ss
  41a5e7:	fcom   DWORD PTR [esp+eax*4]
  41a5ea:	mov    al,ds:0x2e3ab450
  41a5ef:	iret   
  41a5f0:	inc    ebx
  41a5f1:	mul    DWORD PTR [esi+0x2226e67a]
  41a5f7:	dec    edx
  41a5f8:	xchg   esp,eax
  41a5f9:	call   0xca1163ea
  41a5fe:	add    ah,BYTE PTR [ebx+0x37f51cc8]
  41a604:	fst    DWORD PTR [esp+eax*8]
  41a607:	scas   eax,DWORD PTR es:[edi]
  41a608:	xor    al,0xa7
  41a60a:	xor    BYTE PTR [ebx],cl
  41a60c:	dec    esi
  41a60d:	pushf  
  41a60e:	dec    ebp
  41a60f:	sysexit 
  41a611:	and    BYTE PTR [eax],cl
  41a613:	mov    bh,0x5
  41a615:	or     ecx,esp
  41a617:	repz fstp DWORD PTR [edi]
  41a61a:	mov    esp,0x17b68f50
  41a61f:	sbb    bl,ch
  41a621:	mov    edx,0x5f84b56f
  41a626:	mov    ds:0x1523b8d5,eax
  41a62b:	test   BYTE PTR [esi-0x2c],cl
  41a62e:	call   0xcf85:0x2eca7d53
  41a635:	mov    esp,0x8db5eb4f
  41a63a:	mov    edi,0x53241438
  41a63f:	and    ebx,edi
  41a641:	mov    ecx,0xb516013
  41a646:	jecxz  0x41a666
  41a648:	or     BYTE PTR [edx],dl
  41a64a:	(bad)  
  41a64b:	pop    eax
  41a64c:	mov    cl,0xe3
  41a64e:	scas   al,BYTE PTR es:[edi]
  41a64f:	sub    dl,ch
  41a651:	popf   
  41a652:	jmp    0x41a653
  41a654:	push   ss
  41a655:	push   edi
  41a656:	fstp   TBYTE PTR [ebx-0x6d]
  41a659:	pushf  
  41a65a:	fst    DWORD PTR [eax+0x1482172e]
  41a660:	jle    0x41a5e8
  41a662:	fsubrp st(7),st
  41a664:	retf   0x27d9
  41a667:	cli    
  41a668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a669:	xor    BYTE PTR [eax+0x1cae536a],dh
  41a66f:	repz sahf 
  41a671:	dec    esp
  41a672:	pop    edi
  41a673:	xor    BYTE PTR [eax+0x6d],0x2b
  41a677:	ds xchg edx,eax
  41a679:	dec    eax
  41a67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a67b:	out    dx,eax
  41a67c:	push   eax
  41a67d:	mov    ebx,ds
  41a67f:	push   es
  41a680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a681:	add    esi,esi
  41a683:	mov    ah,0x5b
  41a685:	(bad)  
  41a686:	fbstp  TBYTE PTR ds:0xf648a47a
  41a68c:	xchg   edi,eax
  41a68d:	les    ecx,FWORD PTR [esp+edi*2-0x75a09286]
  41a694:	hlt    
  41a695:	fsub   DWORD PTR [edx-0x71]
  41a698:	imul   ebp,eax,0xf39aaf8a
  41a69e:	das    
  41a69f:	test   eax,0x3d78410e
  41a6a4:	rcr    DWORD PTR [ebx-0x4d],cl
  41a6a7:	std    
  41a6a8:	inc    edi
  41a6a9:	jecxz  0x41a63a
  41a6ab:	arpl   WORD PTR [edx-0x5a212a89],sp
  41a6b1:	dec    edi
  41a6b2:	outs   dx,BYTE PTR ds:[esi]
  41a6b3:	jg     0x41a6e7
  41a6b5:	call   0xd9bf:0x17627afb
  41a6bc:	pop    ss
  41a6bd:	scas   al,BYTE PTR es:[edi]
  41a6be:	pop    ds
  41a6bf:	mov    bh,BYTE PTR [esi+0x2e4f0683]
  41a6c5:	pop    edx
  41a6c6:	loope  0x41a70f
  41a6c8:	mov    esp,0x578f9082
  41a6cd:	popa   
  41a6ce:	pop    eax
  41a6cf:	jl     0x41a6d2
  41a6d1:	pop    esi
  41a6d2:	adc    BYTE PTR [eax+0x7ee3e7ae],dl
  41a6d8:	xor    dl,BYTE PTR [esp+ebx*1+0x150ababe]
  41a6df:	std    
  41a6e0:	push   ebx
  41a6e1:	add    eax,0x8646f1a8
  41a6e6:	jp     0xf730e629
  41a6ec:	pop    esp
  41a6ed:	xor    DWORD PTR [esi+0x5a],0x5d
  41a6f1:	lods   al,BYTE PTR ds:[esi]
  41a6f2:	ss mov dh,0x46
  41a6f5:	mov    dl,0x6d
  41a6f7:	out    dx,al
  41a6f8:	inc    edi
  41a6f9:	test   DWORD PTR [edi],ebx
  41a6fb:	sar    ecx,0x75
  41a6fe:	or     DWORD PTR [eax],0xc72fb4ba
  41a704:	(bad)  
  41a705:	mov    esp,0x174f0d79
  41a70a:	data16 xor BYTE PTR [edx-0x62a76d6c],ch
  41a711:	dec    edx
  41a712:	imul   ecx,DWORD PTR [ecx+0x3c],0xffffffbe
  41a716:	(bad)  
  41a717:	sti    
  41a718:	or     eax,0x2fe2b85d
  41a71d:	xor    al,0xd2
  41a71f:	inc    ecx
  41a720:	imul   esi,eax,0x46
  41a723:	sbb    eax,0x802c95fc
  41a728:	and    BYTE PTR [ebx-0x6e],cl
  41a72b:	adc    BYTE PTR [ecx+0x12],0x3
  41a72f:	(bad)
  41a734:	pop    eax
  41a735:	or     BYTE PTR [edx-0x4a],ah
  41a738:	push   ss
  41a739:	pop    ss
  41a73a:	cmp    eax,0xe60204bb
  41a73f:	or     eax,0x1a26974e
  41a744:	sub    al,BYTE PTR [edx+0x12fc883e]
  41a74a:	push   ecx
  41a74b:	ins    DWORD PTR es:[edi],dx
  41a74c:	or     al,0x62
  41a74e:	dec    ebp
  41a74f:	cs pop ss
  41a751:	retf   0xe01
  41a754:	cmp    al,0xe4
  41a756:	popa   
  41a757:	jge    0x41a7cc
  41a759:	xchg   esp,eax
  41a75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a75b:	outs   dx,BYTE PTR ds:[esi]
  41a75c:	add    BYTE PTR [edx],ah
  41a75e:	sbb    DWORD PTR [ebx+ebx*4],ebp
  41a761:	jae    0x41a7c9
  41a763:	adc    edx,DWORD PTR [ecx-0x18671a48]
  41a769:	cld    
  41a76a:	call   0xe8e8:0xdd3159e5
  41a771:	pop    edx
  41a772:	leave  
  41a773:	ror    BYTE PTR [ecx-0x1e],cl
  41a776:	inc    ebx
  41a777:	icebp  
  41a778:	popa   
  41a779:	dec    eax
  41a77a:	cdq    
  41a77b:	adc    bl,BYTE PTR es:[ecx]
  41a77e:	test   al,0x85
  41a780:	or     al,0xd2
  41a782:	jle    0x41a706
  41a784:	sub    BYTE PTR [edx-0x34],bl
  41a787:	test   eax,0x51cc6c0e
  41a78c:	cmp    al,bl
  41a78e:	dec    eax
  41a78f:	cs jae 0x41a74e
  41a792:	retf   0x234f
  41a795:	into   
  41a796:	arpl   dx,di
  41a798:	add    bh,BYTE PTR [edx]
  41a79a:	inc    ecx
  41a79b:	outs   dx,DWORD PTR ds:[esi]
  41a79c:	scas   al,BYTE PTR es:[edi]
  41a79d:	ja     0x41a7a0
  41a79f:	push   esi
  41a7a0:	jg     0x41a7db
  41a7a2:	adc    bl,BYTE PTR [esi]
  41a7a4:	pushf  
  41a7a5:	out    dx,al
  41a7a6:	sti    
  41a7a7:	adc    eax,0x3c304a96
  41a7ac:	retf   0xc911
  41a7af:	lods   eax,DWORD PTR ds:[esi]
  41a7b0:	cli    
  41a7b1:	les    eax,FWORD PTR [edi-0x1c]
  41a7b4:	test   al,0xb5
  41a7b6:	daa    
  41a7b7:	lahf   
  41a7b8:	cmp    eax,0xbfd03e17
  41a7bd:	retf   
  41a7be:	jle    0x41a757
  41a7c0:	push   ds
  41a7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c2:	aam    0x61
  41a7c4:	das    
  41a7c5:	sub    bl,bh
  41a7c7:	mov    esi,0x795c98b1
  41a7cc:	inc    eax
  41a7cd:	add    BYTE PTR [ebx+0x3f672e06],0xa3
  41a7d4:	or     al,0x8b
  41a7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d7:	pop    edi
  41a7d8:	jmp    0xcae5d8fe
  41a7dd:	rcl    bh,cl
  41a7df:	addr16 pop ds
  41a7e1:	mov    esp,0xe3e3d5c7
  41a7e6:	sub    DWORD PTR [eax+esi*4-0x4f],0xb71942e0
  41a7ee:	ja     0x41a811
  41a7f0:	xor    DWORD PTR [ebp+0x32],edx
  41a7f3:	xor    ah,BYTE PTR [ebp+0x27fcb25c]
  41a7f9:	sahf   
  41a7fa:	clc    
  41a7fb:	push   esp
  41a7fc:	pop    ecx
  41a7fd:	pop    esi
  41a7fe:	mov    dh,0x6e
  41a800:	mov    ecx,0x3001840c
  41a805:	add    esp,ebx
  41a807:	sub    BYTE PTR [eax-0x653c5dd6],al
  41a80d:	or     al,0x5f
  41a80f:	mov    cl,0xd5
  41a811:	inc    ecx
  41a812:	mov    al,ds:0xb7d9701b
  41a817:	test   BYTE PTR [eax],ah
  41a819:	mov    eax,ds:0xb42a7d9f
  41a81e:	mov    ecx,0xce27e67
  41a823:	aaa    
  41a824:	int    0x1f
  41a826:	lock shr DWORD PTR [esi],cl
  41a829:	sbb    bh,BYTE PTR [ecx+0x29]
  41a82c:	loop   0x41a810
  41a82e:	inc    edx
  41a82f:	cmc    
  41a830:	jl     0x41a857
  41a832:	pop    ecx
  41a833:	js     0x41a7ba
  41a835:	(bad)  
  41a836:	mov    ds:0x716b257f,al
  41a83b:	sub    esp,DWORD PTR [esi]
  41a83d:	push   eax
  41a83e:	or     al,0x2a
  41a840:	sbb    ebp,DWORD PTR [eax+0x31]
  41a843:	cli    
  41a844:	and    BYTE PTR [ebp+eax*1-0x59],cl
  41a848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a849:	push   esi
  41a84a:	mov    BYTE PTR [ebx*4-0x565abc02],cl
  41a851:	cmc    
  41a852:	and    edx,DWORD PTR [edx-0x61]
  41a855:	pusha  
  41a856:	inc    esp
  41a857:	(bad)  
  41a858:	pop    edx
  41a859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a85a:	and    dl,BYTE PTR [edx+edi*1-0x279550e4]
  41a861:	mov    edi,0x174ea2c2
  41a866:	lahf   
  41a867:	retf   0x28c4
  41a86a:	fwait
  41a86b:	scas   eax,DWORD PTR es:[edi]
  41a86c:	retf   0x9246
  41a86f:	push   ebx
  41a870:	outs   dx,BYTE PTR ds:[esi]
  41a871:	pop    esi
  41a872:	ins    BYTE PTR es:[edi],dx
  41a873:	add    ch,BYTE PTR [edi-0x7c]
  41a876:	div    esp
  41a878:	xchg   DWORD PTR [esi],ebp
  41a87a:	xor    eax,0x8bacc6fd
  41a87f:	adc    BYTE PTR [ebx],bl
  41a881:	jecxz  0x41a81e
  41a883:	jne    0x41a8ea
  41a885:	xor    BYTE PTR ds:0xedbb216b,dh
  41a88b:	sbb    eax,DWORD PTR [eax]
  41a88d:	mov    edi,0xb3672468
  41a892:	lahf   
  41a893:	cli    
  41a894:	xor    DWORD PTR [esi],esp
  41a896:	faddp  st(2),st
  41a898:	cmp    cl,al
  41a89a:	inc    esp
  41a89b:	pop    ebx
  41a89c:	outs   dx,BYTE PTR fs:[esi]
  41a89e:	push   ecx
  41a89f:	jne    0x41a89c
  41a8a1:	lea    edx,[edx]
  41a8a3:	sub    DWORD PTR ds:0x2e175f31,esp
  41a8a9:	(bad)  
  41a8aa:	rol    DWORD PTR [esi],1
  41a8ac:	xchg   DWORD PTR [ebx],edx
  41a8ae:	xor    cl,BYTE PTR [ebx]
  41a8b0:	mov    edx,0x88f50e8b
  41a8b5:	dec    eax
  41a8b6:	into   
  41a8b7:	ds ror ebx,0xbf
  41a8bb:	mov    dh,0x55
  41a8bd:	test   DWORD PTR [eax],0xde36668
  41a8c3:	cmp    BYTE PTR [esi],0x90
  41a8c6:	xchg   BYTE PTR [eax],cl
  41a8c8:	mov    WORD PTR [ebx-0x6bc16a6],ds
  41a8ce:	jge    0x41a8bc
  41a8d0:	jle    0x41a92a
  41a8d2:	retf   
  41a8d3:	sub    eax,0x942423f9
  41a8d8:	mov    edx,0x26e9db9c
  41a8dd:	js     0x41a902
  41a8df:	shl    bh,0x22
  41a8e2:	clc    
  41a8e3:	mov    dh,0xb8
  41a8e5:	jmp    0x41a8ec
  41a8e7:	dec    ecx
  41a8e8:	enter  0x5986,0x59
  41a8ec:	into   
  41a8ed:	mov    eax,ds:0xd944ea80
  41a8f2:	pusha  
  41a8f3:	mov    WORD PTR [ebp+0x78],?
  41a8f6:	sbb    al,0x43
  41a8f8:	(bad)  
  41a8f9:	pop    ebx
  41a8fa:	fdiv   DWORD PTR [edx+0x53]
  41a8fd:	adc    eax,0x4ac2e329
  41a902:	sar    BYTE PTR [ecx],0x66
  41a905:	sub    BYTE PTR [ecx-0x5cd826],0xb3
  41a90c:	sbb    DWORD PTR ds:0x81a2092a,esp
  41a912:	mov    ch,0x84
  41a914:	xor    dh,BYTE PTR [esi+0x1b6a8f1e]
  41a91a:	mov    bh,0xba
  41a91c:	mov    esi,0x35692008
  41a921:	sahf   
  41a922:	jmp    0x2f7a9058
  41a927:	out    0x95,eax
  41a929:	mov    dl,0xab
  41a92b:	loope  0x41a8d5
  41a92d:	sbb    edx,DWORD PTR [ebp+0x1099fcdf]
  41a933:	push   ebp
  41a934:	pop    ecx
  41a935:	pop    ecx
  41a936:	neg    DWORD PTR gs:[eax-0x4d]
  41a93a:	sar    al,cl
  41a93c:	push   edx
  41a93d:	cs enter 0x9902,0x2b
  41a942:	dec    esi
  41a943:	sub    edi,DWORD PTR [edi+ecx*1-0x21972a2a]
  41a94a:	inc    ebx
  41a94b:	sbb    BYTE PTR [edx+esi*8+0x53],ah
  41a94f:	mov    eax,0x9f8ee229
  41a954:	cwde   
  41a955:	mov    bl,0xf2
  41a957:	or     al,0xbb
  41a959:	cmp    eax,0x82a6d641
  41a95e:	jmp    0x6c87:0xaa052142
  41a965:	cld    
  41a966:	push   esp
  41a967:	mov    bh,0x45
  41a969:	shr    edx,cl
  41a96b:	out    dx,eax
  41a96c:	xor    DWORD PTR [edi+0x44bd1834],eax
  41a972:	sub    eax,0x9d46e723
  41a977:	fld    TBYTE PTR [edi]
  41a979:	in     eax,0x8a
  41a97b:	xchg   DWORD PTR [esi],ebx
  41a97d:	mov    ebx,0xdb0b5df1
  41a982:	jecxz  0x41a97c
  41a984:	icebp  
  41a985:	jne    0x41a9b8
  41a987:	fisub  DWORD PTR [esi]
  41a989:	sahf   
  41a98a:	int3   
  41a98b:	sub    al,0xcb
  41a98d:	cmc    
  41a98e:	adc    BYTE PTR [ecx],dl
  41a990:	mov    ?,WORD PTR [edx-0x5b]
  41a993:	mov    esi,0x6231777a
  41a998:	fidivr DWORD PTR [ebx+0x4d]
  41a99b:	scas   eax,DWORD PTR es:[edi]
  41a99c:	out    0x6b,al
  41a99e:	nop
  41a99f:	xor    DWORD PTR [ebp+0x7655680d],esp
  41a9a5:	imul   ecx,edi,0x13cc5d7e
  41a9ab:	add    DWORD PTR [esp],0x685600ec
  41a9b2:	mov    ss,WORD PTR [edi+esi*2-0x7c]
  41a9b6:	mov    esi,0x17e5003f
  41a9bb:	test   al,0x56
  41a9bd:	mov    bh,0xe7
  41a9bf:	add    eax,0x487a3bd8
  41a9c4:	retf   
  41a9c5:	mov    ah,0xa7
  41a9c7:	out    0x6f,al
  41a9c9:	lock xchg ebp,eax
  41a9cb:	cmp    ebx,ecx
  41a9cd:	pop    ecx
  41a9ce:	call   0x325512de
  41a9d3:	push   ebx
  41a9d4:	mov    WORD PTR [ebx+0x49e23ad1],es
  41a9da:	or     DWORD PTR [ebx+0x43],esp
  41a9dd:	jge    0x41aa39
  41a9df:	mov    bh,0xda
  41a9e1:	pop    esp
  41a9e2:	out    dx,eax
  41a9e3:	js     0x41a9c6
  41a9e5:	jg     0x41a995
  41a9e7:	rep ins BYTE PTR es:[edi],dx
  41a9e9:	mov    ecx,0xd839004e
  41a9ee:	es mov esi,0x60d6753d
  41a9f4:	aad    0xb2
  41a9f6:	ret    0x3e1f
  41a9f9:	and    al,0x50
  41a9fb:	sub    eax,0x46b76c33
  41aa00:	call   0xa74b8938
  41aa05:	xor    dl,ch
  41aa07:	adc    BYTE PTR [edi+edx*4],0x39
  41aa0b:	adc    ebx,DWORD PTR [edi-0x1acb8f21]
  41aa11:	inc    ecx
  41aa12:	aad    0xf
  41aa14:	xchg   ebx,eax
  41aa15:	je     0x41a9ac
  41aa17:	hlt    
  41aa18:	js     0x41aa34
  41aa1a:	cmc    
  41aa1b:	and    dh,BYTE PTR ds:0x8d4732c3
  41aa21:	mov    al,ds:0x56d418f6
  41aa26:	lahf   
  41aa27:	jbe    0x41aa5e
  41aa29:	fistp  WORD PTR [ecx]
  41aa2b:	fild   QWORD PTR [ecx+0x2]
  41aa2e:	mov    al,BYTE PTR [ebx-0x72]
  41aa31:	ja     0x41aa24
  41aa33:	lea    ebx,[edi+eax*8+0x2f]
  41aa37:	das    
  41aa38:	inc    ecx
  41aa39:	sub    DWORD PTR [edx],eax
  41aa3b:	jmp    0x41aaae
  41aa3d:	lods   eax,DWORD PTR ds:[esi]
  41aa3e:	pop    ecx
  41aa3f:	sahf   
  41aa40:	push   ebp
  41aa41:	shl    DWORD PTR [ecx],0xdd
  41aa44:	lods   al,BYTE PTR ds:[esi]
  41aa45:	(bad)  
  41aa47:	in     eax,0xea
  41aa49:	mov    al,0x25
  41aa4b:	(bad)  
  41aa4c:	fistp  DWORD PTR [edx]
  41aa4e:	and    bl,BYTE PTR [edx]
  41aa50:	cmp    edx,DWORD PTR [esi+edx*1]
  41aa53:	sub    bl,dl
  41aa55:	add    bl,BYTE PTR [edi]
  41aa57:	xchg   edi,eax
  41aa58:	push   ss
  41aa59:	adc    ebp,DWORD PTR [eax-0x33]
  41aa5c:	mov    ch,0x49
  41aa5e:	xor    al,0x6d
  41aa60:	and    DWORD PTR ds:0xf7eff5f2,edx
  41aa66:	lahf   
  41aa67:	push   cs
  41aa68:	jne    0x41a9f5
  41aa6a:	pop    DWORD PTR [ebx+ebx*8+0x16]
  41aa6e:	jge    0x41aa6a
  41aa70:	xor    BYTE PTR [ebp+0x41],bl
  41aa73:	loop   0x41aa8e
  41aa75:	mov    esi,DWORD PTR [ecx]
  41aa77:	sbb    BYTE PTR [ebx],cl
  41aa79:	fdivrp st(6),st
  41aa7b:	mov    DWORD PTR [esi+esi*8-0x156c4d72],ebx
  41aa82:	jecxz  0x41aaa4
  41aa84:	and    DWORD PTR [edi-0x11],esp
  41aa87:	mov    es,ebx
  41aa89:	js     0x41aa63
  41aa8b:	dec    edi
  41aa8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8d:	cli    
  41aa8e:	lods   eax,DWORD PTR ds:[esi]
  41aa8f:	pop    ds
  41aa90:	in     al,dx
  41aa91:	push   ds
  41aa92:	mov    ebp,0x2d88ed8d
  41aa97:	sub    eax,0x78602dd3
  41aa9c:	jno    0x41aadf
  41aa9e:	mov    ds:0x1e0cd590,al
  41aaa3:	xor    DWORD PTR [edi+0x5b],esp
  41aaa6:	imul   dl
  41aaa8:	fiadd  DWORD PTR [ebp+0x52]
  41aaab:	jns    0x41aa55
  41aaad:	dec    edi
  41aaae:	inc    esp
  41aaaf:	stc    
  41aab0:	xchg   ebx,eax
  41aab1:	jo     0x41aa79
  41aab3:	add    al,0xff
  41aab5:	dec    esp
  41aab6:	xchg   ebp,edi
  41aab8:	push   ebx
  41aab9:	idiv   DWORD PTR [edx]
  41aabb:	push   ebx
  41aabc:	add    al,0x5d
  41aabe:	xchg   ecx,eax
  41aabf:	pop    ebx
  41aac0:	push   ebx
  41aac1:	xor    DWORD PTR [edi-0x707c7cc],ebp
  41aac7:	retf   0x7b8c
  41aaca:	shl    DWORD PTR [ebx-0x2c05be81],cl
  41aad0:	stos   DWORD PTR es:[edi],eax
  41aad1:	inc    edx
  41aad2:	cmp    BYTE PTR [ebx-0x7ccf1c5],ah
  41aad8:	mov    al,0x93
  41aada:	fmul   QWORD PTR [edi+0x7ff97538]
  41aae0:	jp     0x41ab19
  41aae2:	inc    esi
  41aae3:	sbb    BYTE PTR ds:0x4517e358,bl
  41aae9:	mov    DWORD PTR [ebx-0x10],ecx
  41aaec:	je     0x41ab6c
  41aaee:	and    BYTE PTR [edx],al
  41aaf0:	fiadd  WORD PTR [esi]
  41aaf2:	mov    ecx,0x1f5b2755
  41aaf7:	jg     0x41ab38
  41aaf9:	sbb    ebx,0x59661b49
  41aaff:	and    ah,BYTE PTR [eax]
  41ab01:	clc    
  41ab02:	pop    ecx
  41ab03:	jne    0x41aa86
  41ab05:	lea    eax,[esp+edi*1]
  41ab08:	out    0xfb,al
  41ab0a:	div    DWORD PTR [ebx+0xb626d97]
  41ab10:	pop    ss
  41ab11:	ja     0x41ab01
  41ab13:	icebp  
  41ab14:	outs   dx,BYTE PTR ds:[esi]
  41ab15:	in     al,dx
  41ab16:	call   0xdbdc4d52
  41ab1b:	adc    edx,DWORD PTR ds:0x1ae7bcf4
  41ab21:	mov    ds:0x498ac182,eax
  41ab26:	repz and DWORD PTR [edx+0x6d77691e],ebp
  41ab2d:	xor    DWORD PTR [ecx+0x71],0xb386159d
  41ab34:	inc    ebp
  41ab35:	mov    esp,0x42c8d96
  41ab3a:	pop    ecx
  41ab3b:	cmp    eax,0x3eb96c37
  41ab40:	jne    0x41abbd
  41ab42:	sbb    BYTE PTR cs:[edi+eiz*8-0x6b79178b],ah
  41ab4a:	test   DWORD PTR [edx],ecx
  41ab4c:	adc    DWORD PTR [ebx-0x3b],esi
  41ab4f:	and    esi,edi
  41ab51:	and    al,0x79
  41ab53:	in     eax,0xb
  41ab55:	(bad)  
  41ab56:	adc    BYTE PTR [eax-0x299b058a],dh
  41ab5c:	inc    ecx
  41ab5d:	(bad)  
  41ab5f:	fwait
  41ab60:	sbb    DWORD PTR [ebx+ebx*4-0x2],eax
  41ab64:	icebp  
  41ab65:	or     al,0xd
  41ab67:	add    eax,0xee1d84d2
  41ab6c:	iret   
  41ab6d:	loop   0x41ab22
  41ab6f:	adc    BYTE PTR [ecx+0x668a1e0d],0x4e
  41ab76:	cmp    esi,DWORD PTR gs:[ebx-0x4a7b1703]
  41ab7d:	mov    dh,bl
  41ab7f:	mov    dl,0xd3
  41ab81:	push   0xffffffba
  41ab83:	jp     0x41abb1
  41ab85:	mov    ebp,0x555af5e4
  41ab8a:	ds mov ah,0x40
  41ab8d:	jno    0x41ac07
  41ab8f:	cs sbb DWORD PTR fs:[ebp+ebp*2-0xa5481ff],esp
  41ab98:	xchg   edi,eax
  41ab99:	push   edi
  41ab9a:	pop    ebx
  41ab9b:	xlat   BYTE PTR ds:[ebx]
  41ab9c:	cwde   
  41ab9d:	imul   ebp,DWORD PTR [edx+0x11910715],0x4b8b0120
  41aba7:	mov    ebp,0x60098cbe
  41abac:	lods   al,BYTE PTR ds:[esi]
  41abad:	ror    DWORD PTR [edx-0x46906bbe],1
  41abb3:	daa    
  41abb4:	sub    ecx,DWORD PTR [ebx-0x13]
  41abb7:	mov    ecx,0x56ce94b3
  41abbc:	mov    bh,0xe9
  41abbe:	xchg   edx,eax
  41abbf:	icebp  
  41abc0:	xor    eax,0xf2d47f78
  41abc5:	sbb    al,0xf5
  41abc7:	adc    al,0xc5
  41abc9:	push   0xffffffec
  41abcb:	bound  ebp,QWORD PTR [eax+0x7c]
  41abce:	pop    ecx
  41abcf:	jne    0x41abad
  41abd1:	inc    eax
  41abd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd3:	minps  xmm4,XMMWORD PTR [ebp-0x11a67d65]
  41abda:	nop
  41abdb:	dec    esp
  41abdc:	je     0x41ac49
  41abde:	ret    0x2fe5
  41abe1:	out    dx,al
  41abe2:	dec    esi
  41abe3:	dec    eax
  41abe4:	gs mov ebx,0x20c43346
  41abea:	int    0x53
  41abec:	cld    
  41abed:	out    dx,eax
  41abee:	xor    al,0x35
  41abf0:	rcr    eax,cl
  41abf2:	loope  0x41abfc
  41abf4:	int    0x36
  41abf6:	lods   al,BYTE PTR ds:[esi]
  41abf7:	cmp    dh,BYTE PTR [edi-0x4aa5cc2]
  41abfd:	dec    edi
  41abfe:	repz sbb BYTE PTR [ebx+0x26c9887d],bl
  41ac05:	and    BYTE PTR [eax],ah
  41ac07:	in     eax,0x1e
  41ac09:	push   eax
  41ac0a:	aad    0x99
  41ac0c:	pushf  
  41ac0d:	(bad)  
  41ac0e:	(bad)  [eax+0x4ac93b0f]
  41ac14:	(bad)  
  41ac15:	pop    ebx
  41ac16:	dec    ecx
  41ac17:	aad    0xac
  41ac19:	push   0x1a
  41ac1b:	pop    esi
  41ac1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac1d:	out    0x2a,eax
  41ac1f:	adc    DWORD PTR [edi-0x7789212a],ebx
  41ac25:	ss inc ebp
  41ac27:	fdivr  DWORD PTR [edi+0x39]
  41ac2a:	fwait
  41ac2b:	jmp    0x9703f220
  41ac30:	in     al,0xa8
  41ac32:	inc    eax
  41ac33:	popa   
  41ac34:	xor    eax,0xf306666d
  41ac39:	rol    DWORD PTR [edi+0x70],1
  41ac3c:	sub    al,0xdd
  41ac3e:	add    eax,0xee4a82f1
  41ac43:	hlt    
  41ac44:	pusha  
  41ac45:	lea    ebp,[ecx-0x4682779d]
  41ac4b:	sub    al,0x29
  41ac4d:	daa    
  41ac4e:	sti    
  41ac4f:	lods   eax,DWORD PTR ds:[esi]
  41ac50:	test   dl,dl
  41ac52:	pop    esi
  41ac53:	push   cs
  41ac54:	outs   dx,DWORD PTR ds:[esi]
  41ac55:	ins    BYTE PTR es:[edi],dx
  41ac56:	mov    ds:0xaddab454,al
  41ac5b:	sub    DWORD PTR [eax],ebx
  41ac5d:	or     al,0x1a
  41ac5f:	jne    0x41ac0b
  41ac61:	neg    esp
  41ac63:	push   eax
  41ac64:	dec    eax
  41ac65:	(bad)  
  41ac66:	add    DWORD PTR ds:0x99a0241a,eax
  41ac6c:	(bad)  
  41ac6e:	call   0xa261:0xffe4a562
  41ac75:	loope  0x41acbd
  41ac77:	pop    edi
  41ac78:	inc    edi
  41ac79:	pushf  
  41ac7a:	jmp    0xdfacc7bf
  41ac7f:	cmp    DWORD PTR [eax+0x1],edi
  41ac82:	jp     0x41ac1e
  41ac84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac85:	repz xor al,0x4d
  41ac88:	imul   ecx,DWORD PTR [edx-0x6fce2490],0x3efdb397
  41ac92:	push   esi
  41ac93:	xchg   ebp,eax
  41ac94:	add    al,bl
  41ac96:	pop    ebx
  41ac97:	xchg   eax,ebp
  41ac99:	mov    al,0x9a
  41ac9b:	fdivrp st(1),st
  41ac9d:	stc    
  41ac9e:	ret    
  41ac9f:	push   ebx
  41aca0:	xor    al,0xc1
  41aca2:	or     DWORD PTR [ebp+edi*1+0x65],ebx
  41aca6:	fldcw  WORD PTR [edi-0x78]
  41aca9:	pop    edi
  41acaa:	retf   
  41acab:	imul   DWORD PTR [ecx]
  41acad:	call   0x15e7:0xf955accf
  41acb4:	jne    0x41acb6
  41acb6:	hlt    
  41acb7:	add    ah,BYTE PTR [ecx]
  41acb9:	popf   
  41acba:	xchg   edx,eax
  41acbb:	jmp    0x4d39:0xee655516
  41acc2:	cmp    DWORD PTR [esp+edx*8-0x27e90c9],0x33
  41acca:	out    0xe7,eax
  41accc:	test   eax,0x74e688e5
  41acd1:	repz dec eax
  41acd3:	push   0x39
  41acd5:	sub    bl,cl
  41acd7:	mov    esp,0xdeae18b7
  41acdc:	(bad)  
  41acdd:	neg    DWORD PTR [edi]
  41acdf:	xor    al,0xb7
  41ace1:	out    0x8c,eax
  41ace3:	mov    BYTE PTR [edi+eax*1-0x5918dd3b],0x1b
  41aceb:	icebp  
  41acec:	jp     0x41ad5c
  41acee:	div    DWORD PTR [ecx]
  41acf0:	cmc    
  41acf1:	int    0x92
  41acf3:	jae    0x41ac91
  41acf5:	js     0x41acec
  41acf7:	pop    edx
  41acf8:	push   0xffffffd8
  41acfa:	or     eax,0x28b73538
  41acff:	outs   dx,DWORD PTR ds:[esi]
  41ad00:	xchg   ebp,eax
  41ad01:	sahf   
  41ad02:	out    dx,eax
  41ad03:	in     al,dx
  41ad04:	mov    WORD PTR [edi],gs
  41ad06:	xchg   ecx,eax
  41ad07:	push   cs
  41ad08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad09:	bound  ebp,QWORD PTR [eax-0x6c]
  41ad0c:	adc    al,0x36
  41ad0e:	(bad)  gs:[edx-0x5f]
  41ad12:	xor    ah,BYTE PTR [edi+0x7c]
  41ad15:	and    ebp,0x88a962a
  41ad1b:	(bad)  
  41ad1c:	mov    eax,0x919fc2ee
  41ad21:	dec    ebx
  41ad22:	adc    DWORD PTR [ecx-0x77],ebp
  41ad25:	call   0x6d0beece
  41ad2a:	out    dx,al
  41ad2b:	adc    BYTE PTR [ecx-0x44],bh
  41ad2e:	lds    ebp,FWORD PTR [edi+0x31db2864]
  41ad34:	mov    esp,0x64a0eef1
  41ad39:	mov    dh,0xc4
  41ad3b:	xchg   edx,eax
  41ad3c:	sub    BYTE PTR ds:0x6591155e,ah
  41ad42:	ja     0x41ad4a
  41ad44:	ins    DWORD PTR es:[edi],dx
  41ad45:	mov    dl,0x77
  41ad47:	sahf   
  41ad48:	sbb    eax,0xe18abc1c
  41ad4d:	cmp    BYTE PTR [eax],dh
  41ad4f:	sbb    al,0xff
  41ad51:	test   DWORD PTR [esi+0x51],esp
  41ad54:	ror    DWORD PTR [edi+ebx*8-0x242aa584],0x24
  41ad5c:	cmp    al,0x69
  41ad5e:	(bad)
  41ad62:	xor    ch,bh
  41ad64:	push   ds
  41ad65:	rol    esi,0xc7
  41ad68:	mov    dl,BYTE PTR [ebx]
  41ad6a:	jne    0x41ad00
  41ad6c:	and    BYTE PTR [esi-0x49625657],ch
  41ad72:	cmp    esp,edi
  41ad74:	or     eax,0x4eac7201
  41ad79:	or     eax,0x2e095f8d
  41ad7e:	mov    bl,0x31
  41ad80:	ja     0x41adfc
  41ad82:	pop    esp
  41ad83:	pop    ebx
  41ad84:	bound  edi,QWORD PTR [ecx]
  41ad86:	push   0xbc79daff
  41ad8b:	inc    esp
  41ad8c:	jno    0x41ad5d
  41ad8e:	mov    ch,0x1b
  41ad90:	out    0x53,al
  41ad92:	cmc    
  41ad93:	sub    DWORD PTR [edi-0x2198dfa8],eax
  41ad99:	cwde   
  41ad9a:	mov    bl,0xbc
  41ad9c:	out    0x66,eax
  41ad9e:	or     cl,BYTE PTR [ebp-0x74]
  41ada1:	jmp    FWORD PTR [edx+0xb2bfd7f]
  41ada7:	dec    ebp
  41ada8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ada9:	inc    ebp
  41adaa:	push   esp
  41adab:	ret    0x2145
  41adae:	pop    ss
  41adaf:	xchg   ebx,eax
  41adb0:	enter  0x2213,0xe8
  41adb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb5:	sar    BYTE PTR [ebx+0x18],cl
  41adb8:	pop    ebx
  41adb9:	pop    eax
  41adba:	cmp    edx,esp
  41adbc:	jecxz  0x41ade5
  41adbe:	mov    ds,WORD PTR [ecx+0x16f3c5ac]
  41adc4:	cmp    BYTE PTR ds:0xb55b344c,ch
  41adca:	stos   DWORD PTR es:[edi],eax
  41adcb:	add    BYTE PTR [edx+0x24a43e16],dl
  41add1:	inc    ebp
  41add2:	jge    0x41ae29
  41add4:	jge    0x41ad95
  41add6:	js     0x41ae13
  41add8:	outs   dx,BYTE PTR ds:[esi]
  41add9:	and    dh,ah
  41addb:	rcr    DWORD PTR [ecx],cl
  41addd:	imul   esp,ecx,0x4a
  41ade0:	cwde   
  41ade1:	and    DWORD PTR [ecx+0x19347afd],ecx
  41ade7:	jbe    0x41ad83
  41ade9:	rcl    DWORD PTR [esi+edi*4+0x3ab193e8],1
  41adf0:	ja     0x41ae55
  41adf2:	scas   al,BYTE PTR es:[edi]
  41adf3:	dec    ebp
  41adf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf5:	inc    edx
  41adf6:	cmp    bl,BYTE PTR [ebp+0x3e2ce6f6]
  41adfc:	in     eax,0x9d
  41adfe:	ins    BYTE PTR es:[edi],dx
  41adff:	test   eax,0x7dcb4814
  41ae04:	fld    DWORD PTR [edx-0x41]
  41ae07:	stc    
  41ae08:	mov    BYTE PTR [ecx+eax*2+0x79ab295c],ch
  41ae0f:	retf   
  41ae10:	ins    BYTE PTR es:[edi],dx
  41ae11:	jp     0x41adbf
  41ae13:	sbb    DWORD PTR [edx],ecx
  41ae15:	mov    bh,0xee
  41ae17:	loopne 0x41ae3d
  41ae19:	out    dx,eax
  41ae1a:	push   0xa7f99301
  41ae1f:	adc    edi,edi
  41ae21:	call   0x86984941
  41ae26:	xor    ecx,DWORD PTR [ecx]
  41ae28:	fs xchg ebx,eax
  41ae2a:	gs gs lock sbb eax,ebp
  41ae2f:	stos   DWORD PTR es:[edi],eax
  41ae30:	or     dl,BYTE PTR [eax+0x2b]
  41ae33:	shl    BYTE PTR [esi-0x21aca825],0x23
  41ae3a:	daa    
  41ae3b:	ror    BYTE PTR [esi-0x12],1
  41ae3e:	in     eax,dx
  41ae3f:	adc    al,0x2f
  41ae41:	pop    eax
  41ae42:	pop    es
  41ae43:	mov    bl,0x3a
  41ae45:	pop    esp
  41ae46:	nop
  41ae47:	xor    BYTE PTR [edi],0x3d
  41ae4a:	mov    bl,0xcb
  41ae4c:	ret    
  41ae4d:	cmp    eax,0x20b37b67
  41ae52:	push   cs
  41ae53:	mov    ecx,DWORD PTR [edi+0x68d55225]
  41ae59:	pop    es
  41ae5a:	out    dx,eax
  41ae5b:	cmp    bh,BYTE PTR [ecx-0x7f]
  41ae5e:	sbb    esi,ecx
  41ae60:	pop    eax
  41ae61:	xchg   esp,eax
  41ae62:	(bad)  
  41ae64:	adc    ecx,DWORD PTR [edi]
  41ae66:	retf   0x4abc
  41ae69:	ins    BYTE PTR es:[edi],dx
  41ae6a:	xchg   ebx,eax
  41ae6b:	not    BYTE PTR [edi+ebx*4+0x36]
  41ae6f:	adc    ch,BYTE PTR [ebx+0x1d]
  41ae72:	cmc    
  41ae73:	fnstcw WORD PTR [eax+ebp*8+0x4baf8c28]
  41ae7a:	xchg   ecx,eax
  41ae7b:	push   edi
  41ae7c:	xor    ah,BYTE PTR [edx]
  41ae7e:	fild   WORD PTR [ebx+0x23]
  41ae81:	cwde   
  41ae82:	(bad)  
  41ae83:	jmp    0xa98c3a74
  41ae88:	inc    eax
  41ae89:	inc    ecx
  41ae8a:	xchg   edi,eax
  41ae8b:	xor    ch,ch
  41ae8d:	dec    ebp
  41ae8e:	test   eax,0xe697fd84
  41ae93:	push   ss
  41ae94:	push   ss
  41ae95:	mov    WORD PTR [edx+0x1cce71],?
  41ae9b:	jo     0x41aefe
  41ae9d:	pop    ecx
  41ae9e:	rcr    DWORD PTR [esi*1-0x38bbbe8b],cl
  41aea5:	daa    
  41aea6:	lock lahf 
  41aea8:	sub    ebp,edi
  41aeaa:	push   ebp
  41aeab:	push   0xc084921a
  41aeb0:	mov    edx,DWORD PTR [ebp+0x8]
  41aeb3:	sub    DWORD PTR ds:0x42a292,edx
  41aeb9:	mov    ebx,DWORD PTR [ebp-0x58]
  41aebc:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  41aec6:	add    edx,0x5708fa
  41aecc:	imul   edx,ebx
  41aecf:	sbb    ebx,0x1e47
  41aed5:	mov    DWORD PTR [ebp-0x58],edx
  41aed8:	or     DWORD PTR ds:0x42a29e,0x157
  41aee2:	mov    edx,DWORD PTR [ebp+0x8]
  41aee5:	sub    ebx,DWORD PTR ds:0x42a2f2
  41aeeb:	mov    ebx,DWORD PTR [ebp-0x54]
  41aeee:	add    edx,0x64f898
  41aef4:	or     DWORD PTR ds:0x42a25a,0x5c58
  41aefe:	or     edx,ebx
  41af00:	mov    ebx,DWORD PTR ds:0x42a322
  41af06:	mov    ebx,DWORD PTR [ebx]
  41af08:	sbb    DWORD PTR ds:0x42a2ee,ebx
  41af0e:	mov    DWORD PTR [ebp-0x54],edx
  41af11:	movzx  edx,WORD PTR ds:0x42a2c2
  41af18:	sub    DWORD PTR ds:0x42a28e,edx
  41af1e:	mov    edx,DWORD PTR [ebp+0x8]
  41af21:	xor    ebx,DWORD PTR ds:0x42a28a
  41af27:	mov    ebx,DWORD PTR [ebp-0x50]
  41af2a:	adc    DWORD PTR ds:0x42a29a,0x42a2a6
  41af34:	add    edx,ecx
  41af36:	sbb    DWORD PTR ds:0x42a2f2,0x42a2de
  41af40:	xor    edx,ebx
  41af42:	or     DWORD PTR ds:0x42a2de,edx
  41af48:	mov    DWORD PTR [ebp-0x50],edx
  41af4b:	and    DWORD PTR ds:0x42a262,0x0
  41af55:	xor    edx,edx
  41af57:	xor    edx,DWORD PTR ds:0x42a262
  41af5d:	inc    edx
  41af5e:	mov    DWORD PTR ds:0x42a262,edx
  41af64:	cmp    DWORD PTR ds:0x42a262,0x5
  41af6b:	jbe    0x41afb0
  41af71:	jmp    0x41af87
  41af76:	push   0x1fcb
  41af7b:	push   DWORD PTR [ebp-0x28]
  41af7e:	push   DWORD PTR [ebp-0x24]
  41af81:	call   DWORD PTR ds:0x42a402
  41af87:	cmp    DWORD PTR ds:0x42a262,0x4
  41af8e:	jne    0x41afa3
  41af94:	xor    edx,edx
  41af96:	or     edx,DWORD PTR ds:0x42a262
  41af9c:	inc    edx
  41af9d:	mov    DWORD PTR ds:0x42a262,edx
  41afa3:	cmp    DWORD PTR ds:0x42a262,0x16
  41afaa:	jb     0x41af55
  41afb0:	mov    edx,DWORD PTR [ebp+0x8]
  41afb3:	and    DWORD PTR ds:0x42a2f2,0x0
  41afbd:	xor    ebx,ebx
  41afbf:	or     ebx,DWORD PTR ds:0x42a2f2
  41afc5:	inc    ebx
  41afc6:	mov    DWORD PTR ds:0x42a2f2,ebx
  41afcc:	cmp    DWORD PTR ds:0x42a2f2,0xb
  41afd3:	jl     0x41b024
  41afd9:	jmp    0x41affd
  41afde:	push   0x1
  41afe0:	push   DWORD PTR [ebp-0x10]
  41afe3:	push   0x5b88
  41afe8:	push   0x81d2
  41afed:	push   0x4421
  41aff2:	push   0x50f5
  41aff7:	call   DWORD PTR ds:0x42a3c2
  41affd:	cmp    DWORD PTR ds:0x42a2f2,0xa
  41b004:	jne    0x41b017
  41b00a:	mov    ebx,DWORD PTR ds:0x42a2f2
  41b010:	inc    ebx
  41b011:	mov    DWORD PTR ds:0x42a2f2,ebx
  41b017:	cmp    DWORD PTR ds:0x42a2f2,0x18
  41b01e:	jb     0x41afbd
  41b024:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b027:	adc    DWORD PTR ds:0x42a2f6,0x42a2e2
  41b031:	jmp    0x41d389
  41b036:	xchg   ebx,eax
  41b037:	jmp    0xab5b1b75
  41b03c:	add    DWORD PTR [ecx+0x1dcb2f48],0xf885d529
  41b046:	mov    bh,bh
  41b048:	jl     0x41afcd
  41b04a:	inc    esi
  41b04b:	pop    esi
  41b04c:	add    DWORD PTR [ebx-0x2d471384],0xffffffac
  41b053:	sub    ch,BYTE PTR [edx+edi*2+0x2a]
  41b057:	and    esp,eax
  41b059:	mov    ds:0x80967b69,eax
  41b05e:	repnz inc eax
  41b060:	dec    ebp
  41b061:	add    eax,0xa5eb29f2
  41b066:	(bad)  
  41b067:	sub    al,0xcb
  41b069:	cmc    
  41b06a:	cmp    BYTE PTR [edx],bh
  41b06c:	(bad)  
  41b06e:	lods   al,BYTE PTR ds:[esi]
  41b06f:	add    eax,0xc35b3072
  41b074:	inc    BYTE PTR ds:0x3387bd3d
  41b07a:	scas   al,BYTE PTR es:[edi]
  41b07b:	repz dec ecx
  41b07d:	pop    esp
  41b07e:	xor    eax,0xd5d8e122
  41b083:	scas   al,BYTE PTR es:[edi]
  41b084:	push   eax
  41b085:	pop    edx
  41b086:	outs   dx,BYTE PTR ds:[esi]
  41b087:	add    BYTE PTR [ecx-0x603a3274],ah
  41b08d:	pop    esp
  41b08e:	ja     0x41b0ab
  41b090:	xchg   ebx,eax
  41b091:	mov    al,ds:0xd06e21c0
  41b096:	aad    0xae
  41b098:	xor    eax,0xde527fb5
  41b09d:	pop    edx
  41b09e:	out    0xd1,al
  41b0a0:	mov    ds:0x377fa0ff,al
  41b0a5:	inc    edi
  41b0a6:	push   edi
  41b0a7:	mov    cl,0xdc
  41b0a9:	icebp  
  41b0aa:	fsubr  QWORD PTR [edi+edx*2]
  41b0ad:	push   edi
  41b0ae:	and    edi,DWORD PTR [eax+ebx*2+0x31419ed6]
  41b0b5:	imul   esp,edi,0xffffffb1
  41b0b8:	jl     0x41b0f8
  41b0ba:	mov    WORD PTR [eax],?
  41b0bc:	sub    cl,BYTE PTR [ebx]
  41b0be:	mov    ecx,0xa372048a
  41b0c3:	mov    eax,0xc36594d
  41b0c8:	mov    edi,0x312fc432
  41b0cd:	jnp    0x41b06d
  41b0cf:	test   eax,0x4b56cdfc
  41b0d5:	popa   
  41b0d6:	arpl   WORD PTR [eax-0x702bdc7e],bx
  41b0dc:	cs into 
  41b0de:	mov    edi,0x7985297b
  41b0e3:	dec    esp
  41b0e4:	int    0xce
  41b0e6:	outs   dx,DWORD PTR ds:[esi]
  41b0e7:	and    edi,DWORD PTR [ecx]
  41b0e9:	sub    al,0xe1
  41b0eb:	push   0x57
  41b0ed:	lock jg 0x41b079
  41b0f0:	icebp  
  41b0f1:	loop   0x41b0c6
  41b0f3:	jnp    0x41b0c9
  41b0f5:	test   BYTE PTR [eax+0x56],cl
  41b0f8:	jg     0x41b140
  41b0fa:	mov    ch,0x17
  41b0fc:	ins    BYTE PTR es:[edi],dx
  41b0fd:	xor    ebx,DWORD PTR [ebx]
  41b0ff:	add    dl,dl
  41b101:	scas   eax,DWORD PTR es:[edi]
  41b102:	ja     0x41b098
  41b104:	sbb    eax,0xff7424e
  41b109:	sbb    al,0x93
  41b10b:	xchg   esp,eax
  41b10c:	push   ebx
  41b10d:	xchg   BYTE PTR [edx+eax*1-0x6557dcdb],ah
  41b114:	mov    ds:0xe42e898,al
  41b119:	mov    BYTE PTR [ebx],dl
  41b11b:	pushf  
  41b11c:	mov    dl,0x38
  41b11e:	xchg   ebx,eax
  41b11f:	mov    ecx,0x6713b83f
  41b124:	inc    edx
  41b125:	sbb    DWORD PTR [edi+0x2a4e6748],ebx
  41b12b:	outs   dx,BYTE PTR ds:[esi]
  41b12c:	js     0x41b101
  41b12e:	jge    0x41b0d1
  41b130:	add    ebx,DWORD PTR [ebx-0x61]
  41b133:	aam    0xb0
  41b135:	imul   esi,DWORD PTR [eax-0x1],0x68
  41b139:	cmc    
  41b13a:	sub    esi,0x2ed7863b
  41b140:	jmp    0x41b0ff
  41b142:	push   ss
  41b143:	dec    esi
  41b144:	arpl   WORD PTR [esi+edx*8-0x5c],ax
  41b148:	(bad)  
  41b149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14a:	data16 fidivr WORD PTR [ebx+0x4]
  41b14e:	repnz (bad) 
  41b150:	jmp    0xe302983c
  41b155:	rol    BYTE PTR [esi+edi*2-0x76],1
  41b159:	repz and ebp,ebx
  41b15c:	inc    ecx
  41b15d:	mov    ds:0xc7738456,al
  41b162:	push   ss
  41b163:	mov    ebx,0x4eb2dc21
  41b168:	dec    esp
  41b169:	dec    ebx
  41b16a:	mov    ds:0xb8a28f6,al
  41b16f:	push   ss
  41b170:	nop
  41b171:	and    cl,0xa9
  41b174:	pop    edx
  41b175:	or     BYTE PTR [ebx+0x32],0xb
  41b179:	out    dx,eax
  41b17a:	xor    edi,esi
  41b17c:	inc    esp
  41b17d:	mov    ebx,0xd27d5940
  41b182:	or     ah,ah
  41b184:	nop
  41b185:	and    al,BYTE PTR ds:0xbe75aec
  41b18b:	(bad)  [esi-0x4]
  41b18e:	(bad)  
  41b18f:	cdq    
  41b190:	scas   al,BYTE PTR es:[edi]
  41b191:	icebp  
  41b192:	repz imul edi,DWORD PTR [ecx-0x702f278a],0xffffffeb
  41b19a:	fld    QWORD PTR [ecx]
  41b19c:	mov    bh,0xa0
  41b19e:	fldenv [edi-0x43]
  41b1a1:	mov    al,0xeb
  41b1a3:	adc    ah,BYTE PTR [eax]
  41b1a5:	cmp    dh,BYTE PTR [edi-0x31]
  41b1a8:	fs mov ch,0xe7
  41b1ab:	mov    esi,0x991dcf5
  41b1b0:	arpl   WORD PTR [eax+ecx*1+0x201f7e93],bx
  41b1b7:	and    edi,DWORD PTR [ebp-0x290ed289]
  41b1bd:	and    cl,bh
  41b1bf:	pop    eax
  41b1c0:	test   al,0x3f
  41b1c2:	dec    esp
  41b1c3:	sbb    BYTE PTR [esi-0x12],dh
  41b1c6:	mov    DWORD PTR [edi+0x5b7cf290],eax
  41b1cc:	jno    0x41b184
  41b1ce:	cli    
  41b1cf:	jecxz  0x41b240
  41b1d1:	call   0x5b70:0x68386cba
  41b1d8:	mov    WORD PTR [edx+0x11],es
  41b1db:	sub    esp,ebx
  41b1dd:	pushf  
  41b1de:	add    eax,0xf6489f13
  41b1e3:	test   al,0x6f
  41b1e5:	xchg   ecx,eax
  41b1e7:	jnp    0x41b189
  41b1e9:	ror    esp,cl
  41b1eb:	fst    QWORD PTR [esi]
  41b1ed:	shl    DWORD PTR [esp+esi*4],cl
  41b1f0:	mov    es,WORD PTR [edi+0x50]
  41b1f3:	jno    0x41b18b
  41b1f5:	mov    ebx,0xc37d2a1
  41b1fa:	fisub  DWORD PTR [esi]
  41b1fc:	mov    ecx,0x33d23bf7
  41b201:	les    eax,FWORD PTR [ecx+0x4cde20d4]
  41b207:	or     edx,esp
  41b209:	ret    0x705
  41b20c:	jno    0x41b280
  41b20e:	push   es
  41b20f:	cwde   
  41b210:	out    dx,eax
  41b211:	and    al,BYTE PTR [ebp-0x64460b2a]
  41b217:	ds pop es
  41b219:	lea    edi,[edx-0x26]
  41b21c:	ret    0xf8e8
  41b21f:	and    DWORD PTR ds:0x66a3b222,0x77
  41b226:	aas    
  41b227:	ror    DWORD PTR [ebx],cl
  41b229:	das    
  41b22a:	jne    0x41b1b6
  41b22c:	(bad)  
  41b22d:	cs jmp 0x911f:0x2f75864a
  41b235:	test   eax,0x781ae2de
  41b23a:	(bad)  
  41b23b:	out    dx,eax
  41b23c:	xchg   edi,eax
  41b23d:	call   0x3d7e:0xe2d07688
  41b244:	or     bl,bl
  41b246:	mov    DWORD PTR [esi-0x3c],edx
  41b249:	aas    
  41b24a:	mov    bl,bl
  41b24c:	(bad)
  41b251:	sub    dl,cl
  41b253:	loop   0x41b1e9
  41b255:	xchg   DWORD PTR [ebx+0x1b],edx
  41b258:	jecxz  0x41b217
  41b25a:	jmp    0x63fa0b30
  41b25f:	loop   0x41b29d
  41b261:	xor    DWORD PTR [ecx],0xffffffe8
  41b264:	and    al,0xfe
  41b266:	(bad)  
  41b267:	aam    0x73
  41b269:	out    0x5d,eax
  41b26b:	push   ss
  41b26c:	jns    0x41b24f
  41b26e:	mov    cs,WORD PTR [esi+ebx*4-0x44363df5]
  41b275:	jmp    0x9f2fa2cf
  41b27a:	lahf   
  41b27b:	(bad)  
  41b27c:	je     0x41b26f
  41b27e:	push   DWORD PTR [esi]
  41b280:	lods   al,BYTE PTR ds:[esi]
  41b281:	sub    al,0x87
  41b283:	mov    esi,edi
  41b285:	and    eax,DWORD PTR [edi+0x75ff34ce]
  41b28b:	out    dx,eax
  41b28c:	sub    bl,BYTE PTR [edi+0x6c]
  41b28f:	shl    ebp,cl
  41b291:	mov    bh,0xfe
  41b293:	rsm    
  41b295:	lds    ebx,FWORD PTR [edx+0x76]
  41b298:	ja     0x41b28a
  41b29a:	arpl   WORD PTR [esi-0x3322f3f8],si
  41b2a0:	push   ss
  41b2a1:	mov    al,ds:0xc1bb5f2c
  41b2a6:	imul   esp,DWORD PTR [ebx],0x94ebd45a
  41b2ac:	cdq    
  41b2ad:	mov    ebx,0x5bb19561
  41b2b2:	mov    ebx,DWORD PTR [esi]
  41b2b4:	push   ecx
  41b2b5:	call   0x3266:0x54fb7ca4
  41b2bc:	enter  0x3c66,0xe4
  41b2c0:	xor    edi,esi
  41b2c2:	xchg   esp,eax
  41b2c3:	lods   al,BYTE PTR ds:[esi]
  41b2c4:	push   ecx
  41b2c5:	lock jnp 0x41b295
  41b2c8:	inc    esi
  41b2c9:	adc    al,0xed
  41b2cb:	adc    al,ah
  41b2cd:	xor    al,0x76
  41b2cf:	ins    DWORD PTR es:[edi],dx
  41b2d0:	lahf   
  41b2d1:	ja     0x41b2a3
  41b2d3:	and    DWORD PTR [edi-0x42],0x32
  41b2d7:	fimul  WORD PTR ds:0x99db0304
  41b2dd:	adc    dh,al
  41b2df:	shr    BYTE PTR [ecx],1
  41b2e1:	mov    ebp,0x6127e3e
  41b2e6:	mov    esi,0xd3600649
  41b2eb:	cdq    
  41b2ec:	mov    ch,0x94
  41b2ee:	pop    ss
  41b2ef:	fcmovu st,st(7)
  41b2f1:	push   0x5ed2e5c5
  41b2f6:	inc    esi
  41b2f7:	sub    bl,BYTE PTR [esi]
  41b2f9:	js     0x41b30d
  41b2fb:	call   DWORD PTR [esi-0x7a]
  41b2fe:	push   edi
  41b2ff:	lds    ecx,FWORD PTR [ecx+0x65e277cb]
  41b305:	div    BYTE PTR [eax-0x62c22110]
  41b30b:	pop    ds
  41b30c:	jae    0x41b378
  41b30e:	push   es
  41b30f:	mov    ss,WORD PTR [edx+0x6db2908a]
  41b315:	je     0x41b2c7
  41b317:	push   cs
  41b318:	stos   DWORD PTR es:[edi],eax
  41b319:	push   ebp
  41b31a:	pop    edi
  41b31b:	and    DWORD PTR [esi-0x756eab83],esi
  41b321:	in     eax,dx
  41b322:	mov    BYTE PTR [edx-0x1c],dh
  41b325:	and    ah,dl
  41b327:	sar    DWORD PTR [edx],0x74
  41b32a:	and    ebp,DWORD PTR [edi+0x6e]
  41b32d:	sbb    al,BYTE PTR [edx+0x15]
  41b330:	fcomp  st(5)
  41b332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b333:	push   0xd5642591
  41b338:	push   0x53
  41b33a:	pop    edi
  41b33b:	and    cl,BYTE PTR [edi+0x7169cd04]
  41b341:	out    0xe5,al
  41b343:	aad    0x2f
  41b345:	inc    edi
  41b346:	loope  0x41b372
  41b348:	jmp    0x41b366
  41b34a:	ss push esp
  41b34c:	pop    ecx
  41b34d:	ret    
  41b34e:	shl    BYTE PTR [ebp-0x30],cl
  41b351:	popf   
  41b352:	in     eax,dx
  41b353:	sbb    DWORD PTR ds:0x62230d35,ebp
  41b359:	inc    ebp
  41b35a:	dec    esi
  41b35b:	mov    esp,0x42fc7525
  41b360:	xchg   esp,eax
  41b361:	pop    ss
  41b362:	pop    ebx
  41b363:	or     ch,0xfa
  41b366:	fistp  WORD PTR [ecx-0x29]
  41b369:	fnsave [edi+0x1209185]
  41b36f:	dec    ecx
  41b370:	cmp    edx,DWORD PTR [ebp+0x34]
  41b373:	xor    eax,0x67d9c8a3
  41b378:	mov    ?,WORD PTR [edi]
  41b37a:	mov    bh,0xdc
  41b37c:	in     eax,dx
  41b37d:	popa   
  41b37e:	lock mov WORD PTR [edi-0x6983fad9],fs
  41b385:	mov    es,WORD PTR [ecx-0x32a635b2]
  41b38b:	fldenv [esi-0x5e]
  41b38e:	outs   dx,BYTE PTR ds:[esi]
  41b38f:	and    al,0x39
  41b391:	add    DWORD PTR [eax-0x41],eax
  41b394:	sbb    al,0xc2
  41b396:	popf   
  41b397:	je     0x41b387
  41b399:	iret   
  41b39a:	dec    esp
  41b39b:	xor    BYTE PTR [ecx],0xa
  41b39e:	jmp    0x7a3c:0xdb0a4d42
  41b3a5:	lock outs dx,DWORD PTR ds:[esi]
  41b3a7:	xchg   esp,eax
  41b3a8:	mov    esi,0xfe6fb5ae
  41b3ad:	cmp    BYTE PTR [edx+0x2583acd4],ch
  41b3b3:	push   eax
  41b3b4:	push   edi
  41b3b5:	xor    DWORD PTR [ebp-0x58],0x743acbaf
  41b3bc:	into   
  41b3bd:	cli    
  41b3be:	or     eax,0xd6bd0d9d
  41b3c3:	fdivr  st,st(7)
  41b3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c6:	pop    edi
  41b3c7:	outs   dx,DWORD PTR ds:[esi]
  41b3c8:	and    al,0xfd
  41b3cb:	(bad)  
  41b3cc:	jnp    0x41b3ef
  41b3ce:	(bad)  
  41b3d0:	cs pop esi
  41b3d2:	jle    0x41b443
  41b3d4:	mov    es:0x9de67bfd,al
  41b3da:	hlt    
  41b3db:	and    ecx,DWORD PTR [edi+eax*8+0x39a3e3f6]
  41b3e2:	icebp  
  41b3e3:	xor    DWORD PTR ds:0xaaea2926,edi
  41b3e9:	mov    dl,0x77
  41b3eb:	addr16 aam 0xdf
  41b3ee:	dec    eax
  41b3ef:	jo     0x41b3b0
  41b3f1:	les    eax,FWORD PTR [ebx]
  41b3f3:	push   eax
  41b3f4:	dec    edi
  41b3f5:	inc    ebx
  41b3f6:	scas   al,BYTE PTR es:[edi]
  41b3f7:	cmp    cl,BYTE PTR [eax+esi*8]
  41b3fa:	cli    
  41b3fb:	outs   dx,BYTE PTR ds:[esi]
  41b3fc:	and    BYTE PTR [ecx],bh
  41b3fe:	pusha  
  41b3ff:	mov    eax,ds:0x76437529
  41b404:	mov    edi,0xe2d14523
  41b409:	arpl   WORD PTR [esi],sp
  41b40b:	xlat   BYTE PTR ds:[ebx]
  41b40c:	lods   al,BYTE PTR ds:[esi]
  41b40d:	loop   0x41b477
  41b40f:	jmp    0x3a89:0x597622a2
  41b416:	test   BYTE PTR [eax-0x2e9755a4],al
  41b41c:	in     al,0xef
  41b41e:	jecxz  0x41b414
  41b420:	dec    esi
  41b421:	stos   DWORD PTR es:[edi],eax
  41b422:	pop    esp
  41b423:	outs   dx,DWORD PTR ds:[esi]
  41b424:	out    dx,eax
  41b425:	out    0xb0,al
  41b427:	test   BYTE PTR [ebp-0x5e74ab0e],0x56
  41b42e:	repz inc eax
  41b430:	dec    esp
  41b431:	cmp    eax,ebx
  41b433:	xchg   ecx,eax
  41b434:	jns    0x41b3cf
  41b436:	or     eax,0x76ea0f18
  41b43b:	pop    ebx
  41b43c:	cmp    eax,0xeb45cd7d
  41b441:	or     ecx,DWORD PTR [esi+edx*8]
  41b444:	out    dx,eax
  41b445:	repnz not BYTE PTR [eax-0x7199026d]
  41b44c:	mov    cl,0xf3
  41b44e:	jnp    0x41b458
  41b450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b451:	push   ss
  41b452:	stc    
  41b453:	xor    BYTE PTR ds:0x1e0bd6b2,ch
  41b459:	cli    
  41b45a:	pop    ds
  41b45b:	inc    ebp
  41b45c:	dec    esp
  41b45d:	in     eax,0xa8
  41b45f:	pop    edx
  41b460:	icebp  
  41b461:	mov    al,ds:0x26a8da2e
  41b466:	scas   al,BYTE PTR es:[edi]
  41b467:	test   eax,0x2586ee4
  41b46c:	add    DWORD PTR [edx+ecx*4-0x2e99ea36],edi
  41b473:	and    al,0x52
  41b475:	cmp    al,0x29
  41b477:	jp     0x41b4a9
  41b479:	pop    edi
  41b47a:	inc    edi
  41b47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b47c:	and    DWORD PTR [eax+ebx*4],esi
  41b47f:	push   edx
  41b480:	lahf   
  41b481:	rol    eax,1
  41b483:	xor    ecx,DWORD PTR [ebp-0xb236545]
  41b489:	(bad)  
  41b48a:	jp     0x41b46e
  41b48c:	cmp    BYTE PTR [ebx+0x2a1678a8],bl
  41b492:	int    0x83
  41b494:	ss hlt 
  41b496:	push   ecx
  41b497:	xchg   edi,eax
  41b498:	add    ebx,ebp
  41b49a:	div    BYTE PTR [ebx-0x6b]
  41b49d:	aam    0x59
  41b49f:	mov    ch,0x22
  41b4a1:	or     cl,BYTE PTR [ecx+edi*2]
  41b4a4:	repz inc ebp
  41b4a6:	(bad)  
  41b4a7:	(bad)  
  41b4a8:	iret   
  41b4a9:	das    
  41b4aa:	cmp    eax,0xbe46f5a8
  41b4af:	mov    eax,ss
  41b4b1:	jbe    0x41b4eb
  41b4b3:	aad    0x5f
  41b4b5:	jmp    0xa016a387
  41b4ba:	gs int 0xb3
  41b4bd:	xor    esi,edx
  41b4bf:	sbb    eax,DWORD PTR [ebx+0x4c]
  41b4c2:	mov    al,ds:0xffb5ad89
  41b4c7:	cmc    
  41b4c8:	outs   dx,DWORD PTR ds:[esi]
  41b4c9:	mov    cl,0x40
  41b4cb:	fadd   DWORD PTR [ebx-0x5d9acdfa]
  41b4d1:	mov    esp,0xf5db6421
  41b4d6:	sbb    cl,BYTE PTR [ecx-0x5c]
  41b4d9:	push   ebx
  41b4da:	aaa    
  41b4db:	adc    al,0xd2
  41b4dd:	test   al,0x10
  41b4df:	pop    ebx
  41b4e0:	jns    0x41b478
  41b4e2:	sbb    eax,0x9a0f4a04
  41b4e7:	es xchg ebp,eax
  41b4e9:	push   0xffffffbf
  41b4eb:	inc    eax
  41b4ec:	jecxz  0x41b4f8
  41b4ee:	sub    DWORD PTR [edi-0xb],esp
  41b4f1:	cdq    
  41b4f2:	add    DWORD PTR [edi-0x21],esi
  41b4f5:	pop    ebp
  41b4f6:	mov    ecx,0x197b7d2a
  41b4fb:	aaa    
  41b4fc:	and    DWORD PTR [ebp-0x26989068],edx
  41b502:	iret   
  41b503:	cmp    cl,BYTE PTR [ecx-0x20f676ed]
  41b509:	in     al,0xaf
  41b50b:	mov    ds:0x1d7f8b48,al
  41b510:	fcom   st(2)
  41b512:	cmp    al,0x69
  41b514:	mov    ecx,0xe4bd2056
  41b519:	ins    DWORD PTR es:[edi],dx
  41b51a:	(bad)  
  41b51b:	rol    BYTE PTR [edi],cl
  41b51d:	ret    0xd08c
  41b520:	inc    edi
  41b521:	inc    edx
  41b522:	hlt    
  41b523:	mov    dh,0xe2
  41b525:	and    BYTE PTR [edi+0x148e611d],al
  41b52b:	add    ah,BYTE PTR [edi]
  41b52d:	dec    esi
  41b52e:	je     0x41b4c8
  41b530:	push   esp
  41b531:	shl    BYTE PTR [ebx-0x52936a88],1
  41b537:	push   ss
  41b538:	or     BYTE PTR [esi-0x54989857],0x1c
  41b53f:	pop    edi
  41b540:	std    
  41b541:	xor    BYTE PTR [esp+ebx*1-0x7db8b434],ch
  41b548:	adc    BYTE PTR [edx-0x52],cl
  41b54b:	out    0xbc,eax
  41b54d:	je     0x41b55c
  41b54f:	push   esp
  41b550:	add    edx,DWORD PTR [ebp-0x1b]
  41b553:	outs   dx,BYTE PTR ds:[esi]
  41b554:	int3   
  41b555:	mov    ds:0x14fe2991,al
  41b55a:	popa   
  41b55b:	jno    0x41b4ee
  41b55d:	cmp    bl,ch
  41b55f:	mov    bl,0x97
  41b561:	mov    cl,0x30
  41b563:	arpl   WORD PTR [ebp-0x3e],si
  41b566:	adc    eax,0xed7e4034
  41b56b:	and    BYTE PTR ds:0x2eb263ba,cl
  41b571:	pop    ds
  41b572:	popa   
  41b573:	jns    0x41b582
  41b575:	pop    es
  41b576:	mov    bh,0xe3
  41b578:	pop    ds
  41b579:	gs adc eax,edi
  41b57c:	inc    esi
  41b57d:	jmp    0x27cd:0xbad18f1b
  41b584:	shr    bl,0x93
  41b587:	cli    
  41b588:	inc    ecx
  41b589:	dec    ecx
  41b58a:	out    0x8c,al
  41b58c:	aam    0x62
  41b58e:	mov    dl,0x4e
  41b590:	ret    0x27a
  41b593:	rol    DWORD PTR [eax-0x7e],cl
  41b596:	dec    ebx
  41b597:	dec    esi
  41b598:	outs   dx,BYTE PTR ds:[esi]
  41b599:	push   eax
  41b59a:	jb     0x41b59c
  41b59c:	fs mov dl,0x1c
  41b59f:	ins    BYTE PTR es:[edi],dx
  41b5a0:	inc    dl
  41b5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5a3:	ins    BYTE PTR es:[edi],dx
  41b5a4:	add    edi,DWORD PTR [ebp+0x52]
  41b5a7:	out    0x7a,al
  41b5a9:	out    dx,al
  41b5aa:	arpl   WORD PTR [ebp+edx*1-0x1c1748e6],bx
  41b5b1:	dec    ebx
  41b5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b3:	mov    ebx,0xbf6285b9
  41b5b8:	shl    BYTE PTR ds:0xbda26d84,1
  41b5be:	inc    eax
  41b5bf:	cli    
  41b5c0:	out    0x7d,al
  41b5c2:	jns    0x41b60c
  41b5c4:	cmp    DWORD PTR [ebx-0x41a89e77],ebp
  41b5ca:	test   edx,eax
  41b5cc:	mov    dh,0xcd
  41b5ce:	loope  0x41b561
  41b5d0:	int    0x5
  41b5d2:	jp     0x41b568
  41b5d4:	adc    DWORD PTR [ecx],0xffffffa9
  41b5d7:	call   0x10e791ac
  41b5dc:	fcomp  st(3)
  41b5de:	or     al,0xcc
  41b5e0:	rol    BYTE PTR [edi+0x3ec43666],cl
  41b5e6:	addr16 out dx,eax
  41b5e8:	mov    al,ds:0x7e71d63
  41b5ed:	mov    esi,0xbe91106d
  41b5f2:	dec    edx
  41b5f3:	or     ah,BYTE PTR [edx+0x357fefab]
  41b5f9:	dec    ecx
  41b5fa:	pop    ds
  41b5fb:	add    ebp,DWORD PTR [eax]
  41b5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5fe:	lahf   
  41b5ff:	dec    ebx
  41b600:	cld    
  41b601:	push   es
  41b602:	cmp    dl,BYTE PTR [ebx-0x5ec104b5]
  41b608:	sub    eax,0x20f019cd
  41b60d:	mov    edx,DWORD PTR [ecx+esi*8]
  41b610:	dec    ebp
  41b611:	inc    esp
  41b612:	sbb    DWORD PTR [ecx-0x9],esp
  41b615:	test   BYTE PTR [eax],al
  41b617:	retf   0xf301
  41b61a:	adc    DWORD PTR [edx-0x5457a07c],esi
  41b620:	mov    bh,0x96
  41b622:	mov    edx,0x9408868f
  41b627:	pop    esp
  41b628:	adc    BYTE PTR [ebp+0x1e9c3006],cl
  41b62e:	push   ss
  41b62f:	and    cl,BYTE PTR [edx+0x22bee616]
  41b635:	xchg   BYTE PTR [esi-0x7a],dh
  41b638:	adc    eax,0x4d6dc124
  41b63d:	mov    ch,0xc0
  41b63f:	mov    edx,0xcb3db613
  41b644:	sar    DWORD PTR [ebx+0x4135eddb],cl
  41b64a:	mul    DWORD PTR [ebp-0x3c6726ef]
  41b650:	xchg   edi,eax
  41b651:	(bad)  
  41b652:	jmp    0x821c:0xdd2300a3
  41b659:	fld    DWORD PTR [edi-0x1abb64be]
  41b65f:	dec    eax
  41b660:	sbb    DWORD PTR [ecx],0xbd6d111e
  41b666:	mov    bh,0x54
  41b668:	sbb    eax,0x5c2c1639
  41b66d:	imul   eax,DWORD PTR [edx-0x53],0x78
  41b671:	mov    bh,0x52
  41b673:	sbb    eax,0x930616c6
  41b678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b679:	fsubr  DWORD PTR ds:0x408805ed
  41b67f:	sub    BYTE PTR [ecx+0xf36764f],bh
  41b685:	ffreep st(4)
  41b687:	outs   dx,DWORD PTR ds:[esi]
  41b688:	add    al,0x4b
  41b68a:	inc    esp
  41b68b:	sbb    al,0x36
  41b68d:	or     dh,BYTE PTR [ebx+0x19a75955]
  41b693:	sub    cl,0x72
  41b696:	adc    DWORD PTR [bx+di],0xffffffa6
  41b69a:	shr    BYTE PTR [ebx+0x42],cl
  41b69d:	push   eax
  41b69e:	rcr    esi,1
  41b6a0:	or     eax,0x4b4a710a
  41b6a5:	js     0x41b64a
  41b6a7:	sbb    ch,dh
  41b6a9:	pop    es
  41b6aa:	sub    al,0x58
  41b6ac:	push   ds
  41b6ad:	xor    al,0xfa
  41b6af:	idiv   edx
  41b6b1:	sub    al,0xef
  41b6b3:	ret    0x6f2
  41b6b6:	stos   BYTE PTR es:[edi],al
  41b6b7:	int    0x81
  41b6b9:	and    al,0x1b
  41b6bb:	rcr    esp,1
  41b6bd:	mov    dh,0x3f
  41b6bf:	fidivr DWORD PTR [edx]
  41b6c1:	push   edi
  41b6c2:	bound  edx,QWORD PTR [ebx+0xcf53690]
  41b6c8:	test   eax,0x657be35
  41b6cd:	push   ebp
  41b6ce:	icebp  
  41b6cf:	sbb    BYTE PTR [ecx],cl
  41b6d1:	cwde   
  41b6d2:	or     BYTE PTR [esi],ah
  41b6d4:	or     ah,ch
  41b6d6:	out    0x5,al
  41b6d8:	rcl    BYTE PTR [edx+0x560d7861],cl
  41b6de:	add    BYTE PTR [ebx+0x33],ch
  41b6e1:	push   ecx
  41b6e2:	cmp    ebx,esi
  41b6e4:	out    dx,al
  41b6e5:	dec    ebp
  41b6e6:	pop    ss
  41b6e7:	jp     0x41b752
  41b6e9:	xor    al,0x8d
  41b6eb:	xchg   ebp,eax
  41b6ec:	push   ebx
  41b6ed:	inc    ebx
  41b6ee:	hlt    
  41b6ef:	fsub   DWORD PTR [esi-0x41]
  41b6f2:	imul   ecx,DWORD PTR [ebx],0xe8d40959
  41b6f8:	push   eax
  41b6f9:	xor    cl,bh
  41b6fb:	xchg   esp,eax
  41b6fc:	mov    ebx,0xda187fbe
  41b701:	adc    eax,0xa84c51f3
  41b706:	out    dx,eax
  41b707:	cwde   
  41b708:	mov    edi,0x40aa997e
  41b70d:	pop    es
  41b70e:	pop    edx
  41b70f:	mov    ah,0xf9
  41b711:	xchg   esp,eax
  41b712:	push   esi
  41b713:	test   al,0xed
  41b715:	sbb    DWORD PTR [edi-0x1f1903ca],0x7e
  41b71c:	mov    gs,ebx
  41b71e:	push   ds
  41b71f:	sub    DWORD PTR [edi+0x56],ebp
  41b722:	and    eax,0x95e5fac3
  41b727:	adc    esp,DWORD PTR [eax+0x1075cb7]
  41b72d:	push   edi
  41b72e:	addr16 inc ebx
  41b730:	das    
  41b731:	add    BYTE PTR [esi],ch
  41b733:	das    
  41b734:	jo     0x41b748
  41b736:	rol    BYTE PTR [ebx],cl
  41b738:	adc    DWORD PTR [ecx],eax
  41b73a:	(bad)  
  41b73b:	(bad)
  41b740:	adc    al,0xc
  41b742:	sahf   
  41b743:	lods   eax,DWORD PTR ds:[esi]
  41b744:	cs inc ebp
  41b746:	sbb    edx,DWORD PTR ss:[ecx+0x3841a3d7]
  41b74d:	es inc cx
  41b750:	mov    dh,0xc3
  41b752:	fwait
  41b753:	push   ebx
  41b754:	imul   eax,DWORD PTR [edx-0xb],0xffffffc1
  41b758:	(bad)  
  41b759:	push   cs
  41b75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b75b:	hlt    
  41b75c:	ret    0x9a9
  41b75f:	jp     0x41b76d
  41b761:	mov    dh,0xee
  41b763:	jb     0x41b73e
  41b765:	scas   eax,DWORD PTR es:[edi]
  41b766:	nop
  41b767:	push   eax
  41b768:	enter  0x5037,0xd2
  41b76c:	in     al,dx
  41b76d:	outs   dx,BYTE PTR ds:[esi]
  41b76e:	daa    
  41b76f:	rol    DWORD PTR [ecx+0x4],0xa2
  41b773:	rol    DWORD PTR [edi+0x4d],1
  41b776:	mov    DWORD PTR [edx+esi*1+0x17],eax
  41b77a:	hlt    
  41b77b:	sahf   
  41b77c:	xchg   ebp,eax
  41b77d:	xchg   BYTE PTR [edx+0x26e9effe],ah
  41b783:	inc    ebx
  41b784:	push   esi
  41b785:	mov    cl,0xd0
  41b787:	or     dh,BYTE PTR [ecx-0x68]
  41b78a:	sbb    ah,0xac
  41b78d:	daa    
  41b78e:	mov    ebp,0x8003716d
  41b793:	xlat   BYTE PTR ds:[bx]
  41b795:	mov    ebx,0x32637089
  41b79a:	sbb    al,0x2
  41b79c:	xchg   BYTE PTR [eax-0x6739c8c9],ch
  41b7a2:	rcr    DWORD PTR [ebx+0x20],cl
  41b7a5:	jae    0x41b788
  41b7a7:	pop    esi
  41b7a8:	jbe    0x41b80b
  41b7aa:	fstp   TBYTE PTR [ecx]
  41b7ac:	out    0xc0,al
  41b7ae:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7b0:	outs   dx,DWORD PTR ds:[esi]
  41b7b1:	(bad)  
  41b7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7b3:	fcom   DWORD PTR [ebx-0x28]
  41b7b6:	and    bl,dl
  41b7b8:	imul   ebp,DWORD PTR ds:0x144a6317,0x79
  41b7bf:	rol    DWORD PTR [ebx],cl
  41b7c1:	iret   
  41b7c2:	sbb    ebp,ecx
  41b7c4:	leave  
  41b7c5:	jl     0x41b776
  41b7c7:	loop   0x41b81c
  41b7c9:	sbb    ecx,eax
  41b7cb:	ins    BYTE PTR es:[edi],dx
  41b7cc:	dec    eax
  41b7cd:	or     BYTE PTR [eax+0x1a],bh
  41b7d0:	mov    esp,0x2a1948d0
  41b7d5:	add    DWORD PTR [esi+edi*8],edi
  41b7d8:	or     BYTE PTR [ecx],bl
  41b7da:	dec    ebx
  41b7db:	mov    ebp,0x5510a0d5
  41b7e0:	sub    al,0xe0
  41b7e2:	or     BYTE PTR [ecx+0x26e9c8d0],ah
  41b7e8:	xchg   ebx,eax
  41b7e9:	leave  
  41b7ea:	dec    esp
  41b7eb:	stos   BYTE PTR es:[edi],al
  41b7ec:	sub    edi,DWORD PTR [ecx-0xac88ed9]
  41b7f2:	push   ss
  41b7f3:	test   DWORD PTR [ecx],edi
  41b7f5:	fdiv   DWORD PTR [edi-0x42aee158]
  41b7fb:	add    ebx,DWORD PTR [esi-0x63]
  41b7fe:	cdq    
  41b7ff:	pop    ss
  41b800:	xchg   edi,eax
  41b801:	jno    0x41b7db
  41b803:	outs   dx,BYTE PTR ds:[esi]
  41b804:	xor    bh,BYTE PTR [edx+0x67ebff83]
  41b80a:	push   ebx
  41b80b:	loop   0x41b7fc
  41b80d:	daa    
  41b80e:	inc    ebp
  41b80f:	popf   
  41b810:	jb     0x41b88a
  41b812:	sub    DWORD PTR [ecx],ecx
  41b814:	push   ebp
  41b815:	dec    edi
  41b816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b817:	ja     0x41b7b9
  41b819:	(bad)  
  41b81b:	daa    
  41b81c:	retf   
  41b81d:	ds and al,0x5
  41b820:	cs loop 0x41b7e6
  41b823:	mov    DWORD PTR [ebp+0x23],ebp
  41b826:	push   ebx
  41b827:	mov    ebp,0xa6cf7da0
  41b82c:	mov    bl,0xfa
  41b82e:	in     al,dx
  41b82f:	je     0x41b7df
  41b831:	xchg   ebp,eax
  41b832:	hlt    
  41b833:	js     0x41b80c
  41b835:	mov    al,0x7d
  41b837:	jecxz  0x41b7c7
  41b839:	mov    bh,0xe2
  41b83b:	push   es
  41b83c:	in     eax,0x81
  41b83e:	jmp    0x4ab1:0x2968938d
  41b845:	sub    BYTE PTR [ecx-0x21],bl
  41b848:	ins    BYTE PTR es:[edi],dx
  41b849:	int3   
  41b84a:	xor    BYTE PTR gs:[edx-0x7c],al
  41b84e:	and    BYTE PTR [ecx+0x32c7eb02],ch
  41b854:	(bad)  
  41b856:	sub    BYTE PTR ds:0x1e844bf3,0x95
  41b85d:	(bad)  
  41b85e:	mov    eax,ds:0xcb2fe67f
  41b863:	sbb    BYTE PTR [edx+0x25],dl
  41b866:	sbb    BYTE PTR [esi-0x48],bh
  41b869:	scas   eax,DWORD PTR es:[edi]
  41b86a:	lock aad 0xe0
  41b86d:	xor    ebp,eax
  41b86f:	imul   ebx,DWORD PTR [edi-0x39],0x1
  41b873:	aas    
  41b874:	and    eax,0x625d385c
  41b879:	lods   al,BYTE PTR ds:[esi]
  41b87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87b:	dec    eax
  41b87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b87d:	inc    ebx
  41b87e:	out    0xfc,eax
  41b880:	add    esi,eax
  41b882:	or     BYTE PTR [esi],bl
  41b884:	mov    al,0x30
  41b886:	mov    fs,WORD PTR [ebx-0x15]
  41b889:	mov    ecx,0x595a65d5
  41b88e:	sub    ebx,ebx
  41b890:	loope  0x41b885
  41b892:	push   eax
  41b893:	add    dh,cl
  41b895:	jne    0x41b836
  41b897:	popa   
  41b898:	push   esi
  41b899:	jge    0x41b8fc
  41b89b:	xchg   ebp,eax
  41b89c:	ret    
  41b89d:	push   ds
  41b89e:	and    ebp,edi
  41b8a0:	cs pop esp
  41b8a2:	sub    DWORD PTR [ecx-0x1fff396b],0x44f6e6a5
  41b8ac:	aas    
  41b8ad:	mov    ch,0x65
  41b8af:	ins    DWORD PTR es:[edi],dx
  41b8b0:	sti    
  41b8b1:	jecxz  0x41b8cb
  41b8b3:	iret   
  41b8b4:	ds in  eax,0xb5
  41b8b7:	iret   
  41b8b8:	mov    edx,0x38da0f0d
  41b8bd:	jo     0x41b84a
  41b8bf:	mov    ch,0x44
  41b8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c2:	jmp    0x41b89b
  41b8c4:	cmp    ch,BYTE PTR [esi+0x69]
  41b8c7:	push   ebx
  41b8c8:	mov    ecx,DWORD PTR [ecx-0x12b469b4]
  41b8ce:	adc    bl,bl
  41b8d0:	in     eax,0x22
  41b8d2:	mov    edi,DWORD PTR [edx-0x23a71172]
  41b8d8:	jmp    0x41b8fa
  41b8da:	ja     0x41b8f8
  41b8dc:	daa    
  41b8dd:	js     0x41b894
  41b8df:	xor    ecx,DWORD PTR [ecx]
  41b8e1:	fisub  DWORD PTR [ecx-0x72]
  41b8e4:	ins    DWORD PTR es:[edi],dx
  41b8e5:	or     DWORD PTR [ebx+0x6857ffcb],0x781eb853
  41b8ef:	jle    0x41b920
  41b8f1:	mov    ch,0xa9
  41b8f3:	sub    eax,eax
  41b8f5:	push   esp
  41b8f6:	sbb    dl,cl
  41b8f8:	lahf   
  41b8f9:	idiv   BYTE PTR [edi]
  41b8fb:	push   eax
  41b8fc:	push   esi
  41b8fd:	jno    0x41b881
  41b8ff:	adc    al,0x6e
  41b901:	dec    esp
  41b902:	jb     0x41b88d
  41b904:	mov    ch,0x49
  41b906:	(bad)  
  41b907:	pop    esi
  41b908:	out    0xfa,al
  41b90a:	dec    ebx
  41b90b:	test   edi,ebp
  41b90d:	push   ss
  41b90e:	cld    
  41b90f:	hlt    
  41b910:	aad    0x5e
  41b912:	fst    DWORD PTR [esi+0x2ecbdc2a]
  41b918:	ja     0x41b923
  41b91a:	repnz xor esi,DWORD PTR [eax-0x9ee3768]
  41b921:	aam    0x12
  41b923:	or     ch,dh
  41b925:	(bad)  
  41b926:	bound  esi,QWORD PTR [esi+0x3807b3b0]
  41b92c:	inc    BYTE PTR [eax]
  41b92e:	icebp  
  41b92f:	fwait
  41b930:	mov    ah,0x5e
  41b932:	dec    ebp
  41b933:	int    0xf2
  41b935:	arpl   WORD PTR [edi+eiz*8+0x4d6c13e],dx
  41b93c:	shr    eax,cl
  41b93e:	cs pop ebx
  41b940:	ror    BYTE PTR [eax+0x1a],0x33
  41b944:	aam    0xd2
  41b946:	in     al,dx
  41b947:	sbb    edi,edi
  41b949:	adc    eax,0x5cb9fdbc
  41b94e:	sbb    dh,bl
  41b950:	push   0x12
  41b952:	(bad)  
  41b954:	out    dx,eax
  41b955:	mov    dl,0xa7
  41b957:	in     eax,0x48
  41b959:	ficom  WORD PTR ds:0xf6244092
  41b95f:	mov    ds:0x43721f85,eax
  41b964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b965:	icebp  
  41b966:	push   0xffffffa4
  41b968:	xchg   ecx,eax
  41b969:	and    al,0xec
  41b96b:	rcr    DWORD PTR [ebp+0x4d],1
  41b96e:	adc    DWORD PTR [ebx-0x65],edx
  41b971:	aaa    
  41b972:	add    BYTE PTR ds:[edi],bl
  41b975:	xchg   esp,eax
  41b976:	fidiv  DWORD PTR [ecx-0x7f]
  41b979:	scas   eax,DWORD PTR es:[edi]
  41b97a:	jae    0x41b958
  41b97c:	shl    BYTE PTR [edx],1
  41b97e:	call   0x52cf1113
  41b983:	or     eax,0x47bdc073
  41b988:	fild   QWORD PTR [edx-0x73]
  41b98b:	jb     0x41b90d
  41b98d:	js     0x41b9c0
  41b98f:	sbb    ecx,DWORD PTR [esi+0x70]
  41b992:	int    0x78
  41b994:	adc    bh,BYTE PTR [eax-0x2737b7f2]
  41b99a:	lods   eax,DWORD PTR ds:[esi]
  41b99b:	and    DWORD PTR [edi-0x7a],eax
  41b99e:	pop    ss
  41b99f:	adc    edx,DWORD PTR [esi-0x39513e67]
  41b9a5:	adc    bl,al
  41b9a7:	jecxz  0x41b9fa
  41b9a9:	cmp    al,0xa
  41b9ab:	and    eax,0x487b6bbd
  41b9b0:	push   cs
  41b9b1:	jmp    0x49a6041d
  41b9b6:	mov    fs:0x49cbf87d,eax
  41b9bc:	cmp    al,0x9
  41b9be:	mov    bh,dh
  41b9c0:	les    edx,FWORD PTR [ebx]
  41b9c2:	mov    ds:0xcf06a657,eax
  41b9c7:	je     0x41ba1c
  41b9c9:	shl    DWORD PTR [esi+0x2706f02c],0x45
  41b9d0:	cs jmp 0x41b9fa
  41b9d3:	cmc    
  41b9d4:	out    0x5a,eax
  41b9d6:	lds    ebp,FWORD PTR [ebx+0x58cb9487]
  41b9dc:	ins    BYTE PTR es:[edi],dx
  41b9dd:	jbe    0x41ba4f
  41b9df:	ffree  st(3)
  41b9e1:	or     eax,0xd0e1dc8d
  41b9e6:	clc    
  41b9e7:	sbb    DWORD PTR [ebx],ecx
  41b9e9:	sub    eax,0x61c81510
  41b9ee:	dec    edi
  41b9ef:	pop    edi
  41b9f0:	mov    esp,0xe9951164
  41b9f5:	mov    ch,0x57
  41b9f7:	fwait
  41b9f8:	jmp    edx
  41b9fa:	push   es
  41b9fb:	test   bl,bh
  41b9fd:	push   eax
  41b9fe:	fimul  DWORD PTR [esi-0x11a59fcf]
  41ba04:	xorps  xmm0,XMMWORD PTR [esi]
  41ba07:	mov    al,es:0xd0aaa9bd
  41ba0d:	xor    dl,0x43
  41ba10:	adc    ah,BYTE PTR [ebx+eiz*8+0x4fa52c91]
  41ba17:	pop    eax
  41ba18:	and    DWORD PTR [esi-0x36],ecx
  41ba1b:	sbb    dl,cl
  41ba1d:	(bad)  
  41ba1e:	xchg   ecx,eax
  41ba1f:	mov    ecx,0xc77a5691
  41ba24:	out    0x7e,al
  41ba26:	sbb    al,0xcd
  41ba28:	or     cl,BYTE PTR [ebx-0x492c2474]
  41ba2e:	cmp    dh,BYTE PTR [ebp+0x37ecb552]
  41ba34:	(bad)  
  41ba35:	in     al,dx
  41ba36:	dec    esp
  41ba37:	sub    esp,ebx
  41ba39:	pop    ebp
  41ba3a:	pop    esi
  41ba3b:	(bad)
  41ba40:	call   0xabc444e1
  41ba45:	loopne 0x41b9d2
  41ba47:	inc    eax
  41ba48:	je     0x41ba8a
  41ba4a:	sar    BYTE PTR [edx+0x5f8a1cd1],1
  41ba50:	in     al,dx
  41ba51:	aaa    
  41ba52:	cmp    al,0x44
  41ba54:	and    ah,bl
  41ba56:	js     0x41ba56
  41ba58:	xor    BYTE PTR ds:0xb119b0c5,ch
  41ba5e:	sbb    eax,0xd71605e5
  41ba63:	mov    cl,bl
  41ba65:	dec    ebx
  41ba66:	fmul   QWORD PTR [edx]
  41ba68:	shl    edi,0xc7
  41ba6b:	ret    
  41ba6c:	fdiv   DWORD PTR [ebp+0x10231702]
  41ba72:	inc    ecx
  41ba73:	out    0x87,eax
  41ba75:	mov    DWORD PTR [eax-0x69],ebx
  41ba78:	enter  0x7390,0xa1
  41ba7c:	jmp    0xfdf:0xde50efe0
  41ba83:	xchg   edi,eax
  41ba84:	pop    edx
  41ba85:	popa   
  41ba86:	push   ss
  41ba87:	inc    ebp
  41ba88:	xchg   ebx,eax
  41ba89:	out    0x8b,al
  41ba8b:	int3   
  41ba8c:	push   ecx
  41ba8d:	and    esp,ebx
  41ba8f:	push   eax
  41ba90:	mov    dh,0xaa
  41ba92:	cmp    ah,0xe5
  41ba95:	nop
  41ba96:	pusha  
  41ba97:	test   DWORD PTR [ecx-0x74cc9e3a],0xfbca031a
  41baa1:	int    0x0
  41baa3:	adc    bh,ah
  41baa5:	add    DWORD PTR [edi-0x6f],ecx
  41baa8:	inc    edx
  41baa9:	ins    BYTE PTR es:[edi],dx
  41baaa:	or     BYTE PTR [ebp-0x57],ah
  41baad:	fxch   st(3)
  41baaf:	out    dx,al
  41bab0:	hlt    
  41bab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab2:	mov    BYTE PTR [ecx],cl
  41bab4:	gs ins DWORD PTR es:[edi],dx
  41bab6:	test   al,0xcb
  41bab8:	(bad)  
  41baba:	add    eax,DWORD PTR [eax+0x7d]
  41babd:	sub    ah,BYTE PTR [esi+0x30]
  41bac0:	ror    edx,0xb3
  41bac3:	jae    0x41bad4
  41bac5:	sub    al,0x88
  41bac7:	sbb    eax,0xf29f4c45
  41bacc:	ins    BYTE PTR es:[edi],dx
  41bacd:	(bad)  
  41bace:	jns    0x41bae2
  41bad0:	scas   al,BYTE PTR es:[edi]
  41bad1:	cmp    eax,0xcc6e4249
  41bad6:	and    al,0xe6
  41bad8:	or     cl,BYTE PTR [edi+0xb]
  41badb:	and    esi,ebx
  41badd:	shr    BYTE PTR [esi],cl
  41badf:	sub    eax,0x29498884
  41bae4:	punpckhdq mm3,mm5
  41bae7:	div    bl
  41bae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baea:	les    ecx,FWORD PTR [ebx+0x73]
  41baed:	rep lods al,BYTE PTR ds:[esi]
  41baef:	pop    es
  41baf0:	mov    edx,esi
  41baf2:	cmp    ebx,DWORD PTR [eax+0x1ac223c5]
  41baf8:	mov    ds:0x2dd7dc49,eax
  41bafd:	mov    edx,gs
  41baff:	bound  esp,QWORD PTR [ecx+0x7dcc1969]
  41bb05:	enter  0xc419,0xf0
  41bb09:	fs aam 0x9e
  41bb0c:	xchg   esi,eax
  41bb0d:	xchg   esp,eax
  41bb0e:	rcr    BYTE PTR [edx],cl
  41bb10:	dec    DWORD PTR [eax-0x6983a77b]
  41bb16:	daa    
  41bb17:	(bad)  
  41bb18:	pop    edx
  41bb19:	ss icebp 
  41bb1b:	xchg   edi,eax
  41bb1c:	or     ch,BYTE PTR [eax+0x31]
  41bb1f:	mov    ebx,0x4f4e34ab
  41bb24:	push   ebp
  41bb25:	jmp    FWORD PTR [ebx+0x39]
  41bb28:	fucomi st,st(2)
  41bb2a:	cmp    eax,0x333c5cb0
  41bb2f:	fimul  WORD PTR [esi]
  41bb31:	test   al,0xe4
  41bb33:	mov    dl,0x96
  41bb35:	nop
  41bb36:	imul   esp,DWORD PTR [ebx],0xaeddd813
  41bb3c:	int3   
  41bb3d:	add    al,0xa5
  41bb3f:	cmp    DWORD PTR [ebp+0x2f7c51d8],ebx
  41bb45:	cmp    BYTE PTR [ebx],0x43
  41bb48:	mov    ss,WORD PTR [edx-0x55]
  41bb4b:	out    dx,al
  41bb4c:	daa    
  41bb4d:	and    eax,0x82946640
  41bb52:	mov    edi,0x48fb4316
  41bb57:	lock bound ebp,QWORD PTR [ebx-0x7c29f965]
  41bb5e:	add    eax,0x7d67374
  41bb63:	idiv   DWORD PTR [esi+0x38]
  41bb66:	fldcw  WORD PTR [ebx+ebp*8+0x1bf884a8]
  41bb6d:	daa    
  41bb6e:	pop    ecx
  41bb6f:	lods   eax,DWORD PTR ds:[esi]
  41bb70:	push   ss
  41bb71:	outs   dx,DWORD PTR ds:[esi]
  41bb72:	or     DWORD PTR [ebp-0x26],esi
  41bb75:	mov    eax,ds:0x4064f6c9
  41bb7a:	push   0xeaed96af
  41bb7f:	sti    
  41bb80:	enter  0xbed5,0x7
  41bb84:	pop    eax
  41bb85:	pushf  
  41bb86:	ins    DWORD PTR es:[edi],dx
  41bb87:	nop
  41bb88:	xor    esp,DWORD PTR ds:0x359a061a
  41bb8e:	(bad)  
  41bb8f:	adc    ah,BYTE PTR [ecx]
  41bb91:	xor    dl,BYTE PTR [ecx+ecx*2-0x4603933e]
  41bb98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb99:	mov    esi,0x19c2624b
  41bb9e:	ds aas 
  41bba0:	and    cl,dh
  41bba2:	pop    ebx
  41bba3:	adc    dl,bl
  41bba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bba6:	gs dec ebp
  41bba8:	xor    BYTE PTR [edi+0x74],al
  41bbab:	adc    ebx,edx
  41bbad:	inc    edx
  41bbae:	fcomp  QWORD PTR [ebx+0x74a5eeb6]
  41bbb4:	dec    edi
  41bbb5:	dec    ebp
  41bbb6:	shl    edi,cl
  41bbb8:	jns    0x41bb3a
  41bbba:	jle    0x41bbc8
  41bbbc:	and    dh,BYTE PTR [edi+0x33881066]
  41bbc2:	dec    edx
  41bbc3:	add    al,cl
  41bbc5:	pop    esp
  41bbc6:	ja     0x41bc17
  41bbc8:	leave  
  41bbc9:	push   eax
  41bbca:	xchg   ecx,eax
  41bbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbcc:	cmp    bl,BYTE PTR [edi-0x48]
  41bbcf:	je     0x41bc4d
  41bbd1:	nop
  41bbd2:	sub    al,0x7d
  41bbd4:	sub    DWORD PTR [esi],edx
  41bbd6:	(bad)  
  41bbd7:	fs pusha 
  41bbd9:	cld    
  41bbda:	sahf   
  41bbdb:	cli    
  41bbdc:	add    DWORD PTR [ebx],ecx
  41bbde:	mov    ch,0x46
  41bbe0:	push   esi
  41bbe1:	(bad)  
  41bbe2:	jne    0x41bb76
  41bbe4:	push   esi
  41bbe5:	sub    cl,BYTE PTR [eax-0x6c04b16e]
  41bbeb:	fwait
  41bbec:	leave  
  41bbed:	bound  ebp,QWORD PTR [ebx+ebp*1+0x582448cd]
  41bbf4:	jmp    0x41bbc0
  41bbf6:	call   0xe8cd046c
  41bbfb:	jl     0x41bb87
  41bbfd:	xchg   ebx,eax
  41bbfe:	int    0x12
  41bc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc01:	push   es
  41bc02:	aas    
  41bc03:	push   ebx
  41bc04:	xor    al,0x81
  41bc06:	das    
  41bc07:	aad    0x15
  41bc09:	pop    es
  41bc0a:	sbb    bl,cl
  41bc0c:	adc    DWORD PTR fs:[edx-0x41],edx
  41bc10:	xchg   ebx,eax
  41bc11:	cmp    BYTE PTR [eax+0x40],0x51
  41bc15:	out    dx,eax
  41bc16:	shl    bl,cl
  41bc18:	xor    al,0x94
  41bc1a:	jmp    0x41bbd0
  41bc1c:	mov    ebp,0xbf42af2b
  41bc21:	mov    esp,0x8c155baa
  41bc26:	xor    ah,BYTE PTR ds:0xc5074a83
  41bc2c:	bound  edi,QWORD PTR [esp+esi*1]
  41bc2f:	mov    ds:0xe680bf51,eax
  41bc34:	push   eax
  41bc35:	int    0xca
  41bc37:	sub    al,0xd5
  41bc39:	push   esp
  41bc3a:	pushf  
  41bc3b:	sbb    BYTE PTR [edx],0x49
  41bc3e:	inc    edx
  41bc3f:	mov    ss,WORD PTR [edi+0x1]
  41bc42:	push   eax
  41bc43:	scas   al,BYTE PTR es:[edi]
  41bc44:	xchg   ecx,eax
  41bc45:	push   esp
  41bc46:	sbb    esi,DWORD PTR [ecx+0x5e]
  41bc49:	cmc    
  41bc4a:	or     al,0x42
  41bc4c:	xchg   esi,eax
  41bc4d:	push   ds
  41bc4e:	icebp  
  41bc4f:	je     0x41bc5f
  41bc51:	or     cl,dl
  41bc53:	mov    cl,0x41
  41bc55:	xchg   edx,eax
  41bc56:	push   ebp
  41bc57:	shr    DWORD PTR [ebx-0x5ea50a7b],0xa2
  41bc5e:	mov    ecx,0xb0720e15
  41bc63:	add    eax,0xbc619a20
  41bc68:	dec    ebx
  41bc69:	xor    eax,0x69ac4d69
  41bc6e:	cmp    DWORD PTR gs:[ebx+0x1d],esp
  41bc72:	retf   
  41bc73:	aaa    
  41bc74:	ins    BYTE PTR es:[edi],dx
  41bc75:	mov    edx,ebx
  41bc77:	enter  0x282c,0x63
  41bc7b:	jnp    0x41bcbf
  41bc7d:	inc    esi
  41bc7e:	push   edx
  41bc7f:	dec    edi
  41bc80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc81:	sbb    al,0x19
  41bc83:	fidiv  WORD PTR [eax+edi*1]
  41bc86:	jae    0x41bc17
  41bc88:	ds xchg ebx,eax
  41bc8a:	das    
  41bc8b:	(bad)  
  41bc8c:	in     eax,dx
  41bc8d:	mov    ebp,0x278b9f7b
  41bc92:	adc    DWORD PTR [esi-0x23136b41],ebx
  41bc98:	fcomp  QWORD PTR [ebp-0xaf57e47]
  41bc9e:	sahf   
  41bc9f:	push   es
  41bca0:	fs ja  0x41bccb
  41bca3:	cmp    ch,cl
  41bca5:	fwait
  41bca6:	xchg   ebp,eax
  41bca7:	dec    esp
  41bca8:	into   
  41bca9:	imul   esi,DWORD PTR [edi+edx*8+0xa],0xd
  41bcae:	push   ebp
  41bcaf:	(bad)  
  41bcb0:	ds sub al,0x95
  41bcb3:	sbb    al,0xa9
  41bcb5:	leave  
  41bcb6:	mov    bh,0x88
  41bcb8:	test   al,0x70
  41bcba:	sbb    ebp,DWORD PTR [esp+eax*1]
  41bcbd:	xchg   ah,ch
  41bcbf:	nop    DWORD PTR ds:[ebp+0x70]
  41bcc4:	in     eax,0x23
  41bcc6:	inc    esi
  41bcc7:	out    0xd6,eax
  41bcc9:	add    al,0x90
  41bccb:	outs   dx,BYTE PTR ds:[esi]
  41bccc:	arpl   WORD PTR [ebx+0x12],di
  41bccf:	imul   esp,eax,0x707a45be
  41bcd5:	icebp  
  41bcd6:	out    0xdb,eax
  41bcd8:	sbb    ch,BYTE PTR [esi]
  41bcda:	jg     0x41bcd7
  41bcdc:	mov    edx,0x96aad627
  41bce1:	cmp    DWORD PTR [edx+0x69],esp
  41bce4:	add    eax,0xa29be316
  41bce9:	dec    esi
  41bcea:	jbe    0x41bcbe
  41bcec:	scas   al,BYTE PTR es:[edi]
  41bced:	rcl    DWORD PTR [edi+edi*4-0x36a146b1],0x29
  41bcf5:	xlat   BYTE PTR ds:[ebx]
  41bcf6:	pop    eax
  41bcf7:	neg    edx
  41bcf9:	inc    eax
  41bcfa:	imul   esi,DWORD PTR [ebx+0x50],0x6fbc1f40
  41bd01:	cmp    eax,0xf5fd5f4f
  41bd06:	add    BYTE PTR [edi],bh
  41bd08:	shl    DWORD PTR [ebx],0xbf
  41bd0b:	outs   dx,BYTE PTR ds:[esi]
  41bd0c:	cli    
  41bd0d:	enter  0x6e28,0xb7
  41bd11:	jb     0x41bcf0
  41bd13:	(bad)  
  41bd14:	rol    ebp,0xff
  41bd17:	inc    edi
  41bd18:	jne    0x41bd11
  41bd1a:	mov    ch,0x83
  41bd1c:	rcl    BYTE PTR [ebx-0x38],1
  41bd1f:	ja     0x41bd30
  41bd21:	lock scas eax,DWORD PTR es:[edi]
  41bd23:	fist   DWORD PTR [eax]
  41bd25:	lods   eax,DWORD PTR ds:[esi]
  41bd26:	into   
  41bd27:	scas   eax,DWORD PTR es:[edi]
  41bd28:	pop    ebx
  41bd29:	mov    al,ds:0x5072b2bc
  41bd2e:	and    ah,BYTE PTR [esi]
  41bd30:	jb     0x41bcd0
  41bd32:	inc    ebp
  41bd33:	xchg   edi,edx
  41bd35:	mov    eax,ds:0x307751cc
  41bd3a:	ja     0x41bd00
  41bd3c:	sub    al,0xe
  41bd3e:	inc    ebx
  41bd3f:	cmp    esp,ebx
  41bd41:	std    
  41bd42:	imul   edi,ebp,0xaa61de85
  41bd48:	mov    dl,0xe4
  41bd4a:	cmp    DWORD PTR [ecx+0x4],eax
  41bd4d:	sbb    BYTE PTR [esi],0xd1
  41bd50:	pop    ss
  41bd51:	test   al,0xd7
  41bd53:	in     al,0x6
  41bd55:	cmp    al,0x37
  41bd57:	cld    
  41bd58:	ja     0x41bd14
  41bd5a:	hlt    
  41bd5b:	imul   ecx,DWORD PTR [edx+ecx*2],0xec6e4010
  41bd62:	cdq    
  41bd63:	mov    cl,0x6f
  41bd65:	mov    WORD PTR [esi+0x57],cs
  41bd68:	je     0x41bdb8
  41bd6a:	jns    0x41bde6
  41bd6c:	shl    BYTE PTR [edi],cl
  41bd6e:	pop    ebp
  41bd6f:	xchg   esi,ebp
  41bd71:	fwait
  41bd72:	or     al,0xf3
  41bd74:	imul   ecx,esi,0x46
  41bd77:	das    
  41bd78:	je     0x41bd8e
  41bd7a:	cmp    eax,0xb3c22fc3
  41bd7f:	mov    cl,0x11
  41bd81:	dec    edi
  41bd82:	dec    edx
  41bd83:	neg    edi
  41bd85:	pop    ss
  41bd86:	neg    BYTE PTR [esi+0x13474a92]
  41bd8c:	gs and dl,ch
  41bd8f:	lea    ebp,[edx-0x69b8da0d]
  41bd95:	push   ebp
  41bd97:	aas    
  41bd98:	add    ax,0x4cf3
  41bd9c:	lock push eax
  41bd9e:	call   0xe4000eb0
  41bda3:	push   esp
  41bda4:	fisub  DWORD PTR [ecx+0x27]
  41bda7:	dec    ebp
  41bda8:	mov    bl,BYTE PTR [esi-0x7c]
  41bdab:	fiadd  DWORD PTR [edi-0x53]
  41bdae:	cld    
  41bdaf:	cmp    BYTE PTR [eax+ecx*8+0x1a76d0de],ah
  41bdb6:	jae    0x41bd55
  41bdb8:	mov    ds,WORD PTR [edi+eax*8-0x58]
  41bdbc:	cmp    dh,0x82
  41bdbf:	adc    DWORD PTR [edx-0x14],edi
  41bdc2:	pushf  
  41bdc3:	out    0xc9,al
  41bdc5:	sub    al,0x75
  41bdc7:	shl    cl,cl
  41bdc9:	jnp    0x41bd84
  41bdcb:	fidivr WORD PTR [esi-0x536ffa77]
  41bdd1:	cmp    eax,0x3bd49212
  41bdd6:	jae    0x41be47
  41bdd8:	addr16 mov ah,0xf4
  41bddb:	push   0xffffffc2
  41bddd:	mov    al,ds:0xef70c4ee
  41bde2:	add    edx,edi
  41bde4:	imul   DWORD PTR [eax-0x13]
  41bde7:	mov    bh,0xb9
  41bde9:	add    BYTE PTR [edi],ah
  41bdeb:	pop    ebx
  41bdec:	mov    esp,0x1158a516
  41bdf1:	pop    esi
  41bdf2:	sbb    cl,BYTE PTR [edi*4+0x6f876f7c]
  41bdf9:	scas   eax,DWORD PTR es:[edi]
  41bdfa:	xchg   edx,eax
  41bdfb:	mov    DWORD PTR [edx-0x31d573b4],edi
  41be01:	loop   0x41be30
  41be03:	je     0x41bdb4
  41be05:	or     bh,BYTE PTR [ebp-0x13]
  41be08:	jge    0x41bdb6
  41be0a:	mov    ds:0x4b2ab383,eax
  41be0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be10:	cdq    
  41be11:	xchg   esi,eax
  41be12:	lods   al,BYTE PTR ds:[esi]
  41be13:	push   ecx
  41be14:	in     eax,0x70
  41be16:	ret    0x514d
  41be19:	mov    ch,0x6b
  41be1b:	mov    ds:0x511dc373,al
  41be20:	sti    
  41be21:	ins    BYTE PTR es:[edi],dx
  41be22:	pop    edi
  41be23:	arpl   bp,dx
  41be25:	fcmovbe st,st(5)
  41be27:	adc    al,0xc5
  41be29:	jmp    0x41be09
  41be2b:	nop
  41be2c:	fstp   QWORD PTR [edx+0x17310650]
  41be32:	seta   BYTE PTR [eax+eax*8+0x71]
  41be37:	sub    BYTE PTR [eax-0x814bf6e],0x8b
  41be3e:	and    al,0x10
  41be40:	dec    BYTE PTR [ebx+0x63fec417]
  41be46:	adc    al,BYTE PTR [ebp-0x51]
  41be49:	mov    dh,0x5e
  41be4b:	push   edx
  41be4c:	cwde   
  41be4d:	jne    0x41be5a
  41be4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be50:	mov    ebx,0xaa96aa3d
  41be55:	in     eax,0xcd
  41be57:	pop    eax
  41be58:	in     al,0xf5
  41be5a:	inc    edi
  41be5b:	push   edx
  41be5c:	xor    esi,ebp
  41be5e:	add    bl,BYTE PTR [edx-0x155e9ba5]
  41be64:	mov    DWORD PTR [edi-0x60],esi
  41be67:	ret    0x3ab
  41be6a:	dec    ecx
  41be6b:	add    eax,0xa327f1df
  41be70:	aas    
  41be71:	pop    edx
  41be72:	leave  
  41be73:	cmc    
  41be74:	bound  ecx,QWORD PTR [ecx-0x23]
  41be77:	out    dx,eax
  41be78:	sbb    DWORD PTR [ecx+0x4ae8d95b],0xb15d1e6f
  41be82:	or     bl,BYTE PTR [edi]
  41be84:	jmp    0x41beaf
  41be86:	jl     0x41be35
  41be88:	xor    eax,0xb96aca28
  41be8d:	or     DWORD PTR [eax],edi
  41be8f:	cmc    
  41be90:	add    DWORD PTR [bx+di+0x7e],ebx
  41be94:	pop    eax
  41be95:	lea    ebx,[ebx-0x31]
  41be98:	push   es
  41be99:	xor    BYTE PTR [ecx],0x5d
  41be9c:	or     eax,0x8801f41d
  41bea1:	sub    BYTE PTR [edx],al
  41bea3:	or     esi,edx
  41bea5:	push   es
  41bea6:	sbb    esi,edx
  41bea8:	mov    bh,0xd
  41beaa:	jle    0x41be60
  41beac:	inc    esp
  41bead:	(bad)  
  41beae:	imul   ebx,edx,0x4319d409
  41beb4:	in     eax,0xce
  41beb6:	xchg   BYTE PTR [edx+0x5a6cff76],dh
  41bebc:	pop    edx
  41bebd:	or     eax,0x7f8c98bd
  41bec2:	outs   dx,DWORD PTR ds:[esi]
  41bec3:	xchg   ah,bl
  41bec5:	(bad)  
  41bec7:	mov    dh,0xd
  41bec9:	cmc    
  41beca:	push   esi
  41becb:	sub    eax,0x147ae9ef
  41bed0:	xchg   BYTE PTR [edx],ah
  41bed2:	test   DWORD PTR [ebp+0x17],0xe3c34908
  41bed9:	std    
  41beda:	ret    0x46b
  41bedd:	jecxz  0x41bf22
  41bedf:	pop    ecx
  41bee0:	push   ebx
  41bee1:	sbb    ah,BYTE PTR [ecx+0x28]
  41bee4:	pop    edi
  41bee5:	(bad)  
  41bee6:	ficom  WORD PTR [edi+0x27]
  41bee9:	out    0x2d,eax
  41beeb:	stos   BYTE PTR es:[edi],al
  41beec:	fstp   st(1)
  41beee:	sbb    al,0xc
  41bef0:	push   ss
  41bef1:	xor    al,0x7f
  41bef3:	push   es
  41bef4:	inc    eax
  41bef5:	push   eax
  41bef6:	xor    dh,ah
  41bef8:	sbb    edi,DWORD PTR [esi-0x60cb052f]
  41befe:	push   0xffffffcf
  41bf00:	jmp    0x6c1a4d70
  41bf05:	ja     0x41bf62
  41bf07:	push   edi
  41bf08:	scas   al,BYTE PTR es:[edi]
  41bf09:	repz push DWORD PTR [ecx+0x56e0a8c6]
  41bf10:	mov    edx,0xa282356d
  41bf15:	adc    DWORD PTR [eax-0x7a],ebx
  41bf18:	push   cs
  41bf19:	sbb    ch,BYTE PTR [ecx]
  41bf1b:	mov    ch,BYTE PTR [ecx+0x1c]
  41bf1e:	loop   0x41bf6f
  41bf20:	lds    edi,FWORD PTR [edi+0x73fbc530]
  41bf26:	mov    al,0x1c
  41bf28:	cwde   
  41bf29:	clc    
  41bf2a:	adc    esi,ebx
  41bf2c:	xlat   BYTE PTR ds:[ebx]
  41bf2d:	and    dl,bl
  41bf2f:	hlt    
  41bf30:	ret    0x12b8
  41bf33:	push   eax
  41bf34:	mov    edx,0xec440404
  41bf39:	adc    dh,BYTE PTR [ecx]
  41bf3b:	inc    ecx
  41bf3c:	and    esp,ecx
  41bf3e:	(bad)  
  41bf3f:	and    ah,BYTE PTR ds:0x48dc24dc
  41bf45:	aas    
  41bf46:	ss inc ebp
  41bf48:	pop    esi
  41bf49:	retf   
  41bf4a:	loop   0x41bf81
  41bf4c:	inc    ebp
  41bf4d:	pushf  
  41bf4e:	and    BYTE PTR [ebp+0x716251d9],al
  41bf54:	sbb    BYTE PTR [edx+0x12c02f62],dl
  41bf5a:	nop
  41bf5b:	sbb    BYTE PTR [ebp-0x49813436],ch
  41bf61:	jp     0x41bf0b
  41bf63:	cdq    
  41bf64:	sbb    esp,DWORD PTR [edx-0x16]
  41bf67:	vorpd  xmm1,xmm2,XMMWORD PTR [ebx+0x3100ef6]
  41bf6f:	or     ah,BYTE PTR [ecx+0x6c8eae88]
  41bf75:	rcr    edi,cl
  41bf77:	pushf  
  41bf78:	xchg   edx,eax
  41bf79:	pop    es
  41bf7a:	mov    esi,0x2f500b85
  41bf7f:	aas    
  41bf80:	add    eax,0xbfb714f7
  41bf85:	sub    BYTE PTR [ebx-0x45],ch
  41bf88:	in     al,dx
  41bf89:	out    0x6a,al
  41bf8b:	lsl    ecx,WORD PTR [edi+0x170500a2]
  41bf92:	out    0x79,eax
  41bf94:	and    edi,DWORD PTR [edi]
  41bf96:	dec    edi
  41bf97:	xchg   esi,eax
  41bf98:	mov    ebx,0x5da23290
  41bf9d:	fmul   QWORD PTR [edx]
  41bf9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa0:	pusha  
  41bfa1:	mov    DWORD PTR [ebx-0x1e621657],ecx
  41bfa7:	xchg   esp,eax
  41bfa8:	sbb    eax,0x6f258977
  41bfad:	xor    BYTE PTR [eax+eax*2],ch
  41bfb0:	stc    
  41bfb1:	gs jge 0x41bf66
  41bfb4:	mov    WORD PTR [eax+0x1a],?
  41bfb7:	div    DWORD PTR [edx+0x51]
  41bfba:	fsubp  st(7),st
  41bfbc:	sub    edx,DWORD PTR [edx-0x436e3cf8]
  41bfc2:	sbb    DWORD PTR [eax-0x22],esp
  41bfc5:	fst    QWORD PTR [ebx]
  41bfc7:	sbb    ebx,DWORD PTR [edi+0x22]
  41bfca:	xor    eax,0x37018a17
  41bfcf:	fcmovu st,st(3)
  41bfd1:	xchg   DWORD PTR [ecx-0x34],eax
  41bfd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfd5:	lds    edx,FWORD PTR [ebx+0x4f]
  41bfd8:	lds    ebx,FWORD PTR [ebx-0x25]
  41bfdb:	lock xchg ebp,edx
  41bfde:	xchg   ebx,eax
  41bfdf:	mov    WORD PTR [ecx+0x11],es
  41bfe2:	dec    ecx
  41bfe3:	lods   al,BYTE PTR ds:[esi]
  41bfe4:	fisttp WORD PTR gs:[esi]
  41bfe7:	aam    0x8e
  41bfe9:	xor    BYTE PTR [ecx+0x30e19004],dh
  41bfef:	mov    eax,0x3a91e271
  41bff4:	dec    ebx
  41bff5:	xchg   ecx,eax
  41bff6:	sahf   
  41bff7:	cmp    ecx,DWORD PTR [edi]
  41bff9:	pcmpgtw mm7,QWORD PTR [eax-0x48]
  41bffd:	dec    esi
  41bffe:	mov    ds:0xbbed127f,eax
  41c003:	sbb    eax,0x23248945
  41c008:	push   esi
  41c009:	sbb    bl,cl
  41c00b:	(bad)  
  41c00c:	fimul  WORD PTR [edx+ebp*4+0x7c4769d5]
  41c013:	call   0xc5f6:0xbb81da9
  41c01a:	in     al,dx
  41c01b:	xchg   edx,eax
  41c01c:	inc    ecx
  41c01e:	jmp    0x138e31ba
  41c023:	mov    ah,0xeb
  41c025:	mov    bh,0xd3
  41c027:	xor    esi,ebx
  41c029:	mov    ds:0x95867fb,al
  41c02e:	inc    ecx
  41c02f:	xchg   esi,eax
  41c030:	sub    ecx,DWORD PTR [edx-0x8]
  41c033:	cld    
  41c034:	mov    ecx,0xe44e5155
  41c039:	adc    BYTE PTR [edi+edi*4],0x2d
  41c03d:	lods   eax,DWORD PTR ds:[esi]
  41c03e:	fild   DWORD PTR [ebp+0x47]
  41c041:	mov    ecx,0x3208fca6
  41c046:	and    bl,BYTE PTR [ecx+ebx*4+0x72045d9f]
  41c04d:	mov    eax,ds:0x43497047
  41c052:	aad    0x45
  41c054:	or     dh,dl
  41c056:	retf   0x97cd
  41c059:	mov    eax,ds:0x75a62334
  41c05e:	sbb    ah,BYTE PTR [bp+di+0x5adc]
  41c063:	push   ecx
  41c064:	shr    BYTE PTR [ebp+eiz*1+0x6a],0x30
  41c069:	or     BYTE PTR [ecx],dh
  41c06b:	push   ecx
  41c06c:	aam    0xc5
  41c06e:	cmc    
  41c06f:	push   edi
  41c070:	adc    BYTE PTR [edi],bh
  41c072:	fsubr  DWORD PTR [ecx+0x54]
  41c075:	out    0x7a,al
  41c077:	and    al,0x20
  41c079:	out    0x20,eax
  41c07b:	shl    dl,0xfa
  41c07e:	popa   
  41c07f:	(bad)  
  41c080:	cld    
  41c081:	jl     0x41c009
  41c083:	sbb    esi,edi
  41c085:	inc    esp
  41c086:	fnsave [ebp+0x2f]
  41c089:	gs loope 0x41c059
  41c08c:	mov    ebx,eax
  41c08e:	and    eax,0x5e322ad0
  41c093:	pop    es
  41c094:	mov    edx,0x683bcb0c
  41c099:	sbb    ax,0x4484
  41c09d:	int    0x72
  41c09f:	and    dl,0x21
  41c0a2:	cmp    al,0x2
  41c0a4:	mov    eax,ds:0x12cd6e2c
  41c0a9:	fsubr  QWORD PTR [edx+0x67]
  41c0ac:	ss mov ebx,ebp
  41c0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b0:	jmp    0xade244c1
  41c0b5:	sahf   
  41c0b6:	mov    ebx,0x1d7d87a6
  41c0bb:	mov    bl,0x6a
  41c0bd:	mov    ecx,0x77c55c4b
  41c0c2:	jnp    0x41c0a2
  41c0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c5:	ret    
  41c0c6:	ins    DWORD PTR es:[edi],dx
  41c0c7:	aam    0x89
  41c0c9:	pushf  
  41c0ca:	in     eax,dx
  41c0cb:	pop    ebp
  41c0cc:	jnp    0x41c139
  41c0ce:	and    ecx,DWORD PTR [edi-0x302c1472]
  41c0d4:	jo     0x41c140
  41c0d6:	mov    es,WORD PTR ds:0x9d53dc6
  41c0dc:	jl     0x41c0fe
  41c0de:	lods   eax,DWORD PTR ds:[esi]
  41c0df:	mov    dl,0xa5
  41c0e1:	xchg   edx,eax
  41c0e2:	sub    eax,0xfe470d76
  41c0e7:	inc    eax
  41c0e8:	icebp  
  41c0e9:	push   0x6689917d
  41c0ee:	mov    bl,0xa6
  41c0f0:	sti    
  41c0f1:	xor    esi,DWORD PTR ds:0x865a58b6
  41c0f7:	lds    ebp,FWORD PTR [esi+0x34]
  41c0fa:	outs   dx,DWORD PTR ds:[esi]
  41c0fb:	shr    DWORD PTR fs:[ebp-0xb],cl
  41c0ff:	cmp    eax,0xd0a3dbf3
  41c104:	sub    DWORD PTR [edi],esi
  41c106:	mov    ecx,0x3d5992b7
  41c10b:	and    al,0xa
  41c10d:	xchg   esp,eax
  41c10e:	cs inc ebx
  41c110:	test   DWORD PTR [edi],0x89bef808
  41c116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c117:	pop    es
  41c118:	mov    ecx,0xc73ba67a
  41c11d:	pop    ebx
  41c11e:	scas   eax,DWORD PTR es:[edi]
  41c11f:	in     al,dx
  41c120:	push   ebp
  41c121:	shl    DWORD PTR [esp+edx*8+0x7c0753a7],cl
  41c128:	fdiv   st(7),st
  41c12a:	jne    0x41c174
  41c12c:	out    0x44,eax
  41c12e:	or     al,0xeb
  41c130:	outs   dx,DWORD PTR ds:[esi]
  41c131:	js     0x41c146
  41c133:	sub    DWORD PTR [ebx],ebp
  41c135:	pushf  
  41c136:	or     eax,0x72935a80
  41c13b:	mov    eax,ds:0x8b21c46d
  41c140:	pop    edx
  41c141:	sbb    ebp,esi
  41c143:	pop    ecx
  41c144:	icebp  
  41c145:	add    bl,bl
  41c147:	repnz int3 
  41c149:	mov    bl,0x1d
  41c14b:	sti    
  41c14c:	sub    BYTE PTR [esi+0x2f],dh
  41c14f:	cmp    DWORD PTR [ecx+eax*2],esi
  41c152:	jle    0x41c1bc
  41c154:	in     al,0x9e
  41c156:	cmp    bl,dl
  41c158:	(bad)  
  41c159:	push   ss
  41c15a:	ror    BYTE PTR [ebp+0x31af612e],0x8
  41c161:	pop    ds
  41c162:	xor    edi,edx
  41c164:	rol    edx,cl
  41c166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c167:	mov    esp,0xcdbb2aad
  41c16c:	adc    DWORD PTR [esi+0x3f56adfb],esi
  41c172:	dec    ebp
  41c173:	cs push eax
  41c175:	stos   DWORD PTR es:[edi],eax
  41c176:	test   BYTE PTR [edi-0x71],0x9b
  41c17a:	bound  esp,QWORD PTR [esi-0x3b637646]
  41c180:	xchg   esi,eax
  41c181:	dec    esp
  41c182:	push   esi
  41c183:	cld    
  41c184:	add    eax,0x3d5d77da
  41c189:	adc    eax,0x1199ebd9
  41c18e:	cmp    DWORD PTR [ecx+ebp*4-0x429b8e58],esp
  41c195:	inc    ebp
  41c196:	mov    eax,0x400fe644
  41c19b:	ja     0x41c13b
  41c19d:	mov    bl,BYTE PTR [esi-0x3f]
  41c1a0:	lock nop
  41c1a2:	xchg   ch,dl
  41c1a4:	jo     0x41c1ad
  41c1a6:	dec    edi
  41c1a7:	ret    0x5917
  41c1aa:	and    DWORD PTR [ebp+0x152727ca],ecx
  41c1b0:	cld    
  41c1b1:	jne    0x41c190
  41c1b3:	xor    eax,0x33d23f21
  41c1b8:	les    edx,FWORD PTR [eax]
  41c1ba:	and    al,0x68
  41c1bc:	aad    0x82
  41c1be:	pushf  
  41c1bf:	mov    ds:0xee091f7b,al
  41c1c4:	fiadd  WORD PTR [esi]
  41c1c6:	jmp    0x41c22b
  41c1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c9:	and    esi,DWORD PTR [ecx]
  41c1cb:	pop    esp
  41c1cc:	cmp    BYTE PTR [edx],ch
  41c1ce:	adc    ecx,0x9aaf7501
  41c1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1d5:	sub    edi,DWORD PTR [edi+0x69e11f0]
  41c1db:	ja     0x41c23a
  41c1dd:	and    al,0x96
  41c1df:	mov    ecx,0xbd57168d
  41c1e4:	inc    ecx
  41c1e5:	jge    0x41c1c8
  41c1e7:	shl    ch,cl
  41c1e9:	sahf   
  41c1ea:	(bad)  
  41c1eb:	js     0x41c236
  41c1ed:	mov    ds:0xf4fb817a,al
  41c1f2:	cmp    esp,edi
  41c1f4:	push   ecx
  41c1f5:	sbb    ecx,ecx
  41c1f7:	sbb    al,0xa1
  41c1f9:	add    DWORD PTR [esi+0x4],esp
  41c1fc:	push   es
  41c1fd:	inc    ecx
  41c1fe:	mov    al,0x75
  41c200:	jmp    0x41c233
  41c202:	xor    eax,0x8a592ad6
  41c207:	lods   al,BYTE PTR ds:[esi]
  41c208:	sub    al,0x1f
  41c20a:	jp     0x41c27f
  41c20c:	iret   
  41c20d:	mov    ch,0xeb
  41c20f:	xchg   ebp,eax
  41c210:	aas    
  41c211:	enter  0x5fef,0xd5
  41c215:	out    0x68,eax
  41c217:	jns    0x41c293
  41c219:	arpl   WORD PTR [ebx+0x459cc124],cx
  41c21f:	adc    ecx,DWORD PTR [ecx+eiz*8]
  41c222:	out    dx,al
  41c223:	mov    bh,0xeb
  41c225:	xor    eax,0xdad63f45
  41c22a:	imul   esp,DWORD PTR [esi],0xec3f9e
  41c230:	inc    esp
  41c231:	mov    esp,0x2520998e
  41c236:	mov    cl,bh
  41c238:	fdiv   QWORD PTR [ecx+ebx*4-0x10311ca7]
  41c23f:	add    eax,0xc139cedb
  41c244:	retf   0xf35c
  41c247:	jmp    0xa3a07bc6
  41c24c:	sbb    DWORD PTR [edi-0x21],0xffffffe2
  41c250:	leave  
  41c251:	sub    al,0x7c
  41c253:	push   cs
  41c254:	jl     0x41c233
  41c256:	mov    DWORD PTR [ecx+ebp*8+0x2cf218cd],edx
  41c25d:	add    ecx,DWORD PTR [edi]
  41c25f:	dec    esp
  41c260:	mov    al,ds:0xe07318fc
  41c265:	pushf  
  41c266:	push   ebx
  41c267:	pop    esi
  41c268:	jl     0x41c23b
  41c26a:	fwait
  41c26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c26c:	sub    eax,0x8e174255
  41c271:	stos   DWORD PTR es:[edi],eax
  41c272:	inc    ebx
  41c273:	repz adc eax,0xacbf8408
  41c279:	push   eax
  41c27a:	push   ebx
  41c27b:	pop    edx
  41c27c:	inc    esi
  41c27d:	sub    DWORD PTR [eax-0x43],edi
  41c280:	cdq    
  41c281:	mov    al,0x95
  41c283:	cld    
  41c284:	mov    edi,0x5b4e21da
  41c289:	inc    esi
  41c28a:	and    al,0x3
  41c28c:	repnz xor BYTE PTR [ebp-0x74],0xb
  41c291:	scas   al,BYTE PTR es:[edi]
  41c292:	xchg   ecx,eax
  41c293:	enter  0x763c,0x2e
  41c297:	fsubr  DWORD PTR [edi]
  41c299:	std    
  41c29a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c29c:	scas   eax,DWORD PTR es:[edi]
  41c29d:	into   
  41c29e:	leave  
  41c29f:	aam    0x45
  41c2a1:	fld    DWORD PTR [ebx]
  41c2a3:	aad    0xc3
  41c2a5:	imul   edi,DWORD PTR [esi+0x17],0x3b
  41c2a9:	mov    BYTE PTR [ecx],0xae
  41c2ac:	mov    al,ds:0x8adc4947
  41c2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b2:	dec    edx
  41c2b3:	test   dh,al
  41c2b5:	cwde   
  41c2b6:	xchg   esi,eax
  41c2b7:	sbb    esi,DWORD PTR [edi+0x25eaa01]
  41c2bd:	test   BYTE PTR [ecx+0x34],bh
  41c2c0:	popa   
  41c2c1:	pop    ebp
  41c2c2:	cmp    DWORD PTR [esi],0xffffffd1
  41c2c5:	fisub  WORD PTR [ebp-0x3b46996f]
  41c2cb:	das    
  41c2cc:	fwait
  41c2cd:	or     DWORD PTR [esi],eax
  41c2cf:	mov    ah,0xb1
  41c2d1:	lahf   
  41c2d2:	fild   DWORD PTR [esi+0x7b095e30]
  41c2d8:	mov    bl,0x81
  41c2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2db:	jne    0x41c31d
  41c2dd:	mov    dl,0xc7
  41c2df:	mov    edi,eax
  41c2e1:	jbe    0x41c267
  41c2e3:	and    ch,ah
  41c2e5:	xadd   BYTE PTR [ebx-0x65e9443e],ah
  41c2ec:	lock mov ah,0xc9
  41c2ef:	sub    al,bl
  41c2f1:	sub    bl,BYTE PTR [ecx-0x7b]
  41c2f4:	fucomi st,st(3)
  41c2f6:	or     DWORD PTR [ebx],eax
  41c2f8:	add    dl,BYTE PTR [ebp+0x5d4c682b]
  41c2fe:	(bad)  
  41c300:	pop    eax
  41c301:	mov    edx,0xce8e9573
  41c306:	jp     0x41c2a8
  41c308:	hlt    
  41c309:	sub    dh,BYTE PTR [ebp+0x41]
  41c30c:	mov    ebp,0x93383614
  41c311:	(bad)  
  41c312:	dec    edi
  41c313:	xchg   ecx,eax
  41c314:	sbb    eax,0xbcb420f2
  41c319:	retf   
  41c31a:	push   0xfffffff4
  41c31c:	jge    0x41c2ae
  41c31e:	mov    edx,0xd39868fc
  41c323:	mov    BYTE PTR [eax+esi*1],dl
  41c326:	push   cs
  41c327:	sbb    bh,BYTE PTR [edx-0x31b99772]
  41c32d:	dec    ebp
  41c32e:	jecxz  0x41c2b7
  41c330:	cmp    edx,eax
  41c332:	cmp    eax,0x68707bdf
  41c337:	int3   
  41c338:	xor    BYTE PTR [eax],dh
  41c33a:	sbb    edx,ebx
  41c33c:	gs js  0x41c2c3
  41c33f:	data16 add BYTE PTR [eax],al
  41c342:	mov    BYTE PTR [eax-0x46],0xda
  41c346:	mov    cl,0x82
  41c348:	mov    cl,0x7e
  41c34a:	xor    bl,BYTE PTR [edx+edi*4+0x667b581a]
  41c351:	jne    0x41c352
  41c353:	inc    ebp
  41c354:	out    0x4a,eax
  41c356:	xor    bl,bl
  41c358:	pop    ss
  41c359:	pop    eax
  41c35a:	loopne 0x41c39b
  41c35c:	adc    eax,0xc8ae349
  41c361:	hlt    
  41c362:	mov    si,0x4396
  41c366:	(bad)  
  41c368:	sbb    ch,dh
  41c36a:	lods   al,BYTE PTR ds:[esi]
  41c36b:	in     eax,dx
  41c36c:	sub    BYTE PTR [esp],al
  41c36f:	cmp    bl,0x26
  41c372:	ror    DWORD PTR [eax+0x4b4e866d],0x29
  41c379:	push   ecx
  41c37a:	jnp    0x41c382
  41c37c:	jp     0x41c391
  41c37e:	shl    BYTE PTR [edx-0x31],0x17
  41c382:	inc    bp
  41c384:	xor    BYTE PTR [ecx-0x24316b7d],bh
  41c38a:	add    ebp,DWORD PTR [bx+di+0x6e]
  41c38e:	mov    ds:0x9c286242,eax
  41c393:	scas   eax,DWORD PTR es:[edi]
  41c394:	adc    DWORD PTR [ebp-0x3c],esp
  41c397:	sub    eax,esi
  41c399:	push   edx
  41c39a:	loop   0x41c382
  41c39c:	pop    ebp
  41c39d:	inc    ecx
  41c39e:	jno    0x41c348
  41c3a0:	or     eax,0x1e891db8
  41c3a5:	inc    DWORD PTR [ecx-0x296e186b]
  41c3ab:	arpl   bp,ax
  41c3ad:	cwde   
  41c3ae:	add    al,0x35
  41c3b0:	shr    esi,1
  41c3b2:	add    BYTE PTR [eax-0x7e809b27],cl
  41c3b8:	out    dx,al
  41c3b9:	aam    0x4b
  41c3bb:	cmc    
  41c3bc:	xor    al,0x3d
  41c3be:	(bad)  
  41c3bf:	lea    edx,[edi]
  41c3c1:	gs jmp 0x31ce6995
  41c3c7:	xchg   ebx,eax
  41c3c8:	mov    bl,0x20
  41c3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3cb:	mov    ecx,0x96298800
  41c3d0:	inc    esp
  41c3d1:	push   0xaef5a2ad
  41c3d6:	mov    ecx,0xafe8ea13
  41c3db:	ret    0x35ad
  41c3de:	add    ecx,DWORD PTR [eax]
  41c3e0:	pop    ss
  41c3e1:	mov    eax,ds:0x8c389775
  41c3e6:	scas   al,BYTE PTR es:[edi]
  41c3e7:	aas    
  41c3e8:	in     eax,0x75
  41c3ea:	sbb    BYTE PTR [esi-0x306bdebe],0x1b
  41c3f1:	inc    ebp
  41c3f2:	mov    bl,ch
  41c3f4:	push   esi
  41c3f5:	out    dx,eax
  41c3f6:	add    ah,dh
  41c3f8:	push   esi
  41c3f9:	push   ebx
  41c3fa:	xchg   edi,eax
  41c3fb:	push   es
  41c3fc:	test   esi,ecx
  41c3fe:	pop    esp
  41c3ff:	dec    edi
  41c400:	push   edi
  41c401:	lea    ebp,[ebx+edi*2-0x1b]
  41c405:	fist   WORD PTR [edi+0x35e3fa4a]
  41c40b:	stos   DWORD PTR es:[edi],eax
  41c40c:	stos   DWORD PTR es:[edi],eax
  41c40d:	xor    DWORD PTR [ecx-0x32f3eb8f],0xffffff96
  41c414:	repz out dx,al
  41c416:	xor    DWORD PTR [ecx+edi*8+0x7e],ebp
  41c41a:	adc    cl,cl
  41c41c:	sbb    al,0xc3
  41c41f:	mov    esi,DWORD PTR ds:0x56af56b0
  41c425:	push   cs
  41c426:	ds jae 0x41c3f8
  41c429:	and    DWORD PTR [edx-0x7e8c1fa2],edx
  41c42f:	adc    edx,DWORD PTR [edi]
  41c431:	add    BYTE PTR [esi+0x713a3729],cl
  41c437:	scas   eax,DWORD PTR es:[edi]
  41c438:	mov    BYTE PTR [ecx+eiz*8+0x2e],0xb8
  41c43d:	icebp  
  41c43e:	mov    edi,DWORD PTR [eax+0x49909104]
  41c444:	hlt    
  41c445:	js     0x41c3db
  41c447:	mov    edi,0x54922d1a
  41c44c:	dec    ecx
  41c44d:	test   eax,0xb35b1cc9
  41c452:	dec    edx
  41c453:	aad    0xb9
  41c455:	pop    ecx
  41c456:	(bad)
  41c459:	jns    0x41c4c7
  41c45b:	call   FWORD PTR [esi]
  41c45d:	dec    esp
  41c45e:	and    ecx,DWORD PTR [edx-0x4301d7af]
  41c464:	les    esi,FWORD PTR [edx]
  41c466:	xlat   BYTE PTR ds:[ebx]
  41c467:	test   BYTE PTR [edx-0x22],bl
  41c46a:	popa   
  41c46b:	jbe    0x41c4ae
  41c46d:	jbe    0x41c499
  41c46f:	pop    ecx
  41c470:	jo     0x41c4dd
  41c472:	sub    eax,0xb5633f3d
  41c477:	pusha  
  41c478:	sub    al,0xf3
  41c47a:	lea    eax,[esi]
  41c47c:	sahf   
  41c47d:	out    dx,eax
  41c47e:	in     al,dx
  41c47f:	push   0xc21209bf
  41c484:	sbb    bl,BYTE PTR [edx-0x7e]
  41c487:	ret    0x246a
  41c48a:	cmp    al,0x4b
  41c48c:	and    edx,ebx
  41c48e:	jne    0x41c477
  41c490:	dec    esi
  41c491:	mov    eax,ds:0x3339914
  41c496:	push   0x39d7af85
  41c49b:	or     BYTE PTR [edx],0x1e
  41c49e:	xchg   DWORD PTR [eax-0x40a9c087],edx
  41c4a4:	mov    eax,0xf25d396e
  41c4a9:	jns    0x41c462
  41c4ab:	cmp    al,0x19
  41c4ad:	arpl   WORD PTR [edx+0x19efc272],bp
  41c4b3:	stos   DWORD PTR es:[edi],eax
  41c4b4:	or     DWORD PTR [esi-0x1fe336b1],edi
  41c4ba:	js     0x41c476
  41c4bc:	mov    ebp,0x5e27abc6
  41c4c1:	ins    DWORD PTR es:[edi],dx
  41c4c2:	das    
  41c4c3:	fld    TBYTE PTR [edx-0x47e221cf]
  41c4c9:	stc    
  41c4ca:	xor    dl,BYTE PTR [ebx-0x3b]
  41c4cd:	mov    ecx,0x75c334aa
  41c4d2:	cld    
  41c4d3:	jecxz  0x41c54a
  41c4d5:	mov    ch,0x10
  41c4d7:	inc    ecx
  41c4d8:	push   ebx
  41c4d9:	adc    BYTE PTR [ecx],bh
  41c4db:	jmp    0x41c502
  41c4dd:	mov    ebx,DWORD PTR [ebp-0x4ba9b465]
  41c4e3:	and    esi,DWORD PTR [edx]
  41c4e5:	dec    edx
  41c4e6:	sbb    bl,BYTE PTR ds:0xfa7012b6
  41c4ec:	dec    edi
  41c4ed:	retf   
  41c4ee:	xlat   BYTE PTR ds:[ebx]
  41c4ef:	inc    ebx
  41c4f0:	mov    dh,0xdf
  41c4f2:	and    esp,ebx
  41c4f4:	shl    BYTE PTR [edx-0x404230d6],0x24
  41c4fb:	inc    edx
  41c4fc:	cli    
  41c4fd:	jno    0x41c56b
  41c4ff:	inc    edi
  41c500:	xor    al,0x32
  41c502:	pop    esi
  41c503:	mov    eax,ds:0xfda64c8a
  41c508:	jle    0x41c551
  41c50a:	sbb    dl,BYTE PTR [edx+0x24]
  41c50d:	psrad  mm0,QWORD PTR [eax-0x18377857]
  41c514:	out    0x65,eax
  41c516:	cmp    dh,bh
  41c518:	aaa    
  41c519:	push   edx
  41c51a:	mov    dh,0xf9
  41c51c:	retf   0xe2ef
  41c51f:	shr    BYTE PTR [esi-0x1ed0ead2],1
  41c525:	push   edi
  41c526:	dec    edi
  41c527:	imul   ecx,DWORD PTR [edx-0x8],0x47
  41c52b:	je     0x41c55e
  41c52d:	(bad)  
  41c52e:	adc    BYTE PTR [edi+0x5c],0x8a
  41c532:	imul   ebp,DWORD PTR [ecx],0x6d0bdbf1
  41c538:	enter  0xfbbe,0x4a
  41c53c:	nop
  41c53d:	or     eax,DWORD PTR es:[esi-0x7b84da96]
  41c544:	popf   
  41c545:	fsubr  DWORD PTR [edx-0x41]
  41c548:	jne    0x41c4e4
  41c54a:	mov    bl,dl
  41c54c:	inc    esi
  41c54d:	pop    ss
  41c54e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c550:	inc    esp
  41c551:	inc    ebp
  41c552:	aas    
  41c553:	fldcw  WORD PTR [edx+0x28]
  41c556:	inc    ecx
  41c557:	add    al,0x25
  41c559:	les    ebx,FWORD PTR [ebx-0x25]
  41c55c:	sbb    eax,0xe55e4690
  41c561:	cmp    esp,edi
  41c563:	pop    eax
  41c564:	or     eax,0xa13c2f32
  41c569:	loop   0x41c519
  41c56b:	pop    edx
  41c56c:	sbb    dh,BYTE PTR [eax-0x74c1d198]
  41c572:	xchg   ebp,eax
  41c573:	xor    al,BYTE PTR [edx+0x2f]
  41c576:	xchg   dx,ax
  41c578:	xchg   BYTE PTR [edi],bh
  41c57a:	(bad)  
  41c57b:	dec    DWORD PTR [esi-0x6c120a2f]
  41c581:	jecxz  0x41c593
  41c583:	call   0x812b:0xc775f5b3
  41c58a:	jge    0x41c574
  41c58c:	mov    ebp,0xb5f0643f
  41c591:	xor    al,0x25
  41c593:	shr    ecx,1
  41c595:	pop    esp
  41c596:	xchg   ebp,eax
  41c597:	sti    
  41c598:	fldcw  WORD PTR [ebp+edi*1+0x4c9183c3]
  41c59f:	aam    0xb
  41c5a1:	sub    cl,dh
  41c5a3:	iret   
  41c5a4:	sbb    al,0x88
  41c5a6:	(bad)  
  41c5a7:	xor    DWORD PTR [esi],esp
  41c5a9:	sub    eax,0x96bd180f
  41c5ae:	sbb    ecx,edi
  41c5b0:	loop   0x41c542
  41c5b2:	clc    
  41c5b3:	pop    edi
  41c5b4:	inc    edx
  41c5b5:	sub    al,0x54
  41c5b7:	std    
  41c5b8:	enter  0x6601,0x9b
  41c5bc:	xchg   DWORD PTR [eax-0x73b6b3ac],ecx
  41c5c2:	out    dx,al
  41c5c3:	call   0xf9ca:0x451a2baf
  41c5ca:	or     eax,0xecdd45c6
  41c5cf:	(bad)  
  41c5d0:	sub    BYTE PTR [esi],cl
  41c5d2:	push   0xffffff93
  41c5d4:	push   es
  41c5d5:	cmc    
  41c5d6:	mov    eax,esp
  41c5d8:	cdq    
  41c5d9:	mov    ecx,0x6c3b5378
  41c5de:	cs call 0xc7b713e7
  41c5e4:	fsub   st(7),st
  41c5e6:	fnstenv [ebx*1-0x4ebae134]
  41c5ed:	stc    
  41c5ee:	imul   ebp,DWORD PTR [ecx+0x26],0xffffffbe
  41c5f2:	push   edi
  41c5f3:	and    ebp,esi
  41c5f5:	jmp    0xf2be0e63
  41c5fa:	adc    ah,BYTE PTR [edi]
  41c5fc:	gs pop ds
  41c5fe:	xlat   BYTE PTR ds:[ebx]
  41c5ff:	fs jo  0x41c5fc
  41c602:	clc    
  41c603:	dec    edi
  41c604:	xchg   edx,eax
  41c605:	mov    eax,0x905c31b8
  41c60a:	ror    DWORD PTR [edi],0x4a
  41c60d:	repz je 0x41c675
  41c610:	retf   
  41c611:	not    BYTE PTR [ecx+eax*1+0x653e9b22]
  41c618:	iret   
  41c619:	sbb    esp,edi
  41c61b:	adc    DWORD PTR [edi],ecx
  41c61d:	cmp    DWORD PTR [esi+edi*4-0x6],ebx
  41c621:	(bad)
  41c624:	mov    eax,ds:0x9b1a7f3a
  41c629:	mov    esi,0xbb487178
  41c62e:	ss ds js 0x41c66d
  41c632:	dec    eax
  41c633:	sahf   
  41c634:	pop    eax
  41c635:	jb     0x41c6ac
  41c637:	inc    edx
  41c638:	dec    esi
  41c639:	sub    bh,BYTE PTR [ebx-0x2c]
  41c63c:	outs   dx,DWORD PTR ds:[esi]
  41c63d:	stos   DWORD PTR es:[edi],eax
  41c63e:	test   eax,0xd88f3fb3
  41c643:	push   cs
  41c644:	scas   eax,DWORD PTR es:[edi]
  41c645:	pop    ebx
  41c646:	sub    ah,BYTE PTR [esi]
  41c648:	or     ch,BYTE PTR [ebx-0x546214e8]
  41c64e:	dec    edx
  41c64f:	sbb    DWORD PTR [ecx+0x58],ecx
  41c652:	in     eax,0xc2
  41c654:	jecxz  0x41c6a1
  41c656:	popa   
  41c657:	xchg   ebp,eax
  41c658:	mov    dh,0x76
  41c65a:	aas    
  41c65b:	aas    
  41c65c:	sbb    ebp,DWORD PTR [ebx-0x3b2555cb]
  41c662:	cmp    cl,BYTE PTR [edi]
  41c664:	inc    esp
  41c665:	jae    0x41c5fd
  41c667:	dec    eax
  41c668:	pop    esi
  41c669:	daa    
  41c66a:	or     eax,DWORD PTR [ebp+edx*4+0x57]
  41c66e:	jne    0x41c62a
  41c670:	sbb    eax,0xeab75809
  41c675:	into   
  41c676:	mov    al,ss:0x795b0e71
  41c67c:	push   ebp
  41c67d:	imul   ebx,DWORD PTR [ebp-0x17d83671],0x51
  41c684:	cmp    dl,BYTE PTR [ebp+0x1c]
  41c687:	fld    DWORD PTR [ecx+0x1]
  41c68a:	imul   edi,ebp,0xffffffc6
  41c68d:	add    BYTE PTR [ebp-0x6541aa0c],cl
  41c693:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c695:	add    dh,al
  41c697:	inc    ecx
  41c698:	popa   
  41c699:	add    al,BYTE PTR [edx]
  41c69b:	sub    al,0xe
  41c69d:	jae    0x41c6c9
  41c69f:	imul   ecx,DWORD PTR [ebx+edi*1],0x6d
  41c6a3:	sahf   
  41c6a4:	nop
  41c6a5:	test   eax,0x7ed5927c
  41c6aa:	cmp    eax,0x4c3a44a1
  41c6af:	in     eax,dx
  41c6b0:	sbb    eax,0x47075a39
  41c6b5:	(bad)
  41c6b8:	jns    0x41c6af
  41c6ba:	jmp    0x41c6ce
  41c6bc:	mov    ch,0xa3
  41c6be:	mov    al,0x60
  41c6c0:	sbb    ebp,DWORD PTR [esi]
  41c6c2:	xchg   esi,eax
  41c6c3:	nop
  41c6c4:	jno    0x41c692
  41c6c6:	jp     0x41c68a
  41c6c8:	std    
  41c6c9:	sbb    BYTE PTR [ebx-0x65f099fe],bl
  41c6cf:	cwde   
  41c6d0:	rol    BYTE PTR [eax-0x49],cl
  41c6d3:	dec    ebp
  41c6d4:	inc    ecx
  41c6d5:	in     eax,0xdc
  41c6d7:	push   edi
  41c6d8:	adc    bl,BYTE PTR [edx-0x72937ad3]
  41c6de:	mov    esp,0x643961ee
  41c6e3:	sti    
  41c6e4:	sbb    eax,DWORD PTR [eax]
  41c6e6:	lods   al,BYTE PTR ds:[esi]
  41c6e7:	enter  0x4f22,0x2c
  41c6eb:	and    al,BYTE PTR ds:0x65a0805a
  41c6f1:	test   BYTE PTR [edx],0x74
  41c6f4:	jns    0x41c76c
  41c6f6:	nop
  41c6f7:	inc    edx
  41c6f8:	push   cs
  41c6f9:	mov    edi,DWORD PTR [ebx+0x15]
  41c6fc:	stc    
  41c6fd:	in     al,dx
  41c6fe:	jle    0x41c712
  41c700:	and    eax,0xf3d4822f
  41c705:	push   es
  41c706:	mov    dh,0x49
  41c708:	outs   dx,DWORD PTR ds:[esi]
  41c709:	sbb    edi,ecx
  41c70b:	push   ebx
  41c70c:	push   cs
  41c70d:	sub    dh,BYTE PTR [eax-0x38]
  41c710:	inc    eax
  41c711:	push   0x77
  41c713:	pop    esp
  41c714:	(bad)  [ecx]
  41c716:	dec    esi
  41c717:	mov    eax,0x9f33e44d
  41c71c:	es dec ebp
  41c71e:	sbb    al,0xed
  41c720:	pop    ss
  41c721:	mov    esp,0x150aaa1f
  41c726:	mov    ?,edx
  41c728:	jl     0x41c6d8
  41c72a:	xchg   ebx,eax
  41c72b:	jae    0x41c6c5
  41c72d:	push   ds
  41c72e:	scas   eax,DWORD PTR es:[edi]
  41c72f:	std    
  41c730:	sti    
  41c731:	or     DWORD PTR [edx-0x315b011f],ebp
  41c737:	shl    BYTE PTR [edx],0x79
  41c73a:	push   esp
  41c73b:	push   edx
  41c73c:	xor    ebx,esi
  41c73e:	xor    ah,BYTE PTR [ebx]
  41c740:	push   0x4d
  41c742:	neg    ecx
  41c744:	adc    BYTE PTR [eax+0x3e5682d7],dh
  41c74a:	leave  
  41c74b:	fst    QWORD PTR [eax-0x23558fde]
  41c751:	cmc    
  41c752:	mov    esi,esi
  41c754:	retf   
  41c755:	add    ebx,ebp
  41c757:	es sbb al,0x3c
  41c75a:	out    dx,al
  41c75b:	repnz dec edi
  41c75d:	xor    al,0xb6
  41c75f:	test   eax,0xe3b5f28
  41c764:	push   esi
  41c765:	dec    ebx
  41c766:	push   esp
  41c767:	pop    esi
  41c768:	cdq    
  41c769:	cli    
  41c76a:	(bad)  
  41c76b:	(bad)  [ecx+0x15]
  41c76e:	mov    eax,0xb19aea4e
  41c773:	mov    DWORD PTR [ecx-0xc1f3a36],edx
  41c779:	sbb    bl,ch
  41c77b:	pop    edx
  41c77c:	mov    ebp,0x5a0767ff
  41c781:	pusha  
  41c782:	je     0x41c7d1
  41c784:	mov    al,0xec
  41c786:	pop    ebx
  41c787:	int    0xcc
  41c789:	pushf  
  41c78a:	lock fwait
  41c78c:	sbb    bl,BYTE PTR [ecx]
  41c78e:	or     bh,dh
  41c790:	push   esp
  41c791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c792:	add    DWORD PTR [ecx+edx*8],ecx
  41c795:	hlt    
  41c796:	push   ebx
  41c797:	pop    es
  41c798:	inc    ecx
  41c799:	xchg   cl,ch
  41c79b:	sti    
  41c79c:	call   0xca8:0x6169
  41c7a2:	xchg   ecx,eax
  41c7a3:	sub    dl,cl
  41c7a5:	pop    eax
  41c7a6:	nop
  41c7a7:	sub    ch,ah
  41c7a9:	loope  0x41c759
  41c7ab:	or     DWORD PTR [edi-0x2a716cec],0x377d2030
  41c7b5:	sbb    esp,ebp
  41c7b7:	mov    ds:0xf06bd3d9,al
  41c7bc:	cmp    eax,0x810b6194
  41c7c1:	mov    ecx,0xd86965e6
  41c7c6:	test   DWORD PTR [esi+ebp*4-0x68],eax
  41c7ca:	pop    di
  41c7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7cd:	mov    ebp,0xcccad1b8
  41c7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7d3:	dec    esp
  41c7d4:	outs   dx,BYTE PTR ds:[esi]
  41c7d5:	repnz mov ds:0x346991d2,eax
  41c7db:	dec    ebx
  41c7dc:	mov    al,ds:0x62436ed3
  41c7e1:	sub    eax,DWORD PTR [edi]
  41c7e3:	xchg   edx,eax
  41c7e4:	mov    bh,0x1d
  41c7e6:	jecxz  0x41c861
  41c7e8:	pop    es
  41c7e9:	outs   dx,DWORD PTR ds:[esi]
  41c7ea:	inc    ebp
  41c7eb:	es (bad) 
  41c7ef:	add    bh,BYTE PTR es:[ecx+0x44]
  41c7f3:	mov    esi,0x39d598f6
  41c7f8:	ds (bad) 
  41c7fa:	aas    
  41c7fb:	dec    edx
  41c7fc:	clc    
  41c7fd:	arpl   WORD PTR ds:0xc3a6949e,bp
  41c803:	xchg   esi,eax
  41c804:	ja     0x41c82e
  41c806:	mov    bl,0x46
  41c808:	mov    edi,cs
  41c80a:	dec    eax
  41c80b:	leave  
  41c80c:	cmp    eax,0x63dd6ab0
  41c811:	mov    ds:0x379f9411,eax
  41c816:	dec    edi
  41c817:	xchg   BYTE PTR [edi],dh
  41c819:	or     DWORD PTR ss:[eax],edi
  41c81c:	retf   
  41c81d:	paddsw mm5,mm1
  41c820:	and    bl,ch
  41c822:	push   ecx
  41c823:	arpl   WORD PTR [esi],sp
  41c825:	jbe    0x41c7b2
  41c827:	cdq    
  41c828:	(bad)  
  41c829:	aam    0xfd
  41c82b:	rcl    BYTE PTR [edx-0x7e],cl
  41c82e:	js     0x41c842
  41c830:	pop    ecx
  41c831:	sub    eax,0x9e32cb00
  41c836:	jmp    0x71939b96
  41c83b:	push   eax
  41c83c:	lahf   
  41c83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c83e:	cmp    DWORD PTR [edi],esp
  41c840:	das    
  41c841:	sbb    BYTE PTR [edx-0x5863b83d],bl
  41c847:	in     eax,0x26
  41c849:	mov    bl,0xe2
  41c84b:	cwde   
  41c84c:	lea    esp,[eax]
  41c84e:	mov    edi,0xed34e733
  41c853:	clc    
  41c854:	rcl    BYTE PTR [ebp+0x60],0xbe
  41c858:	dec    esp
  41c859:	sub    DWORD PTR ds:0xe6af93cc,ebp
  41c85f:	mov    esp,0xbf2e4ff8
  41c864:	add    BYTE PTR [edi-0x2f98931e],cl
  41c86a:	or     DWORD PTR [ebx+0x5e0f6ca0],ebp
  41c870:	or     bh,BYTE PTR [esp+edi*4]
  41c873:	in     al,dx
  41c874:	or     BYTE PTR [ebx],dh
  41c876:	sub    al,0x2c
  41c878:	cmp    esp,DWORD PTR [ebx+0x5a8e177]
  41c87e:	(bad)  
  41c87f:	mov    esi,0xaba9d231
  41c884:	in     al,0x4d
  41c886:	mov    bl,0xf8
  41c888:	mov    bh,0x4d
  41c88a:	cmc    
  41c88b:	scas   eax,DWORD PTR es:[edi]
  41c88c:	mov    eax,ds:0x9cca98f4
  41c891:	jo     0x41c863
  41c893:	shl    BYTE PTR [edi+0xd5ac836],0x5c
  41c89a:	mov    bh,BYTE PTR [eax]
  41c89c:	or     eax,edi
  41c89e:	pop    edi
  41c89f:	mov    bl,0xb7
  41c8a1:	dec    ecx
  41c8a2:	cs dec edx
  41c8a4:	jmp    0x471efdae
  41c8a9:	and    cl,BYTE PTR [ecx]
  41c8ab:	jmp    0x9d10acde
  41c8b0:	xchg   edi,eax
  41c8b1:	(bad)
  41c8b5:	scas   eax,DWORD PTR es:[edi]
  41c8b6:	sbb    ch,ch
  41c8b8:	mov    edx,0xc52ea41a
  41c8bd:	add    ch,BYTE PTR [edi]
  41c8bf:	out    0x85,eax
  41c8c1:	mov    al,0xee
  41c8c3:	xchg   edx,edi
  41c8c5:	bound  esp,QWORD PTR [esi-0x40]
  41c8c8:	adc    ebp,DWORD PTR [eax]
  41c8ca:	fisub  WORD PTR [edi+0x4f51aa5d]
  41c8d0:	lahf   
  41c8d1:	aam    0x8c
  41c8d3:	dec    edi
  41c8d4:	mov    bh,0x9e
  41c8d6:	mov    eax,ds:0xbe1fca86
  41c8db:	or     ch,cl
  41c8dd:	(bad)  
  41c8de:	stos   DWORD PTR es:[edi],eax
  41c8df:	fadd   st,st(5)
  41c8e1:	(bad)  
  41c8e2:	dec    edi
  41c8e3:	aaa    
  41c8e4:	fs loope 0x41c920
  41c8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e8:	mov    esp,0xa056bef5
  41c8ed:	rcr    bl,0x54
  41c8f0:	jne    0x41c953
  41c8f2:	idiv   DWORD PTR [ebx]
  41c8f4:	adc    al,0xe0
  41c8f6:	lds    ebx,FWORD PTR [esi-0x19]
  41c8f9:	ds into 
  41c8fb:	(bad)  
  41c8fc:	hlt    
  41c8fd:	adc    al,0x2e
  41c8ff:	mov    dh,0x69
  41c901:	retf   0xf2dd
  41c904:	jb     0x41c89e
  41c906:	retf   
  41c907:	xor    DWORD PTR [ebp+0x4e36fc01],edx
  41c90d:	fld    TBYTE PTR [ebp-0x41]
  41c910:	jl     0x41c899
  41c912:	in     al,0x9b
  41c914:	and    bl,BYTE PTR [ebp+0x2cb72585]
  41c91a:	stos   BYTE PTR es:[edi],al
  41c91b:	int    0x1a
  41c91d:	sbb    ebx,DWORD PTR [edx+0x5b]
  41c920:	es jo  0x41c8fe
  41c923:	nop
  41c924:	jecxz  0x41c91d
  41c926:	test   al,cl
  41c928:	(bad)  
  41c929:	fldcw  WORD PTR [eax+0x1e]
  41c92c:	push   cs
  41c92d:	cmp    ah,ch
  41c92f:	cwde   
  41c930:	dec    ebx
  41c931:	stc    
  41c932:	mov    eax,ds:0xa8eb6ac
  41c937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c938:	mov    ds:0x769f7793,al
  41c93d:	push   eax
  41c93e:	xchg   ecx,eax
  41c93f:	jmp    0xcd88:0x9200305e
  41c946:	or     bh,BYTE PTR ds:0xe121ac71
  41c94c:	frstor [ebp-0x5fedc02c]
  41c952:	push   edi
  41c953:	pop    eax
  41c954:	test   al,0x3c
  41c956:	inc    eax
  41c957:	or     ecx,DWORD PTR [esi+0x7e46fb6]
  41c95d:	sub    al,0x96
  41c95f:	jnp    0x41c8e1
  41c961:	js     0x41c9d3
  41c963:	pop    ebx
  41c964:	retf   
  41c965:	jne    0x41c91f
  41c967:	push   eax
  41c968:	aaa    
  41c969:	cmp    al,BYTE PTR [ebx+0x66]
  41c96c:	xor    al,0xf9
  41c96e:	das    
  41c96f:	cli    
  41c970:	mov    ebp,0x363c823f
  41c975:	xchg   ebx,eax
  41c976:	sbb    cl,bh
  41c978:	xchg   ebp,eax
  41c979:	fnstenv [ebx+0x8]
  41c97c:	icebp  
  41c97d:	cmp    bh,cl
  41c97f:	dec    ecx
  41c980:	dec    ebp
  41c981:	mov    WORD PTR [ebx+0x308abb78],es
  41c987:	sub    bl,ah
  41c989:	or     eax,0xb31f14f4
  41c98e:	retf   0xc823
  41c991:	fidivr WORD PTR [edi+0x428493b2]
  41c997:	out    dx,al
  41c998:	mov    ds:0x62206f2b,eax
  41c99d:	jne    0x41c9c5
  41c99f:	shl    BYTE PTR [edx+0x7a],0x14
  41c9a3:	inc    esp
  41c9a4:	mov    cl,0xb8
  41c9a6:	mov    bh,0x3f
  41c9a8:	test   eax,0x7bdfde46
  41c9ad:	and    edi,DWORD PTR [esi-0x4]
  41c9b0:	pop    es
  41c9b1:	sbb    edi,DWORD PTR ds:0xe1b1d123
  41c9b7:	xchg   ebx,eax
  41c9b8:	icebp  
  41c9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ba:	inc    esp
  41c9bb:	cmp    ecx,DWORD PTR [ebx+0x1d9b7431]
  41c9c1:	dec    edi
  41c9c2:	repz and DWORD PTR ds:0xb4c42899,edx
  41c9c9:	xor    eax,0x9d3a5624
  41c9ce:	mov    edi,0xb7aed7de
  41c9d3:	jmp    0x39cd833f
  41c9d8:	jo     0x41c989
  41c9da:	sbb    al,0xae
  41c9dc:	stos   BYTE PTR es:[edi],al
  41c9dd:	cli    
  41c9de:	into   
  41c9df:	inc    ebx
  41c9e0:	or     esi,DWORD PTR [eax+esi*4+0x6e81bea2]
  41c9e7:	mov    esp,0xf592c4e2
  41c9ec:	jns    0x41c973
  41c9ee:	push   ebx
  41c9ef:	jg     0x41ca22
  41c9f1:	call   0xcca2:0xbfa04f7
  41c9f8:	fild   QWORD PTR [ecx+0x69]
  41c9fb:	pop    ebx
  41c9fc:	ss in  eax,dx
  41c9fe:	xor    DWORD PTR [esi-0x8bbeba6],edx
  41ca04:	fnstenv [ecx-0x47]
  41ca07:	sti    
  41ca08:	repnz repz sbb cl,BYTE PTR [esi-0x6efaa7e1]
  41ca10:	xor    eax,eax
  41ca12:	xor    BYTE PTR [ebx-0x57310579],bh
  41ca18:	sub    DWORD PTR [ebx-0x4bdbe783],ecx
  41ca1e:	je     0x41ca9e
  41ca20:	hlt    
  41ca21:	jmp    0xca67:0x75a597af
  41ca28:	inc    edx
  41ca29:	dec    esp
  41ca2a:	mov    ch,0x9a
  41ca2c:	mov    ebx,DWORD PTR [ebx]
  41ca2e:	or     al,0xd9
  41ca30:	mov    ebx,0xe22e1cda
  41ca35:	aam    0x36
  41ca37:	cmp    al,0x17
  41ca39:	or     eax,0xa33acb24
  41ca3e:	add    DWORD PTR [eax-0x4f],esi
  41ca41:	and    dl,dl
  41ca43:	stc    
  41ca44:	xchg   ebp,eax
  41ca45:	xor    eax,0x38
  41ca48:	adc    ebx,DWORD PTR es:[edx+0x2e3cbd54]
  41ca4f:	sub    al,0xe
  41ca51:	lods   al,BYTE PTR ds:[esi]
  41ca52:	dec    BYTE PTR [eax-0x3bf6507]
  41ca58:	not    BYTE PTR [esi]
  41ca5a:	cwde   
  41ca5b:	out    0x8a,al
  41ca5d:	mov    ds:0x1f9c1ca1,eax
  41ca62:	ss pop es
  41ca64:	lods   eax,DWORD PTR ds:[esi]
  41ca65:	jnp    0x41cadf
  41ca67:	rcr    BYTE PTR [edi],1
  41ca69:	pop    ecx
  41ca6a:	lods   eax,DWORD PTR ds:[esi]
  41ca6b:	enter  0x37b0,0xe8
  41ca6f:	aas    
  41ca70:	inc    edx
  41ca71:	popf   
  41ca72:	fld    DWORD PTR [ebx-0x97d3cc3]
  41ca78:	add    DWORD PTR [ebp+0x56b728b0],eax
  41ca7e:	cmp    BYTE PTR [esi+0x374fd15e],ah
  41ca84:	jle    0x41ca83
  41ca86:	xor    al,0x72
  41ca88:	pop    edi
  41ca89:	xchg   esi,eax
  41ca8a:	outs   dx,DWORD PTR ds:[esi]
  41ca8b:	add    ch,bh
  41ca8d:	leave  
  41ca8e:	loop   0x41ca17
  41ca90:	ins    BYTE PTR es:[edi],dx
  41ca91:	xor    ebp,edx
  41ca93:	nop
  41ca94:	(bad)  
  41ca95:	ins    DWORD PTR es:[edi],dx
  41ca96:	add    eax,eax
  41ca98:	xchg   esi,eax
  41ca99:	lods   al,BYTE PTR ds:[esi]
  41ca9a:	out    dx,al
  41ca9b:	in     al,dx
  41ca9c:	retf   0xd970
  41ca9f:	push   cs
  41caa0:	test   DWORD PTR [edi-0xa40e9ea],0xc94c41db
  41caaa:	shl    DWORD PTR [eax-0x3109d21b],0x1f
  41cab1:	sub    esp,DWORD PTR [ecx-0x2a2456c]
  41cab7:	add    esi,edx
  41cab9:	fstp   QWORD PTR [esi]
  41cabb:	ja     0x41ca7f
  41cabd:	push   ebx
  41cabe:	mov    ebx,0xce5b6644
  41cac3:	pop    esi
  41cac4:	or     BYTE PTR [eax+0x1c],bh
  41cac7:	(bad)  
  41cac8:	in     al,dx
  41cac9:	shl    esp,cl
  41cacb:	xchg   ebx,eax
  41cacc:	adc    esi,DWORD PTR [eax-0x28b68ef4]
  41cad2:	fisttp WORD PTR [ecx]
  41cad4:	dec    eax
  41cad5:	fwait
  41cad6:	xchg   ebp,eax
  41cad7:	pop    es
  41cad8:	add    BYTE PTR [edi],dh
  41cada:	inc    ecx
  41cadb:	mov    al,0x86
  41cadd:	push   edi
  41cade:	mov    ah,0xc3
  41cae0:	xor    dl,bl
  41cae2:	stos   BYTE PTR es:[edi],al
  41cae3:	mov    bh,BYTE PTR [eax+0x332b5f83]
  41cae9:	jbe    0x41caee
  41caeb:	mov    BYTE PTR [ecx],dl
  41caed:	lds    esp,FWORD PTR [edi-0x5b]
  41caf0:	sbb    BYTE PTR [edx+0x7b6c6d61],cl
  41caf6:	in     al,dx
  41caf7:	mov    ss,WORD PTR [ecx+0x22]
  41cafa:	cmp    al,0x30
  41cafc:	push   ss
  41cafd:	xchg   edx,eax
  41cafe:	adc    ah,dh
  41cb00:	mov    esi,0xfc86ddd3
  41cb05:	jp     0x41cab3
  41cb07:	mov    edx,0x8a46820d
  41cb0c:	(bad)  
  41cb0e:	push   ecx
  41cb0f:	in     al,dx
  41cb10:	add    ebx,edx
  41cb12:	mov    dl,0xc7
  41cb14:	sub    bh,cl
  41cb16:	leave  
  41cb17:	cwde   
  41cb18:	xchg   BYTE PTR [edi],dh
  41cb1a:	pop    esp
  41cb1b:	into   
  41cb1c:	pop    eax
  41cb1d:	fdiv   QWORD PTR [ebp+0x4a]
  41cb20:	aas    
  41cb21:	inc    ebp
  41cb22:	adc    BYTE PTR [ebx+0x701659cb],bh
  41cb28:	mov    edi,DWORD PTR [ecx]
  41cb2a:	outs   dx,DWORD PTR ds:[esi]
  41cb2b:	imul   ebp,DWORD PTR [edi-0x67],0xd7c316e9
  41cb32:	outs   dx,DWORD PTR ds:[esi]
  41cb33:	push   esi
  41cb34:	cmp    BYTE PTR [esi],bl
  41cb36:	arpl   WORD PTR [ecx+edi*8],sp
  41cb39:	cwde   
  41cb3a:	(bad)  
  41cb3b:	sbb    edi,DWORD PTR [edx+edi*1]
  41cb3e:	test   eax,0x504782cc
  41cb43:	jge    0x41cbbc
  41cb45:	push   0xffffffba
  41cb47:	mov    bl,0x23
  41cb49:	mov    eax,0x496a545c
  41cb4e:	mov    ch,0x9c
  41cb50:	inc    edx
  41cb51:	sbb    BYTE PTR [ebp+0x1b],bh
  41cb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb55:	or     BYTE PTR [edx+0x46a66b2d],al
  41cb5b:	gs arpl dx,bx
  41cb5e:	xchg   esp,eax
  41cb5f:	mov    eax,ds:0x679668ed
  41cb64:	outs   dx,DWORD PTR ds:[esi]
  41cb65:	lahf   
  41cb66:	push   eax
  41cb67:	mov    dl,0xb
  41cb69:	jge    0x41cb13
  41cb6b:	push   ds
  41cb6c:	out    dx,al
  41cb6d:	je     0x41cb38
  41cb6f:	hlt    
  41cb70:	jb     0x41cb5e
  41cb72:	std    
  41cb73:	lods   al,BYTE PTR ds:[esi]
  41cb74:	pop    ds
  41cb75:	ret    0x6fd3
  41cb78:	nop
  41cb79:	adc    bh,BYTE PTR [ecx+0x3b]
  41cb7c:	call   0xb46fbf9a
  41cb81:	iret   
  41cb82:	dec    esi
  41cb83:	leave  
  41cb84:	test   DWORD PTR ds:0x1a9e91,0xe3707e8c
  41cb8e:	push   esp
  41cb8f:	arpl   WORD PTR [eax-0x5d],di
  41cb92:	pop    ebp
  41cb93:	add    al,0xc4
  41cb95:	mov    ecx,0xfb188d31
  41cb9a:	or     ebp,esp
  41cb9c:	pop    edi
  41cb9d:	ds shr esi,cl
  41cba0:	pusha  
  41cba1:	mov    bl,0x18
  41cba3:	cmp    dh,dl
  41cba5:	std    
  41cba6:	imul   ebx,eax,0x7909432e
  41cbac:	scas   al,BYTE PTR es:[edi]
  41cbad:	pushf  
  41cbae:	xchg   edx,eax
  41cbaf:	jo     0x41cb7d
  41cbb1:	jmp    0x20f41ccd
  41cbb6:	rcl    DWORD PTR [ebx+ecx*1+0x2747402],1
  41cbbd:	dec    ebx
  41cbbe:	ss and edx,eax
  41cbc1:	pop    edx
  41cbc2:	push   ss
  41cbc3:	adc    eax,edx
  41cbc5:	adc    dl,BYTE PTR [esi+eiz*2]
  41cbc8:	dec    edx
  41cbc9:	jmp    0x115a:0x676fbe7e
  41cbd0:	pop    edx
  41cbd1:	imul   esp,DWORD PTR [edx-0x1],0x3f2ded99
  41cbd8:	out    dx,eax
  41cbd9:	inc    esp
  41cbda:	jg     0x41cc05
  41cbdc:	fnstsw WORD PTR [ebp-0x1b]
  41cbdf:	imul   cl
  41cbe1:	mov    ch,bl
  41cbe3:	xchg   esp,eax
  41cbe4:	push   esp
  41cbe5:	adc    ah,dh
  41cbe7:	xor    dh,cl
  41cbe9:	lea    edx,[esi+ebx*2]
  41cbec:	(bad)  
  41cbed:	xchg   ebx,eax
  41cbee:	and    eax,0xb9b435f
  41cbf3:	add    dl,ah
  41cbf5:	xor    eax,0x2238cc08
  41cbfa:	jle    0x41cbb4
  41cbfc:	pop    ecx
  41cbfd:	inc    esi
  41cbfe:	pop    ss
  41cbff:	inc    eax
  41cc00:	and    al,ch
  41cc02:	adc    ch,al
  41cc04:	inc    ebx
  41cc05:	xchg   BYTE PTR [edi],ah
  41cc07:	pop    esi
  41cc08:	jl     0x41cc62
  41cc0a:	outs   dx,BYTE PTR ds:[esi]
  41cc0b:	bound  esi,QWORD PTR [edi-0xf6ecda6]
  41cc11:	push   cs
  41cc12:	fsub   DWORD PTR [esi-0x2f1ac6ac]
  41cc18:	xchg   BYTE PTR [ebx],ah
  41cc1a:	mov    edx,0x715eb210
  41cc1f:	js     0x41cc3b
  41cc21:	jge    0x41cbc6
  41cc23:	je     0x41cba7
  41cc25:	popf   
  41cc26:	mov    ah,0x6
  41cc28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc29:	and    ebx,eax
  41cc2b:	into   
  41cc2c:	pop    ecx
  41cc2d:	sub    eax,0x4d9c9b25
  41cc32:	jnp    0x41cc87
  41cc34:	sub    DWORD PTR [esi+eax*1-0xcf46699],ebp
  41cc3b:	cmp    BYTE PTR [ecx-0x23],0x45
  41cc3f:	ret    0xbac9
  41cc42:	xchg   ecx,eax
  41cc43:	add    eax,0xfeceea78
  41cc48:	fs dec esp
  41cc4a:	add    bh,BYTE PTR [edx]
  41cc4c:	push   esi
  41cc4d:	rcr    DWORD PTR [esi-0x5193f8f0],1
  41cc53:	xor    eax,0xb328c40
  41cc58:	and    BYTE PTR [esi-0x34],al
  41cc5b:	icebp  
  41cc5c:	test   eax,0xf9090dc1
  41cc61:	add    eax,0xde0d8690
  41cc66:	vpunpckhdq xmm3,xmm1,xmm2
  41cc6a:	adc    BYTE PTR [ebp+0x24e3e83a],bh
  41cc70:	into   
  41cc71:	adc    DWORD PTR [edi-0xf73ace0],0xc5853da
  41cc7b:	push   edi
  41cc7c:	(bad)  
  41cc7d:	popf   
  41cc7e:	adc    al,dl
  41cc80:	cdq    
  41cc81:	lods   eax,DWORD PTR ds:[esi]
  41cc82:	sbb    dl,cl
  41cc84:	or     al,0x82
  41cc86:	repnz rcl BYTE PTR [ecx],1
  41cc89:	pushf  
  41cc8a:	xor    bl,BYTE PTR [eax]
  41cc8c:	mov    bh,BYTE PTR [eax+0x498ab02a]
  41cc92:	dec    esi
  41cc93:	jecxz  0x41cc35
  41cc95:	jmp    0x15640071
  41cc9a:	mov    bl,0xf5
  41cc9c:	out    0x99,al
  41cc9e:	loopne 0x41ccd2
  41cca0:	pop    eax
  41cca1:	int3   
  41cca2:	xchg   edx,eax
  41cca3:	call   0x2bc2:0x20611865
  41ccaa:	dec    esp
  41ccab:	repz xchg ebp,eax
  41ccad:	mov    esp,0xcf869756
  41ccb2:	mov    edx,DWORD PTR [edx]
  41ccb4:	outs   dx,DWORD PTR ds:[esi]
  41ccb5:	call   0xc13e:0xd4585d02
  41ccbc:	inc    edi
  41ccbd:	repz imul edi,edx,0xffffffb2
  41ccc1:	(bad)  
  41ccc2:	fist   DWORD PTR [ebp+0xf]
  41ccc5:	jg     0x41cc99
  41ccc7:	and    ecx,DWORD PTR [ebx-0x58c28db]
  41cccd:	pop    esi
  41ccce:	loopne 0x41ccaf
  41ccd0:	adc    BYTE PTR [ecx+0x5983c99a],bh
  41ccd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccd7:	enter  0x9354,0x20
  41ccdb:	push   edx
  41ccdc:	out    0x68,al
  41ccde:	xchg   BYTE PTR [ebp-0x359653b6],dh
  41cce4:	fdivr  DWORD PTR [ebx-0x2f6994a8]
  41ccea:	ja     0x41ccb5
  41ccec:	dec    ebx
  41cced:	aam    0xd9
  41ccef:	mov    al,BYTE PTR [edx-0x2a]
  41ccf2:	pop    ebp
  41ccf3:	cdq    
  41ccf4:	mov    edx,0x144392d9
  41ccf9:	mov    al,0x41
  41ccfb:	shr    edi,0x6f
  41ccfe:	(bad)  
  41cd00:	ins    DWORD PTR es:[edi],dx
  41cd01:	lahf   
  41cd02:	jbe    0x41ccee
  41cd04:	mov    dl,0x94
  41cd06:	add    ah,bl
  41cd08:	out    dx,eax
  41cd09:	xchg   DWORD PTR [edx+edx*4+0x61ad50fc],ebx
  41cd10:	mov    ds:0xb190fc56,eax
  41cd15:	leave  
  41cd16:	push   ss
  41cd17:	stos   BYTE PTR es:[edi],al
  41cd18:	jge    0x41cd46
  41cd1a:	iret   
  41cd1b:	addr16 (bad) 
  41cd1d:	adc    edx,ebp
  41cd1f:	mov    edx,0xb92ce1a5
  41cd24:	clc    
  41cd25:	clc    
  41cd26:	das    
  41cd27:	(bad)  
  41cd28:	cmp    BYTE PTR [eax-0x5a],al
  41cd2b:	pop    es
  41cd2c:	jnp    0x41cd89
  41cd2e:	xor    ecx,DWORD PTR [esi]
  41cd30:	adc    al,0x55
  41cd32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd33:	fmul   QWORD PTR [ecx-0x31]
  41cd36:	add    al,0x6d
  41cd38:	mov    edx,0xc4dab1da
  41cd3d:	sahf   
  41cd3e:	call   0xb23f60d2
  41cd43:	daa    
  41cd44:	push   ss
  41cd45:	push   esp
  41cd46:	push   es
  41cd47:	aas    
  41cd48:	repnz push cx
  41cd4b:	pop    ebp
  41cd4c:	in     eax,0x45
  41cd4e:	shl    DWORD PTR [ebx+0x44],1
  41cd51:	or     eax,0x5860865
  41cd56:	(bad)  
  41cd57:	ja     0x41cd7b
  41cd59:	jp     0x41cd95
  41cd5b:	jno    0x41cd63
  41cd5d:	add    cl,BYTE PTR [ebp+0x66]
  41cd60:	enter  0xcd50,0xcc
  41cd64:	mov    ecx,0x6e56671e
  41cd69:	clc    
  41cd6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd6b:	popa   
  41cd6c:	inc    edx
  41cd6d:	call   0x3ffbe19f
  41cd72:	out    dx,eax
  41cd73:	dec    esi
  41cd74:	or     edx,DWORD PTR [edi]
  41cd76:	pop    edi
  41cd77:	ja     0x41cd6f
  41cd79:	hlt    
  41cd7a:	pop    ebx
  41cd7b:	jmp    0xf9ef:0xba3793c7
  41cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd83:	pop    ss
  41cd84:	sti    
  41cd85:	jnp    0x41cd26
  41cd87:	pop    ds
  41cd88:	ja     0x41cdec
  41cd8a:	mov    al,0x70
  41cd8c:	jmp    DWORD PTR [edx]
  41cd8e:	jbe    0x41cd1e
  41cd90:	mov    al,ds:0x3cff9f3c
  41cd95:	lds    ecx,FWORD PTR [edx]
  41cd97:	or     ch,BYTE PTR [eax+edi*2-0x7acc3256]
  41cd9e:	lock fidiv DWORD PTR [ebx]
  41cda1:	adc    dh,BYTE PTR [edi-0x7025f0e0]
  41cda7:	push   ebp
  41cda8:	jmp    0xa353:0xde1c46b0
  41cdaf:	xor    BYTE PTR [edx-0x2c4c8fc0],cl
  41cdb5:	and    bh,BYTE PTR [edi-0x233d06d9]
  41cdbb:	push   0x5d
  41cdbd:	add    al,BYTE PTR [ebp+eax*1-0x2d]
  41cdc1:	loopne 0x41cd72
  41cdc3:	addr16 xchg esp,eax
  41cdc5:	inc    edx
  41cdc6:	or     cl,bl
  41cdc8:	or     ebp,DWORD PTR [ecx+0x1e]
  41cdcb:	or     eax,0xa2f93544
  41cdd0:	jnp    0x41cdc9
  41cdd2:	xor    DWORD PTR [edi-0x2477a7f4],esi
  41cdd8:	pop    esp
  41cdd9:	(bad)  
  41cdda:	and    DWORD PTR [edi+ebx*1-0x34],edi
  41cdde:	neg    BYTE PTR [eax+0x47]
  41cde1:	fsubr  DWORD PTR [eax]
  41cde3:	dec    esi
  41cde4:	mov    ebx,0x579e7dcf
  41cde9:	adc    BYTE PTR [eax],dh
  41cdeb:	ret    0x4e03
  41cdee:	scas   al,BYTE PTR es:[edi]
  41cdef:	sub    BYTE PTR [edi+0x61],cl
  41cdf2:	stc    
  41cdf3:	add    dl,bh
  41cdf5:	je     0x41ce65
  41cdf7:	pop    esp
  41cdf8:	pop    es
  41cdf9:	call   0x143003fd
  41cdfe:	in     eax,dx
  41cdff:	repnz mov ch,0x3e
  41ce02:	jge    0x41ce3b
  41ce04:	push   esi
  41ce05:	mov    dh,0xb1
  41ce07:	gs xchg ebp,eax
  41ce09:	add    dh,bh
  41ce0b:	pop    esi
  41ce0c:	dec    ebp
  41ce0d:	mov    eax,ds:0x83396c7c
  41ce12:	inc    eax
  41ce13:	sub    DWORD PTR ds:0xf15dc18c,0xffffffae
  41ce1a:	mov    ebp,0x3f4588cd
  41ce1f:	inc    esi
  41ce20:	xchg   BYTE PTR [ebp+0x56],cl
  41ce23:	adc    al,0x33
  41ce25:	mov    ds:0x6c43f567,eax
  41ce2a:	ret    0x2b74
  41ce2d:	cmp    ah,BYTE PTR [eax]
  41ce2f:	popa   
  41ce30:	out    0x3,al
  41ce32:	mov    ds,esi
  41ce34:	(bad)  
  41ce36:	pop    ebp
  41ce37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce38:	inc    ebx
  41ce39:	test   eax,0xb9fae699
  41ce3e:	mov    ebx,0x2de92200
  41ce43:	xor    ch,0x4
  41ce46:	push   esi
  41ce47:	test   eax,0x24ec98e7
  41ce4c:	cmc    
  41ce4d:	sahf   
  41ce4e:	xlat   BYTE PTR ds:[ebx]
  41ce4f:	retf   0x2877
  41ce52:	pop    ecx
  41ce53:	push   ds
  41ce54:	inc    esp
  41ce55:	repz (bad) 
  41ce57:	fistp  WORD PTR [edx]
  41ce59:	mov    al,0xd1
  41ce5b:	pop    ebx
  41ce5c:	scas   eax,DWORD PTR es:[edi]
  41ce5d:	add    ebx,DWORD PTR [ecx+ebx*1+0xd]
  41ce61:	mov    dl,0x19
  41ce63:	lods   al,BYTE PTR ds:[esi]
  41ce64:	aaa    
  41ce65:	jp     0x41ce29
  41ce67:	jb     0x41ce62
  41ce69:	adc    eax,0x1a85e970
  41ce6e:	sub    BYTE PTR [ebp+0x5994f27],dl
  41ce74:	idiv   DWORD PTR [eax-0x17eac8cc]
  41ce7a:	add    al,0x8f
  41ce7c:	mov    esp,DWORD PTR [ecx-0x3c]
  41ce7f:	loopne 0x41ce57
  41ce81:	stos   DWORD PTR es:[edi],eax
  41ce82:	pop    edx
  41ce83:	stc    
  41ce84:	outs   dx,DWORD PTR ds:[esi]
  41ce85:	sar    BYTE PTR [ebp+ebp*2+0x37],1
  41ce89:	inc    esi
  41ce8a:	mov    esi,0x40cf3ec7
  41ce8f:	mov    ds:0xe2c9b019,eax
  41ce94:	repz adc al,0xcf
  41ce97:	retf   0xeaea
  41ce9a:	push   edi
  41ce9b:	test   BYTE PTR [edi+edx*1+0x12],ch
  41ce9f:	push   esp
  41cea0:	xlat   BYTE PTR ds:[ebx]
  41cea1:	sbb    esp,ebx
  41cea3:	(bad)  
  41cea4:	mov    ah,0xe1
  41cea6:	adc    dl,0xa9
  41cea9:	lock mov ds:0xdc98033b,eax
  41ceaf:	xchg   ebp,eax
  41ceb0:	dec    edx
  41ceb1:	or     ecx,DWORD PTR [esp+eiz*4]
  41ceb4:	or     eax,0x1f3e1940
  41ceb9:	bound  eax,QWORD PTR [edx+ecx*1-0x1c906395]
  41cec0:	mov    ds:0xf1524581,al
  41cec5:	out    dx,eax
  41cec6:	inc    esp
  41cec7:	mov    WORD PTR ds:0xa100c45e,cs
  41cecd:	mov    edx,0xfe90f236
  41ced2:	imul   eax,DWORD PTR [eax],0x1336370
  41ced8:	sahf   
  41ced9:	add    eax,0x462f74dc
  41cede:	enter  0xe7c9,0x91
  41cee2:	sar    DWORD PTR [ebp-0x21e7ddf2],0xff
  41cee9:	ror    ah,0xfe
  41ceec:	js     0x41cf43
  41ceee:	jg     0x41cf55
  41cef0:	dec    ecx
  41cef1:	lahf   
  41cef2:	mov    ds:0x8fc63a99,al
  41cef7:	pop    ebp
  41cef8:	bound  edx,QWORD PTR [edi]
  41cefa:	cs mov ch,BYTE PTR ss:[eax]
  41cefe:	adc    ecx,esp
  41cf00:	mov    WORD PTR [eax],?
  41cf02:	and    BYTE PTR [esp+eax*8-0x3eace297],bh
  41cf09:	aaa    
  41cf0a:	call   0x219b:0x495de459
  41cf11:	jmp    0x3f943f35
  41cf16:	fild   DWORD PTR [edi-0x50]
  41cf19:	out    dx,eax
  41cf1a:	jle    0x41cf51
  41cf1c:	pusha  
  41cf1d:	ror    BYTE PTR [eax-0xb],cl
  41cf20:	icebp  
  41cf21:	xor    al,dl
  41cf23:	out    dx,eax
  41cf24:	add    eax,0x7fe73098
  41cf29:	test   DWORD PTR [eax],esi
  41cf2b:	inc    edx
  41cf2c:	loopne 0x41cf67
  41cf2e:	xor    DWORD PTR ds:0x6bd03a3e,0x5a
  41cf35:	sbb    eax,0xab3a70b5
  41cf3a:	std    
  41cf3b:	ret    
  41cf3c:	jns    0x41cf01
  41cf3e:	pusha  
  41cf3f:	sub    DWORD PTR [ebp+0x25d88c2f],edi
  41cf45:	aaa    
  41cf46:	ins    BYTE PTR es:[edi],dx
  41cf47:	ds mov ebx,0x879c840d
  41cf4d:	push   edi
  41cf4e:	inc    ecx
  41cf4f:	mov    al,0x89
  41cf51:	push   ecx
  41cf52:	or     ebp,DWORD PTR [eax+0x6a9625c5]
  41cf58:	and    DWORD PTR [edi+0x58b11b3],0x8657f7e9
  41cf62:	leave  
  41cf63:	retf   
  41cf64:	jp     0x41cf81
  41cf66:	pop    es
  41cf67:	mov    esp,0xda1f52cd
  41cf6c:	shld   DWORD PTR [edx],edi,0xe6
  41cf70:	push   edi
  41cf71:	in     eax,0x19
  41cf73:	adc    BYTE PTR [ecx-0x62acae9a],ch
  41cf79:	mov    ebp,DWORD PTR [ebx-0x9]
  41cf7c:	and    eax,0x71b10e75
  41cf81:	imul   ebx,esi,0x3b
  41cf84:	imul   eax,DWORD PTR [edx-0xe514318],0x599b5688
  41cf8e:	adc    al,0x14
  41cf90:	dec    edi
  41cf91:	jmp    0x2415:0xb5d9cb4e
  41cf98:	sbb    BYTE PTR [eax-0x2cc341e7],ch
  41cf9e:	mov    ebx,0x4dffa958
  41cfa3:	jp     0x41cfce
  41cfa5:	loope  0x41cf88
  41cfa7:	jno    0x41cfbc
  41cfa9:	es adc DWORD PTR ss:[esi+ebx*1-0x197037b1],0xffffffc2
  41cfb3:	xchg   edi,eax
  41cfb4:	fidivr DWORD PTR [ecx]
  41cfb6:	dec    edi
  41cfb7:	push   0xd88fa02
  41cfbc:	mov    ds:0xb720cce0,al
  41cfc1:	out    0x22,al
  41cfc3:	add    DWORD PTR [esi],edi
  41cfc5:	mov    al,0x8e
  41cfc7:	mov    dh,0x73
  41cfc9:	cmp    BYTE PTR [edx-0x572a90b3],ch
  41cfcf:	jmp    0xd13d:0xc16d65f1
  41cfd6:	inc    edx
  41cfd7:	and    al,0x64
  41cfd9:	xor    bl,0x39
  41cfdc:	pop    esp
  41cfdd:	sar    ecx,0xc4
  41cfe0:	cwde   
  41cfe1:	enter  0xcc43,0x9f
  41cfe5:	mov    bl,0x1
  41cfe7:	ror    ecx,cl
  41cfe9:	dec    eax
  41cfea:	fdiv   st,st(5)
  41cfec:	xchg   esi,eax
  41cfed:	jae    0x41d016
  41cfef:	push   esp
  41cff0:	ins    DWORD PTR es:[edi],dx
  41cff1:	fwait
  41cff2:	cwde   
  41cff3:	dec    edx
  41cff4:	shl    DWORD PTR [esi+esi*1-0x71515210],1
  41cffb:	or     esp,DWORD PTR [edx-0x1697dd54]
  41d001:	sub    eax,0xd2a1bdeb
  41d006:	inc    ebp
  41d007:	scas   al,BYTE PTR es:[edi]
  41d008:	inc    eax
  41d009:	cmp    edi,ecx
  41d00b:	push   edi
  41d00c:	cld    
  41d00d:	xchg   ecx,eax
  41d00e:	iret   
  41d00f:	mov    eax,0x93239f8e
  41d014:	or     ah,al
  41d016:	fdivr  QWORD PTR [ebp+0x7242a155]
  41d01c:	or     eax,0xfe40d2b4
  41d021:	mov    bl,BYTE PTR [ebp+0x2b]
  41d024:	dec    edx
  41d025:	adc    al,0x25
  41d027:	or     edx,DWORD PTR [ebx-0x9]
  41d02a:	fstp   TBYTE PTR ds:0x7d7717f8
  41d030:	push   ebx
  41d031:	test   al,0x20
  41d033:	cmp    esi,DWORD PTR [ebp-0x1a]
  41d036:	mov    eax,ds:0xdde46eda
  41d03b:	out    0xbf,eax
  41d03d:	fisub  WORD PTR [eax]
  41d03f:	cwde   
  41d040:	data16 (bad) 
  41d042:	mov    esi,0xada0daa6
  41d047:	and    al,BYTE PTR [edi-0x52a1dc28]
  41d04d:	pop    ebx
  41d04e:	and    ebp,DWORD PTR [esi+0x638015cc]
  41d054:	ins    DWORD PTR es:[edi],dx
  41d055:	cli    
  41d056:	dec    ebx
  41d057:	outs   dx,BYTE PTR ds:[esi]
  41d058:	pop    ss
  41d059:	push   ss
  41d05a:	add    ebx,ebx
  41d05c:	shr    DWORD PTR [edx+0x5a],0x25
  41d060:	imul   edi,DWORD PTR [eax+0x50],0xffffff84
  41d064:	xchg   edi,eax
  41d065:	pop    ecx
  41d066:	dec    edx
  41d067:	stos   DWORD PTR es:[edi],eax
  41d068:	inc    eax
  41d069:	jg     0x41d0d4
  41d06b:	add    bl,BYTE PTR [edi+0x4e]
  41d06e:	cmc    
  41d06f:	xchg   BYTE PTR [ebx+0x3c1d3eb0],bh
  41d075:	inc    eax
  41d076:	xchg   DWORD PTR [edx+0x25],edx
  41d079:	mov    DWORD PTR [ecx+0x5c],esi
  41d07c:	add    ebp,edi
  41d07e:	in     eax,0x56
  41d080:	(bad)  
  41d081:	mov    bh,0xf9
  41d083:	mov    fs:0xc1373f68,eax
  41d089:	sahf   
  41d08a:	sbb    ebx,ebx
  41d08c:	adc    al,0xb3
  41d08e:	inc    esi
  41d08f:	and    edi,esp
  41d091:	imul   DWORD PTR [edx+eax*2+0x840e3b7]
  41d098:	pop    esi
  41d099:	ret    
  41d09a:	into   
  41d09b:	push   edi
  41d09c:	lods   eax,DWORD PTR ds:[esi]
  41d09d:	ror    DWORD PTR [ecx-0x434650ad],cl
  41d0a3:	call   FWORD PTR [ebx-0x2166a189]
  41d0a9:	cwde   
  41d0aa:	and    ebp,DWORD PTR [edi+0x597f2330]
  41d0b0:	cmp    cl,al
  41d0b2:	dec    esp
  41d0b3:	dec    esi
  41d0b4:	pop    es
  41d0b5:	push   ss
  41d0b6:	cmp    cl,dh
  41d0b8:	push   edi
  41d0b9:	xchg   esi,eax
  41d0ba:	mov    ebx,0x28c1d2d
  41d0bf:	or     esi,DWORD PTR [ebx]
  41d0c1:	fstp   DWORD PTR ds:0x31256364
  41d0c7:	ffreep st(3)
  41d0c9:	lea    ebx,ds:0x5b776dab
  41d0cf:	std    
  41d0d0:	loope  0x41d09c
  41d0d2:	aaa    
  41d0d3:	loop   0x41d0b9
  41d0d5:	shl    DWORD PTR [edx-0x74],0xeb
  41d0d9:	retf   
  41d0da:	mov    edi,0xaad3d71c
  41d0df:	push   esi
  41d0e0:	jno    0x41d154
  41d0e2:	xor    BYTE PTR [ecx+edx*2+0x73],al
  41d0e6:	(bad)  
  41d0e7:	pop    ds
  41d0e8:	pop    esi
  41d0e9:	fsub   st,st(3)
  41d0eb:	call   0x3b4f:0xf7484135
  41d0f2:	fild   QWORD PTR [edi]
  41d0f4:	jae    0x41d133
  41d0f6:	leave  
  41d0f7:	sub    eax,0xf4e2c090
  41d0fc:	es jbe 0x41d140
  41d0ff:	push   ebx
  41d100:	cld    
  41d101:	pop    edi
  41d102:	mov    eax,0xd3e6fecb
  41d107:	jnp    0x41d0dd
  41d109:	outs   dx,DWORD PTR ds:[esi]
  41d10a:	push   0xffffffed
  41d10c:	inc    DWORD PTR [eax+0x7b]
  41d10f:	idiv   BYTE PTR [ebx+0x6d]
  41d112:	cmp    bh,bl
  41d114:	pop    ss
  41d115:	es add eax,0x8075d02a
  41d11b:	(bad)  
  41d11c:	push   edi
  41d11d:	int    0x8
  41d11f:	adc    ebx,DWORD PTR [ecx]
  41d121:	push   0x90106d38
  41d126:	mov    cl,0x73
  41d128:	and    eax,0xb558ed97
  41d12d:	rol    DWORD PTR [ebp-0x33],0x6f
  41d131:	mov    bl,0x38
  41d133:	fisttp WORD PTR [ecx+0x4fa4ca6e]
  41d139:	fst    DWORD PTR [edi-0x31d5f8c9]
  41d13f:	jne    0x41d0dd
  41d141:	icebp  
  41d142:	add    dl,dh
  41d144:	add    esi,DWORD PTR [ecx+0xa498e92]
  41d14a:	outs   dx,DWORD PTR ds:[esi]
  41d14b:	sti    
  41d14c:	jno    0x41d13d
  41d14e:	cmc    
  41d14f:	dec    ebp
  41d150:	pushf  
  41d151:	stc    
  41d152:	out    0x53,al
  41d154:	(bad)  
  41d155:	in     al,dx
  41d156:	add    esp,ebp
  41d158:	bound  edx,QWORD PTR [edx]
  41d15a:	dec    esi
  41d15b:	mov    ebx,0xad6f4f08
  41d160:	mov    es,WORD PTR [ecx+0x41846209]
  41d166:	push   cs
  41d167:	stos   DWORD PTR es:[edi],eax
  41d168:	cmp    al,0x15
  41d16a:	fld    QWORD PTR [edi]
  41d16c:	pop    eax
  41d16d:	stos   DWORD PTR es:[edi],eax
  41d16e:	in     al,0xe6
  41d170:	mov    ah,0x7
  41d172:	xor    ebp,esi
  41d174:	adc    eax,0x70da32ff
  41d179:	mov    ah,0xce
  41d17b:	jmp    0x541d:0x18590c67
  41d182:	(bad)  
  41d183:	pusha  
  41d184:	xor    esi,DWORD PTR [ebx+0x47]
  41d187:	in     eax,dx
  41d188:	mov    ebx,0x242aed6a
  41d18d:	call   0x4f1bf35e
  41d192:	rcl    DWORD PTR [edi-0x6af39248],cl
  41d198:	in     eax,0x26
  41d19a:	aam    0xbe
  41d19c:	outs   dx,DWORD PTR ds:[esi]
  41d19d:	xchg   esp,eax
  41d19f:	dec    esi
  41d1a0:	ja     0x41d1ba
  41d1a2:	in     eax,0x42
  41d1a4:	mov    esi,esi
  41d1a6:	pop    ebx
  41d1a7:	push   cs
  41d1a8:	xchg   BYTE PTR [ebx-0x73],al
  41d1ab:	cmp    BYTE PTR [edi+0x76],ah
  41d1ae:	jns    0x41d206
  41d1b0:	fsubp  st(6),st
  41d1b2:	sbb    BYTE PTR [edx+0x2a657565],0xf1
  41d1b9:	lock or ch,BYTE PTR [esi+0x79]
  41d1bd:	sti    
  41d1be:	sahf   
  41d1bf:	daa    
  41d1c0:	cmp    al,0x1e
  41d1c2:	es mov ecx,0xb5765e13
  41d1c8:	dec    eax
  41d1c9:	in     eax,dx
  41d1ca:	dec    ebp
  41d1cb:	repz sub edi,0x9b6be28
  41d1d2:	inc    eax
  41d1d3:	xor    ebx,DWORD PTR [ebp-0x7d]
  41d1d6:	cmc    
  41d1d7:	cdq    
  41d1d8:	add    eax,0x7faa75eb
  41d1dd:	mov    ds:0xb171a541,al
  41d1e2:	pop    ebx
  41d1e3:	cdq    
  41d1e4:	fdivr  QWORD PTR [edi-0x6c]
  41d1e7:	icebp  
  41d1e8:	out    0xde,al
  41d1ea:	xor    bl,BYTE PTR [ecx+eiz*1-0x7a1ba4dc]
  41d1f1:	jae    0x41d1bc
  41d1f3:	cli    
  41d1f4:	in     al,dx
  41d1f5:	adc    ebx,DWORD PTR [edx]
  41d1f7:	mov    ebp,DWORD PTR [ecx]
  41d1f9:	bound  eax,QWORD PTR [ebp-0x57c2a28c]
  41d1ff:	xor    bh,BYTE PTR [edx-0x718cf68d]
  41d205:	test   eax,0x83f065ef
  41d20a:	pop    edx
  41d20b:	fpatan 
  41d20d:	jns    0x41d20f
  41d20f:	test   al,0x90
  41d211:	popf   
  41d212:	jp     0x41d285
  41d214:	cdq    
  41d215:	dec    edx
  41d216:	cli    
  41d217:	ret    
  41d218:	inc    edi
  41d219:	fadd   QWORD PTR [edi+0x72cc2653]
  41d21f:	icebp  
  41d220:	fs dec ebx
  41d222:	push   ss
  41d223:	shr    BYTE PTR [ebp-0x52c18930],0xde
  41d22a:	fimul  DWORD PTR [edx]
  41d22c:	call   0xeef5f0c0
  41d231:	jno    0x41d209
  41d233:	push   esp
  41d234:	mov    ah,ch
  41d236:	xchg   ecx,eax
  41d237:	out    0x63,eax
  41d239:	enter  0x387,0x32
  41d23d:	dec    esp
  41d23e:	ins    DWORD PTR es:[edi],dx
  41d23f:	jae    0x41d284
  41d241:	in     eax,0x93
  41d243:	(bad)  
  41d245:	cld    
  41d246:	lods   eax,DWORD PTR ds:[esi]
  41d247:	call   DWORD PTR [edi]
  41d249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d24a:	in     eax,dx
  41d24b:	and    esi,esi
  41d24d:	push   es
  41d24e:	scas   al,BYTE PTR es:[edi]
  41d24f:	sbb    ah,BYTE PTR [ebx-0x12]
  41d252:	xchg   edi,eax
  41d253:	sbb    BYTE PTR [ebx+0x70],0x4c
  41d257:	lar    eax,WORD PTR [edx-0x7d]
  41d25b:	and    BYTE PTR [esi+ebp*1],ch
  41d25e:	jle    0x41d27e
  41d260:	pop    ecx
  41d261:	pop    ecx
  41d262:	nop
  41d263:	and    edi,DWORD PTR [ecx]
  41d265:	(bad)  
  41d266:	pusha  
  41d267:	jge    0x41d220
  41d269:	mov    dl,0xf8
  41d26b:	or     BYTE PTR [eax+0x135516fd],ch
  41d271:	enter  0xa4d9,0x13
  41d275:	cmp    al,0x91
  41d277:	cmp    ebp,esp
  41d279:	loope  0x41d244
  41d27b:	add    eax,0xc7c45e1b
  41d280:	push   ss
  41d281:	cmp    al,BYTE PTR ds:0xff94960d
  41d287:	and    eax,0xace11874
  41d28c:	jne    0x41d214
  41d28e:	cmp    eax,ebp
  41d290:	call   0x1451:0x8d6cfcd6
  41d297:	mov    esi,0x1b7d8ec4
  41d29c:	scas   al,BYTE PTR es:[edi]
  41d29d:	dec    edi
  41d29e:	mov    ecx,0x1d323e2e
  41d2a3:	xchg   esi,eax
  41d2a4:	fisttp WORD PTR [eax]
  41d2a6:	jmp    0x41d2e5
  41d2a8:	ins    BYTE PTR es:[edi],dx
  41d2a9:	cli    
  41d2aa:	jo     0x41d2c7
  41d2ac:	(bad)  
  41d2ad:	pop    edi
  41d2ae:	sbb    DWORD PTR [esi-0x446e3d01],eax
  41d2b4:	jo     0x41d24d
  41d2b6:	dec    eax
  41d2b7:	shr    BYTE PTR [ecx-0x43],1
  41d2ba:	cmp    eax,0xe81849f7
  41d2bf:	pusha  
  41d2c0:	div    BYTE PTR [esi]
  41d2c2:	sbb    al,0x69
  41d2c4:	outs   dx,DWORD PTR ds:[esi]
  41d2c5:	(bad)  
  41d2c6:	fsubr  DWORD PTR [esp+ebx*8]
  41d2c9:	cmp    bl,dh
  41d2cb:	jnp    0x41d29e
  41d2cd:	mov    dl,0x34
  41d2cf:	jo     0x41d269
  41d2d1:	xchg   al,dl
  41d2d3:	mov    ch,0xce
  41d2d5:	cmp    edi,edx
  41d2d7:	ins    BYTE PTR es:[edi],dx
  41d2d8:	ror    edi,1
  41d2da:	jbe    0x41d348
  41d2dc:	popa   
  41d2dd:	lahf   
  41d2de:	(bad)  
  41d2df:	cdq    
  41d2e0:	ja     0x41d348
  41d2e2:	sbb    bl,BYTE PTR es:[ecx-0x8]
  41d2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e7:	fwait
  41d2e8:	pop    ds
  41d2e9:	out    dx,eax
  41d2ea:	(bad)  
  41d2eb:	jle    0x41d363
  41d2ed:	arpl   WORD PTR [edi],bp
  41d2ef:	push   0x21a29a34
  41d2f4:	push   ecx
  41d2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2f6:	push   ds
  41d2f7:	mov    ecx,0xb3648193
  41d2fc:	xchg   esp,eax
  41d2fd:	fistp  WORD PTR [edx+0x50]
  41d300:	jo     0x41d2a9
  41d302:	dec    ebx
  41d303:	and    al,BYTE PTR ds:0xc6f5bea7
  41d309:	clc    
  41d30a:	retf   0x7244
  41d30d:	xor    al,bh
  41d30f:	add    eax,0x4f93f7de
  41d314:	dec    esp
  41d315:	mov    bl,0xa9
  41d317:	rcr    bh,cl
  41d319:	sbb    ch,dl
  41d31b:	or     ecx,esi
  41d31d:	lods   eax,DWORD PTR ds:[esi]
  41d31e:	test   al,0x45
  41d320:	xor    DWORD PTR [esi-0x3e],ecx
  41d323:	(bad)  
  41d324:	out    0xca,al
  41d326:	(bad)  
  41d327:	mov    ebp,0xd1db3fc7
  41d32c:	sub    cl,al
  41d32e:	pop    ss
  41d32f:	jo     0x41d2db
  41d331:	addr16 es mov bh,0x70
  41d335:	ror    edx,cl
  41d337:	std    
  41d338:	dec    ecx
  41d339:	sti    
  41d33a:	xchg   edx,eax
  41d33b:	loopne 0x41d389
  41d33d:	aad    0x43
  41d33f:	int3   
  41d340:	fcmovb st,st(6)
  41d342:	inc    eax
  41d343:	les    ebx,FWORD PTR [ecx+0x21]
  41d346:	stos   DWORD PTR es:[edi],eax
  41d347:	pop    esi
  41d348:	xor    al,dh
  41d34a:	fnsave [edi+esi*1-0x6c]
  41d34e:	data16 sbb bl,BYTE PTR [esi]
  41d351:	int    0x5a
  41d353:	adc    BYTE PTR [edx-0x68fa0e7],bh
  41d359:	push   esi
  41d35a:	jne    0x41d358
  41d35c:	sub    cl,BYTE PTR [ebp+ebp*1-0x76f5c4d2]
  41d363:	outs   dx,BYTE PTR ds:[esi]
  41d364:	dec    ebx
  41d365:	sub    ebx,DWORD PTR [esi]
  41d367:	lock cwde 
  41d369:	out    0xd4,eax
  41d36b:	and    al,0xb0
  41d36d:	test   BYTE PTR [ebx-0x4a],ch
  41d370:	mov    bh,0xb0
  41d372:	in     al,0x4c
  41d374:	aad    0x76
  41d376:	dec    esi
  41d377:	pop    ebp
  41d378:	push   ds
  41d379:	test   eax,0xe9ea133f
  41d37e:	ss jg  0x41d306
  41d381:	mov    ch,0x63
  41d383:	mov    edx,0xa27ec3d9
  41d388:	adc    al,0x3
  41d38a:	xlat   BYTE PTR ds:[ebx]
  41d38b:	and    edx,ebx
  41d38d:	mov    DWORD PTR [ebp-0x4c],edx
  41d390:	xor    DWORD PTR ds:0x42a2d2,0x7dd7
  41d39a:	mov    edx,DWORD PTR [ebp+0x8]
  41d39d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d3a0:	lea    edx,[ebx+edx*1+0x241fcdf]
  41d3a7:	mov    DWORD PTR [ebp-0x48],edx
  41d3aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d3ad:	mov    ebx,0xfa5e1524
  41d3b2:	sub    ebx,edx
  41d3b4:	mov    DWORD PTR ds:0x42a27a,0x17
  41d3be:	cmp    DWORD PTR ds:0x42a27a,0x0
  41d3c5:	je     0x41d3ff
  41d3cb:	cmp    DWORD PTR ds:0x42a27a,0x25
  41d3d2:	jge    0x41d3ff
  41d3d8:	jmp    0x41d3ed
  41d3dd:	push   0x42a2be
  41d3e2:	push   0x429181
  41d3e7:	call   DWORD PTR ds:0x42a3ca
  41d3ed:	mov    edx,DWORD PTR ds:0x42a27a
  41d3f3:	dec    edx
  41d3f4:	mov    DWORD PTR ds:0x42a27a,edx
  41d3fa:	jmp    0x41d3be
  41d3ff:	add    ebx,DWORD PTR [ebp-0x44]
  41d402:	and    DWORD PTR ds:0x42a25a,ebx
  41d408:	mov    DWORD PTR [ebp-0x44],ebx
  41d40b:	mov    edx,DWORD PTR [ebp+0x8]
  41d40e:	sub    DWORD PTR ds:0x42a25e,0x69af
  41d418:	xor    edx,eax
  41d41a:	adc    DWORD PTR ds:0x42a2e6,0x774b
  41d424:	add    edx,esi
  41d426:	mov    DWORD PTR ds:0x42a2ae,0x6366
  41d430:	jne    0x418abe
  41d436:	jmp    0x421e4f
  41d43b:	adc    DWORD PTR ds:0x42a2d2,edx
  41d441:	mov    edx,DWORD PTR [ebp-0xc]
  41d444:	sub    DWORD PTR ds:0x42a2ae,0x4e6d
  41d44e:	sub    edx,esi
  41d450:	xor    edx,eax
  41d452:	sbb    DWORD PTR ds:0x42a2c6,0x8d4
  41d45c:	mov    DWORD PTR [ebp-0x5c],edx
  41d45f:	dec    DWORD PTR ds:0x42a2c2
  41d465:	mov    edx,DWORD PTR [ebp-0x10]
  41d468:	xor    DWORD PTR ds:0x42a2a2,0x42a286
  41d472:	mov    ebx,DWORD PTR [ebp-0x8]
  41d475:	and    DWORD PTR ds:0x42a2ca,0x42a292
  41d47f:	xor    edx,eax
  41d481:	xor    ebx,eax
  41d483:	add    DWORD PTR ds:0x42a29a,0x42a2c2
  41d48d:	sub    edx,ebx
  41d48f:	sub    edx,esi
  41d491:	xor    edx,eax
  41d493:	mov    DWORD PTR [ebp-0x10],edx
  41d496:	mov    edx,DWORD PTR [ebp-0x14]
  41d499:	mov    DWORD PTR [ebp+0x8],edx
  41d49c:	jmp    0x41f8db
  41d4a1:	sbb    edx,ebx
  41d4a3:	mov    edx,DWORD PTR [ebp+0x8]
  41d4a6:	sbb    ebx,DWORD PTR ds:0x42a25a
  41d4ac:	mov    ebx,DWORD PTR [ebp-0x8]
  41d4af:	xor    edx,eax
  41d4b1:	xor    ebx,eax
  41d4b3:	or     DWORD PTR ds:0x42a2f6,0x42a266
  41d4bd:	sub    edx,ebx
  41d4bf:	movzx  ebx,BYTE PTR ds:0x42a2a6
  41d4c6:	sbb    ebx,DWORD PTR ds:0x42a262
  41d4cc:	mov    DWORD PTR ds:0x42a2a6,ebx
  41d4d2:	sub    edx,esi
  41d4d4:	xor    edx,eax
  41d4d6:	mov    DWORD PTR [ebp+0x8],edx
  41d4d9:	mov    DWORD PTR ds:0x42a2b2,0x1f
  41d4e3:	cmp    DWORD PTR ds:0x42a2b2,0x0
  41d4ea:	je     0x41d526
  41d4f0:	cmp    DWORD PTR ds:0x42a2b2,0x21
  41d4f7:	jle    0x41d526
  41d4fd:	jmp    0x41d512
  41d502:	push   0x1ea3
  41d507:	push   0x42a29e
  41d50c:	call   DWORD PTR ds:0x42a3ce
  41d512:	xor    edx,edx
  41d514:	xor    edx,DWORD PTR ds:0x42a2b2
  41d51a:	dec    edx
  41d51b:	mov    DWORD PTR ds:0x42a2b2,edx
  41d521:	jmp    0x41d4e3
  41d526:	mov    edx,DWORD PTR [ebp+0x8]
  41d529:	mov    ebx,DWORD PTR [ebp-0x58]
  41d52c:	add    edx,0x5708fa
  41d532:	imul   edx,ebx
  41d535:	mov    DWORD PTR [ebp-0x58],edx
  41d538:	mov    edx,DWORD PTR [ebp+0x8]
  41d53b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d53e:	add    edx,0x64f898
  41d544:	or     edx,ebx
  41d546:	mov    DWORD PTR [ebp-0x54],edx
  41d549:	jmp    0x41f8a1
  41d54e:	in     al,0xd
  41d550:	in     al,0xc4
  41d552:	xchg   BYTE PTR [esi-0x72a2f23c],al
  41d558:	retf   0xf3e7
  41d55b:	pusha  
  41d55c:	icebp  
  41d55d:	aaa    
  41d55e:	dec    ebp
  41d55f:	fstp   TBYTE PTR [ebx+eax*4+0x46]
  41d563:	pop    esi
  41d564:	add    DWORD PTR [ebx+0x459c2b6a],0xfffffffc
  41d56b:	pushf  
  41d56c:	test   al,0x69
  41d56e:	ds dec edx
  41d570:	rcr    BYTE PTR [eax+eax*1-0x3d],cl
  41d574:	push   edi
  41d575:	dec    eax
  41d576:	or     eax,0x91afe2df
  41d57b:	popf   
  41d57c:	data16 es aaa 
  41d57f:	mov    eax,ds:0xbc4aa244
  41d584:	pop    ds
  41d585:	mov    eax,0xff148f0e
  41d58a:	fist   WORD PTR [ebx+0x49]
  41d58d:	hlt    
  41d58e:	clc    
  41d58f:	pushf  
  41d590:	sub    ebx,DWORD PTR [eax+esi*4]
  41d593:	out    0xe6,al
  41d595:	sub    DWORD PTR [edx-0x1d],ecx
  41d598:	addr16 lahf 
  41d59a:	inc    ebx
  41d59b:	mov    ah,ch
  41d59d:	push   eax
  41d59e:	cwde   
  41d59f:	adc    eax,0xe0b83b78
  41d5a4:	jp     0x41d5a4
  41d5a6:	xchg   BYTE PTR [ebp+edx*4-0x45],bh
  41d5aa:	ins    BYTE PTR es:[edi],dx
  41d5ab:	out    dx,eax
  41d5ac:	mov    ?,WORD PTR ss:[edi]
  41d5af:	sbb    ah,BYTE PTR [esi-0x80]
  41d5b2:	and    bl,dl
  41d5b4:	test   BYTE PTR [eax+eax*1],al
  41d5b7:	test   al,0xd6
  41d5b9:	push   ss
  41d5ba:	or     al,0xd4
  41d5bc:	mov    ebx,DWORD PTR [ebx+0x63]
  41d5bf:	stos   BYTE PTR es:[edi],al
  41d5c0:	xor    eax,0xb044fe68
  41d5c5:	xlat   BYTE PTR ds:[ebx]
  41d5c6:	xlat   BYTE PTR ds:[ebx]
  41d5c7:	mov    cl,0x9c
  41d5c9:	popf   
  41d5ca:	cmp    ecx,DWORD PTR [ebx+0x5ecebfc9]
  41d5d0:	dec    ebx
  41d5d1:	nop
  41d5d2:	mov    ds,ebp
  41d5d4:	xor    cl,BYTE PTR [ebp-0x25]
  41d5d7:	dec    edi
  41d5d8:	dec    esp
  41d5d9:	add    DWORD PTR [ecx],eax
  41d5db:	xlat   BYTE PTR ds:[ebx]
  41d5dc:	mov    ah,0x12
  41d5de:	cmc    
  41d5df:	cmp    ebp,edx
  41d5e1:	js     0x41d5c4
  41d5e3:	push   ebp
  41d5e4:	iret   
  41d5e5:	pop    es
  41d5e6:	repz jl 0x41d597
  41d5e9:	stc    
  41d5ea:	add    BYTE PTR [ebp+0x56],bl
  41d5ed:	pinsrw mm0,ebp,0x3b
  41d5f1:	mov    BYTE PTR [ebp+0x52],al
  41d5f4:	ss jae 0x41d5e5
  41d5f7:	or     esi,ebp
  41d5f9:	mov    ch,0x13
  41d5fb:	mov    es,WORD PTR [esp+edx*1]
  41d5fe:	icebp  
  41d5ff:	iret   
  41d600:	cmp    ecx,DWORD PTR [ebx+eax*8]
  41d603:	scas   al,BYTE PTR es:[edi]
  41d604:	and    ch,BYTE PTR [ecx+0x226a3136]
  41d60a:	or     eax,0x816431b3
  41d60f:	popa   
  41d610:	jnp    0x41d66a
  41d612:	and    cl,bh
  41d614:	mov    edx,0x588d870b
  41d619:	mov    DWORD PTR [edx+0x75],ebp
  41d61c:	jl     0x41d641
  41d61e:	out    0xf6,eax
  41d620:	mov    cl,0x5a
  41d622:	inc    edi
  41d623:	add    eax,0x13bbd0db
  41d628:	or     eax,0x4b603c4b
  41d62d:	mov    dl,0xd0
  41d62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d630:	cld    
  41d631:	push   ss
  41d632:	cli    
  41d633:	pop    ds
  41d634:	sbb    eax,0xdf36d69e
  41d639:	sbb    BYTE PTR [esi+0xb452a1d],0x13
  41d640:	jns    0x41d693
  41d642:	out    0x8d,al
  41d644:	cmp    al,0xda
  41d646:	popa   
  41d647:	gs push cs
  41d649:	pop    esi
  41d64a:	popf   
  41d64b:	dec    ebx
  41d64c:	and    BYTE PTR [ebp-0x1e948376],dl
  41d652:	and    eax,0x1836cfdc
  41d657:	ins    DWORD PTR es:[edi],dx
  41d658:	pop    es
  41d659:	or     dh,bh
  41d65b:	out    0xea,al
  41d65d:	cmp    al,0x1b
  41d65f:	inc    ecx
  41d660:	jne    0x41d696
  41d662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d663:	cmp    al,BYTE PTR [ebp-0x22]
  41d666:	xlat   BYTE PTR ds:[ebx]
  41d667:	xor    eax,0xb82ff4cd
  41d66c:	mov    ebx,0x3ccf4b90
  41d671:	adc    DWORD PTR [esi+ecx*8+0x33],edi
  41d675:	pop    ss
  41d676:	in     eax,0xfd
  41d678:	test   eax,0x5ba43e91
  41d67d:	test   BYTE PTR [esi-0xc],0x80
  41d681:	dec    ecx
  41d682:	dec    ebx
  41d683:	sub    bh,BYTE PTR [ecx]
  41d685:	xor    BYTE PTR [ecx],bh
  41d687:	pop    es
  41d688:	and    eax,0xe82dea1d
  41d68d:	dec    esp
  41d68e:	dec    ebp
  41d68f:	mul    BYTE PTR [ebx-0x11]
  41d692:	pop    edx
  41d693:	fld    TBYTE PTR [ebp+ebx*2-0x549f2014]
  41d69a:	sbb    eax,0xd55f473
  41d69f:	mov    bh,0x4e
  41d6a1:	test   eax,0x93517716
  41d6a6:	popf   
  41d6a7:	cs test al,0x44
  41d6aa:	test   BYTE PTR [esi+0x695a55cf],dl
  41d6b0:	repnz stos DWORD PTR es:[edi],eax
  41d6b2:	imul   ebp,ebx,0x861c37e3
  41d6b8:	or     ch,BYTE PTR [ecx-0x4955518a]
  41d6be:	or     ecx,ebp
  41d6c0:	sar    BYTE PTR [ecx-0x5bc6bbc6],0xcd
  41d6c7:	pop    esp
  41d6c8:	xor    BYTE PTR [eax],dh
  41d6ca:	es dec ebx
  41d6cc:	xchg   BYTE PTR [edx-0x1571770f],ch
  41d6d2:	cmp    ebp,DWORD PTR [ebp-0x12]
  41d6d5:	sar    esp,0x72
  41d6d8:	add    BYTE PTR [eax-0x32582bd7],0xe4
  41d6df:	mov    al,0xf1
  41d6e1:	cmp    DWORD PTR [edx+0x0],esi
  41d6e4:	inc    edi
  41d6e5:	ins    BYTE PTR es:[edi],dx
  41d6e6:	mov    dl,0x2
  41d6e8:	nop
  41d6e9:	jbe    0x41d671
  41d6eb:	rcr    DWORD PTR [esi-0x1c],cl
  41d6ee:	push   0x4b46167f
  41d6f3:	inc    ebp
  41d6f4:	mov    edi,0x5edc1caa
  41d6f9:	sbb    esp,DWORD PTR [esi+edi*2]
  41d6fc:	adc    BYTE PTR es:[edi+0x60],dl
  41d700:	mov    DWORD PTR [edi-0x226ebfe0],ecx
  41d706:	aam    0xb8
  41d708:	fnsave ds:0x576e3816
  41d70e:	inc    esp
  41d70f:	pop    esi
  41d710:	push   esp
  41d711:	add    cl,BYTE PTR [ebx-0xe]
  41d714:	fdivr  st,st(7)
  41d716:	fidivr DWORD PTR [ebx-0x3e]
  41d719:	xchg   edx,eax
  41d71a:	retf   0x50cc
  41d71d:	adc    ah,BYTE PTR [ebp-0x5f81c2e6]
  41d723:	lea    esp,[edi-0x10]
  41d726:	add    BYTE PTR es:[eax+0x8fcdebb],cl
  41d72d:	(bad)  
  41d72e:	xlat   BYTE PTR ds:[ebx]
  41d72f:	aas    
  41d730:	mov    ebx,0x2568d177
  41d735:	dec    ebp
  41d736:	cmp    al,BYTE PTR [ebp+0x321f7f30]
  41d73c:	repz sbb al,0x6f
  41d73f:	sbb    al,bh
  41d741:	call   0x2edd2cb8
  41d746:	sbb    ch,0xac
  41d749:	sahf   
  41d74a:	retf   0x725
  41d74d:	mov    ecx,0x467d6dad
  41d752:	mov    ds:0xa5f04df5,eax
  41d757:	xlat   BYTE PTR ds:[ebx]
  41d758:	pop    es
  41d759:	test   dh,al
  41d75b:	push   ss
  41d75c:	lods   al,BYTE PTR ds:[esi]
  41d75d:	jo     0x41d6e6
  41d75f:	push   ebp
  41d760:	xor    bl,BYTE PTR [ecx+0x16]
  41d763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d764:	xchg   DWORD PTR [ebp+0x63],esp
  41d767:	hlt    
  41d768:	fmul   DWORD PTR [ebx+0x78]
  41d76b:	loopne 0x41d74d
  41d76d:	pop    eax
  41d76e:	sub    DWORD PTR [edi-0x59],0xf98ab51f
  41d775:	and    ecx,ebx
  41d777:	xor    dh,dl
  41d779:	xchg   esi,eax
  41d77a:	popa   
  41d77b:	cmp    BYTE PTR [edx+0x65],dh
  41d77e:	xchg   ebp,eax
  41d77f:	js     0x41d77b
  41d781:	repz mov edx,0x3901aae7
  41d787:	xchg   edx,eax
  41d788:	xchg   DWORD PTR [ecx+0x374c780c],ebp
  41d78e:	retf   0xa9c8
  41d791:	mov    esp,0xc4a3fb58
  41d796:	dec    esi
  41d797:	iret   
  41d798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d79a:	mov    edx,0x28ccfbbd
  41d79f:	push   esp
  41d7a0:	inc    edx
  41d7a1:	in     eax,0x36
  41d7a3:	add    al,0x24
  41d7a5:	mov    al,0xbb
  41d7a7:	cwde   
  41d7a8:	jmp    0xc600:0x7b3626e0
  41d7af:	or     edi,esp
  41d7b1:	test   BYTE PTR ds:0xa3474b48,0xb8
  41d7b8:	xchg   ebp,eax
  41d7b9:	mov    al,ds:0xa4133f3a
  41d7be:	xor    eax,0x54522270
  41d7c3:	mov    ecx,0x57d409ec
  41d7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c9:	cmp    DWORD PTR [esi+0x13],eax
  41d7cc:	inc    edx
  41d7cd:	retf   
  41d7ce:	push   0x32073602
  41d7d3:	cwde   
  41d7d4:	lea    ecx,[ebx-0xf85a644]
  41d7da:	ret    
  41d7db:	and    eax,0x734a884e
  41d7e0:	xor    edi,esp
  41d7e2:	retf   0x3506
  41d7e5:	cmp    dl,bl
  41d7e7:	mov    ds:0x125da99d,al
  41d7ec:	mov    BYTE PTR [ecx],dh
  41d7ee:	push   ecx
  41d7ef:	add    esp,DWORD PTR [eax]
  41d7f1:	or     eax,ebx
  41d7f3:	ins    DWORD PTR es:[edi],dx
  41d7f4:	xor    BYTE PTR [esi],dl
  41d7f6:	es and al,0x8c
  41d7f9:	mov    dl,0xea
  41d7fb:	arpl   WORD PTR [esi-0x43],di
  41d7fe:	mov    BYTE PTR [edx+0x6d],ch
  41d801:	(bad)  
  41d802:	dec    esp
  41d803:	mov    ebx,0x6190b2c8
  41d808:	jno    0x41d7f2
  41d80a:	retf   
  41d80b:	cld    
  41d80c:	maskmovq mm5,(bad)
  41d80d:	imul   DWORD PTR [edi+0x140769be]
  41d813:	dec    edi
  41d814:	and    ebx,DWORD PTR [edx]
  41d816:	push   edx
  41d817:	(bad)  
  41d818:	bound  esp,QWORD PTR [ecx+0x1b7b9e33]
  41d81e:	and    ah,ch
  41d820:	sub    cl,BYTE PTR [si]
  41d823:	or     BYTE PTR [ecx+0x18],ch
  41d826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d827:	push   ebx
  41d828:	icebp  
  41d829:	ror    BYTE PTR [esi],cl
  41d82b:	mov    cl,0xa2
  41d82d:	sbb    ebp,DWORD PTR [ebp+0x40da6a42]
  41d833:	lds    esp,FWORD PTR [edx+0x6032d69d]
  41d839:	fiadd  WORD PTR [ebp+0x1d7ece79]
  41d83f:	inc    esp
  41d840:	hlt    
  41d841:	mov    eax,0xc2cfad20
  41d846:	retf   0xf25d
  41d849:	jnp    0x41d7e6
  41d84b:	cld    
  41d84c:	jg     0x41d863
  41d84e:	xor    eax,0xa8803d04
  41d853:	jno    0x41d816
  41d855:	pop    ds
  41d856:	mov    WORD PTR [ebp+0x5c368b58],?
  41d85c:	sti    
  41d85d:	and    edi,DWORD PTR [ebx+eiz*1+0x6f]
  41d861:	jnp    0x41d8b3
  41d863:	or     eax,ecx
  41d865:	and    cl,0xca
  41d868:	inc    edi
  41d869:	aaa    
  41d86a:	or     ah,BYTE PTR ss:[esi+0x74]
  41d86e:	test   cl,dl
  41d870:	call   0x26969d33
  41d875:	sub    edi,ebx
  41d877:	retf   0x76d2
  41d87a:	test   al,0xb3
  41d87c:	je     0x41d829
  41d87e:	sub    eax,0xf2f689a5
  41d883:	arpl   WORD PTR [edi+ebx*8+0x56],dx
  41d887:	jl     0x41d8be
  41d889:	sub    BYTE PTR [esi],ah
  41d88b:	ins    DWORD PTR es:[edi],dx
  41d88c:	lods   eax,DWORD PTR ds:[esi]
  41d88d:	push   ebp
  41d88e:	dec    edx
  41d88f:	mov    eax,0xdde943ff
  41d894:	mov    edi,0x1bf3262f
  41d899:	xor    eax,0x1135c46e
  41d89e:	dec    esi
  41d89f:	mov    ch,0x9c
  41d8a1:	jmp    0x41d83c
  41d8a3:	aaa    
  41d8a4:	xchg   ebx,eax
  41d8a5:	sbb    BYTE PTR [edx],ah
  41d8a7:	pushf  
  41d8a8:	retf   0x2e56
  41d8ab:	aam    0x9a
  41d8ad:	call   0xe6fb:0xf1958d5c
  41d8b4:	addr16 pusha 
  41d8b6:	es jo  0x41d8af
  41d8b9:	ja     0x41d8c6
  41d8bb:	inc    ecx
  41d8bc:	into   
  41d8bd:	xchg   ah,al
  41d8bf:	ret    0x8254
  41d8c2:	loop   0x41d864
  41d8c4:	js     0x41d8a2
  41d8c6:	mov    eax,0xc2de9e64
  41d8cb:	mov    cs,WORD PTR [edx-0x1243b1a7]
  41d8d1:	inc    ebx
  41d8d2:	aad    0xc2
  41d8d4:	call   0xbaac9e83
  41d8d9:	add    eax,0x88edacae
  41d8de:	and    esp,ebp
  41d8e0:	jns    0x41d8d9
  41d8e2:	mov    bh,0x2b
  41d8e4:	jmp    DWORD PTR [edi+0x4c]
  41d8e7:	(bad)
  41d8ea:	(bad)
  41d8ed:	jae    0x41d8fb
  41d8ef:	inc    esi
  41d8f0:	stos   BYTE PTR es:[edi],al
  41d8f1:	dec    eax
  41d8f2:	pop    ebx
  41d8f3:	pop    ss
  41d8f4:	retf   
  41d8f5:	lock imul edx,esp,0xa79f4e67
  41d8fc:	outs   dx,DWORD PTR ds:[esi]
  41d8fd:	sub    bh,BYTE PTR [edi]
  41d8ff:	push   ebp
  41d900:	dec    esi
  41d901:	mov    esp,0x19a3f08e
  41d906:	xchg   edx,eax
  41d907:	mov    eax,ds:0xd833825
  41d90c:	pop    esi
  41d90d:	pop    eax
  41d90e:	mov    dl,0x9a
  41d910:	xchg   esi,eax
  41d911:	mov    eax,0xcffa3d9c
  41d916:	push   edx
  41d917:	jecxz  0x41d93b
  41d919:	jo     0x41d89f
  41d91b:	clc    
  41d91c:	leave  
  41d91d:	adc    ecx,ecx
  41d91f:	mov    eax,ds:0x641e410b
  41d924:	fld    TBYTE PTR [edi-0x3f9e642a]
  41d92a:	or     al,0xe
  41d92c:	adc    BYTE PTR [eax],ah
  41d92e:	popa   
  41d92f:	push   edi
  41d930:	test   al,0xdd
  41d932:	adc    cl,0xc
  41d935:	les    esi,FWORD PTR [eax]
  41d937:	dec    ecx
  41d938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d939:	xlat   BYTE PTR ds:[ebx]
  41d93a:	(bad)  [edi-0x61a6f69c]
  41d940:	aas    
  41d941:	xor    eax,ebp
  41d943:	jo     0x41d8f3
  41d945:	ins    BYTE PTR es:[edi],dx
  41d946:	jle    0x41d99f
  41d948:	or     BYTE PTR [ecx],ah
  41d94a:	xchg   ebp,eax
  41d94b:	clc    
  41d94c:	jb     0x41d974
  41d94e:	fidivr DWORD PTR ds:0xb265a3d4
  41d954:	mov    ecx,0xe8448383
  41d959:	xlat   BYTE PTR ds:[ebx]
  41d95a:	addr16 inc edx
  41d95c:	add    bh,BYTE PTR [esi]
  41d95e:	test   DWORD PTR [esi-0x76a04ec6],esi
  41d964:	les    esi,FWORD PTR [ecx]
  41d966:	pop    es
  41d967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d968:	lods   al,BYTE PTR ds:[esi]
  41d969:	jb     0x41d9a2
  41d96b:	add    BYTE PTR [ebx-0x77],0xaf
  41d96f:	mov    ah,0x33
  41d971:	push   cs
  41d972:	cmp    DWORD PTR [edx],0x4cc0c1d3
  41d978:	loope  0x41d911
  41d97a:	xor    esi,DWORD PTR [ecx+ebp*1-0x11ea6666]
  41d981:	stc    
  41d982:	xor    BYTE PTR [esi-0x6e],al
  41d985:	fsubr  DWORD PTR ds:0xb756215
  41d98b:	and    edx,eax
  41d98d:	adc    DWORD PTR [ebp+edx*4+0x24],ecx
  41d991:	in     al,0xb8
  41d993:	enter  0x2881,0x25
  41d997:	outs   dx,DWORD PTR ds:[esi]
  41d998:	xor    al,0xec
  41d99a:	jmp    FWORD PTR [ebx+0x42437042]
  41d9a0:	ds inc esp
  41d9a2:	retf   
  41d9a3:	push   ebx
  41d9a4:	push   esi
  41d9a5:	cmp    dh,BYTE PTR [ebp+eax*1+0x17ccc35a]
  41d9ac:	inc    edx
  41d9ad:	nop
  41d9ae:	jnp    0x41d992
  41d9b0:	jmp    0x897f17cd
  41d9b5:	xchg   BYTE PTR [edx+0x24],ch
  41d9b8:	pop    ss
  41d9b9:	out    dx,al
  41d9ba:	mov    ds:0x1670dbdc,eax
  41d9bf:	cmp    ecx,ebp
  41d9c1:	mov    eax,ds:0x3d4ce78e
  41d9c6:	jp     0x41d95e
  41d9c8:	dec    edi
  41d9c9:	dec    ebp
  41d9ca:	test   al,0x69
  41d9cc:	or     dh,BYTE PTR [eax+eiz*8+0x6e]
  41d9d0:	pop    ebp
  41d9d1:	gs push edx
  41d9d3:	cld    
  41d9d4:	lea    ebx,[edi+0x5041553e]
  41d9da:	push   ecx
  41d9db:	fild   DWORD PTR [edi-0x3b]
  41d9de:	and    al,0xab
  41d9e0:	imul   DWORD PTR [edx+0x628ac14]
  41d9e6:	fild   WORD PTR ds:0xa0a73d9c
  41d9ec:	xchg   ecx,eax
  41d9ed:	adc    di,WORD PTR [ecx+ebp*1]
  41d9f1:	inc    edi
  41d9f2:	push   eax
  41d9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f4:	cmp    al,0x32
  41d9f6:	pop    esp
  41d9f7:	icebp  
  41d9f8:	dec    esi
  41d9f9:	repnz ins DWORD PTR es:[edi],dx
  41d9fb:	jmp    0x36a8:0x74c19859
  41da02:	aam    0x71
  41da04:	data16 mov cl,0xd1
  41da07:	sub    BYTE PTR [ebx],0xf
  41da0a:	sbb    BYTE PTR [eax],0x77
  41da0d:	test   DWORD PTR [esp+eax*2-0x61718428],eax
  41da14:	jo     0x41da7a
  41da16:	ins    BYTE PTR es:[edi],dx
  41da17:	xor    dh,ah
  41da19:	hlt    
  41da1a:	cli    
  41da1b:	outs   dx,BYTE PTR ds:[esi]
  41da1c:	in     al,dx
  41da1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da1e:	mov    BYTE PTR [edx-0x587a9501],0x85
  41da25:	stc    
  41da26:	mov    fs,WORD PTR [ebx+eiz*2]
  41da29:	lds    ecx,FWORD PTR [esp+ebp*1-0xd4fb774]
  41da30:	icebp  
  41da31:	jp     0x41da6d
  41da33:	inc    BYTE PTR [eax-0xb3c530e]
  41da39:	or     al,0x1
  41da3b:	jno    0x41d9ec
  41da3d:	stc    
  41da3e:	pop    esp
  41da3f:	xchg   edi,eax
  41da40:	jo     0x41daa7
  41da42:	(bad)  
  41da43:	mov    ebp,0xdbc4691c
  41da48:	or     bl,bl
  41da4a:	xlat   BYTE PTR fs:[ebx]
  41da4c:	mov    al,ds:0x9daf65c9
  41da51:	or     al,0x7a
  41da53:	retf   
  41da54:	push   es
  41da55:	push   eax
  41da56:	imul   esp,edi,0xb19c2b73
  41da5c:	pop    esp
  41da5d:	xchg   edi,eax
  41da5e:	scas   eax,DWORD PTR es:[edi]
  41da5f:	in     al,dx
  41da60:	iret   
  41da61:	loopne 0x41daad
  41da63:	xor    al,BYTE PTR [ebp+0x211bf15c]
  41da69:	mov    edx,0x868bf689
  41da6e:	jmp    0x41dae3
  41da70:	sbb    edi,DWORD PTR [eax+0x5c73cae6]
  41da76:	call   0xd805e31d
  41da7b:	mov    bl,0x55
  41da7d:	(bad)  
  41da7e:	jbe    0x41da9f
  41da80:	add    edx,DWORD PTR [eax+0x5092f15a]
  41da86:	xchg   al,cl
  41da88:	outs   dx,DWORD PTR ds:[esi]
  41da89:	and    eax,0x2c9a7259
  41da8e:	add    eax,0x271dd49
  41da93:	fwait
  41da94:	std    
  41da95:	jg     0x41da61
  41da97:	pop    ebp
  41da98:	int    0xce
  41da9a:	ss jnp 0x41da2f
  41da9d:	addr16 loop 0x41dabb
  41daa0:	sbb    esp,ecx
  41daa2:	or     eax,0xe0bfafb6
  41daa7:	pop    DWORD PTR [ebp+ecx*8-0x64]
  41daab:	jecxz  0x41db15
  41daad:	pop    esi
  41daae:	lds    edx,FWORD PTR [edx]
  41dab0:	inc    ebp
  41dab1:	push   0x7d
  41dab3:	dec    esi
  41dab4:	xor    dl,BYTE PTR ds:0x753cf83f
  41daba:	(bad)  
  41dabb:	cmp    DWORD PTR [eax],eax
  41dabd:	adc    BYTE PTR [ebp+0x6e323252],bh
  41dac3:	fdivr  QWORD PTR [ebp+ebx*2-0x782972ac]
  41daca:	jmp    0x3a19:0xcfdcb061
  41dad1:	int    0xe3
  41dad3:	or     eax,0x1a2a903
  41dad8:	in     al,dx
  41dad9:	fdivp  st(1),st
  41dadb:	or     eax,esi
  41dadd:	ficomp DWORD PTR [edi]
  41dadf:	push   eax
  41dae0:	out    dx,eax
  41dae1:	add    eax,0xcc2edd69
  41dae6:	repz icebp 
  41dae8:	jmp    0x41da76
  41daea:	dec    eax
  41daeb:	sbb    BYTE PTR [ebp-0x69a9441c],dh
  41daf1:	sub    al,0x98
  41daf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf4:	call   0xd5a7f3c8
  41daf9:	push   esp
  41dafa:	stos   DWORD PTR es:[edi],eax
  41dafb:	jp     0x41dafe
  41dafd:	pop    esp
  41dafe:	jb     0x41dadb
  41db00:	add    eax,0x2e57f05b
  41db05:	fs cmc 
  41db07:	(bad)  
  41db08:	clc    
  41db09:	out    0xb5,al
  41db0b:	adc    ecx,DWORD PTR [ecx+0x491999cb]
  41db11:	and    al,0xb3
  41db13:	std    
  41db14:	xchg   edx,eax
  41db15:	aaa    
  41db16:	add    ah,al
  41db18:	test   eax,0xbc6f3fa0
  41db1d:	inc    esp
  41db1e:	dec    eax
  41db1f:	sar    BYTE PTR [ebx+0x6a],0x2a
  41db23:	in     al,dx
  41db24:	mov    edx,0x88863b22
  41db29:	out    0x14,al
  41db2b:	iret   
  41db2c:	pop    edx
  41db2d:	mov    al,0xea
  41db2f:	mov    al,0xe8
  41db31:	je     0x41db99
  41db33:	inc    ebp
  41db34:	cmp    DWORD PTR [edx-0x9],ecx
  41db37:	js     0x41db29
  41db39:	adc    eax,0xfdafde98
  41db3e:	add    BYTE PTR [ecx-0x1a],al
  41db41:	fcom   QWORD PTR [edi]
  41db43:	mov    bl,0x9a
  41db45:	mov    esi,0xb9dd6856
  41db4a:	push   cs
  41db4b:	xor    DWORD PTR [edx],edi
  41db4d:	inc    esi
  41db4e:	(bad)  
  41db4f:	sub    al,0xf0
  41db51:	sar    DWORD PTR [ecx+0x36],0xac
  41db55:	push   0xffffffd9
  41db57:	test   cl,al
  41db59:	daa    
  41db5a:	mov    esp,0xc9a40b06
  41db5f:	mov    dl,0xee
  41db61:	add    BYTE PTR [eiz*4+0x651244c2],al
  41db68:	cmp    DWORD PTR [edx],ecx
  41db6a:	ja     0x41db82
  41db6c:	loop   0x41db75
  41db6e:	inc    edi
  41db6f:	push   cs
  41db70:	adc    dh,bl
  41db72:	sub    ah,BYTE PTR [ebp+0x42]
  41db75:	ds fs pop esi
  41db78:	or     ebx,DWORD PTR [esi+0x7f986012]
  41db7e:	mov    ebp,DWORD PTR [ebx-0x42]
  41db81:	xchg   BYTE PTR [eax-0x2cba3e62],ah
  41db87:	fnstcw WORD PTR [ecx+0x5a]
  41db8a:	out    dx,eax
  41db8b:	icebp  
  41db8c:	and    BYTE PTR [ebx-0xab37ac9],bl
  41db92:	(bad)  
  41db93:	sbb    al,0xb0
  41db95:	sar    DWORD PTR [esi],1
  41db97:	retf   0x44fb
  41db9a:	push   eax
  41db9b:	dec    esi
  41db9c:	dec    esp
  41db9d:	nop
  41db9e:	fs mov edi,0xeeb882c4
  41dba4:	mov    al,dl
  41dba6:	jne    0x41dc0a
  41dba8:	jmp    0xbe21:0xee91a78a
  41dbaf:	stos   BYTE PTR es:[edi],al
  41dbb0:	jmp    0x965ef9a7
  41dbb5:	xor    edi,DWORD PTR [ebp+0x6f]
  41dbb8:	test   DWORD PTR [esi-0x1a],eax
  41dbbb:	sbb    bl,BYTE PTR [edi+edi*1+0x3]
  41dbbf:	jg     0x41db5b
  41dbc1:	mov    dh,0xd6
  41dbc3:	retf   0xb0fd
  41dbc6:	shl    ebp,cl
  41dbc8:	stos   DWORD PTR es:[edi],eax
  41dbc9:	enter  0x45ad,0x7d
  41dbcd:	(bad)  
  41dbce:	mov    ecx,0x82be1eeb
  41dbd3:	shl    DWORD PTR [esi+0x45],0x92
  41dbd7:	inc    edx
  41dbd8:	or     eax,0xcdf24415
  41dbdd:	or     ebx,DWORD PTR [edi+0x78d16d1d]
  41dbe3:	push   ecx
  41dbe4:	loopne 0x41dc63
  41dbe6:	dec    esp
  41dbe7:	ins    DWORD PTR es:[edi],dx
  41dbe8:	pop    es
  41dbe9:	rcr    DWORD PTR [ebp+0xf0a26c2],cl
  41dbef:	add    eax,0xbd885e79
  41dbf4:	mov    ebx,0x290095b
  41dbf9:	pushf  
  41dbfa:	dec    ecx
  41dbfb:	ins    BYTE PTR es:[edi],dx
  41dbfc:	and    cl,BYTE PTR [eax]
  41dbfe:	xor    ecx,eax
  41dc00:	xor    al,0x51
  41dc02:	inc    ecx
  41dc03:	je     0x41dba8
  41dc05:	mov    ebp,0x9b23c0cb
  41dc0a:	pop    es
  41dc0b:	pop    eax
  41dc0c:	sbb    DWORD PTR [edx-0x3c],edx
  41dc0f:	xchg   ecx,eax
  41dc10:	int3   
  41dc11:	pop    ebp
  41dc12:	and    ch,BYTE PTR [edi]
  41dc14:	ss (bad) 
  41dc16:	cli    
  41dc17:	rol    ch,1
  41dc19:	mov    ecx,0xba639171
  41dc1e:	push   0x5d
  41dc20:	jmp    0xe1bc:0x9ddb35ea
  41dc27:	sub    al,BYTE PTR [edx-0x75815011]
  41dc2d:	ret    
  41dc2e:	addr16 mov esp,0x82a122c8
  41dc34:	and    ecx,DWORD PTR [eax-0xb]
  41dc37:	xchg   esi,eax
  41dc38:	aaa    
  41dc39:	dec    esp
  41dc3a:	mov    bl,0x23
  41dc3c:	sbb    eax,0xb0b520cb
  41dc41:	das    
  41dc42:	(bad)  
  41dc43:	ins    BYTE PTR es:[edi],dx
  41dc44:	dec    edx
  41dc45:	nop
  41dc46:	sbb    BYTE PTR [ecx],dl
  41dc48:	es xor eax,0xcc177460
  41dc4e:	(bad)  
  41dc4f:	mov    WORD PTR [edx+esi*8+0x36e6709f],es
  41dc56:	lods   eax,DWORD PTR ds:[esi]
  41dc57:	sub    al,0x70
  41dc59:	mov    cl,0xb5
  41dc5b:	imul   ecx,eax,0x8fe99226
  41dc61:	xchg   esp,eax
  41dc62:	and    ecx,DWORD PTR [ecx+0x61]
  41dc65:	ins    DWORD PTR es:[edi],dx
  41dc66:	lods   al,BYTE PTR ds:[esi]
  41dc67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc68:	add    BYTE PTR [edx-0x71],al
  41dc6b:	jecxz  0x41dc71
  41dc6d:	jb     0x41dcd9
  41dc6f:	cli    
  41dc70:	xlat   BYTE PTR ds:[ebx]
  41dc71:	scas   eax,DWORD PTR es:[edi]
  41dc72:	ds leave 
  41dc74:	sahf   
  41dc75:	aam    0x13
  41dc77:	dec    DWORD PTR [ecx+edi*4]
  41dc7a:	popa   
  41dc7b:	jns    0x41dce9
  41dc7d:	mov    eax,ds:0x7b234f0f
  41dc82:	pop    ebx
  41dc83:	mov    esp,0xe65b517a
  41dc88:	push   esi
  41dc89:	jge    0x41dc79
  41dc8b:	into   
  41dc8c:	push   edi
  41dc8d:	mov    DWORD PTR [esi+ebx*2+0x61],ebp
  41dc91:	push   esp
  41dc92:	cdq    
  41dc93:	xchg   edx,eax
  41dc94:	mov    DWORD PTR [ebx],eax
  41dc96:	jbe    0x41dca1
  41dc98:	aam    0x4b
  41dc9a:	aaa    
  41dc9b:	xchg   DWORD PTR [esi],edx
  41dc9d:	cmp    bl,BYTE PTR [edi+0x52]
  41dca0:	in     eax,dx
  41dca1:	mov    cl,0x32
  41dca3:	mov    bh,0xef
  41dca5:	cmp    al,0x64
  41dca7:	sbb    edx,DWORD PTR [ebx]
  41dca9:	push   0xd4961563
  41dcae:	push   es
  41dcaf:	and    DWORD PTR [ebx+0x71],ebp
  41dcb2:	mov    cl,BYTE PTR [ebp-0x5f]
  41dcb5:	outs   dx,BYTE PTR ds:[esi]
  41dcb6:	sub    al,0x93
  41dcb8:	repz push edi
  41dcba:	xchg   bl,cl
  41dcbc:	cmp    bl,cl
  41dcbe:	pop    ss
  41dcbf:	test   DWORD PTR [edx+0x21],0x6e856ef2
  41dcc6:	retf   0x11de
  41dcc9:	pusha  
  41dcca:	shl    BYTE PTR [edx-0x75],0x7c
  41dcce:	xchg   ebp,eax
  41dccf:	test   DWORD PTR [ebp-0x38b31864],edx
  41dcd5:	and    ecx,DWORD PTR [eax-0x7d]
  41dcd8:	mov    WORD PTR [eax],?
  41dcda:	add    DWORD PTR [edi-0x1ec6df24],0xffffffd9
  41dce1:	inc    edi
  41dce2:	fadd   st(7),st
  41dce4:	mov    esi,0x20916074
  41dce9:	arpl   dx,sp
  41dceb:	sbb    edx,DWORD PTR [ebx+ebx*1]
  41dcee:	pop    ebx
  41dcef:	cmp    eax,0x122a560a
  41dcf4:	popw   ss
  41dcf6:	sbb    BYTE PTR [ecx],bl
  41dcf8:	scas   al,BYTE PTR es:[edi]
  41dcf9:	arpl   WORD PTR [edi-0xd],dx
  41dcfc:	xor    dl,BYTE PTR [eax-0x2f92c314]
  41dd02:	xor    BYTE PTR [edi],dl
  41dd04:	jno    0x41dd47
  41dd06:	out    0x28,eax
  41dd08:	je     0x41dd70
  41dd0a:	xor    ah,BYTE PTR [ebx]
  41dd0c:	xchg   esi,eax
  41dd0d:	imul   edi,DWORD PTR [eax+0x17],0xfa25e126
  41dd14:	sub    BYTE PTR [esi-0x50],bh
  41dd17:	and    ebp,DWORD PTR ds:0x15a078f
  41dd1d:	cld    
  41dd1e:	mov    esi,0x361d41b4
  41dd23:	fs (bad) 
  41dd25:	dec    esp
  41dd26:	add    al,0x3f
  41dd28:	mov    bh,0x5f
  41dd2a:	cmp    eax,0x74269a0
  41dd2f:	inc    ecx
  41dd30:	jns    0x41dd90
  41dd32:	jmp    0x41dd19
  41dd34:	cmp    al,0x1f
  41dd36:	lock and cl,dh
  41dd39:	pusha  
  41dd3a:	loopne 0x41dd66
  41dd3c:	cdq    
  41dd3d:	inc    ecx
  41dd3e:	sub    al,0xa
  41dd40:	ret    
  41dd41:	sbb    ah,ch
  41dd43:	aad    0x3c
  41dd45:	les    edx,FWORD PTR [ebx]
  41dd47:	cmp    ah,BYTE PTR ds:0x59b59e7a
  41dd4d:	sub    BYTE PTR [edx],ah
  41dd4f:	mov    edx,DWORD PTR [esi+eax*1-0x1fdd9417]
  41dd56:	jge    0x41dd0f
  41dd58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd59:	div    BYTE PTR [esi-0x63f8f010]
  41dd5f:	xchg   ebp,eax
  41dd60:	sahf   
  41dd61:	dec    ebp
  41dd62:	and    eax,0x87d0df40
  41dd67:	inc    esi
  41dd68:	mov    dh,0x52
  41dd6a:	add    eax,0x4252009
  41dd6f:	xor    DWORD PTR [ecx+0x12],edx
  41dd72:	pop    ds
  41dd73:	adc    ecx,DWORD PTR [edi]
  41dd75:	jle    0x41dd3d
  41dd77:	icebp  
  41dd78:	popf   
  41dd79:	mov    al,ds:0xda685645
  41dd7e:	ss hlt 
  41dd80:	add    edx,DWORD PTR [edi]
  41dd82:	fsub   DWORD PTR [edx]
  41dd84:	mov    edx,0xfc11e01f
  41dd89:	mov    DWORD PTR [edi-0x7796dc96],edi
  41dd8f:	fisttp WORD PTR [ecx]
  41dd91:	sbb    bl,BYTE PTR [eax]
  41dd93:	pop    eax
  41dd94:	xor    DWORD PTR [edi-0x665ac07e],ecx
  41dd9a:	cdq    
  41dd9b:	pop    edi
  41dd9c:	sbb    DWORD PTR [ebx-0x21c787a0],esi
  41dda2:	cmp    esi,esp
  41dda4:	lods   al,BYTE PTR ds:[esi]
  41dda5:	xchg   ebp,eax
  41dda6:	fmul   QWORD PTR [ecx-0x4122fe07]
  41ddac:	dec    eax
  41ddad:	fdivr  DWORD PTR [esp+ecx*1]
  41ddb0:	sti    
  41ddb1:	dec    eax
  41ddb2:	or     al,0xb
  41ddb4:	pop    esp
  41ddb5:	mov    ebx,DWORD PTR [eax+0x9b28e6c]
  41ddbb:	or     BYTE PTR [edx+0x2d],bl
  41ddbe:	mov    al,BYTE PTR [esi]
  41ddc0:	jb     0x41de17
  41ddc2:	inc    edi
  41ddc3:	inc    esp
  41ddc4:	cmp    al,0x47
  41ddc6:	shl    DWORD PTR [ecx],0xa6
  41ddc9:	(bad)  
  41ddca:	mov    cl,0xe6
  41ddcc:	or     al,ah
  41ddce:	bound  ebx,QWORD PTR ds:0x5b714fe8
  41ddd4:	sub    ebp,DWORD PTR [edi+0x45d046ae]
  41ddda:	mov    BYTE PTR [esi-0x4d9ccdfe],al
  41dde0:	jbe    0x41ddaa
  41dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde3:	icebp  
  41dde4:	repz iret 
  41dde6:	enter  0xdd1c,0x8c
  41ddea:	xchg   esp,eax
  41ddeb:	pop    esp
  41ddec:	jge    0x41dd98
  41ddee:	sub    eax,DWORD PTR [edx-0x6383c78]
  41ddf4:	pushf  
  41ddf5:	nop
  41ddf6:	push   eax
  41ddf7:	leave  
  41ddf8:	xor    ch,BYTE PTR [eax+0x134005a9]
  41ddfe:	jmp    0x4dbcc16c
  41de03:	leave  
  41de04:	sahf   
  41de05:	mov    ebp,0xb4e94adb
  41de0a:	mov    edx,DWORD PTR [eax+0xc]
  41de0d:	or     BYTE PTR [ecx],bl
  41de0f:	sbb    eax,0x569709b
  41de14:	dec    esi
  41de15:	xchg   ebx,eax
  41de16:	dec    edx
  41de17:	enter  0x774d,0x16
  41de1b:	add    BYTE PTR ds:0x418ec980,cl
  41de21:	add    bl,BYTE PTR [ebx-0xad406b]
  41de27:	xchg   ebx,eax
  41de28:	mov    bl,BYTE PTR [ebx+0x51ee2615]
  41de2e:	outs   dx,DWORD PTR ds:[esi]
  41de2f:	stc    
  41de30:	ss int3 
  41de32:	repz or DWORD PTR [ebx-0x66428344],ebp
  41de39:	sub    edi,DWORD PTR [esi+0x5b9fdef3]
  41de3f:	sub    esp,ecx
  41de41:	and    esp,eax
  41de43:	neg    DWORD PTR [ebx-0x65]
  41de46:	loope  0x41dde8
  41de48:	or     al,0x64
  41de4a:	and    eax,0x124e9cd
  41de4f:	inc    ecx
  41de50:	retf   
  41de51:	test   eax,0x471c97d8
  41de56:	lds    ecx,FWORD PTR [edx-0x5b2bd510]
  41de5c:	rcl    BYTE PTR [edx+0x58],cl
  41de5f:	and    cl,BYTE PTR es:[edi+0x6a289f8a]
  41de66:	seta   BYTE PTR [ebx-0x3e08f05a]
  41de6d:	mov    ds:0x8180aaa3,al
  41de72:	pushf  
  41de73:	inc    edi
  41de74:	inc    eax
  41de75:	push   ebp
  41de76:	dec    edi
  41de77:	(bad)  
  41de78:	leave  
  41de79:	add    cl,bh
  41de7b:	push   edx
  41de7c:	cmp    al,0xf0
  41de7e:	sbb    dl,BYTE PTR [ebx-0x60196080]
  41de84:	mov    dh,BYTE PTR [ebx-0x187e651e]
  41de8a:	out    dx,eax
  41de8b:	rcl    DWORD PTR [edx-0x7616e4cd],1
  41de91:	std    
  41de92:	pop    ebp
  41de93:	push   esi
  41de94:	ja     0x41deb6
  41de96:	nop
  41de97:	adc    al,0xa9
  41de99:	loope  0x41de28
  41de9b:	xor    edi,ebx
  41de9d:	(bad)  
  41de9e:	in     al,dx
  41de9f:	sub    eax,0x36a44b4f
  41dea4:	add    ebx,ecx
  41dea6:	xchg   ebx,eax
  41dea7:	stos   DWORD PTR es:[edi],eax
  41dea8:	add    BYTE PTR [bx],al
  41deab:	cmp    BYTE PTR [esi-0x55],ch
  41deae:	test   bh,dl
  41deb0:	inc    ecx
  41deb1:	fstp   DWORD PTR [edx]
  41deb3:	ja     0x41de4e
  41deb5:	mov    ds:0xd2005aba,eax
  41deba:	fninit 
  41debc:	jmp    0x9e24:0xaab3cc42
  41dec3:	pop    ebx
  41dec4:	cmc    
  41dec5:	ja     0x41df19
  41dec7:	loope  0x41dec0
  41dec9:	aaa    
  41deca:	cs gs sub eax,0xd37552ba
  41ded1:	push   eax
  41ded2:	jl     0x41df31
  41ded4:	xorps  xmm3,XMMWORD PTR [esi-0x6717f988]
  41dedb:	mov    eax,0xa949fd4e
  41dee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dee1:	sub    eax,0x577a374b
  41dee6:	and    dl,BYTE PTR [eax+0x65]
  41dee9:	push   0x73
  41deeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deec:	add    DWORD PTR [eax],ecx
  41deee:	cmp    bh,BYTE PTR [eax+esi*1+0x36]
  41def2:	dec    esi
  41def3:	loope  0x41df11
  41def5:	cmp    bh,dh
  41def7:	outs   dx,BYTE PTR ds:[esi]
  41def8:	cli    
  41def9:	inc    esi
  41defa:	cmp    edx,edi
  41defc:	push   esi
  41defd:	xor    BYTE PTR [esi],dh
  41deff:	lahf   
  41df00:	cs pop esi
  41df02:	adc    ecx,DWORD PTR [eax-0x20616757]
  41df08:	jp     0x41df59
  41df0a:	push   ecx
  41df0b:	mov    edi,0x36979806
  41df10:	lds    ebp,FWORD PTR [ecx]
  41df12:	jg     0x41df5a
  41df14:	hlt    
  41df15:	and    eax,0xfac1e24f
  41df1a:	fs fcomip st,st(7)
  41df1d:	inc    esp
  41df1e:	or     BYTE PTR [ebx+0x1b],0x2a
  41df22:	in     eax,dx
  41df23:	adc    edi,DWORD PTR [ebp+0x6b]
  41df26:	push   eax
  41df27:	imul   esi
  41df29:	mov    esi,0x82be1197
  41df2e:	test   BYTE PTR [ebx-0x635843d7],dl
  41df34:	imul   ebx,DWORD PTR [ebx-0x24],0xffffffac
  41df38:	push   ebp
  41df39:	dec    ebx
  41df3a:	push   ss
  41df3b:	push   esp
  41df3c:	icebp  
  41df3d:	inc    esi
  41df3e:	dec    ecx
  41df3f:	mov    bl,0x7a
  41df41:	and    al,0x31
  41df43:	mov    eax,0x46f2f92b
  41df48:	in     al,dx
  41df49:	pop    ss
  41df4a:	arpl   WORD PTR [ebx],di
  41df4c:	jg     0x41df0b
  41df4e:	(bad)  
  41df4f:	xchg   edi,eax
  41df50:	pop    edi
  41df51:	add    eax,0x6010a592
  41df56:	push   eax
  41df57:	dec    ebx
  41df58:	in     al,0xa9
  41df5a:	pusha  
  41df5b:	fdivr  QWORD PTR [ebx-0xd]
  41df5e:	fsub   st(5),st
  41df60:	mov    ecx,0xe2b5ed00
  41df65:	mov    bh,0x5
  41df67:	dec    ecx
  41df68:	std    
  41df69:	enter  0xa172,0x8d
  41df6d:	mov    WORD PTR [ebx+ecx*4-0x5256d6a4],?
  41df74:	rcr    BYTE PTR [ebx-0x3f],1
  41df77:	mov    BYTE PTR [edx+0x10],bh
  41df7a:	clc    
  41df7b:	(bad)  
  41df7c:	jp     0x41dfd2
  41df7e:	nop
  41df7f:	pop    ds
  41df80:	jno    0x41dff2
  41df82:	je     0x41df8e
  41df84:	and    eax,0x2e09e27a
  41df89:	cmp    al,0x2b
  41df8b:	je     0x41df9a
  41df8d:	aaa    
  41df8e:	data16 fistp WORD PTR cs:[edi-0x6a]
  41df93:	xchg   esp,eax
  41df94:	xor    DWORD PTR [edi],edi
  41df96:	mov    esp,0x4393dfe0
  41df9b:	push   0xfaaf98d3
  41dfa0:	sub    bh,BYTE PTR [esi]
  41dfa2:	imul   edi,DWORD PTR [esi+eiz*4-0x77],0x3de4d55
  41dfaa:	sahf   
  41dfab:	inc    ebx
  41dfac:	sbb    al,0x18
  41dfae:	xchg   esp,esp
  41dfb0:	stos   BYTE PTR es:[edi],al
  41dfb1:	mov    WORD PTR [edx+0x45],fs
  41dfb4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfb6:	jo     0x41dfc0
  41dfb8:	fsubr  st(2),st
  41dfba:	clc    
  41dfbb:	cmp    eax,0x2299d8ea
  41dfc0:	add    BYTE PTR [ebx+0x27c84326],ah
  41dfc6:	rol    DWORD PTR [edi-0x4dc37b6b],1
  41dfcc:	mov    ecx,0x7f9749a9
  41dfd1:	push   0x42721d9d
  41dfd6:	call   0x78bd:0x5866b231
  41dfdd:	call   0x29ab:0x9c392029
  41dfe4:	or     ebx,DWORD PTR [esi-0x7fec47a6]
  41dfea:	xor    BYTE PTR [ebx+ecx*2-0x3d],bl
  41dfee:	xlat   BYTE PTR ds:[ebx]
  41dfef:	xor    BYTE PTR [edi],dh
  41dff1:	and    ax,0x7c0d
  41dff5:	call   0xe667:0xff042d1d
  41dffc:	push   ecx
  41dffd:	cmp    esp,esp
  41dfff:	bound  esp,QWORD PTR [eax]
  41e001:	addr16 jae 0x41df88
  41e004:	jno    0x41e049
  41e006:	inc    ebx
  41e007:	pop    es
  41e008:	or     al,0x28
  41e00a:	or     BYTE PTR ds:0xd2da1132,cl
  41e010:	add    esi,DWORD PTR [edi+0x3e95916c]
  41e016:	dec    ecx
  41e017:	mov    ecx,0x901c453
  41e01c:	cmp    cl,BYTE PTR [eax-0x3a]
  41e01f:	xchg   ebx,eax
  41e020:	mov    cl,0xb6
  41e022:	sub    esi,DWORD PTR ds:0xa1c5cb44
  41e028:	or     bh,0x26
  41e02b:	add    edx,DWORD PTR [ebx+edx*2-0x7d1a1239]
  41e032:	(bad)  
  41e033:	pusha  
  41e034:	pop    ebx
  41e035:	imul   ebp,eax,0x18
  41e038:	(bad)
  41e03b:	dec    esp
  41e03c:	out    dx,eax
  41e03d:	in     al,dx
  41e03e:	cmp    al,0x2d
  41e040:	int    0xb6
  41e042:	push   ss
  41e043:	and    bh,al
  41e045:	mov    DWORD PTR [eax],eax
  41e047:	mov    al,0xeb
  41e049:	cmp    eax,0x9f3cbfca
  41e04e:	clc    
  41e04f:	cmp    DWORD PTR [ebp+0x206e83ad],eax
  41e055:	(bad)  
  41e056:	outs   dx,DWORD PTR ds:[esi]
  41e057:	shl    DWORD PTR [ecx+eiz*8-0x5f147520],1
  41e05e:	ffree  st(5)
  41e060:	loop   0x41e05e
  41e062:	fcmovnb st,st(0)
  41e064:	inc    edx
  41e065:	outs   dx,DWORD PTR ds:[esi]
  41e066:	xchg   ebx,eax
  41e067:	mov    ah,0xb9
  41e069:	or     cl,BYTE PTR [eax+0x49]
  41e06c:	test   DWORD PTR [edi],edi
  41e06e:	popf   
  41e06f:	mov    ah,0x15
  41e071:	jo     0x41e0af
  41e073:	loope  0x41e001
  41e075:	or     ecx,DWORD PTR [bp-0x5a]
  41e079:	nop
  41e07a:	out    0x3b,eax
  41e07c:	inc    ebx
  41e07d:	dec    DWORD PTR [esi-0xb]
  41e080:	call   0x1bfde0a9
  41e085:	shl    DWORD PTR fs:[ecx+0x5b],0xd0
  41e08a:	mov    WORD PTR ds:0x36021ecb,?
  41e090:	outs   dx,BYTE PTR ds:[esi]
  41e091:	dec    ebx
  41e092:	inc    esi
  41e093:	dec    esi
  41e094:	ins    DWORD PTR es:[edi],dx
  41e095:	sar    edx,0x89
  41e098:	ds pop ebp
  41e09a:	xchg   ecx,eax
  41e09b:	outs   dx,BYTE PTR ds:[esi]
  41e09c:	mov    ax,ds:0x3f7ff8df
  41e0a2:	cld    
  41e0a3:	jmp    0x8253ba55
  41e0a8:	mov    ds:0x55fd8897,al
  41e0ad:	pop    esi
  41e0ae:	std    
  41e0af:	in     al,dx
  41e0b0:	stc    
  41e0b1:	stc    
  41e0b2:	test   eax,0xf8850d8c
  41e0b7:	push   ds
  41e0b8:	imul   esi,DWORD PTR [edi-0xc],0xb84747c8
  41e0bf:	in     eax,0xb2
  41e0c1:	das    
  41e0c2:	shr    DWORD PTR [ebx-0x6a],0xbb
  41e0c6:	jmp    0x41e0b1
  41e0c8:	xor    al,0x46
  41e0ca:	jecxz  0x41e089
  41e0cc:	fwait
  41e0cd:	in     eax,dx
  41e0ce:	and    DWORD PTR [edx],eax
  41e0d0:	int    0xd9
  41e0d2:	adc    al,0x58
  41e0d4:	(bad)  
  41e0d5:	mov    esi,0xbb9db920
  41e0da:	imul   ecx,DWORD PTR [eax-0x71],0xffffff83
  41e0de:	shl    DWORD PTR [eax],1
  41e0e0:	ret    0xed8e
  41e0e3:	or     ah,BYTE PTR [eax]
  41e0e5:	call   0x22cff6c1
  41e0ea:	cld    
  41e0eb:	xchg   edx,eax
  41e0ec:	icebp  
  41e0ed:	xor    eax,DWORD PTR [ebp-0xe0c3810]
  41e0f3:	ret    
  41e0f4:	mov    bh,BYTE PTR [eax+0x25c60c2b]
  41e0fa:	ror    DWORD PTR [ecx+0x4d],0xad
  41e0fe:	xchg   edx,eax
  41e0ff:	sbb    dl,dl
  41e101:	dec    ecx
  41e102:	xor    eax,ecx
  41e104:	sub    DWORD PTR [eax-0x69],ebp
  41e107:	loope  0x41e17c
  41e109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e10a:	sbb    BYTE PTR [eax],al
  41e10c:	pop    ebp
  41e10d:	pop    ebp
  41e10e:	or     esi,DWORD PTR [eax-0x1a]
  41e111:	dec    edx
  41e112:	(bad)  
  41e113:	dec    esi
  41e114:	daa    
  41e115:	outs   dx,BYTE PTR ds:[esi]
  41e116:	pop    edi
  41e117:	std    
  41e118:	cmp    al,0x81
  41e11a:	sbb    ebp,esp
  41e11c:	jnp    0x41e18a
  41e11e:	jmp    0x9368:0xd647beed
  41e125:	xor    BYTE PTR [edi],bl
  41e127:	loop   0x41e107
  41e129:	js     0x41e0e4
  41e12b:	cmc    
  41e12c:	or     eax,0x7a9d930e
  41e131:	stc    
  41e132:	mov    al,0xcf
  41e134:	call   0x594d:0x70ad2e7
  41e13b:	sbb    al,BYTE PTR [edi+0x47]
  41e13e:	cmc    
  41e13f:	cmp    DWORD PTR [edx+0x6e900dd6],0x5d
  41e146:	add    bl,BYTE PTR [edx-0x8d3112e]
  41e14c:	mov    dh,dl
  41e14e:	sti    
  41e14f:	cli    
  41e150:	jae    0x41e126
  41e152:	mov    WORD PTR [ebp+0x50],es
  41e155:	retf   
  41e156:	push   esp
  41e157:	add    dl,BYTE PTR [edx+edx*2+0x26]
  41e15b:	and    DWORD PTR [edi],0x5b
  41e15e:	pusha  
  41e15f:	outs   dx,DWORD PTR ds:[esi]
  41e160:	jbe    0x41e128
  41e162:	xchg   esp,eax
  41e163:	sub    eax,0x6b64bbbf
  41e168:	add    eax,0xa4db054d
  41e16d:	sahf   
  41e16e:	popa   
  41e16f:	popf   
  41e170:	ror    DWORD PTR [esi-0x2e1fec2e],cl
  41e176:	(bad)  
  41e177:	push   ss
  41e178:	push   0x86bdc7bc
  41e17d:	test   al,0x8c
  41e17f:	mov    cl,0x1c
  41e181:	imul   BYTE PTR [eax+eax*2-0xb14ce99]
  41e188:	inc    ebp
  41e189:	aam    0xae
  41e18b:	sahf   
  41e18c:	push   es
  41e18d:	push   es
  41e18e:	jae    0x41e142
  41e190:	jae    0x41e13d
  41e192:	fild   DWORD PTR [bp+di]
  41e195:	pop    esp
  41e196:	cmp    BYTE PTR [ecx],0x80
  41e199:	push   ebx
  41e19a:	pop    ss
  41e19b:	test   al,0xdd
  41e19d:	imul   esi,DWORD PTR [ecx-0x69],0x76
  41e1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a2:	inc    ecx
  41e1a3:	xchg   esp,eax
  41e1a4:	inc    ebx
  41e1a5:	mov    eax,0x9173a873
  41e1aa:	hlt    
  41e1ab:	cmp    ch,BYTE PTR [esp+edx*1+0x7765f6d2]
  41e1b2:	xchg   ebp,eax
  41e1b3:	cmp    al,0xc5
  41e1b5:	dec    ebp
  41e1b6:	mov    ebx,es
  41e1b8:	arpl   WORD PTR [esi],sp
  41e1ba:	aaa    
  41e1bb:	jbe    0x41e191
  41e1bd:	inc    ecx
  41e1be:	mov    dh,0xa2
  41e1c0:	popf   
  41e1c1:	xchg   ecx,eax
  41e1c2:	xchg   edx,eax
  41e1c3:	loop   0x41e1cf
  41e1c5:	sub    eax,0x2728c2ad
  41e1ca:	xchg   ebx,eax
  41e1cb:	neg    BYTE PTR [edi]
  41e1cd:	shr    ch,cl
  41e1cf:	push   ss
  41e1d0:	shr    BYTE PTR [ecx],0xf5
  41e1d3:	in     al,0x3e
  41e1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d6:	xlat   BYTE PTR ds:[ebx]
  41e1d7:	mov    edx,0x1d0df621
  41e1dc:	popf   
  41e1dd:	aas    
  41e1de:	push   eax
  41e1df:	mov    esi,0x9c022015
  41e1e4:	cli    
  41e1e5:	je     0x41e22e
  41e1e7:	dec    ch
  41e1e9:	sbb    ecx,ecx
  41e1eb:	ds retf 
  41e1ed:	or     eax,0xc720e374
  41e1f2:	push   esi
  41e1f3:	adc    BYTE PTR [edi+0x64],0x59
  41e1f7:	mov    esi,0x6ede599a
  41e1fc:	fsubr  QWORD PTR [eax-0x30]
  41e1ff:	cs sti 
  41e201:	dec    edi
  41e202:	loop   0x41e1c9
  41e204:	mov    eax,ds:0xafb5cf4e
  41e209:	(bad)  
  41e20a:	rcl    BYTE PTR [eax+0x5ed22090],1
  41e210:	cmp    esp,DWORD PTR [edi+eax*1-0x68]
  41e214:	js     0x41e1aa
  41e216:	push   ebp
  41e217:	and    eax,0x8be83192
  41e21c:	je     0x41e1f6
  41e21e:	push   es
  41e21f:	mov    al,ah
  41e221:	adc    DWORD PTR [ebx],edi
  41e223:	shl    DWORD PTR [ebx],0xa0
  41e226:	pop    ss
  41e227:	ja     0x41e275
  41e229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e22a:	mov    ebp,0x3a55a62b
  41e22f:	popa   
  41e230:	pop    esi
  41e231:	mov    ebp,0xf54143bb
  41e236:	or     esi,DWORD PTR [edi+0x2c7d0b92]
  41e23c:	cs addr16 mov esi,0x719aead7
  41e243:	xchg   esi,eax
  41e244:	std    
  41e245:	call   0xb3616031
  41e24a:	pop    esp
  41e24b:	sbb    DWORD PTR [edi-0x2c0cc103],ebp
  41e251:	pop    esp
  41e252:	or     al,0x2d
  41e254:	dec    esp
  41e255:	(bad)  
  41e257:	mov    ss,WORD PTR [edi+0x58fd06a9]
  41e25d:	mov    DWORD PTR [edx+0x2],esi
  41e260:	dec    eax
  41e261:	outs   dx,BYTE PTR ds:[esi]
  41e262:	mov    dl,ch
  41e264:	xchg   ecx,eax
  41e265:	outs   dx,BYTE PTR ds:[esi]
  41e266:	fbld   TBYTE PTR [edx-0x3b]
  41e269:	mov    BYTE PTR [ebp+0x61],0x7b
  41e26d:	loope  0x41e20a
  41e26f:	jge    0x41e277
  41e271:	jmp    0x41e29d
  41e273:	push   edx
  41e274:	xchg   edx,eax
  41e275:	adc    dh,BYTE PTR [ebx-0x32]
  41e278:	inc    eax
  41e279:	pusha  
  41e27a:	gs pop ecx
  41e27c:	ss push 0xfb540789
  41e282:	cld    
  41e283:	adc    bh,dl
  41e285:	dec    edx
  41e286:	pop    esp
  41e287:	jnp    0x41e248
  41e289:	in     eax,0xad
  41e28b:	test   al,0xd8
  41e28d:	adc    eax,0x40b88b15
  41e292:	mov    BYTE PTR [edi],ah
  41e294:	(bad)  
  41e295:	push   edi
  41e296:	dec    ebx
  41e297:	pop    ds
  41e298:	xchg   edx,eax
  41e299:	int    0x2a
  41e29b:	shr    ebx,0x1b
  41e29e:	jp     0x41e2bd
  41e2a0:	fnstsw WORD PTR [edi+0x42]
  41e2a3:	ja     0x41e29f
  41e2a5:	or     al,0x13
  41e2a7:	dec    edx
  41e2a8:	or     edx,esi
  41e2aa:	cld    
  41e2ab:	adc    eax,0xe3ceba17
  41e2b0:	or     BYTE PTR [edx],ah
  41e2b2:	scas   eax,DWORD PTR es:[edi]
  41e2b3:	das    
  41e2b4:	mov    dl,0x58
  41e2b6:	icebp  
  41e2b7:	xchg   esp,eax
  41e2b8:	out    0xf0,al
  41e2ba:	mov    ecx,0xd42051a0
  41e2bf:	mov    fs,WORD PTR [ebx]
  41e2c1:	shl    edx,1
  41e2c3:	ins    DWORD PTR es:[edi],dx
  41e2c4:	clc    
  41e2c5:	sub    edi,edx
  41e2c7:	xor    BYTE PTR [edi],dl
  41e2c9:	cli    
  41e2ca:	add    cl,BYTE PTR [eax]
  41e2cc:	pop    ebp
  41e2cd:	or     BYTE PTR [edx-0x2a2d4fff],dh
  41e2d3:	and    eax,0x956fccf6
  41e2d8:	gs jg  0x41e2e9
  41e2db:	adc    eax,0x2c0a226b
  41e2e0:	xor    dl,BYTE PTR [ebp+eiz*1-0x7cacd27]
  41e2e7:	and    BYTE PTR [edi],ch
  41e2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ea:	sub    eax,DWORD PTR [esi]
  41e2ec:	add    al,0xbe
  41e2ee:	ja     0x41e367
  41e2f0:	adc    eax,0xabdfaebd
  41e2f5:	aaa    
  41e2f6:	adc    al,BYTE PTR [esi]
  41e2f8:	push   ecx
  41e2f9:	imul   BYTE PTR [ebx+0x387add0c]
  41e2ff:	mov    ebp,0x4b1fa712
  41e304:	xchg   ebx,eax
  41e305:	and    bh,cl
  41e307:	sub    al,0xe5
  41e309:	ins    DWORD PTR es:[edi],dx
  41e30a:	les    ebp,FWORD PTR [eax]
  41e30c:	mov    ch,0x85
  41e30e:	mov    esp,0xcbc58b9b
  41e313:	(bad)  
  41e314:	call   0xba1e0d6e
  41e319:	scas   al,BYTE PTR es:[edi]
  41e31a:	popa   
  41e31b:	call   0x6f0ae0cb
  41e320:	loop   0x41e320
  41e322:	cli    
  41e323:	mov    DWORD PTR [edx+0x5f],eax
  41e326:	sbb    al,0xfb
  41e328:	cmc    
  41e329:	inc    esp
  41e32a:	or     eax,0xfd2c430f
  41e32f:	ret    0x22a6
  41e332:	push   esi
  41e333:	call   0xe92b:0x7fc8e683
  41e33a:	mov    edx,0xcddfc751
  41e33f:	mov    al,ds:0xaf07d180
  41e344:	repnz sub DWORD PTR [esi-0x38],eax
  41e348:	repz lahf 
  41e34a:	das    
  41e34b:	dec    esp
  41e34c:	xchg   ecx,eax
  41e34d:	or     BYTE PTR [edi],al
  41e34f:	inc    edi
  41e350:	jge    0x41e2f6
  41e352:	aas    
  41e353:	retf   
  41e354:	and    DWORD PTR [ebx+0x66],edi
  41e357:	pop    esp
  41e358:	call   0xc340:0x870ba2e1
  41e35f:	push   esi
  41e360:	pop    esi
  41e361:	pop    edx
  41e362:	test   ebx,edi
  41e364:	and    eax,0x6bc8f30b
  41e369:	(bad)  
  41e36a:	dec    ebp
  41e36b:	shl    BYTE PTR [edi],0x9c
  41e36e:	xchg   edx,eax
  41e36f:	loop   0x41e3d6
  41e371:	sub    ch,al
  41e373:	test   al,0x40
  41e375:	inc    ebx
  41e376:	(bad)  
  41e377:	mov    dh,0x99
  41e379:	dec    ebx
  41e37a:	repz add DWORD PTR [ebx+esi*4-0x5],eax
  41e37f:	int3   
  41e380:	mov    edi,DWORD PTR [ecx]
  41e382:	adc    eax,0xb349909c
  41e387:	out    0x3d,eax
  41e389:	jne    0x41e340
  41e38b:	retf   
  41e38c:	xchg   ebp,eax
  41e38d:	enter  0xc4a7,0xc9
  41e391:	popa   
  41e392:	mov    esi,0x6469b97d
  41e397:	add    DWORD PTR [edi-0x664a7868],edx
  41e39d:	jmp    0xf88c:0x8b0a5299
  41e3a4:	xchg   DWORD PTR [ecx-0x4e464d5e],ebp
  41e3aa:	xchg   esp,eax
  41e3ab:	fadd   QWORD PTR [edi-0x2f]
  41e3ae:	mov    ds:0xcc91c018,al
  41e3b3:	hlt    
  41e3b4:	mov    esp,0x495cefd1
  41e3b9:	jnp    0x41e34a
  41e3bb:	outs   dx,BYTE PTR ds:[esi]
  41e3bc:	mov    esi,ds
  41e3be:	xchg   BYTE PTR [esi],dh
  41e3c0:	cld    
  41e3c1:	inc    eax
  41e3c2:	gs repnz jecxz 0x41e3ef
  41e3c6:	push   ss
  41e3c7:	cli    
  41e3c8:	idiv   BYTE PTR [eax-0x2c80c8b7]
  41e3ce:	mov    ah,0xe4
  41e3d0:	in     al,dx
  41e3d1:	icebp  
  41e3d2:	fmulp  st(5),st
  41e3d4:	xchg   edx,eax
  41e3d5:	xor    ah,BYTE PTR [ebx+0x35]
  41e3d8:	pusha  
  41e3d9:	or     esp,esp
  41e3db:	and    eax,0x8573f1df
  41e3e0:	xchg   ebp,eax
  41e3e1:	jle    0x41e42f
  41e3e3:	adc    BYTE PTR [esi+0xfd7d75a],ah
  41e3e9:	(bad)  
  41e3ea:	jo     0x41e46b
  41e3ec:	dec    edi
  41e3ed:	inc    edx
  41e3ee:	fcmovnbe st,st(0)
  41e3f0:	cmp    al,0xb3
  41e3f2:	lods   eax,DWORD PTR ds:[esi]
  41e3f3:	jg     0x41e3cf
  41e3f5:	sahf   
  41e3f6:	xor    esi,ebx
  41e3f8:	out    dx,eax
  41e3f9:	inc    ebx
  41e3fa:	jb     0x41e425
  41e3fc:	icebp  
  41e3fd:	push   edi
  41e3fe:	mov    eax,ds:0xb33cbb8a
  41e403:	bound  ebp,QWORD PTR ds:0x7c940ab5
  41e409:	xchg   ecx,eax
  41e40a:	iret   
  41e40b:	fcomp  DWORD PTR [edx+0x35]
  41e40e:	loopne 0x41e44a
  41e410:	jbe    0x41e48c
  41e412:	in     al,dx
  41e413:	jo     0x41e3fa
  41e415:	sti    
  41e416:	es push ebx
  41e418:	push   ss
  41e419:	retf   0xa54c
  41e41c:	int    0x57
  41e41e:	paddd  mm0,QWORD PTR [ebx]
  41e421:	jo     0x41e3ea
  41e423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e424:	cdq    
  41e425:	out    dx,al
  41e426:	divps  xmm0,xmm5
  41e429:	xor    eax,0x7b179a09
  41e42e:	mov    WORD PTR [esi-0x445b0fe3],ss
  41e434:	call   FWORD PTR [ebx-0x9]
  41e437:	ins    BYTE PTR es:[edi],dx
  41e438:	mov    ch,0x4c
  41e43a:	mov    ah,0xa1
  41e43c:	aam    0x42
  41e43e:	mov    dh,0xdf
  41e440:	mov    ecx,0x9f96a48b
  41e445:	dec    cl
  41e447:	retf   0xe138
  41e44a:	jecxz  0x41e41e
  41e44c:	stos   BYTE PTR es:[edi],al
  41e44d:	ins    BYTE PTR es:[edi],dx
  41e44e:	xor    BYTE PTR [ecx],dh
  41e450:	jle    0x41e3d8
  41e452:	loopne 0x41e3fe
  41e454:	xchg   ebx,eax
  41e455:	nop
  41e456:	jo     0x41e415
  41e458:	sub    DWORD PTR [ebp-0x62],esi
  41e45b:	mov    ebx,0x8d03a60d
  41e460:	or     al,BYTE PTR [edx]
  41e462:	mov    bl,0x66
  41e464:	push   ds
  41e465:	retf   
  41e466:	data16 jle 0x41e4a3
  41e469:	jp     0x41e479
  41e46b:	ja     0x41e4af
  41e46d:	sub    al,0xc2
  41e46f:	cmp    al,0x4
  41e471:	mov    bh,0x73
  41e473:	and    al,dh
  41e475:	inc    edx
  41e476:	dec    ebp
  41e477:	sub    BYTE PTR [edx-0x11efd1f9],0xd4
  41e47e:	rcl    BYTE PTR [ebx],0x47
  41e481:	(bad)  
  41e482:	addr16 xchg edi,eax
  41e484:	jecxz  0x41e449
  41e486:	dec    esi
  41e487:	mov    dh,0xac
  41e489:	xor    bh,BYTE PTR [esi]
  41e48b:	push   esi
  41e48c:	lods   eax,DWORD PTR ds:[esi]
  41e48d:	arpl   WORD PTR [ebx+0x3afcf95b],ax
  41e493:	xor    DWORD PTR [eax-0x4e],ebx
  41e496:	dec    esp
  41e497:	mov    ds:0xfb8b213e,eax
  41e49c:	(bad)  [ebp+ebp*1+0x2eef75ed]
  41e4a3:	mov    al,ds:0xdc543cac
  41e4a8:	dec    ebx
  41e4a9:	jbe    0x41e4a6
  41e4ab:	loop   0x41e4ef
  41e4ad:	jecxz  0x41e4d7
  41e4af:	cmp    DWORD PTR [edx+ebx*4+0x3a9454c0],0xffffffc7
  41e4b7:	icebp  
  41e4b8:	add    DWORD PTR [esi+0x39],0x9a215f23
  41e4bf:	loopne 0x41e51d
  41e4c1:	dec    esp
  41e4c2:	(bad)  
  41e4c4:	dec    edx
  41e4c5:	inc    esi
  41e4c6:	fistp  QWORD PTR [esi]
  41e4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c9:	sbb    DWORD PTR [ecx],esi
  41e4cb:	pop    ebx
  41e4cc:	pop    ds
  41e4cd:	outs   dx,DWORD PTR ds:[esi]
  41e4ce:	mov    ch,0xc5
  41e4d0:	inc    ebx
  41e4d1:	xchg   BYTE PTR [edi],ah
  41e4d3:	or     al,0x84
  41e4d5:	rcr    BYTE PTR ds:0xabbd4b2b,cl
  41e4db:	aam    0x39
  41e4dd:	mov    ecx,0x4a05d785
  41e4e2:	mov    al,0xc5
  41e4e4:	rcl    ebp,1
  41e4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4e7:	add    DWORD PTR [ebp-0x3b57b920],ecx
  41e4ed:	sub    al,0x97
  41e4ef:	iret   
  41e4f0:	loopne 0x41e489
  41e4f2:	not    BYTE PTR [edi+0x17]
  41e4f5:	or     esp,DWORD PTR ds:0x9d2831a1
  41e4fb:	aad    0x20
  41e4fd:	cmp    bl,BYTE PTR [ecx+0x56]
  41e500:	mov    DWORD PTR [ebx+ebp*4+0x60],eax
  41e504:	add    esp,DWORD PTR [ecx-0x79]
  41e507:	stos   BYTE PTR es:[edi],al
  41e508:	mov    esp,0x8d093519
  41e50d:	popa   
  41e50e:	mov    edx,0x5db5b0ce
  41e513:	or     BYTE PTR [ecx-0x4f],0xaa
  41e517:	push   ebx
  41e518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e519:	in     al,dx
  41e51a:	sbb    eax,0xacec5c03
  41e51f:	xchg   edx,eax
  41e520:	mov    BYTE PTR [ebx+eiz*1+0x55],ch
  41e524:	jbe    0x41e513
  41e526:	stos   DWORD PTR es:[edi],eax
  41e527:	aas    
  41e528:	ss mov eax,0xc3f269
  41e52e:	mov    dl,BYTE PTR [eax-0x75]
  41e531:	mov    ebx,0xd5fb979f
  41e536:	cmp    DWORD PTR ds:0x7645a876,esi
  41e53c:	js     0x41e578
  41e53e:	jb     0x41e4ec
  41e540:	imul   ecx,DWORD PTR [edi+0x47b674a5],0x9cfd9824
  41e54a:	pop    ecx
  41e54b:	push   edx
  41e54c:	sar    DWORD PTR gs:[eax-0x5f],0xdc
  41e551:	push   0x82315600
  41e556:	jl     0x41e538
  41e558:	leave  
  41e559:	std    
  41e55a:	out    dx,eax
  41e55b:	jb     0x41e5d4
  41e55d:	jnp    0x41e5d7
  41e55f:	enter  0x44b6,0xb2
  41e563:	push   edi
  41e564:	imul   eax,ebx,0xffffff8f
  41e567:	adc    DWORD PTR [edx-0x2c86a2ed],0xffffff87
  41e56e:	(bad)  
  41e56f:	xlat   BYTE PTR ds:[ebx]
  41e570:	imul   ecx,esp,0xffffffb3
  41e573:	cmp    ah,BYTE PTR [ecx+edx*1]
  41e576:	ret    0xfd0
  41e579:	xchg   ebx,eax
  41e57a:	pop    eax
  41e57b:	arpl   WORD PTR [eax+0x74],cx
  41e57e:	xlat   BYTE PTR ds:[ebx]
  41e57f:	dec    eax
  41e580:	mov    al,0x82
  41e582:	xchg   ebx,eax
  41e583:	push   ebp
  41e584:	fs push ds
  41e586:	mov    esi,0x7e3873b1
  41e58b:	repz bound ebx,QWORD PTR [edi+0x1ef5367a]
  41e592:	lods   eax,DWORD PTR ds:[esi]
  41e593:	inc    edi
  41e594:	(bad)  
  41e595:	xor    BYTE PTR [edx],cl
  41e597:	leave  
  41e598:	xchg   ecx,eax
  41e599:	arpl   WORD PTR [edx],ax
  41e59b:	clc    
  41e59c:	das    
  41e59d:	jge    0x41e550
  41e59f:	dec    esp
  41e5a0:	inc    esi
  41e5a1:	sar    DWORD PTR [esi-0x46e2718a],cl
  41e5a7:	and    al,0xdb
  41e5a9:	sbb    al,0x7e
  41e5ab:	in     eax,dx
  41e5ac:	push   esp
  41e5ad:	js     0x41e548
  41e5af:	push   ebx
  41e5b0:	jge    0x41e5a4
  41e5b2:	pop    eax
  41e5b3:	dec    esi
  41e5b4:	call   0xb07a258
  41e5b9:	mov    BYTE PTR [edx-0x1b13cd48],dh
  41e5bf:	test   DWORD PTR [edi-0x6],esp
  41e5c2:	jnp    0x41e57c
  41e5c4:	mov    ecx,0x45716c52
  41e5c9:	imul   edi,ecx
  41e5cc:	jne    0x41e605
  41e5ce:	inc    eax
  41e5cf:	add    ebp,DWORD PTR [ebx+ebp*1-0x4734ec5f]
  41e5d6:	inc    ecx
  41e5d7:	push   esi
  41e5d8:	mov    ebx,0xe9009603
  41e5dd:	mov    bh,0x72
  41e5df:	lds    eax,FWORD PTR [edx-0x18]
  41e5e2:	sbb    BYTE PTR [ebx+ebx*4-0x63d7a628],dh
  41e5e9:	mov    edx,0xe1c2e51
  41e5ee:	lock outs dx,DWORD PTR ds:[esi]
  41e5f0:	scas   al,BYTE PTR es:[edi]
  41e5f1:	sbb    DWORD PTR [esi+0x5383ae27],eax
  41e5f7:	mov    edi,0x12775dda
  41e5fc:	into   
  41e5fd:	inc    ebx
  41e5fe:	xchg   esi,eax
  41e5ff:	shr    BYTE PTR [ecx+ebx*8-0x70decf1b],cl
  41e606:	lahf   
  41e607:	mov    cl,0xff
  41e609:	clc    
  41e60a:	lahf   
  41e60b:	push   edi
  41e60c:	pop    ebx
  41e60d:	jge    0x41e669
  41e60f:	out    dx,al
  41e610:	out    0x4,eax
  41e612:	jle    0x41e60c
  41e614:	shl    DWORD PTR [edi],1
  41e616:	add    BYTE PTR [esi+0x508ad7fd],bl
  41e61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61d:	jge    0x41e5ce
  41e61f:	pop    ds
  41e620:	or     BYTE PTR [ecx+0x33],cl
  41e623:	out    dx,al
  41e624:	mov    al,ds:0x8bd3ed2e
  41e629:	mov    ebp,edx
  41e62b:	xchg   edi,eax
  41e62c:	ins    DWORD PTR es:[edi],dx
  41e62d:	add    edx,DWORD PTR [esi-0x72]
  41e630:	xchg   ebp,eax
  41e631:	iret   
  41e632:	(bad)  
  41e633:	or     al,0x81
  41e635:	outs   dx,BYTE PTR ds:[esi]
  41e636:	and    eax,0xc1e39ec3
  41e63b:	cld    
  41e63c:	lea    eax,[ebp+0x6d]
  41e63f:	sbb    al,0xff
  41e641:	sbb    ecx,DWORD PTR [edx+0x53f08495]
  41e647:	popa   
  41e648:	ins    DWORD PTR es:[edi],dx
  41e649:	mov    ds:0x1fc69687,al
  41e64e:	sahf   
  41e64f:	dec    ebx
  41e650:	lods   al,BYTE PTR ds:[esi]
  41e651:	push   ss
  41e652:	stos   DWORD PTR es:[edi],eax
  41e653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e654:	mov    esi,0xc9392a1d
  41e659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e65a:	sub    DWORD PTR [edx+ebp*8-0x13cc4c4e],esi
  41e661:	inc    edx
  41e662:	lds    esi,FWORD PTR [ebx-0x6c]
  41e665:	sub    DWORD PTR [edi+0x17d67f37],esi
  41e66b:	mov    esi,0x8ae2d427
  41e670:	jnp    0x41e6cd
  41e672:	push   esi
  41e673:	and    DWORD PTR [ecx-0x6],edi
  41e676:	iret   
  41e677:	inc    edi
  41e678:	repnz test DWORD PTR [esi],0xc07338e1
  41e67f:	jl     0x41e6c9
  41e681:	pop    ds
  41e682:	jbe    0x41e618
  41e684:	mov    ah,0x11
  41e686:	add    dh,BYTE PTR [esi-0x6ee8c87b]
  41e68c:	das    
  41e68d:	inc    eax
  41e68e:	push   cs
  41e68f:	fwait
  41e690:	iret   
  41e691:	sub    BYTE PTR [ebx-0x34],dh
  41e694:	mov    ebx,0x311c488d
  41e699:	fmul   QWORD PTR [esi+0x4b]
  41e69c:	and    al,0x63
  41e69e:	pop    eax
  41e69f:	ja     0x41e6cf
  41e6a1:	daa    
  41e6a2:	and    dl,dh
  41e6a4:	pusha  
  41e6a5:	jecxz  0x41e698
  41e6a7:	jge    0x41e63d
  41e6a9:	adc    BYTE PTR [ebp-0x6849c7b9],bh
  41e6af:	xchg   ecx,eax
  41e6b0:	xchg   BYTE PTR [eax],al
  41e6b2:	mov    ebp,0xb8456dd9
  41e6b7:	fs push ebp
  41e6b9:	sub    edi,esp
  41e6bb:	push   es
  41e6bc:	and    eax,0x17ff569f
  41e6c1:	faddp  st(5),st
  41e6c3:	dec    eax
  41e6c4:	mov    ?,WORD PTR [edi+0x55]
  41e6c7:	lea    edx,[eax+edx*1+0x5024f6e6]
  41e6ce:	xor    ebp,DWORD PTR [ebp*4+0x24131231]
  41e6d5:	dec    esp
  41e6d6:	fcomi  st,st(0)
  41e6d8:	mov    esi,0x970e9aa5
  41e6dd:	aam    0x4a
  41e6df:	pop    ecx
  41e6e0:	adc    esi,DWORD PTR [ebx+eiz*2]
  41e6e3:	stos   BYTE PTR es:[edi],al
  41e6e4:	das    
  41e6e5:	jg     0x41e740
  41e6e7:	test   ebx,esi
  41e6e9:	ja     0x41e6ed
  41e6eb:	push   ss
  41e6ec:	sub    BYTE PTR [ebx-0x68b7032],dh
  41e6f2:	bound  esi,QWORD PTR [ecx-0x25]
  41e6f5:	mov    eax,0x95d156c8
  41e6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6fb:	push   edx
  41e6fc:	(bad)  
  41e6fd:	jl     0x41e750
  41e6ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e700:	bound  esi,QWORD PTR [edx]
  41e702:	mov    eax,ds:0x1bb359ac
  41e707:	mov    bh,0x89
  41e709:	(bad)  
  41e70a:	ror    ebx,1
  41e70c:	jo     0x41e775
  41e70e:	xchg   ecx,eax
  41e70f:	shr    DWORD PTR [eax-0x10a51b89],cl
  41e715:	and    dh,BYTE PTR [ebp-0x7a]
  41e718:	mov    esi,0x5f799c9e
  41e71d:	ds loopne 0x41e6ec
  41e720:	xchg   edx,eax
  41e721:	retf   0x2dce
  41e724:	jl     0x41e712
  41e726:	imul   ebx,edi,0xffffffb3
  41e729:	stos   DWORD PTR es:[edi],eax
  41e72a:	idiv   dl
  41e72c:	pushf  
  41e72d:	cs jb  0x41e6d5
  41e730:	mov    al,ds:0xaea1ff67
  41e735:	xchg   edi,eax
  41e736:	jns    0x41e6f1
  41e738:	sub    eax,0xe60e2c46
  41e73d:	xchg   edx,eax
  41e73e:	je     0x41e6de
  41e740:	and    al,0xb
  41e742:	cmc    
  41e743:	or     DWORD PTR [eax-0x16a6d972],0x28d90bdd
  41e74d:	lods   al,BYTE PTR ds:[esi]
  41e74e:	push   eax
  41e74f:	test   eax,0x28d3c590
  41e754:	cmp    cl,bh
  41e756:	mov    esp,0x3e127e6e
  41e75b:	inc    esp
  41e75c:	ror    BYTE PTR [esi],1
  41e75e:	xor    ebp,DWORD PTR [ebp+0x2d42a1f9]
  41e764:	cdq    
  41e765:	and    eax,0x73c72421
  41e76a:	pop    edx
  41e76b:	xchg   edx,eax
  41e76c:	xor    ebp,eax
  41e76e:	mov    edi,0xfea412b9
  41e773:	inc    edi
  41e774:	idiv   BYTE PTR [eax]
  41e776:	ins    BYTE PTR es:[edi],dx
  41e777:	dec    ebx
  41e778:	jb     0x41e718
  41e77a:	(bad)  
  41e77b:	pusha  
  41e77c:	push   edx
  41e77d:	pop    ds
  41e77e:	mov    WORD PTR [edi-0x468dc933],cs
  41e784:	sbb    BYTE PTR [ebp-0x5efee0c7],0x78
  41e78b:	mov    bl,0xb0
  41e78d:	mov    bh,0xbb
  41e78f:	outs   dx,BYTE PTR ds:[esi]
  41e790:	sbb    bl,bh
  41e792:	or     BYTE PTR [esi-0x3c035aca],cl
  41e798:	dec    eax
  41e799:	inc    esi
  41e79a:	fmul   QWORD PTR [eax-0xe]
  41e79d:	mov    BYTE PTR [ecx-0x8],bh
  41e7a0:	or     eax,DWORD PTR [ebx-0xe1b8d80]
  41e7a6:	dec    edx
  41e7a7:	ror    BYTE PTR [esi],0x7e
  41e7aa:	sbb    eax,0xed31908d
  41e7af:	mov    edi,DWORD PTR [ebp-0x51]
  41e7b2:	loopne 0x41e7a9
  41e7b4:	pop    ss
  41e7b5:	pop    es
  41e7b6:	sbb    ebx,DWORD PTR [edi]
  41e7b8:	cmp    esp,ebx
  41e7ba:	aad    0x49
  41e7bc:	fsub   QWORD PTR [ebx]
  41e7be:	sub    al,BYTE PTR [ebx-0x13]
  41e7c1:	pop    ebp
  41e7c2:	outs   dx,BYTE PTR ds:[esi]
  41e7c3:	dec    ebx
  41e7c4:	jb     0x41e797
  41e7c6:	mov    ebp,0xe8397662
  41e7cb:	fptan  
  41e7cd:	add    al,0xb9
  41e7cf:	scas   al,BYTE PTR es:[edi]
  41e7d0:	sbb    ecx,DWORD PTR [ebx+ecx*4+0x4c]
  41e7d4:	ror    BYTE PTR [edi+eax*4],cl
  41e7d7:	ss push 0x7bf1cfa6
  41e7dd:	sub    dl,BYTE PTR [esi+ecx*4+0x5]
  41e7e1:	sub    BYTE PTR [ecx],bh
  41e7e3:	or     eax,0x6c43f12d
  41e7e8:	cwde   
  41e7e9:	push   esp
  41e7ea:	ret    0x8856
  41e7ed:	sub    al,BYTE PTR [ebx]
  41e7ef:	xchg   edi,eax
  41e7f0:	leave  
  41e7f1:	add    al,0x1f
  41e7f3:	fs add edx,0x30
  41e7f7:	std    
  41e7f8:	mov    ebp,0xdc9c8ce2
  41e7fd:	sbb    eax,0x9c14c512
  41e802:	pop    ss
  41e803:	xor    DWORD PTR [ebx+0x63974940],ecx
  41e809:	rcr    DWORD PTR [esi-0x7819209a],1
  41e80f:	test   DWORD PTR [ebp+0x60abd1c8],ebp
  41e815:	xor    BYTE PTR [edi-0x39],dl
  41e818:	cld    
  41e819:	add    eax,0x5298395a
  41e81e:	adc    ah,ch
  41e820:	aad    0xbe
  41e822:	inc    esp
  41e823:	je     0x41e8a1
  41e825:	adc    al,0x73
  41e827:	or     dh,BYTE PTR [ecx]
  41e829:	sub    DWORD PTR [ebx-0x66],edi
  41e82c:	lods   al,BYTE PTR ds:[esi]
  41e82d:	push   ds
  41e82e:	fisttp DWORD PTR [ecx+ebx*8-0x12410ac0]
  41e835:	retf   0xfe55
  41e838:	push   edi
  41e839:	xchg   esi,eax
  41e83a:	wrmsr  
  41e83c:	rol    BYTE PTR [esi],cl
  41e83e:	in     eax,0xf6
  41e840:	jbe    0x41e894
  41e842:	pop    esp
  41e843:	pop    esi
  41e844:	mov    eax,0xce07535d
  41e849:	jae    0x41e83a
  41e84b:	scas   eax,DWORD PTR es:[edi]
  41e84c:	add    edi,ebp
  41e84e:	sub    ah,BYTE PTR [ecx+0x506b2ddf]
  41e854:	pop    esp
  41e855:	popa   
  41e856:	xchg   ebx,eax
  41e857:	vmovlpd xmm0,xmm2,QWORD PTR [eax]
  41e85b:	push   0xffffff9f
  41e85d:	jle    0x41e823
  41e85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e860:	int3   
  41e861:	dec    edx
  41e862:	jae    0x41e8d9
  41e864:	adc    edx,esi
  41e866:	cs gs jae 0x41e896
  41e86a:	sahf   
  41e86b:	push   eax
  41e86c:	sub    BYTE PTR [ebx+0x36ef0458],ch
  41e872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e873:	mov    BYTE PTR [ecx+0x37],dh
  41e876:	mov    ah,0xd4
  41e878:	ret    
  41e879:	cmp    al,BYTE PTR [edi-0x66281770]
  41e87f:	fwait
  41e880:	add    DWORD PTR [ecx-0x2db1e70e],ecx
  41e886:	jne    0x41e8c2
  41e888:	push   cs
  41e889:	jge    0x41e86a
  41e88b:	fld    DWORD PTR [ebx]
  41e88d:	push   ecx
  41e88e:	enter  0x4410,0x86
  41e892:	or     ch,ch
  41e894:	js     0x41e899
  41e896:	fistp  DWORD PTR [edx+0x6b9358f]
  41e89c:	sub    eax,0xad510ec1
  41e8a1:	hlt    
  41e8a2:	jl     0x41e884
  41e8a4:	mov    eax,ds:0xe1fef7ff
  41e8a9:	les    ebx,FWORD PTR [esi-0x33]
  41e8ac:	jecxz  0x41e918
  41e8ae:	mov    al,0x4e
  41e8b0:	cmp    edx,esi
  41e8b2:	adc    al,0xfa
  41e8b4:	js     0x41e899
  41e8b6:	fistp  QWORD PTR [edx-0x1b]
  41e8b9:	arpl   WORD PTR [ecx+0x249ab163],sp
  41e8bf:	pusha  
  41e8c0:	pop    sp
  41e8c2:	clc    
  41e8c3:	jo     0x41e84f
  41e8c5:	retf   
  41e8c6:	std    
  41e8c7:	sbb    ebp,DWORD PTR [edx-0x507b98f8]
  41e8cd:	mov    esi,0xca6360a6
  41e8d2:	mov    bl,0x61
  41e8d4:	pushf  
  41e8d5:	mov    eax,0x161a9f52
  41e8da:	out    0x10,eax
  41e8dc:	ins    BYTE PTR es:[edi],dx
  41e8dd:	lods   eax,DWORD PTR ds:[esi]
  41e8de:	xchg   esi,eax
  41e8df:	fwait
  41e8e0:	daa    
  41e8e1:	das    
  41e8e2:	pop    ds
  41e8e3:	or     ah,BYTE PTR [eax]
  41e8e5:	shl    BYTE PTR ds:0x251e22aa,cl
  41e8eb:	fdivr  QWORD PTR [ecx]
  41e8ed:	xor    al,0x4c
  41e8ef:	pop    ss
  41e8f0:	nop
  41e8f1:	loopne 0x41e905
  41e8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f4:	dec    eax
  41e8f5:	or     eax,0xf898b927
  41e8fa:	lods   eax,DWORD PTR ds:[esi]
  41e8fb:	retf   0xeac7
  41e8fe:	sbb    eax,0x683a94fe
  41e903:	scas   al,BYTE PTR es:[edi]
  41e904:	cmc    
  41e905:	jl     0x41e96c
  41e907:	loopne 0x41e8bc
  41e909:	mov    cl,0xce
  41e90b:	xor    BYTE PTR [ecx-0x7],ch
  41e90e:	add    BYTE PTR [eax-0x3734f671],bh
  41e914:	push   esi
  41e915:	mov    bh,0xdc
  41e917:	push   esp
  41e918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e919:	push   ebx
  41e91a:	mov    eax,ds:0x709b7d88
  41e91f:	out    dx,eax
  41e920:	mov    edx,DWORD PTR [edx]
  41e922:	fucomip st,st(2)
  41e924:	jns    0x41e912
  41e926:	lods   eax,DWORD PTR ds:[esi]
  41e927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e928:	fwait
  41e929:	jle    0x41e8e4
  41e92b:	adc    al,0xe8
  41e92d:	out    dx,al
  41e92e:	popa   
  41e92f:	test   DWORD PTR [ebp+0x5ce23a58],edx
  41e935:	fwait
  41e936:	xchg   edx,eax
  41e937:	cmp    al,0x91
  41e939:	jl     0x41e95a
  41e93b:	pop    ecx
  41e93c:	call   0x740d:0xfc1417bc
  41e943:	and    BYTE PTR [edx+eax*4+0x58c9b060],bh
  41e94a:	jge    0x41e8e2
  41e94c:	shl    BYTE PTR [esi+0x65684136],cl
  41e952:	hlt    
  41e953:	mov    WORD PTR [ebp-0x10],ds
  41e956:	mov    edx,0x66c2aa26
  41e95b:	test   BYTE PTR [edi-0x48a058c9],bl
  41e961:	jbe    0x41e9c0
  41e963:	aam    0xb5
  41e965:	adc    DWORD PTR [ecx],eax
  41e967:	ret    
  41e968:	dec    ebx
  41e969:	test   al,0x31
  41e96b:	call   0xd2083a21
  41e970:	fs jno 0x41e98b
  41e973:	call   0x1734:0x86667bcf
  41e97a:	xor    DWORD PTR [esi-0x4a1e3262],edi
  41e980:	rcl    BYTE PTR [edi],0xc
  41e983:	jmp    0x6691fe12
  41e988:	push   ebp
  41e989:	test   al,0x8e
  41e98b:	outs   dx,DWORD PTR ds:[esi]
  41e98c:	aas    
  41e98d:	xor    esp,DWORD PTR [eax]
  41e98f:	test   DWORD PTR [edx+0x4b2ac37f],edx
  41e995:	popa   
  41e996:	into   
  41e997:	pop    esp
  41e998:	(bad)  
  41e999:	test   DWORD PTR [esi],0x4bdd7a70
  41e99f:	dec    ecx
  41e9a0:	or     DWORD PTR [ecx-0x48],edx
  41e9a3:	ins    BYTE PTR es:[edi],dx
  41e9a4:	fst    DWORD PTR ds:0x90d7daac
  41e9aa:	fsubp  st(5),st
  41e9ac:	fisttp DWORD PTR [ebp+0x16c827b]
  41e9b2:	stc    
  41e9b3:	mov    BYTE PTR [edi],dh
  41e9b5:	repnz shl DWORD PTR [edx+eiz*4],1
  41e9b9:	int3   
  41e9ba:	mov    ecx,0xa92f7f39
  41e9bf:	scas   al,BYTE PTR es:[edi]
  41e9c0:	jno    0x41e968
  41e9c2:	push   esp
  41e9c3:	mov    cl,0x5b
  41e9c5:	daa    
  41e9c6:	mov    ah,0x8a
  41e9c8:	mov    ds:0x494d7466,al
  41e9cd:	mov    cl,0xa0
  41e9cf:	and    al,0xa2
  41e9d1:	dec    ecx
  41e9d2:	push   ss
  41e9d3:	lock rol BYTE PTR [esi],cl
  41e9d6:	mov    ah,0xa2
  41e9d8:	push   esp
  41e9d9:	stos   DWORD PTR es:[edi],eax
  41e9da:	push   ebx
  41e9db:	(bad)
  41e9de:	cli    
  41e9df:	shl    edi,0xa3
  41e9e2:	mov    edx,0xb3096f7f
  41e9e7:	xchg   edi,eax
  41e9e8:	adc    eax,0xee26af74
  41e9ed:	add    al,0xff
  41e9ef:	xchg   edi,eax
  41e9f0:	mov    ds:0x87e4a456,eax
  41e9f5:	pop    ebx
  41e9f6:	adc    edx,eax
  41e9f8:	mov    cl,0x56
  41e9fa:	sub    ah,BYTE PTR [ecx-0x9630d1c]
  41ea00:	mov    WORD PTR [edx-0x53],ss
  41ea03:	icebp  
  41ea04:	retf   
  41ea05:	fs sbb al,0xd
  41ea08:	mov    ds:0x93c9d0fc,eax
  41ea0d:	hlt    
  41ea0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea0f:	jmp    0x41ea5f
  41ea11:	aas    
  41ea12:	(bad)  
  41ea13:	adc    DWORD PTR [edi-0x1d60c115],edx
  41ea19:	adc    DWORD PTR [esi-0x9],ebp
  41ea1c:	and    BYTE PTR [esi*2+0x2a3c4db3],dl
  41ea23:	jmp    0x24d63794
  41ea28:	push   esi
  41ea29:	sub    eax,0x58ad60cd
  41ea2e:	stos   DWORD PTR es:[edi],eax
  41ea2f:	inc    ecx
  41ea30:	xchg   ebp,eax
  41ea31:	sub    ah,dh
  41ea33:	hlt    
  41ea34:	loope  0x41ea7f
  41ea36:	mov    ecx,0xdaddcf1a
  41ea3b:	loope  0x41ea23
  41ea3d:	in     eax,dx
  41ea3e:	repz fstp DWORD PTR ds:[edx+0x758cb887]
  41ea46:	or     eax,0x9005152
  41ea4b:	rol    ebx,1
  41ea4d:	(bad)  
  41ea4f:	mov    ds:0x2c277f23,al
  41ea54:	and    ebx,esp
  41ea56:	out    0xd8,eax
  41ea58:	lahf   
  41ea59:	fadd   QWORD PTR [eax-0x36]
  41ea5c:	mov    ds:0x73028e8c,al
  41ea61:	push   edx
  41ea62:	rdrand edi
  41ea65:	xchg   ecx,eax
  41ea66:	push   edx
  41ea67:	jae    0x41ea36
  41ea69:	pusha  
  41ea6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea6b:	mov    bh,0x65
  41ea6d:	pusha  
  41ea6e:	push   0x351859fb
  41ea73:	int3   
  41ea74:	jno    0x41eaf4
  41ea76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea77:	leave  
  41ea78:	mov    edi,0x791c5a5b
  41ea7d:	add    BYTE PTR [ecx+0x286beb20],0x22
  41ea84:	out    0xd0,al
  41ea86:	(bad)  
  41ea87:	and    esp,DWORD PTR [edx+0x30]
  41ea8a:	push   0x994b381a
  41ea8f:	xchg   ebp,eax
  41ea90:	jle    0x41ea87
  41ea92:	dec    ebp
  41ea93:	xchg   esp,eax
  41ea94:	cs push ds
  41ea96:	mov    ah,0x7b
  41ea98:	out    dx,eax
  41ea99:	iret   
  41ea9a:	test   BYTE PTR [ecx],ah
  41ea9c:	shl    DWORD PTR [edx-0x6b],1
  41ea9f:	dec    edx
  41eaa0:	fst    QWORD PTR [eax]
  41eaa2:	(bad)  
  41eaa4:	addr16 jnp 0x41ead4
  41eaa7:	loopne 0x41eac9
  41eaa9:	fcomip st,st(6)
  41eaab:	repnz mov edx,cs
  41eaae:	pop    eax
  41eaaf:	xlat   BYTE PTR fs:[ebx]
  41eab1:	pop    esp
  41eab2:	ficom  DWORD PTR [ecx-0xe24a97e]
  41eab8:	mov    WORD PTR [ecx+0x4d],es
  41eabb:	aas    
  41eabc:	jns    0x41eacb
  41eabe:	pop    edi
  41eabf:	test   al,0x5
  41eac1:	sbb    DWORD PTR [ebp-0x61],ebx
  41eac4:	aad    0x81
  41eac6:	(bad)  
  41eac7:	and    BYTE PTR [esi-0x475d1f],bh
  41eacd:	push   ds
  41eace:	or     eax,edx
  41ead0:	jge    0x41eb33
  41ead2:	xchg   esp,eax
  41ead3:	das    
  41ead4:	test   eax,0x4dcce72d
  41ead9:	imul   BYTE PTR [ecx-0x55529285]
  41eadf:	or     dl,BYTE PTR [edi+eax*4]
  41eae2:	jmp    0x41eb1b
  41eae4:	ss leave 
  41eae6:	ja     0x41eb08
  41eae8:	fld    QWORD PTR [esi]
  41eaea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaeb:	mov    edi,0x197645ca
  41eaf0:	mov    bh,0x74
  41eaf2:	xor    BYTE PTR [edi+0x6d],0x1e
  41eaf6:	imul   edx,DWORD PTR [edi],0x15af3722
  41eafc:	retf   0x3047
  41eaff:	out    dx,al
  41eb00:	outs   dx,DWORD PTR ds:[esi]
  41eb01:	push   eax
  41eb02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb03:	xchg   edi,eax
  41eb04:	ss dec ecx
  41eb06:	mov    eax,ds:0x1e7dd8e2
  41eb0b:	xchg   DWORD PTR [ecx-0x71],esp
  41eb0e:	mov    dh,0x8a
  41eb10:	mul    DWORD PTR [ecx+eiz*4-0x6e0d0650]
  41eb17:	bound  edx,QWORD PTR [esi+0x1aff26d4]
  41eb1d:	dec    ebx
  41eb1e:	mov    ch,0x98
  41eb20:	aam    0x6a
  41eb22:	mov    ebx,0xe196c6d
  41eb27:	out    dx,eax
  41eb28:	dec    eax
  41eb29:	mov    BYTE PTR [ecx+0x4d0f25b0],dl
  41eb2f:	repz sbb al,0xf
  41eb32:	loop   0x41eae6
  41eb34:	mov    dl,0xa6
  41eb36:	lahf   
  41eb37:	in     eax,dx
  41eb38:	cwde   
  41eb39:	popa   
  41eb3a:	push   ds
  41eb3b:	lahf   
  41eb3c:	dec    ecx
  41eb3d:	jmp    0x69b5e000
  41eb42:	lock popa 
  41eb44:	mov    eax,0xb9bc602f
  41eb49:	xchg   edx,eax
  41eb4a:	mov    DWORD PTR [ebx-0x9],ebp
  41eb4d:	xchg   ebp,eax
  41eb4e:	adc    edx,esi
  41eb50:	and    al,0x90
  41eb52:	xor    ah,cl
  41eb54:	fwait
  41eb55:	jno    0x41eb94
  41eb57:	in     al,dx
  41eb58:	shr    DWORD PTR [edi-0x13862cc5],0xeb
  41eb5f:	xchg   BYTE PTR [esi+edi*1+0x64],bh
  41eb63:	and    ch,BYTE PTR [edx+0x40cb0b8]
  41eb69:	push   ecx
  41eb6a:	test   ah,cl
  41eb6c:	test   DWORD PTR [ecx+esi*8-0x34182274],edi
  41eb73:	mov    ecx,DWORD PTR [edx+0xf]
  41eb76:	mov    cl,0xab
  41eb78:	(bad)  
  41eb79:	cld    
  41eb7a:	mov    cl,0x14
  41eb7c:	and    eax,0x599fc6f0
  41eb81:	shl    BYTE PTR [ebx+0x3bc968ca],1
  41eb87:	add    DWORD PTR [ebp*4-0x7382c35],esp
  41eb8e:	rol    DWORD PTR [esi+0x55],1
  41eb91:	mov    bh,0xa4
  41eb93:	pop    ebx
  41eb94:	xor    dl,al
  41eb96:	dec    ebx
  41eb97:	test   al,0x9e
  41eb99:	push   esi
  41eb9a:	ins    BYTE PTR es:[edi],dx
  41eb9b:	push   edi
  41eb9c:	ret    0xa994
  41eb9f:	push   cs
  41eba0:	xchg   edi,eax
  41eba1:	xchg   BYTE PTR [ecx+0x75fecd5a],al
  41eba7:	jb     0x41eb4d
  41eba9:	ret    
  41ebaa:	jp     0x41ebfb
  41ebac:	push   esp
  41ebad:	mov    ebp,0x783c74d9
  41ebb2:	cmp    eax,0x3ead8fc7
  41ebb7:	mov    ecx,0xc8f66928
  41ebbc:	mov    edi,0x644f5715
  41ebc1:	mov    ds:0xb79702c9,eax
  41ebc6:	out    0x5f,eax
  41ebc8:	mov    al,ds:0x3c54e529
  41ebcd:	imul   ebp,DWORD PTR [ecx],0x4b
  41ebd0:	inc    edi
  41ebd1:	imul   ebx,DWORD PTR [edx],0x2c5a90a4
  41ebd7:	mov    esp,0x3a1b0b8
  41ebdc:	jae    0x41ec1d
  41ebde:	or     eax,0xdbfa5f4f
  41ebe3:	pop    es
  41ebe4:	add    ah,BYTE PTR [edi+0x1e]
  41ebe7:	mov    bh,0xdb
  41ebe9:	outs   dx,DWORD PTR ds:[esi]
  41ebea:	outs   dx,BYTE PTR ds:[esi]
  41ebeb:	ja     0x41eba1
  41ebed:	jecxz  0x41ec0e
  41ebef:	xor    DWORD PTR [esp+edi*8-0x588a96c4],esp
  41ebf6:	cwde   
  41ebf7:	xchg   ecx,eax
  41ebf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf9:	fild   WORD PTR [ebp-0x721f92a5]
  41ebff:	fcmovnu st,st(0)
  41ec01:	icebp  
  41ec02:	pusha  
  41ec03:	mov    edx,0xad9f3d63
  41ec08:	test   al,0x2f
  41ec0a:	cmp    dh,0xfd
  41ec0d:	out    dx,eax
  41ec0e:	scas   al,BYTE PTR es:[edi]
  41ec0f:	cmp    BYTE PTR [edx+0x7cfca607],0xc4
  41ec16:	or     al,0x71
  41ec18:	imul   ebx,DWORD PTR [edx],0x90d0aabc
  41ec1e:	aas    
  41ec1f:	sbb    al,0xed
  41ec21:	add    eax,0xf01e6139
  41ec26:	pop    eax
  41ec27:	pop    ebx
  41ec28:	cmc    
  41ec29:	addr16 mov al,ds:0x6168
  41ec2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec2e:	enter  0x26e2,0xf8
  41ec32:	inc    DWORD PTR [eax+0x35]
  41ec35:	aam    0xaa
  41ec37:	mov    ch,0xce
  41ec39:	stc    
  41ec3a:	sahf   
  41ec3b:	jl     0x41ec33
  41ec3d:	and    DWORD PTR [edi+0x2d],0x83ab6280
  41ec44:	xchg   ebx,eax
  41ec45:	cmp    eax,0xf844ebe0
  41ec4a:	(bad)  
  41ec4b:	gs xchg bl,dl
  41ec4e:	ds pop es
  41ec50:	mul    DWORD PTR [ebp+0x33bb8a57]
  41ec56:	mov    dl,0xd7
  41ec58:	xor    esi,esp
  41ec5a:	cmp    dh,dh
  41ec5c:	mov    ch,BYTE PTR [edi-0x10e657ea]
  41ec62:	push   es
  41ec63:	sbb    ebp,edi
  41ec65:	ins    BYTE PTR es:[edi],dx
  41ec66:	pushf  
  41ec67:	fbld   TBYTE PTR [ebx-0x41]
  41ec6a:	mov    DWORD PTR ds:0xafe3805a,esp
  41ec70:	mov    DWORD PTR [ecx],ebp
  41ec72:	je     0x41ec20
  41ec74:	ret    
  41ec75:	mov    DWORD PTR [edx+ebp*4-0x17],edx
  41ec79:	cmp    eax,DWORD PTR [ecx-0x7be60aa4]
  41ec7f:	dec    esi
  41ec80:	mov    eax,ds:0xfb9efedf
  41ec85:	and    al,BYTE PTR [ebx-0x58]
  41ec88:	xchg   ebx,eax
  41ec89:	dec    esp
  41ec8a:	xor    ah,bl
  41ec8c:	neg    DWORD PTR [ecx+0x4a]
  41ec8f:	inc    edi
  41ec90:	xchg   ebp,eax
  41ec91:	inc    edx
  41ec92:	cs fwait
  41ec94:	push   0x2e
  41ec96:	inc    ecx
  41ec97:	lock mov ds:0xffe94938,eax
  41ec9d:	add    DWORD PTR [esi+0x3d],eax
  41eca0:	jg     0x41ecd3
  41eca2:	inc    edx
  41eca3:	cmp    eax,DWORD PTR [ebx+0x1496ab94]
  41eca9:	push   ss
  41ecaa:	xchg   esi,eax
  41ecab:	test   DWORD PTR [esi+0x49a24aa],esi
  41ecb1:	rcr    cl,0x83
  41ecb4:	or     dl,BYTE PTR [edx-0x6a]
  41ecb7:	jb     0x41ec74
  41ecb9:	mov    eax,0xe99bf496
  41ecbe:	call   0xe78de886
  41ecc3:	xor    ebp,ebx
  41ecc5:	xchg   BYTE PTR [ecx-0x7c787ba7],ch
  41eccb:	xchg   esp,eax
  41eccc:	add    eax,0xd6323ae6
  41ecd1:	scas   al,BYTE PTR es:[edi]
  41ecd2:	inc    edx
  41ecd3:	(bad)  
  41ecd5:	ins    DWORD PTR es:[edi],dx
  41ecd6:	cmp    eax,edx
  41ecd8:	mov    al,0xe6
  41ecda:	aad    0x47
  41ecdc:	xor    BYTE PTR [esi+ebp*1-0x4c],bl
  41ece0:	(bad)  
  41ece2:	idiv   DWORD PTR [edi]
  41ece4:	outs   dx,DWORD PTR ds:[esi]
  41ece5:	or     al,0x33
  41ece7:	cmc    
  41ece8:	fstp   DWORD PTR [ebp+ebx*1-0x7c077de1]
  41ecef:	lahf   
  41ecf0:	cmp    eax,0xa6e552cf
  41ecf5:	rol    edi,cl
  41ecf7:	cmp    dl,BYTE PTR [ebp-0x21]
  41ecfa:	das    
  41ecfb:	mov    ecx,0xa540e252
  41ed00:	xchg   ebp,eax
  41ed01:	jns    0x41ed0b
  41ed03:	xor    eax,0x3940446b
  41ed08:	jle    0x41ed60
  41ed0a:	jo     0x41ec93
  41ed0c:	xchg   ebp,eax
  41ed0d:	jecxz  0x41ec9d
  41ed0f:	sti    
  41ed10:	fisub  DWORD PTR ss:[edx+eax*1+0x6c]
  41ed15:	mov    al,0x4d
  41ed17:	(bad)  
  41ed18:	xchg   esi,eax
  41ed19:	stos   DWORD PTR es:[edi],eax
  41ed1a:	sbb    eax,0xdf71903e
  41ed1f:	or     BYTE PTR [esp+esi*8],0x1
  41ed23:	xchg   BYTE PTR [esi],ch
  41ed25:	sahf   
  41ed26:	pop    ecx
  41ed27:	jge    0x41ed31
  41ed29:	mov    esp,0x120cdd72
  41ed2e:	push   es
  41ed2f:	sbb    bh,bl
  41ed31:	iret   
  41ed32:	and    BYTE PTR [ebp-0x78da580c],ch
  41ed38:	xchg   ebx,eax
  41ed39:	inc    esi
  41ed3a:	sbb    ch,BYTE PTR [esi+ebp*8+0x10]
  41ed3e:	or     dh,BYTE PTR [ebp+0x4eae5317]
  41ed44:	mov    ds:0x9c6badc6,eax
  41ed49:	fst    DWORD PTR [edx-0x61]
  41ed4c:	clc    
  41ed4d:	or     al,BYTE PTR [ebp+0x40]
  41ed50:	jnp    0x41ed0f
  41ed52:	xor    DWORD PTR [edx+ecx*1-0x482afe95],0xffffff85
  41ed5a:	cmc    
  41ed5b:	xor    BYTE PTR [ecx-0x7c61d6],dl
  41ed61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed62:	ins    BYTE PTR es:[edi],dx
  41ed63:	dec    ecx
  41ed64:	mov    cl,0xe2
  41ed66:	fucom  st(5)
  41ed68:	aam    0x6c
  41ed6a:	xor    ax,0xe166
  41ed6e:	xchg   ebx,eax
  41ed6f:	mov    esp,0x794498c
  41ed74:	dec    esp
  41ed75:	adc    ecx,DWORD PTR [eax+eiz*4]
  41ed78:	push   eax
  41ed79:	fnstcw WORD PTR [edi-0x4c36648e]
  41ed7f:	sub    BYTE PTR [esi-0x346b10ec],ah
  41ed85:	les    ebx,FWORD PTR [ebp+0x627447dc]
  41ed8b:	(bad)  [edx-0x4568f597]
  41ed91:	aaa    
  41ed92:	push   cs
  41ed93:	dec    ebp
  41ed94:	imul   DWORD PTR [edi+ebx*2]
  41ed97:	stos   DWORD PTR es:[edi],eax
  41ed98:	jecxz  0x41ed51
  41ed9a:	inc    ecx
  41ed9b:	sbb    edx,esi
  41ed9d:	dec    bx
  41ed9f:	hlt    
  41eda0:	and    bh,bh
  41eda2:	cs out dx,al
  41eda4:	xchg   ebx,eax
  41eda5:	inc    edx
  41eda6:	xchg   esp,eax
  41eda7:	jns    0x41ed74
  41eda9:	imul   esi,esp,0x4c
  41edac:	(bad)  
  41edad:	lods   al,BYTE PTR ds:[esi]
  41edae:	lea    esi,[esi]
  41edb0:	xor    al,0x3
  41edb2:	lds    ecx,FWORD PTR [ebx]
  41edb4:	mov    dl,BYTE PTR [esi]
  41edb6:	inc    ecx
  41edb7:	jl     0x41edc7
  41edb9:	outs   dx,DWORD PTR ds:[esi]
  41edba:	mov    ah,bh
  41edbc:	mov    ch,0x9a
  41edbe:	fidivr DWORD PTR [ebx-0x6e493ee1]
  41edc4:	lds    eax,FWORD PTR ds:0x9bf59209
  41edca:	mov    ecx,eax
  41edcc:	test   eax,0xbaeb64c8
  41edd1:	test   bh,0x50
  41edd4:	ret    0x562f
  41edd7:	fst    QWORD PTR [ebp-0x33]
  41edda:	sahf   
  41eddb:	ret    
  41eddc:	call   0xf8027ebd
  41ede1:	fstp   DWORD PTR ds:0x635dc009
  41ede7:	sub    edx,0xfffffffe
  41edea:	out    dx,al
  41edeb:	sbb    eax,0xfedfc53e
  41edf0:	adc    eax,0xca14f0c9
  41edf5:	repz dec ebp
  41edf7:	mov    cl,0xc6
  41edf9:	jge    0x41ed87
  41edfb:	dec    edi
  41edfc:	push   0x1d7f6542
  41ee01:	mov    ecx,0x8fc91f0a
  41ee06:	dec    edi
  41ee07:	add    dl,ah
  41ee09:	(bad)  
  41ee0a:	outs   dx,DWORD PTR ds:[esi]
  41ee0b:	ds es mov esi,0x692429d0
  41ee12:	stos   DWORD PTR es:[edi],eax
  41ee13:	loop   0x41ee60
  41ee15:	pop    ebx
  41ee16:	xchg   esp,eax
  41ee17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee18:	xchg   BYTE PTR [ebp+0x6c],ah
  41ee1b:	jno    0x41edfc
  41ee1d:	shl    ah,1
  41ee1f:	repz jb 0x41edb4
  41ee22:	pop    es
  41ee23:	pusha  
  41ee24:	mov    DWORD PTR [eax],edi
  41ee26:	jo     0x41ee7d
  41ee28:	pop    ecx
  41ee29:	pop    ecx
  41ee2a:	sbb    edx,ebp
  41ee2c:	dec    eax
  41ee2d:	push   cs
  41ee2e:	dec    edi
  41ee2f:	aad    0x95
  41ee31:	push   0xffffffb0
  41ee33:	sbb    eax,0xf2c70cbc
  41ee38:	xchg   ecx,eax
  41ee39:	in     eax,dx
  41ee3a:	cmp    bl,BYTE PTR [esi+0x29]
  41ee3d:	aam    0x44
  41ee3f:	cmp    DWORD PTR [esi-0x28],0xef43d039
  41ee46:	jae    0x41ee96
  41ee48:	sbb    dl,BYTE PTR [ebx-0x2d]
  41ee4b:	dec    esp
  41ee4c:	in     eax,0x7d
  41ee4e:	cmp    ch,bh
  41ee50:	rcl    dl,0x9d
  41ee53:	inc    edx
  41ee54:	test   ch,al
  41ee56:	adc    al,0x92
  41ee58:	pop    es
  41ee59:	mov    dl,0x32
  41ee5b:	in     eax,dx
  41ee5c:	cmc    
  41ee5d:	arpl   WORD PTR [ebp+0x1689b90c],di
  41ee63:	mov    al,0xbd
  41ee65:	and    eax,esp
  41ee67:	popf   
  41ee68:	jno    0x41ee50
  41ee6a:	jnp    0x41ee5b
  41ee6c:	xchg   edx,eax
  41ee6d:	xchg   esi,eax
  41ee6e:	imul   esp,ebp,0x823ba074
  41ee74:	fstp   QWORD PTR [esi+0x4c1dd5f2]
  41ee7a:	or     al,0xdc
  41ee7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7d:	xchg   DWORD PTR [ebx],esp
  41ee7f:	loope  0x41ee4d
  41ee81:	inc    ebp
  41ee82:	mov    ecx,0x411382a0
  41ee87:	jmp    0xd7a3:0x599ad92a
  41ee8e:	loop   0x41ee97
  41ee90:	stos   BYTE PTR es:[edi],al
  41ee91:	dec    edi
  41ee92:	and    al,0xac
  41ee94:	xor    DWORD PTR [esi],ebp
  41ee96:	add    al,BYTE PTR [ebx-0x6]
  41ee99:	jp     0x41ee1d
  41ee9b:	iret   
  41ee9c:	jmp    0x5429ff3c
  41eea1:	jl     0x41ee4b
  41eea3:	cmp    eax,DWORD PTR [ecx+0x2b]
  41eea6:	jmp    0xd9d9addd
  41eeab:	mov    ebp,0x5219241e
  41eeb0:	imul   ebp,DWORD PTR [edi],0x58
  41eeb3:	cmc    
  41eeb4:	and    BYTE PTR [edi-0xf],bh
  41eeb7:	jbe    0x41eedf
  41eeb9:	imul   esp,DWORD PTR [ebx+0x22],0xcd4a0749
  41eec0:	nop
  41eec1:	or     bl,BYTE PTR [eax+0x7a66585e]
  41eec7:	(bad)  
  41eec8:	fistp  QWORD PTR [edi+eiz*4+0x188c55c1]
  41eecf:	jno    0x41ef46
  41eed1:	or     ecx,edx
  41eed3:	jb     0x41ee6d
  41eed5:	call   0xb67a:0xe275b902
  41eedc:	push   ebp
  41eedd:	fs xor eax,0x35b55453
  41eee3:	sbb    DWORD PTR [edx+0x24613a63],ebx
  41eee9:	xchg   esi,eax
  41eeea:	xlat   BYTE PTR ds:[ebx]
  41eeeb:	addr16 mov bl,0xf3
  41eeee:	sbb    al,dl
  41eef0:	out    0x1,al
  41eef2:	lods   eax,DWORD PTR ds:[esi]
  41eef3:	fs jge 0x41eefb
  41eef6:	jp     0x41ee9b
  41eef8:	ja     0x41eea4
  41eefa:	out    0xf7,al
  41eefc:	push   0x1418a052
  41ef01:	jge    0x41ef0b
  41ef03:	gs shr eax,0x39
  41ef07:	(bad)  
  41ef08:	in     al,0x63
  41ef0a:	sub    esi,DWORD PTR [ebx+0x34]
  41ef0d:	lea    esi,ss:[edi]
  41ef10:	mov    eax,ds:0xfd84dd44
  41ef15:	add    al,0xf
  41ef17:	xlat   BYTE PTR ds:[ebx]
  41ef18:	les    edi,FWORD PTR [ecx-0x62ee0475]
  41ef1e:	adc    bl,dh
  41ef20:	scas   eax,DWORD PTR es:[edi]
  41ef21:	rol    DWORD PTR [edx+0x6cfe30a4],1
  41ef27:	add    DWORD PTR [esp+edi*2-0x64],ebx
  41ef2b:	fwait
  41ef2c:	mov    BYTE PTR [ebp-0x34],cl
  41ef2f:	aas    
  41ef30:	mov    ebp,0x5183fbf4
  41ef35:	xchg   edi,esp
  41ef37:	test   al,0x85
  41ef39:	sbb    ecx,edx
  41ef3b:	mov    DWORD PTR [eax+0x6aab4d4b],ebp
  41ef41:	or     cl,bh
  41ef43:	inc    edi
  41ef44:	cmp    DWORD PTR [ebp-0x6e],edx
  41ef47:	xchg   ebx,eax
  41ef48:	aam    0xd8
  41ef4a:	pushf  
  41ef4b:	cmp    BYTE PTR [esi-0x515b1bba],bl
  41ef51:	mov    cl,0xfd
  41ef53:	push   ebp
  41ef54:	and    al,0xb7
  41ef56:	sbb    edi,DWORD PTR [ecx-0x61]
  41ef59:	adc    esi,DWORD PTR [esi]
  41ef5b:	call   0xfa2226d8
  41ef60:	jne    0x41ef66
  41ef62:	pop    edx
  41ef63:	adc    al,0xf3
  41ef65:	das    
  41ef66:	push   es
  41ef67:	jns    0x41ef29
  41ef69:	push   0xfffffffa
  41ef6b:	pop    eax
  41ef6c:	mov    BYTE PTR [ecx-0x607b6887],bh
  41ef72:	or     bh,al
  41ef74:	sbb    al,0x76
  41ef76:	fmul   st(1),st
  41ef78:	inc    edi
  41ef79:	mov    ah,0xdc
  41ef7b:	mov    ds,WORD PTR [edx-0x65]
  41ef7e:	adc    DWORD PTR [edx],eax
  41ef80:	ins    BYTE PTR es:[edi],dx
  41ef81:	std    
  41ef82:	inc    ebp
  41ef83:	or     ecx,edi
  41ef85:	out    0x7,eax
  41ef87:	jno    0x41efae
  41ef89:	lds    ebp,FWORD PTR [edx]
  41ef8b:	ins    DWORD PTR es:[edi],dx
  41ef8c:	pop    ebx
  41ef8d:	and    BYTE PTR [esi-0x100381ec],0x26
  41ef94:	fnstenv [ebx+ebx*4]
  41ef97:	jb     0x41efc7
  41ef99:	sub    al,0xbb
  41ef9b:	fidiv  DWORD PTR [edi+0x1c]
  41ef9e:	inc    edx
  41ef9f:	xor    al,0xc0
  41efa1:	in     eax,dx
  41efa2:	and    DWORD PTR [esi],edx
  41efa4:	nop
  41efa5:	xchg   edi,eax
  41efa6:	aad    0x45
  41efa8:	mov    ebp,0xc4eb0c8a
  41efad:	sub    esi,DWORD PTR [ecx*4+0x26a691d5]
  41efb4:	rol    DWORD PTR [ebx],0x28
  41efb7:	out    dx,eax
  41efb8:	pop    ebp
  41efb9:	dec    esi
  41efba:	xchg   ebp,eax
  41efbb:	adc    esi,DWORD PTR [ebx]
  41efbd:	out    0x5e,eax
  41efbf:	push   0xe35df1d5
  41efc4:	aas    
  41efc5:	push   ss
  41efc6:	data16 mov dh,0xc4
  41efc9:	repz fmul DWORD PTR ds:0x5cc10be4
  41efd0:	xor    bl,BYTE PTR [ecx+0x5]
  41efd3:	test   DWORD PTR [edx],esi
  41efd5:	sbb    DWORD PTR [eax+eax*8],ebp
  41efd8:	nop
  41efd9:	fsub   QWORD PTR [ecx]
  41efdb:	call   0x6883e43a
  41efe0:	adc    al,0xcd
  41efe2:	test   al,0x7c
  41efe4:	pop    esp
  41efe5:	mov    bh,0x3b
  41efe7:	out    dx,eax
  41efe8:	add    eax,0xe4ee3ba7
  41efed:	cld    
  41efee:	mov    WORD PTR [ecx-0x2f],ds
  41eff1:	cmp    al,BYTE PTR [bp-0x22]
  41eff5:	loopne 0x41f012
  41eff7:	pop    esi
  41eff8:	add    bh,BYTE PTR [ebx+0x6b]
  41effb:	push   ds
  41effc:	jg     0x41f06a
  41effe:	imul   esp,ecx,0x8dd92066
  41f004:	jmp    0xdccc:0x3ad5ea54
  41f00b:	pop    edi
  41f00c:	out    0xb4,al
  41f00e:	fiadd  WORD PTR [edx+0x11b13875]
  41f014:	sahf   
  41f015:	nop
  41f016:	stc    
  41f017:	and    BYTE PTR [ecx],bh
  41f019:	shl    BYTE PTR [eax+0x6f],0xca
  41f01d:	gs pop ecx
  41f01f:	aam    0x89
  41f021:	enter  0xbda8,0xb0
  41f025:	dec    ebp
  41f026:	and    DWORD PTR [ebx-0x44],0x950b3548
  41f02d:	sahf   
  41f02e:	dec    ebx
  41f02f:	adc    edx,DWORD PTR [edi]
  41f031:	mov    BYTE PTR [eax-0x133a3d64],dh
  41f037:	mov    al,bh
  41f039:	push   es
  41f03a:	outs   dx,BYTE PTR ds:[esi]
  41f03b:	inc    ebx
  41f03c:	mov    ds:0xb75c43fc,al
  41f041:	xor    DWORD PTR [esp+ebx*1+0x1b5435b9],ecx
  41f048:	sub    dl,al
  41f04a:	out    dx,al
  41f04b:	les    ecx,FWORD PTR [eax+0xf44e51a]
  41f051:	inc    ebp
  41f052:	ret    0xa904
  41f055:	and    al,0xa4
  41f057:	pop    ecx
  41f058:	lock pushf 
  41f05a:	and    eax,0x782d8297
  41f05f:	into   
  41f060:	or     edx,ebp
  41f062:	sub    dl,ch
  41f064:	mov    eax,0xad09cd6b
  41f069:	push   ss
  41f06a:	fwait
  41f06b:	outs   dx,DWORD PTR ds:[esi]
  41f06c:	sbb    al,0x1f
  41f06e:	adc    DWORD PTR [ecx+eax*8+0x1d349c8],ebx
  41f075:	arpl   WORD PTR [edi+0x13],bx
  41f078:	sub    eax,DWORD PTR [eax-0x34]
  41f07b:	jle    0x41f0c9
  41f07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f07e:	or     al,cl
  41f080:	clc    
  41f081:	mov    ds:0xe7991a7e,eax
  41f086:	add    DWORD PTR [ebx],ecx
  41f088:	inc    ecx
  41f089:	and    al,0x18
  41f08b:	mov    ah,0x7f
  41f08d:	stos   DWORD PTR es:[edi],eax
  41f08e:	popa   
  41f08f:	mov    BYTE PTR [eax+0x2f77c666],al
  41f095:	or     BYTE PTR [edx-0x625d7a21],0x7e
  41f09c:	jbe    0x41f0c5
  41f09e:	je     0x41f04e
  41f0a0:	loop   0x41f07e
  41f0a2:	and    dl,BYTE PTR ds:0xc6ef6de9
  41f0a8:	mov    al,bh
  41f0aa:	mov    esp,0x221858b0
  41f0af:	jo     0x41f067
  41f0b1:	push   ss
  41f0b2:	pop    eax
  41f0b3:	mov    cl,0xde
  41f0b5:	pop    ds
  41f0b6:	in     eax,dx
  41f0b7:	aam    0x6e
  41f0b9:	leave  
  41f0ba:	fs mov ebx,0x9546881
  41f0c0:	out    dx,al
  41f0c1:	dec    esi
  41f0c2:	in     al,0xb7
  41f0c4:	and    eax,0xe4d9cda7
  41f0c9:	outs   dx,DWORD PTR ds:[esi]
  41f0ca:	mov    dh,0x70
  41f0cc:	call   0xad2ce510
  41f0d1:	dec    eax
  41f0d2:	cmp    ecx,DWORD PTR [edx+0x71581533]
  41f0d8:	sbb    esp,DWORD PTR [esi+0xa28430d]
  41f0de:	dec    edi
  41f0df:	(bad)  
  41f0e0:	sub    al,BYTE PTR [ecx]
  41f0e2:	das    
  41f0e3:	sti    
  41f0e4:	inc    edi
  41f0e5:	aad    0x6d
  41f0e7:	fwait
  41f0e8:	pop    ds
  41f0e9:	cmp    al,0xef
  41f0eb:	mov    al,dh
  41f0ed:	ds mov ch,0x87
  41f0f0:	mov    al,ds:0xffe31f29
  41f0f5:	dec    ebp
  41f0f6:	push   edx
  41f0f7:	js     0x41f0cd
  41f0f9:	mul    DWORD PTR [esi]
  41f0fb:	test   DWORD PTR [edi+0x52],edi
  41f0fe:	inc    eax
  41f0ff:	test   eax,0x2f332c77
  41f104:	fld    QWORD PTR [eax]
  41f106:	push   ebp
  41f107:	mov    al,0x63
  41f109:	lods   eax,DWORD PTR cs:[esi]
  41f10b:	or     al,BYTE PTR [esi]
  41f10d:	cmc    
  41f10e:	loop   0x41f101
  41f110:	repnz outs dx,BYTE PTR ds:[esi]
  41f112:	pop    esi
  41f113:	out    0x68,eax
  41f115:	ret    
  41f116:	fwait
  41f117:	sub    ebx,eax
  41f119:	aam    0xdf
  41f11b:	xor    al,0x58
  41f11d:	xor    ebp,ebp
  41f11f:	jae    0x41f0d2
  41f121:	or     al,0xa3
  41f123:	loop   0x41f14e
  41f125:	or     eax,DWORD PTR [ebx+eax*1-0x1279caf1]
  41f12c:	aaa    
  41f12d:	retf   0x2252
  41f130:	fimul  WORD PTR [ebp-0x2d7fbeb]
  41f136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f137:	test   esi,0x28571579
  41f13d:	mov    edx,0x67d7c570
  41f142:	xor    BYTE PTR [edi],dl
  41f144:	sub    ebx,DWORD PTR [edx]
  41f146:	lds    ebp,FWORD PTR [eax-0x30]
  41f149:	int3   
  41f14a:	add    DWORD PTR [edx+0x73],esp
  41f14d:	xchg   ebx,eax
  41f14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14f:	dec    esi
  41f150:	cmp    eax,0xbbb1f80
  41f155:	cmp    BYTE PTR [ebp-0x37],bh
  41f158:	outs   dx,BYTE PTR ds:[esi]
  41f159:	test   eax,0xb1f6d45e
  41f15e:	or     DWORD PTR [eax+ecx*2+0x7f],ebx
  41f162:	rcr    DWORD PTR [edx-0x7896d],cl
  41f168:	xchg   edi,eax
  41f169:	imul   edx,DWORD PTR [edi+0x7492920c],0x127f7a1e
  41f173:	lods   al,BYTE PTR ds:[esi]
  41f174:	cmp    BYTE PTR ds:0x27727aa5,dl
  41f17a:	popa   
  41f17b:	rcr    DWORD PTR [ecx-0x6a],1
  41f17e:	lock leave 
  41f180:	in     eax,0xa4
  41f182:	dec    ebx
  41f183:	dec    ebp
  41f184:	rcr    DWORD PTR [edi+0x3d02df4d],0x81
  41f18b:	jb     0x41f168
  41f18d:	in     al,0x79
  41f18f:	sbb    edi,esp
  41f191:	call   0x3f038cd1
  41f196:	ja     0x41f1fc
  41f198:	hlt    
  41f199:	add    ah,BYTE PTR [edi+esi*8]
  41f19c:	and    eax,0xb80edd29
  41f1a1:	pop    es
  41f1a2:	retf   0x1fb6
  41f1a5:	jmp    0x41f20f
  41f1a7:	sahf   
  41f1a8:	ret    
  41f1a9:	mov    WORD PTR [eax+ebp*4-0x51],ds
  41f1ad:	mov    al,0x24
  41f1af:	push   ebp
  41f1b0:	mov    ds:0xafedec6,eax
  41f1b5:	jmp    0xb5ab8901
  41f1ba:	test   BYTE PTR [esi-0x37eccd14],bh
  41f1c0:	out    0xbd,al
  41f1c2:	inc    eax
  41f1c3:	jge    0x41f22e
  41f1c5:	js     0x41f19d
  41f1c7:	pop    eax
  41f1c8:	icebp  
  41f1c9:	sbb    ebp,ebx
  41f1cb:	fs pusha 
  41f1cd:	cwde   
  41f1ce:	add    DWORD PTR [esi-0x3c],0x27a6eca3
  41f1d5:	jae    0x41f20a
  41f1d7:	add    BYTE PTR [eax+ecx*2],al
  41f1da:	inc    ecx
  41f1db:	inc    ecx
  41f1dc:	(bad)  
  41f1dd:	jle    0x41f24e
  41f1df:	xor    dl,BYTE PTR [ecx-0x25]
  41f1e2:	lods   eax,DWORD PTR ds:[esi]
  41f1e3:	cs mov ecx,0xd0c186f1
  41f1e9:	scas   eax,DWORD PTR es:[edi]
  41f1ea:	push   edi
  41f1eb:	jmp    0x77d3fd5e
  41f1f0:	(bad)  
  41f1f1:	loope  0x41f205
  41f1f3:	mov    ecx,0x79ed2dfe
  41f1f8:	jae    0x41f254
  41f1fa:	mov    cl,0xa
  41f1fc:	js     0x41f1cc
  41f1fe:	add    ebp,0xffffffe1
  41f201:	dec    esi
  41f202:	xor    DWORD PTR [edi+ebx*8],eax
  41f205:	jecxz  0x41f1c1
  41f207:	cli    
  41f208:	mov    dh,ah
  41f20a:	addr16 dec ecx
  41f20c:	cmc    
  41f20d:	pop    ebx
  41f20e:	fucom  st(6)
  41f210:	ds call 0xdbf5b0f5
  41f216:	test   eax,0x4fd54b88
  41f21b:	call   0x2084:0x16765262
  41f222:	mov    ds:0x1a9658e0,eax
  41f227:	and    al,0x9d
  41f229:	sub    BYTE PTR [edi],ah
  41f22b:	ret    0xfc7e
  41f22e:	dec    esi
  41f22f:	mov    dh,0x81
  41f231:	pusha  
  41f232:	dec    ebp
  41f233:	mov    edx,0x3c6b646
  41f238:	mov    eax,ds:0xfaed7c46
  41f23d:	dec    edi
  41f23e:	(bad)  
  41f23f:	jg     0x41f200
  41f241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f242:	push   ebp
  41f243:	jecxz  0x41f204
  41f245:	pop    esi
  41f246:	sbb    BYTE PTR [edi+ecx*2],0x49
  41f24a:	mov    ds:0xa776841f,eax
  41f24f:	repnz rcl DWORD PTR [esi+0x32870451],1
  41f256:	cld    
  41f257:	std    
  41f258:	pop    eax
  41f259:	dec    eax
  41f25a:	jl     0x41f2a9
  41f25c:	inc    ebx
  41f25d:	mov    eax,0x6ccb3b55
  41f262:	jnp    0x41f2dd
  41f264:	jmp    0xe2cf:0x405aab00
  41f26b:	push   ecx
  41f26c:	in     al,0x4b
  41f26e:	mov    eax,0xcad604ee
  41f273:	cld    
  41f274:	mov    ebp,0x1677ff53
  41f279:	mov    dl,ah
  41f27b:	dec    ebx
  41f27c:	mov    eax,ds:0xa1d4e54a
  41f281:	or     eax,0x94f1654d
  41f286:	out    0x7f,al
  41f288:	adc    BYTE PTR [ebp-0x67f94b1],ah
  41f28e:	aas    
  41f28f:	mov    ds:0xd8533082,eax
  41f294:	cmc    
  41f295:	adc    eax,0x85f3603
  41f29a:	xor    al,0x80
  41f29c:	or     eax,0x8995300b
  41f2a1:	sbb    cl,bl
  41f2a3:	jbe    0x41f238
  41f2a5:	(bad)  
  41f2a6:	icebp  
  41f2a7:	sti    
  41f2a8:	(bad)  
  41f2a9:	mov    ebx,fs
  41f2ab:	xchg   ebp,eax
  41f2ac:	adc    al,0x6b
  41f2ae:	push   ebx
  41f2af:	stc    
  41f2b0:	mov    WORD PTR [eax+edi*2-0x49],?
  41f2b4:	shl    edi,1
  41f2b6:	jp     0x41f304
  41f2b8:	fnsave [eax+0x1b4d2076]
  41f2be:	pop    es
  41f2bf:	stos   BYTE PTR es:[edi],al
  41f2c0:	(bad)  
  41f2c2:	mov    BYTE PTR [ebx+0x37ab66a6],ch
  41f2c8:	mov    dh,0x5e
  41f2ca:	pusha  
  41f2cb:	(bad)  
  41f2cc:	dec    ecx
  41f2cd:	icebp  
  41f2ce:	push   eax
  41f2cf:	xor    esp,ecx
  41f2d1:	cmp    eax,0x9ab67f43
  41f2d6:	or     edi,ecx
  41f2d8:	adc    al,BYTE PTR [ebx-0x74fe5695]
  41f2de:	out    0x15,eax
  41f2e0:	inc    edx
  41f2e1:	sti    
  41f2e2:	jb     0x41f340
  41f2e4:	lods   al,BYTE PTR ds:[esi]
  41f2e5:	scas   eax,DWORD PTR es:[edi]
  41f2e6:	out    0x57,eax
  41f2e8:	adc    DWORD PTR [ebx+0x555c5085],ecx
  41f2ee:	out    0x6a,eax
  41f2f0:	adc    eax,esi
  41f2f2:	mov    esi,0x7ab697e1
  41f2f7:	je     0x41f290
  41f2f9:	mov    edi,0x7f56eddb
  41f2fe:	sar    BYTE PTR [esi-0x45],cl
  41f301:	aas    
  41f302:	mov    BYTE PTR [ecx-0x58],dh
  41f305:	pop    esp
  41f306:	loope  0x41f293
  41f308:	xchg   esp,eax
  41f309:	mov    al,ds:0x270074a3
  41f30e:	sbb    BYTE PTR [edi],ch
  41f310:	mov    ebx,0xaefa3622
  41f315:	test   DWORD PTR [esi],0x89d29f44
  41f31b:	adc    DWORD PTR [esi-0x36],esp
  41f31e:	jmp    0x88abb973
  41f323:	adc    BYTE PTR [ebp-0x5669aea],cl
  41f329:	mov    eax,DWORD PTR [edx+0x5]
  41f32c:	xor    dh,BYTE PTR [edi]
  41f32e:	out    dx,eax
  41f32f:	cmp    ah,cl
  41f331:	sub    ecx,ebx
  41f333:	jecxz  0x41f2db
  41f335:	loopne 0x41f38f
  41f337:	adc    dl,BYTE PTR [esi-0x59cc9d67]
  41f33d:	imul   ebx,DWORD PTR [ecx],0xffffffd4
  41f340:	and    bh,BYTE PTR [eax+edi*2+0x5423b3d1]
  41f347:	pop    ss
  41f348:	fsub   QWORD PTR ds:0xd3d9ceb8
  41f34e:	lock hlt 
  41f350:	adc    eax,0x475999d6
  41f355:	fcomp  DWORD PTR [ebp+0x4a]
  41f358:	sbb    bh,BYTE PTR [esi]
  41f35a:	jns    0x41f3b9
  41f35c:	(bad)
  41f35f:	test   BYTE PTR [edi-0x62],0xe5
  41f363:	sub    ebp,edi
  41f365:	mov    BYTE PTR [esi],ah
  41f367:	sbb    eax,0xade5e159
  41f36c:	add    edi,DWORD PTR [ecx]
  41f36e:	mov    dh,0x50
  41f370:	jl     0x41f313
  41f372:	cmp    BYTE PTR [edx+esi*4],dl
  41f375:	push   ds
  41f376:	xchg   BYTE PTR [ebx-0x423cccfb],bl
  41f37c:	pop    esi
  41f37d:	push   ebp
  41f37e:	mov    ebx,0xe4dbb060
  41f383:	sub    DWORD PTR [esi-0x67],ebp
  41f386:	data16 aaa 
  41f388:	add    BYTE PTR [eax+eiz*1],al
  41f38b:	test   al,0xc7
  41f38d:	pop    esp
  41f38e:	push   ebx
  41f38f:	inc    eax
  41f390:	or     eax,0x1bef2c73
  41f395:	mov    cl,0xbe
  41f397:	and    DWORD PTR [ebp+edx*2+0x76],eax
  41f39b:	sub    edi,DWORD PTR [esi-0x5]
  41f39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39f:	dec    edx
  41f3a0:	push   ecx
  41f3a1:	(bad)  
  41f3a2:	jnp    0x41f342
  41f3a4:	mov    bh,0xd8
  41f3a6:	mov    ch,0xc5
  41f3a8:	std    
  41f3a9:	inc    ebx
  41f3aa:	sti    
  41f3ab:	cmp    al,0x76
  41f3ad:	arpl   WORD PTR [edi-0x9059a78],si
  41f3b3:	test   eax,0x8b6aa9b4
  41f3b8:	in     eax,0xbf
  41f3ba:	and    eax,0x13082ac6
  41f3bf:	in     al,dx
  41f3c0:	cwde   
  41f3c1:	push   0x55
  41f3c3:	mov    cl,0xe1
  41f3c5:	pop    ecx
  41f3c6:	adc    ah,dl
  41f3c8:	dec    eax
  41f3c9:	mov    al,ds:0xb80f3bf
  41f3ce:	pop    edi
  41f3cf:	getsec 
  41f3d1:	cmp    DWORD PTR [ecx],esi
  41f3d3:	ss pusha 
  41f3d5:	add    al,0x94
  41f3d7:	mov    DWORD PTR [edi],edi
  41f3d9:	cld    
  41f3da:	pop    edi
  41f3db:	mov    eax,0xa14f6a09
  41f3e0:	sbb    eax,0xac6af5f0
  41f3e5:	sbb    DWORD PTR [ebp+0x6077a31b],ebx
  41f3eb:	mov    bl,0x9a
  41f3ed:	fcmovnb st,st(6)
  41f3ef:	imul   edx,DWORD PTR [edi],0x6
  41f3f2:	daa    
  41f3f3:	jae    0x41f3f1
  41f3f5:	cmp    ah,BYTE PTR [ecx]
  41f3f7:	and    al,0x8b
  41f3f9:	or     al,0x7c
  41f3fb:	mov    edi,0xc099bfe8
  41f400:	mov    DWORD PTR [eax+edx*1-0x7755772],edx
  41f407:	mov    ecx,0x4dc75c5a
  41f40c:	dec    ebx
  41f40d:	(bad)  
  41f40e:	xchg   esi,eax
  41f40f:	(bad)  [eax+0x4f]
  41f412:	(bad)  
  41f413:	cdq    
  41f414:	es jmp 0xf2a2:0x319b2e4
  41f41c:	cdq    
  41f41d:	repnz push esp
  41f41f:	popf   
  41f420:	jo     0x41f3af
  41f422:	(bad)  
  41f423:	pop    ecx
  41f424:	push   edi
  41f425:	sbb    edx,DWORD PTR [ebp+0x6e]
  41f428:	es push edx
  41f42a:	loope  0x41f3f2
  41f42c:	pop    edi
  41f42d:	mov    esi,0x4c01781e
  41f432:	xchg   ebx,eax
  41f433:	test   BYTE PTR [ebp-0x668690],ch
  41f439:	jno    0x41f44c
  41f43b:	adc    eax,0xc61dec79
  41f440:	mov    dl,0xdf
  41f442:	inc    eax
  41f443:	je     0x41f446
  41f445:	sbb    BYTE PTR [esi-0x60da3691],bh
  41f44b:	add    dh,BYTE PTR [ebp-0x20]
  41f44e:	arpl   si,bp
  41f450:	sbb    BYTE PTR [esi+ebx*8+0x6],bh
  41f454:	push   cs
  41f455:	dec    eax
  41f456:	mov    es,WORD PTR [esi+ebx*4+0x59def7aa]
  41f45d:	in     al,dx
  41f45e:	fld    QWORD PTR [esi-0x5d]
  41f461:	jg     0x41f498
  41f463:	or     eax,0x4e47360f
  41f468:	jbe    0x41f435
  41f46a:	mov    al,BYTE PTR [eax+0x6]
  41f46d:	in     eax,dx
  41f46e:	scas   al,BYTE PTR es:[edi]
  41f46f:	or     ecx,DWORD PTR [ecx]
  41f471:	nop
  41f472:	in     al,dx
  41f473:	sub    dl,BYTE PTR [esi-0x7e424303]
  41f479:	dec    ebx
  41f47a:	mov    DWORD PTR [esi+0x6c],edi
  41f47d:	push   esp
  41f47e:	xchg   ecx,eax
  41f47f:	add    BYTE PTR [ecx],dl
  41f481:	sbb    ch,ah
  41f483:	mov    ecx,0x9d7200d6
  41f488:	call   0xd99d8f15
  41f48d:	jg     0x41f4bd
  41f48f:	pop    es
  41f490:	jae    0x41f4f5
  41f492:	stc    
  41f493:	hlt    
  41f494:	in     eax,dx
  41f495:	jl     0x41f47c
  41f497:	test   eax,0xb3aab49a
  41f49c:	leave  
  41f49d:	in     eax,0x3b
  41f49f:	arpl   WORD PTR cs:[edi+0x5367455b],dx
  41f4a6:	mov    DWORD PTR [ebx+edi*1-0x452f14d8],edi
  41f4ad:	jae    0x41f517
  41f4af:	les    ebx,FWORD PTR [edi-0x44]
  41f4b2:	adc    ebp,DWORD PTR [ebx+0x7a]
  41f4b5:	data16 outs dx,BYTE PTR ds:[esi]
  41f4b7:	mov    bl,0xac
  41f4b9:	adc    eax,0x91aa8859
  41f4be:	push   ss
  41f4bf:	ins    BYTE PTR es:[edi],dx
  41f4c0:	dec    ecx
  41f4c1:	repnz fmul st,st(0)
  41f4c4:	cli    
  41f4c5:	imul   ebx,edi,0xba844cde
  41f4cb:	es aas 
  41f4cd:	xchg   ebp,eax
  41f4ce:	dec    eax
  41f4cf:	pop    esi
  41f4d0:	ss sub eax,0x99d81a7c
  41f4d6:	pop    DWORD PTR [ecx+0x26af1bec]
  41f4dc:	repnz dec esp
  41f4de:	mov    ecx,0x8c9edc45
  41f4e3:	mov    ebx,0x491cb3bd
  41f4e8:	adc    esp,DWORD PTR [edx-0x4d3bd4ad]
  41f4ee:	xchg   esp,eax
  41f4ef:	pusha  
  41f4f0:	mov    ebx,0x269bf5e4
  41f4f5:	out    dx,al
  41f4f6:	es pop ebx
  41f4f8:	(bad)  
  41f4f9:	mov    cl,BYTE PTR [edx]
  41f4fb:	mov    bl,0xea
  41f4fd:	les    edi,FWORD PTR [edi-0x674c1034]
  41f503:	aad    0x9
  41f505:	test   edx,edx
  41f507:	pop    ecx
  41f508:	push   esi
  41f509:	inc    edi
  41f50a:	inc    esp
  41f50b:	or     bl,bh
  41f50d:	retf   0xd449
  41f510:	cmp    DWORD PTR [eax+0x2aa41f8],eax
  41f516:	xchg   ebx,eax
  41f517:	(bad)  ds:0x1354
  41f51c:	nop
  41f51d:	jns    0x41f4a4
  41f51f:	fst    st(6)
  41f521:	mov    cl,BYTE PTR [ebx-0x297aec45]
  41f527:	stos   DWORD PTR es:[edi],eax
  41f528:	mov    cl,0x21
  41f52a:	iret   
  41f52b:	gs and al,0xf3
  41f52e:	jle    0x41f4b6
  41f530:	push   ss
  41f531:	stc    
  41f532:	push   edi
  41f533:	push   ebx
  41f534:	add    BYTE PTR ds:0x667dfc2c,ch
  41f53a:	push   es
  41f53b:	das    
  41f53c:	cmp    al,0x17
  41f53e:	mov    WORD PTR ds:0xe7da362,?
  41f544:	outs   dx,DWORD PTR ds:[esi]
  41f545:	cld    
  41f546:	mov    eax,ds:0x85955c95
  41f54b:	iret   
  41f54c:	test   BYTE PTR [di],ah
  41f54f:	popf   
  41f550:	fcomp  DWORD PTR [ebx+esi*8-0x32]
  41f554:	jno    0x41f5d0
  41f556:	in     eax,dx
  41f557:	push   ss
  41f558:	cmc    
  41f559:	push   es
  41f55a:	in     al,dx
  41f55b:	inc    edx
  41f55c:	shl    BYTE PTR [eax-0x1e42b8d8],cl
  41f562:	pushf  
  41f563:	fwait
  41f564:	ins    BYTE PTR es:[edi],dx
  41f565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f566:	(bad)  
  41f567:	call   0x9436:0xaa22f7a4
  41f56e:	sub    DWORD PTR [ebx+eax*1+0x39],ecx
  41f572:	data16 jo 0x41f557
  41f575:	xor    eax,0xe9634365
  41f57a:	retf   
  41f57b:	jo     0x41f5ee
  41f57d:	sub    BYTE PTR [ecx+0xd],dh
  41f580:	mov    cl,0x9b
  41f582:	jmp    0x6619:0x179d1527
  41f589:	cmp    bl,BYTE PTR [esi+esi*8-0x3c]
  41f58d:	les    esi,FWORD PTR [eax]
  41f58f:	cli    
  41f590:	adc    BYTE PTR [edi+ebp*8-0x6846ea8a],ah
  41f597:	mov    cl,0x47
  41f599:	push   ebx
  41f59a:	xchg   DWORD PTR [eax-0x35009a46],edi
  41f5a0:	je     0x41f538
  41f5a2:	nop
  41f5a3:	scas   eax,DWORD PTR es:[edi]
  41f5a4:	cdq    
  41f5a5:	repz fs jg 0x41f5ee
  41f5a9:	xchg   esp,eax
  41f5aa:	xor    BYTE PTR [edx+0x26],ah
  41f5ad:	lock mov cx,0x5480
  41f5b2:	sub    cl,BYTE PTR [edi-0x3ef141c]
  41f5b8:	xor    BYTE PTR [esi-0x49],0x95
  41f5bc:	jae    0x41f5dc
  41f5be:	pop    ebx
  41f5bf:	push   ecx
  41f5c0:	sub    edi,DWORD PTR ds:[ebx+eax*8]
  41f5c4:	xchg   BYTE PTR [esi-0x4e],dh
  41f5c7:	into   
  41f5c8:	in     al,dx
  41f5c9:	iret   
  41f5ca:	or     cl,BYTE PTR [edi]
  41f5cc:	arpl   di,cx
  41f5ce:	jne    0x41f57b
  41f5d0:	(bad)  
  41f5d1:	idiv   DWORD PTR [eax+0x6]
  41f5d4:	mov    esp,0x2006f657
  41f5d9:	je     0x41f5a6
  41f5db:	cmp    esp,DWORD PTR [ebp+0x57]
  41f5de:	call   0xa237f4e2
  41f5e3:	imul   edx,esi,0x1aa150a1
  41f5e9:	pop    edi
  41f5ea:	sub    eax,0x3e393420
  41f5ef:	scas   al,BYTE PTR es:[edi]
  41f5f0:	or     eax,0x4348b86a
  41f5f5:	inc    edx
  41f5f6:	cmp    DWORD PTR [edi+0x45fdcc4e],0xffffffa5
  41f5fd:	into   
  41f5fe:	cmp    eax,0x74e536fd
  41f603:	mov    ebp,0xa0c99679
  41f608:	cmp    bh,BYTE PTR [ecx+0x7d0f80b7]
  41f60e:	cli    
  41f60f:	adc    bl,BYTE PTR [edi-0x41]
  41f612:	mov    eax,0xae3c2eaf
  41f617:	retf   0xea1a
  41f61a:	fdivr  st(4),st
  41f61c:	inc    edx
  41f61d:	stc    
  41f61e:	pmaxsw mm1,QWORD PTR [ecx]
  41f621:	call   0xc07e33ce
  41f626:	rol    DWORD PTR [ebx],cl
  41f628:	mov    ds:0x16946363,eax
  41f62d:	in     eax,dx
  41f62e:	leave  
  41f62f:	mov    ebp,0x74e66a78
  41f634:	pop    ebx
  41f635:	push   ebx
  41f636:	icebp  
  41f637:	aaa    
  41f638:	xchg   edi,eax
  41f639:	add    eax,0xeeae9a62
  41f63e:	sub    eax,0x59cafe3a
  41f643:	mov    edx,0xb5e14529
  41f648:	and    al,0x18
  41f64a:	add    ecx,DWORD PTR [eax]
  41f64c:	add    ah,BYTE PTR [ebx-0x2a]
  41f64f:	jbe    0x41f696
  41f651:	xor    ebp,DWORD PTR [ebp+0x42f7f65e]
  41f657:	leave  
  41f658:	and    BYTE PTR [ecx+eax*8+0xa],ah
  41f65c:	push   cs
  41f65d:	jmp    0x7bf4ab88
  41f662:	outs   dx,DWORD PTR ds:[esi]
  41f663:	inc    esi
  41f664:	mov    bh,0x67
  41f666:	sub    al,0xcd
  41f668:	jne    0x41f602
  41f66a:	ja     0x41f67e
  41f66c:	cld    
  41f66d:	add    eax,0xc309b81a
  41f672:	or     ah,BYTE PTR [ecx+0x20]
  41f675:	mov    edi,0x5c8de0cd
  41f67a:	fidivr DWORD PTR [ebx-0x750ecc0f]
  41f680:	push   DWORD PTR [ecx*2+0x61a62dce]
  41f687:	pop    ds
  41f688:	xchg   DWORD PTR [ebp-0x35],esi
  41f68b:	xchg   edi,eax
  41f68c:	out    dx,al
  41f68d:	and    DWORD PTR [edi+edi*8-0x49],esi
  41f691:	dec    ecx
  41f692:	lods   al,BYTE PTR ds:[esi]
  41f693:	cmp    edi,DWORD PTR [ebp-0x3343b73a]
  41f699:	pushf  
  41f69a:	jle    0x41f6e6
  41f69c:	fsub   QWORD PTR [edi]
  41f69e:	mov    dh,0xdc
  41f6a0:	pop    es
  41f6a1:	push   ebp
  41f6a2:	adc    ecx,DWORD PTR [ebp-0x13]
  41f6a5:	paddsw mm2,mm4
  41f6a8:	jge    0x41f6e6
  41f6aa:	pop    eax
  41f6ab:	inc    edi
  41f6ac:	xchg   ebp,eax
  41f6ad:	push   edi
  41f6ae:	stos   DWORD PTR es:[edi],eax
  41f6af:	cmc    
  41f6b0:	push   esi
  41f6b1:	jae    0x41f6ea
  41f6b3:	cwde   
  41f6b4:	and    bl,BYTE PTR [ecx-0x3d]
  41f6b7:	ds dec esi
  41f6b9:	ss inc ecx
  41f6bb:	iret   
  41f6bc:	fwait
  41f6bd:	mov    edi,0x619d0452
  41f6c2:	xlat   BYTE PTR ds:[ebx]
  41f6c3:	shr    DWORD PTR [esi+0x18],0xaf
  41f6c7:	jp     0x41f6d4
  41f6c9:	add    DWORD PTR [esi+ebp*8],esi
  41f6cc:	fs mov eax,0x5e55b2fa
  41f6d2:	jnp    0x41f6dd
  41f6d4:	xlat   BYTE PTR ds:[ebx]
  41f6d5:	fnstsw WORD PTR [edi]
  41f6d7:	scas   eax,DWORD PTR es:[edi]
  41f6d8:	push   ebp
  41f6d9:	push   esi
  41f6da:	ret    0x1543
  41f6dd:	cld    
  41f6de:	mov    ebp,0x1ea00797
  41f6e3:	leave  
  41f6e4:	hlt    
  41f6e5:	test   cl,cl
  41f6e7:	dec    BYTE PTR [edx]
  41f6e9:	es gs mov ah,0xa
  41f6ed:	sbb    al,BYTE PTR [esi-0x3c]
  41f6f0:	xchg   edi,eax
  41f6f1:	nop
  41f6f2:	shr    DWORD PTR [eax-0x70],0x2f
  41f6f6:	ret    
  41f6f7:	adc    ecx,DWORD PTR [ecx+esi*1+0x51]
  41f6fb:	add    eax,0xe4971154
  41f700:	test   DWORD PTR ss:[ecx+0x472d6e85],eax
  41f707:	add    ecx,DWORD PTR ds:0x32ac9d6b
  41f70d:	cdq    
  41f70e:	cmp    bl,BYTE PTR [ebx-0x6a]
  41f711:	mov    bh,0x45
  41f713:	lods   eax,DWORD PTR ds:[esi]
  41f714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f715:	aaa    
  41f716:	push   edx
  41f717:	mov    edx,0xb69521c9
  41f71c:	mov    DWORD PTR [ebp+0x5],ecx
  41f71f:	cwde   
  41f720:	arpl   WORD PTR [esi+0x220f9217],cx
  41f726:	dec    dl
  41f728:	push   ecx
  41f729:	aas    
  41f72a:	lods   eax,DWORD PTR ds:[esi]
  41f72b:	imul   edx,DWORD PTR [edx],0x2c
  41f72e:	icebp  
  41f72f:	adc    esp,esp
  41f731:	xor    DWORD PTR [edi+0x4b791361],eax
  41f737:	(bad)  
  41f738:	outs   dx,BYTE PTR ds:[esi]
  41f739:	(bad)  
  41f73a:	call   0x369a:0x30de569e
  41f741:	(bad)  
  41f743:	arpl   WORD PTR [ecx-0x5d82a9ab],si
  41f749:	fstp   TBYTE PTR [esi+0x77]
  41f74c:	out    0x55,al
  41f74e:	jnp    0x41f728
  41f750:	sbb    WORD PTR [esi-0x360d14cb],bx
  41f757:	or     eax,0xee3dfe42
  41f75c:	dec    ebp
  41f75d:	sub    al,0x18
  41f75f:	push   cs
  41f760:	cwde   
  41f761:	(bad)  
  41f762:	stc    
  41f763:	push   ebp
  41f764:	int    0xac
  41f766:	scas   eax,DWORD PTR es:[edi]
  41f767:	ret    0xf36b
  41f76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f76b:	aaa    
  41f76c:	inc    edi
  41f76d:	inc    ebx
  41f76e:	mov    ebx,0x22d7f3a3
  41f773:	push   esp
  41f774:	xchg   esp,eax
  41f775:	jmp    0x55e6:0x9572c139
  41f77c:	dec    esp
  41f77d:	and    ch,BYTE PTR [eax]
  41f77f:	sbb    BYTE PTR [eax+0x20],ah
  41f782:	nop
  41f783:	out    0x52,eax
  41f785:	aaa    
  41f786:	push   DWORD PTR [esi+ebp*1-0x63]
  41f78a:	cmp    al,0xd3
  41f78c:	clc    
  41f78d:	shl    BYTE PTR [esi+0x6c],0x79
  41f791:	out    dx,al
  41f792:	shl    BYTE PTR [esi-0x5e88ad1c],1
  41f798:	add    DWORD PTR [ebp+0x55],eax
  41f79b:	(bad)  
  41f79c:	(bad)  
  41f79d:	mov    bl,0x80
  41f79f:	mov    bh,0xf8
  41f7a1:	enter  0x786a,0xbd
  41f7a5:	inc    edi
  41f7a6:	pop    ecx
  41f7a7:	jge    0x41f753
  41f7a9:	jp     0x41f7ed
  41f7ab:	loopne 0x41f7fc
  41f7ad:	inc    ecx
  41f7ae:	aas    
  41f7af:	mov    cl,0x72
  41f7b1:	cwde   
  41f7b2:	xor    esp,DWORD PTR [ebp-0x22b0d99b]
  41f7b8:	ror    BYTE PTR [ebx],0x0
  41f7bb:	fcom   DWORD PTR [ecx-0x3eeac6fe]
  41f7c1:	and    ah,BYTE PTR [ebx*4+0x16cce9a8]
  41f7c8:	inc    ebp
  41f7c9:	ret    0xda8b
  41f7cc:	shr    BYTE PTR [edx+0x25],0x2b
  41f7d0:	mov    WORD PTR [esi+0x27],?
  41f7d3:	test   eax,0x82f56692
  41f7d8:	sbb    eax,0x35ac60a9
  41f7dd:	jmp    DWORD PTR [edi]
  41f7df:	int    0x1d
  41f7e1:	and    BYTE PTR [eax+eiz*2+0xf],bl
  41f7e5:	inc    edx
  41f7e6:	push   ds
  41f7e7:	xlat   BYTE PTR ds:[ebx]
  41f7e8:	loop   0x41f830
  41f7ea:	fs push es
  41f7ec:	retf   
  41f7ed:	(bad)  
  41f7ee:	mov    cl,0x49
  41f7f0:	ins    DWORD PTR es:[edi],dx
  41f7f1:	push   edx
  41f7f2:	jno    0x41f783
  41f7f4:	add    BYTE PTR [ecx],bh
  41f7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f7:	cmp    dh,BYTE PTR ss:0x920e0092
  41f7fe:	cs push ds
  41f800:	mov    ah,0xa9
  41f802:	js     0x41f880
  41f804:	test   eax,0x111373fe
  41f809:	mov    al,ds:0x944af74f
  41f80e:	dec    ebp
  41f80f:	mov    eax,ds
  41f811:	push   eax
  41f812:	sti    
  41f813:	jae    0x41f817
  41f815:	aaa    
  41f816:	bound  eax,QWORD PTR [edx-0x4c72a5da]
  41f81c:	into   
  41f81d:	and    ebp,edx
  41f81f:	leave  
  41f820:	dec    esp
  41f821:	adc    DWORD PTR ds:0x825fcf3b,ecx
  41f827:	push   ebp
  41f828:	inc    esp
  41f829:	daa    
  41f82a:	mov    al,ds:0xe1801506
  41f82f:	adc    DWORD PTR [ecx+ebp*4-0x2736104],ecx
  41f836:	(bad)  
  41f837:	popf   
  41f838:	addr16 or bh,al
  41f83b:	popa   
  41f83c:	and    al,al
  41f83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83f:	jbe    0x41f88e
  41f841:	push   cs
  41f842:	sub    bh,BYTE PTR [eax]
  41f844:	mov    ebx,0x6e766c07
  41f849:	call   0xbe9fdf73
  41f84e:	sti    
  41f84f:	scas   eax,DWORD PTR es:[edi]
  41f850:	cmp    ecx,esi
  41f852:	jb     0x41f8cb
  41f854:	inc    ebx
  41f855:	ret    0xe326
  41f858:	cld    
  41f859:	mov    ebp,0xe8d803b3
  41f85e:	in     al,dx
  41f85f:	fs mov dl,0x86
  41f862:	mov    edi,0x5dd184a1
  41f867:	je     0x41f85e
  41f869:	mov    ds:0x63f21402,eax
  41f86e:	pop    ecx
  41f86f:	outs   dx,BYTE PTR ds:[esi]
  41f870:	sbb    sp,WORD PTR [esi+0x407325ab]
  41f877:	inc    DWORD PTR [edi-0x57e77f01]
  41f87d:	es push edi
  41f87f:	or     al,0x81
  41f881:	popa   
  41f882:	popf   
  41f883:	dec    ecx
  41f884:	jb     0x41f889
  41f886:	lds    esi,FWORD PTR [ecx+eax*1+0x20]
  41f88a:	or     dl,BYTE PTR [ebx]
  41f88c:	ins    BYTE PTR es:[edi],dx
  41f88d:	jno    0x41f842
  41f88f:	push   ecx
  41f890:	xchg   ebx,eax
  41f891:	pop    ecx
  41f892:	cli    
  41f893:	js     0x41f837
  41f895:	js     0x41f8a2
  41f897:	pop    esp
  41f898:	scas   al,BYTE PTR es:[edi]
  41f899:	push   0x5b67bc64
  41f89e:	les    ecx,FWORD PTR [ecx]
  41f8a0:	mov    ebx,0x8b08558b
  41f8a5:	pop    ebp
  41f8a6:	mov    al,0x3
  41f8a8:	shl    DWORD PTR [ebx],1
  41f8aa:	ror    DWORD PTR [ecx+0x558bb055],cl
  41f8b0:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41f8b6:	and    edx,ebx
  41f8b8:	mov    DWORD PTR [ebp-0x4c],edx
  41f8bb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8be:	mov    ebx,DWORD PTR [ebp-0x48]
  41f8c1:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f8c8:	mov    DWORD PTR [ebp-0x48],edx
  41f8cb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8ce:	mov    ebx,0xfa5e1524
  41f8d3:	sub    ebx,edx
  41f8d5:	add    ebx,DWORD PTR [ebp-0x44]
  41f8d8:	mov    DWORD PTR [ebp-0x44],ebx
  41f8db:	mov    edx,DWORD PTR [ebp+0x8]
  41f8de:	xor    edx,eax
  41f8e0:	add    edx,esi
  41f8e2:	jne    0x41d4a1
  41f8e8:	mov    edx,DWORD PTR [ebp-0xc]
  41f8eb:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f8f2:	mov    bl,BYTE PTR [ebp-0x1]
  41f8f5:	cmp    dl,bl
  41f8f7:	je     0x41f9d5
  41f8fd:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f900:	mov    edx,DWORD PTR [ebp-0xc]
  41f903:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f90a:	mov    ebx,DWORD PTR [ebp+0xc]
  41f90d:	xor    ecx,eax
  41f90f:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  41f916:	jne    0x421e61
  41f91c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f91f:	mov    edx,DWORD PTR [ebp+0xc]
  41f922:	xor    ecx,eax
  41f924:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  41f92c:	mov    edx,DWORD PTR [ebp-0x18]
  41f92f:	xor    edx,eax
  41f931:	add    edx,esi
  41f933:	cmp    ecx,edx
  41f935:	mov    ecx,DWORD PTR [ebp-0x14]
  41f938:	mov    DWORD PTR [ebp+0x8],ecx
  41f93b:	mov    ecx,DWORD PTR [ebp+0x8]
  41f93e:	je     0x423191
  41f944:	xor    ecx,eax
  41f946:	add    ecx,esi
  41f948:	mov    ecx,0x242ebc9
  41f94d:	je     0x41fa5d
  41f953:	mov    edx,DWORD PTR [ebp+0x8]
  41f956:	mov    ebx,DWORD PTR [ebp-0x8]
  41f959:	xor    edx,eax
  41f95b:	xor    ebx,eax
  41f95d:	sub    edx,ebx
  41f95f:	sub    edx,esi
  41f961:	xor    edx,eax
  41f963:	mov    DWORD PTR [ebp+0x8],edx
  41f966:	mov    edx,DWORD PTR [ebp+0x8]
  41f969:	mov    ebx,DWORD PTR [ebp-0x58]
  41f96c:	add    edx,0x5708fa
  41f972:	imul   edx,ebx
  41f975:	mov    DWORD PTR [ebp-0x58],edx
  41f978:	mov    edx,DWORD PTR [ebp+0x8]
  41f97b:	mov    ebx,DWORD PTR [ebp-0x54]
  41f97e:	add    edx,0x64f898
  41f984:	or     edx,ebx
  41f986:	mov    DWORD PTR [ebp-0x54],edx
  41f989:	mov    edx,DWORD PTR [ebp+0x8]
  41f98c:	mov    ebx,DWORD PTR [ebp-0x50]
  41f98f:	add    edx,ecx
  41f991:	xor    edx,ebx
  41f993:	mov    DWORD PTR [ebp-0x50],edx
  41f996:	mov    edx,DWORD PTR [ebp+0x8]
  41f999:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f99c:	add    edx,edi
  41f99e:	and    edx,ebx
  41f9a0:	mov    DWORD PTR [ebp-0x4c],edx
  41f9a3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9a6:	mov    ebx,DWORD PTR [ebp-0x48]
  41f9a9:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f9b0:	mov    DWORD PTR [ebp-0x48],edx
  41f9b3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9b6:	mov    ebx,0xfa5e1524
  41f9bb:	sub    ebx,edx
  41f9bd:	add    ebx,DWORD PTR [ebp-0x44]
  41f9c0:	mov    DWORD PTR [ebp-0x44],ebx
  41f9c3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9c6:	xor    edx,eax
  41f9c8:	add    edx,esi
  41f9ca:	jne    0x41f953
  41f9d0:	jmp    0x41fa5d
  41f9d5:	mov    edx,DWORD PTR [ebp-0x14]
  41f9d8:	mov    DWORD PTR [ebp+0x8],edx
  41f9db:	jmp    0x41fa50
  41f9e0:	mov    edx,DWORD PTR [ebp+0x8]
  41f9e3:	mov    ebx,DWORD PTR [ebp-0x8]
  41f9e6:	xor    edx,eax
  41f9e8:	xor    ebx,eax
  41f9ea:	sub    edx,ebx
  41f9ec:	sub    edx,esi
  41f9ee:	xor    edx,eax
  41f9f0:	mov    DWORD PTR [ebp+0x8],edx
  41f9f3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9f6:	mov    ebx,DWORD PTR [ebp-0x58]
  41f9f9:	add    edx,0x5708fa
  41f9ff:	imul   edx,ebx
  41fa02:	mov    DWORD PTR [ebp-0x58],edx
  41fa05:	mov    edx,DWORD PTR [ebp+0x8]
  41fa08:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa0b:	add    edx,0x64f898
  41fa11:	or     edx,ebx
  41fa13:	mov    DWORD PTR [ebp-0x54],edx
  41fa16:	mov    edx,DWORD PTR [ebp+0x8]
  41fa19:	mov    ebx,DWORD PTR [ebp-0x50]
  41fa1c:	add    edx,ecx
  41fa1e:	xor    edx,ebx
  41fa20:	mov    DWORD PTR [ebp-0x50],edx
  41fa23:	mov    edx,DWORD PTR [ebp+0x8]
  41fa26:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fa29:	add    edx,edi
  41fa2b:	and    edx,ebx
  41fa2d:	mov    DWORD PTR [ebp-0x4c],edx
  41fa30:	mov    edx,DWORD PTR [ebp+0x8]
  41fa33:	mov    ebx,DWORD PTR [ebp-0x48]
  41fa36:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fa3d:	mov    DWORD PTR [ebp-0x48],edx
  41fa40:	mov    edx,DWORD PTR [ebp+0x8]
  41fa43:	mov    ebx,0xfa5e1524
  41fa48:	sub    ebx,edx
  41fa4a:	add    ebx,DWORD PTR [ebp-0x44]
  41fa4d:	mov    DWORD PTR [ebp-0x44],ebx
  41fa50:	mov    edx,DWORD PTR [ebp+0x8]
  41fa53:	xor    edx,eax
  41fa55:	add    edx,esi
  41fa57:	jne    0x41f9e0
  41fa5d:	mov    edx,DWORD PTR [ebp-0x14]
  41fa60:	mov    DWORD PTR [ebp+0x8],edx
  41fa63:	jmp    0x41fad8
  41fa68:	mov    edx,DWORD PTR [ebp+0x8]
  41fa6b:	mov    ebx,DWORD PTR [ebp-0x8]
  41fa6e:	xor    edx,eax
  41fa70:	xor    ebx,eax
  41fa72:	sub    edx,ebx
  41fa74:	sub    edx,esi
  41fa76:	xor    edx,eax
  41fa78:	mov    DWORD PTR [ebp+0x8],edx
  41fa7b:	mov    edx,DWORD PTR [ebp+0x8]
  41fa7e:	mov    ebx,DWORD PTR [ebp-0x58]
  41fa81:	add    edx,0x5708fa
  41fa87:	imul   edx,ebx
  41fa8a:	mov    DWORD PTR [ebp-0x58],edx
  41fa8d:	mov    edx,DWORD PTR [ebp+0x8]
  41fa90:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa93:	add    edx,0x64f898
  41fa99:	or     edx,ebx
  41fa9b:	mov    DWORD PTR [ebp-0x54],edx
  41fa9e:	mov    edx,DWORD PTR [ebp+0x8]
  41faa1:	mov    ebx,DWORD PTR [ebp-0x50]
  41faa4:	add    edx,ecx
  41faa6:	xor    edx,ebx
  41faa8:	mov    DWORD PTR [ebp-0x50],edx
  41faab:	mov    edx,DWORD PTR [ebp+0x8]
  41faae:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fab1:	add    edx,edi
  41fab3:	and    edx,ebx
  41fab5:	mov    DWORD PTR [ebp-0x4c],edx
  41fab8:	mov    edx,DWORD PTR [ebp+0x8]
  41fabb:	mov    ebx,DWORD PTR [ebp-0x48]
  41fabe:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fac5:	mov    DWORD PTR [ebp-0x48],edx
  41fac8:	mov    edx,DWORD PTR [ebp+0x8]
  41facb:	mov    ebx,0xfa5e1524
  41fad0:	sub    ebx,edx
  41fad2:	add    ebx,DWORD PTR [ebp-0x44]
  41fad5:	mov    DWORD PTR [ebp-0x44],ebx
  41fad8:	mov    edx,DWORD PTR [ebp+0x8]
  41fadb:	xor    edx,eax
  41fadd:	add    edx,esi
  41fadf:	jne    0x41fa68
  41fae5:	mov    edx,DWORD PTR [ebp-0x8]
  41fae8:	mov    ebx,DWORD PTR [ebp-0xc]
  41faeb:	xor    edx,eax
  41faed:	lea    edx,[edx+ebx*1+0x3272f1]
  41faf4:	jmp    0x421e4c
  41faf9:	and    BYTE PTR ds:0xc10ac90f,dh
  41faff:	mov    ds:0xfe8da196,al
  41fb04:	jmp    0x32b118eb
  41fb09:	adc    BYTE PTR [esi+0x5e46837c],dh
  41fb0f:	add    DWORD PTR [ebx-0x6ff363b0],0x6
  41fb16:	retf   0x9b38
  41fb19:	jb     0x41fb43
  41fb1b:	pop    ss
  41fb1c:	inc    ecx
  41fb1d:	mov    ah,0x1e
  41fb1f:	into   
  41fb20:	ja     0x41fabe
  41fb22:	mov    dh,0x14
  41fb24:	pop    ss
  41fb25:	push   ds
  41fb26:	dec    ecx
  41fb27:	adc    ch,BYTE PTR [eax+0x63]
  41fb2a:	js     0x41faed
  41fb2c:	in     al,dx
  41fb2d:	mov    cl,BYTE PTR [esi+edx*2]
  41fb30:	mov    ds:0xba474e91,al
  41fb35:	sub    BYTE PTR ds:[esp+eiz*8-0x4b],ah
  41fb3a:	scas   al,BYTE PTR es:[edi]
  41fb3b:	and    eax,0x2c5545c0
  41fb40:	clc    
  41fb41:	dec    edx
  41fb42:	sub    ch,BYTE PTR [ecx+esi*4+0x27]
  41fb46:	mov    eax,0xcd2d53c0
  41fb4b:	mov    ah,0x75
  41fb4d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41fb4f:	push   eax
  41fb50:	mov    eax,0x8d80640d
  41fb55:	sahf   
  41fb56:	int    0xac
  41fb58:	div    BYTE PTR [esi]
  41fb5a:	loopne 0x41fb43
  41fb5c:	std    
  41fb5d:	in     al,dx
  41fb5e:	inc    eax
  41fb5f:	pop    ecx
  41fb60:	adc    edx,DWORD PTR [ebp-0x360b2540]
  41fb66:	lods   eax,DWORD PTR ds:[esi]
  41fb67:	xchg   BYTE PTR [edi+0x42],dh
  41fb6a:	add    cl,BYTE PTR [eax]
  41fb6c:	mov    al,0x28
  41fb6e:	pop    es
  41fb6f:	ja     0x41fbe7
  41fb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb72:	or     eax,0x6adede1d
  41fb77:	(bad)  
  41fb78:	fs int3 
  41fb7a:	in     al,dx
  41fb7b:	je     0x41fbb5
  41fb7d:	call   0xe0c43e80
  41fb82:	dec    edx
  41fb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb84:	(bad)  
  41fb85:	es xchg esp,eax
  41fb87:	add    DWORD PTR [eax],0x5e9ee00b
  41fb8d:	sar    DWORD PTR [ebp+0x20],cl
  41fb90:	xor    al,0x38
  41fb92:	fistp  DWORD PTR [si+0x33]
  41fb96:	js     0x41fb30
  41fb98:	je     0x41fbbb
  41fb9a:	xchg   edx,eax
  41fb9b:	add    al,0xa8
  41fb9d:	pop    ds
  41fb9e:	dec    ebx
  41fb9f:	sbb    dh,BYTE PTR [ecx]
  41fba1:	push   ds
  41fba2:	jne    0x41fb44
  41fba4:	neg    DWORD PTR [ebp-0x2ee774f6]
  41fbaa:	sbb    bl,dl
  41fbac:	retf   0x2001
  41fbaf:	mov    cl,BYTE PTR [ebx+eiz*8+0x5389328c]
  41fbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbb7:	stc    
  41fbb8:	mov    edi,eax
  41fbba:	out    dx,al
  41fbbb:	cmp    ebp,DWORD PTR [edi+0x5c70ea28]
  41fbc1:	aad    0x26
  41fbc3:	in     al,dx
  41fbc4:	mov    bl,0x3a
  41fbc6:	movnti DWORD PTR [ebx-0x24550813],edx
  41fbcd:	mov    ds:0xd9f15adb,eax
  41fbd2:	std    
  41fbd3:	dec    esi
  41fbd4:	in     eax,dx
  41fbd5:	retf   0xfd09
  41fbd8:	repz loope 0x41fc01
  41fbdb:	jl     0x41fc12
  41fbdd:	imul   ebp,ebx,0x52
  41fbe0:	cmc    
  41fbe1:	adc    ecx,DWORD PTR [edx+esi*2-0x42]
  41fbe5:	daa    
  41fbe6:	xor    eax,0x41e30def
  41fbeb:	sar    DWORD PTR [ebx+0x1e],1
  41fbee:	push   eax
  41fbef:	dec    ebx
  41fbf0:	into   
  41fbf1:	xchg   ebx,eax
  41fbf2:	icebp  
  41fbf3:	pmaxsw mm5,QWORD PTR [ebx+0x55a681a4]
  41fbfa:	jbe    0x41fbc1
  41fbfc:	fcmove st,st(5)
  41fbfe:	(bad)  
  41fbff:	jecxz  0x41fb97
  41fc01:	sub    al,0x8c
  41fc03:	ficom  WORD PTR [ecx+0x4360792]
  41fc09:	cmp    DWORD PTR [ebp+0x7],edx
  41fc0c:	shl    BYTE PTR [ecx+0x35b792a8],cl
  41fc12:	fcom   QWORD PTR [edi+esi*2]
  41fc15:	mov    ah,0xec
  41fc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc18:	sti    
  41fc19:	lock push es
  41fc1b:	sbb    BYTE PTR [edi+0xb],dl
  41fc1e:	je     0x41fc82
  41fc20:	sub    BYTE PTR [eax+0x5d2b6406],cl
  41fc26:	fiadd  DWORD PTR [ebx+0x76]
  41fc29:	addr16 cli 
  41fc2b:	jns    0x41fbf6
  41fc2d:	jb     0x41fc57
  41fc2f:	call   0xfb41:0x1e6c95f0
  41fc36:	push   eax
  41fc37:	sub    ch,al
  41fc39:	add    dl,BYTE PTR [esp+edx*4-0x3d]
  41fc3d:	dec    esi
  41fc3e:	jns    0x41fbc4
  41fc40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc41:	ret    
  41fc42:	out    0x9b,al
  41fc44:	imul   edi,DWORD PTR fs:[edi+0x637fc0fb],0x67
  41fc4c:	fucomi st,st(7)
  41fc4e:	sbb    al,0xab
  41fc50:	add    eax,0x6555f4fa
  41fc55:	add    BYTE PTR [eax+0x38b0ca48],al
  41fc5b:	cmp    bh,BYTE PTR [edx]
  41fc5d:	xchg   ecx,eax
  41fc5e:	enter  0x1d5a,0xdf
  41fc62:	pusha  
  41fc63:	aas    
  41fc64:	fstp   DWORD PTR [edi+0x44]
  41fc67:	dec    ecx
  41fc68:	(bad)  
  41fc69:	jmp    0x41fcdd
  41fc6b:	dec    ecx
  41fc6c:	adc    ecx,ebx
  41fc6e:	mov    BYTE PTR [ebp-0x66df04db],ah
  41fc74:	out    0xd,al
  41fc76:	retf   0xec89
  41fc79:	aaa    
  41fc7a:	mov    ebx,0x4854a0f6
  41fc7f:	mov    DWORD PTR [esi],0x5b272834
  41fc85:	nop
  41fc86:	setbe  BYTE PTR ds:0x5c466ded
  41fc8d:	loop   0x41fc9b
  41fc8f:	in     al,0xc1
  41fc91:	inc    ebp
  41fc92:	out    dx,eax
  41fc93:	add    ch,ah
  41fc95:	int3   
  41fc96:	fcomp  QWORD PTR [edx-0x3c]
  41fc99:	cmp    BYTE PTR [eax],ch
  41fc9b:	lods   eax,DWORD PTR ds:[esi]
  41fc9c:	jo     0x41fcdf
  41fc9e:	xchg   edi,esp
  41fca0:	sbb    al,0xfa
  41fca2:	pop    ss
  41fca3:	jno    0x41fc6f
  41fca5:	lock jle 0x41fcd7
  41fca8:	call   0x1d62:0x1b5f8686
  41fcaf:	ror    dl,0x24
  41fcb2:	stos   BYTE PTR es:[edi],al
  41fcb3:	cmp    bl,BYTE PTR [ecx-0x28fa51e]
  41fcb9:	sbb    DWORD PTR [eax+0x2],esi
  41fcbc:	mov    cl,0x4c
  41fcbe:	std    
  41fcbf:	stos   DWORD PTR es:[edi],eax
  41fcc0:	call   0x1002:0xebb01839
  41fcc7:	js     0x41fcf7
  41fcc9:	add    ebx,DWORD PTR [edx]
  41fccb:	les    ecx,FWORD PTR [ecx]
  41fccd:	push   0x8b1fbadb
  41fcd2:	ror    BYTE PTR [edi+edx*4-0x41],1
  41fcd6:	add    BYTE PTR [esi],0x7b
  41fcd9:	or     dl,bl
  41fcdb:	push   eax
  41fcdc:	fwait
  41fcdd:	sbb    BYTE PTR [edx+0x799b21a4],bl
  41fce3:	xlat   BYTE PTR ds:[ebx]
  41fce4:	inc    edi
  41fce5:	jne    0x41fd2f
  41fce7:	mov    al,0x2a
  41fce9:	fistp  DWORD PTR [ebx+0x67f7a259]
  41fcef:	push   cs
  41fcf0:	retf   
  41fcf1:	in     al,0x20
  41fcf3:	jmp    0x41fcd7
  41fcf5:	shl    BYTE PTR [eax+0x62],0x4
  41fcf9:	jp     0x41fd13
  41fcfb:	push   ecx
  41fcfc:	outs   dx,DWORD PTR ds:[esi]
  41fcfd:	jmp    0x5ead:0x7525e62a
  41fd04:	add    dh,BYTE PTR [ebx]
  41fd06:	in     al,dx
  41fd07:	sub    ebx,eax
  41fd09:	leave  
  41fd0a:	push   edi
  41fd0b:	inc    ebx
  41fd0c:	cmp    eax,0xae683884
  41fd11:	int    0xb4
  41fd13:	arpl   WORD PTR [esi+0x1a],bp
  41fd16:	xlat   BYTE PTR ds:[ebx]
  41fd17:	mov    eax,0xfab3a712
  41fd1c:	addr16 mov ebx,0x4f04a155
  41fd22:	mov    eax,0x53a89b25
  41fd27:	inc    esi
  41fd28:	or     cl,dh
  41fd2a:	in     eax,dx
  41fd2b:	sub    DWORD PTR [edi],edi
  41fd2d:	pop    es
  41fd2e:	push   cs
  41fd2f:	adc    esp,DWORD PTR [edx-0x5c]
  41fd32:	push   ds
  41fd33:	or     eax,0xbc948a7c
  41fd38:	xor    DWORD PTR [ecx+0x4e],ebx
  41fd3b:	xchg   ebx,eax
  41fd3c:	and    bl,al
  41fd3e:	arpl   WORD PTR [edx+ebp*2+0x67],dx
  41fd42:	jecxz  0x41fd73
  41fd44:	add    eax,DWORD PTR [eax-0x7e9762ec]
  41fd4a:	xchg   BYTE PTR [edi-0x27c986b9],ah
  41fd50:	je     0x41fd5a
  41fd52:	jg     0x41fd1d
  41fd54:	sbb    eax,0x4c30c333
  41fd59:	push   edx
  41fd5a:	(bad)  
  41fd5b:	fstp   DWORD PTR [edx+edi*4+0x31]
  41fd5f:	clc    
  41fd60:	(bad)  
  41fd61:	jo     0x41fdca
  41fd63:	jns    0x41fd1f
  41fd65:	fsubrp st(6),st
  41fd67:	(bad)  
  41fd68:	cld    
  41fd69:	loop   0x41fd35
  41fd6b:	mov    BYTE PTR [edi+0x654f60b3],dl
  41fd71:	fdiv   QWORD PTR [ecx]
  41fd73:	mov    esp,0x94f38ad5
  41fd78:	pop    ds
  41fd79:	in     al,dx
  41fd7a:	adc    al,0x1c
  41fd7c:	push   0xbbba8dca
  41fd81:	popf   
  41fd82:	cmp    eax,0xdafad025
  41fd87:	or     eax,0xf2758f70
  41fd8c:	stos   BYTE PTR es:[edi],al
  41fd8d:	cmp    esi,esi
  41fd8f:	mov    edx,0x56b66c06
  41fd94:	std    
  41fd95:	inc    eax
  41fd96:	pusha  
  41fd97:	das    
  41fd98:	test   DWORD PTR [edx],eax
  41fd9a:	adc    ch,ch
  41fd9c:	sub    eax,DWORD PTR [eax+eiz*8+0x30]
  41fda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda1:	fdiv   QWORD PTR [eax+ecx*1-0x68]
  41fda5:	pop    ebp
  41fda6:	pop    ebx
  41fda7:	ss jno 0x41fdc7
  41fdaa:	xchg   edi,eax
  41fdab:	out    dx,eax
  41fdac:	clc    
  41fdad:	jl     0x41fda0
  41fdaf:	arpl   sp,bp
  41fdb1:	jno    0x41fd98
  41fdb3:	mov    ch,0x96
  41fdb5:	push   0xffffff83
  41fdb7:	ins    DWORD PTR es:[edi],dx
  41fdb8:	pop    eax
  41fdb9:	out    dx,al
  41fdba:	into   
  41fdbb:	ja     0x41fe1b
  41fdbd:	jecxz  0x41fe33
  41fdbf:	test   ebx,0xa9f05d92
  41fdc5:	sbb    eax,0x2c5d30db
  41fdca:	int    0x1e
  41fdcc:	shr    BYTE PTR [ebx],1
  41fdce:	inc    esi
  41fdcf:	pop    ebx
  41fdd0:	std    
  41fdd1:	push   ebx
  41fdd2:	hlt    
  41fdd3:	in     al,dx
  41fdd4:	pop    esi
  41fdd5:	push   eax
  41fdd6:	fadd   DWORD PTR [edi-0x14]
  41fdd9:	push   ds
  41fdda:	cmp    eax,0xe2084148
  41fddf:	pop    ss
  41fde0:	rol    DWORD PTR [eax+ebp*1-0xe99314a],cl
  41fde7:	xchg   esp,eax
  41fde8:	mov    ds:0x7e104685,eax
  41fded:	push   ds
  41fdee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdef:	sub    DWORD PTR [edi],esp
  41fdf1:	imul   esi,DWORD PTR [edi+0x36],0xe96cfa1a
  41fdf8:	pop    edi
  41fdf9:	into   
  41fdfa:	xor    al,BYTE PTR [edi+edx*8-0x61]
  41fdfe:	psrlw  mm7,mm6
  41fe01:	nop
  41fe02:	adc    BYTE PTR [ecx-0x2a322b64],dl
  41fe08:	jmp    0x78db:0x512e6eb2
  41fe0f:	fldenv [ebp-0x3e7e3087]
  41fe15:	mov    al,0x6b
  41fe17:	mov    bl,0xec
  41fe19:	adc    cl,ch
  41fe1b:	cmp    eax,0x51945772
  41fe20:	(bad)  
  41fe21:	mov    al,0x1
  41fe23:	(bad)  
  41fe25:	imul   esp,DWORD PTR [ebx],0x6c1403c4
  41fe2b:	inc    esp
  41fe2c:	iret   
  41fe2d:	jp     0x41fdef
  41fe2f:	lods   al,BYTE PTR ds:[esi]
  41fe30:	or     edx,ebx
  41fe32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe33:	pop    ebp
  41fe34:	lahf   
  41fe35:	lods   al,BYTE PTR ds:[esi]
  41fe36:	leave  
  41fe37:	jp     0x41fe55
  41fe39:	xor    bl,BYTE PTR [ebx-0x46]
  41fe3c:	daa    
  41fe3d:	in     eax,0xaa
  41fe3f:	sbb    al,0x91
  41fe41:	call   0x4c2a26f2
  41fe46:	mov    DWORD PTR [ebx-0x2c],edx
  41fe49:	imul   ebp,DWORD PTR [ebx],0x65
  41fe4c:	add    esp,edi
  41fe4e:	cld    
  41fe4f:	outs   dx,DWORD PTR ds:[esi]
  41fe50:	repz xor dh,ch
  41fe53:	adc    DWORD PTR [ebx],edx
  41fe55:	stos   DWORD PTR es:[edi],eax
  41fe56:	push   cs
  41fe57:	inc    ecx
  41fe58:	mov    bl,BYTE PTR [esi]
  41fe5a:	popa   
  41fe5b:	add    al,dl
  41fe5d:	aas    
  41fe5e:	test   al,0x81
  41fe60:	add    al,0x9f
  41fe62:	push   0x8b081782
  41fe67:	clc    
  41fe68:	push   es
  41fe69:	hlt    
  41fe6a:	inc    esi
  41fe6c:	mov    ch,0x9d
  41fe6e:	dec    dx
  41fe70:	div    BYTE PTR [esi+ebp*1-0x29]
  41fe74:	stc    
  41fe75:	mov    esi,0xa4c638cc
  41fe7a:	adc    bl,BYTE PTR [edi-0x37af3f0b]
  41fe80:	cmp    al,0x33
  41fe82:	sbb    DWORD PTR [ebp+esi*8-0x22],ecx
  41fe86:	and    al,0xa7
  41fe88:	(bad)
  41fe8b:	cwde   
  41fe8c:	mov    ?,WORD PTR [ecx]
  41fe8e:	mov    esp,0xb641833
  41fe93:	cmp    BYTE PTR ds:0x367efd25,0xc0
  41fe9a:	mov    al,0xd0
  41fe9c:	sub    ebp,DWORD PTR [ecx+0x26]
  41fe9f:	xchg   esi,eax
  41fea0:	into   
  41fea1:	(bad)  
  41fea2:	jnp    0x41fef5
  41fea4:	bound  ecx,QWORD PTR [edx]
  41fea6:	aam    0x7f
  41fea8:	mov    bl,0xde
  41feaa:	dec    edx
  41feab:	dec    edi
  41feac:	or     bh,ah
  41feae:	sub    BYTE PTR [ebx],dh
  41feb0:	test   eax,0x235fabee
  41feb5:	dec    ebp
  41feb6:	sub    BYTE PTR [ebx],bl
  41feb8:	dec    ecx
  41feb9:	jp     0xbc1a3d53
  41febf:	out    0xc8,eax
  41fec1:	scas   al,BYTE PTR es:[edi]
  41fec2:	mov    bl,0x5e
  41fec4:	push   ebx
  41fec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec6:	loope  0x41fe92
  41fec8:	ja     0x41ff04
  41feca:	mov    edx,edx
  41fecc:	jb     0x41ff09
  41fece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fecf:	xchg   esi,eax
  41fed0:	fcom   QWORD PTR [edx+ecx*4-0x18705228]
  41fed7:	les    edi,FWORD PTR [eax+0xe]
  41feda:	jmp    0x8aa8:0x4b28a9d9
  41fee1:	xchg   BYTE PTR [edx],bh
  41fee3:	je     0x41ff1a
  41fee5:	add    al,0x48
  41fee7:	outs   dx,BYTE PTR ds:[esi]
  41fee8:	mov    ch,0x33
  41feea:	adc    ebp,DWORD PTR [ebp+0x347463be]
  41fef0:	sar    BYTE PTR [edx+0x3e],0xa1
  41fef4:	in     al,dx
  41fef5:	ret    0xe52b
  41fef8:	xor    DWORD PTR ds:0xadaffc1e,eax
  41fefe:	ret    
  41feff:	jb     0x41fe84
  41ff01:	cli    
  41ff02:	ss call 0xcc64c64e
  41ff08:	les    ecx,FWORD PTR [ebp+0x21d8616f]
  41ff0e:	inc    eax
  41ff0f:	add    al,0x3f
  41ff11:	inc    edi
  41ff13:	inc    esi
  41ff14:	scas   eax,DWORD PTR es:[edi]
  41ff15:	or     ecx,DWORD PTR [edi]
  41ff17:	adc    al,0xc7
  41ff19:	xchg   ebx,eax
  41ff1a:	pop    esi
  41ff1b:	(bad)  
  41ff1c:	sub    BYTE PTR [eax+edx*2+0x49],al
  41ff20:	sbb    eax,0x68710e92
  41ff25:	dec    esp
  41ff26:	push   es
  41ff27:	push   cs
  41ff28:	xchg   esp,eax
  41ff29:	mov    edi,0xaccb69ba
  41ff2e:	sub    ebx,eax
  41ff30:	gs and ch,bl
  41ff33:	jle    0x41ffab
  41ff35:	test   eax,0xfb86c4f5
  41ff3a:	jle    0x41ff0b
  41ff3c:	fs cmp eax,0x3d16f615
  41ff42:	mov    ch,BYTE PTR [eax+eax*2+0x6c61126b]
  41ff49:	xchg   dh,bl
  41ff4b:	mov    eax,0xa6b3de89
  41ff50:	xlat   BYTE PTR ds:[ebx]
  41ff51:	cdq    
  41ff52:	fwait
  41ff53:	jb     0x41fef0
  41ff55:	in     eax,dx
  41ff56:	sti    
  41ff57:	and    bh,al
  41ff59:	shl    BYTE PTR [edi+0x5cbac988],0xe5
  41ff60:	ss daa 
  41ff62:	inc    ebx
  41ff63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff64:	lea    edx,[ebx]
  41ff66:	dec    ebx
  41ff67:	ror    DWORD PTR ds:0x7df0108c,1
  41ff6d:	scas   al,BYTE PTR es:[edi]
  41ff6e:	cmp    ebp,DWORD PTR fs:[esi-0x1e]
  41ff72:	int3   
  41ff73:	daa    
  41ff74:	sar    DWORD PTR [esi],cl
  41ff76:	mov    ebx,0xe86740b4
  41ff7b:	gs inc esi
  41ff7d:	mov    edi,0x9376589b
  41ff82:	iret   
  41ff83:	adc    bl,BYTE PTR [edx]
  41ff85:	ret    0x9e99
  41ff88:	xchg   esp,eax
  41ff89:	pusha  
  41ff8a:	mov    cl,0xb8
  41ff8c:	les    ebx,FWORD PTR [edx+eax*2-0x6a0f5af5]
  41ff93:	mov    edi,0x50519819
  41ff98:	aam    0xe
  41ff9a:	push   cs
  41ff9b:	sub    edi,DWORD PTR ds:0x305410ca
  41ffa1:	mov    dh,0x73
  41ffa3:	scas   al,BYTE PTR es:[edi]
  41ffa4:	retf   
  41ffa5:	imul   ebx,DWORD PTR [ecx-0x1017dcdf],0x5e
  41ffac:	add    BYTE PTR [esi+0x5e],bh
  41ffaf:	xchg   ebx,eax
  41ffb0:	inc    esi
  41ffb1:	aas    
  41ffb2:	jecxz  0x41ffea
  41ffb4:	and    bl,ch
  41ffb6:	and    ah,cl
  41ffb8:	cs inc edx
  41ffba:	out    dx,eax
  41ffbb:	add    DWORD PTR [edi+0x63],eax
  41ffbe:	dec    eax
  41ffbf:	mov    ecx,DWORD PTR [eax+esi*4-0x62]
  41ffc3:	jmp    0x41ffb5
  41ffc5:	inc    eax
  41ffc6:	mov    ch,0x9e
  41ffc8:	xor    al,0x78
  41ffca:	popa   
  41ffcb:	sbb    edx,0xffffff82
  41ffce:	out    0x88,eax
  41ffd0:	dec    esi
  41ffd1:	sbb    ch,bl
  41ffd3:	arpl   cx,ax
  41ffd5:	jo     0x41ff75
  41ffd7:	(bad)  
  41ffd8:	dec    edi
  41ffd9:	popf   
  41ffda:	loopne 0x420047
  41ffdc:	mul    BYTE PTR [ebx-0x6a]
  41ffdf:	call   0x74865f72
  41ffe4:	(bad)  
  41ffe6:	pop    esp
  41ffe7:	bound  esp,QWORD PTR [ecx-0x1b18683e]
  41ffed:	ins    DWORD PTR es:[edi],dx
  41ffee:	xchg   DWORD PTR [eax],ecx
  41fff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fff1:	jmp    0x1457447f
  41fff6:	test   BYTE PTR cs:[ebx-0x1c63c441],bl
  41fffd:	fmul   QWORD PTR [edi]
  41ffff:	xchg   ecx,eax
  420000:	jg     0x420049
  420002:	xlat   BYTE PTR ds:[ebx]
  420003:	jo     0x41ffe6
  420005:	or     dl,BYTE PTR [ecx+0x29]
  420008:	outs   dx,BYTE PTR ds:[esi]
  420009:	sahf   
  42000a:	mul    DWORD PTR [ecx+0x1fd0416f]
  420010:	into   
  420011:	pusha  
  420012:	add    bh,dh
  420014:	sub    eax,0x5dae40a9
  420019:	or     al,0x3d
  42001b:	rcl    DWORD PTR [ebp-0x5bfa1978],cl
  420021:	pop    es
  420022:	mov    cl,BYTE PTR [ecx+esi*8-0x2e]
  420026:	push   esp
  420027:	or     dh,BYTE PTR [esi]
  420029:	lahf   
  42002a:	jmp    0xb817c9ee
  42002f:	cmp    eax,0x90e2de4
  420034:	lahf   
  420035:	in     eax,0xd4
  420037:	es in  eax,0xc8
  42003a:	icebp  
  42003b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42003c:	retf   0x7940
  42003f:	hlt    
  420040:	add    eax,0xad5f39b
  420045:	sub    BYTE PTR [edi+0x56],bh
  420048:	in     eax,0x44
  42004a:	(bad)  
  42004b:	sub    BYTE PTR [ecx-0x69110e7a],al
  420051:	not    esi
  420053:	pop    ebp
  420054:	adc    BYTE PTR [ebp-0x86f31be],al
  42005a:	out    dx,eax
  42005b:	es dec eax
  42005d:	push   edx
  42005e:	(bad)  
  42005f:	das    
  420060:	and    ecx,DWORD PTR [eax+0x23]
  420063:	scas   al,BYTE PTR es:[edi]
  420064:	sub    DWORD PTR [ebx-0x6],ebx
  420067:	add    DWORD PTR [ebp+0x15],0xd8cb92b3
  42006e:	inc    edi
  42006f:	push   0x38
  420071:	lods   al,BYTE PTR ds:[esi]
  420072:	mov    eax,0xb66d163f
  420077:	xchg   edi,eax
  420078:	cli    
  420079:	adc    ebp,DWORD PTR [edi-0x76]
  42007c:	xor    eax,DWORD PTR [edx+ebp*8]
  42007f:	sti    
  420080:	daa    
  420081:	or     esi,DWORD PTR [edx]
  420083:	arpl   WORD PTR ds:0x9955b4cb,sp
  420089:	repz xchg ecx,eax
  42008b:	stc    
  42008c:	and    ecx,DWORD PTR [edi+eax*4+0x3d69828d]
  420093:	add    esi,esp
  420095:	adc    DWORD PTR [esp+ebx*1-0x4c],edi
  420099:	rol    BYTE PTR [esi],cl
  42009b:	push   esi
  42009c:	and    ecx,DWORD PTR [ebp-0x4e]
  42009f:	test   BYTE PTR [ebx+ebp*8+0x54],0xf
  4200a4:	sub    al,0x2b
  4200a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a7:	imul   edx,DWORD PTR [edi],0xc09e0035
  4200ad:	out    dx,eax
  4200ae:	and    al,0xd3
  4200b0:	jae    0x4200a6
  4200b2:	push   es
  4200b3:	mov    bh,0xa2
  4200b5:	rol    BYTE PTR [esi],cl
  4200b7:	jno    0x42004e
  4200b9:	rcl    DWORD PTR [ebp+0xaad2e],cl
  4200bf:	retf   
  4200c0:	inc    esp
  4200c1:	pop    edx
  4200c2:	dec    ecx
  4200c3:	pop    ebx
  4200c4:	push   ecx
  4200c5:	mov    al,ds:0xd1921ab6
  4200ca:	add    esp,esp
  4200cc:	mov    ds:0x79c6ff4a,al
  4200d1:	jecxz  0x420152
  4200d3:	mov    ah,0x6
  4200d5:	adc    bl,BYTE PTR [ebx]
  4200d7:	mov    edx,edi
  4200d9:	addr16 nop
  4200db:	mov    al,0xe
  4200dd:	das    
  4200de:	pop    edx
  4200df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200e0:	mov    bh,0x78
  4200e2:	mov    esi,0x796dfb87
  4200e7:	mov    edx,DWORD PTR fs:[edx+0xe657aa4]
  4200ee:	adc    ecx,ecx
  4200f0:	pop    ds
  4200f1:	and    BYTE PTR [eax-0x6c51629a],dh
  4200f7:	mov    BYTE PTR [ecx],cl
  4200f9:	loopne 0x42008a
  4200fb:	inc    edi
  4200fc:	lods   al,BYTE PTR ds:[esi]
  4200fd:	and    DWORD PTR [ecx],ecx
  4200ff:	sbb    al,BYTE PTR [ebp-0x49]
  420102:	and    ebx,DWORD PTR [eax]
  420104:	add    al,0xea
  420106:	pop    esi
  420107:	in     eax,dx
  420108:	sub    bh,BYTE PTR [edx]
  42010a:	adc    esp,0xfffffff8
  42010d:	adc    DWORD PTR [edx-0x51],esp
  420110:	cwde   
  420111:	adc    cl,BYTE PTR [ecx]
  420113:	pop    ecx
  420114:	jp     0x42012a
  420116:	std    
  420117:	repnz sti 
  420119:	mov    bh,0xe2
  42011b:	sub    DWORD PTR [edi+0x3b9fe635],ebx
  420121:	fs pop ebp
  420123:	int3   
  420124:	call   0x73a3:0x22d9114f
  42012b:	mov    ecx,0xdd84d7a8
  420130:	or     BYTE PTR [ebx+0x30],0x6e
  420134:	les    ebx,FWORD PTR [ebx]
  420136:	push   ss
  420137:	(bad)  
  420138:	fwait
  420139:	(bad)  
  42013a:	fild   WORD PTR [ebx]
  42013c:	jnp    0x420143
  42013e:	(bad)  
  42013f:	push   ebp
  420140:	mov    dl,0xdb
  420142:	ret    
  420143:	scas   al,BYTE PTR es:[edi]
  420144:	dec    ebx
  420145:	mov    edi,0xf81d5c78
  42014a:	or     eax,0x29255909
  42014f:	sbb    edx,DWORD PTR [ebx+0x44]
  420152:	xchg   esi,eax
  420153:	fmulp  st(2),st
  420155:	or     al,0x68
  420157:	jecxz  0x4200e3
  420159:	or     al,0xfa
  42015b:	aam    0xfd
  42015d:	cdq    
  42015e:	and    eax,0xfb76a916
  420163:	test   eax,0xe3ac9ce5
  420168:	sti    
  420169:	jmp    0x4200f1
  42016b:	dec    eax
  42016c:	dec    ebx
  42016d:	fild   DWORD PTR [edx+0x3518690d]
  420173:	cmp    DWORD PTR [edx],esi
  420175:	or     BYTE PTR [ebx-0x1d5b00d2],bl
  42017b:	push   edx
  42017c:	dec    ebx
  42017d:	sbb    bl,BYTE PTR [esp+eax*4-0x64dd2476]
  420184:	mov    dh,0xdc
  420186:	mov    bl,0xcb
  420188:	test   ch,cl
  42018a:	jns    0x42020b
  42018c:	lea    esi,[edx+0x63f52e71]
  420192:	into   
  420193:	xchg   ebp,eax
  420194:	dec    ebp
  420195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420196:	fwait
  420197:	mov    bh,0xd5
  420199:	or     eax,0x270d7d3a
  42019e:	jp     0x4201bc
  4201a0:	mov    WORD PTR [edi],gs
  4201a2:	rol    DWORD PTR [esi],0x18
  4201a5:	pop    ecx
  4201a6:	loop   0x4201a1
  4201a8:	mov    edi,DWORD PTR [esi+esi*1]
  4201ab:	ror    BYTE PTR [esi-0x5b6b69f3],cl
  4201b1:	xchg   BYTE PTR [ebx],cl
  4201b3:	mov    bl,0x13
  4201b5:	pusha  
  4201b6:	(bad)  
  4201b7:	pushf  
  4201b8:	sahf   
  4201b9:	cmc    
  4201ba:	rcl    eax,0xf9
  4201bd:	cmp    esi,0x8be27803
  4201c3:	jmp    FWORD PTR [edi]
  4201c5:	sub    dh,dl
  4201c7:	popf   
  4201c8:	test   al,0x2c
  4201ca:	add    eax,0xb09cd307
  4201cf:	lea    eax,[eax]
  4201d1:	js     0x42015b
  4201d3:	lock adc al,0xb5
  4201d6:	and    DWORD PTR [esi],edx
  4201d8:	in     al,0x90
  4201da:	and    DWORD PTR [esi-0x3e4c15b0],ebp
  4201e0:	in     eax,dx
  4201e1:	or     esi,esp
  4201e3:	jno    0x4201af
  4201e5:	add    ah,dl
  4201e7:	dec    edi
  4201e8:	and    bl,BYTE PTR [ebx]
  4201ea:	jne    0x4201bf
  4201ec:	push   DWORD PTR [ebx]
  4201ee:	pop    ss
  4201ef:	cmp    ch,BYTE PTR [edi+0x44]
  4201f2:	ins    DWORD PTR es:[edi],dx
  4201f3:	mov    eax,ds:0xb27b5e13
  4201f8:	mov    ss,WORD PTR [ebx]
  4201fa:	not    DWORD PTR [esi+esi*8-0x1c]
  4201fe:	(bad)  [esi-0x21b7baaa]
  420204:	sub    bl,ah
  420206:	inc    eax
  420207:	or     DWORD PTR [esi],edi
  420209:	pop    edx
  42020a:	push   edi
  42020b:	aad    0x8f
  42020d:	imul   esp,DWORD PTR [esi+0x53],0xfffffffe
  420211:	dec    ebp
  420212:	adc    eax,0x81429978
  420217:	ins    BYTE PTR es:[edi],dx
  420218:	or     DWORD PTR [esi-0x4f10136b],edx
  42021e:	pusha  
  42021f:	scas   al,BYTE PTR es:[edi]
  420220:	sbb    al,0xf5
  420222:	cld    
  420223:	std    
  420224:	mov    cl,0x7d
  420226:	shr    BYTE PTR [edx],0xd8
  420229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42022a:	jne    0x420244
  42022c:	(bad)  
  42022e:	in     al,dx
  42022f:	inc    ebx
  420230:	push   DWORD PTR [edx+ebp*4+0x2c0da818]
  420237:	xchg   ebx,eax
  420238:	and    ax,0xb01e
  42023c:	jbe    0x42028f
  42023e:	push   ds
  42023f:	call   0xa18:0xfd92228a
  420246:	lahf   
  420247:	xchg   esi,ecx
  420249:	push   0x5b
  42024b:	retf   
  42024c:	ror    BYTE PTR [edx+0x3e98fb5c],1
  420252:	or     BYTE PTR [eax-0xf],dl
  420255:	inc    eax
  420256:	fs iret 
  420258:	push   ss
  420259:	lock and eax,0xca108406
  42025f:	cmp    DWORD PTR ds:0xc23e4f93,ebx
  420265:	repnz push esi
  420267:	mov    al,ds:0xd874fa7a
  42026c:	push   es
  42026d:	jno    0x42028d
  42026f:	mov    eax,fs
  420271:	test   DWORD PTR [edi-0x7e],eax
  420274:	(bad)  
  420275:	dec    esp
  420276:	adc    esi,DWORD PTR [ecx-0x23]
  420279:	and    ch,BYTE PTR [ebx+eiz*8]
  42027c:	fdiv   QWORD PTR [eax+0x1dc28afb]
  420282:	ret    0x54eb
  420285:	mov    ah,0x5b
  420287:	shl    edi,0x63
  42028a:	retf   
  42028b:	iret   
  42028c:	and    edx,DWORD PTR [edi-0x4c070f53]
  420292:	mov    esi,0xac456dc3
  420297:	enter  0x65cc,0xbb
  42029b:	lea    ecx,[edi+0x3d]
  42029e:	jmp    0x420228
  4202a0:	sbb    ebp,ebp
  4202a2:	jb     0x4202e9
  4202a4:	sub    esi,DWORD PTR [edi-0x63a3b21f]
  4202aa:	(bad)  
  4202ab:	pusha  
  4202ac:	xlat   BYTE PTR ds:[ebx]
  4202ad:	xchg   BYTE PTR [ecx-0x75112893],cl
  4202b3:	or     al,BYTE PTR ss:[edi]
  4202b6:	dec    ecx
  4202b7:	test   esi,edx
  4202b9:	lods   al,BYTE PTR ds:[esi]
  4202ba:	ficom  DWORD PTR [ebp+esi*4+0x54cd0fd0]
  4202c1:	add    al,0x26
  4202c3:	inc    edx
  4202c4:	in     eax,dx
  4202c5:	fcomp  DWORD PTR [esi+0x39da0f10]
  4202cb:	lahf   
  4202cc:	test   BYTE PTR [eax],dl
  4202ce:	cmp    al,0xee
  4202d0:	call   0xe1d3:0x8de54d47
  4202d7:	inc    eax
  4202d8:	sub    ebx,DWORD PTR [edi-0x6e]
  4202db:	rcr    DWORD PTR ds:0x89ca6d25,0x30
  4202e2:	aam    0x8
  4202e4:	sbb    ch,BYTE PTR fs:[ebp-0x6f]
  4202e8:	(bad)  
  4202e9:	push   ebx
  4202ea:	imul   ebp,DWORD PTR ds:0x47766d8f,0xc0c69250
  4202f4:	repz pop esp
  4202f6:	and    DWORD PTR [ecx+eiz*8],0x45
  4202fa:	mov    edx,0x429112a3
  4202ff:	(bad)  
  420300:	sti    
  420301:	and    eax,0xc39ea8c7
  420306:	cli    
  420307:	mov    ds,WORD PTR [esi]
  420309:	jge    0x420366
  42030b:	ja     0x42034f
  42030d:	dec    esi
  42030e:	adc    esp,DWORD PTR [edx]
  420310:	call   0xb56b:0xe4cd1d0d
  420317:	mov    edx,0xbef2ebe8
  42031c:	stos   BYTE PTR es:[edi],al
  42031d:	mov    ds:0x84530ec5,al
  420322:	dec    eax
  420323:	cld    
  420324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420325:	mov    dh,0x66
  420327:	add    BYTE PTR [ebx-0x2c28d60c],al
  42032d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42032e:	sub    DWORD PTR [ecx+0x6cb9b645],eax
  420334:	mov    eax,ds:0xa2a13d8
  420339:	xchg   esp,eax
  42033a:	dec    ecx
  42033b:	je     0x4203a6
  42033d:	mov    ecx,0xe207a13b
  420342:	jno    0x42033d
  420344:	sbb    ch,BYTE PTR [ebx-0xf366f23]
  42034a:	fisttp QWORD PTR [ebp-0x1c76f1ed]
  420350:	push   edx
  420351:	xor    DWORD PTR [esp+ebx*4],edx
  420354:	and    al,0x3e
  420356:	mov    esi,esi
  420358:	shl    DWORD PTR [eax+0x626cd198],0xea
  42035f:	inc    edi
  420360:	fucomi st,st(2)
  420362:	jb     0x420339
  420364:	mov    ?,WORD PTR [esi]
  420366:	mov    eax,0x9e346c73
  42036b:	mov    edi,es
  42036d:	pop    ds
  42036e:	test   esi,edi
  420370:	call   0x7cb4bfe6
  420375:	push   ebx
  420376:	imul   edx,DWORD PTR [ecx+0x2c],0xffffffd2
  42037a:	push   edi
  42037b:	call   0xd21:0xe1abfc2e
  420382:	shl    eax,1
  420384:	int    0x9b
  420386:	or     ah,cl
  420388:	ja     0x420369
  42038a:	outs   dx,BYTE PTR ds:[esi]
  42038b:	rcl    edi,cl
  42038d:	jp     0x4203bf
  42038f:	ds mov cs,ebx
  420392:	inc    ebx
  420393:	test   eax,0xfd3257de
  420398:	sbb    al,0x66
  42039a:	cmp    eax,0x93251e29
  42039f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a0:	lahf   
  4203a1:	stos   DWORD PTR es:[edi],eax
  4203a2:	add    eax,0x76a1a1c3
  4203a7:	mov    al,0x5d
  4203a9:	int    0x1a
  4203ab:	push   0xffffff8f
  4203ad:	and    esp,DWORD PTR [edi+esi*1-0x6f]
  4203b1:	sub    DWORD PTR [ecx-0x4f],0x7d63a743
  4203b8:	mov    ds:0x9da16211,al
  4203bd:	adc    DWORD PTR [ecx],ebp
  4203bf:	dec    eax
  4203c0:	out    dx,al
  4203c1:	pop    ebp
  4203c2:	xchg   edx,eax
  4203c3:	push   ss
  4203c4:	aas    
  4203c5:	repz cli 
  4203c7:	push   0xd8c01dd
  4203cc:	and    BYTE PTR [ebp-0x608c1f53],bh
  4203d2:	cli    
  4203d3:	mov    bl,BYTE PTR [eax+0x1]
  4203d6:	inc    edi
  4203d7:	lods   eax,DWORD PTR ds:[esi]
  4203d8:	adc    DWORD PTR [edi+0x11],ebx
  4203db:	sbb    esp,DWORD PTR [edx]
  4203dd:	ret    
  4203de:	jmp    0x6b1c11b3
  4203e3:	mov    ?,WORD PTR [esi+ebx*1-0x7ec83489]
  4203ea:	(bad)  
  4203eb:	js     0x420421
  4203ed:	fucomip st,st(3)
  4203ef:	mov    bl,0xc9
  4203f1:	in     eax,dx
  4203f2:	mov    edx,DWORD PTR [ebp-0x29]
  4203f5:	cs mov edx,0x9ce80826
  4203fb:	xchg   DWORD PTR ds:0xf8ca8b62,edi
  420401:	enter  0x3739,0x81
  420405:	loope  0x4203ea
  420407:	inc    edx
  420408:	adc    DWORD PTR [eax+0x47],ebx
  42040b:	xchg   ebx,eax
  42040c:	fsubr  DWORD PTR [edi]
  42040e:	adc    eax,0xcb85f82
  420413:	add    ecx,DWORD PTR ds:0x335d6309
  420419:	pop    ds
  42041a:	sub    ah,BYTE PTR [ebp+0x6f]
  42041d:	cwde   
  42041e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041f:	jo     0x420499
  420421:	outs   dx,DWORD PTR ds:[esi]
  420422:	repz adc BYTE PTR ds:[ebx+edx*8+0x744c49bb],bl
  42042b:	mov    ecx,0x7ae5b45
  420430:	cs (bad) 
  420432:	imul   ebx,DWORD PTR [edx-0x2f42e32],0x8ff2a4a8
  42043c:	mov    ds:0xdf639a,al
  420441:	xchg   esi,eax
  420442:	sub    eax,0x716ff193
  420447:	repz ret 
  420449:	ret    
  42044a:	dec    esi
  42044b:	push   ss
  42044c:	mov    dh,0xf
  42044e:	sbb    bh,0x72
  420451:	dec    esp
  420452:	ss jmp 0xe2d11db7
  420458:	or     edi,eax
  42045a:	and    bh,BYTE PTR [esi+0x6bd2b6ca]
  420460:	dec    esi
  420461:	xlat   BYTE PTR ds:[ebx]
  420462:	push   0xfffffffd
  420464:	jmp    0x4941:0x66ed5f3f
  42046b:	addr16 push edx
  42046d:	enter  0xad41,0xc8
  420471:	in     eax,dx
  420472:	test   al,0xf5
  420474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420476:	or     BYTE PTR [esi-0x5288880c],cl
  42047c:	retf   0x1a6d
  42047f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420480:	adc    bh,bh
  420482:	clc    
  420483:	sti    
  420484:	stos   DWORD PTR es:[edi],eax
  420485:	inc    eax
  420486:	and    dh,ah
  420488:	and    eax,0xf43eb083
  42048d:	dec    esp
  42048e:	xchg   edx,eax
  42048f:	sub    bh,BYTE PTR [esi]
  420491:	call   0xa082086d
  420496:	xchg   ebx,eax
  420497:	maxps  xmm2,XMMWORD PTR [esi]
  42049a:	push   ebp
  42049b:	lock pop edx
  42049d:	bound  edx,QWORD PTR [edi]
  42049f:	(bad)  
  4204a1:	adc    eax,0x2a973d1b
  4204a6:	pusha  
  4204a7:	js     0x42047c
  4204a9:	jnp    0x420480
  4204ab:	popf   
  4204ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ad:	int    0x79
  4204af:	data16 mov al,0xf
  4204b2:	cmp    ecx,DWORD PTR [eax-0x66]
  4204b5:	inc    eax
  4204b6:	js     0x4204f2
  4204b8:	loop   0x420440
  4204ba:	enter  0x4fe8,0xb7
  4204be:	xchg   ebp,eax
  4204bf:	gs push 0x72ab5173
  4204c5:	mov    dh,0x20
  4204c7:	push   ecx
  4204c8:	mov    ebp,0x4f722e47
  4204cd:	xchg   BYTE PTR [edi-0x672cffe1],bh
  4204d3:	pusha  
  4204d4:	es jns 0x4204a9
  4204d7:	bound  ebp,QWORD PTR [ecx+esi*1-0x68]
  4204db:	xor    eax,0x867039cd
  4204e0:	cmp    edx,DWORD PTR [edi+edi*8-0x1c6d5221]
  4204e7:	sub    al,0x88
  4204e9:	nop
  4204ea:	scas   al,BYTE PTR es:[edi]
  4204eb:	add    ebp,DWORD PTR [ebp-0x80]
  4204ee:	xchg   DWORD PTR [eax-0xa],edi
  4204f1:	cmp    al,0x47
  4204f3:	sub    ch,bh
  4204f5:	popa   
  4204f6:	mov    BYTE PTR [eax-0x1],al
  4204f9:	push   ds
  4204fa:	sub    DWORD PTR [esi+0x68],ebx
  4204fd:	popa   
  4204fe:	fld    QWORD PTR [ecx-0x3c01c323]
  420504:	push   es
  420505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420506:	add    al,0x94
  420508:	call   0x252cd3e
  42050d:	inc    esp
  42050e:	add    ah,BYTE PTR [edi+0x2f]
  420511:	jmp    0x4e6ccff9
  420516:	jl     0x420532
  420518:	jb     0x420523
  42051a:	dec    eax
  42051b:	pop    ebx
  42051c:	dec    eax
  42051d:	ins    DWORD PTR es:[edi],dx
  42051e:	sub    DWORD PTR [esi+0x5c9d2496],edi
  420524:	and    bh,al
  420526:	stos   BYTE PTR es:[edi],al
  420527:	scas   eax,DWORD PTR es:[edi]
  420528:	cdq    
  420529:	xor    al,0x1
  42052b:	adc    DWORD PTR [esi+0x3b],ebp
  42052e:	sbb    eax,0xc8ff3eb0
  420533:	pop    es
  420534:	xor    eax,0xec992452
  420539:	test   BYTE PTR [eax+0x66678573],al
  42053f:	jmp    0x8d20fcea
  420544:	pop    eax
  420545:	sub    eax,0x2a91e52e
  42054a:	std    
  42054b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42054c:	jo     0x42052a
  42054e:	into   
  42054f:	adc    BYTE PTR [ebp+0x5ef22efe],0x5a
  420556:	fisub  DWORD PTR [edi-0x5]
  420559:	mov    eax,0x45eb004c
  42055e:	pop    ss
  42055f:	inc    edi
  420560:	les    edx,FWORD PTR [ebp+0x60]
  420563:	jno    0x4204eb
  420565:	sub    al,0xe9
  420567:	rol    ebx,0x26
  42056a:	sahf   
  42056b:	push   0xffffffd4
  42056d:	or     DWORD PTR [esi+0x5f],esp
  420570:	sub    al,BYTE PTR [ecx-0x17]
  420573:	pop    ebx
  420574:	cmp    al,BYTE PTR [eax-0x15883eaa]
  42057a:	int    0xab
  42057c:	fadd   QWORD PTR [eax]
  42057e:	ja     0x4205c5
  420580:	mov    ebp,DWORD PTR [eax+edi*8-0x6324906c]
  420587:	aad    0x76
  420589:	pushf  
  42058a:	test   al,0xf7
  42058c:	sbb    esi,DWORD PTR [ecx+0x62]
  42058f:	dec    esp
  420590:	lahf   
  420591:	pop    esp
  420592:	dec    DWORD PTR [eax+0x581f2edd]
  420598:	jo     0x42058e
  42059a:	mov    bl,0xd0
  42059c:	adc    ch,BYTE PTR [ebx+eiz*4+0x2583999b]
  4205a3:	test   al,0x3a
  4205a5:	int    0x9b
  4205a7:	unpcklps xmm6,xmm1
  4205aa:	push   ebx
  4205ab:	ror    DWORD PTR [ebp*2-0x4b8f26fa],cl
  4205b2:	push   0xfffffff3
  4205b4:	ret    0xc5fc
  4205b7:	fucomi st,st(0)
  4205b9:	sbb    esi,DWORD PTR [ebx]
  4205bb:	fidiv  WORD PTR [ecx+edx*8+0x69]
  4205bf:	(bad)  
  4205c0:	int3   
  4205c1:	mov    cl,0x6d
  4205c3:	xor    eax,0xf3d1a271
  4205c8:	fcmovne st,st(4)
  4205ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205cb:	push   esi
  4205cc:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4205ce:	and    al,0x40
  4205d0:	mov    ecx,0xf7162dc9
  4205d5:	mov    dl,0x22
  4205d7:	push   es
  4205d8:	pop    edx
  4205d9:	inc    edi
  4205da:	cld    
  4205db:	cmp    edi,ebp
  4205dd:	das    
  4205de:	call   0xc122:0x78655b0a
  4205e5:	xor    eax,0x47e7e6d6
  4205eb:	lock cmp DWORD PTR [edx-0x6e],eax
  4205ef:	in     al,0xd0
  4205f1:	push   es
  4205f2:	cmp    DWORD PTR [ecx],edi
  4205f4:	cmp    cl,cl
  4205f6:	or     al,0xa5
  4205f8:	cmp    DWORD PTR [ecx+0x44],0x65
  4205fc:	inc    ecx
  4205fd:	xor    eax,0x6ab29f02
  420602:	add    al,0x77
  420604:	mov    edx,0xd578d4b5
  420609:	test   DWORD PTR [esi+eax*2-0x44cd37e2],eax
  420610:	rcr    BYTE PTR [eax+0x25],0xfc
  420614:	lock (bad) 
  420616:	fcmovnb st,st(7)
  420618:	out    0x3,eax
  42061a:	rcl    DWORD PTR [edi-0x64],0x2
  42061e:	imul   esp,DWORD PTR [ebx+edi*8-0x296e8ec9],0xffffffb3
  420626:	out    dx,eax
  420627:	mov    esi,edx
  420629:	inc    ebp
  42062a:	cmp    eax,0x983d1db4
  42062f:	sub    eax,0xea66fa23
  420634:	mov    al,ds:0x2834b94
  420639:	or     bh,BYTE PTR [edx]
  42063b:	shl    DWORD PTR [esi],cl
  42063d:	mov    cl,0x89
  42063f:	cmp    dl,BYTE PTR [ecx]
  420641:	int3   
  420642:	jbe    0x4205ea
  420644:	scas   al,BYTE PTR es:[edi]
  420645:	add    al,0x9a
  420647:	jp     0x42065e
  420649:	repz jb 0x4206b1
  42064c:	enter  0x6c7f,0xa7
  420650:	jnp    0x42063e
  420652:	pop    edi
  420653:	dec    edi
  420654:	xchg   ecx,eax
  420655:	dec    ebx
  420656:	nop
  420657:	jne    0x420661
  420659:	loop   0x420616
  42065b:	inc    esi
  42065c:	push   edx
  42065d:	push   edi
  42065e:	test   al,0x5c
  420660:	pmaxsw mm1,QWORD PTR [ebx-0x48]
  420664:	mov    eax,ds:0x35465077
  420669:	(bad)  
  42066a:	pop    ds
  42066b:	mov    edi,0x1f69515e
  420670:	xchg   BYTE PTR [ebx-0x25],cl
  420673:	push   ebx
  420674:	daa    
  420675:	bound  edi,QWORD PTR [ebp+0x17dfa57b]
  42067b:	xchg   esi,eax
  42067c:	es sahf 
  42067e:	(bad)  
  42067f:	xchg   ebp,eax
  420680:	daa    
  420681:	mov    eax,ds:0xb7fde1ea
  420686:	inc    ecx
  420687:	mov    edi,0x69cda25e
  42068c:	ja     0x42061b
  42068e:	or     eax,0x6033dabb
  420693:	out    dx,eax
  420694:	js     0x420679
  420696:	mov    dh,0xa8
  420698:	(bad)  
  420699:	bound  ebx,QWORD PTR [ecx+0x79]
  42069c:	ss dec edx
  42069e:	retf   
  42069f:	and    al,0x41
  4206a1:	jbe    0x420700
  4206a3:	pop    ss
  4206a4:	jbe    0x4206cb
  4206a6:	inc    edx
  4206a7:	arpl   sp,bp
  4206a9:	iret   
  4206aa:	dec    edx
  4206ab:	jnp    0x420649
  4206ad:	mov    ecx,0x91156cf
  4206b2:	scas   eax,DWORD PTR es:[edi]
  4206b3:	xor    dl,BYTE PTR [ebp+0x5743e458]
  4206b9:	adc    al,0xbe
  4206bb:	or     ah,BYTE PTR [ebx]
  4206bd:	push   edi
  4206be:	test   ebx,edx
  4206c0:	ins    DWORD PTR es:[edi],dx
  4206c1:	in     al,dx
  4206c2:	in     al,dx
  4206c3:	rcl    BYTE PTR ds:0x1c2a4c34,1
  4206c9:	or     bl,BYTE PTR [edi-0x1d]
  4206cc:	aam    0x7c
  4206ce:	or     DWORD PTR [ebx],0xffffffc8
  4206d1:	pop    ds
  4206d2:	or     al,0xfe
  4206d4:	leave  
  4206d5:	or     al,0x25
  4206d7:	pop    eax
  4206d8:	sbb    esp,DWORD PTR [esi+0x1a6ce006]
  4206de:	or     DWORD PTR [eax],edx
  4206e0:	arpl   WORD PTR [ebp+0x29],bp
  4206e3:	popf   
  4206e4:	rol    BYTE PTR [ecx],0xfd
  4206e7:	lahf   
  4206e8:	or     BYTE PTR [ebx-0x33883daf],bl
  4206ee:	dec    edx
  4206ef:	inc    ecx
  4206f0:	jmp    0x8778:0xbe756ad1
  4206f7:	adc    eax,DWORD PTR [edi]
  4206f9:	out    0x37,al
  4206fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206fc:	mov    edx,ds
  4206fe:	pop    edi
  4206ff:	xor    BYTE PTR [edi+0x41],ah
  420702:	mov    BYTE PTR [ecx-0x3404a173],dh
  420708:	inc    esp
  420709:	int3   
  42070a:	sub    dh,0xa6
  42070d:	fld    DWORD PTR [esi+esi*2-0x1f68783b]
  420714:	pushf  
  420715:	ss jmp 0x5b42990e
  42071b:	cld    
  42071c:	mov    eax,ebp
  42071e:	xchg   ecx,eax
  42071f:	das    
  420720:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420722:	outs   dx,DWORD PTR ds:[esi]
  420723:	test   esp,esi
  420725:	cmp    BYTE PTR [edi-0x60c5f6bf],bl
  42072b:	adc    ebx,DWORD PTR [ebp-0x4fed0363]
  420731:	loope  0x4206d9
  420733:	mov    edx,0x3b999146
  420738:	or     ah,BYTE PTR [esp+edi*8-0x6b]
  42073c:	xchg   ebp,eax
  42073d:	jecxz  0x42073b
  42073f:	sub    al,0x5e
  420741:	sbb    ebp,ebx
  420743:	pop    ecx
  420744:	ror    DWORD PTR [edi-0x7d286172],cl
  42074a:	and    BYTE PTR [esi+esi*2],dh
  42074d:	gs xor esi,edx
  420750:	(bad)  
  420752:	test   BYTE PTR [ebx-0x51],cl
  420755:	dec    eax
  420756:	or     ch,bh
  420758:	inc    ebp
  420759:	pop    eax
  42075a:	es dec esp
  42075c:	call   0xe982:0xc31e9ac6
  420763:	pop    eax
  420764:	inc    esp
  420765:	shl    BYTE PTR [ecx],1
  420767:	pop    esi
  420768:	inc    edi
  420769:	stos   DWORD PTR es:[edi],eax
  42076a:	sbb    eax,0x7f
  42076d:	push   ebx
  42076e:	push   ebx
  42076f:	push   edi
  420770:	shl    BYTE PTR [esi+0x16],1
  420773:	adc    DWORD PTR [ebx+ebp*8+0x143e59d3],eax
  42077a:	sub    DWORD PTR [ebx+0x78],esi
  42077d:	cwde   
  42077e:	pop    ss
  42077f:	lods   al,BYTE PTR ds:[esi]
  420780:	loope  0x420798
  420782:	(bad)  
  420784:	inc    edi
  420785:	mov    al,0x95
  420787:	adc    al,0xdf
  420789:	inc    edi
  42078a:	arpl   WORD PTR [edx],cx
  42078c:	jnp    0x4207b8
  42078e:	jns    0x42079b
  420790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420791:	pop    ecx
  420792:	lock pop ds
  420794:	lods   al,BYTE PTR ds:[esi]
  420795:	jge    0x420729
  420797:	sbb    al,0x2a
  420799:	adc    dl,0x5c
  42079c:	sbb    ebx,DWORD PTR [ebx]
  42079e:	(bad)  
  4207a0:	stc    
  4207a1:	jge    0x420783
  4207a3:	fcomp  DWORD PTR [eax]
  4207a5:	stos   DWORD PTR es:[edi],eax
  4207a6:	stc    
  4207a7:	adc    al,0x55
  4207a9:	pop    ebp
  4207aa:	data16 lods al,BYTE PTR ds:[esi]
  4207ac:	mov    ebx,0x7144e45e
  4207b1:	int    0x6
  4207b3:	bound  esi,QWORD PTR [ebp+0x2aa327d1]
  4207b9:	leave  
  4207ba:	test   dh,dh
  4207bc:	push   ds
  4207bd:	in     eax,0x4c
  4207bf:	push   es
  4207c0:	call   0xee01e9d7
  4207c5:	sub    eax,0xe0876139
  4207ca:	xor    esp,DWORD PTR [edx]
  4207cc:	mov    esi,DWORD PTR [edx+eax*1-0x12]
  4207d0:	and    bl,BYTE PTR [ebx-0x10c0e171]
  4207d6:	les    edi,FWORD PTR [ecx+0x418b1ab7]
  4207dc:	mov    gs,WORD PTR [eax]
  4207de:	vaddss xmm5,xmm0,xmm2
  4207e2:	adc    ah,bh
  4207e4:	push   cs
  4207e5:	sbb    BYTE PTR [ebp+edi*4+0x72033d82],dl
  4207ec:	sub    DWORD PTR [edi-0x55],ebx
  4207ef:	cli    
  4207f0:	sbb    bh,bl
  4207f2:	lds    edi,FWORD PTR [ebp-0x4b]
  4207f5:	push   ds
  4207f6:	xor    BYTE PTR [esi+0x4d2ce5b],dh
  4207fc:	push   ebp
  4207fd:	arpl   si,bp
  4207ff:	pushf  
  420800:	dec    edx
  420801:	push   ecx
  420802:	shl    DWORD PTR [ecx],cl
  420804:	popf   
  420805:	jo     0x4207b5
  420807:	pop    ebx
  420808:	jmp    0x859209b
  42080d:	pop    ebp
  42080e:	int    0xa9
  420810:	fst    DWORD PTR [esi+0x19]
  420813:	push   cs
  420814:	(bad)  
  420816:	fwait
  420817:	push   esp
  420818:	xchg   ecx,eax
  420819:	jae    0x42086d
  42081b:	pop    ds
  42081c:	pop    eax
  42081d:	daa    
  42081e:	int3   
  42081f:	(bad)  
  420820:	jge    0x4207b3
  420822:	adc    eax,0x8472943c
  420827:	mov    eax,0x4bbf6bc5
  42082c:	inc    edi
  42082d:	sub    al,BYTE PTR [esi-0x4d60933]
  420833:	ret    
  420834:	loop   0x420853
  420836:	inc    ecx
  420837:	xchg   edx,eax
  420838:	pop    ss
  420839:	xor    BYTE PTR [ecx],dl
  42083b:	cli    
  42083c:	test   eax,0xa17c59ac
  420841:	sub    esi,ebp
  420843:	xchg   DWORD PTR [ecx+0x35],ebp
  420846:	push   esi
  420847:	and    BYTE PTR [ebp-0x45],dl
  42084a:	inc    esp
  42084b:	mov    WORD PTR [esi],gs
  42084d:	aaa    
  42084e:	and    ebx,ebp
  420850:	(bad)  
  420851:	and    esp,esi
  420853:	imul   eax,DWORD PTR [esi-0x8],0xe83e2d68
  42085a:	mov    al,0xdc
  42085c:	mov    al,ch
  42085e:	out    0x51,al
  420860:	ins    BYTE PTR es:[edi],dx
  420861:	and    eax,0x71b0d23f
  420866:	aad    0x55
  420868:	cmp    dh,BYTE PTR [ebp-0x80]
  42086b:	and    eax,0x576aa7c0
  420870:	js     0x4208cb
  420872:	mov    al,ds:0x99375c6e
  420877:	fstp   QWORD PTR [edx]
  420879:	or     eax,0x14f6d683
  42087e:	pusha  
  42087f:	stos   BYTE PTR es:[edi],al
  420880:	mov    al,ds:0xf358994b
  420885:	sbb    bh,0x64
  420888:	int    0x5e
  42088a:	rcl    DWORD PTR ds:0xb5b49143,cl
  420890:	adc    eax,0xeede5dc3
  420895:	icebp  
  420896:	gs sti 
  420898:	dec    esp
  420899:	cdq    
  42089a:	or     al,0xfe
  42089c:	pop    ecx
  42089d:	cmp    DWORD PTR [eax],ebp
  42089f:	mov    cl,cl
  4208a1:	add    ch,BYTE PTR [edx-0x7a211953]
  4208a7:	in     al,dx
  4208a8:	cld    
  4208a9:	sar    BYTE PTR [ecx],1
  4208ab:	push   DWORD PTR [edi+0x16]
  4208ae:	dec    esp
  4208af:	fcomip st,st(6)
  4208b1:	cmp    BYTE PTR [ebx],dl
  4208b3:	clc    
  4208b4:	dec    edx
  4208b5:	int    0x31
  4208b7:	add    ah,BYTE PTR [ebp+0x331c6094]
  4208bd:	outs   dx,DWORD PTR ds:[esi]
  4208be:	mov    ebp,0xff2d41cb
  4208c3:	jecxz  0x4208ab
  4208c5:	lds    ebp,FWORD PTR [ebp+eiz*8-0x687180b1]
  4208cc:	sbb    eax,0xb59d938d
  4208d1:	(bad)  
  4208d2:	std    
  4208d3:	mov    DWORD PTR [edx+0x362ed843],edx
  4208d9:	ins    DWORD PTR es:[edi],dx
  4208da:	xchg   edx,eax
  4208db:	data16 jle 0x42091d
  4208de:	paddsb mm4,QWORD PTR [edx-0x457331b9]
  4208e5:	icebp  
  4208e6:	jns    0x420947
  4208e8:	call   0x60d5:0x88db9b0e
  4208ef:	out    0x84,eax
  4208f1:	push   esi
  4208f2:	fs push esp
  4208f4:	xchg   esp,eax
  4208f5:	mov    BYTE PTR [eax-0x4fdb4ef],0xd5
  4208fc:	inc    esp
  4208fd:	pop    edi
  4208fe:	sub    ch,BYTE PTR [eax+0x74]
  420901:	or     eax,0xabeb11fb
  420906:	loope  0x420939
  420908:	push   edi
  420909:	mov    al,ds:0x6cc9d66e
  42090e:	lds    ebp,FWORD PTR [esi]
  420910:	xchg   ecx,eax
  420911:	out    0xa1,eax
  420913:	enter  0xd569,0xb0
  420917:	in     eax,dx
  420918:	mov    al,ds:0x6a7a4f16
  42091d:	sbb    al,0xd0
  42091f:	dec    esp
  420920:	sub    ebx,DWORD PTR [esi-0x75]
  420923:	or     dh,BYTE PTR [edi+0x68]
  420926:	mov    eax,ds:0x25abb219
  42092b:	mov    BYTE PTR [esi],cl
  42092d:	xchg   esi,eax
  42092e:	mov    dh,0xc5
  420930:	or     DWORD PTR [esi-0x1a],esp
  420933:	retf   0xa4e
  420936:	add    al,0xd7
  420938:	test   al,0xfa
  42093a:	and    eax,0x5259cb20
  42093f:	push   0xffffffc1
  420941:	push   ecx
  420942:	je     0x4208e7
  420944:	xchg   esp,eax
  420945:	push   ebx
  420946:	jbe    0x420990
  420948:	and    edi,DWORD PTR [ecx-0x3766ea8d]
  42094e:	jno    0x4208fa
  420950:	popa   
  420951:	out    0x98,al
  420953:	push   ecx
  420954:	(bad)  
  420955:	mov    ebx,0x9ad9d322
  42095a:	outs   dx,DWORD PTR ds:[esi]
  42095b:	fsub   QWORD PTR [ebp-0x5]
  42095e:	xchg   esp,eax
  42095f:	add    eax,0x601102ed
  420964:	push   edi
  420965:	add    esi,DWORD PTR [ebp+0x7e6af897]
  42096b:	adc    al,0xa2
  42096d:	fst    QWORD PTR [eax+0x8d52d11]
  420973:	add    esp,DWORD PTR [esi-0x64]
  420976:	shr    BYTE PTR [ebp-0x1a],cl
  420979:	fs adc eax,0x4137ded4
  42097f:	sub    eax,0x884a1a98
  420984:	sar    DWORD PTR [ecx+ebp*8+0x7],0x8d
  420989:	mov    ebp,0x914de3ab
  42098e:	ret    
  42098f:	pop    ebx
  420990:	dec    ecx
  420991:	fs sbb eax,0xec00136a
  420997:	xor    eax,0x25d1784b
  42099c:	mov    ch,0x12
  42099e:	mov    al,0x98
  4209a0:	stos   DWORD PTR es:[edi],eax
  4209a1:	and    dl,BYTE PTR [edi+ebx*2]
  4209a4:	adc    al,BYTE PTR [esi+0x7772d180]
  4209aa:	sbb    bl,BYTE PTR [esi-0x72]
  4209ad:	cmp    DWORD PTR [ecx+0x7948a226],esi
  4209b3:	gs mov ebx,0x9e50e22c
  4209b9:	push   0x4e6478b3
  4209be:	cli    
  4209bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c0:	(bad)  
  4209c1:	mov    ecx,0xcb335b1
  4209c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c7:	add    DWORD PTR [edi],ecx
  4209c9:	mov    esi,DWORD PTR [eax]
  4209cb:	xor    ebx,DWORD PTR [edx]
  4209cd:	daa    
  4209ce:	jg     0x4209d1
  4209d0:	adc    eax,ebp
  4209d2:	sub    BYTE PTR [eax],bh
  4209d4:	scas   eax,DWORD PTR es:[edi]
  4209d5:	ja     0x420987
  4209d7:	lods   eax,DWORD PTR ds:[esi]
  4209d8:	mov    ds:0x172dee3e,eax
  4209dd:	inc    esi
  4209de:	and    cl,bl
  4209e0:	sbb    al,BYTE PTR [esi]
  4209e2:	(bad)  
  4209e3:	and    ebx,DWORD PTR [ebx+eiz*1+0x6f]
  4209e7:	inc    ebx
  4209e8:	push   ebx
  4209e9:	cdq    
  4209ea:	ficomp DWORD PTR [edi]
  4209ec:	not    DWORD PTR [ebx]
  4209ee:	popa   
  4209ef:	sbb    eax,0xd297f4b6
  4209f4:	jp     0x420991
  4209f6:	adc    al,0x8c
  4209f8:	into   
  4209f9:	fidiv  DWORD PTR [edx-0x43]
  4209fc:	lock mov ch,0x5f
  4209ff:	mov    edi,DWORD PTR [eax]
  420a01:	or     edi,DWORD PTR [ebp-0x70c2543f]
  420a07:	int3   
  420a08:	cmp    al,0x89
  420a0a:	mov    edx,ecx
  420a0c:	retf   
  420a0d:	pushf  
  420a0e:	fild   WORD PTR [eax-0x10f4d7fa]
  420a14:	or     DWORD PTR [ebx-0x35ae41c8],edi
  420a1a:	stc    
  420a1b:	gs dec esp
  420a1d:	inc    ebx
  420a1e:	retf   0xe2bb
  420a21:	add    edx,esi
  420a23:	call   0x3ca44c05
  420a28:	sahf   
  420a29:	lea    ebx,[eax]
  420a2b:	pop    ecx
  420a2c:	mov    ds:0x9274b380,al
  420a31:	jle    0x420a6d
  420a33:	add    al,0x11
  420a35:	ret    
  420a36:	or     ebx,eax
  420a38:	xor    eax,0x86e0eb57
  420a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a3e:	(bad)  
  420a3f:	loop   0x4209dc
  420a41:	loop   0x420a2f
  420a43:	out    dx,al
  420a44:	repz loope 0x420a61
  420a47:	sbb    ah,BYTE PTR [esi*1+0x1c43b093]
  420a4e:	(bad)  
  420a4f:	jae    0x420ac2
  420a51:	out    0x65,eax
  420a53:	inc    esi
  420a54:	mov    cl,0x3d
  420a56:	push   0x32
  420a58:	cmp    al,0xcb
  420a5a:	xor    BYTE PTR [edx-0x14],dh
  420a5d:	and    eax,0x5ed3bcbb
  420a62:	jp     0x4209e8
  420a64:	sub    eax,0xa0c47dfe
  420a69:	or     al,0x45
  420a6b:	add    al,0xed
  420a6d:	popa   
  420a6e:	in     eax,0xb5
  420a70:	push   0xffffff9f
  420a72:	imul   ecx,DWORD PTR [edi],0x32b06468
  420a78:	sub    dh,ah
  420a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7b:	in     eax,dx
  420a7c:	lods   al,BYTE PTR ds:[esi]
  420a7d:	iret   
  420a7e:	mov    cl,BYTE PTR [ebx+0x17]
  420a81:	fidivr DWORD PTR [edx]
  420a83:	mov    edi,0xc03ad954
  420a88:	xchg   ebp,eax
  420a89:	inc    edi
  420a8a:	fstp   QWORD PTR [esi+esi*1]
  420a8d:	dec    BYTE PTR [esi]
  420a8f:	push   esi
  420a90:	sub    al,0xa2
  420a92:	and    DWORD PTR [edi],edi
  420a94:	scas   eax,DWORD PTR es:[edi]
  420a95:	int    0x9b
  420a97:	push   eax
  420a98:	xchg   esi,eax
  420a99:	sub    DWORD PTR ss:[esi-0x38],edx
  420a9d:	popf   
  420a9e:	push   ebp
  420a9f:	test   DWORD PTR [eax+edx*4],eax
  420aa2:	mov    edi,0xc98302d4
  420aa7:	loopne 0x420a2e
  420aa9:	rcr    BYTE PTR [edx+0x4d],1
  420aac:	rcr    dh,0x47
  420aaf:	mov    ds:0x8863c0e5,eax
  420ab4:	inc    edi
  420ab5:	mov    edx,0xc7de25e1
  420aba:	(bad)  
  420abb:	push   edx
  420abc:	(bad)  
  420abd:	sahf   
  420abe:	ins    BYTE PTR es:[edi],dx
  420abf:	ins    BYTE PTR es:[edi],dx
  420ac0:	aam    0x29
  420ac2:	ja     0x420a63
  420ac4:	lock call 0x316d:0xa819ca02
  420acc:	lea    eax,[esi+0x14]
  420acf:	push   edx
  420ad0:	jl     0x420ad3
  420ad2:	xor    eax,0xbc910bf9
  420ad7:	popf   
  420ad8:	(bad)  
  420ad9:	mov    cl,0x7
  420adb:	enter  0xfed9,0xf6
  420adf:	xor    al,0x22
  420ae1:	jbe    0x420abb
  420ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae4:	xchg   ecx,eax
  420ae5:	call   0xe7b6:0x36d6892f
  420aec:	mul    esp
  420aee:	mov    esi,0xd1bcd3c
  420af3:	mov    edi,0xfba02d44
  420af8:	pop    es
  420af9:	dec    eax
  420afa:	lds    edx,FWORD PTR [ebx+eax*8]
  420afd:	test   BYTE PTR [edx-0x3ea2ebc1],0xe
  420b04:	cmp    al,ah
  420b06:	ror    DWORD PTR [ebp-0x4a105ff1],0xc1
  420b0d:	push   edi
  420b0e:	ret    0x4d9e
  420b11:	test   eax,0xed1b8f43
  420b16:	imul   esp,edi,0x415c01ad
  420b1c:	inc    esp
  420b1d:	mov    esp,0xe226e0b1
  420b22:	jmp    0x420aad
  420b24:	adc    eax,DWORD PTR [eax+0x283e3aa0]
  420b2a:	test   DWORD PTR [ebx+0x67],eax
  420b2d:	sub    DWORD PTR [edx+ecx*4-0x43757747],ecx
  420b34:	xchg   DWORD PTR [ecx-0xf],esp
  420b37:	add    eax,DWORD PTR [esi]
  420b39:	in     eax,dx
  420b3a:	jge    0x420b56
  420b3c:	and    ah,BYTE PTR [eax+0x6a54095f]
  420b42:	push   ebx
  420b43:	mov    edi,0x906e0d70
  420b48:	popa   
  420b49:	call   FWORD PTR [eax]
  420b4b:	aaa    
  420b4c:	sbb    ecx,DWORD PTR [edx+0x5eff19a2]
  420b52:	push   esi
  420b53:	test   DWORD PTR [ebx+ebp*1],0x43131457
  420b5a:	inc    esp
  420b5b:	mov    dh,0x3f
  420b5d:	push   ss
  420b5e:	cmp    eax,0x5558e821
  420b63:	hlt    
  420b64:	lock mov ebx,0x279efe83
  420b6a:	mov    edx,0xff4509e2
  420b6f:	repnz mov BYTE PTR [eax+0x2f004359],cl
  420b76:	and    eax,0xb849feb8
  420b7b:	pushf  
  420b7c:	mov    ebx,0x1c8d329e
  420b81:	mov    edi,DWORD PTR [esp+ebx*8-0x5a01e400]
  420b88:	iret   
  420b89:	add    BYTE PTR [ecx-0x27],al
  420b8c:	loop   0x420bb1
  420b8e:	imul   ecx,DWORD PTR [ebp+0x34594476],0xffffffd7
  420b95:	inc    esi
  420b96:	jns    0x420b3e
  420b98:	mov    dh,0x7
  420b9a:	out    dx,al
  420b9b:	cwde   
  420b9c:	cwde   
  420b9d:	xchg   DWORD PTR fs:[edx+0xb966521],esp
  420ba4:	dec    edi
  420ba5:	xor    eax,DWORD PTR [ebp-0x4dcaa0c1]
  420bab:	jecxz  0x420b5e
  420bad:	inc    eax
  420bae:	xor    al,BYTE PTR fs:0x400206be
  420bb5:	add    al,0x44
  420bb7:	xchg   DWORD PTR [ebx-0x5df0bb81],ebx
  420bbd:	push   ss
  420bbe:	jp     0x420b78
  420bc0:	enter  0xcea8,0xb0
  420bc4:	add    bl,0x9d
  420bc7:	jno    0x420b88
  420bc9:	jl     0x420b6b
  420bcb:	xchg   ebx,eax
  420bcc:	stos   BYTE PTR es:[edi],al
  420bcd:	fnsave [eax+0x2e]
  420bd0:	push   edx
  420bd1:	fidivr WORD PTR [edx-0x7855d95f]
  420bd7:	mov    esp,0xd9432198
  420bdc:	sub    eax,0x1e9c7261
  420be1:	repnz mov eax,DWORD PTR [edx-0x44e485d7]
  420be8:	or     DWORD PTR [ebp+0xb],ebp
  420beb:	mov    esi,0x9339df15
  420bf0:	and    BYTE PTR [eax-0x2a497af7],bl
  420bf6:	xorps  xmm1,xmm0
  420bf9:	shl    BYTE PTR [ebp+0x5f],cl
  420bfc:	arpl   dx,bp
  420bfe:	ror    cl,0x26
  420c01:	int    0x3f
  420c03:	pop    ecx
  420c04:	push   esi
  420c05:	sub    BYTE PTR [edx],cl
  420c07:	pop    ecx
  420c08:	xchg   edi,eax
  420c09:	mov    esi,0xe50ede88
  420c0e:	mov    bh,0xb
  420c10:	adc    DWORD PTR [ebx],esi
  420c12:	mov    es,WORD PTR [ebx-0x218ae713]
  420c18:	dec    esp
  420c19:	mov    DWORD PTR [ecx+0x1e],ecx
  420c1c:	xchg   ecx,eax
  420c1d:	mov    ds:0xe0f2ae23,al
  420c22:	sbb    eax,0xe6543bdf
  420c27:	xchg   esp,eax
  420c28:	das    
  420c29:	or     BYTE PTR ds:0xbadbbdd1,bl
  420c2f:	clc    
  420c30:	jl     0x420bf2
  420c32:	xchg   ebp,eax
  420c33:	push   0xb91559a6
  420c38:	dec    edx
  420c39:	sbb    BYTE PTR [edi],ch
  420c3b:	sti    
  420c3c:	xor    BYTE PTR [ecx+0x36],ch
  420c3f:	rcr    ecx,1
  420c41:	sub    al,0xce
  420c43:	mov    BYTE PTR [edx-0x5873c607],al
  420c49:	in     eax,dx
  420c4a:	pop    es
  420c4b:	adc    bl,dl
  420c4d:	push   ebx
  420c4e:	jb     0x420c95
  420c50:	aam    0xa4
  420c52:	dec    ecx
  420c53:	imul   ebp,DWORD PTR [ebp+0x1bb9e38a],0x55
  420c5a:	sub    esi,ebx
  420c5c:	push   ecx
  420c5e:	bound  edi,QWORD PTR [ecx+edi*1+0x22]
  420c62:	mov    al,0x52
  420c64:	xchg   BYTE PTR [edi],ch
  420c66:	fstp   TBYTE PTR [eax]
  420c68:	pop    esi
  420c69:	sub    BYTE PTR [ebp+0x35],ah
  420c6c:	adc    eax,0xf08cc95c
  420c71:	aad    0x57
  420c73:	pop    eax
  420c74:	mov    DWORD PTR [ebx],eax
  420c76:	jae    0x420c5a
  420c78:	push   esp
  420c79:	adc    al,0xe5
  420c7b:	imul   edx,esp,0xc
  420c7e:	fisub  DWORD PTR [esi+0x40]
  420c81:	pushf  
  420c82:	dec    esp
  420c83:	adc    dl,BYTE PTR [esi]
  420c85:	cli    
  420c86:	dec    edi
  420c87:	cmp    al,0xf
  420c89:	retf   0x8bf9
  420c8c:	jb     0x420c5c
  420c8e:	inc    eax
  420c8f:	scas   al,BYTE PTR es:[edi]
  420c90:	push   ecx
  420c91:	(bad)  
  420c92:	(bad)  
  420c93:	fstp   QWORD PTR [esi-0x1a]
  420c96:	and    eax,0x270ef0cd
  420c9b:	pop    esp
  420c9c:	jmp    0xed9a:0x7d5a8c51
  420ca3:	sbb    eax,0xe4e2bc34
  420ca8:	jno    0x420c8e
  420caa:	and    dh,BYTE PTR [ecx]
  420cac:	daa    
  420cad:	call   0x9f17:0x75ac6508
  420cb4:	mov    ch,BYTE PTR [edi]
  420cb6:	jmp    0x12a:0x4a24ca8b
  420cbd:	mov    al,ds:0x75158c9
  420cc2:	mov    esi,0x482d75a4
  420cc7:	dec    eax
  420cc8:	fimul  WORD PTR [ebx+esi*4]
  420ccb:	mov    ah,0xe7
  420ccd:	mov    WORD PTR [eax+0x50],cs
  420cd0:	cld    
  420cd1:	in     al,dx
  420cd2:	out    0xf2,al
  420cd4:	and    eax,0xcfb2469a
  420cd9:	cmc    
  420cda:	jns    0x420d2c
  420cdc:	ror    DWORD PTR [edx-0x74262992],cl
  420ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce3:	sub    DWORD PTR [edx],0xdae363ce
  420ce9:	test   al,0xe2
  420ceb:	add    DWORD PTR [esi],edi
  420ced:	test   al,0x3c
  420cef:	bound  ebp,QWORD PTR [ebx+0x11]
  420cf2:	push   ebx
  420cf3:	adc    cl,BYTE PTR [esp+eax*2]
  420cf6:	fld    TBYTE PTR [eax+0x4c61efe1]
  420cfc:	into   
  420cfd:	xchg   ebx,eax
  420cfe:	push   0x70e1da8a
  420d03:	es enter 0x99fe,0x18
  420d08:	stc    
  420d09:	dec    edi
  420d0a:	push   eax
  420d0b:	mov    DWORD PTR [ecx-0x35311f27],ebp
  420d11:	mov    BYTE PTR [edx],bh
  420d13:	lods   eax,DWORD PTR ds:[esi]
  420d14:	ins    BYTE PTR es:[edi],dx
  420d15:	out    0x3c,eax
  420d17:	scas   eax,DWORD PTR es:[edi]
  420d18:	int3   
  420d19:	adc    DWORD PTR [edx+0x26],0x4
  420d1d:	sub    ebx,eax
  420d1f:	sbb    ah,ch
  420d21:	jecxz  0x420d07
  420d23:	icebp  
  420d24:	into   
  420d25:	mov    eax,0xd849eed8
  420d2a:	outs   dx,BYTE PTR ds:[esi]
  420d2b:	inc    edx
  420d2c:	adc    ecx,DWORD PTR [ebx-0xa]
  420d2f:	call   0x520f092b
  420d34:	mov    esp,0xcaf9bf82
  420d39:	cmp    BYTE PTR [ecx+0x23],cl
  420d3c:	sub    edx,esi
  420d3e:	adc    ah,BYTE PTR [ebp-0x1dff3aa7]
  420d44:	je     0x420ce9
  420d46:	shl    DWORD PTR [eax+0xb],cl
  420d49:	pop    ebx
  420d4a:	inc    esi
  420d4b:	xlat   BYTE PTR ds:[ebx]
  420d4c:	mov    ch,ah
  420d4e:	gs fs imul ebp,edi,0x7eee2727
  420d56:	aam    0xee
  420d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d59:	test   al,0xe9
  420d5b:	adc    DWORD PTR [eax],edx
  420d5d:	and    BYTE PTR [ebx],bl
  420d5f:	mov    ebx,0xc71be860
  420d64:	loope  0x420dc6
  420d66:	push   ss
  420d67:	leave  
  420d68:	ja     0x420d73
  420d6a:	or     al,0xd
  420d6c:	mov    al,ds:0x4e8cb8e7
  420d71:	jmp    0x420d72
  420d73:	inc    eax
  420d74:	adc    esp,DWORD PTR [esi-0x26736a29]
  420d7a:	mov    esp,0x1cf2248c
  420d7f:	pop    ebp
  420d80:	repz out dx,al
  420d82:	add    DWORD PTR [edx+ebx*4+0x3b],eax
  420d86:	cmp    eax,0x24d67d35
  420d8b:	outs   dx,BYTE PTR es:[esi]
  420d8d:	jg     0x420d1c
  420d8f:	push   0x4ce8a751
  420d94:	mov    edi,0x656a0fd2
  420d99:	xor    bh,BYTE PTR [esi*4-0x30118454]
  420da0:	stc    
  420da1:	dec    eax
  420da2:	adc    BYTE PTR [ecx+ebx*8-0x2e0f613f],dl
  420da9:	mov    cl,0x6e
  420dab:	or     BYTE PTR [eax-0x62],al
  420dae:	inc    edx
  420daf:	(bad)  [ecx-0x45476c5e]
  420db5:	xor    al,0x75
  420db7:	aad    0x3e
  420db9:	sub    ebp,DWORD PTR [edi-0x215c7cce]
  420dbf:	pop    edi
  420dc0:	dec    ecx
  420dc1:	test   ecx,0x9fe66791
  420dc7:	aaa    
  420dc8:	mov    ds:0x9b5d4212,eax
  420dcd:	stc    
  420dce:	in     eax,dx
  420dcf:	jns    0x420da0
  420dd1:	ror    DWORD PTR [esi],0xad
  420dd4:	mov    bh,0x4a
  420dd6:	cdq    
  420dd7:	popa   
  420dd8:	fisttp DWORD PTR [edi-0x7c]
  420ddb:	stc    
  420ddc:	sub    eax,0x6ad0f672
  420de1:	dec    BYTE PTR [ebp+0x16]
  420de4:	test   eax,0x784d28cc
  420de9:	adc    DWORD PTR [esi-0x70],edx
  420dec:	add    eax,0xda9ccfd0
  420df1:	(bad)  
  420df2:	fist   WORD PTR [ebx]
  420df4:	jmp    0x3ba37635
  420df9:	mov    dh,0xd8
  420dfb:	hlt    
  420dfc:	push   esp
  420dfd:	aaa    
  420dfe:	aas    
  420dff:	retf   
  420e00:	push   edx
  420e01:	hlt    
  420e02:	mov    ds:0xb8420832,eax
  420e07:	jae    0x420de9
  420e09:	stos   DWORD PTR es:[edi],eax
  420e0a:	xor    BYTE PTR ds:0x52afec96,ch
  420e10:	jg     0x420de6
  420e12:	(bad)  
  420e13:	div    DWORD PTR [ebx+0x242da95]
  420e19:	fstp   st(1)
  420e1b:	int3   
  420e1c:	mov    ecx,0x4313058b
  420e21:	je     0x420e12
  420e23:	pushf  
  420e24:	setb   ch
  420e27:	std    
  420e28:	cmp    eax,0x1a524c7
  420e2d:	pop    ecx
  420e2e:	inc    DWORD PTR ds:[eax+0x51]
  420e32:	pop    esp
  420e33:	dec    esp
  420e34:	fild   QWORD PTR [esi+0x4de99a94]
  420e3a:	and    eax,0xdeb59497
  420e3f:	out    dx,al
  420e40:	inc    ebx
  420e41:	stos   BYTE PTR es:[edi],al
  420e42:	popf   
  420e43:	and    edx,DWORD PTR [ebx-0x2f]
  420e46:	test   al,0xb9
  420e48:	mov    bh,0xc8
  420e4a:	imul   edi,DWORD PTR [ebx],0x3b
  420e4d:	adc    BYTE PTR [esi+0xe933266],al
  420e53:	bound  esi,QWORD PTR [edi]
  420e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e56:	jnp    0x420e51
  420e58:	hlt    
  420e59:	lods   al,BYTE PTR ds:[esi]
  420e5a:	ret    
  420e5b:	mov    eax,ds:0xace3a943
  420e60:	imul   ebx,DWORD PTR [ebx],0x3be4e180
  420e66:	repz xor eax,0x791c0113
  420e6c:	imul   edi,DWORD PTR [edi+0x68592225],0x45
  420e73:	aas    
  420e74:	in     eax,0x57
  420e76:	data16 mov al,0xd5
  420e79:	std    
  420e7a:	inc    edx
  420e7b:	mov    esp,0x6ef7c830
  420e80:	mov    cl,0x54
  420e82:	pop    ds
  420e83:	ss cmp al,0x29
  420e87:	and    eax,0xe39e0bdd
  420e8c:	and    al,0x1
  420e8e:	stc    
  420e8f:	daa    
  420e90:	push   esi
  420e91:	pop    ds
  420e92:	sbb    bl,cl
  420e94:	mov    al,ds:0xa7dc859b
  420e99:	outs   dx,DWORD PTR ds:[esi]
  420e9a:	adc    eax,0xd72d0051
  420e9f:	sbb    al,0xc7
  420ea1:	mov    ch,0xb7
  420ea3:	jecxz  0x420ef4
  420ea5:	mov    ds:0xbb07ac6d,eax
  420eaa:	sahf   
  420eab:	mov    cl,0x40
  420ead:	(bad)  
  420eae:	icebp  
  420eaf:	sbb    BYTE PTR [ecx+0x5db8fdb],cl
  420eb5:	push   esp
  420eb6:	jo     0x420f27
  420eb8:	scas   al,BYTE PTR es:[edi]
  420eb9:	adc    eax,0xd4d2c6c3
  420ebe:	mov    es,WORD PTR [edi+0x120ca754]
  420ec4:	cmp    eax,0x35544623
  420ec9:	dec    edi
  420eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ecb:	lea    edx,[edx+esi*1]
  420ece:	push   ss
  420ecf:	mov    edx,0xac1cf985
  420ed4:	mov    al,0xc0
  420ed6:	imul   esp,ecx,0xf475e27
  420edc:	ins    DWORD PTR es:[edi],dx
  420edd:	sbb    edi,DWORD PTR [ecx]
  420edf:	sbb    bl,cl
  420ee1:	les    edi,FWORD PTR [ebp+0x61]
  420ee4:	out    dx,al
  420ee5:	pop    ebp
  420ee6:	mov    cl,0xe0
  420ee8:	or     eax,0xaf9d5e38
  420eed:	dec    eax
  420eee:	jl     0x6bf24d42
  420ef4:	je     0x420f52
  420ef6:	mov    edx,0x7e292d63
  420efb:	pop    ecx
  420efc:	test   edi,esi
  420efe:	xor    esp,DWORD PTR [esi-0x61e32299]
  420f04:	std    
  420f05:	std    
  420f06:	pop    ss
  420f07:	mov    DWORD PTR [eax+0x2d],edx
  420f0a:	add    DWORD PTR [ecx+0x6f],esi
  420f0d:	mov    ah,BYTE PTR [eax]
  420f0f:	adc    esp,edx
  420f11:	hlt    
  420f12:	push   esi
  420f13:	mov    eax,ds:0xa400adc4
  420f18:	jl     0x420f1d
  420f1a:	or     BYTE PTR [edx],bh
  420f1c:	hlt    
  420f1d:	and    ebx,ecx
  420f1f:	aam    0xc9
  420f21:	pop    eax
  420f22:	xor    esi,esp
  420f24:	mov    esp,0xdf1055e9
  420f29:	pop    ds
  420f2a:	xchg   DWORD PTR [edi],esi
  420f2c:	sbb    bh,cl
  420f2e:	push   eax
  420f2f:	mov    ecx,0x28097e43
  420f34:	mov    ah,0x3d
  420f36:	stos   DWORD PTR es:[edi],eax
  420f37:	cwde   
  420f38:	fimul  WORD PTR [ebp-0x6b]
  420f3b:	sub    DWORD PTR [edx+0x2fcd363f],edi
  420f41:	cmp    al,0x13
  420f43:	call   0xd438481a
  420f48:	adc    al,0x2f
  420f4a:	xor    eax,DWORD PTR [eax+0x3e]
  420f4d:	jb     0x420ee6
  420f4f:	adc    BYTE PTR [ecx+0x2bec64ec],dh
  420f55:	das    
  420f56:	aad    0xe0
  420f58:	push   cs
  420f59:	cmc    
  420f5a:	test   DWORD PTR [ecx+0x2f],eax
  420f5d:	dec    esi
  420f5e:	jp     0x420f3e
  420f60:	sbb    DWORD PTR [edi-0x23862308],ebx
  420f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f67:	scas   al,BYTE PTR es:[edi]
  420f68:	lods   eax,DWORD PTR ds:[esi]
  420f69:	mov    ah,0x77
  420f6b:	test   DWORD PTR [ecx+0x1c],eax
  420f6e:	xlat   BYTE PTR ds:[ebx]
  420f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f70:	jmp    0x2ad88706
  420f75:	add    esp,edi
  420f77:	in     al,0xab
  420f79:	push   cs
  420f7a:	ror    cl,1
  420f7c:	call   0xa7fb:0x5579d9eb
  420f83:	inc    esi
  420f84:	inc    ecx
  420f85:	mov    eax,ds:0xe66f93f3
  420f8a:	add    al,0x1b
  420f8c:	push   ebp
  420f8d:	mov    edx,0x6c15970
  420f92:	push   ecx
  420f93:	fabs   
  420f95:	pushf  
  420f96:	lods   eax,DWORD PTR ds:[esi]
  420f97:	pop    ebx
  420f98:	xchg   ecx,eax
  420f99:	lea    ecx,[edx]
  420f9b:	add    BYTE PTR [ebx],cl
  420f9d:	add    al,0x28
  420f9f:	push   es
  420fa0:	cmp    eax,DWORD PTR [edi]
  420fa2:	dec    ecx
  420fa3:	out    dx,al
  420fa4:	jmp    0x420f84
  420fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa7:	sbb    DWORD PTR [esi+0x39ee0534],esp
  420fad:	add    esi,DWORD PTR [esi]
  420faf:	push   eax
  420fb0:	bnd jo 0x420fba
  420fb3:	ds xor eax,0xd3ebee6f
  420fb9:	sbb    DWORD PTR ds:0x2f20b383,0xffffffab
  420fc0:	jge    0x42101e
  420fc2:	or     BYTE PTR [eax+edi*2],ah
  420fc5:	xor    dl,0x71
  420fc8:	push   0x13
  420fca:	mov    ds:0xc3e139a2,eax
  420fcf:	pop    es
  420fd0:	mov    ebx,0x227848b5
  420fd5:	add    BYTE PTR [ecx+0x42595d60],ch
  420fdb:	enter  0xda8,0x4e
  420fdf:	push   ebx
  420fe0:	outs   dx,DWORD PTR ds:[esi]
  420fe1:	push   eax
  420fe2:	mov    ah,0x4
  420fe4:	dec    edi
  420fe5:	mov    eax,0xf90ae457
  420fea:	dec    ecx
  420feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fec:	call   0x90e33573
  420ff1:	lea    cx,[eax]
  420ff4:	mov    WORD PTR ds:0xf894731f,fs
  420ffa:	int    0xf7
  420ffc:	dec    ebx
  420ffd:	dec    esp
  420ffe:	push   edi
  420fff:	mov    bl,0x17
  421001:	repz (bad) 
  421003:	ins    BYTE PTR es:[edi],dx
  421004:	jno    0x42105a
  421006:	das    
  421007:	adc    edi,DWORD PTR ds:0x640fa219
  42100d:	call   0x698c:0xd9f7df78
  421014:	fcomip st,st(6)
  421016:	jl     0x420fbf
  421018:	adc    ah,bl
  42101a:	loopne 0x42107e
  42101c:	mov    cs,WORD PTR [ebx]
  42101e:	jbe    0x421015
  421020:	cwde   
  421021:	add    bl,BYTE PTR [eax]
  421023:	aas    
  421024:	cmc    
  421025:	gs aam 0x8e
  421028:	push   0xffffff9c
  42102a:	dec    esp
  42102b:	and    ah,0x93
  42102e:	sub    ecx,DWORD PTR [edx-0x3a]
  421031:	ins    BYTE PTR es:[edi],dx
  421032:	mov    eax,ds:0xf05d7452
  421037:	adc    al,0xfd
  421039:	repnz or cl,ah
  42103c:	hlt    
  42103d:	and    al,0x2f
  42103f:	aaa    
  421040:	dec    esp
  421041:	mov    ch,0x62
  421043:	or     eax,0xc15f0232
  421048:	and    BYTE PTR [esi],ah
  42104a:	mov    ebx,0xb0abcb7a
  42104f:	and    bh,BYTE PTR [edx+0x3e]
  421052:	pop    eax
  421053:	pop    ecx
  421054:	sub    ecx,ebx
  421056:	dec    ebp
  421057:	xor    al,0xc1
  421059:	xlat   BYTE PTR ds:[ebx]
  42105a:	cmp    eax,0xa4e67163
  42105f:	imul   ebp,edx,0xffffff95
  421062:	sahf   
  421063:	jno    0x42106d
  421065:	or     eax,0xe20df768
  42106a:	cmp    DWORD PTR [ecx],0x67
  42106d:	(bad)  
  42106e:	sub    eax,0xe03925a8
  421073:	cmp    BYTE PTR [edx-0x3bedbc04],al
  421079:	push   ebx
  42107a:	cmp    cl,BYTE PTR [eiz*2-0x6fa164d1]
  421081:	adc    ebp,0x6a5e6343
  421087:	ficomp WORD PTR [esi-0x3e]
  42108a:	out    0xb,al
  42108c:	(bad)  
  42108d:	int    0x74
  42108f:	sahf   
  421090:	pop    es
  421091:	cmp    esp,DWORD PTR [ecx+edx*2]
  421094:	scas   al,BYTE PTR es:[edi]
  421095:	xchg   edx,eax
  421096:	mov    ch,0x6b
  421098:	pop    ebx
  421099:	sbb    al,0x1f
  42109b:	data16 jo 0x4210b5
  42109e:	mov    edi,0xcfab0424
  4210a3:	lahf   
  4210a4:	repnz xor edi,DWORD PTR [edi-0x68bf9e3a]
  4210ab:	mov    al,ds:0x3c4576cc
  4210b0:	fisub  DWORD PTR [edx]
  4210b2:	cdq    
  4210b3:	push   0xffffffb4
  4210b5:	pop    esi
  4210b6:	aam    0x91
  4210b8:	adc    eax,0xc34facce
  4210bd:	mov    ebx,DWORD PTR ds:0x8473f55c
  4210c3:	test   eax,0xf77e4669
  4210c8:	and    eax,0x79beea08
  4210cd:	(bad)  
  4210ce:	jmp    0x421101
  4210d0:	ins    BYTE PTR es:[edi],dx
  4210d1:	aas    
  4210d2:	xchg   ecx,eax
  4210d3:	fs jge 0x4210b2
  4210d6:	add    ebp,edx
  4210d8:	test   ebp,ebx
  4210da:	stos   BYTE PTR es:[edi],al
  4210db:	rol    DWORD PTR [esp+eax*2-0x79],cl
  4210df:	inc    ecx
  4210e0:	lds    edi,FWORD PTR [eiz*8+0x34856011]
  4210e7:	gs mov ebx,0x9850539a
  4210ed:	js     0x421102
  4210ef:	dec    eax
  4210f0:	mov    cl,0xa6
  4210f2:	sub    al,0x77
  4210f4:	neg    al
  4210f6:	mov    DWORD PTR [ecx-0x632ed4df],ecx
  4210fc:	jge    0x42111f
  4210fe:	jb     0x421163
  421100:	adc    al,0xd3
  421102:	jnp    0x42117c
  421104:	add    al,0x44
  421106:	mov    ds:0x6ee0e1c0,al
  42110b:	add    al,0x21
  42110d:	popa   
  42110e:	mov    ds:0xcc9dcc43,al
  421113:	pop    edi
  421114:	mov    ah,0xf7
  421116:	fidivr DWORD PTR [ebx+0x581da6f]
  42111c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111d:	mov    ebp,0xc15015b3
  421122:	gs loope 0x421113
  421125:	std    
  421126:	stos   BYTE PTR es:[edi],al
  421127:	xchg   esp,eax
  421128:	adc    dh,BYTE PTR [ebx+0x45]
  42112b:	hlt    
  42112c:	push   eax
  42112d:	push   es
  42112e:	cmp    ebp,ebp
  421130:	mov    dh,0xf
  421132:	shl    BYTE PTR [ebx],1
  421134:	dec    edx
  421135:	mov    esi,0xd190655c
  42113a:	test   DWORD PTR [ebx+0x70],edi
  42113d:	jp     0x421164
  42113f:	add    al,BYTE PTR [eax]
  421141:	dec    ebx
  421142:	xchg   ebx,eax
  421143:	pop    ss
  421144:	pop    ebx
  421145:	(bad)  [edx]
  421147:	mov    cs,WORD PTR [esi]
  421149:	popa   
  42114a:	jmp    0xdb8bd65e
  42114f:	fs mov ah,0x5
  421152:	shr    DWORD PTR [edi],0xc1
  421155:	add    DWORD PTR ds:0x8bc4ed70,esp
  42115b:	inc    edx
  42115c:	push   cs
  42115d:	mov    eax,0x1e25ae57
  421162:	sbb    DWORD PTR [ebp-0x1fa1f03f],ecx
  421168:	aad    0xc8
  42116a:	lds    edi,FWORD PTR [eax]
  42116c:	cs jl  0x421122
  42116f:	mov    eax,ds:0xc587ca87
  421174:	jecxz  0x42118b
  421176:	iret   
  421177:	push   edx
  421178:	add    BYTE PTR [edi+0x45133440],0xe1
  42117f:	loope  0x42114f
  421181:	inc    ecx
  421182:	rcl    ch,cl
  421184:	scas   eax,DWORD PTR es:[edi]
  421185:	xor    BYTE PTR ds:0x2839b1ba,ch
  42118b:	retf   0xa352
  42118e:	jle    0x421113
  421190:	dec    edi
  421191:	dec    ecx
  421192:	out    0xdf,eax
  421194:	sub    cl,BYTE PTR [esi-0x2e3c66c7]
  42119a:	cmp    edi,DWORD PTR [esi-0x38]
  42119d:	icebp  
  42119e:	loop   0x421127
  4211a0:	inc    ecx
  4211a1:	adc    DWORD PTR [esi-0x2e6dd895],esi
  4211a7:	mov    WORD PTR [ebp+0x23],fs
  4211aa:	test   al,0x39
  4211ac:	inc    ecx
  4211ad:	adc    DWORD PTR [edx+0x44],eax
  4211b0:	mov    ds:0x1088fc61,al
  4211b5:	shr    ch,0xa3
  4211b8:	mov    fs,esi
  4211ba:	loope  0x42115b
  4211bc:	outs   dx,DWORD PTR ds:[esi]
  4211bd:	inc    esp
  4211be:	xchg   esi,esi
  4211c0:	push   cs
  4211c1:	stos   BYTE PTR es:[edi],al
  4211c2:	scas   eax,DWORD PTR es:[edi]
  4211c3:	or     ch,BYTE PTR [edx-0xa]
  4211c6:	mov    al,0x5a
  4211c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211c9:	adc    al,BYTE PTR [ebp-0x22f44ea3]
  4211cf:	or     eax,0xb49dd251
  4211d4:	pop    ebx
  4211d5:	xchg   edi,eax
  4211d6:	mov    al,ds:0x58cd0bfd
  4211db:	ss mov ch,0x8b
  4211de:	cmp    eax,0x37afee05
  4211e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211e4:	jne    0xd69f717a
  4211ea:	dec    edi
  4211eb:	mov    gs,WORD PTR [ecx+0x36]
  4211ee:	cmp    BYTE PTR ds:0x36c47f4d,ch
  4211f4:	sub    eax,0x471be956
  4211f9:	aad    0xba
  4211fb:	out    0x6d,al
  4211fd:	xchg   edi,eax
  4211fe:	mov    edx,0x4eac9711
  421203:	push   0x8
  421205:	mov    ah,0xac
  421207:	pusha  
  421208:	push   edi
  421209:	into   
  42120a:	aas    
  42120b:	xchg   edx,eax
  42120c:	cli    
  42120d:	test   DWORD PTR [edx-0x5c412800],0xdb2abd77
  421217:	push   edx
  421218:	mov    bl,0xd0
  42121a:	cmp    al,0x19
  42121c:	pop    ss
  42121d:	cmp    dl,BYTE PTR ds:0xfcc0ecaf
  421223:	sbb    ecx,DWORD PTR ds:0xe9f0f706
  421229:	clc    
  42122a:	pop    eax
  42122b:	cli    
  42122c:	ficomp DWORD PTR [edi]
  42122e:	push   cs
  42122f:	retf   0xc95a
  421232:	or     DWORD PTR cs:0x858bd461,eax
  421239:	cmp    al,0x8a
  42123b:	(bad)  
  42123c:	adc    dl,BYTE PTR [edx+0x7b]
  42123f:	xchg   edx,eax
  421240:	les    eax,FWORD PTR [eax+ecx*1+0x2e]
  421244:	ins    BYTE PTR es:[edi],dx
  421245:	into   
  421246:	mov    dl,0x84
  421248:	popf   
  421249:	or     eax,0xbc00f7e7
  42124e:	pop    ecx
  42124f:	inc    esp
  421250:	xchg   esi,eax
  421251:	mov    al,ds:0xfd9b5fac
  421256:	ss std 
  421258:	inc    esi
  421259:	jnp    0x4211fc
  42125b:	jno    0x421249
  42125d:	mov    edi,0xe723cef5
  421262:	arpl   WORD PTR [ebx-0x38],di
  421265:	call   0xe991:0x81624513
  42126c:	fiadd  WORD PTR [ecx+0x64]
  42126f:	mov    bh,0x18
  421271:	lea    edx,[edx]
  421273:	inc    esp
  421274:	xlat   BYTE PTR ds:[ebx]
  421275:	test   eax,0x25d98369
  42127a:	dec    ebp
  42127b:	add    eax,DWORD PTR [edi-0x64]
  42127e:	xchg   ebx,eax
  42127f:	xor    al,0x89
  421281:	shl    DWORD PTR [edi],1
  421283:	les    esi,FWORD PTR [ebx+0x25036d8e]
  421289:	loope  0x4212fe
  42128b:	mov    ebp,DWORD PTR [ecx-0x2eb1e052]
  421291:	test   al,0x96
  421293:	scas   al,BYTE PTR es:[edi]
  421294:	mov    ch,0xa4
  421296:	(bad)  
  421297:	ror    bh,cl
  421299:	js     0x421278
  42129b:	or     BYTE PTR [ebp-0x96283a6],bl
  4212a1:	call   0x32da:0xf3af4f11
  4212a8:	scas   eax,DWORD PTR es:[edi]
  4212a9:	stos   BYTE PTR es:[edi],al
  4212aa:	imul   eax,DWORD PTR [esi-0x798236de],0x13
  4212b1:	(bad)  
  4212b2:	out    dx,eax
  4212b3:	rcl    BYTE PTR [ebx],0x9c
  4212b6:	(bad)  
  4212b7:	mov    ds:0x877ac517,eax
  4212bc:	(bad)  
  4212bd:	imul   esp,DWORD PTR [ebp-0x3bf353d0],0xfa83df00
  4212c7:	or     bh,bl
  4212c9:	mov    al,BYTE PTR [ecx]
  4212cb:	push   edi
  4212cc:	retf   0x2f42
  4212cf:	inc    edi
  4212d0:	jo     0x4212e2
  4212d2:	sbb    eax,DWORD PTR [ebp+0x46362bf2]
  4212d8:	dec    eax
  4212d9:	fcomp  QWORD PTR [esi+eax*2+0x392d54af]
  4212e0:	and    eax,0xdd1cd20
  4212e5:	je     0x421280
  4212e7:	push   cs
  4212e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e9:	jmp    0x4212f7
  4212eb:	push   ecx
  4212ec:	hlt    
  4212ed:	push   ebp
  4212ee:	pop    ds
  4212ef:	call   0x1e076a98
  4212f4:	pop    edx
  4212f5:	and    al,0xf1
  4212f7:	xlat   BYTE PTR ds:[ebx]
  4212f8:	and    BYTE PTR [edi-0x608b019],al
  4212fe:	push   ebx
  4212ff:	mov    bh,0x5f
  421301:	mov    edx,0x9b081a53
  421306:	int    0xf9
  421308:	mov    gs,WORD PTR [edx+0x4d93f1a9]
  42130e:	jg     0x4212e7
  421310:	mov    ebx,DWORD PTR [esi+0x67ee12b6]
  421316:	mov    bh,0xff
  421318:	push   0xffffff88
  42131a:	sbb    DWORD PTR [esi-0x5c],ecx
  42131d:	stc    
  42131e:	int    0xc0
  421320:	mov    bl,0x56
  421322:	xchg   esi,eax
  421323:	in     eax,0x70
  421325:	and    dl,ch
  421327:	ret    
  421328:	outs   dx,DWORD PTR ds:[esi]
  421329:	adc    cl,ch
  42132b:	sub    DWORD PTR [ebp+0x10],0xffffffc3
  42132f:	bound  esi,QWORD PTR [eax-0x3ac11fe8]
  421335:	push   eax
  421336:	jl     0x42132f
  421338:	dec    ecx
  421339:	std    
  42133a:	adc    BYTE PTR [edx+edi*4-0x45bcfa40],0xf9
  421342:	fbstp  TBYTE PTR [edx+0x7a]
  421345:	fwait
  421346:	push   ecx
  421347:	mov    ecx,0x5af33d23
  42134c:	pushf  
  42134d:	icebp  
  42134e:	or     esp,ebp
  421350:	stc    
  421351:	call   DWORD PTR [esi-0x7c]
  421354:	push   0xffffffbe
  421356:	pushf  
  421357:	and    edi,esp
  421359:	mov    bl,0x6e
  42135b:	bound  esp,QWORD PTR [eax]
  42135d:	add    DWORD PTR [ecx],ecx
  42135f:	and    edi,ebx
  421361:	cmp    bl,al
  421363:	inc    esi
  421364:	adc    ebx,DWORD PTR [edx]
  421366:	cmp    eax,0x81d6eb6f
  42136b:	pop    esp
  42136c:	out    dx,eax
  42136d:	adc    edx,DWORD PTR [edi-0x31]
  421370:	and    al,0xf9
  421372:	dec    esi
  421373:	sbb    esp,DWORD PTR [ecx-0x44435b07]
  421379:	mov    edx,0xbd6812e2
  42137e:	cli    
  42137f:	inc    ebx
  421380:	leave  
  421381:	mov    dh,0xdf
  421383:	dec    ebx
  421384:	jge    0x421311
  421386:	dec    ebx
  421387:	push   ebx
  421388:	mov    esi,0x28e1051e
  42138d:	jmp    0xf7d:0xdba632e2
  421394:	pop    eax
  421395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421396:	adc    edx,DWORD PTR [edx-0x3a]
  421399:	mov    edx,0x732ad4e5
  42139e:	add    ebp,DWORD PTR [eax-0x7e]
  4213a1:	pop    es
  4213a2:	icebp  
  4213a3:	dec    edi
  4213a4:	aas    
  4213a5:	add    bh,BYTE PTR [ebp+edi*2-0xa24381d]
  4213ac:	gs repnz mov bl,0x1d
  4213b0:	xchg   ecx,eax
  4213b1:	jae    0x42138d
  4213b3:	add    DWORD PTR [ebp+0x1f2a04a4],esi
  4213b9:	sti    
  4213ba:	jb     0x42142e
  4213bc:	fdivr  st(5),st
  4213be:	sub    DWORD PTR [ebx-0x23],edi
  4213c1:	dec    ebx
  4213c2:	ror    WORD PTR [ebp-0x7c83ea47],0x7e
  4213ca:	mov    eax,0x3d499a6c
  4213cf:	bound  ecx,QWORD PTR [eax]
  4213d1:	adc    eax,0xae74c670
  4213d6:	addr16 call 0x1768:0x2ffe568d
  4213de:	adc    ah,dl
  4213e0:	sbb    al,0x9e
  4213e2:	adc    edx,edi
  4213e4:	sub    al,0x70
  4213e6:	adc    esi,DWORD PTR [eax-0x5b03cbf3]
  4213ec:	mov    al,0x83
  4213ee:	pop    eax
  4213ef:	int3   
  4213f0:	ret    
  4213f1:	clc    
  4213f2:	and    ebx,esi
  4213f4:	jns    0x42143b
  4213f6:	mov    bl,0x9
  4213f8:	out    0x10,eax
  4213fa:	fmul   QWORD PTR [ebx]
  4213fc:	jl     0x42145c
  4213fe:	int3   
  4213ff:	dec    edx
  421400:	jbe    0x4213ce
  421402:	cdq    
  421403:	aaa    
  421404:	or     cl,ah
  421406:	push   esp
  421407:	loopne 0x42143e
  421409:	or     eax,0xa09d72cd
  42140e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140f:	lods   al,BYTE PTR ds:[esi]
  421410:	dec    eax
  421411:	add    edi,DWORD PTR [esi]
  421413:	dec    ecx
  421414:	ficomp DWORD PTR [esi-0x40f0d8df]
  42141a:	outs   dx,DWORD PTR ds:[esi]
  42141b:	out    0x94,al
  42141d:	adc    eax,0xd6fd6d6a
  421422:	dec    ecx
  421423:	push   ecx
  421424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421425:	imul   edx,DWORD PTR [edi],0xc98eda7f
  42142b:	retf   0xede
  42142e:	push   es
  42142f:	mov    edi,0x721b2fa8
  421434:	cs loop 0x4214af
  421437:	push   esp
  421438:	loope  0x4213c3
  42143a:	sbb    ebp,DWORD PTR [esi+0x31]
  42143d:	mov    BYTE PTR [ebx-0x8eb1786],bh
  421443:	or     BYTE PTR [ecx],0x37
  421446:	bound  esp,QWORD PTR [esi+0xfcb63cd]
  42144c:	push   eax
  42144d:	mov    eax,ds:0x4ee98ca4
  421452:	shl    DWORD PTR [edi+0x1aa86ac1],1
  421458:	cmp    al,0xf3
  42145a:	loope  0x421487
  42145c:	icebp  
  42145d:	cli    
  42145e:	push   ds
  42145f:	inc    esp
  421460:	adc    ebp,DWORD PTR [edi]
  421462:	jmp    0x72d6:0xd06ac513
  421469:	sbb    ch,BYTE PTR [ecx]
  42146b:	aaa    
  42146c:	(bad)  
  42146e:	outs   dx,BYTE PTR ds:[esi]
  42146f:	out    dx,ax
  421471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421472:	aad    0x79
  421474:	sbb    BYTE PTR [ecx],bl
  421476:	xchg   edx,eax
  421477:	and    cl,BYTE PTR [ebp+0x240c6675]
  42147d:	xor    DWORD PTR [esi-0x21192b4b],ebx
  421483:	(bad)  
  421484:	dec    eax
  421485:	call   0xb7c3:0xaccaebc1
  42148c:	das    
  42148d:	int3   
  42148e:	push   cs
  42148f:	mov    ebx,0x758837cb
  421494:	xchg   esp,eax
  421495:	hlt    
  421496:	into   
  421497:	push   ds
  421498:	daa    
  421499:	call   0x1bde:0x7523c72f
  4214a0:	push   ds
  4214a1:	sub    BYTE PTR [edx+0x12d18fcd],ch
  4214a7:	mov    ds:0x76186e20,al
  4214ac:	dec    esp
  4214ad:	ss aaa 
  4214af:	xor    eax,0x47c11970
  4214b4:	add    ecx,edi
  4214b6:	add    DWORD PTR [ebx+0x75e8fcc9],0xffffffd8
  4214bd:	push   edi
  4214be:	push   ss
  4214bf:	nop
  4214c0:	cmp    eax,0x328cec7a
  4214c5:	or     ebx,DWORD PTR [eax]
  4214c7:	rcl    esp,0x5b
  4214ca:	into   
  4214cb:	jmp    0x42152c
  4214cd:	inc    ebp
  4214ce:	aam    0x20
  4214d0:	mov    BYTE PTR [ebp+0x7d7008ad],bh
  4214d6:	adc    esi,edx
  4214d8:	jl     0x42148f
  4214da:	jmp    DWORD PTR [edi+0x2af769a5]
  4214e0:	adc    al,0x64
  4214e2:	pop    ecx
  4214e3:	fild   WORD PTR [esi-0x18c5158a]
  4214e9:	sbb    dl,BYTE PTR [edi+0x12a67444]
  4214ef:	shl    DWORD PTR [ebp+0x72ea6530],cl
  4214f5:	push   ds
  4214f6:	mov    esp,ds
  4214f8:	ins    DWORD PTR es:[edi],dx
  4214f9:	test   DWORD PTR [ecx*8-0x2ec8100b],ebx
  421500:	and    ebp,eax
  421502:	stos   BYTE PTR es:[edi],al
  421503:	and    BYTE PTR [edx-0x289c2a88],ch
  421509:	or     ebp,DWORD PTR [edi+edx*2-0x5c]
  42150d:	add    edi,DWORD PTR [ecx-0x5b]
  421510:	dec    edx
  421511:	out    0xf5,eax
  421513:	jb     0x421499
  421515:	outs   dx,DWORD PTR ds:[esi]
  421516:	jge    0x42156b
  421518:	das    
  421519:	xor    al,0x79
  42151b:	jmp    0x9d3ef798
  421520:	sub    eax,0x972494f2
  421525:	int    0x40
  421527:	mov    ecx,0xa6ded1b6
  42152c:	mov    ebp,0x75c1bb3
  421531:	not    BYTE PTR [esi*1+0x69548972]
  421538:	mov    cl,0x54
  42153a:	loopne 0x42156a
  42153c:	dec    ebx
  42153d:	cmp    al,BYTE PTR [edx]
  42153f:	push   ss
  421540:	(bad)  
  421541:	sub    esp,DWORD PTR [ebx-0x36b14aba]
  421547:	push   0x8339196c
  42154c:	sbb    eax,0x9b7885af
  421551:	xor    eax,0x23797735
  421556:	cmp    ch,bl
  421558:	inc    esp
  421559:	jae    0x421522
  42155b:	int3   
  42155c:	push   esp
  42155d:	xchg   esi,eax
  42155e:	mov    ecx,0xed3ec9af
  421563:	lea    edx,[esi-0x9]
  421566:	mov    cl,0xed
  421568:	sti    
  421569:	es cdq 
  42156b:	xlat   BYTE PTR ds:[ebx]
  42156c:	push   ecx
  42156d:	mov    BYTE PTR [edx+0x11],dh
  421570:	out    0x18,al
  421572:	and    esi,DWORD PTR [ecx]
  421574:	jo     0x4215b0
  421576:	fnstenv [edi]
  421578:	mov    eax,0xe590daa0
  42157d:	clc    
  42157e:	mov    ecx,0x2df38a66
  421583:	sub    dh,al
  421585:	xchg   DWORD PTR [ebx-0x48],ecx
  421588:	fsub   QWORD PTR [esi+0x16]
  42158b:	fadd   DWORD PTR [eax+0x6e]
  42158e:	inc    ecx
  42158f:	and    esp,ecx
  421591:	lds    edx,FWORD PTR [edi+0x61]
  421594:	sub    eax,0x4f7edc01
  421599:	fcmovnb st,st(0)
  42159b:	dec    BYTE PTR [edi]
  42159d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42159e:	pop    edi
  42159f:	cmp    al,0xa4
  4215a1:	cmp    eax,0xa76d65ad
  4215a6:	inc    sp
  4215a8:	jp     0x42155f
  4215aa:	dec    ebx
  4215ab:	dec    edi
  4215ac:	adc    DWORD PTR [esi],0x4b
  4215af:	pop    eax
  4215b0:	lahf   
  4215b1:	mov    cl,dl
  4215b3:	addr16 pop es
  4215b5:	add    BYTE PTR [ecx],0xdc
  4215b8:	sub    al,0xb2
  4215ba:	cmp    DWORD PTR [ecx*4-0x1b859625],eax
  4215c1:	sub    al,0x81
  4215c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215c4:	arpl   ax,sp
  4215c6:	sub    al,0xe
  4215c8:	xchg   esi,eax
  4215c9:	xor    dh,BYTE PTR [edx+0x7a]
  4215cc:	rcr    DWORD PTR [esi-0x2369d671],0xf1
  4215d3:	cwde   
  4215d4:	push   ebp
  4215d5:	xlat   BYTE PTR ds:[ebx]
  4215d6:	out    0x24,al
  4215d8:	gs repnz pop di
  4215dc:	stos   DWORD PTR es:[edi],eax
  4215dd:	pop    ss
  4215de:	dec    ebx
  4215df:	sahf   
  4215e0:	jecxz  0x42158c
  4215e2:	mov    bh,0x7d
  4215e4:	jno    0x42160d
  4215e6:	out    0x92,al
  4215e8:	jno    0x421595
  4215ea:	mul    BYTE PTR [esi]
  4215ec:	or     BYTE PTR [ecx],al
  4215ee:	js     0x4215a6
  4215f0:	pop    edi
  4215f1:	mov    ds:0xb217a8bd,al
  4215f6:	inc    ebp
  4215f7:	adc    ecx,DWORD PTR [ebx+0x75]
  4215fa:	adc    ebp,DWORD PTR [eax-0x74326233]
  421600:	inc    ebx
  421601:	test   eax,0x3e8cf793
  421606:	loopne 0x4215e2
  421608:	push   eax
  421609:	sub    cl,bl
  42160b:	in     al,0xed
  42160d:	icebp  
  42160e:	imul   esp,DWORD PTR [ebx+0x47],0x4e
  421612:	dec    ecx
  421613:	psubusw mm7,mm7
  421616:	sub    al,0x24
  421618:	mul    DWORD PTR [esi-0x3ebcaff0]
  42161e:	aaa    
  42161f:	inc    ebp
  421620:	pusha  
  421621:	pushf  
  421622:	or     al,al
  421624:	push   esp
  421625:	popf   
  421626:	mov    bl,0x76
  421628:	mov    eax,0x3e67438b
  42162d:	dec    ebx
  42162e:	(bad)  
  42162f:	sbb    DWORD PTR ss:[edi+0x2d899d09],esp
  421636:	mov    fs,WORD PTR [edi]
  421638:	fst    DWORD PTR [edx]
  42163a:	cmp    al,0x6
  42163c:	jg     0x421654
  42163e:	clc    
  42163f:	mov    al,ds:0x419628ac
  421644:	clc    
  421645:	and    ebp,0x865f883f
  42164b:	rol    DWORD PTR [esi+eiz*8],1
  42164e:	pop    ecx
  42164f:	jmp    0x42161e
  421651:	mov    al,ds:0x9c2ba6c1
  421656:	pop    eax
  421657:	xchg   ecx,eax
  421658:	xor    eax,0x60768425
  42165d:	shl    BYTE PTR [ebx*4+0x477fcfd],0x6
  421665:	push   0x2f56ee79
  42166a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42166b:	cli    
  42166c:	ret    
  42166d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42166e:	sub    BYTE PTR [ebp-0x302e8a13],ah
  421674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421675:	jns    0x421624
  421677:	aam    0x5e
  421679:	xchg   esi,eax
  42167a:	adc    ecx,DWORD PTR [edi+edx*4-0xe]
  42167e:	push   ds
  42167f:	dec    ecx
  421680:	xchg   ebp,eax
  421681:	xchg   esi,eax
  421682:	dec    esi
  421683:	jmp    0x421658
  421685:	ins    DWORD PTR es:[edi],dx
  421686:	push   esi
  421687:	cdq    
  421688:	test   DWORD PTR [esi],ebx
  42168a:	(bad)  
  42168b:	(bad)  
  42168d:	add    DWORD PTR [esi+ecx*2-0x59],ecx
  421691:	dec    ecx
  421692:	adc    esp,DWORD PTR [ecx-0x1ab57086]
  421698:	dec    esp
  421699:	push   edi
  42169a:	sub    DWORD PTR [ebp+0x4f],esi
  42169d:	or     dl,BYTE PTR [ecx+esi*1+0x2cdc1ef5]
  4216a4:	adc    esi,DWORD PTR ds:0x6f282898
  4216aa:	int3   
  4216ab:	outs   dx,BYTE PTR ds:[esi]
  4216ac:	fstp   QWORD PTR [ebp-0x1b]
  4216af:	add    eax,0xdd0c8285
  4216b4:	pop    esi
  4216b5:	fdivr  DWORD PTR [ebx-0x1c]
  4216b8:	mov    WORD PTR [ebx],cs
  4216ba:	(bad)  
  4216bb:	adc    ebx,DWORD PTR [ecx]
  4216bd:	shl    BYTE PTR [ebx+0x1084fdf3],0xed
  4216c4:	sub    eax,0xd786edf7
  4216c9:	cwde   
  4216ca:	jecxz  0x4216ca
  4216cc:	inc    ebx
  4216cd:	shl    BYTE PTR [eax+0x4b],0x93
  4216d1:	loope  0x4216d7
  4216d3:	xchg   ebp,eax
  4216d5:	or     eax,DWORD PTR [edi+0x10]
  4216d8:	sbb    ebp,DWORD PTR ds:0x282884e4
  4216de:	inc    ecx
  4216df:	aas    
  4216e0:	xchg   edi,eax
  4216e1:	jge    0x421710
  4216e3:	into   
  4216e4:	cmp    eax,0x276052c3
  4216e9:	leave  
  4216ea:	rcl    DWORD PTR [eax+eiz*8-0x58],0xf
  4216ef:	mov    ecx,0xe17e3e29
  4216f4:	ror    bh,cl
  4216f6:	and    eax,0x4211594
  4216fb:	fdiv   QWORD PTR [edi]
  4216fd:	inc    ebx
  4216fe:	scas   eax,DWORD PTR es:[edi]
  4216ff:	(bad)  
  421700:	scas   eax,DWORD PTR es:[edi]
  421701:	push   edi
  421702:	xor    BYTE PTR [edx+ecx*2-0x651fcbf2],al
  421709:	jnp    0x421788
  42170b:	loope  0x421719
  42170d:	cmc    
  42170e:	inc    ecx
  42170f:	dec    edi
  421710:	pushf  
  421711:	ds inc ebp
  421713:	iret   
  421714:	dec    ebx
  421715:	xchg   esp,eax
  421716:	mov    si,0x96ac
  42171a:	sbb    BYTE PTR [eax-0x6],bh
  42171d:	mov    ah,0x80
  42171f:	shr    BYTE PTR [ebp+0x5c9cf599],1
  421725:	pop    ebx
  421726:	pop    ecx
  421727:	and    al,0xbc
  421729:	in     al,0xf2
  42172b:	mov    bh,0xa7
  42172d:	push   ds
  42172e:	pop    ebx
  42172f:	push   es
  421730:	or     DWORD PTR [edx],esp
  421732:	or     al,0xed
  421734:	mov    dh,0xac
  421736:	mov    DWORD PTR [eax+eiz*8],0x9290b661
  42173d:	adc    edi,DWORD PTR [ebx+0x569a56e9]
  421743:	icebp  
  421744:	xchg   edi,eax
  421745:	add    BYTE PTR [ebp-0x56466eb9],al
  42174b:	mov    ds:0x7823e604,al
  421750:	sub    eax,0xa33be075
  421755:	pop    ss
  421756:	add    esp,DWORD PTR [eax-0x193efe22]
  42175c:	pop    ecx
  42175d:	test   cl,0x2b
  421760:	lods   al,BYTE PTR ds:[esi]
  421761:	xor    esp,esp
  421763:	dec    edx
  421764:	ins    DWORD PTR es:[edi],dx
  421765:	out    0xac,eax
  421767:	dec    ebp
  421768:	or     BYTE PTR [eax],dh
  42176a:	ret    
  42176b:	out    0x4e,eax
  42176d:	sbb    esp,DWORD PTR [ebx+0x706eaeb6]
  421773:	(bad)  [esi]
  421775:	ret    0x4377
  421778:	adc    eax,DWORD PTR [esi-0x7e]
  42177b:	xor    ch,BYTE PTR [ebx+0x436bff4e]
  421781:	mov    cl,0xba
  421783:	pop    ss
  421784:	fucomi st,st(4)
  421786:	push   ds
  421787:	jno    0x421758
  421789:	jbe    0x4217d9
  42178b:	ss mov edi,0x81059867
  421791:	das    
  421792:	cmp    eax,0xa08687e8
  421797:	loopne 0x421805
  421799:	mov    bh,bl
  42179b:	rcr    bh,1
  42179d:	ins    BYTE PTR es:[edi],dx
  42179e:	cs enter 0x42b8,0xb2
  4217a3:	and    eax,0x890ca7b6
  4217a8:	push   edi
  4217a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217aa:	mov    dl,0x8f
  4217ac:	add    DWORD PTR [eax],esp
  4217ae:	mov    bh,0x38
  4217b0:	out    dx,al
  4217b1:	retf   0x93c2
  4217b4:	icebp  
  4217b5:	(bad)
  4217b8:	test   BYTE PTR [edi+0x63000c61],bl
  4217be:	dec    edi
  4217bf:	and    eax,DWORD PTR [edi]
  4217c1:	shr    DWORD PTR [edx-0x61aed156],cl
  4217c7:	das    
  4217c8:	fadd   st,st(2)
  4217ca:	mov    ebx,0xb86ee43f
  4217cf:	cmp    DWORD PTR [edx+0x16],esi
  4217d2:	or     cl,bh
  4217d4:	addr16 xchg edx,eax
  4217d6:	push   esp
  4217d7:	retf   
  4217d8:	xor    eax,0x3e703f9d
  4217dd:	cmp    al,BYTE PTR [edi-0x17]
  4217e0:	sar    BYTE PTR [edi+eiz*2],0xef
  4217e4:	rol    DWORD PTR [esi-0x3d8c4352],1
  4217ea:	int    0x3e
  4217ec:	xor    ecx,DWORD PTR [ecx-0x74c78de8]
  4217f2:	sbb    bl,BYTE PTR [ebx+0x50f9059]
  4217f8:	push   edx
  4217f9:	jmp    0xa3739062
  4217fe:	mov    ch,0xe8
  421800:	inc    eax
  421801:	pop    DWORD PTR [esi-0x3b]
  421804:	xor    ah,al
  421806:	push   ebp
  421807:	sbb    eax,0x5a40ef66
  42180c:	jg     0x4217aa
  42180e:	dec    esi
  42180f:	out    0xa0,al
  421811:	adc    bl,BYTE PTR [eax-0x22]
  421814:	je     0x42185c
  421816:	call   0x7494:0xaab1b847
  42181d:	and    esi,DWORD PTR [ebp+0x1cd3a896]
  421823:	or     bl,BYTE PTR [ecx]
  421825:	mov    ecx,0xbdc4c5dc
  42182a:	in     al,0x5d
  42182c:	lods   al,BYTE PTR es:[esi]
  42182e:	pusha  
  42182f:	shr    DWORD PTR [esi+eiz*8],0x71
  421833:	je     0x42185a
  421835:	or     esp,DWORD PTR [ecx+0x58]
  421838:	test   ebx,esp
  42183a:	pop    ebx
  42183b:	sbb    eax,edx
  42183d:	or     eax,0xd637bbe5
  421842:	inc    esi
  421843:	and    al,0x9a
  421845:	mov    esp,0x4d7080f4
  42184a:	mov    WORD PTR [edx],ss
  42184c:	cmc    
  42184d:	jo     0x42181d
  42184f:	push   ebx
  421850:	das    
  421851:	lds    esi,FWORD PTR [eax-0x19]
  421854:	push   cs
  421855:	pop    ebp
  421856:	out    dx,al
  421857:	cmp    BYTE PTR [edi+0x60],ch
  42185a:	xchg   ebx,eax
  42185b:	test   eax,0x9de237d6
  421860:	lea    esi,[edi+0x4]
  421863:	cmp    BYTE PTR [eax+edi*2],ah
  421866:	popf   
  421867:	push   0x9f07e034
  42186c:	adc    ebx,edx
  42186e:	mov    eax,0xc8397442
  421873:	push   0x296ca3c2
  421878:	mov    al,0x60
  42187a:	enter  0x7d70,0xd3
  42187e:	adc    ch,BYTE PTR [esi-0x5416db3c]
  421884:	jle    0x4218c3
  421886:	lea    eax,[ecx-0x5a]
  421889:	jl     0x421853
  42188b:	lods   al,BYTE PTR ds:[esi]
  42188c:	or     DWORD PTR [edx],edx
  42188e:	cmp    cl,BYTE PTR [edi-0x66]
  421891:	jecxz  0x421849
  421893:	fwait
  421894:	aad    0xda
  421896:	fldenv [esi-0x358a2a5e]
  42189c:	out    dx,al
  42189d:	out    dx,al
  42189e:	mov    ebx,ebp
  4218a0:	out    0xa8,al
  4218a2:	pop    eax
  4218a3:	inc    ebx
  4218a4:	dec    BYTE PTR [ebx+0x41486ce7]
  4218aa:	or     BYTE PTR [esi],dl
  4218ac:	adc    ecx,edx
  4218ae:	cmp    ah,BYTE PTR [ebx+0x21]
  4218b1:	je     0x421917
  4218b3:	add    ah,BYTE PTR [esi-0x45]
  4218b6:	out    dx,eax
  4218b7:	shr    DWORD PTR [esp+esi*1+0x3a],1
  4218bb:	mul    DWORD PTR [esp+ecx*4]
  4218be:	dec    edi
  4218bf:	xchg   ax,ax
  4218c1:	loope  0x4218f7
  4218c3:	sbb    eax,0xe9839dc6
  4218c8:	pop    es
  4218c9:	aam    0x6a
  4218cb:	repnz mov al,0xe4
  4218ce:	leave  
  4218cf:	test   eax,0x95207435
  4218d4:	fwait
  4218d5:	ins    BYTE PTR es:[edi],dx
  4218d6:	pop    esp
  4218d7:	and    bh,BYTE PTR [edx]
  4218d9:	jge    0x4218aa
  4218db:	repnz cmc 
  4218dd:	xor    dh,BYTE PTR [edx]
  4218df:	inc    BYTE PTR [edi+0x26]
  4218e2:	mov    DWORD PTR [esi-0x35],esi
  4218e5:	adc    ebx,ecx
  4218e7:	jbe    0x42192f
  4218e9:	ins    DWORD PTR es:[edi],dx
  4218ea:	es loope 0x421871
  4218ed:	mov    edx,0x5a5a551b
  4218f2:	ins    BYTE PTR es:[edi],dx
  4218f3:	cmp    eax,0x92f16ed1
  4218f8:	adc    ecx,DWORD PTR [edx+eiz*1+0x27]
  4218fc:	mov    edx,0xe28360e
  421901:	xor    BYTE PTR [eax],0x5c
  421904:	in     al,0x89
  421906:	int    0xf3
  421908:	fist   WORD PTR [ebx-0x49]
  42190b:	mov    ecx,0x1b6cc340
  421910:	call   0x9471:0x1299282c
  421917:	xchg   DWORD PTR [esi],ecx
  421919:	icebp  
  42191a:	pusha  
  42191b:	xor    al,0xba
  42191d:	call   esi
  42191f:	dec    esp
  421920:	add    eax,ebp
  421922:	mov    WORD PTR ds:0x489f88de,ds
  421928:	xchg   ebp,eax
  421929:	popa   
  42192a:	test   DWORD PTR [ebx+0xd],edi
  42192d:	mov    dh,0x83
  42192f:	dec    eax
  421930:	daa    
  421931:	cdq    
  421932:	push   esp
  421933:	test   BYTE PTR [ebp-0x14],cl
  421936:	mov    eax,0x24bd04ee
  42193b:	aad    0x8e
  42193d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193e:	mov    DWORD PTR [ebp-0x53],ebp
  421941:	inc    esi
  421942:	ret    
  421943:	div    DWORD PTR [ebp+0x6c]
  421946:	xor    ch,dh
  421948:	pop    edi
  421949:	iret   
  42194a:	and    eax,0x8be1719b
  42194f:	ss stos BYTE PTR es:[edi],al
  421951:	xchg   esp,eax
  421952:	and    eax,0xa3366c64
  421957:	rol    BYTE PTR [edi+eiz*1],1
  42195a:	xor    al,0x99
  42195c:	addr16 ja 0x421905
  42195f:	pop    ecx
  421960:	(bad)  
  421961:	xchg   ebp,eax
  421962:	inc    ebp
  421963:	leave  
  421964:	push   0x71026743
  421969:	repnz mov DWORD PTR [eax-0x26bce648],edi
  421970:	sub    bh,BYTE PTR [ecx+0x20e977db]
  421976:	cmp    al,0x1b
  421978:	fs dec esp
  42197a:	inc    esi
  42197b:	inc    esi
  42197c:	shr    DWORD PTR [edx+ebp*4+0x2b],0xc6
  421981:	pop    esp
  421982:	mov    ecx,0x9be0787f
  421987:	xchg   esi,eax
  421988:	mov    edx,0x82499a3
  42198d:	sub    BYTE PTR [edx+0x26],ah
  421990:	es aas 
  421992:	ror    BYTE PTR [eax],cl
  421994:	pop    ebp
  421995:	test   al,0x89
  421997:	mov    ecx,0xda326ce0
  42199c:	mov    edi,0x39b26e1f
  4219a1:	push   ebp
  4219a2:	mov    BYTE PTR [ebx+eax*4],ah
  4219a5:	fisub  DWORD PTR [esi+0xf]
  4219a8:	sar    DWORD PTR [edi+0x6672984b],1
  4219ae:	pushf  
  4219af:	pop    es
  4219b0:	mov    ebp,0xe3734401
  4219b5:	pop    ss
  4219b6:	mov    ds:0x95f8931a,al
  4219bb:	mov    eax,0x1f548a36
  4219c0:	scas   al,BYTE PTR es:[edi]
  4219c1:	pop    es
  4219c2:	test   eax,0x8a00f0a3
  4219c7:	inc    ecx
  4219c8:	ss or  eax,0xef2255fe
  4219ce:	adc    esi,0x8f8934f1
  4219d4:	ret    
  4219d5:	call   0xc36ac271
  4219da:	outs   dx,DWORD PTR ds:[esi]
  4219db:	retf   0x5994
  4219de:	cmp    al,0x9e
  4219e0:	xchg   ebx,eax
  4219e1:	sub    edi,DWORD PTR [edi-0x25]
  4219e4:	jnp    0x421a36
  4219e6:	aad    0xf
  4219e8:	test   eax,0x9db2f74b
  4219ed:	call   0x66f7aa79
  4219f2:	test   eax,0xd41fd1fb
  4219f7:	jae    0x421a02
  4219f9:	and    cl,al
  4219fb:	ret    0xbeb1
  4219fe:	stc    
  4219ff:	out    dx,eax
  421a00:	not    DWORD PTR [ebx+edx*8]
  421a03:	retw   
  421a05:	jmp    0xc454:0x51409aed
  421a0c:	aaa    
  421a0d:	call   0x2068a48
  421a12:	ret    
  421a13:	sbb    al,0x7
  421a15:	inc    edi
  421a16:	rol    DWORD PTR [esi+ebp*2-0x2e0c0baf],0x15
  421a1e:	mov    esp,0xd37cff8d
  421a23:	in     eax,dx
  421a24:	cs inc ebx
  421a26:	xchg   DWORD PTR [edi+0x46ac034],ecx
  421a2c:	xchg   ebx,eax
  421a2d:	sbb    BYTE PTR [edx+eiz*1-0x7f],0xec
  421a32:	test   eax,0x51ede863
  421a37:	fwait
  421a38:	out    0x82,al
  421a3a:	fsub   DWORD PTR [ebx-0x4]
  421a3d:	sbb    DWORD PTR [edi],ecx
  421a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a40:	imul   esp,ecx,0xffffffd2
  421a43:	fild   DWORD PTR [esi]
  421a45:	mov    ecx,0xe809a3d1
  421a4a:	or     DWORD PTR [ebp-0x9],0x81390f70
  421a51:	loope  0x421a59
  421a53:	in     al,0x4b
  421a55:	ror    DWORD PTR [esi-0x4330f95f],cl
  421a5b:	mov    bh,0x71
  421a5d:	ja     0x421aa5
  421a5f:	push   ebx
  421a60:	ins    DWORD PTR es:[edi],dx
  421a61:	das    
  421a62:	adc    BYTE PTR [ebp+0x16b3156c],dh
  421a68:	imul   eax,DWORD PTR [eax-0x6a],0xffffffd3
  421a6c:	lahf   
  421a6d:	cdq    
  421a6e:	push   edx
  421a6f:	and    DWORD PTR [ebx-0x6183799c],ecx
  421a75:	mov    dh,0xbf
  421a77:	mov    al,ds:0x52fa0145
  421a7c:	ret    
  421a7d:	outs   dx,BYTE PTR ds:[esi]
  421a7e:	pusha  
  421a7f:	scas   eax,DWORD PTR es:[edi]
  421a80:	pop    es
  421a81:	push   es
  421a82:	gs cld 
  421a84:	mov    eax,0xac1e747d
  421a89:	cmp    ecx,DWORD PTR [ecx-0x5d]
  421a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a8d:	xchg   DWORD PTR [edi+0x2c],edx
  421a90:	(bad)  
  421a92:	pop    es
  421a93:	fmul   QWORD PTR [ecx+edx*4+0x1b]
  421a98:	push   edi
  421a99:	(bad)  
  421a9a:	jmp    0x421a95
  421a9c:	add    eax,0x920d4197
  421aa1:	add    DWORD PTR [ebx],esp
  421aa3:	push   es
  421aa4:	dec    ebp
  421aa5:	xor    esp,edx
  421aa7:	jecxz  0x421b1d
  421aa9:	fiadd  DWORD PTR [edi-0x3d8d9560]
  421aaf:	mov    BYTE PTR [eax+0x65],0xdd
  421ab3:	arpl   WORD PTR [ebp-0x5f],bp
  421ab6:	rcl    DWORD PTR [edi],cl
  421ab8:	leave  
  421ab9:	mov    eax,ds:0x946d9512
  421abe:	loop   0x421a6e
  421ac0:	(bad)  
  421ac1:	call   0x34cc63b3
  421ac6:	cmc    
  421ac7:	ret    
  421ac8:	mov    bh,0x32
  421aca:	sub    eax,0x18e942c6
  421acf:	daa    
  421ad0:	sbb    esi,DWORD PTR [edi-0x527c1acb]
  421ad6:	jno    0x421a71
  421ad8:	mov    ebx,DWORD PTR [eax]
  421ada:	xor    eax,0xf7347fc6
  421adf:	jae    0x421b22
  421ae1:	test   eax,0xfd63dab4
  421ae6:	sbb    edx,DWORD PTR [eax-0x49699934]
  421aec:	xchg   BYTE PTR [edi-0x6f],dh
  421aef:	push   cs
  421af0:	mov    ecx,edi
  421af2:	sub    eax,0xcd431a43
  421af7:	jno    0x421acc
  421af9:	fdivr  DWORD PTR [ecx-0x1e54802a]
  421aff:	(bad)  
  421b00:	jg     0x421b6c
  421b02:	lds    edx,FWORD PTR [ecx-0x44cbfd8d]
  421b08:	aaa    
  421b09:	xor    cl,BYTE PTR [edx-0x8]
  421b0c:	inc    esi
  421b0d:	sbb    cl,BYTE PTR [eax]
  421b0f:	sbb    ecx,DWORD PTR [ebp+esi*4+0x6f]
  421b13:	std    
  421b14:	mov    bh,0x9a
  421b16:	inc    ebx
  421b17:	lods   eax,DWORD PTR ds:[esi]
  421b18:	pop    ecx
  421b19:	hlt    
  421b1a:	ror    BYTE PTR [edi+0x4f112b1e],cl
  421b20:	sbb    BYTE PTR [edi],ch
  421b22:	aad    0x86
  421b24:	mov    ds:0xef5ee50b,al
  421b29:	cmp    DWORD PTR [ebp+ebx*2-0x2a4b482],ebx
  421b30:	leave  
  421b31:	mov    edx,0xa9875879
  421b36:	xchg   edx,eax
  421b37:	rcr    DWORD PTR [esi],cl
  421b39:	pop    ecx
  421b3a:	jae    0x421b0f
  421b3c:	into   
  421b3d:	xchg   BYTE PTR [edi-0x4e],bh
  421b40:	inc    esi
  421b41:	mov    al,ds:0xac632f3a
  421b46:	scas   eax,DWORD PTR es:[edi]
  421b47:	shr    DWORD PTR [bx+si+0x41dc],1
  421b4c:	mov    bh,0xc2
  421b4e:	aam    0x91
  421b50:	sar    BYTE PTR [esi+0x794dd7c6],0xc0
  421b57:	mul    DWORD PTR [edi-0x4f]
  421b5a:	mov    esp,0xac747a80
  421b5f:	test   al,0xc4
  421b61:	mov    eax,ds:0x6eadaf3f
  421b66:	stc    
  421b67:	loope  0x421bcd
  421b69:	test   DWORD PTR [ecx-0x3c],edx
  421b6c:	xor    bh,BYTE PTR fs:[ebx-0x68]
  421b70:	cli    
  421b71:	ret    
  421b72:	inc    esi
  421b73:	xchg   ebp,eax
  421b74:	inc    esi
  421b75:	dec    ebp
  421b76:	js     0x421b15
  421b78:	cmp    BYTE PTR [ebx+0x56c1eecd],0x99
  421b7f:	lods   eax,DWORD PTR ds:[esi]
  421b80:	cwde   
  421b81:	inc    esi
  421b82:	adc    ebx,eax
  421b84:	ret    0xab57
  421b87:	push   esp
  421b88:	icebp  
  421b89:	pop    eax
  421b8a:	std    
  421b8b:	jmp    0x4225:0x6c1bda98
  421b92:	adc    eax,0x19af7f60
  421b97:	mov    ah,0x44
  421b99:	out    dx,eax
  421b9a:	mov    ebx,DWORD PTR [bp+di+0x62]
  421b9e:	push   ebp
  421b9f:	ret    
  421ba0:	push   edx
  421ba1:	cli    
  421ba2:	mov    ebp,0xc9797547
  421ba7:	dec    esp
  421ba8:	pop    ss
  421ba9:	jmp    0xf2c32933
  421bae:	xchg   edi,eax
  421baf:	sub    al,0xd
  421bb1:	lahf   
  421bb2:	dec    eax
  421bb3:	or     bh,BYTE PTR [ecx+0x68]
  421bb6:	sbb    eax,0xbce5b314
  421bbb:	add    dh,dl
  421bbd:	sbb    DWORD PTR [esi],ebx
  421bbf:	scas   eax,DWORD PTR es:[edi]
  421bc0:	mov    edx,0x7fb91261
  421bc5:	out    0x2a,al
  421bc7:	and    BYTE PTR [edx],bh
  421bc9:	inc    edi
  421bca:	mov    edx,0x93c74c03
  421bcf:	cmp    DWORD PTR [ebx-0x48c5bcc1],eax
  421bd5:	ret    
  421bd6:	psrlw  mm7,QWORD PTR [ecx-0x77]
  421bda:	outs   dx,DWORD PTR ds:[esi]
  421bdb:	mov    ch,0xdd
  421bdd:	lods   eax,DWORD PTR ds:[esi]
  421bde:	mov    ?,edi
  421be0:	ficom  WORD PTR [edx+0x4a]
  421be3:	add    eax,0x498e8241
  421be8:	cwde   
  421be9:	in     al,dx
  421bea:	adc    al,0xa9
  421bec:	fidiv  DWORD PTR [ecx-0x7f]
  421bef:	lahf   
  421bf0:	xor    DWORD PTR [ecx+0x49],ebp
  421bf3:	mov    eax,ds:0xe8f599e2
  421bf8:	fmul   DWORD PTR [ebx+0x37]
  421bfb:	mov    ds:0x39f68499,al
  421c00:	call   0x51af59b1
  421c05:	and    DWORD PTR [esi+0x7b868d37],esp
  421c0b:	jl     0x421c44
  421c0d:	test   BYTE PTR [ebp-0x6844634a],cl
  421c13:	imul   eax,DWORD PTR ds:0x959e3157,0xffffffe5
  421c1a:	jp     0x421c10
  421c1c:	jbe    0x421c2b
  421c1e:	adc    BYTE PTR [esi],ah
  421c20:	icebp  
  421c21:	pop    esi
  421c22:	clc    
  421c23:	daa    
  421c24:	and    al,0xba
  421c26:	and    DWORD PTR [edx+0x7e33f2a0],esp
  421c2c:	dec    ebx
  421c2d:	and    ebx,ecx
  421c2f:	jg     0x421c81
  421c31:	outs   dx,BYTE PTR ds:[esi]
  421c32:	bound  eax,QWORD PTR [ebx]
  421c34:	mov    ?,WORD PTR [eax+0x35f18f83]
  421c3a:	xchg   esi,eax
  421c3b:	inc    edx
  421c3c:	ins    DWORD PTR es:[edi],dx
  421c3d:	imul   eax,DWORD PTR [ebx-0x3f7e35a3],0x1462e0ed
  421c47:	dec    esi
  421c48:	in     eax,dx
  421c49:	dec    esp
  421c4a:	adc    BYTE PTR [eax+edx*1+0xe1b28a9],0x1b
  421c52:	pusha  
  421c53:	stos   BYTE PTR es:[edi],al
  421c54:	sbb    bl,al
  421c56:	adc    BYTE PTR [edx+eiz*4-0x4b],bh
  421c5a:	xchg   edi,eax
  421c5b:	call   0x1274d21c
  421c60:	cmp    BYTE PTR [ebx-0x47412ed0],dh
  421c66:	pop    ebx
  421c67:	xlat   BYTE PTR ds:[ebx]
  421c68:	test   al,0xc3
  421c6a:	js     0x421cdc
  421c6c:	aaa    
  421c6d:	hlt    
  421c6e:	lods   al,BYTE PTR ds:[esi]
  421c6f:	add    ebp,edx
  421c71:	(bad)
  421c75:	(bad)  [ebx]
  421c77:	add    al,0x44
  421c79:	sub    bh,BYTE PTR [ebx+0x78b479a4]
  421c7f:	jns    0x421c24
  421c81:	push   edx
  421c82:	aam    0x4b
  421c84:	sbb    DWORD PTR [edi-0x3d],0xffffffa5
  421c88:	js     0x421c2f
  421c8a:	shr    esp,cl
  421c8c:	and    al,0xdf
  421c8e:	xor    bl,BYTE PTR [ecx+0x5f]
  421c91:	push   ebx
  421c92:	pop    edx
  421c93:	test   al,0x13
  421c95:	push   0xfffffff2
  421c97:	dec    ecx
  421c98:	cmp    DWORD PTR [ebx+ebx*4+0x235f33a],ebx
  421c9f:	fwait
  421ca0:	(bad)  
  421ca1:	out    0x75,al
  421ca3:	adc    DWORD PTR [ecx],ecx
  421ca5:	sbb    al,0x1a
  421ca7:	xor    ch,BYTE PTR [ebx-0x4]
  421caa:	out    0xaa,eax
  421cac:	into   
  421cad:	adc    al,0x11
  421caf:	ret    0x8f90
  421cb2:	xchg   eax,edi
  421cb4:	sbb    bl,al
  421cb6:	cmp    DWORD PTR [edi-0xa],edx
  421cb9:	dec    esp
  421cba:	out    0xd8,eax
  421cbc:	loope  0x421c6e
  421cbe:	jne    0x421ce5
  421cc0:	fs ins BYTE PTR es:[edi],dx
  421cc2:	in     al,0x1e
  421cc4:	fimul  DWORD PTR [edx]
  421cc6:	or     BYTE PTR [esi],bl
  421cc8:	mov    ecx,0xb32e505f
  421ccd:	push   0xffffffec
  421ccf:	aas    
  421cd0:	fild   WORD PTR [esi-0x3095195b]
  421cd6:	xlat   BYTE PTR ds:[ebx]
  421cd7:	adc    cl,cl
  421cd9:	adc    ebp,eax
  421cdb:	int3   
  421cdc:	pushf  
  421cdd:	imul   ebp,ebp,0xac232933
  421ce3:	fiadd  DWORD PTR [ecx-0x70]
  421ce6:	sahf   
  421ce7:	jl     0x421c8a
  421ce9:	sub    al,0x8b
  421ceb:	pop    es
  421cec:	push   0xc102aaa7
  421cf1:	(bad)  
  421cf2:	retf   0xc229
  421cf5:	(bad)  
  421cf6:	sar    DWORD PTR [ecx-0x7a5a877a],1
  421cfc:	pop    ss
  421cfd:	push   0x6e4653c6
  421d02:	dec    ebx
  421d03:	ds int 0x9e
  421d06:	mul    cl
  421d08:	inc    ecx
  421d09:	les    esp,FWORD PTR [edi+0x7fe26c34]
  421d0f:	test   eax,0xd818bf47
  421d14:	lock xchg ebx,eax
  421d16:	jmp    0xe03dc2e4
  421d1b:	fsubr  QWORD PTR [esi+0x4a]
  421d1e:	(bad)  
  421d1f:	pop    ebp
  421d20:	jmp    0x421cbb
  421d22:	loope  0x421cd0
  421d24:	mov    edi,ebx
  421d26:	into   
  421d27:	and    ebp,esi
  421d29:	xor    BYTE PTR [ebp-0x6f7d6ffc],0xfc
  421d30:	xchg   DWORD PTR [edi+0x1d],esi
  421d33:	aaa    
  421d34:	in     al,dx
  421d35:	test   BYTE PTR [esi-0x4a7ff5ed],0x11
  421d3c:	lahf   
  421d3d:	push   ebx
  421d3e:	and    DWORD PTR [edx-0x455f8b1d],ebp
  421d44:	std    
  421d45:	add    DWORD PTR [ecx],ebx
  421d47:	inc    eax
  421d48:	xor    eax,0x95842968
  421d4d:	add    DWORD PTR [ebp+0x69],ecx
  421d50:	add    eax,0x7a74027
  421d55:	in     al,0x4b
  421d57:	ret    
  421d58:	or     DWORD PTR [edi+ebp*2-0x29],0x63995585
  421d60:	retf   0x8ca5
  421d63:	leave  
  421d64:	cdq    
  421d65:	dec    esi
  421d66:	or     al,bl
  421d68:	add    edx,edi
  421d6a:	mov    al,ds:0xcac57188
  421d6f:	sub    al,0x50
  421d71:	push   eax
  421d72:	jl     0x421da7
  421d74:	test   BYTE PTR [ecx],ah
  421d76:	dec    eax
  421d77:	dec    edi
  421d78:	lds    esi,FWORD PTR ds:0xda90ba17
  421d7e:	inc    ebx
  421d7f:	popa   
  421d80:	loope  0x421dbd
  421d82:	mov    dl,0x67
  421d84:	dec    esi
  421d85:	or     ecx,DWORD PTR [eax+0x51]
  421d88:	push   cs
  421d89:	outs   dx,DWORD PTR ds:[esi]
  421d8a:	cmc    
  421d8b:	add    DWORD PTR [esp+ebp*1+0x8800986],esp
  421d92:	out    0x67,al
  421d94:	cmp    ecx,DWORD PTR [esi+ecx*4-0x45]
  421d98:	push   edx
  421d99:	mov    ds:0x9477597e,eax
  421d9e:	(bad)  
  421d9f:	retf   
  421da0:	dec    eax
  421da1:	push   esi
  421da2:	sahf   
  421da3:	shl    BYTE PTR [ebx+0x526e4454],cl
  421da9:	adc    BYTE PTR [ecx],al
  421dab:	or     al,0xc4
  421dad:	mov    eax,0xa72ee849
  421db2:	(bad)  
  421db3:	fist   WORD PTR [ecx-0x29]
  421db6:	call   0x2dfb8361
  421dbb:	mov    ds:0x8f93ef5d,al
  421dc0:	mov    esp,0xffe874c4
  421dc5:	cmp    eax,0x2c0f8c95
  421dca:	in     al,dx
  421dcb:	ret    
  421dcc:	xor    dl,BYTE PTR [ecx]
  421dce:	inc    ecx
  421dcf:	cld    
  421dd0:	fadd   st(4),st
  421dd2:	push   esp
  421dd3:	inc    DWORD PTR [edi-0x2a]
  421dd6:	fcmovu st,st(7)
  421dd8:	mov    eax,ds:0x764578
  421ddd:	mov    al,ds:0x381b745d
  421de2:	and    BYTE PTR [ebx],ch
  421de4:	inc    esi
  421de5:	mov    edx,0xe63ae71d
  421dea:	scas   eax,DWORD PTR es:[edi]
  421deb:	std    
  421dec:	ret    0xe5a4
  421def:	mov    dh,0xf4
  421df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df2:	sti    
  421df3:	or     al,0x59
  421df5:	mov    cl,0xe3
  421df7:	loop   0x421dcc
  421df9:	push   ecx
  421dfa:	loop   0x421e35
  421dfc:	xor    BYTE PTR [ecx],ah
  421dfe:	xchg   esp,eax
  421dff:	daa    
  421e00:	inc    ebp
  421e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e02:	jecxz  0x421dce
  421e04:	scas   al,BYTE PTR es:[edi]
  421e05:	jle    0x421dad
  421e07:	lods   eax,DWORD PTR ds:[esi]
  421e08:	cmp    eax,0xc4b83085
  421e0d:	cmp    ecx,DWORD PTR [esi]
  421e0f:	out    0x64,eax
  421e11:	rcl    BYTE PTR [eax],1
  421e13:	ds sbb al,0x9
  421e16:	jle    0x421e20
  421e18:	test   eax,0x79e4fd06
  421e1d:	stos   BYTE PTR es:[edi],al
  421e1e:	xchg   ebp,eax
  421e1f:	mov    eax,0x5e256abf
  421e24:	pop    ebx
  421e25:	repz pop ss
  421e27:	dec    eax
  421e28:	repnz cli 
  421e2a:	xchg   ebx,eax
  421e2b:	mov    gs,WORD PTR [ebx-0x1b0fce9b]
  421e31:	outs   dx,BYTE PTR ds:[esi]
  421e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e33:	int    0x2d
  421e35:	pop    edi
  421e36:	cwde   
  421e37:	data16 jne 0x421e53
  421e3a:	ss retf 0xa278
  421e3e:	xchg   esp,eax
  421e3f:	xchg   edi,eax
  421e40:	stos   BYTE PTR es:[edi],al
  421e41:	lods   eax,DWORD PTR es:[esi]
  421e43:	imul   esp,DWORD PTR [esi-0x524647a2],0x3c
  421e4a:	mov    edi,0xf45589ed
  421e4f:	mov    edx,DWORD PTR [ebp-0x10]
  421e52:	xor    edx,eax
  421e54:	add    edx,esi
  421e56:	jne    0x41d43b
  421e5c:	jmp    0x42319b
  421e61:	mov    ecx,DWORD PTR [ebp-0x14]
  421e64:	mov    DWORD PTR [ebp+0x8],ecx
  421e67:	jmp    0x421ee0
  421e6c:	mov    ecx,DWORD PTR [ebp+0x8]
  421e6f:	mov    edx,DWORD PTR [ebp-0x8]
  421e72:	xor    ecx,eax
  421e74:	xor    edx,eax
  421e76:	sub    ecx,edx
  421e78:	sub    ecx,esi
  421e7a:	xor    ecx,eax
  421e7c:	mov    DWORD PTR [ebp+0x8],ecx
  421e7f:	mov    ecx,DWORD PTR [ebp+0x8]
  421e82:	mov    edx,DWORD PTR [ebp-0x58]
  421e85:	add    ecx,0x5708fa
  421e8b:	imul   ecx,edx
  421e8e:	mov    DWORD PTR [ebp-0x58],ecx
  421e91:	mov    ecx,DWORD PTR [ebp+0x8]
  421e94:	mov    edx,DWORD PTR [ebp-0x54]
  421e97:	add    ecx,0x64f898
  421e9d:	or     ecx,edx
  421e9f:	mov    DWORD PTR [ebp-0x54],ecx
  421ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ea5:	mov    edx,DWORD PTR [ebp-0x50]
  421ea8:	add    ecx,0x242ebc9
  421eae:	xor    ecx,edx
  421eb0:	mov    DWORD PTR [ebp-0x50],ecx
  421eb3:	mov    ecx,DWORD PTR [ebp+0x8]
  421eb6:	mov    edx,DWORD PTR [ebp-0x4c]
  421eb9:	add    ecx,edi
  421ebb:	and    ecx,edx
  421ebd:	mov    DWORD PTR [ebp-0x4c],ecx
  421ec0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ec3:	mov    edx,DWORD PTR [ebp-0x48]
  421ec6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421ecd:	mov    DWORD PTR [ebp-0x48],ecx
  421ed0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ed3:	mov    edx,0xfa5e1524
  421ed8:	sub    edx,ecx
  421eda:	add    edx,DWORD PTR [ebp-0x44]
  421edd:	mov    DWORD PTR [ebp-0x44],edx
  421ee0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ee3:	xor    ecx,eax
  421ee5:	add    ecx,esi
  421ee7:	jne    0x421e6c
  421eed:	jmp    0x4231a7
  421ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ef5:	mov    edx,DWORD PTR [ebp-0x8]
  421ef8:	xor    ecx,eax
  421efa:	xor    edx,eax
  421efc:	sub    ecx,edx
  421efe:	sub    ecx,esi
  421f00:	xor    ecx,eax
  421f02:	mov    DWORD PTR [ebp+0x8],ecx
  421f05:	mov    ecx,DWORD PTR [ebp+0x8]
  421f08:	mov    edx,DWORD PTR [ebp-0x58]
  421f0b:	add    ecx,0x5708fa
  421f11:	imul   ecx,edx
  421f14:	mov    DWORD PTR [ebp-0x58],ecx
  421f17:	mov    ecx,DWORD PTR [ebp+0x8]
  421f1a:	mov    edx,DWORD PTR [ebp-0x54]
  421f1d:	add    ecx,0x64f898
  421f23:	or     ecx,edx
  421f25:	mov    DWORD PTR [ebp-0x54],ecx
  421f28:	mov    ecx,DWORD PTR [ebp+0x8]
  421f2b:	mov    edx,DWORD PTR [ebp-0x50]
  421f2e:	add    ecx,0x242ebc9
  421f34:	xor    ecx,edx
  421f36:	mov    DWORD PTR [ebp-0x50],ecx
  421f39:	mov    ecx,DWORD PTR [ebp+0x8]
  421f3c:	mov    edx,DWORD PTR [ebp-0x4c]
  421f3f:	jmp    0x423167
  421f44:	sbb    eax,0x95d463fb
  421f49:	aam    0x96
  421f4b:	mov    dh,0xbf
  421f4d:	cdq    
  421f4e:	push   eax
  421f4f:	inc    esi
  421f50:	jge    0x421ede
  421f52:	sub    DWORD PTR ds:0x837c91db,ebx
  421f58:	jbe    0x421fc7
  421f5a:	add    DWORD PTR [ebx+0x36dab8e2],0xffffffe5
  421f61:	xor    esp,DWORD PTR [edx]
  421f63:	jne    0x421fd1
  421f65:	imul   ecx,DWORD PTR [eax-0x2d339b1],0x5ee1cf0e
  421f6f:	jae    0x421f7b
  421f71:	and    edx,DWORD PTR [ebp-0x7cba6563]
  421f77:	adc    eax,0xa783d8e3
  421f7c:	fld    QWORD PTR [edx]
  421f7e:	pop    ecx
  421f7f:	fistp  WORD PTR [eax]
  421f81:	in     al,dx
  421f82:	lahf   
  421f83:	in     al,dx
  421f84:	out    0xf6,eax
  421f86:	push   es
  421f87:	call   0x1f542378
  421f8c:	xchg   ecx,eax
  421f8d:	mov    dh,0x5d
  421f8f:	push   ds
  421f90:	xor    ah,BYTE PTR [esi+0x4d2ebb80]
  421f96:	sbb    ah,al
  421f98:	aam    0xf
  421f9a:	xchg   esi,eax
  421f9b:	sub    eax,0x2bb5e03f
  421fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fa1:	mov    dl,0x9b
  421fa3:	test   BYTE PTR [edi],bh
  421fa5:	imul   eax,DWORD PTR [esi+0x3f243b0c],0x515e1393
  421faf:	push   esi
  421fb0:	add    dl,BYTE PTR [eax-0x5a]
  421fb3:	xchg   BYTE PTR [edx-0x1b],bl
  421fb6:	ins    BYTE PTR es:[edi],dx
  421fb7:	fwait
  421fb8:	jle    0x421fe9
  421fba:	(bad)  
  421fbb:	fcom   QWORD PTR [ebx]
  421fbd:	iret   
  421fbe:	fldcw  WORD PTR [edi]
  421fc0:	hlt    
  421fc1:	clc    
  421fc2:	or     eax,0x938721a8
  421fc7:	xchg   ebp,eax
  421fc8:	out    0xf7,al
  421fca:	sub    edi,DWORD PTR [esi+0xc]
  421fcd:	push   0x83d43c5f
  421fd2:	push   esp
  421fd3:	dec    esp
  421fd4:	mov    BYTE PTR [ecx],dl
  421fd6:	cmp    BYTE PTR [esi],dl
  421fd8:	test   eax,0xc3c7a472
  421fdd:	xchg   DWORD PTR [edx],edx
  421fdf:	and    eax,0xdab8968e
  421fe4:	adc    ch,dh
  421fe6:	or     ch,ch
  421fe8:	(bad)  
  421fe9:	jmp    0xabe4:0xc2273bd8
  421ff0:	ss cli 
  421ff2:	popf   
  421ff3:	jmp    0x4ce0:0xc83eacba
  421ffa:	out    0x82,al
  421ffc:	inc    eax
  421ffd:	sbb    BYTE PTR [edx],0x46
  422000:	inc    edi
  422001:	inc    ebx
  422002:	mov    dl,0xdd
  422004:	icebp  
  422005:	sbb    BYTE PTR [ebp-0x6a],bl
  422008:	jmp    0xb229:0x6c6bdca0
  42200f:	out    0x74,al
  422011:	xor    edx,esi
  422013:	daa    
  422014:	xor    edx,DWORD PTR [ebx-0x2bb3713c]
  42201a:	sub    eax,0x6350564f
  42201f:	add    eax,0xe6495f76
  422024:	ret    
  422025:	push   ss
  422026:	mov    edi,0xfbb4185c
  42202b:	std    
  42202c:	push   esi
  42202d:	leave  
  42202e:	leave  
  42202f:	and    ch,bl
  422031:	mov    al,ds:0xe4712501
  422036:	clc    
  422037:	ja     0x4220b1
  422039:	jecxz  0x422087
  42203b:	push   ebp
  42203c:	call   0x508ba751
  422041:	(bad)  
  422042:	cs xchg ebp,eax
  422044:	jge    0x422071
  422046:	push   ss
  422047:	push   ecx
  422048:	cmp    BYTE PTR [edi+edi*8],bh
  42204b:	mov    bh,0x11
  42204d:	mov    BYTE PTR ds:0x1d19c4a3,dh
  422053:	pop    es
  422054:	pop    esp
  422055:	jecxz  0x42207d
  422057:	jmp    0x641f:0xab5b3d4c
  42205e:	mov    bl,0x47
  422060:	sub    BYTE PTR [esi+0x5c],0x9d
  422064:	push   ecx
  422065:	ss sub eax,eax
  422068:	fs mov ah,0xa9
  42206b:	lods   al,BYTE PTR ds:[esi]
  42206c:	pop    es
  42206d:	adc    eax,0xe0a65bd5
  422072:	dec    esp
  422073:	call   0xd489b1f5
  422078:	cs data16 (bad) 
  42207c:	dec    edi
  42207d:	inc    ebx
  42207e:	retf   0x33d5
  422081:	ret    
  422082:	(bad)  
  422084:	les    esi,FWORD PTR [edi]
  422086:	xchg   esp,eax
  422087:	pop    ds
  422088:	ds mov al,0x6b
  42208b:	call   0x4a9b9839
  422090:	xchg   esi,eax
  422091:	adc    eax,0xbdb754e
  422096:	in     eax,dx
  422097:	icebp  
  422098:	stos   DWORD PTR es:[edi],eax
  422099:	jp     0x422111
  42209b:	pop    edi
  42209c:	dec    esp
  42209d:	pop    esp
  42209e:	xor    dl,ah
  4220a0:	pop    ebp
  4220a1:	xor    edi,eax
  4220a3:	inc    ecx
  4220a4:	scas   eax,DWORD PTR es:[edi]
  4220a5:	push   edi
  4220a6:	jp     0x4220c5
  4220a8:	mov    eax,0x351f8745
  4220ad:	enter  0xba44,0xd7
  4220b1:	push   edi
  4220b2:	ins    DWORD PTR es:[edi],dx
  4220b3:	aas    
  4220b4:	push   edi
  4220b5:	cmc    
  4220b6:	inc    ebp
  4220b7:	xlat   BYTE PTR ds:[ebx]
  4220b8:	and    bl,bh
  4220ba:	mov    dh,0x9a
  4220bc:	cdq    
  4220bd:	add    DWORD PTR [ecx],ecx
  4220bf:	mov    eax,0xa21bbb9
  4220c4:	pop    ds
  4220c5:	mov    dl,0x32
  4220c7:	lock ret 0x1a0d
  4220cb:	xor    ebx,edx
  4220cd:	mov    ebp,0xe9153d8c
  4220d2:	retfw  
  4220d4:	jle    0x4220c0
  4220d6:	sub    DWORD PTR [eax-0x67],0xf8c997ce
  4220dd:	sbb    al,ah
  4220df:	test   al,0x63
  4220e1:	mov    ah,0x68
  4220e3:	jecxz  0x422111
  4220e5:	mov    esi,0x532fd573
  4220ea:	fs dec ebp
  4220ec:	rol    cl,1
  4220ee:	sar    BYTE PTR [ebx-0x57af2c5e],1
  4220f4:	add    al,0x25
  4220f6:	out    dx,eax
  4220f7:	and    DWORD PTR [edx-0x23],ebp
  4220fa:	add    esp,DWORD PTR [esi-0x7]
  4220fd:	pop    esp
  4220fe:	std    
  4220ff:	popf   
  422100:	into   
  422101:	jnp    0x42212f
  422103:	out    dx,eax
  422104:	pop    edi
  422105:	jb     0x422131
  422107:	pop    DWORD PTR [ebx]
  422109:	jge    0x4220c4
  42210b:	push   ebp
  42210c:	add    BYTE PTR [edi],dh
  42210e:	mov    edi,0xc54aa88d
  422113:	je     0x422170
  422115:	mov    ?,WORD PTR [esi+0x34c98d65]
  42211b:	inc    ebp
  42211c:	xchg   ebx,eax
  42211d:	cmp    al,0x13
  42211f:	xor    DWORD PTR [ebp+0x66],esi
  422122:	scas   al,BYTE PTR es:[edi]
  422123:	imul   ebx,DWORD PTR [edi+0x6],0x2d358537
  42212a:	dec    edi
  42212b:	adc    DWORD PTR [ebx+0xb],edi
  42212e:	push   ecx
  42212f:	retf   
  422130:	aam    0x35
  422132:	mov    eax,ds:0xbe1e67ef
  422137:	add    al,BYTE PTR [edi-0x1a395adf]
  42213d:	pop    eax
  42213e:	jnp    0x422159
  422140:	imul   ebx,DWORD PTR [esi+edi*4+0x18b59752],0xfffffff1
  422148:	pop    ds
  422149:	mov    WORD PTR [eax],ss
  42214b:	scas   al,BYTE PTR es:[edi]
  42214c:	pop    ebx
  42214d:	(bad)  
  42214e:	jne    0x422158
  422150:	(bad)  
  422151:	shl    BYTE PTR [eax+ecx*1+0x77],1
  422155:	popf   
  422156:	retf   0xa79
  422159:	lahf   
  42215a:	je     0x422118
  42215c:	(bad)  
  42215d:	mov    DWORD PTR [ebx+0x79a88892],0x6af14de0
  422167:	jae    0x4221a8
  422169:	sub    ebp,DWORD PTR [edi+ecx*2-0x3f]
  42216d:	pop    ss
  42216e:	faddp  st(5),st
  422170:	jmp    0xa45b:0x7bebdcb2
  422177:	xchg   ebp,eax
  422178:	sti    
  422179:	dec    eax
  42217a:	jb     0x42210a
  42217c:	xor    edi,ebx
  42217e:	fstp   DWORD PTR [ebp-0x47]
  422181:	and    DWORD PTR [esi+ebp*1+0x45bbce78],0x6275f50f
  42218c:	xchg   ebp,eax
  42218d:	pop    DWORD PTR [ebp-0x32]
  422190:	fcom   DWORD PTR [ebx+0x7c65cefa]
  422196:	fs cwde 
  422198:	fidiv  WORD PTR [ebx+0xd2d478b]
  42219e:	pop    ecx
  42219f:	mov    al,0xc4
  4221a1:	lds    ebp,FWORD PTR [edi+0x7ab869aa]
  4221a7:	pop    ebp
  4221a8:	adc    eax,0x80670f48
  4221ad:	adc    BYTE PTR [ecx+0x5cd4a58c],0x4b
  4221b4:	sbb    BYTE PTR [eax-0x53],cl
  4221b7:	(bad)  
  4221b8:	fs push edx
  4221ba:	sbb    esi,DWORD PTR ds:0x6ef5494f
  4221c0:	jp     0x422203
  4221c2:	aad    0xf2
  4221c4:	retf   
  4221c5:	retf   
  4221c6:	dec    eax
  4221c7:	xchg   ecx,eax
  4221c8:	call   0xf0bcc0a3
  4221cd:	pop    ecx
  4221ce:	cld    
  4221cf:	inc    ebp
  4221d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221d1:	or     eax,0x27350141
  4221d6:	push   edi
  4221d7:	or     DWORD PTR [ecx+0x7e],0xffffff99
  4221db:	mov    esi,0xe6a7db58
  4221e0:	and    eax,0x51137ca0
  4221e5:	sbb    DWORD PTR [edx],esi
  4221e7:	pop    ss
  4221e8:	test   al,0x1c
  4221ea:	inc    esi
  4221eb:	mov    ecx,0x6787400b
  4221f0:	jb     0x4221dc
  4221f2:	je     0x422240
  4221f4:	ror    BYTE PTR [edx-0x54],0x75
  4221f8:	jmp    0x4221b2
  4221fa:	mov    dh,0x0
  4221fc:	sti    
  4221fd:	and    ecx,DWORD PTR [ecx+0x4339e071]
  422203:	push   ecx
  422204:	dec    esi
  422205:	push   edx
  422207:	fisttp WORD PTR [esi+eax*2-0x71dfad2e]
  42220e:	(bad)  [ebp-0x8c5272d]
  422214:	or     DWORD PTR [edi-0x3bb3c052],0x35
  42221b:	pop    ss
  42221c:	aam    0xcd
  42221e:	xchg   ebx,eax
  42221f:	xchg   BYTE PTR fs:[edx],dl
  422222:	lds    ebp,FWORD PTR [ebp+0x72]
  422225:	mov    ds:0x2299b1b,eax
  42222a:	(bad)  
  42222b:	aas    
  42222c:	ss push si
  42222f:	fistp  DWORD PTR [ebx]
  422231:	dec    ebp
  422232:	ds mov esp,0x4420ca9f
  422238:	(bad)  
  422239:	rcr    BYTE PTR [edi-0x12],cl
  42223c:	and    edx,DWORD PTR [esi-0x43]
  42223f:	pop    ebp
  422240:	push   esp
  422241:	and    al,0x78
  422243:	(bad)  
  422244:	shr    BYTE PTR [eax],0x30
  422247:	mov    DWORD PTR [edi-0x604d6111],esi
  42224d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42224e:	mov    esi,0x10f267ef
  422253:	sbb    DWORD PTR [eax+esi*4],ebp
  422256:	rol    DWORD PTR [ebx-0x71f4bd8b],1
  42225c:	les    edx,FWORD PTR [edx+0x71]
  42225f:	xor    BYTE PTR [ebx+0x255fd362],0x66
  422266:	mov    ecx,0xa2c43e73
  42226b:	imul   esp,DWORD PTR [ecx-0x3a89aef3],0x24
  422272:	les    esp,FWORD PTR [edx]
  422274:	add    dl,BYTE PTR [edi]
  422276:	push   ecx
  422277:	in     al,0xe3
  422279:	jp     0x42223c
  42227b:	inc    edx
  42227c:	dec    esp
  42227d:	das    
  42227e:	pushf  
  42227f:	arpl   WORD PTR [edi+0x27],cx
  422282:	jle    0x422283
  422284:	pop    ebx
  422285:	pop    esi
  422286:	jb     0x422219
  422288:	cwde   
  422289:	sbb    dh,BYTE PTR [esi]
  42228b:	js     0x42223f
  42228d:	ins    BYTE PTR es:[edi],dx
  42228e:	jg     0x422236
  422290:	icebp  
  422291:	pop    ds
  422292:	dec    edi
  422293:	sbb    esi,esp
  422295:	pusha  
  422296:	jbe    0x422245
  422298:	stos   DWORD PTR es:[edi],eax
  422299:	mov    edi,0x99890fb
  42229e:	retf   
  42229f:	xor    BYTE PTR [esi],cl
  4222a1:	xor    edx,esp
  4222a3:	fwait
  4222a4:	dec    eax
  4222a5:	mov    DWORD PTR [eax],esi
  4222a7:	push   ds
  4222a8:	stos   DWORD PTR es:[edi],eax
  4222a9:	mov    ah,0x15
  4222ab:	aas    
  4222ac:	ja     0x422247
  4222ae:	pop    eax
  4222af:	test   BYTE PTR ds:0x18a6420b,al
  4222b5:	pusha  
  4222b6:	fsubr  DWORD PTR [ecx+0x6f7a31c]
  4222bc:	dec    esi
  4222bd:	ins    DWORD PTR es:[edi],dx
  4222be:	cdq    
  4222bf:	and    BYTE PTR [edi-0x62],0x7a
  4222c3:	xchg   ebp,eax
  4222c4:	std    
  4222c5:	mov    BYTE PTR [eax+0x2f344da4],bl
  4222cb:	in     eax,0xe8
  4222cd:	addr16 in al,dx
  4222cf:	sahf   
  4222d0:	push   edi
  4222d1:	push   edx
  4222d2:	jmp    0xc2a428fb
  4222d7:	mov    al,0x2b
  4222d9:	sbb    al,0x97
  4222db:	in     eax,0xab
  4222dd:	pop    ecx
  4222de:	push   0xe118fd8f
  4222e3:	xchg   edx,eax
  4222e4:	xchg   DWORD PTR [ecx+0x67f9c3b6],edi
  4222ea:	pop    esi
  4222eb:	mov    cl,0x15
  4222ed:	test   BYTE PTR [esi+0x7d],0x98
  4222f1:	mov    bl,0xb2
  4222f3:	xor    BYTE PTR [ecx],0xa7
  4222f6:	dec    ebp
  4222f7:	push   ebp
  4222f8:	xlat   BYTE PTR ds:[ebx]
  4222f9:	pop    ecx
  4222fa:	xchg   edi,eax
  4222fb:	bound  ebx,QWORD PTR [ebp+0x136a0e36]
  422301:	(bad)  
  422303:	push   edx
  422304:	dec    edx
  422305:	inc    edx
  422306:	cmp    dh,BYTE PTR [ecx-0x437302a0]
  42230c:	or     BYTE PTR [esi+0x1cf11721],cl
  422312:	sahf   
  422313:	and    ebx,eax
  422315:	aaa    
  422316:	inc    ecx
  422317:	stc    
  422318:	fistp  DWORD PTR [ecx+0x192d748f]
  42231e:	mov    edi,0x99ae2303
  422323:	stc    
  422324:	scas   eax,DWORD PTR es:[edi]
  422325:	jne    0x422341
  422327:	xchg   esp,eax
  422328:	bound  edx,QWORD PTR [edi-0x13]
  42232b:	and    esi,DWORD PTR [edx+0x2a]
  42232e:	data16 jb 0x422392
  422331:	and    al,0x30
  422333:	push   ss
  422334:	xchg   ebx,eax
  422335:	push   es
  422336:	push   es
  422337:	imul   esi,DWORD PTR [edi],0x7475b88a
  42233d:	push   eax
  42233e:	test   BYTE PTR [ebx+esi*4-0x1e05d164],0x11
  422346:	xor    BYTE PTR [ecx+0x30],bh
  422349:	adc    dl,BYTE PTR [ebp-0x390bfd90]
  42234f:	sub    cl,BYTE PTR [esi-0x3a]
  422352:	xchg   esp,eax
  422353:	sub    al,0xfa
  422355:	add    al,BYTE PTR [esi+0x19016032]
  42235b:	xchg   edx,eax
  42235c:	in     eax,dx
  42235d:	dec    ebx
  42235e:	pcmpeqw mm5,mm3
  422361:	cwde   
  422362:	xchg   edi,eax
  422363:	push   ss
  422364:	adc    DWORD PTR [bp+si],0x59
  422368:	mov    bh,0x4a
  42236a:	pop    edx
  42236b:	mov    DWORD PTR [ecx],ebp
  42236d:	mov    dh,0x61
  42236f:	stos   DWORD PTR es:[edi],eax
  422370:	pop    esp
  422371:	or     edi,DWORD PTR [ecx+0x7230cb3d]
  422377:	popf   
  422378:	or     DWORD PTR [ebx],esi
  42237a:	mov    ebp,0x925db25d
  42237f:	push   ebx
  422380:	jl     0x4223be
  422382:	add    BYTE PTR fs:[ecx],bl
  422385:	fwait
  422386:	mov    eax,ds:0x96357a36
  42238b:	(bad)  
  42238c:	in     al,dx
  42238d:	gs dec eax
  42238f:	add    DWORD PTR [edx-0x2bfe39c3],eax
  422395:	add    al,0x66
  422397:	clc    
  422398:	fidivr WORD PTR [ebx+edi*1+0x4e1c2008]
  42239f:	push   edi
  4223a0:	js     0x42236c
  4223a2:	jmp    FWORD PTR [edx+0x3c]
  4223a5:	and    eax,0x67aa6f6b
  4223aa:	cmp    al,0xf0
  4223ac:	mov    dl,0x5f
  4223ae:	jecxz  0x4223ac
  4223b0:	push   es
  4223b1:	in     al,dx
  4223b2:	dec    edx
  4223b3:	cmp    DWORD PTR [edx],esp
  4223b5:	sahf   
  4223b6:	shl    DWORD PTR [ebx-0x61],cl
  4223b9:	adc    bh,BYTE PTR [bp+di+0x48b8]
  4223be:	popa   
  4223bf:	data16 sbb ah,BYTE PTR [ecx-0x6]
  4223c3:	outs   dx,DWORD PTR ds:[esi]
  4223c4:	sti    
  4223c5:	inc    ebp
  4223c6:	dec    edx
  4223c7:	pop    ds
  4223c8:	push   ebx
  4223c9:	sub    BYTE PTR [esi-0x4],0x13
  4223cd:	pcmpeqw mm7,mm1
  4223d0:	xchg   esp,eax
  4223d1:	jne    0x422388
  4223d3:	sbb    BYTE PTR [ebp+0x5a],al
  4223d6:	pop    edx
  4223d7:	xchg   DWORD PTR [edx+0x64],ebx
  4223da:	ret    0xbe58
  4223dd:	cmp    eax,0x8a08f477
  4223e2:	in     eax,dx
  4223e3:	cwde   
  4223e4:	mov    WORD PTR [ebp+0x67],?
  4223e7:	jp     0x42240e
  4223e9:	adc    eax,0x91fed6f7
  4223ee:	ror    edi,0x2e
  4223f1:	cli    
  4223f2:	sbb    eax,0xfd24f801
  4223f7:	pop    es
  4223f8:	test   eax,0xa416e4e1
  4223fd:	out    0x12,eax
  4223ff:	repnz lahf 
  422401:	ds cs ins BYTE PTR es:[edi],dx
  422404:	(bad)  
  422405:	in     eax,dx
  422406:	add    cl,BYTE PTR [ebx+0x505d12ff]
  42240c:	retf   
  42240d:	clc    
  42240e:	fwait
  42240f:	xchg   ebx,eax
  422410:	retf   
  422411:	loop   0x422407
  422413:	aad    0xbb
  422415:	cmp    BYTE PTR [ebx],bl
  422417:	ret    0x9c5
  42241a:	jae    0x422480
  42241c:	xchg   ebp,eax
  42241d:	(bad)  
  42241e:	arpl   si,ax
  422420:	iret   
  422421:	and    DWORD PTR [ebx],0x8f55b3c0
  422427:	retf   
  422428:	sub    eax,0x83653678
  42242d:	fcmovnb st,st(0)
  42242f:	pop    esp
  422430:	retf   0x1994
  422433:	lods   eax,DWORD PTR ds:[esi]
  422434:	fmulp  st(6),st
  422436:	cmp    al,0xc2
  422438:	cmp    DWORD PTR [ebx],eax
  42243a:	dec    eax
  42243b:	ja     0x422496
  42243d:	mov    bl,0x6e
  42243f:	mov    dl,0x74
  422441:	jl     0x422445
  422443:	jg     0x422462
  422445:	stos   DWORD PTR es:[edi],eax
  422446:	xor    BYTE PTR [edx-0x3a],dl
  422449:	in     eax,dx
  42244a:	icebp  
  42244b:	push   ebx
  42244c:	sub    al,0x9e
  42244e:	mov    edi,0x2b5d379d
  422453:	mov    edi,0x1266da6a
  422458:	cs cmp edx,ecx
  42245b:	jge    0x42243f
  42245d:	aaa    
  42245e:	jo     0x4224c1
  422460:	ret    
  422461:	inc    edx
  422462:	mov    eax,0xfba806e6
  422467:	ja     0x422470
  422469:	(bad)  
  42246a:	in     al,0xba
  42246c:	mov    DWORD PTR [ebp+0x3f],edx
  42246f:	xchg   esp,eax
  422470:	adc    BYTE PTR [ebp+eiz*2-0x2b],cl
  422474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422475:	ins    DWORD PTR es:[edi],dx
  422476:	mov    esp,0xcbe4d28c
  42247b:	mov    ch,0xb2
  42247d:	pop    esi
  42247e:	xor    eax,0xe9f78ed3
  422483:	inc    ebp
  422484:	lods   al,BYTE PTR ds:[esi]
  422485:	stos   BYTE PTR es:[edi],al
  422486:	loopne 0x422489
  422488:	sbb    al,0x22
  42248a:	jb     0x4224c4
  42248c:	cmp    dh,0x95
  42248f:	pop    ecx
  422490:	retf   0xdb22
  422493:	mov    ah,0x41
  422495:	rol    BYTE PTR [edi],0x7e
  422498:	es cld 
  42249a:	les    esp,FWORD PTR [eax]
  42249c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249d:	lock daa 
  42249f:	aas    
  4224a0:	into   
  4224a1:	mov    dl,BYTE PTR ds:[ebp-0x3dc83d57]
  4224a8:	jno    0x42248e
  4224aa:	jnp    0x42250a
  4224ac:	push   ecx
  4224ad:	cmp    BYTE PTR [eax-0x77],ch
  4224b0:	outs   dx,DWORD PTR ds:[esi]
  4224b1:	sub    al,0xf
  4224b3:	stc    
  4224b4:	in     eax,dx
  4224b5:	xchg   ebx,eax
  4224b6:	push   0x8e56f669
  4224bb:	add    cl,dl
  4224bd:	inc    edi
  4224be:	jp     0x422510
  4224c0:	push   cs
  4224c1:	scas   eax,DWORD PTR es:[edi]
  4224c2:	adc    bh,al
  4224c4:	(bad)  
  4224c5:	mov    esi,0x511c8ab6
  4224ca:	push   es
  4224cb:	iret   
  4224cc:	add    DWORD PTR [ebx],esi
  4224ce:	dec    ebp
  4224cf:	mov    esi,0x8f6bb0ef
  4224d4:	inc    eax
  4224d5:	clc    
  4224d6:	shl    BYTE PTR [ecx+0x2c6637a8],0xa2
  4224dd:	out    dx,al
  4224de:	inc    ebp
  4224df:	ins    DWORD PTR es:[edi],dx
  4224e0:	dec    edx
  4224e1:	adc    DWORD PTR [ebx+0x1b],esp
  4224e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e5:	inc    ebp
  4224e6:	mov    dh,0xb7
  4224e8:	mov    edi,0x9d8dd298
  4224ed:	fwait
  4224ee:	dec    edx
  4224ef:	mov    dl,BYTE PTR ds:0x543ebccb
  4224f5:	fs pop ds
  4224f7:	or     eax,0x7816115d
  4224fc:	ss test al,0xc4
  4224ff:	hlt    
  422500:	jle    0x422563
  422502:	gs stos DWORD PTR es:[edi],eax
  422504:	xchg   BYTE PTR ds:0xf080b260,dh
  42250a:	add    eax,0x74a98a96
  42250f:	mov    BYTE PTR [esi-0x79e0e7c9],dh
  422515:	pop    ds
  422516:	mov    cl,0xbf
  422518:	xchg   DWORD PTR [edx+ebp*2+0x19],ebp
  42251c:	cdq    
  42251d:	mov    ds:0xd49e2704,eax
  422522:	xor    BYTE PTR [edi+0x28],bl
  422525:	rcl    ah,1
  422527:	retf   
  422528:	es inc esp
  42252a:	call   0x25f:0xce080e99
  422531:	adc    al,0xd3
  422533:	sbb    ebx,ebx
  422535:	dec    bx
  422537:	fiadd  DWORD PTR [edx+0x6709ebe7]
  42253d:	repnz pop ecx
  42253f:	mov    bh,0x10
  422541:	add    DWORD PTR [edi-0x610e5197],ebp
  422547:	nop
  422548:	xchg   ecx,eax
  422549:	cmp    DWORD PTR [esi+0x35],ebp
  42254c:	out    0x1,eax
  42254e:	push   edi
  42254f:	push   eax
  422550:	fmul   QWORD PTR [edx]
  422552:	(bad)  
  422553:	jnp    0x422599
  422555:	cwde   
  422556:	(bad)  
  422557:	jmp    0x4224f1
  422559:	pop    ds
  42255a:	add    BYTE PTR [ecx+edi*1],0x99
  42255e:	(bad)  
  42255f:	inc    bl
  422561:	rcl    BYTE PTR cs:[ecx],1
  422564:	ins    BYTE PTR es:[edi],dx
  422565:	dec    edx
  422566:	lods   eax,DWORD PTR ds:[esi]
  422567:	pop    ds
  422568:	sbb    DWORD PTR [esi],edi
  42256a:	ret    
  42256b:	mov    dl,0x1d
  42256d:	fxch   st(0)
  42256f:	mov    al,ds:0xea64f6b0
  422574:	(bad)
  422577:	inc    esi
  422578:	mov    cl,0x75
  42257a:	scas   eax,DWORD PTR es:[edi]
  42257b:	mov    BYTE PTR [eax+0x2d],bl
  42257e:	dec    esi
  42257f:	cmp    eax,0xcda19ed0
  422584:	xchg   ebx,eax
  422585:	popa   
  422586:	xchg   ecx,eax
  422587:	cs test eax,0x29453419
  42258d:	ja     0x422518
  42258f:	adc    esi,ebx
  422591:	scas   eax,DWORD PTR es:[edi]
  422592:	inc    ebp
  422593:	pop    ebp
  422594:	fistp  QWORD PTR [esp+esi*8+0x34]
  422598:	push   0x361ff5db
  42259d:	and    dl,BYTE PTR [edx]
  42259f:	xchg   ebp,eax
  4225a0:	sub    DWORD PTR [edi],esi
  4225a2:	xchg   esi,eax
  4225a3:	shr    BYTE PTR [ecx-0x18917419],1
  4225a9:	cmp    edi,edi
  4225ab:	xchg   ebx,eax
  4225ac:	imul   edi,DWORD PTR [ecx+0xb],0xe050f357
  4225b3:	and    al,BYTE PTR [edi-0x65]
  4225b6:	clc    
  4225b7:	sub    eax,0x90e2eb88
  4225bc:	ret    
  4225bd:	and    al,0x3c
  4225bf:	push   cs
  4225c0:	sbb    DWORD PTR [edx-0x4aa4e1f4],0xfe67f71c
  4225ca:	ficomp WORD PTR [ebx+0x20cb6472]
  4225d0:	dec    eax
  4225d1:	test   edi,esp
  4225d3:	dec    ebp
  4225d4:	sub    BYTE PTR [ebx+eiz*8+0x4e0e7a9c],dh
  4225db:	icebp  
  4225dc:	sub    eax,ecx
  4225de:	push   cs
  4225df:	dec    ebx
  4225e0:	sub    esi,DWORD PTR [ecx+0xef99682]
  4225e6:	(bad)  
  4225e9:	shr    BYTE PTR [eax+0x4aeb3e70],1
  4225ef:	add    edx,esi
  4225f1:	xchg   edi,eax
  4225f2:	add    BYTE PTR [esi+0x31],dh
  4225f5:	dec    esi
  4225f6:	or     esi,DWORD PTR [edi+0x26]
  4225f9:	loope  0x4225c2
  4225fb:	adc    DWORD PTR [ebx-0x50],ebx
  4225fe:	dec    edx
  4225ff:	mov    bh,0x5a
  422601:	mov    DWORD PTR [ebp+0x71],0xab94d2ec
  422608:	icebp  
  422609:	adc    DWORD PTR [esi],edx
  42260b:	dec    BYTE PTR [ecx-0x6a]
  42260e:	or     edx,esp
  422610:	std    
  422611:	retf   
  422612:	punpcklbw mm6,mm5
  422615:	mov    al,ds:0xe1abbaad
  42261a:	sahf   
  42261b:	dec    edi
  42261c:	mov    ebp,0x13f13aeb
  422621:	(bad)  
  422622:	inc    eax
  422623:	mov    esi,0xa269ddce
  422628:	mov    ds:0x2773de43,eax
  42262d:	outs   dx,BYTE PTR ds:[esi]
  42262e:	rol    esp,1
  422630:	jl     0x422654
  422632:	in     eax,0x36
  422634:	mov    ds:0xc9d4e63e,al
  422639:	fisttp QWORD PTR [esi-0x28845145]
  42263f:	scas   eax,DWORD PTR es:[edi]
  422640:	sbb    al,0xe5
  422642:	loop   0x422696
  422644:	dec    edi
  422645:	ret    0xb85f
  422648:	mov    esp,0xa2a1b1b8
  42264d:	or     edi,DWORD PTR gs:[ecx]
  422650:	loope  0x4226c6
  422652:	outs   dx,DWORD PTR ds:[esi]
  422653:	dec    ecx
  422654:	aas    
  422655:	push   ss
  422656:	jp     0x4226b1
  422658:	or     DWORD PTR [ecx],ebp
  42265a:	push   0xffffff9b
  42265c:	cli    
  42265d:	shr    ch,1
  42265f:	and    cl,BYTE PTR [ebx]
  422661:	mov    edx,0x8bed3bd3
  422666:	sbb    al,0x99
  422668:	div    DWORD PTR [ecx]
  42266a:	push   ebp
  42266b:	xchg   ebp,eax
  42266c:	pop    edi
  42266d:	adc    DWORD PTR [esi-0x60],edx
  422670:	mov    dl,0x94
  422672:	sbb    al,0xa1
  422674:	adc    dh,BYTE PTR [edi+0x48329988]
  42267a:	xlat   BYTE PTR ds:[ebx]
  42267b:	xchg   ebp,eax
  42267c:	sub    eax,0x5808b46e
  422681:	cwde   
  422682:	jo     0x422624
  422684:	test   eax,0x3d76e946
  422689:	loop   0x4226df
  42268b:	leave  
  42268c:	jae    0x4226b2
  42268e:	add    bl,BYTE PTR ds:0xe76add32
  422694:	mov    edx,0x2b572c50
  422699:	leave  
  42269a:	push   0x73336230
  42269f:	push   eax
  4226a0:	xor    al,0xae
  4226a2:	std    
  4226a3:	xor    BYTE PTR [eax+0x1c22deb4],0x5d
  4226aa:	jmp    0x7d30df34
  4226af:	mov    edx,gs
  4226b1:	sub    eax,ebp
  4226b3:	out    0xfb,eax
  4226b5:	mov    ds:0x33247b69,eax
  4226ba:	iret   
  4226bb:	js     0x42268a
  4226bd:	pushf  
  4226be:	mov    DWORD PTR [ebp+0x76],eax
  4226c1:	push   ebx
  4226c2:	stc    
  4226c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c4:	es xor ch,dh
  4226c7:	cmp    ebx,DWORD PTR ds:0xaf463ec2
  4226cd:	or     al,0x47
  4226cf:	cmp    ch,BYTE PTR [esi+0x5e00a9af]
  4226d5:	dec    eax
  4226d6:	into   
  4226d7:	je     0x422704
  4226d9:	or     ah,BYTE PTR [ecx+0x37fde537]
  4226df:	fnstsw WORD PTR [eax+0x3b]
  4226e2:	sub    eax,0x632675b7
  4226e7:	jge    0x4226f1
  4226e9:	shl    DWORD PTR [eax],0xfe
  4226ec:	adc    ch,bl
  4226ee:	add    edi,0xffffffdf
  4226f1:	ins    DWORD PTR es:[edi],dx
  4226f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f4:	aad    0x80
  4226f6:	mov    DWORD PTR [ecx],ecx
  4226f8:	dec    eax
  4226f9:	mov    ecx,0xdb3eff2d
  4226fe:	lods   al,BYTE PTR ds:[esi]
  4226ff:	xchg   ebp,edx
  422701:	add    DWORD PTR ds:0x42b16c9d,ecx
  422707:	shl    ecx,1
  422709:	retf   
  42270a:	sar    edx,0x9b
  42270d:	fsubp  st(1),st
  42270f:	xor    DWORD PTR [ecx],0xffffffa2
  422712:	hlt    
  422713:	add    edx,DWORD PTR [eax-0x64]
  422716:	je     0x4226cd
  422718:	into   
  422719:	and    BYTE PTR [esi+edx*4-0x47aeceb7],al
  422720:	inc    edi
  422721:	or     eax,0x3b8419e9
  422726:	pushf  
  422727:	dec    eax
  422728:	je     0x4226c0
  42272a:	fsub   DWORD PTR [edi-0xecbd71b]
  422730:	inc    dh
  422732:	pop    edi
  422733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422734:	adc    BYTE PTR [ebp+0x5692b3bf],dl
  42273a:	loop   0x422793
  42273c:	add    eax,0x34f8651a
  422741:	xor    BYTE PTR [esi+0x3f],bh
  422744:	cli    
  422745:	daa    
  422746:	in     al,dx
  422747:	pop    ebp
  422748:	mov    esp,0xbf7c5bd0
  42274d:	out    0x60,eax
  42274f:	or     al,0x89
  422751:	cmp    al,0x5f
  422753:	outs   dx,DWORD PTR ds:[esi]
  422754:	pop    ebx
  422755:	xor    BYTE PTR [ebp-0x222dd82],cl
  42275b:	ins    DWORD PTR es:[edi],dx
  42275c:	sub    eax,0x4075f9a7
  422761:	xchg   BYTE PTR [ebp-0x55],ch
  422764:	fst    QWORD PTR [eax]
  422766:	jne    0x422749
  422768:	add    edx,edx
  42276a:	js     0x422785
  42276c:	inc    edi
  42276d:	jne    0x4226fa
  42276f:	fnsave [edi+0x26]
  422772:	push   ds
  422773:	ja     0x422708
  422775:	dec    ebp
  422776:	sbb    al,0x33
  422778:	sub    dl,BYTE PTR [edi+esi*2]
  42277b:	inc    esi
  42277c:	shl    BYTE PTR [edx+0x3a],cl
  42277f:	scas   eax,DWORD PTR es:[edi]
  422780:	sbb    eax,0xf144079d
  422785:	or     BYTE PTR [eax+0x63],bh
  422788:	rol    ebx,1
  42278a:	xchg   DWORD PTR [edi-0x49],eax
  42278d:	mov    edi,0xd159234d
  422792:	inc    ebp
  422793:	retf   
  422794:	xchg   edi,eax
  422795:	jecxz  0x422802
  422797:	faddp  st(2),st
  422799:	jnp    0x4227d2
  42279b:	fisubr WORD PTR [ecx+0x1022956d]
  4227a1:	push   edx
  4227a2:	sbb    ah,BYTE PTR [edi+0x4b]
  4227a5:	mov    edi,0xa944e31b
  4227aa:	sbb    eax,0xe87b5c8e
  4227af:	jno    0x422782
  4227b1:	and    eax,0xecf2225e
  4227b6:	adc    eax,0x723c6c29
  4227bb:	in     eax,0xf4
  4227bd:	mov    esp,0x47e4185
  4227c2:	cmc    
  4227c3:	fwait
  4227c4:	(bad)  
  4227c5:	mov    BYTE PTR [ebp+0x6a],bh
  4227c8:	xlat   BYTE PTR ds:[ebx]
  4227c9:	test   al,0x27
  4227cb:	cmp    edx,eax
  4227cd:	add    al,0x89
  4227cf:	pushf  
  4227d0:	mov    ds:0xd5a78a37,al
  4227d5:	dec    esi
  4227d6:	mov    al,ds:0xd3a50e3d
  4227db:	jecxz  0x4227ca
  4227dd:	pop    esp
  4227de:	dec    eax
  4227df:	pop    edi
  4227e0:	aam    0x1c
  4227e2:	sub    esp,DWORD PTR [edx]
  4227e4:	push   ebx
  4227e5:	les    eax,FWORD PTR [ebx]
  4227e7:	inc    esi
  4227e8:	jbe    0x422829
  4227ea:	aad    0x9a
  4227ec:	pop    esp
  4227ed:	dec    edx
  4227ee:	std    
  4227ef:	sbb    edx,ecx
  4227f1:	mov    edi,0x7f4caf45
  4227f6:	xchg   ebx,eax
  4227f7:	or     esp,DWORD PTR ds:[edi+0x51]
  4227fb:	popa   
  4227fc:	and    ebp,ebp
  4227fe:	or     esp,DWORD PTR [eax+esi*1+0x45]
  422802:	adc    al,0x1e
  422804:	std    
  422805:	sar    DWORD PTR [ebx+0x2c],cl
  422808:	push   ds
  422809:	clc    
  42280a:	and    al,0xd1
  42280c:	test   BYTE PTR [edi],ah
  42280e:	sub    edx,DWORD PTR [edi+0x0]
  422811:	push   ds
  422812:	(bad)  
  422813:	mov    al,0xaa
  422815:	imul   edi,ebx,0x3eea4cf1
  42281b:	neg    DWORD PTR [edi+0x58b6a4ce]
  422821:	loope  0x422844
  422823:	pop    edx
  422824:	cwde   
  422825:	jle    0x42282c
  422827:	add    BYTE PTR [eax],cl
  422829:	fwait
  42282a:	sub    BYTE PTR [edx-0xc],ah
  42282d:	mov    al,0x66
  42282f:	out    0x41,al
  422831:	aad    0x9
  422833:	fs shl ah,1
  422836:	sub    ah,BYTE PTR [edx]
  422838:	xchg   edx,eax
  422839:	pusha  
  42283a:	mov    ds:0x6758082f,al
  42283f:	dec    esp
  422840:	les    edi,FWORD PTR [ebp-0x61]
  422843:	pop    edx
  422844:	mov    ecx,0x1edac73b
  422849:	adc    ebx,esp
  42284b:	fcomp  DWORD PTR [ecx+0x34]
  42284e:	xchg   ebx,eax
  42284f:	lods   al,BYTE PTR ds:[esi]
  422850:	adc    DWORD PTR [eax],edx
  422852:	xor    DWORD PTR [ebx],ecx
  422854:	mov    ?,WORD PTR [edi-0x7cd70c0d]
  42285a:	sbb    al,0xbe
  42285c:	pusha  
  42285d:	loopne 0x4228a0
  42285f:	daa    
  422860:	nop
  422861:	repnz ficomp DWORD PTR [ebp+ebx*1-0x787eefd5]
  422869:	cmc    
  42286a:	sub    BYTE PTR [edi-0x2f718067],dh
  422870:	sub    BYTE PTR [edx-0x1753ce22],cl
  422876:	adc    eax,0x108abcb9
  42287b:	fild   QWORD PTR [edx]
  42287d:	push   ecx
  42287e:	mov    eax,ds:0x169a0a83
  422883:	pop    ss
  422884:	je     0x422880
  422886:	stos   DWORD PTR es:[edi],eax
  422887:	lahf   
  422888:	adc    ebx,edx
  42288a:	cdq    
  42288b:	test   edi,ebx
  42288d:	call   FWORD PTR [esi]
  42288f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422891:	or     ecx,DWORD PTR [esi+ebp*2-0x6e]
  422895:	jg     0x422841
  422897:	arpl   bp,dx
  422899:	mov    al,ds:0xfb421267
  42289e:	cmp    cl,bh
  4228a0:	mov    cl,0x65
  4228a2:	(bad)  
  4228a3:	shl    DWORD PTR [ebp-0x38523e78],1
  4228a9:	out    0x6d,eax
  4228ab:	ret    
  4228ac:	jge    0x422841
  4228ae:	inc    esi
  4228af:	int    0x3e
  4228b1:	xlat   BYTE PTR ds:[ebx]
  4228b2:	(bad)  [eax]
  4228b4:	push   ebx
  4228b5:	push   esi
  4228b6:	inc    eax
  4228b7:	enter  0xbb22,0x9e
  4228bb:	rcr    esi,1
  4228bd:	out    dx,eax
  4228be:	mov    dh,0x43
  4228c0:	sbb    ecx,DWORD PTR [eax]
  4228c2:	sar    dh,1
  4228c4:	lea    edi,ds:0x8e54f0fd
  4228ca:	dec    ecx
  4228cb:	leave  
  4228cc:	sub    dl,cl
  4228ce:	sbb    BYTE PTR [eax-0x44],dl
  4228d1:	(bad)  
  4228d2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d4:	xor    bl,BYTE PTR [ecx-0x71ba187f]
  4228da:	cs push cs
  4228dc:	test   DWORD PTR [esp+esi*1],ebp
  4228df:	and    al,BYTE PTR [ecx-0x7a]
  4228e2:	or     BYTE PTR [ecx],bl
  4228e4:	jnp    0x4228be
  4228e6:	sahf   
  4228e7:	ds mov ch,0xf7
  4228ea:	aas    
  4228eb:	and    eax,0xf9f57e2d
  4228f0:	scas   eax,DWORD PTR es:[edi]
  4228f1:	jmp    0xfcfb7008
  4228f6:	fcomi  st,st(2)
  4228f8:	scas   al,BYTE PTR es:[edi]
  4228f9:	enter  0x5316,0x37
  4228fd:	push   cs
  4228fe:	jb     0x4228d5
  422900:	adc    bh,bl
  422902:	push   0x6afd9277
  422907:	aad    0xd2
  422909:	jns    0x422907
  42290b:	adc    al,0x3a
  42290d:	out    0x68,eax
  42290f:	scas   al,BYTE PTR es:[edi]
  422910:	(bad)  
  422911:	hlt    
  422912:	mov    dl,0xbd
  422914:	ficom  DWORD PTR [esi+0x4abdd6f7]
  42291a:	data16 xor BYTE PTR [eax+0x33fcbb3],dl
  422921:	pushf  
  422922:	mov    ds:0xe187e1c3,al
  422927:	cs push bx
  42292a:	cmp    BYTE PTR [edx+0x36],cl
  42292d:	push   0xffffffda
  42292f:	and    cl,bh
  422931:	mov    WORD PTR [ecx],ds
  422933:	jb     0x4228fe
  422935:	in     al,dx
  422936:	mov    DWORD PTR [ebx-0xb978b42],esi
  42293c:	xor    al,0xa8
  42293e:	dec    ecx
  42293f:	inc    eax
  422940:	mov    edx,0x1c3259e6
  422945:	ret    
  422946:	cmp    DWORD PTR [eax+0x5087766c],0x1
  42294d:	mov    ebx,DWORD PTR [esi+esi*1-0x2a]
  422951:	adc    bh,0x67
  422954:	push   ebp
  422955:	cmp    BYTE PTR [edx+0x53],cl
  422958:	push   0x60b88443
  42295d:	cmp    esi,DWORD PTR [edx]
  42295f:	sub    bh,BYTE PTR [ebx]
  422961:	push   esp
  422962:	cmp    esi,DWORD PTR [ebx+0x3f]
  422965:	mov    dh,0x8
  422967:	jg     0x42297f
  422969:	and    DWORD PTR [ebx-0x70],0x8cb3aa29
  422970:	jle    0x422977
  422972:	and    esi,DWORD PTR [esi]
  422974:	cmp    esi,DWORD PTR [ecx+0x3e]
  422977:	xchg   edi,eax
  422978:	imul   ecx,DWORD PTR [edx-0x5b8c3f95],0x32
  42297f:	idiv   edi
  422981:	std    
  422982:	out    dx,eax
  422983:	sub    eax,0x5ecbc812
  422988:	and    ah,dl
  42298a:	jecxz  0x422912
  42298c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42298d:	xchg   ebx,eax
  42298e:	int3   
  42298f:	mov    ecx,0xd40ce3a
  422994:	popa   
  422995:	js     0xb4eb1611
  42299b:	daa    
  42299c:	pusha  
  42299d:	loopne 0x42294e
  42299f:	dec    edx
  4229a0:	scas   al,BYTE PTR es:[edi]
  4229a1:	(bad)  
  4229a2:	and    eax,0xcdbaa489
  4229a7:	sub    cl,al
  4229a9:	mov    esp,0xbbc2b98d
  4229ae:	mov    dl,0x7d
  4229b0:	pop    eax
  4229b1:	xchg   esi,eax
  4229b2:	nop
  4229b3:	icebp  
  4229b4:	fwait
  4229b5:	(bad)  
  4229b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229b7:	xor    BYTE PTR [edi],bh
  4229b9:	sbb    eax,0x2f99b7aa
  4229be:	and    esp,esp
  4229c0:	push   ss
  4229c1:	int    0x98
  4229c3:	mov    ds:0xdfb4599c,al
  4229c8:	into   
  4229c9:	stos   DWORD PTR es:[edi],eax
  4229ca:	xor    BYTE PTR [ebp+eax*2+0xb],bh
  4229ce:	rol    ebx,0x42
  4229d1:	not    BYTE PTR [esi+0x5]
  4229d4:	or     cl,ch
  4229d6:	ds push 0xffffff83
  4229d9:	xor    DWORD PTR [edx],eax
  4229db:	arpl   WORD PTR [eax+edi*4-0x3aedab],si
  4229e2:	hlt    
  4229e3:	rcl    DWORD PTR [eax+0x685a2ad0],1
  4229e9:	push   edi
  4229ea:	jno    0x4229f7
  4229ec:	call   DWORD PTR [esi-0x34]
  4229ef:	popa   
  4229f0:	xchg   esi,eax
  4229f1:	mov    ebp,DWORD PTR [ebx+0x76]
  4229f4:	adc    eax,0xb516d92
  4229f9:	and    DWORD PTR [esi+eax*1+0x60],ebx
  4229fd:	jno    0x422a56
  4229ff:	add    edi,ecx
  422a01:	test   BYTE PTR [ebx-0x1d],ah
  422a04:	fwait
  422a05:	icebp  
  422a06:	sbb    BYTE PTR [ebx-0xc90e3f1],ah
  422a0c:	and    bl,BYTE PTR [esi+0x6e983d71]
  422a12:	mov    cl,0xf8
  422a14:	inc    esp
  422a15:	pusha  
  422a16:	pop    esp
  422a17:	fadd   QWORD PTR [ebp+0x10]
  422a1a:	push   edi
  422a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a1c:	in     al,dx
  422a1d:	ja     0x42299f
  422a1f:	mov    esp,0x4e3b5307
  422a24:	stos   DWORD PTR es:[edi],eax
  422a25:	repnz dec bh
  422a28:	add    esp,edi
  422a2a:	pusha  
  422a2b:	out    0xf0,eax
  422a2d:	iret   
  422a2e:	sbb    BYTE PTR es:[esi-0x4432bc4d],ah
  422a35:	imul   esp,DWORD PTR [edx-0x80],0xffffff9a
  422a39:	push   esi
  422a3a:	mov    esi,0x14d8f736
  422a3f:	cdq    
  422a40:	ret    
  422a41:	test   eax,0xaa5a7836
  422a46:	loopne 0x422a8b
  422a48:	bound  ebx,QWORD PTR [eax-0x2a]
  422a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a4c:	or     BYTE PTR [ebp-0x5d],al
  422a4f:	push   cs
  422a50:	cmp    eax,0xab0bb24
  422a55:	ss add bl,ah
  422a58:	mov    esp,0xdc6a3a15
  422a5d:	out    0x24,al
  422a5f:	jae    0x422a53
  422a61:	gs (bad) 
  422a63:	int    0xf9
  422a65:	arpl   WORD PTR [eax+esi*8+0x19],cx
  422a69:	lock ins BYTE PTR es:[edi],dx
  422a6b:	icebp  
  422a6c:	lods   eax,DWORD PTR ds:[esi]
  422a6d:	aaa    
  422a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6f:	pop    ss
  422a70:	retf   
  422a71:	pop    ebp
  422a72:	stc    
  422a73:	outs   dx,BYTE PTR ds:[esi]
  422a74:	sub    eax,0x2e71158b
  422a79:	icebp  
  422a7a:	inc    ebp
  422a7b:	dec    eax
  422a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a7d:	jp     0x422a0c
  422a7f:	or     edi,edi
  422a81:	out    dx,eax
  422a82:	adc    ebx,esi
  422a84:	mov    ah,0xe4
  422a86:	popa   
  422a87:	dec    esp
  422a88:	hlt    
  422a89:	sbb    BYTE PTR [eax+ecx*2-0x6d],al
  422a8d:	mov    ecx,DWORD PTR [eax]
  422a8f:	add    DWORD PTR [ecx-0x18],ebp
  422a92:	bound  ebp,QWORD PTR [esi+0x54]
  422a95:	and    ecx,esp
  422a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a98:	mov    ebp,0x4560c9db
  422a9d:	cli    
  422a9e:	pop    esi
  422a9f:	test   DWORD PTR [eax+0x29],0xba7086f8
  422aa6:	lahf   
  422aa7:	addr16 sbb al,0xb
  422aaa:	(bad)  
  422aab:	pop    ds
  422aac:	(bad)  
  422aad:	mov    ch,0x26
  422aaf:	iret   
  422ab0:	out    0x37,eax
  422ab2:	into   
  422ab3:	jp     0x422ab8
  422ab5:	add    ecx,DWORD PTR [edi+0x3c]
  422ab8:	inc    ebp
  422ab9:	test   eax,0x627fb94a
  422abe:	pop    ebp
  422abf:	and    bh,BYTE PTR [ebx+0x3ee94217]
  422ac5:	push   0xffffffe4
  422ac7:	enter  0xd438,0x70
  422acb:	call   ebp
  422acd:	xlat   BYTE PTR ds:[ebx]
  422ace:	pop    esp
  422acf:	(bad)  
  422ad0:	out    dx,al
  422ad1:	lds    esp,FWORD PTR [esi-0x3b]
  422ad4:	int3   
  422ad5:	sbb    al,0x33
  422ad7:	(bad)
  422adc:	mul    BYTE PTR [eax]
  422ade:	mov    ah,0x63
  422ae0:	fistp  QWORD PTR [edi+0x28]
  422ae3:	push   ecx
  422ae4:	push   eax
  422ae5:	fidivr DWORD PTR [eax-0x1172d419]
  422aeb:	dec    esp
  422aec:	repnz add BYTE PTR ds:0x4527f52e,al
  422af3:	push   0xe76b8803
  422af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af9:	adc    al,0xb6
  422afb:	pushf  
  422afc:	sbb    ah,ah
  422afe:	in     al,dx
  422aff:	ins    BYTE PTR es:[edi],dx
  422b00:	pop    ebx
  422b01:	cs popf 
  422b03:	and    al,0x16
  422b05:	pop    esi
  422b06:	mov    edx,0x2c4afcf9
  422b0b:	push   edx
  422b0c:	and    eax,0xcd6d2ad7
  422b11:	jl     0x422b11
  422b13:	int3   
  422b14:	mov    al,ds:0x9c039ddd
  422b19:	mov    edi,0x8af96b3e
  422b1e:	iret   
  422b1f:	test   BYTE PTR [ecx+0x609ae4af],dh
  422b25:	push   0x6852ab68
  422b2a:	clc    
  422b2b:	stc    
  422b2c:	iret   
  422b2d:	mov    esp,0x76fba21d
  422b32:	cld    
  422b33:	inc    edx
  422b34:	repz imul eax,DWORD PTR [esi-0x595b2791],0xffffffaf
  422b3c:	aas    
  422b3d:	ss push edi
  422b3f:	dec    edx
  422b40:	push   ss
  422b41:	mov    cl,0x34
  422b43:	sbb    DWORD PTR [edi],0xc0b1de87
  422b49:	xchg   ebp,eax
  422b4a:	push   esi
  422b4b:	ds inc edi
  422b4d:	sbb    DWORD PTR [ebp+0x54f59495],ebx
  422b53:	sti    
  422b54:	lock dec ebx
  422b56:	retf   0x1f84
  422b59:	pop    edx
  422b5a:	cmc    
  422b5b:	and    al,0x5d
  422b5d:	stos   DWORD PTR es:[edi],eax
  422b5e:	mov    ebp,0xb308b9c0
  422b63:	(bad)  
  422b64:	mov    esp,DWORD PTR [ebx]
  422b66:	dec    edx
  422b67:	mov    bh,0xbf
  422b69:	not    ebp
  422b6b:	dec    esi
  422b6c:	inc    ebp
  422b6d:	nop
  422b6e:	sbb    cl,dl
  422b70:	sbb    al,0x53
  422b72:	int    0x47
  422b74:	leave  
  422b75:	add    edx,eax
  422b77:	sahf   
  422b78:	out    0x7b,al
  422b7a:	cmp    bl,bh
  422b7c:	pop    ds
  422b7d:	jle    0x422b73
  422b7f:	and    edx,ecx
  422b81:	mov    esi,0xf183ff0e
  422b86:	dec    ebx
  422b87:	dec    ebx
  422b88:	and    DWORD PTR [esp+ebp*8+0x9885504],edi
  422b8f:	pushf  
  422b90:	pop    edx
  422b91:	cdq    
  422b92:	or     eax,0xac44c2d1
  422b97:	lock adc cl,BYTE PTR [edi]
  422b9a:	fs mov ch,0xb9
  422b9d:	pop    DWORD PTR [ebx+0x2c]
  422ba0:	loopne 0x422b7b
  422ba2:	fdivr  QWORD PTR [edx-0x6f9dbfc4]
  422ba8:	dec    ebp
  422ba9:	mov    dl,0x1a
  422bab:	popf   
  422bac:	enter  0xca9a,0x36
  422bb0:	adc    DWORD PTR [edi+0x3a],ebx
  422bb3:	enter  0xe01a,0xa9
  422bb7:	sub    al,0xbd
  422bb9:	cmc    
  422bba:	adc    edi,DWORD PTR [edi+0x1d]
  422bbd:	add    al,0x64
  422bbf:	jb     0x422b8c
  422bc1:	aad    0x4f
  422bc3:	shl    BYTE PTR [edx+0x7fae68db],0x65
  422bca:	xor    edx,DWORD PTR [ecx+0xe]
  422bcd:	(bad)  
  422bce:	dec    ebx
  422bcf:	sub    bl,BYTE PTR [ebp+edi*1+0x41]
  422bd3:	xor    DWORD PTR [ebp-0x44],edi
  422bd6:	adc    dl,BYTE PTR [eax+0x4d19ca1d]
  422bdc:	(bad)  
  422bdd:	push   ds
  422bde:	jb     0x422c38
  422be0:	stos   DWORD PTR es:[edi],eax
  422be1:	inc    edi
  422be2:	jnp    0x422b94
  422be4:	dec    esi
  422be5:	lods   eax,DWORD PTR ds:[esi]
  422be6:	xor    eax,0x8177c17d
  422beb:	shl    BYTE PTR [ebp+0x1473ee47],0xc9
  422bf2:	jecxz  0x422c44
  422bf4:	and    al,0xce
  422bf6:	cmp    al,0x73
  422bf8:	xchg   ebp,eax
  422bf9:	das    
  422bfa:	sub    ch,dh
  422bfc:	add    al,0xf0
  422bfe:	jno    0x422c01
  422c00:	das    
  422c01:	pop    esi
  422c02:	inc    eax
  422c03:	lods   eax,DWORD PTR ds:[esi]
  422c04:	cmp    eax,eax
  422c06:	and    DWORD PTR [ecx+0x10],esi
  422c09:	or     BYTE PTR [ecx+0xb2e024d],ah
  422c0f:	sbb    eax,ecx
  422c11:	and    BYTE PTR [esi+0xbbb3e20],dl
  422c17:	loope  0x422c25
  422c19:	mov    bh,0xa6
  422c1b:	add    DWORD PTR [eax-0x52],0x4b302987
  422c22:	pop    ss
  422c23:	nop
  422c24:	daa    
  422c25:	lgs    edi,FWORD PTR [ebp-0x6db548a2]
  422c2c:	retf   0x902d
  422c2f:	imul   esp,ecx,0xc9c25cb3
  422c35:	push   es
  422c36:	enter  0xa847,0x88
  422c3a:	xlat   BYTE PTR ds:[bx]
  422c3c:	fistp  QWORD PTR [edi]
  422c3e:	in     eax,0x60
  422c40:	or     esp,DWORD PTR [esi]
  422c42:	or     BYTE PTR [edx-0x7c],dh
  422c45:	js     0x422c58
  422c47:	mov    al,0xe1
  422c49:	mov    dl,0x55
  422c4b:	ja     0x422c92
  422c4d:	(bad)  
  422c4e:	outs   dx,BYTE PTR ds:[esi]
  422c4f:	pop    ebp
  422c50:	outs   dx,BYTE PTR ds:[esi]
  422c51:	rcl    DWORD PTR [ecx],cl
  422c53:	or     DWORD PTR [esi-0x2d62e01],ebp
  422c59:	pop    ebp
  422c5a:	icebp  
  422c5b:	cmp    DWORD PTR [edx+0x10080888],esp
  422c61:	imul   edi,DWORD PTR [ebx],0x2ad2844
  422c67:	mov    cs,WORD PTR [ecx+0x4e]
  422c6a:	mov    dl,0x12
  422c6c:	mov    dh,0x72
  422c6e:	retf   0x59c8
  422c71:	xor    al,0x2
  422c73:	jmp    0x76eb3b62
  422c78:	mov    ds:0xb28b74b0,al
  422c7d:	mov    WORD PTR [eax],fs
  422c7f:	push   ecx
  422c80:	or     DWORD PTR [edi+ecx*2-0x2b],0x4df816a7
  422c88:	pop    ds
  422c89:	cmp    bh,BYTE PTR fs:[ebp+0x3e6d9a3d]
  422c90:	loope  0x422c8e
  422c92:	repz xor cl,BYTE PTR [ebx-0x244292a9]
  422c99:	push   ecx
  422c9a:	mov    edi,0xcbde2de9
  422c9f:	xor    edi,DWORD PTR [edi]
  422ca1:	mov    al,0xb9
  422ca3:	mov    BYTE PTR [eax-0x3b2f1a50],0xa6
  422caa:	stos   BYTE PTR es:[edi],al
  422cab:	punpckldq mm1,DWORD PTR [ebx+0x3c]
  422caf:	xor    edi,edi
  422cb1:	fbstp  TBYTE PTR [ebx]
  422cb3:	into   
  422cb4:	not    DWORD PTR [ebp+0x37]
  422cb7:	scas   al,BYTE PTR es:[edi]
  422cb8:	ds int 0x96
  422cbb:	jo     0x422d1a
  422cbd:	div    DWORD PTR [ecx+0x4e]
  422cc0:	sbb    al,0x15
  422cc2:	outs   dx,DWORD PTR ds:[esi]
  422cc3:	lds    eax,FWORD PTR [ebx+0x42]
  422cc6:	inc    edi
  422cc7:	lahf   
  422cc8:	fs stos DWORD PTR es:[edi],eax
  422cca:	cld    
  422ccb:	shl    ah,0xfb
  422cce:	add    BYTE PTR [eax-0x53],ah
  422cd1:	add    eax,0x3677f089
  422cd6:	mov    esp,0x43b97ce3
  422cdb:	in     eax,0xab
  422cdd:	ficom  WORD PTR [esp+edx*8]
  422ce0:	push   ebx
  422ce1:	ror    DWORD PTR [ebx+0x7cb710d7],cl
  422ce7:	neg    BYTE PTR [esi]
  422ce9:	mov    al,ds:0xc91e2287
  422cee:	xchg   edx,eax
  422cef:	test   BYTE PTR [edi+0x5d],cl
  422cf2:	add    eax,0x495a6232
  422cf7:	xchg   edi,eax
  422cf8:	jae    0x422cee
  422cfa:	inc    ebp
  422cfb:	mov    bl,ah
  422cfd:	enter  0x30ab,0x14
  422d01:	xchg   edi,eax
  422d02:	jno    0x422d57
  422d04:	xchg   esp,eax
  422d05:	inc    ebp
  422d06:	out    0x13,eax
  422d08:	stc    
  422d09:	das    
  422d0a:	xchg   BYTE PTR [eax+0x9],bh
  422d0d:	jmp    0x422d20
  422d0f:	adc    BYTE PTR [esp+eax*1+0x291f02c7],dl
  422d16:	xor    eax,0xde980f63
  422d1b:	mov    ecx,eax
  422d1d:	into   
  422d1e:	ja     0x422d4b
  422d20:	popf   
  422d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d22:	dec    edx
  422d23:	mov    dl,0xe8
  422d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d26:	or     esi,DWORD PTR [ebx-0x73]
  422d29:	(bad)  
  422d2b:	in     eax,dx
  422d2c:	mov    dh,0x7c
  422d2e:	pop    esp
  422d2f:	adc    al,0x4
  422d31:	pop    ds
  422d32:	mov    al,0x93
  422d34:	les    ebx,FWORD PTR [esi+ebp*8+0x2fd58d34]
  422d3b:	xchg   edi,eax
  422d3c:	fwait
  422d3d:	or     BYTE PTR [edx-0x4ab29395],ch
  422d43:	retf   0x66c0
  422d46:	dec    esp
  422d47:	push   eax
  422d48:	shl    BYTE PTR [edx+0x28],1
  422d4b:	mov    dh,0xc8
  422d4d:	ins    DWORD PTR es:[edi],dx
  422d4e:	xlat   BYTE PTR ds:[ebx]
  422d4f:	rcr    DWORD PTR [ebp-0x67],0x1a
  422d53:	test   BYTE PTR [eax],0x12
  422d56:	mov    ds:0x198f46c8,al
  422d5b:	shl    cl,0x18
  422d5e:	das    
  422d5f:	clc    
  422d60:	test   DWORD PTR [edi+0x4848526e],edx
  422d66:	jb     0x422dda
  422d68:	cmp    eax,DWORD PTR [ecx]
  422d6a:	jmp    0x919c:0x837681a0
  422d71:	sbb    eax,0xeb08ea0e
  422d76:	cmp    BYTE PTR [ecx-0x65],0x34
  422d7a:	xlat   BYTE PTR ds:[ebx]
  422d7b:	dec    ecx
  422d7c:	das    
  422d7d:	fwait
  422d7e:	xchg   ebp,eax
  422d7f:	jnp    0x422d7f
  422d81:	dec    ecx
  422d82:	push   ecx
  422d83:	fidivr WORD PTR [ebx+0x6d2c485d]
  422d89:	dec    edi
  422d8a:	jg     0x422d62
  422d8c:	or     DWORD PTR ds:0x3c76bfa0,edi
  422d92:	xchg   ebp,eax
  422d93:	scas   al,BYTE PTR es:[edi]
  422d94:	inc    ebx
  422d95:	dec    edx
  422d96:	mov    bl,0xe4
  422d98:	jle    0x422da0
  422d9a:	sbb    BYTE PTR [edi-0x40],bl
  422d9d:	rcl    edi,0x99
  422da0:	inc    ebp
  422da1:	and    al,0x27
  422da3:	das    
  422da4:	xchg   ecx,eax
  422da5:	mov    ds:0xdaa9fd78,eax
  422daa:	pop    edx
  422dab:	xchg   ebx,eax
  422dac:	adc    dh,BYTE PTR [ecx]
  422dae:	sub    cl,cl
  422db0:	ins    DWORD PTR es:[edi],dx
  422db1:	sbb    eax,0xbc66e976
  422db6:	hlt    
  422db7:	xlat   BYTE PTR ds:[ebx]
  422db8:	xor    DWORD PTR [esi-0x9d710ca],ecx
  422dbe:	sbb    DWORD PTR [ecx+0x100ee521],eax
  422dc4:	fs jbe 0x422dfe
  422dc7:	inc    ebp
  422dc8:	push   ecx
  422dc9:	xchg   edx,eax
  422dca:	push   0x16abeb95
  422dcf:	jp     0x422de5
  422dd1:	aaa    
  422dd2:	cmc    
  422dd3:	ret    0xc913
  422dd6:	xor    ah,BYTE PTR [ecx+ebp*2-0x73]
  422dda:	lds    esi,FWORD PTR [esi-0x69]
  422ddd:	ds test esi,ebx
  422de0:	nop
  422de1:	stc    
  422de2:	xchg   esi,eax
  422de3:	and    DWORD PTR [ebp+0x30683c2d],0x4f072aaf
  422ded:	fcom   DWORD PTR [esi]
  422def:	adc    al,0xc0
  422df1:	out    dx,eax
  422df2:	jbe    0x422dc2
  422df4:	push   ss
  422df5:	jmp    0xef6fbed4
  422dfa:	gs and eax,0xf3310850
  422e00:	xor    eax,0xa6abb75e
  422e05:	loop   0x422e5f
  422e07:	and    BYTE PTR [ecx],ch
  422e09:	inc    edx
  422e0a:	into   
  422e0b:	xchg   ecx,eax
  422e0c:	daa    
  422e0d:	(bad)  
  422e0e:	cmp    eax,0xaa3134a4
  422e13:	cmp    al,0x34
  422e15:	xchg   edx,eax
  422e16:	mov    ds:0x3eaf5b2d,al
  422e1b:	ret    
  422e1c:	xchg   edi,eax
  422e1d:	pop    ecx
  422e1e:	and    BYTE PTR [eax+0x63],dl
  422e21:	sub    al,al
  422e23:	sbb    ch,BYTE PTR [edi]
  422e25:	repnz sub al,0xfd
  422e28:	mov    esi,0x8b26261d
  422e2d:	push   eax
  422e2e:	push   ss
  422e2f:	push   0xa
  422e31:	mov    bh,ch
  422e33:	jecxz  0x422eab
  422e35:	retf   0xfd2c
  422e38:	js     0x422e4e
  422e3a:	mov    bh,0x76
  422e3c:	das    
  422e3d:	outs   dx,BYTE PTR ds:[esi]
  422e3e:	sub    DWORD PTR [eax+0x73],esi
  422e41:	jg     0x422e64
  422e43:	fdivr  st,st(2)
  422e45:	ror    dl,1
  422e47:	mov    ch,0x54
  422e49:	enter  0xcaa3,0x7c
  422e4d:	pop    eax
  422e4e:	lahf   
  422e4f:	shl    DWORD PTR [eax+0x56d77f00],1
  422e55:	dec    esp
  422e56:	mov    bl,0xd1
  422e58:	(bad)  
  422e59:	jp     0x422e0d
  422e5b:	sahf   
  422e5c:	ret    0x20ad
  422e5f:	ss ja  0x422e8a
  422e62:	mov    dl,0xaf
  422e64:	ror    dh,0x80
  422e67:	pop    eax
  422e68:	or     al,0x33
  422e6a:	lods   al,BYTE PTR ds:[esi]
  422e6b:	mov    cl,0xb3
  422e6d:	push   edx
  422e6e:	rcr    DWORD PTR [ebx+0x15],cl
  422e71:	and    BYTE PTR [ecx-0x4b],ch
  422e74:	imul   edi,DWORD PTR [ecx+0xd968713],0x25
  422e7b:	cmp    al,0x7b
  422e7d:	jae    0x422e20
  422e7f:	pop    ebx
  422e80:	or     ah,al
  422e82:	dec    esi
  422e83:	lahf   
  422e84:	push   ss
  422e85:	les    ecx,FWORD PTR [ebp-0x11867284]
  422e8b:	xchg   ebp,eax
  422e8c:	adc    DWORD PTR [ebx+0xf],edx
  422e8f:	bound  edx,QWORD PTR [ebx+eiz*1-0x4e]
  422e93:	pop    ebx
  422e94:	mov    bh,BYTE PTR [ebp+0x68f04c82]
  422e9a:	iret   
  422e9b:	xor    eax,0x7b09ee8c
  422ea0:	lea    edx,[edi-0x79]
  422ea3:	or     ch,BYTE PTR [ecx-0x6e]
  422ea6:	jnp    0x422e75
  422ea8:	dec    esi
  422ea9:	add    al,0x84
  422eab:	shl    BYTE PTR [eax+ebp*4+0x9],cl
  422eaf:	leave  
  422eb0:	jmp    0x422f06
  422eb2:	dec    edx
  422eb3:	fnsave [ebx-0x123b0d01]
  422eb9:	push   edi
  422eba:	fs out 0x39,al
  422ebd:	out    dx,eax
  422ebe:	(bad)  
  422ebf:	mov    al,0x92
  422ec1:	xchg   edx,eax
  422ec2:	(bad)  
  422ec3:	xor    cl,BYTE PTR [edi+0x3]
  422ec6:	pop    edx
  422ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ec8:	aad    0xab
  422eca:	mov    al,0xe0
  422ecc:	sbb    esp,DWORD PTR [ebx-0x4b]
  422ecf:	fcom   DWORD PTR [esi+0x62]
  422ed2:	mov    al,0x86
  422ed4:	or     bh,BYTE PTR [eax-0x160889f4]
  422eda:	jl     0x422f37
  422edc:	adc    eax,0x684c06f7
  422ee1:	div    BYTE PTR [edx-0x3cf61b03]
  422ee7:	call   FWORD PTR ds:0xd1c7a367
  422eed:	mov    al,0xc0
  422eef:	ret    
  422ef0:	(bad)  
  422ef1:	fwait
  422ef2:	cld    
  422ef3:	push   cs
  422ef4:	sub    eax,0xa80b929f
  422ef9:	scas   eax,DWORD PTR es:[edi]
  422efa:	cmp    BYTE PTR [eax],ah
  422efc:	dec    BYTE PTR [edi+ebp*1]
  422eff:	push   edi
  422f00:	(bad)  [ecx+0x18]
  422f03:	dec    ecx
  422f04:	data16 clc 
  422f06:	cdq    
  422f07:	out    0x4b,al
  422f09:	outs   dx,DWORD PTR ds:[esi]
  422f0a:	ret    0x746
  422f0d:	adc    BYTE PTR [esi-0x4ffe5a20],al
  422f13:	or     DWORD PTR [ecx],esi
  422f15:	out    0xfb,eax
  422f17:	fistp  QWORD PTR [eax-0x3cb4185e]
  422f1d:	and    al,0x4a
  422f1f:	and    BYTE PTR [esi],cl
  422f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f22:	lods   al,BYTE PTR ds:[esi]
  422f23:	sbb    al,0x54
  422f25:	mov    DWORD PTR [ecx+eax*8],eax
  422f28:	test   BYTE PTR [edx+0x5c],bl
  422f2b:	scas   al,BYTE PTR es:[edi]
  422f2c:	mov    ds,WORD PTR ds:0x20d897c9
  422f32:	icebp  
  422f33:	push   0x6f33ae7a
  422f38:	xchg   dl,dl
  422f3a:	push   edx
  422f3b:	shl    DWORD PTR [edx],1
  422f3d:	push   esp
  422f3e:	es mov bl,0x74
  422f41:	cmc    
  422f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f43:	adc    bl,BYTE PTR [edi+ebx*1-0x79]
  422f47:	call   0xe495:0x6a952398
  422f4e:	in     eax,0xaa
  422f50:	mov    ebx,0x55554f9c
  422f55:	xor    ah,BYTE PTR [edi-0x1fcc11ce]
  422f5b:	pop    ebp
  422f5c:	stos   BYTE PTR es:[edi],al
  422f5d:	ss inc ecx
  422f5f:	scas   eax,DWORD PTR es:[edi]
  422f60:	popa   
  422f61:	push   edx
  422f62:	aad    0x83
  422f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f65:	dec    ebp
  422f66:	pop    edx
  422f67:	sbb    al,dh
  422f69:	jmp    0x478bb659
  422f6e:	sub    BYTE PTR [edi+0x34],ch
  422f71:	mov    edx,0x2c96420
  422f76:	dec    edi
  422f77:	cli    
  422f78:	mov    al,0x68
  422f7a:	fidiv  DWORD PTR [ebp+0x489934ba]
  422f80:	in     eax,dx
  422f81:	dec    esp
  422f82:	fbld   TBYTE PTR [edi-0x18]
  422f85:	test   bh,bh
  422f87:	adc    sp,0x62
  422f8b:	ret    
  422f8c:	mov    ds:0x5799185f,al
  422f91:	mov    fs,WORD PTR [edx+0x2330ade5]
  422f97:	mov    cl,0xae
  422f99:	or     DWORD PTR [ebx],0xffffffc5
  422f9c:	repz mov es,esi
  422f9f:	std    
  422fa0:	mov    bh,0xb4
  422fa2:	cmp    al,0xbc
  422fa4:	and    al,bh
  422fa6:	cwde   
  422fa7:	in     al,dx
  422fa8:	xchg   edi,eax
  422fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422faa:	jmp    0x3de:0xe59dfeae
  422fb1:	rcl    DWORD PTR [esi+0x2a],cl
  422fb4:	int    0xab
  422fb6:	sub    al,BYTE PTR [ebx-0x796a53a9]
  422fbc:	cmp    ah,BYTE PTR [edi]
  422fbe:	(bad)  
  422fbf:	mov    ah,0xeb
  422fc1:	mov    ebx,0xcb4bff1b
  422fc6:	mov    eax,ds:0x5c14ab6b
  422fcb:	fstp   st(3)
  422fcd:	and    ebx,eax
  422fcf:	fdiv   QWORD PTR [ebx+0x3d46bfac]
  422fd5:	inc    ebp
  422fd6:	sbb    bh,BYTE PTR [esi-0x17]
  422fd9:	push   ebx
  422fda:	fld    DWORD PTR [eax]
  422fdd:	cld    
  422fde:	data16 mov al,0x25
  422fe1:	and    DWORD PTR [esi],ecx
  422fe3:	add    al,0xf4
  422fe5:	cmp    BYTE PTR ds:0x4f6c7ef4,bl
  422feb:	cs xchg ebp,eax
  422fed:	jno    0x422fd6
  422fef:	mov    esp,0x2bcc4f66
  422ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ff5:	ror    ah,cl
  422ff7:	jmp    0x7c0fbb05
  422ffc:	(bad)
  423000:	pop    ebp
  423001:	jmp    0x493c3c00
  423006:	xchg   ecx,eax
  423007:	fmulp  st(4),st
  423009:	cmp    ebp,DWORD PTR [eax-0x188b79ba]
  42300f:	ja     0x422fb0
  423011:	loop   0x422fd1
  423013:	(bad)  
  423016:	sbb    eax,0xe8c32adc
  42301b:	mov    ebp,0xc8a0767d
  423020:	dec    esi
  423021:	xor    BYTE PTR [ebx-0x22cf6446],al
  423027:	jmp    0x6265:0x55b35ee8
  42302e:	lods   al,BYTE PTR ds:[esi]
  42302f:	mov    dl,bh
  423031:	in     eax,0x6d
  423033:	das    
  423034:	mov    bl,0xbc
  423036:	dec    edx
  423037:	add    DWORD PTR ds:0xf49d2d8e,ebx
  42303d:	mov    eax,ds:0x1eb943de
  423042:	call   0x50e1bb83
  423047:	cld    
  423048:	enter  0x56b3,0x52
  42304c:	inc    ecx
  42304d:	repz call DWORD PTR [esp+eax*4-0x76]
  423052:	shr    DWORD PTR [ebx-0x1265a1c0],1
  423058:	scas   eax,DWORD PTR es:[edi]
  423059:	pop    es
  42305a:	test   al,0x80
  42305c:	std    
  42305d:	xchg   ebp,eax
  42305e:	push   edx
  42305f:	push   0x72caac38
  423064:	or     eax,0x851b21d2
  423069:	lea    esp,[edx-0x26]
  42306c:	push   0x3d1cf5a7
  423071:	gs jp  0x42306c
  423074:	dec    DWORD PTR [ebp-0x38]
  423077:	(bad)  
  423078:	sti    
  423079:	pop    ds
  42307a:	pop    eax
  42307b:	inc    ebp
  42307c:	add    ah,BYTE PTR [esi]
  42307e:	mov    DWORD PTR [ecx-0x37],0xecb09935
  423085:	dec    esi
  423086:	(bad)  
  423087:	daa    
  423088:	fsubr  st,st(6)
  42308a:	push   ecx
  42308b:	pop    es
  42308c:	or     eax,0x1c90f498
  423091:	sbb    dl,BYTE PTR ds:0x7e1d0796
  423097:	iret   
  423098:	inc    ecx
  423099:	rcr    BYTE PTR [edx+ebp*2-0x25bebb16],0xd5
  4230a1:	mov    al,0xff
  4230a3:	push   edx
  4230a4:	sub    BYTE PTR [ebx],ch
  4230a6:	(bad)  
  4230a7:	xor    DWORD PTR [ecx+esi*2-0x7c],edx
  4230ab:	adc    eax,0x617a309
  4230b0:	xchg   ebp,eax
  4230b1:	cmc    
  4230b2:	and    DWORD PTR [ecx+ebp*2+0x52a8e347],eax
  4230b9:	or     DWORD PTR [ecx+0x3b],ebp
  4230bc:	loopne 0x42310d
  4230be:	xchg   esp,eax
  4230bf:	inc    edi
  4230c0:	dec    edi
  4230c1:	loopne 0x423116
  4230c3:	mov    ah,0x88
  4230c5:	jg     0x423064
  4230c7:	mov    fs,WORD PTR [edx+ecx*8]
  4230ca:	fisubr DWORD PTR [eax+0x4b00f365]
  4230d0:	adc    dl,BYTE PTR [edx+0x2082a691]
  4230d6:	xor    ecx,DWORD PTR [eax+edx*8+0x71]
  4230da:	aam    0x1a
  4230dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230dd:	je     0x4230cd
  4230df:	addr16 add al,0x20
  4230e2:	fisttp QWORD PTR [edi]
  4230e4:	xor    eax,0xe3743c35
  4230e9:	popf   
  4230ea:	inc    ecx
  4230eb:	ins    BYTE PTR es:[edi],dx
  4230ec:	mov    ecx,0x6a933f86
  4230f1:	leave  
  4230f2:	push   ebp
  4230f3:	cmc    
  4230f4:	xchg   DWORD PTR [ebp-0xfb492a3],esi
  4230fa:	mov    edi,0x6ff435a7
  4230ff:	inc    esi
  423100:	cmc    
  423101:	xchg   edi,eax
  423102:	cmp    ecx,DWORD PTR [ebx]
  423104:	push   ebx
  423105:	je     0x4230b0
  423107:	mov    WORD PTR ds:0x12aed268,?
  42310d:	add    ecx,DWORD PTR [esi]
  42310f:	sbb    al,0xe9
  423111:	iret   
  423112:	mov    cl,BYTE PTR [ecx-0x2354f8d3]
  423118:	mov    edi,0xa7beb09c
  42311d:	icebp  
  42311e:	cli    
  42311f:	loopne 0x423151
  423121:	xchg   dl,bl
  423123:	mov    dl,0x18
  423125:	jecxz  0x423187
  423127:	ror    BYTE PTR [edx-0x4a],cl
  42312a:	fadd   DWORD PTR [ebx+eax*2+0x2f162ffd]
  423131:	sub    DWORD PTR [eax-0xb],ebx
  423134:	stos   DWORD PTR es:[edi],eax
  423135:	cdq    
  423136:	inc    ebp
  423137:	call   0x577124eb
  42313c:	sbb    al,0x30
  42313e:	mov    esi,0xdf2d4f75
  423143:	mov    ah,0x4
  423145:	stos   DWORD PTR es:[edi],eax
  423146:	aaa    
  423147:	clc    
  423148:	ins    DWORD PTR es:[edi],dx
  423149:	mov    al,ds:0xddf4e1f4
  42314e:	dec    eax
  42314f:	outs   dx,DWORD PTR ds:[esi]
  423150:	hlt    
  423151:	ficom  DWORD PTR [esi+0x24b107cd]
  423157:	sahf   
  423158:	in     al,dx
  423159:	xor    edi,DWORD PTR [esi-0x7228cc30]
  42315f:	aaa    
  423160:	pusha  
  423161:	push   0xffffffa4
  423163:	mov    eax,ds:0x36eb9f4
  423168:	iret   
  423169:	and    ecx,edx
  42316b:	mov    DWORD PTR [ebp-0x4c],ecx
  42316e:	mov    ecx,DWORD PTR [ebp+0x8]
  423171:	mov    edx,DWORD PTR [ebp-0x48]
  423174:	lea    ecx,[edx+ecx*1+0x241fcdf]
  42317b:	mov    DWORD PTR [ebp-0x48],ecx
  42317e:	mov    ecx,DWORD PTR [ebp+0x8]
  423181:	mov    edx,0xfa5e1524
  423186:	sub    edx,ecx
  423188:	add    edx,DWORD PTR [ebp-0x44]
  42318b:	mov    DWORD PTR [ebp-0x44],edx
  42318e:	mov    ecx,DWORD PTR [ebp+0x8]
  423191:	xor    ecx,eax
  423193:	add    ecx,esi
  423195:	jne    0x421ef2
  42319b:	mov    ecx,DWORD PTR [ebp-0x8]
  42319e:	xor    ecx,eax
  4231a0:	mov    eax,DWORD PTR [ebp+0x10]
  4231a3:	add    ecx,esi
  4231a5:	mov    DWORD PTR [eax],ecx
  4231a7:	pop    edi
  4231a8:	pop    esi
  4231a9:	pop    ebx
  4231aa:	leave  
  4231ab:	ret    0xc
  4231ae:	push   ebp
  4231af:	mov    ebp,esp
  4231b1:	sub    esp,0x78
  4231b4:	and    DWORD PTR ds:0x42a2e2,0x0
  4231be:	jmp    0x4231d0
  4231c3:	mov    ecx,DWORD PTR ds:0x42a2e2
  4231c9:	inc    ecx
  4231ca:	mov    DWORD PTR ds:0x42a2e2,ecx
  4231d0:	cmp    DWORD PTR ds:0x42a2e2,0x17
  4231d7:	jae    0x423224
  4231dd:	cmp    DWORD PTR ds:0x42a2e2,0xb
  4231e4:	jbe    0x423224
  4231ea:	jmp    0x423205
  4231ef:	push   DWORD PTR [ebp-0x14]
  4231f2:	push   0x42a2be
  4231f7:	push   0x8b21
  4231fc:	push   DWORD PTR [ebp-0x1c]
  4231ff:	call   DWORD PTR ds:0x42a3d2
  423205:	cmp    DWORD PTR ds:0x42a2e2,0xa
  42320c:	jne    0x42321f
  423212:	mov    ecx,DWORD PTR ds:0x42a2e2
  423218:	inc    ecx
  423219:	mov    DWORD PTR ds:0x42a2e2,ecx
  42321f:	jmp    0x4231c3
  423224:	push   esi
  423225:	sbb    DWORD PTR ds:0x42a26e,edx
  42322b:	push   edi
  42322c:	adc    esi,eax
  42322e:	mov    eax,ds:0x42941e
  423233:	inc    DWORD PTR ds:0x42a2ae
  423239:	mov    DWORD PTR [ebp-0x24],eax
  42323c:	mov    DWORD PTR ds:0x42a286,0x12e2
  423246:	mov    eax,ds:0x42953e
  42324b:	inc    ecx
  42324c:	mov    DWORD PTR [ebp-0x30],eax
  42324f:	mov    DWORD PTR ds:0x42a29e,0x10
  423259:	cmp    DWORD PTR ds:0x42a29e,0x0
  423260:	je     0x4232c2
  423266:	cmp    DWORD PTR ds:0x42a29e,0x9
  42326d:	jbe    0x4232c2
  423273:	jmp    0x423297
  423278:	push   DWORD PTR [ebp-0x24]
  42327b:	push   DWORD PTR [ebp-0x18]
  42327e:	push   DWORD PTR [ebp-0xc]
  423281:	push   0x10f9
  423286:	push   DWORD PTR [ebp-0x28]
  423289:	push   DWORD PTR [ebp-0x18]
  42328c:	push   0x429211
  423291:	call   DWORD PTR ds:0x42a3d6
  423297:	cmp    DWORD PTR ds:0x42a29e,0xa
  42329e:	jne    0x4232b2
  4232a4:	xor    eax,eax
  4232a6:	xor    eax,DWORD PTR ds:0x42a29e
  4232ac:	dec    eax
  4232ad:	mov    ds:0x42a29e,eax
  4232b2:	mov    eax,ds:0x42a29e
  4232b7:	dec    eax
  4232b8:	mov    ds:0x42a29e,eax
  4232bd:	jmp    0x423259
  4232c2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4232c9:	mov    DWORD PTR ds:0x42a26a,0x16
  4232d3:	cmp    DWORD PTR ds:0x42a26a,0x0
  4232da:	je     0x42330c
  4232e0:	cmp    DWORD PTR ds:0x42a26a,0x20
  4232e7:	jg     0x42330c
  4232ed:	jmp    0x4232f8
  4232f2:	call   DWORD PTR ds:0x42a3da
  4232f8:	xor    edi,edi
  4232fa:	add    edi,DWORD PTR ds:0x42a26a
  423300:	dec    edi
  423301:	mov    DWORD PTR ds:0x42a26a,edi
  423307:	jmp    0x4232d3
  42330c:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  423313:	mov    eax,DWORD PTR [ebp-0x10]
  423316:	mov    ecx,DWORD PTR [ebp-0x10]
  423319:	xor    esi,esi
  42331b:	xor    esi,DWORD PTR ds:0x42a286
  423321:	xor    DWORD PTR ds:0x42a2f6,esi
  423327:	sub    eax,ecx
  423329:	or     ecx,esi
  42332b:	mov    DWORD PTR [ebp-0x10],eax
  42332e:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  423335:	add    DWORD PTR ds:0x42a26a,0x2e29
  42333f:	mov    eax,DWORD PTR [ebp-0x18]
  423342:	sbb    DWORD PTR ds:0x42a272,0x6ecf
  42334c:	mov    ecx,DWORD PTR [ebp-0x18]
  42334f:	add    DWORD PTR ds:0x42a256,0x42a29a
  423359:	sub    eax,ecx
  42335b:	adc    DWORD PTR ds:0x42a302,edi
  423361:	mov    DWORD PTR [ebp-0x18],eax
  423364:	add    DWORD PTR ds:0x42a2fe,ecx
  42336a:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  423371:	adc    DWORD PTR ds:0x42a26a,0x287e
  42337b:	mov    eax,DWORD PTR [ebp-0xc]
  42337e:	adc    esi,esi
  423380:	mov    ecx,DWORD PTR [ebp-0xc]
  423383:	sub    eax,ecx
  423385:	xor    DWORD PTR ds:0x42a2b6,0x51ed
  42338f:	mov    DWORD PTR [ebp-0xc],eax
  423392:	and    DWORD PTR ds:0x42a2ae,0x0
  42339c:	mov    edi,DWORD PTR ds:0x42a2ae
  4233a2:	inc    edi
  4233a3:	mov    DWORD PTR ds:0x42a2ae,edi
  4233a9:	cmp    DWORD PTR ds:0x42a2ae,0xd
  4233b0:	ja     0x4233fa
  4233b6:	jmp    0x4233d1
  4233bb:	push   DWORD PTR [ebp-0x1c]
  4233be:	push   0x7962
  4233c3:	push   0x7f76
  4233c8:	push   DWORD PTR [ebp-0x20]
  4233cb:	call   DWORD PTR ds:0x42a3de
  4233d1:	cmp    DWORD PTR ds:0x42a2ae,0xc
  4233d8:	jne    0x4233ed
  4233de:	xor    edi,edi
  4233e0:	xor    edi,DWORD PTR ds:0x42a2ae
  4233e6:	inc    edi
  4233e7:	mov    DWORD PTR ds:0x42a2ae,edi
  4233ed:	cmp    DWORD PTR ds:0x42a2ae,0x18
  4233f4:	jb     0x42339c
  4233fa:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  423401:	adc    esi,edi
  423403:	mov    eax,DWORD PTR [ebp-0x1c]
  423406:	mov    ecx,DWORD PTR [ebp-0x1c]
  423409:	sub    eax,ecx
  42340b:	mov    DWORD PTR [ebp-0x1c],eax
  42340e:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  423415:	mov    eax,DWORD PTR [ebp-0x20]
  423418:	mov    ecx,DWORD PTR [ebp-0x20]
  42341b:	sub    eax,ecx
  42341d:	mov    DWORD PTR [ebp-0x20],eax
  423420:	mov    eax,DWORD PTR [ebp-0x2c]
  423423:	mov    ecx,DWORD PTR [ebp-0x20]
  423426:	mov    esi,0x75108aa
  42342b:	xor    eax,esi
  42342d:	mov    edi,0x3272f1
  423432:	add    eax,edi
  423434:	or     eax,ecx
  423436:	mov    DWORD PTR [ebp-0x20],eax
  423439:	mov    eax,DWORD PTR [ebp-0x4]
  42343c:	mov    ecx,DWORD PTR [ebp-0x4]
  42343f:	sub    eax,ecx
  423441:	mov    DWORD PTR [ebp-0x4],eax
  423444:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42344b:	mov    eax,DWORD PTR [ebp-0xc]
  42344e:	xor    eax,esi
  423450:	add    eax,edi
  423452:	push   eax
  423453:	mov    eax,DWORD PTR [ebp-0x10]
  423456:	xor    eax,esi
  423458:	add    eax,edi
  42345a:	push   eax
  42345b:	mov    eax,DWORD PTR [ebp-0x4]
  42345e:	xor    eax,esi
  423460:	add    eax,edi
  423462:	push   eax
  423463:	lea    eax,[ebp-0x78]
  423466:	push   eax
  423467:	push   DWORD PTR [ebp-0x2c]
  42346a:	push   DWORD PTR [ebp-0x28]
  42346d:	call   0x413da8
  423472:	test   eax,eax
  423474:	je     0x4234a2
  42347a:	lea    eax,[ebp-0x78]
  42347d:	push   eax
  42347e:	mov    eax,DWORD PTR [ebp-0x28]
  423481:	xor    eax,esi
  423483:	add    eax,edi
  423485:	push   eax
  423486:	mov    eax,DWORD PTR [ebp-0x24]
  423489:	add    eax,0xaa
  42348e:	push   eax
  42348f:	mov    eax,DWORD PTR [ebp-0x24]
  423492:	mov    eax,DWORD PTR [eax+0x198]
  423498:	push   DWORD PTR [eax]
  42349a:	call   0x4084f6
  42349f:	mov    DWORD PTR [ebp-0x14],eax
  4234a2:	mov    ecx,DWORD PTR ds:0x429516
  4234a8:	lea    eax,[ebp+0x4]
  4234ab:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4234b2:	inc    DWORD PTR ds:0x429516
  4234b8:	mov    eax,DWORD PTR [ebp-0x14]
  4234bb:	test   eax,eax
  4234bd:	je     0x423525
  4234c3:	lea    eax,[ebp-0x8]
  4234c6:	mov    DWORD PTR [ebp-0x34],eax
  4234c9:	mov    eax,DWORD PTR [ebp-0x30]
  4234cc:	mov    DWORD PTR [ebp-0x8],eax
  4234cf:	mov    eax,DWORD PTR [ebp-0x8]
  4234d2:	mov    ecx,DWORD PTR [ebp-0x14]
  4234d5:	sub    eax,ecx
  4234d7:	mov    DWORD PTR [ebp-0x8],eax
  4234da:	mov    ecx,DWORD PTR [ebp-0x4]
  4234dd:	xor    ecx,esi
  4234df:	mov    eax,0xffcd8d0f
  4234e4:	sub    eax,ecx
  4234e6:	add    DWORD PTR [ebp-0x8],eax
  4234e9:	mov    eax,DWORD PTR [ebp-0x8]
  4234ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4234ef:	mov    DWORD PTR [ecx+0x1],eax
  4234f2:	mov    eax,DWORD PTR [ebp-0x14]
  4234f5:	push   DWORD PTR [ebp-0x24]
  4234f8:	mov    BYTE PTR [eax],0xe9
  4234fb:	mov    eax,ds:0x42929a
  423500:	push   DWORD PTR [eax]
  423502:	push   DWORD PTR ds:0x4294fe
  423508:	push   DWORD PTR ds:0x4292a2
  42350e:	push   DWORD PTR ds:0x4294de
  423514:	push   DWORD PTR ds:0x42a04a
  42351a:	push   DWORD PTR [ebp-0x28]
  42351d:	push   DWORD PTR [ebp-0x2c]
  423520:	mov    eax,DWORD PTR [ebp-0x14]
  423523:	call   eax
  423525:	pop    edi
  423526:	pop    esi
  423527:	leave  
  423528:	ret    
  423529:	push   ebp
  42352a:	mov    ebp,esp
  42352c:	sub    esp,0x1c
  42352f:	mov    DWORD PTR ds:0x42a2ea,0x10
  423539:	cmp    DWORD PTR ds:0x42a2ea,0x0
  423540:	je     0x423570
  423546:	cmp    DWORD PTR ds:0x42a2ea,0x17
  42354d:	jg     0x423570
  423553:	jmp    0x42355e
  423558:	call   DWORD PTR ds:0x42a3e2
  42355e:	mov    ecx,DWORD PTR ds:0x42a2ea
  423564:	dec    ecx
  423565:	mov    DWORD PTR ds:0x42a2ea,ecx
  42356b:	jmp    0x423539
  423570:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  423577:	sbb    ecx,ecx
  423579:	lea    eax,[ebp+0x14]
  42357c:	sub    edx,DWORD PTR ds:0x42a2da
  423582:	mov    DWORD PTR [ebp-0x4],eax
  423585:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42358c:	and    DWORD PTR ds:0x42a302,0x5581
  423596:	lea    eax,[ebp-0xc]
  423599:	and    DWORD PTR ds:0x42a256,0x0
  4235a3:	jmp    0x4235b7
  4235a8:	xor    ecx,ecx
  4235aa:	or     ecx,DWORD PTR ds:0x42a256
  4235b0:	inc    ecx
  4235b1:	mov    DWORD PTR ds:0x42a256,ecx
  4235b7:	cmp    DWORD PTR ds:0x42a256,0x1e
  4235be:	jae    0x42360f
  4235c4:	cmp    DWORD PTR ds:0x42a256,0x4
  4235cb:	jg     0x42360f
  4235d1:	jmp    0x4235f0
  4235d6:	push   0x42a25a
  4235db:	push   0x6352
  4235e0:	push   0x429009
  4235e5:	push   0x42904c
  4235ea:	call   DWORD PTR ds:0x42a3ea
  4235f0:	cmp    DWORD PTR ds:0x42a256,0x3
  4235f7:	jne    0x42360a
  4235fd:	mov    ecx,DWORD PTR ds:0x42a256
  423603:	inc    ecx
  423604:	mov    DWORD PTR ds:0x42a256,ecx
  42360a:	jmp    0x4235a8
  42360f:	mov    DWORD PTR [ebp-0x14],eax
  423612:	and    DWORD PTR ds:0x42a2f2,0x0
  42361c:	jmp    0x42362f
  423621:	xor    eax,eax
  423623:	add    eax,DWORD PTR ds:0x42a2f2
  423629:	inc    eax
  42362a:	mov    ds:0x42a2f2,eax
  42362f:	cmp    DWORD PTR ds:0x42a2f2,0x16
  423636:	jae    0x423668
  42363c:	cmp    DWORD PTR ds:0x42a2f2,0x1d
  423643:	jbe    0x423668
  423649:	jmp    0x423663
  42364e:	push   0x76a3
  423653:	push   0x42a296
  423658:	push   0x659d
  42365d:	call   DWORD PTR ds:0x42a3ee
  423663:	jmp    0x423621
  423668:	mov    eax,DWORD PTR [ebp-0xc]
  42366b:	mov    edx,DWORD PTR [ebp-0x14]
  42366e:	neg    ecx
  423670:	mov    ecx,0x75108aa
  423675:	xor    eax,ecx
  423677:	or     DWORD PTR ds:0x42a2c2,0x55df
  423681:	add    eax,0x3272f1
  423686:	mov    DWORD PTR [edx],eax
  423688:	xor    edx,edx
  42368a:	xor    edx,DWORD PTR ds:0x42a34a
  423690:	xor    eax,eax
  423692:	or     eax,DWORD PTR ds:0x42a35a
  423698:	sub    edx,eax
  42369a:	sub    edx,DWORD PTR [edx+eax*1]
  42369d:	mov    eax,ds:0x429296
  4236a2:	mov    DWORD PTR ds:0x42a2da,0x16
  4236ac:	cmp    DWORD PTR ds:0x42a2da,0x0
  4236b3:	je     0x4236eb
  4236b9:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4236c0:	jge    0x4236eb
  4236c6:	jmp    0x4236d9
  4236cb:	push   DWORD PTR [ebp-0x20]
  4236ce:	push   0x42a2ca
  4236d3:	call   DWORD PTR ds:0x42a3f2
  4236d9:	mov    edx,DWORD PTR ds:0x42a2da
  4236df:	dec    edx
  4236e0:	mov    DWORD PTR ds:0x42a2da,edx
  4236e6:	jmp    0x4236ac
  4236eb:	mov    edx,DWORD PTR [ebp-0x4]
  4236ee:	adc    DWORD PTR ds:0x42a2be,0x42a256
  4236f8:	mov    eax,DWORD PTR [eax]
  4236fa:	and    DWORD PTR ds:0x42a286,0x12f2
  423704:	add    eax,DWORD PTR [edx]
  423706:	push   esi
  423707:	mov    DWORD PTR [ebp-0x8],eax
  42370a:	and    DWORD PTR ds:0x42a2f6,0x290a
  423714:	mov    edx,DWORD PTR [ebp+0x8]
  423717:	mov    eax,ds:0x42941e
  42371c:	sbb    esi,0x612f
  423722:	mov    eax,DWORD PTR [eax+0x198]
  423728:	xor    edx,ecx
  42372a:	neg    esi
  42372c:	mov    esi,0x3272f1
  423731:	add    edx,esi
  423733:	mov    DWORD PTR ds:0x42a2b6,0x4be9
  42373d:	cmp    DWORD PTR [eax],edx
  42373f:	je     0x423760
  423745:	mov    DWORD PTR ds:0x42a2ea,0x6dae
  42374f:	mov    eax,DWORD PTR [eax]
  423751:	mov    DWORD PTR ds:0x42a2da,0x1950
  42375b:	jmp    0x423ba3
  423760:	sbb    eax,DWORD PTR ds:0x42a296
  423766:	mov    eax,DWORD PTR [ebp+0x18]
  423769:	xor    eax,ecx
  42376b:	adc    DWORD PTR ds:0x42a2e6,0x42a2b2
  423775:	push   ebx
  423776:	add    eax,esi
  423778:	add    ebx,DWORD PTR ds:0x42a2a2
  42377e:	xor    edx,edx
  423780:	mov    ebx,DWORD PTR ds:0x42a2c6
  423786:	xor    DWORD PTR ds:0x42a2a2,ebx
  42378c:	mov    ebx,0xfabdbed8
  423791:	adc    DWORD PTR ds:0x42a2ae,0x6fd6
  42379b:	add    eax,ebx
  42379d:	mov    DWORD PTR ds:0x42a296,0x25f1
  4237a7:	push   edi
  4237a8:	mov    DWORD PTR ds:0x42a2be,0x342
  4237b2:	adc    edx,0xffffffff
  4237b5:	and    DWORD PTR ds:0x42a2ee,0x0
  4237bf:	jmp    0x4237d1
  4237c4:	mov    edi,DWORD PTR ds:0x42a2ee
  4237ca:	inc    edi
  4237cb:	mov    DWORD PTR ds:0x42a2ee,edi
  4237d1:	cmp    DWORD PTR ds:0x42a2ee,0x10
  4237d8:	jae    0x42381a
  4237de:	cmp    DWORD PTR ds:0x42a2ee,0x6
  4237e5:	jbe    0x42381a
  4237eb:	jmp    0x4237fb
  4237f0:	push   0x42a2fe
  4237f5:	call   DWORD PTR ds:0x42a3f6
  4237fb:	cmp    DWORD PTR ds:0x42a2ee,0x5
  423802:	jne    0x423815
  423808:	mov    edi,DWORD PTR ds:0x42a2ee
  42380e:	inc    edi
  42380f:	mov    DWORD PTR ds:0x42a2ee,edi
  423815:	jmp    0x4237c4
  42381a:	mov    edi,0x8a29a13d
  42381f:	mov    DWORD PTR ds:0x42a25e,0x2bce
  423829:	xor    eax,edi
  42382b:	sub    DWORD PTR ds:0x42a266,0x304b
  423835:	xor    edx,0x0
  423838:	mov    DWORD PTR ds:0x42a2b2,0x550
  423842:	cmp    eax,0x70941fe5
  423847:	mov    DWORD PTR ds:0x42a2c2,0x6d49
  423851:	jne    0x423888
  423857:	mov    DWORD PTR ds:0x42a2fa,0x2c4a
  423861:	cmp    edx,0xffffffff
  423864:	mov    DWORD PTR ds:0x42a2de,0x7cde
  42386e:	jne    0x423888
  423874:	push   0xf89c85ba
  423879:	mov    DWORD PTR ds:0x42a2ca,0x25f0
  423883:	jmp    0x423b90
  423888:	xor    DWORD PTR ds:0x42a2e2,edi
  42388e:	mov    eax,DWORD PTR [ebp+0x18]
  423891:	and    DWORD PTR ds:0x42a25a,0x42a296
  42389b:	xor    eax,ecx
  42389d:	add    eax,esi
  42389f:	sub    DWORD PTR ds:0x42a292,0x6866
  4238a9:	xor    edx,edx
  4238ab:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  4238b5:	add    eax,ebx
  4238b7:	mov    DWORD PTR ds:0x42a2f6,0x1dc4
  4238c1:	adc    edx,0xffffffff
  4238c4:	not    DWORD PTR ds:0x42a2ae
  4238ca:	xor    eax,edi
  4238cc:	xor    edx,0x0
  4238cf:	cmp    eax,0x70941fe7
  4238d4:	jne    0x423b7d
  4238da:	cmp    edx,0xffffffff
  4238dd:	jne    0x423b7d
  4238e3:	mov    eax,DWORD PTR [ebp+0x10]
  4238e6:	xor    eax,ecx
  4238e8:	mov    DWORD PTR ds:0x42a2aa,0x16
  4238f2:	cmp    DWORD PTR ds:0x42a2aa,0x0
  4238f9:	je     0x423936
  4238ff:	cmp    DWORD PTR ds:0x42a2aa,0x25
  423906:	jbe    0x423936
  42390c:	jmp    0x423924
  423911:	push   0x1425
  423916:	push   0x42a2b6
  42391b:	push   DWORD PTR [ebp-0x14]
  42391e:	call   DWORD PTR ds:0x42a3fa
  423924:	mov    edx,DWORD PTR ds:0x42a2aa
  42392a:	dec    edx
  42392b:	mov    DWORD PTR ds:0x42a2aa,edx
  423931:	jmp    0x4238f2
  423936:	add    eax,esi
  423938:	mov    edx,DWORD PTR ds:0x42a292
  42393e:	sbb    edx,DWORD PTR ds:0x42a2de
  423944:	mov    DWORD PTR ds:0x42a292,edx
  42394a:	mov    DWORD PTR [ebp-0x18],eax
  42394d:	and    DWORD PTR ds:0x42a2b6,0x0
  423957:	jmp    0x423967
  42395c:	mov    eax,ds:0x42a2b6
  423961:	inc    eax
  423962:	mov    ds:0x42a2b6,eax
  423967:	cmp    DWORD PTR ds:0x42a2b6,0x13
  42396e:	jae    0x42399c
  423974:	cmp    DWORD PTR ds:0x42a2b6,0x17
  42397b:	ja     0x42399c
  423981:	jmp    0x423997
  423986:	push   0x3d13
  42398b:	push   DWORD PTR [ebp-0x14]
  42398e:	push   DWORD PTR [ebp-0x14]
  423991:	call   DWORD PTR ds:0x42a402
  423997:	jmp    0x42395c
  42399c:	mov    eax,DWORD PTR [ebp+0xc]
  42399f:	mov    edx,DWORD PTR [ebp-0x8]
  4239a2:	xor    eax,ecx
  4239a4:	not    DWORD PTR ds:0x42a2ea
  4239aa:	add    eax,esi
  4239ac:	imul   eax,DWORD PTR [edx]
  4239af:	dec    edx
  4239b0:	mov    edx,DWORD PTR [ebp+0x8]
  4239b3:	xor    edx,ecx
  4239b5:	add    edx,esi
  4239b7:	cmp    edx,eax
  4239b9:	mov    eax,DWORD PTR [ebp-0x4]
  4239bc:	mov    DWORD PTR ds:0x42a26a,0x1fb7
  4239c6:	je     0x4239fa
  4239cc:	mov    edx,DWORD PTR [ebp-0x18]
  4239cf:	add    DWORD PTR [eax],edx
  4239d1:	mov    eax,DWORD PTR [ebp-0x4]
  4239d4:	mov    edx,DWORD PTR [ebp+0xc]
  4239d7:	xor    edx,ecx
  4239d9:	add    edx,esi
  4239db:	imul   edx,DWORD PTR [eax]
  4239de:	mov    DWORD PTR [eax],edx
  4239e0:	mov    eax,DWORD PTR [ebp-0x4]
  4239e3:	mov    DWORD PTR [ebp-0x1c],eax
  4239e6:	mov    eax,DWORD PTR [ebp+0x10]
  4239e9:	xor    eax,ecx
  4239eb:	mov    edx,0xffcd8d0f
  4239f0:	sub    edx,eax
  4239f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4239f5:	jmp    0x423a14
  4239fa:	mov    edx,DWORD PTR [ebp+0x14]
  4239fd:	xor    DWORD PTR [eax],edx
  4239ff:	mov    eax,DWORD PTR [ebp-0x4]
  423a02:	mov    DWORD PTR [ebp-0x1c],eax
  423a05:	mov    eax,DWORD PTR [ebp+0x10]
  423a08:	xor    eax,ecx
  423a0a:	mov    edx,0xffcd8d0f
  423a0f:	sub    edx,eax
  423a11:	mov    eax,DWORD PTR [ebp-0x1c]
  423a14:	add    DWORD PTR [eax],edx
  423a16:	mov    eax,DWORD PTR [ebp-0x4]
  423a19:	mov    edx,DWORD PTR [ebp-0x8]
  423a1c:	add    edx,DWORD PTR [eax]
  423a1e:	mov    DWORD PTR [ebp-0x8],edx
  423a21:	mov    eax,DWORD PTR [ebp+0xc]
  423a24:	mov    edx,DWORD PTR [ebp+0xc]
  423a27:	xor    edx,ecx
  423a29:	xor    eax,ecx
  423a2b:	lea    eax,[eax+edx*1+0x64e5e2]
  423a32:	mov    edx,DWORD PTR [ebp+0xc]
  423a35:	xor    edx,ecx
  423a37:	add    edx,esi
  423a39:	imul   eax,edx
  423a3c:	mov    edx,DWORD PTR [ebp+0xc]
  423a3f:	xor    edx,ecx
  423a41:	sub    edx,eax
  423a43:	mov    eax,DWORD PTR [ebp-0x4]
  423a46:	add    edx,esi
  423a48:	cmp    DWORD PTR [eax],edx
  423a4a:	mov    eax,DWORD PTR [ebp-0x4]
  423a4d:	jg     0x423a6a
  423a53:	mov    DWORD PTR [ebp-0x1c],eax
  423a56:	mov    eax,DWORD PTR [ebp+0x10]
  423a59:	xor    eax,ecx
  423a5b:	mov    edx,0xffcd8d0f
  423a60:	sub    edx,eax
  423a62:	mov    eax,DWORD PTR [ebp-0x1c]
  423a65:	jmp    0x423a71
  423a6a:	mov    edx,DWORD PTR [ebp+0x10]
  423a6d:	xor    edx,ecx
  423a6f:	add    edx,esi
  423a71:	add    DWORD PTR [eax],edx
  423a73:	mov    eax,DWORD PTR [ebp-0x8]
  423a76:	mov    edx,DWORD PTR [ebp-0x10]
  423a79:	mov    eax,DWORD PTR [eax]
  423a7b:	xor    edx,ecx
  423a7d:	add    edx,0x3272f0
  423a83:	not    edx
  423a85:	and    eax,edx
  423a87:	mov    DWORD PTR [ebp-0x4],eax
  423a8a:	movsx  eax,BYTE PTR [eax+0x1]
  423a8e:	cdq    
  423a8f:	add    eax,ebx
  423a91:	adc    edx,0xffffffff
  423a94:	xor    eax,edi
  423a96:	xor    edx,0x0
  423a99:	cmp    eax,0x70941e0f
  423a9e:	jne    0x423ad2
  423aa4:	cmp    edx,0xffffffff
  423aa7:	jne    0x423ad2
  423aad:	mov    eax,DWORD PTR [ebp-0x4]
  423ab0:	movsx  eax,BYTE PTR [eax]
  423ab3:	cdq    
  423ab4:	add    eax,ebx
  423ab6:	adc    edx,0xffffffff
  423ab9:	xor    eax,edi
  423abb:	xor    edx,0x0
  423abe:	cmp    eax,0x70941e18
  423ac3:	jne    0x423ad2
  423ac9:	cmp    edx,0xffffffff
  423acc:	je     0x423ae9
  423ad2:	mov    eax,DWORD PTR [ebp-0x10]
  423ad5:	xor    eax,ecx
  423ad7:	mov    edx,0xffcd8d0f
  423adc:	sub    edx,eax
  423ade:	add    DWORD PTR [ebp-0x4],edx
  423ae1:	mov    eax,DWORD PTR [ebp-0x4]
  423ae4:	jmp    0x423a8a
  423ae9:	mov    eax,DWORD PTR [ebp-0x14]
  423aec:	mov    eax,DWORD PTR [eax]
  423aee:	mov    edx,DWORD PTR [ebp-0x4]
  423af1:	mov    edx,DWORD PTR [edx+0x3c]
  423af4:	lea    eax,[edx+eax*8+0x78]
  423af8:	mov    edx,DWORD PTR [ebp-0x4]
  423afb:	mov    eax,DWORD PTR [eax+edx*1]
  423afe:	mov    DWORD PTR [ebp-0x8],eax
  423b01:	mov    eax,DWORD PTR [ebp+0x8]
  423b04:	xor    eax,ecx
  423b06:	add    eax,esi
  423b08:	mov    DWORD PTR [ebp-0x14],eax
  423b0b:	mov    eax,DWORD PTR [ebp+0x8]
  423b0e:	mov    edx,DWORD PTR [ebp-0x8]
  423b11:	xor    eax,ecx
  423b13:	add    eax,esi
  423b15:	cmp    edx,eax
  423b17:	jne    0x423b35
  423b1d:	mov    eax,DWORD PTR [ebp+0xc]
  423b20:	xor    eax,ecx
  423b22:	mov    ecx,DWORD PTR [ebp-0x8]
  423b25:	add    eax,esi
  423b27:	imul   eax,ecx
  423b2a:	mov    DWORD PTR [ebp-0x8],eax
  423b2d:	push   DWORD PTR [ebp+0x18]
  423b30:	jmp    0x423b90
  423b35:	mov    eax,DWORD PTR [ebp-0x8]
  423b38:	mov    ecx,DWORD PTR [ebp-0x4]
  423b3b:	add    eax,ecx
  423b3d:	mov    DWORD PTR [ebp-0x14],eax
  423b40:	mov    eax,DWORD PTR [ebp-0x14]
  423b43:	mov    eax,DWORD PTR [eax+0xc]
  423b46:	movsx  eax,BYTE PTR [eax+ecx*1]
  423b4a:	cdq    
  423b4b:	add    eax,ebx
  423b4d:	adc    edx,0xffffffff
  423b50:	xor    eax,edi
  423b52:	xor    edx,0x0
  423b55:	cmp    eax,0x70941e1e
  423b5a:	jne    0x423b2d
  423b60:	cmp    edx,0xffffffff
  423b63:	jne    0x423b2d
  423b69:	mov    eax,ds:0x42941e
  423b6e:	mov    eax,DWORD PTR [eax+0x198]
  423b74:	mov    DWORD PTR [eax],ecx
  423b76:	mov    eax,ecx
  423b78:	jmp    0x423ba1
  423b7d:	mov    eax,DWORD PTR [ebp+0x18]
  423b80:	cmp    eax,0xf89c85ba
  423b85:	jne    0x423ba1
  423b8b:	push   0xf89c85bb
  423b90:	push   DWORD PTR [ebp+0x14]
  423b93:	push   DWORD PTR [ebp+0x10]
  423b96:	push   DWORD PTR [ebp+0xc]
  423b99:	push   DWORD PTR [ebp+0x8]
  423b9c:	call   0x423529
  423ba1:	pop    edi
  423ba2:	pop    ebx
  423ba3:	pop    esi
  423ba4:	leave  
  423ba5:	ret    0x14
  423ba8:	push   ebp
  423ba9:	mov    ebp,esp
  423bab:	and    esp,0xfffffff8
  423bae:	mov    DWORD PTR ds:0x42a276,0x3141
  423bb8:	sub    esp,0x3fc
  423bbe:	mov    DWORD PTR ds:0x42a2fa,0x2654
  423bc8:	push   ebx
  423bc9:	push   esi
  423bca:	adc    DWORD PTR ds:0x42a2f2,0x42a2e6
  423bd4:	push   edi
  423bd5:	xor    edi,edi
  423bd7:	or     DWORD PTR ds:0x42a256,0x42a2de
  423be1:	push   edi
  423be2:	call   DWORD PTR ds:0x42a3b6
  423be8:	add    DWORD PTR ds:0x42a2e2,0x667e
  423bf2:	mov    DWORD PTR [esp+0x10],eax
  423bf6:	sbb    DWORD PTR ds:0x42a2f2,0x42a27e
  423c00:	lea    eax,[esp+0x78]
  423c04:	push   eax
  423c05:	sbb    DWORD PTR ds:0x42a302,0x70a3
  423c0f:	push   0x429542
  423c14:	or     DWORD PTR ds:0x42a2be,0x4f4
  423c1e:	call   DWORD PTR ds:0x42a3c6
  423c24:	mov    DWORD PTR ds:0x42a2c6,0x224d
  423c2e:	cmp    eax,0xffffffff
  423c31:	mov    DWORD PTR ds:0x42a26a,0x664
  423c3b:	je     0x423c52
  423c41:	xor    eax,eax
  423c43:	mov    DWORD PTR ds:0x42a2ee,0x6e63
  423c4d:	jmp    0x424ea4
  423c52:	mov    DWORD PTR ds:0x42a2ee,0x3a46
  423c5c:	mov    esi,DWORD PTR ds:0x42a3fe
  423c62:	push   0xf
  423c64:	lea    eax,[esp+0x44]
  423c68:	xor    DWORD PTR ds:0x42a26a,0x150a
  423c72:	push   eax
  423c73:	push   0x429556
  423c78:	push   0x42956a
  423c7d:	xor    DWORD PTR ds:0x42a2de,0x3930
  423c87:	push   0x42958a
  423c8c:	call   esi
  423c8e:	imul   eax,eax,0x300000
  423c94:	cmp    eax,0x1b00000
  423c99:	jne    0x423c41
  423c9f:	sub    DWORD PTR ds:0x42a26a,0x42a2e2
  423ca9:	lea    eax,[esp+0x1b8]
  423cb0:	adc    DWORD PTR ds:0x42a28e,0x3c8a
  423cba:	push   eax
  423cbb:	push   0x4295c6
  423cc0:	call   DWORD PTR ds:0x42a3e6
  423cc6:	mov    DWORD PTR ds:0x42a2ca,0x78b4
  423cd0:	cmp    eax,0xffffffff
  423cd3:	mov    DWORD PTR ds:0x42a296,0x5d2d
  423cdd:	jne    0x423c41
  423ce3:	and    DWORD PTR ds:0x42a25e,0x42a266
  423ced:	push   DWORD PTR [esp+0x10]
  423cf1:	push   edi
  423cf2:	call   DWORD PTR ds:0x42a3ba
  423cf8:	add    DWORD PTR ds:0x42a256,0x6e9d
  423d02:	mov    DWORD PTR [esp+0x30],edi
  423d06:	or     ecx,ecx
  423d08:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423d10:	mov    DWORD PTR ds:0x42a2ba,0x17
  423d1a:	cmp    DWORD PTR ds:0x42a2ba,0x0
  423d21:	je     0x423d84
  423d27:	cmp    DWORD PTR ds:0x42a2ba,0x4
  423d2e:	jl     0x423d84
  423d34:	jmp    0x423d56
  423d39:	push   0x1
  423d3b:	push   0x4b19
  423d40:	push   DWORD PTR [ebp-0x1c]
  423d43:	push   0x1751
  423d48:	push   0x1baf
  423d4d:	push   DWORD PTR [ebp-0x24]
  423d50:	call   DWORD PTR ds:0x42a3c2
  423d56:	cmp    DWORD PTR ds:0x42a2ba,0x5
  423d5d:	jne    0x423d70
  423d63:	mov    ecx,DWORD PTR ds:0x42a2ba
  423d69:	dec    ecx
  423d6a:	mov    DWORD PTR ds:0x42a2ba,ecx
  423d70:	xor    ecx,ecx
  423d72:	xor    ecx,DWORD PTR ds:0x42a2ba
  423d78:	dec    ecx
  423d79:	mov    DWORD PTR ds:0x42a2ba,ecx
  423d7f:	jmp    0x423d1a
  423d84:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423d8c:	adc    DWORD PTR ds:0x42a292,edx
  423d92:	lea    eax,[esp+0x3c]
  423d96:	mov    edi,DWORD PTR ds:0x42a2ba
  423d9c:	or     DWORD PTR ds:0x42a26e,edi
  423da2:	mov    DWORD PTR [esp+0x30],eax
  423da6:	lea    eax,[esp+0x38]
  423daa:	and    edi,ecx
  423dac:	mov    DWORD PTR [esp+0x10],eax
  423db0:	add    edi,ecx
  423db2:	mov    eax,ds:0x42941e
  423db7:	and    DWORD PTR ds:0x42a25a,0x0
  423dc1:	jmp    0x423dd3
  423dc6:	mov    edi,DWORD PTR ds:0x42a25a
  423dcc:	inc    edi
  423dcd:	mov    DWORD PTR ds:0x42a25a,edi
  423dd3:	cmp    DWORD PTR ds:0x42a25a,0x16
  423dda:	jae    0x423e07
  423de0:	cmp    DWORD PTR ds:0x42a25a,0x17
  423de7:	jbe    0x423e07
  423ded:	jmp    0x423e02
  423df2:	push   0x42a256
  423df7:	push   0x42919f
  423dfc:	call   DWORD PTR ds:0x42a3ca
  423e02:	jmp    0x423dc6
  423e07:	mov    eax,DWORD PTR [eax+0x1c8]
  423e0d:	sbb    ebx,edi
  423e0f:	mov    eax,DWORD PTR [eax]
  423e11:	add    DWORD PTR ds:0x42a26a,0x5b95
  423e1b:	mov    ecx,DWORD PTR [esp+0x10]
  423e1f:	mov    edi,0x75108aa
  423e24:	mov    ebx,DWORD PTR ds:0x42a2e6
  423e2a:	sbb    DWORD PTR ds:0x42a25e,ebx
  423e30:	xor    eax,edi
  423e32:	adc    DWORD PTR ds:0x42a2fe,0x37f0
  423e3c:	mov    ebx,0x3272f1
  423e41:	add    DWORD PTR ds:0x42a2ae,0x42a2b2
  423e4b:	add    eax,ebx
  423e4d:	not    DWORD PTR ds:0x42a2ae
  423e53:	mov    DWORD PTR [ecx],eax
  423e55:	mov    DWORD PTR ds:0x42a2d6,0x5252
  423e5f:	mov    eax,ds:0x42a11a
  423e64:	cmp    eax,0x445cecf9
  423e69:	mov    DWORD PTR ds:0x42a2c6,0x4b3f
  423e73:	jne    0x423f61
  423e79:	mov    eax,DWORD PTR [esp+0x20]
  423e7d:	and    DWORD PTR ds:0x42a2b6,0x0
  423e87:	jmp    0x423e99
  423e8c:	mov    ecx,DWORD PTR ds:0x42a2b6
  423e92:	inc    ecx
  423e93:	mov    DWORD PTR ds:0x42a2b6,ecx
  423e99:	cmp    DWORD PTR ds:0x42a2b6,0x14
  423ea0:	jae    0x423ee9
  423ea6:	cmp    DWORD PTR ds:0x42a2b6,0x8
  423ead:	ja     0x423ee9
  423eb3:	jmp    0x423ec8
  423eb8:	push   0x84fb
  423ebd:	push   0x42a28e
  423ec2:	call   DWORD PTR ds:0x42a3ce
  423ec8:	cmp    DWORD PTR ds:0x42a2b6,0x7
  423ecf:	jne    0x423ee4
  423ed5:	xor    ecx,ecx
  423ed7:	add    ecx,DWORD PTR ds:0x42a2b6
  423edd:	inc    ecx
  423ede:	mov    DWORD PTR ds:0x42a2b6,ecx
  423ee4:	jmp    0x423e8c
  423ee9:	mov    ecx,DWORD PTR ds:0x42941e
  423eef:	adc    DWORD PTR ds:0x42a2be,0x42a2b2
  423ef9:	mov    ecx,DWORD PTR [ecx+0x198]
  423eff:	adc    DWORD PTR ds:0x42a2ae,0x42a29a
  423f09:	xor    eax,edi
  423f0b:	sub    DWORD PTR ds:0x42a27a,0x42a2a2
  423f15:	add    eax,ebx
  423f17:	add    DWORD PTR ds:0x42a26a,0x42a266
  423f21:	mov    DWORD PTR [ecx],eax
  423f23:	mov    eax,DWORD PTR [esp+0x20]
  423f27:	xor    eax,edi
  423f29:	not    DWORD PTR ds:0x42a2be
  423f2f:	add    eax,ebx
  423f31:	sbb    DWORD PTR ds:0x42a2f6,0x42a2de
  423f3b:	mov    ds:0x42a11a,eax
  423f40:	mov    eax,DWORD PTR [esp+0x20]
  423f44:	sbb    DWORD PTR ds:0x42a286,0x42a26a
  423f4e:	xor    eax,edi
  423f50:	sub    DWORD PTR ds:0x42a272,0x5dcc
  423f5a:	add    eax,ebx
  423f5c:	mov    ds:0x429516,eax
  423f61:	and    DWORD PTR ds:0x42a2ce,0x0
  423f6b:	xor    eax,eax
  423f6d:	xor    eax,DWORD PTR ds:0x42a2ce
  423f73:	inc    eax
  423f74:	mov    ds:0x42a2ce,eax
  423f79:	cmp    DWORD PTR ds:0x42a2ce,0x10
  423f80:	jg     0x423fc6
  423f86:	jmp    0x423fa1
  423f8b:	push   DWORD PTR [ebp-0x18]
  423f8e:	push   0x42a2b6
  423f93:	push   DWORD PTR [ebp-0x10]
  423f96:	push   0x4828
  423f9b:	call   DWORD PTR ds:0x42a3d2
  423fa1:	cmp    DWORD PTR ds:0x42a2ce,0xf
  423fa8:	jne    0x423fb9
  423fae:	mov    eax,ds:0x42a2ce
  423fb3:	inc    eax
  423fb4:	mov    ds:0x42a2ce,eax
  423fb9:	cmp    DWORD PTR ds:0x42a2ce,0x1a
  423fc0:	jb     0x423f6b
  423fc6:	mov    eax,ds:0x42941e
  423fcb:	mov    eax,DWORD PTR [eax+0x18c]
  423fd1:	add    DWORD PTR ds:0x42a28e,0x42a292
  423fdb:	mov    eax,DWORD PTR [eax]
  423fdd:	neg    DWORD PTR ds:0x42a302
  423fe3:	mov    DWORD PTR [esp+0x60],eax
  423fe7:	xor    eax,eax
  423fe9:	xor    eax,DWORD PTR ds:0x42a27a
  423fef:	xor    eax,DWORD PTR ds:0x42a266
  423ff5:	mov    ds:0x42a27a,eax
  423ffa:	mov    eax,0xf89c85b9
  423fff:	mov    DWORD PTR [esp+0x18],eax
  424003:	mov    DWORD PTR [esp+0x18],eax
  424007:	and    DWORD PTR ds:0x42a2ae,0xe84
  424011:	mov    DWORD PTR [esp+0x18],eax
  424015:	sub    DWORD PTR ds:0x42a2ce,0x42a2d6
  42401f:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  424027:	adc    DWORD PTR ds:0x42a2f2,0x42a29a
  424031:	mov    DWORD PTR [esp+0x10],eax
  424035:	xor    eax,0x48fc
  42403a:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  424042:	mov    eax,DWORD PTR [esp+0x20]
  424046:	add    DWORD PTR ds:0x42a2fa,0x42a25e
  424050:	xor    eax,edi
  424052:	sub    DWORD PTR ds:0x42a29a,0x2bd1
  42405c:	add    eax,ebx
  42405e:	mov    DWORD PTR ds:0x42a276,0x6294
  424068:	jmp    0x4242ac
  42406d:	lea    eax,[esp+0x78]
  424071:	push   eax
  424072:	dec    DWORD PTR ds:0x42a292
  424078:	push   0x4295b2
  42407d:	adc    DWORD PTR ds:0x42a2fa,0x42a2de
  424087:	call   DWORD PTR ds:0x42a3c6
  42408d:	mov    DWORD PTR ds:0x42a262,0x2f3f
  424097:	cmp    eax,0xffffffff
  42409a:	jne    0x423c41
  4240a0:	add    DWORD PTR ds:0x42a2da,0x42a2d2
  4240aa:	push   0xf
  4240ac:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  4240b6:	lea    eax,[esp+0x44]
  4240ba:	push   eax
  4240bb:	push   0x429606
  4240c0:	push   0x42961a
  4240c5:	push   0x42963a
  4240ca:	call   esi
  4240cc:	or     DWORD PTR ds:0x42a2fa,0x3e60
  4240d6:	imul   eax,eax,0x300000
  4240dc:	mov    DWORD PTR ds:0x42a2ae,0x6f02
  4240e6:	cmp    eax,0x1b00000
  4240eb:	mov    DWORD PTR ds:0x42a256,0x6c6e
  4240f5:	jne    0x423c41
  4240fb:	or     DWORD PTR ds:0x42a2ea,0x2c5c
  424105:	lea    eax,[esp+0x1b8]
  42410c:	push   eax
  42410d:	push   0x429676
  424112:	add    DWORD PTR ds:0x42a2de,0x42a26e
  42411c:	call   DWORD PTR ds:0x42a3e6
  424122:	mov    DWORD PTR ds:0x42a27e,0xb7
  42412c:	cmp    eax,0xffffffff
  42412f:	mov    DWORD PTR ds:0x42a29a,0x2154
  424139:	jne    0x423c41
  42413f:	xor    DWORD PTR ds:0x42a2ae,0x154c
  424149:	mov    eax,DWORD PTR [esp+0xc]
  42414d:	mov    DWORD PTR ds:0x42a26e,0x11
  424157:	cmp    DWORD PTR ds:0x42a26e,0x0
  42415e:	je     0x4241a9
  424164:	cmp    DWORD PTR ds:0x42a26e,0x12
  42416b:	jge    0x4241a9
  424171:	jmp    0x424197
  424176:	push   DWORD PTR [ebp-0x28]
  424179:	push   DWORD PTR [ebp-0x24]
  42417c:	push   DWORD PTR [ebp-0x24]
  42417f:	push   0x7e73
  424184:	push   DWORD PTR [ebp-0x18]
  424187:	push   0x85b3
  42418c:	push   0x429247
  424191:	call   DWORD PTR ds:0x42a3d6
  424197:	mov    ecx,DWORD PTR ds:0x42a26e
  42419d:	dec    ecx
  42419e:	mov    DWORD PTR ds:0x42a26e,ecx
  4241a4:	jmp    0x424157
  4241a9:	mov    ecx,DWORD PTR [esp+0x10]
  4241ad:	adc    DWORD PTR ds:0x42a2ae,0x42a2d2
  4241b7:	xor    eax,edi
  4241b9:	lea    eax,[eax+ecx*1+0x3272f1]
  4241c0:	push   eax
  4241c1:	and    DWORD PTR ds:0x42a2ea,0x0
  4241cb:	mov    eax,ds:0x42a2ea
  4241d0:	inc    eax
  4241d1:	mov    ds:0x42a2ea,eax
  4241d6:	cmp    DWORD PTR ds:0x42a2ea,0x26
  4241dd:	jbe    0x4241fb
  4241e3:	jmp    0x4241ee
  4241e8:	call   DWORD PTR ds:0x42a3da
  4241ee:	cmp    DWORD PTR ds:0x42a2ea,0x1a
  4241f5:	jb     0x4241cb
  4241fb:	mov    eax,DWORD PTR [esp+0x1c]
  4241ff:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  424209:	xor    eax,edi
  42420b:	lea    eax,[ebp+eax*1+0x3272f9]
  424212:	push   eax
  424213:	mov    eax,ds:0x42941e
  424218:	push   DWORD PTR [eax+0x1bc]
  42421e:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  424228:	call   0x424ead
  42422d:	mov    eax,DWORD PTR [esp+0xc]
  424231:	mov    ecx,DWORD PTR [esp+0x10]
  424235:	and    DWORD PTR ds:0x42a2aa,0x0
  42423f:	mov    edx,DWORD PTR ds:0x42a2aa
  424245:	inc    edx
  424246:	mov    DWORD PTR ds:0x42a2aa,edx
  42424c:	cmp    DWORD PTR ds:0x42a2aa,0x9
  424253:	jg     0x42429d
  424259:	jmp    0x424274
  42425e:	push   DWORD PTR [ebp-0x10]
  424261:	push   0x1529
  424266:	push   DWORD PTR [ebp-0x28]
  424269:	push   0x155a
  42426e:	call   DWORD PTR ds:0x42a3de
  424274:	cmp    DWORD PTR ds:0x42a2aa,0x8
  42427b:	jne    0x424290
  424281:	xor    edx,edx
  424283:	or     edx,DWORD PTR ds:0x42a2aa
  424289:	inc    edx
  42428a:	mov    DWORD PTR ds:0x42a2aa,edx
  424290:	cmp    DWORD PTR ds:0x42a2aa,0x1e
  424297:	jb     0x42423f
  42429d:	xor    eax,edi
  42429f:	adc    DWORD PTR ds:0x42a256,ebx
  4242a5:	lea    eax,[ecx+eax*1+0x3272f1]
  4242ac:	movzx  ecx,WORD PTR ds:0x42a2a6
  4242b3:	xor    DWORD PTR ds:0x42a29e,ecx
  4242b9:	mov    ecx,DWORD PTR [esp+0xc]
  4242bd:	mov    edx,DWORD PTR [esp+0xc]
  4242c1:	adc    DWORD PTR ds:0x42a2b6,0x42a2ee
  4242cb:	xor    edx,edi
  4242cd:	xor    ecx,edi
  4242cf:	add    ecx,edx
  4242d1:	mov    edx,DWORD PTR [esp+0xc]
  4242d5:	xor    edx,edi
  4242d7:	lea    ecx,[ecx+edx*1+0x9758d3]
  4242de:	mov    DWORD PTR ds:0x42a2ea,0x175a
  4242e8:	mov    DWORD PTR [esp+0x10],eax
  4242ec:	mov    DWORD PTR ds:0x42a28e,0x2b18
  4242f6:	cmp    eax,ecx
  4242f8:	jbe    0x42406d
  4242fe:	or     ecx,DWORD PTR ds:0x42a286
  424304:	mov    eax,DWORD PTR [ebp+0xc]
  424307:	mov    ds:0x4292a2,eax
  42430c:	mov    eax,DWORD PTR [ebp+0x10]
  42430f:	and    DWORD PTR ds:0x42a2c2,0x0
  424319:	jmp    0x42432d
  42431e:	xor    ecx,ecx
  424320:	xor    ecx,DWORD PTR ds:0x42a2c2
  424326:	inc    ecx
  424327:	mov    DWORD PTR ds:0x42a2c2,ecx
  42432d:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  424334:	jae    0x424357
  42433a:	cmp    DWORD PTR ds:0x42a2c2,0x29
  424341:	jle    0x424357
  424347:	jmp    0x424352
  42434c:	call   DWORD PTR ds:0x42a3e2
  424352:	jmp    0x42431e
  424357:	mov    ds:0x4294fe,eax
  42435c:	xor    ecx,eax
  42435e:	mov    eax,ds:0x4292a2
  424363:	and    ecx,0x3395
  424369:	mov    ecx,DWORD PTR [esp+0x30]
  42436d:	add    DWORD PTR ds:0x42a2c2,0x886
  424377:	sub    eax,ebx
  424379:	adc    DWORD PTR ds:0x42a2c2,0x4089
  424383:	xor    eax,edi
  424385:	sub    DWORD PTR ds:0x42a2b6,0x2768
  42438f:	mov    DWORD PTR [ecx],eax
  424391:	and    DWORD PTR ds:0x42a2aa,0x51d9
  42439b:	lea    eax,[esp+0x2c]
  42439f:	mov    DWORD PTR [esp+0x6c],eax
  4243a3:	lea    eax,[ebp+0x4]
  4243a6:	mov    DWORD PTR [esp+0x2c],eax
  4243aa:	xor    DWORD PTR ds:0x42a2da,0x6aa
  4243b4:	lea    eax,[esp+0x78]
  4243b8:	sub    DWORD PTR ds:0x42a266,0x42a2ba
  4243c2:	push   eax
  4243c3:	push   0x429662
  4243c8:	sub    DWORD PTR ds:0x42a25e,0x6538
  4243d2:	call   DWORD PTR ds:0x42a3c6
  4243d8:	mov    DWORD PTR ds:0x42a2aa,0x7d87
  4243e2:	cmp    eax,0xffffffff
  4243e5:	jne    0x423c41
  4243eb:	push   0xf
  4243ed:	lea    eax,[esp+0x44]
  4243f1:	push   eax
  4243f2:	and    DWORD PTR ds:0x42a302,0x42a2e2
  4243fc:	push   0x4296b6
  424401:	sub    DWORD PTR ds:0x42a2d2,0x1a40
  42440b:	push   0x4296ca
  424410:	adc    DWORD PTR ds:0x42a302,0xcfc
  42441a:	push   0x4296ea
  42441f:	add    DWORD PTR ds:0x42a292,0x42a286
  424429:	call   esi
  42442b:	xor    DWORD PTR ds:0x42a2aa,0x42a302
  424435:	imul   eax,eax,0x300000
  42443b:	cmp    eax,0x1b00000
  424440:	mov    DWORD PTR ds:0x42a2d6,0x3d32
  42444a:	jne    0x423c41
  424450:	lea    eax,[esp+0x1b8]
  424457:	adc    DWORD PTR ds:0x42a29a,0x42a2c6
  424461:	push   eax
  424462:	and    DWORD PTR ds:0x42a2ea,0x7bce
  42446c:	push   0x429726
  424471:	xor    DWORD PTR ds:0x42a2d2,0x75c
  42447b:	call   DWORD PTR ds:0x42a3e6
  424481:	cmp    eax,0xffffffff
  424484:	mov    DWORD PTR ds:0x42a2d6,0x39fb
  42448e:	jne    0x423c41
  424494:	sbb    DWORD PTR ds:0x42a2ea,0x7658
  42449e:	lea    eax,[esp+0x78]
  4244a2:	push   eax
  4244a3:	push   0x429712
  4244a8:	call   DWORD PTR ds:0x42a3c6
  4244ae:	cmp    eax,0xffffffff
  4244b1:	mov    DWORD PTR ds:0x42a27a,0x74cc
  4244bb:	jne    0x423c41
  4244c1:	adc    DWORD PTR ds:0x42a2be,0x42a2e2
  4244cb:	push   0xf
  4244cd:	and    DWORD PTR ds:0x42a272,0x42a2d6
  4244d7:	lea    eax,[esp+0x44]
  4244db:	xor    DWORD PTR ds:0x42a2da,0x20f3
  4244e5:	push   eax
  4244e6:	sub    DWORD PTR ds:0x42a2f2,0x57ed
  4244f0:	push   0x429766
  4244f5:	push   0x42977a
  4244fa:	push   0x42979a
  4244ff:	sbb    DWORD PTR ds:0x42a272,0x42a302
  424509:	call   esi
  42450b:	imul   eax,eax,0x300000
  424511:	cmp    eax,0x1b00000
  424516:	mov    DWORD PTR ds:0x42a2ea,0x7ab0
  424520:	jne    0x423c41
  424526:	and    DWORD PTR ds:0x42a2e6,0x42a29a
  424530:	lea    eax,[esp+0x1b8]
  424537:	neg    DWORD PTR ds:0x42a26e
  42453d:	push   eax
  42453e:	push   0x4297d6
  424543:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  42454d:	call   DWORD PTR ds:0x42a3e6
  424553:	mov    DWORD PTR ds:0x42a292,0x73e5
  42455d:	cmp    eax,0xffffffff
  424560:	jne    0x423c41
  424566:	lea    eax,[esp+0x78]
  42456a:	xor    DWORD PTR ds:0x42a2ea,0x42a256
  424574:	push   eax
  424575:	and    DWORD PTR ds:0x42a28e,0x42a256
  42457f:	push   0x4297c2
  424584:	sub    DWORD PTR ds:0x42a26e,0xb4e
  42458e:	call   DWORD PTR ds:0x42a3c6
  424594:	mov    DWORD PTR ds:0x42a292,0x325f
  42459e:	cmp    eax,0xffffffff
  4245a1:	mov    DWORD PTR ds:0x42a2d2,0x412a
  4245ab:	jne    0x423c41
  4245b1:	adc    DWORD PTR ds:0x42a28a,0x42a27a
  4245bb:	push   0xf
  4245bd:	lea    eax,[esp+0x44]
  4245c1:	push   eax
  4245c2:	adc    DWORD PTR ds:0x42a28a,0x1e7a
  4245cc:	push   0x429816
  4245d1:	sub    DWORD PTR ds:0x42a2aa,0xfe
  4245db:	push   0x42982a
  4245e0:	sub    DWORD PTR ds:0x42a27e,0x1b5
  4245ea:	push   0x42984a
  4245ef:	adc    DWORD PTR ds:0x42a28e,0x2d72
  4245f9:	call   esi
  4245fb:	imul   eax,eax,0x300000
  424601:	cmp    eax,0x1b00000
  424606:	mov    DWORD PTR ds:0x42a28e,0x482a
  424610:	jne    0x423c41
  424616:	sub    DWORD PTR ds:0x42a25a,0x42a2ba
  424620:	lea    eax,[esp+0x1b8]
  424627:	push   eax
  424628:	adc    DWORD PTR ds:0x42a28e,0x42a2da
  424632:	push   0x429886
  424637:	xor    DWORD PTR ds:0x42a26e,0x42a29a
  424641:	call   DWORD PTR ds:0x42a3e6
  424647:	mov    DWORD PTR ds:0x42a2ca,0x1025
  424651:	cmp    eax,0xffffffff
  424654:	jne    0x423c41
  42465a:	xor    DWORD PTR ds:0x42a2c2,0x449b
  424664:	lea    eax,[esp+0x78]
  424668:	push   eax
  424669:	push   0x429872
  42466e:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  424678:	call   DWORD PTR ds:0x42a3c6
  42467e:	mov    DWORD PTR ds:0x42a2fa,0x2004
  424688:	cmp    eax,0xffffffff
  42468b:	mov    DWORD PTR ds:0x42a296,0x62c6
  424695:	jne    0x423c41
  42469b:	and    DWORD PTR ds:0x42a2de,0x5eb4
  4246a5:	push   0xf
  4246a7:	adc    DWORD PTR ds:0x42a28a,0x4918
  4246b1:	lea    eax,[esp+0x44]
  4246b5:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  4246bf:	push   eax
  4246c0:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  4246ca:	push   0x4298c6
  4246cf:	xor    DWORD PTR ds:0x42a2d2,0x1d8b
  4246d9:	push   0x4298da
  4246de:	and    DWORD PTR ds:0x42a2b6,0x42a302
  4246e8:	push   0x4298fa
  4246ed:	not    DWORD PTR ds:0x42a2d2
  4246f3:	call   esi
  4246f5:	imul   eax,eax,0x300000
  4246fb:	cmp    eax,0x1b00000
  424700:	mov    DWORD PTR ds:0x42a292,0xbee
  42470a:	jne    0x423c41
  424710:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  42471a:	lea    eax,[esp+0x1b8]
  424721:	push   eax
  424722:	or     DWORD PTR ds:0x42a2be,0x2cef
  42472c:	push   0x429936
  424731:	call   DWORD PTR ds:0x42a3e6
  424737:	cmp    eax,0xffffffff
  42473a:	mov    DWORD PTR ds:0x42a2b6,0x6b51
  424744:	jne    0x423c41
  42474a:	sub    DWORD PTR ds:0x42a276,0x363f
  424754:	lea    eax,[esp+0x78]
  424758:	add    DWORD PTR ds:0x42a29e,0x42a302
  424762:	push   eax
  424763:	push   0x429922
  424768:	adc    DWORD PTR ds:0x42a27a,0x42a2c6
  424772:	call   DWORD PTR ds:0x42a3c6
  424778:	cmp    eax,0xffffffff
  42477b:	jne    0x423c41
  424781:	or     DWORD PTR ds:0x42a292,0x4d8b
  42478b:	push   0xf
  42478d:	or     DWORD PTR ds:0x42a2c6,0x42a2d2
  424797:	lea    eax,[esp+0x44]
  42479b:	push   eax
  42479c:	adc    DWORD PTR ds:0x42a2a6,0x7f91
  4247a6:	push   0x429976
  4247ab:	and    DWORD PTR ds:0x42a28e,0x42a27e
  4247b5:	push   0x42998a
  4247ba:	push   0x4299aa
  4247bf:	call   esi
  4247c1:	or     DWORD PTR ds:0x42a2d6,0x5541
  4247cb:	imul   eax,eax,0x300000
  4247d1:	mov    DWORD PTR ds:0x42a292,0x284d
  4247db:	cmp    eax,0x1b00000
  4247e0:	mov    DWORD PTR ds:0x42a302,0x32eb
  4247ea:	jne    0x423c41
  4247f0:	adc    DWORD PTR ds:0x42a2ee,0x651e
  4247fa:	lea    eax,[esp+0x1b8]
  424801:	push   eax
  424802:	and    DWORD PTR ds:0x42a286,0x42a2f2
  42480c:	push   0x4299e6
  424811:	sub    DWORD PTR ds:0x42a2ee,0x3d63
  42481b:	call   DWORD PTR ds:0x42a3e6
  424821:	mov    DWORD PTR ds:0x42a2a2,0x1646
  42482b:	cmp    eax,0xffffffff
  42482e:	jne    0x423c41
  424834:	adc    DWORD PTR ds:0x42a286,0x29d1
  42483e:	lea    eax,[esp+0x78]
  424842:	push   eax
  424843:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  42484d:	push   0x4299d2
  424852:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  42485c:	call   DWORD PTR ds:0x42a3c6
  424862:	cmp    eax,0xffffffff
  424865:	jne    0x423c41
  42486b:	push   0xf
  42486d:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  424877:	lea    eax,[esp+0x44]
  42487b:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424885:	push   eax
  424886:	not    DWORD PTR ds:0x42a25e
  42488c:	push   0x429a26
  424891:	push   0x429a3a
  424896:	or     DWORD PTR ds:0x42a26a,0x42a25e
  4248a0:	push   0x429a5a
  4248a5:	call   esi
  4248a7:	imul   eax,eax,0x300000
  4248ad:	cmp    eax,0x1b00000
  4248b2:	jne    0x423c41
  4248b8:	lea    eax,[esp+0x1b8]
  4248bf:	push   eax
  4248c0:	push   0x429a96
  4248c5:	xor    DWORD PTR ds:0x42a286,0x22c0
  4248cf:	call   DWORD PTR ds:0x42a3e6
  4248d5:	cmp    eax,0xffffffff
  4248d8:	jne    0x423c41
  4248de:	xor    DWORD PTR ds:0x42a2d6,0x42a2f2
  4248e8:	lea    eax,[esp+0x78]
  4248ec:	and    DWORD PTR ds:0x42a272,0x42a2da
  4248f6:	push   eax
  4248f7:	push   0x429a82
  4248fc:	dec    DWORD PTR ds:0x42a2ae
  424902:	call   DWORD PTR ds:0x42a3c6
  424908:	mov    DWORD PTR ds:0x42a296,0x5803
  424912:	cmp    eax,0xffffffff
  424915:	mov    DWORD PTR ds:0x42a2ee,0x7cea
  42491f:	jne    0x423c41
  424925:	xor    DWORD PTR ds:0x42a2c6,0x69dc
  42492f:	push   0xf
  424931:	add    DWORD PTR ds:0x42a302,0x59e7
  42493b:	lea    eax,[esp+0x44]
  42493f:	push   eax
  424940:	push   0x429ad6
  424945:	and    DWORD PTR ds:0x42a2fa,0x200e
  42494f:	push   0x429aea
  424954:	push   0x429b0a
  424959:	call   esi
  42495b:	imul   eax,eax,0x300000
  424961:	cmp    eax,0x1b00000
  424966:	mov    DWORD PTR ds:0x42a29e,0x5c25
  424970:	jne    0x423c41
  424976:	sbb    DWORD PTR ds:0x42a2ce,0x42a2d6
  424980:	lea    eax,[esp+0x1b8]
  424987:	xor    DWORD PTR ds:0x42a2a2,0x42a2aa
  424991:	push   eax
  424992:	push   0x429b46
  424997:	or     DWORD PTR ds:0x42a266,0x3d87
  4249a1:	call   DWORD PTR ds:0x42a3e6
  4249a7:	mov    DWORD PTR ds:0x42a2ca,0x3132
  4249b1:	cmp    eax,0xffffffff
  4249b4:	jne    0x423c41
  4249ba:	lea    eax,[esp+0x78]
  4249be:	push   eax
  4249bf:	push   0x429b32
  4249c4:	call   DWORD PTR ds:0x42a3c6
  4249ca:	cmp    eax,0xffffffff
  4249cd:	jne    0x423c41
  4249d3:	push   0xf
  4249d5:	lea    eax,[esp+0x44]
  4249d9:	push   eax
  4249da:	push   0x429b86
  4249df:	push   0x429b9a
  4249e4:	push   0x429bba
  4249e9:	call   esi
  4249eb:	imul   eax,eax,0x300000
  4249f1:	cmp    eax,0x1b00000
  4249f6:	jne    0x423c41
  4249fc:	lea    eax,[esp+0x1b8]
  424a03:	push   eax
  424a04:	push   0x429bf6
  424a09:	call   DWORD PTR ds:0x42a3e6
  424a0f:	cmp    eax,0xffffffff
  424a12:	jne    0x423c41
  424a18:	lea    eax,[esp+0x78]
  424a1c:	push   eax
  424a1d:	push   0x429be2
  424a22:	call   DWORD PTR ds:0x42a3c6
  424a28:	cmp    eax,0xffffffff
  424a2b:	jne    0x423c41
  424a31:	push   0xf
  424a33:	lea    eax,[esp+0x44]
  424a37:	push   eax
  424a38:	push   0x429c36
  424a3d:	push   0x429c4a
  424a42:	push   0x429c6a
  424a47:	call   esi
  424a49:	imul   eax,eax,0x300000
  424a4f:	cmp    eax,0x1b00000
  424a54:	jne    0x423c41
  424a5a:	lea    eax,[esp+0x1b8]
  424a61:	push   eax
  424a62:	push   0x429ca6
  424a67:	call   DWORD PTR ds:0x42a3e6
  424a6d:	cmp    eax,0xffffffff
  424a70:	jne    0x423c41
  424a76:	lea    eax,[esp+0x78]
  424a7a:	push   eax
  424a7b:	push   0x429c92
  424a80:	call   DWORD PTR ds:0x42a3c6
  424a86:	cmp    eax,0xffffffff
  424a89:	jne    0x423c41
  424a8f:	push   0xf
  424a91:	lea    eax,[esp+0x44]
  424a95:	push   eax
  424a96:	push   0x429ce6
  424a9b:	push   0x429cfa
  424aa0:	push   0x429d1a
  424aa5:	call   esi
  424aa7:	imul   eax,eax,0x300000
  424aad:	cmp    eax,0x1b00000
  424ab2:	jne    0x423c41
  424ab8:	lea    eax,[esp+0x1b8]
  424abf:	push   eax
  424ac0:	push   0x429d56
  424ac5:	call   DWORD PTR ds:0x42a3e6
  424acb:	cmp    eax,0xffffffff
  424ace:	jne    0x423c41
  424ad4:	lea    eax,[esp+0x78]
  424ad8:	push   eax
  424ad9:	push   0x429d42
  424ade:	call   DWORD PTR ds:0x42a3c6
  424ae4:	cmp    eax,0xffffffff
  424ae7:	jne    0x423c41
  424aed:	push   0xf
  424aef:	lea    eax,[esp+0x44]
  424af3:	push   eax
  424af4:	push   0x429d96
  424af9:	push   0x429daa
  424afe:	push   0x429dca
  424b03:	call   esi
  424b05:	imul   eax,eax,0x300000
  424b0b:	cmp    eax,0x1b00000
  424b10:	jne    0x423c41
  424b16:	lea    eax,[esp+0x1b8]
  424b1d:	push   eax
  424b1e:	push   0x429e06
  424b23:	call   DWORD PTR ds:0x42a3e6
  424b29:	cmp    eax,0xffffffff
  424b2c:	jne    0x423c41
  424b32:	lea    eax,[esp+0x78]
  424b36:	push   eax
  424b37:	push   0x429df2
  424b3c:	call   DWORD PTR ds:0x42a3c6
  424b42:	cmp    eax,0xffffffff
  424b45:	jne    0x423c41
  424b4b:	push   0xf
  424b4d:	lea    eax,[esp+0x44]
  424b51:	push   eax
  424b52:	push   0x429e46
  424b57:	push   0x429e5a
  424b5c:	push   0x429e7a
  424b61:	call   esi
  424b63:	imul   eax,eax,0x300000
  424b69:	cmp    eax,0x1b00000
  424b6e:	jne    0x423c41
  424b74:	lea    eax,[esp+0x1b8]
  424b7b:	push   eax
  424b7c:	push   0x429eb6
  424b81:	call   DWORD PTR ds:0x42a3e6
  424b87:	cmp    eax,0xffffffff
  424b8a:	jne    0x423c41
  424b90:	mov    eax,DWORD PTR [esp+0x3c]
  424b94:	cmp    eax,0xf89c85ba
  424b99:	je     0x424bf8
  424b9f:	mov    eax,DWORD PTR [esp+0x20]
  424ba3:	mov    ecx,DWORD PTR [esp+0x38]
  424ba7:	xor    eax,edi
  424ba9:	add    eax,ebx
  424bab:	cmp    eax,ecx
  424bad:	je     0x424bf8
  424bb3:	mov    eax,ds:0x42941e
  424bb8:	mov    eax,DWORD PTR [eax+0x194]
  424bbe:	mov    ecx,DWORD PTR [eax]
  424bc0:	mov    eax,DWORD PTR [ecx+0x3c]
  424bc3:	push   DWORD PTR ds:0x4294fe
  424bc9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424bcd:	push   DWORD PTR ds:0x4292a2
  424bd3:	add    eax,ecx
  424bd5:	mov    ecx,DWORD PTR ds:0x42941e
  424bdb:	mov    ecx,DWORD PTR [ecx+0x194]
  424be1:	push   DWORD PTR [ecx]
  424be3:	call   eax
  424be5:	mov    ecx,DWORD PTR ds:0x42941e
  424beb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424bf1:	mov    DWORD PTR [ecx],eax
  424bf3:	jmp    0x424e25
  424bf8:	mov    eax,DWORD PTR [esp+0x20]
  424bfc:	mov    ecx,DWORD PTR [esp+0x60]
  424c00:	xor    eax,edi
  424c02:	add    eax,ebx
  424c04:	cmp    eax,ecx
  424c06:	jne    0x424c6f
  424c0c:	mov    eax,DWORD PTR [esp+0x20]
  424c10:	mov    ecx,DWORD PTR ds:0x42941e
  424c16:	mov    ecx,DWORD PTR [ecx+0x198]
  424c1c:	xor    eax,edi
  424c1e:	add    eax,ebx
  424c20:	cmp    eax,DWORD PTR [ecx]
  424c22:	jne    0x424c48
  424c28:	mov    eax,DWORD PTR [esp+0x20]
  424c2c:	push   0xf89c85a5
  424c31:	xor    eax,edi
  424c33:	add    eax,ebx
  424c35:	push   eax
  424c36:	push   0xf89c85b9
  424c3b:	push   DWORD PTR [esp+0x18]
  424c3f:	push   DWORD PTR [esp+0x30]
  424c43:	call   0x423529
  424c48:	push   DWORD PTR [esp+0xc]
  424c4c:	push   DWORD PTR [esp+0x24]
  424c50:	call   0x401000
  424c55:	mov    eax,DWORD PTR [esp+0x20]
  424c59:	xor    eax,edi
  424c5b:	add    eax,ebx
  424c5d:	mov    ds:0x4294aa,eax
  424c62:	mov    eax,DWORD PTR [esp+0x20]
  424c66:	xor    eax,edi
  424c68:	add    eax,ebx
  424c6a:	mov    ds:0x4294a2,eax
  424c6f:	mov    eax,DWORD PTR [esp+0x2c]
  424c73:	test   eax,eax
  424c75:	je     0x424e25
  424c7b:	lea    eax,[esp+0x78]
  424c7f:	mov    DWORD PTR [esp+0x64],0xf152c32
  424c87:	push   eax
  424c88:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424c90:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424c98:	push   0x429ea2
  424c9d:	mov    DWORD PTR [esp+0x70],0x72670add
  424ca5:	call   DWORD PTR ds:0x42a3c6
  424cab:	cmp    eax,0xffffffff
  424cae:	jne    0x423c41
  424cb4:	push   0xf
  424cb6:	lea    eax,[esp+0x44]
  424cba:	push   eax
  424cbb:	push   0x429ef6
  424cc0:	push   0x429f0a
  424cc5:	push   0x429f2a
  424cca:	call   esi
  424ccc:	imul   eax,eax,0x300000
  424cd2:	cmp    eax,0x1b00000
  424cd7:	jne    0x423c41
  424cdd:	lea    eax,[esp+0x1b8]
  424ce4:	push   eax
  424ce5:	push   0x429f66
  424cea:	call   DWORD PTR ds:0x42a3e6
  424cf0:	cmp    eax,0xffffffff
  424cf3:	jne    0x423c41
  424cf9:	call   0x4231ae
  424cfe:	mov    eax,DWORD PTR [esp+0x34]
  424d02:	mov    eax,DWORD PTR [esp+0xc]
  424d06:	mov    DWORD PTR [esp+0x30],eax
  424d0a:	mov    eax,DWORD PTR [esp+0x20]
  424d0e:	mov    DWORD PTR [esp+0xc],eax
  424d12:	mov    eax,eax
  424d14:	mov    eax,ds:0x42941e
  424d19:	mov    ecx,DWORD PTR [eax+0x1c0]
  424d1f:	mov    edx,DWORD PTR [ecx]
  424d21:	and    DWORD PTR [esp+0x1c],0x0
  424d26:	mov    esi,0xfabdbed8
  424d2b:	add    edx,esi
  424d2d:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424d32:	mov    ecx,0x8a29a13d
  424d37:	xor    edx,ecx
  424d39:	mov    DWORD PTR [esp+0x10],edx
  424d3d:	mov    edx,DWORD PTR [esp+0x1c]
  424d41:	xor    edx,0x0
  424d44:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424d4c:	mov    DWORD PTR [esp+0x14],edx
  424d50:	jne    0x424d5f
  424d56:	cmp    edx,0xffffffff
  424d59:	je     0x424dc8
  424d5f:	mov    eax,DWORD PTR [eax+0x1c8]
  424d65:	mov    eax,DWORD PTR [eax]
  424d67:	cdq    
  424d68:	add    eax,esi
  424d6a:	adc    edx,0xffffffff
  424d6d:	and    DWORD PTR [esp+0x1c],0x0
  424d72:	xor    edx,0x0
  424d75:	mov    DWORD PTR [esp+0x24],edx
  424d79:	mov    edx,DWORD PTR [esp+0xc]
  424d7d:	mov    DWORD PTR [esp+0x18],edx
  424d81:	xor    eax,ecx
  424d83:	add    DWORD PTR [esp+0x18],esi
  424d87:	mov    edx,DWORD PTR [esp+0x18]
  424d8b:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424d90:	xor    edx,ecx
  424d92:	mov    DWORD PTR [esp+0x10],edx
  424d96:	mov    edx,DWORD PTR [esp+0x1c]
  424d9a:	xor    edx,0x0
  424d9d:	mov    DWORD PTR [esp+0x14],edx
  424da1:	cmp    DWORD PTR [esp+0x10],eax
  424da5:	jne    0x424db7
  424dab:	mov    eax,DWORD PTR [esp+0x24]
  424daf:	cmp    edx,eax
  424db1:	je     0x424dc8
  424db7:	mov    eax,DWORD PTR [esp+0xc]
  424dbb:	add    eax,DWORD PTR [esp+0x30]
  424dbf:	mov    DWORD PTR [esp+0xc],eax
  424dc3:	jmp    0x424e25
  424dc8:	mov    eax,ds:0x4294a2
  424dcd:	mov    edx,DWORD PTR ds:0x4294aa
  424dd3:	xor    eax,edx
  424dd5:	mov    ds:0x4294a2,eax
  424dda:	mov    edx,DWORD PTR ds:0x4294a2
  424de0:	mov    eax,DWORD PTR [esp+0x2c]
  424de4:	add    DWORD PTR [eax],edx
  424de6:	mov    edx,DWORD PTR [esp+0xc]
  424dea:	mov    eax,ds:0x4294a2
  424def:	xor    edx,edi
  424df1:	add    edx,ebx
  424df3:	xor    ebx,ebx
  424df5:	add    edx,esi
  424df7:	adc    ebx,0xffffffff
  424dfa:	xor    edi,edi
  424dfc:	xor    edx,ecx
  424dfe:	xor    ebx,0x0
  424e01:	add    eax,esi
  424e03:	adc    edi,0xffffffff
  424e06:	xor    eax,ecx
  424e08:	xor    edi,0x0
  424e0b:	cmp    eax,edx
  424e0d:	jne    0x424e25
  424e13:	cmp    edi,ebx
  424e15:	jne    0x424e25
  424e1b:	mov    eax,ds:0x4294a2
  424e20:	mov    ds:0x4294aa,eax
  424e25:	lea    eax,[esp+0x78]
  424e29:	push   eax
  424e2a:	push   0x429f52
  424e2f:	call   DWORD PTR ds:0x42a3c6
  424e35:	cmp    eax,0xffffffff
  424e38:	jne    0x423c41
  424e3e:	push   0xf
  424e40:	lea    eax,[esp+0x44]
  424e44:	push   eax
  424e45:	push   0x429fa6
  424e4a:	push   0x429fba
  424e4f:	push   0x429fda
  424e54:	call   DWORD PTR ds:0x42a3fe
  424e5a:	imul   eax,eax,0x300000
  424e60:	cmp    eax,0x1b00000
  424e65:	jne    0x423c41
  424e6b:	lea    eax,[esp+0x1b8]
  424e72:	push   eax
  424e73:	push   0x42a006
  424e78:	call   DWORD PTR ds:0x42a3e6
  424e7e:	cmp    eax,0xffffffff
  424e81:	jne    0x423c41
  424e87:	mov    eax,ds:0x42941e
  424e8c:	push   0x4
  424e8e:	add    eax,0x1cc
  424e93:	push   eax
  424e94:	lea    eax,[esp+0x3c]
  424e98:	push   eax
  424e99:	call   0x424ead
  424e9e:	mov    eax,DWORD PTR [esp+0x34]
  424ea2:	mov    eax,DWORD PTR [eax]
  424ea4:	pop    edi
  424ea5:	pop    esi
  424ea6:	pop    ebx
  424ea7:	mov    esp,ebp
  424ea9:	pop    ebp
  424eaa:	ret    0xc
  424ead:	push   ebp
  424eae:	mov    ebp,esp
  424eb0:	sub    esp,0x10
  424eb3:	and    DWORD PTR ds:0x42a2ea,0x0
  424ebd:	mov    ecx,DWORD PTR ds:0x42a2ea
  424ec3:	inc    ecx
  424ec4:	mov    DWORD PTR ds:0x42a2ea,ecx
  424eca:	cmp    DWORD PTR ds:0x42a2ea,0x8
  424ed1:	jg     0x424f1d
  424ed7:	jmp    0x424ef6
  424edc:	push   0x42a27e
  424ee1:	push   0x3925
  424ee6:	push   0x42912e
  424eeb:	push   0x429024
  424ef0:	call   DWORD PTR ds:0x42a3ea
  424ef6:	cmp    DWORD PTR ds:0x42a2ea,0x7
  424efd:	jne    0x424f10
  424f03:	mov    ecx,DWORD PTR ds:0x42a2ea
  424f09:	inc    ecx
  424f0a:	mov    DWORD PTR ds:0x42a2ea,ecx
  424f10:	cmp    DWORD PTR ds:0x42a2ea,0x1f
  424f17:	jb     0x424ebd
  424f1d:	mov    eax,0xf89c85a5
  424f22:	mov    DWORD PTR [ebp-0x4],eax
  424f25:	xor    ecx,ecx
  424f27:	xor    ecx,DWORD PTR ds:0x42a34a
  424f2d:	mov    edx,DWORD PTR ds:0x42a396
  424f33:	sub    ecx,edx
  424f35:	add    ecx,DWORD PTR [ecx+edx*1]
  424f38:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424f3f:	mov    edx,DWORD PTR ds:0x42a36a
  424f45:	mov    ecx,DWORD PTR ds:0x42a37a
  424f4b:	sub    ecx,edx
  424f4d:	or     edx,DWORD PTR [edx+ecx*1]
  424f50:	mov    ecx,DWORD PTR [ebp-0x4]
  424f53:	push   esi
  424f54:	mov    edx,0x75108aa
  424f59:	movzx  esi,BYTE PTR ds:0x42a286
  424f60:	add    DWORD PTR ds:0x42a29a,esi
  424f66:	xor    ecx,edx
  424f68:	mov    esi,0x3272f1
  424f6d:	xor    DWORD PTR ds:0x42a2b2,0x42a27e
  424f77:	push   edi
  424f78:	sbb    DWORD PTR ds:0x42a2ee,0x42a29a
  424f82:	mov    edi,DWORD PTR [ebp+0x10]
  424f85:	add    ecx,esi
  424f87:	cmp    ecx,edi
  424f89:	mov    DWORD PTR ds:0x42a2e6,0x5270
  424f93:	je     0x425107
  424f99:	mov    ecx,DWORD PTR [ebp-0x4]
  424f9c:	and    DWORD PTR ds:0x42a2a2,edx
  424fa2:	mov    edi,DWORD PTR [ebp+0x10]
  424fa5:	add    DWORD PTR ds:0x42a272,0x5748
  424faf:	xor    eax,eax
  424fb1:	xor    DWORD PTR ds:0x42a26a,0x1416
  424fbb:	xor    ecx,edx
  424fbd:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424fc7:	add    ecx,esi
  424fc9:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424fd3:	add    edi,0xfabdbed8
  424fd9:	adc    eax,0xffffffff
  424fdc:	mov    DWORD PTR ds:0x42a2f6,0x6318
  424fe6:	xor    eax,0x0
  424fe9:	sbb    DWORD PTR ds:0x42a27e,0x42a2de
  424ff3:	mov    DWORD PTR [ebp-0xc],eax
  424ff6:	inc    DWORD PTR ds:0x42a27e
  424ffc:	push   ebx
  424ffd:	xor    DWORD PTR ds:0x42a28e,edi
  425003:	xor    ebx,ebx
  425005:	neg    eax
  425007:	xor    edi,0x8a29a13d
  42500d:	and    DWORD PTR ds:0x42a2be,0x0
  425017:	mov    eax,ds:0x42a2be
  42501c:	inc    eax
  42501d:	mov    ds:0x42a2be,eax
  425022:	cmp    DWORD PTR ds:0x42a2be,0x9
  425029:	jg     0x42506c
  42502f:	jmp    0x425047
  425034:	push   0x8c5e
  425039:	push   0x42a2a2
  42503e:	push   DWORD PTR [ebp-0x10]
  425041:	call   DWORD PTR ds:0x42a3ee
  425047:	cmp    DWORD PTR ds:0x42a2be,0x8
  42504e:	jne    0x42505f
  425054:	mov    eax,ds:0x42a2be
  425059:	inc    eax
  42505a:	mov    ds:0x42a2be,eax
  42505f:	cmp    DWORD PTR ds:0x42a2be,0x18
  425066:	jb     0x425017
  42506c:	mov    eax,ecx
  42506e:	add    eax,0xfabdbed8
  425073:	adc    ebx,0xffffffff
  425076:	xor    eax,0x8a29a13d
  42507b:	xor    ebx,0x0
  42507e:	cmp    eax,edi
  425080:	jne    0x425099
  425086:	cmp    ebx,DWORD PTR [ebp-0xc]
  425089:	je     0x425101
  42508f:	jmp    0x425099
  425094:	mov    esi,0x3272f1
  425099:	mov    eax,DWORD PTR [ebp-0x4]
  42509c:	mov    edi,DWORD PTR [ebp-0x8]
  42509f:	xor    edi,edx
  4250a1:	add    edi,esi
  4250a3:	mov    esi,DWORD PTR [ebp+0x8]
  4250a6:	imul   edi,ecx
  4250a9:	mov    ebx,DWORD PTR [ebp+0xc]
  4250ac:	xor    eax,edx
  4250ae:	add    eax,ecx
  4250b0:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  4250b7:	mov    BYTE PTR [edi+esi*1],al
  4250ba:	mov    eax,DWORD PTR [ebp-0x8]
  4250bd:	mov    esi,DWORD PTR [ebp+0x10]
  4250c0:	xor    eax,edx
  4250c2:	xor    ebx,ebx
  4250c4:	add    esi,0xfabdbed8
  4250ca:	adc    ebx,0xffffffff
  4250cd:	lea    ecx,[ecx+eax*1+0x3272f1]
  4250d4:	xor    edi,edi
  4250d6:	xor    esi,0x8a29a13d
  4250dc:	xor    ebx,0x0
  4250df:	mov    eax,ecx
  4250e1:	add    eax,0xfabdbed8
  4250e6:	adc    edi,0xffffffff
  4250e9:	xor    eax,0x8a29a13d
  4250ee:	xor    edi,0x0
  4250f1:	cmp    eax,esi
  4250f3:	jne    0x425094
  4250f9:	cmp    edi,ebx
  4250fb:	jne    0x425094
  425101:	mov    eax,0xf89c85ba
  425106:	pop    ebx
  425107:	pop    edi
  425108:	pop    esi
  425109:	leave  
  42510a:	ret    0xc
  42510d:	push   ebp
  42510e:	mov    ebp,esp
  425110:	push   ecx
  425111:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425118:	or     DWORD PTR ds:0x42a292,0x42a2d6
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	xor    edx,edx
  425127:	add    edx,DWORD PTR ds:0x42a3a6
  42512d:	mov    ecx,DWORD PTR ds:0x42a3ae
  425133:	sub    edx,ecx
  425135:	sub    edx,DWORD PTR [edx+ecx*1]
  425138:	movsx  eax,BYTE PTR [eax]
  42513b:	mov    edx,0x3272f1
  425140:	sub    eax,edx
  425142:	movzx  ecx,BYTE PTR ds:0x42a2a6
  425149:	or     DWORD PTR ds:0x42a2ce,ecx
  42514f:	mov    ecx,0x75108aa
  425154:	and    DWORD PTR ds:0x42a2d2,0x2b27
  42515e:	xor    eax,ecx
  425160:	cmp    eax,0xf89c85f6
  425165:	mov    DWORD PTR ds:0x42a28e,0x60e7
  42516f:	jne    0x4251c2
  425175:	xor    eax,eax
  425177:	xor    eax,DWORD PTR ds:0x42a26a
  42517d:	xor    DWORD PTR ds:0x42a2ba,eax
  425183:	mov    eax,DWORD PTR [ebp+0x8]
  425186:	mov    DWORD PTR ds:0x42a2d6,0x3461
  425190:	push   esi
  425191:	mov    esi,DWORD PTR ds:0x42a262
  425197:	adc    DWORD PTR ds:0x42a256,esi
  42519d:	mov    esi,DWORD PTR [ebp+0x8]
  4251a0:	add    esi,DWORD PTR [eax+0x3c]
  4251a3:	mov    DWORD PTR [ebp+0x8],esi
  4251a6:	mov    eax,DWORD PTR [ebp-0x4]
  4251a9:	mov    esi,DWORD PTR [ebp+0x8]
  4251ac:	xor    eax,ecx
  4251ae:	add    eax,edx
  4251b0:	cmp    DWORD PTR [esi+0x54],eax
  4251b3:	pop    esi
  4251b4:	je     0x4251c2
  4251ba:	mov    eax,DWORD PTR [ebp+0x8]
  4251bd:	jmp    0x4251c9
  4251c2:	mov    eax,DWORD PTR [ebp-0x4]
  4251c5:	xor    eax,ecx
  4251c7:	add    eax,edx
  4251c9:	leave  
  4251ca:	ret    0x4
  4251cd:	push   ebp
  4251ce:	mov    ebp,esp
  4251d0:	sub    esp,0xc
  4251d3:	and    DWORD PTR ds:0x42a2da,0x0
  4251dd:	jmp    0x4251f1
  4251e2:	xor    edx,edx
  4251e4:	or     edx,DWORD PTR ds:0x42a2da
  4251ea:	inc    edx
  4251eb:	mov    DWORD PTR ds:0x42a2da,edx
  4251f1:	cmp    DWORD PTR ds:0x42a2da,0x1c
  4251f8:	jae    0x42523d
  4251fe:	cmp    DWORD PTR ds:0x42a2da,0x7
  425205:	jg     0x42523d
  42520b:	jmp    0x42521e
  425210:	push   DWORD PTR [ebp-0x10]
  425213:	push   0x42a276
  425218:	call   DWORD PTR ds:0x42a3f2
  42521e:	cmp    DWORD PTR ds:0x42a2da,0x6
  425225:	jne    0x425238
  42522b:	mov    edx,DWORD PTR ds:0x42a2da
  425231:	inc    edx
  425232:	mov    DWORD PTR ds:0x42a2da,edx
  425238:	jmp    0x4251e2
  42523d:	push   esi
  42523e:	sub    esi,0x6177
  425244:	mov    esi,0xf89c85a5
  425249:	and    DWORD PTR ds:0x42a26a,0x14cd
  425253:	mov    DWORD PTR [ebp-0x8],esi
  425256:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  42525d:	and    DWORD PTR ds:0x42a2e2,ebx
  425263:	push   edi
  425264:	mov    eax,eax
  425266:	or     ecx,0x7f14
  42526c:	mov    eax,DWORD PTR [ebp-0x4]
  42526f:	add    ecx,edi
  425271:	mov    edi,DWORD PTR [ebp-0x8]
  425274:	or     edx,edx
  425276:	mov    ecx,0x75108aa
  42527b:	and    DWORD PTR ds:0x42a2da,0x0
  425285:	jmp    0x425297
  42528a:	mov    edx,DWORD PTR ds:0x42a2da
  425290:	inc    edx
  425291:	mov    DWORD PTR ds:0x42a2da,edx
  425297:	cmp    DWORD PTR ds:0x42a2da,0x1d
  42529e:	jae    0x4252e0
  4252a4:	cmp    DWORD PTR ds:0x42a2da,0xd
  4252ab:	jge    0x4252e0
  4252b1:	jmp    0x4252c1
  4252b6:	push   0x42a2d2
  4252bb:	call   DWORD PTR ds:0x42a3f6
  4252c1:	cmp    DWORD PTR ds:0x42a2da,0xc
  4252c8:	jne    0x4252db
  4252ce:	mov    edx,DWORD PTR ds:0x42a2da
  4252d4:	inc    edx
  4252d5:	mov    DWORD PTR ds:0x42a2da,edx
  4252db:	jmp    0x42528a
  4252e0:	xor    eax,ecx
  4252e2:	xor    edi,ecx
  4252e4:	mov    edx,0x3272f1
  4252e9:	add    edi,edx
  4252eb:	add    eax,edx
  4252ed:	imul   eax,edi
  4252f0:	mov    edi,DWORD PTR [ebp+0xc]
  4252f3:	cmp    edi,eax
  4252f5:	je     0x42534a
  4252fb:	mov    DWORD PTR [ebp-0xc],esi
  4252fe:	mov    eax,DWORD PTR [ebp-0xc]
  425301:	mov    esi,DWORD PTR [ebp+0xc]
  425304:	xor    eax,ecx
  425306:	lea    eax,[eax*8+0x1939800]
  42530d:	mov    eax,DWORD PTR [esi+eax*1]
  425310:	mov    DWORD PTR [ebp+0xc],eax
  425313:	mov    eax,DWORD PTR [ebp-0x4]
  425316:	mov    esi,DWORD PTR [ebp-0x8]
  425319:	xor    eax,ecx
  42531b:	xor    esi,ecx
  42531d:	add    esi,edx
  42531f:	add    eax,edx
  425321:	imul   eax,esi
  425324:	mov    esi,DWORD PTR [ebp+0xc]
  425327:	cmp    esi,eax
  425329:	je     0x42534a
  42532f:	mov    eax,DWORD PTR [ebp-0x4]
  425332:	xor    eax,ecx
  425334:	mov    ecx,DWORD PTR [ebp+0xc]
  425337:	add    eax,edx
  425339:	imul   eax,ecx
  42533c:	add    eax,DWORD PTR [ebp+0x8]
  42533f:	mov    DWORD PTR [ebp+0xc],eax
  425342:	mov    eax,DWORD PTR [ebp+0xc]
  425345:	jmp    0x42535b
  42534a:	mov    eax,DWORD PTR [ebp-0x4]
  42534d:	mov    esi,DWORD PTR [ebp-0x8]
  425350:	xor    esi,ecx
  425352:	xor    eax,ecx
  425354:	add    esi,edx
  425356:	add    eax,edx
  425358:	imul   eax,esi
  42535b:	pop    edi
  42535c:	pop    esi
  42535d:	leave  
  42535e:	ret    0x8
	...
  425371:	add    BYTE PTR [eax],al
  425373:	add    BYTE PTR [ebp+0x4de645],dh
  425379:	add    BYTE PTR [eax],al
  42537b:	add    BYTE PTR [edx],al
  42537d:	add    BYTE PTR [eax],al
  42537f:	add    BYTE PTR [eax],dh
  425381:	add    BYTE PTR [eax],al
  425383:	add    BYTE PTR [eax-0x6ffffdad],dl
  425389:	inc    edi
  42538a:	add    al,BYTE PTR [eax]
  42538c:	add    BYTE PTR [eax],al
  42538e:	add    BYTE PTR [eax],al
  425390:	push   edx
  425391:	push   ebx
  425392:	inc    esp
  425393:	push   ebx
  425394:	pop    ebp
  425395:	loopne 0x42535b
  425397:	in     al,dx
  425398:	push   edi
  425399:	dec    ebx
  42539a:	sti    
  42539b:	inc    edx
  42539c:	cmp    BYTE PTR [eax+0x49],0x46
  4253a0:	xor    al,0x93
  4253a2:	jmp    0x4254ee
  4253a7:	add    BYTE PTR [esi+0x3a],al
  4253aa:	pop    esp
  4253ab:	push   edi
  4253ac:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  4253b3:	inc    esp
  4253b4:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  4253bb:	inc    ebp
  4253bc:	js     0x425423
  4253be:	arpl   WORD PTR [eax],ax
  4253c0:	mov    edx,DWORD PTR [ebp-0x14]
  4253c3:	sub    esp,0x108
  4253c9:	push   ebx
  4253ca:	mov    eax,ebx
  4253cc:	xchg   ecx,eax
  4253cd:	mov    eax,DWORD PTR [ebp+0x8]
  4253d0:	cmp    eax,0xf89c85a5
  4253d5:	jne    0x42588f
  4253db:	mov    eax,DWORD PTR [ebp+0xc]
  4253de:	cmp    eax,0xf89c85ba
  4253e3:	jne    0x42588f
  4253e9:	mov    eax,DWORD PTR [ebp+0x24]
  4253ec:	mov    DWORD PTR [ebp-0x4],eax
  4253ef:	mov    eax,DWORD PTR [ebp-0x4]
  4253f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4253f8:	mov    eax,DWORD PTR [eax]
  4253fa:	mov    eax,DWORD PTR [eax]
  4253fc:	mov    DWORD PTR [ebp-0x8],eax
  4253ff:	mov    BYTE PTR [ebp-0x18],0x1a
  425403:	mov    BYTE PTR [ebp-0x17],0x1f
  425407:	mov    BYTE PTR [ebp-0x16],0x14
  42540b:	mov    BYTE PTR [ebp-0x15],0x4e
  42540f:	mov    BYTE PTR [ebp-0x14],0x4d
  425413:	mov    BYTE PTR [ebp-0x13],0x83
  425417:	mov    BYTE PTR [ebp-0x20],0x8
  42541b:	mov    BYTE PTR [ebp-0x1f],0xe
  42541f:	mov    BYTE PTR [ebp-0x1e],0x18
  425423:	mov    BYTE PTR [ebp-0x1d],0xd
  425427:	mov    BYTE PTR [ebp-0x1c],0x4e
  42542b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42542f:	mov    BYTE PTR [ebp-0x1a],0x83
  425433:	mov    BYTE PTR [ebp-0x28],0xe
  425437:	mov    BYTE PTR [ebp-0x27],0x1b
  42543b:	mov    BYTE PTR [ebp-0x26],0x17
  42543f:	mov    BYTE PTR [ebp-0x25],0xa
  425443:	mov    BYTE PTR [ebp-0x24],0x1c
  425447:	mov    BYTE PTR [ebp-0x23],0x13
  42544b:	mov    BYTE PTR [ebp-0x22],0x14
  42544f:	mov    BYTE PTR [ebp-0x21],0x83
  425453:	xor    ecx,ecx
  425455:	lea    eax,[ebp+ecx*1-0x18]
  425459:	movzx  edx,BYTE PTR [eax]
  42545c:	xor    edx,0x7c
  42545f:	inc    edx
  425460:	inc    ecx
  425461:	mov    BYTE PTR [eax],dl
  425463:	cmp    ecx,0x6
  425466:	jb     0x425455
  425468:	xor    ecx,ecx
  42546a:	lea    eax,[ebp+ecx*1-0x20]
  42546e:	movzx  edx,BYTE PTR [eax]
  425471:	xor    edx,0x7c
  425474:	inc    edx
  425475:	inc    ecx
  425476:	mov    BYTE PTR [eax],dl
  425478:	cmp    ecx,0x7
  42547b:	jb     0x42546a
  42547d:	xor    ecx,ecx
  42547f:	lea    eax,[ebp+ecx*1-0x28]
  425483:	movzx  edx,BYTE PTR [eax]
  425486:	xor    edx,0x7c
  425489:	inc    edx
  42548a:	inc    ecx
  42548b:	mov    BYTE PTR [eax],dl
  42548d:	cmp    ecx,0x8
  425490:	jb     0x42547f
  425492:	lea    eax,[ebp-0x2c]
  425495:	mov    DWORD PTR [ebp-0x8],eax
  425498:	mov    ecx,DWORD PTR [ebp-0x8]
  42549b:	mov    eax,0x7113fccf
  4254a0:	mov    DWORD PTR [ecx],eax
  4254a2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4254a5:	push   esi
  4254a6:	push   edi
  4254a7:	mov    esi,0x4e3e
  4254ac:	mov    ebx,0x3272f1
  4254b1:	cmp    ecx,eax
  4254b3:	jne    0x42557e
  4254b9:	lea    eax,[esi+0x39]
  4254bc:	mov    WORD PTR [ebp-0x78],ax
  4254c0:	mov    eax,esi
  4254c2:	mov    WORD PTR [ebp-0x76],ax
  4254c6:	add    eax,0x33
  4254c9:	mov    WORD PTR [ebp-0x74],ax
  4254cd:	lea    eax,[esi-0xe]
  4254d0:	mov    WORD PTR [ebp-0x72],ax
  4254d4:	add    eax,0x4f
  4254d7:	mov    ecx,eax
  4254d9:	lea    eax,[esi-0x15]
  4254dc:	mov    WORD PTR [ebp-0x66],ax
  4254e0:	mov    eax,esi
  4254e2:	mov    WORD PTR [ebp-0x64],ax
  4254e6:	add    eax,0xffffffec
  4254e9:	mov    WORD PTR [ebp-0x62],ax
  4254ed:	mov    eax,0x443
  4254f2:	mov    WORD PTR [ebp-0x60],ax
  4254f6:	mov    eax,0x5674
  4254fb:	mov    WORD PTR [ebp-0x5e],ax
  4254ff:	mov    eax,0x6114
  425504:	mov    WORD PTR [ebp-0x5c],ax
  425508:	lea    eax,[ebp-0xe0]
  42550e:	push   eax
  42550f:	mov    eax,DWORD PTR [ebp+0xc]
  425512:	mov    edi,0x75108aa
  425517:	xor    eax,edi
  425519:	add    eax,ebx
  42551b:	push   eax
  42551c:	mov    WORD PTR [ebp-0x70],cx
  425520:	lea    ecx,[esi-0xa]
  425523:	mov    edx,ecx
  425525:	lea    eax,[ebp-0x78]
  425528:	push   eax
  425529:	mov    eax,DWORD PTR [ebp-0x4]
  42552c:	mov    eax,DWORD PTR [eax+0x198]
  425532:	mov    WORD PTR [ebp-0x6e],dx
  425536:	mov    edx,0x4f8a
  42553b:	mov    WORD PTR [ebp-0x6c],dx
  42553f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425546:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42554d:	mov    DWORD PTR [ebp-0xe0],0x1
  425557:	mov    DWORD PTR [ebp-0xdc],0x255
  425561:	push   DWORD PTR [eax]
  425563:	mov    eax,DWORD PTR [ebp+0x10]
  425566:	call   eax
  425568:	mov    DWORD PTR [ebp-0x8],eax
  42556b:	mov    eax,DWORD PTR [ebp-0x8]
  42556e:	test   eax,eax
  425570:	je     0x425583
  425572:	xor    DWORD PTR ds:0x76586876,0x87687666
  42557c:	jmp    0x425583
  42557e:	mov    edi,0x75108aa
  425583:	mov    eax,DWORD PTR [ebp-0x4]
  425586:	mov    ecx,DWORD PTR [eax+0x18c]
  42558c:	xor    eax,eax
  42558e:	cmp    DWORD PTR [ecx],eax
  425590:	jne    0x425802
  425596:	mov    ecx,DWORD PTR [ebp-0x4]
  425599:	mov    ecx,DWORD PTR [ecx+0x17c]
  42559f:	mov    DWORD PTR [ecx],eax
  4255a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4255a4:	mov    ecx,DWORD PTR [ecx+0x180]
  4255aa:	mov    DWORD PTR [ecx],eax
  4255ac:	mov    eax,0x4e61
  4255b1:	mov    WORD PTR [ebp-0x9c],ax
  4255b8:	mov    eax,esi
  4255ba:	mov    WORD PTR [ebp-0x9a],ax
  4255c1:	mov    eax,0x4e71
  4255c6:	mov    WORD PTR [ebp-0x98],ax
  4255cd:	add    eax,0xffffffc0
  4255d0:	mov    WORD PTR [ebp-0x96],ax
  4255d7:	mov    eax,0x4f8e
  4255dc:	mov    WORD PTR [ebp-0x94],ax
  4255e3:	mov    eax,0x4e32
  4255e8:	mov    WORD PTR [ebp-0x92],ax
  4255ef:	add    eax,0x4d
  4255f2:	mov    WORD PTR [ebp-0x90],ax
  4255f9:	mov    eax,0x4e34
  4255fe:	mov    WORD PTR [ebp-0x8e],ax
  425605:	mov    eax,esi
  425607:	mov    WORD PTR [ebp-0x8c],ax
  42560e:	mov    eax,0x4e35
  425613:	mov    WORD PTR [ebp-0x8a],ax
  42561a:	mov    eax,0x99f1
  42561f:	mov    WORD PTR [ebp-0x88],ax
  425626:	mov    eax,0x8d62
  42562b:	mov    WORD PTR [ebp-0x86],ax
  425632:	mov    eax,0xd66f
  425637:	mov    WORD PTR [ebp-0x84],ax
  42563e:	mov    eax,0xd783
  425643:	mov    WORD PTR [ebp-0x82],ax
  42564a:	mov    eax,0x2784
  42564f:	mov    WORD PTR [ebp-0x80],ax
  425653:	mov    eax,0x4784
  425658:	mov    WORD PTR [ebp-0x7e],ax
  42565c:	mov    eax,0x4e33
  425661:	push   0x8
  425663:	mov    WORD PTR [ebp-0x7c],ax
  425667:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42566e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  425675:	lea    eax,[ebp-0x10]
  425678:	pop    ecx
  425679:	mov    dl,BYTE PTR [eax]
  42567b:	xor    dl,0x7c
  42567e:	inc    dl
  425680:	mov    BYTE PTR [eax],dl
  425682:	inc    eax
  425683:	dec    ecx
  425684:	jne    0x425679
  425686:	lea    eax,[ebp-0x10]
  425689:	mov    DWORD PTR [ebp-0xdc],eax
  42568f:	lea    eax,[ebp-0xe0]
  425695:	push   eax
  425696:	mov    eax,DWORD PTR [ebp+0xc]
  425699:	xor    eax,edi
  42569b:	add    eax,ebx
  42569d:	push   eax
  42569e:	mov    eax,DWORD PTR [ebp-0x4]
  4256a1:	add    eax,0x66
  4256a4:	push   eax
  4256a5:	mov    eax,DWORD PTR [ebp-0x4]
  4256a8:	mov    eax,DWORD PTR [eax+0x198]
  4256ae:	mov    DWORD PTR [ebp-0xe0],0x1
  4256b8:	push   DWORD PTR [eax]
  4256ba:	mov    eax,DWORD PTR [ebp+0x10]
  4256bd:	call   eax
  4256bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4256c2:	xor    ecx,edi
  4256c4:	add    ecx,ebx
  4256c6:	mov    DWORD PTR [ebp-0x8],eax
  4256c9:	cmp    eax,ecx
  4256cb:	jne    0x4256e6
  4256cd:	mov    eax,ds:0x33730bcc
  4256d2:	or     eax,0x22150bcf
  4256d7:	mov    ds:0x33730bcc,eax
  4256dc:	add    eax,0x3372e92f
  4256e1:	mov    ds:0x33730bcc,eax
  4256e6:	mov    ecx,0x4e66
  4256eb:	mov    eax,ecx
  4256ed:	mov    WORD PTR [ebp-0x40],ax
  4256f1:	add    eax,0x5
  4256f4:	mov    edx,eax
  4256f6:	mov    WORD PTR [ebp-0x3e],dx
  4256fa:	mov    edx,0x4f93
  4256ff:	mov    WORD PTR [ebp-0x3c],dx
  425703:	add    edx,0xfffffff8
  425706:	mov    WORD PTR [ebp-0x3a],dx
  42570a:	mov    edx,0x4f8d
  42570f:	mov    WORD PTR [ebp-0x38],dx
  425713:	add    edx,0xfffffff3
  425716:	mov    WORD PTR [ebp-0x36],dx
  42571a:	mov    edx,0x4f87
  42571f:	mov    WORD PTR [ebp-0x34],dx
  425723:	mov    WORD PTR [ebp-0x32],cx
  425727:	mov    ecx,esi
  425729:	mov    WORD PTR [ebp-0x30],cx
  42572d:	lea    ecx,[edx-0x1]
  425730:	mov    edx,ecx
  425732:	mov    WORD PTR [ebp-0x54],dx
  425736:	mov    edx,eax
  425738:	mov    WORD PTR [ebp-0x52],dx
  42573c:	mov    edx,0x4e73
  425741:	mov    WORD PTR [ebp-0x50],dx
  425745:	mov    WORD PTR [ebp-0x4e],ax
  425749:	lea    eax,[edx-0x6]
  42574c:	mov    WORD PTR [ebp-0x4c],ax
  425750:	add    eax,0xfffffff3
  425753:	mov    WORD PTR [ebp-0x4a],ax
  425757:	lea    eax,[edx-0xc]
  42575a:	mov    WORD PTR [ebp-0x48],ax
  42575e:	mov    WORD PTR [ebp-0x46],cx
  425762:	mov    WORD PTR [ebp-0x44],si
  425766:	mov    eax,DWORD PTR [ebp+0x8]
  425769:	movzx  ecx,WORD PTR [ebp-0x54]
  42576d:	xor    eax,edi
  42576f:	add    eax,ebx
  425771:	xor    eax,ecx
  425773:	mov    WORD PTR [ebp-0x54],ax
  425777:	mov    eax,DWORD PTR [ebp+0x8]
  42577a:	movzx  ecx,WORD PTR [ebp-0x40]
  42577e:	xor    eax,edi
  425780:	add    eax,ebx
  425782:	xor    eax,ecx
  425784:	mov    WORD PTR [ebp-0x40],ax
  425788:	xor    eax,eax
  42578a:	mov    WORD PTR [ebp-0xf4],ax
  425791:	mov    WORD PTR [ebp-0x108],ax
  425798:	mov    edi,DWORD PTR [ebp+0x24]
  42579b:	lea    eax,[ebp-0xf4]
  4257a1:	lea    edx,[ebp-0x54]
  4257a4:	mov    DWORD PTR [ebp-0xe0],0x2
  4257ae:	mov    DWORD PTR [ebp-0xdc],eax
  4257b4:	call   0x4281eb
  4257b9:	mov    DWORD PTR [ebp-0xd8],eax
  4257bf:	lea    eax,[ebp-0xe0]
  4257c5:	push   eax
  4257c6:	mov    eax,DWORD PTR [ebp+0xc]
  4257c9:	xor    eax,0x75108aa
  4257ce:	add    eax,ebx
  4257d0:	push   eax
  4257d1:	lea    eax,[ebp-0x9c]
  4257d7:	push   eax
  4257d8:	push   DWORD PTR [ebp-0x8]
  4257db:	mov    eax,DWORD PTR [ebp+0x10]
  4257de:	call   eax
  4257e0:	mov    edi,DWORD PTR [ebp+0x24]
  4257e3:	lea    eax,[ebp-0x108]
  4257e9:	lea    edx,[ebp-0x40]
  4257ec:	mov    DWORD PTR [ebp-0xdc],eax
  4257f2:	call   0x4281eb
  4257f7:	mov    DWORD PTR [ebp-0xd8],eax
  4257fd:	mov    edi,0x75108aa
  425802:	mov    eax,DWORD PTR [ebp+0x14]
  425805:	push   DWORD PTR [ebp-0x4]
  425808:	push   DWORD PTR [ebp+0x20]
  42580b:	push   DWORD PTR [ebp+0x1c]
  42580e:	push   DWORD PTR [ebp+0x18]
  425811:	push   DWORD PTR [ebp+0x10]
  425814:	push   DWORD PTR [ebp+0x8]
  425817:	push   DWORD PTR [ebp+0xc]
  42581a:	call   0x426a8c
  42581f:	test   eax,eax
  425821:	je     0x425865
  425823:	add    DWORD PTR [ebp-0x4],eax
  425826:	push   DWORD PTR [ebp-0x4]
  425829:	lea    esi,[ebp+0x4]
  42582c:	call   0x425c7d
  425831:	mov    eax,DWORD PTR [ebp-0x4]
  425834:	mov    eax,DWORD PTR [eax+0x1c8]
  42583a:	mov    eax,DWORD PTR [eax]
  42583c:	xor    eax,edi
  42583e:	add    eax,ebx
  425840:	mov    eax,DWORD PTR [ebp-0x4]
  425843:	jne    0x42585b
  425845:	mov    ecx,DWORD PTR [ebp-0x4]
  425848:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42584e:	push   DWORD PTR [ecx]
  425850:	mov    eax,DWORD PTR [eax+0x1e0]
  425856:	call   DWORD PTR [eax+0x28]
  425859:	jmp    0x425865
  42585b:	mov    eax,DWORD PTR [eax+0x17c]
  425861:	mov    eax,DWORD PTR [eax]
  425863:	add    DWORD PTR [esi],eax
  425865:	mov    eax,DWORD PTR [ebp-0x4]
  425868:	mov    eax,DWORD PTR [eax+0x1dc]
  42586e:	dec    DWORD PTR [eax]
  425870:	mov    ecx,DWORD PTR [ebp-0x4]
  425873:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425879:	mov    eax,DWORD PTR [eax]
  42587b:	lea    eax,[ecx+eax*4]
  42587e:	mov    ecx,DWORD PTR [ebp-0x4]
  425881:	mov    ecx,DWORD PTR [ecx+0x17c]
  425887:	mov    eax,DWORD PTR [eax]
  425889:	mov    ecx,DWORD PTR [ecx]
  42588b:	add    DWORD PTR [eax],ecx
  42588d:	pop    edi
  42588e:	pop    esi
  42588f:	pop    ebx
  425890:	leave  
  425891:	ret    0x20
  425894:	push   edi
  425895:	push   esi
  425896:	push   ebx
  425897:	push   ebp
  425898:	mov    ebp,esp
  42589a:	mov    eax,DWORD PTR [ebp+0x24]
  42589d:	add    DWORD PTR [ebp+0x28],eax
  4258a0:	push   eax
  4258a1:	cld    
  4258a2:	mov    esi,DWORD PTR [ebp+0x18]
  4258a5:	add    DWORD PTR [ebp+0x1c],esi
  4258a8:	push   esi
  4258a9:	mov    esi,DWORD PTR [ebp+0x14]
  4258ac:	lods   eax,DWORD PTR ds:[esi]
  4258ad:	xchg   edx,eax
  4258ae:	push   edx
  4258af:	mov    cl,BYTE PTR [esi-0x2]
  4258b2:	or     eax,0xffffffff
  4258b5:	shl    eax,cl
  4258b7:	not    eax
  4258b9:	push   eax
  4258ba:	mov    cl,dh
  4258bc:	or     eax,0xffffffff
  4258bf:	shl    eax,cl
  4258c1:	not    eax
  4258c3:	push   eax
  4258c4:	add    cl,dl
  4258c6:	mov    edi,esi
  4258c8:	sub    esp,0xc
  4258cb:	sub    eax,eax
  4258cd:	inc    eax
  4258ce:	push   eax
  4258cf:	push   eax
  4258d0:	push   eax
  4258d1:	push   eax
  4258d2:	push   eax
  4258d3:	push   edi
  4258d4:	sub    esi,esi
  4258d6:	push   esi
  4258d7:	or     ebx,0xffffffff
  4258da:	mov    eax,0x300
  4258df:	shl    eax,cl
  4258e1:	lea    ecx,[eax+0x736]
  4258e7:	mov    eax,0x4000400
  4258ec:	shr    ecx,1
  4258ee:	rep stos DWORD PTR es:[edi],eax
  4258f0:	push   0x5
  4258f2:	pop    ecx
  4258f3:	call   0x425bde
  4258f8:	loop   0x4258f3
  4258fa:	lea    esi,[esi]
  4258fc:	lea    edi,[edi]
  4258fe:	mov    edi,DWORD PTR [ebp-0x4]
  425901:	mov    eax,DWORD PTR [ebp-0x10]
  425904:	sub    edi,DWORD PTR [ebp+0x24]
  425907:	and    eax,edi
  425909:	mov    DWORD PTR [ebp-0x18],eax
  42590c:	mov    al,0x0
  42590e:	call   0x425bf6
  425913:	jne    0x4259ae
  425919:	mov    cl,BYTE PTR [ebp-0xc]
  42591c:	and    edi,DWORD PTR [ebp-0x14]
  42591f:	shl    edi,cl
  425921:	sub    cl,0x8
  425924:	neg    cl
  425926:	shr    esi,cl
  425928:	pop    eax
  425929:	add    edi,esi
  42592b:	pop    esi
  42592c:	lea    edi,[edi+edi*2]
  42592f:	shl    edi,0x8
  425932:	cmp    al,0x7
  425934:	pop    edx
  425935:	lea    ecx,[esi+edi*2+0xe6c]
  42593c:	push   ecx
  42593d:	push   esi
  42593e:	mov    esi,0x100
  425943:	push   eax
  425944:	mov    al,0x1
  425946:	jb     0x42597c
  425948:	mov    edi,DWORD PTR [ebp-0x4]
  42594b:	sub    edi,DWORD PTR [ebp-0x24]
  42594e:	movzx  edi,BYTE PTR [edi]
  425951:	mov    ebp,DWORD PTR [ebp-0x34]
  425954:	shl    edi,1
  425956:	mov    ecx,esi
  425958:	and    esi,edi
  42595a:	add    ecx,esi
  42595c:	lea    ebp,[ebp+ecx*2+0x0]
  425960:	call   0x425c15
  425965:	mov    ecx,eax
  425967:	shr    esi,0x8
  42596a:	and    ecx,0x1
  42596d:	cmp    esi,ecx
  42596f:	mov    esi,0x100
  425974:	jne    0x425984
  425976:	cmp    eax,esi
  425978:	jb     0x425951
  42597a:	jmp    0x425990
  42597c:	mov    ebp,DWORD PTR [ebp-0x34]
  42597f:	call   0x425c15
  425984:	inc    eax
  425985:	inc    esi
  425986:	sub    eax,0x1
  425989:	sub    esi,0x1
  42598c:	cmp    eax,esi
  42598e:	jb     0x42597c
  425990:	pop    edx
  425991:	inc    edx
  425992:	cmp    edx,0x5
  425995:	dec    edx
  425996:	mov    ecx,edx
  425998:	jb     0x4259a9
  42599a:	inc    edx
  42599b:	cmp    edx,0xb
  42599e:	dec    edx
  42599f:	mov    cl,0x4
  4259a1:	dec    cl
  4259a3:	jb     0x4259a9
  4259a5:	mov    cl,0x7
  4259a7:	dec    cl
  4259a9:	sub    edx,ecx
  4259ab:	push   edx
  4259ac:	jmp    0x4259fd
  4259ae:	mov    al,0xc1
  4259b0:	dec    al
  4259b2:	call   0x425c06
  4259b7:	jne    0x4259cd
  4259b9:	pop    eax
  4259ba:	pop    edi
  4259bb:	pop    edx
  4259bc:	pop    ecx
  4259bd:	pop    edx
  4259be:	pop    ecx
  4259bf:	push   DWORD PTR [esp]
  4259c2:	push   ecx
  4259c3:	push   edx
  4259c4:	mov    edx,0x664
  4259c9:	mov    cl,0x0
  4259cb:	jmp    0x425a40
  4259cd:	mov    al,0xcd
  4259cf:	dec    al
  4259d1:	call   0x425c06
  4259d6:	jne    0x425a06
  4259d8:	mov    al,0xf1
  4259da:	dec    al
  4259dc:	call   0x425bf6
  4259e1:	jne    0x425a36
  4259e3:	pop    eax
  4259e4:	cmp    al,0x7
  4259e6:	mov    al,0x9
  4259e8:	jb     0x4259ec
  4259ea:	mov    al,0xb
  4259ec:	push   eax
  4259ed:	mov    esi,DWORD PTR [ebp-0x4]
  4259f0:	sub    esi,DWORD PTR [ebp-0x24]
  4259f3:	cmp    esi,DWORD PTR [ebp+0x24]
  4259f6:	jb     0x425bcd
  4259fc:	lods   al,BYTE PTR ds:[esi]
  4259fd:	mov    edi,DWORD PTR [ebp-0x4]
  425a00:	stos   BYTE PTR es:[edi],al
  425a01:	jmp    0x425b94
  425a06:	mov    al,0xd8
  425a08:	call   0x425c06
  425a0d:	mov    esi,DWORD PTR [ebp-0x28]
  425a10:	je     0x425a2d
  425a12:	mov    al,0xe4
  425a14:	call   0x425c06
  425a19:	mov    esi,DWORD PTR [ebp-0x2c]
  425a1c:	je     0x425a27
  425a1e:	mov    esi,DWORD PTR [ebp-0x30]
  425a21:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a24:	mov    DWORD PTR [ebp-0x30],ecx
  425a27:	mov    ecx,DWORD PTR [ebp-0x28]
  425a2a:	mov    DWORD PTR [ebp-0x2c],ecx
  425a2d:	mov    ecx,DWORD PTR [ebp-0x24]
  425a30:	mov    DWORD PTR [ebp-0x28],ecx
  425a33:	mov    DWORD PTR [ebp-0x24],esi
  425a36:	pop    eax
  425a37:	pop    edi
  425a38:	pop    ecx
  425a39:	mov    edx,0xa68
  425a3e:	mov    cl,0x8
  425a40:	add    edx,edi
  425a42:	push   edx
  425a43:	push   edi
  425a44:	cmp    al,0x7
  425a46:	mov    al,cl
  425a48:	jb     0x425a4c
  425a4a:	add    al,0x3
  425a4c:	push   eax
  425a4d:	mov    ebp,DWORD PTR [ebp-0x34]
  425a50:	call   0x425c13
  425a55:	jne    0x425a6b
  425a57:	mov    eax,DWORD PTR [ebp-0x18]
  425a5a:	mov    edi,DWORD PTR [ebp-0x34]
  425a5d:	shl    eax,0x3
  425a60:	sub    ecx,ecx
  425a62:	push   0x8
  425a64:	pop    esi
  425a65:	lea    edi,[edi+eax*2+0x4]
  425a69:	jmp    0x425aa0
  425a6b:	mov    ebp,DWORD PTR [ebp-0x34]
  425a6e:	add    ebp,0x2
  425a71:	call   0x425c13
  425a76:	jne    0x425a90
  425a78:	mov    eax,DWORD PTR [ebp-0x18]
  425a7b:	mov    edi,DWORD PTR [ebp-0x34]
  425a7e:	shl    eax,0x3
  425a81:	push   0x8
  425a83:	pop    ecx
  425a84:	push   0x8
  425a86:	pop    esi
  425a87:	lea    edi,[edi+eax*2+0x104]
  425a8e:	jmp    0x425aa0
  425a90:	mov    edi,0x204
  425a95:	add    edi,DWORD PTR [ebp-0x34]
  425a98:	push   0x10
  425a9a:	pop    ecx
  425a9b:	mov    esi,0x100
  425aa0:	mov    DWORD PTR [ebp-0x1c],ecx
  425aa3:	sub    eax,eax
  425aa5:	inc    eax
  425aa6:	mov    ebp,edi
  425aa8:	call   0x425c15
  425aad:	mov    ecx,eax
  425aaf:	sub    ecx,esi
  425ab1:	jb     0x425aa6
  425ab3:	add    DWORD PTR [ebp-0x1c],ecx
  425ab6:	cmp    DWORD PTR [ebp-0x3c],0x4
  425aba:	jae    0x425b70
  425ac0:	add    DWORD PTR [ebp-0x3c],0x7
  425ac4:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ac7:	cmp    ecx,0x4
  425aca:	jb     0x425acf
  425acc:	push   0x3
  425ace:	pop    ecx
  425acf:	mov    edi,DWORD PTR [ebp-0x38]
  425ad2:	shl    ecx,0x6
  425ad5:	sub    eax,eax
  425ad7:	inc    eax
  425ad8:	push   0x40
  425ada:	pop    esi
  425adb:	lea    edi,[edi+ecx*2+0x360]
  425ae2:	mov    ebp,edi
  425ae4:	call   0x425c15
  425ae9:	mov    ecx,eax
  425aeb:	sub    ecx,esi
  425aed:	jb     0x425ae2
  425aef:	mov    DWORD PTR [ebp-0x18],ecx
  425af2:	mov    DWORD PTR [ebp-0x24],ecx
  425af5:	cmp    ecx,0x4
  425af8:	jb     0x425b6d
  425afa:	mov    esi,ecx
  425afc:	and    DWORD PTR [ebp-0x24],0x1
  425b00:	shr    esi,1
  425b02:	or     DWORD PTR [ebp-0x24],0x2
  425b06:	dec    esi
  425b07:	cmp    ecx,0xe
  425b0a:	jae    0x425b25
  425b0c:	mov    eax,0x2af
  425b11:	sub    eax,ecx
  425b13:	mov    ecx,esi
  425b15:	shl    BYTE PTR [ebp-0x24],cl
  425b18:	add    eax,DWORD PTR [ebp-0x24]
  425b1b:	shl    eax,1
  425b1d:	add    eax,DWORD PTR [ebp-0x38]
  425b20:	mov    DWORD PTR [ebp-0x34],eax
  425b23:	jmp    0x425b52
  425b25:	sub    esi,0x4
  425b28:	call   0x425bd2
  425b2d:	shr    ebx,1
  425b2f:	shl    DWORD PTR [ebp-0x24],1
  425b32:	cmp    DWORD PTR [ebp-0x20],ebx
  425b35:	jb     0x425b3d
  425b37:	inc    DWORD PTR [ebp-0x24]
  425b3a:	sub    DWORD PTR [ebp-0x20],ebx
  425b3d:	dec    esi
  425b3e:	jne    0x425b28
  425b40:	mov    eax,0x644
  425b45:	add    eax,DWORD PTR [ebp-0x38]
  425b48:	mov    DWORD PTR [ebp-0x34],eax
  425b4b:	shl    DWORD PTR [ebp-0x24],0x4
  425b4f:	push   0x4
  425b51:	pop    esi
  425b52:	sub    edi,edi
  425b54:	inc    edi
  425b55:	mov    eax,edi
  425b57:	mov    ebp,DWORD PTR [ebp-0x34]
  425b5a:	call   0x425c15
  425b5f:	test   al,0x1
  425b61:	je     0x425b66
  425b63:	or     DWORD PTR [ebp-0x24],edi
  425b66:	shl    edi,1
  425b68:	dec    esi
  425b69:	jne    0x425b57
  425b6b:	jmp    0x425b6d
  425b6d:	inc    DWORD PTR [ebp-0x24]
  425b70:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b73:	add    ecx,0x2
  425b76:	mov    edi,DWORD PTR [ebp-0x4]
  425b79:	mov    eax,edi
  425b7b:	sub    eax,DWORD PTR [ebp+0x24]
  425b7e:	cmp    DWORD PTR [ebp-0x24],eax
  425b81:	ja     0x425bcd
  425b83:	mov    esi,edi
  425b85:	sub    esi,DWORD PTR [ebp-0x24]
  425b88:	mov    edx,DWORD PTR [ebp+0x28]
  425b8b:	lods   al,BYTE PTR ds:[esi]
  425b8c:	stos   BYTE PTR es:[edi],al
  425b8d:	cmp    edi,edx
  425b8f:	jae    0x425b94
  425b91:	dec    ecx
  425b92:	jne    0x425b8b
  425b94:	mov    DWORD PTR [ebp-0x4],edi
  425b97:	movzx  esi,al
  425b9a:	cmp    edi,DWORD PTR [ebp+0x28]
  425b9d:	jb     0x4258fe
  425ba3:	call   0x425bd2
  425ba8:	sub    eax,eax
  425baa:	lea    ebp,[esp+0x3c]
  425bae:	mov    edx,DWORD PTR [ebp+0x20]
  425bb1:	mov    esi,DWORD PTR [ebp-0x8]
  425bb4:	sub    esi,DWORD PTR [ebp+0x18]
  425bb7:	mov    DWORD PTR [edx],esi
  425bb9:	mov    edx,DWORD PTR [ebp+0x2c]
  425bbc:	mov    edi,DWORD PTR [ebp-0x4]
  425bbf:	sub    edi,DWORD PTR [ebx+0x16]
  425bc2:	lods   al,BYTE PTR ds:[esi]
  425bc3:	outs   dx,BYTE PTR ds:[esi]
  425bc4:	lods   eax,DWORD PTR ds:[esi]
  425bc5:	repz inc DWORD PTR [ebx]
  425bc8:	xchg   ecx,eax
  425bc9:	test   BYTE PTR [esi-0x76cd1801],0x87
  425bd0:	xor    eax,0x86758ce9
  425bd5:	xchg   BYTE PTR [esi-0x6a75b076],al
  425bdb:	lea    edx,ds:0x5bb4dfa6
  425be1:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425be8:	fwait
  425be9:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425bef:	fwait
  425bf0:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425bf7:	mov    ebx,0x8960c299
  425bfc:	lea    ecx,ds:0x299b9296
  425c02:	xchg   edx,eax
  425c03:	lea    esi,ds:0x8960c29e
  425c09:	xchg   edx,eax
  425c0a:	fwait
  425c0b:	cdq    
  425c0c:	mov    ah,0x3b
  425c0e:	test   eax,0x869b37bc
  425c13:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425c19:	mov    WORD PTR [ebp-0x7a],?
  425c1c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425c22:	mov    bh,0x16
  425c24:	lea    dx,[edi]
  425c27:	push   ss
  425c28:	push   es
  425c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c2a:	jb     0x425be3
  425c2c:	push   ss
  425c2d:	not    DWORD PTR [ebx-0x8]
  425c30:	mov    al,0xca
  425c32:	test   DWORD PTR [edi+0x158d6616],edx
  425c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c39:	test   al,0xd7
  425c3b:	push   ss
  425c3c:	push   es
  425c3d:	mov    ah,0xb5
  425c3f:	ret    0x55b7
  425c42:	add    cl,al
  425c44:	jmp    0xcaf16b54
  425c49:	cmp    DWORD PTR [esp+0x20],ecx
  425c4d:	jae    0x425c66
  425c4f:	mov    ebx,ecx
  425c51:	mov    ecx,0x800
  425c56:	sub    ecx,edx
  425c58:	shr    ecx,0x5
  425c5b:	add    WORD PTR [ebp+0x0],cx
  425c5f:	add    eax,eax
  425c61:	lea    ebp,[esp+0x40]
  425c65:	ret    
  425c66:	shr    edx,0x5
  425c69:	sub    DWORD PTR [esp+0x20],ecx
  425c6d:	sub    ebx,ecx
  425c6f:	sub    WORD PTR [ebp+0x0],dx
  425c73:	add    eax,eax
  425c75:	add    eax,0x1
  425c78:	lea    ebp,[esp+0x40]
  425c7c:	ret    
  425c7d:	push   ebp
  425c7e:	mov    ebp,esp
  425c80:	sub    esp,0x12c
  425c86:	push   ebx
  425c87:	push   esi
  425c88:	push   edi
  425c89:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425c90:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425c97:	mov    eax,DWORD PTR [ebp+0x8]
  425c9a:	mov    DWORD PTR [ebp+0x8],eax
  425c9d:	mov    ecx,DWORD PTR [ebp-0x10]
  425ca0:	mov    ebx,0x75108aa
  425ca5:	xor    ecx,ebx
  425ca7:	mov    eax,0x3272f1
  425cac:	add    ecx,eax
  425cae:	mov    DWORD PTR [ebp-0x24],ecx
  425cb1:	mov    ecx,DWORD PTR [ebp-0x10]
  425cb4:	xor    ecx,ebx
  425cb6:	add    ecx,eax
  425cb8:	mov    DWORD PTR [ebp-0x40],ecx
  425cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  425cbe:	xor    ecx,ebx
  425cc0:	add    ecx,eax
  425cc2:	mov    DWORD PTR [ebp-0x3c],ecx
  425cc5:	mov    ecx,DWORD PTR [ebp-0x10]
  425cc8:	xor    ecx,ebx
  425cca:	add    ecx,eax
  425ccc:	mov    DWORD PTR [ebp-0xd8],ecx
  425cd2:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425cd9:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425ce0:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425ce7:	push   0x25
  425ce9:	pop    ecx
  425cea:	mov    DWORD PTR [ebp-0x30],ecx
  425ced:	mov    DWORD PTR [ebp-0x30],ecx
  425cf0:	push   0x65
  425cf2:	pop    ecx
  425cf3:	mov    DWORD PTR [ebp-0x30],ecx
  425cf6:	mov    DWORD PTR [ebp-0x30],ecx
  425cf9:	mov    DWORD PTR [ebp-0x30],0x4d
  425d00:	mov    DWORD PTR [ebp-0x30],0x43
  425d07:	mov    ecx,DWORD PTR [ebp-0x10]
  425d0a:	xor    ecx,ebx
  425d0c:	add    ecx,eax
  425d0e:	mov    DWORD PTR [ebp-0x30],ecx
  425d11:	mov    ecx,DWORD PTR [ebp-0x10]
  425d14:	xor    ecx,ebx
  425d16:	add    ecx,eax
  425d18:	mov    DWORD PTR [ebp-0x30],ecx
  425d1b:	mov    DWORD PTR [ebp-0x28],0x258
  425d22:	mov    DWORD PTR [ebp-0x34],0x36
  425d29:	mov    DWORD PTR [ebp-0x14],0x7a
  425d30:	lea    edi,[ebp-0x10c]
  425d36:	lea    esi,[ebp-0x12c]
  425d3c:	call   0x4269fb
  425d41:	dec    DWORD PTR [ebp-0x14]
  425d44:	jne    0x425d30
  425d46:	dec    DWORD PTR [ebp-0x34]
  425d49:	jne    0x425d29
  425d4b:	dec    DWORD PTR [ebp-0x28]
  425d4e:	jne    0x425d22
  425d50:	mov    DWORD PTR [ebp-0x28],0x400e
  425d57:	mov    eax,DWORD PTR [ebp-0x10]
  425d5a:	xor    eax,ebx
  425d5c:	mov    esi,0x3272f1
  425d61:	add    eax,esi
  425d63:	mov    DWORD PTR [ebp-0x1c],eax
  425d66:	mov    eax,DWORD PTR [ebp-0x10]
  425d69:	and    DWORD PTR [ebp-0x94],0x0
  425d70:	xor    eax,ebx
  425d72:	add    eax,esi
  425d74:	mov    DWORD PTR [ebp-0x38],eax
  425d77:	mov    eax,fs:0x18
  425d7d:	mov    DWORD PTR [ebp-0x94],eax
  425d83:	mov    eax,DWORD PTR [eax+0x30]
  425d86:	mov    DWORD PTR [ebp-0xcc],eax
  425d8c:	mov    eax,DWORD PTR [eax+0xc]
  425d8f:	mov    DWORD PTR [ebp-0xc0],eax
  425d95:	mov    eax,DWORD PTR [ebp+0x8]
  425d98:	lea    ecx,[ebp-0x94]
  425d9e:	mov    DWORD PTR [eax+0x1a0],ecx
  425da4:	mov    eax,DWORD PTR [ebp+0x8]
  425da7:	lea    ecx,[ebp-0xcc]
  425dad:	mov    DWORD PTR [eax+0x1a4],ecx
  425db3:	mov    eax,DWORD PTR [ebp+0x8]
  425db6:	push   DWORD PTR [ebp+0x8]
  425db9:	lea    ecx,[ebp-0xc0]
  425dbf:	mov    DWORD PTR [eax+0x1a8],ecx
  425dc5:	call   0x4281bc
  425dca:	mov    ecx,DWORD PTR [ebp-0x10]
  425dcd:	xor    ecx,ebx
  425dcf:	add    ecx,esi
  425dd1:	cmp    ecx,eax
  425dd3:	je     0x426156
  425dd9:	mov    eax,DWORD PTR [ebp+0x8]
  425ddc:	mov    eax,DWORD PTR [eax+0x194]
  425de2:	mov    ecx,DWORD PTR [eax]
  425de4:	mov    eax,DWORD PTR [ebp+0x8]
  425de7:	mov    eax,DWORD PTR [eax+0x194]
  425ded:	mov    eax,DWORD PTR [eax]
  425def:	add    eax,DWORD PTR [ecx+0x3c]
  425df2:	mov    ecx,DWORD PTR [ebp+0x8]
  425df5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425dfb:	lea    edx,[ebp-0xec]
  425e01:	push   edx
  425e02:	mov    edx,DWORD PTR [ebp+0x8]
  425e05:	mov    edx,DWORD PTR [edx+0x18c]
  425e0b:	mov    edx,DWORD PTR [edx]
  425e0d:	add    edx,DWORD PTR [eax+0x88]
  425e13:	push   0x4
  425e15:	push   DWORD PTR [eax+0x8c]
  425e1b:	push   edx
  425e1c:	call   DWORD PTR [ecx+0x1c]
  425e1f:	push   DWORD PTR [ebp+0x8]
  425e22:	xor    eax,eax
  425e24:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425e2e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425e38:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425e42:	mov    BYTE PTR [ebp-0x9c],0x83
  425e49:	lea    edi,[ebp-0x9b]
  425e4f:	stos   DWORD PTR es:[edi],eax
  425e50:	stos   WORD PTR es:[edi],ax
  425e52:	stos   BYTE PTR es:[edi],al
  425e53:	xor    eax,eax
  425e55:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425e5f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425e69:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425e73:	mov    BYTE PTR [ebp-0xb0],0x83
  425e7a:	lea    edi,[ebp-0xaf]
  425e80:	stos   DWORD PTR es:[edi],eax
  425e81:	stos   WORD PTR es:[edi],ax
  425e83:	stos   BYTE PTR es:[edi],al
  425e84:	mov    edi,DWORD PTR [ebp+0x8]
  425e87:	mov    eax,DWORD PTR [ebp+0x8]
  425e8a:	mov    edx,DWORD PTR [eax+0x1b8]
  425e90:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425e97:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425e9e:	mov    WORD PTR [ebp-0x60],0x833c
  425ea4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425eae:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425eb8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425ec2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425ecc:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425ed3:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425eda:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425ee1:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425ee8:	mov    DWORD PTR [ebp-0x70],0xd181008
  425eef:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425ef6:	call   0x4281eb
  425efb:	push   eax
  425efc:	mov    eax,DWORD PTR [ebp+0x8]
  425eff:	mov    eax,DWORD PTR [eax+0x1a8]
  425f05:	push   DWORD PTR [eax]
  425f07:	call   0x427e8c
  425f0c:	test   eax,eax
  425f0e:	jne    0x425f60
  425f10:	mov    eax,DWORD PTR [ebp+0x8]
  425f13:	mov    eax,DWORD PTR [eax+0x1e0]
  425f19:	mov    edi,DWORD PTR [ebp+0x8]
  425f1c:	add    eax,0x4
  425f1f:	mov    DWORD PTR [ebp-0x20],eax
  425f22:	mov    eax,DWORD PTR [ebp+0x8]
  425f25:	mov    edx,DWORD PTR [eax+0x1b8]
  425f2b:	call   0x4281eb
  425f30:	push   eax
  425f31:	mov    eax,DWORD PTR [ebp-0x20]
  425f34:	call   DWORD PTR [eax]
  425f36:	test   eax,eax
  425f38:	jne    0x425f60
  425f3a:	mov    eax,DWORD PTR [ebp+0x8]
  425f3d:	mov    eax,DWORD PTR [eax+0x1e0]
  425f43:	mov    edi,DWORD PTR [ebp+0x8]
  425f46:	add    eax,0x10
  425f49:	mov    DWORD PTR [ebp-0x20],eax
  425f4c:	mov    eax,DWORD PTR [ebp+0x8]
  425f4f:	mov    edx,DWORD PTR [eax+0x1b8]
  425f55:	call   0x4281eb
  425f5a:	push   eax
  425f5b:	mov    eax,DWORD PTR [ebp-0x20]
  425f5e:	call   DWORD PTR [eax]
  425f60:	mov    eax,DWORD PTR [ebp-0x10]
  425f63:	mov    ecx,DWORD PTR [ebp-0x28]
  425f66:	xor    eax,ebx
  425f68:	add    eax,esi
  425f6a:	cmp    eax,ecx
  425f6c:	je     0x42612f
  425f72:	mov    eax,DWORD PTR [ebp-0x18]
  425f75:	xor    eax,ebx
  425f77:	mov    ecx,0xffcd8d0f
  425f7c:	sub    ecx,eax
  425f7e:	add    ecx,DWORD PTR [ebp-0x28]
  425f81:	mov    eax,DWORD PTR [ebp-0x1c]
  425f84:	cmp    eax,ecx
  425f86:	ja     0x42612f
  425f8c:	mov    DWORD PTR [ebp-0x34],0x0
  425f93:	push   DWORD PTR [ebp+0x8]
  425f96:	mov    edi,DWORD PTR [ebp+0x8]
  425f99:	mov    eax,DWORD PTR [ebp+0x8]
  425f9c:	mov    edx,DWORD PTR [eax+0x1b4]
  425fa2:	call   0x4281eb
  425fa7:	push   eax
  425fa8:	mov    eax,DWORD PTR [ebp+0x8]
  425fab:	mov    eax,DWORD PTR [eax+0x1a8]
  425fb1:	push   DWORD PTR [eax]
  425fb3:	call   0x427e8c
  425fb8:	mov    ecx,DWORD PTR [ebp+0x8]
  425fbb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425fc1:	mov    DWORD PTR [ecx],eax
  425fc3:	mov    eax,DWORD PTR [ebp+0x8]
  425fc6:	mov    edi,DWORD PTR [eax+0x1e0]
  425fcc:	mov    esi,DWORD PTR [ebp+0x8]
  425fcf:	xor    eax,eax
  425fd1:	lea    edx,[ebp-0x7c]
  425fd4:	call   0x428221
  425fd9:	push   eax
  425fda:	mov    eax,DWORD PTR [ebp+0x8]
  425fdd:	mov    eax,DWORD PTR [eax+0x19c]
  425fe3:	push   DWORD PTR [eax]
  425fe5:	call   DWORD PTR [edi+0x8]
  425fe8:	mov    DWORD PTR [ebp-0x20],eax
  425feb:	mov    eax,DWORD PTR [ebp+0x8]
  425fee:	mov    edi,DWORD PTR [eax+0x1e0]
  425ff4:	mov    esi,DWORD PTR [ebp+0x8]
  425ff7:	xor    eax,eax
  425ff9:	lea    edx,[ebp-0x90]
  425fff:	call   0x428221
  426004:	push   eax
  426005:	mov    eax,DWORD PTR [ebp+0x8]
  426008:	mov    eax,DWORD PTR [eax+0x19c]
  42600e:	push   DWORD PTR [eax]
  426010:	call   DWORD PTR [edi+0x8]
  426013:	mov    eax,DWORD PTR [ebp+0x8]
  426016:	mov    edi,DWORD PTR [eax+0x1e0]
  42601c:	mov    esi,DWORD PTR [ebp+0x8]
  42601f:	xor    eax,eax
  426021:	lea    edx,[ebp-0xa8]
  426027:	call   0x428221
  42602c:	push   eax
  42602d:	mov    eax,DWORD PTR [ebp+0x8]
  426030:	mov    eax,DWORD PTR [eax+0x19c]
  426036:	push   DWORD PTR [eax]
  426038:	call   DWORD PTR [edi+0x8]
  42603b:	and    DWORD PTR [ebp-0x8],0x0
  42603f:	mov    DWORD PTR [ebp-0x48],eax
  426042:	mov    eax,DWORD PTR [ebp-0x8]
  426045:	and    eax,0x7
  426048:	add    eax,0x31
  42604b:	push   eax
  42604c:	call   DWORD PTR [ebp-0x20]
  42604f:	test   eax,eax
  426051:	je     0x426095
  426053:	mov    eax,DWORD PTR [ebp-0x8]
  426056:	push   0x19
  426058:	xor    edx,edx
  42605a:	pop    ecx
  42605b:	div    ecx
  42605d:	add    dl,0x41
  426060:	movzx  eax,dl
  426063:	push   eax
  426064:	call   DWORD PTR [ebp-0x48]
  426067:	test   eax,eax
  426069:	jne    0x426095
  42606b:	mov    eax,DWORD PTR [ebp+0x8]
  42606e:	mov    edi,DWORD PTR [eax+0x1e0]
  426074:	mov    esi,DWORD PTR [ebp+0x8]
  426077:	xor    eax,eax
  426079:	lea    edx,[ebp-0x68]
  42607c:	call   0x428221
  426081:	push   eax
  426082:	mov    eax,DWORD PTR [ebp+0x8]
  426085:	mov    eax,DWORD PTR [eax+0x198]
  42608b:	push   DWORD PTR [eax]
  42608d:	call   DWORD PTR [edi+0x8]
  426090:	mov    DWORD PTR [ebp-0x14],eax
  426093:	jmp    0x426099
  426095:	and    DWORD PTR [ebp-0x14],0x0
  426099:	inc    DWORD PTR [ebp-0x8]
  42609c:	cmp    DWORD PTR [ebp-0x8],0x10
  4260a0:	jb     0x426042
  4260a2:	mov    eax,DWORD PTR [ebp-0x18]
  4260a5:	mov    esi,DWORD PTR [ebp+0x8]
  4260a8:	xor    eax,ebx
  4260aa:	mov    edi,0x3272f1
  4260af:	add    eax,edi
  4260b1:	lea    edx,[ebp-0x10c]
  4260b7:	call   0x428221
  4260bc:	push   eax
  4260bd:	mov    eax,DWORD PTR [ebp-0x10]
  4260c0:	mov    esi,DWORD PTR [ebp+0x8]
  4260c3:	xor    eax,ebx
  4260c5:	add    eax,edi
  4260c7:	lea    edx,[ebp-0x12c]
  4260cd:	call   0x428221
  4260d2:	push   eax
  4260d3:	call   DWORD PTR [ebp-0x14]
  4260d6:	mov    ecx,DWORD PTR [ebp-0x10]
  4260d9:	xor    ecx,ebx
  4260db:	add    ecx,edi
  4260dd:	cmp    ecx,eax
  4260df:	jne    0x4260e8
  4260e1:	mov    DWORD PTR [ebp-0x34],0x1
  4260e8:	mov    eax,DWORD PTR [ebp-0x18]
  4260eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260ee:	xor    eax,ebx
  4260f0:	lea    eax,[eax+ecx*1+0x3272f1]
  4260f7:	mov    DWORD PTR [ebp-0x1c],eax
  4260fa:	mov    eax,DWORD PTR [ebp-0x34]
  4260fd:	test   eax,eax
  4260ff:	je     0x426113
  426101:	mov    eax,DWORD PTR [ebp-0x18]
  426104:	mov    ecx,DWORD PTR [ebp-0x38]
  426107:	xor    eax,ebx
  426109:	lea    eax,[eax+ecx*1+0x3272f1]
  426110:	mov    DWORD PTR [ebp-0x38],eax
  426113:	mov    eax,DWORD PTR [ebp-0x18]
  426116:	xor    eax,ebx
  426118:	mov    ecx,0xffcd8d0f
  42611d:	sub    ecx,eax
  42611f:	add    ecx,DWORD PTR [ebp-0x28]
  426122:	mov    eax,DWORD PTR [ebp-0x1c]
  426125:	cmp    eax,ecx
  426127:	jbe    0x425f8c
  42612d:	mov    esi,edi
  42612f:	mov    eax,DWORD PTR [ebp-0x38]
  426132:	mov    ecx,DWORD PTR [ebp-0x1c]
  426135:	cmp    ecx,eax
  426137:	jne    0x42614a
  426139:	push   DWORD PTR [ebp+0x8]
  42613c:	lea    eax,[ebp-0x40]
  42613f:	push   eax
  426140:	call   0x428c8e
  426145:	mov    DWORD PTR [ebp-0x24],eax
  426148:	jmp    0x426156
  42614a:	mov    eax,DWORD PTR [ebp-0x24]
  42614d:	mov    ecx,DWORD PTR [ebp-0x18]
  426150:	xor    ecx,ebx
  426152:	add    ecx,esi
  426154:	xor    DWORD PTR [eax],ecx
  426156:	mov    eax,DWORD PTR [ebp-0x10]
  426159:	mov    ecx,DWORD PTR [ebp-0x24]
  42615c:	xor    eax,ebx
  42615e:	add    eax,esi
  426160:	cmp    eax,ecx
  426162:	je     0x4268d9
  426168:	mov    eax,DWORD PTR [ebp-0x10]
  42616b:	mov    ecx,DWORD PTR [ebp-0x40]
  42616e:	xor    eax,ebx
  426170:	add    eax,esi
  426172:	cmp    eax,ecx
  426174:	je     0x4268d9
  42617a:	mov    eax,DWORD PTR [ebp-0x10]
  42617d:	xor    eax,ebx
  42617f:	add    eax,esi
  426181:	jmp    0x42619f
  426183:	mov    edi,DWORD PTR [ebp-0x24]
  426186:	mov    cl,al
  426188:	and    cl,0x1f
  42618b:	or     dl,0xff
  42618e:	sub    dl,cl
  426190:	add    BYTE PTR [edi+eax*1],dl
  426193:	mov    ecx,DWORD PTR [ebp-0x18]
  426196:	xor    ecx,ebx
  426198:	lea    eax,[eax+ecx*1+0x3272f1]
  42619f:	mov    ecx,DWORD PTR [ebp-0x40]
  4261a2:	cmp    eax,ecx
  4261a4:	jb     0x426183
  4261a6:	mov    eax,DWORD PTR [ebp-0x40]
  4261a9:	mov    DWORD PTR [ebp-0x28],eax
  4261ac:	mov    eax,DWORD PTR [ebp-0x24]
  4261af:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4261b6:	mov    DWORD PTR [ebp-0xd4],eax
  4261bc:	mov    edi,0xf89c85ba
  4261c1:	mov    DWORD PTR [ebp-0x2c],edi
  4261c4:	mov    eax,DWORD PTR [ebp-0x38]
  4261c7:	xor    eax,ebx
  4261c9:	add    eax,esi
  4261cb:	mov    DWORD PTR [ebp-0xc],eax
  4261ce:	mov    eax,DWORD PTR [ebp-0x38]
  4261d1:	xor    eax,ebx
  4261d3:	add    eax,esi
  4261d5:	mov    DWORD PTR [ebp-0x8],eax
  4261d8:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4261df:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4261e6:	mov    eax,DWORD PTR [ebp-0x38]
  4261e9:	mov    ecx,DWORD PTR [ebp-0x28]
  4261ec:	xor    eax,ebx
  4261ee:	add    eax,esi
  4261f0:	cmp    ecx,eax
  4261f2:	je     0x4263f1
  4261f8:	jmp    0x4263cd
  4261fd:	mov    ecx,DWORD PTR [ebp-0xc]
  426200:	mov    eax,DWORD PTR [ebp-0x28]
  426203:	sub    eax,ecx
  426205:	mov    ecx,DWORD PTR [ebp-0x48]
  426208:	xor    ecx,ebx
  42620a:	add    ecx,esi
  42620c:	xor    edx,edx
  42620e:	div    ecx
  426210:	mov    DWORD PTR [ebp-0x8],eax
  426213:	mov    eax,DWORD PTR [ebp-0x4c]
  426216:	mov    ecx,DWORD PTR [ebp-0x8]
  426219:	xor    eax,ebx
  42621b:	add    eax,esi
  42621d:	cmp    ecx,eax
  42621f:	jbe    0x42622b
  426221:	mov    eax,DWORD PTR [ebp-0x4c]
  426224:	xor    eax,ebx
  426226:	add    eax,esi
  426228:	mov    DWORD PTR [ebp-0x8],eax
  42622b:	mov    eax,DWORD PTR [ebp-0x48]
  42622e:	mov    ecx,DWORD PTR [ebp-0x8]
  426231:	xor    eax,ebx
  426233:	add    eax,esi
  426235:	imul   eax,ecx
  426238:	mov    DWORD PTR [ebp-0x8],eax
  42623b:	mov    eax,DWORD PTR [ebp-0x38]
  42623e:	mov    ecx,DWORD PTR [ebp-0x8]
  426241:	xor    eax,ebx
  426243:	add    eax,esi
  426245:	cmp    ecx,eax
  426247:	je     0x4263bb
  42624d:	mov    eax,DWORD PTR [ebp-0x8]
  426250:	mov    DWORD PTR [ebp-0x14],eax
  426253:	mov    eax,DWORD PTR [ebp-0xc]
  426256:	add    eax,DWORD PTR [ebp-0xd4]
  42625c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426263:	mov    DWORD PTR [ebp-0x34],edi
  426266:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  426270:	mov    DWORD PTR [ebp-0x8],eax
  426273:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42627a:	mov    DWORD PTR [ebp-0x1c],edi
  42627d:	mov    eax,DWORD PTR [ebp-0x20]
  426280:	xor    eax,ebx
  426282:	add    eax,esi
  426284:	jmp    0x42637a
  426289:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  426293:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42629d:	mov    eax,DWORD PTR [ebp-0x1c]
  4262a0:	mov    ecx,DWORD PTR [ebp-0x44]
  4262a3:	xor    eax,ebx
  4262a5:	add    eax,esi
  4262a7:	imul   eax,ecx
  4262aa:	mov    ecx,DWORD PTR [ebp-0x8]
  4262ad:	mov    al,BYTE PTR [eax+ecx*1]
  4262b0:	mov    BYTE PTR [ebp-0x2],al
  4262b3:	mov    eax,DWORD PTR [ebp-0x1c]
  4262b6:	mov    ecx,DWORD PTR [ebp-0x44]
  4262b9:	xor    eax,ebx
  4262bb:	add    eax,esi
  4262bd:	imul   eax,ecx
  4262c0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4262c6:	xor    ecx,ebx
  4262c8:	add    eax,ecx
  4262ca:	mov    ecx,DWORD PTR [ebp-0x8]
  4262cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4262d5:	mov    ecx,DWORD PTR [ebp-0xe0]
  4262db:	xor    ecx,ebx
  4262dd:	lea    eax,[ecx+eax*1+0x3272f1]
  4262e4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4262e8:	xor    ecx,eax
  4262ea:	mov    BYTE PTR [ebp-0x2],cl
  4262ed:	mov    al,BYTE PTR [ebp-0x2]
  4262f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4262f3:	mov    edx,DWORD PTR [ebp-0x44]
  4262f6:	xor    ecx,ebx
  4262f8:	add    ecx,esi
  4262fa:	imul   ecx,edx
  4262fd:	mov    edx,DWORD PTR [ebp-0x8]
  426300:	mov    BYTE PTR [ecx+edx*1],al
  426303:	mov    eax,DWORD PTR [ebp-0x1c]
  426306:	mov    ecx,DWORD PTR [ebp-0x44]
  426309:	xor    eax,ebx
  42630b:	add    eax,esi
  42630d:	imul   eax,ecx
  426310:	mov    ecx,DWORD PTR [ebp-0x8]
  426313:	mov    al,BYTE PTR [eax+ecx*1]
  426316:	mov    BYTE PTR [ebp-0x2],al
  426319:	mov    eax,DWORD PTR [ebp-0x1c]
  42631c:	mov    ecx,DWORD PTR [ebp-0x44]
  42631f:	xor    eax,ebx
  426321:	add    eax,esi
  426323:	imul   eax,ecx
  426326:	mov    ecx,DWORD PTR [ebp-0x34]
  426329:	xor    ecx,ebx
  42632b:	add    eax,ecx
  42632d:	mov    ecx,DWORD PTR [ebp-0x8]
  426330:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426338:	mov    ecx,DWORD PTR [ebp-0xc4]
  42633e:	xor    ecx,ebx
  426340:	lea    eax,[ecx+eax*1+0x3272f1]
  426347:	movzx  ecx,BYTE PTR [ebp-0x2]
  42634b:	xor    ecx,eax
  42634d:	mov    BYTE PTR [ebp-0x2],cl
  426350:	mov    al,BYTE PTR [ebp-0x2]
  426353:	mov    ecx,DWORD PTR [ebp-0x1c]
  426356:	mov    edx,DWORD PTR [ebp-0x44]
  426359:	xor    ecx,ebx
  42635b:	add    ecx,esi
  42635d:	imul   ecx,edx
  426360:	mov    edx,DWORD PTR [ebp-0x8]
  426363:	mov    BYTE PTR [ecx+edx*1],al
  426366:	mov    eax,DWORD PTR [ebp-0x30]
  426369:	mov    ecx,DWORD PTR [ebp-0x34]
  42636c:	xor    eax,ebx
  42636e:	xor    ecx,ebx
  426370:	add    eax,esi
  426372:	add    ecx,esi
  426374:	imul   eax,ecx
  426377:	add    eax,DWORD PTR [ebp-0x44]
  42637a:	mov    DWORD PTR [ebp-0x44],eax
  42637d:	mov    eax,DWORD PTR [ebp-0x44]
  426380:	mov    ecx,DWORD PTR [ebp-0x14]
  426383:	cmp    ecx,eax
  426385:	jb     0x426289
  42638b:	mov    eax,DWORD PTR [ebp-0x34]
  42638e:	mov    ecx,DWORD PTR [ebp-0x14]
  426391:	xor    eax,ebx
  426393:	add    eax,esi
  426395:	imul   eax,ecx
  426398:	mov    ecx,DWORD PTR [ebp-0x20]
  42639b:	xor    ecx,ebx
  42639d:	add    ecx,esi
  42639f:	or     eax,ecx
  4263a1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4263a4:	xor    ecx,ebx
  4263a6:	add    eax,ecx
  4263a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4263ab:	xor    ecx,ebx
  4263ad:	add    eax,ecx
  4263af:	mov    ecx,DWORD PTR [ebp-0xc]
  4263b2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4263b9:	jmp    0x4263ca
  4263bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4263be:	mov    ecx,DWORD PTR [ebp-0xc]
  4263c1:	xor    eax,ebx
  4263c3:	lea    eax,[eax+ecx*1+0x3272f1]
  4263ca:	mov    DWORD PTR [ebp-0xc],eax
  4263cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4263d0:	xor    eax,ebx
  4263d2:	mov    ecx,0xffcd8d0f
  4263d7:	sub    ecx,eax
  4263d9:	add    ecx,DWORD PTR [ebp-0x28]
  4263dc:	mov    eax,DWORD PTR [ebp-0x2c]
  4263df:	mov    edx,DWORD PTR [ebp-0xc]
  4263e2:	xor    eax,ebx
  4263e4:	add    eax,esi
  4263e6:	imul   eax,edx
  4263e9:	cmp    eax,ecx
  4263eb:	jbe    0x4261fd
  4263f1:	mov    eax,DWORD PTR [ebp-0x10]
  4263f4:	mov    ecx,DWORD PTR [ebp-0x40]
  4263f7:	mov    eax,DWORD PTR [ebp+0x8]
  4263fa:	mov    edx,DWORD PTR [ebp-0x54]
  4263fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426403:	xor    edx,ebx
  426405:	add    edx,esi
  426407:	push   edx
  426408:	mov    edx,DWORD PTR [ebp-0x3c]
  42640b:	xor    edx,ebx
  42640d:	add    edx,esi
  42640f:	push   edx
  426410:	push   ecx
  426411:	mov    DWORD PTR [ebp-0x30],ecx
  426414:	mov    ecx,DWORD PTR [ebp-0x10]
  426417:	xor    ecx,ebx
  426419:	add    ecx,esi
  42641b:	push   ecx
  42641c:	call   DWORD PTR [eax+0x14]
  42641f:	mov    edi,eax
  426421:	mov    eax,DWORD PTR [ebp-0x10]
  426424:	xor    eax,ebx
  426426:	add    eax,esi
  426428:	cmp    eax,edi
  42642a:	je     0x426485
  42642c:	mov    eax,DWORD PTR [ebp-0x10]
  42642f:	jmp    0x426452
  426431:	mov    ecx,DWORD PTR [ebp-0x24]
  426434:	xor    eax,ebx
  426436:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42643d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426444:	mov    ecx,DWORD PTR [ebp-0x18]
  426447:	xor    ecx,ebx
  426449:	lea    eax,[ecx+eax*1+0x3272f1]
  426450:	xor    eax,ebx
  426452:	mov    ecx,DWORD PTR [ebp-0x40]
  426455:	sub    ecx,esi
  426457:	xor    ecx,ebx
  426459:	cmp    eax,ecx
  42645b:	jne    0x426431
  42645d:	mov    eax,DWORD PTR [ebp+0x8]
  426460:	mov    ecx,DWORD PTR [ebp-0x50]
  426463:	mov    eax,DWORD PTR [eax+0x1e0]
  426469:	xor    ecx,ebx
  42646b:	add    ecx,esi
  42646d:	push   ecx
  42646e:	mov    ecx,DWORD PTR [ebp-0x10]
  426471:	xor    ecx,ebx
  426473:	add    ecx,esi
  426475:	push   ecx
  426476:	push   DWORD PTR [ebp-0x24]
  426479:	call   DWORD PTR [eax+0x18]
  42647c:	mov    eax,DWORD PTR [ebp-0x30]
  42647f:	mov    DWORD PTR [ebp-0x24],edi
  426482:	mov    DWORD PTR [ebp-0x40],eax
  426485:	mov    edi,DWORD PTR [ebp-0x24]
  426488:	mov    eax,DWORD PTR [ebp-0x18]
  42648b:	mov    ecx,DWORD PTR [ebp-0x10]
  42648e:	xor    eax,ebx
  426490:	mov    DWORD PTR [ebp-0x30],edi
  426493:	add    eax,esi
  426495:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  42649c:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4264a3:	jmp    0x4264d6
  4264a5:	xor    ecx,ebx
  4264a7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4264ae:	xor    dl,0x7c
  4264b1:	inc    dl
  4264b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4264b6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4264be:	movzx  edx,dl
  4264c1:	cmp    ecx,edx
  4264c3:	jne    0x4264e0
  4264c5:	mov    ecx,DWORD PTR [ebp-0x18]
  4264c8:	mov    edx,DWORD PTR [ebp-0x3c]
  4264cb:	xor    ecx,ebx
  4264cd:	lea    ecx,[ecx+edx*1+0x3272f1]
  4264d4:	xor    ecx,ebx
  4264d6:	cmp    ecx,0xf89c85bd
  4264dc:	jne    0x4264a5
  4264de:	jmp    0x4264e7
  4264e0:	mov    eax,DWORD PTR [ebp-0x10]
  4264e3:	xor    eax,ebx
  4264e5:	add    eax,esi
  4264e7:	mov    ecx,DWORD PTR [ebp-0x10]
  4264ea:	xor    ecx,ebx
  4264ec:	add    ecx,esi
  4264ee:	cmp    ecx,eax
  4264f0:	je     0x426663
  4264f6:	mov    eax,DWORD PTR [edi+0x8]
  4264f9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426500:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426507:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42650e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426515:	mov    DWORD PTR [ebp-0x14],eax
  426518:	mov    eax,DWORD PTR [ebp+0x8]
  42651b:	mov    ecx,DWORD PTR [ebp-0x20]
  42651e:	xor    ecx,ebx
  426520:	add    ecx,esi
  426522:	push   ecx
  426523:	mov    ecx,DWORD PTR [ebp-0x48]
  426526:	mov    eax,DWORD PTR [eax+0x1e0]
  42652c:	xor    ecx,ebx
  42652e:	add    ecx,esi
  426530:	push   ecx
  426531:	mov    ecx,DWORD PTR [ebp-0x3c]
  426534:	xor    ecx,ebx
  426536:	add    ecx,esi
  426538:	push   ecx
  426539:	mov    ecx,DWORD PTR [ebp-0xc]
  42653c:	xor    ecx,ebx
  42653e:	add    ecx,esi
  426540:	push   ecx
  426541:	call   DWORD PTR [eax+0x14]
  426544:	mov    edi,eax
  426546:	mov    eax,DWORD PTR [ebp+0x8]
  426549:	mov    ecx,DWORD PTR [ebp-0x20]
  42654c:	mov    eax,DWORD PTR [eax+0x1e0]
  426552:	xor    ecx,ebx
  426554:	add    ecx,esi
  426556:	push   ecx
  426557:	mov    ecx,DWORD PTR [ebp-0x48]
  42655a:	xor    ecx,ebx
  42655c:	add    ecx,esi
  42655e:	push   ecx
  42655f:	mov    ecx,DWORD PTR [ebp-0xc]
  426562:	push   DWORD PTR [ebp-0x14]
  426565:	xor    ecx,ebx
  426567:	add    ecx,esi
  426569:	push   ecx
  42656a:	call   DWORD PTR [eax+0x14]
  42656d:	mov    ecx,DWORD PTR [ebp-0xc]
  426570:	xor    ecx,ebx
  426572:	add    ecx,esi
  426574:	mov    DWORD PTR [ebp-0x20],eax
  426577:	cmp    ecx,edi
  426579:	je     0x426906
  42657f:	mov    ecx,DWORD PTR [ebp-0xc]
  426582:	xor    ecx,ebx
  426584:	add    ecx,esi
  426586:	cmp    ecx,eax
  426588:	je     0x426906
  42658e:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  426595:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42659c:	mov    ecx,DWORD PTR [ebp-0x3c]
  42659f:	xor    cl,0xaa
  4265a2:	sub    cl,0xf
  4265a5:	mov    BYTE PTR [edi],cl
  4265a7:	mov    ecx,DWORD PTR [ebp-0xc]
  4265aa:	xor    cl,0xaa
  4265ad:	sub    cl,0xf
  4265b0:	mov    BYTE PTR [edi+0x1],cl
  4265b3:	mov    ecx,DWORD PTR [ebp-0x54]
  4265b6:	xor    cl,0xaa
  4265b9:	sub    cl,0xf
  4265bc:	mov    BYTE PTR [edi+0x2],cl
  4265bf:	and    DWORD PTR [ebp-0xc8],0x0
  4265c6:	and    DWORD PTR [ebp-0xdc],0x0
  4265cd:	lea    ecx,[ebp-0xdc]
  4265d3:	push   ecx
  4265d4:	push   DWORD PTR [ebp-0x14]
  4265d7:	push   eax
  4265d8:	lea    eax,[ebp-0xc8]
  4265de:	push   eax
  4265df:	mov    eax,DWORD PTR [ebp-0x30]
  4265e2:	push   DWORD PTR [eax+0xc]
  4265e5:	mov    eax,DWORD PTR [ebp-0x24]
  4265e8:	add    eax,0x10
  4265eb:	push   eax
  4265ec:	push   edi
  4265ed:	call   0x425894
  4265f2:	mov    DWORD PTR [ebp-0x3c],eax
  4265f5:	mov    eax,DWORD PTR [ebp+0x8]
  4265f8:	mov    ecx,DWORD PTR [ebp-0x50]
  4265fb:	mov    eax,DWORD PTR [eax+0x1e0]
  426601:	xor    ecx,ebx
  426603:	add    ecx,esi
  426605:	push   ecx
  426606:	mov    ecx,DWORD PTR [ebp-0xc]
  426609:	xor    ecx,ebx
  42660b:	add    ecx,esi
  42660d:	push   ecx
  42660e:	push   edi
  42660f:	call   DWORD PTR [eax+0x18]
  426612:	mov    eax,DWORD PTR [ebp-0x3c]
  426615:	add    eax,0xffcd8d0f
  42661a:	xor    eax,ebx
  42661c:	cmp    eax,0xf89c85a5
  426621:	mov    eax,DWORD PTR [ebp+0x8]
  426624:	mov    eax,DWORD PTR [eax+0x1e0]
  42662a:	mov    ecx,DWORD PTR [ebp-0x50]
  42662d:	jne    0x426650
  42662f:	xor    ecx,ebx
  426631:	add    ecx,esi
  426633:	push   ecx
  426634:	mov    ecx,DWORD PTR [ebp-0xc]
  426637:	xor    ecx,ebx
  426639:	add    ecx,esi
  42663b:	push   ecx
  42663c:	push   DWORD PTR [ebp-0x24]
  42663f:	call   DWORD PTR [eax+0x18]
  426642:	mov    eax,DWORD PTR [ebp-0x20]
  426645:	mov    DWORD PTR [ebp-0x24],eax
  426648:	mov    eax,DWORD PTR [ebp-0x14]
  42664b:	mov    DWORD PTR [ebp-0x40],eax
  42664e:	jmp    0x426663
  426650:	xor    ecx,ebx
  426652:	add    ecx,esi
  426654:	push   ecx
  426655:	mov    ecx,DWORD PTR [ebp-0xc]
  426658:	xor    ecx,ebx
  42665a:	add    ecx,esi
  42665c:	push   ecx
  42665d:	push   DWORD PTR [ebp-0x20]
  426660:	call   DWORD PTR [eax+0x18]
  426663:	mov    eax,DWORD PTR [ebp-0x40]
  426666:	mov    DWORD PTR [ebp-0x38],eax
  426669:	mov    eax,DWORD PTR [ebp-0x24]
  42666c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426673:	mov    DWORD PTR [ebp-0x3c],eax
  426676:	mov    edi,0xf89c85ba
  42667b:	mov    DWORD PTR [ebp-0x2c],edi
  42667e:	mov    eax,DWORD PTR [ebp-0x28]
  426681:	xor    eax,ebx
  426683:	add    eax,esi
  426685:	mov    DWORD PTR [ebp-0xc],eax
  426688:	mov    eax,DWORD PTR [ebp-0x28]
  42668b:	xor    eax,ebx
  42668d:	add    eax,esi
  42668f:	mov    DWORD PTR [ebp-0x14],eax
  426692:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426699:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4266a0:	mov    eax,DWORD PTR [ebp-0x28]
  4266a3:	mov    ecx,DWORD PTR [ebp-0x38]
  4266a6:	xor    eax,ebx
  4266a8:	add    eax,esi
  4266aa:	cmp    ecx,eax
  4266ac:	je     0x4268a2
  4266b2:	jmp    0x42687e
  4266b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4266ba:	mov    eax,DWORD PTR [ebp-0x38]
  4266bd:	sub    eax,ecx
  4266bf:	mov    ecx,DWORD PTR [ebp-0x48]
  4266c2:	xor    ecx,ebx
  4266c4:	add    ecx,esi
  4266c6:	xor    edx,edx
  4266c8:	div    ecx
  4266ca:	mov    DWORD PTR [ebp-0x14],eax
  4266cd:	mov    eax,DWORD PTR [ebp-0x20]
  4266d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4266d3:	xor    eax,ebx
  4266d5:	add    eax,esi
  4266d7:	cmp    ecx,eax
  4266d9:	jbe    0x4266e5
  4266db:	mov    eax,DWORD PTR [ebp-0x20]
  4266de:	xor    eax,ebx
  4266e0:	add    eax,esi
  4266e2:	mov    DWORD PTR [ebp-0x14],eax
  4266e5:	mov    eax,DWORD PTR [ebp-0x48]
  4266e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4266eb:	xor    eax,ebx
  4266ed:	add    eax,esi
  4266ef:	imul   eax,ecx
  4266f2:	mov    DWORD PTR [ebp-0x14],eax
  4266f5:	mov    eax,DWORD PTR [ebp-0x28]
  4266f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4266fb:	xor    eax,ebx
  4266fd:	add    eax,esi
  4266ff:	cmp    ecx,eax
  426701:	je     0x42686c
  426707:	mov    eax,DWORD PTR [ebp-0x14]
  42670a:	mov    DWORD PTR [ebp-0x34],eax
  42670d:	mov    eax,DWORD PTR [ebp-0xc]
  426710:	add    eax,DWORD PTR [ebp-0x3c]
  426713:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42671a:	mov    DWORD PTR [ebp-0x14],edi
  42671d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426724:	mov    DWORD PTR [ebp-0x1c],eax
  426727:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42672e:	mov    DWORD PTR [ebp-0x8],edi
  426731:	mov    eax,DWORD PTR [ebp-0x4c]
  426734:	xor    eax,ebx
  426736:	add    eax,esi
  426738:	jmp    0x42682b
  42673d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426747:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426751:	mov    eax,DWORD PTR [ebp-0x8]
  426754:	mov    ecx,DWORD PTR [ebp-0x18]
  426757:	xor    eax,ebx
  426759:	add    eax,esi
  42675b:	imul   eax,ecx
  42675e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426761:	mov    al,BYTE PTR [eax+ecx*1]
  426764:	mov    BYTE PTR [ebp-0x1],al
  426767:	mov    eax,DWORD PTR [ebp-0x8]
  42676a:	mov    ecx,DWORD PTR [ebp-0x18]
  42676d:	xor    eax,ebx
  42676f:	add    eax,esi
  426771:	imul   eax,ecx
  426774:	mov    ecx,DWORD PTR [ebp-0x54]
  426777:	xor    ecx,ebx
  426779:	add    eax,ecx
  42677b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42677e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426786:	mov    ecx,DWORD PTR [ebp-0xe4]
  42678c:	xor    ecx,ebx
  42678e:	lea    eax,[ecx+eax*1+0x3272f1]
  426795:	movzx  ecx,BYTE PTR [ebp-0x1]
  426799:	xor    ecx,eax
  42679b:	mov    BYTE PTR [ebp-0x1],cl
  42679e:	mov    al,BYTE PTR [ebp-0x1]
  4267a1:	mov    ecx,DWORD PTR [ebp-0x8]
  4267a4:	mov    edx,DWORD PTR [ebp-0x18]
  4267a7:	xor    ecx,ebx
  4267a9:	add    ecx,esi
  4267ab:	imul   ecx,edx
  4267ae:	mov    edx,DWORD PTR [ebp-0x1c]
  4267b1:	mov    BYTE PTR [ecx+edx*1],al
  4267b4:	mov    eax,DWORD PTR [ebp-0x8]
  4267b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4267ba:	xor    eax,ebx
  4267bc:	add    eax,esi
  4267be:	imul   eax,ecx
  4267c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4267c4:	mov    al,BYTE PTR [eax+ecx*1]
  4267c7:	mov    BYTE PTR [ebp-0x1],al
  4267ca:	mov    eax,DWORD PTR [ebp-0x8]
  4267cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4267d0:	xor    eax,ebx
  4267d2:	add    eax,esi
  4267d4:	imul   eax,ecx
  4267d7:	mov    ecx,DWORD PTR [ebp-0x14]
  4267da:	xor    ecx,ebx
  4267dc:	add    eax,ecx
  4267de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4267e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4267e9:	mov    ecx,DWORD PTR [ebp-0xd0]
  4267ef:	xor    ecx,ebx
  4267f1:	lea    eax,[ecx+eax*1+0x3272f1]
  4267f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4267fc:	xor    ecx,eax
  4267fe:	mov    BYTE PTR [ebp-0x1],cl
  426801:	mov    al,BYTE PTR [ebp-0x1]
  426804:	mov    ecx,DWORD PTR [ebp-0x8]
  426807:	mov    edx,DWORD PTR [ebp-0x18]
  42680a:	xor    ecx,ebx
  42680c:	add    ecx,esi
  42680e:	imul   ecx,edx
  426811:	mov    edx,DWORD PTR [ebp-0x1c]
  426814:	mov    BYTE PTR [ecx+edx*1],al
  426817:	mov    eax,DWORD PTR [ebp-0x30]
  42681a:	mov    ecx,DWORD PTR [ebp-0x14]
  42681d:	xor    eax,ebx
  42681f:	xor    ecx,ebx
  426821:	add    eax,esi
  426823:	add    ecx,esi
  426825:	imul   eax,ecx
  426828:	add    eax,DWORD PTR [ebp-0x18]
  42682b:	mov    DWORD PTR [ebp-0x18],eax
  42682e:	mov    eax,DWORD PTR [ebp-0x18]
  426831:	mov    ecx,DWORD PTR [ebp-0x34]
  426834:	cmp    ecx,eax
  426836:	jb     0x42673d
  42683c:	mov    eax,DWORD PTR [ebp-0x14]
  42683f:	mov    ecx,DWORD PTR [ebp-0x34]
  426842:	xor    eax,ebx
  426844:	add    eax,esi
  426846:	imul   eax,ecx
  426849:	mov    ecx,DWORD PTR [ebp-0x4c]
  42684c:	xor    ecx,ebx
  42684e:	add    ecx,esi
  426850:	or     eax,ecx
  426852:	mov    ecx,DWORD PTR [ebp-0x2c]
  426855:	xor    ecx,ebx
  426857:	add    eax,ecx
  426859:	mov    ecx,DWORD PTR [ebp-0x2c]
  42685c:	xor    ecx,ebx
  42685e:	add    eax,ecx
  426860:	mov    ecx,DWORD PTR [ebp-0xc]
  426863:	lea    eax,[eax+ecx*1+0x64e5e2]
  42686a:	jmp    0x42687b
  42686c:	mov    eax,DWORD PTR [ebp-0x2c]
  42686f:	mov    ecx,DWORD PTR [ebp-0xc]
  426872:	xor    eax,ebx
  426874:	lea    eax,[eax+ecx*1+0x3272f1]
  42687b:	mov    DWORD PTR [ebp-0xc],eax
  42687e:	mov    eax,DWORD PTR [ebp-0x2c]
  426881:	xor    eax,ebx
  426883:	mov    ecx,0xffcd8d0f
  426888:	sub    ecx,eax
  42688a:	add    ecx,DWORD PTR [ebp-0x38]
  42688d:	mov    eax,DWORD PTR [ebp-0x2c]
  426890:	mov    edx,DWORD PTR [ebp-0xc]
  426893:	xor    eax,ebx
  426895:	add    eax,esi
  426897:	imul   eax,edx
  42689a:	cmp    eax,ecx
  42689c:	jbe    0x4266b7
  4268a2:	push   DWORD PTR [ebp+0x8]
  4268a5:	mov    eax,DWORD PTR [ebp+0x8]
  4268a8:	push   DWORD PTR [eax+0x1cc]
  4268ae:	lea    eax,[ebp-0xd8]
  4268b4:	push   eax
  4268b5:	mov    eax,DWORD PTR [ebp+0x8]
  4268b8:	mov    eax,DWORD PTR [eax+0x1c4]
  4268be:	push   DWORD PTR [eax]
  4268c0:	mov    eax,DWORD PTR [ebp+0x8]
  4268c3:	mov    eax,DWORD PTR [eax+0x1c0]
  4268c9:	push   DWORD PTR [eax]
  4268cb:	push   DWORD PTR [ebp-0x40]
  4268ce:	push   DWORD PTR [ebp-0x24]
  4268d1:	call   0x427368
  4268d6:	mov    DWORD PTR [ebp-0x3c],eax
  4268d9:	mov    eax,DWORD PTR [ebp-0x10]
  4268dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4268df:	xor    eax,ebx
  4268e1:	add    eax,esi
  4268e3:	cmp    eax,ecx
  4268e5:	je     0x426906
  4268e7:	mov    eax,DWORD PTR [ebp+0x8]
  4268ea:	mov    ecx,DWORD PTR [ebp-0x50]
  4268ed:	mov    eax,DWORD PTR [eax+0x1e0]
  4268f3:	xor    ecx,ebx
  4268f5:	add    ecx,esi
  4268f7:	push   ecx
  4268f8:	mov    ecx,DWORD PTR [ebp-0x10]
  4268fb:	xor    ecx,ebx
  4268fd:	add    ecx,esi
  4268ff:	push   ecx
  426900:	push   DWORD PTR [ebp-0x24]
  426903:	call   DWORD PTR [eax+0x18]
  426906:	pop    edi
  426907:	pop    esi
  426908:	pop    ebx
  426909:	leave  
  42690a:	ret    0x4
  42690d:	push   ebp
  42690e:	mov    ebp,esp
  426910:	push   ecx
  426911:	push   ecx
  426912:	lea    eax,[ebp-0x8]
  426915:	mov    DWORD PTR [ebp-0x4],eax
  426918:	push   esi
  426919:	mov    esi,DWORD PTR [ebp-0x4]
  42691c:	mov    eax,0xf881ba2f
  426921:	mov    DWORD PTR [esi],eax
  426923:	mov    esi,DWORD PTR [ebp-0x8]
  426926:	cmp    esi,eax
  426928:	pop    esi
  426929:	jne    0x426933
  42692b:	mov    BYTE PTR [ecx+0xa],0x83
  42692f:	mov    BYTE PTR [edx+0x8],0x2e
  426933:	mov    BYTE PTR [edx+0xa],0x83
  426937:	mov    BYTE PTR [ecx+0x2],0x11
  42693b:	leave  
  42693c:	ret    
  42693d:	push   ebp
  42693e:	mov    ebp,esp
  426940:	push   ecx
  426941:	push   ecx
  426942:	lea    eax,[ebp-0x8]
  426945:	mov    DWORD PTR [ebp-0x4],eax
  426948:	mov    edx,DWORD PTR [ebp-0x4]
  42694b:	mov    eax,0xf88b0bc3
  426950:	mov    DWORD PTR [edx],eax
  426952:	mov    edx,DWORD PTR [ebp-0x8]
  426955:	cmp    edx,eax
  426957:	jne    0x426968
  426959:	mov    eax,DWORD PTR [ebp+0x8]
  42695c:	mov    BYTE PTR [ecx+0x9],0xf
  426960:	mov    BYTE PTR [eax+0x7],0x56
  426964:	mov    BYTE PTR [ecx+0x6],0xe
  426968:	mov    BYTE PTR [ecx+0x3],0x1f
  42696c:	leave  
  42696d:	ret    0x4
  426970:	push   ebp
  426971:	mov    ebp,esp
  426973:	push   ecx
  426974:	push   ecx
  426975:	lea    eax,[ebp-0x8]
  426978:	mov    DWORD PTR [ebp-0x4],eax
  42697b:	mov    edx,DWORD PTR [ebp-0x4]
  42697e:	mov    eax,0x7e0da2f
  426983:	mov    DWORD PTR [edx],eax
  426985:	mov    edx,DWORD PTR [ebp-0x8]
  426988:	cmp    edx,eax
  42698a:	jne    0x426990
  42698c:	mov    BYTE PTR [ecx+0x7],0x56
  426990:	mov    eax,DWORD PTR [ebp+0x8]
  426993:	mov    BYTE PTR [ecx+0x1],0x14
  426997:	mov    BYTE PTR [eax+0x9],0x2f
  42699b:	leave  
  42699c:	ret    0x4
  42699f:	push   ebp
  4269a0:	mov    ebp,esp
  4269a2:	push   ecx
  4269a3:	push   ecx
  4269a4:	lea    eax,[ebp-0x8]
  4269a7:	mov    DWORD PTR [ebp-0x4],eax
  4269aa:	push   esi
  4269ab:	mov    esi,DWORD PTR [ebp-0x4]
  4269ae:	mov    eax,0x7060e3c
  4269b3:	mov    DWORD PTR [esi],eax
  4269b5:	mov    esi,DWORD PTR [ebp-0x8]
  4269b8:	cmp    esi,eax
  4269ba:	pop    esi
  4269bb:	jne    0x4269c7
  4269bd:	mov    BYTE PTR [edx+0x4],0x12
  4269c1:	mov    WORD PTR [ecx+0x3],0x121f
  4269c7:	mov    BYTE PTR [edx],0x3e
  4269ca:	leave  
  4269cb:	ret    
  4269cc:	push   ebp
  4269cd:	mov    ebp,esp
  4269cf:	push   ecx
  4269d0:	push   ecx
  4269d1:	lea    eax,[ebp-0x8]
  4269d4:	mov    DWORD PTR [ebp-0x4],eax
  4269d7:	mov    edx,DWORD PTR [ebp-0x4]
  4269da:	mov    eax,0xf8870b3f
  4269df:	mov    DWORD PTR [edx],eax
  4269e1:	mov    edx,DWORD PTR [ebp-0x8]
  4269e4:	cmp    edx,eax
  4269e6:	jne    0x4269f3
  4269e8:	mov    eax,DWORD PTR [ebp+0x8]
  4269eb:	mov    BYTE PTR [ecx+0x8],0xe
  4269ef:	mov    BYTE PTR [eax+0x1],0x14
  4269f3:	mov    BYTE PTR [ecx+0x5],0xa
  4269f7:	leave  
  4269f8:	ret    0x4
  4269fb:	push   esi
  4269fc:	mov    ecx,edi
  4269fe:	call   0x4269cc
  426a03:	mov    edx,edi
  426a05:	mov    ecx,esi
  426a07:	mov    BYTE PTR [esi],0x1e
  426a0a:	call   0x42699f
  426a0f:	push   esi
  426a10:	mov    ecx,edi
  426a12:	mov    BYTE PTR [esi+0x5],0xa
  426a16:	call   0x426970
  426a1b:	push   esi
  426a1c:	mov    BYTE PTR [esi+0x6],0xe
  426a20:	call   0x42693d
  426a25:	mov    BYTE PTR [esi+0x2],0x11
  426a29:	mov    edx,esi
  426a2b:	jmp    0x42690d
  426a30:	push   ebp
  426a31:	mov    ebp,esp
  426a33:	push   ecx
  426a34:	mov    ecx,DWORD PTR [edx+0x194]
  426a3a:	push   esi
  426a3b:	mov    esi,DWORD PTR [ebp+0x8]
  426a3e:	mov    esi,DWORD PTR [esi]
  426a40:	mov    DWORD PTR [ecx],esi
  426a42:	mov    ecx,DWORD PTR [edx+0x194]
  426a48:	mov    ecx,DWORD PTR [ecx]
  426a4a:	mov    esi,DWORD PTR [edx+0x190]
  426a50:	mov    DWORD PTR [esi],ecx
  426a52:	mov    eax,DWORD PTR [edx+0x194]
  426a58:	mov    ecx,DWORD PTR [eax]
  426a5a:	mov    ecx,DWORD PTR [ecx+0x3c]
  426a5d:	add    ecx,DWORD PTR [eax]
  426a5f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426a66:	mov    eax,DWORD PTR [ebp-0x4]
  426a69:	movzx  ecx,WORD PTR [ecx+0x16]
  426a6d:	xor    eax,0x75108aa
  426a72:	add    eax,0x3272f1
  426a77:	pop    esi
  426a78:	test   ecx,eax
  426a7a:	je     0x426a88
  426a7c:	mov    eax,DWORD PTR [edx+0x1c8]
  426a82:	mov    DWORD PTR [eax],0xf89c85ba
  426a88:	leave  
  426a89:	ret    0x4
  426a8c:	push   ebp
  426a8d:	mov    ebp,esp
  426a8f:	sub    esp,0x70
  426a92:	and    DWORD PTR [ebp-0x20],0x0
  426a96:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426a9d:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426aa4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  426aab:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426ab2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426ab9:	mov    eax,DWORD PTR [ebp+0x20]
  426abc:	mov    eax,DWORD PTR [eax+0x194]
  426ac2:	mov    DWORD PTR [ebp-0xc],eax
  426ac5:	mov    eax,DWORD PTR [ebp+0x20]
  426ac8:	push   ebx
  426ac9:	push   esi
  426aca:	mov    esi,DWORD PTR [eax+0x190]
  426ad0:	mov    eax,DWORD PTR [ebp+0x20]
  426ad3:	mov    eax,DWORD PTR [eax+0x18c]
  426ad9:	mov    DWORD PTR [ebp-0x8],eax
  426adc:	mov    eax,DWORD PTR [eax]
  426ade:	push   edi
  426adf:	mov    DWORD PTR [ebp-0x4],esi
  426ae2:	test   eax,eax
  426ae4:	jne    0x426af1
  426ae6:	push   DWORD PTR [ebp+0x1c]
  426ae9:	mov    edx,DWORD PTR [ebp+0x20]
  426aec:	call   0x426a30
  426af1:	mov    eax,DWORD PTR [esi]
  426af3:	mov    ebx,DWORD PTR [esi]
  426af5:	add    ebx,DWORD PTR [eax+0x3c]
  426af8:	mov    eax,DWORD PTR [ebp+0xc]
  426afb:	mov    ecx,DWORD PTR [ebp-0x8]
  426afe:	mov    ecx,DWORD PTR [ecx]
  426b00:	mov    esi,0x75108aa
  426b05:	xor    eax,esi
  426b07:	mov    edi,0x3272f1
  426b0c:	add    eax,edi
  426b0e:	cmp    eax,ecx
  426b10:	jne    0x426d48
  426b16:	mov    eax,DWORD PTR [ebp-0xc]
  426b19:	mov    eax,DWORD PTR [eax]
  426b1b:	mov    DWORD PTR [ebp-0x10],eax
  426b1e:	mov    eax,DWORD PTR [ebx+0x50]
  426b21:	mov    DWORD PTR [ebp-0x68],eax
  426b24:	mov    eax,DWORD PTR [ebp-0x18]
  426b27:	xor    eax,esi
  426b29:	add    eax,edi
  426b2b:	mov    DWORD PTR [ebp-0x64],eax
  426b2e:	mov    eax,DWORD PTR [ebp-0x14]
  426b31:	and    DWORD PTR [ebp-0x6c],0x0
  426b35:	xor    eax,esi
  426b37:	add    eax,edi
  426b39:	mov    DWORD PTR [ebp-0x60],eax
  426b3c:	lea    eax,[ebp-0x70]
  426b3f:	push   eax
  426b40:	mov    eax,DWORD PTR [ebp+0x8]
  426b43:	xor    eax,esi
  426b45:	add    eax,edi
  426b47:	push   eax
  426b48:	mov    eax,DWORD PTR [ebp+0x20]
  426b4b:	add    eax,0xaa
  426b50:	push   eax
  426b51:	mov    eax,DWORD PTR [ebp+0x20]
  426b54:	mov    eax,DWORD PTR [eax+0x198]
  426b5a:	mov    DWORD PTR [ebp-0x70],0x4
  426b61:	push   DWORD PTR [eax]
  426b63:	mov    eax,DWORD PTR [ebp+0x10]
  426b66:	call   eax
  426b68:	mov    ecx,DWORD PTR [ebp-0xc]
  426b6b:	mov    ecx,DWORD PTR [ecx]
  426b6d:	mov    edx,DWORD PTR [ebp-0x8]
  426b70:	mov    DWORD PTR [ebp-0x6c],eax
  426b73:	mov    DWORD PTR [ebp+0x1c],eax
  426b76:	mov    DWORD PTR [edx],ecx
  426b78:	mov    ecx,DWORD PTR [ebp-0x4]
  426b7b:	mov    DWORD PTR [ecx],eax
  426b7d:	mov    eax,DWORD PTR [ebx+0x50]
  426b80:	mov    DWORD PTR [ebp-0x68],eax
  426b83:	mov    eax,DWORD PTR [ebp-0x1c]
  426b86:	xor    eax,esi
  426b88:	add    eax,edi
  426b8a:	mov    DWORD PTR [ebp-0x64],eax
  426b8d:	lea    eax,[ebp-0x20]
  426b90:	mov    DWORD PTR [ebp-0x60],eax
  426b93:	lea    eax,[ebp-0x70]
  426b96:	push   eax
  426b97:	mov    eax,DWORD PTR [ebp+0x8]
  426b9a:	xor    eax,esi
  426b9c:	add    eax,edi
  426b9e:	push   eax
  426b9f:	mov    eax,DWORD PTR [ebp+0x20]
  426ba2:	add    eax,0xee
  426ba7:	push   eax
  426ba8:	mov    eax,DWORD PTR [ebp+0x20]
  426bab:	mov    eax,DWORD PTR [eax+0x198]
  426bb1:	mov    DWORD PTR [ebp-0x70],0x4
  426bb8:	push   DWORD PTR [eax]
  426bba:	mov    eax,DWORD PTR [ebp+0x10]
  426bbd:	call   eax
  426bbf:	test   eax,eax
  426bc1:	je     0x426be6
  426bc3:	and    DWORD PTR [ebp+0xc],0x0
  426bc7:	cmp    DWORD PTR [ebx+0x50],0x0
  426bcb:	jbe    0x426be6
  426bcd:	mov    eax,DWORD PTR [ebp+0x1c]
  426bd0:	mov    ecx,DWORD PTR [ebp-0x10]
  426bd3:	sub    ecx,eax
  426bd5:	mov    dl,BYTE PTR [ecx+eax*1]
  426bd8:	inc    DWORD PTR [ebp+0xc]
  426bdb:	mov    BYTE PTR [eax],dl
  426bdd:	mov    edx,DWORD PTR [ebp+0xc]
  426be0:	inc    eax
  426be1:	cmp    edx,DWORD PTR [ebx+0x50]
  426be4:	jb     0x426bd5
  426be6:	mov    edx,DWORD PTR [ebp+0x1c]
  426be9:	mov    ecx,DWORD PTR [edx+0x3c]
  426bec:	add    ecx,edx
  426bee:	mov    eax,DWORD PTR [ecx+0xa0]
  426bf4:	mov    ebx,DWORD PTR [ecx+0x28]
  426bf7:	add    eax,edx
  426bf9:	sub    edx,DWORD PTR [ebp-0x10]
  426bfc:	add    ebx,DWORD PTR [ebp+0x1c]
  426bff:	mov    DWORD PTR [ebp+0xc],edx
  426c02:	mov    DWORD PTR [ebp-0x2c],ecx
  426c05:	mov    DWORD PTR [ebp-0x14],ebx
  426c08:	mov    DWORD PTR [ebp-0x8],0x0
  426c0f:	jmp    0x426c8b
  426c11:	add    edx,0xfffffff8
  426c14:	shr    edx,1
  426c16:	mov    DWORD PTR [ebp-0x18],edx
  426c19:	je     0x426c77
  426c1b:	lea    edx,[eax+0x8]
  426c1e:	mov    DWORD PTR [ebp-0x4],edx
  426c21:	mov    edx,DWORD PTR [ebp-0x18]
  426c24:	mov    DWORD PTR [ebp-0x18],edx
  426c27:	mov    edx,DWORD PTR [ebp-0x4]
  426c2a:	movzx  edx,WORD PTR [edx]
  426c2d:	mov    DWORD PTR [ebp-0x24],edx
  426c30:	and    edx,0xfff
  426c36:	mov    DWORD PTR [ebp-0x28],edx
  426c39:	mov    edx,DWORD PTR [ebp-0x24]
  426c3c:	shr    edx,0xc
  426c3f:	add    edx,0xffcd8d0f
  426c45:	xor    edx,esi
  426c47:	cmp    edx,0xf89c85b8
  426c4d:	jne    0x426c6e
  426c4f:	mov    edx,DWORD PTR [ebp-0x28]
  426c52:	add    edx,DWORD PTR [ebp+0x1c]
  426c55:	mov    ebx,DWORD PTR [eax]
  426c57:	cmp    DWORD PTR [ebx+edx*1],0x0
  426c5b:	je     0x426c6b
  426c5d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c60:	add    ecx,DWORD PTR [ebx+edx*1]
  426c63:	mov    ebx,DWORD PTR [eax]
  426c65:	mov    DWORD PTR [edx+ebx*1],ecx
  426c68:	mov    ecx,DWORD PTR [ebp-0x2c]
  426c6b:	mov    ebx,DWORD PTR [ebp-0x14]
  426c6e:	add    DWORD PTR [ebp-0x4],0x2
  426c72:	dec    DWORD PTR [ebp-0x18]
  426c75:	jne    0x426c27
  426c77:	mov    edx,DWORD PTR [ebp-0xc]
  426c7a:	add    DWORD PTR [ebp-0x8],edx
  426c7d:	mov    edx,DWORD PTR [ebp-0x8]
  426c80:	cmp    edx,DWORD PTR [ecx+0xa4]
  426c86:	jae    0x426c99
  426c88:	add    eax,DWORD PTR [ebp-0xc]
  426c8b:	mov    edx,DWORD PTR [eax+0x4]
  426c8e:	mov    DWORD PTR [ebp-0xc],edx
  426c91:	test   edx,edx
  426c93:	jne    0x426c11
  426c99:	mov    eax,DWORD PTR [ebp-0x10]
  426c9c:	mov    DWORD PTR [ebp-0x6c],eax
  426c9f:	mov    DWORD PTR [ebp-0x70],0x4
  426ca6:	mov    eax,DWORD PTR [ecx+0x50]
  426ca9:	mov    DWORD PTR [ebp-0x68],eax
  426cac:	mov    eax,DWORD PTR [ebp-0x1c]
  426caf:	xor    eax,esi
  426cb1:	add    eax,edi
  426cb3:	mov    DWORD PTR [ebp-0x64],eax
  426cb6:	lea    eax,[ebp-0x20]
  426cb9:	mov    DWORD PTR [ebp-0x60],eax
  426cbc:	lea    eax,[ebp-0x70]
  426cbf:	push   eax
  426cc0:	mov    eax,DWORD PTR [ebp+0x8]
  426cc3:	xor    eax,esi
  426cc5:	add    eax,edi
  426cc7:	push   eax
  426cc8:	mov    eax,DWORD PTR [ebp+0x20]
  426ccb:	add    eax,0xee
  426cd0:	push   eax
  426cd1:	mov    eax,DWORD PTR [ebp+0x20]
  426cd4:	mov    eax,DWORD PTR [eax+0x198]
  426cda:	push   DWORD PTR [eax]
  426cdc:	mov    eax,DWORD PTR [ebp+0x10]
  426cdf:	call   eax
  426ce1:	mov    eax,DWORD PTR [ebp+0x20]
  426ce4:	mov    eax,DWORD PTR [eax+0x180]
  426cea:	add    eax,DWORD PTR [ebp+0xc]
  426ced:	mov    ecx,DWORD PTR [ebp+0xc]
  426cf0:	push   DWORD PTR [ebp+0x18]
  426cf3:	mov    DWORD PTR [eax],ecx
  426cf5:	push   DWORD PTR [ebp+0x14]
  426cf8:	push   DWORD PTR [ebp+0x1c]
  426cfb:	call   ebx
  426cfd:	mov    ecx,DWORD PTR [ebp+0xc]
  426d00:	add    ecx,DWORD PTR [ebp+0x20]
  426d03:	lea    eax,[ebp+0x4]
  426d06:	mov    DWORD PTR [ebp+0x20],ecx
  426d09:	mov    ecx,DWORD PTR [ebp+0x20]
  426d0c:	mov    ecx,DWORD PTR [ebp+0x20]
  426d0f:	mov    edx,DWORD PTR [ecx+0x190]
  426d15:	mov    ecx,DWORD PTR [ebp+0x20]
  426d18:	mov    ecx,DWORD PTR [ecx+0x18c]
  426d1e:	mov    esi,DWORD PTR [ecx]
  426d20:	cmp    DWORD PTR [eax],esi
  426d22:	jb     0x426d43
  426d24:	mov    esi,DWORD PTR [edx]
  426d26:	mov    edi,DWORD PTR [edx]
  426d28:	mov    esi,DWORD PTR [esi+0x3c]
  426d2b:	lea    esi,[edi+esi*1+0x50]
  426d2f:	mov    edi,DWORD PTR [ecx]
  426d31:	add    edi,DWORD PTR [esi]
  426d33:	cmp    DWORD PTR [eax],edi
  426d35:	jae    0x426d43
  426d37:	mov    esi,DWORD PTR [ecx]
  426d39:	mov    ecx,DWORD PTR [eax]
  426d3b:	mov    edx,DWORD PTR [edx]
  426d3d:	sub    ecx,esi
  426d3f:	add    edx,ecx
  426d41:	mov    DWORD PTR [eax],edx
  426d43:	mov    eax,DWORD PTR [ebp+0xc]
  426d46:	jmp    0x426d4a
  426d48:	xor    eax,eax
  426d4a:	pop    edi
  426d4b:	pop    esi
  426d4c:	pop    ebx
  426d4d:	leave  
  426d4e:	ret    0x1c
  426d51:	push   ebp
  426d52:	mov    ebp,esp
  426d54:	sub    esp,0x1c
  426d57:	push   esi
  426d58:	mov    esi,eax
  426d5a:	mov    eax,DWORD PTR [ecx+0x190]
  426d60:	cmp    DWORD PTR [eax],0x0
  426d63:	je     0x426e73
  426d69:	test   edx,edx
  426d6b:	je     0x426e73
  426d71:	test   esi,esi
  426d73:	je     0x426e73
  426d79:	mov    eax,DWORD PTR [esi+0x88]
  426d7f:	test   eax,eax
  426d81:	je     0x426e6e
  426d87:	cmp    DWORD PTR [esi+0x8c],0x10
  426d8e:	je     0x426e6e
  426d94:	cmp    DWORD PTR [esi+0x34],edx
  426d97:	je     0x426e6e
  426d9d:	mov    esi,DWORD PTR [ecx+0x18c]
  426da3:	and    DWORD PTR [ebp-0x10],0x0
  426da7:	mov    ecx,edx
  426da9:	sub    ecx,DWORD PTR [esi]
  426dab:	add    eax,edx
  426dad:	movzx  edx,WORD PTR [eax+0xc]
  426db1:	mov    DWORD PTR [ebp-0x1c],ecx
  426db4:	movzx  ecx,WORD PTR [eax+0xe]
  426db8:	add    ecx,edx
  426dba:	je     0x426e6e
  426dc0:	lea    ecx,[eax+0x14]
  426dc3:	push   ebx
  426dc4:	mov    DWORD PTR [ebp-0x18],ecx
  426dc7:	mov    esi,0x7fffffff
  426dcc:	push   edi
  426dcd:	test   DWORD PTR [ecx],esi
  426dcf:	je     0x426e50
  426dd1:	mov    edx,DWORD PTR [ecx]
  426dd3:	and    DWORD PTR [ebp-0xc],0x0
  426dd7:	and    edx,esi
  426dd9:	add    edx,eax
  426ddb:	movzx  edi,WORD PTR [edx+0xe]
  426ddf:	movzx  ebx,WORD PTR [edx+0xc]
  426de3:	add    edi,ebx
  426de5:	je     0x426e50
  426de7:	lea    ecx,[edx+0x14]
  426dea:	mov    DWORD PTR [ebp-0x14],ecx
  426ded:	test   DWORD PTR [ecx],esi
  426def:	je     0x426e32
  426df1:	mov    ecx,DWORD PTR [ecx]
  426df3:	and    DWORD PTR [ebp-0x8],0x0
  426df7:	and    ecx,esi
  426df9:	add    ecx,eax
  426dfb:	movzx  edi,WORD PTR [ecx+0xe]
  426dff:	movzx  ebx,WORD PTR [ecx+0xc]
  426e03:	add    edi,ebx
  426e05:	je     0x426e32
  426e07:	lea    edi,[ecx+0x14]
  426e0a:	mov    DWORD PTR [ebp-0x4],edi
  426e0d:	mov    edi,DWORD PTR [ebp-0x4]
  426e10:	mov    edi,DWORD PTR [edi]
  426e12:	test   edi,edi
  426e14:	je     0x426e1c
  426e16:	mov    ebx,DWORD PTR [ebp-0x1c]
  426e19:	add    DWORD PTR [edi+eax*1],ebx
  426e1c:	movzx  edi,WORD PTR [ecx+0xe]
  426e20:	movzx  ebx,WORD PTR [ecx+0xc]
  426e24:	inc    DWORD PTR [ebp-0x8]
  426e27:	add    DWORD PTR [ebp-0x4],0x8
  426e2b:	add    edi,ebx
  426e2d:	cmp    DWORD PTR [ebp-0x8],edi
  426e30:	jb     0x426e0d
  426e32:	movzx  edi,WORD PTR [edx+0xe]
  426e36:	movzx  ebx,WORD PTR [edx+0xc]
  426e3a:	mov    ecx,DWORD PTR [ebp-0x14]
  426e3d:	inc    DWORD PTR [ebp-0xc]
  426e40:	add    ecx,0x8
  426e43:	add    edi,ebx
  426e45:	mov    DWORD PTR [ebp-0x14],ecx
  426e48:	cmp    DWORD PTR [ebp-0xc],edi
  426e4b:	jb     0x426ded
  426e4d:	mov    ecx,DWORD PTR [ebp-0x18]
  426e50:	movzx  edx,WORD PTR [eax+0xe]
  426e54:	movzx  edi,WORD PTR [eax+0xc]
  426e58:	inc    DWORD PTR [ebp-0x10]
  426e5b:	add    ecx,0x8
  426e5e:	add    edx,edi
  426e60:	mov    DWORD PTR [ebp-0x18],ecx
  426e63:	cmp    DWORD PTR [ebp-0x10],edx
  426e66:	jb     0x426dcd
  426e6c:	pop    edi
  426e6d:	pop    ebx
  426e6e:	xor    eax,eax
  426e70:	inc    eax
  426e71:	jmp    0x426e75
  426e73:	xor    eax,eax
  426e75:	pop    esi
  426e76:	leave  
  426e77:	ret    
  426e78:	push   ebp
  426e79:	mov    ebp,esp
  426e7b:	mov    ecx,DWORD PTR [ecx+0x190]
  426e81:	mov    eax,DWORD PTR [ebp+0xc]
  426e84:	sub    esp,0x10
  426e87:	push   ebx
  426e88:	xor    ebx,ebx
  426e8a:	push   esi
  426e8b:	push   edi
  426e8c:	cmp    DWORD PTR [ecx],ebx
  426e8e:	je     0x426f16
  426e94:	cmp    eax,ebx
  426e96:	je     0x426f16
  426e98:	cmp    DWORD PTR [eax+0x78],ebx
  426e9b:	jne    0x426ea2
  426e9d:	xor    eax,eax
  426e9f:	inc    eax
  426ea0:	jmp    0x426f18
  426ea2:	mov    eax,DWORD PTR [eax+0x78]
  426ea5:	add    eax,DWORD PTR [ebp+0x8]
  426ea8:	mov    ecx,DWORD PTR [eax+0x1c]
  426eab:	mov    edx,DWORD PTR [eax+0x24]
  426eae:	mov    esi,DWORD PTR [eax+0x14]
  426eb1:	mov    edi,DWORD PTR [eax+0x18]
  426eb4:	add    ecx,DWORD PTR [ebp+0x8]
  426eb7:	add    edx,DWORD PTR [ebp+0x8]
  426eba:	mov    DWORD PTR [ebp-0x4],esi
  426ebd:	cmp    esi,edi
  426ebf:	ja     0x426ec4
  426ec1:	mov    DWORD PTR [ebp-0x4],edi
  426ec4:	mov    DWORD PTR [ebp-0x8],ebx
  426ec7:	cmp    DWORD PTR [ebp-0x4],ebx
  426eca:	jbe    0x426e9d
  426ecc:	cmp    ebx,DWORD PTR [eax+0x14]
  426ecf:	jae    0x426ed7
  426ed1:	movzx  esi,WORD PTR [edx+ebx*2]
  426ed5:	jmp    0x426ed9
  426ed7:	mov    esi,ebx
  426ed9:	lea    esi,[ecx+esi*4]
  426edc:	mov    edi,DWORD PTR [esi]
  426ede:	test   edi,edi
  426ee0:	je     0x426f0b
  426ee2:	add    edi,DWORD PTR [ebp+0x8]
  426ee5:	mov    DWORD PTR [ebp-0x10],edi
  426ee8:	cmp    edi,eax
  426eea:	jbe    0x426efc
  426eec:	mov    ebx,DWORD PTR [ebp+0xc]
  426eef:	mov    ebx,DWORD PTR [ebx+0x7c]
  426ef2:	add    ebx,eax
  426ef4:	cmp    edi,ebx
  426ef6:	jae    0x426efc
  426ef8:	mov    esi,DWORD PTR [esi]
  426efa:	jmp    0x426f04
  426efc:	sub    edi,DWORD PTR [ebp+0x8]
  426eff:	mov    DWORD PTR [esi],edi
  426f01:	mov    esi,DWORD PTR [ebp-0x10]
  426f04:	test   esi,esi
  426f06:	je     0x426f16
  426f08:	mov    ebx,DWORD PTR [ebp-0x8]
  426f0b:	inc    ebx
  426f0c:	mov    DWORD PTR [ebp-0x8],ebx
  426f0f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f12:	jb     0x426ecc
  426f14:	jmp    0x426e9d
  426f16:	xor    eax,eax
  426f18:	pop    edi
  426f19:	pop    esi
  426f1a:	pop    ebx
  426f1b:	leave  
  426f1c:	ret    0x8
  426f1f:	push   ebp
  426f20:	mov    ebp,esp
  426f22:	sub    esp,0x2c
  426f25:	mov    edx,0xf89c85a5
  426f2a:	mov    DWORD PTR [ebp-0x4],edx
  426f2d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426f34:	mov    eax,DWORD PTR [ebp-0x4]
  426f37:	mov    ecx,DWORD PTR [ebp-0x4]
  426f3a:	mov    ecx,DWORD PTR [ebp-0x4]
  426f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  426f40:	mov    ecx,DWORD PTR [ebp-0x4]
  426f43:	mov    ecx,DWORD PTR [ebp-0x4]
  426f46:	push   ebx
  426f47:	mov    ebx,DWORD PTR [ebp+0x10]
  426f4a:	push   esi
  426f4b:	mov    esi,0x75108aa
  426f50:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426f57:	mov    ecx,DWORD PTR [ebp-0x4]
  426f5a:	mov    ebx,DWORD PTR [ebx+0x190]
  426f60:	push   edi
  426f61:	mov    edi,0x3272f1
  426f66:	xor    ecx,esi
  426f68:	xor    eax,esi
  426f6a:	add    eax,edi
  426f6c:	add    ecx,edi
  426f6e:	mov    DWORD PTR [ebp-0x18],eax
  426f71:	cmp    ecx,DWORD PTR [ebx]
  426f73:	je     0x4271f4
  426f79:	mov    ebx,DWORD PTR [ebp-0x4]
  426f7c:	mov    ecx,DWORD PTR [ebp+0xc]
  426f7f:	xor    ebx,esi
  426f81:	add    ebx,edi
  426f83:	cmp    ebx,ecx
  426f85:	je     0x4271f4
  426f8b:	mov    ebx,DWORD PTR [ebp-0x4]
  426f8e:	mov    ecx,DWORD PTR [ecx+0x80]
  426f94:	xor    ebx,esi
  426f96:	add    ebx,edi
  426f98:	cmp    ecx,ebx
  426f9a:	je     0x4271ef
  426fa0:	add    ecx,DWORD PTR [ebp+0x8]
  426fa3:	mov    DWORD PTR [ebp-0x2c],ecx
  426fa6:	mov    ebx,edx
  426fa8:	xor    ebx,esi
  426faa:	add    ebx,edi
  426fac:	mov    DWORD PTR [ebp-0x10],ebx
  426faf:	mov    ebx,DWORD PTR [ebp-0x10]
  426fb2:	cmp    ebx,edx
  426fb4:	je     0x426fc8
  426fb6:	mov    edx,DWORD PTR [ebp-0x10]
  426fb9:	mov    ebx,DWORD PTR [ebp-0x4]
  426fbc:	imul   edx,edx,0x14
  426fbf:	xor    ebx,esi
  426fc1:	add    ebx,edi
  426fc3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426fc6:	jne    0x426fdf
  426fc8:	mov    edx,DWORD PTR [ebp-0x10]
  426fcb:	mov    ebx,DWORD PTR [ebp-0x4]
  426fce:	imul   edx,edx,0x14
  426fd1:	xor    ebx,esi
  426fd3:	add    ebx,edi
  426fd5:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426fd9:	je     0x4271e1
  426fdf:	mov    eax,DWORD PTR [ebp-0x4]
  426fe2:	mov    ebx,DWORD PTR [ebp-0x4]
  426fe5:	mov    eax,DWORD PTR [ebp-0x10]
  426fe8:	imul   eax,eax,0x14
  426feb:	add    eax,ecx
  426fed:	mov    ecx,DWORD PTR [eax+0x10]
  426ff0:	add    ecx,DWORD PTR [ebp+0x8]
  426ff3:	xor    ebx,esi
  426ff5:	mov    DWORD PTR [ebp-0x1c],ecx
  426ff8:	mov    ecx,DWORD PTR [ebp-0x4]
  426ffb:	mov    edx,DWORD PTR [ebp-0x4]
  426ffe:	xor    ecx,esi
  427000:	add    ecx,edi
  427002:	xor    edx,esi
  427004:	mov    DWORD PTR [ebp-0x24],ecx
  427007:	mov    ecx,DWORD PTR [eax]
  427009:	add    edx,edi
  42700b:	add    ebx,edi
  42700d:	cmp    ecx,edx
  42700f:	je     0x427017
  427011:	add    ecx,DWORD PTR [ebp+0x8]
  427014:	mov    DWORD PTR [ebp-0x24],ecx
  427017:	mov    ecx,DWORD PTR [ebp-0x4]
  42701a:	xor    ecx,esi
  42701c:	add    ecx,DWORD PTR [eax+0xc]
  42701f:	mov    eax,DWORD PTR [ebp+0x8]
  427022:	lea    eax,[ecx+eax*1+0x3272f1]
  427029:	mov    DWORD PTR [ebp+0xc],eax
  42702c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427033:	mov    eax,DWORD PTR [ebp+0x10]
  427036:	push   DWORD PTR [ebp+0xc]
  427039:	mov    eax,DWORD PTR [eax+0x1e0]
  42703f:	call   DWORD PTR [eax]
  427041:	mov    ecx,DWORD PTR [ebp-0x4]
  427044:	xor    ecx,esi
  427046:	add    ecx,edi
  427048:	mov    DWORD PTR [ebp-0xc],eax
  42704b:	cmp    ecx,eax
  42704d:	jne    0x427061
  42704f:	mov    eax,DWORD PTR [ebp+0x10]
  427052:	push   DWORD PTR [ebp+0xc]
  427055:	mov    eax,DWORD PTR [eax+0x1e0]
  42705b:	call   DWORD PTR [eax+0xc]
  42705e:	mov    DWORD PTR [ebp-0xc],eax
  427061:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  427068:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  42706f:	mov    eax,DWORD PTR [ebp-0x4]
  427072:	xor    eax,esi
  427074:	add    eax,edi
  427076:	cmp    eax,DWORD PTR [ebp-0xc]
  427079:	jne    0x42709e
  42707b:	mov    eax,DWORD PTR [ebp-0x8]
  42707e:	mov    ecx,DWORD PTR [ebp-0x20]
  427081:	xor    eax,esi
  427083:	xor    ecx,esi
  427085:	lea    ebx,[ebx+eax*1+0x3272f1]
  42708c:	mov    eax,DWORD PTR [ebp+0x10]
  42708f:	mov    eax,DWORD PTR [eax+0x1e0]
  427095:	add    ecx,edi
  427097:	imul   ecx,ebx
  42709a:	push   ecx
  42709b:	call   DWORD PTR [eax+0x24]
  42709e:	mov    eax,DWORD PTR [ebp-0x4]
  4270a1:	xor    eax,esi
  4270a3:	add    eax,edi
  4270a5:	cmp    eax,DWORD PTR [ebp-0xc]
  4270a8:	jne    0x4270b9
  4270aa:	mov    eax,DWORD PTR [ebp-0x28]
  4270ad:	xor    eax,esi
  4270af:	add    eax,edi
  4270b1:	cmp    ebx,eax
  4270b3:	jbe    0x427033
  4270b9:	mov    eax,DWORD PTR [ebp-0x4]
  4270bc:	xor    eax,esi
  4270be:	add    eax,edi
  4270c0:	cmp    eax,DWORD PTR [ebp-0xc]
  4270c3:	jne    0x4270dc
  4270c5:	mov    eax,DWORD PTR [ebp-0x8]
  4270c8:	mov    ecx,DWORD PTR [ebp-0x18]
  4270cb:	xor    eax,esi
  4270cd:	lea    eax,[ecx+eax*1+0x3272f1]
  4270d4:	mov    DWORD PTR [ebp-0x18],eax
  4270d7:	jmp    0x4271cb
  4270dc:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4270e3:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4270ea:	mov    ebx,DWORD PTR [ebp-0x4]
  4270ed:	xor    ebx,esi
  4270ef:	add    ebx,edi
  4270f1:	jmp    0x4271b8
  4270f6:	mov    eax,DWORD PTR [ebp-0x4]
  4270f9:	xor    eax,esi
  4270fb:	add    eax,edi
  4270fd:	mov    DWORD PTR [ebp-0x14],eax
  427100:	mov    eax,DWORD PTR [ebp-0x4]
  427103:	xor    eax,esi
  427105:	add    eax,edi
  427107:	mov    DWORD PTR [ebp+0xc],eax
  42710a:	mov    ecx,DWORD PTR [ebp-0x4]
  42710d:	mov    eax,DWORD PTR [ebp-0x24]
  427110:	xor    ecx,esi
  427112:	add    ecx,edi
  427114:	cmp    ecx,eax
  427116:	je     0x42711e
  427118:	mov    eax,DWORD PTR [eax+ebx*4]
  42711b:	mov    DWORD PTR [ebp-0x14],eax
  42711e:	mov    eax,DWORD PTR [ebp-0x1c]
  427121:	mov    eax,DWORD PTR [eax+ebx*4]
  427124:	mov    DWORD PTR [ebp+0xc],eax
  427127:	mov    eax,DWORD PTR [ebp-0x4]
  42712a:	mov    ecx,DWORD PTR [ebp-0x14]
  42712d:	xor    eax,esi
  42712f:	add    eax,edi
  427131:	cmp    eax,ecx
  427133:	je     0x42715e
  427135:	mov    eax,DWORD PTR [ebp-0x4]
  427138:	mov    ecx,DWORD PTR [ebp-0x14]
  42713b:	xor    eax,esi
  42713d:	add    eax,edi
  42713f:	shr    ecx,0x1f
  427142:	cmp    eax,ecx
  427144:	je     0x42715e
  427146:	mov    ecx,DWORD PTR [ebp-0x14]
  427149:	mov    eax,DWORD PTR [ebp+0x10]
  42714c:	mov    eax,DWORD PTR [eax+0x1e0]
  427152:	movzx  ecx,cx
  427155:	push   ecx
  427156:	push   DWORD PTR [ebp-0xc]
  427159:	call   DWORD PTR [eax+0x8]
  42715c:	jmp    0x427177
  42715e:	mov    eax,DWORD PTR [ebp+0xc]
  427161:	add    eax,DWORD PTR [ebp+0x8]
  427164:	mov    ecx,DWORD PTR [ebp+0x10]
  427167:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42716d:	add    eax,0x2
  427170:	push   eax
  427171:	push   DWORD PTR [ebp-0xc]
  427174:	call   DWORD PTR [ecx+0x8]
  427177:	mov    DWORD PTR [ebp+0xc],eax
  42717a:	mov    eax,DWORD PTR [ebp-0x4]
  42717d:	mov    ecx,DWORD PTR [ebp+0xc]
  427180:	xor    eax,esi
  427182:	add    eax,edi
  427184:	cmp    eax,ecx
  427186:	mov    eax,DWORD PTR [ebp-0x8]
  427189:	jne    0x42719c
  42718b:	mov    ecx,DWORD PTR [ebp-0x18]
  42718e:	xor    eax,esi
  427190:	lea    eax,[ecx+eax*1+0x3272f1]
  427197:	mov    DWORD PTR [ebp-0x18],eax
  42719a:	jmp    0x4271ac
  42719c:	mov    ecx,DWORD PTR [ebp+0xc]
  42719f:	xor    eax,esi
  4271a1:	add    eax,edi
  4271a3:	imul   eax,ecx
  4271a6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4271a9:	mov    DWORD PTR [ecx+ebx*4],eax
  4271ac:	mov    eax,DWORD PTR [ebp-0x8]
  4271af:	xor    eax,esi
  4271b1:	lea    ebx,[ebx+eax*1+0x3272f1]
  4271b8:	mov    eax,DWORD PTR [ebp-0x4]
  4271bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4271be:	xor    eax,esi
  4271c0:	add    eax,edi
  4271c2:	cmp    DWORD PTR [ecx+ebx*4],eax
  4271c5:	jne    0x4270f6
  4271cb:	mov    edx,DWORD PTR [ebp-0x10]
  4271ce:	mov    ecx,DWORD PTR [ebp-0x2c]
  4271d1:	mov    eax,DWORD PTR [ebp-0x18]
  4271d4:	sub    edx,0x3272f0
  4271da:	xor    edx,esi
  4271dc:	jmp    0x426fa6
  4271e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e4:	xor    ecx,esi
  4271e6:	add    ecx,edi
  4271e8:	cmp    eax,ecx
  4271ea:	mov    eax,DWORD PTR [ebp-0x4]
  4271ed:	jne    0x4271f7
  4271ef:	mov    eax,DWORD PTR [ebp-0x8]
  4271f2:	jmp    0x4271f7
  4271f4:	mov    eax,DWORD PTR [ebp-0x4]
  4271f7:	xor    eax,esi
  4271f9:	add    eax,edi
  4271fb:	pop    edi
  4271fc:	pop    esi
  4271fd:	pop    ebx
  4271fe:	leave  
  4271ff:	ret    0xc
  427202:	push   ebp
  427203:	mov    ebp,esp
  427205:	sub    esp,0x28
  427208:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42720f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427216:	mov    eax,DWORD PTR [ebp+0xc]
  427219:	mov    DWORD PTR [ebp+0xc],eax
  42721c:	push   esi
  42721d:	mov    eax,eax
  42721f:	mov    eax,DWORD PTR [ebp-0x4]
  427222:	mov    esi,DWORD PTR [ebp+0x8]
  427225:	mov    ecx,0x75108aa
  42722a:	xor    eax,ecx
  42722c:	mov    edx,0x3272f1
  427231:	add    eax,edx
  427233:	cmp    esi,eax
  427235:	je     0x42735c
  42723b:	mov    eax,DWORD PTR [ebp+0x8]
  42723e:	mov    esi,DWORD PTR [ebp+0x8]
  427241:	add    esi,DWORD PTR [eax+0x3c]
  427244:	push   edi
  427245:	mov    DWORD PTR [ebp+0xc],esi
  427248:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42724f:	mov    eax,DWORD PTR [ebp-0x1c]
  427252:	mov    esi,DWORD PTR [ebp-0x4]
  427255:	mov    edi,DWORD PTR [ebp+0xc]
  427258:	xor    esi,ecx
  42725a:	xor    eax,ecx
  42725c:	add    esi,edx
  42725e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427265:	je     0x427356
  42726b:	mov    esi,DWORD PTR [ebp+0xc]
  42726e:	mov    eax,DWORD PTR [ebp+0x8]
  427271:	add    eax,DWORD PTR [esi+0xa0]
  427277:	mov    esi,DWORD PTR [ebp+0x8]
  42727a:	mov    edi,DWORD PTR [ebp+0xc]
  42727d:	sub    esi,DWORD PTR [edi+0x34]
  427280:	mov    edi,DWORD PTR [ebp-0x4]
  427283:	xor    edi,ecx
  427285:	add    edi,edx
  427287:	mov    DWORD PTR [ebp-0x24],esi
  42728a:	cmp    esi,edi
  42728c:	je     0x427356
  427292:	mov    esi,DWORD PTR [ebp-0x4]
  427295:	xor    esi,ecx
  427297:	add    esi,edx
  427299:	mov    DWORD PTR [ebp-0x8],esi
  42729c:	push   ebx
  42729d:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4272a4:	jmp    0x427340
  4272a9:	mov    esi,DWORD PTR [ebp-0x4]
  4272ac:	xor    esi,ecx
  4272ae:	lea    edi,[ebx-0x8]
  4272b1:	add    esi,edx
  4272b3:	shr    edi,1
  4272b5:	cmp    esi,edi
  4272b7:	jae    0x427326
  4272b9:	sub    edi,esi
  4272bb:	lea    ebx,[eax+esi*2+0x8]
  4272bf:	mov    DWORD PTR [ebp-0x18],edi
  4272c2:	movzx  esi,WORD PTR [ebx]
  4272c5:	and    esi,0xfff
  4272cb:	mov    DWORD PTR [ebp-0x14],esi
  4272ce:	mov    edi,DWORD PTR [ebp-0x14]
  4272d1:	mov    esi,DWORD PTR [eax]
  4272d3:	sub    esi,edx
  4272d5:	add    edi,esi
  4272d7:	movzx  esi,WORD PTR [ebx]
  4272da:	shr    esi,0xc
  4272dd:	xor    edi,ecx
  4272df:	mov    DWORD PTR [ebp-0x20],edi
  4272e2:	mov    DWORD PTR [ebp-0x14],esi
  4272e5:	mov    esi,DWORD PTR [ebp-0x20]
  4272e8:	mov    edi,DWORD PTR [ebp+0x8]
  4272eb:	xor    esi,ecx
  4272ed:	lea    esi,[esi+edi*1+0x3272f1]
  4272f4:	mov    DWORD PTR [ebp-0x20],esi
  4272f7:	mov    esi,DWORD PTR [ebp-0x10]
  4272fa:	mov    edi,DWORD PTR [ebp-0x14]
  4272fd:	xor    esi,ecx
  4272ff:	add    esi,edx
  427301:	cmp    edi,esi
  427303:	jne    0x42731b
  427305:	mov    esi,DWORD PTR [ebp-0x10]
  427308:	mov    edi,DWORD PTR [ebp-0x14]
  42730b:	xor    esi,ecx
  42730d:	add    esi,edx
  42730f:	cmp    edi,esi
  427311:	jne    0x42731b
  427313:	mov    esi,DWORD PTR [ebp-0x20]
  427316:	mov    edi,DWORD PTR [ebp-0x24]
  427319:	add    DWORD PTR [esi],edi
  42731b:	add    ebx,0x2
  42731e:	dec    DWORD PTR [ebp-0x18]
  427321:	jne    0x4272c2
  427323:	mov    ebx,DWORD PTR [ebp-0xc]
  427326:	add    DWORD PTR [ebp-0x8],ebx
  427329:	mov    esi,DWORD PTR [ebp-0x1c]
  42732c:	mov    edi,DWORD PTR [ebp-0x8]
  42732f:	mov    ebx,DWORD PTR [ebp+0xc]
  427332:	xor    esi,ecx
  427334:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42733b:	jae    0x427355
  42733d:	add    eax,DWORD PTR [ebp-0xc]
  427340:	mov    esi,DWORD PTR [ebp-0x4]
  427343:	mov    ebx,DWORD PTR [eax+0x4]
  427346:	xor    esi,ecx
  427348:	add    esi,edx
  42734a:	mov    DWORD PTR [ebp-0xc],ebx
  42734d:	cmp    ebx,esi
  42734f:	jne    0x4272a9
  427355:	pop    ebx
  427356:	mov    eax,DWORD PTR [ebp-0x28]
  427359:	pop    edi
  42735a:	jmp    0x42735f
  42735c:	mov    eax,DWORD PTR [ebp-0x4]
  42735f:	xor    eax,ecx
  427361:	add    eax,edx
  427363:	pop    esi
  427364:	leave  
  427365:	ret    0x8
  427368:	push   ebp
  427369:	mov    ebp,esp
  42736b:	sub    esp,0xd8
  427371:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427378:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  42737f:	mov    eax,DWORD PTR [ebp-0x4]
  427382:	push   ebx
  427383:	push   esi
  427384:	mov    esi,0x75108aa
  427389:	xor    eax,esi
  42738b:	push   edi
  42738c:	mov    edi,0x3272f1
  427391:	add    eax,edi
  427393:	mov    DWORD PTR [ebp-0x18],eax
  427396:	mov    eax,DWORD PTR [ebp-0x4]
  427399:	xor    eax,esi
  42739b:	add    eax,edi
  42739d:	mov    DWORD PTR [ebp-0x8],eax
  4273a0:	mov    ebx,DWORD PTR [ebp+0x20]
  4273a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4273a6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4273a9:	xor    eax,ecx
  4273ab:	mov    DWORD PTR [ebp-0x1c],eax
  4273ae:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4273b5:	mov    eax,DWORD PTR [ebp-0xc]
  4273b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4273bb:	xor    eax,ecx
  4273bd:	mov    DWORD PTR [ebp-0xc],eax
  4273c0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4273c7:	mov    eax,DWORD PTR [ebp-0x10]
  4273ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4273cd:	xor    eax,ecx
  4273cf:	mov    DWORD PTR [ebp-0x10],eax
  4273d2:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4273d9:	mov    eax,DWORD PTR [ebp-0x28]
  4273dc:	mov    ecx,DWORD PTR [ebp-0x28]
  4273df:	xor    eax,ecx
  4273e1:	mov    DWORD PTR [ebp-0x28],eax
  4273e4:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4273eb:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4273f2:	mov    eax,DWORD PTR [ebp+0x8]
  4273f5:	test   eax,eax
  4273f7:	je     0x427880
  4273fd:	mov    eax,DWORD PTR [ebp+0xc]
  427400:	test   eax,eax
  427402:	je     0x427880
  427408:	mov    eax,DWORD PTR [ebp+0x18]
  42740b:	test   eax,eax
  42740d:	je     0x427880
  427413:	mov    eax,DWORD PTR [ebp+0x20]
  427416:	mov    ecx,DWORD PTR [ebp+0x8]
  427419:	xor    eax,0x8aa
  42741e:	add    eax,0x72f1
  427423:	cmp    WORD PTR [ecx],ax
  427426:	jne    0x427880
  42742c:	mov    eax,DWORD PTR [ebp-0x4]
  42742f:	xor    eax,esi
  427431:	add    eax,edi
  427433:	mov    DWORD PTR [ebp-0x30],eax
  427436:	mov    eax,DWORD PTR [ebp-0x4]
  427439:	mov    ecx,DWORD PTR [ebp+0x8]
  42743c:	mov    eax,DWORD PTR [ebp+0x8]
  42743f:	add    eax,DWORD PTR [ecx+0x3c]
  427442:	mov    DWORD PTR [ebp+0xc],eax
  427445:	mov    eax,DWORD PTR [eax+0x50]
  427448:	test   eax,eax
  42744a:	je     0x427880
  427450:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427457:	mov    eax,DWORD PTR [ebp-0x2c]
  42745a:	xor    eax,esi
  42745c:	add    eax,edi
  42745e:	mov    DWORD PTR [ebp-0x2c],eax
  427461:	mov    eax,DWORD PTR [ebp-0x4]
  427464:	mov    eax,DWORD PTR [ebx+0x190]
  42746a:	mov    ecx,DWORD PTR [eax]
  42746c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42746f:	add    ecx,DWORD PTR [eax]
  427471:	mov    eax,DWORD PTR [ebp-0x4]
  427474:	mov    eax,DWORD PTR [ebx+0x18c]
  42747a:	mov    edx,DWORD PTR [eax]
  42747c:	mov    DWORD PTR [ebp-0x20],ecx
  42747f:	mov    DWORD PTR [ebp+0x20],edx
  427482:	cmp    edx,edx
  427484:	jne    0x4274b8
  427486:	mov    eax,DWORD PTR [ebx+0x1e0]
  42748c:	lea    edx,[ebp-0x18]
  42748f:	push   edx
  427490:	mov    edx,DWORD PTR [ebp-0xc]
  427493:	xor    edx,esi
  427495:	add    edx,edi
  427497:	push   edx
  427498:	push   DWORD PTR [ecx+0x50]
  42749b:	push   DWORD PTR [ebp+0x20]
  42749e:	call   DWORD PTR [eax+0x1c]
  4274a1:	mov    eax,DWORD PTR [ebp-0x20]
  4274a4:	mov    ecx,DWORD PTR [eax+0x54]
  4274a7:	mov    eax,DWORD PTR [eax+0x50]
  4274aa:	sub    eax,ecx
  4274ac:	add    ecx,DWORD PTR [ebp+0x20]
  4274af:	push   ecx
  4274b0:	call   0x427e1b
  4274b5:	mov    edx,DWORD PTR [ebp+0x20]
  4274b8:	mov    eax,DWORD PTR [ebx+0x194]
  4274be:	mov    DWORD PTR [eax],edx
  4274c0:	mov    eax,DWORD PTR [ebp+0xc]
  4274c3:	push   DWORD PTR [eax+0x54]
  4274c6:	push   DWORD PTR [ebp+0x8]
  4274c9:	push   edx
  4274ca:	call   0x427d11
  4274cf:	mov    ecx,DWORD PTR [ebp+0x20]
  4274d2:	mov    eax,DWORD PTR [ecx+0x3c]
  4274d5:	add    eax,ecx
  4274d7:	movzx  ecx,WORD PTR [eax+0x14]
  4274db:	lea    ecx,[ecx+eax*1+0x18]
  4274df:	mov    DWORD PTR [ebp+0x18],ecx
  4274e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e5:	movzx  edx,WORD PTR [eax+0x6]
  4274e9:	xor    ecx,esi
  4274eb:	add    ecx,edi
  4274ed:	mov    DWORD PTR [ebp+0xc],eax
  4274f0:	cmp    edx,ecx
  4274f2:	je     0x42759f
  4274f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274fb:	xor    ecx,esi
  4274fd:	add    ecx,edi
  4274ff:	mov    DWORD PTR [ebp-0x8],ecx
  427502:	mov    ecx,DWORD PTR [ebp-0x24]
  427505:	movzx  edx,WORD PTR [eax+0x6]
  427509:	xor    ecx,esi
  42750b:	sub    edx,ecx
  42750d:	sub    edx,edi
  42750f:	cmp    DWORD PTR [ebp-0x8],edx
  427512:	ja     0x42759f
  427518:	mov    edx,DWORD PTR [ebp+0x18]
  42751b:	add    edx,0x8
  42751e:	mov    DWORD PTR [ebp+0x18],edx
  427521:	jmp    0x427526
  427523:	mov    edx,DWORD PTR [ebp+0x18]
  427526:	mov    eax,DWORD PTR [eax+0x38]
  427529:	lea    ecx,[eax-0x1]
  42752c:	mov    DWORD PTR [ebp-0x38],eax
  42752f:	mov    eax,DWORD PTR [edx]
  427531:	test   eax,ecx
  427533:	je     0x42753c
  427535:	not    ecx
  427537:	and    eax,ecx
  427539:	add    eax,DWORD PTR [ebp-0x38]
  42753c:	mov    ecx,DWORD PTR [edx+0x4]
  42753f:	add    ecx,DWORD PTR [ebp+0x20]
  427542:	push   ecx
  427543:	call   0x427e1b
  427548:	mov    edx,DWORD PTR [ebp-0x4]
  42754b:	mov    eax,DWORD PTR [ebp+0x18]
  42754e:	mov    ecx,DWORD PTR [eax+0x8]
  427551:	xor    edx,esi
  427553:	add    edx,edi
  427555:	cmp    ecx,edx
  427557:	je     0x427570
  427559:	push   ecx
  42755a:	mov    ecx,DWORD PTR [ebp+0x8]
  42755d:	add    ecx,DWORD PTR [eax+0xc]
  427560:	mov    eax,DWORD PTR [eax+0x4]
  427563:	add    eax,DWORD PTR [ebp+0x20]
  427566:	push   ecx
  427567:	push   eax
  427568:	call   0x427d11
  42756d:	mov    eax,DWORD PTR [ebp+0x18]
  427570:	mov    ecx,DWORD PTR [ebp-0x24]
  427573:	mov    edx,DWORD PTR [ebp-0x8]
  427576:	add    eax,0x28
  427579:	xor    ecx,esi
  42757b:	lea    ecx,[edx+ecx*1+0x3272f1]
  427582:	mov    edx,DWORD PTR [ebp+0xc]
  427585:	mov    DWORD PTR [ebp+0x18],eax
  427588:	mov    eax,DWORD PTR [ebp-0x24]
  42758b:	movzx  edx,WORD PTR [edx+0x6]
  42758f:	xor    eax,esi
  427591:	sub    edx,eax
  427593:	mov    eax,DWORD PTR [ebp+0xc]
  427596:	sub    edx,edi
  427598:	mov    DWORD PTR [ebp-0x8],ecx
  42759b:	cmp    ecx,edx
  42759d:	jbe    0x427523
  42759f:	mov    edx,DWORD PTR [ebx+0x18c]
  4275a5:	mov    ecx,DWORD PTR [ebp+0x20]
  4275a8:	cmp    ecx,DWORD PTR [edx]
  4275aa:	jne    0x4275d3
  4275ac:	mov    eax,DWORD PTR [ebx+0x1e0]
  4275b2:	lea    edx,[ebp-0x18]
  4275b5:	push   edx
  4275b6:	mov    edx,DWORD PTR [ebp-0x10]
  4275b9:	xor    edx,esi
  4275bb:	add    edx,edi
  4275bd:	push   edx
  4275be:	mov    edx,DWORD PTR [ebp-0x20]
  4275c1:	push   DWORD PTR [edx+0x54]
  4275c4:	push   ecx
  4275c5:	call   DWORD PTR [eax+0x1c]
  4275c8:	test   eax,eax
  4275ca:	je     0x427871
  4275d0:	mov    eax,DWORD PTR [ebp+0xc]
  4275d3:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4275d9:	mov    ecx,DWORD PTR [ecx]
  4275db:	xor    ecx,esi
  4275dd:	add    ecx,edi
  4275df:	je     0x42779c
  4275e5:	mov    eax,DWORD PTR [ebp-0x4]
  4275e8:	xor    eax,esi
  4275ea:	add    eax,edi
  4275ec:	and    DWORD PTR [ebp+0x8],0x0
  4275f0:	mov    DWORD PTR [ebp-0x14],eax
  4275f3:	mov    eax,0xf89c85d9
  4275f8:	lea    ecx,[eax-0x8]
  4275fb:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427602:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427609:	mov    DWORD PTR [ebp-0x50],eax
  42760c:	mov    DWORD PTR [ebp-0x4c],ecx
  42760f:	mov    DWORD PTR [ebp-0x48],ecx
  427612:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427619:	mov    edx,DWORD PTR [ebp+0x8]
  42761c:	mov    ecx,0x8aa
  427621:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427626:	mov    edx,0x72f1
  42762b:	add    cx,dx
  42762e:	mov    edx,DWORD PTR [ebp+0x8]
  427631:	inc    DWORD PTR [ebp+0x8]
  427634:	cmp    DWORD PTR [ebp+0x8],0x6
  427638:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427640:	jb     0x427619
  427642:	mov    ecx,0xf89c852b
  427647:	mov    DWORD PTR [ebp-0xb0],eax
  42764d:	mov    DWORD PTR [ebp-0x9c],eax
  427653:	mov    DWORD PTR [ebp-0x74],eax
  427656:	mov    DWORD PTR [ebp-0x70],eax
  427659:	lea    eax,[ecx-0x3]
  42765c:	mov    edx,0xf89c85ff
  427661:	mov    DWORD PTR [ebp-0x64],eax
  427664:	mov    DWORD PTR [ebp-0x60],eax
  427667:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  427671:	mov    DWORD PTR [ebp-0xac],ecx
  427677:	mov    DWORD PTR [ebp-0xa8],edx
  42767d:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427687:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427691:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42769b:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4276a5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4276af:	mov    DWORD PTR [ebp-0x8c],ecx
  4276b5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4276bf:	mov    DWORD PTR [ebp-0x84],edx
  4276c5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4276cc:	mov    DWORD PTR [ebp-0x7c],ecx
  4276cf:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4276d6:	mov    DWORD PTR [ebp-0x6c],ecx
  4276d9:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4276e0:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  4276e7:	xor    eax,eax
  4276e9:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4276f0:	xor    cl,0xaa
  4276f3:	sub    cl,0xf
  4276f6:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4276fd:	inc    eax
  4276fe:	cmp    eax,0x17
  427701:	jb     0x4276e9
  427703:	mov    eax,DWORD PTR [ebx+0x1e0]
  427709:	lea    ecx,[ebp-0xc0]
  42770f:	push   ecx
  427710:	call   DWORD PTR [eax+0x4]
  427713:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427719:	lea    edx,[ebp-0xd8]
  42771f:	push   edx
  427720:	push   eax
  427721:	call   DWORD PTR [ecx+0x8]
  427724:	mov    DWORD PTR [ebp-0x40],eax
  427727:	lea    eax,[ebp-0x14]
  42772a:	push   eax
  42772b:	mov    eax,DWORD PTR [ebx+0x18c]
  427731:	push   DWORD PTR [eax]
  427733:	mov    eax,DWORD PTR [ebp-0x40]
  427736:	call   eax
  427738:	mov    eax,DWORD PTR [ebp-0x4]
  42773b:	xor    eax,esi
  42773d:	add    eax,edi
  42773f:	mov    DWORD PTR [ebp-0x34],eax
  427742:	mov    ecx,DWORD PTR [ebp-0x4]
  427745:	mov    eax,DWORD PTR [ebp-0x14]
  427748:	xor    ecx,esi
  42774a:	add    ecx,edi
  42774c:	cmp    eax,ecx
  42774e:	je     0x427799
  427750:	mov    DWORD PTR [ebp-0x3c],eax
  427753:	jmp    0x427764
  427755:	mov    eax,DWORD PTR [eax]
  427757:	mov    ecx,DWORD PTR [ebp-0x3c]
  42775a:	mov    DWORD PTR [ebp-0x14],eax
  42775d:	mov    eax,DWORD PTR [ebp-0x14]
  427760:	cmp    eax,ecx
  427762:	je     0x427771
  427764:	mov    edx,DWORD PTR [eax+0x18]
  427767:	mov    ecx,DWORD PTR [ebx+0x18c]
  42776d:	cmp    edx,DWORD PTR [ecx]
  42776f:	jne    0x427755
  427771:	mov    ecx,DWORD PTR [ebx+0x18c]
  427777:	mov    edx,DWORD PTR [eax+0x18]
  42777a:	cmp    edx,DWORD PTR [ecx]
  42777c:	jne    0x427799
  42777e:	mov    ecx,DWORD PTR [ebx+0x190]
  427784:	mov    edx,DWORD PTR [ebp-0x20]
  427787:	mov    edx,DWORD PTR [edx+0x28]
  42778a:	add    edx,DWORD PTR [ecx]
  42778c:	mov    DWORD PTR [eax+0x1c],edx
  42778f:	mov    eax,DWORD PTR [ebp-0x24]
  427792:	xor    eax,esi
  427794:	add    eax,edi
  427796:	mov    DWORD PTR [ebp-0x34],eax
  427799:	mov    eax,DWORD PTR [ebp+0xc]
  42779c:	push   ebx
  42779d:	push   eax
  42779e:	push   DWORD PTR [ebp+0x20]
  4277a1:	call   0x426f1f
  4277a6:	test   eax,eax
  4277a8:	je     0x427871
  4277ae:	push   DWORD PTR [ebp+0xc]
  4277b1:	mov    ecx,ebx
  4277b3:	push   DWORD PTR [ebp+0x20]
  4277b6:	call   0x426e78
  4277bb:	test   eax,eax
  4277bd:	je     0x427871
  4277c3:	mov    eax,DWORD PTR [ebp+0xc]
  4277c6:	mov    edx,DWORD PTR [ebp+0x20]
  4277c9:	mov    ecx,ebx
  4277cb:	call   0x426d51
  4277d0:	test   eax,eax
  4277d2:	je     0x427871
  4277d8:	push   ebx
  4277d9:	push   DWORD PTR [ebp+0x20]
  4277dc:	call   0x427202
  4277e1:	test   eax,eax
  4277e3:	je     0x427871
  4277e9:	mov    eax,DWORD PTR [ebx+0x18c]
  4277ef:	mov    edx,DWORD PTR [ebp+0x20]
  4277f2:	cmp    edx,DWORD PTR [eax]
  4277f4:	jne    0x427810
  4277f6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4277fc:	lea    ecx,[ebp-0x18]
  4277ff:	push   ecx
  427800:	push   DWORD PTR [ebp-0x18]
  427803:	mov    ecx,DWORD PTR [ebp-0x20]
  427806:	push   DWORD PTR [ecx+0x54]
  427809:	push   edx
  42780a:	call   DWORD PTR [eax+0x1c]
  42780d:	mov    edx,DWORD PTR [ebp+0x20]
  427810:	mov    eax,DWORD PTR [ebx+0x1c8]
  427816:	mov    eax,DWORD PTR [eax]
  427818:	xor    eax,esi
  42781a:	add    eax,edi
  42781c:	je     0x427855
  42781e:	mov    ecx,DWORD PTR [ebp+0xc]
  427821:	mov    eax,DWORD PTR [ecx+0x28]
  427824:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42782b:	mov    esi,DWORD PTR [ebp+0x8]
  42782e:	push   DWORD PTR [ebp+0x14]
  427831:	xor    esi,0x8aa
  427837:	push   DWORD PTR [ebp+0x10]
  42783a:	add    esi,0x72f1
  427840:	or     WORD PTR [ecx+0x16],si
  427844:	add    eax,edx
  427846:	push   edx
  427847:	call   eax
  427849:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427853:	jmp    0x42785f
  427855:	mov    eax,DWORD PTR [ebp+0xc]
  427858:	mov    eax,DWORD PTR [eax+0x28]
  42785b:	add    eax,edx
  42785d:	call   eax
  42785f:	mov    DWORD PTR [ebp-0x8],eax
  427862:	mov    eax,DWORD PTR [ebp-0x8]
  427865:	mov    ecx,DWORD PTR [ebp+0x1c]
  427868:	mov    DWORD PTR [ecx],eax
  42786a:	mov    DWORD PTR [ebp-0x30],0x1
  427871:	cmp    DWORD PTR [ebp-0x30],0x0
  427875:	jne    0x42787b
  427877:	and    DWORD PTR [ebp+0x20],0x0
  42787b:	mov    eax,DWORD PTR [ebp+0x20]
  42787e:	jmp    0x427882
  427880:	xor    eax,eax
  427882:	pop    edi
  427883:	pop    esi
  427884:	pop    ebx
  427885:	leave  
  427886:	ret    0x1c
  427889:	push   ebp
  42788a:	mov    ebp,esp
  42788c:	movzx  edx,WORD PTR [ecx+0x6]
  427890:	movzx  eax,WORD PTR [ecx+0x14]
  427894:	push   ebx
  427895:	push   edi
  427896:	xor    edi,edi
  427898:	lea    eax,[eax+ecx*1+0x18]
  42789c:	test   edx,edx
  42789e:	je     0x4278bf
  4278a0:	mov    ecx,DWORD PTR [eax+0xc]
  4278a3:	lea    ebx,[ecx+esi*1]
  4278a6:	cmp    DWORD PTR [ebp+0x8],ebx
  4278a9:	jb     0x4278b7
  4278ab:	mov    ebx,DWORD PTR [eax+0x8]
  4278ae:	add    ebx,ecx
  4278b0:	add    ebx,esi
  4278b2:	cmp    DWORD PTR [ebp+0x8],ebx
  4278b5:	jb     0x4278c1
  4278b7:	add    eax,0x28
  4278ba:	inc    edi
  4278bb:	cmp    edi,edx
  4278bd:	jb     0x4278a0
  4278bf:	xor    eax,eax
  4278c1:	pop    edi
  4278c2:	pop    ebx
  4278c3:	pop    ebp
  4278c4:	ret    0x4
  4278c7:	push   ebp
  4278c8:	mov    ebp,esp
  4278ca:	sub    esp,0x34
  4278cd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4278d4:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4278db:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4278e2:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4278e9:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4278f0:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4278f7:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  4278fe:	mov    DWORD PTR [ebp-0x10],eax
  427901:	mov    eax,DWORD PTR [ebp+0x8]
  427904:	mov    DWORD PTR [ebp-0x14],eax
  427907:	mov    eax,DWORD PTR [ebp-0xc]
  42790a:	push   ebx
  42790b:	mov    ecx,0x75108aa
  427910:	xor    eax,ecx
  427912:	push   esi
  427913:	mov    esi,DWORD PTR [ebp-0x10]
  427916:	mov    edx,0x3272f1
  42791b:	add    eax,edx
  42791d:	push   edi
  42791e:	cmp    esi,eax
  427920:	je     0x427aff
  427926:	mov    eax,DWORD PTR [ebp-0xc]
  427929:	mov    esi,DWORD PTR [ebp-0x14]
  42792c:	xor    eax,ecx
  42792e:	add    eax,edx
  427930:	cmp    esi,eax
  427932:	je     0x427aff
  427938:	mov    eax,DWORD PTR [ebp-0xc]
  42793b:	xor    eax,ecx
  42793d:	add    eax,edx
  42793f:	mov    DWORD PTR [ebp-0x24],eax
  427942:	mov    eax,DWORD PTR [ebp-0xc]
  427945:	xor    eax,ecx
  427947:	add    eax,edx
  427949:	mov    DWORD PTR [ebp-0x28],eax
  42794c:	mov    edi,DWORD PTR [ebp-0x20]
  42794f:	mov    ebx,DWORD PTR [ebp-0x8]
  427952:	mov    esi,0x8aa
  427957:	xor    edi,esi
  427959:	mov    eax,0x72f1
  42795e:	xor    ebx,esi
  427960:	add    edi,eax
  427962:	add    ebx,eax
  427964:	sub    ebx,edi
  427966:	mov    WORD PTR [ebp-0x8],bx
  42796a:	jmp    0x427a2f
  42796f:	mov    edi,DWORD PTR [ebp-0xc]
  427972:	mov    bx,WORD PTR [ebp-0x4]
  427976:	xor    edi,esi
  427978:	add    edi,eax
  42797a:	cmp    bx,di
  42797d:	je     0x427a71
  427983:	mov    edi,DWORD PTR [ebp-0xc]
  427986:	mov    ebx,DWORD PTR [ebp+0xc]
  427989:	xor    edi,ecx
  42798b:	add    edi,edx
  42798d:	cmp    ebx,edi
  42798f:	mov    di,WORD PTR [ebp-0x4]
  427993:	mov    bx,WORD PTR [ebp+0x8]
  427997:	je     0x427a02
  427999:	cmp    bx,di
  42799c:	je     0x427a0b
  42799e:	mov    edi,DWORD PTR [ebp-0x20]
  4279a1:	mov    bx,WORD PTR [ebp+0x8]
  4279a5:	xor    edi,esi
  4279a7:	add    edi,eax
  4279a9:	cmp    bx,di
  4279ac:	jb     0x4279cc
  4279ae:	mov    edi,DWORD PTR [ebp-0x2c]
  4279b1:	mov    bx,WORD PTR [ebp+0x8]
  4279b5:	xor    edi,esi
  4279b7:	add    edi,eax
  4279b9:	cmp    bx,di
  4279bc:	ja     0x4279cc
  4279be:	movzx  edi,WORD PTR [ebp+0x8]
  4279c2:	movzx  ebx,WORD PTR [ebp-0x8]
  4279c6:	add    edi,ebx
  4279c8:	mov    WORD PTR [ebp+0x8],di
  4279cc:	mov    edi,DWORD PTR [ebp-0x20]
  4279cf:	mov    bx,WORD PTR [ebp-0x4]
  4279d3:	xor    edi,esi
  4279d5:	add    edi,eax
  4279d7:	cmp    bx,di
  4279da:	jb     0x4279fa
  4279dc:	mov    edi,DWORD PTR [ebp-0x2c]
  4279df:	mov    bx,WORD PTR [ebp-0x4]
  4279e3:	xor    edi,esi
  4279e5:	add    edi,eax
  4279e7:	cmp    bx,di
  4279ea:	ja     0x4279fa
  4279ec:	movzx  edi,WORD PTR [ebp-0x4]
  4279f0:	movzx  ebx,WORD PTR [ebp-0x8]
  4279f4:	add    edi,ebx
  4279f6:	mov    WORD PTR [ebp-0x4],di
  4279fa:	mov    di,WORD PTR [ebp-0x4]
  4279fe:	mov    bx,WORD PTR [ebp+0x8]
  427a02:	cmp    bx,di
  427a05:	jne    0x427aff
  427a0b:	mov    edi,DWORD PTR [ebp-0x1c]
  427a0e:	mov    ebx,DWORD PTR [ebp-0x10]
  427a11:	xor    edi,ecx
  427a13:	lea    edi,[edi+ebx*1+0x3272f1]
  427a1a:	mov    DWORD PTR [ebp-0x10],edi
  427a1d:	mov    edi,DWORD PTR [ebp-0x1c]
  427a20:	mov    ebx,DWORD PTR [ebp-0x14]
  427a23:	xor    edi,ecx
  427a25:	lea    edi,[edi+ebx*1+0x3272f1]
  427a2c:	mov    DWORD PTR [ebp-0x14],edi
  427a2f:	mov    edi,DWORD PTR [ebp-0x24]
  427a32:	mov    ebx,DWORD PTR [ebp-0x10]
  427a35:	mov    di,WORD PTR [ebx+edi*2]
  427a39:	mov    WORD PTR [ebp+0x8],di
  427a3d:	mov    edi,DWORD PTR [ebp-0x28]
  427a40:	mov    ebx,DWORD PTR [ebp-0x14]
  427a43:	mov    di,WORD PTR [ebx+edi*2]
  427a47:	mov    WORD PTR [ebp-0x4],di
  427a4b:	mov    edi,DWORD PTR [ebp-0xc]
  427a4e:	mov    bx,WORD PTR [ebp+0x8]
  427a52:	xor    edi,esi
  427a54:	add    edi,eax
  427a56:	cmp    bx,di
  427a59:	jne    0x42796f
  427a5f:	mov    eax,DWORD PTR [ebp-0x18]
  427a62:	mov    esi,DWORD PTR [ebp-0xc]
  427a65:	xor    eax,ecx
  427a67:	add    eax,edx
  427a69:	imul   eax,esi
  427a6c:	mov    DWORD PTR [ebp-0xc],eax
  427a6f:	jmp    0x427a83
  427a71:	mov    eax,DWORD PTR [ebp-0xc]
  427a74:	mov    esi,DWORD PTR [ebp-0x18]
  427a77:	xor    eax,ecx
  427a79:	lea    eax,[eax+esi*1+0x3272f1]
  427a80:	mov    DWORD PTR [ebp-0x18],eax
  427a83:	mov    eax,DWORD PTR [ebp-0x24]
  427a86:	sub    eax,edx
  427a88:	xor    eax,ecx
  427a8a:	mov    DWORD PTR [ebp-0x30],eax
  427a8d:	mov    eax,DWORD PTR [ebp-0x28]
  427a90:	sub    eax,edx
  427a92:	xor    eax,ecx
  427a94:	mov    DWORD PTR [ebp-0x34],eax
  427a97:	mov    eax,DWORD PTR [ebp-0x34]
  427a9a:	mov    esi,DWORD PTR [ebp-0x1c]
  427a9d:	xor    esi,ecx
  427a9f:	add    esi,edx
  427aa1:	xor    eax,ecx
  427aa3:	add    eax,0x3272f1
  427aa8:	imul   esi,eax
  427aab:	mov    eax,DWORD PTR [ebp-0x14]
  427aae:	movzx  eax,WORD PTR [esi+eax*1]
  427ab2:	mov    esi,DWORD PTR [ebp-0x30]
  427ab5:	mov    edi,DWORD PTR [ebp-0x1c]
  427ab8:	xor    esi,ecx
  427aba:	add    esi,edx
  427abc:	xor    edi,ecx
  427abe:	add    edi,edx
  427ac0:	imul   edi,esi
  427ac3:	mov    esi,DWORD PTR [ebp-0x10]
  427ac6:	movzx  esi,WORD PTR [edi+esi*1]
  427aca:	sub    eax,edx
  427acc:	sub    esi,edx
  427ace:	xor    eax,ecx
  427ad0:	xor    esi,ecx
  427ad2:	cmp    esi,eax
  427ad4:	jne    0x427aff
  427ad6:	mov    eax,DWORD PTR [ebp-0x30]
  427ad9:	mov    esi,DWORD PTR [ebp-0x1c]
  427adc:	xor    eax,ecx
  427ade:	add    eax,0x3272f1
  427ae3:	xor    esi,ecx
  427ae5:	add    esi,edx
  427ae7:	imul   esi,eax
  427aea:	mov    eax,DWORD PTR [ebp-0x10]
  427aed:	movzx  eax,WORD PTR [esi+eax*1]
  427af1:	mov    esi,DWORD PTR [ebp-0xc]
  427af4:	sub    eax,edx
  427af6:	xor    eax,ecx
  427af8:	cmp    eax,esi
  427afa:	mov    eax,DWORD PTR [ebp-0xc]
  427afd:	je     0x427b02
  427aff:	mov    eax,DWORD PTR [ebp-0x18]
  427b02:	pop    edi
  427b03:	xor    eax,ecx
  427b05:	pop    esi
  427b06:	add    eax,edx
  427b08:	pop    ebx
  427b09:	leave  
  427b0a:	ret    0x8
  427b0d:	push   ebp
  427b0e:	mov    ebp,esp
  427b10:	push   ecx
  427b11:	mov    cx,WORD PTR [eax]
  427b14:	push   esi
  427b15:	mov    esi,0x3b5a
  427b1a:	sub    cx,si
  427b1d:	mov    esi,0x8a98
  427b22:	xor    cx,si
  427b25:	mov    esi,0x4e3e
  427b2a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b31:	mov    edx,0xf89c85a5
  427b36:	cmp    cx,si
  427b39:	je     0x427b98
  427b3b:	push   ebx
  427b3c:	push   edi
  427b3d:	movzx  ecx,cx
  427b40:	mov    edi,0xffcd8d0f
  427b45:	mov    esi,0x75108aa
  427b4a:	mov    ebx,0x4f9a
  427b4f:	cmp    cx,bx
  427b52:	jne    0x427b57
  427b54:	mov    DWORD PTR [ebp-0x4],edx
  427b57:	lea    edx,[edi+0x1]
  427b5a:	xor    edx,esi
  427b5c:	mov    edi,edx
  427b5e:	xor    edi,esi
  427b60:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427b68:	mov    ebx,0x3b5a
  427b6d:	sub    cx,bx
  427b70:	mov    ebx,0x8a98
  427b75:	xor    cx,bx
  427b78:	mov    ebx,0x4e3e
  427b7d:	cmp    cx,bx
  427b80:	jne    0x427b4a
  427b82:	mov    ecx,DWORD PTR [ebp-0x4]
  427b85:	pop    edi
  427b86:	pop    ebx
  427b87:	cmp    ecx,0xf89c85a4
  427b8d:	je     0x427b98
  427b8f:	xor    ecx,esi
  427b91:	lea    eax,[eax+ecx*2+0x64e5e4]
  427b98:	pop    esi
  427b99:	leave  
  427b9a:	ret    
  427b9b:	push   ebp
  427b9c:	mov    ebp,esp
  427b9e:	push   ecx
  427b9f:	push   esi
  427ba0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ba7:	mov    esi,0xf89c85a5
  427bac:	call   0x427b0d
  427bb1:	mov    cl,BYTE PTR [eax]
  427bb3:	dec    cl
  427bb5:	xor    cl,0x7c
  427bb8:	cmp    cl,0x83
  427bbb:	je     0x427c20
  427bbd:	push   ebx
  427bbe:	push   edi
  427bbf:	mov    edx,eax
  427bc1:	mov    edi,0xffcd8d0f
  427bc6:	mov    ecx,0x75108aa
  427bcb:	mov    dx,WORD PTR [edx]
  427bce:	mov    ebx,0x3b5a
  427bd3:	sub    dx,bx
  427bd6:	mov    ebx,0x8a98
  427bdb:	xor    dx,bx
  427bde:	mov    ebx,0x4e4c
  427be3:	cmp    dx,bx
  427be6:	jne    0x427beb
  427be8:	mov    DWORD PTR [ebp-0x4],esi
  427beb:	lea    esi,[edi+0x1]
  427bee:	xor    esi,ecx
  427bf0:	mov    edi,esi
  427bf2:	xor    edi,ecx
  427bf4:	lea    edx,[eax+edi*2+0x64e5e2]
  427bfb:	mov    bl,BYTE PTR [edx]
  427bfd:	dec    bl
  427bff:	xor    bl,0x7c
  427c02:	cmp    bl,0x83
  427c05:	jne    0x427bcb
  427c07:	mov    edx,DWORD PTR [ebp-0x4]
  427c0a:	pop    edi
  427c0b:	pop    ebx
  427c0c:	cmp    edx,0xf89c85a4
  427c12:	je     0x427c20
  427c14:	xor    edx,ecx
  427c16:	xor    ecx,ecx
  427c18:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427c20:	pop    esi
  427c21:	leave  
  427c22:	ret    
  427c23:	push   ebp
  427c24:	mov    ebp,esp
  427c26:	push   ecx
  427c27:	push   esi
  427c28:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427c2f:	mov    esi,0xf89c85a5
  427c34:	call   0x427b0d
  427c39:	mov    cx,WORD PTR [eax]
  427c3c:	mov    edx,0x3b5a
  427c41:	sub    cx,dx
  427c44:	mov    edx,0x8a98
  427c49:	xor    cx,dx
  427c4c:	mov    edx,0x4e3e
  427c51:	cmp    cx,dx
  427c54:	je     0x427cad
  427c56:	push   ebx
  427c57:	push   edi
  427c58:	movzx  ecx,cx
  427c5b:	mov    edx,0xffcd8d0f
  427c60:	mov    edi,0x75108aa
  427c65:	mov    ebx,0x4e4c
  427c6a:	cmp    cx,bx
  427c6d:	jne    0x427c72
  427c6f:	mov    DWORD PTR [ebp-0x4],esi
  427c72:	lea    esi,[edx+0x1]
  427c75:	xor    esi,edi
  427c77:	mov    edx,esi
  427c79:	xor    edx,edi
  427c7b:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427c83:	mov    ebx,0x3b5a
  427c88:	sub    cx,bx
  427c8b:	mov    ebx,0x8a98
  427c90:	xor    cx,bx
  427c93:	mov    ebx,0x4e3e
  427c98:	cmp    cx,bx
  427c9b:	jne    0x427c65
  427c9d:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427ca4:	pop    edi
  427ca5:	pop    ebx
  427ca6:	je     0x427cad
  427ca8:	xor    eax,eax
  427caa:	inc    eax
  427cab:	jmp    0x427caf
  427cad:	xor    eax,eax
  427caf:	pop    esi
  427cb0:	leave  
  427cb1:	ret    
  427cb2:	push   ebp
  427cb3:	mov    ebp,esp
  427cb5:	push   ecx
  427cb6:	mov    eax,DWORD PTR [ebp+0x8]
  427cb9:	movzx  ecx,WORD PTR [eax]
  427cbc:	push   esi
  427cbd:	lea    eax,[ecx-0x3b5a]
  427cc3:	mov    esi,0x8a98
  427cc8:	push   edi
  427cc9:	xor    eax,esi
  427ccb:	mov    edi,0x4e3e
  427cd0:	mov    DWORD PTR [ebp-0x4],edx
  427cd3:	cmp    ax,di
  427cd6:	je     0x427d03
  427cd8:	mov    eax,DWORD PTR [ebp+0x8]
  427cdb:	sub    eax,edx
  427cdd:	mov    DWORD PTR [ebp+0x8],eax
  427ce0:	jmp    0x427ce5
  427ce2:	mov    eax,DWORD PTR [ebp+0x8]
  427ce5:	mov    WORD PTR [edx],cx
  427ce8:	add    edx,0x2
  427ceb:	movzx  edi,WORD PTR [eax+edx*1]
  427cef:	mov    ecx,edi
  427cf1:	add    edi,0xffffc4a6
  427cf7:	xor    edi,esi
  427cf9:	mov    eax,0x4e3e
  427cfe:	cmp    di,ax
  427d01:	jne    0x427ce2
  427d03:	xor    eax,eax
  427d05:	pop    edi
  427d06:	mov    WORD PTR [edx],ax
  427d09:	mov    eax,DWORD PTR [ebp-0x4]
  427d0c:	pop    esi
  427d0d:	leave  
  427d0e:	ret    0x4
  427d11:	push   ebp
  427d12:	mov    ebp,esp
  427d14:	sub    esp,0x18
  427d17:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427d1e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427d25:	mov    ecx,DWORD PTR [ebp-0x8]
  427d28:	push   esi
  427d29:	mov    eax,0x75108aa
  427d2e:	xor    ecx,eax
  427d30:	mov    esi,0x3272f1
  427d35:	add    ecx,esi
  427d37:	mov    DWORD PTR [ebp-0x4],ecx
  427d3a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427d41:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427d48:	push   edi
  427d49:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427d50:	jmp    0x427df1
  427d55:	mov    ecx,DWORD PTR [ebp-0x4]
  427d58:	mov    edx,DWORD PTR [ebp+0x10]
  427d5b:	sub    edx,ecx
  427d5d:	mov    ecx,DWORD PTR [ebp-0xc]
  427d60:	xor    ecx,eax
  427d62:	add    ecx,esi
  427d64:	cmp    edx,ecx
  427d66:	jbe    0x427d83
  427d68:	mov    edx,DWORD PTR [ebp-0x4]
  427d6b:	add    edx,DWORD PTR [ebp+0x8]
  427d6e:	mov    ecx,DWORD PTR [ebp-0x4]
  427d71:	add    ecx,DWORD PTR [ebp+0xc]
  427d74:	mov    edi,DWORD PTR [ecx]
  427d76:	mov    DWORD PTR [edx],edi
  427d78:	mov    ecx,DWORD PTR [ecx+0x4]
  427d7b:	mov    DWORD PTR [edx+0x4],ecx
  427d7e:	mov    ecx,DWORD PTR [ebp-0xc]
  427d81:	jmp    0x427dd0
  427d83:	mov    ecx,DWORD PTR [ebp-0x4]
  427d86:	mov    edx,DWORD PTR [ebp+0x10]
  427d89:	sub    edx,ecx
  427d8b:	mov    ecx,DWORD PTR [ebp-0x10]
  427d8e:	xor    ecx,eax
  427d90:	add    ecx,esi
  427d92:	cmp    edx,ecx
  427d94:	mov    ecx,DWORD PTR [ebp-0x4]
  427d97:	jbe    0x427dab
  427d99:	add    ecx,DWORD PTR [ebp+0x8]
  427d9c:	mov    edx,DWORD PTR [ebp-0x4]
  427d9f:	add    edx,DWORD PTR [ebp+0xc]
  427da2:	mov    edx,DWORD PTR [edx]
  427da4:	mov    DWORD PTR [ecx],edx
  427da6:	mov    ecx,DWORD PTR [ebp-0x10]
  427da9:	jmp    0x427dd0
  427dab:	mov    edx,DWORD PTR [ebp+0x10]
  427dae:	sub    edx,ecx
  427db0:	mov    ecx,DWORD PTR [ebp-0x14]
  427db3:	xor    ecx,eax
  427db5:	add    ecx,esi
  427db7:	cmp    edx,ecx
  427db9:	mov    ecx,DWORD PTR [ebp-0x4]
  427dbc:	jbe    0x427de1
  427dbe:	add    ecx,DWORD PTR [ebp+0x8]
  427dc1:	mov    edx,DWORD PTR [ebp-0x4]
  427dc4:	add    edx,DWORD PTR [ebp+0xc]
  427dc7:	mov    dx,WORD PTR [edx]
  427dca:	mov    WORD PTR [ecx],dx
  427dcd:	mov    ecx,DWORD PTR [ebp-0x14]
  427dd0:	mov    edx,DWORD PTR [ebp-0x4]
  427dd3:	xor    ecx,eax
  427dd5:	lea    ecx,[ecx+edx*1+0x3272f1]
  427ddc:	mov    DWORD PTR [ebp-0x4],ecx
  427ddf:	jmp    0x427df1
  427de1:	add    ecx,DWORD PTR [ebp+0x8]
  427de4:	mov    edx,DWORD PTR [ebp-0x4]
  427de7:	add    edx,DWORD PTR [ebp+0xc]
  427dea:	mov    dl,BYTE PTR [edx]
  427dec:	mov    BYTE PTR [ecx],dl
  427dee:	inc    DWORD PTR [ebp-0x4]
  427df1:	mov    ecx,DWORD PTR [ebp-0x18]
  427df4:	mov    edx,DWORD PTR [ebp+0x10]
  427df7:	xor    ecx,eax
  427df9:	add    ecx,esi
  427dfb:	imul   ecx,edx
  427dfe:	mov    edx,DWORD PTR [ebp-0x8]
  427e01:	mov    edi,DWORD PTR [ebp-0x4]
  427e04:	xor    edx,eax
  427e06:	lea    edx,[edx+edi*1+0x3272f1]
  427e0d:	cmp    edx,ecx
  427e0f:	jb     0x427d55
  427e15:	pop    edi
  427e16:	pop    esi
  427e17:	leave  
  427e18:	ret    0xc
  427e1b:	push   ebp
  427e1c:	mov    ebp,esp
  427e1e:	sub    esp,0xc
  427e21:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427e28:	push   esi
  427e29:	mov    esi,eax
  427e2b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427e32:	mov    edx,DWORD PTR [ebp-0x4]
  427e35:	mov    eax,0x75108aa
  427e3a:	xor    edx,eax
  427e3c:	mov    ecx,0x3272f1
  427e41:	add    edx,ecx
  427e43:	cmp    esi,edx
  427e45:	je     0x427e87
  427e47:	push   ebx
  427e48:	push   edi
  427e49:	mov    edx,DWORD PTR [ebp-0x8]
  427e4c:	mov    ebx,DWORD PTR [ebp+0x8]
  427e4f:	xor    edx,eax
  427e51:	mov    edi,0xffcd8d0f
  427e56:	sub    edi,edx
  427e58:	add    esi,edi
  427e5a:	lea    edx,[esi-0x3272f1]
  427e60:	xor    edx,eax
  427e62:	mov    DWORD PTR [ebp-0xc],edx
  427e65:	mov    edx,DWORD PTR [ebp-0x4]
  427e68:	mov    edi,DWORD PTR [ebp-0xc]
  427e6b:	xor    dl,0xaa
  427e6e:	sub    dl,0xf
  427e71:	xor    edi,eax
  427e73:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427e7a:	mov    edx,DWORD PTR [ebp-0x4]
  427e7d:	xor    edx,eax
  427e7f:	add    edx,ecx
  427e81:	cmp    esi,edx
  427e83:	jne    0x427e49
  427e85:	pop    edi
  427e86:	pop    ebx
  427e87:	pop    esi
  427e88:	leave  
  427e89:	ret    0x4
  427e8c:	push   ebp
  427e8d:	mov    ebp,esp
  427e8f:	sub    esp,0x21c
  427e95:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427e9c:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427ea3:	mov    eax,DWORD PTR [ebp+0x10]
  427ea6:	mov    eax,DWORD PTR [ebp-0x4]
  427ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  427eac:	push   esi
  427ead:	push   edi
  427eae:	mov    edi,0x75108aa
  427eb3:	xor    eax,edi
  427eb5:	mov    esi,0x3272f1
  427eba:	add    eax,esi
  427ebc:	cmp    eax,ecx
  427ebe:	mov    eax,DWORD PTR [ebp-0x4]
  427ec1:	jne    0x427ecc
  427ec3:	xor    eax,edi
  427ec5:	add    eax,esi
  427ec7:	jmp    0x427f78
  427ecc:	mov    ecx,DWORD PTR [ebp+0xc]
  427ecf:	xor    eax,edi
  427ed1:	add    eax,esi
  427ed3:	cmp    eax,ecx
  427ed5:	jne    0x427edc
  427ed7:	mov    eax,DWORD PTR [ebp-0x4]
  427eda:	jmp    0x427ec3
  427edc:	lea    eax,[ebp-0x21c]
  427ee2:	mov    DWORD PTR [ebp-0x8],eax
  427ee5:	mov    eax,DWORD PTR [ebp+0xc]
  427ee8:	mov    DWORD PTR [ebp-0x10],eax
  427eeb:	mov    eax,DWORD PTR [ebp-0x4]
  427eee:	xor    eax,edi
  427ef0:	add    eax,esi
  427ef2:	mov    DWORD PTR [ebp+0x10],eax
  427ef5:	mov    eax,DWORD PTR [ebp+0xc]
  427ef8:	push   ebx
  427ef9:	call   0x427c23
  427efe:	mov    ebx,eax
  427f00:	mov    eax,DWORD PTR [ebp+0x8]
  427f03:	mov    eax,DWORD PTR [eax+0x14]
  427f06:	jmp    0x427f60
  427f08:	mov    eax,DWORD PTR [ebp+0xc]
  427f0b:	sub    eax,0x8
  427f0e:	mov    DWORD PTR [ebp-0xc],eax
  427f11:	mov    eax,DWORD PTR [ebp-0xc]
  427f14:	mov    eax,DWORD PTR [eax+0x28]
  427f17:	call   0x427b0d
  427f1c:	mov    DWORD PTR [ebp+0x10],eax
  427f1f:	push   DWORD PTR [ebp+0x10]
  427f22:	mov    edx,DWORD PTR [ebp-0x8]
  427f25:	call   0x427cb2
  427f2a:	mov    eax,DWORD PTR [ebp-0x4]
  427f2d:	xor    eax,edi
  427f2f:	add    eax,esi
  427f31:	cmp    eax,ebx
  427f33:	jne    0x427f3d
  427f35:	mov    eax,DWORD PTR [ebp-0x8]
  427f38:	call   0x427b9b
  427f3d:	mov    eax,DWORD PTR [ebp-0x14]
  427f40:	xor    eax,edi
  427f42:	add    eax,esi
  427f44:	push   eax
  427f45:	push   DWORD PTR [ebp-0x10]
  427f48:	mov    eax,DWORD PTR [ebp-0x8]
  427f4b:	call   0x4278c7
  427f50:	mov    ecx,DWORD PTR [ebp-0x4]
  427f53:	xor    ecx,edi
  427f55:	add    ecx,esi
  427f57:	cmp    eax,ecx
  427f59:	je     0x427f7e
  427f5b:	mov    eax,DWORD PTR [ebp+0xc]
  427f5e:	mov    eax,DWORD PTR [eax]
  427f60:	mov    DWORD PTR [ebp+0xc],eax
  427f63:	mov    eax,DWORD PTR [ebp+0x8]
  427f66:	mov    ecx,DWORD PTR [ebp+0xc]
  427f69:	add    eax,0x14
  427f6c:	cmp    ecx,eax
  427f6e:	jne    0x427f08
  427f70:	mov    eax,DWORD PTR [ebp-0x4]
  427f73:	xor    eax,edi
  427f75:	add    eax,esi
  427f77:	pop    ebx
  427f78:	pop    edi
  427f79:	pop    esi
  427f7a:	leave  
  427f7b:	ret    0xc
  427f7e:	mov    eax,DWORD PTR [ebp-0xc]
  427f81:	mov    eax,DWORD PTR [eax+0x18]
  427f84:	jmp    0x427f77
  427f86:	push   ebp
  427f87:	mov    ebp,esp
  427f89:	mov    eax,DWORD PTR [ebp+0xc]
  427f8c:	sub    esp,0x10
  427f8f:	cmp    DWORD PTR [ebp+0x8],0x0
  427f93:	push   ebx
  427f94:	push   esi
  427f95:	push   edi
  427f96:	je     0x42804b
  427f9c:	test   eax,eax
  427f9e:	je     0x42804b
  427fa4:	movzx  eax,WORD PTR [eax+0x20]
  427fa8:	mov    ecx,eax
  427faa:	mov    DWORD PTR [ebp-0x10],eax
  427fad:	xor    edx,edx
  427faf:	and    DWORD PTR [ebp-0x8],edx
  427fb2:	mov    eax,0x8a98
  427fb7:	xor    ecx,eax
  427fb9:	add    ecx,0x3b5a
  427fbf:	mov    DWORD PTR [ebp-0xc],ecx
  427fc2:	and    DWORD PTR [ebp-0x4],0x0
  427fc6:	xor    ecx,ecx
  427fc8:	push   0x7d
  427fca:	pop    edi
  427fcb:	cmp    cx,WORD PTR [ebp-0xc]
  427fcf:	jae    0x428035
  427fd1:	lea    esi,[edx-0x3b5a]
  427fd7:	xor    esi,eax
  427fd9:	movzx  ecx,WORD PTR [ebp-0x4]
  427fdd:	mov    ebx,DWORD PTR [ebp+0xc]
  427fe0:	lea    ecx,[ebx+ecx*4]
  427fe3:	cmp    WORD PTR [ecx+0x2],si
  427fe7:	jne    0x428020
  427fe9:	movzx  ecx,WORD PTR [ecx]
  427fec:	mov    edi,0x4e3e
  427ff1:	cmp    cx,di
  427ff4:	jne    0x428002
  427ff6:	mov    ebx,DWORD PTR [ebp+0x8]
  427ff9:	movzx  edi,dx
  427ffc:	cmp    BYTE PTR [edi+ebx*1],0x0
  428000:	je     0x42802f
  428002:	mov    ebx,DWORD PTR [ebp+0x8]
  428005:	movzx  edi,dx
  428008:	movsx  di,BYTE PTR [edi+ebx*1]
  42800d:	mov    ebx,0x3b5a
  428012:	sub    di,bx
  428015:	xor    di,ax
  428018:	cmp    cx,di
  42801b:	je     0x42802f
  42801d:	push   0xffffff83
  42801f:	pop    edi
  428020:	inc    DWORD PTR [ebp-0x4]
  428023:	mov    cx,WORD PTR [ebp-0xc]
  428027:	cmp    WORD PTR [ebp-0x4],cx
  42802b:	jb     0x427fd9
  42802d:	jmp    0x428035
  42802f:	inc    DWORD PTR [ebp-0x8]
  428032:	push   0x7c
  428034:	pop    edi
  428035:	mov    esi,DWORD PTR [ebp+0x8]
  428038:	movzx  ecx,dx
  42803b:	cmp    BYTE PTR [ecx+esi*1],0x0
  42803f:	je     0x428054
  428041:	inc    edx
  428042:	cmp    edi,0xffffff83
  428045:	jne    0x427fc2
  42804b:	xor    eax,eax
  42804d:	pop    edi
  42804e:	pop    esi
  42804f:	pop    ebx
  428050:	leave  
  428051:	ret    0x8
  428054:	mov    ecx,DWORD PTR [ebp-0x8]
  428057:	add    ecx,0xffffc4a6
  42805d:	xor    cx,ax
  428060:	xor    eax,eax
  428062:	cmp    cx,WORD PTR [ebp-0x10]
  428066:	sete   al
  428069:	jmp    0x42804d
  42806b:	push   ebp
  42806c:	mov    ebp,esp
  42806e:	sub    esp,0x50
  428071:	push   edi
  428072:	mov    edi,eax
  428074:	mov    eax,DWORD PTR [edi+0x1a8]
  42807a:	cmp    DWORD PTR [eax],0x0
  42807d:	jne    0x428086
  42807f:	xor    eax,eax
  428081:	jmp    0x4281b7
  428086:	push   DWORD PTR [ebp+0x8]
  428089:	push   0x2c
  42808b:	pop    eax
  42808c:	call   0x427e1b
  428091:	mov    edx,DWORD PTR [edi+0x1ac]
  428097:	lea    eax,[edi+0x22]
  42809a:	mov    DWORD PTR [ebp-0x4c],eax
  42809d:	lea    eax,[edi+0x44]
  4280a0:	mov    DWORD PTR [ebp-0x48],eax
  4280a3:	lea    eax,[edi+0x66]
  4280a6:	mov    DWORD PTR [ebp-0x44],eax
  4280a9:	lea    eax,[edi+0x88]
  4280af:	mov    DWORD PTR [ebp-0x40],eax
  4280b2:	lea    eax,[edi+0xaa]
  4280b8:	mov    DWORD PTR [ebp-0x3c],eax
  4280bb:	lea    eax,[edi+0xcc]
  4280c1:	mov    DWORD PTR [ebp-0x38],eax
  4280c4:	lea    eax,[edi+0xee]
  4280ca:	mov    DWORD PTR [ebp-0x34],eax
  4280cd:	lea    eax,[edi+0x110]
  4280d3:	mov    DWORD PTR [ebp-0x30],eax
  4280d6:	lea    eax,[edi+0x132]
  4280dc:	mov    DWORD PTR [ebp-0x2c],eax
  4280df:	lea    eax,[edi+0x154]
  4280e5:	push   edi
  4280e6:	mov    DWORD PTR [ebp-0x50],edi
  4280e9:	mov    DWORD PTR [ebp-0x28],eax
  4280ec:	call   0x4281eb
  4280f1:	push   eax
  4280f2:	mov    eax,DWORD PTR [edi+0x1a8]
  4280f8:	push   DWORD PTR [eax]
  4280fa:	call   0x427e8c
  4280ff:	mov    DWORD PTR [ebp-0x10],eax
  428102:	test   eax,eax
  428104:	je     0x4281b7
  42810a:	mov    ecx,DWORD PTR [eax+0x3c]
  42810d:	push   ebx
  42810e:	push   esi
  42810f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428113:	add    esi,eax
  428115:	mov    edi,DWORD PTR [esi+0x24]
  428118:	mov    ecx,DWORD PTR [esi+0x1c]
  42811b:	mov    edx,DWORD PTR [esi+0x20]
  42811e:	mov    ebx,DWORD PTR [esi+0x18]
  428121:	add    edi,eax
  428123:	mov    DWORD PTR [ebp-0x20],edi
  428126:	mov    edi,DWORD PTR [esi+0x14]
  428129:	add    ecx,eax
  42812b:	add    edx,eax
  42812d:	mov    DWORD PTR [ebp-0xc],ecx
  428130:	mov    DWORD PTR [ebp-0x1c],edx
  428133:	mov    DWORD PTR [ebp-0x8],edi
  428136:	cmp    edi,ebx
  428138:	ja     0x42813d
  42813a:	mov    DWORD PTR [ebp-0x8],ebx
  42813d:	xor    ebx,ebx
  42813f:	mov    DWORD PTR [ebp-0x18],ebx
  428142:	cmp    DWORD PTR [ebp-0x8],ebx
  428145:	jbe    0x4281b5
  428147:	jmp    0x42814c
  428149:	mov    edx,DWORD PTR [ebp-0x1c]
  42814c:	mov    edi,DWORD PTR [ebp-0x20]
  42814f:	movzx  edi,WORD PTR [edi+ebx*2]
  428153:	cmp    ebx,DWORD PTR [esi+0x18]
  428156:	jae    0x4281b5
  428158:	cmp    edi,DWORD PTR [esi+0x14]
  42815b:	jae    0x4281b5
  42815d:	mov    ebx,DWORD PTR [edx+ebx*4]
  428160:	mov    edx,DWORD PTR [ebp+0x8]
  428163:	mov    edi,DWORD PTR [ecx+edi*4]
  428166:	mov    DWORD PTR [ebp-0x4],edx
  428169:	lea    edx,[ebp-0x50]
  42816c:	add    ebx,eax
  42816e:	add    edi,eax
  428170:	sub    edx,DWORD PTR [ebp+0x8]
  428173:	mov    DWORD PTR [ebp-0x14],0xb
  42817a:	mov    DWORD PTR [ebp-0x24],edx
  42817d:	mov    edx,DWORD PTR [ebp-0x4]
  428180:	cmp    DWORD PTR [edx],0x0
  428183:	jne    0x4281a0
  428185:	mov    eax,DWORD PTR [ebp-0x24]
  428188:	push   DWORD PTR [eax+edx*1]
  42818b:	push   ebx
  42818c:	call   0x427f86
  428191:	mov    ecx,DWORD PTR [ebp-0xc]
  428194:	test   eax,eax
  428196:	je     0x42819d
  428198:	mov    eax,DWORD PTR [ebp-0x4]
  42819b:	mov    DWORD PTR [eax],edi
  42819d:	mov    eax,DWORD PTR [ebp-0x10]
  4281a0:	add    DWORD PTR [ebp-0x4],0x4
  4281a4:	dec    DWORD PTR [ebp-0x14]
  4281a7:	jne    0x42817d
  4281a9:	mov    ebx,DWORD PTR [ebp-0x18]
  4281ac:	inc    ebx
  4281ad:	mov    DWORD PTR [ebp-0x18],ebx
  4281b0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4281b3:	jb     0x428149
  4281b5:	pop    esi
  4281b6:	pop    ebx
  4281b7:	pop    edi
  4281b8:	leave  
  4281b9:	ret    0x4
  4281bc:	push   ebp
  4281bd:	mov    ebp,esp
  4281bf:	mov    eax,DWORD PTR [ebp+0x8]
  4281c2:	push   esi
  4281c3:	push   DWORD PTR [eax+0x1e0]
  4281c9:	lea    esi,[eax+0x198]
  4281cf:	mov    eax,DWORD PTR [ebp+0x8]
  4281d2:	call   0x42806b
  4281d7:	mov    ecx,DWORD PTR [esi]
  4281d9:	mov    DWORD PTR [ecx],eax
  4281db:	mov    eax,DWORD PTR [esi]
  4281dd:	xor    ecx,ecx
  4281df:	cmp    DWORD PTR [eax],ecx
  4281e1:	pop    esi
  4281e2:	setne  cl
  4281e5:	mov    eax,ecx
  4281e7:	pop    ebp
  4281e8:	ret    0x4
  4281eb:	mov    ecx,DWORD PTR [edi+0x188]
  4281f1:	push   ebx
  4281f2:	jmp    0x428207
  4281f4:	xor    eax,0x8a98
  4281f9:	add    eax,0x3b5a
  4281fe:	mov    WORD PTR [ecx],ax
  428201:	add    ecx,0x2
  428204:	add    edx,0x2
  428207:	movzx  eax,WORD PTR [edx]
  42820a:	mov    ebx,0x4e3e
  42820f:	cmp    ax,bx
  428212:	jne    0x4281f4
  428214:	xor    eax,eax
  428216:	mov    WORD PTR [ecx],ax
  428219:	mov    eax,DWORD PTR [edi+0x188]
  42821f:	pop    ebx
  428220:	ret    
  428221:	push   edi
  428222:	mov    edi,eax
  428224:	mov    eax,DWORD PTR [esi+0x188]
  42822a:	shl    edi,0x6
  42822d:	add    eax,edi
  42822f:	jmp    0x42823a
  428231:	xor    cl,0x7c
  428234:	inc    cl
  428236:	mov    BYTE PTR [eax],cl
  428238:	inc    eax
  428239:	inc    edx
  42823a:	mov    cl,BYTE PTR [edx]
  42823c:	cmp    cl,0x83
  42823f:	jne    0x428231
  428241:	mov    BYTE PTR [eax],0x0
  428244:	mov    eax,DWORD PTR [esi+0x188]
  42824a:	add    eax,edi
  42824c:	pop    edi
  42824d:	ret    
  42824e:	push   ebp
  42824f:	mov    ebp,esp
  428251:	sub    esp,0x14
  428254:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42825b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428262:	mov    eax,DWORD PTR [ebx]
  428264:	mov    DWORD PTR [ebp-0x8],eax
  428267:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42826e:	push   esi
  42826f:	push   edi
  428270:	mov    DWORD PTR [ebp-0x14],0xead71885
  428277:	mov    edi,DWORD PTR [ebp-0x4]
  42827a:	mov    ecx,DWORD PTR [ebp-0x10]
  42827d:	mov    eax,0x75108aa
  428282:	xor    edi,eax
  428284:	mov    edx,0x3272f1
  428289:	xor    ecx,eax
  42828b:	add    edi,edx
  42828d:	add    ecx,edx
  42828f:	imul   edi,ecx
  428292:	jmp    0x4282da
  428294:	mov    ecx,DWORD PTR [ebp-0x8]
  428297:	mov    esi,DWORD PTR [ebp-0x4]
  42829a:	xor    ecx,eax
  42829c:	xor    esi,eax
  42829e:	add    ecx,edx
  4282a0:	add    esi,edx
  4282a2:	test   esi,ecx
  4282a4:	mov    esi,DWORD PTR [ebp-0x8]
  4282a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4282aa:	je     0x4282c1
  4282ac:	xor    ecx,eax
  4282ae:	xor    esi,eax
  4282b0:	add    ecx,edx
  4282b2:	add    esi,edx
  4282b4:	shr    esi,cl
  4282b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4282b9:	xor    ecx,eax
  4282bb:	add    ecx,edx
  4282bd:	xor    esi,ecx
  4282bf:	jmp    0x4282cb
  4282c1:	xor    esi,eax
  4282c3:	xor    ecx,eax
  4282c5:	add    esi,edx
  4282c7:	add    ecx,edx
  4282c9:	shr    esi,cl
  4282cb:	mov    DWORD PTR [ebp-0x8],esi
  4282ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4282d1:	xor    ecx,eax
  4282d3:	lea    edi,[edi+ecx*1+0x3272f1]
  4282da:	mov    ecx,DWORD PTR [ebp-0xc]
  4282dd:	mov    esi,DWORD PTR [ebp-0x4]
  4282e0:	xor    esi,eax
  4282e2:	xor    ecx,eax
  4282e4:	sub    ecx,esi
  4282e6:	cmp    edi,ecx
  4282e8:	jbe    0x428294
  4282ea:	mov    eax,DWORD PTR [ebp-0x8]
  4282ed:	pop    edi
  4282ee:	mov    DWORD PTR [ebx],eax
  4282f0:	mov    eax,DWORD PTR [ebp-0x8]
  4282f3:	pop    esi
  4282f4:	leave  
  4282f5:	ret    
  4282f6:	push   ebp
  4282f7:	mov    ebp,esp
  4282f9:	sub    esp,0x38
  4282fc:	push   ebx
  4282fd:	mov    ebx,0xf89c85a5
  428302:	mov    DWORD PTR [ebp-0x4],ebx
  428305:	lea    ecx,[ebx+0x15]
  428308:	mov    DWORD PTR [ebp-0x24],ecx
  42830b:	mov    eax,DWORD PTR [ebp-0x4]
  42830e:	mov    edx,DWORD PTR [ebp+0x8]
  428311:	push   esi
  428312:	mov    esi,0x75108aa
  428317:	xor    eax,esi
  428319:	push   edi
  42831a:	mov    edi,0x3272f1
  42831f:	add    eax,edi
  428321:	cmp    edx,eax
  428323:	mov    eax,DWORD PTR [ebp-0x4]
  428326:	je     0x42848a
  42832c:	mov    edx,DWORD PTR [ebp+0xc]
  42832f:	xor    eax,esi
  428331:	add    eax,edi
  428333:	cmp    edx,eax
  428335:	je     0x428487
  42833b:	mov    eax,DWORD PTR [ebp+0x10]
  42833e:	mov    edx,DWORD PTR [ebp+0xc]
  428341:	mov    DWORD PTR [ebp-0x14],eax
  428344:	mov    eax,DWORD PTR [ebp+0x8]
  428347:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42834e:	mov    DWORD PTR [ebp-0xc],eax
  428351:	lea    eax,[ebx+0x16]
  428354:	mov    DWORD PTR [ebp-0x1c],eax
  428357:	mov    DWORD PTR [ebp-0x10],ebx
  42835a:	mov    DWORD PTR [ebp+0xc],ecx
  42835d:	mov    DWORD PTR [ebp+0x10],eax
  428360:	mov    eax,DWORD PTR [ebp+0xc]
  428363:	xor    eax,esi
  428365:	mov    DWORD PTR [ebp-0x20],edx
  428368:	sub    edx,eax
  42836a:	sub    edx,edi
  42836c:	mov    DWORD PTR [ebp+0x8],edx
  42836f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428376:	jmp    0x428477
  42837b:	mov    eax,DWORD PTR [ebp+0xc]
  42837e:	mov    ecx,DWORD PTR [ebp+0xc]
  428381:	xor    eax,esi
  428383:	xor    ecx,esi
  428385:	lea    ecx,[eax+ecx*1+0x64e5e2]
  42838c:	mov    eax,DWORD PTR [ebp+0x8]
  42838f:	xor    edx,edx
  428391:	div    ecx
  428393:	mov    eax,DWORD PTR [ebp+0x10]
  428396:	mov    ecx,DWORD PTR [ebp+0xc]
  428399:	xor    eax,esi
  42839b:	xor    ecx,esi
  42839d:	sub    eax,ecx
  42839f:	cmp    edx,eax
  4283a1:	jne    0x428436
  4283a7:	mov    eax,DWORD PTR [ebp+0x8]
  4283aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4283ad:	mov    dl,BYTE PTR [eax+ecx*1]
  4283b0:	mov    eax,DWORD PTR [ebp-0x10]
  4283b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4283b6:	xor    eax,esi
  4283b8:	xor    ecx,esi
  4283ba:	add    eax,edi
  4283bc:	add    ecx,edi
  4283be:	cmp    eax,ecx
  4283c0:	jae    0x428408
  4283c2:	lea    ecx,[eax-0x3272f1]
  4283c8:	mov    DWORD PTR [ebp-0x4],ecx
  4283cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4283ce:	xor    ebx,esi
  4283d0:	add    ebx,0x7f55d8fb
  4283d6:	lea    ecx,[ebp+eax*4-0x38]
  4283da:	mov    DWORD PTR [ecx],ebx
  4283dc:	mov    ebx,DWORD PTR [ecx]
  4283de:	cmp    ebx,0x244ecb98
  4283e4:	jbe    0x4283ee
  4283e6:	add    DWORD PTR [ecx],0x405fcd9
  4283ec:	jmp    0x4283f4
  4283ee:	add    DWORD PTR [ecx],0xfdaf4327
  4283f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4283f7:	xor    ecx,esi
  4283f9:	inc    eax
  4283fa:	inc    DWORD PTR [ebp-0x4]
  4283fd:	add    ecx,edi
  4283ff:	cmp    eax,ecx
  428401:	jb     0x4283cb
  428403:	mov    ebx,0xf89c85a5
  428408:	cmp    DWORD PTR [ebp-0x14],0x0
  42840c:	jne    0x428415
  42840e:	xor    dl,0x7c
  428411:	inc    dl
  428413:	jmp    0x42842b
  428415:	mov    eax,DWORD PTR [ebp-0x18]
  428418:	xor    al,0xaa
  42841a:	mov    cl,0xf
  42841c:	sub    cl,al
  42841e:	add    dl,cl
  428420:	mov    ecx,DWORD PTR [ebp-0x1c]
  428423:	xor    cl,0xaa
  428426:	sub    cl,0xf
  428429:	ror    dl,cl
  42842b:	xor    eax,eax
  42842d:	mov    eax,DWORD PTR [ebp+0x8]
  428430:	mov    ecx,DWORD PTR [ebp-0xc]
  428433:	mov    BYTE PTR [eax+ecx*1],dl
  428436:	mov    eax,DWORD PTR [ebp+0x8]
  428439:	mov    ecx,DWORD PTR [ebp-0x10]
  42843c:	sub    eax,edi
  42843e:	xor    eax,esi
  428440:	cmp    eax,ecx
  428442:	jne    0x428465
  428444:	mov    eax,DWORD PTR [ebp+0x10]
  428447:	mov    ecx,DWORD PTR [ebp+0xc]
  42844a:	xor    eax,esi
  42844c:	xor    ecx,esi
  42844e:	sub    eax,ecx
  428450:	mov    ecx,DWORD PTR [ebp-0x20]
  428453:	sub    eax,edi
  428455:	xor    eax,esi
  428457:	mov    DWORD PTR [ebp+0x10],eax
  42845a:	mov    eax,DWORD PTR [ebp+0xc]
  42845d:	xor    eax,esi
  42845f:	sub    ecx,eax
  428461:	sub    ecx,edi
  428463:	jmp    0x428474
  428465:	mov    eax,DWORD PTR [ebp+0xc]
  428468:	xor    eax,esi
  42846a:	mov    ecx,0xffcd8d0f
  42846f:	sub    ecx,eax
  428471:	add    ecx,DWORD PTR [ebp+0x8]
  428474:	mov    DWORD PTR [ebp+0x8],ecx
  428477:	mov    eax,DWORD PTR [ebp+0x10]
  42847a:	cmp    eax,ebx
  42847c:	jne    0x42837b
  428482:	mov    eax,DWORD PTR [ebp-0x24]
  428485:	jmp    0x42848a
  428487:	mov    eax,DWORD PTR [ebp-0x4]
  42848a:	xor    eax,esi
  42848c:	add    eax,edi
  42848e:	pop    edi
  42848f:	pop    esi
  428490:	pop    ebx
  428491:	leave  
  428492:	ret    0xc
  428495:	push   ebp
  428496:	mov    ebp,esp
  428498:	sub    esp,0x420
  42849e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4284a5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4284ac:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4284b3:	push   ebx
  4284b4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4284bb:	mov    eax,DWORD PTR [ebp-0x14]
  4284be:	push   esi
  4284bf:	mov    esi,0x75108aa
  4284c4:	push   edi
  4284c5:	xor    eax,esi
  4284c7:	mov    edi,0x3272f1
  4284cc:	add    eax,edi
  4284ce:	mov    DWORD PTR [ebp-0x8],eax
  4284d1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4284d8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4284df:	mov    DWORD PTR [ebp-0x10],0x8
  4284e6:	mov    ecx,ecx
  4284e8:	mov    eax,DWORD PTR [ebp-0xc]
  4284eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4284ee:	xor    eax,esi
  4284f0:	xor    ecx,esi
  4284f2:	add    eax,edi
  4284f4:	add    ecx,edi
  4284f6:	imul   eax,ecx
  4284f9:	jmp    0x42852c
  4284fb:	mov    eax,DWORD PTR [ebp-0x4]
  4284fe:	sub    eax,edi
  428500:	xor    eax,esi
  428502:	mov    DWORD PTR [ebp-0x8],eax
  428505:	lea    ebx,[ebp-0x8]
  428508:	call   0x42824e
  42850d:	mov    DWORD PTR [ebp-0x8],eax
  428510:	mov    eax,DWORD PTR [ebp-0x8]
  428513:	mov    ecx,DWORD PTR [ebp-0x4]
  428516:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42851d:	mov    eax,DWORD PTR [ebp-0xc]
  428520:	mov    ecx,DWORD PTR [ebp-0x4]
  428523:	xor    eax,esi
  428525:	lea    eax,[eax+ecx*1+0x3272f1]
  42852c:	mov    DWORD PTR [ebp-0x4],eax
  42852f:	mov    eax,DWORD PTR [ebp-0x18]
  428532:	mov    ecx,DWORD PTR [ebp-0xc]
  428535:	xor    ecx,esi
  428537:	xor    eax,esi
  428539:	sub    eax,ecx
  42853b:	mov    ecx,DWORD PTR [ebp-0x4]
  42853e:	cmp    ecx,eax
  428540:	jbe    0x4284fb
  428542:	mov    eax,DWORD PTR [ebp-0x1c]
  428545:	xor    eax,esi
  428547:	add    eax,edi
  428549:	mov    DWORD PTR [ebp-0x8],eax
  42854c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428553:	mov    ebx,ebx
  428555:	jmp    0x4285b8
  428557:	mov    ecx,DWORD PTR [ebp-0x20]
  42855a:	mov    eax,DWORD PTR [ebp-0x8]
  42855d:	xor    ecx,esi
  42855f:	add    ecx,edi
  428561:	shr    eax,cl
  428563:	mov    DWORD PTR [ebp-0x4],eax
  428566:	mov    eax,DWORD PTR [ebp+0x8]
  428569:	mov    cl,BYTE PTR [eax]
  42856b:	mov    BYTE PTR [ebp+0xb],cl
  42856e:	mov    cl,BYTE PTR [ebp+0xb]
  428571:	mov    edx,DWORD PTR [ebp-0x8]
  428574:	movzx  ecx,cl
  428577:	xor    ecx,edx
  428579:	mov    DWORD PTR [ebp+0x8],ecx
  42857c:	mov    ecx,DWORD PTR [ebp-0x18]
  42857f:	mov    edx,DWORD PTR [ebp+0x8]
  428582:	xor    ecx,esi
  428584:	add    ecx,edi
  428586:	and    ecx,edx
  428588:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42858f:	mov    edx,DWORD PTR [ebp-0x4]
  428592:	xor    ecx,edx
  428594:	mov    DWORD PTR [ebp-0x8],ecx
  428597:	mov    ecx,DWORD PTR [ebp-0xc]
  42859a:	xor    ecx,esi
  42859c:	lea    eax,[eax+ecx*1+0x3272f1]
  4285a3:	mov    DWORD PTR [ebp+0x8],eax
  4285a6:	mov    eax,DWORD PTR [ebp-0xc]
  4285a9:	xor    eax,esi
  4285ab:	mov    ecx,0xffcd8d0f
  4285b0:	sub    ecx,eax
  4285b2:	add    ecx,DWORD PTR [ebp-0x10]
  4285b5:	mov    DWORD PTR [ebp-0x10],ecx
  4285b8:	mov    eax,DWORD PTR [ebp-0x14]
  4285bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4285be:	xor    eax,esi
  4285c0:	add    eax,edi
  4285c2:	cmp    ecx,eax
  4285c4:	jne    0x428557
  4285c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4285c9:	mov    ecx,DWORD PTR [ebp-0x8]
  4285cc:	xor    eax,esi
  4285ce:	add    eax,edi
  4285d0:	pop    edi
  4285d1:	pop    esi
  4285d2:	xor    eax,ecx
  4285d4:	pop    ebx
  4285d5:	leave  
  4285d6:	ret    0x4
  4285d9:	push   ebp
  4285da:	mov    ebp,esp
  4285dc:	mov    eax,DWORD PTR [ebp+0x1c]
  4285df:	mov    ecx,DWORD PTR [ebp+0x8]
  4285e2:	mov    edx,DWORD PTR [ebp+0x10]
  4285e5:	mov    eax,DWORD PTR [eax+0x190]
  4285eb:	mov    eax,DWORD PTR [eax]
  4285ed:	sub    esp,0x64
  4285f0:	push   ebx
  4285f1:	push   esi
  4285f2:	push   edi
  4285f3:	mov    edi,0x75108aa
  4285f8:	xor    ecx,edi
  4285fa:	mov    ebx,0x3272f1
  4285ff:	add    ecx,ebx
  428601:	cmp    ecx,edx
  428603:	jne    0x428614
  428605:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42860f:	jmp    0x428b10
  428614:	mov    ecx,DWORD PTR [ebp+0x8]
  428617:	mov    esi,DWORD PTR [ebp+0x14]
  42861a:	mov    edx,DWORD PTR [esi]
  42861c:	xor    ecx,edi
  42861e:	add    ecx,ebx
  428620:	cmp    edx,ecx
  428622:	je     0x428acb
  428628:	mov    ecx,DWORD PTR [ebp+0x1c]
  42862b:	mov    DWORD PTR [ebp-0x1c],eax
  42862e:	mov    DWORD PTR [ebp+0x1c],ecx
  428631:	mov    ecx,DWORD PTR [ebp+0x18]
  428634:	mov    eax,DWORD PTR [esi]
  428636:	mov    DWORD PTR [ebp-0x20],eax
  428639:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428640:	mov    edx,0xf89c85ba
  428645:	mov    DWORD PTR [ebp-0x8],edx
  428648:	mov    eax,DWORD PTR [ebp+0x1c]
  42864b:	mov    DWORD PTR [ebp+0x1c],eax
  42864e:	mov    eax,DWORD PTR [ebp+0x1c]
  428651:	mov    eax,DWORD PTR [eax+0x190]
  428657:	mov    eax,DWORD PTR [eax]
  428659:	mov    DWORD PTR [ebp-0x24],ecx
  42865c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42865f:	mov    ecx,DWORD PTR [ecx+0x190]
  428665:	mov    ecx,DWORD PTR [ecx]
  428667:	add    ecx,DWORD PTR [eax+0x3c]
  42866a:	mov    DWORD PTR [ebp+0x10],ecx
  42866d:	mov    eax,DWORD PTR [ebp+0x8]
  428670:	xor    eax,edi
  428672:	add    eax,ebx
  428674:	mov    DWORD PTR [ebp-0x4],eax
  428677:	mov    eax,DWORD PTR [ebp+0x8]
  42867a:	xor    eax,edi
  42867c:	add    eax,ebx
  42867e:	mov    DWORD PTR [ebp+0x18],eax
  428681:	mov    eax,DWORD PTR [ebp+0x10]
  428684:	mov    eax,DWORD PTR [eax+0x50]
  428687:	sub    eax,0xc
  42868a:	mov    DWORD PTR [ebp-0x28],eax
  42868d:	mov    eax,DWORD PTR [ebp+0x10]
  428690:	mov    eax,DWORD PTR [eax+0x38]
  428693:	mov    ecx,DWORD PTR [ebp+0x10]
  428696:	dec    eax
  428697:	test   DWORD PTR [ecx+0x54],eax
  42869a:	mov    eax,DWORD PTR [ebp+0x10]
  42869d:	je     0x4286b7
  42869f:	mov    eax,DWORD PTR [eax+0x38]
  4286a2:	mov    ecx,DWORD PTR [ebp+0x10]
  4286a5:	mov    ecx,DWORD PTR [ecx+0x54]
  4286a8:	dec    eax
  4286a9:	not    eax
  4286ab:	and    ecx,eax
  4286ad:	mov    eax,DWORD PTR [ebp+0x10]
  4286b0:	mov    eax,DWORD PTR [eax+0x38]
  4286b3:	add    eax,ecx
  4286b5:	jmp    0x4286ba
  4286b7:	mov    eax,DWORD PTR [eax+0x54]
  4286ba:	mov    DWORD PTR [ebp+0x1c],eax
  4286bd:	mov    eax,DWORD PTR [ebp+0x8]
  4286c0:	xor    eax,edi
  4286c2:	add    eax,ebx
  4286c4:	mov    DWORD PTR [ebp+0x18],eax
  4286c7:	mov    eax,DWORD PTR [ebp+0x8]
  4286ca:	xor    eax,edi
  4286cc:	add    eax,ebx
  4286ce:	mov    DWORD PTR [ebp+0x18],eax
  4286d1:	mov    eax,DWORD PTR [ebp+0x8]
  4286d4:	mov    ecx,DWORD PTR [ebp-0x24]
  4286d7:	xor    eax,edi
  4286d9:	add    eax,ebx
  4286db:	mov    DWORD PTR [ecx],eax
  4286dd:	mov    DWORD PTR [ebp+0x18],edx
  4286e0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4286e7:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  4286ee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  4286f5:	mov    eax,DWORD PTR [ebp-0x8]
  4286f8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4286fb:	xor    eax,edi
  4286fd:	add    eax,ebx
  4286ff:	imul   eax,ecx
  428702:	mov    ecx,DWORD PTR [ebp+0x8]
  428705:	mov    edx,DWORD PTR [ebp-0x28]
  428708:	xor    ecx,edi
  42870a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428711:	cmp    eax,ecx
  428713:	jae    0x428ac4
  428719:	mov    eax,DWORD PTR [ebp+0x8]
  42871c:	xor    eax,edi
  42871e:	add    eax,ebx
  428720:	mov    DWORD PTR [ebp+0x18],eax
  428723:	mov    eax,DWORD PTR [ebp+0x1c]
  428726:	add    eax,DWORD PTR [ebp-0x1c]
  428729:	mov    DWORD PTR [ebp-0x4],eax
  42872c:	push   DWORD PTR [ebp-0x4]
  42872f:	mov    esi,DWORD PTR [ebp-0x1c]
  428732:	mov    ecx,DWORD PTR [ebp+0x10]
  428735:	call   0x427889
  42873a:	mov    DWORD PTR [ebp+0xc],eax
  42873d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428744:	mov    eax,DWORD PTR [ebp-0x18]
  428747:	xor    eax,edi
  428749:	lea    ecx,[ebp-0x40]
  42874c:	add    eax,ebx
  42874e:	push   ecx
  42874f:	call   0x427e1b
  428754:	mov    eax,DWORD PTR [ebp+0xc]
  428757:	test   eax,eax
  428759:	je     0x4287a9
  42875b:	mov    eax,DWORD PTR [ebp-0x18]
  42875e:	xor    eax,edi
  428760:	add    eax,ebx
  428762:	push   eax
  428763:	push   DWORD PTR [ebp+0xc]
  428766:	lea    eax,[ebp-0x40]
  428769:	push   eax
  42876a:	call   0x427d11
  42876f:	mov    eax,DWORD PTR [ebp-0x4]
  428772:	mov    DWORD PTR [ebp-0x18],eax
  428775:	mov    eax,DWORD PTR [ebp-0x18]
  428778:	mov    ecx,DWORD PTR [ebp-0x1c]
  42877b:	sub    eax,ecx
  42877d:	mov    DWORD PTR [ebp-0x18],eax
  428780:	mov    eax,DWORD PTR [ebp+0xc]
  428783:	mov    ecx,DWORD PTR [ebp+0xc]
  428786:	mov    eax,DWORD PTR [eax+0x10]
  428789:	add    eax,DWORD PTR [ecx+0xc]
  42878c:	mov    ecx,DWORD PTR [ebp-0x18]
  42878f:	cmp    ecx,eax
  428791:	jb     0x4287a9
  428793:	mov    eax,DWORD PTR [ebp+0xc]
  428796:	mov    eax,DWORD PTR [eax+0xc]
  428799:	mov    ecx,DWORD PTR [ebp+0xc]
  42879c:	add    eax,DWORD PTR [ecx+0x8]
  42879f:	mov    ecx,DWORD PTR [ebp-0x18]
  4287a2:	sub    eax,ecx
  4287a4:	jmp    0x428a97
  4287a9:	push   0xc
  4287ab:	push   DWORD PTR [ebp-0x4]
  4287ae:	lea    eax,[ebp-0x4c]
  4287b1:	push   eax
  4287b2:	call   0x427d11
  4287b7:	mov    eax,0xf89c85a5
  4287bc:	mov    DWORD PTR [ebp-0x2c],eax
  4287bf:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4287c6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4287cd:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  4287d4:	lea    ecx,[ebp-0x2c]
  4287d7:	mov    DWORD PTR [ebp-0xc],ecx
  4287da:	lea    ecx,[ebp-0x30]
  4287dd:	mov    DWORD PTR [ebp-0x10],ecx
  4287e0:	lea    ecx,[ebp-0x34]
  4287e3:	mov    DWORD PTR [ebp+0xc],ecx
  4287e6:	lea    ecx,[ebp-0x38]
  4287e9:	mov    DWORD PTR [ebp-0x14],ecx
  4287ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4287ef:	xor    ecx,edi
  4287f1:	add    ecx,ebx
  4287f3:	mov    DWORD PTR [ebp-0x18],ecx
  4287f6:	jmp    0x4289f2
  4287fb:	cmp    eax,0xf89c85bb
  428800:	je     0x428a04
  428806:	mov    ecx,DWORD PTR [ebp-0x8]
  428809:	xor    ecx,edi
  42880b:	mov    esi,eax
  42880d:	add    ecx,ebx
  42880f:	mov    DWORD PTR [ebp+0x18],ecx
  428812:	mov    eax,DWORD PTR [ebp-0x18]
  428815:	xor    esi,edi
  428817:	lea    eax,[eax+esi*1+0x3272f1]
  42881e:	mov    DWORD PTR [ebp-0x18],eax
  428821:	mov    eax,DWORD PTR [ebp-0x8]
  428824:	mov    ecx,DWORD PTR [ebp-0x18]
  428827:	xor    eax,edi
  428829:	add    eax,ebx
  42882b:	cmp    ecx,eax
  42882d:	jne    0x428842
  42882f:	mov    eax,DWORD PTR [ebp+0x8]
  428832:	xor    eax,edi
  428834:	add    eax,ebx
  428836:	push   eax
  428837:	push   0xc
  428839:	lea    eax,[ebp-0x4c]
  42883c:	push   eax
  42883d:	call   0x4282f6
  428842:	mov    eax,DWORD PTR [ebp-0xc]
  428845:	mov    eax,DWORD PTR [eax]
  428847:	xor    eax,edi
  428849:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428850:	mov    ecx,DWORD PTR [ebp+0x8]
  428853:	xor    ecx,edi
  428855:	movzx  eax,al
  428858:	add    ecx,ebx
  42885a:	cmp    eax,ecx
  42885c:	je     0x4289da
  428862:	mov    eax,DWORD PTR [ebp-0x10]
  428865:	mov    eax,DWORD PTR [eax]
  428867:	xor    eax,edi
  428869:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428870:	mov    ecx,DWORD PTR [ebp+0x8]
  428873:	xor    ecx,edi
  428875:	movzx  eax,al
  428878:	add    ecx,ebx
  42887a:	cmp    eax,ecx
  42887c:	je     0x4289da
  428882:	mov    eax,DWORD PTR [ebp+0xc]
  428885:	mov    eax,DWORD PTR [eax]
  428887:	xor    eax,edi
  428889:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428890:	mov    ecx,DWORD PTR [ebp+0x8]
  428893:	xor    ecx,edi
  428895:	movzx  eax,al
  428898:	add    ecx,ebx
  42889a:	cmp    eax,ecx
  42889c:	je     0x4289da
  4288a2:	mov    eax,DWORD PTR [ebp-0x14]
  4288a5:	mov    eax,DWORD PTR [eax]
  4288a7:	xor    eax,edi
  4288a9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288b0:	mov    ecx,DWORD PTR [ebp+0x8]
  4288b3:	xor    ecx,edi
  4288b5:	movzx  eax,al
  4288b8:	add    ecx,ebx
  4288ba:	cmp    eax,ecx
  4288bc:	je     0x4289da
  4288c2:	mov    eax,DWORD PTR [ebp-0x10]
  4288c5:	mov    eax,DWORD PTR [eax]
  4288c7:	xor    eax,edi
  4288c9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4288d3:	mov    ecx,DWORD PTR [ecx]
  4288d5:	xor    ecx,edi
  4288d7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288de:	xor    al,cl
  4288e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4288e3:	mov    ecx,DWORD PTR [ecx]
  4288e5:	xor    ecx,edi
  4288e7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288ee:	or     al,cl
  4288f0:	mov    ecx,DWORD PTR [ebp-0xc]
  4288f3:	mov    ecx,DWORD PTR [ecx]
  4288f5:	xor    ecx,edi
  4288f7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288fe:	cmp    cl,al
  428900:	jne    0x4289da
  428906:	mov    eax,DWORD PTR [ebp+0xc]
  428909:	mov    eax,DWORD PTR [eax]
  42890b:	xor    eax,edi
  42890d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428914:	mov    ecx,DWORD PTR [ebp-0x10]
  428917:	mov    ecx,DWORD PTR [ecx]
  428919:	xor    ecx,edi
  42891b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428922:	xor    al,cl
  428924:	mov    ecx,DWORD PTR [ebp-0x14]
  428927:	mov    ecx,DWORD PTR [ecx]
  428929:	xor    ecx,edi
  42892b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428932:	or     al,cl
  428934:	mov    ecx,DWORD PTR [ebp-0x10]
  428937:	mov    ecx,DWORD PTR [ecx]
  428939:	xor    ecx,edi
  42893b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428942:	cmp    cl,al
  428944:	jne    0x4289da
  42894a:	mov    eax,DWORD PTR [ebp-0x14]
  42894d:	mov    eax,DWORD PTR [eax]
  42894f:	xor    eax,edi
  428951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428958:	mov    ecx,DWORD PTR [ebp+0xc]
  42895b:	mov    ecx,DWORD PTR [ecx]
  42895d:	xor    ecx,edi
  42895f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428966:	xor    al,cl
  428968:	mov    ecx,DWORD PTR [ebp-0xc]
  42896b:	mov    ecx,DWORD PTR [ecx]
  42896d:	xor    ecx,edi
  42896f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428976:	or     al,cl
  428978:	mov    ecx,DWORD PTR [ebp+0xc]
  42897b:	mov    ecx,DWORD PTR [ecx]
  42897d:	xor    ecx,edi
  42897f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428986:	cmp    cl,al
  428988:	jne    0x4289da
  42898a:	mov    eax,DWORD PTR [ebp-0x14]
  42898d:	mov    eax,DWORD PTR [eax]
  42898f:	xor    eax,edi
  428991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428998:	mov    ecx,DWORD PTR [ebp-0xc]
  42899b:	mov    ecx,DWORD PTR [ecx]
  42899d:	xor    ecx,edi
  42899f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4289a6:	xor    al,cl
  4289a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4289ab:	mov    ecx,DWORD PTR [ecx]
  4289ad:	xor    ecx,edi
  4289af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4289b6:	or     al,cl
  4289b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4289bb:	mov    ecx,DWORD PTR [ecx]
  4289bd:	xor    ecx,edi
  4289bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4289c6:	cmp    cl,al
  4289c8:	jne    0x4289da
  4289ca:	lea    eax,[ebp-0x4c]
  4289cd:	push   eax
  4289ce:	call   0x428495
  4289d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4289d6:	cmp    eax,ecx
  4289d8:	je     0x4289e4
  4289da:	mov    eax,DWORD PTR [ebp+0x8]
  4289dd:	xor    eax,edi
  4289df:	add    eax,ebx
  4289e1:	mov    DWORD PTR [ebp+0x18],eax
  4289e4:	mov    eax,DWORD PTR [ebp-0x8]
  4289e7:	xor    eax,edi
  4289e9:	lea    eax,[eax+esi*1+0x3272f1]
  4289f0:	xor    eax,edi
  4289f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4289f5:	mov    edx,DWORD PTR [ebp+0x18]
  4289f8:	xor    ecx,edi
  4289fa:	add    ecx,ebx
  4289fc:	cmp    edx,ecx
  4289fe:	je     0x4287fb
  428a04:	mov    eax,DWORD PTR [ebp+0x8]
  428a07:	mov    ecx,DWORD PTR [ebp+0x18]
  428a0a:	xor    eax,edi
  428a0c:	add    eax,ebx
  428a0e:	cmp    ecx,eax
  428a10:	jne    0x428a23
  428a12:	mov    eax,DWORD PTR [ebp-0x8]
  428a15:	mov    ecx,DWORD PTR [ebp+0x1c]
  428a18:	xor    eax,edi
  428a1a:	lea    eax,[eax+ecx*1+0x3272f1]
  428a21:	jmp    0x428a9a
  428a23:	push   0x18
  428a25:	push   DWORD PTR [ebp-0x4]
  428a28:	lea    eax,[ebp-0x64]
  428a2b:	push   eax
  428a2c:	call   0x427d11
  428a31:	mov    eax,DWORD PTR [ebp+0x8]
  428a34:	mov    ecx,DWORD PTR [ebp-0x18]
  428a37:	xor    eax,edi
  428a39:	add    eax,ebx
  428a3b:	cmp    eax,ecx
  428a3d:	je     0x428a52
  428a3f:	mov    eax,DWORD PTR [ebp+0x8]
  428a42:	xor    eax,edi
  428a44:	add    eax,ebx
  428a46:	push   eax
  428a47:	push   0x18
  428a49:	lea    eax,[ebp-0x64]
  428a4c:	push   eax
  428a4d:	call   0x4282f6
  428a52:	mov    eax,DWORD PTR [ebp-0x4]
  428a55:	add    eax,0x18
  428a58:	mov    DWORD PTR [ebp+0x18],eax
  428a5b:	push   DWORD PTR [ebp-0x50]
  428a5e:	push   DWORD PTR [ebp+0x18]
  428a61:	mov    eax,DWORD PTR [ebp-0x54]
  428a64:	add    eax,DWORD PTR [ebp-0x20]
  428a67:	push   eax
  428a68:	call   0x427d11
  428a6d:	mov    eax,DWORD PTR [ebp+0x8]
  428a70:	mov    ecx,DWORD PTR [ebp-0x18]
  428a73:	xor    eax,edi
  428a75:	add    eax,ebx
  428a77:	cmp    eax,ecx
  428a79:	je     0x428a8c
  428a7b:	push   0x0
  428a7d:	push   DWORD PTR [ebp-0x50]
  428a80:	mov    eax,DWORD PTR [ebp-0x54]
  428a83:	add    eax,DWORD PTR [ebp-0x20]
  428a86:	push   eax
  428a87:	call   0x4282f6
  428a8c:	mov    eax,DWORD PTR [ebp-0x24]
  428a8f:	mov    ecx,DWORD PTR [ebp-0x50]
  428a92:	add    DWORD PTR [eax],ecx
  428a94:	mov    eax,DWORD PTR [ebp-0x50]
  428a97:	add    eax,DWORD PTR [ebp+0x1c]
  428a9a:	mov    DWORD PTR [ebp+0x1c],eax
  428a9d:	mov    eax,DWORD PTR [ebp-0x8]
  428aa0:	mov    ecx,DWORD PTR [ebp+0x1c]
  428aa3:	xor    eax,edi
  428aa5:	add    eax,ebx
  428aa7:	imul   eax,ecx
  428aaa:	mov    ecx,DWORD PTR [ebp+0x8]
  428aad:	mov    edx,DWORD PTR [ebp-0x28]
  428ab0:	xor    ecx,edi
  428ab2:	lea    ecx,[ecx+edx*1+0x3272f1]
  428ab9:	cmp    eax,ecx
  428abb:	jb     0x428719
  428ac1:	mov    esi,DWORD PTR [ebp+0x14]
  428ac4:	mov    eax,DWORD PTR [ebp-0x20]
  428ac7:	mov    DWORD PTR [esi],eax
  428ac9:	jmp    0x428b10
  428acb:	mov    ecx,DWORD PTR [ebp+0x8]
  428ace:	mov    edx,DWORD PTR [ebp+0xc]
  428ad1:	xor    ecx,edi
  428ad3:	xor    edx,edi
  428ad5:	add    ecx,ebx
  428ad7:	add    edx,ebx
  428ad9:	cmp    ecx,edx
  428adb:	jne    0x428aef
  428add:	mov    eax,ds:0x7f642ddc
  428ae2:	imul   eax,eax,0x9f15fccf
  428ae8:	mov    ds:0x7f642ddc,eax
  428aed:	jmp    0x428b10
  428aef:	mov    ecx,DWORD PTR [ebp+0x8]
  428af2:	xor    ecx,edi
  428af4:	add    ecx,ebx
  428af6:	cmp    eax,ecx
  428af8:	je     0x428b06
  428afa:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428b04:	jmp    0x428b10
  428b06:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428b10:	pop    edi
  428b11:	pop    esi
  428b12:	pop    ebx
  428b13:	leave  
  428b14:	ret    0x18
  428b17:	push   ebp
  428b18:	mov    ebp,esp
  428b1a:	and    esp,0xfffffff8
  428b1d:	mov    eax,DWORD PTR [ebp+0x20]
  428b20:	sub    esp,0x14
  428b23:	push   ebx
  428b24:	mov    ebx,DWORD PTR [ebp+0x14]
  428b27:	push   esi
  428b28:	push   edi
  428b29:	cmp    eax,0xf89c85a5
  428b2e:	jne    0x428b3a
  428b30:	push   0xf89c85ba
  428b35:	jmp    0x428c6c
  428b3a:	mov    eax,DWORD PTR [ebp+0x20]
  428b3d:	cmp    eax,0xf89c85ba
  428b42:	jne    0x428b4e
  428b44:	push   0xf89c85bb
  428b49:	jmp    0x428c6c
  428b4e:	mov    eax,DWORD PTR [ebp+0x20]
  428b51:	cmp    eax,0xf89c85bb
  428b56:	jne    0x428b62
  428b58:	push   0xf89c85b8
  428b5d:	jmp    0x428c6c
  428b62:	mov    eax,DWORD PTR [ebp+0x20]
  428b65:	cmp    eax,0xf89c85b8
  428b6a:	jne    0x428b76
  428b6c:	push   0xf89c85b9
  428b71:	jmp    0x428c6c
  428b76:	mov    ecx,DWORD PTR [ebp+0x20]
  428b79:	mov    eax,0xf89c85bc
  428b7e:	cmp    ecx,eax
  428b80:	jne    0x428c3c
  428b86:	mov    eax,DWORD PTR [ebp+0x10]
  428b89:	mov    DWORD PTR [esp+0xc],eax
  428b8d:	mov    eax,DWORD PTR [ebp+0x18]
  428b90:	mov    DWORD PTR [esp+0x14],eax
  428b94:	mov    eax,DWORD PTR [ebp+0xc]
  428b97:	mov    DWORD PTR [esp+0x18],eax
  428b9b:	mov    eax,DWORD PTR [ebp+0x8]
  428b9e:	mov    DWORD PTR [esp+0x10],eax
  428ba2:	mov    eax,DWORD PTR [esp+0x10]
  428ba6:	mov    ecx,DWORD PTR [esp+0x14]
  428baa:	mov    edi,0x75108aa
  428baf:	xor    eax,edi
  428bb1:	mov    esi,0x3272f1
  428bb6:	add    eax,esi
  428bb8:	mov    DWORD PTR [ecx],eax
  428bba:	mov    eax,DWORD PTR [esp+0xc]
  428bbe:	mov    eax,DWORD PTR [eax+0x194]
  428bc4:	mov    ecx,DWORD PTR [eax]
  428bc6:	mov    eax,DWORD PTR [esp+0xc]
  428bca:	mov    eax,DWORD PTR [eax+0x194]
  428bd0:	mov    eax,DWORD PTR [eax]
  428bd2:	add    eax,DWORD PTR [ecx+0x3c]
  428bd5:	mov    ecx,DWORD PTR [esp+0xc]
  428bd9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428bdf:	mov    ecx,DWORD PTR [ecx+0x14]
  428be2:	push   0x4
  428be4:	push   0x3000
  428be9:	push   DWORD PTR [eax+0x50]
  428bec:	push   0x0
  428bee:	call   ecx
  428bf0:	mov    DWORD PTR [ebx],eax
  428bf2:	mov    eax,DWORD PTR [esp+0x10]
  428bf6:	push   DWORD PTR [esp+0xc]
  428bfa:	xor    eax,edi
  428bfc:	add    eax,esi
  428bfe:	mov    DWORD PTR [esp+0x20],eax
  428c02:	lea    eax,[esp+0x20]
  428c06:	push   eax
  428c07:	push   ebx
  428c08:	push   DWORD PTR [esp+0x20]
  428c0c:	push   DWORD PTR [esp+0x28]
  428c10:	push   DWORD PTR [esp+0x24]
  428c14:	call   0x4285d9
  428c19:	mov    eax,DWORD PTR [esp+0x10]
  428c1d:	mov    ecx,DWORD PTR [ebx]
  428c1f:	xor    eax,edi
  428c21:	add    eax,esi
  428c23:	cmp    ecx,eax
  428c25:	je     0x428c83
  428c27:	mov    eax,DWORD PTR [esp+0x18]
  428c2b:	mov    ecx,DWORD PTR [esp+0x14]
  428c2f:	xor    eax,edi
  428c31:	add    eax,esi
  428c33:	imul   eax,DWORD PTR [esp+0x1c]
  428c38:	mov    DWORD PTR [ecx],eax
  428c3a:	jmp    0x428c83
  428c3c:	mov    ecx,DWORD PTR [ebp+0x20]
  428c3f:	cmp    ecx,0xf89c85b9
  428c45:	jne    0x428c4e
  428c47:	push   0xf89c85be
  428c4c:	jmp    0x428c6c
  428c4e:	mov    ecx,DWORD PTR [ebp+0x20]
  428c51:	cmp    ecx,0xf89c85be
  428c57:	jne    0x428c60
  428c59:	push   0xf89c85bf
  428c5e:	jmp    0x428c6c
  428c60:	mov    ecx,DWORD PTR [ebp+0x20]
  428c63:	cmp    ecx,0xf89c85bf
  428c69:	jne    0x428c83
  428c6b:	push   eax
  428c6c:	push   DWORD PTR [ebp+0x1c]
  428c6f:	push   DWORD PTR [ebp+0x18]
  428c72:	push   ebx
  428c73:	push   DWORD PTR [ebp+0x10]
  428c76:	push   DWORD PTR [ebp+0xc]
  428c79:	push   DWORD PTR [ebp+0x8]
  428c7c:	call   0x428b17
  428c81:	mov    DWORD PTR [ebx],eax
  428c83:	mov    eax,DWORD PTR [ebx]
  428c85:	pop    edi
  428c86:	pop    esi
  428c87:	pop    ebx
  428c88:	mov    esp,ebp
  428c8a:	pop    ebp
  428c8b:	ret    0x1c
  428c8e:	push   ebp
  428c8f:	mov    ebp,esp
  428c91:	sub    esp,0xc
  428c94:	mov    eax,0xf89c85a5
  428c99:	mov    DWORD PTR [ebp-0x8],eax
  428c9c:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428ca3:	mov    ecx,DWORD PTR [ebp-0x8]
  428ca6:	xor    ecx,0x75108aa
  428cac:	add    ecx,0x3272f1
  428cb2:	mov    DWORD PTR [ebp-0x4],ecx
  428cb5:	mov    ecx,DWORD PTR [ebp+0xc]
  428cb8:	push   eax
  428cb9:	mov    DWORD PTR [ebp+0xc],ecx
  428cbc:	push   DWORD PTR [ebp+0xc]
  428cbf:	lea    eax,[ebp-0x4]
  428cc2:	push   DWORD PTR [ebp+0x8]
  428cc5:	push   eax
  428cc6:	push   DWORD PTR [ebp+0xc]
  428cc9:	push   DWORD PTR [ebp-0xc]
  428ccc:	push   DWORD PTR [ebp-0x8]
  428ccf:	call   0x428b17
  428cd4:	mov    DWORD PTR [ebp-0x4],eax
  428cd7:	mov    eax,DWORD PTR [ebp-0x4]
  428cda:	leave  
  428cdb:	ret    0x8
